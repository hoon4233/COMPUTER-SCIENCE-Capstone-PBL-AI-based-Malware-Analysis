push
in
xchg
sub
cmp
sbb
and
adc
pusha
sbb
or
sbb
xor
add
dec
or
push
sbb
cmp
adc
sbb
and
xchg
inc
and
sbb
scas
jge
inc
scas
popa
adc
push
xor
cmp
push
sbb
sub
scas
xor
adc
ins
xor
sbb
repz
dec
aad
ror
add
cmp
cmp
ja
dec
xor
jbe
dec
stos
or
and
imul
fs
cmp
lock
lds
sar
xor
xor
out
cmp
pop
bound
cmp
sub
and
mov
jbe
jl
lds
in
lds
mov
outs
cmps
(bad)
jecxz
mov
mov
adc
dec
popa
xor
ja
scas
jl
in
and
sbb
adc
pop
scas
ins
lock
es
and
dec
xor
or
cmp
scas
or
(bad)
cmp
ret
test
cmp
data16
inc
cdq
jo
sbb
jp
inc
push
stc
push
sbb
fcmovnb
jecxz
loopne
xchg
or
out
jecxz
cmps
std
adc
sub
bound
ins
xchg
outs
scas
inc
adc
sub
push
stos
sar
fcmovnb
sub
jmp
sub
ja
mov
sub
mov
and
sbb
and
pop
mov
std
adc
in
cmp
jbe
jnp
outs
and
sbb
sub
jne
and
lahf
mov
and
test
imul
data16
jae
data16
fsubr
or
(bad)
cmp
inc
pop
cmp
and
sbb
jnp
inc
out
enter
sbb
imul
shl
(bad)
or
jecxz
jl
sbb
mov
cwde
sbb
and
dec
out
rcl
cmp
or
and
js
add
sbb
and
lock
outs
dec
out
inc
ror
sbb
sbb
std
adc
jbe
dec
cmp
jnp
push
add
lods
and
rcr
and
jecxz
or
pop
data16
(bad)
cmp
push
add
pop
lods
sbb
(bad)
cmp
push
push
cmp
lods
je
ss
jae
data16
fild
xchg
sbb
and
sbb
lods
fsub
mov
data16
dec
fstp
jmp
lods
mov
xchg
mov
dec
cmp
dec
cmp
cmp
int3
sub
mov
ficomp
sbb
rcr
xchg
jecxz
mov
cdq
lods
(bad)
lahf
popf
fisttp
in
je
and
cdq
xchg
xchg
(bad)
jecxz
dec
xor
and
cdq
sahf
xchg
(bad)
jecxz
ja
cmc
adc
popf
mov
add
ja
sbb
and
sub
test
in
fcmovb
dec
mov
cmp
cmps
std
adc
(bad)
sbb
push
cmp
cmps
rol
in
sub
ret
mov
mov
add
adc
or
cmp
aad
jno
stc
aaa
je
dec
fxch
unpckhps
(bad)
jnp
and
xchg
and
imul
imul
sbb
push
xor
mov
mov
and
adc
cmps
iret
pop
jecxz
cmp
imul
(bad)
imul
inc
sbb
lods
jmp
adc
rol
nop
push
cmp
lahf
sbb
cmp
pushf
cmp
and
adc
data16
fsub
jnp
aad
jno
stc
in
xor
ds
sub
lods
jl
out
jecxz
pop
call
jbe
fisttp
push
xor
xor
sbb
loop
jmp
(bad)
imul
and
or
push
(bad)
pop
cmp
loop
imul
and
fmul
iret
xor
and
mov
cmp
fbstp
lods
fcomp
xor
shr
mov
mov
push
out
dec
sahf
fstp
shl
lahf
add
cmp
or
mov
addr16
dec
sahf
fstp
shl
sub
and
cmp
in
jno
adc
and
adc
xor
and
out
aad
aam
fs
in
out
or
popa
int
and
pop
xchg
push
cmp
and
shl
ficomp
in
popa
leave
xchg
and
jle
xchg
cmps
icebp
jecxz
movs
add
and
and
mov
outs
lods
clc
lahf
scas
fstp
pop
and
jl
imul
cmp
jg
fbstp
lods
fsub
pop
dec
sbb
ja
dec
in
push
xor
cdq
call
popa
in
mov
mov
dec
out
mov
and
and
mov
outs
lods
clc
lahf
scas
fstp
pop
and
jmp
loop
sbb
lea
jmp
ss
dec
aam
dec
outs
scas
sub
sbb
pop
sti
inc
imul
mov
mov
sahf
fcmovnb
jecxz
mov
into
mov
out
mov
mov
call
in
mov
fcmovnb
sbb
mov
inc
cmp
sar
in
jns
(bad)
fcomp
inc
and
jmp
fdiv
loopne
rcl
cmp
scas
inc
adc
div
jne
fst
in
add
mov
aas
lods
sti
lahf
movs
inc
mov
push
bound
ret
mov
outs
loop
add
scas
jl
out
popa
int
and
into
jns
lods
jl
out
popa
lds
jg
fbstp
lods
fmul
ja
dec
in
jns
(bad)
fmul
aaa
call
sub
push
rcl
cmp
scas
inc
adc
div
jne
fst
in
add
mov
aas
lods
sti
lahf
movs
inc
mov
push
bound
ret
add
add
mov
sahf
lods
jl
cdq
and
and
mov
outs
loop
add
jnp
inc
scas
out
xchg
xor
xor
sub
and
lods
sti
sub
cdq
and
and
mov
lea
mov
outs
sub
xor
imul
jns
push
les
sbb
adc
lock
lods
fmul
ja
dec
in
push
xor
out
fmul
in
jecxz
sbb
nop
jnp
cdq
push
xor
sbb
int3
jg
cdq
(bad)
adc
cmp
pop
(bad)
mov
call
jecxz
cmps
std
cmp
ret
mov
sahf
lods
inc
jg
fbstp
lods
fmul
ja
dec
in
jns
mov
fisubr
ficom
cdq
push
xor
dec
push
cmp
loop
sbb
and
jecxz
and
dec
xor
dec
adc
and
sbb
(bad)
dec
sbb
pushf
jl
data16
sti
out
popa
rcl
lods
leave
inc
cmp
fbstp
lods
fmul
jb
xchg
adc
outs
push
mov
xchg
mov
add
lds
sbb
das
cwde
add
cmp
(bad)
dec
outs
scas
jg
cdq
push
cmp
adc
and
sub
cmp
dec
outs
lods
shr
lods
jl
out
jecxz
lds
and
inc
cmp
fbstp
lods
fcomp
xor
add
inc
lods
shl
and
jp
and
sbb
xchg
test
ss
sub
and
rcl
movs
lods
rcr
sub
mov
mov
push
lods
xchg
jbe
dec
cmp
xor
out
out
fsubr
and
dec
das
out
aam
fsub
push
mov
pusha
fisttp
xchg
jbe
sub
sbb
out
rep
cmp
in
(bad)
imul
or
es
ss
sahf
and
rcr
cdq
fcmovnb
inc
push
in
inc
cmp
rol
rcl
xor
push
call
out
and
nop
jnp
cdq
fstp
sbb
and
sbb
test
and
add
sub
xchg
and
call
movs
es
cmps
add
lds
sbb
cmp
add
cmp
(bad)
dec
outs
movs
rcl
inc
mov
push
jecxz
and
xchg
jecxz
(bad)
loop
je
imul
push
sbb
test
cdq
fcmovb
dec
mov
ret
cmps
std
adc
(bad)
sbb
push
xor
pop
data16
inc
addr16
popf
xchg
shl
sbb
movs
retf
and
xchg
and
imul
cdq
jae
xchg
and
mov
cwde
push
and
lds
mov
mov
and
nop
jnp
cdq
fstp
sbb
or
cdq
mov
out
sbb
nop
jnp
in
popa
int
arpl
pop
push
ds
inc
pop
lea
and
pusha
shl
xchg
and
mov
sbb
and
loope
and
inc
out
cld
or
out
out
(bad)
les
sbb
popa
rcl
cmp
adc
mov
movs
bound
sbb
xor
jecxz
add
pop
call
les
cmps
inc
loopne
push
ins
je
xchg
push
in
pop
scas
jl
ss
add
jb
cmp
and
pop
call
xor
jecxz
(bad)
loop
je
add
cmp
(bad)
mov
and
sbb
popa
lds
arpl
pop
data16
sbb
scas
jl
pop
mov
dec
and
xlat
mov
and
xchg
push
xor
ss
or
xor
pop
sahf
scas
jl
pop
popa
rcl
or
sbb
lds
sbb
xor
rcr
xchg
jecxz
(bad)
loop
lods
cli
inc
cmp
fbstp
lods
fcomp
xor
mov
sbb
shl
inc
data16
jns
and
pop
outs
movs
add
mov
cmp
and
cmp
and
out
out
fmul
sti
out
popa
rcl
or
sub
scas
jl
in
pusha
cmp
pop
adc
in
lds
daa
cmp
fwait
pop
data16
and
and
fsubr
shr
lods
jl
out
jecxz
sbb
xchg
data16
push
jmp
(bad)
fcom
and
popa
call
pop
xchg
and
rcl
fdivr
in
jecxz
jns
and
(bad)
out
fmul
sti
out
popa
rcl
push
cmp
div
adc
and
and
cmp
lahf
add
cmp
mov
movs
add
das
cdq
fcmovnb
lahf
add
cmp
imul
mov
jno
and
out
stos
or
push
sbb
and
sbb
push
sbb
and
sbb
dec
cmp
or
xchg
and
push
push
or
push
sbb
int3
(bad)
data16
pop
outs
lods
clc
lahf
scas
fstp
pop
and
sti
jbe
test
(bad)
imul
push
sbb
dec
cmp
fs
leave
cld
and
(bad)
imul
ret
mov
xchg
scas
jl
out
jecxz
imul
in
cli
dec
out
rol
inc
dec
cmp
pop
daa
add
xchg
dec
sbb
rcr
xchg
jecxz
(bad)
loop
lods
cli
popf
movs
and
sbb
loop
loope
fcmovb
sbb
rcr
data16
pop
jo
and
cdq
xchg
fcmovnb
jecxz
mov
imul
aas
sub
xor
lods
loope
mov
int3
pop
ins
data16
jno
and
xchg
jecxz
(bad)
loop
lods
loope
mov
call
mov
dec
mov
ret
cmps
std
adc
sbb
push
data16
(bad)
out
mov
mov
jmp
(bad)
cwde
fld
cli
xchg
ss
add
xor
call
jmp
lods
mov
xchg
movs
test
(bad)
dec
push
inc
fcomp
scas
mov
dec
in
sbb
or
cmp
lods
jl
outs
in
cdq
push
sub
sbb
out
dec
data16
cdq
cmps
fcmovnb
jecxz
test
xchg
pop
fld
out
popa
lds
outs
and
je
test
cdq
xchg
stc
jecxz
fcmovnbe
in
fcmovnb
lahf
mov
lods
test
cdq
fcmovb
xchg
jecxz
(bad)
loop
xchg
and
mov
dec
cld
mov
jmp
xchg
cwde
fld
cli
xchg
ss
add
xor
pop
call
sbb
inc
mov
jecxz
sub
pushf
fcmovnu
(bad)
loop
and
cwde
sti
and
sbb
and
cmp
cdq
je
mov
mov
lods
test
movs
mov
mov
pop
fcmovnb
sbb
sub
adc
mov
jns
jmp
(bad)
imul
push
sbb
cmps
std
adc
mov
fisub
imul
and
and
nop
jnp
sub
movs
hlt
sbb
dec
cmp
jnp
push
je
pop
data16
adc
cdq
fstp
jecxz
and
cmp
cmp
cdq
jae
adc
sub
cdq
and
push
cdq
fcmovb
sbb
addr16
clc
cld
and
push
dec
(bad)
gs
mov
(bad)
jecxz
loopne
and
add
push
popf
fstp
test
(bad)
dec
mov
int3
jecxz
cmps
std
adc
(bad)
sbb
push
xor
jecxz
(bad)
loop
and
cmp
jnp
push
je
pop
data16
lahf
jmp
push
(bad)
jecxz
and
cmp
cmp
cdq
jae
xchg
xchg
fcmovnb
lahf
mov
and
push
cdq
fcmovb
sbb
addr16
call
gs
add
(bad)
jecxz
loopne
and
add
push
popf
fstp
test
(bad)
dec
mov
jecxz
cmps
std
adc
(bad)
sbb
push
xor
jecxz
(bad)
loop
and
loope
test
(bad)
xchg
movs
dec
cmp
jnp
push
je
pop
data16
das
jmp
push
(bad)
jecxz
and
push
mov
fstp
sbb
and
sbb
dec
imul
sub
cdq
and
push
cdq
fcmovb
sbb
addr16
inc
cld
and
push
dec
(bad)
gs
stos
rol
jecxz
loopne
and
pusha
push
sbb
test
cdq
fcmovb
dec
mov
std
adc
(bad)
sbb
push
and
addr16
dec
cld
and
mov
fcmovnb
jecxz
int3
stos
call
push
(bad)
jecxz
and
push
mov
fstp
sbb
and
out
sub
cmp
fstp
imul
cmp
mov
imul
aas
iret
sub
arpl
and
(bad)
cmp
out
cld
or
out
out
cdq
fcmovnb
jecxz
int
sbb
mov
sbb
mov
imul
cdq
jae
xchg
and
xor
imul
(bad)
jecxz
scas
mov
dec
in
sbb
dec
inc
lods
jl
out
cld
cmp
out
out
popa
call
sbb
sub
popf
xchg
mov
cmps
pushf
int3
cdq
fcmovb
sbb
cdq
and
call
movs
cli
aaa
sbb
jp
mov
cs
mov
cmp
and
cdq
out
fcmovnb
jecxz
test
(bad)
dec
in
mov
imul
out
mov
mov
jmp
in
jecxz
fld
test
sbb
mov
imul
out
popa
lds
bound
xchg
jecxz
(bad)
loop
je
cdq
mov
(bad)
jecxz
scas
add
icebp
hlt
cmp
lods
jl
out
cld
cmp
out
out
popa
call
sbb
mov
imul
cdq
jae
xchg
and
xor
imul
cmp
fcmovnb
jecxz
scas
mov
dec
in
sbb
dec
pop
lods
jl
fiadd
sbb
rcr
xchg
jecxz
(bad)
loop
lods
cli
lahf
sbb
cmp
jecxz
cmp
test
(bad)
dec
in
mov
imul
mov
cmps
inc
loopne
sub
lea
sbb
cmps
pushf
in
cdq
fcmovb
sbb
xchg
shl
fist
(bad)
cmp
cdq
je
sub
mov
fcmovnb
jecxz
int
pop
data16
sbb
iret
push
sbb
movs
retf
and
jecxz
enter
test
(bad)
dec
push
inc
fstp
test
(bad)
dec
mov
push
sbb
cmps
std
or
cld
adc
out
out
fninit
lods
(bad)
loop
cmp
cdq
lods
mov
xchg
jecxz
(bad)
loop
je
test
in
sub
data16
mov
cwde
fstp
movs
bound
sbb
xor
jecxz
or
adc
dec
cmp
cmps
pushf
mov
out
(bad)
push
data16
cdq
ret
jecxz
dec
mov
cdq
cli
fcmovnb
jecxz
scas
add
jb
cmp
and
pop
call
sbb
movs
retf
and
xchg
jecxz
(bad)
loop
je
cdq
ret
jecxz
scas
add
xor
pop
call
sbb
cmps
pushf
mov
fcmovb
sbb
lds
sbb
dec
cmp
call
sub
mov
fstp
sbb
mov
mov
push
fcmovnb
jecxz
mov
imul
out
ret
sbb
and
out
ret
test
(bad)
lahf
mov
sti
fbld
cmp
xlat
pushf
xchg
fild
mov
cdq
jae
xchg
and
sub
lods
mov
xchg
movs
cmps
inc
loopne
sub
ret
mov
mov
loop
(bad)
jecxz
dec
dec
std
and
mov
out
(bad)
jecxz
scas
add
jb
cmp
and
pop
call
sbb
cmps
test
imul
(bad)
jecxz
dec
cmp
rcl
(bad)
loop
scas
mov
dec
in
sbb
dec
inc
lods
jl
out
cld
adc
out
out
popa
call
sbb
cmps
test
(bad)
adc
mov
mov
jecxz
sub
xchg
jecxz
(bad)
loope
je
test
mov
jecxz
cmps
std
adc
jecxz
xchg
fstp
cdq
movs
cli
mov
fstp
loope
and
cwde
jmp
mov
cmp
and
sbb
(bad)
ss
fs
and
mov
fcmovnb
jecxz
int3
pop
jbe
and
fdiv
mov
cdq
fcmovb
lahf
scas
fstp
pop
and
mov
popf
lea
and
data16
jecxz
(bad)
loope
je
cdq
sahf
fcmovnb
jecxz
mov
(bad)
dec
mov
std
adc
mov
fcmovnb
jecxz
dec
popa
cld
and
mov
fcmovnb
jecxz
int3
repz
and
fdiv
retf
and
lahf
(bad)
dec
sbb
mov
imul
out
mov
mov
cdq
mov
mov
(bad)
fcmovnb
jecxz
mov
ss
imul
jecxz
mov
imul
cwde
fld
push
fld
cdq
mov
mov
sbb
jecxz
mov
ss
mov
(bad)
jecxz
cdq
leave
jecxz
fstp
imul
(bad)
sbb
add
sbb
rcr
xchg
jecxz
(bad)
loop
lods
cli
xchg
jecxz
(bad)
loop
je
sub
jb
lahf
fcomi
(bad)
loop
and
adc
mov
imul
cwde
fstp
push
cdq
fcmovb
dec
in
adc
dec
outs
scas
mov
dec
in
adc
dec
outs
scas
mov
dec
in
adc
dec
outs
lods
loope
mov
(bad)
(bad)
loop
je
sub
jb
cmc
inc
rol
jecxz
jp
aad
jno
stc
or
push
cwde
shl
je
xor
sbb
test
sbb
and
js
add
sbb
and
lock
outs
dec
out
inc
rcr
and
add
cld
(bad)
jno
mov
data16
loopne
and
sbb
popa
fst
inc
and
je
cmp
das
push
sbb
cmps
std
sbb
cmps
add
shl
sbb
cli
shr
cdq
fcmovnb
test
cmp
inc
rcr
and
and
mov
mov
lods
dec
ror
(bad)
jecxz
jnp
inc
imul
cmp
and
aad
and
dec
out
shr
jae
xor
jl
out
jecxz
pushf
shl
jbe
dec
cmp
jns
or
push
sbb
dec
pop
sbb
lods
dec
ret
pop
sbb
jnp
fbstp
lods
fcomp
in
jns
mov
out
aam
in
out
loop
sbb
nop
jnp
out
std
mov
sbb
lods
leave
sbb
inc
cmp
pop
data16
cmp
js
cmps
sbb
mul
mov
and
sbb
and
sbb
mov
cmp
in
js
data16
daa
and
stos
arpl
sub
jmp
sbb
and
xchg
adc
add
imul
data16
cmp
arpl
pop
adc
pop
add
mov
fs
sahf
and
cmp
pop
cmp
sub
and
jns
addr16
cdq
dec
cmp
and
daa
and
push
daa
and
sbb
js
lea
(bad)
sbb
js
out
aam
cli
out
popa
int
mov
and
sbb
js
(bad)
fidivr
sbb
fstp
shl
jmp
dec
sbb
shl
gs
popf
nop
fstp
sbb
movs
xor
stc
cmp
mov
mov
and
sub
arpl
pop
data16
push
in
pop
gs
popf
nop
bound
sbb
movs
xor
stc
cmp
(bad)
sub
jecxz
sar
stc
cmp
and
fmul
movs
(bad)
jge
and
pushf
imul
data16
pop
jmp
mov
pop
(bad)
jecxz
sar
stc
cmp
(bad)
xchg
cmp
lods
leave
xor
imul
and
mov
cmp
xchg
(bad)
jecxz
sar
stc
cmp
adc
or
(bad)
lods
cmp
movs
xlat
adc
and
pushf
imul
data16
sbb
mov
cmp
scas
(bad)
jecxz
fstp
shl
jecxz
sbb
pop
lods
leave
sbb
imul
data16
addr16
mov
and
and
add
sub
adc
js
es
sbb
and
lock
cmp
pop
mov
cmp
test
daa
and
sbb
jns
(bad)
call
daa
and
sbb
js
(bad)
data16
shl
lahf
arpl
pop
data16
xchg
or
cmp
stc
cmp
(bad)
scas
cmp
adc
cmp
sub
and
sbb
lods
icebp
pop
in
and
dec
(bad)
cmp
shl
imul
pop
ds
mov
add
data16
pusha
daa
sbb
sbb
and
es
add
imul
data16
cdq
and
and
shl
(bad)
enter
and
cmp
inc
fstp
stc
cmp
mov
cmp
or
(bad)
jne
sbb
movs
iret
mov
and
jecxz
push
lea
sar
stc
cmp
std
sbb
and
aam
scas
cmp
out
aam
in
out
loop
stos
arpl
add
sbb
and
pop
popf
sub
sbb
les
xchg
and
ss
and
add
data16
adc
lods
cmp
movs
inc
out
push
aas
jecxz
sub
pop
movs
xlat
add
cmp
shl
and
and
sbb
das
cwde
pop
jmp
sbb
cmps
add
jmp
push
adc
mov
dec
out
ret
sbb
push
jns
fs
jp
sbb
cmp
add
cmp
loop
aam
scas
cmp
imul
mov
pushf
movs
inc
out
push
xor
sbb
cmp
cmps
cmp
mul
out
aam
in
out
loop
cmp
jns
iretw
and
push
jns
in
and
sbb
mov
adc
cmp
pop
and
(bad)
out
bound
data16
cmp
jns
iretw
and
push
jns
in
and
sbb
call
cmp
pop
and
(bad)
cdq
and
and
mov
dec
cld
call
fs
scas
out
xchg
xor
xor
adc
sub
sbb
nop
jnp
push
sub
dec
inc
data16
fisttp
aaa
sbb
rcr
cmp
pop
data16
ins
cmp
mov
fisub
sbb
rcr
xchg
and
mov
push
sbb
dec
cmp
mov
push
outs
sbb
rcr
and
mov
push
jp
pop
data16
sub
and
mov
cmp
fbstp
lods
fcomp
xor
mov
addr16
mov
cdq
and
and
push
cwde
fsub
xchg
and
pop
data16
hlt
jle
cmp
cld
cmp
out
out
jns
and
pop
into
lods
jl
mov
and
popf
lea
pop
in
cmps
pop
loopne
fstp
shl
lahf
add
cmp
movs
cmps
pop
enter
les
cmp
popa
in
data16
movs
add
cmp
(bad)
mov
(bad)
lods
cli
xchg
arpl
pop
lods
jl
cdq
and
and
(bad)
pop
(bad)
cmp
pushf
push
inc
data16
(bad)
out
popa
lods
xchg
movs
jecxz
test
and
sbb
inc
sbb
hlt
sbb
and
out
ret
test
cmp
and
pop
xor
mov
or
out
out
pop
cli
je
sbb
popa
popf
dec
or
push
sbb
and
cdq
push
(bad)
cli
inc
cmp
popa
cdq
dec
cdq
push
popf
xchg
and
jge
and
sbb
nop
jnp
or
(bad)
imul
dec
cmp
clc
mov
sbb
pushf
repnz
data16
(bad)
out
popa
test
clc
mov
fs
fstp
shl
xchg
and
imul
xor
mov
(bad)
pusha
movs
sar
cmp
fbstp
lods
fcomp
call
loopne
popa
fst
sub
xchg
and
mov
xchg
scas
je
out
imul
sub
out
popa
shl
dec
cmp
test
jl
fisttp
and
pop
xchg
je
jecxz
push
xor
jae
cmps
pop
scas
jl
lea
mov
sbb
in
cli
dec
out
shr
and
jns
shl
push
lea
fisttp
fcmovnb
or
js
faddp
inc
sbb
rcr
xchg
and
mov
cmp
cli
dec
out
sar
in
push
xor
adc
ss
bound
add
data16
imul
add
data16
imul
add
data16
imul
add
data16
imul
add
data16
adc
cmp
scas
jl
jmp
cmp
in
xor
xchg
jb
call
and
stos
and
ss
bound
pop
mov
jb
add
imul
(bad)
sti
adc
lods
cmp
lods
ret
lahf
mov
ss
jb
add
adc
out
into
cmp
shl
das
and
sahf
cmps
rcr
imul
addr16
popa
(bad)
ja
sub
data16
inc
cmp
adc
jno
ja
xor
data16
hlt
cmp
sbb
popa
rcr
test
ret
lahf
mov
adc
gs
rcr
scas
jl
jmp
cmp
fdivr
scas
ins
call
data16
test
stc
or
sbb
fisub
sbb
sub
sub
push
lea
movs
add
xchg
sahf
ins
mov
push
out
fdivr
sbb
jns
sahf
cmps
rcr
out
aas
sbb
adc
adc
and
and
push
sub
fsub
sbb
das
mov
in
cmp
pop
and
pop
and
dec
pop
and
sbb
and
pop
sbb
imul
sbb
push
adc
in
int3
cmp
lods
rcr
es
pop
out
fdivr
sbb
rcr
and
sbb
cmp
push
push
lahf
scas
(bad)
packsswb
adc
addr16
mov
in
popa
sub
sahf
cmps
rcr
in
jno
xchg
jb
cmp
and
and
dec
dec
out
fdiv
pop
and
imul
es
and
fdivr
sbb
or
imul
cmp
push
and
cmp
mov
and
xchg
xor
dec
jne
cmp
in
cmp
sbb
and
popf
cdq
and
sbb
sub
inc
cmp
fbstp
lods
fcomp
xor
cmp
shl
xchg
adc
add
rcr
out
pop
sbb
sub
cmp
push
enter
cmp
push
sub
popa
xor
sbb
loop
les
cmps
call
cdq
and
and
ss
xor
(bad)
fs
add
sbb
push
hlt
loop
(bad)
jecxz
fstp
shl
adc
and
and
add
inc
cmps
pop
loopne
iret
aaa
xchg
mov
xor
xchg
jb
(bad)
pop
call
pop
call
add
and
xchg
and
cmp
out
(bad)
cmp
dec
hlt
mov
addr16
cmp
out
popa
int
and
cmp
cmp
out
push
mov
scas
(bad)
int3
out
fidivr
(bad)
addr16
mov
in
and
cmc
jmp
daa
sbb
jbe
cmp
shl
lahf
scas
fist
in
jo
sbb
mov
in
and
xchg
bound
cmp
and
dec
imul
popa
mov
call
inc
cmp
rol
stos
jl
sbb
jb
hlt
mov
mov
cmp
fidivr
sbb
and
sbb
push
ds
(bad)
out
cdq
and
(bad)
jecxz
cmps
cmp
shl
sbb
cdq
fcmovb
cdq
fstp
imul
(bad)
jecxz
sbb
fisub
sbb
test
(bad)
jecxz
push
sub
shl
mov
pop
es
push
lea
stos
repz
(bad)
jecxz
lods
lods
mov
fcmovnb
ja
sub
data16
mov
and
xchg
repz
jecxz
lods
cmp
sbb
xchg
lods
out
mov
(bad)
ja
cmp
data16
(bad)
lods
lods
mov
push
xor
daa
and
stc
ds
xchg
repz
cdq
lods
cmp
sbb
mov
cmp
shl
push
fdivr
add
sbb
sub
jecxz
(bad)
jecxz
and
stos
repz
(bad)
jecxz
in
push
in
sub
mul
imul
(bad)
jecxz
in
push
in
xor
jmp
xchg
repz
cdq
fstp
shl
pushf
fcmovnb
out
cdq
and
cwde
icebp
and
shl
lods
mov
jecxz
push
lea
scas
lods
enter
xchg
mov
ror
cmps
(bad)
das
xchg
mov
and
cdq
xchg
retf
(bad)
jecxz
fcmovnbe
cmp
data16
mov
and
xchg
mov
ret
rcr
jle
movs
and
sbb
pop
movs
call
mov
mov
dec
mov
sbb
fstp
shl
lahf
ret
enter
and
nop
data16
je
fstp
sbb
xchg
aad
cdq
fcmovnb
test
mov
ret
jecxz
cmps
std
adc
popa
lds
ret
movs
out
cdq
and
and
data16
out
(bad)
clc
mul
push
gs
xchg
push
sahf
mov
mov
adc
cmp
popf
cdq
fstp
sbb
push
ss
mov
and
cdq
out
(bad)
jecxz
push
fbld
cmp
fistp
in
data16
stos
cdq
push
(bad)
faddp
jecxz
movs
mov
sbb
and
out
cdq
or
jecxz
and
cdq
mov
(bad)
jecxz
mov
(bad)
sbb
nop
jnp
cdq
xchg
loope
cdq
fcmovnbe
and
es
cmp
xchg
lods
out
mov
(bad)
fld
test
lods
lods
call
ret
rcl
jecxz
and
mov
(bad)
cmp
cmps
lds
pop
sub
mov
ja
mov
mov
(bad)
jecxz
mov
repz
(bad)
(bad)
lods
loopne
(bad)
es
std
fs
je
addr16
mov
call
fcmovnbe
(bad)
jecxz
and
sbb
push
mov
arpl
pop
data16
test
mov
jg
inc
(bad)
hlt
into
jb
sbb
mov
mov
xor
data16
xchg
repz
sti
fs
(bad)
cli
(bad)
jecxz
mov
mov
(bad)
cli
(bad)
jecxz
out
pop
lods
mov
xchg
jecxz
out
cdq
scas
lods
mov
lods
mov
xchg
jecxz
out
cdq
scas
mov
xchg
jecxz
out
cdq
dec
and
jecxz
je
test
mov
sbb
scas
mov
and
cdq
push
jp
jecxz
out
cdq
lods
mov
sbb
cdq
movs
test
mov
out
sbb
and
jbe
scas
lods
test
fcmovnb
fisttp
out
cdq
in
adc
xor
addr16
mov
sti
(bad)
jecxz
mov
jnp
imul
mov
mov
test
mov
jae
lods
pop
sub
jecxz
(bad)
cmp
es
mov
and
sbb
jbe
and
and
xchg
jecxz
out
cdq
sub
cmp
movs
inc
adc
sub
xchg
jecxz
(bad)
jecxz
sub
sbb
push
ss
sbb
adc
sbb
sbb
int
sbb
xchg
retf
(bad)
jecxz
xor
mov
mov
and
jecxz
mov
cmp
cdq
and
jecxz
aam
pushf
pop
and
xor
aam
hlt
movs
add
cmp
pushf
pop
and
or
aam
hlt
bound
in
in
cmp
pop
and
adc
arpl
pop
sub
jecxz
(bad)
cmp
cdq
fstp
jecxz
sub
sbb
push
das
xchg
bound
cmp
and
hlt
cdq
test
mov
mul
lods
into
imul
mov
sbb
jno
sub
cdq
ffree
cdq
fisttp
out
call
mov
ret
clc
(bad)
fs
test
ret
jecxz
and
pushf
pop
sbb
sbb
and
imul
cmp
push
daa
pushf
pop
sbb
sbb
and
imul
cmp
push
xor
and
push
imul
pushf
pushf
sbb
push
xchg
retf
(bad)
jecxz
fisttp
shl
out
cdq
int3
dec
in
fstp
(bad)
mov
mov
retf
(bad)
jecxz
scas
lods
call
test
mov
cmps
int
fld
scas
mov
jecxz
and
jecxz
rcl
jecxz
movs
test
mov
(bad)
sbb
and
outs
mov
cmp
shl
cmc
dec
fadd
jecxz
mov
cmp
shl
push
fdivr
add
sbb
sub
cmp
fbstp
lods
fcomp
xor
shl
lds
popf
or
sub
and
pop
cdq
and
or
(bad)
movs
ja
cmp
lods
jl
out
popa
icebp
jmp
call
jl
jmp
loope
push
mov
ss
and
mov
push
mov
pop
popfw
ds
and
mov
pop
and
pushf
pop
inc
dec
adc
scas
jl
out
out
fsubrp
jno
fisub
fidivr
div
cmp
shl
and
fisubr
movs
jl
(bad)
iret
xor
fisubr
outs
and
loope
int
sbb
and
pop
imul
mov
data16
pop
sahf
mov
jl
sub
sbb
sbb
and
jle
xchg
jp
inc
in
sbb
cmps
rcr
pop
cdq
and
mov
in
ds
pushf
and
in
cmp
outs
cmps
rcr
pop
cdq
and
iret
pop
addr16
adc
les
lahf
sahf
and
popa
(bad)
pop
in
popa
rcl
fdiv
stos
and
and
and
and
sbb
and
stos
gs
sbb
and
push
nop
cmp
adc
mov
pop
fwait
and
ss
xor
(bad)
jecxz
popa
lds
xchg
ins
loopne
pusha
sub
adc
mov
push
out
lds
adc
mov
sbb
sub
sbb
push
cmp
adc
popa
mov
lock
lods
fmul
jae
imul
mov
sbb
fstp
sbb
jb
sbb
and
lods
enter
jns
pop
and
(bad)
imul
add
fisub
adc
sbb
and
cdq
and
or
out
out
inc
cmp
rol
inc
jne
sbb
jae
movs
or
adc
jecxz
out
cdq
lods
(bad)
xor
adc
outs
jecxz
sub
cdq
data16
(bad)
jecxz
int3
das
dec
data16
cdq
data16
(bad)
jecxz
int3
ss
and
fdiv
shr
jnp
aad
jno
stc
xor
mov
sbb
and
sbb
push
xor
int3
cmps
dec
data16
inc
movs
jno
stc
in
xor
mov
cmp
popf
xchg
push
cmp
cmp
daa
push
sbb
daa
push
sbb
and
jecxz
sub
add
cmp
adc
dec
sbb
popa
xor
in
ret
mov
xchg
lods
(bad)
sub
data16
sbb
and
xchg
movs
cmps
stc
or
dec
jns
mov
popa
lds
dec
cmp
outs
scas
jl
out
popa
int
pusha
test
int
adc
push
adc
outs
hlt
scas
jne
sbb
int3
ror
mov
call
xchg
mov
out
xchg
xor
xor
mov
fdiv
and
pushf
data16
jbe
dec
cmp
dec
cmp
in
imul
mov
out
jo
data16
loop
push
cmp
jbe
dec
cmp
jb
popf
aaa
and
xchg
and
mov
in
(bad)
pop
out
cmp
fnsave
dec
call
hlt
stos
jne
sbb
and
pop
call
pop
data16
movs
aaa
and
popf
xchg
cld
adc
jb
dec
ss
movs
addr16
sbb
jp
aad
jno
stc
in
xor
adc
xor
jmp
lods
jl
out
jecxz
sbb
movs
cmp
dec
cmp
je
and
fcomp
je
sbb
loop
in
ret
mov
xchg
lods
(bad)
lahf
cwde
fisttp
in
xor
push
sbb
and
hlt
xor
and
pop
call
adc
int3
pop
dec
data16
in
fdiv
push
data16
fsub
jnp
aad
jno
stc
aaa
ja
dec
in
push
xor
and
sar
gs
sbb
adc
ds
and
sbb
push
int
cdq
push
xor
sbb
pop
push
movs
dec
loopne
cmp
push
pop
fstp
int3
push
dec
data16
fdiv
loop
jne
(bad)
sbb
push
sub
ja
sbb
loopne
pop
pop
jns
pusha
mov
add
fisub
pop
pop
pop
pop
xor
xor
cmp
dec
ja
sbb
loopne
xchg
and
mov
addr16
dec
call
xchg
xor
xor
xor
or
loopne
sbb
dec
add
and
shr
xor
cmp
fcmovnbe
punpckhwd
or
and
sar
xor
cmp
xchg
push
shl
jnp
mov
imul
mov
call
loopne
jp
aad
jno
stc
in
adc
pushf
sub
push
xchg
mov
inc
(bad)
pop
test
cmp
add
cmp
std
cdq
jnp
fbld
cmp
xlat
pushf
movs
sti
inc
cmp
(bad)
mov
mov
xor
imul
cmp
es
cdq
iret
push
movs
mov
sbb
(bad)
mov
mov
popa
(bad)
adc
pusha
cmp
in
daa
sbb
cdq
es
sbb
dec
aad
out
cwde
sub
mov
popa
cdq
and
xlat
in
popa
xor
xchg
and
sar
out
fist
data16
stos
and
ss
and
enter
cmp
movs
inc
loop
push
cmp
pushf
or
cmp
lods
loope
test
mov
push
mov
ss
pmulhuw
and
stos
xor
ss
and
cmp
out
out
push
mov
ss
sub
into
std
out
popa
in
sbb
push
mov
ins
adc
xchg
imul
hlt
ss
xor
ss
and
xor
xchg
xor
stos
xor
adc
addr16
fst
out
cld
cmp
out
out
inc
cmp
mov
mov
pushf
cmp
and
cmps
loop
jns
neg
test
mov
push
pop
mov
mov
sub
mul
div
mov
fs
pop
div
mov
mov
imul
test
sbb
popf
jle
movs
test
mov
mov
push
and
sub
mul
test
mov
push
aad
div
mov
inc
rcl
push
mov
mov
mov
hlt
data16
sbb
mov
mov
mov
pop
cmp
mov
add
mov
mov
ins
cmp
dec
outs
mov
mov
test
fbld
test
mov
mov
lock
mov
mov
and
mov
mov
in
test
mov
mov
mov
int
or
es
xchg
es
add
cmp
and
adc
mov
mov
pushf
cmp
and
jbe
mov
mov
jnp
mov
mov
lahf
sahf
and
mov
push
imul
jns
imul
test
mov
adc
test
mov
lods
icebp
mov
mov
jmp
mov
mov
mov
mov
mov
inc
div
add
test
mov
and
test
mov
pushf
cmp
and
mov
push
imul
jnp
imul
test
mov
adc
test
mov
lods
icebp
mov
mov
jmp
mov
mov
mov
mov
mov
inc
div
adc
mov
mov
and
test
mov
inc
test
jnp
pop
sub
cdq
out
dec
out
sar
in
jns
xchg
and
pop
xchg
and
(bad)
pop
call
loopne
out
fsubrp
jno
sub
xchg
and
cmc
mov
cld
cmp
ss
cmps
jmp
(bad)
movs
lods
ins
out
pop
ret
and
pop
pushf
and
mov
sbb
lods
jl
(bad)
inc
sbb
fwait
ds
and
stos
xor
mov
dec
cmc
mov
xchg
and
mov
xchg
xor
add
add
mov
mov
daa
and
push
sub
xchg
mov
xchg
sub
shr
xor
shl
daa
and
mov
addr16
adc
xor
stos
sub
adc
out
xor
pop
call
je
and
sbb
popa
retf
dec
mov
(bad)
pop
popf
je
les
imul
ss
mov
data16
sbb
popa
retf
dec
out
cld
cmp
ss
inc
push
data16
fadd
call
out
lds
pop
and
jp
popa
leave
adc
popa
xor
sahf
jle
(bad)
jecxz
jp
aad
jno
stc
in
adc
fnsave
and
data16
push
push
data16
adc
stc
dec
out
in
mul
clc
out
in
add
mov
aas
lods
sti
xchg
xor
mov
sbb
push
ds
data16
pop
xchg
outs
int3
and
fstp
adc
fs
adc
pop
(bad)
fld
mov
into
cdq
jnp
out
repz
sbb
outs
adc
pop
(bad)
fld
mov
pop
loopne
pop
data16
(bad)
and
jbe
dec
cmp
(bad)
pop
and
imul
in
and
out
popa
(bad)
movs
cli
je
and
xchg
xchg
daa
jl
in
xor
mov
in
lds
(bad)
in
test
daa
cmp
(bad)
and
(bad)
lock
lods
jl
lea
and
test
mov
gs
rcl
adc
cmp
sbb
and
mov
sahf
push
jmp
popa
in
add
sbb
pop
in
rcr
mov
imul
jmp
idiv
cmp
addr16
lods
jl
mov
je
scas
inc
les
(bad)
xchg
movs
sub
adc
(bad)
jbe
dec
and
and
imul
in
xor
sbb
popa
int
jno
sar
push
and
xchg
xchg
daa
jl
in
xor
mov
in
int
(bad)
in
test
daa
cmp
(bad)
and
(bad)
lock
lods
jl
lea
leave
xchg
jae
test
adc
cmp
sbb
and
mov
xchg
push
out
xchg
daa
add
(bad)
adc
jno
int
scas
sub
sbb
sub
mov
pop
lods
into
pop
pop
loopne
pop
sub
xchg
jb
frstor
mov
sub
popf
movs
add
sbb
movs
inc
repz
cmp
adc
popa
ror
cmp
mov
int3
xchg
loopne
fstp
jbe
dec
cmp
dec
cmp
cmp
xor
outs
ins
cmp
popa
fstp
dec
cmp
adc
outs
jecxz
rcl
das
and
jecxz
rcl
cs
dec
mov
jno
adc
lea
sbb
lods
jl
out
out
inc
cmp
sar
xor
adc
sbb
rcr
xchg
jecxz
(bad)
call
data16
sbb
test
cmp
mov
and
iret
sub
dec
out
in
mul
cmp
(bad)
out
hlt
pusha
xchg
mov
fidiv
jecxz
popa
(bad)
sbb
sub
pop
(bad)
cmps
mov
pop
or
lods
clc
jmp
in
sbb
lods
jmp
fiadd
lods
lods
and
popa
(bad)
sbb
outs
push
repnz
and
jecxz
and
dec
sub
sar
sbb
arpl
(bad)
jecxz
loop
sbb
shl
inc
data16
cdq
cdq
fcmovb
jecxz
dec
test
jmp
jecxz
(bad)
shr
sub
dec
cmp
dec
cmp
dec
cmp
fs
popf
fld
jecxz
int3
jmp
data16
cdq
xchg
fld
jecxz
push
xor
int3
aas
push
data16
sbb
mov
imul
test
fisttp
push
ins
cmp
aam
in
out
loop
test
mov
jg
data16
shl
dec
push
stc
out
test
cwde
fcmovnb
dec
mov
mov
dec
push
clc
out
test
cwde
fcmovnb
dec
push
and
sbb
int3
push
data16
popf
das
and
jmp
lods
mov
xchg
mov
cmp
jnp
push
jmp
mov
dec
push
and
sbb
int3
sbb
and
je
sti
jnp
push
pop
out
dec
cmp
movs
rcl
data16
lahf
mov
pop
cmp
jp
aad
jno
stc
in
xor
imul
mov
dec
fdiv
test
and
in
ret
mov
xchg
lods
(bad)
lahf
add
cmp
and
imul
and
sbb
and
sbb
push
xor
cmp
xchg
cmps
icebp
jecxz
movs
add
xchg
and
(bad)
imul
fisttp
or
movs
(bad)
and
cmp
adc
shl
cs
inc
cmp
fbstp
lods
fmul
mov
(bad)
or
adc
rcl
and
jbe
je
imul
xor
sub
cmp
movs
jno
stc
aaa
jae
sti
pop
pop
push
xchg
sahf
rcr
xchg
and
mov
or
push
sbb
popa
sub
jecxz
sub
imul
mov
fbstp
lods
fmul
jae
movs
xor
jae
sahf
adc
jl
ss
cmp
cmp
and
sbb
and
imul
jno
sub
bound
dec
add
push
sub
sbb
push
sub
adc
shl
and
adc
adc
shl
cs
sub
sahf
or
dec
loopne
(bad)
sbb
adc
cli
dec
out
sar
adc
mov
jle
mov
jle
adc
mov
sbb
and
xchg
sahf
adc
jl
ss
and
and
sbb
push
xor
jmp
cmps
push
cmp
xchg
and
dec
or
push
sbb
push
sub
adc
sar
and
adc
adc
rcr
and
sub
adc
shr
shl
imul
aad
data16
sti
out
popa
leave
xchg
mov
jno
stc
aaa
je
dec
fld
(bad)
pop
add
fsubr
pop
data16
aas
mov
jge
data16
mov
and
mov
push
fdiv
pop
sbb
adc
or
es
jns
dec
(bad)
sbb
and
sbb
and
sbb
inc
out
data16
arpl
and
loopne
cmp
sub
bound
or
mov
cmp
bound
sbb
popa
(bad)
movs
into
sti
jl
cmp
in
cli
movs
xor
in
adc
out
in
pop
inc
and
out
je
fbstp
lods
fmul
jb
xchg
adc
inc
push
jl
cmp
in
popa
lds
xor
mov
lea
mov
xor
fcom
les
lods
leave
sbb
jbe
arpl
and
fsubr
shl
and
sbb
fdivr
popf
and
in
or
jle
pop
sbb
imul
push
and
pusha
cs
push
in
popa
sub
data16
pop
call
pop
lea
mov
addr16
imul
out
jecxz
pop
call
push
mov
int3
inc
pop
data16
pop
call
loopne
cld
cmp
lea
or
cmp
aad
jno
stc
in
sub
inc
outs
jecxz
in
add
out
leave
cmp
cmp
ja
sbb
lods
jl
out
jecxz
sti
in
xor
rcr
and
or
lea
ss
bound
mov
push
push
cmps
leave
ins
out
and
pop
pop
push
shr
push
in
inc
sbb
sbb
jecxz
loop
and
push
imul
add
and
test
loop
dec
out
fadd
cmps
sub
std
push
xchg
xabort
lods
ins
lock
repz
popa
xchg
jae
inc
mov
pop
jg
cmps
std
or
fstp
xchg
jl
pop
popa
shr
jl
cmp
aad
jno
stc
fisubr
data16
inc
pop
data16
dec
xor
clc
cli
bound
(bad)
sbb
adc
xchg
jecxz
(bad)
loop
je
imul
mov
xchg
xchg
and
loop
popa
adc
cmp
fstp
imul
cmp
data16
imul
mov
mov
cmp
pushf
in
fcmovb
xchg
jecxz
(bad)
loope
scas
test
cdq
fld
ja
cld
(bad)
loope
push
mov
mov
(bad)
add
and
dec
or
ror
and
xchg
jecxz
(bad)
loop
movs
call
adc
sbb
cmp
fisub
sbb
aam
in
out
loop
pop
outs
lods
mov
xchg
cmps
cmps
icebp
jecxz
movs
add
xchg
mov
hlt
(bad)
loope
and
hlt
jecxz
cmps
std
adc
jno
pop
data16
stos
jl
cmps
std
adc
push
pop
data16
ds
cmp
popa
cmp
cmp
mov
cmp
jne
leave
cld
and
(bad)
test
mov
sbb
cmps
std
adc
aam
in
out
loop
adc
and
movs
ins
and
sbb
rol
lahf
pushf
and
fistp
popfw
pop
sbb
and
jmp
jbe
mov
xor
and
outs
hlt
sahf
pusha
cmp
pusha
cmp
cmp
mov
cmp
jne
leave
cld
and
(bad)
test
mov
jge
cmps
std
adc
adc
pop
data16
and
in
xor
(bad)
pusha
cmp
cmp
mov
cmp
jne
leave
cld
and
(bad)
test
mov
std
adc
pop
jge
popfw
xor
and
jmp
cmps
ret
sbb
pop
shl
and
movs
add
rol
dec
in
cdq
(bad)
fld
pop
sti
jnp
xor
pop
pop
data16
fdiv
dec
cmp
ss
scas
mov
dec
push
add
rcl
and
lahf
mov
jge
sbb
pop
jge
popfw
xor
and
jmp
cmps
ret
sbb
aaa
push
in
xchg
jecxz
fadd
loop
int3
jnp
data16
fsubr
xor
and
(bad)
test
mov
jge
cmps
std
adc
iret
jp
popfw
xor
and
jmp
cmps
ret
sbb
aaa
push
in
xchg
jecxz
fadd
loop
int3
xor
and
fsubr
cmp
and
(bad)
test
mov
jp
cmps
std
adc
xchg
jp
popfw
xor
and
jmp
cmps
ret
sbb
pop
sar
add
rol
dec
in
cdq
(bad)
fld
pop
sti
jnp
xor
cmps
pop
data16
fdiv
dec
jno
and
cli
out
mov
mov
mov
sbb
popf
rcr
data16
jmp
jbe
loope
cmp
cdq
jae
jno
and
xchg
jecxz
(bad)
loope
je
imul
(bad)
dec
push
hlt
out
data16
dec
and
add
sub
ins
and
sbb
rol
lahf
pushf
and
cmp
popfw
pop
sbb
and
jmp
jbe
mov
xor
and
outs
hlt
jp
cmp
rcr
xchg
jecxz
(bad)
loope
lods
push
xchg
cmp
cmp
mov
cmp
jne
leave
cld
and
(bad)
test
mov
jp
cmps
std
adc
out
jnp
popfw
xor
and
jmp
cmps
ret
sbb
aaa
push
xlat
mov
fadd
loop
int3
rcr
and
fsubr
lahf
pop
data16
push
data16
test
pop
sub
jnp
cdq
xchg
(bad)
fcmovnbe
fldenv
cmp
push
aam
fimul
mov
pop
data16
mov
imul
inc
pop
data16
fdiv
addr16
data16
push
data16
test
pop
sub
jnp
cdq
xchg
(bad)
fcmovnbe
popa
and
cmp
and
cmp
call
rcr
aam
pop
data16
cmp
cmp
cmp
mov
cmp
inc
int3
cmp
and
jg
and
test
fadd
loop
jae
and
fstp
cmps
std
or
pop
sbb
mov
mov
jecxz
int
sbb
data16
jecxz
movs
xlat
dec
adc
in
loope
and
arpl
mov
cmp
pop
mov
dec
addr16
cdq
std
jecxz
fstp
mov
imul
cmp
pop
jbe
in
cmp
sahf
jbe
mov
into
cmp
cdq
lods
out
lahf
mov
and
jecxz
jae
inc
mov
and
jecxz
jae
jne
and
lahf
mov
and
jmp
lods
mov
xchg
mov
fld
popf
fnsetpm(287
(bad)
loope
movs
cmp
sub
jecxz
rol
loop
fisttp
mov
imul
mov
cmp
cmps
std
add
fstp
popfw
xor
and
jmp
cmps
ret
sbb
aaa
push
inc
mov
fadd
loop
int3
daa
pop
data16
fsubr
jecxz
data16
push
data16
test
pop
sub
jnp
cdq
xchg
(bad)
fcmovnbe
in
and
lahf
mov
aam
fimul
popf
xor
and
jmp
cmps
ret
sbb
aaa
push
in
xchg
jecxz
fadd
loop
int3
neg
mov
fcomp
and
jecxz
rol
loop
scas
mov
and
cdq
sub
xchg
jecxz
(bad)
loope
lods
leave
jmp
lods
mov
xchg
mov
and
pop
jp
mov
cmc
das
and
cmp
fstp
adc
sbb
sbb
lods
leave
sub
and
cmp
scas
and
and
cdq
sub
xchg
jecxz
(bad)
loop
lods
mov
jecxz
xor
mov
rol
loope
je
add
mov
fcmovnb
jecxz
in
(bad)
pop
out
cmp
fnsave
ficomp
adc
mov
dec
imul
int
fld
inc
pop
cmp
mov
imul
in
cmp
loope
fisttp
adc
test
in
mov
imul
lahf
and
mov
and
adc
and
test
pop
sub
jnp
cdq
xchg
(bad)
fcmovnbe
mov
mov
aam
fimul
popf
xor
and
jmp
cmps
ret
sbb
aaa
push
xlat
mov
fadd
loop
int3
inc
and
mov
and
adc
and
test
pop
sub
jnp
cdq
xchg
(bad)
fcmovnbe
dec
pop
and
lahf
mov
fcmovnb
jecxz
out
sbb
movs
call
and
jecxz
rol
loop
test
(bad)
dec
cdq
xchg
shl
fld
dec
rol
jecxz
loopne
xchg
jecxz
(bad)
loop
sub
(bad)
jecxz
dec
add
and
(bad)
test
mov
push
sbb
cmps
std
adc
out
sbb
popf
xor
and
jmp
cmps
ret
sbb
aaa
push
inc
mov
fadd
loop
int3
(bad)
data16
fsubr
cmps
and
adc
and
test
pop
sub
jnp
cdq
xchg
(bad)
fcmovnbe
mov
mov
ret
mov
loop
jno
and
movs
ins
and
sbb
rol
lahf
pushf
and
aam
pop
data16
jmp
je
cli
jnp
cdq
xchg
(bad)
fcmovnbe
gs
and
lahf
mov
and
movs
ins
and
sbb
rol
lahf
pushf
and
pop
pop
sbb
popf
pop
sbb
and
jmp
jbe
mov
xor
and
outs
hlt
inc
sbb
sbb
loopne
hlt
data16
sbb
cmp
mov
cmp
jne
fs
(bad)
test
mov
pop
sbb
cmps
std
adc
shl
ss
leave
pop
and
movs
ins
and
sbb
rol
lahf
pushf
and
out
out
data16
xchg
sbb
sbb
loopne
hlt
(bad)
sbb
sbb
cmp
mov
cmp
jne
leave
cld
and
(bad)
test
mov
add
cmps
std
adc
scas
add
popfw
xor
and
jmp
cmps
ret
sbb
pop
shl
and
movs
add
rol
dec
in
cdq
(bad)
fld
pop
sti
jnp
xor
dec
and
mov
ret
(bad)
test
mov
std
adc
aam
in
out
loop
and
cmp
call
rcr
aam
pop
data16
cmp
cmp
cli
jnp
cdq
xchg
(bad)
fcmovnbe
push
pop
and
lahf
mov
and
movs
ins
and
sbb
rol
lahf
pushf
and
aam
pop
data16
inc
sbb
sbb
loopne
je
cli
jnp
cdq
xchg
(bad)
fcmovnbe
or
mov
xor
sbb
jecxz
sbb
popf
xor
and
jmp
cmps
ret
sbb
aaa
push
in
xchg
jecxz
fadd
loop
int3
fbld
data16
fsubr
mov
dec
in
mov
imul
lahf
and
mov
and
adc
and
test
pop
sub
jnp
cdq
xchg
(bad)
fcmovnbe
mov
mov
cmp
rcr
(bad)
loop
int3
stos
and
mov
and
adc
and
test
pop
sub
jnp
cdq
xchg
(bad)
fcmovnbe
jno
and
lahf
mov
and
jmp
lods
mov
xchg
mov
and
hlt
gs
test
jecxz
cmp
outs
xchg
fcmovnu
(bad)
loop
jae
hlt
mov
sub
or
retf
add
popf
xor
and
jmp
cmps
ret
sbb
aaa
push
in
xchg
jecxz
fadd
loop
int3
aaa
and
mov
shl
test
mov
add
cmps
std
adc
xchg
add
popf
xor
and
jmp
cmps
ret
sbb
aaa
push
in
xchg
jecxz
fadd
loop
int3
out
daa
data16
fsubr
iret
outs
and
hlt
jmp
sbb
mov
cmp
inc
int3
inc
daa
data16
jg
and
test
fadd
loop
jae
and
push
add
cmps
std
or
hlt
in
data16
out
pop
cmp
dec
cmp
dec
cmp
dec
cmp
fs
imul
mov
mov
(bad)
mov
test
mov
cmp
cdq
jae
jecxz
fadd
loop
fisttp
push
sbb
sbb
xchg
shl
fcmovnbe
in
and
jecxz
fadd
loop
int3
fwait
sub
mov
addr16
fidiv
and
cdq
mov
vfnmaddss
jno
stc
out
xor
das
daa
xor
out
fmul
sti
out
mov
mov
mov
pop
ss
and
imul
(bad)
loop
fld
rcr
cmp
fmul
in
jecxz
sbb
mov
mov
dec
push
and
into
in
cdq
fstp
jecxz
scas
jl
pop
and
or
push
and
cmp
jnp
push
and
jmp
cmp
jnp
push
iret
in
dec
cmp
movs
rcl
mov
ins
cmp
in
cli
dec
out
sar
xor
sub
in
jecxz
mov
scas
jl
out
cmp
repnz
cld
lods
mov
xchg
and
sbb
cmp
lods
mov
xchg
sahf
or
loop
and
(bad)
loop
dec
mov
sbb
scas
ins
adc
jo
sbb
(bad)
dec
mov
push
sbb
lods
mov
jecxz
test
jecxz
int3
pop
sub
mov
outs
scas
mov
fcmovnb
xchg
xor
cmp
xor
cmp
mov
loope
(bad)
(bad)
int3
cmp
data16
cdq
push
fld
jecxz
xchg
cdq
loope
fcmovnbe
in
push
and
xchg
jecxz
(bad)
mov
adc
sbb
jno
xchg
jmp
(bad)
ins
push
arpl
(bad)
xchg
xor
cmp
out
mov
loope
fstp
sbb
and
pop
data16
xchg
data16
cdq
repnz
jecxz
rcl
adc
push
or
and
cdq
ret
jecxz
int3
cmp
push
and
dec
mov
add
dec
cmp
cdq
rcr
(bad)
jecxz
dec
xchg
shl
test
cmp
cmp
cmps
std
cmp
dec
adc
int3
lahf
sub
or
(bad)
jp
sbb
int3
ss
fist
addr16
xchg
jecxz
(bad)
jecxz
je
cdq
rcr
(bad)
jecxz
int3
pop
sub
(bad)
test
cdq
xchg
test
test
cdq
xchg
mov
cdq
fcmovnb
test
cdq
xchg
cdq
loope
fld
jecxz
(bad)
rcl
fcmovnb
lahf
mov
fld
jecxz
in
adc
int3
pop
sub
or
(bad)
sar
sbb
dec
cdq
shl
cdq
call
and
and
in
fdiv
loope
fld
jecxz
(bad)
jecxz
je
lea
cmp
xchg
retf
(bad)
jecxz
mov
push
pop
or
mov
(bad)
(bad)
jecxz
int3
das
and
and
fdivr
shl
pushf
(bad)
jecxz
pusha
cmp
jecxz
clc
cwde
fcmovnb
sbb
mov
fstp
sbb
cdq
mov
push
mov
(bad)
jecxz
and
fstp
cmp
mov
imul
aas
test
(bad)
dec
jmp
and
dec
cmp
dec
cmp
dec
cmp
cdq
je
sbb
ror
adc
std
cmp
fisttp
ficom
cmp
fcom
in
jecxz
test
push
ss
dec
inc
shl
cdq
call
sub
mov
outs
fcmovnb
sbb
or
sbb
mov
imul
or
lods
cli
adc
mov
cmp
dec
or
outs
fcmovnb
sbb
cdq
fild
(bad)
adc
sbb
and
hlt
sub
cmp
fstp
push
data16
and
bound
(bad)
fld
mov
cmp
jnp
jmp
(bad)
fld
and
xor
sbb
add
jecxz
iret
and
jecxz
and
fstp
cmp
fld
jecxz
movs
inc
nop
(bad)
rol
and
movs
icebp
cmp
sbb
ret
mov
push
fld
jecxz
jecxz
hlt
push
pop
cmp
and
test
mov
or
fisttp
ret
sbb
mov
rcl
fidivr
rcr
xchg
jecxz
(bad)
inc
jg
fisub
ins
xchg
and
xchg
cmp
xchg
sahf
adc
dec
adc
jmp
sbb
lods
sti
jp
jno
xchg
sahf
adc
dec
adc
lods
sti
jp
jno
jecxz
xor
mov
and
xchg
movs
inc
mov
nop
ja
mov
movs
inc
mov
xchg
sub
dec
call
sbb
xchg
test
push
sbb
lahf
or
lods
call
adc
sbb
cmp
repnz
pop
xchg
lods
aas
jbe
test
leave
pop
ss
sub
and
fsubr
dec
adc
aam
fsub
shl
adc
ss
and
mov
pusha
and
mov
or
lods
shl
xor
stos
and
mov
pusha
and
stos
xor
mov
jbe
imul
xor
test
mov
and
iret
xchg
and
dec
mov
or
test
cmp
(bad)
push
dec
cmp
int3
ret
cs
(bad)
retf
(bad)
cmp
push
jecxz
int3
fwait
cs
pop
sahf
je
hlt
push
adc
arpl
sahf
jnp
inc
scas
out
xchg
sbb
push
and
dec
xor
inc
outs
fstp
inc
mov
dec
fdiv
sbb
rcr
xchg
jecxz
(bad)
cdq
lods
(bad)
fninit
cwde
(bad)
cdq
fs
test
(bad)
dec
jmp
stc
cld
cdq
fld
add
jnp
mov
push
sbb
lods
call
data16
popf
xchg
popa
das
sbb
ja
test
mov
std
adc
in
add
fcmovnb
imul
mov
xchg
ret
mov
rol
(bad)
jecxz
jecxz
fsub
iret
popa
fninit
cwde
(bad)
cdq
fs
test
(bad)
dec
jmp
stc
cld
cdq
fld
mov
sbb
sub
shl
xchg
std
cld
cdq
fcmovnbe
sub
cmp
adc
(bad)
jecxz
push
xor
sbb
in
imul
and
and
test
jg
fbstp
lods
fsub
mov
sbb
ja
dec
in
jns
mov
out
sbb
data16
in
addr16
fidiv
and
inc
push
and
xchg
mov
movs
add
xchg
mov
and
test
cdq
cmps
std
adc
jno
pop
data16
pop
push
and
lahf
mov
dec
cmp
aam
in
out
loop
push
mov
and
jecxz
je
sbb
mov
and
movs
ins
and
sbb
rol
lahf
pushf
and
aam
pop
test
xchg
(bad)
dec
mov
or
cmps
std
adc
lahf
or
popf
xor
and
jmp
cmps
ret
sbb
or
cmp
call
ror
cmp
cdq
fld
ds
jnp
jmp
cmp
cdq
fld
(bad)
pop
cmp
pop
cmp
cmp
mov
cmp
jb
leave
cld
and
mov
data16
(bad)
jecxz
int3
cmps
das
data16
fsubr
leave
xor
push
sti
jnp
jmp
cmp
cdq
fld
loop
cmp
pop
cmp
cmp
mov
cmp
jb
leave
cld
and
mov
data16
(bad)
jecxz
int3
addr16
data16
fsubr
and
data16
push
data16
test
pop
adc
outs
pop
cmp
inc
cmp
mov
test
fcmovnb
dec
push
jl
pop
test
xchg
(bad)
dec
mov
or
cmps
std
or
push
sub
jnp
jmp
cmp
cdq
fld
inc
sti
jnp
jmp
cmp
cdq
fld
mov
loopne
xchg
xchg
rcr
xchg
jecxz
out
cdq
lods
push
(bad)
push
cmp
cmp
mov
cmp
jb
leave
cld
and
mov
data16
(bad)
jecxz
int3
imul
data16
fsubr
xor
and
mov
data16
(bad)
jecxz
int3
sub
and
fsubr
dec
cs
push
data16
test
pop
sub
sbb
mov
imul
in
xor
jnp
jmp
cmp
cdq
fld
out
cmp
rcr
xchg
jecxz
out
cdq
lods
push
push
push
cmp
cmp
mov
cmp
dec
int3
daa
cs
jg
and
test
and
jecxz
jae
inc
mov
and
jecxz
jae
or
lahf
mov
cmp
cdq
je
cmp
lahf
mov
and
movs
ins
and
sbb
rol
lahf
pushf
and
aam
pop
test
xchg
(bad)
dec
mov
or
cmps
std
adc
outs
in
test
xchg
(bad)
dec
mov
or
cmps
std
adc
aam
in
out
loop
mov
ins
and
sbb
rol
lahf
pushf
and
aam
pop
test
xchg
(bad)
dec
mov
std
adc
ds
test
xchg
(bad)
dec
mov
std
adc
inc
or
popf
xor
and
jmp
cmps
ret
sbb
xor
xchg
xchg
jecxz
(bad)
cdq
je
cdq
push
and
lahf
mov
or
sbb
push
xor
jecxz
je
xor
and
jecxz
je
and
cmp
push
and
movs
ins
and
sbb
rol
lahf
pushf
and
aam
pop
test
xchg
(bad)
dec
mov
or
cmps
std
adc
and
pop
test
xchg
(bad)
dec
mov
or
cmps
std
adc
(bad)
or
popf
xor
and
jmp
cmps
ret
sbb
xor
xchg
xchg
jecxz
(bad)
cdq
je
sbb
mov
and
jmp
lods
mov
xchg
mov
and
hlt
gs
test
jecxz
cmp
outs
xchg
(bad)
jecxz
jae
or
and
jecxz
jae
adc
shl
and
movs
ins
and
sbb
rol
lahf
pushf
and
aam
pop
test
xchg
(bad)
dec
mov
std
adc
cli
in
test
xchg
(bad)
dec
mov
std
adc
retf
data16
and
cmp
call
rcr
aam
pop
test
xchg
(bad)
dec
mov
sbb
cmps
std
adc
xor
sbb
popf
xor
and
jmp
cmps
ret
sbb
or
cmp
call
ror
cmp
cdq
fld
ds
jnp
jmp
cmp
cdq
fld
call
je
stc
jnp
jmp
cmp
cdq
fld
push
cmp
dec
cmp
dec
cmp
dec
cmp
fs
out
or
sbb
mov
mov
sbb
mov
imul
or
mov
sahf
sti
(bad)
jecxz
je
mov
xor
mov
mov
or
sbb
xchg
(bad)
fcmovnbe
popa
dec
and
sub
out
aam
in
out
loop
inc
cmp
sar
xor
inc
ret
fmul
sti
out
mov
mov
in
movs
loope
fstp
sub
adc
xchg
cmp
hlt
(bad)
or
sbb
jno
xchg
xor
cmp
cdq
lods
shr
lods
mov
xchg
mov
and
hlt
push
or
sbb
sbb
jecxz
movs
dec
push
and
je
bnd
mov
sbb
lods
mov
jbe
dec
cmp
cdq
je
fisttp
cmp
cmp
mov
imul
in
dec
cmp
movs
sar
sbb
lahf
mov
mov
push
sbb
cmp
cdq
je
cdq
rcr
(bad)
jecxz
int3
add
data16
in
fdiv
loope
fld
jecxz
(bad)
shl
mov
mov
push
mov
jecxz
(bad)
jecxz
je
mov
and
xchg
jecxz
(bad)
mov
call
xor
shr
sbb
xchg
jecxz
(bad)
rcr
dec
cmp
cdq
je
or
cmp
jno
cmp
mov
jge
data16
cdq
sbb
jecxz
and
sbb
cdq
mov
push
mov
(bad)
jecxz
and
fist
dec
cmp
mov
imul
aas
test
(bad)
dec
jmp
and
dec
cmp
dec
cmp
dec
cmp
cdq
je
sbb
fist
sbb
sub
cmp
fisttp
cmps
or
cmp
out
jecxz
test
push
ss
dec
inc
shl
cdq
call
xor
mov
arpl
or
sbb
mov
imul
adc
lods
call
mov
cmp
push
adc
movs
mov
sbb
cdq
fild
jmp
push
sbb
and
hlt
ss
cmp
fcom
in
jecxz
sbb
cmp
cdq
je
hlt
scas
push
cmp
and
cmp
cdq
je
dec
aad
(bad)
lahf
mov
and
adc
loop
sbb
test
(bad)
dec
xor
fstp
adc
mov
sbb
dec
cmp
shl
mov
dec
mov
sbb
movs
into
arpl
mov
(bad)
test
mov
jecxz
lods
jmp
shl
jae
data16
pop
mov
push
cmp
dec
xor
and
outs
hlt
sahf
or
sbb
loopne
adc
ins
clc
jnp
mov
adc
scas
movs
sbb
push
movs
and
lods
loope
fcmovnbe
sub
sub
add
mov
mov
jecxz
mov
jecxz
int3
and
cdq
fstp
stc
or
and
sbb
jecxz
sbb
cmp
cdq
je
aad
and
xchg
sahf
and
cmp
rol
pop
xor
ret
jecxz
cmp
sbb
scas
mov
mul
into
adc
cmp
jg
fisub
ins
xchg
and
xchg
cmp
jmp
add
outs
sbb
ja
dec
dec
and
xchg
and
(bad)
imul
mov
sahf
test
push
pop
mov
sbb
lods
dec
int3
pop
cmp
sbb
sub
cmp
push
xor
dec
mov
push
sbb
ja
inc
inc
and
xchg
and
imul
cmp
dec
cmp
jbe
cmp
loop
jecxz
int3
xchg
and
in
ret
mov
xchg
lods
(bad)
xchg
and
imul
jb
jno
and
xchg
and
inc
cmp
rol
repnz
sbb
jae
push
push
pop
popf
mov
dec
cmp
adc
loope
and
xchg
mov
lods
(bad)
adc
cmps
iret
jp
cdq
sub
sbb
mov
imul
dec
cmp
adc
mov
addr16
jecxz
int3
jg
cdq
fstp
jecxz
and
sbb
aam
push
out
daa
jp
and
push
xor
xchg
xor
and
fimul
out
xchg
and
pop
icebp
cmp
sbb
jecxz
loop
and
jle
xchg
jl
ss
aas
shl
pop
xchg
je
int
and
popf
xchg
or
test
ss
cmp
cmp
adc
xor
shl
lahf
cmps
daa
imul
int
mov
std
add
popa
int
or
push
pop
addr16
jecxz
or
xor
and
jecxz
fidiv
stos
and
mov
inc
scas
out
xchg
and
push
(bad)
sub
sbb
ret
call
jbe
dec
cmp
dec
cmp
dec
cmp
dec
test
sbb
and
sbb
shl
dec
and
xchg
mov
and
cli
out
popa
rcl
adc
sub
test
mov
cmp
adc
sub
pop
adc
dec
cmp
adc
sub
test
mov
sbb
dec
cmp
adc
sub
js
mov
sbb
dec
cmp
adc
sub
jns
mov
sbb
movs
xlat
xor
cmp
jae
sub
adc
and
shl
addr16
sub
adc
and
shl
addr16
sub
adc
add
addr16
sub
adc
and
rcl
xchg
adc
cmp
adc
sub
js
mov
push
sbb
dec
cmp
adc
sub
(bad)
push
sbb
dec
cmp
adc
sub
xchg
mov
push
sbb
dec
cmp
adc
sub
xchg
mov
push
sbb
pushf
lea
and
cli
out
popa
int
mov
jae
fistp
inc
popf
xchg
jbe
sbb
dec
(bad)
int3
movs
pop
data16
jg
data16
cmp
cmp
jns
or
(bad)
sub
pop
push
sbb
dec
(bad)
movs
cwde
pop
data16
sbb
data16
and
cmp
jns
or
(bad)
sub
test
mov
push
sbb
movs
into
pop
outs
and
jbe
fisttp
stc
gs
sahf
add
sbb
add
fwait
es
loopne
adc
icebp
inc
and
jbe
fisttp
repz
mov
cmp
dec
sub
cdq
adc
aad
and
jbe
fisttp
stc
gs
(bad)
add
sbb
pop
cwde
pop
dec
sub
cdq
adc
and
sar
call
hlt
jmp
pop
dec
sub
cdq
adc
and
rcr
sahf
adc
(bad)
mov
pop
cmp
call
mov
(bad)
sub
test
mov
sbb
jnp
dec
out
sar
xchg
pop
scas
add
retf
in
data16
jmp
adc
mov
dec
aad
and
outs
hlt
in
(bad)
jecxz
loopne
mov
or
imul
out
jge
data16
pop
xchg
je
hlt
or
cmp
and
sub
js
or
outs
xchg
and
adc
je
pop
sahf
(bad)
in
ss
cmp
dec
cmp
je
sar
jnp
push
and
sbb
int3
pop
cmp
call
fisttp
stc
cmp
je
and
popa
shl
aam
hlt
add
or
push
sbb
movs
imul
loop
dec
cmp
outs
add
sbb
and
xor
data16
stc
cmp
fisttp
(bad)
cmp
cmp
aam
hlt
add
or
push
adc
mov
(bad)
loop
dec
cmp
mov
inc
cdq
pop
dec
cmp
dec
cmp
dec
cmp
addr16
cmp
dec
cmp
cmp
and
sbb
sub
or
lods
push
jb
sub
adc
jns
and
jbe
fisttp
stc
cmp
fisttp
(bad)
cmp
dec
nop
push
js
or
sbb
and
je
(bad)
jnp
push
(bad)
loop
dec
cmp
add
sbb
pop
cwde
pop
movs
into
sub
and
jbe
fisttp
stc
cmp
fisttp
(bad)
cmp
dec
sbb
data16
fs
push
sbb
and
je
(bad)
jnp
push
(bad)
loop
dec
cmp
jp
cmp
dec
cmp
push
adc
jecxz
pusha
cdq
pop
dec
sub
cmp
test
sbb
dec
adc
cmp
jecxz
dec
jecxz
and
push
sbb
(bad)
sbb
and
push
sbb
adc
sbb
adc
daa
and
or
pop
cmp
dec
xchg
and
xor
and
sbb
dec
mov
and
push
(bad)
mov
int3
xchg
cmp
call
fisttp
stc
cmp
fisttp
(bad)
cmp
dec
pop
je
and
sbb
xor
data16
imul
jecxz
dec
cmp
adc
cmp
movs
(bad)
xchg
inc
and
je
(bad)
jnp
or
push
pop
addr16
dec
mov
sbb
(bad)
and
push
sbb
cmp
data16
sti
gs
jp
cmp
and
sub
js
or
(bad)
sub
test
push
or
sbb
dec
or
cmp
pop
push
pop
data16
imul
jecxz
dec
cmp
push
cmp
movs
inc
and
jbe
fisttp
stc
cmp
fisttp
(bad)
cmp
cmp
sbb
data16
je
and
sbb
daa
cmp
and
cdq
mov
int3
repz
data16
xor
gs
dec
faddp
jecxz
and
sub
js
or
(bad)
sub
test
or
push
daa
push
ret
dec
push
sbb
data16
je
(bad)
jnp
push
(bad)
loop
dec
cmp
jmp
pop
lods
shr
lods
jl
out
jecxz
sbb
adc
sbb
adc
daa
and
or
movs
cmp
dec
(bad)
sbb
and
or
cmp
cmp
jecxz
dec
jecxz
and
push
sbb
arpl
sbb
xchg
and
push
sbb
adc
sbb
adc
daa
and
or
inc
push
add
and
je
and
sbb
and
sbb
dec
jnp
and
push
(bad)
mov
int3
aaa
aas
data16
sub
cmp
fisttp
stc
cmp
fisttp
(bad)
cmp
dec
les
and
sub
add
data16
bsf
je
(bad)
jnp
or
ror
inc
and
mov
or
(bad)
sub
js
or
(bad)
sub
test
or
push
dec
push
outs
cmp
dec
cdq
sbb
and
sbb
and
je
(bad)
jnp
push
(bad)
loop
dec
cmp
cli
push
cmp
dec
cmp
push
adc
jecxz
inc
cdq
pop
dec
and
cmp
mov
sbb
dec
sub
dec
push
clc
out
dec
cmp
and
push
sbb
and
hlt
push
push
cmp
dec
cmp
push
adc
jecxz
inc
cdq
pop
dec
and
cmp
out
sbb
dec
sub
dec
push
mov
pop
dec
cmp
and
push
sbb
and
hlt
inc
push
cmp
lods
shl
fisttp
stc
cmp
fisttp
(bad)
cmp
dec
adc
cmp
xor
data16
imul
jecxz
dec
cmp
data16
stc
inc
and
mov
or
(bad)
sub
js
or
(bad)
sub
test
or
push
js
sar
sbb
dec
sub
dec
push
clc
out
dec
cmp
and
push
sbb
and
hlt
retf
sbb
add
pop
dec
cmp
push
adc
jecxz
pusha
cdq
pop
dec
cs
and
sbb
lea
sbb
dec
daa
je
and
dec
push
(bad)
loopne
dec
ret
lds
push
sbb
push
sbb
xchg
inc
sahf
fcmovnb
xchg
sahf
or
mov
inc
scas
out
xchg
and
sub
and
xchg
mov
and
imul
mov
push
enter
jb
add
xor
adc
cmp
mov
sub
pop
data16
aas
cmp
xchg
je
hlt
data16
sbb
and
sub
js
or
outs
xchg
and
adc
je
pop
sahf
(bad)
in
ss
cmp
dec
cmp
je
sar
jnp
push
and
sbb
int3
jmp
data16
pop
(bad)
cmp
fisttp
stc
cmp
je
and
popa
shl
aam
hlt
add
or
push
sbb
movs
imul
loop
dec
cmp
cli
add
sbb
and
jno
and
jbe
fisttp
stc
cmp
fisttp
(bad)
cmp
cmp
aam
hlt
add
or
push
adc
mov
(bad)
loop
dec
cmp
ds
sbb
inc
cdq
pop
dec
cmp
dec
cmp
dec
cmp
addr16
cmp
dec
cmp
cmp
and
sbb
sub
or
lods
push
jb
sub
adc
in
and
jbe
fisttp
stc
cmp
fisttp
(bad)
cmp
dec
pop
jbe
dec
sub
dec
push
clc
out
dec
mov
sbb
retf
es
xchg
and
xor
sbb
pop
jecxz
dec
cmp
cmp
int3
xchg
add
push
imul
(bad)
sub
mov
sbb
movs
add
les
sub
xor
or
push
push
addr16
jecxz
int3
movs
pop
data16
inc
add
ror
or
push
sbb
push
sbb
fisttp
sti
gs
add
cmp
and
sub
js
or
(bad)
sub
test
push
or
sbb
dec
or
dec
inc
je
and
dec
push
clc
out
dec
mov
sbb
jae
sbb
xchg
in
fdiv
sub
js
or
(bad)
sub
test
push
or
sbb
dec
add
sbb
and
pop
data16
imul
jecxz
dec
cmp
jle
cmp
int3
inc
jmp
cdq
adc
sbb
adc
daa
and
or
movs
cmp
dec
push
je
and
cmp
dec
push
and
push
(bad)
mov
int3
jecxz
data16
push
data16
stc
cmp
fisttp
(bad)
cmp
dec
pop
je
and
sbb
out
sbb
dec
cmp
je
pop
mov
(bad)
jnp
or
sar
push
mov
or
rcr
xchg
and
mov
or
(bad)
sub
js
or
(bad)
sub
test
or
push
loope
and
je
and
sbb
inc
push
sbb
and
je
(bad)
jnp
push
(bad)
loop
dec
cmp
cmp
cmp
dec
cmp
push
adc
jecxz
pusha
cdq
pop
dec
sub
dec
sbb
push
mov
data16
dec
push
and
pop
dec
jecxz
and
push
sbb
pop
daa
sbb
xchg
sbb
adc
sbb
adc
daa
and
or
sar
dec
fistp
and
add
and
sbb
dec
inc
lds
push
(bad)
mov
int3
rol
data16
pusha
(bad)
cmp
fisttp
stc
cmp
fisttp
(bad)
cmp
dec
les
and
jecxz
and
jbe
dec
cmp
je
dec
mov
(bad)
jnp
or
shr
mov
sub
js
or
(bad)
sub
test
or
push
sahf
data16
jbe
dec
sub
dec
push
mov
pop
dec
cmp
and
push
sbb
and
hlt
push
cmp
sbb
cmp
pop
and
jbe
fisttp
stc
cmp
fisttp
(bad)
cmp
dec
adc
dec
sub
dec
push
clc
out
dec
cmp
and
push
sbb
and
hlt
pop
cmp
sbb
or
pop
dec
cmp
push
adc
jecxz
inc
cdq
pop
dec
and
dec
data16
dec
cmp
je
sar
jnp
push
and
sbb
int3
aas
add
call
fisttp
stc
cmp
fisttp
(bad)
cmp
dec
mov
pop
addr16
jbe
dec
cmp
je
(bad)
mov
std
jnp
or
rcl
jp
cmp
mov
loopne
data16
sti
out
popa
rcl
cdq
(bad)
scas
out
xchg
and
mov
out
fmul
sti
out
popa
aad
mov
and
sbb
daa
push
sbb
daa
push
sbb
and
jecxz
sub
cmp
jecxz
mov
push
sbb
int3
mov
fbstp
int3
pop
call
sbb
lods
shr
lods
jl
out
jecxz
pop
xchg
je
pop
xchg
je
pop
call
test
and
sbb
das
xchg
jecxz
loopne
and
or
(bad)
imul
cmp
adc
(bad)
imul
mov
in
in
aas
or
push
sbb
popa
ror
je
nop
jnp
push
and
inc
mov
jle
shr
jg
fbstp
lods
fcomp
data16
mov
out
aam
in
out
loop
repnz
cmp
xchg
sbb
fcmovnb
dec
mov
sbb
int3
ret
add
adc
and
test
jns
pushf
sbb
cmp
dec
test
fcmovnb
jecxz
int3
(bad)
data16
in
dec
aam
(bad)
pop
(bad)
push
adc
cmp
cdq
je
add
sbb
cmp
dec
int3
lods
and
mov
data16
jecxz
int3
cmp
and
popa
cdq
and
xor
sbb
fcmovnb
dec
mov
cs
lods
leave
sbb
sbb
cmp
ja
or
data16
jecxz
int3
test
cdq
and
outs
mov
test
(bad)
dec
mov
inc
jecxz
push
sub
jnp
jmp
cmp
cdq
fld
(bad)
xor
sbb
pop
(bad)
adc
xor
cmp
cdq
je
xchg
jno
cmp
mov
push
sub
jnp
jmp
cmp
cdq
fld
or
cmp
pop
(bad)
push
adc
cmp
cdq
je
dec
jno
cmp
dec
cmp
data16
jecxz
int3
pop
or
mov
or
test
cdq
fcmovnb
dec
mov
cs
movs
inc
jecxz
push
sub
jnp
jmp
cmp
cdq
fld
jbe
cmp
aam
cli
out
mov
mov
out
(bad)
adc
xor
cmp
cdq
je
icebp
jo
cmp
dec
cmp
jnp
push
outs
loopne
test
cdq
fcmovnb
dec
push
and
pop
data16
aad
cdq
fist
mov
xchg
jnp
push
cmps
pop
data16
gs
fist
inc
sub
cmp
rcr
xchg
jecxz
(bad)
jecxz
lods
push
inc
fcmovb
jecxz
jg
fisub
ins
xchg
xor
in
push
xor
out
fcom
in
jecxz
jmp
int3
mov
inc
pusha
and
(bad)
jecxz
cmps
std
adc
in
adc
and
hlt
xor
sbb
jp
inc
movs
and
dec
out
sar
xor
sbb
dec
jo
and
repnz
sbb
mov
test
(bad)
dec
mov
das
sbb
int3
inc
data16
adc
cmp
xchg
fadd
jecxz
cdq
retf
fstp
imul
mov
mov
(bad)
jecxz
int3
(bad)
or
mov
jecxz
push
sub
jnp
jmp
aam
cdq
fld
xor
sbb
cdq
retf
fstp
imul
mov
mov
(bad)
jecxz
int3
repz
cmp
xchg
fcmovnb
xchg
mov
fcmovnb
sbb
xor
cmp
cdq
je
mov
fcmovnbe
shl
and
cmp
mov
dec
mov
test
sahf
fcmovnb
sbb
xor
cmp
cdq
je
jno
and
pushf
fcmovnbe
shl
and
imul
xchg
fcmovnb
dec
mov
sbb
lods
leave
sbb
fcmovnbe
shl
sub
or
test
xchg
fcmovnb
dec
mov
sub
data16
test
sahf
fcmovnb
adc
aad
cmp
cdq
je
add
fcmovnbe
shl
cs
or
test
xchg
fcmovnb
dec
mov
sub
out
sahf
fcmovnb
pop
adc
cmp
cdq
je
stc
jb
cmp
jecxz
into
jecxz
lods
call
sub
int3
mov
test
(bad)
dec
mov
test
sahf
fcmovnb
adc
xor
cmp
cdq
je
mov
fcmovnbe
shl
sub
add
pop
test
xchg
fcmovnb
dec
mov
dec
mov
mov
(bad)
jecxz
int3
sub
in
xchg
ret
mov
loop
ins
(bad)
cmp
jnp
mov
aad
cdq
cmps
std
or
mov
mov
jecxz
push
xor
fcmovne
into
jecxz
and
cwde
pop
daa
cmp
retf
data16
in
xchg
ret
mov
loop
in
out
loop
(bad)
or
push
ins
(bad)
cmp
daa
out
jecxz
loopne
xchg
jecxz
shl
sub
cmp
int
pop
data16
mov
sub
pushf
fcmovnu
(bad)
push
ss
pop
and
(bad)
loopne
fild
adc
or
sbb
loop
jecxz
fcmovnb
sbb
outs
or
xchg
jecxz
into
jecxz
lods
call
cdq
je
sub
fadd
jecxz
je
popf
jle
cmp
sahf
fadd
jecxz
push
adc
es
sbb
out
pop
add
mov
xchg
into
clc
out
in
add
mov
aas
lods
(bad)
pop
pop
cdq
shl
(bad)
fwait
sub
cmp
and
imul
push
ss
fadd
jecxz
je
or
cmp
mov
and
add
fadd
jecxz
je
in
and
lahf
mov
and
sbb
test
(bad)
dec
mov
sub
inc
data16
cli
out
mov
mov
jmp
(bad)
fld
jbe
jnp
jmp
(bad)
fld
fidiv
cmp
daa
loopne
test
sahf
fcmovnb
dec
mov
cs
cmps
std
or
mov
imul
jmp
ktestw
mov
cdq
call
les
mov
call
or
mov
xchg
jecxz
shl
je
mov
addr16
int
and
mov
call
sbb
inc
cmp
test
(bad)
lahf
cmps
and
mov
lods
mov
xchg
xchg
rcr
xchg
jecxz
into
jecxz
lods
call
cdq
cs
shl
fist
(bad)
cmp
jnp
jmp
(bad)
fld
xor
sbb
loopne
je
xchg
jnp
jmp
(bad)
fld
push
cmp
mov
imul
out
mov
sar
in
mov
mov
jecxz
or
mov
call
cdq
and
adc
fstp
jecxz
push
call
xchg
jecxz
into
jecxz
lods
jmp
rcr
shl
test
(bad)
dec
push
repnz
test
cwde
fcmovnb
dec
mov
sbb
cmps
std
or
mov
imul
out
mov
mov
call
pcmpgtd
mov
jmp
ds
dec
jns
xchg
cmp
mov
mov
sbb
mov
imul
cdq
int3
dec
or
call
pcmpgtd
mov
xor
(bad)
xchg
sbb
cmp
ja
sbb
test
(bad)
dec
or
(bad)
test
push
(bad)
dec
pop
dec
cmp
int3
arpl
data16
hlt
mov
cmp
mov
imul
fcmovnbe
in
fcmovnb
lahf
mov
in
cdq
ins
fld
jecxz
xchg
aad
cdq
fcmovnbe
inc
je
cmp
dec
jns
jge
shr
jae
cmp
mov
jecxz
jnp
inc
scas
out
sbb
lods
fsub
lahf
sub
ja
dec
fld
loope
mov
xchg
jnp
or
push
sbb
inc
cmp
mov
xor
adc
imul
or
rcl
out
cmps
and
and
pop
outs
xchg
sbb
mov
cmp
cld
into
(bad)
out
mov
mov
push
je
pop
data16
pop
or
data16
je
test
mov
sub
int3
prefetch
imul
out
cli
cmp
push
sbb
cmp
cdq
je
imul
push
sbb
test
mov
(bad)
dec
mov
mov
or
fcmovnb
sbb
sub
arpl
pop
data16
cmp
nop
jnp
cdq
and
and
mov
sbb
xchg
push
add
push
fstp
repz
mov
mov
in
js
pushf
lods
lods
mov
jecxz
aam
cdq
and
sub
mov
fdiv
je
jbe
mov
xchg
into
clc
out
in
add
mov
aas
lods
call
out
mov
mov
jecxz
aam
cdq
and
(bad)
jecxz
sub
fsub
out
push
int
(bad)
jecxz
int3
pop
or
mov
nop
out
imul
(bad)
das
mov
fisttp
xchg
jecxz
aam
cdq
je
mov
cmp
jnp
jmp
cmps
lock
fld
push
cmp
xlat
jg
data16
sbb
mov
imul
jbe
cmp
cdq
je
pop
mov
xchg
jecxz
je
aam
fcmovnb
lahf
mov
mov
imul
or
shr
imul
sbb
dec
test
and
push
mov
cmp
jnp
push
cmps
pop
data16
fwait
pcmpgtd
mov
jmp
cmp
cmp
add
cmp
jnp
push
loop
pop
dec
dec
mov
jne
cmp
movs
test
(bad)
xchg
push
(bad)
out
pop
popfw
and
data16
jp
dec
xchg
les
push
mov
cmp
jnp
push
add
pop
data16
jnp
data16
mov
jmp
mov
aas
data16
out
add
cmp
jnp
push
loop
pop
dec
cmp
jne
cmp
fmul
(bad)
jecxz
adc
retf
adc
lods
loope
mov
dec
cmp
dec
cmp
dec
cmp
fs
sbb
gs
(bad)
sub
sbb
popa
lea
dec
cmp
je
mov
and
(bad)
pushf
(bad)
adc
mov
fidiv
ror
(bad)
jecxz
int3
imul
and
xchg
ror
(bad)
jecxz
in
(bad)
pop
out
cmp
fst
jmp
or
fcmovnb
dec
cdq
push
(bad)
hlt
mov
and
pop
fidiv
push
aam
pop
data16
jecxz
sbb
movs
rol
and
(bad)
pushf
(bad)
adc
mov
fidiv
ror
(bad)
jecxz
int3
dec
or
ror
(bad)
jecxz
in
(bad)
pop
out
cmp
fst
jmp
or
fcmovnb
dec
cdq
push
(bad)
hlt
loop
cmp
and
pop
fidiv
push
aam
pop
data16
dec
ss
fisttp
das
aaa
sbb
pushf
in
ins
data16
(bad)
out
mov
mov
(bad)
leave
(bad)
jecxz
out
sbb
popa
fnstcw
out
popa
cmc
xchg
arpl
inc
pop
lods
jl
push
and
sbb
dec
cmp
fisubr
cmp
popa
in
je
pop
cmp
and
movs
imul
div
popa
in
data16
jbe
int3
stos
or
and
pop
mov
and
sbb
cld
adc
out
out
pop
mov
jecxz
aam
and
sbb
popa
test
ss
dec
cmp
push
adc
jbe
dec
cmp
dec
cmp
dec
cmp
and
std
mov
(bad)
jnp
or
rcr
jbe
cmp
push
mov
pop
dec
cmp
int3
jnp
data16
sbb
xchg
sbb
sbb
sbb
movs
dec
xor
mov
pop
data16
and
data16
bound
add
lods
mov
popf
lea
sti
adc
push
sbb
mov
(bad)
fninit
mov
jecxz
and
sbb
lods
loope
mov
pushf
aam
cdq
je
cdq
retf
jecxz
dec
push
test
and
gs
nop
jnp
push
and
mov
cdq
fstp
imul
cmp
and
and
cmp
and
mov
fcmovnb
xchg
mov
test
(bad)
dec
or
push
sbb
enter
dec
cmp
int3
aaa
adc
imul
jmp
xchg
repnz
fld
dec
cmp
jns
or
push
sbb
retf
xor
data16
jne
and
jbe
dec
int
data16
sbb
daa
and
inc
push
test
adc
and
fistp
cmp
popa
fisttp
aaa
sbb
dec
cmp
dec
cmp
xor
cmp
in
leave
cmp
aad
xor
dec
out
sar
xor
sbb
out
pop
pop
data16
pop
push
ror
test
adc
fdivr
adc
inc
cmp
int
adc
and
or
loop
cmp
sbb
sbb
pop
xor
mov
outs
and
and
cmp
mov
rol
pop
dec
lea
and
cwde
mov
cmp
shl
pop
data16
shl
hlt
pop
rol
out
mov
mov
fdiv
enter
fisttp
inc
rol
in
sub
cdq
test
(bad)
dec
cdq
xchg
shl
cdq
fcmovnbe
or
cmps
sub
xchg
jecxz
(bad)
(bad)
sub
test
mov
xor
push
fcmovnb
aaa
jecxz
(bad)
rcr
in
mov
loope
fist
mov
hlt
dec
add
mov
adc
in
cmp
jecxz
shrd
fcmovnb
and
scas
mov
aaa
jecxz
(bad)
mov
xchg
(bad)
jecxz
mov
imul
pusha
cdq
pop
data16
xchg
adc
mov
sbb
sbb
and
cmp
loop
ds
test
and
call
push
add
cmps
sbb
shl
sbb
sbb
and
cmp
je
jecxz
fcmovnb
inc
out
dec
test
and
adc
test
sbb
fisttp
shl
hlt
sbb
(bad)
jecxz
int
sbb
mov
fdiv
and
pop
sbb
imul
xor
data16
sbb
cwde
sbb
cmp
cdq
push
xor
jb
cmp
ds
rcr
xchg
jecxz
(bad)
(bad)
cmc
push
and
sbb
popa
sub
jecxz
movs
into
je
and
daa
arpl
daa
arpl
pop
push
add
pop
push
or
pop
push
adc
pop
push
sbb
pop
push
and
pop
push
sub
pop
push
xor
pop
sub
data16
(bad)
xor
in
fcmovnb
daa
arpl
pop
push
sub
arpl
daa
arpl
mov
je
xor
sbb
push
sub
fisubr
cmp
fcmovnb
jecxz
fisttp
mov
adc
data16
sti
out
mov
mov
in
in
cdq
fstp
lahf
ret
(bad)
(bad)
mov
mov
int3
mov
data16
cdq
mov
(bad)
jecxz
jecxz
push
data16
inc
pusha
and
xchg
sahf
or
(bad)
sbb
and
cdq
addr16
jecxz
fisttp
sti
gs
mov
cmp
cdq
cmp
cdq
fstp
imul
push
and
push
sbb
jae
sbb
fisttp
sti
gs
bound
cmp
sar
lods
shr
and
mov
(bad)
rol
jecxz
and
and
nop
jnp
sub
and
je
and
sbb
mov
imul
data16
mov
xchg
addr16
jecxz
in
(bad)
pop
out
cmp
fnstsw
jbe
dec
addr16
and
mov
addr16
jecxz
int3
(bad)
mov
sbb
jecxz
and
cmp
and
sbb
pop
loope
dec
cmp
scas
cmp
adc
imul
sbb
mov
ficom
cdq
lods
(bad)
xchg
jecxz
(bad)
jecxz
je
cdq
xchg
fld
jecxz
dec
adc
and
mov
xchg
fld
jecxz
int3
mov
fdiv
(bad)
sbb
and
cdq
addr16
jecxz
fisttp
repz
mov
cmp
cdq
fstp
imul
aaa
les
push
sbb
jae
sbb
fisttp
repz
bound
cmp
sar
sbb
scas
fstp
pop
and
ror
push
sbb
and
sti
mov
cmp
int3
sbb
data16
sub
jns
mov
xor
int
sbb
call
iretw
add
shl
mov
arpl
or
sbb
bound
cmp
dec
fmulp
and
push
sbb
(bad)
xor
fisttp
repz
imul
cmp
sbb
fcmovnb
sbb
cdq
fild
in
fdiv
jecxz
fld
jecxz
(bad)
push
xor
rol
jecxz
je
mov
cmp
data16
xchg
jecxz
(bad)
jecxz
je
sub
test
mov
xor
movs
test
adc
sbb
and
(bad)
int3
push
adc
out
jnp
mov
xor
int
sbb
mov
sbb
mov
imul
mov
rol
jecxz
je
xor
cmp
data16
xchg
jecxz
(bad)
jecxz
je
sub
js
mov
test
adc
sbb
and
mov
cmp
int3
cmp
dec
mov
xor
int
pop
data16
in
fdiv
jecxz
fld
jecxz
(bad)
push
mov
jecxz
(bad)
rcr
ins
and
lahf
mov
and
xchg
jecxz
(bad)
jecxz
je
sub
js
mov
xor
movs
test
adc
sbb
and
ja
cmp
int3
mov
sub
js
mov
sbb
int
pop
data16
xchg
addr16
jecxz
in
(bad)
pop
out
cmp
fnstsw
jbe
dec
cmp
jnp
or
sar
and
jecxz
or
pop
data16
sub
and
sbb
cmp
jecxz
(bad)
jecxz
and
and
mov
xchg
loop
cmp
cdq
fild
and
or
push
xor
int3
pop
adc
and
sub
js
mov
ds
int
push
data16
cdq
cdq
fcmovb
jecxz
scas
mov
and
adc
test
(bad)
dec
jmp
int3
loope
fld
dec
cld
jnp
jmp
int3
loope
fld
mov
loopne
je
and
sbb
mov
imul
data16
jnp
data16
mov
push
sbb
dec
cmp
jnp
or
shl
push
add
pop
data16
arpl
data16
push
fs
(bad)
fcmovb
jecxz
and
and
mov
xchg
loop
cmp
cdq
fild
and
or
push
repnz
cmp
int3
push
sbb
(bad)
sub
js
mov
ds
int
push
data16
cdq
cwde
fcmovb
jecxz
test
(bad)
lahf
scas
fstp
pop
and
(bad)
(bad)
jecxz
out
mov
fmul
in
jecxz
cdq
addr16
jecxz
test
(bad)
dec
push
or
pop
test
fcmovnb
dec
mov
xor
cmps
std
or
call
jecxz
(bad)
mov
xchg
mov
dec
cmp
je
and
pop
push
cmps
pop
data16
scas
sbb
mov
xchg
fcmovb
jecxz
es
sbb
and
test
mov
add
shl
sbb
arpl
in
(bad)
pop
out
cmp
fnsave
mov
ja
sub
fs
rcl
(bad)
jecxz
int3
jecxz
data16
sbb
mov
imul
and
test
mov
mov
fcmovnb
lahf
scas
fstp
pop
and
cmp
cdq
jbe
xchg
sti
rol
jecxz
ja
test
mov
cmp
cdq
je
push
push
aam
pop
data16
push
and
sbb
xchg
int
cdq
fcmovnbe
or
push
pusha
cdq
pop
data16
xchg
data16
sbb
and
sbb
push
sbb
and
sbb
dec
sbb
and
xchg
jecxz
(bad)
jecxz
lods
shr
lods
mov
xchg
jecxz
(bad)
(bad)
jbe
dec
cmp
fisttp
shl
cmp
sub
aam
fs
in
out
sbb
mov
loope
fld
push
mov
pop
data16
xchg
and
sbb
and
cdq
xchg
fld
jecxz
dec
cmp
jnp
cdq
xchg
int
cdq
fcmovnbe
lds
cmp
rcl
(bad)
jecxz
int3
dec
pop
data16
sbb
nop
jnp
addr16
sbb
fcom
in
jecxz
sbb
push
jo
cmp
jnp
push
je
pop
dec
cmp
movs
rcr
mov
adc
and
ror
arpl
movs
into
cmp
sbb
ret
mov
xchg
(bad)
jecxz
jecxz
or
adc
imul
cmp
data16
inc
scas
out
sbb
lods
fcomp
xor
xor
sahf
lods
(bad)
xchg
and
add
addr16
adc
cmc
cmp
cmps
inc
or
sub
push
mov
xor
push
int3
movs
pop
data16
cmps
sbb
mov
xchg
ret
mov
sahf
lods
(bad)
daa
push
int3
movs
pop
push
xor
push
movs
cwde
pop
data16
mov
sub
test
adc
(bad)
sub
js
mov
sbb
pop
or
stc
cmp
fisttp
repz
cmp
cmp
fmul
sti
out
popa
int
mov
cmp
fisttp
stc
gs
and
sbb
adc
and
dec
pop
cdq
adc
and
shl
bound
daa
push
add
pop
push
sub
pop
data16
pop
cdq
adc
and
and
daa
push
add
pop
push
es
pop
push
lea
and
mov
jmp
outs
lods
shr
lods
jl
out
jecxz
(bad)
pop
adc
and
cmp
mov
and
sub
test
adc
mov
pop
mov
adc
sbb
cmp
rep
cmp
sbb
adc
sbb
cmp
mov
and
sub
js
adc
mov
push
test
pop
adc
and
dec
sbb
cmp
sub
test
adc
mov
jp
js
outs
dec
cdq
push
sub
imul
cmp
cmp
jp
aad
xor
sbb
add
out
and
test
sbb
add
mov
cmp
add
out
and
test
sbb
add
mov
cmp
add
out
and
test
sbb
add
mov
cmp
add
out
and
test
sbb
add
mov
cmp
lods
fmul
int3
xchg
and
(bad)
sbb
imul
imul
in
xor
adc
cmp
sbb
push
imul
dec
out
lea
xor
adc
mov
jbe
int3
call
and
sbb
mov
(bad)
jecxz
jnp
fistp
movs
aad
jbe
cmp
data16
sbb
and
sbb
iret
adc
jecxz
sbb
sbb
jo
adc
in
jecxz
fcmovnb
fwait
pushf
(bad)
xchg
jmp
test
sbb
cmp
popf
mov
repz
inc
and
adc
and
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
out
and
test
sbb
add
out
and
test
sbb
add
out
and
test
sbb
add
out
and
test
sbb
add
out
and
test
sbb
add
out
and
test
sbb
add
out
and
test
sbb
add
out
and
test
sbb
add
out
and
test
sbb
add
out
and
test
sbb
add
out
and
test
sbb
add
out
and
test
sbb
add
out
and
test
sbb
add
out
and
test
sbb
add
call
data16
sbb
add
mov
cmp
add
call
data16
sbb
add
mov
cmp
add
call
data16
sbb
add
mov
cmp
add
call
data16
sbb
add
mov
cmp
add
call
data16
sbb
add
mov
cmp
add
call
data16
sbb
add
mov
cmp
add
call
data16
sbb
add
mov
cmp
add
call
data16
sbb
add
mov
cmp
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
and
test
sbb
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
call
data16
sbb
add
call
data16
sbb
add
call
data16
sbb
add
call
data16
sbb
add
call
data16
sbb
add
call
data16
sbb
add
call
data16
sbb
add
call
data16
sbb
add
call
data16
sbb
add
call
data16
sbb
add
call
data16
sbb
add
call
data16
sbb
add
call
data16
sbb
add
call
data16
sbb
add
call
data16
sbb
add
call
data16
.byte
