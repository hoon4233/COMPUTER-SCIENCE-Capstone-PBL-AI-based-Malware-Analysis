sti
(bad)
push
rol
cmp
je
push
push
and
push
mov
mov
and
adc
and
mov
or
or
push
push
mov
test
mov
or
adc
call
add
mov
inc
and
xor
cmp
jne
sbb
pop
outs
fidiv
and
pop
xor
cmp
fstp
or
cmp
pop
push
loopne
push
je
mov
mov
dec
add
dec
add
push
mov
ret
push
push
mov
xlat
fist
dec
mov
or
push
mov
mov
push
mov
(bad)
fld
sbb
pop
pop
ret
ds
mov
and
push
push
cmp
div
cmp
cmp
jb
cmp
test
aaa
or
andps
mov
push
push
push
push
stos
test
pop
mov
fstp
neg
or
pop
adc
ss
repz
add
aas
dec
pusha
cmps
jmp
fucomi
mov
cwde
movs
aad
inc
inc
jmp
rcl
mov
test
mov
(bad)
jmp
mov
int3
xchg
rcl
add
pop
cmps
mov
or
adc
nop
pop
data16
inc
push
fs
jmp
jo
out
sub
jbe
mul
push
fadd
out
imul
cs
sub
rol
add
(bad)
(bad)
lods
nop
rcl
out
xchg
push
inc
jne
or
(bad)
sub
sti
je
test
call
out
ja
ja
pop
add
or
lock
and
push
fs
push
ins
cmp
(bad)
cmp
xchg
mov
jp
je
pop
adc
rcr
adc
xchg
push
cmp
cwde
loop
xor
push
push
outs
inc
jno
add
aas
ds
out
ret
add
or
add
sbb
mov
in
cmps
push
mov
clc
daa
cmp
push
stos
pop
cmp
imul
add
and
inc
out
imul
pop
adc
jmp
or
int
jnp
cmp
adc
push
push
xchg
mov
movs
int
pop
ror
pop
add
imul
xchg
adc
sbb
push
xor
lea
rol
adc
pushf
mov
or
hlt
pushf
pop
std
int3
push
aad
inc
call
push
ins
lahf
pusha
xchg
push
ret
aas
icebp
inc
xor
sbb
mov
div
loop
cli
mov
in
mov
ds
and
add
mov
pop
retf
mov
imul
outs
scas
add
inc
ss
add
test
push
cmp
mov
and
inc
or
cmp
mov
and
jl
ror
cs
adc
mov
fcmovnu
mov
sar
push
(bad)
cmp
sbb
dec
adc
push
mov
jmp
sbb
mov
jg
adc
fldcw
add
inc
add
mov
imul
push
push
push
mov
sub
iret
repz
and
sbb
xor
out
pusha
mov
mov
cmps
stc
pop
mov
dec
dec
mov
push
mov
mov
imul
push
inc
mov
call
je
jne
divps
adc
sub
aam
test
jle
and
(bad)
ffree
jecxz
add
loopne
inc
lea
daa
(bad)
mov
add
add
mov
or
push
xor
cmp
je
mov
nop
mov
add
inc
push
jg
jg
repnz
add
test
jne
mov
shl
in
pop
mov
or
push
jmp
push
or
pop
call
xchg
test
push
movzx
int3
or
add
jns
adc
jo
ins
pop
add
lock
add
sbb
push
push
push
call
add
cmp
cs
popf
add
cmp
sbb
cmp
callw
mov
clc
fisttp
mov
jne
inc
mov
jne
scas
ins
sub
cmp
(bad)
adc
loop
mov
pop
cmp
ret
sbb
mov
test
inc
sub
push
sahf
add
or
int
js
neg
dec
cdq
(bad)
cmp
and
adc
call
ja
adc
jbe
adc
inc
mov
cmp
mov
xchg
(bad)
fsubp
dec
and
test
mov
and
and
addr16
scas
adc
jo
xor
or
xlat
sbb
xchg
jp
rcr
mov
push
jo
push
dec
sbb
cmp
push
jns
pop
pop
dec
xor
push
sbb
pop
lock
cmp
add
std
sbb
dec
lds
dec
clc
sub
sub
add
xchg
jge
pop
sbb
jle
ins
or
dec
fcom
cmp
dec
lds
enter
outs
ret
lock
jp
pop
pop
pop
adc
xor
cmp
mov
add
or
adc
push
dec
sbb
push
sbb
fs
outs
or
js
xor
ins
sbb
test
or
das
hlt
cli
ins
scas
mov
loope
pop
ins
ins
sbb
cwde
shl
(bad)
cld
sbb
inc
sub
jl
cdq
fs
and
xchg
cmps
std
lahf
mov
adc
add
sahf
out
lea
inc
add
pop
mov
adc
dec
or
push
out
ss
ja
mov
push
test
add
push
sgdtd
pop
or
push
stc
or
or
or
dec
jns
mov
adc
jmp
xor
jp
fdivr
div
mov
mov
pop
xor
pop
ret
xchg
imul
push
es
imul
scas
add
shl
add
push
push
xor
mov
sbb
or
sub
dec
inc
retf
add
mov
jb
pop
pop
pop
(bad)
cmp
jg
cmp
jge
push
lea
mov
mov
add
pop
cmp
je
int3
add
jl
push
movs
out
ret
xor
ret
pop
cmp
mov
in
cmps
mov
xchg
mov
cmp
jns
add
bound
jbe
iret
xor
ins
push
mov
push
outs
out
pop
pop
sbb
jns
into
sub
fdiv
xlat
div
sbb
mov
xchg
lea
nop
pop
test
sub
loopne
jl
mov
mov
xor
test
xchg
push
or
xchg
enter
pop
jbe
dec
xchg
shr
add
inc
adc
push
pop
call
add
rol
inc
xor
call
push
push
mov
in
push
clc
mov
inc
add
adc
cmp
jae
lea
add
mov
scas
fs
pop
in
mov
mov
mov
inc
mov
sub
test
(bad)
aam
jns
ror
push
out
out
daa
mov
ffreep
js
ja
in
sbb
mov
xchg
add
scas
fnstenv
(bad)
mov
xor
movs
jns
clc
lea
mov
cmp
add
mov
pop
out
aaa
shl
cmp
add
cmps
loopne
lock
in
xchg
out
retf
cld
mov
jne
(bad)
fs
ins
inc
(bad)
inc
fdivr
out
lea
push
imul
mov
pushf
and
imul
add
push
adc
add
fs
sar
or
popf
fst
xor
cld
xchg
push
add
in
rcl
lods
sub
dec
jnp
test
cld
clc
mov
(bad)
dec
fisub
sub
and
adc
and
(bad)
sbb
leave
ins
xchg
sti
or
iret
or
dec
cld
inc
inc
mov
je
jns
sub
daa
push
ins
xor
std
dec
add
clc
mov
mov
adc
push
or
fmulp
mov
inc
xchg
call
fcmovu
stos
jmp
ret
sub
inc
test
and
jbe
xor
push
push
sbb
dec
hlt
arpl
add
fidivr
add
cmp
sti
mov
data16
push
movs
dec
bound
rol
ss
mov
arpl
(bad)
into
mov
mov
movs
push
(bad)
arpl
cli
sar
xor
push
rcr
lahf
in
loopne
ins
xchg
sbb
ret
pop
sar
call
lock
mov
mov
mov
mov
mov
add
sub
push
dec
adc
jnp
or
sub
sti
jae
jnp
lods
scas
lods
adc
cmp
push
and
adc
mov
pop
jnp
mov
pop
adc
or
dec
repz
push
push
int3
or
pop
ror
in
mov
dec
pmulhuw
and
cmp
inc
cmp
repnz
or
push
ds
push
in
jb
test
mov
inc
or
data16
paddusw
xchg
adc
push
mov
push
xchg
mov
push
mov
sbb
add
push
push
shr
mov
jg
push
mov
das
xor
pop
or
fild
dec
adc
(bad)
cmp
iret
or
cmp
les
mov
daa
pop
push
inc
sub
les
push
in
jmp
push
push
mov
sahf
mov
jle
push
add
repz
cmps
adc
call
pop
cmp
jg
mov
pop
sar
jb
sbb
push
sahf
dec
push
push
push
mov
jb
mov
ret
addr16
xchg
or
mov
ret
push
pop
jnp
add
and
les
fadd
int3
mov
xchg
sub
and
or
sbb
mov
add
(bad)
jb
push
jno
icebp
or
mov
repnz
sahf
add
adc
add
mov
dec
xor
lods
inc
and
adc
add
fldz
test
inc
push
lea
into
push
movs
xchg
and
(bad)
bound
xchg
cs
lea
jge
cs
gs
arpl
and
sbb
fcom
dec
add
cmp
mov
add
test
jge
in
in
mov
xor
mov
and
fwait
dec
and
sbb
aam
xchg
add
or
pusha
inc
sbb
out
cmp
fstp
cmp
adc
aad
cmc
aam
add
pop
test
pushf
cli
add
mov
jne
push
ja
ins
adc
lea
sti
sbb
rcr
jmp
xor
xor
jmp
fistp
or
arpl
dec
add
(bad)
hlt
pop
jl
jg
cs
shl
add
push
test
test
jne
xchg
cmps
pusha
test
icebp
lds
test
cmps
lds
dec
mov
mov
scas
mov
xchg
fcomp
push
sti
add
loope
test
fisttp
js
jg
lea
add
iret
jl
ret
ins
adc
fmul
mov
inc
nop
call
adc
inc
push
js
sahf
push
fimul
and
aas
scas
aam
das
xchg
mov
(bad)
or
neg
add
mov
inc
fstp
mov
mov
cmp
add
test
(bad)
mov
neg
aam
int
jb
repnz
inc
inc
sbb
inc
pop
vdivpd
movzx
cld
les
adc
aas
jg
mov
push
out
jns
mov
adc
fbstp
push
mov
push
cmps
push
inc
sbb
mov
adc
or
nop
pop
mov
ret
sbb
or
mov
fucom
fld
xchg
(bad)
sbb
xlat
jge
adc
jae
repnz
dec
add
add
and
sub
sar
outs
jne
je
mov
movs
and
mov
stos
shl
lock
into
lock
data16
inc
or
sbb
ret
xor
adc
rcl
jns
rcl
inc
cmp
movs
(bad)
pop
mov
(bad)
pop
push
loop
leave
pop
je
mov
jb
mov
dec
jg
pusha
add
mov
sar
rcr
movs
mov
hlt
add
lock
dec
add
ins
push
ja
sub
in
adc
push
xor
ins
cmp
repz
inc
mov
jnp
ja
pusha
div
adc
add
aad
xchg
adc
dec
jmp
jbe
add
in
mov
mov
inc
inc
cmp
jl
lea
and
push
mov
adc
push
mov
add
xchg
shl
or
push
jg
inc
or
sub
cwde
sbb
cmp
mov
(bad)
clc
jl
mov
jmp
sbb
retf
push
rcl
push
mov
jmp
xor
pop
inc
jg
sahf
je
cmp
jle
ds
cmp
je
add
lea
push
push
or
jb
mov
lea
push
and
(bad)
pushf
inc
add
jmp
or
jns
push
xor
rcr
add
adc
out
cmc
rol
sub
pop
add
mov
fst
jnp
loopne
jecxz
out
push
sbb
sbb
ret
imul
in
lea
retf
or
imul
or
js
test
jno
inc
pop
call
iret
mov
add
pop
in
push
in
out
xchg
stc
add
jge
cmp
pop
hlt
fild
je
inc
dec
xor
mov
jge
jmp
jecxz
cmp
jp
jnp
ds
out
and
push
jmp
sbb
je
xor
push
push
mov
adc
pop
and
mov
mov
sbb
leave
int3
adc
jb
(bad)
pop
invd
cdq
je
xchg
test
frstor
jmp
mov
jb
xchg
sbb
ret
mov
loopne
or
pop
repnz
pusha
xchg
add
add
add
sub
push
sub
jne
inc
cs
and
inc
rcl
sub
push
xchg
sbb
retf
sbb
inc
es
jb
jnp
adc
aas
repz
jnp
push
jle
adc
inc
repz
adc
int3
dec
cmc
dec
ret
xor
jmp
loopne
jns
and
cmc
mov
pop
or
jae
daa
pop
or
sbb
out
pop
jbe
or
sbb
adc
lds
and
cmp
mov
and
out
jmp
push
xor
adc
fadd
dec
sub
call
or
test
lock
ins
xchg
popf
jo
dec
push
bound
loopne
ds
xor
jl
mov
rcl
jg
dec
mov
push
leave
adc
call
dec
jl
xchg
xchg
mov
int
mov
shr
mov
add
and
inc
mov
cmp
push
xor
jbe
stos
pop
lods
sbb
xor
vpmuludq
ins
dec
pop
pop
out
out
dec
mov
sub
mov
je
sub
and
out
je
pop
je
xchg
jl
ins
sub
or
xchg
push
loope
inc
rcr
push
ss
data16
or
sbb
or
popf
jl
sub
jae
adc
mov
xor
mov
call
adc
xchg
add
or
popa
cmp
pop
add
adc
push
jb
or
xchg
xor
push
fmul
dec
adc
inc
fs
jb
dec
inc
addr16
pop
push
loop
jo
sbb
arpl
dec
push
add
pop
xchg
or
lahf
sub
enter
push
sar
inc
mov
sbb
and
push
push
sub
addr16
les
rol
pop
sfence
cmp
jbe
fimul
mov
sti
dec
cmp
mov
push
push
dec
outs
mov
inc
cmp
jb
outs
mov
sub
mov
test
or
lea
in
mov
add
out
add
in
adc
ins
lock
pop
mov
sbb
adc
outs
out
rcr
add
pop
(bad)
adc
fnstenv
sub
popa
mov
imul
iret
adc
inc
add
jbe
dec
imul
mov
push
inc
ja
push
add
xor
xor
imul
mov
pop
movlps
mov
loopne
cmp
dec
test
adc
sbb
push
push
dec
mov
test
enter
sbb
inc
cmp
repz
and
push
jl
xchg
lea
imul
push
push
jbe
and
stos
add
mov
retf
shl
cmp
push
call
adc
dec
lds
inc
mov
mov
push
je
test
or
iret
es
jb
cmp
pop
int3
push
pop
or
pop
mov
mov
les
inc
or
sbb
pushf
cmp
jle
or
imul
xor
or
jmp
jg
push
data16
jg
scas
lds
push
inc
push
test
and
adc
je
cmp
xor
(bad)
pop
ja
or
push
cmp
jae
adc
ja
jne
and
inc
jmp
test
sub
std
jo
ins
add
call
sbb
or
sub
push
fninit
inc
pop
xor
nop
push
inc
xlat
cmp
cmps
dec
dec
mov
cmp
mov
mov
loopne
or
cmp
or
ja
xlat
sti
sub
adc
lea
imul
xchg
push
add
inc
(bad)
dec
in
loop
pop
clc
jge
push
aas
inc
mov
add
test
movs
and
popf
add
call
jmp
mov
pop
pusha
test
jmp
inc
imul
or
jb
leave
movs
mov
loop
and
or
cmp
pop
jb
xor
sub
repnz
xchg
mov
je
add
sbb
cmp
push
inc
push
push
mov
push
or
jmp
pop
lods
call
push
shr
inc
popa
xlat
push
sub
add
inc
imul
sbb
sahf
or
fiadd
sar
sbb
add
and
xor
xchg
lahf
outs
lahf
test
xor
sti
addr16
push
int
inc
add
xor
int3
(bad)
lahf
mov
mul
mov
push
add
enter
ds
pop
push
add
push
or
or
js
loop
or
or
pop
xchg
jo
cmp
pop
and
mul
push
in
out
sub
dec
adc
call
and
rol
loopne
inc
and
mov
in
or
inc
or
ss
cmp
and
data16
mov
push
adc
mov
add
push
jge
sbb
dec
xor
std
adc
adc
hlt
jno
adc
pop
dec
xor
mov
mov
fs
mov
mov
dec
mov
test
pop
(bad)
ret
mov
sar
or
xor
cmp
je
push
call
adc
cmps
mov
jmp
lods
mov
lock
push
add
and
aam
jge
mov
pop
ds
test
sbb
or
cdq
mov
sub
push
pop
loop
push
clc
inc
add
add
pop
or
sub
push
push
outs
retf
jbe
mov
in
jl
or
je
int3
sub
cmp
out
adc
ja
movzx
sbb
and
or
test
movs
push
cmp
je
dec
mov
div
jl
jg
fucomip
mov
loope
cmp
jge
lods
sub
push
push
mov
inc
jne
not
mov
and
int
fcomp
inc
cli
or
retf
or
ja
cs
imul
fstp
ret
push
mov
mov
push
pop
and
xchg
sub
push
pop
aam
sbb
in
or
mov
data16
je
xchg
cmp
enter
cmp
popa
movs
adc
sub
mov
sub
mov
retf
push
push
push
add
add
xchg
xchg
sbb
add
int3
adc
push
sub
jg
mov
push
shr
ret
dec
inc
or
cmp
xchg
imul
mov
cmp
jo
es
sbb
inc
cli
and
mov
rcl
aas
push
fadd
retf
mov
cmp
lahf
or
sub
adc
mov
push
fsub
adc
shl
call
out
iret
pushf
dec
xchg
lea
pop
mov
mov
cmp
hlt
cwde
inc
call
cmp
sub
dec
outs
loope
ret
pop
push
fld
jl
test
jle
sub
jo
xor
adc
sub
jl
add
or
add
mov
pop
ins
mov
push
lock
enter
add
scas
push
sub
mov
adc
les
shl
fild
test
cmp
jg
add
scas
push
or
cmc
xor
push
pop
dec
fstp
mov
sbb
sbb
inc
sbb
ret
fcomp
push
scas
mov
jnp
cmps
clc
adc
fwait
inc
push
sub
fmul
xchg
das
cmp
and
adc
add
rol
cmp
inc
cmp
xor
movs
push
les
mov
div
inc
jle
mov
mov
adc
ret
aaa
ins
stos
(bad)
pop
mov
pop
mov
jl
inc
push
jne
sbb
dec
jae
sub
les
push
cmps
lds
pop
cmp
call
or
out
inc
lea
test
jl
and
mov
xor
jle
push
fcom
or
stos
rcl
fld
je
jle
movs
mov
loop
(bad)
shl
test
neg
movs
sbb
push
sbb
sub
js
mov
pop
fsubr
dec
pushf
fidiv
dec
adc
imul
sahf
cmp
cmp
sar
sub
aaa
loope
mov
lods
sub
inc
or
into
jge
jo
dec
cmps
loopne
test
aaa
pop
add
sar
sbb
cmps
ror
cld
dec
push
movs
pop
push
pop
add
and
ficom
sub
sub
push
sbb
cmp
dec
mov
jle
(bad)
pop
inc
pop
aas
adc
(bad)
jle
pop
xchg
mov
cmp
mov
fiadd
shl
in
(bad)
cmp
call
test
mov
mov
inc
idiv
add
adc
std
add
add
adc
cmp
dec
outs
aaa
sbb
in
out
or
or
je
or
or
popa
xchg
cmp
jb
xor
dec
mov
or
push
add
mov
mov
in
adc
ins
ds
cmp
mov
or
arpl
stos
mov
pop
outs
or
scas
lea
push
ror
clc
repz
call
add
cld
or
cdq
call
pop
loope
add
push
xchg
pop
push
sbb
cli
sub
aad
outs
push
mov
dec
lock
pop
jns
mov
pop
mov
xchg
xchg
xor
int3
fistp
pop
fidiv
push
je
test
inc
sti
dec
and
je
xchg
call
jmp
mov
cmp
jb
add
(bad)
and
add
lock
cwde
adc
mov
push
add
inc
adc
or
ficomp
jb
jmp
push
adc
add
pusha
push
and
sbb
ficom
inc
cmps
sub
push
xor
and
cmp
icebp
pop
jne
aam
mov
or
out
push
pusha
cmp
mov
jne
test
loope
pop
out
ret
push
and
daa
lods
dec
neg
aas
pop
test
dec
inc
jne
mov
mov
add
jo
xor
pop
add
shr
les
push
movs
or
jns
and
or
lahf
or
and
mov
js
idiv
mov
or
(bad)
data16
into
aam
jmp
leave
inc
outs
les
loopne
clc
push
push
dec
call
cmp
dec
rol
adc
mov
ud0
jmp
jmp
fisttp
loop
mov
adc
fidivr
inc
push
push
push
mov
sub
push
sub
mov
sub
push
push
push
sub
dec
push
inc
inc
mov
pusha
pop
sub
push
ins
hlt
je
push
or
test
je
adc
mov
add
pusha
xor
jo
jecxz
call
inc
cmp
call
retf
pop
jg
jno
fnstenv
add
stc
mov
fadd
ret
mov
pusha
inc
and
push
and
fld
push
ds
pop
xor
sub
mov
add
or
or
sbb
les
push
shl
pop
pop
ret
xor
add
dec
cmp
and
(bad)
out
adc
pop
or
add
mov
adc
pop
aam
or
lea
sub
jo
sbb
xor
push
sbb
cmp
push
scas
std
data16
or
xchg
fld
pop
loope
cwde
and
inc
pop
sub
mov
nop
pop
mov
mov
ss
push
or
inc
pushf
add
jl
mov
xor
mov
mov
xor
cmp
xchg
xor
mov
push
or
adc
push
pop
or
add
add
call
cs
je
jb
and
add
repnz
daa
push
clc
rol
je
push
or
test
mov
or
mov
lods
out
sbb
mov
jle
jle
out
pop
mov
test
mov
add
fisubr
mov
sbb
call
push
(bad)
pop
or
adc
ret
rol
inc
add
and
mov
ins
jmp
jbe
sub
rep
mov
sbb
jl
jo
inc
cli
outs
or
in
arpl
sub
adc
mov
add
int3
scas
in
sbb
add
mov
jmp
shl
mov
sbb
mov
jne
pop
test
inc
add
xchg
pushf
jbe
pop
sub
xor
xor
sub
adc
or
jge
clc
out
je
jmp
jb
xchg
je
test
jbe
push
add
add
div
sbb
sbb
dec
add
jmp
add
rol
inc
pop
jle
xchg
sbb
push
add
ja
int
(bad)
sbb
mov
sbb
jbe
enter
int3
sbb
or
retf
jb
ror
xor
test
call
dec
jmp
repnz
mov
test
mov
lahf
xchg
xchg
jmp
jb
jmp
pop
mov
dec
sub
sbb
cmp
sti
sbb
adc
xchg
jo
les
adc
sbb
push
fsubr
icebp
inc
jae
mov
out
push
mov
xchg
cmp
je
das
push
dec
push
cmp
mov
movs
mov
ja
sbb
sbb
test
pusha
jbe
xor
adc
sbb
jl
pop
scas
xchg
pop
mov
dec
rcr
fiadd
add
bound
sar
xchg
jmp
dec
push
ja
xchg
mov
and
xor
pop
xor
xchg
or
repnz
xchg
push
enter
jo
mov
mov
push
or
lea
lea
cdq
sub
adc
shld
push
push
jmp
push
push
jmp
aas
dec
jnp
pop
jle
lea
fidivr
cmp
jle
jbe
add
mov
sbb
aad
repnz
pop
sbb
push
inc
(bad)
rol
mov
cs
dec
push
rol
sbb
bound
or
mov
mov
adc
adc
cmps
cmp
jne
ret
pop
cmc
mov
adc
mov
movs
xor
push
test
lods
je
mov
and
jb
cs
mov
or
xor
inc
add
sahf
in
add
(bad)
cmp
paddd
and
idiv
jmp
sub
push
mov
in
pop
sub
xor
jae
mov
ins
xor
out
mov
mov
xchg
out
mov
mov
mov
test
loopne
lahf
xor
xchg
dec
lock
cld
add
in
dec
ja
mov
or
loopne
sti
in
cmp
cmp
inc
aas
xchg
jbe
sahf
dec
shl
icebp
stc
sub
mov
retf
rcl
inc
les
dec
inc
call
xor
sub
jnp
push
adc
cmp
adc
sub
lods
jg
mov
jns
dec
sbb
fiadd
adc
inc
js
push
push
pop
movs
mov
lock
cs
mov
shr
xchg
out
int
inc
fcomp
das
int
jmp
hlt
or
aas
add
dec
adc
test
xor
xor
and
mov
cmp
sub
in
jl
dec
adc
pop
jns
xchg
retf
repz
test
cmp
push
test
jl
in
mov
aas
mov
xchg
out
bnd
rcl
fcom
call
sub
push
jbe
or
dec
sub
pop
mov
scas
daa
cmps
inc
inc
je
call
pop
gs
mov
push
mov
push
sub
mov
inc
jo
mov
sub
jo
movs
inc
loopne
push
jns
or
adc
sub
fbld
mov
inc
xor
in
pop
push
sbb
repnz
mov
or
push
retf
jl
test
jge
out
repnz
jbe
retf
repz
mov
rol
sub
pop
int3
test
ins
in
xchg
out
sub
or
aas
clc
or
lahf
xchg
xor
adc
adc
sbb
dec
in
imul
cmp
cmp
push
push
or
pop
pop
inc
cmp
pop
ja
jns
or
mov
imul
sub
cld
mov
dec
xor
fisttp
dec
cmp
sbb
jo
movs
mov
je
cwde
nop
xchg
xchg
xchg
retf
call
retf
or
mov
fsubr
adc
fdivr
mov
sub
movs
xchg
mov
mul
dec
cld
cmp
or
mov
cmp
add
mov
jbe
add
je
push
xchg
add
dec
les
enter
dec
movs
push
stc
loopne
loopne
in
mov
les
or
xor
xchg
xchg
dec
mov
xor
sub
cmp
outs
or
pop
cs
pusha
push
xchg
retf
in
pushf
mov
out
mov
pop
int3
(bad)
jb
or
call
jnp
or
or
or
sub
enter
ret
xor
ins
out
xor
movs
mov
dec
jl
push
retf
xchg
mov
sub
in
shr
fcomp
ds
mov
hlt
clc
xor
add
inc
xchg
inc
push
sbb
and
and
cmps
inc
pop
mov
dec
bound
fs
bswap
in
sub
cmp
push
sub
jns
popf
outs
ficomp
js
pop
or
gs
cmp
fs
in
cs
inc
jns
mov
in
sub
ss
pop
pop
or
adc
or
ss
sbb
xor
add
dec
ss
idiv
cld
fwait
jo
xchg
xor
jl
lock
nop
push
xor
mov
pop
inc
rcl
retf
lods
mov
hlt
xchg
clc
retf
xchg
cld
test
pop
outs
xchg
iret
and
mov
cmp
inc
inc
jb
jns
cmps
jbe
pusha
fs
inc
test
mov
sahf
inc
test
mov
ja
in
stos
int3
xor
aam
ret
ret
mov
lock
cmp
pop
stc
sub
mov
pop
in
fcomp
test
or
cmp
sti
mov
sub
bnd
push
dec
xor
fs
mov
pop
cmp
dec
cs
push
test
and
mov
retf
xchg
cld
call
xchg
clc
in
xor
dec
xor
cmp
dec
sub
cmp
jb
test
pusha
fs
retf
leave
mov
add
xor
mov
shr
aam
retf
in
xor
hlt
xor
enter
cmp
cmp
shr
sub
cmp
sbb
add
sub
cmp
xchg
iret
fcomp
sub
mov
es
cmp
push
ja
movs
repnz
push
jb
xchg
je
cmp
es
mov
mov
xor
xor
iret
push
test
or
repz
cdq
sbb
push
sub
and
sub
inc
inc
cs
push
pop
pusha
repnz
cmp
cmps
addr16
jl
xor
mov
cs
xchg
data16
enter
inc
inc
mov
lock
push
cs
push
hlt
clc
gs
or
test
cmp
adc
push
xlat
xor
jb
xor
pop
aad
push
daa
iret
xchg
retf
pop
pop
jae
inc
js
mov
push
mov
movs
mov
movs
mov
mov
out
cmp
xchg
mov
movs
bnd
cmp
lods
movs
stos
cmp
mov
mov
sbb
cs
fcom
mov
xchg
cmps
nop
cmp
adc
cmp
dec
inc
dec
clc
cwde
pusha
fs
call
(bad)
pop
mov
(bad)
or
pop
enter
or
mov
(bad)
enter
lods
mov
mov
in
jae
inc
or
or
adc
xchg
retf
leave
repz
or
and
daa
iret
test
push
push
pop
push
les
pushf
push
je
jl
loopne
in
push
cwde
pushf
mov
retf
dec
mov
loopne
push
cs
in
mov
push
sub
cmp
cmp
sub
popf
mov
sar
fadd
xlat
into
in
movs
lock
aas
cld
js
stos
mov
cmp
and
jns
xchg
dec
mov
cmp
sub
movs
push
pop
pusha
push
mov
movs
nop
mov
cmp
sbb
sahf
outs
int3
xor
adc
lock
jl
clc
in
xchg
adc
mov
or
xchg
aaa
cmp
sub
daa
into
xor
dec
cmp
fcom
stc
xor
jo
je
in
push
mov
cwde
pop
outs
xchg
xchg
pushf
into
fs
jb
lods
imul
xor
in
jb
gs
cmp
dec
in
enter
dec
push
inc
stos
jno
fidivr
dec
fxch
pop
xchg
jo
xor
inc
pop
cs
mov
mov
mov
fs
dec
in
jl
mov
push
test
les
rol
push
sahf
dec
in
hlt
and
cld
sub
enter
add
xor
jns
xchg
xchg
push
cmp
dec
in
pusha
es
js
test
cmp
pushf
cmp
cmp
cmps
xor
pop
inc
fcomp
push
fisubr
mov
cld
xor
ds
mov
retf
ds
retf
push
push
pop
inc
xor
dec
push
cs
sub
xor
mov
cmp
loop
retf
in
mov
mov
lods
pop
dec
fcomp
(bad)
iret
clc
jns
movs
popa
je
test
nop
push
fisub
es
cmp
fldcw
lock
or
push
or
adc
es
sbb
sub
pop
push
mov
cdq
ret
dec
je
cmp
jl
out
push
cwde
xor
retf
repnz
cmp
and
in
push
sub
retf
ret
or
mov
and
mov
inc
aas
aas
sub
xchg
dec
aas
fstp
aas
in
push
fst
nop
sub
lods
arpl
pop
dec
sub
aam
das
shr
xor
cld
aas
test
add
inc
sbb
inc
push
mov
and
and
movs
sbb
and
pop
xor
pusha
jbe
shl
int3
mov
lods
jl
sahf
leave
or
aas
push
aas
leave
sub
adc
pop
jo
bound
fbstp
xor
fidivr
mov
shl
xchg
fsubr
iret
addr16
xor
call
dec
mov
jae
shl
aaa
into
shl
push
test
inc
enter
xor
and
pushf
push
jbe
inc
xor
test
in
push
mov
cs
xchg
retf
lock
clc
push
mov
inc
sbb
in
jb
adc
cmp
sub
arpl
inc
mov
add
movs
xor
pcmpgtd
ja
jle
xchg
nop
sbb
xor
shl
sar
cmp
or
aas
in
retf
sub
add
inc
hlt
jns
xchg
xchg
xchg
and
sub
jns
lds
inc
cmp
pushf
cs
in
push
xchg
retf
repz
sub
mov
ror
and
inc
je
mov
fdivr
cmps
dec
ja
mov
xchg
xchg
addr16
adc
inc
sbb
xor
push
cs
cmp
shl
movs
jb
pop
pusha
push
sub
movs
in
push
mov
push
stc
mov
int3
inc
inc
rcl
sub
xchg
out
in
in
xor
adc
inc
pop
sahf
xchg
and
inc
adc
out
dec
in
mov
loopne
xchg
clc
sub
xchg
cld
add
fcom
inc
stos
cld
fisub
sub
mov
inc
inc
inc
aas
mov
sub
xchg
retf
in
mov
mov
xchg
xchg
pop
jbe
fist
loopne
add
cmp
out
and
stos
shl
xor
jno
and
in
or
jns
mov
cmp
inc
inc
xor
cld
inc
inc
xor
js
push
cs
jl
jmp
movs
rol
cs
retf
(bad)
enter
sbb
test
inc
or
in
repnz
adc
xor
daa
xchg
retf
push
push
pop
js
mov
jl
mov
adc
cwde
rcl
or
xchg
pop
scas
inc
sub
es
xchg
mov
mov
push
mov
in
nop
int3
dec
in
mov
lock
sbb
mov
mov
and
dec
jns
mov
dec
arpl
and
mov
in
(bad)
dec
inc
test
jno
stos
mov
repnz
in
xor
and
xchg
retf
in
mov
inc
or
lahf
xchg
inc
or
out
mov
sub
jns
pop
xor
inc
dec
push
in
mov
inc
jo
pop
stc
mov
js
popa
jl
sub
gs
push
xchg
cwde
pushf
xchg
xchg
xchg
retf
dec
mov
fdivr
in
push
in
mov
hlt
out
inc
jns
or
ror
pop
int3
inc
daa
aam
in
lock
sbb
pop
clc
mov
sub
retf
sbb
je
sbb
fist
inc
adc
pop
inc
cld
pop
fidiv
pop
inc
xor
cld
mov
repz
mov
aam
jbe
and
mov
sbb
or
cmp
adc
mov
xchg
retf
in
push
xor
mov
daa
dec
xor
shr
cmp
aam
mov
jmp
mov
mov
js
test
loopne
test
int3
ins
jns
sub
or
xor
repnz
mov
inc
dec
lods
jl
lock
inc
mov
test
pop
fisubr
push
cmp
lea
adc
test
push
rol
and
jl
cmp
mov
xor
fidivr
test
es
mov
int3
mov
pop
sahf
retf
jae
or
xchg
or
shr
xor
push
adc
xor
iret
in
or
sub
in
jo
dec
cs
pop
mov
nop
xchg
pushf
push
push
mov
mov
es
mov
aam
xor
xor
cld
add
mov
iret
xchg
retf
and
inc
push
inc
inc
push
push
cs
inc
dec
stos
push
fs
mov
mov
scas
retf
nop
jmp
cmp
jg
test
push
or
push
stc
cs
or
in
mov
ja
xchg
int3
loopne
in
xor
fisttp
push
or
push
adc
dec
imul
dec
sub
xchg
retf
dec
push
pop
fs
out
mov
xchg
fdivp
pop
sub
adc
dec
pop
jo
dec
dec
jb
sub
clc
cld
pop
cmp
dec
sbb
and
in
repnz
cs
fld
arpl
push
mov
sbb
push
xchg
retf
dec
test
mov
aaa
push
push
cs
xor
aam
pop
lock
pop
mov
loopne
adc
mov
sbb
dec
(bad)
cmp
ins
mov
stc
xchg
sub
add
dec
or
and
adc
mov
dec
sub
cmps
sar
jns
mov
adc
mov
xchg
ins
jo
push
mov
ret
nop
xchg
pushf
jns
scas
repnz
mov
pop
push
jb
or
cmp
out
cld
xchg
add
dec
and
and
sub
call
cmp
inc
dec
int
test
dec
dec
lds
dec
movs
dec
dec
dec
cmp
and
xor
retf
rol
arpl
mov
adc
dec
test
dec
ret
in
dec
enter
dec
dec
inc
leave
inc
dec
mov
dec
ss
arpl
test
xchg
dec
and
mov
adc
dec
xor
retf
movs
mov
and
aam
repnz
cmp
out
lods
xor
cld
daa
add
mov
and
xchg
retf
je
inc
dec
sahf
scas
mov
mov
jo
popa
aas
mov
lock
mov
test
xor
dec
dec
sub
mov
push
dec
xor
push
loop
xor
inc
mov
dec
ss
xchg
out
jecxz
dec
dec
dec
nop
cmp
jb
xor
std
mov
retf
cmp
push
(bad)
dec
in
xor
inc
js
xchg
xchg
retf
jl
add
pushf
mov
movs
repnz
dec
and
dec
gs
dec
scas
rol
add
push
dec
push
push
stc
rcr
lods
inc
mov
movs
and
sbb
push
shl
aam
or
or
push
dec
dec
je
dec
and
sbb
sub
clc
mov
fcom
dec
mov
gs
out
dec
cmp
or
retf
mov
push
jae
cs
mov
int3
sub
fdivr
pop
jecxz
mov
dec
adc
sub
jns
lds
inc
mov
push
dec
mov
xor
pushf
push
push
xor
jb
pop
shr
retf
dec
gs
xchg
cs
xchg
mov
mov
call
sbb
add
or
dec
mov
push
sub
inc
scas
xchg
xchg
retf
dec
dec
push
push
mov
das
mov
or
mov
ret
xor
adc
inc
and
ja
or
sub
test
test
in
sub
int3
in
lock
repnz
clc
mov
pop
sub
xor
inc
sahf
dec
movs
repnz
in
fnstenv
je
js
xchg
sub
(bad)
xchg
cwde
xor
pop
dec
mov
mov
jb
loopne
add
pop
cmp
or
cmps
and
jecxz
in
sub
dec
inc
dec
dec
fwait
mov
mov
and
xchg
jo
dec
repz
jl
inc
pop
arpl
pushf
outs
dec
xor
fstp
push
das
xchg
sbb
mov
iret
movs
stos
cmp
mov
in
push
sub
enter
cmp
dec
call
dec
dec
movs
pop
stc
adc
dec
inc
xor
ds
xor
sub
dec
dec
cmp
addr16
jnp
pusha
and
repz
sub
or
cmp
dec
xor
cmp
or
das
xor
hlt
dec
jbe
xchg
dec
dec
sbb
dec
push
xor
mov
dec
inc
and
sub
jb
pop
pusha
cmps
inc
inc
dec
dec
xchg
retf
in
push
jecxz
push
push
cs
xchg
call
mov
mov
in
repnz
fsub
xchg
iret
retf
dec
clc
cld
add
lahf
sbb
xchg
retf
and
xchg
lods
inc
ds
push
das
mov
mov
push
or
push
sub
mov
sub
sub
mov
not
pop
jl
out
mov
and
mov
sbb
push
or
jno
test
movs
inc
loopne
retf
in
inc
add
sub
push
sub
push
sub
or
cs
cmps
inc
in
dec
gs
jle
dec
push
mov
cmp
retf
std
dec
inc
mov
lods
mov
xchg
retf
or
aam
pop
dec
sub
push
dec
hlt
clc
cld
push
mov
sahf
inc
sbb
push
and
cmp
inc
inc
gs
mov
push
push
sub
xchg
dec
push
dec
jne
push
push
enter
in
cs
push
push
mul
or
inc
je
jl
repz
xchg
push
fcom
sub
mov
repnz
and
and
sub
push
add
or
fcmovnb
inc
pushf
adc
cmp
xor
fs
dec
stc
push
sahf
shr
push
pop
dec
cmp
test
in
js
xchg
push
fnstsw
dec
jns
es
push
jbe
xlat
sub
in
inc
mov
mov
push
adc
sub
pop
cmp
push
sub
sbb
pop
aaa
cmp
pop
dec
cmp
cwde
jp
pop
aaa
or
cmp
push
ret
push
retf
or
retf
dec
gs
ja
movs
test
daa
iret
xchg
lods
pop
xchg
inc
enter
cmp
hlt
ret
adc
mov
xchg
and
fs
cs
retf
fsub
es
mov
push
cld
add
or
test
movs
mov
and
push
xor
pushfw
lods
repnz
push
sub
ror
test
je
test
push
pop
in
test
mov
and
jns
fsub
cld
adc
add
cmp
les
out
push
or
push
fimul
push
push
push
xor
(bad)
xchg
retf
dec
pop
pop
pusha
jo
inc
mov
push
push
xchg
test
pop
dec
movs
test
fwait
lods
push
cs
xchg
xchg
mov
cmps
(bad)
enter
xchg
dec
rcl
call
in
lock
and
(bad)
xor
adc
adc
dec
sahf
lahf
push
loopne
inc
xor
jb
cmp
xor
lahf
xchg
sub
test
xchg
out
inc
push
push
or
test
sti
ds
fs
push
repz
push
inc
push
xor
mov
sub
ins
sbb
push
aaa
enter
je
cmp
inc
push
dec
pop
out
cs
ins
pusha
fs
sub
dec
movs
sbb
dec
push
push
pop
stc
and
movs
sbb
in
(bad)
enter
push
push
fst
push
push
outs
push
xor
mov
or
adc
sbb
dec
cs
retf
xor
scas
pop
pop
clc
jge
je
imul
pop
cli
push
aaa
gs
sbb
pushf
jnp
ror
cmps
loopne
test
inc
cmp
adc
dec
loope
dec
cmp
test
mov
xchg
dec
in
cmp
rcr
xor
sbb
cld
xor
loopne
fs
sbb
adc
cmp
sub
inc
sub
pop
pop
pusha
push
push
cmp
bnd
movs
test
mov
enter
enter
mov
stc
loop
xchg
push
push
not
inc
aad
out
cmp
add
or
push
jg
movs
sbb
push
push
push
cmps
pop
mov
push
push
jns
dec
in
push
jo
js
pop
sub
mov
mov
mov
in
(bad)
fwait
retf
cmp
pop
pop
je
fst
inc
pop
pop
pop
stc
fimul
pop
adc
xor
clc
sbb
pop
jo
push
or
push
or
call
repnz
dec
adc
xor
jl
sub
cmp
add
mov
add
in
mov
or
hlt
jl
jae
and
arpl
in
fst
imul
pop
or
daa
xor
cmp
push
mov
test
pop
cmps
je
pop
pop
push
inc
pop
das
sub
inc
ins
jo
movs
je
xor
sbb
pop
pop
arpl
scas
pop
outs
xchg
fbstp
inc
mov
cmp
fsub
out
outs
sub
lods
gs
pop
pop
les
jae
sbb
pop
pop
in
fwait
inc
sahf
fwait
retf
pop
pop
inc
sub
dec
fst
pop
xor
xor
loope
mov
or
xor
pusha
nop
sbb
das
dec
pop
xor
inc
mov
cmp
les
iret
push
test
in
daa
lock
pop
or
rcl
cmp
hlt
add
pop
xor
cmp
pop
push
sbb
out
into
repz
xor
cmp
xor
mov
sbb
mov
daa
xchg
or
inc
outs
aam
cmp
push
fcom
cmp
jle
sbb
and
movs
mov
and
jo
inc
cs
xchg
fisttp
pop
outs
fs
pop
ins
mov
imul
mov
lods
pop
outs
xchg
pop
shl
aam
sbb
jb
test
sub
das
scas
sahf
sbb
pop
and
mov
pop
retf
int
mov
pop
or
pop
dec
sub
mov
dec
push
test
sbb
pop
sub
out
cld
adc
loopne
mov
test
movs
je
xchg
iret
add
pop
or
mov
cmp
repnz
xor
ss
retf
and
or
push
mov
cmp
jno
fs
mov
adc
call
dec
sub
mov
mov
xchg
jbe
fs
and
lock
inc
test
pop
fisubr
mov
cmp
pop
repnz
jmp
int3
fld
in
repnz
jno
pop
rcl
sub
int
pusha
adc
mov
or
add
pop
sub
pusha
pop
ins
fldl2t
jae
daa
jo
dec
adc
pop
enter
xchg
xor
cmp
fdivr
mov
jg
gs
hlt
clc
aaa
or
cmp
xchg
aam
sbb
pop
sub
inc
mov
pop
aas
push
mov
mov
je
sti
jo
test
ja
je
(bad)
sub
pop
lahf
inc
test
int3
fld
in
mov
pop
popa
clc
cld
inc
push
and
adc
pop
sbb
jbe
pop
pop
and
test
xor
cmp
pushf
push
pop
pop
mov
jl
in
cmp
xchg
xchg
outs
push
dec
ffreep
enter
xchg
fst
inc
cmp
call
loope
pop
lods
aaa
mov
test
sahf
shl
pop
xor
rcl
cs
fwait
jl
fdivr
sbb
sahf
retf
xor
cld
jle
sbb
in
xor
pop
cmp
pop
xor
pop
sahf
dec
fsub
push
jo
test
mov
mov
ja
cs
jl
ret
cmp
cmp
pop
adc
pop
mov
xor
mov
ret
pop
pop
jge
pop
fs
rol
js
and
iret
xchg
mov
(bad)
rcr
mov
jge
or
in
stc
cmp
fcomp
add
pop
mov
add
adc
xchg
out
out
mov
and
cmp
jl
jle
cmp
jae
aas
dec
inc
in
pop
sahf
out
pop
pop
ins
sub
or
aaa
nop
adc
ja
cs
test
mov
enter
jl
int3
or
xor
in
jge
stc
mov
or
aaa
cld
fdivr
jo
cmps
pop
pop
or
pop
adc
into
sti
sbb
cmp
inc
xor
push
popf
cmp
fsubr
adc
inc
je
gs
fsub
pushf
dec
les
cs
pop
mov
in
mov
pusha
mov
pop
sub
adc
xchg
xchg
out
cmp
imul
gs
pop
mov
dec
xchg
retf
and
cmp
mov
jb
cld
xchg
cwde
mov
mov
repnz
test
adc
mov
mov
xor
dec
in
enter
iret
movs
push
mov
cld
push
ds
xchg
jl
pusha
adc
pusha
sbb
cs
ja
aam
pop
inc
mov
iret
in
pop
fs
js
je
jb
cs
cmp
lods
out
shl
cmp
jmp
mov
cmp
loopne
in
in
jns
sbb
popa
add
ins
out
daa
xchg
xchg
(bad)
dec
push
dec
sahf
sub
mov
jo
mov
pushf
push
nop
xchg
mov
fst
cmp
popa
add
xchg
fisttp
pop
aas
fcomp
and
sbb
inc
call
or
sub
in
xchg
cmp
xor
push
sbb
int
add
in
adc
ror
cld
jnp
sub
popa
mul
retf
in
xor
push
push
pop
mov
jns
pusha
int3
je
js
xlat
pop
sahf
outs
xor
cwde
popa
pushf
loope
xchg
ja
mov
pop
int3
jl
in
mov
in
call
cmc
bnd
(bad)
jmp
or
ins
cmp
bound
dec
ficom
and
dec
bound
push
bound
inc
ins
pop
cmp
nop
xor
mov
mov
adc
sub
xchg
xchg
fadd
clc
cld
(bad)
jl
sub
sbb
mov
and
inc
retf
push
clc
daa
inc
fsubr
sub
pop
jns
bswap
cmp
pop
pop
inc
out
mov
jo
je
aaa
cmp
cwde
pushf
movs
out
jl
in
mov
mov
cld
jp
add
nop
dec
bound
call
lods
jl
arpl
arpl
arpl
sbb
test
xor
dec
in
ror
je
xchg
out
lods
ins
jo
repz
mov
mov
pushf
push
push
enter
pop
mov
jb
hlt
clc
out
ja
fs
repnz
test
retf
fidiv
fs
jp
xchg
xchg
xchg
test
push
dec
sub
xchg
jl
rol
pop
cmps
loopne
lock
push
push
sub
mov
sbb
les
iret
and
call
cs
add
mov
sbb
fs
push
test
jns
dec
retf
in
push
in
cs
and
mov
mov
mov
enter
mov
rol
retf
movs
aam
fadd
in
jo
in
mov
fs
sub
gs
mov
repnz
jns
movs
bound
inc
cmp
pop
imul
ja
mov
pop
inc
xor
cmovs
jnp
and
xor
push
imul
push
lahf
addr16
push
jae
cmps
imul
add
gs
dec
ja
sbb
or
or
mov
jns
inc
or
mov
sub
sub
sbb
jnp
jns
cwde
add
jl
out
mov
mov
mov
retf
in
rcl
fsub
shl
jb
pop
lock
clc
cld
xchg
xchg
xchg
out
mov
sbb
mov
and
test
jae
(bad)
js
bound
dec
pop
sub
fs
jo
sar
idiv
test
pop
mov
(bad)
or
jne
pop
fldcw
iret
xchg
cwde
jp
retf
dec
test
lods
pop
and
or
add
daa
cmc
dec
dec
leave
add
movs
fmul
sub
jg
mov
jge
pop
imul
xchg
mov
mov
push
and
movsx
or
dec
or
mov
aad
pusha
push
push
adc
inc
(bad)
data16
or
inc
lea
dec
sub
repz
int
mov
daa
dec
dec
sbb
pop
inc
sub
mov
retf
mov
pop
in
pop
clc
cmp
adc
clc
bnd
cs
leave
cli
sbb
cmc
je
jecxz
fcmovnb
add
inc
cmp
loopne
mov
fwait
cdq
call
add
xchg
inc
or
in
dec
jp
adc
call
sbb
cmp
in
das
sbb
sub
or
xor
mov
dec
pop
cmp
adc
jmp
jne
jae
mov
and
cmc
mov
in
jo
mov
pop
or
gs
lods
cld
repnz
jbe
pusha
inc
adc
mov
in
dec
test
mov
loopne
dec
sub
ret
je
hlt
adc
add
cmp
or
sti
push
pushf
cmp
je
push
adc
jb
(bad)
neg
jnp
mov
or
xor
int3
cmp
pop
xchg
loop
je
or
repz
inc
inc
sub
add
push
ins
mov
ret
fisttp
and
ja
xor
sbb
adc
xor
inc
stos
xor
dec
push
nop
push
cmps
pop
(bad)
xchg
(bad)
pop
cs
jnp
call
push
push
xchg
jg
mov
cmp
out
push
mov
jmp
adc
push
lock
mov
test
ror
out
adc
int
mov
or
dec
retf
ins
cs
or
inc
(bad)
icebp
(bad)
adc
or
mov
es
push
jmp
icebp
ficomp
inc
xchg
xor
mov
xchg
mov
push
pop
sbb
dec
xor
jbe
xor
sbb
repz
inc
fadd
cmp
add
out
lea
test
lock
sub
xchg
jne
jo
shl
mov
jns
push
das
fst
jle
adc
(bad)
loopne
loopne
ja
scas
xor
mov
inc
repnz
adc
movzx
xchg
push
je
sub
lds
cmp
gs
mov
sbb
out
cmp
push
push
mov
inc
xor
sub
imul
fcom
loopne
push
adc
stc
push
sbb
xchg
inc
ss
pop
mov
or
add
add
imul
dec
or
jmp
fdivr
cwde
hlt
xor
xchg
push
(bad)
cvtps2pi
fcomp
fstp
in
dec
movs
xor
sahf
cwde
add
js
sub
lods
js
ficomp
retf
in
adc
and
and
inc
cmp
test
push
and
push
into
repz
cmps
mov
cmps
shl
cmp
nop
adc
push
jnp
add
stc
mov
mov
sbb
mov
push
sahf
jl
mov
cmp
jge
es
sbb
inc
fwait
xor
fcomp
ds
adc
test
out
cmp
or
mov
dec
dec
add
pop
and
push
call
dec
shl
sar
cmp
into
daa
clc
or
cwde
xchg
dec
xchg
retf
cmp
xchg
jnp
mov
mov
dec
sar
test
dec
scas
inc
or
or
test
jle
clc
mov
pop
xchg
aaa
mov
or
lock
add
cs
mov
push
popf
jbe
mov
mov
or
jmp
cmps
add
xor
loope
sub
imul
push
push
mov
int3
jne
ret
push
clc
sbb
(bad)
mov
in
add
xchg
(bad)
outs
add
pop
fs
push
jae
sbb
xchg
repnz
push
push
xor
popf
(bad)
mov
ret
push
ja
jmp
pop
inc
add
sbb
test
xlat
(bad)
xor
daa
pop
loopne
inc
popa
aaa
or
test
leave
pop
and
cmp
inc
add
xor
popa
movs
test
sar
lea
shr
adc
xchg
pusha
mov
pop
imul
sub
or
and
ja
cmp
xchg
inc
loope
(bad)
loopne
and
aad
or
out
add
mov
(bad)
pop
aad
rol
adc
dec
out
lock
std
mov
or
adc
mov
mov
sbb
and
(bad)
clc
add
data16
cmp
jb
cmp
and
mov
inc
shr
add
mov
add
js
loopne
xor
pop
push
mov
jl
stc
sbb
and
mov
xor
jmp
es
test
test
cld
fsubr
mov
dec
xchg
div
test
or
mov
mov
mov
push
loopne
lods
dec
cmps
fstp
sbb
pushf
scas
retf
fimul
jecxz
sbb
in
or
mov
dec
mov
xor
mov
mov
push
push
sbb
sti
xchg
jno
add
xchg
stc
push
add
add
int3
out
and
mov
daa
cld
mov
mov
sbb
sub
mov
push
xchg
mov
cmp
fld
xor
adc
fild
cmp
and
xor
pop
and
aas
iret
add
out
inc
shr
xor
movs
xor
stc
outs
repz
xchg
add
jb
mov
and
outs
fwait
mov
cmp
cmps
jp
es
xor
inc
jg
fiadd
add
push
add
jbe
cmp
cmp
push
cmps
rcl
jnp
mov
sbb
call
nop
jo
jmp
ss
mov
sbb
je
call
inc
sbb
mov
js
or
or
add
push
and
inc
(bad)
adc
js
adc
sub
test
xor
pop
cmp
bnd
dec
push
push
cmp
fs
cmp
out
push
xor
test
aaa
adc
sbb
xor
into
dec
cli
sbb
add
in
sub
out
jmp
loop
ret
pop
push
into
and
add
inc
call
les
pop
rcr
pusha
cmp
je
pop
xor
into
sar
add
push
fcom
scas
add
scas
mov
push
add
mov
xor
xor
inc
mov
sar
outs
outs
movs
inc
retf
cmps
sbb
xchg
xor
lock
cmp
jle
cmp
inc
jnp
add
outs
loopne
jae
mov
adc
add
mov
fs
movs
(bad)
sbb
sub
bound
push
xor
jno
inc
xchg
xor
adc
cmp
out
test
push
and
or
sub
mov
shl
inc
int3
ins
(bad)
js
cmp
ret
jo
loopne
mov
or
mov
push
push
cmp
mov
rol
sbb
or
(bad)
jbe
ins
mov
or
add
pop
inc
mov
aam
xor
je
ds
ret
out
inc
sub
shr
cmp
jl
adc
inc
add
jle
mov
cs
out
in
jno
or
jne
dec
push
fadd
mov
mov
pop
pop
jno
ins
jmp
inc
sbb
adc
bound
xchg
jge
test
aaa
mov
loopne
imul
adc
test
push
push
outs
mov
mov
add
fs
out
pop
sub
mov
cwde
sbb
cmp
popf
data16
movs
cmp
loopne
icebp
pop
adc
mov
sub
adc
popf
and
out
sar
repnz
push
lahf
out
add
xor
or
data16
test
cmp
out
in
mov
or
add
push
fs
jg
mov
adc
xor
fmul
dec
and
sub
mov
jl
jmp
dec
sbb
and
or
cmp
repnz
or
sbb
push
iret
or
or
in
ss
(bad)
sbb
mov
imul
sbb
cmp
or
mov
dec
and
je
pop
push
cwde
cwde
ret
faddp
jns
aaa
push
or
ja
es
cmp
jb
retf
or
adc
inc
pop
pop
lahf
adc
(bad)
jmp
add
nop
lds
mov
out
push
xchg
(bad)
sbb
fcom
adc
or
dec
and
push
js
xor
cmp
sbb
sbb
adc
adc
outs
xrelease
add
add
dec
sar
inc
add
cmp
or
mov
popf
add
je
shl
(bad)
retf
mov
add
add
add
pop
(bad)
test
stos
adc
dec
inc
ror
movs
dec
xchg
shl
xchg
add
mov
mov
push
cmp
into
dec
or
aaa
gs
ins
sbb
inc
xchg
pop
dec
xchg
adc
aam
push
xchg
dec
arpl
cmps
ficom
dec
adc
jnp
add
xor
idiv
and
or
mov
aam
mov
ror
(bad)
push
mov
mov
psubd
rdseed
mov
call
(bad)
cmp
repnz
jae
leave
in
test
xchg
jle
outs
sbb
xchg
popf
loopne
ds
test
push
cmp
sahf
(bad)
push
dec
jmp
sbb
inc
push
mov
or
mov
std
adc
and
sub
retf
push
inc
shr
sub
aad
inc
jae
dec
rcl
sub
ret
inc
dec
adc
add
scas
sahf
out
cli
lds
cmp
sbb
inc
jmp
push
fisubr
jmp
jmp
mov
and
or
push
pop
mov
mov
jecxz
stos
test
or
sahf
mov
xor
lods
mov
cwde
fs
pushf
mov
call
fdivr
stc
lea
nop
nop
stc
mov
adc
push
push
loopne
push
adc
scas
xchg
outs
mov
dec
adc
adc
movs
call
push
and
leave
mov
mov
adc
inc
ins
pop
sahf
ins
lea
push
lods
js
pop
cmp
cmp
loope
or
dec
push
cmp
call
js
sti
cli
and
dec
adc
add
out
dec
dec
push
push
sahf
retf
das
jo
pop
adc
jb
aad
fimul
lea
and
enter
cmp
daa
aaa
aas
aaa
movs
cmp
dec
aaa
dec
aaa
arpl
inc
sbb
inc
cmc
jns
push
out
pop
daa
(bad)
cmp
mov
xor
or
or
or
push
sbb
pop
fnsave
or
xchg
inc
into
xor
adc
mov
sbb
sub
or
jg
inc
fidiv
mov
jo
cmp
sub
daa
fchs
lea
jmp
cmp
cmp
repnz
xchg
cmp
cmp
cmp
inc
pop
or
and
push
or
call
enter
in
cmc
or
cmp
cmp
xor
ror
out
rcr
mov
adc
hlt
sub
sbb
add
lock
aas
stos
xchg
mov
push
adc
inc
jmp
mov
or
cdq
dec
inc
xor
inc
lea
lea
enter
cmp
je
and
aaa
loopne
dec
push
xor
add
pop
jg
(bad)
sbb
sbb
add
xor
pusha
jl
popf
mov
loopne
jmp
fcom
mov
daa
xor
test
mov
addr16
sub
xchg
(bad)
in
aam
je
fnstcw
push
cmps
cld
fwait
cmp
sbb
cmp
jne
cmp
outs
mov
jmp
mov
jae
scas
cmp
pop
inc
push
inc
(bad)
leave
(bad)
cmp
cmp
cmp
adc
pop
mov
pusha
movs
(bad)
sbb
pop
or
loopne
add
sub
mov
jo
mov
push
xlat
ret
xchg
cmp
add
mov
or
xchg
nop
add
pop
enter
pop
cmp
cmp
or
xchg
movs
lods
inc
pop
add
les
mov
add
mov
jne
xchg
je
mov
mov
(bad)
pop
call
add
add
das
cmp
int3
mov
pop
sub
push
cmp
leave
xchg
daa
jae
xchg
nop
cmp
or
push
push
cmp
jbe
add
ins
mov
or
xor
adc
clc
(bad)
div
aam
test
call
sbb
ins
xor
cmp
jle
dec
jae
dec
xor
push
outs
repnz
xchg
cmp
cmp
sub
cmp
in
cmp
xor
adc
out
xchg
lds
jbe
sbb
or
lock
mov
jae
xchg
add
and
mov
push
push
mov
cmp
je
sbb
or
jae
jb
pusha
sbb
loop
test
jnp
sbb
cdq
cli
movs
lock
cmp
adc
pop
mov
cmp
into
sar
pop
mov
imul
scas
cld
push
add
ret
pop
xchg
aas
clc
inc
add
and
sbb
adc
push
mov
cmp
mov
sbb
and
and
ins
and
and
sbb
sbb
adc
and
or
ret
aam
adc
cmp
or
sub
pop
jmp
std
(bad)
dec
adc
xor
or
je
fucomip
mov
pop
pop
cmp
ss
adc
jl
iret
sub
lea
sub
add
jmp
leave
jbe
mov
mov
imul
inc
adc
rcr
cmp
jnp
pop
ss
xor
inc
pop
sbb
inc
xchg
adc
adc
or
jmp
xchg
add
jbe
push
out
mov
jo
cmp
les
adc
xchg
sbb
inc
ret
mov
jb
inc
inc
inc
dec
inc
pop
inc
test
ds
mov
sub
das
xor
dec
pop
xchg
sahf
popa
dec
loope
xchg
inc
mov
pop
and
test
mov
inc
sahf
movlps
inc
inc
xor
leave
xchg
inc
pop
inc
bound
jae
sub
sbb
xlat
add
add
cmps
ror
push
mov
pop
test
test
inc
sbb
jge
dec
loope
or
adc
popa
inc
popa
mov
mov
pop
add
cmp
xchg
daa
mov
mov
(bad)
repnz
cmp
rol
cmp
mov
xchg
and
jns
cmps
aas
mov
int3
aas
push
jb
enter
aas
cld
aas
mov
mov
sbb
pop
fwait
aam
cs
sbb
dec
fiadd
sbb
xor
xchg
dec
inc
(bad)
mov
jo
dec
sub
xor
mov
sbb
or
pop
sbb
lahf
pop
stos
mul
mov
sti
push
ja
sub
mov
xlat
std
ins
rcr
cmovbe
ucomisd
xor
into
cmp
sub
or
cmp
mov
mov
retf
ja
xchg
sahf
push
jb
sbb
jl
fs
outs
ins
mov
sub
adc
fsub
pop
(bad)
mov
inc
xor
jo
(bad)
sbb
and
mov
(bad)
test
adc
inc
lock
mov
mov
test
inc
inc
xchg
and
jecxz
push
inc
dec
mov
xor
mov
cmc
dec
cmps
jmp
xchg
and
push
xchg
je
repz
jg
cmp
je
push
popa
adc
inc
pop
rol
add
sub
jmp
sbb
dec
push
movs
and
xchg
sub
inc
sub
repnz
or
pop
add
adc
inc
scas
cld
ins
mov
push
aam
push
xchg
(bad)
imul
icebp
popa
rol
add
in
xor
iret
pop
inc
cmp
xchg
stos
or
adc
fsubr
and
loope
add
pop
jns
sub
inc
jbe
iret
rol
cmp
int3
mov
aam
jl
sub
lea
pop
add
movs
loopne
push
mov
adc
(bad)
jmp
ds
mov
mov
mov
popf
sub
mul
fidiv
icebp
dec
cmp
add
xchg
inc
mov
push
jns
or
dec
add
xor
inc
mov
int
jmp
call
aas
scas
jge
pop
repz
je
dec
shl
stc
pop
mov
out
add
call
sahf
push
iret
jmp
mov
ss
mov
push
(bad)
xor
loop
out
(bad)
push
movs
ds
push
adc
pop
add
pop
pop
add
xchg
mov
push
pop
and
or
adc
adc
adc
fdivr
cs
rol
test
(bad)
fnstenv
mov
addr16
dec
inc
push
mov
nop
cmp
shr
sahf
add
or
xor
sub
dec
jbe
push
mov
add
cmp
mov
mov
xchg
mov
cmp
push
inc
mov
enter
iret
push
fcom
push
int3
stos
xchg
out
push
inc
inc
add
dec
daa
mov
xor
fs
test
cmps
jo
out
push
pop
or
inc
adc
sbb
call
jp
push
inc
pop
mov
cmovge
in
xchg
aaa
test
je
jns
xchg
sbb
ret
fiadd
mov
nop
xor
mov
mov
jmp
and
inc
push
add
sbb
jb
rol
xor
xchg
xchg
dec
in
pop
shl
push
sub
out
push
sbb
test
mov
adc
lea
mov
mov
daa
dec
dec
ror
pop
dec
jne
xor
dec
mov
adc
out
sti
add
push
pop
cld
fld
fnsave
shl
ror
mov
and
add
jle
inc
dec
fstp
fild
fcompp
fnstsw
test
mov
imul
and
outs
add
mov
stc
jno
(bad)
push
dec
ss
pop
or
mov
out
js
and
xchg
or
jo
adc
retf
outs
dec
push
xchg
and
loop
push
je
adc
ror
push
xchg
dec
stc
or
inc
push
push
dec
mov
mov
adc
ds
fiadd
pushf
jmp
loope
aas
and
sbb
dec
or
sahf
cmps
inc
inc
(bad)
sub
mov
push
xchg
jl
loop
adc
leave
push
mov
mov
ja
mov
inc
add
add
fcomp
sub
push
sbb
sti
sahf
out
add
pop
inc
mov
repz
hlt
push
or
or
neg
jge
(bad)
sti
cmp
out
adc
xor
addr16
mov
jnp
pop
mov
pop
jg
or
sub
repnz
je
lods
add
pop
jle
adc
push
mov
jne
jp
jns
inc
pop
mov
jle
pop
sub
in
push
mov
pop
pop
jne
or
loope
and
popa
aaa
je
daa
inc
ja
xchg
push
test
push
mov
jg
dec
xor
ja
enter
imul
sbb
sahf
or
mov
shr
jl
cmp
jne
movs
in
outs
mov
sbb
ret
cdq
add
adc
cld
push
xchg
add
jg
imul
xor
pushf
sbb
js
mov
jo
add
scas
mov
pop
fadd
dec
inc
add
mov
push
fisttp
lods
int3
mov
push
and
fsubr
jmp
sub
pusha
ja
mov
mov
mov
add
outs
jmp
push
pop
test
es
xor
dec
rcr
and
inc
or
push
mov
xchg
rcl
mov
pop
xchg
lods
pop
and
mov
jns
int
dec
add
push
cmp
or
adc
dec
jae
jp
jno
out
outs
loopne
fwait
mov
inc
ss
xlat
mov
sub
je
pop
scas
xor
sbb
sub
scas
jno
scas
ins
mov
push
daa
cmp
lods
cld
sbb
push
add
stc
mov
leave
mov
loopne
pop
add
mov
add
ficomp
mov
test
aas
add
loopne
or
jno
push
adc
cmp
jmp
or
sub
movs
adc
fist
scas
fmul
iret
mov
jge
or
stc
sbb
add
pop
ja
(bad)
push
adc
pcmpeqw
and
mov
and
push
icebp
mov
sbb
add
das
push
mov
cmps
inc
shr
adc
fsubr
xor
shl
cmp
xchg
dec
cvtps2pi
ins
xchg
jne
pop
xor
adc
fsub
lock
sti
push
and
push
sahf
mov
cld
in
inc
add
push
push
in
sti
mov
repz
push
test
push
cmp
push
jmp
cs
pop
add
adc
jne
or
mov
jmp
pop
or
pop
ret
mov
xchg
std
les
add
mov
mov
pop
mov
fisttp
mov
add
loop
pushf
pop
ret
addr16
retw
push
and
ret
mov
mov
cmp
int3
test
push
call
into
sub
mov
push
mov
pop
xor
ficom
nop
gs
fcmovnu
repz
xlat
iret
push
das
push
mov
add
cmp
and
cmp
xor
add
sti
push
push
aas
aaa
sbb
adc
cmp
xor
push
add
push
rol
pop
arpl
xchg
push
push
jle
pop
inc
loopne
popa
push
fild
and
add
xchg
dec
cmp
jle
or
fs
jo
rcr
or
call
out
lods
sub
push
mov
mul
out
or
stos
xor
adc
or
in
add
ds
loopne
add
pushf
cs
inc
lea
jmp
pop
push
or
fdiv
fisubr
mov
not
adc
push
mov
add
or
push
push
int
adc
mov
lfs
(bad)
mov
stos
imul
imul
inc
ror
adc
out
jecxz
ror
test
jecxz
movs
shl
ret
cmp
or
cmp
push
xor
loopne
sbb
int
mov
cs
push
lods
daa
add
add
add
or
or
inc
or
xchg
mov
test
mov
fs
or
mov
clc
clc
mov
cmp
cmp
xor
add
pop
mov
or
inc
and
mov
and
repnz
push
sahf
push
push
fadd
dec
or
dec
mov
cmp
jb
lock
test
and
cmp
bndstx
dec
xor
call
(bad)
cmp
mov
pmuludq
pop
jg
adc
test
daa
push
cli
and
loopne
xor
mov
clc
mov
dec
ss
(bad)
push
ret
shl
stos
sub
dec
adc
push
scas
sub
inc
jp
pop
and
sbb
aam
les
adc
or
push
push
lea
sub
inc
test
or
add
mov
push
loope
les
fcomp
push
xor
sbb
(bad)
mov
test
mov
unpcklps
dec
test
mov
dec
adc
sbb
push
adc
push
cld
or
push
cmp
imul
ret
inc
es
movs
mov
adc
mov
adc
mov
push
dec
cli
sub
jge
inc
fs
movs
inc
je
scas
adc
sbb
or
and
mov
jne
xor
dec
pop
mov
xor
pop
dec
cld
push
pop
fwait
inc
ret
xor
call
push
add
stos
je
push
push
sub
cvtps2pi
add
jge
aaa
add
fistp
nop
cmp
nop
shl
and
cmp
lods
push
or
cmp
and
aad
mov
repnz
push
mov
mov
rcr
cmp
mov
(bad)
mov
sbb
inc
jg
push
inc
or
push
js
out
retf
je
ret
sbb
jg
bound
loope
in
jp
or
add
inc
loope
and
ss
push
xchg
leave
xor
push
jmp
sbb
mov
loop
ret
ds
lods
push
lahf
clc
sub
add
add
add
or
add
mov
mov
mov
rol
jno
mov
or
mov
dec
fwait
mov
int3
movs
rcl
popa
fld
jno
or
in
ins
adc
adc
sbb
adc
pop
mov
fisttp
jge
and
mov
or
retf
xlat
sahf
sub
cs
call
je
lock
cmp
inc
pop
pop
fimul
test
push
or
xchg
lock
cld
mov
lea
xchg
(bad)
adc
adc
xlat
in
ss
xchg
xchg
or
jb
pop
cs
push
push
pop
cmp
sub
mov
xor
add
jne
mov
push
xor
xlat
mov
sub
adc
aas
cmp
inc
lods
mov
xchg
mov
xchg
push
stc
ret
mov
cmp
add
pusha
cmp
shl
out
jne
dec
jae
push
fs
cmps
xor
or
add
xor
or
les
inc
std
sti
es
cmp
mov
jp
in
ret
or
dec
inc
shr
cmp
dec
mov
out
and
nop
inc
inc
dec
je
movs
outs
loope
sub
pop
data16
push
lods
leave
cld
fisttp
inc
mov
mov
ret
sub
add
loop
add
sub
call
test
push
xor
movs
nop
jne
add
xor
dec
lock
and
sbb
mov
pop
adc
icebp
mov
shl
and
in
add
les
add
popa
or
lock
mov
pop
pop
iret
push
lods
jns
into
ds
addr16
jmp
(bad)
fdiv
jmp
les
fdivr
add
sahf
shl
xor
lods
shl
clc
jge
(bad)
sbb
sbb
push
addr16
add
loope
cmc
shr
push
sahf
adc
js
push
fstp
mov
outs
jno
adc
cmp
add
xlat
scas
cdq
lea
xor
dec
or
add
es
ret
jne
adc
xor
pushf
or
js
bound
and
mov
test
int3
and
adc
push
mov
fmul
in
je
lea
ret
and
add
xchg
pop
call
cmp
jo
cmp
cmp
xor
jmp
jg
mov
(bad)
out
or
retf
adc
jg
xchg
lahf
les
int3
ins
jmp
pop
dec
xor
(bad)
and
ja
sbb
mov
cld
mov
in
call
aad
or
retf
inc
inc
dec
dec
push
in
in
mov
or
mov
dec
loop
(bad)
dec
add
mov
retf
and
xchg
addr16
pushf
mov
jl
test
mov
mov
mov
sbb
enter
aam
jb
mov
mov
iret
adc
dec
mov
add
call
or
dec
ret
dec
mov
std
pop
sub
jl
push
es
retf
mov
imul
cmp
scas
cmp
int3
xchg
pop
add
movs
pop
nop
cwde
inc
aam
xor
inc
ret
rol
fld
je
jge
or
adc
adc
iret
ja
jle
test
je
sbb
and
sub
mov
dec
sub
sub
cmp
add
pop
mov
mov
or
clc
test
cmp
jp
inc
push
lds
fisttp
xor
fld
xchg
cmps
cmp
lahf
push
inc
pop
push
dec
pusha
add
add
or
xchg
adc
int3
into
pop
iret
xor
sbb
mov
loopne
mov
cmp
jmp
or
and
dec
cmps
sub
sbb
xor
mov
push
push
push
dec
shl
sub
je
jg
sahf
loop
mov
rcl
ret
inc
jp
bound
jae
cmps
fldcw
lods
jne
add
or
ret
fist
mov
call
sbb
ins
enter
cs
xor
int
fdivr
jmp
pop
cmp
ret
dec
pop
or
dec
push
adc
jg
push
enter
pop
inc
ds
inc
mov
and
push
mov
pop
pop
cmp
push
adc
les
mov
push
mov
cmp
or
and
mov
shl
mov
xchg
les
adc
mov
(bad)
jp
pusha
push
daa
jg
mov
pop
push
push
mov
mov
add
adc
adc
imul
inc
sub
mov
test
js
bound
sbb
mov
ror
xor
add
fist
fidiv
mov
ror
or
jmp
loopne
push
adc
dec
fsub
lods
test
push
daa
and
imul
sbb
push
lock
loope
aas
clc
js
jne
jno
lods
and
ficom
sub
mov
rol
test
fsubr
jne
cld
jmp
imul
jbe
adc
mov
(bad)
push
fisubr
xor
mov
xchg
sti
add
xchg
and
or
push
lea
sbb
or
sbb
jne
and
push
inc
fdiv
push
test
fild
pop
jl
jg
jno
add
and
dec
mov
test
enter
fidivr
jmp
fisubr
or
test
imul
dec
mov
into
ds
dec
mov
repnz
loope
jmp
adc
xchg
icebp
dec
in
dec
xor
add
sub
xor
pop
pop
or
mov
cmp
stc
lock
inc
das
sahf
xor
je
add
pop
repz
rcr
lock
add
xor
and
cli
inc
mov
add
lods
shl
popa
mov
mov
out
sbb
or
and
nop
jle
lea
es
aad
sbb
sar
jmp
jmp
push
and
fdivr
xlat
sbb
cmps
mov
mov
jle
int3
add
add
mov
adc
add
add
test
mov
fs
mov
stos
mov
shr
or
mov
test
jle
and
xor
push
cdq
idiv
inc
adc
scas
rol
repnz
add
mov
sub
adc
cmp
push
faddp
aaa
mov
and
rol
mov
mov
jge
inc
mov
sar
cmp
sub
pusha
test
jg
mov
xor
or
pop
adc
cmp
jnp
jbe
repnz
inc
xor
cmp
mov
add
cmp
jne
or
xor
aas
push
jb
dec
data16
mov
push
and
cmp
test
aas
jle
ds
push
icebp
(bad)
in
cmp
bound
imul
cmp
sub
push
rol
icebp
sub
jo
jg
jge
and
fsub
mov
mov
adc
dec
mov
lock
clc
xchg
ins
imul
fist
imul
shr
stos
mov
retf
cmc
ret
lahf
js
xor
das
push
lea
push
mov
inc
hlt
dec
rcl
xchg
jl
adc
lods
jne
and
mov
jnp
push
mov
add
cmp
push
mov
add
and
mov
and
and
adc
inc
test
ins
inc
popa
inc
daa
mov
out
adc
mov
arpl
or
mov
push
push
mov
sbb
pop
rcl
js
aam
xchg
fstp
add
cmps
retf
pop
adc
or
pop
cli
lea
jne
pop
mul
sar
sub
add
xor
int
shl
mov
inc
add
jb
(bad)
jg
add
push
push
adc
enter
mov
mov
pop
sbb
icebp
dec
cmc
inc
push
mov
mov
out
mov
xchg
or
sub
int
push
es
clc
rcl
rcr
xchg
not
shl
aas
cmp
mov
pop
sub
or
jg
inc
daa
cmp
or
sti
mov
out
inc
or
jge
into
jo
(bad)
cmp
retf
enter
dec
call
fwait
je
bound
jne
fwait
inc
mov
jne
mov
ret
fmul
push
dec
sbb
dec
call
call
pop
movs
sbb
push
dec
pop
test
pushf
inc
or
xor
leave
jl
mov
movs
je
or
add
or
mov
movs
sti
(bad)
mov
stos
jo
clc
mov
lods
call
pushf
push
mov
ret
mov
in
adc
jl
xor
popa
jle
sbb
neg
test
sub
xchg
je
sub
jecxz
adc
jecxz
fldz
imul
xor
adc
dec
clc
int
push
push
test
in
sti
dec
(bad)
fstp
adc
or
scas
push
das
sub
clc
into
sti
mov
icebp
in
jne
into
adc
rep
cmp
mov
pop
fsubr
mov
pop
mov
(bad)
mov
xchg
pop
jmp
inc
les
sbb
or
movs
xchg
push
pop
sbb
and
cdq
test
xor
jbe
jb
repz
pop
or
mov
loope
sub
jnp
mov
add
or
sti
out
xchg
fld
dec
or
inc
les
neg
xchg
inc
add
or
and
mov
mov
inc
cmp
or
mov
ss
push
push
push
and
push
mov
push
call
icebp
adc
xor
loop
jg
push
add
dec
popa
loop
push
xchg
add
adc
stos
rcl
clc
push
or
mov
mov
cs
dec
loope
push
dec
sub
xor
push
aaa
xchg
es
psubusw
fdivr
(bad)
inc
pop
dec
or
xor
hlt
xchg
ret
icebp
sbb
push
fcom
xchg
jp
pop
add
leave
je
xchg
sbb
pop
dec
lds
ror
retf
cmp
jbe
dec
and
fs
inc
sbb
sbb
push
and
mov
dec
pop
xor
inc
les
jmp
mov
adc
mov
in
frstor
xlat
scas
jmp
xor
call
mov
and
inc
jo
pop
or
or
and
ret
inc
mov
cld
mov
mov
fisttp
clc
or
dec
ins
call
jl
or
or
sub
fild
and
jl
fs
mov
adc
dec
or
data16
(bad)
ja
ins
mov
adc
xchg
mov
push
out
mov
and
push
xlat
push
ins
sub
test
jno
retf
(bad)
(bad)
clc
push
stos
sbb
and
xchg
push
jl
ins
push
nop
cmp
dec
sub
mov
and
sub
ins
dec
jne
and
sbb
sbb
or
in
sub
push
sbb
bound
mov
jle
jmp
jmp
xor
cmp
sti
(bad)
or
mov
cwde
pop
mov
ffreep
hlt
ja
orps
out
dec
push
xchg
and
fsubr
adc
fld
mov
mov
sub
pop
mov
ret
dec
push
push
sbb
shl
out
aaa
enter
sar
or
or
sti
stos
or
or
or
and
cmp
adc
xor
push
mov
mov
fsubr
add
pop
push
mov
adc
ins
xor
mov
sub
mov
xchg
pop
inc
sub
sahf
cmps
(bad)
ficomp
sar
mov
add
sub
jb
or
and
sti
sbb
call
hlt
and
or
pop
in
cld
pop
xor
or
or
jl
sub
addr16
lods
jl
cmp
or
inc
inc
dec
ja
push
ds
dec
push
push
aaa
or
adc
xchg
retf
imul
pusha
xchg
or
mov
or
mov
loop
mov
int3
test
adc
loopne
mov
std
jp
int
sub
jne
xlat
js
js
mov
mov
mov
inc
lea
xor
out
(bad)
dec
jle
sub
sub
test
in
and
add
(bad)
in
sbb
and
aaa
dec
jge
(bad)
jg
mov
xchg
aad
call
add
popa
jo
dec
les
stos
jecxz
clc
aas
mov
test
jne
or
cmp
ds
pop
into
cmp
loop
xor
cmps
iret
and
sar
add
add
fnstsw
mov
dec
ret
test
xchg
and
mov
mov
stos
test
and
scas
jbe
dec
mov
jo
popa
jnp
pop
jbe
push
push
add
inc
pop
adc
mov
imul
adc
push
jbe
ficom
(bad)
ja
fdecstp
into
dec
mov
sub
jne
cmp
mov
fistp
mov
inc
pop
add
daa
inc
jo
sbb
xchg
loopne
inc
out
cmp
ins
adc
jb
and
ret
jmp
mov
mov
push
je
scas
push
sub
adc
sub
sbb
cmp
jl
jg
jmp
lock
xor
add
adc
fadd
jg
jl
lods
jle
dec
ja
mov
sub
cmp
dec
xor
sbb
adc
inc
shl
or
imul
and
adc
push
push
mov
test
or
lods
shl
test
pop
lea
sbb
mov
sbb
sbb
push
mov
adc
or
loop
lahf
test
xor
ss
sub
sub
sub
cmp
pop
test
push
push
ss
lock
xlat
inc
sbb
cmp
fld
in
or
xchg
xchg
adc
or
sub
mov
jne
nop
mov
cwde
add
cmp
test
pop
adc
inc
add
nop
sub
push
add
jp
add
sbb
cmp
ins
sbb
xchg
mov
es
mov
hlt
(bad)
xor
je
pop
loope
ins
pop
loopne
jl
push
xchg
sbb
sbb
or
cmps
mov
ja
pop
dec
or
dec
mov
pop
and
je
cmp
jle
lds
test
je
ss
inc
inc
cmp
jl
pop
push
cld
cmps
lock
test
inc
mov
xrstors
cdq
jbe
sub
adc
mov
sub
(bad)
mov
sbb
or
inc
push
jmp
mov
aam
cld
mov
or
int3
and
int3
mov
push
inc
fisubr
movzx
mov
adc
dec
adc
mul
loopne
push
sbb
mov
cmp
mov
pop
jg
push
leave
jae
fadd
fdivr
inc
pop
leave
test
dec
and
rcr
or
cmp
cmp
dec
mov
pop
les
adc
push
mov
shl
shl
push
bswap
fimul
mov
(bad)
sbb
call
xor
rol
sbb
shl
and
xor
sub
mov
mov
xor
add
pop
and
in
aaa
clc
mov
mov
add
daa
cmp
add
scas
mov
dec
sbb
lds
mov
ins
cmp
je
sbb
xchg
or
push
xor
cli
mov
mov
call
or
mov
sbb
push
cmp
adc
inc
dec
cmp
jns
ficomp
and
and
ja
imul
push
cmp
sahf
mov
jo
adc
dec
push
push
cmp
bound
ds
(bad)
outs
or
(bad)
jmp
cmp
jne
lods
mov
adc
fucomp
dec
pusha
push
dec
popa
lahf
dec
dec
enter
mov
movs
dec
inc
test
aam
jg
rcr
fwait
adc
fsub
mov
or
mov
je
ins
mov
sub
dec
xchg
fcomip
and
repz
mov
xchg
ja
dec
pop
stos
movs
(bad)
sub
cmp
lea
int3
js
dec
imul
ret
pop
sahf
mov
or
jg
cs
push
push
push
dec
dec
into
mov
add
imul
sar
pop
test
shl
cli
fld
push
push
push
mov
cmp
sbb
sbb
jg
pop
mov
mov
or
or
add
iret
fdivr
inc
push
loope
ret
mov
fnstenv
pop
and
and
shl
jle
push
lea
out
sti
xlat
lahf
add
in
js
pop
push
jns
add
or
mov
adc
xor
mov
pop
lahf
mov
js
ss
(bad)
push
imul
add
cmp
pop
fcmovne
mov
nop
jns
iret
dec
inc
or
pop
add
add
push
outs
jmp
sub
js
pop
mov
adc
(bad)
psubusb
mov
inc
cmp
jl
pushf
lock
pop
test
(bad)
sbb
push
sbb
or
(bad)
push
push
dec
adc
sbb
fnstsw
xchg
call
dec
loop
addr16
ret
les
or
ret
push
rol
xchg
cmps
sar
adc
daa
(bad)
mov
dec
xchg
loope
jo
pop
pop
xchg
call
les
jg
push
xchg
push
dec
push
or
cmc
or
loop
inc
jmp
sbb
xchg
test
xchg
jecxz
push
test
sbb
adc
loopne
pop
mov
sbb
add
cmp
fadd
clc
lock
fld
jle
or
push
lea
xchg
push
(bad)
in
jmp
xor
xchg
jle
mov
xor
push
xlat
sub
xchg
sbb
loopne
je
xchg
push
ror
push
aaa
xor
mov
enter
add
fwait
add
daa
aaa
xchg
sub
push
jne
push
push
jnp
enter
movs
stc
in
retf
xor
sbb
mov
or
or
adc
and
add
rdpmc
arpl
js
loopne
mov
ins
mov
or
fstp
add
idiv
push
adc
push
sahf
punpckhbw
and
movs
cmp
push
fst
mov
xor
push
jae
in
jo
lahf
push
fisub
push
fild
dec
inc
pop
mov
idiv
std
jne
pop
mov
icebp
add
(bad)
cmp
je
cmp
call
sub
dec
adc
dec
jnp
shr
add
adc
pop
mov
inc
cmp
jbe
cld
push
sbb
loope
mov
movs
or
and
lea
rcl
in
dec
push
sub
int3
pop
or
sbb
inc
inc
jb
pop
adc
add
jne
mov
mov
loop
mov
mov
jb
mov
adc
test
or
sbb
ds
lods
pop
lods
inc
push
cwde
and
add
inc
push
popf
dec
aaa
mov
add
push
mov
aaa
rcl
xchg
imul
stos
push
shl
add
add
pop
mov
push
cmp
imul
in
add
pop
xor
adc
sbb
and
inc
cwde
fst
and
cs
xor
dec
adc
fsubr
xlat
in
sub
stos
les
or
sbb
movs
mov
(bad)
cmp
and
dec
jl
ficom
lods
in
scas
aas
inc
or
dec
test
sub
or
nop
stos
xchg
push
mov
es
daa
loopne
cmp
ins
pop
mov
or
dec
aas
adc
or
push
and
ror
arpl
mov
mov
mov
ret
add
retf
xchg
and
loop
adc
stc
jg
into
movs
mov
cmp
jb
dec
test
movs
add
out
mov
bound
jecxz
jp
test
fcom
bound
xchg
cwde
and
cmp
je
xchg
(bad)
mov
adc
add
test
cwde
inc
mov
aas
mov
fldenv
pop
jmp
or
(bad)
ins
mov
out
jge
test
mov
mov
push
mov
push
adc
jmp
push
push
push
xlat
and
pop
or
cmp
outs
ret
push
dec
cs
xor
mov
or
sahf
sub
inc
xor
push
push
das
jge
call
push
in
mov
pop
sbb
and
push
dec
adc
jnp
cmp
stos
cmp
js
cs
adc
push
sub
rcl
inc
sbb
xor
fdiv
and
push
jbe
and
push
jne
push
clc
or
fdiv
std
ret
lods
cli
mov
or
jl
inc
aaa
scas
sbb
adc
push
sub
call
in
adc
mov
dec
outs
cmp
push
sub
ds
mov
lods
addr16
ja
stc
pop
or
test
push
pop
sbb
cld
or
jmp
fiadd
popa
test
adc
mov
lods
add
call
sbb
sub
xor
leave
sbb
imul
push
xlat
mov
fbstp
cmp
adc
push
aam
push
inc
mov
sar
pop
cmp
bound
arpl
inc
mov
push
jno
adc
or
pop
loope
xor
push
add
or
dec
mov
dec
mov
or
pop
push
mov
inc
sbb
and
not
sahf
rol
lahf
jne
ret
or
and
add
dec
cmp
js
nop
pop
cmp
add
ret
mov
cs
pop
sbb
lahf
js
nop
and
inc
add
aas
cmps
sub
or
mov
out
out
lods
pop
test
sub
js
stc
lock
into
add
cld
pop
ret
fcom
hlt
xchg
sbb
mov
jl
in
outs
ins
lods
sbb
fwait
je
cmp
repz
mov
ss
push
push
push
push
(bad)
and
or
fadd
jbe
mov
add
addr16
mov
nop
js
dec
add
mov
daa
mov
add
jl
add
jne
sub
outs
ins
mov
stos
push
or
aas
add
inc
enter
fucomip
cmp
inc
lods
mov
mov
jl
mov
jge
test
lods
mov
jmp
xor
add
je
cmp
fstp
sub
cmp
jl
(bad)
int
int
mov
xchg
push
push
clc
pop
aas
and
cmp
add
(bad)
sbb
push
adc
pop
push
mov
adc
inc
push
xchg
mov
js
je
mov
inc
ficom
and
xor
or
fwait
dec
jmp
stos
add
pop
mov
push
(bad)
xor
add
shl
jle
push
push
or
je
push
mov
cmp
jl
push
xchg
mov
push
add
sbb
lea
jae
jmp
(bad)
(bad)
sub
xchg
mov
xchg
in
shr
inc
xchg
or
ins
addr16
addr16
aas
aad
call
sub
wrmsr
xor
std
mov
or
add
or
test
rcl
fmul
pop
icebp
inc
ds
push
jmp
mov
not
je
dec
sbb
mov
stos
sub
dec
nop
sub
aas
push
lea
pop
repz
mov
xor
and
or
mov
fidivr
fdivr
xor
adc
dec
repz
fiadd
cdq
and
xchg
cld
push
movs
les
out
or
inc
mov
rcr
add
lea
lea
es
sub
retf
dec
push
add
sbb
inc
pop
jge
jg
sub
cmp
jae
sub
repz
add
jbe
dec
push
or
mov
adc
enter
push
movs
sar
test
cmp
mov
push
and
aas
adc
inc
push
mov
les
add
mov
add
and
retf
push
sar
adc
or
(bad)
out
(bad)
push
mov
mov
shl
mov
adc
hlt
xchg
push
inc
lea
cmp
xchg
les
shl
div
lea
movs
push
xor
pushf
inc
dec
cmp
fdivr
je
outs
mov
jb
shr
mov
inc
jle
dec
mov
or
push
cld
inc
imul
or
cmp
sub
jne
pop
rol
aas
dec
mov
add
repnz
out
inc
xor
shl
(bad)
add
shl
int
retf
mov
add
dec
test
js
push
rol
add
push
retf
mov
and
cmp
mov
sahf
or
shl
shl
and
mov
jmp
adc
and
mov
ret
add
mov
div
pop
(bad)
jmp
in
out
into
mov
repnz
mov
fldenv
out
loop
sbb
jl
scas
(bad)
cmc
call
in
sub
or
mov
mov
sub
adc
inc
xor
xchg
cld
repnz
add
aas
push
repnz
test
mov
inc
cdq
xchg
jg
mov
and
nop
imul
addr16
dec
xchg
jno
std
(bad)
pop
rcl
dec
mov
cmps
iret
push
lock
aas
adc
push
mov
and
mov
mov
sti
daa
sbb
mov
test
sub
loope
inc
inc
ror
ja
(bad)
loopne
outs
inc
out
pop
pop
es
push
fst
outs
adc
stos
(bad)
mov
into
or
pxor
push
fistp
das
(bad)
sar
push
nop
aas
mov
fistp
adc
add
cdq
cmp
out
fcomp
out
and
cdq
xchg
pop
enter
cmp
int
and
or
pop
aaa
ret
inc
dec
and
dec
jle
xor
adc
inc
dec
enter
add
clc
mov
aas
add
fld
outs
addr16
add
mov
inc
dec
repz
fidiv
fsubrp
into
inc
cmp
inc
push
clc
es
aaa
lea
rol
add
jmp
sbb
and
jmp
adc
popa
popf
ins
push
mov
adc
shl
sub
das
add
or
in
std
push
or
leave
retf
ins
push
repnz
xor
inc
jmp
sbb
(bad)
add
push
test
(bad)
stos
lock
(bad)
mov
out
or
mul
xor
xchg
stos
sub
mov
add
fbld
in
fwait
sub
adc
xor
daa
mov
and
adc
xor
aam
sub
jg
mov
xor
mov
sub
sbb
jge
scas
rcl
rcl
push
sar
xor
sbb
shr
inc
sub
in
(bad)
aas
(bad)
call
jl
dec
mov
cdq
pop
stos
repnz
and
lods
rol
push
or
mov
pop
sbb
cmps
stc
inc
and
hlt
push
fisubr
fmul
jecxz
jmp
inc
mov
fldcw
fimul
outs
mov
stos
psubusb
mov
repz
mov
mov
pop
pop
gs
iret
nop
cld
xchg
int3
or
cmp
hlt
out
push
and
xchg
rcr
test
outs
dec
jle
dec
jle
outs
push
mov
(bad)
xchg
inc
add
or
lahf
dec
mov
cmp
inc
repnz
inc
xor
mov
rcl
sub
not
(bad)
(bad)
xor
sti
fwait
sbb
call
enter
jmp
inc
cmp
push
mov
inc
cmp
cmp
or
sbb
inc
push
inc
pop
jmp
sbb
mov
arpl
pop
movzx
cmp
loope
fdiv
out
or
push
js
adc
mov
rol
aad
cld
xor
loop
push
push
or
mov
sbb
shr
mov
in
sbb
push
inc
pushf
pop
scas
mov
test
or
xchg
jl
jp
push
push
lock
push
or
pop
call
inc
inc
pop
in
adc
push
loop
cmp
fdiv
inc
and
retf
sbb
(bad)
mov
jbe
jb
dec
sub
xlat
test
dec
ret
shr
aas
jne
sub
sbb
xchg
mov
cmp
ss
inc
pop
enter
int3
xchg
jns
out
daa
icebp
test
pop
inc
push
out
cmp
pop
fidiv
imul
xor
push
push
nop
jmp
jns
ret
or
and
push
push
or
pop
cmp
dec
push
xchg
xchg
test
repz
cwde
adc
fnstsw
xchg
mov
movs
push
jl
fild
add
call
cmp
jp
and
into
imul
dec
fidivr
das
add
(bad)
mov
ins
xchg
loop
es
dec
mov
and
xor
scas
add
adc
cmp
adc
and
mov
fst
cmp
out
in
adc
jns
push
les
pushf
mov
push
rcl
ss
call
and
pop
aam
mov
and
ins
inc
adc
push
inc
cmp
dec
rcl
inc
out
iret
mov
stos
mov
mov
jo
push
cmp
in
xor
jo
mov
inc
mov
test
in
push
push
mov
je
addr16
rcl
push
(bad)
sub
xor
dec
push
xor
ja
push
mov
aam
xor
add
cmp
sbb
shl
push
and
xor
rcr
mov
xor
xchg
out
jmp
cmp
shr
add
sbb
or
cmps
lods
and
popa
ja
cld
test
adc
mov
dec
test
xor
push
call
bound
in
scas
fs
jmp
out
or
sbb
mov
fisubr
jmp
sub
sbb
repnz
(bad)
push
mov
stos
pop
mov
mov
sub
js
jl
push
pop
mov
lea
pop
cmp
jnp
pop
test
ror
repnz
pop
add
test
sar
out
test
xchg
pop
mov
test
fwait
jge
mov
cmp
movs
int
and
das
std
call
jnp
arpl
clc
es
and
pop
mov
cmc
sub
cmp
jb
jle
das
out
xor
cmp
sbb
cmps
dec
mov
mov
mov
mov
pusha
dec
mov
scas
adc
sbb
dec
test
inc
or
push
adc
inc
push
cmp
mov
lods
mov
add
dec
sar
dec
pop
pushf
mov
xor
push
push
shl
repnz
std
xchg
add
popa
icebp
fidiv
or
test
pop
in
shr
pusha
nop
or
or
mov
mov
pop
mov
add
das
mov
xor
add
loop
test
mov
sub
fnsave
add
sbb
movs
push
test
ins
add
test
clc
lock
lods
pusha
add
jg
or
and
sbb
ins
inc
lds
push
stc
dec
(bad)
xor
pop
(bad)
in
add
test
ja
xchg
test
add
loope
daa
push
jle
gs
adc
cmp
scas
inc
inc
inc
mov
dec
push
cdq
loopne
shl
inc
or
sub
cmovb
movups
add
pushf
add
or
mov
mov
inc
add
clc
dec
pop
call
dec
pop
and
cwde
mov
add
sub
stc
int3
movs
or
repnz
cmp
or
xor
and
xor
or
push
jle
imul
xor
mov
shl
pop
sbb
dec
shl
push
pop
ror
ds
cmp
ss
add
(bad)
int
mov
pop
or
pop
or
pop
pop
pop
pop
sbb
cmp
mov
aaa
dec
pop
pop
pop
pop
push
or
xlat
into
shr
pusha
fisubr
push
push
rcl
mov
sub
and
or
arpl
inc
mov
rol
sbb
push
sbb
sbb
and
pop
add
inc
pop
mov
pop
dec
ret
add
add
jne
lea
mov
ret
fbld
fwait
scas
pop
loope
nop
xchg
or
or
xchg
lock
add
sub
jecxz
inc
pop
out
aad
cmc
xchg
pop
shl
mov
(bad)
sbb
push
cmps
out
push
sbb
mov
push
mov
imul
in
adc
dec
cwde
(bad)
rol
cmc
fcmovnu
add
retf
addps
rol
adc
mov
sub
mov
push
in
dec
ret
mov
cmp
pusha
sub
push
sahf
dec
adc
sub
pop
fimul
add
(bad)
mov
adc
mov
test
retf
mov
out
(bad)
enter
mov
mov
ss
and
xor
push
loope
sahf
mov
arpl
push
push
hlt
push
sub
mov
push
jecxz
push
add
mov
cmp
sub
adc
test
rcr
(bad)
int3
jo
pusha
dec
push
inc
push
mov
ror
mov
push
add
cmp
or
inc
test
mov
fild
and
jns
cmp
mov
mov
dec
fwait
xor
or
rcl
outs
mov
hlt
pusha
push
dec
hlt
out
es
stc
add
imul
add
cdq
mov
add
leave
inc
mov
std
daa
dec
mov
push
jmp
or
lea
div
cs
mov
mov
sub
mov
dec
imul
or
int3
mov
push
and
push
xchg
and
je
add
pop
(bad)
cmps
inc
adc
pop
fstp
xor
fisttp
js
mul
sub
daa
jg
push
jne
push
lods
inc
sbb
jmp
dec
mov
cmp
sub
cld
je
mov
jmp
jno
out
adc
add
bound
popa
mov
mul
ror
mov
push
cld
bndldx
cld
mov
jno
add
lea
leave
push
mov
add
inc
add
pop
pusha
push
push
add
or
dec
cmp
mov
popf
inc
outs
push
mov
jmp
sub
or
(bad)
pop
cs
retf
enter
nop
retf
in
mov
mov
mov
shl
pushf
cwde
xchg
cmp
mov
add
and
cld
dec
and
repnz
mov
out
or
call
jmp
xchg
ror
sub
mov
jge
rcl
add
cmp
jbe
pop
or
mov
dec
cld
addr16
xchg
push
jo
mov
fistp
out
and
dec
pop
pop
jne
push
(bad)
push
enter
pop
adc
jne
ror
dec
sub
movs
jmp
add
cmp
xor
loopne
enter
(bad)
fisubr
push
js
or
pop
mov
(bad)
jg
ror
inc
add
scas
adc
(bad)
mov
push
pop
pusha
mov
add
inc
add
add
fisttp
push
ror
mov
iret
repz
mov
in
inc
(bad)
in
sahf
out
call
out
sahf
out
hlt
hlt
clc
clc
outs
aam
popf
cld
dec
clc
repz
jmp
push
aas
mov
lods
mov
ret
nop
inc
or
add
inc
jnp
popa
xor
sbb
lea
adc
or
push
mov
neg
adc
xor
daa
stc
sub
pop
nop
xchg
push
mov
dec
gs
jl
mov
add
sahf
inc
push
out
push
add
nop
dec
dec
sbb
pop
add
jmp
mov
or
push
iret
repz
inc
dec
push
pop
fs
cmp
mov
aaa
sbb
sbb
iret
repz
adc
adc
or
and
repz
or
jl
fwait
and
or
dec
call
adc
js
(bad)
ret
inc
ja
push
mov
inc
inc
push
aad
push
and
sub
sar
dec
pop
ret
adc
sbb
adc
or
jns
sbb
ins
pop
in
or
jge
rol
call
mov
pop
pop
xchg
aas
repnz
fisttp
and
into
mov
dec
push
ds
jae
mov
dec
adc
(bad)
cmp
jb
push
push
test
jne
pusha
inc
jle
inc
adc
cmp
repnz
sar
push
lea
repz
jle
mov
or
mov
jp
pop
pushf
pop
push
xor
cwde
pop
jmp
pop
sub
sbb
mov
or
inc
pop
test
sbb
push
pop
shl
and
push
es
or
or
test
mov
popa
mov
or
and
add
pop
mov
cmp
in
inc
cld
dec
gs
push
int
push
and
sbb
lahf
push
add
neg
sbb
push
pop
xchg
lds
adc
inc
or
arpl
outs
mov
dec
ins
mov
or
(bad)
jg
push
cmp
or
dec
pop
sub
loopne
jne
ret
fs
mov
aas
shl
imul
xchg
mov
test
jne
add
push
shr
ret
or
movs
xchg
xor
pop
inc
lock
or
std
cld
xor
cmp
jne
outs
pop
push
add
add
sub
mov
cmp
clc
and
mov
or
xor
mov
cmp
jne
movzx
ss
cli
mov
shl
mov
sub
inc
inc
inc
inc
fadd
ds
mov
jmp
jb
push
add
dec
adc
mov
push
inc
and
loopne
sub
gs
(bad)
sub
xchg
popa
aaa
and
push
cmp
and
adc
jmp
mov
pop
mov
mov
rol
sub
inc
inc
icebp
in
lods
ins
pop
cmp
enter
add
sub
jmp
jp
into
jno
or
add
adc
sbb
mov
je
jbe
cmp
mov
or
clc
or
push
imul
inc
dec
icebp
pop
dec
or
jecxz
or
inc
inc
pusha
mov
sbb
inc
test
icebp
cmps
push
mov
mov
xchg
(bad)
fsubp
mov
dec
loop
inc
add
dec
mov
pop
pop
jnp
or
sbb
mov
lods
dec
lock
or
nop
mov
rcr
sub
fdivp
add
pop
call
sbb
push
lods
scas
loop
les
pop
pop
push
sahf
hlt
daa
jg
clc
jmp
hlt
xlat
jo
int3
leave
push
mov
add
push
xor
imul
or
pusha
jmp
ficomp
je
dec
dec
call
mov
push
jl
shr
push
push
in
inc
call
pop
add
aad
push
popf
pop
aam
jmp
int3
xor
push
pop
ret
adc
scas
adc
jmp
in
add
(bad)
sbb
jb
jno
xchg
push
sbb
dec
dec
sbb
inc
ror
outs
xchg
jge
in
cmp
push
sets
or
and
stos
icebp
sub
je
or
ret
push
inc
push
mov
fnstsw
jp
add
sbb
scas
or
jo
mov
sbb
add
stc
push
push
jecxz
adc
add
xor
mov
xchg
inc
inc
xlat
sti
mov
mov
add
shl
pop
push
fcomp
js
or
mov
xchg
cmp
sub
push
mov
push
xor
in
sbb
ss
jp
int
sub
cdq
fdivrp
in
bound
cmp
je
cmps
fmul
adc
mov
lahf
push
pop
add
push
sub
test
pop
lds
sub
idiv
pop
jl
popa
mov
or
movs
jecxz
out
mov
push
and
inc
cmp
jo
popa
stc
cs
jns
pop
ins
add
mov
pop
pop
pop
ja
sahf
test
push
push
or
and
fistp
popa
ret
mov
imul
addr16
jne
loopne
fnstenv
push
mov
mov
pop
mov
call
inc
or
lods
loop
cmp
sbb
lahf
pusha
jb
or
cmp
(bad)
fwait
add
mov
mov
in
dec
or
cwde
dec
adc
mov
mov
ror
push
push
pop
cwde
adc
test
imul
mov
je
movzx
add
sub
mov
cld
cmp
pop
sbb
mov
cmp
iret
pop
add
nop
addr16
add
daa
or
jns
add
adc
mov
cs
test
jo
push
and
jnp
add
jle
add
fld
xchg
add
pop
add
cmp
push
push
xchg
pop
cmps
repnz
push
pop
jb
or
cmp
or
or
pop
enter
sub
xor
cmp
pop
or
add
xchg
pop
enter
or
add
inc
or
push
nop
push
ja
push
cmovp
inc
push
adc
xor
ficomp
pusha
adc
push
fcom
inc
or
ds
mov
adc
pop
call
adc
xchg
add
call
xor
js
push
push
and
enter
pop
fisub
sbb
call
sbb
cmp
call
jb
jb
sbb
sbb
dec
in
add
je
pop
sbb
cmp
sbb
mov
cmp
and
add
push
pop
pop
mov
cld
push
add
add
sub
cmp
jae
add
iret
cmp
xchg
dec
inc
push
push
sub
mov
cmp
pop
jns
fidiv
repnz
sub
rol
lea
mov
in
in
and
xor
sbb
repz
push
in
inc
test
add
call
and
nop
adc
cmp
jmp
sbb
add
jmp
bnd
(bad)
in
in
psubusb
in
cdq
mov
add
inc
in
sahf
out
out
sbb
sbb
jge
sbb
nop
out
test
lock
xchg
add
icebp
icebp
in
cmp
repnz
sahf
retf
add
std
repz
test
hlt
hlt
ror
sahf
xchg
add
pusha
hlt
fwait
mov
jb
inc
jg
mul
mov
pop
idiv
or
std
clc
clc
clc
and
sbb
repnz
push
lock
cli
cli
inc
enter
sti
sbb
stos
jns
aaa
xchg
cld
cld
cld
je
cld
push
rcpps
fisubr
test
jne
mov
xor
sbb
enter
(bad)
adc
add
add
dec
jmp
ror
rol
dec
or
loope
xor
mov
and
pusha
nop
cmps
es
jecxz
sbb
out
repnz
sti
in
in
xchg
stos
lods
mov
inc
mov
stc
daa
xchg
sti
out
fsub
add
outs
and
mov
sti
inc
add
pop
sub
sbb
cs
jmp
jns
jne
(bad)
in
add
and
test
out
out
cdq
adc
enter
add
mov
das
cli
push
cli
nop
cmps
jb
sbb
scas
xchg
pop
ins
repz
sar
push
sub
cmp
mov
pop
stc
neg
scas
dec
div
pop
fwait
xor
jno
clc
add
stc
xchg
xchg
mov
clc
rol
sub
sti
sti
cdq
push
nop
aaa
jb
cld
inc
cld
or
inc
pusha
mov
sbb
adc
and
pop
cwde
or
loop
rol
pusha
loop
(bad)
mul
jns
jne
pop
shl
sbb
pop
repnz
idiv
test
sbb
out
jns
xor
inc
mul
pop
repnz
neg
sti
imul
jmp
neg
in
repnz
xchg
not
ins
out
out
scas
in
pop
jno
neg
pop
leave
and
test
dec
in
rcr
and
sub
mov
das
xchg
inc
pop
pop
xchg
cmc
jae
retf
and
jns
call
pop
pop
out
pop
add
clc
jmp
add
jecxz
stc
cmps
repnz
popa
cmp
adc
xchg
cli
jno
hlt
pop
leave
and
iret
adc
xchg
hlt
sbb
add
hlt
neg
push
jo
(bad)
sti
jb
add
push
out
xor
ds
repnz
loope
pop
xchg
or
and
mov
call
in
xchg
inc
pop
pop
repz
repz
and
mov
repnz
inc
add
sbb
mov
mov
das
mov
xor
and
xchg
and
das
mov
and
retf
and
aaa
xchg
mov
js
div
daa
xchg
pop
xchg
icebp
jb
test
ret
xchg
pop
push
icebp
cmp
sub
cmc
cmc
cmc
xchg
adc
and
jecxz
pop
jb
ret
lock
test
lock
stc
and
les
jns
jne
lock
xlat
mov
lock
xor
leave
fld
adc
imul
adc
sub
out
ret
jmp
push
add
iret
enter
add
add
jp
or
es
or
mov
dec
add
xchg
mov
sahf
(bad)
and
jmp
mov
dec
add
and
ins
jg
add
add
daa
push
add
xor
mov
and
addr16
xchg
das
clc
and
mov
xlat
es
add
out
push
jne
fldenv
mov
out
ss
dec
sub
push
cmp
and
cmp
jno
out
or
cmp
outs
clc
add
and
imul
inc
test
cmp
pop
daa
add
loope
sub
js
xor
fld
sub
mov
sahf
out
dec
jmp
enter
add
or
and
mov
push
rep
mov
clc
xchg
(bad)
dec
jmp
shl
mov
daa
push
sub
div
xor
mov
inc
inc
je
dec
jne
xor
dec
jg
sbb
shl
or
shr
sbb
leave
data16
adc
adc
je
push
pop
jl
call
neg
rcl
test
or
add
jmp
sub
inc
sti
xlat
push
mov
mov
in
add
mov
lods
mov
adc
cmp
cs
int
cmps
adc
mov
bound
push
jp
jmp
repnz
ins
mov
mov
mov
add
adc
jo
and
push
or
cmp
imul
sbb
sbb
dec
shl
sub
pop
and
mov
dec
movs
add
(bad)
aam
loopne
jb
(bad)
dec
push
dec
dec
jbe
ss
cmp
adc
add
cmp
dec
mov
add
(bad)
(bad)
jg
jl
adc
dec
cmp
jae
es
adc
adc
jbe
adc
out
loopne
adc
ret
retw
pusha
ja
data16
add
ret
jmp
add
pop
xor
and
and
mul
sbb
in
or
push
pop
push
jp
xor
mov
inc
and
movs
add
jns
in
outs
fcmovne
fst
pop
and
in
dec
jnp
xchg
pushf
xchg
push
push
or
add
adc
fnstsw
daa
sub
add
adc
in
call
fsub
rol
sub
sbb
loopne
test
or
push
push
adc
and
mov
popf
cmp
and
and
stos
cwde
fcom
inc
call
jle
inc
and
adc
adc
jge
mov
adc
push
sar
in
js
loopne
aas
sbb
mov
dec
jmp
push
(bad)
lds
pop
xor
lock
push
add
push
or
inc
out
ret
and
inc
mov
mov
movs
bound
je
jle
and
jae
xor
jle
je
cmp
pop
sti
ret
jmp
lea
mov
pop
pop
call
xchg
retf
push
push
or
fild
in
pusha
aas
push
mov
adc
mul
adc
inc
inc
fimul
pop
cmp
popf
adc
inc
or
xchg
shl
fcomp
shl
movntps
adc
ins
sbb
push
shr
fidiv
pusha
push
fidiv
jo
test
jmp
pop
les
ret
retf
(bad)
pop
mov
(bad)
jmp
inc
add
fidivr
(bad)
and
test
mov
loop
sbb
and
add
or
or
(bad)
inc
cmp
test
xor
xor
cmp
call
mov
jb
test
mov
cmp
(bad)
int
retf
push
cmp
std
cld
push
pop
inc
dec
or
mov
xor
mov
test
or
push
enter
lods
push
cli
or
ja
ror
out
or
ret
ins
sub
push
cmp
mov
push
dec
cmp
push
mov
cmp
ror
retf
and
sbb
add
jmp
addr16
mov
add
mov
pop
fdivr
lock
xor
loope
xchg
loop
cs
pushf
ret
aas
and
sub
(bad)
shl
mov
or
mov
dec
daa
push
inc
(bad)
mov
inc
hlt
in
clc
enter
jmp
sbb
in
btr
adc
ds
and
sub
and
push
jns
or
jae
jmp
std
jmp
inc
or
push
loope
in
mov
jmp
mov
jle
jmp
mov
xlat
in
mov
fcomip
(bad)
sbb
cwde
daa
test
jle
ds
jo
adc
pop
mov
inc
adc
sub
pop
cmp
cs
sub
mov
inc
cmp
imul
jns
cdq
mov
jge
mov
cmp
or
test
hlt
mov
or
sub
repnz
enter
push
pop
xchg
mov
mov
sub
or
dec
adc
push
adc
dec
and
mov
loop
sub
push
or
(bad)
jns
inc
add
sub
loop
mov
pop
inc
sub
inc
sbb
iret
stos
sbb
xlat
jne
cmp
jne
and
je
or
xor
out
and
jne
sbb
and
xchg
imul
and
inc
sub
pop
mov
cmp
dec
hlt
(bad)
ja
outs
xchg
dec
xor
push
movs
je
or
pavgb
lods
sbb
mov
sbb
movs
cmp
into
inc
add
adc
mov
pop
add
(bad)
and
das
je
rol
sbb
or
out
mul
and
test
imul
adc
sar
cmp
jbe
mov
ret
sti
hlt
hlt
iret
jmp
cdq
sub
sar
jle
fnstenv
fnstenv
shr
jge
jbe
jne
fstp
inc
std
jg
cs
inc
repz
cmp
jbe
push
push
fidiv
(bad)
movs
xchg
dec
nop
aas
sbb
js
shl
or
cmp
leave
push
bound
enter
sbb
and
mov
xor
sub
sbb
clc
jb
retf
push
pop
push
add
pop
out
pop
cld
jne
push
mov
push
jmp
push
xchg
mov
leave
or
pop
jecxz
(bad)
mov
neg
sbb
mov
push
pop
daa
ret
adc
adc
(bad)
ss
add
mov
dec
push
push
mov
bnd
das
sub
ret
inc
in
dec
test
push
dec
dec
adc
sub
push
je
cmp
inc
inc
cmp
aas
je
dec
call
mov
repz
push
movs
sar
pop
pop
and
nop
push
cmps
js
sbb
cmps
xor
cmp
inc
pop
loope
and
push
es
(bad)
mov
push
pop
add
call
mov
xchg
retf
repnz
or
mov
sahf
inc
jp
das
je
call
push
push
test
ret
cmp
sub
cmps
lds
inc
retf
fdivr
in
ror
pop
fs
jne
mov
cmp
daa
fldz
jmp
xor
clc
inc
lods
push
push
push
sub
std
and
jbe
pop
push
add
mov
fcom
(bad)
inc
adc
adc
sub
pop
mov
inc
pushf
fild
ret
adc
cmp
xor
pop
or
jno
shr
movs
fnsave
add
dec
scas
adc
push
inc
outs
pop
pop
cmc
call
mov
cmp
(bad)
pusha
fst
pop
outs
jo
call
push
xor
sub
and
ror
mov
hlt
adc
xchg
pop
xchg
gs
jmp
pop
ss
xor
pop
or
imul
push
sub
retf
jb
or
int
ror
push
push
mov
or
adc
xor
add
ret
in
mov
inc
in
mov
mov
add
inc
adc
lock
or
and
ins
jl
sub
lea
repz
add
pop
sar
inc
pop
push
sbb
xchg
clc
xor
inc
pop
or
jle
icebp
push
outs
adc
add
inc
add
sub
pop
sbb
and
and
mov
mov
sub
pop
cmp
or
push
loop
pop
outs
inc
pop
push
pop
pop
jg
movs
imul
cmp
je
inc
inc
mov
jne
adc
outs
fsub
inc
dec
xor
push
or
sbb
mov
data16
cmp
mov
adc
jne
ret
jne
imul
fisttp
(bad)
mov
inc
data16
dec
dec
jbe
push
dec
inc
add
or
outs
mov
mov
pop
xor
sahf
and
cmp
xor
(bad)
xchg
into
mov
cld
rcr
je
inc
inc
aaa
idiv
mov
fs
push
inc
inc
mov
sbb
jp
mov
cmps
imul
xlat
jne
(bad)
mov
add
jne
sub
enter
sbb
pusha
vmread
sbb
sub
mov
mov
scas
jg
adc
loope
cmp
clc
add
call
jb
and
shl
lea
mov
add
push
movzx
movsx
and
push
sar
cmp
push
add
imul
push
idiv
push
dec
add
mov
lea
mov
and
or
mov
jmp
sub
outs
add
call
jmp
xor
pop
adc
div
mov
imul
and
cmc
and
mov
gs
push
pop
push
or
jecxz
or
push
cmp
cmp
aaa
cmp
out
xor
sub
xor
push
push
push
popa
es
outs
stos
(bad)
sub
or
jecxz
add
jl
add
cmp
jb
mov
inc
mov
xchg
jle
and
je
shr
pop
test
clc
or
and
pop
xor
sahf
jmp
inc
xlat
mov
mov
shl
enter
stos
xlat
pop
pop
mov
or
xchg
fsub
push
mov
mov
sbb
adc
test
mov
icebp
pop
cmp
je
pushf
mov
stos
push
retf
(bad)
ja
loop
scas
test
inc
or
inc
outs
add
mov
adc
fbstp
lods
sub
mov
and
out
nop
sahf
inc
jns
and
sti
push
je
inc
jmp
mov
mov
add
ss
push
jle
ds
(bad)
loope
fild
jge
jmp
cmp
jb
add
cmp
jb
lahf
push
jb
ret
popf
jnp
retf
clc
sub
jge
xor
pop
add
popa
mov
mov
pusha
jae
mov
(bad)
xchg
loop
inc
push
outs
hlt
jmp
cmp
fld
pop
std
xchg
push
sub
es
xor
jbe
js
jg
add
inc
adc
aaa
mov
ret
rol
inc
cmps
jmp
fsub
xchg
jge
fimul
and
das
jl
into
xor
and
ret
std
dec
pop
xchg
out
test
push
cmps
xor
xor
xor
inc
jmp
xchg
sbb
outs
addr16
add
push
int
(bad)
test
lods
icebp
stc
mul
pop
push
or
aam
outs
loope
aas
adc
inc
or
jne
push
mov
push
sbb
jb
sar
sbb
enter
loope
add
mov
or
jne
push
sbb
fwait
not
inc
and
loopne
lea
inc
cmp
inc
mov
in
and
xchg
repz
adc
mov
sbb
xor
mov
sbb
cmp
add
das
dec
aam
push
std
stos
mov
enter
mov
inc
test
test
sub
jbe
adc
xchg
dec
xchg
push
rcr
test
jns
mov
cld
add
loop
pop
out
or
jo
data16
add
pusha
cmc
hlt
pop
add
lea
sbb
das
dec
lods
into
pop
jne
daa
pop
push
mov
ror
shl
lds
ror
sbb
jmp
mov
push
loopne
or
sti
or
sub
loopne
xor
clc
inc
cli
inc
mov
mov
cmp
jno
call
lea
pop
inc
outs
inc
mov
in
or
sar
push
or
cmc
cmp
stos
push
push
sub
adc
add
add
or
jmp
mov
clc
addr16
popf
push
push
xchg
push
jmp
sbb
mov
add
inc
enter
push
or
or
add
out
lods
mov
cmp
mov
gs
push
scas
cs
add
loop
popf
mov
call
mov
mov
dec
fs
xchg
cmp
popa
push
mov
sbb
(bad)
out
ret
ins
xor
ins
add
add
mov
bound
push
inc
jmp
jno
retf
mov
or
push
jae
rol
add
dec
and
cld
cmp
cmp
fistp
dec
push
push
call
loopne
xor
cmp
adc
call
mov
mov
mov
cmp
sbb
movs
pop
daa
cmp
daa
sbb
push
inc
test
mov
and
jle
xor
int3
mov
push
mov
inc
inc
jb
xor
adc
cld
mov
add
jb
sub
clc
push
push
push
sbb
push
push
sbb
adc
cmp
cdq
ret
(bad)
cld
add
inc
or
shl
or
jne
repz
lock
imul
enter
cmp
inc
push
in
jmp
mov
shl
shl
frstor
xchg
mov
add
xor
dec
sar
je
dec
(bad)
hlt
push
pop
cld
add
clc
adc
sbb
inc
fs
lods
call
fs
nop
sub
dec
fldz
fcom
call
loopne
sub
push
loop
leave
or
popa
daa
xchg
or
js
and
aam
les
clc
dec
push
adc
je
retf
outs
iret
ins
cmp
jl
jg
cmp
jbe
sub
add
adc
add
add
pusha
enter
add
or
jmp
retf
mov
mov
leave
and
push
sbb
dec
xor
lea
rol
cmc
fs
inc
mov
(bad)
iret
aam
add
cmp
shl
pusha
rcl
inc
movs
popa
pusha
rol
inc
sub
ret
jmp
test
cmp
push
push
(bad)
jl
add
push
enter
dec
(bad)
jmp
jge
shl
add
stos
jle
lock
xchg
push
(bad)
cld
push
or
and
cli
jp
mov
or
inc
cmp
cmp
adc
cmp
sbb
pop
imul
pop
adc
icebp
pop
(bad)
pop
retf
dec
clc
or
and
dec
sub
and
aas
repnz
jne
cmp
je
adc
inc
adc
and
push
push
das
jns
lods
push
jnp
mov
test
call
dec
xchg
hlt
hlt
jmp
inc
cmp
ror
xchg
das
push
push
sub
ficom
sub
cmc
jmp
adc
inc
loopne
call
hlt
jb
sub
das
ins
aad
mov
jbe
cmp
hlt
or
sub
ret
int
sub
or
ja
add
ret
cmp
daa
mov
push
fstp
adc
inc
add
out
outs
fucomi
fsubr
fs
push
(bad)
lods
pop
xor
add
fcomp
inc
mov
dec
or
xchg
cli
call
in
enter
push
adc
mov
push
pop
nop
cmp
or
dec
push
cwde
icebp
mov
enter
jmp
push
inc
push
and
push
out
push
mov
mov
pop
cmc
jnp
mov
jmp
(bad)
push
jb
mov
je
sub
xor
mov
cmp
dec
aas
or
mov
mov
ins
aas
loope
js
ja
push
jo
add
sub
ds
test
jno
mov
cmp
jne
or
popa
adc
(bad)
mov
adc
inc
add
sub
add
push
ret
jne
rol
sbb
ins
rol
jp
ret
xchg
je
mov
neg
cmp
mov
xor
cs
xchg
add
(bad)
or
add
pop
and
cmp
xchg
pop
(bad)
dec
jcxz
adc
mov
and
xor
shl
ror
and
arpl
push
and
or
push
cmp
add
adc
push
jp
rol
popa
add
push
or
sar
ror
add
sub
outs
mov
mov
sub
(bad)
hlt
test
ins
dec
or
push
aam
(bad)
mov
inc
sti
and
cmp
adc
jae
pop
ret
pop
xor
cmp
jne
push
hlt
cmp
(bad)
jb
push
clc
jne
hlt
movs
jnp
sar
mov
xchg
jmp
daa
cmp
inc
add
jl
add
or
dec
or
jae
fld
rol
sar
stc
jbe
std
aam
sbb
jmp
xor
xor
jns
dec
popf
cmp
sbb
and
fist
cld
add
add
jmp
cmp
add
bound
shl
push
or
inc
arpl
imul
jmp
pop
loope
call
sbb
cld
shl
mov
icebp
jmp
je
es
mov
fsubr
fdiv
add
dec
ror
cmp
and
jecxz
xlat
add
and
inc
in
loopne
call
addr16
out
and
and
inc
jne
push
test
add
mov
xchg
ds
rcr
or
xchg
add
mov
push
xchg
xchg
jle
das
arpl
leave
and
ror
pop
out
loopne
adc
ds
or
add
sbb
adc
inc
out
fadd
sub
sbb
add
push
aas
lods
sub
add
and
pop
push
push
add
pop
add
or
std
pop
dec
adc
and
sbb
pop
sub
mov
and
inc
js
mov
or
inc
mov
xor
add
add
push
push
and
push
push
push
push
jmp
add
je
or
adc
retf
jns
sub
xor
loopne
enter
mov
cmp
xchg
in
mov
and
xchg
cmp
loopne
loope
call
sub
into
add
add
lods
push
lea
dec
adc
in
add
loop
adc
xchg
(bad)
imul
jg
ins
cmp
mov
push
mov
jge
(bad)
mov
fimul
in
mov
mov
xchg
cwde
xchg
adc
or
test
dec
sbb
adc
dec
jo
mov
jns
pop
test
loopne
stc
rol
sub
(bad)
pop
inc
pusha
xchg
adc
mov
push
ret
test
and
shl
sbb
in
sbb
in
std
xor
mov
jl
js
add
pop
pop
rcr
cmp
dec
or
and
loopne
push
mov
in
cmp
jb
cmp
shr
sub
or
in
jmp
(bad)
and
and
dec
loope
adc
dec
push
push
pop
mov
arpl
cs
sbb
arpl
mov
cmp
arpl
and
xchg
fnstcw
ja
fdivr
adc
jge
addr16
push
cmp
mov
mov
adc
test
add
call
jmp
out
test
fnstsw
fwait
sahf
jp
fstp
or
or
call
mov
xchg
dec
outs
push
call
ins
mov
inc
fimul
cmp
or
jmp
add
pop
rol
ja
adc
dec
je
neg
ret
or
and
(bad)
je
shl
add
pop
mov
pop
cmps
inc
push
adc
or
jno
shr
ror
aaa
push
jmp
mov
inc
jl
cmps
mov
jb
aas
mov
mov
mov
mov
(bad)
inc
fnsave
adc
dec
jle
rcl
or
mov
hlt
jle
ret
pop
dec
adc
shl
pusha
add
imul
mov
fimul
jg
jl
cmp
jb
and
sbb
fdivr
add
bound
jmp
std
inc
or
popf
ins
(bad)
xor
xchg
pop
push
nop
jnp
mov
fist
aas
jl
clc
inc
hlt
add
jbe
repnz
sub
sahf
sbb
mov
inc
mov
inc
cli
pushf
adc
mov
je
mov
pop
dec
xor
cdq
sub
sbb
push
rol
imul
mov
movs
dec
adc
stc
add
aam
das
je
popf
je
bound
mov
add
or
mov
sti
or
stc
add
sbb
xchg
jmp
sub
push
sub
xchg
(bad)
mov
call
add
retf
aaa
(bad)
inc
add
add
sub
fisub
fwait
cmp
sub
sbb
xchg
or
or
or
jg
fnstenv
enter
sub
add
sbb
sahf
push
cdq
pop
idiv
dec
int
xor
sbb
iret
out
lea
cmc
jl
out
lea
xor
dec
mov
add
aam
call
and
adc
mov
pop
pop
sub
inc
sub
inc
in
pcmpeqw
sahf
shl
pop
cmp
mov
test
popw
push
jmp
sahf
push
cmp
fidiv
imul
into
je
mov
xchg
(bad)
in
out
push
pop
shl
inc
pop
clc
(bad)
dec
pop
mov
jle
or
xor
mov
mov
mov
push
adc
and
aaa
and
xor
aam
mov
push
lock
lock
je
lea
nop
aaa
push
cmp
imul
xchg
jno
aaa
icebp
or
dec
push
iret
and
or
je
pusha
sub
inc
inc
das
jmp
rcr
popf
data16
adc
lock
ffree
stc
js
add
dec
sbb
lock
add
fs
push
sub
pop
mov
add
fnstsw
jne
je
jno
js
cmp
in
cld
out
std
scas
inc
clc
imul
pop
rcl
mov
add
pop
(bad)
aas
test
inc
in
mov
xor
pop
mov
movs
mov
inc
aad
jo
out
js
push
xchg
pop
movs
pop
push
dec
mov
add
dec
fnstsw
int3
push
push
ins
nop
dec
push
sub
loop
enter
(bad)
sti
mov
je
dec
sub
and
add
push
fsub
pusha
daa
jmp
int
mov
fiadd
jmp
jae
and
cmps
std
cmp
jmp
sbb
sbb
rcl
pop
ret
mov
push
cmp
call
or
inc
bound
aaa
mov
pop
push
popa
stos
popa
cld
jl
(bad)
sar
pop
mov
xchg
les
dec
cmp
lahf
jbe
mov
sbb
mov
cmp
xchg
sbb
cmp
pop
cmp
xchg
cld
add
jne
mov
sbb
dec
mov
pop
jmp
push
push
pop
pop
and
nop
adc
xor
dec
jge
pop
stos
add
mov
in
mov
outs
rcl
pop
mov
lods
dec
or
pop
in
adc
or
sbb
mov
inc
cmp
mov
enter
pop
xor
or
lods
movs
mov
xchg
jle
add
in
sub
fdivr
mov
pop
or
or
jmp
mov
(bad)
bound
xor
pusha
daa
xor
cli
jmp
fimul
jo
push
and
(bad)
pop
or
(bad)
fld
mov
scas
repnz
in
arpl
in
inc
ins
jge
or
fs
test
iret
repz
push
jmp
push
dec
fs
lahf
xlat
loopne
xchg
fs
fs
push
pop
pop
xor
cmp
pop
mov
inc
push
push
or
jb
data16
out
loopne
mov
push
in
push
hlt
cld
pop
lahf
cmps
stc
add
or
daa
outs
xchg
or
mov
jns
pop
ins
pop
xor
das
pop
push
pop
out
xor
ins
xor
pop
call
lea
test
jbe
dec
jl
clc
mov
fwait
neg
loopne
cmp
jne
mov
push
cmp
jne
inc
cmps
mov
and
adc
fimul
ins
retf
into
add
jb
jmp
stc
jns
xchg
sbb
inc
adc
(bad)
jmp
add
out
std
std
jmp
cld
jecxz
in
dec
dec
fucomi
pmaxub
adc
call
dec
imul
(bad)
sbb
jmp
loope
(bad)
mov
push
push
pop
jo
mov
movdqa
push
dec
adc
fsubp
repz
pop
xor
push
dec
and
push
lahf
iret
div
jg
outs
inc
or
jbe
jle
icebp
iret
out
xor
jg
jg
jg
jo
mov
fidiv
dec
jne
mov
repnz
dec
push
cli
or
sbb
mov
add
sub
and
or
xor
cli
sub
xor
or
jne
test
xor
add
call
sub
push
rcl
inc
xor
or
mov
cmp
ror
sub
push
pop
aaa
int3
xor
stos
lock
rep
pop
push
cdq
sbb
push
(bad)
or
in
std
aad
out
and
and
sub
push
push
push
add
cmp
ret
enter
and
sbb
mov
test
lahf
(bad)
hlt
enter
dec
dec
pop
mov
rcr
cmp
jmp
sbb
add
xor
sbb
retf
fnstenv
pop
je
inc
push
jo
add
push
enter
daa
pop
fidiv
popf
sbb
mov
div
mov
mul
je
or
lods
dec
lock
stos
ja
pusha
idiv
dec
and
cmp
xor
add
sti
and
inc
aam
pop
and
test
addr16
sub
add
int3
cli
jmp
mov
jmp
jp
dec
pop
stos
sbb
push
push
push
dec
stos
or
pusha
and
test
xchg
loopne
dec
pop
fucomip
ss
ss
pop
(bad)
cmp
stc
xor
push
push
sti
lods
fidiv
and
scas
lods
(bad)
sub
inc
dec
and
pusha
aaa
neg
cmps
or
and
or
ja
imul
jmp
outs
aas
push
js
cs
out
rol
push
mov
pop
or
mov
push
mov
adc
sbb
add
xchg
les
mov
pop
cld
push
jo
xchg
inc
sar
mov
or
add
or
(bad)
(bad)
push
or
add
cs
ret
mov
inc
mov
mov
imul
in
ret
cmp
pand
call
pop
xlat
es
add
or
cmps
inc
std
dec
(bad)
pusha
adc
loopne
dec
or
bswap
icebp
dec
fadd
fisttp
shr
test
not
push
jl
clc
inc
cmp
test
sahf
add
push
push
add
data16
inc
fimul
popf
or
sub
inc
push
in
cmp
pmulhuw
inc
dec
pop
cmp
xchg
and
mov
imul
sbb
sub
jmp
push
dec
out
push
inc
dec
pop
mov
add
cmp
pop
cmp
pop
adc
push
mov
sbb
in
pop
scas
ins
jg
outs
adc
or
jge
sbb
stos
adc
rcl
mov
test
aad
pop
pusha
xchg
fidiv
jge
sbb
dec
push
or
pop
sbb
je
pop
loopne
outs
imul
adc
adc
push
(bad)
push
repnz
sub
jne
add
and
cmp
pop
outs
es
adc
and
and
stos
xor
ins
cmc
test
pop
push
add
xor
cmp
inc
mov
xchg
add
test
sbb
shl
push
mov
adc
and
clc
xchg
cmp
gs
add
jns
sbb
jb
xchg
xor
stos
aad
adc
mov
pop
xor
mov
cmps
pop
or
add
push
daa
cmp
jl
jbe
inc
pop
test
cmp
lock
ficomp
adc
add
xchg
and
and
xchg
ret
xchg
add
js
ins
sub
leave
add
rcl
fucom
adc
cmp
and
inc
leave
and
pop
fild
pop
add
push
or
push
shr
xchg
push
pop
loopne
test
sub
jae
sub
call
(bad)
popa
jge
jge
mov
mov
push
push
icebp
pop
mov
pop
add
shr
or
mov
sub
enter
mov
cmps
fwait
ins
push
lea
loopne
jne
fwait
bound
mov
bound
or
mov
adc
mov
in
dec
adc
push
push
bound
push
inc
loope
push
cmp
dec
je
add
sbb
mov
hlt
adc
and
(bad)
jnp
bound
push
add
xor
mov
call
or
mov
inc
add
xchg
lea
mov
inc
imul
mov
sti
sbb
push
in
push
lea
dec
xchg
push
and
add
fcom
fiadd
mov
xor
inc
or
ret
fsub
into
cmp
and
xchg
cmp
ret
ret
cmp
dec
cmp
inc
rol
push
jmp
mov
push
bound
scas
movs
out
and
and
mov
fwait
loop
pop
push
adc
ror
pop
cmps
cld
inc
mov
add
pop
jl
sar
push
test
(bad)
not
lods
retf
test
shl
sub
mov
pop
or
(bad)
pop
mov
push
or
sub
sbb
outs
jp
fidivr
pop
or
mov
mov
xchg
inc
push
loope
or
lea
stos
add
popf
pop
sub
mov
mov
inc
dec
jne
xchg
jns
scas
pop
sbb
or
adc
sbb
sub
ret
mov
call
add
or
adc
pop
mov
into
sbb
mov
hlt
mov
and
mov
(bad)
mov
lea
add
enter
cmc
ja
sub
jbe
or
mov
mov
inc
adc
fnstsw
in
add
jbe
fdivr
ficom
clc
loopne
retf
push
lods
rcr
mov
popf
retf
pop
cs
push
cmp
push
push
cld
xlat
faddp
sub
and
cmps
fmul
imul
jbe
or
mov
adc
movs
and
or
test
sbb
aad
jmp
mov
test
mov
pop
jmp
dec
or
shl
add
lea
push
sbb
retf
or
jmp
cmp
push
and
and
sbb
push
inc
cmp
jb
call
int
lahf
scas
fdivr
or
mov
mov
or
pop
jg
add
movs
and
mov
cmp
loope
add
push
mov
(bad)
push
mov
mov
pop
xor
ins
push
sbb
imul
jmp
push
addr16
(bad)
movs
push
mov
in
or
fiadd
jmp
inc
std
jne
dec
cmps
jge
pusha
jmp
sub
lahf
call
les
call
cwde
ficomp
push
push
inc
rcr
and
test
das
mov
push
popa
jo
mov
loopne
xchg
rol
cmp
sub
in
push
jmp
and
(bad)
loop
and
xchg
push
and
js
pop
popf
xor
inc
sbb
inc
rol
or
push
push
mov
add
mov
repz
mov
movs
iret
fidiv
mov
test
sbb
lods
rcl
inc
pop
leave
inc
aas
lea
mov
xor
test
pop
lea
xchg
mov
sub
add
jmp
loopne
and
cmp
jmp
inc
cmp
jbe
mov
dec
pop
adc
shr
add
cld
ins
and
jmp
sbb
js
(bad)
mov
adc
mov
inc
mov
inc
inc
inc
pop
hlt
loopne
dec
jne
mov
inc
or
data16
sbb
sub
jle
mov
xor
jo
mov
inc
dec
jne
lock
or
test
adc
add
out
call
add
jmp
cmp
add
push
setne
push
inc
and
mov
(bad)
pop
dec
test
xchg
hlt
adc
in
mov
push
sub
mov
sbb
and
loope
xor
jno
pop
mov
les
fsub
pop
push
enter
push
add
cli
jo
ins
jmp
add
(bad)
fadd
or
and
cmp
push
or
mov
xchg
retf
shl
enter
neg
or
call
dec
idiv
sbb
mov
xor
add
sbb
ss
push
out
cmp
adc
jno
es
push
jmp
xchg
jmp
ins
and
imul
add
jae
push
mov
cmp
in
push
push
and
pop
mov
pop
add
push
outs
cmp
mov
mov
pop
cmp
jne
sbb
pop
adc
mov
pop
and
pop
add
fadd
xchg
mov
lahf
das
adc
jnp
inc
inc
sbb
sub
xchg
int3
lahf
sub
and
rcr
cwde
sar
aam
cmp
rcl
mov
cwde
sub
push
dec
mov
aaa
out
jle
idiv
pop
js
push
push
cmp
add
sub
mov
xchg
adc
fmul
sub
or
jne
sbb
xchg
retf
mov
push
fs
mov
ror
sub
sbb
outs
aaa
cmp
push
pop
mov
jo
xor
sub
xor
div
sbb
rol
jge
adc
fdiv
dec
xor
cmp
sub
cmp
xchg
nop
xchg
mov
or
repnz
push
test
add
lods
stc
xchg
add
inc
jo
and
or
loope
ins
loope
lea
ins
mov
jmp
jmp
ror
cdq
ins
test
xchg
xchg
push
sub
and
adc
test
das
mov
add
push
xor
inc
sbb
or
(bad)
fcom
xchg
fistp
data16
popf
lahf
xchg
xchg
xchg
enter
shr
or
test
dec
rol
pop
fiadd
les
ror
dec
cld
adc
cmp
pop
add
rol
mov
in
ror
fcom
jo
imul
ins
jne
mov
mov
inc
xor
push
mov
or
lods
and
cmp
cld
daa
inc
fsubr
cdq
jge
add
loopne
adc
iret
repnz
(bad)
mov
xchg
add
push
(bad)
adc
stc
sub
in
push
adc
push
repnz
out
push
push
inc
jg
adc
pop
cmp
test
daa
xchg
dec
and
push
mov
mov
mov
or
dec
xor
mov
mov
mov
je
mov
cmp
mov
adc
sar
add
and
dec
movs
ins
cmp
xchg
ret
mov
push
clc
sub
cli
in
fmul
dec
test
sub
push
sub
mov
or
cdq
jo
into
fiadd
xor
cmp
mov
jle
inc
sub
mov
sub
mov
neg
fsubr
mov
test
rol
pop
popa
jo
and
and
out
sbb
int3
js
jge
rep
or
mov
stos
pop
lods
pop
inc
not
or
add
jbe
inc
cdq
add
int
add
loopne
fs
retf
ret
cmp
aas
cs
lock
pop
sub
jmp
out
or
xor
dec
loop
add
popf
pop
(bad)
xor
xor
xor
ins
popa
test
xor
mov
fadd
outs
ins
push
xchg
jo
push
movs
or
lods
or
mov
pop
inc
push
push
mov
push
js
push
pop
ret
jb
jmp
cld
in
add
jbe
sbb
push
mov
sti
ins
sahf
push
push
pop
add
(bad)
and
repnz
sbb
mov
push
adc
arpl
and
loop
inc
pop
xor
xor
(bad)
stos
mov
push
cmp
je
mov
pop
fcomp
lea
lahf
push
imul
js
faddp
imul
xchg
imul
jne
push
inc
icebp
adc
add
mov
cmc
pushf
or
lock
xor
push
add
inc
add
outs
xchg
int3
mov
cmp
push
in
mov
or
sbb
daa
in
jbe
mov
dec
fsubr
adc
rcr
dec
push
cs
pop
(bad)
push
dec
mov
or
fcom
imul
jne
push
aas
cmp
mov
test
mov
adc
loope
dec
sbb
push
dec
ins
mov
sbb
rcr
cs
cmp
es
pop
push
add
jmp
push
push
clc
adc
lock
push
mov
push
jne
or
pop
sbb
jne
add
mov
adc
or
jmp
or
pop
sub
loope
test
jae
mov
inc
mov
daa
push
mov
sub
or
(bad)
jae
mov
inc
jmp
add
mov
outs
dec
mov
and
mov
push
jo
or
push
fiadd
bound
jb
cmp
bound
pop
es
pop
pop
addr16
cmp
rol
mov
dec
sbb
xchg
ret
ret
sub
ins
jnp
gs
les
push
push
or
add
sbb
sbb
push
mov
or
ins
or
shr
les
sub
jns
lahf
call
(bad)
push
sub
push
xor
xor
clc
inc
mov
adc
push
push
cs
xor
cs
(bad)
xor
sar
lods
jo
dec
pop
not
xchg
xchg
push
sahf
mov
iret
or
inc
adc
xchg
add
(bad)
arpl
mov
fisttp
js
push
or
je
push
or
icebp
les
add
outs
push
adc
aas
lds
sub
mov
lods
lods
in
push
cmp
mov
pop
fisttp
mov
shl
dec
shr
rcl
cmp
jae
xor
add
sub
or
xor
adc
fneni(8087
test
and
push
inc
test
pusha
ret
push
inc
dec
adc
or
inc
test
(bad)
sub
rol
stc
cmp
jge
imul
jle
clflush
cmp
xor
and
shr
loop
push
pop
jecxz
xor
inc
fs
pop
cmp
in
or
xchg
gs
sub
adc
push
cmp
xchg
pop
adc
out
jbe
jbe
mov
push
adc
lock
push
sbb
adc
call
jns
fcom
sar
mov
add
push
cmp
or
imul
jb
fwait
push
mov
add
cmp
jle
out
shl
mov
xor
push
ja
and
retf
das
add
or
add
nop
pop
aam
pop
(bad)
and
or
gs
nop
fld
iret
int
scas
mov
pusha
push
mov
dec
data16
jmp
shl
jmp
xchg
sub
je
or
je
dec
in
add
sbb
mov
mov
cwde
dec
jo
mov
and
jl
ins
dec
jl
stos
xor
jbe
jae
and
les
add
(bad)
sbb
xchg
fldcw
sti
or
cmps
jge
test
dec
mov
mov
cs
sbb
mov
mov
psrlq
mov
cmp
jge
sbb
mov
or
rcl
inc
neg
nop
lods
in
jns
pop
sbb
pusha
and
sbb
xor
and
inc
adc
in
aaa
xor
push
adc
stos
sub
adc
fs
and
add
sbb
add
test
retf
mov
hlt
das
mov
test
leave
cmp
jo
retf
sbb
lea
rcl
rol
sub
pxor
dec
xchg
out
(bad)
adc
and
push
test
pusha
jo
mov
mov
shl
shr
loopne
pop
and
mov
mov
dec
ja
adc
retf
aam
inc
cdq
push
or
sub
push
fcmovb
ficom
not
fmul
rep
ss
mul
(bad)
push
xchg
cmps
jnp
lock
cld
daa
mov
add
sub
push
adc
pop
cdq
test
test
out
or
xchg
and
clc
push
or
rol
icebp
push
push
popf
retf
test
mul
lsl
popf
jns
shr
inc
push
pop
push
push
inc
shr
rcr
shr
rcr
or
out
sti
leave
jne
div
pop
dec
adc
inc
mul
pop
jb
(bad)
ss
mov
cmp
or
iret
xor
xor
and
adc
or
mov
imul
retf
in
xor
adc
jle
push
push
repnz
pop
push
popf
sub
mov
cmps
dec
inc
add
sub
adc
fistp
loope
inc
jecxz
xor
jl
or
les
or
aaa
and
jmp
rcr
cli
adc
inc
jecxz
push
push
and
lods
(bad)
pop
div
inc
push
push
sub
xchg
jne
ins
sub
sbb
and
push
mov
or
iret
add
js
addps
or
adc
adc
jno
push
pop
push
inc
jp
push
mov
mov
xchg
fcomp
adc
pop
hlt
ja
pop
call
lahf
ins
sbb
adc
add
jge
or
add
cmp
jae
ins
or
sub
clc
jbe
add
outs
push
sbb
test
and
jmp
test
jmp
dec
xchg
jecxz
sbb
scas
dec
adc
lock
ffreep
(bad)
jmp
mov
scas
pusha
adc
add
and
test
aam
ja
pop
cld
or
sub
jne
jbe
or
cmps
add
std
loope
adc
jmp
and
push
or
(bad)
out
pop
cmc
xchg
ss
jmp
pop
inc
add
add
cmp
cmp
cmp
pusha
pop
movs
dec
pushf
jmp
push
cmp
pop
mov
push
rcr
loopne
test
cmp
test
ds
fdivr
popa
enter
in
adc
inc
mov
cdq
mov
push
xor
mov
mov
add
add
and
jecxz
loopne
mov
das
xchg
cmp
cs
inc
sub
cli
dec
loope
jne
lock
push
or
int3
pushf
add
in
xor
xor
sbb
stos
clc
lock
mov
int
cmp
lea
jbe
js
cmp
cmp
jb
add
cmp
mov
push
push
jns
fwait
mov
ja
pop
call
dec
mov
cmp
stc
shl
xor
cmp
and
mov
ret
adc
aas
push
and
and
mov
daa
push
mov
(bad)
ja
jb
mov
adc
std
sbb
ds
ja
push
dec
push
cmp
push
push
pop
or
xchg
cdq
add
push
pop
xor
nop
pop
adc
mov
lods
push
shr
cwde
add
xor
xchg
sbb
xchg
mov
jbe
in
jmp
es
dec
gs
jge
inc
in
(bad)
sub
adc
add
ins
dec
push
out
pop
push
push
and
sbb
inc
shl
sbb
xor
(bad)
adc
fstp
adc
loopne
retf
ds
add
ss
clc
hlt
sub
(bad)
jo
in
or
rcr
cmovb
inc
mov
push
or
push
inc
jae
aaa
push
test
loop
pop
mov
mov
ins
add
sub
xlat
fimul
push
mov
std
inc
xor
jbe
test
jne
jno
push
pusha
scas
bound
cmc
sub
inc
je
and
nop
aam
jp
push
or
jbe
xor
adc
dec
int3
dec
dec
pop
ja
xor
add
inc
imul
add
xchg
xor
fsubr
jne
inc
xchg
out
push
stc
jmp
pop
test
xchg
sub
fistp
into
sbb
clc
dec
cmp
jnp
test
fs
push
push
jne
mov
xchg
jmp
dec
jmp
jns
stc
inc
dec
cmp
sahf
nop
(bad)
aam
pusha
cli
add
clc
pop
add
je
push
push
push
push
jcxz
ret
xor
jmp
les
sub
mov
test
mov
dec
mov
lods
(bad)
fwait
repz
pop
or
rol
je
je
add
test
cmp
xchg
sbb
mov
pop
pop
and
(bad)
(bad)
sahf
nop
push
int
jbe
sub
pop
cmp
sub
inc
enter
je
sbb
jge
jne
repnz
jmp
pusha
(bad)
(bad)
jne
inc
jns
pop
mov
mov
cmp
jmp
pop
mov
fild
xchg
sbb
add
movs
xchg
xchg
adc
test
sti
dec
ror
popf
in
xchg
retf
gs
fdiv
sar
cmp
push
xor
cmp
add
mov
dec
test
ss
ret
call
mov
xchg
call
jp
push
mov
or
shr
sti
or
mov
lea
xor
ret
sbb
sbb
sbb
cmp
(bad)
fstp
test
push
sbb
pop
sar
pop
mov
cwde
mov
outs
pop
mov
inc
aam
lea
out
mov
fdivr
add
pusha
mov
retf
inc
shr
dec
or
je
cwde
mov
sbb
mov
pushf
pop
or
add
mov
add
faddp
or
adc
in
sub
or
aam
mov
cmp
mov
sub
arpl
cs
or
jo
ja
movs
mov
cmp
hlt
out
jns
dec
inc
or
cs
stc
cmp
push
or
jae
push
sbb
mov
mov
loopne
test
ins
loopne
xchg
fcom
sub
jbe
sbb
pop
and
sbb
jne
or
xor
mov
sbb
jns
dec
xor
movs
arpl
dec
xor
fs
cmp
jb
or
imul
int
cmc
jne
js
xchg
xchg
mov
je
mov
repnz
dec
and
push
(bad)
ins
jmp
pop
(bad)
(bad)
cwde
jbe
shr
je
or
jnp
clc
add
je
pop
push
jge
push
int3
or
ds
and
movs
nop
mov
cmp
mov
fdivr
or
lock
cmp
push
jae
pushf
test
mov
mov
mov
cmp
push
add
dec
and
in
pusha
ror
inc
test
sub
dec
add
es
sub
inc
mov
mov
jmp
mov
push
aaa
aad
push
dec
lods
push
ins
cmp
push
jl
jl
xor
push
xor
div
sub
xchg
add
mul
push
push
mov
push
jo
ds
ss
inc
cmp
jae
xor
mov
jmp
(bad)
outs
push
mov
push
outs
xor
or
add
sub
call
mov
inc
(bad)
mov
dec
mov
pop
nop
inc
adc
aam
mov
movs
mov
lea
movs
inc
ins
dec
cmp
xor
sbb
jmp
sub
(bad)
bound
gs
rcr
push
je
cmp
je
xchg
jo
test
ins
xchg
ss
aas
mov
or
push
mov
fbstp
test
rol
shr
repnz
loopne
or
dec
and
les
cdq
sub
sub
push
stos
xchg
add
ret
mov
jne
mov
jne
mov
jmp
cmp
jle
ins
cmp
inc
dec
lea
scas
cwde
mov
or
dec
pop
or
xchg
dec
cmps
mov
adc
xlat
mov
ret
dec
sub
push
(bad)
push
cld
ror
popf
push
xchg
popa
test
lea
stc
xchg
mov
imul
adc
cwde
inc
call
aas
nop
imul
ds
push
stos
out
inc
adc
inc
sbb
hlt
outs
mov
cmps
and
jae
addr16
dec
mov
xchg
cmp
in
inc
daa
add
sbb
ret
dec
inc
push
xor
sbb
mov
sub
retf
out
mov
adc
adc
inc
sub
in
push
fbstp
inc
push
sbb
cmps
jmp
dec
clc
popa
mov
aaa
int3
je
cdq
nop
rcl
and
sbb
pop
or
stos
jno
jae
scas
rol
jecxz
test
mov
jne
(bad)
jge
inc
sbb
dec
div
dec
sbb
retf
pop
mov
or
jne
and
push
ret
lea
loope
inc
jb
into
push
inc
je
mov
push
push
push
inc
lods
sub
cmp
xchg
clc
ja
call
sahf
add
mov
dec
jmp
pop
xchg
sub
inc
adc
mov
aas
shr
or
cmp
loopne
scas
or
test
xor
ss
mov
mov
loope
inc
add
jmp
dec
sub
cwde
std
push
sbb
sub
push
fwait
icebp
xchg
dec
je
gs
fisubr
test
push
je
push
jmp
ror
sub
push
test
pop
push
mov
dec
and
mov
cdq
sub
sub
(bad)
adc
push
in
sub
jp
sbb
popfw
cmp
fdivr
lea
or
or
cmp
add
push
xchg
cmps
mov
jbe
dec
sbb
jne
mov
sbb
jno
aaa
add
pop
(bad)
call
mov
xchg
nop
cs
sub
jle
sbb
ret
retf
sub
mov
jg
xchg
cmp
adc
pushf
adc
pop
icebp
jl
xchg
test
push
xchg
add
push
cmp
pop
shl
(bad)
xor
mov
sub
movs
cmp
(bad)
lock
test
adc
adc
or
pop
xchg
rcr
push
sub
xchg
les
shl
sub
mov
jp
popa
loopne
adc
or
push
or
inc
add
or
sub
adc
mov
sub
cld
shr
mov
add
dec
jmp
mov
inc
cwde
xor
sub
dec
shl
lahf
add
lea
mov
push
in
lods
or
push
cld
cmp
adc
inc
jne
sar
dec
cmp
jbe
push
pop
outs
pop
cli
dec
into
cmp
jne
inc
sub
jae
mov
cmp
retf
lea
not
and
dec
jne
add
sbb
inc
cmp
lea
xor
jge
sub
ficom
imul
ins
add
add
pop
and
or
jg
dec
jmp
clc
and
sub
mov
adc
clc
and
sti
add
mov
dec
pop
cmp
jbe
mov
std
sti
mov
imul
(bad)
cmp
je
int
push
jo
jno
jno
mov
pop
dec
(bad)
and
add
ja
xor
lea
das
mov
xor
sub
ror
ss
push
or
jmp
lock
ficom
and
lea
es
add
fimul
pop
dec
or
adc
pusha
mov
mov
inc
mov
mov
cmp
push
xchg
lods
push
lock
call
inc
dec
or
jmp
jns
jbe
dec
adc
inc
inc
bound
jp
fdivr
mov
ds
repz
movs
mov
fldcw
fsubr
mov
push
add
scas
fidiv
push
call
aas
gs
push
or
cmp
inc
lock
sub
dec
inc
adc
inc
dec
add
(bad)
and
mov
retf
gs
mov
dec
add
adc
(bad)
push
mov
hlt
(bad)
out
js
in
push
lea
pop
push
je
add
push
jbe
fmul
jp
or
mov
shr
mov
inc
fsub
adc
(bad)
xor
imul
outs
loope
(bad)
fimul
cmp
(bad)
jmp
add
adc
les
ret
pusha
imul
sahf
xor
push
es
mov
push
cmp
add
sub
xor
and
adc
jbe
push
fstp
mov
jmp
or
add
add
lds
(bad)
pusha
loope
scas
ss
mov
or
int3
shl
mov
sub
mov
imul
(bad)
xchg
xor
inc
clc
pop
mov
add
dec
lds
hlt
or
adc
sub
jns
push
mov
mov
add
push
or
cmp
cli
ja
(bad)
sub
shr
test
cli
or
dec
jo
in
js
nop
mov
or
adc
out
(bad)
inc
cld
lock
jmp
mov
sbb
add
inc
or
sub
or
inc
fs
inc
jmp
das
push
jge
sahf
pop
mov
mov
lock
push
mov
arpl
add
add
stos
and
not
and
les
pop
adc
jne
ror
xlat
sub
pop
shr
add
imul
xchg
outs
es
dec
cmp
jle
pop
add
and
lock
int3
xlat
mov
inc
repz
jne
lock
push
mov
int3
push
sub
xchg
pop
xor
mov
movs
inc
stc
sbb
clc
jge
jb
rol
es
add
mov
(bad)
nop
dec
or
push
add
push
jns
add
sti
pusha
sub
add
mov
sbb
stos
movs
adc
add
add
mov
add
xor
lea
add
adc
jle
dec
shl
pop
push
call
call
add
adc
js
pop
outs
adc
jmp
aaa
js
sub
test
iret
int3
aad
or
ins
xor
or
cli
shr
jbe
and
clc
jl
inc
inc
or
inc
jge
mov
inc
jae
pop
mov
ins
pop
xor
push
sar
dec
jp
or
pop
test
xchg
jbe
dec
cmp
xor
add
cmp
dec
mov
ret
mov
push
fisttp
mov
push
push
(bad)
fbld
fldcw
pop
cmp
ficom
add
mov
loope
push
es
mov
and
stc
popa
mov
dec
add
movs
loope
cmp
push
cmp
lods
(bad)
cs
retf
retf
mov
(bad)
push
rdmsr
cmp
mov
lods
dec
inc
mov
add
faddp
sbb
inc
pop
add
sub
ins
and
add
lods
pop
and
inc
test
dec
push
push
push
push
(bad)
daa
mov
jmp
in
adc
xor
stos
dec
sbb
cmp
or
dec
fild
cmp
and
dec
add
or
or
jae
fcomp
push
jne
mov
cmp
pop
jmp
hlt
jae
cmps
pop
cmp
or
arpl
push
mov
scas
mov
and
sbb
xchg
pop
pop
call
mov
cmp
je
mov
mov
mov
in
cli
and
mov
xchg
dec
pop
iret
jne
and
shl
dec
mov
movs
or
xchg
je
jp
xchg
nop
jmp
(bad)
jle
mov
and
jne
mov
push
pop
sbb
inc
test
inc
push
pushf
mov
mov
out
icebp
sbb
push
repnz
add
cmp
dec
pop
xchg
sbb
pop
jb
ror
push
sbb
ins
add
lock
push
xchg
mov
dec
jne
cwde
dec
cwde
popf
pop
repnz
jmp
jp
mov
pop
pusha
dec
bound
dec
push
and
pop
sbb
push
clc
into
xor
dec
shl
dec
jp
sahf
xchg
mov
mov
call
das
pop
xor
mov
mov
and
ret
dec
pop
cmc
push
or
dec
cld
or
pop
add
push
push
push
mov
add
jl
or
nop
mov
aad
or
adc
lock
call
sbb
mov
lea
adc
sbb
sbb
cmc
adc
and
mov
inc
add
inc
mov
sete
xor
sbb
(bad)
shl
in
xor
cmp
lea
mov
xor
mov
push
or
xchg
inc
mov
push
jmp
jmp
mov
pop
stc
mov
or
xchg
aam
mov
addr16
pop
ja
push
daa
add
add
adc
ret
fucomi
adc
add
or
or
div
(bad)
xchg
or
cmp
inc
or
or
mov
ja
xor
add
test
mov
ror
xlat
sbb
pusha
mov
mov
push
or
ret
test
sti
dec
jne
jmp
daa
or
rol
jmp
mov
jp
je
mov
jge
inc
push
cs
dec
(bad)
pop
push
loopne
ret
icebp
daa
sbb
ins
mov
cmp
arpl
cmps
call
popw
jae
pop
xchg
loopne
popf
and
mov
pop
push
or
invd
fcomp
sbb
xor
push
add
pop
push
or
push
inc
add
sar
fldcw
adc
inc
or
div
std
xor
sub
lea
pop
je
push
idiv
or
jae
push
xchg
pop
jmp
sub
push
stc
mov
jmp
sbb
adc
lds
cs
mov
push
pop
jae
sub
add
sub
add
sbb
ret
add
push
nop
ja
mov
outs
test
jl
mov
add
movs
pavgb
fdivrp
add
test
xor
push
out
hlt
xor
add
or
ss
lea
aas
or
cmp
test
add
pusha
aas
ins
mov
mov
les
pop
sbb
add
ja
pop
push
shl
jnp
cli
daa
push
aam
je
fisub
std
inc
das
and
sbb
es
loopne
(bad)
add
dec
pop
addr16
and
jo
hlt
mov
push
cld
nop
js
jmp
fadd
mov
cmc
fucomi
push
(bad)
call
add
or
sbb
push
call
inc
xchg
ret
sub
ja
inc
add
out
test
adc
add
xor
pop
pop
jp
push
adc
add
imul
jp
adc
xchg
and
xor
sar
mov
push
movs
mov
inc
inc
pop
sahf
retf
repz
push
les
sti
clc
inc
pop
int3
rol
aam
xchg
out
repnz
adc
fadd
mov
sahf
xchg
aas
inc
dec
add
sbb
mov
sbb
push
ds
loop
jl
inc
mov
mov
cmp
test
dec
rcr
jne
and
or
inc
shl
mov
fisub
ret
cmc
stos
cmps
es
or
push
(bad)
push
lods
pop
into
mov
adc
sbb
or
loope
fst
pop
inc
adc
or
adc
cmps
(bad)
loopne
cmp
loop
iret
jl
ja
pop
sub
inc
dec
sbb
and
mov
test
in
push
movsx
rcr
add
pop
jmp
sahf
je
sub
cwde
or
lds
iret
popa
inc
fwait
jp
mov
gs
scas
loopne
clc
xchg
test
movs
scas
jbe
mov
add
lods
cmp
or
adc
mov
ins
ins
add
inc
jle
pushf
add
push
pusha
cwde
retf
jle
add
fistp
fadd
pop
push
ins
mov
(bad)
or
xor
clc
or
xor
outs
mov
dec
lods
push
ds
cmp
mov
dec
add
fistp
inc
sub
or
int
or
aas
data16
fsubr
dec
data16
sbb
mov
mov
ficom
je
jmp
fnstsw
adc
repnz
dec
mov
jmp
in
rol
xchg
inc
mov
shl
ror
or
(bad)
call
and
packsswb
jnp
ins
jg
or
pop
pop
pop
mov
addr16
jo
jmp
das
not
call
mov
sub
mov
and
mov
enter
rol
mov
mov
add
pop
cmp
idiv
adc
inc
test
data16
mov
pop
je
rol
in
sbb
sbb
imul
inc
cmp
popa
sti
rol
jg
adc
or
push
and
cwde
jmp
pop
adc
loope
sbb
aas
in
mov
test
out
dec
or
call
mov
lods
je
or
adc
cmp
push
pushf
xor
iretw
js
dec
adc
xchg
sahf
ins
mov
mov
cmp
cmp
jb
cs
and
pop
xchg
or
lock
test
add
sub
in
add
fidiv
jle
inc
adc
stos
adc
jp
mov
add
lods
sar
xor
fwait
push
pop
mov
sbb
ror
jb
mov
lea
in
jge
movs
add
retf
mov
xor
fcomp
nop
into
mov
mov
mov
je
lock
and
and
add
shl
and
adc
retf
lahf
sbb
ja
or
out
(bad)
ja
mov
pop
xchg
inc
es
inc
test
movs
jne
in
cmp
jne
(bad)
mov
les
jne
inc
or
add
jae
mov
mov
jl
hlt
int3
add
jne
push
pushf
push
xchg
jbe
mov
adc
add
xchg
test
jle
xor
ds
xchg
lea
and
test
sub
sub
scas
sar
xor
mov
fimul
xchg
add
data16
sbb
data16
sahf
sub
pop
enter
mov
inc
sbb
jg
add
jecxz
aad
aaa
mov
test
js
mov
adc
aam
mov
add
or
shr
adc
es
aas
or
push
(bad)
retf
mov
bound
or
adc
shl
ret
lock
push
cld
lods
imul
pop
sub
shr
shl
shr
or
mov
sahf
xor
sbb
aam
shr
xor
or
shr
fistp
push
ja
ins
aam
loope
cdq
mov
into
sub
retf
inc
sar
cmp
repnz
add
ficomp
outs
iret
rcr
sar
pop
fidiv
in
fiadd
cld
xor
jmp
call
xor
(bad)
mov
and
out
mov
nop
dec
mov
dec
inc
mov
jmp
mov
push
mov
mov
(bad)
xchg
retf
into
jmp
scas
scas
jnp
jecxz
mul
jmp
jno
sub
push
les
sub
cmps
mov
rcl
jne
push
retf
das
xchg
push
ficomp
nop
add
neg
sbb
add
pusha
pop
ret
inc
bound
fcmovbe
call
call
pop
pop
sti
enter
nop
mov
push
push
dec
repz
add
sahf
out
movs
and
push
push
xor
fwait
pushf
mov
scas
push
push
pop
push
iret
cmps
adc
sub
mov
rol
cld
inc
add
xor
inc
call
add
and
push
and
scas
sbb
or
push
mov
call
jge
mov
push
jmp
add
pop
enter
mov
add
mov
sub
add
pop
sbb
pop
das
test
push
(bad)
loopne
or
sbb
(bad)
pop
and
sbb
and
and
add
xchg
push
add
sar
cmp
sar
adc
jmp
iret
add
dec
dec
sbb
cld
or
mov
cmp
fild
mov
fmul
jno
ins
fadd
mov
cmp
jnp
out
xchg
loope
push
int3
inc
or
inc
inc
mov
push
loopne
xchg
pinsrw
repz
sti
pop
push
ret
dec
add
jmp
(bad)
xchg
add
ret
dec
cwde
add
push
sub
sbb
lods
aas
push
or
jge
aaa
xor
ds
add
mov
or
jne
or
(bad)
popf
or
mov
mov
add
enter
ror
aam
ret
dec
pop
mov
cmp
pop
push
push
sub
sbb
ss
ror
push
aad
ja
bswap
cmp
xor
pop
inc
jne
fwait
jmp
je
dec
jne
push
push
data16
jmp
mov
out
mov
sbb
pop
jmp
jg
sbb
mov
sbb
add
or
or
daa
add
adc
pop
(bad)
sub
xor
test
sbb
or
or
(bad)
call
adc
ror
arpl
inc
inc
mov
or
dec
and
or
dec
sbb
dec
movs
mov
fneni(8087
jle
cmp
mov
movs
fsubp
sub
xor
lea
adc
imul
aas
sbb
mov
jne
adc
and
jne
ins
sub
loopne
jae
inc
dec
add
mov
sbb
fidiv
lea
sbb
sbb
cmps
aad
pushf
dec
dec
jbe
and
outs
add
sbb
add
sbb
or
dec
jmp
add
enter
inc
bsf
push
nop
(bad)
mov
pop
(bad)
mov
and
xchg
push
ss
push
xor
pop
sbb
adc
scas
xchg
adc
sbb
add
loopne
sbb
jl
xchg
push
pop
lea
push
icebp
test
test
and
int3
jmp
ficom
neg
add
popa
out
dec
cli
ret
adc
sub
inc
call
cwde
pop
clc
inc
jp
movs
adc
xor
push
push
sbb
add
pusha
add
jae
out
jl
sub
push
ret
ins
cmps
pop
iret
adc
mov
inc
or
or
push
(bad)
add
leave
adc
lods
(bad)
add
jne
ret
sub
inc
dec
loopne
or
inc
mov
jno
imul
jle
mov
jge
arpl
push
lea
mov
fisttp
and
fcmovnbe
sti
mov
or
or
popa
mov
not
fcmovu
mov
and
iret
stos
xchg
xor
adc
adc
xor
jg
jno
pop
fs
push
sar
test
inc
pop
add
sbb
stos
add
lea
pusha
jmp
push
inc
push
lea
sbb
out
je
push
xchg
jns
dec
sub
(bad)
nop
nop
popf
jno
loope
pop
add
movs
jbe
jmp
fs
fcmovb
dec
sub
mov
pop
adc
clc
rcr
lods
mov
cmp
xchg
pusha
test
mov
mov
mov
les
jo
dec
movsx
pop
xchg
add
out
add
dec
enter
push
mov
dec
dec
inc
push
mov
mov
sub
inc
call
jmp
daa
xchg
cdq
or
dec
inc
lea
sub
aaa
push
dec
hlt
mov
lea
call
lods
jnp
dec
xor
inc
or
xchg
cmp
shl
inc
mov
xor
call
jns
xor
sar
cmp
cmp
cmps
adc
add
int
push
test
cmp
add
add
rcr
mov
add
push
sub
cmp
jne
xor
mov
retf
out
inc
(bad)
loope
movs
int
push
jmp
sub
cmp
cmp
aam
push
dec
cmp
test
add
sub
call
jg
inc
nop
cmp
jb
xchg
adc
push
mov
inc
mov
sbb
adc
xor
pop
mov
mov
dec
ja
mov
and
xchg
mov
pop
ret
(bad)
outs
and
dec
push
cmp
cmp
mov
inc
cmp
call
add
adc
pop
rcl
mov
lods
shl
sub
sub
and
cmp
inc
add
jbe
mov
mov
daa
jmp
and
sbb
push
cmovle
sub
mov
movs
dec
add
nop
add
dec
icebp
int3
inc
cmp
mov
push
or
pop
mov
inc
pusha
fisub
or
retf
cmp
mov
push
dec
leave
bound
pop
add
and
aas
mov
push
stc
pop
xchg
cmp
fdivr
adc
into
xchg
push
add
in
xchg
mov
or
cmp
test
mov
ins
push
jmp
inc
bound
scas
sub
adc
mov
cmp
jno
call
cmp
push
lea
push
xor
retf
jmp
ficom
add
popa
aad
sti
mov
fidiv
jo
addr16
push
mov
push
lods
adc
cdq
sub
mov
fdivr
jne
jmp
xor
cmp
adc
adc
inc
xor
jnp
sbb
cmove
loopne
xchg
cmp
shl
inc
out
sbb
mov
cmp
pop
or
lea
add
or
loopne
xchg
or
add
sbb
dec
cmp
xchg
jo
fwait
jmp
retf
sbb
xor
or
add
stos
add
cwde
sbb
cmp
and
add
mov
mov
inc
icebp
jns
dec
js
test
retf
icebp
mov
mov
in
or
inc
inc
mov
movs
push
sub
push
add
xchg
jmp
add
mov
mov
mov
retf
imul
lea
mov
outs
or
adc
pop
add
mov
xlat
and
dec
and
jo
xor
(bad)
pop
call
mov
sub
inc
jecxz
jb
ror
div
dec
pop
push
cld
xor
or
mov
lods
std
mov
ret
mov
inc
nop
pop
push
push
or
mov
stc
lahf
enter
mov
sar
mov
hlt
nop
push
fmul
xchg
xchg
mov
ret
xchg
dec
in
inc
ret
je
xchg
mov
or
mov
adc
mov
mov
loope
xor
popf
(bad)
std
or
or
mov
sub
cmp
ja
stos
xchg
push
sub
sbb
mov
icebp
in
leave
rol
mov
mov
mov
int3
sar
jo
cs
daa
ja
mov
push
xchg
int3
pop
cmps
pop
or
add
ficom
pop
add
in
cmp
push
aas
mov
cmp
stc
jge
lahf
pop
sbb
sbb
xor
push
in
popa
mov
mov
sub
or
inc
leave
dec
mov
scas
cmp
lock
mov
in
mov
push
inc
sub
add
xchg
imul
pop
and
ss
enter
sbb
jne
inc
jne
cmp
lea
inc
xor
xlat
inc
fs
aad
cmp
push
int
call
js
pushf
cmps
shl
in
jmp
ret
int
push
leave
and
test
inc
mov
push
pop
mov
repz
jg
in
push
movs
ss
out
arpl
push
icebp
call
xchg
jns
in
dec
cdq
mul
stc
js
push
or
cwde
sub
clc
cmp
mov
push
inc
cmp
sub
hlt
std
neg
sub
mov
mov
std
rcr
dec
cwde
add
push
cmp
mov
xor
idiv
dec
stc
mov
loope
sbb
adc
adc
inc
pusha
cmp
sub
sahf
mov
sub
(bad)
jns
pop
in
sbb
daa
mov
sahf
add
pop
add
xchg
inc
cld
adc
mov
ror
loopne
inc
mov
je
enter
mov
sub
or
or
test
test
inc
pop
icebp
(bad)
xor
cmp
je
mul
sbb
popa
pop
ins
in
call
pop
jb
ret
adc
in
cmp
test
xor
enter
mov
sbb
push
jns
std
aaa
addr16
mov
ins
retf
inc
mov
fdivr
ins
(bad)
stos
or
lds
lea
and
ror
loope
addr16
xor
add
mov
sar
in
mov
jle
repz
mov
jb
in
mov
sub
fdivr
imul
mov
xchg
(bad)
stos
cmps
inc
mov
imul
lea
arpl
mov
cmps
retf
imul
std
push
cmp
mov
gs
inc
icebp
sar
clc
xor
mov
pop
mov
mov
retf
xchg
gs
out
int
arpl
mov
push
(bad)
mov
aam
sahf
aad
dec
add
mov
loope
push
clc
popa
xor
rol
xor
dec
mov
inc
adc
cmp
repnz
imul
lock
sbb
and
std
call
sbb
xchg
std
xor
cmp
std
dec
jecxz
rol
cdq
in
mov
std
sahf
ins
imul
sar
popa
push
fdivrp
jno
xor
or
ds
cs
mov
mov
or
jns
push
test
sub
inc
mov
dec
lods
add
dec
jecxz
ds
lock
sub
xchg
std
xor
push
sub
sbb
(bad)
jmp
test
je
and
outs
not
dec
int3
cmp
stc
sar
or
std
add
pop
jns
fcmovbe
std
cmp
(bad)
aam
xchg
cwde
dec
repnz
dec
cmp
or
enter
jle
cmps
add
push
movs
adc
imul
sub
sub
sub
cmp
mov
imul
cmp
das
push
dec
pop
dec
or
and
leave
dec
arpl
xor
sbb
and
xchg
js
mov
sub
lds
push
inc
add
mov
(bad)
arpl
mov
shl
adc
leave
ror
mov
sbb
inc
pusha
and
shl
(bad)
(bad)
pop
push
push
xor
or
add
jge
es
jmp
aam
test
mov
dec
push
adc
sar
loop
or
ror
mov
or
sbb
inc
mov
sub
dec
push
and
push
add
xor
and
cmps
sbb
shr
adc
xor
pop
icebp
cmp
popf
stos
icebp
dec
mov
and
jg
push
fwait
pop
lea
dec
mov
adc
mov
and
cli
dec
cmp
pop
dec
retf
jne
cmp
test
loopne
ror
jge
inc
mov
pop
push
lods
cmp
cmp
and
sbb
inc
inc
push
cs
and
or
jmp
cmc
inc
(bad)
jmp
imul
ror
jle
push
xor
pop
div
mov
sub
jmp
popf
push
xlat
jno
nop
in
add
in
xchg
push
xlat
add
sbb
adc
in
test
hlt
push
fnstcw
lods
xchg
sbb
mov
dec
adc
dec
test
jae
les
test
inc
jge
cmp
cmps
xchg
jg
push
hlt
cmp
je
mov
imul
sbb
cmps
xchg
mov
rcl
xchg
data16
add
jmp
adc
and
pusha
xchg
add
xchg
inc
out
inc
hlt
inc
lds
adc
or
inc
push
pop
add
ficom
outs
cmp
add
in
adc
inc
mov
xor
inc
or
adc
pushf
cdq
push
xchg
clc
ret
loopne
in
test
cmp
sub
mov
sti
je
mov
addr16
call
fsub
loop
adc
sbb
hlt
jecxz
ret
and
pop
lahf
ds
ds
push
scas
in
popa
sti
sub
lock
ficomp
mul
jl
ss
xchg
xchg
xrelease
xchg
xor
hlt
dec
sub
sbb
test
and
lea
out
mov
adc
adc
or
mov
push
sbb
rol
pop
sbb
push
push
fisttp
push
mov
sar
add
and
test
or
xor
cmp
push
push
aaa
dec
inc
ins
test
lock
dec
or
push
mov
test
xor
pop
xchg
mov
and
add
add
jmp
adc
mov
push
pop
je
into
dec
and
push
in
(bad)
lahf
mov
rol
inc
mov
xor
test
test
pop
add
mov
bound
jne
jge
mov
sbb
lock
mov
dec
or
push
or
inc
push
adc
mov
movs
js
jne
cs
mov
xor
in
and
addr16
imul
sub
jmp
mov
sub
sbb
pop
mov
mov
imul
js
sbb
fisttp
or
or
inc
or
hlt
or
sti
or
(bad)
data16
push
es
add
and
test
or
je
and
add
or
sbb
repnz
adc
mov
aam
shl
dec
xor
adc
or
cmp
enter
add
mov
add
and
and
ret
mov
or
test
adc
lock
adc
test
je
xlat
sbb
push
and
pop
xor
or
or
sbb
sub
lods
mov
pop
clc
(bad)
and
pop
add
std
or
jmp
inc
popf
mov
mov
cld
mov
and
cmp
int
aaa
jecxz
jge
mov
jo
rcr
xchg
jmp
sbb
sub
loopne
mov
sub
sub
sub
pusha
and
out
push
or
out
pop
adc
adc
out
mov
loope
pop
sub
xor
dec
and
pop
push
jns
adc
fnstsw
push
cmps
cmp
pusha
(bad)
ins
push
and
test
rcl
jmp
inc
or
out
dec
cmps
and
adc
sti
add
stos
retf
add
loopne
fisttp
or
ret
mov
mov
jb
dec
je
add
dec
retf
and
or
scas
jmp
push
push
pop
xchg
sub
test
add
add
imul
jmp
push
and
or
sub
adc
std
fwait
dec
inc
fld
fstp
jmp
fisttp
xor
xor
adc
mov
sbb
dec
xor
cld
jo
cmp
adc
scas
fimul
stos
inc
rcpps
xchg
pop
sub
sahf
int3
or
movs
push
and
sbb
xor
sti
retf
jne
imul
pop
sub
or
cmps
xchg
push
aaa
sbb
add
cmc
bound
fcomp
or
(bad)
pop
jne
add
jnp
jmp
sub
sub
jmp
sub
aaa
movs
cmp
fldenv
inc
(bad)
test
int3
pop
popa
adc
push
lock
pop
ja
jecxz
xchg
pop
xor
aaa
loopne
xchg
adc
inc
in
xchg
dec
pop
xlat
mov
jbe
or
or
shr
inc
aam
popf
mov
fdivp
bnd
fadd
adc
pop
aaa
inc
mov
es
cmp
xchg
dec
into
and
shr
sbb
or
inc
lock
dec
in
out
lock
shl
adc
mov
push
imul
jmp
pop
pusha
push
inc
(bad)
clc
adc
gs
std
mov
jg
and
and
and
je
push
sbb
add
out
xor
xchg
xchg
add
enter
movs
xchg
cli
lods
mov
jg
mov
fidiv
add
and
push
jmp
or
push
jmp
or
xchg
adc
shr
cld
add
and
pop
mov
push
sub
jo
xor
lds
cmp
je
adc
ja
sbb
es
fiadd
or
cmp
pop
cmps
sbb
sbb
adc
add
and
and
xchg
or
ss
and
xor
enter
mov
mov
mov
cmps
mov
pop
mov
jno
mov
dec
inc
and
dec
xlat
push
and
or
and
mov
mov
or
or
add
push
sub
mov
push
test
push
push
mov
cmp
adc
mov
add
das
stc
mov
lea
push
or
int
cwde
pusha
retf
and
(bad)
sub
scas
cmp
dec
adc
mov
popa
int3
pop
mov
or
mov
dec
add
inc
adc
adc
cmp
data16
sbb
pop
and
mov
or
pusha
fild
or
sbb
loop
mov
test
and
not
and
or
pop
or
ins
add
push
push
or
and
pop
or
pop
or
in
adc
ret
push
dec
fwait
sbb
and
fsubr
js
or
fstp
sbb
outs
push
(bad)
jmp
inc
or
call
add
out
sti
lock
je
sbb
je
ldmxcsr
push
or
movs
dec
and
mov
or
out
and
fistp
push
lahf
sbb
push
imul
retf
gs
fsubr
dec
adc
pop
cmp
add
(bad)
ins
lods
add
and
loopne
adc
inc
fmul
cmp
add
or
inc
inc
pop
xor
fucomp
sub
and
jb
sub
push
push
dec
mov
adc
lock
mov
push
mov
add
or
push
ds
inc
movs
test
mov
adc
iret
sbb
mov
pop
call
jbe
or
dec
je
push
sbb
or
add
push
jne
adc
add
adc
cli
pop
jo
sbb
or
xor
stos
aaa
inc
add
lock
jb
sub
(bad)
ds
test
ja
jge
outs
pop
sti
mov
jmp
lock
je
push
push
je
or
inc
das
cs
and
lds
clc
outs
jne
or
jmp
add
movs
cli
hlt
jne
and
xchg
imul
sub
pop
fcom
adc
arpl
pop
retf
(bad)
add
fsub
jbe
xchg
and
jp
push
pushf
xchg
sbb
push
cdq
mov
fst
js
pusha
outs
add
pop
dec
jp
in
jne
stc
pop
cmp
add
les
es
cmp
add
add
adc
and
adc
std
inc
push
add
pusha
cmps
mov
ds
fsubp
jae
test
rol
shr
push
push
pop
rol
aas
xchg
dec
out
or
cdq
mov
xor
dec
rcl
jae
lock
jo
xor
or
xor
scas
cmp
jb
xchg
call
inc
std
fadd
push
adc
mov
inc
sub
and
dec
adc
arpl
fisttp
xchg
inc
jmp
mov
sub
jmp
jmp
shl
push
xor
fsubrp
mov
imul
cld
inc
inc
cmp
cs
pusha
mov
retf
ins
push
clc
sub
sbb
add
push
mov
cmp
mov
adc
push
and
sbb
xor
or
dec
adc
jl
icebp
shl
jecxz
ins
aaa
dec
rol
push
cmp
in
fwait
dec
mov
or
das
xor
push
add
pop
sub
sbb
dec
je
xchg
cli
js
(bad)
outs
adc
bnd
lea
lea
or
jnp
xchg
hlt
int3
push
out
sub
loope
push
sbb
mov
pop
inc
push
mov
cmp
inc
shl
mov
dec
je
fidiv
or
enter
pop
add
push
ja
or
(bad)
leave
rol
ret
dec
xor
mov
dec
and
push
add
sub
push
xor
push
loop
inc
xchg
icebp
test
ror
sbb
add
sbb
xchg
inc
shr
cmp
xor
adc
adc
xchg
push
icebp
sar
xor
sti
cs
jp
sahf
xchg
mov
je
shr
sub
fist
push
addr16
movs
outs
pop
jmp
mov
or
add
or
add
jbe
cmp
mov
push
cld
jo
sbb
jge
mov
out
and
jge
test
lods
mov
sub
xchg
pop
(bad)
jl
out
push
mov
push
pop
icebp
lahf
inc
and
aas
bound
aad
enter
mov
jb
xchg
push
push
sbb
call
push
outs
mov
neg
inc
push
sub
pop
push
inc
pop
inc
sub
mov
not
shr
outs
pop
in
sti
mov
lar
inc
adc
add
jo
or
jb
or
adc
sbb
mov
and
or
mov
repnz
xchg
dec
push
cs
(bad)
je
pop
push
jecxz
ret
pop
lock
push
pop
pop
mov
mov
and
cmp
pop
pop
clc
sub
jle
push
push
jnp
jne
mov
adc
jmp
add
push
jmp
jecxz
and
push
add
add
cmp
int3
mov
push
pop
pop
(bad)
sub
popa
fst
cwde
repz
mov
jns
xchg
icebp
call
push
loope
iret
les
dec
add
adc
lods
inc
ret
jmp
cmp
in
retf
fimul
sar
push
pop
popa
test
je
outs
mov
sar
mov
dec
push
pop
sbb
dec
pushf
dec
ins
ret
cmp
mov
(bad)
cwde
push
dec
jnp
aam
add
dec
xor
and
push
add
push
shr
lods
shl
xchg
xor
jbe
mov
mov
les
cmp
dec
cwde
push
or
dec
pop
jns
inc
push
sub
cwde
lock
push
sub
add
div
dec
je
popa
xor
je
dec
add
adc
or
inc
(bad)
fisubr
(bad)
movs
jnp
js
or
pop
xor
mov
push
inc
xchg
out
dec
cmp
add
(bad)
and
movs
sbb
or
or
and
retf
add
out
jnp
xor
mov
and
test
add
xor
add
cmps
push
out
adc
inc
dec
hlt
cmp
nop
or
and
pop
cmps
fs
loop
ret
pop
not
lock
sbb
push
das
or
pop
(bad)
or
or
dec
mov
add
or
inc
sar
add
jmp
out
jmp
dec
mov
mov
outs
dec
jecxz
add
inc
cmp
sbb
cmp
sbb
adc
push
mov
dec
call
loop
outs
add
push
xor
(bad)
add
mov
jl
rcr
dec
adc
adc
dec
sti
inc
(bad)
pop
or
xor
mov
sahf
xor
cdq
push
add
mov
mov
test
js
inc
mov
ss
fstp
scas
or
push
dec
push
or
mov
sbb
je
mov
sbb
movsx
sub
jp
add
fsubr
inc
popa
and
scas
mov
push
add
mov
stos
div
sub
int3
cdq
or
push
mov
sub
and
neg
sbb
add
call
adc
icebp
dec
in
push
int3
push
lahf
cli
sar
mov
pop
jbe
test
mov
pop
add
sbb
mov
jmp
sub
sub
int3
mov
jno
inc
or
xor
adc
mov
inc
clc
int
or
les
aam
or
mov
daa
(bad)
frstor
jae
add
clc
pop
and
movs
jge
xor
rcr
pop
clc
xor
cmps
push
adc
and
cmc
fsubr
sub
pop
test
jno
int3
xchg
mov
inc
test
sbb
push
push
add
data16
dec
sub
hlt
xor
push
out
cmp
and
and
inc
jmp
ins
sbb
xor
fs
push
sahf
add
aam
or
adc
xchg
call
mov
clc
pop
pop
scas
nop
mov
clc
retf
push
pop
sbb
inc
xor
adc
test
fsubr
in
test
xor
jno
adc
and
push
int3
rol
inc
test
adc
ss
or
sub
sbb
dec
sub
jmp
push
push
scas
pop
cli
je
mov
push
dec
jmp
std
xor
mov
adc
or
jae
shld
shl
sub
push
push
mov
ret
pop
ret
push
mov
rcl
jmp
and
pop
lea
cmp
or
fld
and
sbb
sbb
sub
bndstx
xlat
and
loopne
push
xchg
fld
int3
or
inc
and
loopne
fistp
push
repnz
mov
adc
std
inc
mov
inc
push
pop
jmp
mov
and
inc
or
inc
push
push
loop
and
push
dec
ds
add
call
sub
unpckhps
jmp
or
inc
adc
int3
clc
les
in
data16
sti
fstcw
je
in
xchg
mov
cmp
add
loop
in
leave
fst
fisttp
push
sub
jnp
sbb
sar
and
or
(bad)
popa
push
inc
xor
js
ins
mov
add
test
add
cmps
bsr
hlt
sbb
jne
dec
mov
push
mov
or
jo
cmp
je
push
xor
pop
mov
jo
std
dec
ins
mov
and
jne
sub
loope
les
mov
dec
adc
sub
lock
or
cmp
inc
jmp
das
and
inc
test
movs
xchg
add
sti
mov
(bad)
rcr
fcomp
jae
fmul
inc
cs
pop
add
shr
dec
repz
lock
ins
pop
lock
and
jbe
test
xor
(bad)
ja
movs
movs
cmp
sbb
mov
sbb
pop
mov
push
push
add
add
fld
(bad)
jno
bound
xchg
mov
add
push
adc
mov
add
pop
jne
or
sar
dec
aaa
mov
jb
movs
fmul
nop
cli
sub
neg
ins
imul
add
jns
in
(bad)
mov
adc
iret
add
jmp
mov
jb
test
pop
(bad)
pop
aad
or
loope
mov
fstsw
dec
jmp
shl
sar
rol
dec
fdiv
and
xlat
push
loope
mov
or
inc
fiadd
fdivr
and
ins
xchg
sub
iret
cmp
adc
lods
icebp
in
std
rol
mov
mov
or
movs
sub
in
or
pop
ins
in
out
data16
sbb
adc
test
out
ret
or
call
test
lods
or
sahf
dec
pop
pop
ret
stgi
add
push
sbb
jmp
add
faddp
test
frstor
xor
cmp
cmps
sbb
test
add
loopne
inc
cmp
push
add
test
shr
xor
sbb
sbb
ret
shr
loopne
in
sbb
mov
test
int3
je
cmp
cdq
mov
pop
sub
retf
imul
push
sbb
imul
pop
fmul
in
fisttp
inc
sbb
sub
aam
cmp
jmp
mov
(bad)
adc
jno
mov
sub
or
jb
data16
fcomp
xchg
add
es
ds
movs
stc
retf
adc
jg
xor
push
int
fdivr
fsubrp
jge
adc
fisub
mov
or
fstp
adc
arpl
mov
xor
shr
ins
test
jbe
iret
lea
sbb
pop
mov
xchg
imul
pop
mov
adc
(bad)
jge
pop
mov
das
xchg
or
add
retf
leave
ins
jb
retf
bound
lds
(bad)
jge
lods
pop
(bad)
xor
inc
inc
retf
retf
in
cmp
mov
bound
rcl
ins
out
xor
and
int3
jb
sbb
int
cmp
pop
adc
(bad)
jge
imul
jb
inc
adc
int
dec
push
in
int
or
movs
cwde
sub
mov
dec
pop
out
xor
or
into
fsub
pop
jb
into
cmp
xchg
adc
(bad)
jge
fisub
das
mov
cmp
mov
sti
push
test
push
fidivr
or
loopne
cmp
fnstenv
dec
jmp
cmc
repnz
push
or
outs
sub
sub
mov
popa
mov
push
seta
and
fnstsw
or
fadd
pandn
xlat
push
xor
fld
or
(bad)
cmp
jl
add
add
add
inc
push
jl
mov
mov
addr16
xor
dec
pop
sub
pop
jp
push
sub
push
xor
adc
test
ja
aaa
shr
sbb
mov
ret
dec
or
int3
mov
and
enter
sub
test
out
ret
pop
adc
das
sar
ja
or
xor
ja
xor
enter
or
in
xor
sub
mov
ss
or
sub
mov
es
into
imul
adc
mov
fsubr
mov
test
je
es
xor
outs
sub
cmp
(bad)
aas
adc
add
add
jecxz
mov
or
fcom
das
clc
or
loope
fmul
(bad)
adc
mov
sbb
sub
jb
repnz
push
push
fchs
jmp
das
clc
mov
pop
adc
je
fnsave
and
pop
jg
retf
in
jnp
(bad)
cld
(bad)
xor
mov
add
xor
sub
add
mov
(bad)
fldenv
sbb
pop
xor
ins
icebp
jge
xor
xor
jbe
test
cmp
mov
xchg
cli
out
ret
and
jb
jns
out
add
cmp
call
div
and
dec
add
(bad)
mov
and
sbb
fsubrp
and
js
and
hlt
or
adc
adc
cmc
sbb
cmc
enter
inc
add
pop
inc
inc
pop
add
pop
aad
into
nop
dec
or
pusha
and
add
lahf
test
scas
xchg
or
in
or
sbb
push
push
pop
pop
enter
fcom
(bad)
fnsave
loopne
pop
jns
and
rol
in
sbb
cmp
fdiv
add
jnp
bound
call
or
cli
shr
inc
fcom
adc
and
xor
xor
pop
adc
pop
les
jl
push
je
mov
and
jecxz
mov
int3
mov
xor
lea
xor
push
test
cmp
test
xor
and
mov
or
jge
or
pop
and
xor
dec
dec
lahf
test
leave
xchg
cmps
add
and
(bad)
sar
cmp
imul
jl
sar
ret
sbb
or
add
push
push
jle
and
push
sbb
sahf
push
ds
sbb
xor
sub
into
int3
mov
xlat
adc
mov
mov
jmp
cdq
test
jo
push
mov
adc
inc
add
or
adc
aam
test
repz
push
fsub
(bad)
lods
inc
movs
fdivr
dec
aad
push
add
and
jge
push
inc
mov
aaa
test
jae
adc
or
inc
or
or
popa
mov
ret
push
shr
adc
loop
inc
sbb
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
add
pop
loopne
in
xchg
jne
imul
pop
add
xor
aas
sbb
or
cmp
mov
xchg
movsx
scas
loopne
popa
push
pop
adc
push
dec
ret
push
test
jne
xor
fsubr
or
sub
mov
lods
xchg
sub
loopne
(bad)
jmp
add
call
hlt
add
push
cdq
pop
idiv
add
adc
or
fsubr
cdq
mov
xchg
les
loopne
mov
sbb
adc
xor
sub
lea
mov
in
dec
ret
cdq
mov
mov
lock
mov
mov
and
jo
jp
imul
ret
push
sbb
ror
ret
add
jg
add
jmp
add
cmp
test
pop
add
or
pop
sbb
jo
sub
or
hlt
push
cmp
jle
sub
jmp
icebp
mov
in
xchg
sbb
mov
jge
jnp
pop
adc
add
imul
dec
and
imul
mov
pop
fwait
and
sub
push
add
jmp
cmps
xor
test
fbstp
aam
popf
mov
add
ltr
dec
sbb
fsubrp
scas
cmp
inc
pop
rcr
xor
adc
cld
stc
jnp
mov
inc
cmp
jns
and
push
xchg
(bad)
dec
inc
cmp
sub
popf
xchg
or
pop
push
idiv
jbe
sbb
enter
nop
jb
push
sar
and
push
xor
push
push
jmp
pop
mov
xlat
stc
push
push
push
push
mov
into
dec
pushf
xchg
jp
je
cmp
xchg
xchg
js
ins
pop
jo
xor
adc
push
sbb
push
mov
or
scas
adc
imul
xchg
push
(bad)
or
js
fs
std
jge
bound
xor
rcl
inc
js
pop
push
push
jnp
daa
jle
daa
add
mov
xlat
mov
sbb
push
cmp
push
sar
push
jle
jge
mov
push
cmp
and
repnz
pusha
pop
add
jle
jge
call
fs
add
pop
push
sbb
jne
jbe
ja
sub
(bad)
sbb
ror
inc
cld
pusha
sub
sub
fsubr
push
adc
mov
sub
es
icebp
sbb
scas
mov
inc
sbb
sub
hlt
clc
xchg
lea
cmp
cli
mul
push
jbe
or
(bad)
div
fs
mov
std
ds
cmc
retf
inc
(bad)
je
mov
mov
fwait
dec
jl
adc
jl
inc
push
dec
es
repnz
push
jmp
stos
or
cld
fstp
xor
es
xchg
ja
push
push
pop
loope
push
push
add
adc
xor
or
jge
jns
cwde
cmp
jp
dec
or
add
pop
push
retf
clc
adc
sbb
adc
add
dec
dec
lea
inc
clc
ficom
adc
daa
sub
sbb
push
mov
adc
jnp
inc
ret
adc
std
jg
jl
sub
mov
(bad)
fiadd
sbb
sub
and
mov
mov
inc
movs
jno
push
mov
mov
mov
mov
outs
jmp
and
push
jbe
jns
or
fsub
pop
push
inc
rcl
sbb
ret
cdq
add
scas
int3
outs
imul
mov
sub
lock
mov
dec
adc
inc
add
or
jmp
loopne
jl
(bad)
dec
adc
add
push
sti
xor
sub
push
mov
inc
and
pop
cdq
cld
push
push
and
push
mov
or
icebp
call
push
dec
inc
cwde
pop
ror
inc
fldcw
sbb
mov
push
sbb
sub
pop
mov
mov
jno
fsub
and
mov
ror
inc
cmp
or
outs
call
(bad)
and
adc
push
neg
neg
sbb
nop
ja
jl
mov
sbb
fadd
cdq
sbb
sbb
xchg
and
lods
adc
xor
aas
xor
shr
rcr
lods
fisttp
test
adc
jo
mov
dec
pop
mov
add
stc
sbb
or
pop
sbb
or
sahf
mov
movs
ss
xor
sbb
sbb
push
mov
push
mov
push
popa
psllw
push
xchg
or
lods
dec
xchg
or
or
sbb
xchg
sahf
ja
or
call
xor
inc
xor
(bad)
adc
xchg
add
mov
nop
jle
push
sbb
adc
sub
xchg
loopne
pop
jne
movs
jbe
xor
clc
inc
xor
cmp
int3
pop
(bad)
lahf
or
inc
call
ret
sahf
hlt
or
pusha
pop
test
add
jne
push
cs
sahf
dec
je
push
xchg
xlat
ds
test
je
add
xor
addr16
xchg
aam
push
mov
push
cmp
push
bound
add
adc
inc
or
jne
fisubr
jge
xor
mov
xor
mov
mov
add
sub
(bad)
push
shr
xor
cmp
ins
sbb
and
xor
xchg
or
mov
inc
or
xor
in
sub
add
call
jns
call
pop
inc
sbb
mov
mov
hlt
jbe
sub
in
jbe
xchg
jmp
inc
push
cwde
icebp
xchg
test
mov
push
sbb
xor
icebp
add
fcmovnu
mov
cmp
mov
push
inc
adc
cmp
lock
jmp
add
push
mov
pop
sbb
outs
dec
inc
(bad)
pop
pop
and
pop
retf
cdq
jo
mov
push
test
xchg
sub
pop
inc
inc
dec
cs
mov
push
inc
and
mov
xor
sbb
sub
(bad)
sbb
add
mov
pusha
or
pop
sbb
out
aaa
dec
mov
mov
dec
mov
jo
jmp
cmp
jae
dec
lea
ja
mov
pop
pop
jae
pop
jbe
dec
loopne
pop
mov
mov
and
add
sub
push
adc
sbb
pop
push
cmc
es
pop
adc
fld
jg
pop
movs
test
retf
fistp
add
test
mov
sbb
dec
add
push
ret
call
sub
ins
adc
or
xor
pop
pop
adc
popa
or
mov
out
sar
xchg
sbb
push
inc
inc
in
das
sbb
jo
mov
xchg
aas
and
mov
fild
pop
daa
or
sbb
cmps
loopne
or
push
pop
add
cmc
xchg
cli
mov
call
scas
and
dec
push
fidiv
mov
mov
stos
xchg
jno
mov
sub
ins
mov
cld
jmp
cmp
xchg
cmps
sub
pusha
mov
aas
jge
(bad)
loopne
inc
push
xchg
mov
pop
mul
inc
pop
inc
xor
xchg
inc
out
cmp
add
nop
add
jmp
or
cmp
or
xchg
push
fs
push
es
ficom
imul
add
jmp
sbb
cs
pop
push
lods
xor
(bad)
or
je
ins
sub
xchg
jo
sahf
test
dec
ret
cmp
sbb
jns
mov
aam
inc
jns
adc
jg
rcr
add
sub
loop
sti
call
add
loope
mov
mov
dec
jecxz
inc
push
mov
fnstenv
pushf
push
pushf
mov
mov
pusha
addr16
cmp
mov
jmp
jl
je
sbb
pop
pop
cmp
jle
pop
or
popf
jno
mov
fnsave
test
mov
jo
sbb
je
dec
inc
add
dec
jne
ret
xor
int3
push
shl
cmp
retf
lds
adc
adc
inc
lahf
pop
inc
xchg
or
shr
push
fabs
cmp
push
push
or
cmp
clc
inc
pop
xor
or
stc
pop
push
mov
jle
adc
call
push
push
pushf
mov
pop
fsubr
inc
sbb
or
sbb
push
je
mov
cmp
mov
addr16
test
mov
fisttp
or
mov
push
add
mov
adc
fmulp
test
into
loopne
adc
adc
icebp
cmp
jnp
push
out
call
and
mov
out
xor
inc
xor
fidiv
icebp
xor
jmp
add
sub
or
cmp
push
pop
inc
jnp
sub
add
inc
imul
push
mov
cmp
mov
aam
add
lock
dec
inc
ret
cmps
movs
sar
mov
cmps
hlt
lea
dec
mov
add
in
pop
mov
add
call
inc
inc
cmp
je
xchg
mov
cli
sub
daa
adc
add
mov
movs
fidivr
dec
je
and
push
js
test
pop
push
cdq
adc
mov
pushf
lea
loop
cmp
aam
mov
inc
jmp
mov
mov
push
inc
sbb
fs
sub
mov
retf
pop
sbb
sub
mov
or
mov
or
ja
ins
sbb
or
xchg
dec
lock
test
idiv
test
push
mov
push
push
mov
addr16
adc
cmp
ret
cmp
je
mov
and
mov
rcr
mov
or
or
add
cdq
loopne
inc
push
pop
(bad)
inc
int
fwait
stos
xchg
add
push
mov
add
ja
cli
frstor
and
movs
jb
jns
inc
rol
adc
retf
xor
mov
lahf
lock
xchg
dec
and
push
inc
ret
stc
cmp
hlt
lea
(bad)
bound
jne
jmp
push
in
ror
or
or
jmp
je
jl
das
dec
jmp
dec
imul
add
add
mov
pop
fcom
pop
xchg
bound
stos
lea
imul
cwde
sub
inc
sub
push
mov
or
mov
mov
(bad)
mov
test
in
or
aam
sahf
data16
cmp
sti
ret
push
mov
cmp
je
push
(bad)
xchg
or
push
and
inc
aaa
test
mov
shl
inc
arpl
lock
jnp
retf
je
sbb
inc
push
jmp
cmp
fsub
add
inc
pop
add
mov
add
and
sbb
outs
inc
add
sbb
or
sub
stos
mov
int3
(bad)
cdq
pop
or
push
stos
mov
lock
pop
sbb
popf
adc
es
inc
add
pusha
js
(bad)
aas
pop
pop
nop
inc
inc
mov
sub
add
sub
aam
and
or
sub
push
dec
xor
push
sub
pop
std
vpmacswd
loopne
pop
adc
pop
mov
mov
cmp
ja
mov
add
and
cmp
inc
ins
sbb
lahf
xor
aam
push
adc
add
rcr
xchg
inc
sub
lea
push
cmp
jbe
fs
push
mov
idiv
sbb
sbb
test
sar
pop
pop
dec
js
jnp
fmul
push
xor
aam
jbe
js
push
scas
adc
mov
cmp
mov
jecxz
sbb
inc
inc
addr16
mov
sbb
movs
push
test
push
or
sub
xor
loope
or
das
iret
cmp
(bad)
inc
aam
sti
add
ret
lods
je
mov
lods
test
lea
cli
ja
icebp
dec
and
and
adc
inc
add
mov
cmp
inc
cmp
jl
sub
imul
jge
mov
adc
rcr
mov
sub
jo
cmp
les
adc
hlt
ret
inc
mov
mov
call
add
sbb
std
(bad)
jbe
call
push
ja
sub
adc
inc
cs
jmp
test
jno
mov
xor
lods
test
es
pop
pshufw
cmps
nop
sbb
pop
mov
add
retf
add
cmp
or
nop
push
aas
inc
push
call
out
sub
add
sbb
or
daa
push
add
mov
or
pop
cmp
cmp
push
and
sub
jmp
add
cmp
and
jmp
cdq
push
jne
inc
loopne
nop
xchg
out
push
nop
mov
sub
ret
mov
inc
mov
mov
and
test
sbb
adc
add
fbld
inc
or
lock
xchg
adc
add
test
enter
call
clc
cmp
lea
xor
(bad)
add
push
sbb
push
dec
fwait
sub
lds
into
scas
xor
sahf
je
jmp
outs
dec
mov
pop
je
push
xor
push
mov
movs
or
push
inc
outs
mov
xor
mov
push
xor
jmp
jne
adc
dec
cmp
retf
pop
loopne
mov
push
ret
dec
call
xor
dec
pop
movs
mov
dec
adc
aam
dec
or
add
mov
dec
cmp
inc
push
push
add
pop
jmp
add
and
jne
and
hlt
jle
sub
xchg
je
or
jne
dec
push
sbb
scas
mov
repnz
jbe
sbb
ret
fs
jl
sub
in
push
jmp
aas
mov
ins
push
pop
xchg
jp
add
dec
or
jbe
je
xor
or
or
les
pop
retf
cmp
shl
shl
pop
outs
lock
pop
js
es
dec
in
mov
sar
xor
cmp
pop
or
xor
sbb
cmps
imul
(bad)
and
loopne
cmp
push
mov
or
ins
and
test
mov
and
dec
sbb
and
call
(bad)
mov
scas
push
lea
in
and
pop
clc
retf
pop
outs
or
(bad)
mov
jae
sub
lea
je
popf
mov
mov
jo
fstp
or
push
xchg
and
mov
fmul
rcl
test
inc
and
lea
icebp
mov
rcl
fimul
jne
fsub
mov
dec
(bad)
push
jns
dec
fwait
or
lods
and
push
enter
inc
xchg
out
xor
and
push
mov
mov
or
or
or
out
shl
push
icebp
jne
and
mov
xor
xchg
aam
lock
pusha
and
xchg
lods
add
ror
sbb
mov
out
inc
es
mov
sbb
sbb
outs
adc
lock
not
jecxz
sbb
push
rcr
sti
dec
out
jbe
push
pop
icebp
pop
rol
(bad)
out
sbb
inc
jne
adc
or
inc
sbb
mov
adc
ins
mov
add
dec
lods
es
ja
fidiv
sub
outs
inc
cmp
inc
dec
movs
fiadd
xor
ret
mov
cmp
push
ret
adc
jne
push
or
adc
call
sub
push
push
lods
mov
or
mov
push
test
mov
or
sub
dec
out
jl
dec
repnz
mov
js
and
mov
pop
mov
pop
mov
les
and
add
shl
sub
pop
mov
sub
sahf
out
dec
cwde
add
fwait
xchg
addr16
sbb
stos
xchg
ret
daa
out
pop
pop
push
push
ror
fbld
pushf
jnp
cdq
xchg
xchg
pusha
adc
es
hlt
add
jns
ins
or
and
loopne
adc
adc
sub
xor
loop
dec
mov
mov
pop
lods
js
cmp
popa
adc
push
dec
or
leave
adc
sar
push
ins
in
xchg
push
xor
pushf
loop
shl
dec
je
push
jmp
sti
sub
push
cmp
in
je
sbb
loop
pop
adc
outs
inc
not
int3
popa
mov
or
dec
ins
lods
jbe
mov
jae
push
push
inc
addr16
add
jmp
arpl
shl
je
out
pusha
jecxz
fcom
call
adc
dec
dec
dec
data16
rcl
fcomip
out
arpl
add
shl
or
call
add
and
push
ret
xor
sar
in
sub
fnstenv
add
add
add
in
movs
rol
sbb
adc
sbb
leave
cmp
add
inc
ins
cmp
mov
mov
jo
sbb
lock
cmp
mov
add
dec
fnsave
dec
and
sbb
pushf
sbb
ret
add
dec
dec
inc
cmp
pop
sahf
adc
cdq
sbb
xchg
cmp
dec
(bad)
lods
leave
mov
dec
ins
jge
pop
push
repz
lea
push
mov
scas
and
add
add
ficom
xor
or
dec
dec
or
adc
cmp
and
and
cmp
cmp
sub
xor
xor
ret
inc
jb
cmp
inc
inc
cmovs
jb
push
push
pop
add
pushf
pusha
fs
pushf
jo
js
jnp
xor
dec
xor
mov
xchg
cwde
pushf
xor
and
mov
push
outs
imul
call
add
pusha
pop
add
mov
jbe
cmp
jae
pop
jle
mov
adc
lods
adc
pusha
inc
call
movs
sbb
inc
call
xchg
enter
pop
daa
adc
push
push
jo
add
sbb
sbb
cmp
cmp
mov
sub
mov
cmp
ja
inc
cli
je
inc
dec
jne
out
mov
xor
repz
xlat
mov
or
pop
add
test
test
add
mov
dec
stos
add
jmp
ror
cs
sbb
push
xor
mov
les
dec
cmp
push
sub
repz
stos
pusha
xchg
pop
repz
je
cmps
test
mov
jmp
jb
adc
or
mov
lock
mov
jmp
sbb
std
xchg
pop
out
jns
in
out
sub
lock
mov
pop
push
inc
sbb
in
xchg
sbb
xor
or
xchg
xchg
fadd
sbb
add
fbstp
or
sub
and
in
or
push
and
js
xchg
mov
imul
adc
sub
jp
add
add
cmp
sbb
sub
and
adc
mov
mov
outs
jbe
push
or
cmp
xor
loopne
shl
iret
test
repz
das
mov
sbb
retf
mov
les
jnp
mov
mov
adc
xchg
mov
je
push
lods
daa
shl
inc
pop
mov
sub
sub
call
dec
clc
push
push
imul
adc
pop
and
fwait
std
mov
cmp
std
ds
and
mov
cdq
cmp
mov
aas
adc
cwde
xor
test
mov
dec
add
jl
jle
cli
mov
jle
or
jne
mov
mov
sbb
shl
loop
add
ret
test
jmp
and
or
and
js
es
and
mov
cwde
lea
mov
int
dec
hlt
leave
mov
aaa
dec
add
inc
cld
jl
in
and
mov
xchg
mov
or
dec
pop
push
or
in
dec
int3
es
push
je
add
daa
dec
jo
jmp
pop
mov
jae
push
mov
adc
mov
and
xchg
ret
stos
jae
pop
sbb
xchg
push
idiv
mov
sub
pop
lock
psrad
or
pop
leave
mov
and
pop
mov
cmp
adc
imul
or
sti
add
push
ret
ss
dec
in
fisttp
ret
outs
cmp
sub
repz
inc
push
push
push
mov
dec
or
enter
das
(bad)
gs
sub
sub
xchg
lds
inc
(bad)
lods
or
pop
sub
inc
adc
or
add
cdq
out
adc
dec
pop
adc
enter
jp
test
and
or
or
test
loope
shl
shld
iret
pop
daa
jp
adc
push
add
push
add
add
adc
test
push
shr
adc
push
rol
daa
sbb
sub
cmc
lea
push
adc
and
push
jmp
outs
adc
mov
outs
jg
int
int3
inc
xor
aaa
sbb
adc
dec
and
push
cmp
test
sub
bound
inc
dec
movs
loope
(bad)
xor
pusha
add
scas
push
xchg
fdivr
dec
retf
or
mov
es
xor
xchg
lea
inc
or
inc
por
loope
add
xor
add
or
int3
dec
adc
lock
sbb
or
push
ror
test
das
add
sbb
js
loopne
inc
pop
adc
bound
(bad)
leave
cli
sbb
sbb
call
mov
cmp
les
dec
jae
or
test
je
or
mov
dec
xor
jbe
pop
pop
inc
lock
sub
jmp
hlt
inc
push
inc
jbe
retf
inc
push
xchg
add
enter
jl
ficom
push
mov
jmp
add
js
pop
hlt
outs
inc
loop
fadd
add
or
add
add
ret
jg
enter
adc
xor
bound
rcl
adc
push
jne
lods
dec
pop
popa
xor
lods
mov
and
test
dec
pop
push
(bad)
adc
or
add
icebp
pusha
dec
adc
(bad)
fist
dec
mov
dec
adc
sar
pop
or
ret
divps
into
sub
sbb
jb
cmp
fadd
or
sbb
push
or
inc
and
rcr
dec
lock
cmp
push
mov
sti
mov
add
shl
mov
enter
jns
(bad)
dec
nop
mov
mov
mov
push
and
pop
or
push
or
cmp
or
add
add
in
mov
adc
in
add
lock
ror
add
popa
std
pop
test
jne
inc
pusha
jl
sbb
sti
lea
int3
cs
stos
stos
push
stos
pop
pop
adc
(bad)
add
movs
add
mov
mov
outs
fist
push
jp
add
rol
or
pop
jbe
add
add
loopne
lea
or
mov
inc
clc
sub
inc
shl
mov
pop
fstp
and
not
test
add
adc
repz
mov
cdq
icebp
int
outs
ins
pop
and
mov
out
mov
inc
ins
jae
lahf
push
sub
sub
dec
mov
and
xor
repnz
or
lahf
stos
mov
sbb
dec
cmp
or
cmp
add
jecxz
sub
push
daa
sub
and
pusha
dec
je
jge
sub
xor
ja
enter
xlat
loopne
add
hlt
jmp
(bad)
cmp
dec
dec
stos
inc
sub
xchg
jb
(bad)
loope
adc
cmp
push
imul
movs
xor
and
sub
hlt
add
dec
mov
push
cld
not
mov
js
mov
mov
and
and
loopne
adc
out
push
or
and
lock
hlt
xchg
and
push
add
pop
loope
mov
mov
xchg
call
push
jge
adc
mov
popa
pop
mov
dec
mov
hlt
test
jb
jno
pop
adc
pusha
add
sub
loope
mov
push
cmp
cmp
adc
sbb
add
les
pop
add
adc
mov
dec
jns
inc
lock
add
cmp
and
ret
jecxz
mov
xor
pop
push
push
cmp
mov
cmp
inc
sbb
add
sbb
loopne
add
and
stos
stos
push
or
xchg
retf
(bad)
mov
jl
push
iret
and
push
out
and
add
cmp
sub
inc
jo
cld
mov
jge
sbb
nop
add
scas
shl
mov
fs
add
(bad)
icebp
sub
out
or
loop
in
loop
or
add
add
repnz
push
adc
mov
xchg
pop
adc
or
or
nop
mov
jns
and
adc
adc
stc
cld
test
sbb
and
adc
mov
stc
xor
dec
add
add
adc
or
in
add
mov
gs
inc
cmc
shl
nop
jne
cmp
pushf
add
out
ss
fwait
sub
or
int
cli
adc
mov
dec
add
or
in
imul
xchg
xchg
pop
jnp
(bad)
adc
inc
cs
or
ss
and
je
or
xchg
sar
add
imul
push
mov
cmp
pop
jne
imul
adc
inc
inc
mov
shl
sub
fldz
call
aad
lds
daa
sbb
push
arpl
in
jl
sbb
dec
sub
dec
loop
mov
add
adc
or
sub
inc
rcl
dec
mov
jmp
inc
jo
sbb
dec
outs
not
not
setae
xchg
pop
add
jmp
cwde
inc
aad
mov
pop
test
jb
push
inc
sub
ret
dec
test
(bad)
loopne
add
jbe
or
add
jl
add
movs
ss
les
js
jmp
xor
mov
push
inc
add
adc
ins
(bad)
adc
mov
mov
jne
mov
lea
mov
loopne
cmp
mov
dec
fimul
xor
mov
es
and
outs
nop
cmp
add
loop
out
add
add
mov
jb
xchg
nop
sub
mov
add
push
inc
mov
push
pop
push
or
cs
push
test
jl
repnz
push
add
mov
push
or
mov
sub
add
pop
nop
add
cmp
jne
push
lea
push
push
or
or
or
add
icebp
mov
and
ds
mov
push
push
aam
lds
pop
(bad)
push
pop
icebp
or
add
adc
outs
xor
jbe
jl
sbb
dec
adc
jge
pop
xor
mov
rcl
adc
sub
push
push
xor
shl
enter
arpl
call
xchg
xchg
je
mov
jmp
add
aam
push
and
(bad)
push
cmp
ret
mov
mov
pop
je
cmp
mov
xor
pushf
jecxz
sbb
sbb
xor
fs
dec
dec
add
or
and
pop
cs
jmp
jg
jge
sub
push
xor
or
dec
cmp
adc
aaa
imul
jmp
inc
add
push
and
sahf
retf
add
xor
sar
popf
ja
test
nop
lock
add
enter
push
cmps
add
in
jle
out
or
xor
std
xchg
push
mov
add
inc
test
fdiv
mov
leave
and
add
cmps
mov
popa
and
cdq
or
je
cmp
dec
fwait
mov
mov
inc
neg
sbb
sti
pop
mov
lock
ret
daa
xor
or
jne
pop
arpl
es
push
mov
add
mov
lahf
push
stos
jmp
xor
inc
mov
or
or
mov
lods
or
mov
ja
jbe
push
add
adc
push
mov
sbb
push
add
sbb
les
jecxz
and
in
cld
mov
jno
jbe
add
adc
cld
add
mov
shrd
push
jle
loop
outs
mov
jge
or
sar
jl
cmps
stos
jge
push
inc
xor
inc
or
pop
add
add
dec
jmp
cli
adc
inc
push
or
mov
jo
cmp
test
xor
inc
call
test
test
push
push
xor
fdivr
inc
adc
adc
ret
mov
fsub
pop
and
sub
lea
pop
sbb
js
jg
jb
push
sub
mov
or
fidivr
ror
mov
pop
inc
shl
fsubr
push
jns
add
(bad)
sbb
adc
shl
or
push
jg
lods
jb
xlat
(bad)
mov
dec
inc
dec
pop
(bad)
dec
sahf
sub
jb
or
ror
out
sbb
add
nop
and
test
mov
sub
or
popa
xor
(bad)
cmp
je
int
fst
adc
div
inc
add
cmc
loop
jge
(bad)
or
or
mov
and
sub
push
scas
add
push
xor
cmp
or
inc
mov
and
add
in
pop
jge
mov
pusha
scas
and
mov
stos
mov
mov
push
mov
add
or
ins
xor
into
mov
and
adc
jo
je
or
xor
or
shl
rol
jne
cmp
test
push
and
or
or
lea
add
es
mov
aam
enter
push
ins
leavew
je
push
jmp
ins
cmp
loope
ret
cld
jl
test
js
icebp
and
mov
inc
stos
stc
mov
nop
or
(bad)
loopne
push
mov
sbb
push
sbb
vmwrite
jge
std
add
pop
or
pop
jne
cmp
jbe
out
and
cmp
xor
push
pusha
mov
sbb
cmp
push
popa
and
pop
dec
enter
sbb
stos
aaa
mov
inc
pusha
inc
loopne
nop
adc
fld
pop
mov
inc
add
adc
xor
add
call
jne
fmul
repnz
clc
fstp
or
mov
cmps
leave
push
push
cmp
enter
ds
rol
adc
retf
add
and
int3
inc
jg
les
adc
ret
pop
rol
pop
sbb
lea
jmp
cmp
lea
or
ror
mov
push
shr
add
or
and
fild
mul
pop
fcmovb
jmp
shr
or
mov
mov
mov
test
or
bound
scas
push
cmp
mov
sti
in
aam
adc
xor
sbb
cmp
in
inc
or
add
(bad)
int3
cld
push
fucomip
inc
xor
fnstcw
inc
test
add
mov
add
ja
jb
dec
test
movs
push
mov
jo
ror
fimul
jb
scas
jb
add
jp
adc
cmp
adc
nop
add
sbb
or
imul
adc
sub
rol
dec
rol
sub
test
adc
rol
loope
push
cmp
ficom
mov
adc
iret
sbb
je
and
je
sub
test
add
aas
(bad)
mov
stos
imul
or
data16
jo
test
test
adc
aaa
add
call
es
loopne
adc
nop
xor
cmp
fs
(bad)
mov
push
add
jo
sub
jmp
push
adc
or
and
loop
push
mov
and
sub
add
sahf
iret
das
js
mov
jo
lods
mov
push
push
mov
cs
data16
int3
and
mov
mov
or
pop
cmp
clc
xor
xchg
enter
add
(bad)
jb
arpl
lock
sub
sub
mov
stc
or
data16
mov
(bad)
jbe
lea
and
add
call
xor
or
jo
or
add
inc
cwde
(bad)
daa
and
call
sub
ds
shl
push
cli
popa
xchg
int3
(bad)
imul
pop
icebp
push
aaa
test
arpl
inc
mov
movs
sub
and
jmp
popa
and
ja
or
push
(bad)
sub
nop
out
pop
inc
and
pusha
call
push
add
ss
push
add
lods
mov
or
inc
in
paddq
sti
jbe
push
push
pusha
ss
or
or
sbb
fsub
push
jb
mov
push
int3
(bad)
cmp
sbb
inc
inc
xor
pop
clc
push
or
cmps
push
add
or
push
dec
int3
sub
int3
fsubr
sahf
xchg
imul
mov
call
je
pop
adc
pop
jl
(bad)
in
jae
and
inc
sar
in
test
daa
sub
inc
cmp
jle
cmp
ret
push
lea
(bad)
je
cmp
xchg
cmp
inc
ret
pusha
ret
aas
jo
in
jmp
stos
leave
(bad)
xor
mov
jge
lock
sub
push
jle
pop
or
ret
fst
popf
pop
jg
pop
iret
in
mov
rcr
inc
adc
imul
push
xor
ficomp
adc
je
xor
ja
inc
mov
sub
inc
jmp
mov
or
out
dec
mov
or
inc
movs
inc
rcr
inc
nop
nop
jmp
gs
inc
inc
mov
js
adc
jb
dec
mov
ins
adc
xchg
int3
adc
add
repnz
(bad)
jecxz
jmp
and
add
dec
adc
cli
add
cmp
add
add
dec
call
xchg
pop
and
hlt
or
pop
je
dec
je
pusha
or
mov
dec
jo
cmps
movs
sbb
add
out
dec
enter
cmp
ret
(bad)
push
aam
push
sub
dec
inc
jne
cmp
or
inc
xor
sub
or
fimul
out
jmp
adc
or
sub
mov
aaa
add
adc
mov
nop
pop
pop
jg
je
sbb
sbb
adc
cld
pop
jns
stos
mov
or
or
push
fisub
add
iret
fimul
mov
dec
add
pusha
cmp
pusha
punpckhwd
retf
cdq
hlt
add
push
adc
jo
pop
aaa
add
xor
inc
je
adc
add
fadd
mov
add
add
jge
test
adc
out
popa
aas
or
adc
add
dec
xchg
sub
stos
dec
je
pop
ds
cmp
push
cwde
arpl
adc
stos
sub
jecxz
fst
add
ins
push
mov
sub
ja
push
je
and
shr
jno
mov
out
loopne
jo
frstor
pushf
push
movs
rdmsr
dec
(bad)
push
and
fld
or
pop
rol
aaa
mov
adc
dec
dec
(bad)
or
adc
pop
sbb
mov
retf
mov
movs
pop
mov
or
leave
add
cmp
std
fwait
add
mov
and
or
sub
popf
adc
loopne
inc
add
add
add
call
jle
cmp
mov
adc
xor
and
pusha
push
sbb
sbb
call
popf
lea
fs
cmp
xor
mov
fidivr
and
hlt
add
movs
pop
out
or
sbb
pop
inc
adc
sub
and
imul
add
movs
in
xor
or
sbb
jne
jmp
fld
add
or
add
sahf
jle
sahf
inc
sbb
mov
push
test
(bad)
and
sbb
mov
jae
pushf
xchg
xchg
mov
cs
rcl
ja
inc
test
int3
in
lds
push
jbe
or
xor
mov
ins
retf
xchg
add
push
xlat
stos
lahf
jno
add
or
mov
stos
push
je
push
and
call
ret
ss
xor
js
clc
je
inc
xchg
mov
jge
out
mov
fisttp
mov
dec
rol
adc
push
push
call
add
pop
movs
inc
sub
or
pop
pop
pushf
loopne
xchg
gs
push
mov
sbb
sbb
lahf
(bad)
and
and
sub
pop
cwde
punpckhwd
add
cdq
cmp
daa
inc
inc
inc
sub
push
in
add
jg
clc
cmp
jg
mov
enter
inc
sti
and
or
dec
inc
inc
dec
dec
add
scas
aad
inc
xchg
shl
and
or
mov
std
adc
push
ret
sbb
sbb
push
lods
inc
test
jge
inc
jne
jne
iret
stos
jl
mov
pop
lods
and
add
cwde
mov
shr
iret
dec
out
sti
jp
test
into
dec
pusha
sub
in
dec
sub
and
bound
test
jge
cmp
adc
pop
mov
and
sub
ror
out
or
(bad)
dec
pop
adc
out
and
aad
call
xchg
add
jl
push
loope
xor
xchg
adc
push
pop
add
pop
test
in
sub
loopne
sub
stos
pop
inc
xchg
stos
and
punpckhdq
adc
mov
loopne
or
dec
sub
push
mov
call
jo
call
sbb
out
aaa
xor
dec
cld
test
fucomi
mov
push
push
and
stos
dec
xor
daa
jmp
and
scas
adc
push
push
lock
pushf
iret
push
lea
mov
test
push
ins
outs
or
cmp
xchg
or
ret
adc
loope
test
jl
sti
test
rol
pop
inc
mov
adc
popa
shl
jns
push
push
jg
cs
cmp
mov
push
or
add
pop
inc
sbb
dec
push
mov
les
inc
adc
inc
js
or
push
xchg
lods
mov
out
pop
pop
cli
in
push
ret
mov
push
inc
sbb
or
outs
rol
and
mov
push
lea
je
dec
sbb
xor
rol
dec
sbb
adc
mov
push
dec
test
sub
push
xor
push
sbb
or
dec
jmp
xor
xor
mov
or
je
mov
test
sar
sbb
rcr
sub
jecxz
pop
mov
leave
add
sub
rol
or
xor
sbb
mov
or
dec
and
sub
or
xor
jb
jecxz
movs
test
adc
bnd
pop
adc
pop
es
and
cmp
jno
loopne
sbb
jbe
cs
cmp
push
mov
pusha
pop
mov
mov
pop
das
xlat
cmp
and
sbb
jbe
hlt
cmp
jne
push
inc
dec
adc
scas
xchg
jg
pop
out
rol
xchg
sar
jmp
sub
sub
mov
mov
inc
sbb
lea
inc
cmp
and
cmp
pop
sub
adc
(bad)
push
mov
jmp
pop
sbb
imul
adc
push
sub
leave
jae
xor
dec
out
cmps
cmc
int3
mov
push
cmp
adc
and
push
sub
xchg
sbb
shl
xchg
mov
dec
movs
cdq
push
imul
js
jne
dec
sbb
push
scas
shl
repz
sub
mov
jo
or
mov
adc
adc
cmp
or
add
sar
cld
outs
pushf
pop
out
push
jmp
mov
cld
xor
inc
add
jo
hlt
mov
jnp
mov
sbb
stos
xchg
out
js
sbb
test
mov
call
push
or
mov
xchg
sub
aam
add
add
sbb
or
xchg
push
xlat
xor
adc
cli
pop
xor
and
jmp
mov
ret
pop
les
lock
xor
xor
mov
xor
and
dec
mov
push
dec
jle
hlt
sub
retf
mov
and
sub
dec
sbb
push
inc
pop
es
adc
popf
pop
int3
inc
cmp
inc
dec
cmps
out
or
shr
push
rcr
bound
cpuid
push
pop
vaddpd
adc
mov
ror
push
sub
or
retf
call
add
retf
mov
lea
push
dec
dec
inc
lds
or
mov
int
push
fsub
bound
iret
sub
ret
jmp
or
cld
fisttp
or
mov
or
sbb
fdivr
fs
pop
or
shl
scas
imul
add
pop
or
mov
mov
pop
inc
sub
xor
jmp
inc
xchg
jne
(bad)
fsub
popa
pop
mov
push
arpl
push
jl
ss
into
jne
xor
icebp
add
arpl
jmp
div
fcomp
add
call
or
nop
into
inc
ins
in
add
sub
cmps
je
iret
jns
out
(bad)
adc
mov
or
fidiv
pop
mov
jle
and
sbb
ds
cli
xchg
add
jle
mov
cmp
jmp
ss
hlt
mov
mov
pusha
push
and
xchg
jl
cmp
jl
xor
jmp
je
inc
cmp
adc
pop
push
pop
inc
xchg
adc
xchg
push
leave
stos
adc
(bad)
arpl
mov
push
push
mov
push
wrmsr
cmp
and
push
cmp
test
adc
pop
xchg
mov
imul
jbe
pusha
mov
and
pop
inc
scas
inc
mov
jne
ror
xor
push
inc
mov
mov
mov
stc
inc
adc
or
shl
inc
mov
fld
rcr
add
add
add
push
add
mov
or
cmp
mov
shl
or
add
pop
pop
pop
pop
pop
push
push
adc
sub
cld
movs
movs
movs
xor
and
or
rcl
js
popa
pop
(bad)
(bad)
mov
movsx
xchg
push
pop
or
(bad)
and
fsub
jne
or
sbb
push
lock
aas
push
xor
xor
inc
adc
add
enter
jne
add
add
sbb
retf
xchg
mov
and
and
ins
inc
mov
pop
add
in
test
and
pushf
sbb
jmp
push
neg
or
div
or
jb
add
rol
xchg
pop
xlat
dec
add
shr
test
out
or
add
aad
add
daa
inc
push
push
in
dec
popf
fs
cmp
add
adc
lods
adc
jmp
push
inc
jg
pop
and
jge
leave
daa
add
push
mov
nop
dec
fs
mov
movzx
inc
call
test
je
adc
loopne
add
add
mov
data16
dec
inc
ss
cmp
push
cli
pop
and
cmp
je
cmp
fnsave
xor
shr
inc
or
dec
add
xor
outs
jne
inc
lds
dec
cmp
(bad)
push
push
mov
retf
sub
jmp
(bad)
adc
ss
sub
cmp
stc
fbld
cs
and
adc
sbb
hlt
mov
jb
daa
movs
cmp
jbe
sahf
add
and
mov
pop
pop
adc
fstp
cmc
mov
lahf
sub
sbb
xor
inc
pop
and
retf
pop
test
add
cmp
inc
xchg
loopne
scas
and
inc
sbb
xchg
mov
or
and
in
lock
cli
popa
mov
pop
mov
clc
in
jno
pop
inc
rcr
enter
mov
test
jno
(bad)
je
sbb
js
ja
cmp
xchg
xchg
shr
retf
cld
(bad)
enter
movs
or
mov
adc
lea
cs
movs
jb
mov
dec
and
cld
jmp
xor
push
jg
and
mov
arpl
test
xchg
loopne
add
pop
and
cmp
imul
test
jmp
cmp
jg
jl
jae
push
or
outs
lea
loop
repz
or
sbb
lea
sub
inc
cwde
xchg
push
dec
stos
test
out
mov
push
pop
ins
push
and
adc
in
call
fnstcw
adc
jne
retf
adc
mov
pop
xor
pop
pusha
cmps
ja
test
gs
int
inc
shr
sti
cmp
jbe
jns
aas
mov
sub
adc
and
inc
jns
in
mov
daa
push
or
push
push
or
sbb
rcr
les
(bad)
fsub
(bad)
pop
xchg
sub
pop
push
xchg
mov
xchg
mov
xchg
pop
pop
or
ror
arpl
jmp
push
fsubp
(bad)
mov
push
push
xchg
or
inc
xor
push
dec
inc
ss
sub
or
adc
test
ret
jbe
mov
jne
ja
jmp
inc
jmp
call
add
leave
je
pop
rol
mov
mov
jmp
es
mov
je
repnz
das
xchg
cmp
jb
cmp
ja
add
cmp
adc
jo
and
(bad)
cmp
xor
adc
mov
cmps
adc
mov
fbstp
idiv
fcom
dec
leave
leave
jl
dec
sbb
lods
mov
cdq
mov
outs
push
adc
imul
add
movs
and
imul
pushf
sbb
outs
or
lods
mov
cmp
adc
inc
cmp
or
push
jne
inc
jmp
mov
sub
(bad)
call
sub
mov
sub
cmp
ja
push
pop
dec
jmp
gs
fnstsw
add
dec
sbb
add
in
dec
dec
mov
jmp
out
cld
xchg
popa
or
push
jmp
not
test
jbe
mov
jne
xchg
sub
sbb
cmp
inc
sub
xchg
idiv
cmp
push
xor
(bad)
gs
ja
dec
je
bound
push
sub
push
cmps
push
inc
xchg
lods
out
push
push
xor
loopne
data16
push
jmp
xor
sub
sbb
loopne
jecxz
popa
mov
inc
pop
xor
push
pop
jge
(bad)
pop
cmp
fucomp
sahf
mov
nop
add
jne
repnz
push
jae
imul
sbb
in
cmp
gs
fs
outs
loopne
(bad)
pop
xchg
add
ret
in
mov
adc
and
cmp
mov
jg
bound
or
popa
in
and
adc
test
stc
sub
cmp
mov
jo
test
mov
add
ret
je
test
jb
rcl
push
xchg
fisubr
mov
dec
jecxz
stc
jmp
jne
cli
and
jmp
or
lock
std
mov
push
(bad)
jecxz
pushf
jmp
push
shl
test
pop
mov
or
mov
aas
pushf
inc
enter
movs
adc
inc
xor
and
leave
addr16
addr16
push
(bad)
jmp
(bad)
fild
cwde
mov
pushf
movs
mov
xchg
xchg
movs
mov
mov
xchg
(bad)
dec
movs
pushf
cmp
jmp
dec
sbb
clc
fbld
mov
add
dec
mov
mov
add
adc
dec
jb
movs
fcomp
jae
imul
jl
je
rcl
out
lock
sbb
push
add
jge
mov
lock
xor
mov
retf
enter
repz
inc
loop
inc
ror
push
rcl
ror
repz
aam
(bad)
xlat
fcomp
jmp
ins
ds
fstp
xchg
mov
inc
loopne
nop
retf
inc
add
dec
retf
mov
lock
fisubr
test
(bad)
xor
dec
cli
push
xchg
jb
add
popa
fsub
ficom
mov
add
push
mov
push
add
ins
ja
add
sub
mov
test
mov
maskmovq
test
jmp
icebp
adc
fisttp
into
cmp
das
or
push
fisttp
pop
test
call
sub
add
fsubr
push
xchg
pop
rcr
ret
imul
pop
lds
sub
mov
or
bound
sar
cmp
or
adc
mov
neg
xor
rol
push
mov
sub
aam
out
loop
fiadd
sbb
mov
mov
ja
test
adc
mov
imul
addr16
rcl
shl
pop
jo
mov
xchg
add
cwde
or
nop
dec
lock
or
ss
add
hlt
pop
jmp
mov
ja
add
and
mov
pop
(bad)
fiadd
pop
loopne
xchg
jae
and
dec
xchg
or
mov
cmp
push
ins
mov
test
in
jmp
cld
mov
inc
or
cmp
mov
mov
jne
inc
hlt
stos
rol
dec
or
inc
or
lea
fadd
test
mov
sub
jl
push
pop
sub
sbb
cmp
pop
sahf
sbb
shl
xchg
inc
push
cwde
cmp
daa
lea
mov
cld
add
mov
cmp
push
jnp
dec
jne
push
in
aad
jg
shl
mov
add
cmp
cwde
and
jmp
ret
ror
mov
or
jg
or
push
rol
test
outs
out
pop
jl
aaa
push
hlt
shr
xor
or
mov
mov
adc
or
dec
lods
dec
jns
test
lock
repnz
repz
push
push
cli
cli
inc
cli
test
jle
repnz
sub
mov
call
stos
aam
sbb
mov
or
mov
xchg
adc
aaa
or
fs
add
shl
xlat
sub
sbb
scas
xchg
retf
shl
mov
mov
xor
cmp
dec
mov
adc
sbb
lock
scas
ror
inc
outs
bound
or
push
push
sub
loop
out
jae
jmp
mul
push
and
xor
xor
jne
inc
jnp
jae
adc
inc
push
cmp
sub
jp
jae
jne
fdivr
aam
inc
xchg
sub
dec
ss
scas
pusha
cmp
jo
dec
lea
or
push
sub
push
sbb
inc
mov
dec
mov
lea
cmp
fnstcw
add
inc
ins
mov
mov
adc
(bad)
popa
not
sub
clc
sbb
test
(bad)
idiv
inc
push
pusha
neg
(bad)
test
sub
nop
inc
push
in
or
jge
test
or
adc
movs
adc
dec
leave
pop
jne
jne
popa
aad
dec
in
in
call
inc
into
cmps
mov
mov
je
cwde
sub
xor
call
inc
add
inc
mov
push
add
inc
sub
int3
push
nop
cmp
call
mov
out
adc
or
dec
cmps
sub
cs
in
shr
pop
daa
and
add
or
test
push
jne
fld
jecxz
sbb
neg
and
and
call
imul
xchg
fdivr
add
lea
push
and
mov
inc
idiv
jecxz
adc
sub
ss
sbb
adc
and
xchg
mov
mov
aad
inc
ror
(bad)
mov
add
sub
mov
les
into
or
lea
sbb
push
mov
xchg
add
enter
mov
sbb
push
shl
add
dec
shl
mov
cmp
and
into
or
or
inc
fmul
lahf
dec
jb
nop
dec
mov
dec
cmp
jge
sub
pop
lock
cmp
in
xor
mov
repnz
in
(bad)
out
add
dec
add
add
fadd
dec
test
pop
add
adc
adc
mov
jne
dec
mov
ja
mov
jb
int
jg
cdq
mov
ret
and
or
ret
add
push
jbe
mov
popa
or
enter
pop
imul
add
div
mov
mov
xchg
clc
mov
push
mov
inc
mov
xchg
call
retf
sbb
dec
or
or
sar
dec
(bad)
xchg
push
or
add
or
xor
cs
ret
add
popa
jnp
test
adc
mov
add
and
movs
add
ret
or
xchg
adc
jbe
mov
or
jae
test
inc
pop
(bad)
mov
mov
mov
iret
xor
into
pusha
inc
sar
lea
ins
rol
pop
and
pop
pop
rcr
pop
cmpps
cmp
add
xor
or
cmps
and
popf
loope
inc
push
pop
jae
or
or
sub
adc
and
and
or
mov
add
clc
adc
outs
inc
or
mov
xchg
pop
and
pop
push
cmp
pminsw
or
dec
pop
dec
jnp
sub
add
adc
xor
sbb
popf
and
and
jmp
mov
rol
cmp
dec
add
mov
imul
pop
nop
and
xor
inc
es
or
inc
stos
add
or
cmp
out
mov
inc
into
and
dec
ss
jge
pop
dec
cmps
out
ss
stmxcsr
cwde
dec
cmp
pop
test
cdq
ss
or
add
or
mov
add
add
jbe
jle
pusha
pop
out
cmp
sub
xor
inc
jg
dec
dec
sahf
retf
into
into
into
mov
pop
and
adc
sar
mov
pop
nop
pop
cwde
pop
mov
pop
push
inc
pop
stos
or
or
ror
and
pushf
add
lahf
add
push
(bad)
ficomp
test
out
pop
call
mov
test
lea
iret
add
add
add
mov
and
xor
jl
ret
je
and
jne
fcom
xor
or
sub
jmp
mov
mov
retf
pushf
pushf
retf
push
xor
xchg
xchg
(bad)
sbb
cmp
scas
xor
push
inc
test
(bad)
mov
inc
dec
and
sbb
add
mov
clc
fcmovb
mov
cmp
add
lods
mov
push
push
outs
shl
push
js
add
push
mov
inc
jge
jle
retw
stos
jne
sbb
push
sbb
xlat
jle
and
daa
xchg
shl
sub
adc
call
loop
jns
pop
jl
xor
or
or
add
imul
lea
jnp
dec
sbb
xor
ds
push
adc
cdq
adc
loopne
or
aas
lea
mov
iret
sbb
push
mov
fcmovne
push
test
lock
ds
je
jle
jmp
mov
ror
mov
jbe
inc
inc
mov
pop
push
outs
pop
sbb
dec
inc
fwait
xor
in
lds
call
push
mov
jo
jbe
or
jmp
test
inc
or
push
or
call
ss
push
movsx
inc
push
and
mov
leave
and
push
mov
jnp
shr
lea
and
loopne
adc
popa
add
xchg
mov
stc
cmp
lea
jmp
sbb
push
xchg
int
sbb
jnp
inc
push
(bad)
in
fwait
aas
test
je
test
popa
fld
and
xor
mov
fnsave
aam
adc
jbe
clc
popf
dec
fcom
popa
jne
mov
jge
jge
mov
and
enter
mov
call
jge
fcom
fmul
dec
jnp
(bad)
dec
xchg
inc
sbb
test
repnz
jmp
jmp
pop
jge
lea
or
mov
lock
ins
mul
pop
push
imul
inc
and
je
pop
outs
and
mov
sbb
aam
cs
pusha
xor
enter
jp
push
mov
dec
add
sbb
sbb
push
mov
push
rcr
jo
cs
rcr
movs
test
jge
adc
jae
jmp
push
push
xlat
lods
push
cli
das
mov
pop
cmp
je
test
xchg
test
add
xchg
loopne
push
call
lock
data16
iret
dec
inc
cmp
jl
inc
stos
push
(bad)
inc
mov
push
inc
add
cmp
lods
test
cmp
or
loopne
push
xchg
jge
add
out
adc
sub
add
add
fsub
outs
dec
inc
pop
xchg
adc
cmps
loope
push
mov
cmp
push
mov
xchg
fadd
xor
and
mov
mov
test
add
jp
mov
and
pusha
jns
movs
xor
push
mov
add
shl
push
clc
add
pop
and
inc
neg
add
mov
jg
sbb
enter
ret
dec
ds
test
hlt
mov
push
add
cdq
cmp
movs
dec
dec
lea
or
dec
jno
int3
sub
aas
in
adc
jl
sub
fs
jbe
lock
dec
mov
jnp
mov
and
je
xchg
pusha
out
fild
dec
loop
mov
fcomp
lea
jl
or
outs
push
sub
and
rcl
daa
dec
dec
std
cld
lea
mov
movs
out
push
popa
xchg
mov
mov
xchg
test
pop
push
das
pusha
adc
mov
dec
mov
mov
in
mov
inc
movs
mov
out
cs
test
dec
hlt
inc
xor
and
outs
leave
sub
sbb
test
xor
sub
sub
xor
sahf
mov
pushf
adc
inc
push
out
outs
add
out
and
push
popa
mov
sub
pop
loop
jne
ret
test
push
inc
xor
jo
inc
cmp
cmc
data16
cli
jle
inc
movzx
aaa
mov
add
sbb
adc
shl
es
loope
mov
adc
and
cmp
jmp
sub
or
ds
push
in
in
call
push
jmp
lea
adc
pop
lea
add
pop
ret
pop
push
adc
add
pop
ror
out
test
adc
iret
pop
and
cmp
jne
and
add
mov
shl
push
ror
js
test
div
retf
ret
icebp
inc
jmp
add
pop
add
xor
stos
jne
and
add
and
adc
int3
jmp
ss
cmp
je
add
add
out
and
sti
jns
adc
xchg
pop
addr16
sbb
inc
(bad)
outs
or
cld
sub
or
(bad)
pop
pop
jmp
fprem
f2xm1
fimul
std
fwait
ins
mov
mov
sbb
icebp
inc
pop
mov
repz
je
fnstcw
sbb
loope
or
fdivrp
fsqrt
push
jmp
out
jmp
(bad)
fistp
rcr
adc
aaa
sti
adc
cmp
fmul
fsubrp
jmp
fisub
enter
repnz
ret
adc
loope
sbb
xor
mov
adc
cli
in
inc
and
push
xchg
fstp
push
add
adc
dec
popa
ror
lea
enter
fsub
dec
add
fcomp
or
sub
jg
inc
xchg
push
pusha
push
(bad)
lahf
add
jl
dec
sub
addr16
sbb
mov
(bad)
cvttps2pi
ret
aaa
adc
cmp
pop
jl
xor
pop
mov
cmp
mov
mov
ins
push
mov
push
sbb
cwde
dec
xor
mov
xor
xor
rcr
xor
push
and
sub
das
fcomp
jbe
mov
inc
in
fstp
jg
jb
jb
fisttp
jge
mov
ins
push
aas
imul
movs
add
cmp
mov
push
repnz
pop
push
pop
test
mov
push
or
inc
mov
sub
ror
ret
push
mov
inc
add
stos
mov
adc
jmp
fadd
iret
test
imul
or
addr16
xchg
xor
pusha
fstp
inc
pop
and
mov
pop
lods
add
jg
mov
or
add
fisttp
or
mov
cli
pushf
outs
fdivr
mov
cld
outs
cmp
jge
mov
lea
mov
outs
retf
repnz
pop
rol
adc
xchg
rcl
jle
sbb
or
addr16
(bad)
(bad)
mov
adc
jmp
mov
cdq
call
or
inc
in
adc
leave
add
inc
adc
push
add
adc
int
or
in
add
das
sbb
mov
adc
dec
add
and
out
mov
sbb
inc
lods
push
cld
and
sub
jbe
push
(bad)
xchg
push
add
xor
xchg
test
pop
in
add
in
pusha
or
sub
sub
pop
or
ror
inc
in
je
movzx
dec
cmp
je
fwait
cmp
sbb
fmul
les
test
sub
or
in
xchg
and
add
sub
jns
dec
add
pushfw
pop
inc
inc
mov
sbb
lahf
shl
leave
rcl
xlat
bound
scas
outs
inc
adc
xchg
aam
loope
push
sbb
xor
icebp
adc
mov
in
inc
ret
add
add
jo
call
sub
clc
push
sbb
inc
fcom
ret
mov
and
(bad)
sti
cmp
dec
jae
aaa
cmp
jb
fbstp
sahf
dec
imul
add
jb
hlt
ja
mov
mov
sbb
in
push
and
xor
mov
cld
sahf
gs
jmp
pop
les
mov
pop
sub
cmp
test
(bad)
and
or
push
inc
jbe
stos
les
push
sub
sbb
test
sar
mov
sub
add
mov
jmp
bswap
mov
cmp
mov
inc
neg
or
icebp
sub
popf
or
scas
je
inc
cmp
adc
sub
rcl
in
(bad)
sbb
cmp
sbb
push
jmp
imul
xor
test
push
xor
sbb
lea
(bad)
aam
dec
fwait
add
arpl
adc
aas
sbb
or
cwde
xchg
mov
cmp
dec
xchg
inc
fcom
jge
fst
mov
ds
inc
and
jmp
xor
addr16
pop
add
mov
outs
movs
mov
inc
inc
cdq
mov
mov
jmp
(bad)
mov
js
out
jne
inc
and
lods
mov
jo
push
ret
loope
dec
and
jo
sbb
loopne
cmp
mov
push
cmp
xor
ret
jbe
icebp
aad
test
and
push
movs
loope
pusha
add
dec
popf
les
leave
je
cmp
dec
cmps
cwde
and
ficom
adc
dec
inc
push
adc
enter
add
ss
jnp
pusha
je
adc
cmp
mov
push
push
sub
in
ins
rcr
ja
xchg
bnd
adc
scas
add
(bad)
or
test
sar
dec
cmp
inc
add
push
xor
imul
es
rol
pop
push
ins
cs
or
imul
test
jl
ds
(bad)
cmp
adc
cmp
jne
data16
ja
je
dec
mov
cwde
pop
pop
mov
jae
inc
pusha
push
pushf
or
jmp
jne
mov
add
js
jne
out
lock
add
add
lea
ret
push
push
mov
and
inc
jmp
in
dec
cmp
adc
add
add
sbb
dec
out
push
and
movs
dec
repnz
js
xchg
sub
cwde
or
(bad)
push
dec
push
jae
push
enter
das
xchg
fild
repz
cmp
mov
or
outs
fld1
sbb
pop
int
mov
cld
lods
daa
and
and
sbb
jle
jp
adc
inc
push
call
mov
inc
cmp
jl
movs
add
adc
dec
push
inc
scas
clc
fild
test
lea
push
add
int3
or
pop
or
pop
cmp
add
xor
or
dec
cmp
jl
push
js
lahf
mov
mov
aad
ret
leave
clc
push
adc
xor
mov
add
popf
and
arpl
xor
sahf
jns
shl
aaa
in
mov
and
je
xor
jns
pop
ret
aas
add
sbb
push
or
cmp
push
dec
dec
sti
dec
or
push
or
push
xor
mov
push
test
aas
jo
dec
outs
mov
jns
push
retf
xor
sub
push
and
xor
adc
inc
daa
ins
sub
inc
(bad)
rcl
sub
aas
add
pop
aam
and
(bad)
jp
xchg
inc
pop
jbe
inc
cmp
mov
movs
test
ja
pusha
sub
mov
scas
loopne
imul
cmp
push
rol
fimul
add
retf
mov
ins
push
cmp
sub
lock
push
fwait
jnp
sar
dec
mov
fsub
pop
xchg
es
cmp
mov
int
push
push
push
mov
adc
sub
cwde
add
and
test
daa
add
call
xor
inc
sub
mov
push
xchg
inc
cs
adc
stos
ss
lods
mov
sub
pop
inc
dec
inc
int
les
cld
call
pop
pusha
adc
adc
retf
add
adc
iret
sub
add
jmp
jl
adc
outs
and
out
inc
jns
or
add
out
adc
pop
daa
and
inc
cld
xchg
rol
push
mov
pusha
jp
cmp
fisttp
retf
lds
mov
jae
or
pop
adc
popf
xchg
xor
pop
jbe
or
xor
xor
popf
and
cmp
bound
sbb
fmul
fdivr
cmps
xor
retf
ficomp
add
mov
test
jg
mov
mov
ss
mov
inc
dec
ins
ins
sbb
sub
outs
sub
cmp
imul
pop
mov
ret
inc
xor
aas
or
jns
and
jo
je
sub
cmp
popf
jbe
xor
inc
sub
aaa
mov
mov
(bad)
push
push
shl
push
ret
jb
and
or
or
div
fisttp
rol
mov
sbb
and
call
ret
mov
jecxz
icebp
call
dec
push
mov
adc
mov
cmp
add
add
sub
cmp
adc
or
adc
lahf
or
hlt
add
or
mov
add
push
push
inc
frstor
adc
jne
and
jae
jnp
push
out
sbb
fadd
pop
or
fsub
adc
cdq
popf
adc
push
dec
dec
fldcw
pop
or
xchg
stos
inc
xor
mov
iret
dec
dec
and
sub
loopne
inc
out
adc
push
sub
test
and
js
(bad)
cmp
gs
repz
mul
pusha
lahf
aad
out
stos
add
cmc
or
sbb
jbe
dec
dec
pop
adc
pop
and
xor
or
movs
and
push
dec
xor
jle
(bad)
(bad)
xchg
mov
xchg
in
pop
push
inc
fstp
dec
les
push
push
fnstenv
jns
loop
dec
xor
rol
xor
sub
inc
add
xor
iret
add
cwde
inc
add
and
or
dec
repnz
push
push
and
adc
pusha
pop
jge
push
es
push
push
push
cmp
pop
fmul
cmp
xchg
ret
pop
or
or
xchg
add
adc
push
test
pop
fisub
mov
and
imul
jbe
aaa
and
dec
adc
jp
clc
add
movs
aam
or
mov
loopne
ja
adc
jne
fs
jmp
cmp
push
enter
and
mov
push
push
inc
jne
add
push
call
sub
in
and
stc
add
ret
sbb
cli
push
aaa
dec
mov
jecxz
jns
ss
add
and
cmp
cmp
imul
jb
add
cmps
mov
jo
xlat
jp
outs
mov
jno
shl
nop
pop
or
scas
sub
je
clc
test
xor
and
sbb
push
push
leave
mov
add
push
test
or
add
sti
or
and
fcmovnb
mov
les
pop
setns
outs
push
jmp
dec
in
add
dec
mov
or
or
or
add
sub
dec
scas
mov
push
dec
or
sbb
adc
mov
je
or
add
and
jl
adc
jecxz
loop
push
or
clc
mov
xlat
sub
(bad)
jle
call
push
xor
mov
cwde
dec
fidivr
add
mov
mov
inc
shr
push
ret
rol
mov
and
js
pop
push
fld
inc
call
push
or
(bad)
(bad)
mov
xchg
mov
mov
or
(bad)
pop
or
add
pop
mov
dec
dec
or
add
shl
inc
xchg
dec
mov
pop
push
pop
jbe
pushw
adc
push
inc
ins
fisubr
xchg
sub
sub
ins
adc
xlat
sbb
or
push
jg
in
jl
sub
bound
sub
in
sbb
inc
bound
sub
ffreep
inc
push
sbb
push
loope
jbe
and
or
inc
xor
add
sbb
inc
lods
mov
lods
(bad)
push
adc
push
sbb
addr16
mov
cmp
mov
std
ret
mov
or
dec
sbb
icebp
mov
mov
push
xor
test
scas
push
fisttp
pop
mov
xlat
or
ss
rol
fst
nop
or
test
dec
je
sbb
dec
adc
pop
jp
call
data16
ficom
mov
mov
cmp
and
lods
or
push
mov
inc
pop
push
sbb
inc
mov
cmc
mov
loopne
push
mov
adc
sahf
mov
cmp
(bad)
cmp
adc
pop
ret
jecxz
or
push
cmc
cwde
clc
xchg
adc
adc
js
adc
daa
test
or
mov
stc
and
idiv
mov
sub
ror
feni(8087
cld
call
or
sub
and
aam
cmps
xchg
enter
cdq
mov
pusha
sub
adc
or
add
cmp
gs
xchg
shl
dec
fbstp
repnz
mov
xchg
sub
lods
adc
std
push
push
sub
test
mov
inc
popa
pop
ja
pop
add
pop
(bad)
mov
or
add
cmp
mov
xchg
dec
add
cmps
cli
adc
or
popa
cld
je
or
add
std
call
mov
(bad)
clc
fstp
or
xor
or
neg
inc
push
mov
loopne
push
cwde
psubq
test
add
repnz
adc
cmc
adc
mov
push
cmp
add
fwait
rol
outs
clc
rcr
mov
mov
outs
(bad)
cmp
pop
jg
lods
mov
xchg
sbb
pop
cdq
jle
inc
and
fsubr
fiadd
mov
xor
mov
sub
jg
xchg
sbb
push
mov
add
push
shr
mov
and
in
xor
dec
add
cmp
repz
jne
sub
jo
dec
inc
aaa
push
dec
add
inc
dec
cmp
shr
out
nop
lock
mov
dec
push
push
push
push
arpl
adc
popa
mov
mov
pop
mov
mov
mov
test
popf
cmp
les
fnsave
xchg
cwde
inc
mov
push
ror
cmp
sahf
mov
mov
pop
mov
mov
call
mov
or
pop
das
adc
loop
daa
mov
sbb
dec
sbb
xchg
sub
mov
adc
jb
add
lea
push
popa
data16
xchg
(bad)
cmps
mov
push
inc
ja
inc
inc
les
mov
js
addr16
movs
and
cdq
xor
adc
rol
arpl
rol
and
push
push
das
loop
aam
add
mov
cs
and
stc
add
xor
pushf
jl
clc
frstor
mov
ret
shl
jnp
sub
or
mov
pop
xchg
jmp
xrelease
fstp
shl
rcr
mov
jne
nop
cwde
jge
adc
jmp
mov
xchg
loopne
jno
mov
js
mov
fisubr
xor
stos
push
jnp
xlat
or
sub
and
sbb
in
push
jne
push
test
jmp
and
xor
pop
push
jmp
xchg
push
rol
and
in
jne
pusha
push
call
cs
test
dec
push
scas
pop
xor
xor
dec
repz
ror
sbb
sub
add
push
or
push
push
add
pusha
adc
das
sub
and
jae
das
popa
xor
test
push
outs
ret
push
lock
je
clc
mov
push
cmp
cmp
je
fld
mov
pop
dec
sub
mov
add
loope
add
xchg
push
sub
lea
push
or
mov
inc
test
jl
sub
div
les
sahf
les
xchg
mov
shl
ret
dec
fsubr
lods
pop
inc
cdq
jmp
test
sub
enter
sub
int
sub
or
jo
xchg
test
push
test
jbe
cmp
btr
pop
push
fmul
call
fcom
in
test
add
je
je
pushf
push
ja
or
inc
adc
mov
clc
sbb
inc
ja
pop
mov
mov
and
push
or
inc
sahf
ja
sbb
adc
and
xchg
inc
pop
mov
push
in
mov
push
and
add
mov
popa
lea
sub
adc
adc
ss
fmul
js
jne
xchg
push
div
mov
push
and
(bad)
push
(bad)
or
add
push
hlt
inc
jg
cdq
adc
jo
push
push
lea
push
push
pusha
add
xchg
pop
mov
pop
ret
adc
fstp
and
push
loop
inc
and
fld
pop
retf
push
je
mov
clc
mov
(bad)
imul
stos
icebp
test
cmp
and
push
(bad)
dec
or
jge
dec
jne
movs
add
xchg
daa
outs
xchg
and
(bad)
and
sbb
jl
aad
enter
imul
or
jmp
or
inc
outs
dec
cmp
jnp
push
cmp
sub
lock
cmp
xor
add
loop
inc
lea
push
push
adc
mov
out
push
(bad)
retf
fdiv
pop
push
ja
popa
(bad)
sbb
mov
out
mov
or
adc
enter
push
sub
sub
fdiv
call
sahf
or
dec
xchg
jb
sub
pop
pop
loopne
mov
cmp
icebp
inc
je
pop
xor
mov
jle
push
fsubr
fadd
pop
inc
jb
daa
ins
sbb
add
popa
pop
add
cmp
fwait
inc
and
sub
leave
inc
imul
pop
(bad)
sbb
push
mov
or
jl
add
and
xor
ins
pop
push
push
cmp
out
inc
pop
push
mov
mov
rol
xchg
jp
push
nop
scas
xor
inc
(bad)
adc
xchg
daa
jp
lahf
xor
xor
sub
nop
cli
cmp
test
mov
test
je
sub
jle
and
dec
arpl
mov
mov
inc
cmp
daa
and
fiadd
inc
xlat
push
arpl
popf
pop
mov
mov
jo
cs
pop
ins
das
adc
xchg
rcl
or
rcr
jo
cmp
repz
ja
js
adc
pop
or
or
push
iret
and
mov
mov
push
push
sahf
xchg
push
and
(bad)
popa
jg
add
dec
mov
push
push
pusha
popa
mov
mov
cmp
mov
pop
imul
xor
pop
bound
add
imul
(bad)
imul
rcr
sbb
adc
retf
add
frstor
out
mov
ins
cmc
push
aaa
mov
add
or
lods
outs
pop
or
mov
adc
pop
dec
ss
mov
push
push
add
push
jns
pop
inc
adc
xlat
enter
into
push
push
push
ins
push
out
and
inc
push
data16
ror
push
dec
jne
int
adc
pusha
fisttp
mov
and
sbb
inc
clc
popa
in
add
xor
fmul
mov
jl
pop
les
mov
push
cmp
xchg
mov
dec
and
movntq
dec
clc
xchg
or
jmp
fwait
xor
(bad)
mov
outs
inc
add
fdivr
add
mov
ss
or
xchg
scas
push
sub
and
outs
and
xor
inc
mov
or
cdq
mov
sbb
add
or
mov
shr
mov
iret
ret
and
mov
sub
pop
sub
fwait
cmp
adc
push
push
push
push
cmp
loopne
xchg
js
inc
mov
sub
nop/reserved
mov
pop
test
enter
pop
cmp
lea
mov
mov
(bad)
lea
sub
cld
pop
add
ins
jne
sub
mov
jns
and
mov
jle
icebp
adc
mov
and
xor
push
mov
cli
push
sbb
ja
sbb
mov
movs
dec
lods
test
aas
(bad)
cmp
in
mov
retf
dec
cmp
sbb
xor
js
fwait
sub
mov
adc
add
adc
bnd
mov
pop
mov
out
mov
ds
out
sbb
test
mov
inc
(bad)
mov
add
sub
lahf
pop
pusha
jns
leave
or
mov
es
push
xlat
add
lahf
inc
inc
ins
xor
prefetch
or
mov
jo
or
push
(bad)
nop
sub
in
push
and
push
push
jle
jbe
cmc
sbb
or
mov
and
adc
sahf
leave
push
add
dec
sbb
cli
in
push
jmp
push
retf
or
or
call
push
push
test
sub
in
cmp
jbe
inc
jb
sbb
adc
sub
adc
data16
retf
xchg
pop
sub
mov
adc
rol
(bad)
and
pop
cmp
add
sub
push
add
dec
out
push
mov
ret
sar
add
push
push
test
adc
mov
fdiv
xchg
cmps
jg
or
shl
dec
pusha
dec
push
clc
stos
punpckhbw
je
mov
call
cmc
cmp
sbb
fwait
or
push
pushf
push
aad
ret
xchg
loope
scas
fadd
sub
call
mov
dec
loop
shl
test
jg
adc
dec
lods
adc
les
inc
mov
mov
xchg
test
bound
(bad)
dec
xchg
pusha
and
xor
pop
push
push
inc
or
xor
push
ret
add
mov
mov
(bad)
mov
or
rcl
(bad)
clc
rep
retf
lea
push
mov
mov
jecxz
test
pop
test
add
xor
xchg
or
adc
mov
mov
mov
mov
stos
adc
push
movs
test
imul
dec
or
(bad)
or
loope
add
push
xor
cmp
jmp
outs
mov
and
(bad)
add
cmps
mov
ds
xchg
dec
pop
adc
es
sbb
jmp
adc
test
xchg
mov
ss
lea
pusha
cmp
fs
ins
stc
or
ret
cmp
push
inc
mov
push
push
and
daa
sub
adc
push
nop
pop
or
fwait
jns
mov
push
cmps
loope
pop
cmp
pcmpeqw
or
dec
push
and
add
xchg
or
es
jg
ret
dec
xor
jno
icebp
add
out
dec
je
shl
mov
pushf
or
dec
(bad)
push
and
jnp
fxch
pop
xor
or
cli
rcl
or
test
push
push
mov
mov
hlt
sub
jg
and
push
enter
jg
add
cmp
imul
dec
inc
nop
test
loope
add
inc
adc
and
sub
in
or
mov
rol
es
pop
cmp
or
push
sub
jl
add
xchg
sub
or
das
scas
ja
add
jmp
adc
test
add
test
push
push
shl
jl
lods
rol
mov
(bad)
adc
sbb
mov
(bad)
sbb
sbb
daa
stc
mov
ror
cdq
in
cmp
test
call
cmp
inc
push
add
pusha
loopne
cld
jl
test
fadd
js
lea
and
repz
mov
mov
add
adc
push
pop
inc
xchg
clc
adc
inc
adc
ja
push
xor
or
loopne
jecxz
loopne
rol
jbe
mov
into
jp
jmp
int
(bad)
mov
mov
jmp
inc
or
add
repz
sbb
sbb
push
dec
cs
inc
or
bound
test
push
sub
push
jns
dec
mov
ja
je
mov
push
and
out
inc
rcr
adc
xchg
jo
jne
rol
shl
pop
and
adc
fucompp
into
dec
test
mov
hlt
punpckhdq
ficomp
and
push
mov
(bad)
cmp
dec
repnz
repz
pop
ror
outs
rol
sbb
push
(bad)
(bad)
cli
aas
test
adc
add
dec
shr
and
dec
sbb
jne
mov
push
movs
fmul
cmp
hlt
inc
xchg
rcl
push
adc
addr16
add
or
fimul
and
(bad)
adc
js
outs
inc
xlat
fs
inc
push
or
jg
mov
lock
movs
or
xor
fcom
or
andnps
mov
cmp
mov
push
ret
stos
lods
ret
jo
dec
adc
repnz
je
ret
adc
or
sbb
loope
dec
dec
mov
clc
sbb
jae
pop
mul
dec
push
jb
sub
cld
mov
dec
or
scas
mov
mov
jp
inc
mov
mov
mov
and
push
cmp
popa
and
(bad)
or
mov
pop
sbb
aaa
push
bound
outs
mov
add
xchg
adc
inc
sub
sahf
add
add
inc
xor
jle
sbb
xor
xor
out
fsubrp
or
sbb
ja
stos
add
stc
int3
xchg
nop
call
(bad)
jb
sbb
cmps
icebp
outs
lds
jnp
sbb
mov
or
call
xor
and
pop
push
ins
inc
iret
leave
repz
adc
sbb
jae
add
clc
test
and
add
loopne
push
ss
lahf
xor
mov
xchg
push
mov
pop
xor
add
add
pop
sub
mov
pusha
enter
lods
inc
(bad)
in
aaa
fcom
add
or
xor
cmps
add
mov
push
aaa
rol
xchg
push
push
xor
push
std
dec
or
fnstenv
adc
mov
popf
cli
rcr
or
pop
cmp
test
js
ss
outs
(bad)
scas
dec
add
xlat
add
imul
dec
sti
adc
cmps
test
adc
cmp
adc
(bad)
xchg
(bad)
sahf
add
push
mov
rcr
inc
add
pop
or
mov
inc
fstp
add
test
and
add
mov
mov
mov
daa
mov
jecxz
ins
cmps
scas
rol
icebp
fbstp
sbb
jne
jb
outs
dec
retf
aam
add
sbb
in
ins
cmp
(bad)
js
push
and
push
and
cmps
sub
dec
push
dec
push
push
adc
pop
mov
xchg
mov
add
adc
jno
test
cdq
nop
xchg
mov
and
mov
lahf
or
fadd
dec
xor
mov
imul
out
sbb
pop
inc
loope
jp
fs
mov
pop
or
jae
mov
jle
mov
loopne
lock
sti
clc
push
cli
add
inc
jl
sbb
jo
sahf
push
inc
pop
ja
add
sbb
dec
sahf
pop
and
push
or
fcom
or
enter
inc
push
frstor
(bad)
cmp
ins
or
dec
or
lea
je
push
dec
(bad)
xchg
push
inc
mov
orps
xor
ins
adc
xor
or
sti
sub
xchg
fild
test
pop
jb
jne
pop
dec
push
sub
jo
out
imul
repz
and
ins
aaa
jne
leave
mov
loopne
xchg
add
add
data16
mov
cmp
(bad)
cmp
sti
sub
mov
inc
inc
call
push
add
push
fstp
dec
dec
cmp
mov
add
push
scas
sub
clc
xor
icebp
rol
outs
and
popa
and
add
call
icebp
and
pop
in
and
repnz
pop
mov
add
sbb
in
xor
cs
add
dec
enter
sbb
shr
xchg
pop
(bad)
in
or
pusha
test
test
mov
call
icebp
test
sbb
sbb
push
push
push
mov
and
hlt
ret
dec
add
cmp
push
loop
leave
retf
xor
test
cmc
packuswb
cmp
push
pop
loop
cmp
push
xor
pushf
add
xor
mov
addr16
mov
outs
inc
or
jge
xchg
out
(bad)
in
push
push
xchg
dec
(bad)
sub
push
cmp
imul
imul
xchg
jo
inc
arpl
rol
fdiv
inc
jle
sbb
mov
retf
call
mov
add
and
test
sbb
push
movs
out
mov
adc
retf
rol
mov
mov
clc
and
mov
cmc
pop
or
jb
mov
cmps
pop
dec
je
sbb
jl
ret
push
inc
xchg
xor
lods
(bad)
mov
dec
mov
addr16
scas
mov
pop
(bad)
into
add
jg
cmp
jle
cld
xor
pop
add
push
outs
lock
mov
mov
xor
jg
jb
std
sbb
add
arpl
sub
adc
int3
or
mov
or
imul
movs
push
dec
in
add
inc
or
in
adc
pusha
sar
stc
jbe
cs
in
and
mov
in
in
push
sbb
push
int
test
inc
push
fadd
xor
dec
jl
jb
mov
xchg
js
es
sbb
out
jne
test
je
dec
rcr
add
push
inc
or
rcr
xor
add
adc
add
cmp
adc
dec
icebp
jne
xor
movs
add
pop
ret
fs
and
cmp
or
xchg
add
push
push
xor
mov
xor
popf
out
gs
and
js
clc
(bad)
loop
add
cmp
xchg
enter
mov
test
std
dec
inc
mov
ss
mov
sbb
lods
aad
push
lods
sahf
dec
mov
and
lea
call
ja
dec
arpl
in
pop
add
dec
lods
and
lea
ficom
iret
ficomp
fbld
fstp
sbb
jp
cmp
sbb
daa
(bad)
aam
movs
ret
pop
push
jecxz
imul
lea
in
ja
push
xorps
xchg
jnp
mov
retf
or
jp
fistp
adc
pusha
cmp
sub
mov
neg
pop
scas
cmp
and
(bad)
inc
mov
push
das
lea
push
and
and
cwde
inc
jmp
dec
cmps
push
inc
xchg
cmp
cs
je
xchg
mov
push
cmp
clc
mov
outs
xchg
mov
push
outs
imul
mov
push
popa
jo
or
push
je
dec
fld
cmp
(bad)
into
lods
xadd
rcr
sub
or
adc
lods
out
repnz
les
cmp
pop
dec
cld
add
adc
mov
push
adc
xor
inc
sub
es
push
jae
iret
fild
ins
idiv
or
push
and
fidivr
xor
or
fadd
out
setb
and
adc
mov
in
fnstenv
cmp
adc
popf
adc
push
mov
push
mov
cmp
adc
push
inc
nop
adc
mov
push
gs
add
cli
cmp
ss
adc
imul
sub
inc
stc
pop
lock
sbb
and
add
jecxz
xchg
inc
lea
addr16
dec
push
cmp
or
xor
sahf
xor
into
arpl
rol
dec
mov
or
gs
out
dec
adc
ret
mov
rol
mov
xor
(bad)
ficom
push
inc
or
xchg
push
fwait
add
add
dec
add
push
xchg
lods
hlt
les
shl
push
or
mov
and
cmp
cwde
popa
repz
loope
pop
or
lds
add
mov
test
add
pusha
or
inc
pop
xchg
leave
xor
cmp
aas
nop
imul
add
sbb
dec
xor
cs
lods
jp
push
inc
and
cwde
cmp
mov
stos
shl
rcr
add
ds
push
in
sub
nop
push
push
push
mov
push
inc
dec
push
pop
mov
enter
sbb
push
neg
adc
inc
push
adc
or
sub
adc
cmp
sbb
sbb
(bad)
(bad)
stc
push
adc
into
cmp
ret
jnp
stos
inc
test
(bad)
loopne
pop
inc
xor
pop
push
or
ret
lods
imul
mov
ret
mov
and
lea
sbb
arpl
data16
xor
scas
pop
add
mov
fimul
push
int
leave
mov
femms
bound
push
dec
repz
inc
push
in
enter
jb
push
push
xchg
lds
adc
add
xchg
out
fs
cmp
enter
add
fiadd
cmps
div
ss
mov
and
lds
push
nop
push
fldenv
iret
or
mov
rcr
out
cmp
cmc
cmp
xchg
enter
lock
and
adc
add
push
lea
daa
pop
xchg
aad
cld
ins
enter
ret
mov
fimul
pop
xor
adc
cmp
inc
mov
add
xor
scas
sub
xor
fwait
retf
sbb
sbb
(bad)
jns
dec
sub
sbb
enter
lds
out
sbb
(bad)
(bad)
dec
inc
add
mov
add
pusha
jbe
mov
or
add
enter
or
sbb
add
add
movs
(bad)
sbb
test
jnp
sub
cmp
add
les
bnd
mov
mov
add
dec
cmp
add
pop
and
in
stc
xchg
push
xchg
sub
out
cmp
sbb
loope
inc
cmp
es
fiadd
cli
adc
neg
jge
call
mov
add
xchg
fnsave
and
enter
out
xchg
or
cmps
lock
jecxz
ret
add
in
inc
sbb
movs
jge
enter
daa
stc
xchg
or
adc
clc
sub
mov
mov
fld
sbb
out
into
and
sub
test
jns
out
dec
and
jge
jg
repz
enter
sub
cmovnp
ror
inc
xlat
jmp
shr
or
cli
es
push
(bad)
push
leave
jne
aaa
ss
and
(bad)
inc
loop
or
inc
xor
addr16
fnstsw
mov
mov
pushf
sub
(bad)
scas
inc
or
add
call
inc
scas
sbb
xchg
test
cmp
xchg
mov
jb
add
xchg
add
add
leave
icebp
(bad)
sub
pop
adc
or
and
mov
push
push
mov
pop
or
stc
and
add
or
lds
sub
bt
inc
mov
inc
ret
(bad)
gs
out
push
inc
xor
add
sbb
pop
xchg
add
push
xor
inc
push
mov
out
pop
xchg
stos
(bad)
lahf
test
aad
push
cmps
xchg
inc
fld
push
push
(bad)
mov
mov
mov
mov
das
adc
mov
out
add
vmwrite
jl
ins
mov
xor
xchg
inc
popa
add
repnz
dec
adc
shl
inc
inc
pop
push
out
mov
mov
xchg
aas
out
xchg
pop
inc
or
lods
xchg
sbb
pop
fs
popa
sub
jne
mov
(bad)
or
scas
xor
pop
add
mov
push
inc
pop
or
test
xor
push
push
test
lahf
fst
or
add
dec
mov
cmp
cmp
sub
into
loope
lds
push
dec
lds
pushf
in
push
cwde
push
jge
imul
xlat
rol
mov
pusha
and
push
push
push
popf
ror
popf
and
fimul
mov
cmp
mov
sub
sbb
xor
inc
xchg
lea
sti
fcomp
fs
les
and
or
pop
cdq
sub
xchg
retf
addr16
mov
and
jo
sub
cdq
mov
(bad)
les
xor
xor
cmp
cmps
cmp
shl
cmp
pop
xor
gs
pushf
ret
loopne
gs
lods
jmp
and
out
stos
inc
(bad)
div
das
fs
pop
pop
and
rcr
das
mov
call
dec
call
fdivr
sub
test
add
add
add
fwait
and
nop
xchg
popf
inc
add
inc
add
jl
ja
sbb
push
sbb
imul
mov
data16
mov
movs
dec
(bad)
fsub
mov
jns
cmps
dec
pop
and
cmps
inc
idiv
gs
push
mov
loopne
into
fucom
jns
and
push
jne
scas
push
loop
and
rol
adc
push
xchg
out
mov
adc
imul
sahf
add
movs
xchg
and
dec
or
mov
stos
adc
add
mov
dec
xor
mov
inc
inc
add
mov
pop
jo
aas
xchg
popa
iret
and
jae
or
movhps
or
adc
sub
mov
dec
pop
adc
cmp
mov
push
add
adc
test
sub
xchg
mov
gs
pop
sub
pop
sub
lock
push
push
push
sbb
jo
or
sub
cmp
add
(bad)
cmps
mov
adc
push
shl
int3
fsub
gs
push
inc
sub
or
stos
and
frstor
inc
rcl
sub
or
lahf
aas
or
and
or
int3
add
lea
adc
(bad)
jnp
loop
sar
push
ror
pushf
sub
lock
mov
or
sub
push
xor
pop
xor
or
ret
inc
jne
mov
ret
jmp
mov
dec
sbb
jne
sbb
or
xchg
push
jbe
or
dec
add
and
les
popf
add
or
add
or
stos
pop
push
inc
cs
dec
xor
push
cmp
shl
popa
and
inc
inc
mov
hlt
std
sbb
xchg
add
nop
add
punpckhwd
mov
daa
ja
imul
or
or
shr
cmps
shl
inc
sbb
jmp
cmp
stos
dec
inc
mov
mov
cld
mov
test
pop
sahf
mov
ins
retf
xchg
mov
sbb
shl
(bad)
loopne
fimul
lahf
cmp
pop
mov
or
sbb
xor
cli
xchg
ficom
fwait
xor
dec
sbb
test
std
mov
sub
jg
push
mov
push
xchg
stos
and
xchg
mov
add
or
or
popa
mov
inc
add
fcom
push
inc
or
push
dec
into
rol
jns
pop
stos
test
mov
mov
popf
clc
dec
repnz
aas
movs
pop
ret
sahf
sub
ret
inc
fcom
jecxz
sbb
sbb
and
test
pop
xor
add
or
cmp
sti
jmp
push
ja
fld
pushw
push
es
sub
or
mov
push
sbb
xor
sbb
fdivr
inc
outs
aaa
stc
lahf
outs
rcl
outs
cmp
lods
dec
and
outs
cdq
sub
sub
mov
cdq
fwait
mov
shr
adc
cmc
lds
stos
adc
pop
dec
adc
jp
int
push
movs
xchg
sbb
xlat
cdq
loope
and
and
lea
adc
jp
push
mov
and
inc
push
add
cmp
xor
sub
das
inc
scas
mov
inc
ror
push
pop
inc
hlt
push
pop
xchg
cli
mov
(bad)
jne
pushf
cmps
adc
sar
pop
and
cmp
repnz
scas
mov
xor
leave
retf
add
pushf
popf
add
cmps
inc
pop
popf
add
seto
popf
add
mov
cmps
mov
push
jb
add
adc
and
pop
stos
in
add
push
scas
mov
test
xor
push
sar
das
dec
popa
mov
add
loopne
aas
sub
sbb
fs
push
xchg
ja
mov
xor
rcl
test
out
mov
and
mov
loope
xlat
push
mov
or
sahf
out
xor
sub
mov
repz
adc
test
and
sub
adc
inc
add
adc
rol
jge
mov
dec
pop
push
jno
addr16
pop
jecxz
jbe
cmp
push
push
mov
or
mov
xor
repnz
push
test
inc
mov
fwait
sub
data16
or
ins
imul
enter
test
pop
adc
test
ja
int
(bad)
bnd
or
jmp
add
mov
add
scas
push
sub
ds
dec
cmps
cmps
stc
cmp
lea
push
call
push
out
cmp
sbb
shr
lock
mov
inc
sub
pop
les
retf
or
inc
psraw
imul
movs
test
(bad)
mov
adc
push
sub
push
pop
xchg
cmp
in
jle
(bad)
jbe
cmp
je
sbb
cmp
add
xor
jnp
lock
inc
sub
xor
sti
call
mov
mov
xor
or
jns
mov
cmp
popa
jno
test
dec
or
xor
mov
es
mov
mov
dec
xchg
xor
inc
test
dec
or
push
cmp
imul
out
push
movs
dec
mov
dec
les
inc
mov
fisubr
pusha
adc
xor
adc
inc
xor
pop
xor
rol
pop
idiv
inc
fst
pop
fs
imul
not
test
push
and
dec
xchg
sub
nop
cmp
or
or
or
mov
pop
and
lock
push
sub
ins
adc
and
fdivr
shr
cdq
mov
dec
sbb
push
push
je
sti
xchg
add
mov
cmp
pushf
push
mov
adc
std
sub
cmp
pusha
in
add
imul
sti
lock
(bad)
pop
push
sbb
add
sahf
adc
jl
or
scas
mov
dec
mov
mov
test
mov
xor
(bad)
and
push
retf
mov
dec
pop
mov
pop
cdq
test
not
xor
sti
(bad)
mov
das
sbb
add
and
or
repnz
pop
out
jl
pop
sbb
ins
loop
lea
xor
call
(bad)
sub
dec
fcom
mov
push
out
not
jnp
and
cmovae
push
leave
scas
imul
push
push
dec
sub
lods
cmp
hlt
inc
out
inc
fcmovu
jg
mov
aaa
dec
xor
pop
jbe
outs
inc
lock
pop
int
adc
inc
and
pusha
jbe
call
mov
adc
and
test
and
aad
pushf
retf
dec
mov
xchg
ret
loop
(bad)
pop
rol
xchg
pop
dec
or
mov
and
js
into
add
inc
add
cdq
out
inc
or
enter
js
mov
jl
iret
and
sbb
mov
aaa
loop
mov
pop
pusha
cmp
inc
(bad)
xchg
or
dec
add
or
sbb
pop
jmp
push
sbb
sti
jne
ins
je
lods
jnp
out
inc
ja
jb
sbb
pop
ins
dec
sahf
rol
push
loop
and
push
inc
cli
jbe
(bad)
loop
xor
push
sti
mov
lahf
or
xchg
je
dec
mov
hlt
sub
push
sub
(bad)
mov
dec
xor
gs
sbb
cmp
dec
push
push
sub
sbb
dec
adc
call
es
ror
outs
fild
mov
icebp
or
dec
test
aam
pop
push
sub
movs
mov
sbb
popa
ins
mov
or
lds
in
lea
jns
inc
pop
cwde
cmps
adc
xsha256
cmps
adc
push
sub
and
dec
sar
mov
inc
rcl
rcr
jno
repz
imul
ss
mov
sub
push
inc
jno
cdq
loop
mov
add
stos
cdq
cmp
out
xor
sbb
push
push
loopne
xchg
out
fnstsw
pop
sub
out
jb
xor
or
aam
cmps
in
retf
push
mov
xor
xor
shl
scas
fsub
(bad)
mov
mov
pop
xor
xlat
mov
and
pop
cs
in
jmp
test
add
jno
mov
push
dec
jbe
popf
mov
push
andps
push
inc
cmp
inc
inc
adc
inc
pop
mov
sbb
lods
repnz
or
adc
xor
xor
sar
pop
add
inc
and
pop
movs
jne
pop
sub
ror
std
push
cmp
in
loope
inc
xlat
shl
lods
movs
push
adc
aas
push
cmps
ror
or
out
jb
test
test
sub
xchg
rcr
push
add
cmp
les
jl
fbstp
jae
mov
mov
sbb
cmp
(bad)
push
mov
mov
add
add
push
(bad)
lods
inc
je
fsubr
add
and
(bad)
mov
test
mov
retf
mov
add
add
xor
add
ja
mov
sub
sar
xor
ret
push
rdpmc
loope
inc
jl
or
jecxz
jle
mov
or
inc
add
jbe
mov
jne
cmp
pop
(bad)
in
add
jb
add
(bad)
jo
jae
popw
cmp
jne
mov
loopne
sub
cwde
(bad)
xchg
jno
jp
mov
imul
inc
cmp
jl
mov
adc
ret
pop
or
mov
cmp
xor
jne
add
sub
and
pop
fisttp
xor
cmp
movs
loope
cmp
jmp
mov
sbb
push
mov
test
in
mov
out
sbb
icebp
mov
pop
xor
ss
pop
xor
pop
jecxz
mov
sub
sbb
inc
data16
inc
sub
pop
je
xor
popf
ja
push
jmp
push
push
pop
sbb
pop
or
push
daa
iret
(bad)
int
and
adc
popf
cmp
xor
jb
cmp
pcmpgtw
pop
mov
xor
loopne
xor
rol
push
dec
jge
fs
nop
pop
icebp
rcr
retf
sbb
pop
push
fiadd
push
mov
mov
inc
les
pop
je
(bad)
push
and
jecxz
or
adc
leave
add
fild
call
sub
dec
mov
sahf
mov
pop
fisttp
and
movs
xchg
mov
adc
mov
lods
jl
push
jo
pop
or
mov
sti
inc
lock
add
inc
mov
xor
mov
in
data16
jge
das
and
inc
sti
adc
push
loopne
or
xor
jb
push
cs
push
pop
lock
fsubr
sub
adc
sbb
rcr
ret
jecxz
pop
std
ret
add
ror
iret
test
dec
rol
enter
fincstp
add
adc
and
icebp
mov
pop
adc
pop
sub
std
inc
dec
ficomp
and
push
mov
cmp
adc
sub
inc
pop
call
or
mov
aaa
call
xchg
xor
dec
rcr
sub
jbe
bound
lea
mov
lods
xchg
xor
jl
mov
ror
in
inc
sbb
aam
mov
push
sbb
cmc
sub
jae
or
push
mov
xchg
mov
pop
cld
das
movs
mov
cmps
jg
jge
adc
jb
push
mov
push
dec
scas
mov
lahf
lea
fild
jnp
mov
pusha
push
aaa
pop
inc
push
dec
call
test
ror
stc
pop
jecxz
push
add
and
imul
leave
and
xor
jbe
imul
hlt
or
mov
fcmovne
leave
add
pop
lock
or
cs
adc
or
cli
pop
jmp
fld1
or
mov
adc
mov
add
repz
push
push
test
rol
xor
add
or
sub
lds
and
ss
sahf
sub
repz
out
xor
or
jmp
push
pop
xor
fsubr
test
scas
jb
aaa
leave
ret
and
enter
std
push
mov
or
push
test
jmp
pop
sub
push
xchg
bswap
icebp
pop
sahf
jp
sbb
add
mov
mov
or
fisttp
add
cmp
int3
sbb
out
jecxz
mov
xor
or
jne
dec
add
push
inc
dec
mov
data16
sbb
add
aaa
xor
xor
xor
and
cli
inc
jne
fxch
scas
mov
nop
pop
rcr
add
enter
lods
in
cmp
clc
xchg
sbb
stos
jno
push
pop
fisub
lods
xchg
push
or
mov
push
pand
push
cmps
sub
xchg
fild
fcom
(bad)
dec
pop
call
lock
ins
and
imul
jmp
sbb
(bad)
mov
add
addr16
mov
xchg
jecxz
cdq
mov
fld
lods
adc
pop
fimul
pop
test
dec
shl
cwde
fadd
and
test
dec
mov
dec
movs
imul
push
movs
add
sbb
or
inc
test
fimul
dec
sbb
test
fsubr
adc
mov
pop
mov
cmp
adc
out
jb
dec
cmp
inc
mov
pop
push
sub
dec
jae
mov
fst
fld
push
pop
pop
jb
or
sub
(bad)
leave
xlat
rcr
or
bound
add
mov
pop
xor
(bad)
xor
out
ds
out
mov
test
add
cs
lods
push
push
lods
push
ins
xchg
inc
sub
int3
pop
or
push
or
pusha
(bad)
outs
nop
jno
scas
imul
hlt
adc
sbb
repz
push
(bad)
mov
ja
int3
cmp
fxch
or
pop
sub
push
jecxz
mov
sbb
aas
xchg
into
cmps
leave
scas
cmp
cmps
leave
shl
push
or
add
cmp
leave
dec
leave
lea
mov
shl
cmp
push
sbb
out
rol
add
push
sbb
mov
(bad)
pop
sub
push
fs
dec
enter
add
cmp
inc
movnti
stos
xlat
push
pop
and
jns
fnstsw
aaa
push
inc
lods
sahf
cmps
fwait
mov
sti
mov
jns
dec
data16
jge
es
push
or
xor
mov
mov
dec
repz
loope
or
je
iret
(bad)
and
loope
add
sbb
push
push
mov
and
sub
and
adc
sub
mov
ins
hlt
(bad)
mov
ret
and
mov
adc
jmp
sub
jae
inc
push
inc
sbb
push
movs
ret
push
and
xchg
es
dec
push
xor
inc
rcr
sbb
xchg
xchg
mov
out
push
mov
mov
cmps
mov
or
add
xlat
inc
ret
sbb
lahf
data16
xchg
mov
scas
out
and
mov
add
add
xchg
call
add
adc
dec
fist
lss
test
mov
cmp
xchg
dec
test
jp
dec
cwde
fmul
cmp
or
pop
mov
mov
add
test
(bad)
lods
push
jmp
cmp
fdivp
mov
cmp
push
inc
retf
mov
and
pop
jb
or
je
cmps
push
test
aam
xchg
popf
dec
xor
jge
and
loope
add
push
push
movs
lock
xchg
shl
pop
jl
out
mov
std
push
mov
daa
cmp
push
push
lahf
mov
or
popf
mov
loope
loop
in
popfw
xor
xchg
dec
pop
mov
ror
fcomp
add
mov
add
fsub
push
adc
inc
cs
test
xchg
add
or
ficomp
leave
push
cmp
push
xor
movs
in
push
repz
cmp
jb
test
adc
in
aam
sub
cs
(bad)
add
ficomp
dec
out
adc
ss
(bad)
fwait
xor
pop
mov
repnz
mov
mov
inc
xchg
push
xor
fadd
add
repnz
js
push
pop
push
cmp
dec
sub
loopne
jp
adc
xchg
jnp
loopne
ret
cdq
pop
pop
add
movs
mov
(bad)
add
nop
mov
adc
and
into
jnp
sbb
add
mov
push
mov
mov
jbe
or
cmc
pop
add
push
in
loope
push
hlt
call
pop
ds
cwde
sbb
mov
xor
mov
adc
push
sub
cmp
ja
add
jge
adc
cmp
mov
sub
sub
adc
jo
cdq
sbb
ins
cmp
sbb
and
jle
inc
sti
lea
and
ja
dec
inc
xor
adc
dec
push
push
mov
dec
mov
out
rol
add
sbb
mov
adc
xchg
js
add
xchg
jno
nop
cmps
pusha
ins
and
pop
add
sahf
gs
sbb
sub
jnp
add
pusha
outs
dec
(bad)
and
shl
sbb
adc
aaa
mov
add
and
clc
pop
jb
enter
add
push
cwde
push
pop
out
(bad)
push
add
enter
nop
push
pop
call
sar
sbb
inc
dec
mov
ret
and
add
inc
xchg
xchg
sbb
adc
and
add
retf
mov
ret
(bad)
push
lahf
dec
inc
and
push
fisubr
xor
adc
pop
neg
push
pop
mov
outs
test
inc
in
push
inc
ret
outs
or
lods
lahf
sub
or
xchg
inc
clc
add
loop
pushf
adc
stos
pop
push
cld
or
lock
test
sbb
pop
adc
gs
add
sar
cmp
add
jg
loopne
cmp
push
inc
push
inc
frstor
xlat
or
xor
test
ror
jecxz
ret
add
stc
add
add
push
mov
js
gs
enter
add
push
push
retf
xor
add
ret
and
out
popa
mov
js
or
je
fsub
mov
push
fninit
mov
retf
outs
sbb
imul
sub
add
sbb
dec
das
cmp
or
sub
int
lea
fnstcw
out
loopne
and
cmp
stos
and
mov
xchg
push
mov
push
sub
add
push
int
cmps
and
lods
dec
fcomp
sbb
sbb
stos
mov
push
push
(bad)
in
loop
push
dec
aaa
add
pop
ja
dec
pop
xor
ss
or
clc
mov
outs
imul
mov
aam
push
or
pop
loop
test
sbb
cmp
push
and
lahf
cld
push
test
frstor
test
cmps
push
jne
push
and
test
adc
arpl
addr16
add
or
xor
pop
lods
or
and
les
xchg
pop
inc
ror
jb
jge
jns
push
adc
inc
ja
out
idiv
dec
mov
dec
pop
adc
test
jl
cmp
dec
test
and
and
mov
jecxz
pop
loopne
push
pop
mov
push
rcl
loope
ret
dec
xchg
test
iret
(bad)
rol
(bad)
inc
pop
fmul
push
and
gs
es
fsubr
mov
ror
adc
je
fidiv
leave
adc
xchg
dec
mov
dec
imul
push
outs
push
and
push
test
js
dec
(bad)
push
inc
pop
loope
sbb
shr
sbb
jmp
icebp
je
mov
call
mov
ins
outs
ret
sub
pop
cmp
mov
cmp
inc
ds
clc
sahf
nop
into
xchg
pop
mov
pop
push
lea
dec
aaa
enter
ret
adc
adc
push
popa
jmp
add
and
add
jge
jb
adc
pop
shr
push
or
sub
mov
push
jbe
mov
test
je
(bad)
sub
mov
ret
and
inc
test
shl
sahf
sahf
or
shr
inc
mov
fisub
push
inc
cmp
test
mov
pop
fsub
add
or
or
pop
jp
fiadd
leave
shr
ss
sbb
dec
es
aad
mov
jge
out
dec
inc
or
in
cmp
je
add
ror
push
in
xor
adc
push
(bad)
loop
cli
adc
add
mov
and
ret
push
jo
adc
cmp
je
lock
cmp
jp
add
sbb
push
add
popa
daa
or
movs
cmp
or
add
out
dec
pop
jne
cmp
shr
leave
ret
cs
mov
mov
mov
ret
xor
or
inc
movs
mov
dec
shl
ret
inc
sub
test
bound
dec
std
je
inc
pop
xor
push
jne
sub
enter
mov
jns
dec
cmp
mov
inc
inc
mov
(bad)
adc
pushf
mov
xor
jle
inc
and
mov
add
inc
mov
mov
sub
je
or
dec
test
jne
jp
xchg
push
mov
icebp
jne
xor
movs
std
cli
(bad)
ja
jmp
dec
loopne
and
or
xchg
in
add
dec
xor
adc
int3
and
(bad)
lds
(bad)
mov
jmp
test
je
inc
dec
(bad)
popa
inc
sar
ret
ret
shr
and
mov
pop
cmp
and
add
push
jl
add
sbb
(bad)
aaa
js
adc
retf
or
in
pop
(bad)
loopne
sbb
or
adc
adc
inc
pop
ret
push
sbb
clc
pop
les
adc
test
sub
js
sub
or
dec
dec
je
push
rol
and
adc
push
xchg
sbb
repnz
and
lea
out
aas
in
xchg
mov
fldcw
outs
rcr
inc
or
dec
jle
in
add
xor
loop
jbe
xchg
push
inc
add
or
mov
add
shl
push
loope
rcr
je
out
call
mov
or
mov
sbb
retf
in
mov
jl
cmp
add
popa
mov
sbb
ins
dec
add
adc
ficom
and
jo
or
shl
(bad)
je
cmp
mov
addr16
enter
out
(bad)
mov
ds
mov
push
xor
pop
out
adc
dec
out
call
xor
xor
mov
stos
or
fdiv
push
dec
cmp
push
movs
(bad)
fcomp
into
ja
push
mov
pop
xchg
mov
pop
dec
push
sub
push
cmp
jge
retf
mov
ds
add
push
add
lods
add
es
clc
pop
clc
add
cli
xor
dec
add
test
aaa
add
or
mov
nop
adc
mov
add
(bad)
fs
adc
xlat
scas
add
inc
ret
test
je
or
mov
rcl
pusha
loope
call
dec
inc
inc
cmp
jne
es
mov
push
mov
cmp
retf
ss
pop
lock
pop
lods
pop
and
mov
gs
mov
lods
xchg
add
adc
mov
or
xchg
scas
and
scas
inc
cmp
pop
push
or
loope
mov
dec
push
push
jmp
sub
cmp
jne
inc
mov
call
inc
sbb
fwait
xor
adc
or
addr16
xor
or
push
adc
(bad)
dec
xchg
adc
xor
add
sbb
push
mov
fadd
and
pop
or
int
dec
add
or
sub
xchg
sbb
add
and
les
loopne
ret
add
pop
jns
outs
mov
ja
mov
(bad)
clc
jl
sub
jmp
shr
int3
pop
int3
in
int3
jp
icebp
and
sub
and
add
loopne
sar
sbb
lods
fistp
cmps
inc
rol
pop
push
pop
xchg
mov
iret
jne
add
pop
pop
ret
fild
jbe
outs
and
inc
push
inc
or
and
retf
push
xacquire
scas
add
adc
dec
and
and
or
push
push
fild
jbe
ret
pop
pop
movs
aad
mov
push
rcr
add
push
lods
das
pop
lods
nop
and
jmp
xchg
or
push
push
dec
sbb
test
push
adc
shl
xor
fadd
clc
mov
dec
loope
lock
je
jmp
mov
jge
fidivr
dec
and
(bad)
loopne
push
adc
and
jmp
es
add
mov
add
cmp
call
jbe
jp
sbb
xor
cmps
popa
fwait
push
push
mov
push
cmp
pop
outs
stos
scas
dec
mov
loopne
mov
icebp
rol
lock
inc
or
add
mov
sbb
add
inc
(bad)
cmp
adc
mov
lea
rcl
or
es
js
sahf
xchg
pushf
pop
sahf
das
rol
js
sbb
inc
rcl
add
cmp
add
in
jnp
js
or
in
xor
jbe
cmp
pop
dec
fadd
mov
call
or
bound
xor
ja
cmp
add
sar
ret
xor
add
loope
mov
leave
mov
(bad)
call
cmp
and
es
jnp
repz
add
es
je
idiv
scas
push
fisub
loopne
in
jbe
or
add
or
call
cmp
or
or
add
neg
pushf
push
(bad)
out
add
stc
daa
or
push
xchg
cld
cmp
or
aaa
jmp
jmp
cmp
sub
jmp
cwde
or
and
stos
cmp
scas
and
mov
in
push
or
shr
lahf
ja
mov
iret
sub
push
jmp
inc
(bad)
sub
je
loopne
and
xchg
mov
push
add
xor
sbb
cmp
mov
dec
mov
cmovo
mov
mov
push
adc
add
lock
nop
jae
push
push
add
fnstsw
sub
js
cld
popf
hlt
fwait
jns
aas
sbb
adc
jae
cmp
je
inc
aas
sub
enter
ds
or
cmp
movs
cdq
cmp
add
rcl
cmp
or
and
aas
jecxz
je
je
jne
shl
pop
adc
mov
mov
add
jmp
mov
lods
or
cs
je
das
sbb
push
lea
mov
sub
mov
push
push
push
sbb
cmp
mov
mov
aad
pop
inc
xchg
xchg
mov
cmp
jne
lods
cdq
or
cmp
push
push
js
ja
sub
add
push
adc
mov
jl
pop
(bad)
mov
mov
dec
das
cld
sub
mov
jmp
int3
les
pop
(bad)
lock
inc
retf
or
add
cmp
jne
test
mov
cmps
or
push
pop
mov
inc
inc
pop
jne
lock
add
xchg
sbb
adc
or
jns
(bad)
cld
pop
inc
dec
inc
(bad)
cmps
jne
jmp
in
xor
push
scas
sub
or
js
mov
push
cmp
xor
push
aas
adc
retf
aam
sbb
(bad)
jge
add
std
sbb
adc
loope
in
shl
(bad)
ins
das
xor
mov
stos
pop
pop
mov
cmp
(bad)
cmp
sub
(bad)
test
adc
mov
jno
adc
jge
and
xor
jmp
sbb
call
dec
retf
xor
inc
lea
inc
and
mov
idiv
ficomp
jge
inc
call
pop
mov
or
pop
sbb
(bad)
jge
pop
mov
je
ins
shl
leave
xchg
and
les
sahf
dec
dec
leave
jl
cmp
lock
jge
mov
mov
mov
icebp
mov
and
hlt
add
test
(bad)
add
outs
aas
push
lock
jns
push
sub
shl
in
mov
mov
mov
sbb
pop
pop
xchg
dec
and
cmp
rol
jno
(bad)
cmps
or
loopne
add
jmp
out
or
add
xchg
inc
xor
mov
mov
ret
nop
mov
inc
sbb
dec
inc
or
jg
dec
adc
aaa
retf
bound
cmp
fdivr
xchg
add
sbb
call
test
sub
scas
cmps
cmp
dec
std
imul
aas
add
xor
dec
ror
add
inc
add
scas
jnp
dec
sub
lea
mov
cmp
and
or
ins
cmp
cld
stos
add
loop
xor
or
sbb
cmp
repnz
retf
(bad)
cdq
in
xor
add
sbb
lods
in
push
add
xor
aaa
rcl
lea
pop
inc
rol
xor
mov
neg
inc
cmp
and
sbb
xor
in
or
cmp
sub
rcr
cld
inc
mov
pop
mov
pop
mov
xor
inc
cwde
or
pop
jne
test
or
ins
inc
shl
dec
add
cmp
or
and
cmp
dec
xchg
xor
xchg
inc
xchg
xor
or
ja
int
sti
add
test
outs
rcl
in
xor
out
add
xor
and
jnp
mov
sbb
in
mov
or
xor
xor
or
xchg
push
scas
fs
cmp
and
inc
setge
shl
stc
add
sub
fidiv
jnp
ret
mov
movs
daa
retf
test
and
pop
jle
adc
aas
out
mov
sub
ret
loopne
mov
jnp
in
or
out
(bad)
sbb
(bad)
fidivr
cdq
or
cwde
cmp
inc
and
sti
not
and
lock
xor
and
or
add
jb
sbb
push
shr
dec
jl
out
push
shl
add
sub
add
push
add
adc
fiadd
lahf
add
mov
loopne
dec
enter
fs
ret
fimul
pop
mov
je
xor
mov
loopne
clc
xor
push
or
je
cs
pop
mov
idiv
fsub
push
and
mov
add
in
leave
pop
push
mov
enter
pop
cmp
fs
sub
add
xchg
add
pusha
ror
push
mov
data16
add
sbb
or
movs
adc
add
clc
ret
into
rcl
xor
ins
push
cmp
call
mov
in
inc
sbb
test
jl
icebp
cwde
inc
dec
mov
or
sub
xchg
les
in
adc
mov
push
mov
push
or
ror
xor
rcr
mov
or
das
jge
test
xor
adc
and
clc
xor
aas
in
add
or
push
outs
adc
(bad)
jne
dec
outs
adc
(bad)
jo
pop
(bad)
dec
or
fnstcw
adc
and
push
mov
mov
push
icebp
fcomp
jae
pop
pop
ror
jne
jnp
push
cmp
sub
xlat
pop
xor
xlat
aas
push
mov
add
mov
sub
xor
mov
test
dec
jl
cmp
inc
push
neg
inc
inc
in
pop
and
mov
cmps
lock
pusha
ror
ins
movs
je
pushf
inc
jle
pusha
jae
ror
out
jecxz
jne
or
mov
(bad)
or
push
test
xchg
jb
jo
jne
mov
adc
and
push
in
(bad)
daa
out
mov
mov
push
mov
lea
pusha
add
cmp
push
rcl
jp
pushf
out
test
lahf
rcl
mov
loope
sub
cmp
loopne
fisub
cmp
push
shr
push
push
push
xor
push
add
(bad)
retf
or
ins
lea
and
push
xor
and
inc
xchg
out
add
lock
lods
sti
dec
sbb
push
push
push
inc
ds
frstor
inc
shl
lock
and
add
cdq
xor
and
mov
retf
adc
cmp
mov
sar
inc
je
mov
daa
mov
out
ja
in
sbb
int3
ret
and
nop
xchg
ret
sbb
sub
push
push
comiss
js
cmp
nop
int3
rol
loopne
mov
sbb
popa
imul
pusha
ror
inc
inc
inc
mov
(bad)
push
jb
mov
or
lods
or
leave
add
push
fisttp
pop
mov
xor
pop
mov
and
pop
(bad)
mov
xor
cmp
rol
hlt
in
int
cmp
push
adc
jl
shr
sbb
pop
cmp
scas
adc
sbb
cmp
xor
inc
inc
cmp
daa
mov
aam
data16
xchg
and
mov
into
imul
push
pusha
xchg
test
jl
dec
mov
xor
cld
dec
cmp
ins
dec
or
pop
xchg
push
pop
nop
mov
xchg
popa
cmp
frstor
jno
jne
xor
mov
lock
sub
push
or
push
test
inc
sbb
mov
rcr
ror
sbb
movs
dec
nop
sbb
add
sub
or
daa
call
call
cmp
int3
push
rcr
sbb
fucomi
sar
lock
nop
lea
push
cmps
and
fdiv
adc
add
dec
jns
jno
movs
or
push
outs
sub
into
and
das
add
inc
pop
enter
push
and
scas
cmp
ret
ktestb
test
and
in
call
sub
sub
lds
test
imul
xchg
ss
jp
push
pop
js
jp
pop
scas
test
jne
pop
adc
pop
dec
pop
or
shr
shr
xchg
pop
jo
cmp
cmp
jle
hlt
shr
add
out
push
ret
out
sti
sbb
lds
sbb
add
arpl
inc
lds
int3
int3
leave
xchg
jle
xlat
or
pop
mov
cmp
jle
sar
pop
rol
sub
rcl
shl
xor
add
in
add
mov
pop
add
sbb
pop
add
mov
int
jmp
sub
sbb
pop
clc
and
fwait
sub
inc
leave
je
mov
push
rcl
inc
mov
dec
xchg
jmp
mov
dec
add
(bad)
sbb
pop
adc
mov
add
dec
or
mov
jmp
mov
sub
icebp
add
mov
push
dec
fs
add
adc
add
dec
mov
fs
cmp
or
xchg
cmp
inc
mov
inc
inc
cmovns
stos
fdiv
and
idiv
xor
(bad)
jmp
xor
push
xor
cmc
or
stos
mov
pop
add
adc
add
pop
mov
adc
rcr
inc
leave
fcom
dec
xor
sar
xor
shl
cmps
out
jae
and
adc
outs
cmp
mov
or
repnz
mov
mov
repz
lds
cmp
mov
adc
and
out
sbb
inc
pop
mov
or
sbb
jbe
pop
sbb
cmp
cld
das
mov
sar
jg
pop
mov
mov
and
test
add
es
or
and
test
test
in
add
mov
cmp
push
(bad)
cmp
out
add
movntq
ja
push
popa
js
cmps
dec
(bad)
jns
mov
dec
aad
icebp
push
mov
ja
int
dec
xchg
cmp
int3
jmp
add
hlt
and
xor
xor
push
jmp
or
inc
pop
cmp
jge
adc
lods
xchg
adc
push
dec
adc
into
dec
xor
mov
or
pop
jo
je
or
(bad)
repz
sub
das
test
data16
sub
jmp
test
mov
aam
pusha
dec
sub
mov
sub
pop
cs
sbb
je
and
test
pop
jnp
aam
add
pop
or
fs
mov
hlt
fld
mov
mov
xchg
sbb
pop
add
scas
sbb
dec
and
pop
repz
lods
pop
push
push
mov
xlat
aaa
xor
cmp
std
pop
xor
add
sub
in
pusha
jl
ins
mov
jp
and
loop
mov
or
jl
scas
int3
dec
or
es
and
jo
and
push
sbb
adc
retf
xlat
hlt
push
or
push
imul
push
adc
cdq
xor
and
punpcklwd
inc
push
ins
stos
push
in
xchg
mov
sbb
inc
push
jge
ds
and
fimul
add
pushf
adc
mov
sar
mov
sub
mov
test
pushf
ss
arpl
ja
loope
jle
cmps
jne
rol
mov
push
cmp
daa
cmp
cmp
sub
jbe
aad
ds
aaa
(bad)
pop
pop
inc
ds
push
dec
les
adc
lea
(bad)
das
pushf
push
push
retf
and
and
sub
mov
mov
jecxz
inc
jp
mov
jmp
sbb
fs
test
les
xchg
add
fbld
xor
js
cs
add
loopne
in
add
push
push
sbb
or
mov
out
iret
retf
nop
jae
ret
mov
xor
sbb
inc
xor
jl
es
inc
cwde
cld
sub
pop
mov
aad
sub
pop
mov
inc
mov
adc
mov
push
ins
cmp
push
xor
inc
and
add
lods
mov
pop
jno
push
mov
ins
jmp
or
pop
popf
cmp
adc
add
pop
xor
or
inc
dec
xchg
sub
je
inc
mov
add
cmc
jmp
sub
loop
dec
out
ret
mov
test
sub
loope
aaa
dec
sub
or
ret
inc
out
cmp
mov
jp
icebp
(bad)
sub
adc
mov
inc
ficom
cmp
sbb
out
jbe
ror
mov
jne
fcmovnb
xchg
dec
test
mov
xor
outs
inc
push
in
and
pop
js
js
arpl
mov
popa
je
mov
bound
or
imul
inc
push
adc
inc
test
pop
xor
test
xor
sub
je
jns
xor
push
push
(bad)
sub
adc
shl
and
jl
jmp
mov
add
adc
les
or
push
in
lds
inc
pop
xor
mov
xchg
mov
cmps
mov
pushf
ret
or
mov
nop
jno
or
dec
sbb
inc
lods
add
push
or
outs
or
mov
xor
mov
sub
add
sbb
hlt
add
pop
xor
sub
inc
sub
ficom
inc
adc
add
lods
rol
dec
push
push
inc
pop
fsubr
adc
clc
dec
je
and
or
adc
int
jne
sbb
cmp
push
scas
pop
sbb
cmp
jmp
ss
cmp
lock
dec
mov
dec
(bad)
and
jns
inc
mov
mov
sahf
ss
add
std
pusha
push
mov
push
push
push
jb
clc
or
out
push
add
fs
sub
mov
adc
push
pop
mov
inc
sub
cmc
push
xor
pop
cmp
test
rcl
jle
les
push
push
js
loopne
fst
xor
mov
jle
add
scas
ins
in
or
test
inc
pop
enter
or
jmp
push
cld
sub
sbb
neg
sbb
lea
jnp
and
mov
add
es
cs
xor
push
cs
and
xchg
mov
retf
stos
sub
retf
clc
push
scas
push
add
mov
cmp
and
dec
add
ret
add
inc
cmp
mov
add
or
retf
add
add
push
push
mov
ret
sahf
popf
mov
jno
sub
mov
jbe
cmp
movs
add
cmp
dec
add
add
or
sysenter
test
sbb
mov
add
and
sub
into
fbstp
mov
and
push
out
inc
les
sub
sbb
or
pop
mov
jnp
sar
or
ins
retf
adc
inc
(bad)
pop
xchg
jl
push
mov
xchg
add
test
dec
mov
dec
sbb
pop
ins
push
mov
rol
and
mov
sub
xor
jle
mov
pop
xchg
mov
mov
jb
cmp
add
aaa
xchg
dec
aas
(bad)
and
ins
add
dec
add
mov
cmp
mov
push
sub
mov
xor
or
cmp
data16
mov
pop
(bad)
pop
stos
rcr
and
add
rcl
ror
sub
call
and
pop
mov
mov
jno
es
or
(bad)
js
adc
scas
movs
or
xor
xor
lock
sbb
dec
or
jmp
mov
push
cmp
setne
pop
ds
ds
mov
pop
(bad)
mov
adc
and
cmp
push
pop
push
and
jo
mov
xor
add
sbb
xor
mov
call
adc
dec
add
dec
(bad)
cmp
cmp
jnp
jo
ds
mov
pop
push
ror
dec
push
cmp
les
jnp
pop
ds
cmp
js
mov
adc
(bad)
add
bound
daa
or
and
outs
or
mov
popa
add
scas
inc
outs
mov
mov
add
sbb
pop
les
cmp
popf
push
add
sub
push
jp
rcl
jbe
lea
fadd
sbb
mov
or
ins
pop
or
sub
push
retf
cmp
push
out
add
aas
dec
dec
jno
lahf
in
inc
inc
cmp
inc
push
loop
jb
pop
push
call
push
add
add
rcr
rol
fist
lock
jb
pop
dec
mov
dec
jb
push
in
cmps
dec
xor
cmp
out
call
inc
xor
stos
shl
jb
ret
sbb
and
xchg
retf
sub
add
and
and
dec
dec
mov
call
xor
ss
jne
cwde
push
add
push
ja
xor
retf
push
lea
add
(bad)
test
push
xor
fadd
dec
pop
push
sub
rcl
or
pop
xchg
inc
xchg
ret
mov
cwde
push
mov
fnstsw
jmp
inc
gs
xchg
adc
mov
sbb
sbb
mov
pushf
xor
sub
imul
shr
inc
sbb
imul
push
push
sub
adc
mov
cmp
push
jne
rcr
sbb
xchg
and
dec
and
sub
sub
pushf
dec
dec
push
jge
adc
fisttp
pop
adc
xchg
xor
rol
dec
sub
stos
sbb
pop
retf
inc
ror
int3
sub
xchg
adc
or
and
sub
cdq
(bad)
xlat
aam
in
add
xor
sar
mov
mov
and
pop
dec
add
jo
adc
das
mov
and
sbb
imul
mov
add
sbb
xor
in
sub
pop
and
idiv
lods
popf
inc
mov
imul
test
rcr
in
or
retf
cmp
fwait
and
sbb
push
cmp
das
inc
or
push
in
xor
push
pop
and
mov
add
sbb
and
mov
enter
cmp
inc
adc
cmc
sub
xor
int
call
inc
add
scas
mov
nop
aaa
(bad)
xchg
cmp
dec
pop
jb
ror
add
and
add
mov
add
jl
sub
and
jns
in
pushf
inc
mov
jns
ins
sbb
jle
inc
push
cmp
jne
mov
inc
adc
gs
adc
and
rcl
fldz
mov
xor
add
iret
shr
adc
iret
pop
lock
(bad)
aam
aas
int3
push
xchg
mov
test
cs
or
xlat
loop
mov
dec
mov
sub
dec
fmul
and
mov
pop
out
call
xor
inc
jp
inc
daa
push
jne
cmp
sub
xor
das
add
(bad)
pop
je
cs
jbe
add
imul
xchg
or
push
ret
imul
lsl
enter
ins
sub
mov
out
popa
test
cmps
(bad)
push
sub
add
mov
idiv
jmp
or
sub
dec
pop
sbb
retf
ss
mov
mov
out
outs
push
mov
mov
dec
mov
out
aaa
and
arpl
or
cmp
inc
rol
add
xor
rcl
(bad)
xor
or
mov
fisttp
cmp
sub
sub
jb
cmp
or
shr
mov
pop
inc
sub
dec
shl
sbb
add
inc
ror
mov
movs
dec
test
push
sub
or
fmul
push
and
xor
pop
out
mov
jbe
dec
and
sbb
pop
pusha
and
xchg
or
push
adc
jno
or
lds
add
jecxz
pop
fistp
fwait
push
(bad)
dec
add
jne
fstp
xor
ins
xchg
add
call
mov
mov
test
out
mov
retf
add
xchg
into
pop
into
dec
loop
mov
push
mov
inc
jne
daa
mov
dec
push
mov
call
xor
imul
add
mov
rol
inc
cmp
test
xchg
fistp
inc
movs
add
add
or
rcl
sar
push
fucom
push
push
push
or
(bad)
pop
dec
cdq
or
outs
and
shl
sub
sub
pop
int
leave
pusha
movs
jp
je
fidiv
jp
daa
(bad)
xchg
and
dec
sub
das
aam
lock
sub
fsubr
(bad)
es
cmp
xor
stc
jb
cmp
cld
inc
add
adc
jb
push
dec
jecxz
push
jnp
ret
dec
call
repnz
add
add
lods
pop
sbb
and
mov
or
(bad)
mov
fdiv
jg
dec
mov
xchg
aad
mov
sbb
add
jge
jne
xor
rol
mov
xlat
sbb
out
xor
pop
(bad)
inc
shl
or
cmp
and
aam
mov
sbb
xchg
and
xchg
or
fcomp
rcl
cmps
outs
addr16
cmps
and
jne
ins
push
cdq
inc
jmp
dec
push
push
push
xor
sub
retf
or
xor
or
adc
jmp
lar
or
movs
push
add
push
nop
lock
mov
ror
pop
sub
aas
add
push
jne
sbb
ins
xor
or
xchg
rol
jmp
jge
and
in
dec
imul
pop
mov
or
das
jg
push
sbb
cmp
pop
popa
and
sub
lods
xchg
rcl
fst
fbstp
or
sbb
and
ror
xlat
xor
call
nop
sbb
or
pop
jecxz
fisttp
fiadd
pop
push
xchg
mov
dec
add
add
loope
or
push
fdiv
ret
add
adc
fwait
test
sti
dec
cs
add
in
(bad)
xchg
add
mov
xchg
mov
push
push
sbb
ins
ror
jge
sbb
dec
jbe
das
ret
lea
push
lea
push
or
push
jnp
xchg
data16
shr
into
push
in
xchg
test
xlat
outs
push
mov
pop
je
mov
jmp
not
add
in
adc
outs
ins
add
push
sbb
push
cld
xor
dec
cmp
pop
mov
mov
nop
mov
add
inc
sub
adc
or
and
or
push
mov
repnz
or
mov
jle
mov
lahf
xchg
or
inc
les
out
or
or
mov
add
(bad)
jbe
mov
push
xchg
das
adc
sub
and
scas
xlat
dec
push
popf
xor
cmps
rcr
test
icebp
pop
cs
ds
mov
daa
adc
jmp
test
xor
(bad)
adc
pop
stc
lea
xor
lods
cdq
dec
sete
fst
popa
add
test
and
arpl
sbb
sub
pop
sub
inc
push
xor
pusha
addr16
pusha
mov
adc
fld
icebp
adc
or
pushf
daa
popf
mov
push
lds
ins
sub
(bad)
push
lea
pop
xor
push
(bad)
in
or
sub
xchg
loopne
ret
pop
ins
nop
bound
and
sysret
or
xor
addr16
mov
aam
sub
fs
add
fidiv
cmp
mov
sar
push
rcl
push
push
lea
fsubr
je
call
aad
dec
imul
add
addr16
add
push
call
lea
jno
adc
pop
sbb
repz
or
sub
or
arpl
jnp
xchg
or
adc
test
and
or
loop
mov
jle
add
sar
push
pop
imul
or
and
jne
ror
push
movs
mov
cld
stc
pop
ja
scas
xor
and
mov
jb
pop
add
pop
loop
xor
cmp
push
cdq
ret
cs
push
repnz
cmp
fmul
jmp
mov
ret
inc
cmp
mov
sbb
jg
es
stos
hlt
dec
mov
mov
xchg
or
ja
lahf
pop
ficom
inc
aaa
jmp
and
aas
aas
popa
jb
data16
push
fisttp
push
inc
dec
cli
cmp
jl
shl
cmc
xor
and
sbb
jle
xor
jae
push
je
jns
popa
push
push
out
ja
loopne
inc
push
cmp
and
push
jle
xchg
mov
fdiv
js
inc
stc
jl
aaa
mov
retf
and
sub
inc
pop
repz
jb
arpl
inc
es
dec
or
cmp
push
movs
dec
jp
cmp
(bad)
push
rcl
ss
jl
xor
mov
or
adc
mov
arpl
xchg
mov
pop
dec
add
pusha
add
sbb
shl
je
pop
cmp
mov
add
(bad)
xor
pusha
jae
scas
or
imul
loop
loop
mov
xlat
adc
imul
mov
push
mul
inc
out
mov
pop
or
inc
in
and
add
ret
mov
rep
sub
mov
dec
xor
add
mov
mov
dec
mov
sub
ds
stc
in
adc
cmp
xchg
js
dec
adc
inc
sub
or
jnp
movs
add
add
inc
inc
call
dec
sub
mov
dec
cmp
stos
add
ret
sbb
push
test
movs
and
adc
test
push
inc
push
sbb
jbe
add
mov
es
xor
js
jns
add
dec
loopne
fdivr
lea
and
add
xor
leave
shr
mov
push
mov
dec
jecxz
push
dec
mov
jo
mov
in
mov
aam
dec
shr
mov
fnsave
mov
mov
mov
xor
jnp
arpl
test
lock
test
dec
out
xor
pop
dec
jne
xor
adc
pop
jb
loopne
jecxz
imul
sbb
stc
adc
xchg
mov
jns
mov
retf
sub
and
add
dec
retf
inc
cmp
or
outs
cmp
and
movs
sbb
pusha
or
in
adc
and
pop
imul
mov
pop
pop
loopne
push
xor
sub
sub
mov
imul
(bad)
pop
or
in
lea
inc
inc
xor
fmul
(bad)
out
shl
or
lahf
inc
or
mov
add
push
push
rol
xor
mov
call
test
cmp
xchg
sahf
ret
and
das
mov
pop
and
add
xchg
scas
sub
and
test
push
add
mov
xchg
loop
sub
lods
repz
push
cmp
arpl
xchg
daa
push
mov
dec
loopne
das
dec
cld
or
fcomp
mov
push
fwait
sub
add
movs
push
out
and
and
scas
xor
sbb
mov
outs
cmp
jno
stos
push
pop
mov
push
out
scas
add
fiadd
adc
mov
rcl
cld
sbb
push
or
loope
dec
sbb
add
adc
imul
and
(bad)
add
xor
xchg
pop
pop
mov
add
addr16
mov
add
pop
and
dec
mov
sub
pop
and
push
js
jne
aaa
sbb
pop
or
sub
pusha
jnp
push
xor
aam
cmc
outs
sti
(bad)
data16
or
imul
popa
adc
mov
push
pop
les
jp
sub
or
or
stc
xor
or
or
fild
(bad)
jb
and
inc
adc
push
dec
add
adc
push
dec
mov
ja
add
and
pop
sbb
adc
push
adc
and
ror
jecxz
cmp
and
jne
(bad)
leave
imul
int3
call
sub
pop
or
xchg
cmp
cmp
cmp
or
stos
(bad)
jg
dec
leave
sti
and
lods
(bad)
rcl
rcr
xor
push
xchg
jbe
(bad)
sub
or
adc
outs
adc
push
push
jl
in
pusha
not
push
and
jmp
xor
imul
arpl
pop
mov
dec
inc
xchg
test
dec
mov
ins
ret
push
push
cmp
xchg
add
dec
cmps
jo
ins
add
add
push
push
push
fwait
adc
aam
and
je
arpl
push
test
cmp
fs
js
cmp
leave
sub
add
add
adc
mov
push
loope
xor
cmp
sti
aam
clc
pop
add
sbb
test
jle
xor
add
lods
push
jp
dec
xchg
dec
adc
pop
inc
in
scas
xchg
add
cmp
mov
inc
mov
call
and
adc
xor
sub
sub
inc
push
adc
data16
ins
call
int3
mov
push
push
fwait
sbb
mov
sbb
popa
fisub
xchg
cs
push
push
sbb
sub
(bad)
int3
push
ds
or
sbb
and
sbb
loopne
sbb
je
sbb
fisubr
xor
xchg
psubb
mov
jb
mov
pop
jecxz
push
daa
loopne
mov
xor
int
inc
add
add
and
inc
loopne
and
pusha
sbb
daa
mov
push
or
bound
push
outs
rcr
xchg
and
xchg
push
jno
add
dec
add
aad
push
pop
jle
or
repnz
push
retf
xor
adc
and
ins
inc
imul
repnz
push
mov
adc
fadd
push
inc
out
push
ror
mov
imul
cmps
std
test
jne
xchg
push
push
int3
call
sbb
movs
scas
pop
add
test
dec
push
dec
sub
nop
pop
sub
and
push
jnp
clc
and
sbb
push
inc
out
inc
inc
stc
jbe
sahf
jb
jl
bound
pop
xlat
sahf
mov
sbb
call
ret
jo
add
sahf
xor
cmp
shl
rcl
xor
rcl
xchg
inc
inc
ins
imul
mov
mov
loopne
ss
je
jl
mov
mov
adc
imul
ins
mov
and
jnp
das
fwait
lods
jl
or
push
inc
mov
xor
push
cmp
pop
dec
push
push
lods
ror
mov
in
add
add
popa
out
adc
and
mov
daa
and
inc
or
jae
push
pop
sbb
xor
repz
mov
push
or
add
pop
cmp
or
add
and
sbb
mov
sbb
in
inc
cmp
or
repz
out
mov
mov
adc
inc
ja
inc
in
hlt
xchg
mov
retf
cmp
add
sbb
and
addr16
mov
sub
and
js
clc
cmp
aad
jb
mov
inc
or
add
int
and
jne
(bad)
call
mov
imul
adc
or
das
and
call
push
and
fbld
adc
faddp
jne
mov
les
or
retf
push
mov
adc
cmp
test
jae
pop
push
dec
les
xor
sub
dec
push
xchg
movs
jp
stos
or
sub
adc
fwait
push
mov
dec
and
and
ret
nop
xchg
push
fwait
adc
inc
jns
push
test
jmp
outs
loop
fs
adc
dec
push
aaa
and
pop
xor
sbb
inc
and
xchg
test
push
dec
sub
sbb
imul
push
push
sbb
cmp
sub
stos
nop
add
inc
shl
mov
inc
or
and
push
jne
xchg
das
adc
lea
sbb
inc
push
add
or
stos
cs
adc
inc
inc
adc
rcl
loop
inc
nop
rcl
push
push
repnz
push
rcr
xor
adc
jae
cwde
test
sub
(bad)
dec
jb
sbb
push
sbb
xor
sub
adc
pop
inc
mov
add
outs
mov
clc
punpckhbw
push
jmp
test
add
mov
mov
sbb
push
cs
xchg
dec
jo
jl
inc
popa
xchg
sahf
mov
add
inc
mov
in
add
out
scas
adc
ins
pop
push
es
xor
xchg
cmp
or
js
inc
(bad)
(bad)
adc
rol
ret
inc
sub
scas
pop
inc
add
je
and
fbstp
inc
pop
pop
jmp
dec
add
pop
jecxz
add
pop
mov
inc
add
push
add
mov
adc
cmp
loopne
mov
psubb
pop
sbb
imul
(bad)
aam
jmp
and
loop
or
pop
inc
sub
jne
cdq
popa
and
les
ins
pusha
arpl
sbb
dec
adc
mov
out
add
test
push
test
mov
and
dec
push
push
mov
lea
pushf
fild
or
pop
xor
mov
adc
inc
retf
push
jecxz
and
cwde
lahf
xor
and
outs
jmp
in
adc
sub
lods
jle
pop
cmp
test
sbb
inc
cmp
and
inc
and
fild
xor
cmp
and
loopne
mov
push
out
inc
lock
and
mov
add
mov
pop
sbb
cmps
imul
cmp
cmp
fiadd
dec
fwait
or
sbb
or
jns
mov
dec
mov
repz
cmps
dec
or
pop
or
pushf
jno
loop
cwde
test
mov
dec
push
mov
mov
jp
(bad)
mov
cli
dec
push
jno
push
mov
in
cmp
mov
pop
dec
out
sbb
inc
dec
jecxz
pop
prefetchwt1
mov
jmp
cmp
mov
jns
inc
je
repnz
or
add
push
xor
nop
loop
or
mov
shl
or
popf
fisub
pop
fs
xchg
inc
inc
adc
xor
cmp
pop
push
and
push
cmp
nop
mov
arpl
test
adc
rol
and
loopne
mov
fdivrp
das
cmp
mov
js
mov
jl
add
imul
mov
or
xor
pop
les
and
loope
jbe
or
fld
cmp
xor
test
jle
or
push
sub
nop
lds
enter
js
add
add
cdq
sbb
dec
inc
xor
add
fs
jp
add
and
push
mov
call
pop
and
call
adc
or
add
or
inc
arpl
mov
stos
pop
fwait
add
mov
dec
xchg
adc
fisttp
dec
call
ficom
mov
(bad)
in
jle
test
mov
push
inc
pop
sub
xchg
and
push
pop
mov
mov
retf
in
popa
sbb
lock
mov
shr
push
xchg
push
inc
pusha
outs
div
mov
adc
test
and
rol
jb
inc
jb
pusha
add
test
push
addr16
dec
rol
cmp
shr
call
inc
and
cld
xchg
loope
add
lea
inc
pop
mov
je
enter
and
or
pop
add
add
sbb
dec
xchg
jns
fild
mov
inc
pop
add
mov
push
mov
outs
in
sub
div
je
sbb
lea
inc
fidivr
and
jae
adc
repnz
lahf
(bad)
or
xor
pusha
movs
pop
test
xor
push
loopne
mov
adc
mov
mov
call
test
push
es
lea
mov
mov
pop
jp
ins
adc
push
push
mov
jmp
jno
and
or
pop
call
inc
pop
pop
test
fdivr
lods
outs
popf
xchg
sbb
ss
pushf
inc
jecxz
sub
sub
adc
sti
lods
sti
or
xor
(bad)
jne
push
add
out
push
and
pop
adc
daa
ins
shr
pop
sub
sti
or
iret
je
ret
hlt
push
(bad)
or
popf
pop
push
fcomp
outs
xor
cmp
sub
movs
js
call
jnp
xor
and
add
mov
jo
(bad)
je
pop
xchg
sub
arpl
cs
iret
fnsave
mul
cs
or
or
cdq
adc
imul
add
adc
and
jp
add
ds
mov
adc
icebp
sbb
push
std
lahf
xor
lea
and
test
mov
xor
loop
push
or
cld
cmp
cmp
mov
bound
sbb
pop
call
pop
ja
xor
in
fld
mov
mov
or
movd
jnp
push
dec
sbb
and
sbb
add
scas
movs
cmp
pop
jne
popa
pop
sbb
pop
adc
ja
dec
cmp
jnp
mov
pop
pop
mov
(bad)
pop
sti
xchg
dec
out
fild
sahf
xlat
out
add
es
cmp
xor
adc
push
push
movs
ins
sbb
or
je
imul
or
sbb
je
push
lock
sbb
xor
scas
(bad)
cmp
push
into
sbb
fild
(bad)
jnp
jne
cmps
mov
inc
or
outs
xor
call
add
xchg
cdq
packsswb
or
gs
call
push
push
lahf
dec
mov
dec
jmp
and
mov
jecxz
push
sub
add
push
adc
sub
or
or
dec
call
xor
mov
fstp
ins
pop
push
daa
retf
rcl
push
add
cmps
jns
add
add
add
or
dec
add
sti
sbb
sbb
fstp
sbb
jno
sub
dec
mov
or
and
ins
movs
lods
jg
cs
add
clc
mov
int
or
je
inc
mov
call
int
xchg
or
mov
jge
sub
pop
fmul
mov
(bad)
nop
sub
mov
cmp
in
shr
int3
push
lahf
ss
pop
add
rcr
xchg
or
loopne
popa
jmp
dec
fucomi
xchg
mov
gs
jp
ret
adc
sbb
outs
test
dec
in
inc
sbb
sar
dec
pop
xor
inc
mov
push
mov
mov
mov
pop
daa
adc
test
sub
add
mov
jno
dec
add
in
add
cmp
ja
cmp
push
add
out
cmp
mov
ret
cmp
shl
call
mov
adc
psadbw
jle
cmp
cld
arpl
adc
sub
sbb
mov
pushf
dec
daa
dec
inc
vmread
push
push
test
mov
popf
mov
mov
lea
mov
fwait
xchg
pop
inc
xor
adc
mov
ret
es
push
push
mov
or
or
aam
or
jmp
adc
mov
fmul
daa
mov
adc
adc
push
mov
mov
dec
enter
add
mov
clc
cmp
add
aas
je
inc
les
push
stos
mov
xchg
mov
(bad)
leave
(bad)
adc
hlt
xchg
jbe
sub
xor
mov
test
int
and
in
add
sub
adc
add
aad
push
pop
push
dec
loopne
ret
shl
test
add
xchg
retf
mov
mov
loop
push
rcl
dec
call
push
sub
push
sub
ror
push
shr
sub
je
cli
fidiv
lods
or
inc
test
sbb
cmp
or
jmp
daa
stc
inc
push
push
rcl
xor
push
stos
xchg
and
dec
enter
daa
or
shr
mov
push
cs
sbb
sbb
adc
or
mov
sub
add
paddw
rcl
jmp
add
push
inc
dec
sar
mov
dec
inc
enter
loope
rcl
and
out
mov
sahf
out
(bad)
in
push
add
push
push
aad
dec
jmp
call
cmc
imul
dec
dec
push
push
push
jae
cmps
adc
push
mov
test
cdq
test
test
out
xor
or
or
or
mov
jno
push
popa
test
sbb
and
ret
mov
call
xlat
sbb
js
nop
clc
retf
push
cmp
add
add
inc
xor
jne
pusha
inc
adc
inc
xor
xchg
ror
inc
or
xchg
pop
mov
jnp
jae
jne
test
push
jno
dec
test
aad
sbb
xor
adc
aaa
or
sbb
or
sub
xchg
test
mov
xor
push
nop
out
and
adc
push
leave
mov
inc
or
dec
or
cmp
cmp
pop
cmp
adc
js
cmp
push
pushf
adc
loope
add
add
call
add
lea
sub
adc
sbb
dec
cmp
(bad)
cmps
clc
add
adc
jp
mov
sub
call
xchg
jne
xchg
dec
mov
bound
dec
fsub
nop
add
push
and
ds
dec
push
adc
mov
mov
mov
pop
loope
pop
ins
cmp
leave
mov
inc
add
push
push
mov
jb
aam
jg
jmp
xor
clc
dec
pcmpeqb
push
push
xchg
jo
test
adc
adc
lock
push
push
in
xor
inc
or
je
push
adc
xchg
jb
jge
add
ds
jno
mov
loope
fmul
or
xchg
jbe
inc
add
adc
adc
add
jmp
stos
lea
mov
pop
and
daa
rcl
add
or
or
push
mov
or
xchg
ja
sbb
ss
jmp
add
add
ja
stos
es
jbe
test
mov
cmp
cmp
std
mov
add
fadd
clc
adc
sbb
push
mov
test
popf
stos
or
push
dec
xchg
cmp
jmp
out
xor
test
ins
adc
cld
(bad)
mov
xor
push
xchg
dec
imul
mov
(bad)
ret
fcom
lmsw
sbb
xchg
xchg
cmp
and
shl
fst
and
cmps
jle
jae
pop
shl
stos
hlt
dec
jbe
adc
sub
ss
or
mov
sbb
stos
inc
loop
jo
add
sbb
inc
cmp
or
movs
jmp
call
pop
xor
pop
add
pop
sbb
and
sar
test
or
popa
or
and
cmp
and
add
(bad)
stos
mov
push
sahf
jmp
dec
call
mov
lds
jl
fimul
movs
push
sbb
paddusw
arpl
xor
int3
nop
jge
ins
cmps
sbb
adc
test
retf
jnp
sahf
dec
sbb
sbb
xchg
nop
dec
imul
xchg
cs
xlat
push
push
shl
and
or
enter
fild
sbb
mov
loopne
call
inc
add
mov
adc
cmp
xor
mov
mov
test
or
loopne
(bad)
rol
mov
push
lods
lds
mov
pop
jae
or
cmp
aas
lea
sbb
inc
inc
adc
add
jno
push
fwait
mov
rol
inc
jae
(bad)
mov
xor
mov
cmp
(bad)
sbb
sbb
add
or
mul
jne
mov
fcmovnbe
xchg
fwait
dec
test
and
dec
scas
sub
ja
inc
sahf
imul
adc
pop
sub
push
add
pop
ret
retf
loope
daa
push
cmp
ret
mov
adc
out
mov
jns
rcl
and
ja
shr
jecxz
aaa
dec
sub
sbb
adc
imul
add
jne
jbe
push
jo
push
je
pop
jmp
and
ret
add
push
mov
ror
ins
cli
fnstcw
sbb
push
stos
ffree
push
in
mov
ins
inc
dec
fimul
lea
movs
dec
lods
or
inc
cdq
inc
jnp
pop
add
adc
push
fwait
mov
out
mov
mov
retf
shl
mov
add
push
sti
outs
cmps
adc
sti
and
mov
dec
clc
sbb
sbb
scas
mov
mov
outs
retf
lods
not
outs
mov
into
call
sar
sbb
mov
scas
xchg
mov
fnstcw
xor
inc
lock
lods
xor
xlat
inc
push
retf
repz
out
dec
in
adc
out
pop
add
push
inc
in
jmp
loopne
jle
pop
dec
add
xor
xchg
jae
pop
test
cmp
cmp
pop
or
dec
jae
push
(bad)
push
inc
fisub
mov
push
or
xchg
xchg
sar
je
jmp
movq
push
sbb
pop
cs
sub
int
cs
adc
pop
dec
test
mov
sahf
fisubr
push
push
or
jno
cmp
adc
in
lock
mov
jmp
xchg
outs
push
add
sbb
pushf
jg
sbb
mov
popf
movzx
and
neg
push
sbb
push
movs
in
adc
mov
sub
mov
jbe
call
std
jg
nop
mov
push
test
sub
enter
adc
inc
push
cmps
popa
mov
add
mov
ins
push
pop
outs
movs
sar
jle
xor
sbb
pop
ret
push
fdiv
jl
jge
mov
push
call
dec
pop
cmp
pop
xor
ins
pop
mov
jge
rol
pop
xchg
inc
loope
lds
pop
mov
sub
(bad)
jge
ret
mov
inc
adc
inc
lock
adc
add
je
sbb
mov
fcmovbe
xor
in
xor
mov
adc
outs
lea
jmp
inc
mov
or
sbb
add
mov
and
cmp
sbb
lea
mov
(bad)
(bad)
adc
dec
or
xor
mov
push
jmp
add
add
retf
adc
pop
nop
repnz
vmwrite
outs
mov
call
mov
movs
xor
sub
lds
cs
sbb
sti
push
int3
sar
ds
jle
aad
mov
jecxz
or
pop
adc
inc
sub
and
and
or
jmp
mov
sub
mov
inc
fadd
jne
push
push
jg
(bad)
pop
fwait
sbb
push
cli
mov
arpl
pop
or
add
nop
or
add
sub
push
fnstsw
or
imul
mov
lods
fs
mov
dec
movs
sub
lock
push
outs
cmp
and
sbb
cli
test
in
lea
cmp
mov
or
ret
nop
inc
aas
inc
add
jmp
pop
iret
sub
sub
ret
inc
ins
mov
shr
xchg
adc
jo
jnp
ret
inc
adc
mov
push
sbb
imul
cli
fidivr
pushf
dec
jnp
pop
and
jecxz
mov
jno
dec
or
pushf
mov
shr
inc
push
jb
arpl
pop
push
sbb
loop
push
retf
je
mov
aas
mov
xchg
sbb
lock
dec
xor
ins
stos
mov
push
bound
test
jle
pop
inc
pop
push
jbe
or
enter
and
or
sub
or
je
or
xor
sbb
outs
loopne
sbb
aad
add
popa
xchg
sub
outs
stc
sbb
sbb
jmp
call
and
add
add
or
jbe
or
mov
xor
add
and
pop
and
push
pop
xor
push
or
dec
mov
lods
daa
int
push
sbb
adc
js
adc
outs
inc
lods
das
inc
movs
out
call
sbb
xchg
mov
sbb
cli
pusha
push
mov
and
imul
aad
or
popa
add
push
loopne
adc
jne
add
dec
in
adc
push
(bad)
mov
shl
add
aad
mov
ja
inc
addr16
lds
js
mov
push
dec
sbb
mov
pop
out
pushf
rcr
(bad)
push
ins
ret
test
aad
outs
jno
sbb
aaa
jbe
lea
and
jo
imul
sbb
push
and
jne
fimul
jle
test
fdiv
jb
mov
add
xor
adc
xor
or
repz
push
pop
ret
sub
sahf
xchg
mov
jne
xchg
cmc
dec
sar
sahf
or
in
test
mov
or
pop
adc
xor
or
int3
mov
or
adc
adc
or
inc
fs
jl
sbb
sbb
and
jae
add
push
(bad)
imul
inc
push
inc
push
cmps
sub
or
xchg
mov
mov
dec
add
push
mov
popa
or
dec
sbb
imul
jmp
xchg
xor
dec
adc
push
adc
imul
repnz
repnz
push
sbb
iret
xor
sbb
inc
and
inc
pop
add
sub
cmp
or
jp
pusha
jo
adc
mov
and
pop
inc
add
inc
dec
inc
add
test
xor
sub
mov
lods
repnz
dec
ret
(bad)
clc
rcr
inc
inc
inc
add
dec
add
test
push
xor
or
jg
sbb
ds
cmp
dec
lods
cld
dec
sti
cld
test
test
je
lods
push
mov
mov
fwait
ss
dec
rcl
mov
cmc
cmp
mov
test
xchg
ror
cmc
test
mov
jg
pop
add
jecxz
or
cmp
jne
adc
jl
out
jnp
mov
sbb
push
pop
fs
dec
inc
xor
cmp
imul
les
jbe
(bad)
js
push
or
or
imul
mov
es
mov
std
ret
mov
push
aas
add
xchg
jl
xchg
inc
add
ret
jge
xchg
nop
dec
add
jg
call
or
dec
xchg
in
sbb
sbb
fstp
mov
ins
or
push
movs
retf
ror
jmp
idiv
pop
sbb
mov
loopne
inc
popf
dec
add
push
imul
xchg
ret
inc
or
or
xchg
xchg
push
or
inc
mov
(bad)
lock
addr16
add
test
cmp
jge
ds
rcr
shl
mov
mov
add
pop
jle
jae
fadd
dec
and
pop
mov
std
out
sbb
xchg
cmp
je
add
inc
cmp
or
in
adc
(bad)
fstp
jle
push
fld
and
xchg
cmc
push
lea
rcl
imul
leave
and
in
or
sub
pop
inc
cmp
adc
add
fdivr
movs
aas
lods
push
xchg
inc
addr16
icebp
dec
enter
ret
imul
or
cmp
sub
mov
scas
jb
je
add
test
mov
jb
and
mov
push
lds
sbb
add
mov
add
jmp
add
addr16
ret
cmp
cmp
test
lock
jne
icebp
push
dec
repz
in
or
jle
fsubr
jg
push
mov
lock
dec
(bad)
(bad)
inc
and
stc
cmp
fsubr
cmp
imul
fild
mov
ins
add
jmp
sub
fisttp
inc
cs
(bad)
inc
add
psubusb
mov
pop
pop
cmp
pop
call
lea
sti
push
das
cli
adc
sbb
inc
cmp
aam
pop
pushf
pop
adc
jmp
cmp
test
(bad)
mov
jmp
stc
dec
jmp
fwait
inc
cmp
lock
add
add
fidivr
rol
push
add
xchg
lahf
jnp
sbb
clc
pushf
inc
mov
push
(bad)
(bad)
ja
xlat
test
ret
or
repnz
pushf
scas
inc
jb
sbb
jns
fild
jmp
mov
loop
jae
je
or
add
inc
inc
mov
inc
in
fwait
inc
daa
mov
add
rol
loopne
inc
jmp
dec
and
rcl
cwde
je
xchg
xchg
fs
dec
cmp
jb
mov
loop
cmp
jne
mov
imul
and
(bad)
jmp
add
imul
ja
pop
mov
je
mov
jg
int3
or
xchg
cmp
je
into
add
pusha
add
xchg
mov
add
pushf
jecxz
xor
movs
scas
add
or
add
in
mov
or
cmp
int
das
cdq
add
inc
(bad)
mov
pop
push
cmc
add
inc
and
mov
pop
es
inc
push
pop
sub
(bad)
or
dec
add
pop
mov
out
push
fwait
test
das
xor
je
cmp
inc
pop
inc
pop
pop
push
pop
and
add
aaa
sub
mov
and
push
bound
dec
mul
cmp
dec
adc
xchg
sbb
add
je
push
cs
push
push
inc
push
popf
sbb
ror
add
stos
leave
push
popa
push
lea
mov
outs
dec
and
cli
and
xchg
movs
inc
cwde
xchg
bound
lods
lods
(bad)
cmp
cmp
retf
mov
popa
jb
ret
sbb
push
sbb
jecxz
mov
les
cmc
and
mov
inc
push
pop
movs
test
pushf
pop
xchg
pop
mov
pop
xchg
(bad)
enter
xor
cmp
sub
shl
push
mov
xlat
or
imul
mov
and
push
adc
sub
jo
ret
retf
inc
mov
shl
push
cmp
mov
pop
push
and
(bad)
mov
mov
mov
pop
pop
sbb
rcr
data16
imul
adc
mov
fisub
jns
pop
fsub
dec
arpl
jmp
je
adc
push
je
push
add
xor
push
xlat
inc
test
jmp
lods
call
xchg
(bad)
jmp
push
mov
div
mov
mov
sbb
dec
out
xor
sub
adc
push
pop
jo
sub
sbb
fidivr
mov
inc
add
inc
sub
loopne
or
or
dec
adc
sub
mov
sbb
push
sbb
aas
adc
loopne
mov
xchg
jns
adc
dec
dec
or
mov
pop
dec
inc
sbb
aaa
repnz
jne
div
test
in
into
xor
sbb
sbb
fdivr
sub
ss
in
cmp
cmp
push
and
lock
repnz
fnstsw
xor
(bad)
sbb
movs
and
push
cmp
or
mov
test
or
add
movaps
inc
and
inc
fdiv
or
in
pop
and
lea
mov
test
ret
ss
jl
pop
fist
or
mov
jle
rcl
jmp
and
sti
adc
fcomp
fstp
clc
rcl
jae
pop
xor
add
(bad)
mov
outs
mov
jl
xchg
mov
js
shl
or
xchg
mov
push
pop
lods
inc
shl
jl
xchg
and
aas
sbb
prefetchnta
mov
or
in
cvtps2pd
mov
xor
jmp
ja
or
jl
dec
xor
cli
xor
js
ins
or
adc
loope
dec
and
mov
jmp
sbb
adc
push
clc
push
hlt
(bad)
cwde
jl
or
pushf
movs
mov
jno
frstor
add
jne
or
mov
or
push
or
rcr
stc
sub
stos
imul
movs
push
aam
ins
and
sbb
dec
enter
ficom
sbb
push
rcl
popf
out
jge
cmp
mov
cli
cwde
mov
inc
push
add
daa
xor
add
ret
test
imul
pop
(bad)
data16
sbb
sar
sbb
xchg
ret
(bad)
jg
or
das
sub
dec
js
mov
push
pushf
movs
nop
ret
jg
ins
daa
and
or
enter
dec
push
dec
mov
rol
push
call
imul
addr16
push
in
(bad)
cmp
and
inc
pop
mov
or
aaa
cmp
add
sbb
or
in
cmp
adc
cmp
je
dec
dec
sti
dec
cs
xchg
lods
pop
jb
xchg
xchg
push
in
adc
or
aad
lods
test
out
out
call
inc
ja
je
pop
dec
outs
inc
ret
clc
jbe
xchg
adc
sub
mov
cmp
jne
inc
sbb
sbb
daa
inc
pop
shr
test
pop
add
or
stos
xor
test
and
mov
jmp
addr16
xchg
mov
aas
add
inc
rcr
push
sbb
xor
adc
jns
imul
push
ins
fimul
and
pop
and
lock
or
pop
and
cmp
xor
into
xor
ror
mov
pushf
gs
je
cmp
aaa
js
je
mov
ds
outs
lock
and
add
mov
adc
push
push
add
aaa
dec
xor
mov
inc
inc
call
pusha
ret
jecxz
xchg
xor
jb
loop
test
ret
retf
sbb
or
shr
pop
int3
ss
xchg
cld
xor
enter
repz
loop
pop
mov
aaa
repz
sub
int3
sub
nop
cli
jge
push
je
loope
sub
hlt
scas
and
fldpi
(bad)
pop
dec
je
cld
add
pop
dec
pop
push
lea
add
xchg
inc
fidiv
push
jbe
inc
idiv
cwde
cmp
rol
mov
dec
adc
and
cmps
or
or
and
imul
and
cwde
stc
dec
inc
or
mov
fnsave
cmc
xor
int3
sub
add
jne
test
add
in
bnd
in
shr
xchg
jl
rol
inc
cmp
cmp
xchg
push
sub
repz
cmps
(bad)
stc
jle
adc
lea
mov
ror
loopne
xor
push
jmp
add
or
ins
push
push
xor
shl
inc
xor
mov
mov
cmp
mov
mov
inc
sbb
jmp
adc
cmps
in
je
cmp
inc
push
push
cli
xor
call
mov
push
pop
xor
add
lea
and
sub
int3
push
dec
ror
push
jbe
(bad)
das
aam
mov
add
jp
leave
jne
mov
mov
mov
dec
jl
pop
jl
xchg
shl
add
aas
sbb
inc
jmp
adc
jmp
or
sbb
xchg
adc
add
gs
cmc
mov
jns
and
int
cdq
ins
cmp
cmps
inc
(bad)
pop
ret
or
clc
pop
inc
addr16
loop
rcl
shl
dec
in
xor
xor
inc
jg
sti
xor
imul
or
das
jle
pop
movs
ret
sub
shr
loopne
pushf
mov
test
bound
or
pop
movs
jmp
je
fld
ds
js
add
and
fwait
shl
ret
(bad)
out
sbb
xor
popa
xchg
sbb
nop
add
mov
and
xor
push
lea
cmp
push
ds
cs
push
push
add
jmp
mov
push
add
jns
imul
(bad)
xchg
out
sub
jne
pushf
pop
nop
cwde
xchg
popf
pushf
hlt
jp
sub
mov
cmp
pop
shl
sub
xchg
pop
jg
or
je
stos
and
sti
jge
xchg
mov
loop
aam
push
in
xor
pop
jmp
mov
cmp
arpl
add
and
or
ja
add
mov
dec
push
inc
dec
mov
gs
cli
or
and
jns
int
push
ss
cld
in
mov
xchg
pop
add
cmps
and
aas
cmp
loop
push
in
sub
das
jne
stc
add
dec
cmp
out
jne
and
shl
retf
mov
sbb
push
inc
js
jg
inc
dec
pop
add
cmp
loope
jo
scas
dec
aad
imul
or
inc
inc
lock
adc
cmp
xlat
out
xchg
fnstcw
dec
inc
inc
cmp
test
out
sub
inc
sbb
clc
cs
mov
sar
mov
enter
dec
leave
pop
mov
leave
fistp
push
jmp
sub
mov
jnp
sub
sub
cmps
cdq
add
and
add
xor
sbb
and
movs
xchg
adc
in
sbb
loope
or
shl
retf
push
lods
sub
xchg
out
mov
retf
sbb
inc
shl
push
or
into
pusha
nop
scas
pop
add
jle
or
test
or
sub
push
fimul
lods
adc
mov
(bad)
mov
mov
rcr
outs
stos
jnp
push
std
jmp
pop
sub
sti
lods
jp
call
jmp
aaa
aaa
jnp
pop
mov
mov
imul
mov
out
call
sbb
add
or
push
and
dec
push
enter
loopne
push
mov
movs
adc
call
xchg
xlat
xchg
push
ret
or
cmp
fdiv
dec
push
cmps
jle
jne
inc
add
add
outs
adc
push
stos
ret
xlat
mov
mov
xchg
add
daa
inc
arpl
scas
cs
cmp
cmp
(bad)
jle
pop
xchg
add
loopne
adc
add
pop
add
cmp
out
leave
shl
inc
imul
lea
jo
cmp
add
and
ret
into
push
or
push
xlat
inc
push
push
retf
pusha
ror
cmp
lds
(bad)
add
outs
or
pop
add
popf
inc
xchg
add
cmc
cmc
dec
cwde
add
push
pusha
jl
cdq
mov
add
add
cmp
cld
push
jb
adc
sub
jge
outs
jnp
dec
ds
pop
jns
xor
jne
inc
inc
ja
jmp
ins
or
inc
dec
ds
fsubrp
add
add
jl
push
jmp
adc
stos
popf
fldenv
jnp
cmp
jae
mov
fnstcw
mov
pop
cmp
les
inc
cmp
jle
cmp
cmp
inc
fimul
cmp
aaa
aas
leave
cmp
shr
mov
mov
dec
push
in
fnsave
test
das
clts
stos
add
inc
jmp
dec
inc
and
or
test
call
jge
das
cmp
xor
add
jg
or
inc
clc
test
fld
push
add
shl
fadd
or
fisttp
stos
(bad)
xchg
xor
push
xor
dec
push
ins
ficom
enter
pusha
jmp
sub
cmp
dec
mov
sti
imul
cld
stos
(bad)
xchg
xchg
cwde
lea
movsx
inc
or
inc
and
cmp
mov
ins
jns
xor
inc
mov
add
xchg
loopne
push
loop
into
cli
mov
enter
daa
movs
jb
xchg
mov
lea
sub
unpcklps
mov
aaa
sbb
loop
and
xchg
sub
dec
mov
inc
fnstsw
or
push
push
jg
adc
inc
sub
dec
xor
xor
jl
retf
pop
xor
cs
jecxz
sub
xchg
es
imul
inc
jle
stos
sub
int
ret
arpl
xor
sar
jno
or
inc
mov
add
fistp
add
push
cmp
addr16
adc
xchg
xor
jl
nop
clc
(bad)
ror
pop
mov
mov
lods
or
fist
jge
add
add
je
pop
lock
arpl
dec
push
sbb
or
xchg
stos
pop
scas
and
aas
add
(bad)
into
dec
cmp
cdq
sub
add
inc
dec
scas
pop
and
add
inc
push
repz
jge
in
push
lods
clc
test
jg
je
inc
inc
xor
pop
jns
and
shl
call
dec
xor
push
add
out
lahf
push
in
ret
aas
mov
adc
xor
ins
daa
shr
repnz
and
and
in
sub
ficomp
fcomp
push
push
mov
mov
iret
arpl
je
mov
ret
jl
loopne
mov
sub
popf
push
add
pop
add
and
sahf
out
loopne
mov
rcr
test
inc
push
je
add
dec
mov
cmp
popa
xor
inc
leave
xlat
mov
in
cmps
add
add
xor
in
leave
inc
dec
and
and
and
js
outs
sub
add
retf
add
fs
jns
jge
jmp
loope
scas
sbb
add
mov
jne
(bad)
push
pop
loopne
xchg
pop
scas
jp
pop
call
cli
cmps
ins
pop
fldcw
shr
(bad)
ja
ins
sahf
mov
repz
sbb
xor
das
or
sub
in
mov
and
ja
jo
mov
jns
adc
test
xchg
ja
scas
call
xor
fsubr
jb
leave
add
pop
test
mov
sub
(bad)
(bad)
stos
sub
adc
aaa
iret
jl
xlat
jne
(bad)
(bad)
cld
ret
cmp
aam
adc
in
popa
test
fisttp
aad
inc
xor
jecxz
test
and
jle
and
adc
jne
dec
lods
sti
rol
mov
and
sbb
cmp
cdq
sbb
das
sub
push
repnz
(bad)
js
ins
sbb
sbb
mov
jns
shr
or
mov
push
lahf
cld
xor
test
sbb
je
and
jmp
out
sbb
and
and
inc
mov
outs
push
or
bound
add
inc
ror
dec
push
enter
pop
cmp
js
xor
out
mov
inc
pop
add
and
leave
xchg
sub
jg
nop
pop
enter
sbb
inc
and
sub
repnz
xlat
sbb
leave
sbb
outs
mov
retf
add
pop
inc
nop
push
lock
aas
jg
daa
lea
inc
stos
add
adc
inc
adc
jb
sbb
cld
pop
icebp
pop
xchg
in
inc
jl
ins
add
in
cmps
add
es
loop
and
jo
cmc
cmp
or
pusha
inc
dec
inc
xchg
inc
ins
ins
pop
pusha
dec
mov
jmp
add
sar
fs
stos
jne
pop
rcl
imul
ror
test
xor
rol
mov
leave
push
jae
cmp
mov
scas
loopne
mov
dec
shr
pusha
xor
and
cmp
push
repnz
xchg
pop
iret
clc
add
jne
sub
and
movs
add
(bad)
adc
aas
sbb
in
rcl
jbe
inc
xlat
or
xchg
inc
add
and
push
dec
and
push
adc
inc
adc
cwde
xor
int
cwde
es
cmp
dec
repz
stos
out
stos
add
repnz
sbb
dec
or
inc
nop
jnp
add
jecxz
pop
cmp
sahf
in
dec
add
or
inc
mov
dec
loopne
pop
movs
(bad)
pop
out
loopne
in
cmp
pop
jb
adc
jg
sbb
je
jbe
or
inc
mov
xchg
(bad)
add
jns
or
mov
icebp
enter
test
adc
test
adc
in
pop
ja
or
(bad)
adc
je
ret
imul
in
jmp
and
jmp
fisubr
jp
adc
jnp
push
cmp
or
jg
and
pop
ins
nop
stos
push
dec
jg
add
adc
inc
pop
inc
or
enter
sbb
imul
gs
adc
outs
jns
push
jecxz
and
adc
cmp
jmp
push
fnstenv
fadd
adc
ret
or
sub
and
leave
ret
jecxz
or
jl
jns
inc
jl
or
pop
jge
xchg
push
dec
or
cmp
xor
inc
add
enter
pop
fs
jmp
inc
sbb
stos
test
adc
xor
inc
adc
div
cdq
repnz
idiv
lds
and
dec
inc
add
dec
js
xor
lods
xchg
cs
adc
cs
push
cmp
inc
sub
pop
test
fnstcw
push
loope
(bad)
cmc
ror
jge
loopne
sbb
jbe
mov
mov
cs
in
push
mov
pop
loopne
shl
jg
or
out
add
or
push
push
cwde
loop
sar
sbb
dec
pop
loope
sbb
stos
jl
jle
mov
or
pop
lds
add
sub
hlt
xor
inc
sub
inc
add
test
cmp
mov
aaa
xor
sub
add
or
les
add
je
ret
ja
outs
cmp
scas
xchg
aaa
mov
mov
and
pushf
stos
pop
ret
mov
jae
jle
inc
adc
cmps
push
je
sub
or
push
jmp
adc
cmp
add
jne
nop
adc
(bad)
into
or
add
sbb
lods
leave
add
je
loope
in
cmp
sbb
lods
inc
cmps
cmps
cmps
loopne
arpl
adc
pushf
sti
mov
sub
add
mov
add
je
add
int
ret
cmp
jecxz
scas
in
adc
add
xor
(bad)
(bad)
scas
push
cmps
loopne
popf
in
int
cld
and
dec
sbb
sbb
movs
and
sbb
fild
dec
test
or
fs
inc
cmps
and
imul
add
in
jb
inc
sub
sahf
aas
ror
jl
or
inc
test
add
dec
leave
outs
cwde
add
add
or
and
inc
jno
push
jbe
add
inc
jo
in
cli
inc
inc
cmp
xlat
push
ret
dec
test
or
dec
enter
jmp
pop
lea
pop
ds
add
lods
inc
or
mov
icebp
movs
pusha
inc
inc
je
xlat
and
sub
add
in
shl
dec
xor
jns
neg
xor
loop
mov
push
mov
add
add
inc
ret
add
xchg
sub
loope
add
test
aas
pop
mov
add
sbb
jmp
add
cmc
in
ret
jle
cmps
push
jns
retf
add
xchg
je
enter
loopne
jno
push
adc
retf
mov
ret
pop
pushf
jge
lahf
daa
jmp
lea
mov
adc
push
sub
mov
mov
nop
push
pop
mov
xchg
and
adc
sbb
bswap
movs
pop
push
lods
inc
rol
in
and
fwait
aad
jae
or
or
ins
add
add
adc
mov
sbb
leave
data16
ret
push
jmp
xchg
scas
fidivr
inc
fsub
add
icebp
sbb
adc
or
in
cmp
jl
repnz
push
nop
daa
test
add
dec
mov
(bad)
std
mov
and
xor
bound
dec
jmp
pop
jge
or
mov
mov
adc
add
nop
mov
push
lea
jns
inc
xchg
inc
ja
adc
neg
int
mov
mov
push
lea
or
ret
dec
mov
mov
ret
int3
pop
push
scas
jl
adc
dec
sbb
cmp
mov
mov
xchg
pop
test
movs
inc
jmp
push
out
into
cmp
je
mov
pop
mov
sub
fisubr
lods
cmp
fwait
push
push
mov
lds
xor
rcr
arpl
inc
or
lds
mov
adc
mov
cmps
add
test
nop
sbb
fs
pop
lock
jne
and
movs
pop
cli
and
cmp
jmp
je
adc
push
sbb
xor
jle
(bad)
or
sub
cmp
leave
add
mov
push
in
cmp
jns
sbb
(bad)
mov
cmp
ins
xor
dec
push
sbb
xor
dec
mov
push
adc
push
(bad)
push
shl
mov
add
dec
addr16
push
cmps
inc
movs
inc
pop
xor
cmps
aam
ja
inc
rol
lods
add
adc
adc
xchg
clc
sub
pop
cmp
inc
nop
cdq
mov
aaa
adc
xchg
sub
call
mov
mov
ror
xor
in
cmps
imul
add
push
mov
sbb
mov
inc
xchg
shl
out
cdq
rol
rcl
push
or
inc
pop
jmp
mov
mov
(bad)
pusha
adc
xchg
sbb
inc
jmp
inc
or
push
cwde
add
or
das
dec
cld
gs
mov
ret
xchg
adc
das
sub
cmp
ret
xor
adc
mov
sbb
xor
mov
shl
add
(bad)
(bad)
hlt
xor
or
and
push
xlat
adc
add
mov
mov
icebp
nop
push
mov
and
xchg
add
inc
dec
or
add
cmp
push
out
dec
test
dec
mov
add
ins
mov
push
xor
push
rol
rcl
cmp
cmp
mul
mov
jl
inc
ins
ins
add
jne
pusha
outs
pop
pop
adc
fmul
test
adc
add
dec
mov
rol
jmp
pushf
sub
icebp
and
cs
and
jg
jge
xchg
sar
bound
add
add
add
es
jle
jmp
(bad)
out
daa
dec
pusha
push
stos
scas
out
je
ret
test
push
and
mov
cmp
sbb
and
cmp
add
lods
lahf
xchg
jo
mov
and
push
add
and
and
rol
movs
xor
jns
les
mov
xor
es
ret
mov
dec
push
dec
fmul
push
outs
add
aas
adc
lock
and
es
ja
and
dec
out
push
mov
lea
dec
sbb
xchg
retf
inc
aaa
inc
jbe
pop
push
pusha
xchg
imul
xchg
or
add
out
adc
jl
fsub
jg
pop
mov
sbb
mov
inc
std
(bad)
mov
adc
int3
rcl
ret
or
shr
mov
(bad)
in
push
shl
dec
sub
(bad)
fisub
js
(bad)
clc
pop
jb
stc
or
mov
mov
and
sub
ret
ror
js
lea
mov
jmp
(bad)
hlt
dec
cmp
sti
cdq
rcl
cmp
shr
daa
outs
sti
(bad)
jmp
xchg
push
enter
call
sti
mov
test
ds
jns
or
mov
stos
(bad)
mov
in
adc
int3
sbb
cli
cli
repz
pop
loope
shl
outs
mov
lds
adc
retf
mov
cmps
cmps
movs
mov
add
inc
mov
lods
es
fwait
or
(bad)
clc
rcl
cmps
idiv
(bad)
fldcw
lea
sub
in
shl
rol
add
int
retf
ror
add
and
mov
mov
dec
add
mov
xchg
ret
add
inc
mov
adc
mov
cld
out
or
jmp
inc
enter
pop
adc
popa
and
loop
call
inc
in
jl
push
jp
xor
mov
xchg
dec
mov
and
mov
lahf
jle
xor
jmp
loope
div
fist
vcvttss2si
and
inc
(bad)
loop
push
arpl
es
pusha
inc
movs
repnz
push
cli
jno
pop
dec
cmp
les
(bad)
xchg
ins
add
inc
lods
sbb
pop
les
jae
div
(bad)
and
adc
push
je
retf
mov
or
sahf
cmps
push
dec
dec
sbb
sbb
add
sbb
xor
loopne
bound
arpl
xor
rcr
lahf
xchg
into
sub
adc
(bad)
daa
jnp
mov
or
pop
cmc
xchg
mov
push
push
mov
jl
inc
jle
or
jge
test
leave
sahf
fld
pop
mov
mov
les
xchg
sub
mov
stos
int
mov
dec
movs
outs
imul
sub
push
xor
cmp
scas
mov
xchg
cmp
pop
xor
je
repz
pop
mov
in
sbb
jo
cmp
inc
or
stos
or
outs
repz
mov
test
and
mov
jnp
pop
pop
loope
inc
repnz
repz
not
sub
push
and
stos
test
cmp
jns
mov
repnz
mov
sbb
lods
icebp
arpl
stos
jle
sub
sub
adc
ss
test
dec
xor
mov
pop
fs
icebp
or
hlt
jno
icebp
and
outs
pop
movs
or
fsubr
mov
xchg
sar
shl
loop
sar
mov
ret
aad
add
jecxz
call
cmps
arpl
cmp
daa
or
out
(bad)
(bad)
fsubr
test
xchg
push
sub
add
add
sbb
or
scas
push
(bad)
(bad)
(bad)
jmp
dec
mov
add
popa
hlt
sbb
lods
inc
loopne
cmps
je
icebp
popa
or
loop
xchg
add
in
sub
(bad)
jmp
adc
adc
cmp
fstp
mov
and
sbb
push
ror
adc
and
(bad)
out
popa
mov
pop
jno
sub
sub
les
cmp
scas
leave
add
scas
sub
mov
push
lock
out
pop
lock
fcom
pop
test
pop
jnp
sbb
or
test
push
mov
cs
pop
xor
add
and
in
nop
jne
dec
ins
pop
idiv
add
xchg
in
inc
aaa
mov
into
inc
jmp
xchg
in
jge
push
mov
mov
jl
lods
pushf
push
pop
ret
jge
xchg
jg
xor
je
mov
push
loope
nop
mov
inc
outs
lahf
out
cmp
dec
ins
sub
xor
nop
daa
xchg
data16
sbb
in
sbb
push
pusha
adc
in
mov
imul
cmp
xlat
mov
or
ret
sub
inc
aaa
and
out
and
test
or
std
jmp
mov
les
inc
sub
xchg
cmp
test
sbb
sbb
dec
loop
clc
and
mov
add
add
cld
hlt
outs
cmps
dec
loope
pop
sbb
inc
fwait
sahf
(bad)
jmp
fiadd
jmp
dec
inc
dec
push
and
xchg
add
push
jbe
xchg
inc
cmp
test
iret
jecxz
mov
or
jmp
mov
jmp
xchg
out
sbb
sbb
mov
cmp
sbb
or
jle
pop
jb
add
sti
nop
repz
rcl
push
and
push
dec
mov
mov
das
cmps
mov
cmps
cmps
mov
and
movs
mov
outs
test
pop
stos
push
sbb
dec
sti
xor
pop
pushf
push
test
sahf
jbe
sti
xor
mov
mov
cmp
int
jns
push
or
cmp
repz
ins
jp
mov
cmps
xor
push
bound
ins
ss
and
mov
lods
stc
fistp
popf
cmp
shl
out
jnp
outs
sahf
(bad)
push
sub
xchg
inc
dec
mov
sahf
push
mov
lahf
fsub
lds
je
idiv
jle
cwde
hlt
es
fldcw
test
cld
sub
leave
inc
inc
push
mov
adc
push
pop
sbb
sbb
add
sbb
stc
pop
(bad)
xchg
and
and
sub
sub
ins
repz
xor
xor
xor
cmp
cmp
jg
ds
inc
inc
inc
ss
inc
nop
movs
jnp
ss
xchg
(bad)
lods
popf
mov
fs
mov
(bad)
ds
repz
jae
adc
xchg
iret
shr
(bad)
ins
ss
int
ret
enter
jne
xor
cmps
fstp
xchg
(bad)
push
int3
push
imul
jg
iret
jnp
or
push
pop
lahf
push
xlat
sbb
push
ret
loopne
jnp
push
aas
retf
push
add
ins
rol
rol
sub
xor
mov
aam
cld
int3
test
adc
push
into
call
cmp
rol
jb
rcl
fldcw
adc
jge
jg
push
sub
push
ins
cmps
(bad)
cmp
sar
movs
ret
sbb
repnz
popf
out
imul
in
mov
icebp
dec
sti
repz
cmp
repz
push
sbb
aaa
inc
push
iret
jnp
xchg
jg
push
jae
xchg
mov
icebp
int
fpatan
aas
fs
dec
repz
rol
lods
or
add
xchg
sub
cmp
or
push
push
(bad)
mov
test
add
lds
mov
push
mov
pop
ret
jle
mov
jle
inc
sbb
sub
popf
add
add
jmp
imul
pop
sahf
ror
test
xchg
cmp
ja
je
cli
jle
hlt
cmc
xchg
pop
or
rol
xchg
ret
pop
inc
std
push
jmp
imul
lock
int3
cs
and
add
push
add
out
cmp
test
les
shl
add
inc
add
cdq
mov
ins
into
repz
outs
mov
xchg
mov
add
add
push
popf
daa
mov
add
adc
mov
push
jb
daa
or
adc
sbb
push
jns
clc
sbb
fs
cmp
jbe
jle
cli
or
pop
loope
shr
and
call
mov
push
pand
lds
jmp
adc
fimul
xchg
es
inc
push
aam
(bad)
mov
shl
push
or
push
shl
and
mov
fdivr
je
cmp
je
lock
(bad)
inc
je
sbb
jmp
cmp
jne
test
jne
jmp
jmp
mov
ficom
push
push
clc
cmp
repz
in
aaa
mov
xor
add
push
push
imul
stc
daa
or
cdq
mov
xor
gs
xor
fwait
stc
cmp
mov
xor
je
cmp
je
or
mov
add
push
add
ret
mov
jle
sbb
js
or
adc
les
scas
ins
test
shr
es
es
sbb
mov
jecxz
ss
(bad)
test
stc
push
inc
or
push
and
verr
sbb
jne
mov
mov
pop
add
and
js
add
mov
sar
data16
sbb
cmp
push
pop
out
mov
popf
add
add
pop
mov
mov
sar
jmp
cmp
or
popa
je
(bad)
mov
stos
push
in
xchg
mov
inc
adc
add
daa
dec
enter
add
loopne
sar
xor
lahf
cmp
pushf
ss
bound
cdq
jl
or
push
jmp
inc
or
adc
cmc
adc
sub
(bad)
std
push
rol
jl
or
or
jle
je
std
in
add
ret
or
sub
mov
js
push
dec
retf
xor
stos
test
sub
daa
add
ins
xor
cmp
add
aas
sbb
(bad)
jmp
rol
inc
sub
push
add
pusha
and
xlat
fwait
jno
cli
lea
js
ja
add
inc
loop
inc
fisttp
pop
popa
cmp
cmp
rol
xlat
and
push
dec
sbb
mov
or
push
call
in
(bad)
mov
add
retf
fldcw
inc
mov
loopne
xor
mov
arpl
es
dec
pop
sub
into
sub
adc
(bad)
jle
shl
sub
adc
xchg
push
cmp
xchg
shl
push
mov
lea
mov
fdiv
pop
fidiv
jae
retf
std
mov
jg
sub
mov
das
nop
sbb
std
jg
pop
push
arpl
test
sub
jne
in
int
mov
pmulhw
fld
sar
lods
add
mov
cmps
pop
in
adc
lods
adc
and
jg
je
sahf
dec
loop
adc
mov
jle
jne
mov
jo
icebp
pop
sbb
das
imul
add
sub
iret
imul
add
or
bound
and
push
sahf
das
std
ins
es
test
sub
jl
jle
dec
jmp
cdq
inc
adc
sub
aas
xchg
jns
lea
inc
pop
xor
pop
or
adc
or
mov
jns
or
btc
sbb
jbe
adc
repnz
sbb
inc
push
add
leave
test
lahf
addr16
push
add
in
lds
xor
xchg
adc
aas
mov
pop
icebp
add
jno
xchg
(bad)
dec
popa
jmp
push
call
push
inc
pop
das
xchg
inc
cmps
arpl
inc
xchg
xchg
(bad)
(bad)
arpl
jecxz
sub
ja
movs
cmp
pop
(bad)
xor
aas
xchg
dec
cli
movs
imul
addr16
cs
pop
in
push
jmp
je
fstp
cld
int
pop
call
and
in
jb
rcl
dec
add
pop
sti
and
retf
xchg
sti
repnz
jmp
test
jge
jmp
sub
mul
jge
jo
mov
fcom
scas
cdq
and
leave
clc
inc
jmp
test
xor
or
jp
xor
jl
mov
add
outs
adc
dec
clc
sub
sub
adc
iret
repz
gs
mov
lahf
inc
fwait
add
(bad)
mov
cld
xchg
add
lods
or
pop
adc
jns
scas
mov
js
out
sahf
push
xor
mov
xchg
in
xor
or
sub
out
push
lea
mov
popa
lock
test
pop
xor
add
or
xchg
or
add
mov
stos
out
mov
and
cmp
push
and
add
pop
retf
mov
dec
inc
adc
push
or
cmp
std
mov
adc
lea
sar
mov
mov
add
mov
and
mov
jb
mov
inc
mov
mov
adc
push
add
jmp
or
lock
mov
jno
fs
(bad)
mov
push
mov
add
inc
sbb
add
pop
repz
add
dec
inc
xchg
pop
jne
mov
push
push
icebp
lods
mov
dec
jnp
xchg
adc
jb
add
xor
pop
adc
pop
mov
loopne
inc
mov
in
add
or
cmp
or
bound
add
xchg
(bad)
jnp
xchg
rcr
mov
jne
fimul
jle
retf
cmp
je
or
pop
xchg
pusha
jo
mov
sti
mov
in
in
sbb
or
or
movs
cdq
add
jb
int3
gs
jmp
xor
mov
cmp
add
xchg
inc
je
pop
nop
in
pop
jle
push
push
aam
inc
add
arpl
ds
pop
jmp
mov
add
fistp
xchg
call
mov
pop
(bad)
stc
cmp
repz
outs
inc
pop
push
sti
push
sub
dec
mov
or
add
pop
sub
add
ds
sbb
and
or
lods
cdq
ficom
(bad)
push
or
add
cmps
stc
add
mov
scas
sub
call
je
and
lea
adc
fwait
push
sub
push
push
mov
jg
sbb
add
mov
fsubr
jno
mov
loop
out
add
jle
and
js
jge
aad
mov
arpl
je
jnp
sbb
jl
adc
fnstcw
pop
add
push
lea
mov
adc
push
inc
add
das
mov
lods
sbb
push
xor
sbb
daa
popa
add
scas
push
sub
xor
sbb
movs
and
das
jle
sub
cmp
xor
data16
in
xor
mov
push
stos
push
and
jbe
setno
adc
imul
aam
je
push
jl
cli
inc
cmp
jne
adc
aad
add
fsubr
push
add
push
test
ret
push
ret
cmp
push
dec
push
add
add
ja
pusha
popa
pop
out
or
cmc
mov
rol
mov
push
cmp
popa
or
and
jo
inc
popa
inc
mov
pusha
and
or
xor
cwde
add
mov
jno
bound
mov
cmp
jb
adc
push
jge
les
mov
fcomp
lds
push
mov
cmp
loopne
sbb
out
mov
shr
push
pop
sub
call
pop
ja
fadd
sub
rol
movs
adc
adc
cmp
xor
cmp
mov
repz
rcl
mov
sub
or
pop
stos
into
dec
push
cmp
out
add
add
punpckhbw
mov
cs
add
fisubr
and
inc
js
jle
xor
and
mov
adc
aaa
push
sub
(bad)
ss
cmp
ret
arpl
xchg
or
sbb
fadd
sar
push
ret
sub
sub
call
cmp
push
bound
sti
out
inc
pop
std
xor
sub
sub
mov
imul
push
pop
sbb
rcl
jns
pop
push
sub
call
push
iret
call
push
enter
loopne
lds
shl
jecxz
ins
mov
sub
jle
add
sahf
pop
xor
sub
(bad)
jnp
mov
add
cs
loopne
xor
dec
xor
and
scas
add
cmp
add
add
add
and
push
sub
mov
aad
pop
sbb
jmp
jmp
xchg
popaw
add
jp
dec
adc
addr16
mov
ins
mov
xchg
pop
or
pop
pop
mov
retf
adc
cmp
(bad)
adc
adc
stc
fiadd
inc
pushf
bound
mov
jne
ret
ret
or
xchg
sbb
sbb
add
xor
add
imul
xchg
mov
dec
add
add
dec
or
sbb
mov
and
add
inc
sahf
addr16
or
jne
sub
sub
iret
test
int
mov
mov
dec
loop
push
push
xor
push
test
out
or
sub
jne
xchg
cld
or
push
jb
mov
fucomp
repnz
inc
dec
fnsave
ror
aad
js
rcr
fldcw
rcl
pop
ins
or
xor
mov
fistp
xor
or
pop
mov
push
in
les
imul
push
ss
fs
jbe
sbb
add
adc
sub
and
jl
push
dec
popa
or
push
mov
adc
jge
mov
sbb
xor
or
dec
add
dec
and
pop
nop
adc
ds
cmps
push
(bad)
sbb
adc
mov
add
add
dec
jbe
loopne
(bad)
lock
loop
mov
fcomi
ret
outs
mov
imul
jl
mov
cmp
ror
mov
loop
cmp
push
lea
mov
mov
mov
popf
cmp
lahf
jne
cli
pop
cmp
je
mov
adc
dec
call
xchg
shl
xor
or
not
test
inc
cmp
jle
lods
pusha
pusha
push
scas
mov
xor
push
cdq
fs
push
stos
cmps
ja
add
call
inc
add
cld
sub
xor
push
push
fcomp
test
push
std
pop
inc
push
ror
loop
pop
dec
adc
xchg
jnp
xchg
push
imul
cmp
push
xor
(bad)
or
test
push
stos
mov
stc
jp
mov
xchg
xlat
nop
xor
xchg
lods
je
pop
or
scas
(bad)
fcomp
xchg
mov
das
sbb
outs
adc
sub
call
fwait
dec
imul
ret
cmp
or
push
imul
add
xchg
fbld
sbb
stos
add
adc
push
mov
dec
xor
adc
fiadd
sub
and
push
push
mov
push
xchg
lds
sub
pop
adc
push
and
(bad)
and
int
call
jl
ss
push
cmp
jb
inc
or
sub
mov
dec
or
stc
mov
pop
pop
xor
popf
cwde
dec
mov
arpl
jle
ss
enter
or
mov
add
hlt
mov
jl
xchg
fs
je
dec
into
mov
xor
xor
aaa
add
sub
sub
sub
cmp
test
cmp
das
sar
lock
jl
sub
movs
add
mov
cmp
fwait
push
push
test
and
dec
jle
pop
add
jge
inc
lea
cmp
inc
sub
cmp
or
jle
dec
cmp
mov
jg
jg
pushf
sbb
or
inc
adc
mov
mov
push
mov
jne
rcl
test
shl
adc
xchg
jbe
or
push
sub
and
ss
and
mov
mov
mov
ret
push
mov
mov
aaa
mov
push
push
jne
(bad)
adc
hlt
xor
push
ss
repz
clc
enter
fsubr
sbb
mov
sahf
mov
scas
jl
dec
add
xor
ins
adc
inc
jo
or
fbstp
outs
and
push
push
mov
imul
sub
adc
or
jno
inc
xchg
ret
mov
clc
dec
icebp
adc
xlat
cmp
add
add
lea
add
js
nop
or
test
jne
dec
loope
sbb
push
push
mov
add
inc
into
ss
inc
sbb
cmp
inc
cmp
push
mov
ret
(bad)
outs
mov
into
mov
adc
pop
mov
cwde
in
add
or
mov
loope
ss
jnp
popf
int
scas
mov
sub
test
mov
lea
leave
rol
fcom
or
imul
jmp
test
add
cwde
arpl
push
mov
ins
out
mov
out
and
ret
(bad)
sbb
in
pop
ret
popf
repz
jmp
adc
ins
xchg
add
sub
retf
pop
adc
iret
adc
stos
out
adc
jns
fisttp
sub
xor
clc
aaa
ss
je
cmp
and
sahf
add
je
or
pop
mov
add
jne
sbb
lea
xchg
clc
jbe
mov
je
push
push
mov
leave
aaa
or
pop
std
jbe
mov
add
push
push
mov
outs
int
scas
pop
push
dec
pop
mov
dec
lods
cmp
test
std
jnp
cmp
inc
fidiv
sub
cmp
sub
(bad)
bound
jmp
xor
std
mov
out
or
or
sahf
cmp
out
sahf
mov
sbb
push
xchg
add
push
add
or
out
sub
adc
cmp
mov
daa
mov
je
add
adc
sar
pusha
cmp
sub
fmul
test
in
shl
sub
add
dec
or
add
mov
pop
adc
push
nop
clc
mov
cmp
or
add
inc
(bad)
ror
jno
sub
inc
es
jmp
loope
jecxz
inc
rol
and
mov
sub
cmp
pop
mov
repnz
push
dec
or
pop
push
adc
stc
and
adc
cwde
stc
and
add
xor
xor
cmp
shl
dec
aad
or
cmp
pusha
jne
inc
cmp
jbe
daa
sub
lods
or
je
sbb
cwde
xor
or
or
pop
and
sbb
push
pop
stos
cmp
inc
fld
and
add
ins
jl
adc
in
lods
and
sub
mov
sub
test
jbe
mov
jnp
ret
jge
push
rol
repnz
or
sbb
xor
and
rol
cmp
outs
outs
ret
rcr
mov
aam
pop
ja
ins
das
xor
push
cmp
mov
mov
xor
cmp
neg
je
call
cmp
or
mov
mov
push
push
mov
ja
sbb
cli
loop
jnp
or
push
test
sbb
xor
jg
or
or
mov
push
stos
push
lea
ret
cmps
cdq
mov
jae
(bad)
sbb
leave
imul
mov
or
adc
jo
jne
int
dec
cmp
and
xor
fimul
out
outs
sbb
sbb
mov
or
popf
jge
or
dec
adc
inc
inc
fmul
push
mov
adc
jl
and
lods
cs
xchg
(bad)
or
iret
or
push
mov
mov
sub
repz
aam
sub
xor
cmp
aaa
mov
mov
ror
pop
ins
out
das
gs
jle
enter
loope
jecxz
call
mov
inc
push
jmp
inc
and
and
push
or
pop
jp
sbb
xor
je
je
inc
xchg
inc
inc
jnp
ja
pop
mov
dec
pop
xchg
sub
dec
call
sahf
ins
xor
and
inc
js
sub
cmp
inc
daa
or
add
cmp
and
ror
mov
repz
xor
sub
adc
mov
jo
(bad)
jmp
ror
add
push
adc
add
sub
adc
push
mov
out
fldenv
or
add
fsubr
add
lods
push
imul
in
pop
xchg
push
pop
jne
out
les
mov
bound
data16
lea
shr
add
pop
sub
jecxz
sbb
add
push
outs
cmp
add
pusha
js
mov
xor
mov
inc
(bad)
cmp
rcl
and
and
inc
inc
push
mov
ret
inc
and
mov
xchg
sbb
cmp
sbb
fadd
cdq
popf
jge
cwde
loop
nop
or
push
lods
sub
stos
lahf
stos
add
push
and
push
push
push
cmps
xchg
mov
push
mov
and
xor
push
aaa
sub
sbb
add
xor
clc
shl
push
xchg
cwde
jmp
dec
adc
mov
daa
push
test
push
in
pusha
push
sbb
ss
ret
call
add
and
push
jns
adc
xor
push
inc
dec
mov
mov
retf
fstp
(bad)
adc
jg
daa
clc
adc
cmp
xor
shr
or
sbb
ds
mov
and
adc
inc
cmp
pop
inc
push
mov
mov
mov
int
loope
les
mov
iret
or
pop
hlt
sub
sub
adc
pop
push
mov
xchg
ror
add
inc
add
mov
sub
add
push
and
aas
or
sub
xchg
and
icebp
mov
xor
aad
add
enter
jp
mov
pop
lock
popf
adc
sbb
jno
adc
(bad)
stc
lods
inc
or
xchg
mov
mov
pop
pop
xor
test
inc
lock
int
or
sub
push
les
push
jns
ja
adc
or
pop
mov
inc
xchg
xor
inc
pop
sub
loope
add
pop
or
and
test
add
sub
arpl
ret
jmp
mov
loopne
das
sub
add
xlat
pop
or
bound
push
jl
or
xor
or
xchg
push
lea
inc
jne
inc
inc
dec
jne
sbb
jns
jno
xor
ins
ds
sbb
add
cmp
je
(bad)
fldz
div
xor
mov
jmp
inc
inc
je
adc
dec
sbb
add
xchg
fisub
retf
push
push
add
jecxz
and
xor
inc
add
xchg
xor
pop
out
stc
push
mov
push
dec
mov
xchg
mov
push
pop
xchg
add
loopne
xor
sub
cmp
xlat
cmp
xchg
sbb
test
xchg
lea
pop
outs
push
push
cmp
and
shl
outs
cmp
and
nop
daa
loope
inc
(bad)
ret
dec
pop
das
test
mov
xor
cmp
enter
or
fcom
les
add
sbb
and
cmp
lds
icebp
cmp
inc
cwde
mov
(bad)
(bad)
cmp
or
sahf
mov
test
pushf
adc
aaa
push
sti
xor
mov
adc
loopne
pop
jmp
adc
aaa
xor
daa
add
loopne
nop
push
sti
push
dec
in
sar
push
lea
shr
sub
rol
mov
std
jl
rol
daa
es
js
and
add
mov
(bad)
popa
nop
and
dec
inc
adc
pop
ins
mov
mov
mov
and
sub
ja
add
adc
add
dec
and
test
daa
mov
push
pushf
add
dec
bnd
mov
loop
dec
(bad)
leave
mov
stos
dec
scas
inc
sub
mov
or
mov
jbe
add
inc
dec
loop
dec
or
enter
adc
lock
call
xchg
or
imul
addr16
xor
inc
fild
ins
scas
jmp
push
sbb
pop
mov
jl
mov
outs
test
jne
cmp
adc
add
arpl
cmc
sbb
or
lods
pushf
push
and
js
pop
sbb
rcl
outs
adc
rol
mov
clc
sbb
adc
mov
icebp
pop
mov
in
push
dec
pop
cmp
or
(bad)
jmp
mov
jmp
push
cmc
push
or
sub
pop
xchg
push
push
shl
retf
cmp
das
add
ins
sub
and
pop
and
xchg
adc
rcr
mov
into
jl
or
jno
dec
inc
add
mov
or
cmps
push
or
loopne
pop
loop
push
jo
fmul
pusha
add
(bad)
mov
dec
mov
and
loope
les
lds
xchg
cs
ins
cmp
sub
das
jmp
mov
out
inc
loopne
or
ds
mov
or
loope
fistp
jle
jmp
inc
and
mov
or
mov
inc
cdq
sbb
or
inc
jo
inc
cmp
mov
imul
jb
mov
or
mov
add
adc
or
loopne
mov
fsubr
loop
pop
lea
push
mov
xchg
xor
mov
dec
mov
jl
call
pop
xchg
ins
mov
or
push
add
out
enter
xchg
sti
jmp
cmp
enter
xor
mov
push
add
xchg
mov
cmp
sub
and
sub
dec
dec
dec
outs
cmovo
and
and
pop
(bad)
or
dec
daa
mov
dec
mov
adc
or
sbb
xor
jnp
sub
pop
add
add
in
xor
add
inc
add
mov
fisubr
out
xchg
xchg
push
adc
rol
inc
sbb
les
dec
dec
(bad)
(bad)
fidivr
into
mov
push
call
sub
mov
pusha
add
add
sub
inc
inc
sbb
push
(bad)
cmc
(bad)
xchg
imul
adc
xchg
lods
pusha
dec
or
std
lea
mov
inc
jmp
pop
scas
jmp
shl
or
xor
rcl
inc
cmp
xor
shl
add
jmp
les
sbb
rcr
movs
je
jle
aad
xor
icebp
push
fdiv
clc
inc
push
or
mov
dec
or
jmp
jmp
xor
pop
scas
ficomp
jge
daa
adc
add
mov
ds
fist
adc
cmovae
cmc
inc
xchg
and
jg
popa
mov
adc
fbstp
fst
jmp
mul
adc
inc
sub
(bad)
push
push
jb
popf
adc
ret
jmp
loope
pop
fnstenv
or
and
jo
ins
push
mov
repnz
sub
xor
mov
ret
cmc
dec
push
jne
call
adc
imul
jno
push
rol
add
inc
dec
cmp
loopne
test
xchg
je
and
int
lock
add
adc
sub
and
in
repnz
aas
aaa
mov
jb
lods
int3
pop
mov
mov
test
adc
adc
in
pop
jne
dec
mov
enter
jmp
inc
pop
out
les
mov
jecxz
test
jnp
sbb
xor
ins
push
add
je
push
movs
or
and
or
pop
add
mov
push
mov
sbb
or
sahf
cld
inc
cmp
mov
adc
nop
icebp
fwait
or
or
fisttp
dec
cli
jne
mov
neg
pop
sbb
loopne
sub
or
or
and
mov
mov
push
adc
cli
sub
cmp
inc
imul
xchg
call
mov
repnz
out
add
inc
imul
repz
or
or
sahf
push
dec
sbb
hlt
aam
aas
icebp
fstp
sub
jne
and
fmul
xchg
rcl
xchg
xchg
call
test
daa
ficomp
add
add
adc
cld
loopne
cmp
cld
push
aaa
adc
xor
daa
adc
or
cmp
xor
adc
dec
mov
push
inc
daa
inc
xchg
add
repz
int
cmp
mov
jno
adc
xchg
dec
cmp
sbb
movs
in
push
add
xchg
push
or
mov
jbe
inc
adc
daa
dec
push
pop
cld
mov
add
loopne
popf
sbb
jle
jne
cmp
loopne
xor
pop
mov
gs
cmp
and
fbld
popf
dec
cs
xor
mov
add
aas
or
test
fnstsw
xchg
mov
pop
pop
sbb
ror
ror
mov
xchg
cmp
mov
mov
jnp
sahf
mov
pop
or
mov
lods
jne
fld
jp
or
clc
xchg
fmul
addr16
in
mov
mov
xor
adc
push
xor
sbb
jg
ds
shr
xor
inc
pop
sub
xor
add
jle
jne
mov
pop
mov
jne
cld
(bad)
dec
sbb
ins
loop
ret
and
and
icebp
adc
into
mov
js
push
jecxz
or
test
in
push
dec
xchg
jno
add
popa
add
ins
call
add
or
inc
arpl
rol
add
shr
fwait
call
inc
mov
xor
inc
mov
adc
jae
cmp
xchg
adc
or
je
pop
lea
pop
mov
fnstsw
into
xor
nop
in
sbb
jl
scas
add
cs
out
loopne
daa
popf
rcr
fnstcw
jne
mov
mov
cmp
and
repz
je
icebp
push
push
ss
jle
adc
adc
nop
test
adc
adc
dec
mov
xchg
dec
xchg
leave
pop
fld
sub
pop
sub
stc
and
xor
mov
jg
clc
test
adc
mov
adc
mov
repnz
push
adc
xchg
push
repnz
xchg
iret
stos
aas
ss
ss
adc
ja
out
dec
retf
popa
loop
push
or
pop
retf
add
inc
lea
lods
dec
pop
cmp
mov
mov
call
in
pop
mov
cmps
jno
fisubr
retf
sbb
les
adc
or
cmp
add
nop
mov
(bad)
add
ds
inc
jl
jne
sub
sub
add
cdq
lea
repz
fwait
add
jne
adc
cmp
mov
sub
ret
lods
xlat
add
mov
test
in
push
ror
jno
outs
adc
push
mov
inc
test
xchg
dec
neg
cwde
xchg
gs
popf
rcr
push
dec
sub
push
cs
cdq
push
dec
sti
inc
xor
xchg
push
xor
inc
inc
dec
retf
pop
sbb
ror
int3
xchg
xor
div
rol
fdivr
inc
rcl
inc
int
mov
jne
cmp
cmp
unpcklps
in
aas
leave
push
or
push
fs
fs
push
push
stos
test
adc
daa
add
adc
add
(bad)
cli
mov
and
xor
inc
pushf
mov
push
enter
cmp
dec
sbb
push
push
mov
fcomp
push
movs
rol
les
sub
lea
add
add
xor
movs
ins
out
inc
cmps
scas
mov
test
add
int3
dec
retf
retf
jecxz
pop
pop
dec
std
add
outs
xchg
pop
xchg
outs
dec
retf
loope
or
xor
cdq
mov
add
ins
cmp
imul
push
and
movs
xor
inc
adc
and
fwait
sbb
push
push
inc
inc
push
mul
inc
and
jns
xchg
xchg
and
inc
jl
xor
test
cwde
xor
or
ins
adc
inc
fs
ficomp
imul
adc
lods
push
or
movs
mov
test
xor
jecxz
add
iret
add
cmp
mov
ds
push
push
push
cmps
movs
retf
or
mov
jecxz
push
jns
add
dec
push
sbb
popa
not
push
sti
pop
ficomp
adc
lods
push
je
es
sub
jbe
sub
adc
pop
push
push
pop
sub
adc
or
add
inc
adc
xor
rol
ins
push
mov
or
jecxz
fisttp
dec
push
fadd
test
sbb
xor
sbb
dec
scas
or
retf
sbb
lea
sbb
fsub
movs
aad
inc
sbb
add
les
add
dec
outs
(bad)
push
xor
cmp
pop
ret
push
adc
arpl
and
movs
cmp
dec
or
sbb
adc
daa
jno
aad
sub
out
mov
xchg
inc
add
mov
sbb
(bad)
or
pop
sahf
out
pop
sbb
and
or
(bad)
cmp
inc
jbe
cmp
stc
jl
xlat
dec
sub
or
iret
out
das
xchg
xor
xor
ins
add
sub
push
mov
jo
dec
popf
inc
lds
sub
nop
and
xor
push
(bad)
pushf
fstp
mov
or
or
push
dec
mov
dec
add
jae
outs
sbb
add
fcmovne
icebp
xchg
push
push
inc
mov
mov
adc
dec
into
inc
sti
or
xor
jp
bound
repnz
and
sbb
add
pop
(bad)
cmc
inc
or
cmp
jns
xor
sub
out
mov
inc
mov
dec
popa
mov
test
mov
xchg
retf
repz
sub
adc
adc
ja
inc
loope
shl
call
or
pushw
sbb
ja
push
pop
ret
fwait
cwde
jo
cwde
adc
add
and
pusha
jnp
dec
or
and
inc
or
call
add
(bad)
inc
cdq
je
rol
outs
and
scas
imul
ds
inc
xor
adc
mov
xlat
push
aas
inc
push
inc
jae
sahf
push
mov
adc
push
in
adc
sbb
xor
cmp
pop
or
test
xor
sbb
pop
xchg
mov
mov
adc
imul
add
int
aam
pop
cmp
repnz
push
mov
sbb
dec
les
mov
mov
mov
test
movs
and
push
cmps
pusha
and
cld
ja
jbe
mov
xor
adc
ins
(bad)
(bad)
dec
xchg
je
push
xchg
dec
xchg
adc
jb
and
mov
ret
xchg
adc
add
or
dec
das
inc
pop
rol
retf
add
rcl
mov
xor
jb
jp
js
div
imul
lock
or
and
cli
sar
pop
cdq
xchg
adc
xor
fdiv
sub
adc
js
or
(bad)
or
ins
out
mov
dec
jne
sbb
sbb
xor
mov
xchg
and
mov
adc
sub
ss
add
pop
inc
xchg
xchg
popa
cmp
icebp
adc
(bad)
test
push
push
cmps
add
icebp
push
mov
pop
dec
or
(bad)
pop
fcmovbe
xsaves
sbb
cmp
mov
sbb
push
xchg
xchg
mov
cmp
imul
sbb
or
ja
xchg
or
pop
aam
lods
inc
adc
adc
cmps
in
mov
dec
push
or
inc
ror
pop
(bad)
push
sbb
ret
or
dec
add
movs
and
push
pop
pop
movs
push
add
mov
int3
test
cmp
dec
popf
adc
sub
pop
or
and
mov
movs
add
push
xchg
sub
sub
test
popf
xchg
hlt
pop
sub
ss
sub
and
or
or
lods
adc
gs
fdivp
inc
pop
idiv
add
stc
(bad)
arpl
and
(bad)
rol
cmp
mov
xchg
mov
out
inc
ret
int3
jl
or
sbb
cmp
push
push
add
push
sbb
jbe
out
imul
sbb
xchg
dec
les
nop
les
mov
mov
jb
pop
push
inc
push
fist
xor
enter
or
xchg
mov
mov
pop
(bad)
call
mov
lods
test
dec
push
inc
or
inc
mov
add
pop
test
cmp
bound
dec
dec
sub
pop
nop
ret
int3
(bad)
or
dec
xchg
inc
inc
xor
test
sub
or
add
xchg
push
outs
adc
add
mov
adc
loopne
add
stc
int
inc
test
adc
data16
push
jns
pushf
ins
ret
push
sub
push
loope
dec
jns
rol
arpl
adc
jae
mov
mov
inc
cmp
adc
add
(bad)
adc
push
or
in
adc
xor
pop
rcr
int3
and
ret
push
ins
jne
gs
fmul
adc
or
(bad)
nop
sbb
jns
jo
inc
inc
adc
enter
push
push
adc
es
dec
pop
pop
psubusb
sub
jno
and
and
jl
mov
sbb
arpl
adc
sahf
xchg
mov
inc
pop
pop
pop
jmp
xchg
lea
adc
int
imul
and
jne
mov
push
or
popa
mov
or
test
and
mov
fisubr
add
mov
mov
pop
shl
test
xor
pop
xchg
pop
mov
scas
movs
mov
xor
shl
mov
cmp
and
ror
out
sub
jge
into
retf
sbb
add
sbb
jae
pusha
and
or
adc
mov
push
jne
sub
mov
movs
scas
push
or
cwde
(bad)
shl
push
dec
lea
push
mov
adc
adc
in
add
cdq
jmp
jns
xor
ss
dec
xor
xor
sahf
xchg
cmp
stos
jae
jne
push
ja
sar
bound
adc
push
or
push
inc
push
jl
stos
es
dec
(bad)
mov
mov
mov
in
inc
sbb
add
pop
jb
push
jp
mov
jnp
or
xor
scas
shr
push
jmp
test
or
xor
add
jmp
popa
jb
data16
dec
fistp
add
inc
dec
mov
pop
les
xchg
test
sbb
add
ror
add
pop
xchg
xor
scas
adc
sbb
cmps
or
or
add
or
imul
nop
mov
mov
shl
add
push
push
es
mov
(bad)
ror
ror
xor
pop
cmps
div
arpl
lods
add
adc
int
addr16
cli
mov
jne
mov
inc
ret
sbb
or
rol
cmp
adc
call
inc
dec
and
push
loope
cmps
outs
cs
push
push
push
mov
pop
out
stc
xor
pop
inc
and
(bad)
loopne
call
push
fldenv
adc
nop
or
shl
sub
hlt
rol
pop
mov
add
adc
push
ret
daa
xor
pop
(bad)
ss
mov
dec
sub
xor
fcom
mov
into
cmp
call
pushf
ja
or
sub
sub
sub
icebp
cdq
nop
dec
scas
stos
sub
fist
and
or
or
xchg
dec
and
or
xchg
mov
add
adc
sub
cmp
int
xchg
pop
xor
cs
es
add
push
nop
add
add
nop
or
or
and
and
sahf
mov
test
push
add
es
in
jns
add
pop
push
mov
xchg
cmp
test
sub
sar
mov
imul
add
test
push
sbb
xchg
add
pop
sbb
dec
movs
jb
sbb
push
add
adc
push
add
lock
add
and
test
lahf
test
sub
je
nop
imul
mov
mov
push
mov
push
movs
sub
jg
adc
inc
push
adc
jb
pop
sbb
mov
ror
push
bnd
pop
pop
sub
aad
mov
ffreep
sbb
movs
std
ins
adc
cmp
push
mov
sub
sub
jl
and
add
cmp
je
cdq
clc
jmp
je
cmp
je
cmp
je
mov
dec
cld
push
pop
je
cmp
je
cmp
je
jo
cmp
push
cmp
je
cmp
ins
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
inc
adc
scas
or
repnz
sbb
mov
cmp
je
cmp
xor
xor
adc
test
fdiv
push
cmp
xor
xor
xchg
leave
mov
(bad)
repnz
imul
add
add
test
add
mov
cmp
sbb
test
sub
test
ins
jmp
enter
ja
push
add
adc
or
test
or
add
test
(bad)
adc
aam
xchg
std
adc
add
pop
pop
dec
lahf
loope
test
mov
ss
cmp
loopne
mul
inc
(bad)
mul
xchg
pop
pop
xor
pop
mov
ja
inc
push
imul
test
adc
cs
inc
xor
pop
sub
mov
or
inc
fwait
push
cmc
or
push
sbb
mov
mov
aad
sar
out
rcr
or
pop
or
lods
shr
movs
retf
pushf
or
or
in
and
dec
add
add
and
sbb
cmp
dec
push
xor
mov
outs
xor
inc
xor
cmp
dec
call
push
clc
scas
inc
es
cmp
xor
pop
stc
mov
in
je
inc
push
add
cmp
inc
mov
sub
sbb
scas
aam
dec
ficomp
mov
imul
add
inc
ficom
cmp
dec
cmc
or
xchg
test
ficomp
data16
sub
xor
shl
xor
push
adc
call
adc
push
sub
inc
or
inc
or
(bad)
cdq
pushf
jo
sar
inc
les
ret
or
jno
and
dec
lods
adc
mov
and
and
and
jmp
rcl
ins
inc
push
dec
xchg
xor
sbb
xor
in
mov
fadd
data16
push
xchg
mov
call
xchg
sahf
xor
imul
fxch
lock
mov
or
jecxz
sub
add
fidivr
iret
loope
fisttp
jp
push
pop
lock
inc
jg
adc
push
test
or
movs
leave
adc
inc
retf
jp
sub
test
data16
xchg
adc
test
test
and
push
je
sbb
push
cmp
add
test
sbb
mov
or
add
aam
sbb
cmp
mov
cmp
cmp
pop
movs
inc
add
stos
push
dec
je
pop
mov
inc
cmp
and
scas
test
jb
hlt
out
out
or
adc
in
daa
and
sbb
mov
or
out
mov
pop
push
inc
fld
int
ja
mov
fldcw
movs
cmp
mov
bound
pop
fdiv
or
mov
or
scas
imul
inc
cmc
dec
mov
xor
and
dec
aaa
xor
iret
sub
sbb
push
add
outs
xchg
aaa
int3
iret
cmc
sub
mov
test
or
xor
jno
or
add
add
sbb
jbe
xor
cs
ret
je
(bad)
pop
sbb
fadd
int
rol
or
mov
push
push
imul
retf
pop
clc
dec
inc
call
inc
ja
fsubr
adc
inc
and
inc
or
xchg
or
jbe
xchg
mov
in
lods
push
nop
mov
inc
adc
push
lea
ins
je
dec
cli
repz
mov
xchg
pop
cmp
ss
push
data16
rcr
les
mov
pop
jle
ja
js
or
call
dec
or
add
cdq
pop
sbb
nop
(bad)
aad
ret
movs
xchg
jno
xlat
adc
in
test
or
arpl
mov
pop
jne
(bad)
jmp
mov
dec
out
push
call
clc
and
push
push
sbb
loop
dec
dec
ret
retf
add
adc
bound
adc
repz
sbb
xor
mov
adc
js
jmp
loop
push
popf
xor
add
push
dec
imul
or
adc
test
jle
mov
cmp
ss
push
sub
sbb
push
adc
adc
pop
mov
ret
mov
lds
push
movs
mov
xchg
bound
mov
aad
adc
jnp
sar
and
jnp
(bad)
xlat
xchg
and
test
dec
movs
in
xchg
pusha
sbb
jmp
xchg
lds
mov
rol
dec
dec
mov
fwait
inc
enter
lods
adc
or
sub
cmp
add
sub
test
pop
enter
daa
and
xlat
bound
mov
mov
jnp
frstor
movs
mov
mov
xor
ror
push
sub
jp
push
jle
movs
mov
push
dec
es
xor
inc
ror
and
adc
add
dec
jp
xchg
add
(bad)
xchg
mov
xchg
mov
sub
aam
push
lahf
mov
fprem
push
push
push
push
adc
ss
mov
adc
pop
outs
ror
out
push
dec
fidivr
push
pop
inc
movs
xchg
adc
jl
or
cmp
bswap
enter
and
mov
or
js
or
dec
pusha
in
js
or
pop
div
shl
sbb
xchg
retf
mov
push
call
fld
test
jno
push
mov
push
inc
retf
inc
pop
jp
jmp
lock
xor
test
movs
mov
pop
ror
mov
fbld
nop
or
jge
fwait
hlt
enter
aaa
push
dec
cmp
dec
or
pop
push
ss
mov
mov
jmp
scas
in
cmps
dec
daa
popa
push
push
pop
out
xchg
dec
daa
stos
cmp
mov
mov
imul
sbb
pop
rcl
ret
cmp
lock
mov
push
(bad)
push
xor
mov
xchg
lea
push
push
and
add
pop
test
mov
mov
out
ins
sub
mov
sub
loope
pop
arpl
mov
dec
lock
movs
push
push
inc
fwait
fs
fnsave
imul
xor
cmp
or
jbe
jo
dec
cmp
push
enter
lea
cmps
loop
dec
add
pop
push
fwait
jp
idiv
jbe
inc
loope
add
push
dec
mov
(bad)
jbe
mov
dec
fdivr
xchg
mov
xchg
in
fstp
daa
in
add
and
xor
std
call
or
loope
mov
sub
fild
push
jle
dec
push
inc
(bad)
pusha
adc
sub
ins
add
dec
cld
mov
in
push
popa
add
mov
push
mov
mov
test
inc
push
or
test
pop
xchg
jb
dec
pop
rol
popf
or
push
call
pusha
mov
das
inc
add
sub
adc
push
dec
push
mov
pop
mov
sbb
pop
adc
sahf
shl
dec
pop
push
mov
push
sub
loope
(bad)
cmp
loop
test
inc
and
dec
adc
xor
repnz
hlt
clc
ret
or
inc
push
inc
je
dec
sbb
or
xchg
lods
cmp
dec
ins
and
jno
pop
sahf
mov
push
jl
test
jl
or
pushf
sar
aam
sub
hlt
pop
ror
neg
or
jle
jo
test
and
js
mov
movs
jae
push
imul
sbb
add
xor
sub
lock
add
test
jg
(bad)
dec
fsub
xor
ja
inc
push
fisttp
repnz
iret
sti
xor
inc
test
sbb
js
loopne
and
(bad)
addr16
int3
xchg
inc
xor
test
sub
mov
lods
mov
es
inc
push
fiadd
mov
sub
mov
aad
arpl
and
arpl
jnp
dec
and
jb
mov
adc
lea
mov
push
push
and
repz
pop
mov
ret
dec
aas
mov
add
push
pop
cmp
dec
jmp
movs
adc
test
mov
in
(bad)
push
or
cld
shl
or
push
xor
gs
mov
(bad)
adc
dec
sbb
ret
lods
push
pop
inc
lods
inc
mov
mov
outs
arpl
mov
jmp
data16
xor
jge
and
jae
dec
imul
stos
pushf
pop
sbb
and
and
sahf
and
out
mov
add
ds
retf
test
add
inc
shr
or
pop
xor
dec
push
and
out
cmp
push
cmp
ret
outs
pop
psrad
ja
test
std
xor
dec
xor
or
cmp
jne
mov
mov
xlat
jge
mov
movs
retf
imul
inc
sar
ss
sbb
ins
mov
jne
mov
ss
sub
push
push
fmul
dec
in
cwde
pusha
jbe
aam
inc
ds
xor
ret
mov
das
cmp
push
xchg
push
or
cld
push
out
sbb
mov
loopne
pushf
(bad)
sbb
mov
cmp
add
jae
stc
sub
test
or
inc
inc
or
and
sub
sahf
push
loopne
inc
jecxz
lahf
sbb
push
imul
jge
mov
(bad)
pop
or
sbb
out
mov
adc
dec
add
or
in
inc
arpl
xor
imul
(bad)
pusha
xor
push
or
add
ins
or
bsf
push
js
inc
add
push
xor
xchg
jl
sub
adc
fnstenv
dec
inc
sub
sub
sub
fidiv
mov
xlat
es
pushf
movs
xor
and
test
pop
cmp
pop
cwde
movs
sti
xchg
mov
and
add
cmp
(bad)
fstp
scas
xor
ja
je
cmp
retf
sahf
test
shl
and
add
xchg
cmps
and
sar
adc
push
add
(bad)
mov
retf
aad
push
jmp
mov
sbb
adc
jmp
or
adc
or
jge
loope
add
je
jmp
js
repz
or
outs
je
add
nop
mov
addr16
sbb
or
mov
not
movs
fld
into
xor
ins
jge
mov
jle
and
iret
lods
or
test
jle
in
push
push
add
lods
dec
or
in
lock
aam
dec
data16
std
mov
push
dec
jmp
inc
dec
retf
cmps
rol
and
ja
js
jmp
jmp
das
add
and
or
mov
mov
xchg
mov
adc
addr16
jle
push
lock
fimul
je
mov
adc
mov
pop
rol
loop
jb
fcomp
adc
jae
push
out
mov
xor
je
mov
mov
push
ss
sbb
rcr
js
jno
(bad)
repz
pop
add
and
and
test
jns
add
dec
mov
add
add
ss
sub
repnz
test
or
cmp
jae
sub
ss
aad
dec
nop
add
rep
dec
mov
inc
add
std
je
hlt
sbb
or
shr
pusha
aaa
jp
and
mov
push
and
out
lock
cmps
push
xchg
(bad)
jecxz
sub
cs
std
push
add
ja
mov
cmp
pop
push
push
cli
jne
xchg
jl
push
add
jne
jbe
ret
mov
lock
lahf
add
add
jmp
cld
jae
mov
sti
and
std
jne
cmc
push
fcmovnbe
mov
pop
fisttp
sbb
loop
mov
mov
mov
enter
sahf
cwde
mov
push
push
add
test
and
mov
inc
sub
inc
cmp
dec
mul
out
pop
jb
pop
mov
fisubr
cmp
dec
inc
out
cmp
sub
ror
lods
xlat
adc
or
pcmpeqb
mov
out
out
lods
(bad)
in
out
sbb
ret
xchg
adc
dec
sti
push
es
pushf
bound
or
stos
jb
lds
popf
packsswb
stc
jo
add
je
and
and
adc
jle
pop
bnd
or
cmp
pop
mov
and
sbb
sbb
popf
imul
retf
stos
lock
cmps
pusha
mov
xchg
xor
pop
loop
cs
push
call
nop
bound
leave
inc
xor
popa
pop
cwde
rcl
pop
(bad)
daa
xchg
add
mov
pop
fsubr
lds
jl
mov
pushw
popf
rol
cmp
jbe
scas
sbb
call
test
cmp
add
and
add
sub
sbb
cmps
shl
shl
adc
les
(bad)
pop
xlat
cmp
xchg
mov
mov
fidivr
(bad)
in
dec
and
shl
pop
push
stos
push
push
mov
or
dec
ins
ror
gs
mov
cmc
sahf
je
fist
mov
adc
add
sbb
out
test
fwait
push
add
mov
lock
pop
jne
lahf
jmp
cmp
fcomp
adc
pop
cmps
pop
mov
add
or
mov
shl
cs
ins
leave
adc
mov
sbb
mov
pop
shr
xor
lock
sub
scas
xchg
push
loopne
or
into
lock
sbb
scas
pop
pop
inc
mov
mov
sub
jg
(bad)
ja
or
add
or
cmp
rcr
jo
and
xor
adc
out
cmp
pop
jo
out
sbb
push
mov
xor
cdq
cs
dec
dec
cmp
and
inc
test
push
call
push
jle
lods
cmc
add
cmp
retf
aad
push
dec
push
xchg
cmp
dec
xchg
or
pop
add
lods
dec
mov
adc
mov
mov
adc
or
xor
push
arpl
cmp
jb
pop
(bad)
and
jecxz
xlat
xor
sbb
jne
mov
je
clc
push
inc
add
jns
pop
fldcw
sbb
mov
fisubr
mov
push
test
mov
movs
test
mov
ficom
es
out
in
outs
pop
ror
or
push
(bad)
pop
ret
inc
inc
sbb
fisttp
cmp
cmp
sub
jge
jge
mov
push
leave
sub
jge
mov
pop
je
(bad)
or
hlt
push
outs
add
push
or
jmp
cmp
cli
or
in
hlt
adc
or
sub
adc
nop
(bad)
jbe
jae
fst
(bad)
rcl
add
aad
jp
push
sub
sub
popa
and
or
lea
mov
lea
push
dec
add
cld
repz
sub
add
push
push
gs
ins
sub
ret
xor
pusha
imul
lods
adc
sbb
xchg
and
push
loopne
cdq
(bad)
in
and
sti
outs
mov
push
add
cmp
pop
mov
xchg
mov
add
inc
push
or
pop
movs
xchg
lea
(bad)
mov
jl
faddp
sbb
adc
pop
cmp
dec
inc
shr
mov
push
cmp
(bad)
jb
xchg
or
test
lods
stos
mov
mov
mov
adc
mov
mov
lea
mov
sub
ja
loopne
ins
cmc
retf
cmc
das
adc
cmp
aaa
adc
or
jge
pop
(bad)
(bad)
in
sbb
mov
sbb
sbb
mov
xchg
fcos
dec
cmp
fsub
aad
(bad)
pop
adc
pop
ja
out
add
push
xchg
jg
call
push
inc
push
inc
call
dec
add
add
fs
inc
xchg
stos
xchg
push
fimul
pop
cmp
and
(bad)
pushf
fild
jle
hlt
les
add
or
sub
fild
xor
sbb
add
dec
cmp
je
js
cmp
test
add
ds
pop
add
sub
call
sub
fistp
sub
push
sub
call
adc
loopne
mov
lock
inc
inc
xchg
xor
jle
cli
pop
daa
or
call
add
fscale
sub
test
jae
(bad)
cmp
repz
and
into
jp
cmp
push
add
add
add
add
add
add
adc
mov
push
adc
and
rcr
push
add
cmova
sub
or
add
add
cmp
pop
add
dec
sub
cmc
enter
mov
rcl
ins
scas
jge
cld
xchg
push
sub
push
jle
mov
call
jnp
(bad)
cmp
jne
into
in
movs
add
xchg
sar
xor
xchg
ins
bound
js
retf
ja
mov
adc
and
mov
pop
int3
mov
imul
jmp
adc
jmp
cmp
mov
cmp
pop
rcl
or
lock
xchg
add
adc
or
add
sbb
push
cli
and
or
xor
xchg
dec
cmp
je
push
sar
mov
push
xchg
cmp
fwait
dec
loope
retf
neg
lea
jo
push
cmp
fcom
adc
je
jmp
test
dec
scas
(bad)
jae
jmp
cmc
fistp
mov
adc
pop
cmp
pop
loop
jmp
sti
pop
inc
inc
mov
mov
and
and
adc
sub
and
adc
and
cmp
inc
jb
clc
scas
or
adc
inc
das
clc
adc
xchg
dec
cmp
dec
pop
mov
push
lea
inc
add
jbe
(bad)
lock
and
and
and
call
pop
mov
mov
sub
retf
fcmovnbe
daa
jnp
or
mov
sbb
lahf
mov
inc
push
fisttp
add
add
cdq
ins
sbb
or
or
add
jne
sbb
rol
mov
fsubr
inc
mov
movzx
cmp
shr
add
inc
jnp
inc
add
out
add
mov
je
fist
mov
cmp
add
ins
std
je
cmp
je
test
ret
nop
lahf
mov
ss
xor
cmp
jo
movs
add
and
and
mov
dec
and
mov
lds
out
sbb
cld
fcomp
lods
cmp
lea
loopne
mov
call
dec
dec
or
sub
cld
mul
jge
sub
ja
mov
arpl
adc
nop
xchg
push
sub
push
mov
mov
inc
jl
sub
movsx
scas
sub
ins
mov
icebp
mov
out
inc
cmp
je
cwde
jp
mov
or
push
push
jnp
and
mov
xchg
add
mov
sbb
inc
adc
xchg
xchg
mov
push
add
inc
adc
test
adc
mov
add
mov
mov
mov
popf
add
not
rcr
add
add
push
push
or
xchg
cs
xchg
dec
mov
outs
ret
or
add
pop
sub
push
cdq
mov
(bad)
add
xchg
mov
test
and
clc
test
sbb
fld
inc
add
or
popf
add
outs
jmp
leave
je
xchg
test
loope
les
inc
and
sub
sahf
jmp
ja
cmc
add
add
dec
add
lods
pop
sbb
adc
add
xchg
cmp
and
hlt
lahf
loope
inc
mov
dec
pop
js
test
(bad)
retf
add
xor
test
sahf
(bad)
push
outs
ins
cmp
fst
or
test
data16
push
push
cwde
fdiv
sti
push
push
(bad)
les
fsub
pop
mov
data16
gs
or
sbb
dec
outs
push
push
add
xor
lods
in
js
sbb
pusha
ror
outs
and
dec
or
dec
mov
inc
pop
jno
cmps
lds
mov
lods
ret
mov
adc
(bad)
sub
ins
clc
mov
ror
arpl
xor
and
adc
jne
in
bound
add
aaa
pop
inc
mov
icebp
mov
js
jecxz
xor
sbb
pmullw
aaa
test
pop
pusha
push
mov
jb
icebp
mov
inc
imul
sbb
jbe
push
add
fld
push
aaa
adc
dec
cld
jg
mov
push
loopne
comiss
popa
push
mov
(bad)
push
sub
cmp
(bad)
fcmovnb
aam
shl
js
(bad)
(bad)
adc
mov
inc
std
push
inc
and
xchg
les
mov
cmp
mov
in
push
pop
fist
push
sub
pop
push
pop
dec
sub
call
xor
xchg
scas
aad
clc
jle
adc
or
popf
not
mul
add
add
add
add
add
sbb
in
mov
jmp
fimul
aas
xchg
mov
or
add
addr16
or
push
mov
pop
aas
loope
sar
or
mov
fdiv
lar
je
inc
data16
into
jne
mov
test
mov
push
scas
ret
sub
(bad)
das
ret
test
ins
ficomp
mov
das
xchg
and
popa
mov
xchg
push
pop
test
inc
sbb
xchg
nop
inc
daa
sbb
sbb
or
test
ja
add
xor
add
jae
add
hlt
sub
arpl
js
clc
retf
jle
mov
int
stos
out
cdq
cli
push
adc
add
ret
add
shl
lahf
add
mov
xchg
call
sbb
outs
sbb
mov
lock
jle
push
cmp
pop
sub
fst
hlt
push
loopne
push
and
idiv
push
ret
lea
mov
sub
add
daa
pop
dec
(bad)
pusha
or
xor
movs
jmp
jg
pop
and
into
lds
nop
push
cmp
mov
outs
push
rol
add
push
in
test
push
xor
mov
cmp
and
sbb
add
dec
or
inc
xchg
aam
dec
mov
aaa
sti
xchg
push
pushf
jb
in
mov
mov
mov
dec
pop
cmp
xor
mov
or
fs
pop
and
inc
and
add
jl
loope
jne
pop
xlat
js
test
mov
fsub
sub
imul
and
push
or
inc
jl
fsubr
inc
xor
push
or
sub
sbb
push
push
and
mov
jmp
rep
pop
movs
jo
sbb
mov
fsub
inc
fld
add
xchg
mov
adc
mov
(bad)
jo
cmps
movs
out
pop
or
add
sub
xor
pop
movs
xchg
mov
mov
dec
jne
xor
or
push
sub
pop
test
mov
jmp
sbb
mov
loope
xchg
dec
lea
jmp
or
mov
and
rcl
dec
xor
stos
call
push
mov
in
add
imul
(bad)
ror
adc
mov
aas
push
jne
add
rol
adc
ja
dec
mov
and
add
and
ds
xor
xchg
dec
add
adc
fbstp
or
add
sub
imul
sub
das
or
add
and
in
sti
pop
mov
sbb
scas
mov
xor
fnstcw
push
xchg
xchg
inc
shr
and
test
test
xchg
out
ss
xor
push
cmp
or
mov
icebp
dec
push
retf
dec
push
test
inc
sbb
xchg
pop
enter
dec
push
js
cmp
je
mov
je
subps
jl
inc
dec
mov
inc
jp
lock
inc
pop
int3
(bad)
pop
xor
out
lods
movs
xor
inc
push
fwait
retf
xchg
sqrtps
sub
jno
jne
lds
mov
cdq
dec
adc
out
or
or
or
or
xchg
pusha
sbb
sbb
retf
ret
scas
push
mov
or
std
movs
pop
pop
push
pop
gs
test
jo
and
push
xor
sbb
in
dec
call
retf
(bad)
sbb
push
xchg
(bad)
jp
adc
retf
jno
push
dec
sbb
pop
add
add
adc
stos
jl
loopne
push
add
mov
or
add
xor
add
jae
and
out
leave
cmp
aas
dec
js
addr16
push
dec
pop
jo
adc
jl
popf
lods
pop
shr
mov
add
mov
lock
mov
add
je
cli
xor
daa
cmp
test
jmp
xor
sub
es
movs
add
add
xchg
jae
xchg
mov
adc
hlt
mov
cmp
iret
adc
jno
test
dec
push
and
adc
adc
dec
not
inc
sbb
jmp
not
ficomp
push
stc
rol
inc
and
sbb
ss
push
or
ret
cli
mov
sbb
add
pushf
iret
pop
or
fs
cmps
pusha
int
sbb
jl
fcom
sbb
loope
iret
sub
daa
cmp
dec
add
fcmovb
mov
add
push
rol
or
jbe
dec
movs
daa
dec
mov
or
or
ss
adc
inc
mov
push
jl
cmp
cmp
and
cs
aam
jle
shl
test
jns
lock
sub
ror
mov
mov
adc
rcr
add
push
(bad)
es
mov
sub
rol
cwde
or
xchg
out
push
add
push
pusha
or
add
cli
mov
jne
outs
scas
imul
add
(bad)
in
popa
push
xchg
rcr
fcom
mov
cmp
inc
ret
sub
aaa
and
cmp
push
gs
sbb
lods
inc
ror
es
xchg
sub
xchg
pusha
cmp
mov
pop
dec
call
cli
lock
mov
movs
lods
push
pop
shr
add
dec
cld
mov
or
cmp
sbb
lods
aaa
sbb
pop
dec
fsubr
shl
sahf
jno
fdivr
mov
nop
lock
lea
sbb
sub
cwde
inc
mov
dec
xlat
arpl
in
call
jns
ror
repnz
adc
jne
dec
sub
push
test
xor
and
imul
push
xor
or
xor
add
mov
addr16
loop
pusha
push
or
mov
mov
popf
xchg
xchg
shl
cmc
jo
cli
(bad)
in
out
xor
mov
jecxz
cmp
or
(bad)
sbb
add
or
pop
fdivr
in
rol
mov
push
xchg
data16
rol
xchg
ds
and
xor
mov
rcr
xor
data16
jge
jb
sbb
push
icebp
jge
mov
sub
mov
je
mov
jnp
mov
ja
call
aaa
push
jg
mov
call
add
or
add
add
or
adc
add
adc
fadd
fmul
jmp
sbb
sbb
das
dec
mov
jnp
cs
add
adc
pop
rol
jl
or
fs
sbb
xchg
or
pop
imul
mov
call
arpl
jmp
mov
or
jns
jne
add
pop
jl
inc
mov
push
or
inc
mov
pusha
mov
xchg
push
mov
cmc
inc
ins
je
xchg
lahf
and
or
leave
sar
sbb
fdiv
pop
sub
xchg
push
jmp
test
inc
xchg
lock
jg
out
pop
mov
push
sbb
and
inc
out
in
jb
jmp
mov
xchg
mov
lock
scas
imul
cmp
inc
in
call
jmp
je
and
jne
ins
add
pop
sbb
cmp
xchg
mov
pop
cwde
ret
push
into
push
out
push
dec
cmp
cmp
scas
push
add
xlat
add
add
addr16
sub
lods
ins
and
push
mov
push
retf
mov
or
cwde
mov
mov
out
rol
jmp
lds
mov
push
xchg
outs
add
mov
mov
pop
sub
push
add
push
ret
push
scas
mov
ds
xchg
xchg
or
stc
lock
enter
jae
sbb
or
dec
repnz
sub
adc
or
es
push
dec
test
es
jmp
adc
cmc
pop
cmp
or
or
je
add
adc
mov
mov
push
cld
popa
adc
in
inc
xchg
jbe
nop
into
repz
(bad)
sub
sub
add
add
mov
add
cmp
(bad)
sbb
inc
test
push
xchg
add
ret
pusha
xor
add
add
mov
or
dec
fwait
mov
cmp
and
sbb
add
nop
dec
(bad)
fs
arpl
sub
(bad)
lods
push
fwait
in
cs
inc
adc
pusha
stc
add
not
sbb
push
adc
cmp
pop
shl
outs
test
aaa
push
and
add
sbb
and
sar
and
test
mov
push
push
iret
mov
nop
test
cmps
jne
push
and
(bad)
test
or
mov
dec
sub
addr16
push
loop
int
out
sub
adc
sbb
dec
xor
ins
rcr
loop
or
cmps
ds
cld
and
adc
sbb
xor
cmp
add
outs
jo
pusha
sbb
sbb
int3
add
cwde
leave
std
sbb
push
es
daa
pushf
mov
mov
lods
das
xor
pop
les
or
outs
adc
mov
sub
dec
out
cmp
gs
and
xchg
xchg
or
push
shr
adc
div
add
dec
inc
and
inc
nop
mov
sub
push
out
xor
inc
aam
push
inc
invd
inc
mov
jo
movs
pop
dec
mov
gs
movs
ss
dec
xor
xchg
add
add
push
lock
jmp
xchg
lods
mov
fist
or
pushf
imul
mov
nop
pop
jecxz
aaa
cmc
xchg
shl
fcomp
pop
add
sub
push
paddd
push
push
push
jg
inc
jmp
sub
add
(bad)
and
or
fiadd
and
sbb
mov
inc
arpl
ins
jg
cld
xor
movs
adc
mov
mov
push
mov
int3
xchg
mov
or
xor
loope
mov
add
add
jae
fisubr
push
rcpps
xchg
enter
inc
jmp
push
adc
movs
addr16
popa
xchg
push
pop
xchg
or
push
sbb
push
outs
lock
mov
fldenv
shl
mov
addr16
xchg
push
jmp
and
fisub
mov
mov
and
xchg
sbb
popa
adc
sbb
js
push
test
fiadd
pushf
xor
cdq
pop
call
xor
test
adc
shl
out
push
dec
push
push
pusha
outs
pop
cwde
sub
lock
dec
add
test
scas
xchg
cli
add
or
call
xchg
ret
add
ins
mov
and
jecxz
xchg
(bad)
xchg
call
imul
push
xchg
arpl
and
out
popa
cwde
add
and
jb
mov
aas
add
nop
ror
adc
in
sbb
pop
sar
push
test
aaa
add
xor
pop
push
mov
inc
sbb
add
and
and
rcl
pop
xor
outs
pop
gs
call
into
push
jmp
or
test
cmp
dec
dec
jb
dec
cs
iret
jmp
sub
pop
push
add
retf
add
inc
sbb
add
adc
sbb
push
xor
adc
call
mov
and
jo
fidiv
inc
mov
xchg
cmc
adc
jo
jo
adc
imul
xchg
pop
push
or
add
sub
repz
xor
in
mov
jno
test
mov
add
jns
mov
les
xchg
and
xchg
je
or
and
sbb
xor
and
cmp
adc
jp
sub
loop
cmp
xchg
or
adc
pop
push
pop
ror
adc
sbb
std
aaa
test
mov
outs
gs
pusha
cmp
dec
xor
inc
ret
push
movsx
rcr
(bad)
jmp
push
pop
jne
xor
push
adc
xchg
cmc
cmp
mov
push
adc
ficomp
mov
fisttp
aad
ret
cmp
sub
cli
dec
js
(bad)
js
cld
xadd
push
dec
add
pop
dec
push
jne
cmp
sbb
xchg
inc
cmp
or
stos
adc
(bad)
retf
pop
inc
push
fidiv
jmp
cmps
(bad)
(bad)
jle
aad
rcr
js
(bad)
xchg
xor
push
jge
jbe
test
cli
inc
in
shl
mov
ficomp
mov
adc
mov
dec
lock
push
mov
adc
js
inc
pop
adc
dec
pop
movs
push
repnz
push
push
inc
add
adc
enter
and
fidivr
test
popf
inc
ret
cwde
or
adc
add
adc
sar
dec
lods
gs
push
push
lds
add
imul
inc
(bad)
push
shr
dec
mov
lods
pushw
loope
cmp
dec
cmp
movs
popf
jp
jmp
mov
lds
add
mov
push
jne
es
or
mov
dec
pop
ja
push
xchg
test
xor
cmovo
mov
mov
add
cmp
addr16
add
or
sub
or
test
mov
push
or
loopne
or
jnp
rol
cmp
dec
pop
scas
adc
ja
add
add
lods
daa
ficom
out
pop
mov
mov
(bad)
in
inc
dec
imul
add
mov
in
adc
daa
adc
mov
imul
cmp
cmp
mov
in
cmp
cmp
shl
inc
jge
clc
je
or
ja
lea
adc
sbb
rcl
sti
pop
cmp
popf
pop
fsub
adc
jnp
xor
outs
in
das
push
push
daa
das
or
push
jno
inc
adc
add
paddusw
inc
jmp
mov
imul
cmp
addr16
push
js
dec
daa
push
or
je
jmp
movs
sbb
adc
or
in
cmp
fadd
xor
jbe
xchg
mov
xor
sub
xor
aas
xor
sbb
mov
sub
push
push
movs
sbb
push
ror
clc
or
movs
add
das
rcr
mov
mov
mov
pop
dec
int
ror
xchg
das
(bad)
(bad)
stc
sbb
mov
test
mov
add
push
int3
xchg
jmp
pop
dec
add
iret
rcl
dec
jae
adc
movs
xchg
fcom
sbb
or
push
dec
pmovmskb
jns
inc
push
inc
in
pop
push
inc
rcl
in
inc
cmps
jmp
push
pop
xor
inc
sbb
rol
pop
(bad)
movhps
jmp
sar
jge
adc
lea
lds
inc
xor
cmp
mov
xchg
add
js
mov
pop
push
xchg
pushf
adc
fdiv
in
aas
and
push
sub
fisub
push
push
pop
push
dec
fidiv
and
push
add
aaa
(bad)
mov
call
adc
ins
and
inc
and
cmc
push
call
stos
sub
cmp
add
mov
je
push
xor
mov
arpl
add
call
push
dec
ins
add
lock
nop
and
or
iret
mov
jmp
inc
dec
dec
and
cmps
test
inc
sub
cmp
test
ret
adc
(bad)
mov
add
add
jnp
cmp
jbe
shl
jl
push
add
mov
jns
in
out
or
push
and
inc
scas
scas
adc
and
inc
jbe
jo
mov
xor
leave
and
es
cmps
mov
mov
mov
retf
stos
adc
stc
inc
cmp
fldcw
push
push
jb
jbe
sub
sbb
movs
xchg
movs
and
in
dec
dec
test
ret
xchg
and
adc
inc
jno
mov
inc
lea
movs
inc
push
call
pop
lods
sub
fsubr
mov
or
lock
(bad)
call
repz
adc
dec
push
adc
and
push
dec
push
mov
jmp
dec
push
nop
xchg
sbb
xchg
retf
daa
add
and
mov
sub
sar
adc
mov
mov
pop
fsubr
and
xchg
cmps
imul
mov
and
or
mov
adc
ror
or
stc
dec
push
xchg
jno
lock
repz
pop
dec
or
mov
inc
clc
and
setl
adc
or
cld
adc
je
aam
(bad)
cmp
je
fcomp
or
push
repnz
outs
gs
mov
mov
jne
push
int
jmp
and
popf
mov
inc
gs
push
push
fs
icebp
imul
(bad)
mov
push
cmp
pop
ins
and
ror
dec
dec
mov
push
and
pusha
and
add
push
pop
add
xor
jge
nop
mov
daa
ret
ds
mov
sub
push
test
je
add
dec
(bad)
xchg
fsubr
pusha
and
cmp
fs
(bad)
enter
inc
(bad)
ret
push
push
(bad)
shl
sub
in
or
test
adc
mov
jbe
push
ret
push
push
pop
mov
sub
lock
iret
mov
ja
jmp
add
je
dec
sub
aas
or
jp
or
retf
aam
and
push
adc
pusha
cmp
dec
push
shl
arpl
loop
loope
push
data16
xor
adc
dec
inc
mov
add
add
je
xor
push
lods
out
jne
adc
adc
jmp
xchg
add
adc
or
lea
dec
jno
xchg
bound
mov
repnz
ror
adc
push
gs
mov
fwait
pusha
jo
or
push
jns
es
int
fisttp
int
sbb
or
cmps
ds
xor
sbb
push
sub
ror
jns
push
xor
push
push
dec
inc
push
adc
mov
dec
push
push
mov
dec
in
leave
push
or
mov
add
outs
pop
dec
adc
and
inc
inc
jb
dec
push
cdq
pusha
retf
lahf
call
fimul
dec
imul
adc
and
jo
push
xor
cmp
sbb
adc
inc
or
sbb
sbb
xchg
cmps
imul
push
sub
or
jecxz
out
dec
xor
clc
daa
sub
add
lea
push
adc
sub
std
or
ins
push
dec
jo
dec
loopne
inc
pop
jb
je
cmps
inc
rol
push
shl
pop
add
or
dec
or
adc
sbb
cmps
sbb
xor
lea
adc
inc
push
sbb
ja
adc
dec
push
jmp
add
lods
and
mov
inc
pop
pop
inc
popf
aam
mov
and
idiv
mov
cmp
ror
add
mov
push
and
or
test
jne
or
or
out
bound
xchg
push
add
push
mov
add
sbb
jecxz
xor
loopne
or
jae
test
clts
cmp
jne
add
mov
es
add
xor
test
and
add
aaa
repnz
stos
mov
mov
xchg
js
mov
repz
mov
not
ret
sbb
sbb
(bad)
jno
xchg
add
test
and
nop
loop
xchg
cmp
inc
sbb
push
call
sbb
sub
stc
pop
and
inc
add
sub
and
mov
fsub
ja
fwait
inc
imul
add
xchg
and
mov
cmps
lods
out
repz
dec
jbe
add
mov
retf
push
scas
xor
inc
or
out
mov
test
inc
lods
jno
pop
add
pop
lahf
inc
and
and
fist
(bad)
sub
sbb
jne
mov
mov
jne
push
or
jae
dec
mov
add
mov
je
jo
add
imul
dec
push
mov
mov
adc
ins
cmp
jne
and
mov
nop
pop
mov
add
or
xlat
mov
jmp
push
push
mov
mov
jecxz
iret
js
mov
mov
add
xchg
adc
rol
shl
mov
int3
(bad)
mov
rsm
inc
test
dec
inc
pop
pop
or
push
push
fild
jno
jo
fwait
inc
xor
(bad)
adc
xor
push
das
and
add
push
cdq
mov
add
push
push
or
inc
jae
cs
ror
inc
inc
pop
dec
push
push
pushf
out
repnz
sbb
add
dec
add
mov
(bad)
jl
xchg
ds
jbe
cmp
push
push
scas
push
add
inc
push
push
pop
outs
mov
imul
dec
test
sub
mov
int
inc
xor
ja
out
sbb
add
and
dec
movs
loopne
pop
sbb
push
or
jecxz
cmp
cmc
enter
dec
sbb
adc
mov
push
xor
loop
pop
cmp
shl
(bad)
xor
xchg
mov
stos
adc
mov
adc
mov
inc
pushf
adc
fild
popf
ffreep
fisubr
test
movs
or
mov
enter
ins
xchg
ror
es
mov
fidiv
xor
mov
ins
cs
pop
push
adc
(bad)
push
out
push
pop
ret
and
or
jo
push
mov
or
nop
push
pop
pop
test
daa
imul
dec
push
or
xchg
push
pop
dec
or
add
adc
adc
add
xchg
jnp
jo
test
cdq
push
mov
sbb
inc
outs
xor
xlat
adc
or
icebp
push
sub
and
inc
cmp
cmp
sar
scas
mov
pop
dec
adc
jno
add
cdq
mov
cmp
sahf
cmp
mov
and
push
or
ret
retf
xor
xor
test
popa
dec
out
mov
sub
shr
sbb
sub
ficom
enter
push
lds
scas
fisttp
push
mov
imul
or
in
adc
sbb
sub
icebp
sub
ret
mov
test
out
sbb
aad
or
sbb
dec
sbb
adc
nop
lock
dec
xor
push
push
or
cmp
scas
adc
push
push
xor
pop
dec
add
mov
and
cmp
test
xchg
inc
pop
pop
loopne
inc
inc
add
fdivr
je
add
push
jo
xchg
imul
sbb
push
push
and
adc
jnp
jp
fild
mov
jne
push
jle
gs
out
inc
sub
pop
mov
add
shr
inc
add
fdiv
push
adc
pushf
fwait
sbb
mov
cwde
fistp
mov
inc
mov
mov
add
inc
into
out
rcr
and
movs
dec
inc
xor
nop
(bad)
sub
adc
idiv
inc
movs
mov
jecxz
add
mov
pop
mov
inc
xor
cmps
fstp
jp
cmps
dec
dec
sub
sbb
shr
sub
or
or
loope
jnp
dec
and
test
js
mov
jne
aaa
pop
retf
ficom
loope
mov
lea
adc
jo
lods
mov
not
or
xchg
test
(bad)
pop
aam
movs
test
push
les
add
push
jo
xchg
sbb
push
or
add
(bad)
rcr
inc
loop
popa
or
sub
push
sub
inc
and
jmp
or
jo
fs
or
push
ror
and
xor
push
inc
ret
out
and
cmp
or
dec
test
lea
pushf
cs
xchg
adc
xor
and
jge
cmp
or
lock
rol
dec
popf
nop
dec
xchg
loopne
retf
or
bound
je
push
mov
dec
sub
push
push
add
cmp
sahf
and
xor
mov
call
dec
int
jno
lock
sub
xchg
inc
cmp
pop
mov
mov
icebp
out
inc
or
add
inc
es
(bad)
and
imul
sub
sar
pop
ror
push
ret
push
dec
jmp
mov
fstp
pushf
imul
add
dec
sbb
pop
inc
sahf
add
add
arpl
out
or
inc
sub
mov
fs
push
cli
xor
repz
les
je
js
(bad)
xchg
pusha
enter
push
mov
push
push
pop
sar
mov
or
pop
push
xchg
xchg
inc
or
xor
aam
pop
imul
xor
adc
retf
push
inc
fsub
mov
and
das
pusha
adc
dec
mov
jne
xor
cmp
mov
in
pop
aam
nop
lock
jge
inc
jb
add
mov
imul
inc
inc
sub
ss
inc
addr16
sahf
mov
mov
push
push
mov
and
sub
mov
add
in
cmp
fld
loope
retf
dec
or
dec
push
pop
lock
or
sbb
or
dec
fstp
js
xlat
stos
pop
mov
stos
xchg
daa
jae
sbb
push
push
aam
or
push
fld
or
jmp
aaa
enter
xor
gs
call
test
test
sbb
jb
nop
sub
add
ja
leave
call
adc
lea
fst
popa
cmp
stc
mov
push
cli
sbb
mov
sub
mov
ja
sub
dec
push
and
push
mov
movs
push
push
adc
fsubr
xor
mov
into
and
int3
adc
movlps
sub
jle
nop
add
call
arpl
or
scas
sbb
add
cmp
xchg
add
push
pop
pop
mov
mov
or
setg
aas
mov
mov
adc
loop
sbb
jno
sbb
in
arpl
push
jae
xchg
add
(bad)
je
mov
add
loop
jne
jne
pop
nop
inc
jb
jge
add
add
arpl
sahf
pop
jmp
movs
xchg
xor
mov
xchg
test
dec
pop
xor
inc
lods
cmp
pop
out
cmp
add
push
movs
sub
mov
pushf
jl
ret
adc
scas
je
rcl
adc
xchg
or
and
inc
push
xchg
push
jmp
jge
icebp
or
cmp
sbb
push
jecxz
(bad)
adc
pop
push
inc
or
add
sub
xchg
cmp
mov
push
push
mov
aam
fisttp
and
adc
mov
sbb
ja
xchg
loop
aam
es
int3
xor
scas
mov
xchg
ret
das
and
mov
sbb
shr
loope
or
push
pop
popa
jmp
jbe
mov
push
cmp
and
mov
adc
xchg
xor
mov
pop
imul
and
and
(bad)
xchg
cmp
adc
add
and
adc
imul
xchg
adc
mov
adc
dec
mov
jmp
inc
mov
sti
outs
xor
inc
mov
sub
scas
and
cmp
icebp
jle
sub
mov
jb
popa
add
mov
sbb
pop
lods
test
pop
imul
xor
sbb
pop
mov
dec
ja
ficom
(bad)
adc
or
nop
rcl
push
xor
std
xlat
sbb
mov
mov
dec
mov
xor
sub
push
mov
mov
cmp
jmp
add
sbb
cmp
adc
sbb
add
ds
inc
and
push
push
push
add
and
sti
and
add
dec
inc
add
loopne
sbb
push
push
or
cmps
test
add
js
xchg
movs
call
push
imul
or
sub
xor
mov
sub
and
inc
dec
or
and
lds
mov
rcr
or
cld
sub
dec
fistp
sbb
sub
loope
sbb
popa
push
adc
or
lds
or
(bad)
sub
add
loopne
arpl
dec
mov
outs
push
stos
mov
pop
into
fcom
jno
adc
sub
les
outs
lods
and
mov
sub
sar
push
push
mov
add
sbb
xchg
cmp
aaa
push
mov
or
(bad)
xchg
test
inc
add
push
jmp
jae
rcl
push
push
push
or
lock
icebp
push
and
mov
mov
enter
push
mov
test
scas
in
mov
sti
or
ret
fdiv
or
push
add
pop
mov
pop
lock
pop
mov
inc
jl
(bad)
mov
imul
add
mov
add
push
push
push
or
outs
div
mov
inc
push
inc
imul
aad
loope
icebp
movs
dec
rcl
mov
mov
scas
cmp
dec
mov
cdq
add
sub
mov
nop
xor
inc
add
sbb
shr
repz
retf
inc
sub
mov
sub
dec
jnp
sub
nop
sbb
jbe
cld
jns
pop
ret
push
sub
inc
or
mov
sbb
push
rol
inc
pop
xchg
and
sub
sahf
xchg
ud1
pop
mov
mov
mov
jmp
dec
or
or
jno
inc
sbb
movs
mov
cld
cmp
jae
cmp
cmp
mov
fnsave
and
sub
add
or
repnz
and
add
and
add
add
ss
loopne
add
push
addr16
mov
je
jmp
xchg
and
dec
movs
adc
mov
and
lds
das
sbb
push
adc
dec
add
cmps
push
scas
push
sub
inc
shl
jg
ins
jle
fld
pop
xor
push
or
inc
or
add
xor
je
add
(bad)
in
mov
add
or
jg
cwde
dec
jp
out
cmp
aad
lea
sub
fs
jbe
loope
adc
(bad)
in
test
std
push
mov
add
cmp
loop
jo
fist
repnz
inc
pop
outs
nop
sbb
and
jno
sub
clc
xor
fld
jge
cmp
imul
dec
push
xchg
aad
mov
loope
scas
mov
cmp
je
jle
push
mov
push
inc
mov
push
bnd
fdiv
pop
or
inc
dec
add
lea
inc
cmp
adc
bound
loope
mov
add
add
sub
mov
xchg
xchg
push
xor
cmp
call
outs
int3
jb
fadd
fnsave
or
call
xchg
add
sti
push
push
pop
mov
sbb
push
mov
int3
jge
or
or
mov
add
or
dec
loope
mov
iret
dec
aas
adc
add
xor
nop
aad
or
mov
or
lea
pop
rol
movs
cs
je
xor
pop
dec
rol
mov
stos
mov
cmps
or
stc
int
sbb
fisub
popa
mov
or
shl
and
fsubr
sbb
push
pop
lock
lock
sub
test
xchg
fwait
and
jb
cmp
mov
add
sbb
push
xchg
(bad)
pop
ds
xor
fdiv
inc
sub
xor
adc
xor
cli
mov
cli
sbb
popa
sbb
inc
repz
shr
mov
lock
xor
inc
jl
clc
xchg
add
and
lock
and
or
pop
add
adc
and
xchg
jno
mov
gs
push
outs
imul
call
fwait
cwde
mov
fmulp
fwait
jne
mov
sbb
pusha
dec
or
movs
push
rol
adc
push
dec
movs
inc
seto
mov
int
cs
cmc
pop
xchg
jmp
xchg
shr
sar
sub
xor
scas
inc
jp
inc
sub
sbb
outs
mov
mov
adc
jmp
int
mov
hlt
ins
jmp
dec
loopne
sub
inc
mov
xor
mov
aam
daa
push
(bad)
std
pusha
sub
loopne
xchg
f2xm1
cmp
ret
xor
mov
daa
das
in
cwde
dec
sbb
in
test
pop
and
sub
push
inc
push
fchs
outs
mov
inc
arpl
sub
outs
cmp
xchg
inc
mov
inc
jb
inc
sqrtps
mov
xor
jge
dec
js
std
sbb
inc
add
or
add
test
mov
mov
pusha
mov
rcl
mov
push
sbb
adc
(bad)
in
sub
xor
cmp
add
ret
rol
sahf
stc
sub
sti
push
bound
aas
je
jnp
adc
pop
(bad)
(bad)
fld
sbb
hlt
adc
jae
hlt
je
outs
xchg
jo
pop
nop
adc
dec
or
push
cwde
push
lods
pop
xor
js
push
jmp
adc
mov
and
xchg
jmp
std
xor
jp
inc
es
sub
cmp
repnz
pusha
mov
pusha
sub
inc
pop
ret
rcl
es
jmp
sbb
aas
fstp
mov
push
push
in
mov
ud0
dec
stos
and
pop
dec
in
mov
adc
sub
jne
cmps
fmulp
fcom
mov
xchg
add
mov
or
mov
pushf
xor
(bad)
inc
jo
adc
shl
popa
push
fs
jp
or
(bad)
inc
test
enter
jo
mov
cmps
xchg
sub
mov
mov
cmp
inc
mov
sbb
das
push
mov
lods
mov
push
push
dec
test
inc
xor
cmp
mov
or
test
push
mov
mov
cdq
cmp
add
lock
gs
inc
mov
push
mov
(bad)
xor
dec
test
sub
mov
sbb
lock
and
push
icebp
mov
or
fimul
shr
in
dec
pop
or
ss
and
sub
push
ret
dec
add
mov
inc
cmp
add
outs
icebp
shl
nop
out
adc
pop
ret
adc
cmp
adc
jnp
lea
(bad)
adc
repnz
mov
pop
clc
fsubp
and
and
mov
jmp
xchg
and
gs
pop
add
lods
cmp
outs
jmp
jne
test
aas
mov
je
std
sahf
add
mov
jno
loop
loopne
inc
dec
mov
test
xchg
xor
push
retf
xchg
fist
adc
inc
sbb
sub
loopne
ja
jae
xor
mov
pop
inc
stos
sub
add
cmp
es
pop
sbb
jae
in
push
sbb
adc
fs
sub
sbb
inc
dec
sub
daa
xchg
cmps
add
mov
inc
dec
cmp
push
out
lock
or
jb
adc
clc
retf
fdiv
jne
mov
in
sub
or
je
cs
jne
outs
out
ficom
lods
mov
leave
mov
int3
jae
cmp
add
test
cmp
xchg
mov
mov
and
(bad)
push
pushf
movs
pop
push
mov
aad
stc
movs
adc
(bad)
mov
jg
lea
push
add
dec
sub
sar
fsub
(bad)
sahf
sbb
mov
jl
test
mov
popa
jo
retf
and
mov
or
fiadd
lock
and
xchg
push
in
fcmovbe
and
out
push
sub
retf
inc
or
fdivr
jmp
sbb
jne
fld
push
jo
mov
xor
popa
pop
sti
xor
adc
xor
outs
mov
enter
aas
mov
push
pop
test
add
in
inc
push
outs
adc
add
aad
push
push
jle
push
mov
adc
push
retf
add
add
mov
leave
xor
sbb
lds
jne
pop
sub
(bad)
sbb
mov
cmp
cld
push
inc
fimul
sub
xchg
pop
or
push
in
js
xor
int3
iret
adc
xchg
jbe
shl
adc
(bad)
mov
push
push
sbb
pop
jne
ds
pop
cmp
add
popa
mov
push
lea
dec
js
push
rcr
or
inc
(bad)
in
cmp
push
cli
je
mov
dec
jo
add
or
mov
cmp
dec
cmp
cmp
inc
cmp
ret
mov
jmp
ds
retf
xor
sbb
inc
in
xor
lds
test
or
in
jmp
pop
xchg
movs
jmp
sub
aas
(bad)
loop
sti
call
adc
out
pop
xor
push
xchg
leave
(bad)
ret
jb
jl
or
cmp
pop
inc
dec
data16
or
stc
imul
cli
into
cmc
lds
jae
mov
sar
add
mov
mov
mov
add
test
xchg
push
call
mov
std
out
sbb
cmc
add
dec
lahf
imul
push
imul
xor
sbb
add
and
lds
pop
das
and
add
jmp
xchg
mov
jnp
fadd
pop
ja
cmp
ins
mov
adc
mov
dec
popa
jbe
lock
push
jecxz
and
or
jmp
fsubr
hlt
push
xlat
js
icebp
jne
mov
add
ins
xor
xlat
shl
push
xor
mov
add
js
rcr
stos
xchg
ror
push
sub
sub
lods
retf
xor
and
lods
add
push
dec
lds
pop
hlt
jle
sub
adc
push
and
add
lods
adc
mov
mov
mov
fdiv
mov
xor
add
mov
push
dec
inc
jg
cmp
jl
prefetchnta
pop
mov
enter
inc
xor
push
xor
pop
cmp
mov
add
xor
or
inc
cmp
cmp
inc
pop
cmp
in
sbb
std
sub
xor
xchg
sub
xchg
adc
nop
jmp
fmul
ffreep
(bad)
adc
and
push
daa
out
pop
add
mov
mov
xor
mov
repnz
add
pusha
aad
mov
pop
aaa
jl
jne
add
sub
xchg
push
sub
pop
pop
or
in
lahf
aaa
jne
cmp
sbb
or
popf
push
and
pop
adc
sub
in
bound
loop
test
bound
xchg
ins
mov
sar
add
or
adc
xor
sub
sub
lahf
fs
mov
rcr
imul
pop
push
add
fs
(bad)
push
push
push
lea
push
sbb
cmp
test
sar
or
iret
sbb
mov
or
push
lods
test
and
or
or
stos
xor
enter
sbb
mov
jbe
xor
jg
sub
cmps
sbb
loop
xor
mov
test
sbb
call
cdq
sbb
sub
popf
hlt
in
mov
pop
loope
mov
push
cmp
scas
cmp
into
and
mov
test
push
sbb
inc
daa
cmp
sar
mov
in
retf
rcl
data16
mov
jl
or
lea
jnp
jo
dec
push
in
xchg
(bad)
in
push
push
pop
pop
adc
aaa
add
popa
pop
ss
daa
imul
mov
sub
sub
stos
pusha
mov
sub
loope
rcr
inc
sbb
dec
dec
push
mov
or
dec
outs
test
outs
sbb
outs
jl
neg
inc
mov
or
aad
sbb
xlat
add
mov
mov
mov
call
ficomp
mov
rol
stc
enter
and
(bad)
repnz
or
and
fidivr
clc
cmp
push
cmp
add
mov
pop
inc
mov
cmp
lea
xor
jmp
fimul
not
cld
pop
and
add
rcr
ret
and
ja
adc
pop
jo
test
and
jle
cmp
(bad)
pop
push
inc
sub
jmp
mov
cmp
pop
(bad)
inc
rcl
cmps
pop
xor
sbb
and
repnz
dec
(bad)
xor
aaa
call
push
jne
dec
mov
and
mov
fsqrt
dec
sub
sbb
ds
fs
hlt
jnp
push
ret
xor
cli
imul
cmc
sub
inc
pop
adc
aas
push
adc
pop
retf
mov
fs
in
repnz
adc
xor
or
and
or
add
fsubr
adc
inc
push
push
adc
add
repnz
imul
jb
loop
sbb
push
sti
fsub
pop
jae
and
dec
ja
mov
jns
retf
inc
push
inc
push
jnp
push
jmp
jp
dec
cs
imul
push
mov
pop
je
or
ss
je
inc
mov
sub
outs
lods
xchg
aad
or
cmp
push
add
jp
aam
pop
loopne
xchg
xor
xor
retf
ret
in
add
add
fiadd
sbb
popa
mov
mov
pop
jo
mov
jne
mov
sub
in
dec
loope
jge
mov
mov
jg
xor
inc
xchg
cmp
test
cmps
and
jl
inc
adc
push
xor
add
ror
aas
dec
jne
pop
mov
scas
fist
js
dec
add
sub
xchg
dec
int3
xor
mov
aad
mov
pop
push
push
push
inc
in
fdiv
push
jbe
fiadd
add
idiv
shr
inc
loop
neg
add
fs
out
sbb
and
out
jmp
fimul
cmp
(bad)
cli
add
jle
pop
lahf
add
ins
(bad)
inc
push
js
(bad)
sub
sbb
pop
enter
shr
pop
add
mov
mov
(bad)
cld
xor
adc
push
add
adc
ficom
cmp
push
or
push
cdq
sbb
(bad)
cmp
jae
inc
es
bound
test
push
and
enter
cmp
sahf
sbb
enter
add
push
jl
cs
jb
mov
add
aam
jmp
xor
xlat
add
les
sub
push
mov
shl
out
inc
add
push
cs
mov
data16
rol
mov
in
mov
sbb
jg
add
sbb
pop
add
js
jp
add
sub
int3
dec
inc
adc
xchg
xor
and
add
loopne
add
shr
or
jge
mov
pop
xor
neg
mov
cmp
cli
jae
lock
or
adc
fiadd
add
in
ins
ret
add
loop
rcr
adc
inc
inc
add
outs
mov
out
push
push
mov
(bad)
push
push
rcr
call
mov
mov
and
xor
inc
sub
sub
inc
ja
mov
shr
mov
or
pop
adc
(bad)
pushf
test
jge
fidivr
lods
fld
sbb
mov
cmps
arpl
or
pop
pusha
add
dec
lods
add
fwait
adc
mov
xchg
or
dec
mov
jne
and
dec
fidiv
add
add
inc
fiadd
pop
xor
push
out
or
xor
add
call
dec
dec
jo
add
mov
sub
cwde
pop
mov
add
fcomp
jnp
add
sbb
(bad)
push
inc
gs
mov
in
popa
sbb
add
adc
retf
sub
test
add
xor
adc
dec
cmp
sub
sbb
inc
adc
mov
mov
add
jne
mov
loopne
stos
inc
clc
enter
xor
add
mov
inc
(bad)
dec
cmps
inc
das
mov
leave
mov
stc
push
and
je
cdq
nop
add
and
cld
lds
pop
and
push
push
or
inc
add
mov
adc
add
adc
xchg
push
cli
inc
xor
push
sar
mov
or
or
inc
sbb
xchg
push
cmp
and
popf
imul
cmp
outs
push
add
pop
cmps
jp
jno
cmps
rol
jbe
jo
mov
xchg
dec
push
movs
enter
inc
jae
shl
test
dec
icebp
loope
push
jae
pop
inc
xor
or
jl
xchg
out
inc
mov
sub
rol
js
pop
add
out
adc
out
add
inc
js
(bad)
cmp
inc
cmp
or
xchg
mov
jmp
mov
rep
sar
xchg
or
loope
sub
adc
mov
hlt
mov
repz
pop
in
enter
jmp
ret
push
mov
mov
ds
xor
push
jl
outs
add
add
popa
inc
sbb
stos
cmp
mov
adc
xor
inc
push
xchg
adc
retf
je
call
fnstcw
inc
sbb
leave
aaa
or
rol
sub
pushf
fnsave
adc
sub
popa
add
jae
xlat
aaa
sub
jmp
or
jmp
sub
jo
jae
jae
jmp
inc
jmp
inc
jmp
inc
jmp
jae
jae
inc
jmp
xor
dec
aaa
jmp
or
add
jmp
xchg
xchg
sub
mov
cmp
add
push
cs
shl
mov
fadd
pop
cmp
dec
add
or
mov
push
sbb
adc
mov
dec
sub
jne
imul
mov
adc
cmp
push
xor
mov
push
sahf
add
xor
mov
mov
mov
popa
jnp
aad
or
jne
mov
jbe
adc
test
(bad)
(bad)
call
bound
add
test
jmp
push
push
push
and
jo
add
cmc
aas
aam
fdiv
xchg
mov
jns
add
push
loop
xchg
test
call
lods
outs
jo
xchg
xchg
inc
(bad)
call
sbb
add
push
add
dec
stos
ja
pop
cmp
mov
movs
or
adc
mov
pop
cmps
cli
and
imul
das
rcr
ja
pop
rcl
and
into
lea
dec
fisttp
je
pop
jne
and
dec
add
fadd
and
fcomp
push
fs
cmp
enter
pop
aam
adc
loope
mov
shl
pusha
cmp
imul
cmp
test
push
shl
pop
lods
jno
jnp
cwde
mov
add
cmp
xchg
in
lea
lock
call
mov
jmp
mov
mov
cmc
(bad)
push
stos
cs
adc
or
cmp
add
add
out
xor
iret
or
and
and
add
test
adc
and
sbb
leave
int3
mov
call
adc
xor
jae
mov
jge
jne
imul
dec
jo
sub
stos
fist
movs
sbb
dec
pop
and
cli
sub
fdivp
adc
push
xchg
(bad)
adc
add
or
sub
jle
mov
inc
xor
pop
jbe
inc
cmp
(bad)
dec
adc
fst
inc
add
jg
push
sub
jge
dec
jle
push
sub
loopne
mov
push
push
mov
jecxz
fist
push
add
inc
cwde
sub
fcom
addr16
fld
je
adc
inc
(bad)
call
pop
leave
pushf
pop
shl
in
mov
dec
wbinvd
push
clc
lds
inc
fmul
add
imul
mov
test
mov
sub
dec
dec
dec
add
jnp
pop
lods
and
cmp
add
cmp
clc
xchg
sar
cmp
test
sbb
xor
mov
dec
pop
pop
enter
jmp
adc
ins
add
pop
call
in
loopne
or
sub
daa
outs
add
cmp
pop
add
push
inc
push
call
xor
cmp
jne
leave
stc
push
adc
cdq
cmp
mov
sub
test
ret
iret
leave
inc
sbb
aaa
jo
jo
hlt
ret
rol
adc
mov
lahf
cmps
mov
mov
in
js
push
mov
stos
mov
je
mov
mov
add
xor
ret
xor
push
push
mov
jge
les
nop
sub
xchg
add
and
pop
fcom
or
popa
inc
add
shr
inc
sub
or
cmp
je
dec
cmp
cdq
into
jp
test
ds
jmp
or
add
xlat
retf
fs
cli
push
push
mov
push
iret
aaa
push
repnz
adc
cmp
out
jno
shl
cmc
push
inc
out
push
push
sub
daa
out
lea
mov
jecxz
dec
xor
inc
adc
mov
add
xor
mov
adc
jge
clc
in
and
push
lea
jne
hlt
mov
push
add
lea
or
push
cmps
xor
rcr
mov
aaa
cmp
inc
push
pop
mov
jmp
jl
inc
jne
xchg
cmp
lock
xchg
test
sub
cmp
sbb
add
jne
pop
inc
add
push
cmp
push
xlat
xchg
mov
aaa
ror
fld
dec
add
rcl
ss
outs
push
sbb
mov
push
cmps
inc
push
mov
add
mov
gs
jmp
dec
stos
xchg
std
mov
rol
mov
dec
mov
push
in
in
sub
mov
jno
mov
add
in
cmps
and
retf
inc
test
xchg
clc
xchg
or
adc
or
fnstenv
inc
lods
retf
mov
pusha
mov
adc
sub
xor
cmp
add
xchg
jge
and
jae
cmp
dec
xor
inc
fcom
stc
sbb
xlat
add
xor
inc
pushf
dec
cmp
adc
lods
in
fdivr
push
jo
push
and
add
sti
nop
mov
adc
sbb
push
sub
aam
push
jmp
or
xor
je
push
daa
inc
pop
daa
mov
inc
aam
push
lods
je
or
pop
mov
es
cmc
mov
and
repz
mov
pop
hlt
inc
add
and
dec
aad
movs
(bad)
(bad)
cmp
scas
mov
push
dec
arpl
test
movs
adc
mov
cwde
jno
inc
and
or
inc
cwde
adc
or
dec
int
sub
xor
pmullw
daa
pushf
(bad)
push
js
push
test
push
pushf
mov
aad
outs
inc
push
jp
je
ror
cmp
cmp
nop
xor
pop
repnz
ja
inc
add
stos
jg
into
jmp
or
or
sbb
add
(bad)
int
adc
jmp
ds
jl
pop
fmul
inc
repnz
push
js
dec
push
fbld
add
loop
ret
mov
lds
cmps
mov
fidiv
lock
push
jne
dec
ror
pop
hlt
add
jg
(bad)
pop
call
pop
jo
mov
sbb
pop
(bad)
test
cmp
sub
test
xor
bound
fmul
push
mov
pushf
cwde
fadd
js
inc
cdq
and
adc
sbb
push
lods
xor
pusha
mov
xor
popf
sub
xor
xchg
inc
pop
lea
jmp
add
adc
push
or
out
push
or
stc
(bad)
add
clc
add
jmp
jnp
sbb
mov
test
ins
mov
ins
mov
lods
cmp
aaa
cmp
lods
jae
mov
mov
aaa
push
jmp
movs
ror
mov
or
retf
imul
push
inc
pop
test
add
push
pusha
push
mov
inc
xchg
and
sub
cld
cmp
call
mov
inc
push
call
push
(bad)
out
push
add
xchg
fadd
pop
and
out
loope
push
cmp
leave
add
dec
cmp
pop
mov
cmp
xor
mov
and
out
adc
or
dec
popa
rcl
and
add
pop
shl
imul
stc
jbe
add
inc
les
mov
in
fadd
and
sbb
cmp
mov
das
rol
pop
xchg
clc
or
jmp
sub
int
mov
dec
mov
push
push
movs
sub
mov
mov
ins
pusha
rcr
add
push
je
jnp
add
(bad)
test
push
mov
mov
stos
or
stos
ins
jge
push
popa
movs
je
ins
push
into
iret
icebp
lahf
inc
push
div
leave
sub
cmp
and
mov
mov
aam
or
mov
mov
loopne
stos
push
sahf
add
sub
xor
push
movs
sbb
add
dec
js
add
rcr
adc
mov
and
dec
data16
and
push
rcl
mov
dec
out
add
and
inc
pop
sbb
xlat
xor
or
or
fdivr
sbb
dec
adc
adc
mov
ins
sub
inc
js
or
push
mov
test
lock
enter
inc
shr
movs
mov
add
cmp
add
sbb
xor
jne
icebp
mov
sbb
and
push
pusha
retf
push
into
ret
test
enter
add
mov
loopne
or
pushf
mov
xor
sub
lock
cld
inc
std
push
pop
(bad)
inc
mov
ins
or
push
into
popa
jp
pop
pop
xor
sbb
cwde
or
pop
push
add
js
xchg
mov
or
dec
cmp
ror
inc
cmp
ss
mov
add
movs
adc
loop
test
fnstcw
addr16
mov
call
sbb
add
pop
push
or
nop
test
jns
fsub
cmp
je
push
ins
or
mov
ret
mov
mov
stc
jne
inc
jecxz
push
and
mov
adc
adc
push
mov
cmc
add
push
je
add
gs
or
stc
sbb
sbb
inc
mov
repz
pop
icebp
sub
cmp
jge
or
fadd
adc
(bad)
test
cmp
xchg
push
push
mov
ja
pop
pop
and
cmps
or
dec
push
cmc
or
pusha
mov
and
mov
dec
sbb
sbb
push
xchg
fdiv
setnp
and
arpl
mov
in
nop
outs
mov
inc
icebp
sbb
dec
daa
and
ins
and
mov
mov
and
sub
and
test
mov
sbb
push
push
andps
push
mov
dec
and
bswap
inc
jb
movs
sub
movs
ret
mov
add
push
dec
(bad)
sub
int
sub
rol
mov
jge
loope
or
push
aas
push
rcr
pop
hlt
jo
div
push
bound
push
int
add
xor
add
add
or
jo
(bad)
cld
lods
or
data16
out
call
es
adc
cmp
cmp
dec
sub
xor
pop
iret
repz
push
add
cmp
idiv
or
pop
loope
or
or
ficomp
lock
push
hlt
rcl
xchg
xor
jle
mov
imul
icebp
pop
jmp
das
ss
idiv
(bad)
into
int
push
or
jb
push
or
or
jnp
pusha
adc
add
iret
repz
jmp
cwde
inc
aas
or
inc
out
add
cmp
add
add
push
or
out
or
nop
push
or
push
push
adc
and
(bad)
aaa
add
add
jmp
mov
inc
or
jno
add
pop
and
adc
js
xchg
aaa
push
push
push
ss
add
jns
xor
push
data16
adc
mov
rcl
call
xor
fiadd
adc
dec
mov
xchg
xor
sub
inc
xor
jo
ins
add
and
fdivp
push
lea
(bad)
pop
cmps
(bad)
push
js
mov
mov
popf
xchg
pop
mov
(bad)
inc
arpl
movs
stos
sub
inc
xchg
outs
sub
cmps
mov
sbb
adc
sub
mov
push
nop
shl
outs
shl
ret
shr
xor
and
mov
inc
mov
sub
icebp
and
xchg
sub
mov
scas
mov
xchg
xchg
bound
mov
retf
rcl
pop
daa
xor
sub
test
pop
sub
mov
pusha
ins
neg
push
jle
dec
cmp
push
cli
or
add
add
mov
add
loop
xor
cmp
mov
pushf
jnp
mov
(bad)
adc
cmp
add
or
idiv
adc
push
jmp
movs
in
push
pop
mov
les
push
push
mov
pop
sub
shl
ret
adc
imul
enter
adc
jns
inc
cmp
imul
or
out
dec
pop
rol
push
dec
sbb
fmul
add
xor
push
pushf
pop
mov
add
test
les
add
pop
pop
inc
inc
jo
and
cmc
adc
and
aaa
inc
ficom
inc
bound
pop
pusha
ins
into
push
add
jmp
mov
mov
mov
dec
arpl
push
iret
pusha
push
mov
xchg
mov
mov
(bad)
pushf
aaa
add
test
leave
ror
mov
lods
js
rol
jmp
in
sub
sbb
je
add
mov
loope
test
pop
sub
or
push
xor
or
mov
(bad)
pop
sub
add
lock
(bad)
or
adc
mov
adc
jns
mov
pop
fsub
je
add
lock
and
mov
test
es
add
push
pop
mov
xchg
mov
push
bound
sbb
mov
jne
mov
lods
lock
pop
fst
dec
xchg
outs
xchg
add
mov
in
loope
push
jg
push
inc
add
out
and
xchg
xchg
out
push
jnp
push
or
mov
nop
into
mov
pop
and
gs
rcl
adc
xor
add
or
adc
(bad)
ss
mov
add
jnp
adc
clc
push
rcr
cmp
sti
pop
pop
xchg
push
and
adc
adc
push
dec
pop
test
gs
(bad)
or
pop
xchg
add
or
or
and
push
mov
sbb
add
mov
xchg
sub
rol
mov
shr
add
pusha
add
push
push
mov
scas
mov
pop
dec
mov
es
mov
adc
sub
mov
mov
mov
ret
rcl
sub
adc
or
pop
(bad)
sub
add
iret
adc
pop
cwde
aas
push
movs
sub
sub
add
push
jns
push
sub
push
or
add
mov
sub
and
dec
pop
dec
daa
iret
or
test
out
xor
pop
mov
dec
xchg
sar
jnp
jb
push
and
add
popf
add
shl
pop
add
inc
(bad)
adc
dec
shr
nop
pop
repnz
sub
or
xor
cmps
adc
mov
jno
ins
pusha
rol
cmp
xor
xrelease
push
mov
add
repnz
cmps
inc
sahf
sub
sbb
in
xor
cmp
inc
es
xor
and
mov
push
leave
xadd
push
stos
sbb
add
pop
inc
jae
dec
mov
dec
mov
jbe
mul
xor
dec
bound
and
push
mul
mov
or
push
lods
sahf
xchg
sub
add
imul
retf
xor
cmp
sub
add
mov
xor
inc
sahf
add
inc
dec
push
dec
push
xchg
cmp
xor
(bad)
aaa
add
and
test
inc
je
lsl
sub
mov
jo
shl
data16
inc
imul
push
push
and
xchg
inc
xchg
and
pusha
stc
js
sahf
adc
or
mov
dec
arpl
leave
in
les
cmp
loopne
std
add
movs
xor
xor
add
pop
cmp
inc
push
sub
nop
push
push
adc
push
adc
push
jecxz
into
hlt
pusha
popf
or
test
jns
ins
add
mov
add
int
mov
inc
adc
mov
movs
shl
adc
pusha
mov
and
or
mov
push
push
sub
fs
add
sub
shl
adc
or
and
xchg
shl
inc
fwait
into
cmp
and
inc
push
mov
add
mov
retf
xor
(bad)
mov
enter
push
push
adc
sub
or
mov
stc
xor
xor
dec
sbb
mov
xchg
xor
or
xor
loopne
mov
jle
je
mov
mov
add
xor
(bad)
sbb
lods
adc
or
popa
add
out
pushf
mov
inc
or
adc
(bad)
adc
iret
repz
pop
add
xchg
adc
(bad)
cmp
sub
pop
inc
nop
pop
dec
pop
daa
inc
dec
adc
xchg
xchg
inc
jno
fbstp
dec
pop
adc
pop
and
shl
loope
imul
les
mov
popf
pop
or
sti
jmp
aad
leave
inc
nop
and
adc
mov
mov
pop
cmp
xor
adc
push
aaa
movs
fisub
mov
jmp
bound
push
and
and
adc
jmp
sub
arpl
dec
enter
adc
cmp
mov
add
dec
mov
pop
sahf
or
sbb
lds
or
add
mov
fidiv
push
and
aam
push
mov
mov
add
xor
push
pusha
pop
or
or
or
and
outs
pop
dec
fld
sbb
popf
je
lea
les
sub
ja
cwde
dec
ret
push
mov
or
popa
in
ret
mov
add
cmp
and
and
pop
dec
in
xor
adc
dec
pop
and
xor
fld
cmp
fld
pop
les
push
loope
sub
fstp
dec
fwait
or
fmul
and
retf
sbb
push
mov
fadd
or
adc
mov
mov
stos
or
xor
adc
sub
pop
ja
pusha
add
dec
xchg
xchg
adc
or
sbb
dec
jo
ja
and
xchg
and
mov
es
ror
pop
(bad)
jnp
or
dec
jmp
and
adc
ja
ins
pop
inc
retf
or
sbb
cmc
and
sbb
mov
enter
pop
or
or
(bad)
dec
test
add
outs
pop
sbb
adc
mov
out
mov
add
xchg
dec
sbb
and
cmp
cmp
pop
stos
(bad)
js
inc
outs
cld
sub
lock
sbb
or
push
fist
xor
mov
pop
jle
js
xor
cmp
int
xchg
fs
inc
jecxz
push
sbb
sub
or
xchg
jnp
hlt
(bad)
push
icebp
out
daa
mov
shl
loopne
pop
cmp
push
cli
add
mov
mov
jp
add
ret
in
or
inc
cmp
add
call
pop
add
cli
push
push
push
dec
cmp
jp
inc
outs
mov
jle
pop
out
mov
gs
or
mov
add
out
inc
retf
out
sbb
mov
or
xchg
jge
xchg
mov
jnp
sbb
or
je
lock
dec
or
fidivr
fadd
sbb
dec
jbe
inc
sbb
xchg
and
cmp
ja
sub
push
jge
lock
mov
jle
inc
(bad)
sub
cs
ja
pmulhuw
mov
jnp
add
push
cmp
add
and
pop
mov
add
lods
dec
jl
mov
sbb
inc
cmp
add
jl
sub
je
(bad)
or
dec
sub
das
sub
dec
mul
fadd
mov
jle
add
lea
ror
jnp
sub
dec
or
and
inc
add
jbe
ja
pop
gs
adc
xor
cld
dec
mov
xchg
push
mov
test
dec
inc
mov
pop
pop
call
push
hlt
jo
pop
pop
xor
jle
fcomp
cli
rcl
adc
jae
pusha
js
sahf
nop
stos
mov
in
add
xor
lock
sub
and
fcomp
pusha
add
jne
push
js
add
mov
test
cmp
xor
jmp
nop
push
mov
adc
lods
mov
jb
xor
retf
call
inc
sbb
out
add
and
add
(bad)
mov
xchg
rcl
clc
push
(bad)
leave
fst
sahf
mov
daa
shld
mov
(bad)
push
loop
or
dec
inc
sub
push
inc
push
pushf
sub
mov
adc
and
adc
cmps
imul
or
mov
fdiv
dec
xor
call
cmp
jo
mov
inc
inc
inc
lea
sti
mov
jmp
xor
push
pop
pop
push
inc
sbb
add
adc
mov
mov
(bad)
fmul
xor
xchg
mov
push
cmps
retf
add
or
test
add
xchg
inc
pop
xchg
test
push
and
pmaxub
sub
ror
add
add
rol
inc
imul
adc
sbb
adc
dec
sbb
cwde
adc
call
in
mov
sub
xor
jmp
jl
or
adc
out
outs
and
test
cwde
add
xor
xchg
and
fisttp
adc
jne
inc
mov
pop
bound
aam
add
mov
test
mov
mul
adc
dec
inc
mov
mov
push
xor
pop
push
repnz
mov
cs
bound
movs
mov
pop
sqrtps
mov
and
push
jmp
sub
out
or
pop
xchg
(bad)
push
push
ror
into
retf
stc
or
lea
jge
test
ficom
adc
adc
and
mov
sub
jl
sbb
test
icebp
adc
and
scas
or
adc
add
add
xor
gs
cmp
sbb
ja
mov
das
adc
inc
xor
cmp
dec
pop
fistp
push
pushf
es
imul
mov
inc
in
cdq
sbb
cmps
rol
in
out
push
sub
adc
rcr
add
mov
dec
pusha
aas
adc
mov
das
jecxz
jmp
test
mov
dec
ficomp
jg
xor
aas
push
ret
inc
fdivrp
and
push
les
jl
dec
mov
sub
out
mov
cmp
mov
mov
push
and
out
xchg
pop
and
mov
rcr
jns
dec
push
push
mov
mov
stos
in
mov
adc
imul
loopne
sub
mov
sbb
clc
jbe
in
je
rcl
inc
js
ficomp
call
rol
movs
icebp
xor
sub
pop
aam
add
xor
int
inc
cmp
and
pop
loope
dec
xchg
push
xor
clc
lods
push
outs
pop
dec
mov
push
data16
sbb
loop
push
push
out
fiadd
push
cmp
pusha
fnstsw
inc
dec
dec
aas
push
pop
pop
pop
dec
pop
cld
bound
push
mov
jmp
inc
or
enter
or
mov
push
or
in
adc
push
mov
and
push
sbb
cli
and
popa
popa
data16
cmp
adc
push
inc
push
ret
and
test
inc
mov
xchg
sbb
sahf
scas
into
adc
dec
cmp
loope
mov
mov
xor
push
push
mov
popa
or
cli
jbe
ja
shl
pop
fisttp
add
push
cmp
add
sub
adc
ret
loope
push
sbb
add
leave
pop
jp
add
loope
inc
cmc
test
mov
mul
xchg
and
shld
and
add
mov
mov
push
cmp
ds
mov
mov
xchg
pop
xor
lea
cmp
inc
shl
jns
pop
pop
pusha
fs
xor
sub
cwde
arpl
mov
adc
not
(bad)
(bad)
pop
call
or
or
cmp
mov
and
pusha
repnz
push
int3
xchg
packssdw
xlat
cs
or
pop
sub
mov
ss
retf
enter
mov
int3
repz
bound
push
jbe
mov
and
dec
lods
pop
js
xchg
jl
or
psubusw
pop
inc
xchg
inc
mov
pop
push
cdq
sub
push
repz
mov
fadd
sub
leave
rcl
cmp
inc
push
dec
mov
push
stc
xchg
ins
imul
sbb
dec
dec
frstor
mov
loopne
add
aas
movs
dec
call
push
xchg
jno
je
or
cmovo
add
xchg
push
loopne
push
pop
(bad)
sar
sub
sahf
lea
clc
cmp
jle
sub
sbb
add
cmp
retf
xchg
pop
mov
jle
adc
bound
push
scas
retf
enter
test
cli
sbb
fist
xor
int3
adc
jbe
and
cmps
push
add
fsub
add
dec
fcomp
lock
cmp
je
adc
mov
test
mov
push
mov
retf
rol
dec
cmps
jbe
pushf
mov
enter
push
adc
mov
(bad)
repz
inc
outs
popa
xchg
sub
inc
add
push
push
mov
pop
sti
dec
loopne
add
mov
and
sbb
add
adc
arpl
push
shl
xchg
test
add
and
add
inc
and
sub
push
(bad)
or
adc
mov
sub
jle
cmp
iret
push
cmps
test
ret
inc
push
dec
adc
int
adc
xchg
or
xor
adc
and
ror
sbb
pop
(bad)
mov
push
(bad)
loop
push
and
pop
inc
sub
nop
sbb
sbb
add
shr
mov
add
aas
or
xchg
imul
sub
sbb
stc
outs
push
mov
sub
mov
lea
ja
aam
lock
js
cmp
sub
int
loope
jns
mov
hlt
and
or
add
add
imul
add
add
popf
or
push
jle
sub
nop
retf
mov
or
mov
cmp
pusha
jmp
push
sbb
test
sbb
repnz
add
sub
push
dec
xchg
add
push
push
nop
cmp
xor
pop
mov
push
push
outs
push
into
add
mov
or
or
pop
cmps
or
sbb
ss
mov
ss
adc
ins
ror
push
retf
ja
es
sub
push
sbb
outs
sbb
sbb
jns
idiv
or
mov
xchg
ss
sbb
xlat
cmp
into
mov
adc
push
ror
xlat
mov
xchg
jl
push
dec
jo
adc
xor
jp
adc
inc
jmp
es
mov
fwait
or
xor
xchg
push
and
shl
aam
in
add
cmc
pop
sbb
sbb
mov
fs
pop
lea
push
lock
push
cs
push
mov
fld
push
es
fimul
xor
push
xor
pop
(bad)
jl
xor
lods
adc
sbb
mov
or
cmp
jl
push
movs
verr
add
and
add
xor
popa
push
shl
les
cld
and
pop
inc
ins
inc
jl
pop
sbb
inc
jbe
inc
gs
mov
push
mov
pop
push
add
jmp
out
sub
sbb
sub
sbb
push
icebp
xchg
outs
add
push
cmp
and
sbb
mov
mov
aam
test
je
cmp
push
imul
xchg
rol
sbb
pushf
adc
and
sbb
adc
xor
adc
fsub
ret
or
je
add
movs
jmp
inc
xor
xor
or
dec
push
fisub
cmp
test
mov
add
or
stos
inc
or
adc
cwde
lods
sub
sbb
mov
(bad)
sbb
rol
fistp
add
inc
cmp
jle
mov
inc
shl
push
and
or
pop
jl
cwde
je
ret
push
dec
push
cwde
retf
mov
lods
cmp
jge
or
mov
xchg
pusha
rcr
jl
inc
push
add
sti
es
(bad)
fisttp
nop
and
add
sbb
ja
mov
movs
movs
add
aas
(bad)
cli
bound
or
dec
dec
idiv
je
inc
add
rol
scas
jp
call
cwde
inc
dec
enter
ins
xlat
ret
popa
sub
push
mov
adc
sbb
in
xor
and
sar
ja
lods
test
or
jo
sbb
test
mov
or
movs
imul
loopne
cdq
xchg
dec
sub
fidivr
dec
arpl
sub
fiadd
fadd
repz
mov
inc
(bad)
xor
hlt
and
push
test
cmp
dec
xor
add
pusha
xor
adc
cwde
rol
and
inc
mov
jle
loopne
mov
inc
push
or
mov
xor
and
mov
xor
pop
aaa
test
shr
push
push
xor
sbb
add
test
adc
fs
sub
mov
sub
xchg
inc
mov
xlat
inc
jmp
aaa
and
xor
sti
and
mov
adc
pusha
pop
jecxz
add
dec
cmp
pop
push
or
dec
xchg
movs
fldenv
adc
mov
push
inc
mov
dec
xor
cmp
or
mov
or
jno
mov
aam
je
(bad)
stos
vpaddusw
test
fidivr
sub
xchg
pop
mov
cmp
das
ins
imul
movs
adc
adc
and
test
xor
mov
xchg
push
dec
or
dec
fwait
arpl
mov
nop
test
or
mov
add
push
and
test
inc
mov
mov
sub
adc
es
mov
lock
jg
js
xor
pop
stos
push
mov
xlat
frstor
xor
jle
sar
js
loopne
iret
(bad)
(bad)
pop
sbb
mov
sar
add
add
arpl
ja
add
pop
bound
aaa
add
adc
jmp
add
xchg
adc
or
outs
loopne
imul
adc
cmp
pop
nop
mov
ret
jmp
add
mov
push
push
push
test
and
pop
leave
push
mov
addr16
dec
inc
mov
add
cmp
cmp
add
xchg
fidivr
sbb
ret
adc
arpl
lea
adc
ins
pusha
dec
call
es
cmp
inc
mov
aam
xchg
xor
push
jno
call
add
test
test
lahf
add
jg
jge
inc
xchg
adc
pop
mov
inc
xor
js
adc
mov
nop
mov
jmp
dec
ret
inc
test
les
loopne
sub
ror
or
fst
stos
jecxz
push
add
or
imul
or
adc
and
inc
pop
sbb
jbe
xlat
(bad)
inc
jp
xor
je
adc
js
sub
adc
jns
adc
clc
mov
(bad)
jmp
rcr
pop
xchg
retf
scas
test
adc
movs
jns
adc
sub
in
test
add
jle
mov
and
jno
test
or
out
xchg
jo
scas
mov
cwde
pop
pusha
loopne
or
adc
aas
pop
mov
ret
xchg
push
aad
retf
or
xchg
dec
add
mov
mov
xor
pop
mov
mov
sbb
in
imul
sub
pop
mov
xchg
add
add
mov
add
cmp
je
or
sbb
xchg
cmps
push
imul
push
pop
sbb
xchg
sbb
sbb
pop
and
lock
sub
mov
cmp
jne
mov
outs
dec
jmp
ret
mov
mov
sbb
dec
mov
xchg
adc
cmp
outs
push
or
pop
mov
dec
lods
add
mov
jl
in
mov
xor
mov
add
pushf
push
adc
sub
popa
mov
xlat
sbb
sbb
push
push
pop
sbb
xlat
idiv
retf
pop
and
push
cmp
outs
adc
outs
sbb
sbb
pop
or
pop
pop
pop
popf
and
push
arpl
cmc
out
push
mov
cdq
and
repz
js
out
push
sbb
sbb
dec
nop
(bad)
sahf
xchg
cmc
mov
jmp
adc
add
lock
jecxz
add
fdivr
cmc
and
(bad)
(bad)
adc
jp
and
xor
adc
scas
or
movs
ja
scas
jbe
push
loope
pop
or
out
in
or
shl
addr16
test
outs
inc
shl
addr16
xor
aam
xor
or
repz
or
or
mov
or
loop
adc
sub
cmp
push
xor
pop
and
sti
aam
inc
rcr
js
add
push
sar
sbb
dec
mov
xchg
pushf
ins
jmp
push
push
loope
inc
inc
xchg
and
sbb
inc
clc
add
and
dec
dec
dec
pop
push
mov
inc
jne
cmp
ins
add
test
add
sar
push
inc
or
js
ins
loopne
(bad)
fsubr
or
push
cmp
rcr
sbb
dec
arpl
push
inc
push
mov
adc
push
test
mov
sub
xchg
push
pop
ins
sub
in
inc
test
add
pop
or
cmp
rcr
loope
mov
lds
jmp
rcl
test
leave
xor
sub
pop
xor
xchg
jl
add
dec
mov
sbb
pcmpgtb
imul
sti
inc
test
shl
xor
sub
and
fs
clc
retf
inc
int3
mov
sbb
ins
cmp
push
js
lods
loop
jae
dec
cmps
inc
mov
push
popa
add
das
shr
js
sub
pop
and
je
push
retf
dec
adc
mov
cmc
test
cmp
mov
mov
sub
xor
ret
lahf
xchg
jle
mov
mov
add
or
mov
sbb
xchg
dec
mov
call
jno
xchg
sub
sub
mov
and
mov
cmovae
jl
movlps
in
dec
cmc
pop
xchg
sub
jmp
mov
fidivr
mov
imul
(bad)
mov
sar
xor
xor
arpl
or
xlat
or
js
js
xor
lahf
popa
mov
pop
(bad)
je
hlt
push
push
dec
add
jmp
xchg
test
out
inc
cmp
jl
loopne
call
cmc
test
lea
aam
xor
pop
or
jg
les
mov
dec
pop
xor
or
add
iret
and
xor
push
cmc
sub
sub
adc
sbb
pop
and
fimul
mov
mov
rcr
pop
push
dec
mov
and
shl
and
or
xor
mov
xchg
lods
lea
add
push
test
inc
cld
mov
fcomp
fadd
xor
jno
pop
ret
push
or
push
pop
scas
mov
mov
ror
das
loopne
test
aas
mov
lahf
push
stos
push
cmps
push
pop
and
dec
pop
and
dec
sti
jo
adc
push
ret
and
jmp
cmp
cmps
xor
int
test
pop
mov
or
inc
fwait
cmps
ss
push
push
adc
pop
dec
jo
add
sar
adc
fisubr
mov
outs
add
popa
fld
sbb
sub
pop
jae
xchg
inc
repz
jmp
or
pop
mov
mov
mov
imul
pop
xchg
ins
adc
pop
clc
mov
in
test
inc
mov
es
js
add
cmps
movs
xor
popf
xor
repz
pushf
xor
in
inc
jne
dec
repz
es
push
sbb
sub
push
xchg
rcl
jecxz
arpl
arpl
mov
pop
mov
cdq
add
stos
sbb
sub
jbe
push
shl
inc
aas
test
inc
jmp
push
dec
xor
loopne
repz
mov
aad
and
movs
push
mov
jle
stos
xor
or
sub
xor
mov
push
xor
jo
jecxz
movs
out
das
shr
and
fmul
add
rol
lock
sub
pop
(bad)
cmc
add
popa
loopne
popa
repz
loop
test
add
ds
clc
jb
dec
add
inc
sub
push
in
shr
bnd
mov
fisubr
inc
je
pop
sub
pop
xor
mov
iret
out
xchg
mov
and
(bad)
sbb
add
mov
sub
loopne
retf
push
scas
mov
adc
cmp
jnp
adc
sbb
add
adc
xchg
or
arpl
sbb
inc
or
inc
sbb
jns
sahf
sub
cmp
js
fst
dec
mov
cmp
jne
icebp
push
fsub
inc
xor
imul
cmp
and
cmp
outs
mov
push
inc
mov
pop
xchg
in
pop
inc
dec
hlt
add
imul
in
push
inc
bound
dec
dec
cmp
cmp
dec
or
jbe
cdq
inc
call
jle
add
mov
sbb
dec
sbb
add
mov
or
and
sub
(bad)
adc
bndldx
clc
rcr
enter
lea
or
fadd
push
movs
push
rol
sbb
ret
xor
outs
repnz
or
mov
pusha
cmps
fdivr
add
pop
or
in
aam
sub
int3
adc
push
fs
movs
cmp
imul
mov
inc
inc
and
dec
xchg
in
push
sbb
push
cs
pop
and
push
faddp
jb
and
mov
cmp
imul
aam
push
and
test
dec
int
stos
sbb
sbb
sbb
loopne
jmp
fnstenv
inc
fs
mov
xchg
aas
movs
fdivp
daa
or
retf
lods
jl
adc
rcl
sbb
push
add
mov
fadd
popa
xor
adc
jge
jmp
push
arpl
adc
ficomp
or
or
(bad)
push
loopne
xor
mov
dec
adc
or
jne
jecxz
push
xchg
push
add
dec
add
int
mov
mov
mov
pushf
fs
adc
cmp
jo
add
cmp
cmp
add
lods
enter
mov
or
imul
push
mov
(bad)
xchg
inc
adc
sbb
add
int3
inc
(bad)
push
and
test
outs
ret
(bad)
xor
and
nop
lods
dec
push
repnz
sti
aad
push
add
(bad)
mov
push
jg
pop
add
or
inc
lock
data16
sub
sbb
xor
xchg
mov
femms
loopne
sub
js
inc
inc
adc
dec
jmp
das
add
push
neg
xor
mov
pop
sub
adc
xchg
pop
or
int3
rcl
sub
sub
pop
and
pop
addr16
rol
arpl
inc
jne
xchg
mov
mov
adc
ret
lds
js
sub
ja
jmp
ret
jnp
cmp
(bad)
push
push
pop
lea
adc
ins
add
adc
(bad)
and
or
pusha
add
sub
daa
ret
popa
xor
push
js
xchg
(bad)
dec
cld
out
xchg
jbe
add
sar
jmp
mov
mov
dec
pop
cli
push
jne
jmp
aaa
in
inc
and
std
iret
cmp
(bad)
jecxz
and
push
sbb
repnz
call
lods
sti
push
push
mov
mov
adc
sti
mov
push
add
shl
rcl
jp
add
inc
(bad)
pop
xchg
push
and
adc
inc
imul
inc
cwde
jmp
sub
mov
pop
sub
jo
and
sub
sub
push
imul
and
push
cs
dec
mov
aas
push
push
aad
push
dec
push
dec
xor
add
pop
xchg
push
mov
and
jl
adc
add
jecxz
rcl
inc
jge
aas
cmp
lock
xor
popa
or
mov
mov
push
mov
push
shl
imul
cmp
pop
push
sub
cmp
rsqrtps
jns
jmp
push
rep
loopne
and
push
jmp
das
mov
mov
je
out
or
cmp
aam
pop
lods
ds
jae
test
fwait
push
inc
sahf
cmp
adc
or
or
inc
rcl
cdq
add
cmps
xor
(bad)
fstp
loop
mov
mov
mov
pop
push
outs
rcl
xor
mov
lods
push
or
inc
out
mov
push
cmp
je
cld
adc
js
(bad)
jne
cmp
sub
in
mov
push
gs
add
scas
popf
(bad)
fs
xor
xchg
jae
cmp
loopne
mov
retf
add
mov
mov
adc
xchg
jl
jl
mov
xor
fbld
nop
xchg
jmp
je
xor
sbb
das
adc
(bad)
sbb
jle
mov
inc
or
jge
fisubr
cmp
add
inc
inc
push
sbb
mov
xor
jmp
cmp
inc
test
push
loope
popa
push
push
aas
fadd
jmp
mov
pop
push
jl
pop
push
dec
mov
and
lock
ins
sbb
cmp
or
xor
pop
sbb
cmc
fdiv
adc
cmp
lds
shl
or
mov
adc
lods
or
test
sub
jge
aaa
je
push
dec
xchg
and
inc
push
xor
seto
or
or
adc
inc
or
js
test
gs
and
ret
xchg
mov
(bad)
xchg
ror
inc
push
mov
push
or
mov
jl
jmp
mov
call
adc
push
daa
mov
mov
test
cmp
jmp
jl
adc
add
jno
sbb
sbb
outs
lar
adc
fs
aad
jbe
(bad)
ins
and
std
and
mov
mov
fs
and
and
add
pop
push
jb
arpl
mov
dec
mov
sbb
js
mov
cmp
and
adc
pop
cli
cmp
or
clc
imul
or
xchg
and
or
push
retf
shl
jp
xchg
mov
or
enter
imul
nop
adc
nop
rcl
sbb
adc
push
inc
inc
(bad)
xchg
imul
sub
and
mov
test
shl
sub
dec
mov
xor
cwde
inc
cwde
mov
push
mov
pushf
mov
pusha
les
ja
add
es
movs
dec
add
xor
or
in
fistp
or
(bad)
or
jnp
js
aaa
sbb
cld
arpl
xchg
loopne
inc
inc
mov
dec
jb
gs
mov
and
inc
rol
inc
outs
xchg
jge
les
cwde
mov
jmp
add
adc
ds
sbb
shl
sub
mov
gs
cmc
mov
inc
pop
sbb
lods
ins
add
pop
push
outs
pop
xchg
mov
dec
mov
repz
stc
fcom
aas
and
dec
mov
push
push
xchg
dec
mov
jl
push
or
dec
iret
sar
shr
pop
(bad)
cmp
push
(bad)
ins
sbb
xor
sahf
xchg
pop
clc
or
jmp
std
dec
clc
push
sbb
and
ret
pop
sbb
mov
call
cmp
shr
cmovs
or
dec
movs
cmp
adc
push
call
adc
stc
fisub
loopne
loope
adc
mov
xchg
mov
adc
sub
add
push
add
or
dec
adc
push
aaa
pusha
pop
mov
inc
movs
ret
and
lahf
mov
js
mov
jecxz
imul
in
scas
prefetchw
or
fist
ja
repnz
or
or
icebp
push
mov
ret
xchg
inc
js
and
or
mov
pop
jg
cmp
jne
mov
sbb
and
push
or
and
cmp
cli
or
push
movs
sub
pop
dec
jo
inc
push
cli
(bad)
mov
sti
inc
push
mov
xchg
pop
ins
std
icebp
mov
scas
pusha
lds
mov
mov
xor
stc
push
popf
pop
adc
pop
dec
arpl
and
xchg
pop
add
mov
push
push
cmps
test
sbb
and
push
inc
movs
adc
pop
adc
or
sub
adc
icebp
ror
xchg
push
push
push
fld
add
sbb
cmp
fmulp
dec
jno
sbb
ret
push
sbb
sub
in
dec
mov
sbb
aaa
or
sbb
pushf
dec
dec
popa
mov
in
mov
mov
bound
aam
push
xor
sbb
adc
and
inc
outs
imul
(bad)
ds
dec
add
or
inc
add
or
fadd
xlat
dec
and
or
or
cmp
add
xor
pop
inc
jp
xchg
dec
pop
mov
pop
adc
pop
or
sar
callw
ja
or
aam
push
je
pop
ds
and
mov
xchg
pop
xchg
xchg
rol
sbb
outs
pop
mov
push
sub
xor
xor
jne
(bad)
inc
pop
jo
push
ret
inc
pop
adc
and
inc
inc
into
push
jg
enter
enter
xor
adc
or
adc
push
out
fs
ffree
xchg
xchg
inc
sub
mov
out
pop
mov
inc
jo
stos
clc
cli
inc
sbb
pusha
push
fs
lahf
or
jnp
sub
cmc
push
ud2
repz
mov
(bad)
js
jnp
xor
movs
dec
fidiv
in
mov
addr16
inc
bnd
aaa
jb
add
push
cwde
ret
(bad)
cmp
push
je
or
arpl
mov
xor
or
pop
pop
data16
add
shl
ins
cmp
les
scas
or
jle
adc
or
push
jl
cmp
xchg
out
adc
ret
dec
dec
add
test
pushf
outs
jo
pop
out
stc
add
pop
ret
sbb
xchg
adc
add
push
push
adc
push
and
pushf
ss
loope
mov
jnp
mov
(bad)
or
rcr
mov
sti
push
or
jno
pop
pop
repnz
and
lds
mov
ret
jns
shr
cmp
ror
vsubpd
xor
or
inc
mov
pop
lods
pop
sub
test
jge
ret
xlat
adc
std
scas
inc
fs
mov
and
(bad)
push
sub
cwde
cwde
movs
icebp
push
push
cwde
mov
outs
cmp
mov
popa
mov
repz
add
movs
lock
jl
and
adc
mov
fst
aam
jne
push
aad
push
xor
sbb
mov
xor
sti
in
add
xchg
mov
push
sub
and
jb
outs
push
test
mov
push
sub
push
pop
inc
xchg
xchg
add
inc
ud0
(bad)
cmp
repz
sub
jle
inc
add
push
pop
pop
mov
mov
push
repnz
pop
mov
jg
loope
in
mov
pusha
push
aad
push
add
cld
pop
xor
push
add
add
add
jg
or
push
or
loope
jmp
imul
int
sub
sbb
sub
xor
push
mov
jnp
test
inc
pop
and
add
inc
cmp
push
fdiv
es
inc
or
jecxz
inc
push
iret
shr
add
sbb
xchg
mov
push
arpl
lods
lds
outs
test
and
and
xlat
push
add
sahf
mov
test
push
mov
es
and
xchg
aaa
jne
je
mov
sbb
or
inc
or
dec
hlt
rcl
rcr
or
pop
fwait
mov
and
sub
retf
xor
inc
push
sbb
jp
fcom
sbb
sub
pop
(bad)
fcomp
rol
sbb
imul
and
cmp
sbb
push
mov
sbb
inc
clc
add
or
push
ror
push
add
jno
loopne
mov
push
mov
lods
mov
clc
push
inc
mov
adc
shr
cmp
jae
mov
pushf
xchg
push
imul
pusha
xchg
ja
push
cwde
stc
jmp
inc
in
and
push
mov
loope
mov
inc
jmp
pop
ins
mov
cli
jmp
and
in
and
lock
mov
jl
test
or
mov
test
cmp
push
and
adc
adc
outs
jo
mov
push
mov
add
mov
sub
test
mov
or
js
xchg
jno
jle
fbstp
adc
jl
mov
ret
(bad)
xor
pop
xchg
pop
into
scas
cmp
rcl
add
mov
pop
mov
cmp
lock
mov
out
sti
push
and
adc
mov
jb
mov
push
aaa
add
push
popf
sti
push
jg
aaa
out
sub
push
inc
cmp
or
fld
adc
xor
sbb
std
push
mov
push
sub
shr
out
dec
pusha
or
and
call
aaa
mov
inc
aaa
xor
mov
and
mov
in
out
xor
imul
jle
js
dec
dec
pop
add
psubsw
ins
sahf
add
rol
inc
inc
add
jo
test
jb
xchg
jno
push
adc
mov
sub
test
int3
imul
xlat
or
xchg
push
inc
(bad)
loope
nop
xor
lahf
sbb
addr16
mov
jno
mov
add
mul
and
inc
and
jb
(bad)
call
xor
push
imul
pop
add
sub
cmp
jmp
push
add
jmp
out
mov
adc
sbb
movs
xor
shl
lods
inc
outs
sub
push
inc
gs
jle
inc
mov
push
or
and
imul
or
cli
push
mov
les
inc
aas
rcl
push
sti
and
sbb
jl
mov
sbb
js
adc
push
call
sbb
enter
sub
adc
mov
enter
add
shl
sub
fnstsw
dec
sbb
or
dec
sub
movs
sub
dec
lock
xor
das
mov
mov
and
int3
fadd
xor
aad
inc
cmp
inc
jecxz
aaa
mov
rcl
push
fld
test
cmp
adc
inc
stos
or
push
mov
lods
push
xchg
mov
or
cmp
xchg
test
in
ins
sub
fldcw
in
push
or
add
dec
pop
jl
pop
or
gs
inc
jnp
sti
mov
stos
daa
mov
leave
dec
pop
push
sbb
and
fst
mov
mov
push
leave
and
pushf
fwait
push
or
add
call
outs
fcomp
xor
test
pop
arpl
or
rcl
lahf
or
inc
sub
inc
ds
add
pushf
sti
jo
push
ror
movs
mov
jne
cwde
pop
inc
stos
add
adc
mov
push
hlt
gs
xchg
and
test
add
pop
add
push
lods
ins
popa
adc
mov
push
sub
(bad)
les
test
retf
cmps
lds
imul
add
in
nop
mov
jmp
sub
lods
xor
add
mov
test
in
lock
xchg
(bad)
mov
xchg
cli
test
push
push
dec
inc
push
addr16
clc
mov
dec
xchg
mov
out
out
push
push
imul
xor
je
outs
push
hlt
fs
rcr
adc
cmp
das
sbb
jne
das
pop
dec
pop
std
add
dec
test
pop
and
daa
push
cmp
movs
add
pop
sbb
xchg
lahf
mov
sub
popa
repz
jecxz
test
mov
movs
push
sub
and
add
int3
test
add
jo
fwait
jo
xchg
or
push
push
jne
xchg
fnstsw
cmp
or
js
push
mov
jno
or
inc
pushf
ja
sub
add
or
cmp
repz
and
daa
xchg
int3
add
add
mov
or
pop
xchg
add
and
stc
xor
push
mul
es
sub
mov
or
pop
ins
mov
xor
pop
jns
cmovl
pop
mov
xchg
and
or
out
je
mov
cmp
popa
popf
add
repz
stos
(bad)
cmp
pusha
adc
(bad)
adc
or
stos
xchg
pop
mov
adc
fisttp
jo
fdiv
pop
mov
sbb
xor
out
mov
bound
neg
mov
dec
test
jp
je
test
xor
(bad)
dec
pop
div
dec
mov
push
jecxz
mov
mov
and
push
inc
xchg
into
xor
into
arpl
in
add
ffreep
mov
push
dec
or
jl
add
push
or
sbb
sub
or
add
or
push
aaa
jecxz
lods
push
dec
mov
or
cmp
push
(bad)
cmp
movs
and
aad
push
jnp
sbb
cmp
xor
and
outs
cmp
ins
fs
shr
jns
ud0
jb
in
mov
inc
push
xchg
sbb
ins
lods
xor
int
mov
dec
shl
adc
out
jb
push
adc
es
adc
adc
mov
mov
jp
cmps
mov
jmp
mul
pop
(bad)
add
add
nop
test
imul
jbe
mov
into
mov
push
push
xchg
aaa
xchg
xor
xchg
or
and
or
int
fistp
icebp
inc
adc
arpl
cmps
push
ins
pop
out
mov
mov
mov
xor
xchg
mov
or
loope
inc
and
push
push
sbb
sahf
sub
add
jge
push
lea
or
sub
mov
dec
stos
cmp
pop
loop
xor
xchg
sbb
inc
fcomp
adc
fidiv
push
sbb
lds
test
sub
add
xchg
fisub
jmp
ret
fsub
mov
jmp
pop
sub
out
mov
enter
add
push
cmp
xchg
fld
jns
add
pop
sbb
movs
out
adc
sbb
xchg
fwait
pop
push
imul
dec
mov
jg
push
and
aam
lods
outs
add
add
and
or
push
pop
push
ret
xchg
or
jbe
xchg
and
repnz
jle
or
ret
pop
or
adc
add
dec
sbb
sub
mov
aas
inc
inc
add
sbb
inc
or
cmps
sbb
mov
arpl
cmc
adc
dec
push
add
jne
pusha
xchg
clc
nop
dec
in
cmc
add
enter
pop
jp
inc
loop
mov
sub
pop
add
cmp
inc
and
ds
jecxz
ds
or
jnp
xchg
shl
mov
lahf
aam
pop
sub
push
xlat
sahf
and
push
sti
adc
and
cmps
sub
mov
aam
or
fldenv
dec
ja
xor
push
(bad)
push
dec
pop
pop
jnp
pop
and
dec
mov
outs
mov
mov
add
fstp
jmp
gs
add
pop
fimul
push
adc
push
loope
jmp
aas
pop
sti
pusha
pop
push
shr
xor
mov
ja
test
push
imul
cs
jl
mov
inc
mov
sar
popa
test
jge
mov
or
jns
sbb
jns
lahf
push
addr16
sar
push
cmp
ss
out
in
rcr
push
add
mov
stc
and
inc
retf
adc
xor
pop
and
scas
arpl
pop
mov
repnz
add
adc
add
jo
mov
pop
dec
pop
cmp
clc
inc
jmp
cmp
mov
push
stc
imul
scas
ss
in
adc
jnp
pop
push
pop
pop
cmps
jmp
into
repz
into
daa
push
cs
or
mov
call
and
ror
push
cmps
movs
sub
mov
jne
xchg
(bad)
push
dec
popf
mov
add
fs
mov
imul
cs
push
dec
and
sub
add
add
or
test
ror
(bad)
or
xchg
or
scas
lock
add
ss
add
fwait
jp
push
jg
imul
and
mov
mov
sbb
adc
shl
loop
inc
sar
xor
push
add
xor
or
cmp
or
inc
cmc
push
ds
fist
xchg
inc
in
pop
rol
(bad)
xlat
lds
inc
sbb
mov
sub
rol
sbb
sbb
mov
ret
pop
push
add
mov
push
xchg
sbb
and
repz
xchg
(bad)
push
stc
jp
xchg
adc
push
and
adc
xchg
mov
(bad)
mov
add
fisub
rol
retf
rol
add
sbb
sub
sar
and
sub
sbb
stc
adc
data16
fnstsw
ins
inc
test
dec
jg
mov
jl
gs
ins
push
cmp
xchg
and
loopne
or
sub
ins
pop
adc
push
jae
cmp
retf
cmps
stos
xchg
xchg
push
xchg
dec
daa
jne
adc
mov
dec
movs
in
ror
xchg
pop
xchg
sub
nop
inc
and
sbb
push
sbb
cmps
mov
inc
and
mov
add
add
jo
loope
rol
dec
imul
mov
and
inc
sub
dec
cld
outs
add
outs
dec
jb
enter
dec
add
lods
mov
or
pop
test
adc
adc
xor
jl
mov
mov
jmp
mov
pop
mov
std
mov
pop
rol
sti
sub
cs
add
dec
inc
sbb
fs
test
mov
push
daa
int
xor
fnsave
push
loope
mov
(bad)
stc
add
ins
fs
push
xchg
add
je
dec
pop
push
inc
xlat
popa
push
movs
fwait
leave
popa
sbb
inc
loop
xchg
cmp
test
movs
add
mov
pop
xchg
cmp
inc
sbb
rol
pop
je
outs
fs
push
xchg
sbb
outs
sbb
pop
push
jmp
dec
push
mov
or
dec
push
in
mov
mov
mov
inc
mov
sub
js
push
sub
je
sub
test
cmp
and
cmp
hlt
daa
sub
test
mov
addr16
mov
dec
sub
pop
pushf
or
ins
ins
test
pop
inc
cli
pusha
fsin
mul
ss
inc
sbb
loopne
jne
push
or
ss
mov
add
iret
mov
pushf
aad
sti
inc
cmp
retf
mov
adc
jp
retf
ds
pop
fstp
icebp
xor
call
adc
sbb
loope
into
pop
loope
retf
add
inc
push
mov
xor
scas
mov
push
cmp
call
xor
ins
sbb
and
push
jbe
test
xor
jae
mov
call
pop
cmp
rcl
jo
sub
leave
adc
adc
mov
ret
sub
and
sbb
pop
push
fiadd
jecxz
adc
jnp
inc
(bad)
cwde
push
enter
mov
dec
cmp
adc
inc
sub
jecxz
push
popf
dec
dec
in
adc
push
fcomp
add
shl
js
frstor
sub
neg
jnp
push
ret
xor
push
pop
push
test
and
sbb
repnz
mov
jp
jl
jmp
test
rcr
out
pop
mov
and
jl
shr
pop
sub
or
and
jmp
sbb
adc
mov
dec
(bad)
or
pusha
pop
or
push
ret
adc
pushf
mov
aam
adc
dec
dec
xchg
cmp
loope
add
stc
cmp
and
sbb
retf
add
arpl
push
in
jne
mov
jmp
xchg
inc
jecxz
mov
xlat
inc
pushf
bound
ret
push
dec
mov
inc
cwde
dec
std
jp
loopne
cdq
mov
mov
xor
das
mov
dec
fadd
jne
lahf
mov
ret
inc
test
(bad)
adc
and
push
push
retf
outs
enter
fwait
popa
js
xchg
push
add
adc
nop
out
lds
jo
add
mov
mov
add
call
hlt
add
mov
push
xchg
gs
jp
cmp
repz
movs
into
jecxz
test
sahf
out
xchg
aaa
mov
sar
push
push
xchg
push
rol
xchg
xchg
shl
push
sub
pop
mov
xor
cwde
cmps
jnp
dec
cmps
cmp
cmc
lahf
or
movs
mov
ret
mov
push
popf
dec
adc
xchg
les
shl
mov
cmps
and
cmp
out
loope
and
add
push
pop
jle
popa
xlat
push
adc
dec
adc
mov
imul
ins
dec
xor
and
push
sbb
jmp
jl
ss
pop
movs
pusha
test
aaa
add
sbb
push
stc
clc
and
aam
imul
push
fld
adc
pop
push
jae
pop
scas
inc
pop
xor
mov
arpl
jg
add
or
xchg
pop
fld
dec
dec
push
(bad)
mov
mov
cmp
repnz
xlat
push
mov
push
push
cmp
inc
js
dec
sub
mov
sub
test
sub
adc
repz
adc
adc
push
ins
push
inc
or
fisttp
jno
jmp
xor
sub
cmp
lock
je
xchg
cmp
repnz
jb
loope
or
inc
adc
jnp
add
imul
mov
add
pop
or
and
nop
cmps
fwait
xor
inc
inc
inc
loopne
add
les
xchg
ficom
iret
xchg
fst
xor
adc
inc
cmp
aas
add
mov
push
fwait
test
call
push
div
pop
jb
add
push
dec
sbb
int3
push
loope
jnp
gs
add
data16
test
or
add
in
push
push
jmp
push
xor
(bad)
mov
sub
sub
mov
jbe
idiv
out
cmp
jmp
(bad)
adc
sbb
mov
ss
mov
and
(bad)
pop
inc
fs
mov
xchg
mov
loope
retf
int3
or
icebp
dec
and
mov
daa
dec
adc
xchg
pop
xor
push
pusha
xor
or
popf
(bad)
pop
repnz
xchg
sbb
and
repnz
or
add
repnz
or
mov
repnz
or
xchg
repnz
or
test
or
or
test
or
or
add
or
or
and
sub
or
cmp
add
lods
sbb
popa
pusha
or
add
pop
mov
sub
fs
ins
dec
jg
push
or
cmp
cdq
lods
into
add
call
js
adc
outs
mov
mov
pop
add
pop
repnz
stos
and
lds
(bad)
das
inc
cmp
lods
mov
mov
mov
scas
xchg
push
inc
jae
lahf
js
loop
pop
or
rcl
mov
ror
into
cmp
inc
add
cmp
add
scas
out
jns
adc
mov
or
inc
in
jb
mov
or
add
fwait
cmps
lea
es
push
ror
push
jb
out
fstp
adc
mov
fucomi
mov
jno
loope
pop
sbb
ret
jmp
movs
pop
adc
adc
adc
add
xor
aam
xor
std
adc
aam
xchg
and
adc
scas
cmc
sub
add
cmp
xlat
add
jns
xchg
mov
xor
mov
test
lods
xor
outs
xor
test
test
cmp
aad
in
xchg
jp
mov
fisub
sti
test
and
outs
push
mov
push
rol
add
cmp
fbstp
mov
sbb
mov
inc
and
adc
and
aam
jnp
mov
cmp
movs
push
sub
mov
dec
jle
add
lock
add
retf
or
mov
dec
dec
cmp
xlat
mov
or
sbb
mov
or
movs
in
add
sar
or
xor
xchg
dec
cmp
adc
imul
lds
(bad)
jb
daa
loopne
xchg
and
xlat
inc
xor
mov
adc
test
enter
imul
or
daa
inc
push
push
sbb
rcr
adc
psubsw
pop
dec
add
loopne
adc
push
rcr
cmp
pop
pop
or
xchg
add
and
clc
cmp
jge
jmp
xor
push
pop
cmp
xchg
je
add
xchg
ins
xor
pop
jbe
faddp
mov
cmp
loopne
ret
sub
pop
jg
and
add
mov
xor
or
adc
nop
fisubr
sbb
mov
leave
jge
je
mov
or
mov
shl
movs
enter
call
add
sub
mov
or
sub
popa
fistp
sub
push
jno
push
add
add
add
pop
xor
sti
sahf
sub
xchg
sbb
push
jg
lea
inc
sbb
daa
jne
pop
mov
add
adc
dec
jmp
test
jo
out
and
push
loopne
add
lods
or
push
inc
mov
pop
or
dec
sub
inc
mov
xor
xchg
imul
sahf
or
xor
push
loope
xchg
pop
mov
pop
mov
jo
mov
je
jp
movs
sbb
or
stos
xchg
or
add
xchg
pop
stos
mov
push
add
fldcw
mov
popa
add
lock
and
test
or
imul
mov
mov
push
and
push
int
int
sbb
adc
jb
and
pusha
jb
jo
test
ror
scas
mov
sub
xor
and
jb
test
jp
mov
and
xchg
xor
shl
hlt
push
mov
dec
js
add
jb
lds
outs
dec
adc
out
push
push
sub
mov
xchg
lods
cli
or
mov
dec
cmp
mov
aad
punpcklbw
add
(bad)
call
fs
push
push
push
pop
jle
lock
mov
add
std
or
rcr
jbe
pop
dec
mov
or
adc
sbb
push
or
ret
rcr
or
stc
and
retf
ret
gs
test
imul
jns
mov
and
mov
stos
xor
jno
(bad)
movs
test
adc
loop
mov
out
push
or
push
jnp
fisub
je
push
lock
push
pop
add
push
pop
push
daa
sub
or
and
cwde
and
push
fs
adc
push
sub
and
stos
into
push
cmp
or
or
or
xchg
xchg
cmp
add
push
xor
sub
rcr
mov
and
arpl
push
js
add
and
stos
push
jno
movs
ja
pop
sub
add
ss
bound
aaa
pop
add
into
jle
xchg
pusha
lea
mov
dec
outs
dec
leave
push
fs
jns
push
sub
jo
loope
inc
aaa
add
inc
(bad)
jl
push
push
xor
add
retf
(bad)
cmp
push
adc
xchg
dec
shl
outs
stos
rcl
xchg
push
and
aaa
xchg
fisttp
adc
inc
sbb
iret
jecxz
lea
mov
xchg
scas
adc
add
fcmovnb
mov
(bad)
std
push
xlat
dec
sub
in
lods
jge
stos
push
or
xor
mov
call
cmc
and
push
push
dec
inc
adc
mov
cld
fidivr
push
mov
pusha
xor
pop
and
sbb
popf
or
xor
(bad)
stc
add
add
out
adc
pop
sbb
push
ret
cdq
mov
sbb
sub
inc
push
mov
and
dec
sub
add
popa
lock
mov
inc
dec
sbb
push
sbb
mov
int3
fisub
push
pop
jl
lock
adc
xor
add
mov
sub
mov
clc
and
shl
push
es
lds
jmp
sub
sbb
push
loop
jb
add
or
dec
mov
push
xchg
or
sub
pusha
and
cmp
rol
add
push
movups
into
push
imul
adc
pop
add
jge
and
rol
push
or
jp
add
(bad)
add
movs
or
pop
test
pop
jl
icebp
xchg
xchg
lahf
mov
jno
into
pop
and
stc
rol
outs
add
add
jb
rol
xchg
push
adc
call
push
scas
add
add
loope
pop
icebp
xchg
pop
das
aad
cmc
fisttp
and
inc
cli
fisttp
idiv
push
cmp
cmps
xor
pop
movs
xor
mov
call
push
inc
xor
dec
jne
ror
inc
fadd
adc
bound
daa
retf
int3
jmp
cmp
and
mov
inc
dec
xchg
xchg
gs
sbb
movs
jo
mov
jns
sar
adc
lods
and
add
sub
inc
lods
or
pop
jae
jg
push
punpcklwd
outs
or
push
adc
or
add
jmp
sbb
jnp
(bad)
mov
bound
mov
push
dec
es
loopne
lahf
push
push
and
add
add
loope
icebp
dec
mov
add
inc
lea
bound
push
loope
sub
xchg
(bad)
pop
push
and
pop
add
in
inc
arpl
pusha
test
(bad)
jmp
xchg
pop
test
push
push
ror
sti
add
mov
add
clc
push
ss
cmps
xor
mov
movs
pushf
push
or
ror
push
mov
sub
add
cs
and
sbb
adc
adc
push
add
add
(bad)
xchg
pop
inc
mov
push
push
push
jmp
inc
or
pop
mov
arpl
add
mov
mov
add
jle
movs
mov
aaa
mov
lock
push
xchg
cdq
xchg
movs
xchg
in
scas
pop
addr16
inc
cld
sub
ja
js
sbb
push
ja
popf
dec
xchg
xor
inc
jne
jg
fwait
and
sub
jmp
mov
nop
popa
cld
cmc
xchg
outs
call
lods
adc
push
push
sbb
mov
and
sub
lea
mov
cmps
adc
or
adc
(bad)
cld
(bad)
sbb
stc
aad
jecxz
(bad)
xchg
jno
dec
xor
shr
push
or
mov
(bad)
fimul
push
bound
sahf
rol
int3
xor
add
cmp
(bad)
mov
push
push
mov
adc
jle
mov
add
pop
push
mov
aam
xchg
leave
call
and
adc
fs
jge
add
cdq
idiv
rcr
cli
shld
push
cwde
loope
mov
addr16
and
xor
shl
stos
and
mov
bndstx
sbb
shl
(bad)
mov
mov
xor
dec
push
fidivr
and
dec
cs
pop
jg
pop
and
pop
and
popf
sbb
and
sub
xor
mov
jne
push
js
ffreep
mov
and
push
call
jp
xchg
stos
inc
sti
mov
inc
fisub
jl
inc
arpl
stc
das
arpl
fldz
fisubr
add
sbb
aam
pop
xchg
cmps
shl
(bad)
js
jb
pop
add
and
retf
cmp
je
sub
mov
sub
pop
xor
nop
and
add
inc
dec
inc
call
sti
adc
je
and
movs
das
or
or
sub
jbe
add
or
cmp
rcl
retf
faddp
sbb
inc
and
shl
lds
test
xlat
mov
mov
add
lods
ret
mov
or
sbb
pop
sbb
and
mov
fisttp
fidiv
inc
shl
or
inc
inc
sbb
aad
dec
xor
lea
jne
repnz
xor
popa
add
lods
inc
cld
inc
sub
pushf
ins
sub
mov
scas
fs
cmp
mov
mov
xor
lods
add
jp
xchg
popa
enter
into
add
sub
add
mov
test
pop
push
(bad)
and
sub
imul
fwait
mov
in
clc
mov
iret
and
shl
mov
jge
inc
mov
out
aas
movs
pop
push
sub
sub
dec
jmp
not
les
arpl
sub
and
movs
pop
xor
(bad)
or
sub
add
scas
and
pusha
and
addr16
das
or
dec
push
sub
mov
dec
jge
push
loop
push
sub
ret
jmp
xor
jns
fwait
push
in
xchg
stos
into
pusha
imul
aas
jmp
pop
dec
dec
pop
cmps
stos
mov
in
push
call
xor
repz
bound
inc
sub
push
sbb
pop
not
xchg
mov
xchg
dec
or
and
sbb
loope
push
mov
mov
push
sahf
xor
je
push
xor
adc
loopne
loopne
enter
popa
pop
xchg
xor
push
add
mov
cmps
or
pop
imul
pop
mov
sbb
and
pop
add
xchg
inc
sbb
pusha
dec
cs
push
out
cmp
pushf
adc
jmp
mov
cdq
push
mov
pop
adc
and
test
inc
jnp
cmp
dec
or
js
adc
xor
loopne
dec
mov
int
jns
lods
pop
jmp
in
pop
xor
add
pop
lahf
ds
or
pop
xchg
push
jbe
inc
mov
mov
adc
inc
lods
and
neg
pop
mov
adc
loopne
cmp
fidiv
or
pusha
imul
push
mov
cmp
mov
ins
sub
and
mov
pop
or
and
(bad)
pop
and
cmp
shl
sub
mov
pop
dec
add
test
sub
inc
test
cmps
shl
imul
out
cmps
or
call
sbb
mov
sbb
cmp
xchg
xchg
hlt
fstp
movzx
(bad)
push
and
jno
xchg
adc
or
jmp
jmp
adc
jmp
mov
aam
out
call
int
xchg
sub
xchg
fs
adc
jae
push
sub
mov
loopne
and
inc
add
xor
jmp
mov
push
fild
xchg
scas
sbb
ja
adc
lea
inc
sub
xchg
sub
add
loopne
mov
dec
and
adc
jmp
jne
dec
and
(bad)
stos
inc
push
dec
sub
sbb
jle
jmp
add
clc
push
mov
push
pop
mul
mov
xchg
fisubr
xchg
mov
movs
sahf
fwait
xor
imul
retf
nop
and
adc
or
movs
dec
arpl
push
dec
sbb
dec
mov
test
adc
jbe
xchg
cmp
and
inc
push
xlat
sub
repz
dec
sbb
stos
inc
mov
jmp
push
add
shl
pop
dec
push
sub
xchg
cwde
mov
mov
(bad)
icebp
mov
add
add
jbe
retf
dec
cmp
movs
rcl
inc
xchg
dec
jns
test
inc
(bad)
and
or
ss
cmp
add
pop
pop
push
(bad)
cli
jl
push
or
out
push
dec
mov
sbb
mov
sbb
jno
test
(bad)
inc
adc
cli
cmps
xor
in
add
popa
imul
mov
add
add
inc
sbb
inc
rol
cmp
hlt
imul
jmp
test
or
pusha
aaa
add
repz
mov
add
fstp
or
inc
cmp
inc
movs
pop
clc
das
adc
(bad)
jp
xchg
sub
jge
sub
xor
ficom
or
jne
xchg
xchg
pop
jo
xor
mov
add
test
adc
dec
dec
cmp
jg
sbb
or
(bad)
pop
or
add
or
dec
jmp
push
gs
or
jmp
push
sub
jmp
xchg
or
push
es
nop
jb
(bad)
or
or
imul
push
or
aas
add
sbb
jp
ss
out
xor
inc
xchg
loope
fisubr
inc
hlt
sub
and
pop
cli
sbb
jmp
mov
stc
in
inc
stos
pop
cmp
fcmovb
mov
mov
dec
cmp
jb
xchg
je
jg
enter
inc
mov
adc
or
cmp
push
das
mov
xor
and
jmp
add
dec
ror
sub
and
jnp
pushf
push
push
and
adc
mov
loop
(bad)
xor
fisttp
loopne
push
adc
(bad)
repnz
jbe
pop
pushf
aaa
int3
mov
sbb
cmp
sub
add
into
or
add
clc
stos
retf
rol
jbe
jnp
aad
call
push
arpl
or
adc
and
jno
sub
ds
add
ins
add
push
mov
pop
inc
scas
xchg
pop
in
in
aad
push
add
push
mov
icebp
cli
push
add
or
imul
movs
push
stos
popa
pop
pop
push
jne
outs
pushf
dec
pop
mov
bound
add
push
stos
in
and
jg
cmp
cli
push
mov
and
ret
int3
jnp
lahf
or
pop
sub
gs
mov
shl
sub
sub
mov
push
cld
mov
cmc
xchg
push
sub
call
inc
or
add
out
jmp
stos
dec
ins
movs
mov
pop
jo
add
clc
cwde
xor
inc
mov
fsubr
mov
pusha
pop
mov
in
mov
jne
(bad)
xlat
inc
push
jl
ret
xor
ret
push
mov
shr
stc
push
cwde
pushf
mov
pop
lds
pop
xchg
popf
xor
int
sbb
mov
cmps
imul
sbb
lods
and
aas
and
or
adc
add
scas
mov
jne
das
int
inc
mov
jno
aas
outs
inc
inc
sub
arpl
dec
jbe
push
xchg
test
test
adc
push
jno
push
adc
add
sub
pop
mov
in
les
je
mov
or
add
inc
dec
pop
scas
cmps
ja
fcom
mov
sbb
and
pop
inc
mov
dec
sbb
arpl
and
dec
push
inc
sub
sbb
aas
retf
jne
xor
in
or
add
add
add
push
or
adc
outs
push
cdq
ficomp
aaa
add
mov
add
cmp
and
int3
test
mov
shl
ja
dec
shl
mov
pusha
mov
sub
mov
sti
mov
scas
es
mov
mov
mov
mov
loope
xor
fwait
push
test
inc
xchg
push
or
push
nop
or
xchg
jno
dec
sub
and
mov
hlt
sbb
push
pop
mov
popa
cwde
sahf
fimul
mov
push
cmp
je
(bad)
lds
adc
and
add
push
sbb
jmp
mov
fld
les
dec
lahf
ret
push
jmp
and
lods
popa
mov
xchg
and
jmp
jns
mov
mov
push
add
pop
enter
test
pop
test
mov
add
sbb
(bad)
retf
(bad)
pusha
daa
pop
sbb
rcl
xchg
fdivr
push
dec
cmc
sub
jmp
xchg
push
mov
add
jb
push
pop
add
sub
es
add
add
mov
out
and
test
and
ds
inc
jmp
mov
rol
test
shl
add
mov
mov
add
movs
scas
loopne
xor
add
out
fcomp
jb
inc
lock
pop
enter
(bad)
mov
(bad)
movs
xchg
sub
sbb
aas
ret
dec
sub
adc
jne
jo
cs
inc
and
adc
dec
pop
jmp
xor
add
push
imul
je
mov
fdiv
rcl
loop
dec
add
and
sbb
neg
add
and
xchg
and
jmp
sbb
or
adc
mov
xchg
cmps
push
sub
test
movs
xor
sbb
sub
jmp
sti
push
test
(bad)
cs
retf
ins
retf
inc
and
inc
cmps
arpl
cmp
add
mov
add
lods
outs
or
in
push
add
aad
add
lds
and
push
out
lea
fbld
lods
pop
add
jmp
lock
popa
jnp
clc
jmp
nop
and
mov
adc
push
inc
push
outs
or
mov
mov
push
inc
rol
pushf
shl
in
sbb
sbb
jbe
ins
fs
cs
adc
add
sub
and
repz
rcl
add
and
cmp
mov
cmps
test
jmp
pop
and
les
leave
sub
inc
or
in
jmp
add
mov
les
mov
inc
imul
or
shr
jbe
mov
sub
add
cmp
adc
jne
cmps
push
popa
or
int
js
push
adc
xchg
jge
call
mov
sbb
in
jno
hlt
push
jbe
jge
cmp
imul
int3
mov
sbb
inc
mov
int
xor
popa
push
sub
retf
fstp
adc
jmp
mov
and
cmp
mov
sub
cmps
ret
mov
cmp
into
xor
dec
push
xchg
dec
xor
pop
ss
in
cwde
test
xchg
int3
xchg
jbe
sub
fs
push
adc
xchg
mov
movs
xchg
ror
sbb
dec
dec
add
add
lds
enter
popa
inc
dec
das
pusha
xor
add
stc
push
sub
cmp
push
je
or
jbe
je
stc
stc
stc
stc
popa
je
push
je
jae
push
dec
je
stc
stc
stc
stc
push
xor
sub
sbb
outs
je
push
cmp
out
test
test
repnz
(bad)
std
add
add
mov
dec
inc
pop
xor
sub
lods
inc
outs
add
jecxz
push
jae
inc
push
adc
ror
dec
sbb
xchg
mov
sub
mov
hlt
movs
xchg
loopne
pop
add
dec
push
sub
xchg
retf
outs
jbe
or
mov
or
jo
clc
xor
pop
out
xor
mov
and
dec
or
gs
sub
or
repnz
sub
jmp
hlt
aam
inc
mov
or
retf
movs
gs
ins
ror
push
dec
les
out
push
clc
repnz
sub
jmp
and
xlat
xchg
fs
adc
mov
vrcpps
push
and
ss
xchg
or
or
ret
push
sbb
(bad)
push
sbb
icebp
inc
dec
inc
sbb
jecxz
fimul
(bad)
and
jmp
retf
push
mov
push
mov
xchg
push
sub
cwde
stc
sbb
addr16
dec
add
sub
outs
pushf
sbb
jns
adc
enter
sub
or
test
pop
dec
sbb
sbb
lds
scas
push
or
cmc
add
xchg
stos
jnp
xor
enter
adc
pop
jne
scas
sub
daa
push
cmps
or
mov
cmp
adc
loop
sbb
push
push
mov
sbb
or
inc
add
and
and
cmp
sbb
inc
and
dec
sbb
jne
jg
and
(bad)
or
dec
(bad)
and
xor
xor
jg
fs
stos
dec
(bad)
fld
dec
cmp
mov
jno
jb
inc
or
xchg
(bad)
test
mov
ja
sub
jno
push
or
dec
cmp
stos
shr
cmp
or
(bad)
jg
shl
sub
or
mov
push
push
pop
enter
push
inc
lods
inc
sub
inc
or
popa
movs
adc
fsubr
xchg
mov
bound
or
inc
nop
scas
and
or
stos
pop
je
inc
or
pop
fdiv
add
push
and
sbb
adc
push
jecxz
sbb
dec
dec
pop
push
and
jo
or
push
packsswb
xor
cmp
xchg
or
pop
and
imul
adc
or
paddusb
xchg
push
enter
aas
les
xchg
add
test
je
dec
sub
or
hlt
jmp
pop
add
adc
add
or
movs
xlat
(bad)
and
mov
push
jne
inc
or
mov
adc
adc
push
out
xchg
sub
popf
pop
lds
mov
cwde
bound
das
mov
xor
add
jmp
adc
add
xor
xor
and
sub
xor
dec
in
and
add
cmps
(bad)
popa
mov
and
inc
loopne
ja
xchg
dec
(bad)
jb
jne
lods
cmp
cmp
adc
cmp
jnp
push
pop
and
xor
sbb
inc
adc
mov
cmps
xchg
or
and
out
in
pop
mov
aad
enter
mov
add
dec
and
loope
add
call
repz
repz
jmp
xchg
xchg
xchg
xor
cmp
cmp
xchg
inc
sub
push
lods
pop
retf
sbb
lods
jl
movs
es
adc
or
jns
cwde
jns
hlt
mov
push
das
sbb
pop
ret
shl
xor
rol
xor
xor
xlat
or
or
cwde
scas
adc
sub
adc
ins
mov
pushf
push
dec
mov
rcr
add
pusha
outs
jae
push
or
jb
pop
fldcw
mov
mov
fmul
call
aas
hlt
das
popa
xor
enter
dec
or
cmp
dec
nop
mov
in
in
jmp
leave
cli
retf
mov
inc
cmp
jl
add
adc
fldenv
pop
pop
jl
gs
shr
sub
mov
mov
mov
push
jno
daa
add
mov
test
push
jne
xchg
icebp
or
dec
push
sub
jge
dec
inc
sbb
lea
loopne
test
jne
mov
cmps
ds
cs
add
push
sbb
je
xchg
or
sbb
jge
nop
inc
xchg
mov
xor
je
push
outs
cdq
loopne
push
popa
xchg
arpl
fldpi
xor
jae
jge
mov
pop
xor
test
das
mov
push
pop
fiadd
addr16
push
push
push
push
out
test
pop
push
fs
outs
add
add
fidiv
test
mov
add
(bad)
ret
mov
test
daa
rcl
out
inc
jb
mov
xor
sbb
loopne
fs
jb
mov
mov
inc
and
loopne
inc
and
(bad)
dec
jne
adc
pop
inc
clc
ret
push
cmp
cmps
jo
or
pusha
data16
mov
or
cmps
into
fs
sbb
xchg
xor
aam
pop
push
push
dec
ins
push
push
push
mov
test
jp
test
push
and
pop
sub
mov
test
add
loopne
fs
push
dec
hlt
push
jmp
inc
ret
inc
inc
inc
int3
xchg
adc
jl
je
aad
xor
cmps
jo
das
add
dec
rol
retf
dec
push
shl
jmp
mov
sub
stos
sbb
popa
sbb
pop
popa
or
jmp
cld
adc
add
(bad)
inc
xlat
xor
dec
mov
int
add
sub
out
js
pop
and
jl
or
or
mov
loope
ins
shr
les
cmc
out
inc
(bad)
dec
push
in
outs
pop
mov
jg
retf
inc
leave
fs
push
jb
out
push
pop
inc
xor
call
mov
out
push
rol
inc
mov
xor
push
(bad)
(bad)
imul
xchg
pop
or
push
jo
hlt
dec
mov
lahf
sub
jmp
cmp
sahf
xchg
sub
jo
jmp
xor
call
dec
dec
cmp
test
xchg
dec
or
mov
mov
xor
sbb
jne
lods
jp
xchg
jbe
cwde
into
stos
addr16
js
pop
cmp
jno
es
or
gs
das
jmp
cmp
pushf
and
or
xchg
sbb
and
jmp
mov
add
pop
xchg
dec
and
xchg
push
sbb
or
jmp
mov
push
loope
push
xor
pop
push
std
jge
rcl
push
xchg
add
in
daa
and
sub
movs
adc
cmp
popa
dec
adc
push
sub
sbb
xchg
mov
mov
adc
sbb
add
cmp
pop
aaa
call
dec
ds
xor
xor
enter
mov
add
(bad)
cmp
sahf
sub
xchg
inc
xchg
jb
jns
test
xchg
or
in
or
xchg
add
lock
adc
cmps
pop
and
and
adc
push
rcl
or
adc
popf
xor
lock
bound
or
xchg
ror
and
imul
lock
xchg
xor
ss
xor
inc
aam
inc
js
mov
sub
mov
pop
test
jmp
or
daa
sub
ret
icebp
xchg
imul
or
xor
test
arpl
nop
mov
jne
sbb
and
pop
in
cmp
mov
sub
or
add
or
push
jp
adc
adc
adc
cmc
movs
push
pop
and
mov
call
add
add
and
or
cmp
xor
xlat
sbb
enter
xor
cmp
shr
pushw
jl
jg
mov
inc
push
push
xchg
adc
test
mov
cs
outs
(bad)
adc
ja
push
(bad)
push
or
add
sub
and
pushf
xchg
mov
push
inc
mov
and
imul
xchg
add
adc
inc
shr
mov
(bad)
shl
xchg
outs
ins
or
lea
xor
sbb
nop
aas
inc
mov
dec
inc
test
pop
add
pusha
push
cmp
in
das
mov
lds
inc
cmp
sbb
arpl
int
pop
add
popf
rcl
stos
cmps
les
lahf
and
jno
(bad)
jg
or
push
add
int3
and
dec
dec
and
and
adc
and
test
xor
xchg
je
imul
fsubp
arpl
cmps
pop
mov
push
push
sub
adc
js
in
stos
std
inc
jecxz
mov
mov
jl
push
nop
dec
popa
mov
cld
test
dec
stos
lock
mov
sbb
daa
adc
xor
daa
dec
fisubr
out
sbb
loop
add
std
cwde
loopne
mov
pop
js
xchg
and
in
jno
jmp
pusha
js
add
xchg
xchg
sbb
clc
mov
adc
pop
sbb
push
and
lods
and
dec
ja
mov
jno
(bad)
cmp
mov
mov
inc
(bad)
out
adc
pop
sub
sbb
push
lahf
and
(bad)
fld
or
or
add
lds
dec
or
js
add
mov
pop
or
add
xor
push
and
dec
pop
(bad)
pop
imul
pop
cmp
add
test
jnp
cmp
(bad)
sbb
push
in
inc
add
ds
add
les
jge
jmp
stos
add
lock
mov
repz
mov
aas
mov
fimul
mov
daa
add
out
ror
mov
dec
xchg
imul
int3
push
ja
inc
mov
push
push
dec
add
retf
(bad)
cmps
xor
pop
pop
dec
pop
pop
test
jo
jle
xor
xor
and
outs
aam
daa
outs
add
fild
xor
das
mov
pop
push
ins
adc
imul
shl
hlt
sub
fucomip
leave
fmul
dec
and
rcl
sub
push
xor
sbb
or
jbe
inc
mov
(bad)
pushf
inc
mov
jp
punpckhbw
data16
lea
xor
movlps
jge
mov
jne
sar
push
mov
aas
xchg
jae
xor
fst
adc
jbe
mov
and
or
sbb
outs
(bad)
push
popa
push
mov
mov
and
mov
outs
mov
adc
inc
in
and
das
xor
icebp
cmp
sub
and
pop
(bad)
movs
jns
popa
icebp
cld
fucomp
dec
push
rol
fimul
cmp
ja
add
push
data16
pop
xor
pop
movs
xor
jmp
pop
mov
out
out
push
jmp
int
inc
jmp
pop
cmp
fisubr
cdq
pop
xchg
mov
mov
in
neg
imul
int
xor
and
pop
sbb
sub
inc
push
gs
dec
push
imul
ret
out
cdq
xor
jmp
shl
out
cmp
mov
push
xlat
sbb
add
ror
add
retf
cs
rol
cmp
js
xor
and
xor
and
mov
or
push
or
dec
ins
xor
mov
or
fcom
or
sub
test
push
aam
mov
jnp
and
xor
jp
rol
clc
or
fnstsw
jno
test
push
(bad)
(bad)
or
add
cmp
sahf
sub
push
sub
aam
scas
sub
rcr
mov
xor
add
adc
cli
notrack
sbb
push
fist
sub
dec
push
mov
imul
pusha
mov
xchg
je
push
push
shl
or
xor
cdq
sub
add
xor
or
ja
mov
and
xor
(bad)
frstor
mov
add
or
nop
lea
aaa
jmp
jmp
push
adc
mov
and
xchg
repz
rol
push
pop
les
push
sbb
das
popa
mov
add
and
and
pusha
push
aaa
lock
inc
cmp
retf
jb
mov
pop
lock
sbb
pop
pop
dec
or
movs
adc
add
sub
xchg
adc
jge
jl
push
fst
push
mov
pushf
lods
dec
bound
cmp
sbb
sub
movs
fwait
add
xor
and
repz
sub
ja
pop
aam
(bad)
out
pop
stos
sbb
mov
aam
sub
imul
outs
call
cmp
dec
enter
push
loope
inc
xor
jle
push
lahf
push
movs
icebp
push
mov
cmp
js
retf
mov
xor
fist
mov
mov
aaa
cmps
mov
pushf
mov
retf
in
rcl
pop
sub
jle
inc
xchg
out
ss
ret
cmp
popf
jae
mov
test
neg
adc
ror
jmp
add
sbb
or
adc
push
loop
cmp
int3
add
(bad)
rol
add
popf
mov
xchg
clc
dec
sbb
push
jbe
jmp
jge
or
pusha
xor
adc
cli
and
retf
mov
lea
xchg
inc
pop
push
mov
retf
inc
pop
es
adc
mov
and
popf
push
lds
sub
xchg
xor
xor
lods
out
add
or
ret
jne
pop
retf
es
int
fwait
add
fwait
xor
popa
jno
xor
popa
in
es
and
ins
or
cdq
outs
xor
jne
pop
add
test
adc
xchg
mov
movs
jl
or
dec
push
sbb
adc
inc
pop
stos
cmp
sub
push
cld
inc
inc
adc
sbb
mov
xchg
das
pop
pop
push
or
or
dec
scas
and
xchg
(bad)
das
sbb
jo
push
push
cmps
mov
aad
jge
dec
push
xchg
nop
dec
and
and
enterw
(bad)
jbe
inc
xor
xchg
fist
ret
jl
push
mov
dec
jne
retf
sbb
jae
adc
push
popa
repz
ins
sbb
mov
pop
add
cmp
xor
lea
or
sbb
imul
movs
mov
jbe
jecxz
mov
clc
xchg
lea
push
xchg
ins
mov
mov
adc
mov
mov
sub
push
cmp
sub
cmovo
xchg
adc
fmul
ds
adc
adc
xchg
ins
cmp
add
mov
mov
mov
cmc
inc
mov
jnp
mov
push
push
xchg
push
mov
ror
nop
fsubrp
stc
je
push
jp
(bad)
fild
xor
test
cmp
push
push
or
mov
lods
dec
retf
push
cmp
jb
out
push
iret
xchg
sbb
cmps
sbb
cmp
jb
xor
pop
or
iret
adc
jle
and
pop
test
push
add
out
ss
adc
loope
shl
pop
push
push
in
jne
std
test
retf
pop
push
add
and
push
test
cmp
je
push
pop
inc
adc
mov
loop
xchg
add
sbb
pop
sub
mov
pop
add
push
sub
push
xchg
inc
call
je
pop
push
inc
jmp
in
je
inc
mov
mov
sub
shl
jmp
jb
aaa
je
adc
adc
lods
jnp
sbb
jno
ret
sbb
pop
js
or
xchg
adc
inc
xor
fmul
adc
aam
add
sbb
or
xchg
fsub
xor
data16
das
mov
(bad)
mov
jmp
or
jae
clc
add
adc
mov
sub
and
sub
ja
sub
push
test
loope
(bad)
jecxz
shl
cmp
push
pusha
xchg
out
and
add
sbb
push
inc
jg
adc
xchg
mov
cmp
sub
mov
add
pushf
movs
xchg
add
adc
xor
mov
repz
cdq
adc
add
imul
add
pop
push
xchg
xchg
adc
add
inc
xlat
push
push
clc
sbb
push
mov
add
jo
mov
push
test
add
data16
xchg
xchg
xor
add
inc
mov
mov
in
xchg
mov
push
push
and
dec
jnp
push
aad
adc
mov
sbb
sbb
adc
add
loopne
imul
jmp
sbb
add
sbb
aaa
test
loopne
fnstsw
add
add
cmps
in
adc
push
test
enter
sbb
repnz
adc
out
retf
outs
leave
sbb
test
dec
add
pop
dec
jo
push
add
fwait
push
xor
out
push
fistp
neg
fwait
pop
ret
jecxz
pop
add
fwait
push
test
pop
sub
jnp
psllw
jmp
inc
loopne
jmp
dec
dec
add
pop
and
movs
lahf
in
adc
sub
aam
ret
inc
jmp
cmps
mov
jne
cmp
pop
cmp
cld
cmps
stc
mov
push
mov
ds
sti
loope
cld
js
out
jl
(bad)
loop
cli
xor
sti
imul
sub
loope
call
sbb
adc
cmps
imul
and
das
loopne
and
jnp
es
mov
push
add
lea
ret
lahf
inc
push
ret
or
push
dec
mov
sahf
push
jno
jg
fstp
mov
jmp
or
push
pop
lods
sbb
mov
and
push
movs
jne
mov
pop
sub
or
js
jnp
xor
arpl
out
xor
loope
test
push
aas
push
leave
clc
fsubr
jne
not
push
sub
in
adc
dec
and
jne
sidtd
sahf
out
data16
ja
(bad)
fiadd
addr16
add
add
push
retf
xchg
add
push
cld
pop
and
add
mov
(bad)
shr
fisttp
add
adc
dec
aas
jmp
xlat
push
lock
mov
sub
pop
adc
inc
nop
pop
arpl
nop
bound
sahf
pusha
xlat
cmp
push
and
or
in
or
fmul
and
mov
jne
mov
pop
sub
sbb
or
adc
mov
mov
bsf
adc
shl
loopne
sub
add
lahf
xor
pop
xchg
add
test
test
add
clc
push
ja
mov
inc
lods
loopne
call
popf
adc
push
push
jnp
or
mov
ret
mov
jmp
adc
call
sbb
jge
test
test
sub
push
inc
out
inc
xor
mov
mov
push
aas
cdq
and
fild
js
ret
inc
in
inc
cmps
add
and
xor
pusha
add
cmp
mov
jge
inc
mov
add
jmp
aad
adc
inc
pop
push
jmp
shr
jl
pop
(bad)
add
sub
or
sub
lds
inc
sbb
retf
popa
fsub
inc
out
pop
sub
gs
mov
dec
(bad)
cli
push
add
sbb
push
inc
fdivr
adc
imul
and
mov
aam
mov
fcomp
es
dec
add
add
xchg
arpl
xchg
mov
add
lea
iret
addr16
retf
adc
pop
outs
pop
retf
mov
mov
retf
add
ret
pop
push
gs
rol
frstor
ret
int
or
adc
adc
outs
neg
popf
test
dec
mov
sub
adc
mov
pop
fld
pop
add
je
or
mov
popa
dec
loope
mov
and
push
(bad)
xor
sub
paddusb
mov
in
pop
xchg
inc
idiv
lahf
ja
pop
jl
cmps
push
xor
dec
add
sbb
mov
add
mov
or
add
ds
dec
sub
out
imul
mov
aaa
jmp
sub
sbb
jmp
popa
push
clc
pusha
shr
das
dec
ret
shr
fwait
push
jge
push
xlat
(bad)
or
add
push
pushf
xor
sub
inc
inc
cmc
jae
(bad)
repnz
(bad)
xor
push
int3
mov
scas
ss
and
mov
mul
stc
push
icebp
je
loopne
push
xchg
adc
inc
test
js
lods
pop
sub
into
sti
jl
sbb
inc
jmp
(bad)
test
mov
popf
pop
sub
xchg
aam
add
add
pop
push
pop
xchg
in
inc
movs
cs
es
(bad)
adc
cmp
cli
cmp
or
add
rcl
sub
pop
sub
xor
cmp
dec
cs
fcomp
pop
mov
add
inc
imul
mov
mov
dec
pusha
test
ds
sbb
adc
sti
sub
jne
push
je
pop
js
cmp
and
or
in
scas
rol
push
or
add
pop
movs
scas
daa
and
ins
movs
leave
xchg
sub
or
sbb
push
js
outs
xor
mov
sbb
ss
pop
or
or
inc
lea
sbb
pop
aad
add
cmp
mov
and
jge
add
leave
jno
adc
jge
lods
push
int
adc
cdq
jno
rcl
inc
or
dec
(bad)
outs
arpl
dec
adc
sbb
dec
imul
(bad)
inc
imul
add
cmps
and
sbb
push
cwde
dec
in
add
ret
sbb
xchg
lods
adc
(bad)
lock
jp
mov
or
cld
fstp
jmp
dec
loope
inc
jge
dec
and
push
mov
adc
imul
xor
aas
or
arpl
mov
add
addr16
push
sub
sar
mov
test
mov
jo
push
mov
xchg
push
jl
jecxz
push
xchg
push
(bad)
push
jmp
mov
pop
xor
daa
popa
mov
mov
push
ins
test
add
add
or
mov
les
(bad)
sub
adc
sbb
add
xchg
lock
cdq
or
add
xchg
jnp
push
sub
jbe
lock
xchg
ret
stos
inc
jne
(bad)
lea
add
xor
int
sbb
push
ins
xor
in
adc
int
mov
mov
sbb
cmp
aam
add
add
not
pushf
jecxz
movaps
fsubr
ficom
xor
ret
sbb
jge
mov
outs
and
or
mov
xchg
(bad)
gs
pusha
sahf
xchg
dec
fist
cmp
out
inc
or
or
cmp
gs
les
cs
inc
xor
inc
es
lahf
push
imul
or
(bad)
cmp
jmp
inc
fbstp
jge
ret
popa
sub
and
xchg
ins
inc
xor
xor
and
sbb
add
clc
loop
not
je
push
add
mov
loopne
movs
sbb
sbb
mov
sbb
aaa
test
xchg
push
add
(bad)
add
cmp
mov
rcl
fdiv
xor
cmp
sar
xchg
add
add
js
mov
add
mov
dec
jmp
cmp
sbb
add
add
and
fwait
or
loopne
push
mov
adc
sub
cmp
mov
nop
in
xchg
call
stos
push
mov
sub
mov
int
(bad)
add
outs
fld
add
mov
add
(bad)
push
pop
sahf
jae
cmp
inc
xor
mov
lahf
jmp
xchg
leave
jnp
je
mov
add
and
jmp
loopne
mov
js
mov
or
dec
test
daa
adc
ror
jbe
add
repnz
push
push
iret
add
jmp
inc
pusha
inc
iret
je
pop
jbe
call
sbb
add
pcmpeqw
push
and
ja
ret
xchg
push
mov
xor
imul
retf
shr
cmp
xor
mov
dec
adc
pop
pop
xchg
ja
mov
cmps
push
mov
xor
and
mov
add
jmp
pop
aam
cmp
dec
xchg
push
mov
mov
cmp
jbe
les
nop
ss
repz
and
je
or
jb
add
mov
xor
sbb
or
fcom
and
(bad)
shr
xor
addr16
mov
fistp
or
mov
leave
sahf
add
xchg
mov
cmps
data16
or
and
aaa
loope
cmps
or
mov
das
xchg
dec
push
or
sbb
or
or
cmp
enter
inc
rcl
dec
xchg
pop
push
and
lods
sub
pop
and
das
cmp
jae
shl
es
add
je
jae
or
jb
xchg
mov
enter
inc
dec
les
mov
xor
pusha
add
cmp
jne
xchg
dec
mov
and
(bad)
imul
sbb
or
push
iret
mov
arpl
or
popa
sbb
es
mov
push
es
xchg
adc
vucomisd
loope
mov
mov
push
inc
sbb
es
xor
sar
(bad)
adc
mov
test
lahf
arpl
dec
or
mov
dec
repnz
add
push
je
jg
pop
test
je
push
push
mov
jl
push
fcom
daa
push
(bad)
jbe
mov
mov
inc
xchg
sub
jle
movs
imul
mov
or
sub
adc
(bad)
jge
push
dec
std
pusha
mov
lea
xchg
or
xchg
das
cmp
xchg
push
test
test
outs
sub
daa
jne
jne
mov
and
inc
hlt
(bad)
push
mov
sbb
push
vmptrld
ret
jp
das
call
or
sbb
jmp
in
aam
shr
pop
pop
jl
mov
pop
push
pop
pusha
imul
mov
fisubr
sbb
inc
or
xchg
iret
or
imul
dec
pop
test
popf
jne
cmp
inc
ret
push
fidiv
les
sbb
push
push
push
jmp
xchg
bound
and
sub
int3
pop
mov
sbb
adc
int3
inc
ins
or
adc
cmps
adc
add
arpl
add
(bad)
leave
sbb
mov
cs
pop
hlt
sub
adc
add
mov
xor
jmp
cmps
das
xor
push
and
addr16
or
dec
scas
nop
addr16
jbe
cmp
fistp
sub
(bad)
adc
cmp
cdq
or
call
jns
pop
jb
or
ins
push
or
add
pop
je
xchg
cmp
shl
jbe
lods
sub
pop
add
mov
add
inc
pop
dec
dec
adc
and
jl
adc
cwde
adc
mov
adc
(bad)
gs
add
lahf
mov
std
mov
stos
fs
push
sub
aad
lock
lods
movs
adc
push
or
repnz
cwde
popa
cmp
jl
fsub
mov
add
pop
add
push
mov
add
ja
retf
push
lock
add
les
push
in
pop
or
or
fild
dec
in
fcmovnbe
mov
fimul
in
mov
fs
adc
xlat
xchg
xor
jbe
dec
hlt
jb
nop
addr16
inc
dec
push
cld
retf
cmp
push
es
retf
ror
lds
sbb
pop
(bad)
jg
or
cmp
xchg
popa
sub
retf
add
dec
jne
fcmovb
jp
gs
in
adc
shl
int
cmp
sub
imul
or
mov
into
(bad)
es
sbb
nop
sub
call
je
fcmove
in
adc
ss
cmps
jbe
xor
or
inc
mov
test
or
call
mov
inc
adc
fs
sbb
add
adc
cdq
mov
test
je
add
cmp
push
mov
loopne
fiadd
ror
ret
call
ror
add
cvtps2pi
rcr
push
add
push
sahf
cmps
mov
in
inc
pop
push
add
push
enter
sar
cmps
test
push
(bad)
aaa
popf
into
sub
pop
jns
cmp
sbb
leave
retf
xlat
add
jle
(bad)
pusha
(bad)
sbb
dec
push
push
inc
enter
add
push
cmps
in
and
jne
adc
mov
lock
push
repnz
or
xchg
out
fisttp
fadd
push
mov
fisubr
sbb
pusha
sbb
mov
outs
and
gs
nop
add
or
das
jne
sub
(bad)
mov
adc
fs
sbb
xor
xor
rol
retf
inc
popa
pop
pusha
inc
add
in
sub
inc
pop
sub
or
les
pop
mov
push
rcl
cmps
and
xor
loop
pusha
adc
data16
lods
add
das
sbb
or
add
jbe
imul
adc
xor
fcmovb
arpl
shr
clc
mov
jo
cmc
pop
or
addr16
pop
sbb
push
mov
imul
and
lea
and
js
mov
cli
adc
push
dec
pop
and
lea
sub
adc
xor
jl
stos
cmp
or
pop
mov
je
push
sbb
xor
cmp
loopne
sub
test
dec
sub
mov
int
mov
lods
std
xor
add
sbb
dec
xor
call
cmp
pop
push
(bad)
dec
ret
dec
call
cmps
lea
adc
push
or
call
adc
ins
adc
xchg
shl
icebp
into
mul
add
mov
sbb
sbb
stos
cmp
and
imul
ins
sbb
push
ret
mov
(bad)
mov
test
pushf
cmp
jo
inc
loope
adc
or
sbb
push
and
gs
adc
in
jmp
push
jl
fild
out
xchg
retf
push
xchg
xor
inc
ins
imul
scas
shl
imul
or
js
jmp
jo
push
push
and
add
ja
and
neg
(bad)
pop
mov
test
and
xor
jno
and
push
cs
lds
leave
cwde
push
push
(bad)
and
mov
cmp
and
adc
push
cmp
add
sbb
push
adc
dec
fidiv
jg
inc
xor
jmp
push
pop
inc
add
nop
dec
or
ror
add
and
pusha
xor
inc
and
or
mov
sbb
dec
bound
adc
in
mov
or
jae
sbb
cmp
add
int
add
das
add
ret
jmp
aas
jne
adc
inc
push
out
add
sub
xchg
cld
pop
ror
add
ins
add
add
jb
xchg
xor
cmp
lea
add
ret
adc
cmp
adc
scas
and
mov
popa
jo
dec
loopne
push
pop
arpl
loop
inc
or
loope
adc
ds
sub
dec
pop
scas
jle
or
fsubr
mov
xor
push
push
and
pop
adc
rcl
push
add
js
(bad)
sbb
ss
push
push
or
int
xchg
cmp
and
mov
rcl
lea
mov
cld
mov
js
jecxz
ins
out
test
dec
lahf
dec
and
clc
hlt
adc
dec
enter
adc
push
add
add
jne
jmp
lds
inc
dec
lahf
inc
and
jnp
cmp
ret
jo
mov
pop
adc
dec
sub
add
sbb
mov
and
add
iret
stos
cmp
sbb
push
imul
out
push
pop
sbb
js
add
add
sub
add
adc
dec
push
sbb
into
xchg
push
cmps
(bad)
inc
or
fist
adc
and
icebp
mov
fimul
pop
inc
push
mov
loop
xchg
sahf
push
shr
push
mov
cmp
cmp
je
xor
adc
ror
dec
jbe
outs
mov
push
pop
mov
jo
data16
cmp
test
mov
mov
adc
or
cmp
push
and
push
mov
adc
xchg
jne
and
outs
xchg
adc
pop
ror
or
jge
into
xchg
repz
pop
push
(bad)
(bad)
stos
iret
sub
push
aam
cmp
sub
jp
xor
mov
xchg
mov
jns
or
hlt
test
repnz
sbb
push
mov
hlt
test
or
fld
sub
sub
das
jecxz
jb
retf
test
xchg
xchg
fst
mov
movs
add
xor
xchg
ins
or
adc
push
cmps
xchg
add
(bad)
(bad)
sbb
or
cli
xor
pusha
stc
jbe
fcom
xor
clc
inc
jmp
call
(bad)
pop
xor
in
mov
push
jnp
ins
mov
loop
cmp
dec
mov
push
push
add
push
adc
mov
jl
retf
jg
or
dec
sub
inc
loope
mov
adc
add
jge
imul
retf
nop
jge
sahf
mov
das
sbb
mov
dec
cmp
js
xor
sub
or
fadd
fistp
daa
sub
rcr
add
push
pop
bnd
jo
lea
or
lods
add
push
imul
and
adc
mov
sub
jmp
or
cmp
and
loopne
adc
and
xchg
cmc
jge
aas
je
dec
inc
jne
dec
movs
mov
dec
and
imul
inc
inc
sbb
mov
imul
sub
int
push
mov
cdq
and
and
int3
add
push
mov
add
jb
sub
mov
mov
dec
scas
jo
imul
test
mov
xor
jb
push
add
dec
jg
push
cmp
xor
fnsave
push
mov
adc
jb
mov
ret
push
push
mov
popa
test
push
inc
push
cmp
inc
aaa
fcmovbe
xchg
push
(bad)
push
call
add
or
aaa
fild
pop
dec
dec
xor
mov
jle
bound
mov
sbb
or
out
nop
loope
fstp
and
cmps
adc
outs
push
inc
push
inc
shl
por
pop
sbb
les
mov
or
push
jmp
fstp
pop
fist
add
inc
sub
jnp
nop
cmp
test
pop
cwde
cmps
sbb
pusha
push
push
retf
les
mov
movs
loope
push
retf
enter
dec
add
or
dec
lea
sbb
add
call
jne
test
bnd
jnp
inc
(bad)
lea
mov
inc
xor
jo
xor
mov
clc
clc
push
push
jmp
retf
xor
(bad)
push
adc
movs
adc
mov
enter
mov
add
data16
sbb
inc
fdivp
jecxz
popa
kunpckbw
mov
xchg
mul
imul
dec
and
ds
push
in
and
test
xor
call
out
dec
or
mov
call
ds
jg
xor
adc
sbb
or
fimul
sub
shl
jge
sub
sub
idiv
pop
or
jge
add
ret
push
adc
push
sbb
vpandn
xor
dec
mov
pop
cmp
(bad)
mov
add
outs
mov
es
sub
jae
mov
or
js
xchg
loopne
imul
or
lods
mov
cdq
ins
and
push
mov
cmps
jns
mov
add
in
add
push
mov
fwait
in
adc
loope
xor
je
jge
arpl
xor
inc
jge
pop
xor
iret
shl
dec
fcom
ins
inc
sahf
cmps
push
call
leave
or
or
cmc
add
mov
mov
add
jne
xchg
jo
adc
popf
jne
mov
adc
sub
loopne
aas
sbb
dec
jle
xchg
inc
scas
nop
sub
mov
js
xchg
ja
dec
mov
pop
call
ret
nop
add
jg
sub
loopne
ficom
fild
aaa
stos
sub
xlat
das
adc
add
push
in
pop
dec
and
push
mov
or
arpl
or
jg
inc
push
(bad)
ja
xchg
dec
inc
push
push
dec
(bad)
dec
push
push
mov
sub
mov
push
sbb
(bad)
ret
adc
shl
adc
jne
and
std
jecxz
xchg
add
aaa
outs
add
cmp
add
cli
call
test
cmp
sub
je
stc
dec
in
add
add
mov
ud2
aam
or
push
or
inc
jns
fld
mov
push
push
inc
jle
out
pop
bound
mov
or
mov
and
test
inc
jmp
popa
nop
adc
or
sbb
jmp
jl
sahf
lods
dec
dec
xor
dec
loop
and
ss
mov
neg
mov
xor
add
add
sbb
pop
push
mov
mov
les
or
cwde
pop
sbb
mov
pop
mov
and
xor
xchg
jo
and
push
retf
xor
into
rcl
fisub
cwde
dec
jo
cmp
jno
adc
add
sub
pop
dec
cmp
adc
sbb
sbb
mov
inc
add
mov
dec
mov
add
and
or
mov
cmp
ss
dec
sub
jb
retf
push
pop
int
add
retf
lods
push
xchg
pusha
sub
pop
xchg
fs
jo
js
fisttp
jl
inc
imul
mov
mov
push
inc
xchg
or
sbb
or
xchg
cmc
nop
push
js
mov
aaa
fs
ins
movs
xchg
in
or
inc
mov
cld
data16
mov
adc
mov
mov
push
mov
or
xor
jnp
aaa
pop
push
mov
test
lods
xlat
cmp
xor
mov
push
daa
and
cmp
retf
fs
xchg
test
loop
retf
ins
jmp
push
xchg
nop
sub
xor
or
inc
aaa
sbb
mov
adc
test
imul
xchg
mov
clc
xor
add
xor
xor
inc
mov
fwait
mov
xor
and
mov
and
mov
mov
pop
leave
pusha
fs
ins
rcl
dec
(bad)
retf
push
mov
pop
fbld
test
repz
and
retf
retf
and
dec
add
or
and
xchg
and
xchg
adc
xchg
add
jns
or
mov
xor
adc
movs
test
mov
mov
stos
aam
int3
movs
mov
rcl
daa
(bad)
fiadd
loop
mov
pop
test
add
lock
or
in
jmp
shl
(bad)
hlt
stc
into
inc
popaw
call
or
sbb
add
mov
add
xchg
retf
leave
hlt
cld
lock
data16
out
sbb
sub
sub
es
jno
pop
add
xor
inc
add
xor
pop
loopne
dec
mov
dec
enter
adc
push
jns
out
retf
pop
or
test
pop
les
call
in
adc
adc
pop
inc
data16
sbb
sar
sbb
inc
add
jns
mov
dec
dec
jo
jbe
dec
ja
xor
xchg
mov
nop
pop
and
and
test
sbb
inc
lods
popa
sub
dec
gs
xor
push
sahf
xchg
xchg
xchg
xchg
xchg
(bad)
retf
and
cmp
lea
enter
fadd
or
ins
in
sub
inc
lock
mov
dec
call
in
or
xor
mov
in
add
add
pop
sub
mov
mov
pop
sti
clc
hlt
cmp
mov
jae
dec
sbb
xor
idiv
mov
(bad)
mov
or
mov
fmul
add
add
or
enter
cs
mov
ins
int3
dec
jo
xchg
inc
add
pop
inc
es
mov
je
pop
inc
push
mov
push
jo
jns
xchg
test
fnsave
jns
pusha
dec
sub
ror
mov
and
test
and
mov
cwde
pushf
xchg
xchg
cdq
pop
jne
test
xor
mov
cmp
mov
cdq
int
data16
mov
add
(bad)
enter
js
int3
mov
(bad)
sbb
sbb
fcmovu
loop
cdq
test
sbb
jno
mov
inc
popf
hlt
das
jnp
mov
dec
mov
inc
ins
add
or
gs
and
push
sbb
xor
xchg
inc
mov
je
loopne
add
push
fstp
or
push
push
push
je
inc
sub
inc
jecxz
inc
js
in
test
add
and
inc
pop
push
adc
pusha
out
idiv
loope
xor
cwde
sar
popf
xchg
pop
(bad)
and
(bad)
sub
rol
ret
add
sub
push
add
add
and
aaa
sub
cmp
add
mov
ss
ficom
jp
das
jo
dec
sti
movs
das
out
xchg
add
std
mov
mov
sub
add
inc
add
enter
push
fisubr
sub
xchg
adc
std
cmps
adc
pop
sub
dec
push
lea
adc
mov
frstor
xlat
pop
mov
inc
mov
fdivr
nop
or
jns
adc
mov
push
xor
jae
and
call
loop
mov
push
xor
adc
sub
push
pop
push
mov
push
pop
inc
push
xchg
mov
mov
jbe
addr16
stos
add
and
imul
xor
test
pop
or
push
push
inc
fnstsw
pop
sbb
jmp
ja
xor
call
adc
cmp
jg
shl
addr16
xchg
movs
dec
test
add
in
sub
push
and
in
push
or
dec
or
js
ret
xchg
mov
gs
ficom
popf
aam
and
add
xor
adc
add
test
cmp
push
xor
push
mov
push
xchg
pop
rol
retf
test
mov
or
and
fwait
sub
push
sbb
sub
mov
lods
add
or
je
adc
out
or
movs
jo
ror
rol
imul
lds
inc
or
in
and
or
rol
mov
sbb
es
add
and
xor
test
iret
xchg
je
daa
push
dec
add
jbe
inc
mov
test
aam
inc
popa
mov
cmp
push
ja
dec
adc
add
(bad)
pop
inc
aas
test
stos
gs
inc
mov
or
inc
adc
cmp
xor
inc
and
or
dec
xor
push
rol
inc
push
sbb
int
in
ins
xchg
push
inc
call
pop
add
push
sbb
xchg
and
enter
mov
inc
inc
push
push
add
in
loope
push
push
push
cmp
loope
inc
leave
mov
inc
cdq
nop
cmps
repz
adc
cmps
push
sub
test
jmp
shl
pop
test
lea
xchg
lods
jmp
repz
mov
and
stc
and
xlat
mov
inc
pop
aam
retf
push
push
xlat
mov
jp
call
fnstcw
or
xchg
or
xchg
shl
inc
cmps
push
sahf
je
push
mov
and
push
fcom
xchg
mov
pop
mov
inc
clc
or
fdiv
push
das
iret
fs
and
pop
inc
cmp
mov
aas
and
jne
out
dec
push
sbb
lea
push
push
adc
pop
pop
je
mov
mov
(bad)
iret
loopne
loope
dec
adc
push
and
dec
push
bound
and
leave
movs
lea
push
or
sbb
or
xchg
cmp
shl
arpl
jnp
sub
jno
inc
adc
cmps
(bad)
and
cmp
lods
bound
or
and
or
sbb
dec
or
inc
inc
push
jo
xlat
call
dec
push
push
mov
xchg
push
push
sub
shr
xlat
lea
xor
sbb
jb
in
cmp
das
sub
sbb
dec
in
push
sub
lock
sahf
and
mov
add
test
push
cmp
inc
inc
js
and
call
pusha
mov
cli
(bad)
jp
mov
cli
fsubr
dec
test
push
pop
and
jne
dec
sbb
and
in
xor
ret
retf
jno
ins
adc
sbb
out
pop
and
jb
mov
shr
inc
call
sbb
fisub
sub
push
mov
popa
mov
mov
mov
rcl
xchg
mov
lods
and
push
push
pop
mov
shl
(bad)
jbe
adc
test
(bad)
inc
mov
xor
mov
pop
or
pop
inc
bound
mov
enter
push
add
test
popa
icebp
movs
ins
mov
push
sbb
add
jb
xor
dec
add
loope
imul
jno
add
mov
add
push
ror
dec
mov
inc
jnp
or
sbb
aas
int
adc
lods
test
test
and
pop
cmp
jmp
sub
mov
ins
add
je
ror
jb
jmp
and
mov
xor
mov
add
mov
adc
movs
and
push
pop
pop
sub
es
inc
retf
bound
sub
in
mov
rol
or
hlt
fidiv
sub
stc
fincstp
rcl
push
inc
loopne
mov
inc
add
pop
ret
sbb
call
mov
add
sbb
sbb
cdq
lahf
push
aaa
test
xor
fdivrp
cmp
cs
add
les
and
loope
lock
aad
xlat
jmp
pop
adc
ss
out
pop
fcomp
jmp
push
xor
fadd
xor
push
xchg
in
adc
in
or
addr16
push
add
and
dec
cmps
and
pusha
dec
pop
and
nop
xor
sub
jmp
enter
and
pop
sbb
jmp
jmp
fisubr
xchg
cwde
(bad)
loopne
inc
xor
js
and
pop
mov
dec
and
ret
cwde
jns
jmp
add
lea
jmp
cmp
icebp
outs
fnstenv
dec
movs
mov
sbb
jbe
fbstp
dec
pushf
dec
adc
adc
lods
sbb
cmp
inc
xor
xor
push
fimul
pop
cmp
push
push
dec
add
lock
pop
push
mov
outs
and
jmp
adc
sar
shl
or
pop
pop
push
ins
es
xchg
push
add
add
das
cwde
outs
fsub
pusha
xor
movs
add
or
fadd
ror
pop
loop
mov
pushf
and
lods
push
aam
add
ret
cmp
xor
sub
or
loopne
push
push
cmp
out
add
add
push
adc
ins
push
fld
hlt
fprem
aad
sub
inc
mov
ret
dec
sub
xchg
and
jno
mov
jmp
add
fwait
cmp
sub
outs
dec
test
add
int
test
and
jmp
push
or
or
mov
lea
cmp
ins
add
xor
call
xor
sub
sbb
mov
stos
outs
xor
and
cmp
mov
mov
ret
push
mov
add
(bad)
push
pop
sbb
mov
inc
movhps
out
pop
mov
and
fdivrp
test
stos
or
outs
(bad)
daa
pop
fdiv
xchg
outs
dec
xchg
xchg
les
or
test
push
sbb
repz
add
sti
push
fild
in
push
sti
mov
pop
shr
push
and
xchg
mov
jnp
add
and
(bad)
push
mov
cmp
loopne
mov
xor
or
aad
pop
fwait
ret
popf
adc
adc
mov
es
push
pop
fidivr
imul
test
add
mov
sbb
lahf
mov
xor
test
mov
xor
pop
mov
jae
mov
inc
and
and
push
xor
xlat
mov
mov
or
outs
ss
add
bound
adc
out
mov
cdq
mov
add
sub
adc
ret
mov
mov
push
ss
xchg
mov
dec
cmp
(bad)
call
mov
cwde
bound
scas
test
fmul
sub
scas
mov
(bad)
xchg
jp
imul
out
inc
push
dec
je
push
pop
mov
pusha
ds
repnz
jo
je
sti
sub
shr
and
(bad)
sub
jns
sahf
and
sub
fmulp
pop
xchg
adc
cwde
in
and
sti
xchg
jae
mov
lea
test
test
sar
fdivr
fs
adc
cmp
ror
push
(bad)
in
and
ins
cmp
hlt
mul
in
or
sbb
xchg
pop
popf
adc
or
or
mov
int3
mov
jne
xor
jo
inc
mov
or
mov
fld
dec
adc
adc
or
pushf
mov
xchg
test
xor
xchg
popf
dec
sub
mov
outs
in
adc
or
mov
or
xor
and
enter
sbb
cmps
data16
pop
sub
rcl
cmp
in
jns
inc
js
cmp
dec
in
test
xchg
push
sbb
retf
call
sahf
xchg
addr16
fsubr
mov
cmps
je
test
jns
out
jl
and
xchg
addr16
pushf
nop
mov
inc
test
lods
shl
push
mov
mov
xlat
mov
pop
mov
sub
add
or
icebp
outs
(bad)
jmp
dec
inc
shr
pop
je
push
int
xor
jecxz
fistp
pusha
cmps
jmp
cmps
add
ss
adc
shr
test
jge
dec
cmp
movs
sar
dec
(bad)
jle
xchg
sbb
xchg
stos
lock
jle
popa
add
push
stos
mov
and
jge
jg
into
jbe
test
int3
xor
xor
aas
mov
jne
or
(bad)
dec
lea
add
call
pop
dec
add
jmp
jle
jne
push
sub
fidivr
lods
nop
xchg
xor
add
adc
sbb
mov
je
repnz
jp
xor
test
inc
dec
jp
add
sar
rol
fdiv
pusha
mov
xchg
jmp
dec
(bad)
and
test
or
push
mov
mov
adc
out
or
ins
loop
out
inc
mov
iret
adc
sbb
or
push
sbb
mov
inc
clc
mov
rcr
sbb
int
push
dec
cdq
mov
shr
push
dec
and
sti
push
cs
outs
cmp
ins
and
xor
mov
add
or
cmp
test
cmp
add
pop
jae
or
adc
cs
mov
adc
dec
push
lock
nop
add
or
or
jmp
outs
cld
(bad)
dec
(bad)
mov
add
mov
push
pop
jo
sub
fstp
and
jle
mov
and
js
sbb
push
xchg
push
and
or
and
inc
mov
xchg
mov
push
pop
or
mov
add
adc
dec
outs
cwde
mov
sti
aad
loopne
loope
jbe
jmp
mov
cmp
mov
inc
adc
pop
push
aas
in
cmps
fwait
je
jb
mov
inc
push
js
jbe
jno
adc
or
adc
or
add
push
pushf
ret
or
xor
leave
and
xchg
ja
test
xor
add
inc
add
mov
jae
add
shld
sub
int
shr
cmp
ins
add
xor
mov
loopne
rcr
and
inc
call
loopne
mov
pop
test
test
(bad)
mov
sbb
add
push
out
pop
aam
xor
cmps
jge
xlat
push
push
inc
call
push
adc
int3
push
or
add
add
pop
adc
mov
fld
cmp
loopne
icebp
dec
jnp
popf
fs
mov
sbb
cmp
push
ret
sbb
ror
push
lods
sbb
dec
or
mov
mov
adc
adc
(bad)
pop
or
psubd
and
mov
das
cmps
sub
and
inc
dec
sbb
js
pminsw
sub
adc
sbb
mov
sbb
cmp
mov
sub
mov
les
xlat
cmp
jo
pop
icebp
xchg
xor
pusha
mov
ror
ret
dec
pop
push
pusha
int
sbb
lods
push
mov
(bad)
imul
jg
or
sbb
cmp
mov
or
push
aaa
and
pop
add
push
mov
pusha
test
and
mov
or
mov
rcr
pop
add
dec
fnsave
push
fsubr
test
pop
ins
inc
jmp
adc
xchg
les
iret
pop
call
and
ret
inc
pop
xor
ja
js
cmp
ja
mov
outs
hlt
icebp
push
dec
loopne
sub
add
cmp
xchg
cmp
add
push
js
or
hlt
xlat
sub
adc
inc
jo
das
add
jnp
add
sahf
or
jo
sbb
test
adc
inc
jne
push
mov
out
pop
sbb
cmp
fimul
inc
add
pop
stc
add
or
cs
dec
push
dec
popf
sbb
test
sub
add
sbb
jle
sar
mov
add
outs
leave
mov
xchg
dec
or
je
jmp
shr
jno
adc
fnstenv
mov
movs
add
dec
push
outs
xchg
int
shr
fld
xchg
cmp
adc
sbb
int
imul
dec
sub
cmp
jecxz
sub
inc
and
add
pop
pop
sub
lock
mov
les
inc
push
pop
cmp
jg
push
mov
(bad)
pop
sub
jno
sbb
xor
iret
and
sbb
adc
push
test
add
jno
and
inc
pop
pop
nop
fsubr
push
and
adc
sub
jne
push
xor
mov
and
adc
inc
or
cmova
push
retf
in
rcl
arpl
inc
lds
adc
test
xchg
push
inc
and
iret
jge
dec
sbb
jmp
xchg
dec
js
fist
aas
pop
mov
xchg
scas
sbb
and
sbb
dec
sahf
or
inc
push
gs
fs
adc
lock
ror
ret
mov
mov
cmp
pop
pop
je
ins
in
fnstsw
icebp
xchg
jl
lock
push
mov
daa
sbb
int3
sub
jnp
jno
movs
add
adc
in
push
pop
add
fidiv
add
xor
rol
aaa
sub
xor
fisubr
mov
call
and
mov
add
leave
cwde
push
dec
mov
mov
jmp
mov
mov
popf
inc
cmps
cdq
inc
fcmovbe
cmp
cs
push
add
jno
pop
aad
fist
push
jns
dec
add
or
and
fcom
scas
adc
jmp
scas
movs
enter
pop
ins
sub
add
xchg
cmp
inc
xor
and
push
cmp
xchg
or
inc
popa
mov
push
xchg
pusha
leave
in
clc
xor
sub
pop
add
daa
gs
ret
jns
inc
pop
add
pop
inc
nop
adc
add
add
add
push
mov
cmp
xchg
inc
add
xor
in
rcl
or
movs
mov
bound
xchg
add
mov
adc
repz
or
ficomp
daa
push
pop
adc
push
adc
push
mov
and
pop
mov
add
inc
mov
inc
xchg
pop
scas
or
xor
adc
mov
mov
push
or
pop
mov
enter
mov
loop
xor
bound
jp
(bad)
imul
or
test
mov
add
adc
sub
les
ds
add
adc
mov
dec
push
jmp
pusha
loope
add
daa
jne
pop
outs
mov
mov
pushf
mov
shr
jbe
xchg
or
ja
movs
sbb
dec
add
popa
cmp
or
mov
adc
mov
add
pop
push
fimul
or
add
aas
ds
jbe
outs
icebp
sbb
adc
jne
push
jmp
aas
add
int
(bad)
sub
lds
push
jmp
sbb
cmp
add
pop
popa
jge
or
and
(bad)
or
fisub
jne
test
xchg
push
push
mov
jg
xor
push
clc
and
cmpps
inc
rcr
sahf
push
aam
aad
sbb
jmp
adc
lock
or
xchg
xchg
jl
and
jg
rcl
or
daa
data16
imul
imul
mov
jo
cmp
xchg
cmp
pop
imul
inc
push
enter
xor
mov
mov
cwde
mov
sub
push
mov
inc
stos
and
cmp
out
dec
and
test
inc
bound
pop
sbb
mov
(bad)
out
inc
push
imul
test
aam
push
les
pop
pop
fild
mov
ret
sti
stos
mov
adc
mov
inc
addr16
cmp
cmp
cmp
jge
push
inc
jb
outs
sbb
push
into
fdivr
sub
pop
xchg
test
fxch
add
push
adc
dec
pop
mov
ins
punpckhbw
dec
cmp
sub
push
xchg
fs
sbb
(bad)
js
test
add
lahf
cwde
pop
push
rcr
shl
pop
adc
(bad)
jnp
sbb
mov
mov
cdq
or
hlt
pop
shr
inc
out
pop
xchg
jbe
aaa
and
or
fidivr
mov
sbb
jns
retf
in
popf
retf
add
test
add
pop
push
data16
add
idiv
add
and
(bad)
or
shr
scas
mov
add
cmp
cmp
add
cmp
out
adc
fcomip
add
jno
jno
sahf
(bad)
jl
cmp
dec
imul
adc
lods
fiadd
push
outs
jb
enter
sbb
mov
add
push
jo
shr
ds
loop
xor
cmp
sbb
mov
and
dec
inc
in
or
sbb
nop
cdq
xchg
inc
es
pop
xchg
pop
inc
dec
xchg
add
inc
test
aas
push
out
sub
sti
imul
jno
scas
add
mov
inc
imul
test
dec
call
scas
nop
bswap
sbb
and
push
(bad)
(bad)
mov
(bad)
fist
js
mov
sub
sub
xor
jmp
or
cmp
sar
add
fidivr
nop
dec
(bad)
xor
push
adc
push
and
pop
xchg
addr16
mov
inc
clc
clc
push
dec
xor
adc
mov
mov
cmp
pop
push
or
or
cmp
dec
add
(bad)
sti
lea
mov
clc
sub
and
sbb
and
dec
dec
es
add
sub
cmp
lock
jno
jae
mov
xor
int3
and
in
sbb
push
pop
jne
test
sar
push
mov
popa
test
xchg
mov
jno
or
or
pop
daa
call
jo
and
xor
cmps
mov
push
sbb
mov
xchg
sub
xchg
je
mov
xchg
not
push
ins
mov
adc
sub
ficom
mov
(bad)
jbe
mov
ins
or
jo
loope
mov
dec
ror
sub
jmp
fld
jo
adc
add
jl
inc
mov
jmp
mov
xor
or
adc
imul
(bad)
fadd
inc
cmp
pop
or
dec
call
mov
jno
repz
mov
mov
popa
nop
test
and
xor
rol
cmp
and
std
inc
xchg
jl
sub
jmp
xchg
push
xor
(bad)
fldenv
dec
dec
ret
movsx
ficom
mov
mov
push
mov
cmp
push
shr
sub
xor
(bad)
push
cmp
xor
in
imul
add
and
in
add
add
mov
cmp
sbb
cmp
arpl
add
dec
mov
add
and
inc
(bad)
in
rcl
xlat
push
sbb
jnp
cmps
or
and
sub
add
(bad)
xchg
test
daa
sbb
popa
cmp
cmps
jo
loopne
outs
jl
in
inc
push
sbb
pop
sbb
or
mov
inc
or
js
lea
mov
pushf
jo
cmp
mov
mov
test
xor
stos
or
dec
mov
inc
adc
and
fimul
jmp
stos
push
adc
push
int
jb
cs
inc
cmp
rcl
or
call
shl
enter
add
mov
mov
or
xor
out
sub
sbb
jae
rcr
or
lahf
dec
push
popa
out
or
adc
adc
push
cmp
ss
adc
ins
adc
loop
pushf
in
sbb
outs
lds
xor
nop
enter
fistp
or
test
push
xor
pusha
ror
int3
adc
push
jb
je
cmp
add
sar
add
into
fsub
inc
adc
clc
and
fs
imul
cdq
lock
rol
mov
test
(bad)
pusha
loope
sub
adc
and
adc
sbb
push
sbb
rcr
xor
or
add
bound
pusha
xchg
lods
in
inc
loope
dec
pop
or
inc
sbb
xchg
add
je
mov
jo
pop
inc
sbb
hlt
jo
mov
nop
dec
push
lods
mov
enter
mov
push
and
and
mov
push
inc
mov
mov
push
imul
rol
xchg
adc
(bad)
adc
pusha
addr16
(bad)
outs
push
adc
mov
bound
dec
pop
out
push
mov
and
test
dec
pusha
add
add
movs
pop
xchg
hlt
(bad)
call
dec
lods
lock
push
fistp
daa
jmp
les
jb
ins
jge
mov
or
inc
sbb
sbb
mov
rol
xchg
inc
scas
pop
inc
into
loope
jmp
inc
add
adc
adc
sahf
mov
mov
jecxz
jge
pop
and
push
xlat
inc
or
mov
push
les
dec
mov
loope
push
dec
xor
dec
mov
sub
push
push
push
add
movlps
les
dec
add
adc
push
xchg
jbe
adc
sbb
push
loope
out
sbb
dec
out
xor
pop
lahf
add
jnp
cmc
jmp
pop
mov
and
push
jecxz
jmp
mov
push
in
dec
and
or
cwde
push
ror
ret
add
mov
(bad)
imul
mov
sahf
mov
inc
cs
call
adc
stos
outs
mov
cmp
jp
pop
pop
or
(bad)
sub
xor
sbb
xor
dec
cwde
pop
ret
and
pop
mov
sub
lea
ins
mov
xor
rcr
jmp
scas
call
xchg
inc
cmps
sbb
and
int
(bad)
and
call
sbb
jns
or
push
cmp
inc
add
and
push
mov
fiadd
sub
lods
bound
adc
mov
push
jne
out
test
inc
and
imul
and
push
mov
inc
call
je
push
mov
push
inc
and
sub
outs
jns
int3
mov
sbb
pop
mov
mov
xchg
imul
inc
mov
stc
pusha
or
cdq
push
aas
mov
mov
fld
nop
xchg
es
jmp
xchg
fstp
fld
or
out
idiv
add
imul
xchg
mov
cld
leave
adc
sub
jg
pop
sub
sbb
and
leave
dec
cmc
sub
js
mov
dec
and
mov
int3
lahf
popf
and
mov
sbb
inc
pop
add
cdq
inc
inc
and
btr
sub
jg
imul
cld
ss
int3
jl
jge
rcr
rol
out
imul
lds
and
adc
xchg
scas
pop
and
cdq
cwde
xchg
push
dec
jo
imul
mov
mov
cdq
icebp
sbb
aam
sub
stc
sub
pop
mov
outs
je
pusha
pop
add
popa
jl
add
das
xor
dec
push
jmp
push
push
ins
sbb
jno
ret
inc
push
loope
xor
in
push
sahf
push
dec
add
pop
adc
repz
adc
pop
out
repnz
dec
inc
call
inc
frstor
push
add
gs
iret
je
test
fdivp
pop
mov
retf
fisub
xor
xchg
and
jp
xchg
cwde
cmp
fwait
cdq
scas
shr
mov
push
add
shl
adc
jbe
mov
dec
pop
ins
daa
adc
(bad)
(bad)
clc
sub
loopne
rcl
out
repz
aaa
jne
arpl
ss
(bad)
push
push
mov
add
test
jns
or
jmp
jecxz
dec
loop
add
test
cmp
push
test
mov
push
jmp
stos
es
gs
sub
sbb
lods
ins
or
mov
gs
xchg
mov
je
mov
and
mov
imul
and
push
pop
mov
mov
fmul
xchg
jns
jne
dec
dec
mov
sar
fstp
or
sub
pop
lea
pusha
imul
lods
sub
or
ja
xchg
push
imul
sub
cmp
je
adc
push
mov
push
inc
cmp
repz
push
push
pop
jp
xchg
adc
mov
stc
out
push
sbb
adc
imul
adc
mov
sub
push
push
test
(bad)
into
dec
outs
or
xchg
test
mov
xchg
cli
push
xchg
add
shl
in
push
mov
jle
pop
add
mov
or
add
out
dec
jl
add
jb
push
aaa
add
sbb
add
add
pop
or
dec
push
cwde
das
mov
mov
add
idiv
push
push
push
push
xor
mov
rcr
push
jge
jne
popa
mov
xor
push
or
push
push
popa
push
jns
jo
movs
fnsave
cmp
mov
(bad)
cli
adc
mov
rol
dec
or
xchg
shr
inc
add
lea
pop
inc
add
xor
cmp
sahf
out
dec
int3
aad
cdq
ret
add
xchg
add
or
jmp
mov
dec
add
and
pop
xor
outs
fwait
sbb
mov
xchg
pop
and
jne
(bad)
cmp
les
add
into
inc
push
xchg
push
jmp
mov
sub
idiv
(bad)
push
mov
ret
xor
leave
jnp
(bad)
sbb
mov
add
cmp
pop
or
leave
or
fs
push
push
mov
jl
cmp
jne
pop
inc
sbb
add
pop
lock
mov
or
pop
sbb
add
rol
cmp
cld
xchg
mov
je
(bad)
rcr
mov
or
xor
inc
cmp
cmp
dec
inc
sahf
inc
sub
push
add
add
xor
lds
cmps
and
fst
xchg
xor
xor
cmp
cmp
cmps
add
jns
adc
mov
adc
sub
and
push
adc
mov
arpl
and
inc
rcl
popa
sub
adc
pop
sub
xor
adc
ret
clc
sub
xlat
adc
loope
mov
jle
(bad)
in
sbb
stos
or
jo
sbb
sub
ins
mov
test
add
or
ret
fstp
inc
loope
jle
jmp
add
sbb
int3
xor
add
adc
add
push
outs
and
mov
pop
mov
or
cwde
repz
ds
inc
js
push
(bad)
and
adc
or
sbb
es
jecxz
pop
push
or
push
inc
and
sbb
adc
jae
loopne
push
xor
jmp
xchg
push
mov
pop
add
inc
xlat
in
xor
mov
mov
add
out
lods
jg
ja
je
add
xor
mov
jb
(bad)
es
push
lock
push
jne
shr
lock
push
daa
xor
add
cmp
add
das
repz
inc
test
add
fnsetpm(287
mov
add
nop
daa
mov
pop
sar
cmps
mov
sub
std
cmp
jno
add
inc
xchg
lods
inc
sbb
(bad)
push
std
mov
ins
add
push
mov
sub
hlt
push
inc
adc
fmulp
ret
sti
or
jge
push
test
add
inc
mov
popa
add
test
add
loopne
pusha
and
push
dec
mul
jns
cmp
aas
loop
rcl
fst
xor
repnz
push
or
inc
jmp
push
dec
bnd
inc
pop
sub
push
pop
inc
push
cmps
jno
cs
jb
and
add
lods
test
pushf
pop
sti
out
das
push
clc
dec
mov
mov
mov
dec
jmp
test
or
outs
leave
dec
lahf
(bad)
lahf
sub
push
xchg
mov
js
jo
sahf
or
dec
fucomip
ds
mov
repz
xor
add
inc
mov
adc
cmps
popf
fcom
dec
inc
call
mov
sub
push
cmc
cs
add
or
jne
adc
add
sti
xchg
outs
dec
call
pop
mov
add
pop
rol
fiadd
dec
pop
fadd
pop
dec
dec
inc
jecxz
scas
mov
rol
pop
dec
jo
lock
adc
adc
cmp
cmp
sti
xchg
test
dec
pushf
or
ss
adc
inc
add
inc
dec
cwde
push
jne
jbe
cmp
dec
or
enter
fnsave
mov
pop
pop
inc
ret
and
or
adc
ret
push
loope
pop
or
out
imul
push
inc
inc
push
shl
and
cmp
pop
and
fs
push
enter
lods
dec
dec
call
push
pop
enter
dec
mov
jb
out
outs
add
add
lea
dec
jbe
pop
jb
enter
sub
call
push
movs
xor
cmp
push
sbb
jno
push
jne
test
aad
and
test
push
pop
dec
test
outs
loopne
not
sub
add
nop
icebp
out
jecxz
nop
in
or
test
adc
jmp
mov
popf
and
push
mov
add
fadd
sub
das
lea
or
and
and
jbe
shl
fild
aam
test
clc
mov
sbb
cdq
ficom
or
sbb
xor
xchg
cdq
jmp
adc
into
aam
cdq
clc
mov
test
clc
jne
pop
retf
add
push
xchg
jp
(bad)
dec
inc
mov
push
mov
outs
loopne
js
mov
scas
add
shl
inc
repnz
dec
rol
sbb
mov
push
xchg
loopne
mov
jg
mov
add
loope
movs
mov
add
loop
jne
and
rcr
and
cmp
pop
pop
mov
inc
ret
sbb
sbb
or
(bad)
push
sub
mov
add
inc
rol
nop
shr
mov
and
push
push
push
movs
xchg
inc
loope
pop
cmp
mov
push
sahf
repnz
mov
dec
mov
test
bound
sbb
cwde
sub
xlat
push
push
movs
shr
lods
push
je
ja
inc
cmp
or
cwde
imul
adc
add
cmp
inc
jo
movs
stc
or
mov
or
xchg
jbe
fmul
add
or
sti
mov
push
push
arpl
push
pop
pop
ret
jp
dec
std
clc
pop
jmp
adc
mov
push
retf
mov
rol
dec
add
sbb
push
pop
rcr
test
and
jbe
mov
and
sbb
sbb
add
cmp
mov
jns
xchg
dec
adc
or
ud1
inc
sti
cld
jmp
or
mov
test
mov
xchg
xchg
lea
mov
push
adc
pop
aam
scas
xlat
inc
cmp
pop
sbb
in
cwde
das
mov
enter
leave
mov
push
push
jp
test
inc
shl
sbb
leave
adc
or
mov
dec
lahf
nop
dec
sahf
add
adc
imul
push
ja
inc
push
pop
or
add
and
dec
xor
add
push
or
push
adc
aad
ds
jle
arpl
jne
pop
mov
pusha
push
pop
loope
mov
loope
xor
mov
idiv
mov
push
push
pop
mov
stos
in
adc
sbb
mov
rcr
daa
push
das
mov
dec
lds
sub
cmps
gs
rol
xor
add
and
jns
mov
push
xor
inc
xchg
xchg
daa
inc
sub
or
adc
inc
jb
sub
ret
pop
or
xchg
sti
sbb
jne
cmp
push
rol
add
imul
pop
sub
fsubr
test
inc
dec
inc
shl
out
clc
dec
pusha
dec
out
xor
or
jp
adc
pop
out
rcl
in
dec
or
dec
or
and
mov
ja
or
popf
inc
xor
mov
and
mov
ret
ret
bound
fist
push
aam
and
and
inc
adc
jbe
sbb
sbb
mov
or
je
sub
mov
lea
xor
cmp
outs
cmps
mov
and
add
test
popf
add
push
push
inc
js
push
sub
inc
xlat
fdivr
dec
in
cmp
push
cmc
dec
cmc
cmp
mov
dec
mov
xchg
inc
mov
stc
inc
sub
pusha
lds
je
inc
cmp
test
mov
sbb
jne
jle
jno
movs
push
and
mov
ficomp
int
add
out
add
and
and
inc
push
imul
mov
jle
push
push
push
mov
das
mov
test
pop
pand
pop
jp
push
and
(bad)
retf
push
mov
mov
cmp
add
dec
jne
imul
inc
popa
cmp
enter
cmp
arpl
adc
adc
or
adc
pop
xor
ins
push
push
push
and
inc
mov
mov
iret
sub
jge
and
nop
pop
or
mov
add
hlt
add
mov
xor
sbb
repz
and
mov
push
add
test
(bad)
xlat
adc
sub
dec
xchg
out
cmps
mov
add
mov
push
mov
jns
push
dec
mov
adc
adc
(bad)
adc
pusha
mov
pop
and
es
jbe
push
mov
loopne
arpl
inc
test
sub
es
sbb
sub
jge
dec
xchg
inc
cmc
push
cmp
jmp
int
fadd
fsubr
mov
cmps
cmp
int
push
sub
add
inc
rcr
push
fbstp
sbb
ds
push
or
and
pop
test
mov
xor
or
gs
sbb
movs
test
and
outs
dec
lock
sub
or
cs
scas
sub
or
inc
inc
sar
sub
pop
jo
arpl
daa
xor
add
in
(bad)
dec
shr
or
adc
ss
mov
lahf
adc
or
dec
ror
cmp
enter
mov
or
das
imul
sbb
retf
or
(bad)
adc
cmp
jecxz
jecxz
shl
sbb
add
push
jecxz
js
dec
sbb
loopne
(bad)
lods
dec
lock
mov
imul
xor
jl
add
inc
mov
call
and
add
dec
leave
inc
jnp
iret
imul
sar
es
push
pop
imul
pop
cmp
pop
add
xchg
pop
pop
test
es
mov
jb
add
add
cmp
loopne
xor
jo
rol
pop
add
mov
pushf
jb
and
add
jle
sub
dec
cs
fisttp
adc
sbb
ds
movs
mov
pop
shl
pusha
punpcklwd
fdivp
out
xchg
pop
pop
and
rol
pop
lods
add
jmp
mov
add
or
inc
pop
pop
inc
add
pushf
ret
mov
or
pop
jns
retf
sbb
imul
loope
xchg
ss
aas
jns
and
leave
push
mov
xlat
push
outs
inc
jp
or
mov
sub
or
xor
inc
or
dec
xor
gs
stc
xchg
fadd
gs
mov
adc
dec
lods
loopne
pavgw
and
xchg
jle
dec
das
xchg
imul
pop
add
mov
je
and
les
add
and
mov
inc
or
sbb
push
mov
push
ins
push
cdq
jp
rep
xor
fadd
cwde
shr
(bad)
and
xchg
push
pop
pop
inc
jmp
inc
adc
mov
mov
or
jl
enter
add
sar
mov
push
mov
and
add
gs
or
mov
add
popa
push
mov
mov
add
adc
(bad)
fmul
push
adc
ds
loop
lock
cmp
dec
repz
adc
fcom
xchg
dec
aaa
out
mov
cli
sbb
mov
js
mov
movs
add
shr
push
add
inc
pop
mov
cli
xchg
dec
and
push
mov
or
jbe
fcmovnb
or
push
lea
sub
jl
push
mov
adc
test
inc
jbe
mov
or
fwait
xchg
jo
js
sbb
cmp
add
clc
neg
jmp
imul
shl
out
(bad)
lods
dec
cmp
or
add
fld
mov
lods
jmp
arpl
sub
mov
push
push
add
push
fnsave
sbb
sub
dec
std
cmp
pop
cmps
lea
mov
sub
pop
ss
xlat
fidivr
and
adc
scas
or
fcom
push
imul
inc
xor
dec
push
pop
movs
adc
aaa
cmp
push
test
or
push
xlat
and
inc
adc
lea
cli
jecxz
jmp
and
test
shr
fwait
ins
ins
mov
ret
xchg
adc
test
sbb
jne
pop
push
push
sub
jo
in
inc
test
mov
sbb
mov
push
out
sbb
int3
push
add
xchg
sub
loopne
mov
pop
xor
or
inc
fidivr
pop
cmps
xor
add
mov
sbb
sub
jae
daa
pop
adc
lea
or
and
xor
mov
lea
lea
ins
jbe
inc
mov
or
loope
pop
adc
enter
sbb
xchg
out
jne
adc
lds
inc
repnz
out
xchg
test
xchg
mov
sub
ret
cmp
inc
xchg
push
jg
jns
ins
sub
jecxz
add
arpl
dec
imul
adc
push
add
cmp
sub
push
ret
sbb
or
fwait
inc
and
sub
xchg
inc
xchg
sahf
bound
dec
lahf
or
fs
loope
lods
push
xor
out
mov
fs
cdq
arpl
rol
jg
retf
mov
test
mov
mov
xchg
mov
dec
add
outs
mov
xchg
push
or
adc
inc
mov
shr
inc
sahf
sub
adc
mov
(bad)
mov
(bad)
sbb
dec
out
adc
or
retf
adc
ror
add
sub
das
dec
sub
test
adc
fild
bound
pusha
or
(bad)
cmp
dec
jne
arpl
push
pop
sbb
ins
or
adc
dec
test
(bad)
repnz
jle
pop
push
or
adc
and
and
xchg
ret
pop
fist
loope
mov
push
push
xchg
push
cwde
pop
push
or
ds
test
clc
or
cmp
cmp
push
out
pop
leave
je
push
adc
jns
nop
repz
xchg
adc
fwait
inc
push
jns
retf
adc
xor
dec
add
inc
jecxz
push
jecxz
rcl
add
out
sub
je
mov
adc
iret
enter
sbb
(bad)
ds
jno
or
push
pop
sbb
sub
dec
jb
test
mov
add
(bad)
adc
arpl
pop
iret
cs
jb
xchg
pusha
dec
test
push
inc
push
xor
dec
jp
inc
inc
inc
cmp
sub
xchg
movs
xor
repnz
sahf
jl
and
repz
push
sbb
cmp
cmp
mov
jecxz
js
nop
fdivr
or
or
daa
or
or
sar
jmp
push
sub
pushf
test
jb
shl
add
sbb
add
jge
mov
rcr
outs
xor
add
pop
adc
and
test
js
jo
cmc
mov
push
enter
adc
popa
mov
or
in
popf
mov
mov
rol
(bad)
pop
loop
fadd
cmp
(bad)
inc
mov
sub
mov
xchg
mov
or
xor
add
repz
or
imul
push
je
sbb
xchg
dec
xchg
popa
add
ins
sbb
adc
inc
lahf
and
push
or
dec
clc
pop
ficomp
add
xor
dec
frstor
iret
adc
pusha
cmp
and
fdiv
xor
push
(bad)
pusha
adc
retf
add
and
dec
aas
mov
sbb
and
push
mov
imul
loope
sbb
xor
mov
inc
call
movs
adc
push
imul
cmps
add
sub
add
pop
xor
or
push
push
and
lahf
addr16
pop
test
ss
pop
pop
dec
or
cmp
ins
js
and
js
and
push
or
jne
dec
jnp
pop
xor
add
ficomp
out
add
push
push
in
pop
rcr
xor
cmp
sbb
push
call
popf
or
jmp
add
push
nop
pop
dec
fdiv
rcl
xchg
jb
mov
push
xchg
inc
cld
outs
add
lock
lahf
stos
inc
int3
out
dec
rcl
add
mov
clc
cmp
or
push
and
je
jae
shl
ss
mov
cmp
jnp
add
push
addr16
(bad)
imul
mov
push
shl
add
xlat
sub
or
push
mov
mov
dec
push
retf
or
cmp
movs
xor
ret
js
xchg
jo
mov
adc
adc
jns
add
sbb
nop
out
push
enter
push
push
cmp
and
test
jb
sbb
ins
inc
and
sub
sbb
movs
test
and
test
test
pop
cmps
cmp
dec
xor
std
pop
or
imul
ja
imul
enter
pop
cmp
sbb
sbb
aas
mov
jns
dec
sub
adc
push
adc
adc
fisub
mov
mov
icebp
clc
cmc
dec
add
inc
add
jo
cmp
inc
cmc
pop
mov
mov
cmp
jg
mov
jge
ret
stos
cmp
jg
out
mov
out
(bad)
outs
sub
inc
xchg
clc
jmp
dec
hlt
add
push
add
ins
cdq
imul
inc
ins
ss
jbe
pushf
dec
dec
cmps
pop
je
mov
pop
fdiv
pushf
aad
or
xchg
jbe
pusha
adc
cmp
jb
inc
dec
and
rcl
jnp
sbb
push
cmp
or
fwait
xlat
sbb
sbb
xor
movs
aaa
lea
icebp
or
dec
sbb
sub
jne
pop
lds
mov
shl
lea
(bad)
loopne
push
cmps
movs
dec
mov
push
mov
add
nop
stos
mov
int3
xchg
cmps
fld
mov
push
xchg
ret
and
add
or
popa
dec
xor
cmp
stc
call
outs
je
or
js
xor
lea
cmc
gs
cld
movs
adc
movs
aaa
rol
fld
ret
lea
dec
and
xchg
outs
sub
push
mov
jne
inc
nop
loopne
jno
sub
push
fwait
lds
in
(bad)
ror
push
call
jl
mov
arpl
mov
push
sahf
add
push
(bad)
xor
xchg
mov
(bad)
leave
sbb
mov
fisubr
fwait
ins
mov
(bad)
mov
js
jge
sbb
cdq
sub
and
add
push
sti
xor
mov
or
mov
outs
cmps
pop
jo
add
jmp
fld
cmp
xchg
pop
and
sbb
scas
mov
add
push
mov
jle
add
push
test
or
inc
jle
int3
adc
sbb
cli
mov
stc
pop
int3
jecxz
mov
idiv
int
mov
sub
addr16
mov
rol
jmp
mov
fcomp
cmp
lea
inc
mov
and
xlat
enter
jnp
cmc
xchg
add
enter
adc
add
and
inc
and
sbb
jae
ds
sub
push
outs
push
xchg
lods
adc
and
imul
loop
int
pop
sbb
dec
pop
sbb
mov
(bad)
rol
mov
mov
xchg
mov
push
test
cmp
dec
arpl
add
push
push
enter
addr16
idiv
cmc
sub
iret
dec
and
loopne
or
sub
inc
cmp
in
xor
xor
mov
push
or
dec
ins
loopne
test
mov
add
dec
jns
daa
and
ss
inc
mov
movs
mov
add
and
ins
push
arpl
xchg
push
or
in
or
add
retf
cli
cwde
jecxz
push
mov
adc
xor
xchg
stc
and
and
push
adc
ror
enter
jmp
retf
and
ret
or
stos
sub
mov
aad
outs
pop
or
dec
lods
xchg
imul
mov
mov
jmp
nop
mov
pop
or
out
mov
sbb
sub
popf
lods
xchg
push
xor
lea
stos
sub
pop
scas
ret
lea
fmul
adc
out
mov
std
push
(bad)
jae
dec
add
xor
in
test
inc
pushf
fld
adc
inc
mov
sbb
pop
or
xor
xor
push
add
jns
outs
push
pop
add
or
or
popa
shr
call
sahf
shl
and
or
sub
push
dec
cs
pop
sar
xor
jmp
cmps
enter
mov
pop
pop
adc
imul
out
jae
and
jge
fbld
test
xchg
enter
xchg
push
xchg
mov
nop
retf
add
adc
sahf
arpl
pop
dec
add
int
push
aad
leave
or
lods
xchg
add
dec
sub
inc
sub
inc
out
sbb
cmc
and
fisttp
sbb
push
or
cli
xchg
lods
and
pop
inc
adc
js
inc
or
sar
add
push
push
cmps
mov
mov
inc
inc
pop
stos
mov
mov
inc
and
and
std
and
or
jmp
repz
inc
(bad)
icebp
jmp
ja
xchg
lds
add
inc
and
movs
or
xor
mov
sbb
add
add
in
fstp
and
xchg
xchg
aad
mov
mov
shl
fnsave
jg
aad
xor
pop
add
fld
mov
sbb
stos
adc
or
inc
je
and
pusha
aaa
xor
push
jns
popa
sbb
movs
das
imul
pop
cs
enter
je
or
frstor
lds
push
or
aaa
push
lahf
adc
push
mov
pusha
retf
push
sbb
std
add
push
sub
adc
jo
fwait
push
icebp
adc
push
pop
xchg
mov
push
mov
xor
gs
push
jo
out
xor
mov
dec
add
lea
popf
and
loop
pop
ds
adc
icebp
add
shr
mov
xor
inc
mov
add
add
push
push
rcl
mov
push
or
mov
push
cmps
jge
xor
adc
xor
mov
cmps
cmc
pop
cmp
xchg
or
jnp
cmps
ror
outs
into
popa
adc
fwait
jecxz
std
test
push
xor
inc
push
push
popa
pop
xchg
sub
dec
adc
into
jbe
imul
or
and
xor
xor
add
add
adc
add
xor
icebp
ret
test
js
xor
shr
popf
cmps
stc
ja
outs
fild
add
inc
jb
add
add
int3
fucomp
dec
aaa
call
and
lods
adc
xor
or
and
(bad)
ror
push
loopne
stos
lds
movs
imul
xchg
sbb
and
add
dec
movs
and
bound
fild
je
lods
nop
sbb
jle
jo
movs
js
mov
push
xchg
test
xor
push
retf
je
arpl
ror
xor
and
ins
dec
out
push
int3
xchg
inc
fs
adc
adc
std
pmullw
cmp
cmp
cmp
jmp
test
push
and
ins
pusha
and
xor
jge
movs
xor
jle
inc
dec
push
push
mov
cmp
lds
pushf
bound
cmp
pusha
xor
fnstcw
inc
push
ret
add
and
push
mov
lods
and
push
dec
and
mov
cmp
and
and
xchg
mov
ret
lods
test
pop
xor
in
js
mov
add
push
and
mov
sbb
mov
popf
add
xor
mov
inc
lods
adc
js
or
xor
pop
rcl
mov
scas
fimul
push
in
aad
sub
and
add
fwait
add
sub
jae
pop
jmp
jbe
mov
and
aad
push
gs
cmps
lods
push
or
or
test
inc
sbb
push
push
adc
push
test
repnz
mov
test
mov
pop
add
adc
ret
js
cmp
scas
lods
push
inc
(bad)
mov
add
inc
inc
jge
aam
bound
and
mov
jmp
mov
sub
mulps
or
lds
(bad)
jne
movs
movs
xor
adc
(bad)
call
dec
or
add
fldenv
and
adc
call
mov
sub
inc
sub
lahf
sub
dec
push
pop
fadd
xor
lods
adc
dec
mov
mov
pop
(bad)
jb
xor
dec
js
xrelease
movs
outs
and
sbb
sub
scas
mov
stc
cmp
pop
mov
cli
or
adc
(bad)
jge
jns
test
add
and
xchg
push
(bad)
stos
pop
cmp
add
jp
mov
adc
cvtps2pd
jae
push
or
mov
xor
adc
cwde
les
pop
data16
inc
loopne
imul
rcr
cmp
push
pop
retf
lea
sub
add
mov
movs
or
mov
inc
push
and
xor
inc
pop
dec
sbb
cmp
push
mov
inc
xchg
mov
or
jo
movs
jae
dec
movs
sbb
cmp
je
jmp
in
inc
das
push
adc
cmp
in
movs
fmulp
in
lds
pop
ret
push
sub
sbb
mov
mov
popa
cmp
and
lds
mov
and
imul
jae
mov
add
cdq
retf
xchg
int3
movs
sbb
xor
add
mov
inc
in
adc
lods
test
inc
push
inc
das
dec
rol
test
sar
inc
sub
push
push
sbb
sbb
sbb
xchg
leave
push
adc
sahf
sbb
jne
push
push
mov
sbb
adc
gs
pop
inc
inc
adc
xor
push
sub
xchg
pushf
dec
add
sbb
mov
in
jbe
adc
mov
mov
add
xor
xchg
jp
dec
dec
cmove
mov
pop
push
mov
inc
adc
sbb
pop
xchg
push
out
cld
push
cmp
inc
sbb
dec
fistp
addr16
mov
mov
dec
leave
dec
sbb
ins
adc
adc
and
inc
adc
fnsave
push
arpl
scas
fimul
(bad)
sbb
movs
inc
jbe
call
dec
and
add
loope
mov
sub
add
push
loopne
gs
and
loope
test
xchg
add
cmp
cmp
xchg
int3
add
rcr
and
or
sbb
adc
movs
inc
or
sub
jecxz
lods
adc
pusha
cmp
sbb
or
inc
sub
call
dec
fild
retf
das
push
test
jmp
and
test
sub
add
jnp
push
repnz
mov
inc
sub
je
fistp
mov
fnstenv
adc
add
mov
mov
mov
je
movaps
or
loopne
ret
jno
mov
aas
xchg
inc
and
outs
retf
imul
cmc
cmp
shl
into
add
shr
xor
xchg
or
inc
and
pop
jg
mov
sub
or
out
push
adc
out
push
mov
gs
repnz
sub
inc
xor
ret
lods
movs
rcl
add
sub
or
and
addr16
loopne
sbb
shl
fisttp
les
fnstcw
mov
cwde
add
inc
(bad)
bswap
adc
shld
jnp
ja
jo
mov
test
jne
xor
sbb
pop
xor
dec
retf
aaa
push
adc
xlat
rcl
pop
lods
sbb
sub
aaa
xchg
adc
pop
sbb
or
in
mov
add
add
xor
mov
push
jp
add
push
cmp
cmp
clc
jge
add
and
loope
or
addr16
inc
pop
cmp
cmp
retf
inc
and
cmp
jne
xchg
pop
mov
cmp
sub
push
loopne
dec
jecxz
dec
dec
sub
js
sbb
pop
dec
aas
imul
fldenv
sar
lahf
push
mov
push
test
imul
js
push
add
inc
ss
sub
jmp
ret
mov
loopne
dec
dec
jmp
add
and
popf
mov
xchg
and
add
sbb
push
ret
inc
add
jge
ror
ins
xor
ds
xchg
push
fsub
mov
cmps
jne
pusha
adc
push
popa
and
cmp
sub
es
loop
sbb
add
adc
push
stos
push
mov
xchg
aaa
cmps
push
jl
sub
loopne
arpl
push
pop
aad
mov
dec
xor
arpl
daa
add
ret
fiadd
push
bound
loope
xor
dec
inc
sub
inc
pushf
xor
push
mov
push
cli
adc
push
ss
dec
retf
jmp
in
addr16
mov
xchg
cld
mov
fild
inc
loopne
xlat
clc
xchg
or
jge
mov
push
mov
mov
lea
(bad)
test
xor
and
arpl
push
dec
dec
sbb
pop
(bad)
sbb
add
scas
adc
xor
mov
adc
adc
mov
adc
jl
and
inc
(bad)
and
std
push
push
arpl
ret
adc
inc
inc
js
pop
adc
push
add
hlt
dec
sub
stos
xchg
jo
mov
add
mov
add
lods
push
xchg
sahf
scas
jae
fisttp
xor
pop
cmp
sbb
sub
and
arpl
xchg
cmps
cdq
mov
lea
and
aaa
and
mov
out
add
sbb
cmc
push
xor
push
in
sub
or
fwait
les
sbb
push
in
add
pushf
jns
cwde
ins
push
push
out
add
lods
or
inc
loope
add
dec
push
ficomp
outs
mov
loope
sti
call
or
aaa
pop
enter
pop
push
je
jno
sbb
sbb
outs
shl
pusha
ins
scas
or
sub
push
test
imul
push
imul
inc
lods
push
pop
or
dec
or
nop
fdivr
enter
mov
mov
and
int3
cmp
repnz
pushf
dec
lea
es
(bad)
pop
xchg
(bad)
hlt
cwde
nop
dec
and
add
sub
ror
mov
dec
dec
mov
and
mov
cs
call
xor
ret
push
add
inc
inc
add
pop
sub
mov
xchg
jo
inc
adc
imul
dec
rcl
or
and
das
(bad)
fcomp
pop
pop
sub
xor
call
or
inc
push
push
sbb
fwait
(bad)
test
xor
fdiv
inc
push
lods
cli
cmp
xor
std
xchg
mov
push
imul
and
mov
inc
sub
mov
enter
jl
jmp
fwait
sub
call
setl
xor
and
cmps
push
xor
sbb
xchg
cld
in
outs
sub
(bad)
jecxz
mov
out
xor
or
push
push
xor
mov
adc
fst
aam
xchg
push
add
(bad)
push
mov
push
(bad)
out
test
jno
push
int
fld
daa
pop
sbb
xchg
cmp
mov
and
jb
daa
or
pop
sub
push
push
fcomp
xchg
add
xchg
movs
pop
jecxz
fdivr
sbb
xchg
outs
je
leave
dec
sub
call
in
mov
adc
and
lds
int3
sub
adc
fcmovnu
xchg
adc
pop
mov
xor
adc
inc
outs
lods
ja
ja
push
inc
imul
sbb
or
sub
cmps
and
push
and
movs
or
xor
sub
cmp
push
dec
mov
pop
js
xchg
xor
cmp
pop
pop
adc
or
adc
xor
outs
mov
push
jne
out
cwde
test
xchg
(bad)
cwde
fisttp
jae
jno
or
or
jmp
test
ror
leave
pop
call
(bad)
lock
fild
xor
popa
or
lahf
inc
sub
rcl
pop
in
js
sbb
mov
dec
push
cmp
sub
(bad)
mov
xchg
jae
jle
lea
lea
inc
pop
mov
out
and
rcr
fist
push
push
mov
mov
lods
sub
out
es
bound
ins
loopne
and
pop
adc
mov
and
jns
(bad)
sub
inc
mov
inc
add
aad
jle
mov
add
add
shl
add
aad
and
add
mov
push
add
add
rcr
sbb
cdq
add
jnp
sbb
pop
loop
mov
test
iret
shr
add
fcomp
or
push
(bad)
xchg
pop
dec
mov
and
xor
loope
nop
add
push
sbb
and
sbb
pop
jecxz
pop
mov
aam
inc
push
into
xchg
sub
inc
jnp
cmc
mov
jl
je
mov
xor
mov
add
mov
xchg
les
mov
shl
push
hlt
lods
ins
and
movs
fs
adc
xlat
xor
data16
(bad)
les
pop
(bad)
aam
inc
and
add
mov
jecxz
push
lock
adc
push
xchg
sub
mov
in
ror
push
inc
and
pop
mov
sbb
jecxz
mov
mov
nop
add
jl
and
mov
popf
jl
jb
icebp
mov
jb
je
dec
adc
jb
adc
loop
inc
pushf
call
sar
mov
jp
and
xchg
arpl
je
xchg
inc
add
mov
(bad)
icebp
or
mov
push
dec
sub
inc
cmp
or
xor
lea
stos
mov
add
add
data16
je
push
(bad)
rcl
push
push
and
test
mov
stos
xor
or
mov
sti
je
jge
bound
jmp
mov
mov
inc
sub
sbb
or
push
cmovno
jg
je
jle
pop
ins
adc
les
push
cmp
xor
inc
xor
daa
xchg
fsub
lahf
sub
icebp
cmps
cld
cmp
or
mov
xchg
fs
js
or
pop
in
pop
push
push
pop
sbb
addr16
xor
pusha
sub
sub
lea
jo
jmp
cmps
add
aaa
cmp
sbb
mov
push
in
lea
or
inc
pop
ja
mov
shl
cs
test
push
jp
sbb
jg
retf
test
rdtsc
or
sbb
pop
dec
dec
pop
shl
jne
mov
ret
mov
adc
inc
push
and
inc
adc
or
mov
int3
add
aas
jge
loop
cmc
nop
push
fadd
or
sub
mov
imul
adc
and
pop
cmp
adc
mov
pop
and
mov
push
cmp
or
push
clc
call
pop
mov
inc
mov
pusha
rcr
push
mov
ds
retf
int3
nop
add
mov
inc
adc
sti
retf
lods
lods
push
mov
mov
fild
ins
jo
fbstp
push
js
jl
mov
repnz
xchg
cwde
retf
in
mov
xchg
je
rcr
push
mov
pop
adc
sub
mov
fadd
xchg
mov
sbb
repz
add
or
shl
jmp
shl
jbe
lea
cmp
mov
(bad)
dec
mov
nop
or
cmp
jle
jmp
fisubr
nop
push
or
and
nop
and
cmp
jl
sbb
cmp
xchg
cmp
add
push
std
and
pushf
enter
pop
ja
mov
pop
xor
add
push
add
add
mov
dec
xlat
dec
icebp
pusha
mov
xchg
xchg
push
pusha
xchg
sahf
mul
ja
and
mov
sbb
stos
in
jns
or
inc
xor
add
mov
push
pop
cmp
es
retf
cmp
sbb
ret
dec
inc
cs
cmp
inc
and
das
ins
add
push
jo
or
dec
pop
sbb
lds
aad
retf
rol
cld
sti
mov
pop
cmp
pop
scas
mov
pushf
xor
test
cmp
xchg
int
fdiv
dec
fmul
shl
std
scas
dec
cmp
sbb
mov
das
js
cs
mov
mov
(bad)
mov
ficom
jl
pop
test
sub
cld
xchg
pop
rcl
neg
and
pop
mov
adc
imul
push
jo
inc
jne
ss
mov
int
cmp
jmp
pop
cmp
arpl
mov
mov
dec
pop
xchg
mov
cmps
imul
pop
add
sub
mov
rcl
test
inc
jmp
or
pop
sub
pop
pop
push
push
push
push
xor
push
sar
or
pop
add
xor
and
icebp
je
stc
add
(bad)
nop
or
psubq
jmp
and
fimul
mov
pop
mov
sub
push
inc
cmp
call
and
lea
push
or
and
repz
push
mov
leave
stos
jl
dec
xchg
test
xchg
(bad)
and
pop
sub
inc
push
sub
aam
jbe
not
ins
sub
lods
cli
adc
cmp
mov
jmp
cmp
cmp
out
add
loop
push
add
dec
dec
dec
mov
add
mov
lods
push
movs
pop
jnp
hlt
and
sbb
(bad)
lods
xor
adc
lds
fwait
mov
mov
ret
and
xchg
test
inc
aad
push
popf
push
in
xor
add
sbb
inc
outs
push
pop
or
test
mov
push
pop
jne
xchg
ss
sbb
pop
mov
mov
cmps
in
add
mov
ins
push
nop
inc
cmp
lahf
pusha
in
mov
jne
dec
mov
sub
dec
inc
push
mov
add
cdq
fild
loopne
pop
sub
mov
pop
adc
pop
cmp
or
jg
dec
std
push
adc
daa
add
mov
imul
rcr
mov
call
ss
stos
add
std
ret
xor
cli
push
inc
aaa
sub
cmp
adc
push
je
fld
sbb
sar
jl
mov
xor
(bad)
jne
mov
pop
sub
pop
repnz
ds
jp
push
sub
and
arpl
(bad)
int3
or
fisub
jg
dec
push
xchg
unpckhps
jmp
enter
add
stc
add
mov
in
fiadd
sbb
dec
push
jo
jbe
push
adc
sbb
ins
arpl
add
and
xchg
pop
nop
xchg
mov
cmps
adc
pop
sub
inc
mov
ret
mov
mov
enter
inc
add
xor
sbb
push
cmp
mov
inc
test
shl
sub
inc
xlat
and
push
jae
cmp
mov
data16
jo
push
dec
push
xchg
clc
inc
cmp
mov
cwde
imul
retf
sbb
jl
stos
add
fwait
stc
or
movs
push
in
sub
es
inc
sbb
popa
jecxz
arpl
mov
sub
push
adc
push
ins
cmps
bound
adc
or
jo
cmp
fst
ins
shl
dec
sub
shr
aaa
or
mov
cmp
push
dec
sbb
push
call
aaa
mov
lock
inc
mov
push
xor
add
add
inc
push
cli
sub
mov
les
push
fiadd
or
jecxz
add
nop
mov
push
fwait
push
push
add
cmp
pop
and
and
dec
mov
inc
stos
push
mov
xchg
inc
push
cmp
sub
(bad)
adc
push
(bad)
pop
les
xor
sbb
jmp
dec
imul
and
adc
ins
out
movs
sbb
mov
ror
and
pop
sti
mov
and
adc
inc
pop
sub
xchg
push
adc
push
ror
sub
leave
mov
and
pop
test
add
or
and
inc
add
pop
xchg
pushf
movs
sub
mov
cli
or
push
push
les
push
adc
add
pop
cmp
hlt
xchg
pop
das
jnp
stc
sbb
add
mov
pop
and
(bad)
outs
and
jns
mov
mov
outs
ins
adc
push
and
cwde
pop
cmp
lock
mov
push
add
addr16
imul
je
jmp
cmp
inc
enter
sbb
enter
push
loope
adc
ror
and
leave
sub
lds
rol
xor
dec
shr
inc
retf
jmp
inc
inc
mov
enter
inc
cmp
pop
idiv
add
or
mov
mov
add
in
and
xor
sbb
test
push
cmp
inc
or
adc
js
add
sbb
sahf
adc
xor
inc
pop
xor
push
push
push
pop
sahf
dec
mov
push
data16
push
and
aam
sbb
mov
add
in
adc
sub
imul
push
les
pusha
and
xor
int3
inc
cmp
mov
test
add
cwde
test
cdq
or
adc
pop
sub
and
xchg
sub
adc
mov
xchg
test
sbb
mov
xchg
add
sbb
inc
loope
sbb
and
pop
add
add
adc
cmp
cwde
add
fdivr
sbb
lea
add
add
jle
mov
push
js
mov
nop
add
aaa
and
inc
rol
rcr
push
and
inc
add
les
shl
cmp
neg
push
cmp
js
sbb
and
add
or
gs
dec
xchg
push
and
push
and
push
push
addr16
mov
add
stos
aam
sbb
aas
sbb
lods
or
push
xor
sub
or
xor
inc
lea
in
test
adc
xor
inc
and
add
call
fcom
push
xchg
enter
fwait
popa
pop
and
fild
mov
push
dec
js
or
les
sar
adc
ret
inc
lods
push
mov
push
sbb
cdq
test
cs
in
add
movs
pop
adc
out
inc
pop
inc
dec
pushf
xor
push
gs
cmp
imul
jl
inc
sub
mov
add
mov
fmul
fwait
inc
call
(bad)
add
shr
mov
xor
(bad)
in
push
and
in
fmul
loop
lods
pop
pop
xlat
add
imul
movs
inc
mov
call
sbb
int3
ror
das
xchg
jno
leave
sub
sbb
or
cmp
sub
jg
rcl
mov
adc
mov
idiv
mov
inc
mov
out
add
lods
pushf
add
daa
jp
dec
leave
daa
and
int3
inc
adc
dec
pop
lods
jmp
sbb
xchg
jmp
xlat
xor
or
inc
cmp
xor
push
(bad)
dec
pop
push
mov
pop
rcr
cmp
pop
add
adc
movs
loope
jne
cli
pop
test
cs
adc
xor
mov
xor
cmp
add
or
xor
cmp
pusha
dec
and
xor
xchg
mov
add
ret
test
mov
cdq
test
sbb
xor
sar
push
(bad)
mov
je
adc
jne
push
call
jne
cmp
out
or
retf
xor
out
std
mov
repz
out
out
and
mov
jo
mov
add
sbb
xchg
jbe
outs
aas
jae
push
jl
les
pop
mov
(bad)
aam
mov
inc
mov
test
sub
js
xor
sub
enter
add
jl
inc
loopne
jnp
push
cdq
xor
clc
inc
aaa
fldpi
xor
movlps
pop
cdq
add
inc
fld
sub
add
test
pusha
and
jno
push
cmp
pusha
jge
xchg
pop
adc
and
dec
jnp
jmp
shl
fisttp
sti
push
adc
jg
push
push
push
stc
push
lock
mov
jl
out
add
add
mov
cmp
push
push
xchg
nop
jo
je
push
inc
nop
push
add
adc
pop
sbb
add
mov
bts
mov
test
dec
out
pop
pop
push
gs
sahf
or
and
mov
lahf
push
les
stos
push
add
pop
retf
fmul
push
sar
into
mov
outs
icebp
into
sbb
es
add
popf
lods
sub
sub
dec
retf
push
add
push
loope
xor
jo
and
cwde
ins
and
xor
jae
retf
int
add
lds
mov
sbb
add
push
xchg
sahf
(bad)
out
dec
aad
inc
es
xchg
test
push
cmp
les
add
je
les
sub
dec
or
cmp
add
sub
adc
dec
fld
js
xchg
inc
pushf
jbe
sysret
push
and
rcl
popf
push
pushf
daa
mov
cmp
inc
add
cli
pop
mov
or
xor
rcl
clc
scas
nop
add
pop
sahf
inc
cmps
inc
xchg
adc
fldenv
xor
push
sar
ins
ins
loope
adc
rcr
jnp
mov
sar
in
add
dec
pop
imul
xchg
sub
rol
add
pop
les
dec
xchg
add
jne
fdivr
mov
push
fisttp
or
call
and
add
test
mov
add
dec
cmp
and
ret
xor
add
mov
cmp
push
mov
test
sbb
xor
and
cmp
jle
add
std
xchg
sub
inc
inc
enter
lahf
inc
adc
add
push
neg
scas
cmp
sub
push
inc
xor
scas
dec
fsub
inc
in
fsub
shr
push
test
push
push
fwait
dec
jmp
pop
sbb
inc
adc
fidiv
mov
mov
xor
dec
les
or
adc
xchg
jb
loop
mov
push
shl
pop
dec
mov
sub
fadd
xchg
mov
stc
jmp
ja
xor
mov
aas
adc
inc
mov
add
add
fcmovne
cmp
dec
and
cs
mov
out
dec
and
cmc
dec
rcl
adc
dec
xor
sub
xor
retf
movs
adc
fwait
jmp
push
cmp
aas
and
mov
ins
test
sbb
or
setge
adc
or
add
in
xorps
mov
daa
test
dec
push
inc
test
mov
inc
adc
cld
or
inc
fs
mov
lea
add
push
sbb
push
xor
dec
pusha
jl
or
mov
mov
sub
and
cmp
cmp
adc
fiadd
fidivr
ins
pop
retf
pusha
pop
or
shl
push
loop
cmc
dec
cmp
jmp
ja
inc
mov
add
mov
movs
out
inc
sub
push
or
shl
and
sbb
inc
dec
xor
sahf
mov
cmc
dec
jns
push
fnstsw
aas
jp
ds
and
mov
xchg
adc
dec
cmps
fs
inc
dec
loopne
mov
out
rcr
inc
mov
test
sub
mov
leave
xchg
push
cmc
adc
add
cmp
ror
adc
jl
retf
pusha
(bad)
lock
cmp
pop
enter
pop
cdq
inc
sahf
cmp
nop
and
mov
test
fs
scas
movs
jo
sbb
adc
movs
add
cld
add
add
xor
call
push
sbb
xor
fdiv
push
iret
adc
mov
inc
jb
mov
push
leave
mov
shl
sbb
xchg
dec
and
leave
push
pop
push
push
xor
and
add
push
xor
add
addr16
jnp
ss
sbb
and
imul
call
jns
add
loope
push
mov
dec
(bad)
das
nop
fbstp
lods
call
sub
movs
leave
mov
add
jb
dec
rcr
leave
xchg
dec
leave
or
dec
add
or
and
xchg
add
xor
and
inc
pop
xchg
xchg
out
xor
mov
mov
sbb
and
push
inc
mov
imul
fsub
add
cmp
cli
mov
test
not
scas
inc
sub
popf
rcl
fnstsw
adc
je
inc
cmps
or
nop
mov
mov
pop
adc
or
test
stc
push
repnz
xor
not
add
mov
cmp
enter
mov
aam
call
and
push
push
cwde
add
sahf
adc
mov
jge
mov
movsx
sub
sbb
dec
xchg
jns
push
push
and
cmp
add
in
push
xor
pusha
push
(bad)
movs
push
mov
loopne
es
retf
xchg
and
jg
movs
jmp
cli
and
lods
mov
rol
add
sub
enter
dec
hlt
adc
mov
jle
fiadd
add
shr
mov
in
movs
in
xor
or
test
rep
push
add
test
loopne
(bad)
in
jl
xor
add
scas
inc
mov
push
mov
retf
inc
pop
leave
shr
sbb
call
bound
add
push
push
push
mov
loopne
sbb
xchg
cwde
shr
dec
inc
sbb
fiadd
cmp
cmp
lock
add
push
pop
pop
and
inc
inc
push
push
mov
pop
and
or
nop
and
cmp
popa
leave
movs
jns
push
push
mov
mov
push
ins
mov
and
dec
and
jecxz
mov
pop
fimul
ret
je
fstp
dec
push
adc
mov
add
xchg
or
arpl
rcl
sbb
push
sbb
ret
fs
mov
sbb
enter
mov
or
pop
dec
adc
inc
aaa
movs
popf
mov
push
and
mov
shr
mov
lods
add
or
int
sahf
mov
adc
call
or
inc
add
dec
call
sub
gs
out
lahf
frndint
xor
push
stc
cmp
repz
mov
jns
cmps
sub
xchg
mov
sar
cli
sbb
dec
mov
cmp
jo
pop
or
sub
inc
push
call
ds
repz
jns
lahf
or
lahf
out
and
inc
imul
xchg
push
sbb
lahf
out
in
add
cmps
or
jl
setno
adc
jns
cdq
enter
cmp
adc
add
inc
cli
repz
sti
push
shr
repz
inc
mov
inc
adc
xor
dec
xchg
xor
and
add
sub
call
and
es
add
lds
test
add
sar
add
(bad)
retf
test
imul
jo
(bad)
popf
pushf
cmp
pop
push
xor
outs
je
mov
xor
shl
jne
mov
sub
or
and
inc
cvtpi2ps
adc
rcr
repnz
and
test
and
and
ror
mov
out
leave
adc
and
inc
call
push
push
retf
adc
inc
cmc
xor
pop
out
xchg
pop
pop
or
xor
cmc
mov
inc
adc
ds
pop
ins
movs
aad
ss
and
add
xchg
inc
adc
pop
mov
sbb
jl
icebp
repnz
xchg
push
rcl
adc
or
data16
inc
push
pop
adc
dec
xor
fisub
fisttp
dec
retf
or
(bad)
popa
or
or
or
mov
dec
js
and
push
push
xchg
inc
cmps
adc
dec
lock
inc
stc
pop
adc
sbb
lock
or
pop
test
inc
lea
stc
pop
add
cmps
(bad)
add
fdivr
push
or
push
daa
mov
popa
and
sbb
movs
jae
shl
pop
push
hlt
pop
test
mov
pushf
and
dec
pop
rcl
xor
inc
or
aas
loop
jl
ins
mov
popw
sub
jge
or
cmp
inc
jmp
ja
inc
inc
xchg
mov
dec
loopne
xor
les
mov
inc
push
fst
je
in
xchg
push
aaa
popa
sub
add
rol
sub
ds
stos
add
mov
xlat
scas
sbb
inc
jmp
fstp
dec
jmp
or
ret
test
pop
lea
xchg
shl
add
xchg
test
xor
xor
adc
nop
jno
fbld
sub
inc
rol
dec
dec
cmp
adc
adc
inc
adc
mov
enter
es
imul
add
sbb
mov
(bad)
sbb
inc
mov
call
xchg
jbe
push
add
jb
test
out
jp
mov
jmp
jmp
push
retf
pusha
sub
sbb
imul
fcmovbe
inc
gs
aad
jne
popf
push
mov
and
(bad)
or
dec
cmps
rol
xchg
xchg
movs
imul
jb
or
cmp
sub
and
mov
xlat
cs
sbb
outs
cdq
push
ins
inc
lea
inc
or
leave
adc
mov
dec
xchg
bound
xor
or
sub
or
xor
sbb
add
add
aas
fnstcw
popf
outs
mov
add
mov
adc
inc
jmp
sbb
test
mov
jbe
inc
clc
cmp
mov
push
nop
inc
pop
mov
cmp
adc
cmp
xor
add
mov
loopne
leave
int3
lea
out
dec
ret
jbe
mov
xchg
sti
sub
or
popa
adc
pop
mov
test
test
push
pop
outs
cmp
sub
sub
(bad)
adc
dec
test
aas
fcom
ja
(bad)
push
popf
adc
add
rol
cmp
mov
loop
xchg
ror
jmp
xchg
mov
imul
mov
cdq
pusha
ret
ss
lock
nop
mov
pop
jl
test
sub
and
jg
jmp
adc
or
add
aam
ds
jb
inc
and
mov
jo
jne
dec
fcomi
loope
dec
not
push
and
inc
or
and
adc
in
pop
dec
or
or
rol
xchg
(bad)
(bad)
sbb
outs
ins
ror
cli
xchg
leave
scas
pop
mov
ins
cmps
cmp
add
lods
lock
in
adc
or
movs
dec
jl
ret
loope
leave
adc
xchg
push
inc
sub
loopne
add
dec
add
cmp
jo
cmp
mov
xchg
sub
lods
pop
call
and
push
adc
sbb
xchg
push
outs
dec
jmp
test
pop
or
cmps
cwde
sbb
add
cwde
jo
inc
sbb
inc
sbb
jmp
mov
adc
sbb
dec
aas
adc
add
rol
cmp
sbb
and
push
mov
sbb
ja
add
cmp
pop
in
ja
mov
jbe
pop
test
pop
inc
or
cmp
jmp
fimul
cmp
call
or
push
pop
rcl
xchg
mov
dec
xor
jns
push
sub
push
cmps
test
jmp
sub
cmp
sub
xchg
inc
add
dec
loop
pop
aam
sub
add
mov
data16
xchg
mov
fdiv
dec
repz
push
(bad)
dec
dec
adc
mov
in
je
mov
add
adc
mov
test
add
repnz
and
mov
pop
lea
rcr
push
xchg
mov
shl
es
in
pop
mov
cmp
cmp
dec
add
fst
xchg
push
push
push
sahf
xor
push
out
clc
out
lock
mov
pop
sub
and
aam
aas
dec
xor
jns
or
loope
pop
xor
xor
add
cmps
mov
push
mov
nop
fcom
ror
fisubr
inc
sub
xor
cmp
imul
push
rcl
shl
(bad)
out
xchg
cmps
cmp
ja
mov
outs
xor
push
mov
or
push
sbb
mov
cmc
mov
sub
fld
xor
xlat
mov
mov
sub
inc
push
dec
dec
ins
inc
sbb
sbb
es
adc
aas
or
pop
popa
or
je
add
push
jns
cmp
shl
xor
pop
das
jnp
arpl
inc
in
pop
cs
xor
or
fild
stos
mov
rcr
out
inc
xchg
in
push
dec
sub
int
leave
mov
or
shl
mov
mov
ja
in
push
and
sbb
in
add
test
repz
sbb
dec
retf
xchg
push
nop
and
daa
lods
pop
cld
jge
mov
inc
das
pop
pusha
mov
retf
div
mov
dec
cmp
add
mov
push
xchg
pop
adc
test
sub
or
in
or
data16
sub
sbb
(bad)
cmp
or
dec
push
int3
gs
ins
and
add
inc
push
dec
cs
adc
sbb
sbb
imul
shr
inc
test
adc
xchg
lahf
inc
push
dec
adc
loopne
or
mov
xchg
cwde
jne
loopne
add
ins
lea
aaa
cwde
xor
jmp
lods
cmp
test
push
mov
add
push
push
xchg
xchg
mov
in
sub
add
sub
repz
rol
cmp
cmp
(bad)
into
repnz
sbb
push
ins
sbb
mov
pop
call
test
imul
sub
push
push
aam
pop
sbb
push
fnstsw
jbe
(bad)
popa
push
or
es
fstp
inc
adc
sub
sub
imul
add
outs
dec
xchg
add
loopne
inc
inc
pop
mov
lock
sbb
sub
loope
mov
mov
pop
mov
in
mov
xchg
add
jg
mov
out
mov
fiadd
xor
push
and
mov
sub
cmp
dec
clc
dec
out
or
adc
repz
cmp
mov
push
data16
lods
fwait
adc
jo
or
nop
add
fcmovnb
sub
test
jbe
and
mov
or
bound
pop
lock
test
jae
retf
pop
push
call
push
scas
cmps
enter
xchg
arpl
pop
jb
into
inc
pop
int3
adc
cmp
sub
sub
mul
jmp
sbb
add
inc
inc
mov
or
mov
or
popa
jmp
adc
mov
clc
icebp
sahf
test
inc
sub
loopne
pop
icebp
push
add
fs
dec
mov
rcl
movs
fsubr
adc
or
dec
sub
bound
adc
add
jbe
(bad)
sub
sub
js
xor
push
xor
aam
jbe
sub
int
inc
outs
cmp
mov
xchg
pusha
cmps
ins
and
inc
add
jns
and
ret
xchg
lock
adc
add
jnp
adc
aas
adc
test
ret
pop
push
adc
jbe
push
or
ja
sub
dec
sar
das
mov
jbe
add
and
sbb
lock
adc
push
sub
mov
inc
push
adc
inc
ja
retf
mov
adc
jno
cmp
add
popa
pop
add
rol
or
inc
mov
mov
mov
sbb
leave
jo
xchg
jmp
jecxz
push
fild
push
mov
fiadd
pop
adc
and
xchg
push
push
mov
cmps
push
and
push
push
sub
es
rcr
in
pop
inc
or
pusha
push
jp
inc
cmp
cli
add
fmul
or
leave
imul
js
xor
das
lods
daa
rol
in
pop
push
out
sub
cmp
mov
inc
pusha
push
pop
xchg
rol
and
daa
ror
cmp
or
stos
fs
ins
fldenv
dec
xchg
adc
xor
adc
add
stc
add
fnstcw
push
sub
pop
push
mov
fst
add
cmps
cmp
ret
mov
mov
jbe
lea
jp
inc
jg
(bad)
mov
sbb
add
sbb
push
jle
popa
and
sub
sar
push
xor
xchg
or
inc
(bad)
xchg
mov
std
sbb
rcr
(bad)
ror
pop
shl
or
sti
loopne
mov
push
jecxz
jo
sub
int
push
jmp
inc
dec
in
lea
imul
add
sbb
pop
hlt
inc
aas
mov
or
push
ja
aaa
jno
add
sub
jecxz
mov
mov
inc
stos
adc
push
dec
push
ss
rcl
or
ja
sub
in
cmp
sbb
jae
mov
out
xor
inc
call
inc
in
ret
xchg
aam
xor
js
nop
cmp
jb
jno
inc
dec
sub
pop
push
icebp
test
inc
sub
js
test
push
(bad)
out
loope
and
jmp
ss
or
ja
add
pop
cmp
cmc
movs
mov
sub
cmc
aaa
jle
js
or
push
push
xor
mov
sub
add
xchg
jne
aad
aas
rol
test
cmp
push
inc
mov
pop
sbb
outs
dec
cmps
add
sbb
cwde
cmp
mov
scas
cmp
adc
add
arpl
pop
and
bound
shl
sbb
push
cmp
adc
mov
xchg
mov
sbb
sbb
enter
mov
adc
adc
add
or
xor
dec
sti
nop
pop
arpl
and
outs
cmp
test
sbb
in
sbb
pop
push
add
add
or
ret
fnstenv
cmp
sbb
mov
and
lods
xchg
add
imul
cmps
jmp
add
xor
in
dec
shr
mov
adc
sub
sbb
pusha
xchg
shr
lea
mov
mov
push
cwde
test
cmps
clc
and
inc
cmps
push
add
(bad)
dec
loope
push
add
adc
xor
out
jbe
jbe
dec
dec
or
jno
mov
push
jo
fst
inc
cmp
je
test
mov
add
lahf
mov
add
pop
pop
sbb
fnstenv
or
xchg
pusha
lods
sub
nop
shr
rol
inc
cmp
add
and
cmp
sbb
fwait
xor
add
mov
jl
mov
add
push
jl
aaa
cmp
sub
dec
sti
adc
or
rcr
cmp
and
xor
xor
sbb
xor
cmp
xchg
ds
sbb
sbb
xchg
xor
js
inc
push
cmps
or
xchg
push
jne
sub
aas
outs
test
mov
ror
imul
cs
in
out
nop
out
jo
push
push
push
push
dec
or
ror
(bad)
cmp
bswap
inc
jnp
push
push
imul
xor
mov
es
dec
dec
lds
mov
pop
pop
add
adc
push
scas
cmp
out
cmp
lock
xor
dec
js
cld
push
shl
pop
pushf
and
ins
mov
cs
repz
or
js
dec
xor
and
call
pusha
push
mov
push
in
ret
inc
cmps
mov
adc
adc
cmp
test
inc
or
pop
push
ins
imul
xchg
or
inc
adc
cwde
retf
mov
retf
rcl
cdq
test
jmp
mov
sbb
dec
jae
lea
jns
ds
inc
mov
cs
cmp
dec
add
fild
sub
push
inc
and
pop
ins
and
rcl
cmp
js
xchg
and
jmp
or
(bad)
arpl
es
xor
stos
sub
mov
add
xor
adc
sub
inc
and
(bad)
daa
mov
xor
ss
mov
pop
inc
pop
inc
int3
ja
push
add
jp
push
adc
bound
sub
xor
bound
push
mov
pop
add
xor
push
(bad)
out
cmps
popf
paddusb
and
mov
inc
test
shl
mov
sub
dec
jmp
sbb
pop
dec
sbb
jl
pop
inc
ret
jne
inc
(bad)
push
xchg
jbe
je
adc
iret
imul
fsub
fist
and
iret
repz
imul
imul
dec
adc
imul
test
push
inc
or
rcr
jnp
sbb
push
pop
popa
xor
xor
inc
loope
loope
pushf
mov
push
cmp
pop
cmp
add
or
inc
jbe
cdq
push
arpl
or
ds
stos
ja
nop
cmp
pop
movs
jne
int
and
es
jb
jbe
pop
fadd
ins
sbb
pop
jbe
pushf
aaa
push
ret
push
xor
mov
push
adc
push
inc
mov
in
mov
je
jae
lea
dec
sbb
das
push
xchg
ror
inc
push
adc
cmp
sub
pop
cmps
sbb
stc
sub
push
data16
cmp
sbb
popf
test
push
add
movs
idiv
sub
je
sub
je
adc
adc
push
int
or
inc
retf
dec
push
jae
fwait
inc
cmp
je
sub
add
sbb
add
cmc
inc
mov
jmp
add
add
rcr
xchg
fs
sbb
pop
lods
das
dec
mov
gs
shl
mov
inc
pop
repnz
call
push
mov
push
sahf
or
loope
cmp
add
xor
test
mov
ds
dec
jb
dec
jo
dec
fild
repz
mov
(bad)
mov
sub
aaa
sub
lock
push
inc
inc
daa
pusha
xor
stos
ret
xchg
fwait
pusha
hlt
rcl
mov
(bad)
mov
sub
rol
cdq
add
in
fstp
in
pop
test
xor
mov
cmp
jbe
in
mov
or
inc
pop
push
push
inc
jmp
mov
enter
jmp
push
test
ror
(bad)
jne
sar
pop
mov
sbb
push
sub
adc
dec
push
push
add
sub
dec
sbb
jp
xchg
sub
lahf
jmp
jmp
pop
push
and
add
mov
xchg
pop
xchg
(bad)
xchg
icebp
pop
in
mov
mov
mov
and
lea
pop
push
push
add
lds
and
push
and
sub
mov
outs
iret
add
ret
je
in
fld
std
and
inc
imul
inc
call
pusha
push
add
sbb
push
in
add
inc
dec
pop
jnp
pushf
adc
aas
push
inc
inc
push
inc
and
aam
and
and
push
adc
and
xor
push
xor
jne
test
ret
xchg
jns
fs
add
inc
mov
push
and
outs
and
cmp
mov
cs
inc
and
mov
sbb
and
add
push
outs
bound
xor
sub
push
repz
div
adc
sbb
cmc
(bad)
call
adc
push
jnp
int
aaa
(bad)
pop
lds
add
sbb
and
push
inc
or
imul
push
sub
movs
lock
shl
inc
adc
cmps
loopne
iret
sbb
ror
leave
dec
dec
push
mov
je
es
mov
mov
mov
fwait
je
and
and
mov
jl
pusha
ins
add
inc
cmp
jno
inc
cmp
add
lock
nop
gs
ins
sub
pusha
xor
ret
and
sbb
mov
and
lea
call
dec
adc
ins
add
or
inc
and
inc
popa
fdivr
cmp
xchg
cmp
ins
xchg
jb
lods
push
inc
mov
jmp
movs
adc
mov
les
mov
or
xchg
mov
(bad)
data16
je
loope
and
and
pop
cdq
lods
ror
rcr
push
loopne
push
adc
ss
adc
bound
add
xor
push
adc
iret
and
mov
cwde
sbb
cli
add
add
cwde
and
push
xchg
dec
fucomip
test
test
pop
add
push
ss
pusha
adc
out
or
inc
adc
jae
xor
test
sbb
and
sbb
push
add
cwde
rcl
add
bound
and
push
sub
(bad)
mov
shr
inc
xchg
pusha
loope
add
jecxz
call
xor
push
idiv
out
lds
pop
add
adc
push
or
dec
shl
popa
xor
push
dec
adc
push
mov
dec
adc
lods
sbb
int
popa
inc
shl
(bad)
and
rol
add
push
les
rcl
cdq
xor
das
sub
dec
xchg
cmp
or
in
add
add
cmp
add
in
xor
cmp
(bad)
xchg
inc
mov
push
jnp
cmc
je
bound
addr16
sub
xor
adc
loopne
cmp
sub
dec
xor
and
dec
mov
mov
and
and
mov
aam
jge
pusha
movs
fadd
mov
or
pop
loope
and
into
sbb
or
or
pop
sbb
sub
dec
dec
and
ror
push
pop
add
dec
sub
movs
add
femms
pop
dec
je
ror
fcomp
and
jns
sbb
push
add
adc
add
inc
sbb
xchg
mov
adc
cs
inc
dec
bswap
(bad)
mov
pop
jb
lahf
sar
pop
mov
pop
pop
inc
cwde
lahf
cmp
jb
mov
jnp
fnstsw
inc
push
in
fld
add
setl
cmp
call
call
sti
push
inc
inc
adc
fs
mov
sub
add
add
xor
mul
test
cdq
push
jle
mov
lea
sbb
jle
dec
mov
or
push
rol
mov
or
ss
adc
popa
mov
mov
(bad)
jecxz
stos
dec
inc
jle
mov
(bad)
into
push
test
cmp
cmp
(bad)
dec
and
in
sub
imul
movd
clc
sub
dec
sbb
mov
or
enter
test
inc
test
adc
push
adc
xor
sbb
je
mov
or
pop
add
add
sub
inc
cmp
mov
inc
mov
ins
in
push
cmp
cmps
(bad)
fbstp
test
add
iret
and
mov
cmp
push
mov
dec
mov
stc
jb
xor
push
and
add
sub
xor
or
xchg
adc
(bad)
cmp
lods
icebp
add
xchg
inc
test
stos
dec
shl
clc
mov
xchg
jbe
mov
add
out
dec
mov
and
adc
pop
aaa
imul
popa
cld
add
cmp
mov
cmp
adc
call
test
jo
adc
mov
push
sti
mov
adc
add
mov
jo
adc
add
xchg
ins
mov
push
mov
adc
dec
adc
lods
scas
rol
pop
and
sbb
aas
jbe
fcmovnu
xor
dec
push
(bad)
add
add
sbb
sbb
outs
ja
imul
inc
push
and
movs
fs
push
xchg
push
mov
pushf
xchg
rcl
jg
pop
cmp
sbb
jno
ret
mov
adc
(bad)
andps
sbb
dec
sub
and
adc
add
cmp
push
pop
dec
inc
sbb
movs
in
movs
or
jmp
inc
shl
push
jl
and
(bad)
loop
inc
and
ja
cmp
fs
lea
loope
cmp
or
daa
hlt
dec
adc
inc
in
sahf
pop
dec
add
cmp
add
push
sbb
sub
(bad)
in
push
sbb
jnp
pop
lock
in
ja
(bad)
mov
sub
pop
imul
add
rol
pop
push
dec
adc
sbb
pinsrw
and
dec
or
jmp
dec
pop
inc
inc
arpl
or
sbb
and
push
pop
and
adc
pop
mov
mov
rcl
or
inc
sahf
clc
mov
inc
lock
push
sbb
inc
xchg
shl
xchg
shl
sub
xchg
fisubr
test
pop
push
test
add
outs
loope
inc
dec
lds
out
xchg
lock
xchg
xor
js
add
sbb
xor
xor
inc
push
jle
xor
aas
arpl
(bad)
pop
into
add
or
adc
sahf
or
adc
or
push
adc
xor
inc
fwait
adc
and
mov
add
test
mov
aam
sbb
push
inc
adc
gs
jecxz
xchg
adc
pushf
xor
xchg
mov
(bad)
inc
or
push
movs
scas
aad
add
popf
outs
ret
shr
pop
add
mov
jbe
adc
pop
sbb
cmp
das
adc
mov
sbb
inc
adc
loopne
ret
cmp
dec
jno
push
cmp
or
es
loopne
bound
pop
test
mov
neg
mov
rcr
mov
adc
push
push
rol
xchg
(bad)
(bad)
xor
out
retw
ins
mov
xor
xor
dec
jbe
or
add
retf
dec
call
mov
and
and
push
ret
add
(bad)
ss
xchg
(bad)
hlt
sub
sbb
jno
add
push
pop
fldenv
add
push
add
xor
jecxz
add
cwde
adc
xchg
inc
or
arpl
jo
inc
sub
adc
push
jle
push
das
push
push
dec
push
or
ins
or
mov
xor
push
outs
repnz
sub
or
and
or
pop
add
movs
inc
ror
and
stos
or
cmp
inc
add
sar
mov
push
sub
ss
adc
imul
add
test
in
test
cli
sub
add
outs
xor
push
xchg
and
xchg
xor
cmps
fnstcw
shr
mov
adc
inc
lods
cs
and
xchg
jne
push
cdq
pop
push
outs
sub
pop
push
pop
dec
outs
ret
sub
add
inc
mov
inc
pop
fcom
mov
nop
dec
or
jge
movs
adc
stos
push
push
lods
sub
pop
and
push
ror
pop
cdq
xchg
pop
lock
mov
push
mov
add
and
enter
adc
or
inc
xchg
movs
jo
adc
sbb
mov
mov
cdq
ret
loope
dec
ret
loope
push
xor
mov
dec
mov
sub
push
jg
inc
dec
mov
mov
xor
lea
push
std
cmp
imul
jbe
repnz
add
or
ins
movs
ins
daa
add
sbb
dec
pushf
add
xor
xor
mov
xchg
fiadd
push
dec
mov
mov
push
ret
add
sub
push
ja
xchg
push
pop
aam
jge
push
retf
push
pop
sub
and
xor
adc
mov
and
and
xor
push
or
pop
jmp
xor
stos
pop
add
imul
xchg
je
add
dec
pop
dec
jg
adc
call
cmp
pop
jmp
sub
add
jmp
loopne
xchg
push
stc
pusha
loope
retf
mov
push
push
sbb
jne
pop
add
pusha
jmp
add
mov
dec
and
push
jl
adc
popa
movs
and
xchg
movs
test
jle
pop
cmps
cmp
xor
and
dec
hlt
cmps
daa
or
fist
gs
push
mov
pusha
cmp
call
or
gs
cwde
dec
enter
and
enter
add
add
imul
nop
inc
repnz
inc
push
repz
(bad)
jne
or
enter
jo
(bad)
sub
jle
xchg
pop
mov
jmp
push
fs
imul
imul
rcr
inc
outs
shr
and
cld
arpl
pop
push
pusha
lds
data16
iret
inc
or
inc
add
or
inc
neg
test
test
or
xchg
mov
cmp
and
add
sbb
xchg
pop
inc
jmp
mov
test
add
fsub
movs
sub
in
dec
enter
sbb
add
daa
call
out
cli
popa
inc
push
ror
or
mov
mov
movs
call
xchg
shl
xor
ins
retf
pop
int
les
inc
mov
mov
(bad)
outs
rol
icebp
adc
mov
jno
inc
mov
add
dec
mov
push
(bad)
jl
or
scas
push
mov
sbb
or
mov
push
dec
movs
push
jg
adc
inc
inc
out
and
leave
(bad)
fnstenv
scas
pushf
add
jp
add
mov
adc
dec
inc
pop
sar
pusha
out
pop
int3
sub
push
sahf
ins
sub
push
and
add
test
frstor
or
rcl
or
push
mov
(bad)
sub
or
(bad)
jmp
lahf
mov
push
push
shr
pop
jge
pop
outs
dec
nop
push
mov
lods
sub
in
pop
push
or
out
and
inc
xchg
cmp
mov
cwde
xor
mov
inc
mov
mov
jne
mov
mov
push
inc
xchg
mov
or
push
push
push
add
fstp
jnp
jne
dec
add
enter
fwait
add
sub
xor
add
xchg
add
mov
xchg
mov
add
inc
pop
sub
and
xchg
fs
jge
das
call
fs
clc
mov
push
dec
imul
inc
and
or
jmp
retf
add
je
inc
adc
loope
pusha
push
mov
jae
ficom
shl
aam
push
sbb
sbb
fisub
sub
mov
pop
cmp
xchg
xor
retf
(bad)
mov
and
imul
pop
inc
cmp
mov
jmp
pop
dec
mov
clc
repnz
mov
add
test
adc
inc
add
add
rcl
mov
inc
push
inc
push
push
mov
mov
mov
jo
cmp
sub
scas
adc
push
inc
mov
icebp
es
(bad)
sbb
jne
jno
popf
jb
sub
cmp
mov
add
xlat
cmp
pop
cmp
pop
xor
cmp
add
pop
push
jnp
inc
sbb
pop
push
das
test
imul
mov
jge
stos
xchg
push
in
push
sub
sub
push
add
and
mov
cmp
cs
rol
repz
js
xor
jge
dec
rol
jnp
in
psubq
push
jmp
out
push
pop
mov
mov
push
cs
nop
jne
js
sbb
push
sbb
push
adc
pushf
mov
or
sti
js
icebp
mov
sub
mov
cdq
cmp
xor
pop
(bad)
mov
fistp
jmp
je
add
mov
ret
shr
mov
sub
in
ffree
adc
test
into
push
add
or
push
sbb
mov
jmp
sbb
push
push
int3
test
imul
add
dec
sub
dec
xchg
adc
xchg
test
push
mov
rol
or
enter
adc
cmps
aad
jb
rcr
ss
loopne
or
cmp
jle
fwait
sub
(bad)
pop
mov
cmc
ds
dec
push
out
cmp
out
retf
add
inc
test
or
and
or
jp
jnp
fldenv
je
dec
push
push
ds
cmp
dec
je
cmp
or
inc
lods
push
add
rcr
in
inc
pop
call
or
push
push
mov
mov
arpl
jo
or
add
popa
and
cmp
xchg
mov
stc
add
jge
push
push
and
xor
int
stc
add
mov
cmp
sub
xor
dec
inc
inc
or
cld
les
outs
add
in
retf
dec
movs
push
pusha
retf
or
andps
jmp
add
mov
vmread
adc
not
sbb
add
sbb
imul
push
adc
mov
loopne
sub
repz
xor
xchg
xor
shl
push
arpl
cmp
adc
dec
popa
mov
pop
dec
mul
dec
push
loope
sar
into
enter
aaa
cmp
sbb
push
or
(bad)
adc
adc
dec
loopne
lea
loope
or
js
scas
jl
add
(bad)
cmps
xor
and
mov
cmc
or
pop
neg
jnp
inc
mov
mov
not
and
pop
mov
das
bound
or
pop
call
(bad)
cwde
mov
sbb
adc
inc
mov
cmp
nop
rol
les
mov
dec
repnz
sar
inc
sub
add
mov
mov
jae
pop
adc
sbb
add
fdivr
mov
inc
sub
retf
sbb
and
cli
repnz
outs
inc
aam
lds
and
mov
enter
addr16
or
mov
int3
pushf
jns
dec
pop
pop
aaa
sti
imul
je
pop
outs
sbb
fcmove
mov
jae
js
in
scas
sti
xor
jae
movs
ds
mov
test
push
loop
mov
(bad)
sub
(bad)
and
shr
push
jnp
sar
jmp
ss
fdivr
push
jl
adc
pop
add
sti
loope
mov
rol
mov
imul
or
mov
or
mov
cs
sar
inc
lea
pop
sub
fstp
jle
xor
(bad)
jle
sub
cmp
lods
icebp
pop
add
mov
jb
sbb
pop
xchg
cmp
or
rcl
clc
inc
add
cmp
jl
sub
dec
pusha
loopne
mov
sahf
inc
sub
jecxz
xchg
(bad)
and
sbb
cmp
sbb
dec
mov
or
sub
mov
jmp
xor
push
jb
mov
and
mov
das
lea
and
ins
fisubr
xor
mov
mov
je
ins
and
push
sub
(bad)
cdq
xor
arpl
jg
xchg
mov
loopne
pop
in
pop
adc
xor
shl
add
inc
push
inc
loopne
mov
sti
pop
dec
jl
xor
dec
jnp
and
and
adc
fstp
cli
mov
mov
wbinvd
cmp
loope
fadd
xchg
push
cmps
jne
mov
(bad)
fwait
iret
sar
mov
fld
ins
add
jecxz
push
push
test
sbb
out
mov
push
clc
inc
shl
cmp
lock
xor
xor
cmps
push
xchg
std
lds
push
and
in
sbb
rcr
fldcw
push
(bad)
and
fdiv
xchg
push
mov
and
aam
pop
or
fwait
add
mov
adc
popa
and
mov
adc
idiv
push
data16
and
push
fcom
push
and
jne
mov
xor
xchg
cwde
fs
sub
leave
dec
fcomi
or
xor
jmp
mov
mov
ins
add
sub
cli
and
pop
jle
jmp
shr
add
lock
call
cmp
cmps
push
(bad)
mov
jle
and
push
mov
push
mov
idiv
inc
call
mov
lods
lods
lea
in
mov
xchg
arpl
push
dec
fidiv
mov
add
mov
mov
xchg
xchg
push
(bad)
loopne
js
cld
mov
pop
mov
inc
(bad)
into
xlat
cmp
icebp
push
pop
mov
sbb
mov
sbb
or
cmp
jb
dec
sbb
or
lock
popa
add
pusha
dec
sbb
and
xor
and
inc
dec
xchg
icebp
ret
or
pop
rol
and
ins
or
iret
xor
inc
adc
sub
pop
mov
loope
pop
or
out
addr16
pop
xor
(bad)
iret
xlat
or
(bad)
aas
and
leave
fcomp
and
push
xchg
jb
mov
pop
jge
jno
inc
or
outs
ud2
jns
xor
mov
scas
popa
bound
sahf
or
and
sbb
xor
and
adc
int3
and
mov
jns
pusha
pusha
and
dec
jo
sub
leave
imul
or
and
push
xlat
pop
aaa
test
fist
test
stc
xor
add
dec
sbb
xor
sbb
clc
ficom
adc
jbe
mov
hlt
sub
test
pop
add
cmc
inc
xor
movs
ret
in
sub
sub
imul
cmp
jmp
adc
adc
cmc
in
or
push
in
jmp
xchg
add
mov
adc
ret
arpl
popa
inc
cmp
push
fdivrp
mov
sub
mov
sub
(bad)
push
push
mov
not
sub
sar
in
mov
xor
test
inc
and
jb
rcl
push
inc
push
jo
push
jmp
push
fistp
sbb
pop
pusha
sub
add
pop
call
sbb
pushaw
mov
ds
gs
outs
mov
mov
push
test
xchg
cmp
inc
push
pop
mov
xlat
xchg
inc
inc
je
das
adc
add
or
cld
push
xor
xchg
jbe
mov
dec
cmp
and
loopne
and
cmp
sbb
cmp
mov
les
add
lods
add
push
call
add
pop
adc
sbb
cmps
int3
and
fld
fidiv
rcl
cmp
push
test
cdq
adc
mov
mov
imul
push
or
test
jecxz
lock
mov
xor
call
push
push
pop
push
push
test
push
outs
push
push
or
imul
rol
sub
test
ja
ds
dec
cmps
sub
jne
add
jne
adc
jo
push
mov
dec
add
hlt
xor
sbb
cs
inc
and
or
push
pushf
sub
ss
add
add
sbb
pop
lods
sub
fistp
add
outs
jmp
mov
imul
and
xchg
push
add
xor
aas
inc
mov
mov
adc
loopne
xchg
xor
add
jg
(bad)
pop
and
rcr
adc
inc
ins
mov
sbb
sahf
cdq
(bad)
jne
dec
dec
pop
ins
pop
xor
jns
adc
cmp
das
dec
and
adc
jp
js
pop
dec
movzx
add
inc
mov
mov
aad
mov
jnp
push
pushf
es
mov
lea
arpl
imul
shr
push
pop
inc
repnz
adc
jge
cmp
mov
xchg
mov
ret
and
xor
repz
sub
and
ins
in
xor
xlat
sbb
sahf
xchg
inc
stos
popf
fistp
xor
stc
je
pop
leave
xor
xor
pop
std
push
sbb
bound
adc
lods
pop
or
ins
popf
adc
repz
inc
fwait
and
cmps
shr
push
jb
outs
pop
adc
push
add
les
imul
or
jle
or
sub
or
sub
dec
movs
add
stos
add
pop
jb
jne
cmps
sbb
inc
mov
js
pop
push
xchg
jns
jg
inc
(bad)
sbb
and
or
arpl
call
jne
or
loopne
in
or
sub
add
dec
(bad)
adc
jne
inc
iret
lods
idiv
mov
ds
or
xor
cmp
add
add
hlt
jecxz
adc
mov
and
dec
inc
xchg
xor
popf
loopne
shr
std
bound
(bad)
sbb
xor
mov
xchg
cmc
xor
lock
pop
jecxz
jmp
add
pushf
sub
lar
jmp
pop
jns
xchg
jmp
inc
pop
adc
inc
sub
stc
sub
xchg
cmp
push
das
and
jl
rcl
xor
cdq
push
jp
xchg
pop
push
dec
stos
jbe
aaa
shl
les
mov
imul
cwde
jbe
or
jecxz
dec
mov
mov
dec
adc
mov
lea
and
add
xchg
stos
lea
rcr
sbb
xchg
sbb
pop
push
js
ret
repz
in
test
rcr
fld
mov
retf
push
adc
pop
mov
xchg
je
push
icebp
add
mov
cmp
add
push
and
clc
sar
shr
pop
xchg
lahf
pop
cs
sub
pusha
push
loope
js
sar
dec
lods
xor
or
cld
es
push
add
dec
jge
dec
inc
mov
adc
ins
cs
push
inc
push
pusha
in
inc
rcl
push
fwait
pop
xchg
fistp
clc
push
call
sar
or
add
push
mov
int
sbb
repnz
or
adc
xor
das
inc
cli
inc
cwde
add
xchg
xor
xor
sbb
xchg
push
add
test
call
imul
js
mov
inc
xchg
rcr
mov
dec
sbb
cld
inc
aas
mov
mov
loopne
or
in
and
mov
xor
out
inc
cmp
mov
dec
enter
push
shl
ret
sub
(bad)
push
std
xchg
fs
sub
test
dec
sbb
(bad)
push
xor
test
adc
dec
pop
jge
pop
add
in
dec
push
clc
ins
fs
push
dec
arpl
rcl
sbb
inc
pop
xchg
jle
loope
mov
stos
inc
or
and
ror
and
cmp
inc
es
dec
add
dec
inc
xor
sbb
or
inc
adc
rcr
imul
shl
fadd
sbb
mov
adc
jmp
aam
sub
sahf
ror
fld
rcl
call
pop
sub
jne
adc
movs
sar
or
fmul
mov
retf
mov
fsub
push
jae
out
jmp
or
ins
and
inc
fcmovnb
lea
(bad)
add
ins
imul
imul
sbb
xchg
add
mov
arpl
inc
mov
or
sbb
jb
popa
test
loopne
xchg
mov
add
test
(bad)
push
cmp
xchg
add
mov
xor
dec
dec
loopne
push
pop
inc
test
sub
outs
add
mov
push
or
mov
sbb
mov
xor
icebp
dec
ret
push
mov
pop
repnz
ret
xor
mov
scas
and
jmp
movs
adc
shl
mov
rol
jecxz
sbb
pop
cmps
lock
jmp
push
fwait
aas
out
bound
or
sbb
inc
push
aaa
inc
pop
div
lods
pop
movs
aam
shr
xchg
inc
mov
pop
mov
ret
adc
retf
adc
cdq
nop
setno
sbb
in
outs
rcr
sbb
rcr
sub
push
sbb
nop
shr
icebp
fwait
xchg
xchg
in
imul
cmps
push
xchg
or
sub
scas
mov
and
repnz
sbb
push
sbb
rcr
in
sub
or
add
push
xor
pop
adc
ror
lock
and
cs
push
pop
inc
ss
adc
inc
mov
fist
adc
jp
push
xor
add
mov
mov
pop
rol
push
mov
adc
ret
push
pop
push
inc
add
addr16
int
sti
mov
adc
lods
call
mov
add
jle
imul
mov
pop
dec
adc
mov
dec
les
push
push
shl
int3
pop
xor
arpl
sub
mov
xor
add
push
test
mov
test
cmc
push
jmp
test
jnp
fdiv
pop
jecxz
nop
cld
xor
iret
test
test
adc
adc
add
jae
and
cmp
cmps
inc
push
mov
xor
pop
sub
pop
loope
loop
adc
mov
fadd
sbb
test
sub
mov
lods
repnz
push
xchg
push
adc
aam
daa
test
push
dec
inc
jbe
jmp
pusha
imul
and
js
adc
adc
pop
imul
mov
mov
pop
mov
add
sub
or
cmp
jo
sub
jle
sbb
je
pop
add
or
push
ins
mov
enter
cmp
ror
mov
xor
test
int3
cs
push
ficom
repnz
shl
pop
sub
leave
test
repz
jnp
mov
add
sub
nop
pop
(bad)
mov
push
add
mov
test
aaa
je
rcl
icebp
popf
fld
daa
dec
or
add
mov
sbb
jns
mov
fisub
imul
xor
mov
cmp
inc
cs
push
mov
ret
dec
ror
sbb
or
mov
daa
pop
pusha
ins
jno
or
jno
sbb
inc
jo
add
in
cmp
jne
add
inc
inc
pushf
test
jge
jmp
mov
and
push
push
pop
pop
xor
rcr
movs
adc
rcl
and
sbb
cmp
add
adc
sub
cdq
cld
in
rol
adc
add
cmp
cwde
jp
cmp
ins
mov
or
add
in
pop
iret
push
mov
and
add
loope
add
test
out
dec
dec
sub
or
xchg
(bad)
fsubr
mov
cmp
inc
and
enter
or
adc
and
in
jno
pop
sbb
mov
aas
cmps
ror
shr
push
push
repz
and
push
add
test
xchg
ins
add
pop
je
clc
pop
dec
es
sub
inc
lock
and
pop
nop
jae
mov
adc
and
mov
cdq
xchg
daa
ret
or
sbb
push
xchg
and
push
ins
popa
mov
or
popa
mov
push
test
adc
pusha
add
test
mov
stos
sub
adc
xor
xchg
or
or
ret
sub
pop
dec
aam
sbb
sub
inc
xchg
or
pop
xchg
pop
and
and
mov
adc
or
push
push
xchg
cmp
adc
in
push
xor
jne
or
add
arpl
sti
int
fwait
adc
pop
jb
sbb
dec
jmp
mov
dec
add
ret
fxch
or
stos
dec
mov
push
cmp
sub
pop
and
jno
pop
das
fwait
imul
jmp
rcr
push
ret
rcl
outs
push
arpl
or
iret
call
je
retf
push
xchg
dec
mov
or
push
call
ins
add
ins
xchg
jo
data16
or
and
cdq
dec
(bad)
mov
and
adc
cmp
js
inc
lock
int
sbb
push
mov
test
mov
mov
or
and
stos
add
mov
pop
enter
pusha
or
mov
xor
rcl
or
jne
sub
rcr
sub
add
cmc
int
add
rcl
pusha
cdq
daa
add
pusha
or
outs
jo
sub
into
shl
cmp
or
lock
mov
inc
sub
or
adc
mov
std
xchg
(bad)
and
call
movs
sar
mov
(bad)
loopne
mov
and
jg
add
sbb
add
bound
cmps
enter
outs
sub
push
mov
leave
sub
mov
aas
sahf
push
aaa
mov
or
inc
imul
push
je
sbb
or
ret
not
xor
jnp
and
adc
lea
dec
sar
je
pop
cmp
mov
dec
dec
daa
lds
sub
adc
xchg
loopne
je
daa
fcom
imul
js
xor
push
ret
push
add
stc
or
loope
movs
out
jb
jne
xchg
cmps
add
adc
loopne
push
jae
xchg
mov
int
les
sbb
(bad)
sbb
fcom
mov
xchg
push
(bad)
adc
sub
jo
or
push
jmp
push
je
stos
push
xchg
add
jmp
mov
xchg
lods
add
add
add
sub
loopne
inc
inc
lock
adc
add
push
jl
add
adc
inc
push
push
xor
cmp
repz
xor
push
ss
cmp
mov
(bad)
idiv
cmp
inc
jae
mov
mov
adc
dec
call
leave
aad
adc
nop
push
ds
mov
xchg
nop
retf
ss
add
jne
mov
mov
sbb
nop
out
push
movs
aam
push
add
mov
int
imul
shl
adc
pop
xor
pop
adc
push
inc
xchg
fwait
mov
push
ror
rcr
cld
iret
setne
sbb
daa
or
fs
cmp
(bad)
mov
jne
xchg
push
sub
test
or
or
add
mov
test
js
inc
and
lea
sub
add
add
cmp
test
sbb
scas
mov
pop
rcl
or
loopne
xor
sub
ds
imul
and
inc
sbb
jmp
add
(bad)
cs
ins
call
jo
clc
mov
sbb
cmps
ror
cmp
loop
ror
and
lea
push
jmp
bound
push
out
scas
pop
retf
jmp
mov
jbe
aas
cmp
push
faddp
jns
adc
sub
and
je
sbb
and
(bad)
adc
pop
sub
xor
test
jge
push
loop
stos
shl
pusha
inc
xlat
and
adc
sub
clc
cdq
xor
sbb
adc
adc
cmp
cmp
sub
pushf
push
clc
pop
ret
jne
xchg
jo
adc
iret
aaa
or
mov
push
jno
xchg
xchg
dec
jle
mov
popf
cmp
push
pushf
pop
add
xor
adc
cmp
and
and
inc
jb
xor
inc
add
mov
dec
dec
dec
and
adc
pop
cdq
push
ret
pop
add
and
mov
stos
fdivr
enter
sbb
nop
arpl
and
cmp
and
rcl
hlt
jo
mov
outs
add
lahf
rol
outs
jo
push
add
push
add
push
(bad)
pop
jl
push
ror
inc
mov
in
mov
and
das
mov
sbb
fadd
jecxz
adc
push
jne
push
mov
clc
stos
cmps
sbb
jno
fsub
pop
pusha
cmc
(bad)
loopne
in
jge
add
push
cwde
push
cmp
cmps
xchg
xchg
fdiv
scas
ret
lock
and
je
iret
lea
cmp
adc
add
dec
mov
jno
rol
loopne
adc
pop
jecxz
sbb
add
fild
sub
ret
xchg
sub
mov
ret
sbb
mov
cmp
test
add
in
jmp
xor
mov
push
pop
sbb
adc
dec
push
ins
push
dec
add
mov
cmp
jbe
mov
push
cmp
mov
imul
dec
push
jns
call
fbstp
xor
mov
pop
scas
cmp
jb
jmp
pop
add
test
push
and
dec
push
cmp
jae
imul
and
jb
les
mov
and
loope
xlat
cmp
push
cli
and
xchg
jmp
not
mov
xor
cmp
push
jmp
test
call
addr16
inc
je
sbb
movs
cs
push
xor
push
mov
cwde
cmp
mov
dec
fst
push
movs
repnz
mov
push
mov
xor
sbb
jb
and
mov
mov
loope
xor
inc
test
mov
or
or
sub
sub
and
arpl
push
and
xchg
iret
rol
or
sub
push
dec
inc
xor
push
and
or
or
pusha
push
ins
sbb
push
imul
cmc
cmp
and
push
dec
rcl
and
mov
pop
outs
ret
xchg
lods
mov
and
aam
sub
pop
dec
pop
out
sub
repz
mov
pusha
mov
aad
addr16
push
adc
fld
and
sub
cmp
mov
and
inc
sbb
mov
ror
test
bnd
ss
jbe
aas
mov
fisubr
cmp
ss
push
mov
cmp
mov
pushf
pop
jno
popa
out
pop
cmp
dec
test
add
jg
sub
add
int3
xchg
mov
dec
out
and
mov
jo
adc
(bad)
xchg
jne
jo
or
ficom
lea
aam
sub
repnz
xchg
pushf
popa
loop
push
xchg
add
and
mov
js
cmp
loopne
add
mov
jne
push
adc
repnz
(bad)
or
adc
scas
inc
retf
rol
mov
pop
retf
push
fbld
push
sub
jl
cmc
push
push
neg
hlt
and
add
mov
sub
push
aaa
pop
jmp
sub
ins
xchg
fwait
adc
or
xchg
in
mov
mov
ins
mov
imul
push
test
mov
pushf
repnz
inc
lahf
popa
mov
repnz
int3
push
push
push
cmp
ins
orps
es
jnp
cmps
movs
mov
push
sbb
aad
inc
adc
dec
jp
dec
dec
icebp
daa
test
dec
push
inc
and
ins
sub
push
xor
lods
call
sahf
mov
test
jl
mov
mov
xchg
or
mov
mov
popa
repnz
sbb
sub
xchg
clc
mov
hlt
popa
adc
lods
and
push
pop
test
adc
movs
adc
imul
mov
xchg
add
pop
jne
push
pop
mov
pop
cmp
add
inc
nop
add
out
fsubr
dec
and
mov
pop
daa
pop
jp
inc
push
mov
mov
popf
and
sahf
retf
xor
test
or
push
test
inc
add
mov
adc
mov
mov
pusha
or
daa
xor
sbb
adc
jmp
dec
jle
push
jb
jb
nop
add
pusha
sbb
mov
jne
pop
jp
das
std
push
push
mul
cmps
inc
pop
cld
mov
ss
sub
aas
rcr
xchg
jmp
rcr
mov
shl
lahf
mov
ret
pop
inc
mov
(bad)
push
loopne
xchg
jns
add
jmp
xchg
test
mov
xor
adc
pop
push
test
add
and
loopne
inc
mov
sub
and
add
mov
mov
dec
push
pusha
enter
and
mov
inc
xor
in
mov
or
and
icebp
cmp
fsubr
or
inc
out
mov
fisub
jge
inc
mov
pop
and
adc
or
loop
jle
jne
push
addr16
shl
into
std
or
jo
ins
or
sbb
scas
adc
stos
xor
(bad)
push
push
push
mov
stc
add
cmp
je
push
inc
mov
(bad)
sbb
add
lock
and
push
push
shr
inc
call
clc
adc
mov
ja
test
dec
or
ret
ret
cmp
and
push
mov
or
add
aam
jmp
adc
sbb
inc
or
mov
add
adc
xchg
aam
xor
sbb
sar
push
push
pcmpeqb
adc
xchg
or
leave
and
pop
inc
clc
xor
daa
xchg
fs
lea
mov
mov
jecxz
pop
ins
gs
pop
mov
push
push
jo
shr
inc
push
inc
mov
mov
jp
imul
pop
pusha
lahf
xor
add
push
adc
retf
or
jmp
sub
inc
push
push
mov
sbb
adc
inc
sbb
adc
repnz
push
add
add
dec
and
shl
dec
in
test
(bad)
jns
pusha
xor
or
dec
jmp
out
dec
push
nop
pop
pop
in
cmp
adc
out
repnz
mov
cld
cld
pusha
xor
dec
dec
jo
out
aas
out
nop
outs
pop
fld
stos
pminub
add
enter
bound
add
push
mov
or
jne
aam
mov
adc
cmps
out
sar
lock
in
jb
fs
je
stc
int
lahf
sbb
jae
dec
cmp
test
and
in
stos
sbb
push
(bad)
(bad)
fsub
dec
mov
and
inc
sub
push
ins
jmp
xor
jo
add
jmp
arpl
iret
mov
lods
(bad)
dec
sbb
leave
and
add
ins
scas
sbb
adc
cmp
icebp
push
adc
dec
mov
mov
adc
mov
add
sub
ins
cld
(bad)
push
pop
mov
jne
cmp
add
pop
ds
xor
lds
out
mov
push
jl
or
add
sbb
js
sbb
cmp
(bad)
mov
int
and
movs
inc
ss
mov
(bad)
fdiv
push
outs
adc
inc
fld
das
lods
mov
ss
je
mov
push
cwde
or
fld
pop
sbb
jbe
pop
mov
shr
push
loopne
ret
test
adc
clc
and
add
movs
jo
sbb
lock
ins
or
sub
dec
push
xor
or
xchg
add
mov
les
inc
fs
fmul
out
or
sbb
cs
cmp
ret
xchg
mov
cmove
mov
and
or
retf
enter
sub
mov
mov
fldenv
in
push
xchg
mov
mov
rcr
(bad)
sbb
push
or
clc
jnp
push
push
jmp
jb
ja
lds
aas
cmp
mov
mov
mov
retf
iret
repz
pop
add
push
sub
dec
jo
repz
mov
push
data16
cmps
jge
iret
in
or
sbb
dec
push
imul
repz
push
retf
cs
push
adc
xor
push
fdiv
repz
push
push
test
loopne
call
loopne
sbb
loopne
inc
push
jae
cli
mov
cmp
jnp
adc
arpl
fwait
and
xchg
test
jns
and
inc
clc
xor
js
jbe
mov
imul
shl
jmp
pop
imul
or
in
retf
mov
xchg
pop
pop
daa
je
test
push
xchg
dec
push
add
xchg
xor
mov
or
int3
sti
xor
fs
xchg
shl
out
mov
mov
jo
pop
xor
jns
jmp
jp
popf
xchg
nop
jb
dec
push
popa
es
fsub
or
cdq
xchg
inc
xchg
xor
int3
rcr
mov
rol
push
fiadd
sbb
xor
and
adc
jns
sub
sub
add
adc
mov
dec
ret
dec
cdq
adc
adc
imul
xchg
or
pop
movsx
mov
inc
inc
adc
mov
jns
mov
sbb
loopne
or
jae
daa
data16
sub
ret
movups
jno
clc
jmp
retf
adc
jmp
mov
mov
dec
imul
xchg
mov
pusha
push
or
inc
push
rol
add
inc
dec
inc
cs
push
sbb
or
int
and
and
inc
rol
sub
mov
mov
xor
inc
and
dec
nop
add
sbb
dec
push
push
push
push
outs
inc
js
mov
adc
or
daa
cmp
je
in
sbb
mov
xchg
sub
ins
jb
sahf
cmps
stc
(bad)
mov
jnp
fnstcw
adc
lods
mov
nop
adc
adc
in
aam
stos
fld
add
or
aaa
rcl
sbb
sub
nop
add
adc
add
adc
sbb
nop
or
adc
push
add
inc
push
femms
push
nop
add
add
inc
add
inc
push
nop
add
add
add
inc
push
nop
add
add
sbb
inc
push
pop
or
sub
xchg
ss
dec
js
add
invd
sbb
cmp
(bad)
stos
xchg
or
das
fnstcw
jp
mov
imul
mov
fs
dec
add
mov
jmp
cmp
fsubr
adc
rol
es
inc
xor
ins
dec
movs
xchg
ins
jecxz
and
inc
push
or
in
push
bound
dec
push
jno
gs
fist
cmp
std
mov
add
daa
pusha
mov
inc
mov
lea
add
data16
pop
dec
ins
dec
adc
cmp
push
jmp
inc
push
xchg
pop
sub
cmps
push
cs
(bad)
and
fsub
jl
push
add
jle
push
pop
push
sub
sbb
xor
inc
xor
je
push
fprem
push
sub
pop
cmp
pop
xor
add
and
cmp
icebp
das
or
sub
inc
jo
or
lods
pop
cs
xchg
adc
(bad)
rcr
adc
mov
push
pop
dec
push
jg
or
mov
jae
sbb
push
rcl
retf
mov
mov
(bad)
mov
mov
fdivr
arpl
dec
xor
pop
push
push
cmp
sub
inc
or
in
sbb
in
adc
les
inc
iret
aam
out
repnz
dec
xchg
mov
retf
dec
mov
or
fwait
rcl
cmp
(bad)
hlt
adc
call
fdivr
retf
adc
add
and
sbb
dec
adc
mov
sti
sub
test
jp
lock
mov
(bad)
and
and
sbb
sub
mov
mul
adc
push
sbb
xor
dec
dec
pop
shr
lds
nop
cs
or
jbe
push
xchg
xchg
js
fs
dec
sub
ins
loope
(bad)
cli
lgs
cs
popa
arpl
sub
ss
xor
mov
lea
sub
mov
dec
xor
mov
and
lods
push
push
add
xchg
sbb
rol
das
call
jno
xchg
aaa
xor
xchg
or
xor
pop
pusha
es
push
mov
push
aas
mov
jmp
jb
jg
cmp
jbe
cmp
shr
xchg
jb
retf
std
pushf
cmp
sbb
cs
(bad)
adc
push
loope
sti
sti
(bad)
aam
xchg
js
add
arpl
cmp
add
xor
stos
xor
push
sbb
mov
sahf
mov
ret
pop
adc
fld
scas
cmps
(bad)
jnp
xchg
inc
aam
xchg
push
add
push
or
cmc
jne
fcomi
(bad)
inc
pop
pop
test
int
sbb
push
and
or
out
xlat
mov
loop
jp
sbb
or
pop
ins
push
cmp
fdiv
sub
mov
mov
jmp
xor
stc
jle
mov
je
gs
loopne
cmp
imul
sbb
sbb
movs
shr
xchg
add
ss
outs
das
lods
inc
add
push
das
mov
dec
cli
adc
pop
aam
sbb
lods
shl
in
mov
mov
xchg
sub
adc
and
and
pop
jle
and
dec
popa
arpl
js
imul
pop
(bad)
(bad)
and
xchg
sbb
xchg
arpl
(bad)
fld
repz
clc
mov
add
xchg
mov
mov
dec
arpl
cmp
sub
mov
(bad)
arpl
cmp
jne
or
mov
ins
add
or
loopne
push
xor
dec
out
push
cld
jno
or
adc
mov
adc
cmp
mov
push
(bad)
leave
or
in
inc
sbb
jmp
hlt
adc
or
dec
add
inc
xor
int
ret
and
rol
rol
inc
push
lds
cmps
jge
and
pushf
es
ret
stos
push
movs
mov
inc
in
nop
mov
pop
lock
les
add
bound
cmps
add
and
test
jmp
add
jb
imul
cli
add
xlat
jne
adc
dec
ins
lahf
xchg
xor
mov
call
adc
iret
movs
pop
cmp
cmc
adc
inc
adc
xor
pop
fcom
mov
shr
add
into
add
clc
or
test
loopne
add
mov
movs
out
jb
mov
xor
ret
pushf
dec
pusha
and
and
push
fst
(bad)
mov
xchg
lods
jb
mov
data16
xchg
into
rol
sub
js
mov
jge
lods
add
push
push
xchg
neg
push
mov
xchg
and
xchg
sbb
jno
cmp
push
xchg
shr
fs
add
sub
push
or
add
ret
sub
enter
jge
(bad)
cwde
fwait
clc
inc
into
sub
mov
add
js
or
push
lea
aad
jmp
push
xlat
pusha
cmp
inc
js
jae
cmp
xor
js
jmp
mov
and
xor
adc
rol
jb
add
sub
push
xchg
mov
ret
xor
outs
xchg
add
xchg
or
mov
jl
jle
(bad)
adc
mov
popf
ins
pop
mov
jno
add
ror
inc
push
push
add
add
inc
inc
in
dec
leave
jp
pop
push
push
test
push
fld
lds
xchg
pop
and
clc
add
test
adc
dec
sub
dec
and
mov
sbb
das
inc
adc
mov
mov
adc
in
(bad)
cmc
and
dec
pcmpeqd
mov
push
cwde
push
ret
inc
call
push
push
lock
shl
jle
fs
(bad)
add
add
inc
xor
pushf
out
inc
push
dec
dec
lods
add
test
jno
dec
sub
rol
dec
sbb
ficom
pop
test
mov
test
das
and
pop
adc
mov
inc
jbe
and
out
mov
test
and
pushf
jmp
pop
pop
adc
mov
add
or
(bad)
in
mov
dec
fstp
cli
sub
inc
adc
push
push
fldenv
cdq
xchg
mov
jne
ds
pop
dec
inc
pusha
mov
or
ins
inc
rcl
add
push
(bad)
push
inc
push
sar
int3
xor
inc
fld
or
icebp
inc
dec
mov
adc
(bad)
cmp
inc
hlt
add
xor
dec
(bad)
add
mov
sub
neg
mov
adc
cmp
movs
sti
outs
or
imul
mov
xor
cli
ins
or
scas
ss
and
test
dec
dec
fcom
jo
hlt
mov
adc
jno
test
mov
mov
cmp
je
xchg
dec
test
xchg
popa
stc
sbb
add
adc
sti
xchg
xor
or
adc
test
sar
adc
or
adc
aam
inc
outs
sub
stos
pop
add
int
xchg
mov
icebp
pop
mov
push
dec
mov
enter
push
push
push
push
sub
shr
loopne
dec
jo
push
jg
add
jns
movs
xchg
gs
adc
add
in
cmps
ja
pop
test
lea
pop
mov
sbb
push
or
in
push
sub
inc
adc
dec
xor
and
fidiv
pushf
and
bnd
or
sbb
dec
xor
fcomp
cmps
es
test
retf
push
push
inc
sub
lock
inc
gs
sbb
mov
adc
and
adc
mov
sti
out
mov
mov
sbb
sub
mov
ja
add
movs
enter
and
pop
pop
lods
cwde
dec
or
stc
sub
sar
xchg
das
sub
sbb
xor
push
loopne
dec
adc
jno
sbb
push
mov
xor
int
out
pop
sbb
mov
push
push
mov
inc
inc
mov
mov
xchg
mov
data16
add
leave
jp
les
and
jl
fldcw
shl
les
sub
and
cmp
scas
add
add
adc
dec
icebp
data16
jo
jno
push
dec
inc
or
adc
dec
pop
aad
pop
cmp
push
jge
sbb
push
or
aas
ret
mov
xchg
sub
or
sub
xlat
mov
dec
jnp
jno
lods
and
cmp
cmp
(bad)
adc
cmp
ds
test
or
or
inc
mov
or
cmp
dec
push
add
(bad)
xor
xchg
aam
dec
das
or
ror
retf
mov
push
dec
push
dec
push
daa
ret
xchg
and
out
cwde
push
xor
cmp
fs
push
push
pop
mov
mov
jecxz
sbb
bound
enter
xor
cwde
mov
or
dec
in
add
sbb
nop
jb
movs
cmc
cdq
xor
sub
in
cmp
push
add
inc
je
sbb
push
sbb
inc
ins
sbb
cmp
clc
ins
pop
test
dec
sbb
inc
movs
push
movs
add
pop
movnti
jecxz
adc
pop
push
daa
mov
gs
fbld
adc
pop
shl
or
ret
or
mov
sbb
jae
inc
sbb
cmp
aaa
mov
add
lods
mov
adc
in
cs
icebp
sub
jmp
aaa
cmp
dec
xor
push
pop
enter
cmps
dec
adc
jmp
adc
movs
push
pop
add
or
sbb
inc
sub
pop
sbb
push
test
retf
cmp
pop
push
adc
aas
inc
dec
jmp
dec
mov
cmps
dec
push
adc
cmp
cmp
movs
sub
cli
cdq
jnp
sub
sub
nop
inc
push
scas
iret
loope
and
bound
push
imul
sub
xlat
and
lods
div
jb
inc
cmp
sahf
and
and
inc
xlat
dec
add
inc
cmp
sub
pop
pop
rol
mov
xchg
and
xor
sbb
or
pop
push
xor
push
inc
add
dec
cmps
xor
aad
pop
fisttp
mov
inc
sub
xor
(bad)
mov
xor
add
call
pop
stos
sub
jp
cmp
mov
dec
shl
xor
adc
retf
mov
call
jl
aas
lock
or
jne
addr16
cmp
je
push
xor
in
mov
mov
push
or
lea
lahf
inc
or
out
pusha
sahf
shl
push
add
mov
aas
pop
jne
mov
je
lea
and
ret
lods
leave
sub
cmp
mov
fldcw
jo
or
jmp
or
ror
add
enter
test
mov
add
movs
mov
xor
movs
xchg
push
fisub
(bad)
imul
jecxz
lea
xchg
pop
pop
popa
jmp
test
mov
frstor
loop
adc
xchg
adc
xchg
push
add
adc
add
push
jle
pop
(bad)
or
xchg
hlt
fdiv
sbb
sub
inc
js
int3
and
sub
sbb
fild
and
push
sbb
dec
mov
and
or
lods
ss
xchg
or
xchg
out
pop
fdivp
addr16
push
or
push
add
push
std
adc
shl
dec
mov
out
pop
cmp
xchg
dec
pop
or
mov
pop
adc
adc
pop
adc
jb
add
je
sbb
jbe
je
ja
fadd
fistp
and
sub
xchg
adc
jmp
cwde
adc
test
xchg
and
and
mov
lea
pop
mov
jb
imul
loope
dec
and
aam
adc
sbb
dec
and
inc
out
cmps
adc
int
sub
dec
cmp
lods
gs
adc
dec
inc
or
or
xor
sbb
jno
inc
dec
cmps
jno
dec
shl
rol
das
rol
mov
leave
and
adc
jecxz
in
push
mov
loop
movs
jo
sbb
(bad)
lahf
out
adc
movs
ds
sub
sub
ins
popf
or
push
cwde
sar
cmp
mov
fisub
xor
cmp
pop
bound
jo
adc
mov
sub
scas
sbb
adc
and
xor
sub
outs
sub
pop
or
bound
pop
push
jg
or
xchg
aad
das
nop
push
cmp
test
sub
sub
call
push
test
xor
je
sub
push
xchg
mov
ins
cmps
aam
aaa
div
add
sub
inc
add
fadd
(bad)
cmp
jge
sar
sub
movs
mov
or
xor
xchg
or
push
inc
pop
iret
sar
inc
rol
je
push
push
sub
(bad)
jmp
lods
push
mov
pop
or
sbb
jne
fwait
dec
movs
add
cs
xchg
outs
sbb
mov
adc
sub
nop
jnp
pop
iret
in
fwait
add
adc
adc
xor
cmp
xor
inc
adc
add
test
mov
inc
xchg
mov
or
cmp
adc
xchg
ins
and
stc
sbb
cld
mov
or
out
inc
nop
es
xor
ret
push
out
rcr
sbb
lahf
inc
sbb
mov
adc
mov
mov
sti
xor
ffree
adc
push
push
xor
jbe
cmp
add
bound
push
clc
ins
iret
xlat
ror
shr
add
push
fwait
and
test
push
cmp
adc
(bad)
fldcw
xor
jbe
daa
mov
loopne
pop
ins
leave
push
stc
cwde
retf
xchg
xchg
add
or
xchg
jne
sub
cmp
pop
test
out
out
sub
jg
and
jb
cmc
mov
add
add
out
mov
mov
push
push
push
mov
inc
mov
pop
leave
mov
cmp
daa
or
mov
lods
add
inc
dec
cmp
and
aaa
data16
or
add
ja
inc
aas
add
retf
not
out
stos
test
jmp
xchg
dec
pop
cmp
test
sar
cmps
sbb
mov
add
and
mov
inc
jmp
mov
push
iret
repz
imul
jecxz
sub
pop
in
mov
sub
retf
pop
call
fs
push
or
add
dec
or
or
fld
stc
stc
cmp
repz
pop
jl
cmps
push
sbb
in
or
adc
jo
add
add
xor
or
or
test
rcl
xchg
push
test
mov
loopne
lock
sub
outs
push
pop
adc
int
inc
and
xchg
sub
pusha
sub
lods
daa
add
push
jb
pop
ret
fwait
and
mov
fs
mov
lock
mov
cwde
jg
(bad)
mov
adc
jmp
ins
push
sbb
pop
add
cmp
fs
jae
dec
adc
add
ins
inc
lock
sub
pop
arpl
inc
js
icebp
sub
sub
je
sub
jge
inc
cmp
add
push
mov
pushf
inc
ror
and
loopne
call
(bad)
pushf
jns
dec
fild
xor
shl
xchg
inc
sbb
fwait
mov
inc
or
call
xor
(bad)
mov
and
xchg
scas
fs
out
daa
or
and
fdiv
(bad)
xchg
or
lds
icebp
mov
shl
pop
pop
scas
ins
jmp
xchg
fld
jae
je
or
fnstcw
or
shl
cmp
popf
push
fld
pop
nop
(bad)
fnsave
push
xor
out
bswap
loope
test
adc
xor
xor
dec
test
or
sbb
or
jmp
and
ja
cli
outs
push
jmp
pop
or
and
js
sti
jg
(bad)
fisub
jge
mov
fsub
xchg
push
sbb
push
sub
mov
or
test
imul
push
adc
out
scas
scas
(bad)
call
rcl
out
je
dec
jne
push
nop
push
cmps
add
mov
push
pop
cmp
adc
add
jne
in
pusha
jmp
mov
add
push
mov
inc
push
data16
and
mov
arpl
push
and
xchg
jle
xor
enter
inc
add
inc
push
rol
push
out
imul
imul
cmp
jne
(bad)
and
adc
idiv
arpl
cmp
jne
cmp
fbstp
add
jl
adc
mov
adc
cmp
adc
add
out
je
bswap
pop
cmps
mov
fwait
pcmpeqw
push
xchg
dec
imul
movs
inc
mov
not
or
inc
daa
daa
inc
xor
sar
lods
inc
xor
jne
add
sbb
inc
push
sbb
mov
repz
pop
and
xor
sbb
xor
dec
add
into
(bad)
jp
pusha
cmp
add
lock
pop
pop
dec
jge
mov
sbb
fsubrp
rcr
xor
int
(bad)
jmp
mov
push
push
or
imul
pop
dec
xor
dec
push
lea
jae
push
xor
push
lods
add
dec
rcl
movs
mov
jge
or
xor
mov
jge
dec
mov
adc
hlt
scas
add
cli
or
cmp
cli
cmps
lods
xchg
inc
xchg
pop
or
jge
push
mov
add
mov
cs
ss
(bad)
mov
test
xchg
dec
jmp
sub
mov
push
cmp
mov
add
addr16
xor
test
xor
pusha
sub
mov
cmp
das
lock
jg
addr16
pusha
mov
push
das
shr
mov
jecxz
adc
adc
je
jmp
dec
out
js
add
retf
or
jle
sub
test
xor
dec
mov
add
mov
adc
push
fistp
out
test
cmp
pop
push
jge
sbb
pop
push
dec
fsub
sar
sub
je
jge
aaa
mov
or
push
(bad)
enter
sub
adc
addr16
jo
push
shr
and
sbb
and
cmp
push
mov
ret
add
vphaddwd
add
or
stc
add
inc
dec
adc
dec
add
cmp
push
movs
std
or
mov
and
sub
mov
adc
ins
retf
mov
add
push
call
mov
dec
adc
push
add
cmp
jl
clc
xor
sbb
in
adc
sahf
cmps
inc
pusha
rol
adc
push
sbb
fs
add
inc
jmp
mov
inc
adc
inc
daa
dec
cmp
jge
dec
(bad)
daa
xor
jo
sbb
dec
push
add
or
cs
xor
popf
mov
xor
inc
add
inc
dec
add
jne
cmp
test
push
cmp
stos
ret
add
outs
add
sub
rol
pop
pusha
xchg
and
mov
mov
shr
js
mov
mov
inc
fdiv
in
in
xchg
or
(bad)
sub
aam
and
dec
fild
cdq
or
jle
test
dec
mov
movs
jecxz
pop
lea
loop
push
test
adc
mov
mov
hlt
mov
lods
in
inc
mov
sub
pusha
jmp
mov
xchg
aad
mov
jmp
dec
and
inc
cmp
enter
sbb
pop
sub
push
loopne
call
push
add
or
mov
(bad)
ror
xchg
pop
loopne
push
les
pusha
lea
add
jge
loopne
adc
jmp
test
xchg
inc
jmp
mov
dec
inc
sub
xchg
cmp
push
add
pop
fimul
in
mov
aad
out
dec
mov
call
cld
leave
sbb
or
inc
pop
dec
xchg
pop
nop
jmp
lods
xchg
lods
in
xor
xor
shl
jl
mov
sar
and
pop
clc
inc
lods
enter
push
inc
cmp
adc
sub
add
jge
jmp
jg
mov
push
cli
or
aaa
mov
push
jmp
mov
mov
push
aas
pop
cdq
mov
mov
ds
imul
push
fisub
add
xchg
pop
or
push
add
mov
les
sbb
push
adc
jle
pop
push
jp
or
(bad)
push
xor
jl
ret
je
add
mov
jmp
xlat
xor
sbb
movs
test
mov
inc
push
mov
push
xor
enter
xor
and
and
cmp
gs
inc
popf
push
or
push
and
lea
je
movs
mov
or
jp
mov
pop
ds
add
js
add
and
mov
les
aaa
inc
(bad)
push
sub
cmp
jnp
adc
push
mov
rcl
xor
push
and
ror
sub
(bad)
and
icebp
subps
jg
repz
sub
repz
fwait
pop
daa
or
fsubr
cmovge
and
xchg
fadd
sbb
add
cmp
pop
adc
aas
cmp
and
sub
xchg
(bad)
xor
movs
pop
pop
mov
sub
fucom
dec
push
movs
das
dec
adc
nop
cmps
dec
aaa
and
or
nop
and
test
out
dec
into
cld
push
or
popa
push
ins
dec
mov
daa
inc
dec
cmps
add
loopne
and
jo
test
add
mov
das
cmp
jno
outs
scas
cmp
fwait
mov
mov
sti
imul
add
pop
push
(bad)
or
bound
sar
jmp
jne
loop
adc
or
jb
fadd
xor
add
loop
jl
out
retf
je
and
sbb
inc
push
mov
push
push
and
inc
and
movs
mov
sub
dec
fimul
push
xor
and
or
push
dec
lds
jne
retf
dec
pop
mov
les
popa
xor
xchg
jbe
dec
add
mov
jp
sbb
mov
scas
mov
lahf
(bad)
xchg
or
(bad)
mov
xchg
dec
adc
jnp
fnsave
mov
ret
jne
mov
push
jge
adc
loopne
push
icebp
mov
mov
add
push
in
rcr
mov
xor
sbb
pop
scas
inc
ret
dec
test
xor
fucomip
push
test
xor
aaa
or
mov
dec
je
dec
je
inc
jne
push
cli
cmp
jg
cmp
adc
sub
(bad)
cmp
repz
rol
and
cmp
xchg
clc
cmp
add
int
jmp
stos
xor
out
or
in
cmp
mov
stc
jns
push
outs
sub
loope
ja
js
xchg
sub
sbb
inc
mov
je
dec
xor
mov
or
clc
dec
or
xchg
xor
xor
xor
je
jo
or
aad
aam
lds
loopne
push
jmp
popf
inc
or
daa
(bad)
inc
dec
out
pop
xchg
fist
fidiv
mov
push
push
push
addr16
mov
sub
xchg
lea
cmps
pusha
push
and
sbb
add
dec
xor
jle
adc
test
or
push
xchg
rcl
ret
pop
dec
mov
or
in
popa
not
push
push
daa
push
dec
jmp
in
addr16
jle
xchg
add
push
jmp
popa
push
cmp
push
jmp
pop
pop
aam
jnp
pusha
inc
ret
jl
ror
push
imul
sub
cld
pusha
and
jb
not
fwait
aam
cdq
adc
and
mov
mov
sub
mov
call
add
pop
add
enter
pop
adc
outs
or
xchg
add
ret
daa
and
data16
add
mov
or
aam
add
xor
adc
push
scas
pop
rol
mov
mov
adc
movs
add
inc
fs
and
test
ror
sbb
jne
adc
repz
mov
push
jb
popf
je
fcomp
push
or
sbb
adc
fs
jmp
cmp
mov
loope
mov
inc
leave
or
dec
sub
add
add
repnz
push
cld
add
test
fwait
call
or
sub
add
pop
cmp
into
jge
fsub
pop
rcr
shr
push
adc
pop
lods
out
mov
aam
fstp
dec
mov
cmp
add
stos
inc
not
pop
add
adc
fistp
lea
gs
shl
xor
cdq
das
inc
pop
sbb
imul
adc
jmp
dec
pusha
movs
and
push
dec
sbb
test
add
pop
sub
push
sbb
jge
sbb
inc
or
das
repnz
jmp
test
push
push
mov
jae
jecxz
aam
inc
sub
pop
inc
ds
sub
cmp
dec
ret
sbb
and
add
or
inc
movs
add
adc
rol
mov
inc
mov
inc
xchg
retf
sbb
fimul
iret
push
fs
jg
inc
xchg
and
push
cmp
pusha
imul
movs
or
sbb
jnp
outs
fwait
(bad)
fsubr
stc
sbb
and
fs
jge
sbb
lea
lock
inc
inc
pop
ins
lods
movs
add
cwde
push
push
and
xor
dec
push
loop
push
sub
sbb
push
sbb
xchg
push
(bad)
dec
cmp
aas
xlat
pop
mov
arpl
sti
lds
shl
mul
cdq
add
xor
mov
outs
add
into
ror
and
push
add
xor
nop
or
nop
adc
inc
add
or
mov
sahf
mov
inc
repz
mov
sub
dec
repz
(bad)
shl
push
sub
push
or
adc
fiadd
push
sti
sti
inc
shl
ficomp
out
out
movs
nop
mov
pop
arpl
push
xor
push
loopne
jo
out
pop
dec
adc
dec
test
xor
dec
mov
sub
adc
sub
adc
adc
adc
add
xor
add
inc
ins
sub
jo
xor
shr
pusha
sub
fwait
add
add
stos
add
ds
xchg
rol
je
mov
rcl
push
popf
retf
out
push
mov
adc
jne
xor
push
repnz
and
mov
imul
adc
dec
adc
rcr
xor
pop
mov
fidivr
aad
pop
or
inc
lock
xchg
or
or
fimul
add
cld
add
ja
mov
dec
add
pusha
pop
xor
movs
sub
stos
jnp
(bad)
mov
mov
shl
sbb
pop
push
imul
mov
sbb
or
cwde
js
int3
cwde
inc
aaa
pop
(bad)
sub
sbb
add
call
xor
adc
(bad)
icebp
push
shl
lds
jne
call
sbb
pop
pop
or
lahf
sbb
in
adc
cmp
sbb
call
dec
out
cmps
pop
nop
loope
fdivr
pop
rol
sbb
push
jle
or
sbb
je
xor
je
test
sbb
jno
daa
call
aaa
cld
add
js
sbb
(bad)
nop
push
pop
xor
scas
add
js
xchg
mov
xor
add
call
cld
cmp
loopne
xor
mov
jno
lahf
(bad)
test
push
inc
push
fild
pop
sbb
or
js
jb
popa
and
and
dec
add
shl
push
fcmovnb
pop
ret
imul
and
mov
aaa
jns
fldcw
xor
add
cmc
push
out
test
fiadd
push
pop
push
sub
dec
jle
cmp
push
lods
push
add
lods
mov
pusha
icebp
sub
jns
jl
jmp
rcr
shl
sub
mov
jmp
fsubr
call
push
fcom
ja
mov
inc
push
mov
dec
pop
cmp
jecxz
movs
mov
fst
xor
mov
pop
mov
adc
dec
xchg
pop
aaa
push
outs
ins
fld
add
mov
xchg
push
ins
mov
add
cmp
xchg
inc
push
outs
mov
xchg
cmp
popf
rol
inc
add
lods
sub
test
fcmovb
pop
in
cmps
push
shl
lds
enter
add
xor
leave
add
rcl
jb
cmp
(bad)
fdiv
mov
or
js
fst
pop
mov
loopne
push
adc
pop
leave
or
adc
xchg
cmp
xchg
or
add
xor
mov
adc
xchg
sbb
adc
(bad)
xchg
add
jb
mov
ror
cmps
into
sbb
or
jbe
rol
and
into
jno
fcmovb
dec
mov
mov
sub
fucomp
and
mov
sbb
frstor
sbb
inc
dec
sub
les
mov
arpl
add
in
sub
push
xor
mov
inc
enter
pop
or
add
push
add
inc
fwait
xchg
inc
add
into
fcomip
add
sahf
xor
add
cmps
ins
ss
jp
and
je
inc
add
(bad)
jl
xor
stc
adc
pop
rol
nop
or
nop
add
adc
adc
or
sbb
(bad)
mov
and
mov
inc
inc
jo
lds
ror
add
fs
pop
enter
lsl
das
add
add
mov
mov
mov
mov
(bad)
xor
pop
sbb
cmp
stos
fcmovne
adc
push
mov
mov
push
mov
sub
adc
or
cld
cmps
xor
rcl
movs
and
call
sub
jg
popa
and
ins
ins
repz
outs
arpl
imul
add
push
cld
jg
inc
jg
outs
jmp
inc
js
je
jb
gs
ss
add
arpl
outs
add
gs
cmp
add
outs
arpl
gs
outs
imul
gs
and
push
add
dec
add
add
push
inc
out
lahf
fsubr
adc
gs
inc
ins
jae
jb
gs
lock
gs
adc
pop
inc
inc
or
pusha
cmp
add
push
pop
jae
rol
pop
mov
xchg
mov
dec
cmpxchg
push
pop
retf
sar
rcl
inc
dec
dec
dec
dec
dec
dec
dec
dec
pop
sub
fld
push
retf
pop
pop
pop
(bad)
dec
(bad)
pop
pop
pop
pusha
popa
bound
addr16
imul
jo
jb
je
jbe
clc
mov
(bad)
js
jp
jl
jle
outs
cmp
push
or
outs
ja
and
jo
cmp
test
dec
cmp
jo
cmps
add
xlat
cvtdq2ps
scas
pop
jb
outs
push
gs
ret
and
dec
dec
push
popa
leave
ja
push
sbb
inc
dec
lock
jle
dec
inc
and
push
ss
adc
dec
icebp
add
ins
imul
lock
ins
xor
je
and
fistp
mov
je
sub
and
fs
jb
jb
and
cmps
cmp
or
cdq
fldcw
and
popa
arpl
daa
mov
jne
pop
xor
and
out
pop
cmp
push
xchg
jo
inc
aas
xor
add
dec
rol
mov
mov
out
ins
bound
and
mov
and
jbe
dec
mov
sbb
lock
movs
add
or
fs
idiv
and
addr16
and
je
sub
add
mov
imul
pop
test
fs
ins
and
mov
push
pusha
push
daa
sub
sbb
dec
sub
arpl
cmp
arpl
dec
popa
sub
mov
(bad)
clc
add
inc
xchg
dec
popa
imul
out
xor
int3
or
or
push
call
fild
loop
push
xor
mul
sar
sbb
cmps
xchg
add
xor
shl
xor
xchg
cmp
sbb
xor
inc
add
aaa
inc
popa
push
add
ja
outs
enter
outs
ss
mov
jo
cli
jbe
add
test
xchg
push
mov
xor
push
pop
mov
das
mov
mov
adc
xor
out
add
jb
mov
outs
push
or
arpl
jb
pushf
ficomp
mov
mov
mov
push
pop
jo
xor
mov
popa
pop
or
dec
mov
jno
(bad)
rcl
leave
arpl
imul
(bad)
cmp
ror
jbe
ja
in
ins
popa
and
xor
and
adc
popf
or
pop
push
cmp
pop
sub
jne
jae
xor
pop
popf
mov
jo
rol
outs
add
test
fiadd
dec
jb
push
sub
add
sub
pop
dec
jmp
dec
or
add
cmp
pop
sub
pop
loopne
mov
out
gs
lods
lds
and
dec
cmp
jns
jae
push
xor
or
sbb
leave
xchg
lea
mov
nop
xchg
mov
jb
xchg
xchg
jmp
pop
sub
outs
add
sub
sahf
dec
icebp
aaa
sub
xchg
test
add
adc
add
add
add
add
dec
mov
cmp
pop
lods
dec
push
push
pop
inc
and
or
pusha
out
inc
jbe
adc
add
pop
sub
mov
ja
add
sbb
mov
bound
push
add
daa
jns
mov
xor
data16
push
icebp
jmp
jp
fs
push
(bad)
mov
push
ins
fs
cmp
aas
data16
sub
arpl
ins
push
xor
cdq
(bad)
cmps
cmp
call
outs
jno
sub
xor
pop
inc
fidivr
addr16
mov
out
sub
dec
xor
ltr
ja
fcomp
add
arpl
jns
add
mov
cmp
xchg
ss
add
es
cmps
popf
adc
and
and
jmp
inc
sub
push
push
dec
dec
inc
dec
inc
addr16
imul
out
jg
or
cwde
shr
and
inc
lock
(bad)
stos
call
dec
push
nop
push
aad
push
mov
imul
stc
pop
push
popa
jb
jo
dec
dec
dec
add
inc
les
push
gs
dec
outs
jbe
xchg
dec
cmp
bound
fs
and
jns
add
das
das
out
mov
loop
fimul
inc
je
ja
adc
mov
xchg
pop
jmp
sahf
jnp
outs
adc
sub
mov
xchg
outs
gs
mov
arpl
out
or
jne
jbe
into
jae
cmp
mov
xchg
cmp
fdivr
jg
addr16
jne
loope
sahf
add
xchg
adc
ret
mul
jb
daa
inc
clc
sbb
loope
fisub
js
mov
pushf
jae
push
jp
outs
pop
dec
inc
sbb
in
ds
popa
das
jo
or
ins
add
and
and
adc
xchg
sbb
adc
add
ins
add
add
jb
shl
add
movs
or
fs
adc
add
add
fild
ja
in
je
or
add
mov
pop
sub
push
test
out
(bad)
jnp
push
add
(bad)
(bad)
dec
(bad)
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
(bad)
(bad)
(bad)
jmp
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
(bad)
dec
retf
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
(bad)
jmp
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
call
xor
push
test
push
add
push
mov
movs
fsub
adc
add
out
pop
outs
rcl
outs
ja
je
cs
inc
mov
jb
bound
dec
sti
imul
dec
popa
mov
pop
div
inc
push
movs
jne
daa
pop
(bad)
std
cmp
fild
dec
mov
outs
js
push
inc
push
xor
cs
dec
cmp
sub
add
add
or
fcomp
dec
jae
rol
push
or
push
mov
sub
mov
pop
into
jl
inc
dec
or
int
loope
add
xchg
inc
add
inc
mov
push
or
sub
cmp
inc
pop
fcom
mov
xor
adc
push
or
jo
add
and
push
iret
jp
mov
fbstp
and
ins
xchg
and
daa
xchg
dec
sbb
and
ss
mov
and
jb
jo
ds
sub
dec
inc
jb
jns
daa
pop
mul
adc
pusha
sub
push
jns
gs
xchg
mov
(bad)
mov
lods
fs
pusha
xchg
push
rol
movs
sbb
arpl
jns
imul
pop
pusha
inc
jbe
dec
aaa
push
jns
dec
add
sbb
scas
dec
nop
pop
(bad)
shr
push
and
or
xor
dec
lahf
lock
push
push
xor
xchg
pop
pop
pop
push
lods
jbe
or
jae
cmp
xchg
adc
scas
cmp
call
out
jae
addr16
sub
gs
and
popw
or
xchg
inc
push
push
push
push
dec
mul
dec
push
jne
repnz
inc
outs
xchg
push
into
cmp
cmp
lods
scas
dec
jge
sbb
cmp
mov
imul
mov
push
adc
and
xor
jg
popa
lods
fdiv
mov
sub
or
pop
das
je
push
mov
xchg
daa
xchg
mov
rcr
jmp
popw
pop
cmp
out
scas
stc
cmp
add
ds
sub
mov
jl
push
addr16
jle
sub
jnp
sub
jle
add
xor
add
sub
sub
fidivr
pop
sub
inc
mov
add
push
and
xchg
iret
cmp
mov
(bad)
pop
sbb
sbb
push
jb
imul
jo
ss
mov
iret
or
in
cld
sbb
sbb
push
adc
jae
inc
jo
sub
xor
sub
inc
dec
dec
repz
inc
adc
cld
inc
lock
iret
repz
rol
(bad)
inc
ds
stc
cmp
mov
in
fdivr
jnp
cmps
mov
sub
mov
push
test
movs
repz
push
push
pushf
nop
mov
test
cmp
repz
push
cmp
repz
push
push
dec
dec
iret
repz
inc
inc
cmp
xor
cmp
repz
sub
sbb
ds
repz
cld
inc
hlt
out
sahf
out
rol
mov
popf
iret
jnp
jo
xor
in
inc
out
sahf
out
lods
mov
dec
repz
xor
sbb
inc
lock
iret
repz
mov
sahf
out
and
aas
fdiv
cmp
cmps
inc
dec
dec
dec
push
push
and
and
add
and
inc
dec
add
dec
dec
inc
add
pop
popf
cli
das
push
cmps
dec
repz
inc
sbb
imul
dec
cmp
dec
push
dec
out
sbb
fiadd
mov
jmp
imul
mov
sbb
das
ins
out
popf
mov
inc
push
outs
inc
pop
addr16
fsubr
out
xchg
mov
mov
fbstp
inc
cs
inc
ret
inc
sbb
add
jnp
dec
outs
inc
dec
out
rcl
add
xor
inc
jne
cmp
bound
ret
cs
and
jp
push
jo
popf
add
gs
popa
pop
push
iret
inc
popa
daa
fsub
shr
xchg
xchg
xor
aaa
cmp
scas
and
mov
inc
test
inc
rcl
hlt
outs
es
jbe
pusha
test
(bad)
jb
mov
pop
imul
loope
cmp
dec
adc
stos
dec
jbe
mov
inc
aas
push
cmp
add
lods
mul
dec
jmp
das
mul
fdivr
or
push
out
and
imul
cmp
xor
pop
fbstp
inc
dec
bound
addr16
not
xlat
mov
xchg
dec
outs
push
clc
ficomp
push
push
adc
jo
push
pop
or
jge
imul
sub
popa
aaa
cwde
add
add
ja
mov
dec
(bad)
outs
clc
mov
sti
sub
ins
inc
jns
and
jne
ficomp
mov
push
pop
pop
rcr
inc
sub
mov
not
mov
push
inc
mov
xchg
mov
das
jbe
xchg
gs
xchg
arpl
fisubr
in
push
jmp
jnp
js
pop
jae
fisub
push
xchg
or
mov
ins
aas
pop
push
out
adc
bound
inc
push
js
push
pop
ret
fisubr
and
fdiv
aad
imul
push
push
push
js
cmp
dec
mov
test
out
mov
jae
out
push
cmp
push
mov
imul
imul
dec
adc
push
inc
push
pop
ds
sbb
rol
dec
out
jge
imul
push
pop
out
pop
clc
pop
into
inc
dec
aas
inc
push
sahf
mov
in
mov
(bad)
jae
add
test
pop
fs
jb
imul
bnd
mov
pop
and
faddp
xchg
ja
ds
imul
lahf
inc
and
mov
retf
cmp
mov
dec
inc
xchg
pop
ins
adc
scas
pop
pop
neg
jbe
rol
pop
push
jp
outs
rol
adc
ins
jle
ror
es
push
add
push
sub
adc
cmc
icebp
icebp
out
arpl
imul
lods
jge
add
xchg
jp
idiv
xor
call
not
jae
inc
mov
fild
sahf
movs
pushf
push
xchg
mov
xchg
shl
xchg
mov
std
idiv
jnp
pop
ds
push
jle
push
pop
cmp
add
cdq
or
and
ins
js
bound
push
add
dec
pop
in
stc
(bad)
push
outs
pop
addr16
dec
xchg
aas
shl
push
imul
gs
xor
push
in
shl
dec
jae
outs
ja
xor
and
dec
popa
push
jns
ins
dec
lods
jmp
jne
imul
adc
das
aad
loopne
mov
movs
jne
iret
push
jno
dec
push
data16
adc
push
add
addr16
outs
scas
mov
cmp
cmp
cs
inc
enter
invd
inc
mov
jae
sub
mov
inc
dec
jle
sub
mov
and
arpl
push
fst
add
aaa
xlat
and
pop
xchg
shr
adc
stos
mov
mov
mov
mov
lods
pop
jae
sbb
sbb
sbb
xchg
js
push
sbb
js
aaa
mov
outs
in
cmp
mov
mov
sub
add
sbb
push
mov
push
sbb
imul
push
pop
gs
popa
movlps
ins
scas
outs
or
arpl
mov
xor
jae
push
inc
imul
adc
mov
iret
pusha
pop
fdivp
mov
sbb
je
mov
fisub
inc
jns
das
das
fnsave
adc
fs
aaa
dec
xlat
lods
or
push
inc
dec
push
faddp
adc
jnp
or
cmp
loopne
jo
dec
sub
pusha
push
ds
dec
jle
mov
push
mov
xor
add
jae
sysret
or
addr16
fcom
pop
mov
and
(bad)
sub
aaa
pop
arpl
dec
and
adc
jmp
adc
cmp
aad
aaa
pop
adc
bound
pop
inc
dec
fisubr
lods
xchg
inc
dec
ins
dec
fcom
pop
dec
daa
aas
mov
mov
pop
dec
(bad)
xor
shl
mov
pop
inc
xlat
inc
jb
(bad)
cmp
aas
xor
dec
ins
and
push
adc
pop
jb
dec
out
mov
out
xchg
dec
cmp
push
add
das
xor
ret
add
jmp
dec
dec
btr
add
adc
(bad)
jmp
bound
ja
inc
sti
inc
ficom
dec
xchg
and
call
fimul
adc
and
loopne
jb
dec
sbb
inc
push
mov
dec
sbb
aaa
ficom
pop
inc
inc
inc
(bad)
push
loop
push
sbb
arpl
pop
ins
add
pop
int
xor
push
cmp
mov
dec
or
movs
dec
xchg
out
(bad)
cs
dec
adc
inc
in
bound
add
cmps
pop
mov
repz
pop
push
int3
mov
and
cs
jae
lds
call
jg
and
lods
push
daa
dec
add
lds
mov
daa
push
daa
adc
fadd
cmp
pop
jb
aaa
ss
pop
jb
xor
pop
jb
pop
xor
xor
push
pop
aas
xor
dec
aas
jp
lods
imul
(bad)
fcmovb
ja
ja
add
rcr
sub
mov
mov
pop
push
jae
imul
inc
scas
lds
rol
arpl
sbb
ins
fist
push
pop
inc
mov
mov
push
cmps
add
adc
rdtsc
xchg
outs
mov
xor
cmp
ss
xchg
xor
scas
outs
push
outs
inc
xlat
outs
scas
inc
pop
add
pop
cmp
sbb
mov
xchg
inc
pop
pop
push
pop
and
cwde
xchg
repz
dec
or
mov
or
inc
xchg
pop
pop
jae
les
jo
push
aaa
popf
cmps
or
or
sbb
imul
xor
(bad)
call
inc
or
sbb
sahf
mov
push
jo
test
or
js
or
add
jae
fadd
or
ins
repz
add
add
and
aaa
add
add
inc
push
call
inc
jg
jns
je
xchg
loopne
lock
cmps
ret
js
cld
pop
push
pop
mov
mov
popf
add
cs
add
add
pop
add
pop
jb
add
jge
and
jns
popa
bound
push
adc
test
aad
mov
adc
addr16
sbb
in
push
push
outs
jo
ins
outs
cli
inc
jb
mov
xor
inc
jne
imul
call
jb
cmp
cmps
in
sahf
ins
es
inc
arpl
push
in
mov
imul
sub
add
stos
ret
loope
or
iret
lods
and
cmp
push
jb
cmp
addr16
int3
push
jbe
mov
sub
push
ss
gs
lods
in
aad
ins
xor
fwait
inc
outs
cmp
enter
imul
push
xchg
adc
popf
retf
mov
jne
xor
push
addr16
or
in
outs
outs
push
push
scas
imul
les
pop
sbb
xchg
dec
sbb
popa
mov
mov
imul
popa
push
scas
add
popf
nop
enter
pop
or
add
call
fild
inc
or
ins
bound
mov
jl
imul
cs
addr16
sbb
fs
add
or
fisub
inc
dec
arpl
in
or
ins
mov
ss
pop
pusha
add
pop
push
and
dec
dec
imul
mov
sahf
dec
mov
or
xlat
dec
ins
pop
fdivr
imul
pop
dec
jo
adc
add
xchg
dec
mov
or
push
push
xor
call
data16
dec
sti
loopne
sub
outs
and
push
imul
dec
push
gs
inc
mov
inc
popa
cmps
popa
add
xchg
inc
xlat
into
adc
jb
pop
push
in
mov
imul
(bad)
gs
jns
ss
les
mov
sub
push
in
(bad)
ficom
ja
stos
stos
push
push
mov
or
jne
mov
stc
or
imul
outs
push
data16
loopne
push
jns
das
push
and
push
cmp
pop
add
dec
mov
cmps
jo
dec
add
cmp
aas
mov
adc
add
into
out
imul
add
ds
inc
push
xchg
je
jge
jbe
(bad)
sub
inc
push
hlt
ins
or
push
add
or
jl
or
or
mov
mov
push
add
or
test
jle
jle
add
add
adc
int
jle
jle
add
adc
fist
add
adc
out
aaa
jg
jle
add
push
add
pop
add
add
add
aas
aas
aas
aas
sbb
adc
add
sbb
and
add
aas
aas
aas
sbb
ds
add
sub
xchg
push
add
stc
std
and
add
and
pop
inc
add
add
sub
and
push
ja
cld
cld
cld
or
add
add
add
mov
add
sar
and
popf
cmp
mov
add
add
sbb
iret
scas
es
daa
add
(bad)
int
out
mov
add
shl
sub
(bad)
dec
add
sub
in
sub
stc
sub
jmp
ret
push
or
add
mov
add
add
adc
add
outs
cmp
inc
jp
jp
add
das
add
fnstenv
dec
add
or
jne
lahf
jmp
pop
add
push
repz
stc
and
add
bound
add
add
aas
mov
add
xor
jg
add
aas
aas
aas
xor
xchg
xor
sahf
xor
stos
aas
aas
aas
aas
aaa
add
add
iret
pop
aas
cmp
rcl
dec
add
cmp
fdivr
mov
retf
add
loopne
add
adc
mov
daa
and
add
inc
jle
jle
ret
adc
inc
and
sub
mov
add
jbe
add
aas
fdivr
pop
or
push
clc
push
js
push
fld
and
mov
inc
ja
jmp
add
sbb
jge
add
in
pop
leave
adc
adc
(bad)
push
push
aad
jmp
pushf
cmp
add
inc
cld
push
(bad)
cli
jmp
push
neg
ret
xchg
mov
out
out
(bad)
clc
pop
mov
push
(bad)
jmp
add
scas
add
scas
pusha
dec
sti
es
call
out
sti
cmp
addr16
push
in
or
lock
cmp
xchg
push
fisttp
sti
das
call
inc
push
test
dec
dec
push
je
lock
jle
dec
mov
dec
or
pop
sbb
dec
jmp
xor
movd
push
add
cmp
add
or
das
(bad)
popa
ins
jo
cmp
push
and
scas
adc
outs
jne
shr
bound
push
mov
sbb
outs
je
data16
add
inc
bound
add
or
add
ja
jb
or
adc
inc
das
push
inc
daa
iret
inc
out
inc
cmp
cmp
add
and
lahf
add
ja
jns
mov
rcl
add
xchg
je
sub
inc
sub
xor
out
outs
fs
and
push
jb
arpl
or
push
mov
outs
pop
and
inc
sub
ds
jae
add
sub
push
cmp
or
jge
jno
mov
cdq
push
and
add
push
bound
jae
frstor
push
jbe
pop
jnp
out
je
xor
stos
push
push
popa
push
jae
call
sbb
or
dec
outs
popaw
adc
neg
or
int
aaa
sbb
pushfw
ins
enter
scas
adc
push
and
call
pop
xor
mov
popa
data16
aas
and
add
push
dec
pop
sahf
push
or
dec
retf
inc
shl
outs
xor
fs
ja
jne
inc
mov
pusha
in
sub
push
data16
sub
inc
data16
imul
data16
jo
enter
fs
loope
pop
sub
mov
nop
jbe
pusha
je
jae
and
arpl
cmp
or
adc
sbb
outs
and
add
dec
sbb
cwde
or
adc
mov
and
clc
cmp
sbb
(bad)
jns
leave
and
ret
push
jb
sbb
sub
push
cmp
outs
imul
pop
shl
sbb
je
xchg
pop
rcl
sahf
push
js
ins
clc
fisttp
xor
rol
and
je
ret
sbb
and
into
add
sbb
jo
sub
aaa
aam
jae
loopne
rol
(bad)
cwde
nop
js
sub
cmp
dec
xor
pop
sub
mov
pop
(bad)
out
cmp
dec
cmc
aaa
add
pop
or
jne
jge
push
push
rol
add
or
(bad)
into
push
inc
push
inc
adc
div
(bad)
cmp
jne
ins
jnp
sahf
(bad)
imul
js
push
mov
dec
les
xlat
ss
test
jnp
xor
outs
shl
jb
popa
ror
push
add
outs
int3
repz
add
push
ins
dec
stos
clc
(bad)
push
sub
pop
jne
sti
and
jl
inc
adc
and
xor
mov
xor
push
loopne
mov
jo
push
fst
and
rcr
sbb
jns
js
(bad)
je
dec
je
(bad)
popa
mov
sub
dec
or
jbe
pop
jmp
dec
xor
jo
inc
imul
adc
cmp
push
xor
mov
js
and
fcomp
imul
bound
les
ins
inc
sti
pop
add
shr
xor
sub
xor
lods
adc
in
add
xor
add
enter
lds
outs
lock
ins
jge
outs
xor
icebp
pop
xor
aaa
xlat
or
dec
ins
push
lods
mov
jns
inc
adc
fsubr
add
in
push
jl
or
add
scas
inc
mov
ror
sub
out
mov
inc
add
dec
dec
inc
inc
imul
fnstsw
ins
pop
xor
aaa
movs
rcr
jne
mov
push
dec
push
push
(bad)
pop
addr16
sbb
mov
addr16
sub
jno
dec
push
in
adc
das
xor
das
add
int
ja
sub
in
cmc
mov
add
mov
jp
std
add
inc
push
inc
sub
and
fdiv
or
push
sub
outs
pop
pop
iret
loopne
push
lea
dec
out
sbb
clc
push
in
stos
lods
movs
(bad)
dec
imul
call
pop
jbe
ror
mov
loope
cmps
push
mov
and
sub
inc
popa
pop
dec
(bad)
inc
add
in
add
popa
inc
add
push
aas
add
and
pop
nop
cmp
add
mov
add
test
imul
jmp
cs
push
dec
out
pop
aad
inc
imul
aaa
mov
push
add
and
mov
js
mov
push
cmp
iret
cmp
mov
dec
jae
test
dec
rol
popa
xchg
adc
mov
ret
pop
and
test
aas
xlat
cs
add
les
sbb
mov
push
cli
into
dec
mov
iret
push
jne
dec
mov
inc
loop
add
sbb
xor
push
dec
pop
jg
and
lods
adc
inc
lahf
ret
(bad)
pop
push
fs
mov
fwait
jo
fwait
adc
outs
dec
inc
addr16
adc
cmp
int3
xchg
mov
adc
dec
pop
or
out
(bad)
or
mov
push
inc
inc
inc
sbb
xchg
test
(bad)
and
mov
xor
movs
scas
or
ret
mov
mov
sub
inc
clc
push
adc
pop
push
adc
push
push
cmps
jecxz
fimul
mov
push
adc
cmp
pop
dec
pop
xor
(bad)
cmp
test
inc
push
add
pop
or
loope
mov
pop
(bad)
push
inc
repnz
fild
add
inc
fcmovnb
mov
jb
xchg
iret
inc
push
push
(bad)
jge
or
push
jg
push
or
sbb
inc
mov
(bad)
push
pop
xchg
fisttp
scas
pop
ss
ins
daa
dec
out
daa
xlat
sub
repnz
adc
xlat
push
mov
xor
push
dec
pop
dec
add
dec
pop
xchg
sbb
fisttp
add
inc
ins
pop
ret
jmp
sub
jmp
inc
cmp
add
jo
mov
mov
push
mov
xor
push
cs
push
inc
mov
inc
adc
push
xor
test
fisubr
jo
cs
scas
stos
outs
inc
das
jae
xor
fs
mov
in
push
xor
push
jmp
fild
adc
xor
inc
int3
dec
cld
wrmsr
xor
and
in
cmc
fimul
sub
inc
dec
push
push
cmps
xchg
push
mov
mov
setg
xchg
sub
pusha
add
inc
pop
push
neg
xlat
fisubr
pop
daa
or
dec
or
pop
mov
dec
das
rsqrtps
les
sti
push
faddp
inc
inc
sub
popa
popa
or
daa
push
neg
or
stos
pop
dec
ds
in
ss
push
inc
sbb
inc
fcmovu
cmp
aaa
jae
mov
jae
dec
sbb
mov
jmp
sub
jmp
mov
mov
pop
cs
ins
shr
aas
sar
ss
inc
mov
nop
or
cmp
mov
ja
lock
sti
inc
mov
push
aaa
dec
daa
mov
aaa
stos
dec
arpl
add
lea
frstor
jg
jae
lods
loopne
lods
daa
das
mov
jmp
xchg
das
adc
pop
test
ficom
ds
push
adc
das
dec
adc
pop
and
das
cmp
pop
fcomp
push
fist
dec
mov
dec
outs
push
scas
popw
xlat
push
push
iret
inc
imul
inc
sti
aas
pop
fwait
jp
rcr
push
pop
sbb
dec
fisubr
fstp
pop
sub
and
adc
dec
ret
fidivr
daa
aas
lock
xchg
jae
pop
inc
(bad)
mov
iret
sbb
lea
push
pop
aas
ja
ins
push
mov
aas
xlat
inc
call
inc
mov
jnp
inc
ja
inc
das
mov
sti
and
jae
mov
aas
jecxz
mov
push
daa
mov
daa
inc
iret
ficom
mov
iret
das
enter
iret
pop
iret
pop
mov
mov
xlat
sub
das
out
cmp
dec
and
add
jp
xchg
inc
(bad)
mov
lock
in
rcl
xchg
push
das
adc
add
xor
aas
mov
aas
dec
arpl
aas
ins
mov
pop
pop
inc
dec
jbe
in
dec
or
pop
push
jle
bt
adc
sbb
adc
bound
sbb
sub
or
cmps
push
and
mov
push
aas
(bad)
pop
pop
jno
ss
les
mov
push
ja
inc
imul
push
pop
jb
push
dec
aaa
xchg
in
inc
or
xchg
arpl
or
(bad)
inc
ja
arpl
inc
sub
ret
jge
push
scas
jmp
mov
push
hlt
(bad)
xchg
(bad)
out
mov
and
cmps
das
xlat
test
inc
and
mov
cmp
adc
push
aas
xchg
push
aaa
push
fisubr
pop
lahf
div
imul
pop
hlt
pop
das
fisttp
sbb
into
sti
and
arpl
adc
or
adc
mov
or
rol
mov
imul
mov
mov
jg
push
fiadd
cmps
push
stos
cmp
pop
aaa
daa
push
or
pop
push
imul
daa
retf
inc
mov
push
fld
mov
xor
das
mov
add
push
out
fucomi
pop
in
loope
daa
das
daa
mov
pop
stos
das
das
jg
bound
ret
jmp
cmp
mov
lods
jbe
jg
jg
jbe
and
aas
push
mov
push
aaa
pop
pop
mov
mov
push
faddp
inc
arpl
pop
jmp
imul
das
mov
imul
inc
imul
(bad)
sahf
aaa
inc
sub
fsub
mov
mov
mov
mov
fiadd
scas
adc
loopne
daa
add
ins
pop
and
rol
addr16
(bad)
fisubr
push
movs
cmp
push
rcr
daa
pop
das
sub
push
pop
push
mov
mov
ins
mov
dec
xor
aas
das
lods
mov
mov
xchg
sbb
daa
push
pop
pop
pop
push
cs
dec
scas
daa
mov
dec
test
ss
inc
inc
xchg
or
sti
or
pop
jnp
inc
das
stos
jg
retf
mov
inc
inc
pop
pop
adc
push
xchg
arpl
mov
test
aaa
iret
dec
(bad)
push
out
retf
sub
movs
add
pop
mov
addr16
xor
adc
sub
dec
pop
add
daa
cmp
(bad)
outs
push
dec
daa
adc
in
dec
ret
das
push
sub
pop
ja
pop
popa
adc
inc
inc
movlps
dec
out
cmp
mov
pop
lods
rol
aaa
dec
xchg
lahf
add
pop
cmp
sub
pop
mov
fild
rcr
jmp
ins
stos
push
cmp
imul
dec
mov
inc
lods
lods
(bad)
das
(bad)
das
sbb
sbb
xchg
mov
nop
out
push
out
aaa
dec
das
inc
fsubr
push
mov
dec
pop
aaa
rol
mov
mov
or
inc
sub
mov
je
imul
push
add
pop
iret
push
rol
lods
fcom
aas
inc
mov
lods
mov
sbb
cmps
dec
aad
fimul
das
aaa
pinsrw
aas
dec
mov
(bad)
xlat
aas
inc
lods
jbe
pop
pop
push
inc
adc
ins
jne
aas
(bad)
mov
dec
mov
cmp
imul
sub
lahf
inc
push
bsf
cmove
dec
dec
stos
sbb
aas
ror
push
mov
dec
test
sbb
scas
mov
inc
xor
inc
mov
inc
ja
add
inc
addr16
xor
mov
inc
inc
ins
cmps
inc
out
ficom
dec
mov
push
stos
inc
mov
adc
pop
jp
outs
dec
(bad)
mov
lahf
fisub
cs
dec
mov
sub
inc
dec
mov
dec
iret
push
add
das
or
mov
inc
(bad)
scas
pop
mov
ins
addr16
inc
shl
dec
or
jne
push
hlt
push
iret
add
or
cmp
add
xlat
fimul
nop
aas
dec
inc
inc
popa
lea
xchg
mov
addr16
mov
push
(bad)
jmp
pop
add
inc
arpl
inc
mov
cmps
inc
fld
pusha
lea
cmp
mov
das
aaa
daa
mov
das
mov
fadd
sbb
ins
xor
sub
(bad)
xor
cli
arpl
fistp
pop
inc
das
inc
imul
ins
inc
mov
scas
pop
aas
(bad)
push
imul
rcl
adc
retf
inc
fcomi
aas
not
xchg
fist
inc
movs
mov
sahf
pop
aas
scas
ficomp
loope
pop
shl
mov
daa
mov
pop
sti
and
das
sbb
push
(bad)
(bad)
dec
loope
iret
ja
sbb
inc
jb
mov
mov
adc
rcl
dec
dec
repz
jbe
push
scas
dec
dec
dec
imul
adc
imul
xchg
pusha
pop
jnp
inc
sbb
dec
mov
sti
push
inc
mov
ficom
sbb
mov
enter
adc
(bad)
sti
fistp
pop
pop
xor
xlat
cmp
push
sti
add
inc
ret
mov
fsubr
jb
aaa
push
scas
mov
push
pop
das
jnp
push
ins
inc
pop
iret
das
push
aaa
push
mov
aas
adc
aaa
pop
lods
jbe
xchg
mov
jne
fld
xchg
aas
mov
mov
iret
mov
add
pop
jae
movs
add
test
arpl
(bad)
sbb
mov
inc
(bad)
pop
jg
pop
aad
sbb
pop
sbb
mul
outs
pop
sub
das
inc
push
adc
aas
rcl
mov
mov
mov
mov
or
stos
pusha
lds
test
jg
mov
xchg
aaa
add
and
mov
mov
inc
cmp
mov
das
inc
dec
aaa
aas
xor
mov
ja
ss
or
sti
jmp
dec
sub
mov
(bad)
ins
retf
push
jecxz
mov
(bad)
push
pop
pop
fadd
outs
mov
xchg
push
rol
inc
stos
loopne
adc
mov
mov
pop
aas
inc
ins
(bad)
and
pop
loopne
add
test
cmps
aas
mov
jbe
daa
mov
outs
ret
add
and
push
daa
addr16
cmp
sub
inc
mov
data16
pop
jo
push
pop
inc
pop
jg
mov
add
stos
aas
aaa
jns
mov
fwait
add
nop
inc
loop
(bad)
and
add
das
inc
movs
xchg
cwde
xchg
mov
jnp
xlat
inc
push
sub
sub
dec
nop/reserved
sbb
pop
sahf
jmp
add
jbe
bound
push
cs
cmps
js
jne
push
addr16
cli
xchg
cmc
jl
outs
imul
xchg
popa
mov
mov
push
jecxz
dec
retf
push
pop
mov
jecxz
and
clc
fidivr
add
mov
jne
ret
ss
mov
je
frstor
add
test
cmpps
enter
andnps
sbb
retf
imul
fcmovu
cmps
mov
pop
(bad)
lods
(bad)
jecxz
daa
jae
pop
pop
(bad)
loopne
cmps
and
dec
mov
jcxz
js
ins
sti
pop
(bad)
call
dec
ja
outs
pop
inc
push
popa
pop
(bad)
or
mov
add
cld
lock
ds
retf
cmps
inc
retf
je
xchg
inc
or
loope
cmp
xchg
outs
push
cmp
nop
sub
pop
je
jl
pusha
cs
addr16
pop
dec
mov
sbb
pop
mul
je
xchg
add
out
adc
(bad)
xor
jb
pop
ror
clc
dec
out
pop
fld
jae
pop
fisub
jecxz
lods
sbb
in
fisttp
out
mul
dec
inc
and
outs
dec
jecxz
popa
pop
push
out
jb
aad
mov
pop
xchg
xor
sbb
fsub
shl
dec
outs
popf
cmp
rcr
jae
xor
sub
adc
fist
cmp
xor
sbb
pop
sbb
lahf
lahf
push
ins
(bad)
mov
add
jecxz
sub
and
dec
pop
addr16
lods
lea
(bad)
bts
pop
dec
cmp
arpl
in
mov
jg
jle
push
sub
inc
xchg
xchg
inc
mov
pusha
lahf
sbb
dec
push
jns
aad
cmps
pop
scas
xor
lods
xchg
je
bound
cmp
sahf
fimul
imul
sbb
pop
clts
imul
jecxz
pop
add
cmp
mov
aaa
dec
ror
in
cmps
iret
mov
movs
pop
push
seta
dec
xor
or
mov
xor
jecxz
push
push
es
lds
jbe
push
mov
cmps
push
push
jb
in
jnp
addr16
push
je
cmp
add
sub
jle
push
dec
addr16
sbb
rol
bound
push
pop
add
dec
(bad)
lahf
and
test
xchg
pop
push
adc
cs
cmps
pop
das
jmp
push
pop
mov
jne
out
ror
aaa
loope
or
inc
data16
pushw
fiadd
out
fwait
mov
outs
scas
push
jmp
stos
ins
pop
js
imul
mov
dec
dec
inc
dec
push
dec
mov
arpl
inc
lods
inc
push
xor
push
ja
jl
and
push
bound
inc
data16
pushf
rsm
inc
xchg
pop
jl
xchg
mov
inc
data16
sbb
push
jbe
icebp
mov
lahf
inc
aaa
push
inc
retf
xlat
inc
gs
cmp
jecxz
push
pop
movs
inc
inc
pop
(bad)
outs
mov
jl
aaa
or
mov
mov
xor
pop
add
mov
dec
ins
adc
les
es
sbb
pop
ja
lock
pop
jae
or
push
test
repz
jp
pusha
lds
inc
mov
add
ins
xchg
outs
pop
and
cs
ins
cmp
jmp
addr16
inc
cmp
js
adc
push
mov
daa
ins
cli
push
push
out
addr16
sub
repz
push
outs
jbe
jecxz
xchg
frstor
and
enter
outs
pop
mov
xchg
imul
adc
pop
dec
or
aaa
imul
es
repz
fcomp
dec
test
push
jne
or
fwait
mov
daa
inc
jo
xor
out
retf
jae
jbe
or
ds
xor
xchg
push
jnp
mov
stos
and
dec
sbb
lock
rcl
pop
xor
push
fadd
addr16
aaa
dec
shl
adc
xchg
and
mov
and
xchg
jp
out
and
inc
mov
jo
add
fwait
sbb
mov
mov
push
jbe
jmp
les
jecxz
mov
imul
cmp
cmp
xchg
sti
arpl
mov
jp
repz
push
pusha
add
loopne
rcr
mov
and
push
dec
aad
into
inc
packssdw
lahf
daa
mov
push
push
loope
dec
push
cmps
inc
pop
sub
add
push
inc
or
sahf
shr
and
dec
fistp
bound
pop
aaa
xlat
aas
xor
dec
loopne
pop
fwait
fwait
mov
sub
sbb
jae
add
mov
xchg
adc
adc
lods
mov
and
mov
or
adc
(bad)
addr16
(bad)
call
test
xchg
aas
out
lea
jp
dec
(bad)
sbb
(bad)
or
outs
scas
(bad)
pop
adc
daa
dec
fbstp
xor
push
enter
call
test
retf
adc
movs
call
pusha
ins
dec
sahf
sbb
imul
xor
pop
ins
aaa
fucomp
cmps
dec
aaa
inc
iret
inc
pop
adc
daa
mov
xor
inc
mov
or
pop
xchg
test
mov
shl
mov
inc
push
inc
sub
cmps
cmps
adc
popa
lock
inc
add
fwait
xlat
pop
push
sbb
add
daa
pop
scas
mov
inc
dec
aaa
or
mov
xchg
xchg
mov
jb
enter
cmps
inc
inc
inc
add
sub
push
scas
das
shr
add
lahf
fiadd
test
aas
pop
mov
add
mov
xor
pusha
pop
rcl
push
arpl
lods
imul
adc
push
mov
sub
addr16
xor
mov
cs
(bad)
shl
mov
xor
mov
mov
fadd
dec
mov
mov
pusha
mov
pop
dec
ja
adc
jecxz
adc
fild
pusha
test
sub
aas
imul
pop
imul
dec
sub
fcmovnu
jmp
xchg
mov
mov
in
mov
add
stos
add
and
inc
mov
mov
ficom
and
stos
jo
xchg
clc
mov
jbe
or
cmp
jb
jnp
push
cmovge
cmps
xor
pop
push
cmp
retf
mov
(bad)
cmp
daa
pop
ins
pusha
xlat
sahf
call
push
sbb
pop
aas
push
rcl
enter
sbb
in
sub
push
dec
push
cmp
dec
aam
ja
lahf
jmp
outs
fsub
push
dec
mov
sub
jmp
mov
cmp
pop
inc
mov
cmps
or
adc
rcl
xchg
js
addr16
popf
fcom
daa
lahf
das
fild
mov
add
out
mov
inc
imul
lods
push
xlat
pop
daa
jo
push
push
xadd
add
push
daa
mov
sti
sti
aas
outs
sub
jb
lods
aam
adc
pop
test
xchg
bound
xchg
jbe
fcmovb
dec
jne
fs
in
pusha
(bad)
scas
push
add
mov
call
mov
inc
outs
into
cs
cwde
cmc
dec
fs
jae
sub
mov
push
scas
and
sbb
pop
outs
out
cmp
ins
add
pop
imul
jne
aaa
pop
movs
popa
mov
out
jne
inc
movs
popa
mov
daa
jne
add
daa
imul
fild
test
mov
xchg
sbb
test
addr16
or
push
loopne
mov
push
arpl
jge
pop
pop
inc
addr16
ss
push
cmp
ins
and
push
das
push
and
(bad)
push
jno
aas
neg
outs
and
dec
mov
rcl
aaa
inc
scas
daa
mov
leave
push
outs
cld
or
popa
jo
pop
push
gs
movs
test
inc
js
sub
sub
out
outs
neg
outs
neg
out
scas
dec
dec
and
push
and
mov
aas
add
and
cmp
sub
fidiv
jne
mov
das
adc
aaa
sbb
aas
xor
pop
jp
hlt
js
outs
aaa
js
pop
inc
sub
stos
jae
lahf
lds
sbb
sbb
adc
mov
pop
fwait
add
(bad)
mov
(bad)
adc
mov
mov
loop
ret
aaa
mov
and
mov
ds
daa
daa
add
mov
adc
dec
rcl
daa
je
stos
or
xchg
pop
pop
gs
mov
mov
ror
arpl
mov
dec
push
aas
mov
cmp
xor
dec
mov
xlat
mov
mov
xchg
xor
sub
push
das
fild
push
retf
dec
pusha
and
inc
call
ret
and
int
sub
mov
(bad)
(bad)
or
pop
das
inc
xchg
sahf
add
push
mov
adc
lods
push
(bad)
fadd
rcr
retf
mov
outs
pop
rcr
jnp
dec
dec
mov
ret
push
daa
xchg
lods
retf
scas
jmp
and
xor
adc
imul
mov
adc
inc
mov
es
ret
and
adc
adc
arpl
jo
xlat
bound
call
cmp
iret
push
inc
fmul
jb
and
rep
das
mov
cs
mov
adc
inc
adc
mov
out
push
sahf
or
jo
sbb
jnp
inc
push
dec
arpl
jg
test
jo
adc
push
rcl
adc
les
jb
gs
(bad)
fdiv
jae
sub
add
mov
inc
pop
and
js
ins
rcl
add
les
push
pop
or
sub
sbb
cmp
scas
out
xchg
inc
sub
or
pop
or
push
sub
push
push
pop
pop
mov
rol
pop
add
jle
daa
mov
(bad)
aas
aaa
adc
inc
xchg
clc
aas
int
add
fxch
pop
sti
push
sar
fisttp
leave
out
leave
enter
mov
dec
mov
ret
push
sub
push
aas
fist
(bad)
cmp
pop
add
push
call
push
add
dec
inc
add
repnz
add
imul
(bad)
cmps
ja
(bad)
lahf
add
pop
jnp
push
daa
enter
aad
in
jo
aas
out
cwde
add
jo
ror
aam
sbb
out
int
aam
add
loopne
div
or
std
xor
clc
inc
mov
jg
(bad)
pop
sbb
mov
cmp
fidivr
stc
push
in
inc
clc
ds
iret
inc
xchg
mov
inc
es
cmp
aas
bound
popf
cs
in
dec
pop
mov
iret
aas
dec
cld
dec
aas
and
xchg
adc
pushf
dec
dec
call
cdq
nop
aas
imul
jg
mov
bound
push
pop
mov
push
bswap
push
in
fidiv
dec
mov
dec
scas
push
(bad)
jns
popf
dec
dec
push
mov
enter
jg
jge
inc
fmul
test
fild
sbb
rcr
mov
ja
inc
mov
push
mov
mov
das
cdq
mov
pop
xor
daa
int
enter
jno
mov
les
pushf
test
rcl
pop
fisttp
fistp
jecxz
daa
xchg
adc
jbe
xchg
out
cmps
lock
or
inc
icebp
mov
or
or
fs
aam
jl
mov
dec
and
jnp
jl
das
das
inc
div
inc
jge
inc
xor
shr
add
lds
pop
push
push
repnz
sub
mov
inc
push
pop
pop
sbb
inc
ds
inc
aaa
inc
mov
add
aaa
xor
ss
dec
xchg
push
add
scas
adc
sbb
adc
add
fiadd
pop
add
pop
stos
ins
icebp
adc
in
ins
pop
es
push
pmaddwd
aam
pop
or
pop
aaa
(bad)
aas
fadd
inc
add
pop
test
add
add
xor
push
xchg
aas
jns
mov
xchg
pop
test
(bad)
adc
mov
shl
and
ds
movs
sbb
sub
pop
shl
cmovo
pop
inc
mov
or
(bad)
mov
sbb
in
call
adc
add
mov
xor
fsub
xchg
in
fsubp
stc
jb
jle
cmp
pop
adc
inc
mov
scas
add
adc
xor
cmp
mov
(bad)
push
mov
out
in
push
(bad)
sbb
or
leave
in
in
or
or
or
outs
mov
scas
or
daa
adc
fucom
push
adc
and
dec
dec
inc
push
addr16
das
push
jae
mov
ins
push
in
in
sahf
and
jb
pop
leave
in
jbe
and
cmp
daa
iret
jae
test
xchg
sub
daa
movs
fbld
daa
mov
aas
xlat
sbb
data16
mov
(bad)
pop
addr16
mov
out
in
les
ja
xor
in
xor
ror
adc
das
cmp
repz
int3
adc
repz
inc
sbb
jns
iret
sbb
sbb
test
fs
add
sahf
out
jl
sub
xor
out
js
jns
movs
jns
push
mov
cld
dec
cld
sub
bound
ja
ss
add
(bad)
in
xor
jmp
js
or
cwde
ss
lahf
sar
inc
mov
xor
and
clc
popf
push
and
adc
jl
pop
sahf
je
sbb
cmp
repz
fs
pop
pop
adc
iret
repz
push
or
cmp
xor
sub
repz
repz
and
sbb
repz
and
or
lahf
dec
fs
mov
clc
xor
repz
adc
sbb
movs
shl
cmp
fcom
(bad)
xor
repz
int3
push
and
and
and
mov
hlt
fidiv
inc
outs
inc
xor
push
mov
mov
test
rcl
setge
xor
fimul
leave
(bad)
aas
xlat
repnz
cmp
mov
mov
sbb
pop
aaa
add
in
lods
out
lahf
inc
(bad)
fdivrp
imul
retf
jns
out
aad
loopne
in
repz
out
push
not
sub
iret
repz
dec
pop
outs
jle
mov
mov
clc
jns
out
and
popa
out
sahf
out
call
lahf
jmp
stc
or
ds
cmp
repz
mov
iret
repz
loop
push
cli
cs
sahf
out
dec
push
jb
sahf
out
sahf
sahf
mov
xlat
icebp
mul
fidivr
sti
mov
dec
je
jmp
mov
sbb
push
jge
inc
mov
push
mov
ins
xor
iret
add
pusha
pop
pop
push
cmp
repz
inc
cmp
and
cmp
repz
or
add
jns
iret
add
xor
hlt
lock
out
sahf
in
call
jns
out
les
sahf
out
cwde
nop
test
out
sahf
je
fs
inc
or
xchg
mov
xor
cwde
lock
mov
ss
jg
dec
sahf
rcl
bound
pushf
mov
inc
and
sbb
or
sbb
or
nop
xchg
cmp
mov
add
psubw
or
ret
mov
adc
enter
cwde
push
and
(bad)
mov
xor
in
int3
into
sbb
ror
and
sahf
mov
sub
inc
sar
(bad)
(bad)
call
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
adc
inc
aad
iret
dec
js
inc
outs
(bad)
loopne
jmp
xchg
test
mov
(bad)
call
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
inc
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
(bad)
(bad)
(bad)
jmp
or
add
cmps
xchg
cmp
xor
dec
cmps
in
cli
(bad)
call
lds
mov
cmps
lock
mov
popa
(bad)
(bad)
jmp
or
fsub
stos
xchg
clc
repz
mov
sub
fwait
sbb
xchg
and
and
add
(bad)
fnstsw
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shr
loopne
jmp
loop
pop
mov
icebp
aas
ror
and
cmps
mov
mov
(bad)
(bad)
jmp
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
(bad)
(bad)
(bad)
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
(bad)
(bad)
(bad)
call
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
das
(bad)
jmp
lea
mov
inc
inc
aas
movs
jmp
jg
sub
jge
mov
inc
sar
(bad)
(bad)
(bad)
fst
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
inc
xchg
mov
fmul
call
cmp
test
pop
mov
jne
fld
cmp
(bad)
(bad)
(bad)
push
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
lahf
inc
pop
(bad)
(bad)
(bad)
push
in
ss
push
scas
into
imul
faddp
jge
call
mov
(bad)
in
(bad)
call
and
dec
dec
gs
std
or
pop
ficomp
frstor
ror
add
xchg
es
xor
pop
js
jns
out
mov
repz
jns
ds
xor
add
push
pop
out
sahf
out
xchg
mov
repnz
int
add
dec
ins
add
fimul
outs
or
ds
sahf
out
test
add
test
add
out
dec
pop
cmps
xor
fsubp
in
inc
cld
inc
in
push
or
xchg
aam
jns
out
rol
lods
movs
cwde
out
sahf
out
test
pusha
dec
repz
inc
and
fdiv
repz
inc
sbb
mov
jns
out
enter
pusha
repz
out
sub
or
mov
repz
fadd
mov
jl
repz
repz
sbb
mov
push
mov
mov
sbb
mov
mov
push
mov
iret
repz
mov
xor
sahf
out
cmp
add
mov
mov
mov
repz
out
cmp
loopne
(bad)
jl
int3
mov
cwde
push
js
sahf
out
fs
cmp
or
cmp
repz
scas
enter
into
repz
push
cmps
adc
xor
lea
lea
les
mov
stos
test
sub
add
or
add
add
add
pusha
inc
adc
push
push
push
adc
xchg
inc
out
(bad)
(bad)
(bad)
out
add
popa
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
(bad)
(bad)
(bad)
push
mov
push
movs
mov
aad
mov
rcl
mov
sub
mov
jmp
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
ins
adc
test
fs
(bad)
std
in
leave
mov
add
(bad)
dec
cmp
or
pop
adc
in
pusha
aad
jno
mov
shl
add
aam
dec
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
(bad)
(bad)
(bad)
jmp
ins
fdiv
jne
fild
or
shr
cmp
ficom
push
xlat
enter
mov
mov
mov
and
mov
cdq
xchg
mov
mov
or
or
and
or
xchg
adc
stos
sbb
data16
(bad)
(bad)
mov
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
cld
mov
stc
jle
or
(bad)
(bad)
(bad)
(bad)
mov
cmp
fs
add
hlt
push
imul
ins
sbb
xor
dec
add
(bad)
(bad)
(bad)
(bad)
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
(bad)
fistp
ficom
gs
aam
pop
popa
mov
into
pop
cmp
inc
mov
aam
movs
fisttp
xchg
fadd
(bad)
shl
(bad)
(bad)
(bad)
(bad)
jmp
outs
xor
mov
sar
add
in
add
pop
dec
or
cmp
(bad)
(bad)
push
push
stos
inc
add
adc
or
and
test
or
mov
popa
into
push
(bad)
(bad)
(bad)
(bad)
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
(bad)
inc
mov
add
inc
aad
scas
ja
popf
adc
push
fdiv
mov
(bad)
dec
arpl
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
pushf
(bad)
(bad)
(bad)
push
xchg
(bad)
shl
add
inc
push
imul
xor
sbb
(bad)
(bad)
jmp
push
imul
aam
loopne
ror
int3
dec
frstor
fistp
mov
mov
(bad)
(bad)
(bad)
call
mov
(bad)
jle
shl
push
repnz
addr16
cmps
fld
mov
(bad)
(bad)
(bad)
dec
mov
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
(bad)
(bad)
(bad)
(bad)
jns
imul
and
shr
ss
push
xchg
ja
int3
add
mov
(bad)
(bad)
(bad)
jmp
es
lds
or
sub
mov
cmps
call
ret
shl
(bad)
(bad)
(bad)
call
ret
es
pushf
mov
ins
add
ss
jmp
addr16
jb
(bad)
jg
adc
or
adc
mov
jnp
sbb
xchg
or
(bad)
jmp
mov
fdivr
fisttp
aam
rol
clc
mov
push
int
mov
add
ja
outs
ja
mov
out
cli
jo
(bad)
jmp
int3
retf
pop
or
adc
sahf
gs
clc
sar
imul
(bad)
(bad)
jg
push
js
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
mov
push
scas
fcomp
fldenv
fild
cmp
aaa
(bad)
(bad)
(bad)
call
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
mov
(bad)
inc
push
xlat
int
push
ficom
fldenv
cs
mov
dec
popa
les
sbb
xchg
sub
adc
push
mov
or
sbb
add
sub
sub
dec
into
pop
cld
dec
cdq
dec
push
or
dec
dec
mov
xor
add
jb
lea
add
enter
pop
add
sbb
or
inc
jo
add
test
jb
or
add
dec
mov
or
lahf
add
sahf
cmps
mov
and
adc
cmp
repz
jne
(bad)
(bad)
iret
repz
mov
mov
repz
ins
push
inc
xor
call
loopne
out
sahf
out
shl
sahf
mov
pop
push
inc
jns
out
xor
sbb
add
inc
inc
out
xor
add
pop
out
xor
aaa
scas
and
scas
and
ja
outs
add
rol
mov
pcmpeqw
ins
add
aaa
dec
dec
ins
jb
xor
mov
sbb
outs
fisttp
cmps
add
cmps
xor
jae
mov
fbstp
or
fisttp
xlat
cmps
inc
test
aaa
mov
push
add
xor
or
popa
addr16
or
sbb
not
push
(bad)
add
aaa
lds
out
xchg
sbb
addr16
and
or
ja
xor
adc
cmp
jno
clc
dec
sub
and
xor
xor
xor
fld
ds
xor
xor
xor
push
outs
bound
outs
gs
jnp
inc
cld
and
jo
and
mov
repz
mov
push
pusha
push
dec
inc
cmp
cmp
repz
and
adc
imul
push
lock
out
sahf
fmul
shl
nop
mov
sahf
out
cmp
sbb
iret
repz
cld
push
in
fmul
mov
cmp
mov
stc
cmp
repz
xor
hlt
push
out
sahf
cmps
in
int3
shl
mov
xor
jns
jnp
pop
clc
push
push
mov
sahf
out
sahf
sub
and
cmp
sar
shl
repz
push
out
sahf
cmps
fmul
mov
jns
mov
push
inc
cmp
inc
xchg
jo
fldcw
sub
or
cs
or
sub
sub
and
es
pop
xchg
nop
add
adc
cwde
inc
adc
imul
or
add
daa
add
add
adc
ja
ret
inc
pop
adc
add
and
sbb
and
cmp
(bad)
inc
inc
add
push
and
add
add
or
push
add
nop
inc
add
add
adc
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
mov
inc
nop
arpl
test
test
jmp
jnp
mov
es
(bad)
jge
and
movs
mov
add
stc
out
iret
add
dec
or
add
pop
jmp
push
xchg
dec
out
and
iret
outs
test
aaa
or
add
xlat
push
or
push
inc
or
out
add
add
fsubrp
add
jmp
ins
pop
add
push
jbe
jns
cmp
jmp
out
fadd
push
adc
xor
push
push
aas
bound
dec
daa
daa
iret
rol
add
ret
add
ret
push
pusha
push
sub
mov
pop
or
mov
xor
mov
push
push
aam
mov
fidiv
popa
imul
lods
xchg
fdivrp
inc
adc
std
push
sbb
aas
scas
xchg
test
imul
or
arpl
push
pusha
jg
or
stos
dec
or
jb
and
xchg
mov
pop
xor
out
outs
ret
fwait
imul
mov
inc
fidiv
pop
jo
retf
jnp
sub
add
dec
bound
sbb
pop
fsub
pop
pop
pop
mov
jae
jo
test
pop
add
cmps
fisub
es
(bad)
loop
push
push
push
cli
push
fs
or
test
add
loop
pop
adc
or
(bad)
(bad)
mov
sub
mov
outs
xlat
imul
or
sbb
loopne
xor
arpl
shl
inc
fs
mov
pop
adc
inc
mov
(bad)
cmp
data16
xor
inc
xor
mov
cmps
mov
and
inc
out
loopne
jo
out
pop
mov
dec
cmps
jae
(bad)
clc
outs
mov
jb
gs
daa
pop
popa
ins
cmp
daa
pop
mov
jo
xor
mov
outs
add
gs
push
xor
js
bound
aas
add
ficom
jae
adc
sbb
sbb
movs
stos
adc
lahf
ja
dec
adc
push
aas
jb
retf
push
aam
add
mov
xor
mov
jne
out
cmp
ss
push
addr16
push
xlat
mov
inc
mov
jno
daa
jbe
fwait
jmp
and
xlat
addr16
sub
ss
addr16
or
shr
rcr
bound
cmp
fidivr
pop
dec
and
sub
dec
xchg
mov
pop
pop
mov
xchg
ss
cmps
inc
shl
jae
add
rol
xor
inc
dec
aad
retf
aaa
or
mov
mov
icebp
js
xor
push
pop
ds
les
push
ja
xor
sub
aam
ja
jmp
ss
adc
jg
mov
arpl
xchg
pop
add
dec
ret
mov
(bad)
adc
int
jne
jnp
aaa
jo
pop
cmp
imul
rol
mov
sbb
arpl
sbb
rol
pop
movs
xchg
imul
push
sub
fisubr
xor
das
je
adc
inc
add
and
add
fwait
imul
inc
fwait
mov
mov
pop
and
push
bound
sub
out
xchg
and
cmp
add
xor
adc
cmp
mov
ret
ret
mov
lahf
add
test
pop
mov
js
out
xor
iret
shl
mov
imul
mov
sub
stos
push
sub
sbb
pop
xor
inc
arpl
push
outs
cmps
bound
es
bound
stos
pop
push
aam
ror
outs
lods
jecxz
fsubr
clc
pop
pop
(bad)
or
and
scas
loope
scas
jb
outs
stos
xchg
push
das
xlat
pop
xor
pop
stos
addr16
dec
retf
xchg
push
push
pop
rcl
sub
add
sub
ja
mov
imul
bound
push
or
scas
jbe
loopne
mov
mov
(bad)
cmc
mov
outs
mov
mov
pop
scas
sub
push
xchg
pop
dec
ret
sub
outs
test
jae
movs
test
jae
xor
mov
push
fadd
inc
lds
mov
adc
add
lahf
mov
adc
aas
das
mov
ror
xor
outs
repz
ret
xchg
adc
pop
rcpps
and
ret
mov
sub
pop
dec
push
push
test
mov
push
fnsave
mov
jne
shl
jmp
lahf
mov
fld
gs
das
das
test
das
mov
call
sub
inc
dec
xor
xchg
inc
pusha
test
je
popa
jnp
test
xor
out
sub
sbb
cmp
add
fwait
in
or
dec
aam
mov
jnp
jmp
cdq
sub
sub
add
mov
push
pop
add
pminub
outs
das
ds
(bad)
add
sti
ja
in
inc
xor
(bad)
ins
imul
xlat
inc
es
neg
dec
or
(bad)
inc
enter
movs
sbb
sbb
dec
pop
ror
adc
stos
ror
repz
icebp
mov
add
mov
sbb
(bad)
add
scas
jne
xor
and
add
push
ins
(bad)
jmp
jmp
mov
test
xchg
mov
loopne
jecxz
ret
xor
inc
lock
stos
and
and
das
xor
dec
sbb
add
mov
push
xchg
jnp
adc
ss
cmp
bound
out
sbb
mov
add
mov
arpl
shl
adc
jnp
mov
pop
repnz
lods
movs
pop
xchg
sub
cmp
jae
imul
mul
push
add
push
inc
jo
ja
push
inc
sub
add
xor
xchg
rol
or
xchg
stos
jbe
loope
and
arpl
xchg
inc
mov
sub
dec
xor
and
pop
test
popa
or
lods
lahf
xchg
jmp
and
sub
jnp
ss
mov
mov
js
or
mov
fwait
ja
pusha
pop
shl
cmps
xchg
mov
pop
arpl
adc
fld
mov
ja
pop
aad
adc
xchg
mov
(bad)
dec
pop
sbb
fwait
imul
adc
add
mov
shl
(bad)
dec
jo
pop
or
les
fwait
mov
mov
xchg
pop
stos
add
push
das
push
sti
retf
or
out
sub
adc
and
movntps
popa
jae
cmps
lods
adc
cmp
in
test
out
ds
test
jno
dec
rol
iret
aad
push
arpl
push
xchg
mov
pushf
jp
aad
dec
mov
daa
aas
dec
pop
adc
das
mov
mov
add
xor
xchg
jbe
or
jnp
jbe
mov
sub
inc
adc
pop
outs
jg
pop
arpl
test
push
pop
sbb
push
shrd
outs
pop
fidiv
stos
adc
inc
or
inc
es
cmp
out
add
mov
(bad)
(bad)
jge
add
rcl
inc
inc
mov
xor
pop
pop
adc
adc
adc
add
push
pop
call
outs
pop
adc
add
dec
cwde
nop
cmc
add
repz
sub
inc
push
and
jne
cli
xor
ins
inc
cmc
dec
fs
popa
imul
outs
test
imul
adc
movs
fdiv
pop
inc
jns
push
outs
push
int3
sbb
jmp
fs
adc
inc
sub
cmp
push
mov
cdq
pusha
mov
jns
push
push
imul
outs
lock
push
push
jle
sbb
xchg
sar
out
or
sbb
jo
sub
push
and
mov
sbb
sahf
mov
mov
cmps
shl
push
adc
push
fdivr
adc
xchg
lahf
ins
out
arpl
jne
push
lods
jne
clc
push
shl
clc
ss
jmp
push
xor
jo
outs
je
inc
imul
je
and
sahf
add
ins
cmp
ss
inc
je
bound
jae
and
jae
push
jns
pop
pop
mov
or
(bad)
das
cmps
sbb
ins
jo
push
fdiv
test
jbe
mov
adc
inc
xor
and
push
mov
or
pusha
popa
pop
enter
mov
jns
mov
hlt
lds
outs
popa
sbb
lods
mov
xchg
outs
popw
push
inc
arpl
aas
push
fsubr
ror
jo
ret
push
jno
sub
stc
jmp
fbld
js
mov
cmp
inc
dec
int3
add
xlat
lods
ins
call
data16
push
int3
and
inc
gs
fwait
enter
jmp
pop
push
sub
call
inc
pop
sub
dec
inc
adc
outs
scas
jae
inc
xchg
call
push
imul
push
imul
sub
push
cmp
movs
dec
popa
ins
out
push
in
lods
push
inc
je
or
adc
lods
inc
mov
test
sub
loopne
(bad)
jo
mov
pop
mov
push
imul
and
mov
cmp
jmp
xor
fcomp
movs
mov
jne
fstp
xor
inc
sbb
cmp
ret
mov
pop
popa
arpl
and
cmp
push
mov
cmp
call
jb
dec
dec
imul
mov
dec
outs
inc
pop
jo
sub
fnstsw
jb
(bad)
into
push
pop
shl
push
mov
rcr
call
imul
shl
mov
cmp
outs
ins
sbb
mov
sub
jnp
and
lahf
pop
fwait
sbb
lods
jbe
add
add
outs
and
scas
xchg
cmps
inc
push
and
das
scas
inc
test
push
aas
dec
add
cmp
dec
jecxz
mov
sti
xor
dec
jmp
jns
adc
push
jmp
mov
jns
jecxz
cmps
call
popa
adc
sbb
sbb
cmc
stos
fcompp
sbb
nop
or
popf
inc
nop
test
pop
and
jmp
mov
fs
inc
or
or
jne
mov
ins
push
imul
mov
cmp
inc
jae
sub
add
pop
dec
jae
mov
jb
xor
in
jp
jg
cmp
push
xchg
push
fpatan
sbb
xor
fisubr
fist
inc
sub
ja
add
push
cmp
iret
mov
dec
inc
dec
adc
rol
mov
movs
popa
bound
test
push
mov
inc
mov
cmp
inc
add
push
mov
sbb
xchg
or
push
adc
mov
adc
pusha
jg
dec
int3
scas
dec
push
fistp
mov
pop
ja
imul
and
popf
pop
xchg
xor
cmovno
(bad)
mov
push
aad
test
or
fldenv
add
cmp
push
adc
push
test
and
inc
sbb
inc
jo
or
icebp
add
ja
ror
cmp
cmps
pop
mov
add
xchg
adc
lock
mov
cmp
sar
push
data16
cdq
sbb
and
mov
cmp
imul
adc
pop
outs
dec
mov
cs
sub
xchg
sub
pop
mov
jbe
and
aaa
or
into
and
mov
in
mov
sbb
push
outs
imul
xchg
and
aaa
cmp
and
jmp
mov
(bad)
retf
pop
xchg
pop
and
or
add
les
xchg
or
sbb
or
and
jae
daa
mov
inc
(bad)
call
movs
adc
jbe
fsubr
dec
imul
cmp
cmp
inc
arpl
xchg
leave
gs
mov
addr16
push
dec
inc
int
jmp
dec
ret
adc
movs
jbe
and
adc
cmova
out
add
ins
push
dec
sbb
pusha
inc
or
or
push
dec
sbb
iret
sbb
jae
sub
pusha
out
mov
sub
jns
lea
call
dec
pop
jns
jnp
push
and
(bad)
movaps
push
shr
pop
das
cmp
xor
sub
invd
add
arpl
sbb
test
in
fld
ficom
outs
pop
cwde
cmp
sbb
pop
or
mov
test
pop
mov
pop
fldcw
ins
xchg
sbb
js
push
ret
rcl
pop
addr16
xchg
dec
(bad)
inc
test
ja
add
das
inc
inc
test
not
xor
arpl
inc
ins
and
loope
imul
dec
add
ret
inc
mov
or
fadd
inc
pop
sub
jb
xchg
mov
ret
inc
push
lods
popa
imul
jle
lahf
mov
mov
loopne
imul
sub
sub
pop
and
les
loop
push
dec
mov
adc
ret
xchg
lds
shl
stos
out
hlt
jno
sbb
xor
dec
(bad)
lahf
sub
ja
dec
jb
jl
mov
test
hlt
adc
rol
dec
mov
das
xchg
sub
ins
xchg
fisubr
push
xor
fidivr
ins
mov
cwde
ret
sub
dec
imul
movs
pushf
jns
or
cs
je
cmp
sbb
add
mov
(bad)
ins
xor
cmps
loop
dec
outs
dec
or
jnp
push
push
popa
jae
fs
pop
and
lea
out
dec
push
dec
inc
adc
mov
cmp
jo
jbe
xor
or
jns
or
fstp
inc
je
mov
jo
test
(bad)
push
test
ins
js
pusha
js
inc
jp
imul
or
dec
inc
fdivr
or
and
mov
dec
add
add
fcomp
or
or
es
mov
add
sbb
dec
mov
test
xchg
popa
inc
inc
sub
or
jno
jae
dec
retf
dec
pusha
ins
popa
push
test
sub
loope
test
je
push
dec
mov
pop
shl
fs
xchg
gs
mov
test
xlat
jmp
outs
daa
pop
pop
jbe
inc
cwde
jp
daa
outs
xchg
or
push
mov
add
sub
mov
mov
jns
dec
popa
dec
(bad)
add
das
bound
push
push
pop
jb
inc
addr16
and
je
dec
outs
stos
data16
push
lea
loopne
push
inc
xchg
pushf
push
out
or
cmp
lods
pusha
in
loope
dec
stos
scas
inc
mov
ror
adc
bound
cmp
push
(bad)
mov
jo
sbb
(bad)
sahf
cmp
test
dec
dec
sbb
pop
ins
ret
outs
cvtdq2ps
dec
loopne
push
jne
and
xchg
popa
cmp
pop
outs
data16
xchg
jecxz
int3
int3
test
push
sub
mov
stos
push
push
lods
xor
stos
xchg
push
push
jo
mov
in
push
je
jp
sub
add
push
ror
sub
or
dec
test
jae
test
rcr
and
dec
sbb
sbb
aaa
push
je
dec
push
pushf
jmp
lods
cmp
ins
das
out
(bad)
or
jecxz
push
or
dec
adc
add
dec
retf
mov
or
shl
inc
sbb
inc
push
cmp
pop
push
movs
jne
in
jmp
mov
loop
cwde
ins
addr16
push
je
jmp
sub
pop
iret
xchg
cmp
fcomp
xchg
and
sbb
sbb
sub
mov
aam
adc
test
push
sti
js
in
cmp
loope
jmp
mov
xchg
inc
sub
punpcklbw
ret
cmp
push
sbb
mov
pop
(bad)
mov
shl
pop
loop
mov
daa
push
or
xchg
fisubr
in
inc
arpl
jo
scas
push
and
and
scas
push
xor
jb
xchg
adc
push
cmp
fld
add
push
stos
popa
pop
mov
test
imul
or
mov
js
push
push
fisub
outs
jmp
push
and
div
pop
arpl
imul
mov
iret
sbb
add
mov
mov
ins
push
sub
and
sti
movs
lods
mov
das
or
popf
pop
test
and
sbb
adc
inc
mov
mov
mov
pusha
fimul
pop
and
imul
mov
movs
pop
mov
cmp
push
popa
in
or
rcl
sub
test
rol
xor
xchg
add
dec
hlt
push
jae
cmp
adc
inc
fstp
or
dec
sahf
xchg
pop
inc
test
pop
mov
add
sbb
xor
dec
mov
inc
inc
inc
sub
dec
stc
sbb
lods
inc
mov
lods
dec
inc
or
push
ret
and
aas
outs
ins
cmp
jg
and
movs
pusha
xchg
mov
or
rcl
jo
sbb
sub
js
mov
neg
addr16
shr
xchg
enter
bound
stos
scas
iret
js
pop
add
sub
addr16
jne
jae
sub
inc
ins
imul
inc
adc
cwde
adc
push
jmp
xchg
(bad)
xor
mov
and
jne
shl
(bad)
fistp
inc
inc
jge
mov
push
xchg
jge
and
lock
loope
mov
adc
push
mov
mov
inc
adc
popf
sub
adc
mov
out
imul
dec
movhps
ins
adc
dec
add
ror
push
test
scas
sub
lods
shl
test
xor
adc
inc
sub
sub
add
mov
inc
mov
sar
pop
adc
sub
dec
jnp
mov
push
and
popa
in
mov
cmp
ror
fidiv
repz
rcr
mov
fst
popa
and
ror
and
cmp
pop
and
loopne
fucomp
retf
repz
sub
mov
stos
cmp
je
stc
add
or
and
arpl
xor
outs
xchg
nop
push
cmps
jge
xchg
add
movups
adc
mov
push
add
adc
mov
cmps
imul
cmp
push
inc
mov
outs
push
adc
add
add
add
cli
imul
or
adc
mov
arpl
pop
xor
add
fcomp
cmps
cmp
xchg
inc
or
push
fisttp
movs
add
out
push
add
inc
cmp
push
dec
inc
or
mov
loope
inc
or
adc
pusha
call
out
pop
fld
fiadd
mov
add
lods
shl
cdq
or
loopne
jle
xchg
shr
jae
arpl
test
out
push
lds
stos
dec
or
loope
rcl
jg
outs
or
dec
jmp
add
add
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
pop
add
add
add
add
push
add
add
add
add
add
or
add
dec
add
adc
add
sbb
add
pop
add
add
add
add
add
add
add
or
add
add
mov
add
fadd
add
add
add
sub
add
push
add
add
add
js
add
mov
add
add
add
or
add
lock
or
add
sbb
add
inc
add
add
add
add
add
add
add
add
add
or
add
enter
pushf
movs
or
add
add
add
add
add
add
or
add
lock
add
cmps
or
add
add
add
add
add
add
or
add
sbb
add
hlt
cmps
or
add
add
add
add
add
add
or
add
inc
add
add
test
add
in
add
add
add
add
add
or
add
push
lods
or
add
add
add
add
add
add
or
add
nop
add
add
mov
add
add
add
add
add
add
or
add
mov
(bad)
or
add
add
add
add
add
add
or
add
loopne
add
jo
or
add
add
add
add
add
add
or
add
or
add
pushf
das
push
add
add
add
add
add
add
or
add
xor
add
sub
add
add
add
add
add
add
or
add
pop
add
add
sbb
add
or
add
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
or
add
cwde
add
add
xor
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
or
add
fadd
add
and
or
add
add
add
add
add
pop
add
add
add
add
or
add
pop
add
or
add
add
or
add
test
add
rol
add
clc
add
cmp
add
and
add
add
add
add
add
add
add
add
or
add
dec
add
add
or
add
add
add
add
add
add
or
add
jo
add
dec
aaa
or
add
add
add
add
add
add
or
add
cwde
add
add
cmp
add
in
add
add
add
add
add
or
add
rol
add
inc
or
add
add
add
add
add
add
or
add
call
dec
or
add
add
add
add
add
add
or
add
adc
add
or
add
add
add
add
add
add
or
add
add
add
push
or
add
add
add
add
add
add
arpl
add
js
add
mov
add
add
add
sub
add
add
add
add
add
add
add
or
add
nop
add
add
and
add
add
in
add
add
add
add
add
or
add
mov
and
add
add
in
add
add
add
add
add
or
add
loopne
add
xchg
and
add
add
in
add
add
add
add
add
or
add
or
adc
adc
add
in
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
or
add
dec
add
adc
adc
add
in
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
or
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
jns
jmp
pavgb
sub
fild
cs
fadd
sub
xlat
add
sbb
add
outs
add
mov
pop
inc
mov
inc
sub
add
out
cmp
int3
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
add
add
add
add
add
add
add
add
add
rol
add
jmp
jns
jmp
pavgb
sub
fild
cs
fadd
sub
xlat
add
sbb
add
outs
add
mov
pop
inc
mov
inc
sub
add
out
cmp
int3
add
add
cdq
add
add
add
add
add
mov
add
add
or
add
and
mov
add
pop
lock
add
add
add
add
push
jp
add
add
add
add
add
add
imul
add
add
add
push
pop
add
aam
add
in
add
or
add
add
add
add
add
(bad)
inc
add
inc
add
jecxz
add
mov
add
pop
add
clc
aas
add
cld
aas
add
clc
pop
add
icebp
pop
add
mov
add
inc
add
inc
add
mov
add
add
add
add
add
add
add
add
add
add
rol
add
jmp
jns
jmp
pavgb
sub
fild
cs
fadd
sub
xlat
add
sbb
add
outs
add
mov
pop
inc
mov
inc
sub
add
out
cmp
int3
add
add
add
add
inc
add
inc
add
inc
add
pop
add
fcomip
add
fcomip
add
fdivp
add
fdivp
add
fdiv
add
fdivp
add
fdivp
add
fcomip
add
fcomip
add
rol
add
inc
add
inc
add
mov
add
adc
add
and
add
add
and
add
add
add
add
add
add
add
add
xor
add
(bad)
add
inc
add
cmp
add
add
adc
inc
in
dec
push
(bad)
inc
add
loop
add
add
dec
mov
(bad)
sbb
mov
pop
outs
in
sbb
add
add
or
sbb
add
add
add
add
add
add
add
add
xor
add
retf
repnz
mov
add
dec
inc
add
inc
xor
add
add
add
add
add
sub
add
loop
add
xlat
inc
add
inc
add
add
add
add
scas
mov
add
push
movhps
inc
add
call
sbb
call
sbb
inc
aad
add
add
add
add
add
mov
add
int
add
ret
jmp
add
add
jo
sti
jmp
cmp
call
rol
add
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
and
rdpmc
and
add
sldt
add
add
add
push
or
add
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
fild
add
add
adc
(bad)
or
cli
inc
add
inc
push
in
or
fdivr
add
add
inc
add
add
add
pop
sti
push
dec
sti
call
sbb
call
out
(bad)
cmp
in
sub
fcos
adc
xor
and
push
xchg
cmps
cld
clc
ja
sti
push
inc
in
add
sub
inc
dec
cmps
call
(bad)
sbb
add
add
add
ret
rcl
(bad)
cmp
add
add
add
add
(bad)
inc
add
inc
add
aas
add
clc
aas
add
clc
aas
add
std
out
add
inc
add
test
add
rcr
add
pop
add
sbb
add
inc
add
or
sub
add
sbb
add
xor
add
add
and
add
add
add
add
dec
dec
mov
add
or
add
mov
add
add
add
test
add
sar
add
iret
inc
add
in
add
add
add
add
add
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
add
or
xor
pop
hlt
inc
or
inc
add
dec
adc
dec
sbb
inc
or
inc
add
jmp
or
inc
sub
inc
gs
call
es
cli
sub
faddp
push
outs
jmp
aaa
dec
(bad)
adc
(bad)
int
add
add
xor
lods
lods
pop
and
or
ds
das
aaa
jge
add
and
add
add
add
add
add
add
jnp
add
int
add
mov
push
add
add
add
cmp
xlat
cld
add
aad
add
sar
add
int
add
mov
add
xor
add
push
adc
add
add
jp
add
out
add
call
inc
add
inc
add
inc
add
inc
add
jmp
dec
test
add
mov
add
dec
inc
add
add
movlhps
fld
clc
inc
add
inc
add
inc
paddusw
add
add
call
fild
add
inc
aas
add
int3
cli
add
int3
inc
add
sti
add
xchg
xchg
add
and
add
add
ss
sti
jmp
cmp
inc
or
imul
cmp
(bad)
cs
(bad)
adc
sar
push
pop
fisttp
add
inc
xor
add
sar
add
iret
inc
add
inc
add
inc
add
repnz
add
add
add
inc
scas
xchg
cmp
sbb
(bad)
mov
sbb
ins
sub
outs
xchg
(bad)
xor
aam
push
jl
add
pop
dec
add
aam
add
(bad)
add
fcos
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
loop
add
add
add
cmove
sbb
pop
inc
add
add
add
add
add
daa
adc
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
clc
add
fs
add
add
or
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
or
add
add
pop
out
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
or
inc
or
inc
add
inc
add
inc
add
inc
add
mov
idiv
sbb
xor
(bad)
adc
std
inc
(bad)
inc
add
(bad)
adc
xor
in
and
(bad)
push
and
dec
bswap
inc
add
xchg
cli
dec
sti
dec
sti
(bad)
aaa
push
sti
(bad)
sbb
cld
dec
push
(bad)
sti
sbb
repnz
jmp
inc
pop
in
xor
fdivr
and
aam
sbb
inc
add
add
add
test
sti
jmp
sti
(bad)
cmp
adc
mov
or
iret
mov
jo
jmp
pop
jbe
dec
(bad)
adc
popf
xchg
add
add
arpl
into
jg
cld
fild
rcl
add
add
add
add
aas
jg
pusha
fs
dec
push
cmps
and
push
add
(bad)
inc
(bad)
(bad)
add
iret
inc
inc
inc
inc
inc
inc
inc
call
inc
(bad)
(bad)
mov
add
inc
add
cld
add
cld
jl
add
sbb
add
or
add
add
rol
add
add
add
add
add
cmp
add
(bad)
inc
add
or
sub
add
and
add
inc
add
add
add
add
add
add
adc
add
add
adc
add
add
add
inc
add
add
test
add
sar
add
int
add
int
add
test
add
add
add
add
add
call
(bad)
add
(bad)
add
aad
add
iret
inc
add
inc
add
leave
add
sub
add
pop
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
adc
dec
adc
inc
add
cli
dec
sbb
call
loope
push
sbb
inc
into
inc
add
jmp
add
add
aaa
mov
inc
sti
jmp
aaa
cld
inc
or
call
dec
fs
cmp
loope
and
aad
push
adc
add
or
cld
out
stos
sti
call
sti
dec
adc
aas
outs
jle
fidiv
jmp
fisttp
or
add
add
adc
or
add
add
add
dec
and
add
add
retf
fadd
add
adc
add
add
add
mov
inc
add
out
add
add
add
add
add
add
stos
mov
add
inc
add
inc
add
inc
add
inc
add
rol
add
add
cmp
add
add
add
int
add
(bad)
add
fdivr
add
(bad)
add
aad
add
sar
add
int3
inc
add
inc
add
add
add
mov
add
sldt
add
or
cmps
add
out
add
jmp
add
jmp
add
out
add
(bad)
add
xlat
inc
add
inc
add
inc
add
inc
add
add
add
add
inc
add
or
add
pop
adc
out
inc
add
inc
add
inc
add
inc
add
inc
add
inc
loopne
add
(bad)
inc
add
inc
add
inc
add
clc
add
add
add
add
add
int
add
into
inc
add
aam
add
or
idiv
sbb
cld
call
es
inc
push
(bad)
inc
add
call
daa
cmc
jmp
aaa
jmp
daa
xlat
dec
adc
inc
mov
add
add
cmps
mov
add
inc
add
inc
add
inc
add
inc
add
inc
add
sub
add
add
dec
xor
cli
call
dec
sti
jmp
inc
cld
dec
fld
push
ins
jmp
jmp
cmp
call
pop
(bad)
add
add
add
add
add
sar
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
cld
add
sahf
pushf
add
sub
ds
int
mov
mov
sti
call
sbb
or
les
jae
call
fimul
or
add
add
add
scas
mov
add
fdivr
add
fdivr
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
outs
pop
or
sub
xor
or
add
or
add
add
add
iret
int
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
adc
call
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
test
sub
push
adc
out
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fdivrp
add
fdivr
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
xor
cmc
dec
sbb
call
push
std
dec
std
inc
or
inc
add
inc
add
inc
add
bnd
jmp
sbb
in
pop
es
adc
fcos
or
or
inc
add
inc
sahf
mov
add
add
repz
cmp
jmp
cld
jmp
dec
cld
jmp
inc
cld
call
cld
dec
add
inc
(bad)
std
and
clc
(bad)
sub
dec
jmp
inc
(bad)
and
sar
or
sar
or
fdivr
add
jg
sub
mov
call
sti
call
dec
sti
(bad)
cmp
jmp
cmp
dec
or
lds
cs
stos
dec
push
out
dec
jmp
(bad)
cmp
jmp
inc
fdivr
sbb
sar
push
sub
inc
add
add
dec
das
jp
cld
stc
jle
sti
(bad)
jg
sti
push
sti
call
sti
(bad)
cmp
jmp
cmp
inc
das
adc
out
jns
repnz
in
jmp
call
inc
(bad)
inc
pop
(bad)
movlps
add
maxps
mov
in
sar
call
xchg
sti
call
sti
(bad)
adc
sahf
add
add
add
add
or
cmp
out
jmp
out
inc
push
iret
aam
or
add
add
add
mov
(bad)
jnp
test
fbstp
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
clc
(bad)
(bad)
push
aas
(bad)
jmp
ud0
ror
inc
ud0
ror
inc
ud0
repz
(bad)
(bad)
(bad)
cld
jg
(bad)
cld
aas
(bad)
(bad)
clc
ud0
loopne
call
rol
pop
rol
add
add
add
clc
add
out
lock
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
cmp
(bad)
clc
jg
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
add
add
add
or
add
add
add
test
add
add
add
push
xor
add
out
add
int3
inc
add
sti
add
mov
and
add
add
sar
add
iret
inc
add
inc
add
inc
add
stc
add
stos
fwait
add
dec
and
add
add
int
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
add
mov
add
push
add
pop
xor
pop
fsubrp
add
loope
add
loop
add
loope
add
fdivrp
add
(bad)
add
aad
add
sar
add
int
add
int3
inc
add
sti
add
mov
add
add
or
fcmove
add
jmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
outs
pop
add
sbb
sti
add
hlt
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
push
(bad)
add
iret
inc
add
inc
add
inc
add
mov
adc
xchg
jg
and
call
pop
sti
(bad)
adc
std
dec
adc
inc
add
inc
add
dec
idiv
push
es
(bad)
sbb
call
push
aad
or
sar
add
loopne
sbb
cwde
jnp
push
stc
(bad)
cmp
(bad)
cmp
(bad)
sub
adc
pop
(bad)
(bad)
pop
and
jmp
push
repz
aas
pop
jmp
cmp
in
xor
(bad)
and
aad
(bad)
sar
or
fst
or
cmp
sti
hlt
ins
mov
(bad)
push
sti
call
sti
push
dec
sti
(bad)
adc
or
loopne
xchg
jmp
jmp
push
fdivr
das
inc
frndint
or
push
add
add
sub
ins
fwait
stos
cld
hlt
stos
sar
jp
sti
dec
sti
cld
or
stos
pusha
add
add
or
fs
mov
jae
call
loop
sbb
add
inc
adc
and
pop
and
add
pop
sub
add
pop
add
add
add
add
add
add
add
jl
add
ins
push
add
add
add
xlat
jmp
add
scas
nop
add
int3
inc
add
inc
add
hlt
add
cmp
and
add
add
add
jno
add
into
sti
add
int
add
int
add
int3
inc
add
inc
add
fld
add
or
add
add
hlt
add
sar
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
retf
add
gs
add
add
add
add
add
mov
cld
add
(bad)
add
(bad)
add
fcos
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
or
add
add
add
mov
add
add
loopne
add
loop
add
jecxz
add
jecxz
add
loop
add
(bad)
add
(bad)
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
or
add
add
loop
add
aas
and
add
add
add
or
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
std
add
mov
add
add
add
fdivr
add
(bad)
add
add
push
in
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
add
add
sbb
add
inc
add
inc
add
xor
add
push
and
hlt
inc
push
sti
inc
push
std
inc
(bad)
inc
add
inc
add
inc
add
inc
push
repnz
sbb
call
sbb
dec
(bad)
inc
or
inc
add
inc
add
inc
add
imul
add
cmp
add
retf
in
add
int3
inc
add
inc
add
inc
add
inc
add
out
add
mov
add
or
add
rdmsr
inc
repz
xor
(bad)
and
cld
(bad)
and
cld
(bad)
sbb
cld
dec
add
(bad)
(bad)
sbb
clc
(bad)
and
inc
jmp
cmp
(bad)
sbb
(bad)
(bad)
adc
sar
add
sar
pop
or
(bad)
lahf
lahf
cmc
das
add
and
add
int
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fiadd
add
add
add
add
add
inc
pop
sti
dec
sti
dec
sti
(bad)
cmp
sti
jmp
inc
cld
(bad)
adc
std
dec
or
call
and
mov
dec
push
jmp
push
dec
(bad)
and
and
call
sbb
repz
add
add
add
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
std
add
rcl
add
add
add
and
stos
jl
xchg
sti
(bad)
jbe
sti
push
sti
call
sti
inc
sti
(bad)
and
sbb
mov
dec
pop
fcmovne
jno
repnz
in
(bad)
bound
call
loop
cmp
dec
(bad)
or
cmps
jg
add
or
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
rol
add
add
add
ds
out
scas
mov
cld
inc
cmp
xor
lock
add
sub
add
add
dec
fstp
xchg
movs
out
(bad)
jbe
call
in
adc
jae
add
add
add
cmp
add
leave
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cli
add
cmps
nop
add
and
add
aaa
mov
inc
dec
mov
jb
add
adc
add
add
add
push
sub
add
add
bound
add
(bad)
fild
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
iret
add
cmp
add
sbb
fstp
add
(bad)
add
(bad)
add
loope
add
loop
add
loop
add
loope
add
loopne
add
fdivrp
add
fdivr
add
(bad)
add
fdivr
add
aad
add
sar
add
sar
add
into
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
add
add
add
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
and
add
add
add
std
add
out
add
jmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
or
sbb
(bad)
adc
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
std
add
pop
xor
add
es
cld
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
or
mov
cmp
inc
add
inc
pop
clc
inc
cld
inc
(bad)
inc
push
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
dec
adc
dec
adc
loope
or
fdivr
or
fdivr
or
aam
add
sar
add
int
add
int3
inc
add
inc
add
inc
mov
adc
in
mov
inc
repz
sbb
(bad)
adc
sti
call
std
call
std
dec
std
inc
or
(bad)
inc
add
inc
add
inc
add
dec
clc
call
and
(bad)
pop
sub
call
sub
call
sub
loope
sbb
(bad)
push
and
(bad)
adc
sar
add
add
inc
add
inc
or
inc
add
iret
add
add
sbb
lock
pop
idiv
and
cli
(bad)
es
sti
(bad)
sub
(bad)
sub
(bad)
and
xor
(bad)
push
sub
dec
std
inc
pop
(bad)
inc
add
inc
add
(bad)
adc
cmc
(bad)
daa
aas
lock
sub
(bad)
sub
inc
in
sub
(bad)
es
(bad)
and
fsin
sbb
aad
adc
sar
or
iret
inc
add
(bad)
add
mov
add
add
add
sbb
mov
xor
pop
sti
inc
sti
inc
sti
(bad)
cmp
push
dec
cld
jmp
inc
cld
call
das
cld
dec
sbb
inc
pop
(bad)
inc
or
(bad)
xor
cmp
(bad)
ds
out
inc
in
(bad)
aas
pop
call
push
push
loope
xor
jmp
cmp
call
das
aad
adc
adc
call
and
inc
add
add
cli
call
sti
(bad)
push
jbe
call
sti
call
cli
(bad)
push
jae
inc
sti
(bad)
cmp
jmp
inc
sti
(bad)
sbb
cld
dec
std
dec
add
cs
cmc
call
icebp
call
out
(bad)
push
jb
call
out
dec
gs
inc
pop
loopne
ss
fdivr
sub
fdivr
and
aam
sbb
(bad)
jmp
cs
add
addr16
add
adc
dec
repz
mov
sti
(bad)
js
sti
(bad)
jbe
sti
(bad)
ins
(bad)
cli
(bad)
pop
jg
dec
sti
(bad)
cmp
(bad)
daa
aas
cld
(bad)
push
xor
dec
or
add
add
imul
jo
repz
ins
mov
(bad)
imul
(bad)
pop
jnp
(bad)
push
outs
jecxz
inc
popa
loopne
cmp
(bad)
ss
fsin
inc
push
(bad)
add
add
add
cmc
call
sahf
mov
sti
dec
xchg
sti
call
sti
inc
sti
(bad)
cmp
jmp
das
lock
add
adc
add
add
add
add
push
outs
xor
in
fwait
scas
cmc
(bad)
xchg
scas
repz
xchg
jmp
ins
xchg
jmp
in
push
pusha
fdivrp
or
mov
add
add
add
push
xor
inc
mov
(bad)
(bad)
scas
(bad)
cld
call
cwde
sti
jmp
sti
(bad)
sub
add
sub
add
sub
sbb
xchg
jno
arpl
rol
xchg
(bad)
outs
jp
dec
fsubrp
sbb
mov
add
ins
dec
add
add
add
add
inc
inc
stos
cmp
xchg
mov
mov
inc
dec
out
add
add
add
add
aas
aas
nop
pop
aas
aas
mov
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
sti
(bad)
(bad)
inc
add
push
(bad)
(bad)
inc
add
jmp
jg
inc
add
inc
pop
(bad)
inc
add
inc
add
inc
pop
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
pop
(bad)
inc
add
inc
add
(bad)
(bad)
dec
inc
add
(bad)
(bad)
inc
inc
add
(bad)
(bad)
inc
(bad)
(bad)
inc
inc
add
(bad)
(bad)
inc
aas
add
(bad)
(bad)
(bad)
cld
add
add
(bad)
std
(bad)
clc
add
add
(bad)
clc
push
add
add
(bad)
clc
jg
add
add
push
aas
lock
add
jmp
pop
lock
add
inc
pop
lock
add
inc
add
add
add
inc
add
inc
add
aas
add
cld
add
ud0
add
clc
add
pop
(bad)
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
pop
(bad)
inc
add
add
ud0
add
inc
(bad)
jg
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
or
sub
add
inc
add
add
add
add
add
add
inc
add
add
jmp
add
add
inc
add
add
add
add
into
fild
add
inc
add
sti
add
sahf
jae
add
add
add
stos
add
int3
inc
add
inc
add
inc
add
inc
add
retf
add
push
add
add
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
add
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
add
add
fnstenv
add
fdivr
add
fdivr
add
(bad)
add
fcos
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
add
fisub
add
loop
add
in
add
in
add
jecxz
add
loopne
add
(bad)
add
(bad)
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sti
add
lods
dec
add
test
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
cmp
adc
add
icebp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
out
inc
or
loope
or
(bad)
push
or
inc
push
sar
add
int3
inc
add
inc
add
inc
add
iret
add
jbe
xor
call
and
call
sub
call
daa
cld
call
pop
std
dec
paddw
add
(bad)
inc
add
inc
or
call
cs
call
xor
call
xor
call
sub
call
adc
inc
push
int
add
aad
or
loop
add
js
dec
addr16
cs
sti
push
push
cld
jmp
cld
dec
sbb
inc
add
inc
or
jmp
inc
clc
push
push
in
(bad)
cmp
push
loop
sub
fdivr
pop
das
aad
adc
aam
or
add
pop
jbe
dec
sti
call
sti
call
sti
dec
(bad)
cmp
jmp
cmp
dec
std
inc
or
mov
push
jo
call
out
call
jmp
pop
loope
xor
jmp
xor
jmp
fcos
add
movs
jnp
add
add
aaa
cld
lahf
mov
sti
inc
mov
call
sti
push
aaa
cld
sti
add
jg
add
ds
pop
outs
not
sbb
ins
mov
call
in
dec
arpl
dec
fdivrp
and
xlat
xlat
add
add
add
add
cmp
mov
cld
call
sti
dec
sti
sti
or
mov
(bad)
mov
xchg
in
push
call
out
pop
popf
pop
add
or
add
and
xor
jg
daa
jle
add
jg
add
ins
pop
add
add
add
add
add
jmp
add
ss
add
fdivrp
add
cmps
imul
rcr
add
(bad)
sti
add
mov
add
add
inc
add
inc
add
inc
add
inc
add
sldt
xor
add
int
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
pushf
jae
add
pop
add
xor
add
rcr
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
add
add
fild
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xlat
add
ins
aas
add
mov
out
add
fcos
add
(bad)
add
(bad)
add
fcos
add
fdivr
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
add
ja
add
ja
add
movs
cmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
ret
add
cmp
add
je
add
jmp
add
add
adc
adc
out
push
jecxz
add
in
add
out
add
out
add
out
add
out
add
in
add
loop
add
fdivrp
add
(bad)
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
loopne
add
loope
add
jo
add
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
fdivr
add
(bad)
add
(bad)
add
ss
add
cmp
sbb
jmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jecxz
add
add
add
rol
add
inc
add
inc
add
inc
add
jecxz
add
add
add
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
jmp
push
or
dec
push
loopne
or
(bad)
push
or
inc
push
sar
add
into
inc
add
inc
add
inc
add
inc
add
(bad)
jg
hlt
sub
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
sahf
pop
adc
in
fwait
and
pop
clc
call
push
cld
call
pop
std
dec
sbb
dec
adc
inc
push
(bad)
inc
add
inc
add
inc
add
dec
and
call
sub
call
sub
call
sub
call
es
adc
xlat
dec
or
inc
add
inc
add
dec
or
(bad)
jg
repz
add
data16
add
int3
sti
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
sbb
lock
aaa
dec
idiv
and
sti
jmp
inc
cld
jmp
inc
cld
jmp
cld
call
and
inc
push
std
inc
add
inc
add
call
sub
jmp
inc
out
jmp
inc
jmp
inc
loopne
es
call
das
xlat
call
sar
or
iret
inc
add
dec
push
fdivrp
jg
icebp
aas
add
xor
add
int
add
int
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sti
add
rcr
adc
mov
push
jae
(bad)
cmp
sti
inc
sti
inc
sti
inc
sti
push
aas
cld
call
sub
dec
paddw
pop
or
call
sbb
retf
cmp
idiv
inc
pop
repnz
in
inc
jmp
(bad)
cmp
push
inc
(bad)
and
es
or
aam
adc
add
sldt
add
add
into
xlat
add
into
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
test
add
add
add
jb
cli
call
sti
jmp
sti
jmp
sti
call
sti
dec
sti
(bad)
cmp
sti
jmp
inc
cld
call
cld
dec
push
std
out
add
inc
push
stc
fistp
jmp
out
jmp
in
call
call
inc
loopne
xor
cmp
jmp
inc
(bad)
or
fisub
add
add
add
rol
add
sar
add
sar
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
lahf
jg
add
or
add
add
cld
scas
sahf
mov
dec
cmps
sti
(bad)
jle
sti
jmp
sti
call
sti
push
push
sti
jmp
aas
sti
inc
or
add
ds
gs
out
movs
hlt
(bad)
jge
lock
in
jmp
call
dec
(bad)
push
ins
loopne
and
(bad)
xlat
add
xor
add
add
rol
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
or
xor
fwait
scas
mov
cld
jmp
mov
sti
call
sti
call
sbb
add
add
adc
cmp
fwait
lea
call
xchg
dec
fsubrp
or
add
sldt
xor
fild
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
jg
das
xor
mov
xor
std
cmps
add
jg
add
add
add
ins
das
add
push
add
push
add
add
repz
fcos
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
fcos
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
cmps
pop
add
movs
inc
add
sti
add
fdivr
add
(bad)
add
fdivrp
add
fdivrp
add
(bad)
add
fdivrp
add
fdivrp
add
(bad)
add
fdivr
add
(bad)
add
(bad)
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
fdivp
or
loopne
add
loopne
add
loope
add
loop
add
loop
add
jecxz
add
jecxz
add
loop
add
loope
add
loopne
add
(bad)
add
(bad)
add
fdivr
add
(bad)
add
fdivr
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
stos
add
add
add
add
add
jecxz
add
loop
add
in
add
in
add
out
add
out
add
out
add
out
add
out
add
in
add
in
add
jecxz
add
loope
add
(bad)
add
(bad)
add
(bad)
add
fcos
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
(bad)
in
adc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fild
add
add
add
xchg
sub
inc
add
in
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
adc
call
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
stos
add
je
sub
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
jmp
inc
or
(bad)
pop
or
fdivr
add
push
sar
add
sar
add
int
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
dec
or
cmc
dec
adc
dec
adc
dec
adc
dec
adc
dec
paddw
add
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
pop
idiv
or
repz
adc
jmp
adc
out
adc
loop
adc
(bad)
adc
fcos
or
adc
inc
or
inc
add
int3
inc
add
inc
add
inc
add
inc
or
inc
add
inc
add
sldt
in
lahf
pop
js
dec
and
call
sti
call
sub
call
sub
call
sub
call
std
call
and
dec
paddw
add
(bad)
inc
add
inc
add
inc
add
dec
push
sti
call
and
call
repnz
sub
call
jmp
sbb
xor
call
xor
call
fdivr
sbb
fcos
adc
(bad)
call
sbb
dec
adc
inc
or
inc
add
inc
add
inc
add
dec
or
inc
or
inc
add
add
lahf
fs
sbb
sti
jmp
cmp
jmp
ds
jmp
aas
cld
jmp
cmp
call
xor
call
sub
std
dec
std
inc
(bad)
inc
add
inc
add
inc
add
inc
or
call
stc
jmp
aaa
cmc
jmp
ds
jmp
inc
jmp
inc
in
sub
loop
daa
cmp
jmp
fdivr
pop
xor
call
sub
call
sbb
dec
adc
inc
pop
sar
add
aam
or
push
loop
add
add
add
icebp
xchg
ins
mov
jmp
sti
push
dec
cld
push
push
cld
push
push
cld
push
push
cld
push
dec
cld
jmp
dec
cld
jmp
aas
cld
call
xor
std
dec
sbb
inc
or
inc
add
inc
add
inc
or
neg
sub
sti
sub
dec
repz
push
in
(bad)
cmp
(bad)
cmp
push
push
in
xor
loop
xor
jmp
inc
fdivr
es
call
xor
call
daa
sar
adc
sar
or
sar
add
aam
sbb
out
add
bound
dec
cli
(bad)
ds
sti
inc
sti
dec
sti
dec
sti
dec
sti
inc
sti
(bad)
ds
sti
push
push
cld
jmp
cmp
call
sub
dec
sbb
inc
(bad)
inc
or
mov
ds
clc
inc
cmc
inc
inc
out
dec
in
inc
jmp
pop
in
cmp
push
(bad)
xor
jmp
ds
and
call
pop
sar
or
aad
and
add
mov
add
jp
aas
dec
clc
(bad)
jp
sti
call
sti
call
sti
call
sti
call
sti
call
sti
call
sti
call
sti
inc
sti
(bad)
cmp
jmp
dec
cld
jmp
cmp
call
sub
dec
pop
std
call
std
inc
add
add
aas
sbb
dec
sti
out
push
outs
cmc
call
call
lock
out
call
jmp
push
jae
call
out
dec
addr16
inc
pop
loop
cmp
dec
(bad)
sub
fdivr
and
aam
xor
pop
push
(bad)
add
outs
cmp
add
add
or
cmps
nop
test
sti
jmp
push
sti
push
push
sti
jmp
sti
jmp
sti
call
sti
dec
sti
(bad)
cmp
jmp
cld
call
xor
cld
call
pop
(bad)
fild
add
add
add
add
add
push
hlt
jmp
repnz
lock
in
jmp
jmp
pusha
jle
call
out
push
outs
in
dec
fs
aas
pop
fdivrp
ss
(bad)
sub
xlat
(bad)
cmp
(bad)
cmp
fdivrp
add
xlat
lahf
add
aas
pop
xor
std
out
(bad)
xchg
scas
cld
dec
stos
cld
dec
lahf
sti
push
sti
jmp
sti
call
sti
inc
sti
push
inc
sti
jmp
add
add
add
sti
xchg
scas
idiv
jge
repnz
jnp
lock
js
out
push
jmp
push
jl
call
loop
dec
gs
dec
popa
fdivrp
arpl
dec
pop
fdivrp
add
rol
add
add
add
aas
daa
cmp
(bad)
jecxz
int
inc
(bad)
std
jmp
mov
cld
inc
xchg
sti
jmp
sti
dec
sti
inc
inc
inc
mov
add
add
ds
lock
xlat
stc
push
bnd
mov
jmp
mov
in
cs
(bad)
sti
add
cdq
xchg
add
add
add
aas
adc
adc
fwait
jge
(bad)
sti
(bad)
(bad)
(bad)
(bad)
std
(bad)
mov
mov
sti
(bad)
jl
sti
push
sti
inc
cld
sti
add
add
add
add
es
pop
pusha
jmp
jmp
out
popa
imul
sti
pop
sbb
iret
add
cdq
add
and
add
add
mov
mov
pop
imul
(bad)
cmp
or
add
add
ins
sbb
add
add
imul
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jg
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
cld
pop
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
jg
(bad)
(bad)
(bad)
(bad)
push
aas
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ud0
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
add
dec
(bad)
inc
add
(bad)
dec
(bad)
cld
add
pop
(bad)
inc
(bad)
cld
add
ud0
cmp
add
ud0
cmp
(bad)
inc
(bad)
clc
add
pop
(bad)
inc
aas
clc
add
pop
(bad)
cld
add
clc
add
ud0
add
clc
add
ud0
add
cld
add
add
sar
rol
pop
add
(bad)
inc
(bad)
(bad)
inc
add
pop
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
push
add
add
jg
push
add
add
jg
push
add
add
aas
(bad)
push
add
add
jg
push
add
add
jg
push
add
add
jg
push
add
add
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
inc
pop
loopne
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
or
sub
add
dec
add
add
add
add
add
add
push
ja
add
add
add
add
add
call
add
add
add
add
(bad)
out
add
out
add
cwde
pop
add
add
add
or
add
inc
add
inc
add
in
add
movs
add
dec
adc
add
cdq
ins
add
int3
stc
add
int3
inc
add
inc
add
inc
add
std
add
iret
int
add
add
add
add
add
icebp
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
leave
add
jp
add
add
add
add
add
ja
add
shr
add
aam
add
aam
add
sar
add
sar
add
sar
add
into
inc
add
inc
add
inc
add
inc
add
hlt
add
les
add
add
add
or
add
jns
add
cmc
add
fcos
add
(bad)
add
fcos
add
fdivr
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
or
add
add
add
(bad)
add
(bad)
add
loopne
add
loopne
add
loopne
add
fdivrp
add
fdivr
add
(bad)
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
clc
add
int3
xchg
add
add
add
ja
or
loop
add
in
add
out
add
call
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
leave
xchg
add
(bad)
loop
pop
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
pop
cmp
add
add
ja
sbb
test
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
lea
add
add
fcomp
push
cmc
inc
cli
inc
std
inc
add
(bad)
inc
add
inc
add
inc
add
inc
add
out
dec
adc
dec
loop
or
(bad)
or
xlat
inc
or
into
inc
add
inc
add
inc
add
inc
add
iret
and
(bad)
sbb
cmc
call
cli
call
sub
call
sub
(bad)
adc
std
dec
adc
(bad)
inc
add
inc
add
dec
sub
call
in
jmp
xor
(bad)
and
loop
sbb
daa
fdivr
adc
dec
bswap
inc
add
inc
add
inc
or
fiadd
add
add
xor
ret
ss
clc
(bad)
cs
sti
(bad)
xor
sti
(bad)
xor
(bad)
sub
sti
(bad)
and
cld
(bad)
adc
cld
inc
or
inc
add
dec
sbb
(bad)
sub
xor
icebp
(bad)
cmp
(bad)
cmp
(bad)
xor
inc
fdivrp
and
fdivr
sbb
sar
or
or
dec
psraw
and
out
pop
jne
dec
sti
call
call
sti
dec
sti
(bad)
cmp
jmp
inc
cld
call
std
dec
or
nop
aaa
dec
cli
fisttp
repz
out
(bad)
push
outs
jmp
dec
imul
push
dec
(bad)
sub
aam
sbb
pop
mov
or
cmp
jns
out
xchg
sti
push
sti
push
sti
(bad)
addr16
call
sti
(bad)
cmp
jmp
cmp
(bad)
push
and
fadd
add
push
sbb
icebp
jb
repnz
outs
(bad)
out
jmp
jmp
data16
cmp
fdivr
cmp
jmp
sub
xlat
add
dec
and
add
add
fwait
cld
in
lods
ret
sahf
mov
sti
jmp
sti
dec
sti
push
dec
cld
test
add
add
add
add
and
out
mov
sti
xchg
test
in
push
call
clc
sub
enter
cmp
add
add
push
(bad)
movs
(bad)
xchg
std
in
test
sti
inc
push
cld
int3
or
dec
add
add
add
xor
sbb
xor
xor
ins
jnp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
cmp
add
shl
add
nop
ins
add
(bad)
add
mov
add
add
add
dec
sbb
add
aam
add
aad
add
lods
data16
add
add
add
add
movs
add
int3
inc
add
inc
add
inc
add
inc
add
add
add
add
xchg
add
clc
add
int3
inc
add
inc
add
inc
add
inc
add
std
add
retf
add
sbb
add
add
add
jae
add
iret
repnz
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
std
add
iret
xlat
add
mov
sbb
add
add
add
add
shr
add
sar
add
sar
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
retf
add
(bad)
pop
add
add
add
add
add
mov
add
repnz
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sti
add
fdivr
add
add
add
add
add
add
add
ror
add
(bad)
add
fdivr
add
fdivr
add
fdivr
add
(bad)
add
(bad)
add
fdivr
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
add
add
sldt
loop
add
add
add
add
add
retf
jl
or
cli
add
loopne
add
loope
add
loop
add
loop
add
loope
add
loopne
add
(bad)
add
(bad)
add
(bad)
add
fdivr
add
aad
add
sar
add
sar
add
into
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
stos
jo
add
add
add
sub
add
cmp
add
add
add
or
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
add
mov
add
cmps
jg
add
inc
add
ret
add
add
add
cmp
or
in
push
adc
jmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
aam
add
or
add
add
fcomp
add
fsin
add
(bad)
add
lods
xchg
add
add
add
jmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sti
add
je
add
add
add
mov
add
sar
add
aam
add
aad
add
(bad)
stc
add
mov
sldt
add
movhps
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
out
add
or
inc
pop
aam
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
outs
inc
add
into
in
add
iret
inc
add
inc
add
inc
add
inc
add
stc
add
scas
lods
add
pop
add
add
push
sub
aam
and
inc
push
idiv
or
sti
dec
adc
std
inc
or
(bad)
inc
add
inc
add
inc
add
inc
add
dec
adc
dec
pop
jmp
and
(bad)
adc
(bad)
adc
aam
or
sar
add
int
add
int
add
sar
add
(bad)
add
add
pop
add
add
add
aam
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fiadd
add
or
add
sub
icebp
(bad)
sub
(bad)
sbb
xor
call
cld
call
sub
call
push
std
inc
paddw
add
(bad)
inc
add
inc
add
(bad)
adc
stc
call
repz
ss
jmp
cmp
(bad)
and
xor
call
and
dec
sbb
inc
or
inc
add
inc
add
dec
or
mov
add
add
add
lahf
movs
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
add
add
pop
pop
xor
repz
push
clc
(bad)
cs
sti
(bad)
xor
sti
(bad)
ss
sti
(bad)
xor
(bad)
sub
sti
(bad)
and
cld
(bad)
push
sub
dec
adc
(bad)
inc
add
cld
cli
cs
idiv
xor
push
in
(bad)
cmp
cmp
(bad)
xor
loop
cs
(bad)
es
(bad)
sbb
pop
sar
or
sar
or
fsin
add
add
add
add
add
add
sahf
jle
add
cld
add
int
add
int
add
int
add
int
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmc
add
shr
add
add
add
add
xor
cli
inc
sti
(bad)
push
jo
call
sti
dec
sti
inc
sti
push
push
sti
(bad)
sub
call
sub
dec
adc
dec
adc
inc
or
jb
push
stc
repnz
push
lock
in
dec
jmp
inc
loop
aaa
push
(bad)
sub
fdivr
and
aam
push
and
jmp
sub
jne
add
add
add
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
add
lods
movs
add
dec
aaa
add
add
add
add
adc
bound
sti
cli
push
sti
(bad)
ins
mov
jmp
sti
jmp
sti
call
sti
dec
(bad)
cmp
jmp
ds
call
sub
dec
add
push
and
jnp
stc
push
xchg
(bad)
data16
call
call
dec
loope
cmp
jmp
inc
fdivr
xor
(bad)
sbb
(bad)
aad
add
add
add
add
shr
add
sar
add
sar
add
sar
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
and
add
add
add
adc
mov
cld
xchg
mov
call
cmps
sti
push
sti
jmp
cli
dec
sti
push
sti
jmp
add
add
add
add
xor
mov
cmc
mov
lock
jns
in
jmp
call
in
push
jo
call
loopne
sub
push
add
add
add
movs
ja
add
test
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
pop
add
pop
pop
sub
scas
std
dec
fdivr
(bad)
mov
cld
(bad)
xchg
lods
sti
(bad)
je
cli
(bad)
fs
inc
push
cld
icebp
or
add
adc
mov
enter
std
lahf
lods
icebp
(bad)
xchg
movs
out
(bad)
jno
out
dec
push
fsubr
adc
lods
xchg
add
dec
daa
add
add
add
aad
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
retf
add
ins
inc
add
(bad)
sub
pop
pop
(bad)
mov
push
pop
std
ret
and
aam
add
imul
add
add
add
ja
add
jne
add
popa
sbb
add
scas
add
fdivr
add
fsin
add
fcos
add
fcos
add
(bad)
add
fcos
add
fsin
add
fcos
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
push
add
add
add
add
add
sldt
add
add
add
add
add
sar
add
(bad)
add
fdivr
add
fdivr
add
(bad)
add
(bad)
add
(bad)
add
fdivr
add
fdivr
add
(bad)
add
(bad)
add
fsin
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cli
add
ret
mov
add
pop
add
add
add
fdivr
add
fdivrp
add
(bad)
add
(bad)
add
loopne
add
loope
add
loope
add
loope
add
loopne
add
loopne
add
(bad)
add
fdivrp
add
fdivr
add
(bad)
add
(bad)
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
leave
add
jg
add
add
add
lods
xchg
or
inc
or
loope
add
loop
add
jecxz
add
in
add
in
add
in
add
in
add
in
add
jecxz
add
loop
add
loope
add
loopne
add
fdivrp
add
(bad)
add
(bad)
add
fsin
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
int
add
add
xchg
pop
or
loope
nop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
or
add
add
sub
inc
add
out
add
jmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
clc
add
shr
add
add
add
std
adc
call
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jecxz
add
or
add
or
out
and
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
cli
sbb
in
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
or
add
add
fisub
movlhps
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
add
or
inc
or
inc
or
inc
push
aam
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
loopne
add
out
add
sbb
add
push
(bad)
cmp
dec
or
inc
push
hlt
inc
clc
inc
or
inc
or
(bad)
inc
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
push
cmc
inc
or
dec
adc
dec
adc
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
adc
aam
pop
or
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
or
inc
add
std
add
xor
add
cmc
push
sbb
out
icebp
inc
pop
repnz
adc
dec
idiv
nop
call
and
call
and
call
and
call
pop
cld
dec
sbb
dec
adc
std
inc
pop
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
adc
dec
sbb
call
and
call
in
(bad)
pop
es
sbb
call
call
sub
(bad)
sbb
loopne
pop
es
adc
and
call
sbb
dec
sar
or
sar
add
add
inc
add
inc
add
inc
add
dec
or
in
add
lahf
inc
jg
neg
and
lock
addr16
(bad)
adc
idiv
sbb
cli
(bad)
sbb
cld
(bad)
sbb
xor
(bad)
push
xor
(bad)
sbb
cld
(bad)
sbb
cld
(bad)
push
sub
(bad)
adc
cld
dec
push
std
inc
add
inc
add
inc
add
inc
add
inc
add
dec
sbb
(bad)
pop
sub
(bad)
sbb
repz
push
xor
(bad)
and
in
(bad)
and
jmp
cmp
(bad)
and
loop
and
(bad)
sbb
sub
(bad)
push
and
(bad)
adc
sar
pop
push
int
add
sar
add
aad
or
fdivr
or
sahf
inc
jg
neg
es
repz
jae
jmp
ss
jmp
inc
cld
jmp
cld
jmp
inc
cld
jmp
inc
sti
(bad)
daa
inc
cld
jmp
cmp
call
sub
call
pop
cld
dec
adc
inc
pop
(bad)
inc
add
inc
add
inc
add
std
call
xor
jmp
cmp
repnz
sub
out
jmp
inc
in
push
dec
jmp
(bad)
das
inc
in
cs
loop
sub
loopne
sub
(bad)
and
xlat
call
sub
call
sbb
dec
adc
inc
sar
add
aam
adc
add
cld
add
and
add
add
and
out
out
arpl
cli
push
dec
sti
(bad)
cmp
(bad)
cmp
(bad)
cmp
pop
sti
(bad)
cmp
(bad)
ss
cld
push
dec
cld
jmp
inc
cld
jmp
cmp
call
cs
(bad)
adc
std
dec
adc
inc
push
(bad)
inc
add
inc
or
inc
push
(bad)
fisub
xor
repz
xor
push
icebp
(bad)
cmp
(bad)
cmp
pop
jmp
(bad)
cmp
aaa
push
jecxz
xor
jmp
inc
(bad)
sub
(bad)
and
xlat
call
das
aad
sbb
sar
adc
sar
add
sub
inc
add
fiadd
add
push
sbb
(bad)
outs
mov
dec
sti
inc
sti
dec
sti
dec
dec
sti
dec
sti
dec
sti
inc
sti
(bad)
ds
sti
push
push
cld
jmp
dec
cld
jmp
cld
(bad)
sbb
cld
call
and
dec
adc
inc
add
dec
(bad)
inc
add
jno
sbb
mov
pop
clc
inc
cmc
inc
repnz
lock
out
dec
jmp
dec
jmpw
arpl
inc
in
aas
pop
loop
cmp
(bad)
xor
(bad)
sub
cmp
jmp
xor
(bad)
sbb
sar
adc
xlat
jmp
das
fdivrp
add
shl
add
out
data16
(bad)
jno
cli
(bad)
push
jno
(bad)
pop
jns
(bad)
pop
jge
(bad)
pop
jg
(bad)
pop
jg
(bad)
pop
jl
(bad)
push
jbe
dec
cli
inc
(bad)
cmp
(bad)
das
dec
sti
(bad)
and
cld
(bad)
sbb
cld
(bad)
adc
cld
dec
adc
(bad)
adc
(bad)
loope
add
and
add
cmp
jo
(bad)
push
jae
(bad)
push
jne
(bad)
pop
ja
(bad)
pop
jbe
(bad)
push
jne
(bad)
push
jb
(bad)
push
ins
out
dec
addr16
inc
pusha
loope
ds
(bad)
aaa
push
fdivr
xor
(bad)
sub
(bad)
(bad)
and
aam
sbb
aad
cmp
adc
(bad)
add
jnp
add
pop
and
xor
fst
xchg
cli
(bad)
imul
push
sti
push
sti
jmp
cli
(bad)
addr16
call
sti
call
sti
inc
sti
(bad)
cmp
(bad)
cs
cld
jmp
cmp
call
sub
call
das
cld
inc
add
jge
add
add
add
add
add
push
pop
outs
idiv
imul
jmp
lock
out
(bad)
addr16
jmp
jmp
jbe
call
jecxz
dec
gs
inc
pop
(bad)
cmp
push
inc
fdivr
sub
(bad)
das
cmp
std
add
xlat
call
add
add
cmps
addr16
imul
stos
sar
mov
sti
dec
movs
sti
inc
cwde
sti
jmp
sti
jmp
sti
call
sti
inc
(bad)
ss
cld
jmp
inc
cld
jmp
sti
call
jb
add
add
or
outs
push
movs
cmc
(bad)
jle
repz
jns
lock
ja
out
push
in
jmp
jmp
call
(bad)
push
jno
dec
loopne
inc
pop
fdivrp
inc
pusha
(bad)
pusha
jns
(bad)
cmp
push
retf
add
add
add
or
test
outs
jnp
cmc
mov
enter
mov
cld
call
test
(bad)
jnp
sti
jmp
call
sti
dec
cli
(bad)
aas
pop
sti
(bad)
aas
pop
sti
jmp
cmp
in
add
xchg
add
add
push
pop
out
mov
shl
lahf
mov
call
mov
in
push
(bad)
outs
mov
push
out
jp
out
ins
and
xor
xlat
hlt
add
scas
mov
add
add
add
scas
push
push
(bad)
call
fucom
std
dec
(bad)
push
mov
dec
cwde
sti
jmp
sti
call
sti
(bad)
pop
jp
(bad)
xor
in
add
(bad)
data16
pop
es
pop
out
mov
int
inc
shl
(bad)
mov
mov
jmp
addr16
sti
xor
or
xchg
push
add
add
add
jg
or
out
xchg
(bad)
fst
mov
std
(bad)
mov
cld
(bad)
lahf
mov
sti
(bad)
push
fs
(bad)
sbb
(bad)
mov
add
cmp
add
outs
push
add
mov
add
aad
add
rcr
add
addr16
add
pusha
and
add
add
add
packsswb
cmp
(bad)
jb
ins
call
push
(bad)
popf
pushw
popa
popa
(bad)
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
jg
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
cld
ud0
(bad)
inc
add
(bad)
(bad)
(bad)
clc
pop
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
push
add
(bad)
(bad)
inc
add
(bad)
(bad)
jmp
add
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
pusha
ud0
inc
add
(bad)
(bad)
inc
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jg
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
pop
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
cld
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
jg
add
(bad)
(bad)
sti
(bad)
push
add
aas
add
add
push
(bad)
jmp
add
pop
add
add
push
(bad)
inc
add
pop
add
add
jmp
(bad)
inc
add
sldt
add
jmp
jg
rol
sldt
add
inc
pop
inc
add
sldt
add
inc
ud0
add
(bad)
inc
add
add
add
inc
add
rol
sldt
add
inc
add
rol
sldt
add
cld
add
xadd
add
add
add
clc
add
pop
loopne
cmp
add
push
add
add
psraw
add
add
rol
add
(bad)
(bad)
inc
add
inc
(bad)
(bad)
inc
add
inc
(bad)
(bad)
inc
add
inc
add
add
(bad)
(bad)
inc
add
inc
add
add
(bad)
(bad)
inc
add
cld
add
add
pop
(bad)
(bad)
inc
add
cld
add
add
pop
(bad)
(bad)
inc
add
clc
add
add
add
(bad)
inc
add
clc
add
add
add
(bad)
inc
add
clc
add
add
add
(bad)
inc
add
clc
add
add
add
(bad)
inc
add
lock
add
add
(bad)
inc
add
lock
add
add
(bad)
inc
add
lock
add
add
(bad)
inc
add
clc
add
add
add
(bad)
inc
add
clc
add
add
add
(bad)
inc
add
clc
add
add
add
(bad)
inc
add
clc
add
rol
(bad)
(bad)
inc
add
cld
add
loopne
pop
(bad)
(bad)
inc
add
inc
add
add
(bad)
(bad)
inc
add
inc
add
add
(bad)
(bad)
inc
add
inc
(bad)
(bad)
inc
add
push
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
rol
add
add
add
add
add
nop
add
add
jmp
add
jne
add
push
and
add
in
add
test
add
add
add
add
add
fdivr
add
(bad)
add
mov
add
add
add
adc
add
inc
add
inc
add
test
lods
pop
add
xor
add
jg
add
retf
ret
add
int3
inc
add
inc
add
inc
add
inc
add
lock
rcr
add
int
add
int3
sti
add
int
add
int3
inc
add
inc
add
inc
add
inc
add
sti
add
iret
fadd
add
add
sbb
add
test
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
xchg
add
add
add
adc
add
repz
sar
add
sar
add
sar
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
les
add
pop
add
add
add
lods
movs
add
aad
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
lock
xlat
ret
jnp
add
add
add
mov
add
fnstcw
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
add
fidivr
add
add
mov
add
(bad)
add
fdivrp
add
(bad)
add
loopne
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repnz
loope
add
push
adc
add
add
add
loopne
add
loope
add
jecxz
add
in
add
in
add
in
add
in
add
in
add
loope
add
loopne
add
fdivrp
add
(bad)
add
fsin
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sti
add
xlat
xchg
add
add
add
add
add
mov
adc
in
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
nop
jae
add
add
add
jno
adc
in
(bad)
call
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
into
add
cmp
add
arpl
xor
icebp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cli
add
mov
add
add
adc
out
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
push
jmp
or
inc
or
inc
or
inc
aad
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
stos
add
cmp
sbb
inc
or
dec
adc
dec
adc
dec
adc
dec
paddw
add
add
inc
add
inc
add
inc
add
inc
add
inc
adc
dec
sbb
(bad)
adc
jmp
(bad)
adc
loope
adc
(bad)
adc
aad
or
sar
add
add
inc
add
inc
add
inc
(bad)
add
in
add
cmp
sub
xor
call
sti
(bad)
sbb
cld
call
sub
cld
(bad)
adc
std
dec
push
std
inc
add
inc
add
inc
add
dec
adc
call
sub
(bad)
sbb
lock
pop
xor
jmp
ss
(bad)
and
call
xor
(bad)
sbb
fsin
push
and
dec
sbb
dec
adc
inc
push
into
inc
add
dec
or
inc
cmp
xor
dec
clc
jmp
inc
sti
jmp
dec
cld
push
dec
cld
push
dec
cld
jmp
aas
cld
call
and
dec
adc
inc
add
inc
add
dec
paddd
and
inc
hlt
push
dec
lock
dec
jmp
push
dec
loop
sub
fdivrp
daa
cmp
call
cs
push
and
dec
sbb
inc
sar
or
or
ret
add
cmp
ss
cmc
ret
push
ins
stc
(bad)
cmp
sti
inc
sti
inc
sti
inc
sti
inc
sti
(bad)
cmp
jmp
cmp
(bad)
adc
paddw
add
or
leave
sub
cli
out
pop
idiv
inc
popa
repnz
out
dec
jmp
inc
arpl
inc
in
cmp
loope
xor
aas
fdivr
and
aad
sbb
sar
adc
aam
adc
(bad)
add
add
or
sub
cdq
push
cli
call
cli
(bad)
pop
jnp
(bad)
pop
jg
call
cli
(bad)
push
js
dec
sti
(bad)
ds
sti
(bad)
xor
(bad)
and
cld
call
pop
std
dec
std
inc
add
std
jle
addr16
push
jne
call
lock
pop
jp
(bad)
pop
ja
call
dec
in
inc
pop
loope
cmp
(bad)
sub
xor
(bad)
and
fdivr
sbb
add
add
data16
aad
movs
sti
(bad)
jnp
sti
(bad)
jle
sti
(bad)
jge
sti
push
jmp
sti
call
sti
inc
sti
jmp
dec
cld
jmp
aaa
cld
(bad)
adc
add
push
add
das
adc
cmp
(bad)
ins
test
cmc
jns
repz
lock
out
jmp
jmp
jb
dec
(bad)
aas
push
fdivr
aas
push
(bad)
cmp
cmc
pop
or
or
add
add
adc
popa
jns
cld
in
stos
sar
cmps
mov
sti
dec
call
dec
ins
cli
inc
sti
jmp
xor
loop
or
add
add
add
or
xor
repnz
mov
(bad)
movs
mov
out
inc
xchg
jmp
(bad)
pop
jae
inc
(bad)
pop
or
pop
add
add
pop
sbb
pop
bound
aad
ret
into
fdivr
(bad)
mov
cld
(bad)
xchg
mov
(bad)
jns
cli
(bad)
ins
mov
(bad)
ds
cld
test
into
dec
add
add
add
add
adc
inc
jmp
test
(bad)
jb
call
(bad)
cmp
(bad)
sbb
shl
add
or
add
or
add
fwait
dec
dec
mov
mov
adc
mov
and
add
das
add
add
add
add
add
xchg
and
add
jmp
add
adc
add
test
loopne
add
popa
xor
add
add
add
add
fsin
add
fisubr
add
push
rol
add
inc
add
inc
add
cld
add
enter
dec
pop
add
pop
sbb
add
lods
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
aam
add
add
add
add
int3
add
retf
test
retf
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repnz
mov
add
push
add
add
je
add
int
add
int
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sti
add
iret
fld
add
adc
add
add
add
iret
in
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
add
rol
add
add
add
sbb
rcl
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
iret
add
mov
sbb
add
add
aam
add
aad
add
aad
add
aad
add
aad
add
aam
add
sar
add
sar
add
sar
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
repz
mov
inc
add
pop
adc
add
xchg
add
repz
fdivr
add
fsin
add
fsin
add
fcos
add
fdivr
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sbb
add
add
add
add
add
add
add
add
add
repz
(bad)
add
fdivr
add
fdivr
add
(bad)
add
(bad)
add
fdivr
add
(bad)
add
(bad)
add
fsin
add
fdivr
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
stc
add
fidiv
add
add
add
out
pop
add
cmp
add
add
push
or
test
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
std
add
loope
add
sub
add
sub
add
int
add
pop
add
add
add
in
pop
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
int
add
add
add
cli
add
in
add
push
adc
add
nop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sti
add
out
add
cmp
add
fistp
add
loopne
add
test
add
jecxz
adc
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
icebp
add
mov
add
add
inc
add
inc
add
inc
add
in
add
mov
add
pop
add
sub
adc
out
push
and
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
xor
add
mov
inc
add
inc
add
inc
add
inc
add
fiadd
add
add
add
dec
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
clc
aas
aas
cwde
pop
add
add
add
mov
add
shl
add
sar
add
sar
add
sar
add
aam
add
aad
add
(bad)
jmp
add
add
dec
lock
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
pop
out
inc
push
out
or
jecxz
or
loopne
or
fdivr
or
fcos
pop
push
(bad)
inc
push
sar
add
into
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
(bad)
aas
aas
out
dec
add
pop
cmp
add
aad
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmc
add
rcl
add
jne
adc
inc
repnz
or
idiv
or
sbb
dec
pop
std
dec
adc
inc
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
adc
dec
sbb
(bad)
adc
out
(bad)
adc
es
pop
daa
in
pop
daa
loopne
push
and
(bad)
adc
xlat
dec
sbb
dec
adc
inc
into
inc
add
inc
add
inc
add
inc
add
dec
adc
(bad)
aas
aas
in
pop
add
add
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cli
add
rol
add
imul
add
and
hlt
call
and
(bad)
pop
sub
(bad)
sbb
cld
call
cld
(bad)
sbb
cld
(bad)
sbb
cld
(bad)
adc
cld
dec
adc
std
inc
add
inc
add
inc
add
inc
add
(bad)
adc
stc
call
sub
(bad)
sbb
icebp
(bad)
and
jmp
cmp
jmp
ss
and
(bad)
sbb
sub
(bad)
adc
aam
push
sbb
dec
bswap
inc
push
into
inc
add
inc
add
dec
loope
aas
aas
in
pop
add
cdq
ja
add
cld
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
add
ja
and
(bad)
idiv
and
stc
jmp
ds
jmp
inc
cld
jmp
cld
jmp
inc
cld
jmp
inc
cld
jmp
cld
call
xor
call
sub
dec
sbb
inc
push
std
inc
add
inc
add
inc
add
call
and
jmp
idiv
sub
jmp
dec
in
push
dec
jmp
inc
in
sub
cmp
(bad)
pop
xor
call
es
adc
iret
inc
sar
add
dec
adc
(bad)
aas
aas
jmp
add
add
add
int3
in
add
int
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
test
ror
add
add
add
pop
pop
and
in
popa
jle
push
cli
(bad)
cmp
(bad)
aas
pop
sti
inc
sti
inc
sti
(bad)
cmp
push
sti
(bad)
xor
(bad)
and
xor
(bad)
adc
cld
dec
paddw
add
(bad)
dec
or
(bad)
fsubr
inc
cli
clc
cmp
(bad)
ds
repnz
out
inc
in
inc
jmp
(bad)
ds
in
cmp
push
dec
(bad)
sub
(bad)
and
xlat
call
aam
adc
adc
fsin
or
fdivrp
aas
aas
mov
add
add
xlat
add
int
add
int
add
int
add
int
add
int
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
rcl
add
cmp
dec
and
add
add
push
mov
dec
sti
dec
sti
(bad)
push
jb
call
cli
(bad)
push
je
dec
sti
dec
sti
(bad)
aas
pop
sti
(bad)
xor
jmp
inc
sti
(bad)
sbb
push
std
inc
or
std
inc
add
push
daa
ss
ret
inc
arpl
dec
repz
lock
push
jno
(bad)
push
jo
call
call
inc
in
aas
pop
loopne
cmp
(bad)
cs
fcos
es
(bad)
sbb
and
jmp
xor
dec
push
fst
add
je
add
into
loope
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
stc
add
(bad)
retf
add
sahf
ja
add
adc
add
push
cli
(bad)
pop
cmp
addr16
jmp
cli
(bad)
imul
cli
(bad)
push
outs
cli
inc
sti
push
sti
(bad)
es
sti
(bad)
pop
sub
call
and
dec
paddd
add
add
movlps
out
jge
jmp
icebp
(bad)
gs
fs
popa
jg
(bad)
pop
jns
(bad)
push
jb
dec
inc
(bad)
cmp
jmp
inc
fdivr
es
(bad)
das
inc
(bad)
es
clc
add
fisub
add
add
add
into
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
add
add
add
and
cld
lods
xchg
sti
inc
mov
sti
(bad)
jl
sti
push
sti
jmp
sti
call
sti
inc
sti
push
dec
cld
jmp
sub
into
inc
or
mov
jle
in
sbb
(bad)
jp
icebp
push
out
push
jmp
data16
call
in
push
outs
loop
inc
popa
(bad)
inc
pop
(bad)
dec
popa
fdivrp
ds
fdiv
add
mov
adc
add
ret
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
test
aam
add
xchg
add
add
add
sahf
sub
inc
std
mov
mov
cld
jmp
mov
cld
inc
xchg
sti
(bad)
pop
jge
dec
cli
inc
sti
(bad)
xor
repz
mov
or
pop
sbb
into
xchg
mov
idiv
mov
test
inc
xchg
jmp
mov
jmp
loope
cmp
repnz
add
add
ja
add
shl
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
add
retf
add
add
add
add
lahf
and
mov
std
(bad)
shl
cld
(bad)
mov
cld
call
sahf
sti
(bad)
outs
(bad)
sti
jmp
cli
dec
cld
dec
adc
xchg
add
pop
adc
add
add
pop
xchg
sub
pop
popa
in
in
nop
out
(bad)
mov
cmps
out
inc
jo
(bad)
ss
push
sbb
movs
add
pop
dec
add
add
add
add
add
test
add
in
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
add
fiadd
add
mov
(bad)
push
push
out
lds
(bad)
fmul
std
fist
std
xlat
and
add
push
add
add
add
mov
pop
add
sahf
push
add
pushf
xor
add
add
add
(bad)
out
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
pop
adc
add
add
jg
add
jg
add
jg
add
add
add
add
add
retf
jge
add
test
fsin
add
fsin
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
fsin
add
fcos
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sti
add
(bad)
add
mov
add
pop
sbb
add
cmps
add
(bad)
add
fdivr
add
fdivr
add
fdivr
add
(bad)
add
(bad)
add
(bad)
add
fdivrp
add
fdivrp
add
(bad)
add
(bad)
add
(bad)
add
fdivr
add
fdivr
add
(bad)
add
(bad)
add
(bad)
add
fcos
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sbb
add
add
add
fdiv
or
fdivrp
add
fdivrp
add
fdivrp
add
loopne
add
(bad)
add
loopne
add
loope
add
loopne
add
loopne
add
loopne
add
(bad)
add
(bad)
add
fdivrp
add
(bad)
add
(bad)
add
fdivr
add
(bad)
add
(bad)
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
clc
add
jecxz
add
(bad)
and
add
cmc
or
loopne
push
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
clc
add
in
add
add
add
add
add
mov
add
out
sbb
loop
add
loop
add
jecxz
add
in
add
in
add
in
add
out
add
out
add
out
add
out
add
out
add
out
add
in
add
in
add
in
add
jecxz
add
loop
add
loope
add
loopne
add
(bad)
add
(bad)
add
fdivr
add
(bad)
add
fcos
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
add
pop
add
fistp
adc
jecxz
add
in
add
out
add
out
add
out
add
call
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
icebp
add
scas
ja
add
or
add
clc
sbb
out
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fadd
add
add
add
neg
das
out
adc
call
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
add
add
add
add
mov
out
and
jmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
clc
add
mov
add
jb
add
in
sub
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
imul
inc
in
dec
or
out
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
rol
add
add
cmp
add
out
sub
in
(bad)
sub
out
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fdivr
add
fdivr
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
out
add
jne
add
cmp
or
jmp
sub
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
push
in
inc
or
inc
or
jecxz
or
loope
or
(bad)
or
fdivr
or
(bad)
pop
push
fdivr
push
or
inc
pop
sar
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
or
inc
add
clc
add
je
add
data16
sbb
in
stc
inc
(bad)
icebp
inc
add
idiv
push
or
inc
push
cli
dec
adc
dec
adc
dec
adc
inc
paddw
push
or
(bad)
inc
pop
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
pop
idiv
push
or
icebp
dec
adc
dec
jmp
push
sbb
dec
sbb
call
sbb
call
sbb
loop
adc
(bad)
nop
dec
sbb
dec
adc
dec
adc
inc
or
inc
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
or
inc
add
inc
add
add
add
pop
and
out
(bad)
push
jo
dec
adc
dec
adc
dec
push
idiv
push
sbb
dec
sbb
cld
(bad)
adc
std
call
pop
cld
(bad)
adc
std
dec
std
dec
adc
inc
paddw
add
std
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
adc
dec
sbb
(bad)
adc
lock
and
(bad)
adc
es
sub
(bad)
sbb
in
sbb
loope
pop
es
push
and
(bad)
adc
fdivr
adc
xlat
dec
sbb
dec
adc
inc
or
int
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
dec
fdivrp
add
inc
add
sahf
add
add
add
in
outs
sub
lock
pop
jnp
dec
sbb
call
and
(bad)
adc
call
sub
(bad)
sbb
(bad)
sbb
cld
(bad)
sbb
cld
(bad)
push
sub
call
cld
dec
sbb
std
dec
adc
inc
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
adc
idiv
adc
sub
call
sub
in
(bad)
sbb
xor
(bad)
pop
xor
(bad)
pop
xor
call
xor
(bad)
push
xor
(bad)
push
das
(bad)
sbb
(bad)
sbb
(bad)
sbb
fcos
push
and
(bad)
adc
aad
adc
dec
adc
inc
or
inc
add
into
inc
add
inc
add
inc
add
dec
fdivrp
or
jecxz
add
out
add
add
add
out
outs
xor
jmp
call
sub
call
das
stc
call
xor
jmp
cmp
jmp
cmp
jmp
cld
jmp
cld
jmp
cld
jmp
cmp
jmp
cmp
call
xor
cld
call
sub
call
pop
std
dec
push
std
inc
push
(bad)
inc
push
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
dec
std
call
cs
call
ss
jmp
cmp
jmp
cmp
jmp
aas
call
jmp
cmp
loope
es
jmp
(bad)
and
call
xor
call
sub
call
daa
aad
adc
sar
adc
dec
adc
inc
add
inc
add
inc
add
call
push
(bad)
or
enter
add
add
out
outs
xor
(bad)
push
idiv
pop
xor
stc
(bad)
daa
inc
sti
jmp
inc
sti
(bad)
sub
dec
sti
(bad)
cs
cld
jmp
dec
sti
(bad)
sub
inc
cld
jmp
inc
sti
(bad)
and
aaa
cld
call
cld
(bad)
pop
sub
(bad)
adc
std
dec
adc
inc
add
(bad)
inc
add
inc
add
inc
push
(bad)
call
sub
(bad)
and
idiv
daa
aas
cmc
jmp
inc
repnz
sub
lock
das
dec
out
push
dec
in
(bad)
xor
(bad)
xor
push
dec
out
xor
(bad)
das
inc
jecxz
cs
loope
sub
(bad)
sub
(bad)
and
xlat
call
sub
(bad)
push
and
sar
push
sbb
dec
adc
inc
or
inc
add
inc
add
(bad)
push
sub
inc
add
std
add
jno
add
icebp
pop
xor
(bad)
outs
mov
(bad)
xor
stc
jmp
dec
cld
push
push
sti
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
ss
cld
push
dec
sti
(bad)
das
dec
sti
(bad)
sub
jmp
ss
(bad)
sbb
cld
dec
sbb
dec
paddw
add
(bad)
inc
add
inc
or
inc
add
cld
cmc
cs
clc
(bad)
das
dec
idiv
xor
(bad)
xor
push
lock
cmp
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
cmp
push
dec
jecxz
xor
loope
xor
jmp
aas
(bad)
es
jmp
xor
(bad)
sbb
daa
sar
adc
sar
nop
dec
adc
inc
or
inc
add
(bad)
sub
loopne
add
fucomip
add
jo
add
cmp
daa
xor
out
jno
clc
call
cli
(bad)
cmp
(bad)
cmp
popa
sti
inc
sti
inc
sti
dec
sti
dec
sti
inc
sti
inc
cld
(bad)
aas
pop
sti
(bad)
cmp
push
dec
cld
jmp
inc
cld
jmp
cmp
call
cld
call
sbb
dec
adc
inc
add
(bad)
dec
paddd
add
(bad)
xchg
xor
std
cmp
(bad)
ds
cmc
inc
repz
icebp
inc
out
inc
in
inc
in
inc
jmp
pop
out
inc
pop
in
ds
jecxz
cmp
push
dec
(bad)
xor
jmp
inc
(bad)
sub
xlat
jmp
xor
call
sub
call
and
call
sbb
dec
adc
call
and
jmp
das
(bad)
add
(bad)
add
jo
add
cmp
ret
imul
inc
sti
dec
sti
dec
cli
(bad)
push
jno
(bad)
push
je
(bad)
push
jne
call
(bad)
push
jb
dec
sti
dec
cli
inc
sti
(bad)
aas
pop
sti
(bad)
cmp
(bad)
xor
(bad)
sub
jmp
cmp
(bad)
sbb
cld
(bad)
adc
inc
or
(bad)
dec
push
std
cli
add
lahf
pop
add
lahf
xor
cs
(bad)
dec
fs
inc
cmc
dec
repz
dec
lock
push
ins
out
(bad)
push
ins
in
call
jmp
dec
imul
dec
imul
inc
in
inc
pop
jecxz
aas
pop
loope
cmp
(bad)
ss
(bad)
xor
(bad)
sub
(bad)
es
jmp
xor
(bad)
sbb
sar
adc
and
push
inc
fdivrp
adc
fdivr
add
shl
add
or
add
xchg
push
addr16
dec
jg
(bad)
push
je
call
cli
(bad)
pop
jle
(bad)
pusha
cmp
popa
cmp
(bad)
pop
jg
(bad)
pop
jnp
call
cli
(bad)
push
jo
dec
sti
inc
sti
(bad)
cmp
(bad)
xor
jmp
inc
sti
(bad)
and
cld
(bad)
sbb
cld
dec
adc
std
dec
dec
add
aas
add
add
pop
or
repz
jno
(bad)
push
jae
(bad)
push
jne
call
lock
pop
jns
(bad)
pop
jns
call
in
(bad)
pop
ja
(bad)
push
jne
call
out
push
ins
out
dec
push
loop
inc
pop
loopne
cmp
dec
fdivr
xor
(bad)
sub
fdivr
and
xor
(bad)
sbb
aam
sub
(bad)
cmp
or
fsin
add
movs
inc
add
jl
adc
cli
fist
test
sti
jmp
sti
jmp
sti
push
sti
push
sti
push
sti
jmp
sti
jmp
sti
jmp
call
sti
call
sti
dec
sti
inc
sti
(bad)
cmp
push
dec
cld
jmp
inc
cld
call
ss
call
sub
call
sub
hlt
add
fild
add
add
add
add
add
add
arpl
cld
ins
mov
jmp
jmp
bnd
lock
out
jmp
in
jmp
in
jmp
jmp
js
call
out
push
ins
in
dec
addr16
inc
popa
loope
aas
pop
fdivrp
cmp
push
dec
(bad)
sub
xlat
jmp
cmp
push
inc
fcos
dec
fs
push
sbb
sti
add
xlat
xchg
add
add
add
fstp
popa
cld
jmp
scas
sti
push
sti
(bad)
jp
sti
(bad)
jle
sti
inc
sahf
sti
(bad)
jl
sti
(bad)
jbe
sti
push
cli
(bad)
imul
cli
dec
cli
inc
sti
(bad)
cmp
(bad)
das
dec
sti
(bad)
and
cld
call
xor
(bad)
cs
cld
inc
or
lds
add
add
pop
adc
sbb
test
jns
cli
test
repz
jb
repnz
jb
icebp
push
out
(bad)
jo
in
(bad)
outs
mov
jmp
jmp
jge
call
in
push
jo
dec
loope
inc
pusha
(bad)
aas
pop
(bad)
cmp
push
dec
(bad)
dec
fs
pusha
js
(bad)
and
fdivr
add
aam
add
xchg
add
das
adc
adc
leave
je
cld
(bad)
mov
cld
jmp
stos
sti
dec
lods
cld
dec
test
sti
(bad)
jl
sti
(bad)
jae
cli
(bad)
imul
cli
dec
sti
(bad)
ds
sti
(bad)
xor
sti
(bad)
sub
cmp
(bad)
push
sub
inc
add
dec
add
add
add
imul
sbb
test
stos
shl
mov
repnz
jle
lock
jl
out
(bad)
jns
out
push
(bad)
outs
mov
(bad)
imul
in
push
jno
dec
loopne
inc
popa
(bad)
push
push
jmp
in
push
in
sub
add
into
add
xor
add
sbb
outs
jns
clc
ror
dec
(bad)
push
cld
jmp
mov
cld
dec
mov
sti
jmp
sti
call
sti
call
sti
inc
sti
(bad)
aas
pop
sti
inc
sti
jmp
cmp
repz
add
add
add
inc
dec
repnz
stos
idiv
mov
retf
cmps
mov
bnd
mov
in
(bad)
jnp
jmp
jbe
jmp
inc
mov
call
(bad)
adc
shr
add
cmps
lods
add
jne
add
aas
and
fimul
scas
mov
std
(bad)
frstpm(287
std
dec
frndint
(bad)
mov
cld
(bad)
mov
mov
dec
fwait
sti
jmp
cli
(bad)
arpl
call
(bad)
pop
js
(bad)
xor
std
repz
mov
adc
add
sahf
push
push
in
jecxz
cdq
repz
mov
fyl2xp1
(bad)
fsub
stc
inc
aam
inc
shl
(bad)
mov
mov
in
push
in
dec
push
fdivr
and
aam
add
int3
scas
add
cwde
pop
add
add
add
add
add
(bad)
pop
and
dec
pusha
fs
sti
(bad)
retf
jmp
std
(bad)
fucom
std
dec
(bad)
(bad)
mov
mov
sti
dec
cli
inc
jnp
(bad)
and
add
pop
adc
add
adc
add
xor
pavgw
xor
jecxz
cmp
loop
ss
(bad)
xor
fdivrp
xor
fsin
sbb
aad
push
adc
ret
int
add
pop
inc
add
xor
add
add
add
add
add
iret
cmps
pop
and
iret
push
push
(bad)
jecxz
mov
repz
mov
std
inc
test
sti
dec
pop
std
out
sbb
add
popf
add
mov
add
add
das
add
mov
das
add
popf
sbb
add
add
jg
(bad)
pop
jg
inc
jg
addr16
(bad)
jg
jg
jg
jg
jg
jg
ja
jg
pop
jg
jmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
aas
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
(bad)
(bad)
push
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
add
add
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
ud0
add
add
pop
(bad)
(bad)
inc
pop
(bad)
inc
add
add
(bad)
(bad)
inc
add
inc
add
add
(bad)
(bad)
cld
add
jg
add
add
pop
(bad)
(bad)
clc
add
pop
inc
add
add
(bad)
push
add
pop
inc
add
loopne
add
inc
(bad)
inc
add
add
add
add
inc
rol
add
(bad)
inc
add
add
lock
dec
(bad)
(bad)
inc
add
add
cld
pop
(bad)
(bad)
(bad)
(bad)
cld
add
add
add
(bad)
(bad)
(bad)
(bad)
push
add
add
add
(bad)
(bad)
(bad)
(bad)
push
add
add
add
(bad)
(bad)
(bad)
jmp
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
cld
add
add
add
add
(bad)
(bad)
(bad)
cld
add
add
add
add
(bad)
(bad)
(bad)
cld
add
add
add
add
(bad)
(bad)
(bad)
cld
add
add
add
add
(bad)
(bad)
(bad)
cld
add
add
add
add
(bad)
(bad)
(bad)
cld
add
add
add
add
(bad)
(bad)
(bad)
cld
add
add
add
add
(bad)
(bad)
(bad)
cld
add
add
add
add
(bad)
(bad)
(bad)
cld
add
add
add
add
(bad)
(bad)
(bad)
cld
add
add
add
pop
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
pop
(bad)
(bad)
(bad)
(bad)
inc
add
loopne
add
(bad)
(bad)
(bad)
(bad)
inc
add
loopne
add
(bad)
(bad)
(bad)
(bad)
inc
add
lock
pop
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
push
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
(bad)
clc
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
sldt
in
lahf
add
in
pop
add
in
add
out
add
fcomp
add
inc
add
inc
add
aas
add
add
add
(bad)
fild
add
inc
add
inc
add
out
add
fldcw
add
sar
add
inc
add
inc
add
inc
add
inc
add
out
add
aad
add
int3
das
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
add
sldt
add
add
int3
fild
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fild
add
dec
add
int
add
int
add
int
add
int
add
int
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
iret
lahf
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
rcr
add
sar
add
sar
add
sar
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
scas
add
(bad)
pop
add
aam
add
aam
add
aam
add
aam
add
aam
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
add
sldt
add
add
(bad)
mov
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
fisttp
add
pop
add
fmul
add
fcos
add
fcos
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
fcos
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
lahf
add
add
add
fisubr
add
(bad)
add
fdivr
add
fdivr
add
(bad)
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
(bad)
add
(bad)
add
fdivr
add
(bad)
add
fcos
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
iret
add
jecxz
add
add
add
(bad)
or
(bad)
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
out
add
fidivr
add
loop
add
jecxz
add
in
add
in
add
out
add
out
add
out
add
out
add
in
add
in
add
jecxz
add
loop
add
loopne
add
(bad)
add
(bad)
add
(bad)
add
fcos
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
add
add
loopne
adc
jecxz
or
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
add
or
out
sbb
call
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
add
in
and
jmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fild
add
add
or
fild
in
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
das
add
out
and
in
call
out
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
push
in
add
loope
add
or
inc
fdivr
add
sar
add
sar
add
into
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
add
jg
push
out
dec
adc
inc
add
inc
add
cli
inc
or
inc
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
icebp
dec
adc
dec
adc
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
fdivr
or
aad
pop
push
sar
add
sar
add
into
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
in
scas
push
jno
inc
or
idiv
push
sbb
call
push
std
call
pop
std
call
pop
std
dec
sbb
dec
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
adc
hlt
call
and
call
sub
call
sub
call
sub
call
sub
call
sub
call
es
adc
push
(bad)
dec
sbb
dec
adc
inc
add
inc
add
inc
add
inc
add
call
push
loope
add
out
add
out
mov
adc
cmc
call
sub
call
das
cld
call
xor
call
xor
call
cld
call
sub
std
call
push
std
dec
adc
inc
(bad)
inc
add
inc
add
inc
add
inc
add
call
sbb
call
sub
call
xor
in
jmp
cmp
jmp
cmp
jmp
xor
fdivr
sbb
fcos
sbb
(bad)
call
and
dec
sbb
dec
bswap
inc
push
iret
inc
add
inc
add
call
sbb
inc
add
mov
add
lock
pop
xor
jmp
sti
jmp
inc
cld
jmp
cld
jmp
dec
cld
jmp
inc
cld
jmp
inc
cld
jmp
cmp
call
cld
call
sbb
inc
or
inc
add
inc
add
inc
add
dec
cmp
jmp
inc
cmc
jmp
dec
out
push
dec
in
push
dec
jmp
dec
in
das
inc
loop
sub
(bad)
sub
fdivr
and
(bad)
call
and
sar
or
sar
add
sar
add
(bad)
call
and
inc
add
mov
add
repnz
jae
idiv
ss
stc
push
dec
sti
(bad)
cmp
(bad)
cmp
pop
cld
(bad)
ds
cld
(bad)
cmp
push
push
cld
push
dec
cld
jmp
inc
cld
jmp
aaa
cld
call
sub
dec
sbb
inc
or
inc
add
inc
add
dec
paddd
and
sti
push
push
hlt
(bad)
cmp
pop
out
inc
in
inc
jmp
push
in
cmp
push
dec
(bad)
cs
fdivr
sub
fdivr
and
(bad)
call
sub
call
pop
sar
or
sar
add
(bad)
call
sub
inc
add
jg
add
outs
data16
call
sti
inc
sti
dec
sti
dec
sti
call
sti
call
sti
dec
sti
inc
sti
inc
sti
push
push
cld
jmp
cmp
call
sub
dec
sbb
inc
sbb
inc
add
outs
and
std
mov
dec
data16
dec
dec
lock
in
call
jmp
dec
imul
dec
addr16
inc
popa
in
inc
pop
loop
cmp
push
dec
(bad)
sub
fdivr
and
call
pop
aam
pop
sub
(bad)
add
fild
add
neg
cmp
stc
inc
jne
call
jmp
sti
jmp
sti
jmp
jmp
sti
call
sti
call
sti
inc
sti
(bad)
cmp
jmp
cmp
call
adc
(bad)
inc
add
pop
add
jmp
dec
pop
cli
call
idiv
pop
jnp
call
icebp
jmp
out
jmp
in
call
jmp
jno
dec
jecxz
inc
pusha
loope
cmp
dec
(bad)
sub
xlat
jmp
xor
call
das
xlat
(bad)
aas
push
loopne
add
fnstcw
push
adc
lahf
mov
sti
jmp
sti
push
sti
(bad)
jp
sti
(bad)
jns
sti
push
jmp
sti
jmp
sti
call
sti
inc
sti
push
push
cld
jmp
inc
cld
call
aas
cld
inc
or
lahf
add
sti
pop
jns
clc
push
cmc
push
repz
icebp
push
out
jmp
in
jmp
jmp
ja
call
jecxz
dec
arpl
(bad)
ds
(bad)
xor
(bad)
das
inc
fdivr
pop
jb
call
sbb
inc
add
das
add
add
es
iret
test
mov
cld
call
lods
cld
dec
popf
sti
jmp
sti
jmp
sti
call
sti
inc
sti
push
dec
cld
push
dec
cld
call
and
out
add
add
push
and
pop
jae
idiv
pushf
mov
inc
repnz
xchg
in
push
jmp
jp
call
loop
dec
data16
pop
jb
push
out
adc
add
pop
add
jmp
sub
dec
mov
std
dec
(bad)
(bad)
mov
sar
lahf
mov
cld
(bad)
jle
sti
jmp
call
sti
dec
sti
dec
sti
jmp
das
std
inc
add
das
add
lock
cmp
lock
cli
inc
sar
jmp
lods
lock
cmps
in
call
mov
(bad)
or
into
fild
add
das
add
add
pop
sbb
(bad)
jo
(bad)
call
(bad)
(bad)
jmp
in
std
dec
fdivr
jmp
mov
inc
cdq
sti
push
cld
jmp
xor
out
add
jmp
add
out
sub
out
pop
pop
jmp
jno
jmp
in
push
pop
loopne
sub
add
scas
add
int3
pop
add
call
add
jmp
cmp
mov
arpl
pop
gs
call
std
push
add
jg
add
sldt
fstp
add
xlat
aas
add
aam
add
add
add
out
aas
add
out
pop
add
call
fild
add
out
add
loop
add
jecxz
add
ficomp
add
inc
add
inc
add
inc
add
das
add
add
add
aad
add
(bad)
inc
add
inc
add
inc
add
out
add
fldcw
add
sar
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
aad
add
int3
das
add
int
add
int
add
into
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
add
sldt
int3
fild
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fild
add
aas
add
int3
scas
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
into
lahf
add
into
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
lahf
add
rcr
add
iret
outs
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
lahf
add
aam
add
rcr
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
sldt
sar
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
xlat
outs
add
aad
add
aad
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
iret
add
fisubr
add
add
add
xlat
mov
add
fdivr
add
fdivr
add
fcos
add
fcos
add
fcos
add
fdivr
add
fdivr
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
sldt
fxch
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
fdivr
add
fdivr
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
fcos
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
iret
add
loope
add
add
add
lock
add
add
add
fcmovne
add
pop
(bad)
add
(bad)
add
fdivrp
add
fdivrp
add
(bad)
add
(bad)
add
(bad)
add
fdivrp
add
fdivrp
add
(bad)
add
(bad)
add
fdivr
add
(bad)
add
(bad)
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
jecxz
add
out
dec
add
out
lahf
add
add
add
fmul
or
(bad)
pop
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
in
add
jmp
add
jmp
add
add
add
ficomp
or
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
call
add
add
out
add
out
add
call
add
add
dec
or
loope
push
and
in
add
in
add
out
add
out
add
call
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fild
add
sldt
loop
add
loop
add
jecxz
add
in
add
jecxz
add
add
add
loop
and
out
pop
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
add
mov
add
(bad)
add
loopne
add
loopne
add
jecxz
adc
and
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
add
fnstcw
add
(bad)
add
(bad)
add
(bad)
add
fdivr
add
(bad)
add
fstp
add
jmp
add
in
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
lahf
add
(bad)
mov
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
pop
sbb
jmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
rcr
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
add
scas
aaa
dec
out
call
lock
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
loopne
add
fdivrp
add
(bad)
add
fcos
add
aam
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
or
inc
add
inc
add
aas
add
add
add
shr
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
aam
add
aad
add
(bad)
inc
add
lahf
or
icebp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
pop
icebp
inc
or
dec
push
jmp
or
call
dec
loopne
or
adc
fcos
or
xlat
inc
push
aam
add
push
sar
add
into
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
outs
add
into
pop
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
iret
add
aad
add
jmp
pop
repnz
pop
repnz
or
dec
adc
dec
adc
dec
std
dec
std
dec
push
std
dec
adc
dec
adc
inc
or
inc
push
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
psadbw
or
lock
sbb
jmp
adc
jmp
call
and
call
and
call
pop
fcos
adc
dec
pop
aam
or
sar
pop
push
sar
add
into
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
push
in
add
call
add
add
dec
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
shr
add
aas
sub
lock
repz
push
clc
call
and
call
sub
call
sub
call
sub
call
std
call
and
dec
sbb
std
dec
paddd
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
sbb
call
and
call
daa
repz
sub
call
cs
call
xor
call
xor
call
xor
call
xor
call
xor
call
sub
call
sub
call
and
aad
nop
dec
adc
inc
or
int
add
into
inc
add
inc
add
inc
add
call
pop
in
add
out
add
add
add
int3
out
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
out
aas
das
aas
icebp
dec
cmc
call
sub
call
das
cli
call
xor
jmp
aaa
cld
jmp
cmp
jmp
cmp
jmp
cmp
jmp
ss
call
cs
call
and
dec
std
inc
or
inc
add
inc
add
inc
add
inc
add
inc
add
dec
sbb
call
clc
call
xor
jmp
cmp
jmp
cmp
jmp
aas
out
sub
jecxz
daa
cmp
jmp
xor
fcos
sbb
xlat
call
es
adc
sar
nop
dec
adc
inc
add
inc
add
inc
add
call
sbb
inc
add
jg
add
iret
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
lahf
add
add
add
out
aas
xor
call
idiv
and
stc
jmp
ds
jmp
inc
cld
jmp
dec
cld
push
dec
cld
jmp
dec
cld
jmp
inc
cld
jmp
aaa
cld
call
das
std
call
std
dec
sbb
dec
paddd
add
inc
add
inc
add
inc
add
dec
sbb
jmp
inc
idiv
sub
dec
icebp
push
dec
out
push
jmp
dec
out
xor
push
inc
loope
sub
cmp
fcos
and
xlat
call
sub
call
and
call
sbb
dec
adc
inc
or
inc
add
inc
sbb
inc
add
jg
add
lahf
add
int
add
int
add
int
add
int
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
sar
add
sldt
icebp
aas
xor
hlt
jmp
jmp
dec
sti
(bad)
cmp
cmp
(bad)
cmp
pop
cld
(bad)
cmp
pop
cld
push
push
cld
push
dec
cld
jmp
cld
jmp
xor
call
sub
dec
sbb
(bad)
inc
add
inc
add
dec
adc
inc
add
out
sub
push
dec
clc
push
push
cmc
(bad)
cmp
(bad)
ds
lock
out
inc
in
inc
jmp
pop
out
cmp
push
push
loope
xor
jmp
inc
fdivr
sub
fcos
and
xlat
call
cs
sbb
sar
adc
sar
or
sar
push
or
jmp
sub
inc
(bad)
add
loop
add
into
pop
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
rcr
add
add
es
(bad)
jg
stc
inc
sti
inc
cld
inc
sti
dec
sti
dec
sti
dec
sti
dec
dec
sti
inc
sti
(bad)
aas
pop
cld
(bad)
cmp
push
dec
cld
jmp
inc
cld
call
ss
call
sub
dec
sbb
inc
push
(bad)
inc
add
dec
pop
(bad)
inc
add
outs
sbb
std
iret
inc
popa
stc
inc
idiv
inc
gs
dec
repnz
dec
in
dec
jmp
dec
imul
inc
out
inc
pop
in
ds
loope
cmp
push
dec
fdivr
sub
fcos
es
call
xor
call
daa
sar
adc
aam
or
(bad)
push
inc
loope
add
fucomp
add
into
pop
add
into
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fild
add
pop
add
imul
imul
call
sti
call
sti
call
sti
call
sti
call
sti
call
sti
call
dec
sti
inc
(bad)
cmp
push
dec
cld
jmp
inc
cld
call
xor
std
dec
paddd
adc
(bad)
inc
add
sldt
(bad)
aas
inc
push
sti
dec
idiv
push
jae
call
repnz
lock
out
call
in
call
jmp
outs
out
dec
push
dec
jecxz
inc
pop
loope
cmp
fdivrp
xor
inc
fcos
es
call
xor
call
daa
aad
sub
jmp
sub
fcomp
add
iret
aas
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fild
add
pop
add
clc
aas
dec
push
cli
call
test
jmp
jmp
sti
jmp
sti
jmp
sti
jmp
sti
jmp
sti
jmp
sti
call
sti
call
sti
inc
sti
(bad)
cmp
cld
push
dec
cld
jmp
aas
cld
call
cld
call
and
jmp
xor
inc
add
lahf
adc
cld
jg
cmp
popa
xor
fs
addr16
jmp
lock
out
jmp
in
jmp
jmp
ja
call
in
dec
push
loopne
cmp
dec
(bad)
cs
fdivr
es
jmp
fs
add
xlat
out
add
add
add
shr
add
shr
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
iret
add
aam
or
sti
mov
mov
xchg
sti
(bad)
jnp
sti
inc
mov
sti
(bad)
jp
sti
push
sti
jmp
sti
call
sti
call
sti
inc
sti
(bad)
cmp
jmp
dec
cld
jmp
cmp
jmp
cld
call
std
out
add
call
adc
clc
lahf
test
cmc
push
repz
repnz
icebp
push
out
push
in
jmp
jmp
jnp
call
in
dec
push
inc
(bad)
cmp
dec
(bad)
inc
pop
(bad)
data16
or
add
pop
add
shr
add
shr
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
add
and
(bad)
out
stos
mov
std
call
mov
call
scas
cld
dec
mov
sti
jmp
sti
call
sti
dec
sti
inc
sti
push
cld
jmp
cld
inc
add
outs
adc
lahf
xchg
clc
call
mov
lock
xchg
in
push
jmp
jge
call
jecxz
dec
imul
push
out
addr16
dec
adc
inc
add
pop
add
rcr
add
out
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
lahf
add
add
add
jmp
sbb
mov
call
loop
inc
xlat
std
jmp
sar
sahf
mov
cld
inc
xchg
sti
jmp
sti
call
sti
dec
sti
dec
sti
dec
inc
add
lahf
add
out
dec
cmp
out
test
out
dec
fdivr
(bad)
mov
mov
call
scas
lock
lods
in
call
jmp
inc
add
fild
add
aas
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
sar
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
fldcw
add
sldt
dec
int3
sar
push
clc
(bad)
(bad)
(bad)
std
(bad)
mov
ret
xchg
scas
cld
(bad)
jle
sti
push
sti
push
sti
push
sti
inc
inc
add
lahf
add
add
add
out
and
ins
in
inc
scas
repnz
mov
in
dec
push
fdivrp
push
and
inc
add
scas
add
int3
pop
add
aad
add
aad
add
aad
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
iret
add
fld
add
call
add
dec
add
(bad)
mov
into
std
jmp
cld
call
std
call
pop
(bad)
fild
add
dec
add
ficomp
add
fdivr
add
fnstcw
add
jg
add
jg
add
pop
add
sar
add
(bad)
lahf
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
das
add
jmp
add
jg
add
jg
add
jg
add
outs
add
jmp
add
add
add
xlat
iret
add
fdivr
add
fdivr
add
fcos
add
fcos
add
fcos
add
fcos
add
fcos
add
(bad)
add
(bad)
add
(bad)
add
fcos
add
fcos
add
fcos
add
fcos
add
fdivr
add
fdivr
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
iret
add
fild
add
fstp
add
fxch
add
fcos
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
fdivr
add
fdivr
add
fdivr
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
fcos
add
fcos
add
fdivr
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
loopne
add
fisubr
add
(bad)
add
(bad)
add
fdivr
add
fdivr
add
fdivr
add
fdivr
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
fdivrp
add
fdivrp
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
fdivr
add
fdivr
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
fcos
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
lahf
add
add
add
fcmovnu
add
fdivr
or
fdivrp
pop
or
(bad)
add
fdivrp
add
fdivrp
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
loopne
add
loopne
add
loopne
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
fdivrp
add
fdivrp
add
(bad)
add
(bad)
add
fdivr
add
(bad)
add
(bad)
add
(bad)
add
fcos
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
iret
add
add
add
add
add
fmul
add
(bad)
or
(bad)
or
loopne
add
(bad)
add
(bad)
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
loop
add
loop
add
loop
add
loop
add
loop
add
loope
add
loope
add
loope
add
loopne
add
loopne
add
(bad)
add
fdivrp
add
fdivrp
add
(bad)
add
fdivr
add
fdivr
add
(bad)
add
(bad)
add
fcos
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
iret
add
add
add
(bad)
push
sbb
dec
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
iret
add
add
add
fidivr
add
dec
sbb
call
jecxz
add
loop
add
loop
add
jecxz
add
jecxz
add
in
add
in
add
in
add
in
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
in
add
in
add
in
add
in
add
jecxz
add
jecxz
add
loop
add
loope
add
loopne
add
(bad)
add
fdivrp
add
(bad)
add
fdivr
add
(bad)
add
(bad)
add
fcos
add
fdivr
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
iret
add
fild
add
(bad)
or
sub
dec
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
add
iret
add
xor
call
push
in
add
in
add
in
add
out
add
out
add
call
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
loope
add
loop
sbb
out
push
das
call
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fild
add
sldt
add
add
loop
adc
jmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
jg
add
jmp
cmp
jmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
add
add
add
add
in
pop
and
push
dec
jmp
or
jmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
outs
add
in
add
push
inc
jmp
sub
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fild
add
iret
adc
jmp
call
and
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
add
jmp
das
add
out
add
out
xor
(bad)
ds
out
inc
in
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
outs
or
jmp
dec
lock
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
push
out
add
in
add
loop
add
loope
add
or
inc
or
inc
fcos
add
xlat
inc
push
aad
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
or
inc
add
inc
add
mov
add
jmp
inc
lock
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
out
inc
or
inc
or
out
or
out
or
in
or
loop
or
loope
or
(bad)
or
(bad)
or
fdivr
or
(bad)
or
fcos
or
xlat
inc
or
aad
add
sar
add
sar
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
psrad
add
in
add
jmp
add
add
out
cs
out
dec
bnd
icebp
inc
add
inc
add
inc
pop
idiv
add
clc
inc
or
inc
push
std
inc
push
std
inc
push
(bad)
inc
or
(bad)
inc
or
inc
push
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
pop
cmc
inc
or
lock
adc
dec
adc
dec
jmp
sbb
dec
sbb
call
sbb
call
sbb
call
sbb
call
sbb
dec
sbb
dec
sbb
dec
sbb
dec
push
xlat
dec
adc
dec
adc
dec
psrlq
push
or
inc
push
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
or
inc
add
inc
add
inc
add
sldt
jmp
cmp
lock
repz
push
repnz
psadbw
or
idiv
or
sti
dec
sbb
dec
sbb
dec
sbb
dec
pop
std
dec
adc
dec
adc
inc
push
(bad)
inc
pop
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
adc
dec
adc
dec
repz
sbb
call
push
in
call
and
call
and
call
jmp
call
and
call
and
call
and
call
fdivrp
adc
fdivr
adc
(bad)
adc
fcos
adc
dec
sbb
dec
adc
sar
pop
push
sar
push
or
inc
into
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
push
loope
add
jecxz
add
out
add
jmp
add
add
aas
add
in
call
repnz
repz
adc
dec
cmc
dec
sbb
cli
call
and
call
and
call
and
std
call
std
call
and
call
and
call
and
dec
sbb
std
dec
push
std
dec
adc
inc
or
inc
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
sbb
call
pop
hlt
call
and
call
icebp
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
in
sbb
call
sub
call
sub
call
sub
call
sub
call
es
push
and
call
fdivr
adc
(bad)
call
sbb
dec
sbb
dec
sar
or
sar
or
iret
inc
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
pop
loopne
or
jecxz
add
out
add
call
add
add
aas
add
out
call
repz
hlt
dec
sbb
call
and
call
cli
call
sub
call
sub
std
call
das
std
call
xor
call
xor
call
das
std
call
cs
call
sub
call
sub
call
and
call
and
dec
sbb
dec
std
dec
adc
inc
or
inc
push
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
sbb
clc
call
daa
idiv
sbb
hlt
call
sub
call
das
icebp
call
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
in
and
loop
and
loopne
and
(bad)
push
xor
call
sub
call
sub
call
daa
fdivr
push
and
call
aad
adc
sar
or
sar
or
iret
inc
or
int
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
sbb
call
pop
jecxz
add
in
add
call
add
add
aas
add
out
jmp
hlt
jmp
call
sub
call
das
cli
call
xor
cld
jmp
cmp
jmp
cmp
jmp
cmp
jmp
cmp
jmp
cmp
jmp
cmp
jmp
aaa
cld
call
xor
call
std
call
cs
call
sub
call
and
dec
sbb
dec
push
std
dec
paddd
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
and
call
sub
call
xor
call
xor
bnd
cmp
jmp
out
jmp
cmp
jmp
cmp
jmp
cmp
jmp
jmp
cmp
in
daa
cmp
jmp
cmp
jmp
ss
and
jmp
xor
call
das
fcos
sbb
fdivr
sbb
xlat
call
and
sar
adc
sar
or
iret
dec
adc
inc
or
inc
push
iret
inc
add
inc
add
inc
add
inc
add
call
sbb
call
sbb
inc
add
inc
add
aas
add
out
aas
add
lock
cmc
jmp
idiv
sbb
idiv
pop
xor
sti
jmp
cld
jmp
aas
cld
jmp
inc
cld
jmp
inc
cld
jmp
inc
cld
jmp
inc
cld
jmp
inc
cld
jmp
inc
cld
jmp
inc
cld
jmp
inc
cld
jmp
ds
jmp
cld
jmp
cmp
call
xor
call
xor
call
sub
call
std
call
and
dec
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
or
inc
xor
jmp
aaa
stc
jmp
cmp
jmp
aas
repnz
inc
icebp
jmp
inc
out
jmp
in
jmp
inc
jmp
inc
call
jmp
inc
in
sub
inc
loop
sub
jmp
ds
sub
jmp
cmp
jmp
(bad)
and
fcos
pop
xor
call
(bad)
call
sub
call
and
call
and
call
sbb
dec
adc
inc
or
sar
add
sar
add
aad
add
fdivr
and
(bad)
add
jecxz
add
lock
add
icebp
jmp
idiv
outs
(bad)
idiv
and
idiv
es
jmp
inc
sti
jmp
cld
jmp
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
push
dec
cld
jmp
dec
cld
jmp
inc
cld
jmp
inc
cld
jmp
cmp
call
xor
call
das
std
call
sub
call
and
dec
sbb
dec
adc
inc
or
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
call
sbb
stc
jmp
inc
idiv
sub
cmc
jmp
inc
hlt
push
dec
repnz
dec
lock
dec
out
push
in
push
dec
jmp
dec
call
push
in
xor
push
dec
loop
xor
jmp
inc
(bad)
sub
fdivrp
sub
fdivr
daa
cmp
jmp
xor
call
xor
call
sub
call
daa
aam
adc
sbb
sar
or
sar
pop
push
sar
add
sar
add
aad
add
fdivr
xor
inc
add
inc
add
out
add
icebp
pop
add
bnd
idiv
jne
clc
(bad)
ds
stc
jmp
dec
cld
push
cld
push
push
cld
(bad)
cmp
(bad)
cmp
(bad)
cmp
cld
(bad)
cmp
pop
cld
(bad)
cmp
cld
(bad)
cmp
(bad)
cmp
push
push
cld
push
cld
push
dec
cld
jmp
inc
cld
jmp
aaa
cld
call
std
call
sub
call
and
dec
sbb
dec
adc
inc
or
inc
add
inc
add
inc
add
inc
add
dec
adc
(bad)
fild
add
out
xor
xor
push
dec
idiv
xor
cmc
push
push
repz
cmp
cmp
(bad)
cmp
(bad)
cmp
in
(bad)
cmp
pop
jmp
push
call
(bad)
cmp
cmp
push
push
jecxz
xor
dec
(bad)
xor
jmp
aas
(bad)
daa
cmp
jmp
xlat
jmp
xor
call
sub
call
and
call
pop
sar
nop
dec
adc
dec
push
aam
add
(bad)
inc
add
push
dec
in
add
fdivrp
add
loope
add
repz
pop
jo
(bad)
jnp
stc
call
push
push
cld
(bad)
cmp
cld
(bad)
aas
pop
cld
inc
cld
inc
inc
sti
inc
sti
inc
sti
inc
sti
inc
inc
cld
(bad)
aas
pop
cld
(bad)
cmp
cld
(bad)
cmp
push
cld
push
dec
cld
jmp
cld
jmp
aas
cld
jmp
cmp
call
sub
call
and
dec
sbb
dec
adc
inc
add
inc
add
inc
add
call
sbb
inc
add
lahf
add
dec
ss
stc
(bad)
cmp
(bad)
cmp
idiv
ds
hlt
inc
repnz
icebp
inc
lock
inc
inc
inc
inc
inc
call
inc
in
ds
in
cmp
(bad)
cmp
push
dec
(bad)
xor
push
inc
fdivr
sub
cmp
xlat
jmp
xor
call
das
aam
sbb
sar
pop
and
sar
nop
dec
adc
inc
push
(bad)
call
sub
jmp
cmp
inc
add
inc
add
outs
add
hlt
scas
ss
idiv
sbb
sti
inc
cld
inc
sti
dec
sti
dec
sti
dec
sti
dec
sti
call
sti
call
sti
dec
sti
dec
sti
dec
sti
dec
sti
inc
sti
inc
cld
(bad)
cmp
push
cld
push
dec
cld
jmp
dec
cld
jmp
inc
cld
jmp
cmp
call
xor
call
sub
call
and
dec
sbb
dec
adc
inc
(bad)
inc
add
call
(bad)
inc
or
inc
add
dec
add
add
or
(bad)
out
dec
push
clc
inc
idiv
inc
arpl
inc
repz
repnz
icebp
dec
dec
dec
dec
dec
jmp
gs
inc
in
inc
pop
in
inc
pop
loop
cmp
push
(bad)
ss
fdivrp
xor
jmp
inc
(bad)
sub
jmp
cmp
jmp
xor
aam
sbb
sar
pop
and
aam
nop
dec
adc
inc
jecxz
or
fdivr
add
(bad)
add
loopne
add
cmc
pop
adc
idiv
xchg
dec
sti
dec
sti
dec
sti
call
sti
call
sti
call
sti
call
sti
call
sti
call
sti
call
sti
call
sti
call
sti
call
sti
dec
sti
dec
sti
inc
(bad)
aas
pop
cld
(bad)
cmp
push
cld
jmp
dec
cld
jmp
inc
cld
jmp
cmp
call
sub
call
and
dec
paddd
add
std
inc
add
out
add
jmp
inc
cld
call
stc
dec
idiv
dec
ins
cmc
dec
repz
bnd
icebp
call
call
out
call
in
call
in
call
jmp
ins
call
dec
dec
in
inc
(bad)
in
inc
pop
loop
inc
pop
loope
cmp
(bad)
cmp
push
fdivr
xor
jmp
fdivr
sub
xlat
jmp
aad
pop
xor
call
sub
call
and
aad
xor
inc
jecxz
add
fcos
add
fsubr
add
add
add
clc
jmp
cli
call
call
pop
js
call
call
sti
jmp
sti
jmp
sti
jmp
jmp
jmp
sti
jmp
sti
call
sti
call
call
sti
call
sti
dec
sti
inc
sti
inc
cld
(bad)
cmp
push
cld
jmp
dec
cld
jmp
inc
cld
jmp
cmp
call
std
call
sub
call
pop
std
dec
adc
std
call
and
inc
add
jg
add
mov
push
jne
call
cmc
call
hlt
call
repz
icebp
call
lock
out
call
out
call
in
call
call
jmp
je
call
call
out
dec
push
dec
jecxz
inc
popa
loop
inc
pop
loopne
ds
(bad)
cmp
push
inc
(bad)
sub
cmp
jmp
aad
pop
xor
call
sub
jmp
jns
call
pop
(bad)
add
fcos
add
fdivr
add
stc
lahf
and
sti
call
mov
sti
jmp
sti
jmp
sti
jmp
sti
jmp
jmp
sti
jmp
sti
jmp
sti
jmp
sti
jmp
sti
jmp
sti
jmp
jmp
sti
call
sti
call
sti
dec
sti
dec
sti
inc
cld
(bad)
cmp
push
cld
jmp
aas
cld
jmp
aaa
cld
call
cs
call
std
jmp
inc
cld
inc
add
out
add
add
add
add
or
stc
jmp
idiv
pop
jg
jmp
repz
bnd
jmp
lock
out
jmp
out
jmp
jmp
jmp
pusha
jle
call
jmp
call
out
push
jb
call
in
dec
push
loop
inc
pop
loopne
aas
pop
fdivrp
cmp
ss
(bad)
xor
jmp
cmp
jmp
xor
xlat
call
in
cmp
inc
add
inc
add
pop
add
sldt
sti
out
imul
mov
mov
sti
jmp
sti
push
sti
push
sti
(bad)
jns
sti
(bad)
jp
sti
(bad)
jp
sti
(bad)
jns
sti
push
sti
push
sti
jmp
sti
jmp
sti
jmp
sti
call
sti
call
sti
call
sti
dec
sti
inc
cld
(bad)
cmp
push
dec
cld
jmp
inc
cld
jmp
cld
call
xor
call
sub
jmp
inc
cld
call
(bad)
inc
add
jg
add
das
or
out
mov
idiv
push
hlt
jmp
jmp
repnz
icebp
jmp
lock
out
jmp
out
jmp
in
jmp
jmp
gs
bound
call
call
in
push
outs
in
dec
push
dec
loope
inc
pop
loopne
inc
pop
fdivrp
cmp
ss
(bad)
xor
jmp
xlat
push
dec
(bad)
push
outs
loop
push
or
inc
add
fild
add
sldt
cld
pop
or
(bad)
call
(bad)
cld
jmp
popf
sti
(bad)
jle
cld
inc
movs
cld
inc
movs
cld
inc
mov
sti
(bad)
js
sti
push
sti
jmp
jmp
sti
call
sti
call
sti
dec
sti
inc
sti
(bad)
aas
pop
cld
push
push
cld
push
dec
cld
jmp
inc
cld
jmp
cmp
jmp
ds
(bad)
cmp
inc
add
fild
add
sldt
imul
or
stc
call
hlt
push
repz
repz
js
icebp
push
lock
lock
out
push
in
jmp
jmp
push
jmp
sub
pop
jnp
call
in
push
jno
call
loop
dec
gs
inc
pop
(bad)
inc
pop
(bad)
cmp
push
jo
(bad)
jp
call
inc
or
inc
add
out
add
aad
add
(bad)
lahf
and
jmp
sar
(bad)
mov
mov
dec
scas
cld
call
mov
call
stos
cld
dec
mov
sti
push
jmp
sti
jmp
sti
call
sti
call
sti
dec
inc
(bad)
cmp
cld
push
cld
jmp
cld
push
dec
sti
call
sti
inc
add
aas
add
cmc
das
or
repz
jns
idiv
(bad)
aad
jmp
mov
repnz
pushf
icebp
(bad)
jle
out
(bad)
jnp
out
(bad)
js
in
push
in
jmp
jmp
sub
pusha
jge
call
in
push
jno
call
loope
dec
gs
dec
arpl
call
loop
jle
call
call
loopne
pop
or
inc
add
out
add
shr
add
call
mov
std
dec
(bad)
call
loope
(bad)
mov
mov
cld
jmp
mov
cld
call
cld
inc
popf
sti
push
jmp
sti
jmp
sti
call
sti
call
sti
dec
sti
inc
cld
(bad)
cmp
cmp
call
sti
call
sbb
inc
add
jg
add
sldt
out
mov
mov
out
inc
sar
jmp
scas
repz
mov
out
(bad)
jl
in
push
in
push
jmp
and
pusha
jge
jmp
in
jae
out
sbb
call
cdq
call
inc
add
inc
add
iret
add
rcr
add
dec
mov
(bad)
jmp
jmp
(bad)
xlat
cld
push
ret
cld
jmp
mov
cld
dec
movs
cld
(bad)
jnp
sti
push
sti
jmp
sti
call
sti
call
sti
dec
sti
inc
call
sti
jmp
sti
call
sbb
inc
add
lahf
add
in
pop
add
jmp
sar
out
hlt
std
push
stc
(bad)
push
cmc
std
call
loop
call
fdivr
push
mov
cmc
push
mov
repz
mov
out
(bad)
jl
out
ss
fdivr
or
int
add
int3
out
add
int3
jg
add
dec
add
(bad)
fild
(bad)
inc
int
(bad)
jmp
push
clc
(bad)
(bad)
(bad)
std
inc
sar
jmp
mov
cld
dec
cld
push
sti
jmp
sti
jmp
sti
jmp
sti
jmp
sti
(bad)
js
sti
jmp
cld
call
add
lahf
add
add
add
out
add
in
sub
ins
out
jmp
xlat
stc
(bad)
jmp
jmp
iret
(bad)
inc
xlat
idiv
mov
xchg
jmp
ins
jp
dec
(bad)
adc
sar
add
int
add
int
add
int3
jg
add
sldt
add
add
(bad)
jg
add
out
dec
dec
(bad)
jmp
(bad)
(bad)
jmp
(bad)
jmp
in
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
mov
ret
cld
call
sti
call
stos
sti
dec
fwait
cld
inc
std
inc
add
out
add
call
add
dec
add
loopne
add
fmulp
add
fdivr
add
(bad)
add
fcos
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
out
add
iret
mov
add
int
add
add
add
call
add
iret
push
paddd
inc
dec
(bad)
(bad)
jl
(bad)
jmp
fdivr
inc
(bad)
std
(bad)
mov
enter
sar
mov
std
push
add
inc
add
lahf
add
call
add
fisubr
add
fnstcw
add
xlat
aas
add
aad
add
aam
add
sar
add
add
add
call
add
call
add
lahf
add
(bad)
mov
add
(bad)
inc
add
inc
add
inc
add
inc
add
fild
add
scas
add
jmp
add
sldt
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
icebp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
(bad)
cld
add
add
add
(bad)
(bad)
(bad)
(bad)
clc
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
(bad)
(bad)
(bad)
push
jg
(bad)
(bad)
clc
add
add
add
(bad)
(bad)
(bad)
push
jg
(bad)
push
add
add
add
(bad)
(bad)
(bad)
jmp
aas
(bad)
(bad)
push
add
add
add
(bad)
(bad)
(bad)
jmp
pop
(bad)
(bad)
jmp
add
add
add
(bad)
(bad)
(bad)
inc
ud0
jmp
add
add
add
(bad)
(bad)
inc
pop
(bad)
(bad)
jmp
add
add
add
(bad)
(bad)
inc
rol
add
add
(bad)
(bad)
inc
add
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
(bad)
inc
add
add
add
(bad)
(bad)
cld
add
pop
(bad)
inc
add
add
add
(bad)
(bad)
clc
add
add
jmp
add
add
add
(bad)
(bad)
push
add
add
loopne
add
(bad)
jmp
add
add
jmp
add
rol
(bad)
(bad)
(bad)
inc
add
add
push
add
loopne
add
(bad)
(bad)
inc
(bad)
clc
add
lock
(bad)
(bad)
(bad)
inc
add
add
(bad)
clc
add
clc
add
(bad)
(bad)
(bad)
inc
add
add
aas
inc
pop
inc
pop
(bad)
(bad)
(bad)
cld
add
add
add
inc
ud0
clc
add
add
add
jmp
aas
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jg
(bad)
(bad)
(bad)
(bad)
inc
jg
(bad)
(bad)
(bad)
(bad)
inc
aas
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
aas
(bad)
(bad)
(bad)
(bad)
(bad)
inc
aas
(bad)
(bad)
(bad)
(bad)
(bad)
inc
aas
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
jg
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
add
loopne
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
add
lock
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
cld
add
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
(bad)
push
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
or
add
add
adc
add
add
add
add
add
sbb
add
add
and
mov
add
add
add
add
add
add
xor
add
add
add
add
add
add
and
sub
add
add
add
add
and
mov
or
pusha
pusha
add
add
and
test
add
or
add
add
or
add
add
enter
add
add
add
adc
adc
add
add
sub
add
add
fcom
add
add
add
add
adc
add
add
sub
add
add
lock
or
add
add
adc
add
add
sub
add
add
add
or
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
arpl
add
add
add
add
add
push
add
add
jo
add
add
push
add
add
outs
add
inc
add
ins
add
dec
add
data16
add
dec
add
add
add
add
add
add
add
add
bound
xor
add
xor
or
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
cmp
cmp
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
or
mov
adc
or
jae
ins
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
ds
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
outs
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
ins
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
fs
outs
fs
arpl
or
and
gs
outs
fs
je
jae
gs
bound
or
and
and
jae
gs
bound
fs
je
je
and
gs
xor
and
outs
popa
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
and
jb
imul
xor
xor
xor
and
addr16
addr16
jo
outs
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
ds
popa
jae
gs
bound
fs
je
je
ds
and
fs
outs
fs
je
jae
gs
bound
or
das
fs
outs
fs
arpl
or
jae
gs
bound
sub
adc
cwde
adc
cmp
adc
mov
adc
inc
daa
adc
mov
add
add
adc
les
adc
pusha
daa
adc
int3
adc
push
adc
aam
adc
jb
adc
fsub
adc
jl
adc
in
adc
mov
adc
in
adc
xchg
daa
adc
hlt
adc
lahf
daa
adc
cld
adc
stos
daa
adc
add
adc
mov
adc
or
adc
ret
add
adc
into
daa
adc
sbb
adc
fsub
adc
and
adc
in
adc
repnz
adc
add
adc
adc
adc
and
adc
sub
add
add
add
adc
add
add
inc
sub
add
add
add
adc
add
add
push
add
add
adc
add
add
test
adc
add
add
sbb
add
xchg
sub
add
add
add
add
add
add
add
add
add
sub
add
add
add
sub
add
add
add
sub
add
add
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
ins
add
dec
inc
push
dec
xor
cs
ins
add
dec
inc
dec
inc
xor
cs
ins
add
dec
xor
cs
ins
add
push
cs
ins
add
xor
cs
ins
add
inc
inc
push
push
xor
cs
ins
add
inc
push
dec
cs
dec
dec
add
inc
dec
dec
xor
cs
ins
add
inc
push
xor
cs
ins
add
inc
push
inc
dec
push
cs
ins
add
push
push
dec
dec
dec
cs
ins
add
dec
dec
dec
inc
push
cs
ins
add
dec
dec
dec
cs
ins
add
dec
inc
dec
xor
cs
ins
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
ins
ins
outs
arpl
add
jb
jne
ins
inc
jb
add
add
imul
jae
add
inc
gs
arpl
add
popa
addr16
imul
outs
jbe
add
inc
gs
popa
jbe
inc
imul
add
dec
imul
push
dec
gs
gs
outs
outs
outs
arpl
outs
push
add
inc
outs
dec
outs
imul
add
inc
outs
jne
push
jb
arpl
jae
jae
add
inc
jb
addr16
imul
inc
gs
inc
add
add
fs
jae
jb
jb
imul
push
gs
jne
jb
push
popa
ins
jne
push
add
inc
je
dec
jo
outs
inc
imul
ins
gs
gs
imul
add
ins
dec
test
xchg
dec
jge
push
xor
inc
inc
xor
dec
cmp
cmps
and
shl
pop
repnz
inc
retf
lods
add
out
and
stc
jge
in
fnsave
mov
sub
adc
in
adc
jo
mov
add
arpl
xor
in
jb
mov
fist
mov
dec
adc
inc
inc
sar
and
cmps
mov
adc
adc
jecxz
lods
fistp
or
aad
aas
ds
ins
pushf
je
jl
pop
pushf
mov
add
stc
push
add
and
retf
add
call
ins
sti
cli
add
stc
cmp
js
stc
mov
sahf
push
aas
push
cmc
stos
mov
and
or
cmp
outs
jg
sbb
cmp
test
add
mov
pop
loop
repnz
popa
cdq
in
arpl
daa
sbb
mov
(bad)
pop
add
add
or
add
lods
pusha
xlat
fsub
(bad)
(bad)
push
jmp
jmp
cld
dec
and
stc
xor
sbb
scas
xchg
pop
push
jp
jns
xchg
and
xchg
jae
cmps
jne
(bad)
int
addr16
stos
sbb
aaa
pop
in
arpl
pop
daa
mov
stos
push
retf
test
lods
hlt
imul
mov
inc
cmps
sub
add
inc
push
sbb
sub
mov
pop
mov
dec
mov
mov
(bad)
cmps
das
mov
mov
mov
movs
xor
out
inc
cmps
sub
test
jl
mov
sbb
cmps
jo
imul
cwde
scas
xchg
ret
daa
sbb
jle
xchg
stc
xchg
and
jns
mov
sub
ret
mov
pop
and
dec
bound
inc
xor
or
mov
mov
push
and
push
xchg
sbb
pop
xchg
or
push
test
mov
sub
mov
sub
xchg
(bad)
out
push
mov
pop
pop
mov
mov
test
rcr
cmps
jo
test
out
icebp
jmp
mov
add
adc
xchg
and
stos
jle
jmp
cmp
push
jae
push
jecxz
repnz
add
(bad)
jnp
daa
xchg
loop
jne
inc
aad
add
sub
inc
test
adc
repz
sbb
cmps
cmp
loope
xor
frstor
dec
in
loop
sub
test
jb
shrd
cdq
sbb
movs
mov
push
lea
and
mov
sbb
and
test
call
inc
sbb
cwde
outs
mov
mov
add
jno
adc
loopne
push
pop
add
jge
pusha
dec
lahf
cli
mov
fldenv
fdivr
sbb
xlat
xor
cmp
jne
xor
fadd
adc
hlt
cmp
xchg
add
arpl
in
dec
jne
xchg
mov
fcom
or
es
repnz
shr
pop
push
and
test
(bad)
fsub
je
test
retf
xchg
scas
mov
jle
test
inc
push
and
xchg
jecxz
xor
mov
cmp
mov
mov
cmps
loopne
outs
int
stc
cmp
mov
loop
pop
adc
mov
shl
mov
test
cmc
aam
adc
test
inc
dec
cmp
cmp
inc
ret
and
xor
sti
sub
lock
jae
sahf
or
sbb
mov
dec
sbb
sub
sbb
loope
retf
movs
jbe
leave
inc
and
adc
fdivr
mov
cdq
pop
or
div
cmp
js
inc
lea
test
aam
aam
int3
push
ficom
jl
push
add
aaa
xchg
adc
data16
loop
add
fist
cmps
stos
inc
jo
and
fnstsw
cmp
xor
inc
pop
jmp
repnz
fwait
stos
lds
push
das
mov
inc
inc
popf
shl
mov
mov
pop
dec
popf
dec
ss
ins
mov
sub
jmp
or
dec
mov
fwait
iret
cmp
xchg
inc
jae
mov
ret
lods
push
mov
mov
test
ins
movs
xchg
jmp
popa
movs
rcl
loope
bnd
hlt
ss
xchg
sub
fbstp
inc
push
mov
lds
fisubr
sub
stos
and
lahf
test
mov
mov
add
mov
pusha
stos
sbb
jae
arpl
scas
sbb
cmp
xchg
repnz
jge
xlat
push
shl
movd
pmaxsw
movs
xchg
mov
(bad)
mov
cmc
cdq
repz
or
mov
out
add
in
jge
scas
pop
repz
(bad)
xlat
or
sbb
push
push
and
and
cli
mov
cmps
jp
cmp
ret
jne
xchg
lea
popa
jecxz
addr16
xchg
aaa
mov
call
int3
lahf
mov
sar
xor
retf
(bad)
out
sbb
mov
aam
test
dec
sub
movs
dec
mov
sub
jmp
mov
cmp
aam
mov
jae
(bad)
jg
inc
scas
xchg
(bad)
pop
xor
aas
mov
inc
(bad)
stc
stos
adc
repnz
add
cmp
push
jmp
test
daa
clc
test
push
push
jne
inc
stos
or
fild
add
ins
sbb
fstp
and
dec
repz
test
dec
adc
aaa
adc
xchg
push
loopne
loop
push
sbb
lea
js
push
or
and
into
in
mov
jge
dec
es
add
call
jns
mov
std
pop
inc
sub
xor
add
(bad)
enter
pop
jg
jno
push
mov
out
ja
sahf
outs
push
repnz
add
lods
in
dec
mov
xor
rol
fcmovnbe
movs
int3
ja
pop
lock
inc
mov
xor
push
ins
mov
sbb
loopne
jp
test
add
push
lock
daa
xchg
adc
push
shld
pop
fsubr
add
inc
mov
or
add
add
ret
add
jl
mov
lods
sbb
aaa
pop
imul
push
push
test
stos
pop
jl
(bad)
pop
dec
cmp
out
outs
sub
push
leave
fdivp
push
ja
nop
fs
and
(bad)
sahf
inc
jne
das
stc
data16
and
or
xchg
sbb
sub
scas
jmp
hlt
push
movs
mov
jb
pop
fs
int3
mov
das
inc
ss
and
adc
inc
xchg
ret
ins
test
mov
or
je
pop
ins
shr
lds
cmp
in
inc
push
pcmpgtb
loope
cmp
pop
xchg
inc
popf
movs
and
repnz
in
cdq
jl
ret
mov
sub
(bad)
out
inc
sub
mov
xor
mov
fistp
dec
jp
mul
jns
jnp
loopne
lds
push
and
xlat
adc
mov
xchg
jecxz
mov
jnp
int
sub
adc
adc
mov
ror
movs
js
lea
sbb
mov
xchg
xchg
lods
mov
xor
jl
xor
enter
pop
mov
pop
and
jle
inc
mov
mov
je
adc
loop
daa
pop
inc
add
pop
push
cmps
in
test
retf
xchg
cmp
stc
cmp
add
xchg
test
pop
jno
jle
movs
inc
sbb
mov
scas
push
cld
mov
(bad)
mov
pushf
fist
sahf
stc
enter
sub
mov
push
push
pop
xor
push
(bad)
in
dec
push
stos
sub
xchg
xchg
add
mov
mov
lea
mov
jmp
rol
rcr
jg
jg
mov
rcl
push
daa
ret
pop
repz
es
dec
aad
xlat
iret
mov
loopne
cmps
ret
mov
dec
cmp
loope
inc
in
push
xor
cdq
lods
sbb
cmp
sar
jecxz
dec
hlt
xchg
add
popf
movs
gs
pushf
and
push
ja
xor
std
stos
lods
rcl
sar
xlat
cmp
xor
sbb
fnstenv
or
or
dec
lds
mov
stc
mov
popf
int3
fs
aam
cdq
xor
dec
aas
sub
lea
out
leave
ja
sub
ror
call
jmp
imul
xor
std
mov
aas
dec
inc
and
out
sub
push
push
dec
pusha
add
jns
cmp
cmp
fidivr
in
(bad)
mov
je
dec
sbb
mov
cmp
fldcw
fsub
lods
mov
xchg
fstp
add
inc
inc
lods
cld
daa
mov
xchg
repnz
add
jge
int
outs
pop
xchg
or
mov
xlat
sar
dec
cmp
xor
mov
push
cwde
pop
inc
daa
pop
mov
sbb
sbb
test
jae
sbb
(bad)
mov
xor
sbb
push
scas
scas
pop
daa
mov
push
sbb
mov
retf
nop
ret
push
psubd
fmul
sub
out
and
inc
mov
jbe
sti
cmp
(bad)
in
push
lock
in
and
push
xor
xor
scas
out
imul
sub
sub
push
mov
sbb
mov
in
add
mov
scas
mov
(bad)
lock
jno
aaa
js
mov
xor
mov
scas
cmp
ror
rcr
lods
or
pop
dec
jg
pop
cmps
and
push
je
push
jle
push
pop
enter
loopne
loop
add
cmp
fwait
scas
out
cmp
retf
xchg
push
sbb
xor
repz
es
push
aam
shr
inc
add
jae
dec
call
lds
jb
out
jmp
push
mov
ds
mov
setle
sbb
movs
cmp
xor
(bad)
xchg
and
in
sbb
or
mov
jle
(bad)
push
cmp
xor
inc
out
fwait
rcl
stos
punpckhwd
push
into
add
and
mov
outs
sbb
repnz
sbb
dec
ins
popf
mov
adc
mov
adc
cmp
xlat
jno
cli
(bad)
enter
ins
cmp
repnz
je
add
js
aam
mov
call
stos
inc
push
aad
cmps
rcl
dec
xchg
clc
cmps
ja
scas
imul
push
mov
pop
mov
(bad)
das
lock
pop
in
(bad)
mov
dec
push
sub
lds
data16
popa
ret
xor
mov
sbb
mov
std
pop
daa
mov
pusha
je
jmp
rcr
xchg
jo
add
jecxz
pop
iret
(bad)
clc
fucomip
clc
into
bound
fcmovnbe
in
addr16
loopne
fwait
test
add
add
inc
xor
adc
ds
arpl
mov
ins
sub
ds
jecxz
and
test
cmp
out
icebp
mov
mov
out
adc
fucom
sti
mov
dec
or
ins
pop
jae
and
add
cmp
xor
icebp
xchg
out
push
pop
fidiv
sbb
in
lea
(bad)
sbb
call
arpl
aad
icebp
enter
pop
inc
lods
dec
fsubr
fwait
xchg
ret
retf
test
inc
mov
jne
in
(bad)
push
add
mov
mov
dec
xor
in
jge
xor
cs
xchg
pop
stos
cmc
inc
movs
xchg
xor
and
mov
inc
sub
xchg
jno
pop
mov
fdivr
xor
sbb
or
adc
mov
cli
test
rcr
stc
leave
inc
(bad)
out
inc
jp
jg
imul
data16
cmps
movs
cmp
cld
test
cmp
pop
les
pop
arpl
cmp
into
in
loop
jmp
in
mov
pop
push
in
mov
adc
ds
js
int
in
jbe
movs
mov
jns
push
add
add
(bad)
call
add
movs
out
mov
lods
pop
pop
cmp
sbb
or
lock
push
xchg
out
pop
inc
fmul
or
fnstsw
and
push
xor
xor
add
shl
mov
jmp
nop
mov
iret
cmc
mov
lods
sbb
push
fdivr
push
in
rcl
sbb
or
or
sahf
mov
adc
pop
data16
(bad)
sub
mov
mov
jne
pop
jg
in
sbb
aas
inc
in
xchg
out
sbb
or
adc
(bad)
pop
ficom
pcmpeqd
iret
mov
popf
lds
mov
mov
int3
scas
push
jge
fbld
ss
xchg
adc
mov
jmp
push
test
xchg
(bad)
mov
cmp
inc
pop
movs
outs
enter
movs
mov
mov
clc
and
(bad)
enter
scas
int3
mov
lahf
xor
push
adc
iret
push
push
pop
in
add
aad
fs
push
fnstcw
adc
(bad)
std
inc
loopne
and
repz
in
ins
sti
loope
ror
ror
jl
sbb
int3
out
(bad)
xor
iret
xor
out
jg
or
dec
push
out
sahf
xor
pop
dec
aaa
lahf
(bad)
jle
movs
xchg
mov
mov
sbb
add
pop
in
aas
jnp
repnz
loopne
repz
je
mov
push
ror
and
shl
or
sahf
dec
mov
jo
jmp
(bad)
xor
sub
adc
mov
mov
pop
inc
ret
push
(bad)
ret
push
inc
into
fldcw
das
aad
aaa
dec
idiv
aad
test
push
adc
sub
and
sahf
mov
or
fdivr
mov
fimul
sub
sbb
retf
xchg
push
cmp
xor
cmc
movs
aas
push
test
les
icebp
xchg
jmp
push
retf
(bad)
fnstenv
adc
inc
mov
(bad)
mov
call
pop
loope
test
xor
scas
jmp
cmp
scas
jnp
test
cmp
ja
cdq
inc
aam
loop
xlat
inc
cmp
push
aas
xchg
ret
cmps
cwde
ss
adc
fisttp
les
div
les
sbb
das
xor
ds
or
add
sti
dec
repnz
aad
xchg
xor
sti
pop
cmp
test
retf
test
dec
clc
dec
sbb
push
mov
jl
mov
push
dec
loope
lea
or
add
imul
mov
scas
pop
fdiv
mov
hlt
out
arpl
or
or
test
imul
(bad)
lods
sub
std
inc
bound
mov
aaa
xor
xor
jmp
or
inc
das
jne
(bad)
or
xchg
or
test
scas
into
and
das
std
loop
leave
dec
jo
xchg
inc
call
neg
aaa
or
dec
adc
cld
and
lahf
ins
cmp
aam
sub
jbe
dec
xor
xchg
addr16
ret
mov
pop
jmp
inc
mov
adc
or
rcl
adc
mov
fld
xor
dec
or
ins
xchg
dec
jno
lea
mov
xchg
jl
cmp
xchg
mov
cli
pop
cmp
pop
xor
cmp
push
ins
xchg
fisttp
xchg
inc
inc
icebp
cld
adc
push
movs
(bad)
push
int3
mov
dec
and
adc
jmp
sti
sub
nop
jo
cmc
and
xor
jno
push
push
jmp
and
xor
dec
imul
(bad)
jo
addr16
cmp
(bad)
shl
inc
mov
and
ja
mov
mov
push
cmps
in
inc
repz
dec
or
sub
std
cmps
mov
push
inc
sbb
(bad)
jge
mov
popf
jno
ror
sub
repz
cld
or
xchg
cs
out
xchg
call
and
fisubr
sub
iret
mov
push
adc
in
addr16
pop
pop
sbb
mov
add
fistp
jp
xchg
xchg
mov
push
lods
out
rcl
pop
jnp
add
push
or
imul
fs
push
cmp
pop
(bad)
mov
imul
sbb
popa
cdq
mov
out
xor
dec
xor
mov
dec
popf
cmp
or
adc
gs
add
out
dec
(bad)
mov
jp
sbb
or
fld
repnz
mov
iret
jg
mov
ret
mov
inc
leave
daa
fcomp
jne
jno
leave
pop
jne
jnp
loopne
mov
or
dec
cdq
test
movs
daa
xor
mov
mov
and
and
mov
int
fcom
sub
and
xchg
xor
sbb
xchg
xor
jp
xchg
fadd
nop
or
loope
in
cli
mov
or
retf
pop
xchg
inc
xor
cmp
popf
(bad)
jb
sahf
inc
scas
fnstsw
test
ins
dec
clc
cmp
aas
loop
in
pop
psrad
nop
test
sahf
sub
ja
test
cwde
inc
(bad)
cld
es
gs
gs
hlt
jae
leave
mov
into
and
inc
sbb
and
mov
enter
push
js
sahf
mov
xchg
stos
sbb
fwait
xor
stos
xchg
xchg
mov
cmps
push
and
out
mov
push
lahf
pusha
shl
pop
cmp
scas
(bad)
cmp
add
popa
xor
sbb
pop
dec
fistp
loope
cmps
iret
push
repz
xor
setp
mov
cmps
mov
jns
sub
jbe
sub
add
scas
add
jb
sub
pusha
aam
push
pop
xchg
out
mov
mov
in
add
movs
pop
push
jbe
pop
jmp
cli
mov
and
rol
sub
bound
jge
mov
aad
sbb
js
jae
fidiv
cmp
push
(bad)
inc
call
mov
ins
inc
cli
jge
push
fstp
mov
cdq
(bad)
cmp
jecxz
pop
or
cmc
sub
shl
ret
sbb
sti
push
std
inc
cmp
daa
and
mov
inc
push
and
mov
cmp
jmp
cmp
and
cmps
jl
sbb
mov
jns
mov
cmp
pop
xlat
pop
and
sbb
rcr
xlat
dec
inc
pop
adc
retf
mov
imul
jg
cdq
das
sbb
push
mov
xor
adc
cmp
xor
inc
movs
aaa
or
pop
mov
mov
pop
jne
mov
push
sbb
jle
stos
hlt
in
lock
cmp
dec
sub
add
and
or
push
test
mov
int
push
test
pop
clc
das
dec
jg
adc
jmp
dec
inc
sub
jnp
dec
lods
std
outs
iret
aas
pop
scas
js
(bad)
out
mov
inc
cmp
icebp
bound
xchg
hlt
jp
push
lods
data16
call
mov
(bad)
xchg
and
pushf
cs
ins
sbb
arpl
xchg
stos
test
jmp
aad
int
xor
push
std
push
movs
xor
sbb
std
xchg
out
pop
dec
and
test
iret
(bad)
cli
or
dec
shl
mov
jns
and
ins
repz
xlat
jne
sub
xchg
(bad)
mov
add
and
xchg
push
mov
and
sbb
or
cdq
xchg
jnp
mov
jle
jbe
pop
sub
xchg
and
xlat
cmp
popa
and
(bad)
imul
or
mov
xchg
mov
stos
pop
jnp
fs
add
mov
rcr
and
inc
retf
js
push
xchg
or
scas
into
fs
mov
mov
mov
and
movs
xchg
mov
test
test
bound
mov
mov
or
leave
pusha
mov
dec
aam
sbb
adc
int3
popf
retf
inc
xchg
outs
xchg
push
movs
jae
cdq
aaa
bound
pslld
sub
or
xor
outs
jmp
mov
repnz
lock
pop
shr
cdq
mov
push
int3
aaa
nop
repnz
push
out
cmp
scas
push
adc
clc
pop
mov
push
ret
jb
retf
in
repnz
hlt
push
mov
or
and
mov
dec
outs
scas
sbb
add
mov
pushf
ins
test
addr16
shl
adc
fist
and
in
mov
xor
call
fild
sub
and
sub
cmp
movs
add
sbb
push
sbb
pushf
cs
das
popa
xor
pop
mov
mov
mov
mov
test
inc
sbb
sahf
xchg
add
in
enter
out
jmp
jg
sahf
or
xchg
dec
sbb
fnsave
repz
xchg
xor
inc
cmp
mov
inc
sbb
push
xor
jmp
adc
mov
jne
ins
add
call
jmp
gs
in
lods
mov
dec
cdq
sbb
stos
cmp
mov
jbe
out
pusha
in
std
adc
cmp
cmps
outs
outs
and
jne
push
and
stos
push
and
pop
fiadd
lahf
cmp
outs
out
cmps
inc
lock
dec
popa
test
xchg
arpl
mov
xchg
(bad)
div
ja
xchg
or
jg
fcmovnbe
es
add
and
cmp
jmp
sti
aad
lahf
pop
xor
adc
fcmovb
add
xchg
and
jle
ss
or
and
push
push
push
add
in
mov
push
or
dec
inc
retf
pop
iret
jmp
or
ins
or
jb
aaa
out
xchg
push
jns
out
pusha
and
fs
int
js
xor
jg
mov
js
jb
jae
leave
mov
ins
inc
int3
xchg
mov
sub
pop
xlat
and
adc
mov
xor
xor
fisubr
cmc
(bad)
scas
pusha
xor
sbb
and
(bad)
cmps
popf
inc
mov
pop
pusha
loopne
inc
aad
ret
es
push
push
(bad)
pop
repnz
mov
popf
sar
ds
sub
test
mov
outs
and
call
push
pop
cli
mov
mov
inc
sbb
ins
xchg
hlt
std
dec
sti
dec
sub
mov
shl
push
shr
xchg
shl
and
mov
js
or
pop
sub
mov
mov
in
nop
jbe
cmp
sahf
outs
shl
aaa
mov
pop
je
lock
shl
sbb
outs
and
dec
xor
enter
inc
shl
repz
pop
push
movs
dec
cmp
xchg
xlat
(bad)
jno
jne
mov
sbb
or
mov
jecxz
jl
or
mov
sti
adc
scas
(bad)
sbb
fsub
movs
stc
fwait
and
cmp
sub
push
data16
lea
cmp
xchg
or
out
es
rcr
sahf
stos
outs
shl
xchg
in
xchg
int
mov
mov
not
sub
xchg
add
(bad)
test
ror
adc
ret
jge
pop
test
movs
fsubr
sub
add
add
stos
mov
pop
aad
pop
mov
fidiv
sub
xor
mov
out
clc
cmc
repz
jp
cmp
mov
mov
data16
in
xlat
pop
sub
ret
jno
sub
mov
pop
dec
sub
dec
out
adc
push
jp
ss
iret
stc
in
es
or
pop
pop
xchg
and
xchg
or
cmp
xchg
pop
push
mov
cmp
mov
mov
in
bswap
inc
in
adc
int
aas
cmp
pop
push
clc
jno
push
jo
ficomp
ss
pop
xchg
xchg
stos
cmp
pop
icebp
movs
fsubr
add
pop
jnp
call
xor
lock
and
sub
movs
scas
cmp
mov
mov
mov
shr
imul
popa
lds
aam
sti
popf
sbb
in
cmp
pusha
out
mov
das
ins
jo
test
sub
out
aam
fild
inc
(bad)
pushf
test
jbe
xchg
repnz
sbb
mov
and
xchg
pop
pusha
loope
pop
dec
xchg
in
jae
fadd
jecxz
or
push
or
jp
into
or
adc
pop
into
je
mov
push
sub
out
xchg
inc
les
cmc
mov
and
add
fbld
sbb
out
aam
push
cmp
mov
xor
ins
xchg
jmp
and
sub
xor
jle
pop
shl
test
push
or
aas
mov
aam
mov
retf
pop
mov
stc
imul
pop
add
mov
cmp
pop
push
pushf
cmps
cld
scas
ret
jne
xchg
in
lods
call
mov
jecxz
clc
mov
retf
mov
sbb
sbb
or
enter
das
xchg
mov
add
inc
mov
jg
mov
pop
mov
retf
mov
pop
add
push
mov
aaa
pusha
stos
jg
push
aam
mov
ret
and
jp
pop
outs
xchg
cli
ins
cmc
fisubr
adc
add
in
loop
mov
sub
fldcw
test
ja
inc
call
outs
push
xchg
mov
and
jb
stos
push
xor
bound
not
call
pop
push
repnz
dec
sub
int3
rcl
cld
test
lock
mov
mov
pop
cmps
(bad)
jmp
nop
retf
cmc
xchg
pop
sub
fimul
cmp
aaa
popf
popf
adc
inc
mov
sbb
(bad)
jno
xchg
adc
add
xchg
adc
fwait
push
hlt
outs
dec
movs
mov
inc
pop
cli
int
cmp
and
and
mov
push
inc
jno
sub
ins
popa
pop
xchg
xlat
xor
test
pop
sub
jmp
fistp
call
fdiv
mov
sub
movs
and
cmp
loope
stc
jle
adc
pop
mov
call
iret
adc
add
mov
dec
pop
sub
jmp
(bad)
out
jo
pop
add
jecxz
jle
test
je
cmp
push
lock
pop
gs
pop
loopne
mov
inc
cdq
sbb
inc
push
out
sub
ins
movs
push
add
pop
jnp
les
mov
dec
and
cmp
xor
(bad)
ror
sbb
add
and
lods
dec
sub
push
jbe
std
inc
and
in
enter
xor
dec
jo
jns
mov
cdq
add
(bad)
iret
test
and
jae
cmps
adc
loope
mov
push
xchg
sbb
fwait
lods
push
dec
add
pop
inc
pop
dec
in
adc
or
push
dec
ss
rcr
add
or
push
inc
jecxz
mov
cwde
xor
adc
ffree
cmps
icebp
xor
test
lock
cld
daa
sar
std
iret
test
cmp
pop
fwait
xor
lahf
inc
sub
mov
adc
test
adc
push
(bad)
ins
xlat
loope
inc
ins
inc
sub
fisttp
mov
dec
fbld
jmp
inc
and
sbb
enter
jmp
cmp
sti
pop
mov
and
jns
pop
add
repnz
xor
mov
gs
(bad)
sub
imul
add
mov
loope
push
pop
cmps
jns
cli
adc
add
mov
mov
push
das
xor
push
mov
test
sbb
mov
sbb
mov
dec
add
and
in
mov
mov
loope
call
xor
movs
inc
jge
lods
xchg
fldenv
sahf
(bad)
lods
cmp
dec
mov
adc
and
dec
push
jnp
bound
add
mov
aad
data16
(bad)
je
rcl
ret
fwait
outs
les
outs
jnp
jmp
xchg
sahf
jmp
dec
xchg
rol
jae
and
push
adc
mov
push
or
leave
push
cmp
inc
cwde
clc
mov
push
ret
pop
fisub
iret
inc
pop
ja
add
gs
std
add
inc
loope
jae
push
aas
or
out
enter
add
(bad)
fiadd
movs
mov
loop
stos
test
ja
movs
xor
inc
or
es
shr
xchg
outs
aad
and
out
cmps
jp
mov
inc
add
adc
pop
repz
and
add
xchg
out
sbb
and
in
fwait
addr16
in
jb
lea
sbb
in
push
sub
cmc
ret
das
sbb
cdq
popa
inc
or
jno
mov
and
retf
(bad)
sub
fimul
add
xchg
dec
ret
lods
push
mov
pop
aaa
rcr
loopne
stc
sbb
mov
add
hlt
jne
add
fbstp
and
mov
mov
(bad)
push
in
in
mov
scas
in
dec
retf
scas
jnp
lahf
xchg
push
push
imul
mov
or
mov
add
mov
cwde
test
mov
lds
mov
sahf
push
movs
or
mov
pushf
sti
xchg
aad
int3
(bad)
sbb
ds
jp
mov
test
jns
nop
push
xchg
ins
inc
retf
movs
and
int
jle
push
or
pop
xchg
cmp
xor
xchg
aam
(bad)
ja
in
mov
and
inc
(bad)
fs
push
or
(bad)
push
frstor
nop
(bad)
mov
cmp
imul
sbb
cmps
xchg
push
adc
push
in
cmp
es
add
test
enter
into
div
outs
jbe
stos
or
test
mov
imul
add
ins
or
sub
or
nop
and
lds
(bad)
adc
shr
mov
scas
sbb
outs
aam
aam
aas
aas
xlat
retf
pop
cmp
add
test
enter
pop
sbb
push
popf
cmp
inc
jne
clc
jnp
sbb
lock
shr
les
lock
cmp
adc
lds
and
pop
jb
jmp
cmps
aaa
ficom
mov
pop
sub
jmp
lods
adc
retf
(bad)
xchg
in
movs
clc
add
in
shl
and
std
dec
lock
xchg
aas
imul
fsubr
xchg
jl
ss
mov
js
sbb
test
mov
jp
dec
enter
idiv
sbb
call
jmpw
jb
movs
jo
not
adc
xlat
stc
ss
jns
sbb
mov
xchg
adc
sar
dec
xchg
test
int
mov
or
add
mov
movs
xor
mov
cld
call
pop
(bad)
test
sbb
xchg
pop
push
sahf
test
dec
fidiv
stos
sbb
cmp
or
ror
out
int
inc
pop
ret
jmp
int
jecxz
xchg
out
sub
xchg
mov
jp
jo
out
cwde
mov
icebp
inc
mov
int
pop
xchg
sbb
jecxz
and
pushf
mov
scas
sub
xchg
ss
sbb
ror
and
in
in
ret
push
sub
push
xchg
mov
add
scas
add
retf
cmp
test
es
and
mov
out
xor
mov
hlt
movs
lahf
mov
je
push
pusha
retf
xchg
(bad)
push
sub
sbb
adc
into
sub
outs
push
arpl
mov
mov
pop
jns
aam
out
mov
fisubr
cs
push
or
(bad)
fimul
mov
bound
sub
adc
mov
mov
shr
fcmovne
xchg
aam
scas
mov
in
and
push
jmp
shl
dec
dec
movs
xchg
mov
pop
outs
call
push
mov
xor
addr16
dec
pop
ins
ds
fsub
sbb
mov
mov
sub
iret
pop
outs
fcmove
ror
cmp
es
push
sub
mov
sub
dec
iret
mov
in
sar
aaa
jbe
push
pop
sti
(bad)
xlat
out
out
jnp
ss
jae
dec
add
adc
js
cmps
pop
rcl
jbe
jae
scas
rol
sahf
iret
and
(bad)
mov
imul
mov
ret
mov
mov
sti
pop
jge
es
mul
cmc
xchg
jecxz
inc
xchg
push
loop
inc
cmc
ffree
pop
sub
dec
or
adc
jmp
push
push
push
test
jle
jo
std
sub
sub
dec
lds
jl
mov
mov
mov
cmp
jecxz
dec
inc
cmp
pop
int
xlat
mov
aam
js
sbb
sub
sbb
add
stos
cmps
rcl
xor
or
or
xchg
push
jmp
mov
aas
xor
jae
sbb
sbb
adc
sbb
and
mov
or
mov
cmps
out
popa
inc
pop
(bad)
imul
fisubr
sub
xor
fisttp
pop
dec
inc
hlt
mov
movs
fwait
jle
fild
sbb
mul
pand
imul
xchg
fdivr
popf
pushf
pop
adc
lods
(bad)
mov
cmp
pop
push
lods
retf
mov
mov
lods
test
test
inc
stc
add
push
dec
push
and
mov
cs
stos
push
xor
or
ss
not
or
jbe
xor
and
out
cmp
inc
add
jb
out
sbb
jmp
xchg
mov
cli
in
xchg
and
ins
dec
jo
retf
inc
fwait
push
rcr
call
cmp
(bad)
pusha
(bad)
and
outs
movs
imul
aaa
push
xchg
sar
add
out
jp
jnp
jmp
(bad)
es
jl
packssdw
cmp
mov
scas
ret
sub
push
shl
cmp
push
add
xchg
fwait
cdq
and
dec
cs
(bad)
(bad)
sbb
jae
dec
ret
push
xor
das
imul
mov
enter
je
cmps
dec
xchg
hlt
fwait
pop
scas
adc
xchg
inc
xlat
add
jle
mul
sbb
push
pusha
dec
aad
sub
pop
mov
bound
or
in
xchg
outs
xchg
in
cmp
inc
cmp
test
xchg
jp
xchg
inc
loope
(bad)
arpl
test
or
dec
push
jmp
js
mov
ret
cmc
cmp
fucomp
cli
jmp
rol
inc
outs
adc
xchg
cmp
add
(bad)
in
push
jg
fs
fcmove
ds
cmp
ror
mul
(bad)
js
(bad)
in
fbstp
in
pop
(bad)
icebp
les
lods
xchg
call
dec
add
mov
cdq
inc
dec
repnz
scas
sub
jle
fld
(bad)
mov
xchg
loop
(bad)
loopne
test
in
lock
adc
and
pop
push
lods
shl
sbb
iret
bound
mov
mov
add
mov
sbb
dec
into
repz
xor
add
(bad)
xchg
sbb
jnp
push
jl
mov
sbb
shl
popa
rcr
push
fs
iret
outs
add
sub
jp
pop
sub
mov
mov
xor
daa
fnstsw
es
sbb
ds
push
push
adc
xchg
add
cmps
mov
int
std
std
cdq
or
jmp
dec
or
or
ss
cs
jp
imul
cmps
pop
lods
arpl
stos
adc
rcl
cs
out
jns
sbb
loope
out
inc
sbb
nop
xchg
aaa
or
and
mov
xchg
cs
stos
mov
es
cmp
arpl
and
icebp
mov
scas
push
inc
mov
into
ror
gs
cmp
daa
shl
sub
sub
sbb
outs
scas
pop
leave
std
rol
cmp
les
xchg
adc
push
je
out
push
push
inc
mov
push
mov
mov
xchg
shr
lock
fs
test
es
or
lds
je
sub
pushf
mov
adc
and
cmps
cdq
mov
loope
rcr
adc
ja
bnd
clc
sahf
lock
push
inc
jmp
sbb
rcl
push
ficomp
int3
pop
or
push
xchg
fstp
repz
mov
pop
sub
sbb
lahf
inc
xchg
clc
and
pop
pop
retf
inc
add
and
leave
mov
inc
xchg
shl
cmp
ror
cld
jge
pop
sub
shl
cmp
callw
jno
jb
icebp
cmp
mov
inc
pop
inc
pop
jbe
cs
xchg
call
(bad)
data16
sub
sbb
jne
cmps
jno
xchg
mov
scas
mov
cwde
(bad)
(bad)
test
inc
adc
mov
xor
pop
in
aam
mov
loopne
jae
mov
es
push
cmps
and
fs
ja
test
ds
enterw
ja
push
jns
pop
inc
adc
mov
jge
inc
cmp
mov
sbb
xchg
lahf
adc
out
mov
cmp
sbb
jnp
xor
retf
xor
enter
jb
shl
add
hlt
fsub
and
cmc
rcl
sub
rcr
pop
cmp
add
jmp
sar
jno
in
add
cwde
or
ror
les
adc
ret
out
dec
jge
sbb
sub
scas
add
xor
loope
movs
or
inc
repz
mov
mov
jno
inc
jg
mov
dec
pusha
stos
dec
movs
and
mov
sub
addps
lods
scas
dec
pop
retf
dec
inc
add
sub
inc
bound
dec
scas
jl
pop
scas
imul
push
outs
and
fdivr
inc
loop
dec
mov
ret
ret
adc
mov
inc
jl
cmc
(bad)
cld
add
cmp
xchg
dec
(bad)
mov
fidiv
jecxz
data16
sub
or
mov
ret
mov
inc
push
add
cdq
ror
sub
or
repnz
push
aam
addr16
lahf
xchg
in
loopne
ds
pop
cs
aam
sub
mov
pop
ja
mov
imul
loopne
fimul
add
jg
cli
xor
adc
inc
add
loop
inc
sbb
loope
imul
sub
addr16
fdivr
add
mov
(bad)
int3
out
je
(bad)
cmc
jg
iret
in
into
aaa
add
or
dec
push
shl
loope
in
add
cli
cli
or
mov
aam
pop
nop
xchg
push
je
(bad)
lock
cdq
pop
xchg
imul
movs
rcl
int3
pop
lock
leave
mov
push
inc
lock
in
leave
xchg
adc
jmp
outs
jge
(bad)
mov
pop
mov
adc
aam
pusha
jae
gs
out
loop
out
and
fidivr
push
pop
stc
dec
and
pop
cmp
xor
add
jae
dec
mov
movs
xchg
add
cmp
test
mov
aaa
xor
mov
hlt
je
retf
xchg
sti
rol
dec
push
pusha
addr16
into
cs
and
enter
add
sbb
push
xor
iret
pop
je
leave
in
jle
lea
sub
lea
test
inc
rcl
xchg
mov
sahf
repnz
mov
xchg
push
retf
add
pop
inc
xchg
cld
fst
popf
jle
repnz
fcomp
loopne
jnp
scas
mov
pusha
aad
mov
xchg
sub
mov
push
pusha
pop
xchg
cmp
push
data16
outs
cmp
dec
dec
or
or
sar
sbb
mov
mov
rol
pop
retf
and
dec
jmp
aaa
add
das
dec
jno
and
fs
test
mov
jmp
int3
xor
sbb
or
enter
dec
hlt
mov
out
fdivr
sub
ja
test
xor
test
jecxz
mov
mov
lods
mov
xchg
or
(bad)
scas
add
sbb
fdiv
mov
leave
sbb
add
aam
pushf
xlat
cmp
pop
xchg
mov
jmp
lods
adc
mov
ss
adc
push
ret
cwde
test
loope
scas
fimul
in
push
mov
dec
push
dec
and
icebp
and
fucomi
outs
add
mov
bound
pop
xchg
jnp
movs
mov
es
lds
lods
push
neg
out
sahf
ret
and
mov
xchg
jno
jp
aad
xor
std
test
push
iret
pop
push
retf
lods
xchg
fs
aam
std
jle
or
nop
pop
push
rcl
aaa
cmp
jno
inc
sbb
pop
mov
jge
adc
inc
mov
fcmovnu
and
adc
lods
sub
push
xor
js
sbb
inc
adc
dec
loop
sbb
pop
retf
test
xchg
inc
pop
mul
shl
or
call
rcr
mov
hlt
and
aam
lods
aad
xchg
rcr
pop
or
adc
mov
xchg
jle
(bad)
jbe
add
dec
cmp
fstp
push
jo
and
imul
fstp
pop
rcr
imul
mov
xor
cmp
add
xor
div
push
mov
add
add
push
movs
xchg
and
adc
cmp
inc
(bad)
cld
ror
cmps
cmps
out
mov
mov
xchg
shl
xchg
mov
mov
(bad)
loope
mov
mov
inc
test
popa
and
dec
repnz
sbb
in
sub
pop
pop
and
push
cli
xchg
add
lods
pushf
aaa
sbb
(bad)
pop
fcompp
lock
and
and
pop
stc
mov
jae
add
jmp
push
xchg
pop
inc
fidivr
aas
test
cmp
add
mov
repz
outs
call
loopne
inc
lock
ret
fs
lahf
xchg
inc
cdq
sbb
cmp
sbb
add
in
jp
inc
test
mov
fcomp
add
retf
inc
jl
test
mov
cmps
out
xchg
mov
in
aas
dec
sbb
ret
adc
add
xlat
inc
jnp
adc
mov
mov
int3
xor
test
mov
inc
mov
(bad)
ins
xchg
js
inc
rol
lds
push
loope
sub
lds
mov
gs
mov
pop
fdiv
xor
inc
push
in
arpl
lods
and
std
and
ror
pop
lock
sbb
and
jmp
sub
adc
movs
sbb
daa
add
mov
fs
inc
push
nop
pop
pusha
dec
add
mov
clc
push
xchg
xor
sbb
mov
dec
repnz
mov
cdq
and
xchg
cli
sbb
mov
push
ss
sahf
data16
jecxz
sbb
mov
ret
pop
add
xor
or
scas
cmc
cmp
fdiv
test
push
mov
adc
push
xchg
pop
dec
rol
mov
lods
push
repnz
out
mov
xchg
adc
push
js
retf
inc
cwde
jno
bound
adc
xchg
push
mov
inc
push
dec
jmp
push
les
or
sub
and
out
cmp
adc
inc
arpl
cwde
inc
lahf
popf
int3
mov
jl
inc
cmps
mov
inc
dec
or
(bad)
xchg
rol
call
jnp
shl
mov
mov
dec
out
cs
push
bnd
(bad)
scas
popa
xchg
out
cmp
and
jmp
and
imul
cmps
sbb
xchg
repz
popf
jle
jno
or
lods
loop
mov
int
lahf
es
adc
mov
mov
xor
inc
stc
push
sbb
addr16
push
inc
(bad)
sbb
cli
xchg
sbb
push
js
lahf
(bad)
es
mov
arpl
lock
mov
dec
mov
cmp
repz
mov
je
pusha
sti
mov
arpl
mov
xor
cmc
loope
test
sub
ret
je
loope
jns
rcl
sbb
push
xor
mov
imul
mov
pop
xchg
sub
xor
dec
fadd
mov
outs
stos
cmp
shl
hlt
adc
or
or
xchg
or
xlat
daa
adc
inc
adc
retf
xchg
sbb
in
arpl
cmps
bound
xchg
std
push
retf
push
stc
jp
adc
inc
ud1
lock
cdq
inc
jb
mov
jl
pop
data16
mov
dec
(bad)
ds
mov
inc
inc
mov
daa
xchg
xor
stc
jle
xchg
push
cmps
test
jmp
push
sbb
and
and
fmul
xchg
jle
call
sbb
xor
fdiv
add
push
xlat
pop
and
and
les
ret
push
push
inc
dec
ror
ins
push
mov
outs
add
push
jg
test
mov
jg
xchg
(bad)
leave
ror
popf
sbb
fcom
scas
xchg
xchg
sbb
mov
jl
xlat
add
pop
(bad)
in
test
ret
jne
btr
std
sub
rcr
inc
inc
repz
sub
mov
std
adc
add
jle
xchg
xor
or
cmps
xor
addr16
retf
adc
sub
push
or
add
cdq
inc
js
pop
aaa
mov
lock
sbb
es
(bad)
test
dec
loope
nop
mov
sub
out
add
test
fnstenv
(bad)
inc
xor
aaa
aaa
pop
inc
jbe
push
xor
retf
in
cmp
popf
add
mov
sbb
test
stc
popa
pop
out
dec
aaa
iret
lock
leave
or
les
dec
pusha
lea
mov
test
pushf
mov
ret
push
dec
sbb
jne
inc
inc
jae
sar
xor
or
mov
lock
sbb
xchg
popa
shr
(bad)
mov
mov
je
mov
aad
jge
arpl
adc
lea
sub
push
lock
adc
pop
fiadd
add
push
rol
fild
pop
inc
pop
(bad)
xlat
dec
inc
add
data16
outs
call
lahf
pop
jo
adc
(bad)
fist
imul
sbb
pop
mov
test
out
(bad)
movs
pop
cdq
in
mov
mov
rcl
(bad)
ret
icebp
lar
fld
fistp
fild
outs
test
push
call
shl
loope
inc
xchg
push
(bad)
out
xor
mov
movs
jle
cmps
pushf
mov
jo
pop
rol
fst
stc
pop
data16
xchg
shl
add
cmp
outs
loopne
mov
and
aaa
xchg
stc
aas
push
lea
mov
mov
add
xor
dec
jmp
cmp
movs
cdq
(bad)
push
rol
or
std
or
ins
clc
test
pop
jle
mov
mov
add
mov
(bad)
mov
gs
push
sub
mov
in
fmul
fwait
xor
nop
fdiv
ror
fnstenv
add
int3
ins
inc
dec
ret
add
jp
sub
stos
out
mov
mov
add
in
sbb
div
in
(bad)
out
sbb
mov
(bad)
movs
mov
ficom
test
js
test
mov
imul
ror
add
lfs
dec
inc
and
lods
inc
sar
mov
xchg
and
jge
sub
or
dec
jae
xor
inc
mov
jle
inc
push
adc
daa
(bad)
shl
lock
xchg
jmp
mov
push
outs
shl
fcomp
fidivr
mov
iret
jmp
inc
fidivr
in
fs
fcmovnu
leave
pop
push
aam
call
jno
retf
jmp
and
pop
mov
and
push
cmp
adc
fist
mov
or
lds
mov
xchg
add
mov
xchg
in
stos
inc
jns
xchg
mov
pop
test
mov
movs
js
iret
cld
sub
mov
sbb
push
pushf
aas
pop
out
leave
pushf
int
mul
int
(bad)
mov
arpl
jp
nop
scas
aam
add
bswap
enter
inc
sub
das
jo
ds
shr
pop
call
sub
jl
cmps
pop
ins
jno
adc
sar
jbe
sahf
call
imul
lock
iret
out
cli
bound
out
std
mov
xor
mov
mov
dec
js
fimul
push
repz
cmp
push
push
push
adc
cmp
xchg
sbb
movs
addr16
jecxz
movs
push
sub
xor
fistp
outs
bound
imul
(bad)
cmp
loopne
enter
and
dec
mov
cmp
jne
leave
in
sub
bound
sub
ja
test
fistp
add
leave
daa
stos
pop
fist
ss
dec
das
adc
push
xor
ficomp
in
xor
inc
inc
mov
test
jl
fisttp
xchg
js
mov
push
call
xchg
pusha
lahf
pop
outs
and
sbb
aam
inc
cmc
and
cli
outs
dec
lea
and
inc
out
movs
push
pop
loopne
xor
leave
mov
pop
xor
xor
jge
sub
xor
sbb
jo
mov
sub
out
popa
jbe
mov
imul
gs
aas
retf
fwait
stos
push
adc
movsx
push
mov
sbb
jl
arpl
mov
sub
out
push
call
fcomp
push
mov
xchg
stos
adc
xchg
movs
pushf
dec
adc
sbb
mov
daa
loope
xchg
inc
dec
retf
dec
ret
cmp
xchg
inc
sar
gs
ja
jecxz
stc
aam
cmps
pop
xor
pop
scas
add
mov
(bad)
jecxz
add
in
or
pusha
push
pop
sub
cmp
loope
shl
cwde
lock
int
xchg
fisub
adc
div
out
(bad)
xor
cmp
jb
add
repz
cmp
xchg
in
imul
stos
punpckhbw
aas
das
sub
inc
lods
dec
loope
test
cmp
pop
fisttp
das
enter
sub
pushf
or
leave
add
iret
movs
xchg
ror
xchg
addr16
sti
jne
lock
dec
retf
in
pop
push
adc
sbb
mov
mov
inc
push
xchg
ficom
or
mov
mov
sbb
arpl
fadd
mov
fst
(bad)
outs
hlt
mov
(bad)
stc
lea
mov
hlt
movs
call
jecxz
lds
mov
jae
inc
sbb
movs
and
shr
cli
jp
movs
xchg
stos
(bad)
loop
jge
and
movs
adc
jno
popf
push
push
into
rcl
outs
in
push
add
sub
or
and
pop
arpl
test
imul
push
xor
push
dec
adc
(bad)
out
mov
or
sti
xor
xchg
xor
mov
push
add
(bad)
ret
cmp
mov
fmulp
dec
cwde
pop
sub
lea
test
outs
pop
and
sbb
mov
rcr
and
sub
inc
das
xor
mov
aad
out
xor
out
add
mov
pop
popf
and
rcl
mov
push
out
adc
push
std
je
jg
push
dec
enter
pop
sub
and
cmps
mov
xchg
les
mov
pop
ds
daa
xor
popf
sbb
sbb
scas
and
push
xchg
push
jb
shl
inc
add
sar
frstor
pop
cmp
in
pop
cld
or
aam
push
mov
xchg
mov
movs
cmp
cmps
xchg
pop
push
je
mov
xchg
and
jp
lea
sar
cmp
lods
aad
xor
js
jb
push
les
movs
adc
movs
jp
xor
push
dec
xchg
xchg
push
mov
ins
fs
adc
stos
cmps
addr16
xchg
sub
adc
out
inc
in
clc
call
repnz
rol
adc
jmp
fcomp
cmp
std
xor
mov
push
stc
mov
mov
(bad)
into
push
pop
not
mov
cmp
gs
(bad)
cdq
nop
call
imul
in
xor
fnsave
dec
arpl
in
lock
fadd
mov
lods
sbb
jne
adc
aad
iret
add
add
stos
xchg
sbb
inc
scas
dec
inc
hlt
jg
fwait
xor
push
mov
mov
push
push
mov
lds
pop
(bad)
(bad)
pop
test
jmp
mov
rcl
add
push
movs
cmp
into
cmp
pop
dec
xor
ret
sub
pusha
jp
adc
pushf
repnz
push
push
les
retf
cs
pop
int
stos
in
or
xchg
lahf
inc
dec
cdq
inc
out
mov
imul
repz
mov
outs
pop
ja
mov
jbe
mov
lods
mov
loop
inc
sbb
stos
stos
into
hlt
loopne
lahf
outs
inc
les
outs
push
rol
std
outs
call
or
test
jge
xchg
mov
fs
in
scas
sar
xchg
cmp
(bad)
popf
jp
fcomp
adc
stos
adc
hlt
scas
xor
and
ret
cld
push
lods
push
scas
cli
jmp
add
pop
dec
mov
arpl
mov
xchg
mov
push
or
lahf
inc
add
adc
mov
je
daa
push
jae
ss
mov
adc
es
gs
daa
cmp
cmps
dec
jge
das
jle
stc
mov
lods
ret
sbb
or
xor
cmp
xlat
fsubr
lahf
mov
adc
in
je
add
or
stc
jmp
stc
div
mov
cmp
jecxz
jmp
out
in
mov
pop
dec
sbb
call
pusha
scas
leave
fidivr
xchg
fs
fadd
enter
or
or
mov
stc
loopne
inc
jecxz
jnp
mov
out
(bad)
in
push
int
in
cmp
xchg
fwait
xor
ss
gs
or
sbb
(bad)
arpl
jge
outs
arpl
ins
(bad)
pop
xor
rcl
clc
shl
push
push
pop
repz
mov
aam
mov
data16
outs
sub
pop
xchg
add
sahf
js
out
lods
call
scas
ds
dec
xchg
dec
jbe
or
push
icebp
xor
mov
cmc
sub
xor
jo
cmps
fbld
adc
xchg
mov
out
sti
xlat
add
adc
out
rol
add
lahf
jle
jl
cld
mov
cmp
inc
xor
jg
enter
sbb
addr16
xchg
add
lock
inc
sub
mov
fiadd
cdq
and
sbb
pop
pop
mov
sub
std
xchg
xlat
mov
or
mov
and
inc
xchg
cmc
cli
ret
inc
jge
cmc
cmp
sbb
inc
push
icebp
xor
mov
shl
jg
cmp
sub
and
xlat
jge
cdq
mov
cs
arpl
dec
and
cmc
cwde
ds
push
jp
mov
xchg
push
mov
fisub
aaa
scas
jbe
add
loope
dec
into
out
call
mov
lahf
jle
neg
dec
out
jnp
mov
cli
sbb
inc
js
ret
mov
sar
mov
je
aaa
pop
aas
stos
rol
mov
adc
out
cmovnp
mov
loop
out
(bad)
adc
(bad)
jbe
add
adc
stos
clc
jnp
and
loope
gs
xor
mov
mov
scas
jne
stc
and
sbb
xchg
xchg
mov
das
push
popf
cmps
in
out
cmp
xchg
mov
fdivr
test
xor
xor
outs
push
inc
mov
fld
test
scas
fwait
add
push
cmp
imul
add
pop
mov
mov
dec
fucomp
push
cmp
gs
push
lahf
int3
add
jbe
scas
gs
ret
sub
jge
cmc
xchg
pop
adc
fucomi
shr
ret
cmp
xchg
adc
ds
repnz
fs
stos
sub
push
or
in
mov
push
sub
pop
cwde
push
xchg
push
cmps
and
and
xor
pop
cmp
push
add
push
jns
test
or
nop
ja
mov
or
push
jmp
shl
sahf
mov
fnsave
test
adc
jmp
xor
mov
cld
std
cmp
out
jns
push
ror
pop
and
add
sub
xor
adc
jno
jl
stos
mov
sahf
scas
popf
xchg
fwait
fs
lods
add
jns
dec
push
push
dec
add
jb
cmovo
mov
add
mov
cmp
push
push
ins
jbe
sub
cmps
mov
or
in
xchg
and
jp
lds
std
jae
mov
xchg
lock
mov
and
inc
inc
inc
inc
popf
mov
outs
dec
out
lods
cmps
sub
xor
jns
sub
icebp
sbb
add
cmc
xlat
neg
inc
outs
pop
fnstenv
mov
leave
push
cwde
cli
inc
lds
ins
mov
adc
add
test
test
xchg
jp
xchg
jg
je
fs
movs
ss
jno
ss
loope
je
jp
add
xor
(bad)
out
rol
pop
sbb
mov
shl
inc
dec
jae
push
fsub
lods
xchg
shr
push
inc
lods
or
lds
xlat
aad
call
jmp
pop
pushf
cmp
stc
lea
inc
scas
cmps
call
(bad)
xchg
test
fs
mov
cmp
inc
push
sbb
shl
sbb
dec
pop
es
aaa
pop
popf
pop
es
push
popf
fsubr
call
loopne
jmp
or
sahf
cld
inc
(bad)
rcl
sbb
add
out
pop
add
add
xchg
or
and
fs
rcr
std
jae
in
or
les
xchg
sbb
mov
aad
dec
inc
ret
mov
mov
xor
or
or
xchg
gs
in
mov
xchg
test
fdiv
or
mov
adc
mov
sub
lea
jmp
mov
sub
xor
push
xor
inc
fwait
cmc
fild
push
add
dec
ror
(bad)
out
fstp
push
test
or
mov
ror
pop
mov
or
add
pop
mov
stc
pop
test
or
or
xchg
leave
sub
div
int3
sbb
or
retf
loopne
mov
push
pop
fadd
out
sub
lea
daa
xor
aam
pop
imul
aas
mov
shl
mov
pop
cdq
push
jge
shr
jmp
push
pop
retf
test
xchg
mov
push
xchg
xchg
adc
in
ins
fisttp
sbb
imul
repnz
jb
sbb
aam
dec
daa
mov
daa
sahf
in
aas
popa
inc
add
sbb
xor
mov
sbb
and
inc
xchg
lods
sahf
mov
sar
daa
add
or
call
(bad)
pop
loopne
xor
pop
nop
cmp
mov
pop
(bad)
or
xchg
lahf
addr16
mov
pushf
push
cmp
addr16
pop
fisub
push
jp
adc
inc
push
enter
xchg
jg
mov
xor
stos
mov
out
ins
push
xor
aaa
sub
mov
mov
cmp
lods
push
popa
jbe
pusha
push
sub
jg
icebp
pusha
inc
mov
sub
mov
ffreep
jl
enter
sbb
pop
inc
mov
jmp
mov
mov
sahf
ins
xor
ss
loop
jge
jmp
mov
pop
aad
jmp
movs
fnstsw
add
xor
outs
aaa
std
mov
cmp
xor
pop
repz
mov
mov
out
sbb
push
icebp
push
or
mov
inc
or
loope
mov
push
xor
movs
pop
adc
mov
fstp
dec
lods
xor
add
inc
or
cmp
and
pop
repz
and
sub
cmp
in
inc
dec
mov
stc
dec
xor
fs
mov
jmp
cmp
and
arpl
adc
sub
into
adc
cwde
sar
sub
push
inc
push
adc
jmp
enter
push
inc
fmul
xchg
fsub
and
push
fs
stc
sub
enter
mov
cli
pop
out
call
std
cmp
inc
and
inc
cmp
pop
or
movs
jecxz
cmp
xor
aas
imul
sbb
fnstsw
scas
mov
inc
mov
mov
jns
and
test
rol
add
xchg
xchg
ror
movs
add
lods
xchg
les
lea
aas
das
pop
lods
jecxz
sub
jne
or
pushf
push
cmp
pop
inc
push
fild
dec
lock
cmp
in
pop
push
jmp
out
jecxz
sub
mov
(bad)
xchg
sbb
cdq
test
out
in
adc
xor
cmpps
and
cmp
jmp
adc
xchg
retf
mov
loope
sbb
fidiv
pop
pushf
ret
call
int
add
pop
dec
sbb
add
mov
retf
fadd
jne
pop
fcomip
call
rcl
mov
and
jmp
mov
repz
mov
cmp
into
clc
enter
jne
in
sbb
sbb
mov
cs
jp
mov
add
cmc
fwait
add
lds
(bad)
mov
cdq
add
jle
repnz
dec
inc
in
sub
retf
mov
mov
or
test
in
mov
mov
stos
and
pop
sub
sbb
rcl
je
inc
dec
jle
test
test
xor
cmp
sub
and
test
sub
imul
add
sbb
pop
mov
scas
mov
jno
push
lds
dec
cmps
fwait
inc
stos
dec
mov
fld
add
icebp
daa
xchg
fmul
push
clc
adc
aas
out
std
int
mov
outs
stos
mov
aam
and
cmp
icebp
push
push
gs
sub
stc
mov
imul
inc
jo
xor
stos
jbe
cmp
dec
add
jmp
push
jb
outs
jo
dec
es
daa
sub
leave
sub
mov
(bad)
addr16
ins
int
cmp
ffree
ror
call
mov
jmp
pop
es
add
cmp
jp
or
jmp
repz
inc
addr16
aas
retf
inc
inc
and
ins
lahf
ja
mov
test
ds
scas
into
rcl
and
xchg
pop
mov
jnp
lods
clc
shl
test
(bad)
imul
mov
or
add
out
xlat
(bad)
push
inc
lahf
push
lods
das
int
out
push
int
fxch
rcl
(bad)
ds
dec
dec
sub
fidivr
das
jmp
xchg
push
mov
mov
sbb
sub
push
repnz
jo
push
mov
stos
xchg
int3
jl
test
leave
fbld
retf
cmp
enter
fucomp
push
sub
jle
outs
sbb
fdivp
out
cld
retf
xchg
or
pop
or
retf
push
scas
lods
adc
sub
cwde
es
movaps
sub
imul
jmp
or
into
hlt
in
leave
push
pop
js
(bad)
in
inc
jp
fwait
lds
mov
cmp
in
xchg
push
pop
mov
dec
xchg
nop
fwait
cwde
fwait
add
popf
test
stos
sbb
pop
fnstsw
test
enter
repz
mov
and
rol
data16
ret
and
cmp
dec
cmp
dec
cmp
popf
dec
call
jo
jne
ins
or
icebp
stos
xor
jmp
jl
data16
clc
lock
test
cmp
xor
and
cmp
pop
out
cli
ins
sbb
mov
sbb
enter
push
(bad)
or
call
pop
ror
add
lock
adc
adc
mov
xchg
pusha
int3
xchg
stc
push
or
pop
mov
mov
outs
pop
push
push
add
adc
jnp
mov
xchg
movs
cmp
ret
sbb
push
loop
xchg
fdivr
sub
das
out
inc
and
cmp
jae
mov
(bad)
pop
cmps
jb
(bad)
mov
jno
repnz
push
push
sbb
sti
push
cwde
xchg
int3
push
jecxz
(bad)
int
fisttp
xlat
rcr
mov
inc
mov
(bad)
cmps
test
sbb
js
mov
jp
push
inc
stos
jg
xchg
xchg
jo
cdq
ret
outs
push
(bad)
push
call
xlat
add
mov
cdq
bound
gs
or
push
xor
fistp
addr16
leave
xor
lahf
(bad)
sbb
cmps
mov
out
and
loop
push
jge
inc
mov
icebp
int3
mov
stos
test
mov
mov
pushf
mov
mov
fstp
retf
mov
xor
xor
pop
ds
in
jne
jp
xor
and
movs
int
push
xchg
cmp
push
inc
pop
fisub
mov
dec
inc
lods
mov
pop
and
clc
imul
popa
xor
mov
aaa
ret
fcom
(bad)
(bad)
inc
push
jns
gs
popa
cmp
popa
xor
and
gs
sbb
clc
jp
xchg
cmp
inc
xchg
or
iret
cwde
jae
adc
sbb
mov
push
daa
js
nop
lock
jg
jo
xchg
(bad)
in
rcl
inc
fcmovne
in
js
pop
and
out
or
dec
dec
loop
pop
sub
mov
or
imul
adc
sti
scas
jp
cdq
and
jno
ins
add
lods
int
push
fucomp
or
cs
push
add
stc
lea
(bad)
into
jne
xor
pop
sub
xchg
mov
jecxz
rcr
loope
test
sbb
jmp
jl
imul
cmp
adc
std
dec
data16
mov
outs
leave
add
add
lea
fcmovne
xlat
pushaw
push
aas
pusha
je
les
inc
adc
xchg
cmp
mov
pop
outs
sub
mov
xor
or
pop
cmp
xchg
push
mov
pusha
jns
cli
and
push
lods
cmps
jo
push
in
adc
xchg
cmp
data16
xchg
xchg
sbb
or
jnp
add
sbb
or
(bad)
iret
xchg
mov
rol
jmp
sbb
inc
xor
enter
jb
stos
jmp
addr16
xchg
cmp
out
les
mov
arpl
sbb
fst
stos
xor
leave
adc
xor
xchg
pushf
cmps
xchg
adc
and
add
ficomp
sbb
sbb
out
cmps
sbb
inc
sub
mov
out
pop
popf
dec
and
xor
pop
dec
std
call
stos
in
pop
(bad)
in
ins
inc
outs
sub
or
adc
pop
outs
and
mov
xchg
stc
adc
test
xchg
and
cmp
adc
aas
add
(bad)
(bad)
out
mov
fidiv
mov
mov
gs
push
push
loopne
add
xchg
sbb
retf
jmp
popa
imul
xchg
xchg
cmp
mov
dec
mov
test
mov
xchg
outs
cmps
(bad)
int
pop
xor
jle
adc
cmp
adc
dec
mov
in
cmc
xor
loopne
dec
ficom
shr
lods
movs
and
aad
retf
or
shl
pop
add
cmp
dec
cmps
jp
sub
mov
jno
loope
nop
popa
jb
add
xchg
dec
xor
xor
scas
cmp
xchg
pop
sbb
bound
retf
mov
les
pop
push
xchg
call
inc
xor
dec
xchg
push
fld
jbe
aad
sti
fist
retf
lahf
fisub
pop
mov
mov
xchg
mov
out
pushf
mov
mov
adc
mov
das
mov
stc
or
ret
jle
adc
imul
cmps
shr
jecxz
jge
adc
or
retf
ror
jno
xchg
out
cmp
push
inc
test
arpl
mov
movs
movs
psubq
xor
inc
sar
mov
cmc
loop
js
cmps
pop
pop
(bad)
jmp
or
xor
jae
jecxz
lahf
cmp
push
out
jp
les
or
sbb
fld
cmp
mov
test
jmp
mov
inc
mov
fstp
lods
xor
cmp
je
outs
jbe
mov
iret
inc
out
pusha
pop
push
pop
cmp
adc
clc
ss
adc
xchg
xor
out
daa
fist
inc
scas
mov
mov
jnp
push
dec
jg
mov
inc
cmc
xchg
mov
imul
push
shl
movq
jmp
mov
and
sar
ins
dec
cld
push
loopne
scas
loop
mov
gs
mov
mov
jecxz
pushf
repnz
pop
mov
dec
sbb
(bad)
ret
xlat
push
pop
test
in
push
popa
les
cmp
loopne
in
push
loopne
out
xor
clc
xchg
(bad)
jecxz
xchg
enter
xor
popf
aas
pushf
mov
mov
jmp
inc
mov
les
shl
mov
(bad)
(bad)
sar
popa
addr16
mov
(bad)
xor
mov
das
les
imul
nop
cmp
and
sub
mov
xchg
mov
mov
inc
cmp
adc
push
jnp
pop
mov
and
ror
dec
mov
push
add
mov
lods
push
cmp
or
retf
mov
pop
cmps
xchg
mov
cmc
xchg
fsub
jge
adc
out
repz
and
dec
movs
xchg
add
mov
adc
out
lock
mov
gs
push
mov
pmullw
jo
cld
scas
test
sub
cdq
fbld
ret
mov
push
daa
movs
lock
test
repz
retf
xchg
xchg
mov
xchg
lea
cmp
mov
pusha
add
pop
loop
mov
dec
push
pusha
or
and
es
jae
sahf
inc
and
mov
or
std
sbb
repnz
aas
jmp
sbb
jecxz
and
ret
jae
xor
fadd
pop
sar
cdq
ltr
xchg
call
xchg
jge
inc
sbb
mov
aad
push
fild
in
add
xchg
(bad)
mov
fbstp
ins
xchg
popa
js
dec
push
nop
gs
or
mov
or
or
or
mov
das
mov
and
(bad)
retf
es
mov
cmp
adc
and
leave
mov
or
add
xchg
retf
ins
aad
jno
retf
sub
(bad)
pop
fsubr
daa
inc
test
aas
dec
cmp
inc
ins
add
dec
fdiv
push
add
fstp
pop
or
retf
add
call
mov
mov
fild
xchg
push
or
loopne
inc
not
jmp
pop
dec
or
jae
cli
cli
pop
in
test
test
xchg
int3
jle
mov
sub
pop
mov
sbb
pop
adc
imul
and
xor
xor
mov
fisttp
in
push
clc
xchg
jl
fild
cld
add
jp
test
sbb
adc
jae
jbe
fcom
sub
repnz
xchg
sub
mov
xchg
jbe
imul
outs
inc
sub
or
out
and
push
scas
xchg
movs
jmp
hlt
pop
out
and
add
push
inc
(bad)
sub
xchg
sub
out
fs
mov
adc
(bad)
inc
mov
hlt
je
push
nop
or
stos
adc
and
xchg
xchg
inc
jne
pop
aam
pop
sub
das
in
fsubr
xchg
inc
seta
bound
out
test
in
jl
js
cmp
or
leave
jnp
dec
retf
xchg
fsubr
push
mov
mov
sbb
xchg
mov
ins
mov
cmp
sbb
je
fcmovu
jns
xor
iret
les
xor
in
in
push
and
cld
dec
call
lock
leave
mov
cmp
call
push
xchg
outs
ret
xchg
fs
(bad)
or
pushf
sbb
push
(bad)
sahf
fcmovbe
mov
pop
adc
(bad)
xchg
pop
or
mov
push
je
and
aas
inc
add
aaa
jnp
dec
lds
or
stos
mov
retf
push
xchg
push
aam
push
mov
cli
mov
retf
fnsave
cmp
test
frstor
loop
jge
loop
loop
push
mov
push
push
inc
rcr
xor
stos
inc
mov
push
mov
pop
pop
popa
mov
inc
fisttp
scas
call
(bad)
aam
cmps
inc
xchg
loopne
mov
jmp
sbb
enter
xchg
fst
mov
and
jecxz
cwde
adc
bound
xchg
inc
cmp
imul
imul
cmp
xchg
sbb
mov
data16
lea
inc
mov
mov
pusha
aaa
call
and
mov
fcmovb
data16
icebp
mov
push
add
test
adc
int3
jb
mov
jbe
push
fisub
xor
pop
jb
aad
xor
mov
or
push
gs
aam
nop
mov
sub
push
fimul
mov
retf
push
out
lods
dec
test
cmc
call
mov
xor
popf
dec
clc
cld
pop
das
jne
cmp
cmp
pusha
arpl
xchg
xor
mov
jmp
mov
xchg
jo
mov
ret
or
aad
fsub
fadd
lahf
push
(bad)
sar
test
loop
cmps
fsubp
mov
mov
(bad)
dec
nop
jmp
cmps
(bad)
cwde
(bad)
neg
ins
sar
out
sbb
push
inc
ins
pusha
loop
add
cmp
loopne
jmp
push
hlt
daa
sub
dec
adc
bound
sbb
sbb
sub
inc
mov
xor
(bad)
mov
adc
retf
sub
mov
mov
dec
jbe
int3
inc
pushf
jecxz
adc
das
int3
imul
xor
cli
add
inc
in
and
retf
(bad)
nop
ins
fiadd
inc
pop
bnd
cmp
jne
jnp
popa
push
out
inc
push
push
inc
mov
bound
mov
out
jmp
loop
stos
shr
and
xor
jle
inc
jmp
(bad)
shl
adc
push
sub
jae
aam
shr
xchg
cmp
fcom
imul
(bad)
pop
mov
jle
ins
shl
pxor
jg
mov
lea
or
ins
ins
push
loop
loopne
pop
popf
xor
xor
push
fistp
sub
loope
sub
push
mov
fimul
int3
push
cmp
sbb
cmp
mov
sbb
mov
call
and
leave
bound
dec
jno
add
outs
lahf
cmp
loopne
lods
je
pop
adc
jg
cdq
scas
lock
cmp
jmp
je
add
cs
xor
sub
cmc
(bad)
add
(bad)
adc
xchg
jg
(bad)
scas
or
(bad)
ja
adc
inc
movs
dec
out
hlt
adc
inc
sub
push
cld
ins
dec
xchg
xlat
or
inc
sbb
jae
in
mov
or
mov
stos
xchg
cs
ja
sbb
std
out
or
push
aad
or
ja
fmulp
inc
es
sti
dec
or
adc
jmp
xchg
fucom
(bad)
sbb
and
add
movs
loop
mov
mov
or
mov
aaa
add
dec
jle
pop
scas
mov
or
jne
xchg
xchg
aaa
sar
outs
fs
mov
arpl
adc
jo
cs
out
pusha
in
js
add
retf
mov
mov
push
scas
adc
out
xchg
jmp
sbb
in
inc
neg
int
fldcw
sub
test
mov
retf
stos
push
mov
fst
loop
ja
and
lods
cmps
lds
mov
cmp
fldenv
outs
adc
xor
shl
fisubr
retf
inc
cdq
retf
ss
inc
cli
and
jbe
pop
mov
xchg
dec
inc
js
into
sbb
xor
in
cmps
out
mov
and
fmul
retf
js
call
cmp
mov
imul
sbb
or
pushf
push
(bad)
call
aaa
jle
int
repz
push
xchg
xor
dec
jb
addr16
pushf
xchg
add
push
cwde
test
pop
rol
push
jmp
sub
adc
mov
jns
sar
cmc
shr
mov
stc
test
cli
iret
mov
jg
mov
popf
jecxz
test
inc
jns
adc
in
pop
ret
push
jecxz
repz
ret
outs
mov
dec
inc
add
sub
mov
mov
imul
out
enter
jo
ret
inc
adc
popa
xor
aas
shr
jecxz
(bad)
jge
aad
and
jg
sbb
cmps
stos
push
inc
push
out
lods
cmps
dec
sbb
cmp
(bad)
inc
adc
add
cmp
dec
sbb
cld
iret
aas
fwait
das
(bad)
xchg
jle
out
mov
cmp
cmps
pop
fs
int3
push
sbb
fild
imul
and
jp
and
clc
enter
gs
fdiv
loop
pop
out
mov
outs
sbb
push
push
dec
cdq
jl
add
and
inc
sub
fisttp
clc
cld
stos
sub
ds
push
js
aad
pop
test
xchg
cdq
mov
push
aaa
jns
add
into
icebp
pop
jmp
sti
mov
popa
xor
mov
dec
mov
xor
fiadd
jge
mov
sti
aam
pop
jl
repz
sub
test
cmps
mov
repz
push
imul
ret
rol
(bad)
js
pop
mov
jnp
fs
sbb
mov
mov
fstp
int
lea
jecxz
mov
pop
(bad)
sbb
es
dec
xchg
fisubr
push
pop
mov
inc
dec
int3
(bad)
(bad)
jne
xlat
xor
pop
add
sub
pop
int3
mov
fisubr
in
dec
push
mov
push
mov
pop
daa
fld
mov
add
lahf
jp
stos
pop
dec
jp
pop
dec
or
pop
push
or
xor
ror
pop
mov
retf
mov
fbld
ins
inc
and
xchg
adc
loopne
cmps
in
lahf
inc
les
jmp
sub
jbe
and
retf
mov
xchg
imul
pop
sub
cmp
inc
fld
adc
mov
arpl
jae
inc
push
dec
cmp
int3
int3
shr
jg
lods
in
loopne
push
std
outs
stos
ins
outs
arpl
popf
xor
add
and
scas
mov
sub
fwait
inc
jle
adc
inc
nop
mov
xor
arpl
mov
pop
ins
mov
cmp
jl
(bad)
jns
xlat
push
repnz
mov
mov
sar
jbe
fidiv
out
retf
xor
rcl
sbb
xchg
cs
pop
hlt
adc
clc
in
sbb
sbb
daa
jmp
outs
int
scas
or
daa
lahf
js
or
dec
push
mov
aad
mov
xchg
je
rol
or
push
jmp
adc
mov
mov
addr16
pop
jae
cmp
stos
adc
xchg
push
call
mov
leave
add
fistp
inc
push
mov
cmp
js
ror
(bad)
rcl
fidiv
mov
cmc
(bad)
xor
or
sub
and
xchg
loope
ret
push
retf
adc
fs
stos
or
and
ret
out
mov
sub
xor
jbe
aam
jmp
cmp
sbb
sar
ja
sbb
dec
mov
loope
mov
push
cmp
lahf
enter
repnz
xor
pop
mov
add
add
lock
xor
movs
xchg
dec
add
mov
dec
xor
push
(bad)
cld
push
out
pop
adc
push
adc
mov
jg
imul
xor
mov
fild
inc
mov
push
repnz
cmp
pushf
je
adc
test
ror
outs
push
int3
dec
cdq
fwait
or
dec
adc
jmp
inc
ds
xlat
pop
adc
and
jne
dec
xor
inc
arpl
inc
mov
xor
jecxz
icebp
jl
cmps
iret
jmp
mov
push
pop
mov
imul
adc
call
fwait
xchg
jg
movs
inc
sub
xchg
scas
add
sub
fmul
mov
daa
adc
push
cmp
mov
repnz
push
mov
(bad)
xchg
add
push
adc
bound
retf
cs
push
imul
jne
pop
aam
ror
mov
add
jo
and
jle
cmp
pop
xchg
cmp
fidivr
sub
in
jle
retf
cmp
adc
sub
clc
pop
in
test
cdq
sub
bound
mov
jb
cs
in
push
dec
cmp
in
add
and
xor
retf
adc
mov
in
test
fild
verr
pop
es
cmp
in
and
iret
out
pop
and
shl
fs
ins
cmps
repnz
cmp
jecxz
jae
sbb
pop
aaa
xchg
mov
hlt
clc
fwait
mov
call
dec
pop
pop
mov
out
mov
jo
cmp
dec
sbb
mov
jmp
and
and
sub
push
iret
ins
stos
inc
jmp
ret
test
xor
xor
jge
and
jmp
push
mov
inc
dec
jecxz
sbb
jb
jge
mov
lahf
or
or
ja
xor
scas
inc
mov
sbb
mov
xchg
mov
mov
jbe
out
shl
fwait
lds
(bad)
dec
sbb
inc
push
aam
or
imul
pop
fdiv
int3
push
(bad)
mov
hlt
fwait
adc
je
jns
xor
fidivr
and
(bad)
popf
ss
xchg
ds
inc
sbb
mov
xchg
call
sbb
(bad)
pop
movs
and
js
push
test
sti
pop
jl
push
icebp
aas
and
xchg
std
xchg
scas
push
rcr
adc
mov
inc
push
dec
mov
lahf
ja
pusha
dec
sbb
pop
mov
shr
pop
inc
push
cld
jmp
popf
pop
pop
mov
or
cmp
add
out
jmp
adc
xor
ret
cmp
adc
dec
bswap
jle
push
mov
push
dec
mov
xchg
push
and
jg
sbb
and
mov
mov
movs
dec
aad
retf
push
jmp
mov
ficomp
xchg
je
in
test
push
jmp
scas
pusha
jne
pop
jb
scas
push
sub
push
dec
add
cdq
cmp
pop
mov
mov
mov
test
and
shr
sbb
movs
dec
or
scas
sahf
pop
xor
stos
fwait
bound
mov
stc
pop
sub
pop
pop
sub
std
test
sub
repz
(bad)
adc
repz
frstpm(287
mov
lods
or
es
(bad)
xor
cmp
inc
lock
mov
xor
loope
fs
jg
cdq
popf
int
pop
dec
or
outs
rcr
data16
and
ds
movs
cmp
orps
sbb
inc
mov
in
int3
loopne
xchg
adc
or
inc
in
inc
lock
push
jns
out
jecxz
or
push
clc
sub
in
aam
mov
or
jo
test
sub
mov
arpl
icebp
sahf
sti
add
ret
adc
mov
js
pop
pop
icebp
jns
sbb
add
xchg
jo
(bad)
push
sbb
adc
and
cli
lods
mov
mov
repz
data16
mov
loopne
mov
lahf
scas
popa
mov
aas
test
jg
dec
jg
retf
pop
dec
mov
cmp
movs
stos
aam
mov
cmc
push
sbb
sub
jmp
mov
imul
bound
and
xor
jb
and
pop
lock
jg
cmp
repz
fst
sbb
leave
lds
in
xchg
inc
sar
jg
mov
outs
and
push
or
mov
xchg
fcmovb
out
xor
sub
iret
nop
fld
push
shl
add
cmp
cmps
jae
mov
loope
fsub
int
mov
lds
test
gs
cld
sbb
cmps
(bad)
in
mov
sub
jb
ficom
fimul
dec
and
dec
xor
add
int
das
mov
or
push
lea
int3
jae
jge
mov
cld
outs
arpl
dec
setb
push
ins
call
xchg
shl
daa
ret
jo
dec
sbb
in
retf
add
adc
hlt
test
stos
push
(bad)
fmulp
outs
jecxz
inc
xchg
mov
enter
stos
sub
out
jo
push
(bad)
in
lods
sub
and
loope
pop
test
sub
push
packuswb
loopne
jge
xchg
lahf
mov
push
jbe
retf
mov
push
mov
mov
mov
dec
cmp
daa
(bad)
mov
ret
arpl
dec
(bad)
jmp
ficom
pop
lahf
and
jmp
inc
mov
pushf
fsubr
sub
in
out
add
inc
test
mov
out
add
sbb
int
xchg
add
or
sbb
in
test
dec
pop
inc
test
mov
pop
mov
gs
stos
mov
jns
jecxz
lods
jmp
pop
loope
call
lahf
mov
cmp
jmp
mov
aaa
jmp
or
les
pop
cld
sub
or
pop
ret
nop
stos
fadd
loopne
sbb
das
adc
and
sbb
ret
cld
push
jnp
xchg
ret
ins
push
and
out
mov
xchg
mov
(bad)
push
(bad)
std
sub
add
lods
push
int3
or
jbe
lea
or
mov
dec
push
repnz
lea
and
fdivr
cmp
cmp
inc
adc
rol
loope
mov
ret
jp
jo
mov
mov
sbb
pop
or
les
cs
pop
xchg
repnz
sub
ins
rcl
cs
pop
stos
dec
cld
or
xor
push
inc
test
cld
ret
inc
push
ds
jle
nop
lods
push
movs
or
push
jecxz
in
jne
lds
div
mov
mov
inc
xor
xchg
out
sti
sbb
enter
stc
adc
les
cwde
sbb
push
pop
js
shr
ret
and
fisttp
pop
pop
push
(bad)
out
fldcw
mov
in
enter
and
push
pop
cwde
dec
mov
pop
popa
pop
mov
fist
imul
bound
cmps
fnstsw
fstp
or
or
jbe
aam
dec
cmc
js
sbb
cdq
mov
dec
jg
mov
call
pusha
bound
in
out
in
pop
mov
test
push
in
sub
cmp
repnz
arpl
mov
mov
mov
mov
push
jne
in
and
jo
pop
sub
outs
sub
jns
bound
ds
xor
xlat
enter
adc
jp
dec
pop
ret
mov
fcom
push
int
arpl
mov
cwde
loop
pop
mov
aas
sub
(bad)
int
pop
add
adc
ins
sar
jae
pop
mov
adc
mov
je
out
popa
outs
popf
sub
jnp
hlt
inc
xchg
push
test
rol
add
cmps
adc
jmp
nop
adc
fwait
call
sbb
pushf
pop
mov
into
mov
mov
adc
mov
leave
(bad)
js
pushf
adc
out
push
add
and
push
cmp
aaa
popf
ins
fxam
xor
out
pop
fdivr
mov
ss
pusha
sub
adc
(bad)
inc
add
rcr
push
(bad)
lea
hlt
fisub
or
xchg
repnz
fs
es
jns
xchg
mov
or
and
inc
out
sahf
sbb
lods
ror
push
mov
jecxz
bound
imul
gs
push
fist
lds
scas
retf
push
in
xchg
mov
push
dec
push
dec
adc
add
(bad)
shl
dec
stos
pop
mov
push
(bad)
loope
or
sahf
out
or
xchg
ror
push
in
jl
outs
push
pop
jle
push
repnz
sub
cmp
(bad)
jl
pop
cwde
xor
aad
sbb
loopne
popa
jmp
pop
clc
xchg
not
int3
cld
stos
gs
inc
popf
sub
sbb
mov
push
fbld
fisubr
sar
add
(bad)
mov
mov
mov
shl
icebp
fwait
inc
add
loope
xor
cmp
into
or
lods
mov
sub
adc
mov
jge
xchg
cmp
jo
(bad)
ja
mov
aaa
jne
test
sub
sbb
and
push
sub
or
rcr
jmp
rol
fistp
je
jno
cld
push
imul
or
hlt
retf
loopne
mov
nop
outs
movs
iret
sub
and
jb
jae
jg
repnz
inc
and
arpl
or
aad
ss
sub
push
jg
stos
mov
jl
jl
std
cmc
fnstcw
shl
out
int
sub
cmps
adc
popf
jb
jb
push
xchg
adc
xlat
icebp
adc
push
pop
imul
cmp
jbe
cmp
xchg
in
jmp
cmp
std
mov
xor
and
paddw
sub
cmp
out
cmps
push
mov
lea
pusha
addr16
jl
mov
sbb
cs
cmp
pop
sbb
cmp
jb
popa
or
retf
mov
je
jnp
loop
test
nop
data16
outs
fdivr
aaa
xchg
adc
jl
call
jne
std
mov
lock
js
loope
xlat
fwait
test
xchg
test
popa
mov
ss
in
or
dec
pop
sti
je
and
mov
cmp
dec
test
pop
int
jo
adc
jl
les
movs
ret
mov
push
sub
fdiv
mov
scas
int3
icebp
retf
lock
mov
xchg
pusha
dec
inc
ins
aas
mov
xchg
mov
bnd
hlt
out
pushf
and
pop
add
dec
es
jmp
retf
mov
xor
je
stos
leave
inc
ror
mov
or
or
jg
test
in
aaa
aas
rol
mov
mov
lahf
xchg
into
mov
dec
retf
lds
inc
ret
in
sub
jmp
mov
out
xor
(bad)
mov
pusha
jbe
repz
push
mov
ja
retf
mov
jb
aas
out
scas
adc
pushf
lahf
push
loopne
sbb
xor
mov
retf
mov
and
cmps
mov
fiadd
cli
clc
lahf
stos
mov
(bad)
lock
add
add
rol
mov
jbe
lahf
in
cdq
sbb
fwait
push
mov
movs
xlat
out
sbb
cmc
mov
in
loopne
(bad)
sub
xor
jnp
lds
dec
popa
or
(bad)
fs
lock
ja
cmp
int3
pushf
cdq
(bad)
mov
push
out
into
mov
push
add
(bad)
loopne
jmp
mov
inc
mov
mov
pop
and
jbe
push
cmp
jb
inc
mov
cs
dec
mov
xchg
adc
in
adc
sub
or
retf
push
cwde
rcr
jo
cmc
inc
test
xchg
mov
nop
lock
ret
cmp
int
cmp
mov
arpl
push
rep
les
bound
mov
add
mov
fmul
adc
into
cdq
jae
push
mov
imul
mov
icebp
or
push
data16
rcl
cdq
popf
sub
pop
xchg
sub
push
out
sti
pusha
fs
stos
lods
fldenv
lock
pop
in
jbe
adc
mov
xor
sahf
mov
inc
call
mov
lahf
loope
push
cwde
popf
je
out
icebp
sub
stc
ja
(bad)
scas
jg
adc
inc
(bad)
mov
push
outs
add
in
pop
add
icebp
fadd
and
xlat
cmp
ficomp
and
cmps
das
out
adc
bt
rol
imul
mov
mov
loopne
sahf
add
jmp
cdq
loop
mov
mov
push
(bad)
mov
xchg
ins
sti
mov
sar
add
mov
jmp
ficom
test
xor
xchg
mov
mov
sbb
out
sti
inc
in
sbb
retf
sub
pop
adc
in
or
mov
sbb
xchg
xchg
and
pop
arpl
lods
adc
addr16
jae
jb
dec
lahf
inc
in
mov
cs
dec
cmp
mov
out
push
cmp
and
out
inc
mov
(bad)
fisub
ins
add
inc
xor
mov
pop
cmp
xor
sub
es
mov
pop
je
ins
stos
lds
pop
push
jnp
std
popf
xor
xor
call
xchg
mov
mov
mov
sub
loopne
inc
aam
loop
pusha
je
pop
jne
int3
ror
sar
or
pop
cmp
ja
out
cdq
arpl
ss
adc
jno
inc
pusha
and
ins
int3
mov
and
fistp
out
retf
mov
jmp
loop
movs
mov
mov
jo
add
xchg
xchg
sub
adc
and
pop
cmp
sub
retf
cmps
mov
call
stos
in
jmp
sub
leave
push
movs
dec
dec
jmp
push
dec
outs
lods
test
pop
adc
dec
ins
cwde
adc
pop
sub
sbb
inc
fnsave
mov
add
dec
rcl
jae
mov
adc
outs
mov
ficom
pop
sahf
cmp
sub
push
cmp
cli
nop
push
outs
fiadd
sub
mov
jns
aas
stos
jne
es
cli
(bad)
sahf
xor
test
or
pushf
arpl
lock
enter
mov
cmp
cmp
mov
shl
mov
fidiv
xor
cwde
mov
push
inc
in
push
cmp
into
pop
aas
push
cmp
call
int
or
les
test
adc
mov
xor
mov
dec
or
dec
fxch
retf
pop
pop
and
pop
shl
lods
jne
cmc
clc
sub
or
dec
ror
mov
dec
js
mov
jp
nop
(bad)
cmps
ds
xor
xchg
jg
pop
jno
or
sbb
sbb
mov
movs
or
sbb
mov
or
inc
not
fcom
leave
pop
(bad)
cmp
xchg
xchg
or
enter
xor
dec
jmp
inc
xchg
addr16
or
mov
pop
or
ret
add
adc
cmps
repz
rcr
mov
std
jmp
addr16
or
dec
gs
les
xchg
pushf
cmp
jmp
push
jo
arpl
ins
lds
popa
mov
je
sub
aas
cmps
pop
out
push
sbb
cli
xchg
in
mov
out
push
lods
rcl
shl
std
xor
and
or
adc
adc
sub
sti
inc
bound
push
jbe
retf
jle
push
cs
adc
mov
pop
and
stos
jno
in
arpl
cmps
adc
jo
lods
dec
xor
stc
dec
inc
and
inc
aam
das
ja
shl
ror
push
push
pop
jae
push
jns
pop
outs
mov
dec
xor
mov
jle
leave
inc
push
test
arpl
or
cdq
mov
mov
fisttp
mov
mov
adc
xor
cmp
sub
push
push
dec
mov
mov
lock
pop
or
xor
cmp
pop
sbb
sbb
call
jmp
mov
pop
sub
mov
(bad)
cmp
dec
pop
sub
push
xor
jne
pop
fbstp
mov
add
xchg
push
mov
in
int
(bad)
xor
sub
mov
dec
sahf
das
dec
pushf
cmp
or
mov
loop
mov
and
sbb
mov
push
fsub
out
aaa
repz
gs
icebp
or
pop
loop
push
xlat
std
out
ins
cmp
fmul
scas
fdiv
xchg
mov
mov
nop
mov
addr16
dec
or
inc
mov
jg
outs
sub
jae
lahf
xor
mov
in
push
inc
push
in
call
imul
inc
call
(bad)
push
cmp
xchg
lods
shl
sbb
ficomp
adc
mov
and
dec
add
mov
xchg
sbb
pop
lahf
sti
daa
clc
das
jl
sbb
or
loope
sub
add
jl
jg
mov
(bad)
push
repnz
mov
sub
or
mov
mov
retf
scas
pop
xchg
jnp
mov
sahf
(bad)
push
sbb
adc
push
xor
cmp
into
in
stos
mov
mov
xchg
aad
pop
ins
cs
sub
push
(bad)
adc
rcl
cmps
ret
sub
stos
xor
mov
fistp
mov
inc
gs
inc
hlt
lahf
cld
shl
adc
addr16
cdq
pop
lock
xlat
arpl
dec
or
cmp
fimul
jecxz
push
int3
mov
test
jmp
jg
(bad)
xor
call
fisttp
xchg
jo
ret
call
cmc
stos
dec
movs
out
icebp
sub
pop
mov
fcom
push
push
push
repz
sbb
xchg
push
jg
and
xchg
dec
popa
xchg
or
pusha
pop
bound
mov
fimul
xchg
loopne
dec
cwde
push
push
and
or
sahf
scas
lock
fwait
jns
stos
stos
dec
or
cmp
mov
cmp
mov
gs
mov
movs
jecxz
or
repz
pop
mov
or
vpaddw
mov
dec
mov
push
jmp
jmp
std
xor
cdq
sbb
pop
fld
pop
aaa
out
mov
lds
(bad)
retf
retf
test
popa
cld
push
jg
cmp
arpl
mov
xor
sahf
xchg
lahf
(bad)
stc
gs
iret
fld
xchg
ror
pop
dec
pop
sbb
shr
cmp
adc
sbb
xchg
icebp
ds
pop
(bad)
cmc
scas
mov
dec
inc
inc
jno
and
test
outs
mov
les
push
and
inc
movs
jp
inc
pop
fisubr
sbb
iret
popaw
mov
iret
inc
sti
adc
in
test
into
data16
bound
bound
pop
lds
xor
add
ds
and
lods
adc
sub
sub
in
mov
rcl
or
daa
mov
xlat
mov
aad
cs
(bad)
xchg
jecxz
mov
in
pop
aas
mov
mov
push
sub
enter
out
jecxz
outs
movs
pusha
add
push
sti
cmps
cmps
(bad)
xchg
xor
mov
lock
mov
xor
mov
add
stc
pop
mov
cmps
mov
jg
outs
xor
test
fild
je
add
(bad)
aaa
mov
sub
(bad)
movs
je
dec
cmp
bound
iret
hlt
ror
hlt
in
xor
pop
mov
or
sar
sub
popa
pop
mov
sbb
xchg
popa
popf
scas
retf
sbb
ror
cmp
fcmove
push
(bad)
or
call
std
jne
scas
mov
lds
fidivr
xor
dec
pop
dec
xchg
pop
pop
(bad)
daa
xor
(bad)
pop
dec
fistp
jecxz
or
sbb
cmp
mov
and
push
test
dec
retf
adc
dec
pop
mov
les
push
lock
fsubr
fild
retf
ds
fcom
sbb
scas
adc
xor
jmp
daa
pop
jmp
lea
sub
sub
loopne
in
push
pop
shl
add
stos
pushf
mov
es
mov
xchg
out
or
add
int
mov
xchg
stos
jbe
into
inc
sahf
mov
xchg
(bad)
js
mov
retf
outs
xor
cmp
je
(bad)
pusha
adc
push
mov
cmp
jg
jmp
fs
aad
mov
retf
inc
cli
ret
and
push
jge
popf
aaa
movs
push
jbe
jae
arpl
mov
mov
loopne
pop
inc
jmp
dec
adc
jle
fld
scas
imul
test
xchg
adc
add
aaa
mov
ret
cmps
mov
jg
arpl
xchg
cmp
mov
cs
mov
jne
arpl
push
cdq
ins
std
std
xor
leave
sbb
mov
jnp
xchg
cli
mov
stos
mov
mov
test
dec
xchg
(bad)
in
cs
arpl
mov
addr16
and
shr
div
lahf
std
adc
xor
fnsave
popa
ins
mov
xor
(bad)
mov
ins
fst
mov
mov
push
xor
mov
add
push
and
sbb
sub
mov
cmps
xor
and
arpl
aad
sbb
jb
push
inc
pop
mov
popa
jmp
call
adc
retf
test
dec
ss
fucom
fidiv
xor
(bad)
sahf
dec
clc
shl
jne
push
mov
scas
mov
xor
nop
iret
xchg
iret
ss
iret
sbb
push
jecxz
test
dec
test
jmp
lds
mov
lods
pop
jecxz
pop
adc
das
retf
sbb
cmps
ror
ins
cmps
nop
lds
sub
into
rcl
lds
test
(bad)
or
dec
lods
popa
pop
cmp
popf
and
xchg
or
push
add
cmp
xchg
dec
adc
enter
mov
push
jae
add
cmc
clc
movq
out
arpl
iret
outs
xor
outs
mov
lea
mov
xchg
dec
bound
mov
xchg
push
sub
mov
or
addr16
push
xchg
push
aas
push
es
cmp
scas
adc
push
out
mov
enter
push
enter
pop
jge
jae
xor
out
lahf
add
pop
jne
or
mov
dec
outs
scas
popf
ret
ins
cmp
push
xor
stc
in
cmp
xchg
pusha
arpl
sub
push
fisttp
pop
test
fisubr
add
pop
jne
jae
push
cmps
mov
sub
xor
cmp
mov
mov
test
aas
daa
dec
into
and
xchg
mov
inc
fidiv
retf
add
(bad)
add
(bad)
add
repnz
enter
inc
dec
sub
mov
cmp
fsubr
inc
outs
fadd
shl
call
(bad)
xor
inc
or
inc
out
adc
xor
push
cmp
mov
jmp
and
dec
dec
add
imul
fnsave
ret
movs
jmp
(bad)
cmps
jmp
subps
out
push
lahf
pop
fstp
stos
cdq
sub
jae
das
xchg
cmp
push
out
pop
ds
mov
xor
and
adc
mov
lods
aad
add
adc
ds
mov
in
xchg
and
(bad)
leave
dec
clc
fidiv
pop
les
dec
add
movs
out
ret
pop
mov
dec
pusha
add
pop
scas
(bad)
mov
dec
xlat
cmp
mov
in
loopne
es
mov
add
fcom
ficomp
or
push
mov
cmp
outs
js
in
mov
sub
adc
sub
lods
lods
and
sub
ins
mov
or
push
in
jae
or
xlat
cmp
sub
es
mov
cmp
les
fs
cmp
mov
jne
xchg
in
aas
xor
cli
or
pop
add
sub
retf
push
loope
pop
stc
xchg
ins
add
mov
pop
movs
sub
aad
(bad)
out
jb
sub
push
rol
addr16
neg
sahf
rcr
aam
xchg
mov
pop
pop
jae
aad
or
mov
in
ret
retf
pusha
mov
test
cmp
mov
xchg
sub
nop
and
cmp
add
or
and
push
loopne
cmp
pop
imul
mov
mov
cmp
pop
movs
les
and
sub
xor
lock
add
xchg
jns
lahf
adc
jmp
mov
or
fs
not
addr16
pop
jle
pushf
out
inc
mov
jecxz
mov
int
xchg
test
(bad)
cmps
mov
mov
leave
loope
aad
(bad)
xchg
cmp
xor
pushf
hlt
sub
outs
imul
js
dec
mov
scas
cmps
gs
add
push
add
jae
fld
clc
sbb
or
mov
pop
cmp
inc
mov
xchg
test
jmp
sbb
arpl
mov
ror
jl
push
lds
mov
dec
imul
pop
(bad)
fs
ja
adc
xor
inc
jl
out
inc
xlat
push
xor
repz
ret
test
repz
push
pop
fnsave
sub
scas
xor
push
mov
sub
inc
scas
std
lea
cmp
test
sbb
sahf
and
in
inc
icebp
and
std
(bad)
mov
test
sub
jno
out
jmp
cmp
ja
mov
push
in
into
push
sub
inc
dec
call
test
mov
pop
dec
mov
sbb
addr16
mov
or
xchg
mov
arpl
sti
push
fldenv
leave
mov
dec
jne
inc
test
push
xchg
movs
rol
(bad)
aam
ret
push
jmp
sbb
test
jno
or
jbe
sub
pop
retf
fincstp
test
xor
test
sbb
ret
and
add
sti
sbb
lahf
pop
sub
aad
retf
fiadd
mov
ins
test
push
add
mov
out
dec
cld
pop
lahf
push
fld
out
xlat
shl
gs
xchg
mov
xor
or
inc
jg
stos
pop
ins
or
sbb
inc
xlat
inc
mov
test
outs
repnz
jno
test
add
aaa
outs
lahf
jp
adc
(bad)
sahf
push
push
add
xor
in
mov
in
inc
stos
scas
sti
pop
jge
inc
inc
sti
add
out
rcl
fild
inc
test
mov
out
jns
inc
pop
mov
push
pop
fstp
xor
cmps
movs
jecxz
add
or
xchg
test
pushf
call
lds
aad
gs
repnz
mov
(bad)
mov
and
push
fistp
add
add
test
xchg
and
arpl
mov
ret
ret
icebp
dec
in
std
fwait
mov
stos
shl
daa
sub
mov
jnp
jp
jge
xchg
ret
pop
cmc
mov
dec
push
pop
mov
sub
mov
aad
pop
mov
fdivr
lods
push
into
nop
out
pusha
pushf
xchg
jb
(bad)
or
leave
push
in
or
call
shl
and
xchg
and
(bad)
cmps
dec
mov
push
shl
push
mov
add
mov
bswap
mov
mov
push
fdiv
jp
cmc
or
outs
xchg
call
sbb
call
hlt
iret
in
rcr
push
mov
hlt
cmp
inc
add
jle
mov
scas
xor
ds
or
inc
and
and
cmp
popf
xor
mov
xchg
(bad)
sub
jns
dec
cmp
ficomp
imul
int3
in
pusha
std
fisttp
inc
add
(bad)
fisub
dec
adc
(bad)
loope
aaa
(bad)
stos
cmp
push
out
and
push
or
xor
adc
lods
jo
inc
fbld
dec
pusha
mov
shl
push
and
scas
(bad)
fistp
add
aad
mov
ss
mov
stc
fs
shl
mov
(bad)
jp
pop
jo
mov
daa
aaa
(bad)
mov
jp
js
push
(bad)
fdivr
adc
imul
adc
adc
fisttp
ss
jmp
and
mov
loopne
inc
fisubr
hlt
out
pusha
xor
add
lods
xchg
mov
test
ja
pcmpgtd
(bad)
bound
(bad)
in
and
shl
sub
test
pop
xchg
sti
xor
cmp
sti
mov
(bad)
loop
or
dec
dec
xor
shl
in
xor
sbb
push
adc
push
pusha
xor
ret
fcom
jo
inc
jnp
scas
stos
enter
dec
jmp
add
adc
test
fiadd
pop
in
imul
inc
xchg
add
test
cmp
scas
out
inc
(bad)
cmp
mov
xor
in
stc
cdq
leave
sub
in
add
push
mov
retf
mov
pop
inc
out
addr16
fist
mov
push
adc
sbb
mov
pop
(bad)
cmp
or
jbe
and
popf
dec
stos
lods
or
hlt
test
mov
cmp
cmp
test
xchg
jae
jno
add
pop
adc
or
sbb
xchg
out
loope
pop
xlat
in
into
in
push
pop
sub
(bad)
sub
fcom
or
inc
sbb
push
xor
push
test
leave
mov
hlt
cmp
mov
inc
pop
pushw
mov
js
push
dec
dec
mov
mov
in
pushf
retf
push
fwait
mov
jmp
sub
xchg
xor
xor
sub
xchg
sahf
push
mov
in
aad
cli
inc
mul
xchg
xchg
fcomp
(bad)
cli
cli
fsub
adc
mov
lahf
mov
jl
sub
inc
sti
jmp
jno
push
mov
adc
aam
pop
or
mov
aam
scas
adc
sbb
call
shr
inc
cdq
add
mov
and
mov
repz
cmps
in
in
rcl
test
nop
lds
(bad)
imul
jge
mov
push
jecxz
dec
int
mov
dec
std
inc
ss
xor
das
mov
addr16
adc
sub
retf
enter
test
cmps
outs
xchg
adc
pop
es
jp
jmp
repnz
out
fyl2xp1
cmp
cli
ja
inc
mov
xchg
retf
pop
mov
es
mov
add
inc
pop
movs
inc
and
bound
lds
lods
jb
jmp
(bad)
pop
fldcw
das
jle
dec
mov
repz
(bad)
sbb
sub
jae
jmp
adc
inc
test
xchg
push
fsub
adc
aad
cmp
xchg
pop
push
mov
push
xchg
inc
das
cs
out
int
mov
dec
daa
push
inc
rcl
hlt
mov
push
mov
adc
retf
mov
int
je
sbb
out
inc
sbb
rol
in
inc
sti
jmp
shl
ins
jge
or
retf
adc
xchg
jbe
cmp
ret
test
xlat
arpl
add
loop
lea
sbb
mov
outs
test
sub
mov
in
push
jns
xchg
pop
mov
add
mov
pop
lock
retf
dec
inc
adc
movs
mov
push
fdiv
cdq
or
imul
(bad)
or
push
or
dec
ins
adc
int3
ja
add
(bad)
pushw
scas
xchg
test
jp
test
ds
in
cmp
aad
fidivr
sti
add
pop
inc
int
add
sbb
xchg
xor
inc
in
lods
jge
(bad)
aaa
cwde
addr16
jecxz
icebp
jb
mov
adc
mov
push
(bad)
out
loope
mov
sub
rol
pop
push
or
mov
bound
int
or
mov
add
and
aad
ret
ins
rcl
cmp
retf
add
cs
ror
inc
or
movs
daa
not
out
push
cmp
data16
ss
or
iret
push
jecxz
xacquire
mov
sahf
push
mov
cmp
scas
aas
add
aam
pusha
pop
xchg
sbb
mov
lods
xchg
fs
pop
shr
or
mov
loope
das
test
fild
pop
fcmovne
jge
inc
mov
push
in
and
fst
mov
mov
lds
push
sub
test
sub
stos
adc
es
push
test
xchg
push
(bad)
cmps
mov
std
cmp
add
mov
sbb
sbb
pop
(bad)
cdq
xchg
xchg
repnz
sbb
aam
xchg
pop
jl
call
or
mov
stos
ins
dec
fs
(bad)
mov
xchg
popf
loope
dec
pop
or
mov
stos
or
int3
jp
hlt
and
movs
mov
into
ins
out
mov
pop
clc
cdq
iret
push
xchg
or
add
sbb
test
lock
mov
(bad)
pushf
and
push
addr16
jne
sbb
cmp
out
jmp
xor
inc
xchg
inc
ja
and
fild
ja
inc
inc
mov
(bad)
shl
add
pushf
in
and
xchg
mov
shl
fsub
push
(bad)
sbb
jnp
lock
add
retf
mov
jbe
inc
mov
inc
xlat
inc
jp
(bad)
mul
sub
mov
jmp
add
cmp
xchg
lock
push
call
pop
loopne
sub
scas
inc
outs
jle
test
fmul
test
jb
adc
mov
mov
(bad)
sub
push
push
adc
outs
mov
cmps
adc
outs
mov
push
leave
sub
add
ror
mov
data16
ror
push
aad
pop
imul
sub
pop
cmp
xor
out
dec
pop
dec
add
sbb
xor
cwde
xor
or
cmc
jns
and
push
pop
mov
mov
jle
cmp
xchg
les
ss
lods
mov
int3
in
sub
push
pop
jg
dec
cmp
pusha
push
stos
sti
sbb
dec
jns
and
scas
jp
pop
jg
sub
sub
and
jae
ds
xor
jg
das
inc
cwde
aad
pop
or
inc
aaa
push
idiv
in
js
cmp
add
test
je
imul
in
sbb
jge
dec
mov
push
jno
dec
cmp
sub
inc
adc
ret
imul
loope
push
hlt
repz
and
fcmovbe
xchg
rcr
imul
mov
add
fldenv
loop
xchg
dec
call
adc
rcl
inc
popa
push
shr
fsub
and
dec
repz
cmps
push
sbb
shl
xchg
adc
or
xchg
lods
adc
xchg
lds
add
jnp
std
es
lock
mov
sub
xor
cwde
(bad)
mul
sbb
jmp
rol
cdq
jle
das
mov
popf
rcl
ins
pusha
push
fcomp
jne
neg
stos
lods
aas
cmps
std
ins
jl
(bad)
push
stc
repz
(bad)
mov
stos
and
jl
xlat
adc
popa
cmp
or
push
aam
xchg
aas
addr16
jo
in
aad
pop
jnp
dec
dec
scas
out
inc
mov
ja
jmp
lods
fcom
faddp
lea
jns
(bad)
mov
xor
sbb
inc
mov
adc
mov
in
mov
in
lods
cwde
cmps
test
test
dec
cs
push
neg
xchg
push
xchg
jnp
retf
mov
add
shl
outs
or
push
sbb
loope
jbe
call
enter
push
arpl
sub
jge
cmp
inc
xchg
jns
xor
ins
pop
aaa
jp
fidivr
mov
pop
mov
imul
sbb
test
pop
mov
mov
and
mov
inc
push
inc
rcl
bound
add
fimul
mov
icebp
lock
push
mov
outs
ror
dec
dec
hlt
lods
ins
mov
movs
adc
add
inc
mov
inc
aaa
retf
mov
pop
rol
cmc
mov
pusha
xchg
sub
push
movs
and
shl
xor
shr
js
sub
mov
mov
jnp
movs
push
push
retf
out
adc
iret
sahf
inc
ins
test
mov
mov
xor
adc
ins
mov
or
push
ins
xchg
ins
lods
pop
mov
sahf
out
inc
call
sar
imul
sbb
inc
mov
pop
jbe
scas
lahf
mov
jnp
rcr
xchg
pop
cs
imul
stc
and
adc
fadd
lea
and
mov
pusha
xor
leave
call
(bad)
pop
mov
or
call
ss
gs
mov
clc
inc
and
cmovp
jmp
outs
mov
sub
cmp
mov
into
int3
cmp
mov
enter
sbb
jbe
mov
adc
adc
and
test
dec
push
rol
jl
xor
or
push
add
mov
dec
ins
ins
rcl
xchg
xchg
push
test
int
pop
xor
js
pop
mov
out
outs
(bad)
cmc
mov
stos
test
inc
ret
std
mov
int3
(bad)
stos
jno
mov
out
xchg
fsub
and
and
in
sub
imul
pop
stos
add
mov
mov
mov
stos
dec
mov
mov
add
add
mov
rcl
lahf
inc
jo
jae
or
push
stos
adc
in
(bad)
jle
aam
movs
ror
imul
mov
sar
or
add
jecxz
push
scas
dec
sbb
jecxz
xchg
pop
and
sub
repnz
fs
repnz
sbb
iret
push
stc
sbb
aam
retf
stos
inc
sbb
inc
rol
les
or
je
daa
sub
movs
mov
dec
mul
test
dec
dec
add
test
nop
bound
vaddss
lods
push
and
das
inc
push
mov
popa
and
sbb
stc
pop
popf
(bad)
aad
jle
cmc
(bad)
pusha
pop
xchg
sti
push
mov
or
lods
aam
lods
daa
lods
add
aas
xor
mov
and
cmp
scas
sbb
push
xchg
fistp
xchg
mov
pop
fcmovnbe
or
das
xlat
call
xor
stos
mov
inc
ins
shl
jg
(bad)
daa
int3
nop
dec
lahf
imul
cmp
cmp
out
mov
adc
stc
push
pushf
rcr
mov
and
jge
rol
mov
sbb
clc
jnp
fs
fsub
fist
dec
cdq
lock
xor
aam
repz
retf
je
hlt
maskmovq
imul
(bad)
add
pop
xchg
push
loop
popf
jae
and
(bad)
int
fisttp
lahf
mov
mov
mov
dec
aas
pop
test
clc
lea
pop
cmp
jg
rcl
sub
call
and
imul
xchg
mov
or
(bad)
ja
pop
jno
push
cmp
int3
mov
fdivr
mov
xor
cmp
sub
inc
cmps
adc
out
and
lock
mov
push
aad
add
jecxz
dec
and
les
loop
and
jle
adc
sub
lods
sbb
xor
mov
cmp
std
jle
push
ins
cmp
cmp
or
call
outs
aam
jno
jo
rcl
mov
or
cmp
jnp
xor
rol
xchg
fwait
bound
or
aad
test
pop
(bad)
loopne
cli
dec
and
cmp
test
repz
cmp
or
(bad)
call
arpl
and
mov
mov
retf
mov
cwde
push
mov
or
test
fs
push
jne
dec
outs
mov
and
retf
addr16
push
jnp
loop
mov
rol
cmp
cmp
(bad)
cmp
das
pop
sub
into
push
sub
je
sbb
inc
test
sbb
jmp
out
pop
dec
push
xchg
push
mov
add
mov
push
adc
scas
mov
sub
xchg
(bad)
adc
push
int3
lahf
mov
lods
adc
push
ss
fisub
lahf
ret
std
adc
xor
mov
pop
dec
aad
xor
arpl
fs
loopne
es
mov
lods
int
out
sbb
into
loop
cmp
cwde
mov
imul
ins
aam
adc
jp
lock
shr
sahf
or
out
(bad)
retf
pop
imul
sbb
cld
mov
(bad)
repnz
ret
xchg
mov
lahf
sahf
(bad)
es
call
mov
fistp
rcl
and
loop
pop
cmp
and
push
sbb
sbb
sbb
into
inc
cmps
sti
add
xor
push
dec
aaa
aas
adc
sahf
shl
adc
sbb
add
or
adc
scas
cwde
and
jno
mov
outs
xor
mov
loope
xor
or
dec
and
scas
aad
sbb
stos
inc
out
jno
mov
clc
mov
pop
sub
(bad)
mov
fidivr
and
mov
frstor
les
imul
jnp
mov
lea
inc
fnclex
and
inc
and
test
or
cs
aas
jno
cld
xchg
sub
dec
mov
or
jmp
mov
adc
movs
lods
arpl
push
rcr
sbb
jecxz
daa
and
rcl
adc
and
jnp
jo
sub
pop
fstp
fdiv
fdivr
adc
fwait
xchg
cli
sub
ror
inc
pop
sbb
cld
cmps
lahf
inc
inc
shl
and
mov
adc
mov
and
mov
retf
loop
fdiv
push
mov
xchg
loop
pop
dec
push
xchg
popf
test
cmps
mov
xchg
jns
inc
std
pop
mov
(bad)
(bad)
cmp
xor
out
in
mov
int
xchg
addr16
stc
clc
inc
and
call
dec
jbe
add
pop
xchg
add
daa
adc
cdq
pop
xchg
(bad)
fld
test
dec
mov
adc
mov
xchg
ret
pop
jns
sti
or
pop
cmc
xor
repnz
in
sbb
add
stos
jmp
cmp
and
inc
add
dec
add
outs
in
add
push
ins
ins
gs
push
call
repz
and
inc
push
repnz
pop
mov
inc
jecxz
rcr
mov
es
xor
mov
ret
xor
dec
aaa
mov
jmp
retf
jl
int
jg
das
push
fwait
call
sub
aam
in
inc
outs
xor
inc
dec
out
or
in
xor
xchg
out
cmp
bound
not
pusha
ficomp
mov
(bad)
jle
jl
jb
jns
pop
push
adc
fldcw
xchg
mov
and
jo
repnz
or
daa
cmp
mov
xchg
scas
cli
shr
pushf
bound
repz
xchg
icebp
xchg
outs
std
ret
cmp
into
fst
sbb
call
pop
mov
mov
or
mov
xor
cli
out
sub
int
movs
inc
push
ret
hlt
mov
xchg
sbb
xor
mov
mov
ds
inc
movs
repnz
cmp
fist
push
retf
fwait
cli
sub
movs
sbb
jae
fnstenv
mov
pop
mov
movs
pop
xor
push
jae
xlat
add
inc
push
lea
jb
(bad)
cmp
js
dec
mov
sti
imul
or
sub
push
pushf
ret
rcr
cld
and
adc
lods
fmul
jg
cmps
(bad)
je
jle
pop
mov
mov
sbb
ret
dec
retf
jo
repnz
mov
mov
imul
aaa
xchg
or
leave
push
or
pop
ror
aad
sub
push
sahf
popa
fnstenv
test
pop
fcmovu
fild
cwde
adc
jae
call
fnstenv
push
cmp
add
es
ja
js
mov
movs
enter
pop
mov
mov
add
int3
cmp
mov
sub
movs
xchg
neg
push
loopne
mov
mov
dec
xor
sub
lods
in
aaa
jg
lods
add
pop
pop
mov
or
dec
and
out
adc
in
outs
push
or
pop
dec
cld
loopne
and
nop
xchg
leave
jmp
xchg
arpl
sbb
jmp
in
push
icebp
daa
pop
in
fadd
mov
and
push
iret
into
sbb
adc
push
int3
inc
neg
popf
(bad)
clc
mov
idiv
loop
xor
or
inc
dec
and
arpl
inc
loop
test
jns
xor
test
sub
mov
and
xor
push
pop
sbb
sbb
xchg
into
imul
(bad)
lods
dec
sbb
jo
sti
jge
sbb
adc
inc
push
mov
nop
pop
xor
lahf
mov
or
jecxz
aad
inc
sbb
mov
sub
jne
jp
sub
pop
xchg
cli
data16
shl
scas
scas
xchg
sub
outs
(bad)
push
sub
fwait
xor
jmp
add
rcl
sub
not
and
jo
out
test
aad
xor
in
sub
mov
and
jb
fisubr
popa
arpl
addps
call
sti
sub
xchg
and
mov
loopne
repnz
mov
(bad)
scas
jge
addr16
in
fdiv
retf
aam
cmc
adc
pop
pop
or
mov
xor
int3
adc
or
hlt
cwde
icebp
xor
fistp
jbe
or
jle
call
data16
inc
cdq
(bad)
data16
mov
inc
pop
or
ror
xchg
push
pusha
loop
sbb
cmc
xor
or
xchg
xchg
cmp
scas
or
or
in
mov
mov
dec
data16
dec
cdq
hlt
ja
enter
js
mov
enter
and
xor
loope
adc
std
(bad)
jmp
test
sbb
sub
xchg
cmp
fisttp
bound
jae
inc
pop
lock
pop
sub
adc
popf
mov
and
xor
out
jne
call
sahf
jg
mov
adc
pop
lahf
pop
scas
pop
mov
inc
push
sbb
(bad)
test
pushf
repz
push
sti
in
sbb
cmp
popa
in
push
ret
lods
fwait
mov
cmp
imul
cld
mov
or
inc
jmp
fdiv
jno
mov
(bad)
mov
fst
push
jl
sub
(bad)
inc
cld
pop
(bad)
out
popa
and
mov
mov
cli
int
pop
mov
pushf
out
pop
xor
ins
stos
xchg
sub
adc
jmp
in
in
jp
shl
inc
push
ja
mov
xor
fild
mov
mov
jg
(bad)
ins
mov
shl
out
cmp
mov
out
mov
mov
cli
nop
or
cmp
ins
cld
dec
add
clc
shl
dec
dec
imul
idiv
lahf
hlt
(bad)
out
push
mov
pop
daa
into
lds
xor
push
fsubr
dec
pop
xor
dec
outs
dec
sbb
ss
xor
lea
ins
push
lahf
add
gs
jae
and
aad
je
mov
jne
mov
inc
mov
ja
scas
inc
xchg
cmp
cmp
dec
aas
adc
xor
mov
mov
xor
push
and
xor
ins
dec
add
retf
dec
jno
mov
mov
mov
dec
enter
pop
xchg
movs
dec
ror
cli
jmp
and
clc
(bad)
mov
or
jmp
xchg
mov
call
mov
mov
call
imul
or
in
icebp
adc
mov
xor
sbb
cwde
cmp
xor
cli
dec
lods
imul
divps
ins
out
ins
jmp
cld
cmp
xchg
sub
mov
and
jge
push
shr
test
outs
jo
dec
repnz
neg
fldcw
popa
jnp
sahf
push
ret
mov
loop
xchg
dec
and
inc
mov
mov
int
add
hlt
xor
loopne
pop
ins
add
out
into
dec
adc
fcomp
leave
imul
cmp
movs
lods
adc
xor
adc
dec
cmp
int3
mov
cmp
cld
repnz
inc
pop
cmps
adc
test
pop
gs
aam
and
xchg
sar
mov
cs
ins
add
ret
dec
add
leave
les
fdivr
dec
mov
xchg
fcmovne
movs
push
gs
nop
sbb
scas
fcmovu
call
fst
jp
push
pusha
jmp
or
push
nop
outs
mov
add
mov
inc
mov
iret
ret
nop
or
ds
sahf
lods
icebp
jg
xor
xchg
test
mov
test
sub
int
xor
mov
push
(bad)
clc
push
mov
mov
in
cmp
pop
cmc
cwde
cdq
repz
and
mov
bound
int3
call
mov
adc
mov
test
add
jb
ret
jb
les
mov
mov
xor
push
lods
inc
cmp
xor
shl
add
popf
addr16
cmp
dec
or
(bad)
pop
ja
push
pop
mov
popa
cmc
jge
xor
test
setns
lods
xor
lds
int
mov
xchg
hlt
inc
cmp
mov
inc
and
dec
cld
xor
ret
std
add
pop
into
xchg
cwde
add
push
idiv
pop
gs
xlat
mul
cmp
rol
ins
(bad)
outs
adc
pop
stc
inc
mov
and
jno
sbb
shl
imul
sub
fimul
out
out
mov
test
sub
xchg
lahf
les
popa
movs
(bad)
daa
popf
mov
adc
loopne
icebp
rcl
imul
xor
pusha
adc
inc
iret
push
stos
mov
inc
adc
retf
sbb
iret
push
inc
add
xor
shr
fsub
push
dec
push
sub
sbb
shl
ffree
(bad)
pop
sbb
das
lods
adc
jle
xlat
repz
jb
pop
jl
popf
pushf
(bad)
and
addr16
leave
fld
jmp
dec
loop
lods
mov
cmp
leave
mov
retf
inc
mov
(bad)
dec
lds
fstp
add
adc
cld
inc
mov
hlt
rcr
sub
sub
ins
mov
and
xchg
mov
(bad)
nop
ret
(bad)
mov
hlt
sub
scas
aas
dec
xchg
mov
scas
lahf
mov
stc
fs
fcom
jb
in
jg
or
sub
sub
xchg
sbb
call
jnp
mul
ins
mov
and
mov
repz
imul
push
mov
xlat
sahf
push
cs
add
into
arpl
or
(bad)
stos
cmp
shl
loope
dec
xchg
xor
aaa
jle
aam
enter
pop
jp
fnstcw
jmp
sbb
pop
inc
push
add
pop
ret
dec
scas
mov
sti
pop
mov
sti
sbb
lahf
dec
enter
mov
pop
mov
aam
ja
mov
sbb
popa
add
mov
arpl
cmc
adc
xor
and
mov
pop
pop
xchg
jle
pop
in
jmp
rcr
cmp
mov
cli
std
xor
jo
xchg
sub
cmp
add
addr16
cmp
cmc
test
mov
pop
and
mov
jg
into
xlat
repnz
mov
fild
mov
mov
std
push
add
jmp
jge
fcmovu
mov
mov
daa
icebp
push
pop
xchg
pop
xor
aam
retf
pushf
jmp
cmp
adc
and
mov
mov
xor
fwait
out
mov
lods
sbb
es
retf
test
or
mov
and
or
sbb
jnp
mov
ins
mov
cmp
mov
in
cmp
sub
mov
adc
pop
rcr
xor
inc
lods
cmp
mov
dec
outs
inc
jo
js
push
mov
jg
call
repnz
pop
aad
adc
stc
xor
je
in
fsubr
stos
ss
push
dec
jecxz
cmp
stos
mov
stc
adc
(bad)
mov
mov
adc
ret
inc
mov
scas
cwde
mov
pop
pop
lods
and
pop
pop
xor
push
mov
add
je
ins
push
(bad)
cmp
jmp
jecxz
(bad)
adc
and
jbe
and
xor
adc
cmp
cmp
mov
push
call
loope
jl
repz
in
adc
dec
cmp
cs
rcl
inc
in
mov
std
and
pop
aaa
fwait
add
cmp
push
mov
mov
arpl
mov
mov
add
fsubrp
cmp
es
mov
jp
inc
mov
inc
in
pop
es
mov
out
mov
daa
int
retf
fnsave
xchg
imul
ins
movs
cmp
mov
loope
sub
loopne
pop
nop
retf
push
in
add
mov
dec
jne
adc
mov
(bad)
mov
jecxz
xchg
mov
lds
sbb
mov
repnz
cmp
xor
sbb
dec
add
sbb
push
inc
or
pop
push
adc
in
pop
daa
faddp
sub
pop
jg
shl
dec
call
sub
pop
cld
out
cmps
mov
(bad)
mov
push
mov
fsub
sbb
sub
std
add
mov
pop
jl
popa
mov
sub
jnp
(bad)
std
jbe
lods
retf
adc
jecxz
and
pop
mov
test
aam
xor
cli
add
mov
add
aam
aaa
std
jmp
stc
mov
jecxz
int3
in
ror
xor
xor
in
ins
and
sbb
lods
or
mov
and
pop
mov
xlat
adc
aam
xor
pop
ror
xchg
inc
cwde
sbb
sub
cmc
jb
and
pop
mov
sbb
fild
cli
add
out
fld
cmp
mov
jns
shr
pop
mov
popf
jno
cdq
lods
arpl
cmps
mov
xor
fisttp
pop
lds
or
push
and
mov
jle
inc
mov
not
daa
push
stc
rol
sbb
aam
rcl
inc
jg
xlat
loopne
into
mov
fs
xor
add
std
pcmpgtd
dec
inc
xchg
ficomp
jo
mov
(bad)
pop
mov
jne
retf
jno
ret
push
push
dec
cli
inc
sub
cwde
jle
fwait
movs
mov
push
sub
shl
aas
scas
sbb
cmp
(bad)
not
push
add
test
dec
cmp
jecxz
sub
in
add
mov
jb
call
(bad)
sbb
cmp
and
add
pop
mov
loop
mov
int3
sbb
fs
sbb
test
(bad)
fld
push
das
push
fwait
dec
or
jae
leave
dec
mov
cmp
dec
fldenv
xchg
or
in
(bad)
jge
fs
or
nop
add
inc
(bad)
test
call
jmp
push
xchg
(bad)
jge
cmp
xor
ficomp
xor
mov
jle
test
mov
int3
sbb
sbb
sahf
gs
sbb
lods
fmul
and
inc
mov
adc
mov
cmp
ror
retf
loopne
test
xor
jl
leave
inc
inc
sbb
clc
or
cmp
add
sub
jl
mov
or
add
push
push
fsubrp
mov
cdq
mov
aam
push
pop
xchg
aaa
imul
in
(bad)
add
jle
jle
adc
stc
and
ret
add
xor
dec
mov
sbb
pushf
cmp
enter
nop
jl
fisub
xchg
imul
inc
retf
std
add
xchg
fwait
pop
mov
pop
xchg
push
xor
sub
cmp
mov
dec
mov
pop
inc
xor
xor
fisub
jno
ins
mov
push
pop
lods
cmps
(bad)
cmp
pop
fcom
ret
repz
pop
mov
pop
fnsave
fmul
test
(bad)
clc
jb
imul
outs
jbe
pop
js
mov
mov
scas
add
and
stc
inc
mov
jnp
and
ds
push
call
mov
xchg
pop
test
cmp
fcmovne
dec
inc
in
call
dec
sbb
inc
shl
ss
les
dec
dec
mov
pushf
inc
cmp
xchg
cmp
out
xbegin
sub
dec
(bad)
fidivr
out
cld
jp
rol
adc
lea
cmps
ror
fst
sbb
test
das
inc
mov
mov
lds
gs
add
ds
or
leave
movs
jmp
push
mov
js
mov
scas
pop
push
push
adc
pop
cmc
rcr
out
stos
mov
push
les
or
mov
xor
in
test
inc
sbb
jl
xchg
dec
lods
in
in
lea
fld
mov
pop
pop
xchg
jns
(bad)
movs
jg
cld
push
jnp
mov
mov
mov
jle
jo
or
fs
fwait
jge
aad
retf
sbb
push
mov
pop
xchg
and
push
sub
icebp
ja
loopne
jne
int
adc
jge
loope
(bad)
jno
aam
pop
fidiv
gs
xchg
pop
test
xor
jecxz
nop
xchg
in
stc
jge
es
(bad)
pop
fs
mov
pop
cmp
sub
xchg
sbb
sbb
xor
or
or
xlat
sub
sub
(bad)
sbb
cmc
mov
repnz
jmp
es
xchg
(bad)
stc
inc
jnp
ins
icebp
test
mov
sbb
out
ds
add
pop
sub
mov
call
jae
mov
loope
push
add
pop
jmp
call
and
es
ja
shr
fwait
push
jmp
pop
ficom
ss
mov
test
cmp
arpl
adc
cmps
mov
arpl
daa
int
movs
mov
rcl
rcl
xchg
or
test
xchg
mov
xor
test
call
pop
popf
xor
and
or
and
mov
lds
push
das
mov
cmp
mov
adc
rcr
ds
outs
out
(bad)
mov
push
push
push
push
sbb
add
std
test
inc
aas
and
ins
js
arpl
aaa
xor
fld
aas
mov
jo
stc
gs
xchg
xchg
clc
sub
push
sbb
jbe
nop
(bad)
out
(bad)
sar
inc
mov
out
imul
nop
fst
lods
popa
cli
dec
inc
ficomp
sbb
push
mov
in
sbb
mov
jne
xchg
movs
xor
inc
mov
ja
scas
jne
repnz
xchg
loopne
mov
ins
push
(bad)
dec
lds
push
out
or
ins
push
jmp
mov
popf
cmp
mov
sub
xor
les
imul
pop
mov
cmps
cmp
xchg
mov
ja
lods
and
les
fxch
xchg
xor
xchg
push
sbb
(bad)
dec
sub
sub
and
pop
repz
fmul
popf
inc
jne
cmp
fcom
aas
cmp
pop
xchg
ret
push
(bad)
loope
(bad)
hlt
mov
mov
cmc
mov
movs
idiv
cld
and
out
mov
das
dec
dec
dec
add
adc
and
in
mov
arpl
xchg
ds
out
or
retf
mov
out
cs
retf
stos
(bad)
ror
and
pop
icebp
pop
jmp
pushf
adc
jp
pop
sti
sbb
shl
test
adc
int3
gs
mov
push
mov
mov
pop
cmp
sahf
cwde
imul
jbe
add
pop
jno
fldcw
dec
xchg
and
arpl
retf
sub
popf
jmp
jo
jle
adc
xchg
pop
gs
or
inc
shl
shl
popf
outs
imul
mov
test
ins
mov
mov
jecxz
daa
add
fld
push
adc
push
retf
xor
ds
push
dec
push
outs
sub
out
add
pop
neg
call
fcom
dec
cmp
outs
adc
jns
in
push
lods
add
stos
cmp
arpl
in
xchg
cmp
sbb
mov
imul
xchg
ret
(bad)
shl
xchg
cmp
adc
cmps
sub
scas
jg
js
mov
outs
mov
xor
pop
sahf
mov
or
dec
mov
mov
out
fwait
xchg
mov
outs
lods
sub
sub
rcr
cmp
inc
dec
inc
cmc
mov
icebp
test
mov
rcr
popa
add
push
add
xor
call
iret
test
xorps
jne
jnp
popf
push
push
adc
xchg
data16
sub
and
cwde
xchg
mov
stos
cmp
or
in
ss
shl
xchg
xor
aas
pushf
ret
add
dec
ins
fild
dec
hlt
xor
gs
push
jle
ja
adc
adc
xchg
xor
jl
scas
movs
jg
inc
sahf
cmp
(bad)
ja
lahf
stos
pushf
fwait
loope
repnz
pop
xor
test
pushf
cmp
mov
movs
mov
aad
fnstenv
sti
xor
cwde
test
dec
popa
pop
ds
dec
sti
xchg
mov
inc
rcl
test
xor
lods
jmp
jmp
test
jecxz
daa
icebp
sbb
jecxz
sbb
dec
loopne
inc
ins
lods
mov
test
or
mov
xchg
push
mov
shl
add
jb
daa
and
and
and
cmp
out
mov
mov
call
sbb
jge
xor
mov
ins
xchg
pop
push
sbb
pop
jmp
aam
cmp
push
in
cwde
arpl
dec
sar
push
sub
lock
scas
xchg
fiadd
data16
out
(bad)
leave
js
and
cmp
out
sti
inc
adc
fs
jge
aaa
add
dec
les
out
inc
out
xchg
bts
loope
mov
push
fucomi
addr16
test
pop
lds
sbb
ja
cmp
pusha
jno
inc
or
push
jg
sub
stos
adc
aad
mov
push
jno
jns
loop
adc
push
push
mov
jmp
or
jae
sbb
push
jnp
lahf
pop
push
out
push
frstor
mov
mov
mov
(bad)
icebp
push
ret
cmp
dec
hlt
hlt
in
hlt
mov
jnp
out
in
xor
sti
jl
pop
jnp
outs
mov
ret
inc
and
int3
pusha
pop
stos
adc
push
mov
jmp
shr
imul
les
xor
pushf
mov
xor
pop
jne
or
xchg
enter
dec
popf
bound
test
out
mov
les
sub
loope
nop
adc
retf
cmp
jl
mov
fidivr
sbb
cmp
movs
cs
pop
ins
ror
or
(bad)
bound
je
aad
ja
loop
cmc
dec
jge
cmp
setne
jmp
lahf
repz
mov
mov
shr
push
call
cs
xor
loope
(bad)
mov
mov
fwait
(bad)
cmp
adc
ss
fdivp
sub
pop
pop
das
(bad)
push
jle
dec
lods
jmp
dec
ret
sahf
(bad)
mov
aam
bound
fadd
pop
cwde
or
adc
gs
dec
ret
frstor
pop
loope
cmps
cmp
adc
fwait
int
pop
pop
fdivr
adc
ret
(bad)
cmc
xchg
add
mov
and
mov
cld
stc
mov
in
mov
ficomp
aam
push
push
imul
ret
inc
add
jns
retf
icebp
into
inc
mov
sbb
fsub
pop
sub
fimul
aas
repnz
mov
fwait
stc
imul
je
mov
addr16
pop
or
arpl
mov
icebp
retf
ret
loop
cmp
popa
xchg
jge
bound
xchg
mov
(bad)
adc
xchg
call
dec
push
dec
jmp
sbb
sbb
push
test
fdiv
push
enter
jle
xchg
push
add
xchg
mov
xor
mov
xchg
or
movs
sub
jmp
sahf
sbb
in
or
fs
dec
int3
inc
pop
cmp
rcr
xor
scas
mov
xchg
inc
cmp
dec
ja
sub
lea
xchg
mov
adc
test
cmc
jns
dec
push
xchg
and
mov
scas
sub
xchg
sub
xchg
cmc
outs
jo
or
pop
pop
in
lea
fmul
xchg
push
rol
mov
and
jecxz
jbe
int3
daa
aam
psubb
jmp
scas
or
movs
pusha
mov
enter
push
jmp
jbe
sbb
loop
xor
dec
mov
je
call
dec
sub
imul
ficom
in
mov
std
sahf
ror
in
je
and
call
push
dec
fwait
mov
mov
in
adc
retf
lock
inc
pop
(bad)
sub
cmp
ret
push
xlat
and
repz
jb
fwait
mov
jns
dec
xor
xchg
aaa
cmp
pop
int3
inc
xchg
repnz
cmp
daa
imul
shl
mov
fnstcw
imul
in
(bad)
lock
pusha
mov
movs
jmp
shr
push
sbb
test
inc
clc
dec
fcomp
arpl
or
fsubp
push
js
adc
call
or
push
cmps
and
cld
jb
cs
push
rol
pop
fstp
jle
add
or
xchg
xchg
popa
gs
jb
test
nop
out
sbb
push
push
jecxz
mov
arpl
sbb
push
inc
pusha
inc
cdq
xchg
in
ret
or
test
fist
xor
in
inc
out
int3
shr
sub
pop
retf
inc
aaa
jg
push
addr16
jmp
mov
mov
fistp
or
mov
mov
dec
sub
xor
add
sbb
add
fadd
xchg
xor
lgs
cld
test
push
xor
out
xor
stc
call
dec
jl
movs
std
inc
and
ret
sahf
xchg
adc
xlat
sbb
and
arpl
inc
aad
jno
(bad)
cmp
in
or
push
retf
pop
imul
adc
mov
(bad)
leave
dec
cmp
mov
fild
scas
scas
lds
xor
outs
jno
and
div
or
and
sub
sub
pop
dec
add
push
stc
or
ins
sub
and
cmc
push
xchg
sahf
or
aaa
cmps
jge
sbb
adc
loop
popf
sub
repnz
(bad)
jp
mov
pop
lods
xchg
movs
imul
fdivr
mov
enter
js
xlat
aaa
(bad)
call
(bad)
jg
sbb
or
jmp
sti
jnp
mov
fucomi
fld
sbb
mul
mov
or
cmp
into
jnp
ret
sbb
add
in
jbe
mov
xchg
pop
js
fldcw
pop
mov
arpl
xor
movs
and
push
dec
pop
sbb
sbb
sbb
sub
jae
xor
es
sbb
dec
js
in
pop
inc
jno
inc
fisttp
or
push
in
lds
and
cmc
push
ja
push
pop
cmp
jne
mov
mov
retf
jmp
sub
inc
xchg
hlt
es
movs
cmp
push
or
call
fldcw
and
or
lds
mov
sbb
mov
mov
inc
and
sbb
sbb
add
call
xchg
mov
inc
xor
cld
mov
(bad)
bound
fsub
sub
adc
dec
cmps
ficomp
cmp
add
pop
lods
arpl
mov
add
dec
sbb
bnd
xchg
ror
mov
pop
fcmovne
loope
mov
xor
pop
scas
ins
ror
fist
mov
inc
mov
or
es
xchg
jg
cmps
enter
lea
mov
jle
jecxz
pop
jo
mov
mov
cmp
push
movs
or
das
adc
cmp
sub
sbb
loopne
clc
fidiv
(bad)
adc
(bad)
into
(bad)
cmp
mov
push
sti
xchg
setl
pop
xchg
rol
jbe
xor
es
sbb
cmp
sbb
ret
mov
stc
nop
xlat
pop
jge
push
xchg
xor
jle
inc
cld
dec
xor
sub
xchg
xor
and
hlt
aaa
push
shl
pop
mov
ret
sbb
into
add
xchg
sub
popa
repz
out
jne
jnp
sub
hlt
push
mov
lods
aam
sub
mov
mov
lods
cli
fbld
dec
mov
loop
mov
fld
inc
xchg
sbb
mov
hlt
std
add
and
xchg
ret
adc
int3
dec
jmp
lea
ret
(bad)
scas
cmp
ja
imul
ins
xchg
arpl
lods
and
pop
sub
imul
imul
leave
retf
out
(bad)
in
ss
inc
lds
scas
pop
(bad)
stos
mov
adc
nop
ins
test
scas
es
sar
add
xchg
inc
test
pop
sbb
mov
add
sub
fstp
sbb
sub
push
out
sti
add
cmps
(bad)
pop
fsubrp
int3
fwait
nop
mov
cmp
or
xchg
pop
jle
jl
dec
cdq
test
je
add
loop
shl
icebp
jmp
jno
lods
mov
adc
pop
retf
add
call
push
add
in
push
or
dec
xchg
std
xor
inc
loope
loop
hlt
rdseed
arpl
cmps
lahf
js
bound
in
mov
jb
call
inc
dec
mov
sti
icebp
xchg
push
pop
daa
mov
inc
xchg
mov
mov
sar
mov
mov
lock
sbb
cs
lds
xor
stos
jge
dec
jg
xor
daa
or
movs
mov
std
(bad)
aas
adc
call
jp
pusha
call
push
xchg
mov
inc
loop
test
cmp
adc
enter
cmps
ins
pop
aaa
dec
xor
pop
sub
pop
jp
inc
sub
lahf
scas
adc
sti
sub
mov
jmp
ins
push
ss
mov
or
pop
push
xor
or
in
sub
dec
ss
push
cmp
add
aam
data16
or
hlt
mov
je
movs
dec
add
pop
fsub
and
cwde
xor
or
jnp
fstp
fdivp
lods
dec
and
loop
push
jmp
cmp
dec
enter
cmp
(bad)
shr
cmp
xchg
jnp
xor
push
into
(bad)
nop
imul
or
xchg
in
aas
dec
or
nop
mov
cmps
out
loopne
or
push
out
mov
retf
dec
or
pop
sub
push
mov
ret
mov
aas
sub
pop
jmp
call
jns
addr16
lods
jl
daa
push
sub
and
out
mov
mov
je
push
je
xchg
retf
dec
popa
popf
pusha
push
add
adc
cmp
push
mov
rol
inc
mov
push
in
pop
in
mov
adc
jp
pop
and
ins
push
mov
push
(bad)
mov
in
inc
out
push
push
mov
and
push
mov
and
xchg
xor
mov
sub
push
jecxz
ja
mov
xchg
push
and
sbb
inc
dec
aad
(bad)
adc
stos
push
ins
in
or
mov
loopne
pop
pop
cli
cmp
xchg
outs
mov
mov
mov
cmc
iret
addr16
out
cmp
or
push
push
sar
ret
sar
mov
sbb
dec
and
in
paddsw
iret
pop
fistp
pusha
mov
dec
stos
pop
xor
std
jge
cli
dec
mov
adc
push
cdq
and
les
dec
xor
xchg
out
pusha
and
mov
test
bound
pop
xchg
jno
(bad)
adc
sub
(bad)
not
inc
cmp
xlat
fs
mov
(bad)
fstp
sub
fistp
sbb
mov
pop
sahf
(bad)
cli
cli
add
ds
test
cmp
pop
imul
push
mov
fidivr
or
ins
push
mov
mov
push
jmp
and
call
test
stc
test
mov
dec
int3
inc
adc
sub
out
js
cli
mov
xor
sti
ret
jae
xor
xor
inc
in
repz
aam
xchg
mov
mov
jle
adc
mov
push
rol
push
mov
jbe
das
rep
lock
out
pop
sub
lods
pusha
not
test
out
outs
bound
cmps
push
aad
add
pop
xchg
pop
xchg
enter
iret
bound
push
retf
add
mov
dec
in
xor
movs
sbb
movs
cmp
arpl
lea
dec
clc
imul
and
push
jmp
xchg
fdivr
jp
sbb
cmp
dec
inc
push
pop
cmps
cmp
push
jbe
in
cmp
int
scas
stos
(bad)
ds
mov
js
jecxz
xor
jg
(bad)
push
adc
mov
rcl
les
adc
movs
out
in
dec
jg
imul
cmp
jnp
cmp
sar
out
pop
jge
mov
ss
adc
not
iret
mov
leave
cmps
dec
dec
mov
xor
stos
ror
inc
add
loop
inc
pop
repz
shl
xor
xor
xor
and
xchg
test
jno
sar
xchg
test
jae
dec
push
les
adc
cli
arpl
imul
leave
mov
dec
in
xor
add
rcr
inc
jmp
loope
adc
dec
nop
sbb
into
cmp
sti
pop
mov
xchg
jg
mov
pop
jg
outs
sub
jno
mov
dec
cs
hlt
mov
sub
pop
or
ret
lea
scas
push
jbe
ret
ror
loop
je
neg
outs
or
ins
mov
(bad)
test
push
mov
xor
out
popa
test
scas
push
jl
ss
push
in
and
jnp
cld
xlat
retf
cli
scas
mov
pop
inc
ror
adc
mov
fmul
(bad)
sbb
nop
mov
test
inc
in
cmp
(bad)
(bad)
sbb
rcr
jmp
adc
fdivr
out
mov
sub
ja
movs
jo
push
rcr
adc
popf
cmc
out
pop
daa
push
je
shr
jecxz
jo
mov
lea
jg
and
inc
ins
test
jmp
je
sbb
clc
sub
xchg
sbb
(bad)
fdiv
adc
outs
push
repnz
push
mov
leave
pushf
or
cmp
pop
push
xchg
addr16
stos
and
add
pop
outs
in
ret
movs
fisttp
jmp
int3
xchg
rcl
ret
ret
xor
arpl
cli
call
out
add
and
xlat
pop
maskmovq
imul
pop
xor
ins
rcl
cmp
inc
jno
psubb
in
es
push
or
je
jmp
aas
retf
xchg
(bad)
das
sbb
test
push
aam
inc
stos
sahf
es
int
mov
adc
inc
sub
mov
test
stc
mov
idiv
fcmovne
inc
mov
and
cmp
xor
pop
mov
mov
sbb
mov
lods
pop
xor
js
jge
loopne
jmp
add
jmp
out
test
pop
dec
mov
dec
adc
ret
pop
ins
fisubr
xchg
jnp
jo
mov
mov
lods
call
(bad)
pop
ins
cli
clc
cmp
in
dec
inc
iret
iret
push
jmp
ss
jg
mov
loopne
js
xor
xor
sub
sub
imul
aaa
xor
mov
rol
cmp
mov
pop
inc
pop
outs
sub
jmp
out
push
test
enter
jecxz
jnp
test
test
jmp
mov
rsqrtps
adc
xchg
cmc
and
sbb
fistp
xor
inc
int3
dec
cli
and
xor
xchg
add
repz
sahf
mov
or
sub
fcom
loopne
adc
scas
and
mov
enter
mov
add
inc
jmp
jnp
and
in
fidivr
pop
or
jmp
push
sti
xor
cmps
mov
xor
or
jmp
jge
jp
or
inc
lahf
push
into
mov
push
clc
aas
mov
test
inc
or
xor
shl
jne
out
adc
mov
je
cmp
mov
cdq
sbb
push
dec
mov
jle
and
neg
mov
daa
xchg
push
inc
imul
push
sahf
movs
push
test
mov
(bad)
mov
dec
lea
or
dec
dec
sbb
jl
push
(bad)
inc
mov
(bad)
movs
push
add
mov
xor
jge
pop
mov
or
call
add
mov
ja
lock
mov
jmp
mov
pop
lea
cwde
test
and
push
arpl
adc
mov
out
int
test
cmp
dec
lods
lods
push
mov
stos
jae
inc
jnp
sbb
add
movs
mov
ins
test
int
pop
in
push
or
jo
pusha
cmps
dec
pop
dec
add
jmp
mov
in
fsubr
cli
repz
popa
jecxz
lods
mov
mov
ds
and
sub
mov
movs
push
push
cs
les
jo
add
mov
mov
xchg
gs
aas
ss
cmp
loopne
jnp
mov
pop
add
mov
sbb
push
and
jge
xchg
stos
sub
imul
add
shl
shr
pop
inc
xchg
pop
cs
les
ins
out
pusha
cmps
in
ins
inc
out
pop
sti
lahf
xchg
push
mov
xchg
lods
push
or
ss
sub
xchg
mov
jl
xchg
arpl
mov
lods
jno
mov
sbb
sub
pop
repz
test
dec
jmp
movs
dec
mov
jb
sar
mov
pop
cmc
cmp
sbb
mov
iret
scas
imul
sahf
rol
push
sahf
into
mov
mov
adc
jecxz
(bad)
push
mov
dec
into
ins
add
outs
mov
push
pop
xchg
aad
xchg
cmp
fldcw
mov
mov
cmp
xor
and
add
stos
jl
rcl
and
(bad)
fnstcw
jbe
dec
mov
movs
or
xlat
es
cwde
std
inc
xor
or
inc
and
or
clc
xchg
and
mov
ret
jb
mov
or
pop
cmps
lock
sub
fwait
arpl
movs
add
and
inc
add
rcl
in
jecxz
adc
push
cmps
jecxz
jmp
jg
add
dec
inc
sahf
sub
and
jp
inc
inc
popa
nop
mov
sub
stc
xchg
xor
dec
or
add
test
xchg
movs
add
outs
out
push
add
pop
cmps
pop
jmp
loope
push
jmp
jns
jb
push
lods
or
push
into
xchg
fstp
cs
cmp
jne
inc
ficom
stos
adc
xchg
daa
pop
jl
adc
xlat
adc
push
fcom
add
mov
in
push
jnp
xlat
retf
out
mov
hlt
arpl
dec
js
ins
out
or
jmp
mov
lahf
call
cmp
jb
clc
push
fcom
jmp
aam
retf
push
sub
sub
xor
mov
mov
jo
into
hlt
sbb
(bad)
out
ss
stos
push
sbb
sub
inc
or
stos
mov
pop
loop
jbe
jae
stos
(bad)
aas
in
retf
adc
jnp
fstp
aad
mov
sti
sub
inc
xlat
js
jb
outs
mov
add
stc
pop
fldcw
mov
jbe
test
(bad)
adc
mov
les
out
pop
cwde
ret
in
call
hlt
mov
(bad)
jnp
cli
mov
clc
dec
xchg
in
shr
repz
dec
xchg
mov
fwait
dec
(bad)
mov
push
xchg
lds
lds
fsub
mov
or
xor
mov
and
and
movs
out
mov
cwde
pusha
jp
cmp
test
xchg
inc
adc
fnstcw
add
xchg
sbb
push
add
cld
xor
mov
xchg
out
add
or
mov
(bad)
mov
fnstenv
sbb
mov
dec
jp
sbb
mov
pop
mov
mov
push
pop
sbb
pop
pop
(bad)
mov
mov
dec
pushf
bound
stos
push
dec
xchg
cmp
push
fwait
xchg
dec
stc
movs
lds
aaa
jp
repnz
std
shl
mov
test
mov
push
iret
das
push
mov
xchg
xlat
or
and
mov
shl
dec
jbe
jbe
cmp
aaa
xchg
inc
pop
pop
fbld
xor
add
out
icebp
movs
pop
cmps
xchg
cli
lahf
mov
or
push
nop
pop
ret
pop
rcl
loop
xchg
jl
in
sbb
sub
xchg
scas
add
(bad)
movs
jge
mov
push
mov
cmps
aas
sub
lods
loope
xchg
call
jecxz
(bad)
cmp
lock
mov
adc
mov
xlat
aam
stc
xchg
sti
sbb
je
dec
mov
sahf
sti
dec
pop
sub
test
inc
in
cs
pop
and
xchg
in
add
and
sub
iret
pushf
pushf
adc
jns
xchg
sbb
and
or
add
jo
pop
add
adc
into
dec
push
dec
cmp
add
in
mov
loope
hlt
sar
dec
lea
add
push
test
or
pop
push
and
and
add
in
outs
jl
push
mov
out
xchg
leave
sub
cmps
jle
sbb
cmp
xor
lods
retf
and
test
frstor
div
hlt
jne
cs
lds
rcl
fild
test
movs
dec
mov
dec
lock
mov
push
dec
cmp
fld
mov
cmp
pop
leave
stos
sti
jmp
sbb
inc
popa
pop
push
iret
(bad)
mov
and
(bad)
in
into
adc
mov
sub
mov
int3
mov
xchg
xchg
sahf
test
cmc
adc
xchg
dec
mov
rcr
ror
cmc
push
sbb
test
dec
or
fldcw
outs
stos
nop
xchg
fwait
pop
mov
jge
sub
lea
or
lea
aad
pop
dec
push
outs
push
push
and
loopne
stc
pop
xor
ss
inc
and
push
int3
dec
xor
ins
dec
dec
je
movs
mov
dec
retf
mov
cmp
ret
out
icebp
fdivr
adc
dec
movs
clc
popf
call
pusha
jae
dec
adc
xchg
sub
pop
cmp
sbb
xchg
pop
xchg
sub
inc
mov
pop
cmp
dec
mov
mov
cs
sti
outs
(bad)
dec
add
gs
adc
xor
fisubr
jnp
jge
rcl
jne
dec
ffreep
push
xor
sbb
and
ret
cmp
out
inc
dec
rcr
lods
pop
aad
fisub
fwait
or
inc
(bad)
pop
stos
mov
add
sub
inc
jnp
sar
daa
dec
aas
jmp
ret
cmps
mov
add
mov
aaa
or
or
scas
push
mov
sub
inc
or
rcr
movs
je
lds
jb
jmp
xchg
jg
adc
imul
and
add
test
rcr
mov
cld
push
lods
ret
int
inc
mov
aam
sub
pop
add
pop
ret
adc
xor
scas
mov
jmp
xchg
pop
ss
pusha
daa
sbb
ss
cmp
adc
jecxz
pushf
add
pop
xchg
xor
jnp
cmp
jmp
sub
outs
addr16
cdq
cdq
pop
dec
icebp
mov
jmp
push
jmp
push
scas
mov
sbb
sbb
fs
fsubr
mov
or
(bad)
retf
sti
cmp
mov
inc
(bad)
std
jb
(bad)
rcl
jg
add
or
pop
mov
loope
test
ficom
fcmovne
or
int
sbb
scas
and
stc
imul
loop
push
lds
sti
sar
fsub
sti
push
sbb
test
push
jnp
pop
shl
lds
or
imul
test
dec
aas
repz
and
pop
xor
ret
xchg
dec
jno
and
push
ins
jb
inc
push
or
ret
out
or
adc
xor
push
cmc
fnstcw
retf
pop
mov
fucomp
out
ins
dec
mov
ja
adc
push
retf
mov
mov
addr16
es
ror
add
scas
inc
adc
or
mov
(bad)
cld
dec
mov
xchg
push
fsubr
popf
push
cdq
fs
std
or
dec
xor
xor
fidiv
cmps
lock
rcl
es
or
(bad)
jecxz
jge
adc
test
ds
jecxz
arpl
xchg
push
out
fnstcw
pop
arpl
add
outs
fsub
cmp
mov
sub
mov
ja
aas
fs
dec
inc
icebp
xor
mov
mov
test
jmp
push
xor
lea
mov
push
(bad)
mov
adc
push
and
repnz
or
xor
sub
jmp
mov
mov
and
pop
mov
inc
or
sti
xchg
sbb
dec
inc
(bad)
inc
imul
mov
rol
stos
hlt
or
sbb
or
push
sub
mov
jnp
jg
sbb
(bad)
sar
jb
pop
jnp
adc
jae
ds
cmp
(bad)
aam
pop
aam
jmp
call
mov
das
xor
xor
xchg
icebp
jb
shr
popf
div
lahf
(bad)
and
or
dec
into
aam
mov
push
ins
ins
loop
fisttp
inc
jecxz
jbe
jle
cld
aad
sbb
add
sbb
fisub
aam
pop
push
cwde
mov
mov
xor
stc
fmul
popf
leave
cmp
jns
sbb
call
pushf
mov
icebp
test
fidiv
bound
leave
xor
fcomp
std
push
imul
mov
loopne
cld
popa
and
dec
cmp
mov
outs
loop
test
add
xchg
xor
int3
cmc
add
mov
fmul
(bad)
(bad)
lahf
and
sbb
fwait
add
cld
adc
pop
mov
aaa
arpl
cmp
sub
shl
push
dec
scas
call
dec
cli
mov
jbe
xor
adc
xchg
stos
mov
loopne
scas
pop
nop
adc
xor
push
mov
sub
dec
adc
retf
or
arpl
or
std
ins
hlt
dec
and
iret
adc
jle
lahf
jg
rcr
and
cwde
mov
mov
sbb
loope
adc
dec
cmc
mov
pop
jno
and
fisttp
xchg
out
mov
stc
and
dec
scas
lds
inc
into
rcl
mov
imul
sbb
lods
push
sbb
scas
or
(bad)
mov
psubusw
ins
ss
push
push
shl
mov
test
fs
inc
xchg
das
test
rcr
mov
mov
retf
jl
in
in
ins
mov
cmp
add
pusha
in
cli
cwde
mov
pop
fstp
and
out
add
pop
iret
call
jle
cmp
mov
or
inc
xor
mov
mov
mov
cmp
push
jge
repnz
sbb
int3
push
cmp
test
out
lds
pop
inc
jg
gs
fdivr
ss
mov
lock
repnz
mov
jnp
cmp
add
and
loope
test
lds
jbe
xchg
loop
stos
lahf
cmc
add
pop
imul
mov
cmp
sti
aad
retf
rcl
lock
xchg
cmp
push
popa
push
clc
mov
push
sub
jno
clc
xchg
xchg
and
ror
jecxz
fld
or
pop
fidiv
call
inc
fld
adc
mov
ss
cmp
mov
adc
(bad)
(bad)
div
les
jecxz
add
repz
cmp
mov
rcr
ins
aam
retf
into
ja
(bad)
fcmovb
shl
mov
sub
(bad)
jle
imul
outs
sub
lods
(bad)
in
loop
daa
(bad)
cdq
ja
sub
into
cmp
xor
mov
push
cwde
mov
fstp
aam
inc
ins
xlat
cmp
or
leave
adc
adc
pop
aad
or
call
jecxz
pop
pushf
adc
(bad)
jno
push
sbb
push
hlt
mov
mov
jno
add
push
(bad)
cmps
and
test
shl
popa
push
fmul
push
push
aad
mul
jmp
seta
push
add
jmp
or
and
cmp
jmp
mov
int
mov
dec
and
lahf
pop
pop
jmp
dec
hlt
cmp
test
inc
dec
mov
in
mov
mov
bound
mov
or
ins
lds
and
loop
add
(bad)
inc
sub
inc
lds
xor
xor
leave
ins
push
sbb
xor
xchg
(bad)
fidivr
in
leave
cli
pop
int3
sbb
push
stos
jecxz
add
popa
adc
test
call
pop
es
push
add
and
movs
out
imul
gs
loop
pop
mov
in
daa
(bad)
scas
sub
mov
push
adc
push
or
xlat
arpl
mov
cmp
mov
jmp
inc
je
push
pop
add
mov
out
test
icebp
lds
inc
scas
rcl
push
mov
adc
shl
push
or
cmc
mov
cwde
mov
cmps
imul
jecxz
pop
gs
(bad)
pushf
mov
std
and
mov
ins
cmp
clc
dec
inc
fadd
ret
icebp
arpl
xor
je
ds
dec
jl
jae
repz
les
lea
iret
mov
imul
xor
inc
jmp
add
xchg
cdq
xor
or
sbb
cmps
inc
fisubr
jbe
cmp
stos
clc
or
pop
and
sub
inc
fcmovnbe
shl
inc
jns
lods
ins
pop
adc
imul
ins
xor
adc
push
es
out
test
sbb
mov
fwait
pop
scas
jle
aaa
fcomp
ss
jnp
gs
jo
lds
jle
js
pxor
jecxz
clc
jb
xor
mov
sub
push
sbb
stc
push
in
int3
out
mov
mov
inc
push
pushf
and
outs
lds
je
test
inc
iret
loope
add
cmp
dec
aam
lock
and
retf
jl
or
icebp
fwait
or
int3
add
idiv
cmp
fisub
sahf
xchg
imul
cmp
dec
lods
xor
out
ins
mov
in
push
jecxz
jo
adc
mov
sub
add
mov
fstp
vunpcklps
ins
ds
pop
mov
cli
les
gs
out
test
jbe
xor
cdq
(bad)
pop
cdq
rcr
int3
repz
inc
xlat
repz
xor
add
ret
mov
push
ds
mov
adc
xchg
xor
inc
and
iret
jae
cs
jmp
xor
(bad)
cli
push
pop
pop
ret
daa
cmps
stc
ja
daa
outs
outs
out
stc
lahf
call
repnz
xchg
sub
lods
jnp
push
mov
cmps
add
mov
jmp
push
xor
jmp
push
in
sub
mov
pop
inc
ja
(bad)
sub
shr
jmp
dec
imul
cdq
sbb
mov
jmp
sbb
fsubr
in
pushf
add
scas
aad
jmp
ins
mov
xchg
push
xor
out
loop
sbb
out
(bad)
loope
mov
in
out
mov
ret
inc
daa
cmps
fisttp
pop
push
adc
pusha
jno
mov
rcr
and
cmc
sub
or
js
sbb
mov
mov
shl
stos
sub
mov
mov
in
popa
mov
cmp
shl
fs
lock
xor
adc
test
mov
mov
movs
add
jne
dec
cmps
or
jnp
pop
mov
enter
dec
mov
dec
jnp
pop
cwde
stos
popf
mov
or
adc
jp
out
nop
mov
scas
fwait
sub
into
pop
xchg
out
xor
sar
movs
nop
js
adc
xlat
and
test
int
adc
stos
adc
jb
sbb
push
(bad)
cmp
adc
outs
popa
sbb
adc
not
push
call
ds
inc
jmp
hlt
mov
push
inc
add
mov
mov
mov
stos
push
dec
pop
mov
xor
jbe
out
(bad)
adc
fisttp
pop
cmc
sbb
clc
lds
push
xor
bound
rcr
jecxz
sahf
pop
inc
mov
mov
outs
sbb
push
mov
loop
push
inc
fild
mov
aas
sahf
rol
ret
jmp
in
loope
jbe
inc
mov
in
and
mov
cmc
push
enter
ret
in
mov
(bad)
scas
dec
sti
aas
aas
xchg
push
mov
push
jae
(bad)
retf
adc
call
(bad)
repnz
mov
test
xchg
jnp
pop
push
sub
jo
cmp
pop
(bad)
pop
call
(bad)
mov
jp
rcr
fadd
push
adc
push
mov
mov
add
nop
in
outs
jno
jnp
cmc
sbb
xor
sbb
or
outs
fcomi
cld
jmp
jnp
jl
out
(bad)
sbb
nop
mov
pop
cmp
dec
movs
retf
cmc
call
pop
into
pop
dec
mov
fstp
add
mov
push
xor
das
dec
movs
sbb
mov
test
mov
out
ror
mov
jle
dec
mov
jno
cli
test
adc
or
pop
ret
or
pop
out
fninit
cmc
loopne
ins
pop
push
adc
and
pop
jl
stos
push
mov
mov
ins
test
jl
test
jmp
sbb
mov
ss
sbb
push
jns
and
in
sbb
out
pop
rcr
(bad)
fisubr
jmp
push
ds
pop
inc
xchg
fwait
into
push
clc
ins
fidivr
mov
arpl
outs
leave
call
sub
sar
mov
xchg
xchg
inc
jge
(bad)
cs
stc
push
add
jp
(bad)
mov
push
shl
ror
(bad)
icebp
fwait
popf
mov
outs
push
or
stos
mov
icebp
cmp
push
pop
pop
xchg
add
pop
sub
(bad)
mov
xor
dec
sub
sbb
mov
popa
call
pop
imul
sub
leave
mov
pop
dec
cmp
imul
cmc
and
mov
mov
fmul
sub
in
loopne
jne
sahf
jg
jmp
dec
jae
mov
mov
dec
cmps
addr16
std
xchg
push
test
cmps
outs
outs
rcl
lods
pop
sti
and
adc
dec
mov
push
fwait
pop
lods
pop
int3
cmp
and
(bad)
fild
jno
mov
xchg
popf
sbb
mov
sbb
popa
mov
or
push
test
push
adc
xor
inc
or
xchg
lods
sbb
xor
aam
cmp
push
getsec
jle
je
push
es
mov
and
sbb
fs
stc
xchg
aam
retf
or
stc
(bad)
and
and
lods
sbb
xchg
jmp
jmp
jo
leave
xchg
jl
inc
inc
iret
imul
je
jmp
push
data16
cmp
repz
add
mov
mov
or
mov
aam
(bad)
add
inc
outs
push
repnz
out
cdq
xchg
int3
rol
idiv
enter
dec
adc
mov
call
sbb
push
dec
(bad)
push
and
xor
(bad)
and
jl
inc
test
cmovle
stos
add
cwde
push
sub
pop
fstp
add
or
movs
mov
mov
retf
hlt
push
xor
clc
fldenv
hlt
ret
adc
jae
ret
in
mov
and
mov
retf
addr16
push
and
xchg
outs
dec
push
lods
cmps
aad
fnstcw
ror
rsm
retf
inc
sub
addr16
ss
data16
hlt
lea
fdivr
imul
cmc
fucomi
push
je
jg
test
das
push
rcl
les
pop
add
sub
ds
repnz
jbe
cmp
add
data16
mov
push
push
sub
xor
xchg
jl
inc
adc
mov
inc
ror
xchg
and
mov
sub
addr16
cld
test
out
repz
add
add
call
(bad)
es
call
mov
fs
retf
inc
rcl
or
sbb
arpl
xor
inc
dec
cdq
iret
add
and
mov
sbb
cld
(bad)
imul
sahf
gs
jne
fsub
std
fsub
out
retf
test
mov
or
in
das
xchg
add
mov
pop
adc
add
adc
iret
mov
cvtdq2ps
cdq
cmc
dec
fnsave
lods
cs
fidivr
jnp
cdq
int
dec
jl
inc
inc
jne
adc
lods
sbb
add
pop
or
call
pop
movs
test
sub
repnz
ss
dec
icebp
clc
fsub
fcmovnb
or
push
dec
mov
jge
mov
or
pop
sub
mov
jbe
ds
aaa
mov
inc
dec
sub
in
out
repnz
dec
in
cwde
xchg
mov
pusha
jl
add
neg
es
xlat
push
push
outs
into
dec
into
dec
sub
mov
sbb
movs
mov
push
and
sub
fild
cmps
repnz
popf
pop
std
sbb
or
xchg
dec
int
push
pop
push
leave
stos
inc
pop
jmp
add
es
mov
pop
fadd
repz
outs
inc
cli
jbe
sub
data16
mov
dec
xor
mov
hlt
add
gs
daa
mov
cs
push
jge
js
push
xor
retf
pop
xchg
scas
mov
out
into
test
rcr
in
(bad)
dec
pop
mov
push
mov
dec
test
cwde
jmp
xchg
push
bnd
or
test
jb
pushf
daa
jae
fs
repz
mov
adc
and
test
fs
cld
mov
std
pushf
cmp
and
cdq
das
add
je
je
popa
inc
lahf
jne
icebp
out
mov
fs
adc
ret
jo
(bad)
leave
and
sbb
sub
add
or
mov
cmp
mov
xor
shl
inc
stos
mov
fisub
push
mov
push
pop
mov
clc
push
test
xchg
add
pop
mov
xchg
fnstsw
add
adc
pushf
das
cld
cwde
cdq
cld
and
jl
fadd
pusha
mov
stos
and
inc
fmul
fwait
mov
jne
inc
pushf
fs
bound
je
xor
adc
xchg
movs
imul
xor
inc
cmc
pushf
ins
movs
sahf
jae
push
shr
test
xchg
cmp
push
push
ror
fstp
cli
jb
or
adc
xchg
xchg
mov
push
adc
add
and
jne
(bad)
fist
jo
pop
pop
retf
lea
(bad)
daa
cmps
clc
pop
arpl
icebp
inc
sub
repnz
push
sub
ins
cmp
and
add
cmc
test
in
jb
in
out
xchg
test
mov
inc
cwde
(bad)
xor
xchg
imul
mov
mov
add
cmp
out
gs
cmp
xchg
push
or
jecxz
(bad)
hlt
data16
sbb
cmp
test
shl
inc
iret
aam
mov
jb
dec
outs
mov
mov
pop
jle
inc
mov
fwait
pop
leave
mov
ret
sbb
xchg
adc
xor
cdq
repnz
add
scas
push
test
sbb
add
inc
daa
je
imul
outs
mov
jl
cmps
aad
push
cmps
cmp
leave
sub
mov
lock
mov
leave
adc
imul
(bad)
fbld
xchg
ret
xor
ja
popf
repnz
xchg
nop
mov
test
push
js
repz
add
out
icebp
jns
ds
inc
dec
test
dec
(bad)
aaa
adc
mov
(bad)
add
lock
outs
in
rcr
and
lods
das
aaa
cmps
aad
aas
push
sbb
shr
mov
xor
inc
aaa
test
jnp
xlat
lods
mov
push
mov
push
and
loop
dec
push
lock
pop
adc
and
in
out
add
push
(bad)
int
stos
jne
cld
nop
inc
fnstenv
loope
test
fldenv
in
imul
out
mov
push
inc
(bad)
popa
test
fwait
add
inc
sbb
cmp
mov
aas
fstp
in
ja
adc
cmp
pop
pop
fwait
psllq
imul
add
jp
pop
nop
cld
jns
jmp
sti
scas
call
mov
inc
lds
dec
cmps
iret
add
pop
xlat
sahf
push
vpshufhw
push
adc
mov
push
loope
or
test
push
scas
pop
inc
neg
jmp
xchg
sbb
test
xchg
outs
xchg
inc
mov
data16
cmps
lds
clc
or
sbb
sub
iret
push
fwait
and
imul
std
neg
pushf
movs
or
sub
and
add
mov
dec
cli
mov
mov
fcmovb
mov
ds
jb
dec
sbb
out
cmp
jp
jmp
in
sbb
adc
mov
mov
dec
xor
or
pop
out
pop
mov
or
jg
jg
mov
mov
mov
xchg
int3
jge
and
inc
lds
adc
and
and
shr
xchg
shl
iret
cwde
pop
stos
adc
xchg
xor
test
leave
or
(bad)
aam
pop
add
stos
outs
xor
push
iret
cmp
inc
(bad)
xor
(bad)
and
cs
cmps
xlat
jo
xchg
pop
add
mov
mov
enter
jmp
into
lds
cmp
sbb
xchg
cmp
or
lods
mov
and
jecxz
and
and
xor
jl
fwait
lea
mov
rcl
mov
and
loopne
add
mov
sbb
sbb
fidiv
xchg
pop
adc
xor
out
jae
cmp
hlt
iret
push
outs
int3
sbb
outs
xchg
icebp
cli
inc
xor
mov
sbb
stos
rol
sbb
mov
sub
into
pushf
pop
fs
ja
outs
push
rcr
mov
push
bound
push
cdq
inc
mov
fwait
xor
outs
push
ret
lock
movnti
aas
fcom
fnstenv
push
inc
iret
sub
push
xor
jno
lock
cmps
in
push
inc
pop
or
dec
add
jmp
int
adc
fs
in
lea
pop
pop
lock
mov
cld
mov
push
out
stos
loopne
xor
mov
daa
popa
cmc
pop
lea
test
stos
dec
in
push
pop
jno
out
hlt
fild
popa
sbb
arpl
daa
sub
xchg
sub
ins
repz
inc
retf
push
fistp
pop
mov
test
jb
and
xor
aas
add
(bad)
xchg
addr16
lahf
inc
lods
mov
or
ret
je
aas
mov
xchg
xor
(bad)
cdq
shr
test
mov
js
cli
les
call
inc
gs
add
test
or
mov
mov
and
pop
outs
push
xchg
ins
call
mov
adc
push
push
cmps
call
add
movs
xor
repz
cmp
push
mov
jb
hlt
push
sub
outs
adc
sahf
sbb
shl
in
cmp
mov
or
sbb
mov
add
pusha
out
inc
cmp
(bad)
pop
stc
sbb
in
(bad)
jle
xor
mov
pop
pop
imul
sub
and
mov
(bad)
pop
cmp
in
sti
push
leave
aas
mov
sub
pop
jl
push
hlt
and
sahf
ins
cwde
cmp
addr16
xchg
and
xor
(bad)
cwde
popa
mov
cmp
and
leave
mov
loop
add
sbb
xor
mov
faddp
xor
test
dec
cmp
add
popf
and
adc
add
jg
std
dec
mov
in
jg
movs
mov
and
repz
shl
mov
xlat
jo
fisubr
push
scas
dec
xchg
(bad)
mov
cmps
adc
or
and
in
les
mov
mov
out
outs
pop
enter
fwait
popa
xor
mov
add
push
add
les
push
test
and
mov
push
loop
aad
mov
cmp
mov
push
mov
ins
inc
jl
enter
iret
jae
sub
or
push
adc
push
aad
mov
sbb
jge
or
orps
pop
sub
gs
pop
ss
mov
xchg
cdq
inc
adc
fisubr
jne
fbstp
lea
inc
inc
loope
mov
cmp
mov
mov
int3
sub
mov
dec
mov
loop
cdq
mov
ror
movs
xchg
inc
leave
adc
or
mov
shl
into
cld
cli
push
(bad)
loope
std
dec
(bad)
retf
jl
daa
push
mov
add
retf
out
cli
push
dec
push
mov
inc
add
or
jae
lock
cmps
jle
push
jbe
fs
addr16
sub
push
pop
test
repz
ja
fwait
mov
push
sahf
cdq
fcmovnb
add
xchg
and
or
jp
inc
js
and
test
mov
or
aaa
inc
or
inc
das
add
sar
movs
out
shl
push
out
push
dec
(bad)
mov
xchg
div
les
push
fidiv
xchg
in
das
push
dec
ins
add
push
ins
push
ss
mov
mov
enter
mov
cmp
push
mov
(bad)
push
dec
inc
mov
cmp
fwait
mov
or
sahf
pushf
dec
add
jbe
xlat
adc
mov
mov
in
pop
mov
cdq
pop
ins
dec
mov
or
div
mov
arpl
mov
mov
out
jmp
xchg
call
jl
cmp
js
aas
jb
push
mov
out
repz
mov
inc
ins
xchg
stc
mov
int3
mov
and
(bad)
bound
sub
hlt
mov
ror
out
mov
push
retf
inc
mov
mov
stc
mov
(bad)
jno
out
movs
sti
sti
jg
push
sbb
jbe
or
std
or
fnstsw
xor
popa
das
cmp
jmp
cs
mov
mov
sub
mul
test
jecxz
mov
test
(bad)
out
scas
in
pop
dec
ins
sti
or
daa
or
jnp
mov
stos
es
pop
js
movs
inc
cwde
int3
gs
adc
mov
add
loope
ins
ins
dec
stos
or
push
push
pushf
jg
fdivr
xlat
test
scas
cmp
mov
push
mov
enter
xchg
push
fstp
add
sti
or
mov
adc
inc
sub
imul
(bad)
jo
sbb
call
imul
ja
shl
jecxz
mov
sahf
adc
sub
ss
(bad)
bound
bnd
jmp
xchg
inc
aaa
hlt
cmps
xor
rcl
fidivr
lods
pop
add
pop
scas
push
outs
into
cld
mov
daa
push
ds
scas
adc
pop
inc
js
popf
mov
loope
ins
push
sub
clc
pusha
aam
scas
sub
(bad)
mov
mov
pushf
retf
sub
xchg
pushf
loop
test
inc
xor
test
xor
mov
xchg
add
ret
mov
outs
rol
mov
and
mov
clc
icebp
cmp
mov
int
xchg
lods
inc
cmp
push
inc
jnp
push
cmp
adc
imul
push
repnz
or
adc
jg
mov
mov
test
loopne
icebp
pushf
dec
xor
push
jno
cmp
xor
dec
and
test
mov
in
pop
pop
pop
nop
xor
mov
ror
or
enter
sbb
adc
adc
sub
pop
xor
fs
ins
jns
stc
push
fld
cmp
mov
(bad)
push
test
movs
xchg
push
inc
mov
jo
xor
or
fmul
popf
push
sub
xchg
popa
sbb
sub
loopne
into
hlt
mov
fs
cmp
(bad)
outs
push
fwait
pop
push
in
imul
jmp
ins
inc
sbb
mov
lock
popa
dec
test
jne
dec
mov
loope
and
jp
and
xchg
inc
stos
gs
ret
aaa
mov
ss
adc
adc
in
mov
push
xor
inc
jmp
xchg
mov
cmp
ins
(bad)
or
add
or
ret
iret
lock
xor
jne
retf
jb
pusha
push
sbb
cld
dec
inc
ds
xchg
push
lahf
enter
jg
push
ror
mov
and
(bad)
cmp
push
in
push
push
cmps
inc
adc
add
sbb
fsub
xchg
push
jmp
dec
adc
data16
or
not
and
mov
in
dec
xchg
inc
lods
pop
(bad)
or
xor
mov
inc
ins
jmp
add
outs
jmp
inc
cmp
xchg
mov
inc
xchg
das
int
jno
xchg
pop
daa
sub
or
xchg
lock
nop
ror
call
popa
cdq
mov
dec
(bad)
fwait
xor
ret
xchg
icebp
out
inc
out
and
jo
(bad)
lds
add
mov
popf
cmovl
ror
in
xchg
adc
push
ret
sar
pop
fsub
xor
jle
xor
cmp
rdmsr
je
or
add
or
add
and
inc
dec
fimul
push
xchg
jmp
push
push
mov
pop
sub
mov
rcl
mov
xor
test
xchg
ds
fs
mov
aad
jle
gs
jg
push
test
cmp
mov
test
and
jnp
sbb
dec
arpl
mov
fsub
pop
lds
cld
mov
ret
push
pop
scas
retf
sub
stos
icebp
or
sbb
adc
test
jle
add
call
stos
out
adc
push
xor
js
mov
inc
xor
xlat
mov
xchg
dec
jge
dec
lods
xlat
inc
int
mov
add
hlt
or
inc
mov
pop
xchg
pop
call
xchg
in
pop
ss
xchg
cmps
jg
in
imul
xchg
or
cmc
add
inc
pop
mov
add
arpl
imul
sub
imul
mov
jmp
dec
leave
mov
(bad)
sti
cmp
dec
leave
cmp
arpl
and
cmps
ret
(bad)
addr16
adc
shr
cli
arpl
mov
hlt
cs
pop
movs
jns
xchg
sub
int3
cmp
cli
sub
and
or
mov
push
cmp
push
adc
pop
xor
inc
mov
mov
lahf
(bad)
addr16
xchg
ret
inc
scas
jae
push
xor
add
outs
lahf
ins
ror
lods
xor
(bad)
mul
daa
push
sub
xor
bound
movs
mov
sub
int
fdivr
or
ret
(bad)
les
icebp
xor
in
jle
fidiv
xlat
fstp
dec
jnp
test
sbb
mov
xacquire
inc
xor
xor
cwde
xchg
mov
push
push
rol
mov
xor
and
sub
mov
and
xchg
add
jmp
dec
mov
push
test
or
hlt
dec
(bad)
stos
aaa
mov
pop
jl
int
or
mov
adc
or
pop
rcl
in
xchg
dec
retf
call
push
and
and
loop
sbb
cmp
mov
inc
cmp
push
ins
pop
cmps
inc
add
out
test
sub
pop
pop
jne
xor
and
add
pop
mov
dec
pop
nop
and
loop
repnz
pusha
enter
cmp
jbe
jne
sbb
test
push
push
movs
fs
pop
jbe
rol
popa
into
addr16
mov
js
pop
dec
popa
xchg
call
ins
push
cld
add
sub
cmp
dec
loope
mov
jb
dec
in
xchg
dec
repnz
jbe
jmp
enter
scas
mov
push
sub
mov
ss
sbb
lock
(bad)
daa
add
gs
add
jmp
mov
pop
pop
inc
xor
push
scas
fld
push
push
sar
sub
ins
es
out
xchg
jno
inc
inc
js
cld
out
push
xchg
jb
inc
pop
dec
outs
sub
int3
sub
ins
cmps
rcr
and
xchg
sub
cdq
(bad)
retf
fdivr
push
dec
lahf
jl
iret
jmp
in
xor
push
ss
in
sbb
xor
inc
fistp
sub
rol
mov
jnp
add
inc
in
ja
out
push
xlat
mov
aaa
ins
or
ins
sbb
int
sbb
jmp
jmp
das
jnp
dec
mov
sub
call
or
pushf
add
pop
xchg
jmp
jmp
dec
sbb
mov
inc
sahf
lds
pop
mov
xchg
popf
(bad)
fst
out
fist
ds
push
mov
xor
mov
push
fist
hlt
mov
xchg
aam
xor
inc
xchg
in
and
sub
mov
outs
jle
in
fldenv
ins
movs
outs
jns
dec
pop
or
mov
or
adc
retf
sahf
repz
imul
mov
and
xor
sub
pop
into
push
movs
jb
je
mov
not
sub
sbb
test
push
add
popf
cwde
pop
sbb
test
enter
push
(bad)
repz
jmp
xchg
fstp
sub
jne
mov
pop
adc
test
je
js
test
inc
dec
xor
sbb
mov
std
pusha
cs
push
sbb
cmps
sub
mov
adc
xchg
inc
iret
mov
sub
adc
mov
jge
dec
dec
arpl
push
arpl
mov
lods
sbb
cdq
mov
add
aam
mov
popf
xchg
not
dec
sub
mov
cld
out
enter
in
cmp
add
scas
out
fst
stos
inc
push
(bad)
push
scas
jns
dec
mov
and
xchg
add
les
out
repz
xchg
mov
xor
push
and
mov
nop
dec
mov
mov
mov
pop
in
dec
lds
call
mov
jmp
test
iret
mov
shl
jns
and
add
or
adc
out
ja
lahf
cmp
cmc
mov
and
sbb
adc
cdq
inc
aaa
mov
sbb
push
repz
cdq
cld
cmp
dec
xchg
ds
dec
cs
jge
jmp
popf
fnsave
mov
popf
mov
mov
in
retf
adc
inc
sub
xchg
push
xchg
adc
in
add
or
and
dec
sti
xchg
dec
loop
dec
mov
cs
dec
xor
push
pop
sub
mov
mov
shr
sbb
cmp
adc
rol
pop
pop
sbb
push
inc
sub
test
les
sub
scas
les
outs
aas
sub
inc
jns
(bad)
pop
xchg
fstp
mov
and
adc
dec
int3
pop
nop
aas
fisttp
std
adc
pop
lods
mov
(bad)
lock
inc
dec
mov
shl
and
int3
dec
pop
(bad)
xor
pop
and
pop
mov
data16
ret
and
movs
dec
fwait
aad
jmp
retf
addr16
imul
fnstsw
cmp
ror
test
(bad)
loopne
sbb
mov
push
fcom
push
or
dec
push
cwd
xchg
jl
and
mov
icebp
inc
leave
aam
shl
mov
mov
pop
push
dec
cmps
repz
sbb
fmul
retf
jae
add
hlt
iret
repnz
pop
jle
pop
enter
je
je
movs
sub
dec
dec
jnp
xchg
imul
scas
jnp
jge
add
push
mov
icebp
cwde
stc
jle
mov
jge
push
mov
in
je
aad
shl
add
and
cmps
fwait
das
fisub
(bad)
cdq
push
fistp
into
mov
imul
movs
call
fimul
hlt
in
sar
add
cld
bswap
sub
cmp
int
xor
lds
cmp
push
xchg
or
add
jmp
cmp
or
jmp
bnd
and
in
repz
je
popf
ins
daa
aaa
mov
ins
and
lea
fimul
repnz
movs
fisttp
mov
scas
pusha
add
cld
sti
and
pop
rcl
(bad)
adc
adc
xchg
mov
stos
mov
ss
and
cmp
mov
lahf
outs
or
add
pop
push
nop
addr16
fs
lods
(bad)
ins
xchg
or
imul
mov
repz
dec
repz
int
lds
and
call
enter
scas
push
or
xor
data16
adc
sahf
arpl
rcl
pushf
aaa
int
add
mov
frstor
loop
dec
mov
sub
jae
xchg
das
int3
or
stos
stos
jno
push
jne
cmp
das
and
fs
sbb
pop
mov
jmp
dec
sahf
mov
hlt
cmp
and
xlat
xchg
into
sbb
inc
adc
xchg
jb
int
cmc
sbb
jns
mov
and
adc
push
jo
mov
mov
push
pop
mov
cmp
sub
xchg
push
mov
fld
dec
fs
stc
adc
pop
mov
sub
ficomp
pop
ss
lods
add
pop
adc
jo
push
adc
stos
(bad)
retf
rcr
aas
add
lods
repnz
pop
inc
push
clc
push
js
mov
shr
(bad)
pusha
cmp
pusha
mov
add
test
sbb
pushf
out
mov
test
stos
or
dec
shl
sub
mov
jl
cmp
add
(bad)
out
sahf
outs
sbb
cmp
imul
(bad)
sahf
and
test
and
mov
mov
cmp
xor
ss
push
sti
retf
mov
mov
bound
in
pusha
test
ins
mov
mov
mov
xchg
or
add
je
xchg
cmp
int
mov
repnz
mov
daa
inc
(bad)
jle
jne
xor
add
add
mov
and
pop
pop
(bad)
mov
cmp
jp
jmp
aaa
(bad)
jp
jg
sub
mov
adc
push
jae
mov
(bad)
fiadd
cmp
adc
push
xor
add
push
es
pop
int
js
cmp
jle
inc
mov
lahf
xchg
movs
popf
jge
add
call
fisub
movs
pop
pushf
retf
xlat
pop
dec
hlt
ror
xchg
mov
jns
js
xor
pop
iret
aad
cmp
sub
in
call
cli
je
and
cmps
je
mov
push
fmulp
sahf
mov
(bad)
neg
mov
ss
push
mov
pop
aaa
mov
inc
pop
inc
call
fs
(bad)
push
inc
mov
xchg
mov
xlat
xchg
mov
ins
call
(bad)
(bad)
out
jg
push
xor
ror
cmps
or
call
loopne
mov
and
or
xor
test
cmp
test
into
mov
xchg
adc
cmp
dec
aad
mov
or
pop
fst
ret
add
inc
cmp
push
stos
cmp
sbb
jo
and
dec
pop
out
test
sub
mov
dec
shr
sbb
add
ds
inc
movs
cmp
lods
add
push
pop
movs
repnz
sbb
dec
mov
pop
push
cs
call
sti
verw
sub
imul
add
dec
movs
dec
(bad)
mov
dec
int3
mov
ins
pusha
std
sub
mul
fsubr
retf
popf
in
psubsb
cmp
xor
pop
fisttp
mov
adc
mov
std
fsub
push
mov
loope
sub
out
pop
inc
cs
enter
xor
xchg
ins
push
mov
shl
xchg
dec
stos
stc
mov
leave
xor
addr16
in
call
xchg
int
out
sbb
xchg
pop
je
mov
inc
or
mov
stc
adc
push
retf
inc
mov
mov
nop
popa
xor
mov
adc
les
mov
imul
pushf
cmp
sbb
or
xchg
mov
std
xlat
adc
fist
sbb
out
popa
mov
das
cmp
hlt
(bad)
xor
call
and
gs
ins
mov
scas
scas
icebp
rol
or
mov
and
call
out
gs
mov
cmp
adc
(bad)
popf
add
les
sub
popa
mov
mov
outs
xchg
repz
add
jle
sar
fs
xor
and
retf
xor
lock
stos
inc
sub
and
fdivr
mov
ret
iret
xlat
sub
pop
xor
outs
mov
xchg
test
sbb
icebp
or
mov
mov
fistp
and
mov
cmps
sar
outs
inc
sbb
inc
mov
or
xchg
dec
pop
cdq
sub
xchg
test
dec
and
and
fwait
cmps
mov
mov
ins
sbb
jg
repnz
outs
xor
scas
xchg
lock
retf
sti
mov
into
cmp
sbb
dec
sub
scas
outs
inc
pop
fwait
cmp
js
jecxz
rcr
pop
cmp
dec
mov
mov
test
push
popf
jae
ds
rcr
std
aaa
jb
push
or
scas
outs
cmc
scas
repnz
mov
ja
fistp
jne
fisub
mov
stos
mov
mov
stos
and
xchg
out
ins
div
enter
jge
hlt
pushf
into
xchg
xchg
call
or
test
push
jne
xor
push
jmp
sub
jne
leave
xchg
jp
sahf
jnp
adc
sub
cmp
jnp
popf
dec
mov
push
mov
and
ds
call
ins
mov
loopne
add
aaa
xchg
fmul
fsubr
adc
sbb
jb
dec
pop
inc
mov
mov
retf
mov
adc
imul
into
jl
cmp
pop
and
ret
sahf
pop
pop
jmp
and
mov
mov
scas
jno
enter
sbb
lds
or
and
and
dec
sub
push
(bad)
js
push
pop
popf
movs
out
(bad)
jno
cmp
xchg
fidivr
test
jge
sbb
sbb
inc
push
in
xchg
test
and
or
mov
xchg
stos
fstp
sub
in
jge
jg
push
cmp
lahf
cld
outs
pop
jns
xchg
sbb
outs
test
(bad)
dec
stos
add
jge
lods
daa
iret
pop
lods
or
cmp
mov
xchg
aad
mov
mov
arpl
sar
stos
sub
retf
shr
shr
in
sbb
int3
out
vpunpcklwd
out
sub
js
xchg
enter
call
jle
push
hlt
xor
jno
rcr
es
stc
and
mov
pop
push
leave
mov
push
jns
dec
jmp
pop
adc
sbb
(bad)
aaa
or
jle
pop
inc
lahf
cs
mov
(bad)
jne
js
push
shr
jo
jb
test
adc
xchg
sbb
jmp
sub
jecxz
cwde
push
sbb
jl
pop
sub
inc
adc
pop
mov
stos
cmp
push
sbb
pop
icebp
scas
call
scas
loop
int
pop
jmp
xor
push
sbb
sub
dec
add
mov
in
pop
xor
cwde
mov
repnz
cdq
out
ds
jne
cmps
addr16
sahf
dec
ror
xor
gs
daa
jecxz
mov
icebp
jo
mov
daa
scas
test
popa
dec
cmc
or
int3
arpl
inc
and
push
sbb
sbb
push
out
les
dec
ins
ja
and
dec
stos
dec
sbb
mov
jl
push
fcmovnu
fs
fdivr
mov
aaa
sbb
jecxz
pop
scas
mov
push
rdtsc
popf
stos
mov
(bad)
cmc
inc
fisubr
push
or
shl
int
jp
or
call
loopne
cmp
lods
mov
in
jnp
scas
jns
dec
fidiv
les
inc
daa
xor
rol
and
jmp
dec
mov
clc
mov
test
cmp
movs
dec
push
stos
add
xor
cmp
aaa
sti
aad
jno
loop
and
and
pop
fstp
xchg
cwde
out
adc
cmc
add
mov
and
cdq
adc
aad
in
lds
sahf
in
cmps
sahf
ret
retf
sbb
cmp
inc
dec
call
xlat
mov
fs
push
push
cmc
das
leave
imul
jae
push
adc
inc
xor
and
jmp
int
push
neg
and
jmp
mov
adc
fild
pop
leave
mov
or
mov
xchg
pop
add
sbb
sbb
cmps
repz
dec
(bad)
daa
movs
and
icebp
mov
mov
mov
xchg
cmp
ins
lds
add
cld
and
ins
jmp
retf
ds
and
xchg
(bad)
stos
xchg
loopne
les
lock
daa
in
push
push
inc
call
adc
mov
addr16
imul
adc
lea
adc
and
lods
jnp
dec
addr16
ja
div
xchg
xlat
push
xchg
xor
cmps
daa
pop
xchg
jnp
push
inc
mov
xchg
ins
or
cli
inc
pop
fwait
jl
push
push
push
or
jg
push
inc
mov
push
adc
xchg
fs
and
jle
shr
cmp
inc
cmp
int
aaa
out
pushf
ins
pop
mov
adc
push
fild
sbb
dec
mov
push
rol
pop
call
shl
pop
mov
aad
push
pop
sbb
xchg
cld
frstor
or
adc
adc
arpl
jnp
lods
mov
mov
jmp
pop
fnstcw
adc
mov
ret
mov
daa
cli
sub
push
mov
in
sti
retf
fsub
adc
xchg
push
shl
push
lahf
pusha
popa
add
pop
push
popf
dec
in
sub
push
(bad)
push
jp
xchg
out
sub
jo
test
js
(bad)
shr
call
cdq
fsub
xchg
sbb
fs
and
xor
fs
sub
repnz
fadd
inc
lods
push
and
mov
sub
xor
sub
retf
aam
add
adc
ins
adc
fldenv
stc
out
xchg
scas
cmp
jo
in
mov
add
inc
bound
(bad)
daa
popa
mov
mov
test
jmp
int
or
icebp
inc
jmp
cmp
lock
pop
repnz
mov
add
jmp
cld
fstp
mov
test
pop
in
pop
lds
sub
imul
xlat
push
(bad)
in
les
outs
cmps
mov
sbb
or
std
nop
sbb
sub
iret
fisubr
cmps
test
loope
hlt
and
js
sti
cmp
retf
scas
jmp
mov
xchg
leave
add
lock
inc
(bad)
sar
or
leave
and
push
aaa
dec
aaa
call
or
test
xchg
sahf
(bad)
mov
mov
call
movs
jmp
inc
xchg
pusha
(bad)
ja
inc
add
push
cli
dec
retf
push
push
mov
movs
push
ins
aas
jbe
es
dec
xchg
sbb
icebp
(bad)
adc
leave
fldcw
jne
pop
ja
pop
jge
out
lods
imul
push
inc
pop
and
sti
dec
in
sbb
mov
mov
out
add
cwde
or
adc
adc
cmp
xlat
xor
dec
icebp
and
push
cmps
aad
aam
pop
sbb
xor
and
fdiv
sbb
push
xchg
pop
fdivr
sub
push
outs
push
pop
push
mov
outs
inc
mov
rcr
mov
push
dec
cmp
push
or
dec
push
jb
inc
jmp
mov
(bad)
jl
imul
dec
push
sti
push
es
sbb
retf
repnz
sbb
lea
cwde
fmul
jmp
movs
add
inc
imul
xchg
sub
dec
popa
(bad)
icebp
outs
in
lods
stos
lea
fcmovnb
fld
and
mov
int3
mov
(bad)
call
repz
mov
add
in
sbb
adc
ja
out
sub
xchg
test
shl
cmc
push
aam
repnz
push
and
imul
jo
mov
ret
test
and
xchg
loop
cld
sar
movs
sub
sub
(bad)
dec
lahf
in
ss
pushw
cmps
add
mov
into
mov
push
push
test
add
ja
jb
call
rcl
(bad)
pop
sub
jb
xchg
jno
cmps
inc
mov
call
adc
retf
jae
loope
push
cmp
cmc
imul
aas
mov
ins
mov
mov
clc
je
and
das
lods
fwait
mov
xchg
add
enter
fwait
add
pop
shl
or
icebp
je
inc
mov
or
xchg
cmp
mov
dec
jne
(bad)
dec
ins
and
enter
stc
mov
es
aaa
xchg
mov
inc
addr16
popf
jg
icebp
cwde
sub
stc
enter
jecxz
lods
inc
pushf
push
adc
je
adc
stos
hlt
fwait
and
je
xchg
xchg
xchg
sbb
dec
imul
sub
mov
mov
sahf
adc
ficomp
ret
push
push
std
cmp
inc
retf
push
xchg
or
sub
inc
fs
adc
or
enter
jp
push
lahf
cmps
ss
fcom
adc
lods
fs
cmc
cmp
inc
fidivr
adc
js
cmps
mov
pop
(bad)
pop
into
sbb
and
and
(bad)
out
(bad)
or
pop
pop
fcomp
cmp
or
into
or
inc
push
fld
adc
sbb
test
hlt
fs
xchg
dec
lea
(bad)
cli
inc
ss
xchg
xchg
and
out
(bad)
bound
cmps
(bad)
ss
sub
inc
icebp
mov
scas
fistp
retf
mov
ins
fdivr
in
add
outs
push
push
inc
jl
mov
cmp
movs
mov
cmc
in
jge
(bad)
adc
js
inc
(bad)
in
in
ja
pop
jmp
mov
loopne
pop
mov
xor
inc
call
movs
ret
iret
mov
gs
sbb
xor
in
xor
jbe
test
xlat
xchg
mov
mov
addr16
push
call
mov
pop
je
cmp
cmps
arpl
and
movs
xchg
push
jns
xor
or
jno
bts
(bad)
fiadd
mov
mov
add
inc
lock
imul
cmps
dec
(bad)
jmp
push
(bad)
(bad)
push
add
dec
call
xor
out
hlt
aas
mov
fdivr
sbb
xor
test
jbe
and
ret
cmp
movs
add
push
cmp
jns
retf
frstor
jb
fist
test
int
into
imul
lahf
repz
add
sbb
arpl
adc
and
(bad)
aas
inc
mov
ror
xor
out
aas
push
cmps
test
xchg
adc
push
fmul
das
xor
mov
inc
bound
or
fnstenv
cmp
and
mov
mov
and
scas
scas
daa
cmp
outs
dec
jl
pop
sub
and
jmp
ret
lods
ds
movs
pushf
xor
sub
mov
jnp
sti
scas
jnp
mov
add
ja
dec
rol
dec
lea
test
mov
push
sub
gs
imul
mov
and
adc
shl
xor
add
pop
jae
add
xchg
jmp
mov
xchg
mov
sahf
xchg
sub
dec
test
inc
jp
shl
dec
cwde
dec
(bad)
enter
adc
fwait
inc
mov
aad
mov
ret
enter
xlat
sub
dec
iret
cmp
int3
aaa
dec
gs
ja
sub
lods
shr
pop
push
jmp
mov
sbb
cmps
dec
cmp
mov
pop
cmc
pop
or
push
and
je
jge
scas
stc
mov
imul
shl
test
jge
push
je
jecxz
sub
movs
ins
inc
pop
and
mov
pop
cmps
jl
iret
icebp
outs
cmp
jae
jmpw
test
aas
push
rcr
xchg
xchg
and
mov
pop
(bad)
mov
outs
js
and
sbb
and
les
test
or
cmps
xor
movs
test
sar
lods
sbb
loop
push
aad
ss
inc
movs
fsubr
shr
sub
out
aad
or
sub
hlt
fs
push
stos
xor
push
and
add
mov
mov
mov
sub
mov
ss
push
inc
lahf
pop
or
jns
mov
xchg
jno
aad
and
mov
je
fmul
push
inc
mov
fs
imul
cmp
cmp
repz
ds
call
std
mov
jns
mov
out
jmp
mov
sub
stc
dec
scas
pop
push
pop
fistp
scas
test
das
ins
inc
inc
cmp
in
mov
dec
pop
adc
jg
mov
clc
cmp
or
sti
sbb
enter
bound
out
les
sub
in
sub
cdq
cmc
test
adc
or
pop
ds
daa
shl
mov
fiadd
mov
or
mov
jmp
cmp
mov
jb
jns
cld
scas
lods
out
shl
sbb
lahf
inc
aam
daa
push
movs
adc
iret
in
fsubr
aaa
and
xor
call
cmp
xor
outs
(bad)
enter
dec
ret
inc
xor
cld
outs
push
das
or
xchg
add
cmp
and
mov
cmp
adc
pop
cmp
xor
les
push
es
imul
push
out
xchg
cmc
sbb
fisttp
pop
xchg
mov
and
xor
ds
mov
mov
cmp
sbb
pop
cmp
frstor
sub
jg
iretw
dec
xchg
adc
adc
lahf
sub
mov
(bad)
push
mov
xchg
test
cmc
jmp
sbb
dec
scas
outs
jnp
pusha
test
sbb
aam
xor
or
in
ja
jg
push
xor
xchg
out
in
and
or
sub
aam
repnz
int3
push
ins
pop
xchg
or
ds
sub
cmp
jge
or
mov
push
sub
adc
clc
ss
push
test
or
js
aaa
imul
xor
outs
cdq
lahf
adc
dec
inc
xor
movs
sub
jbe
push
mov
retf
push
jb
add
mov
ins
lahf
into
push
popf
or
jb
or
pop
adc
push
dec
pop
call
fiadd
fldcw
dec
pop
pop
cli
sub
(bad)
lea
test
call
sbb
ret
push
inc
xchg
fdivp
test
mov
(bad)
push
test
xlat
in
mov
xchg
mov
enter
adc
cmp
add
lods
lock
hlt
retf
movs
fist
mov
jae
stos
popf
sbb
jp
sbb
shr
xchg
(bad)
jl
repnz
neg
shl
stc
xchg
jmp
outs
dec
push
push
mov
popa
push
jns
nop
sahf
sub
fnsave
jmp
enter
add
sbb
mov
sub
xor
push
cwde
je
fcomp
gs
xchg
(bad)
addr16
lds
cld
dec
std
inc
and
bnd
popa
mov
out
jo
adc
pushf
mov
test
test
or
sar
sar
push
popa
push
cli
and
inc
ss
sbb
das
dec
sub
pop
pop
mov
in
icebp
pop
mov
add
sub
sahf
mov
sbb
pop
cld
xchg
sub
xchg
rcr
clc
aad
repnz
jl
adc
cmc
shl
pushf
lods
movs
push
fcmovne
xchg
out
jge
pop
stos
pop
mov
cmp
sub
mov
inc
xchg
dec
clc
push
std
test
cmp
in
mov
fsub
adc
sahf
pop
dec
adc
fadd
pop
inc
xchg
pop
xchg
rcl
sbb
inc
cmp
xchg
mov
cmps
pop
retf
mov
fdivr
sahf
(bad)
setle
cld
fisubr
test
popf
mov
xchg
into
pop
cmp
call
mov
push
add
mov
adc
add
loope
std
pop
out
imul
sar
or
popf
and
popa
aad
pop
pop
jl
fs
xchg
dec
pop
fst
or
or
push
ds
ins
jle
hlt
xchg
push
pop
sub
into
sbb
jae
call
or
fld
cmp
dec
add
inc
mov
and
mov
pop
ds
sub
jl
sar
les
pusha
cli
add
dec
adc
jno
xchg
mov
mov
xor
push
repnz
or
inc
cdq
rcr
pusha
shl
cwde
or
(bad)
xor
fsubr
shl
cmp
out
addr16
xor
ss
cli
outs
jp
iret
cmp
push
or
push
or
loopne
out
aaa
jnp
mov
push
into
cwde
xlat
aaa
(bad)
fst
dec
mul
mov
mov
mov
je
sbb
dec
ret
mov
imul
int
cli
adc
or
pusha
xchg
and
mov
pop
jb
in
xchg
dec
nop
jp
pop
mov
adc
sub
sub
sub
test
leave
sub
ins
or
dec
pushf
sbb
inc
repnz
jae
jne
fisttp
xchg
pop
fldenv
stc
sbb
xchg
scas
xor
cmp
popf
or
jle
(bad)
out
pushf
scas
add
mov
lock
sbb
pop
xchg
(bad)
dec
mov
inc
repz
out
jecxz
dec
or
mov
gs
stc
es
cli
aad
push
inc
das
jmp
fs
call
lea
lock
mul
add
scas
jno
fiadd
mov
sbb
stos
jo
xor
inc
int3
retf
mov
loopne
sbb
mov
(bad)
sub
mov
out
adc
sbb
pushf
shl
sahf
mov
mov
ret
xchg
cli
loop
jae
mov
and
xor
iret
dec
mov
ins
stos
pop
out
jo
sbb
and
adc
or
jb
adc
popa
nop
(bad)
iret
mov
or
or
fwait
inc
xchg
dec
jge
stos
neg
cmp
xor
(bad)
aaa
or
add
test
xchg
ins
ret
push
xchg
or
mov
cmps
pop
push
ins
cld
sbb
mov
sbb
fcom
or
out
adc
out
icebp
or
stos
test
test
pop
mov
sub
mov
cmc
rcr
cwde
call
call
lods
test
dec
xchg
mov
movs
xchg
and
inc
sahf
nop
ret
mov
jmp
(bad)
xchg
dec
cmps
push
cwde
aaa
cmc
add
pusha
mov
add
fcomp
sub
movs
cmps
push
cmp
sub
scas
mov
adc
pop
or
fimul
js
adc
push
lahf
sbb
and
mov
stos
hlt
and
or
cmp
pop
adc
or
adc
outs
inc
pop
scas
inc
movs
nop
or
jle
aam
(bad)
and
xor
jg
push
inc
mov
in
leave
sub
xchg
pop
stos
(bad)
sbb
hlt
pop
or
aas
pushf
mov
push
inc
pop
stos
cmp
inc
mov
pop
xchg
sbb
scas
aad
mov
jge
sbb
pop
jo
and
cmp
(bad)
xor
jge
inc
call
pusha
jnp
inc
xlat
rcl
dec
sbb
push
and
outs
cwde
pop
xchg
cmps
imul
xor
sub
cli
jnp
jnp
int
loope
jnp
mov
mul
jns
push
es
inc
xchg
imul
xor
into
cmp
mov
std
pop
xchg
retf
movs
aaa
mov
es
call
shl
inc
pushf
cmp
jle
pushf
loop
xchg
mov
cmp
xor
xchg
adc
sub
dec
sahf
push
mov
jp
sub
jae
call
cmp
test
sub
lahf
jae
lea
mov
jmp
loop
sub
cmp
add
call
loope
sar
arpl
add
test
iret
fbstp
push
cmp
cmp
mov
loop
mov
inc
inc
add
or
pop
fisub
sbb
cmps
dec
shl
(bad)
pop
pusha
sbb
imul
or
(bad)
cdq
je
clc
ins
imul
pop
jb
inc
pop
push
fstp
inc
xchg
loopne
push
addr16
neg
test
cmp
rcr
or
add
sahf
(bad)
loope
test
mov
and
cmp
fs
out
outs
xor
xor
mov
add
and
push
pop
mov
jle
pop
mov
jnp
xor
mov
(bad)
mov
imul
scas
sbb
xor
pop
pop
mov
jo
jp
inc
push
clc
push
stos
push
lea
jo
xchg
xchg
ret
jnp
pop
repz
iret
mov
stos
inc
sbb
pusha
cmp
ret
(bad)
jle
fmul
push
or
xor
in
jb
mov
loopne
inc
lahf
aad
(bad)
ret
and
adc
push
jb
out
out
stos
and
dec
jnp
lea
inc
fmul
adc
dec
(bad)
fisubr
in
sub
or
dec
test
ins
or
retf
mov
jl
inc
lods
sti
mov
lds
push
and
push
out
bound
xlat
xchg
lods
out
push
bound
xchg
out
enter
mov
add
inc
int
rcr
mov
cmps
push
xchg
mov
jnp
jb
movs
jl
cs
push
jb
sti
jnp
out
iret
xchg
jmp
mov
std
jge
xchg
jbe
out
sahf
sbb
and
out
sti
push
ret
arpl
xor
fld
inc
ret
mov
sbb
cmp
add
mov
cmps
or
aaa
inc
rcr
or
mov
jno
cld
bound
mov
loopne
add
mov
xchg
or
adc
ins
push
(bad)
mov
dec
pop
mov
movs
xchg
sbb
push
or
js
inc
lods
dec
add
inc
test
nop
mov
xchg
jae
test
stc
sbb
dec
fbstp
sbb
inc
jbe
icebp
mov
jl
imul
push
add
lea
adc
sub
mov
inc
int
sub
fldcw
xchg
sub
xor
push
pop
xor
jo
sub
(bad)
jle
addr16
test
cmps
sub
xchg
shr
fsubr
dec
xor
mov
mov
(bad)
adc
repnz
sbb
xor
or
mov
mov
or
pop
dec
int
jmp
test
out
push
or
inc
pop
inc
sub
std
cmp
jns
cmps
mov
(bad)
mov
pop
popf
test
dec
mov
dec
test
loope
bswap
pop
or
sbb
xor
in
mov
adc
iret
popa
lahf
add
dec
xor
mov
pop
and
sub
adc
xchg
jnp
lods
in
pusha
sti
jmp
lahf
jbe
inc
sub
cmp
loopne
out
std
add
jae
daa
jecxz
xchg
rcl
movs
fwait
mov
test
add
data16
mov
imul
bound
cli
adc
sbb
ja
jg
in
or
adc
or
outs
xor
sbb
cmp
or
aas
inc
in
mov
std
jle
ja
fnsave
je
sub
cmp
pop
mov
jae
xchg
fs
test
aam
mov
mov
jns
bsr
fcmovnbe
test
jge
imul
mov
or
js
sbb
or
leave
pop
arpl
dec
mov
pop
and
pop
mov
in
push
enter
aas
aas
mov
inc
ss
ret
out
mov
loopne
pop
(bad)
mov
loopne
push
pop
test
fdivrp
ja
hlt
frstor
call
enter
add
(bad)
lea
test
mov
push
xchg
(bad)
lahf
xor
movs
cmp
arpl
cli
loope
xchg
add
sub
outs
leave
aaa
jmp
mov
or
call
xchg
dec
sbb
xor
xor
fistp
cwde
sub
mov
int3
mov
popf
mov
xlat
leave
pop
mov
pop
pop
jp
pop
inc
jp
ins
imul
and
dec
cwde
inc
sub
and
repz
retf
jge
adc
inc
xchg
pop
mov
mov
aam
lods
cmp
stos
cmps
mov
movs
jecxz
push
call
sbb
sbb
or
aam
mov
aas
mov
sbb
jo
mov
clts
xor
pop
not
std
iret
sbb
mov
sbb
sahf
call
xor
bound
xchg
jbe
adc
adc
and
mov
inc
dec
inc
jbe
add
push
icebp
and
sbb
dec
sbb
loop
pop
popa
push
adc
lods
ret
pusha
or
pop
fldenv
add
loope
push
(bad)
repz
jno
jb
nop
mov
sbb
mov
clc
lock
jae
out
or
in
aaa
mov
cmps
loop
out
pushf
mov
frstor
pushf
xchg
pop
iret
adc
repz
jnp
mov
stos
out
mov
mov
call
push
mov
jb
mov
into
mov
sbb
pop
arpl
pop
in
inc
sub
imul
xor
dec
int
cmps
nop
sub
push
and
jmp
push
mov
mov
mov
dec
in
dec
add
jb
hlt
je
pop
fiadd
push
cmps
js
sbb
mov
sbb
inc
xor
mov
cld
cmc
xor
dec
out
div
mov
rcl
push
cmp
jge
sbb
adc
call
(bad)
outs
mov
(bad)
dec
fadd
jmp
rcr
js
fisttp
jno
pop
adc
mov
sbb
jnp
adc
mov
adc
adc
push
pop
xor
pop
int
push
pop
push
adc
sbb
in
jmp
push
fwait
dec
mov
push
pusha
hlt
and
out
sti
sbb
mov
push
ror
aad
mov
lods
and
jg
ror
jecxz
xor
pop
call
push
ja
add
push
pop
int3
inc
cmovne
lahf
mov
(bad)
mov
jmp
inc
loopne
aaa
imul
enter
pusha
mov
mov
adc
inc
or
jecxz
loopne
cmp
pop
out
adc
dec
mov
js
cld
mov
jmp
stc
adc
cmp
dec
das
in
push
fs
jg
(bad)
jo
ss
cmp
inc
repnz
stos
mov
aam
cmps
cmp
cmp
jmp
inc
test
dec
lods
cmp
es
scas
dec
xchg
sub
cmp
and
cmp
lods
rcl
or
mov
in
cmp
dec
pop
std
ret
jl
mov
call
lahf
fistp
mov
div
ins
imul
repz
adc
pop
mov
or
sub
cmc
imul
cmps
retf
cmp
repz
xchg
xchg
fsub
jp
xor
mov
xchg
push
hlt
jbe
aaa
pop
(bad)
std
lea
add
sar
mov
pop
inc
fcmovb
jmp
push
imul
xchg
loop
fsubr
aad
jp
ins
movs
mov
rol
sbb
stos
adc
stos
ret
imul
outs
pop
push
out
daa
aad
jge
jg
daa
call
xor
push
gs
stos
mov
push
jmp
mov
das
fsub
fistp
pop
jp
iret
and
sub
mov
shl
out
jg
and
cmps
test
ds
push
sub
xor
push
jge
icebp
pop
mov
mov
cmp
mov
rcl
scas
fsub
cmps
bound
jp
push
mov
int
data16
sub
mov
pushf
imul
adc
jbe
sahf
mov
dec
cmps
push
and
or
fistp
movs
pushf
in
or
dec
sar
mov
push
xor
mov
test
cld
movs
sti
xchg
loope
cwde
xchg
shr
aaa
sbb
aaa
or
call
pop
push
or
loope
lods
rcr
inc
(bad)
fmul
xchg
add
popf
cmc
cwde
in
mov
mov
jnp
jg
xchg
inc
into
into
ss
mov
xor
enter
fiadd
loop
sub
jne
inc
shl
(bad)
mov
jnp
ins
movs
test
xor
call
sub
sbb
fdiv
xchg
jl
sbb
add
es
adc
aas
lock
push
mov
stos
jge
cwde
pop
addr16
inc
dec
out
dec
ins
mov
inc
cmps
mov
push
pop
loop
cmp
jl
leave
ret
iret
and
adc
mov
xchg
gs
xchg
shl
lea
test
mov
adc
ret
sub
test
shl
cwde
xchg
sub
data16
stos
les
icebp
mov
nop
mov
jne
xor
gs
int
pop
pop
push
xchg
mov
push
add
inc
or
imul
std
jle
add
mov
aaa
cmp
add
and
stos
adc
inc
cmps
sub
inc
in
inc
das
(bad)
std
fistp
or
inc
adc
neg
imul
repnz
jmp
mov
fwait
adc
cmc
retf
inc
gs
(bad)
ror
jge
jo
stos
push
pop
cmp
popf
xor
ins
dec
and
sub
rol
in
and
fisubr
pop
jp
and
pusha
or
inc
imul
repz
out
xlat
pop
adc
inc
test
inc
push
dec
xchg
push
leave
sub
pop
add
sub
xlat
(bad)
scas
push
pop
and
mov
sub
push
jmp
jmp
inc
push
mov
xchg
jge
sahf
and
addr16
jno
xchg
xor
or
aas
in
sub
jb
lea
scas
loopne
lods
pusha
mov
jg
das
pop
neg
imul
add
xchg
and
aam
test
mov
and
test
int3
sub
jecxz
call
mov
mov
in
xchg
mov
out
xchg
jns
retf
inc
js
idiv
das
jp
bound
dec
icebp
lea
xchg
dec
jge
mov
xor
mov
adc
lds
xor
sbb
or
dec
mov
retf
stc
stos
cwde
mov
jl
movs
jae
push
push
inc
pop
fcomp
and
fld
lock
sub
clc
pop
imul
xchg
jns
mov
pop
stc
cmps
lahf
shl
jae
loopne
pop
pop
push
call
pop
cmc
pop
pminsw
out
push
std
rol
cmovle
test
and
jae
or
dec
pop
xor
push
inc
repnz
xor
aad
sbb
inc
cmc
mov
lods
ror
retf
fiadd
lods
ret
sbb
(bad)
hlt
lds
mov
je
(bad)
(bad)
pop
and
lods
icebp
mov
in
inc
sar
scas
xor
aaa
jg
in
mov
pop
mov
jnp
xor
icebp
imul
fwait
in
fldcw
pop
xchg
mov
push
push
adc
repz
clc
mov
das
push
mov
cmp
pop
aad
in
into
pushf
lahf
jge
scas
push
loope
add
push
inc
lock
movs
xchg
pusha
jge
add
dec
call
movs
and
mov
jmp
fidiv
ret
cs
gs
es
lods
loop
retf
aas
and
fld
js
push
cmp
jle
ss
fstp
pop
outs
push
pop
push
and
adc
xor
inc
pusha
(bad)
xchg
or
in
xchg
in
hlt
(bad)
pop
xchg
arpl
pop
mov
mov
das
add
push
test
(bad)
jle
bound
(bad)
fdivr
leave
push
das
cmp
lds
xchg
loope
adc
pop
sahf
pop
mov
out
lods
(bad)
jae
sbb
lea
dec
inc
stos
and
mov
fwait
loope
lods
xchg
movups
dec
or
jge
outs
push
jmp
imul
jnp
push
mov
fiadd
inc
fcom
popf
fst
and
mov
call
jg
adc
jno
fild
xchg
lods
outs
xor
(bad)
out
ins
int
cmp
push
mov
ret
movs
out
xchg
ja
sub
mov
mov
pop
pop
out
sbb
inc
adc
xlat
jge
mov
xor
pop
fst
add
mov
lahf
rol
cld
fcomi
xchg
cwde
mov
gs
ret
or
cmps
or
mov
fldenv
inc
(bad)
xor
loopne
dec
xchg
jecxz
repnz
jno
popa
add
mov
hlt
push
ficom
sub
cwde
sbb
scas
(bad)
lods
je
push
sbb
and
dec
ss
mov
sub
dec
and
lahf
loope
aaa
sbb
idiv
push
pop
xor
stc
ja
push
stos
lahf
jg
adc
icebp
aad
mov
mov
mov
fdiv
inc
push
and
jb
adc
out
pop
test
fnstenv
cld
mov
retf
dec
mov
and
std
popf
pop
push
add
or
imul
or
pop
cmps
mov
sbb
int3
ja
jno
jl
push
xor
fs
xchg
in
xchg
pushf
lahf
jmp
mov
or
imul
push
adc
cmc
mov
add
push
and
stos
sahf
lea
cmp
jae
or
sbb
sub
ds
arpl
cmp
pop
lock
outs
(bad)
es
add
daa
mov
int
aam
movs
mov
mov
mov
(bad)
mov
push
rcr
xchg
call
or
add
scas
mov
out
ins
or
js
adc
push
stos
xor
mov
rcl
sbb
test
mov
push
jns
xchg
ss
jb
imul
mov
popa
push
and
lods
mov
inc
retf
xor
sbb
lahf
lahf
mov
jb
mov
inc
fsubr
or
leave
sbb
push
push
retf
mov
add
inc
cmp
pop
pop
jmp
xchg
pushf
mov
xor
mov
mov
loope
push
jmp
sub
mov
add
or
(bad)
mov
jnp
retf
fstp
or
gs
sub
mov
jp
retf
std
in
pusha
enter
inc
dec
std
popf
and
sbb
hlt
add
(bad)
push
cmps
scas
push
mov
pop
xchg
rcl
test
lods
repz
inc
call
loop
inc
mov
push
enter
sahf
jae
and
dec
popf
inc
mov
nop
sbb
mov
(bad)
cmp
add
(bad)
daa
int3
sub
xchg
xor
clc
fucomp
push
mov
pop
sar
pop
xchg
inc
out
or
loopne
int
(bad)
sbb
sbb
arpl
pop
aas
out
es
xchg
push
or
mov
push
dec
pop
rol
or
jge
jl
cmps
jo
push
call
and
nop
and
mov
sub
lock
outs
movs
test
and
cmp
out
sub
rcr
jb
(bad)
hlt
dec
out
(bad)
iret
pushf
pusha
cwde
aaa
xor
js
jns
bound
mov
xor
sbb
test
lods
push
sbb
xor
(bad)
xchg
movs
lods
mov
mov
dec
or
mov
push
cmc
or
mov
aas
lea
push
and
cmp
jae
data16
cs
(bad)
xor
cmp
retf
neg
in
cld
adc
jbe
mov
dec
inc
aas
cmp
mov
mov
iret
cmp
in
ja
mov
mov
cmps
(bad)
pmullw
and
test
nop
ret
sub
retf
int
push
dec
cmp
and
movs
mov
fidivr
push
push
mov
adc
xchg
adc
imul
mov
push
dec
outs
iret
in
fistp
xchg
mov
push
pop
(bad)
fimul
xchg
bound
repz
cmp
lds
fild
pusha
xchg
dec
scas
cmp
(bad)
sbb
addr16
add
xchg
mov
cdq
fldenv
addr16
mov
jl
out
ins
arpl
dec
push
ror
leave
mov
rcl
stos
add
xchg
test
adc
out
pop
les
sbb
adc
sub
xchg
xchg
pop
rcl
arpl
dec
push
add
repnz
out
sub
dec
out
mov
cmp
fwait
leave
mov
(bad)
xchg
or
gs
mov
jb
adc
lahf
cmc
int3
es
dec
ficom
mov
cdq
fldcw
mov
into
out
mov
xchg
or
or
mov
or
cmps
fsub
cs
push
fcomp
jle
test
fbld
adc
push
mov
mov
adc
aad
push
xlat
inc
cdq
(bad)
clc
loope
cmps
jle
push
xchg
(bad)
dec
cld
or
repnz
adc
jmp
sbb
(bad)
loope
mov
cwde
not
imul
and
in
pop
jno
mov
inc
and
lock
xor
mov
jnp
xchg
pop
cmc
sub
lea
sub
mov
leave
push
aaa
mov
xor
dec
sub
nop
xor
push
cmp
imul
sbb
outs
(bad)
lea
push
mov
retf
test
jmp
or
shl
lahf
int3
std
fidivr
dec
arpl
idiv
mov
test
shl
adc
or
fisttp
mov
fmul
stos
js
pop
jge
push
aam
mov
sti
int
repnz
cs
pop
cdq
and
shl
mov
pop
retf
mov
(bad)
lock
call
pop
and
cmp
mov
and
js
mov
push
add
mov
lods
into
lds
outs
ins
adc
retf
int
and
push
mov
push
mov
ror
call
cmps
sbb
mov
mov
fs
stos
or
mov
fstp
scas
sub
sbb
mov
cwde
jecxz
pop
mov
aas
in
or
ret
nop
stos
xchg
test
(bad)
push
stos
pop
gs
add
ret
stos
fmul
pusha
popf
xor
dec
pusha
in
dec
mov
sbb
lods
and
jle
(bad)
lahf
xchg
cs
(bad)
xor
mov
cmp
sti
das
push
movs
sub
aam
call
push
mov
dec
mov
fwait
imul
mov
cmp
cmps
ja
jbe
cmp
(bad)
lea
mov
xchg
(bad)
xchg
mov
xlat
enter
push
dec
dec
and
and
cld
inc
fadd
mov
test
jp
pop
sbb
cmp
ins
add
dec
in
mov
sti
cmp
jno
lahf
or
sub
xlat
test
mov
mov
mov
jp
pop
mov
std
out
or
cmps
pop
jle
xlat
aaa
retf
data16
int
xchg
fxch
mov
ss
enter
fs
xor
xchg
test
mov
and
scas
and
push
push
and
es
sar
outs
je
outs
int
add
push
mov
arpl
push
dec
push
push
movs
lods
ss
jb
jp
push
cmp
int
lds
xchg
retf
retf
dec
fistp
popf
mov
xchg
cmp
fwait
inc
adc
nop
mov
fs
inc
inc
(bad)
popa
cmp
xchg
dec
mov
xor
push
push
jmp
push
aaa
inc
adc
ss
adc
(bad)
(bad)
push
xor
nop
cli
xor
fs
stos
out
pop
leave
rcr
adc
push
cmp
sub
scas
mov
popf
mov
loop
into
lods
push
xchg
jb
pop
xchg
mov
mov
lahf
iret
jmp
push
loop
scas
loopne
popf
aaa
jo
jns
pop
nop
icebp
shl
bound
push
loope
cwde
div
mov
ror
ds
stos
mov
or
mov
movs
jp
sbb
pop
fnclex
cmp
mov
and
and
adc
aas
fmul
pop
jbe
cwde
mov
repz
cli
jne
fsqrt
aaa
mov
push
out
dec
mov
outs
aaa
mov
dec
ret
push
retf
jle
xchg
fwait
ins
sub
jnp
out
mov
sbb
cwde
cld
nop
inc
adc
mov
xchg
call
pop
es
jnp
imul
(bad)
retf
sbb
add
sub
mov
test
ins
mov
into
lock
or
js
jmp
dec
push
mov
dec
mov
cwde
retf
test
int
jle
push
out
in
push
test
(bad)
cmps
and
mov
add
mov
mov
mov
cmp
inc
mov
mov
scas
push
push
js
stos
cmps
bound
jns
xor
xor
out
adc
xor
fidivr
inc
ins
mov
push
loopne
mov
push
movs
jae
mov
jle
xchg
xchg
jge
sbb
in
push
mov
div
movs
cs
ds
jbe
sbb
lahf
icebp
push
jp
pop
xchg
jmp
add
inc
adc
lock
pop
(bad)
fiadd
cmp
ss
cmp
stos
jecxz
fs
fiadd
push
enter
mov
ins
jecxz
mov
jmp
cld
stc
adc
(bad)
add
mov
aas
and
mov
sub
(bad)
xchg
dec
ret
add
pop
mov
ds
jmp
mov
cwde
pop
inc
arpl
add
stos
aas
cmc
hlt
push
mov
stos
inc
addr16
cld
jne
cmp
mov
mov
sahf
imul
xchg
push
push
into
push
and
jge
push
repz
(bad)
ins
push
inc
inc
cmp
imul
cmc
adc
push
in
scas
sub
stos
cmp
test
inc
push
outs
adc
xchg
(bad)
int
mov
inc
push
out
repnz
adc
mov
mov
xchg
jmp
pop
loopne
call
and
fucomp
outs
fisttp
out
out
std
js
push
into
aad
imul
jno
ret
dec
jmp
jo
push
scas
mov
cmp
stos
loop
jae
dec
jge
out
sar
(bad)
push
mov
xchg
cmps
lods
xchg
xor
outs
test
adc
sub
and
jmp
jp
jecxz
cmps
mov
scas
or
dec
xor
(bad)
adc
push
mov
retf
pop
xchg
pop
xlat
inc
jl
les
into
ins
fcomp
les
xchg
test
inc
arpl
add
fbstp
(bad)
push
in
ret
sbb
cmps
cmp
in
jb
jmp
sahf
push
mov
mov
mov
out
jle
push
sub
dec
lahf
dec
clc
aad
inc
clc
js
inc
xor
push
sbb
icebp
dec
(bad)
dec
loope
inc
dec
(bad)
out
xchg
cmp
lods
retf
or
mov
xchg
and
pop
lea
sti
into
xchg
je
mov
dec
and
leave
ror
fcmovnb
stos
test
jae
push
out
jns
cld
enter
sbb
in
stos
int3
data16
xchg
mov
scas
inc
fcomp
ds
mov
adc
(bad)
sub
mul
gs
icebp
scas
push
fidiv
and
and
cmp
adc
mov
sbb
cmp
pop
or
rcl
call
dec
push
stc
cwde
xor
xor
xor
mov
push
and
mov
shl
cmc
cmp
dec
loop
test
adc
add
je
xor
loopne
je
(bad)
test
cwde
movs
pushf
neg
pop
xchg
xchg
push
xchg
mov
ffreep
cmp
in
add
ins
pop
loop
push
add
jl
mov
ins
mov
loop
and
popf
pusha
push
and
pop
neg
sti
mov
sub
xchg
daa
scas
leave
stos
ret
pop
scas
test
dec
in
cmp
out
outs
adc
loopne
push
jnp
aas
out
xchg
push
push
bnd
jae
mov
adc
pop
iret
outs
push
outs
addr16
pop
mov
repz
aas
pop
and
arpl
xor
lods
mov
int3
(bad)
int
inc
das
fadd
inc
xor
push
rcl
in
icebp
test
stos
cmps
xor
and
loopne
pop
loope
test
jo
or
icebp
sub
adc
mov
stos
jle
shl
jbe
sub
push
jne
jge
or
dec
dec
dec
sub
adc
dec
outs
jle
add
mov
jo
cmp
imul
cmp
jmp
inc
sub
mov
iret
in
push
mov
mov
popf
adc
dec
test
mov
mov
cwde
sbb
mov
into
jne
sbb
adc
movs
ficom
or
sbb
cli
jno
(bad)
mov
or
dec
xor
and
std
and
mov
xor
inc
cmp
cld
icebp
aaa
ds
sbb
lea
xlat
(bad)
pop
dec
call
idiv
inc
loop
lds
sbb
aam
add
call
jl
cmp
xchg
fsub
or
mov
sub
ins
add
out
xchg
xor
clc
and
out
ss
retf
add
jle
inc
movs
or
(bad)
push
in
adc
leave
add
fistp
lods
xor
int
icebp
cli
dec
add
popa
or
fsubr
cmp
iret
xchg
js
mov
mov
fidivr
or
mov
ret
in
adc
xor
jl
leave
(bad)
retf
lahf
cmp
test
inc
or
sub
mov
jne
hlt
(bad)
jge
inc
mov
das
jns
xchg
into
and
test
addr16
scas
cdq
cmp
xor
mov
mov
pop
adc
and
icebp
out
mov
cmps
push
shr
xchg
jmp
aas
(bad)
repz
fld
mov
movs
mov
push
mov
clc
inc
mov
enter
mov
cld
ja
fldenv
dec
adc
ins
hlt
es
stc
pop
je
bound
mov
sbb
movs
ror
pop
push
inc
push
bound
push
inc
repz
fdivp
addr16
xchg
lods
add
fiadd
outs
sahf
xchg
pop
cdq
sbb
add
jp
retf
push
clc
in
aad
pop
stos
adc
retw
das
inc
lea
lea
dec
cmp
mov
sbb
sub
jbe
jg
pop
xor
sbb
mov
clc
sub
lods
call
xor
sub
sbb
(bad)
inc
in
adc
mov
xor
or
and
jbe
xor
jl
retf
adc
sub
xor
mov
test
mov
push
jb
call
xor
in
or
jae
das
fs
mov
xchg
sub
outs
jmp
jmp
out
les
mov
xor
mov
xchg
mov
jo
xchg
push
dec
movs
daa
in
ins
cs
movs
dec
xor
cmp
xchg
lock
jle
adc
and
popa
jp
mov
std
sub
enter
ffree
and
in
mov
mov
sbb
and
mov
push
inc
cmp
and
push
or
sbb
and
jg
stos
sbb
idiv
pop
shr
fcom
cs
dec
inc
arpl
aam
dec
mov
and
scas
leave
dec
jmp
inc
cmp
repnz
popf
or
cmp
mov
ret
sub
add
inc
imul
mov
pop
pushf
jmp
pop
pop
dec
pop
nop
int
lock
out
leave
fsubr
rcl
mov
or
jmp
adc
lods
dec
inc
movs
fisub
stc
fs
mov
in
push
repnz
sub
test
cmc
push
push
and
cmp
mov
sar
or
(bad)
mov
pop
mov
(bad)
ror
std
and
and
inc
mov
dec
shl
push
mov
dec
push
or
out
push
ret
xchg
adc
(bad)
jns
popa
fist
and
push
cmps
je
js
or
fs
sub
hlt
dec
and
in
in
stos
cmp
sbb
fs
sub
cmps
dec
call
ja
in
mov
ret
lods
xor
lock
xchg
test
test
jne
int
jg
cs
adc
push
or
xchg
dec
dec
fs
adc
test
push
jae
popf
cmp
push
popa
fdivr
sub
sub
cli
push
xchg
jecxz
in
test
push
mov
adc
mov
les
cwde
fldenv
shl
cmp
sub
jmp
xchg
repnz
fnstenv
dec
sub
push
pop
push
push
imul
cmc
mov
sub
mov
mov
push
sbb
jns
out
fs
sbb
hlt
pop
or
shr
inc
mov
dec
mov
push
shl
cmp
lods
retf
and
mov
pop
cmp
ror
shl
jle
scas
out
cmps
add
int3
nop
into
cmc
in
aam
push
and
test
outs
mov
adc
es
push
or
fisub
pushfw
and
dec
hlt
test
xchg
sbb
push
in
jnp
xor
cli
fwait
add
adc
lods
gs
scas
(bad)
call
pop
inc
ins
clc
out
adc
pop
movs
pop
push
adc
(bad)
push
dec
xor
mov
hlt
mov
lods
xchg
jle
imul
mov
pop
stc
push
sti
add
retf
loop
icebp
retf
in
mov
jg
xor
(bad)
ins
test
mov
pop
lds
mov
fwait
nop
push
inc
jno
mov
test
sbb
adc
mov
out
inc
pop
in
push
xor
pop
xor
pop
adc
push
fwait
mov
into
jl
add
mov
pop
aam
mov
adc
sbb
jns
in
add
repnz
sub
adc
pop
sub
xlat
scas
call
add
cmc
jb
mov
xor
and
jmp
mov
cmp
(bad)
xlat
in
xchg
fdiv
(bad)
js
retf
jl
dec
push
mov
adc
cmps
stos
inc
(bad)
inc
(bad)
adc
icebp
xor
std
jo
std
xchg
push
push
jmp
pop
jb
cmp
gs
push
stc
out
lahf
sub
adc
jne
jne
and
push
ss
ret
pop
popa
inc
into
mov
push
or
pushf
inc
cmp
mov
sbb
cdq
pop
ins
test
mov
cmc
addr16
in
scas
scas
test
inc
push
test
mov
sub
iret
sbb
(bad)
shl
pop
pusha
fmul
imul
push
mov
xchg
xchg
fimul
inc
fmul
inc
pop
imul
scas
inc
stos
jp
dec
(bad)
mov
dec
mov
test
mov
lds
push
out
or
sahf
xor
add
cs
(bad)
sub
add
leave
mov
and
es
jno
cmp
xchg
dec
dec
add
inc
dec
sub
add
inc
call
pop
fsub
mov
xchg
ins
cmc
mov
push
dec
pop
pop
cmps
out
sub
jecxz
test
cmps
call
jl
loope
or
mov
and
(bad)
fsubr
pop
bound
bound
or
mov
cli
jmp
cs
xchg
pop
mov
adc
mov
sti
dec
pop
adc
cdq
cmps
test
xchg
add
leave
mov
and
mov
sbb
inc
mov
repnz
fild
in
lods
call
lea
call
mov
imul
inc
pop
das
mul
int
arpl
in
cmps
pop
(bad)
mov
add
push
es
add
jmp
fisttp
xchg
xchg
pop
nop
push
jno
or
dec
fdiv
je
or
retf
cmp
sub
xchg
xor
fild
mov
push
daa
sbb
jbe
pop
pop
gs
mov
dec
out
sub
adc
jge
cdq
sar
ror
rcl
es
sbb
mov
inc
ss
les
jns
adc
dec
sti
push
shl
sub
imul
gs
pop
dec
cmp
jecxz
jp
jns
fbstp
push
pop
push
push
in
add
and
push
inc
cld
sub
push
sbb
push
xor
xchg
adc
imul
jl
inc
int
aad
mov
stos
mov
sub
add
or
ss
(bad)
mov
int3
je
jecxz
out
arpl
jo
ja
mov
dec
sbb
pop
test
mov
and
jp
test
sti
test
or
and
cmps
jnp
push
das
push
ret
aaa
xor
or
fwait
sub
rcr
mov
push
inc
xchg
xchg
mov
pop
jb
movs
lds
cs
mov
jns
fdivr
cld
hlt
dec
inc
jae
or
jmp
test
mov
daa
fwait
add
nop
xor
movs
loop
aam
sub
sbb
repnz
add
sub
mov
sub
fdivr
mov
pop
test
pop
fimul
lods
(bad)
repnz
imul
mov
fidivr
push
stos
call
mov
test
xor
pop
add
test
sbb
pop
mov
pop
(bad)
xchg
pop
aaa
cmps
jmp
ins
(bad)
fwait
xor
xor
cmp
out
sub
push
movs
ins
imul
fs
mov
lods
or
xor
scas
mov
in
les
in
xchg
fdiv
and
sbb
stos
mov
mov
aam
xchg
and
retf
jg
mov
push
and
cmp
mov
pop
mov
cmp
sub
stos
inc
aaa
jge
lea
and
loop
(bad)
cs
sub
test
mov
jp
icebp
enter
xchg
in
scas
inc
push
(bad)
in
cmp
shr
pop
in
jbe
jecxz
pop
mov
push
cmp
push
arpl
jns
push
lods
dec
scas
fnsave
inc
test
fbld
lahf
stc
fidivr
cmp
cli
mov
cmp
stc
and
inc
(bad)
(bad)
cmps
and
out
in
lods
(bad)
cmp
jb
xor
fstp
and
jbe
nop
lds
jno
pop
push
and
inc
shr
(bad)
cmp
or
sub
pop
adc
push
fldcw
pop
add
stc
jae
push
jae
push
shr
and
xor
dec
mov
ret
sub
das
lahf
loopne
ffree
aas
xor
aaa
fwait
in
fimul
mov
push
int
sub
sub
aas
fbstp
je
pusha
pop
out
push
mov
cld
movs
cmps
sbb
loop
and
jo
and
ficomp
push
div
mov
adc
stos
(bad)
or
shl
pop
jecxz
dec
cmp
sub
jmp
in
cmp
mov
js
cmps
jb
pop
xor
(bad)
push
(bad)
shl
out
mov
aas
ins
lds
jns
adc
cmps
pop
mov
add
aam
shld
(bad)
xor
test
cli
clc
cmps
mov
inc
mov
mov
sbb
out
push
add
xor
push
push
gs
stc
dec
sti
and
retf
xor
adc
mov
sbb
shl
cmp
ins
and
jne
loope
es
sbb
fdivr
shl
push
cmp
arpl
clc
test
sbb
mov
cmp
movs
cmp
lods
mov
sub
test
add
call
mov
lods
push
jp
repnz
in
push
pop
loopne
inc
jl
fcom
push
rcl
lds
add
out
mov
retf
pop
push
mov
les
icebp
push
inc
std
sti
push
pop
sahf
into
dec
(bad)
outs
sub
hlt
xchg
es
in
adc
push
push
shl
mov
sub
jmp
jp
inc
jl
adc
mov
cmp
pop
sbb
fisttp
inc
call
sbb
inc
pop
(bad)
fisub
jno
mov
ds
xlat
inc
stos
clc
adc
in
xchg
push
mov
test
pop
dec
xchg
imul
in
ins
inc
cs
add
outs
mov
mov
jl
outs
xor
les
retf
out
cmp
xor
icebp
aas
mov
ror
push
mov
sub
icebp
scas
iret
mov
test
adc
dec
sti
push
outs
jns
sbb
cmp
push
hlt
int
lock
xor
popa
js
mov
cmp
cmc
shl
(bad)
and
fbld
add
movs
bnd
movs
cwde
xor
stos
adc
xchg
pop
call
jmp
xor
cmp
push
mov
add
ins
ss
xchg
inc
out
movs
fcom
inc
ins
jae
int3
div
pop
sti
push
cwde
ss
push
cmps
ss
adc
pop
push
cmc
je
cmps
rol
dec
push
cld
sub
jno
mov
loopne
xchg
lock
pop
mov
(bad)
shr
jg
cmps
sub
dec
dec
cld
xchg
and
mov
scas
inc
jo
and
popf
cmc
or
lods
or
mov
inc
pop
push
and
push
inc
stos
repnz
add
rcr
xchg
mov
mov
scas
test
dec
imul
jne
addr16
js
cs
and
sub
dec
mov
sub
fwait
(bad)
and
call
mov
sbb
mov
push
arpl
mov
pop
xchg
mov
(bad)
icebp
fadd
push
xchg
dec
fidiv
pop
xchg
or
iret
ret
fst
pop
mov
push
pop
cmp
push
je
and
cdq
ss
xor
xor
fcomp
inc
(bad)
cmps
in
fiadd
sbb
pop
or
mov
jno
test
fisttp
movs
cmp
fisubr
icebp
pop
or
repnz
test
dec
mov
scas
aaa
iret
jae
pop
xor
sub
xchg
dec
lods
enter
repz
jmp
fldenv
xchg
mov
xor
mov
cmp
xor
push
fldenv
and
push
pop
fucom
pop
imul
(bad)
jg
push
xchg
daa
scas
(bad)
cmp
push
(bad)
dec
xchg
mov
jmp
clc
int3
fimul
pop
cmp
xor
xchg
xor
and
inc
cmc
out
pusha
mov
add
or
retf
jnp
add
in
out
cwde
cli
loopne
jle
adc
data16
mov
sbb
sar
repz
ss
push
sti
sbb
jb
xlat
mov
or
mov
mov
pop
sub
jmp
cdq
cmp
movs
cmp
push
rol
mov
jb
inc
sub
dec
jns
and
sbb
add
xchg
ret
fimul
fdivr
inc
imul
dec
push
and
jmp
fld
in
mov
pushf
ret
adc
rol
push
pop
inc
sbb
std
ja
int
and
imul
lods
pop
enter
stc
mov
js
sbb
mov
jbe
or
and
or
xchg
pusha
jo
js
movs
imul
fdiv
loope
cli
push
mov
ror
push
clc
sbb
mov
mov
xchg
push
push
cdq
or
push
imul
inc
mov
mov
(bad)
pop
(bad)
scas
sub
mov
xchg
cmc
sbb
scas
shr
mov
sub
pop
cld
test
jle
inc
push
mov
into
mov
mov
fisubr
push
xor
xchg
push
out
xchg
lock
push
adc
dec
adc
pop
icebp
ins
sub
pop
clc
imul
bound
inc
inc
push
lahf
and
loopne
(bad)
clc
dec
popf
shl
jb
or
push
ds
je
dec
mov
lahf
test
push
test
sbb
test
or
and
xor
jne
lods
outs
pop
jge
push
cdq
mov
jecxz
xchg
int
fwait
ret
sub
cmp
mov
xor
add
out
add
aaa
inc
mov
sub
jmp
data16
sub
fimul
xor
std
shl
jle
add
(bad)
sbb
and
mov
retf
push
mov
mov
shl
inc
into
pusha
sti
inc
ds
sub
cmps
cmp
mov
mov
push
or
stc
pop
(bad)
cdq
push
dec
add
out
cwde
ja
sbb
jno
push
scas
(bad)
pop
add
jns
or
sub
(bad)
in
push
arpl
add
dec
pushf
mov
dec
aas
jne
ror
sbb
push
daa
sbb
xchg
out
add
push
sub
aaa
push
js
xchg
sbb
mov
mov
call
(bad)
(bad)
mov
rol
and
dec
mov
or
int3
pop
mov
mov
loope
pop
push
(bad)
jmp
outs
pop
sub
jp
xchg
or
sub
mov
mov
jmp
loope
stos
(bad)
sbb
dec
sub
cmp
aaa
(bad)
cmp
fdivr
or
and
add
or
js
cs
retf
inc
sti
je
inc
in
xchg
pop
int3
cmp
sbb
or
loope
inc
outs
cs
or
xor
test
imul
inc
xchg
hlt
xchg
sub
sahf
push
mov
pop
pop
test
and
push
popf
paddsb
pop
dec
pushf
adc
pop
scas
pop
cld
push
ret
cmc
nop
push
push
ret
and
push
lock
push
popf
repnz
lea
sub
jp
cmp
mov
enter
push
sbb
cmps
sbb
jnp
mov
imul
nop
mov
push
pop
call
cdq
data16
fisttp
pop
mov
fmul
and
pop
outs
adc
cmp
out
or
out
ds
test
dec
popf
xchg
jns
fistp
push
sbb
dec
lods
dec
xor
nop
xchg
cmp
sbb
jl
dec
jae
sub
sbb
and
cld
cmp
sbb
out
nop
out
movs
cmp
pushf
lods
shl
sar
cmp
cmp
jmp
jle
pop
lods
shr
and
mov
js
dec
cmps
fist
jo
mov
inc
rol
retf
adc
xor
bound
and
mov
jmp
sti
push
push
data16
push
int
arpl
das
add
jle
mov
jbe
mov
out
dec
mov
stos
inc
cmp
mov
adc
cmps
fistp
push
fsub
test
out
sti
les
xor
test
xor
sti
push
mov
je
retf
push
or
inc
sbb
or
arpl
inc
lods
add
stos
mov
mov
inc
and
(bad)
gs
shl
ja
dec
outs
in
mov
jmp
ja
xchg
add
or
out
jp
hlt
cmp
xor
or
mov
cmc
sbb
mov
out
(bad)
adc
add
in
lods
movs
cmps
(bad)
pop
jle
mov
sbb
(bad)
xor
jo
or
pop
loop
cmp
clc
icebp
push
stc
cmp
push
pop
jle
lock
dec
xchg
sbb
push
test
jecxz
jb
sbb
ja
daa
sbb
pusha
mov
retf
(bad)
test
inc
retf
xchg
(bad)
xlat
dec
sbb
or
xor
sub
fwait
cmp
gs
push
fstp
les
and
cmp
popa
pop
cld
inc
adc
or
in
cld
sbb
or
jmp
mov
push
mov
retf
test
jp
sbb
lock
stos
jmp
mov
ficomp
sti
xchg
or
xor
fidiv
jne
mul
lds
dec
ret
jle
icebp
in
loop
fldl2t
jl
dec
hlt
addr16
out
push
lods
inc
dec
stos
add
xlat
iret
jmp
(bad)
push
mov
or
adc
std
mov
mov
xor
outs
mov
sub
jmp
mov
imul
pop
cwde
mov
sbb
inc
gs
add
jmp
push
add
sar
cmc
jg
push
mov
jne
adc
jmp
jmp
push
dec
out
in
scas
out
sub
out
cmp
mov
push
jmp
mov
push
or
fidivr
inc
les
(bad)
pop
and
sbb
jo
mov
jl
jp
lods
fs
bound
lock
loopne
inc
retf
xchg
xchg
std
add
into
pop
int3
test
popf
das
add
stos
xchg
into
clc
rcr
add
fstp
dec
imul
js
out
push
cmp
jb
stos
mov
int
push
(bad)
dec
push
push
cld
rcl
cwde
add
arpl
sub
xchg
xor
mov
popf
into
push
in
sbb
xor
ss
sahf
lods
push
loopne
(bad)
xlat
lods
lea
mov
xor
test
es
sbb
and
sti
inc
dec
jmp
dec
jmp
cmc
addr16
lods
mov
jmp
sub
aad
pop
cmc
movs
or
popa
dec
push
nop
fdivr
jmp
pop
fld
mul
jne
rcr
iret
cwde
cwde
dec
xor
aaa
stc
mov
dec
sbb
loop
jbe
leave
lods
dec
pop
addr16
sub
(bad)
mul
punpckhwd
jne
adc
add
xchg
sub
inc
into
mov
outs
pand
mov
adc
cld
fwait
ror
out
sar
cmp
rol
cmp
and
shr
fbld
gs
iret
das
mov
jmp
dec
cmp
inc
out
iret
cmp
mov
jp
fst
mov
call
lods
mov
orps
sbb
pop
in
outs
fcomi
movs
call
or
scas
adc
and
cwde
dec
movs
iret
mov
or
out
xchg
mov
movs
push
in
mov
xchg
xor
push
test
push
jne
pop
jno
or
add
lfs
dec
fwait
arpl
(bad)
out
ret
in
or
pop
repnz
stc
inc
mov
mov
mov
cmp
pushf
sub
loope
addr16
pop
pop
inc
out
pop
push
(bad)
jns
sar
dec
(bad)
fild
push
mov
icebp
mov
mov
and
loop
cmp
sbb
pop
xor
and
push
idiv
repnz
mov
adc
scas
xchg
ret
outs
xchg
repz
push
aaa
mov
pop
push
jp
scas
movs
ja
fild
nop
xor
xchg
into
cdq
and
jmp
push
push
xor
test
(bad)
push
push
enter
pusha
imul
add
mov
jl
daa
fld
retf
push
shl
fadd
idiv
and
jb
push
sbb
sar
das
mov
add
and
fstp
stos
pop
sub
xchg
sbb
cld
es
arpl
mov
dec
cmp
or
jl
jge
hlt
aas
imul
(bad)
ins
loope
in
clc
mov
(bad)
jge
into
rcl
pop
stos
and
inc
dec
loope
mov
retf
adc
outs
icebp
inc
sub
push
outs
in
xor
xchg
mov
sar
(bad)
xlat
pushf
pop
movs
push
inc
sub
ss
adc
lds
cmp
jno
mov
lds
repz
jbe
mov
xsaveopt
out
inc
push
sub
jecxz
push
mov
out
push
sar
jge
sbb
or
sbb
into
repz
or
call
(bad)
or
mov
ins
fwait
retf
repnz
mov
arpl
sti
jns
add
push
hlt
adc
(bad)
cmps
in
adc
test
lods
push
cmps
fisttp
xchg
in
shl
xlat
stos
fxch
test
jmp
xor
cld
(bad)
and
ins
popa
popa
(bad)
stos
sar
leave
pusha
fdiv
lock
jbe
jmp
shl
lods
or
mov
lods
aad
inc
and
sbb
mov
shl
or
mov
loope
sbb
stc
sti
in
pusha
dec
(bad)
ins
aad
js
lods
(bad)
xchg
pop
jl
inc
or
ret
imul
push
mov
movs
out
and
inc
cmp
ds
jmp
push
mov
pop
enter
fdiv
pushf
mov
jl
push
jl
pop
sub
dec
sub
xchg
dec
cmp
stos
xchg
mov
mov
xchg
(bad)
call
call
retf
jns
call
inc
add
jno
stos
popa
sahf
mov
push
fs
jecxz
pop
xchg
gs
popa
movs
cli
enter
stos
xor
mov
mov
lock
aam
sub
not
cmp
mul
cmp
push
and
add
loope
jp
fsub
(bad)
leave
pop
jmp
stos
ret
sbb
out
ins
out
mov
inc
xchg
imul
add
ss
retf
add
jl
pop
pop
out
in
xchg
cmp
push
dec
inc
cs
cdq
pop
or
or
xor
lods
out
xor
jno
push
daa
mov
dec
mov
jecxz
les
pop
retf
(bad)
mov
cs
inc
add
push
lds
call
cmp
outs
scas
mov
adc
add
add
dec
aad
push
xadd
xchg
lds
fwait
hlt
add
jle
and
xchg
xchg
data16
out
jmp
das
(bad)
lahf
cmp
inc
mov
xor
inc
jnp
cmps
push
adc
mov
rol
push
pushf
mov
mov
das
(bad)
fld
mov
push
inc
repz
mov
enter
das
fld
aas
in
rol
lahf
fadd
stos
sub
jle
nop
cs
stos
dec
stc
icebp
dec
sbb
push
or
or
in
mov
and
aam
das
cmp
not
(bad)
shl
adc
jge
jns
int
sub
and
inc
push
sti
inc
jne
push
ja
cmp
pand
cmp
jmp
pop
retf
sub
jecxz
(bad)
pop
push
inc
push
push
pop
push
mov
mov
std
xchg
mov
out
sahf
scas
out
popf
retf
imul
or
mov
push
mov
adc
stc
push
dec
shl
loopne
lahf
and
int3
repz
sbb
or
aas
and
mov
cwde
fisubr
cmp
and
imul
inc
cwde
clc
pop
push
or
xchg
and
adc
int
add
test
movs
fwait
mov
int
jmp
mov
push
xchg
bound
(bad)
fisttp
dec
adc
jg
pop
or
push
xchg
dec
mov
lds
out
pop
cmp
ja
inc
int3
pop
lock
or
dec
ins
bound
retf
cmp
or
shl
cmp
mov
cmp
or
inc
sahf
pop
sbb
push
and
or
loop
mov
sub
push
int3
pop
xchg
xlat
sbb
(bad)
loopne
or
inc
push
lock
sub
int3
adc
mov
hlt
dec
sub
inc
lds
pop
xor
pop
sahf
enter
push
mov
out
popa
ds
xchg
bound
rol
mov
sub
mov
and
jnp
mov
push
loope
or
adc
dec
mov
sbb
add
shl
retf
jbe
push
and
stc
in
jb
aaa
inc
outs
sub
test
(bad)
cmp
xchg
popa
push
sbb
cld
xor
mov
iret
es
popf
lods
fisubr
jmp
cmp
movs
jle
adc
jnp
xchg
cmps
sar
push
jmp
adc
add
cmp
or
lods
repnz
jb
cli
cmps
push
and
iret
test
popa
fistp
int
mov
das
into
mov
xor
ret
cmc
aam
sub
mov
(bad)
pop
call
outs
xchg
mov
or
sbb
jnp
pusha
dec
mov
ficomp
stos
scas
pusha
ss
push
shl
dec
(bad)
cmp
dec
xchg
xor
inc
xor
mov
loop
lea
ins
add
add
out
das
fdivrp
mov
pop
jecxz
rol
fistp
and
jmp
fdivr
mov
out
push
mov
sbb
movs
fs
imul
jge
sub
in
repnz
pop
xor
setl
mov
add
add
push
or
mul
jo
loopne
and
loopne
cmp
frstor
push
lods
call
nop
sub
stos
mov
sub
int3
cmp
inc
(bad)
mov
fdivr
pop
out
xchg
xchg
stos
xlat
dec
xchg
push
bound
fld
jg
sub
dec
cmc
pusha
push
jmp
ror
push
(bad)
sahf
fwait
mov
jns
jo
inc
add
enter
in
or
test
mov
mov
pop
adc
sbb
jl
add
fmul
xchg
ins
scas
(bad)
pop
mov
test
lock
sahf
jmp
xchg
cmp
jle
push
add
scas
ja
xor
pop
cmp
push
pop
je
xor
xor
daa
and
jmp
ror
mov
sbb
dec
jmp
pop
jmp
and
jnp
jmp
pop
dec
xchg
or
mov
dec
stc
rcl
loope
dec
sar
xor
xchg
pop
sti
push
fistp
xchg
push
or
out
movs
pop
xchg
es
ror
popf
jge
dec
cld
shl
mov
fcomp
or
test
inc
and
adc
mov
and
cwde
dec
test
pusha
pop
sti
bound
xchg
sysenter
xor
outs
mov
jne
mov
xor
add
in
cmp
in
mov
in
loopne
data16
adc
xor
loopne
cs
jne
sub
xor
movs
or
mov
lea
adc
imul
pop
dec
xor
mov
dec
xchg
enter
std
xchg
pusha
ja
scas
test
jo
pop
retf
stos
adc
out
rcr
cmp
ins
popf
jo
shl
xor
add
mov
loop
data16
mov
pop
mov
repz
dec
imul
fidivr
aaa
and
push
outs
adc
cmps
add
popa
jae
lea
sub
(bad)
aam
retf
enter
push
sub
sub
arpl
outs
cdq
xchg
xchg
scas
icebp
in
push
rcl
fld
(bad)
push
scas
and
fdiv
pop
lods
repz
out
push
sub
icebp
mov
fldln2
sub
ror
sbb
cmps
jne
iret
inc
push
movs
fidivr
mov
sbb
xor
movs
test
mov
sub
or
in
into
push
or
lods
(bad)
or
dec
and
xchg
jecxz
shr
dec
push
lods
movs
repnz
sbb
mov
dec
mov
into
push
pop
fdiv
add
adc
push
inc
gs
sbb
mul
mov
sti
dec
dec
pop
(bad)
les
inc
in
ins
xchg
popf
stc
pop
mov
adc
adc
xor
nop
cdq
iret
popf
dec
push
aaa
push
adc
vmovsldup
lea
dec
cdq
cdq
fidivr
ror
cmp
lock
or
(bad)
jbe
sub
xchg
push
mov
repz
xchg
dec
movs
movs
add
jmp
fnstenv
pushf
jae
movs
xor
(bad)
ror
inc
aam
adc
das
addr16
cdq
sbb
and
mov
adc
cmps
xor
sbb
mov
shr
mov
lea
fistp
pshufw
push
push
(bad)
movs
lods
sbb
xor
jmp
pop
mov
mov
add
add
dec
mov
sahf
fwait
in
test
pop
mov
jge
ret
bound
cmc
pop
cwde
sbb
test
imul
popf
sub
mov
das
push
imul
test
fdiv
cmp
add
adc
lds
mov
call
inc
in
pop
dec
adc
mov
test
jno
pop
jl
ret
leave
xchg
adc
icebp
mov
fisub
loope
xor
in
mov
xchg
dec
pushf
div
jno
push
(bad)
mov
cdq
dec
test
jno
dec
leave
je
dec
mov
inc
retf
loopne
imul
int
mov
sub
leave
xchg
add
add
mov
add
rcr
dec
mov
dec
xchg
out
ins
push
ins
push
mov
cmp
ja
aaa
rcl
mov
push
js
scas
out
push
xor
arpl
shl
xchg
dec
xchg
pop
imul
add
cmp
xor
jno
inc
(bad)
ins
sar
or
push
pop
xchg
push
addr16
test
xor
add
ins
in
stos
push
ja
shr
(bad)
pop
outs
and
cmps
pop
dec
cdq
call
ins
mov
mov
inc
mov
mov
push
push
sub
repnz
test
icebp
xor
fwait
push
adc
xor
inc
and
mov
stc
fisttp
sbb
push
cmps
jmp
repz
fisttp
popf
mov
xchg
rcl
xor
loopne
sub
cmps
enter
loop
or
not
fidivr
outs
xor
das
inc
(bad)
outs
add
call
mov
mov
arpl
dec
xchg
cmc
adc
and
bound
xor
xchg
adc
test
jns
mov
stos
push
lods
scas
add
aaa
imul
add
sub
push
mov
xchg
mov
or
js
fxch
ins
cmps
push
loop
push
es
gs
stos
xor
dec
(bad)
dec
call
and
movs
xchg
fcom
int3
xor
std
fcmovne
push
mov
inc
call
(bad)
aaa
push
xlat
std
lods
and
push
inc
inc
test
mov
outs
loop
dec
fstp
adc
mov
(bad)
mov
cwde
inc
aaa
test
(bad)
jns
stos
pop
push
xchg
call
jge
mov
loope
repz
das
dec
jb
add
adc
push
xchg
pop
loope
jmp
les
pusha
mov
mov
cmp
rcr
jp
pop
push
imul
push
lods
int3
movs
movs
in
rol
mov
mov
test
or
jbe
add
(bad)
adc
and
das
and
jg
mov
jmp
in
call
xor
dec
ds
stc
out
mov
out
in
jae
das
xchg
push
mov
rol
ret
lea
or
jle
mov
enter
movs
jb
mov
fidivr
adc
dec
add
mov
add
push
stos
imul
(bad)
(bad)
in
xchg
or
mov
test
jns
out
push
jmp
into
ficomp
ret
cli
jno
mov
out
sub
leave
jl
ror
cli
pop
test
aam
dec
outs
sbb
or
bound
popf
(bad)
nop
fidivr
jb
adc
cmps
(bad)
test
pop
rol
in
scas
fiadd
jmp
leave
cmc
fcom
mov
dec
jbe
iret
xor
push
fistp
in
in
mov
adc
push
rol
xor
fmul
xchg
mov
xchg
mov
and
adc
push
(bad)
and
in
and
icebp
test
ins
popa
push
fidivr
mov
dec
push
pop
call
jns
and
xchg
pop
pop
jge
das
(bad)
cmp
mov
and
je
mov
outs
jo
lahf
and
ficom
adc
mov
rcl
dec
xchg
sbb
rep
ss
push
xor
loopne
fisub
or
(bad)
mov
push
mov
enter
pop
jmp
xchg
and
nop
ret
dec
pop
jmp
cmp
je
sub
or
mov
cmps
sbb
inc
xchg
mov
sub
(bad)
fadd
pop
loop
iret
in
sub
sbb
movs
mov
out
inc
daa
mov
aaa
jne
push
or
mov
fcomi
int3
sub
lahf
mov
sar
(bad)
push
push
mov
je
add
push
xor
out
nop
lods
shr
pop
cmp
jne
scas
cdq
mov
sbb
xchg
xchg
daa
je
add
dec
xor
sbb
mov
xor
fst
sbb
dec
not
sub
mov
inc
mov
das
sar
test
jp
repz
push
outs
xchg
mov
add
in
imul
ja
in
lahf
cdq
add
push
sub
pop
or
xchg
iret
inc
or
mov
into
inc
ss
outs
dec
pop
lock
cmp
rcl
adc
push
sub
pop
lahf
mov
xchg
ficom
push
iret
push
sbb
sub
mov
pop
xor
repnz
sub
and
out
xchg
test
pop
jb
test
pushf
std
jmp
cmps
mov
add
fidivr
imul
enter
sbb
popf
mov
mov
fdiv
bound
adc
inc
adc
aaa
mov
add
aaa
and
cld
mov
fstp
add
(bad)
lock
ins
movs
mov
jne
inc
pop
cli
rcr
xlat
jo
or
arpl
das
push
inc
xor
cli
add
and
rol
xchg
cmps
pushf
les
mov
stc
hlt
mov
shl
in
cmps
cmps
icebp
cmp
(bad)
stc
cmp
fisub
jmp
sub
fcmovnu
jge
lea
daa
adc
mov
data16
js
test
jmp
(bad)
or
sub
cld
inc
sbb
jge
stos
jl
inc
lods
sub
call
jmp
mov
mov
or
pandn
jg
int
dec
pushf
in
push
dec
xchg
add
or
mov
and
outs
sbb
ja
or
sub
mov
add
jg
aas
xchg
push
sub
(bad)
call
mov
add
sbb
mov
dec
div
cwde
mov
pop
das
movs
fwait
ins
sbb
adc
inc
jp
xor
mov
mov
lods
xchg
inc
(bad)
outs
(bad)
jmp
inc
dec
lahf
dec
pushf
mov
cli
mov
test
hlt
jae
out
mov
mov
push
fs
into
xchg
out
adc
lea
sahf
mov
shl
aaa
sbb
xor
and
xchg
mov
in
sub
add
es
mov
inc
push
jecxz
pop
mov
rcr
(bad)
call
mov
lea
aaa
in
dec
ficom
(bad)
out
or
mov
push
jecxz
repz
mov
xlat
cld
jnp
fwait
sti
inc
pushf
adc
and
mov
jl
sbb
cmp
sub
cli
mov
pop
inc
leave
ja
fwait
adc
div
pop
sub
xor
jle
retf
mov
out
out
not
lods
movs
sbb
or
adc
ret
inc
mov
sub
mov
out
cmps
fwait
dec
mov
call
lea
jp
xchg
sbb
popa
jg
mov
dec
loope
cmp
xor
sbb
in
add
or
mov
sub
sbb
test
loope
gs
nop
retf
retf
xor
mov
aam
icebp
in
sub
cmp
fist
and
dec
jns
and
int
xor
push
add
out
xchg
fwait
and
adc
cld
jge
sbb
push
sub
sbb
(bad)
sub
push
jmp
mov
fs
out
cli
not
push
clc
mov
ficom
(bad)
pop
push
stos
ror
aam
cmp
movs
sub
lds
mov
fdivr
retf
test
aaa
sbb
sub
cmp
add
cld
jmp
jnp
add
ffree
adc
lods
mov
push
icebp
mov
and
and
dec
cdq
jmp
scas
xchg
mov
test
adc
popf
bound
cdq
push
arpl
int
xor
sbb
clc
or
mov
pop
call
cmps
and
xor
pop
cmps
sbb
imul
jo
retf
int
sub
mov
pop
and
out
adc
mov
mov
cmps
add
cwde
push
int
dec
push
add
cwde
mov
and
shr
into
jge
lods
mov
pop
xchg
je
rcl
fcomp
leave
arpl
call
bound
in
lods
adc
jl
cwde
xor
mov
retf
out
hlt
pop
movs
jecxz
inc
ficomp
add
paddq
jae
or
jns
fst
dec
xchg
stos
cmp
cmp
(bad)
cld
or
pop
pop
mov
mov
pop
leave
iret
add
and
inc
and
imul
inc
(bad)
xor
aaa
add
adc
mov
add
jg
mov
or
call
enter
(bad)
or
imul
in
imul
pop
cwde
lea
cmps
sub
mov
retf
jp
ss
inc
and
pusha
sbb
adc
add
shl
repz
fs
mov
mov
aam
mov
repnz
in
jnp
inc
nop
lods
jmp
or
clc
movs
push
shr
je
dec
hlt
inc
mov
test
bnd
fcmovbe
jmp
push
adc
cmp
gs
ins
xchg
and
sbb
mov
mov
repnz
into
loop
movs
dec
shl
out
mul
in
pushf
int
out
not
lock
movs
ret
or
sti
add
fcom
push
test
scas
arpl
imul
sub
pop
in
jg
loope
cmps
shl
sahf
mov
jae
xor
outs
jmp
out
and
es
mov
(bad)
sub
xchg
cwde
add
enter
dec
sbb
dec
mov
rol
ret
pop
cmp
in
rsqrtps
jno
int3
ins
or
test
dec
outs
adc
pusha
adc
neg
pushf
sti
mov
ja
sar
or
or
inc
pop
in
shl
jo
dec
dec
mov
and
test
dec
jnp
dec
xchg
push
inc
arpl
cmp
sti
dec
retf
jg
les
iret
outs
push
out
and
jl
pop
mov
fistp
fs
lea
sbb
inc
cmps
inc
lahf
add
lods
dec
mov
sbb
int
sbb
add
mov
fld
jecxz
movs
or
rcl
leave
push
jb
pop
test
pop
shl
or
push
pop
neg
ja
mov
jmp
imul
add
lea
xchg
xlat
les
mov
inc
inc
loop
out
pop
call
sbb
cs
es
ja
aaa
into
out
pop
inc
imul
and
jl
stc
xchg
lock
or
cmc
or
in
adc
sbb
outs
out
fcmovb
adc
or
dec
fstp
jl
mov
imul
ja
ficom
add
xchg
lods
mov
ja
stc
stc
mov
adc
jnp
pusha
cmp
ins
imul
mov
xlat
jge
mov
sar
push
pop
mov
push
mov
ins
xlat
cmp
ins
popf
or
cld
cwde
dec
ins
cmp
jnp
inc
mov
and
and
pop
cli
ins
pop
addr16
push
stc
jp
inc
lods
mov
rol
pop
sub
(bad)
leave
xlat
jl
pop
das
sbb
leave
shl
push
aaa
or
inc
fdivr
pop
adc
and
ins
mov
aas
push
pop
xchg
xchg
and
or
jge
dec
pop
aam
popf
out
fadd
cmp
adc
fsub
fcmovnu
mov
test
das
ret
dec
int3
nop
hlt
out
adc
mov
cmps
loop
adc
mov
mov
sub
mov
dec
in
lahf
mov
test
sbb
dec
cmps
ret
(bad)
add
arpl
lods
jne
(bad)
repz
loop
xor
mov
int
lds
imul
inc
and
sub
dec
push
nop
mov
pop
mov
cmp
push
(bad)
out
jo
ret
mov
aam
jmp
jp
xor
lods
mov
cs
push
repnz
idiv
hlt
pusha
sub
movs
sub
or
test
fistp
sbb
mov
ss
sub
adc
dec
imul
cmp
mov
xlat
xor
(bad)
in
repz
shl
cdq
test
arpl
popa
fst
inc
(bad)
ret
and
(bad)
xchg
or
dec
fsubr
pop
and
jecxz
jo
xor
cmp
pop
inc
fnstcw
pop
mov
adc
gs
jae
pushf
aam
pushf
jle
and
sub
jg
add
fstp
scas
dec
inc
shl
sti
sub
mov
sbb
aad
push
frstpm(287
xor
dec
or
fcmove
stc
sbb
or
dec
inc
dec
cmps
adc
out
test
movs
fistp
mov
loope
mov
scas
jp
js
popa
je
and
ja
popw
inc
adc
cmp
jecxz
std
lahf
or
clc
hlt
cmp
mov
add
push
mov
jle
cdq
push
leave
jbe
jl
xor
sti
and
lods
std
jb
lds
mov
or
cmp
js
stos
mov
clc
das
inc
retf
sub
ds
push
mov
cmp
xor
mov
bound
popf
add
out
out
cmps
add
jp
jmp
and
and
popf
xchg
mov
pusha
and
pop
inc
or
ror
dec
cwde
jmp
and
jecxz
shl
push
rol
jmp
dec
or
mov
fwait
aas
adc
jl
pop
pop
enter
mov
je
jg
pop
jecxz
retf
movs
push
sbb
(bad)
loop
dec
jns
daa
inc
adc
push
dec
in
inc
xchg
cmps
xor
ins
stc
ror
fisttp
(bad)
in
jnp
in
aam
push
daa
mov
xlat
fidivr
loop
nop
cmc
sbb
add
in
clc
cli
sbb
mov
fild
xor
pop
xor
data16
pop
push
add
js
jb
out
xor
push
fwait
mov
cmp
push
mov
stos
push
enter
and
(bad)
xchg
pusha
rcl
push
cmp
scas
xchg
int3
adc
cmps
cs
sub
mov
(bad)
int3
and
jmp
adc
call
push
mov
ret
sbb
cmp
push
push
fiadd
in
inc
loopne
mov
add
ins
or
lods
mov
cwde
loope
les
popf
cld
jp
xchg
or
adc
sbb
out
push
repz
das
jle
mov
inc
mov
mov
push
cmp
or
shl
cmps
mov
fidivr
rcr
jns
mov
or
enter
pushf
pushw
pminsw
xor
popf
fisub
fld
(bad)
rol
repz
cmp
jns
ficom
stos
mov
push
push
mov
sahf
imul
cdq
sbb
mov
std
cmp
js
jmp
cmps
shl
xor
jp
cld
pop
adc
xor
cwde
(bad)
and
jecxz
out
jnp
push
je
dec
or
and
test
ret
lds
dec
sub
mov
mov
push
sub
and
cmp
outs
and
leave
sub
jp
mov
nop
ret
add
inc
add
xor
dec
inc
xchg
cdq
js
add
jecxz
cmp
push
js
mov
push
or
xor
jns
dec
mov
aad
inc
dec
jp
fimul
sub
cmp
dec
fsub
pop
push
addr16
stos
test
sub
and
jb
jecxz
mov
xor
(bad)
fucomi
adc
and
add
push
mov
and
aad
fdecstp
inc
and
daa
and
cmp
mov
add
sub
outs
in
shl
sub
jge
xchg
dec
sbb
rcr
sbb
mov
js
out
cld
or
cs
aaa
or
inc
les
cmps
push
or
aaa
adc
pop
pop
ins
sub
lds
xlat
daa
mov
fld
mov
mov
sub
push
inc
push
mov
dec
push
scas
sub
shr
fild
(bad)
stc
push
arpl
cmp
loopne
jb
stc
aad
adc
fdiv
test
mov
sahf
and
ss
push
int3
xchg
ss
cmp
push
adc
dec
cmp
or
mov
or
jmp
icebp
ror
jl
rcl
jle
btc
mov
lods
ret
cmp
adc
(bad)
sub
or
popf
cmp
call
sub
mov
push
mov
or
les
retf
add
jno
lahf
jbe
(bad)
jmp
mov
sub
ret
jl
aad
loope
sub
lahf
pop
push
fdivr
ja
push
mov
cmps
retf
ss
shl
(bad)
xlat
mov
and
cmc
test
pop
cmps
popa
push
stos
lds
or
jo
jge
lahf
test
mov
lds
sub
push
adc
mov
pusha
mov
movs
mov
outs
cmp
icebp
jne
mov
adc
xor
out
scas
hlt
xchg
outs
sbb
sbb
mov
and
pop
mov
sub
jl
div
fmul
in
jle
test
pop
lds
mov
out
mov
dec
movs
or
inc
and
stos
mov
mov
pop
jmp
xchg
dec
jnp
xchg
dec
fucom
push
imul
ins
clc
xchg
jle
aaa
inc
ret
xor
nop
push
add
std
(bad)
imul
into
jp
(bad)
jmp
icebp
mov
pop
in
dec
test
pop
scas
sbb
add
fnstenv
(bad)
repz
push
stos
loopne
imul
scas
adc
nop
aad
cmp
pushf
outs
pop
adc
mov
fisub
ins
adc
mov
lahf
fist
aaa
js
mov
or
imul
sub
out
fbstp
shl
inc
in
ror
test
icebp
cmp
into
aaa
sub
stc
inc
mov
fdiv
xlat
xor
xchg
loope
fstp
(bad)
out
jbe
push
mov
lea
and
mov
pusha
outs
outs
pop
imul
sub
dec
retf
ja
or
push
(bad)
outs
cli
fwait
push
sub
fnstcw
inc
imul
mov
pop
test
arpl
jmp
dec
fcmovnu
inc
and
(bad)
loope
lods
enter
movs
cmovge
(bad)
(bad)
dec
scas
or
ins
xchg
cmp
adc
imul
repz
jne
jmp
and
mov
(bad)
or
pop
int
sbb
(bad)
les
push
sbb
push
cld
clc
aas
loopne
loope
or
popf
xor
bound
pop
adc
dec
fldcw
xor
xor
cmp
pop
cmc
movs
in
jl
int3
and
cdq
ret
mov
push
push
add
test
mov
jns
add
ret
cmps
xor
mov
js
(bad)
in
je
imul
adc
xchg
test
push
push
jno
xchg
jnp
jmp
xchg
sub
pop
rcl
nop
in
in
and
sbb
jne
lods
xchg
add
mov
add
mov
inc
popa
and
push
push
lods
push
rol
add
outs
lock
in
fld
out
xor
out
loope
(bad)
outs
mov
add
loope
xor
pop
dec
test
cmp
jl
push
fwait
into
xchg
xchg
sti
fnsave
nop
stos
pop
popf
loope
mov
mov
inc
dec
inc
xchg
adc
sbb
mov
and
pushf
jne
mov
imul
ja
ds
jne
push
push
push
test
lods
ins
push
repnz
shl
or
jno
adc
(bad)
or
jbe
in
dec
cmc
dec
or
cmp
push
cmp
fnstsw
pusha
mov
test
and
loopne
inc
cld
push
ins
xchg
push
fcmove
push
inc
mov
cli
not
xchg
mov
retf
cmp
push
and
rol
jl
sub
hlt
rcl
lock
sbb
cmp
mov
shr
fiadd
mov
mov
stos
sub
mov
fs
fiadd
push
mov
add
xchg
mul
mov
sbb
out
or
mov
retf
call
push
lahf
arpl
movs
std
xor
mov
xor
push
inc
cmp
mov
pop
js
push
(bad)
rcl
data16
push
xor
lahf
jmp
push
neg
(bad)
faddp
sbb
xchg
ss
lock
mov
int
jns
pop
(bad)
pop
mov
imul
gs
dec
pop
adc
xchg
jl
jbe
push
ret
retf
xor
xchg
xor
mov
jbe
sbb
sbb
xchg
or
dec
xchg
xor
cmps
cwde
(bad)
in
xchg
imul
hlt
mov
and
aaa
mov
push
push
push
out
mov
repnz
jmp
stc
adc
aam
sub
inc
lock
cdq
test
sti
pop
shl
add
mov
sti
pop
xor
mov
xor
mov
iret
aam
lds
jl
out
pop
adc
jge
lahf
add
mov
les
xchg
or
dec
add
jmp
push
adc
pop
inc
inc
sar
adc
and
inc
test
or
adc
sub
mov
fbstp
scas
adc
cdq
das
or
xor
mov
ja
mov
fisttp
pop
gs
dec
es
mov
or
adc
push
popf
in
hlt
mov
pop
jl
sahf
mov
or
aam
inc
mov
mov
mov
aas
cwde
push
loope
jns
sbb
xchg
cmp
cs
lods
cwde
inc
or
pop
into
inc
sub
movs
lock
fs
mov
stos
pop
jl
pop
sub
pop
sub
mov
jne
shl
mov
xchg
mov
loope
or
aam
jmp
cmp
push
popa
lock
xor
pop
hlt
jle
dec
cmp
cmps
call
jecxz
dec
aad
jg
lods
xor
pop
outs
jbe
or
pop
xor
fmul
icebp
cmp
cli
mov
dec
pop
sub
xchg
fdivr
les
out
nop
and
out
jno
je
ror
lds
pop
push
xchg
jge
cli
stc
sbb
rcr
sub
mov
or
fild
inc
call
push
pop
(bad)
hlt
into
cmp
cs
xchg
retf
jns
pusha
cmps
lea
xchg
mov
mov
jno
scas
pop
push
aad
addr16
xlat
mul
sub
test
add
mov
and
(bad)
(bad)
mov
jp
pop
mov
(bad)
loop
sub
(bad)
shl
sub
xlat
mov
cmp
das
dec
int3
or
add
scas
cli
xchg
and
pop
jne
mov
shr
push
(bad)
rcr
jl
iretw
and
je
outs
arpl
xor
pusha
pop
movs
addr16
push
sbb
xchg
js
rol
or
xchg
mov
or
jno
in
sar
mov
sar
jmp
loop
popf
shl
cmp
dec
lahf
inc
mov
sub
test
xor
lds
mov
ss
lock
push
loope
sbb
or
mov
mov
dec
shl
add
push
or
retf
jmp
outs
test
dec
dec
pusha
sbb
add
sub
cmp
xor
cdq
cmp
int3
scas
adc
hlt
jge
into
push
mov
(bad)
adc
inc
pop
sub
push
lods
jle
lea
ds
fisub
mov
in
mov
outs
int3
(bad)
mov
jns
mov
add
inc
dec
popa
rol
je
jb
ss
jmp
mov
fnsave
fcmovnbe
aaa
or
xchg
add
xchg
cdq
fdiv
push
or
mov
mov
xchg
scas
fbstp
mov
add
mov
xchg
and
mov
in
ret
in
push
cmp
ss
jge
cmp
or
fsubp
inc
jmp
sbb
movs
retf
test
jae
les
stc
and
add
mov
push
aas
xchg
pop
fld
xor
xor
out
test
mov
idiv
arpl
scas
cli
mov
(bad)
repz
mov
xor
jl
xlat
mov
aad
arpl
lods
fs
std
aaa
jecxz
add
imul
push
les
xchg
sbb
shl
mov
cmc
jbe
loopne
push
dec
adc
jns
push
cld
es
jl
or
cmp
aam
test
add
pop
bnd
inc
mov
enter
movs
(bad)
xlat
aad
jecxz
pop
loop
inc
lea
sar
data16
out
mov
jg
scas
push
into
gs
push
jne
mov
mov
mov
or
ficom
out
imul
inc
jo
out
aaa
ret
and
sti
pushf
arpl
ins
xchg
retf
rcr
sahf
mov
aas
aam
or
add
aad
scas
cmp
mov
arpl
mov
fistp
cmp
and
xchg
dec
cmps
(bad)
sub
in
push
iret
mov
dec
push
sahf
and
mov
dec
jmp
mov
inc
sbb
pop
repnz
add
mov
mul
cwde
xchg
push
pop
cmps
lods
call
repnz
push
inc
mov
push
mov
sub
(bad)
fnstsw
mov
iret
xchg
cld
jp
cs
mov
inc
hlt
pop
int
jae
jno
xchg
and
mov
cmp
xchg
and
jb
sbb
shl
pop
add
(bad)
fld
mov
addr16
cmp
ds
or
and
mov
xlat
hlt
jbe
iret
mov
sbb
sbb
aas
popa
jmp
inc
inc
clc
xchg
jp
and
xor
cli
jle
imul
imul
adc
cmp
mov
scas
jl
test
and
pop
add
jbe
mov
repnz
arpl
jnp
icebp
in
or
iret
pop
lods
and
clc
mov
je
out
sub
xlat
mov
adc
xchg
push
stos
jno
ret
sub
cmp
out
xchg
or
mov
pop
lea
repz
and
scas
aam
add
inc
cmps
daa
pop
adc
ja
mov
fstp
add
shl
push
nop
ja
adc
test
pushf
data16
jns
icebp
ret
stos
push
xor
xchg
movs
or
ss
mov
imul
mov
rcl
movs
sbb
sbb
xchg
stos
jns
pop
int
lds
loope
jecxz
mov
lock
mov
cmp
dec
ret
iret
out
lahf
xchg
shl
dec
xchg
push
push
inc
xchg
shr
stos
xchg
and
jmp
adc
mov
shl
xlat
sub
jmp
cmp
cmps
nop
jno
sub
sbb
mov
hlt
ret
sub
pop
sahf
scas
add
movs
sub
jae
mov
pushf
adc
push
iret
imul
xlat
imul
out
je
shr
mov
or
mov
mov
cmp
pop
jo
mov
sbb
fst
xchg
mov
jb
sub
xor
push
jbe
shl
jmp
jle
xchg
cmp
mov
movs
rol
mov
xor
(bad)
inc
dec
retf
inc
shr
mov
ret
cmp
(bad)
xor
xlat
mov
ret
sub
cld
cmps
repz
fadd
xchg
push
popa
xor
cld
ret
adc
push
cs
push
pop
mov
jp
mov
out
cld
xchg
je
xchg
mov
dec
pmulhuw
xchg
cmp
cwde
imul
movs
adc
pop
sbb
test
cmps
pop
sub
jecxz
in
cwde
jle
sub
pusha
mov
popf
mov
xchg
add
cwde
push
adc
mov
add
daa
test
lods
sbb
mov
and
ret
fwait
inc
jmp
mov
or
dec
and
inc
jle
adc
lods
jl
je
or
aad
push
(bad)
jle
sti
not
ja
ds
vsubpd
ins
and
cld
lods
or
add
push
fimul
fcom
mov
in
cmc
ins
sbb
mov
mov
sbb
and
nop
xor
mov
pop
or
ins
dec
xor
jns
lods
inc
out
cwde
shl
retf
fcmove
mov
xchg
pop
mov
inc
sub
mov
jge
jb
xchg
mov
push
in
in
ret
fs
inc
jle
loope
adc
das
and
pop
nop
pop
test
jae
push
repnz
cmp
mul
jg
and
adc
ins
sub
fild
cmp
jmp
push
add
sti
inc
std
arpl
enter
repz
rol
inc
add
xor
mov
fnstenv
setns
mov
push
pop
cwde
adc
hlt
adc
repz
aas
push
ror
add
sahf
mov
fs
clc
inc
mov
cdq
add
jno
mov
lea
(bad)
sub
mov
sbb
mov
mov
cmps
fs
pop
fisubr
push
mul
mov
adc
imul
add
jne
and
movs
xchg
and
or
ret
and
xor
mov
sub
mov
sub
mov
jo
ins
sub
clc
lahf
xchg
pop
mov
push
std
push
call
arpl
push
xchg
loope
cmps
stc
mov
inc
int3
imul
call
jne
sar
popf
push
lea
mov
mov
test
jmp
outs
fstp
psrlw
or
cmc
jp
(bad)
dec
out
dec
fdivr
add
js
test
mov
icebp
fist
pop
and
sahf
add
jno
stos
mov
ja
rep
arpl
fs
(bad)
stos
in
ds
xchg
arpl
or
push
cmp
sbb
mov
sub
jns
and
shr
test
add
nop
adc
test
sbb
add
mov
jl
push
movs
cli
ret
add
gs
pop
add
call
push
xor
lahf
es
sub
lds
les
mov
jo
add
inc
or
jecxz
les
fidiv
adc
les
jb
jmp
mov
sbb
repz
jle
sub
stc
mov
cwde
push
dec
cmp
repnz
das
dec
dec
(bad)
push
add
retf
in
sub
inc
mov
push
pop
adc
xchg
dec
lods
stc
and
clc
(bad)
cmp
jno
mov
mov
cmp
sbb
and
into
push
and
sar
cmp
push
imul
xchg
popa
imul
jnp
loop
gs
sub
repz
pop
(bad)
mov
and
push
jno
and
sbb
rol
xor
jge
lock
sahf
cmp
inc
sbb
xor
adc
aad
mov
push
pushf
sub
or
stos
js
retf
not
mov
icebp
push
repz
inc
(bad)
pop
int3
shl
jge
retf
push
stc
push
fmul
inc
(bad)
ds
push
or
dec
sbb
pop
ret
sbb
out
or
xor
adc
mov
pusha
je
xchg
mov
retf
push
stos
cmp
push
scas
mov
es
fwait
mov
ds
dec
push
ss
push
out
in
mov
sub
xchg
jle
pop
inc
leave
hlt
add
shr
jns
jb
push
rol
push
leave
mov
data16
and
loope
mov
mov
int3
mov
ret
jb
jae
mul
jmp
jle
nop
(bad)
repz
dec
ja
sbb
sub
inc
dec
jge
adc
lds
sahf
pop
rcl
enter
in
outs
cmp
loop
fadd
call
outs
pop
(bad)
and
dec
add
mov
jne
inc
in
aad
xchg
xchg
scas
inc
inc
pop
and
and
cs
adc
leave
sbb
fild
aam
dec
shr
enter
sahf
outs
daa
hlt
into
mov
fnstenv
imul
rol
cmp
mov
test
inc
or
sahf
je
out
add
mov
or
mov
push
jno
ret
in
ret
jmp
mov
test
inc
adc
xchg
add
lock
cmp
(bad)
dec
fdivrp
mov
fadd
idiv
ficomp
and
mov
jae
fistp
adc
mov
fidivr
sub
(bad)
mov
sub
or
pop
jmp
and
(bad)
mov
push
and
push
or
addr16
add
mov
shl
jmp
adc
mov
fistp
xor
into
mov
in
idiv
mov
mov
or
cwde
ss
ja
cmc
iret
cmp
sbb
xchg
cmp
test
or
fadd
fsubr
sbb
or
mov
mov
xor
pop
pop
jne
aas
xchg
xchg
das
sub
mov
pop
cmp
int
rol
movs
out
push
mov
dec
adc
dec
imul
cmp
adc
aaa
clc
cmp
jl
xor
sar
jnp
mov
inc
sbb
lea
pop
mov
fisttp
das
scas
ror
outs
xchg
in
pusha
mov
in
ret
cdq
push
cmps
xchg
xor
dec
jmp
jno
cmp
xor
xor
jmp
sub
repnz
jo
(bad)
ror
test
xchg
ins
sbb
cmp
js
stos
dec
int
mov
add
inc
rcr
push
add
lods
push
push
mov
mov
scas
and
scas
mov
popa
mov
pop
jmp
jle
les
int
mov
fldenv
mov
scas
dec
fnstenv
(bad)
mov
bound
outs
nop
push
cmp
popa
pop
lea
(bad)
mov
jo
cmp
push
mov
sahf
loopne
lahf
xor
pop
mov
fistp
icebp
cmp
arpl
iret
lea
nop
sub
lea
data16
icebp
les
xor
pushf
jns
push
ret
pop
jbe
ret
xor
mov
cmp
push
mov
rcl
mov
xchg
(bad)
cmp
out
not
sub
fidiv
inc
inc
push
das
loop
cld
xor
das
popf
mov
xchg
clc
or
adc
mov
push
push
jge
inc
retf
xor
sbb
enter
mov
mov
adc
jns
out
sub
fistp
dec
repnz
in
mov
ja
iret
push
sar
fstp
daa
xor
int
xchg
jge
push
adc
push
aam
ins
inc
or
ror
push
mov
xchg
stos
lds
sti
fnstenv
mov
ins
pop
push
in
shl
mov
sti
jp
lods
hlt
cmp
out
out
prefetchnta
sub
mov
inc
cmp
stos
xchg
pop
sub
(bad)
inc
in
pop
sub
nop
pop
inc
xchg
push
in
xchg
aam
mov
add
adc
sbb
repz
adc
jmp
inc
and
(bad)
retf
movs
repz
jmp
es
mov
lahf
dec
vmovss
or
(bad)
fnstenv
add
std
push
aaa
(bad)
clc
popa
xchg
std
test
scas
or
imul
pusha
mov
sbb
sub
test
sub
ds
popf
ja
cmps
and
dec
jb
cli
push
inc
pop
sub
push
jp
inc
in
out
sbb
or
sahf
add
imul
cmps
aas
push
jae
push
out
fcomp
xor
inc
fs
test
xor
cmp
pushf
mov
lods
jno
imul
xor
stos
jnp
out
pop
pusha
sub
jmp
adc
push
test
ins
pop
or
push
and
popa
jle
adc
add
cmp
nop
mov
je
and
mov
test
sbb
lahf
dec
xchg
into
ret
aas
or
dec
pushf
add
mov
je
(bad)
jge
pop
mov
imul
mov
xlat
sahf
xchg
xchg
lods
fldcw
mov
test
enter
mov
jnp
and
mov
icebp
mov
movs
pop
mov
lahf
outs
inc
adc
cmp
dec
or
xchg
retf
lods
lock
std
pusha
lods
out
mov
mul
int
cli
or
sub
adc
stc
and
sbb
dec
push
aad
mov
aam
and
mov
jmp
jb
mov
sub
jg
iret
or
nop
shr
outs
adc
sahf
sbb
xchg
mov
push
(bad)
fimul
scas
in
das
pop
jnp
div
fisub
(bad)
xor
ja
ds
das
cmps
pop
imul
dec
arpl
cwde
pop
adc
push
loopne
cmc
cwde
mov
into
(bad)
pop
scas
cmc
div
jmp
mov
lahf
mov
stc
jns
xor
push
cmps
push
idiv
rol
lahf
dec
data16
mov
fdiv
mov
sub
fdivrp
inc
outs
div
mov
push
mov
stos
mov
add
mov
pop
adc
aam
jmp
adc
push
scas
clc
mov
sub
mov
and
adc
fldenv
pop
cwde
fdiv
ds
je
and
movs
mov
xchg
mov
mov
mov
les
sti
fild
movs
cmp
pavgw
push
outs
sbb
pop
out
adc
leave
lods
loop
jo
mov
mov
cmps
ret
mov
out
lods
(bad)
fsubr
lods
aad
(bad)
pop
sub
sub
cli
pop
jnp
sbb
xchg
neg
(bad)
adc
or
pop
sahf
ja
loop
jp
xchg
jmp
test
adc
mov
cmps
mov
bnd
mov
push
inc
int
mov
ins
lea
icebp
inc
mov
mov
loope
push
jmp
mov
adc
mov
xchg
in
in
mov
mov
xchg
data16
jecxz
fistp
sub
sub
mov
popa
rcr
mov
jl
mov
mov
sub
dec
inc
pop
mov
into
dec
adc
push
adc
fcomp
pushf
inc
mov
shl
dec
(bad)
in
pop
push
push
pop
shl
daa
lods
add
fwait
shr
aam
bound
dec
call
cmp
pop
cmps
das
jmp
(bad)
cmp
add
add
test
adc
push
sbb
pop
bound
mov
mov
in
or
push
sahf
movs
movs
out
mov
push
sahf
mov
mov
push
call
cli
mov
in
push
and
shl
xor
sbb
mov
push
out
lods
js
push
cmp
addr16
outs
inc
push
jp
ret
into
lea
call
call
mov
ins
in
and
dec
call
mov
imul
and
cld
jmp
push
fmul
mov
mov
and
and
xlat
js
adc
pushf
data16
mov
int3
mov
inc
pop
mov
pop
xchg
and
(bad)
mul
mov
leave
add
fsubp
push
ret
cmp
push
jge
inc
ins
mov
iret
sbb
rol
sub
push
in
es
push
push
or
ffree
shr
idiv
shl
sbb
and
call
push
(bad)
mov
mov
out
clc
inc
pop
xchg
and
xor
mov
mov
jo
icebp
aas
(bad)
rcr
cli
mov
sbb
sbb
jmp
or
ss
sti
popf
ss
mov
and
xchg
fcmove
in
jo
mov
pop
(bad)
movs
mov
scas
xor
cdq
jnp
cdq
les
or
rcl
scas
xchg
mov
mov
push
jno
pop
dec
sar
push
adc
pop
arpl
mov
(bad)
shl
dec
(bad)
out
in
jp
leave
pushf
xlat
dec
adc
rol
xchg
mov
fstp
inc
jmp
inc
jmp
sahf
mov
cmc
pop
out
xor
pop
in
jg
mov
mov
movs
in
sub
mov
dec
xchg
shl
inc
jno
pop
sbb
xor
add
or
dec
or
push
int3
loop
scas
aam
xor
movs
cwde
int
mov
mov
in
add
jno
add
add
outs
mov
not
pop
test
or
push
pusha
lock
stos
xor
add
gs
movs
out
retf
(bad)
ret
lea
movs
adc
sub
inc
fisubr
add
data16
(bad)
fdiv
mov
push
add
ror
outs
jg
push
sub
sbb
lods
xchg
ret
mov
ds
shr
cld
dec
(bad)
dec
loop
pop
adc
mov
lods
mov
popf
loope
sbb
mov
out
test
ins
pop
(bad)
adc
aas
sub
push
inc
pop
mov
loopne
std
push
xchg
mov
cmps
cmp
ret
jmp
dec
xor
int
jmp
inc
cmp
jae
sbb
lock
xor
xchg
and
push
in
stos
jae
loop
push
jle
mov
int
add
(bad)
retf
inc
sbb
or
(bad)
add
sbb
ins
jmp
mov
add
mov
inc
xor
stc
aaa
int
hlt
(bad)
xor
mov
daa
cdq
bound
pop
sbb
jg
inc
xchg
xchg
add
mov
xor
xchg
pushf
cmp
mov
loope
add
(bad)
mov
pop
pop
adc
lahf
xchg
fucomi
push
jb
mov
mov
aas
xor
jns
mov
imul
les
ss
pop
xchg
ja
push
and
jne
hlt
push
(bad)
mov
jg
pop
inc
scas
aas
or
add
cmc
neg
adc
cld
push
ja
test
pop
push
pop
lods
ds
jnp
into
or
or
xchg
cmc
jge
xlat
jnp
sbb
adc
lods
pop
push
lds
pop
fild
aad
cld
and
dec
loop
mov
ins
mov
pop
jnp
sub
scas
ja
jns
int
bound
sar
test
lea
loop
mov
xchg
daa
fucompp
xlat
mov
stc
ror
and
fisttp
mov
pop
push
and
mov
addr16
xchg
(bad)
shl
je
rol
stos
les
pop
arpl
cmp
stos
movs
jmp
and
and
or
sub
mov
inc
dec
add
xor
hlt
addr16
pop
hlt
sbb
aas
les
scas
sar
xchg
inc
xor
repnz
push
pushf
fs
dec
out
das
icebp
dec
lock
cmp
iret
(bad)
mov
pop
pop
add
or
dec
loop
scas
mov
aam
daa
aaa
int3
mov
stos
pop
add
sbb
retf
or
ret
inc
lods
(bad)
adc
mov
xchg
ret
xchg
mov
push
fistp
add
push
outs
push
and
shl
cmp
and
pushf
cs
xchg
add
jge
pop
ins
fcomp
in
sbb
mov
xchg
cmp
or
std
and
jmp
inc
jns
mov
sub
ror
add
in
out
and
push
mov
push
mov
cmp
mov
fisttp
push
mov
in
mov
mov
outs
es
inc
mov
ins
ins
inc
not
xor
jo
cmc
pushf
fmulp
jp
aaa
popf
push
std
test
dec
jl
loop
sbb
fadd
mov
mov
xlat
mov
imul
in
jae
adc
mov
les
(bad)
adc
(bad)
jge
cmp
xchg
dec
arpl
fisttp
add
hlt
fs
jae
jmp
leave
sub
and
sbb
and
xchg
jnp
push
out
adc
jle
mov
dec
jne
pop
mov
das
sar
xchg
call
int3
stc
test
fnsave
sub
xor
adc
cld
call
ret
stos
xlat
jecxz
xor
push
cdq
pop
in
enter
or
adc
in
push
outs
or
scas
retf
cdq
in
js
mov
jae
add
sbb
adc
(bad)
cmp
mov
stos
adc
add
mov
mov
push
xor
xor
mov
out
mov
mov
(bad)
cmc
std
mov
stos
sbb
xchg
add
call
mov
inc
lahf
ja
in
das
xbegin
test
mov
mov
adc
mov
cld
imul
cld
mov
push
dec
add
pop
pushf
mov
xchg
fisttp
lahf
cmp
push
push
arpl
push
clc
mov
bound
imul
or
movs
cmps
mov
jae
sbb
fs
inc
cwde
jbe
aam
dec
sub
pop
mov
std
push
jb
jns
repnz
push
push
add
adc
mov
dec
and
and
xchg
sahf
fcom
sub
loop
cld
int
jecxz
sbb
cmps
std
sbb
bnd
fld
push
aam
push
pop
and
imul
fsub
xchg
mov
add
repnz
jmp
dec
das
mov
loopne
ficomp
pop
mov
in
cmp
cmps
mov
fstp
les
scas
les
pop
push
fucom
ds
js
rcl
out
fdivr
outs
retf
sahf
xor
int
cmp
or
out
push
xor
data16
mov
inc
mov
sub
imul
scas
aam
js
aas
enter
repnz
retf
sti
popf
scas
jb
mov
xor
icebp
or
(bad)
enter
hlt
push
aaa
add
cmp
xor
jnp
mov
add
mov
mov
sub
jmp
cmps
add
movs
xor
cwde
push
mov
ins
into
jne
out
or
xor
pop
aas
add
cs
jge
fwait
jecxz
or
sbb
retf
test
popa
cdq
sar
add
ret
out
xlat
cdq
sub
call
jns
in
stos
push
scas
rol
mov
call
jns
push
jmp
call
cmp
sub
gs
loop
jno
xchg
fxch
(bad)
mov
out
push
icebp
fs
mov
dec
dec
addr16
outs
ds
test
xor
and
push
ds
stc
adc
inc
pop
pop
repnz
sub
pop
adc
push
les
push
dec
jmp
mov
arpl
ret
or
clc
cli
pop
test
imul
push
leave
hlt
cmp
sub
and
mov
inc
lock
xchg
stos
into
data16
neg
pop
or
xor
stc
jo
and
push
sbb
push
ds
test
into
xchg
movs
jmp
xchg
call
arpl
mov
repz
int3
push
shl
jmp
sbb
into
adc
div
xor
dec
jbe
movs
hlt
pusha
mov
stos
stos
xor
popa
push
stos
ret
(bad)
out
and
xchg
or
or
imul
lahf
cld
pop
addr16
ja
fstp
add
xor
repz
rcl
test
ins
jns
bound
and
inc
push
add
push
jp
stc
sbb
mov
ins
inc
mov
cld
or
mul
mov
daa
test
sub
cmp
pop
mov
jp
xlat
fwait
popa
sbb
shl
shl
(bad)
sbb
mov
sbb
lahf
retf
push
call
push
stos
mov
or
lods
iret
repz
daa
daa
xlat
jbe
push
jle
stos
xor
cmp
sbb
sbb
and
scas
mov
(bad)
jns
xor
std
lds
shl
fisttp
inc
jge
inc
pxor
pusha
pop
jne
mov
adc
fisttp
hlt
pop
jmp
push
clc
and
inc
or
mov
push
nop
and
mov
inc
in
mov
mov
pop
push
xlat
(bad)
cmp
sbb
xchg
idiv
push
scas
sbb
jle
imul
inc
fidiv
add
jge
ficomp
(bad)
pop
inc
jg
cmp
rcl
mov
stc
cdq
adc
cmp
movs
out
mov
mov
adc
sbb
mov
aaa
leave
ja
test
add
inc
retf
push
push
sub
retf
push
ror
jg
repnz
jl
out
cmp
mov
dec
sahf
pop
lods
jecxz
push
or
mov
push
enter
sahf
int3
pop
fidivr
out
repz
sbb
sti
mov
add
inc
jl
out
mov
mov
xchg
repnz
repnz
div
movs
adc
lock
mov
ret
leave
icebp
xor
jb
adc
shr
jno
js
jns
sbb
test
jp
(bad)
mov
dec
dec
ins
imul
int3
xor
(bad)
fsubr
mov
xor
outs
mov
dec
adc
pop
div
sbb
push
bound
imul
movs
mov
dec
push
push
or
loope
mov
sub
pop
daa
sbb
stos
jge
add
xor
test
mov
(bad)
in
stos
push
mov
fidiv
xor
xchg
out
loopne
mov
pop
sbb
aas
dec
jecxz
jbe
outs
adc
cmp
adc
push
jae
inc
int
ror
data16
mov
arpl
pop
mov
mov
jg
mov
sar
or
call
iret
jl
aam
mov
jge
jecxz
inc
test
push
pop
lahf
add
outs
push
inc
call
push
call
inc
in
and
cmp
ins
hlt
pop
cmp
(bad)
jp
mov
adc
mov
push
fs
xchg
test
dec
adc
aam
aas
imul
and
inc
inc
sar
sub
add
jmp
jmp
pop
push
xchg
repnz
push
xor
sahf
jl
jo
in
adc
call
push
adc
aaa
add
fild
enter
sub
sbb
mov
es
jle
xchg
stos
dec
fisttp
ret
mov
ret
xor
sti
cmps
sbb
inc
push
out
push
inc
(bad)
mov
adc
cmp
sub
mov
retf
mov
test
inc
pop
pop
or
add
mov
xor
or
mov
xor
sub
pop
out
mov
push
cmpps
scas
arpl
shl
inc
(bad)
stos
retf
push
aad
scas
test
and
jb
and
and
test
(bad)
call
xchg
sbb
xor
pop
test
or
aad
push
adc
fs
xchg
inc
cmp
pop
and
adc
jle
outs
mov
scas
xchg
popa
push
outs
ds
pop
movs
rcr
loopne
inc
mov
add
pop
outs
movs
or
movs
sbb
pop
in
jmp
test
fisub
arpl
mov
pop
call
add
sub
xchg
sar
je
ja
fsub
retf
lds
fst
xchg
enter
ins
add
mov
mov
add
test
mov
ds
repnz
icebp
push
push
cmc
cdq
jae
std
ins
sub
addr16
or
xchg
ins
das
push
sbb
jno
jle
mov
mov
pop
cli
ins
inc
sahf
into
in
inc
test
push
imul
imul
jb
fwait
mov
popa
int3
imul
out
jae
aas
inc
les
pop
mov
das
ss
fnstsw
sub
sub
cmps
mov
sti
out
sti
das
xchg
aaa
sub
ret
imul
out
cld
(bad)
std
aam
ja
and
ficomp
pop
(bad)
fcom
jecxz
jge
arpl
push
cmp
cli
paddw
cmp
shl
rcr
mov
jae
sahf
inc
sbb
jns
sbb
aam
and
(bad)
jmp
dec
inc
xor
dec
jecxz
add
xchg
shl
test
inc
iret
sub
or
fcom
mov
jl
pop
fmul
aad
adc
push
xor
vcvtsd2ss
repz
call
xchg
sub
lods
jmp
ret
xchg
sti
stos
stos
cmc
push
adc
sbb
jbe
mov
jmp
mov
(bad)
xor
dec
aad
inc
inc
std
jo
retf
cmp
movs
ds
add
loope
mov
hlt
xchg
xlat
ja
loop
scas
pop
inc
(bad)
neg
mov
ins
mov
lods
and
sbb
in
jne
jbe
std
push
repz
sbb
movs
sbb
xchg
movs
inc
mov
cmp
aas
or
je
sbb
hlt
pop
ret
in
repnz
jae
pop
jmp
mov
gs
lods
mov
mov
mov
ret
xchg
xchg
dec
stc
arpl
es
push
mov
repnz
pop
cmp
mov
lock
mov
test
movs
cmp
jmp
fcmovu
enter
stos
dec
stos
mov
popa
leave
xor
cdq
fistp
sbb
jp
in
rol
push
ins
jg
xor
push
jecxz
jg
lock
dec
xor
push
xchg
call
xlat
repz
push
pop
cli
inc
cmp
dec
xchg
push
adc
stos
ds
mov
imul
add
pop
mov
mov
pop
push
data16
sbb
pop
lods
inc
in
push
shl
pop
dec
mov
sub
nop
adc
fistp
and
movs
pop
fimul
shl
ffreep
mov
stos
mov
jl
xor
push
jns
jge
aas
mov
mov
sub
pop
ss
sbb
add
jnp
(bad)
push
rcl
fimul
(bad)
ficom
pop
dec
cmp
inc
inc
pop
popa
dec
sar
or
or
fist
push
xchg
or
push
pop
mov
jecxz
xchg
das
lock
jns
fisttp
fnstsw
imul
jmp
imul
mov
stos
icebp
ds
fcomp
cmp
add
cmps
in
cmp
xlat
div
rcr
push
fistp
outs
dec
xchg
loop
pop
rcl
mov
adc
jmp
in
add
shl
and
mov
leave
and
add
mov
or
xor
add
inc
loopne
jns
xchg
xchg
xlat
jmp
sub
retf
aad
xchg
jmp
xchg
mov
neg
sbb
repz
sar
sub
inc
in
xor
fdivr
jo
cmp
add
mov
lods
mov
jecxz
movs
cli
fdivr
or
or
shr
nop
retf
mov
sbb
in
dec
sub
call
push
aaa
jmp
rcr
pusha
lds
ss
or
cmps
popf
cmp
fistp
xor
movs
cld
pop
xchg
cld
inc
pop
ret
xchg
or
or
inc
adc
or
push
imul
xor
mov
clc
xchg
outs
xchg
or
and
icebp
sub
fist
ficom
or
dec
ds
push
inc
imul
and
xor
xor
add
or
jge
sub
out
dec
dec
lock
jne
or
mov
pop
adc
add
jle
sub
or
fnsave
xchg
cwde
cmps
out
nop
inc
jmp
fdivr
sub
iret
fimul
inc
ds
and
jb
and
inc
push
test
lods
add
jns
repz
sub
pop
in
pop
or
mov
outs
mov
sbb
sbb
push
aam
es
xlat
pop
and
mov
clc
and
adc
inc
mul
mov
fsub
int3
mov
cmps
cmp
mov
adc
mov
mov
jae
push
cmp
cmp
dec
enter
push
jmp
mov
pop
mov
mov
cmps
and
push
push
or
xchg
imul
dec
stos
push
dec
sti
sahf
fiadd
jbe
adc
sbb
mov
and
pusha
in
xchg
retf
jo
jne
sbb
add
adc
and
aad
ds
add
pop
sub
mov
enter
jmp
add
shl
cmp
and
lods
cmp
pop
movs
js
(bad)
jmp
test
fiadd
mov
dec
mov
dec
sub
imul
xor
fldcw
xchg
cmp
fimul
or
sahf
push
xor
stos
mov
not
jp
(bad)
imul
imul
fcom
inc
xchg
leave
lds
jnp
bound
cmovns
pop
mov
out
fs
ret
mov
or
jmp
and
repnz
sub
fisttp
ins
fisubr
pop
lahf
mov
jno
mov
pushf
add
pop
dec
add
pop
(bad)
leave
inc
test
xor
movs
popa
movs
in
jb
jns
jmp
out
ret
inc
je
inc
inc
arpl
fiadd
nop
pushf
adc
xchg
nop
xchg
pop
test
into
mov
push
in
loope
out
jnp
sti
add
cdq
mov
rep
pop
in
rcr
mov
retf
loope
pop
ins
lods
jbe
xchg
hlt
ins
mov
ins
dec
aaa
dec
inc
pop
jg
dec
or
popa
mov
(bad)
clc
neg
jnp
inc
add
sbb
(bad)
hlt
xchg
jecxz
pop
nop
leave
js
push
out
ror
paddd
call
bound
bound
and
pushf
hlt
pop
sbb
cmp
add
jle
lods
mov
mov
shl
xor
clc
movhps
inc
xlat
aad
mov
ss
enter
mov
push
jbe
imul
out
mov
bound
frstor
pusha
mov
dec
ret
shl
xlat
std
xlat
pop
push
mov
and
lods
and
xchg
mov
sub
xor
pop
and
xchg
jmp
push
jl
add
iret
xchg
bound
into
sbb
mov
cdq
dec
stc
cdq
pop
inc
jae
outs
popf
sti
jmp
jb
stos
bts
daa
hlt
je
iret
ds
cmp
es
sti
loopne
jmp
adc
call
das
data16
out
jp
sub
fidivr
mov
out
dec
test
sub
in
jo
ins
mov
dec
lds
mov
jnp
(bad)
aam
jb
inc
std
inc
(bad)
jle
(bad)
cmp
in
jge
iret
xchg
repz
cmps
cmps
dec
ror
mov
inc
shl
or
stc
inc
sub
cmp
dec
cmp
xchg
and
dec
cwde
test
adc
aad
mov
jmp
mov
shl
int3
sub
sbb
cmps
adc
shr
pmulhuw
sahf
daa
mov
cli
repnz
popf
jmp
cs
hlt
jl
and
cs
push
adc
pop
cmps
sbb
add
clc
push
inc
fst
sbb
cmp
dec
jns
mov
mov
pop
jbe
retf
inc
push
pop
push
aam
inc
test
lods
(bad)
jne
pop
mov
lock
pop
cs
cmps
sub
pop
push
les
aad
sti
pop
jae
pop
in
shl
push
mov
test
repz
or
aaa
(bad)
sub
lods
sub
fimul
out
outs
test
popf
popf
(bad)
jle
pop
ins
arpl
cli
lds
out
clc
lea
js
push
and
and
ss
retf
mov
adc
cmps
or
in
mov
mov
pop
add
dec
mov
and
ja
imul
inc
ret
sahf
push
sub
push
mov
dec
sub
popf
mov
test
cmps
rcl
pop
(bad)
out
dec
xor
(bad)
xor
dec
sub
test
jecxz
enter
push
scas
cmp
add
(bad)
pop
into
fwait
fwait
test
sbb
push
xchg
push
pop
add
sub
out
push
outs
dec
ins
scas
sub
out
repz
aad
mov
dec
push
adc
(bad)
mov
inc
and
dec
fisttp
cmc
std
xchg
adc
add
call
es
sbb
xchg
xchg
retf
sub
into
fwait
mov
and
je
sbb
sbb
jg
test
aam
sbb
add
popa
stc
pop
xchg
aad
sbb
cmp
mov
data16
inc
pop
mov
dec
dec
or
imul
test
push
aas
cmps
test
and
sub
movs
ret
push
cmp
outs
xchg
adc
mov
xlat
stos
loope
mov
jl
mov
das
jno
sub
test
cmps
mov
int
mov
adc
(bad)
and
xor
or
jmp
xor
xchg
movs
test
aas
jecxz
xor
adc
add
popa
cld
int3
mov
lds
dec
mov
mov
call
cli
enter
and
pop
pushf
inc
mov
fcomp
int
or
aas
add
fwait
stos
dec
in
mov
adc
and
push
imul
test
cmp
cmp
inc
jmp
pop
jae
push
mov
mov
shl
fistp
rcr
add
sbb
test
pop
sbb
enter
ret
out
movs
or
in
ror
xchg
xchg
mov
fisttp
and
outs
adc
icebp
xchg
lods
out
in
jg
lods
clc
in
xor
sub
nop
add
packsswb
inc
mov
jbe
add
fsubr
jne
iret
sahf
mov
inc
cmc
scas
push
dec
cs
pop
pop
push
sbb
mov
mov
ror
les
cmps
icebp
push
pusha
jae
adc
(bad)
hlt
aad
fbstp
js
hlt
dec
sbb
shl
scas
add
or
inc
in
inc
cmp
push
add
(bad)
shl
lock
ins
(bad)
retf
sbb
jne
repz
shl
add
or
and
dec
bound
ret
xor
push
lock
inc
cmp
jae
and
adc
es
inc
mov
mov
inc
imul
pop
stc
jmp
and
push
push
pop
jno
inc
retf
add
movs
mov
jb
div
mov
jg
pop
push
xchg
test
push
jl
lds
sub
mov
inc
xor
inc
(bad)
sbb
push
add
scas
inc
mov
adc
xchg
mov
mov
xchg
cmp
sbb
jo
lea
popa
adc
or
jmp
sahf
shl
clc
fwait
fs
inc
out
mul
js
add
in
push
mov
pushf
xor
mov
loope
cli
pop
jle
lods
popf
out
or
cmps
adc
mov
ror
fldcw
mov
jae
sbb
push
out
xor
xlat
pop
pop
cli
pop
fnsave
outs
test
or
sti
ja
jl
mov
inc
cmp
aas
std
popa
or
ins
pop
inc
stos
sub
xlat
mov
cmp
jmp
sub
inc
stos
clc
ret
test
sbb
xchg
push
or
cdq
cmp
stos
and
(bad)
ins
aas
dec
mov
pop
add
ret
jno
scas
mov
lods
test
and
aaa
ret
mov
sahf
movs
dec
and
mov
xchg
pop
and
cs
jo
xchg
std
cmp
sbb
jmp
jno
mov
add
shl
aaa
imul
xchg
mov
pop
cwde
ret
jg
(bad)
rcr
add
(bad)
std
push
enter
mov
dec
shl
dec
or
aas
leave
je
or
out
xor
retf
or
dec
add
adc
mov
and
inc
movs
mov
push
outs
push
jp
and
inc
mov
(bad)
and
mov
cmp
mov
enter
fwait
mov
pushf
test
mov
xchg
cs
or
dec
lods
inc
mov
out
cli
mov
fst
sbb
mov
xchg
adc
mov
inc
sti
movs
xchg
ds
mov
push
fstp
ins
push
enter
push
mov
addr16
ins
jmp
pop
leave
inc
xchg
mov
push
cmp
cwde
or
cmps
push
jne
lods
lea
in
(bad)
mov
scas
loopne
shl
jns
jb
jmp
add
pop
test
mov
mov
(bad)
stc
jl
xchg
inc
xor
mov
mov
cs
cmp
jle
push
push
xor
aaa
in
dec
mov
adc
std
loop
les
fmul
mov
loop
nop
dec
inc
mov
fsub
mov
sub
aad
(bad)
mov
leave
pop
jg
lea
sub
push
jmp
or
rcl
sub
adc
jmp
mov
(bad)
mov
jns
and
jl
outs
loopne
hlt
lds
lods
cmps
push
les
lods
cmp
xchg
push
sbb
add
int3
stc
movs
aaa
sbb
push
mov
xor
jns
jp
and
(bad)
(bad)
xor
repz
sub
mov
into
fwait
dec
outs
cmp
scas
xchg
mov
outs
add
xchg
shl
jmp
push
or
test
pusha
mov
sub
stos
arpl
pop
loopne
adc
pop
and
das
cmp
imul
jne
mov
not
movs
gs
or
cmp
cmp
test
loopne
push
movs
es
cmp
pop
xchg
ret
setp
(bad)
ds
pop
test
test
cwde
sbb
push
inc
mov
jne
pop
push
or
or
fcomp
lods
js
add
add
ja
(bad)
(bad)
outs
jp
cmp
jns
push
retf
loopne
aas
lods
psubw
das
outs
mov
cmp
call
mov
retf
add
or
into
sbb
out
cmp
(bad)
std
pop
mov
jp
cmp
movs
mov
push
mov
dec
iret
mov
push
adc
jg
loopne
les
cmp
retf
in
les
mov
pop
scas
fld
(bad)
enter
add
popf
outs
mov
dec
ss
lods
add
cmp
push
pusha
fs
sbb
ficomp
in
mov
shl
imul
fdivrp
jns
jecxz
push
(bad)
popa
mov
fsubr
stc
js
jmp
rol
or
mov
es
jno
neg
push
jg
shr
pop
dec
stos
add
test
dec
add
push
lds
jg
gs
push
pop
cmp
add
retf
ds
mov
cmp
mov
fdivr
rcl
cli
mov
into
call
(bad)
inc
mov
fwait
or
stos
mov
xor
addr16
cwde
mov
nop
mov
xchg
jp
sti
lahf
jbe
sub
lods
fwait
mov
push
rcr
imul
inc
cmp
aam
xchg
stos
ja
dec
into
call
push
(bad)
cmp
mov
cli
xor
pop
xor
push
add
aaa
ds
add
add
lds
and
cld
mov
push
cmp
ins
dec
(bad)
cs
sti
mov
dec
stos
jmp
js
jle
js
mov
jmp
push
scas
push
mov
xor
push
adc
(bad)
loopne
lods
fisub
pusha
arpl
enter
int3
inc
pop
push
or
push
loope
or
cmp
into
cmp
data16
xor
inc
movs
xor
add
adc
mov
cmp
add
jne
or
in
xchg
ss
dec
fisubr
adc
jecxz
and
aas
pop
jle
test
mov
imul
das
mov
push
mov
ja
xchg
sub
lds
xchg
adc
or
stos
nop
and
mov
push
in
jge
jns
int
add
sbb
jge
inc
jp
scas
mov
repnz
pop
mov
ja
ror
aad
pop
cmp
outs
repnz
pop
or
xchg
scas
or
or
inc
xor
ret
sbb
xchg
jmp
inc
or
xchg
loope
in
mov
lock
push
ja
dec
dec
popf
ss
or
push
dec
xchg
push
mov
movs
cmps
bound
xchg
test
pop
xchg
arpl
(bad)
(bad)
xor
aaa
test
aam
call
or
test
(bad)
jmp
movs
cmp
scas
test
test
mov
cwde
or
push
jg
cli
cmp
dec
arpl
mov
dec
cwde
jmp
je
lods
cmp
sub
and
xor
mov
test
out
jo
push
jmp
fcmovu
enter
repnz
jle
enter
jmp
mov
pop
mov
test
cmp
mov
xchg
xchg
mov
mov
out
fnstenv
(bad)
scas
iret
add
mov
call
jb
hlt
fmul
cdq
mov
inc
push
mov
int
ds
into
shl
jb
std
jbe
and
imul
fdiv
nop
aas
push
clc
xchg
test
sti
push
ds
pop
dec
pop
imul
fsubr
push
xor
cmps
inc
xor
in
lea
add
pop
and
mov
and
jo
push
push
idiv
sub
inc
lock
cmp
stc
push
idiv
sbb
xchg
enter
sbb
fld
mov
mov
cmp
sar
mov
cwde
xor
mov
jne
lods
pop
inc
and
addr16
loope
es
sub
add
pop
repz
pop
mov
in
dec
leave
push
mov
or
jo
xchg
cmp
in
xchg
cmps
dec
inc
ds
or
stos
rcl
scas
cmp
lods
sahf
pop
scas
sbb
push
icebp
cmp
out
rep
sahf
cmp
mov
(bad)
mov
pop
mov
repz
inc
jnp
mov
shl
mov
push
pushf
into
sub
pop
mov
test
sbb
je
cs
cmc
not
mov
add
dec
sbb
mov
int3
fwait
out
dec
repz
push
xor
pop
ins
inc
push
xchg
in
mov
mov
cmp
sbb
jp
bound
cmps
adc
das
cmp
cmp
jmp
mov
sub
shl
movs
pop
fdiv
add
pop
or
sub
loop
mov
mov
xchg
inc
and
aam
pusha
fs
and
stc
xor
(bad)
fs
stos
aad
jbe
fs
mov
and
mov
sbb
into
xchg
add
cmc
pop
imul
(bad)
test
test
jne
sti
and
imul
adc
nop
movs
inc
rol
dec
mov
int
das
push
fmul
or
and
jge
in
push
pop
out
bound
jg
mov
xor
call
inc
jmp
mov
popa
aaa
mov
push
das
jecxz
jno
push
in
sub
cdq
test
out
push
xchg
cs
or
mov
iret
pop
in
jbe
outs
lods
loopne
lods
xchg
(bad)
mov
mov
sbb
push
inc
xor
inc
jnp
jge
sbb
lea
fldenv
call
lea
icebp
addr16
out
sbb
test
call
cdq
cmp
rol
mov
les
xor
in
dec
and
idiv
ins
(bad)
enter
(bad)
movs
rol
sub
pop
cmp
in
jo
lods
dec
and
xchg
add
aam
call
stos
mov
pop
dec
stc
call
mov
dec
(bad)
push
and
call
mov
add
(bad)
nop
sbb
js
std
out
jl
inc
addr16
icebp
daa
or
rol
imul
dec
pushf
xor
or
(bad)
xchg
cwde
shr
jp
pop
push
sub
shr
scas
cli
mov
in
add
mov
adc
push
stc
div
ret
stc
mov
(bad)
and
dec
out
movs
push
mov
cdq
data16
xor
xchg
push
push
fwait
(bad)
div
mov
push
and
adc
test
xchg
push
mov
daa
jl
cmp
cs
ja
adc
bound
jp
test
dec
cli
outs
in
pop
mov
cmps
sub
and
mov
adc
int3
out
pop
stos
mov
ss
add
xor
or
mov
sbb
sub
sahf
push
and
gs
repz
repnz
repz
lods
cli
repnz
jecxz
xchg
sbb
out
or
cmp
mov
dec
sbb
mov
cmps
push
stos
pop
push
push
mov
pop
test
xor
add
add
call
mov
jno
dec
mov
adc
nop
mov
std
push
pusha
fstp
push
cs
pop
fwait
das
ss
sbb
sahf
cld
xor
jl
call
mov
dec
inc
call
mov
sbb
pop
lock
push
sbb
sub
cmp
push
xor
push
adc
and
sub
test
adc
retf
mov
xor
shr
int3
cmps
mov
sub
add
pop
and
jg
mov
iret
mov
mov
sbb
sbb
mov
aas
lea
dec
jne
test
aad
jp
mov
pop
cmps
pop
mov
hlt
inc
and
jp
mov
pop
out
xor
or
pop
fsubr
xchg
into
cld
sub
xor
ins
popf
fwait
shr
outs
in
aaa
out
jo
push
mov
cs
jl
nop
ins
mov
fst
loopne
loopne
jb
and
fisubr
push
mov
sub
lahf
jp
push
adc
outs
std
push
add
mov
aas
in
jmp
mov
das
scas
jle
loopne
stc
dec
test
or
cli
aas
jmp
xor
add
pop
push
and
rol
fcom
nop
fcomp
inc
push
stos
out
jl
sbb
cdq
cmp
stos
jg
add
jae
repz
mov
jmp
bnd
cvtpi2ps
repnz
mov
pop
push
jmp
dec
test
pop
add
out
popw
jg
scas
dec
js
ss
dec
xor
inc
jbe
mov
mov
daa
mov
mov
and
loope
(bad)
inc
inc
dec
es
std
adc
mov
jns
ins
aad
ja
call
or
add
push
cmp
lahf
je
test
cld
into
stc
add
dec
xchg
and
add
es
bound
adc
pop
cmps
loop
(bad)
out
dec
sbb
ins
call
mov
lods
arpl
xchg
stos
inc
dec
mov
cwde
lea
add
retf
inc
sahf
cmp
sub
ins
stos
sub
aas
sbb
stos
stc
lods
nop
enter
or
jl
jae
pop
pop
sub
or
dec
scas
xchg
push
inc
adc
not
ds
(bad)
and
pop
sti
frstor
fcmovnu
sbb
popa
adc
outs
jl
ror
mov
jmp
or
push
add
or
ins
cli
inc
icebp
inc
push
fiadd
stc
scas
adc
pop
push
call
dec
mov
fcomp
std
sti
sbb
push
ret
cwde
adc
pop
xchg
imul
rol
aas
(bad)
cmp
scas
in
or
rcl
aad
push
mov
push
mov
add
inc
adc
mov
or
(bad)
fsub
js
jecxz
jne
push
sbb
data16
pushf
imul
stc
shl
adc
int3
pop
and
mov
loopne
imul
and
(bad)
ret
scas
and
adc
sbb
std
cdq
sbb
cmc
in
push
cmp
inc
pop
test
and
movs
cmp
repnz
rol
rol
lods
sub
pop
mov
push
sar
xchg
inc
mov
lods
movs
jl
mov
xchg
xchg
lods
xor
lahf
sub
xchg
shl
stc
jb
pop
xor
and
and
gs
(bad)
pop
xor
sbb
adc
push
xlat
pop
retf
push
xor
sub
aad
sub
fucomip
out
popa
jmp
cmp
cmc
mov
xchg
mov
or
inc
retf
jmp
iret
pop
ja
retf
out
mov
mov
cmp
das
lea
push
nop
mov
gs
push
hlt
out
add
jle
(bad)
sub
xchg
data16
pop
sbb
mov
pop
out
(bad)
repz
and
dec
cmp
mov
and
sub
or
sbb
mov
hlt
or
and
or
mov
jg
rol
dec
inc
xchg
imul
mov
inc
ins
xchg
aad
dec
mov
mov
ins
rol
dec
sub
jge
les
xchg
jnp
sub
movs
test
clc
inc
mov
sub
add
xchg
xchg
mov
cmc
cmp
push
push
jg
mov
mov
aas
jae
popa
int3
jecxz
mov
aas
shl
push
ficom
mov
dec
test
or
xor
pushf
sbb
clc
pushf
in
call
sbb
or
mov
rcr
ins
ja
or
cmp
dec
icebp
inc
mov
xor
fdiv
sbb
loop
xchg
hlt
jl
fs
fld
mov
cmps
dec
cmp
xor
cmp
call
dec
cld
dec
pop
out
int3
pushf
and
mov
mov
imul
mov
or
out
mov
jmp
repz
push
call
pop
arpl
not
and
js
test
call
(bad)
cmp
mov
(bad)
cdq
pushf
ds
mov
fisub
les
xchg
cmps
pop
xlat
outs
lds
aad
addr16
mov
mov
repz
adc
add
mov
inc
sub
add
aam
ret
gs
outs
jbe
and
rol
mov
inc
or
push
in
adc
xchg
jae
hlt
cwde
jb
lock
cmp
cwde
in
dec
movs
mov
imul
outs
xchg
lock
push
push
jg
push
sub
mov
adc
add
cmps
sbb
movs
sub
inc
pop
xchg
fwait
push
dec
jp
and
xchg
shl
mov
in
inc
jno
push
jmp
test
shl
rol
stos
adc
fild
(bad)
sbb
inc
xchg
mov
add
aam
cmps
leave
sub
shr
pop
cmps
push
mov
ja
fist
loope
jno
xor
inc
jbe
(bad)
fnstenv
(bad)
jge
dec
test
ins
mov
ja
jmp
cmp
sbb
mov
bound
add
add
scas
retf
out
dec
mov
pop
enter
ret
scas
sti
arpl
les
xchg
mov
lods
mov
push
add
push
(bad)
movs
dec
in
in
test
cmp
ror
add
in
retf
fld
ins
cmp
outs
pop
lock
xor
sbb
jb
call
shr
ins
sbb
sbb
hlt
cmp
(bad)
in
dec
and
and
push
test
fwait
mov
ins
inc
aas
or
cld
adc
mov
in
in
mov
mov
adc
ins
(bad)
pushf
xchg
div
(bad)
mov
pusha
hlt
jne
add
xor
cld
lods
bound
aad
xabort
loop
inc
out
mov
push
ja
mov
adc
ret
sub
int3
xchg
mov
push
dec
ret
fwait
push
add
sub
and
popf
jmp
push
sbb
xor
aad
xor
mov
pop
outs
test
push
jne
or
ins
aas
mov
xchg
adc
fwait
loop
pop
out
lock
mov
xchg
cs
ret
je
std
not
xlat
sub
jmp
cmc
adc
mov
dec
dec
dec
push
pop
sub
ret
mov
mov
stc
sbb
test
xor
loop
les
jmp
pop
sub
(bad)
movs
or
ss
daa
push
and
mov
sahf
pop
adc
mov
retf
mov
cmp
jl
dec
cwde
in
je
push
inc
mov
dec
add
in
jo
sahf
xlat
into
scas
jmp
int3
aaa
add
shl
inc
int
ds
dec
jb
cld
sbb
inc
adc
dec
add
cmp
pop
fisttp
adc
sbb
mov
aam
jns
out
scas
pop
pop
mov
sbb
cmp
neg
and
or
and
push
xchg
pop
push
scas
sub
add
sbb
inc
lods
imul
inc
pusha
jmp
aad
sub
xchg
xor
int
cmps
in
jg
pusha
mov
sub
int
repz
mov
lods
out
mov
xlat
es
pop
pop
es
cld
dec
(bad)
dec
(bad)
jbe
inc
sub
mov
mov
not
pop
js
xchg
and
jle
sti
fcmovnb
dec
in
data16
mov
sub
pop
mov
pop
(bad)
jmp
(bad)
or
fwait
jmp
adc
leave
int
outs
in
sbb
dec
movs
cmp
(bad)
sbb
loop
push
out
add
add
sub
jp
dec
imul
sbb
pushf
push
mov
inc
int
in
push
push
jae
push
fs
sub
leave
cmps
fcomp
in
cmp
mov
sbb
imul
fist
mov
jge
imul
xchg
out
mov
enter
dec
push
ja
out
cld
sahf
imul
push
adc
inc
neg
or
cdq
scas
and
cmp
cmps
mov
loopne
(bad)
mov
pop
xchg
sub
ds
loop
adc
jecxz
jmp
in
shl
(bad)
jb
add
and
mov
cmp
inc
jmp
call
mov
int3
test
daa
outs
scas
pusha
rcr
cmps
xchg
mov
xor
iret
xor
dec
fmul
push
fs
aaa
(bad)
sub
adc
adc
(bad)
pop
std
bound
lock
aad
sub
mov
mov
mov
(bad)
lods
(bad)
out
stc
jecxz
xchg
and
das
lds
mov
pop
sahf
dec
pop
add
pop
movs
les
sti
xchg
icebp
pop
push
hlt
movs
jle
jecxz
jge
(bad)
stos
outs
scas
mov
cmp
outs
xchg
inc
retf
dec
daa
push
ret
pop
jbe
jl
push
ret
data16
push
movs
jge
push
mov
test
mov
loopne
cdq
fld
test
cld
cmp
mov
and
cmps
xchg
xchg
cwde
dec
jmp
dec
dec
mov
mov
and
loopne
mov
jae
mov
into
adc
jmp
sbb
cmc
fs
push
imul
push
rcr
pop
out
xor
ss
call
or
out
js
push
adc
test
inc
cmp
out
mov
inc
sbb
sub
outs
push
mov
pusha
cdq
xchg
add
adc
fcomp
fmul
mov
dec
aas
shl
sub
inc
or
xor
pop
repz
or
cmps
std
add
mov
mov
inc
ror
in
sar
ins
nop
daa
and
jmp
cmp
xor
push
enter
es
dec
mov
rcr
cmc
call
sahf
pop
adc
rcl
cs
or
cmp
ret
inc
dec
push
add
and
cmps
adc
xchg
mov
call
xlat
imul
and
loopne
pop
rcr
mov
or
jb
test
arpl
pusha
lds
out
xlat
ins
and
xchg
xor
cmp
popf
inc
in
mov
fstp
sbb
cdq
aaa
add
xor
xchg
cmps
loop
in
mov
data16
push
add
adc
push
mov
jge
fimul
cmp
push
stos
jecxz
dec
daa
jo
or
rcr
push
cmps
rcl
push
int
push
popa
stc
cmp
ins
inc
add
dec
mov
sbb
mov
sti
retf
push
call
push
daa
dec
push
or
leave
cdq
stos
lods
imul
push
cmp
jno
inc
adc
test
xor
push
popf
daa
pop
enter
lds
sub
retf
popf
sub
fwait
repz
and
mov
add
pop
sti
xchg
outs
retf
out
push
(bad)
mov
xchg
push
jle
sbb
sti
xchg
es
fisttp
mov
aas
fidivr
sbb
ror
sub
fsubr
pusha
cwde
dec
ja
adc
sub
js
inc
and
jg
push
mov
neg
push
pop
push
inc
mov
(bad)
or
inc
leave
std
rcl
jo
mov
or
mov
out
and
(bad)
aad
add
std
mov
xor
loopne
or
lahf
and
push
sbb
(bad)
popa
sub
gs
mov
ins
sub
mov
ss
sar
bound
clc
pop
sbb
jo
fld
stos
add
xor
int
cs
adc
das
push
icebp
cmp
cmp
adc
hlt
call
movs
aad
pop
jno
popa
daa
sub
cld
mov
inc
movs
adc
sub
xor
mov
je
repnz
jbe
xchg
int
adc
das
mov
pushf
xor
push
jno
push
mov
or
sub
xor
lea
xchg
test
xor
jge
iret
shl
adc
in
addr16
imul
mov
xchg
cmp
xor
push
and
and
cmp
test
fcmovnb
mov
pop
div
fcmovbe
mov
pop
adc
xor
push
xchg
setae
cmp
sahf
xchg
(bad)
aaa
mov
xor
mov
sub
xchg
call
push
cmp
retf
cmp
sbb
cmp
das
push
xor
mov
inc
pop
mov
dec
adc
mov
xor
mov
jecxz
sub
jae
xor
jp
mov
outs
pop
sub
mov
call
adc
and
push
jl
sub
xor
ret
mov
pop
adc
and
pop
test
les
scas
test
pop
sbb
and
(bad)
inc
out
ror
dec
push
mov
adc
add
in
movs
ror
aam
push
leave
(bad)
cmp
mov
jnp
cli
cmp
bound
(bad)
mov
ins
fdiv
rcr
movs
(bad)
xchg
jmp
mov
adc
jo
or
neg
xor
mov
push
jno
bound
call
jmp
pushf
mov
hlt
or
inc
jbe
adc
sbb
pop
push
cdq
xor
fs
outs
retf
pushf
inc
mov
dec
pop
jne
inc
add
popf
jne
iret
and
popf
jnp
xchg
add
das
jo
(bad)
or
cld
push
xchg
pusha
sbb
fsub
xor
js
sub
ret
test
fidivr
xchg
fild
(bad)
repnz
inc
xor
arpl
out
xor
add
int3
jg
out
sub
daa
mov
lahf
xchg
ror
hlt
mov
push
mov
push
sbb
add
xor
out
mov
fucomp
mov
pop
inc
retf
add
mov
aaa
mov
xchg
sahf
int3
sti
out
nop
jb
daa
lahf
mov
pop
div
pop
leave
(bad)
sbb
adc
loope
hlt
inc
ror
mov
pop
xchg
out
lock
xchg
into
pop
addr16
xchg
pop
fwait
sub
push
jge
pop
add
aad
xor
mov
shl
arpl
scas
xchg
pusha
data16
adc
rcl
dec
gs
mov
daa
add
push
cmp
jmp
fst
dec
sahf
sub
xchg
adc
ret
jle
loop
lds
clc
aas
nop
cwde
jnp
cdq
pop
shr
stc
cmp
mov
movs
add
nop
mov
fisttp
jmp
daa
fist
sub
ror
(bad)
lea
out
jmp
cmps
or
mov
lods
jno
mov
inc
or
pop
jle
mov
push
ja
repz
sub
mov
stos
or
pusha
cli
cs
mov
ss
sub
cwde
fld
mov
cmp
xor
mov
jmp
mov
aad
mov
inc
mov
jb
dec
jmp
cmp
push
xchg
sbb
cs
call
ins
loopne
fsub
jns
mov
mov
jecxz
jecxz
aaa
xchg
push
add
mov
xchg
stos
ja
xchg
inc
sub
loopne
test
fstp
sub
cli
jmp
ja
in
dec
inc
leave
pop
loop
fsub
inc
add
fwait
imul
sahf
pminub
adc
cli
jge
daa
lock
in
popf
xchg
fisttp
daa
div
jb
inc
rol
mov
xchg
mul
push
inc
xchg
cli
cmp
sub
cmp
addr16
cmp
add
fwait
imul
(bad)
fwait
mov
jne
nop
out
call
pop
mov
mov
xchg
jmp
mov
sub
mov
cwde
repz
leave
ja
jecxz
sar
push
(bad)
out
sahf
test
inc
fucomp
add
xor
inc
sub
out
xchg
inc
jle
ins
in
xchg
popf
inc
shl
jb
add
les
mov
push
scas
push
sbb
mov
sbb
xor
or
clc
sar
cmp
(bad)
or
pusha
mov
neg
xor
pop
outs
jecxz
mov
outs
mov
imul
cdq
gs
jl
inc
test
sbb
pop
xchg
add
out
retf
xchg
inc
bound
xchg
jae
enter
ja
shl
scas
adc
adc
xor
cs
mov
rol
cmp
jmp
pop
dec
xor
mov
sub
imul
xor
outs
xchg
movs
jg
call
sar
xchg
lods
cmp
scas
icebp
sub
dec
mov
and
mov
pop
mov
dec
ins
in
stc
and
das
call
in
mov
hlt
xchg
add
int3
outs
dec
add
cmps
rcr
icebp
repnz
push
pop
mov
cmp
pop
xchg
adc
stc
jp
or
add
lds
or
cmp
xor
dec
leave
xor
repnz
cmps
loopne
imul
push
call
fwait
gs
sub
sti
xchg
stos
sbb
cmp
sar
ret
dec
or
xchg
pop
nop
loop
icebp
mov
push
xchg
xchg
mov
pusha
xchg
jmp
jle
gs
add
inc
stc
dec
(bad)
jns
in
add
mov
outs
sub
cmp
sahf
cmps
leave
push
scas
in
int
lea
icebp
or
sub
push
int
pushf
rcr
sub
repz
adc
or
mov
loopne
mov
std
mov
push
gs
xchg
in
imul
mov
xlat
jbe
push
popa
jns
ins
jno
cmc
imul
idiv
inc
ret
add
or
adc
adc
dec
add
cmp
jl
in
test
out
adc
xor
jne
mov
and
mov
or
sub
ins
out
fs
jle
das
shl
nop
inc
cmc
scas
jmp
scas
mov
(bad)
outs
ins
cmps
fstp
rcr
scas
inc
inc
inc
cmc
ror
in
cmp
cli
sbb
fldcw
or
mov
sub
call
pop
lahf
and
inc
nop
mov
jbe
dec
fist
fidivr
addr16
movs
mov
push
sub
mov
inc
jae
xor
dec
push
jo
in
cmp
push
and
add
jno
jge
test
mov
mov
shr
out
pop
jno
out
jge
push
cli
lods
dec
fidiv
call
push
sbb
and
lods
inc
push
jle
xor
mov
inc
pop
mov
mov
sub
enter
in
imul
or
leave
shr
sbb
hlt
arpl
push
and
jnp
dec
ror
add
bound
int
jmp
cli
sub
mov
into
mov
pop
(bad)
vmaxps
imul
retf
fnstenv
cmp
aad
push
cmc
dec
ret
and
in
and
jl
cli
and
ins
test
repnz
repz
xor
lods
cli
mov
dec
mov
pop
jo
mov
jle
jbe
neg
mov
mov
inc
jl
cld
cld
or
push
or
and
jne
mov
adc
hlt
test
xor
mov
lods
sub
test
mov
test
sbb
das
or
add
mov
push
sub
or
nop
std
mov
fsubp
lds
push
cmp
xor
ins
dec
mov
inc
dec
lock
inc
aad
out
sub
jno
popa
pop
push
sub
in
jge
fdiv
std
nop
sub
cdq
bound
push
icebp
stos
aad
inc
imul
stos
cmp
push
ror
fistp
shl
sbb
fisubr
xor
retf
dec
jg
fld
cwde
xchg
enter
shr
pop
push
out
cli
fisub
gs
mov
daa
fidiv
add
retf
(bad)
icebp
xor
sbb
sub
fidiv
dec
inc
sub
(bad)
fsub
jne
and
inc
push
cs
outs
add
xor
hlt
jl
adc
addr16
or
(bad)
sar
pop
je
pop
fstp
inc
in
clc
outs
inc
outs
nop
jl
out
fdiv
cmps
add
mov
js
call
and
sti
popa
mov
jl
sub
bound
fwait
inc
xchg
addr16
cdq
outs
iret
dec
push
or
jb
add
stos
xlat
or
call
mov
cmps
les
sub
into
fs
icebp
adc
test
mov
cmp
and
sti
(bad)
xor
xor
out
movs
cwde
mov
lea
dec
imul
dec
inc
stos
and
and
retf
mov
push
fadd
loop
sub
int3
test
inc
aas
icebp
stc
inc
retf
sbb
jle
cmp
adc
and
fldenv
ficomp
mov
(bad)
call
and
sub
pop
outs
scas
xlat
loopne
pop
test
inc
push
loop
arpl
pop
retf
loopne
in
push
sti
push
aas
sahf
adc
(bad)
or
cmps
push
call
cmp
jnp
out
inc
in
movs
xor
retf
xchg
pop
or
jmp
es
aaa
push
push
cmp
jle
cmps
dec
lahf
dec
pop
mov
or
and
xor
les
adc
shl
pop
lock
popf
mov
(bad)
sbb
xor
aam
xchg
je
and
cwde
sbb
ret
sbb
mov
addr16
cmp
or
sbb
jae
scas
fldcw
or
push
inc
scas
jmp
mov
pop
sti
in
sub
or
cmc
cmp
mov
cmp
scas
add
add
add
xchg
cs
ror
inc
out
push
dec
sub
rol
sub
inc
jecxz
cs
call
inc
(bad)
repnz
shl
aad
clc
pop
mov
sub
ffree
neg
in
(bad)
cld
add
sbb
inc
pop
test
ror
push
retf
mov
(bad)
mov
cdq
(bad)
int
fdivr
add
and
cmps
jnp
cmp
xchg
inc
std
nop
addr16
popf
and
(bad)
push
outs
inc
mov
fisttp
add
mov
add
pushf
mov
add
ins
ret
test
cmc
sub
and
sbb
pop
adc
xchg
std
jbe
cmp
push
mov
ss
cmp
leave
fnstenv
sub
cs
(bad)
mov
cmp
shr
sti
mov
xor
adc
and
int3
mov
int3
mov
mov
push
or
std
popa
inc
lahf
ds
lods
pusha
and
mul
icebp
call
rol
scas
and
mov
(bad)
sbb
add
fcom
push
lods
call
inc
enter
out
mov
out
(bad)
jmp
aam
jmp
call
cmp
mov
(bad)
scas
out
repnz
inc
push
popa
in
add
adc
mov
aaa
jnp
inc
in
and
mul
out
dec
mov
(bad)
icebp
adc
enter
sahf
jp
inc
cmp
sbb
in
rcl
sub
mov
pop
mov
pusha
popf
ja
lock
das
bound
sbb
fadd
mov
lods
in
xor
aaa
jns
in
inc
bswap
in
imul
push
cmps
cmp
loope
xchg
(bad)
std
int3
add
into
dec
jle
je
push
cdq
repnz
movs
jecxz
and
imul
add
ror
push
jecxz
shr
or
jns
xor
push
stos
int
adc
inc
push
pop
jg
leave
(bad)
jbe
mov
std
mov
outs
jae
dec
ins
adc
cmps
pop
les
jecxz
jbe
mov
mov
add
in
pop
sub
nop
ja
popa
pop
cmp
mov
out
mov
cld
pop
adc
(bad)
fcomp
pop
xchg
into
ja
sbb
mov
mov
push
call
xor
scas
das
mov
add
xchg
jl
jle
lahf
inc
mov
dec
adc
fistp
sub
loopne
pop
imul
xor
cwde
dec
sti
cmps
and
and
enter
jecxz
xor
push
movs
jae
or
test
stc
or
js
sub
sbb
in
in
or
fcomp
push
jecxz
outs
xchg
hlt
mov
pop
(bad)
mov
addr16
(bad)
mov
mov
jle
push
test
sbb
call
shld
xor
call
lods
pop
int
pusha
push
pop
sbb
nop
in
xor
inc
cmp
es
mov
or
sbb
daa
inc
cmp
sub
xchg
xor
stos
(bad)
fdiv
mov
out
stos
inc
jnp
xor
cs
mov
mov
call
aaa
mov
gs
(bad)
jne
jmp
test
adc
cmps
out
mov
stos
idiv
or
enter
add
mov
adc
cdq
xor
pop
xchg
push
mov
fimul
lahf
xchg
xchg
jo
or
pusha
mov
mov
ds
test
adc
and
cmps
jmp
push
outs
mul
mov
out
inc
or
xor
xchg
and
pop
add
rep
fild
das
inc
sbb
jmp
scas
lds
cli
fadd
inc
jmp
in
sbb
sbb
int
in
lods
inc
xchg
sti
adc
loope
mov
js
inc
mov
mov
lods
xchg
movs
push
dec
sub
pop
mov
addr16
(bad)
xor
add
dec
push
xchg
dec
gs
pop
sbb
lods
or
je
xor
jp
rcr
fiadd
movs
push
sub
jno
outs
dec
mov
cld
mov
clc
jmp
cmps
hlt
adc
or
pop
push
push
cmps
jns
or
push
in
fucom
jge
xor
and
push
adc
cwde
sbb
fucomip
fstp
mov
pop
and
cmp
xchg
or
lea
mov
outs
or
fidivr
ins
into
test
aad
mov
test
clc
(bad)
lock
cwde
cmp
repnz
cmp
adc
mov
mov
addr16
pop
mov
mov
push
push
mov
hlt
and
sbb
das
or
mov
rol
mov
or
(bad)
call
and
push
jns
dec
pop
jmp
inc
push
bound
sbb
sti
inc
pop
jp
fcmovbe
cmp
(bad)
pusha
xchg
jmp
cmp
or
sbb
fidivr
mul
pop
shl
dec
in
retf
popf
les
scas
xor
xor
adc
mov
pop
and
mov
not
jecxz
cdq
inc
jge
push
mov
push
push
scas
inc
pop
and
jg
adc
addr16
pminub
enter
(bad)
aas
into
mov
adc
xchg
cs
cmp
fnstcw
pop
mov
daa
cwde
sahf
fnstenv
(bad)
in
sub
int3
jmp
data16
mov
mov
add
in
aad
push
test
repz
jno
or
inc
nop
adc
inc
cli
enter
pop
fidivr
cmp
mov
(bad)
ror
xchg
cwde
shl
(bad)
xor
xor
ds
fwait
add
imul
lock
push
inc
idiv
cvtpi2ps
out
or
mov
mov
cmp
push
pop
cmp
sbb
mov
jmp
pop
addr16
adc
addr16
(bad)
xor
clc
pop
xchg
mov
mov
sub
jo
and
leave
push
pop
sub
pop
add
outs
push
xchg
(bad)
and
out
push
in
pop
icebp
fisttp
dec
arpl
int3
inc
cmps
inc
dec
push
cmc
repz
ins
pop
mov
add
pop
jb
or
fisttp
or
mov
cwde
mov
xor
xor
pop
mov
jae
cmp
int
ds
mov
in
out
(bad)
scas
jl
cmp
enter
aam
mov
call
mov
mov
cld
out
pop
lea
dec
lods
sub
inc
rcl
xor
enter
jecxz
pop
mov
inc
jge
xadd
dec
fiadd
call
mov
mov
add
sub
pop
in
mov
ja
jbe
push
bound
sub
out
iret
mov
imul
sbb
mov
(bad)
mov
jnp
dec
movs
cmp
pop
mov
jmp
add
or
xchg
or
icebp
dec
xor
push
or
cmp
xor
push
jmp
(bad)
repz
popf
test
sbb
mov
adc
pop
stos
cs
ficom
outs
and
mov
inc
jg
popf
xchg
(bad)
jl
jg
add
cmp
repz
retf
int3
push
(bad)
push
push
(bad)
dec
cwde
xchg
cmp
add
mov
(bad)
in
pop
push
stos
xor
mov
outs
int3
inc
xor
push
ficomp
xchg
inc
xlat
movs
inc
adc
hlt
es
aad
dec
dec
sbb
mov
mov
push
or
mov
and
fdiv
(bad)
or
jmp
add
sub
pop
and
cwde
pop
(bad)
pusha
cld
or
jmp
imul
xor
call
jg
and
ds
add
test
fisub
jne
ins
mov
adc
mov
push
jmp
or
xlat
mov
add
stc
ja
lods
add
cmps
cdq
fs
jle
pop
daa
fnstsw
jp
or
inc
pop
inc
fst
fstp
or
xchg
sahf
pop
pop
nop
int
cmp
loope
sti
jno
dec
sub
xor
loop
retf
(bad)
push
outs
outs
pushf
loopne
repz
mov
inc
stc
pop
cmp
mov
inc
arpl
inc
sub
scas
arpl
pop
mov
(bad)
push
sub
pop
cmp
jecxz
xor
or
test
lds
mov
jge
adc
dec
iret
and
clc
sbb
add
pop
lods
mov
mov
into
add
cmp
pop
or
pop
jle
or
and
retf
dec
arpl
dec
rol
jmp
ret
fstp
inc
and
mov
data16
jb
test
arpl
pusha
lahf
sbb
jl
mov
or
pop
mov
imul
dec
out
push
leave
(bad)
dec
xlat
push
mov
sub
ficom
sbb
lea
mov
fsubr
sbb
imul
push
mov
or
and
dec
ja
dec
das
or
das
ins
or
test
into
and
call
dec
movs
and
sbb
shl
inc
mov
ffreep
call
add
stc
(bad)
outs
push
fldlg2
das
mov
ret
inc
add
push
ja
xchg
mov
xor
add
je
aad
iret
pop
test
cld
fcom
les
imul
push
test
add
jle
(bad)
js
lods
aaa
or
push
retf
std
pop
inc
add
cmps
arpl
clc
bound
les
std
adc
aaa
cmp
jae
sbb
push
and
cwde
rcl
pop
addr16
inc
jo
xor
adc
aas
adc
aaa
mov
std
and
cli
ss
sbb
inc
(bad)
cmp
ror
cli
jmp
(bad)
or
(bad)
mov
or
in
or
out
sar
leave
out
int3
mov
push
nop
clc
xor
cmp
mov
dec
icebp
test
(bad)
popf
in
mov
jo
jnp
jne
test
add
or
mov
dec
into
sbb
loopne
es
ror
pushf
addr16
jp
jno
std
xchg
imul
adc
mov
call
adc
adc
movs
std
out
add
pop
jae
ja
mov
jle
sbb
movs
daa
(bad)
(bad)
pop
test
clc
stc
jno
call
sbb
push
addr16
inc
dec
aam
stos
test
adc
shl
and
pop
stos
xchg
stos
pop
or
sbb
mov
inc
aas
aaa
dec
scas
mov
jl
icebp
jae
xor
jmp
mov
pop
or
sbb
int
ss
aas
sub
movs
add
nop
loop
loope
rcr
imul
daa
inc
call
mov
fst
clc
aaa
out
pop
ins
add
push
pop
add
sbb
add
(bad)
call
cli
mov
cmp
sbb
fist
cwde
jle
sbb
(bad)
bound
lea
mov
test
lds
mov
sub
loopne
retf
popa
pop
lea
or
xor
in
ins
jmp
(bad)
lea
mov
cmp
mov
push
sub
add
ret
cmp
lds
aas
sub
mov
jmp
push
pop
or
movs
push
inc
push
(bad)
cmp
or
int
mov
jb
sbb
adc
ds
jmp
inc
push
jmp
popf
out
ins
push
aam
repz
cmps
mov
pop
rcr
ret
mov
add
pop
mov
fsub
mov
pop
or
mov
loop
xor
and
fsubr
inc
sub
inc
imul
loop
push
mov
cmp
mov
arpl
or
lock
popa
cwde
mov
cmp
sub
mov
adc
mov
or
dec
rcr
lock
mov
sub
xor
jmp
(bad)
int
dec
inc
and
popa
or
pop
scas
jo
enter
cmp
add
and
xor
push
sahf
aas
pop
cmp
mov
cwde
in
call
mov
ins
pop
xchg
sub
movs
shl
cmp
retf
jl
jb
mov
shl
inc
sbb
mov
mov
les
or
inc
rol
test
cmps
xchg
pop
mov
mov
mov
mov
dec
inc
push
xor
xor
rcl
cs
in
push
iret
pop
mov
inc
dec
bound
and
sub
clc
xor
mov
xchg
loope
test
cmp
mov
mov
add
(bad)
call
pop
stos
cmp
out
(bad)
mov
pop
sub
pop
punpcklwd
push
ins
nop
pop
dec
and
xor
mov
inc
sub
cmps
xchg
inc
mov
out
mov
push
jbe
adc
cli
jnp
out
adc
sbb
cmp
inc
int3
xchg
sub
pop
push
sub
xchg
adc
xchg
retf
mov
ret
push
loopne
stc
xor
sub
jo
fsubr
and
jp
mov
add
cld
jmp
jmp
ins
jp
cmp
pop
rcr
sar
mov
pop
jnp
sub
je
jns
es
shr
sbb
bound
cmc
and
test
inc
dec
mov
in
xchg
sbb
es
and
test
add
sub
cmp
lahf
lea
fidivr
mov
outs
and
sahf
movs
inc
sub
addr16
outs
sub
fbstp
ret
jns
bound
js
or
rcl
jae
jae
pop
jp
mov
sub
loop
adc
in
ficom
(bad)
loop
add
jmp
pop
jmp
and
adc
add
fiadd
mov
or
mul
sub
jmp
cdq
adc
out
jmp
add
inc
nop
loope
or
push
mov
or
mov
jns
cld
popf
and
cdq
and
clc
and
jecxz
stos
imul
call
xor
jge
popa
arpl
in
loope
in
sub
mov
or
jl
cmps
jns
out
repz
jl
jno
out
inc
int
add
test
imul
xchg
pushf
mov
sub
lahf
xchg
sub
pop
addr16
(bad)
sub
stc
xchg
jmp
popa
mov
retf
push
xchg
adc
push
or
cmp
xchg
jmp
pushf
ins
fiadd
adc
xor
xchg
ins
(bad)
dec
imul
jmp
xchg
mov
and
lahf
or
sbb
mov
popa
mov
fwait
call
sahf
dec
in
mov
push
jbe
loop
gs
inc
stos
dec
pop
in
iret
push
call
and
arpl
and
jne
or
test
xor
pop
stos
xor
push
jl
jo
push
fsubr
loop
aam
(bad)
out
mul
js
repnz
pop
rcr
pop
mov
jae
fs
xchg
fdivrp
std
add
xchg
in
mov
or
mov
dec
or
bound
sti
int
jne
and
jbe
inc
mov
xchg
and
mov
test
sub
scas
out
mov
mov
pop
pusha
jle
cmp
add
leave
shr
xchg
mov
test
pop
jmp
int3
mov
aaa
sbb
dec
sub
adc
ss
mov
sbb
inc
test
mov
push
xchg
inc
ss
jmp
pop
das
cmp
jecxz
stos
or
pop
bound
mov
rol
cmp
fsub
loope
xor
in
aad
cli
jmp
sub
or
mov
add
push
ins
cmp
iret
aad
mov
inc
xchg
je
sub
xchg
xchg
pop
push
leave
fwait
adc
pushf
in
jg
jmp
test
xor
xor
iret
inc
repnz
jnp
jg
mov
dec
(bad)
jle
daa
sbb
mov
lds
cwde
imul
jge
cmp
pop
sbb
push
add
bound
mov
nop
inc
and
das
add
inc
icebp
mov
xlat
sub
dec
rcl
jle
add
add
repnz
adc
pop
out
in
out
stos
ins
jo
ss
arpl
nop
inc
neg
and
addr16
xor
and
data16
sbb
lods
jge
call
mov
pop
ret
fnsave
scas
in
lea
mov
ret
adc
jmp
sbb
pop
aad
add
and
sti
fld
or
adc
mov
outs
mov
and
fist
fwait
ds
and
int3
addr16
inc
push
adc
fdivr
xchg
push
movs
mov
pop
fisttp
dec
rep
sti
aad
or
ss
jmp
outs
out
mov
sbb
jecxz
push
fistp
xchg
dec
stos
push
je
cmp
rcl
es
mul
inc
stc
fnstsw
pushf
arpl
inc
lock
sbb
jp
sub
inc
push
fistp
lds
xchg
ins
ins
sub
sub
and
pop
sbb
inc
loope
cmp
imul
nop
lods
pusha
add
rcr
ins
or
out
in
(bad)
or
mov
jg
jnp
repnz
(bad)
dec
dec
inc
cwde
arpl
add
pop
fistp
mov
mov
mov
mov
ja
adc
add
and
adc
sub
das
hlt
and
cs
push
sbb
fld
pop
mov
jb
add
mov
outs
movs
mov
cmc
call
mov
or
or
outs
jb
xchg
xchg
cmp
aam
mov
loope
fcom
inc
or
cmps
jmp
sbb
leave
addr16
jns
mov
addr16
cmp
(bad)
push
sbb
push
jae
out
adc
fsubp
adc
pop
call
cld
cmp
les
fs
popf
in
movs
adc
cmp
scas
mov
xchg
sub
dec
stc
cmp
stos
pushf
fnstenv
out
test
adc
fistp
add
pop
repz
mov
ins
xchg
popa
push
jl
lods
add
cmps
jle
mov
jne
scas
inc
sub
xlat
mov
adc
call
dec
jmp
imul
loopne
xor
pusha
push
lock
daa
push
inc
mov
xchg
les
int3
stos
cmp
je
mov
dec
sub
ins
xchg
inc
outs
mov
inc
call
clc
inc
mov
push
add
ins
mov
aas
gs
xlat
repz
lods
adc
into
repz
or
fiadd
cmp
cld
adc
xor
out
sub
add
cmps
sbb
lea
imul
pop
mov
loop
mov
outs
(bad)
shl
loopne
xchg
shr
movs
mov
call
sub
fsubr
addr16
fsubr
jo
ret
xor
and
push
sbb
int3
in
fisubr
adc
movs
ja
mov
cwde
lea
push
cmp
sub
hlt
js
mov
dec
sub
arpl
mov
jno
mov
mov
xor
fld
rol
pop
arpl
adc
mov
fmul
cld
(bad)
xlat
sbb
and
inc
adc
sbb
ds
out
mov
lea
adc
scas
jg
bound
cmc
shl
and
sbb
mov
inc
pop
repnz
mov
push
loope
add
ins
jno
lahf
retf
xchg
and
push
adc
xchg
les
adc
test
or
mov
cmc
int
leave
daa
stos
sbb
adc
push
and
mov
inc
daa
cli
aam
enter
push
mov
pop
sbb
stos
or
in
loop
rcr
mov
mov
out
and
outs
hlt
movs
arpl
lahf
lods
std
dec
xchg
test
aad
jnp
jo
hlt
data16
sbb
fisttp
sub
cmc
gs
ds
sub
dec
js
ret
mov
push
(bad)
mov
xchg
outs
(bad)
xlat
movs
lods
repnz
xor
repnz
je
push
adc
xchg
sahf
lea
pusha
xchg
dec
mov
pusha
inc
lds
jmp
mov
jmp
or
push
fisttp
pop
sahf
in
loopne
xor
cmps
push
in
xlat
fucom
push
xchg
xchg
mov
add
ss
push
add
leave
xchg
mov
mov
mov
sbb
mov
jno
jg
rol
cmp
pop
push
xchg
add
mov
mov
mov
ja
sar
repnz
xor
mov
xchg
push
mov
add
lahf
(bad)
mov
mov
(bad)
test
mov
mov
xor
movs
mov
jmp
inc
sub
sub
jmp
add
mov
fdivr
jg
in
nop
dec
mov
inc
jns
inc
aas
xchg
fild
cli
aaa
(bad)
lea
rcr
rcl
outs
arpl
retf
je
ret
pop
xchg
inc
cmp
sbb
pop
pop
mov
int
mov
pop
inc
push
mov
mov
pop
stos
repz
pop
or
jbe
inc
push
clc
std
scas
jmp
mov
inc
addr16
je
dec
div
(bad)
pop
jnp
mov
sti
push
scas
pop
adc
fidivr
daa
or
in
inc
cmp
mov
call
xor
in
inc
jo
leave
mov
mov
cwde
mov
inc
and
push
int3
push
add
scas
push
sahf
xchg
movs
sub
push
lea
in
loope
data16
stc
pop
dec
inc
call
ror
or
fmul
mov
fisttp
sbb
stos
ja
(bad)
mov
mov
jecxz
outs
jne
clc
aas
ret
bound
jg
sbb
int3
sbb
into
xchg
mov
cli
ja
mul
jno
push
pop
xchg
mov
cmp
retf
es
jae
dec
jb
xchg
es
sbb
aas
in
enter
movs
test
jmp
daa
jecxz
xchg
sbb
mov
mov
push
stos
fxch
dec
pop
or
pop
mov
or
sub
pop
aad
mov
pop
and
je
jp
icebp
popf
fwait
sub
std
movs
jecxz
(bad)
aam
out
shl
and
sbb
ins
in
add
xlat
xchg
scas
or
mov
push
shr
mov
adc
iret
adc
jge
das
repnz
add
jae
clc
test
loope
cld
xchg
rol
test
gs
mov
fwait
pusha
fnstsw
xchg
ficom
icebp
imul
and
lds
cmp
jmp
fs
dec
add
inc
pop
lea
add
sub
cmp
add
or
inc
dec
aad
fnstcw
aaa
in
mov
and
lahf
pop
push
xor
cwde
fisubr
gs
jl
adc
sub
jae
imul
movs
dec
jmp
fmulp
mov
or
loop
leave
fiadd
int
xor
fcmovne
mov
and
in
fsub
mov
or
push
jno
or
in
add
dec
ret
mov
push
add
gs
lahf
jmp
cmps
xchg
xchg
mov
mov
sub
adc
mov
inc
jecxz
xlat
mov
adc
cmp
mov
in
dec
or
mov
mov
pushf
mov
pop
loopne
xchg
test
dec
pop
(bad)
aad
xchg
dec
xor
icebp
ffree
push
hlt
out
fadd
push
xor
cdq
les
jne
sub
mov
into
and
inc
lahf
popa
call
adc
ror
iret
push
or
xchg
into
sbb
(bad)
in
arpl
jne
pop
or
jle
repnz
or
dec
int
mov
outs
xchg
and
sbb
jg
xor
xchg
push
lods
mov
jl
int3
inc
pop
jge
dec
push
cmc
xchg
push
adc
leave
ret
lahf
int
add
aad
scas
repz
shr
mov
jb
cmc
(bad)
cwde
and
push
mov
daa
data16
and
stos
jnp
dec
or
jmp
push
xchg
dec
arpl
xchg
push
lea
jae
les
loop
jno
hlt
pop
loop
jmp
arpl
cmps
enter
loope
popa
xchg
and
ins
cmp
xchg
xchg
and
add
xlat
popf
cmp
push
xchg
mov
push
inc
jb
dec
loope
repnz
mov
sahf
repz
pop
test
xchg
test
add
cmp
add
fucom
mov
ins
out
add
jle
daa
scas
push
pop
hlt
pop
mov
mov
or
iret
add
call
in
imul
add
(bad)
add
js
and
frndint
xor
mov
jnp
loope
hlt
mov
sub
(bad)
bnd
mov
shl
test
sbb
dec
cmp
cmp
jns
sar
fdivr
addr16
mov
mov
out
jmp
mov
sub
dec
cmc
or
and
not
jo
jp
cmp
cli
fist
icebp
retf
sbb
mov
mov
pop
pop
fiadd
mov
mov
in
pop
ret
sbb
xchg
lods
stc
div
(bad)
push
push
dec
or
stos
out
inc
jmp
nop
into
leave
fistp
outs
daa
adc
into
cli
mov
cmp
inc
ins
in
adc
lahf
ret
add
xlat
sbb
jmp
pop
add
jg
mov
sar
and
adc
in
imul
mov
leave
jns
aaa
xchg
push
push
jo
sbb
xor
adc
imul
leave
pop
arpl
invd
fwait
add
dec
push
mov
push
jmp
fsubr
jl
std
mov
sbb
sub
xlat
inc
jae
clc
cld
and
xchg
retf
jge
xchg
inc
mov
sbb
mov
mov
cmp
push
mov
imul
mov
mov
out
aaa
sub
push
out
ret
adc
pop
bound
mov
xor
jge
fwait
push
arpl
das
dec
movs
ficomp
out
jle
pop
shr
cmp
jne
(bad)
ins
xchg
mov
mov
adc
(bad)
pop
cmc
add
out
xor
add
jmp
mov
test
loop
xchg
or
les
xchg
(bad)
xchg
lods
es
pop
jle
ficom
out
jne
hlt
sahf
lock
in
or
push
push
out
mov
popf
call
out
cmp
pop
mov
fs
pop
shr
dec
(bad)
loope
xor
mov
dec
ror
xlat
jecxz
pop
jo
ret
scas
fisttp
push
xchg
cld
stc
and
adc
je
jo
cmp
sbb
not
lods
test
xchg
mov
mov
cli
jp
sub
fistp
sub
jp
retf
mov
cmp
adc
adc
jbe
pop
or
cmp
cwde
je
lods
cmp
out
xchg
enter
push
repz
mov
or
fwait
sub
or
mov
add
push
neg
adc
bound
cli
sub
cmps
int
xlat
jge
push
jns
les
mov
cdq
xchg
xor
cmc
(bad)
cld
aad
add
test
jnp
je
fisttp
ins
mov
push
xor
push
xor
push
dec
mov
sub
ret
or
in
outs
or
leave
jmp
sbb
cld
fdivrp
add
jne
mov
jb
loopne
add
push
test
jecxz
ret
jmp
and
adc
inc
sub
cmp
(bad)
jnp
add
fsubr
popf
pop
mov
das
(bad)
ffree
jecxz
enterw
jecxz
cli
mov
(bad)
idiv
pop
jmp
jnp
lea
jo
and
rol
pop
cmp
sbb
jecxz
out
int3
or
arpl
stc
add
fsub
sub
inc
ss
repnz
xchg
retf
mov
adc
push
ins
adc
jbe
cdq
mov
sbb
mov
jl
int3
sti
cmp
out
add
repz
and
sbb
ins
cmps
cmp
and
sti
cmps
jae
stc
dec
std
jno
mov
push
sahf
jns
adc
pusha
daa
add
cmp
sbb
test
mov
push
addr16
push
mov
push
push
adc
xchg
fsubrp
or
stos
dec
ds
jle
dec
and
es
mov
or
push
xchg
mov
daa
jb
cmp
sbb
push
clc
popf
cmp
dec
fisubr
mov
std
and
add
pop
(bad)
jae
fsub
out
sbb
mov
movs
loope
xchg
out
fwait
mov
inc
jecxz
adc
inc
xor
fimul
dec
inc
jns
fisttp
mov
adc
rcl
mov
call
scas
pop
lods
mov
(bad)
cmp
mov
mov
mov
cmp
cmp
fcom
(bad)
shl
fbstp
ins
push
retf
sub
mov
xchg
lea
dec
es
ret
lea
icebp
sub
fdivr
call
add
fnsetpm(287
loop
(bad)
and
pop
cli
mov
mov
ds
push
sub
xor
jp
rcl
mov
arpl
xchg
imul
inc
in
pop
or
data16
mov
rcl
test
mov
lfs
adc
shr
outs
jg
cld
lock
jg
test
jmp
mov
xchg
dec
retf
(bad)
xchg
(bad)
pop
stos
xchg
cmp
sbb
iret
mov
mov
sbb
cwde
stos
sbb
in
in
mov
mov
push
(bad)
or
jb
icebp
cmp
ja
loopne
jne
mov
sbb
jge
aas
mov
in
xchg
cmp
mov
cli
or
add
rcl
add
inc
cmp
loope
sbb
sub
mov
pop
mov
cwde
in
sahf
hlt
jmp
out
or
iret
loop
mov
xor
icebp
mov
mov
fdivr
push
lea
je
cmp
sbb
mov
add
xchg
or
dec
inc
mov
add
leave
jns
rcr
cmp
push
arpl
fwait
jge
movs
imul
fidivr
mov
pop
jbe
jne
jns
xchg
leave
jne
cmps
sbb
aad
mov
sahf
pop
das
lahf
inc
jo
dec
cmp
cmp
push
in
cdq
or
adc
nop
rol
cmps
leave
add
and
mov
stos
xor
(bad)
lock
into
aaa
dec
jbe
iret
ins
push
jb
test
stos
fstp
xor
int3
lds
shr
mov
mov
lea
xchg
daa
sbb
dec
jmp
outs
pusha
inc
fimul
cld
push
push
ins
push
icebp
cmp
xchg
and
imul
mov
cmp
sbb
es
and
pop
arpl
pop
loop
cmp
cmp
movs
pop
cmc
test
fst
cmp
mov
dec
inc
jl
icebp
jne
das
add
cli
sbb
fcmovnbe
jae
mov
xor
push
xor
push
outs
in
mov
dec
inc
pop
cmps
or
push
push
repz
pop
ja
push
dec
scas
push
lds
int
pop
sbb
lea
mov
inc
scas
sar
mul
repnz
cmp
shl
(bad)
(bad)
xchg
dec
dec
and
xrelease
out
inc
imul
mov
xchg
gs
and
ret
xchg
out
add
sbb
jg
sbb
xchg
clc
mov
sub
stos
jmp
cmc
sbb
ja
add
les
test
frstor
stc
jg
sub
daa
enter
outs
or
push
xlat
pop
nop
pop
mov
dec
fisttp
inc
adc
mov
xchg
pusha
in
loope
imul
pop
adc
inc
mov
je
jg
pop
(bad)
xor
mov
shl
jo
dec
pop
inc
and
and
pop
lea
jbe
test
fadd
sub
mov
mov
jmp
out
cdq
sti
push
icebp
gs
inc
rcl
pop
stc
mov
aaa
jle
sbb
outs
(bad)
xchg
inc
mov
es
sub
cmc
jb
lods
adc
xchg
push
out
gs
bound
mov
xor
and
jl
je
mov
jo
xchg
leave
inc
xchg
leave
repz
push
adc
add
lods
mov
movs
pusha
push
repz
mov
cli
push
dec
add
scas
push
mov
xchg
nop
sub
mov
push
loope
adc
jge
jp
add
daa
adc
sbb
jbe
addr16
jno
pop
ins
jns
inc
ins
out
stos
aaa
popf
jbe
adc
jmp
repz
push
xor
cwde
cmp
sti
jecxz
aas
sti
xlat
pop
cmp
test
push
or
retf
data16
mov
mov
pop
xor
arpl
nop
dec
adc
dec
outs
data16
mov
inc
push
cmp
aad
sar
outs
mov
and
sbb
leave
mov
gs
jmp
pop
xchg
dec
lods
or
mov
imul
mov
xchg
sub
ins
inc
ss
inc
pop
sub
and
pop
xchg
fidiv
cmp
gs
adc
inc
das
mov
icebp
repz
arpl
sti
push
mov
adc
sbb
(bad)
push
push
cmps
xchg
outs
mov
mov
(bad)
aaa
adc
push
retf
(bad)
sbb
cmps
mov
mov
outs
jmp
mov
out
or
pop
daa
outs
push
das
sahf
mov
enter
repnz
cmp
mov
jb
dec
xchg
push
add
div
pop
pop
sbb
loopne
out
mov
jmp
pop
jne
xlat
sbb
add
std
push
cmp
mov
out
and
mov
arpl
dec
dec
into
sbb
sub
xor
or
movntps
sti
shr
xor
call
or
lahf
cmp
add
or
jmp
retf
jbe
dec
je
lods
push
out
dec
mov
std
add
pop
adc
xor
fild
xor
mov
xor
xor
test
js
int3
cmps
fld
xor
dec
cmc
cmps
loop
cmp
inc
aas
cmps
emms
push
idiv
mov
sbb
pop
mov
dec
les
rol
pop
mov
or
sbb
mov
pop
cmp
sbb
movs
or
cmps
mov
push
pop
or
add
in
xor
lods
sub
scas
pop
pop
dec
pop
psubw
sbb
cdq
nop
out
popa
vphaddbw
pop
iret
mov
loop
jmp
push
add
mov
add
adc
add
addr16
pop
in
dec
sbb
retf
xchg
addr16
leave
mov
pop
xchg
pop
pop
xchg
push
cmps
xor
cmp
scas
hlt
lea
sub
lahf
inc
push
xor
xor
or
xor
arpl
jbe
jg
xor
cwde
ror
bound
dec
sbb
mov
mov
lods
inc
cmp
and
mov
sub
repz
sbb
jecxz
fbld
retf
xlat
jmp
imul
xor
xlat
and
outs
push
in
ret
shl
je
popf
and
jp
out
(bad)
sub
sub
les
enter
push
add
push
sub
std
push
dec
jmp
scas
ins
loopne
call
jl
jle
xchg
jae
ss
mov
aaa
xchg
fmul
(bad)
daa
push
ror
mov
gs
fwait
dec
pop
and
mov
adc
stos
test
mov
nop
jmp
cwde
jbe
mov
and
cmps
xor
pop
mov
mov
adc
in
jo
aad
mov
xor
retf
int
sub
addr16
cmp
cmp
loopne
adc
push
std
pop
dec
xor
imul
into
dec
imul
dec
mov
xor
out
(bad)
pushf
and
into
dec
pusha
dec
shl
sbb
add
mov
or
popa
outs
popf
fmul
xchg
jp
movs
pop
hlt
and
(bad)
jb
inc
and
movs
mov
loope
sbb
out
push
int
or
repnz
ds
and
pushf
inc
and
xchg
jecxz
xor
or
cmp
std
xchg
or
or
mov
(bad)
xchg
xlat
or
mov
or
aas
lea
or
(bad)
xor
dec
jno
mov
retf
push
nop
and
xchg
out
mov
les
(bad)
pop
(bad)
das
inc
adc
xchg
xlat
sbb
arpl
scas
xchg
inc
rcl
xchg
cld
imul
lea
jae
sbb
jg
(bad)
xchg
(bad)
loope
adc
dec
ja
xor
adc
test
mov
(bad)
mov
div
movs
jl
fcomp
or
imul
fcmovnb
dec
cli
sub
ja
into
fldcw
loopne
pop
shl
sar
sub
(bad)
out
cwde
fwait
pop
jo
cmps
aad
cs
xchg
mov
push
inc
lods
int3
push
sub
daa
jmp
call
mov
sub
ins
inc
out
add
mov
(bad)
jns
pusha
rol
std
jmp
sbb
pop
stos
cli
lds
mov
dec
out
jns
aam
mov
push
jnp
jno
idiv
cmp
aas
popa
jne
jns
addr16
outs
aam
lock
mov
cld
jne
in
jmp
cmp
arpl
adc
xchg
int
sbb
pusha
std
and
fwait
imul
pop
pop
repz
sbb
and
(bad)
aas
jecxz
pop
sti
movs
xor
cmps
mov
das
std
mov
inc
push
pop
cwde
sub
push
and
inc
and
sbb
pushf
scas
xor
sbb
inc
pop
add
mov
pop
ja
cld
retf
push
or
xchg
ins
or
cmc
dec
scas
rol
pop
out
pop
clc
push
mov
fadd
mov
push
jnp
ins
mov
(bad)
sub
mov
int
iret
sub
add
rcr
push
adc
add
scas
pop
push
add
adc
mov
fadd
test
aam
xchg
pusha
stc
jb
push
mov
out
(bad)
sbb
mov
inc
imul
add
outs
xchg
test
cwde
dec
xor
fdivp
mov
mov
sar
mov
add
adc
push
rol
test
xor
adc
ret
je
scas
mov
sub
data16
loopne
test
movs
jl
je
or
jecxz
add
jl
cmp
mov
jo
das
cdq
xchg
ror
inc
jno
test
jmp
sbb
aas
leave
mov
(bad)
mov
repz
and
push
loop
pop
pop
jmp
aaa
inc
cmp
pop
fcmove
stos
hlt
xchg
clc
add
pushf
sahf
dec
out
addr16
jp
clc
fwait
xor
nop
cmp
movs
iret
pop
sub
and
pop
or
call
test
cmp
outs
cs
jecxz
xor
jns
push
jle
fs
(bad)
in
pop
sbb
lds
mov
dec
imul
sub
into
lea
and
scas
mov
iret
push
dec
pop
push
inc
or
repnz
inc
pop
push
arpl
lods
(bad)
sti
xor
ins
xor
ds
dec
test
je
retf
movs
mov
loop
mov
js
mov
dec
mov
ins
rcl
adc
sbb
fisttp
sbb
inc
xchg
push
out
and
sbb
(bad)
mov
xlat
mov
xchg
cmp
push
hlt
outs
cmps
sbb
outs
and
(bad)
dec
imul
cmp
minps
icebp
sar
cwde
(bad)
mov
or
and
jo
ficomp
or
shl
out
xor
push
xchg
sbb
or
dec
cmp
out
call
mov
jo
push
rcr
call
xlat
fld
dec
lock
push
pop
and
mov
mov
test
icebp
mov
test
add
push
xchg
adc
push
xchg
adc
enter
mov
xor
push
vpsrlw
or
daa
sbb
adc
je
scas
(bad)
jbe
or
jne
dec
out
sub
pushf
xchg
test
ins
popf
cmp
sbb
push
mov
int
jmp
cs
jl
hlt
inc
adc
inc
jo
xor
ret
ins
fdivr
push
call
imul
push
addr16
test
add
inc
mov
or
pushf
adc
or
and
add
or
xchg
fnsave
push
xchg
retf
jmp
xor
push
ins
xlat
jnp
popa
sar
loop
aad
movs
nop
push
inc
mov
mov
stc
lea
or
xchg
xor
retf
pop
xlat
add
popf
xchg
mov
movs
sbb
sbb
cmp
jnp
push
aam
movs
adc
(bad)
lahf
pop
int3
xchg
or
adc
ja
jmp
mov
ret
mov
sub
and
repnz
mov
and
mov
call
pusha
imul
mov
mov
or
push
fnstsw
ins
mov
fwait
sub
lock
cmp
jbe
cdq
addr16
imul
jmp
push
retf
or
popa
push
cmp
push
shr
adc
mov
pop
imul
mov
loope
enter
add
loopne
cmp
add
out
(bad)
fwait
ja
fnstsw
mov
dec
cmp
pop
int
cs
or
xor
lods
inc
retf
pop
mov
jae
je
mov
or
xchg
aam
mov
sub
inc
or
rcl
clc
push
pop
inc
or
adc
xor
ins
or
hlt
and
imul
and
sub
(bad)
cmp
dec
add
ret
xchg
test
push
push
sub
stos
mov
mov
daa
fldenv
jp
fist
ins
retf
inc
push
ins
xor
adc
cmc
xor
cmp
sahf
xor
not
out
ror
ror
pop
sbb
jmp
js
rcr
cli
and
lea
(bad)
mov
and
out
mov
(bad)
or
(bad)
dec
cmp
bound
push
push
shl
and
pop
push
sar
jmp
push
mov
add
push
mov
or
fs
mov
push
cmp
rcl
rol
pushf
adc
pop
mov
jmp
in
and
popa
addr16
jne
repnz
int3
inc
test
mov
mov
les
add
inc
cmps
sbb
sub
ret
cmp
push
and
cli
cmp
mov
ins
(bad)
hlt
mov
push
add
dec
inc
or
pop
sahf
mov
les
mov
lahf
dec
stos
pslld
push
and
and
jns
or
cmovno
(bad)
cmps
pusha
ins
fstp
(bad)
cmps
mov
in
retf
fcmovne
sbb
je
mov
dec
je
cmps
or
mov
pop
or
stos
xchg
shl
mov
dec
lahf
mov
dec
mov
cli
shr
out
popa
or
repz
sahf
cs
push
popf
xor
call
lahf
addr16
push
pop
lds
(bad)
sub
aam
jl
rcl
inc
(bad)
cmc
mov
dec
inc
push
mov
pop
ret
pop
ret
dec
gs
leave
jecxz
cmps
or
lods
push
test
push
mov
cmp
movs
cmp
xor
and
push
cmp
in
iret
xchg
sahf
das
push
scas
adc
mov
ret
sub
xor
mov
adc
jns
popa
cmp
mov
and
mov
jb
les
cmp
popa
jb
pop
pop
inc
xchg
movs
cmp
daa
sub
jbe
jmp
jno
xor
mov
xor
arpl
ds
or
mov
dec
and
sbb
pop
dec
scas
jp
inc
xlat
sub
cmp
push
out
data16
sbb
enter
mov
jne
jge
out
stos
pusha
call
ja
imul
cmp
movs
cmp
and
sti
mov
sbb
(bad)
mov
scas
dec
pop
je
arpl
ss
dec
scas
jbe
fdiv
xchg
inc
test
xor
ret
mov
sub
je
jne
out
in
dec
or
shl
cmps
ret
fwait
movs
cmp
popa
adc
mov
(bad)
int3
push
loop
inc
jp
sub
mov
mov
lods
ins
lahf
pop
(bad)
lds
jbe
xchg
sub
push
mov
cld
ret
loop
mov
pushf
test
xchg
dec
aaa
sub
retf
sub
pop
data16
pop
add
test
add
fcom
sub
outs
retf
or
cmps
gs
sub
mov
xchg
inc
je
mov
xor
and
jecxz
bound
xor
loope
and
mov
enter
dec
and
cmp
imul
pop
xchg
mul
in
xchg
scas
cdq
in
sti
sbb
sbb
add
jae
leave
lahf
(bad)
pop
sbb
jmp
shl
jae
adc
push
stos
sbb
cmp
test
dec
fs
ror
cmp
or
in
jnp
in
xchg
cdq
xlat
inc
sbb
fadd
ins
pop
xchg
push
pop
xchg
mov
inc
adc
push
jmp
sbb
sbb
sub
jl
mov
enter
ja
sbb
aaa
add
mov
ds
scas
outs
aam
call
ins
(bad)
push
std
mov
enter
xor
xchg
mov
stos
xchg
(bad)
pop
push
ins
addr16
imul
cmps
je
out
dec
mov
das
ret
pushf
pop
cmp
pop
dec
jb
inc
ficom
add
dec
xor
imul
adc
stos
cmp
int3
jmp
loop
leave
xor
dec
push
daa
inc
sbb
push
retf
xchg
pop
mov
hlt
test
pop
pop
stos
shl
shl
xchg
push
mov
add
xor
and
mov
inc
adc
daa
and
(bad)
push
into
fild
call
ja
in
adc
lea
aas
ror
iret
xchg
xor
jmp
(bad)
jo
xchg
fld
xor
daa
scas
pushf
jmp
sub
dec
or
bound
push
imul
push
adc
ud2
imul
or
push
inc
(bad)
mov
sbb
outs
mov
mov
jecxz
or
mov
int3
aas
jl
adc
adc
inc
mov
je
ins
repnz
imul
jns
iret
xor
and
push
mov
jnp
xor
or
lea
cmp
and
test
test
adc
repnz
xor
xchg
cwde
mov
cdq
pop
jb
or
adc
(bad)
adc
call
daa
shl
sub
outs
lock
cs
jae
lods
inc
add
out
arpl
push
adc
repz
mov
gs
(bad)
popf
scas
lds
xchg
data16
cmp
jbe
cli
(bad)
addr16
jecxz
das
js
sti
jmp
mov
scas
add
sbb
lock
xor
dec
xor
mov
hlt
rcr
stos
add
stos
test
sbb
mov
pop
xchg
sub
cmps
sahf
pop
add
mov
out
cmp
test
mov
ja
mov
mov
hlt
sub
inc
ret
outs
cmp
jge
dec
scas
adc
xchg
mov
sub
xchg
sbb
or
cmps
repnz
mov
sahf
cld
nop
int
call
adc
dec
pop
push
or
movs
push
sub
or
cmps
repnz
cwde
mov
adc
ret
call
add
sbb
sar
adc
push
lea
shl
mov
lock
daa
in
test
scas
setge
dec
call
add
cli
push
xor
jecxz
add
and
jg
dec
pop
push
ret
hlt
(bad)
jge
xchg
push
aas
sub
shr
xchg
cmc
add
push
shr
pop
dec
push
mov
inc
xor
int
jp
dec
mov
(bad)
add
ins
cli
clc
dec
rol
xchg
xor
jae
adc
mov
adc
push
fwait
mov
xor
inc
out
adc
mov
shl
mov
jmp
xor
pushf
mov
(bad)
adc
cs
loop
sbb
mov
jnp
fs
add
mov
call
cmp
rcl
pop
stc
add
mov
sub
mov
sub
or
test
les
cld
ins
cmps
jle
xchg
leave
hlt
popa
jne
mov
jg
imul
inc
sahf
pop
mov
cmps
xchg
xchg
push
loopne
push
aad
mov
imul
mov
lea
inc
mov
mov
push
and
idiv
div
inc
imul
repz
jae
sbb
jmp
gs
in
pop
xchg
jno
sbb
mov
pop
cdq
jge
test
lock
or
push
lea
sti
repnz
test
jg
cwde
xchg
lods
(bad)
push
xchg
rol
pushf
shl
test
outs
ret
mov
leave
sbb
repnz
cs
dec
fwait
ret
xchg
xor
aas
les
xchg
mov
xlat
push
xor
pop
add
cmp
pop
sub
shl
and
inc
push
and
dec
mov
or
xchg
shl
(bad)
cmp
and
movs
mov
push
fcmovnbe
jno
in
xchg
outs
jns
fst
push
mov
ss
pop
cmp
mov
adc
sub
shl
cmp
xchg
sub
pop
adc
xchg
xchg
fcom
mov
ror
sti
clc
cmp
and
inc
mov
inc
mov
or
jge
(bad)
push
jne
push
or
jo
inc
ins
push
loopne
shr
movs
adc
mov
add
jno
pop
jmp
or
add
sbb
and
mov
sbb
mov
adc
and
sbb
and
aam
clc
clc
test
mov
push
cmp
push
out
popa
mov
fisubr
int
sbb
add
popa
push
cmp
sub
or
in
mov
loopne
push
jecxz
sub
mov
xor
dec
ret
jle
imul
sub
xchg
inc
xor
xlat
(bad)
loopne
dec
push
stc
xchg
push
add
nop
fsubp
xchg
and
mov
fsubr
mov
sub
test
mov
jge
sub
in
leave
icebp
outs
adc
pop
and
into
jo
div
mov
leave
mov
xchg
xchg
mov
sbb
repnz
pop
mov
in
iret
mov
add
adc
ds
adc
add
pop
cmp
in
or
les
sbb
mov
jnp
xchg
pop
push
fcomp
adc
or
lock
fistp
punpckhdq
sub
out
cmp
xrelease
add
dec
push
xchg
adc
(bad)
mov
sbb
and
xchg
mov
stos
enter
jno
jns
push
pop
out
mov
addr16
mov
sar
mov
mov
xor
jno
or
push
push
xor
and
lds
ja
in
cdq
cmp
pushf
outs
ret
addr16
jl
jb
xor
inc
mov
mov
xor
push
aaa
jle
out
mov
imul
leave
jl
pop
jne
std
dec
shl
ltr
cli
lds
ja
mov
mov
sbb
inc
in
data16
mov
sub
xor
outs
repz
xor
mov
and
xor
loop
mov
lahf
test
int3
shl
sahf
or
cld
or
adc
cmp
jno
jb
pand
lods
rcl
outs
sub
pushf
adc
popf
push
xchg
stc
pushf
fwait
dec
jae
ret
cmc
int
mov
mov
sbb
add
mov
repnz
dec
and
das
movs
xor
inc
add
inc
loop
cmp
inc
xchg
pop
jecxz
inc
in
mov
and
push
stos
es
sahf
daa
xchg
mov
inc
ins
inc
mov
mov
popf
stos
push
rcr
mov
shrd
push
xchg
shl
cmp
test
sbb
jo
pop
pushf
or
cmp
mov
aam
dec
ja
pop
enter
mov
int
jle
adc
xor
xlat
repz
sbb
sbb
fdivr
scas
mov
sahf
aam
xlat
xor
gs
inc
sub
stos
mov
clc
mov
xor
mov
push
push
les
loope
fwait
sbb
sbb
test
std
cli
hlt
push
(bad)
icebp
popf
sbb
aad
inc
cmp
inc
clc
popf
nop
sub
sub
xor
das
mov
rol
jns
mov
cmps
iret
jbe
rcl
cli
ror
pushf
add
sub
mov
stc
and
call
jno
hlt
std
imul
xor
mul
aas
cs
lods
es
jmp
popa
sar
adc
popf
pop
mov
stc
or
xchg
jb
and
(bad)
sti
pushf
mov
jbe
push
popa
or
fsubr
push
ret
and
cwde
jp
sub
sub
(bad)
retf
shl
fld
int3
pop
imul
xor
mov
cdq
lock
out
shl
cmc
and
jbe
mov
adc
jb
mov
lea
test
xchg
ret
or
inc
pop
addr16
(bad)
inc
jmp
sub
movs
push
mov
retf
and
mov
mov
or
cwde
mov
ret
cmp
mov
pop
fxch
mov
js
clc
shl
or
call
fisttp
xchg
sub
pop
inc
sbb
popf
fadd
test
jae
jb
push
inc
sub
popa
pusha
inc
psubq
mov
and
jne
retf
shl
sbb
jbe
pop
rcl
cmp
adc
hlt
rcl
sub
fld
nop
pop
shl
xor
xchg
into
(bad)
push
jae
add
mov
ret
movs
cmp
xchg
imul
jmp
xchg
(bad)
cwde
not
(bad)
aaa
or
mov
mov
scas
fist
jge
inc
out
mov
into
out
and
int
test
test
add
aaa
xchg
inc
adc
aas
sub
repz
lahf
xor
(bad)
lock
fwait
lods
out
mov
stos
jno
jmp
mov
add
cmp
mov
pop
add
push
and
cs
push
and
push
push
inc
sub
js
pop
or
(bad)
pusha
ja
pusha
push
outs
or
xchg
shr
div
mov
mov
or
in
inc
dec
dec
and
scas
mov
and
and
div
push
cmps
ss
mov
stos
int3
imul
ret
xor
push
icebp
jp
fbld
loopne
hlt
aaa
push
shl
test
pop
xor
xchg
int3
dec
xchg
aam
dec
in
call
jg
pushf
add
mov
sbb
and
cwde
pusha
inc
ins
mov
pop
or
mov
cs
cmp
movs
push
call
out
in
mov
ret
mov
mov
pop
pop
pushf
and
arpl
pop
xchg
mov
jnp
iret
jg
xor
pop
cmp
dec
scas
fcmove
(bad)
fcmovnu
add
inc
add
lods
cmp
add
pop
sahf
xor
and
cmps
and
push
test
jp
imul
neg
enter
daa
inc
xchg
xchg
cmps
or
call
adc
jo
pop
sub
push
bnd
mov
shr
pop
daa
sar
pop
fdivr
sti
mov
mov
pop
daa
int
movs
lock
fcom
push
adc
mov
test
pop
mov
sbb
ds
mov
shr
mov
call
out
stos
scas
and
push
dec
jb
mov
stos
push
retf
out
xor
xchg
stc
sub
adc
xchg
repnz
lock
enter
mov
mov
lock
arpl
sub
or
stc
icebp
push
hlt
push
pop
in
stos
mov
pusha
cld
xchg
or
mov
mov
sbb
(bad)
scas
fdivr
inc
cwde
dec
mov
pop
fcom
fwait
mov
arpl
ins
outs
loope
inc
std
sar
mov
rol
je
and
pop
dec
mov
jbe
cld
mov
popf
imul
cmp
add
mov
and
mov
xchg
(bad)
jp
jae
outs
mov
and
gs
or
sub
cmp
ja
outs
mov
ja
sub
inc
adc
add
jno
je
clc
adc
out
cmp
inc
stos
or
add
adc
mov
mov
jmp
shl
rol
std
outs
inc
xchg
clc
xor
mov
xor
lea
push
or
pop
test
pusha
mov
(bad)
fs
retf
fwait
mov
mov
es
mov
retf
test
sbb
jecxz
mov
push
popa
cmp
(bad)
mov
in
inc
jnp
pop
shl
in
jbe
ins
xchg
push
sbb
sbb
retfw
cmp
stos
inc
jp
pushf
(bad)
sahf
push
scas
sti
lds
repz
jg
adc
ret
dec
mov
or
sub
hlt
hlt
xlat
push
inc
inc
dec
stos
push
sub
add
enter
ins
ins
dec
jl
xor
inc
ss
daa
cwde
sbb
pop
inc
mov
test
fwait
push
out
movs
mov
cs
cmp
push
jg
jg
dec
out
mov
popf
mov
std
sub
and
lds
add
lock
pop
enter
fdiv
sbb
pop
stos
mov
popa
mov
pusha
out
and
and
xchg
inc
push
outs
jmp
push
repnz
in
imul
ret
cmp
mov
push
adc
push
mov
ins
ins
aas
mov
sub
jb
pop
aad
xor
jp
in
data16
jns
or
lods
mov
repz
not
fstp
out
retf
push
repz
in
push
pop
mov
dec
sbb
das
in
push
cmp
mov
in
imul
ffreep
mov
in
int
mov
and
or
mov
mov
aam
lea
pop
fnstenv
sub
push
cdq
mov
mov
mov
loop
es
in
loopne
aaa
or
adc
shl
cmp
pop
dec
pushf
lds
fbstp
imul
sbb
dec
mov
leave
mov
popf
je
mov
xor
ins
jecxz
in
std
pop
cmp
mov
enter
stos
and
lea
and
outs
test
fdivrp
hlt
cmp
inc
adc
adc
add
xchg
ret
ror
inc
stos
jbe
ret
mov
xor
call
imul
inc
aaa
aaa
cmp
cmp
push
jl
jmp
stos
leave
pop
jns
cwde
(bad)
mov
icebp
mov
fdivr
jg
sbb
jno
xor
adc
and
push
std
repz
cld
dec
mov
fild
inc
enter
(bad)
outs
dec
scas
movs
mov
hlt
mov
push
push
xlat
and
mov
sbb
jns
outs
int
movs
ds
dec
xchg
sub
fwait
pushf
(bad)
dec
adc
retf
icebp
(bad)
mov
mov
cmp
push
(bad)
lds
pop
add
pop
xchg
pop
inc
test
xor
sub
leave
ja
xchg
jbe
nop
ss
cwde
dec
and
dec
xchg
dec
adc
popa
jl
adc
cmp
sbb
shl
xchg
xchg
mov
push
xchg
inc
es
or
push
push
pop
rol
lea
pop
sbb
sub
push
xor
cmp
out
ins
adc
inc
adc
sub
xchg
cmp
dec
stc
lock
(bad)
nop
push
stc
int
add
fidiv
xor
es
and
scas
push
ffree
mov
popf
test
ins
pusha
mov
ret
add
stc
rdmsr
jae
sbb
lods
js
or
or
jge
shl
int
imul
shr
jp
mov
inc
sar
and
dec
pop
mov
sub
jnp
aam
cmp
imul
mov
pop
out
pop
shr
pop
inc
dec
xor
and
xor
dec
inc
jmp
shl
dec
fbld
mov
int
mov
adc
cmp
mov
in
movs
fst
test
and
pop
rol
inc
test
call
jmp
or
pop
cli
push
ror
mov
or
pop
iret
push
or
rcr
sbb
fdivr
ins
ja
popa
push
(bad)
mov
ins
jl
add
pop
out
pop
push
sub
xchg
sahf
cs
lods
sbb
push
or
or
or
sub
call
int
cmp
nop
and
inc
clc
or
mov
test
pop
imul
lea
xchg
popf
dec
shl
inc
in
retf
div
ins
test
in
inc
fst
and
cmps
enter
fadd
mov
mov
(bad)
js
shl
leave
jmp
out
inc
pop
int
inc
fcomip
xchg
mov
(bad)
ins
mov
xchg
and
scas
inc
xchg
mov
push
test
and
or
test
fs
xor
test
test
cld
cmps
ss
ror
cmp
(bad)
std
pop
(bad)
cmp
ficomp
add
shl
int
pop
retf
fs
sbb
mov
xchg
int3
mov
dec
cs
jns
out
aas
pop
dec
cmp
mov
or
lock
jno
push
xor
loopne
xchg
les
sbb
ja
adc
call
and
pusha
sub
xchg
cmps
mov
pop
pop
push
sbb
iret
xor
cwde
out
inc
jmp
mov
out
dec
ja
repz
pushf
das
xchg
jmp
hlt
sbb
rol
gs
xor
adc
daa
or
mov
jne
xchg
push
mov
mov
(bad)
and
sbb
jle
jb
inc
aad
and
ffreep
mov
and
xchg
leave
xor
jmp
mov
ret
or
fidivr
push
xchg
hlt
push
and
dec
sbb
sbb
push
pop
(bad)
xor
xchg
ins
mov
mov
stos
(bad)
mov
inc
leave
cmp
mov
test
outs
inc
sbb
jmp
push
(bad)
popf
inc
mov
cmc
push
hlt
cmps
ss
ins
jg
cmp
addr16
int
mov
call
(bad)
(bad)
ja
mov
out
mov
ds
pushf
adc
out
aam
xchg
adc
loopne
outs
or
inc
add
inc
xor
shl
mov
mov
add
stos
test
mov
jmp
xchg
shl
lds
add
loop
cld
fadd
retf
in
cmp
icebp
movs
jb
fstsw
adc
xor
sub
imul
mov
aaa
cs
adc
cld
call
aaa
shl
dec
push
jb
add
xlat
ficom
mov
aad
mov
nop
aad
pop
mov
sahf
fdiv
les
mov
pop
push
sbb
jp
mov
jl
aas
punpcklbw
jb
or
or
fisubr
xchg
jae
pop
sbb
pop
inc
add
call
xchg
mov
jmp
jmp
push
loopne
movs
cs
loope
add
sbb
cmc
ins
bound
xchg
add
pop
cmp
cdq
and
dec
mov
sub
jl
shl
ret
cmp
xchg
push
sahf
mov
jmp
cmps
sbb
icebp
and
stos
dec
hlt
xor
push
aam
push
or
xchg
add
or
stos
mov
jb
mov
(bad)
dec
int3
jge
jmp
(bad)
shl
jge
jbe
push
mov
out
sbb
push
or
push
dec
add
rol
push
in
mov
jmp
jle
jo
test
mov
xlat
jmp
popa
add
jle
in
add
pop
jl
xor
ror
xchg
movs
xor
bound
mov
inc
or
push
cmc
mov
std
std
mov
ret
xchg
pop
imul
stc
push
out
push
data16
in
push
scas
ds
jp
pop
call
jns
push
dec
sbb
mov
(bad)
stc
jnp
mov
popa
test
popa
add
add
mov
push
pushf
mov
mov
es
dec
add
leave
icebp
jnp
push
inc
xchg
(bad)
inc
mov
and
imul
push
xchg
push
pop
cmp
sbb
jl
push
int
bnd
jl
xor
add
pop
xchg
adc
aam
xchg
inc
xlat
cmp
xor
call
push
cs
and
mov
bswap
pop
out
cld
cmp
mov
mov
pop
or
(bad)
retf
xchg
dec
push
cmp
cmp
inc
fnstcw
mov
retf
(bad)
js
mov
xchg
in
icebp
leave
and
sub
push
and
jecxz
jae
not
(bad)
jmp
mov
add
or
scas
push
adc
outs
scas
(bad)
mov
sbb
sub
xchg
out
(bad)
inc
mov
mov
int3
xor
add
popa
xor
pop
imul
push
jno
daa
or
fadd
arpl
add
movs
ss
retf
call
adc
aaa
outs
inc
xchg
std
lods
ja
sbb
sbb
in
cmp
scas
cmp
sub
pop
mov
cmps
push
cmc
sbb
mov
fprem
mov
jno
iret
jns
add
fwait
(bad)
mov
ret
mov
mov
loopne
xchg
sub
pop
inc
add
scas
mov
not
outs
dec
mov
or
into
hlt
addr16
cmp
dec
es
adc
or
jle
push
sbb
out
inc
pop
retf
push
loope
and
adc
inc
jle
mov
rcl
or
push
sub
fdiv
cmp
jae
outs
retf
lods
inc
dec
or
cmp
pushf
pop
mov
xor
pop
mov
aaa
sub
mov
out
repz
and
sbb
mov
scas
jle
fld
xchg
cli
inc
mov
xor
das
dec
icebp
inc
jecxz
xchg
hlt
pop
scas
pop
rcl
cli
xor
and
mov
cmp
test
scas
xlat
push
mov
jo
xor
shl
into
in
aaa
jne
aaa
jge
dec
sub
loopne
push
xor
cmp
stos
je
es
xor
test
test
fcom
in
or
movs
jmp
loope
clc
gs
push
pop
add
retf
mov
cmp
loopne
inc
sbb
jns
out
ins
cwde
xor
jne
sahf
mov
popf
jecxz
sbb
mov
loope
int
arpl
push
xchg
sbb
fldenv
scas
xor
sub
sbb
ror
cmp
xchg
test
cmp
jge
cmps
mov
aaa
xor
aad
xchg
push
mov
out
inc
cmps
inc
nop
mov
xchg
aas
lock
aam
or
mov
or
in
fmul
sti
and
lahf
cmp
mov
shr
(bad)
or
arpl
ins
cmps
iret
out
adc
stos
adc
mov
mov
xor
mov
in
rcl
out
punpcklbw
pop
out
ret
movs
add
sbb
xor
stc
dec
out
std
imul
enter
jge
adc
les
out
es
(bad)
cwde
dec
in
adc
push
adc
fst
(bad)
or
cmps
jp
ds
fsub
mov
rcr
mov
and
popa
aaa
xchg
mov
xchg
mov
or
cmc
adc
and
aad
daa
jb
std
js
lock
mov
mov
cmp
jp
adc
inc
mov
inc
sub
xchg
out
lods
pop
es
mov
pop
add
nop
cmp
mov
call
das
outs
ja
adc
fsubrp
sbb
cmp
(bad)
bswap
cmp
mov
scas
push
scas
jl
sar
into
ret
mov
out
pop
iret
je
enter
push
(bad)
mov
repz
jno
xchg
sbb
sbb
movs
(bad)
sub
js
addr16
xor
outs
daa
cwde
adc
pusha
fcom
ficomp
int
(bad)
jae
cmp
das
mov
daa
shr
push
adc
sub
cld
jo
or
sub
stos
and
jns
test
sbb
jg
fadd
clc
and
scas
mov
jbe
call
std
shl
in
fnstenv
test
fsub
or
js
jae
popa
fld
loope
push
mov
sbb
adc
lahf
sub
pushf
js
(bad)
imul
xchg
push
inc
into
int
arpl
aas
xchg
mov
pop
jecxz
sub
sub
push
cmp
movs
call
pusha
or
adc
icebp
in
ret
pop
push
iret
lock
sub
pop
cmp
pop
xchg
or
iret
xchg
div
sbb
cmps
jge
(bad)
cmp
push
mov
jmp
add
mov
cmp
or
into
xchg
mov
push
sub
push
lds
or
ret
jmp
mov
hlt
push
push
dec
or
mov
jl
cmp
mov
xchg
enter
pop
adc
sbb
dec
in
sub
fwait
push
pop
xchg
push
inc
inc
(bad)
fsubr
jp
xchg
sar
inc
in
pop
pop
adc
push
xchg
xchg
sub
pop
mov
or
retf
outs
add
int3
les
sub
mov
xor
not
out
imul
popf
lods
pop
in
push
mov
js
popa
pop
xchg
sbb
ja
scas
into
ja
xchg
aaa
out
xchg
sub
cmps
and
pop
mov
xchg
mov
scas
inc
mov
dec
or
scas
jge
mov
pop
or
es
in
sub
cmps
sub
inc
xchg
xchg
jecxz
dec
push
cmp
add
bound
jecxz
movs
jmp
(bad)
push
push
xor
mov
inc
adc
clc
das
sbb
sbb
(bad)
lock
xchg
inc
xor
fiadd
add
mov
jnp
sub
addr16
inc
aam
cdq
adc
fistp
or
hlt
push
js
repnz
push
and
jle
(bad)
test
imul
inc
test
xchg
sub
xchg
jnp
cmp
arpl
add
aam
stc
dec
(bad)
pop
dec
push
popf
pop
pop
xchg
cwde
in
shl
test
and
sub
xchg
int
sub
or
jle
pop
popaw
mov
sub
adc
jg
js
scas
xor
inc
shr
mov
cwde
mov
cld
xor
repz
mov
std
pusha
ret
cli
aas
repz
sub
cmp
cld
fidivr
cmps
push
ja
clc
xchg
rcl
call
xlat
shl
dec
jo
pop
cwde
xlat
add
sub
and
mov
cli
push
xlat
add
lock
movs
(bad)
addr16
daa
ss
add
xor
lods
rcr
test
(bad)
lahf
out
pushw
jle
in
rcr
add
lea
and
scas
xchg
xor
mov
push
mov
cmc
call
push
aam
cmp
inc
es
mov
mov
ret
xchg
cmc
popa
sub
scas
stc
and
sub
arpl
ins
or
movs
sar
pop
push
and
add
leave
aaa
test
lock
ficom
add
push
mov
jl
ficom
dec
add
dec
xlat
sub
js
jmpw
push
jb
icebp
pop
xchg
adc
and
inc
iret
and
mov
dec
xor
data16
lock
mov
mov
add
fisub
push
push
in
cmps
or
xchg
xor
xchg
or
jb
cdq
pop
repnz
hlt
adc
dec
test
out
lods
add
scas
cmps
adc
xchg
mov
cmp
outs
inc
dec
aam
pop
int
lock
sar
dec
scas
ins
das
xor
fs
xchg
das
mov
fisttp
bound
inc
mov
call
fwait
arpl
inc
repnz
scas
add
xor
inc
mov
fadd
outs
ds
(bad)
mov
leave
lods
mov
in
dec
rcr
test
and
push
call
pop
push
movs
cld
xchg
inc
pop
push
test
and
cmp
gs
mul
mov
mov
jne
inc
sub
push
jge
mov
retf
cmovl
adc
xchg
inc
es
(bad)
pushf
les
daa
xor
stos
cdq
xchg
ror
jmp
inc
or
mov
test
jno
mov
jg
mov
(bad)
mov
mov
and
aam
fistp
out
in
shl
stos
pop
adc
add
mov
dec
xor
mov
gs
inc
mov
ins
dec
rol
push
jecxz
pop
les
push
movs
in
adc
ret
nop
mov
int3
arpl
jo
push
ss
xor
xor
mov
pop
aad
and
and
lea
push
mov
mov
push
push
dec
xor
push
inc
and
fadd
cmp
stos
jle
pop
dec
repnz
std
shl
mov
sbb
(bad)
in
xor
push
hlt
ins
pop
inc
push
and
lods
xchg
dec
adc
cld
nop
retf
sahf
cs
jmp
pop
jb
jnp
cmp
jp
jo
hlt
pusha
test
mov
mov
aas
sbb
out
adc
mov
push
enter
aam
rcl
rcl
push
push
jmp
add
lds
mov
int3
adc
push
mov
adc
xor
rol
sbb
out
enter
xlat
mov
sahf
les
mov
xchg
jp
test
adc
sub
add
or
ds
sbb
add
enter
push
imul
aam
sbb
pushf
repnz
mov
mov
popf
mov
and
test
inc
xor
push
(bad)
jg
sub
in
mov
or
and
fwait
test
push
stos
add
fadd
ret
and
mov
xor
cmp
test
xor
movs
sahf
sub
in
add
jnp
pop
inc
cmps
jb
sbb
shl
sub
mov
and
ret
jmp
and
xor
(bad)
lock
inc
pop
aam
xchg
push
pop
test
sub
out
js
dec
push
aaa
cmp
or
nop
sbb
retf
mov
add
test
push
lahf
sbb
or
lea
dec
push
jg
xor
inc
inc
xlat
mov
inc
mov
xchg
shr
mov
lods
mov
ds
xor
iret
hlt
popf
jmp
imul
out
fs
lea
xchg
int
call
cld
clc
repnz
push
inc
xchg
test
lock
shl
mov
add
enter
(bad)
cli
call
out
jmp
inc
cmp
push
dec
cmp
mov
(bad)
shr
jno
pusha
fcom
mov
adc
jge
sahf
mov
sti
inc
pushf
(bad)
lea
push
(bad)
fimul
lods
push
push
and
add
jae
inc
or
xchg
push
aaa
pop
int3
cmc
sub
mov
mov
call
ret
adc
fdivr
inc
out
cdq
lds
push
add
push
mov
mov
jp
add
push
popf
inc
repnz
js
mov
stos
jge
adc
mov
aam
pop
mov
aaa
jno
push
ret
adc
and
pop
push
into
bound
mov
mov
ja
xchg
cld
adc
retf
aaa
out
daa
in
dec
sbb
pop
ds
(bad)
in
push
dec
ret
mov
sbb
jo
test
adc
outs
js
(bad)
xor
fsub
test
sub
xchg
inc
stc
push
cs
ret
push
sbb
or
dec
pop
lods
dec
or
jnp
inc
(bad)
sub
mov
(bad)
jbe
test
pop
pop
inc
and
pop
xor
repz
inc
pop
inc
ror
fdiv
mov
je
mov
es
nop
adc
xor
jo
je
push
cmp
adc
cmp
push
push
out
or
test
or
leave
pop
push
adc
jmp
push
jae
dec
cmp
in
cld
lahf
(bad)
sar
adc
adc
test
mov
out
pop
sbb
cmp
pop
outs
cmc
pop
and
xor
push
test
xchg
jmp
pop
xchg
pop
icebp
lahf
rcl
xchg
mov
add
xchg
ss
jo
jle
bound
retf
ins
je
ins
cmp
es
add
jg
loopne
gs
hlt
in
(bad)
sbb
dec
rol
clc
(bad)
lods
and
repnz
mov
pushf
mov
mov
out
push
xchg
adc
pop
add
pusha
and
push
fsub
sbb
lds
ret
pop
adc
cmp
pop
clc
(bad)
dec
pop
ins
fld
push
leave
fmul
mov
add
add
ja
cmc
dec
out
popa
test
inc
iret
cmp
push
push
jae
das
mov
sbb
cli
pop
pop
mov
push
call
push
push
ror
xor
repz
cli
cmp
xchg
pop
push
add
jmp
xchg
call
mov
mov
aaa
(bad)
mov
sub
sub
or
retf
jg
ds
jp
add
lods
or
(bad)
pop
sub
fidivr
mov
push
pop
addr16
mov
mov
cmp
jmp
or
sbb
fiadd
lds
addr16
int3
(bad)
es
or
inc
cmp
dec
pushf
mov
lock
and
inc
jecxz
jg
iret
sbb
xlat
movs
outs
retf
adc
out
fisttp
adc
int3
sar
dec
loop
dec
fwait
gs
out
mov
mov
aaa
sbb
adc
sub
push
(bad)
xor
or
scas
mov
mov
inc
fwait
pop
pop
bound
sbb
jo
mov
or
pop
(bad)
aas
jbe
mov
cmp
and
cdq
sub
or
sub
or
cwde
inc
jp
fwait
mov
xchg
movs
xor
jge
movs
xor
xchg
and
es
cli
adc
fnsave
fldenv
retf
pusha
shl
icebp
rcr
enter
int3
xor
dec
push
iret
int3
ins
inc
daa
cdq
jg
adc
ins
sub
mov
jo
pop
(bad)
rcr
outs
sbb
cmp
cmc
sar
mov
sbb
test
stos
mov
mov
cwde
push
sbb
imul
sub
pop
jl
daa
aas
mov
in
test
test
sbb
adc
push
pop
jmp
pop
or
xchg
dec
ins
nop
outs
jmp
push
movs
imul
sub
loop
dec
cwde
or
dec
es
loope
mul
ins
aam
xchg
gs
ret
adc
mov
repnz
loope
jmp
je
and
pop
out
add
je
pop
cld
cmps
sub
or
rol
push
sbb
mov
ror
(bad)
cdq
adc
cmp
pop
xor
sti
fiadd
xor
imul
mov
mov
mov
scas
and
sub
clc
out
loopne
nop
retf
imul
mov
fiadd
pop
out
sub
pop
repnz
add
mov
and
cs
push
pop
cmp
fcmovne
fdivr
into
lds
aad
int3
ret
mov
mov
cs
nop
lds
fst
push
cmp
inc
rol
gs
or
inc
sbb
mov
and
pop
inc
adc
dec
sub
fwait
xchg
(bad)
sbb
das
test
shl
mov
ror
addr16
xchg
sbb
test
mov
clc
std
push
mov
and
jae
aad
inc
out
sub
movs
or
xor
in
sbb
push
mul
and
mov
mov
push
sahf
fcomp
stos
push
add
push
inc
sbb
daa
and
inc
sahf
pushf
mov
and
cmps
loopne
dec
rcr
xchg
add
cld
in
xor
jne
dec
ins
sahf
aaa
loope
sbb
cmp
shl
popf
mov
xor
push
repnz
aad
push
(bad)
int
cld
or
xor
xchg
mov
sbb
cmp
aas
xor
adc
rcr
das
dec
sar
(bad)
or
mov
mov
cmps
and
fisub
lahf
sub
in
xchg
jb
ficom
lods
xor
aad
fcom
jo
add
mov
(bad)
(bad)
xlat
cld
sub
ss
retf
mov
lods
jb
xchg
(bad)
sbb
int
ins
in
iret
pop
pop
or
or
fs
push
pop
cmp
adc
repnz
jmp
add
(bad)
push
mov
lahf
(bad)
or
jge
cld
jmp
mov
sti
lds
add
popf
std
inc
xlat
movs
cwde
xchg
cwde
pop
out
jle
enter
jecxz
leave
dec
cli
(bad)
gs
sub
mov
movs
inc
push
inc
adc
pop
cmp
in
ret
aam
mov
hlt
enter
xchg
jne
xor
xchg
stc
(bad)
std
fdiv
adc
aas
fwait
aad
xlat
sbb
sub
mov
test
inc
jge
cwde
call
push
jbe
sub
jne
sbb
pop
not
bound
jne
push
cmc
sub
inc
and
push
in
jecxz
cmps
or
jbe
cmps
sub
push
lock
(bad)
stc
out
inc
dec
(bad)
scas
xchg
or
xchg
cmp
out
gs
test
mov
dec
loop
push
popa
sbb
xchg
cmp
jno
push
leave
hlt
jae
mov
mov
int
dec
mov
scas
test
dec
loope
and
sub
and
rcl
adc
aaa
ss
rol
xchg
popa
mov
push
mov
sahf
mov
add
ss
sbb
sbb
lods
cmp
shr
xchg
push
push
fwait
sbb
push
pop
stos
fidiv
push
sub
ret
(bad)
lock
jg
add
out
sbb
je
push
cmc
jo
psrlw
push
sar
mov
in
inc
xor
sahf
loopne
mov
outs
(bad)
inc
sbb
jg
push
mov
mov
sti
push
retf
pushf
dec
movs
bound
in
fistp
sahf
push
xlat
pop
cwde
inc
lds
dec
push
test
retf
mov
cwde
mov
mov
ret
mov
add
cmp
(bad)
xchg
pop
test
(bad)
std
fsub
jae
inc
and
xor
and
xchg
adc
mov
dec
fwait
or
rcl
shl
mov
pop
sub
push
jae
jl
cmps
xor
(bad)
repnz
or
jno
jl
pop
sbb
cmps
xchg
jbe
push
mov
sub
dec
arpl
ss
shl
jl
int3
jecxz
into
scas
xor
or
add
je
cmp
test
push
test
push
pop
pushf
xor
fmulp
cmp
inc
shr
jmp
sar
xchg
add
loopne
and
retf
xor
inc
mov
dec
push
adc
adc
fisubr
pop
(bad)
xor
leave
in
mov
loopne
into
mov
xor
jg
push
mov
pop
iret
ins
retf
mov
mov
pop
movq
cmp
push
cli
add
mov
imul
mov
mov
mov
mov
iret
xor
mov
sbb
and
out
retf
dec
sub
mov
inc
or
pop
mov
push
adc
cld
mov
ret
outs
lea
rcr
mov
mov
int3
jbe
pop
pop
mov
fdivp
call
inc
js
in
lods
inc
push
push
loopne
cmp
lods
mov
loopne
imul
lahf
ret
inc
jno
call
jmp
or
out
out
pop
mov
xchg
jmp
push
push
mov
rcr
cmc
in
imul
jno
cld
jae
arpl
aam
cmp
popa
mov
adc
retf
ins
retf
ja
or
pushf
ror
mov
(bad)
lock
cmp
mov
ds
call
push
jno
dec
sub
std
std
pusha
mov
retf
mov
je
xchg
dec
xchg
cmp
lods
jp
outs
test
les
inc
pop
ror
push
add
movs
iret
or
cmp
add
mov
sub
aas
add
xlat
and
out
jl
popf
test
pop
lahf
jae
push
out
rcr
addr16
add
pop
movs
and
lock
xor
sub
out
cmp
ds
inc
jno
dec
(bad)
dec
iret
jmp
push
sbb
mov
pop
mov
xchg
sub
inc
pop
mov
(bad)
jo
sub
sub
dec
dec
rcl
adc
loope
mov
gs
pusha
sbb
(bad)
int3
es
(bad)
out
nop
addr16
mov
push
jb
mov
fcmovnu
(bad)
fcmovnbe
in
sub
sbb
push
xchg
mov
or
adc
sub
es
inc
loopne
clc
xchg
pop
cmp
mov
xchg
gs
jnp
retf
xlat
lods
(bad)
div
or
jg
scas
push
aad
mov
jmp
enter
add
jnp
ds
push
jg
aaa
sbb
mov
mov
dec
or
xor
cmp
push
xor
cmp
in
push
push
lea
mov
xor
mov
cmps
sub
xchg
pop
ror
and
dec
jmp
ja
push
mov
sbb
out
fadd
xchg
mov
retf
test
dec
(bad)
retf
sub
or
clc
jnp
cmps
and
xchg
mov
push
stc
cli
pop
je
dec
dec
mov
xchg
(bad)
mov
mov
pop
fs
pop
mov
push
(bad)
cmp
clc
in
cmp
mov
xor
sub
push
jmp
cmps
xchg
sbb
adc
fidiv
sbb
stos
cmc
add
je
cmp
lods
ret
dec
cmc
(bad)
out
fstp
repnz
or
jnp
popa
push
inc
push
lea
or
mov
mov
xor
imul
pop
imul
xchg
(bad)
sbb
stos
ja
iret
mov
das
mov
pop
adc
adc
iret
jmp
cmc
and
sub
dec
lahf
add
icebp
cmp
inc
sub
scas
das
or
ror
(bad)
ffreep
imul
jbe
test
test
add
push
or
cmps
leave
int
push
addr16
(bad)
sti
ins
inc
imul
pop
pop
das
push
addr16
push
retf
pop
aaa
inc
bound
adc
movs
ins
cmps
cld
add
daa
fwait
jb
out
push
ret
sbb
ins
push
mov
fwait
jno
adc
jno
xchg
ins
in
xor
dec
sbb
scas
aaa
jns
fwait
cmps
sahf
and
stos
push
imul
push
fist
sbb
enter
pop
cmp
not
adc
push
cmp
js
adc
sbb
or
cld
mov
popf
mul
push
jmp
push
add
(bad)
rol
dec
aad
add
fstp
je
jecxz
and
cs
cmp
leave
jmp
pop
mov
rol
lds
cmc
retf
in
test
cmp
add
loope
in
gs
leave
in
adc
xor
dec
add
mov
nop
es
popa
push
push
adc
xchg
push
mov
xchg
cmp
inc
out
mov
cmp
xchg
mov
cdq
cmp
push
push
fwait
fwait
loop
fldcw
push
lock
add
jle
adc
or
imul
neg
rol
mov
dec
add
adc
in
push
loop
sahf
xchg
adc
fiadd
mov
xchg
sbb
push
adc
push
dec
push
ins
jo
das
inc
adc
enter
outs
xchg
aaa
enter
mov
les
sar
sub
shl
adc
cmc
jmp
mov
or
or
sbb
clc
jg
push
xchg
dec
adc
mov
add
or
mov
(bad)
and
jp
jp
or
outs
test
nop
in
dec
cwde
inc
push
loop
not
fs
ret
cli
mov
lds
aam
fimul
sub
leave
shr
push
jg
mov
or
cmp
lock
sbb
loope
cs
ss
sub
stc
fstp
movs
xlat
adc
mov
sbb
dec
stc
xchg
out
or
aam
add
push
aam
or
and
xor
mov
icebp
cmp
adc
jle
jge
stos
jbe
in
sar
arpl
pop
enter
sbb
sbb
out
jmp
add
out
sub
in
cwde
das
fimul
push
xchg
outs
sub
fcom
stc
cmp
pop
mov
xchg
iret
sub
adc
scas
xor
lahf
shl
cmp
inc
imul
lods
xor
iret
add
sub
cmc
fst
shl
lea
sbb
sub
xor
dec
retf
fidiv
fs
push
xchg
sub
mov
popa
mov
and
inc
or
ins
jmp
mov
cmp
pop
stc
or
cmc
inc
inc
es
xor
daa
lock
in
movs
or
push
and
mov
push
cld
test
adc
dec
add
mov
jg
sahf
push
daa
fwait
repnz
daa
lds
pop
(bad)
cdq
push
mov
dec
sbb
in
sbb
jmp
js
pop
add
in
mov
outs
sub
mov
jne
test
dec
test
jp
and
out
add
cmp
xchg
aam
cld
pop
cld
test
leave
mov
xor
push
dec
push
fdivr
test
sahf
pop
imul
jmp
and
push
iret
test
dec
mov
in
mov
pop
cmp
cmp
dec
lahf
inc
loop
imul
out
add
clc
xor
or
and
out
aas
(bad)
sub
mov
lods
int
dec
retf
inc
aad
loopne
jmp
das
(bad)
aas
xchg
or
sub
fidivr
loop
scas
addr16
repnz
es
test
mov
or
inc
push
sub
and
cdq
arpl
xlat
dec
xchg
and
bound
aaa
xor
mov
mov
lahf
cmp
mov
push
retf
push
or
dec
das
ins
mov
ret
push
adc
das
sbb
aam
shr
cld
in
push
or
retf
clc
std
jmp
adc
int
pop
push
(bad)
sti
cmp
jl
std
jnp
add
sbb
pop
sub
xor
lahf
(bad)
or
jp
dec
xor
mov
sub
sub
ds
cmp
shl
add
fsub
jbe
cld
arpl
inc
cmp
xchg
mov
hlt
icebp
fdiv
pushf
adc
loop
leave
aas
sbb
inc
stc
sub
and
mov
out
inc
mov
sub
jbe
fst
jmp
outs
test
int3
jbe
adc
xor
sbb
xchg
inc
retf
add
jg
mov
fucom
mov
shl
out
pop
push
cmps
jmp
arpl
jb
pop
push
mov
aas
dec
cmp
js
fcomp
cmp
inc
add
jno
in
in
movs
sbb
(bad)
mov
fnsave
pop
xchg
mov
add
and
hlt
cli
mov
push
outs
mov
cmp
jbe
mov
(bad)
xlat
gs
xor
(bad)
cmc
jbe
pop
nop
pop
or
mov
out
add
dec
nop
push
fs
mov
jp
stos
mov
dec
call
nop
xchg
jb
dec
adc
jns
test
pop
int3
fnstenv
in
fwait
enter
aas
cld
fist
std
xchg
sbb
xor
repz
dec
in
or
int
mov
mov
add
imul
pop
dec
mov
xor
pop
leave
pop
xchg
das
icebp
push
mov
out
dec
out
outs
in
hlt
mov
je
(bad)
icebp
in
movs
retf
mov
fwait
cli
lahf
test
cmps
lods
imul
xchg
jmp
out
adc
fild
sub
or
push
inc
xor
sti
(bad)
test
xchg
adc
out
lea
cmp
ds
mov
in
pop
into
adc
aas
call
movs
mov
sub
cmp
mov
mov
push
lods
xchg
scas
mov
xchg
cmp
aas
push
mov
pop
lea
div
scas
(bad)
jo
das
or
(bad)
add
push
sbb
and
ins
sub
xchg
ror
fisttp
mov
jmp
repnz
dec
pusha
xor
add
test
and
or
out
add
jp
cmps
lock
shl
mov
dec
mov
dec
adc
arpl
mov
adc
mov
xchg
loop
mov
add
jno
sub
inc
loop
mov
mov
jp
dec
mov
and
mov
inc
jbe
add
push
aad
fs
and
cmp
mov
cmp
mov
ds
cmp
cmc
xor
repz
inc
out
out
scas
jns
xor
aam
inc
mov
xor
dec
push
dec
add
and
adc
test
sbb
pop
cmp
cmp
inc
dec
push
in
inc
jmp
cli
push
ja
sbb
sub
cli
popf
or
cmp
aaa
mov
les
mov
arpl
repnz
cli
(bad)
mov
cmp
inc
and
xor
lds
mov
ins
ss
push
shl
imul
cmp
xor
xor
mov
and
ins
js
out
adc
sbb
mov
(bad)
movs
cmp
sbb
adc
daa
lea
and
sti
je
sub
push
popf
repnz
lods
sub
cmp
repz
jg
add
es
jge
dec
inc
or
test
mov
movs
inc
fdivrp
std
jns
pop
(bad)
jge
jns
fmulp
rcr
dec
ins
shl
pop
pop
in
lds
les
cmp
and
stos
inc
iret
das
cdq
inc
std
ret
fadd
push
xor
sub
and
xor
out
ror
retf
out
mov
inc
test
adc
xchg
sub
mov
fnsave
mov
es
sub
es
jno
sub
mov
pop
inc
retf
mov
push
jbe
call
aad
xor
pushf
mov
das
test
xor
inc
xchg
outs
sub
xor
nop
imul
shl
cwde
push
imul
lods
in
xor
adc
cmc
xor
cmps
shr
xchg
in
outs
test
jmp
ins
mov
xor
mov
int3
and
cmp
jge
jmp
dec
jb
mov
push
mov
loopne
dec
xor
in
das
or
ret
mov
ss
cmp
ror
sub
pop
popf
loope
in
and
leave
fs
sub
repnz
test
cmp
imul
jle
int3
pop
popf
ja
stc
adc
sub
jmp
outs
leave
clc
cmp
push
aas
and
jecxz
push
pop
idiv
repz
push
inc
sub
inc
jl
adc
xor
adc
rcr
ins
in
(bad)
and
push
test
sbb
push
enter
or
stc
rol
push
push
test
jg
test
jnp
jbe
mov
xchg
jg
jg
dec
out
mov
jo
xor
sbb
add
std
jmp
mov
in
sub
dec
imul
mov
scas
lahf
aas
xchg
or
or
cmps
xor
cmp
stc
test
pop
not
sub
sbb
popf
(bad)
scas
test
cmps
fstp
aaa
cmp
sar
lahf
sbb
pop
dec
xlat
sbb
mov
pusha
push
loop
es
leave
xchg
cli
add
icebp
ds
loop
xlat
pop
adc
mov
cld
scas
in
mov
add
xchg
in
call
enter
test
stos
call
pop
lds
pop
test
nop
fcom
add
adc
sub
mov
or
xchg
fcom
push
add
xlat
jge
xchg
sti
jo
iret
cmovbe
out
inc
adc
dec
jmp
add
and
adc
hlt
xor
jbe
loope
xlat
shl
mov
mov
jge
mov
and
sub
jb
sub
pop
lods
(bad)
sbb
popa
jbe
call
or
retf
aaa
addr16
sbb
mov
ins
jb
aam
or
imul
call
out
dec
xchg
je
ret
sub
pop
inc
pop
imul
cmp
iret
outs
jbe
mov
bound
cs
shr
iret
call
add
mov
stos
cmp
(bad)
jns
cmp
retf
push
es
out
stos
jge
xor
out
jns
jl
ins
mov
xor
jb
and
ins
daa
jb
push
imul
int3
cvtps2pd
(bad)
sbb
pushf
dec
shl
sub
mov
push
xchg
es
js
retf
mov
inc
xor
adc
shl
imul
les
ret
(bad)
gs
lea
popf
outs
les
adc
xor
xchg
(bad)
or
pop
jle
rol
pop
adc
pop
(bad)
and
and
push
adc
fnstenv
in
push
pop
mov
lds
retf
dec
std
(bad)
mov
daa
dec
cmp
push
lds
mov
add
rcl
jmp
repnz
inc
loop
xor
dec
jg
in
jbe
mov
xchg
inc
in
dec
mov
(bad)
out
(bad)
(bad)
fsubr
pop
call
sbb
popa
(bad)
call
retf
stc
push
aad
xchg
mov
sub
push
push
mov
fnstsw
pop
mov
mov
movs
add
or
loope
jecxz
and
test
lea
std
push
int
popa
xlat
adc
xlat
push
cmp
test
mov
cmp
ins
(bad)
pop
sbb
clc
ffree
push
mov
int
test
jb
jae
addr16
ins
or
sbb
mov
out
shr
push
loope
push
add
adc
adc
cmp
fnstenv
xchg
mov
xor
cmp
jmp
adc
ficom
and
jmp
mov
loopne
sub
cmps
das
push
xor
rol
add
mov
xor
xor
pop
or
mov
adc
push
adc
add
or
xchg
sbb
push
int
shl
inc
push
dec
or
add
add
pop
or
mov
movs
test
imul
call
cmps
jecxz
sahf
repz
(bad)
fst
push
pop
outs
ror
cmps
push
pop
adc
js
push
sub
sub
xor
dec
ror
data16
or
mov
and
lahf
jbe
in
cld
add
pop
outs
out
clc
xchg
push
pusha
cli
ja
jmp
sub
scas
adc
add
cs
(bad)
cdq
movs
push
mov
shl
sbb
(bad)
pop
sbb
loope
inc
gs
fsubr
or
adc
ins
dec
stos
arpl
or
es
fisub
pop
pop
je
pushf
les
scas
rol
mul
dec
in
push
lahf
shr
xchg
jnp
gs
or
mov
test
fchs
test
adc
movs
jmp
xor
pop
imul
pop
pop
jnp
stos
mov
arpl
sbb
loop
mov
add
jle
mov
or
xor
adc
adc
in
cs
mul
push
dec
xchg
mov
sti
or
fidivr
jae
stc
cmp
or
fwait
mov
aam
repz
iret
test
pop
pop
pop
lods
or
dec
loope
fwait
adc
xchg
sbb
sub
and
dec
jno
and
shr
add
in
jp
inc
and
push
inc
sub
jo
xchg
add
sbb
dec
imul
add
cmp
outs
xor
ins
test
mov
(bad)
cs
cmp
fcomp
push
jnp
cdq
pop
sub
dec
in
add
cmc
xchg
div
xor
aaa
jp
mov
daa
out
call
icebp
cs
inc
(bad)
leave
mov
in
lock
lods
imul
arpl
repnz
ror
mov
(bad)
fild
lods
pop
pushf
push
bound
mov
aas
xchg
mov
retf
ds
push
or
jg
jge
mov
fst
data16
adc
imul
inc
dec
adc
xor
out
mov
fidivr
lds
xchg
pop
test
sbb
mov
jg
inc
sub
sti
dec
imul
jmp
inc
push
mov
sub
js
mov
arpl
call
jmp
mov
mov
neg
xchg
stos
in
call
xor
pop
mov
lock
div
shl
xchg
sub
lea
jne
add
or
jge
push
ins
lahf
mov
jne
call
mov
lods
iret
adc
mov
shl
push
(bad)
int3
rol
cmp
sub
imul
test
mov
sub
or
sar
mov
(bad)
lods
push
sub
inc
and
jnp
mov
jmp
jns
xchg
add
sbb
aaa
xchg
dec
fdivr
sub
mov
push
nop
cmc
retf
iret
scas
(bad)
stc
div
repnz
jbe
arpl
and
mov
pop
cmp
mov
xor
and
dec
sbb
gs
jmp
mov
int
mov
pop
mov
cmc
mov
pop
out
pop
loop
or
(bad)
outs
jge
fadd
inc
(bad)
sbb
cmp
cmp
shl
jmp
or
inc
inc
or
cld
jae
sbb
stos
add
divps
lahf
sbb
dec
inc
xchg
dec
das
gs
pop
or
imul
out
fcomp
xor
rol
and
jmp
enter
or
add
int3
sub
add
jns
dec
adc
dec
(bad)
int
cld
mov
pop
inc
xchg
inc
cmp
inc
push
lds
pop
imul
mov
lock
out
cmp
hlt
mov
test
mul
aas
jno
mov
call
add
xchg
in
pop
inc
aaa
enter
adc
fmul
popf
add
jge
or
pop
call
pop
lock
sbb
clc
adc
jmp
mov
or
xor
or
popf
lahf
and
ret
mov
mov
std
loope
outs
push
unpcklps
push
jae
sub
mov
imul
outs
push
cmp
in
cdq
aam
mov
mov
inc
dec
fstp
and
leave
rol
repz
cmc
push
or
rol
loopne
call
mov
shl
mov
mov
fpatan
call
sbb
dec
cld
fsub
pop
loope
stos
ja
mov
(bad)
aad
jo
adc
xor
sbb
push
sub
test
mov
imul
aaa
movs
out
test
out
xlat
mov
jb
push
gs
add
pop
and
cli
je
jns
or
push
cwde
mov
popa
sub
inc
(bad)
push
aam
ja
mov
or
cdq
es
sub
jbe
cvttps2pi
mov
mov
cmp
jl
aas
inc
aad
mov
cmp
mov
dec
lea
repnz
bound
fwait
(bad)
inc
mov
clc
mov
adc
retf
sub
dec
add
add
jp
mov
jbe
cmp
xchg
loopne
push
fstp
stos
dec
stc
out
mov
retf
sub
pusha
adc
outs
pop
(bad)
dec
push
stos
inc
ja
sub
rol
push
xchg
push
or
lds
int3
scas
outs
mov
push
inc
push
sub
jecxz
neg
mov
adc
lock
(bad)
cmp
push
jne
repz
pop
mov
xlat
out
(bad)
in
xchg
mov
mov
or
cmps
fcomp
loop
and
xor
or
adc
retf
pop
fnsave
adc
repnz
add
jo
mov
fst
fwait
icebp
pop
add
retf
ins
pop
ds
in
inc
push
into
xchg
jbe
out
push
jmp
cmp
movs
rol
inc
cmp
inc
jbe
jb
or
int
aas
xchg
xlat
jp
std
mov
ficomp
inc
and
or
jge
das
mov
mov
cmp
push
sub
dec
(bad)
and
pushf
nop
mov
ss
daa
outs
xor
jmp
mov
std
add
pushf
add
in
fst
sbb
add
ror
into
dec
xor
ins
xchg
mov
sbb
pop
rcl
push
mov
dec
mov
(bad)
pop
xor
jb
xlat
add
sidtd
sub
push
or
adc
ds
hlt
jno
or
repnz
jnp
dec
mov
lahf
(bad)
jns
loop
xchg
call
pushf
ror
mov
and
stc
leave
sbb
test
jecxz
jecxz
pop
std
rcr
mov
jnp
jmp
add
push
cmp
ret
push
cli
sub
sub
leave
mov
outs
pushf
add
jnp
jge
and
xchg
daa
in
dec
add
mov
test
push
mov
push
xchg
out
add
mov
shl
add
jle
test
add
pop
lahf
or
hlt
sbb
int
adc
jns
sbb
inc
jecxz
inc
mov
(bad)
xchg
int3
xor
ret
repnz
xor
mov
mov
mov
add
adc
mov
xor
mov
push
mov
pop
aas
ins
les
xor
mov
adc
xor
push
dec
in
clc
push
push
(bad)
repnz
stos
xor
dec
dec
inc
or
fidiv
lods
mov
and
jnp
cmp
imul
scas
mov
pusha
pop
sub
sub
sub
int
mov
imul
push
(bad)
fild
aad
or
pop
std
shr
das
add
or
lahf
sub
sahf
call
jno
lods
ret
mov
(bad)
sub
lods
fadd
fs
mov
mov
int3
jno
push
jno
sub
xchg
dec
repz
xlat
call
ror
fld
(bad)
repz
das
add
aam
or
psubw
mov
mov
push
cmps
imul
xor
dec
hlt
test
loop
xlat
push
mov
jge
out
out
pop
xchg
sub
data16
and
adc
xchg
adc
ss
outs
aas
(bad)
or
sbb
jmp
nop
pop
shl
bound
cld
push
in
popf
xor
jmp
adc
(bad)
idiv
mov
jge
repnz
mov
or
and
cmp
rol
scas
retf
lock
push
dec
cwde
pop
popf
adc
xor
xchg
cmp
mov
lock
mov
or
push
xchg
mul
call
cli
lock
adc
jbe
call
fnstcw
or
or
shl
ficomp
pushf
into
mov
cdq
loop
add
lock
aaa
call
ja
xchg
mov
adc
push
sub
test
lock
push
retf
xchg
(bad)
repnz
mov
sti
sub
stos
cmps
repnz
mov
mov
fimul
aad
stc
ss
outs
mov
jnp
mov
mov
(bad)
std
add
add
adc
dec
jmp
add
inc
mov
jo
test
push
pop
arpl
mov
mov
sub
xor
adc
leave
cmp
cmc
in
mov
pop
pushf
lds
xlat
out
arpl
dec
pop
loopne
mov
or
adc
fadd
mov
sbb
jo
pop
xchg
jmp
jbe
or
jg
rcl
imul
cld
push
jmp
mov
adc
ins
and
sub
xor
mov
daa
fsubr
cld
test
repz
sub
cmps
rcl
std
ror
ret
mov
fisubr
add
addr16
sar
xor
loope
xchg
in
inc
push
dec
jno
mov
outs
aaa
out
sub
pop
das
aad
pop
bound
loopne
and
sar
lods
pushf
xor
mov
pop
mov
shr
rol
lahf
mov
adc
mov
out
xor
pop
mov
movs
stos
mov
xor
cwde
pop
enter
fld
data16
pushf
jge
mov
and
loopne
les
push
pusha
cli
movd
movs
ss
mov
aaa
adc
scas
adc
(bad)
cld
(bad)
and
retf
out
adc
inc
add
fld
mov
and
push
sub
fadd
jmp
loopne
nop
lock
mov
dec
jno
test
mov
jb
cdq
(bad)
int3
add
aam
gs
add
ret
mov
hlt
push
das
jo
jmp
and
aas
sahf
rcl
call
xor
pop
inc
psraw
test
cwde
xchg
cld
daa
mov
shl
pop
popf
fisttp
scas
push
mov
inc
pop
adc
inc
mov
or
xchg
jg
push
sub
pavgw
xchg
dec
sbb
les
jae
mov
push
xchg
arpl
(bad)
shl
pop
in
dec
mov
sbb
mov
push
loop
mov
xchg
xchg
icebp
push
in
loopne
data16
jbe
xchg
dec
je
xchg
retf
push
outs
and
cmp
cmp
ret
sbb
movs
xchg
mov
push
xor
(bad)
lods
adc
jae
mov
aaa
scas
cmc
xchg
sti
push
and
inc
(bad)
sub
sbb
pushf
jns
in
cmp
dec
mov
or
ret
add
mov
aaa
mov
loopne
js
movs
mov
fs
mov
xchg
sub
inc
push
shr
mov
out
lahf
ins
rcr
mov
mov
and
mov
cli
sbb
sub
mov
mov
loopne
daa
jmp
push
mov
(bad)
jb
adc
fwait
cmp
mov
icebp
jno
shr
push
in
aaa
int
test
pop
cmp
sbb
xchg
mov
cld
fistp
sub
mov
inc
cmp
push
repz
pop
xchg
mov
cmp
arpl
loop
jp
fadd
dec
ins
sahf
imul
or
cmp
jae
loope
cmc
add
jmp
cmps
rcr
jp
into
das
mov
xor
sbb
xchg
call
(bad)
and
or
inc
(bad)
mov
sub
dec
dec
xchg
or
sbb
(bad)
adc
out
jbe
push
pop
loopne
lahf
hlt
xor
js
(bad)
dec
push
inc
pop
jl
div
in
sti
add
mov
leave
sub
mov
ins
xchg
mov
mov
(bad)
fmul
call
popa
sub
test
cmp
dec
or
out
sbb
cmp
sbb
movs
shr
test
xor
sub
pop
cmpps
movs
stc
das
mov
mov
add
pop
mov
retf
cmp
fiadd
dec
pop
and
ja
sbb
sub
push
jnp
daa
outs
mul
and
pop
pop
dec
(bad)
jbe
out
(bad)
clc
pushw
enter
mov
push
test
jecxz
inc
pop
xchg
pushf
inc
mov
movs
jmp
test
cmp
mov
push
fadd
adc
call
mov
cmp
outs
dec
push
dec
cmp
sub
out
test
cmp
jl
int
imul
aas
les
xchg
push
and
out
add
test
and
movs
shl
jl
inc
popa
dec
or
mov
nop
dec
std
jp
dec
inc
mov
mov
pop
repnz
mov
into
add
cmp
je
sub
loope
pop
sbb
pusha
add
adc
je
mov
mov
inc
call
pop
ins
mov
inc
xchg
je
nop
cmps
gs
sub
push
cmp
ins
cmp
xchg
mov
sbb
rcl
add
jnp
not
ror
mov
dec
cwde
lock
and
xlat
push
mov
sbb
push
push
add
jle
pop
sbb
std
or
adc
mov
pop
mov
imul
scas
dec
addr16
xchg
jl
push
ficomp
sbb
out
icebp
sbb
xor
aas
and
sub
aam
push
imul
sub
sbb
movs
test
or
mov
sub
mov
gs
fucom
fmul
sbb
pop
addr16
jae
jbe
fdiv
mov
mov
push
out
inc
in
daa
lds
js
mov
enter
jbe
sub
stc
out
jno
mov
test
dec
or
jecxz
test
and
or
pop
daa
loopne
pop
xlat
cmp
push
fadd
fs
sub
bound
in
pop
int3
cs
push
push
in
and
pop
inc
mov
lea
nop
loopne
cmc
jns
adc
les
xchg
movs
add
pop
mov
sub
rol
adc
push
xchg
fwait
inc
dec
push
sahf
cmp
pushf
pop
and
cmp
mov
in
(bad)
cdq
mov
movs
cmp
hlt
or
sbb
dec
movs
pop
in
mov
fstp
inc
pop
popa
pop
push
out
imul
rcr
shr
pusha
jb
push
stc
jb
add
mov
retf
cs
mov
mov
and
ss
daa
imul
leave
ins
gs
clc
mov
push
pop
xor
lods
lahf
movs
dec
lods
inc
icebp
dec
js
push
sub
push
mov
jno
int
repnz
or
xor
ins
outs
jne
dec
fs
into
cmp
jg
jns
push
xchg
jne
or
gs
pop
and
lock
and
iret
inc
pop
test
jo
inc
push
xor
mov
mov
inc
pop
xor
out
mov
xchg
mov
or
int3
ud1
mov
mov
xchg
icebp
mov
les
dec
and
push
sbb
test
adc
ror
ss
out
jb
pop
lock
test
or
push
fst
mov
fisttp
jo
shl
repz
mov
aas
rcr
aaa
rol
jmp
adc
bnd
loopne
arpl
cmp
sbb
dec
js
int
gs
jg
lods
pop
leave
outs
push
test
pop
and
or
jae
into
in
dec
in
mov
jmp
add
mov
mov
das
add
ja
mov
jns
ins
dec
(bad)
leave
mov
sahf
sahf
dec
mov
bound
mov
iret
mov
xor
cld
sbb
jnp
sti
and
cwde
xchg
repz
in
mov
mov
or
inc
jecxz
cmp
imul
(bad)
mov
mov
sbb
outs
mov
sbb
mov
mov
sahf
js
stos
sahf
cmp
sbb
pop
pop
xchg
push
mov
mov
adc
fiadd
stos
and
je
ret
in
cwde
dec
mov
test
sub
ret
les
jge
(bad)
adc
in
xor
fbld
in
cmps
fbstp
xor
cmp
mov
add
sub
les
add
mov
mov
enter
and
sub
addr16
pusha
push
gs
dec
ret
mov
mov
call
mov
push
push
sbb
jmp
enter
test
jo
jb
popa
clc
xlat
dec
callw
mov
xchg
clc
in
call
loop
shr
push
and
sbb
push
js
add
adc
sbb
mov
sub
daa
int3
sub
test
cmp
pop
das
pop
call
add
mov
ret
aam
xor
xchg
add
inc
ds
cwde
cmp
dec
xor
mov
aaa
xor
mov
ins
into
and
xchg
lea
addr16
xchg
ret
cmc
mov
mov
data16
in
jmp
xor
cmp
imul
fistp
icebp
jb
jnp
(bad)
call
xchg
cli
shr
jae
in
xchg
jecxz
cmps
jp
and
(bad)
mov
mov
fsub
xor
ror
loop
cmp
mov
jmp
add
inc
pop
mov
mov
xlat
sbb
test
dec
xchg
ret
rol
cli
sar
xor
jecxz
gs
retf
mov
daa
daa
ins
pop
xchg
mov
pop
push
mov
(bad)
push
and
xchg
(bad)
psrld
repnz
fs
loope
cmp
add
mov
pop
push
sub
repnz
scas
cmp
inc
std
or
mov
test
(bad)
in
data16
dec
dec
repnz
mov
inc
mov
sti
lods
push
jg
jmp
movaps
xor
hlt
adc
lods
ss
jo
push
xor
stc
das
repz
mov
fsub
or
and
adc
xlat
shr
xchg
mov
xchg
mov
das
add
lds
loopne
xchg
adc
xchg
in
dec
or
pusha
sbb
pop
addr16
cmp
scas
clc
sub
cs
sub
es
pop
jno
mov
int3
lahf
push
mov
jge
mov
sbb
ret
mov
test
fdivr
or
mov
sbb
stos
and
adc
mov
adc
call
cmp
and
repnz
push
mov
aas
mov
iret
call
mov
fnsave
ficom
jnp
sbb
pop
or
repz
pop
pop
fcomp
retf
push
ins
xchg
data16
add
jb
test
inc
out
pusha
(bad)
push
dec
push
mov
and
cdq
jns
xor
jne
sub
xchg
adc
adc
or
sbb
ficomp
pop
imul
pop
jl
mov
cmc
pop
jmp
sti
cmp
mov
push
cwde
js
mov
jl
int
ret
ins
and
idiv
jae
shl
sub
pop
lahf
(bad)
aam
shl
or
not
js
test
movs
or
push
cmp
aam
xchg
mov
xchg
mov
inc
mov
jno
je
push
mov
lds
(bad)
jne
or
and
or
or
loopne
(bad)
inc
xchg
mov
fcom
sbb
mov
aam
out
inc
js
pop
aam
inc
mov
push
mov
data16
jge
call
push
jae
sbb
(bad)
mov
ficomp
movs
hlt
(bad)
sbb
dec
jge
dec
push
bound
imul
xchg
ror
sbb
jmp
cwde
aam
scas
cmp
cwde
cmps
xchg
(bad)
rcr
out
pop
fwait
mov
ja
movs
and
adc
adc
xlat
mov
sbb
jnp
push
jbe
arpl
pop
push
test
fnstsw
shl
mov
pusha
cwde
neg
das
repz
fsub
sbb
sbb
or
push
psubsw
mov
cmp
cmp
sub
mov
enter
aas
mov
inc
pop
call
pop
ret
jecxz
or
add
jmp
daa
test
movs
stc
pop
push
xchg
xchg
mov
xchg
hlt
mov
sbb
xor
push
test
test
lock
call
rcl
js
xchg
ret
jo
sbb
cmp
rol
cmp
lds
out
fidiv
xchg
int
and
mov
int3
mov
jbe
sbb
retf
dec
mov
cmps
test
adc
iret
pushf
or
loopne
add
in
inc
shl
dec
gs
scas
pop
cmps
dec
out
push
xchg
jmp
xlat
mov
and
xchg
xchg
aam
mov
sbb
stos
fiadd
fs
std
push
adc
or
icebp
(bad)
adc
(bad)
add
sub
lahf
aaa
call
mov
das
pop
(bad)
ja
(bad)
inc
icebp
cvtdq2ps
aaa
in
mov
and
push
and
xchg
adc
push
outs
lods
in
mov
shr
aaa
int3
pop
mov
dec
addr16
pop
movs
adc
mov
(bad)
fisttp
call
scas
icebp
and
jge
repz
adc
fnstcw
mov
dec
mov
std
lods
stc
stos
(bad)
addr16
test
repnz
hlt
leave
pop
ret
fisttp
push
mov
add
pusha
sub
mov
push
stos
fs
dec
sub
xchg
bnd
dec
ins
int3
fdiv
or
cmps
mov
ins
ja
js
cs
(bad)
mov
and
or
gs
popa
inc
sub
mov
mov
or
inc
bound
push
and
mov
pop
int3
xlat
dec
je
addr16
fisttp
test
ss
and
sub
popa
out
push
loopne
(bad)
fs
nop
xor
sbb
mov
and
push
lahf
xor
lds
add
push
retf
jmp
dec
or
into
fs
cmps
jmp
daa
fnstsw
mov
ds
cmpxchg
xchg
int
arpl
inc
ds
add
pop
scas
pushw
adc
pop
push
push
mov
and
push
mov
xor
mov
leave
adc
in
push
add
inc
push
xchg
js
xor
(bad)
fsubr
fs
in
sbb
mov
iret
mov
lea
(bad)
test
or
or
iret
lods
xchg
fldenv
adc
lods
mov
xchg
inc
or
pop
imul
mov
fyl2x
rcr
push
pushf
dec
or
(bad)
test
ins
fdiv
mov
arpl
jbe
lahf
mov
test
mov
lods
rol
pop
dec
sub
repz
div
xchg
dec
ins
sahf
hlt
sub
ror
sub
jne
daa
or
pusha
sbb
mov
(bad)
jmp
aas
iret
push
pop
pushf
std
fs
ficomp
sbb
inc
jmp
sbb
or
enter
or
and
sub
or
outs
sti
add
cmp
sbb
cmp
ror
dec
mov
jl
leave
icebp
gs
xchg
xor
div
jmp
or
cmp
ins
jns
repz
or
xchg
jb
mov
inc
cmp
ds
xchg
dec
cmps
mov
lds
loope
scas
inc
xor
xchg
mov
push
pop
rol
dec
aam
aam
loop
pop
dec
pop
retf
cmps
js
addr16
scas
dec
dec
aad
and
push
loop
mov
jb
ficom
data16
xor
icebp
push
retf
pushf
push
push
xor
je
loop
sbb
repnz
pop
jmp
pop
rcl
cmps
push
xchg
dec
in
sbb
scas
cwde
pop
test
sbb
jp
xor
hlt
sub
ins
cmp
(bad)
sbb
push
push
fmul
and
jbe
mov
push
icebp
xchg
jg
xor
dec
and
or
call
dec
mov
in
(bad)
f2xm1
ja
mov
icebp
es
pop
dec
jecxz
sub
test
jge
pushf
ds
arpl
adc
mov
jbe
rep
xor
out
(bad)
xlat
daa
fucomi
dec
(bad)
hlt
push
add
adc
inc
inc
orps
add
mov
sub
cmp
fwait
push
xor
sbb
popf
repz
xor
cld
test
icebp
in
add
pop
xchg
lea
adc
ins
imul
jns
(bad)
xor
mov
aam
mov
ficom
test
push
cmc
add
xchg
fs
neg
sub
das
xor
mov
sbb
nop
mov
int
and
je
mov
(bad)
(bad)
and
mov
push
sbb
retf
js
xchg
cmps
fsubr
jp
sbb
push
mov
in
std
(bad)
sub
cmp
add
dec
sbb
mov
sbb
cld
adc
and
rcr
into
dec
inc
jnp
jle
scas
dec
rol
rcl
(bad)
jmp
adc
cmps
xor
adc
cwde
inc
xchg
leave
(bad)
sub
(bad)
pop
out
sahf
out
mov
stos
fcmovbe
imul
push
cmc
repz
pushf
pop
cmp
pop
mov
imul
sti
pop
and
out
mov
sub
outs
fidiv
test
xchg
jmp
sub
loop
pop
pop
mov
scas
mov
ja
lods
xchg
mov
mov
or
sbb
dec
dec
cmp
imul
scas
cs
test
not
movs
push
ret
mov
xor
test
js
cmp
(bad)
jo
push
xchg
(bad)
aaa
mov
(bad)
ja
jno
loop
mov
fdivp
in
mov
call
lea
repz
iret
cld
xchg
fldz
mov
arpl
push
popf
and
int
addr16
and
idiv
aaa
(bad)
sti
stos
push
outs
(bad)
fdivp
pusha
mov
mov
jne
and
cmp
lds
mov
call
pop
sub
stc
or
pop
xchg
or
shl
cmp
sbb
test
lahf
je
icebp
outs
jnp
xlat
jo
mov
ror
pop
ret
push
fidivr
icebp
sub
lods
inc
push
ja
or
int
xor
mov
inc
int
jge
sbb
rol
inc
and
out
xchg
pushf
nop
push
(bad)
leave
cmp
repnz
ret
or
inc
jmp
sti
in
xchg
mov
adc
stos
jns
push
fisub
dec
pop
dec
cmp
test
pop
push
push
shl
int
fmul
ror
test
loope
mov
or
into
mov
push
sub
inc
ins
dec
outs
call
out
xchg
add
and
test
jge
jo
loope
mov
sbb
scas
ins
aas
push
lahf
(bad)
movs
out
push
psrad
jb
in
jb
push
repnz
sbb
cmp
jecxz
xor
loope
(bad)
xchg
ret
adc
pop
pop
adc
cmps
inc
xchg
popf
mov
shl
daa
push
fwait
mov
scas
xor
jne
sub
call
add
adc
lea
int
retf
xor
xchg
mov
push
in
inc
clc
mov
shl
cli
sbb
repnz
outs
imul
adc
pop
sub
xchg
out
push
clc
jnp
pop
lea
out
xor
add
adc
jb
pop
sub
in
push
add
inc
sub
call
addr16
les
xor
inc
push
es
hlt
jae
adc
sbb
dec
mov
adc
jp
cmc
cwde
div
sahf
sbb
repz
out
or
stc
mov
lds
je
stos
fimul
jmp
xor
int
fisubr
mov
in
adc
outs
xchg
scas
stos
movs
push
test
sub
mov
and
and
push
fimul
cmps
shr
shr
and
rcr
enter
cmp
call
mov
sub
cmps
jmp
sbb
shl
(bad)
pop
or
mov
mov
pop
and
fs
cdq
pusha
pop
mov
xlat
pop
dec
lods
add
aaa
cdq
add
push
pop
jmp
scas
in
pop
add
sbb
in
retf
dec
retf
xlat
push
pop
bound
inc
repz
and
adc
stos
in
xlat
fdiv
push
cs
ins
jnp
push
push
mov
dec
daa
xchg
lods
mov
loopne
mov
push
inc
ret
mov
jae
lds
jmp
sub
int3
xchg
push
jb
jp
push
das
and
inc
pop
aad
stc
mov
fwait
das
ds
mov
sub
fcom
daa
fs
cmp
stos
or
sub
dec
int
(bad)
mov
mov
repz
les
dec
sub
xchg
popa
in
dec
jns
(bad)
xor
sub
sub
or
mov
mov
retf
push
jg
in
pop
cmp
aad
enter
sub
jecxz
loopne
mov
ret
pusha
fcmovbe
jge
xor
push
mov
sbb
sbb
add
movs
and
xlat
test
(bad)
(bad)
push
mov
xchg
push
inc
in
pop
mov
mov
lods
int3
arpl
stc
push
clc
xlat
mov
sbb
mov
xchg
and
ficomp
sub
mov
lods
push
xor
popf
aam
arpl
adc
fisubr
gs
jbe
outs
and
push
xchg
stc
add
xchg
rcl
retf
jl
(bad)
xchg
push
iret
nop
inc
and
hlt
popf
mov
jbe
scas
test
aad
rcl
fisub
jmp
lods
test
icebp
push
mov
(bad)
push
pop
jle
pop
mov
cmc
(bad)
pop
mov
imul
jle
bound
mov
pop
cdq
pop
repnz
clc
fcmovb
xchg
clc
inc
xchg
stc
mov
push
js
jmp
adc
inc
dec
adc
(bad)
nop
out
mov
pop
sbb
mov
adc
fs
mov
mov
in
pop
cmp
or
dec
(bad)
int3
aas
dec
mov
retf
xor
cmp
sub
dec
sbb
pop
mov
rcr
sar
add
jmp
fnstsw
call
bound
cmp
xchg
fsub
loopne
je
mov
xor
xchg
fisub
das
mul
inc
ins
popa
mov
mov
ficom
out
and
xor
js
rcr
ret
popf
enter
repz
test
mov
(bad)
jns
ins
jb
popf
push
sub
pop
popf
xor
test
pushf
jl
arpl
movs
pop
call
xchg
dec
ins
add
sub
mov
mov
idiv
retf
dec
inc
jmp
pop
gs
pmaxub
(bad)
test
popf
xor
outs
pusha
in
aas
mov
push
pop
sahf
or
and
mov
out
cmp
sbb
inc
sbb
test
stc
and
daa
out
test
iret
xor
pop
sar
into
xor
loop
scas
bound
mov
imul
les
add
pushf
das
scas
sbb
retf
or
add
cmps
or
mov
mov
cmps
rol
in
cmp
mov
retf
lahf
dec
mov
loope
jle
or
scas
retf
std
les
inc
mov
out
add
pusha
and
jg
cmp
movs
mov
xor
dec
adc
sub
dec
std
jle
cmps
adc
aaa
push
(bad)
cmp
adc
mov
or
xor
js
mov
sub
stc
jge
cmp
or
fldenv
out
aad
cmp
push
aas
aam
das
or
or
test
gs
pop
pop
mov
mov
xchg
(bad)
aam
fnsave
(bad)
fnstsw
adc
push
xchg
ret
jmp
and
xchg
nop
hlt
mov
cmp
call
pop
addr16
jge
(bad)
pop
cmc
adc
cmp
push
loopne
cmps
cmp
jle
adc
rcl
xchg
jae
arpl
fdivr
push
push
xor
lods
sbb
fldlg2
mov
cld
mov
retf
stc
push
std
pop
mov
mov
mov
dec
test
std
call
rcr
lds
fwait
adc
pop
(bad)
(bad)
mov
and
call
rcl
loop
mov
cdq
loope
push
cmp
daa
mul
int3
sbb
dec
jge
xchg
scas
inc
pop
rol
add
xchg
sub
sub
sbb
mov
cmp
fs
ret
lock
hlt
jmp
or
pop
adc
push
add
mov
gs
stos
outs
xor
xchg
sbb
mov
fbld
outs
sbb
sar
jmp
lahf
pop
sbb
xchg
cdq
adc
fbld
es
ror
lock
data16
retf
or
hlt
cmp
in
fisubr
inc
aam
cli
and
xor
push
jbe
fidivr
jbe
jecxz
push
inc
xor
bswap
inc
test
pop
pusha
fld
push
ror
js
jg
(bad)
icebp
leave
pop
gs
xchg
test
jle
(bad)
fmul
jnp
mov
pop
and
lds
aam
push
push
out
cmp
into
fistp
in
out
or
aas
or
call
adc
cmp
adc
or
jmp
pop
call
and
int
inc
stos
stos
jl
shl
(bad)
adc
ins
fwait
stos
lock
mov
fadd
cmp
lods
ins
lea
cmp
xor
jecxz
je
lock
jmp
pop
sar
and
cmp
scas
jg
adc
pop
(bad)
sub
dec
and
jle
in
pop
add
retf
in
and
xor
ss
call
pushw
cli
adc
mov
(bad)
dec
pop
(bad)
xor
fsubr
jb
sahf
adc
(bad)
and
mov
xchg
pop
and
movs
inc
pop
inc
imul
jo
sub
mov
push
std
mov
and
sbb
ins
jns
or
fidivr
sub
sti
fsubr
(bad)
int3
and
(bad)
pop
fwait
in
xchg
and
mov
mov
xchg
or
inc
sbb
pop
jg
test
(bad)
mov
xchg
fcomi
or
adc
imul
icebp
sbb
icebp
and
sub
call
(bad)
leave
or
and
push
adc
call
xor
dec
xor
push
(bad)
imul
push
outs
jp
jmp
mov
into
call
ins
or
pop
data16
test
ja
or
dec
lods
ja
syscall
jae
mov
ds
sub
out
mov
sub
pop
xchg
mov
xchg
ss
test
movs
cmp
div
push
and
repnz
or
inc
add
cwde
lahf
neg
in
cmp
pusha
jge
push
jns
in
add
cdq
mov
test
xor
das
adc
inc
ss
or
dec
popf
or
lea
bnd
call
xchg
pushf
les
stc
lock
repz
add
sbb
inc
popa
mov
sub
ret
fwait
repnz
xchg
fsub
xor
mov
lock
pop
(bad)
(bad)
mov
mov
adc
push
jle
sbb
xchg
icebp
push
not
cmp
xor
cdq
fsubp
add
add
mov
ins
or
cmps
mov
in
dec
fisubr
mov
mov
daa
pushf
into
cmp
das
mov
sub
icebp
aas
xchg
lds
loop
and
adc
mov
es
je
push
das
jg
aaa
dec
daa
loope
mov
movs
(bad)
xchg
mov
mov
jg
xchg
repz
mov
xor
and
sar
push
call
xor
out
popa
push
mov
dec
lods
jbe
nop
xor
mov
pop
mov
dec
loopne
enter
ja
loopne
push
jne
dec
cmps
in
add
imul
xor
out
inc
and
mov
lods
mov
movs
ret
adc
cmp
dec
imul
pop
mov
sbb
mov
rcr
mov
ja
cmp
jmp
test
imul
sbb
jmp
cld
adc
cmps
adc
jns
sub
dec
mov
sub
xchg
xor
bound
int3
cmps
repnz
outs
adc
fst
mov
pop
clc
pop
push
sub
pop
cmp
jecxz
mov
xchg
std
sub
in
and
cmp
mov
hlt
adc
fimul
ja
push
and
ficomp
dec
jg
jmp
jno
ficom
cld
faddp
mov
cmp
std
pop
mov
pop
cmp
aad
es
adc
and
cmp
loopne
idiv
mov
push
outs
out
mov
sbb
(bad)
int
js
das
movs
stc
test
int
into
push
push
and
lock
outs
jb
mov
mov
push
aad
sbb
bound
cld
arpl
retf
sti
mov
mov
adc
pop
dec
adc
xchg
adc
jp
sub
xchg
hlt
ins
dec
call
sar
push
(bad)
inc
pop
nop
call
mov
int
adc
mov
fidivr
or
xchg
sahf
arpl
jmp
xor
pop
ret
adc
out
cs
test
movs
(bad)
sub
call
cli
imul
or
xchg
push
int
in
into
mov
xchg
sar
scas
inc
loope
push
inc
jne
cmp
pop
stos
xor
jae
cmp
(bad)
shl
mov
or
iret
sbb
retf
test
add
or
scas
dec
jmp
push
loope
and
test
mov
add
(bad)
aad
ret
add
gs
xor
mov
stos
ss
pop
int
dec
cld
or
jae
mov
les
push
push
outs
cmp
push
and
jmp
add
test
hlt
into
cli
rol
add
(bad)
mov
call
aam
cmp
push
clc
inc
inc
xor
xor
push
lock
iret
add
mov
fdiv
in
(bad)
hlt
imul
dec
jl
scas
fcom
les
inc
dec
das
ins
push
cmp
cmc
push
fcom
add
movs
mov
loop
into
pop
mov
int
repnz
jecxz
imul
rol
xchg
bswap
jo
mov
in
sbb
(bad)
popf
retf
test
daa
mov
and
dec
pop
in
or
mov
xchg
or
xchg
mov
push
imul
lods
sti
jns
sub
mov
jp
int3
repnz
push
cmps
in
retf
xor
dec
sar
jno
retf
dec
xchg
mov
(bad)
into
push
loope
jbe
and
repz
jnp
mov
iret
add
shl
mov
sub
mul
mov
sub
cmps
rol
icebp
inc
shr
addr16
mov
stos
cmc
mov
push
or
mov
xor
cwde
lods
and
rol
xor
sbb
mov
inc
lods
or
inc
call
data16
mov
imul
imul
ds
or
sub
(bad)
jne
xchg
cmp
or
fs
sub
dec
rcr
cmp
mov
outs
jmp
cs
xor
ja
cld
jle
pop
pop
dec
push
xchg
push
and
jp
xor
addr16
sbb
movs
adc
(bad)
xchg
pop
rol
push
es
sub
mov
retf
or
fild
cmp
inc
arpl
fsub
shr
sbb
les
mov
xchg
mov
addr16
nop
in
leave
bound
(bad)
sbb
cmc
xchg
das
push
lahf
inc
popa
mov
sti
and
out
out
lahf
aam
out
scas
xor
xor
sbb
in
and
xchg
jg
or
dec
ficomp
cmp
iret
mov
push
fisubr
xchg
xchg
ins
and
xlat
lock
xor
nop
push
stos
push
ins
fsub
sahf
jo
in
cmp
dec
mov
mov
pop
push
xchg
popf
mov
jle
jp
lea
mov
jbe
mov
mov
lods
pop
pop
pop
pop
ins
mov
ja
test
fnstsw
or
and
mov
jmp
add
mov
int3
push
prefetch
(bad)
imul
pop
jo
sar
stos
sbb
sub
leave
out
fcmovnb
sub
sub
jnp
adc
bound
test
cmps
mov
jg
cdq
pop
cmps
mov
jae
sub
shl
gs
dec
push
inc
retf
div
(bad)
loop
or
shr
ja
and
push
scas
outs
pop
and
sub
push
lods
outs
loop
ss
js
and
pusha
popf
push
(bad)
fcmovbe
dec
dec
or
ffreep
dec
pop
addr16
jle
push
loopne
inc
pop
loope
mov
mov
mov
data16
cmps
fdivr
mov
sbb
mov
push
sub
pop
int3
dec
dec
sbb
(bad)
mov
pop
adc
jne
cmp
inc
adc
fdivr
inc
or
rol
or
pusha
xchg
dec
ss
sbb
fdiv
test
lods
ss
lock
dec
mov
sub
add
pop
and
rcr
add
(bad)
or
cmps
aaa
jl
dec
mov
adc
pop
push
lea
sub
aaa
xchg
ret
xchg
add
pusha
mov
stos
add
push
push
adc
jg
fucomp
sahf
mov
clc
loop
jl
enter
icebp
ret
icebp
jecxz
in
xlat
add
sub
dec
out
pop
pop
sbb
jmp
push
jmp
into
xchg
sbb
fdiv
and
sub
dec
adc
cli
scas
mov
mov
push
jecxz
sbb
cmps
mov
sub
adc
fucomp
and
call
fwait
push
daa
in
into
or
pop
xor
xchg
mov
sti
adc
aad
xchg
popa
push
(bad)
(bad)
ins
(bad)
call
inc
push
mov
dec
mov
and
call
cli
in
loopne
aam
bound
popf
cld
es
mov
es
arpl
mov
push
xlat
lods
or
mov
inc
mov
cmp
or
pusha
ror
test
retf
add
aaa
mov
xor
pop
jmp
mov
adc
adc
jmp
jg
or
cmp
mov
cmps
push
jmp
and
test
scas
push
push
(bad)
pop
repz
mov
cs
aaa
scas
push
fs
sar
scas
xor
xor
pop
clc
js
or
or
add
dec
aas
and
mov
dec
pop
inc
xor
add
cs
cmps
int3
push
pusha
jno
pusha
push
sub
movs
in
mov
xor
mov
push
lea
add
add
gs
test
xchg
adc
mov
adc
aad
mov
nop
in
xchg
cmp
fdivp
pop
clc
pusha
add
mov
jp
test
xor
push
outs
cmp
js
call
cmp
retf
push
inc
pop
ds
mov
fisubr
push
lea
sbb
cli
(bad)
rol
inc
stc
xchg
mov
jp
or
xchg
loopne
mov
inc
das
lods
add
pop
or
inc
mov
dec
stos
clc
xchg
push
test
lahf
mov
mov
mov
xlat
sub
push
dec
imul
or
jmp
add
xchg
fild
neg
jnp
push
repz
sub
xor
sahf
inc
inc
adc
js
and
push
pop
ja
test
sbb
push
pop
add
dec
add
mov
xor
aaa
add
in
mov
xlat
inc
call
jno
mov
je
sbb
ficomp
mov
fist
push
popa
mov
or
xchg
jge
loop
shr
pop
inc
push
mov
loopne
add
in
aad
in
inc
pop
mov
mov
push
stos
(bad)
jg
in
jmp
pop
inc
stc
adc
loopne
aas
sub
dec
fisttp
pushf
dec
test
cmp
xchg
ins
mov
popf
and
push
mov
inc
or
jae
(bad)
mov
(bad)
ds
imul
popaw
mov
stos
out
sub
fmul
sbb
rcr
add
scas
push
mov
jno
push
and
(bad)
stc
ret
ret
dec
and
mov
jmp
push
xor
or
dec
arpl
ret
(bad)
imul
dec
daa
sbb
lods
int
aaa
mov
dec
and
pop
xchg
mov
pop
sub
xor
fadd
mov
enter
jb
(bad)
mov
loope
in
xchg
repz
mov
add
mov
xchg
sub
rol
add
pop
mov
call
cmp
in
dec
adc
mov
popa
mov
and
push
addr16
cmp
cld
sbb
mov
mov
jb
leave
imul
push
ret
push
mov
fld
shl
sub
outs
data16
ret
call
xchg
xchg
shl
enter
js
aad
rcl
add
test
sti
loopne
xchg
dec
icebp
pop
cwde
in
inc
and
loop
dec
dec
loopne
or
push
mov
fdivr
enter
xor
jg
lea
sbb
pop
or
jnp
jb
add
adc
shl
cmc
add
stos
jp
xchg
(bad)
and
mov
pop
call
push
adc
enter
sub
push
(bad)
pop
sub
scas
ins
mov
cmp
outs
fcomp
or
push
jmp
in
mov
push
jmp
pushf
fdecstp
and
jns
inc
xor
fsub
cmp
cmc
jnp
sbb
dec
pop
adc
dec
xchg
repnz
adc
popf
xchg
out
lods
mov
push
ds
cmp
mov
mov
xchg
sbb
mov
addr16
xchg
jae
popf
add
xor
cmps
leave
call
xor
(bad)
(bad)
cmc
test
movs
xchg
inc
cmp
cdq
and
retf
loope
mov
jmp
repnz
das
and
stos
rol
iret
fnsave
call
and
stos
ret
ins
or
jae
ret
mov
ret
adc
push
pop
popf
fucomp
mov
mov
sar
xchg
popf
jbe
or
das
jae
sbb
sbb
push
repz
pop
jmp
mov
and
jge
mov
sub
inc
hlt
or
shr
sbb
cwde
cmp
add
(bad)
in
push
inc
adc
fimul
sahf
push
fs
inc
push
jns
pop
xchg
pop
cwde
lea
mov
leave
lds
scas
lahf
pop
je
clc
lds
xlat
mov
sbb
pop
mov
pop
push
add
out
xchg
pop
outs
mov
sbb
cmps
xlat
mov
popf
sar
enter
sub
movs
ret
movs
(bad)
out
loope
dec
xchg
pop
cmp
mov
out
jmp
hlt
mov
lea
xor
jecxz
mov
sbb
int
dec
cmp
leave
pop
test
inc
xchg
pop
push
mov
pop
les
sbb
mov
xor
xor
and
imul
sahf
adc
mov
cmps
cmp
sbb
push
dec
test
xchg
stc
lock
hlt
mov
loope
xor
inc
and
jae
push
mov
nop
xchg
jne
sbb
xor
out
add
jmp
sahf
jns
cmc
xor
add
inc
inc
inc
imul
movs
adc
cdq
call
sbb
cmps
xchg
pop
mov
out
arpl
dec
in
push
fdivr
int
lea
in
sbb
jmp
cld
or
mov
mov
test
xchg
cmp
loop
ja
stos
sbb
add
jl
jp
mov
iret
ret
icebp
mov
adc
imul
or
xor
jl
in
movs
adc
sub
fcmovne
or
(bad)
xor
lods
loop
push
xchg
mov
test
ins
test
fsub
sub
dec
ins
jecxz
lods
mov
lds
repnz
mov
call
repnz
int
xchg
lds
lock
add
(bad)
xor
loop
adc
cmps
mov
mov
scas
popa
(bad)
push
aad
and
inc
repnz
sbb
push
mov
cmps
cdq
hlt
inc
test
out
arpl
adc
in
je
mov
sti
rcl
pop
mov
cmps
aaa
or
pusha
out
or
cmp
cmp
cmp
xchg
mov
jae
movs
jmp
sbb
fbstp
test
std
std
test
fs
sub
push
popf
xchg
out
lods
or
mov
sub
sbb
mov
hlt
mov
push
cmp
pushf
xor
mov
(bad)
mov
mov
jp
repnz
shl
clc
push
pop
sbb
movs
mov
mov
lahf
inc
jns
call
dec
dec
mov
sub
das
jmp
leave
add
inc
retf
jnp
pop
out
fbstp
ins
jb
pop
movs
sbb
and
xchg
push
or
bound
aam
sbb
push
rol
mov
les
jge
sbb
push
sub
adc
call
mov
mov
adc
pop
(bad)
ss
pushf
inc
outs
movs
scas
pop
int
add
fsub
push
sub
lods
lahf
inc
or
out
jp
sub
add
int3
mov
xor
mov
shl
aaa
inc
dec
bound
mov
out
mov
(bad)
fisubr
push
nop
jmp
and
lods
sbb
jb
imul
xor
inc
fs
retf
(bad)
push
stos
mov
stc
sub
adc
sub
mov
cld
test
fmul
loop
fisubr
repnz
jno
sbb
push
pop
push
ret
loopne
mov
mov
push
or
retf
jnp
pop
outs
add
in
cli
mov
cmp
fxch
adc
and
neg
mov
in
jmp
pusha
rol
push
sbb
cmp
pop
sbb
pop
das
or
retf
retf
nop
test
pop
xor
xchg
xchg
adc
cwde
into
test
mov
retf
dec
inc
xchg
iret
dec
jne
in
sbb
xchg
jecxz
test
cmp
std
in
jnp
mov
sti
data16
push
(bad)
das
lahf
and
fist
gs
adc
ror
pusha
jecxz
xchg
mov
xchg
push
jge
bound
xchg
sbb
dec
sub
cdq
adc
sub
and
aad
in
jl
add
ja
(bad)
lea
ins
xchg
or
pop
and
out
xchg
push
and
mov
sbb
imul
mov
into
inc
xchg
lock
js
jnp
cli
or
sub
lock
xor
imul
xchg
pusha
pusha
mov
add
ss
mov
cmp
out
jecxz
or
fisubr
lds
repnz
cli
pop
loope
test
inc
xchg
jl
fist
xchg
(bad)
sbb
out
cmp
mov
stos
es
shr
xor
(bad)
nop
sbb
jo
mov
xchg
or
out
adc
mov
int3
mov
sub
and
add
jp
or
jg
and
cmp
daa
pop
cwde
js
cmp
(bad)
cmp
(bad)
fnstsw
test
int
sub
sub
mov
mov
inc
and
xor
cdq
xor
les
jno
fistp
adc
sub
ss
lea
cmps
sub
mov
push
and
xchg
or
pushf
push
mov
in
adc
outs
inc
in
or
and
push
add
jns
xchg
push
jno
jmp
add
mov
movs
lods
test
mov
push
in
lds
pop
xlat
pop
leave
aaa
jecxz
pop
dec
das
mov
out
outs
adc
fucomi
push
or
leave
jne
fsubr
fisub
push
outs
(bad)
shl
push
sbb
xor
mov
mov
int
jmp
mov
repz
cmp
hlt
fs
sub
(bad)
sub
and
loop
repnz
mov
xchg
retf
mov
pop
mov
push
repz
dec
(bad)
push
xchg
fs
(bad)
(bad)
cmp
dec
test
fldcw
mov
and
fucomi
jns
inc
aaa
frstor
mov
bound
pushf
dec
popa
sti
sar
test
xlat
inc
jmp
in
icebp
dec
jne
sbb
into
and
bound
jl
jmp
cld
lods
mov
outs
sti
cmp
leave
hlt
bnd
mov
inc
in
or
mov
retf
retf
ss
mov
add
xor
das
(bad)
repnz
fbld
push
fldcw
cmp
ror
sub
hlt
ret
mov
xor
enter
sub
popa
add
es
pop
jp
jmp
arpl
jne
je
inc
or
add
ret
popf
cmp
out
xchg
js
add
jb
adc
add
test
out
sub
in
ins
xchg
add
xor
jns
or
aas
ja
mov
jmp
fisttp
int3
mov
iret
rol
test
fimul
call
fmul
les
push
dec
push
shl
cmp
das
add
jl
and
sbb
xchg
sub
leave
ins
mov
mov
mov
das
add
push
in
sbb
xchg
pop
bound
cmp
(bad)
mov
push
iret
mov
inc
mov
into
das
lea
dec
mov
jmp
dec
(bad)
dec
dec
inc
stc
cmp
push
(bad)
dec
xchg
hlt
adc
out
lock
pop
inc
stos
mov
ret
and
addr16
sub
mov
sti
shl
nop
jae
sub
fwait
(bad)
jmp
out
pop
in
sar
sbb
arpl
(bad)
mov
call
arpl
adc
ffree
lea
sbb
lods
push
inc
les
xor
fcomp
(bad)
cmp
mov
stos
jle
fyl2xp1
mov
rcl
ins
push
arpl
pop
(bad)
dec
pop
popa
xor
push
adc
xor
arpl
test
das
nop
mov
mov
inc
jae
push
enter
adc
sahf
mov
cwde
fsubr
mov
std
xor
in
ja
lods
inc
call
mov
pushf
clc
repz
add
pop
rcl
nop
inc
add
aaa
add
gs
rcr
sar
cld
lahf
mov
popa
scas
cmc
ret
xor
in
dec
mov
fld
iret
shr
xlat
imul
mov
xchg
and
idiv
popa
cmp
or
inc
add
adc
jge
xchg
mov
jne
jae
push
arpl
or
test
xchg
jae
lods
aad
cld
inc
sub
sar
int3
frstpm(287
hlt
pop
mov
push
je
ret
inc
pushf
and
out
movs
in
jnp
das
sub
imul
add
xlat
repz
xor
cmp
xor
fld
sub
shl
and
push
add
inc
mov
stos
fwait
jne
aad
cdq
push
jmp
xchg
jo
cli
cmp
cwde
nop
bound
sti
jmp
cvtpi2ps
mov
(bad)
ret
push
jns
adc
pop
xchg
sqrtps
inc
jb
sar
cmp
popa
adc
int
xchg
pop
mov
jle
dec
adc
out
in
aaa
movs
into
out
push
and
or
scas
jmp
ret
das
pop
fmul
call
jne
data16
xchg
ret
cmp
mov
xlat
cs
or
mov
jmp
xchg
movs
mov
cmp
retf
call
lahf
add
mov
mov
(bad)
ins
ficomp
add
sti
test
call
mov
xchg
sti
sub
int3
jne
mov
xchg
xor
out
test
out
ss
loop
jne
test
pop
xor
sbb
mov
aad
xor
icebp
xchg
push
sar
jecxz
movs
push
movs
xlat
mov
xor
fcomp
fdivr
or
pop
aam
adc
movs
das
fld
sub
fisttp
mov
inc
(bad)
mov
sbb
pop
stos
mov
push
jne
xlat
and
not
pop
mov
lea
(bad)
jle
popf
(bad)
push
jecxz
lods
arpl
mov
xor
cmp
mov
sub
pop
add
jmp
ficom
imul
je
idiv
inc
sbb
retf
das
pusha
xchg
jo
fsubr
aad
ror
(bad)
jns
das
push
inc
jnp
pop
shr
lods
dec
or
int3
into
or
inc
pop
push
outs
daa
sbb
ss
jg
sub
shl
jo
cmp
cs
out
scas
and
push
cld
sbb
enter
sub
jne
mov
jle
out
outs
xor
add
fcomp
or
mov
jp
loope
adc
es
js
scas
test
(bad)
into
xor
arpl
dec
out
mov
in
push
cld
pushf
in
and
test
out
fs
frstor
dec
xor
push
inc
or
mov
mov
mov
aaa
int
aaa
mov
dec
icebp
jmp
dec
imul
gs
movs
cmp
sbb
xor
repnz
pop
xor
call
inc
xchg
mov
jb
mov
cwde
pop
push
stos
pop
cs
(bad)
nop
or
mov
and
popa
mov
cmp
movs
cmp
mov
into
add
retf
push
mov
jecxz
pop
test
and
rcr
mov
push
lock
cmp
je
pop
mov
shl
sub
dec
jbe
arpl
pop
bound
mov
sub
dec
push
(bad)
scas
mov
mov
sar
sub
cmp
das
adc
in
mov
aas
pop
cmp
cwde
imul
push
jmp
les
nop
xchg
(bad)
mov
(bad)
rcl
dec
pop
mov
pusha
or
inc
pop
mov
loopne
cmp
mov
add
mov
push
jne
mov
sub
loopne
cmps
inc
and
aad
or
fadd
rol
or
dec
shl
adc
cmc
icebp
imul
loop
cmp
jne
scas
repnz
pop
out
adc
pop
jno
stos
push
xor
(bad)
sub
sub
sbb
cmp
push
std
jp
push
lahf
sahf
jno
imul
and
and
jmp
repnz
inc
out
fadd
sub
cmc
scas
mov
jae
jp
je
lea
push
repnz
pop
mov
xor
dec
idiv
xor
xchg
test
pop
cdq
dec
jo
fst
dec
cmp
mov
dec
ret
adc
addr16
fisttp
(bad)
mov
sub
or
cmp
cmp
add
mov
arpl
shl
loope
call
gs
push
fild
inc
outs
jecxz
and
mov
or
loope
fnstcw
xor
std
mov
or
cld
iret
pusha
mov
repnz
adc
and
sar
sbb
(bad)
cld
pop
mov
bound
daa
xor
cs
loop
in
mov
ret
lods
cmc
ss
adc
push
ret
add
and
inc
cmp
retf
add
and
sar
es
push
push
ss
mov
sbb
dec
add
add
xchg
scas
jo
xor
stos
push
mov
mov
lods
mov
jns
xchg
pop
jmp
mov
mov
pop
sub
cmp
sub
imul
or
xor
jg
cld
mov
movs
sbb
push
add
stc
pop
mov
(bad)
mov
xchg
int3
imul
push
and
cmp
pop
push
lods
or
fwait
jge
fs
mov
or
push
xchg
mov
mov
mov
(bad)
pop
push
outs
movs
jae
push
or
inc
mov
jl
xor
or
and
adc
cmps
mov
push
dec
ds
mov
xchg
lea
lock
scas
sub
div
cmp
adc
movs
xor
add
test
cdq
outs
inc
div
aaa
or
and
mov
dec
js
inc
mov
mov
pop
xchg
repnz
sbb
jge
add
inc
xor
mov
cmp
ret
cdq
aaa
mov
or
adc
les
and
aam
xor
pop
pop
push
mov
in
mov
sub
imul
add
jecxz
jbe
test
pop
ss
push
imul
gs
aad
pause
sbb
adc
enter
inc
jle
and
mov
ret
sub
push
and
cli
fdiv
push
rcr
mov
cmps
cmp
mov
dec
mov
adc
adc
sti
add
fstp
(bad)
jmp
push
pop
cmp
and
push
out
mov
sbb
jecxz
ins
(bad)
movs
ja
cmps
mov
sbb
push
jns
shr
mov
aas
jnp
jno
ror
fist
mov
sbb
mov
push
test
fnsave
add
adc
(bad)
sbb
leave
sub
mov
dec
into
and
jno
pushf
mov
xchg
dec
inc
not
rcl
lods
mov
adc
mov
jmp
cmp
jge
mov
add
and
mov
sub
push
xor
jecxz
jl
mov
jg
mov
inc
xor
mov
out
dec
scas
add
add
sub
fnstsw
mov
and
fld
xchg
cmp
or
jg
jns
imul
sub
in
das
push
je
push
pushf
jmp
adc
fisubr
pop
movs
(bad)
jmp
xchg
enter
dec
pop
xchg
adc
cwde
daa
mov
(bad)
inc
cmp
daa
ins
std
pusha
nop
neg
and
fsub
push
ins
out
aaa
sub
xchg
add
clc
(bad)
and
data16
sub
push
mov
add
shl
inc
push
xchg
loop
pop
sar
sub
mov
xchg
lock
mov
push
sub
add
cmp
mov
aam
sub
lea
rcl
daa
ror
xchg
sub
or
push
inc
sbb
mov
bound
jb
pop
or
adc
pop
in
mov
in
lock
mov
cmp
inc
out
es
cdq
retf
lods
imul
or
xor
(bad)
pop
aas
mov
jne
ins
cmp
jo
or
pop
in
nop
(bad)
jmp
int3
or
mov
fild
and
rcl
and
idiv
out
adc
inc
in
lahf
neg
cwde
mov
pop
jge
call
ins
mov
inc
imul
and
adc
sbb
fdivr
lahf
popf
movs
or
xor
dec
and
lods
pop
inc
mov
mov
ja
fdivr
cmp
inc
(bad)
mov
movs
(bad)
in
adc
pop
push
ja
loop
mov
push
mov
sbb
cmp
mov
xchg
out
pop
rcl
out
xor
loopne
ret
jns
das
xor
or
js
adc
push
pop
cli
loop
adc
mov
cli
sbb
xor
fidivr
adc
repz
pop
int
scas
xor
mov
add
in
mov
mov
lods
in
xor
jmp
ror
dec
shr
pop
xor
sbb
push
je
xor
pop
out
inc
mov
in
xor
cld
out
enter
fisubr
(bad)
(bad)
hlt
mov
fdivr
call
data16
cmp
sbb
push
pop
xor
cld
jle
clc
cmp
dec
int3
test
sub
lahf
pop
test
mov
add
mov
sbb
cwde
xor
cmp
fld
cmp
test
jmp
cdq
push
es
mov
xchg
jecxz
(bad)
mov
in
mov
lea
push
jecxz
push
inc
punpckhdq
push
push
jae
loope
dec
mov
push
pusha
mov
imul
add
cld
aam
adc
(bad)
rcl
inc
lahf
xchg
sub
ss
rol
mov
cmp
loopne
xchg
rcr
sbb
sahf
inc
jp
int3
fisttp
cmp
push
sub
mov
or
and
outs
scas
jns
cmp
out
loopne
push
test
cmp
lods
jmp
add
in
lock
fisub
fnsave
pushf
lods
cmp
hlt
jmp
popf
cmp
sbb
loope
mul
xchg
gs
call
mov
mov
hlt
cdq
and
aam
fld
mov
test
mov
and
push
cmp
fsubr
inc
ss
sub
mov
icebp
pop
mov
mov
jle
jmp
out
mov
sub
stos
arpl
into
aam
pop
push
outs
push
inc
sahf
xchg
dec
or
fwait
xchg
xchg
add
push
xor
scas
push
mov
jb
into
cwde
ins
js
jl
mov
cs
call
push
(bad)
and
mov
mov
push
dec
sbb
pop
add
mov
pushf
clc
sub
lods
into
jg
jno
cmp
push
cmps
and
jp
jg
push
xor
in
call
xchg
mov
dec
rcl
push
icebp
rol
mov
ja
pop
and
out
xor
mov
and
jnp
jo
mov
add
outs
inc
xor
into
mov
xor
mov
adc
push
mov
jecxz
fiadd
push
repz
cmp
leave
dec
xor
loopne
aam
popa
sbb
jle
jg
scas
fs
clc
rol
jbe
in
xlat
jbe
aam
mov
sbb
adc
je
inc
inc
inc
mov
mov
std
xchg
cpuid
(bad)
into
jbe
xor
in
jle
jl
daa
mov
adc
push
cmp
inc
cmp
call
mov
(bad)
or
cmp
pop
mov
dec
into
xchg
mov
jmp
mov
push
xor
jb
or
sbb
add
rcr
xchg
sub
gs
movd
mov
movs
lods
cmp
mov
or
movsx
mov
sub
imul
dec
push
pop
fidiv
push
cwde
sub
inc
xor
in
fdivr
loope
inc
clc
xchg
fadd
mov
xchg
retf
dec
and
push
movs
loope
mov
jecxz
jmp
ja
xchg
outs
cli
or
add
push
jae
in
mov
and
push
fs
into
repnz
or
mov
pop
or
mov
push
xor
retf
jmp
mov
in
mov
adc
mov
retf
(bad)
fsubr
(bad)
in
add
or
lea
mov
in
xchg
ficomp
bound
xlat
retf
in
sub
pop
or
or
nop
jl
das
stc
test
jnp
call
call
mov
leave
adc
push
cs
add
jns
out
fnsave
iret
push
lock
jae
sbb
mov
movs
repnz
ja
stos
cmps
into
jle
fidiv
test
adc
dec
sbb
jo
stos
push
nop
outs
lods
arpl
jmp
popa
mov
fnstcw
lds
mov
xchg
jmp
push
jo
mov
sar
aad
sbb
mov
in
int3
adc
loop
dec
addr16
adc
sar
cmp
retf
aad
leave
ds
pushf
imul
mov
inc
ins
mov
mov
js
dec
idiv
mov
cmp
mov
pop
xchg
out
mov
(bad)
imul
loopne
sub
test
xchg
mov
idiv
push
xchg
add
inc
jns
imul
lds
(bad)
jmp
outs
jle
adc
sbb
jp
jne
cli
push
xchg
inc
add
nop
mov
retf
xor
scas
cwde
dec
cwde
ins
pop
out
mov
mov
outs
xlat
mov
(bad)
cmps
in
and
and
sbb
jne
mov
inc
xchg
repnz
jmp
retf
dec
lock
mov
dec
jle
fwait
add
mov
scas
outs
imul
mov
xchg
out
out
push
or
mov
mov
fstp
mov
or
mov
das
add
test
add
xchg
or
pop
mov
(bad)
push
cmp
cmp
inc
xor
adc
jg
dec
sub
inc
jmp
mov
sub
pushf
mov
jp
sub
(bad)
leave
retf
nop
pushf
cmp
inc
add
add
iret
leave
loope
sbb
cmp
fs
dec
adc
lahf
adc
je
dec
test
cmp
rcr
jge
mov
sbb
movs
data16
xchg
hlt
sub
jle
mov
lds
jl
retf
(bad)
test
jmp
leave
lock
fisttp
xchg
daa
adc
fnstcw
in
pop
pop
enter
push
pop
mov
imul
adc
sbb
pop
xor
jbe
jg
nop
dec
pop
add
add
es
add
xchg
jo
cmp
test
push
aas
jmp
cmps
push
push
or
call
pop
jg
mov
mov
sub
push
int
mov
sub
clc
mov
in
pusha
sub
test
cmp
stos
into
push
jmp
xchg
jae
pop
add
inc
shl
or
pop
mov
pop
jmp
imul
sti
mov
sahf
adc
repnz
inc
mov
lock
pop
jmp
mov
cmp
sbb
inc
jae
loop
bnd
sub
add
mov
std
test
push
add
stos
test
gs
cmp
sub
adc
dec
adc
adc
sub
and
cwde
les
aaa
xlat
sahf
lea
loope
lock
ss
jno
jmp
shl
into
and
out
(bad)
dec
pop
mov
retf
jmp
push
adc
add
jmp
mov
jmp
call
pusha
mov
fdivr
loope
lea
jmp
and
mov
inc
lds
mov
out
push
push
ja
leave
add
movs
dec
ror
sub
cmp
pop
js
add
movs
dec
pop
xor
fs
xchg
xchg
popf
es
push
imul
(bad)
xchg
pop
enter
fcomi
out
stos
cmp
ret
inc
and
sbb
fnstsw
jno
jl
mov
or
jle
mov
cmp
mov
fimul
cld
loop
retw
repnz
jb
adc
(bad)
cmp
xchg
aad
mov
hlt
mov
sub
xchg
xor
mov
dec
mov
xchg
shr
lea
retf
push
int
sbb
ja
pop
inc
jne
xor
xchg
cmp
scas
sti
inc
mov
outs
cmp
into
push
xchg
mov
push
iret
or
sbb
sbb
fiadd
jbe
xor
mov
and
inc
xor
mov
pop
inc
in
lahf
jg
jns
out
mov
in
sbb
mov
add
ins
leave
das
xchg
in
adc
scas
arpl
sub
cmp
sub
cmps
hlt
adc
or
sbb
das
loop
std
pop
jo
sbb
out
stos
leave
xlat
fsub
scas
jne
mov
call
mov
daa
jo
test
rol
sub
cmp
jb
in
call
lock
nop
mov
fwait
into
out
and
sbb
xchg
lea
cmp
and
or
js
jl
sbb
mov
cmp
leave
test
aas
jae
mov
xchg
test
test
xchg
dec
sbb
imul
leave
add
inc
dec
cli
ret
or
test
push
repnz
jle
or
daa
mov
pusha
scas
adc
outs
ds
jecxz
es
sub
out
(bad)
xchg
pop
in
call
icebp
sub
pusha
fwait
call
dec
ret
test
lods
cmps
popa
adc
cdq
pop
movs
aad
pop
stos
cmc
shl
or
push
pop
mov
jge
sahf
push
out
and
sub
mov
rcl
(bad)
imul
jns
xchg
out
sbb
add
jg
ja
inc
xchg
data16
xlat
ret
fwait
jmp
enter
jmp
dec
add
jae
jg
cdq
shl
enter
sahf
imul
imul
xchg
ret
lahf
out
mov
push
inc
cmps
imul
out
pushf
cdq
and
and
sub
dec
dec
std
pop
cs
pop
jbe
mov
bound
mov
xchg
xor
lods
mov
push
sub
xchg
bound
mov
cmp
in
mov
and
push
mov
sahf
xchg
sub
xchg
sbb
push
outs
imul
mov
cmp
ss
pusha
pop
icebp
sar
xor
sub
lods
sbb
mov
cmp
sti
mov
adc
push
mov
(bad)
jmp
outs
and
add
out
xchg
movs
data16
(bad)
push
shl
xchg
fcomip
and
jmp
fstp
dec
mov
stos
out
or
push
mov
(bad)
in
mov
cmc
or
lahf
ds
sub
adc
add
lods
pop
push
ja
pop
inc
sub
loope
jecxz
mov
sbb
dec
sbb
(bad)
mov
ror
int3
adc
jbe
stc
imul
push
cmp
and
or
fst
xchg
test
pop
inc
stos
ja
jmp
xchg
fld
pop
outs
test
aad
mov
sar
dec
das
stc
bound
push
mov
sub
arpl
movs
sahf
cs
shr
movs
div
or
push
sbb
ret
leave
push
outs
retf
int
call
cmp
dec
jl
xchg
xor
xchg
or
dec
enter
jo
rcr
add
rol
pop
push
jle
mov
(bad)
nop
call
jge
(bad)
fadd
fwait
(bad)
in
addr16
mov
mov
push
int
mov
enter
cmc
and
mov
mov
scas
sbb
fcmovu
loopne
inc
add
addr16
pop
test
fwait
repz
imul
lods
dec
pop
push
add
cli
je
sbb
cmp
add
(bad)
call
dec
cwde
cmp
scas
(bad)
jecxz
jbe
or
xchg
cmp
(bad)
cmp
sbb
aad
push
shl
test
pextrw
pushf
push
cld
enter
test
sbb
(bad)
push
mov
out
jnp
mov
mov
gs
adc
cdq
inc
xor
cmp
rcr
or
inc
ins
enter
nop
jmp
scas
stos
repz
cmc
xor
jecxz
mov
popa
adc
jae
push
je
imul
arpl
pop
xchg
pusha
and
adc
int3
jle
punpckhbw
mul
adc
sar
jl
mov
fisub
popa
push
adc
(bad)
jns
cmp
jg
gs
or
inc
leave
rol
mov
test
rol
out
in
aad
cmp
ss
jmp
inc
mov
pop
in
(bad)
ins
jb
inc
out
sub
iret
pop
sbb
mov
stos
cmp
inc
mov
lods
icebp
lods
inc
imul
pop
sbb
sti
jmp
jo
pop
and
sbb
icebp
xor
(bad)
sub
or
push
iret
mov
cdq
inc
popf
out
xor
sub
cli
sub
pop
(bad)
jmp
fxch
xor
adc
jmp
sbb
retf
mov
and
rol
or
add
nop
mov
push
(bad)
mov
in
jp
ja
packsswb
cdq
xchg
std
cmp
pop
pop
shl
jmp
idiv
dec
cmp
xchg
(bad)
popf
test
ret
call
xchg
shr
daa
sub
loop
shr
mov
pop
mov
pop
adc
ror
xor
popa
pop
pusha
cmps
cmp
jecxz
mov
pop
je
sbb
mov
sbb
and
cmp
sar
and
ins
sbb
xchg
add
loop
jmp
pop
sub
xor
xor
std
sahf
ins
(bad)
xchg
mov
retf
xchg
nop
les
scas
and
cs
enter
mov
leave
adc
and
cmp
pop
retf
and
test
sbb
jg
call
nop
jno
jbe
data16
push
pop
dec
sbb
mov
mov
sti
enter
arpl
jl
mov
rol
xor
nop
test
jg
loopne
xor
sub
jne
or
stc
sub
mov
ret
mov
popf
inc
ret
jnp
outs
ja
or
test
retf
cdq
or
jo
lods
inc
mov
sti
add
(bad)
xchg
inc
loopne
push
sbb
jg
lock
and
dec
adc
push
and
pop
retf
mov
dec
add
dec
ror
stos
push
xor
add
jno
jno
sahf
pop
call
ss
pop
adc
pop
out
cmps
cmps
ret
pushf
adc
pusha
mov
aas
cmp
xchg
and
jle
scas
add
pop
sar
sbb
cmp
xchg
push
sub
in
int3
inc
repnz
ret
lods
inc
push
xlat
and
xchg
xchg
mov
stos
add
int
arpl
dec
mov
mov
cmp
cmps
mov
jmp
fwait
sbb
test
jmp
fsub
sub
shr
inc
cmp
inc
out
xchg
mov
pop
ror
sub
test
jecxz
mov
jmp
mov
lds
adc
ficom
int3
mov
dec
jmp
pop
mov
xchg
inc
or
xchg
or
inc
call
jle
push
sti
cmp
popf
mov
and
cdq
xlat
pop
pop
mov
shr
inc
movs
bound
es
fs
sbb
lds
mov
pop
(bad)
ds
fs
test
es
jmp
xor
push
sbb
push
test
pusha
ficomp
mov
xlat
mov
xchg
mov
mov
call
js
aaa
sbb
jecxz
or
or
jecxz
dec
(bad)
mov
and
xchg
cmp
mov
rol
int
or
sub
mov
imul
and
cs
in
push
cli
cmp
ja
outs
inc
push
pop
sub
(bad)
pop
or
fcom
mov
shl
jl
cmp
adc
jmp
xchg
inc
cmp
aam
add
mov
rcl
xor
out
push
cdq
push
cmc
dec
push
sbb
jo
jmp
daa
sbb
xchg
add
add
es
adc
clc
cs
test
adc
test
gs
xchg
test
and
push
ror
fcomp
ss
xor
out
push
cs
repz
add
and
fdiv
sub
push
je
out
sub
cmp
bound
mov
pushf
pop
pop
mov
test
enter
push
push
or
jnp
pop
inc
shl
mov
test
dec
out
clc
mov
jge
pusha
jbe
ins
fisttp
cmps
enter
(bad)
je
sbb
add
cmc
stos
stos
or
cmp
paddq
jg
std
lods
arpl
push
aad
push
test
mov
inc
mov
inc
shl
pop
dec
test
movs
jae
in
cwde
dec
popf
pop
cs
out
mov
mov
xchg
jne
dec
adc
fwait
popf
xchg
dec
(bad)
fstp
sub
adc
jmp
ins
pop
mov
adc
addr16
or
pop
or
jns
fidiv
sti
(bad)
push
pop
mov
and
mov
iret
jo
mov
mov
adc
ins
dec
push
shr
sub
(bad)
sar
or
inc
xchg
cmps
push
jl
sub
mov
scas
mov
shl
dec
cmp
lock
gs
mov
scas
pop
mov
cmp
inc
xchg
push
es
ins
out
sbb
mov
sub
cmp
or
jae
imul
push
mov
sahf
jno
xor
pop
js
pop
leave
xchg
add
sbb
sub
mov
or
sbb
add
add
retf
inc
mov
xchg
leave
add
rcpps
cmp
inc
add
loope
cmps
lahf
inc
cmp
cmp
ret
les
xor
inc
nop
mov
dec
jmp
jle
dec
sub
xchg
in
sbb
bound
xor
hlt
jle
je
xor
xchg
xor
mov
aad
adc
test
cmps
hlt
mov
hlt
test
push
cmp
in
loopne
shr
pop
xor
sub
and
mov
test
add
sti
mov
repnz
pusha
ret
jmp
scas
inc
imul
lds
mov
sub
xor
cs
iret
jo
pop
inc
and
push
scas
sbb
pop
adc
mov
xchg
pop
sub
mov
(bad)
or
lds
fsub
pushf
retf
lods
cmp
xchg
jo
or
cmp
movs
pop
jbe
stos
jge
adc
xchg
pop
xchg
xor
cmp
dec
test
push
or
test
loopne
dec
jbe
int3
adc
(bad)
jecxz
test
jp
rcl
push
or
scas
mov
xchg
mov
add
xor
cmp
arpl
or
loope
lds
cmp
push
jge
mov
lds
pop
xor
pop
outs
fsub
aad
fimul
(bad)
neg
jae
retf
(bad)
out
clc
prefetch
sbb
jmp
lods
add
push
dec
sub
int
mov
or
lock
jl
(bad)
mov
sub
fadd
and
jl
sbb
xchg
add
shr
cdq
xor
addr16
cmps
ficomp
dec
mov
cmp
out
ins
pop
jmp
push
dec
pop
(bad)
(bad)
stc
pop
cmp
retf
(bad)
test
movs
icebp
addr16
std
mov
dec
sub
cmp
push
clc
outs
inc
fsub
(bad)
(bad)
test
jns
dec
inc
dec
pop
nop
sub
cld
or
dec
repz
jmp
fmul
shl
icebp
dec
int3
ret
adc
mov
outs
dec
nop
ds
pop
lock
jmp
mov
push
fwait
mov
jb
pushf
sub
sbb
iret
pop
inc
dec
mov
lods
mov
mov
nop
into
push
pop
sbb
mov
xor
sub
mov
xchg
jne
retf
sti
mov
stc
ret
mov
mov
fstp
add
imul
test
or
cs
xchg
push
and
inc
push
sbb
push
shr
and
jno
imul
dec
cmps
out
push
cmp
les
cmps
xlat
ret
mov
imul
mov
mov
dec
retf
pop
lahf
outs
call
call
and
popf
retf
fild
retf
(bad)
test
shr
in
xchg
popf
shl
in
or
jp
in
test
push
mov
push
push
imul
mov
stc
xor
mov
jno
cmp
adc
adc
out
retf
dec
packuswb
test
hlt
cmp
pushf
pusha
and
jo
push
call
dec
idiv
push
aaa
inc
int
pop
cmp
fadd
mov
inc
pop
or
push
inc
shr
(bad)
lods
scas
int3
inc
xchg
inc
ror
fs
adc
mov
add
sub
adc
add
mov
pop
inc
test
jb
mov
xchg
fsub
out
xchg
xchg
shl
std
call
mov
jg
sub
mov
cmp
not
push
std
or
pop
cmp
cmp
xchg
adc
mov
pushf
pop
imul
cld
inc
jle
bound
(bad)
add
pop
out
aad
es
pushf
jmp
fwait
sbb
inc
fstp
in
pop
nop
jnp
js
adc
stc
pushf
fidiv
cmp
cmc
xor
aad
or
dec
je
(bad)
(bad)
mov
test
scas
jbe
popf
out
mov
pop
sub
or
sti
les
add
sbb
ret
ds
bound
pop
mov
push
je
jno
and
outs
dec
out
stc
mov
adc
adc
push
mov
mov
test
and
mov
cmps
inc
out
in
or
inc
lods
xor
sbb
pop
inc
stos
into
xor
inc
mov
dec
imul
into
repz
inc
push
addr16
ja
push
cmp
popa
(bad)
mov
adc
pushf
and
retf
fs
fdivr
push
xor
pop
mov
jo
xchg
xor
sbb
add
(bad)
cmp
mov
adc
add
jns
sar
lock
cwde
loopne
and
xchg
inc
sub
push
mov
inc
pop
dec
dec
jb
jg
pop
mov
jo
xor
pop
mul
(bad)
pushf
aaa
jnp
sbb
(bad)
retf
sub
mov
je
(bad)
mov
xor
and
sti
stc
xor
inc
cmp
adc
jecxz
mov
in
push
mov
fwait
or
inc
push
sbb
out
(bad)
sti
clc
shl
cmp
adc
add
mov
mov
std
cmp
movs
push
cmp
mov
dec
push
and
sbb
iret
push
adc
inc
lds
jns
mov
sbb
sbb
jecxz
shr
out
cmp
add
inc
push
sbb
dec
push
mov
call
mov
push
sbb
adc
push
sbb
jmp
push
mov
(bad)
(bad)
popa
enter
pop
cmps
xchg
dec
test
mov
pop
xchg
fadd
lds
imul
mov
dec
out
sbb
jo
jmp
fwait
sub
into
pop
mov
mov
imul
sub
cs
fisubr
cs
lods
bound
adc
mov
out
out
push
sbb
fsubr
mov
aad
addr16
data16
das
and
ja
pusha
xor
sbb
inc
jb
adc
es
and
cmps
xor
je
aaa
ds
outs
dec
or
push
sbb
loop
test
ins
or
dec
test
lods
std
jnp
jp
mov
sti
cs
mov
lods
out
mov
std
pop
mov
shl
sahf
xor
dec
push
mov
aas
mov
jns
test
mov
in
mov
out
imul
pop
int
mov
jmp
cmp
test
popa
adc
xchg
mov
nop
xchg
lds
sbb
jno
push
nop
je
cld
sbb
mov
xor
cmp
xchg
std
pop
cld
clc
sub
sbb
adc
or
mov
sub
add
xchg
int
call
mov
add
or
adc
sub
adc
(bad)
jmp
dec
cmp
xchg
xor
push
mov
in
push
sbb
cwde
xor
test
cmp
jmp
pop
ss
push
test
pop
push
(bad)
ins
retf
daa
fsub
aam
call
call
fucomp
mov
pusha
push
mov
retf
in
or
xlat
jecxz
lahf
push
xchg
loop
test
je
nop
push
call
into
imul
dec
push
icebp
mov
mov
push
or
sbb
js
stos
and
xor
repz
jnp
sbb
sar
sub
add
sar
jge
jo
test
or
push
xchg
or
movs
xor
or
jg
dec
std
cdq
aad
cmp
fcomp
jbe
shl
pop
out
pushf
jo
mov
sub
push
je
jecxz
scas
cmp
sar
pop
rcl
retf
(bad)
out
loop
js
mov
pop
or
xchg
js
movs
stos
push
sub
sti
ror
and
or
std
clc
cwde
or
sbb
scas
push
call
(bad)
(bad)
jp
inc
or
or
in
pop
mov
inc
mov
cmp
test
mov
and
pop
popa
fisttp
add
retf
push
mov
fnsave
cmp
push
ins
pop
jns
add
mov
mov
sub
sbb
and
jne
mov
add
fmul
icebp
push
lea
or
lods
mov
test
or
add
add
mov
fimul
sbb
add
into
adc
inc
or
loopne
or
ret
jae
sub
js
dec
test
push
jp
sub
cmc
mov
xlat
sbb
scas
jne
fisub
scas
fimul
cdq
into
cdq
inc
mov
xchg
div
cmps
add
(bad)
mov
jbe
inc
add
dec
int3
nop
popa
pop
adc
ret
adc
fsubr
mov
pop
and
mul
btc
and
sbb
adc
repz
dec
add
pop
test
fistp
cmps
jecxz
pop
fistp
pusha
loop
mov
cmps
aad
dec
clc
clc
cmps
jecxz
outs
loopne
jb
sub
mov
inc
push
repnz
iret
inc
scas
adc
in
or
mov
movs
jne
pop
lds
lods
jb
dec
or
jle
loop
cmp
cmp
mov
mov
xchg
pop
into
shl
mov
push
push
ja
loope
lods
lea
retf
es
mov
jmp
mov
mov
push
(bad)
sub
jbe
(bad)
adc
lods
push
ins
mov
sbb
xor
jl
jp
fs
cld
mov
jb
fcmovnu
aaa
sub
fwait
ret
ret
test
xchg
sbb
int3
test
shl
test
cmps
pop
shr
inc
cdq
inc
dec
mov
push
sub
retf
ja
js
jae
repz
retf
hlt
ror
popa
inc
mov
scas
call
inc
fnstcw
pusha
mov
popf
imul
hlt
stos
js
pop
int3
(bad)
loope
cmps
lock
adc
(bad)
mov
sbb
sar
mov
loope
dec
(bad)
push
push
adc
pushf
sti
out
mov
loopne
jl
jae
cmp
ss
cld
dec
sub
and
sbb
daa
retf
sbb
retf
add
(bad)
and
stos
add
jo
sub
nop
inc
lock
into
adc
cmp
push
pop
mov
ficomp
add
in
push
jp
aas
push
mov
dec
push
adc
aad
jo
mov
mov
gs
(bad)
stos
and
aas
or
xor
jno
cmps
inc
lds
out
push
jp
hlt
add
movs
push
push
pop
arpl
cmp
xchg
xchg
push
dec
loope
dec
loopne
xor
mov
ror
jl
ror
cmps
jb
data16
mov
in
push
cmp
call
addr16
or
fcmovnu
xor
mov
scas
out
sbb
test
in
push
(bad)
xor
jnp
test
mov
cli
les
sbb
scas
sub
leave
xchg
and
push
push
dec
push
mov
jle
pop
shl
stc
xchg
add
adc
in
mov
test
push
sar
inc
mov
pop
adc
lock
or
mov
or
movs
js
ins
and
adc
jo
arpl
sbb
rcl
xchg
and
popf
out
mov
ss
es
mov
cmp
xchg
test
jbe
and
aad
pop
or
dec
jecxz
out
or
cmp
adc
jmp
cmp
call
cmp
cwde
mov
inc
sbb
lock
(bad)
stos
stos
(bad)
repnz
xchg
add
sub
push
add
mov
pushf
adc
outs
icebp
sub
cmp
loop
(bad)
pop
out
mov
test
add
(bad)
loop
ret
adc
push
cdq
mov
jmp
ins
mov
mov
xchg
imul
pusha
lods
add
cmp
adc
out
movs
sub
add
pop
sbb
lahf
xchg
or
movs
in
or
sar
mov
mov
sub
adc
outs
xor
jo
fmul
sbb
(bad)
lds
bound
pop
sbb
js
mov
add
fs
fisub
inc
shr
stos
jns
sub
push
xchg
push
and
fisub
int3
adc
fs
lods
pop
repnz
(bad)
ins
mov
popf
loop
(bad)
mov
cld
ret
outs
or
enter
ret
jbe
stos
rcr
or
jg
sbb
xor
loopne
mov
or
or
pop
jbe
je
lods
ds
sbb
fwait
shl
cmps
jae
nop
test
push
es
dec
stos
and
sub
pop
ds
add
popf
pop
xor
je
mov
mov
or
je
shl
shr
mov
movs
fstp
and
cmp
repz
pop
shl
sub
loopne
mov
int3
shl
sub
mov
in
cmps
mov
push
out
shl
mov
ins
movs
shl
inc
pushf
add
dec
mov
mov
jg
int
inc
xlat
adc
idiv
mov
cmp
cld
xchg
clc
in
fisttp
add
addr16
push
fisubr
cmc
mov
cmp
jmp
inc
aam
fbstp
cwde
pop
aam
jmp
inc
adc
out
mov
loope
leave
pop
xchg
jo
dec
jge
push
in
fisttp
je
add
xlat
bound
fsub
stos
dec
mov
rcl
enter
jmp
sbb
mov
dec
cli
jns
(bad)
iret
push
scas
and
retf
mov
adc
mul
hlt
sub
test
daa
test
js
popa
call
sbb
(bad)
repz
inc
jns
ret
jp
mov
push
adc
xchg
sub
mov
push
push
push
cmps
mov
ds
mov
data16
shl
lods
ins
sti
and
push
jmp
loop
and
dec
jae
cmps
xor
mov
xchg
js
push
and
dec
call
mov
jno
adc
pop
push
pop
xor
inc
pop
aaa
test
adc
inc
push
mov
push
add
sbb
inc
mov
arpl
dec
or
dec
pop
adc
test
sbb
data16
test
add
sbb
cmp
cdq
fdivr
imul
ds
test
mov
mov
aad
inc
bound
in
(bad)
mov
sub
(bad)
push
jno
cmp
dec
es
push
sti
jbe
mov
jae
adc
jg
push
cmp
enter
mov
sbb
inc
sbb
sbb
adc
push
es
push
jbe
in
pop
add
push
pusha
xchg
jge
mov
xor
clc
shr
leave
xor
ror
sub
sub
mov
fst
sub
cwde
dec
jo
mov
repnz
(bad)
in
outs
jno
xchg
or
sahf
shl
xor
sub
imul
iret
ins
mov
cwde
call
inc
adc
push
inc
pop
outs
call
cmp
ins
stos
mov
mov
das
hlt
jmp
jg
and
lahf
rcr
push
or
cmp
lock
jno
inc
test
add
adc
(bad)
mov
cmps
inc
cmp
and
mov
in
add
jo
adc
lahf
in
mov
sbb
fldenv
int3
(bad)
mov
imul
lods
dec
nop
xchg
aam
xchg
jbe
sar
dec
call
cmps
fwait
aam
mov
cmps
into
dec
inc
fsub
xor
jg
jb
add
sbb
test
xor
test
or
adc
cwde
(bad)
push
call
mov
sub
and
movs
pop
dec
dec
retf
jp
sbb
inc
retf
hlt
add
xchg
mov
adc
stos
xchg
cs
pop
and
sub
sbb
test
mov
xor
add
in
scas
js
cmp
test
jns
push
pop
adc
dec
imul
lods
push
xchg
mov
mov
iret
mov
xchg
ja
fcmovne
loope
cmps
mov
xor
pop
jmp
inc
sub
add
ret
mov
add
and
int
mov
xchg
jbe
popa
ja
fwait
outs
sbb
xchg
push
push
mov
mov
push
and
test
dec
sar
sbb
xchg
inc
sub
add
ins
mov
mov
inc
leave
repnz
in
loopne
mov
and
or
inc
fsub
bound
je
call
and
shl
or
adc
mov
sub
das
adc
add
lods
ins
sbb
and
dec
popa
inc
mov
pop
jae
cs
cld
xlat
fild
dec
dec
rsqrtps
inc
dec
sub
xor
jo
cli
aas
sbb
loopne
test
clc
stos
and
fsubr
inc
fwait
rcl
in
add
push
in
mov
and
movs
(bad)
(bad)
rcl
sub
cld
xchg
mov
jnp
fcmovu
lods
push
adc
inc
mov
xchg
mov
in
neg
outs
cmp
xlat
adc
mov
cmp
adc
in
lahf
pop
pop
stos
aad
and
mov
push
(bad)
and
inc
inc
inc
xchg
or
retf
into
je
sub
jp
xchg
add
dec
cmps
mov
cmc
adc
lds
fidivr
(bad)
fld
mov
stc
nop
and
imul
out
xchg
out
fs
mov
inc
iret
cmps
or
or
ficom
shl
out
inc
cmp
clc
adc
(bad)
fadd
in
sub
lods
stos
imul
push
retf
and
and
retf
(bad)
(bad)
fwait
sbb
enter
retf
cmp
push
sti
clc
mov
cvtps2pi
int
std
mov
mov
mov
repnz
dec
sbb
adc
cmp
or
cmp
fsub
lods
pushf
xor
fs
ja
dec
add
mov
dec
pop
jo
sub
sbb
add
jns
sbb
jbe
mov
sbb
inc
mov
jb
pushf
ds
mov
add
out
or
loope
or
mov
inc
leave
shr
dec
push
cwde
pop
test
rol
out
push
xor
vxorps
and
mov
test
xchg
leave
xlat
cmc
mov
paddb
mov
sahf
mov
nop
dec
jmp
test
and
adc
lds
nop
lahf
scas
mov
sub
rcl
sbb
fdiv
sub
sti
inc
dec
retf
ins
pop
inc
push
cs
add
sub
std
and
iret
sub
inc
and
jae
jae
sub
test
enter
pop
sbb
or
retf
mov
push
sti
push
jnp
mov
push
mov
retf
in
mov
scas
xor
out
popf
pop
in
add
push
jmp
pcmpeqw
ds
pop
(bad)
mov
cmp
or
ja
das
pop
push
std
or
rcr
repz
pop
jg
sbb
call
popa
add
jecxz
cli
xchg
add
lea
ins
outs
repnz
adc
sub
mov
add
fnstenv
call
sub
pop
xchg
mov
dec
pop
jbe
cmp
pop
and
add
push
sub
jp
scas
cmp
xchg
retf
lahf
sbb
ins
mov
int3
xchg
add
and
push
mov
shl
in
std
sub
mov
mov
cwde
test
or
push
xchg
jbe
pop
adc
in
repnz
cmp
inc
mov
stc
sub
ss
push
imul
fistp
mov
or
leave
sub
mov
xchg
in
and
scas
add
arpl
movs
test
cdq
mov
dec
outs
mov
add
cmp
jae
jg
sbb
mov
iret
jl
pop
rol
and
sbb
push
shr
xor
loope
jl
ins
inc
loop
mov
push
test
cdq
stc
lods
push
add
sbb
pop
mov
popw
in
aad
les
sbb
jp
adc
mov
imul
les
or
loopne
fwait
pushf
fnstsw
mov
dec
and
jae
xlat
xchg
int
jno
cli
push
cmc
pop
jns
ins
inc
push
(bad)
sbb
dec
xchg
dec
sbb
jmp
mov
xlat
xor
fiadd
shr
outs
fwait
push
inc
test
or
cmp
xor
add
or
repnz
and
mov
arpl
sub
xor
jmp
jge
pushf
adc
xchg
mov
scas
movs
retf
push
jle
jl
push
push
pop
not
call
cdq
lahf
or
ret
inc
jmp
fstp
xchg
popa
add
loopne
mov
mov
pop
xor
test
jae
mov
inc
adc
loop
or
push
jge
test
jbe
cmp
dec
nop
call
neg
dec
add
fstp
push
call
add
mov
std
cmp
int3
sahf
into
daa
and
pop
int
dec
adc
fcmovu
leave
aad
ins
inc
sub
jns
(bad)
stc
mov
test
xchg
out
xor
ret
or
sub
adc
inc
cld
ret
push
inc
cld
dec
ja
dec
mov
or
into
xor
int
call
adc
das
cmps
test
pop
test
(bad)
stos
les
dec
std
push
stos
ja
and
es
fdiv
xchg
and
mov
cmc
in
outs
shl
lods
stc
jnp
mov
leave
sub
jns
fmul
retf
imul
daa
inc
mov
test
sbb
outs
aas
dec
mov
or
mov
add
sbb
sub
and
addr16
mov
push
sub
fadd
inc
ror
mov
push
in
data16
inc
out
or
sbb
cld
in
test
sahf
xchg
imul
inc
jns
or
ret
aaa
xchg
cmp
add
das
test
jecxz
sbb
push
(bad)
sbb
add
inc
mov
dec
lea
(bad)
push
rcr
and
inc
ins
bound
cmpxchg
inc
or
call
jge
scas
push
and
sbb
dec
mov
(bad)
sbb
push
adc
jg
mov
cmp
or
es
add
fidivr
inc
push
pop
sbb
mov
ret
lods
fist
leave
mov
push
mov
loopne
call
adc
jp
pop
sub
or
inc
dec
cmp
jo
(bad)
aaa
inc
push
mov
call
push
loope
mov
mov
int
push
fs
sub
and
mov
fist
cdq
rcl
stos
mov
out
addr16
test
rol
pop
pushf
jp
mov
mov
xchg
fdiv
sbb
push
rol
sbb
(bad)
jg
bound
jge
xor
and
inc
xchg
les
and
test
jns
jmp
push
mov
xchg
enter
cmp
xlat
stc
xchg
add
add
fldcw
mov
mov
add
ret
les
pop
dec
lods
jp
adc
mov
jecxz
cs
jp
adc
add
sbb
(bad)
lods
mov
(bad)
imul
rcl
mov
push
call
or
js
push
stc
loop
stos
xor
adc
std
mov
inc
sub
xchg
cs
push
fisubr
adc
hlt
jp
push
adc
push
xor
out
test
pushf
clc
ins
mov
iret
mov
cld
je
push
push
icebp
test
sub
fbstp
xor
mov
push
stos
(bad)
fmul
(bad)
cmp
loop
mov
in
push
cmp
scas
mov
add
retf
cs
fld
and
add
jge
(bad)
sbb
pop
dec
mov
cmp
xchg
push
jl
push
fwait
int
scas
(bad)
mov
mov
cmp
cli
lock
sbb
or
inc
or
jge
cs
(bad)
out
add
sub
jp
sbb
dec
xchg
pop
inc
sub
bound
cmps
call
add
imul
into
dec
into
gs
test
mov
push
mov
iret
push
pop
sbb
mov
gs
std
ins
pop
cmp
sar
mov
int3
pop
daa
pop
sti
loop
cmp
cld
popf
mov
or
and
cmps
mov
sbb
push
push
(bad)
mov
(bad)
clc
inc
call
mov
cmps
dec
and
in
cmps
jg
mov
xchg
in
(bad)
ins
sub
in
in
mov
in
mov
adc
sub
ja
test
out
and
fsub
jnp
mov
cmp
cmc
icebp
sub
mov
pop
ds
mov
dec
sbb
mov
pop
mov
repz
into
test
xchg
repnz
xchg
sahf
adc
mov
xchg
push
add
sbb
retf
cmp
xchg
lds
or
add
adc
inc
ret
jg
sbb
mov
into
sbb
xchg
xchg
add
sti
inc
adc
imul
pushf
fcmove
add
pop
neg
out
neg
dec
retf
xor
inc
lods
cmp
mov
mov
in
lods
jp
jo
jmp
jp
xchg
adc
mov
jmp
(bad)
push
jg
enter
and
data16
hlt
jno
sub
dec
adc
test
xchg
fdivr
lahf
fisttp
and
test
jecxz
pop
unpcklps
das
or
adc
rol
bound
mov
mov
xchg
or
stos
data16
push
jle
add
das
mov
rcr
push
sti
adc
mov
popa
push
lds
sbb
lahf
mov
inc
fisubr
(bad)
hlt
scas
mov
pop
and
mov
or
and
inc
dec
and
inc
add
xchg
mov
inc
pop
mov
mov
push
ffreep
dec
in
repnz
push
push
push
clc
fcomp
test
xchg
icebp
retf
fld
inc
loopne
inc
push
mov
in
test
cmp
xchg
pop
lea
hlt
sbb
inc
(bad)
mov
(bad)
mov
or
mov
or
ret
or
enter
ds
gs
in
adc
jns
adc
add
jns
pop
iret
leave
pop
test
fisttp
inc
xlat
jmp
xchg
shl
pop
das
add
xchg
push
inc
popa
mov
xchg
pop
xor
sar
sub
pop
mov
pop
movs
or
ins
fist
test
imul
sub
push
or
outs
mov
inc
loopne
push
add
mov
jmp
daa
xchg
xlat
scas
(bad)
sub
sub
int3
adc
nop
iret
or
call
mov
mov
(bad)
or
ficom
out
loope
adc
mov
iret
mov
xchg
(bad)
js
ret
inc
test
adc
sbb
push
push
mov
jne
mov
popa
call
pop
movs
or
or
leave
or
jae
cmp
lods
in
xor
dec
push
or
es
fldcw
jmp
dec
and
retf
popa
add
pop
mov
in
mov
sbb
push
push
sub
sbb
test
or
mov
int
sbb
jno
mov
aaa
wrmsr
pslld
sbb
inc
mov
and
jmp
pop
jge
imul
push
fwait
test
inc
shl
push
and
push
push
jp
nop
mov
pop
sub
pop
retf
in
ret
dec
mov
inc
(bad)
push
mov
(bad)
dec
jmp
(bad)
push
popf
push
js
push
xchg
pushf
popa
call
(bad)
fdivrp
cs
repz
test
mov
dec
jge
inc
add
inc
in
pop
addr16
test
and
paddw
dec
(bad)
add
inc
neg
push
lea
and
(bad)
or
xchg
push
mov
je
or
push
sub
mov
fdivp
arpl
loope
lahf
jb
dec
ret
xchg
aas
les
mov
fild
or
mov
jns
jns
xlat
fs
jb
hlt
or
inc
fs
pop
call
xor
cmp
fisttp
test
gs
mov
cmps
push
sahf
mov
mov
repnz
mov
jne
push
pop
sub
fld
sub
add
xchg
lahf
icebp
add
mov
xlat
icebp
mov
popa
mov
cmp
cmps
pop
mov
add
fisubr
lock
and
pop
pop
jge
pushw
ins
sub
sar
sahf
sahf
scas
inc
arpl
loope
jne
xchg
test
mov
mov
ret
and
pusha
rcr
jns
sub
mov
pop
addr16
mov
add
popf
sub
out
sub
pop
in
test
out
mov
mov
or
rcr
je
and
push
jecxz
rol
call
in
out
cwde
call
pop
dec
xor
or
aas
int
sub
fisub
xchg
adc
daa
and
dec
add
in
out
mov
adc
ja
jl
dec
ja
jge
push
and
lods
cmps
sub
mov
mov
in
test
stos
pusha
jp
inc
into
pop
not
ins
sbb
ret
sbb
in
int3
xor
cmps
xor
clc
push
(bad)
ss
push
push
mov
xor
imul
es
push
xor
stos
das
addr16
aam
clc
lods
(bad)
push
sub
mov
fs
adc
test
add
pusha
add
sbb
cld
in
aad
(bad)
out
mov
add
adc
sub
mov
shr
jae
ds
xchg
int3
cmp
push
cmp
out
inc
sti
mov
pop
adc
enter
iret
xchg
int3
adc
movs
fmul
leave
in
fstp
dec
sub
pop
daa
jae
xchg
xchg
retf
pop
pop
aas
jo
and
jb
push
movs
sub
int3
sub
mov
pushf
adc
clc
sub
mov
cmp
mov
fwait
xchg
xor
scas
aaa
push
iret
loope
int3
aad
inc
neg
fs
leave
mul
inc
or
jb
outs
outs
xor
or
jmp
mov
enter
inc
jge
jno
push
add
arpl
and
lock
nop
mov
sub
call
cmp
jmp
cmps
add
cdq
xor
rol
cmc
daa
xchg
and
fmul
pop
ror
ins
xor
cmp
dec
retf
int
imul
mov
mov
cwde
(bad)
fistp
sub
or
out
adc
dec
in
iret
or
xchg
mov
mov
(bad)
clc
mov
pop
int
call
xchg
test
cmp
adc
cld
push
push
movs
jo
ss
dec
rol
sub
xchg
test
cmp
adc
call
and
aam
cmp
es
adc
xchg
movq
popf
jae
push
bound
xchg
test
jne
(bad)
js
pop
pop
add
je
xor
scas
pop
out
pop
push
dec
mov
xor
icebp
mov
dec
mov
test
adc
out
mov
loopne
mov
nop
sbb
fild
(bad)
(bad)
fisub
or
aad
push
pop
cmps
stc
mov
out
mov
cdq
xchg
ret
loope
ret
push
xor
push
cmps
inc
and
mov
imul
or
jnp
adc
push
retf
dec
xor
adc
movs
jle
dec
ficomp
imul
mov
aam
xchg
sbb
and
out
add
retf
fidivr
dec
ja
cmps
or
(bad)
or
or
loope
retf
mov
jno
scas
and
mov
loop
ret
enter
fmul
imul
lods
mov
sahf
lods
mov
add
xchg
and
popf
add
stos
mov
imul
shr
add
das
cli
add
out
cmp
test
aaa
or
push
les
jl
test
das
arpl
jecxz
repz
inc
cmp
xor
clc
add
sbb
scas
arpl
jb
or
xchg
jb
mov
add
imul
ins
pop
lock
shl
push
sub
jp
jp
pop
jmp
test
nop
stos
out
addr16
repz
push
in
dec
pusha
and
add
je
cli
repz
imul
icebp
push
fimul
or
mov
mov
jbe
call
or
adc
mov
jmp
push
pop
add
aam
repz
aas
stc
imul
dec
aaa
fadd
cmp
xor
push
mov
add
mov
pusha
into
jno
jb
outs
outs
xchg
cld
dec
idiv
mov
(bad)
sub
outs
stc
(bad)
cmp
retf
scas
and
xor
cs
gs
or
jmp
(bad)
sbb
cmp
pop
(bad)
test
xor
sti
sbb
cmc
enter
je
add
sti
or
sub
jne
fild
sub
and
xchg
(bad)
adc
in
and
mov
jge
push
inc
mov
out
pop
xor
xor
loop
inc
scas
cmps
mov
dec
ror
lods
push
cdq
add
and
in
pop
ds
cs
icebp
jl
call
adc
stc
arpl
ret
xor
ins
daa
jo
mov
retf
or
clc
sub
adc
fldl2t
xlat
icebp
fadd
loope
es
xchg
dec
xlat
push
add
pop
aaa
ins
sbb
or
cmp
jmp
pushw
push
jmp
daa
sbb
mov
xor
and
out
(bad)
mov
cwde
popa
mov
cmps
jle
xor
stos
cmps
sbb
sub
push
or
xor
int3
cmp
or
sti
pop
mov
test
test
test
js
cdq
or
lods
add
(bad)
(bad)
popf
or
scas
rol
inc
jne
sbb
mov
xchg
cs
(bad)
mov
dec
test
mov
in
sahf
fstp
test
mov
dec
enter
sbb
add
out
add
popa
cwde
lahf
outs
adc
lock
xchg
adc
mov
mov
fmulp
xchg
jbe
lds
lea
adc
ror
(bad)
mov
repz
jp
std
jns
out
or
xor
inc
mov
inc
mov
or
enter
cmps
movs
idiv
cmc
bswap
push
mov
icebp
and
test
jl
mov
push
cdq
jmp
push
outs
rcl
sub
cmc
jp
and
mov
ss
pop
add
push
mov
fisubr
jmp
xchg
ds
int3
jp
xchg
mov
sar
aam
dec
add
push
rol
stos
es
hlt
popf
add
jae
jl
inc
call
lahf
inc
pop
push
outs
adc
(bad)
fstp
pop
dec
in
xchg
pop
inc
xchg
inc
call
enter
bound
scas
cmps
adc
push
xchg
mov
jnp
leave
xchg
fmul
jb
dec
popa
pop
stc
push
popa
in
xor
inc
fs
or
jmp
movs
mov
mov
pop
or
data16
fistp
fnsave
mov
add
sub
je
inc
(bad)
pop
sub
repnz
out
pushf
mov
rcl
jge
mov
sbb
push
jno
mov
lods
repnz
pop
fs
pi2fw
popa
cmp
das
shl
xchg
loop
aad
int3
cmc
cmp
inc
jne
xchg
xor
into
mov
mov
(bad)
sti
leave
(bad)
(bad)
and
push
dec
int3
retf
in
adc
(bad)
dec
out
mov
sar
adc
movs
jmp
mov
cmp
cmp
lock
adc
mov
adc
jge
add
call
outs
sbb
cvtdq2ps
stos
std
pop
mov
repnz
(bad)
mov
and
clc
nop
sub
int3
push
mov
mov
push
dec
pop
sbb
cmp
in
ins
push
gs
or
sub
(bad)
stc
jmp
jl
push
aaa
rcr
mov
stos
imul
rol
and
mov
ret
xor
jb
(bad)
fnstsw
ds
test
or
sbb
cmps
xchg
out
pop
iret
cwde
mov
jne
push
xor
lock
movs
mov
daa
mov
push
sahf
scas
dec
jno
mov
inc
addr16
retf
loopne
cmps
lods
jne
in
cmp
fimul
adc
xchg
cli
mov
stc
jns
mov
adc
add
dec
enter
dec
dec
jge
mov
retf
xchg
outs
inc
fld
xor
pusha
dec
imul
call
and
out
mov
into
sub
cmp
push
(bad)
jl
test
and
xchg
scas
cmps
xor
push
push
out
cmp
pushf
out
push
out
repnz
test
sbb
(bad)
sub
inc
adc
or
add
rcl
fld
inc
(bad)
loope
sub
push
sub
mov
stos
cmp
sub
pusha
jmp
icebp
lds
scas
int
and
jecxz
in
out
pop
pop
clc
ret
sbb
and
mov
dec
mov
jbe
repz
jnp
fwait
out
adc
ficom
cli
inc
pop
xor
(bad)
push
sbb
retf
and
xor
xchg
xor
jp
jnp
push
aad
fsubr
mov
sub
stos
jg
mov
test
fidiv
jle
(bad)
mov
push
pop
xchg
or
and
cwde
sbb
mov
es
cmp
jae
push
jno
pop
mov
cld
xor
mov
pop
cli
pop
push
dec
cdq
jns
xlat
(bad)
jge
arpl
push
mov
icebp
adc
outs
fld
pop
pop
lds
or
and
mov
jae
pop
test
movs
retf
pop
(bad)
dec
fld
mov
mov
addr16
jle
lds
pop
mov
call
mov
sub
inc
inc
fbstp
imul
retf
adc
mov
jns
loope
dec
mov
aad
cmp
outs
cmp
cld
add
jns
push
retf
imul
dec
fistp
xor
xor
into
mov
pop
sub
mul
cmc
das
mov
cmp
jnp
je
or
cmps
popf
xchg
mov
ret
rcl
arpl
mov
dec
daa
dec
mov
mov
sbb
nop
jnp
jne
push
fwait
loop
je
out
pop
jns
fidiv
inc
push
inc
jns
sbb
les
push
mov
scas
ror
or
pusha
loopne
mov
aam
mov
repz
push
int
add
xchg
int3
pop
and
imul
retf
fcomi
cmp
adc
fadd
shl
dec
ret
test
sub
imul
and
mov
add
repz
jb
add
imul
shl
adc
jae
ret
loope
adc
sub
mov
push
pop
fs
adc
in
inc
mov
icebp
sub
iret
loope
shr
push
nop
inc
dec
out
pop
lahf
mov
popa
or
aad
push
adc
and
add
ret
dec
lahf
push
xor
jp
fisttp
jmp
inc
and
xor
pushf
fimul
fimul
push
cmp
fcom
add
push
mov
sub
ja
cdq
and
stc
cmps
dec
inc
sub
jg
shr
and
(bad)
imul
inc
pop
aas
sbb
aad
aas
ss
fucom
sbb
shl
mov
sbb
sub
or
iret
cld
mov
js
pop
sub
(bad)
jmp
cmps
pop
loope
in
movs
inc
call
or
sar
adc
outs
aam
jbe
push
cmp
stos
pop
pop
sbb
xor
scas
dec
lds
sbb
pop
mov
call
imul
mov
ins
mov
cmp
daa
dec
push
add
sbb
mov
(bad)
xor
mov
ds
dec
xchg
imul
jne
jle
test
push
mov
mov
adc
inc
popf
div
xlat
adc
popf
das
push
call
loopne
icebp
xchg
outs
pop
stc
push
dec
aaa
adc
ja
out
dec
cmps
or
ficom
dec
es
xlat
lods
push
dec
imul
fs
mov
(bad)
fsub
outs
mov
in
sub
test
cli
mov
pop
inc
cdq
push
out
vmovhpd
outs
sbb
(bad)
push
fiadd
call
repz
mov
cmps
(bad)
fnstcw
push
or
push
jnp
and
push
mov
call
mov
je
xchg
xor
push
push
push
cdq
xor
bound
push
bound
or
adc
shr
call
(bad)
test
ins
(bad)
xchg
xor
nop
retf
ss
cmp
cs
xchg
cmp
aad
and
push
add
sbb
sahf
sub
ds
(bad)
lea
or
jnp
das
inc
lahf
mov
add
or
ret
lods
test
pushf
enter
pop
les
mov
pusha
pop
inc
stos
std
xor
out
add
mov
pushf
popf
imul
sbb
xchg
stos
xchg
ja
ja
pop
pop
pop
lea
arpl
mov
popa
sub
dec
add
mov
ja
mov
xor
mov
mov
mov
mov
xchg
inc
sbb
or
and
ret
lock
fcomp
in
dec
clc
mov
or
bound
test
popf
add
mov
pop
jge
adc
mov
call
outs
movs
(bad)
call
push
cmp
sub
dec
sbb
(bad)
cs
mov
push
cmp
push
(bad)
ins
xor
dec
ror
add
ret
add
fild
jge
sti
loope
cmp
scas
lea
pop
add
ret
inc
mov
and
aam
mov
inc
sbb
scas
pop
fwait
shr
js
dec
repz
sub
jp
fwait
popf
retf
push
loop
mov
fcomp
jl
aaa
xor
adc
xchg
jbe
or
dec
and
pop
xor
cmc
arpl
rcr
sub
mov
adc
movs
jge
loope
repnz
jbe
sub
scas
mov
out
hlt
cmp
push
ins
xchg
in
xchg
sahf
fnstenv
not
cld
in
inc
dec
repnz
sub
xchg
and
frstor
jb
pop
push
movs
xchg
aaa
lock
add
cmp
mov
inc
add
call
les
sbb
cmp
(bad)
or
cmp
ror
test
cwde
in
pusha
cmp
push
xchg
call
adc
pop
sbb
test
es
xor
adc
sub
sub
and
ss
mov
add
push
mov
ins
daa
cmp
adc
dec
fistp
fs
js
cmps
bound
addr16
jae
ds
inc
add
(bad)
(bad)
push
or
aaa
mov
je
in
sti
xchg
shl
(bad)
xchg
add
int
imul
scas
push
push
scas
rcr
mov
xchg
out
pop
add
sti
(bad)
in
mov
fcomp
jbe
cmps
cwde
cmp
adc
fidiv
push
add
jns
not
call
pusha
ret
in
in
mov
dec
data16
gs
ficomp
movs
pop
leave
(bad)
mov
sbb
call
cmp
(bad)
retf
sbb
xor
add
popf
loopne
adc
push
scas
pop
cld
out
je
xchg
cdq
pushf
cmp
shl
and
outs
fidiv
mov
shl
push
gs
rcl
mov
mov
fcomp
ds
ror
jg
sub
push
add
dec
test
in
mov
int
push
push
outs
call
sub
mov
je
out
hlt
adc
jno
ins
dec
fidivr
jle
stos
cmps
sahf
mov
mov
ins
jmp
pop
dec
adc
fisubr
jno
(bad)
cmc
rcr
mov
xor
lahf
cmp
stos
test
cmps
shl
cld
xor
mov
je
jg
loopne
sub
mov
cmp
mov
js
(bad)
jmp
and
movs
mov
dec
rol
rcr
jns
push
out
cld
popf
test
sub
or
xor
das
loopne
mov
xor
loope
pop
mov
pop
std
(bad)
frstor
pop
and
movs
and
ud1
inc
xor
pop
mov
jmp
add
(bad)
or
push
js
dec
adc
ins
leave
cli
aas
or
dec
outs
pop
sbb
jle
pusha
cmc
das
mov
xchg
push
mov
loopne
stos
loopne
jl
sahf
push
mov
mov
mov
aaa
not
(bad)
or
neg
push
xchg
and
inc
call
cmp
xor
out
imul
loop
arpl
cdq
dec
loop
lahf
ss
data16
shr
push
ret
add
ror
ret
mov
stos
mov
push
add
mov
sub
hlt
xor
sub
fild
(bad)
fimul
pop
pop
adc
jmp
les
rcr
into
std
mov
(bad)
rol
dec
mov
and
loop
js
sub
cmps
aaa
mov
(bad)
jnp
movs
push
cdq
or
or
(bad)
(bad)
jne
(bad)
std
fwait
inc
and
xor
popa
mov
push
and
add
pusha
cmp
sub
stos
clc
lock
(bad)
aad
lods
out
mov
retf
mov
mov
and
sbb
mov
nop
(bad)
movs
sub
mov
sbb
(bad)
jge
sub
jne
out
and
aam
sub
mov
push
push
xchg
xchg
popa
add
rcr
dec
into
cs
je
add
pop
sub
int
jnp
sbb
mov
and
cmps
jmp
pop
out
imul
adc
pop
(bad)
or
inc
and
add
lds
jns
add
xor
inc
lods
imul
sub
add
pop
cmp
(bad)
mov
scas
jns
inc
dec
js
cmp
add
ja
dec
mov
test
(bad)
xor
sbb
in
jmp
pop
test
repz
data16
mov
dec
aam
paddb
ins
pushf
sub
retf
xchg
mov
mov
sahf
sub
div
inc
push
and
icebp
shl
mov
stos
cmp
xor
repz
xchg
jmp
out
cmp
imul
cmp
xor
push
or
sbb
pop
jno
enter
push
sub
int3
sar
in
es
clc
push
out
cmp
cmps
add
call
rcl
imul
mov
loopne
jno
lds
add
popf
and
lea
jmp
mov
mov
xor
adc
add
out
popf
test
pushf
call
push
add
rcl
in
aad
ret
xor
dec
push
dec
pusha
dec
or
dec
jmp
pop
push
mov
fwait
les
test
dec
pop
int
cmps
test
iret
dec
and
clc
js
cmp
loopne
add
jecxz
xor
add
ffree
or
mov
shl
aam
sbb
ficom
push
fcmovu
mov
jae
int3
loop
inc
popa
dec
les
nop
push
out
jl
ret
pop
cmp
pop
pop
sti
in
(bad)
fisub
ret
sub
stc
and
mov
dec
fwait
repnz
fs
imul
xchg
in
in
call
movs
push
xchg
mov
lahf
inc
enter
or
ins
movs
jne
in
adc
adc
push
mov
pop
clc
jmp
lds
les
not
xor
icebp
mov
xor
pushf
les
js
cmp
push
cmp
inc
imul
jno
sub
test
arpl
jmp
or
leave
and
ret
push
and
mov
add
sahf
and
sbb
ins
cs
hlt
or
push
inc
jnp
and
aaa
xchg
sbb
jge
inc
adc
dec
aas
scas
scas
pop
or
mov
mov
jecxz
mov
out
and
xchg
sub
add
aas
cmps
pop
inc
fs
adc
lahf
xor
push
outs
push
pop
adc
ret
inc
adc
pop
pop
mov
cs
pop
pop
xchg
cmp
retf
xchg
in
out
xchg
add
(bad)
pop
fs
fsubp
or
cmp
add
lods
lahf
outs
jno
js
repnz
mov
arpl
mov
fwait
mov
adc
inc
dec
es
xlat
or
bound
jmp
mov
pop
ins
rcr
jecxz
or
jle
pop
fistp
pop
jmp
(bad)
repnz
jbe
mov
mov
ins
jmp
push
fdiv
test
cld
std
push
adc
mov
cmp
in
pop
xor
push
dec
inc
sub
mov
mov
sub
xor
in
push
dec
pop
mov
dec
cmp
lods
xchg
push
mov
jmp
sub
mov
out
adc
fwait
add
xlat
sub
mov
pop
adc
inc
pop
push
mov
mov
add
es
gs
xlat
xor
push
mov
out
xchg
push
mov
sub
push
mov
mov
add
fs
mov
sub
int3
mov
sub
and
xor
jecxz
mov
jno
mov
test
imul
mov
inc
mov
fstp
out
xor
sub
fmul
jmp
cs
pop
data16
scas
imul
xchg
push
push
arpl
sub
scas
out
cli
xchg
or
and
pop
sti
sbb
stos
push
jno
sub
(bad)
js
inc
inc
mov
adc
or
add
fidivr
rdtsc
cmp
dec
mov
jg
rcl
dec
movs
std
dec
dec
loopne
mov
or
cmp
in
fidiv
sub
xchg
push
pop
push
mov
int
jmp
mov
and
xchg
outs
scas
movs
loope
pushf
push
sbb
adc
addr16
adc
xlat
(bad)
mov
outs
leave
pushf
sbb
xor
mov
mov
es
sbb
mov
jg
ins
mov
xchg
jl
jns
dec
push
test
add
or
popa
mov
fistp
ss
fadd
out
repz
leave
mov
in
movs
pop
mov
outs
das
(bad)
mov
sbb
jne
add
dec
mov
into
in
ja
imul
call
cli
in
add
dec
jb
lahf
fwait
nop
pop
push
sar
(bad)
push
retf
adc
xchg
push
int
mov
dec
pop
nop
jmp
ret
xor
shl
inc
sbb
addr16
or
push
hlt
mov
cmp
and
xchg
pop
out
mov
nop
fstp
pusha
or
and
icebp
test
mov
imul
fs
ins
sub
or
mov
mov
pop
and
mov
fiadd
inc
mov
call
xchg
(bad)
das
cmp
add
mov
mov
jb
(bad)
mul
dec
loop
mov
rol
dec
rol
fisubr
xor
aaa
es
and
fcomi
add
mov
mov
js
ja
in
out
cmc
jns
sub
test
mov
inc
adc
push
and
sub
jns
cwde
push
add
sar
fmul
push
xchg
jmp
test
ficom
fisttp
adc
imul
(bad)
inc
and
dec
es
jle
out
xchg
mov
jo
mov
jmp
nop
(bad)
jcxz
xchg
(bad)
push
xor
xlat
pusha
pop
fs
(bad)
out
ror
pop
popa
add
std
jne
inc
ficomp
imul
das
(bad)
fs
stc
rcl
mov
or
pop
(bad)
mov
cmps
sahf
xor
fcom
jl
mov
xor
ss
add
out
in
(bad)
cmp
and
adc
mov
jmp
or
jnp
std
cmp
sbb
fwait
out
arpl
fnsave
call
hlt
ss
adc
dec
mov
push
jns
in
jp
test
scas
popa
out
inc
in
dec
cmc
imul
and
jle
out
xchg
ins
jo
jae
ins
mov
xchg
adc
jb
pop
fwait
jno
xor
mov
ss
sbb
inc
inc
je
stc
jbe
sbb
cdq
mov
arpl
dec
mov
call
sti
bound
mov
pop
sub
mov
push
in
mov
xlat
push
pop
xor
call
or
or
dec
shl
test
jecxz
inc
and
jecxz
sub
jae
and
lds
pushf
outs
add
test
ins
aam
retf
mov
punpckhbw
std
pop
and
jg
rsqrtps
cmp
xor
aaa
aad
add
xchg
ss
or
inc
dec
xor
mov
sti
jnp
sub
push
icebp
movs
dec
fdiv
add
(bad)
ror
mov
outs
adc
int3
sub
mov
mov
imul
in
fwait
in
sbb
add
cdq
shr
push
jl
test
and
jle
xor
sub
scas
and
retf
aam
inc
fmul
cmp
aaa
inc
xchg
int3
stos
call
mov
ss
arpl
adc
lock
jnp
xchg
cmp
addr16
jne
retf
cmp
rcl
sub
je
mov
mov
mov
xchg
retf
dec
pop
sub
pop
pop
rcr
shr
loop
sbb
mov
sti
mov
mov
fimul
outs
inc
into
cwde
jo
into
jnp
cmp
arpl
test
ror
mov
push
xchg
in
cmp
pop
mov
iretw
cmp
mov
mov
mov
fwait
out
pop
xchg
aaa
lahf
or
mov
ins
in
mul
aam
pop
xor
pop
sar
jge
int3
hlt
jle
xor
lock
or
xchg
(bad)
jg
sahf
jae
fadd
shl
fldcw
dec
ret
xchg
and
xor
fiadd
mov
mov
(bad)
out
int
adc
adc
jns
dec
xchg
aas
rcr
sub
dec
ror
jg
cmp
in
push
pop
push
pop
adc
loope
fnstsw
inc
sbb
mov
push
movs
adc
and
sub
int
pop
dec
sbb
mov
scas
jae
inc
dec
ss
and
fwait
fs
jmp
outs
and
mov
vaddsubpd
test
pop
sar
add
test
ret
loopne
pop
mov
ret
push
sti
lahf
pop
cmp
jmp
shr
fwait
push
lea
stos
in
mov
sbb
add
pop
mov
outs
xor
ficomp
dec
xchg
jnp
push
.byte
.byte
push
sbb
