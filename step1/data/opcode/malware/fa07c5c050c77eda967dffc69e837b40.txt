movs
out
enter
sbb
sbb
push
(bad)
and
mov
mov
and
add
sub
pop
int
or
rcr
mov
xor
ins
xor
je
in
outs
mov
mov
div
ret
ds
cdq
mov
dec
lea
mov
es
out
xchg
es
pop
ficomp
test
sub
jge
mov
popf
and
pop
cdq
sub
pushf
and
jno
jo
jle
ds
push
and
mov
or
sub
out
ds
sbb
mov
jnp
mov
movs
jg
(bad)
idiv
inc
push
jg
imul
or
mov
push
jl
sar
sub
xchg
mov
cmps
mov
rcl
xchg
jp
sub
jae
xchg
or
push
pushf
sti
jnp
push
mov
pop
cmps
pop
push
ds
ret
or
cmp
xchg
xchg
add
push
lods
ss
in
mov
arpl
out
(bad)
sub
cmp
lea
cwde
fisttp
adc
mov
or
jmp
push
cmp
push
daa
sub
xchg
in
hlt
clc
dec
adc
cwde
dec
ja
sbb
adc
in
ret
inc
jae
lds
mov
xchg
test
adc
xor
dec
(bad)
clc
sub
pop
and
jmp
inc
add
mov
cmp
cmp
sbb
leave
push
cmp
test
in
jecxz
fs
or
sbb
int
pushf
add
sub
or
adc
enter
ror
add
sub
js
gs
pop
inc
scas
gs
xchg
imul
ret
pop
bound
adc
mov
xor
xchg
pop
jne
mov
lods
jge
sub
call
movs
test
mov
into
mov
fsubr
jns
mov
mov
into
add
xchg
cmp
xchg
jmp
sub
pushf
int
pop
pop
mov
xchg
scas
daa
ins
and
lods
xor
lock
adc
dec
jp
xchg
(bad)
mov
das
loopne
add
adc
cmps
shr
shr
pusha
(bad)
lock
mov
push
rol
mov
cmps
ins
push
xor
shl
adc
xchg
sahf
test
pop
aam
sbb
mov
lea
mov
cdq
push
fdiv
push
inc
sbb
dec
push
fdiv
aas
pusha
dec
fimul
cmp
les
fs
mov
xchg
dec
test
mov
scas
sbb
cmp
or
jmp
jge
ret
fist
bound
or
xchg
mov
lea
(bad)
popa
(bad)
dec
sbb
cmp
mov
push
cmp
inc
in
mov
popa
xor
mov
add
outs
mov
pusha
fbld
fs
and
add
imul
push
xchg
or
push
icebp
push
loope
mov
cwde
lds
inc
xchg
mov
arpl
cmp
jecxz
ret
and
jmpw
push
int
inc
(bad)
es
xor
lds
jmp
mov
cmp
xor
popf
ror
mov
inc
cs
push
idiv
pop
xchg
sub
rcr
std
out
cmp
cld
daa
xchg
mov
jmp
cmp
fadd
inc
or
scas
aad
mov
mov
inc
dec
xchg
adc
mov
jno
iret
inc
xor
sbb
shr
mov
jmp
out
retf
(bad)
sbb
fwait
lahf
mov
or
sar
(bad)
dec
movs
outs
not
jne
mov
scas
shl
mul
mov
outs
fild
test
dec
mov
scas
cld
inc
fiadd
cmp
call
(bad)
mov
pop
jmp
pop
push
outs
mov
fnstcw
retf
mov
adc
mov
hlt
fwait
xchg
movs
retf
adc
push
jl
pop
sbb
xchg
mov
shr
fs
or
jg
dec
xchg
hlt
sbb
mov
cmc
inc
and
sub
fmul
int3
sbb
lods
xor
popa
sbb
cmp
xchg
jl
xchg
sbb
push
out
dec
cmps
fild
or
push
xchg
in
pop
lds
ins
mov
cmp
mov
leave
clc
dec
rol
stos
cmp
leave
cs
rcr
pop
lahf
loopne
inc
pop
adc
aaa
or
in
cmp
idiv
pop
mov
sub
fiadd
imul
dec
in
ror
out
mov
div
adc
enter
dec
(bad)
test
push
mov
push
adc
adc
(bad)
pop
dec
inc
mov
rcr
mov
(bad)
cmc
leave
(bad)
dec
xchg
pop
xchg
neg
push
int
ds
ret
inc
(bad)
out
jns
rol
mov
mov
sub
jno
sub
fwait
arpl
adc
cmc
pop
(bad)
xor
aaa
imul
jl
ret
aad
mov
cmp
into
xor
xchg
sbb
sbb
mov
jle
lds
jno
retf
cmp
mov
dec
sbb
(bad)
arpl
idiv
mov
(bad)
mov
pusha
popa
push
push
in
ins
mov
sti
sbb
out
les
cmps
jmp
or
(bad)
adc
adc
mov
test
test
jp
xor
xchg
in
jmp
sbb
shl
sti
imul
sahf
addr16
fstp
test
jns
lock
aad
push
mov
mov
ret
fisub
push
arpl
inc
push
mov
les
mov
in
cmp
mov
out
dec
movs
sbb
lods
add
xor
or
jecxz
arpl
mov
xchg
(bad)
test
leave
mov
leave
icebp
mov
mov
jb
jae
dec
sub
rcr
addr16
shl
fisub
lock
call
in
inc
cld
pop
pop
xor
repz
sbb
jle
jnp
inc
in
adc
iret
(bad)
cmp
push
cmps
stc
(bad)
imul
push
mov
mov
xor
outs
mov
sbb
mov
inc
mov
std
and
outs
not
xor
sti
rol
cdq
in
inc
mov
jge
dec
in
pop
movs
test
lea
xchg
lods
fsub
mov
cld
dec
or
pop
pop
loop
mov
jb
pop
inc
fs
or
cwde
mov
dec
xor
movs
and
in
adc
add
jmp
jecxz
add
nop
push
jmp
dec
jns
int
ja
xor
or
popf
jg
scas
daa
xor
or
adc
xor
cld
push
and
and
cmp
mov
fadd
xchg
cmp
or
cmp
and
push
inc
xchg
jns
nop
push
outs
xor
ret
cwde
mov
gs
fcmovb
sub
lock
sub
add
addr16
(bad)
mov
add
jns
popa
je
adc
jbe
mov
loope
cmps
cmp
mov
xor
mov
xchg
(bad)
sahf
mov
fsub
addr16
jp
pushf
inc
nop
mov
fsubp
cmp
push
sbb
xor
push
je
mov
mov
or
ret
mov
push
mov
(bad)
dec
test
xchg
sub
movs
mov
pop
fdecstp
std
cmp
ins
bound
jge
(bad)
xchg
(bad)
shr
push
jecxz
xor
add
push
aad
fmul
mov
out
mov
cmc
loop
mov
js
repnz
mov
pop
test
mov
iret
cmps
jmp
sahf
inc
jge
clc
pop
add
inc
ds
xor
scas
xor
cmp
hlt
pop
dec
rcl
shl
dec
pop
leave
js
and
xlat
mov
sbb
xchg
sahf
mov
adc
push
jne
lds
fisttp
adc
ss
movs
pop
adc
(bad)
jnp
pop
shr
dec
movs
dec
js
sbb
jnp
adc
mov
xchg
repz
jbe
aad
fidivr
fidivr
cwde
dec
fdivr
fwait
je
into
adc
scas
test
mov
sub
mov
inc
rol
add
xor
es
mov
push
rcr
sub
rol
js
pop
data16
mul
mov
popa
push
mov
test
enter
dec
(bad)
imul
shl
ins
lea
push
(bad)
icebp
fld
jg
adc
loope
mov
xchg
(bad)
or
jmp
mov
(bad)
or
mov
loope
in
push
rol
xchg
sbb
dec
inc
aaa
mov
sbb
cmp
sbb
lods
push
mov
lahf
mov
push
out
pop
mov
leave
add
mov
sub
cli
and
jb
sti
mov
outs
outs
mov
addr16
jns
cmc
nop
inc
inc
pop
push
in
movs
jg
pop
jecxz
mov
jnp
inc
movs
ficomp
inc
fild
imul
rcr
and
enter
xchg
mov
xchg
xchg
aad
into
pop
imul
sub
or
(bad)
mov
mov
fsubr
push
add
adc
adc
dec
ss
loope
scas
jmp
(bad)
stos
std
imul
into
rcr
cmc
cmc
gs
xor
dec
retf
pop
rcl
xchg
jmp
outs
sub
out
mov
ror
mov
icebp
pushf
cli
mov
xor
adc
and
mov
cmp
outs
inc
lock
out
push
dec
daa
lea
cli
xchg
and
out
jo
ret
in
fsubr
fwait
lods
ficom
out
data16
jne
jg
push
fisttp
xchg
inc
ins
loope
sub
or
xchg
cmp
jg
cmps
jg
cmp
push
out
lods
ja
inc
leave
(bad)
repz
cmps
movs
ret
sbb
push
loopne
jmp
stos
mov
cmps
jle
xor
nop
(bad)
test
pop
popa
mov
std
test
stos
mov
aas
sbb
inc
add
jbe
fs
inc
and
cmp
pop
jnp
cmp
movs
out
cmp
mov
sahf
jae
enter
adc
jmp
stos
popa
sbb
sub
mov
mov
pop
cmp
aaa
mov
jle
loop
inc
sub
sub
jb
xchg
sbb
dec
jmp
xor
in
jp
arpl
mov
dec
repz
and
mov
(bad)
xor
jmp
in
or
test
xor
fdiv
pushf
ret
dec
inc
mov
push
test
add
mov
sbb
jecxz
pop
stos
cwde
mov
mov
inc
mov
es
mov
(bad)
ror
push
(bad)
shr
fist
jl
daa
jns
in
xor
ja
fisttp
das
add
xor
xchg
lods
pop
je
arpl
add
not
leave
mov
shl
popf
push
push
adc
sar
popa
gs
cdq
adc
add
push
in
sub
out
cwde
in
and
outs
mov
inc
adc
fimul
imul
call
sar
mov
outs
loope
stc
inc
mov
push
pusha
push
jo
and
xchg
pusha
out
repz
sub
mov
jecxz
xlat
arpl
ror
pop
loop
pop
movs
(bad)
xchg
popf
push
ret
dec
jg
cwde
and
sub
inc
(bad)
sub
mov
sub
xor
out
mov
into
or
pop
jle
pop
push
sbb
adc
xlat
js
stos
in
int
mov
cdq
out
mov
js
cmp
loop
mov
hlt
mov
out
xchg
cmp
cwde
add
pop
mov
loope
call
pushf
icebp
pop
jae
pushf
cmp
lods
pop
jmp
jl
inc
outs
jno
xchg
daa
hlt
push
add
(bad)
xchg
jnp
cmp
adc
jg
fdivrp
setl
or
test
ret
(bad)
jbe
push
les
dec
push
push
idiv
aas
sub
bound
stc
ins
stos
aaa
push
loope
out
fcom
inc
pop
les
(bad)
in
cmp
or
add
aam
outs
push
sub
mov
cmps
inc
mov
add
cmp
inc
enter
daa
mov
add
mov
fcmovne
test
ins
or
rcr
pop
mov
add
push
pop
sbb
pop
sub
in
inc
mov
scas
(bad)
sub
jl
iret
jl
arpl
loopne
or
mov
dec
test
jne
test
push
mov
lods
mov
mov
rol
sahf
(bad)
fdivr
mov
loope
leave
fst
cmp
in
push
pop
outs
dec
out
test
sbb
leavew
test
mov
adc
popf
jae
xchg
pop
xor
push
xchg
mov
push
jb
push
cld
pop
(bad)
cmc
mov
ss
pop
or
out
or
arpl
mov
data16
sub
push
stc
or
mov
inc
mov
pop
mov
cdq
aad
jecxz
and
and
add
js
xor
mov
js
mov
into
(bad)
movs
cmp
jne
fwait
call
and
adc
xor
das
(bad)
(bad)
leave
cli
daa
inc
and
jg
jmp
push
nop
fsubr
test
popf
inc
mov
pop
or
call
jns
pop
sub
add
stos
jo
sti
mov
dec
nop
ja
sar
lods
inc
loop
jae
jno
ret
out
bound
lods
ins
xchg
adc
sti
dec
or
std
add
add
push
loopne
cld
mov
adc
addr16
fst
add
mov
pop
push
jne
jmp
dec
or
test
test
jecxz
dec
imul
mov
cli
sar
rcl
and
shr
pop
xor
mov
dec
or
jmp
pop
aaa
mov
xchg
add
nop
mov
sub
into
and
cmp
rol
test
aad
cmc
cmps
lods
in
lea
ror
mov
sbb
fisttp
jp
xchg
jecxz
inc
jg
fisttp
lds
es
lock
test
out
mov
add
inc
push
out
inc
imul
mov
loop
xchg
sub
repz
fwait
xchg
rol
jbe
hlt
xor
push
inc
sbb
jge
or
ins
jg
push
or
jb
mov
xchg
inc
stos
add
lock
mov
cmp
scas
fsubr
lea
not
jmp
cmp
jecxz
shl
ret
sub
movs
cmc
call
rol
mov
push
mov
das
adc
pop
mov
call
in
aad
dec
bound
dec
jle
cmp
or
mov
not
iret
imul
ss
test
inc
les
test
pop
sub
neg
sbb
(bad)
fadd
sahf
jle
xchg
adc
lods
cmps
jbe
fmul
stc
lock
sub
sbb
and
pusha
loope
mov
nop
mov
ins
lds
ds
popa
out
sbb
ins
aas
jb
mov
jne
adc
pusha
test
pop
inc
sub
xchg
fs
dec
lds
adc
in
cmpxchg8b
push
ins
mov
in
xchg
and
xor
and
or
cwde
in
cmp
sbb
lods
cmc
test
bound
outs
push
xor
pop
xor
es
adc
cmp
js
pop
dec
jbe
mov
fistp
push
jmp
out
sbb
lock
ret
jp
int3
sub
out
(bad)
cli
js
movs
fwait
mov
es
test
lds
lahf
cmps
inc
out
mov
pop
arpl
ss
push
jnp
pop
test
lods
adc
or
stos
mov
sbb
pop
or
xchg
xchg
xor
ds
lds
add
stos
mov
add
push
push
jae
push
cmc
add
scas
(bad)
fmul
mov
sbb
dec
dec
into
loopne
mov
or
mov
add
pop
sbb
pop
inc
pop
push
scas
push
mov
or
aam
jmp
(bad)
pop
sar
fs
cmp
mov
add
mov
js
pop
and
retf
cld
pop
pop
and
aad
sub
jae
mov
push
ins
mov
add
inc
pop
push
dec
movs
or
cmp
cmps
mov
cmps
pop
in
aaa
and
and
xor
jmp
sub
je
sub
call
push
xchg
inc
mov
dec
ins
ds
aaa
ja
ret
aam
iret
loopne
sbb
pop
add
cld
js
call
mov
xor
mov
push
mov
jmp
aaa
pop
sbb
add
cld
outs
jmp
stc
xchg
shl
pop
adc
int
jae
fcom
stos
jg
test
or
mov
retf
in
fist
sbb
or
and
push
adc
add
nop
jecxz
pushf
mov
and
or
xor
adc
jno
push
jo
pop
dec
sub
in
push
shr
jne
sub
mov
jp
pop
enter
imul
fdivr
mov
mov
sub
shr
sbb
test
aad
sbb
xchg
out
xchg
mov
jl
add
or
pop
sbb
jmp
push
in
mov
sbb
pop
fadd
ror
call
(bad)
retf
dec
sar
sbb
inc
aad
cmp
xor
cmp
cmp
aas
mov
daa
in
xor
scas
and
push
add
pop
(bad)
mov
pop
imul
adc
or
movs
mov
pop
(bad)
loope
outs
clc
fild
xor
mov
sbb
xor
pusha
push
pop
bound
lods
push
fild
mov
fld
ja
jno
rcl
std
pop
adc
rcr
mov
xchg
xchg
int3
or
mov
inc
fisub
icebp
ds
ret
ja
retf
push
enter
sbb
loopne
xchg
fisubr
(bad)
mov
lods
dec
test
(bad)
out
cmp
and
xlat
pop
fadd
repz
xchg
sbb
pushf
jecxz
jge
add
test
lods
push
push
jno
jae
jnp
call
jp
cmp
mov
div
cmp
inc
push
push
mov
sub
add
pop
mov
mov
call
push
(bad)
sbb
stc
call
mov
call
out
movs
mov
pop
in
aam
cmps
pop
call
xchg
cmps
stos
add
xor
or
dec
cmp
inc
(bad)
(bad)
mov
js
mov
mov
rcr
mov
pop
adc
inc
pusha
adc
cmp
pushf
aam
push
(bad)
lock
pop
jmp
aad
jnp
mov
sbb
jo
jnp
movs
dec
jle
jbe
mov
repz
cwde
test
out
imul
mov
jo
or
in
in
(bad)
(bad)
iret
pusha
push
push
mov
out
mov
jae
inc
mov
scas
cdq
mov
adc
xor
cmp
div
(bad)
jns
in
jl
or
nop
pop
(bad)
stos
push
add
(bad)
jp
or
jnp
ss
call
xchg
lock
jbe
sbb
mov
cmp
fnsave
neg
mov
cmp
sbb
or
into
jbe
lds
fnstcw
dec
mov
scas
push
jae
dec
jecxz
or
mov
xchg
jns
aam
(bad)
mov
dec
adc
inc
and
xchg
nop
xchg
mov
scas
fcmovnu
sub
rcl
outs
call
loop
mov
mov
xor
mov
je
mov
scas
mov
idiv
loopne
push
out
jae
and
stos
sbb
dec
and
repz
rcr
popf
sub
sahf
pop
fstp
dec
je
into
cmc
ins
fs
inc
dec
inc
dec
adc
inc
push
call
mov
mov
mov
push
pop
lock
sub
or
fild
push
lds
mov
jg
sbb
sti
or
lahf
pop
bound
push
pop
jae
in
outs
adc
lahf
pop
ja
mov
push
(bad)
out
hlt
clc
pop
or
enter
add
dec
aas
repz
out
mov
call
enter
ret
ins
aam
or
mov
ins
push
sub
jnp
call
jl
test
shl
mov
xchg
xor
(bad)
movs
mov
pop
adc
mov
jno
lds
(bad)
movs
rol
cmc
stos
mov
xor
inc
push
mov
sub
or
jmp
adc
mov
jl
movs
(bad)
mov
add
dec
and
shr
hlt
dec
ret
pop
xchg
js
mov
push
pop
inc
jge
inc
out
xor
pop
and
das
lods
xchg
pop
movs
mov
data16
cwde
imul
pop
fmul
push
jmp
mov
or
cmp
mov
(bad)
mov
shl
(bad)
sbb
in
cmps
sbb
sub
bound
int
add
cmc
mov
sub
sub
loopne
adc
xor
pop
shl
mov
outs
ins
in
fs
inc
test
into
imul
jo
jb
ss
sub
push
stos
mov
lods
xor
lea
cmp
repnz
jns
dec
cmp
jge
jo
stos
gs
jge
leave
pop
fcom
not
sub
cmp
fbld
inc
jo
or
cmc
push
inc
mov
sti
js
or
inc
scas
mov
xor
pop
xchg
jle
movs
jns
inc
add
out
dec
inc
inc
inc
lea
dec
jo
lods
loop
push
sub
rcr
std
adc
sbb
shl
fbstp
je
call
in
pop
dec
addr16
pop
and
int3
push
addr16
jg
mov
call
aam
xchg
popa
mov
lahf
data16
dec
jle
xchg
sub
sbb
movs
call
out
out
in
sub
cmps
inc
(bad)
or
mov
clc
cmp
cs
dec
pop
lock
jecxz
mov
rol
mov
lods
fdivr
add
pop
(bad)
sub
xchg
rcr
jb
mov
dec
or
int
mov
in
retf
in
mov
mov
ret
dec
dec
imul
push
dec
push
cld
pop
sbb
inc
das
into
retf
aaa
loop
idiv
lods
xor
sub
stos
call
outs
fwait
pop
loopne
xchg
push
mov
or
ret
or
shl
jns
jmp
lods
leave
mov
into
xchg
add
jp
and
sbb
jge
rcr
imul
out
jb
mov
rcl
mov
mov
pop
pop
push
out
xchg
fimul
cmp
out
shl
xlat
pop
dec
jnp
test
mov
retf
add
movs
jno
push
inc
out
dec
es
jecxz
push
xchg
(bad)
int
mov
cmps
jp
pop
jmp
ja
outs
in
data16
gs
push
push
test
pop
or
add
push
sbb
les
sbb
mov
push
lods
mov
int3
cwde
scas
adc
push
es
test
pop
pop
or
fdiv
rcl
pop
pop
mov
iret
retf
xchg
mov
cmps
mov
int
movs
movs
xchg
inc
dec
mov
cmp
int3
fisttp
jnp
xchg
pop
arpl
lods
pop
sub
lods
jl
nop
popa
cli
ins
inc
jle
imul
aaa
jae
mov
loopne
cs
(bad)
fnstenv
sar
aaa
sbb
and
pop
repz
leave
inc
in
js
pop
pop
adc
popa
out
cs
sub
arpl
pop
inc
adc
push
xor
jge
test
test
adc
or
in
ret
std
inc
lds
rol
sbb
jb
outs
xchg
sbb
and
mov
jno
fs
shl
cmps
std
in
arpl
push
xchg
out
(bad)
push
popa
xchg
cmp
lock
icebp
ins
xchg
cmp
push
lock
into
mov
test
icebp
or
(bad)
sub
mov
sbb
test
dec
and
stos
xchg
push
aad
jmp
addr16
push
test
cli
or
rcr
movs
iret
cmp
jae
add
jnp
mov
add
xor
mov
xor
sub
and
push
cwde
sbb
xor
retf
or
dec
ficom
aas
out
outs
lock
fwait
add
jbe
jo
push
jne
rol
dec
test
loopne
sub
mov
in
icebp
xchg
adc
nop
push
ret
call
push
sbb
sbb
fcmovbe
repz
movs
sti
(bad)
push
inc
aaa
call
cmp
jmp
add
cmps
test
loope
and
and
div
sbb
in
xor
and
ret
xchg
xchg
scas
mov
jne
sbb
mov
loopne
cdq
adc
pop
mov
fnstcw
ja
or
aad
inc
xchg
dec
cmc
mov
sub
ds
sbb
and
lea
fiadd
movs
jg
scas
das
sbb
sbb
sub
ror
adc
push
mov
jge
pop
rdpmc
je
or
fucom
or
mov
mov
addr16
in
in
div
xor
add
stos
or
xchg
retf
xor
rol
sbb
test
mov
pop
jecxz
retf
loope
push
xor
xor
jns
inc
push
rol
push
fs
lock
mov
cmc
fist
aad
dec
mov
adc
sub
dec
stc
lock
les
test
mov
mov
dec
outs
xor
or
pop
out
adc
sbb
jmp
dec
gs
js
sti
mov
jmp
push
popf
pop
adc
sub
retf
pop
pop
and
out
mov
cmovae
adc
ret
int3
mov
inc
mov
aaa
lahf
cli
lea
jle
mov
sub
repz
xchg
push
in
dec
push
inc
xor
imul
int
xchg
dec
ins
sti
push
rol
sar
test
sbb
mov
cmp
div
mov
retf
nop
mov
ins
test
arpl
scas
xchg
std
mov
cli
pusha
or
imul
das
lods
test
cmp
jnp
fs
cmp
(bad)
ficomp
sahf
xchg
loope
adc
hlt
ja
add
mov
or
outs
push
mov
inc
aas
mov
clc
xchg
and
dec
int3
pusha
cmp
jmp
inc
int
clc
loopne
mov
inc
ret
or
or
(bad)
cmp
pop
ins
mov
jo
shl
and
adc
(bad)
or
jmp
not
data16
pop
add
xlat
add
push
jp
retf
cmps
sbb
mov
cmps
lds
mov
test
inc
adc
xor
mov
int3
xchg
dec
iret
retf
in
dec
or
inc
add
lea
mov
sub
xor
leave
and
mov
rcl
mov
pushf
inc
ins
dec
jmp
pop
xchg
in
add
and
xor
icebp
cmps
call
adc
inc
jns
movs
add
loope
and
fimul
xor
scas
lock
and
cld
cmc
dec
and
mov
inc
arpl
les
ret
jb
jg
push
fisttp
(bad)
fsubr
ins
test
mov
call
and
jg
mov
ja
clc
xchg
mov
adc
call
jb
add
or
ss
dec
in
repz
inc
clc
stos
push
xor
xchg
xchg
cmps
hlt
sub
xor
ror
mov
pop
xor
out
call
mov
idiv
adc
mov
pop
lea
pop
mov
dec
cmp
mov
cmps
fild
dec
jmp
pop
sub
pop
xor
outs
js
push
loop
lods
inc
daa
repnz
outs
in
mov
les
call
fwait
ret
add
lods
dec
lea
and
or
sbb
scas
jmp
jle
aad
sti
mov
pop
lahf
inc
das
add
in
or
test
pop
pop
pop
in
sbb
shl
push
iret
jecxz
adc
mov
scas
dec
sti
pop
jecxz
cmp
retf
js
icebp
loope
jbe
sub
dec
mov
(bad)
not
retf
sub
stos
push
ja
rcr
jo
jo
(bad)
add
test
pop
icebp
pop
in
mov
dec
and
xchg
or
mov
daa
mov
push
or
jmp
xchg
mul
add
call
sub
xchg
push
aam
idiv
rcr
mov
(bad)
mov
out
int
adc
mov
inc
loope
retf
dec
test
jl
rcl
stos
adc
push
ss
sub
jecxz
(bad)
inc
push
mov
loop
fld
cmp
sub
mov
(bad)
aaa
shl
test
push
xchg
fwait
inc
mov
or
lock
mov
inc
or
cs
sub
lahf
outs
mov
out
jne
(bad)
xor
es
adc
stos
sub
xor
dec
out
or
pop
pmulhw
inc
hlt
cld
ror
xor
ror
dec
jg
repnz
mov
lods
or
je
cmps
aam
pop
fnstsw
sbb
rol
loope
dec
dec
and
and
stos
std
scas
push
test
jg
pusha
nop
daa
mov
dec
mov
xor
addr16
mov
out
cwde
out
cmp
mov
cmps
test
jae
das
cmp
pop
jmp
imul
test
xchg
cmps
add
mov
adc
inc
and
cmp
hlt
mov
lds
inc
add
adc
xchg
push
or
js
bound
fild
lahf
sub
jns
jnp
jmp
int
sbb
fisttp
imul
dec
int3
push
pop
ss
mov
daa
pop
xor
je
daa
out
dec
push
jmp
(bad)
aam
ret
mov
in
xchg
fwait
xor
fstp
inc
push
jno
icebp
and
mov
mov
loopne
mov
jecxz
nop
adc
dec
xor
cmp
cwde
or
mov
pop
in
aaa
and
retf
sahf
or
xor
in
arpl
in
pusha
nop
mov
shl
gs
add
push
jno
or
or
pop
push
repz
xchg
pop
pop
dec
scas
xchg
push
cmp
div
jns
test
jne
cmp
mov
ins
jl
retf
mov
mov
loop
mov
and
or
ret
pusha
ret
mov
idiv
push
and
test
push
mov
popa
sub
mov
call
aad
push
mov
(bad)
idiv
xor
push
mov
clc
fxch
je
push
and
pop
imul
fistp
mov
or
pop
cmc
or
sub
out
mov
adc
adc
mov
les
fxch
int3
push
push
movs
das
jo
retf
loope
sbb
push
loop
jo
test
movs
push
mov
dec
cmps
mov
jbe
and
inc
test
je
repz
icebp
lahf
adc
clc
mov
push
repnz
mov
sub
jns
dec
int
ret
push
xor
mov
push
ud1
shl
mov
hlt
xchg
ret
mov
and
repz
in
ffree
sub
movs
push
sar
mov
jp
and
mov
xor
mov
scas
lods
ret
dec
ror
repz
dec
xchg
and
xor
fimul
cwde
stos
inc
inc
xor
popa
pop
and
fist
push
imul
fidivr
pusha
pop
jecxz
inc
fwait
jg
loop
sub
ja
mov
das
xor
not
in
xor
in
jle
dec
inc
mov
and
pop
jmp
rcr
shl
(bad)
add
aad
dec
push
arpl
fsubrp
xchg
pop
in
or
jb
jbe
loope
mov
aam
fistp
adc
(bad)
test
xchg
mov
sub
push
sti
sbb
jnp
xor
cmp
dec
sub
xchg
inc
out
jno
sub
mov
jne
loope
sub
lods
push
int3
lods
repz
ds
enter
pop
mov
cmp
call
mov
jmp
fwait
in
fnsave
fistp
popf
aas
add
aaa
fbld
pop
(bad)
retf
sbb
add
ror
push
mov
pushf
xor
jle
and
lock
out
xchg
in
sbb
loop
add
xor
rol
cmp
cmp
xor
scas
(bad)
sahf
xor
sahf
mov
add
mul
adc
popa
xor
mov
sbb
add
push
aad
sub
(bad)
add
adc
push
test
in
jbe
xchg
xchg
clc
ret
pop
mov
push
outs
push
int3
add
repnz
fs
rol
mov
fsubrp
mov
cmp
je
jge
or
aas
aam
fwait
sub
pop
pop
sbb
int3
fsubr
pop
inc
clc
repz
sbb
in
mov
iret
call
lahf
xchg
sub
push
clc
ins
xchg
(bad)
sbb
cmp
adc
hlt
lds
fdiv
mov
xchg
retf
ret
test
out
(bad)
lock
adc
into
xchg
cmp
mov
cmp
popf
retf
gs
jle
ss
scas
mov
jl
mov
jne
cli
pop
rcpps
fs
sub
retf
arpl
or
add
in
jmp
jmp
dec
pop
sub
cmp
add
dec
test
cdq
bound
mov
or
lahf
xchg
mov
xchg
inc
ret
mov
sahf
repz
loopne
mov
leave
lds
jmp
lods
or
push
call
mov
js
xor
sbb
(bad)
retf
cmp
repz
div
jnp
call
call
fsub
test
xchg
mov
sbb
add
adc
pop
inc
std
adc
xchg
call
pop
sbb
cmps
mov
sub
or
xlat
fidiv
inc
pop
out
pop
dec
jb
data16
add
inc
xor
jnp
mov
pop
adc
dec
jno
int3
enter
stos
idiv
xchg
cmp
aaa
mov
cs
mov
fisub
bound
in
mov
cmc
inc
js
and
std
sub
loope
ret
(bad)
scas
or
pop
sub
xor
adc
push
add
popa
jae
cmp
and
in
xlat
je
mov
add
pop
xor
ds
jo
mov
jnp
xor
cld
jmp
jae
std
out
mov
xor
dec
sahf
add
or
clc
xor
test
and
add
xchg
adc
xchg
inc
adc
cmc
fadd
dec
lea
mov
cmp
inc
add
mov
inc
push
sub
repnz
popa
rol
fistp
fwait
inc
data16
sahf
jbe
loop
add
or
clc
xchg
in
mov
out
iret
inc
movs
adc
push
fwait
sub
sub
adc
inc
push
clc
fsubr
out
(bad)
sbb
sbb
mov
and
sbb
push
test
bound
and
sbb
fcmovnb
inc
mov
or
loope
inc
mov
sbb
or
loop
test
or
jne
mov
cs
or
iret
(bad)
movs
je
adc
ss
and
inc
mov
mul
mov
and
retf
adc
jnp
xor
cmp
data16
xor
mov
test
dec
rcl
and
and
xor
les
mov
lahf
add
push
push
cld
pop
stos
and
mov
retf
and
(bad)
sti
xchg
ins
(bad)
adc
xchg
cmp
inc
call
cmps
iret
dec
fcomp
add
mov
mov
stc
xchg
adc
sub
add
jno
xlat
jae
sub
mov
cwde
jmp
and
fwait
xor
rcl
repnz
adc
sub
fidivr
stos
aas
outs
mov
xchg
pop
add
lods
cmp
ficom
push
cli
mov
xor
pop
enter
dec
mov
dec
(bad)
(bad)
pushf
out
lea
inc
push
movs
adc
cwde
fild
int
popa
test
jae
adc
mov
adc
lods
sub
gs
add
loop
mov
nop
push
inc
cmp
(bad)
(bad)
call
and
call
and
cmps
mov
jl
es
cvtps2pi
add
int
dec
ret
mov
cmp
xchg
(bad)
push
xchg
stos
sbb
mov
pop
stos
popfw
fadd
push
mov
push
xchg
cli
dec
mov
add
or
mov
jae
es
or
jbe
pop
jecxz
cwde
mov
add
inc
pop
in
and
fwait
add
pop
cmp
sbb
pop
ror
neg
neg
push
xchg
mov
mov
mov
lods
fcomp
retf
popf
imul
sub
cmp
cwde
mov
sbb
and
in
clc
or
or
or
popf
in
popf
xchg
push
sbb
add
sbb
rcr
ror
dec
mov
into
mov
mov
jmp
(bad)
in
pop
test
push
icebp
movs
clc
gs
dec
loop
sbb
data16
(bad)
jnp
jnp
aam
and
jnp
dec
adc
xchg
pop
nop
mov
mov
aad
cmc
push
pop
aad
sbb
push
pop
xchg
sub
mov
push
pop
and
ja
retf
call
mov
or
sbb
sub
sbb
sub
std
xlat
pop
rcr
mov
fisttp
jmp
mov
sahf
nop
cmp
jnp
out
cmps
aad
scas
aad
ss
sbb
xchg
add
cmp
fstp
sub
js
pop
loopne
popa
jnp
xor
mov
push
fcomi
cwde
push
addr16
(bad)
fild
adc
mov
pushf
xor
jns
mov
add
rcl
jg
(bad)
jb
aad
aad
push
mov
add
mov
loop
or
dec
repz
dec
mov
push
or
fsub
fwait
mov
mov
add
(bad)
adc
cmp
ficomp
scas
outs
rol
jmp
gs
(bad)
pop
test
xchg
pop
loop
out
mov
retf
test
push
lds
jmp
xchg
retf
and
fwait
xchg
outs
mov
sub
call
inc
fcom
mov
ror
and
dec
and
div
push
cmp
xchg
out
(bad)
call
fwait
push
push
jbe
mov
pop
rcl
(bad)
int
pop
push
jg
add
mov
push
cmp
add
pop
fwait
dec
xchg
mov
inc
inc
xlat
dec
cmps
pop
sbb
shr
test
sbb
adc
and
mov
and
out
fucomip
int
int3
pop
aad
mov
out
rcl
mov
dec
xlat
ds
add
pop
jns
cmp
xchg
push
scas
pop
or
ret
or
inc
ret
ret
or
jp
push
mov
pop
inc
in
int
cmp
sbb
cmps
retf
rcl
inc
adc
fisttp
jecxz
mov
jl
int
push
sti
pop
adc
or
add
ins
jp
xchg
sbb
pop
gs
dec
inc
push
sub
stc
push
or
test
data16
mov
pop
xchg
mul
movs
add
adc
mov
sub
jbe
add
mov
pop
xor
and
adc
movs
cmps
jnp
mov
and
adc
in
(bad)
push
rol
sub
pop
js
cmove
outs
mov
xor
mov
sbb
sbb
cmc
jns
enter
int
ret
push
lahf
cli
loope
sub
in
(bad)
shr
inc
adc
aad
push
ja
dec
dec
xchg
les
ins
rcl
in
cli
xchg
or
adc
pop
mov
jns
test
cmp
sbb
pop
loope
scas
nop
out
xchg
and
xchg
push
pop
(bad)
mov
in
push
call
dec
les
pop
lock
fild
push
xchg
xchg
mov
push
iret
lods
pop
fild
dec
daa
js
xchg
fs
push
xlat
imul
popa
outs
adc
push
rcr
ret
into
mov
aas
inc
stos
cs
jb
push
jl
mov
adc
pop
adc
fwait
sub
add
cdq
jo
mov
mov
fisubr
add
sub
in
pop
pop
(bad)
mov
jg
jecxz
mov
inc
push
cmp
std
out
cdq
sbb
mov
add
loope
int3
dec
cmp
push
fistp
dec
mov
pop
jecxz
jb
jmp
sub
xor
mov
cvtps2pd
inc
cdq
dec
cli
push
xor
add
in
in
push
test
shr
ins
and
cmp
in
daa
sbb
xor
mov
leave
cdq
sbb
push
leave
push
pop
and
sub
fiadd
pop
sub
jnp
xlat
add
dec
pop
call
pop
dec
xor
adc
pop
pop
xor
mov
or
hlt
into
push
cdq
pop
adc
shl
adc
scas
pop
pop
xchg
inc
arpl
ror
sbb
in
mov
or
xchg
jmp
fimul
aam
out
dec
push
cmps
(bad)
mov
outs
xor
push
bound
(bad)
clc
mov
push
add
fwait
pop
pop
mov
cmps
cmp
push
int
add
sbb
mov
jae
shl
pop
dec
sub
inc
mov
push
call
out
mov
les
dec
push
movs
mov
imul
aas
dec
fcomp
mov
ret
fsub
mov
push
sbb
fst
pop
jns
ret
adc
or
fwait
sar
stc
xchg
out
stos
in
mov
add
add
jns
or
cs
mov
mov
xchg
jmp
push
(bad)
ficomp
movs
sbb
or
int3
aaa
mov
pusha
and
cmp
das
leave
mov
inc
sub
jne
lods
(bad)
loopne
fdiv
push
inc
(bad)
mov
jae
mov
cld
cmps
cmp
ret
test
aas
mov
repz
sbb
es
jae
ret
jb
gs
jb
rcl
ret
call
lahf
mov
sbb
daa
push
xor
and
pop
mov
cmp
and
vaddsd
(bad)
retw
jne
inc
mov
jg
in
mov
push
push
sub
inc
gs
sbb
(bad)
call
jmp
lods
fisttp
jmp
inc
jmp
dec
lods
mov
inc
xchg
sti
jle
push
xchg
mov
ret
int3
imul
jb
push
xchg
repnz
jo
rcl
cdq
fst
popa
rol
test
pop
pop
mov
mov
lea
cld
fnsave
rol
fbstp
mov
mov
sub
xor
sbb
pop
imul
cmps
and
push
cmp
das
inc
lea
sub
inc
xor
and
add
fild
or
add
xchg
cmps
mov
cld
sbb
mov
sbb
imul
not
or
or
or
outs
or
mov
imul
or
lock
pop
pop
loope
mov
js
adc
sub
or
mov
not
and
cmps
fild
clc
test
dec
mov
mov
scas
fs
repz
xchg
mov
mov
xchg
pop
int3
or
and
jecxz
lods
js
push
es
adc
in
xor
push
(bad)
stos
fwait
pushaw
stos
push
call
mov
inc
xchg
imul
loopne
or
fsub
xlat
in
pop
into
outs
out
popf
ins
ret
jb
loopne
xlat
es
push
int
pop
xchg
sub
and
cld
pushf
sbb
sti
or
mov
and
cs
sub
mov
stos
(bad)
js
scas
cld
or
loopne
cmp
fcmovnbe
popf
mov
or
or
fs
jmp
jecxz
js
fdivr
call
shr
mov
push
inc
dec
shl
ror
imul
test
stos
fsubr
xchg
fidivr
push
sbb
cwde
xchg
inc
ja
loope
adc
test
div
mov
fld
cmp
cmp
not
mov
push
cmp
pusha
push
test
movs
pop
mov
js
sbb
jne
retf
ds
inc
cmp
sub
enter
aas
xor
movs
lea
call
arpl
adc
xor
inc
pusha
rol
and
jns
cs
neg
(bad)
shr
ret
rcr
sub
xchg
int3
push
jle
fldcw
cmp
push
add
mov
fst
cmp
sub
xor
cmp
rcr
mov
sbb
fwait
mov
jbe
mov
jmp
mov
mov
mov
add
adc
imul
mov
test
cwde
xchg
popa
dec
cdq
mov
call
jae
cdq
call
and
inc
shr
mov
out
out
cmp
je
(bad)
std
lahf
and
ins
mov
das
sti
movs
in
js
dec
push
and
pop
jb
adc
cmp
clc
cmps
xor
jo
mov
sub
jae
add
(bad)
adc
push
xchg
jo
pop
out
push
sub
das
push
lock
add
xchg
ja
addr16
xchg
sub
xchg
dec
sbb
xchg
call
data16
mov
popf
jne
daa
fisttp
adc
into
mov
dec
das
cmc
(bad)
aam
add
pop
mov
out
int
out
popa
stos
lea
xor
imul
mov
lds
adc
add
xabort
sub
(bad)
fisttp
xchg
ss
mov
push
cld
out
mov
xchg
dec
inc
les
sbb
movs
js
xchg
adc
es
jno
out
das
daa
xor
pop
mov
daa
jmp
test
push
lahf
xor
(bad)
ins
aas
ds
fs
sub
in
cmp
xor
sub
jge
or
ja
jb
pushf
icebp
mov
jbe
ins
xor
pushf
dec
ss
sti
cmp
sub
mov
mov
js
jmp
mov
outs
inc
cdq
jge
(bad)
imul
data16
add
push
add
mov
popa
(bad)
mov
imul
aaa
out
repnz
scas
stc
in
dec
fist
mov
pop
movs
repnz
xor
mov
into
mov
clc
mov
in
sub
sahf
in
mov
rol
pop
pop
add
out
je
(bad)
cli
popf
repnz
push
push
sbb
rol
push
sbb
sti
inc
and
fldenv
add
lahf
lods
jno
dec
out
xchg
daa
cmp
enter
add
sub
xchg
push
jmp
add
or
pop
mov
add
lods
daa
dec
ret
inc
pop
xor
repnz
mov
test
xchg
mov
(bad)
mov
popf
lods
pop
sbb
or
cmps
pop
ret
repnz
pop
out
leave
jecxz
inc
sub
sub
xchg
dec
in
push
jo
fcmovu
jecxz
enter
lods
xchg
adc
sub
push
stos
lods
clc
imul
dec
mov
pop
addr16
sbb
sub
xorps
rcr
mov
or
mov
sbb
cmp
and
shr
stos
adc
cdq
maxps
push
fdiv
mov
xor
or
test
out
push
dec
mov
rcr
mov
dec
std
icebp
push
(bad)
je
or
repz
jecxz
fdivr
lahf
ins
cmps
inc
adc
jmp
adc
mov
add
ins
push
fnstsw
xor
add
rcl
stc
mov
fwait
imul
in
(bad)
daa
pop
push
aad
and
inc
sub
mov
cmp
jmp
loopne
into
sbb
lods
movs
rol
iret
lea
dec
dec
ficom
adc
test
out
sbb
rcl
(bad)
out
sub
into
inc
outs
xchg
mov
mov
pushf
mov
jl
out
xchg
inc
or
into
cmp
dec
jns
push
xor
xor
xchg
push
inc
out
jne
rcl
test
sbb
or
jmp
xor
lock
or
(bad)
mov
in
pushf
fild
adc
cs
shr
stos
shl
xor
xor
pop
xlat
pmullw
(bad)
jno
cwde
mov
ficomp
jns
or
pop
cmp
or
test
mov
nop
xor
jp
and
pop
out
push
shr
jne
idiv
push
in
ins
pop
popa
xchg
lods
mov
ins
repnz
sbb
mov
cmp
inc
mov
scas
mov
mov
loop
popf
rcr
movs
psubd
inc
mov
call
jns
cli
mov
loope
xchg
cmps
pop
push
outs
mov
push
icebp
pop
mov
popf
int3
add
fnstenv
clc
dec
in
and
add
dec
xor
or
nop
ja
movs
cmps
xchg
xor
lods
mov
jge
xchg
mov
in
xor
dec
xor
push
cmc
mov
lahf
xchg
mov
pop
movnti
fs
clc
sub
mov
rcl
(bad)
jmp
cmp
cmp
jbe
js
xchg
jg
ss
jo
push
in
mov
push
mov
jle
push
pop
add
pop
imul
sbb
popa
loopne
call
sub
setge
(bad)
xchg
ror
pushf
movs
into
int
mov
push
inc
out
pushf
cmps
pushf
retf
call
icebp
xor
add
xor
out
jp
xor
test
sub
xchg
(bad)
push
add
xchg
pop
test
call
movs
mov
stc
sub
arpl
push
dec
test
data16
mov
dec
test
test
pop
mov
sbb
cmovl
rcr
aam
sahf
mov
pushf
retf
(bad)
sahf
popf
in
ret
std
rcr
pop
jne
mov
mov
mov
adc
sti
pop
sub
je
sbb
or
ins
cmp
push
popa
imul
mov
inc
cmp
mov
call
xor
dec
mov
cli
mov
in
dec
cdq
jg
inc
and
xlat
movs
mov
aad
xchg
nop
repnz
sub
pop
lahf
jmp
adc
int
push
push
enter
int3
push
ss
sub
jmp
sbb
repz
repnz
push
add
mul
nop
fdivr
pop
cmp
lea
in
stc
nop
mov
mov
push
movs
mov
test
test
ja
jne
adc
jmp
dec
sahf
xchg
sbb
and
mov
outs
ror
les
mov
call
xchg
xchg
fstp
inc
les
inc
sub
mov
adc
pop
enter
repz
sbb
add
mov
cs
xchg
jmp
push
fnstcw
stos
push
je
mov
pop
sub
jp
enter
add
sbb
adc
mov
pop
dec
cmp
jnp
fldcw
xchg
and
mov
push
in
or
xchg
adc
popf
test
cmps
or
dec
sub
or
clc
and
xor
das
stc
jns
call
jae
xor
cwde
add
xchg
mov
and
imul
scas
adc
scas
imul
pusha
leave
jo
xor
dec
ins
stc
mov
cli
test
cmps
ins
jecxz
(bad)
xchg
sub
mov
aam
mov
mov
mov
add
mov
mov
fild
inc
adc
cmps
sar
test
jns
(bad)
sbb
int
(bad)
pop
mov
cld
jbe
push
mov
sub
push
mov
jne
mov
jno
and
in
mov
or
and
sub
call
loop
pushf
push
in
stos
shl
and
div
add
pop
ret
sub
pop
sti
and
sbb
jb
inc
add
fwait
and
mov
adc
sbb
(bad)
(bad)
mov
ins
stos
popa
xor
push
nop
mov
xchg
dec
inc
shr
mov
in
test
stc
movs
xchg
ins
in
sub
mov
or
pop
pop
adc
adc
mov
jno
out
xchg
adc
mov
call
imul
xor
xchg
dec
jle
(bad)
pop
xchg
pop
pushf
mov
and
or
cwde
inc
pop
sub
(bad)
daa
xchg
inc
add
adc
fwait
push
cmc
dec
adc
dec
lock
enter
xchg
es
inc
nop
xor
and
jns
lea
xor
je
nop
pop
imul
das
loopne
mov
dec
test
xchg
sti
sub
inc
xchg
push
add
popf
dec
jno
daa
rcl
daa
nop
lods
rcr
ret
push
jnp
call
mov
and
jge
pop
push
repz
adc
sar
dec
cdq
mov
xchg
push
jp
jle
mov
gs
mov
(bad)
out
mov
dec
xchg
cli
inc
iret
enter
push
call
cmp
cmps
in
out
(bad)
jmp
loop
xor
mov
leave
mov
jle
call
scas
dec
andnps
into
or
mov
dec
aas
or
ror
jg
xchg
imul
movs
(bad)
and
rcl
bound
out
std
jb
out
mov
jns
cmps
pop
sbb
loope
shr
xor
(bad)
loope
pop
ret
mov
movs
mov
gs
lahf
in
mov
cdq
push
jnp
daa
adc
(bad)
mov
push
sub
in
imul
rcl
cmp
adc
xor
es
pop
or
out
xchg
mov
add
inc
mov
or
jmp
jecxz
add
jp
das
inc
clc
and
test
xor
out
or
nop
sbb
add
ins
rcl
sbb
retf
jmp
mov
cld
mov
xchg
cmps
push
movs
sar
int3
dec
mov
stos
aad
add
cmp
mov
xor
mov
push
call
mov
jne
mov
pop
add
in
push
loope
mov
fwait
cmp
mov
mov
shl
(bad)
mov
dec
test
es
adc
dec
imul
retf
test
xor
shr
pop
xchg
je
xor
xchg
pop
mov
int
loop
out
arpl
pusha
push
outs
fdiv
in
repz
mov
shl
rcr
sbb
pause
adc
stos
mov
fdiv
and
cdq
test
outs
xchg
inc
out
ror
aaa
dec
cmp
pop
mov
dec
dec
or
cdq
scas
mov
xor
repz
cmps
xchg
xchg
movs
stos
fmulp
adc
cmp
add
cmps
add
stc
aam
pop
jle
adc
loop
in
daa
jne
sub
aas
mov
outs
(bad)
icebp
push
jae
xchg
jp
push
mov
das
(bad)
out
call
fiadd
cwde
inc
call
ret
retf
int3
das
loopne
pop
mov
fnstcw
and
stc
jl
ret
mov
imul
push
mov
imul
cmps
or
retf
mov
in
inc
int
cmps
jno
je
sub
rcr
bound
jmp
lods
or
retf
loopne
xchg
hlt
test
jle
adc
sub
out
jmp
(bad)
out
fld
call
and
xlat
xor
fwait
ret
es
bound
dec
inc
cwde
cmp
neg
xor
sbb
xor
out
retf
jne
xchg
mov
xchg
cmp
mov
mov
mov
retf
xor
push
jb
jbe
rol
and
enter
dec
les
loope
imul
repz
xchg
and
xlat
or
xchg
out
out
imul
movs
xor
or
add
icebp
frstor
pop
and
mov
inc
clc
(bad)
out
add
mov
es
xchg
pop
dec
xor
stc
daa
pop
popa
mov
and
xchg
jmp
pop
fsub
mov
xor
mov
int
mov
push
jp
mov
mov
leave
fxch
(bad)
out
shl
jmp
and
and
repnz
jmp
xchg
and
int3
js
lods
mov
movs
scas
adc
cmc
test
ins
or
or
xor
adc
xchg
xor
rcr
adc
jno
jg
jmp
neg
xor
repnz
mov
cmp
iret
(bad)
movs
pop
cmp
ins
jno
mov
test
push
fnsave
fld
fcom
sahf
mov
add
pop
add
jnp
jg
in
sbb
mov
inc
int
jmp
and
xor
sbb
cli
test
sbb
lods
rol
popa
xor
inc
mov
inc
jbe
cmp
(bad)
mul
adc
xor
rcl
mov
cmps
out
xlat
imul
movs
jmp
jmp
cmps
jne
xchg
push
test
add
add
push
out
ds
shl
add
arpl
je
and
cli
test
mov
arpl
push
mov
mov
mov
sub
call
jb
push
popf
loopne
in
cmp
mov
or
pushf
or
add
cmp
test
inc
ror
jp
gs
adc
ins
sti
sbb
add
shr
jp
pop
or
test
pop
xchg
leave
popa
xchg
adc
dec
pop
enter
mov
movs
or
lock
scas
les
sub
outs
retf
mov
stc
sbb
lods
stos
adc
xchg
movs
ror
and
outs
retf
sub
dec
mov
fwait
inc
inc
jb
push
ret
xlat
dec
push
icebp
xchg
movs
retf
or
push
cmp
out
fild
cmp
mov
stos
jmp
sbb
xchg
xchg
int3
pop
test
dec
in
fldenv
push
and
aaa
inc
inc
pop
int3
outs
xchg
pop
cld
je
nop
(bad)
lock
lods
hlt
or
jle
push
(bad)
inc
xchg
mov
or
test
jmp
adc
aas
mov
mov
into
jb
mov
dec
test
jbe
out
test
mov
loopne
or
jmp
cld
dec
xlat
xor
push
arpl
imul
pop
ret
jae
mov
xlat
xlat
ss
xchg
mov
sub
leave
into
push
lahf
xchg
aaa
in
mov
xchg
add
mov
push
je
loop
add
mul
outs
push
lahf
fucomp
(bad)
xor
fcomp
pop
adc
out
sbb
xchg
and
std
fcomp
mov
enter
jb
aam
mov
repnz
ret
inc
xchg
imul
fdiv
dec
mov
mov
es
adc
test
pop
iret
lods
call
mov
call
cmc
clc
pop
(bad)
mov
pusha
call
sti
mov
sub
xchg
retf
sbb
sub
das
xchg
in
xchg
clc
sub
aam
lahf
and
test
scas
(bad)
sub
lea
mov
mov
sahf
push
sbb
and
lea
(bad)
push
push
sbb
xchg
cmp
or
and
ins
fidiv
shl
inc
aas
nop
push
jmp
dec
mov
int
push
pop
das
cld
mov
mov
add
jp
ja
and
pop
mov
cmc
fwait
es
adc
add
or
movs
add
fisubr
or
dec
adc
fwait
xor
adc
loope
test
xchg
mov
popf
jo
cmc
push
daa
mov
das
xchg
iret
xchg
jmp
pop
iret
mov
or
mov
lods
stc
pop
jno
mov
stc
jns
add
pop
inc
push
fadd
or
shl
push
stc
xor
rcl
mov
hlt
lahf
shr
xchg
es
mov
push
sub
jecxz
mov
jmp
lods
push
jecxz
enter
popf
adc
leave
jl
adc
popf
call
ins
mov
hlt
arpl
mov
pop
jb
push
mov
test
xchg
pop
movs
mov
cmc
rol
dec
lea
pop
pop
jmp
mov
adc
test
or
aam
xor
inc
outs
idiv
icebp
(bad)
shl
mov
pop
in
shl
les
jmp
dec
cdq
inc
mov
in
xor
ins
scas
(bad)
sbb
inc
sbb
mov
mov
add
(bad)
sbb
xchg
(bad)
out
pop
xchg
pushf
dec
loop
cmp
xchg
nop
mov
cdq
add
dec
loop
mov
sar
sub
jmp
hlt
add
test
ja
fsubr
out
mov
aas
mov
mov
aam
pop
stos
mov
mul
lods
not
xchg
test
push
lods
add
jnp
mov
pop
jnp
lds
mov
out
mov
pop
cld
cmp
js
adc
adc
pop
lock
or
mov
dec
dec
clc
enter
out
cmp
daa
repnz
cmc
jo
jne
adc
inc
sbb
daa
out
je
xchg
sahf
adc
mov
cmp
cmp
movs
stos
clc
int3
sbb
and
sub
cs
xor
cli
in
scas
leave
retf
ret
out
int
and
jle
xor
shr
xor
sahf
push
out
sbb
cmp
sub
dec
frstor
ret
xlat
mov
or
inc
push
xor
pop
nop
add
or
jmp
outs
adc
adc
mov
and
fucom
adc
pusha
nop
cmp
push
mov
jl
jae
xor
cdq
adc
pop
movs
cdq
xor
ins
fimul
jo
enter
aas
pushf
adc
mov
mov
mov
sub
loop
scas
xchg
aam
fdiv
push
(bad)
retf
fsub
ds
mov
or
or
arpl
cmps
pusha
cdq
sub
pop
mov
adc
fstp
out
retf
pop
gs
lock
in
std
dec
xchg
jge
repnz
push
sbb
xor
adc
sub
push
inc
cmpxchg8b
mov
and
jp
sub
retf
lock
enter
sahf
xchg
xor
leave
dec
or
es
mov
adc
xchg
imul
sbb
cmp
loop
(bad)
cdq
xor
push
inc
(bad)
push
jg
popa
ss
mov
add
adc
rcr
scas
push
mov
call
inc
sbb
inc
mov
push
push
sub
xchg
adc
inc
loop
mov
test
push
repnz
int3
(bad)
mov
or
mov
cmp
mov
adc
cdq
arpl
scas
jae
lods
outs
das
inc
in
push
idiv
je
inc
jl
cmp
mov
out
mov
ja
pop
(bad)
mov
loope
push
in
mov
push
ins
ins
mov
retf
int
cmp
iret
into
dec
or
popf
jle
sbb
sub
sub
mov
pushf
cmp
add
jns
cmp
pop
out
jmp
xchg
pop
mov
adc
xchg
xor
pop
jb
mov
mov
mov
xchg
pusha
bound
in
mov
mov
cmp
movs
mov
aaa
xor
sub
add
pusha
mov
mov
cli
push
and
lods
aam
mov
dec
stos
push
js
cmp
icebp
xor
sub
scas
inc
mov
jl
jmp
mov
rol
nop
fimul
pop
call
lods
and
sub
(bad)
cwde
int3
rdmsr
dec
push
or
(bad)
mov
xor
ss
push
js
js
out
stos
add
ds
mov
cld
cmp
cmc
pushf
fistp
xlat
mov
movs
aam
push
fmul
dec
scas
fdiv
movs
(bad)
ins
aam
repnz
add
ror
test
shrd
mov
xor
les
jmp
xchg
mov
aad
leave
aam
push
adc
push
push
(bad)
cmps
cmp
cmp
xchg
mov
ret
mov
dec
scas
popa
sti
lods
ja
inc
add
adc
mov
mov
cmp
(bad)
daa
mov
rcr
adc
push
in
xchg
xchg
in
or
test
mov
inc
test
(bad)
cmp
dec
xchg
mov
fmul
mov
in
and
fdiv
ins
sti
push
lds
das
aad
retf
imul
xor
cmp
sahf
cmps
scas
or
retf
push
xchg
xchg
test
xor
inc
and
jo
mov
mov
mov
jle
or
das
mov
jns
call
mov
dec
scas
ret
sub
dec
(bad)
call
sbb
jno
add
fiadd
or
inc
ja
test
sub
movs
mov
movsx
mov
sub
adc
je
add
mov
mov
lods
and
add
daa
inc
push
and
fwait
out
clc
repz
mov
add
sub
ins
xchg
jbe
rcl
push
or
pop
inc
retf
mov
je
cmps
fadd
mov
mov
and
xor
cli
xchg
mov
push
mov
int3
in
lds
fild
out
mov
enter
inc
out
sub
mov
rol
inc
mov
cmc
gs
xchg
aam
ror
inc
pusha
cwde
lods
cli
inc
add
out
iret
shl
push
push
jno
call
call
scas
inc
sbb
not
sub
adc
fist
or
das
ss
ss
dec
mov
(bad)
fmul
into
pop
mov
jle
xchg
xchg
sub
js
sub
or
shr
and
ja
mov
bound
ins
sbb
jno
fisttp
pop
mov
mov
test
enter
hlt
aas
add
xchg
xor
or
js
and
popa
push
cld
not
add
pop
sar
in
stos
add
inc
xchg
fwait
mov
or
mov
xchg
je
and
out
fist
dec
push
ret
xor
xchg
push
adc
clc
jne
and
sbb
push
mov
mov
addr16
imul
sbb
arpl
jnp
cmps
mov
jecxz
ret
test
adc
jns
nop
fld
stos
xor
loopne
out
ret
das
(bad)
jb
jmp
mov
test
pop
xor
js
daa
ss
mov
outs
mov
inc
xor
ret
in
mov
or
into
hlt
test
neg
sub
add
out
into
cmp
xchg
stos
cmp
mov
nop
cwde
dec
in
add
jg
shl
pop
push
jae
push
adc
retf
mov
mul
jp
dec
push
or
(bad)
sbb
les
adc
out
test
bnd
ret
cwde
lods
push
push
xor
and
cli
(bad)
lahf
xchg
xchg
imul
fstp
cmp
add
cmp
push
into
or
jo
js
inc
xchg
cmp
outs
xor
adc
imul
in
nop
aam
lods
mov
sub
pop
addr16
not
lds
je
jp
scas
sbb
js
sbb
into
xor
scas
xchg
push
pop
pop
jmp
retf
mov
add
sti
cmp
inc
imul
outs
or
mov
mov
xor
(bad)
mov
cli
repz
cwde
adc
rol
add
cvtps2pd
and
cmp
unpcklps
xlat
cmc
mov
rcr
(bad)
test
dec
mov
jmp
jmp
in
mov
pop
lds
push
in
(bad)
popf
in
cmp
sub
sbb
rol
mov
int3
into
and
aas
das
data16
aaa
jns
xor
in
ja
gs
xor
xchg
jno
or
pop
mov
std
sub
(bad)
aaa
pop
je
pop
in
test
pop
clc
push
ret
inc
fdiv
aad
xor
int3
stos
jnp
push
cmps
inc
idiv
cld
cmp
pop
mov
outs
test
adc
jmp
and
movzx
stc
(bad)
push
sbb
dec
dec
push
fisub
ds
mov
out
add
inc
and
mov
inc
inc
popf
inc
js
lods
scas
(bad)
repnz
scas
popa
sbb
shl
mov
outs
mov
jge
dec
retf
(bad)
test
push
add
mov
dec
pop
dec
push
mov
ins
pop
mov
int3
sub
icebp
ficomp
fwait
xchg
(bad)
arpl
sbb
mov
lods
xlat
xchg
add
cdq
cwde
pop
scas
mov
xchg
je
arpl
cmps
into
iret
mov
daa
pop
sbb
jb
and
aam
stos
cmp
dec
gs
dec
pop
sub
sbb
movs
add
sub
or
sub
mov
and
std
pop
mov
movs
(bad)
(bad)
jg
jmp
popf
je
loope
inc
loopne
in
jmp
pop
out
mov
jb
mov
sbb
add
jns
xchg
push
jb
jb
mov
pop
jbe
sahf
push
nop
fcomi
not
out
das
push
push
push
test
popf
and
pop
cmps
retf
sub
cmp
cmp
cmp
sub
mov
xchg
(bad)
cmps
push
fs
ins
inc
sbb
neg
movs
xlat
and
jge
es
aam
inc
mov
data16
add
lods
mov
pop
xor
fmul
sahf
mov
mov
push
pop
in
mov
xchg
jns
loope
and
push
sub
mov
fsubr
xchg
or
mov
jnp
add
and
jl
aaa
out
xchg
inc
mov
ret
xchg
(bad)
sub
sahf
jo
mov
fsubr
push
mov
or
out
cdq
sub
scas
fild
cdq
sub
pop
icebp
outs
bound
dec
arpl
and
cmp
imul
int
adc
(bad)
fwait
jge
pop
or
jg
pop
dec
jno
jmp
mov
and
xchg
nop
mov
popa
leave
sbb
and
cmp
push
mov
push
call
(bad)
jp
mov
mov
mov
and
fxch
sahf
adc
push
jae
retf
mov
test
jbe
jae
in
ins
lahf
jnp
inc
cld
shl
call
xchg
pop
pop
mov
shl
xor
call
fmul
add
daa
pop
call
push
pop
mov
mov
cdq
mov
addr16
sbb
lock
cmp
mov
pop
and
dec
push
mov
fwait
out
(bad)
xchg
add
das
lods
lds
jmp
cmp
and
and
imul
cmp
icebp
out
gs
dec
jecxz
or
ret
out
pop
jb
and
in
add
sbb
hlt
mov
fsub
sbb
xchg
push
cmp
call
cmp
movs
jb
jb
sahf
mov
mov
aaa
and
popf
fisub
mov
mov
xchg
es
aad
pusha
gs
or
popf
sahf
hlt
scas
std
mov
std
ins
push
aam
or
into
fst
mov
sub
sub
mov
mov
xor
pop
aam
xor
cmps
pop
popa
shr
lea
xchg
sbb
xor
repz
pop
adc
push
outs
push
push
xor
rcl
dec
or
bound
cmp
mov
leave
push
(bad)
sub
nop
int
xchg
jae
and
mov
push
sbb
push
fs
push
inc
mov
jle
push
jo
std
cmps
aaa
mov
pop
repnz
mov
inc
xchg
inc
push
retf
xor
xchg
cmc
inc
mov
fcomp
jb
add
mov
inc
sub
dec
dec
rol
sahf
xor
jns
xlat
mov
or
jno
sahf
inc
in
inc
mov
retf
enter
addr16
push
mov
ja
je
(bad)
push
pop
add
jo
aaa
dec
rcl
mov
cmc
mov
adc
mov
(bad)
cmp
lea
cdq
xchg
scas
cli
mov
mov
xlat
cmp
xchg
aam
outs
into
sbb
inc
cld
nop
xchg
dec
add
mov
push
inc
sar
gs
add
scas
push
inc
retf
(bad)
push
stc
fisubr
das
lods
out
outs
hlt
fisttp
mov
jp
inc
xchg
aas
arpl
sbb
ins
lea
cmc
mov
dec
xor
adc
inc
sub
aaa
(bad)
mov
aam
and
rcl
(bad)
jnp
sub
leave
jl
add
imul
enter
mov
xchg
mov
mov
jl
mov
sbb
push
adc
push
xlat
cmp
sbb
stos
inc
je
inc
test
cdq
shl
dec
jmp
jge
mov
cdq
shl
(bad)
pop
mov
lods
adc
add
adc
movs
repz
sbb
push
nop
cmp
out
xor
jg
inc
mov
lds
pop
mov
nop
or
xor
ins
jg
les
add
and
aaa
inc
cli
(bad)
xchg
adc
mov
mov
mov
xchg
sub
inc
sub
jg
test
rcl
and
jle
lock
test
cmp
cmc
xor
ficomp
ss
push
aas
add
test
shl
or
cwde
mov
bound
arpl
xchg
in
test
pop
mov
mov
loopne
dec
mov
sub
adc
cld
jmp
js
jmp
or
fsub
pop
mov
mov
mov
in
and
sub
loop
fisub
shl
arpl
sbb
pop
lds
mov
push
or
js
adc
shl
push
data16
cld
lods
jne
cmp
mov
retf
cs
in
cmp
xchg
dec
popf
xor
sbb
jp
adc
cmp
addr16
sbb
push
retf
ret
iret
and
daa
call
cmp
jmp
aas
jns
popf
call
imul
sti
in
lods
xchg
jb
push
mov
clc
jmp
sub
repnz
inc
push
mov
int3
je
(bad)
addr16
and
(bad)
pop
daa
jnp
mov
retf
test
push
push
push
lods
push
cmp
mov
or
jno
call
xchg
and
dec
cwde
out
aaa
retf
out
fcomp
add
dec
es
cmps
lods
mov
mov
xor
push
dec
cmp
call
test
adc
pop
sub
iret
pop
push
nop
mov
cdq
mov
sar
out
lods
(bad)
(bad)
mov
lods
sbb
dec
pusha
gs
(bad)
sub
mov
fimul
cmp
mov
fdivr
movs
sub
enter
pop
loope
in
dec
pop
cmp
mov
pop
sti
imul
add
repz
inc
sub
inc
stc
std
int3
and
mov
clc
mov
and
inc
repz
sbb
sbb
inc
xor
mov
inc
jge
push
mov
test
ins
leave
sbb
ins
pop
mov
push
xchg
cmp
out
or
xor
sbb
push
f2xm1
xchg
lods
das
(bad)
inc
imul
in
jge
das
cmps
ds
fstp
xor
out
outs
loop
imul
shl
xchg
mov
ror
jae
push
or
xchg
jle
cmp
add
sub
add
jb
ds
sub
sbb
pop
and
sbb
xchg
and
mov
and
dec
(bad)
(bad)
mov
lahf
imul
div
aam
mov
es
add
out
outs
add
(bad)
cli
pop
leave
into
packsswb
mov
call
js
test
mov
xchg
adc
sahf
or
rol
jne
sbb
(bad)
fcmovnu
jbe
pop
sbb
enter
(bad)
rcl
cmps
(bad)
ja
repnz
sub
pop
loop
or
in
or
cmp
enter
push
adc
push
stc
mov
pop
pop
fsubr
add
push
mov
xor
mov
(bad)
test
jmp
sub
hlt
stos
lea
fisub
sbb
sub
cli
stos
sbb
pop
mov
and
or
mov
jmp
sti
jmp
jg
leave
dec
lods
mov
ins
js
inc
scas
or
jo
not
sbb
jno
fnstcw
sahf
fs
mov
imul
test
stos
out
repnz
jno
dec
inc
pop
mov
sti
pushf
pop
ins
xor
pop
test
or
(bad)
icebp
xor
loopne
xor
leave
cmp
stc
sbb
xor
test
dec
mov
cmps
xor
mov
inc
bound
cmps
pop
mov
push
or
xchg
inc
icebp
dec
cmp
aaa
les
hlt
xor
imul
fisttp
pop
mov
out
dec
or
outs
adc
xor
jae
pop
xchg
dec
jns
adc
push
or
cmp
push
(bad)
retf
pop
int
sub
sbb
or
imul
sub
shl
pop
inc
out
fs
pop
mov
and
(bad)
sub
into
pop
outs
dec
jbe
mov
test
sub
out
or
sahf
cmp
jecxz
stc
mov
jge
lods
daa
sub
bound
jle
push
movs
test
pop
sbb
jge
sbb
xor
lahf
mov
ror
in
adc
test
stos
(bad)
cli
mov
sub
jl
pop
mov
xchg
cmp
int
mov
fwait
inc
mov
mov
lds
cmps
adc
mov
leave
(bad)
mov
push
arpl
add
sbb
dec
div
pop
ja
stos
and
dec
jbe
popf
dec
fucomp
sub
nop
fs
sub
pop
(bad)
mov
leave
jl
or
repz
xor
enter
jl
pop
xlat
jae
add
jle
mov
mov
cld
retf
mov
mov
xchg
or
mov
xlat
xor
or
mov
sahf
push
sbb
pop
push
xor
inc
xchg
movs
adc
out
les
push
dec
and
or
jns
mov
scas
and
imul
and
clc
dec
or
pop
add
jbe
mov
xchg
in
in
test
pop
jno
iret
out
push
stos
clc
jns
inc
jp
fwait
mov
int3
call
mov
or
dec
inc
adc
into
test
(bad)
add
mov
out
int3
pusha
loope
and
scas
test
cmp
sbb
fdiv
(bad)
sbb
add
fwait
xchg
pop
not
pop
add
ins
and
int3
sbb
pop
pushf
push
cdq
dec
mov
cwde
pop
stos
repnz
mov
dec
cs
das
scas
sbb
test
enter
shl
pop
movs
aam
retf
mov
nop
xor
sbb
icebp
cmp
jne
jae
mov
push
movs
lods
xchg
rcl
pop
dec
push
cwde
cmp
sub
not
sub
pop
adc
jmp
and
in
jmp
je
mov
mov
imul
mov
and
cmps
cmp
mov
and
sub
pop
cmps
aam
jnp
mov
pop
ror
inc
adc
in
xchg
jns
sub
xchg
sbb
xchg
daa
sbb
outs
and
cld
aad
in
movs
cmp
add
jbe
out
add
sti
pop
adc
punpcklbw
xchg
cmp
test
inc
iret
inc
cmp
inc
xlat
mov
inc
and
sub
imul
push
mov
loope
dec
mov
or
mov
dec
(bad)
mov
pop
call
mov
jmp
jl
test
pop
sti
call
or
push
repz
jge
sbb
imul
and
sub
add
int
dec
mov
sub
cwde
pop
iret
das
mov
arpl
sbb
mov
dec
mov
adc
jns
je
inc
mov
cmp
fld
xchg
xchg
mov
adc
je
pop
and
js
repz
dec
xchg
sub
dec
dec
xlat
bound
int
sti
loopne
jg
xchg
cmp
or
cmc
inc
cmc
cmc
lods
xor
sub
and
mov
sbb
scas
ret
sbb
inc
adc
fcomp
jae
retf
and
mov
cli
pop
inc
(bad)
xor
jbe
mov
pop
xchg
std
fyl2xp1
neg
inc
fdiv
enter
inc
test
aaa
(bad)
cs
pandn
fdiv
sub
cwde
jmp
and
cmp
sahf
mov
or
pop
out
jns
mov
mov
in
cmps
test
adc
arpl
cmp
call
cdq
leave
or
pop
(bad)
jl
imul
or
adc
hlt
push
cmp
daa
pop
xor
xlat
lea
retf
inc
sbb
and
(bad)
dec
xor
jb
in
lahf
inc
fld
outs
xor
sti
lods
dec
rcr
fdivp
or
jo
iret
sbb
cmp
imul
movs
(bad)
mov
mov
pop
jle
xlat
or
(bad)
mov
mov
jnp
jge
mov
cmp
cmp
shl
and
clc
xchg
mov
rcl
stc
xlat
sub
sub
call
lds
imul
pusha
sbb
leave
test
or
(bad)
jle
or
push
pop
dec
(bad)
push
fwait
and
das
ret
pop
int
mov
add
mov
cmps
sub
dec
pop
loop
enter
popf
aaa
dec
inc
pop
adc
lea
mov
rcl
imul
pop
and
xor
in
out
add
lods
inc
lds
jp
xchg
push
jmp
push
jmp
in
inc
jp
aam
dec
test
push
cmc
fwait
adc
jg
jmp
in
js
inc
pop
mov
mov
dec
call
fsub
pop
push
in
xchg
mov
adc
inc
retf
cmp
ins
and
push
cmp
xor
fwait
push
ret
push
fild
int
push
inc
push
iret
fwait
inc
push
pop
fadd
inc
leave
shr
mov
or
or
rcl
sub
setne
cmp
scas
cmp
or
adc
mov
outs
inc
js
inc
aad
std
in
in
mov
inc
pop
retf
pop
mov
fisubr
fdivr
dec
adc
aaa
push
sub
(bad)
adc
xor
hlt
das
in
pop
mov
mov
mov
adc
or
add
sti
mov
dec
data16
std
rcr
shr
mov
int3
aam
xchg
div
ja
xchg
add
test
popa
dec
imul
ret
sub
mov
fld
fist
ret
pop
mov
and
test
mov
sti
or
les
mov
pop
xchg
(bad)
push
test
jecxz
stos
(bad)
sti
xchg
pop
fdivr
jb
retf
jbe
xchg
ins
in
scas
pop
dec
push
fistp
cmp
call
popa
cmp
gs
jp
mov
(bad)
(bad)
xor
movs
add
into
jne
(bad)
mov
fld
pushf
repnz
cld
or
adc
mov
gs
add
push
add
leave
movs
or
mov
adc
push
retf
xor
add
jmp
cld
and
pushf
mov
sti
lock
adc
mov
test
les
std
xchg
(bad)
lods
jmp
and
sbb
stc
pop
dec
ficomp
adc
(bad)
and
test
sbb
in
mov
mov
int3
inc
js
mov
push
mov
xor
mul
cs
cmp
add
pushf
ret
mov
sub
and
jmp
pop
dec
mov
lds
adc
mov
push
cmp
sub
pop
jnp
outs
cmc
test
ror
into
cmp
mov
ret
call
dec
sbb
pop
setb
adc
fs
frstor
ror
pop
daa
out
mov
inc
jg
xchg
mov
(bad)
dec
xchg
xor
push
(bad)
popf
cmp
jge
cli
xlat
jns
and
fiadd
fcmove
add
fimul
jg
test
cmps
lods
jne
call
and
clc
xchg
rol
cmp
cmp
loopne
cmc
pop
dec
inc
sbb
cmp
jge
lods
ja
cwde
call
mov
ret
(bad)
cmp
xchg
mov
pop
jmp
(bad)
xchg
xor
pop
mov
and
pusha
mov
and
xchg
sbb
pop
scas
jl
dec
je
sahf
mov
mov
out
add
dec
xchg
fsubrp
mov
sbb
sub
repz
cli
addr16
inc
jae
pop
call
xchg
fistp
cmp
inc
xchg
mov
(bad)
js
loopne
inc
push
aas
adc
push
add
cmp
ror
leave
imul
and
xor
pushw
cmps
ins
arpl
cmp
jp
or
shl
or
pop
inc
mul
push
icebp
jle
(bad)
into
loopne
in
mov
dec
nop
pop
jge
sbb
repnz
xor
lods
push
fdecstp
test
jnp
sub
in
jp
into
or
jmp
outs
outs
jnp
pop
imul
cli
loop
scas
mov
jae
mov
xchg
mov
scas
cmp
fcom
scas
jne
sub
pop
out
mov
push
(bad)
cmps
in
pop
stc
dec
mov
sbb
and
mov
sub
mov
jbe
cmp
out
push
mov
popf
mov
push
add
jnp
rol
outs
sbb
sub
test
xor
sbb
scas
or
cmp
lods
and
add
dec
imul
cmp
rcr
adc
jmp
jo
mov
adc
movs
inc
ror
jae
in
mov
jnp
add
daa
loopne
pop
dec
mov
aad
shr
xor
inc
js
mov
mov
(bad)
sbb
xchg
dec
push
mov
jo
or
pusha
sbb
(bad)
jo
std
and
fist
lock
sahf
jae
stc
fdivr
jg
pop
ror
xor
scas
ja
lods
pushf
pusha
push
push
push
loope
xchg
rcr
mov
push
add
imul
sub
sbb
jp
inc
shr
movs
mov
cmp
sbb
ins
dec
cs
xchg
add
xchg
inc
jle
mov
add
fidiv
cli
mov
inc
jns
push
stos
out
push
sub
jns
or
pop
pop
sub
mov
aas
jb
jns
pop
push
iret
pop
xchg
mov
push
xchg
stos
or
push
push
push
inc
fcmovnbe
fmul
push
repnz
int3
inc
movs
and
mov
sub
in
pop
mov
jne
or
cld
int3
xor
pop
pop
fisubr
jle
div
xchg
int
jge
mov
jmp
mov
sub
dec
push
xor
shl
xor
(bad)
mov
inc
mov
ins
pop
jne
icebp
cmp
test
nop
aam
mov
jne
scas
jne
inc
out
pop
adc
inc
pop
inc
add
retf
(bad)
out
sub
loopne
cmp
sub
pop
iret
sbb
push
movs
mov
out
in
and
mov
push
sub
cdq
outs
mov
into
cmp
xchg
fcmovbe
xchg
or
movs
test
push
ja
mov
cmovp
cmp
mov
scas
or
push
fild
sti
aam
sbb
retf
mov
scas
mov
imul
fisubr
add
add
xor
push
push
push
aas
fs
in
les
stos
loopne
xor
(bad)
les
push
dec
test
fimul
ins
mov
pusha
test
inc
aaa
cwde
stos
fcomp
test
test
pushf
xchg
(bad)
in
adc
jmp
add
lds
nop
jecxz
dec
retf
movs
push
not
xchg
div
ficom
cmp
dec
pop
cs
jne
idiv
xchg
call
and
popf
sub
and
and
repnz
ja
jle
lods
ret
mov
stc
icebp
in
out
pop
clc
push
ror
sbb
stos
dec
push
imul
outs
out
jne
mov
sub
clc
jg
jmp
aam
pop
fidiv
inc
dec
xchg
add
test
push
mov
mov
repz
imul
int
les
sbb
div
cdq
xor
add
fdivp
pop
sub
sbb
dec
sub
cli
iret
pop
retf
loop
popa
lods
push
add
sub
jns
jg
push
inc
jne
(bad)
cmc
ds
sti
retf
dec
sub
(bad)
mov
aaa
aad
jge
cld
rcl
retf
mov
mov
fsub
outs
push
pop
lahf
inc
sub
fs
aad
mov
pop
imul
mov
vmwrite
xchg
(bad)
in
inc
nop
cmps
ds
mov
int
pushf
ins
hlt
stc
stos
jno
pop
(bad)
mov
fbstp
mov
fs
adc
dec
dec
popf
push
xor
adc
aam
mov
into
xor
shl
xchg
sub
pop
jbe
(bad)
fnstenv
or
xor
xchg
(bad)
rcr
(bad)
mov
fdiv
cmp
mov
sbb
cmc
mov
add
imul
lods
pop
xchg
retf
xor
jl
fxch
popf
push
cmp
push
ficom
dec
mov
jge
push
fwait
mov
inc
pop
adc
fdivr
scas
inc
cmp
sbb
mov
ins
inc
xchg
and
cmp
add
sti
(bad)
(bad)
xlat
(bad)
jl
popf
lods
dec
test
out
mov
adc
call
fcom
popf
cmps
lods
mov
sub
dec
leave
inc
push
iret
pop
xchg
xchg
in
cmp
shl
push
jns
xor
mov
inc
ss
cli
enter
push
mov
push
in
mov
mov
xchg
int3
fmul
jne
dec
xchg
push
ja
in
popa
aaa
mov
add
mov
mov
inc
mov
fcom
bound
fdivrp
jmp
vandnps
aam
into
sahf
popf
ja
or
dec
fisubr
adc
pop
jbe
(bad)
outs
mov
ud2
ja
test
pop
push
aas
in
jbe
aaa
mov
mov
mov
sbb
test
lods
ror
sbb
inc
sub
cli
and
sbb
push
sub
daa
fisttp
pop
mov
adc
aad
xor
push
cwde
aas
lea
jle
call
out
mov
jp
pop
mov
cmp
(bad)
pop
stos
out
and
fwait
lds
arpl
push
xchg
mov
xor
sbb
pop
sbb
xchg
lds
fisttp
enter
lds
stos
and
xchg
outs
outs
test
fld
test
mov
fnstcw
or
mov
je
lods
inc
arpl
fsubr
push
test
adc
addr16
xchg
push
add
gs
js
push
pop
daa
jecxz
adc
daa
scas
mov
pop
dec
mov
in
inc
pop
std
or
cmps
pop
adc
in
sbb
pop
(bad)
aam
es
pop
mov
xor
sub
ins
adc
add
mov
and
test
cmps
inc
dec
and
mov
jmp
iret
fdivr
clc
and
push
call
inc
cmps
cmp
out
es
ror
jle
stos
imul
scas
jp
(bad)
cmc
xor
leave
add
xchg
jg
out
adc
leave
hlt
mov
es
lahf
fadd
cmp
inc
mov
sbb
push
xchg
(bad)
aas
ins
iret
dec
scas
push
and
pop
sub
xor
retf
pop
lds
in
in
imul
mov
ret
xor
push
icebp
xor
xchg
enter
enter
or
mov
(bad)
sbb
sti
dec
pop
sbb
adc
push
mov
or
leave
sar
adc
add
fdivp
aam
adc
pop
jae
je
int3
mov
data16
dec
mov
out
pushf
stos
fsub
xchg
cmp
xchg
and
pop
or
imul
jle
cld
pusha
scas
xor
pop
loop
imul
pop
add
xor
add
add
mov
shl
mov
repnz
pop
or
push
(bad)
je
fdivr
sbb
(bad)
pop
mov
aas
push
inc
push
call
jmp
pop
stc
cmp
adc
xor
jp
aaa
clc
jecxz
push
call
xchg
fs
idiv
and
aad
movs
xchg
dec
add
add
leave
xchg
mov
and
adc
sub
inc
mov
and
pop
sub
and
sub
add
and
jnp
or
jno
sar
outs
sbb
out
mov
loop
mov
ds
mov
fmulp
and
repz
clc
xadd
jne
imul
mov
popf
movs
test
mov
loop
js
ret
mov
bound
add
xchg
and
lods
fnstcw
mov
ins
inc
enter
test
loop
mov
xor
test
and
test
inc
shl
add
mov
mov
cli
out
push
ss
loop
fcomp
rcr
cmps
dec
cmp
mov
ds
mov
sbb
mov
xor
mov
fisub
push
cmp
xchg
pop
or
mov
scas
adc
sbb
jae
fmul
xor
xchg
xchg
int3
cli
cs
and
in
sbb
sbb
push
fnstsw
(bad)
out
pop
ret
scas
outs
test
cwde
lock
sbb
shl
cli
xchg
mov
fwait
xor
cld
lods
add
mov
mov
int
mov
pop
mov
aaa
sub
test
stc
jns
retf
add
jnp
movs
daa
push
loope
aad
and
sub
dec
ja
lock
xchg
jo
out
in
loop
and
retf
pop
adc
stos
sbb
jns
popf
mov
and
or
loopne
sbb
ins
xchg
shr
jns
jge
pop
jnp
or
mov
cmp
(bad)
push
mov
sbb
(bad)
lea
popf
sub
call
push
add
jo
and
mov
jmp
loopne
ret
loope
imul
sahf
xor
leave
push
sbb
push
outs
(bad)
ja
lahf
sub
movs
pop
lods
test
ja
push
lea
enter
push
sbb
adc
or
aad
sar
pop
jbe
daa
data16
hlt
add
sti
mov
mov
sti
jge
(bad)
in
adc
scas
sub
fidiv
dec
test
xchg
scas
ds
dec
dec
push
data16
xchg
outs
(bad)
or
out
xlat
out
movs
int3
call
dec
repnz
xor
push
xor
ds
ja
push
jns
pop
pop
cmp
xchg
adc
fxch
jg
loope
cmp
mov
stc
push
or
inc
or
pop
mov
arpl
fsub
or
jl
nop
and
dec
mov
or
mov
mov
in
push
sbb
dec
push
adc
cmp
adc
jns
pop
mov
ja
inc
mov
outs
das
sbb
jns
push
mov
jne
ds
cdq
jae
mov
xlat
test
push
aas
btr
mov
sbb
or
xor
mov
push
addr16
stos
lock
or
in
call
jb
xor
jbe
xchg
push
inc
adc
pop
sub
jbe
scas
fst
push
aas
dec
(bad)
jbe
xchg
sbb
xchg
dec
adc
and
(bad)
ror
dec
and
and
adc
mov
dec
adc
mov
test
pop
gs
or
push
popa
mov
push
inc
lock
call
dec
fcomp
jle
jecxz
inc
pop
data16
sbb
push
pop
mov
xchg
jbe
pop
es
loope
in
stc
data16
jno
(bad)
xchg
test
add
pop
dec
mov
push
jle
and
aam
sbb
mov
(bad)
jge
xchg
dec
and
sub
inc
or
add
popf
add
pop
lods
in
cmc
into
jno
mov
or
inc
dec
and
cmp
ret
adc
lods
aas
mov
or
es
in
xor
clc
jle
rcr
jnp
test
das
pop
and
xchg
fwait
adc
mov
(bad)
jbe
(bad)
cmp
add
jg
mov
cld
and
mov
es
xor
lods
fidiv
pop
ins
dec
mov
jbe
je
xor
xor
and
call
cmc
or
pop
jb
movs
aaa
and
inc
mov
(bad)
adc
imul
dec
sbb
xor
jg
ror
jae
sub
xchg
push
cmps
inc
pusha
jecxz
imul
mov
mov
add
adc
sub
iret
repnz
sbb
lahf
push
xor
fisttp
cmp
pop
jmp
or
sbb
push
cmp
(bad)
or
push
jnp
aam
mov
mov
xchg
xor
jmp
enter
in
cli
in
frstor
adc
(bad)
cmp
pop
or
scas
(bad)
mov
lods
xor
sub
mov
jo
or
rcr
repnz
(bad)
aas
inc
call
test
rol
add
xor
and
mov
dec
(bad)
pop
pop
sub
mov
sbb
mov
aad
daa
(bad)
imul
cmp
or
jl
and
pusha
ret
lahf
test
sub
adc
and
pop
or
or
mov
jp
push
pop
lods
cli
aaa
cs
pushf
nop
xchg
retf
adc
mov
jmp
jnp
inc
pop
fmul
jmp
je
iret
popa
aad
out
push
sub
scas
mov
dec
push
repz
pop
xor
mov
cmp
inc
repz
push
add
inc
pushf
mov
mov
or
div
push
add
out
loopne
mov
push
into
push
je
mov
pop
mov
push
xlat
mov
jbe
ficomp
or
or
cdq
mov
in
mov
dec
sbb
mov
cli
inc
mov
les
or
sbb
adc
(bad)
mov
jge
scas
out
lahf
and
and
ins
jae
aam
push
imul
push
clc
dec
ret
pop
jo
cwde
adc
push
nop
adc
fs
imul
push
cmc
pop
and
mov
imul
mov
pushf
push
repnz
jnp
out
mov
aaa
pop
push
push
sub
out
inc
sti
addr16
and
mov
mov
cmp
and
dec
sub
out
jnp
sub
loop
and
fdivr
mov
pop
pushf
mov
bound
add
inc
push
(bad)
xlat
repz
and
xchg
fs
jmp
xchg
stos
inc
jge
je
neg
into
sbb
cmp
scas
iret
xor
fnsetpm(287
dec
push
sub
popf
paddusw
jle
lea
push
es
aam
enter
xchg
pusha
ss
out
leave
imul
add
pop
jecxz
xchg
dec
pop
retf
daa
pop
mov
das
fidivr
stos
data16
in
pop
inc
mov
not
xor
mov
iret
push
icebp
and
add
in
int
imul
and
mov
cmp
out
cdq
leave
push
pop
ds
shl
jmp
push
mov
rcl
fsubr
out
jge
mov
xchg
add
mov
or
mov
not
mov
(bad)
std
cmps
cwde
pop
std
push
sbb
movs
dec
jb
mov
cmp
sbb
mov
ins
aaa
loopne
cmp
loop
loopne
mov
xchg
mov
dec
cmps
cwde
retf
xchg
(bad)
xor
jbe
out
int
xchg
push
xchg
test
and
imul
(bad)
gs
mov
mov
pop
add
shl
push
pop
imul
and
mov
push
xlat
rcl
out
and
push
mov
sbb
xor
push
fmul
(bad)
pop
xchg
push
push
in
pop
cmps
push
in
push
pop
fdiv
popf
mov
mov
xrelease
add
pushf
es
mov
ja
cwde
and
scas
icebp
fisttp
scas
repnz
and
cmp
in
add
movs
loopne
lahf
mov
and
pop
xchg
fild
movs
pusha
pushf
in
cmc
(bad)
mov
push
sub
jo
iret
dec
or
mov
cli
shl
ret
(bad)
xchg
retf
inc
or
or
int
or
jne
adc
call
test
cmps
add
popa
jmp
movs
stos
mov
mov
retf
cmp
daa
ret
in
pusha
and
mov
jle
push
jp
and
js
shr
inc
dec
stos
ror
and
xor
adc
std
sub
mov
sub
shl
add
ja
shr
loop
or
test
addr16
movs
hlt
lods
cmp
nop
(bad)
dec
xor
cmps
(bad)
inc
aas
inc
xor
push
in
dec
and
ins
ret
mov
or
ds
or
xchg
or
sub
mov
loop
mov
fld
jnp
scas
fstp
inc
push
loop
sbb
pushf
sbb
mov
mov
jmp
push
xchg
hlt
in
sbb
fucomp
adc
rol
std
lods
loop
jns
jno
dec
(bad)
aad
mov
leave
jns
add
movs
sub
pop
(bad)
nop
lds
fstp
ds
les
ss
mov
cwde
(bad)
adc
xchg
cmps
xchg
cmps
das
adc
sub
(bad)
hlt
popf
adc
fsub
outs
je
add
sub
jmp
dec
add
dec
test
addr16
xchg
addr16
jg
push
or
test
das
and
cmps
inc
test
aad
fwait
aad
dec
mov
fisttp
xlat
or
dec
dec
shl
add
pop
add
jge
lds
add
iret
sub
pushf
xlat
test
out
xor
cdq
pop
push
dec
int
or
inc
sub
cwde
push
fdiv
mov
out
cmc
pop
and
fwait
imul
sbb
test
xchg
call
push
jg
jge
adc
mov
xchg
pop
push
in
popa
sub
repnz
shl
xor
in
dec
push
call
int3
or
push
aad
movs
xchg
push
inc
cli
retf
adc
mov
sub
lahf
mov
rol
sbb
mov
jne
sbb
xor
xchg
aas
jecxz
push
mov
test
lods
sub
mov
xlat
and
xchg
push
and
je
and
out
(bad)
cmp
enter
test
cmps
cmp
pop
pushf
mov
ja
mov
gs
push
out
cmps
cmp
cs
lea
mov
fldenv
cmc
arpl
mov
(bad)
ss
imul
je
xchg
dec
push
xor
jmp
(bad)
pop
inc
or
inc
cmp
ret
mov
out
add
dec
pop
js
test
or
js
rol
xor
mov
scas
stc
xchg
std
pop
mov
add
xor
(bad)
sub
imul
jg
fdivr
icebp
fld
mov
lock
call
ja
punpckhwd
or
pop
mov
xchg
test
cmp
arpl
xchg
aam
movs
sar
sbb
mov
inc
call
rol
cmp
stc
jle
pop
lods
xchg
imul
rcr
fisub
jae
sub
mov
push
jne
mov
push
xor
sbb
add
pusha
ror
adc
mov
rcr
and
js
jo
stc
sub
js
cli
(bad)
dec
aad
inc
stos
xor
mov
jnp
adc
lds
mov
mov
push
mov
rol
add
dec
fbld
sti
add
mov
pusha
push
jp
mov
(bad)
jecxz
cmp
sbb
outs
pusha
jecxz
sbb
enter
mov
retf
jmp
out
ret
add
jne
adc
or
mov
lahf
or
mov
movs
clc
into
dec
outs
lea
fsubr
mov
mov
push
and
call
add
add
movs
shr
push
rcl
das
(bad)
pop
aaa
jbe
cs
ja
mov
test
aam
pop
jno
pop
xor
mov
dec
cmp
retf
(bad)
adc
lahf
xor
mov
iret
cmp
add
hlt
mov
test
ret
push
shl
xor
inc
dec
mov
in
inc
jge
xchg
fsub
dec
pop
sbb
dec
inc
std
rcl
jbe
cs
lock
mov
outs
and
mov
push
pop
adc
je
or
jecxz
int
sub
(bad)
icebp
sahf
sub
pushf
jne
call
mov
data16
adc
test
xor
idiv
and
xchg
rcr
(bad)
pop
push
push
cli
mov
sbb
adc
xchg
aas
push
pop
cmp
xchg
push
ss
inc
inc
ds
and
(bad)
cdq
adc
or
pop
ds
inc
sar
xchg
jo
cmp
xor
fmul
fwait
push
dec
cld
adc
cmps
je
shl
sbb
mov
fbstp
lds
cmp
or
sub
iret
jp
xchg
int
xor
dec
add
shr
cmp
jae
xchg
(bad)
fcmovnb
inc
popa
xor
lods
aad
lahf
mov
sbb
pop
or
mov
int
dec
mov
hlt
mov
ficom
dec
out
push
movs
dec
(bad)
retf
jbe
jge
push
jge
xchg
pop
xchg
cdq
(bad)
lock
icebp
mov
test
adc
cmc
pop
aas
mov
push
scas
(bad)
in
jbe
mov
pushf
dec
test
gs
scas
sbb
pop
out
jp
dec
or
ret
mov
(bad)
mov
mov
add
sub
(bad)
jns
fiadd
ins
into
mov
sbb
fiadd
jnp
je
inc
data16
push
or
pop
xlat
clc
mov
fucomip
js
xor
mov
pop
push
(bad)
mov
jge
bound
daa
sbb
sub
stos
loope
sub
test
or
mov
mov
push
outs
mov
push
cli
push
jnp
into
mov
fcmovnbe
je
dec
or
mov
aad
div
out
nop
add
and
mov
int3
test
cmp
fisttp
dec
and
fild
add
adc
cmp
mov
or
stos
int3
outs
jg
mov
stos
lock
mov
jp
xchg
cwde
outs
ficom
out
mov
fisttp
cmp
inc
mov
mov
dec
sti
fisttp
cmp
iret
pop
retf
outs
jmp
daa
clc
int
cmp
push
jp
xchg
mov
mov
jle
aam
repnz
lahf
(bad)
popa
shl
mov
pop
jecxz
test
cmp
cmp
and
stos
imul
imul
(bad)
mov
clc
sbb
sub
push
jge
inc
add
mov
jecxz
repnz
mov
data16
add
(bad)
xchg
sub
push
call
popf
pop
xchg
fs
inc
sub
or
iret
out
cmp
mov
cdq
test
pop
adc
in
leave
mov
inc
push
push
push
clc
mov
fnsave
addps
push
dec
push
fdivp
jge
xor
xchg
movs
dec
(bad)
not
sub
lahf
cmc
mov
sti
stos
mov
xchg
sbb
sbb
ds
movs
mov
fmul
bound
and
std
std
out
cli
pop
dec
hlt
loop
pop
xor
mov
cmp
push
ret
pusha
mov
inc
or
adc
push
out
add
lea
pusha
and
cld
stos
bound
in
inc
adc
cmc
imul
aam
mov
jmp
sti
nop
or
(bad)
scas
nop
pop
(bad)
add
icebp
(bad)
xchg
je
rol
push
inc
int3
les
repnz
jb
cld
cmp
push
jns
sub
imul
push
mov
fisttp
mov
sub
(bad)
cmp
push
int
push
nop
ja
push
add
(bad)
lods
jecxz
daa
cmp
jecxz
adc
jno
cwde
mov
aad
mov
lea
xchg
test
mov
and
jae
pop
push
cs
pusha
xchg
gs
jg
shr
popf
add
call
add
repnz
and
popf
jno
dec
dec
fcmovne
scas
jb
xor
cmc
aas
sbb
cs
call
das
(bad)
push
mov
push
jbe
cdq
ror
mov
shl
mov
fisub
dec
jbe
scas
movs
mov
lahf
adc
sub
push
mov
sbb
xchg
mov
fsubr
xor
enter
in
int
xchg
lahf
pop
jns
lods
add
and
push
int3
dec
nop
mov
xor
add
sbb
sub
add
arpl
stos
or
js
retf
leave
dec
jp
pop
xor
push
jns
and
es
mov
inc
ins
nop
pop
inc
cmp
aad
sbb
dec
adc
mov
push
and
retf
std
call
(bad)
jl
sub
mov
gs
xor
pop
mov
js
ins
shl
cmps
jb
cmps
cmp
movs
int3
pop
mov
aaa
in
lock
mov
mov
in
jle
fild
int3
je
mov
sub
jno
pop
push
dec
push
jne
movs
lahf
push
in
popf
mov
xchg
stos
out
mov
jl
ins
adc
cs
sub
cdq
ja
out
xchg
rcl
mov
or
ins
adc
out
(bad)
push
aaa
cmc
and
xchg
cli
xchg
xor
fisubr
adc
(bad)
cwde
stos
inc
and
push
shr
fnsave
jno
das
pushf
jl
and
pop
pusha
pop
addr16
jo
push
jo
jb
aaa
xlat
test
add
repz
rol
stos
(bad)
(bad)
push
xor
add
das
jbe
xor
cmp
mul
add
mov
scas
inc
jbe
sbb
cli
xor
jmp
hlt
enter
ss
iret
leave
aad
mov
les
add
out
aas
dec
sahf
fcmovbe
xor
dec
xor
inc
sbb
add
stos
and
(bad)
fcmovb
stc
fistp
pop
cmp
mov
shl
inc
xor
cwde
xchg
in
test
xchg
inc
(bad)
push
cld
xchg
fadd
les
pop
pop
and
sar
push
cmp
call
ret
push
ins
mov
pop
dec
jmp
icebp
pop
xor
stos
adc
jg
test
push
inc
les
inc
push
test
repz
lods
cmp
mov
aas
sbb
leave
call
mov
jl
push
faddp
pop
jl
js
lock
(bad)
in
sbb
in
iret
sub
repz
loope
iret
inc
enter
pop
dec
ret
loope
mov
or
push
jecxz
retf
das
cli
cmp
mov
jb
nop
ret
sbb
test
xchg
sub
and
scas
arpl
fs
fiadd
inc
ja
mov
sti
dec
push
sbb
jae
mov
inc
int3
jp
adc
es
jle
add
push
mov
cld
repnz
cmps
imul
adc
xor
ret
xor
test
sub
or
popa
adc
cmp
sbb
mov
mov
shl
mov
push
aas
mov
enter
sub
mov
cmp
push
mov
int
in
cmp
pop
push
jnp
and
fisub
add
jo
xchg
sti
imul
xchg
or
xchg
icebp
repnz
pushf
jmp
cdq
and
push
cmps
fwait
pop
cmp
or
cli
ss
lods
or
shl
mov
xor
fst
das
(bad)
pop
sub
ins
push
cmp
in
(bad)
jne
xor
jns
(bad)
cmp
pop
dec
or
and
repnz
loopne
mov
inc
pop
or
mov
int
sbb
arpl
or
cwde
jg
cmp
pop
mov
jp
and
adc
sub
shl
rcl
mov
dec
jns
ror
out
cmp
int
arpl
aaa
popa
or
enterw
das
adc
mov
stc
dec
fmul
mov
call
push
xchg
sub
jecxz
das
sub
xchg
(bad)
int
mov
mov
jmp
mov
jo
mov
dec
pop
sbb
std
mov
push
and
pop
call
push
pusha
cmc
outs
mov
fsubr
ffree
xchg
dec
lds
call
(bad)
rcr
jmp
sbb
movs
in
loop
pop
(bad)
jg
(bad)
retf
xor
jbe
in
sub
sbb
xchg
pop
sbb
jge
cli
push
outs
sub
sub
shr
and
es
std
cmp
cmp
cmp
stos
add
bound
sub
inc
or
dec
loope
cs
jle
cmp
js
(bad)
mov
inc
xchg
loope
cmp
sbb
mov
stos
and
mov
push
inc
es
retf
arpl
cmps
pop
mov
je
ja
test
jge
jge
fdiv
adc
xchg
add
outs
enter
dec
jo
xor
(bad)
mov
gs
pop
jns
jp
loope
lods
in
mov
xor
sbb
sbb
xchg
inc
sbb
jmp
outs
int
jb
call
add
lea
pop
(bad)
push
xchg
dec
adc
adc
fld
add
or
adc
add
add
out
out
or
cmps
enter
clc
xchg
mov
sbb
jns
int
out
das
xchg
ins
(bad)
jmp
cmps
ds
sar
and
hlt
jne
mov
pop
mov
std
cmp
pop
rcl
outs
outs
(bad)
jo
scas
xchg
dec
movs
int
in
sub
add
inc
fnstsw
jns
cs
fimul
jns
lods
jg
mov
mov
shl
xor
ins
adc
out
push
repz
xor
pop
jo
dec
gs
repnz
or
lods
mov
push
stos
mov
fmul
cli
sub
ret
adc
enter
enter
xor
outs
push
mov
mov
loopne
cmps
out
clc
push
hlt
cmps
rol
sbb
mov
cli
jns
mov
les
push
mov
and
mov
sar
popa
xor
push
ret
jne
pop
and
shl
fnop
sahf
pop
stos
ins
cs
idiv
scas
mov
out
jnp
enter
mov
and
mov
jecxz
out
inc
push
and
cmp
inc
enter
dec
test
push
push
lahf
jecxz
xchg
sti
cwde
lahf
xor
mov
(bad)
mov
xor
mov
and
adc
in
dec
push
mov
mov
xor
in
daa
cmp
push
mov
push
add
mov
dec
lahf
jb
pushf
jo
pop
cmp
fist
push
sub
js
xor
in
dec
push
mov
mov
pushf
rcl
add
retf
popf
cmp
repnz
and
mov
mov
call
pop
test
add
adc
sbb
jo
sbb
push
pop
jb
aaa
adc
inc
mov
fnop
repnz
inc
push
shr
mov
cld
fcomp
xchg
pop
scas
hlt
(bad)
jecxz
jae
cmps
or
add
push
xor
cmp
xchg
test
rol
push
mov
cmp
mov
imul
jl
jp
mov
and
clc
jo
mov
mov
out
fidiv
movs
fisub
and
scas
or
jmp
fs
frstor
(bad)
in
repnz
gs
pop
rcl
shld
retf
and
xor
xchg
fst
sub
(bad)
es
xchg
adc
(bad)
cmc
jp
dec
xlat
mov
cmp
mov
mov
cdq
jnp
or
and
pop
out
dec
pop
xchg
int
lods
test
and
pop
push
int3
and
mov
or
and
inc
xor
jmp
aaa
mov
adc
(bad)
sbb
daa
cmp
xchg
mov
outs
iret
mov
push
pop
xchg
mov
cmps
test
or
icebp
jnp
add
cs
fidivr
sub
mov
aas
push
mov
or
sbb
rcr
rol
push
rcl
inc
popa
or
pop
adc
sub
and
std
je
add
sbb
inc
mov
xchg
jp
mov
movs
cmc
inc
add
sub
dec
hlt
jle
xor
dec
dec
test
mov
aad
mov
adc
icebp
sbb
adc
fcomp
je
cmp
(bad)
xchg
xlat
cli
sbb
addr16
mov
dec
jmp
mov
(bad)
push
out
pop
sub
cmps
sar
popf
inc
xor
or
test
push
jo
add
mov
int
test
test
mov
arpl
dec
inc
outs
mov
jb
rcl
xor
test
(bad)
add
jb
ja
mov
add
push
xor
aas
repz
lock
(bad)
mov
cdq
dec
or
fiadd
packsswb
jecxz
inc
sbb
fld
sbb
jle
adc
xor
test
mov
aad
dec
enter
pusha
into
inc
sub
in
sub
mov
(bad)
and
push
(bad)
hlt
pop
add
adc
pop
mov
pop
gs
out
in
jecxz
xchg
mov
mov
outs
xchg
sar
fbstp
mov
inc
sub
xchg
or
jmp
sub
popf
or
imul
jle
mov
(bad)
jl
dec
mov
push
cld
daa
fadd
div
mov
sti
pop
mov
mov
and
mov
sub
dec
push
adc
out
pop
es
dec
push
sahf
jge
push
dec
push
lahf
imul
ficomp
pop
fs
mov
outs
sub
leave
mov
ins
(bad)
pop
daa
pop
(bad)
fdivr
inc
mov
jmp
jnp
mov
jl
sub
dec
inc
jns
fcomip
xor
jo
adc
push
cmc
ret
cwde
push
and
mov
sub
adc
and
fsubr
cmp
pusha
mov
ror
push
(bad)
mov
sbb
sbb
push
xor
xor
inc
cli
or
cs
lahf
repnz
pop
push
mov
or
lea
bound
sub
popa
jb
(bad)
ret
xchg
dec
dec
aad
or
sub
or
push
jns
mov
int3
ins
out
nop
adc
js
cmp
sar
or
cmp
data16
lods
adc
sub
icebp
mov
sub
mov
out
adc
sbb
pop
lds
dec
ins
xor
and
pop
outs
jmp
fsub
lahf
pop
div
push
inc
pop
clc
and
dec
fsubr
ins
pop
jno
dec
pop
in
xchg
(bad)
mov
cmp
inc
pushf
aaa
stos
or
movs
div
or
lods
mov
aas
ret
int
mov
pop
aas
cli
push
out
inc
or
call
dec
inc
mov
(bad)
out
mov
lock
test
js
sub
inc
and
jmp
xchg
sbb
push
dec
sub
sub
out
dec
pop
adc
test
stc
adc
sbb
aas
jmp
leave
add
sub
aam
pop
jne
in
outs
hlt
mov
pop
inc
fistp
cdq
add
test
jecxz
xor
sub
daa
in
rdpmc
and
xor
push
aad
mov
outs
ja
jmp
rcl
lea
pop
lahf
pop
push
pop
fisubr
pop
cmc
fnstcw
ds
xchg
xor
(bad)
retf
push
and
mov
and
xchg
loop
js
mov
mov
fs
xchg
jne
inc
add
aas
inc
movs
mov
outs
adc
ror
add
out
mov
mov
adc
xor
mov
mov
push
rol
sub
lods
aas
add
fs
sub
cmp
out
aad
add
cmp
mov
pop
inc
pusha
je
cmps
loopne
fild
sub
xchg
jle
sub
xlat
mov
jae
fstp
int
movs
jmp
xchg
pop
mov
outs
pop
loop
bnd
sub
xchg
std
stos
or
in
cmp
(bad)
mov
xlat
fisttp
pop
inc
lds
retf
cld
push
int3
jmp
mov
js
nop
daa
in
add
retf
hlt
xchg
jne
mov
scas
out
bound
xor
in
mov
imul
xchg
push
pop
jns
fbld
sar
and
into
mov
stos
jge
adc
gs
addr16
xlat
ins
enter
sahf
pushf
fwait
popa
scas
ins
lea
jg
gs
cmp
sbb
out
stos
outs
or
sahf
inc
xchg
call
in
or
cmp
xchg
dec
inc
ret
das
js
xchg
adc
ins
push
mov
sbb
out
cs
cdq
bound
icebp
jo
sub
imul
test
hlt
icebp
inc
movs
scas
sbb
add
sub
push
cmp
mov
sub
pop
jl
sbb
pushf
xor
jmp
sbb
cli
mov
lods
fiadd
sub
loope
les
hlt
inc
xor
inc
inc
dec
xchg
sub
pop
inc
fucom
mov
scas
adc
push
xchg
sar
(bad)
neg
inc
fs
out
movs
popa
repz
ror
push
mov
repz
icebp
xchg
fistp
retf
pop
xchg
push
adc
mov
outs
jecxz
xchg
mov
popa
out
xor
cmp
cwde
dec
out
sbb
sub
and
cmps
xchg
jmp
(bad)
sti
or
test
jmp
test
ss
cmps
xchg
das
pop
add
dec
inc
sbb
or
push
or
or
xchg
pop
adc
aas
aaa
or
inc
loopne
fxch
std
cmp
aas
out
mul
fwait
icebp
dec
das
ret
mov
sar
jge
jb
push
adc
mov
test
jns
jp
cmp
and
js
jge
repnz
inc
mov
push
sbb
xchg
push
lahf
jmp
(bad)
jb
call
xchg
(bad)
movs
fdiv
mov
xchg
fwait
sti
sbb
mov
sub
test
std
mov
test
adc
push
xor
xchg
(bad)
lods
sbb
pop
xor
inc
jns
(bad)
movs
mov
and
add
push
mov
stc
inc
jne
mov
cmp
dec
retf
ds
dec
out
ror
cmc
push
shl
scas
mov
shl
cdq
dec
push
std
mov
out
pop
clc
cmp
push
cmp
pusha
jnp
xlat
mov
push
imul
xor
int
neg
repz
dec
hlt
jno
add
icebp
jae
pop
stc
outs
mov
mov
fbld
dec
jns
hlt
lahf
pop
sbb
push
xchg
rcl
arpl
js
and
xlat
xchg
add
je
adc
dec
out
mov
jnp
mov
or
sbb
jno
and
int3
test
fistp
cs
adc
mov
(bad)
jae
mov
xlat
idiv
aas
cmp
mov
call
jo
es
or
jmp
mov
add
das
call
leave
cs
addr16
mov
out
push
xchg
xchg
xor
dec
out
jl
mov
or
bound
enter
adc
jmp
push
mov
inc
adc
mov
mov
jmp
out
sahf
lar
dec
jb
ja
mov
int
(bad)
sub
xor
jecxz
(bad)
xchg
out
pop
adc
sub
push
xchg
jg
adc
out
cmps
push
into
retf
jmp
mov
mov
mov
lahf
gs
mov
les
xchg
mov
inc
dec
adc
mov
mov
dec
ss
mov
pop
ret
jmp
test
xor
iret
(bad)
jecxz
pusha
sub
ret
pop
js
shl
and
mov
into
je
lods
fist
int3
clc
jecxz
mov
jo
(bad)
movs
mov
rol
add
sti
pop
rol
dec
cld
imul
test
xchg
add
stc
out
(bad)
push
cmp
imul
out
add
jl
adc
cli
mov
or
sbb
cmp
inc
scas
cmp
push
xchg
xor
out
mov
inc
add
cmp
sbb
inc
xor
jmp
fild
or
xchg
mov
inc
sub
aaa
mov
xor
out
dec
jl
cmps
xor
std
in
push
inc
or
cs
hlt
and
fsubr
cmps
sub
out
in
mov
cmps
(bad)
clc
push
lds
scas
mov
test
mov
fidiv
sub
add
mov
test
outs
mov
loop
and
add
ss
mov
inc
push
imul
jl
js
fadd
pop
test
out
add
push
add
sbb
stc
icebp
ret
push
pusha
or
pop
cdq
test
lahf
dec
sub
cld
dec
jnp
and
enter
es
jl
sbb
sub
add
add
pop
sub
fidiv
mov
xor
fistp
cmp
jns
ret
fwait
mov
and
cmp
es
jbe
sub
mov
div
stc
sub
ds
mov
out
sar
sbb
xor
ins
hlt
shr
mov
idiv
retf
clc
loopne
jg
xchg
ja
retf
loope
(bad)
loopne
out
inc
popf
jbe
out
pop
pop
hlt
mov
adc
jl
cld
jp
cmp
and
sti
hlt
push
fs
mov
outs
sub
ror
mov
stos
cmp
in
pushf
pop
cwde
mov
pushf
fld
imul
jne
ins
outs
sub
mov
push
mov
mov
jge
lods
out
retf
call
jmp
stos
hlt
push
std
dec
push
xchg
mov
or
mov
pop
sbb
xor
repnz
or
mov
inc
movs
out
neg
dec
icebp
out
retf
cdq
lahf
push
dec
imul
push
addr16
mov
sbb
fst
scas
xchg
push
jno
aam
lock
xor
inc
adc
pop
jo
fwait
mov
les
cmps
ins
jecxz
pop
int
xor
test
push
(bad)
imul
push
out
fs
popa
(bad)
ficomp
mov
mov
cli
push
das
cdq
int
jecxz
sub
into
xchg
repz
mov
mov
mov
rcl
or
adc
sbb
cmps
adc
mov
lock
push
dec
ror
(bad)
xchg
mov
or
out
int
inc
stos
sub
pop
data16
sbb
and
pushf
ret
pushf
mov
retf
cs
fisttp
fcomp
sub
dec
popa
jmp
stc
jmp
and
xor
jmp
repnz
movs
test
fucomi
cmp
imul
cli
repnz
and
mov
data16
ins
inc
jae
mov
dec
cs
mov
xor
dec
stc
pop
xchg
call
es
add
loope
ins
xchg
sub
adc
inc
aam
adc
push
adc
punpcklwd
dec
pop
mov
sub
test
xchg
cmp
gs
or
mov
sbb
sbb
ins
inc
and
mov
ficom
push
pop
add
inc
sub
retf
mov
cdq
aad
jle
cwde
push
mov
jae
adc
pusha
loope
mov
jo
rcl
xor
daa
test
mov
sets
in
dec
add
inc
imul
out
push
cmp
js
and
lds
out
jnp
xor
mov
dec
dec
shr
fild
test
fwait
or
(bad)
in
(bad)
retf
or
lea
mov
xchg
inc
sbb
jp
mov
mov
mov
xchg
xor
inc
mov
cli
cmps
sbb
outs
lods
mov
and
xor
retf
xor
push
les
ss
and
mov
mov
stos
pop
pop
pop
lods
lods
cmps
cmp
arpl
enter
aad
push
ds
rcr
inc
push
gs
jmp
cmp
push
icebp
(bad)
cmp
push
cld
lock
xlat
arpl
sti
adc
bound
(bad)
aam
rcl
mov
cdq
repz
xor
stc
sahf
in
add
movs
inc
fs
js
or
idiv
int
repnz
sbb
mov
jnp
test
sbb
inc
scas
jb
(bad)
or
iret
mov
jo
mov
add
lods
pop
test
xor
pop
or
loope
cs
out
pop
or
mov
clc
and
cmp
cmp
test
call
ror
iret
mov
jb
mov
sbb
xchg
push
in
repz
dec
sub
and
inc
pushf
mov
and
xor
psubd
adc
jns
(bad)
shl
dec
push
imul
mov
jle
dec
leave
cld
aad
scas
jl
xor
and
popf
push
std
pusha
xchg
gs
add
bnd
dec
xor
and
sub
mov
mov
push
xchg
add
sahf
pop
dec
mov
cmps
call
cmp
or
sbb
cmp
and
push
sub
xor
dec
mov
cmc
push
mov
cmp
jo
mov
mov
mov
ret
sti
dec
dec
jnp
int3
sbb
or
push
add
mov
fist
push
bound
repnz
pop
(bad)
push
and
cmp
out
aaa
out
xchg
(bad)
in
dec
pop
adc
jne
mov
aas
cld
aam
mov
inc
call
or
lods
mov
call
add
mov
mov
push
push
add
ja
dec
fwait
push
sbb
sub
sbb
nop
and
inc
hlt
les
push
int3
lahf
movs
fsubr
fadd
sub
cmp
pushf
sub
xchg
ds
pop
lahf
ror
lds
sub
dec
data16
dec
sar
push
fstp
or
push
push
cmps
cmp
push
xor
mov
(bad)
aam
test
and
cmp
(bad)
retf
nop
mov
inc
ins
or
loope
stc
xor
outs
test
or
addr16
gs
into
jp
jb
fld
in
and
push
out
dec
or
xchg
dec
clc
js
hlt
scas
pop
xchg
(bad)
pushf
sar
cld
ss
xor
stos
add
mov
and
lea
out
retf
add
inc
push
stos
push
and
add
(bad)
mov
scas
in
ja
sbb
les
xor
jmp
sar
ret
add
loopne
jecxz
and
(bad)
fnstsw
mov
movs
add
test
shr
jge
rcr
pusha
int
clc
cmp
out
jae
gs
nop
in
pop
aad
aaa
mov
jle
jmp
inc
cli
stc
add
jecxz
or
jecxz
sbb
inc
sub
push
lahf
mov
out
mov
pushf
addr16
xor
jge
ret
lea
call
sub
pop
and
pop
outs
xor
cli
and
lahf
and
sbb
push
push
and
jmp
outs
mov
(bad)
xor
out
fdiv
mov
pop
cmp
call
movs
jae
jo
dec
mov
pop
fstp
fisttp
cmp
inc
mov
or
adc
sbb
push
sub
into
mov
cmp
pop
repz
fstp
push
and
jno
shl
loop
jb
mov
mov
add
jne
push
adc
in
int3
shl
(bad)
push
xor
das
out
stos
jp
xchg
and
test
push
cmp
pop
test
movs
call
mov
sub
fnstcw
sub
mov
call
add
addr16
daa
adc
scas
jecxz
push
mov
in
lahf
and
out
fwait
xchg
pop
mov
xor
mov
cmps
mov
xchg
mov
inc
lock
cmp
arpl
pop
stos
sbb
and
scas
xlat
and
inc
push
int
es
sahf
iret
imul
sub
les
xlat
jmp
jmp
inc
rcr
into
inc
push
scas
jecxz
popf
jo
add
into
jmp
xor
xor
(bad)
fbld
pop
jle
fstp
(bad)
pop
or
shl
bound
adc
mov
test
adc
test
enter
mov
out
mov
xchg
pop
shl
dec
sbb
jb
inc
sbb
adc
cmps
fs
mov
and
fsubr
in
pop
or
fidiv
stos
adc
mov
loope
sbb
push
(bad)
jae
add
outs
mov
push
scas
dec
out
pop
lahf
mov
(bad)
push
pop
call
aad
or
mov
lahf
sub
add
dec
sub
mov
bnd
bound
xor
mov
xchg
fcmovnu
add
xchg
sbb
dec
add
jns
loop
aas
adc
xor
mov
(bad)
pop
mov
movs
cdq
stc
adc
stos
test
cmp
sbb
jns
(bad)
or
mov
or
mov
imul
in
ins
nop
xchg
jmp
daa
mov
pushf
mov
shr
inc
cmps
fld
dec
push
mov
lahf
mov
std
jmp
xchg
fcmovnbe
(bad)
popa
sbb
rcl
ja
enter
stos
outs
jle
leave
push
in
call
pusha
inc
push
xor
sbb
out
out
gs
mov
mov
push
xor
ja
js
je
and
or
ja
and
mov
sbb
xchg
push
cmps
fisubr
mov
or
icebp
jae
mov
cmp
cmp
cmps
mov
jo
lock
inc
push
rcl
shl
loopne
lahf
jl
mov
push
push
in
xchg
push
mov
cmp
jae
mov
inc
dec
ins
mov
inc
popf
scas
sar
push
push
lock
xchg
movs
jbe
scas
cmp
jmp
imul
outs
and
shl
mov
dec
sub
lds
pusha
and
retf
mov
add
es
test
mov
mov
loop
rcr
xor
rcl
push
pop
and
mov
scas
jae
out
movs
aad
pop
imul
xlat
pushf
loopne
aaa
retf
sbb
push
test
test
(bad)
push
lods
sahf
rol
cmps
xor
fldpi
add
test
popa
and
push
sbb
mov
push
mov
xchg
sub
jmp
add
dec
sbb
push
adc
inc
lods
mov
add
xchg
mov
int3
pop
mov
dec
mov
cwde
cmp
push
add
pop
out
bound
inc
mov
adc
sbb
mov
mov
jmp
ret
ds
or
loope
xlat
stc
aas
jo
cs
jp
mov
outs
call
sbb
shl
cs
test
popa
call
xor
outs
sbb
test
bnd
out
mov
adc
pop
gs
add
and
cmc
xor
fwait
idiv
add
adc
outs
cmp
shl
je
xor
fstp
push
jl
outs
mov
sub
fiadd
sub
sub
retf
jns
add
dec
out
sbb
fbstp
ds
inc
adc
or
ret
xor
dec
xchg
cmp
sub
shr
(bad)
scas
int
ficomp
aam
or
pusha
jbe
dec
out
popa
ja
sub
adc
mov
mov
add
fs
and
pop
mov
mov
daa
dec
sbb
pop
dec
rcl
in
scas
and
jns
mov
pop
sub
add
xlat
stos
fcmovnu
je
inc
push
xchg
or
aam
push
jg
adc
pop
sbb
aas
cmp
push
ret
lahf
aaa
arpl
or
add
jecxz
ret
test
pop
adc
shl
xchg
fwait
out
add
mov
iret
das
xchg
and
dec
pop
out
pop
das
xor
add
out
mov
mul
aad
in
js
cli
leave
pusha
xchg
mov
loop
jno
cmp
xchg
cwde
adc
scas
pop
xchg
stos
rol
scas
push
push
inc
jle
cmp
xlat
pop
out
arpl
jbe
or
pop
enter
movs
or
and
ss
or
push
test
mov
in
out
and
and
ror
jp
mov
es
pop
cmps
mov
push
push
pop
or
rcl
stos
out
in
push
in
mov
cli
xchg
push
scas
dec
leave
not
cli
jp
mov
pop
push
lds
stos
jg
aad
push
fmul
mov
(bad)
(bad)
mov
fwait
je
cld
in
ret
lods
das
xlat
lods
out
xlat
ror
adc
push
xor
sub
pop
daa
lahf
sbb
dec
push
test
sbb
mov
test
cmp
jmp
adc
cs
lock
imul
js
popa
cmp
mov
xchg
jmp
jmp
or
retf
sbb
nop
and
add
push
xor
push
jp
stc
mov
nop
mov
je
imul
ja
out
dec
cmps
jne
sub
or
sbb
ins
xor
fwait
mov
xchg
xor
ret
test
adc
cmps
push
ins
rol
rcl
jge
pop
(bad)
jns
mov
sbb
out
jmp
test
mov
ds
ins
in
aam
mov
ins
pop
add
xor
cld
or
imul
bound
jg
or
fnstsw
stos
aas
aam
(bad)
out
xor
push
(bad)
sub
push
and
stos
movs
mov
pop
ror
iret
mov
aam
and
fiadd
sbb
data16
fcomp
das
shl
xor
cmp
and
jmp
mov
xor
shr
add
loopne
lods
mov
or
dec
adc
sbb
add
iret
jge
pusha
call
je
jo
inc
enter
pop
push
fstp
adc
cld
or
sar
std
bound
jmp
lods
mov
fwait
lods
sub
retf
fsubp
clc
imul
adc
inc
scas
add
(bad)
mov
sar
sbb
test
add
jmp
push
gs
jb
ja
pushf
push
cmps
mov
test
scas
dec
or
stos
mov
dec
in
js
mov
stc
push
pusha
scas
out
xchg
aam
leave
aas
xchg
loop
iret
in
in
cmps
and
add
dec
and
(bad)
jmp
add
outs
tzcnt
add
fsubr
pop
dec
dec
mov
ret
cmc
test
mov
sbb
fdiv
xchg
pop
ins
clc
add
test
mov
jge
sub
cmc
sbb
pop
repz
div
pop
xor
push
mov
lds
cdq
push
pop
xlat
outs
retf
cs
jmp
dec
adc
jae
aaa
cmp
fbld
sar
sti
in
aas
and
dec
leave
jcxz
inc
adc
dec
dec
pop
retf
and
jb
mov
and
cmp
pop
sbb
ins
sti
dec
xor
dec
cld
cmp
sbb
pop
ins
pop
mov
and
les
sub
mov
xchg
sbb
int3
xchg
and
out
xchg
adc
(bad)
dec
inc
add
cmp
(bad)
mov
sbb
mov
stos
sub
fldcw
push
popf
fsub
data16
std
shr
sub
adc
lods
fldcw
cmc
in
aaa
adc
or
xor
jle
jbe
out
jl
fsub
test
or
xor
in
mov
call
cwde
xor
add
xor
mov
push
jo
stc
add
dec
aad
jno
in
ret
pop
repnz
fcmove
push
xchg
push
adc
lds
test
push
das
push
int3
jmp
jge
add
pop
dec
xchg
je
cmp
and
cli
outs
sub
fs
sub
repnz
and
adc
mov
xchg
adc
movs
or
(bad)
jge
movs
sub
sub
sbb
jle
ret
enter
cmp
xchg
and
pop
cdq
jge
jbe
icebp
sub
clc
les
enter
mov
pop
jecxz
pop
popa
dec
stos
adc
pop
mov
ret
test
mov
mov
mov
mov
adc
xchg
mov
inc
stos
in
and
pop
cmps
xor
dec
xor
lock
cdq
call
repz
mov
dec
(bad)
pop
and
xor
jbe
xchg
mov
xor
shl
mov
add
arpl
das
lea
repz
pop
out
push
sbb
repz
addr16
sub
repz
ins
xor
ret
mov
push
push
and
and
inc
mov
fcmovnbe
and
cmp
pop
stos
aad
daa
shl
shl
mov
dec
jae
or
inc
iret
mov
and
imul
cdq
push
enter
cmp
int
mov
and
cmp
ds
leave
push
jl
pop
iret
lods
push
mov
jp
sbb
arpl
bound
fdivr
xchg
adc
test
movs
xchg
xchg
es
call
jo
pop
aad
adc
fimul
dec
gs
xchg
ins
outs
mov
mov
stos
dec
jl
add
das
movs
mov
loope
or
sbb
jge
and
shl
sti
sbb
or
jns
xchg
out
loope
dec
retf
sub
test
rcl
mov
dec
adc
xchg
pop
shl
jmp
aad
lds
into
lds
push
leave
pop
jae
jecxz
unpcklps
mov
sub
cmc
push
test
int3
inc
push
inc
pop
cmp
dec
fld
mov
pandn
mov
xor
push
jbe
cmp
pop
test
out
jmp
jnp
fcmovnu
jae
in
ja
in
fstp
mov
fiadd
adc
gs
and
ins
jbe
push
jle
sbb
pop
rol
in
or
rol
cmp
loope
lock
popa
mov
data16
add
and
imul
idiv
in
hlt
mov
mov
xor
and
imul
shl
(bad)
jbe
fisub
aaa
int3
push
(bad)
adc
rcl
je
pushf
mov
push
xchg
jae
pop
push
inc
icebp
adc
rcl
sub
pop
sub
shr
repz
add
jg
cmps
jne
adc
adc
(bad)
int3
push
pop
imul
fnstcw
scas
bound
(bad)
in
cmp
div
xchg
jnp
dec
nop
es
cmp
push
std
cmp
int3
fsub
pop
adc
mov
test
adc
push
xchg
pusha
jl
fistp
xchg
push
lods
int3
mov
loopne
pusha
or
pushf
jge
xor
add
(bad)
push
xchg
ins
movs
pop
mov
dec
test
(bad)
push
xchg
clc
xchg
inc
sub
stos
jmp
lods
aas
lock
in
jle
mov
mov
xchg
stos
shl
addr16
jne
and
out
ss
pop
inc
idiv
(bad)
cli
pushf
aad
inc
shr
jo
add
arpl
mov
pushf
dec
pop
popf
leave
add
loope
mov
mov
mov
xchg
fidiv
aam
pushf
pop
push
mov
pop
cmp
aam
mov
js
into
retf
inc
inc
movs
dec
sbb
call
fstp
cmp
psraw
mov
cmps
scas
sub
xor
jb
push
cmp
pop
movs
hlt
ds
ins
mov
jb
sar
lds
ins
aas
mov
cli
fcmovnbe
arpl
not
je
out
or
std
xor
ja
pop
rol
jle
sub
icebp
stos
cwde
test
adc
movs
add
pcmpgtw
lahf
iret
(bad)
xor
enter
call
mov
mov
xor
jb
or
or
pop
jmp
add
stos
fistp
(bad)
fadd
nop
xor
sbb
les
cmps
or
in
call
in
scas
or
or
and
mov
call
cmp
pop
xchg
and
ret
popf
out
or
mov
dec
inc
pop
pop
cmp
aaa
xchg
fcom
call
and
xor
push
ins
pop
mov
nop
test
push
push
(bad)
mov
mov
test
outs
and
cmp
push
iret
(bad)
in
push
test
add
push
mov
movs
nop
iret
ds
out
repnz
and
push
aad
xor
adc
bound
push
mov
cmc
sahf
jp
fsubr
fadd
clc
jno
or
pop
cwde
pop
aas
xlat
movs
lds
mov
sub
xchg
sub
or
lds
mov
jno
call
fst
jo
inc
xor
fist
call
icebp
nop
pop
scas
jp
and
pop
sbb
bound
add
arpl
call
xor
sub
js
mov
cmc
inc
and
call
call
dec
pop
fcomp
lock
es
or
sub
test
pusha
dec
mov
pop
jnp
leave
lahf
mov
push
fidivr
in
sbb
adc
sub
nop
sbb
outs
popf
call
adc
shr
mov
jecxz
mov
add
fmul
aad
bound
iret
arpl
ss
xchg
rcl
cmp
stos
pop
cmc
std
mov
aas
and
je
(bad)
mov
in
movs
ins
ret
mov
sbb
in
cs
cmovnp
outs
daa
add
xor
xchg
dec
cmp
adc
or
cmp
xlat
sub
mov
pop
fld
mov
int
mov
sub
mul
(bad)
push
add
sbb
je
daa
pop
pusha
xor
adc
shl
xchg
fucomp
repz
js
inc
xor
pop
xchg
xchg
inc
movs
loopne
sti
ret
ficomp
in
mov
cmps
or
mov
div
fwait
sahf
mov
sub
lods
xor
mov
pop
ret
or
iret
scas
outs
pop
push
(bad)
jg
repz
loopne
inc
ret
addr16
mov
aad
lods
lds
out
into
ja
(bad)
inc
and
aam
fld
sub
xchg
xchg
fcmovne
sar
(bad)
xchg
sbb
cmp
pop
jmp
leave
pushf
sbb
out
or
shr
out
push
sbb
out
add
pop
scas
add
cld
cmps
pop
fist
lods
add
dec
aam
lock
jge
mov
mov
cmc
out
adc
popa
popf
cdq
xor
xlat
lds
xor
inc
jle
sub
enter
push
rcr
and
push
clc
jge
jmp
dec
cmp
out
xlat
es
mov
ds
sbb
mov
cdq
pop
sti
in
xchg
add
pop
fidivr
and
test
lock
xchg
(bad)
ds
xchg
(bad)
ja
test
adc
(bad)
dec
es
add
mov
(bad)
adc
dec
adc
push
gs
stos
(bad)
xlat
sbb
test
adc
cdq
mov
xor
adc
sbb
sbb
into
push
dec
push
or
sub
pop
push
pop
in
mov
ret
mov
aad
cmp
push
cli
leave
jae
and
inc
cmp
push
ret
dec
out
push
mov
xchg
push
inc
test
addr16
retf
pop
xchg
jns
loope
jnp
inc
pusha
ret
adc
fimul
mov
xchg
std
aad
adc
les
fwait
adc
dec
dec
mov
xchg
fdiv
xchg
rol
dec
dec
pop
push
(bad)
loope
mov
xor
cli
das
ss
mov
mov
push
cmc
fimul
rcl
inc
cli
test
retf
ret
rcr
arpl
addr16
sahf
fs
in
or
cdq
leave
mov
mov
out
ins
adc
mov
mov
add
les
das
es
mov
cmp
popf
and
fst
pop
and
push
(bad)
pop
lar
cmp
test
sub
mov
cwde
aam
jne
daa
sub
dec
dec
cld
retf
xchg
(bad)
jne
dec
inc
icebp
sub
loopne
pop
xchg
das
fimul
out
fimul
add
mov
test
cmp
mov
aad
push
xor
inc
push
cmp
stos
add
cld
cs
cmp
pop
enter
scas
push
cdq
mov
xchg
mov
mov
in
in
aad
and
pop
shl
jbe
sub
out
fmul
dec
pop
jnp
enter
inc
ret
sub
mov
pop
fs
add
push
retf
push
enter
sbb
outs
push
std
imul
mov
push
and
push
pop
cmps
cmps
mov
mov
xchg
(bad)
sub
das
add
jb
js
js
cli
pop
pop
shl
invd
jb
or
data16
mov
push
xchg
pop
jnp
stos
xchg
mov
repz
inc
and
popa
retf
imul
ret
loop
sbb
sub
adc
adc
inc
mov
ins
cld
or
in
das
mov
xor
pop
mov
sub
data16
push
mov
jecxz
repz
jns
jo
ds
pop
retf
test
mov
mov
or
repz
push
mov
sbb
mov
aas
loopne
mov
adc
lock
and
sub
and
in
push
lds
xor
stos
sar
jmp
imul
iret
mov
fcomip
mov
add
pusha
out
sar
rcl
add
or
push
sbb
frstor
push
into
mov
out
imul
movs
push
enter
pop
mov
jnp
(bad)
(bad)
aad
mov
sbb
jb
cmp
mov
mov
push
push
clc
in
shr
outs
fwait
push
pop
jmp
stc
inc
mov
(bad)
cmps
stc
and
xchg
add
mov
add
fs
push
or
dec
inc
mov
mov
pop
addr16
sub
xchg
das
scas
call
pop
mov
or
aaa
test
jne
xchg
ins
sbb
dec
sbb
outs
or
jae
ds
es
sub
add
ss
das
das
pop
fild
sub
pop
xchg
inc
jae
mov
scas
inc
aas
jp
sub
loop
xchg
inc
clc
mov
mov
pop
imul
or
test
outs
ins
cs
and
jg
pop
inc
xor
inc
int
dec
xchg
cwde
inc
frstor
scas
and
mov
bound
mov
cli
cmp
xchg
shl
sbb
jns
mov
mov
js
pop
(bad)
mov
fwait
scas
mov
sub
jecxz
fsubrp
cmp
jge
mov
adc
les
jmp
aas
repnz
std
cmps
mov
push
jmp
shl
and
movs
xchg
jnp
scas
add
xlat
shl
aam
addr16
sbb
std
cmps
int
cmp
stc
or
xor
cmp
adc
add
sub
pop
ficomp
xor
xlat
jg
ins
dec
shl
aad
leave
repz
leave
mov
push
cdq
mov
ret
mov
or
adc
aam
fbld
jns
popf
jecxz
dec
sub
and
das
call
gs
or
jge
sub
adc
push
xor
mov
(bad)
(bad)
push
sbb
sub
jp
fidivr
mov
mov
repnz
xchg
icebp
(bad)
(bad)
add
pop
push
mov
scas
mov
mov
mov
push
dec
sbb
cmp
rcr
iret
and
push
in
inc
imul
cld
fcom
fcmove
add
fdivr
jmp
aad
fdiv
dec
out
sub
js
shld
or
xor
xchg
stos
pop
jle
adc
(bad)
(bad)
and
mov
imul
aad
mov
imul
jnp
xchg
lock
mov
cld
in
sub
inc
mov
cwde
jl
(bad)
mov
push
add
movs
test
inc
xchg
jmp
pop
sub
outs
xchg
push
sbb
jge
bound
pop
jb
aaa
jbe
fs
add
xor
popa
mov
out
and
adc
sbb
add
ror
jg
pusha
scas
stc
jmp
push
mov
pop
xor
pop
aad
adc
ds
xchg
pop
jbe
sub
xchg
aas
cdq
pop
mov
sub
sub
inc
mov
imul
ret
icebp
psubsw
mov
mov
dec
mov
add
test
jmp
sub
xor
xor
test
jb
inc
cwde
int
jp
daa
add
js
fs
(bad)
ins
or
sub
xchg
xchg
pushf
ret
push
sub
iret
retf
inc
leave
jae
push
jo
inc
inc
mov
test
loopne
push
mov
mov
jge
mov
jns
sub
mov
or
call
call
and
jmp
push
fadd
sbb
mov
in
push
or
adc
jnp
adc
and
(bad)
ror
jae
imul
cdq
push
cmp
adc
sbb
add
xor
ja
sbb
ins
test
pop
or
mov
pop
cwde
inc
stc
jbe
jmp
ret
ins
mov
es
mov
icebp
sbb
rol
lock
fist
test
jmp
or
rcr
data16
adc
scas
popf
ret
dec
jl
mov
and
ds
div
inc
sub
fist
cmc
enter
icebp
inc
cs
dec
ins
xchg
out
jl
dec
ja
pushf
jge
or
mov
xchg
icebp
es
and
scas
shr
mov
dec
dec
daa
add
loopne
jl
and
imul
inc
dec
cmps
fs
xor
icebp
inc
jne
pusha
and
inc
fidiv
push
hlt
mov
call
les
aad
cmp
stos
imul
pop
jnp
and
lea
or
outs
outs
dec
hlt
cdq
sbb
adc
lea
icebp
mov
test
dec
cmp
xchg
adc
xchg
gs
inc
jo
cld
cmp
dec
rcr
add
iret
xor
outs
cmp
js
pop
mov
pop
dec
fst
lods
push
mov
dec
scas
sub
jbe
mov
call
push
(bad)
push
xchg
or
add
repz
cmps
pusha
movups
jae
cmc
sar
mov
fcomip
xchg
loope
adc
jl
in
xchg
test
adc
cmp
out
xchg
sar
call
xchg
loop
pop
outs
(bad)
cmp
adc
out
add
fiadd
ins
in
aaa
jl
loopne
and
push
xchg
xchg
push
adc
jnp
inc
push
call
gs
add
repz
jle
xchg
out
jle
cmc
fs
test
sub
enter
dec
xchg
adc
push
call
adc
cmp
dec
inc
xor
popa
sbb
or
mov
(bad)
pop
add
in
in
mov
mov
ja
mov
repnz
add
ss
(bad)
das
sbb
mov
inc
addr16
pop
jo
out
xchg
sbb
setb
outs
mov
add
pop
adc
jle
jno
adc
cmp
es
adc
inc
mov
and
loop
jae
fucomp
lods
popf
fld
xchg
sahf
dec
or
xchg
outs
sub
test
(bad)
rcl
mov
mov
dec
cmp
sub
dec
jbe
xor
pop
push
mov
sbb
mov
dec
sbb
push
or
clc
pop
fmul
mov
mov
add
jmp
xchg
fadd
retf
std
mov
fwait
mov
dec
xor
in
lods
sub
inc
mov
test
inc
push
add
sbb
mov
int3
xor
scas
inc
out
cmp
cmp
sbb
inc
fidivr
pop
push
jmp
out
in
lock
mov
pop
in
bound
lds
and
xchg
dec
pop
es
mov
push
(bad)
pop
shr
pop
rcl
pop
adc
cmpxchg
or
jle
loope
stos
xchg
inc
pop
inc
dec
fnsave
test
sbb
imul
(bad)
shl
sub
fdivr
pop
mov
retf
test
xchg
and
adc
xchg
shl
sbb
pop
jecxz
cli
adc
ins
lock
pop
enter
xchg
mov
sbb
push
xlat
push
sbb
ins
cmp
int
dec
xchg
mov
rcr
test
sbb
mov
jb
rol
or
scas
and
stos
(bad)
movs
or
fisttp
lahf
cmps
xlat
jno
and
inc
mov
xchg
or
add
icebp
mov
fmul
mov
and
test
sub
dec
sub
call
nop
pusha
jne
inc
xlat
inc
xchg
sbb
int3
dec
test
mov
dec
div
inc
add
pop
fistp
xlat
mov
pusha
mov
xor
xlat
cmc
mov
mov
stc
fist
xchg
sahf
cdq
jge
sti
xor
loopne
rcr
jmp
fwait
xchg
test
or
push
xor
sbb
stos
clc
xchg
add
lods
retf
movs
jbe
shl
es
fwait
ret
cmp
pop
xchg
xchg
or
lahf
or
mov
call
mov
jl
jmp
and
ror
cmps
movs
std
fiadd
aad
push
mov
in
test
jne
jp
enter
and
dec
dec
stos
cmp
push
push
mov
push
into
in
test
out
and
sub
retf
inc
or
mov
inc
int
fsub
popa
sbb
jno
sbb
mov
sahf
and
pop
enter
popa
repz
ss
shl
mov
ins
fs
mov
lods
cdq
inc
or
(bad)
sbb
mov
inc
xchg
rol
xlat
and
add
fistp
inc
cld
xor
daa
das
dec
lea
mov
jp
out
pop
cmp
jno
leave
aad
xor
jne
sbb
jge
cmp
and
push
idiv
inc
call
sub
repz
pop
sti
rcl
(bad)
ficom
and
pshufw
cdq
div
jae
icebp
fs
sbb
mov
and
cmp
ret
ja
push
xchg
xchg
neg
push
dec
fistp
dec
adc
mov
fdivr
test
rcl
xchg
jno
xor
pop
sbb
jp
push
inc
or
cmc
scas
js
dec
arpl
(bad)
repnz
or
gs
ror
sti
jmp
mov
icebp
in
push
idiv
ds
(bad)
jnp
mov
push
mov
pop
adc
or
data16
cmp
cmp
int
mov
nop
(bad)
jmp
js
cmc
adc
test
pushf
fs
ss
jmp
rol
inc
gs
xor
test
jmp
jmp
mov
ins
mov
xor
mov
lahf
icebp
or
loopne
sub
nop
sub
sbb
cdq
imul
pop
push
lock
loop
cmp
inc
popf
sbb
jnp
out
imul
fs
jp
dec
stos
leave
cdq
xchg
pop
ds
dec
not
and
adc
and
mov
push
ins
push
push
mov
mov
mov
xchg
or
inc
cmps
xchg
mov
inc
mov
mov
loop
in
mov
out
pop
dec
shr
outs
movs
imul
fs
out
dec
out
jmp
rcr
mov
push
test
pop
jno
or
cmp
dec
cmp
jmp
in
adc
inc
pop
xor
push
cmp
dec
xchg
ror
popa
sbb
push
leave
mov
in
push
cmps
stos
shl
retf
inc
daa
jns
and
fwait
movs
call
into
fwait
mov
out
fucom
xchg
mov
cwde
lock
fild
add
enter
test
xchg
add
test
ss
and
push
retf
mul
xchg
jp
es
mov
sahf
or
scas
mov
mov
les
cli
mov
mov
test
dec
ficomp
into
xor
add
cmp
jno
push
mov
mov
cmp
inc
mov
arpl
adc
mov
repnz
add
in
fmul
mov
fmulp
ins
outs
out
mov
stc
out
test
add
adc
cwde
inc
str
cli
call
outs
stc
mov
sbb
fs
mov
cmps
mov
or
push
sar
frstor
or
out
push
hlt
or
mov
adc
xchg
xor
in
adc
ja
adc
xchg
xor
retf
dec
ja
cmp
mov
(bad)
jbe
lahf
(bad)
mov
addr16
jno
xchg
neg
cs
dec
aaa
and
xchg
(bad)
jecxz
sub
stos
out
lods
xor
cmps
into
das
xor
sbb
(bad)
fidiv
sbb
repz
pop
inc
cmp
xchg
sub
test
adc
push
push
pop
inc
lock
(bad)
popf
(bad)
movs
or
arpl
push
and
and
and
xor
repnz
mov
and
test
sub
lea
xor
hlt
xor
es
jge
ins
retf
stos
retf
xchg
inc
mov
test
or
loopne
mov
dec
pop
sub
adc
xchg
addr16
jge
bnd
mov
jp
sbb
or
mov
adc
jne
sub
fs
int
shl
mov
std
lock
xor
in
sub
lea
mov
leave
sub
mov
scas
xor
scas
push
mov
gs
ins
clc
pusha
cwde
repz
dec
mov
in
das
push
leave
xchg
std
(bad)
push
movs
pop
nop
xchg
scas
cmp
cmps
jge
mov
neg
lods
sahf
or
and
fmulp
call
lahf
std
js
xchg
cmc
outs
dec
mul
pop
and
mov
(bad)
pop
and
xlat
ds
dec
(bad)
and
js
and
sub
sbb
cmp
dec
jmpw
int
dec
hlt
shl
out
ins
test
in
add
sbb
jno
or
xor
dec
jecxz
xor
ret
shl
test
lods
or
cwde
shl
out
cmp
popf
fsetpm(287
inc
and
fst
outs
cld
jo
pop
lahf
(bad)
push
test
int
loope
inc
fbld
xchg
fs
enter
mov
pop
leave
into
ret
shl
popf
sbb
mov
call
les
or
jnp
test
xor
ret
xchg
loopne
jge
imul
(bad)
icebp
or
push
ins
push
dec
je
pop
cdq
push
je
nop
je
and
sub
pushf
push
stos
or
mov
test
xchg
fimul
or
retf
mov
shr
fs
pusha
cmp
loope
cmp
fs
inc
add
fwait
mov
inc
ror
leave
xor
test
mov
or
int3
dec
or
loop
mov
ror
fsub
fidiv
or
int
loope
inc
or
nop
or
inc
pop
mov
(bad)
and
mov
sub
jne
test
pop
sbb
mov
icebp
fidiv
xchg
fisttp
icebp
jne
mov
clc
mov
xlat
pop
mov
xchg
iret
push
out
icebp
mov
dec
jno
pop
cmp
xchg
jno
icebp
out
shl
or
dec
mov
ja
lea
dec
jmp
pusha
sub
sti
sbb
(bad)
fisubr
mov
sub
test
and
scas
sub
cmc
adc
in
clc
fdivr
sub
xor
out
push
mov
(bad)
loope
mov
pop
(bad)
pop
jbe
jmp
shl
mov
(bad)
daa
cmp
add
sub
pushf
jle
mov
rdtsc
in
adc
xchg
cmp
push
int3
pop
mov
outs
cmp
mov
jne
sub
jo
test
add
dec
(bad)
xchg
out
test
adc
xchg
test
aaa
inc
ds
xor
dec
xor
in
mov
(bad)
jmp
mov
or
jmp
frstor
js
jns
sbb
and
add
adc
or
je
xchg
mov
mov
xlat
aas
jmp
mov
xchg
loop
js
sub
aaa
dec
loop
icebp
pop
std
push
das
ins
push
mov
ja
ja
dec
in
test
je
dec
imul
cmp
shl
dec
sub
push
xchg
and
jbe
ins
mov
adc
add
pop
push
cmp
dec
imul
leave
pop
out
mov
int3
cmp
jmp
mov
or
imul
cmp
fild
rcr
or
jge
sahf
xor
out
jp
loopne
jns
and
sti
add
mov
push
mov
mov
cmp
dec
mov
inc
mov
cdq
stos
inc
(bad)
cmps
call
push
sti
dec
xlat
cld
jmp
dec
stos
pop
repnz
imul
xchg
retf
pusha
pop
adc
inc
fwait
mov
cdq
xchg
push
jmp
mov
push
in
mov
loopne
and
or
(bad)
jnp
fsub
push
ret
dec
and
xchg
xchg
fild
dec
retf
stc
mov
vmovups
lods
mov
adc
cmp
test
xlat
in
sub
int3
cmps
ret
xlat
push
add
test
xchg
or
xchg
add
aam
ss
dec
mov
aam
mov
test
jecxz
minps
in
mov
imul
sti
dec
retf
call
stos
vpmaddwd
lods
in
inc
(bad)
sbb
cmps
mov
arpl
sub
xor
gs
push
xor
sbb
push
dec
popa
daa
dec
std
(bad)
cmp
mov
mov
push
inc
push
xchg
pop
popf
stc
push
in
mov
dec
fnstsw
xlat
loopne
jbe
bound
repnz
jno
stos
sub
pop
fnstcw
pop
mov
outs
(bad)
test
pop
add
je
xchg
leave
out
xchg
xchg
push
cdq
cli
lea
push
push
cdq
xchg
lods
fsub
inc
repz
dec
dec
cmp
mov
push
test
pusha
popa
mov
sbb
adc
fcomi
pop
and
in
shr
and
add
mov
imul
sub
jl
cdq
fmul
push
das
rcl
jne
sub
aaa
adc
gs
cmp
cmps
mov
cmp
and
fs
mov
pop
adc
xchg
pusha
xlat
mov
and
mov
xchg
fstp
stc
shr
scas
jmp
repnz
int3
dec
ss
dec
and
repz
jmp
out
shl
cmp
popa
jge
pushf
sub
lahf
push
jg
out
sub
test
jecxz
aaa
cmp
cmp
shl
push
cli
cli
in
dec
adc
dec
xlat
(bad)
push
in
div
mov
xchg
inc
arpl
jae
(bad)
popf
push
cmps
xor
(bad)
pop
out
cld
cmps
ds
icebp
xchg
xor
push
rcl
pop
adc
add
popf
sub
add
mov
shl
push
movs
sahf
inc
rcl
sub
bound
jmp
loop
js
or
push
push
(bad)
arpl
enter
xchg
xchg
inc
mov
rcl
push
xor
pop
imul
out
cmp
add
push
sar
pop
push
and
stos
jecxz
(bad)
push
test
(bad)
xor
pop
xchg
cmps
mov
fstp
outs
dec
xchg
push
nop
xchg
jbe
pop
std
aaa
fs
push
in
les
cs
pop
mov
cmp
inc
pop
and
iret
(bad)
aad
cmp
test
movs
rol
call
mov
sbb
xchg
aas
loopne
idiv
lock
dec
ss
push
xchg
lods
xor
and
cs
retf
shr
sub
add
movs
aad
fnstenv
stos
mov
xlat
push
dec
shr
lea
cwde
(bad)
push
les
dec
mov
(bad)
adc
sbb
lods
into
cmp
sbb
in
test
fiadd
int
movs
cmp
sbb
loope
or
out
cmp
jo
pusha
pop
lods
movs
aas
and
bound
mov
add
xor
sahf
pop
mov
add
jmp
call
jo
inc
xor
bound
pop
mov
jle
sub
ds
cdq
mov
test
sbb
mov
fild
lock
mov
and
fisttp
jp
mov
jl
pop
adc
mov
adc
movs
adc
movs
add
fist
mov
lods
push
pop
(bad)
push
ja
sbb
push
(bad)
sub
fcom
mov
cmp
jg
xchg
push
xchg
inc
or
imul
pop
shl
pop
std
fcomp
fcomp
or
ficom
mov
loop
ret
in
ss
cld
jmp
mov
scas
sbb
cmc
or
xchg
outs
cld
inc
xchg
cmp
mov
sti
(bad)
stos
rol
je
je
push
push
call
and
add
dec
fild
fcmove
popf
mov
leave
into
cwde
sub
mov
adc
test
inc
or
enter
sar
jl
push
ss
xchg
aas
pop
movs
(bad)
cmp
add
adc
pop
xor
das
in
shl
pop
iret
comiss
xor
test
cwde
inc
int
ud2
xchg
cmp
cmc
add
xchg
out
push
jge
ret
or
daa
leave
dec
push
dec
push
fsub
jecxz
cmp
sub
test
addr16
push
inc
xchg
aad
pop
neg
sub
leave
pop
fidivr
mov
gs
or
cli
and
shl
out
sub
sbb
sbb
or
cs
pop
cmp
aaa
gs
mov
jae
xlat
xchg
jecxz
xchg
xchg
ins
fisttp
outs
mov
or
das
mov
rol
(bad)
pop
ds
retf
jle
adc
and
cdq
enter
adc
cdq
je
(bad)
ss
cmp
gs
outs
gs
iret
ficom
icebp
cwde
ins
jnp
add
sbb
stos
popf
pop
ret
iret
jnp
in
jmp
jg
cmp
xchg
push
mov
mov
test
dec
cmp
es
leave
push
sti
test
test
dec
xchg
mov
push
fisubr
inc
and
movs
call
xchg
pop
dec
adc
sub
pop
cmc
popf
repz
popa
xor
push
jg
push
sub
sbb
xor
call
jns
arpl
jae
js
(bad)
adc
hlt
mov
sub
and
jmp
add
push
inc
xor
xchg
aam
pop
cmps
out
lahf
sbb
adc
cld
mov
imul
jge
aaa
or
movs
or
rcl
call
ret
push
ins
data16
or
fwait
inc
aam
cld
cmp
push
les
cmp
cmp
pop
repnz
xor
fild
call
add
scas
sbb
pop
jg
sbb
sub
jl
sar
cld
fisttp
push
adc
std
add
and
sbb
fstp
nop
test
mov
in
push
sbb
sahf
jae
(bad)
ins
sub
jp
mov
cmc
xchg
stos
test
push
and
cmp
xchg
mov
das
mov
sbb
pop
mov
fs
(bad)
mov
dec
push
mov
mov
xchg
cmp
fnstsw
pop
loope
leave
inc
push
jno
add
mov
mov
push
fld
inc
mov
xchg
jp
push
adc
imul
pop
lods
(bad)
aad
mov
arpl
mov
scas
lods
sbb
retf
mov
test
pushf
add
lock
inc
shr
loop
cs
mov
dec
lods
fdivr
or
push
aad
fcom
ins
push
xchg
mov
pusha
dec
stc
and
xchg
xchg
call
inc
or
cli
adc
js
mov
xchg
call
sbb
mov
stos
shl
sti
pop
adc
imul
push
in
inc
jmp
xchg
test
dec
ret
cmp
loopne
and
call
int3
ins
rcr
adc
xchg
dec
loopne
pushf
in
fadd
mov
fwait
jl
mov
cdq
lods
xchg
jp
mov
jno
and
sbb
imul
pop
or
(bad)
and
pop
xor
add
fs
push
push
fldenv
push
mov
cmc
(bad)
mov
fdivr
sbb
out
or
lea
add
(bad)
lahf
jb
xchg
(bad)
int
push
cs
movs
lock
aad
dec
add
jo
cld
(bad)
cmps
and
adc
xlat
out
lock
ret
cs
lea
(bad)
pop
dec
inc
js
push
xchg
and
dec
pop
shl
mov
test
int3
neg
stos
jecxz
sub
and
loopne
mov
sbb
push
cmp
std
adc
mov
fild
mov
shl
xchg
xchg
add
les
pop
int3
loop
dec
fist
xchg
mov
sub
ret
pop
inc
retf
sub
arpl
movs
movs
adc
adc
sbb
xchg
dec
mov
xor
lods
inc
mov
pop
xor
jbe
out
jmp
popa
sbb
inc
in
push
jb
mov
xchg
stc
fwait
push
ja
movs
jle
sub
neg
(bad)
jmp
push
cli
add
or
cmp
fisubr
and
gs
in
fiadd
mov
jns
popa
mov
sbb
aas
cmp
jge
arpl
add
cli
mov
mov
stc
cmps
jecxz
mov
lods
or
pop
xchg
retf
mov
xchg
repz
and
cmp
les
leave
repz
add
pop
fistp
test
fs
dec
in
fbstp
cmp
clc
repz
and
das
fs
icebp
icebp
dec
jns
call
mov
ss
arpl
test
sar
dec
jns
adc
pop
ins
out
mov
icebp
mov
dec
adc
mov
fimul
lods
mov
cdq
loope
lahf
pop
add
retf
stos
(bad)
mov
ror
push
test
in
and
xchg
cmp
or
cmp
popf
daa
dec
sbb
or
inc
aad
popa
jl
xor
cmp
jp
iret
imul
shl
jp
cmps
xchg
add
lea
mov
je
in
nop
xchg
and
stc
jb
add
rcl
out
jge
gs
iret
sub
or
push
dec
xlat
mov
scas
mov
push
sti
fidiv
pop
inc
test
push
jns
lock
jmp
fsub
xchg
xchg
and
push
js
add
or
mov
push
js
sub
scas
add
mov
into
outs
add
addr16
push
js
fnstsw
lahf
mov
outs
push
pusha
fs
je
mov
cdq
dec
arpl
xchg
fisttp
ret
arpl
rcr
xor
shr
fwait
push
in
jns
cmc
out
jbe
ret
sbb
stos
dec
jg
cmp
hlt
js
pop
js
shr
inc
push
pusha
sti
(bad)
jle
ds
iret
add
es
iret
(bad)
and
jmp
jmp
ret
bound
jg
sbb
out
and
mov
call
push
pop
in
dec
mov
mov
push
inc
xor
dec
je
mov
jl
ja
mov
sub
aam
pop
repnz
cdq
sar
out
push
mov
cmp
jecxz
jae
rol
inc
mov
(bad)
mul
jmp
std
neg
xor
test
jno
dec
out
push
or
jae
pop
pop
adc
xchg
leave
jmp
cdq
adc
xor
or
stos
and
inc
add
or
xor
mov
out
sbb
(bad)
inc
sbb
and
mov
jo
retf
inc
push
mov
mov
cmp
inc
adc
sub
pushf
sti
sub
mov
jge
fadd
aaa
test
push
das
jle
nop
sub
mov
push
mov
mov
hlt
ret
pop
arpl
test
cmp
xchg
pop
pop
test
adc
inc
rcr
jp
stc
stc
xlat
mov
or
mov
inc
mov
cmp
xor
push
sub
cmp
data16
(bad)
rol
jne
xchg
mov
jae
adc
mov
xchg
lahf
cmp
xchg
xchg
and
gs
mov
int
jmp
(bad)
cmp
jne
pop
gs
in
sbb
inc
daa
or
fdiv
clc
bound
mov
scas
jb
sbb
inc
and
fwait
add
sub
lock
es
popa
addr16
xchg
adc
out
inc
outs
jp
jnp
fstp
pop
ficom
pop
sbb
mov
jle
sub
add
and
xchg
xchg
cmc
sbb
out
pop
imul
mov
sub
push
popa
ror
pop
inc
cld
mov
mov
push
aaa
mov
sbb
sbb
iret
dec
dec
test
addr16
adc
pushf
xchg
bound
sub
cmp
sbb
and
pop
pop
mov
mov
jmp
aaa
mov
adc
es
(bad)
mov
jle
dec
movs
loop
rcl
push
inc
push
pop
sbb
ret
cli
int3
fisttp
pop
xor
jb
stos
lea
cmp
xchg
addr16
and
mov
fidiv
imul
jecxz
sar
inc
loop
push
jmp
inc
popf
dec
fmulp
lods
daa
pop
cdq
iret
in
xchg
xor
xchg
stc
cmps
xor
xchg
jnp
std
xchg
xchg
adc
stos
mov
(bad)
add
rep
outs
add
and
mov
je
in
pop
jge
iret
mov
jnp
xchg
mov
mov
(bad)
js
push
xchg
jno
jecxz
xchg
xor
sbb
pop
push
jae
and
ss
and
mov
or
adc
sub
xchg
popf
out
std
sub
rol
icebp
int3
add
or
js
loope
in
daa
lods
adc
(bad)
cmps
leave
dec
xlat
mov
add
fild
jmp
addr16
scas
sbb
or
inc
test
pop
das
mov
mov
sub
repz
js
xlat
mov
out
(bad)
iret
dec
pop
adc
lock
cs
in
lods
add
loop
inc
cld
sub
and
pusha
add
scas
call
(bad)
les
call
dec
push
fcomip
test
cmp
scas
shr
ins
mov
xchg
int
cmps
pushf
test
fiadd
push
sbb
imul
push
cld
mov
cld
cmps
adc
(bad)
repnz
mov
aaa
pop
sbb
pop
jle
and
jae
fld
xchg
fidivr
inc
test
jmp
sub
mov
mov
pop
outs
xchg
or
call
pop
aam
jecxz
dec
or
dec
iret
fisub
fsubp
clc
or
ss
adc
loop
and
jmp
push
dec
jge
add
mov
out
mov
dec
ss
jecxz
sub
pop
ror
mov
imul
outs
cdq
fimul
loope
pop
pop
xchg
sti
popa
dec
xor
or
fwait
outs
cmc
outs
jb
xchg
mov
jg
les
(bad)
imul
pusha
retf
(bad)
cdq
mov
jl
les
(bad)
sub
fwait
pop
mov
(bad)
fsub
ret
inc
mov
and
aas
jge
cdq
aas
std
jle
lahf
clc
aas
jle
ret
xchg
lock
js
or
mov
cli
int3
add
or
(bad)
loopne
xlat
arpl
mov
in
inc
sahf
aaa
pop
push
loopne
les
jmp
push
xchg
gs
cmps
mov
aad
leave
out
pop
push
jb
fsub
aad
mov
fwait
sbb
stc
push
fs
test
xchg
cmp
and
mov
aam
test
jbe
(bad)
ds
mov
enter
icebp
jp
pop
mov
adc
push
cli
push
stos
mov
fmul
nop
or
movs
sbb
inc
jp
or
jg
push
(bad)
sar
sbb
sub
jnp
fs
pop
test
mov
mov
jecxz
in
fdiv
xlat
retf
adc
xchg
popa
inc
loop
cmps
fdiv
scas
sbb
adc
je
pop
or
push
cdq
push
mov
mov
cmp
and
(bad)
leave
dec
push
je
inc
adc
lds
dec
in
dec
inc
inc
mov
shl
sti
add
icebp
popa
in
pop
lea
sub
lods
jmp
mov
add
pop
jnp
in
movs
sub
xchg
mov
xchg
sbb
inc
cmp
mov
jl
ins
imul
retf
out
jl
fst
or
xor
add
enter
in
loop
fcom
push
hlt
or
jg
mov
jl
pusha
sbb
nop
rol
sub
mov
and
push
cmp
inc
mov
les
push
lahf
pop
cwde
adc
stos
sbb
adc
inc
xor
dec
std
loope
push
add
push
pop
push
inc
xchg
lods
and
adc
ds
and
push
xlat
int3
mov
sub
jge
push
or
popa
in
out
in
repnz
pop
in
cmps
cld
cwde
das
sbb
cdq
jb
repz
fisttp
(bad)
ror
xchg
cld
dec
ror
mov
push
mov
mov
ins
ds
push
push
push
test
pop
scas
jle
movs
popf
in
jp
dec
cmp
scas
mov
ficomp
mov
adc
push
dec
mov
js
(bad)
int
loop
jb
scas
xchg
push
and
jo
inc
leave
dec
add
outs
aam
outs
mov
pop
retf
push
xchg
lahf
push
mov
fsub
ja
or
push
fimul
cmp
cld
cmp
repz
into
test
ror
retf
mov
mov
sbb
jecxz
cld
mov
dec
push
pop
push
mov
out
pop
push
pop
push
je
xor
std
retf
push
sub
pusha
add
test
sub
int3
enter
(bad)
mov
inc
clc
mov
pop
sub
jno
add
retf
stc
data16
pusha
mov
dec
daa
xchg
movs
push
pop
pop
mov
fild
adc
fistp
cmps
stc
mov
bound
iret
jmp
inc
hlt
cmp
cmp
sbb
imul
pusha
jl
retf
mov
stos
pop
pop
mov
mov
add
std
push
cld
ror
push
mov
and
(bad)
pop
mov
push
sub
sbb
xor
addr16
mov
clc
adc
push
arpl
call
test
or
and
retf
cmc
mov
cli
dec
jns
pop
mov
push
pop
pop
repnz
pop
xchg
fistp
dec
inc
inc
adc
jle
lea
sbb
mov
mov
dec
popf
ds
clc
(bad)
fnstcw
loopne
ret
shr
imul
(bad)
jne
jge
dec
xchg
(bad)
mov
inc
in
sub
call
cs
jl
inc
adc
or
enter
daa
push
push
add
jge
sub
mov
loop
push
test
pushf
leave
outs
(bad)
jbe
inc
cmp
add
movs
scas
stc
scas
scas
js
xchg
mov
add
fstp
test
gs
adc
xchg
fwait
pop
rol
xor
or
inc
sti
inc
pop
mov
or
scas
sbb
pop
sub
push
lock
mov
cmp
outs
pusha
cwde
aad
sub
add
icebp
add
inc
add
mov
dec
test
jmp
xor
adc
call
retf
add
shr
dec
or
cdq
mov
fnstenv
push
cld
lds
test
inc
retf
cs
pop
dec
es
jg
sti
push
fdiv
pop
cld
push
inc
jo
jae
and
jmp
hlt
adc
fidivr
fcom
mov
bnd
(bad)
dec
pop
lods
ror
push
movs
pop
pusha
outs
and
ins
dec
loop
(bad)
hlt
sub
push
fsub
(bad)
lea
fiadd
int3
lock
cmps
and
movs
sub
icebp
or
or
cmps
mov
xchg
not
jb
fild
cmp
sahf
out
inc
shl
cwde
or
fdiv
(bad)
cmp
icebp
into
das
imul
jno
popf
into
mov
dec
popa
inc
add
ss
xchg
mov
pop
daa
inc
jecxz
stos
adc
(bad)
lahf
dec
out
fdivp
jle
add
mov
hlt
xor
mov
popa
xchg
lods
sti
and
or
mov
cmp
arpl
stc
arpl
loopne
test
pop
cwde
mov
dec
test
dec
aas
mov
stos
nop
sbb
pop
pop
repnz
or
pop
dec
ds
es
xor
or
movs
mov
jg
dec
ror
lods
cs
setb
test
mov
push
repz
mov
(bad)
sub
sub
jns
jae
cmp
push
jecxz
cdq
or
sub
or
jb
pop
cwde
ror
loopne
xchg
cmc
das
sbb
popa
fucomp
js
call
fmul
out
push
loop
or
dec
add
imul
fisttp
sbb
xor
add
xor
sub
xchg
add
cmps
in
imul
sahf
inc
lahf
fisubr
xor
fisubr
int
xchg
in
sub
test
lock
mov
push
retf
fisubr
pop
cli
jp
lea
mov
push
mov
push
mov
imul
pop
sbb
shl
pushf
sti
sbb
cmp
cmp
iret
jb
inc
int
pop
sahf
add
mov
in
and
mov
call
pop
retf
ror
pop
lods
ror
fcmovb
jecxz
pusha
addr16
sti
mov
icebp
(bad)
push
out
pop
xor
int
mov
add
mov
push
outs
stc
fcmovu
in
fwait
pop
in
in
or
lds
mov
cdq
icebp
mov
mov
jb
out
or
scas
xor
inc
test
and
pop
jno
ret
add
cdq
das
fild
pop
adc
pop
je
loop
ret
dec
mov
dec
ror
dec
out
sbb
cs
data16
adc
addr16
lock
push
mov
mov
xlat
jo
inc
mov
aas
pop
mov
dec
adc
ret
mov
inc
dec
mov
pop
es
enter
adc
aad
jp
fwait
rol
cmp
dec
add
jge
(bad)
das
inc
add
ss
xlat
jmp
and
xchg
cmps
test
retf
adc
cmp
pop
imul
push
rcl
int
jnp
or
sti
mov
cmp
jnp
mov
push
xchg
imul
xor
cmp
lds
test
and
ficom
jbe
jb
cdq
push
out
and
mov
stc
inc
mov
ficomp
int
sbb
adc
stos
(bad)
test
add
pop
cwde
or
push
test
je
sbb
inc
fld
jg
xlat
sub
xchg
or
add
dec
mov
imul
mov
icebp
and
outs
jns
jbe
jb
mov
leave
sbb
jg
ficom
imul
rcl
mov
xchg
outs
daa
(bad)
dec
mov
fwait
icebp
int3
jmp
sub
lds
xchg
mov
pusha
push
xor
and
call
push
loopne
inc
push
imul
enter
das
xor
mov
xchg
cwde
add
push
mov
aas
jp
jns
dec
or
push
mov
xchg
fild
push
or
sub
test
jb
mov
or
cmp
movs
dec
adc
stos
out
gs
leave
ret
mov
fwait
xor
mov
jno
mov
add
fsubr
xchg
mov
aaa
fwait
adc
repz
ret
sbb
cmp
dec
ss
rcl
loope
sub
pusha
lea
xor
mov
(bad)
hlt
outs
fidivr
pop
out
lods
adc
in
pop
js
mov
(bad)
cmp
jo
std
sub
mov
shr
adc
cmp
scas
fst
add
mov
test
enter
(bad)
sbb
jns
inc
nop
adc
xor
push
(bad)
sub
mov
jle
inc
add
dec
loopne
mov
shr
popa
mov
test
dec
adc
xor
daa
je
mov
and
xchg
movs
dec
jecxz
movs
jecxz
pop
das
or
test
jns
mov
aam
inc
xor
sub
bound
push
je
enter
div
xchg
lea
test
mov
es
lahf
xor
data16
ds
hlt
bound
jl
(bad)
sbb
lods
(bad)
mov
dec
fs
fdiv
sbb
(bad)
int3
pusha
in
push
pop
ja
cmp
int
rcr
fst
or
pusha
jmp
mov
loopne
xchg
(bad)
loop
push
fisubr
fst
daa
pop
adc
jp
int3
sbb
xchg
sbb
push
lahf
dec
lea
(bad)
and
mov
push
push
sub
xchg
xor
repnz
call
jmp
scas
dec
jmp
jns
(bad)
in
xlat
and
or
in
mov
test
cmp
pop
out
mov
hlt
dec
sub
(bad)
mov
push
inc
mov
jns
mov
cmp
adc
nop
sub
ret
ror
push
(bad)
pop
lds
stc
popa
pop
mov
dec
fdivr
jmp
push
ins
(bad)
cmc
xchg
leave
sbb
sbb
lahf
stc
dec
imul
jae
je
not
test
call
or
mov
xchg
mov
sub
inc
in
aas
and
das
das
push
add
mov
ss
repnz
xchg
(bad)
and
out
ss
rcl
cmp
std
inc
aam
repnz
adc
jbe
jle
adc
xchg
push
scas
mov
inc
outs
jno
mov
mov
and
imul
xchg
push
movs
mov
push
push
jae
mov
and
inc
xor
push
xor
dec
xor
dec
sahf
inc
ins
xor
inc
mov
xchg
mov
mov
and
mov
lods
cmp
mov
lods
xchg
popa
dec
xchg
stos
xchg
les
sub
in
mov
cmp
sub
stos
ss
test
bound
(bad)
cli
add
iret
mov
mov
stc
rcr
adc
arpl
test
aam
sbb
cmp
push
pop
push
fs
pop
and
sar
xchg
mov
sbb
dec
jp
sti
mov
sahf
or
popf
inc
push
push
ret
in
xchg
lds
repz
mov
daa
push
aam
cmp
dec
mov
cmps
dec
sbb
in
aad
and
loop
aaa
test
bound
fidiv
mov
lea
adc
xchg
cmp
jnp
xchg
imul
(bad)
loop
inc
neg
popf
mov
pop
push
(bad)
or
or
xchg
icebp
xor
mov
cmp
fsubr
push
jmp
movs
push
inc
or
inc
int3
aam
sbb
ins
ret
or
pop
iret
mov
mov
(bad)
stos
mov
push
ds
stos
cmp
test
lea
js
mov
arpl
jne
fist
mov
mov
ins
sbb
call
dec
loop
and
iret
jecxz
(bad)
pop
push
repnz
pop
cmp
push
jmp
call
mov
xchg
mov
jns
je
mov
mov
popf
dec
inc
jle
mov
inc
dec
mov
fidiv
inc
mov
and
xor
stos
(bad)
in
fsubp
int3
in
movs
adc
sti
jg
pop
push
imul
(bad)
xor
or
out
retf
push
ficom
popa
xor
cmc
mov
in
stc
cmp
add
bound
pop
jle
sbb
imul
mov
addr16
aad
movs
sbb
ja
nop
ror
pop
cli
int
mov
dec
xchg
mov
jo
and
pop
and
(bad)
rol
pop
bound
lods
ja
adc
push
and
push
sbb
aaa
outs
push
push
mov
jo
scas
imul
scas
inc
mov
or
push
mov
or
pop
sub
jns
arpl
scas
push
mov
movs
loope
ins
(bad)
cmc
cmps
popf
js
aas
sbb
jecxz
or
les
dec
mov
xchg
in
sti
sub
iret
add
popf
dec
ret
sbb
dec
out
in
pop
nop
je
out
adc
push
xlat
int3
jecxz
push
dec
fwait
bound
xor
leave
in
cmp
test
data16
xchg
jge
dec
sbb
lods
dec
in
jge
cmc
loope
inc
and
xchg
lods
test
nop
(bad)
cmp
jno
push
fldcw
(bad)
sub
pop
mov
in
js
inc
xlat
pushf
dec
loopne
(bad)
fwait
sub
adc
mov
or
jle
cdq
ja
ror
scas
ins
sar
sub
rol
sbb
adc
loopne
sysret
retf
idiv
adc
push
xchg
pop
lods
pop
aaa
daa
popw
stos
and
sar
ret
jbe
cmp
cdq
fcmovne
jbe
lahf
push
dec
mov
sahf
sub
push
fldcw
das
mov
dec
sbb
rcr
add
adc
(bad)
stos
arpl
jmp
call
ja
stos
push
mov
out
in
jge
xor
in
test
lea
cmp
sbb
in
das
or
jno
aas
inc
jmp
fdiv
mov
mov
nop
out
neg
sahf
sbb
cmp
push
xor
aad
cmp
test
test
bound
add
push
shl
inc
cmp
int3
fld
aas
pop
mov
push
mov
xor
mov
out
or
mov
ins
cdq
pop
mov
cmp
xchg
(bad)
cmc
fst
stos
xor
call
pop
cwde
sub
adc
in
pop
fidiv
pop
and
inc
jno
push
sbb
test
mov
push
cmp
call
in
sbb
addr16
xlat
data16
mov
mov
fcom
aas
(bad)
(bad)
pop
cli
xchg
popf
inc
shl
cmp
or
call
mov
pop
adc
xchg
mov
in
cli
clc
sbb
rol
jle
inc
sub
nop
shl
fnsave
pop
(bad)
sbb
es
cdq
repz
add
in
sub
test
mov
js
push
lds
dec
gs
add
into
fadd
adc
jno
out
cmp
inc
ret
add
mov
stos
jge
sub
(bad)
cmp
nop
in
in
fmul
jmp
adc
xchg
out
sbb
fidivr
std
sub
ror
test
jecxz
dec
test
stc
dec
out
(bad)
push
fcomi
cmovb
mov
sbb
or
movs
pop
not
sub
xchg
sahf
fwait
mov
addr16
xor
mov
pop
push
lahf
add
stc
cs
out
stos
movs
fs
xchg
jg
jg
and
mov
jg
push
fidivr
call
jmp
push
xor
data16
or
lods
sub
(bad)
xchg
(bad)
aad
push
pop
xchg
imul
adc
pop
dec
inc
mov
ins
cmp
sbb
cmp
mov
xor
shr
sbb
and
pop
mul
mov
inc
out
aad
push
push
js
es
emms
dec
and
pop
arpl
push
cmps
ficom
shl
mov
xchg
repnz
adc
jmp
(bad)
mov
or
stos
xchg
sbb
push
mov
cdq
mov
mov
stos
jmp
int
test
inc
jo
inc
cmp
(bad)
mov
jmp
push
(bad)
sub
mov
cmp
push
popa
shl
stc
fs
mov
ss
lahf
lock
fxch
icebp
mov
mov
lods
sbb
int
add
inc
jae
mov
ins
imul
inc
xchg
push
xor
das
push
jnp
fst
jb
sbb
adc
inc
fisub
or
(bad)
or
or
gs
xchg
ss
cmps
fcomi
popf
xor
mov
xlat
call
mov
add
inc
scas
sub
cld
sar
ja
fs
inc
test
sub
mov
sbb
adc
ds
push
aas
add
push
or
ja
push
imul
test
inc
push
ret
and
daa
inc
ja
jns
push
ss
push
cmp
pop
mov
nop
mov
repnz
inc
inc
adc
mov
daa
mov
loop
movs
xchg
cmp
fsubr
add
cmp
lods
pop
test
mov
aad
pop
test
xchg
out
jmp
mov
pop
sti
add
inc
dec
outs
jecxz
sub
mov
scas
(bad)
cdq
xchg
outs
xchg
cmp
sub
dec
add
sti
xor
and
jge
(bad)
jns
daa
jmp
xor
inc
movs
inc
xchg
pop
adc
das
shld
mov
lods
pop
xor
mov
iret
add
shl
dec
in
pop
sbb
bound
mov
mov
jge
push
cmp
dec
retf
(bad)
jno
mov
mov
cmp
mov
adc
(bad)
loopne
addr16
mov
gs
and
inc
mov
cmp
in
pop
push
fwait
retf
jns
lock
aaa
sub
adc
popa
and
xor
fidivr
test
retf
sub
inc
stc
js
jmp
sbb
mov
ret
or
adc
dec
popf
dec
mov
cmp
aad
adc
out
pop
cmps
or
or
arpl
adc
jmp
or
mov
fld
or
popf
cmp
add
push
mov
cdq
dec
mov
popf
(bad)
inc
xchg
mov
mov
add
jo
call
mov
dec
xchg
pusha
lods
mov
(bad)
cmps
inc
push
mov
adc
push
mov
pop
pusha
xchg
int3
push
pop
xor
pop
cmp
sbb
xchg
mul
aas
inc
mov
push
sub
jg
mov
push
add
or
jge
loope
fcom
(bad)
cld
xchg
int3
sahf
or
or
in
adc
jno
ret
int3
mov
mul
push
xor
dec
xchg
mov
repnz
sub
sub
fs
push
call
hlt
xor
inc
shl
rol
(bad)
xlat
cmp
adc
(bad)
jmp
stos
xor
fidiv
pop
arpl
ror
repnz
es
loop
jb
lods
sahf
add
stc
(bad)
ror
das
inc
inc
sbb
adc
fadd
ror
xchg
inc
jnp
mov
les
and
jp
sub
stos
hlt
into
pop
adc
sahf
cmp
sti
mov
xor
mov
in
push
das
add
lahf
jl
lods
test
xlat
mov
ds
jmp
xor
out
xchg
mov
xchg
or
inc
cli
xchg
jmp
adc
cli
loop
inc
repnz
and
push
push
aaa
mov
and
mov
push
jmp
retf
adc
clc
mov
adc
mov
pop
hlt
iret
lds
add
std
out
cwde
xlat
mov
adc
pop
test
cmp
adc
push
and
or
(bad)
fmulp
rcl
sbb
leave
cmp
(bad)
and
fsubr
cmp
jb
xor
retf
and
cmc
sbb
xchg
or
and
mov
fstp
cli
outs
pop
ja
inc
ret
inc
adc
pop
pop
out
mov
jmp
push
repz
cmp
sbb
fbstp
xchg
sbb
sub
call
out
jl
and
pop
mov
nop
jne
pop
mov
out
pop
clc
jl
mov
mul
gs
out
push
cmp
stos
jnp
mov
lds
out
ja
xchg
icebp
cmc
mov
adc
shr
cmp
sub
push
arpl
and
loop
xchg
xchg
mov
jnp
inc
cmp
adc
or
(bad)
adc
cmps
jbe
repz
(bad)
ret
repz
daa
xor
rcr
push
add
pushf
xor
outs
add
aas
sbb
fcmovb
mov
push
shl
xchg
mov
pop
mov
cld
iret
sub
scas
jmp
in
mov
ret
mov
and
aaa
xchg
xchg
js
jns
xor
aad
pop
push
sti
fld
cmps
pop
cmc
ins
dec
loopne
xor
div
ins
inc
mov
push
enter
jl
push
adc
retf
dec
or
adc
mov
jno
xchg
sbb
mov
cmps
in
or
jno
aad
dec
push
out
nop
push
sub
xlat
mov
dec
movs
inc
add
sub
not
prefetcht1
xchg
iret
icebp
dec
jg
cmp
jmp
pop
cmp
xchg
gs
inc
adc
iret
mov
jne
sub
and
imul
and
sub
stos
loop
stc
and
sbb
adc
(bad)
adc
fwait
test
sahf
add
mov
je
(bad)
jle
jbe
imul
sub
test
dec
rcr
add
leave
shl
adc
stos
add
push
push
inc
dec
(bad)
stc
jl
dec
rcl
scas
mov
rcr
pop
mov
imul
std
loopne
mov
mov
jmp
pushf
cmc
fild
test
or
cmp
xchg
and
sub
add
xchg
xchg
xor
loopne
mov
xchg
gs
dec
fdivr
push
mov
std
mov
fisttp
std
lods
shl
repnz
sbb
loop
xor
jbe
xor
mov
stos
call
data16
mov
rcl
fs
out
aaa
add
scas
jae
icebp
sub
push
repz
mov
shl
sbb
nop
je
js
mov
dec
je
adc
jmp
push
mov
pop
mov
jne
repz
push
adc
out
pop
in
aas
dec
out
adc
xchg
adc
movs
sbb
shr
push
js
mov
scas
fdiv
adc
inc
(bad)
pop
cmp
shl
inc
inc
mov
es
clc
mov
ror
cdq
mov
das
add
addr16
jne
pop
loopne
ins
mov
sub
out
push
cwde
ins
mov
cmps
call
loopne
jmp
mov
and
test
cmp
add
push
out
cmps
adc
imul
(bad)
xlat
movs
jge
stos
inc
ja
inc
pop
mov
add
(bad)
cdq
mov
icebp
cs
adc
pop
fnsave
dec
or
lock
mov
cmp
sub
mov
ds
xor
jge
pop
mov
and
dec
inc
dec
test
cld
push
(bad)
idiv
dec
enter
or
push
xchg
push
jge
mov
popf
gs
push
ret
mov
mov
mov
xchg
sti
loop
(bad)
mov
pop
sbb
push
sub
cli
outs
push
movs
loopne
mov
push
xchg
dec
in
or
stos
bound
jp
mov
clc
shr
xchg
jg
sti
int
and
push
imul
loope
idiv
push
pop
jb
xchg
loop
cmp
ins
(bad)
out
cmp
(bad)
lods
aaa
(bad)
xor
add
sti
mov
jbe
outs
cwde
pop
sub
mov
mov
out
mov
push
popa
ins
imul
dec
addr16
cmp
dec
sbb
out
shl
mov
dec
mov
jno
push
pop
gs
(bad)
dec
xlat
ins
push
add
add
push
(bad)
and
add
bound
xchg
(bad)
idiv
stos
bound
push
iret
aad
cmp
adc
sub
pusha
pop
lea
(bad)
mov
xor
push
push
pop
fldenv
test
js
lods
or
test
pop
adc
ja
xor
cmp
pushf
cmp
push
adc
dec
je
cmp
xor
es
xor
mov
out
js
leave
push
lods
sub
inc
stc
lea
jo
xor
mov
retf
inc
mov
jne
jae
sti
imul
ret
ds
hlt
inc
push
xchg
xchg
lods
jmp
mov
cmp
hlt
fwait
enter
lds
mov
and
push
jb
mov
mov
daa
test
fsub
mov
jo
push
sub
inc
sub
mov
mov
movs
inc
ret
or
imul
and
mov
mul
or
xor
cli
mov
push
scas
sbb
xor
cmps
adc
loopne
sbb
or
xchg
jge
mov
adc
jmp
pop
sbb
mov
inc
jmp
pop
inc
lahf
xor
mov
add
push
mov
jno
mul
cld
out
xchg
ror
sbb
into
inc
movs
add
and
adc
xchg
es
in
adc
mov
push
out
dec
sbb
push
sti
test
stos
jecxz
sub
xor
mov
pop
fstp
ins
push
inc
nop
pop
out
je
es
cmc
bound
pop
nop
or
jae
or
test
adc
gs
test
rcr
mov
and
mov
dec
lahf
aas
leave
jno
mov
adc
fistp
mov
movs
mov
shl
dec
dec
mov
pop
sbb
sti
lock
sub
or
pop
in
aam
stc
fnstsw
dec
fisub
cmps
inc
clc
(bad)
xchg
pop
xchg
retf
dec
xlat
iret
daa
push
mov
stc
retf
inc
cmp
repz
frstor
inc
add
mov
jns
in
js
popa
pop
jle
xchg
add
test
sub
xchg
imul
and
sub
int3
pop
test
in
(bad)
call
ret
or
jmp
sbb
in
pop
stc
mov
rcl
mov
js
inc
adc
or
xchg
mov
sub
mov
fst
mov
mov
sbb
sub
and
sbb
mov
loop
mov
stos
push
repz
mov
dec
pop
inc
dec
ins
mov
and
cmp
hlt
xor
call
sub
sbb
mov
into
sub
push
adc
dec
lahf
out
pop
imul
das
fwait
add
fst
sub
and
bound
mov
xchg
inc
retf
idiv
xor
test
pop
clc
mov
adc
fwait
mov
aaa
mov
jnp
ret
sub
ja
(bad)
out
mov
push
sbb
mov
inc
xor
leave
(bad)
cli
loop
adc
jae
pop
mov
mov
sub
or
dec
call
das
fcom
out
das
xchg
cmp
(bad)
and
jno
je
in
in
or
leave
or
out
pop
jl
movs
data16
ins
pop
mov
xchg
ss
fs
clc
xchg
pop
mov
out
sbb
and
ror
xchg
or
mov
xchg
or
jp
xchg
cld
das
pop
popf
mov
mov
sbb
icebp
mov
adc
jmp
icebp
cwde
dec
jae
mov
and
mov
cmps
xchg
cmps
mov
daa
jae
clc
outs
push
(bad)
xchg
push
jb
fisttp
sub
adc
rcr
outs
movsx
dec
in
pop
call
dec
dec
cmp
retf
sbb
mov
mov
es
jo
and
sbb
sti
addr16
push
sub
xchg
sar
loope
pop
hlt
cmp
cmp
xchg
lods
fs
outs
fwait
jg
in
xchg
lock
dec
push
test
sbb
int
sub
cs
add
cmc
mov
and
mov
pop
dec
ret
xor
dec
jbe
jns
jle
retf
fnsave
in
ror
or
or
lds
call
(bad)
mov
xor
loope
mov
dec
xchg
dec
xchg
inc
jae
mov
jl
pusha
mov
and
aaa
loopne
fwait
sbb
jg
(bad)
lock
jb
mov
cmp
cmp
xchg
xchg
push
mov
iret
dec
pop
xchg
loop
das
clc
sub
mov
jg
movs
inc
in
add
jl
xor
mov
adc
jb
cmp
xchg
lahf
xchg
xchg
lods
xlat
jns
mov
add
add
xchg
jo
xchg
mov
mov
pop
mov
call
ins
call
mov
retf
mov
mov
rcr
or
loope
push
jle
mov
inc
pop
push
cmps
fs
jmp
pop
movs
and
mov
mov
imul
nop
push
mov
in
jmp
pop
inc
sbb
fwait
lea
mov
jl
iret
ds
aad
cmc
shl
push
int
mov
push
dec
add
push
adc
jns
maskmovq
int
nop
push
or
or
lock
pop
xchg
or
addr16
dec
mov
dec
and
test
mov
popa
jb
push
push
js
mov
stc
xor
add
shl
dec
es
jle
pop
sub
loop
pop
add
cmps
adc
cmp
pop
xchg
test
call
cli
(bad)
push
cmps
jbe
and
les
test
jg
jecxz
not
dec
popf
inc
and
loope
sub
mov
add
out
ins
inc
lods
clc
sub
in
(bad)
mov
xlat
shr
jns
xchg
sub
mov
fnop
or
mov
or
rol
test
and
sub
in
mov
fwait
ins
mov
je
fadd
pop
loop
ret
rol
test
sub
inc
inc
fucom
inc
lock
fldenv
sbb
xchg
and
mov
jle
test
xor
ret
pop
in
inc
icebp
cmp
cmp
ins
bound
xchg
adc
jb
xchg
pop
and
scas
(bad)
sbb
dec
dec
fadd
cmp
clc
ror
js
mov
cwde
stos
lods
scas
push
sti
jmp
adc
cmp
test
push
cmps
add
dec
lods
cs
or
mov
sbb
adc
icebp
push
fucomip
sub
or
adc
test
leave
push
mov
lods
push
mov
xchg
fisub
xchg
retf
ins
mov
scas
enter
fsubr
cmp
sbb
add
xchg
stos
cmp
mov
fs
jno
or
lock
mov
(bad)
jo
inc
rcr
push
dec
pop
aam
in
mov
xor
pop
stos
xchg
jnp
mov
push
mov
jle
aas
inc
add
sub
or
mov
adc
and
aad
fcmovnb
jbe
clc
jl
int3
jl
fild
shl
cmp
adc
test
mov
or
pop
xchg
jmp
call
outs
and
pop
in
mov
jbe
outs
call
xchg
add
mov
xchg
fst
jnp
lahf
jge
(bad)
xor
xor
xchg
cwde
fiadd
push
mov
data16
mov
xor
or
fcom
jle
aaa
mov
inc
inc
adc
stc
out
les
js
je
inc
mov
or
or
mov
into
lock
pusha
int3
dec
icebp
dec
mov
push
adc
addr16
addr16
lods
dec
mov
dec
int
jb
inc
push
stos
cmp
out
pop
inc
dec
in
popa
mov
add
nop
dec
xor
add
imul
jno
sub
jae
pop
push
mov
fwait
jns
fidiv
sub
and
mov
stos
repnz
sahf
stc
pop
pop
mov
std
pop
xor
mov
(bad)
add
sahf
int3
scas
retf
retf
je
xlat
out
fbstp
out
pop
add
setle
xor
dec
(bad)
(bad)
stos
push
sbb
ins
xchg
adc
mov
pusha
ins
test
daa
cmp
sar
mov
push
les
pop
dec
(bad)
pop
pushf
xor
cmps
mov
mov
ds
jg
fdivr
fbld
or
jge
inc
ret
out
and
add
push
jno
xchg
out
xchg
or
into
(bad)
into
inc
or
jl
jbe
adc
or
std
and
add
pop
push
inc
rol
sbb
lods
mov
and
jmp
out
add
outs
mov
in
into
sub
xchg
dec
push
mov
cmp
and
mov
push
inc
inc
hlt
call
sbb
jg
sub
test
push
mov
jnp
adc
add
mov
int
push
jge
or
cmp
out
jbe
cmp
pushf
push
sub
or
test
jmp
cmp
sbb
jne
call
out
jo
adc
xchg
adc
cs
xor
xchg
mov
mov
fucomp
stos
lods
and
mov
cmp
gs
mov
xchg
fnstsw
lahf
jmp
jmp
pop
pop
inc
cmps
mov
jb
out
pop
fwait
pop
inc
in
xor
test
and
xchg
mov
aam
dec
ficomp
cmp
daa
mov
jae
popf
sbb
cwde
and
cmp
or
add
es
add
mov
icebp
fistp
test
jnp
xor
rcl
dec
and
mov
adc
adc
leave
repnz
or
mov
ss
mov
aam
je
xor
ret
sti
cdq
test
mov
add
cmp
les
cmp
rcl
(bad)
mov
arpl
add
sar
push
ss
push
push
mov
jno
test
inc
sbb
pusha
ja
jmp
xchg
in
shl
enter
imul
arpl
loop
mov
cmp
int3
jmp
pop
mov
adc
test
inc
dec
jle
fs
dec
(bad)
xor
jno
xchg
pop
inc
int3
mov
and
sbb
(bad)
push
xor
(bad)
hlt
fadd
or
and
icebp
inc
test
outs
cmp
add
int
and
pop
jmp
mov
cmp
push
leave
and
jp
xchg
ret
mov
mov
jae
jnp
xlat
pusha
sbb
into
stc
mov
push
scas
pop
push
in
jno
add
cmp
push
sbb
or
retf
shl
mov
jmp
xor
mov
xchg
xlat
outs
push
dec
xchg
ds
cdq
cmp
jg
(bad)
fcom
icebp
mov
cmp
mov
movs
test
test
dec
enter
and
outs
inc
popa
jae
and
hlt
push
adc
cmp
shl
aam
jno
cmp
loope
addr16
cmp
xor
(bad)
adc
addr16
fcomp
xor
mov
and
add
retf
push
dec
leave
jle
add
mov
sbb
pop
sbb
adc
scas
std
in
loop
mov
es
pop
aam
push
aas
jno
pop
pop
shl
xchg
push
ins
mov
pop
and
std
je
jge
add
out
aad
mov
mov
cwde
hlt
repnz
popf
in
movs
and
jnp
mov
xor
jl
or
cmc
add
ins
es
jns
movs
or
int
cwde
cmp
repz
ror
lods
mov
int3
mov
push
pop
jb
leave
iret
mov
cdq
shl
mov
add
inc
push
or
retf
mov
add
xor
xchg
xchg
mov
and
(bad)
push
pop
cdq
inc
das
cmp
pop
js
pop
test
les
jge
xchg
push
xchg
lods
stc
push
mov
xchg
repz
ja
pop
loopne
mov
sbb
adc
(bad)
and
mov
(bad)
clc
fdivrp
ss
lods
inc
es
loopne
clc
dec
jmp
cli
push
add
aas
(bad)
(bad)
mov
mov
add
jns
aaa
mov
pop
stos
mov
pop
out
ds
sub
push
push
add
jp
arpl
loop
fmul
rol
sub
xchg
jne
int
int3
dec
jb
je
(bad)
clc
cli
sbb
loope
bnd
sub
inc
test
test
daa
and
inc
(bad)
leave
sub
push
sub
lahf
call
icebp
nop
shl
ret
inc
scas
test
and
mov
int3
jmp
push
test
outs
cmp
sahf
repnz
(bad)
inc
mov
push
inc
add
(bad)
cmp
sbb
mov
pop
movs
popf
jae
xor
pusha
mov
jo
inc
cmps
gs
(bad)
dec
jg
cmp
and
cli
xor
nop
cli
jnp
dec
std
icebp
lods
int3
jle
inc
pop
sti
cli
push
or
and
pop
jns
or
fwait
jno
imul
and
aas
cmp
mov
add
sub
xchg
dec
gs
mov
inc
xchg
sti
popf
mov
push
lods
add
xor
cld
xor
xor
scas
imul
xor
mov
les
(bad)
(bad)
fisub
inc
xchg
mov
popa
xchg
mov
mov
and
adc
mov
shl
push
pop
xor
aaa
pushf
gs
enter
arpl
push
jnp
push
pop
mov
pop
mov
mov
shr
pop
aam
jnp
jmp
aas
or
retf
aad
fidiv
mov
dec
(bad)
jecxz
sbb
shl
int
int
mov
jmp
mov
in
ror
in
push
pop
addr16
call
add
in
ss
sub
and
push
mov
and
scas
sbb
jmp
sbb
sbb
clc
push
cmps
cmp
outs
scas
fwait
push
mov
or
jg
shl
inc
in
std
adc
mov
xchg
in
push
outs
retf
cs
jne
addr16
dec
std
jae
xlat
pop
cmc
shr
rcl
jecxz
jle
ror
push
inc
js
push
es
inc
retf
mov
dec
in
sub
out
mov
cmc
out
sbb
popf
push
out
adc
pop
arpl
sti
pop
push
xchg
fist
cld
jl
shl
call
inc
pop
mov
adc
or
ja
jbe
jmp
scas
sub
cld
jmp
pop
fwait
pop
cmp
stos
rcr
add
dec
test
dec
dec
(bad)
cmps
imul
nop
push
add
test
pop
add
xor
jle
mov
adc
jae
repz
aad
std
lods
add
ins
dec
nop
xchg
adc
aad
xchg
jle
mov
sub
gs
mov
(bad)
arpl
stos
scas
lahf
in
add
(bad)
adc
aaa
push
push
cli
js
clc
xor
jmp
call
outs
test
sub
(bad)
push
and
test
mov
rol
mov
inc
fldenv
iret
mov
lods
pop
mov
call
pop
adc
xchg
sbb
(bad)
(bad)
dec
dec
lods
xor
ins
imul
push
(bad)
hlt
in
xchg
stos
push
sahf
xchg
cld
xchg
sub
push
aam
ins
mov
mov
adc
test
xlat
out
mov
scas
ror
fwait
or
xor
adc
sub
jbe
fcmovu
or
inc
xor
repz
cmp
sbb
cli
mov
int
in
xchg
fdivr
add
xchg
pusha
fs
vmovaps
sbb
mov
idiv
retf
push
pop
adc
shl
(bad)
or
jle
leave
adc
xor
sub
push
(bad)
adc
mov
mov
mov
(bad)
in
imul
in
lahf
mov
cmp
push
dec
pop
and
sub
lahf
push
ret
ins
mov
icebp
adc
xor
lods
fistp
mov
clc
push
ja
imul
loop
loop
mov
pusha
lock
mov
js
mov
push
retf
aad
imul
add
or
hlt
mov
adc
mov
push
dec
dec
push
scas
into
iret
loope
add
dec
xchg
mov
call
or
or
arpl
and
fsub
je
jns
xchg
sbb
mov
iret
fsub
aas
xchg
mul
push
push
dec
add
fisttp
mov
and
xchg
pop
fisub
and
mov
sbb
aaa
(bad)
sub
dec
xchg
adc
std
in
or
cli
jge
dec
xlat
inc
inc
add
call
bound
and
xchg
fst
xor
in
or
inc
jne
push
mov
sub
test
push
loopne
jmp
icebp
les
pop
mov
mov
in
jp
xor
mov
jne
add
pop
(bad)
mov
rol
dec
stc
inc
cmps
inc
retf
cmc
mov
jno
or
mov
mov
cld
std
stos
or
push
mov
sub
mov
mov
in
cld
or
add
jge
xchg
sbb
ja
dec
stc
test
std
(bad)
ds
jecxz
out
jbe
mov
mov
sbb
dec
cmova
xchg
sub
and
mov
jp
nop
cmp
mov
fnstenv
shl
mov
cdq
stos
pop
mov
mov
jl
clc
add
xor
cdq
outs
(bad)
lods
test
out
pop
popf
inc
sbb
aas
push
scas
jl
pop
cs
pop
clc
idiv
dec
cmps
in
mov
ret
call
mov
xor
jno
bound
lds
adc
jno
pop
adc
shl
mov
(bad)
pop
scas
into
in
stc
sub
dec
movs
push
rcl
adc
popa
adc
jne
frstor
adc
stc
ja
mov
mov
push
or
or
mov
cs
push
nop
or
xchg
sbb
jp
pushf
(bad)
mov
fidiv
add
in
gs
cmc
mov
push
jge
push
lea
jnp
push
jp
jb
add
cmp
jle
call
mov
mov
xchg
daa
sbb
pop
fcomp
pushf
(bad)
ret
mov
outs
je
adc
fnstenv
scas
iret
pop
daa
pop
jbe
pusha
xor
data16
loopne
in
arpl
popa
pop
loope
pop
out
cmp
stc
mov
adc
pop
sub
fidivr
cmp
out
imul
xchg
adc
shl
aad
or
(bad)
in
inc
addr16
mov
pop
cmp
mov
adc
jmp
xlat
inc
adc
inc
ret
hlt
xchg
pop
stos
and
std
mov
sbb
push
loopne
xor
out
add
js
pop
cmps
add
pop
xchg
(bad)
stc
jmp
adc
dec
adc
int
cmps
in
ret
dec
dec
jmp
mov
xor
push
jp
out
cmps
aad
jb
retf
repz
addr16
popa
scas
mov
test
cmc
dec
mov
mov
or
(bad)
fadd
repnz
hlt
xor
aad
or
dec
test
data16
(bad)
hlt
add
not
push
sbb
in
sub
sbb
out
push
shl
add
stc
fwait
xor
retf
ins
pop
sti
push
xchg
sub
push
jp
outs
loope
or
outs
clc
mov
sbb
add
das
mov
mov
pop
pop
sub
add
ds
jge
mov
(bad)
jae
push
add
xchg
mov
lds
(bad)
ror
mov
inc
inc
data16
mov
lahf
push
add
dec
loope
sub
jo
push
cmps
(bad)
enter
jmp
cmp
mov
test
inc
or
stos
sti
jmp
test
fcomp
cmp
mov
mov
add
jmp
in
movs
pop
sub
ror
xchg
pop
jno
xlat
ss
mov
ss
(bad)
cli
pushf
jb
cdq
imul
pop
xchg
dec
and
movs
xchg
data16
dec
in
sbb
pop
outs
or
dec
daa
inc
in
xchg
nop
push
daa
jle
pop
inc
xor
cli
add
int3
mov
std
das
mov
jmp
dec
repnz
out
cdq
xchg
repz
pop
mov
stos
mov
dec
lods
iret
pop
aaa
jno
aad
fld
in
or
xchg
push
repnz
shl
jge
aas
arpl
std
fxtract
imul
jle
outs
sub
sbb
cmps
scas
pushf
imul
popa
add
movs
dec
and
inc
inc
cld
xor
adc
add
out
pushf
sbb
sahf
xchg
fisttp
jns
xchg
jne
test
pop
movs
mov
adc
and
adc
sahf
sbb
pusha
push
add
cmc
inc
mov
(bad)
xchg
jl
mov
fiadd
ror
mul
dec
or
jmp
stos
test
call
stc
stc
sub
movs
enter
jae
hlt
xchg
adc
mov
(bad)
jp
int
push
sub
ins
aas
(bad)
xlat
pop
iret
jp
inc
mov
loope
mov
or
cmp
xor
or
(bad)
sbb
dec
dec
lock
cmp
mov
loop
bnd
aas
pop
hlt
dec
xchg
pop
xor
sub
ror
sar
inc
xchg
outs
je
jns
fidiv
sub
jl
and
fldenv
int
adc
les
popa
jle
pop
ins
(bad)
xchg
mov
xchg
push
shl
jae
xchg
frstor
mov
shld
out
adc
dec
mov
pop
pop
vgf2p8affineinvqb
cmp
(bad)
mov
fs
mov
mov
pcmpeqw
repnz
pop
pushf
inc
test
xor
jno
fild
jo
(bad)
cmp
mov
ja
mov
in
xchg
jmp
and
or
lods
pop
dec
pop
test
cdq
or
test
ja
xor
add
xchg
jo
repnz
cmp
int3
add
cmp
sub
sbb
lods
cld
mov
sbb
mov
inc
mov
out
adc
fisubr
mov
cwde
into
or
mov
(bad)
int3
dec
dec
nop
test
sbb
dec
(bad)
int3
and
dec
or
outs
clc
mov
mov
fprem1
sbb
add
fwait
jp
rcr
push
ins
pusha
and
fnstcw
sub
test
mov
xor
lods
fs
fmul
mov
adc
pop
ficomp
test
xor
cmp
out
mov
in
pop
stos
test
icebp
inc
cmp
xor
mov
sub
dec
jae
push
dec
cwde
scas
fstp
mov
xlat
pop
sti
xor
int3
sub
cli
je
sbb
cmp
fmul
cld
test
in
adc
mov
paddsb
sub
mov
loop
adc
jl
ss
rol
jg
add
daa
dec
fsub
pop
mov
mov
or
cmp
es
imul
(bad)
cwde
mov
sar
pusha
enter
in
stos
lds
fwait
mov
das
cmp
push
jle
ins
and
cmc
and
rcl
cmps
(bad)
xor
adc
ficomp
or
in
test
imul
adc
les
loop
imul
add
leave
adc
ins
pop
icebp
call
xor
push
int
lds
inc
iret
xchg
pop
dec
in
dec
cmps
stos
jnp
mov
jnp
jecxz
sbb
imul
nop
ret
mov
jns
clc
movs
fld
xor
sub
or
mov
inc
dec
sbb
xchg
xor
arpl
inc
loop
addr16
xchg
add
add
std
mov
(bad)
xchg
add
adc
mov
fmul
push
or
mov
iret
mov
mov
pop
pusha
adc
inc
jae
leave
fdivrp
int3
mov
and
push
(bad)
jg
inc
xchg
xor
push
xchg
pop
ins
xchg
loopne
outs
inc
cmc
std
mov
mov
mov
ins
bound
lods
pop
mov
push
mov
mov
push
mov
cs
or
jmp
pop
sbb
mov
sub
imul
jo
test
fadd
jb
xor
mov
push
jbe
imul
imul
jge
imul
popa
jne
xor
mov
cmp
fdivp
das
jns
dec
(bad)
jge
mov
xor
or
mov
xchg
pop
sub
je
cs
loope
inc
mov
cmc
mov
pop
sub
leave
jmp
adc
lea
jnp
shl
xchg
test
sub
inc
pop
mov
adc
jp
rcl
cld
lock
stos
add
idiv
xchg
add
inc
inc
mov
inc
adc
out
push
ret
fstp
jnp
adc
sub
jg
mov
xor
(bad)
out
jae
mov
jmp
gs
hlt
mov
sti
cmp
fsubr
repnz
mov
pop
stc
mov
mov
adc
dec
jecxz
daa
cli
mov
(bad)
dec
xchg
xlat
inc
icebp
adc
aas
xchg
xor
add
mov
das
in
js
xchg
jecxz
shr
gs
enter
jno
xor
mov
pop
movs
mov
call
cmp
jbe
xor
in
(bad)
pop
stc
adc
shr
and
fst
outs
pop
mov
add
sub
icebp
jge
div
cdq
mov
out
and
aam
cmp
stc
jmp
mov
sar
das
(bad)
mov
cmp
pop
and
pop
pop
or
shr
add
adc
mov
clc
mov
xor
popf
pop
and
sbb
js
add
dec
inc
or
jle
out
cmps
test
pop
loope
dec
push
xchg
cmp
jne
mov
pop
mov
(bad)
or
add
and
adc
(bad)
adc
adc
sub
ja
xchg
jo
dec
outs
add
repnz
jnp
nop
aaa
out
pop
xor
pusha
jae
ins
loopne
call
adc
es
jmp
js
das
inc
and
gs
jb
nop
mov
jle
pop
scas
push
and
pusha
aas
in
jmp
mov
adc
repz
xchg
test
ror
or
nop
popf
xchg
popa
out
xor
lock
fs
mov
inc
test
imul
mov
inc
mov
sar
es
add
fadd
out
iret
retf
js
pop
mov
mov
ss
lods
sbb
xor
jmp
cmp
out
ja
cmp
mov
std
sbb
iret
jb
int
adc
lock
adc
fidiv
fs
pop
dec
inc
cli
sti
or
call
pushf
adc
jo
mov
in
inc
and
(bad)
pushf
sahf
lods
into
pop
lea
nop
and
cwde
sbb
fimul
(bad)
stos
aas
mov
clc
pop
movs
push
hlt
jp
inc
fisttp
aas
xchg
add
addr16
aam
jecxz
inc
dec
rcr
sub
jae
mov
lods
lea
inc
sub
mov
mov
aam
out
lea
les
(bad)
xor
(bad)
xchg
cli
cmps
and
pop
fwait
sbb
outs
mov
(bad)
dec
add
push
sbb
mov
fst
retf
push
out
fs
sub
lods
mov
ret
cmp
adc
pop
mov
outs
adc
inc
jo
imul
add
hlt
cmps
mov
aam
call
mov
push
sbb
cmp
push
dec
lahf
xcrypt-ctr
cmps
pop
push
xor
add
fadd
or
xchg
neg
test
pop
cmps
sbb
sahf
cld
add
les
sub
jp
aas
cli
stos
pop
and
retf
outs
(bad)
push
add
xlat
mov
jo
and
pop
imul
cmp
dec
ins
xchg
inc
mov
in
lock
jge
xor
inc
ds
cli
push
xor
cld
scas
mov
inc
test
mov
bound
lock
pop
mov
leave
(bad)
js
rol
add
sub
dec
fadd
cmps
cwde
dec
(bad)
in
aaa
jge
and
xchg
sub
xchg
data16
lock
and
test
int
fistp
push
xor
and
fdivr
adc
enter
sub
arpl
cmp
out
(bad)
jbe
cld
fs
(bad)
sbb
call
std
mov
fstp
mov
adc
jg
pop
cmps
xor
iret
pop
mov
inc
movs
test
push
pop
push
mov
test
cli
add
mov
shl
or
enter
(bad)
pop
sbb
and
cmp
lahf
xchg
and
and
les
int3
int3
mov
jnp
and
mov
fistp
pusha
jge
(bad)
(bad)
fcom
mov
rcl
mov
sbb
pushf
cmp
lea
adc
jmp
pop
ins
sub
xlat
and
(bad)
imul
inc
cmp
pop
jae
js
out
and
mov
jbe
push
sub
sub
push
jp
sbb
xchg
shl
push
xchg
cld
shl
sbb
jno
sbb
aam
test
and
sahf
cmp
ret
push
mov
dec
sbb
call
mov
adc
clc
or
dec
sbb
out
test
add
dec
adc
mov
and
test
jge
daa
(bad)
gs
mov
pop
inc
je
lock
cld
movs
or
icebp
sar
int
mov
cmp
push
aam
push
inc
loopne
and
(bad)
fimul
or
lock
push
xlat
enter
inc
in
add
add
fistp
cmp
into
test
mov
mov
scas
scas
and
or
(bad)
(bad)
cmc
cmp
push
cmp
pop
rcr
mov
dec
sub
sbb
addr16
fadd
mov
mul
adc
or
xchg
fdiv
inc
arpl
sbb
movs
es
ss
cmps
cmps
sbb
cmp
push
mov
js
push
sub
aam
nop
sahf
popa
rcr
pop
xchg
jl
js
ficomp
adc
fmul
js
stos
push
(bad)
sub
les
ins
cmp
in
adc
xchg
test
ficom
and
sahf
jbe
lock
add
dec
mov
enter
inc
xchg
mov
jmp
(bad)
sbb
push
dec
mov
xchg
inc
or
xchg
dec
int3
movs
mov
cmps
jns
add
shl
aad
pop
test
or
sub
xchg
inc
add
mov
xor
mov
mov
(bad)
xchg
aam
pop
scas
ja
aaa
mov
into
repnz
cmp
pop
test
or
rcl
scas
gs
leave
aad
icebp
mov
add
sbb
cmp
xchg
push
call
xor
ja
adc
jmp
test
jbe
mov
cvtps2pi
inc
pop
mov
setnp
jg
jg
(bad)
shl
mov
out
fcmove
push
xor
jmp
das
jmp
loopne
lahf
mov
inc
fistp
(bad)
push
(bad)
mov
popf
adc
inc
xor
(bad)
jb
mov
add
and
rcl
dec
mov
push
call
bound
xchg
je
lock
and
ds
sub
gs
xchg
call
push
push
(bad)
addr16
sbb
and
and
xchg
lahf
sub
outs
or
mov
lahf
scas
(bad)
loope
bswap
sub
mov
shl
out
sbb
div
shl
iret
adc
out
pop
shl
add
mov
mov
sub
popf
adc
jb
push
stc
adc
dec
mov
and
in
mov
rol
imul
jae
test
push
push
inc
ins
stos
xor
jmp
cmps
fwait
cmp
jnp
xchg
dec
dec
jnp
in
dec
addr16
scas
and
jmp
outs
fdivr
push
in
sub
les
xchg
addr16
jg
pop
scas
fmul
pop
(bad)
fld
or
rcr
test
inc
stos
ret
inc
mov
mov
pop
neg
pop
pushf
xchg
jmp
pop
xor
jbe
repz
cli
sar
cwde
outs
inc
ja
push
ret
cli
jl
cmp
xchg
(bad)
imul
shl
jae
jno
cmps
push
and
out
mov
in
mov
std
jns
out
aad
ja
lods
jmp
and
jnp
shl
sbb
xchg
ficomp
(bad)
movs
sub
outs
dec
or
xor
ret
inc
mov
fwait
(bad)
shl
int
mov
lahf
dec
sbb
mov
sub
movs
data16
sti
xor
lds
sti
push
or
cdq
push
popf
push
scas
jmp
push
push
or
sbb
mov
adc
xchg
ds
dec
js
addr16
sub
call
test
retf
test
xchg
pop
and
(bad)
lods
cmp
pop
sbb
aaa
outs
mov
ret
mov
pop
clc
xor
cmps
mov
pop
jno
add
scas
in
push
test
fisubr
xor
and
inc
mov
in
je
jecxz
mov
dec
shl
fsub
cmp
xor
mov
and
neg
std
dec
sahf
jmp
test
dec
gs
mov
adc
cmp
pop
scas
sub
in
jg
mov
addr16
cli
adc
xchg
retf
loopne
sub
push
fmul
fst
inc
icebp
movs
mov
sub
inc
jae
cmp
dec
cli
or
sbb
aas
mov
jg
mov
into
imul
popa
(bad)
outs
clc
jge
mov
jmp
daa
in
sbb
lahf
xchg
push
mov
mov
repnz
push
loope
add
sub
shl
inc
das
jae
push
stc
popa
or
shr
ins
adc
rcr
mov
jmp
jae
sar
in
sub
and
jl
push
imul
aas
out
loopne
rcr
clc
pop
popf
retf
pushf
ins
fsub
push
xchg
add
jle
mov
test
in
ja
add
add
xchg
ret
and
push
sub
not
fcomi
xor
dec
pcmpeqd
xchg
add
loope
retf
xchg
rol
sbb
sbb
aaa
mov
mov
sub
ja
jnp
add
hlt
shl
ret
pop
fwait
jg
mov
stc
mov
lahf
fadd
cli
shl
xor
xor
or
in
sub
pop
shr
fdivp
shl
(bad)
nop
add
sbb
add
shr
dec
in
cdq
push
bndstx
dec
movs
and
scas
sbb
jne
lahf
(bad)
push
dec
div
sti
dec
xchg
movaps
int
ins
mov
sub
and
jl
pop
sbb
cmp
cmp
mov
or
lahf
pop
xchg
sub
(bad)
mov
jmp
cs
out
sbb
and
aad
xor
movs
and
lahf
lahf
push
sbb
mov
adc
xchg
out
sub
ins
sbb
push
gs
js
aad
scas
cmp
pop
push
popa
jae
mov
xor
sar
test
xchg
clc
cmp
(bad)
clc
mov
rcr
pushf
aam
aas
and
xchg
mov
add
add
mov
jp
pop
test
sti
mov
xchg
jne
das
nop
add
out
mov
movs
into
outs
stos
push
inc
sub
mov
push
cmp
in
lds
mov
push
add
cmp
in
fimul
ret
sti
inc
adc
scas
and
fisttp
add
jge
sub
xor
mov
push
sub
(bad)
jbe
pop
inc
call
mov
dec
inc
fadd
cmc
stc
popf
or
push
or
fs
lea
inc
gs
mov
sbb
or
js
stc
clc
in
inc
loopne
pop
cdq
xchg
add
mov
jmp
cs
mov
inc
out
xor
scas
xor
cmp
outs
das
test
cmp
ret
inc
mov
fld
jle
add
push
xor
sub
pop
sub
cmp
or
mov
pop
add
icebp
loope
cmc
popa
ror
gs
pop
stc
das
dec
pop
scas
movs
xchg
fisttp
in
push
sbb
mov
lds
add
pop
aad
ja
call
pop
test
test
jbe
loop
pop
stos
mov
mov
and
mov
pop
pop
xchg
dec
int3
push
mov
sub
fidiv
test
pop
push
mov
xchg
fimul
imul
push
cli
or
pop
cmp
or
pop
and
push
add
xor
fistp
and
(bad)
or
push
adc
push
mov
out
repz
push
or
dec
add
add
es
sbb
movs
sbb
adc
or
imul
cli
cmp
push
push
add
inc
xchg
adc
cmps
inc
dec
ficom
into
call
xchg
(bad)
xchg
mov
mov
or
adc
jle
mov
xchg
mov
jp
loopne
adc
push
cmp
pop
or
sub
shr
add
xchg
xchg
or
dec
cmp
movs
xor
(bad)
sahf
jbe
cs
sub
(bad)
xchg
cmps
pop
loope
shr
sub
nop
enter
xor
(bad)
sub
pop
dec
out
imul
fs
cmova
mov
mov
add
aad
test
pop
or
iret
mov
mov
fld
rcr
aam
adc
push
push
and
push
xlat
das
pop
scas
mov
cmp
pop
stos
jb
jb
nop
retf
leave
xchg
and
pusha
cmp
aas
sbb
call
jae
movs
enter
xchg
push
aaa
ja
ins
movs
mov
mov
cmp
mov
test
movs
les
(bad)
mov
cmp
dec
fimul
and
fs
mov
cmp
loopne
gs
mov
inc
jns
dec
sbb
mov
pop
cdq
pushw
movs
outs
pop
lods
jmp
push
sahf
xor
scas
movs
pop
mov
repz
cmovae
ror
aad
ins
add
lock
mov
and
aaa
call
pushf
adc
movs
cmp
adc
stos
dec
xchg
push
fst
ret
data16
cli
sbb
xlat
push
test
outs
xchg
iret
mov
je
mov
xlat
out
push
push
addr16
inc
(bad)
out
call
sti
aad
mov
aam
call
xor
add
rcr
js
repnz
xchg
push
fwait
inc
or
(bad)
int
in
mov
cmp
pextrw
cdq
ja
pop
inc
movs
inc
in
sti
out
mov
adc
ins
mov
xor
rep
ret
jecxz
pop
sbb
iret
mov
sbb
xchg
loope
test
ins
sbb
into
popa
adc
ds
sub
cli
inc
mov
mov
cmp
push
nop
push
mov
sahf
sub
das
fnsave
cmp
xchg
jno
jno
jl
mov
push
and
sbb
pop
xchg
xor
retfw
cmp
mov
ficomp
and
adc
inc
loope
jb
pop
das
pop
(bad)
inc
or
dec
push
in
sub
xor
test
and
cmp
jb
inc
stos
fidiv
mov
je
lods
call
jle
imul
mov
not
mov
js
xchg
and
sbb
(bad)
pop
sub
dec
add
stos
loopne
pop
int
ja
mov
dec
push
push
dec
pop
xlat
xor
xor
iret
sbb
jnp
sti
aaa
xchg
movs
jae
or
jne
popf
test
data16
jmp
or
cmp
jne
dec
cmp
push
int
gs
repz
add
das
or
mov
arpl
inc
mov
mov
cli
fiadd
fsubr
cmp
mov
and
fs
rcr
jbe
and
xor
xor
loop
dec
pop
sbb
inc
mov
int
xchg
mov
scas
je
cmp
clc
scas
adc
pop
jae
out
or
and
call
cs
(bad)
cmp
cmp
add
ror
imul
adc
cld
pusha
scas
sbb
scas
sbb
stos
dec
jecxz
test
cwde
lea
iret
sbb
les
xchg
cld
adc
push
repz
add
push
out
ss
or
(bad)
retf
mov
mov
jno
push
or
jbe
fld
lea
jnp
jae
add
sub
pop
xchg
jmp
jp
pop
xchg
fnstenv
push
fiadd
fs
fldenv
xchg
ss
pop
push
mov
pop
lock
inc
push
stc
js
or
ficomp
or
push
ja
and
cwde
aaa
add
inc
sar
imul
fsubr
popa
ins
out
mov
xor
push
mov
cmp
xchg
pop
fucomp
adc
rcr
fnstenv
mov
mov
or
xchg
sbb
jns
fsubr
into
mov
ss
mov
adc
mov
jns
sub
jbe
inc
xchg
xor
jg
aaa
or
mov
outs
push
stc
and
repz
std
cs
jae
jbe
clc
fisubr
xchg
mov
mov
repnz
dec
sbb
dec
add
jns
and
push
or
xor
fidivr
adc
inc
rcl
das
aaa
and
(bad)
cdq
loopne
call
mov
mov
jne
in
fst
dec
mov
pop
imul
dec
add
push
mov
ins
rcl
dec
push
inc
xor
pop
ret
jmp
imul
xchg
not
loope
add
sub
lea
inc
xor
and
push
fadd
jne
and
jmp
hlt
shl
mul
cmp
fdivrp
dec
mov
cld
jl
inc
pop
mov
ss
inc
push
fdiv
fiadd
lods
not
and
addr16
test
xor
fsubr
inc
stos
shl
dec
push
xchg
pop
repz
or
arpl
pop
scas
mov
cmc
fcom
sbb
jl
jae
cmp
push
out
sbb
xchg
ror
push
shr
test
stos
inc
(bad)
mov
inc
xchg
push
(bad)
push
(bad)
sahf
sub
or
ins
cmc
push
inc
add
cmp
push
pusha
mov
cmc
pop
ins
push
dec
push
mov
mov
sbb
aad
xor
fnstsw
daa
sub
es
dec
mov
mov
xor
and
in
add
mov
pop
repz
dec
mov
test
ret
mov
jnp
fs
pop
mov
xor
pop
cmovs
cmp
aad
(bad)
jg
pop
popf
and
bound
mov
cmps
inc
mov
mov
mov
push
push
xor
sub
les
cdq
pop
ret
(bad)
rcl
dec
sbb
lods
adc
(bad)
pop
mov
mov
stc
rcr
popa
mov
icebp
aad
cmp
jle
mov
out
and
mov
adc
push
imul
cmc
sahf
pop
sub
and
pop
add
cmp
icebp
sbb
or
ss
adc
push
push
push
jp
sub
lahf
sub
js
(bad)
sbb
ret
mov
shl
xor
out
addr16
mov
inc
xchg
pop
imul
mov
mov
dec
mov
jns
pop
scas
mov
and
dec
cmp
inc
xchg
mov
out
movs
cli
fld
test
ins
rcl
repnz
dec
mov
js
es
call
add
sahf
mov
das
clc
and
jle
movs
jmp
sub
clc
nop
xor
push
xor
(bad)
mov
pop
push
jns
or
fstp
jmp
imul
xor
and
in
dec
(bad)
mov
mov
cmp
inc
dec
sub
test
push
jbe
rcl
std
and
inc
cwde
into
retf
dec
inc
mov
xchg
out
pop
inc
pusha
imul
loopne
add
and
mov
arpl
push
sbb
clc
fmul
lea
iret
dec
lea
mov
fwait
ror
jno
push
lahf
leave
push
cmp
sbb
retf
fstp
mov
xchg
pop
in
xor
push
in
(bad)
push
inc
pop
adc
(bad)
outs
xor
cli
stos
xchg
pop
repnz
push
xor
fld
pop
sbb
push
out
sub
pop
inc
fist
movs
mov
jg
jb
imul
test
fs
(bad)
sub
xchg
pushf
sub
enter
das
dec
mov
cdq
cmp
lahf
pop
push
xchg
jecxz
mov
(bad)
push
adc
fimul
inc
jne
sbb
sub
sbb
pop
pop
cmp
dec
add
in
fistp
lds
aad
shl
sub
ds
xor
ficomp
icebp
test
cmp
inc
dec
sbb
xchg
dec
(bad)
adc
aaa
aam
imul
cmp
xchg
mov
push
fst
xor
movs
les
fstp
sub
sbb
fsubr
xchg
call
xchg
daa
js
sbb
adc
ins
rcl
retf
out
cmp
inc
cwde
test
clc
sahf
mov
sbb
add
jo
es
sbb
stos
dec
nop
mov
retf
in
aad
add
push
inc
mov
bound
ins
push
pop
cmp
dec
enter
cmps
lea
pop
shl
fild
sub
ja
sbb
add
sub
mov
and
out
ret
fcom
xor
movs
repnz
js
arpl
sub
fidiv
mov
dec
mov
inc
adc
inc
dec
je
xor
ins
movs
rol
test
hlt
sbb
ins
sbb
std
jno
add
in
mov
cli
jle
xchg
lods
or
out
mov
sub
xchg
push
inc
sub
pcmpgtb
cmps
jecxz
inc
scas
jns
rcr
retf
(bad)
jns
pop
cmps
add
mov
out
lock
inc
add
retf
jne
ins
push
adc
jb
out
or
inc
pop
sub
mov
imul
retw
lods
into
lods
mov
inc
push
cmps
das
stos
out
jmp
das
mov
ret
movs
(bad)
out
push
push
pop
ret
imul
mov
in
cdq
cld
jle
mov
rcl
icebp
sbb
out
push
dec
mov
push
test
pop
loop
(bad)
and
inc
test
lahf
sub
les
inc
loop
push
enter
sub
fcmovnu
sub
movs
aas
xor
pop
sub
or
push
fcomip
enter
(bad)
jl
cli
rol
fisttp
push
imul
fild
inc
adc
outs
clc
cmps
stos
out
or
test
(bad)
cmp
sbb
mov
nop
pop
fnstcw
inc
cdq
pusha
jmp
jb
cmova
cmp
cdq
ret
push
jo
rcl
or
mov
push
add
mov
cdq
clc
add
jno
push
adc
inc
adc
(bad)
push
push
lock
(bad)
jns
inc
xor
jmp
add
mov
shl
add
jo
xchg
movs
sbb
movs
fidiv
cmp
dec
xlat
test
ret
rol
setno
push
cli
cmp
push
ins
das
fldenv
mov
cmp
and
stos
mov
icebp
sahf
sub
mov
jae
sub
fsubr
(bad)
jmp
pop
in
ins
cdq
hlt
test
adc
sub
repz
sar
pushf
or
add
or
rcl
mov
fild
mov
(bad)
inc
lahf
loop
cmp
jp
mov
iret
mov
fcomp
dec
repz
bound
call
(bad)
mov
jp
ja
dec
pusha
outs
or
xor
push
push
pop
jb
cwde
in
(bad)
inc
data16
fdivr
js
add
popf
adc
mov
in
imul
call
and
or
add
movs
and
xor
ins
pushf
cmp
(bad)
movs
sub
inc
dec
out
sar
scas
arpl
loope
mov
or
mov
mov
mov
sbb
es
and
(bad)
aam
push
test
call
push
dec
out
shr
xor
rcr
cmp
fld
jo
fldcw
xchg
jmp
jle
call
pop
(bad)
mov
lods
push
mov
aam
arpl
ret
cmp
cmp
mov
test
jb
sbb
sbb
dec
sti
bound
out
les
fdiv
jg
inc
mov
retf
in
iret
wrmsr
and
adc
mov
fadd
pusha
adc
into
aaa
lods
es
into
hlt
movs
cmp
std
cmps
sbb
ins
push
dec
xlat
xchg
sbb
xor
imul
adc
pop
push
sub
jb
xor
mov
ds
jmp
xor
test
cld
pushf
aaa
pop
adc
adc
pushf
ss
lock
jp
repnz
ins
xor
icebp
loope
or
mov
fbstp
pop
push
jg
adc
sbb
push
mov
movs
mov
lds
mov
in
rol
leave
inc
not
sub
iret
ret
xchg
or
shl
(bad)
adc
or
xor
xchg
and
fwait
ja
pop
and
(bad)
out
fwait
pop
push
jno
(bad)
movs
add
push
addr16
push
mov
pop
(bad)
sti
rcl
mov
sbb
push
stos
add
jo
add
mov
jo
mov
pushf
mov
xchg
rcr
dec
ja
pushf
pop
jbe
test
mov
inc
enter
push
xlat
mov
jb
pop
aam
idiv
leave
pop
dec
or
fistp
xlat
jmp
push
cmps
add
inc
mov
pop
adc
dec
mov
shl
xchg
mov
loope
imul
add
sbb
ret
sub
out
lods
repnz
imul
cmp
or
add
sub
pop
rcr
rcr
jno
sbb
test
js
mov
sub
mov
dec
into
adc
arpl
push
xchg
dec
cmc
fbld
cmp
icebp
addr16
and
push
push
or
adc
test
fsqrt
outs
inc
(bad)
sar
lea
sar
sub
add
mov
sub
push
push
nop
add
call
(bad)
into
pop
sahf
mov
jp
push
xchg
iret
out
jmp
pusha
gs
dec
loopne
cmc
push
dec
stos
jns
push
mov
jp
ss
aad
ds
ret
loopne
stc
and
aad
and
sbb
int3
mov
inc
mov
mov
or
loope
mov
push
add
popf
ret
or
in
fwait
and
mov
mov
xor
aam
hlt
dec
push
lods
call
enter
mov
fs
jmp
jmp
cmps
mov
cwde
push
int3
dec
sbb
inc
push
dec
mov
xor
inc
xchg
inc
mov
imul
cmp
cmp
aas
test
aam
add
push
add
ins
adc
aad
das
mov
ds
aas
pop
inc
mov
xor
xchg
nop
inc
xchg
push
sbb
fdiv
pop
ret
loopne
sti
cmps
pop
rcr
loop
xchg
popa
imul
inc
adc
iret
or
pop
les
idiv
ins
nop
les
jns
dec
(bad)
push
sbb
call
aas
mov
idiv
jns
jb
ret
add
jb
push
dec
pop
cmps
push
xor
adc
dec
repnz
sub
mov
sbb
out
out
mov
dec
sbb
dec
fs
mov
fcmovu
push
bnd
fcomp
mov
mov
jnp
fcmovu
or
cmps
call
pop
aaa
(bad)
mov
in
movs
sbb
test
mov
stos
out
pop
push
xchg
dec
push
call
xor
add
push
scas
jl
lods
push
jbe
stc
mov
push
adc
mov
sub
dec
aas
cld
and
ret
popf
mov
out
loopne
data16
cmps
inc
and
in
mov
test
xchg
in
repz
push
gs
mov
mov
or
xor
fisub
movs
clc
aam
mov
mov
mov
jnp
sub
out
xor
aad
arpl
and
stc
inc
(bad)
fst
mov
push
daa
xor
or
in
and
add
test
jl
pop
ret
or
jo
ret
(bad)
iret
pop
xchg
jne
inc
jb
aaa
retf
repnz
sbb
out
test
xor
inc
and
xor
lods
push
aas
inc
dec
cmp
call
out
cmp
in
push
js
mov
adc
push
cmp
clc
mov
and
repz
mov
repz
mov
movs
test
sbb
cmc
add
mov
add
ret
scas
pop
ficomp
xor
or
das
iret
movs
and
pop
enter
inc
aam
test
jmp
adc
shl
pushf
mov
cmps
jno
sahf
mov
(bad)
into
add
rol
call
add
or
xor
push
xchg
sub
xchg
mov
mov
pop
das
loopne
ss
mov
pop
push
dec
out
bound
adc
enter
cmp
dec
ja
push
lahf
pop
(bad)
test
fxch
mov
mov
fild
lods
inc
jle
nop
inc
or
pop
imul
aad
push
and
cld
popa
int
int3
mov
sbb
jg
or
push
dec
jne
or
in
push
lock
imul
push
pushf
push
in
mov
loope
test
test
nop
push
adc
adc
jp
les
xchg
sbb
into
mov
pop
mov
and
test
in
pop
cmp
and
out
data16
xor
gs
jmp
jbe
test
or
xor
push
imul
mov
ret
add
lods
lds
mov
xor
movs
(bad)
xor
jg
push
push
mov
push
mov
fcmovnb
sti
mov
or
jl
sbb
int
das
adc
inc
sub
jle
jne
push
(bad)
sub
imul
out
sbb
mov
push
xchg
jb
pop
(bad)
jge
les
mov
sub
sub
pusha
adc
(bad)
mov
jge
xchg
jle
sub
pop
das
daa
fbstp
xchg
retf
push
or
xchg
push
inc
int
add
cmp
jecxz
mov
adc
jg
dec
inc
ret
imul
jmp
mov
in
jae
enter
aad
push
icebp
add
jge
iret
sub
jl
inc
int3
pop
imul
jmp
push
push
rcr
mov
push
int
outs
mov
or
push
lea
gs
cmp
fist
call
jno
mov
stos
sub
test
push
mov
loop
out
mov
adc
dec
je
les
lock
sub
xor
(bad)
std
std
dec
ds
je
jmp
clc
stos
cmps
ja
sub
out
xor
xchg
stc
push
inc
add
retf
or
sub
mov
call
jmp
das
add
mov
mov
and
pushf
jmp
test
iret
jg
ja
cmp
sub
sbb
push
sub
or
dec
fld
cmp
imul
jl
push
jg
push
mov
test
retf
pop
movs
sbb
sub
movs
or
imul
inc
inc
pop
or
sub
rcr
repz
cmps
ins
sar
jb
mov
mov
add
pusha
cld
xlat
push
sbb
in
loopne
dec
ror
sub
mov
xchg
sub
mov
enter
shl
pop
xor
sub
cli
out
cmp
pop
cmp
jbe
enter
js
and
popf
pop
and
dec
xor
adc
stos
stos
out
mov
js
out
stc
jmp
jnp
int3
push
fs
sbb
jno
sub
push
jbe
push
add
mov
pop
xchg
ja
and
push
mov
sub
push
sbb
xchg
jnp
adc
aam
mov
adc
std
cmp
out
dec
sti
xlat
scas
xchg
add
movs
mov
sub
test
jo
xchg
aaa
mov
int3
ret
jmp
xchg
and
pop
dec
stos
rcl
pop
mov
jbe
movs
jl
daa
retf
fdivrp
lahf
pop
outs
out
jmp
nop
cmps
cmp
lock
mov
int3
or
test
pop
push
add
lock
das
pop
inc
pop
sbb
ins
sbb
mov
cs
xchg
pop
rcr
dec
jbe
shr
mov
ret
std
das
cmp
fwait
enter
fadd
repz
mov
adc
push
dec
test
push
lock
cmps
fs
mov
push
sbb
out
mov
imul
pop
adc
das
pop
sub
ror
dec
mov
push
mov
mov
xor
pop
xchg
pop
mov
fdivr
dec
mov
sub
mov
loopne
aad
iret
sbb
rol
or
pop
das
inc
mov
jmp
repz
pop
or
hlt
ficomp
xor
lods
add
pop
(bad)
test
pop
push
rcl
lods
mov
cmp
mov
and
jp
or
(bad)
sbb
fistp
or
stos
and
mov
mov
das
pop
sub
in
sar
in
gs
ret
icebp
gs
push
outs
sti
retf
dec
jb
push
repz
inc
push
jecxz
sbb
mov
push
pushf
xor
cmp
dec
pusha
jl
pop
xchg
jnp
sub
sbb
xlat
xchg
jae
pop
sbb
inc
jb
dec
nop
(bad)
fisttp
int3
jle
mov
sub
test
imul
int3
jo
push
ret
cmp
(bad)
cmp
ds
jno
sub
jp
loop
ins
fst
(bad)
lods
dec
dec
mov
pop
imul
sub
jb
xchg
sbb
adc
out
or
out
adc
retf
xor
jg
push
hlt
push
dec
dec
pop
fsubr
fst
jae
push
popa
cld
fld
aam
ror
xchg
jge
ja
ret
or
fsubrp
shl
enter
inc
sbb
push
int3
xchg
popf
jbe
cmp
dec
rcl
mov
in
(bad)
mov
adc
out
in
test
div
shr
sbb
fmul
inc
pushf
push
test
adc
(bad)
cmp
sbb
xor
cmp
sbb
imul
in
dec
jae
pusha
jge
and
dec
and
int3
sbb
xchg
add
popf
push
mov
cdq
(bad)
or
ins
mov
rol
out
maskmovq
test
ins
or
arpl
das
lods
or
data16
xchg
push
adc
jae
or
ret
cs
dec
add
inc
or
mov
push
mov
cld
inc
dec
sub
inc
and
mov
je
movs
cwde
dec
retf
(bad)
leave
mov
mov
or
loope
mov
push
rol
jae
lock
push
into
cld
or
pop
sahf
adc
lods
scas
pop
es
mov
pushf
add
pop
movs
push
dec
jb
xchg
mov
outs
jmp
inc
lock
sbb
jmp
or
lods
xor
pop
sar
loopne
pop
xor
xchg
mov
je
xor
jnp
dec
je
sbb
into
daa
data16
rcr
ret
inc
mov
ss
ret
sti
aas
in
or
mov
(bad)
cmps
sbb
sar
sbb
scas
sbb
pop
mov
cmp
out
out
inc
ins
sbb
into
iret
add
mov
mov
xchg
adc
cli
sbb
jmp
add
test
inc
pop
cmp
pop
and
and
inc
inc
mov
dec
popf
push
dec
jmp
dec
xor
mov
lahf
mov
es
iret
pushf
jno
stos
cmp
xor
push
sbb
pop
pushf
movs
jmp
mov
mov
push
pop
mov
fist
fld
mov
sti
adc
mov
std
pusha
mov
inc
jl
sbb
outs
(bad)
leave
iret
adc
inc
scas
sbb
sbb
imul
mov
ficom
shl
pop
pop
cmp
mov
mov
add
fidivr
push
es
xor
adc
dec
bound
std
xchg
mov
push
frstor
ins
fidivr
pop
cmp
and
add
pop
and
std
dec
pop
jge
and
int
add
in
push
out
arpl
mov
retf
lds
mov
adc
xor
(bad)
xlat
pop
mov
and
aas
ret
xor
sbb
dec
lea
retf
lods
icebp
ret
movs
xlat
xor
ja
gs
or
inc
das
add
addr16
add
jno
push
add
pop
jae
adc
mov
icebp
sahf
scas
sti
outs
inc
out
jne
cmc
les
pop
push
or
pusha
cs
retf
xlat
xchg
push
retf
mov
or
(bad)
data16
mov
les
ds
pop
fwait
add
loopne
in
iret
sbb
pop
(bad)
mov
xchg
faddp
es
pop
fst
aam
jmp
inc
mov
aam
sub
daa
sub
popa
or
xchg
jle
retf
sub
cli
pop
aad
mov
mov
xor
inc
xor
mov
mov
push
inc
jp
ret
adc
xor
lods
mov
stos
rcr
out
sbb
std
bound
ss
xchg
mov
shl
std
add
sub
mov
jge
mov
adc
cmp
imul
jge
ins
xchg
shl
adc
arpl
(bad)
fucomp
stos
ja
adc
mov
ins
icebp
rcl
pop
sahf
and
push
stos
push
iret
mov
adc
cmp
jmp
inc
ret
rep
(bad)
call
sti
push
(bad)
cld
into
mov
adc
lds
add
mov
sti
mov
xchg
jns
not
clc
xchg
push
xor
retf
xchg
outs
mov
pop
inc
js
cmp
inc
pusha
imul
in
repnz
cmp
sbb
pop
sti
test
push
js
js
xchg
pop
xchg
or
pop
in
xor
add
pop
fwait
cmp
push
sbb
lods
cmps
popa
cmp
rcr
xchg
(bad)
xchg
jnp
out
test
and
es
shl
mov
ret
xchg
dec
cmp
mov
not
lahf
js
pop
or
mov
sbb
sub
xor
mov
pusha
enter
xchg
jo
retf
fild
movs
icebp
sbb
jne
movs
mov
dec
mov
adc
test
lds
add
(bad)
mov
mov
pop
and
test
inc
push
mov
data16
push
mov
int
xchg
imul
sbb
hlt
stos
lea
stc
or
mov
sbb
pop
add
and
ret
cmps
stos
fld
jmp
pop
sbb
ins
mov
jno
xchg
js
nop
push
push
mov
hlt
rcl
jbe
pop
mov
mov
jle
push
in
test
xor
adc
dec
icebp
rcl
lahf
xchg
mov
hlt
pop
dec
scas
push
scas
sub
icebp
enter
add
mov
mov
mov
dec
and
mov
int3
cmp
scas
add
sahf
pop
mov
sti
or
inc
xchg
and
push
sbb
mov
add
popf
xchg
xor
fcomp
cmp
int3
sbb
mov
in
xor
cmc
adc
ret
push
sbb
mov
fld
cmc
xor
(bad)
mov
xchg
xor
sub
mov
shl
jno
dec
mov
test
jecxz
jg
push
je
clc
dec
xchg
popa
xchg
cmp
clc
mov
std
stc
cmp
push
sar
push
repnz
fnsave
cmps
mov
add
scas
out
cmc
test
rol
push
sar
in
push
in
xor
cs
cli
and
or
cmp
pop
xchg
or
mov
out
shl
and
sbb
mov
inc
sbb
lds
jecxz
mov
xchg
ins
jg
fcomp
enter
mov
popf
xor
sbb
jle
nop
test
mov
mov
addr16
mov
xor
mov
loopne
(bad)
jno
push
or
jmp
int3
mov
rcl
push
and
daa
ret
xlat
loop
sub
fwait
and
dec
dec
retf
mov
sub
cmp
and
gs
or
and
xor
fstp
jns
lods
imul
sti
xor
int
call
mov
rcl
aam
sub
adc
jl
sbb
leave
mov
mov
mov
movs
ins
repz
push
mov
hlt
in
pop
xor
mov
or
adc
out
or
push
pop
mov
(bad)
daa
sti
mov
xchg
cmps
imul
add
lahf
or
xlat
push
jecxz
test
add
ror
mov
wrmsr
mov
sub
push
add
shl
pop
sub
add
cmp
and
add
sbb
mov
and
xlat
jmp
push
fbld
lods
rol
in
xor
pop
call
or
inc
jno
jb
stos
pop
call
mov
mov
dec
sti
mov
test
int
aas
xchg
pop
xor
or
mov
dec
and
push
mov
push
push
pop
mov
xor
in
pop
leave
cmp
or
sbb
jg
jmp
add
pop
xor
les
or
int
pop
jnp
out
add
pop
call
mov
xlat
lds
mov
rcr
test
int
pop
mov
jp
sub
cmp
or
retf
sbb
dec
xchg
xor
fs
movs
popf
ror
test
jecxz
jb
inc
outs
sbb
leave
lea
jp
cld
daa
sub
mov
xchg
sub
pop
sub
xchg
pop
dec
loop
and
inc
jbe
push
leave
or
sbb
push
outs
rol
into
mov
dec
ret
pop
push
mov
mov
aaa
mov
cli
xor
pop
stos
sub
ror
cmp
ins
push
add
xor
in
push
loope
fdivrp
test
scas
cld
dec
lods
inc
mov
pop
movs
sub
test
fstp
mov
std
xlat
pop
stos
jns
ss
sbb
out
and
pop
fcomi
or
out
add
xchg
ds
ror
sub
push
ror
sbb
inc
cwde
or
mov
push
push
cli
push
and
lods
xchg
fdivr
inc
sti
dec
xchg
add
inc
scas
mov
jl
iret
scas
jmp
punpcklwd
mov
cmp
idiv
jne
add
not
add
or
or
pop
jge
cmp
fnstcw
dec
mov
push
xor
nop
dec
sbb
mov
leave
jp
jp
and
jae
movs
mov
pop
mov
(bad)
pop
pop
mov
mov
lods
mov
inc
test
in
sti
mov
js
sub
mov
add
add
or
inc
mov
xlat
aaa
pop
dec
retf
(bad)
cmc
inc
fidivr
or
jg
int
sbb
in
je
dec
aad
push
xchg
sbb
cwde
mov
cli
in
ror
adc
(bad)
mov
pop
imul
pop
js
popf
adc
test
inc
scas
mov
stos
cmp
push
mov
scas
adc
xchg
clc
jp
and
sbb
jecxz
push
mov
ret
in
cwde
into
and
dec
pop
iret
idiv
mov
push
in
or
adc
mov
mov
or
outs
xchg
inc
aaa
pop
int
push
sub
in
mov
jmp
push
xor
retf
das
xchg
out
fs
sub
les
sbb
sbb
outs
test
inc
adc
std
fxch
xchg
pop
leave
scas
(bad)
lods
sahf
ss
shl
pop
nop
mov
aam
pop
test
cld
cmp
into
jg
inc
xchg
stos
jns
(bad)
cli
cmp
push
inc
pop
adc
mov
dec
aaa
data16
or
add
dec
ror
cmp
jmp
inc
xor
clc
fldenv
addr16
les
mov
xor
cmp
cmp
lahf
in
ins
jp
in
and
cmp
nop
jecxz
push
shr
adc
adc
or
push
test
add
retf
cli
mov
mov
pop
shl
leave
loop
mov
shl
sets
mov
xchg
repnz
and
mov
push
lahf
cmp
inc
enter
mov
push
test
movs
xchg
push
adc
dec
adc
pop
and
shl
dec
jp
ins
movs
jo
addr16
loopne
inc
mov
retf
(bad)
mov
mov
pop
xchg
sbb
pusha
out
jp
aaa
daa
mov
scas
outs
cwde
mov
dec
and
xor
cld
dec
jle
in
(bad)
fistp
and
outs
pushf
js
(bad)
pop
ret
addr16
or
push
jns
mov
mov
or
sub
enter
push
and
dec
and
dec
xor
repz
or
pop
dec
test
mov
adc
or
or
cs
cmp
ret
jno
repz
(bad)
push
in
clc
mov
mov
repz
call
adc
add
and
add
push
or
fwait
xchg
fstp
jmp
push
sbb
mov
dec
add
ror
mov
inc
inc
lods
cmp
call
cld
add
fisubr
cwde
iret
leave
dec
lods
push
and
inc
pop
movs
cmps
fisubr
cmp
pop
fnsave
mov
ins
addr16
(bad)
aad
mov
push
cld
rcl
in
adc
jl
mov
dec
sbb
dec
mov
std
add
or
call
xor
inc
inc
ins
fcmovnu
sbb
pop
inc
sub
inc
fld
shr
in
dec
mov
imul
inc
pop
jmp
sub
ss
push
es
jne
sti
xchg
xor
rcl
(bad)
lea
aas
rol
ficom
cli
aas
arpl
adc
rcl
mov
loopne
jo
sub
imul
sub
imul
neg
mov
mov
out
sbb
push
jp
ficom
rol
or
xchg
cmp
fbstp
(bad)
jnp
popa
fisttp
retf
cdq
add
cmps
leave
js
or
jmp
jmp
xchg
leave
sbb
sbb
(bad)
or
sar
adc
mov
mov
addr16
in
bound
mov
addr16
pop
push
mov
cmps
dec
add
and
lea
sub
in
mov
push
movs
nop
addr16
mov
and
iret
push
ss
xchg
loopne
mov
dec
push
pop
or
stos
js
out
xor
in
addr16
jne
mov
out
cmp
retf
or
nop
push
adc
aas
mov
mov
leave
ret
push
movs
cmp
add
sbb
sbb
fld
add
jnp
fs
mov
test
jae
sub
cmc
(bad)
out
outs
out
mov
fdivr
jns
sar
mov
pop
mov
jmp
out
mov
gs
ss
fwait
popa
ds
xchg
jmp
int
mov
retf
xor
scas
add
adc
sbb
add
ror
mov
jp
sbb
inc
addr16
pop
inc
cmp
dec
lahf
rcr
sub
xchg
je
jmp
pusha
aas
and
mov
dec
popa
pop
nop
mov
popa
aad
or
bound
ins
mov
jge
jle
xchg
mov
push
xchg
adc
inc
xor
inc
xchg
ret
test
imul
pop
ss
mov
cmp
clc
lods
shr
fcomp
fmul
adc
movs
mov
ins
in
pusha
and
in
(bad)
cs
jle
mov
outs
xchg
inc
or
mov
je
scas
dec
xchg
xchg
pop
push
cmp
add
or
jb
and
sti
add
push
inc
enter
xor
xchg
inc
mov
adc
hlt
pop
pop
mov
xor
stos
add
imul
dec
mov
and
jns
inc
push
call
stc
ja
xor
iret
push
sbb
bound
mov
and
adc
aam
repz
fldenv
push
je
icebp
mov
(bad)
sbb
sub
and
pop
repnz
pop
cmp
sub
mov
cmc
or
push
not
mov
bound
sub
xchg
repz
std
xor
lds
pop
ins
adc
in
jae
test
mov
push
mov
push
in
lea
cmp
loope
sub
nop
sub
mov
or
or
movs
dec
xchg
or
(bad)
div
lock
enter
and
inc
jg
std
and
and
inc
inc
sub
adc
jg
cld
push
xchg
inc
jo
popa
js
cmp
mov
jbe
fisubr
mov
inc
push
call
sti
and
scas
test
mov
jp
and
ror
xor
mov
jnp
pop
push
add
cmps
and
jle
cmp
inc
lds
std
rcl
(bad)
push
jmp
push
add
push
push
(bad)
out
cmps
add
es
fstp
inc
sbb
xchg
les
mov
sbb
cmp
das
(bad)
hlt
add
ss
inc
mov
call
pop
jbe
pop
cmp
aam
dec
fs
sahf
jo
xchg
sbb
push
push
mov
repz
mov
leave
sbb
movs
les
inc
adc
jp
lods
pop
push
adc
and
inc
fldcw
les
jl
or
movs
dec
add
jns
cmp
dec
fnsave
pop
add
ds
push
or
pop
scas
sub
dec
arpl
(bad)
pop
inc
pop
xchg
sbb
(bad)
and
xchg
cli
outs
xchg
dec
mov
fldcw
and
cmp
lods
mov
inc
aaa
repnz
cmp
shl
fist
popf
sub
inc
pop
inc
push
(bad)
in
sub
out
ret
mov
mov
cmp
pop
add
pop
or
mov
aam
or
or
shr
outs
ins
pop
pop
mov
jne
mov
shl
adc
and
add
cmp
lods
in
sub
in
pop
dec
ja
fwait
and
fdivr
(bad)
jno
pusha
mov
ret
mov
mov
fwait
jle
inc
dec
cmp
jmp
cmp
leave
ds
fisubr
mov
aaa
mov
inc
and
retf
add
adc
mov
pushf
add
sub
adc
mov
aas
and
popa
mov
in
mov
pop
cmp
sbb
aam
push
mov
test
xchg
retf
sbb
add
dec
add
mov
add
jle
das
fisub
and
push
mov
push
test
scas
icebp
in
adc
out
cld
mov
cmp
mov
and
pop
enter
retf
jecxz
jmp
and
mov
push
shr
int
mov
and
and
cmc
and
ja
add
cmp
pop
mov
dec
mov
fsub
shl
or
dec
mov
xor
dec
inc
dec
mov
clc
push
int3
outs
jmp
(bad)
push
icebp
loope
inc
adc
sbb
adc
in
xor
out
mov
add
dec
stos
mov
fidiv
and
in
sub
lods
inc
sub
mov
data16
(bad)
inc
pop
imul
push
push
fmul
scas
xchg
pop
stc
dec
loope
daa
add
jb
sub
mov
test
pop
add
adc
js
pop
or
aam
rcl
cmp
test
rol
push
push
inc
and
jnp
xchg
loopne
xor
mov
icebp
std
cld
fisttp
lds
popa
mov
inc
pop
sbb
sbb
daa
sub
jg
nop
jo
xchg
mov
xchg
test
jle
vpackssdw
jae
inc
dec
test
cmc
xchg
mov
retf
in
rcl
dec
xchg
inc
sbb
cmc
aaa
mov
(bad)
mov
and
and
ja
pop
aam
mov
fwait
and
sub
or
push
adc
add
push
mov
pop
xchg
in
rcl
pop
inc
es
jle
retf
nop
mov
les
(bad)
int
xchg
(bad)
sahf
inc
push
scas
jmp
mov
scas
std
pop
sahf
xchg
jg
add
sahf
xchg
sbb
xchg
mov
dec
mov
ret
push
loop
repz
nop
adc
jbe
xchg
mov
mov
xchg
fwait
or
fld
cmp
xor
push
les
push
sbb
je
(bad)
mov
cmp
xor
daa
sbb
ret
iret
xor
inc
cmp
xchg
hlt
dec
mov
ins
push
sbb
mov
push
fild
popf
ss
push
or
mov
cmp
inc
repz
(bad)
lock
out
or
inc
cmc
out
dec
xchg
outs
sti
sbb
mov
in
sbb
test
or
imul
inc
dec
es
popf
mov
jmp
popa
js
xor
movmskps
cmp
push
pop
fisub
lods
sub
or
cmps
jmp
inc
shl
add
jge
mov
jge
or
jle
or
xor
jns
pop
inc
sbb
mov
pop
es
shl
or
xor
pop
pop
xchg
cli
push
lods
pop
and
test
adc
or
call
je
sub
out
(bad)
pop
add
dec
pop
in
fcmovnu
inc
into
dec
sti
mov
pop
pushf
add
sbb
arpl
aad
cs
xchg
sahf
hlt
inc
mov
and
iret
rcr
(bad)
cld
jns
cld
inc
push
ins
push
mov
and
adc
xchg
(bad)
aam
sahf
cld
inc
cmc
pop
mov
xlat
xlat
sub
in
xchg
jae
lahf
ror
cs
imul
test
inc
inc
sub
stos
popf
in
mov
in
adc
int
inc
fistp
dec
and
(bad)
aas
pop
lods
lock
enter
call
mov
jmp
ret
mov
or
cmp
mov
pop
jge
pop
dec
sbb
inc
pop
mov
leave
aad
sar
ins
xor
inc
mov
inc
(bad)
mov
sbb
stos
jge
pop
adc
icebp
push
mov
int3
aam
repz
sar
sbb
xchg
fdivr
lods
inc
das
jge
push
and
leave
mov
pushf
fwait
or
jae
sub
aad
iret
mov
aad
adc
loopne
add
fisubr
adc
stos
jno
sub
jmp
mov
mov
clc
xchg
lock
ds
sahf
aad
mov
cmp
push
fdivr
mov
pusha
pop
jg
test
pop
mov
outs
pop
pop
adc
push
addr16
dec
inc
out
popa
and
je
mov
mov
in
lods
inc
dec
sti
pusha
jne
push
mov
das
lds
(bad)
dec
mov
cwde
rcr
shl
ret
pusha
mov
ror
mov
mov
not
out
out
cmp
in
test
jmp
aam
and
cld
adc
sub
mov
ds
xor
loope
int3
repz
hlt
(bad)
icebp
adc
sub
in
dec
iret
xor
jl
daa
ret
push
xchg
ret
and
dec
cmp
cmps
mul
add
ficom
fidivr
push
xor
pop
cmps
cmc
(bad)
jle
aam
jle
jns
sub
lods
int3
dec
add
ror
jecxz
adc
cmp
jecxz
xor
gs
push
add
or
loop
aam
xchg
dec
pop
lds
sbb
or
in
add
push
fucomi
fwait
xlat
(bad)
retf
dec
in
mov
mov
inc
xchg
es
lea
call
cmp
xchg
dec
ins
das
xor
pop
sub
jmp
stos
icebp
or
rcl
cmp
pusha
ror
xor
or
adc
sbb
xor
ins
cmp
cmp
shr
sub
fld
ficomp
pop
(bad)
into
jp
imul
adc
mov
push
push
xchg
mov
inc
mov
xor
adc
mov
cmp
outs
dec
add
outs
dec
ins
sti
cld
push
int3
arpl
retf
cmp
xchg
stos
mov
inc
repz
add
sub
sbb
into
pop
inc
cli
pop
popf
sbb
mov
int3
pop
push
dec
cmc
repnz
inc
mov
rol
ds
aam
xlat
(bad)
mov
lea
fcmovnbe
daa
ins
outs
jmp
ret
pusha
inc
test
movs
test
ret
mov
add
inc
mov
cmp
mov
hlt
jp
and
in
cmp
add
dec
fcmovb
jmp
sbb
or
jnp
sub
xchg
or
loopne
mov
neg
xchg
jmp
jecxz
jecxz
f2xm1
stos
pushf
std
sahf
iret
sbb
shl
dec
hlt
sub
mov
jecxz
cmp
aaa
adc
push
push
adc
inc
jmp
adc
cmp
jp
xchg
pop
loop
in
and
test
out
int
call
add
pop
in
mov
fild
and
inc
and
pop
pop
ss
repnz
push
push
xor
xor
aas
ja
inc
mov
out
cld
in
retf
push
test
cmp
mov
push
push
adc
or
out
gs
push
cmp
or
mov
mov
inc
cdq
or
or
cmp
pop
rol
xchg
mov
jge
outs
pop
mov
movs
ins
jg
bound
push
fld
sahf
outs
lods
dec
addr16
into
mov
dec
movs
(bad)
xchg
scas
mov
out
dec
xor
popa
ds
test
iret
loop
imul
mov
jne
stos
jae
xor
retf
sub
rcl
daa
pop
jmp
mov
movs
adc
inc
jne
jp
pop
in
lahf
aam
add
adc
mov
dec
xor
sbb
repnz
mov
add
je
xchg
mov
icebp
pop
mov
cs
addr16
jge
push
das
mov
jns
mov
cmp
jle
int3
cmp
sti
and
dec
or
and
aas
xchg
cmp
mov
aas
das
shl
mov
pusha
cmp
jo
add
shl
jle
test
add
mov
xchg
push
jnp
jbe
add
and
nop
or
lock
(bad)
adc
and
xchg
pop
jg
movs
fbld
mul
xchg
mov
test
push
xor
(bad)
or
movs
test
pop
arpl
pusha
mov
push
mov
cmp
sub
inc
mov
jae
or
sahf
push
ret
sbb
mov
enter
mov
fisttp
es
fwait
sub
repz
inc
inc
aam
mov
and
push
inc
addr16
adc
mov
cdq
fcomp
clc
inc
sub
in
pop
out
ds
pop
imul
loope
push
mov
xchg
outs
mov
idiv
lock
mov
pop
or
mov
ffreep
iret
cmp
adc
out
pusha
hlt
arpl
adc
outs
hlt
and
xchg
fmul
cmp
addr16
push
data16
fst
les
mov
jae
dec
xchg
(bad)
loope
hlt
xlat
mov
and
das
(bad)
sbb
scas
or
sbb
jns
div
push
and
test
mov
scas
cmp
mov
sbb
mov
(bad)
out
sub
mov
lods
adc
mov
pop
gs
loopne
jb
les
jl
jb
jecxz
adc
sub
sbb
add
div
cmps
inc
sub
lea
jl
repz
jge
mov
cmp
ds
inc
inc
cwde
mov
dec
and
sbb
int3
adc
sbb
xchg
cli
(bad)
sub
push
or
or
nop
sub
mov
daa
cmp
ins
and
fmul
addr16
or
call
imul
movs
(bad)
mov
sbb
lock
push
repnz
jnp
out
mov
xchg
push
jmp
stos
stos
aad
jg
push
call
or
mov
xchg
daa
loopne
mov
lahf
xchg
ins
test
xor
fwait
dec
cmps
push
xchg
rol
pop
popf
cli
cmc
cld
out
fldcw
mov
mov
xor
mov
fnsave
repnz
sbb
out
movs
dec
gs
jmp
cmps
lods
xor
mov
ror
ds
mov
add
sub
(bad)
jne
mov
xor
pop
mov
hlt
sbb
push
movs
dec
sbb
push
outs
add
imul
arpl
mov
push
cmp
mov
mov
push
std
cmp
sbb
xlat
hlt
pop
in
(bad)
jmp
retf
or
outs
(bad)
pop
pop
and
mov
mov
icebp
mov
mov
in
retf
inc
sbb
or
jl
gs
pop
add
cdq
addr16
in
and
aas
lods
push
add
out
mov
adc
cwde
or
sbb
test
mov
loop
and
pop
xlat
in
adc
and
lock
sbb
cli
push
inc
mov
addr16
lock
daa
jecxz
nop
mov
ds
xchg
mov
jmp
out
sbb
into
push
and
nop
fist
jecxz
cmp
jmp
inc
fnsave
jl
fcomip
pop
mov
leave
mov
push
mov
adc
lds
retf
inc
popa
pop
jle
xchg
and
inc
push
lds
rcl
mov
xchg
xchg
iret
push
xor
or
fadd
xor
daa
adc
push
mov
scas
fidivr
cmps
dec
xchg
gs
cmp
sbb
pop
or
shr
mov
lds
and
xor
cmp
inc
jmp
into
sbb
adc
cmp
hlt
mov
xchg
xchg
out
int
or
test
out
mov
outs
mov
pop
push
outs
push
jb
dec
popa
aas
adc
int3
call
pop
sbb
mov
sbb
lds
rcl
int
jg
test
push
inc
(bad)
jp
xchg
cmp
imul
dec
sbb
js
xor
(bad)
mov
dec
clc
cs
dec
mov
cmp
fs
xor
sbb
jge
pop
loop
cmp
ja
and
ins
jmp
pop
adc
or
test
and
cmp
push
inc
aam
das
jbe
fcom
or
or
mov
mov
int
add
xor
cli
mov
stos
add
sub
lds
inc
jnp
xor
push
cdq
jg
dec
dec
sbb
int3
inc
je
cmc
pop
outs
pusha
jnp
xchg
aas
das
sub
or
shl
push
out
sahf
test
sahf
push
mov
(bad)
cmps
pusha
xor
mov
enter
fnsave
iret
std
in
fidiv
lea
add
sub
adc
aaa
add
dec
std
add
ja
stc
adc
pop
mov
lea
loop
pop
outs
jge
mov
or
lock
mov
cmc
pop
aas
sub
rol
test
hlt
test
sahf
idiv
xchg
aad
dec
dec
loope
push
push
(bad)
xchg
fmulp
pushf
cld
inc
pop
outs
lods
cmc
pop
cmp
adc
sub
or
(bad)
pop
retf
sahf
push
mov
movs
add
mov
pushf
retf
mov
sbb
xchg
jecxz
push
sub
sti
pop
iret
fcomp
scas
sbb
xchg
lods
adc
mov
rcl
pop
inc
mov
call
ret
out
inc
std
call
aam
push
push
cmps
or
stos
jmp
and
pop
mov
push
xor
fsubr
loop
mov
mov
lds
mov
adc
or
adc
mov
shl
iret
ret
mov
int3
packsswb
or
call
push
outs
popf
inc
push
jle
mov
or
adc
arpl
xchg
loop
cmp
cwde
add
shl
mov
pop
jmp
pop
inc
shl
push
enter
and
fisttp
and
jg
out
outs
outs
inc
xchg
add
inc
rcl
sbb
lds
mov
lods
daa
inc
and
add
xor
ds
sti
sub
sbb
bound
inc
fbld
stc
mov
movs
pop
cmp
xor
xlat
fsub
bound
(bad)
or
cld
mov
ins
adc
and
adc
inc
clc
push
adc
push
shl
inc
sbb
loopne
xor
cdq
nop
fld
in
cmp
push
pushf
loop
(bad)
fild
sub
test
repz
jns
pop
loope
rcr
inc
int3
retf
sub
es
cmps
fwait
mov
outs
(bad)
arpl
lods
pusha
int3
push
mov
pop
shl
test
fldenv
cmp
xchg
push
aas
push
pusha
call
jo
xor
or
sub
mov
out
ins
fistp
ins
adc
pop
popf
ins
sub
(bad)
push
addr16
das
mov
pop
inc
jmp
or
out
je
xor
adc
test
sbb
pop
adc
mov
xor
inc
dec
aas
bound
aad
pushf
mov
jmp
mov
imul
fisubr
retf
push
sbb
or
pop
int
fs
push
sub
pusha
sbb
pop
or
ret
jle
mov
jmp
sahf
dec
sbb
stos
rcl
imul
push
sbb
ins
call
push
fist
fwait
pop
rcr
pop
aaa
popa
jg
repnz
dec
dec
sbb
call
mov
stos
popa
in
out
jmp
in
inc
jo
(bad)
retf
inc
dec
xchg
icebp
mov
mov
loope
jno
or
cdq
jmp
cmp
call
out
(bad)
cmp
popf
add
clc
hlt
or
(bad)
shr
test
popf
cld
push
into
or
dec
mov
cmp
adc
add
lea
cmp
xchg
sbb
sbb
mov
add
or
jbe
inc
fdivr
lock
dec
aaa
mov
das
mov
dec
and
and
xlat
sbb
fwait
int
mov
sub
ror
jl
cmp
and
jnp
movs
sahf
adc
and
cwde
mov
dec
fldcw
push
add
int3
stc
mov
sbb
xchg
enter
or
(bad)
gs
popf
push
dec
and
pop
pusha
std
ins
stos
out
dec
lods
jno
stos
dec
mov
xchg
enter
fcom
mov
xchg
xchg
sahf
push
pop
dec
or
cmp
xor
mov
into
xchg
int
cmp
mov
jp
aas
push
addr16
aad
sar
cmp
cmp
pop
sbb
sub
ret
xchg
nop
mov
mov
jbe
aaa
jno
inc
es
fild
push
mov
jae
iret
repnz
adc
lahf
or
mov
mov
pop
mov
or
aaa
mov
jnp
cmp
push
xor
(bad)
jo
shl
or
daa
sub
stos
sub
popa
mov
sbb
shl
leave
(bad)
fs
punpcklbw
xor
fst
movs
dec
pop
jbe
xchg
mov
imul
test
adc
push
into
outs
push
mov
mov
test
aas
pushf
jl
pop
call
sbb
mov
inc
xchg
xchg
popf
cmp
mov
movs
(bad)
jbe
push
mov
retf
mov
pushf
or
fcomp
loop
pop
cmc
dec
inc
dec
stos
jo
jmp
pop
sbb
sahf
xor
stos
adc
sbb
repnz
dec
add
pop
cdq
rdtsc
jle
mov
cmp
out
in
xor
mov
into
jns
cld
push
add
fld
in
adc
fcom
or
sub
jmp
cs
cdq
or
shl
or
int3
mov
cmc
sub
adc
mov
jo
mov
or
fdivr
cmp
push
xor
ret
sbb
(bad)
retf
out
adc
xchg
push
inc
dec
add
sub
(bad)
sbb
adc
sbb
add
mov
vmwrite
inc
mov
into
int
jns
clc
or
test
or
adc
xchg
xchg
pop
scas
jne
sub
out
xchg
pusha
(bad)
pushf
adc
mov
mov
lahf
mov
aam
pop
bound
jecxz
adc
cmp
and
test
cmp
add
sub
gs
push
fs
jne
cmp
sub
lea
stos
mov
test
loop
push
fst
jl
(bad)
pop
jae
sbb
aam
sub
neg
inc
aad
call
jbe
xchg
mov
or
push
xchg
and
adc
ja
mov
sub
(bad)
jno
test
xchg
xchg
mov
jae
add
lods
scas
and
cmp
(bad)
add
push
retf
movs
fadd
cmp
rcl
aad
adc
inc
loope
or
nop
mov
mov
out
inc
xor
adc
sbb
or
or
repz
lock
fwait
loope
jle
push
out
call
out
or
(bad)
and
mov
jae
out
clc
nop
daa
dec
xchg
xchg
call
pop
add
cs
mov
or
xchg
or
cld
hlt
pop
sub
cmp
inc
rcr
jecxz
jmp
in
adc
xchg
cmc
lods
fbld
pop
adc
neg
mov
jne
sti
loopne
sbb
xchg
cld
add
mov
call
pop
adc
fwait
aas
outs
xor
cmp
sbb
inc
(bad)
std
adc
xor
std
(bad)
sbb
pop
je
jns
or
(bad)
sub
dec
call
jmp
aad
pusha
mov
das
sub
push
test
and
outs
adc
mov
addr16
scas
sub
cmc
jb
sti
mov
xchg
sbb
adc
mov
sub
push
xor
clc
xor
pop
sbb
repnz
dec
sub
inc
push
aas
out
xchg
retf
sbb
adc
aam
inc
push
dec
push
push
mov
fisub
and
ret
cs
add
mov
xor
inc
int3
rcr
(bad)
adc
xchg
xchg
pushf
fnsave
pop
int
out
dec
push
pushf
adc
xor
cmp
and
out
movs
sub
hlt
pminub
aas
adc
jns
cs
xchg
shr
dec
mov
sbb
je
outs
cmp
lea
jmp
call
push
(bad)
mov
jl
and
mov
mov
add
push
shr
iret
cmp
sbb
(bad)
pop
into
cmp
shr
xchg
popa
and
pop
aaa
or
fadd
jns
(bad)
dec
popa
mov
cmp
jge
out
add
sbb
jmp
pushf
and
je
cmp
jmp
loopne
pop
js
pop
inc
xor
add
pop
mov
stos
(bad)
pusha
ret
sbb
and
push
xor
rcr
adc
adc
sbb
icebp
outs
mov
stos
lds
retf
(bad)
jmp
imul
mov
xchg
sub
sub
call
lock
out
test
ret
cmp
lahf
aaa
data16
adc
fild
mov
fcom
mov
mov
jne
and
push
or
dec
call
or
sub
addr16
sbb
(bad)
scas
sahf
into
lods
hlt
jge
cmps
push
pushf
jno
fcom
or
jno
mov
jb
test
icebp
dec
scas
lea
inc
or
scas
and
pop
mov
and
adc
dec
aam
ss
sar
jo
fdiv
xchg
les
mov
lea
jl
ret
mov
xor
shr
cld
jl
pop
das
rcl
fnsave
sahf
xchg
popf
mov
pop
fneni(8087
hlt
inc
mov
aam
or
adc
adc
aad
rcl
ja
xchg
shl
in
pusha
cmp
(bad)
mov
cs
cmps
sub
fadd
adc
push
mov
movsx
sub
repz
ficom
mov
mov
and
jnp
adc
ins
cwde
not
imul
xor
xchg
cmp
jns
fild
mov
test
mov
dec
out
mov
in
scas
into
ret
scas
cdq
pop
jmp
sub
dec
fbld
icebp
add
jle
and
fcmove
rcl
int
pop
pop
or
mov
mov
iret
fcomp
pop
adc
pop
dec
mov
cmps
dec
xchg
xchg
cdq
ja
push
xor
sbb
daa
jbe
psllq
push
test
jo
stc
add
and
shl
sub
adc
(bad)
push
jmp
stc
fst
ret
leave
jmp
icebp
dec
mov
jmp
into
stc
das
xor
jns
sbb
rol
or
fwait
push
xor
loop
push
popf
je
stc
mov
jg
out
inc
ror
sbb
les
xor
popa
punpckhbw
lahf
stos
jmp
and
add
inc
setle
sub
jae
fst
mov
lock
fwait
cmc
bound
push
add
scas
mov
iret
daa
sub
and
fadd
cmp
ins
ror
loope
mov
mov
ins
ret
inc
and
cmp
cs
fisubr
xor
call
sub
lock
cmp
xchg
js
cmp
neg
popa
fld
loopne
mov
std
adc
jns
movs
in
lods
enter
jp
adc
imul
jno
pop
cmp
scas
jecxz
mov
mov
jl
mov
and
sub
dec
and
aam
cli
sahf
mov
lods
sti
hlt
jecxz
ror
cli
cld
aam
pusha
gs
aaa
lods
and
fistp
test
inc
mov
bound
ja
(bad)
push
jmp
lock
imul
aaa
stos
add
pop
sar
test
movs
mov
ins
inc
sub
ja
rcr
dec
lods
push
cwde
jmp
mov
adc
dec
ret
push
and
xchg
out
sbb
les
jns
call
das
and
ficom
inc
test
xor
lea
xchg
nop
xchg
rol
mov
aam
out
call
in
imul
iret
mov
repnz
loope
pop
xchg
and
ins
out
pop
outs
jno
inc
xchg
cmps
mov
inc
fbstp
movs
mov
add
(bad)
lods
test
fisub
stos
push
push
ins
lds
(bad)
and
mov
sahf
les
pop
cmp
jno
sub
or
adc
adc
dec
out
test
je
movs
popf
jmp
ja
or
xchg
cmp
jp
pop
pop
add
sub
xor
nop
xor
mov
push
xor
jb
in
shl
std
xchg
bnd
push
out
std
inc
aad
adc
sub
and
add
and
(bad)
mov
jmp
cmp
mov
and
das
fld
fisub
sub
aad
lahf
cmps
sar
popf
pop
sahf
mov
jns
test
(bad)
sub
sar
ds
in
mov
jo
jns
xor
pushf
lods
push
nop
lds
pop
inc
mov
aaa
pop
scas
mov
aaa
dec
and
and
add
mov
in
add
adc
pop
sub
dec
cmps
mov
je
and
jl
fistp
rep
test
and
je
std
fsubp
push
pushf
cmc
mov
(bad)
aas
inc
in
rcr
cs
sbb
mov
in
jmp
inc
icebp
enter
cmps
movs
shr
loopne
mov
push
call
sbb
popf
pop
test
inc
fisttp
and
jb
and
push
jo
adc
push
pop
mov
mov
jecxz
jl
mov
in
add
jns
push
sub
out
add
rcr
loopne
pop
aaa
enter
stc
scas
(bad)
lahf
inc
dec
mov
jge
mov
jb
or
mov
outs
pop
ds
xor
jge
stc
pop
dec
push
lahf
ss
push
and
pop
lods
ins
dec
enter
es
sti
mov
jmp
cwde
jae
xchg
mov
out
imul
ficomp
(bad)
movs
into
inc
pop
push
scas
dec
addr16
dec
mov
mov
pop
push
cs
sub
daa
(bad)
scas
xlat
ss
daa
mov
mov
loopne
hlt
mov
xor
jle
mov
imul
(bad)
ins
out
push
repnz
(bad)
push
mov
std
idiv
cmc
add
mov
ins
dec
mov
arpl
ror
loopne
mul
inc
ficomp
dec
mov
jg
adc
sbb
sbb
neg
jg
nop
sub
cmps
pop
push
call
js
inc
es
outs
fstp
enter
cdq
jle
cmp
ret
das
movs
sub
out
cmp
addr16
test
and
iret
add
xor
mov
repnz
cmp
push
iret
ss
loopne
sbb
shl
rol
xlat
fild
(bad)
(bad)
pop
cwde
dec
mov
inc
sub
rcl
push
xchg
add
xor
inc
push
loop
sbb
xchg
call
jmp
mov
sbb
xor
sub
test
repz
bound
or
and
xchg
dec
inc
cmc
mov
pop
add
sub
cmc
out
ror
jmp
dec
xchg
xchg
clc
imul
adc
xchg
mov
add
fld
mov
ins
and
aas
inc
test
leave
ja
movs
pushf
les
dec
mov
addr16
(bad)
(bad)
js
or
pusha
sub
mov
fs
adc
jge
(bad)
cmc
aaa
dec
aas
mov
or
xchg
jmp
mov
inc
call
cmp
dec
sub
inc
add
push
xor
bound
in
or
mov
sub
sub
ror
in
mov
and
out
icebp
pop
and
arpl
mov
div
fbld
stos
lahf
out
fsub
push
push
jbe
dec
cwde
jp
xlat
cld
jge
sbb
sub
div
pop
mov
stos
dec
lods
or
push
inc
jmp
fstp
push
ss
shl
xchg
xor
and
jmp
bound
not
aas
je
test
and
jbe
xchg
add
les
stos
hlt
jmp
sbb
sub
call
and
mov
push
jns
sbb
pop
jl
xor
dec
push
mov
mov
mov
ret
in
mov
xchg
xor
ds
int3
fxtract
and
loopne
ins
clc
outs
lods
(bad)
ja
mov
test
xor
int3
(bad)
cmp
sub
stos
jnp
sbb
in
push
aam
repz
out
jecxz
push
pop
shr
sub
add
(bad)
repnz
fisubr
mov
jl
add
and
cmp
push
mov
jmp
lds
into
retf
fwait
xor
adc
popa
xor
retf
outs
mov
xchg
in
cwde
outs
pop
add
(bad)
cmps
mov
pop
das
xor
dec
bound
(bad)
mov
sub
cmp
je
je
push
mov
movs
pop
or
ror
cmp
aas
test
cli
rol
or
jmp
jno
cld
sahf
cmp
(bad)
nop
push
dec
push
push
daa
inc
dec
lods
and
mov
push
inc
enter
mov
push
mov
test
ins
fsub
or
sahf
mov
mov
mov
aas
rcr
movs
nop
sahf
or
xor
call
sbb
push
lods
push
add
add
add
sbb
enter
sbb
or
jl
and
stos
lds
cmp
cmp
hlt
push
lods
lock
or
sub
dec
add
pop
xor
lods
(bad)
(bad)
push
jne
and
neg
and
pop
adc
in
adc
int
and
mov
aas
add
and
cmp
imul
ins
mov
push
adc
sahf
jno
mov
cmps
aas
ret
adc
mov
in
dec
ret
jno
mov
xchg
xor
fistp
mov
xor
les
jge
mov
test
aaa
sti
hlt
sub
jle
cmp
inc
cdq
sbb
push
test
pusha
outs
(bad)
movs
scas
aad
sbb
sahf
clc
retf
retf
arpl
jae
and
inc
loopne
in
cmps
cmp
icebp
jge
xchg
ss
(bad)
dec
and
hlt
leave
movs
sbb
test
sti
mov
or
pushf
sub
xor
push
jl
test
inc
fidiv
mov
and
and
sub
jmp
ins
push
mov
test
and
cld
hlt
daa
leave
out
xor
cmp
loopne
mov
fild
cmc
mov
mov
mov
scas
xchg
sbb
mov
outs
imul
push
pop
push
mov
push
inc
xchg
jmp
enter
pop
pop
pop
jns
or
sub
push
cmp
mov
shl
push
xchg
xchg
push
add
sbb
jecxz
push
jecxz
mul
mov
inc
sbb
mov
cmc
cmp
xchg
pop
and
out
inc
ds
mov
inc
sti
mov
lahf
push
cmps
push
ins
and
movs
vmovdqu
not
and
adc
dec
add
inc
xlat
mov
ret
push
dec
(bad)
pop
retf
sar
push
sahf
fxch
xchg
dec
pop
repz
imul
dec
mov
(bad)
inc
or
dec
leave
push
loope
inc
nop
pop
and
adc
pop
jmp
jns
jmp
popa
mov
mov
mov
xor
ss
fs
mov
and
mov
cmp
or
cdq
cmp
retf
xchg
xchg
icebp
sbb
inc
xchg
das
fwait
mov
hlt
in
add
xlat
dec
into
stos
jno
mov
or
or
xlat
sahf
mov
out
jecxz
les
repnz
das
push
(bad)
jo
rol
scas
mov
jb
or
pop
adc
stos
cld
adc
and
jge
sbb
rol
sahf
lds
icebp
jmp
xchg
sbb
out
pushf
adc
popf
xor
fcomp
outs
cmc
jmp
mov
(bad)
adc
cmc
bound
fwait
ins
retf
inc
cli
jmp
xchg
dec
push
ja
jb
fdivp
adc
adc
jb
add
movs
nop
inc
(bad)
jo
cld
test
sub
test
outs
mov
nop
retw
test
lods
or
clc
mov
mov
mov
add
repz
enter
mov
jae
mov
bswap
lock
push
dec
push
mov
and
stos
lds
icebp
cmp
jp
hlt
xor
ss
sti
fiadd
lds
sti
mov
fidivr
loope
jmp
push
outs
ins
mov
sar
sub
test
sub
push
lods
ins
sub
mov
scas
xchg
sbb
push
xchg
paddusb
mov
mov
and
and
and
xchg
mov
jne
adc
enter
adc
aad
dec
nop
xchg
sbb
fiadd
int
adc
outs
(bad)
dec
arpl
mov
pop
int3
ins
int
stc
jae
in
mov
mov
mov
das
jmp
sbb
(bad)
xor
std
aad
pop
ret
jl
pop
shr
jae
sub
inc
jne
rcl
inc
xchg
js
scas
shr
mov
or
lock
cmp
cmp
pop
sbb
add
addr16
mov
pushf
ret
mov
test
les
ss
mov
dec
shr
sbb
ins
sub
in
dec
cmp
out
mov
push
js
jb
push
mov
cmc
es
cmp
push
arpl
iret
imul
(bad)
ins
rcr
push
jno
sbb
mov
adc
cmp
sahf
and
jge
xor
cmp
or
mov
inc
std
aam
inc
mov
mov
dec
dec
adc
pextrw
add
repnz
ins
push
gs
aaa
test
test
test
test
dec
outs
xor
mov
stos
stc
out
sahf
mov
cli
je
out
gs
sbb
dec
fsubrp
push
xor
(bad)
daa
ret
cmps
pop
pusha
xchg
ins
int
movs
imul
push
mov
outs
mov
and
xchg
jge
aam
cmp
jmp
(bad)
mov
sub
enter
mov
dec
push
lahf
dec
test
pushf
xor
inc
or
std
and
icebp
mov
adc
outs
cwde
aaa
or
push
xchg
add
gs
dec
dec
push
jne
loope
aas
call
mov
sub
jo
fwait
aaa
mov
or
push
arpl
inc
out
(bad)
pusha
push
imul
mov
mov
mov
adc
sti
mov
mov
push
pop
in
call
xor
mov
mov
add
adc
fs
aaa
add
jecxz
xchg
idiv
out
idiv
mov
inc
aad
mov
mov
cmps
ins
inc
pop
jae
mov
pusha
pop
mov
jg
xchg
(bad)
cs
mov
mov
lahf
mov
sub
popa
and
and
cmp
movs
mov
adc
les
mov
jno
xchg
xor
dec
mov
or
movs
mov
xor
lods
push
mov
ds
pop
(bad)
fstp
retf
gs
jl
xchg
dec
dec
jg
mov
retf
xchg
mov
push
pushf
dec
ret
add
jg
mov
adc
ret
loop
jp
sbb
call
and
mov
xor
xchg
movs
pop
jle
inc
cmp
xor
repz
popa
ret
mov
arpl
inc
les
(bad)
test
xor
call
pop
(bad)
mov
xlat
dec
int3
dec
pusha
aad
daa
jno
cmp
out
mov
xchg
lds
jne
sub
jmp
cmps
sub
mov
call
fwait
addr16
shr
mov
adc
add
enter
cmp
dec
sub
mov
xchg
push
dec
push
scas
inc
(bad)
std
pushf
call
sub
mov
push
scas
or
rcl
mov
mov
push
out
cmp
pop
mov
stos
add
jl
jg
or
int
iret
push
mov
push
mov
ins
inc
cmp
mov
std
xlat
jnp
popa
adc
mov
rcr
fcom
rcl
ficomp
sbb
stc
(bad)
sub
mov
xchg
(bad)
sti
cmps
mov
test
sub
add
adc
xchg
stos
movs
jb
and
dec
adc
adc
jne
retf
mov
test
leave
stc
les
jb
icebp
int3
push
sbb
jne
jno
call
loope
inc
mov
pop
xor
out
pop
pop
in
or
mov
mov
test
test
mov
mov
jg
fsub
and
cmp
in
mov
mov
ja
xor
into
mov
fxch
mov
and
ss
push
rcr
das
xchg
inc
xchg
es
dec
adc
into
sub
jns
bound
xchg
inc
shr
mov
das
(bad)
push
repz
mov
dec
js
mul
imul
jecxz
shl
test
test
jae
movs
rol
jg
or
cmps
cmps
test
cli
test
xchg
call
dec
cdq
clc
iret
cmc
inc
pop
add
fwait
or
sti
jle
xchg
arpl
pusha
js
into
and
dec
lea
pushf
cmp
inc
shl
push
rcl
int
jp
(bad)
lds
lods
push
mov
lds
mov
jb
lds
mov
out
daa
retf
mov
xor
jmp
dec
sub
xor
aam
jp
xchg
adc
(bad)
push
nop
dec
xchg
fdivr
mov
cld
dec
adc
adc
cmp
stos
dec
fmulp
dec
xor
mov
scas
or
xchg
sub
sbb
(bad)
fidiv
test
stos
push
lea
jmp
lods
mov
jbe
ret
cmc
jae
loope
fcmove
enter
ret
fsub
test
push
idiv
es
lds
push
push
shl
dec
shl
jmp
int
test
cmp
mov
sahf
sbb
data16
xchg
push
xchg
cmp
ficom
iret
pop
adc
iret
push
cmp
jecxz
pop
jns
cmp
mov
dec
dec
sbb
jmp
sub
fmul
xor
fs
push
cmp
leave
xor
loope
sbb
mov
jnp
xor
neg
xor
(bad)
pushf
sti
dec
jb
jo
(bad)
jne
fdivr
xchg
inc
loop
imul
loopne
(bad)
mov
pop
ror
and
retf
cmp
sbb
mov
leave
push
xor
push
lock
int3
mov
mov
xor
or
sbb
jae
mov
clc
adc
cmc
or
pop
jge
cdq
daa
push
scas
adc
sahf
adc
mov
push
scas
mov
push
inc
not
jmp
mov
popf
call
mov
stos
popa
icebp
clc
lods
mov
xchg
pop
(bad)
ins
out
mov
loop
mov
adc
sbb
bnd
test
jne
in
ins
clc
xchg
jmp
std
sbb
xor
xchg
jl
enter
dec
adc
scas
mov
add
retf
inc
es
ins
adc
imul
sub
into
mov
add
add
das
(bad)
adc
into
cld
loope
jo
pop
ret
stos
cmp
pop
jbe
jle
add
lahf
sub
cmp
sub
jg
repnz
mul
dec
retf
sbb
int3
int
rcr
out
test
add
mov
adc
test
pushw
inc
push
(bad)
adc
mov
ret
push
inc
es
mov
into
(bad)
sbb
xchg
mov
dec
shl
clc
jo
aad
cmp
cmps
test
push
lds
jp
cmp
in
xor
fldln2
std
mov
mov
jge
xor
loopne
aad
ret
dec
pushf
hlt
xchg
sahf
mov
xchg
std
jmp
xchg
push
sbb
mov
je
movs
test
mov
aad
mov
sbb
int
xor
jg
pop
fwait
arpl
xchg
jecxz
inc
out
mov
dec
push
ins
outs
ja
retfw
and
mov
xor
loop
das
cmp
ins
das
fnstenv
add
enter
mov
adc
fistp
mov
xor
fstp
test
js
mov
jo
cwde
sbb
paddsb
leave
sub
sti
xor
inc
jbe
pop
lods
pop
jo
les
fmul
retf
mov
cmp
push
fnstcw
and
ins
inc
inc
mov
(bad)
(bad)
pop
sbb
xchg
cmp
xchg
push
sub
ret
or
mov
shl
dec
outs
cld
sub
ror
in
dec
jb
sti
xchg
mov
jecxz
stc
fwait
ins
adc
sub
adc
gs
add
xlat
fs
jmp
es
or
jo
cmps
mov
imul
fcomp
jmp
cld
pop
sub
xchg
xchg
imul
pushf
loopne
addr16
sbb
and
cmp
cmp
lea
mov
xchg
imul
sar
xchg
repz
mov
cmps
stc
add
pop
mov
ror
scas
pop
sti
mov
arpl
lock
jb
xchg
ret
pusha
xor
or
dec
mov
dec
or
jmp
in
je
hlt
leave
xor
imul
ret
icebp
sbb
jbe
mov
inc
ja
push
cmp
sub
push
repz
cdq
dec
stos
mov
adc
jge
push
add
jecxz
pop
(bad)
gs
jl
sbb
push
les
adc
ss
outs
mov
mov
inc
mov
scas
pop
xchg
dec
push
pop
in
cmp
gs
jecxz
mov
loopne
sub
test
or
les
mov
mov
mov
mul
scas
cmp
push
or
mov
(bad)
mov
jmp
xchg
push
fistp
shr
jecxz
dec
mov
std
mov
push
test
fmul
push
cld
and
stos
inc
mov
leave
sub
dec
adc
ret
sbb
ds
jg
mov
dec
in
and
mov
fisub
cmp
sub
ss
xor
outs
cmp
pop
pop
mov
arpl
xor
js
mul
bound
xchg
xchg
sar
scas
and
pop
popa
mov
stc
lods
cmp
sti
(bad)
xchg
enter
xchg
cld
dec
(bad)
pop
push
mov
movs
stc
ds
push
add
hlt
xor
es
jle
bound
mov
mov
data16
mov
push
pop
inc
into
in
adc
cmp
sub
xchg
stos
mov
jne
push
jl
cmp
pushf
gs
jp
push
fwait
jae
loop
push
jge
or
dec
pushf
jb
setp
cs
cmps
addr16
pusha
bound
sub
pop
call
mov
imul
gs
push
pushf
xchg
movs
fiadd
add
pop
cmps
mov
loop
jecxz
xchg
pop
mov
mov
lods
(bad)
mov
dec
and
mov
push
jmp
aam
stc
mov
push
jmp
or
mov
mov
(bad)
mov
loopne
rcl
jmp
adc
dec
and
dec
push
and
mov
dec
js
inc
inc
pop
int3
test
xor
or
push
mov
in
adc
dec
mov
jl
stos
mov
push
retf
sbb
test
bound
hlt
gs
and
jmp
repnz
pusha
out
sbb
jp
jbe
lods
aam
cmp
das
sahf
jae
ds
jecxz
xor
mov
out
ds
mov
push
stc
fdivr
jp
mov
add
sbb
inc
sub
inc
mov
rcl
aad
and
or
jle
(bad)
hlt
ins
cwde
daa
mov
call
or
and
push
inc
xchg
mov
mov
or
pop
and
jg
dec
push
sbb
sub
cwde
jg
xor
popa
cmc
jb
push
xchg
cmp
outs
add
push
or
pop
fldenv
jb
sub
das
mov
popf
push
mov
shr
mov
or
jmp
add
mov
cli
ins
jg
mov
inc
jg
jnp
xor
cmc
mov
(bad)
es
pop
jl
mov
loop
xor
repz
or
xor
cwde
jmp
sti
dec
jne
fst
fs
or
dec
jmp
mov
ret
mov
in
gs
(bad)
cmp
mov
mov
popa
rol
mov
push
cli
pop
stos
xchg
fidivr
bnd
adc
jecxz
or
call
lds
fisttp
pushf
std
js
stos
(bad)
push
sbb
push
pop
mov
jo
mov
pop
test
sbb
jb
hlt
inc
out
adc
imul
retf
out
jo
add
rcl
push
xor
(bad)
fstp
mov
xchg
outs
pop
mov
sub
push
cmc
cmc
cmps
mov
sbb
int
ret
push
in
cmp
scas
mov
movs
xchg
sbb
mov
or
shl
jb
or
cld
dec
jl
js
retf
leave
xor
cwde
lds
push
add
call
mov
stos
mov
scas
je
(bad)
mov
mov
push
lods
into
(bad)
pop
mov
bound
pop
clc
or
pop
inc
xchg
push
daa
adc
sub
xchg
pop
(bad)
movs
cdq
icebp
(bad)
aad
pop
push
ret
pop
inc
je
inc
fs
adc
and
rol
add
call
inc
les
or
fwait
imul
mov
push
sbb
pop
add
arpl
lods
bound
jecxz
test
(bad)
adc
ins
mov
icebp
jnp
cmp
mov
jg
out
pop
push
mov
push
push
cmp
fmul
imul
bound
xchg
ficomp
repnz
xchg
xbegin
dec
push
dec
dec
sub
or
out
out
pop
inc
enter
rcr
cmp
add
push
rol
scas
add
mov
sahf
out
jecxz
jmp
test
ins
stos
cmp
in
pop
sbb
and
scas
mov
sub
nop
mov
shl
aam
mov
jo
test
enter
into
pop
xchg
movs
add
je
mov
push
dec
fmul
dec
sub
popf
cmp
mov
xchg
mov
shl
inc
sub
fs
popa
mov
add
fld
cmc
and
jecxz
add
push
inc
pop
jbe
and
ror
dec
ins
sbb
stc
arpl
adc
imul
movs
aad
or
dec
int
push
mov
test
cmp
cmp
cmp
inc
jecxz
pop
dec
inc
out
sbb
ds
jno
jmp
xchg
push
enter
cdq
inc
inc
gs
rol
rcr
dec
mov
loopne
shl
xor
xor
cwde
or
and
jmp
fldcw
and
pop
or
retf
add
out
xor
add
sub
and
sbb
sub
xchg
cmp
cmp
xor
cmps
pop
mov
ds
arpl
sbb
mov
dec
out
mov
movs
adc
repnz
sub
and
mov
pop
pusha
lds
out
add
xor
pop
les
dec
fsub
js
mov
dec
(bad)
mov
xor
push
jp
xor
mov
dec
mov
sar
mov
mov
pop
xor
add
mov
ins
leave
retf
stos
stos
adc
lods
out
fisttp
or
adc
fwait
stos
jl
enter
mov
adc
push
cmps
push
adc
pop
pop
dec
retf
cmp
mov
inc
pop
jl
xchg
jmp
hlt
inc
add
push
or
jne
ja
enter
inc
outs
pushf
cmps
movs
xchg
or
cdq
pusha
xor
and
aaa
rol
adc
jnp
sub
pop
in
lods
xchg
jle
movs
xlat
or
jno
dec
sbb
mov
iret
int3
push
ffreep
(bad)
outs
pop
push
or
(bad)
int3
pop
shl
sbb
test
sbb
push
xchg
and
xchg
mov
not
xchg
and
(bad)
shl
cmp
cmp
popf
sub
rcl
not
stc
jns
cmps
jmp
mov
mov
fwait
sub
push
cmp
adc
scas
(bad)
add
repnz
cmp
movs
nop
repnz
jmp
dec
ffreep
fstp
les
ja
and
cmps
ds
arpl
mov
mov
sub
push
mov
and
cdq
inc
adc
into
pop
mov
mov
shr
test
jo
and
cmps
mov
fiadd
jb
stos
stos
dec
jg
dec
dec
cmps
das
movs
scas
repnz
loopne
fbld
mov
fistp
mov
mov
fcomp
cmp
ds
or
xlat
mov
jbe
xchg
(bad)
scas
in
ins
loope
cwde
mov
xchg
data16
jmp
fs
shr
sub
and
mov
inc
mov
inc
push
pop
addr16
mov
js
stc
xor
out
add
sbb
imul
pop
in
repnz
ds
and
xchg
dec
scas
loopne
ret
(bad)
mov
sar
sbb
xor
scas
dec
leave
cmp
pop
int3
xchg
add
cld
ret
push
sbb
in
sub
inc
sbb
xor
mov
jb
daa
sub
pop
daa
xchg
mov
cmp
popf
xchg
push
scas
sub
push
movs
test
add
cmp
push
xchg
add
scas
pop
xor
jmp
test
jle
fucom
mov
in
lea
dec
mov
jno
ss
pop
fldenv
jp
fistp
pop
(bad)
mov
dec
sub
ins
cmp
push
and
mov
test
stc
mov
lods
out
dec
push
(bad)
sub
mov
cmp
aas
cmps
jl
jge
sub
adc
aaa
clc
imul
leave
mov
cld
mov
xchg
popa
fcomp
retf
test
sbb
sar
popf
fmul
or
pop
push
ds
mov
neg
inc
aam
dec
sub
les
and
dec
mov
aaa
add
movs
clc
jns
adc
aas
add
mov
lods
mov
lsl
test
mov
in
loopne
idiv
(bad)
or
xchg
es
pop
pop
popa
fild
jns
jmp
mov
xchg
mov
test
mov
jo
addr16
aam
bound
sahf
mov
mov
out
in
lea
fistp
icebp
rcl
dec
jl
stos
cmp
sub
cmp
call
mov
add
push
dec
or
imul
cdq
retf
lods
xchg
jo
enter
push
adc
jo
(bad)
mov
dec
mov
add
dec
push
sub
cmp
mov
imul
aam
ds
imul
cmc
sub
jno
dec
daa
xchg
xlat
push
xchg
test
jmp
xchg
or
sbb
test
cmc
scas
rcr
cmps
push
(bad)
adc
cmp
jno
jno
pop
fwait
mov
rcr
ja
loopne
mov
sbb
loope
mov
nop
xchg
call
in
dec
adc
div
test
lock
lock
aas
(bad)
sbb
sub
cwde
push
jns
in
cmps
xchg
jmp
outs
int3
retf
xor
out
mov
mov
mov
add
pop
sti
mov
sub
sahf
outs
lds
cmp
xchg
ficom
bound
repz
mov
mov
jmp
cwde
call
mov
inc
loop
jnp
or
cld
jp
and
cmc
pop
sub
xchg
push
gs
aas
setbe
mov
adc
cwde
ss
or
loop
out
test
std
es
outs
ret
bound
inc
or
sub
std
rol
je
aas
push
stos
movs
out
fiadd
sub
fld
retf
or
push
mov
out
rcr
pop
daa
jge
fimul
push
in
jno
ret
jne
dec
clc
retf
mov
ds
mov
mov
scas
lds
jnp
fcom
stc
mov
cld
les
popf
pop
jg
cmp
aam
jno
(bad)
icebp
popa
pop
es
inc
pop
stc
jp
or
sbb
jnp
add
fwait
push
aaa
sbb
repz
cwde
jo
shl
cwde
call
pop
add
pop
jp
mov
ror
push
inc
jo
(bad)
int
hlt
fstp
adc
in
call
jge
sbb
out
ins
sub
bound
fwait
cld
xor
add
add
inc
xor
cmc
sbb
sub
inc
call
sub
sub
push
mov
xchg
xor
std
mov
cmc
add
cwde
les
sub
(bad)
test
push
lahf
mov
mul
dec
enter
jae
jl
push
cmp
sbb
rcr
sbb
jge
jecxz
imul
stc
repnz
sbb
or
out
out
mov
stos
mov
pop
jne
(bad)
jns
push
and
add
movs
cmp
enter
les
dec
xchg
add
sbb
int
dec
xor
add
mov
and
xor
cwde
arpl
int
les
or
mov
adc
leave
xor
inc
or
xor
(bad)
in
test
mov
sub
pop
adc
jno
add
push
hlt
and
fild
out
pop
je
cmp
lods
daa
mov
dec
sub
cmp
fistp
sbb
sub
daa
inc
add
iret
jg
dec
add
mov
dec
inc
mov
test
mov
xor
sahf
ffreep
retf
sub
pop
outs
jns
lea
xor
fxch
mov
pop
cmp
xchg
lds
mov
int
lods
fdivrp
jl
jmp
push
dec
jbe
jmp
cwde
mov
shl
xor
jno
add
scas
pop
mov
inc
cli
mov
jo
sbb
popf
test
cmp
cdq
mov
inc
cmp
icebp
xchg
int
and
fstp
test
rol
mov
(bad)
fwait
adc
jne
jl
push
mov
cmp
pop
sar
jp
idiv
inc
push
data16
xchg
(bad)
push
xor
jne
shr
cmps
sti
mov
je
hlt
xchg
xadd
fsubr
in
and
into
test
xchg
dec
outs
push
mov
adc
aas
(bad)
in
jge
nop
scas
mov
into
mov
call
leave
or
movs
ins
fwait
push
pusha
lds
dec
test
xchg
loope
add
pop
add
mov
inc
lock
sti
es
cmp
fs
mov
inc
mov
mov
pop
retf
or
jne
std
adc
loop
addr16
movs
shr
push
outs
jl
repz
adc
pop
std
int3
aas
mov
out
mov
cli
(bad)
(bad)
dec
pop
sbb
mov
std
sbb
imul
add
idiv
fcmovnu
and
or
jmp
mov
ins
push
sbb
cmp
lahf
inc
fs
xchg
xchg
cdq
popa
jg
or
jp
adc
add
dec
jle
nop
push
test
jns
xchg
(bad)
push
arpl
jle
lds
jno
lods
cmp
test
fstp
sub
ror
(bad)
(bad)
inc
add
lods
mov
dec
inc
sub
fiadd
mov
xchg
push
and
inc
in
lea
cmp
sbb
mov
cs
dec
jbe
in
add
mov
push
clc
sbb
rcr
rcl
mov
mov
cmc
cli
loope
jns
stc
adc
cmc
inc
and
mov
mov
call
xchg
leave
into
sbb
cmp
dec
push
push
push
pop
ficom
(bad)
fild
jb
xchg
mov
mov
dec
mov
xor
mov
lods
retf
lahf
(bad)
pop
ds
mov
out
sbb
cmp
inc
fistp
dec
fdivr
or
cmp
(bad)
mov
out
push
inc
cs
inc
jmp
jg
clc
xchg
rol
call
arpl
xor
xlat
jmp
xlat
dec
add
fsubrp
pop
int3
mov
lock
add
push
xor
in
(bad)
adc
lods
mov
pop
push
dec
dec
push
xchg
jno
jb
mov
lods
dec
push
xor
lods
int3
sahf
dec
jne
adc
loop
jbe
dec
xor
dec
int
das
(bad)
pop
sub
xchg
fcomip
dec
adc
test
jae
sahf
inc
pop
sub
fptan
cmps
lds
push
mov
mov
cmp
in
outs
xchg
in
stos
xor
pop
mov
inc
movs
call
jmp
jge
jl
pushf
aad
sbb
nop
add
mov
or
pop
imul
mov
pop
cdq
clc
mov
xor
inc
loopne
lahf
mov
ds
cmp
pop
outs
add
adc
dec
xchg
cmp
int
dec
pop
hlt
cmps
mov
in
pop
jp
dec
iret
add
dec
cmp
fidivr
jnp
iret
cmp
push
les
enter
pop
mov
cmp
sbb
push
pop
adc
sub
or
jo
js
push
(bad)
jl
inc
dec
mov
ror
outs
mov
test
push
clc
std
inc
hlt
scas
nop
sub
mov
mov
pop
push
popf
and
push
int
lods
mov
push
push
push
cmps
cmp
cmp
mov
pop
call
icebp
add
cs
hlt
and
movs
sub
push
stc
add
cli
cmp
call
lods
js
inc
jae
test
mov
lods
sub
jae
movs
mov
adc
mov
xlat
inc
xor
xor
std
(bad)
ss
pop
cmp
ja
add
mov
into
inc
fild
mul
cdq
hlt
pop
into
and
inc
clc
jmp
xchg
fchs
inc
or
pusha
sbb
xchg
cmp
sbb
mov
arpl
mov
cdq
mov
movs
rol
jecxz
mov
ss
imul
ja
(bad)
cmc
repz
jl
retf
mov
and
retf
into
mov
dec
pop
hlt
in
fcom
jp
xlat
gs
xor
dec
shl
dec
cmps
adc
bound
mov
jne
mov
push
movs
sbb
jl
xchg
mov
dec
xor
add
push
into
sbb
and
fist
fist
pop
xchg
es
cmp
sbb
movs
pop
mov
ins
movs
nop
in
cmovae
cwde
adc
fwait
movs
inc
jnp
aam
loopne
stos
out
and
ror
xchg
dec
cmps
es
push
or
dec
xchg
cs
stos
daa
push
loope
mov
xor
icebp
adc
outs
call
test
inc
jmp
inc
or
add
(bad)
fcmovbe
sbb
in
push
popa
ds
ret
and
cmp
jmp
clc
dec
adc
sub
push
pop
movs
popa
out
mov
adc
push
shl
pop
push
mov
cs
sbb
and
lods
jo
sbb
cmp
xchg
loope
cmp
push
imul
or
jne
(bad)
out
xor
movs
scas
xchg
stos
add
cmp
pop
(bad)
repz
out
jne
sub
ds
aas
pop
mov
out
or
cmp
push
sahf
stos
adc
out
es
das
xchg
mov
mov
lahf
or
inc
test
mov
or
fdivr
xor
push
jae
dec
mov
jnp
mov
test
into
mov
adc
or
retf
and
inc
cmp
repnz
js
add
mov
sbb
call
adc
jg
je
mov
cdq
xor
in
sbb
cs
aas
xchg
jg
pop
test
adc
outs
(bad)
icebp
mov
add
call
icebp
fidivr
jmp
cmp
push
ins
imul
mov
scas
jns
pop
mov
pop
xor
test
and
imul
scas
xor
push
push
inc
xchg
fild
pop
push
test
mov
or
mov
je
pop
mov
fwait
cli
pop
cld
add
nop
sub
ins
push
imul
fs
pop
add
fst
es
imul
dec
add
push
fst
xchg
fcmove
add
imul
xor
in
jns
ins
cmp
or
lahf
mov
sahf
aaa
scas
inc
mov
pop
lods
cmps
lea
jnp
loope
adc
jle
aam
sub
sbb
stos
xchg
dec
test
or
mov
or
jmp
xchg
cmp
jno
mov
jmp
jns
xor
inc
sub
movs
pop
pop
fimul
shl
mov
inc
add
mov
pop
imul
sbb
daa
and
xchg
pop
add
ja
adc
jp
add
enter
aad
mov
or
dec
cmps
mov
sti
(bad)
add
daa
inc
sub
push
stc
sub
inc
loopne
icebp
fs
out
xor
mov
dec
or
cmc
bound
sub
adc
push
jp
out
or
pop
cmp
dec
fs
js
push
outs
xor
mov
movs
nop
xchg
dec
sahf
inc
push
int3
dec
loopne
mov
mov
icebp
add
loop
test
sbb
cs
sbb
div
leave
xor
aad
cs
cmc
ja
sbb
pusha
adc
test
cmps
sbb
out
mov
jns
outs
fstp
lods
and
jns
add
test
test
leave
push
pop
fs
push
out
push
inc
sub
mov
test
pop
add
retf
dec
fiadd
sub
or
inc
mov
(bad)
out
addr16
or
out
stos
mov
inc
mov
jno
mov
outs
xor
jbe
xchg
sub
scas
xor
icebp
not
mov
mov
mov
loope
imul
pop
xchg
xor
lsl
ss
fist
and
cld
mov
loopne
addr16
xchg
ss
shr
inc
retf
dec
push
fsub
aaa
mov
loop
xor
fdiv
and
add
cmc
push
xchg
pop
jl
inc
adc
cli
pop
mov
jecxz
fild
adc
push
push
daa
popa
in
iret
test
jns
loopne
fs
sti
aad
nop
iret
aaa
mov
mov
ss
adc
fwait
mov
jmp
gs
cmp
xor
mov
call
shl
stos
add
xchg
or
in
call
mov
sbb
mov
push
shl
xchg
gs
mov
xor
nop
adc
stos
sbb
cmp
xor
icebp
cmps
push
cmp
aam
push
(bad)
ins
sbb
add
mov
(bad)
mov
fisubr
iret
mov
dec
dec
fs
xchg
sahf
mov
adc
xchg
jmp
cmp
es
stos
(bad)
popf
ins
movs
not
es
sub
movs
push
pop
pop
dec
cmps
mov
push
cmc
pusha
imul
or
jo
mov
loop
(bad)
in
xor
movs
inc
add
ficomp
adc
aad
inc
into
jne
mov
scas
(bad)
mov
xor
pop
push
cld
loop
out
mov
loop
mov
pushf
outs
add
dec
add
inc
hlt
xor
movs
fcom
pop
xor
ins
jge
sbb
jmp
jns
mov
mov
out
push
jno
xchg
mov
bound
add
mov
jle
dec
cmc
mov
mov
jnp
loop
in
fld
mov
mov
mov
pusha
dec
sub
xchg
sub
dec
cmp
mov
xlat
pop
(bad)
push
pop
sub
xchg
xor
push
jne
jp
dec
pushf
pop
xor
stos
and
inc
fs
lods
arpl
xchg
push
call
mov
and
rol
stc
aas
mov
add
imul
xchg
or
outs
sahf
cmp
ret
repnz
mov
cmps
aas
dec
jno
jmp
and
cdq
push
inc
test
xlat
(bad)
(bad)
or
pop
loop
pushf
cmp
icebp
out
dec
outs
and
jb
add
mov
pop
sub
fidiv
jl
inc
xchg
cmp
or
data16
adc
ret
je
ret
adc
ss
xchg
adc
xchg
outs
cwde
and
push
cmp
inc
(bad)
icebp
stc
push
push
cli
enter
sub
in
(bad)
mov
or
cmps
fistp
xchg
shl
fs
xchg
inc
loope
scas
inc
(bad)
(bad)
adc
mov
or
ror
add
popf
add
jb
lahf
sbb
mov
(bad)
mov
or
lahf
cld
outs
or
pusha
icebp
repnz
hlt
mov
(bad)
cmp
sbb
add
mov
xchg
jnp
sbb
ins
clc
inc
loop
and
popa
mov
aam
jo
bound
out
push
pop
mov
rcl
jmp
call
or
adc
es
mov
fcmovnu
push
lods
es
ret
xchg
dec
cmp
loop
test
cdq
pop
jbe
and
(bad)
cld
scas
and
(bad)
loope
push
push
clc
lods
jle
xor
jmp
sbb
sbb
mov
leave
add
aad
fwait
jns
(bad)
sbb
stos
ja
test
mov
cmp
and
je
sbb
push
mov
clc
fcomi
psubb
sub
sub
jl
push
cli
or
outs
pushf
sbb
push
xor
out
lock
lahf
xchg
xchg
push
sbb
out
add
and
ror
dec
js
js
ror
jns
ds
mov
in
sar
xor
jbe
popa
mov
mov
cli
sub
dec
xchg
mov
push
cmp
mov
jl
cmps
mov
cmp
mov
sbb
sub
sub
cmps
pushf
mov
icebp
jns
xchg
lods
adc
sahf
xchg
pop
mov
mov
out
mov
mov
jmp
sub
int3
or
pop
sub
arpl
lods
jl
jecxz
jl
push
iret
pop
cmp
cmp
jg
dec
int3
shr
loop
xchg
push
fisubr
add
push
add
mov
adc
jb
ins
fsubr
xor
out
xor
aaa
sub
push
and
jnp
add
mov
push
lods
adc
sbb
push
mov
mov
call
lea
dec
mov
movs
or
(bad)
mov
mov
dec
outs
test
sahf
mov
mov
js
test
out
sub
ds
sbb
sbb
cmp
adc
ss
jnp
sbb
inc
pop
jg
shr
inc
mov
inc
mov
ror
nop
mov
mov
xchg
bnd
push
(bad)
sub
pop
movs
push
or
xor
jecxz
loope
lods
hlt
sahf
aas
sbb
test
(bad)
mov
out
xor
push
dec
call
mov
mov
jp
xchg
add
ret
call
int3
adc
mov
rcr
mov
ins
adc
xchg
cmp
xor
rcl
bound
(bad)
pop
test
jbe
dec
sbb
pop
shl
hlt
jns
pop
pop
add
add
mov
cmp
in
inc
mov
mov
cmovb
jmp
lahf
dec
rcr
xchg
push
and
sar
fisubr
pop
jbe
cmp
and
add
js
into
push
scas
ficom
or
pop
rcr
xchg
mov
xchg
fidiv
cmp
test
xchg
imul
sahf
inc
aam
mov
fsubr
sub
popa
xchg
and
out
xchg
and
leave
outs
and
retf
or
sub
jmp
xchg
mov
or
and
in
jo
out
xchg
mov
dec
jno
and
jns
xor
test
dec
pop
mov
ins
xchg
imul
retf
call
popa
mov
jo
std
arpl
out
int
sbb
sbb
cmp
jl
sub
into
adc
mov
int3
adc
mov
ret
(bad)
fstp
sbb
pop
(bad)
sbb
cmc
cmp
lods
and
or
imul
int3
lock
call
mov
mov
and
shl
mov
push
xor
cdq
cmp
push
scas
and
push
jns
cli
mov
cmp
retf
retf
leave
ins
pusha
jo
mov
test
inc
xchg
shl
pop
fcmove
test
sbb
dec
push
inc
sub
jle
or
lds
daa
nop
jl
cld
add
enter
popf
sub
addr16
repnz
mov
xchg
cwde
std
repnz
and
repz
cmps
adc
dec
mov
jle
jns
ja
imul
lods
int3
cld
mov
es
dec
and
sbb
fs
xchg
xor
sbb
mov
aas
adc
test
push
xchg
ins
fstp
jp
push
and
fs
mov
out
scas
xor
push
inc
sub
cld
mov
fucomi
js
aam
test
mov
push
ds
xor
fs
adc
or
xor
jbe
js
cwde
pop
add
sbb
ja
mov
shl
jecxz
push
ret
xor
mov
or
sub
scas
mov
retf
dec
outs
les
mov
(bad)
mov
mov
pop
out
mov
fimul
test
outs
xor
jae
loopne
sti
shl
inc
int3
cmc
cmp
dec
popf
in
(bad)
popa
push
mov
dec
pop
div
push
sbb
sbb
push
gs
push
push
mov
pop
cmp
push
jle
ror
call
jg
add
iret
lahf
dec
xchg
(bad)
mov
fist
xchg
pop
fisttp
xor
shl
pop
jae
adc
sub
pop
push
(bad)
aaa
rcr
push
add
inc
pop
inc
xor
mov
push
jl
jb
icebp
pop
mov
(bad)
aas
pop
les
xchg
cld
mov
call
outs
sub
mov
sub
repz
push
mov
outs
rol
les
push
mov
movs
add
inc
cli
addr16
jno
ret
dec
daa
and
jmp
movs
inc
dec
icebp
jnp
mov
pop
pop
mov
movs
add
cmp
fist
mov
pop
jae
mov
push
xor
cmp
ret
adc
in
or
push
jl
sub
sub
shl
bound
fnstenv
inc
and
scas
out
cmp
hlt
mov
aam
sub
sub
mov
rcr
xlat
inc
fist
jbe
jl
xchg
or
popa
ja
scas
sub
ins
out
xchg
scas
jo
jl
inc
inc
inc
and
pop
mov
xor
retf
imul
sbb
sbb
inc
or
cmp
ins
sub
loope
lods
(bad)
mov
sbb
add
ins
mov
fisub
rol
mov
pop
clc
rcl
add
jge
pop
retf
dec
out
addr16
dec
jle
mov
popf
push
xchg
cmp
push
push
imul
dec
dec
pusha
and
jge
fcmovnb
jb
jb
push
xchg
cmps
pop
and
retf
pop
dec
rcr
or
mov
mov
fistp
addr16
out
iret
xchg
mov
xor
sbb
dec
movs
or
fucomi
push
add
call
ins
jmp
test
rcl
stos
push
push
out
in
sub
aad
inc
pop
sub
mov
mov
stos
adc
xor
das
imul
push
or
in
mov
pop
retf
push
add
(bad)
or
jle
and
ficomp
or
sub
mov
int3
fwait
inc
jnp
jae
popf
xor
jle
cli
push
push
jne
std
sbb
imul
push
je
add
ins
inc
addr16
mov
xor
sub
mov
(bad)
mov
sub
sbb
sbb
cmp
push
and
and
or
or
and
jmp
nop
cs
(bad)
pushf
fadd
sub
out
call
aas
ds
xchg
enter
shl
mov
dec
ret
cmps
mov
push
popf
dec
ror
rol
cmps
hlt
test
loope
mov
pop
sar
adc
jno
sub
retf
retf
push
and
lds
jae
xchg
mov
cmp
push
lds
add
imul
mov
leave
adc
shr
and
(bad)
stos
ret
mov
xchg
push
aaa
add
stos
enter
fdiv
push
sub
(bad)
add
fimul
ret
jne
mov
xor
(bad)
hlt
out
out
ror
push
ja
icebp
adc
sub
mov
loopne
push
mov
in
ret
mov
and
test
adc
add
imul
popf
inc
ss
sahf
in
lods
or
or
mov
xor
(bad)
mov
aas
push
iret
push
retf
jb
mov
xor
xor
adc
cmc
cld
ret
in
outs
cmp
js
add
inc
mov
inc
jbe
arpl
cmp
push
xchg
imul
enter
daa
push
mov
mov
repz
mov
inc
nop
sar
pop
out
rcr
gs
or
mov
inc
js
adc
lods
out
mov
adc
dec
and
pop
xor
pop
xchg
push
mov
sbb
dec
fst
out
cwde
xchg
adc
not
push
movs
fwait
inc
mov
or
jge
fisttp
enter
xor
or
mov
sub
ret
mov
loopne
jno
aad
jl
int3
adc
stos
call
aad
or
xchg
push
data16
out
mov
lods
sbb
adc
cwde
ret
add
jno
mov
std
(bad)
fisub
rcr
sbb
ret
fnstenv
mov
into
daa
sbb
ret
test
lds
fwait
inc
in
mov
push
add
cmc
in
add
mov
ret
jmp
test
mov
out
dec
push
xor
stos
mov
in
out
cs
push
xlat
arpl
mov
ds
imul
jns
je
popf
mov
in
sub
and
fisubr
jmp
lock
pop
into
xchg
and
out
(bad)
pushf
dec
sbb
bnd
jge
lock
jecxz
in
ret
and
mov
mov
outs
inc
cmc
popa
cmp
push
sti
sub
push
xchg
popf
jno
sub
mov
mov
(bad)
cmc
add
sub
fidivr
push
nop
pop
neg
outs
es
push
add
cli
pop
dec
xor
cmp
jle
hlt
add
xor
mov
add
outs
adc
cmp
sbb
xchg
cmp
add
call
push
pop
add
dec
push
xlat
jmp
(bad)
add
sti
pop
popf
sbb
add
mov
sub
fimul
inc
test
aam
sti
xor
imul
rcr
push
adc
enter
retf
or
jg
cmp
outs
loopne
loope
loope
mov
xchg
push
cwde
push
xchg
or
inc
xchg
push
scas
movs
jge
pop
shl
adc
loope
cmp
inc
cmp
retf
mov
mov
pop
data16
and
mov
xor
call
(bad)
xchg
cld
js
out
call
push
int3
cli
cmp
dec
xchg
jecxz
mov
inc
adc
inc
dec
lahf
gs
lock
call
push
jle
(bad)
repz
mov
test
es
outs
hlt
dec
rcl
hlt
out
pop
aam
and
mov
aaa
or
jle
adc
test
dec
repnz
pop
hlt
xchg
mov
xchg
les
pop
stc
or
js
jg
cmp
inc
mov
mov
and
jmp
sbb
jne
dec
fxtract
daa
xor
jl
xlat
cmp
mov
fcmovbe
in
shl
pop
pop
clc
dec
mov
ret
add
sahf
in
sub
rol
xor
cmps
lds
je
mov
xchg
leave
xchg
pop
mov
iret
mov
mov
rcr
repz
test
(bad)
lahf
dec
fist
pop
mov
dec
aas
sub
xchg
rcr
div
lock
imul
movs
mov
stos
sbb
xchg
movs
add
mov
stc
int3
mov
ins
(bad)
scas
jbe
jle
mov
cmps
int3
in
stc
push
stos
sar
sub
(bad)
std
pop
fstp
mov
mov
(bad)
pop
int3
sbb
fld
je
xor
xchg
xlat
xchg
cmp
fst
int3
mov
in
(bad)
mov
outs
dec
arpl
fisubr
(bad)
pop
mov
es
sbb
push
inc
stc
fwait
ds
mov
xor
sbb
and
(bad)
cmc
in
pop
adc
fnstcw
mov
lds
cmp
movs
(bad)
sti
mov
mov
pop
cmps
je
and
jno
mov
ja
sbb
cmp
dec
xor
mov
sahf
xchg
ret
les
imul
mov
push
lds
mov
jmp
sbb
add
push
xor
xor
xchg
in
mov
jg
mov
cmp
pop
in
pop
sub
push
xchg
(bad)
xchg
(bad)
mov
pop
aaa
ins
js
push
inc
mov
out
repz
test
cld
push
cmp
icebp
(bad)
push
retf
in
fnstenv
sbb
cmp
aad
and
add
dec
cmp
aas
jmp
fadd
push
repz
cmps
dec
push
sbb
push
pop
lea
add
mov
or
shr
int
cld
jne
cs
sub
call
add
push
sbb
inc
mov
mov
dec
sbb
xchg
push
lea
jmp
sbb
out
mov
out
dec
shl
jae
addr16
imul
outs
imul
cmp
mov
in
mov
push
add
sbb
sar
test
pop
data16
cli
nop
retf
(bad)
into
xchg
pop
push
xchg
adc
or
fnstenv
pop
pop
pop
or
dec
rcl
sti
adc
movs
shl
in
jmp
in
ret
je
xchg
sti
js
xor
xchg
pushf
mov
mov
xor
hlt
sub
fs
out
ins
cmps
sar
(bad)
jmp
gs
xchg
pop
jnp
xor
jp
dec
push
ins
mov
pop
xor
jl
add
call
cmp
mov
popa
dec
lea
cmps
mov
repz
in
add
lahf
mov
ja
cld
cld
shl
mov
add
fdiv
imul
pop
into
xchg
fnstsw
fldenv
test
pop
in
icebp
inc
out
stos
cdq
mov
imul
adc
add
sti
(bad)
inc
repz
pop
lea
out
fcmove
mov
not
mov
iret
xchg
ja
sbb
push
loop
inc
pop
cmps
adc
test
je
or
retf
jp
lods
movs
iret
int
repnz
inc
repnz
std
mov
cmp
xchg
lea
mov
jae
dec
add
daa
sbb
(bad)
xchg
repnz
fs
dec
xchg
imul
mov
sti
jp
dec
cmps
jo
push
and
das
sbb
sahf
jle
cmp
mov
lods
lods
xlat
mov
inc
or
(bad)
out
pop
jmp
mov
and
ret
jne
(bad)
popf
xor
push
lock
jnp
or
pop
pop
into
test
sbb
push
data16
retf
inc
lahf
shl
popf
neg
mov
xchg
loope
adc
add
bound
and
adc
adc
call
dec
js
sub
jae
or
mov
retf
sahf
push
sub
mov
imul
xchg
mov
inc
or
pop
das
das
pop
retf
mov
int
xor
aaa
dec
pop
popa
icebp
mov
daa
sbb
xor
pop
sbb
pop
aad
pop
fadd
add
mov
dec
sub
aaa
dec
mov
fcmovbe
dec
neg
cmp
std
mov
inc
neg
mov
mov
sub
cli
dec
shl
daa
in
pop
cmp
and
cdq
dec
lahf
cld
xchg
push
int
inc
mov
fiadd
cs
mov
lahf
(bad)
cmp
add
push
add
mov
xchg
mov
jle
lahf
imul
sub
sub
jno
shl
cmc
addr16
and
pop
mov
imul
call
ficom
pop
test
out
cwde
into
adc
sub
test
and
adc
mov
inc
test
jns
pushw
scas
cmp
cli
mov
mov
inc
cmps
push
aam
xchg
shl
(bad)
dec
in
loopne
(bad)
in
repnz
enter
pushf
ficom
enter
mov
mov
shr
sbb
(bad)
movs
icebp
loopne
popf
push
sub
cwde
scas
fcomp
lods
push
and
and
aaa
xchg
hlt
lods
dec
push
icebp
inc
add
fist
int
movs
in
pop
push
cli
sbb
xor
jae
adc
stos
mov
int3
cmp
adc
fs
dec
and
mov
mov
adc
popf
ror
int
call
xchg
or
add
popf
mov
popa
movs
pop
pop
xchg
pop
xchg
jle
les
jne
cmp
ret
push
rcr
into
pop
push
push
fisttp
daa
cmc
cld
pushf
mov
sahf
inc
ror
and
mov
in
mov
pop
adc
jae
cmp
xor
dec
lahf
sub
sub
mov
pop
ja
or
push
lds
hlt
ret
(bad)
xchg
sti
xchg
jne
xor
add
mov
or
jb
ficomp
(bad)
lods
pushf
dec
aaa
mov
fwait
test
and
sbb
out
bound
pop
cmp
jle
mov
and
jne
outs
dec
bound
mov
dec
inc
add
rol
repnz
sbb
cld
popf
dec
xchg
dec
out
or
pxor
mov
sbb
mov
hlt
aaa
(bad)
xchg
pop
lods
dec
js
nop
adc
push
xchg
pop
sbb
int
sbb
sub
pop
daa
nop
das
aam
jp
sub
pop
push
les
or
push
sbb
stc
pop
mov
add
mov
(bad)
popf
shl
jo
mov
mov
and
das
inc
imul
adc
pushf
(bad)
adc
dec
mov
and
sti
call
or
push
mov
cwde
xor
adc
cmp
mov
add
ss
push
fild
ret
push
xor
xchg
mov
cli
mov
inc
fisttp
xchg
inc
jecxz
rol
stos
movs
cmp
test
mov
jmp
psubusb
mov
add
jbe
mov
pusha
aas
jno
movs
sub
in
loopne
or
rcl
fldenv
es
xor
and
push
pop
xor
movs
shr
jge
xor
mov
xor
inc
adc
jbe
or
(bad)
ja
popa
rcl
sbb
shl
jge
out
mov
lahf
mov
test
push
aam
sbb
jne
das
sbb
jecxz
adc
jl
and
mov
sub
inc
inc
xor
xchg
and
stos
out
push
int3
push
call
pop
ins
ret
jge
adc
nop
add
push
fucomi
(bad)
aam
dec
adc
push
jl
leave
inc
(bad)
lahf
mov
mov
sbb
(bad)
aad
fs
xchg
mov
mov
or
out
je
out
retf
add
out
sbb
mov
out
mov
mov
clc
cmp
push
dec
cmps
xchg
add
aas
scas
gs
or
push
xchg
cld
sub
popa
dec
or
sti
out
inc
xchg
sub
pop
stc
shl
test
pop
dec
pop
aam
adc
mov
gs
sbb
test
jmp
arpl
ror
dec
adc
sbb
push
push
mov
in
jo
imul
pop
pop
(bad)
push
or
sbb
and
sub
sub
jmp
loope
ret
(bad)
retf
(bad)
stc
pop
mov
cmp
scas
dec
(bad)
movs
fist
fst
aas
pop
mov
mov
mov
dec
or
push
imul
mov
sbb
or
push
sbb
shl
push
push
xchg
cdq
repnz
movs
(bad)
xor
add
fisub
pop
inc
int
add
cmp
sub
mov
(bad)
hlt
out
in
add
cmp
jl
sbb
je
fidivr
aad
pop
dec
into
ds
inc
add
cmp
addr16
xlat
sub
mov
sbb
xchg
rol
cmp
cmp
push
test
popf
mov
pop
fimul
mov
lock
hlt
sbb
and
xor
nop
icebp
mov
inc
outs
movs
mov
push
addr16
or
inc
mov
jne
sbb
inc
and
sub
jmp
xchg
xchg
dec
pop
arpl
adc
fs
pop
out
sbb
imul
sbb
xchg
pop
(bad)
or
lahf
push
jmp
les
loop
sub
xchg
popa
loope
push
and
mov
and
test
sbb
push
mov
fmul
ja
ins
test
jmp
retf
dec
adc
outs
or
int3
addr16
jle
mov
pop
xor
pop
addr16
sub
cld
push
ss
push
movs
pop
xchg
nop
rcl
push
pop
es
sub
xchg
adc
inc
leave
cmp
out
xchg
cmp
leave
xchg
lods
or
push
lock
sub
or
push
and
jecxz
ds
xchg
mov
aaa
das
repz
pop
call
fdiv
push
pop
stos
mov
fbstp
fst
cmp
sbb
pop
(bad)
btr
cld
mov
mov
inc
pop
cmp
push
or
xchg
lahf
mov
lea
lods
jl
bound
adc
mov
and
fs
retf
retf
add
out
jmp
xor
push
xor
cmps
movs
shl
ins
fbld
(bad)
lock
pop
push
fst
shl
push
stos
mov
and
mov
(bad)
fidiv
dec
mov
pusha
pushf
xchg
sub
xchg
js
pushf
mov
xor
dec
fld
cmp
ins
movs
fsubr
xor
cmp
rol
cld
mov
and
scas
div
push
outs
adc
movs
sahf
loope
cmp
mov
loope
inc
and
outs
adc
xor
mov
fnstcw
jmp
push
inc
dec
add
iret
xor
jl
retf
sub
shl
xchg
xor
push
ds
mov
fdiv
mov
sub
(bad)
fdivr
and
lods
push
dec
push
ds
int3
ret
nop
in
shl
idiv
loopne
(bad)
repz
jl
or
mov
popf
repnz
retf
pop
xchg
sar
mov
into
cs
adc
xor
ror
sub
and
jl
fcomi
bound
xchg
add
outs
mov
jae
mov
add
and
and
lea
mov
dec
xchg
fsub
movs
stos
sbb
pop
sub
popf
push
loopne
mov
test
push
daa
sbb
int
les
jp
outs
dec
int3
cmps
dec
(bad)
push
aas
in
cmp
pop
jp
arpl
push
imul
push
mov
lock
sub
xor
dec
or
lahf
mov
jne
nop
xchg
jbe
daa
not
lods
or
cmp
imul
cdq
dec
cmp
pop
popa
push
mov
sbb
mov
mov
cld
inc
lods
or
mov
test
and
xlat
xchg
out
inc
cmps
pop
jne
jno
xchg
mov
or
mov
loop
ds
sar
inc
dec
mov
xchg
dec
imul
retf
sahf
int
cdq
xchg
pop
dec
cmp
push
lock
lods
bound
mov
js
sub
(bad)
or
add
hlt
mov
mov
mov
dec
mov
pop
mov
sub
jl
sub
or
clc
push
(bad)
aad
adc
lea
out
push
dec
aaa
mov
and
and
xchg
sbb
loope
mov
stc
jecxz
sbb
inc
scas
mov
adc
xchg
mov
sub
xchg
adc
push
jge
jg
jae
pop
mov
pushf
mov
jns
and
fnstsw
lods
mov
adc
arpl
jecxz
sbb
std
fisttp
out
lea
push
movs
data16
aaa
sar
imul
scas
xor
mov
mov
sub
mov
fimul
rol
shl
sbb
jmp
sbb
lods
add
push
inc
stos
inc
or
lds
mov
not
repnz
jmp
loop
(bad)
mov
fwait
(bad)
push
imul
cmp
cmc
fnstenv
cli
sub
jne
jmp
jmp
imul
cmp
movs
jo
cdq
dec
in
jo
fisubr
aad
dec
shl
fwait
pusha
and
clc
cmp
test
in
xchg
mov
dec
std
pop
jbe
pop
or
div
fucomip
outs
test
or
lahf
data16
add
ss
icebp
xchg
fs
aam
(bad)
xchg
mov
or
jbe
fnstcw
out
fwait
adc
dec
loope
xor
xor
leave
dec
out
jne
xor
test
lea
sar
mov
in
add
add
or
call
pop
xor
jb
loop
mov
adc
add
stc
mov
xor
mov
icebp
psrlq
in
mov
cmp
scas
xor
dec
add
mov
add
xlat
xor
push
repnz
lds
mov
bound
adc
sbb
or
sub
sahf
jns
iret
jecxz
outs
call
mov
mov
cld
pushf
hlt
mov
xchg
lock
stos
(bad)
not
shl
xlat
addr16
and
aas
mov
nop
leave
outs
scas
xchg
mov
(bad)
mov
leave
xor
(bad)
adc
cmp
dec
das
or
mov
cmp
or
mov
adc
out
ret
mov
dec
or
ret
mov
fist
pop
xchg
(bad)
shr
xchg
stc
lods
jle
repz
addr16
xchg
xor
push
(bad)
test
fistp
push
dec
pop
sub
in
pusha
rcl
cvtpi2ps
pop
(bad)
sub
adc
movs
stos
push
sub
bound
push
inc
push
sahf
mov
pop
mov
cmp
ins
dec
cdq
nop
test
retf
adc
fdiv
mov
xchg
mov
ds
dec
mov
xor
or
mov
dec
into
cmp
cmp
cmp
pop
jno
sub
rol
scas
sub
mov
dec
popa
dec
mov
outs
clc
cmp
mov
outs
mov
lds
out
jle
sub
int
mov
stos
add
sbb
pop
neg
mov
mov
and
mov
or
das
sbb
adc
pop
and
lock
test
sbb
outs
fs
test
xor
jge
imul
or
adc
test
xchg
xchg
repnz
mov
in
pop
sbb
scas
repnz
inc
or
loope
fsubr
cmc
push
mov
add
ja
sub
je
or
or
fwait
mov
mov
loop
fwait
dec
xchg
inc
movs
popf
cld
and
and
shl
fcom
mov
bt
mov
mov
pop
cmps
xchg
jl
mov
pop
js
neg
pop
lods
or
ins
sahf
(bad)
clc
jno
stos
jmp
push
pop
ds
push
xor
fwait
cwde
stos
(bad)
lahf
or
pop
xor
jmp
fs
ffree
loope
or
sbb
call
mov
pop
or
nop
push
mov
jae
fistp
xor
sahf
mov
hlt
sub
xor
mov
test
add
in
das
outs
ret
int
add
sbb
mov
call
test
add
leave
jo
inc
jmp
int
add
or
sbb
cmp
add
push
sbb
scas
mov
xchg
mov
pushf
(bad)
push
and
xchg
adc
test
mov
fstp
mov
or
mov
idiv
inc
xor
(bad)
loopne
sbb
sbb
fnstsw
adc
dec
or
pushf
not
pusha
add
push
jns
rcr
pop
sbb
stc
mov
pop
dec
xchg
movs
fdiv
dec
sahf
and
outs
add
mov
popa
ror
sub
dec
xchg
sbb
loopne
cmp
pop
jp
cwde
mov
ror
push
fldenv
je
xor
std
cmp
push
mov
mov
mov
cmps
mov
xchg
and
adc
retf
outs
fldcw
inc
fwait
in
mov
xor
or
imul
dec
inc
ss
test
(bad)
fld
pushf
or
adc
push
push
test
mov
mov
sbb
or
rcr
push
inc
cmp
jbe
std
shl
or
pop
pop
call
test
ret
mov
mov
jmp
cmp
dec
int3
dec
hlt
add
and
pusha
or
loope
inc
popa
adc
push
sbb
xor
lahf
mov
sbb
iret
outs
mov
imul
arpl
dec
imul
call
pop
xchg
nop
and
xchg
inc
movs
push
out
and
fimul
scas
jb
ins
mov
stc
or
stc
inc
rcl
ret
or
ins
xchg
push
push
cmps
ret
xchg
imul
inc
push
out
pop
mov
jmp
loope
(bad)
ficom
out
xchg
pop
pop
loope
mov
shr
mov
cmp
push
push
push
jno
mov
xor
jno
dec
cmc
daa
sti
xchg
outs
cmp
xchg
xlat
stc
sbb
sub
mov
mov
jle
add
jnp
popa
mov
dec
(bad)
daa
cmp
sbb
pop
and
lahf
xchg
retf
sti
jecxz
dec
mov
cmp
clc
stos
sub
cmp
repnz
mov
fnstenv
sub
pop
cld
in
jbe
push
pop
lods
pop
mov
nop
js
or
out
(bad)
pop
bswap
loope
rol
and
mov
jae
sbb
cmp
xor
sbb
cmp
pop
mov
and
cmps
mov
fisttp
xor
mov
jg
sub
jecxz
fldenv
in
pop
xchg
xchg
add
test
iret
xor
out
das
jo
shl
push
and
(bad)
xchg
ret
jl
push
xchg
stc
lods
out
mov
jle
jl
mov
in
dec
cli
mov
scas
xchg
dec
inc
cmps
sbb
mov
jbe
lds
or
dec
pop
hlt
(bad)
mov
xchg
stos
out
add
pop
add
iret
clc
push
idiv
add
bound
jae
fdiv
push
inc
cmps
inc
scas
cmp
jecxz
dec
test
and
iret
dec
pop
jae
test
(bad)
xchg
xor
mov
js
cmp
nop
cdq
arpl
push
mov
mov
pop
rep
mov
pop
stc
mov
loope
sbb
fsub
jne
and
cdq
sti
sahf
fidiv
jae
out
fst
xor
cld
xlat
fs
adc
retf
sbb
shl
jb
jns
pop
rcl
hlt
pop
mov
inc
sub
adc
mov
out
lea
rcl
movs
mov
out
jne
sub
jmp
cmc
imul
push
(bad)
push
sbb
xor
mov
jl
or
das
jle
ja
push
js
add
or
stos
iret
in
inc
xchg
inc
test
fwait
popf
enter
inc
retf
dec
lock
and
outs
sub
mov
in
and
sub
pop
lods
mov
pop
and
add
sub
mov
imul
sub
and
imul
shl
daa
clc
fcmovne
stc
ret
ja
loop
jecxz
dec
jnp
pop
jb
and
pop
shl
jl
mov
test
lods
mov
or
jmp
push
sbb
in
adc
cmps
retf
enter
pop
inc
mov
std
jae
push
fidiv
adc
xchg
sar
movs
mov
std
pop
repz
sub
xchg
xor
es
mov
icebp
std
aas
mov
or
xlat
sub
push
popa
xchg
adc
push
stos
mov
cmps
retf
mov
scas
sti
fwait
test
(bad)
not
mov
cmp
call
xchg
fs
(bad)
mov
out
icebp
fwait
or
and
xchg
jbe
cmc
ds
mov
sub
or
pop
ret
mov
fsubr
ins
nop
adc
jle
inc
cmp
jecxz
cmc
sbb
cs
jno
bound
push
fistp
xchg
mov
xchg
or
dec
(bad)
xlat
or
scas
inc
push
mov
pop
sub
xlat
stos
dec
loopne
fadd
out
mov
sbb
mov
pusha
es
in
loope
sub
jbe
stos
lahf
xchg
aam
jmp
pop
sub
jmp
push
fdiv
imul
xchg
xor
sub
test
retf
mov
push
in
into
arpl
mov
push
popa
test
mov
sbb
inc
push
aad
mov
lods
jb
xlat
push
inc
cld
enter
cmp
popf
ss
ficom
xor
je
scas
cmps
pop
mov
add
mov
or
test
mov
jns
push
push
push
xchg
adc
jmp
and
ror
mov
ja
in
dec
mov
sub
loope
adc
jge
jl
xchg
cmp
add
arpl
(bad)
cld
jp
mov
push
cmp
jb
out
repnz
add
sbb
icebp
out
popf
and
mov
pop
mov
cmp
out
int3
loopne
bound
pop
push
sbb
mov
ins
ret
mov
xor
(bad)
sub
add
sbb
stos
(bad)
popa
xor
cld
shr
stos
and
mov
loop
cmp
xchg
loop
psubsb
jo
loop
cmps
jmp
mov
sahf
push
cmp
sbb
(bad)
add
lods
jnp
mov
adc
add
shl
ret
rcr
repz
(bad)
jbe
dec
inc
adc
addr16
imul
bound
leave
imul
test
imul
aam
mov
out
out
mov
and
sub
add
sbb
cmp
aaa
and
rcr
outs
aad
add
or
gs
out
leave
xchg
ss
mov
aam
leave
mov
call
test
cmp
add
add
cmp
ret
mov
faddp
cmp
(bad)
xchg
movs
xor
scas
sub
mov
sbb
rcr
loop
mov
pop
inc
test
rcr
ret
xchg
enter
jmp
and
mov
out
rcl
jo
popf
int3
sbb
mov
add
rol
push
add
test
(bad)
push
es
icebp
xlat
or
sub
push
imul
ins
sub
dec
retf
in
scas
jnp
(bad)
(bad)
leave
cmps
pop
add
sahf
lahf
ret
xor
or
add
test
jne
ds
fsubp
pushf
imul
xlat
test
daa
push
dec
push
rol
jp
dec
movs
xor
sub
lods
xchg
sub
jmp
ins
mov
fiadd
jg
lahf
sar
inc
unpckhps
mov
test
and
daa
or
mov
pop
inc
mov
or
mov
dec
cmp
test
push
dec
pop
and
mov
lods
js
movs
arpl
jg
mov
xchg
and
sbb
mov
push
push
sbb
dec
adc
movs
dec
jo
std
call
ret
fisttp
mov
and
adc
daa
pusha
dec
out
pop
jmp
in
sub
popa
adc
icebp
add
test
sub
push
test
sbb
push
push
mov
xor
cmp
fisttp
fnstenv
ins
push
cmp
daa
retf
adc
mov
loop
jb
popf
jne
dec
pop
push
xchg
test
push
sti
repnz
popf
call
call
xchg
mov
stc
js
cmps
sbb
(bad)
jae
fild
pushf
add
jbe
(bad)
mov
or
retf
repz
and
or
call
add
ror
lds
aaa
adc
push
adc
pop
and
test
aam
sahf
daa
xor
mov
mov
gs
add
in
sbb
push
cmp
mov
push
fnstenv
(bad)
jb
xchg
mov
dec
push
mov
cmp
push
sbb
mov
or
jno
retf
(bad)
mov
sbb
and
inc
push
cmps
and
pop
or
dec
inc
cmp
and
jb
and
mov
sahf
pop
cmp
fimul
lds
mov
push
repz
adc
xor
xlat
mov
push
(bad)
and
sbb
nop
add
out
pop
loop
xchg
mov
push
shr
and
fsubp
lods
loopne
inc
inc
ins
mov
push
addr16
xchg
sub
scas
add
popf
daa
dec
out
ror
stc
retf
loopne
pushf
push
daa
or
pop
xor
cmp
add
and
adc
push
adc
push
mov
test
push
mov
xchg
add
(bad)
addps
or
lea
addr16
push
inc
and
xchg
xor
mov
ins
xor
mov
movs
data16
(bad)
pop
mov
ret
jle
cmp
push
push
add
dec
cmps
sub
lock
jne
pop
pop
shl
dec
std
les
and
lods
mov
(bad)
push
fcomi
dec
(bad)
push
mov
cdq
sbb
pop
jne
jmp
cmp
jae
mov
dec
scas
and
mov
dec
aad
lea
in
cmp
out
sub
or
sub
pop
rcl
jmp
add
adc
push
sub
popf
and
xchg
fistp
jl
pop
aam
mov
push
push
bound
push
jle
xchg
xor
mov
rcl
push
adc
cs
xlat
cmp
je
pop
(bad)
shl
nop
jge
lods
jge
bound
inc
pop
das
loope
retf
xchg
xchg
cmps
mov
push
or
cmp
rol
loope
inc
cmp
das
retf
iret
inc
xor
cmp
fwait
lock
sub
movs
fnstcw
pusha
and
pop
mov
and
sbb
and
int
clc
(bad)
mov
fimul
xor
mov
cli
xchg
push
lods
gs
aam
test
loopne
sub
in
icebp
cmp
leave
sar
sbb
sub
dec
ficomp
neg
jbe
jmp
dec
lock
and
mov
ss
fdivp
jnp
ds
pop
jmp
call
xor
pop
add
push
in
lea
jg
or
cmp
dec
cmp
loope
out
ret
(bad)
aam
icebp
push
xor
in
jne
sub
xchg
mov
cld
add
cmp
popf
xor
out
into
dec
dec
adc
popa
mov
pop
push
sahf
movs
mov
xor
popa
ja
aas
in
jmp
jge
add
in
scas
sbb
mov
into
xlat
add
push
bound
std
lahf
xchg
xchg
je
rcl
iret
or
loopne
pop
test
mov
add
mov
outs
jmp
je
mov
ja
in
nop
xchg
adc
lods
mov
sub
inc
xor
js
popa
adc
lods
mov
adc
lea
hlt
(bad)
pop
scas
icebp
dec
xchg
hlt
test
pop
test
data16
(bad)
push
call
sub
in
jmp
outs
daa
pop
dec
nop
and
or
sahf
mov
push
jg
(bad)
mov
popa
push
and
or
call
or
mov
cmp
inc
call
fs
push
test
push
push
ror
or
mov
js
push
sbb
add
int
or
cdq
adc
or
or
dec
xchg
mov
into
adc
mov
adc
mov
fdiv
and
inc
stc
adc
xor
push
inc
push
mov
sti
les
cmp
and
dec
cmp
lds
push
out
js
sub
mov
and
loopne
mov
mov
and
(bad)
cld
inc
fwait
mov
mov
mov
push
cwde
inc
cmps
rcl
ins
push
and
push
jg
fdivp
sbb
jg
mov
xor
test
cs
daa
aad
retf
mov
adc
mov
mov
xchg
and
stos
add
shl
jmp
aas
clc
mov
or
test
push
xor
retf
stos
sub
or
or
test
jo
cmp
movs
sbb
sub
out
pushf
fsubr
fsub
mov
and
(bad)
sti
shl
fldl2e
(bad)
pushf
mov
jp
fidivr
push
popa
jno
xor
add
int
hlt
mov
pop
popf
mov
cmc
push
push
leave
mov
mov
xor
popa
dec
not
cmp
icebp
cmp
dec
shl
cmc
or
loope
push
cmp
xchg
dec
outs
ss
(bad)
sti
cld
and
ja
(bad)
and
popa
sbb
pop
(bad)
adc
nop
or
xchg
jle
jae
mov
bound
push
imul
adc
xor
or
pushf
icebp
loopne
or
enter
pop
lods
mov
cmps
xchg
sbb
sbb
and
fwait
mov
sti
stos
out
adc
xchg
inc
pavgw
call
fdivr
repz
addr16
mov
sbb
jb
and
lds
addr16
xor
push
mov
xor
pop
fsubr
into
dec
or
ins
fmul
sbb
in
mov
scas
and
and
mov
lods
shl
fwait
dec
cmp
cmp
das
sub
and
jmp
addr16
repz
mov
cmp
or
mov
mov
inc
pop
cmp
pop
fisttp
sub
mov
mov
dec
ret
push
mov
pcmpeqd
cmp
in
and
mov
(bad)
int
adc
mov
dec
adc
cwde
(bad)
mov
cmp
mov
and
aam
xchg
inc
fisubr
and
jg
mov
mov
sub
inc
in
push
adc
jnp
aad
mov
(bad)
push
sub
mov
xor
push
dec
jmp
mov
imul
jne
or
xor
or
inc
add
out
stc
mov
or
retf
(bad)
bound
int3
push
or
movs
nop
popa
add
mov
stos
jge
xchg
ret
retf
cmp
aad
xchg
test
lods
or
push
sub
xlat
outs
push
inc
mov
cmc
pop
(bad)
push
mov
push
or
mov
cli
cmp
cmps
into
add
cmps
out
push
imul
ret
mov
jg
out
mov
mov
iret
mov
movs
ret
repz
test
lods
jo
mov
dec
pop
jmp
push
fwait
sub
out
out
(bad)
mov
and
mov
scas
stc
aad
cs
pop
popa
jmp
and
in
(bad)
mul
rcr
pop
jo
and
mov
loopne
adc
aad
repnz
arpl
cmp
arpl
push
jmp
call
arpl
jmp
xor
or
pop
adc
test
xchg
ficomp
mov
jb
ins
cmc
sub
xchg
in
jmp
loop
jns
sbb
cmp
jle
mov
mov
push
mov
and
leave
stos
outs
retf
dec
nop
push
std
in
loopne
test
in
cdq
ror
jecxz
xor
xchg
jmp
ss
adc
adc
xor
jmp
mov
mov
add
jns
dec
mov
mov
xor
nop
xchg
xor
popa
js
push
icebp
scas
ret
cli
scas
test
lahf
and
push
mov
lea
xor
div
outs
jecxz
movs
pop
pop
xchg
es
div
popf
enter
(bad)
(bad)
rol
and
aaa
mov
int3
add
xor
xor
dec
sub
add
hlt
dec
retf
adc
enter
(bad)
pop
or
dec
mov
ja
add
call
push
shl
mov
int3
test
mov
ja
push
outs
test
inc
lahf
cmp
sub
(bad)
fs
mov
mov
icebp
sbb
sub
lods
adc
adc
bound
push
push
stos
cdq
cmp
repz
jbe
pop
lock
jno
popa
adc
push
inc
(bad)
sbb
xlat
xchg
xchg
jp
mov
add
cmp
sbb
dec
arpl
js
mov
ins
pop
je
mov
push
jge
mov
mov
enter
cmps
ficom
shl
jecxz
jp
xchg
test
adc
xor
add
adc
outs
add
sti
pop
imul
sbb
adc
inc
pop
fwait
adc
gs
cmps
cmp
loopne
and
jne
outs
fnstcw
mov
ror
fadd
(bad)
mov
cli
shr
adc
icebp
(bad)
pop
cdq
das
cmc
sbb
jb
xchg
cmc
xor
sub
fsub
stos
sub
xchg
fnstenv
test
hlt
lods
jae
daa
(bad)
sbb
call
fidivr
in
push
sbb
stc
sub
lock
xor
js
and
jmp
lea
add
aaa
add
es
cli
adc
cwde
fistp
mov
inc
jle
mov
sub
inc
dec
inc
out
enter
frstor
pop
sbb
sub
mov
xor
sbb
and
int
pop
xor
pop
fs
mov
cwde
cdq
jle
out
loope
addr16
test
jo
mov
fdivr
xchg
jl
sti
test
jp
fcmove
movs
enter
out
add
outs
in
sub
ins
fcmovne
dec
add
inc
mov
or
and
cmps
adc
scas
mov
mov
inc
xchg
and
sbb
ins
push
lahf
cmp
clc
fdiv
push
loop
push
sbb
fbstp
hlt
pop
pushf
daa
aad
stos
test
adc
aad
xor
or
scas
adc
rcr
lahf
add
mov
jmp
repz
inc
pop
or
adc
pop
sbb
and
dec
pop
and
pop
icebp
in
add
pop
leave
adc
add
lods
ret
je
and
cmp
xor
fidivr
dec
mov
repz
jecxz
cwde
dec
mov
pop
inc
(bad)
xchg
(bad)
fbld
sub
dec
lahf
not
sti
dec
cmp
js
mov
inc
sbb
sub
icebp
inc
out
ins
movs
ja
or
test
jbe
lea
out
pop
mov
repz
mov
ficomp
lahf
mov
stc
and
pop
fwait
sahf
cmp
daa
repnz
out
lods
(bad)
outs
jns
adc
(bad)
mov
into
and
push
retf
push
mov
cmps
mul
pop
push
daa
mov
das
add
xchg
mov
mov
pop
div
outs
fnstenv
iret
pop
dec
retf
dec
jmp
xor
fsub
mov
sub
retf
stos
into
adc
mov
sbb
in
mov
addr16
and
or
jmp
daa
cmps
ja
cli
fdiv
inc
fwait
enter
hlt
ins
jns
in
xor
mov
cmps
add
cmps
movs
mov
(bad)
and
push
jo
loop
mov
in
pop
loopne
mov
out
adc
cs
xchg
xor
push
pop
clc
js
mov
cmp
jg
jge
mov
jp
test
dec
dec
mov
push
jb
mov
xlat
idiv
mov
mov
adc
in
xlat
cmp
cdq
push
or
sbb
jl
fwait
cmp
jns
mov
push
fidiv
jo
shl
jb
int3
pushf
retf
xor
sub
xchg
mov
cmp
xchg
pushf
call
push
lea
add
lods
or
jbe
mov
sub
sbb
mov
xor
imul
mov
test
outs
fwait
xor
lds
popf
mov
(bad)
mov
scas
std
stos
jge
or
sbb
rcr
imul
xor
mov
mov
xchg
fcmovnu
lods
into
test
push
je
xchg
enter
jnp
ins
inc
jmp
dec
dec
push
pop
mov
int3
xchg
hlt
dec
mov
(bad)
pusha
mov
ds
les
std
or
(bad)
pusha
bound
(bad)
adc
cdq
inc
add
ins
pop
clc
ficom
sbb
pop
push
and
dec
inc
rol
loopne
add
sbb
inc
xor
mov
ja
jmp
aam
mov
xor
mov
ins
inc
call
add
jl
xchg
inc
adc
clc
imul
jae
fidiv
retf
and
loopne
pushw
or
add
jns
fild
icebp
xor
call
mov
mov
movs
movs
lea
iret
(bad)
loop
fild
stos
retf
xchg
inc
div
push
iret
dec
in
and
xor
dec
xor
cmp
jmp
stos
and
ss
(bad)
dec
popf
retf
mov
xchg
cmp
cmp
out
aas
inc
pop
rcr
cmp
stc
pop
xor
out
outs
sub
inc
mov
jmp
push
jmp
outs
out
inc
dec
cmps
pop
add
xchg
(bad)
mov
xchg
jecxz
nop
or
push
add
aaa
cmp
test
mov
pop
jecxz
enter
add
xor
outs
or
pop
jg
loop
test
and
adc
mov
push
lahf
xchg
mov
or
xchg
xchg
fs
push
clc
sub
mov
mov
mov
mov
movs
stos
call
out
aad
ret
mov
jbe
movs
rol
lahf
xchg
or
sub
lea
icebp
shl
scas
inc
push
sbb
out
test
shl
(bad)
movs
dec
inc
inc
dec
das
rcl
push
or
sar
mov
cdq
inc
dec
add
nop
and
mov
outs
sbb
sbb
cmp
mov
cmp
out
or
mov
retf
adc
jp
popa
jae
data16
(bad)
xor
fld
in
fistp
xor
adc
arpl
icebp
repnz
add
stos
and
popf
nop
jb
jns
add
inc
adc
pop
and
pushf
out
rcr
sbb
pop
and
outs
mov
jecxz
add
add
int
xlat
movs
jmp
clc
stos
jg
cwde
lds
(bad)
fwait
je
jmp
mov
sub
jle
outs
outs
sub
aad
mov
pop
retf
jp
xchg
jge
and
iret
es
std
stos
cmp
mov
cli
adc
mov
xchg
sub
cld
jmp
aas
pop
and
shr
(bad)
pop
pop
ja
push
test
shl
repnz
jnp
cmp
push
ins
push
pop
jge
leave
push
mov
lahf
es
jbe
push
xchg
mov
mov
movs
inc
cld
jl
sti
xor
push
dec
jmp
jns
movs
xchg
xchg
lods
pop
popf
call
push
ja
pop
jg
into
pop
xor
xchg
retf
scas
jne
call
mov
mov
adc
loopne
out
scas
push
cmps
(bad)
ins
mov
inc
inc
addr16
or
push
outs
fcom
pop
mov
outs
pusha
cmps
jmp
jp
imul
push
sbb
jge
xchg
mov
inc
das
fcomp
cmp
mov
js
lods
add
pop
hlt
mov
cmp
in
std
lods
aaa
cmp
retf
das
inc
lds
cmp
xor
lods
mov
sahf
adc
aas
lods
fist
retf
outs
sbb
es
nop
jbe
pop
add
and
outs
ret
push
push
call
lods
(bad)
imul
cmp
jno
sahf
xor
mov
lods
es
dec
mov
popa
test
fld
sbb
pop
lahf
sbb
cmp
cdq
enter
retf
mov
popa
enter
fld
repz
jecxz
fst
pop
mov
mov
adc
int
in
xchg
xlat
jecxz
pop
in
cmp
test
mov
sub
lods
push
popa
xchg
xor
mov
lds
sbb
ret
sub
ret
mov
ror
pop
fadd
mov
out
dec
sbb
popa
nop
xor
inc
add
xchg
jmp
in
push
fsub
js
pop
jl
js
pusha
sbb
sub
int
xchg
(bad)
sbb
jmp
shl
mov
xchg
fmul
jg
dec
(bad)
mov
int3
sub
test
push
fimul
dec
jmp
(bad)
mov
inc
repz
je
pop
test
sahf
lods
add
xor
push
push
icebp
dec
fisttp
scas
jp
xchg
mov
jb
sbb
pop
popa
shl
xchg
pop
sbb
inc
repz
inc
jae
pop
loope
jecxz
addr16
sub
imul
imul
jbe
shl
sbb
push
inc
repnz
leave
loopne
ins
rcr
fcomi
cdq
lods
add
movs
ja
int3
jns
ficom
outs
inc
pop
jbe
shl
jecxz
mov
call
daa
or
mov
imul
scas
and
sbb
adc
shl
sahf
inc
mov
imul
lea
iret
into
retf
(bad)
imul
stc
mov
or
xchg
xchg
sar
pop
mov
aas
adc
cdq
inc
call
dec
nop
xchg
dec
push
or
mov
mov
jle
sub
jns
mov
fst
je
jo
xor
data16
loope
scas
fild
mov
lods
xor
scas
(bad)
sbb
mov
sub
dec
pop
ins
mov
stc
jecxz
call
xor
pop
adc
inc
mov
out
or
data16
fptan
pop
mov
cmp
int
fldenv
arpl
loopne
inc
cld
xchg
cli
sbb
add
mov
add
xor
mov
pop
ins
and
mov
cmp
outs
adc
cmps
push
push
push
xchg
jb
xor
inc
stc
aam
cdq
hlt
mov
mov
loopne
sti
ret
loope
inc
xchg
jg
jno
sahf
add
cmp
mov
fs
leave
push
mov
and
push
fcomp
push
rcl
repnz
lods
dec
or
cdq
sbb
jae
out
scas
mov
(bad)
loop
xor
sbb
inc
mov
sbb
xchg
cmp
pop
lock
mov
sub
mov
and
outs
jno
lds
xor
xchg
imul
out
data16
in
xchg
push
push
mov
aam
icebp
pop
pop
shr
imul
outs
shl
les
cmovne
sbb
(bad)
iret
jb
shl
mov
ds
add
daa
dec
cwde
mov
inc
fwait
(bad)
std
push
mov
pop
jmp
xchg
cmps
adc
sbb
enter
mov
int3
mov
cld
fisttp
lea
push
add
leave
(bad)
push
pop
inc
cmp
cli
sbb
jnp
sub
sti
aaa
xor
sbb
mov
dec
dec
das
pop
call
shr
call
push
outs
pop
icebp
imul
adc
xchg
pop
mov
cld
jns
lock
push
sub
mov
jb
jns
and
adc
xchg
mov
mov
sub
(bad)
jmp
pop
sub
scas
cwde
push
push
and
loopne
pop
(bad)
js
sbb
js
xor
data16
and
mov
push
ja
push
xchg
push
xchg
cmps
mov
jno
js
mov
cli
add
data16
leave
xchg
cmp
lea
push
adc
loopne
ds
sub
mov
xchg
dec
movs
mov
ins
pop
sub
adc
mov
jmp
mov
or
in
jmp
stc
idiv
push
nop
cmps
lods
scas
xchg
cmp
fnsave
popa
loope
daa
pop
xchg
aad
or
imul
xchg
or
cwde
fmul
rol
push
pop
sub
jg
push
xchg
(bad)
and
repz
add
mov
mov
push
movs
lahf
pop
rcr
outs
lods
xchg
icebp
inc
mov
es
popa
test
adc
cdq
bound
popa
ja
and
mov
mov
inc
in
stc
ins
hlt
xchg
scas
imul
in
sub
sbb
push
pop
inc
stc
sub
pop
ins
scas
mov
retf
stos
fwait
repnz
cs
je
and
and
jmp
bound
lock
jbe
rol
fdivrp
inc
movs
lea
push
pop
jmp
frstor
sbb
or
sbb
xor
bound
fimul
ja
jmp
(bad)
dec
pop
push
inc
(bad)
sub
ret
imul
fmul
mov
mov
mov
loope
fld
and
call
iret
imul
mov
sub
mov
jle
pop
jl
jne
cwde
cmc
loope
shl
aaa
or
mov
popa
and
pop
xlat
fs
xchg
push
int3
and
int
jg
aam
xor
jg
lea
imul
mov
repnz
or
adc
call
enter
xor
je
push
pop
or
ss
out
jo
xchg
cli
clc
sub
mov
mov
mov
(bad)
jp
sub
dec
je
sbb
pop
inc
in
adc
mov
adc
mov
mov
push
call
inc
sub
mov
iret
lds
ins
push
push
outs
mov
call
cmp
cs
pop
jo
ret
popa
xchg
xor
repnz
add
jp
push
ins
mov
sub
aaa
pop
fcomp
sbb
je
jl
jl
fisubr
shl
xchg
les
xor
push
xor
mov
mov
inc
idiv
mov
shr
sbb
rcl
aam
cld
xchg
mov
sub
iret
or
nop
sub
xor
dec
sbb
pop
mov
pop
push
out
cdq
pop
loope
cmp
sub
xor
lock
sti
leave
fdiv
daa
push
stc
dec
imul
cmp
mov
les
gs
mov
and
xchg
pop
mov
mov
pop
stos
dec
cmp
in
mov
lahf
data16
sub
scas
stos
cmp
repz
in
jnp
mov
gs
mov
iret
daa
not
cs
mov
cmp
dec
mov
or
adc
(bad)
out
add
mov
jl
(bad)
in
cmc
movs
mov
outs
outs
pop
jns
leave
xchg
imul
and
push
dec
and
sbb
mov
popf
mov
dec
sub
pusha
aad
inc
xor
mov
mov
jp
je
xchg
mov
inc
add
add
inc
add
test
ins
call
stc
lods
pop
movs
stos
fst
popf
mov
push
xlat
mov
std
jecxz
push
(bad)
sar
pop
pop
xor
push
popf
imul
repnz
repnz
es
xchg
ins
out
call
cmp
xor
stos
test
mov
outs
sbb
jecxz
inc
neg
xor
inc
out
or
mov
(bad)
mov
popa
fistp
sub
add
xor
mov
sbb
add
sub
fwait
xlat
repz
and
cdq
fst
loopne
(bad)
and
or
pop
(bad)
ss
je
scas
xchg
mov
fiadd
xor
add
les
sub
loopne
mov
loope
sbb
xchg
rol
jnp
xor
lahf
arpl
xchg
mov
scas
imul
bound
inc
(bad)
jecxz
add
aam
mov
shl
pop
and
jno
mov
mov
sub
xor
mov
idiv
in
xchg
lds
xchg
(bad)
xor
stos
loopne
mov
and
rcr
outs
lahf
xchg
push
mov
cwde
mov
jo
(bad)
adc
vprotq
push
repnz
sahf
into
sub
mov
add
xchg
mov
jmp
or
xlat
jl
xchg
xchg
(bad)
xor
ror
in
mov
in
xchg
es
(bad)
pop
cdq
add
push
in
and
dec
repz
xchg
pop
add
leave
mov
sub
mov
les
and
adc
push
jmp
and
xor
pop
retf
loopne
dec
push
pop
mov
ins
push
mov
fsubr
adc
cmp
(bad)
add
xlat
inc
mov
mov
inc
sbb
mov
aad
pop
sbb
lods
mov
adc
shr
push
inc
repz
push
mov
ror
push
int3
or
inc
out
ja
pusha
stc
mov
push
aaa
mov
pusha
add
jg
mov
pop
sbb
mov
mov
add
cmp
dec
xchg
push
in
iret
jmp
shl
stc
mov
push
nop
aam
mov
cmp
and
mul
sbb
call
jp
xchg
cmp
rcr
push
movs
rcl
pop
cmp
add
in
or
adc
mov
mov
enter
cmps
mov
repnz
ins
or
popa
or
add
jbe
mov
sar
pushf
out
and
xchg
js
sbb
xchg
test
mov
out
cmp
popf
js
mov
inc
push
add
leave
or
mov
pop
scas
repz
and
pop
dec
pop
mov
ds
or
enter
push
pushf
pop
iret
call
push
test
dec
scas
mov
ins
mov
mov
test
push
test
int3
pop
cwde
jns
xchg
jl
xor
and
mov
push
ins
cdq
jmp
cld
test
xor
pusha
or
push
cli
inc
sbb
in
imul
push
fidiv
iret
(bad)
retf
or
test
jl
scas
rcr
fstp
fs
(bad)
cmp
or
idiv
test
inc
scas
aaa
(bad)
jmp
ror
ds
add
stos
ret
and
jge
jge
jmp
ja
data16
or
out
imul
sbb
pop
aas
(bad)
jno
mov
jle
xor
ficomp
sbb
lds
fwait
bswap
dec
test
gs
fisttp
jmp
pop
dec
mov
out
cdq
xor
outs
mov
ja
fadd
dec
stc
push
xchg
xor
jmp
mov
fidiv
movs
xor
sti
adc
cmp
shr
add
push
sub
gs
xchg
xchg
(bad)
into
and
repz
daa
push
mov
sbb
push
sub
inc
xlat
into
push
rol
ja
jne
and
aad
push
retf
and
aam
pop
retf
dec
xor
and
enter
or
inc
clc
(bad)
dec
jae
leave
out
test
jbe
and
adc
(bad)
rcr
lods
(bad)
lock
dec
mov
push
jmp
adc
mov
aas
fld
xchg
jne
rcl
sub
push
cmps
lea
dec
xor
mov
(bad)
lods
push
jne
jo
jbe
xor
sahf
rol
daa
test
inc
sub
pop
rep
inc
jo
jmp
xor
call
lea
mov
test
or
je
in
fcomp
je
retf
paddusb
sub
shr
test
cdq
enter
arpl
mov
jl
push
adc
xor
mov
sbb
mov
push
inc
xchg
push
ss
push
sub
loope
adc
(bad)
mov
and
jnp
sub
jbe
and
das
mov
dec
add
jnp
and
add
jle
adc
int
push
mov
sti
pop
mov
sbb
add
jne
pop
jnp
xchg
loop
pop
and
jnp
adc
in
imul
fdiv
mov
sub
xor
pop
cmc
or
sbb
in
mov
lds
adc
cmp
fild
and
out
jnp
stos
(bad)
fs
lahf
xor
pop
pop
xor
mov
lock
(bad)
fimul
out
cli
leave
out
jp
unpckhps
cwde
jns
or
push
or
dec
into
stos
jmp
and
repz
mov
jp
push
xchg
xchg
(bad)
mov
pextrw
scas
ins
sub
(bad)
sahf
repz
mov
inc
pop
js
sar
mov
ss
xor
or
imul
push
add
jl
ret
cmc
aam
and
pop
sub
mov
sbb
sub
push
cdq
addr16
and
and
push
mov
es
jle
dec
popa
xlat
test
xchg
xchg
cmp
pusha
xor
sub
jge
mov
mov
dec
outs
xchg
outs
pop
cmc
cmp
out
imul
repz
adc
mov
shl
std
pop
retf
ds
lea
sbb
adc
fmul
arpl
lds
sub
std
xchg
lock
es
mov
lods
lock
stos
pusha
mov
mov
mov
jns
jne
test
mov
xchg
sbb
int
daa
push
dec
div
add
stos
int
jo
mov
cmp
popa
clc
inc
pop
and
add
adc
cmp
addr16
xchg
gs
or
scas
ins
pop
jne
(bad)
les
movs
stos
sar
mov
lahf
ja
mov
sub
in
jo
int
pop
mov
stos
fxam
adc
jbe
xchg
xor
mov
mov
(bad)
lods
dec
call
inc
cdq
lea
out
jae
in
jle
sub
out
(bad)
cs
mov
arpl
loopne
retf
fidivr
mov
jg
push
test
(bad)
xor
jnp
call
cmps
cmp
adc
cmp
test
pop
mov
jbe
(bad)
sti
or
sbb
scas
fwait
not
mov
mov
das
jno
push
sub
outs
fwait
dec
fisubr
mov
cmp
dec
mov
xor
add
ds
aaa
mov
loope
ja
ins
fwait
rcr
lock
cmp
push
sbb
hlt
shr
gs
xchg
test
nop
push
jns
leave
mov
(bad)
test
outs
stc
(bad)
mov
stc
mov
push
dec
mov
sbb
mov
inc
nop
xor
xchg
dec
mov
and
xor
mov
ror
into
pop
and
dec
and
adc
int
cmp
inc
inc
outs
repnz
stos
cmps
and
add
or
fcmovbe
shl
dec
sbb
push
and
pop
mov
or
aaa
stos
bound
gs
pop
aad
loope
pop
add
shl
in
mov
int
jmp
out
sar
fisub
add
dec
sbb
and
mov
out
mov
ins
js
int
mov
push
push
push
xor
and
into
ret
push
cmp
sub
mov
int
mov
mov
push
xor
mov
inc
cmps
fidivr
arpl
daa
inc
rcr
jle
mov
xchg
mov
out
movs
mov
rcl
aad
xchg
call
jns
ins
and
jge
jmp
sub
je
push
push
lahf
push
adc
mov
push
mov
gs
sbb
ret
and
push
lea
push
pop
or
push
xor
(bad)
cmp
popa
mov
test
pop
ins
and
test
test
gs
inc
int
iret
lahf
mov
(bad)
repz
ins
mov
mov
int
adc
push
adc
sbb
es
add
mul
xor
mov
sub
mov
test
fmul
fbld
(bad)
(bad)
mov
xchg
in
enter
(bad)
cmp
jmp
or
jnp
fild
pop
jmp
xchg
or
mov
sub
sti
neg
or
pop
(bad)
inc
pop
mov
stc
sti
sahf
push
dec
add
(bad)
ret
test
stc
ins
ins
(bad)
lds
and
add
cmps
jnp
ror
add
lods
int3
arpl
mov
sti
movs
xchg
or
out
jmp
add
and
movs
push
add
jmp
jle
pop
cld
les
sbb
repz
or
add
xchg
add
retf
mov
xchg
sbb
(bad)
(bad)
loope
xor
mov
push
(bad)
mov
sub
sub
mov
div
pushf
fmulp
xchg
mov
add
dec
(bad)
and
pusha
jnp
loopne
int
cmp
mov
scas
push
out
adc
add
mov
fmul
cmp
dec
dec
ins
push
outs
dec
daa
mov
stos
inc
fst
xchg
cwde
push
lahf
or
ret
jle
xlat
test
cld
fldcw
retf
add
pop
push
push
cmp
xchg
sub
retf
add
fwait
jo
add
inc
ror
hlt
lock
ror
jge
sar
ret
cmc
jo
aam
sbb
xor
ins
xor
push
leave
std
stos
jg
aaa
outs
in
mov
pop
outs
mov
dec
addr16
jp
adc
icebp
iret
jmp
inc
aam
hlt
pop
inc
inc
adc
scas
xor
rcl
sub
lock
jmp
and
mov
pop
sub
xchg
pop
mov
push
arpl
mov
in
jle
cmp
inc
mov
call
(bad)
dec
mov
push
sahf
lods
xchg
js
xor
outs
push
outs
add
mov
lock
xor
arpl
jno
pop
lea
fldenv
aaa
pop
lods
in
test
jne
dec
leave
enter
gs
ss
ja
pop
mov
into
mov
sub
iret
or
sub
aam
in
push
pop
or
mov
popa
pop
rol
add
sbb
jmp
xlat
leave
(bad)
(bad)
daa
dec
in
shl
je
adc
int3
jp
xchg
rol
mov
gs
out
or
loope
imul
mov
mov
adc
cmps
xlat
or
push
pop
sub
mov
cdq
xchg
jecxz
mov
lds
mov
mov
les
retf
aam
push
and
sub
push
clc
xor
cmp
xchg
inc
ret
and
mov
or
and
add
jmp
idiv
test
mov
dec
xchg
mov
mov
mov
add
(bad)
fwait
and
scas
add
inc
dec
sahf
nop
add
xchg
js
xor
leave
jp
jne
jno
or
fwait
sub
popf
imul
mov
(bad)
xchg
mov
mov
mov
test
pop
xor
dec
test
mov
stc
pop
xor
sahf
xchg
les
pop
cmp
add
xchg
adc
je
xor
pushf
dec
pop
cmp
push
push
sub
cmp
jnp
loop
push
jae
in
outs
pop
sbb
cwde
dec
jg
dec
das
popa
cs
pop
movs
add
jmp
adc
jno
xchg
stc
add
pop
sbb
loope
js
mov
(bad)
imul
ins
xor
psllw
cmp
popf
xchg
pusha
outs
test
call
mov
(bad)
das
call
inc
xchg
dec
mov
mov
sub
xlat
std
push
test
int
cmp
ds
cmps
mov
mov
inc
or
jmp
fnstenv
retf
sbb
cmp
call
cdq
cmp
mov
hlt
and
test
pop
pop
sbb
push
push
(bad)
fnsave
fistp
mov
leave
lds
push
gs
mov
push
mov
and
or
neg
imul
add
mul
jb
sbb
mov
inc
cmps
or
dec
jne
mov
sub
in
jo
push
mov
xchg
cmp
jmp
enter
ss
xchg
push
jnp
pusha
out
jb
stos
movs
ss
hlt
iret
daa
jg
jg
popf
xor
push
jge
jg
mov
mov
xor
retf
push
in
dec
sahf
pop
adc
xchg
push
sbb
aam
or
pusha
(bad)
dec
mov
(bad)
push
sub
fstp
mov
and
data16
clc
std
jbe
cmps
push
inc
sub
mov
jo
jae
icebp
fwait
lds
cmps
xchg
jnp
xchg
mov
(bad)
aam
scas
add
cdq
dec
adc
cs
mov
in
sub
sahf
mov
sbb
pop
(bad)
sti
mov
xchg
fwait
xchg
fisub
cmp
test
jb
addr16
ret
and
test
and
movs
in
lods
clc
cmp
(bad)
pop
and
aaa
adc
pop
cmp
or
mov
sbb
in
jnp
xchg
inc
push
dec
(bad)
push
out
stos
(bad)
adc
in
or
jae
retf
add
adc
push
repnz
test
xchg
mov
imul
pop
mov
adc
outs
jno
mov
fst
dec
sbb
pop
in
fdivr
cmp
mov
out
sbb
cmc
mov
mov
imul
data16
jae
imul
test
cdq
sub
ins
aad
xabort
xor
and
loope
pop
mov
mov
cmp
xor
les
in
sbb
popa
dec
in
aam
mov
leave
lea
fisttp
rep
mov
loope
inc
addps
cmp
(bad)
or
mov
inc
push
popa
es
dec
imul
fldenv
jp
xor
cmc
or
iret
int3
iret
pop
aas
xor
dec
test
popa
or
adc
cdq
jnp
out
jmp
pop
aaa
retf
ins
cmps
imul
xchg
xor
(bad)
add
cmp
into
dec
jmp
or
cmps
mul
cmp
loope
or
mov
cmp
adc
jge
jecxz
clc
push
ins
xor
jns
jmp
mov
in
inc
data16
adc
cwde
es
cld
adc
jge
jmp
adc
mov
fld
xor
or
mov
mov
and
inc
(bad)
inc
cmp
sbb
stc
push
rol
add
test
and
or
add
xchg
imul
icebp
and
pushf
jle
push
adc
sub
bound
aad
mul
arpl
(bad)
mov
jge
mov
int
sbb
push
add
push
imul
arpl
stc
xchg
or
stc
fsub
das
pop
mov
int
push
lods
jbe
test
mov
sub
sahf
cmps
push
sahf
dec
jmp
in
xchg
je
xlat
xor
in
xchg
(bad)
int
mov
test
xor
lahf
pop
(bad)
mul
sub
scas
mov
dec
xor
cli
dec
mov
xor
addr16
mov
ds
in
sub
mov
mov
loop
sar
pop
inc
ins
mov
or
iret
pop
cmc
cmp
jmp
inc
aaa
mov
aas
ss
push
inc
popa
test
jo
addr16
mov
stc
xchg
add
jnp
jbe
or
mov
pop
shl
test
lods
fisubr
push
add
dec
jg
or
adc
cmps
jmp
ss
sbb
inc
fcomp
jg
aam
sbb
retf
imul
aaa
push
dec
sti
cdq
xchg
mov
ins
push
fstp
xchg
mov
arpl
repz
mov
mov
mov
ins
sbb
add
push
sar
sbb
jbe
sbb
cmp
xor
xor
adc
add
mov
fwait
bnd
xchg
inc
scas
push
int3
push
adc
ins
adc
lahf
sbb
icebp
xor
imul
retf
outs
push
js
sub
xchg
dec
and
sbb
cld
push
xor
mov
aad
and
mov
in
imul
add
arpl
mov
in
mov
xor
in
mov
mov
cli
mov
xchg
aas
not
jnp
add
out
in
aam
mov
(bad)
imul
cmps
cmp
mov
mov
jl
test
adc
or
adc
mov
or
pop
cli
mov
xor
cmp
rcl
sub
jae
push
mov
xacquire
(bad)
shr
push
mov
push
sbb
popa
std
data16
pop
xchg
out
mov
pop
mov
cdq
and
adc
cmps
aas
(bad)
cmp
pusha
xor
out
sub
mov
leave
inc
mov
xlat
xlat
in
push
push
in
push
stos
jbe
out
sbb
sbb
fcom
jns
fistp
sub
sbb
and
repz
inc
inc
out
dec
xchg
je
js
or
ror
inc
xchg
mov
and
in
pop
out
cwde
pop
pop
mov
je
out
vpsubw
sbb
mov
int
inc
and
mov
cli
cmp
addr16
xchg
shr
push
mov
xor
inc
arpl
sbb
fmul
cmps
pop
sbb
js
stos
dec
or
icebp
into
and
ins
sub
push
lods
data16
or
cmp
cmp
das
shr
xor
cmp
or
or
sub
ds
pop
dec
xchg
or
ins
imul
adc
xor
push
ins
dec
push
mov
pushf
push
nop
movs
jo
push
xchg
xchg
call
jge
pop
repnz
shl
adc
or
addr16
cmc
popa
stos
loopne
mov
es
mov
in
(bad)
dec
cli
test
lea
retf
adc
int3
(bad)
ret
cmps
scas
push
cmp
mov
mov
cmp
or
xchg
sub
mov
xor
je
mov
stos
push
push
icebp
fisub
jae
loop
into
jne
dec
push
imul
repnz
cli
add
shr
loope
shl
jo
pop
scas
or
push
inc
pop
cwde
cmp
sbb
rcl
pop
fs
push
xor
sar
dec
lahf
out
aas
test
scas
mov
and
dec
cli
in
ins
idiv
imul
addr16
xor
sbb
inc
ins
mov
jge
jmp
or
dec
jmp
xchg
test
mov
dec
sub
cwde
repnz
push
xchg
and
aaa
mul
cmp
jecxz
push
and
shl
xchg
retf
shr
push
jo
movs
outs
js
jge
neg
jecxz
sub
movs
mov
test
jo
out
push
inc
movaps
out
in
neg
mov
dec
pop
daa
adc
inc
sbb
sub
mov
nop
xchg
mov
jns
pusha
sub
cmp
clc
hlt
mov
movs
sbb
aam
xchg
(bad)
pop
jmp
sbb
std
jge
push
adc
retf
lds
inc
das
sub
ror
rol
pop
xor
(bad)
outs
cmp
mov
movs
adc
mov
in
jle
push
adc
push
push
dec
push
(bad)
pop
adc
shl
pop
es
dec
mov
jns
mov
or
jle
jne
repz
mov
jnp
enter
cmp
xor
inc
scas
mov
mov
shl
ss
sbb
mov
push
les
out
sbb
div
lods
mov
sbb
push
add
rcr
out
jp
or
push
test
xlat
repz
jns
push
repnz
sbb
(bad)
mov
jp
sbb
mov
and
sbb
clc
dec
mov
inc
mov
jno
cmp
out
(bad)
and
mov
mov
inc
icebp
rcr
out
sar
cmp
test
xor
lock
outs
cmp
pop
mov
pop
popf
dec
sbb
arpl
pop
in
lods
cmp
ja
lds
rol
fwait
ins
js
jb
mov
or
fcomp
stos
call
push
sub
mov
push
adc
mov
pop
std
pop
pop
cmp
rol
pop
sub
les
jbe
and
repnz
mov
repz
jae
ficom
ror
sub
es
stos
daa
pop
sbb
cmps
addr16
(bad)
mov
fidivr
push
sbb
push
mov
mov
or
xchg
shl
jno
mul
lock
icebp
movs
dec
out
(bad)
in
xchg
aad
cs
ja
ja
das
cmp
cmp
test
aam
aas
dec
fisttp
mov
sbb
ins
jb
retf
mov
fs
int3
jmp
push
mov
push
shl
and
shl
pop
xor
jbe
inc
cmps
sar
jae
and
fiadd
ror
xor
icebp
mov
ins
or
push
inc
add
mov
arpl
xchg
inc
dec
mov
outs
ror
lahf
sub
push
cmp
mov
cmps
fild
cmps
fidivr
mov
sar
(bad)
fld
shr
add
cmp
test
lods
pusha
loopne
repnz
jg
loop
sbb
push
and
leave
sahf
push
pop
cs
or
outs
and
adc
test
add
mov
and
stc
mov
mov
lods
pop
push
add
or
cli
xor
clc
push
clc
fcomi
call
iret
jb
test
iret
push
push
and
out
icebp
sub
sbb
add
sbb
and
loope
and
enter
leave
not
mov
hlt
fdivp
adc
loope
fwait
or
push
sub
dec
xchg
retf
xor
in
or
cmp
and
push
xor
lds
push
mov
rcr
clc
push
sub
jmp
xor
mul
mov
test
les
loope
add
repnz
xor
cmp
retf
and
pusha
add
mov
pop
inc
push
inc
test
ss
inc
stos
sbb
jge
xlat
xor
outs
js
fs
xor
jo
xchg
lock
mov
movq
call
pop
movs
nop
mov
movs
loop
jae
rol
jne
cmps
or
mov
jo
jmp
add
jmp
leave
ds
add
in
cdq
or
xchg
sub
aas
loope
in
sbb
jb
and
mov
xchg
mov
jle
cmp
push
jecxz
mov
mov
pop
test
jmp
dec
sbb
aas
test
fldcw
pushf
jbe
mov
out
sbb
mov
mov
outs
mov
and
(bad)
push
sbb
mov
add
dec
adc
mov
shl
sbb
push
push
cmp
push
mov
jle
cmc
sub
mov
mov
lahf
dec
and
jne
dec
dec
jne
push
cwde
dec
push
cs
xchg
clc
mov
push
inc
pushf
cmp
sti
scas
mov
bound
add
fidiv
adc
inc
cmp
test
hlt
and
jg
mov
or
sub
enter
mov
add
(bad)
adc
jae
push
test
stc
test
cmc
ss
or
xor
lahf
cdq
inc
fwait
sahf
gs
or
cmps
inc
cmp
dec
mov
pop
imul
shl
mov
adc
push
mov
stos
(bad)
cmp
cmp
xchg
lea
jbe
movs
jns
sub
and
and
lods
inc
js
shl
movs
cmps
mov
jge
cli
xchg
not
add
mov
daa
push
test
test
mov
or
inc
gs
aad
fistp
js
sbb
push
leave
push
sbb
mov
cli
mov
mov
pop
into
in
ret
ret
stc
cli
xchg
adc
add
pop
add
leave
sahf
fidiv
inc
dec
cli
imul
or
(bad)
(bad)
stc
movs
(bad)
aam
pusha
adc
retf
inc
fwait
test
inc
pop
(bad)
mov
xchg
add
int3
ror
mov
xchg
ja
pop
fst
adc
fisttp
cld
jge
sub
mov
dec
(bad)
int3
mov
test
mov
and
mov
push
js
call
mov
mov
inc
(bad)
ins
xor
stos
xchg
mov
push
mov
inc
(bad)
std
cmc
lods
mov
fnstcw
pop
jnp
jecxz
bts
mov
lds
ins
rcr
into
pop
mov
adc
inc
xchg
jecxz
mov
mov
addr16
push
mov
mov
inc
test
push
repz
xchg
inc
mov
int3
mov
sbb
push
imul
inc
inc
fist
xchg
addr16
rol
lea
jg
sbb
jmp
clc
out
or
adc
pop
retf
nop
push
lds
xlat
sbb
pop
xlat
rol
jmp
jge
nop
inc
jb
cwde
pop
push
into
in
or
lods
pop
(bad)
cwde
mov
arpl
movs
mov
js
fidivr
xchg
cdq
sub
cmp
sbb
push
mov
dec
fcomp
push
je
fnsave
iret
push
adc
push
(bad)
cmp
xchg
popf
cmpxchg
xor
jl
in
or
xor
daa
int
push
scas
mov
cmps
cmps
jg
add
cmps
push
jmp
mov
shl
push
push
or
rcl
je
mov
pop
adc
jmp
scas
xchg
fwait
xor
inc
xchg
gs
and
fld
adc
fsubr
cmp
shr
(bad)
in
dec
mov
pop
jno
aam
or
sbb
sbb
enter
add
(bad)
sub
and
popf
repz
pop
pop
outs
mov
jge
ins
mov
sbb
xor
adc
pop
xor
clc
mov
int3
mov
dec
mov
cdq
(bad)
fisub
cld
cmps
mov
iret
dec
push
push
adc
push
lea
inc
(bad)
fs
cmps
repnz
fimul
rol
in
lods
sub
sar
sub
js
mov
xor
fld
or
push
cld
fdivrp
sbb
cli
aad
adc
inc
push
fild
mov
push
pop
mov
pop
lds
inc
(bad)
push
ins
call
out
sti
test
mov
in
imul
dec
jno
xchg
sbb
or
jmp
lea
jmp
sub
ja
jge
fmul
ss
fcmovne
or
ret
mov
push
ret
js
jne
mov
cmp
and
inc
loope
xchg
push
jmp
clc
pop
xchg
fs
stos
or
data16
sub
and
mov
jno
or
mov
(bad)
pushf
mov
adc
inc
sub
retf
test
out
data16
mov
out
lock
fsub
loope
jle
pop
test
sbb
sbb
imul
adc
or
xor
add
xor
mov
sbb
cmp
xchg
cli
dec
add
mov
mov
mov
pop
push
stc
jp
aaa
or
std
mov
ins
scas
ss
fisttp
dec
jbe
out
loop
retf
and
xchg
sub
aad
sub
push
xchg
sub
imul
das
fstp
pop
ja
aad
jno
clc
cs
mov
pusha
cmp
mov
jb
xor
mov
cmp
mov
in
xchg
pop
lock
push
cwde
les
cs
clc
mov
mov
loopne
ja
push
int3
cmp
enter
sbb
inc
shl
pushf
fwait
sbb
(bad)
cmp
(bad)
stos
pop
jnp
xchg
shl
add
xor
and
inc
xor
je
mov
adc
fcomp
mov
mov
cmc
stc
shr
sub
dec
xor
xchg
mov
loopne
repz
dec
xor
std
(bad)
mov
cmp
and
sub
mov
mov
sbb
sub
pop
lods
jae
sbb
loopne
adc
cwde
icebp
inc
inc
mov
push
xor
adc
fs
xchg
daa
mov
inc
add
cdq
stos
or
push
dec
mov
adc
pop
retf
int
test
jbe
popa
pop
fistp
(bad)
frstor
pop
sbb
ins
out
outs
ja
sub
cmc
movs
dec
dec
jle
outs
mov
push
adc
jle
xor
into
icebp
jns
push
shl
mov
push
shl
sbb
lods
ss
in
pop
push
inc
inc
es
fmul
(bad)
xlat
dec
xchg
arpl
xchg
push
ja
retf
push
cld
div
sahf
push
pushf
fiadd
xor
mov
imul
sbb
fs
add
push
jl
jb
jb
ins
sbb
ins
or
cmp
outs
mov
gs
scas
fs
rcr
(bad)
not
lods
xor
mov
add
pop
push
clc
mov
cmp
xor
adc
repz
(bad)
arpl
lock
lea
ror
xchg
std
in
outs
push
aaa
fldl2e
inc
jl
xchg
hlt
out
enter
mov
sbb
mov
aas
sub
sbb
imul
clc
loope
sbb
mov
test
jl
ror
jb
daa
rcl
cwde
sbb
cmc
hlt
es
mul
inc
lahf
test
xchg
dec
sbb
pop
popa
inc
sar
mov
stos
out
imul
mov
fimul
fisub
jmp
adc
mov
test
dec
sbb
(bad)
cmp
aad
ins
int3
jmp
cmp
out
arpl
cmp
sti
inc
sbb
movs
adc
fstp
push
dec
and
cmp
push
mov
into
jmp
daa
cmp
cmp
and
icebp
inc
xor
dec
movs
push
mov
or
add
fbstp
sub
(bad)
push
mov
ins
adc
jmp
inc
test
test
pop
(bad)
mov
and
rcl
popf
jge
cld
pop
mov
call
ds
and
cmp
jno
cmp
add
add
push
pop
cmps
call
fldenv
sbb
inc
mov
push
push
cmp
sti
retf
cmc
mov
cmc
fs
scas
mov
into
xchg
(bad)
lods
push
repnz
inc
jne
jmp
inc
cmp
inc
(bad)
pop
mov
mov
cmps
mov
pop
in
and
xor
std
div
test
dec
sbb
pop
fnstcw
cli
in
aam
cmc
retf
jne
sub
dec
pop
into
cli
xchg
daa
in
xor
fidivr
inc
fucom
pop
ja
sbb
out
outs
scas
js
cli
retf
cmp
cmp
loopne
pop
test
add
cmp
hlt
ja
dec
sub
es
aaa
jmp
fwait
xchg
lods
xor
data16
dec
mov
retf
mov
stos
and
push
clc
fimul
xor
jmp
inc
fwait
rcl
jmp
outs
das
in
inc
or
sub
jp
je
jnp
dec
ror
or
xor
ficomp
cmps
loopne
mov
cmp
sbb
inc
test
push
or
mov
jne
add
jmp
aad
test
(bad)
sbb
jmp
jle
movs
sbb
test
std
mov
push
movs
ja
shl
dec
add
ret
sahf
mov
mov
outs
jns
(bad)
(bad)
inc
in
dec
fcmovnbe
pop
mov
sbb
ja
add
xor
or
ja
inc
cmp
cwde
cmp
mov
aaa
sbb
(bad)
xchg
xchg
and
mov
adc
or
fsub
lods
xchg
push
ret
test
mov
dec
div
pop
xchg
shl
jge
sub
inc
dec
add
add
rcl
push
cld
(bad)
dec
cs
aam
(bad)
movs
repz
idiv
nop
ins
out
ins
fidiv
in
(bad)
sti
xchg
js
push
cld
cwde
cwde
in
mov
imul
(bad)
fisttp
nop
shr
fmul
mov
rcr
inc
jb
and
or
pushf
mov
cmps
cmp
clc
das
pushf
mov
and
mov
jmp
les
jb
adc
xchg
cmp
xchg
or
iret
in
push
call
sub
imul
mov
les
enter
push
and
mul
repnz
sub
dec
lods
mov
(bad)
lea
jns
dec
jle
stos
and
add
stos
lds
in
cdq
inc
ffree
sbb
jne
fwait
inc
aaa
xor
sub
lods
rcl
repnz
hlt
imul
add
xchg
xchg
push
retf
push
mov
int3
pop
mov
(bad)
fstp
aam
push
out
ffreep
mov
outs
cmp
in
inc
pop
add
mov
xor
sbb
cmp
iret
adc
aad
mov
xchg
dec
jp
(bad)
xlat
imul
xchg
sti
inc
xor
jmp
(bad)
dec
popa
cmp
mov
fwait
in
mov
add
pop
push
fstp
popa
dec
dec
adc
retf
cmps
int3
xor
out
cli
sub
call
ins
sbb
popf
inc
sub
mov
mov
push
or
or
rcr
dec
pop
repz
ret
rcr
pop
push
inc
jg
not
pop
movs
test
mov
scas
(bad)
scas
adc
jl
neg
hlt
jmp
xchg
inc
lock
inc
push
rcl
push
adc
fsubr
jbe
rcl
clc
mov
pop
mov
int3
(bad)
mov
adc
push
mov
stc
aad
adc
cmp
es
and
jecxz
je
(bad)
jp
cmp
call
pop
or
jge
sbb
pop
adc
mov
or
xor
leave
or
inc
and
fucomip
adc
mov
dec
cs
dec
movs
ret
call
fmulp
push
inc
xchg
xchg
or
xor
push
adc
dec
or
imul
cdq
dec
test
add
pop
jae
hlt
hlt
mov
lods
pop
stos
jecxz
imul
pushf
sbb
ins
jne
fist
or
cld
(bad)
push
inc
lahf
mov
jmp
daa
(bad)
adc
jmp
add
or
mov
scas
pmuludq
or
nop
lods
(bad)
sbb
adc
mov
sar
sub
fisttp
fiadd
inc
pop
and
sub
out
stos
pop
add
mov
(bad)
mov
cmc
iret
movs
data16
mov
stos
push
pop
mov
and
dec
ins
add
jno
cmovbe
push
or
xor
cmps
adc
inc
ja
cmps
mov
in
or
inc
loope
dec
xor
(bad)
ins
fld
inc
cdq
push
loop
mov
push
or
mov
outs
movs
test
fwait
popf
fsubr
push
inc
sub
sbb
jmp
cmp
add
and
add
xchg
jnp
cs
test
iret
ds
je
stos
and
js
pop
addr16
xor
push
imul
dec
loop
out
pop
adc
add
(bad)
jb
jge
into
mov
mov
clc
pop
pop
xlat
out
and
clc
dec
cs
mov
pushf
test
stc
pop
add
mov
jmp
(bad)
lods
sahf
lds
nop
arpl
or
sub
jecxz
ja
pop
fild
mov
jmp
jbe
(bad)
aaa
mov
in
cld
add
push
xchg
mov
repnz
xchg
addr16
aas
test
cmp
xchg
mov
neg
pusha
pop
pop
movs
xor
push
or
mov
add
mov
int3
popa
dec
fist
xor
loopne
fcomip
int
xchg
add
push
adc
xchg
mov
mov
dec
or
inc
push
jge
mov
dec
inc
mov
jnp
mov
xchg
inc
mov
(bad)
into
sbb
sbb
mov
retf
sub
rol
inc
cld
imul
mov
aad
xchg
js
jecxz
inc
stc
and
nop
aas
mov
sbb
rcl
mov
mov
pop
jbe
out
popf
out
sbb
(bad)
je
scas
mov
pop
(bad)
cmc
push
lods
jnp
or
ins
std
jecxz
inc
dec
out
cld
cdq
adc
aaa
xchg
jbe
dec
scas
fadd
xchg
push
pop
sub
inc
lahf
inc
ja
sbb
sbb
dec
or
ins
test
jae
jb
or
mov
es
test
daa
movs
das
xor
scas
xlat
pop
sbb
dec
repz
mov
fld
xlat
push
pop
xlat
loopne
cmp
loop
lods
jns
sub
mov
and
mov
int3
repz
or
pop
in
cmp
call
and
jge
adc
sub
lock
adc
fild
clc
push
icebp
shl
rol
xchg
inc
stos
xchg
aad
loopne
retf
pusha
xor
xlat
xchg
jmp
shl
loopne
push
shr
call
jns
out
push
iret
sub
xchg
retf
clc
fidiv
or
neg
fnstenv
test
hlt
dec
mov
sahf
pop
stos
push
loope
test
pop
mov
sbb
sub
inc
lea
mov
pop
mov
into
maxps
and
xor
push
cmp
fstp
and
mov
into
out
pop
xchg
pop
add
and
sub
cmp
inc
stos
push
jge
or
inc
pop
test
pop
dec
mov
in
mov
adc
cmp
mov
lea
dec
(bad)
cmp
add
cmps
dec
retf
xor
add
mov
or
movs
test
inc
movs
loop
dec
mov
pop
fst
into
out
xchg
mov
push
sub
xchg
xchg
or
pop
and
mov
cdq
imul
adc
in
retf
popf
dec
pop
mov
mov
out
xor
cdq
or
mov
cmp
mov
inc
xor
sub
test
cli
dec
push
(bad)
cli
push
stos
dec
push
lods
movs
jle
icebp
inc
sar
jl
fbstp
sbb
fadd
xchg
add
pop
sbb
aaa
ficomp
pop
mov
mov
mov
std
data16
dec
dec
iret
jb
push
pop
sar
add
loopne
(bad)
mov
mov
or
add
mov
test
scas
adc
stc
push
adc
cdq
mov
mov
adc
xor
inc
mov
jns
stos
or
test
pop
icebp
dec
jmp
cmp
das
sbb
xchg
push
cmps
xchg
aaa
or
fsubr
dec
pop
push
cmc
jo
icebp
test
(bad)
sub
pop
mov
ror
cmp
sbb
in
mov
rcl
scas
pop
mov
bound
adc
inc
cmp
mov
lock
add
scas
push
sbb
jecxz
or
inc
push
sub
xchg
inc
(bad)
je
xchg
add
rcl
aaa
push
or
mov
sbb
cmp
out
pop
xchg
xor
icebp
add
sti
xlat
movs
jge
iret
push
mov
and
mov
gs
imul
test
repz
jbe
sar
and
mov
push
cmp
push
popf
addr16
add
jmp
popa
test
(bad)
xor
sbb
rcr
mov
dec
mov
jb
jne
sbb
or
(bad)
fiadd
cmp
out
mov
adc
pop
xchg
sub
mov
fild
mov
stos
dec
int3
pop
adc
xchg
mov
pop
(bad)
cwde
adc
leave
in
cmps
mov
ds
jl
call
daa
(bad)
sbb
xchg
push
int
cmp
cmp
inc
imul
in
dec
cmp
and
in
jmp
(bad)
dec
pop
or
cwde
pop
sub
movs
(bad)
loope
mov
in
mov
in
mov
push
inc
mul
arpl
or
adc
fdivp
(bad)
add
push
rcl
into
aad
cmc
bound
xchg
pop
jecxz
sub
dec
adc
frstor
in
jmp
das
gs
js
lea
fwait
call
inc
popf
or
pop
mul
scas
out
into
push
fsubr
outs
in
cli
pop
cmp
or
sub
pop
sbb
nop
adc
cmp
push
call
inc
jae
int3
pop
jle
out
(bad)
js
inc
cmp
cs
add
push
cmp
adc
jmp
mov
and
and
xor
push
pop
sub
xor
xchg
inc
punpcklbw
sub
sbb
cmp
(bad)
paddw
stos
xchg
cld
dec
mov
push
mov
jp
push
or
pop
inc
retf
push
xor
jmp
shl
and
test
jle
daa
xchg
in
and
jl
jecxz
imul
xchg
xor
rcr
push
and
jecxz
(bad)
xor
popa
inc
or
inc
in
dec
test
test
clc
push
imul
ror
sti
add
test
retf
stos
and
aad
stos
(bad)
call
ror
push
or
jge
sbb
sahf
sub
ror
(bad)
fs
mov
pop
add
mov
xor
fdiv
dec
inc
mov
loopne
mov
sbb
mov
mov
cmps
add
push
fld
hlt
lods
jmp
lahf
jns
stos
fisub
cmp
pop
fimul
adc
adc
sbb
lahf
mov
sub
and
xchg
or
and
pop
js
xchg
cwde
dec
mov
ins
outs
iret
fsub
retf
push
add
push
ret
inc
jne
inc
or
adc
xchg
enter
fwait
push
scas
add
je
mov
jbe
imul
data16
repnz
push
sub
mov
sbb
mov
cmp
push
into
cmp
inc
(bad)
fcomp
dec
jo
dec
je
pmaxub
jno
das
sti
aad
call
stos
rcr
pop
cli
or
into
cmp
(bad)
vmovdqu
mov
xlat
jecxz
sbb
jmp
xchg
mov
aas
pop
lods
xchg
scas
push
xchg
jne
mov
xchg
scas
push
or
dec
push
mov
mov
mov
into
cdq
cmp
paddb
jno
jecxz
jl
fist
xchg
stos
pushf
daa
mov
ss
mov
jl
push
dec
lea
imul
cmp
call
fwait
and
repnz
jbe
adc
sti
fcom
data16
idiv
sbb
cmp
mov
jle
(bad)
fidivr
mov
fistp
lahf
iret
test
lock
out
xor
pop
imul
adc
add
or
xor
inc
into
pop
outs
jl
jle
(bad)
fdivr
in
rcl
mov
add
dec
pop
ret
fimul
jg
jp
movs
jecxz
(bad)
(bad)
sahf
movs
popa
pop
and
outs
(bad)
icebp
and
icebp
inc
fisttp
je
sbb
out
jne
dec
add
cli
pop
rol
and
and
xor
cmp
repnz
lea
inc
cmp
stos
xchg
adc
sub
mov
xor
dec
sbb
sub
test
int3
dec
adc
inc
in
bound
mov
xor
call
(bad)
hlt
test
sub
clc
push
mov
pop
repnz
mov
retf
dec
cmp
dec
push
loopne
movs
inc
int
xlat
adc
add
cmps
into
gs
test
xchg
add
adc
(bad)
pusha
int3
sub
push
sbb
jne
(bad)
cmc
sbb
xchg
call
mov
xor
sub
mov
jge
fstp
rcl
in
pop
fdiv
inc
movs
cmp
mov
js
or
adc
cmp
adc
ret
stos
push
retf
xchg
bound
pop
and
test
dec
adc
xchg
fs
and
mov
imul
mov
xchg
add
cmp
ja
jns
mov
fbld
mov
pop
dec
sub
imul
out
sub
dec
jmp
jle
mov
fwait
push
xchg
or
xchg
sbb
jae
push
dec
mov
clc
xor
ja
call
sti
std
(bad)
pop
cdq
mov
imul
daa
bound
sub
cmp
(bad)
dec
vfrczps
or
xchg
pop
imul
jbe
and
sbb
dec
mov
cmp
repz
rcl
loope
and
pop
cmps
stc
pop
pop
ins
push
add
stos
inc
hlt
repnz
in
push
sub
sti
sbb
cmp
adc
imul
cdq
retf
stos
cmp
push
sub
mov
mov
cmp
dec
cld
(bad)
lods
ja
int3
cdq
and
mov
pop
or
out
inc
mov
cwde
into
mov
adc
loopne
repz
sbb
jge
jbe
cmp
dec
inc
push
test
push
pushf
sti
xlat
out
in
std
hlt
test
push
push
jle
ret
test
ss
jae
mov
sub
fisttp
sub
sub
repnz
or
arpl
es
call
std
outs
clc
aad
mov
in
nop
fs
fisub
jmp
jbe
xchg
pop
add
cwde
cmp
popa
xor
adc
and
jmp
lock
push
(bad)
aas
and
aaa
push
in
or
mov
and
adc
pmaddwd
mov
mov
shr
jmp
test
xchg
pop
pusha
in
pop
pop
test
lods
outs
stos
cs
sbb
jnp
lods
aam
pop
xor
cli
(bad)
int
cld
loop
dec
mov
xlat
jo
popf
arpl
(bad)
call
sbb
stos
fadd
fsubr
out
in
jne
loope
retf
popa
sbb
mov
dec
out
sub
push
cmc
xor
sbb
test
mov
daa
(bad)
adc
adc
push
and
lds
and
movs
(bad)
pop
xor
cwde
out
pop
mov
out
call
xchg
jmp
xchg
clc
fsub
or
mov
mov
mov
lahf
jne
jle
jne
pop
js
(bad)
sub
mov
cmp
not
mov
jnp
pop
leave
mov
push
mov
jmp
dec
push
fs
fsubr
stos
pop
movs
cmp
je
pop
or
xchg
jb
repz
inc
cmp
sbb
imul
out
xor
dec
cmp
add
movs
mov
xlat
cmps
retf
push
sub
sub
push
jno
lods
push
dec
cmp
ret
loopne
and
jne
mov
cmp
in
mov
repz
into
cmp
mov
mov
imul
(bad)
mov
fcom
mov
mov
mov
aas
scas
fs
test
add
repz
fisttp
mov
out
outs
xor
fistp
(bad)
in
nop
xchg
mov
mov
bound
in
mov
rol
loopne
std
pushf
xlat
cld
jle
fdivr
in
fidiv
jbe
aam
and
mov
xlat
add
out
jne
ss
sub
jns
es
loop
in
jne
retf
out
js
lea
ret
test
fdiv
mov
scas
add
movs
sbb
fidivr
movs
or
aas
jbe
jmp
adc
push
xchg
cmc
and
stos
sub
loop
arpl
(bad)
in
cmp
xchg
and
inc
push
(bad)
xlat
outs
test
xchg
jb
xchg
dec
imul
dec
jmp
(bad)
imul
scas
rcl
pop
test
add
js
adc
jnp
jge
dec
jns
lds
dec
sub
mov
adc
adc
cld
jo
das
sbb
popf
outs
outs
mov
pop
jno
or
inc
xor
sub
xor
pop
aas
and
mov
cmp
(bad)
lahf
jle
out
cmps
add
gs
ror
imul
mov
dec
jge
or
mov
sub
jecxz
mov
outs
aad
inc
ja
loop
dec
hlt
inc
push
xor
cdq
cmp
dec
add
int
or
push
jnp
adc
jns
ror
or
or
ds
sub
loope
(bad)
jns
xchg
daa
(bad)
cmps
jp
lods
or
mov
fadd
ss
mov
ins
dec
mov
push
add
fmul
cmc
gs
cmp
dec
(bad)
jmp
sub
pop
jae
imul
inc
cwde
loope
nop
ret
retf
int
sbb
ret
and
pop
cwde
mov
mov
mov
sub
(bad)
jmp
ds
xchg
pushf
out
(bad)
mov
add
and
test
call
loopne
lods
xchg
shr
(bad)
iret
into
sar
pop
mov
jecxz
in
mov
xor
cs
or
jb
cmp
popf
arpl
addr16
jge
stos
cmp
xchg
add
fmul
xchg
idiv
and
xor
inc
mov
jle
scas
cmps
or
push
dec
stc
rol
xlat
cli
fcmovnu
pop
and
fdecstp
lods
cmps
retf
push
ret
(bad)
sbb
retf
(bad)
out
sub
iret
fcomp
pop
sub
js
xchg
push
cmc
pop
loop
sub
inc
cmp
imul
mov
(bad)
xor
sbb
push
jmp
xchg
cmp
scas
lahf
pushf
and
cmps
jnp
aam
and
imul
rcr
call
call
adc
les
mov
sub
pop
stos
mov
push
mov
(bad)
hlt
(bad)
loop
push
adc
ins
lods
ds
cdq
and
(bad)
sahf
push
mov
add
jmp
and
jnp
out
adc
pop
into
aam
bound
repz
sub
not
scas
adc
(bad)
xor
or
and
lods
js
retf
mov
(bad)
repnz
ret
xchg
xchg
lea
inc
pop
push
xor
xchg
push
mov
and
test
push
lods
sub
mov
mov
shl
popf
sub
stc
sbb
fst
into
rcr
inc
mov
and
pop
lock
lds
(bad)
addr16
ret
(bad)
test
inc
jg
std
cmp
mov
xchg
xor
jmp
es
sbb
ret
jmp
inc
jecxz
xor
inc
push
push
or
add
xchg
stos
xor
daa
pop
mov
pushf
into
(bad)
mov
shl
stos
stc
adc
add
mov
pop
lds
test
rcl
xor
out
xchg
jle
xor
jmp
mov
(bad)
ja
mov
aad
add
inc
adc
adc
ins
stos
push
dec
movs
out
in
inc
inc
add
(bad)
adc
adc
(bad)
pop
cmps
ret
mov
fdiv
mov
in
cmp
or
sbb
mov
in
idiv
(bad)
add
outs
xor
pusha
jne
adc
cmp
or
bound
fbld
bound
pop
xchg
daa
js
or
leave
lods
pop
icebp
jnp
stos
and
mov
push
dec
out
cs
shl
in
aaa
cmp
lahf
test
(bad)
push
and
out
(bad)
outs
mov
or
sbb
or
retf
movs
mov
add
and
dec
mov
push
push
push
xchg
sahf
jne
jo
ror
popf
and
shl
push
jp
jp
mov
popa
ret
fcom
mov
mov
jle
mov
xor
mov
scas
jl
xchg
ror
enter
dec
xchg
adc
mov
jle
sub
sti
jns
inc
mov
fmulp
retf
repz
xor
cmp
xchg
jge
ret
out
mov
cli
fst
(bad)
pop
sbb
sti
rol
inc
lods
xchg
mov
pop
adc
(bad)
mov
es
cwde
ror
enter
sbb
loope
push
(bad)
shr
mov
movs
mov
aad
outs
and
pop
xor
sbb
in
mov
xchg
inc
and
dec
xchg
and
adc
arpl
les
cmp
mov
mov
cmp
rcl
inc
lods
sbb
xchg
nop
out
mov
(bad)
ins
mov
ds
movs
les
aam
lock
pop
movs
mov
cwde
xor
push
sti
test
in
das
aad
adc
cli
mov
dec
sbb
push
xchg
mov
sub
push
xor
xchg
fcom
leave
add
cmps
sbb
movs
xchg
dec
or
sbb
(bad)
inc
adc
arpl
cmps
stos
aaa
inc
xchg
pop
lods
mov
add
mov
dec
mov
fiadd
cld
outs
push
mov
cmp
sub
inc
cs
mov
xchg
or
push
add
dec
xor
fsub
push
mov
sub
adc
pop
xor
add
in
pop
sub
jmp
sbb
dec
arpl
test
inc
xor
push
pop
lods
sub
test
jno
dec
out
mov
stc
mov
xlat
or
pop
xor
(bad)
icebp
out
dec
sti
lahf
ja
sub
arpl
mov
rcl
(bad)
pop
xor
mov
int3
dec
adc
ds
push
push
sub
test
frstor
test
mov
adc
inc
adc
in
add
jl
xchg
xor
popf
loop
stc
push
fbld
xor
push
arpl
in
jl
js
add
das
xor
clc
xchg
cmps
xchg
jmp
pop
add
stos
or
(bad)
pop
adc
add
shl
jp
push
repz
shl
(bad)
sub
jge
xchg
push
mul
neg
pusha
sbb
mov
arpl
fmul
dec
data16
retf
sbb
sti
repnz
and
jp
out
push
ret
jae
nop
retf
lahf
jb
xchg
add
daa
sahf
test
pushf
iret
inc
clc
popa
stos
adc
out
ins
retf
arpl
sti
sbb
call
sbb
cld
push
nop
jl
je
shl
jne
movs
arpl
add
outs
push
arpl
xor
cmps
jno
push
add
stos
cmc
jbe
retf
sub
test
jnp
mov
inc
test
xor
xchg
in
and
ins
ins
sub
popf
out
sub
leave
daa
xchg
xchg
jg
pop
pop
xchg
scas
mov
les
pop
jge
add
pop
imul
mov
idiv
ja
dec
jae
push
stos
shl
rcl
xchg
sti
lea
repz
or
retf
inc
daa
lods
nop
adc
mov
mov
adc
push
movs
jmp
jb
adc
lea
ror
mov
cdq
int
sub
sbb
js
and
cmps
ror
test
mov
test
daa
inc
xor
in
outs
scas
fstp
movs
mov
clc
pop
dec
mov
dec
adc
aad
push
cmp
push
fisub
mov
pusha
test
pop
adc
mov
or
(bad)
jmp
push
jle
jecxz
rcr
adc
jp
inc
xchg
jae
scas
sub
repnz
into
add
pop
cmp
pop
push
inc
pushf
retf
ret
imul
call
or
push
gs
and
int
pop
sbb
jmp
mov
in
iret
cmps
test
xchg
cmp
test
repz
std
inc
inc
inc
fwait
in
cmp
xlat
cmps
lds
fadd
bound
retf
out
jns
add
push
out
xchg
inc
(bad)
gs
xor
rcr
push
mov
adc
jbe
push
lahf
xor
pop
inc
sahf
scas
jg
mov
repz
shl
mov
lds
cmp
dec
dec
jno
mov
pop
lock
push
cmp
mov
scas
lods
lods
imul
dec
add
lds
(bad)
enter
sub
sar
cmps
dec
inc
clc
xor
bound
test
and
mov
jbe
(bad)
lds
pushf
test
or
(bad)
jle
movs
inc
cwde
lods
add
mov
xor
mov
sbb
sbb
bound
fild
into
pop
push
dec
xor
jmp
xchg
inc
and
in
and
aam
sti
cli
lods
sbb
lds
and
and
inc
sub
mov
rcr
ins
and
in
or
and
bound
imul
dec
cmps
stos
jge
mov
jns
call
jnp
fsub
jmp
sub
cmps
and
stos
and
jno
xchg
shl
mov
sub
sub
cmp
jp
jno
ja
dec
rcr
test
dec
and
ficomp
sub
ret
daa
daa
mov
mov
add
inc
ins
push
xchg
daa
sbb
xchg
mov
enter
daa
push
test
cmp
psubw
or
pushf
push
inc
push
out
cmp
mov
ins
retf
add
ret
inc
movs
arpl
and
or
gs
addr16
dec
fsub
sbb
mov
mov
pop
mov
push
ret
cmp
xor
mov
xor
or
cwde
xchg
adc
mov
xchg
lahf
es
test
fbld
lock
push
retf
or
stc
into
or
dec
pop
mov
mov
in
lods
sar
pushf
repnz
and
push
ss
cli
(bad)
faddp
loop
imul
pop
(bad)
bound
dec
cmp
push
retf
in
outs
jmp
jbe
movs
(bad)
outs
push
loope
nop
mov
cmc
push
mov
sub
in
and
aad
sub
cmp
cs
mov
jo
pushf
jno
sbb
xchg
jnp
sub
loope
xchg
out
sbb
sub
xchg
adc
pop
outs
in
in
xor
movs
inc
fcmovu
adc
push
(bad)
neg
cmps
and
sub
stc
jg
or
and
mov
ror
and
cmp
inc
(bad)
stc
mov
xchg
mov
pop
int
xlat
outs
pop
xor
pop
xlat
call
or
ret
and
push
cmps
mov
out
cwde
mov
pusha
cld
cmps
clc
jl
sub
outs
cmc
(bad)
and
loop
mov
sub
clc
cmps
mov
xor
test
not
ficomp
inc
sub
cmp
cmps
pop
jl
adc
les
inc
hlt
mov
sub
pop
imul
mov
inc
inc
inc
push
mov
lods
loop
fidiv
or
arpl
xchg
add
mov
xchg
or
xchg
jp
dec
fistp
push
dec
inc
dec
mov
sbb
sbb
addr16
fs
cmps
arpl
test
push
cdq
(bad)
sbb
out
pop
sbb
mov
fidivr
xchg
mov
imul
or
adc
add
adc
nop
sti
mov
sub
dec
shl
mov
xchg
jns
fild
add
jle
mov
push
neg
mov
mov
jmp
cmp
pop
push
mov
xchg
xor
mov
aas
cmc
and
shl
call
jp
jne
pop
or
adc
bound
fldenv
imul
xchg
addr16
jbe
adc
(bad)
cdq
dec
outs
das
das
rol
fbstp
push
ds
sahf
add
jecxz
(bad)
jo
pop
and
lods
popa
ror
xchg
ins
xor
sub
cmps
jmp
shl
mov
popf
ja
(bad)
call
popa
fadd
mov
jmp
sub
imul
push
sbb
stc
pop
jnp
or
call
push
pop
jae
call
dec
pop
cmc
and
xchg
in
int3
sub
mov
mov
sbb
sub
jmp
or
xchg
mov
fdiv
xchg
ror
xchg
mov
popa
cmp
push
pop
bsr
sub
fnstenv
outs
cmps
xor
mov
sbb
sub
sahf
(bad)
cmps
mov
adc
pop
push
jno
je
mov
inc
mov
fwait
inc
les
xchg
shl
mov
push
xor
xor
into
and
pop
ror
push
iret
test
xchg
or
mov
rcr
adc
xor
and
mov
test
xchg
mov
xlat
outs
inc
das
push
sbb
clc
outs
or
leave
fidivr
shl
loop
sub
jge
and
jge
fnstsw
xchg
mov
mov
test
jae
push
inc
scas
test
sub
mov
push
xchg
jle
fdiv
popf
hlt
jnp
mov
mov
add
push
or
inc
in
inc
cmp
sbb
retf
mul
and
inc
or
pop
adc
test
push
inc
mov
call
lock
sbb
or
mov
and
daa
repz
mov
cmp
jecxz
ficomp
in
inc
fistp
ds
lods
aad
sahf
enter
and
pop
scas
aaa
dec
loopne
imul
fwait
stos
sbb
cmp
jne
adc
or
int
xor
js
shr
push
frstor
scas
adc
or
cmps
mov
inc
cmp
hlt
and
jg
push
sub
sbb
push
adc
loope
adc
aad
(bad)
dec
popf
push
enter
and
lock
inc
jge
sbb
call
icebp
sub
adc
jmp
mov
mov
push
mov
std
repnz
jge
je
dec
mov
or
in
(bad)
cld
sub
das
add
jns
mov
loopne
ins
sbb
or
int
mov
call
outs
sub
ins
pop
jne
mov
out
out
loop
inc
adc
sbb
shl
out
je
shl
call
stc
mov
dec
int
dec
(bad)
xor
outs
pop
jl
sub
js
and
mov
fdivr
jns
and
mov
or
mov
aaa
jle
shl
imul
jae
dec
inc
shr
icebp
ja
ins
enter
and
mov
push
cwde
fsubp
jmp
xchg
sub
or
xor
js
inc
and
leave
mov
pusha
cmp
sbb
mov
clc
test
scas
push
jo
rol
jl
push
imul
push
fwait
call
jl
or
mov
jns
push
jne
test
and
sbb
jae
adc
xchg
push
pop
pop
loopne
jecxz
fidivr
mov
jnp
repnz
sbb
pop
push
or
cmc
xor
in
sti
inc
stos
div
idiv
mov
jecxz
pop
mov
mov
pop
adc
inc
inc
movs
push
pop
adc
sbb
jne
mov
dec
lds
or
ja
fdiv
inc
mov
hlt
mov
or
mov
push
retf
adc
shr
repz
or
push
test
sub
push
xchg
push
pop
xlat
and
mov
fs
je
icebp
sub
mov
cmps
pop
mov
rcr
jns
pop
shl
movs
mov
sub
cmp
inc
or
sub
aad
(bad)
arpl
test
jle
test
les
test
add
call
mov
jne
mov
rol
mov
daa
inc
pop
(bad)
fnstsw
sbb
repz
adc
mov
sbb
sub
enter
les
stos
fdiv
and
push
jb
pop
xchg
pop
push
rol
mov
std
and
add
cs
xchg
add
loope
daa
sbb
jo
lea
jb
(bad)
dec
xchg
(bad)
jne
cld
or
mov
stc
shl
lods
int
scas
lahf
sub
and
int3
retf
cmp
jp
push
sti
mov
mov
call
scas
dec
sub
imul
add
sahf
mov
xor
jno
sbb
je
mov
gs
inc
addr16
sbb
xchg
cmp
sti
je
fwait
enter
scas
xchg
mov
sub
mov
mov
dec
fiadd
adc
lods
pop
(bad)
dec
pop
das
ret
sub
xor
sbb
ror
mov
dec
test
push
xchg
jno
mov
dec
lea
sbb
xchg
or
xor
push
mov
fild
mov
leave
lock
mov
jne
cmp
fisttp
mov
mov
fsubr
sub
jecxz
sbb
inc
jp
adc
pop
lea
inc
push
and
push
cs
call
lds
sbb
ror
xchg
inc
imul
sub
call
push
icebp
mov
xchg
add
mov
outs
ja
dec
je
lds
shl
mov
pop
mov
push
pop
popf
int
movs
pop
mov
xchg
push
cmp
repz
inc
push
dec
and
cli
pop
(bad)
dec
es
xchg
adc
ds
jb
add
dec
xchg
in
jne
cs
cmps
mov
mov
inc
jp
cdq
ss
dec
cmps
int3
push
jmp
lea
out
mov
or
cmp
nop
cmc
inc
mov
and
fmul
lahf
push
in
sub
movq
cli
sti
xchg
call
cdq
cmp
lds
push
fwait
push
sub
inc
mov
mov
and
pop
mov
and
nop
jo
inc
call
inc
je
sub
sub
inc
(bad)
fisub
sub
inc
lock
shl
not
imul
cmps
xchg
fs
cmp
and
mov
cdq
js
jmp
(bad)
inc
sub
add
sub
push
lock
xchg
loop
mov
mov
test
aam
mov
add
cwde
cmp
leave
jb
add
stos
daa
jge
imul
fstp
fidiv
pop
movs
mov
sbb
add
cmp
sbb
repz
sub
dec
fld
mov
jne
xchg
cwde
(bad)
jp
mov
xchg
fst
shl
out
les
out
stos
pop
sub
je
mov
xor
cld
sbb
or
stos
jp
aad
test
and
in
fwait
jge
ins
loop
iret
jbe
cmp
adc
xor
cdq
outs
pop
stos
xor
adc
push
sub
hlt
aad
pop
int
out
sub
adc
aas
mov
loopne
cli
dec
and
neg
dec
clc
enter
mov
or
push
pop
lahf
int
arpl
mov
out
mov
push
pushf
out
pop
test
mov
add
mov
mov
inc
lock
movs
pop
xor
dec
rol
enter
repnz
leave
(bad)
adc
outs
and
or
loope
dec
adc
lds
cmc
xchg
sub
pop
cmp
pop
add
loope
pop
test
cmp
sbb
add
mov
not
or
and
sbb
pop
daa
and
(bad)
jmp
jmp
jle
or
(bad)
adc
(bad)
test
mov
in
arpl
xor
addr16
push
pop
mov
xor
out
out
es
sti
scas
pop
fldcw
jmp
in
out
sbb
cmp
int
cli
xchg
hlt
nop
push
jmp
dec
cmp
xchg
mov
jge
pushf
js
cmp
jmp
sub
adc
jle
xchg
or
xor
pop
dec
jae
xlat
into
stos
rcl
in
aad
mov
(bad)
jbe
cwde
sub
sbb
iret
cli
repz
call
add
aam
xor
pushf
jl
mov
xor
or
jb
xor
bound
xchg
fcmovu
dec
ret
stc
bound
int
ss
retf
jno
outs
inc
pop
or
add
jl
mov
cmp
fadd
test
mov
cmp
cmc
mov
and
jmp
pop
mov
mov
xor
pop
test
mov
mov
mov
dec
push
xchg
push
add
jne
or
out
into
iret
mov
(bad)
sub
std
mov
mov
push
shr
aaa
cmp
out
inc
arpl
and
add
repnz
sbb
xchg
xchg
xlat
or
ret
or
fmul
jb
mov
ja
push
xor
ds
scas
fcomp
hlt
adc
jg
cld
les
jmp
fistp
shr
push
inc
jg
xlat
pop
push
add
xchg
push
and
loope
clc
hlt
cmp
pop
mov
cmp
sub
jmp
jecxz
ins
lahf
stos
jmp
add
cmps
cmp
retf
push
(bad)
cmp
sbb
ins
mov
(bad)
mov
sub
ins
test
test
inc
bound
popa
and
mov
jb
add
xor
jle
jecxz
jp
fcomp
fsub
or
xor
jl
mov
not
mov
outs
into
rol
lock
mov
sub
sub
xchg
je
imul
adc
mov
adc
dec
jo
push
ss
mov
test
and
imul
test
(bad)
in
out
sub
push
rcr
sar
cmp
jp
mov
cld
sub
pop
xchg
je
dec
sbb
sub
xchg
dec
(bad)
outs
mov
xchg
mov
movs
in
dec
sbb
jge
fs
push
jb
mov
inc
or
dec
mov
or
shld
sub
add
mov
pop
repz
add
mov
scas
imul
push
cmc
sub
ds
adc
inc
sbb
mov
cld
sahf
cmp
push
xchg
inc
adc
leave
xchg
mov
xchg
retf
jne
mov
js
dec
mov
jl
(bad)
and
movs
push
and
shl
repnz
push
in
sbb
push
aaa
movs
jp
jg
cmp
push
mov
int3
mov
das
sub
jmp
xchg
js
mov
cmp
stos
(bad)
movs
lods
mov
and
rol
push
inc
jmp
or
sbb
or
in
lahf
outs
sbb
rep
cmp
xor
lock
push
mov
inc
(bad)
mov
arpl
jp
adc
adc
idiv
call
push
test
cmp
pop
retf
cmp
or
outs
in
aas
in
loop
add
pushf
pushf
test
ror
repz
and
pop
push
push
cdq
jns
mov
popf
sti
sub
cmp
pop
(bad)
adc
bound
sar
sti
xor
into
push
int
and
fucomi
loope
jmp
das
inc
jb
pop
or
cli
and
xchg
cmp
lods
mov
je
data16
into
into
cmp
test
and
jge
add
mov
inc
fadd
and
mov
mov
lds
pop
nop
pop
movs
movs
scas
dec
iret
imul
ds
aam
mov
or
push
mov
repnz
sbb
pop
push
or
dec
mov
pusha
jo
pusha
popa
pop
jmp
sub
cmp
mov
or
popa
ds
es
inc
repz
dec
inc
and
ret
aam
add
and
(bad)
repz
aad
adc
mov
sbb
adc
and
fidiv
and
leave
add
inc
fcomp
or
cdq
and
fld
push
lods
dec
sub
or
sbb
out
xor
xchg
sbb
or
fisttp
sub
fcmovbe
or
loop
fwait
push
or
gs
cmp
sti
int
mov
scas
outs
inc
call
sub
pusha
jbe
and
mov
test
repz
lea
stos
jne
jg
adc
cmp
mov
cmp
das
add
cld
pusha
push
ja
pop
xchg
cmp
pop
je
jg
push
jg
inc
jne
mov
aas
es
(bad)
into
cmps
int3
jae
jge
sub
(bad)
adc
(bad)
xlat
int
mov
push
xchg
mov
call
pop
cwde
sub
or
xchg
leave
lea
and
pushf
sbb
mov
arpl
scas
in
test
sbb
or
pop
mov
cmp
ficomp
out
cli
pop
les
lods
(bad)
or
cwde
adc
xchg
aaa
and
xchg
adc
mov
lock
or
jp
(bad)
mov
push
jb
hlt
xchg
inc
(bad)
das
scas
cmp
hlt
movs
sahf
inc
scas
adc
sub
xchg
xchg
and
push
ss
rol
sub
lods
push
xchg
test
call
ror
sbb
pop
add
leave
mov
mov
jecxz
pop
jl
sub
mov
mov
les
mov
and
and
mov
jno
stos
rol
fild
int
stos
sub
(bad)
pop
add
xlat
adc
jmp
add
repnz
in
add
std
jo
mov
fbstp
rcr
cli
mov
stos
loop
dec
cmc
pop
push
jae
(bad)
lock
sbb
adc
int
test
paddusw
mov
cmps
adc
aad
sbb
ficom
ins
sahf
dec
jo
lods
sbb
xchg
int3
mov
mov
popf
loop
jne
xlat
jae
loopne
mov
mov
xchg
push
pop
and
and
es
minps
sub
(bad)
lods
sub
adc
xchg
push
sub
fst
inc
xchg
mov
push
out
cmp
mov
ins
add
std
sub
push
fmul
adc
xchg
or
cdq
jae
frstor
arpl
hlt
push
add
out
inc
out
push
and
lock
test
into
shr
push
jne
add
pusha
rcl
test
push
loop
in
mov
mov
pop
and
pop
xchg
lds
dec
lock
in
fst
or
jmp
call
out
mov
int3
js
sub
jne
cmps
sub
gs
fcomp
test
sti
mov
push
test
push
mov
lds
dec
cwde
jge
mov
inc
mov
xor
add
cs
dec
cmp
popa
popf
add
loope
push
in
gs
(bad)
rol
shl
adc
mov
(bad)
stc
jno
sbb
mov
adc
mov
fwait
mov
test
dec
and
and
push
push
push
sub
cmp
fdiv
addr16
cmp
bound
sub
fdiv
lods
xor
inc
jle
sub
mov
push
inc
mov
sbb
jmp
lea
and
call
in
jl
arpl
dec
and
add
arpl
enter
addr16
fcomp
and
sub
push
jno
jmp
xlat
pushf
push
pop
int3
mov
add
test
test
fs
add
mov
shl
add
push
cmp
jno
adc
aas
mov
call
jno
test
icebp
in
mov
and
call
mov
aad
inc
(bad)
outs
loopne
cld
ret
ret
inc
mov
xlat
jmp
loopne
ss
push
xchg
mov
push
pop
shr
test
mov
mov
pop
jnp
inc
or
cmp
rep
or
pop
xor
add
or
cmp
ins
push
xor
fcmovne
iret
jl
enter
shr
push
jmp
ja
(bad)
or
in
sub
test
inc
ret
loopne
sbb
mov
shl
fistp
pop
mov
sahf
mov
enter
or
adc
add
and
pop
xchg
adc
stos
inc
mov
in
lea
cmps
sbb
and
or
movs
adc
mov
fucom
sti
outs
and
jne
adc
loopne
inc
jmp
cmp
neg
and
lods
sahf
sub
dec
outs
pop
popa
ins
xor
aad
inc
lods
mov
mov
loop
popf
or
inc
mov
test
jns
dec
sub
sub
xor
adc
nop
and
repnz
or
cdq
pop
rcr
retf
int3
pop
jle
push
cmc
aas
xchg
rcl
scas
push
pop
pop
je
mov
push
shl
rol
push
jp
ds
and
pushf
ja
popa
push
stos
test
inc
jecxz
hlt
repnz
xor
cmp
jmp
xor
dec
xchg
out
jb
pop
outs
stos
dec
pop
mov
fist
sub
xor
jns
pop
inc
pop
and
lods
lds
sub
jo
jle
sahf
ins
cmps
int3
movlps
iret
cli
mov
retf
xor
ret
xchg
ds
sbb
pop
cmps
sahf
dec
push
adc
push
aad
jnp
retf
sbb
add
stos
test
add
cmp
or
imul
loope
leave
mov
inc
pop
pop
mov
(bad)
in
(bad)
daa
jne
shl
leave
push
(bad)
cmp
cs
into
aaa
add
pop
mov
retf
sbb
aad
jmp
cmp
pushf
and
xchg
push
movs
mov
mov
shr
imul
retf
(bad)
dec
stos
outs
jle
pop
fld
jnp
xchg
or
aad
in
xor
cmp
mov
nop
es
fcomp
outs
xor
in
or
in
mov
mov
push
sbb
mov
js
inc
xor
cmp
in
das
or
mov
jg
stos
sbb
aas
cmc
cmps
inc
rol
sti
sbb
pop
jle
stc
mov
jge
push
repz
icebp
push
dec
xor
mov
sub
or
movs
shr
adc
and
xor
mov
push
sub
jae
fcmovne
retf
fwait
pop
pusha
jmp
imul
ds
cmp
cld
outs
(bad)
fs
jmp
jns
xchg
js
loopne
xor
mov
pushf
xchg
scas
and
mov
pop
in
cmps
mov
xchg
xlat
ja
scas
add
popa
in
or
bound
push
sar
clc
sti
dec
pop
pop
or
sub
sub
data16
mov
mov
xlat
pop
out
fsubrp
sbb
mov
das
push
add
sbb
mov
popa
mov
and
inc
xchg
lds
cld
nop
mov
pop
dec
iret
ss
cdq
push
rol
mov
mov
sub
xor
outs
pop
(bad)
out
ins
adc
push
in
leave
mov
push
ret
sub
bswap
lods
or
outs
xor
mov
ret
push
or
test
ret
retf
fdivr
stos
inc
ret
std
dec
add
ror
fld
imul
iret
iret
sbb
cmps
aam
out
(bad)
sbb
pop
sbb
add
mov
jl
cs
sub
and
push
sub
inc
mov
test
shl
dec
xchg
jl
in
dec
lods
pop
xchg
std
xlat
cmp
inc
or
push
sub
xor
out
adc
jne
or
jge
mov
jnp
outs
(bad)
adc
dec
jmp
rcl
movaps
out
sbb
test
std
xor
movs
xor
mov
push
pushf
jle
sar
test
shl
clc
in
fcom
ins
mov
push
stos
test
fimul
movs
xor
xchg
arpl
or
sbb
sub
test
inc
xor
jae
lock
(bad)
loop
mul
inc
clc
cmp
div
in
xchg
push
or
sub
xor
pushf
or
pop
(bad)
pusha
retf
adc
push
mov
imul
jmp
enter
mov
inc
mov
ins
repnz
mov
cmp
mov
ins
mov
or
and
bswap
in
mov
cmp
dec
cmp
lds
cmp
in
ret
sub
lea
add
and
bound
stc
std
or
sbb
out
fldenv
xor
mov
ins
and
jne
loop
inc
lods
test
inc
jmp
fsub
arpl
inc
mov
repnz
les
retf
adc
inc
test
in
push
jne
jno
sub
xor
loopne
mov
mov
sub
aaa
shl
jnp
rcr
inc
sbb
test
popa
pop
outs
mov
mov
loopne
ins
push
pop
lods
pop
nop
repz
xor
xor
push
jle
hlt
loop
fbld
adc
xchg
push
test
inc
shl
jl
jecxz
jp
or
stos
jg
enter
fyl2xp1
imul
(bad)
cdq
ret
add
fs
lock
cmp
out
and
jo
sti
das
enter
aam
rcl
jle
sbb
in
data16
jmp
add
ins
sbb
js
mov
movs
scas
loopne
stos
loopne
sbb
fistp
inc
js
dec
jmp
xchg
dec
jecxz
mov
xchg
popa
int
mov
cmp
push
xor
test
mov
jbe
or
jb
inc
sti
fist
cmp
adc
popa
or
jne
mov
sub
aaa
bnd
(bad)
fiadd
dec
xchg
cmp
xor
xchg
add
shr
mov
lods
stc
pop
jae
cmps
xchg
inc
and
in
adc
mov
sbb
inc
jb
shr
fidivr
into
sub
xor
jl
jmp
push
retf
bound
pop
xchg
or
cwde
push
xchg
ins
push
sub
xor
dec
or
(bad)
cmps
and
(bad)
bound
jbe
hlt
mov
adc
icebp
loope
lock
dec
xor
mov
jno
fs
xchg
dec
test
stc
scas
(bad)
test
daa
cmp
mov
mov
cmp
mul
call
or
shl
mov
dec
ss
ret
push
push
add
push
mov
mov
or
cmp
(bad)
sbb
in
mov
inc
test
mov
dec
sar
xor
dec
adc
sbb
cdq
inc
ret
jae
retf
jmp
dec
neg
addr16
enter
add
mov
adc
inc
cmpps
dec
jl
dec
push
fdivr
loopne
sub
popf
aas
sbb
cs
lods
mov
pop
jmp
or
and
xchg
xchg
inc
(bad)
lods
xchg
mov
or
add
mov
sbb
aad
les
xchg
pop
in
(bad)
nop
fsubr
fwait
gs
cmp
xchg
lahf
add
push
dec
xchg
mov
ss
jnp
ficomp
push
push
dec
cmp
xchg
rcl
push
dec
cmc
mov
call
(bad)
cmp
les
nop
in
in
push
mov
sbb
fist
inc
dec
adc
mov
aas
mov
dec
push
fwait
(bad)
cmp
mov
mov
ror
out
jno
xor
add
xchg
fist
stos
sbb
inc
cwde
add
popf
pop
push
fcomp
pop
mov
xor
pop
rcr
in
fisttp
pop
es
aad
test
adc
push
inc
outs
inc
inc
ss
xor
xchg
test
vpshld
sub
push
fadd
pop
sub
idiv
mov
stos
xor
and
sbb
(bad)
outs
int3
mov
int
push
(bad)
or
and
mov
cmc
pop
imul
addr16
push
lock
shl
push
inc
jge
shr
add
js
push
push
shl
rcl
push
mov
adc
jo
cmp
mov
add
xchg
push
adc
sub
clc
popa
lds
stos
pushf
or
cmc
push
stos
cmp
je
repnz
jecxz
cwde
inc
test
xchg
bound
mov
sbb
imul
aad
movs
in
xor
push
cwde
jne
je
push
jecxz
nop
call
jge
fstp
repz
sar
call
retf
jp
(bad)
xlat
push
scas
gs
rcl
mov
pop
pop
and
cmovno
test
popa
leave
push
out
dec
mov
mov
cmp
sbb
xor
cmp
inc
enter
(bad)
jge
xchg
stc
push
jo
into
and
mov
sub
cmp
or
repnz
test
(bad)
popf
cmp
jcxz
repnz
push
push
cmp
ss
mov
(bad)
jle
(bad)
popf
movs
mov
call
mov
pop
retf
pop
sahf
(bad)
jmpw
sbb
mov
or
sar
ror
fs
sbb
or
scas
cdq
mov
cwde
xor
test
ins
adc
ds
scas
out
sub
mov
fs
mov
data16
mov
adc
push
xor
les
(bad)
aam
cli
add
loope
fst
add
pop
lock
bound
mov
aaa
lds
or
leave
push
cmp
sub
movs
mov
shr
jg
jne
xchg
cli
jmp
sbb
dec
cmp
leave
mov
push
pop
dec
cmc
mov
mov
popf
jge
test
outs
mov
stc
add
pop
and
sub
js
and
push
std
inc
mov
ins
or
inc
not
ins
cmp
int3
xor
in
inc
int3
xor
mov
adc
rol
xor
pop
ret
push
(bad)
fimul
data16
pop
dec
cmp
shr
movs
inc
sbb
inc
xor
and
push
imul
call
sbb
and
lods
push
dec
idiv
xchg
out
hlt
js
(bad)
push
xor
out
inc
mov
das
adc
adc
imul
imul
push
out
inc
imul
inc
scas
dec
jno
jno
add
adc
hlt
out
movs
lods
les
pop
cld
ins
xor
in
inc
(bad)
or
out
push
(bad)
inc
jecxz
icebp
aam
les
mov
mov
or
out
pusha
sub
pop
or
cmp
mov
mov
pop
cwde
aad
aam
retf
xchg
out
in
dec
adc
sbb
fwait
movs
shl
or
mov
sbb
push
adc
out
xor
xor
hlt
push
fstp
xor
je
in
mov
rol
add
nop
xor
and
pop
pop
jno
rcl
nop
dec
or
jns
jne
push
xor
mov
mov
loopne
mov
mov
mov
ins
es
add
ins
xor
xchg
test
push
dec
jmp
dec
sti
xchg
push
add
push
inc
mov
mov
aam
dec
int
sar
jno
aam
sub
jl
or
cmp
jle
inc
and
loop
dec
add
mov
test
lahf
xchg
test
mov
dec
(bad)
or
adc
xchg
jmp
mov
sbb
adc
sub
dec
push
cmps
stos
iret
and
addr16
xchg
hlt
pop
or
test
push
leave
cmp
lods
cld
adc
aaa
(bad)
mov
dec
retf
(bad)
loopne
ss
out
mov
sub
cmp
and
sbb
mov
fild
xchg
xor
sbb
hlt
or
xor
jne
mov
test
not
lea
xchg
sub
mov
dec
xor
ja
out
xchg
mov
mov
sbb
add
xor
cmc
jle
jnp
mov
mov
enter
jp
mov
xor
mov
mov
aas
test
pop
(bad)
je
sar
in
(bad)
mov
pop
jb
mov
adc
jae
je
lock
ja
fld
and
xchg
and
and
push
into
jns
inc
push
inc
div
pusha
push
adc
xlat
cmps
inc
or
sar
adc
pop
push
dec
adc
mov
dec
sbb
cmp
jecxz
push
mov
xor
mov
mov
loop
mov
adc
js
inc
call
ror
inc
push
adc
fmul
and
clc
movs
dec
xchg
jecxz
je
test
and
les
les
jno
cmp
(bad)
popa
xchg
sbb
clc
fcomp
push
jge
push
retf
jmp
xchg
sbb
test
shl
adc
push
cmc
in
or
(bad)
or
cmp
sbb
retf
arpl
rol
or
pusha
fist
mov
enter
lahf
je
dec
push
jae
push
mov
inc
mov
imul
fadd
fidivr
test
xchg
ins
jb
cmp
sub
inc
mov
jne
mov
fsubp
push
xor
push
test
mov
cmp
cmp
dec
stos
std
inc
das
jl
inc
dec
shl
leave
in
adc
jmp
pop
adc
push
mov
aas
jmp
jns
call
test
icebp
dec
jp
cmp
lds
mov
mov
xor
xchg
sbb
test
jno
daa
jno
ror
repnz
sub
cmps
fwait
add
dec
and
stos
dec
cmp
push
mov
ror
cmp
ret
and
sbb
jg
push
loopne
mov
cwde
test
mov
(bad)
out
or
push
inc
int3
pop
fdiv
loopne
jge
mov
xchg
xor
dec
pop
leave
stc
ud1
cwde
in
test
jmp
cmp
lea
mov
mov
xor
jmp
sbb
outs
cmovno
jnp
jno
shl
lds
jg
fild
movs
push
and
daa
fmul
push
sbb
scas
call
pop
popf
(bad)
adc
std
adc
xchg
(bad)
mov
lahf
sbb
out
xlat
pop
sbb
mov
xchg
xchg
frstpm(287
clc
adc
bound
and
inc
cdq
sbb
fiadd
xor
das
pop
ret
sub
dec
pop
xlat
scas
cmp
int3
out
ret
sub
xor
jbe
repnz
sti
sbb
xor
xchg
and
scas
pop
arpl
and
pop
in
and
call
sahf
clc
test
mov
cmovae
push
push
push
iret
cmp
pop
or
push
dec
idiv
fwait
pop
jl
cld
jb
aad
rcr
(bad)
rcr
test
mov
mov
aas
push
and
mov
push
cmp
xchg
movs
and
mov
out
jmp
dec
ins
cdq
(bad)
jl
stos
jmp
fcmovb
cmp
movs
in
xchg
sbb
adc
cmp
sub
jmp
dec
adc
shl
cmps
or
add
xchg
add
dec
sbb
and
xor
arpl
or
aam
test
jle
sti
icebp
in
outs
cmp
(bad)
fstp
pop
jg
(bad)
sub
mov
ss
mov
pop
and
lahf
fcmovu
pop
lods
int
inc
arpl
jle
jmpw
and
add
int
mov
repz
(bad)
jecxz
ret
sahf
cmp
out
dec
retf
push
sbb
cmp
mov
pop
inc
popa
add
jle
cdq
aad
cwde
out
add
push
cwde
inc
and
inc
pop
sar
mov
inc
add
in
call
call
arpl
pop
test
add
iret
add
sbb
adc
mov
mov
sbb
dec
outs
pop
lock
sbb
icebp
(bad)
cwde
imul
mov
lods
ror
xor
neg
add
or
mov
(bad)
dec
xor
mov
cmp
add
xlat
in
push
push
inc
aaa
xchg
or
cmps
sub
mov
sahf
inc
clc
mov
dec
jne
pop
jno
daa
mov
pop
inc
int3
cmp
call
ds
xor
fs
jmp
xor
cdq
retf
inc
loopne
pop
clc
dec
hlt
xor
cmps
or
lahf
mov
pop
mov
movs
mov
lds
ins
mov
icebp
mov
xor
push
(bad)
cwde
push
adc
lods
cmp
xchg
jb
push
xchg
or
adc
dec
popf
push
jp
mov
gs
mov
pusha
retf
in
movntq
mov
popf
pop
ss
cwde
pop
call
popf
rcr
cmp
loopne
shl
lahf
jmp
or
xchg
ror
retf
popa
push
sar
(bad)
mov
sbb
xlat
call
in
(bad)
lahf
dec
outs
xor
lahf
fnstsw
icebp
pop
fxch
(bad)
scas
cdq
mov
pop
test
dec
cmp
or
xchg
mov
mov
xchg
jne
int
cdq
jne
inc
push
jmp
nop
aaa
repnz
cmp
pop
(bad)
scas
mov
iret
retf
mov
pusha
lock
and
cmp
test
or
enter
adc
(bad)
lock
loope
bswap
mov
fisub
xchg
mov
pop
pop
ins
lds
js
lahf
out
sahf
push
inc
jg
jno
icebp
cmp
cmp
lahf
mov
mov
pushf
push
lods
dec
sti
lds
nop
ret
lods
loop
cmp
jge
mov
popf
lods
fstp
test
dec
mov
repz
xchg
mov
push
call
fld
cmp
ins
shl
push
or
mov
sub
test
repz
dec
cmp
cmp
push
test
pop
push
jbe
sahf
cwde
outs
adc
inc
sub
sti
xchg
or
rol
or
aad
jno
cdq
sbb
nop
rol
jo
ds
jmp
stos
fwait
sti
aad
pop
cdq
enter
jns
xlat
out
mov
shr
sub
ss
or
push
cmp
sub
xor
xchg
pop
jmp
mov
cmp
in
mov
lds
imul
fwait
xor
and
mov
std
xor
movs
inc
cmp
xor
mov
sbb
retf
dec
inc
fmul
repnz
jne
ret
cld
sub
mov
push
into
xchg
add
add
(bad)
lds
in
mov
in
fdivr
add
shl
mov
std
mov
popa
sti
movs
in
push
xchg
fimul
mov
cmps
adc
xchg
jmp
add
or
ins
nop
pusha
ror
jmp
cmps
cmp
test
imul
jbe
jno
cwde
loopne
pop
and
mov
sbb
push
jmp
out
mov
jl
ja
repnz
jle
popf
mov
adc
or
int3
xchg
dec
push
fs
loopne
cmp
imul
scas
sub
mov
add
lods
or
ror
enter
ret
xchg
je
sbb
add
xor
or
sub
ficomp
retf
loope
push
and
out
fadd
mov
mov
lods
int3
lea
jmp
mov
push
hlt
mov
ret
dec
fstp
or
movs
enter
xor
lods
fist
aad
inc
cwde
cwde
mov
fistp
inc
leave
mov
add
pop
call
imul
mov
or
xchg
jl
inc
repz
xlat
mov
jmp
les
sbb
mov
fwait
dec
shl
jp
inc
popa
push
xchg
rcr
inc
push
mov
cmp
mov
int
sub
pop
repnz
icebp
test
ds
xor
dec
xor
je
push
mov
or
mov
cwde
pop
rcl
push
aas
stos
scas
jmp
test
inc
daa
fld
aad
icebp
add
dec
dec
cli
retf
daa
or
data16
test
fs
add
in
pop
lahf
xchg
stc
pop
and
mov
daa
mov
mov
jg
jg
inc
add
mov
or
je
movs
mov
add
inc
data16
pop
hlt
int
mov
test
ret
enter
shl
or
push
mov
outs
sub
push
sbb
add
adc
inc
sar
jnp
lods
inc
xchg
mov
pop
movs
inc
and
rcr
mov
sub
loope
push
sbb
mov
mov
inc
xor
pop
leave
xor
nop
sar
loope
out
jns
retf
std
push
inc
mov
adc
push
xor
loope
jae
js
mov
int3
stc
jmp
or
div
popa
mov
inc
dec
sbb
push
std
sub
inc
jbe
xor
mov
fist
out
int3
mov
inc
or
xor
xor
jo
(bad)
jmp
mov
call
and
hlt
cld
jmp
mov
inc
sti
jnp
inc
cmp
div
stc
int
mov
lea
push
xor
(bad)
cmp
xor
push
push
push
je
test
pushf
repz
jno
push
cmp
fwait
jns
adc
mov
mul
and
jecxz
nop
lock
push
push
mov
xor
fcom
dec
xor
and
mov
or
std
clc
ret
or
retf
sub
add
mov
es
repz
cmps
pop
test
push
shr
inc
neg
(bad)
mov
or
stos
pop
inc
add
repnz
rcl
imul
js
pop
sar
xchg
out
call
(bad)
dec
xchg
movs
fist
pop
fdiv
into
out
pop
fst
clc
dec
push
xchg
cdq
jmp
imul
ss
sbb
push
push
aaa
daa
or
imul
addr16
js
add
sbb
sub
xor
xor
xor
adc
and
test
(bad)
idiv
mov
cmp
xlat
int
jb
mov
sahf
inc
xchg
rcr
xlat
mov
or
(bad)
jmp
rol
scas
xchg
xor
push
test
aas
dec
addr16
mov
pop
xor
inc
pop
jmp
test
movs
shl
call
in
lods
jnp
test
jnp
jnp
pop
mov
sub
ret
mov
xchg
adc
rcr
push
push
dec
out
pop
push
mov
or
add
mov
mov
(bad)
pop
push
vcmpeq_osss
push
inc
xchg
push
jae
add
mov
outs
dec
in
pop
shr
sbb
test
out
add
lea
(bad)
or
jmp
outs
test
fwait
mov
mov
fwait
sbb
or
mov
add
shl
xor
jb
and
mov
cwde
xchg
cmp
test
pop
lods
mov
ds
sub
nop
shl
popa
or
fxch
bound
(bad)
out
xchg
iret
add
popa
pop
in
dec
add
jecxz
mov
gs
push
jb
jmp
xchg
call
jg
div
(bad)
fdivr
pop
jecxz
popf
fwait
stc
enter
xor
stos
neg
sar
stc
mov
inc
jecxz
cli
jbe
sbb
popf
xor
xor
push
scas
cmps
pop
adc
adc
out
push
inc
xchg
adc
fadd
mov
push
call
(bad)
stc
jl
iret
cmps
add
and
enter
dec
mov
(bad)
pop
daa
pop
addr16
icebp
xor
das
hlt
hlt
jl
dec
pop
aas
fstp
out
add
sub
aaa
in
adc
pop
add
repz
pop
dec
in
sbb
nop
and
daa
lods
cmp
hlt
push
(bad)
ja
shl
mov
bound
loope
or
jno
adc
loopne
enter
jo
call
scas
cmps
das
push
mov
mov
jbe
jmp
jae
jo
lods
in
gs
nop
xchg
adc
loop
call
dec
mov
push
mov
and
pop
mov
push
jae
inc
(bad)
mov
icebp
les
repz
(bad)
ins
mov
jne
dec
mov
jmp
xchg
out
jp
mov
or
jne
mov
adc
push
adc
ins
jnp
rcr
mul
aad
dec
fdiv
sbb
jg
dec
popa
jno
dec
(bad)
je
pop
mov
cmp
xor
fwait
sub
mov
aaa
mov
push
mov
ja
scas
ja
and
fimul
lea
jp
int
dec
jmp
scas
pop
or
dec
cmp
rcr
(bad)
ds
(bad)
mov
mov
pop
xor
(bad)
(bad)
in
add
xchg
push
mov
mov
aam
lahf
adc
jle
out
aaa
jg
retf
cmp
retf
mov
(bad)
into
mov
and
fs
lods
and
jl
retf
mov
cld
dec
xchg
cmp
in
mov
test
dec
enter
cmp
inc
add
push
jmp
(bad)
pop
pop
adc
cdq
push
xlat
iret
int3
mov
jmp
loopne
test
repnz
mov
sbb
into
test
sbb
in
push
or
scas
jne
shl
sbb
mov
out
add
inc
movs
add
daa
push
fs
push
movs
xchg
xor
iret
lock
mov
imul
pushf
dec
inc
stc
and
xchg
xchg
scas
jmp
sub
push
and
das
or
xor
cmp
inc
mov
cld
xlat
cmp
lock
mov
movs
mov
jb
inc
ss
mov
test
xchg
push
call
sbb
int3
sahf
in
jb
mov
test
pushf
loopne
in
data16
outs
push
mov
test
push
je
js
(bad)
movs
dec
loope
dec
mov
out
mov
pop
push
inc
mov
out
mov
leave
and
shl
rcr
push
(bad)
cmc
shl
dec
inc
imul
ror
cmps
sti
call
dec
repz
jge
adc
mov
mov
sbb
je
mov
cmp
adc
outs
shl
add
xchg
push
jne
sub
hlt
sub
stos
aam
shl
jo
pop
mov
mov
into
lods
mov
pop
mov
inc
and
adc
ss
and
mov
mov
jecxz
lahf
(bad)
pop
jp
pushf
push
in
xchg
xchg
test
cwde
and
sbb
hlt
push
push
call
add
iret
lods
retf
push
mov
push
jg
dec
repnz
movs
push
mov
and
or
sahf
daa
jns
and
xchg
cdq
cld
jne
scas
inc
pop
pop
mov
pslld
fcmovne
fist
bound
or
inc
pusha
xchg
add
fmul
dec
mov
sahf
adc
mov
cmp
fisttp
or
dec
out
bound
xchg
mov
dec
mov
or
push
mov
cld
xchg
fidiv
ficomp
dec
adc
(bad)
jmp
cmp
or
jmp
inc
stos
scas
js
sbb
or
cmp
ror
in
fwait
ja
add
mov
dec
sub
aam
mov
or
and
shl
call
cdq
loopne
pop
mov
cli
adc
dec
and
call
cmp
iret
xor
xchg
pop
jne
stos
pop
add
inc
and
xchg
mov
sbb
pop
(bad)
jo
les
arpl
aas
jo
daa
loope
jb
fiadd
popf
xchg
xchg
out
xor
cmp
push
ds
sar
pop
mov
push
dec
cmp
jmp
cmps
es
test
mov
in
sahf
fcomi
jmp
inc
dec
push
sahf
ds
mov
pop
push
sbb
sub
or
loope
arpl
ins
rcl
sub
jmp
add
stos
mov
fdivr
ret
xor
stos
add
inc
sub
imul
mov
scas
stc
adc
inc
scas
inc
inc
std
dec
inc
mov
pop
imul
pop
loop
cdq
loop
dec
adc
(bad)
xor
and
cmps
test
jb
xchg
adc
shl
gs
mov
repz
retf
(bad)
push
sbb
lock
call
cli
jmp
sbb
call
xchg
push
and
clc
inc
not
fbstp
jp
rcr
gs
xchg
and
call
aaa
xor
jo
lds
mov
lea
sbb
dec
adc
stos
fld
(bad)
idiv
mov
shl
sub
pop
imul
push
add
add
and
addr16
inc
and
dec
imul
std
(bad)
xchg
test
cmp
xchg
jno
xlat
test
xchg
ja
push
pop
jae
sbb
(bad)
jl
mov
fisttp
inc
xor
out
add
in
inc
pop
out
les
jp
add
dec
jp
mov
cmps
fiadd
adc
adc
jg
call
dec
sub
or
mov
cmp
mov
sbb
mov
sbb
pusha
mov
sbb
es
enter
xor
adc
sbb
push
push
lods
mov
rol
add
in
jb
(bad)
stos
push
ds
hlt
pop
xchg
add
add
and
push
retf
shl
mov
test
(bad)
adc
test
jo
mov
add
mov
or
inc
mov
sbb
dec
(bad)
adc
or
sub
and
fisub
mov
jmp
shl
and
inc
or
lahf
out
mov
mov
fstp
cmp
push
imul
push
dec
out
jecxz
outs
push
lock
(bad)
outs
push
inc
pushf
ins
lods
sub
jmp
sub
xor
out
push
mov
and
pop
xchg
int3
pop
inc
push
push
add
and
mov
jbe
xchg
enter
shl
push
sbb
lea
ss
mov
daa
jp
mov
dec
out
or
xor
rcr
and
sub
adc
xor
jmp
ins
jecxz
mov
(bad)
out
jl
sti
xor
push
sbb
inc
sahf
mov
retf
cmps
aaa
xor
mov
mov
fsubr
mov
mov
frstor
sbb
retf
push
sbb
jle
push
push
popa
cs
xchg
lods
xor
mov
out
lods
mov
xor
sbb
add
dec
hlt
(bad)
test
rcl
fisttp
mov
xchg
xor
xor
pop
repz
inc
mov
int3
adc
jb
call
repz
aas
pop
repz
jle
(bad)
js
(bad)
xor
retf
adc
rcl
jne
or
mov
out
(bad)
into
adc
cmp
mov
add
aam
inc
xor
rcl
ins
and
adc
repnz
jmp
aam
mov
xchg
movs
out
ret
push
pop
and
xchg
push
dec
test
(bad)
stc
sub
cs
shl
cdq
sub
not
les
mov
cdq
add
or
test
sub
or
xchg
icebp
js
push
iret
scas
cmps
adc
ja
adc
jecxz
cmp
or
mov
mov
fld
sar
mov
adc
mov
jl
(bad)
jmp
mov
or
push
mov
jle
push
icebp
fiadd
mov
cmp
fsubrp
outs
fild
mov
and
rep
ss
inc
sub
push
imul
sbb
ret
inc
sub
cli
jb
stc
shl
sbb
cmp
jg
je
jbe
mov
enter
or
jno
jns
scas
push
in
sub
mov
sbb
mov
js
outs
pop
gs
push
outs
fidiv
jae
(bad)
fwait
addr16
pop
test
adc
stos
pop
(bad)
scas
cmp
lea
sub
and
sub
cmp
jbe
mov
retf
inc
(bad)
bound
out
iret
push
test
ret
icebp
mov
cmp
sub
sub
or
mov
test
sbb
inc
dec
push
mov
push
loopne
in
pop
(bad)
mov
lods
sbb
ror
push
ret
not
mov
jne
lock
jbe
jnp
or
(bad)
out
test
xchg
mov
stos
sbb
xor
pusha
adc
cmp
(bad)
cld
jg
cmp
jbe
clc
ins
retf
jmp
ds
mov
js
mov
lods
lds
mov
jns
cs
add
inc
cdq
js
push
imul
imul
mov
jg
adc
outs
xchg
xchg
cwde
inc
in
pop
ja
or
loop
(bad)
fcom
sub
pop
js
pop
cwde
push
outs
loop
or
pop
sahf
loope
jo
push
xor
xchg
call
mov
call
pop
icebp
fild
cmc
pop
inc
(bad)
pop
xor
aam
jmp
sbb
rcl
aad
int3
mov
inc
call
imul
mov
xor
fild
adc
push
xor
(bad)
push
aas
adc
outs
cmp
(bad)
and
xchg
pop
sub
outs
push
pop
call
cwde
sub
add
and
mov
pop
scas
repz
dec
leave
inc
inc
dec
add
push
(bad)
fistp
pop
bound
int3
rol
lds
hlt
mov
aaa
push
inc
dec
cmps
outs
push
dec
loopne
aam
out
call
(bad)
or
dec
xchg
loop
xchg
add
data16
dec
inc
jecxz
imul
in
fnstcw
sub
outs
mov
je
push
sbb
pop
call
or
dec
push
mov
sub
xor
add
enter
fidiv
into
shl
retf
hlt
bound
cld
je
mov
xlat
adc
cmc
imul
mov
inc
enter
xor
pop
push
test
loope
xor
push
fnstcw
cdq
inc
mov
inc
ins
inc
dec
push
cmp
out
ja
cli
test
sbb
mov
xchg
in
cmp
sbb
or
jo
mov
and
push
iret
lahf
xor
mov
pop
movs
aaa
push
hlt
iret
sbb
in
jle
sub
pop
mov
cmp
jmp
mov
icebp
mov
xchg
jbe
ins
arpl
sahf
xor
hlt
lods
xchg
call
mov
mov
mov
xor
jl
cmps
sti
and
mov
dec
dec
cmp
jo
ins
fnstenv
dec
pusha
mov
inc
mov
inc
add
mov
dec
inc
adc
fs
pop
mov
mov
loop
adc
cs
es
popf
sub
push
scas
pop
in
gs
data16
push
sub
sub
setns
retf
shl
imul
icebp
lds
ja
push
cs
xchg
out
xchg
in
into
pop
push
mov
loope
ins
stos
jmp
mov
aad
sub
mov
add
fiadd
cmp
mul
mov
pop
adc
pop
add
outs
test
inc
pop
ret
repz
shr
push
jns
mov
enter
xlat
lfs
mov
inc
call
lods
adc
or
push
jmp
popa
pop
sbb
jbe
scas
push
push
xchg
xchg
fsubr
lahf
cmp
sti
jge
aaa
mov
into
xor
repnz
inc
rcr
add
add
pop
rol
jne
loop
sbb
jp
lods
jns
pop
xor
xor
lahf
retf
scas
xchg
cmp
sti
adc
lahf
and
sahf
adc
pop
xor
jmp
add
dec
enter
sti
test
out
and
sbb
jne
and
mov
pop
gs
mov
dec
adc
std
mov
sar
in
int
imul
cwde
jg
mov
inc
loopne
jmp
or
retf
dec
mov
clc
dec
(bad)
cwde
add
jp
sub
xchg
je
enter
push
push
ret
jo
pop
lods
movs
push
add
outs
(bad)
xor
sbb
out
lods
test
in
retf
adc
adc
mov
jge
test
(bad)
cwde
(bad)
ficom
gs
les
ss
aad
mov
cmps
mov
ds
xchg
jno
or
add
xchg
push
jmp
das
xor
int
test
loopne
xchg
or
daa
mov
adc
add
int
ja
sbb
xor
jle
idiv
xor
mov
sar
and
mov
inc
movs
add
loopne
ins
and
call
loopne
add
xor
mov
test
xchg
cmc
shl
in
mov
movs
xchg
sub
into
call
or
iret
pusha
inc
jp
xchg
xchg
xlat
dec
xor
out
dec
cmp
push
orps
add
cli
cmp
mov
fsub
dec
add
sbb
cwde
int3
daa
loope
cmp
dec
sahf
xchg
cmp
sysret
inc
lea
fld
in
scas
xchg
stos
and
mov
fstp
and
loope
(bad)
pop
movs
mov
in
cmp
xor
xor
test
fsubrp
mov
xchg
dec
jns
leave
and
bound
mov
lds
fwait
movs
jmp
mov
sub
mov
xchg
jge
addr16
icebp
jp
sub
pop
stos
sbb
jle
repz
scas
ficomp
fs
leave
adc
ss
sbb
push
cdq
movs
(bad)
imul
(bad)
stos
jl
add
nop
shr
pusha
lods
cmp
jae
and
mov
sbb
in
int3
pop
bound
cld
int
cmp
cmp
xchg
rol
aas
push
mov
add
out
pop
sub
daa
mov
and
dec
fcom
pusha
pop
fsubrp
mov
push
adc
push
or
in
rcl
cmp
sbb
mov
mov
mov
jmp
mov
das
add
call
pop
add
or
icebp
dec
mov
adc
int3
daa
push
mov
add
sbb
test
adc
pop
inc
(bad)
je
aam
add
mov
and
lds
adc
scas
ret
pop
mov
and
inc
cmp
mov
mov
push
ret
xchg
sbb
inc
jmp
aas
mov
pop
xlat
stc
jl
push
add
or
or
sbb
jmp
pushf
addr16
sbb
cmp
push
cmp
pop
pop
adc
nop
outs
scas
dec
sub
push
xchg
ins
ror
retf
sub
inc
cdq
mov
call
iret
bound
mov
cmp
mov
pop
dec
inc
call
aad
cmps
fmul
cs
cmc
push
push
jg
mov
push
mov
or
sub
gs
lods
les
ror
test
rcr
push
stos
je
adc
mov
lods
xchg
ja
cmps
and
mov
in
xor
add
pop
repz
fnstsw
mov
repnz
cli
fsub
and
cmp
xchg
jmp
sub
xor
or
sub
inc
cmp
test
test
or
mov
mov
sar
jle
xorps
mov
std
lahf
(bad)
fidiv
mov
xlat
iret
in
jg
dec
push
cmc
push
dec
xor
adc
addr16
push
(bad)
fsub
sbb
int3
fwait
xchg
loop
mov
jg
out
hlt
jl
jne
sub
inc
jmp
inc
adc
int
inc
shr
ret
(bad)
daa
or
in
inc
jns
clc
in
hlt
and
pop
adc
mov
mov
shl
adc
xchg
xchg
hlt
adc
jp
jmp
xchg
mov
mov
jnp
cdq
and
scas
in
sbb
dec
lea
xchg
test
xor
mov
xor
mov
inc
pop
lock
xchg
dec
test
and
movs
into
mov
jl
mov
imul
adc
cmp
and
(bad)
int
or
xchg
arpl
xor
movs
mov
or
cwde
pop
inc
stc
int
fs
out
inc
add
out
mov
mov
neg
and
jae
jnp
jl
xchg
jmp
sbb
inc
retf
addr16
mov
stc
pop
stos
xor
jmp
xor
push
adc
ficomp
fisub
dec
sub
into
lods
stos
cmp
aam
pusha
(bad)
cmps
ret
test
sar
jo
cs
stos
inc
mov
outs
push
xor
js
push
xchg
aaa
out
es
cmp
shr
sbb
inc
ja
bound
xchg
and
les
xor
mov
sub
loopne
fwait
jl
push
scas
xchg
mov
ds
jmp
les
movs
dec
aaa
or
fwait
inc
fdivr
mov
jmp
dec
inc
ror
jae
fnstsw
push
cmps
jl
and
cmp
push
push
or
out
pop
fucomi
mov
ds
cdq
loopne
out
popf
adc
push
sbb
xor
addr16
fcomp
push
adc
cs
and
cmps
pop
imul
outs
les
cmp
mov
pop
ret
fistp
aam
ds
sub
stc
and
pop
fild
mov
lds
or
or
jl
or
mov
stc
mov
xchg
ret
xlat
sahf
push
add
add
das
adc
jmp
mov
pop
retf
xchg
jno
mov
cwde
or
in
(bad)
mov
fdiv
movs
stos
sub
cmps
jl
jae
jle
loop
arpl
sub
cmp
inc
mov
add
ror
or
stc
push
jns
lock
sub
and
cs
shl
jmp
pop
in
xchg
dec
lahf
lods
nop
ins
cmc
jbe
jnp
or
mov
dec
or
and
sub
in
jmp
rcr
mov
add
sub
fsubr
cmp
or
or
mov
xchg
add
dec
fsub
icebp
int3
sti
cli
dec
inc
or
call
push
loope
call
scas
push
pop
xlat
cmp
test
xor
cs
pop
adc
sub
add
sbb
sub
mov
call
jne
stos
in
add
mov
inc
mul
mov
push
aas
adc
inc
dec
jle
push
movs
pop
outs
dec
sbb
jge
dec
jge
je
jnp
mov
adc
dec
scas
jp
push
repnz
xchg
scas
or
outs
in
xchg
loopne
out
cmp
jne
test
xchg
into
rcr
and
test
fisub
out
xchg
dec
jae
mov
xor
call
cmp
repnz
jno
sub
mov
bound
xor
and
and
mov
jg
int
in
fucomi
outs
mov
dec
loope
les
xor
jge
mov
dec
cmp
int
rcr
adc
sti
sub
jle
xor
ret
aaa
test
inc
f2xm1
in
out
jmp
pop
dec
sbb
(bad)
xor
xor
mov
in
jae
neg
sti
jp
nop
jecxz
rcr
imul
loopne
inc
adc
jnp
pushf
sbb
add
sbb
das
jmp
jae
(bad)
mov
jnp
mov
xchg
mov
cmp
ins
test
lock
ins
fst
or
out
and
ins
mov
out
(bad)
pop
push
movs
ss
mov
sbb
push
in
(bad)
movs
es
lods
outs
push
cmp
mov
jge
call
bound
and
add
(bad)
imul
inc
rcr
xchg
dec
cmps
dec
jg
cmp
fwait
clc
(bad)
lods
stos
push
fwait
adc
out
cmps
cdq
cmp
iret
test
lock
loopne
sbb
sub
pop
sbb
fldcw
inc
push
js
xchg
cli
or
mov
adc
or
mov
jg
ss
mov
cmp
and
(bad)
in
mov
jmp
les
lock
jo
mov
sub
pop
mov
addr16
add
retf
les
dec
addr16
adc
mov
sar
call
mov
ficom
mov
adc
pushf
xchg
call
popf
jecxz
mov
imul
std
sub
adc
and
lods
call
fsub
xor
es
mov
call
xchg
outs
js
mov
aaa
ds
push
jge
ud0
sub
gs
in
or
lds
repz
and
mov
hlt
pop
or
adc
loope
add
adc
cmp
inc
scas
ins
std
daa
mov
sbb
iret
movs
add
not
fucomi
sub
jmp
bound
cwde
imul
inc
fsub
rcr
dec
out
scas
adc
ror
push
aam
push
xchg
dec
push
add
mov
out
std
mov
pop
dec
ret
xchg
fisub
ins
enter
fwait
dec
mov
push
push
push
mov
bnd
mov
test
bound
cdq
and
or
outs
add
fwait
retf
mov
shr
mov
push
sbb
mov
xchg
enter
iret
lea
fwait
retf
and
inc
jle
test
mov
mov
fistp
sahf
out
lea
sbb
in
test
iret
mov
or
cdq
mov
lds
inc
cmp
not
jno
inc
lahf
aam
daa
cmp
sbb
or
push
fsub
push
inc
outs
mov
sti
push
inc
inc
mov
inc
sbb
ret
add
mov
mov
repnz
push
pop
icebp
lock
scas
sbb
push
(bad)
retf
sub
or
fcom
push
scas
push
mov
pop
test
xchg
loope
add
ins
outs
cmp
mov
outs
push
movs
mov
mov
fist
cmp
leave
xor
imul
mov
lods
mov
mov
xor
mov
jge
cmps
in
mov
adc
stc
std
add
mov
cmp
mov
jnp
jl
paddq
sahf
and
pusha
rcl
call
cmp
xchg
xor
sbb
mov
mov
dec
les
mov
sbb
mov
ret
js
push
fldenv
(bad)
jns
(bad)
aam
in
dec
jp
mov
test
push
add
pop
test
xor
mov
aad
cmp
xchg
lods
sbb
cwde
test
cdq
dec
scas
jne
shr
jmp
inc
jae
mov
sbb
retf
add
sbb
jmp
bound
sbb
adc
ins
pop
dec
in
cdq
bound
push
(bad)
aad
pop
mov
mov
mov
pop
ds
shl
xor
pop
pop
scas
jecxz
push
push
adc
adc
and
repnz
cmps
je
inc
outs
stos
push
call
arpl
pop
mov
lods
test
pop
pop
rcl
jb
push
push
sbb
loopne
ret
stos
in
pusha
cld
dec
mov
push
sbb
and
cmp
das
jecxz
xchg
sub
jmp
pop
push
inc
push
rol
add
out
push
mov
xchg
push
out
loope
dec
and
mov
and
and
sbb
push
mov
xchg
jmp
ror
loope
idiv
xor
das
movs
xchg
stos
outs
ins
mov
cmc
imul
ret
cli
rcr
jae
mov
dec
xchg
loopne
call
inc
nop
jo
fisubr
arpl
dec
std
sbb
ja
cmp
add
pop
sbb
int
test
mov
dec
mov
mov
sub
jg
loopne
xor
jle
rcr
mov
inc
pop
sub
call
cwde
mov
xor
add
mov
in
stc
push
movs
xchg
icebp
(bad)
sbb
or
mov
pusha
pop
sub
jecxz
ins
dec
in
stos
fbld
outs
pop
sub
repz
mov
addr16
data16
ret
ret
clc
adc
jo
jmp
dec
adc
or
inc
test
stos
push
loop
mov
pusha
mov
mov
add
jbe
retf
xor
shl
shl
enter
fwait
mov
test
outs
cmp
stos
aad
mov
inc
dec
and
hlt
dec
rcr
ja
fadd
leave
xchg
xchg
sub
adc
popa
(bad)
lahf
adc
or
lahf
fdivr
nop
sbb
or
ret
sbb
out
cmp
in
outs
out
into
pop
xor
test
fld
add
aam
mov
xchg
push
aad
fcom
bound
mov
dec
cld
add
fdivr
mov
mov
idiv
call
loop
adc
mov
jno
pop
dec
cld
popf
inc
fucomip
std
aad
bound
mov
xor
dec
pop
bound
cmp
or
lahf
pop
or
leave
cmp
add
inc
repz
jl
out
jmp
cmp
mov
test
loopne
es
and
(bad)
repnz
retf
pop
mov
pop
fisubr
mov
sub
pusha
or
push
es
in
sti
and
sbb
cdq
push
fsubp
or
dec
inc
push
jb
dec
clc
inc
movs
outs
add
sub
mov
retf
mov
push
popf
xlat
fcom
mov
sbb
mov
or
jbe
call
std
xor
mov
sub
adc
in
jne
sti
sbb
cmps
out
mov
(bad)
xor
xchg
bound
sbb
add
(bad)
xlat
mov
dec
or
xchg
fst
(bad)
cld
xlat
fbstp
sub
or
push
cld
outs
push
enter
pop
in
mov
pop
fs
(bad)
pop
dec
mov
sar
add
jmp
lds
ins
mov
jecxz
pop
adc
xor
sub
(bad)
shl
loopne
ins
cmp
xor
adc
adc
lds
mov
rcl
mov
sbb
pop
push
in
inc
retf
xor
mov
mov
xchg
les
mul
mov
ret
adc
xor
xor
mov
(bad)
jp
mov
js
mov
dec
add
cmp
jmp
jmp
xor
add
xchg
shl
jge
js
fild
mov
mov
xchg
jae
cs
retf
jmp
add
popa
je
cmp
pop
mov
(bad)
ja
dec
inc
add
add
and
cmps
jno
inc
xor
fst
rcl
pop
gs
sub
cmps
in
cmp
cwde
idiv
jns
ret
xchg
clc
jmp
push
mov
mov
cmc
aam
add
adc
bnd
push
hlt
and
stc
lock
(bad)
push
mov
push
pop
jne
in
cmp
sbb
test
icebp
jle
mov
mov
fbld
js
cmp
xchg
and
lods
push
pushf
xchg
cs
push
or
jl
mov
mov
aaa
cmp
ins
lock
xor
stos
retf
ret
test
jecxz
retf
cmp
xchg
in
in
pop
retf
and
dec
sbb
cld
outs
ja
sbb
pop
sbb
xor
pop
pop
mov
out
pop
test
push
xchg
mov
fnclex
sbb
sbb
loop
(bad)
in
imul
add
cmp
loopne
xchg
aam
in
arpl
dec
and
int3
jl
loope
pop
mov
pop
je
shl
cmp
xchg
push
fwait
jbe
fdivrp
lods
outs
not
pop
sbb
retf
mov
js
les
push
fadd
fmul
mov
xchg
push
pop
jl
jbe
sbb
rol
test
sti
push
fnstsw
inc
pop
mov
lahf
jbe
xor
in
mov
jp
sahf
add
lock
dec
inc
dec
je
stc
shl
and
sbb
jl
push
adc
push
push
adc
mov
movs
cmp
adc
adc
(bad)
mov
mov
and
push
imul
mov
xchg
pop
imul
pop
mov
sbb
out
push
sub
pop
sbb
mov
in
xor
(bad)
dec
xchg
inc
outs
cld
ds
mov
es
lock
popa
out
push
pushf
xor
loopne
mov
add
mov
push
adc
ds
fild
xor
jl
loop
in
icebp
aas
lock
or
lock
jp
int
mov
pusha
les
enter
fsub
stos
imul
inc
jp
or
jecxz
push
or
gs
cmp
and
pop
mov
sar
xor
dec
and
push
or
pop
jmp
pusha
sbb
mov
pop
loope
push
out
outs
inc
cmp
sbb
mov
retf
dec
int
out
leave
fcomp
push
and
mov
inc
mov
jmp
xlat
ret
outs
imul
dec
sub
repz
out
add
dec
addr16
pop
mov
cld
cwde
sub
sbb
or
xor
es
xor
sub
in
aaa
int3
adc
jno
adc
add
and
pop
fdivr
add
bound
fild
addr16
push
sbb
pop
movs
sar
leave
jg
mov
cld
cmc
ror
int
in
pop
aas
xor
fstp
mov
xchg
out
mov
mov
adc
and
neg
into
into
mov
and
xor
fdiv
call
or
push
mov
stc
inc
or
sbb
mov
imul
jns
sbb
je
inc
and
cmp
pop
fidiv
dec
ret
out
add
ret
retf
outs
(bad)
sar
push
(bad)
sbb
rcr
or
xor
add
shl
sub
or
dec
shl
aas
and
pop
ds
cdq
jnp
mov
xchg
ror
das
cmp
mov
dec
shl
je
mov
adc
push
pop
rol
fwait
inc
fsubr
mov
jae
mov
and
jmp
dec
daa
xor
mov
test
push
inc
lods
neg
mov
sbb
sti
shl
ds
pushf
mov
add
pop
dec
and
pop
mov
outs
jp
push
shl
xchg
sub
or
popa
xor
mov
pop
dec
dec
cmc
outs
scas
adc
mov
sbb
imul
lods
in
int
cmp
lahf
(bad)
in
push
je
inc
mov
lea
leave
scas
cmp
mov
dec
dec
ror
popa
xchg
push
adc
inc
ret
cdq
jbe
adc
mov
(bad)
jb
mov
mov
sbb
sub
cmovnp
xor
cwde
leave
cli
push
inc
mov
data16
jmp
out
mov
lock
xor
inc
dec
pop
aas
out
iret
add
aas
js
sbb
cli
mov
lods
sub
data16
jb
shl
sub
jb
retf
sub
stc
cmc
dec
jmp
mov
jb
adc
bound
ins
push
mov
mov
push
sub
fwait
cmp
jne
clc
sbb
pop
adc
adc
cmc
ffree
sbb
xor
inc
popf
pop
sbb
xchg
rol
inc
rcl
fisttp
stos
rcr
cmp
cmp
scas
sub
fdiv
inc
cwde
cwde
jno
mov
sub
cmp
add
mov
mov
nop
push
aaa
sti
mov
lods
das
pop
mov
pop
js
jl
add
or
cs
xor
clc
outs
lods
ret
test
add
(bad)
jb
jb
mov
mov
(bad)
es
dec
aam
push
jbe
jae
xchg
and
nop
loopne
mov
sbb
jl
and
mov
dec
jecxz
sub
xor
retf
jmp
loop
sub
dec
enter
push
rol
loope
cmp
mov
cmp
or
inc
ror
mov
cli
xchg
aam
sub
jo
fs
xor
je
cs
sbb
(bad)
shr
ss
or
adc
scas
aaa
inc
jbe
dec
pop
jmp
and
push
fs
jmp
aaa
xchg
pop
imul
mov
ret
call
add
movs
fild
leave
or
push
xor
sbb
dec
mov
dec
adc
int3
jmp
fist
add
inc
test
adc
mov
ja
retf
pop
in
js
cmc
stos
mov
jmp
outs
iret
sub
into
lea
(bad)
xor
push
stos
pop
retf
xchg
push
int3
shl
or
pop
stos
jge
dec
and
fldenv
mov
lea
mov
lea
inc
ss
jae
pusha
push
popa
(bad)
repz
outs
sbb
mov
sub
xchg
xor
xchg
and
(bad)
movntq
das
mov
dec
test
addr16
cld
and
mov
test
inc
dec
fcmove
mov
cs
(bad)
adc
out
mov
mov
sbb
out
stos
ret
jnp
mov
xor
loope
inc
mov
movs
add
mov
stos
xor
mov
pop
mov
cmovle
dec
pop
ds
add
sbb
mov
mov
out
pop
mov
sub
dec
sahf
imul
pop
out
pop
pushf
test
lods
xchg
xor
fwait
pop
xchg
sbb
sbb
push
push
rol
into
sbb
aaa
mov
inc
mov
out
push
cmp
push
jge
pop
fimul
bound
adc
out
pop
jp
sbb
lahf
xchg
inc
xchg
mov
xor
and
in
jl
in
pop
imul
and
test
mov
cs
sti
retf
cmp
xor
sbb
ins
push
loope
mov
jns
push
shl
in
dec
adc
in
jg
mov
push
inc
jecxz
sub
leave
cmp
sub
pop
vpmulhw
mov
mov
inc
inc
push
sub
sub
add
cmp
push
sub
inc
retf
nop
frndint
ret
and
fadd
fst
je
out
dec
inc
add
adc
sbb
retf
mov
(bad)
pop
fcomp
and
push
gs
ror
loope
into
cwde
or
mov
or
cmps
fidiv
retf
pop
(bad)
cmc
mov
mov
xchg
enter
ins
cli
icebp
sub
std
push
push
xchg
jmp
shl
mov
and
(bad)
jns
mul
std
cwde
mov
test
xor
lds
stos
adc
mov
xchg
xchg
repnz
stos
jg
stos
fst
mov
movs
push
cmp
sub
cmps
test
call
push
les
fidivr
outs
sbb
mov
dec
add
jmp
pop
inc
sub
mov
pop
cmp
cmp
stc
push
cmc
mov
popf
out
inc
sar
xchg
pop
mov
fstp
stos
adc
lods
pop
(bad)
dec
(bad)
cs
in
mov
push
mov
in
sbb
imul
lahf
call
imul
mov
jb
push
mov
add
xchg
imul
mov
or
mov
xor
fmul
xchg
cmp
push
mov
stos
in
in
xchg
xlat
in
pop
pushf
out
ja
xchg
in
xchg
aaa
loopne
xlat
push
in
cmp
mov
data16
(bad)
das
repnz
sbb
cmps
cs
addr16
add
rcr
mov
push
push
xchg
jecxz
jg
pop
mov
jmp
paddusb
push
out
adc
retf
adc
jmp
jg
cmc
retf
in
jl
aaa
(bad)
xlat
adc
ins
jbe
mov
adc
icebp
and
mov
cld
movs
jbe
sub
pop
repz
jmp
test
inc
cmps
push
mov
sbb
daa
xchg
inc
add
stos
les
or
pop
jecxz
mov
or
test
cmp
(bad)
jp
sbb
add
adc
ins
cwde
jbe
and
push
sar
mov
nop
push
inc
es
mov
jne
jg
aaa
mov
outs
add
(bad)
push
adc
or
mov
jl
sbb
sbb
inc
dec
push
aaa
cmp
lods
popa
(bad)
pop
push
mov
enter
aad
mov
push
inc
mov
add
stc
test
mov
cmp
test
iret
int
mov
cs
xor
cmp
fsubr
lods
lods
fnstcw
sub
(bad)
xchg
or
xor
jmp
scas
mov
in
loop
jge
ins
gs
xchg
sbb
scas
aad
jo
push
adc
jmp
or
inc
and
fisubr
push
popa
ins
test
or
pop
dec
outs
jae
or
jmp
push
inc
pop
fdiv
sbb
or
fldcw
inc
aaa
popa
sbb
lea
ret
retf
mov
pusha
mov
cwde
push
jle
add
shl
xlat
pop
repz
dec
or
and
int
in
fcmovnb
les
das
ss
ins
mov
inc
mov
or
xchg
push
and
cld
(bad)
jbe
cli
adc
xchg
in
add
mov
lods
int
pop
dec
js
ret
popa
adc
ret
mov
and
jg
sbb
xor
push
xchg
sub
sti
or
jnp
inc
mov
lahf
ret
add
cs
jne
jecxz
mov
fmul
aas
push
jmp
dec
mov
cmp
mov
jne
jecxz
xor
inc
mov
mov
cmc
lea
movs
mov
sbb
xchg
cdq
lods
jno
or
or
jecxz
stos
dec
popa
cmc
enter
inc
sbb
scas
sbb
adc
add
or
and
mov
pop
mov
adc
mov
les
in
das
push
fbstp
arpl
loopne
aaa
fisttp
cmp
jmp
test
or
mov
mov
dec
push
(bad)
shl
cld
sub
test
shr
std
(bad)
addr16
sbb
xor
xor
ja
push
jle
mov
mov
jle
fimul
clc
or
xchg
aaa
call
cli
fldenv
pop
cmp
retf
cmp
outs
push
push
mov
stos
adc
mov
jno
fiadd
pop
dec
push
inc
inc
dec
pop
push
daa
push
ins
adc
into
sbb
jmp
sbb
pop
addr16
sub
jbe
mov
mov
fmul
add
mov
jge
or
jle
sub
inc
int3
jnp
xlat
das
(bad)
pop
in
(bad)
jnp
loopne
inc
lahf
xchg
sbb
lea
dec
fbstp
and
xor
into
xor
and
das
and
push
test
xchg
pusha
mov
mov
fbstp
mov
in
aaa
popf
pop
pop
cmps
gs
gs
adc
jp
sbb
addr16
mov
ret
test
sbb
dec
enter
shr
icebp
fs
adc
(bad)
push
jmp
stos
cmps
call
add
add
add
add
push
adc
sub
inc
cmp
push
add
into
stos
(bad)
sahf
shr
push
scas
loopne
sub
cs
out
fsub
pop
pusha
je
and
(bad)
inc
rol
lods
mov
or
data16
das
sbb
js
and
das
ret
adc
or
lea
xchg
push
cmp
ds
mov
sbb
pop
test
jnp
cmps
cld
dec
lods
cmps
xchg
fnstcw
imul
loopne
stc
out
jg
xor
xor
sub
pop
loop
rep
in
mov
inc
mov
pop
(bad)
jg
das
push
inc
hlt
add
fnsave
div
les
fcomp
pop
mov
sbb
fild
das
lea
movs
lods
xchg
iret
fstp
mov
(bad)
shl
pop
mov
mov
sbb
int3
ins
test
not
mov
lea
bound
hlt
and
arpl
xchg
xor
push
mov
mov
xor
in
ins
mov
cmp
retf
popf
fisttp
fcomp
sbb
(bad)
rol
enter
iret
sbb
mov
adc
cdq
mov
sar
add
mov
push
jbe
or
mov
inc
icebp
xchg
outs
push
les
fdivr
fcmovne
jge
fs
ds
dec
pop
sub
add
daa
lods
fild
mov
call
mov
mov
aad
or
and
mov
push
jle
sti
mov
or
add
ret
je
mov
cmc
xor
enter
jle
aam
sti
and
pop
dec
pop
push
lds
push
movs
jg
pop
iret
sub
cmp
loopne
mov
jl
rcr
mov
sub
test
out
lock
in
rol
jae
lock
push
mov
inc
inc
cld
pop
dec
or
nop
xlat
jns
or
cdq
add
mov
mov
sub
add
or
outs
adc
ficomp
cwde
sbb
dec
add
mov
rcl
mov
xor
test
cli
jbe
jae
jmp
jp
inc
jno
aam
mov
adc
test
push
push
sbb
push
push
mov
jo
scas
mov
xor
mov
sbb
mov
mov
(bad)
hlt
push
cmps
mov
mov
bound
mov
pushf
dec
js
mov
js
dec
int
mov
mov
cmp
add
(bad)
in
pop
stc
push
nop
fwait
stos
popa
sbb
cdq
push
add
mov
clc
xchg
push
cmps
xchg
fxch
cli
or
jae
xor
dec
lahf
sbb
or
bound
mov
mov
jg
int
movs
lahf
rcr
stos
pop
jmp
shl
push
daa
xchg
sbb
inc
xor
push
jl
mov
arpl
inc
ins
pusha
mov
and
int3
es
sub
pushf
ds
pop
pop
das
outs
xchg
lock
pop
xor
scas
mov
mov
sbb
or
inc
xor
sbb
call
out
daa
cs
mov
push
mov
scas
call
enter
push
movs
or
stos
imul
test
mov
in
pop
dec
jge
xchg
xor
shl
and
lahf
cwde
pop
cmp
dec
adc
(bad)
(bad)
push
dec
push
into
add
rcr
in
inc
(bad)
push
mov
sbb
shl
mov
das
or
es
(bad)
jne
hlt
xor
mov
stc
das
adc
inc
sti
pop
xchg
movs
aaa
and
or
xlat
xchg
lods
cmp
cli
fs
xor
ins
and
mov
xor
add
(bad)
jmp
arpl
jp
lods
jb
fmul
loope
dec
stc
leave
cmps
push
cmp
test
mov
add
hlt
call
push
out
lock
nop
cwde
mov
xor
cwde
inc
jns
and
sbb
push
out
sbb
stos
cmps
in
mov
mov
push
or
and
sub
add
arpl
push
mov
stc
cmp
sti
das
mov
inc
dec
cli
shl
jecxz
sub
push
xor
(bad)
loopne
adc
adc
pop
rol
mov
pop
jbe
xchg
mov
sbb
gs
dec
dec
or
or
mov
inc
jbe
sub
cmp
add
jnp
xor
outs
leave
push
sub
int3
in
out
xor
inc
pop
(bad)
into
add
or
mov
dec
pop
dec
jb
sbb
dec
dec
je
jmp
push
mov
mov
sbb
test
retf
push
cwde
mov
xchg
mov
mov
jp
test
jge
pop
mov
push
sub
jno
sbb
and
push
adc
in
xchg
mov
ins
(bad)
jno
dec
pushf
push
out
out
xchg
mov
jg
(bad)
ficom
xchg
inc
xor
mov
imul
mov
mov
fwait
loope
adc
ret
in
repz
xchg
arpl
adc
cmp
aad
mov
aam
adc
retf
cmc
inc
dec
cmp
xchg
xchg
stos
mov
cld
dec
jno
sbb
repnz
ss
std
xchg
jae
pop
adc
xchg
stos
adc
sbb
jne
and
mov
xor
je
and
xchg
xchg
push
push
imul
cmp
loopne
(bad)
push
push
retf
add
repz
inc
and
mov
cmc
scas
xor
out
fld
cmp
inc
cmp
jo
stos
jns
sub
addr16
pop
or
pop
in
ror
cdq
cmp
fsub
xchg
inc
xor
mov
push
push
jecxz
xor
lea
outs
pusha
mov
mov
xchg
jns
xor
cli
xchg
hlt
(bad)
int3
gs
sub
sub
(bad)
dec
adc
jae
js
cmp
xor
dec
iret
xchg
aad
mov
cs
das
push
popf
jbe
fpatan
(bad)
fcomip
inc
mov
dec
iret
cmp
clc
dec
xchg
jnp
repnz
jge
mov
xchg
scas
xor
mov
sti
jmp
push
test
xor
pop
loope
ins
ins
int
repnz
dec
out
xchg
cmp
enter
shr
jg
dec
std
and
mov
outs
movs
mov
push
call
hlt
add
or
xor
mov
cmp
sahf
and
mov
idiv
aaa
xchg
mov
or
jmp
mov
push
iret
push
dec
ret
mov
adc
xlat
shl
imul
mov
repnz
mov
cmc
es
or
mov
enter
push
pop
cs
out
pop
ins
ins
mov
pushf
cmp
test
adc
imul
mov
sbb
call
jg
push
mov
shl
dec
add
(bad)
jmp
mov
repnz
loope
(bad)
pop
xor
xchg
jmp
icebp
xchg
sbb
push
cld
and
add
fldenv
call
cwde
ret
push
fisubr
pop
outs
(bad)
cmps
or
repz
mov
mov
mov
movs
mov
dec
movs
mov
aas
in
mov
xchg
xor
push
not
or
sub
ja
push
movs
les
imul
mov
mov
enter
pop
jne
scas
outs
popa
and
dec
ss
pop
imul
and
in
inc
mov
sub
cmp
mov
imul
jne
sub
xchg
cmc
push
fmul
or
(bad)
cs
ret
xchg
outs
cld
inc
sub
test
call
bound
sti
fistp
add
push
repz
pushf
dec
fcompp
adc
jne
(bad)
(bad)
xchg
jg
rcl
(bad)
jecxz
push
push
push
(bad)
(bad)
mov
sar
popf
aam
rol
mov
jecxz
outs
mov
leave
add
pop
xchg
mov
fld
add
cmp
sub
pop
xor
lahf
aad
fcomp
jecxz
jmp
pop
mov
ins
xchg
jae
(bad)
jmp
aam
push
popa
sbb
jge
dec
in
jmp
mov
pop
rcr
inc
xchg
push
xchg
sbb
aaa
ss
and
xchg
or
mov
aas
adc
sar
xor
pop
and
retf
pop
inc
jp
pop
scas
in
sar
xlat
test
in
shr
mov
test
stc
shr
les
pop
sub
jnp
mov
inc
mov
xor
push
or
push
pop
mov
mov
push
fidiv
xlat
mov
inc
aam
cwde
daa
sub
and
inc
fisttp
push
xchg
or
mov
repz
inc
sub
and
outs
cmp
inc
xlat
out
aad
sahf
scas
dec
push
fcmove
add
or
shl
aad
push
sahf
or
pop
cmp
push
adc
pop
mov
dec
fisttp
dec
and
frstor
rcl
xor
inc
cmp
repnz
mov
pop
in
xlat
popf
pushw
sub
pop
pop
add
or
sub
cmp
xor
add
test
push
pushf
retf
mul
push
in
test
in
jb
sar
ret
ret
inc
pop
fcomip
iret
push
aas
mov
push
mov
jae
rol
mov
int
sbb
cmp
leave
mov
xor
mov
(bad)
popf
rcr
and
(bad)
push
outs
int
or
xor
popa
inc
jb
push
int3
ja
sbb
push
adc
mov
inc
sbb
loopne
test
in
pushf
int3
popf
stos
mov
cld
hlt
cmp
dec
mov
jge
push
outs
and
pop
jg
loopne
js
fldenv
aaa
push
dec
inc
sti
xchg
pop
mov
xchg
jge
std
pop
pop
cmp
(bad)
in
dec
mov
repz
sbb
pop
dec
lock
imul
fsub
xor
pusha
push
pop
out
pop
dec
cmc
mov
inc
push
inc
(bad)
(bad)
adc
inc
data16
icebp
popf
inc
pop
(bad)
das
push
loopne
lods
or
test
loope
cmp
xchg
pushf
mov
sbb
mov
jb
mov
push
js
cmps
mov
mov
fmul
mov
add
stc
inc
int3
ins
nop
fld
jae
cs
out
in
ss
jle
out
(bad)
frstor
xchg
push
push
lods
mov
retf
in
aas
shl
and
adc
and
lods
rcl
ins
jb
outs
cmc
retf
add
sbb
mov
dec
mov
jge
xchg
rcl
dec
cmps
mov
es
or
sbb
mov
mov
dec
pop
cmp
push
pop
push
ins
jge
js
loop
cs
mov
(bad)
push
mov
pop
or
cmp
and
gs
pop
ror
and
add
adc
mov
iret
mov
cmp
sub
xchg
xor
outs
pusha
gs
add
rcr
(bad)
xor
add
lds
mov
dec
jg
scas
add
xor
or
lock
lods
pop
mov
aad
mov
(bad)
jp
fstp
jns
aad
add
jbe
mov
popf
arpl
sar
xor
out
int3
push
push
mov
test
pop
jnp
add
inc
push
aas
aaa
and
stos
addr16
lahf
inc
push
inc
or
ja
js
xrelease
sbb
xchg
and
push
aaa
mov
in
dec
jecxz
gs
xor
(bad)
aad
mov
cmp
in
sub
prefetch
or
test
adc
and
call
ficom
mov
addr16
cmps
pop
push
retf
pop
daa
into
xchg
add
or
or
add
push
add
mov
or
mov
sbb
adc
sub
cmp
xchg
adc
or
in
sub
xchg
dec
sti
aas
push
mov
mov
sub
pushf
int3
sub
push
popf
sbb
repnz
cs
xchg
loop
es
ret
mov
mov
fcomp
push
add
cmp
or
in
cmc
adc
nop
mov
daa
(bad)
xor
in
xor
xor
xchg
ror
mov
out
mov
int
iret
mov
jno
pmulhw
stos
add
arpl
shl
xor
xor
cdq
scas
inc
jae
ins
iret
cmps
hlt
(bad)
jmp
bound
inc
dec
(bad)
shrd
cwde
xchg
retf
mov
mov
je
xchg
adc
push
sbb
cli
push
jmp
adc
loope
(bad)
pop
aam
cs
repnz
shr
or
adc
or
sub
div
add
add
sbb
xor
les
sbb
mov
push
cmp
imul
and
sub
push
mov
pop
xchg
xor
xchg
xor
ret
xor
mov
xor
inc
jb
test
(bad)
pop
mov
dec
add
mov
xchg
data16
push
dec
push
or
and
pop
nop
in
test
sub
adc
in
lahf
mov
cwde
mov
sbb
xor
retf
pop
lock
jecxz
or
jo
inc
jnp
push
sti
sub
push
mov
and
jo
mov
xor
xchg
ds
int
nop
xor
ror
imul
push
sbb
cmp
inc
stos
mov
iret
or
cli
jne
pop
inc
sti
lds
and
sbb
or
scas
popf
call
sub
inc
js
sbb
or
loope
in
sub
ins
adc
cli
or
mov
test
loope
daa
mov
sbb
ins
movs
mov
adc
movs
push
aad
cmp
mov
mov
jecxz
mov
inc
jne
add
test
arpl
pop
xchg
aas
xor
ja
shl
mov
test
(bad)
int3
jmp
adc
pop
inc
aam
jmp
outs
jmp
adc
adc
mov
xor
inc
das
stos
outs
shl
pause
and
imul
dec
mov
(bad)
sub
fnstcw
fsub
sar
cmp
and
ins
mov
in
in
add
add
fs
xor
in
adc
mov
inc
add
adc
sar
pop
sahf
xchg
fld
mov
add
stos
push
dec
and
dec
mov
mov
iret
xlat
je
xor
fmul
mov
in
push
sub
outs
and
xlat
mov
mov
mov
movs
jbe
or
inc
push
jb
push
sub
pop
mov
pminsw
adc
mov
lods
push
repnz
rcl
loop
sub
scas
xchg
scas
call
add
mov
xor
daa
shr
mov
mov
loope
pop
xor
loopne
out
call
in
jnp
xor
fst
add
dec
lea
xor
xor
ror
nop
imul
mov
cmp
adc
cvtps2pd
loop
inc
jbe
xchg
jecxz
push
push
sub
fistp
int3
cmp
jmp
ret
jg
sbb
les
pop
cdq
and
rol
retf
mov
movs
fild
jecxz
push
mov
mov
adc
cmps
or
xchg
inc
jmp
movs
sti
cmp
lods
loop
fcomp
add
retf
xchg
push
mov
inc
vxorps
pop
mov
dec
out
pop
inc
das
ds
scas
repnz
outs
dec
rcr
xor
and
adc
lahf
ret
loope
aad
out
shr
add
and
int3
pop
xor
inc
stos
sbb
loopne
enter
gs
fadd
mov
xor
mov
cwde
jo
dec
add
add
sbb
(bad)
lods
mov
stc
gs
(bad)
rcr
xor
mov
mov
fimul
xchg
pop
test
ss
push
cmp
jg
lock
mov
outs
movs
xchg
hlt
and
ret
sbb
loope
js
add
outs
xchg
adc
xlat
mov
(bad)
gs
(bad)
jae
sti
xchg
cmp
xor
or
clc
es
mov
cdq
mov
fidiv
mov
test
test
adc
push
add
cmp
mov
mov
sub
movs
shl
mov
fst
xlat
inc
jns
cmp
pop
mov
(bad)
popf
inc
sub
push
jmp
cmp
dec
cmp
in
jmp
xor
mov
mov
push
aaa
popa
cmp
pusha
adc
ja
(bad)
stos
sahf
xor
xchg
mov
or
cmc
or
pmullw
stos
sbb
jmp
int3
repnz
jnp
adc
iret
lods
ret
xchg
aad
mov
in
fcmovbe
cmp
dec
mov
enter
loope
add
inc
add
into
add
test
stos
cdq
mov
inc
enter
and
sub
outs
lods
xchg
sbb
push
rcl
pop
(bad)
out
push
retf
mov
push
mov
mov
ds
cmp
inc
jo
mov
out
adc
sbb
and
dec
and
das
and
rcr
out
dec
(bad)
add
mov
mov
or
js
in
scas
nop
push
or
loope
jle
mul
mov
fidiv
and
daa
jb
push
or
fwait
test
mov
sahf
add
std
(bad)
call
sbb
adc
xchg
mov
ret
imul
lods
jecxz
cld
fiadd
not
ret
imul
and
fistp
gs
ret
movs
or
sbb
inc
and
push
add
popa
inc
(bad)
retf
clc
or
enter
nop
inc
jb
arpl
mov
outs
mov
and
adc
cdq
iret
xor
ror
leave
inc
jle
add
jmp
jl
call
or
mov
aam
rcr
jecxz
push
bound
pop
mov
jl
pop
leave
fld
add
xlat
call
add
bnd
mov
mov
ja
cmp
stos
dec
jmp
jge
cmp
cdq
cs
sbb
ins
das
loopne
fs
retf
xor
ror
xchg
fcomp
pusha
rol
outs
int
jl
enter
sahf
sub
mov
gs
xor
and
jne
sub
in
mov
inc
mov
push
cmp
lock
ficomp
dec
cmps
xchg
daa
pop
add
xchg
lds
jmp
cmp
mov
outs
push
data16
mul
jne
push
leave
les
movs
rcl
mov
test
inc
dec
es
jno
aam
mov
imul
mov
int3
inc
mov
(bad)
cld
je
jno
and
(bad)
adc
mov
inc
mov
pop
stos
sbb
clc
shl
pop
inc
add
push
stos
xor
xor
(bad)
mov
mov
fidiv
push
cs
xlat
dec
rol
xor
add
aad
(bad)
cmp
dec
sbb
pusha
xor
test
adc
inc
adc
sub
push
outs
dec
push
jg
mov
mov
add
cmps
pop
leave
push
push
ficomp
enter
dec
movs
sub
mov
lods
movs
jg
inc
mov
fiadd
jb
inc
aad
popa
pop
push
sahf
pusha
cld
addr16
mov
mov
retf
aam
dec
rol
push
sub
imul
outs
push
fwait
sbb
and
popa
mov
pop
in
ror
dec
push
jecxz
dec
cmp
popa
adc
lock
stc
or
ins
cmp
or
cli
dec
int3
inc
rep
and
mov
pop
inc
mov
and
fld
mov
pop
inc
test
scas
and
adc
dec
enter
call
test
xchg
mov
add
dec
jbe
jae
pop
fisttp
sbb
sbb
lahf
xchg
shr
outs
lahf
call
mov
mov
pop
lea
vpminub
inc
outs
cs
inc
push
pop
aad
ret
xor
and
arpl
adc
add
out
test
mov
and
(bad)
mov
shl
sbb
loopne
and
call
sub
cld
cmp
xchg
mov
pop
push
push
mov
loop
das
icebp
iret
jae
jmp
cmp
mov
imul
sar
adc
les
cmp
mov
pop
ins
add
mov
pushf
xchg
retf
out
les
or
nop
pop
lods
xchg
call
pop
mov
icebp
push
push
stc
or
add
mov
jle
push
fidivr
adc
add
push
add
add
xchg
retf
push
mov
mov
sub
sbb
cli
and
stos
in
mov
xor
test
lods
and
out
inc
cmc
mov
xchg
(bad)
or
fist
or
jmp
lods
nop
repnz
push
pop
scas
pop
fidivr
mov
mov
jmp
pop
push
dec
add
inc
sbb
inc
fsubr
loop
std
pop
icebp
sti
(bad)
mov
cmc
mov
fld
inc
mov
ja
in
mov
xchg
jns
jg
cld
jbe
xor
cmps
xor
inc
aas
xchg
jmp
mov
jle
clc
mov
jp
mov
in
adc
xchg
fdivr
cmps
jle
jge
jl
int3
sti
lahf
and
imul
pop
in
mov
cwde
add
ret
push
mov
mov
cmp
in
mov
loope
int3
cmps
xchg
data16
pop
lds
mov
pop
cmp
mov
dec
lods
rol
int
in
push
test
inc
popa
in
lods
and
(bad)
xor
jecxz
sbb
dec
adc
imul
push
sbb
aam
leave
in
xchg
mov
lock
adc
mov
mov
mov
adc
mov
imul
jns
sbb
fidivr
shr
stc
dec
adc
or
and
mov
sub
(bad)
cmp
inc
aaa
sbb
jae
mov
shr
mov
lock
cmps
outs
push
fs
fdiv
mov
xchg
xlat
js
add
add
sub
int3
xor
pop
pop
pop
(bad)
bound
fidiv
popa
out
retf
mov
movs
jmp
add
xchg
xchg
jmp
cli
xchg
fsub
rol
sub
mov
lock
(bad)
xlat
fisttp
adc
mov
icebp
std
cmc
arpl
imul
jmp
ins
test
ror
push
cmps
mov
push
dec
cmp
push
clc
fisttp
pusha
xchg
push
mov
cmp
cmps
(bad)
test
add
mov
loop
sbb
call
pop
loopne
mov
ret
and
mov
ret
xor
into
retf
inc
ficomp
inc
mov
push
mov
or
cmp
aas
sbb
mov
ret
out
clc
xchg
cld
(bad)
fmul
inc
mov
neg
push
fwait
mov
push
arpl
sbb
(bad)
(bad)
mov
(bad)
stos
mov
or
push
push
sbb
or
ficomp
mov
scas
neg
mov
and
dec
int
jl
scas
pusha
jb
icebp
xor
(bad)
int3
stos
sbb
jno
xchg
push
or
aas
jle
and
dec
inc
jle
out
jno
jp
call
pop
mov
add
sub
cmp
add
add
mov
and
js
jg
imul
push
and
aad
add
jbe
xchg
nop
jge
sub
in
mov
mov
xor
mov
or
mov
push
sbb
jmp
or
xchg
push
in
mov
loop
enter
push
test
dec
push
imul
and
imul
lods
mov
mov
dec
push
or
cmps
pop
cmp
add
pushf
lds
daa
fdiv
out
xchg
popa
mov
imul
pop
shl
pop
push
mov
xchg
lock
adc
fxch
jmp
dec
popa
mov
cmp
test
movs
scas
std
cmp
jp
mov
stc
dec
pushf
sbb
rol
mov
jns
and
and
ss
fadd
pop
jb
jecxz
addr16
hlt
dec
mov
(bad)
mov
call
popa
stos
xlat
sbb
or
lods
jo
sub
fld
sbb
jmp
jo
jns
outs
jae
and
pop
inc
dec
into
jmp
into
mov
add
bound
lea
js
scas
popf
xchg
inc
scas
xor
push
jg
adc
jecxz
repnz
(bad)
in
or
in
cld
es
out
out
mov
addr16
xor
shl
aam
and
adc
imul
mov
(bad)
call
adc
call
xchg
mov
xor
adc
inc
fcom
cmp
mov
out
call
ds
sbb
mov
dec
mov
pop
or
bound
mov
es
test
stc
sbb
lds
mov
mov
retf
and
repz
pop
test
cmp
repnz
loop
pop
cmps
mov
sub
icebp
outs
sub
sub
gs
test
aaa
ja
pop
fs
mov
in
out
out
and
dec
sbb
sahf
outs
pop
cli
xor
cmps
push
cmps
sub
xchg
sub
mov
sub
into
mov
cmp
in
jb
adc
call
lods
aaa
loop
xor
mov
clc
dec
inc
jecxz
sti
inc
(bad)
shl
mov
clc
xchg
push
das
mov
cmp
sub
std
inc
popa
test
call
in
jne
popa
ss
jo
shl
call
daa
rcr
xor
loop
jne
mov
push
clc
xor
(bad)
push
js
ret
cs
jecxz
nop
out
jo
and
cdq
mov
test
mov
push
pop
dec
ds
xor
icebp
into
mov
or
cmp
or
cli
mov
add
mov
fsubr
xchg
sub
mov
pop
test
jle
pop
sbb
std
pusha
pop
adc
sub
scas
jns
or
pop
sbb
sahf
gs
mov
arpl
ja
aaa
mov
adc
or
cli
outs
push
ret
outs
inc
inc
scas
(bad)
cmp
push
(bad)
push
(bad)
sub
loopne
and
scas
movs
in
add
mov
int3
mov
out
cmc
addr16
mov
ins
dec
push
mov
cmp
and
repz
pop
push
sbb
or
xor
mov
pop
jns
cmp
movs
iret
dec
mov
xor
sti
sahf
sbb
lock
add
sti
sub
dec
and
jbe
(bad)
cwde
and
int
fadd
add
leave
cmc
mov
or
(bad)
dec
push
sub
mov
push
jg
gs
push
cmc
call
push
jecxz
ret
mov
jb
aas
push
push
mov
pop
mov
pop
pop
mov
ds
jg
and
pop
push
mov
ror
sbb
mov
lds
push
sti
ins
mov
sahf
daa
(bad)
xor
pop
js
jnp
push
bound
mov
cmp
test
xor
mov
popa
mov
mov
xor
mov
out
jecxz
xor
ja
mov
or
jno
je
outs
mov
xchg
push
mov
imul
jp
xchg
inc
aad
in
mov
fs
cmps
jp
mov
mov
rol
imul
push
and
mov
test
xchg
sbb
mov
push
dec
jbe
cmp
push
(bad)
iret
loop
and
icebp
(bad)
fwait
jge
arpl
gs
and
and
mov
pop
pop
push
icebp
arpl
add
repnz
test
inc
pop
pushf
jmp
or
adc
dec
in
(bad)
or
push
(bad)
dec
jp
outs
test
inc
idiv
push
test
jb
adc
int
mov
dec
or
ins
inc
das
mov
les
in
jmp
outs
and
xor
mov
leave
or
pop
fcomp
(bad)
sub
shl
xor
dec
in
adc
mov
hlt
repnz
pop
sub
xchg
push
movs
xor
ret
ss
xlat
lds
mov
jbe
nop
iret
mov
inc
lea
adc
lds
in
cli
and
xchg
icebp
loop
inc
mov
aaa
xchg
fistp
and
add
inc
rcl
scas
push
inc
pop
mov
adc
or
fcomp
cli
pop
inc
fcmovne
cmp
out
call
mov
mov
cmc
xchg
lea
not
into
push
aaa
push
xchg
pusha
clc
iret
mov
sbb
pushf
xlat
les
das
cmp
cmp
mov
retf
test
aaa
(bad)
push
jl
xchg
scas
sbb
dec
icebp
stc
scas
dec
pop
push
xor
xchg
add
and
shl
int3
jmp
add
xor
shl
les
pop
ins
or
pop
outs
mov
xor
sti
sub
mov
pop
and
or
imul
fistp
mov
repz
mov
movsx
add
mov
mov
dec
adc
outs
push
jae
and
aas
(bad)
sbb
ss
call
push
mov
call
xchg
xchg
cmps
jbe
xchg
movs
and
xchg
jp
xchg
shr
pop
fisub
test
aaa
mov
jae
mov
ds
popf
push
push
sub
shr
movs
push
repnz
pop
cmc
cmps
fdivr
or
dec
cdq
das
xchg
xchg
cmp
mov
(bad)
iret
out
dec
jl
dec
(bad)
lods
div
or
movs
movaps
mov
(bad)
imul
mov
in
sbb
pop
xlat
adc
mov
sub
movs
push
pusha
jg
push
aaa
pop
mov
sub
mov
leave
popf
inc
mov
shl
loopne
pop
lahf
(bad)
sbb
mov
jno
sub
push
mov
xor
mov
xor
fisttp
sti
(bad)
inc
jb
add
rcl
je
and
pop
dec
fwait
push
mov
fwait
pop
lea
imul
mov
mov
sahf
cdq
sar
stos
and
xor
jp
pop
out
mov
pushf
ffreep
sbb
cmps
push
push
dec
repnz
(bad)
sub
mov
cmps
cmp
pop
aas
cmp
fwait
mov
or
imul
xor
lods
fisub
out
std
imul
int
cmp
pop
movs
(bad)
(bad)
sti
mov
and
in
dec
jmp
mov
loopne
pop
aam
push
cmp
ds
xchg
cdq
or
in
ret
int3
sub
sub
jecxz
mov
jb
pop
push
es
and
enter
aaa
dec
daa
(bad)
test
and
cwde
mov
nop
jns
mov
int3
inc
add
lods
inc
lods
fwait
fs
jecxz
mov
fs
ss
add
or
push
jbe
and
cmp
push
popa
call
mov
enter
clc
dec
loopne
in
inc
int
popa
cli
inc
in
int
or
cmp
mov
sbb
cmovl
jmp
out
(bad)
dec
xchg
fidivr
adc
fwait
enter
popa
fimul
dec
mov
scas
jae
and
sbb
push
and
xlat
(bad)
pop
add
push
mov
in
(bad)
(bad)
adc
add
mov
jns
sahf
cwde
sub
cmp
stos
scas
ficomp
ds
retf
mul
adc
rcr
sbb
aad
aas
cmp
mov
inc
gs
hlt
pop
scas
push
add
pop
mov
xor
cmp
or
xchg
call
adc
std
out
out
mov
adc
adc
cld
push
in
loop
(bad)
pop
dec
call
clc
rcr
push
add
ja
test
sar
jmp
imul
sbb
(bad)
mov
inc
dec
dec
pop
into
in
adc
int3
mov
adc
inc
xor
cs
stos
mov
cdq
mov
adc
xchg
cmps
ds
cmp
add
cmps
pop
pop
xor
push
dec
stos
test
xchg
jecxz
mov
sbb
aas
pusha
hlt
jno
cmp
repnz
in
push
dec
sti
mov
push
aad
sbb
push
adc
jg
ss
mov
test
mov
int3
jns
mov
arpl
out
loopne
stos
mov
repz
sub
sub
clc
sbb
fsub
outs
push
call
movs
aad
pop
pop
movs
cmp
jle
jo
call
xor
dec
cwde
cmp
mov
dec
aad
ins
std
pop
cli
cmp
dec
sub
dec
cmp
stos
je
adc
sbb
icebp
cwde
pop
ret
fst
and
push
mov
bound
stc
int3
cld
and
(bad)
and
test
dec
pusha
xor
bnd
retf
push
mov
ins
in
ds
stc
hlt
fld
repnz
and
jae
jo
xor
ret
and
lock
aad
sub
mov
jne
dec
lock
adc
cmp
mov
loop
pop
jb
lahf
pop
push
fnstsw
cdq
(bad)
clc
inc
test
pop
add
cmp
cwde
ja
mov
into
mov
lods
rcl
add
cmp
stc
retf
jmp
mov
pushf
sti
scas
push
pop
sbb
sbb
mov
das
call
out
xchg
xchg
push
jg
or
ins
adc
adc
std
inc
xor
aam
call
xor
xor
out
adc
mov
(bad)
in
fstp
jmp
push
dec
gs
pop
lea
scas
xchg
mov
out
mul
std
loope
pop
clc
lods
and
jmp
shl
push
xchg
push
sahf
enter
shl
aas
cmps
shl
sub
or
cmp
lods
sub
jecxz
and
inc
jns
es
jno
imul
rcr
movs
adc
cwde
push
adc
dec
dec
and
out
sbb
mov
retf
push
xor
int3
inc
add
or
push
push
popa
imul
daa
fst
cli
mov
push
adc
fsub
repz
add
addr16
aam
mov
xlat
ret
jb
jge
pop
push
push
jbe
mov
mov
daa
aaa
pop
shl
push
int3
dec
sub
inc
mov
sti
hlt
mov
ins
repnz
inc
hlt
test
or
(bad)
jp
shl
jnp
dec
ffree
or
mov
shr
mov
ins
xor
in
(bad)
sub
loopne
push
cld
cmp
bound
jns
add
stos
jmp
jns
in
and
retf
xor
ret
adc
pushf
rcl
leave
inc
ins
sbb
mov
out
dec
mov
daa
pushf
leave
arpl
shr
xchg
add
and
cmp
dec
or
add
mov
inc
mov
jne
sub
int3
push
pop
bound
stos
cli
push
movs
fdivr
and
sbb
mov
popaw
push
or
pusha
(bad)
stos
xchg
pop
and
jo
mov
pop
fcomp
jg
rol
shl
shl
or
nop
es
xor
push
dec
cmp
(bad)
in
inc
out
push
cvtps2pi
mov
jmp
and
jne
xor
inc
sahf
in
add
cmp
add
popf
cdq
adc
mov
inc
into
fst
fnstenv
xchg
xchg
mov
jbe
mov
xchg
cli
std
jge
xor
clc
mov
and
or
pop
mov
jne
push
(bad)
out
pop
dec
jno
lods
in
adc
popf
out
lods
nop
sub
cmp
inc
fldcw
inc
repnz
mov
mov
push
sbb
add
cs
inc
(bad)
ins
jge
sub
dec
(bad)
jb
and
jno
pop
mov
jmp
mov
push
(bad)
or
xor
int
pop
shl
fwait
call
add
xchg
mov
cld
ds
call
dec
push
jmp
push
mov
jo
mov
cmp
xlat
cmp
push
out
test
fistp
dec
jns
jne
inc
(bad)
aas
push
sub
cmp
xor
jle
dec
push
push
repz
imul
inc
and
sub
jns
ret
add
enter
jns
(bad)
hlt
lock
push
xlat
in
int
out
fdiv
in
loop
sub
in
pop
jmp
mov
out
cli
call
jl
sbb
jnp
jno
mov
inc
scas
adc
sbb
inc
in
dec
lahf
mov
inc
fild
iret
add
cmp
int3
stos
jl
mov
inc
jmp
gs
mov
add
or
shl
sbb
(bad)
mov
xchg
aaa
(bad)
into
jbe
jl
mov
dec
lahf
jmp
hlt
(bad)
test
mov
jb
cmps
lea
push
clc
repz
mov
outs
xor
outs
cli
ds
mov
sub
mov
ror
les
movs
jg
and
and
xchg
in
js
loop
test
mov
xor
mov
fwait
ret
mov
test
xor
imul
xor
or
fisub
(bad)
(bad)
inc
mov
dec
aad
bound
push
clc
scas
es
lods
sub
mov
fsub
or
sbb
mov
out
sbb
shl
repz
and
jae
stos
adc
rcr
aam
out
and
mov
push
shl
repz
(bad)
fstp
mov
xchg
arpl
xor
sub
or
stos
sar
jo
cld
fwait
inc
ins
xchg
xchg
aam
lock
cmps
ins
pop
xor
div
popf
cmc
mov
shl
popf
ja
sub
jae
call
out
push
ja
xchg
out
pop
xchg
pushf
push
inc
jo
rcl
and
xor
arpl
outs
and
fwait
mov
imul
sbb
(bad)
out
sbb
inc
sub
cld
mov
leave
xor
mov
bound
xor
loop
pop
push
mov
fbstp
cmp
sar
push
add
dec
lea
cmps
aad
je
push
xchg
into
cwde
dec
pop
fidivr
xchg
dec
pop
scas
sub
aad
sub
xchg
jmp
or
adc
sub
mov
(bad)
arpl
pop
faddp
cmc
sbb
fdiv
pushf
ins
gs
and
rcl
xor
xor
mov
imul
mov
mov
cmp
xchg
and
(bad)
pop
mov
mov
sbb
sbb
dec
shr
popf
xor
jbe
pop
inc
push
and
xchg
sub
inc
or
repz
les
sub
in
xchg
xchg
stos
sbb
fld
ficom
cmps
sti
popa
pop
mov
retf
jae
mov
sub
sbb
dec
mov
sbb
push
loopne
fcom
mov
mov
sub
mov
inc
aaa
inc
xor
jne
push
stos
int
(bad)
jl
in
sub
xchg
call
and
(bad)
pop
in
mov
xlat
fadd
xchg
test
dec
div
xor
xchg
inc
push
fbld
mov
xchg
(bad)
into
xlat
push
or
clc
movs
add
mov
(bad)
std
ins
aaa
mov
or
(bad)
add
jp
cmp
push
add
pushf
mov
(bad)
test
in
test
iret
push
loop
or
in
xchg
les
and
fistp
inc
(bad)
jbe
mov
lock
stos
mov
or
icebp
inc
jbe
xchg
(bad)
outs
aas
mov
xchg
ins
or
stos
sub
cmc
ret
pop
scas
popa
das
pop
sbb
add
jecxz
jmp
pusha
and
cmp
cmc
shl
mov
ror
fbstp
mov
mov
iret
or
jae
inc
xor
stos
fsubr
sub
lock
adc
pop
data16
or
es
rol
add
xor
mov
and
in
lods
int3
shl
mov
lea
in
lds
std
mov
mov
test
test
xchg
adc
mov
call
imul
in
mov
ret
mov
bound
sbb
jo
(bad)
or
cmp
push
dec
jge
push
pushf
(bad)
mov
adc
push
or
cmp
int
dec
hlt
push
out
(bad)
je
or
(bad)
adc
jb
mov
test
xchg
cli
fisttp
jle
sbb
arpl
movs
dec
lods
int3
out
popa
jl
jg
repnz
stc
bound
pop
cmp
icebp
in
data16
jle
lods
vpcmpgtb
pop
cmp
mov
sbb
adc
fisttp
mov
imul
int3
xor
aaa
mov
fisttp
cmps
mov
push
pop
push
sub
imul
mov
test
push
add
mov
jp
cmp
clc
push
push
pop
(bad)
call
hlt
push
add
lock
das
sbb
sahf
sbb
jmp
fistp
push
ror
xor
pop
jo
ret
fisubr
xor
and
push
lea
push
retf
(bad)
pop
xchg
div
scas
sbb
adc
ret
mov
pop
int
sub
pcmpgtd
movs
and
jns
(bad)
out
fcmovbe
fprem1
sar
xchg
clc
enter
ror
jmp
leave
stos
or
(bad)
fbstp
ja
sbb
mov
push
jle
jp
cdq
xchg
mov
addr16
mov
ss
retf
jo
ret
test
adc
dec
sub
or
push
dec
mov
loop
pop
mov
add
push
sbb
fs
adc
add
push
rcl
mov
xlat
idiv
stos
lock
mov
pop
pop
test
cmp
movs
mov
idiv
mov
sbb
fs
sar
push
fild
leave
cdq
das
adc
dec
into
nop
into
sub
add
call
mov
push
in
cdq
pop
repz
fucomi
ret
pushf
dec
inc
and
pop
pop
xor
xchg
mov
cli
loope
mov
sub
push
lods
jae
sub
out
les
mov
inc
dec
sbb
mov
test
jl
jmp
mov
pusha
ss
cmps
xor
mov
cld
inc
fmul
daa
inc
out
fdiv
sub
loop
je
daa
cs
sub
or
or
in
scas
(bad)
icebp
repnz
and
pushf
dec
in
pause
test
inc
mov
inc
fsincos
push
xchg
push
mov
dec
(bad)
stos
imul
test
mov
loopne
mov
imul
add
mov
cs
pop
les
inc
mov
add
fstp
mov
test
icebp
hlt
dec
xchg
mov
and
(bad)
aas
ret
xchg
sbb
mov
addr16
lods
mov
push
dec
aad
mov
lods
mov
xor
xlat
shr
fmul
scas
add
int
call
out
mov
lds
pop
call
or
pop
mov
sub
js
mov
scas
xchg
cli
(bad)
adc
ret
push
push
xchg
sbb
and
(bad)
ret
sub
sbb
shr
lods
fisub
scas
lea
sbb
xor
and
cmp
int
fdivrp
loopne
test
pop
lds
mov
adc
stos
pop
sar
pop
repnz
aas
adc
int3
xor
ret
add
and
adc
adc
xor
imul
fsubr
(bad)
mov
cs
xchg
xchg
cdq
in
rcl
ds
cmps
stos
xchg
pop
jne
cmp
ds
in
mov
ja
inc
push
out
shr
fcom
imul
lods
in
inc
ret
xchg
jo
outs
mov
push
in
dec
cwde
stos
nop
push
ds
aam
cmp
pusha
mov
or
cdq
sub
sbb
test
dec
fstp
mov
loop
pusha
push
mov
lock
sub
xlat
cdq
inc
jo
aad
test
push
lahf
fist
imul
fmul
or
push
mov
test
mov
jae
jne
lods
gs
lahf
inc
pop
imul
ins
test
push
out
cmp
mov
arpl
sbb
pop
dec
leave
(bad)
push
add
movs
movs
push
fnstsw
js
fdivr
stc
jp
inc
cmps
mov
pop
jl
cmc
add
mov
mov
(bad)
fwait
retf
or
movs
ins
dec
jne
mov
cmp
mov
mov
mov
sahf
sub
imul
addr16
adc
sahf
aaa
idiv
mov
ret
test
sbb
rcl
out
fsub
out
ins
or
inc
arpl
jecxz
pop
mul
sti
inc
mov
or
sbb
mov
fdivr
pop
ins
pop
popa
mov
xchg
lea
mov
jmp
pop
jge
sti
popa
pop
(bad)
test
mov
xchg
push
(bad)
scas
fstp
mov
mov
jp
inc
aaa
sub
dec
xchg
retf
fsubrp
ss
stos
nop
outs
adc
push
cld
repnz
dec
or
arpl
mov
or
out
cmp
adc
mov
sbb
and
arpl
mov
shr
sbb
dec
rcl
xlat
sub
out
retf
xlat
inc
jnp
cli
scas
or
(bad)
sub
sbb
sub
and
(bad)
xchg
xor
add
outs
test
fdivr
mov
xchg
(bad)
mov
fist
fadd
jae
imul
sub
pop
aam
retf
iret
pop
xchg
outs
jge
or
pop
call
sti
push
xchg
jecxz
cmp
adc
add
dec
jmp
adc
and
cmp
pop
inc
xchg
jp
push
mov
and
inc
push
cld
ja
in
and
pop
cld
ja
jg
mov
dec
rcr
adc
ins
fcomi
or
xchg
jmp
cmp
xor
das
inc
pop
adc
push
ret
add
cwde
mov
mov
inc
inc
les
shr
and
mov
inc
adc
sub
ret
dec
ffreep
dec
dec
push
icebp
int3
dec
stc
shl
inc
xchg
mov
fadd
shl
mov
mov
cdq
cli
(bad)
(bad)
lds
loopne
dec
add
jno
and
push
std
call
pop
jnp
(bad)
mov
xor
pop
enter
mov
mov
call
test
mov
rol
xor
dec
push
ins
mov
sar
cmps
mov
(bad)
cli
push
cld
shr
lock
pop
push
retf
mov
pop
fild
xchg
call
les
sub
and
pop
leave
ffreep
mov
(bad)
jb
jecxz
push
add
xchg
push
adc
mov
adc
mov
fisub
add
or
adc
ffree
push
mov
mov
icebp
and
popf
and
jns
loopne
push
adc
sbb
jne
pop
pop
mov
xor
inc
pop
dec
lods
or
mov
mov
sbb
pop
xor
ins
lods
ins
pop
movs
mov
inc
push
mov
rcl
rcl
sar
(bad)
int
xor
push
popa
push
sub
dec
and
push
dec
in
ret
je
(bad)
cli
mov
jns
aas
or
repnz
jmp
cmp
push
in
sbb
add
cdq
clc
and
(bad)
mov
mov
addr16
(bad)
mov
ror
mov
ins
sbb
cmp
fwait
push
mov
adc
mov
into
mov
and
int3
mov
push
fs
inc
mov
xchg
mov
mov
ret
mov
add
aaa
in
cmp
pop
sub
jecxz
cmps
nop
addr16
jmp
adc
in
(bad)
pusha
daa
pop
jecxz
outs
pop
mov
cmp
xor
push
xchg
cvtps2pd
cdq
retf
dec
inc
adc
cmp
add
adc
dec
pop
push
and
push
retf
imul
dec
mov
stos
cwde
dec
fisub
sub
mov
jl
in
pop
ret
ret
mov
and
jne
shl
dec
out
sbb
popa
mov
inc
adc
sbb
mov
dec
mov
gs
nop
pop
dec
stc
lock
scas
dec
pop
das
mov
mov
gs
xor
ins
xchg
fs
mov
mov
adc
icebp
and
sub
cwde
or
ret
cmp
fidiv
adc
mov
dec
in
add
sub
idiv
dec
jmp
pop
std
mov
icebp
push
xchg
and
js
mov
mov
mov
and
in
mov
out
cmp
cmp
pop
test
xchg
dec
cmp
mov
in
fwait
pop
leave
lock
js
ret
xlat
or
dec
inc
pusha
shl
loope
lock
inc
lea
outs
add
arpl
dec
pop
popf
push
sub
gs
push
jle
in
into
popf
jge
repz
xchg
mov
add
call
mov
mov
test
add
cmp
js
mov
mov
cmp
push
mov
fyl2x
jmp
sub
jae
push
adc
adc
mov
call
cdq
in
add
popf
xchg
xchg
stos
inc
jo
push
jmp
sbb
(bad)
inc
mov
add
fcom
sahf
dec
mov
je
inc
int
fmul
jl
mov
xchg
ins
pop
pop
mov
jmp
mov
nop
xchg
pop
jge
arpl
rol
add
int3
xchg
scas
test
imul
scas
bound
loopne
scas
mov
imul
int
cs
push
adc
adc
cmp
mov
out
push
xchg
push
stc
mov
pushf
ss
sbb
retf
adc
jl
inc
jmp
jp
sbb
test
sub
repz
xlat
in
inc
pop
cmp
xchg
fsubr
cs
xchg
sbb
jbe
repnz
test
aam
mov
sub
cvtps2pd
inc
mov
xchg
adc
add
cmp
repnz
and
leave
xchg
call
mov
mov
sub
xchg
pop
jl
push
mov
push
pop
in
(bad)
jbe
gs
or
int3
in
pop
pop
int
and
xor
sbb
cmp
adc
pushf
jae
lods
daa
out
mov
clc
jne
xor
or
sbb
repz
ret
mov
mov
in
adc
neg
mov
dec
lods
sub
gs
loopne
ffree
fadd
hlt
xor
imul
jo
cli
pushf
loop
inc
adc
pop
shl
rcl
push
jns
out
xchg
jb
test
push
addr16
test
push
out
fmul
mov
push
add
jmp
cli
ins
popa
das
in
mov
dec
and
dec
adc
xchg
ret
or
call
mov
repnz
mov
or
mov
(bad)
(bad)
and
lods
cwde
cmps
lea
xor
pop
push
jp
mov
test
js
ret
mov
adc
inc
das
pusha
mov
enter
jl
adc
loop
jae
leave
lods
call
cs
sbb
mov
jg
sbb
fisubr
xchg
fcom
xchg
mov
dec
xor
jns
stc
sub
sahf
aas
imul
inc
mov
cld
xchg
dec
(bad)
sbb
imul
jmp
push
jbe
retf
ret
jmp
xor
inc
and
mov
test
sub
mov
bound
in
sub
push
(bad)
enter
daa
mov
xor
bound
data16
in
out
aas
add
jbe
xchg
mov
xor
push
push
xchg
(bad)
cmc
mov
adc
push
jg
pop
xchg
dec
scas
sub
sub
int
les
imul
ss
ins
xor
xlat
inc
sbb
hlt
jne
fld
mov
jmp
test
pop
fst
dec
sbb
addr16
sbb
and
cmp
add
pop
dec
push
adc
cmps
fcomi
arpl
jbe
inc
push
arpl
cli
jne
sub
mov
int
or
add
sub
jle
add
call
inc
cwde
jo
popa
sbb
or
pop
or
mov
push
add
cld
xor
mov
jno
lods
in
std
in
add
test
pop
popf
test
or
mov
dec
fmul
mov
(bad)
lea
dec
es
and
out
mov
pop
dec
jne
pop
sub
jbe
dec
jg
cli
adc
out
aad
ret
jmp
ins
mov
xchg
test
sbb
addr16
pop
stos
sbb
sub
rsqrtps
ins
mov
mov
xchg
or
adc
cmp
push
cs
pop
xchg
mov
movs
add
daa
lods
dec
jg
ins
cdq
(bad)
mov
loopne
aaa
mov
or
push
retf
pop
jge
out
popf
sub
mov
xchg
push
scas
cmc
sub
add
mov
icebp
sub
push
push
lods
dec
jl
in
push
jne
jmp
mov
dec
jo
movs
dec
pop
in
fnclex
arpl
leave
adc
outs
inc
retf
mov
das
cdq
push
adc
pop
cs
stos
and
mov
cdq
jmp
mov
fcom
sub
retf
nop
push
mov
adc
adc
sub
arpl
xor
xor
add
cli
int3
xor
lods
sub
xor
out
cmc
xchg
test
pop
ficomp
movs
jae
jp
js
xor
cmp
mov
pop
bound
pop
sbb
sub
or
sahf
add
(bad)
test
enter
push
sub
pop
add
sbb
add
lds
or
ja
arpl
push
adc
jge
test
sti
hlt
cld
and
shr
mov
sub
jmp
scas
in
xchg
inc
arpl
xchg
cli
mov
sub
adc
test
mov
fcomp
add
xchg
inc
add
push
push
cld
mov
push
cmc
(bad)
ror
out
inc
add
ja
push
jmp
call
xchg
js
push
pop
les
scas
or
fadd
nop
test
hlt
stc
fwait
outs
loope
adc
xor
pop
stos
pop
sub
in
xor
cmc
xor
xor
aad
fistp
nop
inc
and
sub
outs
cmps
sub
add
mov
add
loop
sub
xor
adc
in
inc
mov
xchg
lods
bound
std
sub
inc
jmp
mov
ret
test
mov
gs
shl
vshufpd
enter
jmp
dec
xchg
popa
pop
mov
jle
xchg
outs
mov
inc
xchg
mov
cmp
sbb
push
xchg
mov
push
sbb
adc
mov
cld
out
out
xor
or
xor
dec
ret
imul
aas
lahf
push
(bad)
(bad)
sti
shl
and
ins
fpatan
lahf
shl
or
mov
std
imul
jmp
aaa
test
sub
xor
js
in
in
in
(bad)
sub
mov
xlat
mov
popa
push
data16
jg
push
call
inc
xchg
imul
(bad)
jecxz
leave
xchg
jo
stos
pop
(bad)
or
push
rcl
retf
shr
std
out
outs
push
pusha
and
xchg
fnstenv
cwde
mov
or
adc
rcr
pop
repnz
dec
fwait
retf
ins
xchg
mov
(bad)
dec
leave
mov
inc
test
std
iret
and
mov
icebp
pop
sbb
ins
in
call
jbe
aad
push
out
pop
pop
mov
mov
pusha
jbe
or
mov
addr16
jns
sbb
pop
cmpps
push
xor
cmc
push
jne
icebp
retf
cwde
in
add
lahf
push
fcomp
push
cli
adc
in
movs
ja
sahf
sub
and
sub
jns
pop
enter
aam
xor
xchg
stos
ja
pushf
repz
xor
push
mov
inc
mov
and
push
(bad)
fsub
(bad)
xchg
clc
stos
cmp
pop
neg
pop
outs
xchg
lahf
fbstp
aas
jecxz
pop
in
lods
std
addr16
or
(bad)
addr16
dec
loopne
dec
mov
push
test
inc
sbb
mov
retf
mov
inc
pop
xchg
(bad)
lods
jecxz
js
lods
call
pop
jbe
inc
rcr
cmc
mov
sbb
pop
adc
pop
jecxz
pop
in
mov
or
or
pop
aam
sub
xor
cs
imul
cmc
push
adc
jmp
pop
and
retf
fbstp
adc
(bad)
movs
add
mov
push
stc
push
xor
bound
ja
scas
(bad)
sbb
push
ret
bound
add
cli
popa
les
pop
xchg
fcom
lods
xchg
sahf
or
fdiv
out
pushf
shl
arpl
aas
jno
xchg
or
mov
mov
mov
mov
aaa
sub
adc
div
add
ds
inc
jb
cmp
and
fcomp
ja
add
mov
adc
pop
leave
js
pop
out
loopne
push
ins
and
cmp
faddp
mov
mul
sbb
add
stos
fdiv
fwait
jge
or
pop
shr
jns
dec
out
mov
xor
call
xchg
mov
add
retf
inc
fidiv
sub
mov
mov
cli
xchg
cmc
dec
pop
in
repnz
rol
ds
mov
sbb
clc
mov
cmp
rol
fdiv
retf
sbb
jne
loop
push
mov
mov
push
jg
out
ret
sub
mov
imul
and
mov
jo
cdq
inc
mov
shl
jns
jae
pop
adc
clc
mov
rcl
mov
das
imul
rcl
push
rol
jae
call
jecxz
mov
or
popa
mov
fsub
cmp
mov
shl
pop
push
test
imul
cmp
rcr
push
jne
jp
retf
(bad)
retf
or
mov
shr
nop
mov
sbb
pop
or
xor
adc
enter
push
xor
retf
mov
xchg
and
dec
mov
mov
arpl
movs
xor
iret
cs
pop
(bad)
sar
mov
sub
xchg
in
sti
lods
sbb
inc
push
cmp
xchg
jno
mov
sub
cdq
dec
cmc
inc
and
or
mov
pop
lds
xor
pushf
pop
shl
nop
jns
out
cdq
mov
sahf
push
mov
retf
mov
loop
xchg
fldcw
and
lods
cmp
lock
cdq
ja
cmp
mov
pusha
dec
into
jmp
pop
ficom
popf
fs
add
sti
in
shr
push
out
inc
add
(bad)
pop
xchg
popf
loopne
push
aad
popa
xor
xchg
test
outs
mov
jb
add
xchg
push
pop
cmp
in
stos
sbb
add
data16
dec
out
jp
adc
mov
call
test
(bad)
int
aaa
dec
jg
jno
jecxz
iret
in
cmp
inc
out
adc
sahf
(bad)
xor
and
xlat
sub
scas
cdq
sti
lds
pop
mov
fnstenv
aad
pop
popf
push
rcr
or
daa
out
sub
inc
jmp
stos
sar
shl
ins
adc
pop
es
sbb
(bad)
adc
es
inc
xchg
adc
dec
xchg
jb
pop
push
or
xor
add
add
popa
jo
pop
jns
inc
adc
xor
test
sti
inc
push
mov
das
test
pusha
mov
inc
mov
inc
shl
fst
push
aaa
mov
mov
into
pop
mov
jl
(bad)
lock
call
icebp
int
push
push
ffreep
fsubr
hlt
push
xchg
aad
jmp
jne
cmc
daa
sbb
fst
pop
dec
mov
pop
fidivr
pop
cmp
pop
scas
hlt
xchg
sub
stos
push
fidivr
out
cmp
sub
pop
in
xchg
jg
retf
pop
or
stc
xor
stc
adc
or
fcmovnu
out
jg
lods
mov
jno
rcl
ret
sbb
fs
je
aaa
pushf
add
(bad)
popf
pop
and
adc
mov
cmc
cmps
fdiv
cdq
mov
(bad)
lea
xor
and
or
test
test
addr16
mov
push
push
and
push
sbb
sbb
pusha
xor
inc
repz
shr
imul
ficom
xor
shl
lods
lock
pop
and
outs
push
pop
(bad)
fstp
sbb
sbb
data16
mov
icebp
les
std
stc
jae
repz
ins
jmp
mov
xor
and
popa
pop
mov
or
mov
repnz
ret
sar
add
scas
std
add
loopne
add
xor
ja
dec
push
call
call
dec
adc
sub
pop
push
sub
(bad)
enter
mov
ret
push
mov
fcom
push
or
push
std
repnz
movs
retf
or
pop
pop
mov
inc
dec
hlt
cmp
mov
sti
sar
dec
and
adc
pop
lods
add
nop
in
aas
call
adc
popa
inc
es
jecxz
dec
ins
or
add
dec
pop
pop
pop
std
fild
inc
test
ss
dec
aad
mov
sbb
aam
mov
xchg
out
nop
cmps
fidiv
sbb
adc
out
test
aaa
cs
push
push
fisttp
add
inc
xlat
pop
dec
mov
ret
jmp
and
pop
sahf
and
lds
and
es
inc
xor
shr
loop
cmp
psrlq
cmc
scas
ins
movs
xor
stos
fst
push
shl
addr16
sbb
cld
mov
neg
push
push
test
pop
mov
ret
cmps
adc
mov
mov
and
dec
add
push
jno
xchg
into
mov
retf
xor
cmp
rcl
adc
mov
leave
arpl
mov
jae
mov
data16
push
sti
sbb
mov
adc
es
dec
xor
jmp
stos
mov
inc
popa
push
ins
jmp
dec
(bad)
pop
js
fnsave
cmp
(bad)
pop
bound
nop
mov
or
or
mov
lods
scas
mov
(bad)
cmp
call
dec
and
xor
retf
push
inc
popf
out
cmp
mov
sbb
icebp
jecxz
call
pop
xor
sub
add
mov
pop
int
(bad)
cld
xor
and
dec
jecxz
ds
clc
xchg
stos
jmp
sub
lea
push
iret
xor
ds
push
addr16
icebp
cmp
retf
and
xor
rcl
idiv
fcmovbe
mov
push
dec
pop
cmovae
fcom
sar
or
gs
jo
jge
ja
inc
cld
test
jae
loope
push
dec
xchg
hlt
dec
push
sub
dec
jecxz
inc
mov
jge
push
cmps
inc
jg
int3
jne
cld
aaa
and
das
or
retf
sub
mov
les
popf
repz
and
loop
(bad)
cmc
cmp
cli
pop
inc
mov
push
push
int3
sbb
xor
pop
cwde
dec
jae
jnp
dec
pop
ret
sbb
icebp
pop
cli
mov
adc
adc
inc
push
dec
imul
or
iret
adc
and
sbb
aad
pop
ror
fdiv
or
outs
out
pop
pop
sbb
fldpi
lds
xor
jg
add
push
aam
dec
es
jnp
pop
mov
int
ret
fnsave
shr
xchg
call
inc
in
sbb
jl
xchg
in
arpl
inc
nop
call
mov
cdq
mov
loop
jle
scas
ret
pop
mov
ins
popf
fdivr
fimul
sbb
test
mov
ret
jmp
std
xchg
xor
push
div
stc
mov
jp
clc
adc
aaa
mov
sub
imul
jne
sahf
push
out
mov
inc
fdivr
ret
push
std
repz
scas
mov
mov
push
or
int3
dec
cmp
int3
sub
ds
inc
enter
gs
jmp
int3
xor
ins
out
movs
lods
push
mov
mov
and
repnz
xor
shl
std
pushf
push
cld
cmp
retf
mov
scas
stos
add
pop
data16
xor
out
cmps
sbb
stc
inc
fcom
xchg
rcl
mov
xor
popa
bound
push
push
stos
push
or
lods
lds
loopne
rol
in
out
imul
add
mov
push
and
push
jl
xchg
(bad)
pop
cmp
repnz
retf
dec
sbb
test
mov
add
ss
pop
aas
cmp
add
je
mov
or
lods
xor
call
adc
push
out
std
add
add
pop
mov
ins
leave
jb
retf
std
inc
hlt
mov
and
inc
cmp
in
cmp
out
nop
or
aas
pop
pop
jecxz
lods
and
loop
mov
std
inc
movs
mov
push
mov
xor
sbb
jp
jge
enter
jmp
sub
dec
(bad)
add
stc
sub
pop
in
inc
fcmovbe
pop
push
cmp
adc
jg
call
into
adc
jno
shl
xchg
sbb
leave
int3
dec
push
(bad)
jae
aaa
xchg
std
mov
test
into
mov
stos
push
inc
je
mov
mov
mov
mov
cs
outs
and
mov
hlt
nop
aaa
call
imul
mov
jp
mov
out
call
mov
jae
xor
pop
ss
lods
aas
cmp
lock
inc
mov
mov
or
movs
xchg
cmp
ins
mov
shl
xchg
pop
repnz
jmp
bound
push
inc
dec
cmc
dec
sbb
pop
jmp
mov
lahf
or
cmc
pop
(bad)
add
mov
add
shl
jmp
xor
ja
test
sub
or
out
sbb
inc
or
(bad)
shr
or
inc
aam
jno
iret
rcl
lahf
add
cwde
ins
ins
lea
cmp
sub
push
and
pop
(bad)
aaa
lods
dec
ins
cld
jge
jmp
dec
fsub
mov
or
loop
push
mov
push
divps
mov
mov
test
leave
dec
push
push
imul
cwde
les
ss
and
imul
lock
sbb
nop
xchg
xor
scas
jo
xor
not
and
cmp
js
neg
mov
mov
jmp
aaa
jnp
mov
clc
rol
cmp
or
xchg
loopne
imul
or
lock
adc
mov
pop
lahf
jmp
in
mov
xor
xchg
mov
dec
aas
mov
add
mov
xor
icebp
or
sub
ret
test
pop
call
fs
aad
out
add
ror
mov
cmc
inc
pushf
mov
idiv
scas
fwait
das
adc
push
sbb
das
jo
adc
sti
test
mov
cmp
mov
cmps
loope
mov
into
push
push
cwde
and
or
adc
push
jnp
mov
inc
jns
jge
rol
jns
inc
cli
lods
hlt
push
rol
lods
jae
mov
sub
push
mov
outs
mov
scas
out
daa
mov
arpl
mov
jo
cmc
xor
push
sbb
inc
addr16
push
(bad)
call
int
loope
mov
dec
js
and
ficom
pushf
inc
je
in
jge
loope
rol
pop
cld
neg
adc
aaa
sbb
pop
movs
or
mov
int
gs
mov
xchg
sahf
jns
pop
cwde
fidiv
fdiv
add
mov
in
jmp
cmp
(bad)
cmc
test
imul
rcl
jle
(bad)
pop
mov
pop
int3
into
mov
jno
shr
fsub
sub
pop
push
push
or
cmp
xchg
or
aad
es
mov
dec
mov
dec
push
adc
in
xchg
pop
les
(bad)
nop
pop
mov
in
xchg
cmp
aas
dec
mov
push
cmp
pop
push
inc
sub
mov
cmp
mov
mov
out
std
sub
jp
ss
out
std
add
inc
jno
loopne
stos
pop
ret
jae
rcr
sbb
mov
(bad)
xchg
jnp
push
dec
(bad)
loopne
shr
push
jae
in
in
add
pushf
xlat
loop
(bad)
sub
or
xchg
inc
ja
jb
inc
cmp
(bad)
or
xchg
mov
or
out
cmc
and
fmul
fwait
popf
imul
out
test
and
call
fdiv
jmp
sbb
in
xor
jae
idiv
mov
ins
pop
pop
daa
call
cmp
cmp
lods
enter
adc
or
dec
ss
imul
fs
jp
aaa
mov
shl
shl
out
imul
xchg
mov
cld
inc
loope
fneni(8087
daa
loop
mov
cmc
stos
daa
into
ror
fcomp
dec
imul
pop
jae
add
movs
ds
mov
or
jb
pop
mov
push
div
sub
mov
imul
jb
shr
pusha
nop
arpl
pop
mov
fld
inc
dec
fadd
lea
push
sub
shr
mov
stos
sar
and
jmp
xchg
(bad)
fwait
cs
dec
xor
push
lods
addr16
jmp
call
xchg
jnp
dec
(bad)
adc
jmp
mov
mov
sti
sahf
into
cmp
and
xor
arpl
fnstsw
push
lahf
xor
bound
fcomp
movs
enter
dec
outs
pushf
pop
leave
xchg
inc
mov
repz
jnp
daa
inc
adc
pop
lea
adc
xchg
test
popa
cmp
sub
add
cmps
pusha
(bad)
std
jecxz
lds
add
out
enter
test
aaa
xor
bound
sbb
xchg
and
jb
test
rcl
dec
aaa
in
push
cmp
inc
ins
mov
or
cli
dec
jl
test
xchg
cwde
sbb
cmp
inc
fucomp
xchg
daa
mov
jge
call
adc
out
push
(bad)
clc
les
int3
fnstcw
mov
jmp
and
sbb
push
aam
mov
cmp
test
test
(bad)
sub
xchg
inc
xor
out
mov
or
jne
pop
sub
sbb
cs
cmps
add
outs
cmp
in
js
push
loope
inc
mov
arpl
or
push
sete
test
pop
adc
repnz
out
sbb
xchg
xchg
int3
jo
mov
mov
push
arpl
aam
add
jp
sbb
adc
ret
adc
mov
fisubr
inc
stos
sub
jae
mov
xchg
push
stos
pop
xchg
adc
adc
lahf
push
inc
dec
pop
loopne
and
(bad)
push
bsr
lock
push
add
cmps
fst
imul
sub
and
sbb
ins
ja
xor
push
out
inc
xlat
dec
je
fwait
pusha
add
mov
mov
jns
xor
sbb
or
arpl
sub
push
sub
and
loop
add
inc
fsub
(bad)
(bad)
sub
inc
cmp
mov
dec
enter
push
inc
sbb
xchg
das
sub
std
repz
adc
and
sub
(bad)
dec
mov
mov
adc
jl
fadd
lahf
xor
movs
cmp
push
and
inc
or
adc
push
das
ffreep
daa
loope
sbb
jno
mov
sub
adc
in
xchg
out
dec
pop
and
push
pop
ss
loope
out
mov
or
xchg
rol
retf
jp
pop
cli
and
jne
push
xor
sbb
mov
jmp
loopne
mov
inc
dec
xchg
je
sbb
mov
mov
(bad)
sbb
push
les
adc
add
dec
xchg
mov
rcl
dec
xchg
inc
xchg
mov
mov
fcom
mov
xor
sub
jp
ins
rol
cmc
popf
mov
out
in
aaa
fild
es
mov
(bad)
xor
mov
hlt
out
out
mov
ret
(bad)
shl
or
fdivr
sahf
sbb
jp
mov
mov
xlat
add
scas
mov
ret
jge
pop
xlat
and
data16
pop
rdmsr
fidiv
sar
sbb
push
out
xor
cmp
aam
lea
xchg
xor
dec
je
stos
aas
or
xor
repnz
hlt
dec
loop
repz
test
arpl
or
dec
inc
es
aas
push
aad
aam
sbb
rcl
ss
aas
or
push
dec
fcmovb
ins
pop
dec
aam
or
ins
adc
sbb
pop
aaa
imul
ins
jge
loopne
xchg
mov
xor
shr
mov
psrad
rol
sub
lds
mov
jmp
pusha
mov
movs
inc
das
int
push
adc
mov
cld
out
data16
mov
sar
mov
sbb
jmp
jns
ss
scas
cmps
sbb
das
rcr
xor
call
out
dec
ja
add
mov
push
std
mov
mov
cmp
cmps
mov
in
fimul
xor
adc
fwait
jae
mov
jecxz
add
add
jb
xchg
pusha
cdq
fild
out
cmp
data16
test
inc
lods
les
lea
jno
pusha
je
pop
sbb
enter
cli
(bad)
push
xor
fidivr
sub
inc
or
xor
pop
sti
pop
mov
cmp
mov
jg
call
pop
push
cmp
jb
sbb
das
pushf
lods
pop
or
sbb
jno
jne
dec
mov
std
enter
pop
lods
aaa
cdq
loop
add
nop
pop
dec
cmp
pop
cmps
add
hlt
pop
add
inc
mov
ins
int3
cmp
retf
jecxz
mov
add
fs
lods
cmp
mov
and
je
fild
cmp
inc
and
sub
cmp
ins
xor
iret
mov
cmc
stc
pop
sbb
and
xchg
inc
mov
popa
cwde
pushf
push
inc
push
pop
adc
call
cmc
aas
xchg
dec
sbb
push
and
push
mov
jl
daa
rol
imul
jmp
cmp
cmp
ret
test
and
add
fwait
iret
ja
ds
adc
aad
stos
hlt
xchg
mov
or
jle
mov
inc
sub
pop
cmps
retf
mov
add
xchg
das
xor
shl
fsubr
inc
ja
ret
or
call
outs
pop
rcr
lods
lock
ret
cmps
dec
jle
add
pushf
cli
loop
and
popf
sbb
mov
mov
xor
pop
xor
cmp
pop
mul
je
stc
mov
scas
fcomp
pop
sbb
lahf
push
push
or
movs
adc
lds
mov
xchg
std
mov
cmp
js
dec
xor
xchg
inc
mov
mov
or
into
mov
fcmovne
adc
push
inc
popf
fucom
dec
sub
inc
into
push
fisttp
popa
aad
test
lock
jbe
push
hlt
push
cmps
inc
pop
loope
loope
jecxz
enter
fcomi
inc
jbe
jl
lock
add
mov
fimul
js
inc
cmp
jmp
out
sbb
fnstsw
lock
inc
xor
mov
sahf
sub
jge
cs
sub
rcr
data16
pop
enter
adc
jg
mov
cs
jne
in
inc
pop
fild
add
enter
mov
call
(bad)
sbb
mov
imul
xchg
addr16
aaa
push
stc
mov
inc
std
(bad)
rcl
dec
hlt
or
jg
outs
(bad)
dec
in
push
rol
in
xchg
and
aad
push
(bad)
cmps
jle
jmp
or
pop
leave
fnstenv
mov
scas
mov
dec
add
(bad)
nop
(bad)
lods
xchg
or
cmp
dec
aam
jp
ror
arpl
push
xchg
stos
mov
ret
mov
fst
repnz
sbb
fisub
(bad)
cld
and
adc
das
imul
popf
mov
adc
push
pop
xchg
and
pop
push
xchg
outs
outs
imul
(bad)
(bad)
pop
sub
or
cmp
jge
jne
out
jl
pop
scas
sti
inc
cmp
mov
bound
mov
sbb
adc
jg
test
je
pop
and
xchg
add
cmp
stos
sub
popa
pop
dec
aam
mov
jle
fimul
mov
inc
mov
fnstsw
push
sub
and
icebp
fisttp
inc
scas
dec
jecxz
adc
adc
aad
and
mov
and
icebp
(bad)
aad
push
add
loop
fs
mov
idiv
xor
ret
fcmovnu
dec
ja
mov
sbb
shld
push
cmp
xlat
fs
js
fcomi
push
dec
cmp
mov
js
aad
imul
jo
dec
or
mov
je
sbb
push
or
adc
xlat
add
push
xlat
xchg
mov
scas
shl
push
jge
(bad)
or
mov
out
xchg
mov
inc
jne
ror
pop
sar
xchg
pop
cmp
test
dec
inc
sub
cmp
iret
bound
iret
add
movs
sbb
inc
fisub
adc
or
push
mov
xlat
sub
sbb
mov
or
je
pop
jmp
add
ds
lock
je
or
and
stc
mov
lea
mov
jle
xor
jmp
jnp
jp
sahf
jo
scas
pop
adc
or
call
mov
fs
adc
sbb
jmp
push
push
mov
mov
add
popa
sub
cmp
data16
xchg
add
mov
outs
lods
pop
jb
popa
jecxz
mov
sub
sub
mov
xchg
cli
sbb
jb
std
or
shl
clc
inc
imul
push
ja
pusha
push
enter
das
push
mov
inc
aam
xchg
push
jecxz
sub
mov
mov
sub
das
inc
pop
sbb
clc
outs
mov
adc
lods
loop
pop
test
rol
push
mov
xchg
or
ja
or
aam
xchg
push
sub
in
add
pusha
cmovl
nop
push
add
data16
sti
mov
repz
pop
cmp
daa
js
xor
push
sar
ror
push
jl
push
scas
in
ret
mov
mov
push
cmp
pop
jno
loop
pop
jecxz
outs
xchg
loopne
and
ja
test
pop
icebp
shl
cwde
add
mov
imul
mov
out
xchg
data16
test
inc
cmp
xchg
fisttp
pop
(bad)
repz
xchg
pop
sbb
icebp
cdq
aas
scas
aad
into
sbb
ds
je
jno
pop
es
and
inc
cwde
leave
stc
sbb
and
push
jbe
ds
rol
and
lds
xchg
xlat
and
sbb
pop
xor
lods
xor
pop
sbb
loopne
xor
repz
push
sbb
(bad)
iret
xchg
mov
mov
dec
shl
fld
add
sbb
shr
or
retf
shr
repnz
fist
and
push
lods
sub
adc
arpl
ret
add
scas
jb
sub
sub
cmc
cmp
mov
scas
pop
mov
stos
repz
sahf
add
and
leave
nop
inc
sti
rol
sub
pop
test
sbb
test
jmp
test
mov
sbb
jmp
push
mov
out
in
cmps
loopne
sub
scas
xor
loope
clc
push
xlat
dec
cmc
jno
push
pusha
dec
popf
iret
jmp
mov
sbb
scas
cwde
mov
and
ret
add
out
dec
inc
mov
pop
les
fwait
add
inc
jno
clc
outs
mov
imul
shr
adc
imul
jmp
xor
scas
test
test
inc
jmp
push
mov
push
xor
sbb
add
or
ror
(bad)
aad
popf
mov
jo
push
mov
adc
pushf
cld
jns
aad
pop
mul
fnstenv
lods
popf
inc
sbb
mov
adc
xor
pop
int
xchg
cdq
push
mov
fisttp
pop
mov
outs
adc
shl
icebp
outs
mov
cmp
test
hlt
aad
mov
leave
add
jmp
mov
js
jae
retf
dec
and
(bad)
ds
inc
pop
mov
push
inc
retf
stos
inc
xchg
nop
xor
pop
sbb
mov
loopne
adc
mov
jmp
xor
cmp
loopne
xchg
mov
xchg
inc
pop
test
cli
popf
adc
jecxz
gs
retf
adc
fwait
(bad)
xchg
cmp
cmp
push
mov
ins
xor
cmp
imul
sbb
jp
cmp
cmps
sbb
mov
inc
sbb
xchg
push
mov
jbe
or
loop
add
dec
push
or
out
mov
cmp
push
inc
cmp
enter
mov
push
mov
or
cdq
js
hlt
cmp
fst
jo
push
cs
cli
mov
xor
cmp
jl
mov
jo
push
imul
jg
and
adc
leave
ret
adc
aaa
sti
imul
shl
rol
enter
gs
jne
inc
outs
aad
repnz
pop
jmp
out
scas
push
add
cs
cld
lods
adc
ficom
in
imul
jbe
rcl
addr16
mov
mov
pop
in
dec
jno
stos
jg
pop
dec
mov
jo
iret
(bad)
cdq
xchg
sbb
mov
dec
je
xlat
push
mov
cwde
test
mov
sub
lds
ins
movs
and
mov
xor
add
shr
inc
lock
adc
inc
add
sbb
hlt
retf
push
xor
in
gs
in
cmps
cmp
or
cmp
dec
sbb
adc
adc
xchg
ret
and
xor
fist
aam
ins
add
push
mov
jnp
or
scas
pop
fsubr
dec
push
pop
jns
jle
or
jno
pop
and
movs
imul
aaa
lds
sub
fstp
push
xchg
cmp
dec
arpl
adc
sbb
arpl
xchg
or
fs
js
lds
lods
in
out
inc
xchg
mov
inc
jg
fdivr
or
pop
enter
sbb
mov
ds
xchg
jne
sar
iret
and
int
xor
xor
int3
lock
push
mov
ficomp
mov
fs
add
push
ror
cdq
mov
bound
pop
add
sbb
pop
sbb
adc
arpl
mov
fxtract
lds
out
out
pop
enter
ret
push
mov
dec
mov
cmp
into
(bad)
pop
hlt
stos
fldenv
adc
dec
in
or
imul
pop
enter
push
sti
pop
and
loopne
mov
popf
mov
out
pop
jmp
push
mov
(bad)
rcl
dec
cmp
push
push
pop
ror
dec
call
xor
add
retf
push
rcr
std
movs
arpl
mov
(bad)
int
mov
xchg
outs
popf
mov
cmp
inc
int
popf
xchg
call
jl
mov
pop
adc
xor
mov
inc
or
sahf
inc
fdiv
xchg
lods
sbb
(bad)
xchg
mov
shr
dec
jmp
pop
mov
push
mov
aas
out
dec
adc
int3
push
push
ret
popf
je
out
add
dec
push
test
in
jns
test
cdq
mov
lds
push
jns
out
inc
stc
out
or
push
pushf
popa
mov
ja
daa
or
test
or
inc
or
sbb
push
fwait
push
lock
or
xchg
adc
mov
mov
push
ja
pop
or
dec
lods
inc
retf
dec
adc
int
add
pop
lea
and
arpl
xor
or
xlat
and
aas
or
jmp
mov
movs
sub
cmp
imul
mov
mov
pop
and
jmp
ins
hlt
ss
ds
in
loope
push
add
jb
mov
xor
rcr
jnp
mov
add
arpl
inc
jae
gs
inc
daa
aad
pop
data16
aaa
sbb
jl
loop
loopne
push
in
cmp
jmp
xor
mov
retf
lods
in
cmp
dec
inc
cld
pop
aaa
(bad)
ds
inc
ret
aad
sub
mov
(bad)
fnstcw
xor
aam
mov
dec
imul
push
scas
or
lahf
mov
xor
dec
fs
add
sub
sbb
outs
mov
imul
aas
sahf
imul
fst
in
ja
arpl
adc
xchg
adc
(bad)
push
aas
inc
mov
movs
fild
xor
icebp
xchg
fmulp
mov
sbb
sub
jmp
dec
loopne
pop
in
retf
mov
scas
enter
ret
jne
retf
lea
data16
ja
lock
and
lods
lahf
lea
pop
movs
je
mov
pop
sbb
retf
jbe
(bad)
and
shl
hlt
sub
sbb
and
xchg
push
jo
xchg
xor
test
cmp
push
mov
mov
xchg
inc
pop
repz
loope
mov
xchg
test
sbb
test
jmp
push
ret
nop
jge
or
jb
fist
daa
cmp
push
push
mov
jmp
dec
int
mov
dec
add
loopne
mov
mov
pop
add
lea
sbb
cmp
ins
mov
fs
mov
pop
pop
nop
sbb
repz
stos
ret
out
or
hlt
jmp
cwde
mov
or
adc
pop
fsubr
or
xchg
cmp
ins
mov
arpl
pop
inc
rcr
mov
sub
jmp
dec
lock
mov
jo
loopne
mov
ror
aam
mov
pop
pop
sbb
loop
xchg
xor
adc
jle
fidivr
fxch
dec
jp
lock
add
cmp
pop
out
pop
adc
adc
xlat
add
mov
inc
sti
add
imul
daa
fbld
daa
push
jl
cmps
gs
mov
mov
jne
mov
cmp
jge
pop
(bad)
lahf
popa
cld
sub
and
sbb
daa
push
popf
inc
xor
or
xor
and
cwde
cmp
sub
leave
mov
or
retf
retf
push
push
xor
add
or
mov
sbb
(bad)
and
sbb
xor
inc
push
mov
jecxz
in
hlt
mov
push
xchg
xchg
retf
aam
ins
push
sbb
jnp
pop
mov
adc
cmps
inc
imul
repz
stos
cmp
mov
addr16
out
and
ja
pop
pop
out
xchg
xor
push
jmp
test
mov
fidiv
retf
fcom
sahf
jnp
jecxz
add
dec
cld
push
adc
aas
and
outs
xor
and
std
inc
lods
out
nop
in
push
push
sar
jg
mov
mov
add
xchg
push
xchg
push
retf
frstor
hlt
sbb
inc
push
mov
test
or
cmp
mov
xchg
sub
ficom
sbb
push
and
cmp
jnp
movs
loope
ins
push
inc
jns
sub
aaa
ror
sbb
dec
jnp
cmc
sbb
test
shl
sbb
mov
jno
sar
adc
push
addr16
fdiv
sbb
jns
inc
jo
pushf
pusha
pop
add
pop
idiv
dec
xchg
(bad)
xchg
bnd
add
test
jo
dec
sbb
cli
cmp
adc
int3
outs
and
adc
cwde
movs
inc
int3
inc
invd
mov
mov
dec
fild
aas
jl
(bad)
jnp
sbb
movs
sbb
dec
scas
dec
stos
rcr
sbb
push
adc
jb
cwde
pop
pop
xchg
leave
lods
xor
fild
lea
push
ror
adc
sbb
les
adc
out
out
xlat
xchg
mov
sub
dec
adc
sti
(bad)
mov
pop
mov
adc
jl
ret
cmps
jg
inc
clc
ret
ret
loop
fs
mov
jmp
jmp
pop
std
jp
dec
dec
mov
lock
inc
push
mov
cmps
imul
mov
rcl
out
dec
or
jp
jmp
mov
daa
fimul
lock
sahf
mov
inc
mov
retf
lods
sti
mov
imul
je
add
mov
add
lods
fcomp
pop
lea
adc
sub
aas
xchg
jae
adc
or
daa
xchg
out
mov
pop
ror
push
pop
call
push
sub
push
std
test
div
das
movs
outs
mov
jmp
push
pushf
outs
(bad)
and
pop
jle
cmp
mov
not
ror
mov
pop
mov
push
add
stc
pop
loop
push
mov
jnp
mov
in
cs
jg
movs
cld
mov
push
pushf
pop
imul
and
pop
mov
and
or
pop
jg
hlt
shr
je
xchg
std
outs
(bad)
or
or
sub
dec
dec
repz
sub
(bad)
stos
sar
mov
rol
iret
mov
mov
pop
pop
push
jg
clc
mov
popf
jb
loope
repz
lods
outs
(bad)
out
mov
push
push
push
mov
mov
lds
outs
retf
jl
mov
jmp
mov
sahf
cmp
mov
aaa
in
push
push
cmp
add
sbb
and
or
mov
out
jmp
loop
jae
push
cmp
pop
hlt
sbb
shr
add
jmp
jnp
int
pop
jne
adc
popf
jg
shr
test
loop
rcl
ret
out
cmp
inc
rcr
xchg
mov
movs
and
add
and
out
int
xchg
push
les
dec
ret
movs
sbb
adc
(bad)
add
push
fidiv
push
xor
sbb
fisubr
cmp
cmps
jns
push
(bad)
or
fs
cmps
loop
adc
jge
test
loope
aam
mov
add
lods
fs
mov
push
nop
ret
imul
adc
and
int
retf
mov
(bad)
das
icebp
push
test
sahf
ins
push
jne
jmp
cmp
sbb
sbb
out
xchg
mov
cmp
push
adc
loop
or
into
sbb
jle
pop
dec
push
out
mov
int3
xchg
ds
pop
sub
hlt
add
stos
imul
clc
shr
pop
lods
jmp
dec
js
jmp
lea
inc
in
in
pop
repz
jg
push
inc
clc
out
idiv
shr
and
stos
inc
cmps
pop
mov
daa
sub
pop
pop
xchg
pop
inc
cmp
xor
in
popf
jge
lds
cmps
sub
cld
sub
out
sub
push
or
mov
enter
pop
rcl
push
cld
xor
ja
mov
adc
mov
inc
jecxz
push
into
pop
scas
and
int
inc
jmp
cmps
clc
cmp
add
push
push
outs
pushf
fs
outs
push
arpl
xor
add
push
mov
imul
call
leave
in
adc
test
jns
fwait
inc
cmc
out
out
daa
js
mov
repnz
leave
out
xor
les
ret
inc
jmp
dec
mov
retf
ror
movs
mov
xor
jle
or
cmp
aaa
mov
cli
mov
icebp
sub
hlt
pop
mov
jmp
popa
push
repz
mov
fcom
arpl
pop
jns
nop
idiv
scas
xchg
cmp
imul
cmps
loopne
or
les
or
and
loope
repnz
sub
out
movs
es
push
movs
into
ror
popa
push
daa
push
dec
ss
cmp
ret
pop
nop
es
ss
mov
push
cs
adc
ja
jl
mov
movs
cwde
retf
cmp
pop
xchg
into
or
mov
cmp
lods
cmc
sbb
cmp
jmp
mov
inc
sub
fsave
daa
lahf
mov
cmp
out
pushf
and
data16
retf
wbinvd
sbb
push
pop
mov
hlt
inc
pop
iret
xor
popa
mov
mov
pop
lock
add
stos
and
jmp
jb
inc
aaa
ficom
sub
frstor
int
push
dec
and
sub
mov
dec
sub
cmp
inc
mov
adc
mov
fiadd
push
adc
xor
add
jo
ds
ja
addr16
call
loope
and
mov
test
mov
out
xor
enter
retf
pop
jae
and
dec
fs
pop
call
je
leave
loop
leave
lods
xchg
(bad)
enter
mov
adc
add
and
movs
mov
xor
aad
std
daa
scas
pop
repz
xchg
push
adc
popa
scas
ret
dec
dec
mov
test
neg
ins
loop
out
in
ret
fs
lea
imul
sbb
cmp
mov
mov
aaa
inc
adc
fnsetpm(287
ds
shl
pop
pop
or
lods
in
or
inc
rcr
in
add
jae
xchg
(bad)
push
jl
shl
fnstsw
sbb
and
arpl
jno
dec
cld
repz
adc
mov
cli
sub
xor
add
inc
pop
mov
xchg
ret
ret
mov
jae
inc
rcl
repz
out
enter
cmp
repnz
jp
enter
enter
cmp
out
and
sub
xchg
adc
add
mov
movs
add
out
pusha
daa
sub
pop
jecxz
sub
jle
es
inc
pop
inc
cli
outs
pop
jmp
imul
cmp
xchg
lock
ror
(bad)
adc
lods
popa
adc
mov
mov
cmp
dec
inc
shl
push
loop
lods
sub
cwde
cdq
into
mov
dec
arpl
mov
icebp
adc
jmp
and
dec
or
mov
aam
xlat
xchg
mov
xchg
xor
(bad)
shl
cdq
je
jg
mov
sbb
iret
jmp
and
sti
mov
xchg
push
lea
push
dec
mov
mov
and
repz
stos
and
pusha
ins
sub
add
sti
mov
mov
gs
sub
out
outs
mov
mov
ficom
das
sbb
(bad)
push
pop
jo
or
jne
imul
sbb
leave
xchg
jl
adc
xor
adc
pop
add
or
jne
jno
mov
push
lahf
retf
mov
inc
mov
ds
or
cmps
pop
jp
loope
sub
test
and
dec
inc
es
sub
enter
cwde
fs
call
mov
int3
cbw
div
jg
loope
in
js
mov
fadd
xor
sub
(bad)
adc
or
cmp
and
fcomp
push
jns
aas
mov
jne
and
xor
sub
sub
jge
stos
aaa
mov
cmp
(bad)
data16
xor
push
xor
pop
cmp
sbb
fwait
retf
aas
data16
jae
out
sbb
xor
jns
mov
inc
pop
mov
lock
sbb
add
pop
cs
cld
cmp
push
cmp
inc
add
dec
(bad)
loope
out
mov
pop
inc
inc
lock
imul
jne
vmovapd
mov
ja
dec
imul
retf
mov
jbe
ror
(bad)
pop
imul
in
arpl
mov
mov
(bad)
aas
push
mov
adc
or
xchg
jb
cmp
cmp
add
rol
loopne
and
inc
push
lods
mov
mov
xchg
mov
pop
arpl
sti
sar
mov
hlt
pop
mov
and
fwait
jns
jmp
rcl
sar
or
outs
mov
add
mov
shr
loope
dec
add
cmp
dec
out
xchg
xchg
loop
inc
call
ret
or
imul
aas
add
(bad)
retf
dec
dec
test
into
jle
jle
addr16
stos
daa
xor
movntq
cmp
retf
ror
mov
mov
cmp
add
jge
out
push
ds
push
mov
jae
adc
cmp
and
ret
dec
push
cmps
sbb
or
ret
rol
cli
out
arpl
test
test
xor
(bad)
hlt
fst
pop
cmp
setnp
mov
je
stos
(bad)
dec
push
mov
aaa
cmp
test
call
and
int
pushf
cli
jo
sub
mov
and
in
xlat
sbb
fadd
bound
enter
push
dec
mov
data16
popf
rol
xor
mov
mov
push
jmp
add
push
dec
aas
or
pop
or
mov
es
mov
ficomp
xor
sub
jne
sub
inc
push
aaa
or
movs
jecxz
pop
in
pop
pop
daa
jae
pop
inc
js
(bad)
cmps
push
clc
inc
stc
neg
loopne
jbe
ins
mov
mov
adc
sub
dec
das
sbb
aaa
repz
mov
fwait
inc
(bad)
pop
sbb
jne
stc
aad
xchg
xor
add
test
cmp
mov
xor
(bad)
pusha
sub
ds
out
push
pop
push
mov
imul
and
jecxz
lock
mov
lods
sub
ins
jmp
sti
and
rol
push
movs
xchg
leave
mov
sbb
jbe
fldenv
and
popa
pop
leave
cmc
xchg
mov
je
add
add
jae
test
sbb
push
xchg
push
fwait
cmp
sbb
cwde
push
mov
adc
and
outs
fs
sbb
sti
retf
inc
pop
mov
push
xor
or
ds
and
out
push
adc
xchg
sub
lea
lahf
fwait
mov
pop
fwait
aam
mov
ret
out
shr
nop
hlt
popf
or
(bad)
cmp
pop
hlt
sbb
push
mov
mov
call
push
jnp
xchg
xchg
push
mov
sar
scas
add
mov
outs
scas
or
jbe
dec
clc
daa
mov
das
shl
retf
sub
pop
push
ror
ret
rcr
cli
jg
pop
pusha
mov
xor
(bad)
cmp
mov
mov
aas
loope
push
(bad)
cmps
mov
jne
and
retf
dec
cli
mov
push
sbb
adc
and
and
adc
lea
and
or
fwait
mov
fiadd
sbb
jb
pop
jbe
adc
ret
xor
pop
in
aaa
inc
inc
in
dec
mov
fisubr
push
jo
pop
xor
xor
mov
sub
ret
jecxz
mov
add
ins
fucom
or
pop
xor
xor
push
sbb
or
add
mov
inc
stc
outs
shr
ret
push
jmp
mov
pop
push
shr
jmp
popfw
mov
pop
xchg
adc
sbb
ja
(bad)
call
test
or
mov
xor
lock
pushf
mov
stos
mov
cs
out
xchg
fdivr
cmp
pop
adc
inc
push
xor
fwait
and
out
fist
push
pop
sub
out
stos
mov
sub
aas
call
push
pop
stos
sti
mov
add
dec
data16
pop
push
or
mov
mov
into
and
sbb
aad
ins
push
push
repz
mov
or
mov
pop
fist
sub
scas
out
es
jae
aam
adc
adc
outs
adc
sbb
in
sub
xchg
nop
(bad)
aas
in
push
sub
mov
dec
sahf
jno
mov
in
data16
push
dec
push
ficom
push
adc
push
mov
and
push
cmc
adc
xor
rcr
xchg
out
dec
cmp
fwait
mov
ja
dec
pop
out
jp
push
jle
mov
jne
das
scas
fadd
mov
test
shl
pop
jae
and
mov
pop
jnp
call
icebp
push
and
lods
dec
call
adc
and
pop
adc
mov
test
xor
sub
dec
xor
cmp
sub
call
inc
inc
je
rcr
mov
rol
scas
pop
call
popa
cdq
push
int3
pusha
or
sub
call
add
mov
repz
aam
rep
in
shr
pop
imul
xor
in
jno
adc
out
jecxz
inc
std
pushf
inc
and
stos
cmps
and
dec
scas
add
xchg
cld
shl
mov
jmp
pop
gs
fwait
sub
test
inc
cli
test
jns
mov
sar
add
cli
repnz
addr16
sbb
out
mov
pop
push
xchg
push
lahf
jmp
punpckhdq
jb
repnz
iret
dec
mov
mov
bnd
out
and
and
loop
mov
or
pop
dec
add
das
push
(bad)
sahf
push
push
jecxz
cmps
xchg
push
ret
inc
fidivr
jle
ins
(bad)
daa
xchg
pop
xor
int
push
rol
mov
xor
mov
jp
ds
test
mov
push
push
shr
lods
lods
xor
pop
jo
jp
call
jl
mov
fist
adc
fsubrp
(bad)
push
call
(bad)
lock
in
scas
xor
dec
stc
sub
clc
xlat
jecxz
pop
xor
xor
bound
nop
xor
push
sbb
adc
cmp
mov
xor
rcr
aad
test
adc
sub
fdivr
shr
sub
push
xchg
ret
fsubr
and
xchg
cmovbe
sbb
aaa
xlat
push
ss
or
dec
jmp
inc
mov
fcomp
jecxz
dec
fist
mov
adc
and
and
mov
mov
enter
nop
sbb
retf
inc
scas
or
aaa
sbb
xor
push
js
outs
fisubr
test
adc
adc
lods
cmp
inc
pushf
sbb
aaa
cmp
fmul
lock
fsubr
mov
jne
fild
rcr
mov
dec
add
loopne
sub
xchg
ds
sbb
xor
(bad)
and
fbld
pusha
mov
and
xchg
inc
cmps
dec
rep
retf
les
push
in
pop
outs
or
aaa
ror
ds
in
or
mov
jge
addr16
mov
adc
sub
add
jge
jo
mov
mov
mov
cmp
xchg
or
and
inc
mov
(bad)
add
jae
inc
inc
leave
xabort
retf
push
pop
pushf
cmp
inc
pushw
jo
data16
mov
mov
aas
adc
mov
xchg
xchg
fwait
mov
popf
mov
xor
not
inc
push
aas
pop
ret
clc
icebp
sbb
add
popa
scas
iret
pop
hlt
in
jl
(bad)
or
jmp
fstp
pop
ss
ss
or
push
push
jmp
or
aaa
add
xor
je
mov
push
or
mov
aad
cmp
inc
imul
and
stc
dec
imul
lock
bnd
(bad)
aaa
mov
sbb
xor
int3
lds
jg
cwde
movs
pop
ins
pop
repz
cli
push
in
mov
mov
jle
inc
adc
jb
ins
sub
inc
sbb
xchg
push
xor
mov
lods
xchg
xchg
outs
leave
(bad)
fwait
in
repnz
js
push
pop
out
nop
test
push
lock
(bad)
lods
shl
mov
dec
or
sbb
sub
xor
call
adc
push
test
and
lahf
xor
loope
jmp
inc
mov
or
mov
push
into
int3
(bad)
(bad)
xor
int3
pop
sbb
test
xor
lods
out
lahf
bound
dec
leave
(bad)
lea
sub
pop
push
xor
or
or
popf
loope
call
out
mov
mov
sbb
and
movs
inc
mov
sub
mov
cmc
fdiv
lds
cmps
jo
mov
mov
inc
add
jmp
pop
push
xchg
and
push
pushf
sbb
cs
jg
fild
fcom
in
jl
push
xor
jb
inc
jmp
jns
add
icebp
je
mov
hlt
(bad)
es
xchg
push
shr
xor
push
inc
sbb
stos
out
out
xor
jmp
cdq
repz
or
sub
mov
clc
cmps
outs
test
sub
cmovle
jmp
test
and
sub
sbb
mov
inc
out
dec
lds
pop
sbb
mov
mov
push
sahf
mov
movs
sar
hlt
out
dec
jp
mov
or
push
adc
rol
enter
fptan
aas
jge
mov
adc
pop
cmc
mov
mul
sub
pop
mov
imul
jl
jmp
rcr
test
dec
xor
push
cmp
xchg
sub
xlat
test
or
jb
scas
fsubr
push
dec
dec
shl
or
push
pop
std
mov
clc
push
cmp
or
mov
pop
fmul
int3
xchg
dec
(bad)
call
pop
and
add
sahf
ret
lods
mov
xchg
sub
xor
pusha
fs
(bad)
mov
xor
dec
xchg
mov
and
addr16
int3
clc
and
jl
and
ins
inc
cmp
jge
xchg
aam
stc
mov
idiv
xor
sbb
or
mov
daa
pop
(bad)
cdq
sbb
repnz
fdivr
dec
push
mov
xchg
ins
arpl
(bad)
(bad)
outs
mov
pop
inc
add
ja
lods
jmp
ins
pop
pop
aas
out
or
mov
xlat
sub
pop
cwde
mov
(bad)
icebp
push
jl
mov
cmp
inc
mov
xchg
popa
loope
and
fnstenv
out
sbb
mov
ds
les
xchg
fistp
add
xor
mov
test
jno
js
cmc
loop
sbb
neg
lds
and
mov
out
sti
jae
jnp
sti
xchg
add
ret
pop
mov
and
je
cmps
and
jnp
loopne
shr
inc
arpl
sub
ins
push
test
or
dec
es
jl
in
(bad)
pop
jmp
stc
pop
inc
mov
fwait
cmp
aaa
fs
enter
cmp
jae
xor
(bad)
fstp
mov
and
sub
dec
and
jae
sbb
retf
nop
inc
add
xchg
nop
cmp
in
dec
mov
ins
or
mov
in
in
repnz
pop
add
jae
neg
and
cwde
shl
pop
adc
mov
(bad)
dec
fld
mov
ins
aad
neg
nop
cmp
je
sbb
and
xchg
mov
push
fwait
add
push
lds
fisub
push
lock
icebp
jmp
stc
aaa
in
cmp
jns
mov
pop
(bad)
fidiv
outs
inc
cwde
add
cmp
mov
lods
popa
jmp
cmp
cmp
lock
sub
or
scas
ffreep
(bad)
jns
push
cmp
mov
ror
and
shr
inc
movs
fnsave
rcr
ds
lods
sbb
or
mov
cmps
and
loop
xor
push
mov
jg
jo
xchg
mov
mov
xor
sahf
jmp
psrad
pop
repnz
int3
adc
pop
loop
imul
pop
cwde
nop
call
rcr
mov
sbb
sar
sbb
jecxz
cmps
shr
or
fstp
lea
(bad)
setbe
dec
and
mov
or
push
and
data16
clc
adc
icebp
pop
ror
pop
(bad)
lods
jl
pop
push
xlat
cs
sti
hlt
mov
xchg
popf
mov
adc
dec
inc
pop
pop
mov
cmp
jmp
adc
ficom
mov
push
cmp
loopne
cmp
or
out
aas
jae
les
add
sahf
sbb
out
fcom
pop
mov
scas
mov
adc
js
dec
clc
jne
push
sub
clc
cmps
cmp
(bad)
and
xchg
mov
xchg
jmp
sbb
pop
lea
pop
and
push
adc
out
stc
jae
sti
repnz
mov
(bad)
jg
imul
cmp
or
retf
bound
in
call
pop
pop
ret
rcl
jmp
adc
data16
pop
bound
xor
(bad)
daa
xchg
mov
dec
xor
xor
aam
ins
sub
aam
or
mov
xor
and
mov
fmul
ret
out
mov
int3
das
out
pop
mov
jge
mov
sbb
cmp
nop
iret
adc
loop
pop
repz
les
shr
mov
sbb
jge
dec
outs
xor
fwait
lds
loop
mov
adc
adc
pop
inc
js
push
jnp
cmp
loop
imul
in
sbb
add
loopne
mov
int3
jmp
aam
data16
or
pop
jl
fcomp
or
sbb
lds
stos
jnp
mov
cdq
cvttps2pi
jb
cmp
adc
mov
jle
lods
fwait
scas
jne
in
adc
jle
js
hlt
pop
neg
sbb
adc
mov
out
xor
mov
jecxz
mov
inc
ins
pop
pop
and
push
popf
and
jmp
push
shr
xchg
jns
adc
(bad)
xchg
retf
and
sub
pop
iret
xor
mov
stos
and
pop
jmp
adc
imul
xchg
add
repnz
unpckhps
cmp
push
jo
retf
sbb
sub
xchg
(bad)
and
in
sbb
add
jne
fisubr
arpl
stos
repz
cmc
dec
and
inc
(bad)
cmp
call
pop
push
push
int
mov
xchg
(bad)
push
xchg
jle
adc
fnstsw
and
aas
ss
push
(bad)
mov
and
and
das
retf
sbb
or
out
mov
and
xchg
adc
popf
pop
rcr
das
popf
lock
sbb
and
pop
mov
xchg
xchg
cmp
loopne
cmp
pop
pop
test
shl
(bad)
aam
imul
je
push
jbe
mov
clc
mov
sar
sub
pop
xor
xor
mov
fstp
adc
in
int3
xchg
add
jo
mov
out
pop
cwde
imul
push
adc
gs
xchg
sti
imul
(bad)
jmp
stos
inc
in
call
sti
sub
in
xor
inc
pop
cmps
retf
and
clc
les
sub
mov
fstp
leave
jmp
fdivr
iret
adc
push
cli
mov
test
mov
jecxz
sub
sub
jmp
sbb
mov
clc
jne
(bad)
pop
dec
dec
adc
xchg
fisubr
pusha
mov
ret
repz
test
loop
add
sub
jo
cli
ret
daa
pop
and
fwait
jae
dec
bound
inc
jns
adc
add
and
ror
push
mov
pusha
fiadd
push
jnp
mov
mov
jmp
test
add
and
adc
mov
cmp
cmp
adc
lods
dec
or
xchg
mov
or
aaa
mov
scas
add
cmp
dec
adc
fisttp
add
push
pop
cwde
inc
mov
inc
pop
adc
shl
repz
shl
cmp
sub
sbb
mov
and
xchg
push
ret
cmp
pop
adc
add
popa
jns
ins
mov
adc
lahf
(bad)
fstp
mov
fist
ds
add
popa
push
inc
jb
(bad)
cli
xchg
mov
sbb
cmp
arpl
xor
repnz
ja
xlat
retf
shl
mov
pop
pop
pop
in
sub
mov
std
xchg
push
push
fs
fild
push
cmp
test
mov
push
idiv
pop
xchg
shr
cdq
aad
and
adc
push
movs
out
es
push
ins
mov
xchg
mov
mov
jl
jbe
mov
call
ss
jb
sub
rcr
pop
es
xor
mov
adc
inc
cmp
fadd
and
scas
jb
jle
cmp
and
xlat
mov
push
cmp
jg
xlat
call
arpl
popf
sar
mov
push
push
outs
xchg
mov
and
ja
push
cmp
int
inc
jmp
or
ret
and
and
scas
jbe
or
mov
sbb
pusha
inc
add
call
pop
mov
pop
pop
rcl
or
sub
sbb
cs
add
(bad)
lods
out
fsubr
(bad)
lock
pusha
pop
cmp
scas
out
add
add
pop
sub
mov
jecxz
out
jne
pusha
mov
mov
mov
test
icebp
and
ficomp
test
in
push
inc
out
sbb
xor
pop
dec
fstp
ret
popa
jo
xor
adc
scas
xor
dec
int
sbb
out
mov
in
cs
mov
cmp
adc
lock
test
dec
(bad)
icebp
pop
mov
mov
xor
call
les
and
outs
test
stos
lds
or
lea
or
outs
xor
out
cli
mov
mov
inc
pop
inc
aam
(bad)
leave
lds
cmovl
pop
in
fstp
stos
pop
cwde
leave
inc
icebp
xor
hlt
xor
test
cmp
retf
in
stos
mov
gs
in
push
int
cld
pop
nop
sbb
xchg
push
aaa
cld
jmp
dec
ins
ds
loopne
xlat
aad
add
xor
nop
shl
push
xor
inc
imul
cmp
push
enter
mov
jge
xchg
jg
adc
pop
mov
nop
pop
adc
gs
mul
jns
sub
popa
push
(bad)
mov
and
iret
add
cmp
sahf
lahf
loop
lods
imul
mov
jno
push
mov
mov
fs
push
imul
inc
or
and
add
mov
jo
jb
mov
xchg
xor
pusha
cwde
fistp
movs
addr16
push
or
adc
inc
jmp
jg
frstor
jecxz
or
push
rcl
xor
pop
pop
cmp
cs
in
mov
push
mov
inc
inc
jo
sbb
mov
adc
lock
mov
adc
jb
test
outs
cld
xchg
fsub
(bad)
jo
mov
push
in
sbb
add
xor
add
retf
add
jne
mov
call
stc
mov
test
(bad)
jg
pop
xlat
mov
ins
in
aas
jmp
iret
adc
pop
inc
pop
(bad)
pop
add
and
push
jle
ror
sbb
and
pop
jmp
or
stos
das
xor
ins
mov
jb
lea
dec
mov
jo
push
sahf
or
movs
sbb
rol
shr
push
mov
aaa
movs
rol
sbb
or
jecxz
adc
out
cmp
adc
push
lock
cmp
(bad)
push
jp
(bad)
out
add
ds
jo
xchg
aas
outs
xor
pop
adc
pop
cld
and
push
(bad)
push
mov
dec
push
popa
pop
xchg
add
addr16
test
jge
jb
xchg
sbb
jbe
push
cmp
jo
sub
jecxz
and
xchg
push
(bad)
fidivr
dec
ss
jne
mov
arpl
out
out
ret
pop
or
sub
je
mov
cmc
cmc
por
xor
dec
pop
mov
push
in
loope
lds
mov
fsub
cli
pushf
es
jne
ret
dec
dec
mov
xchg
sub
test
sbb
in
jmp
jl
in
xchg
jecxz
mov
cmps
fcomp
inc
mov
vpavgb
cmp
aam
int
mov
repz
(bad)
xchg
ja
mov
pop
push
xchg
push
and
loopne
and
jmp
imul
popf
mov
das
xor
adc
sbb
enter
adc
pop
adc
hlt
sahf
mov
sbb
or
movs
jb
xchg
(bad)
sahf
xchg
sub
dec
jo
jne
mov
push
out
shr
cmp
push
cmp
ficom
push
pop
push
(bad)
xchg
dec
mov
dec
test
call
jg
fst
je
lock
mov
mov
pop
and
inc
inc
inc
loope
shl
xor
repnz
xchg
fisttp
push
and
xor
or
hlt
inc
dec
add
cwde
fild
push
jae
mov
mov
pop
jnp
call
shl
dec
and
in
or
cmps
nop
adc
pop
(bad)
jmp
into
in
inc
sub
xchg
sub
and
mov
in
adc
sbb
dec
fcmovnb
loopne
cld
and
push
fadd
mov
ja
ret
xchg
sub
push
arpl
push
aad
(bad)
retf
(bad)
out
jecxz
shl
xchg
dec
daa
cmps
lea
jmp
clc
fldcw
push
jecxz
loopne
js
xor
stc
adc
add
nop
js
shl
popa
outs
cld
aam
imul
inc
jecxz
enter
cwde
in
dec
and
xlat
int3
in
adc
cmp
sahf
dec
stos
add
or
cld
test
mov
and
pop
imul
pop
rcr
or
push
dec
pusha
inc
stos
inc
imul
rcl
data16
cmp
dec
popa
clc
mov
data16
xor
lods
lds
call
mov
mov
cs
sub
pop
push
jl
mov
adc
pop
xor
cwde
test
mov
jnp
mov
and
xor
iret
push
sar
or
pop
repz
fwait
sub
jbe
jb
add
dec
int3
stos
(bad)
data16
jg
call
jecxz
jl
iret
mov
and
xchg
pop
in
mov
push
mov
jle
mov
loopne
dec
(bad)
push
inc
add
or
inc
mov
jbe
popf
push
stos
(bad)
adc
sbb
push
mov
out
std
inc
cmps
push
add
leave
push
pop
dec
shr
mov
xlat
and
cmp
imul
loope
mov
sub
sbb
mov
and
call
mov
jbe
sub
shl
ja
fucomi
js
aam
push
es
out
out
lods
cwde
out
ficom
dec
push
movs
sbb
rcr
pop
mov
push
mul
ret
ss
pop
not
enter
inc
adc
ficom
aaa
xchg
cmp
or
gs
add
imul
mov
dec
loopne
int
into
add
stc
psubusb
mov
pop
ja
ins
arpl
push
fs
aas
mov
sahf
xor
mov
mov
idiv
mov
pop
nop
add
in
repnz
sahf
or
pusha
adc
ffreep
and
retf
or
mov
sub
imul
inc
lods
push
fs
pop
mov
loop
mov
aam
mov
dec
add
je
int
mov
push
(bad)
std
shl
or
add
ds
cdq
mov
or
and
xchg
daa
in
(bad)
xlat
push
enter
mov
ror
xchg
nop
imul
ret
jecxz
adc
ins
pop
xor
je
ror
xor
aad
mov
(bad)
adc
pop
test
test
xchg
out
(bad)
cs
mov
mov
ds
jno
xchg
ret
dec
enter
(bad)
add
mov
stc
dec
cs
adc
stos
jp
nop
adc
adc
and
sbb
xor
xchg
inc
jb
jg
(bad)
fldcw
xchg
test
pop
xchg
sub
fwait
out
mov
loopne
push
outs
ja
mov
scas
xchg
shl
mov
daa
inc
mov
inc
push
leave
out
out
xchg
dec
addr16
rcr
push
(bad)
cmp
popa
lods
popf
mov
or
inc
mov
fild
stc
or
fiadd
sub
test
psubb
mov
xchg
jnp
and
pop
rcl
sbb
std
and
in
mov
pop
mov
mov
jmp
xchg
je
sbb
dec
add
out
outs
jbe
jb
jge
xor
ss
or
cli
jae
in
sub
add
push
out
lahf
arpl
fnstsw
fisttp
mov
and
(bad)
mov
lea
lds
xchg
xchg
push
adc
rep
arpl
ffreep
ds
ja
jnp
dec
es
test
loopne
pusha
or
cld
enter
icebp
outs
icebp
adc
ret
test
dec
xor
jns
jecxz
mov
jnp
mov
imul
inc
pop
xchg
mov
sbb
out
push
xchg
mov
pop
jmp
out
(bad)
xor
icebp
fwait
vmread
pop
jae
inc
mov
dec
nop
data16
and
add
push
xchg
xchg
or
(bad)
and
fldcw
test
lods
mov
add
call
sbb
mov
ret
sub
inc
adc
mov
ss
cmp
and
mov
pop
ins
cmc
inc
ins
add
xchg
pop
mov
loop
push
add
ja
fisubr
fbld
pop
xor
enter
ins
ja
and
xor
xlat
cmp
jp
dec
add
clc
adc
cdq
add
xchg
cmp
scas
popa
xor
adc
cs
enter
pop
cmc
sbb
xor
sub
jge
outs
fwait
loop
or
jle
mov
fwait
jae
fimul
sbb
ins
retf
mov
fld
jnp
cmps
jmp
in
imul
push
sahf
pinsrw
lds
(bad)
pop
push
(bad)
out
cdq
cmp
xchg
(bad)
xchg
add
std
dec
jae
rcl
div
jne
cs
xor
or
mov
pushf
and
jno
inc
(bad)
in
mov
pusha
cmp
mov
add
and
or
dec
scas
push
and
mov
push
mov
mov
popf
adc
cmp
rcl
pop
add
pop
and
outs
push
sbb
test
aam
ror
jg
ret
ret
and
cdq
cmc
sahf
push
and
mov
lock
jge
adc
pop
mov
mov
jns
jmp
push
pop
outs
int
sbb
add
push
add
cmp
shl
sub
lds
pop
xchg
cmp
fild
in
xchg
mov
(bad)
call
sub
pushf
sub
ja
push
mov
fwait
aam
mov
stc
push
(bad)
pop
cmp
icebp
gs
(bad)
stos
clc
pusha
mov
and
stos
mov
pop
adc
and
sahf
clc
mov
jb
ficomp
addr16
fs
cli
xchg
or
stos
rcr
imul
movs
or
enter
scas
mov
xchg
test
mov
ret
jmp
cmp
adc
dec
sahf
test
ss
jbe
fadd
(bad)
(bad)
push
in
shl
daa
pop
adc
cdq
in
xchg
enter
add
pop
xor
mov
into
jne
pop
mov
jp
stos
sub
dec
and
mov
mov
xchg
fscale
out
inc
out
(bad)
mov
xor
sub
rcl
out
sbb
int3
sbb
loop
jmp
pop
neg
out
retf
push
int
in
ret
xchg
mov
repnz
mov
scas
scas
(bad)
out
jp
aaa
jns
cmp
adc
or
pop
mov
aad
jne
cmps
mov
mov
jne
xlat
push
jmp
(bad)
out
add
les
int3
fst
push
clc
in
or
mov
lock
lock
push
mov
and
aad
cmp
jl
scas
daa
inc
aam
mov
xor
pop
loop
movs
mov
cmps
lods
push
(bad)
mov
stos
sub
cdq
mov
leave
adc
loope
add
and
movs
jae
add
or
fdivr
leave
mov
sahf
mov
dec
scas
dec
xor
cmp
out
lods
popf
and
je
inc
fcmovu
inc
push
(bad)
cld
xor
scas
mov
out
dec
add
or
dec
jp
les
dec
or
push
xlat
dec
pushf
jmp
add
cld
mov
ret
ret
rcr
pop
ret
data16
test
inc
daa
push
add
sbb
sbb
shl
loopne
adc
adc
pop
lahf
pop
mov
cwde
xor
mov
jecxz
icebp
shl
(bad)
aam
adc
mov
sbb
dec
cmp
cmp
aam
inc
stc
mov
imul
xor
xor
stc
push
fistp
sbb
test
mov
pop
ret
jmp
lea
mov
cmps
mov
pop
adc
loopne
pop
jb
mov
gs
test
xchg
cmp
popf
lods
mov
hlt
popa
bound
fld
xor
dec
xchg
gs
xchg
jle
xor
add
mov
jmp
jmp
pop
cmp
movs
xchg
mov
or
add
xchg
leave
mov
mov
nop
test
dec
xchg
inc
push
mov
cmps
iret
aas
mov
cwde
lahf
(bad)
push
push
call
xchg
movs
test
mov
cmp
dec
mov
pop
jmp
add
jo
dec
(bad)
push
mov
dec
test
mov
sbb
enter
dec
and
imul
add
mov
in
inc
outs
sub
int
neg
or
aad
push
pop
call
fcomip
inc
sub
jb
mov
sbb
cwde
jecxz
aaa
jl
ja
pop
sub
inc
imul
mov
hlt
cmps
test
pop
rol
dec
push
jno
ret
or
xchg
int3
daa
outs
shl
(bad)
push
pop
xchg
fsubr
pop
add
pop
pushf
hlt
xchg
sub
jecxz
mov
xchg
jnp
sbb
lds
adc
retf
inc
add
pop
mov
(bad)
xchg
sbb
cmps
dec
enter
call
jno
pushf
add
xchg
dec
add
test
pop
div
cmc
cli
call
ret
out
cmp
push
fwait
xor
mov
ss
mov
hlt
adc
dec
jnp
sbb
sahf
pop
js
jp
pop
div
add
mov
mov
inc
(bad)
cli
xchg
call
daa
jmp
pop
cmc
cmp
and
(bad)
ja
add
or
lods
test
pop
fiadd
xor
mov
sub
cmp
push
loopne
adc
jae
ss
into
push
aaa
cdq
mov
push
push
dec
pop
rol
xchg
push
xchg
add
mov
sbb
inc
adc
push
outs
in
sbb
mov
pop
push
mov
jb
mov
jge
das
xlat
outs
icebp
rcl
jns
push
mov
cli
lahf
mov
ins
into
sub
outs
ficom
jbe
and
imul
or
repz
mov
mov
and
sub
fild
je
fcom
mov
jo
push
pop
xor
push
shl
dec
inc
dec
add
push
hlt
or
add
xor
je
retf
push
rol
and
shl
in
mov
adc
jmp
cmovno
inc
(bad)
int
pop
add
mov
mov
add
push
and
lods
mov
mov
scas
mov
mov
push
dec
leave
mov
sbb
mov
mov
add
adc
xor
push
jns
das
inc
dec
std
(bad)
sub
aad
xor
push
sbb
addr16
pop
jnp
lods
xor
aam
out
mov
fisubr
pop
pop
adc
dec
lahf
inc
and
jge
fdiv
test
cmp
xchg
xor
push
test
mov
out
xchg
push
pop
jle
pop
jecxz
jbe
adc
int
push
dec
clc
xor
push
xor
adc
xor
and
sub
sub
mov
int
ds
sbb
inc
or
sar
ins
mov
ss
inc
test
and
adc
fsubr
push
pop
das
sbb
loopne
sbb
ffreep
xchg
icebp
test
fld
jge
out
or
in
mov
mov
inc
jnp
clc
xor
or
aam
pop
lds
jmp
or
or
xor
add
loopne
mov
and
xchg
hlt
and
or
out
push
call
push
push
mov
(bad)
xor
test
ret
lock
lods
jg
jb
add
jo
xor
pop
jae
fwait
inc
imul
repz
push
xchg
pushf
movs
aas
test
mov
dec
pushf
pop
mov
xchg
ins
es
hlt
sbb
fcom
loop
jno
mov
pop
xchg
and
aam
mov
inc
xlat
sbb
push
cmc
push
(bad)
push
sbb
inc
scas
push
iret
dec
cld
jl
inc
repz
stos
mov
shl
ss
push
xchg
sub
xchg
rcl
out
cmp
adc
pusha
xchg
mov
ds
inc
dec
aaa
into
push
loopne
adc
xor
ret
rol
or
inc
jle
cli
mov
mov
popa
in
aam
sub
sbb
push
jae
pop
(bad)
in
fiadd
push
push
mov
ds
push
mov
(bad)
ret
mov
fistp
add
fucom
outs
gs
push
push
shl
mov
arpl
jo
(bad)
out
lock
ds
fistp
sahf
sub
and
and
mov
leave
or
xchg
push
jge
xchg
inc
popf
push
dec
xchg
idiv
jo
push
daa
sub
call
movs
mov
sbb
(bad)
fdivrp
cmp
ret
retf
mulps
mov
cmps
fucomp
sahf
adc
stos
sti
shl
loop
cmp
jbe
in
xchg
dec
push
mov
jle
adc
icebp
test
and
jb
nop
call
add
loopne
push
test
sub
xlat
jle
stos
jecxz
add
(bad)
adc
jnp
cmp
mov
ins
shl
retf
popa
call
and
push
ror
mov
push
fs
mov
jno
mov
mov
test
adc
dec
icebp
xchg
pop
mov
push
lea
and
idiv
(bad)
out
adc
xlat
popa
mov
sub
fs
mov
leave
pop
outs
jbe
(bad)
mov
repnz
sahf
int3
sti
daa
xlat
mov
into
sub
push
xchg
ret
inc
or
sbb
cs
es
fnstcw
add
mov
leave
mov
int3
rol
pop
ret
pushf
mov
sub
cmp
pop
jg
(bad)
sub
cmps
mov
rcr
movs
lea
lock
ficom
sbb
popf
data16
scas
cs
daa
fdivr
ds
xor
pop
or
and
neg
mov
data16
and
loopne
mov
aad
stos
sbb
xchg
cld
xlat
fdivr
xchg
and
out
popa
xchg
mov
jmp
gs
pop
lahf
lea
imul
push
lahf
and
ror
jmp
xor
add
inc
or
clc
movs
adc
mov
sub
popa
outs
in
mov
jle
push
ror
and
(bad)
in
lods
sub
out
int3
dec
mov
mov
hlt
cmp
outs
rcr
imul
cdq
sbb
cmp
jg
ds
jg
add
ja
mov
popa
sbb
adc
fadd
lock
add
iret
les
xor
cmp
out
xor
sbb
add
stc
push
dec
(bad)
popf
stc
arpl
les
int
push
stc
or
cmp
fmul
and
jmp
adc
in
xchg
push
pusha
xchg
jne
or
push
mov
hlt
repz
adc
(bad)
in
out
sbb
popa
pop
push
sar
cld
cmc
inc
add
les
nop
test
fadd
test
(bad)
cmps
inc
add
and
pushf
add
or
xchg
push
movs
push
pop
pop
or
xor
jp
mov
sub
adc
sbb
fs
ins
ss
xchg
call
stos
mov
add
cmp
lock
cmp
aam
(bad)
jb
arpl
inc
and
outs
xor
enter
aad
int
push
sbb
data16
and
push
in
and
gs
jecxz
in
lea
int3
outs
or
mov
mov
mov
pop
push
ja
in
cld
popf
mov
int
and
add
repnz
mov
mov
data16
inc
lds
fcom
mov
bound
lds
pop
cld
inc
mov
in
jbe
jno
inc
loopne
dec
cmp
adc
(bad)
test
mov
or
mov
and
mov
hlt
push
(bad)
jnp
sbb
pop
aad
je
(bad)
cmp
imul
push
(bad)
sahf
mov
sub
icebp
push
and
jl
popa
mov
cmps
pop
adc
cmps
daa
and
adc
add
push
int
shl
movs
in
push
shr
aad
ds
sbb
das
or
mov
adc
cmps
mov
push
sub
out
pop
retf
popa
push
or
mov
int3
retf
mov
daa
xchg
call
cdq
retf
stc
loopne
mov
cmp
fsub
out
mov
inc
xchg
mov
pop
push
data16
lock
xor
mov
test
cmps
xor
repz
ds
xchg
sbb
mov
sbb
inc
mov
in
(bad)
mov
fwait
or
or
ret
std
in
fld
lods
jns
ja
pop
das
cmp
inc
add
mov
and
xchg
xchg
in
sub
and
icebp
adc
neg
dec
retf
add
repz
sub
movs
push
xlat
push
dec
cmps
test
rcl
ds
xor
push
test
or
repnz
and
jp
adc
call
test
jl
mov
dec
add
clc
in
jbe
lock
int
fld
ja
pop
clc
movs
aad
retf
and
add
out
pop
mov
add
repnz
dec
mov
retf
push
fucomp
ret
pop
aad
xchg
mov
pop
mov
icebp
je
in
xor
sbb
in
cmps
pop
xchg
push
data16
repnz
mov
jb
jo
add
jmp
sub
lock
lds
dec
retf
and
cmps
sub
adc
cld
ins
loopne
adc
pop
out
in
ja
and
sbb
(bad)
mov
mov
adc
or
and
sbb
sti
fisttp
movs
push
in
imul
mov
gs
mov
stos
xchg
cmc
fist
dec
icebp
cmp
xor
retf
fwait
pop
cmp
out
sahf
js
dec
popa
and
fldcw
ret
test
xchg
in
xchg
mov
gs
push
sbb
mov
adc
mov
imul
nop
data16
pop
add
pop
pop
stos
fimul
dec
push
mov
ja
or
es
or
sbb
dec
inc
imul
dec
in
xchg
sub
std
(bad)
fiadd
or
imul
es
adc
dec
add
retf
test
dec
pop
loopne
shr
mov
xor
test
mov
shl
add
inc
js
mov
sti
popa
enter
ficom
aad
dec
mov
in
or
push
sti
xor
ss
mov
or
mov
mov
xor
mov
outs
sub
sub
leave
mov
movs
fbld
fwait
in
sti
sub
(bad)
jmp
add
aaa
fwait
ins
push
cld
xor
rol
inc
lods
iret
or
aaa
fcomp
sbb
sbb
aam
stc
mov
jnp
(bad)
push
ja
adc
sbb
mov
lock
stos
push
xabort
rcr
sub
mov
fsubr
jg
out
mov
ror
xchg
stc
jbe
jae
leave
rcr
adc
jle
push
mov
mov
push
pop
cmp
bound
cs
jg
aad
gs
mov
test
stc
shr
outs
call
inc
lods
cmps
in
aas
adc
add
imul
or
push
and
mov
movs
test
cmp
je
mov
js
add
or
mul
in
sbb
std
xor
dec
fwait
pop
jns
sub
push
adc
jmp
or
sbb
or
mov
fcom
test
out
test
cmp
pop
(bad)
pop
mov
sbb
frstor
iret
popa
jmp
pusha
mov
mov
push
fld
dec
sahf
daa
ret
aas
xor
push
jle
popa
mov
sub
mov
test
cmp
xor
fimul
dec
mov
pop
in
arpl
mov
xor
out
jno
jno
mov
addr16
pop
push
lock
adc
xor
out
dec
or
mov
or
xchg
fsub
jmp
add
cld
out
mov
dec
sbb
xchg
adc
dec
leave
adc
lods
ins
adc
jne
out
cmc
mov
repnz
sub
sbb
out
jo
sub
cli
iret
out
gs
xor
adc
xor
jl
cmps
ret
dec
or
and
jne
(bad)
push
pop
jle
jbe
pop
mov
retf
mov
mov
sbb
pop
xchg
sti
cmp
(bad)
cmps
iret
aaa
xchg
xor
fwait
cld
push
xchg
xchg
cmp
out
cmp
fiadd
push
jmp
dec
lods
out
repz
mov
adc
mov
sbb
sahf
pushf
jns
mov
icebp
sbb
imul
xor
outs
stc
and
rcl
xchg
xor
cld
fs
or
xor
xor
mov
nop
jae
movs
xchg
mov
pop
or
ins
mov
jmp
mov
cmp
mov
or
inc
cmp
repz
push
retf
xchg
pop
cmps
add
call
outs
cmp
test
push
push
or
scas
mov
pop
jl
push
icebp
mov
mov
inc
sbb
jmp
shl
rcr
push
and
ds
mov
jnp
sbb
(bad)
shl
and
jno
and
aad
mov
test
push
sub
or
in
rcr
mov
in
mov
add
mov
jp
cmps
lock
xor
out
loopne
and
push
cmp
das
cmp
jmp
fwait
ja
int
pop
pop
repz
jb
leave
adc
adc
fisttp
mov
aaa
push
popf
test
out
aaa
retf
add
aad
jno
mov
mov
xlat
push
hlt
fwait
cdq
js
mov
movs
or
add
bnd
sti
xor
lahf
out
adc
pop
cmp
jl
loope
stc
repz
call
push
adc
cdq
nop
cli
or
icebp
push
jnp
pop
ins
push
or
call
and
into
mov
or
fidiv
jnp
ror
dec
sub
push
inc
cmc
in
add
pop
mov
iret
xchg
sub
enter
or
pop
push
and
and
call
mov
sbb
add
aad
ss
cmp
adc
enter
xchg
(bad)
and
mov
cmp
scas
mov
icebp
inc
push
sti
sar
scas
int3
or
mov
ror
in
mov
and
dec
xchg
pop
cmp
cmp
xchg
(bad)
mov
xchg
idiv
fs
sub
ins
daa
sub
cmp
xchg
dec
sub
mov
shl
out
movs
loop
in
sbb
mov
call
mov
xchg
jmp
xor
pop
in
or
sbb
add
mov
and
nop
(bad)
enter
and
jnp
fwait
or
jae
fs
into
call
and
hlt
dec
xlat
dec
push
movs
add
xchg
mov
sbb
add
inc
inc
mov
out
outs
addr16
or
push
dec
ja
cmps
jae
and
mov
daa
lods
lahf
(bad)
cwde
loopne
pusha
mov
mov
fcomp
xchg
add
int
shr
lods
clc
jmp
or
xor
push
jbe
ret
movs
ins
xor
adc
adc
js
pop
xchg
loope
mov
mov
loopne
clc
dec
push
inc
dec
fcomp
push
sub
sbb
loop
jecxz
out
add
rcl
arpl
jae
and
cli
sbb
jmp
daa
mov
sub
(bad)
in
lods
jecxz
jo
scas
lahf
inc
call
stos
sub
or
rcr
loopne
jbe
mov
js
add
sti
xchg
xlat
adc
jg
movs
div
outs
or
call
cmp
cs
dec
pop
enter
xchg
sbb
call
adc
dec
fcomp
(bad)
and
clc
lods
shr
mov
jle
mov
ins
leave
fld
jbe
and
push
test
outs
pop
pop
test
js
movs
pop
sbb
aad
scas
das
sbb
inc
adc
pop
mov
nop
ins
or
ins
pusha
loope
jno
dec
loopne
sub
adc
je
fnstenv
add
aas
(bad)
jle
and
ror
cmps
jg
inc
int3
xchg
daa
sbb
cdq
adc
call
js
jmp
ss
in
repnz
dec
popa
(bad)
cld
or
jmp
adc
data16
adc
pop
into
rcr
sub
and
inc
sbb
popa
stos
sub
leave
shr
pop
shl
mov
ret
dec
lods
pop
inc
xchg
mov
clc
xor
stos
inc
call
cli
mov
sbb
pop
movs
mov
sub
sbb
aas
adc
cmp
and
fst
mov
cwde
iret
dec
cld
(bad)
test
inc
(bad)
mov
setnp
xchg
add
inc
mov
cs
aam
mov
movs
add
fsubr
or
or
rcl
iret
fst
cmps
ins
je
sub
adc
imul
pop
scas
mov
push
mov
loop
cmp
ins
inc
sub
mov
inc
or
aad
hlt
es
sbb
imul
pop
mov
push
jmp
retf
push
outs
inc
pusha
sbb
mov
popa
jo
lock
inc
in
mov
jbe
rol
mov
in
es
xlat
sahf
jmp
inc
dec
and
mov
in
inc
mov
fwait
dec
sahf
push
sbb
popf
test
jbe
xchg
jno
xchg
retf
idiv
fimul
or
mov
add
xchg
mov
loop
sub
adc
add
cs
sahf
mov
popf
cmp
xchg
(bad)
pusha
aam
sbb
mov
mov
sti
fdivr
clc
add
xor
dec
xor
push
retf
push
mov
repz
in
jp
mov
add
sub
arpl
in
gs
sbb
pop
mov
iret
jmp
push
mov
cs
pop
add
jb
sub
push
jbe
and
jb
sti
clc
mov
mov
cmp
pop
(bad)
inc
sbb
mov
lods
cmp
cmp
loop
in
test
jge
xor
push
fld
fidiv
xchg
jl
sbb
repz
push
pop
jmp
repz
xchg
je
pop
mov
cld
lods
push
test
fdivr
cmc
fdiv
in
pop
outs
dec
mov
sahf
shr
and
xchg
leave
outs
aam
adc
jmp
cwde
sub
mov
adc
movs
sub
xor
inc
push
idiv
out
jp
xor
lock
outs
ret
mov
and
arpl
push
sbb
inc
addr16
xor
test
fldpi
lahf
(bad)
sbb
cmps
(bad)
mov
test
jge
adc
lods
lods
jmp
cmp
lock
dec
push
push
imul
mov
push
sub
ret
(bad)
push
sbb
cwde
sub
push
out
ja
or
je
shl
sub
mov
pop
leave
call
xor
jp
mov
xor
cs
xor
cmp
inc
inc
lea
aas
cdq
daa
leave
cmps
lea
mov
mov
idiv
mov
jbe
(bad)
clc
ins
mov
stc
jne
add
xchg
push
cmp
dec
outs
enter
push
push
(bad)
sar
inc
pop
mov
add
xacquire
(bad)
cdq
push
enter
adc
popf
std
ret
fs
cli
cli
jecxz
xchg
aaa
mov
repz
xchg
repnz
or
fidiv
mov
inc
fs
jb
(bad)
and
inc
mov
push
hlt
or
sub
movs
loope
lock
mov
mov
add
test
jecxz
xchg
xor
ror
je
arpl
call
repnz
pop
jno
mov
psubw
dec
adc
xor
pusha
stos
jp
inc
cwde
iret
lock
icebp
pop
shr
pop
lock
and
cdq
dec
adc
mov
mov
ja
jg
aaa
and
dec
fisub
push
mov
les
add
lahf
dec
jnp
jne
(bad)
fwait
js
ja
jmp
push
test
stc
out
aad
std
xor
xchg
outs
std
jp
aad
cli
es
jo
(bad)
sbb
sbb
sbb
aaa
scas
add
test
(bad)
pop
and
inc
add
cmp
int3
std
or
xor
xor
adc
mov
das
and
mov
repnz
pop
dec
lds
pop
std
mov
fwait
(bad)
ja
sub
test
sar
push
dec
mov
push
imul
mov
movs
lds
add
mov
mov
(bad)
cmps
out
gs
imul
mov
stos
mov
jae
scas
(bad)
mov
int3
pop
mov
add
or
dec
mov
and
inc
jnp
sbb
dec
popf
movs
xor
and
cs
imul
and
outs
stos
retf
pop
outs
sahf
sub
inc
outs
shl
int3
sbb
add
push
fsub
adc
movs
ret
ret
mov
xor
mov
stc
pop
popa
aad
and
jns
je
mov
imul
xor
call
call
hlt
test
pop
sbb
iret
jle
mov
push
and
mov
sub
loopne
xchg
arpl
pop
sti
push
add
dec
je
jp
cmp
cli
pop
mov
adc
lods
fnstcw
ror
push
ins
int
jg
inc
ds
adc
sub
xchg
or
das
pop
repz
lock
xchg
shl
xchg
cmp
mov
jb
bound
dec
arpl
cmp
adc
in
jg
lahf
pop
mov
ret
or
adc
scas
add
pushf
add
sbb
call
mov
repz
mov
xor
stc
xchg
lock
arpl
loope
sub
ds
xchg
sub
mov
(bad)
ds
in
mov
ret
imul
push
leave
pop
or
mov
or
cmc
lods
xchg
push
and
dec
and
arpl
jmp
jne
std
push
push
out
inc
mov
rol
ror
aam
or
or
retf
xor
test
adc
mov
mov
adc
call
(bad)
dec
sti
cmp
int3
aam
mov
or
imul
mov
mov
pop
jbe
je
mov
adc
lea
js
icebp
xchg
push
and
cmp
out
jne
and
cmp
jns
or
push
pop
cmp
adc
repz
mov
sahf
gs
mov
add
adc
xor
sahf
and
bound
das
in
outs
push
push
iret
xor
cs
xchg
aaa
fsub
push
addr16
mov
stos
adc
(bad)
and
inc
jmp
mov
sbb
jecxz
mov
mov
sahf
push
clc
mov
call
push
out
and
inc
ss
mov
push
ins
push
sbb
aam
adc
jge
inc
pop
movs
inc
mov
add
scas
rcr
jl
inc
ret
test
aam
cmps
imul
mov
cld
addr16
cwde
iret
js
gs
add
ins
stos
in
shr
mov
push
inc
out
xor
pop
adc
jno
or
sub
(bad)
jmp
out
jmp
push
cmp
xchg
mov
sysexit
add
mov
rol
dec
dec
pop
in
rcr
imul
and
inc
mov
add
inc
inc
mov
or
sbb
add
in
inc
push
out
dec
mov
dec
ss
ja
hlt
shl
in
inc
pop
and
xchg
sbb
xlat
(bad)
jge
call
fsub
out
xchg
out
inc
and
or
sbb
and
mov
sbb
adc
or
mov
movs
arpl
jno
imul
outs
xor
jle
std
stos
sub
xlat
shr
mov
pop
inc
xchg
mov
fimul
mov
out
sbb
aas
mov
push
xchg
inc
aad
call
bound
loop
cdq
xchg
cmp
xor
test
xchg
retf
shl
hlt
sbb
pushf
(bad)
sub
jne
out
les
xchg
jne
fldenv
and
adc
mov
cdq
mov
add
bswap
xor
inc
scas
not
add
popf
adc
mov
in
mov
mov
scas
in
push
(bad)
and
adc
push
(bad)
fimul
loop
add
in
adc
scas
ins
jbe
gs
fbstp
and
loopne
xchg
mov
retf
add
loop
cs
pop
shl
push
aad
mov
sub
out
and
pop
push
sub
fst
add
in
xchg
push
clc
lock
dec
(bad)
repnz
push
mov
pop
add
jle
popf
cmp
xchg
xchg
pop
inc
ror
xor
rol
mov
sub
mov
mov
lods
call
jmp
cmp
aam
stc
pop
pop
das
lods
fdivr
dec
and
sub
inc
or
test
inc
fwait
or
and
rcl
lods
xorps
clc
pop
sbb
mov
enter
cmps
enter
test
mov
mov
ret
les
and
mov
xor
sar
cwde
pop
inc
int
mov
adc
mov
vmulss
ret
jg
mov
fdiv
or
or
(bad)
jae
push
inc
or
ror
xor
into
sahf
cmp
fild
mov
retf
mov
pop
xor
call
add
lahf
loope
call
xor
xchg
adc
clc
sub
adc
add
push
shl
xchg
out
aas
iret
fsub
outs
call
and
push
dec
or
inc
cmps
push
clc
mov
out
dec
lods
push
aaa
inc
imul
fcmovnbe
out
jp
and
and
movs
inc
fst
mov
cdq
aaa
fldenv
or
or
loopne
mov
sub
xchg
shr
shl
(bad)
mov
mov
test
mov
dec
cmp
cmp
add
fild
into
fwait
mov
sub
in
mov
fsubr
dec
sar
iret
xchg
adc
mov
or
push
adc
gs
nop
jmp
xchg
movs
dec
jg
test
mov
mov
mov
gs
cmc
cdq
mov
addr16
clc
shl
bound
pop
xor
retf
jl
frstor
add
fiadd
jno
sbb
pop
push
ret
mov
ss
pop
sbb
(bad)
int3
mov
xchg
fs
arpl
xchg
mov
xchg
or
sbb
pop
(bad)
daa
loopne
sti
xor
in
clc
fwait
retf
daa
outs
mov
and
imul
fistp
adc
js
fdivp
sahf
xchg
mov
push
pop
fnsave
push
pop
std
mov
push
add
xor
fsubr
xchg
(bad)
jns
jno
or
stos
and
jmp
(bad)
loop
cmp
xor
mov
ins
les
cmp
push
aas
mov
es
mov
jl
es
dec
sub
mov
icebp
fisubr
cli
jle
dec
mov
mov
push
mov
dec
aas
repnz
and
retf
(bad)
iret
iret
loope
pop
jge
push
add
sar
jmp
fwait
ret
xchg
xchg
mov
cmc
enter
lahf
xor
aad
push
mov
loopne
dec
adc
cmp
popf
gs
xlat
mov
inc
stos
xchg
bound
add
in
jo
out
mov
pop
(bad)
outs
(bad)
sbb
mov
push
outs
mov
jecxz
sub
sub
cmp
popf
repz
push
jns
jp
addr16
scas
stc
xchg
pop
push
imul
or
out
and
in
fnsave
pop
add
or
jo
fwait
cmc
dec
mov
out
or
inc
sbb
(bad)
xchg
leave
add
mov
shr
nop
imul
out
xor
popf
pop
das
lods
cmp
repz
push
dec
mov
cld
mov
adc
xchg
jp
cmc
mov
jnp
lods
jmp
inc
cdq
stos
push
push
nop
pop
xchg
retf
adc
icebp
dec
(bad)
jg
ficomp
ficom
(bad)
cwde
ins
xor
enter
jb
stc
(bad)
out
sahf
lds
sbb
dec
mov
jle
adc
mov
jge
addr16
cld
mov
aam
mov
push
shl
jmp
xchg
lods
ins
(bad)
retf
mov
lods
loop
add
cwde
xchg
jle
jne
cld
add
jmp
and
jl
pop
clc
call
pusha
xchg
mov
out
lds
cmp
xchg
enter
cmp
xchg
add
jp
popa
pop
push
dec
or
xor
push
loop
mov
push
in
dec
ins
xchg
(bad)
fadd
inc
out
fstp
rcl
sub
or
arpl
stc
sub
xchg
push
imul
cmp
cmp
sbb
outs
(bad)
aaa
loopne
push
cld
out
pop
loopne
test
aas
das
in
pop
ins
loop
push
pop
inc
add
test
pop
les
xchg
xchg
and
aam
dec
sahf
pop
adc
cmp
inc
sub
test
test
and
cmp
sub
or
xchg
stc
inc
or
std
retf
sub
adc
push
xor
hlt
(bad)
ins
or
aas
not
movs
scas
fisttp
ret
and
xor
pop
mov
push
sbb
add
jg
sub
sbb
jle
inc
rcl
or
jg
shl
mov
mov
mov
(bad)
call
inc
push
inc
dec
out
and
cli
sbb
add
xchg
pop
(bad)
leave
scas
jge
test
call
pop
mov
lods
pop
mov
outs
mov
out
cli
ja
rol
ja
inc
sub
jns
dec
outs
or
fsub
pushf
xchg
bound
xchg
in
test
js
mov
or
jne
test
sbb
jne
clc
mov
pusha
repz
retf
cmp
fwait
arpl
xor
dec
or
out
mov
xchg
xor
pusha
mov
movs
mov
sub
or
mov
in
or
xchg
jmp
xor
dec
je
fisub
jecxz
dec
xchg
inc
out
icebp
xchg
push
mov
imul
(bad)
adc
fwait
loopne
lods
sub
out
sar
mov
mov
push
ins
outs
and
ss
cmp
into
rcr
enter
adc
dec
outs
rcl
rol
in
int3
fdiv
pop
mov
fwait
lahf
cmp
pop
rol
in
jnp
or
push
add
out
push
push
daa
sub
std
and
and
or
popa
mov
inc
or
(bad)
mov
pop
cmps
das
mov
popf
sub
fdivr
out
rcl
fwait
mov
sub
push
xchg
ret
test
mul
mov
aad
mov
cmps
mov
test
in
mov
and
sub
inc
mov
fldcw
cmp
bound
jl
xor
pushf
jb
add
(bad)
sub
push
out
inc
fmul
dec
xchg
mov
lds
dec
aas
enter
mov
fcom
mov
jg
xor
jle
ds
add
cli
xchg
cmp
dec
mov
fwait
idiv
pop
test
movs
aad
push
jae
sti
pop
lds
shl
call
mov
adc
in
div
add
sub
inc
iret
pop
fsubr
jnp
push
mov
and
sub
int3
adc
hlt
iret
sbb
xchg
lock
es
push
mov
mov
stos
pushf
and
fdivr
inc
bound
ffree
aam
js
dec
sbb
ins
or
fild
push
adc
outs
rol
dec
or
pop
jg
nop
ins
add
cld
mov
mov
fidiv
mov
jmp
xchg
out
mov
test
iret
hlt
jmp
ins
psrad
mov
hlt
shl
or
pop
lock
jecxz
dec
cmp
aas
mov
in
test
ds
add
dec
jno
mov
add
mov
jmp
mov
fs
cmps
jg
jecxz
or
inc
xor
loop
jecxz
inc
je
fs
nop
push
and
jne
stos
outs
xor
xchg
repz
push
outs
xchg
sbb
jmp
les
dec
retf
mov
bound
movs
repz
mov
mov
rcr
aas
sbb
jmp
ja
cmp
cmp
lods
adc
sbb
mov
pop
push
ins
cmp
or
cld
daa
test
inc
cmpps
outs
ins
shl
xor
jge
cmc
mov
in
xchg
lds
sbb
data16
sub
mov
imul
mov
mov
sar
add
push
mov
sub
xchg
out
icebp
cmp
xchg
out
xchg
xor
sbb
les
cs
out
push
dec
mov
cmps
sbb
nop
adc
mov
out
into
call
mov
daa
popf
jl
(bad)
adc
or
fisub
stos
movs
es
(bad)
in
ficom
cmp
add
sbb
jle
jp
jge
leave
out
aaa
push
div
ins
cmp
cwd
sbb
jno
inc
xor
dec
mov
sub
sahf
sbb
nop
mov
sbb
in
xor
sbb
fistp
mov
pop
je
dec
fimul
adc
aas
pop
cs
ins
pop
bound
stos
fadd
fld
jecxz
(bad)
icebp
add
dec
xchg
test
jmp
in
(bad)
(bad)
(bad)
(bad)
stc
or
inc
xor
adc
cmp
add
xor
adc
add
cmp
inc
daa
fcom
int
mov
cmp
dec
jge
and
add
inc
stos
xor
or
mov
cli
sub
or
movs
out
xchg
(bad)
imul
nop
pop
jecxz
cmp
lods
rol
imul
in
cmp
repz
cmp
pusha
mov
stos
pop
xlat
cld
mov
gs
mov
fcomp
mov
pop
dec
jg
sub
or
xchg
arpl
repz
loopne
jmp
jo
inc
jne
movs
movs
call
mov
cmp
or
(bad)
loopne
in
inc
sahf
inc
in
(bad)
mov
popf
xchg
fwait
dec
add
cmps
sar
pop
xchg
test
iret
inc
scas
dec
call
dec
scas
jbe
or
lods
test
inc
adc
pop
inc
arpl
sahf
cli
jmp
push
add
cs
stc
clc
fadd
jnp
outs
dec
sub
cmp
push
sub
cmp
(bad)
and
ss
scas
ficomp
pop
jo
jmp
xor
pop
add
xor
push
adc
aas
cld
push
or
loope
sbb
neg
xor
push
cli
ficom
ins
jecxz
daa
xor
ja
enter
xchg
(bad)
inc
and
cmc
aas
push
push
cmp
jne
jnp
(bad)
test
jg
cli
fadd
sub
lahf
ror
xchg
leave
daa
das
or
leave
add
jae
push
and
lods
jg
and
fist
stos
mov
(bad)
cmps
dec
pop
xchg
push
pop
xchg
fadd
stc
enter
cwde
scas
or
adc
pop
inc
sbb
repnz
xor
shr
and
push
xchg
into
shl
inc
push
daa
add
adc
sbb
xchg
lods
add
and
test
pushf
sti
jge
dec
mov
(bad)
iret
shr
jno
inc
enter
dec
or
jg
or
mov
call
jge
push
stos
xchg
mov
sbb
or
mov
mov
sar
and
or
fstp
(bad)
sub
imul
cdq
mov
stc
jg
jge
push
xlat
ins
aad
std
ins
xlat
lds
leave
retf
and
scas
push
cmp
sbb
fwait
aad
sbb
mov
cli
mov
hlt
(bad)
test
shl
add
xor
loopne
mov
and
dec
enter
inc
mov
add
mov
lods
adc
inc
ins
loopne
addr16
sub
xor
or
test
xor
pop
int3
div
add
fild
dec
retf
adc
cdq
adc
cmp
jb
ret
sub
inc
pop
stos
in
scas
or
jns
pop
loopne
mov
sar
adc
dec
lods
imul
push
adc
mov
inc
addr16
sbb
cwde
jo
xchg
in
jb
stos
mov
retf
xlat
fcom
mov
inc
ins
add
sbb
adc
or
xchg
icebp
jl
jl
and
or
fwait
xor
dec
imul
ds
fsubp
xchg
or
xor
mov
jecxz
sub
dec
scas
(bad)
retf
mov
xchg
test
add
sbb
outs
retf
inc
ins
retf
jbe
add
mov
fmul
xor
fld
repz
sbb
sbb
push
pop
(bad)
mov
imul
mov
push
sub
push
mov
or
adc
(bad)
jge
je
mov
and
jl
ins
jnp
inc
in
jns
aam
cmps
pop
cmp
inc
(bad)
shl
hlt
add
adc
adc
sbb
and
push
inc
retf
cmps
ret
mov
cli
sub
mov
mov
rcr
pause
dec
cmp
idiv
push
mov
dec
lea
sbb
pop
adc
ficomp
ror
in
lods
mov
adc
pop
sahf
push
push
sbb
jle
pop
cli
mov
pusha
stos
retf
sbb
inc
cmovl
xchg
jmp
ins
cli
ins
aaa
mov
sbb
cs
ret
inc
shl
fstp
mov
shr
dec
inc
aad
sbb
(bad)
xor
xchg
bound
or
stos
cwde
add
inc
jae
out
loopne
stc
loop
loope
test
and
js
jmp
fmul
fdivr
mov
push
cmp
iret
scas
cmp
inc
push
rcr
sub
jns
and
sub
sbb
mov
pop
or
mov
sbb
push
jno
es
jnp
aad
mov
or
sbb
push
repz
dec
retf
dec
pop
lock
mov
je
pop
stos
pusha
jbe
and
sbb
lock
jl
daa
jne
ins
xchg
outs
push
cmp
adc
push
je
jae
std
mov
push
or
out
xor
xchg
sti
(bad)
pop
push
jo
cmp
or
mov
outs
scas
sbb
cmp
sahf
jp
pop
test
outs
xor
and
mov
xor
push
mov
int
mov
mov
pushf
(bad)
into
jb
xlat
mov
sub
mov
add
sub
add
std
(bad)
xor
aam
sbb
push
adc
movs
call
ja
repnz
jmp
sub
xchg
push
aaa
jp
icebp
fiadd
ja
push
adc
ficomp
push
iret
and
xchg
lods
shl
pop
repz
loope
pop
jbe
push
nop
sar
lea
lods
enter
adc
sbb
push
jge
add
loopne
sbb
add
and
jne
retf
cmp
or
aam
nop
pop
in
push
add
fmul
in
cs
pushf
push
inc
pushf
inc
cwde
or
and
add
mov
and
push
xchg
sar
sub
ins
adc
jmp
cmps
push
jecxz
fstp
inc
sub
sbb
jo
xchg
cmps
jnp
xor
out
stos
shl
add
xchg
mov
cld
adc
stos
dec
ret
fwait
jecxz
popf
cmc
std
cld
xchg
push
jl
pop
loopne
fld
adc
ins
inc
popa
clc
inc
dec
retf
mov
fcom
test
cmp
dec
imul
and
(bad)
mov
(bad)
aad
mov
stos
mov
dec
adc
pop
adc
(bad)
mov
jle
xor
push
adc
add
sbb
enter
repnz
mov
clc
push
sbb
repnz
push
sbb
adc
dec
cmp
sbb
push
retf
mov
jmp
lods
add
adc
push
mov
es
jae
dec
popf
push
jbe
stc
cmp
sub
fsub
test
and
fdivp
test
add
cmp
xor
ficomp
repz
or
mov
out
sti
fwait
lds
xchg
dec
push
(bad)
outs
es
sbb
sbb
aaa
jbe
add
xchg
xor
pusha
or
inc
xsha1
cmps
or
ret
pop
int
gs
iret
frstor
push
xchg
and
jnp
inc
pop
cld
mov
jle
clc
stos
mov
(bad)
fsub
xor
sbb
outs
movs
hlt
inc
clc
sub
dec
cmp
jns
dec
pop
or
push
adc
push
cmc
mov
or
cmps
ins
push
jae
and
hlt
xchg
clc
fidiv
push
fcomp
and
imul
xchg
push
xchg
inc
inc
call
xor
popf
(bad)
xchg
or
(bad)
ds
(bad)
pop
popf
jmp
call
push
push
inc
adc
repnz
sub
sub
fsub
mov
cmp
aad
nop
scas
mov
iret
std
shl
cwde
and
ins
push
mov
pop
and
inc
push
ds
add
inc
mov
out
call
mov
jno
cmp
aas
(bad)
lods
add
lods
xchg
(bad)
(bad)
ins
jg
push
and
inc
hlt
loop
and
and
call
inc
xor
jo
shl
adc
jle
xor
dec
mov
and
leave
pop
xor
cs
pop
jl
fst
pop
push
mov
xlat
cld
std
mov
(bad)
jne
dec
call
stos
(bad)
lods
and
and
sbb
cmp
icebp
pop
shl
in
or
cmps
lds
sub
inc
mov
or
outs
jge
rol
mov
inc
jo
fidiv
jo
and
pop
xchg
out
mov
fstp
jno
push
leave
icebp
mov
dec
pusha
popa
aaa
adc
ror
sub
aas
xchg
pop
loopne
iret
cdq
and
test
xlat
pmuludq
push
mov
enter
or
pop
mov
outs
inc
mov
std
push
fidiv
sub
ret
push
into
fistp
push
mov
shl
sub
out
mov
push
mov
gs
stc
pop
inc
xchg
outs
push
cdq
inc
addr16
push
adc
arpl
aas
jp
neg
cmp
test
mov
xor
or
sbb
cmp
push
cmc
and
add
cmp
(bad)
cmp
inc
leave
or
cmp
dec
retf
adc
(bad)
mov
fisub
jbe
jmp
inc
pop
xchg
jno
xchg
dec
ja
dec
cs
aam
shl
mov
or
or
dec
(bad)
jb
ffreep
fistp
clc
out
rcr
fs
mov
fsubr
in
rcl
dec
cmp
or
out
mov
inc
inc
retf
xchg
popa
(bad)
es
jl
sbb
test
sbb
cmp
loopne
push
jl
popf
aam
jnp
mov
sbb
sbb
aam
shl
shl
adc
(bad)
jecxz
movs
loope
mov
pusha
pop
adc
or
daa
rol
pop
or
pop
stos
mov
inc
jl
add
jnp
dec
aaa
lods
in
jno
xor
jmp
xor
push
daa
xsha256
cmps
xchg
and
jmp
loopne
out
inc
push
loopne
cmp
shr
xchg
sti
popf
or
xor
ins
jmp
inc
push
sub
or
mov
addr16
mov
push
dec
jae
(bad)
fiadd
outs
outs
ret
aad
inc
aam
jmp
retf
push
and
and
adc
and
pop
popf
mov
sbb
mov
mov
cmp
cmps
cmps
push
and
lds
xchg
pop
dec
inc
movs
or
bound
in
lods
nop
adc
add
ror
je
sub
loop
pop
out
push
mov
sub
sbb
mov
xor
inc
or
pop
sub
push
mov
and
jge
pusha
push
mov
call
into
or
xlat
inc
mov
pop
sbb
into
jmp
mov
add
push
jno
pop
ret
mov
outs
loopne
adc
ret
jno
in
fistp
cmp
cli
enter
ja
sbb
repnz
icebp
out
and
out
iret
outs
iret
pusha
scas
call
fwait
cmp
mov
jmp
cmp
(bad)
lahf
and
(bad)
test
(bad)
arpl
mov
nop
scas
xchg
cmps
cli
jbe
pop
add
daa
and
inc
enter
ja
cmc
sub
out
loop
pop
cmp
ret
out
mov
es
rcr
sbb
xor
scas
inc
xchg
loopne
and
sbb
repz
int
cs
inc
add
(bad)
pop
shl
shr
and
iret
jb
popa
fwait
sub
or
pop
pushf
mov
mov
int3
jp
fnstcw
imul
xchg
and
pop
aam
out
fild
add
mov
inc
je
inc
sbb
jge
pop
(bad)
sbb
mov
call
out
outs
aas
nop
xor
sti
fst
inc
test
(bad)
mov
and
fwait
adc
not
cmps
sbb
mov
std
jg
xor
cmp
test
and
call
(bad)
jo
pop
mov
or
pop
mov
rcr
shl
pop
add
dec
ficomp
imul
xchg
jnp
je
jnp
or
sub
and
pop
mov
stc
sar
inc
cs
mov
ja
ret
mov
rcl
mov
adc
pop
lahf
cli
dec
jbe
xchg
cli
sbb
loope
aaa
inc
mov
sub
pop
sub
rol
cmp
mov
(bad)
iret
inc
sbb
sbb
sbb
and
imul
cmp
repz
and
data16
jle
jle
jb
mov
cmp
dec
or
jbe
out
loop
call
sahf
inc
hlt
mov
xor
dec
push
push
cmp
in
and
ins
push
imul
call
fiadd
jbe
mov
retf
jo
imul
call
pop
push
sbb
xchg
sub
addr16
push
mov
out
sti
xchg
dec
jns
ror
ret
dec
sbb
mov
mov
jno
gs
inc
adc
(bad)
cmp
loope
jg
jnp
or
pop
dec
push
out
mov
cmp
imul
add
add
cld
ret
adc
loopne
add
pop
imul
popa
jmp
pop
jae
leave
es
xor
scas
ins
imul
and
xchg
fs
and
out
lods
test
mov
sub
mov
aad
int3
bound
rcr
inc
jp
xor
mov
jg
pop
int3
mov
pop
or
(bad)
pop
jns
das
push
xchg
fisubr
xchg
add
shl
xor
sub
dec
stc
sub
out
mov
xchg
aas
mov
fild
lea
js
or
cli
mov
les
mov
cs
or
dec
mov
push
enter
stc
lock
das
cmp
xchg
dec
push
cmp
jo
dec
sub
mov
sbb
out
sti
jmp
idiv
pop
jge
mov
clc
inc
jmp
dec
mov
jmp
mov
dec
mov
sbb
adc
sar
xchg
enter
inc
pop
movs
and
(bad)
stos
cmp
in
jns
or
sub
retf
add
sahf
jg
ins
dec
imul
push
inc
and
rcl
call
outs
jns
mov
pop
jns
or
mov
mov
test
mov
hlt
xchg
jno
xor
xchg
mov
(bad)
add
mov
pop
imul
(bad)
(bad)
pop
sbb
imul
mov
std
jge
xor
push
xchg
mov
push
push
sar
lds
fwait
sahf
mov
(bad)
jge
loope
inc
xlat
pop
std
xor
cmp
iret
sbb
jo
(bad)
jecxz
arpl
and
lds
sbb
push
dec
inc
mov
mov
sub
and
scas
sub
lds
add
vprotd
in
dec
push
sti
inc
mov
cmp
out
aas
call
add
test
dec
dec
retf
(bad)
cmp
jmp
outs
jge
jnp
in
jbe
retf
scas
fist
adc
ja
inc
pop
icebp
int3
sub
pop
pop
sbb
add
clc
mov
repz
lea
push
lock
push
add
jge
xchg
sub
mov
mov
adc
adc
(bad)
imul
cwde
ins
sar
jns
ret
sbb
mov
retf
or
push
and
push
mov
xchg
sar
jno
in
rcr
enter
inc
or
mov
push
dec
scas
pop
xchg
inc
xchg
cmp
into
loope
mov
out
mov
mov
fwait
std
loopne
mov
inc
(bad)
(bad)
es
adc
loop
fwait
pop
dec
push
aaa
pop
mov
outs
cmc
dec
xor
jecxz
sbb
xchg
push
stc
mov
inc
cmp
sbb
mov
push
xor
or
int3
dec
push
ror
stc
test
or
mov
mov
fstp
sub
sub
sub
sub
ret
lds
cmp
daa
add
pop
mov
or
movs
in
pop
test
sub
push
pop
and
adc
xchg
push
hlt
idiv
out
jns
push
dec
ins
aas
push
aam
fsubr
and
xchg
sub
inc
jge
mov
std
jp
xor
fdivr
pop
into
inc
xchg
cmps
ja
jg
std
enter
xchg
mov
aad
fcmovu
pop
adc
ja
adc
adc
(bad)
xor
cmp
lods
gs
aaa
push
push
mov
ins
adc
sbb
test
lods
fsub
into
xor
pop
jecxz
leave
mov
movs
lods
sbb
ficomp
inc
xor
in
mov
scas
into
repnz
scas
lahf
pop
je
cli
dec
mov
mov
sbb
test
jmp
frstor
int3
inc
mov
loop
inc
pop
push
or
push
mov
fistp
mov
cli
out
cdq
call
data16
push
adc
add
jo
mov
hlt
adc
xchg
mov
gs
mov
lods
sub
or
cmc
add
popf
fcom
dec
mov
cmp
mov
std
and
shr
xchg
mov
test
push
sbb
cmp
outs
jne
sub
rol
rcr
inc
mov
(bad)
inc
out
mov
cmps
and
pushf
push
xor
pusha
push
lods
or
cmc
pop
jl
cmp
and
call
mov
cmp
nop
mov
dec
sbb
add
lods
cmp
pop
jg
iret
mov
sub
sbb
aaa
call
inc
dec
or
maskmovq
div
push
loopne
inc
sahf
sbb
push
idiv
retf
sub
mov
sub
and
mov
je
sub
add
xor
int
sub
mov
inc
push
xor
inc
xchg
jp
mov
add
adc
adc
xor
inc
int
fcom
dec
adc
mov
inc
dec
jmp
or
add
sub
nop
retf
test
push
jmp
(bad)
ja
int
xchg
fcomp
and
mov
push
ror
dec
pop
xchg
rcl
aad
cli
inc
push
mov
mov
and
aas
nop
or
xor
cmp
or
push
and
in
test
retf
das
cmps
scas
jno
jmp
nop
adc
jg
lock
in
loopne
jne
pushf
pop
push
adc
sbb
jg
les
sbb
pop
pop
adc
or
pop
dec
les
int3
dec
repnz
sbb
mov
add
cmc
movs
sub
adc
dec
iret
jb
pop
cli
xchg
mov
mov
imul
jmp
cmps
jnp
inc
add
inc
or
and
mov
mov
pop
pop
(bad)
ja
dec
(bad)
(bad)
(bad)
fwait
std
(bad)
out
push
(bad)
popf
inc
xchg
stc
sub
js
cmps
add
bnd
out
popa
aaa
pop
das
rcr
mov
inc
ins
aam
xor
cld
and
pop
push
out
fisub
les
xor
fs
mov
and
jno
pushf
(bad)
fcomp
sub
shr
nop
dec
and
cdq
ds
xlat
jmp
mov
jns
pop
rol
cmp
retf
inc
ror
fsubr
outs
mov
adc
loopne
fcomp
add
pop
xor
jle
push
add
jmp
popf
adc
mov
sub
inc
sub
pop
mov
mov
dec
adc
and
mov
sbb
icebp
mov
movs
jecxz
jo
retf
fisub
jnp
out
push
enter
addr16
adc
(bad)
stos
cwde
xor
xor
jns
pop
xor
cmp
sub
sahf
jl
cmp
sub
adc
push
push
aaa
or
stos
lods
int3
and
call
lds
inc
add
sbb
ds
push
push
and
add
popa
cmc
add
jg
push
(bad)
int3
imul
add
clc
in
xchg
inc
(bad)
push
xchg
clc
sub
add
fld
xchg
out
jmp
fsubr
out
pop
div
sbb
jmp
call
stos
xchg
cmp
xor
cdq
cmp
cmp
(bad)
push
das
je
xchg
mov
movs
lods
pop
out
fwait
cs
cmp
jmp
ins
add
scas
stc
lods
add
test
pop
nop
aad
cwde
fistp
mov
lea
les
inc
jp
jbe
test
jmp
jae
lahf
inc
dec
pop
mov
inc
popa
xor
sub
mov
daa
push
popa
aad
mov
fs
cld
and
mov
into
out
mov
mov
ret
movs
test
fisubr
cdq
call
jecxz
cmp
xor
rcr
xchg
push
loopne
mov
ins
inc
sub
pop
daa
imul
inc
sti
dec
test
dec
fsubp
(bad)
lock
mov
add
pop
out
sbb
pusha
scas
sub
js
cwde
rcl
stos
cmc
mov
dec
in
jg
jb
aaa
daa
mov
cmps
sbb
mov
and
cmp
xor
fnstenv
inc
out
mov
inc
mov
push
xchg
mov
adc
mov
jecxz
mov
pushf
in
daa
jae
xchg
jmp
enter
shl
ret
test
inc
das
inc
dec
cwde
xchg
pop
arpl
cwde
and
cmps
jmp
push
pop
xchg
ds
ss
cmps
cmps
mov
lods
adc
sar
sub
pop
xchg
xchg
icebp
arpl
dec
cld
aam
cmps
pop
repnz
xchg
inc
mov
lds
jae
fcmovnbe
in
mov
pusha
and
es
and
in
pop
js
xor
shl
sbb
xchg
in
sar
in
arpl
adc
pop
or
call
jo
mov
es
jmp
jmp
cwde
cmp
imul
cmps
push
inc
in
lods
fcomp
(bad)
dec
daa
call
in
clc
adc
out
dec
sbb
pop
jmp
push
xlat
aas
xor
fwait
mov
xor
sbb
adc
int3
inc
and
dec
add
mov
pop
mov
hlt
out
push
sub
jmp
push
jae
ins
call
adc
sbb
cmp
data16
test
mov
movs
and
push
and
sahf
(bad)
int3
sub
fdiv
xchg
pop
adc
xchg
in
mov
xchg
pop
test
clc
sar
ret
(bad)
repnz
mov
push
mov
dec
retf
sar
jecxz
sub
add
fld
jge
push
shl
add
cmp
mov
and
and
test
inc
fcomp
xchg
mov
lahf
add
js
push
jecxz
xchg
mov
or
jae
cmps
mov
sbb
mov
mov
pop
xchg
fcmovnb
mov
(bad)
div
and
enter
js
inc
mov
inc
dec
push
or
mov
fdivr
les
sub
iret
sbb
ja
call
lock
repnz
xlat
in
mov
inc
xlat
inc
fsubr
idiv
inc
xor
jnp
lds
cmp
mov
push
aas
push
adc
call
lods
pop
push
popa
mov
jb
jo
cwde
jmp
in
mov
cli
(bad)
out
jmp
loop
inc
jb
rcl
or
and
xor
xchg
adc
cdq
hlt
sub
idiv
xlat
imul
xchg
jle
inc
adc
sub
cmps
lods
push
xchg
sub
ds
stos
mov
mov
push
pop
xchg
aad
movs
cmps
sbb
mov
enter
jne
push
cmp
push
xchg
aad
jmp
jns
sbb
push
mov
lds
pop
repnz
push
and
out
je
cmp
or
call
xchg
xor
xchg
lods
idiv
ins
out
or
(bad)
mov
lahf
mov
div
adc
mov
js
or
clc
xor
cld
bound
xchg
aam
sbb
jb
mov
dec
movs
outs
sub
scas
stc
inc
ret
gs
ins
mov
in
(bad)
repnz
xchg
sub
sub
mov
lods
push
int
sbb
das
sbb
push
fdiv
add
movs
push
xchg
sub
ins
add
pop
rol
int3
mov
xchg
cs
adc
pop
inc
pop
es
pop
rol
sub
cmps
mov
cmp
ret
jbe
add
int3
push
mov
loope
mov
pop
sti
dec
jmp
pop
bound
scas
jmp
cmp
jge
iret
push
push
add
gs
push
xlat
jns
ret
and
setle
(bad)
mov
mov
bound
inc
cmp
pop
jg
xchg
mov
daa
ret
js
out
xor
mov
jmp
fild
cmp
mov
xor
mov
xchg
mov
call
loope
ret
adc
cmps
je
push
or
loop
mov
adc
and
adc
aad
lock
or
mov
retf
sbb
(bad)
jmp
(bad)
ret
pusha
jo
mov
or
cld
xchg
jp
sbb
cwde
gs
test
lods
sub
outs
cmps
cmp
dec
inc
or
mov
addr16
pop
push
xchg
dec
ror
psubusb
pushf
adc
pmaddwd
call
repnz
and
sbb
pop
sub
pop
cld
or
inc
outs
int
and
pop
retf
aam
mov
div
daa
cs
daa
fnstenv
fst
mov
jge
cli
inc
fwait
ret
(bad)
out
ins
jmp
add
and
aam
jge
fst
dec
jb
xor
inc
cmp
in
adc
push
stos
push
push
or
jmp
lahf
cmps
popa
xor
xchg
outs
dec
out
sub
mov
sub
test
jecxz
mov
jge
fidiv
xlat
shl
inc
and
neg
sub
sub
push
je
ficomp
and
push
ss
in
mov
push
add
jo
mov
xchg
int3
inc
cmps
mov
ds
out
mov
mov
rcl
cli
fs
sub
adc
push
mov
stc
cmp
add
inc
pushf
arpl
sbb
leave
retf
popa
dec
add
inc
movs
lods
ror
xchg
jmp
sbb
pop
adc
je
add
adc
jnp
neg
xchg
or
repz
xchg
cli
and
into
pushf
ins
lahf
sub
adc
and
fld
loope
push
mov
mov
pop
std
mov
jnp
xor
sbb
pop
push
repnz
jnp
ja
(bad)
jne
xchg
or
sbb
pop
sbb
mov
scas
cld
fisubr
lods
push
xor
dec
retf
retf
cs
cmc
sub
out
shl
inc
pop
push
push
jbe
dec
pop
mov
mov
enter
lds
jp
or
sub
cmp
std
xchg
aam
psllw
cld
shr
(bad)
daa
fld
(bad)
loope
inc
jnp
out
adc
dec
sbb
mov
shr
test
mov
mul
frstor
in
ja
enter
xchg
cmp
cli
lahf
enter
idiv
mov
xor
mov
movs
xchg
mov
pop
push
jnp
pop
loope
cmp
dec
jecxz
xchg
sbb
dec
or
cmp
out
in
pop
jmp
aad
stos
sbb
sahf
mov
mov
push
jp
mov
repnz
jo
outs
mov
fild
aam
dec
std
and
sbb
fld
add
mov
xor
fmul
pop
div
jge
test
(bad)
cvtdq2ps
sar
shl
je
popf
popf
mov
out
jmp
jp
sar
xor
aad
mov
pop
xchg
loop
xor
cmp
push
in
cli
pop
dec
xor
cmp
imul
and
xchg
xchg
mov
loop
pushf
push
arpl
cmps
bound
mov
(bad)
fidiv
mov
dec
fxch
jno
call
cli
loop
xor
ins
jecxz
leave
jb
stos
mov
test
nop
hlt
gs
xchg
and
data16
les
(bad)
mov
paddusw
mov
in
sub
leave
rcl
popa
ret
imul
mov
test
inc
retf
jg
cdq
sub
popa
add
jge
leave
lods
adc
jo
mov
in
rcl
leave
mov
mov
mov
lods
mov
outs
push
mov
shl
(bad)
outs
cmp
std
lock
loop
gs
jo
out
and
jp
das
and
pop
bound
jmp
stos
cvtdq2ps
jae
xor
aas
and
xor
hlt
sub
pxor
push
pop
test
jmp
jg
sub
nop
nop
mov
xor
mov
stos
jp
add
xor
xchg
sub
cmps
(bad)
adc
mov
sbb
push
inc
mov
fdiv
mov
pop
daa
mov
add
xor
js
cmp
mov
mov
mov
mov
lods
ret
mov
rcr
dec
shr
in
out
xchg
pop
sub
adc
rcl
repz
or
imul
push
in
arpl
cmp
xchg
adc
dec
(bad)
(bad)
fwait
inc
sbb
dec
fsub
push
cmp
ds
inc
mov
pop
or
outs
imul
fnstsw
jns
dec
aaa
les
sub
dec
push
and
hlt
lods
cmc
test
jo
test
pop
stc
sub
inc
repnz
std
fcomp
jo
push
inc
ins
jae
inc
ret
jle
adc
je
neg
dec
jg
ret
xor
inc
push
aas
jnp
cwde
sub
cwde
cmp
or
and
pop
mov
outs
out
ds
mov
mov
test
mov
mov
call
cmp
inc
add
xchg
jmp
inc
push
push
mov
jmp
iret
movs
(bad)
fcomp
sub
gs
cmps
or
mov
popa
mov
imul
in
push
xchg
and
(bad)
mov
cdq
pop
icebp
sbb
imul
xor
je
bound
aad
jecxz
jo
movs
stc
dec
jmp
movs
push
movs
push
and
adc
outs
cld
cmc
jbe
in
outs
ror
sub
in
rcl
cwde
es
cld
(bad)
int3
push
ror
loopne
push
mov
xor
(bad)
cli
ins
mov
mov
push
mov
outs
in
les
imul
fisubr
dec
xchg
scas
and
int3
inc
(bad)
pop
jle
out
add
add
mov
int
les
push
adc
mov
jmp
mov
cmc
xchg
push
outs
mov
bound
pop
rol
scas
cmc
shr
xlat
mov
mov
sbb
es
mov
mov
daa
scas
repnz
push
add
jno
jae
int
pop
xor
js
fadd
(bad)
mov
inc
aam
iret
(bad)
ss
hlt
mov
shl
pop
in
fsubr
retf
inc
cdq
scas
xchg
jmp
add
jecxz
push
sbb
sahf
dec
add
dec
add
rcl
ins
jg
dec
mov
popa
call
mov
xor
imul
mov
jp
inc
push
out
pop
rcl
push
gs
jmp
not
shl
pop
sbb
mov
(bad)
mov
xor
out
mov
mov
mov
(bad)
int
jle
add
ins
push
in
rol
cmp
fbld
cld
push
fcomip
addr16
jns
scas
jmp
xor
add
ret
add
(bad)
jl
inc
mov
gs
(bad)
das
mov
rcl
mov
mov
jmp
out
sub
out
test
push
fstp
inc
pop
add
sub
fnstcw
and
xchg
xchg
shl
(bad)
xchg
ja
mov
mov
sub
int
loopne
adc
int3
and
fmul
lds
call
sbb
neg
xchg
imul
mov
cdq
xor
or
dec
and
xor
pop
mov
push
xchg
push
mov
es
xor
into
int3
fidivr
adc
rol
std
inc
das
mov
imul
inc
div
(bad)
xchg
std
out
mov
movs
test
dec
push
cmp
out
jge
pushf
clc
test
lea
jecxz
and
sub
jge
xor
icebp
or
mov
rol
in
push
sbb
mov
adc
pop
call
cwde
sar
sub
jae
scas
add
call
mov
mov
pop
(bad)
mov
pushf
mov
xor
xchg
adc
xchg
xchg
adc
sbb
add
add
cmp
mov
repz
add
pop
retf
sub
push
and
nop
xor
jmp
mov
into
popa
js
hlt
lods
and
pop
jmp
jo
mov
cmp
imul
cmc
push
pop
cs
mov
stc
call
scas
jbe
dec
jmp
dec
lods
or
repz
xlat
cwde
xchg
mov
push
add
(bad)
dec
shr
mov
add
cmp
jne
dec
cmps
test
mov
and
xchg
xchg
sub
mov
sbb
(bad)
cmp
pop
repz
lock
fwait
xchg
cmp
arpl
jns
rsqrtps
bound
ss
adc
scas
sbb
aam
in
(bad)
and
adc
push
aaa
cld
je
jge
cmps
outs
add
es
sbb
cmp
dec
(bad)
fdivr
stc
test
dec
loope
repnz
adc
test
push
cmps
scas
retf
push
mov
pushf
sub
scas
ret
retf
inc
loopne
imul
adc
adc
lods
pop
pop
jns
push
xchg
cwde
std
xor
cmovo
add
mov
mov
sti
inc
sub
mov
mov
lds
xchg
jg
mov
adc
push
je
es
xor
inc
sbb
pusha
cdq
sbb
jecxz
pop
call
movs
xor
dec
jmp
pop
aaa
les
pop
call
stos
xchg
ins
jecxz
jno
xchg
(bad)
xor
or
out
cmp
movs
out
in
inc
cmps
sub
(bad)
rep
lods
mov
out
push
or
pop
in
fist
out
inc
fwait
imul
fadd
in
int
jns
movs
aad
ss
sbb
test
sub
repz
sbb
mov
popa
sahf
je
daa
mov
mov
scas
add
xchg
repnz
aaa
daa
jno
stos
add
dec
mov
popf
xor
stos
jp
pop
xchg
adc
stos
pop
loopne
xchg
xor
dec
jmp
fs
test
ss
lahf
ror
mov
shl
inc
lods
enter
and
mov
les
pop
inc
pop
scas
mov
and
pop
xchg
inc
pop
xchg
sub
pop
cmp
cmp
cwde
imul
mov
jge
and
lds
mov
sub
mov
xchg
mov
sub
in
jge
sub
jp
fistp
lods
cwde
test
sbb
test
mov
jno
stc
mov
ins
jnp
fisttp
cs
stos
inc
mov
push
xchg
sti
inc
fst
lods
mov
(bad)
jg
sub
jmp
in
ins
mov
mov
and
cmp
es
movs
outs
mov
not
xchg
retf
or
mov
ss
mov
addr16
mov
push
lods
mov
or
aam
mov
(bad)
retf
cmps
dec
into
pop
rol
xchg
fwait
addr16
(bad)
shl
cmps
imul
fdiv
dec
jge
mov
fisttp
add
jnp
dec
pop
xchg
fucom
inc
or
pop
loopne
scas
and
sti
mov
xor
mov
ss
cld
xor
icebp
rcl
bound
adc
arpl
mov
pop
sti
push
push
pop
lods
ds
push
(bad)
xchg
rol
shl
cmps
rcl
jnp
and
(bad)
jge
(bad)
ins
enter
frndint
cmp
mov
mov
lock
mov
rcl
jmp
jmp
cmp
push
lock
jg
inc
inc
popf
repz
jns
ret
iret
test
out
test
into
lock
ror
inc
mov
mov
cmp
push
or
call
mov
mov
dec
mov
pop
cmp
adc
iret
mov
adc
push
cmp
sub
add
xchg
inc
sbb
in
mov
xor
ret
mov
imul
shr
xor
and
mov
and
repz
imul
dec
stos
sbb
repz
popf
pop
aas
cmp
leave
add
pop
xchg
push
add
xchg
push
loopne
jne
movs
arpl
dec
jmp
lods
cmp
popf
jo
xchg
add
xor
push
mov
sbb
div
push
dec
jmp
scas
call
mov
imul
sbb
push
pop
test
mul
mov
fs
sub
rol
mov
shr
adc
cmp
adc
inc
xchg
stos
add
addr16
int3
mov
adc
popa
add
sub
xchg
inc
gs
stos
in
jnp
aad
into
retf
adc
sub
mov
mov
mov
push
mov
lods
jbe
test
add
and
loop
mov
jae
sub
sbb
sub
sar
pop
xlat
sahf
xor
inc
jl
icebp
stc
mov
add
cmp
(bad)
loop
inc
push
sbb
rcl
call
sub
sbb
jle
push
cdq
cmc
dec
shl
rol
cs
mov
div
out
scas
jmp
adc
pop
ins
call
std
rcr
cdq
add
and
ficomp
in
outs
not
std
adc
mov
aad
out
jb
xchg
scas
movs
xchg
fwait
lock
adc
push
xor
shl
popa
inc
pusha
gs
jns
dec
cmps
aad
test
inc
daa
ins
and
out
dec
push
mov
fs
adc
mov
fsubr
test
push
hlt
mov
sub
imul
and
sbb
cld
pop
xor
and
stos
mov
ret
js
ds
pop
retf
inc
cmc
sub
pop
retf
bound
push
mov
mov
mov
dec
retf
std
cmp
retf
int
bound
arpl
outs
pop
in
cli
push
inc
jp
pop
rcl
jne
mov
adc
movs
clc
push
jmp
mov
cdq
pop
inc
and
int
adc
mov
movs
lock
push
leave
addr16
je
adc
sar
fmul
inc
addr16
neg
mov
inc
arpl
add
jg
popf
mov
sbb
(bad)
jno
or
mov
jae
inc
shl
iret
aas
retf
xchg
mov
stos
push
xchg
das
mov
cmps
arpl
ret
mov
mov
neg
rcl
sbb
ret
or
ds
fs
mov
cmp
jne
jno
cmp
or
mov
out
add
out
cdq
ftst
mov
fs
ja
fsub
jne
mov
addr16
mov
mov
pop
inc
mov
nop
xchg
or
das
je
fnstcw
int3
xor
popf
mov
stos
dec
rcr
add
or
fdiv
scas
add
(bad)
ins
xlat
mov
jno
jecxz
xor
push
fst
jl
pop
fistp
fsub
(bad)
mov
jno
xchg
sbb
mov
and
jecxz
dec
(bad)
test
adc
mov
jno
adc
shl
sub
mov
imul
sbb
inc
mov
cs
cmp
shl
adc
cmp
add
gs
jno
mov
dec
mov
and
jne
mov
add
cmp
test
adc
pop
xchg
push
inc
push
fisub
fld
aas
mov
mov
or
pop
aaa
cld
push
dec
aam
or
retf
imul
mov
call
fnstenv
ja
ds
push
xor
js
pop
xchg
push
aad
rcr
mov
stos
pop
arpl
jmp
inc
ret
jg
jg
bound
je
jp
shr
pusha
aas
imul
xor
icebp
aam
mov
(bad)
mov
stos
pop
push
mov
push
adc
cdq
das
imul
scas
ror
inc
xor
mov
jmp
repnz
mov
loope
sub
cs
sahf
mov
inc
adc
dec
mov
in
mov
dec
mov
aad
icebp
aam
retf
push
lods
pop
mov
cmp
gs
mov
cmc
xor
popa
rcr
adc
ss
ja
leave
pop
ins
cld
outs
cmp
ins
(bad)
popa
jmp
mov
inc
pop
cmp
cmp
jne
lahf
cwde
loope
jle
pop
ds
push
jecxz
mov
movs
icebp
xor
xor
out
dec
pop
pop
call
adc
cld
push
retf
aas
sbb
out
cmps
daa
xchg
ret
push
and
mov
ins
dec
es
push
and
xor
addr16
sbb
ins
xchg
sbb
arpl
or
push
lock
in
dec
inc
sbb
ss
inc
mov
test
dec
fild
mov
retf
or
mov
push
xor
aad
mov
inc
icebp
ret
stos
push
cmp
xchg
sub
mov
les
pop
fstp
xchg
mov
push
popf
cdq
out
push
cdq
xchg
aas
rol
(bad)
dec
dec
mov
imul
jecxz
jmp
stc
inc
cmp
clc
add
mov
(bad)
xlat
jmp
and
inc
out
rcr
adc
imul
push
test
xchg
ja
lahf
retf
ja
sub
dec
fstp
clc
and
dec
adc
cmp
mov
jp
jne
add
or
scas
sbb
jo
push
fadd
outs
loopne
mov
mov
outs
pop
or
pop
(bad)
sbb
jb
stos
xlat
xlat
cdq
dec
retf
pop
push
push
dec
in
xor
ins
inc
or
test
arpl
call
rcl
repnz
movs
cmps
lods
fldcw
push
bound
add
pop
jl
jmp
test
cmp
loopne
(bad)
iret
push
std
and
pop
leave
cmp
test
jns
rol
repz
leave
inc
ret
or
mov
sti
mov
daa
gs
inc
fnstcw
or
cmps
xchg
mov
xor
jle
(bad)
mov
pop
jl
(bad)
test
mov
sbb
loopne
jo
sub
inc
inc
mov
fwait
inc
out
movs
icebp
clc
push
popa
mov
ret
jmp
or
mov
adc
retf
jns
cmc
pop
mov
xchg
aad
push
lds
mov
ss
les
clc
ret
xchg
pop
fs
stc
jmp
jnp
xchg
ror
test
jo
add
pusha
js
adc
sub
out
and
inc
leave
outs
jae
nop
add
ret
sbb
pop
jne
cmc
jecxz
pop
(bad)
repz
pusha
jecxz
dec
sub
xchg
mov
xchg
repz
pop
ror
inc
int3
sahf
and
xor
pop
in
adc
jg
mov
and
dec
clc
fild
add
pop
xor
xchg
pop
dec
enter
in
aad
or
repz
imul
xchg
push
and
cmp
stos
and
jle
out
add
inc
clc
fmul
div
jmp
pusha
mov
or
loopne
sahf
pop
adc
adc
sbb
sbb
push
aas
jnp
arpl
push
push
rcr
out
jb
test
leave
jge
ds
or
mov
push
jmp
mov
lds
ins
rcr
pop
xor
jb
ret
jle
inc
mov
mov
data16
pop
mov
add
xchg
das
and
ret
mov
push
push
push
in
xchg
stc
sahf
retf
neg
into
push
movs
sar
fnstenv
xchg
test
ret
cmp
imul
mov
push
add
stos
or
jmp
lahf
aam
and
adc
int
jno
mov
adc
push
fucomp
push
jae
dec
jge
sbb
mov
sbb
loopne
mov
cwde
adc
enter
iret
popf
arpl
sbb
setbe
test
and
stos
jl
push
sub
inc
fbstp
cmps
sbb
ins
dec
pusha
sbb
jnp
(bad)
mov
out
push
into
jb
pop
lods
bound
jmp
sbb
(bad)
adc
sbb
popa
jmp
xor
(bad)
mov
and
push
push
cmps
mov
punpckhwd
ds
xchg
xchg
and
jns
pop
daa
rcl
cmc
and
movs
add
jmp
pop
fiadd
mov
hlt
in
inc
xor
inc
pop
or
bound
test
pushf
and
pop
cmc
aad
lahf
inc
dec
shl
cmp
xchg
pusha
cmps
and
in
mov
push
fiadd
dec
adc
lods
data16
and
jmp
cmp
sar
cmp
cli
jns
cmp
jl
lea
or
pushf
shl
xor
movs
dec
push
jne
mov
jmp
sbb
(bad)
mov
xchg
mov
sbb
aam
data16
mov
pop
mov
add
sbb
xor
es
pusha
repnz
inc
sbb
pop
loope
sub
cmp
adc
inc
xchg
mov
cmp
dec
call
push
cwde
jg
adc
sbb
cdq
xor
daa
and
out
movs
or
mov
jl
push
jb
fisttp
test
sbb
js
xor
inc
rol
adc
fs
mov
sti
outs
nop
mov
dec
cli
jl
mov
ret
ret
jmp
or
pop
test
mov
mov
mov
movs
push
cmps
mov
arpl
sbb
cmp
pop
pop
retf
out
daa
lds
mov
sub
jle
mov
mov
mov
inc
leave
adc
cmp
and
out
or
dec
cmp
loopne
mov
cld
stos
icebp
leave
add
sub
pusha
add
lods
daa
dec
frndint
mov
shl
mov
sub
cmp
cmp
jge
out
rol
in
mov
cld
jnp
and
pop
pop
or
mov
sub
mov
fistp
dec
scas
inc
dec
xchg
pop
(bad)
sub
mov
shl
clc
mov
adc
jl
mov
xchg
scas
outs
das
xchg
lock
gs
sub
rcl
and
push
xchg
xchg
sbb
dec
mov
js
pop
or
cmp
pop
sbb
std
rcr
push
dec
aas
sbb
push
pop
and
cmps
pop
and
xor
jg
adc
adc
add
(bad)
rol
pop
jmp
retf
mov
mov
jp
sbb
mov
cwde
outs
retf
mov
retf
cmp
xchg
ror
sub
xchg
pushf
cdq
aad
xor
popf
mov
or
push
sti
xor
les
jmp
add
and
push
(bad)
sbb
(bad)
mov
fstp
ret
imul
and
and
dec
xchg
mov
adc
jp
mov
jb
cmp
fs
xchg
mov
cmp
or
mov
mov
aam
fdivr
add
sub
mov
cmp
push
push
aas
mov
ss
enter
adc
in
into
ins
ins
das
mov
push
call
lea
stc
inc
sub
inc
mov
add
jl
ds
cmp
ja
inc
and
out
mov
fsub
test
(bad)
push
and
rol
mov
mov
popf
aam
fiadd
das
xchg
dec
xchg
mov
add
push
sub
inc
or
pop
(bad)
pop
repz
popf
jl
push
test
adc
adc
push
mov
enter
jl
and
enter
or
jnp
or
out
sub
repz
mov
cmps
ins
arpl
setle
aam
xor
movs
sbb
push
push
push
inc
imul
jmp
gs
out
mov
in
pop
fsubr
sahf
inc
push
idiv
push
xor
add
xchg
push
ds
js
jo
std
aam
xchg
fld
inc
cmp
sub
pop
push
aaa
dec
lods
xor
xchg
(bad)
imul
sub
jae
aas
std
add
in
retf
dec
sbb
outs
mov
retf
enter
(bad)
xchg
shl
push
lea
out
xchg
jnp
xor
lds
jp
pop
inc
mov
test
jge
mov
mov
fimul
push
adc
cmp
rol
ins
(bad)
mov
mov
bnd
int3
push
pop
and
iret
jno
add
in
popf
popf
loop
pop
aas
pop
or
cmp
push
mov
cmps
mov
push
frstor
in
pusha
add
sti
call
dec
popa
mov
hlt
and
fistp
stc
gs
test
mov
bound
aam
(bad)
mov
fldenv
mov
in
or
mov
or
cmc
fwait
loop
mov
xchg
loop
mov
dec
je
inc
aaa
imul
dec
mov
pop
sti
leave
mov
ret
cmc
ss
out
inc
cdq
fsubr
add
jmp
lea
pop
push
jae
adc
xchg
mov
cmp
cld
jp
js
fs
cmp
or
ror
retf
xor
test
pop
outs
scas
xchg
and
mov
cld
ret
(bad)
les
mov
jmp
jmp
mov
mov
push
mov
dec
aas
scas
cs
cld
clc
xor
sbb
xor
in
leave
add
dec
ins
sti
loope
adc
cmp
hlt
fld
xchg
xchg
push
push
xchg
push
ins
add
popa
mov
jnp
ins
imul
cmc
push
cmps
push
adc
add
xchg
pop
arpl
mov
hlt
repz
leave
dec
and
mov
pop
adc
mov
or
mov
push
inc
ins
fdiv
stos
or
js
mov
aaa
mul
sbb
call
xchg
pop
push
leave
(bad)
call
add
adc
(bad)
repnz
popa
lods
bound
xchg
fnsave
jns
inc
push
dec
sar
std
fucomp
mov
je
xor
sahf
adc
xor
push
pop
adc
ret
jnp
sub
ret
stc
xchg
in
test
aas
js
sbb
repnz
movs
adc
call
fld
(bad)
xor
(bad)
mov
arpl
outs
loope
dec
inc
rcl
retf
cli
mov
(bad)
fsub
arpl
in
dec
inc
out
std
mov
sahf
dec
ins
mov
dec
mov
cmp
repnz
pop
stos
jp
mov
sbb
cmc
cmps
test
ror
jae
pusha
dec
and
or
or
(bad)
das
mov
pop
mov
sbb
ffreep
lods
lods
mov
lahf
shl
xchg
mov
push
mov
iret
push
xchg
bound
dec
bound
dec
dec
sbb
pop
cs
dec
outs
je
inc
xchg
retf
cmp
and
adc
xchg
mov
(bad)
xor
bound
int
ins
in
adc
lods
sbb
movs
mov
fs
in
fsubr
out
ja
sbb
add
adc
cli
xchg
imul
outs
call
inc
mov
and
aas
xchg
das
mov
sahf
popa
push
imul
(bad)
aad
test
lods
sahf
adc
push
loop
mov
shl
mov
or
fidiv
ja
inc
fsub
xchg
out
bound
pop
fs
cmp
(bad)
push
jl
fxch
ror
cs
inc
mov
mov
inc
lods
adc
cmp
jns
stos
and
push
loopne
xchg
and
repz
sbb
loopne
pop
(bad)
mov
or
mov
or
ficom
jne
cmc
sub
and
std
aas
rol
(bad)
jp
jmp
cmp
mov
sub
add
fsubr
ret
movs
sub
call
xchg
lods
retf
add
jl
sbb
test
jp
ja
mov
arpl
cwde
push
sbb
jecxz
sub
outs
cmp
rol
sti
retf
or
xchg
sbb
ficom
jns
idiv
sub
sub
int3
ins
xchg
push
fwait
mov
js
daa
jno
stc
(bad)
lods
adc
sbb
add
(bad)
popf
mov
cli
push
scas
imul
leave
and
stos
mov
outs
and
retf
fistp
jae
jb
add
test
xor
and
mov
test
bound
mov
rcr
push
add
cmp
mov
adc
sar
dec
aam
repnz
dec
sbb
and
arpl
jmp
ffreep
and
call
xchg
clc
test
push
fisubr
cmp
sbb
in
dec
in
loop
imul
outs
adc
daa
(bad)
mov
cmps
push
sub
repz
call
fild
fcomp
lods
ror
js
in
int
mov
int
aas
aam
xchg
pop
in
sub
cdq
sysenter
icebp
in
jne
lods
call
and
imul
ret
das
add
(bad)
xor
and
adc
scas
ds
and
mov
shr
ja
inc
daa
add
popa
das
int
push
aaa
cwde
add
shr
mov
dec
xor
fadd
sbb
cmp
mov
js
ins
mov
add
data16
stc
cmp
pusha
jge
push
es
push
adc
push
outs
adc
jae
jbe
les
frstpm(287
cwde
out
jmp
fmul
xlat
repnz
fs
(bad)
xchg
mov
inc
add
fcmovnu
iret
in
stos
sub
dec
outs
push
jmp
(bad)
std
dec
ror
pop
xor
out
mov
xor
jle
jl
dec
loopne
mov
push
mov
sub
call
rol
retf
jmp
sub
aas
mov
je
call
mov
fisub
int3
push
(bad)
jle
fnsetpm(287
xchg
addr16
cmp
mov
and
or
or
out
aam
stc
data16
push
cmc
cmps
sub
fild
adc
fisubr
pop
jnp
test
ror
pop
jg
ja
out
mov
dec
out
or
pop
sti
test
leave
fimul
push
fadd
cmp
inc
cli
push
je
mov
push
sbb
add
dec
or
nop
sbb
(bad)
aas
rdtsc
push
mov
lahf
xor
or
repnz
nop
sbb
mov
movs
rcr
fnstsw
cmp
pop
xchg
add
push
xlat
and
(bad)
cmp
push
push
cdq
movs
frstor
idiv
xor
int
pop
clc
mov
and
mov
retf
jb
popf
inc
je
adc
mov
movs
jb
jmp
xor
popa
sub
push
mov
outs
aaa
inc
repz
(bad)
sbb
dec
add
popa
or
push
out
pop
stc
sub
xchg
repz
add
cmp
inc
xchg
neg
stc
cmp
in
enter
stos
in
loopne
ins
push
arpl
add
jnp
or
fs
mov
(bad)
xchg
test
sbb
xor
in
sub
lods
js
(bad)
outs
or
inc
fnstsw
adc
scas
mov
scas
stos
mov
jne
push
push
push
and
sbb
mov
test
jns
sbb
repnz
xchg
xchg
push
add
loopne
outs
pushf
xchg
out
or
and
call
loope
sub
mov
xchg
hlt
sbb
or
jb
inc
jmp
aaa
hlt
dec
push
pop
mov
add
and
cdq
pop
add
xchg
mov
repz
inc
inc
aam
or
xor
movs
out
dec
iret
adc
(bad)
xchg
xchg
mov
mov
xlat
mov
cmp
scas
cmps
mov
out
pop
xor
(bad)
jo
faddp
mov
push
add
inc
into
jg
addr16
aas
sbb
xor
retf
rol
imul
fcomp
push
push
dec
xchg
jnp
mov
jecxz
scas
in
nop
cld
cmp
xor
int3
stc
pushf
push
outs
cmp
mov
cli
and
pop
hlt
inc
aas
aas
(bad)
cli
pop
dec
xor
ficom
xor
xor
cs
js
test
call
add
fadd
test
cmps
aam
sbb
popf
scas
mov
stc
(bad)
retf
movs
retf
in
(bad)
push
and
jae
pop
cmp
cmp
js
ins
out
(bad)
data16
inc
dec
xor
sbb
pop
jecxz
jp
mov
cmc
or
add
jo
inc
stos
xor
dec
inc
stos
in
sbb
mov
jp
pop
scas
sub
or
pop
out
pop
out
mov
not
mov
retf
pop
pusha
add
inc
inc
pop
ret
push
push
mov
scas
ret
add
ds
aaa
xlat
sbb
dec
add
je
(bad)
in
add
mov
add
(bad)
scas
dec
(bad)
movs
pop
xor
pop
lods
or
fisubr
inc
sbb
sti
sbb
xchg
ror
std
ficom
in
jl
mov
retf
mov
fidiv
ror
and
push
xor
je
loope
pop
pop
test
fcmovnu
and
sbb
cld
in
movs
jmp
repz
sahf
and
(bad)
and
inc
push
adc
sbb
mov
xchg
jns
stos
imul
(bad)
shl
sbb
stc
ja
push
xor
fsub
std
clc
cmps
stos
call
cmp
cmps
xchg
push
cmp
jg
pop
sbb
(bad)
data16
mov
pushf
fidiv
xchg
or
or
push
mov
and
ret
sbb
mov
(bad)
push
pop
jnp
push
mov
pop
xor
(bad)
int3
jae
in
and
adc
cmp
(bad)
jbe
or
rol
and
lea
fsub
dec
mov
push
ror
mov
fwait
push
fscale
in
jmp
sbb
ds
xchg
fnstenv
sti
mov
pop
push
(bad)
push
aaa
rcl
inc
sub
js
dec
cmps
jle
add
xchg
popa
inc
shl
push
add
test
cmp
cmp
push
hlt
jbe
cmp
pop
or
sbb
push
not
or
lea
gs
test
mov
pop
test
mov
shl
xchg
std
cmp
ror
xchg
aam
or
push
(bad)
(bad)
cmp
test
mov
in
jno
retf
(bad)
mov
mov
xlat
cdq
scas
pushf
mov
scas
dec
sbb
mov
dec
jo
das
add
inc
pushf
enter
ja
repz
sahf
cmps
dec
fistp
(bad)
jmp
or
adc
aad
mov
dec
jns
rdpmc
cmp
popa
stos
xor
(bad)
nop
hlt
sub
inc
sub
inc
sub
mov
fsub
push
sahf
inc
test
cli
adc
pop
or
push
jns
inc
dec
adc
inc
mov
mov
cdq
sar
movs
pop
push
sbb
(bad)
fdiv
imul
mov
lds
pushf
adc
cmps
or
jp
add
add
sub
ret
gs
rcr
lahf
outs
popf
mov
xor
inc
ja
retf
xor
movs
xor
jbe
inc
dec
hlt
or
mov
dec
mov
into
cli
xchg
xor
cdq
jne
lahf
dec
pop
dec
mov
add
xchg
cmp
cmp
jns
jp
adc
shl
or
mov
scas
imul
addr16
or
cdq
fsubr
scas
or
mov
sbb
adc
push
push
cs
stos
gs
and
fst
dec
mov
call
lds
xchg
adc
mov
dec
pop
or
cs
push
dec
aaa
inc
out
jbe
cs
aad
pop
dec
dec
add
dec
dec
jge
mov
retf
mov
sbb
or
lea
mov
cwde
sbb
jne
pop
cli
sub
mov
lock
cmps
add
xchg
push
dec
dec
push
inc
aas
ja
mov
cdq
sbb
cmp
sbb
mov
xor
sub
(bad)
add
jne
mov
pop
into
pusha
lahf
pushf
xchg
push
pop
mov
out
popfw
xor
clc
xchg
add
lds
mov
je
int3
mov
cmp
adc
mov
pusha
mov
adc
dec
sti
pop
sbb
iret
clc
(bad)
rcl
push
xlat
icebp
aas
outs
in
inc
fnstsw
jmp
(bad)
sbb
mov
jmp
dec
cld
lea
jno
aam
jae
test
data16
jle
push
adc
int
ss
xor
mov
maxps
push
xor
fisub
aaa
es
stos
lods
lods
add
sub
stos
and
jp
jmp
mov
fdiv
jmp
sbb
(bad)
fwait
xchg
pop
inc
ror
push
or
or
retf
shl
enter
cmp
cmp
dec
into
and
and
adc
(bad)
fsubr
or
not
mov
ret
call
ins
mov
dec
int3
loop
movs
imul
push
inc
sub
jle
cmps
jns
xor
pushf
in
dec
xor
pop
mov
mov
xchg
xchg
or
mov
into
les
lds
rcr
lahf
mov
add
or
mov
test
push
ins
sub
das
ret
mov
inc
ret
cld
data16
jg
xchg
and
xchg
loope
es
jo
xlat
mov
test
jns
mov
xor
inc
jns
lahf
or
aam
jnp
push
inc
lods
enter
sti
pop
not
test
mov
jae
push
or
ins
cmp
or
mov
imul
pop
jmp
aaa
push
mov
repnz
sbb
mov
mov
cmp
lea
in
sub
cmc
pop
dec
or
mov
addr16
add
add
(bad)
sbb
push
mov
adc
(bad)
ja
mov
shl
or
sub
push
and
pop
jbe
(bad)
sbb
pop
mov
shl
into
push
and
sti
cld
jb
sbb
jo
(bad)
sub
clc
push
push
mov
out
fs
das
pop
or
mov
fcom
int3
push
and
or
jnp
push
loope
xor
or
(bad)
outs
cmp
push
or
(bad)
mov
fbstp
sar
imul
aaa
jns
inc
sub
mov
adc
mov
sub
mov
inc
hlt
push
inc
test
test
and
jo
mov
inc
(bad)
test
rdtsc
cmp
outs
add
cmp
mov
fadd
sbb
ja
mov
int3
cs
test
ret
pop
mov
mov
jg
leave
mov
jmp
sar
stos
call
js
sar
add
add
ret
pop
mov
adc
out
stos
scas
or
pop
dec
add
lods
xchg
mov
mov
out
dec
pop
inc
push
xor
(bad)
rol
xchg
sar
cmp
jmp
cmps
jl
dec
add
mov
xlat
jno
and
mov
jl
and
and
xchg
aaa
push
inc
xchg
rcl
int
mov
fs
clc
test
shl
ret
dec
test
std
int3
and
jg
into
lds
jae
cmp
daa
mov
push
aad
ja
jnp
and
leave
push
mov
cmp
cmp
push
js
pop
sar
daa
push
or
push
inc
xor
stc
sbb
scas
jae
in
add
je
shl
and
jmp
push
iret
hlt
mov
cmp
repz
adc
(bad)
push
mov
inc
and
cli
jo
(bad)
sahf
sbb
jmp
aaa
inc
dec
in
ret
inc
and
mov
shl
cmp
adc
push
out
sbb
and
cli
aam
data16
ja
push
mov
in
fild
mov
dec
cmps
or
test
bound
loop
aaa
mov
mov
pop
ins
mov
mov
fisttp
stos
sbb
mov
ins
cld
pop
sbb
lods
movs
xor
jl
cmp
dec
inc
add
add
fldenv
inc
scas
dec
pop
jns
dec
ins
rcl
cwde
loope
cmps
mov
adc
outs
adc
fyl2xp1
mov
adc
lock
xor
push
retf
xor
push
in
in
jb
stos
rcl
sub
mov
sbb
dec
push
scas
fs
pop
xchg
mov
iret
psubw
cmps
nop
cdq
ds
std
mov
lods
les
mov
jo
and
rol
leave
pop
pop
push
dec
retf
cmc
fist
mov
arpl
and
out
xchg
push
test
cmp
int3
(bad)
ins
or
sub
cmp
icebp
mov
sahf
inc
cmp
repz
dec
leave
mov
out
xor
jle
mov
jo
sbb
fwait
ins
(bad)
add
repz
mov
xchg
jmp
push
xchg
ror
lods
add
out
outs
shl
imul
mov
adc
pop
pop
dec
or
test
and
inc
fadd
minps
mov
fisubr
xchg
or
add
xchg
sti
sbb
(bad)
fisub
rcr
mov
mov
ret
pop
mov
dec
pop
dec
std
push
dec
test
pop
test
cmc
push
lds
daa
or
nop
test
mov
arpl
adc
mov
icebp
pop
xchg
fwait
enter
dec
mov
mov
mov
outs
js
cwde
add
frstor
arpl
aaa
popa
sti
sub
mov
jg
or
xor
outs
ss
call
jecxz
xor
pop
sbb
sti
cmp
and
repz
sbb
lods
aaa
dec
push
les
aam
jae
aaa
aaa
mov
mov
lods
fcmove
or
mov
push
and
push
ror
xor
leave
movs
sbb
and
cdq
(bad)
imul
inc
mov
cdq
movs
mov
movs
add
idiv
and
add
cmp
call
jle
lds
lock
adc
push
push
(bad)
clc
sar
xor
lods
and
cmp
daa
add
data16
mul
jecxz
push
mov
xchg
movzx
lahf
dec
jp
dec
xchg
pop
fild
add
aaa
adc
adc
inc
push
cmp
jbe
repnz
fisttp
adc
or
neg
and
repnz
dec
sahf
je
test
mov
movnti
fs
push
or
xor
stos
mov
std
xor
test
mov
jle
jmp
and
mov
and
imul
and
mov
sbb
pop
(bad)
mov
mov
out
ds
scas
cmp
push
ja
icebp
mov
pop
jmp
jg
call
lods
pop
aad
and
push
ins
mov
nop
test
stos
jnp
das
xchg
add
mov
sub
fcomip
mov
fimul
in
jns
cmp
pop
ja
icebp
mov
lock
leave
push
sahf
push
sbb
sbb
imul
pushf
inc
(bad)
sbb
pop
jecxz
dec
in
arpl
test
test
push
adc
push
enter
and
add
movs
ins
cmp
test
iret
test
lods
dec
push
cwde
sub
cmps
jp
fidivr
data16
sbb
(bad)
out
jecxz
enter
push
cmp
in
pop
push
inc
mov
pop
push
push
jecxz
hlt
xor
test
sub
cmps
fwait
ds
inc
fcom
test
test
xchg
std
mov
adc
ins
and
sub
aaa
adc
and
push
lea
sbb
rcr
sbb
sub
ins
addr16
icebp
inc
int3
jb
adc
mov
ins
mov
inc
mov
mov
mov
cmc
or
ins
mov
mov
test
jne
scas
leave
psadbw
ret
or
xchg
pushf
iret
or
mov
sub
imul
les
test
sbb
jecxz
jnp
ins
ret
cld
cmp
cli
push
loope
mov
popf
fild
pop
xor
dec
ja
mov
lock
movs
mov
repz
inc
mov
shr
mov
retf
push
inc
in
pop
or
cld
out
xchg
add
ret
push
aam
leave
cli
(bad)
arpl
loop
enter
movs
ins
fisubr
leave
pop
test
and
sub
popa
push
das
add
fs
push
test
fiadd
add
jns
mov
adc
sub
call
adc
sbb
sub
rcr
ffreep
mov
and
js
dec
mov
call
pop
leave
lea
push
add
ret
call
xor
and
int3
and
mov
xor
adc
push
ss
adc
mov
(bad)
jge
aas
xchg
dec
cmps
adc
jg
adc
inc
mov
idiv
scas
cmps
push
cdq
xor
mov
inc
out
jnp
sbb
inc
jmp
sbb
leave
clc
xchg
mov
or
fs
(bad)
xchg
bnd
mov
push
fisubr
and
mov
mov
sbb
adc
mov
adc
scas
cld
mov
jnp
outs
out
push
sub
pop
mov
outs
lea
sahf
cmp
aaa
push
xchg
je
lods
inc
xchg
cmp
lock
js
push
xchg
sahf
je
mov
add
loopne
mov
clc
sbb
push
scas
aaa
xchg
mov
scas
jnp
adc
cmps
pop
cdq
xchg
push
lahf
cmps
movs
xor
adc
mov
xor
(bad)
test
push
shr
loopne
ja
bound
push
push
mov
hlt
stos
retf
clc
mov
add
call
push
add
test
in
dec
les
lods
fs
cdq
enter
ret
(bad)
movs
xchg
test
sti
daa
js
in
(bad)
int3
adc
cmc
aas
aam
in
mov
aas
cmp
outs
das
push
shr
scas
mov
sbb
test
movmskps
ins
mov
call
adc
pop
(bad)
les
jno
fsubp
cwde
push
ja
enter
inc
repnz
hlt
push
push
js
jmp
jp
and
js
cmps
mov
xchg
mov
retf
push
outs
jbe
push
adc
pop
dec
pop
cmp
dec
test
mov
mov
cmp
jb
aas
loopne
fidivr
loopne
push
es
pop
into
(bad)
mov
dec
dec
out
ret
mov
inc
or
jmp
stc
mov
jle
aam
mov
jmp
dec
jge
sbb
mov
stc
xor
mov
mov
mov
push
dec
jo
aam
data16
dec
int
and
xor
jle
and
push
mov
xor
test
loop
jns
dec
mov
and
adc
rcr
inc
pop
add
jp
and
push
mov
push
pop
and
and
aaa
and
xor
inc
sbb
scas
imul
inc
lds
or
mov
rcr
jb
mov
das
popa
xchg
in
dec
es
sbb
les
pop
and
xchg
mov
nop
push
aaa
sbb
cmc
cmp
mov
aad
or
(bad)
imul
jno
cmp
imul
retf
jecxz
push
pop
ja
dec
pop
scas
xchg
push
sub
mov
pusha
push
pop
push
enter
ss
rcr
loope
cmp
stos
or
fst
es
cmp
cli
aas
hlt
aaa
bswap
push
xor
push
inc
outs
jbe
mov
mov
or
(bad)
xor
je
nop
adc
ds
cs
in
or
repnz
adc
add
daa
or
mov
mov
jnp
fidivr
ds
pop
imul
in
dec
std
add
ins
clc
ret
clc
jo
outs
adc
mov
adc
dec
in
data16
jl
cli
mov
pop
jmp
push
lds
dec
loopne
sub
lods
cmp
mov
cld
loopne
test
ds
ja
and
dec
pushf
mov
dec
cmp
adc
sub
or
(bad)
ret
aam
add
out
test
mul
ins
xlat
dec
call
ds
and
(bad)
lds
icebp
rol
arpl
xor
out
ficomp
outs
add
jmp
push
ret
lds
lea
xchg
sub
movs
sub
dec
sbb
dec
shl
push
test
or
int
enter
mov
cmp
in
push
dec
push
fsubr
mov
or
mov
and
inc
test
ret
lds
xor
lods
(bad)
adc
into
rcl
(bad)
scas
mov
push
scas
push
add
bound
sbb
cmp
mov
sar
mov
(bad)
xchg
dec
je
mov
movs
iret
daa
mov
ret
push
and
(bad)
call
mov
test
fstp
fldenv
mov
dec
xchg
jno
sti
cmp
stos
shl
outs
adc
lods
push
cmp
leave
add
shr
bound
push
cs
add
pop
sbb
pop
leave
out
outs
xor
inc
inc
xchg
js
fsubr
inc
ret
xor
cmp
cmc
xchg
enter
jg
jnp
icebp
and
pusha
repz
dec
sub
imul
xor
or
retf
jns
or
or
mov
cld
mov
pop
mov
xchg
inc
sahf
adc
call
nop
or
mov
icebp
mov
pop
dec
sti
jle
cli
fistp
xor
lea
loopne
xor
leave
jge
push
xor
push
sub
es
mov
or
call
xchg
jg
rcr
mov
and
movs
xchg
xchg
ins
inc
imul
add
push
enter
mov
das
ss
push
dec
test
call
cli
iret
xchg
loope
pop
fidiv
scas
ins
sahf
and
dec
adc
xor
and
fsubr
and
or
test
mov
(bad)
shl
outs
mov
dec
xor
gs
cmp
loope
xor
arpl
dec
mov
retf
shr
ret
push
scas
aas
push
cmp
mov
cmps
cli
dec
sub
jmp
out
or
ds
movs
repnz
jge
fst
lods
push
pushw
dec
je
cmc
(bad)
pop
xchg
or
mov
lods
in
imul
out
dec
adc
les
inc
(bad)
or
jne
and
pop
cmps
sub
ins
inc
or
je
icebp
or
cld
sub
ret
addr16
neg
stos
push
call
push
jns
or
cmp
int
add
push
jmp
push
jl
call
int3
and
pop
jne
push
in
test
loop
inc
aas
add
mov
cdq
jmp
push
into
sub
and
xor
mov
scas
(bad)
lahf
sub
std
xchg
push
out
mov
bndldx
out
mov
sbb
aas
cmp
mov
xchg
test
mov
shr
iret
mov
mov
shl
fcmovu
ja
push
jo
mov
sar
push
push
mov
ins
lods
fwait
retf
dec
add
addr16
lods
mov
cmp
out
mov
popa
or
jp
arpl
jg
ret
repz
cmp
adc
jmp
stos
shl
dec
cmp
fmulp
iret
jne
jecxz
mov
jg
inc
or
or
(bad)
jne
(bad)
pop
inc
sub
xchg
mov
adc
mov
cmps
fdivr
aaa
and
stos
scas
cmps
mov
out
in
mov
repnz
leave
sbb
repz
out
cmc
je
dec
xor
inc
loope
cmc
push
sub
adc
ss
cmps
push
cmp
dec
push
loope
mov
sbb
sub
xchg
dec
add
repnz
nop
jmp
dec
jp
mov
lock
repz
inc
sbb
dec
mov
cmp
inc
rcr
scas
mov
or
dec
sbb
mov
and
xchg
cmps
pop
adc
cmps
cmps
sub
cmp
fsin
dec
outs
lock
pop
ja
or
jb
push
and
outs
inc
xor
pusha
push
ret
adc
jge
out
jge
jbe
dec
nop
mov
rol
jle
sbb
xchg
retf
das
repnz
sub
shl
int3
lods
stos
test
ins
lea
push
xor
stc
xor
push
leave
(bad)
daa
(bad)
mov
ret
adc
add
pop
clc
dec
test
pop
imul
adc
shl
scas
cmp
inc
jo
jnp
shl
inc
inc
out
fs
mov
in
test
jg
cmp
fmul
mov
mov
add
inc
ret
adc
mov
lock
div
cmp
aad
(bad)
xchg
ja
bound
sub
setg
sbb
push
adc
(bad)
call
add
popa
mov
jbe
data16
and
imul
(bad)
shl
nop
(bad)
push
call
or
sub
cmp
sub
push
add
pop
jg
xchg
popa
stc
mov
hlt
jecxz
sub
cmps
cli
mov
and
out
or
inc
add
xchg
fnstsw
and
scas
outs
adc
or
nop
or
pop
in
dec
out
adc
xor
movs
loope
fistp
pop
pop
fucomp
inc
outs
(bad)
jmp
sub
mov
imul
hlt
add
mov
mov
scas
xchg
xor
hlt
mov
test
mov
imul
hlt
dec
cmp
nop
mov
push
inc
pushf
pop
dec
push
push
jge
dec
sbb
jnp
mov
sar
dec
mov
push
cmc
sub
mov
ins
inc
ret
fsub
and
push
sbb
or
daa
xor
std
jg
icebp
rcl
inc
ret
imul
les
shl
jl
shr
cmp
adc
aaa
push
cmps
push
out
rcr
push
aad
mov
mov
(bad)
push
out
add
and
jecxz
jg
jnp
ror
call
cwde
jmp
gs
fist
retf
mov
adc
jo
cmp
in
jle
adc
ss
test
rol
in
(bad)
xchg
mov
lahf
push
outs
and
pop
aam
push
lock
dec
and
mov
mov
ret
xchg
push
push
mov
out
xor
ja
in
sub
test
arpl
jle
dec
call
(bad)
cwde
mov
dec
bound
or
jmp
jne
mov
sub
int3
out
jmp
adc
xlat
ins
xchg
mov
scas
jbe
jmp
push
shr
scas
into
scas
and
mov
dec
stc
lds
addr16
cmp
sbb
out
lock
sbb
test
mov
call
push
and
xchg
inc
nop
bound
fldcw
and
push
push
aaa
mov
lods
(bad)
sbb
cmp
inc
jne
inc
lods
push
push
pop
push
(bad)
sbb
leave
xor
add
aaa
sbb
loop
push
inc
arpl
add
sar
ds
loop
out
(bad)
loop
adc
cmc
jl
in
pop
cmp
xchg
test
mov
lods
fisub
adc
add
imul
add
fidiv
mov
mov
push
cmp
push
das
xor
jnp
inc
cli
jge
dec
xor
daa
mov
mov
cmps
outs
pop
adc
lahf
add
sbb
(bad)
ins
sub
ds
jmp
rol
outs
jle
clc
cs
call
mov
je
jnp
sub
sub
and
or
out
lock
adc
xchg
mov
jo
push
fisttp
in
cmc
sub
mov
mov
pop
lock
xor
rcl
fld
popa
leave
mov
xor
(bad)
in
xlat
jmp
xchg
out
mov
lahf
xchg
jle
mov
push
jl
cmp
sbb
stos
out
popf
retf
and
xchg
lods
(bad)
mov
movs
shl
arpl
or
js
int
cmp
adc
pop
adc
addr16
cmc
and
clc
rol
xlat
sbb
cmp
call
aam
aam
dec
clc
fld
shr
mul
mov
sti
fwait
cmps
sub
gs
xchg
mov
cmp
sbb
(bad)
pop
neg
fdiv
retf
dec
bound
sub
int3
jb
mov
fild
enter
sbb
pop
in
outs
and
scas
daa
jp
leave
test
nop
int3
jns
or
(bad)
gs
ret
jmp
cmps
retf
inc
jbe
lock
loope
dec
fidivr
jne
push
add
out
scas
and
addr16
clc
xor
cmps
sbb
cwde
pop
cmps
jnp
adc
push
or
into
imul
test
sub
and
ss
or
ss
ins
in
pop
js
cdq
inc
mov
imul
mov
xor
nop
dec
sbb
ret
sbb
adc
test
loop
test
hlt
mov
int3
and
jmp
imul
xor
xchg
out
push
add
icebp
xlat
bnd
in
mov
push
dec
adc
iret
and
dec
mov
and
retf
aas
jns
jmp
xchg
fs
dec
sub
scas
je
inc
jno
jg
jbe
cmp
cs
frstor
mov
out
jp
call
iret
xchg
fcomp
(bad)
sub
xchg
popf
popa
scas
and
cs
xor
or
mov
popa
dec
lahf
mov
xchg
xchg
(bad)
cwde
movs
mov
jle
paddq
or
jb
pushf
popa
fidiv
pop
inc
iret
lds
push
lods
xor
ret
add
pop
nop
mov
jnp
lahf
data16
test
push
mov
jbe
sbb
xchg
and
jae
pop
pop
fiadd
jp
cmp
out
xor
xchg
xchg
sbb
psllq
scas
push
sbb
jecxz
int3
stc
out
push
test
add
lock
in
mov
xchg
imul
xchg
stc
rol
movs
mov
xchg
jno
inc
or
(bad)
rcr
sub
jmp
or
lahf
mov
es
adc
inc
push
mov
fsub
xchg
xchg
in
inc
mov
sahf
add
jno
xor
ss
push
stos
jmp
in
in
add
xchg
mov
xor
pop
sub
jne
push
fisttp
scas
movnti
and
add
or
stos
mov
inc
mov
lea
xor
and
movs
ret
and
pop
(bad)
das
arpl
inc
in
arpl
xchg
mov
xor
xor
jbe
cmp
or
and
inc
cmps
jg
shr
shl
or
(bad)
lock
push
cmps
leave
mov
push
ss
lea
out
repz
push
dec
mov
lods
aaa
(bad)
pop
imul
mov
xchg
mov
xchg
dec
cs
sub
mov
fs
or
or
popf
mov
(bad)
mov
imul
sbb
daa
inc
enter
pop
push
dec
in
push
or
pop
rol
les
popf
jge
and
pop
(bad)
xchg
or
loopne
push
mov
sbb
stos
sbb
cmc
sub
rcr
adc
push
add
cmp
movs
test
addr16
xchg
mov
xor
outs
xor
mov
dec
int3
xor
lods
adc
ficom
scas
movs
fistp
std
push
dec
ds
addr16
pop
xor
pop
pop
aad
(bad)
(bad)
jmp
ss
and
mov
fs
mov
or
push
jmp
inc
and
add
fdivr
mov
dec
aas
ret
nop
aam
aad
dec
shr
and
into
xor
jmp
mov
call
dec
push
ds
aas
loopne
jg
pop
in
loop
mov
pop
xchg
cmp
cmp
jmp
mov
cmps
push
in
call
int
adc
xchg
jecxz
(bad)
mov
imul
ds
pusha
pop
int
push
xchg
cld
pop
out
xor
mov
dec
and
into
lods
pop
pop
imul
push
cmc
dec
sub
mov
outs
mov
imul
xor
mov
dec
jns
mov
rol
mov
adc
(bad)
rcr
retf
add
enter
jnp
adc
dec
cmp
sbb
mov
jecxz
out
pop
dec
add
sub
mov
push
mov
jmp
test
scas
jae
cmp
dec
dec
outs
xlat
les
sbb
mov
xchg
mov
or
jno
int
inc
jmp
push
pop
out
test
icebp
push
bound
inc
pop
jb
jg
or
outs
adc
mov
and
out
(bad)
cwde
sub
sub
(bad)
jmp
and
fld
jg
outs
retf
adc
cmps
ins
mov
sti
stos
sub
pop
jl
(bad)
jb
pop
push
mov
daa
(bad)
repnz
mov
fwait
mov
or
adc
ins
popa
sub
shl
enter
lock
jo
mov
cmp
scas
rcl
test
or
fisub
pop
and
adc
adc
ss
das
and
fmul
in
sub
dec
retf
push
(bad)
out
out
imul
xor
shr
fstp
xchg
movs
push
dec
cwde
or
jg
in
cdq
retf
aas
sub
mov
ret
dec
adc
cmps
lock
das
cs
popa
pop
jp
fs
jbe
pop
push
sub
inc
or
inc
test
and
jno
sbb
push
jecxz
mov
xchg
push
xchg
mul
jcxz
stos
pop
pop
inc
xchg
add
dec
xor
pushf
mov
mov
xor
push
int3
movs
dec
popa
movs
fidiv
ja
stos
push
mov
cmps
add
sbb
pop
ret
sub
mov
mov
loope
pop
bound
lods
mov
jno
inc
fwait
adc
nop
cmp
ret
(bad)
pushf
je
shl
sub
aas
test
cmp
or
(bad)
icebp
fnstcw
ja
jecxz
movs
movs
mov
mov
jbe
sub
pop
mov
xchg
ret
xor
sbb
mov
pop
test
sbb
movs
push
mov
fwait
iret
sahf
movs
sub
repz
inc
dec
mov
repz
cmps
jae
pop
loope
into
push
cmps
enter
imul
out
pop
repz
push
pop
lea
js
pop
or
xchg
scas
call
sahf
add
or
and
(bad)
ins
iret
jecxz
sbb
enter
or
(bad)
loopne
mov
mov
cwde
mov
sbb
iret
inc
outs
fadd
addr16
pop
daa
sti
mov
ret
and
dec
fsub
or
in
inc
sbb
adc
gs
inc
(bad)
and
push
fimul
test
test
mov
or
or
inc
mov
call
pop
and
jae
scas
aaa
stc
push
cmps
stos
jnp
pop
sub
xchg
mov
out
xor
jge
pop
scas
movs
mov
dec
mov
and
xor
std
xchg
lahf
(bad)
adc
ja
pop
fsubr
lahf
addr16
xor
inc
jp
jns
iret
in
mov
arpl
add
sub
mov
push
pop
lahf
push
pop
bound
push
repz
adc
data16
data16
in
push
movs
fld
add
stos
xor
mov
hlt
mov
imul
mov
xchg
in
fisub
fst
xchg
mov
and
pushf
jge
xchg
push
xor
xchg
pop
aaa
or
xor
push
mov
mov
lock
xchg
push
jge
es
int
add
xor
loop
inc
push
dec
aas
adc
sub
add
shr
mov
inc
cmp
mov
jno
cdq
js
test
inc
pause
jp
aaa
aas
push
scas
mov
sbb
pop
push
cmc
push
cmp
and
xchg
mov
repnz
ja
push
daa
jae
scas
or
cs
addr16
mov
fwait
out
inc
xchg
scas
jmp
mov
mov
xor
add
sub
call
popa
dec
cli
push
out
or
scas
sar
mov
xor
push
mov
arpl
add
sahf
add
jns
sbb
lods
test
icebp
retf
adc
sub
dec
icebp
gs
add
pop
lods
out
pop
and
cwde
mov
repz
cli
rol
outs
sti
sub
jb
mov
das
(bad)
dec
mov
movs
(bad)
push
and
shl
(bad)
inc
mov
stc
lds
scas
fstp
xor
sbb
push
int
je
das
dec
clc
adc
and
lds
cmp
cs
shl
int
sub
stos
push
ins
jo
add
mov
push
test
adc
sub
mov
sbb
mov
es
cdq
jb
xor
ret
je
mov
retf
push
pop
pop
add
adc
das
inc
add
out
push
push
cli
ins
fld
mov
sbb
mov
ja
ins
out
(bad)
loope
gs
mov
cmp
cmps
or
hlt
shl
std
out
add
icebp
fild
jo
and
cmp
bound
shl
ret
loop
movs
(bad)
paddusw
mov
adc
sbb
or
icebp
push
int3
fstp
stos
mov
pop
outs
pop
imul
stos
push
call
into
pop
sbb
out
mov
shr
xor
popa
rcl
mov
dec
lods
out
sbb
inc
push
cmp
dec
or
test
dec
test
idiv
inc
jnp
adc
dec
retf
mov
mov
inc
cmp
cdq
(bad)
adc
not
call
outs
sbb
pop
jno
cli
add
cmp
inc
mov
mov
lock
pop
hlt
out
ret
js
mov
xor
cmp
mov
bswap
mov
(bad)
xchg
xor
and
pushf
mov
icebp
test
cmp
xor
pop
and
pop
lahf
jecxz
mov
mov
out
leave
(bad)
pop
inc
cli
(bad)
dec
mov
shr
lock
cmps
not
call
out
arpl
sub
xor
pop
sub
dec
mov
jg
push
(bad)
movs
jno
jns
(bad)
aas
test
or
outs
(bad)
pop
xor
add
push
les
retf
dec
xchg
frstor
push
mov
and
popa
popf
(bad)
js
nop
test
jmp
pop
sbb
sub
or
jno
inc
call
mov
dec
xchg
sbb
imul
add
(bad)
mov
bound
test
ja
pop
xor
and
mov
ins
cs
ins
inc
cmp
cmps
dec
ds
or
ja
xchg
outs
pop
inc
out
add
mov
ins
jno
or
or
push
test
mov
inc
cmp
int3
ja
push
xlat
loop
into
es
inc
mov
mov
cmp
cmp
ss
jb
fcomp
repz
shl
adc
test
std
jbe
xchg
sbb
bound
jmp
aad
push
outs
dec
test
popa
mov
pop
inc
retf
sbb
pop
mov
mov
fidiv
xchg
outs
mov
lods
add
retf
mov
gs
stos
push
jg
inc
pop
into
pop
mov
cs
add
aas
push
cmps
sub
ja
cmp
jmp
dec
or
add
xchg
or
sub
jno
jno
push
mov
xor
sub
out
or
pop
stc
(bad)
dec
inc
je
rcl
or
mov
(bad)
test
enter
push
dec
mov
xor
adc
test
pop
or
dec
lods
dec
xchg
lea
aaa
in
mov
inc
cs
mov
mov
add
(bad)
dec
mov
sbb
ret
adc
outs
in
mov
ret
in
lea
sub
fnsave
push
mov
sub
icebp
popf
iret
push
pop
fadd
sbb
inc
and
retf
enter
xchg
hlt
pop
xor
lea
jecxz
je
pop
loopne
sub
inc
xchg
dec
fistp
xor
(bad)
rcr
pop
inc
cmp
pop
enter
and
call
js
add
daa
push
lds
cmp
cdq
mov
pop
out
test
call
inc
mov
inc
jb
pop
push
xor
or
jo
xchg
cli
icebp
and
fisub
lahf
jmp
jmp
fcom
mov
mov
cmc
outs
addr16
scas
addr16
jne
cmc
fist
sub
and
outs
out
push
test
lds
pop
mov
mov
cmc
adc
or
add
jae
out
xor
mov
mov
push
into
push
cwde
loope
sub
ret
xor
inc
sbb
mov
pop
jb
or
xchg
aam
aam
jb
iret
xor
or
mov
fsubp
in
call
daa
daa
mov
ret
push
mov
stos
cmps
(bad)
lock
xchg
repnz
fidivr
cmp
jge
imul
outs
add
iret
leave
xchg
stos
mov
cmp
(bad)
push
out
repz
mov
sub
gs
dec
out
jns
mov
stc
push
fstp
fild
daa
sub
inc
xor
icebp
mov
sbb
cmp
lds
jo
cwde
push
or
cli
daa
adc
mov
arpl
jecxz
xchg
or
cmp
popa
movs
mov
(bad)
pop
push
int3
mov
stos
test
push
frstor
inc
jbe
(bad)
daa
mov
mov
add
push
pushf
xor
test
xor
(bad)
fcom
sbb
arpl
push
ror
pop
fsubr
push
mov
fisubr
bound
adc
mov
xor
pop
(bad)
(bad)
fdivr
ins
jle
mov
xchg
xor
inc
call
popf
jo
cmp
(bad)
dec
adc
pop
add
mov
aad
call
push
out
mov
jbe
rcr
stc
scas
pop
cmp
cmp
cwde
mov
jmp
pop
test
popf
adc
cs
mov
enter
mov
popf
mov
or
sub
popa
das
fistp
hlt
nop
cmps
movs
call
scas
cld
add
mov
pusha
jmp
mov
jbe
inc
pop
add
sti
jge
shr
daa
aas
mov
(bad)
lock
loop
enter
hlt
jo
xchg
add
inc
sahf
mov
das
push
xchg
push
and
fst
mov
jno
sub
aam
and
cmc
hlt
sbb
dec
add
fdiv
(bad)
cmp
xor
mov
mov
mov
fwait
clc
or
jl
pushf
jmp
ret
outs
push
and
sub
mov
stc
ficom
nop
push
push
(bad)
cmps
in
(bad)
out
xor
scas
loope
iret
ds
sbb
out
sbb
jbe
lahf
outs
imul
adc
stos
cmc
fsub
sti
or
(bad)
data16
aad
mov
pop
cmp
js
push
in
fstp
push
jne
shl
mov
push
pop
inc
dec
xlat
es
loop
in
add
ins
or
ret
rcl
out
sti
iret
mov
dec
mov
retf
dec
in
mov
call
adc
push
sub
push
cmp
xor
xor
push
nop
js
cmps
rcr
outs
in
cld
push
xchg
mov
or
loop
cs
lds
cmc
(bad)
cld
xchg
mov
stc
mov
jle
pop
cmp
cmps
stos
pusha
and
sub
or
loop
mov
(bad)
(bad)
jle
je
xchg
test
pop
stos
shl
xor
loope
repz
pop
inc
lahf
sub
jb
cwde
test
and
mov
mov
jg
imul
or
lock
push
das
movs
sbb
jnp
pushf
jp
cmp
pop
stos
cld
out
cli
shl
inc
and
emms
or
sar
out
shl
idiv
mov
enter
jmp
xchg
jno
retf
imul
add
add
lock
cld
dec
push
rcr
mov
inc
icebp
push
lods
sbb
fisttp
inc
lea
loopne
stos
dec
pop
push
cs
push
dec
push
retf
shr
xlat
shl
mov
dec
aaa
adc
iret
aas
jmp
jnp
xchg
retf
xor
xor
out
jno
loopne
rol
xchg
loopne
cmps
pushf
bound
scas
fs
sbb
mov
aas
jmp
les
dec
lods
movs
stos
xchg
xor
mov
xchg
adc
stos
jnp
mov
xchg
jl
cwde
icebp
jne
mov
popf
(bad)
gs
jns
or
sahf
movntq
enter
sbb
les
dec
add
add
xchg
jo
pop
mov
inc
out
add
xchg
cmp
out
cmp
in
add
imul
pop
retf
int3
shl
inc
scas
ror
dec
inc
icebp
mov
sub
les
test
scas
outs
mov
cmp
icebp
sub
jno
mov
cmps
sti
js
xchg
xchg
mov
mov
scas
fsubr
mov
mov
fnsave
aam
lods
pop
mov
jp
inc
mov
repnz
cmp
xor
xor
xchg
(bad)
pop
sahf
mov
pop
int
pop
ss
scas
push
mov
std
aaa
in
fisttp
add
jmp
mov
cwde
pop
dec
imul
inc
push
add
pusha
lock
in
(bad)
pushf
sbb
jnp
imul
sahf
popa
cli
and
xor
ss
inc
xor
fcmovb
xchg
mov
ror
jg
hlt
test
iret
mov
push
mov
sub
sahf
sbb
sar
in
nop
jb
adc
in
outs
dec
aaa
addr16
into
(bad)
mov
pop
fisub
or
test
xchg
lock
xor
xchg
(bad)
out
pusha
stc
pop
or
fs
into
lds
jg
stos
inc
lods
adc
loopne
mov
adc
retf
loopne
test
inc
cdq
push
xchg
mov
popf
cmp
xchg
adc
ins
movs
jae
pushf
fldenv
out
xchg
adc
imul
rcr
jnp
loopne
jge
sub
out
dec
and
stos
sahf
into
fisub
fldcw
sub
adc
push
cmp
sbb
push
sbb
fisttp
xchg
lds
add
ret
lea
js
js
call
rcl
outs
and
jecxz
fucomp
pop
les
mov
add
iret
loope
in
mov
int
mov
pop
stos
aad
and
pop
test
adc
mov
mov
mov
int3
mul
(bad)
and
jb
loopne
pop
adc
mov
int3
dec
sub
cmp
mov
data16
jmp
xchg
cmps
adc
adc
dec
out
les
lods
outs
or
cli
ret
(bad)
pop
add
dec
repnz
in
mov
ins
and
jo
clc
cmp
call
shl
xchg
std
push
clc
mov
mov
fistp
sbb
sbb
mov
int
imul
inc
outs
xor
out
dec
hlt
sub
sbb
mov
or
and
aas
lods
inc
outs
mov
or
adc
sahf
ret
or
out
out
push
jge
fsub
or
out
add
pop
clc
inc
adc
and
jge
inc
das
push
fcom
mov
push
mov
rcl
rcl
cmp
stos
(bad)
push
pop
inc
gs
adc
out
sub
fbld
movs
retf
shl
pop
scas
daa
sub
adc
cwde
xchg
call
pushf
ins
js
popf
ret
imul
inc
fbld
scas
xchg
mov
cmp
into
xor
popa
sub
xchg
popf
bound
push
lds
and
pushf
loop
outs
(bad)
pop
out
enter
jmp
xchg
arpl
mov
adc
test
and
push
xchg
xchg
dec
push
js
mov
push
shr
hlt
adc
iret
call
adc
mov
xchg
or
or
popf
mov
ins
stc
jo
sahf
push
movs
imul
in
pop
mov
inc
loope
into
jmp
imul
inc
rol
pushf
mov
xchg
test
arpl
and
sbb
push
shr
mov
inc
jp
add
cdq
cmp
mov
add
inc
xchg
adc
mov
pop
jae
fld
cmps
adc
fs
mov
xchg
in
ins
nop
dec
lods
inc
jmp
jns
cmp
mov
rol
loope
jns
push
xor
xlat
loopne
(bad)
xchg
je
xchg
fld
sub
outs
xor
mov
lea
lods
inc
push
stc
push
mov
or
icebp
jbe
fcmovnbe
pop
ja
rcl
pop
fucom
sub
sahf
add
push
scas
int3
xor
nop
mov
ret
ins
out
and
cmp
scas
jb
dec
lock
add
(bad)
mov
push
(bad)
out
ds
es
sbb
scas
adc
mov
or
stc
jns
sti
mov
fwait
add
sahf
fisttp
xor
pop
add
gs
pop
(bad)
pushf
jmp
clc
retf
xchg
cmp
lock
xchg
repnz
sub
cs
ds
push
jmp
sbb
xor
das
call
push
sub
push
jns
inc
repz
and
and
pop
cmps
or
jns
ins
out
ror
in
cmp
lds
sahf
inc
int
clc
lods
jmp
mov
pop
outs
pop
cs
das
pop
(bad)
faddp
scas
fidivr
test
dec
(bad)
mov
sub
and
xor
js
ret
mov
retf
call
dec
ret
sbb
gs
mov
or
add
es
(bad)
scas
movq
mov
clc
inc
ss
cmc
in
dec
rcl
(bad)
dec
mov
test
daa
mov
cmp
mov
jnp
cmp
les
(bad)
iret
retf
mov
test
icebp
cdq
mov
sar
jbe
xor
mov
adc
fsubr
and
xlat
and
retf
ror
jb
xchg
sub
jo
in
and
jno
enter
out
push
scas
sahf
cmp
stos
(bad)
jmp
sbb
jmp
rcr
test
xchg
rol
pop
daa
nop
push
xlat
inc
daa
cmp
pusha
xor
and
call
jle
cwde
jmp
jge
in
ins
inc
repnz
je
mov
lods
dec
sahf
test
mov
pushf
sbb
push
int3
jge
xchg
call
dec
mov
add
pop
arpl
fwait
daa
fisttp
mov
and
sbb
ins
dec
mov
mov
out
dec
dec
imul
outs
dec
adc
ja
je
push
and
add
dec
popa
fs
leave
fistp
push
sbb
call
(bad)
pop
jle
cmp
xor
test
mov
scas
inc
jbe
and
stos
pusha
pushf
pop
outs
fsub
fstp
push
xchg
inc
clc
push
js
or
inc
es
mov
jg
enter
std
push
das
push
and
mov
in
sbb
aaa
jmp
aam
push
adc
inc
(bad)
push
sahf
test
shr
in
dec
sub
mov
in
stos
jne
sbb
js
add
sbb
mov
in
sub
push
jmp
std
sbb
div
sbb
sub
or
out
les
or
xor
adc
cs
add
add
lea
and
fxch
mov
dec
in
sbb
shl
jb
out
shr
sti
pop
mov
dec
and
leave
pop
xchg
repnz
test
dec
in
stos
cmp
outs
dec
push
xchg
sub
xchg
outs
and
popf
shl
sbb
imul
test
inc
dec
mov
jns
and
mov
mov
clc
sub
cld
pop
and
pop
or
mov
arpl
and
bound
cmps
mov
mov
ins
add
jecxz
jae
or
pushf
adc
jmp
sbb
je
ins
jmp
popf
xchg
scas
push
cwde
mov
mov
into
les
sahf
xlat
and
jle
sti
jbe
mov
ins
cs
or
(bad)
dec
mov
int3
(bad)
in
into
inc
mov
inc
jne
das
call
inc
clc
in
dec
lods
lods
ror
movs
add
pusha
es
fcom
div
sub
repz
sub
cmp
sahf
xlat
ins
in
dec
inc
pop
nop
jecxz
pushf
mov
popa
outs
retf
jnp
push
xor
gs
sbb
scas
mov
mov
mov
(bad)
fcom
mov
gs
gs
(bad)
cdq
mov
mov
fs
sub
push
cmp
lahf
adc
jno
(bad)
pop
inc
aaa
push
push
mov
fsubr
ret
sar
rcl
push
jno
add
bound
jb
inc
cmc
cmp
jmp
add
pop
jno
xchg
dec
(bad)
idiv
dec
xor
xor
dec
fisttp
xchg
inc
pop
dec
inc
ins
sub
and
sbb
push
out
test
jo
xor
pop
push
sbb
retf
push
push
test
in
mov
aaa
sti
dec
ins
dec
add
jecxz
xor
sbb
mov
mov
xchg
xor
aaa
pop
ins
in
inc
in
sub
lods
inc
cs
sub
std
and
adc
scas
and
sbb
rcl
inc
enter
(bad)
push
mov
inc
int3
fistp
xor
lods
pop
dec
mov
test
in
xlat
movs
sub
mov
leave
mov
fdivr
ficom
fisub
mov
mov
jecxz
inc
or
and
pop
outs
lahf
in
dec
std
lahf
jbe
int3
pop
push
jo
aaa
test
mov
sahf
xchg
push
sub
sub
sbb
add
repz
arpl
retf
and
xchg
into
or
gs
(bad)
add
jp
jnp
dec
in
loop
jne
mov
mov
and
pop
in
jecxz
out
pop
scas
cmp
pop
sbb
(bad)
aam
jns
dec
fsubrp
pushf
jle
repnz
pop
retf
jp
xchg
and
add
mov
test
dec
popf
xor
imul
pop
in
fist
pop
retw
popf
out
xor
loop
rcl
jecxz
jle
xlat
psubw
(bad)
retf
push
test
and
dec
mov
out
jl
and
push
inc
fistp
dec
movs
push
mul
sbb
sub
movs
mov
mov
push
imul
in
pop
enter
inc
or
out
rol
int3
repnz
icebp
mov
cmp
std
mov
(bad)
fcmovb
and
adc
out
pop
jae
push
das
iret
pop
xor
sub
fiadd
out
adc
gs
aas
test
iret
jb
jmp
dec
sub
jns
mov
call
xlat
inc
adc
fldenv
cmp
and
outs
ins
push
aas
inc
xchg
out
test
aad
xrelease
retf
cmp
jl
gs
mov
or
stos
test
ror
es
test
imul
ins
in
jns
xor
sbb
cmp
leave
mov
xchg
mov
pusha
xchg
or
mov
je
jb
mov
add
dec
cmp
adc
mov
jle
mov
sub
fs
sti
push
in
ret
mov
arpl
lahf
mov
push
xchg
sbb
xor
fsubr
jae
cmp
in
test
xchg
iret
push
push
daa
pop
aaa
xlat
pop
inc
stos
cli
cmp
nop
sub
es
mov
cmp
inc
mov
pop
test
jnp
mov
int
jbe
adc
add
mov
repnz
iret
sahf
addr16
mov
(bad)
pop
test
je
or
sbb
retf
sbb
xchg
in
cdq
mov
pusha
repnz
push
cmp
imul
sbb
ret
inc
xchg
movaps
out
jne
xor
cmp
icebp
ficom
and
lds
adc
cdq
fdiv
(bad)
xor
sbb
std
leave
inc
loop
ret
fist
in
lock
and
cwde
and
out
cmps
adc
pop
idiv
push
jg
fild
mov
ja
shr
nop
xchg
xchg
retf
jbe
xchg
mov
shr
mov
shl
xchg
loop
aaa
in
out
dec
nop
fwait
pop
sub
loop
in
mov
bound
retf
imul
inc
inc
repz
xor
jl
leave
and
or
cmp
cld
cmp
mov
dec
cmp
mov
js
push
(bad)
push
lahf
fbstp
dec
dec
dec
adc
mov
icebp
push
pushf
mov
nop
(bad)
xlat
div
fwait
into
pop
xchg
cmp
jnp
mov
sti
cmps
jno
xor
cwde
rcl
fs
dec
shl
cdq
lds
add
sbb
cmp
mov
push
mov
xor
nop
xor
or
test
lahf
ret
scas
mov
push
inc
ins
xor
and
jb
jl
push
stos
push
ficom
rcl
dec
push
or
es
int3
fwait
addr16
retw
push
xor
mov
sub
dec
stos
adc
ins
xlat
xchg
sbb
push
cs
imul
mov
pop
dec
push
ja
push
imul
ins
jecxz
inc
es
inc
je
cwde
mov
jo
and
lock
mov
push
and
add
inc
shl
cmc
enter
(bad)
fs
push
xor
pop
aam
xor
fidiv
xchg
add
xor
outs
cwde
add
aaa
and
adc
js
jg
mov
mov
in
push
rcl
xor
mov
stos
sub
jb
dec
push
cdq
aas
dec
test
ins
inc
dec
dec
sbb
inc
(bad)
jmp
sbb
movs
sbb
sbb
mov
(bad)
sbb
push
enter
push
retf
cld
cwde
enter
jle
push
je
xchg
pop
push
add
cmp
in
outs
or
and
mov
jecxz
loopne
retf
repz
data16
push
movs
mov
pop
sbb
data16
rol
or
test
jg
cmp
or
xchg
and
scas
test
push
stos
push
dec
jbe
mov
inc
pmuludq
imul
movs
sbb
jne
lods
pop
inc
out
dec
lahf
fidivr
add
clc
ret
pop
mov
lds
inc
inc
gs
pop
pop
mov
in
in
push
ret
inc
and
(bad)
repz
cwde
test
push
aam
push
inc
jecxz
cwde
loope
adc
call
jle
(bad)
ficomp
pop
rol
jmp
arpl
fidiv
dec
xchg
xor
cmp
sub
fstp
int3
jg
out
mov
pop
test
nop
mov
jbe
mov
daa
pop
imul
jle
aad
jg
scas
pop
div
dec
cmc
sub
sti
sahf
ret
(bad)
sub
dec
push
ret
xor
sub
mov
test
push
es
daa
and
pop
nop
push
jne
dec
bound
add
fisubr
adc
mov
movs
mov
je
stos
xchg
mov
fadd
xor
pop
ja
rol
add
loope
rcr
add
inc
ins
cmp
mov
xor
ins
and
outs
push
test
dec
xor
rcr
ins
jge
push
shl
adc
or
and
aas
cdq
mov
dec
or
or
int3
or
push
(bad)
cli
or
inc
stos
xor
push
imul
or
xchg
mov
mov
rcl
mov
cmp
or
mov
imul
loop
into
imul
in
add
jmp
pop
inc
jns
icebp
leave
jmp
add
adc
in
scas
xchg
leave
jae
int3
push
in
inc
jno
mul
cmp
and
pop
test
outs
frstor
cmp
mov
ja
xchg
pop
mov
je
add
fisubr
mov
xlat
mov
(bad)
xchg
movs
and
popa
les
(bad)
lods
fistp
jecxz
push
mov
push
push
in
call
(bad)
loopne
push
or
les
fadd
arpl
mov
xchg
data16
push
je
inc
idiv
stc
in
das
dec
inc
std
mov
fidiv
imul
and
inc
loopne
(bad)
mov
rcl
div
invlpg
pop
movs
icebp
jnp
mov
add
xchg
or
stc
mov
add
in
pop
out
pushf
ss
jecxz
(bad)
lahf
adc
xor
dec
inc
mov
add
dec
fsub
or
movs
lock
cmc
scas
scas
neg
in
repnz
je
retf
movs
lahf
mov
push
or
dec
in
cmps
into
sahf
sbb
xchg
scas
fnsave
lds
sbb
ja
push
inc
sbb
test
scas
popa
icebp
pop
repz
push
push
inc
sbb
push
aaa
jno
mov
aad
and
xchg
out
mov
push
mov
xchg
mov
clc
popf
lods
into
and
push
cwde
fld
pop
and
xchg
pop
sub
xchg
push
xchg
out
mov
add
cs
push
xchg
pop
sbb
fs
fdiv
cmc
mov
les
enter
addr16
cmp
dec
mov
or
in
dec
bound
cmps
sar
mov
push
dec
cmc
xor
popf
jecxz
xchg
push
outs
mov
xor
mov
xor
mov
and
fld
push
outs
cmps
xchg
dec
inc
push
rcr
mov
push
cmp
out
push
call
push
je
mov
call
icebp
sub
jbe
sub
push
aas
fcomp
into
pop
xchg
mov
lods
push
and
(bad)
push
das
in
mov
jns
cmps
or
imul
(bad)
and
les
inc
push
fld
shl
daa
popf
mov
(bad)
lds
repz
mov
pop
rcl
or
movs
or
test
enter
call
and
in
sbb
and
pop
mov
dec
add
jbe
pop
stos
sbb
pusha
loopne
stc
and
into
pop
int
(bad)
repz
ds
cmps
call
addr16
xchg
dec
jmp
imul
icebp
lods
inc
call
dec
jle
and
cli
enter
jns
jae
jo
or
xchg
inc
mov
pop
fild
inc
jp
xchg
es
fwait
add
not
cwde
dec
fnsave
sbb
call
ret
push
in
xlat
pop
cmp
push
in
clc
xchg
dec
dec
xchg
xchg
xlat
rcr
adc
gs
loopne
(bad)
les
cmps
test
sub
push
arpl
dec
jmp
popf
arpl
xchg
xchg
sbb
mov
mov
in
adc
pop
sbb
loop
and
adc
shl
and
and
pop
and
and
imul
in
stos
repnz
lds
andnps
dec
mov
xchg
dec
shrd
sbb
mov
jns
sti
sub
sbb
sahf
push
sbb
enter
pop
mov
mul
push
rcr
and
sub
sbb
xor
xchg
shr
jl
mov
jne
or
dec
jmp
ss
int3
xor
test
in
cmp
jmp
out
ins
push
sub
or
mov
jmp
(bad)
and
js
arpl
add
data16
sbb
jl
fdivrp
nop
pusha
sbb
xor
in
cld
arpl
and
bnd
mov
push
mov
cwde
ficom
inc
or
cmp
cli
jno
sti
xchg
push
repnz
ret
bnd
xor
mov
push
jmp
sti
or
xchg
out
test
es
or
inc
sub
cmc
or
and
stc
stos
rcl
mov
movs
dec
inc
push
enter
sbb
pushf
jmp
shr
pop
jmp
and
int
inc
mov
xor
or
push
sbb
repnz
lock
fs
sbb
jne
dec
cs
adc
mov
leave
and
sub
in
ds
push
and
or
push
jp
mov
mov
xlat
pop
dec
sbb
in
xor
dec
inc
sbb
push
jmp
mov
idiv
test
cmp
push
mov
pop
(bad)
cmp
inc
pop
in
mov
pop
mov
xor
(bad)
loope
dec
push
fs
sbb
ret
stos
std
xor
add
push
xor
fwait
scas
aad
mov
in
aad
cmp
xor
movs
push
push
sub
retf
push
mov
into
pop
pop
mov
or
pop
stos
mov
stos
lahf
add
shl
cmps
push
cs
je
sbb
sbb
sub
rol
add
sub
or
sti
nop
jecxz
aas
pusha
sar
inc
fsub
fisttp
mov
addr16
lds
push
add
mov
jl
icebp
mov
mov
mov
mov
cwde
push
hlt
and
jbe
mov
adc
sbb
push
fwait
xchg
dec
dec
test
stos
mov
pop
sub
popa
pusha
cmp
div
or
out
jl
pop
in
or
movs
mov
scas
adc
movs
mov
mov
adc
xchg
je
(bad)
pop
shr
cmps
mov
mov
jae
fcomp
mov
mov
or
mov
pop
push
sti
(bad)
mov
in
jge
arpl
pop
mov
mov
pop
aas
daa
repz
enter
test
iret
test
ss
stos
xor
(bad)
xor
sbb
int
pop
jb
push
push
sti
daa
cmp
dec
fs
sbb
push
int3
xchg
lea
jle
inc
(bad)
ins
sbb
fisubr
fadd
mov
out
and
ins
mov
fild
into
mov
inc
or
cld
clc
xchg
ret
add
pop
js
xchg
mov
mov
push
retf
outs
mov
jo
add
pusha
sub
clc
shr
jecxz
test
repnz
repnz
into
cmp
fsubr
pop
pop
sub
sbb
imul
mov
arpl
inc
push
add
cmp
fdivrp
mov
mov
outs
sbb
mov
or
xor
out
out
mov
aas
ror
xor
rcl
pop
fwait
mov
xlat
ret
(bad)
popa
pop
push
(bad)
dec
adc
add
xchg
leave
jl
mov
les
icebp
xchg
jmp
int
push
cdq
pop
push
(bad)
out
adc
add
adc
ins
inc
mov
jb
out
popa
ret
ret
mov
mov
bound
xchg
sbb
jno
mov
ficom
(bad)
jg
xchg
push
xchg
add
out
loop
push
stos
jbe
xlat
cwde
and
mov
aad
inc
fst
out
std
mov
or
push
leave
bnd
xor
popa
push
jmp
adc
mov
frstor
add
not
daa
repz
cmp
pop
(bad)
out
out
sub
stos
xchg
fiadd
pop
dec
sub
shr
mov
sub
test
loopne
das
jle
push
lock
fdivr
mov
and
xchg
shl
push
popf
out
xor
(bad)
shl
loope
inc
fst
mov
aam
bound
and
adc
and
fisttp
fstp
add
je
js
rol
xchg
xor
sbb
sub
xchg
push
add
cmp
mov
jecxz
dec
and
out
mov
pop
outs
rcr
adc
jmp
into
cmp
xor
into
pop
cmp
stos
pop
mov
xlat
fbld
clc
push
dec
push
movs
jmp
bound
cld
mov
mov
jne
mov
stos
(bad)
in
daa
ds
mov
es
xchg
add
push
scas
cld
pop
mov
inc
mov
rol
pop
cwde
loope
mov
dec
retf
sub
std
jnp
or
ret
out
xchg
jb
xchg
or
outs
adc
movsx
loope
ss
and
pop
and
scas
add
(bad)
and
inc
call
push
xchg
inc
ins
mov
push
in
stc
and
out
icebp
add
ja
inc
push
xor
push
(bad)
push
ins
cli
fcom
pop
mov
das
int
add
dec
push
xor
mov
test
clc
jno
out
out
jo
xor
ins
jns
jge
pop
(bad)
hlt
js
popa
addr16
adc
dec
clc
je
stos
cwde
dec
(bad)
pusha
fisubr
mov
push
pushf
daa
ss
cmp
or
test
xchg
cmps
xor
ins
lods
fstp
cmp
push
and
movs
clc
or
adc
aam
jnp
(bad)
cs
into
arpl
call
xchg
jmp
enter
xchg
mov
hlt
sbb
and
jnp
sub
sbb
or
fmul
inc
xchg
add
and
mov
inc
mov
xchg
add
xchg
jle
push
jg
cld
push
cmp
dec
(bad)
adc
push
or
enter
lods
ja
test
mov
movs
popw
test
xchg
sub
popa
fimul
pop
test
popa
imul
retf
ret
mov
into
frstor
xchg
mov
xor
dec
stos
cmp
jl
mov
stos
lds
mov
pusha
scas
scas
ds
aad
in
test
pop
arpl
ret
push
loopne
mov
or
mov
sahf
aaa
sti
adc
popf
pop
push
sahf
stos
xor
test
dec
adc
fmul
les
push
ret
or
adc
sub
adc
fsubr
imul
lods
inc
ficom
fistp
mov
psubq
fprem1
das
data16
xchg
xchg
add
out
imul
add
loopne
or
(bad)
or
cmp
push
cwde
mov
out
fsubr
(bad)
aas
cld
and
mov
xor
rcl
fwait
xchg
cwde
out
mov
add
or
push
mov
cwde
cmps
fisub
mov
leave
clc
cmp
scas
repz
or
mov
pop
push
test
mov
cmps
fld
jns
inc
cmp
add
xor
xlat
push
icebp
rcl
sub
cmp
sub
inc
pop
and
inc
dec
pop
out
xchg
push
mov
fwait
inc
ss
stc
pusha
jnp
pop
das
cld
dec
test
(bad)
pop
(bad)
fild
mov
and
(bad)
ins
push
enter
cmp
pop
jne
lahf
sbb
inc
imul
xchg
sub
adc
sahf
out
and
and
imul
fs
jae
iret
xchg
pop
ds
xchg
xor
jmp
mov
or
and
jns
jmp
xchg
xchg
jo
popa
mov
jl
jo
mov
push
inc
sbb
scas
mov
adc
mov
movs
fadd
int3
xchg
cmp
sbb
(bad)
leave
test
inc
sbb
xchg
iret
xchg
jl
sub
cmp
xchg
jmp
imul
cmp
(bad)
pop
inc
and
xor
repnz
cmp
in
push
adc
xor
setae
mov
pop
xlat
rcr
push
dec
cmp
hlt
jmp
outs
clc
and
das
and
aam
jne
dec
cli
retf
pop
sub
ds
sub
or
fldcw
loope
cmp
sbb
and
je
and
sti
add
ret
sbb
cwde
adc
xor
adc
cmc
test
gs
mov
xchg
into
test
cmp
push
aad
adc
imul
daa
xlat
sub
rol
lahf
sub
in
push
retf
mov
push
sub
popf
scas
mov
sbb
inc
xor
pop
pop
jb
cmp
inc
add
jl
dec
pop
pop
retf
mov
loopne
ja
in
js
sub
ins
dec
loopne
aam
cmp
retf
push
bound
shl
les
jge
adc
dec
(bad)
fiadd
push
inc
imul
fldcw
js
std
rcl
push
loopne
mov
mul
inc
add
es
(bad)
fsub
or
int
cmps
lods
inc
cmps
das
shr
lods
or
mov
(bad)
cdq
xchg
sbb
jne
mov
fldcw
mov
mov
sar
sub
loope
mov
fidivr
pop
test
cmp
ror
addr16
js
scas
xor
idiv
add
ins
and
xchg
jmp
les
sbb
cmps
test
loop
inc
ss
loop
stc
push
in
cmp
out
push
sub
retf
push
sbb
mov
inc
inc
in
lods
cmp
jecxz
push
gs
fwait
pushf
loop
jmp
push
inc
retf
mov
dec
xlat
(bad)
pop
(bad)
cwde
adc
pop
add
(bad)
les
(bad)
pop
and
xor
and
loop
rcr
call
jne
outs
sub
sbb
cmps
inc
jo
shl
enter
scas
call
mov
cmp
test
jmp
pop
lds
retf
cmp
cmps
push
outs
mov
add
adc
imul
add
test
mov
jns
add
xchg
int3
dec
std
xlat
bound
adc
fld
adc
cmp
add
sbb
cmp
int3
jle
inc
in
jl
mov
mov
xchg
adc
jmp
std
mov
xchg
and
xchg
dec
shr
or
shl
mov
cmp
add
retf
jno
stc
pop
lods
movs
daa
push
dec
xchg
test
loop
ja
cmps
and
inc
jge
fucomp
mov
adc
adc
ret
pop
fiadd
pop
call
cmp
cs
(bad)
jl
jge
jb
jnp
int
daa
add
jg
shr
outs
lods
ja
mov
in
sbb
pop
xchg
xchg
jo
popa
fcomp
jbe
sub
es
fcomp
test
outs
mov
lds
pusha
cmp
ds
loopne
ffree
add
mov
and
and
test
cmp
sbb
mov
cmp
ins
cld
and
rcr
das
pop
imul
jo
add
xor
bound
leave
push
aam
daa
or
lods
add
pop
or
inc
add
dec
inc
jecxz
into
test
loopne
push
pop
es
mov
out
push
imul
mov
inc
fist
lea
sti
push
sub
test
jb
fnstsw
(bad)
sbb
inc
adc
mov
dec
enter
sbb
outs
fstp
movs
dec
fcmovb
cmps
aaa
and
loopne
push
psubb
mov
xor
clc
or
or
fisub
dec
adc
jl
and
out
aas
cdq
loope
add
loope
jecxz
imul
es
out
out
rcl
mov
out
jmp
movs
mov
xchg
cli
lods
das
jmp
jl
dec
sub
pop
out
xchg
pushf
pop
scas
mov
cmp
jb
mov
push
xlat
and
mul
in
sti
nop
sbb
ret
adc
je
dec
jnp
jnp
pop
push
addr16
and
inc
add
test
shl
sub
xlat
outs
push
rcr
cld
lock
aas
call
int3
and
loopne
rol
cld
ss
mov
adc
sbb
aaa
ds
xor
lock
ret
push
and
xchg
dec
lods
stos
ds
jl
push
and
adc
into
push
pop
xlat
repz
jmp
jle
sub
scas
(bad)
mov
add
jae
imul
mov
xor
div
cdq
jge
loopne
(bad)
in
loope
sahf
pop
cmc
loop
nop
fsubr
aam
mov
loope
iret
jnp
cmp
adc
and
mov
mov
pop
(bad)
push
nop
ins
out
das
push
mov
mov
enter
mov
imul
nop
mov
out
push
lods
neg
sar
fcom
les
aaa
out
fdivr
ja
popf
add
stos
in
or
loopne
enter
cmp
ja
aam
ror
pop
cmp
scas
cmp
pop
mov
not
mov
stc
in
jbe
xchg
sbb
lods
cmp
sub
aas
mov
ror
sbb
cdq
lods
jmp
sti
mov
inc
out
cmp
cmc
shr
ret
(bad)
lahf
hlt
fisubr
inc
bnd
or
push
mov
sbb
mov
mov
ds
test
adc
pop
cld
clc
arpl
scas
xchg
into
xlat
mov
fistp
call
loopne
dec
mov
sbb
sbb
or
(bad)
outs
sbb
mov
(bad)
loopne
ret
mov
dec
arpl
mov
xor
lock
dec
push
xchg
fisub
inc
adc
mov
daa
xchg
cs
xor
or
rcr
or
inc
loopne
push
movlps
(bad)
fld
and
call
jmp
adc
mov
ror
cdq
mov
loopne
xlat
xor
sub
xchg
not
ds
dec
retf
mov
sub
mov
hlt
and
and
and
(bad)
jmp
jmp
repnz
dec
call
arpl
push
data16
imul
(bad)
jge
dec
fisubr
adc
mul
xchg
pop
cmps
in
je
inc
daa
mov
lock
push
pop
push
shl
jg
and
xchg
cmp
pop
or
inc
sar
out
jno
inc
pop
ins
jns
(bad)
scas
mov
fmul
(bad)
and
and
or
mov
fwait
inc
mov
inc
add
xchg
mov
pop
sbb
movs
cld
leave
(bad)
dec
fidivr
mov
or
leave
mov
and
jp
mov
dec
lods
push
sub
les
addr16
outs
add
sbb
cmp
push
int
jns
test
mov
repz
sbb
in
imul
gs
mov
cmps
xor
js
pop
call
xor
sti
pop
xor
fild
stc
and
aad
pop
hlt
pusha
xchg
push
xor
pop
mov
(bad)
jns
inc
out
in
and
mov
daa
lods
xchg
and
iret
add
push
pop
mov
jae
xor
leave
imul
xchg
retf
or
and
mov
jbe
call
xchg
jge
push
mov
mov
hlt
or
in
or
mov
or
sub
scas
cmp
movs
dec
outs
ret
hlt
add
xor
mov
mul
mov
lods
pop
(bad)
push
adc
push
xor
xlat
in
js
aad
jnp
and
xor
jecxz
xchg
cmp
fdivr
add
movs
enter
leave
(bad)
int3
pop
add
sub
jp
int
(bad)
cmp
jno
dec
jmp
cmp
aas
adc
scas
xchg
ja
jo
addr16
aaa
popf
inc
ds
les
out
xor
lahf
loop
call
sar
lods
(bad)
cwde
xor
pop
mov
push
sbb
stc
xor
stc
inc
push
cmps
xlat
ds
and
mov
pop
daa
inc
mov
rcl
out
mov
pop
sbb
jle
nop
sub
cmp
ins
xchg
ret
cwde
in
xor
les
sub
and
mov
pop
adc
pop
ins
cdq
xchg
inc
nop
push
or
xchg
into
mov
sub
mov
jne
jmp
mov
jmp
inc
ret
cdq
lods
xor
cli
adc
repz
or
dec
fisubr
cmps
iret
outs
test
in
popf
nop
jmp
mov
pop
test
mov
loop
mov
xchg
fcmovbe
mov
jb
adc
ret
outs
cli
push
sbb
pop
adc
mul
xor
mov
jno
dec
lea
inc
and
sub
xchg
jl
adc
mov
cmps
xchg
inc
lds
cmp
repz
mov
inc
mov
sti
sbb
push
mov
sbb
push
sbb
xchg
inc
sbb
push
nop
and
sub
dec
and
fdivp
sti
xchg
xor
mov
leave
ret
and
shl
mov
adc
popf
xor
test
or
jp
push
int
add
jle
imul
jnp
lds
fistp
jp
cmp
pop
pop
das
dec
mov
pushf
fadd
and
and
adc
aam
(bad)
pusha
bound
sub
xor
fistp
push
push
jmp
sbb
push
pop
fnstsw
add
lock
dec
push
rcr
xor
dec
pop
sbb
loopne
lahf
ret
ins
dec
cmps
shl
stc
int
sub
or
(bad)
nop
jne
dec
daa
retf
push
add
pop
popa
pop
in
es
mov
cdq
pop
push
cld
add
inc
imul
sti
outs
cdq
jg
out
mov
jo
mov
lods
adc
and
sbb
es
jecxz
icebp
cmp
inc
mov
dec
mov
xor
xchg
repz
cmc
jmp
push
dec
and
icebp
mov
mov
sbb
pop
test
scas
push
xchg
xchg
fcom
lds
imul
sub
in
test
xchg
mov
dec
cdq
(bad)
xor
add
rcr
clc
xchg
adc
cmp
mov
rcl
dec
adc
mov
div
fcom
test
pop
jbe
sbb
rcl
or
cs
sbb
jg
jae
ret
call
add
test
lods
mov
mov
test
xor
adc
out
stos
shl
jge
loope
clc
inc
outs
das
adc
mov
pop
retf
xchg
in
lods
cdq
sbb
stos
ror
int3
inc
inc
mov
fcmovnb
rcr
scas
jo
xor
lea
push
mov
xlat
(bad)
mov
mov
dec
inc
mov
fisubr
sbb
repnz
jns
aam
test
pop
mov
test
rol
adc
mov
lods
mov
or
repz
xchg
jbe
jae
mov
outs
dec
ja
ret
add
push
cmp
mov
aad
retf
sti
sbb
repz
(bad)
jae
ss
pop
sub
scas
fadd
(bad)
cli
jnp
sbb
mov
aad
sub
mov
sbb
xchg
gs
imul
jns
xor
xchg
test
fdivrp
jbe
and
stos
adc
popa
mov
ins
dec
jnp
fcmovbe
cmp
and
and
cld
and
adc
repz
mov
loope
mov
jg
cmc
arpl
fnstenv
out
inc
push
ficomp
push
cwde
test
cmp
add
xchg
stos
ins
lds
fsubp
pop
sbb
mov
std
add
bound
pop
pushf
adc
outs
cdq
mov
dec
cmp
ret
punpckldq
jae
fcom
jmp
mov
dec
xor
pop
mov
shl
mov
sub
sub
shl
call
in
adc
(bad)
repnz
cmp
js
out
popf
or
fidiv
push
sahf
sbb
js
rcr
in
pop
inc
fimul
ffreep
sbb
lods
(bad)
jbe
popa
inc
cmp
leave
adc
mov
dec
and
cwde
cmp
mov
pop
shr
mov
mov
push
dec
adc
jp
ins
loope
aad
bound
pop
inc
movs
pusha
cmp
xor
aad
mov
lods
inc
or
lahf
jo
mov
xor
(bad)
in
mov
call
aad
outs
push
mov
repz
aas
cs
fisttp
dec
sbb
push
cmp
leave
add
das
fadd
jecxz
test
add
cmc
and
mov
jae
add
mov
stos
iret
fist
xchg
sub
fisubr
in
call
scas
pop
popa
push
fist
sub
xchg
or
sti
movs
add
stc
jl
xchg
pop
or
mov
mov
loope
lds
dec
push
cmps
arpl
pusha
enter
ja
add
gs
(bad)
jge
add
scas
out
stos
mov
adc
outs
ja
inc
push
sbb
mov
adc
adc
fadd
ja
and
fcom
or
xor
xchg
push
(bad)
adc
sti
adc
repz
jne
adc
mov
arpl
jmp
sub
cmp
in
in
in
daa
fwait
in
cmp
repz
jmp
repz
push
retf
jle
scas
adc
pop
add
dec
iret
sub
dec
je
sar
sub
out
xor
out
inc
ret
movs
adc
push
clc
pop
xchg
jl
nop
jns
(bad)
fisubr
adc
inc
xor
and
mov
shl
or
mov
push
push
mov
pop
inc
xchg
aas
mov
push
add
mov
mov
and
je
es
mov
adc
sub
cmp
dec
int
cmp
stos
mov
das
int
int
adc
and
mov
mov
sbb
repnz
test
inc
(bad)
ds
adc
mov
mov
pop
mov
xchg
jno
push
nop
mov
mov
icebp
xor
xor
mov
stc
sar
mov
test
movs
mov
jne
rcr
and
(bad)
inc
retf
das
retf
loope
cli
dec
jmp
shr
shl
retf
dec
sbb
stos
adc
dec
daa
dec
inc
mov
arpl
jmp
jbe
daa
xor
aad
sub
loope
and
sbb
fwait
mov
shr
call
adc
and
lds
mov
sub
test
pmaxub
std
cdq
in
icebp
pop
xor
push
mov
dec
xchg
add
pop
adc
loopne
or
pop
add
dec
mov
test
sbb
push
push
adc
stos
in
inc
inc
cmp
jp
sbb
lods
out
adc
or
inc
mov
and
xchg
xor
xor
sbb
pop
pop
out
dec
loopne
mov
push
xor
sub
and
inc
add
inc
mov
mov
pop
mov
lods
push
inc
sbb
inc
pop
push
or
xor
xor
cmp
cmp
pop
fsubr
adc
and
push
cmp
inc
lea
push
xor
loope
pop
(bad)
out
mov
cmp
lahf
test
daa
push
lock
lock
fsubp
fild
pop
add
arpl
addr16
jg
mov
inc
sbb
inc
mov
fs
mov
push
fadd
cmp
rep
pop
xchg
arpl
mov
push
push
xor
jmp
inc
push
xor
sub
xchg
addr16
jmp
xor
scas
fstp
jle
shr
call
pop
nop
mov
fstp
sar
or
int
es
dec
xor
sti
inc
or
mov
push
addr16
add
cmp
push
pushf
mov
adc
xchg
and
lahf
cmp
or
xchg
mov
xor
mov
dec
and
lods
xor
mov
sbb
pop
sub
dec
pusha
cmp
cmp
inc
mov
ins
(bad)
cmovg
cdq
retf
xchg
sbb
inc
cld
das
rcr
pop
or
inc
mov
push
xchg
jg
mov
(bad)
fsub
dec
lds
mov
xchg
xchg
ins
(bad)
mov
mov
push
sbb
pop
add
or
fidivr
fcomp
mov
ss
arpl
shl
and
aas
xor
add
jb
xlat
or
mov
mov
pop
and
inc
rol
mov
push
mul
and
dec
jg
jb
or
cld
fld
rcl
les
xlat
mov
test
test
inc
test
enter
shl
and
test
fcom
jp
cmp
imul
icebp
inc
ret
jp
lock
mov
mov
(bad)
daa
icebp
sub
xchg
mov
mov
sti
sub
mov
and
xchg
sub
es
pop
call
add
idiv
mov
or
out
dec
loope
out
push
int
dec
lds
shr
stos
repnz
add
push
(bad)
add
or
jnp
inc
ds
sbb
cmp
sub
fnstsw
(bad)
xor
and
pop
in
pop
imul
(bad)
ja
sub
push
xchg
rcr
mov
and
repnz
out
cwde
xchg
inc
adc
(bad)
cmp
dec
out
fdivrp
inc
inc
mov
jnp
jle
mov
sbb
ror
push
pop
ins
aam
clc
cmp
cmp
mov
cvtps2pd
stos
sar
out
inc
adc
scas
lods
stc
lea
cmps
outs
addr16
push
les
neg
mov
pushf
gs
loopne
cmp
mov
(bad)
cmp
push
ja
ja
out
call
xor
imul
pop
jno
aad
dec
adc
fwait
nop
xor
mov
add
adc
hlt
mov
(bad)
scas
sbb
push
push
cmc
stos
sub
adc
pop
push
cmp
retf
xchg
add
xchg
lds
cmps
movs
out
mov
scas
add
shr
inc
test
sahf
mov
push
aad
add
push
idiv
add
jecxz
in
ror
sbb
push
mov
cld
cmp
xor
rol
pop
sub
xchg
mov
jp
popf
xor
cli
and
pop
daa
adc
cmc
xchg
xor
dec
xor
push
enter
push
pop
dec
cmp
out
jb
scas
add
inc
jle
(bad)
imul
jmp
test
xor
mov
outs
mov
cmp
or
pop
mov
lahf
arpl
test
int3
mov
in
(bad)
add
jne
mov
fisub
nop
hlt
adc
mov
imul
retf
add
adc
or
in
ja
pushf
into
inc
add
mov
mov
xlat
sub
cmp
(bad)
mov
pop
jnp
cmp
pusha
mov
xchg
fstp
test
sbb
call
xchg
arpl
jb
ret
or
pop
and
add
lock
mov
repz
mov
cmp
mov
jmp
ins
fdivp
mov
sar
int3
add
test
adc
inc
add
(bad)
setg
xor
sub
out
pop
mov
sbb
adc
cmp
mov
in
xchg
out
(bad)
mov
and
cmp
pop
mov
add
mov
sti
mov
test
mov
cmp
jno
shl
pop
dec
stos
fmul
xor
adc
enter
dec
inc
std
mov
jns
adc
scas
xchg
mov
mov
pop
in
adc
in
arpl
mov
adc
adc
adc
inc
sbb
inc
aam
in
mov
sbb
dec
rcl
(bad)
jmp
retf
jmp
sbb
xchg
mov
pop
xor
repnz
add
imul
cmp
add
xor
(bad)
fwait
ror
mov
jge
add
icebp
cmp
hlt
push
inc
adc
sub
cs
out
repz
enter
xchg
push
mov
dec
pop
jo
or
xchg
(bad)
jle
retf
push
in
repz
sub
xchg
push
ins
sar
jmp
fmul
push
jmp
ret
ret
mov
enter
lods
xor
xchg
jmp
mov
cmp
pop
bndstx
push
aam
out
and
xor
xchg
inc
mov
mov
push
dec
daa
repz
mov
div
je
sahf
mov
and
or
stc
xchg
pushf
sahf
xchg
lods
xchg
dec
mov
sar
cli
test
into
in
sbb
add
daa
and
jae
test
lea
pop
lods
mov
aas
pop
retf
xchg
pop
ss
add
mov
in
(bad)
pop
add
je
mov
mov
into
outs
into
ds
adc
mov
push
adc
mov
or
pop
lods
xlat
ret
in
ins
or
and
(bad)
push
cmc
outs
(bad)
out
jno
dec
jp
lahf
icebp
mov
xchg
mov
xchg
pop
out
jecxz
neg
adc
cmp
mov
cmp
ja
imul
or
jbe
xchg
imul
rcl
mov
es
pop
and
xchg
xchg
sbb
fimul
popa
push
sbb
leave
mov
mov
ror
adc
scas
and
enter
mov
fmul
in
xchg
js
jae
dec
mov
test
pop
mov
mov
lahf
sbb
jmp
(bad)
pop
pop
int3
mov
inc
cmp
std
xchg
and
inc
stos
shl
outs
rcr
lds
xor
imul
push
or
enter
add
mov
jp
pop
dec
cdq
fwait
pop
pop
inc
movs
cmps
dec
jl
cmps
push
adc
mov
aad
sub
neg
jl
out
or
dec
mov
and
sbb
sub
lock
or
fs
sub
adc
add
jmp
cmp
mov
jnp
adc
(bad)
cdq
loop
xor
out
pop
inc
push
mov
(bad)
jo
mov
rcl
mov
mov
call
shld
jle
adc
sbb
data16
jae
repz
fadd
xor
push
ins
jnp
movs
xchg
adc
cmp
mov
dec
sbb
pop
(bad)
cmp
mov
pushf
(bad)
add
cmps
push
inc
les
xorps
sub
out
adc
outs
and
(bad)
lahf
movs
dec
mov
(bad)
sub
adc
or
aas
add
mov
mov
push
lea
(bad)
imul
repz
in
dec
imul
jmp
add
fs
push
inc
inc
and
fs
ds
mov
fstp
ja
mov
xor
das
push
mov
lods
loopne
mov
lea
test
sub
ja
cld
cmps
fstp
not
stc
add
(bad)
in
(bad)
mov
stc
cmp
xchg
icebp
mov
and
mov
(bad)
int3
jo
jb
push
sbb
push
push
jae
mov
test
movs
call
fisttp
les
popf
into
mov
jb
sti
jmp
jnp
dec
cmp
dec
xor
aam
mov
add
cmp
ins
inc
sti
aad
lea
mov
hlt
test
mov
xor
sub
cmp
shl
mov
adc
adc
scas
out
push
jle
test
sahf
into
dec
adc
mov
mov
add
fnstcw
pop
cmp
aas
sbb
mov
(bad)
xor
movs
fiadd
dec
jne
lock
data16
aaa
push
push
hlt
bnd
sbb
aaa
das
fisttp
(bad)
aas
mov
(bad)
fcomp
movs
(bad)
jmp
add
(bad)
in
mov
inc
adc
add
out
inc
cdq
inc
cmp
push
xor
ret
add
and
ja
xor
push
test
int3
lds
jmp
sbb
sub
leave
xchg
mov
dec
push
es
cli
xor
rcl
xor
idiv
jmp
sub
stc
test
ins
mov
cwde
pop
cmps
repz
adc
pop
jmp
in
test
jne
xor
jae
test
adc
inc
pop
and
ins
das
sbb
add
dec
sar
or
movs
sbb
cmp
scas
inc
or
fisub
jno
sbb
fcomp
mov
call
dec
cmp
mov
sbb
repnz
mov
cmp
js
push
add
test
movntps
cmp
mov
ss
hlt
stos
outs
xchg
inc
add
movs
retf
jbe
cli
int3
je
movs
loopne
repnz
cmps
popf
jne
add
shl
inc
lahf
add
xor
repz
into
inc
fs
push
xchg
clc
imul
lods
repnz
mov
sbb
loopne
cli
add
enter
push
sbb
jne
sahf
pop
add
ins
adc
loopne
cwde
mov
(bad)
sti
push
lds
imul
call
inc
loope
fs
rcr
std
dec
push
pop
stos
cmps
movs
bound
xchg
pop
push
lea
in
cdq
inc
mov
not
ret
and
sbb
push
dec
add
xchg
ss
push
movs
test
lds
dec
fucomip
in
popf
popf
xchg
sub
addr16
sbb
jb
(bad)
xor
xchg
popa
aad
push
fadd
pop
sub
mov
fs
dec
outs
cld
out
push
xor
inc
jno
sbb
cmp
push
lea
fist
mov
jmp
aaa
dec
add
push
mov
sbb
fstp
das
push
pop
or
outs
inc
mov
(bad)
or
adc
daa
test
xchg
xlat
jmp
mov
pop
xchg
psubq
out
cs
mov
sub
pusha
xor
ret
mov
dec
pusha
push
mov
and
sbb
or
dec
loopne
lds
push
mov
ror
push
pop
cld
add
cwde
adc
sahf
repnz
add
lods
loop
inc
daa
push
or
arpl
cmps
arpl
cmp
mov
imul
cmp
jno
inc
pop
sub
mov
mov
(bad)
(bad)
mov
imul
dec
add
bound
cmps
push
aam
ror
push
aas
push
mov
cld
out
(bad)
aas
ja
int
push
lea
push
shl
sbb
dec
rol
add
mov
ja
pop
mov
mov
pop
pusha
fld
jb
outs
sbb
pinsrw
sub
lods
sub
mov
dec
xor
call
inc
mov
lods
addr16
sub
fadd
push
add
inc
mov
xchg
fwait
loop
fmul
cmp
push
stos
inc
sbb
popa
xchg
call
loope
pop
mov
jl
mov
add
sbb
inc
sti
lods
mov
cmps
repnz
je
loope
out
fs
inc
movs
and
test
(bad)
test
cmp
jmp
repnz
jp
cld
mov
xchg
shl
push
stc
stos
mov
inc
(bad)
jae
pop
mov
gs
daa
xchg
ret
sar
gs
dec
add
adc
mov
mov
cmp
mov
fadd
dec
popa
xor
push
push
jle
xor
and
push
mov
fistp
push
loop
outs
sbb
mov
xchg
lods
and
mov
lahf
ins
and
inc
jno
mov
mov
bound
sub
pop
jp
dec
ins
stos
addr16
aad
dec
ret
inc
scas
test
ret
call
fcom
into
cwde
add
xchg
lock
pop
outs
jmp
xchg
pop
shr
leave
fldcw
mov
sbb
in
lock
xchg
loope
mov
out
mov
mov
xchg
cld
sbb
mov
ds
(bad)
fdiv
rcl
std
xchg
adc
adc
int
sbb
std
mov
jae
lahf
outs
and
cmp
leave
xchg
imul
dec
aad
dec
lea
in
enter
or
hlt
sbb
mul
fwait
mov
adc
jecxz
mov
and
icebp
daa
and
rcl
ja
lods
add
pop
adc
aam
mov
out
jne
ja
mov
mov
cmps
and
in
shr
cmps
(bad)
pop
xchg
adc
addr16
sbb
test
mov
test
mov
lahf
jl
fild
clc
icebp
push
mov
mov
out
dec
pop
das
push
add
out
ror
dec
mov
scas
cmps
xchg
inc
retf
pop
aad
pop
scas
jl
sbb
mov
or
scas
movs
in
(bad)
and
and
pop
enter
lahf
aaa
jne
xchg
dec
jns
sbb
in
push
shl
push
dec
inc
cmp
mov
jbe
jb
jmp
mov
sbb
daa
pop
adc
cli
fwait
fwait
retf
dec
int
mov
or
lahf
sbb
mov
jmp
jno
or
popf
rol
stos
inc
rol
ins
sub
mov
mov
stos
mov
outs
out
cmp
js
xlat
inc
fsub
shr
inc
es
mov
lods
pop
adc
cmp
sbb
push
lods
dec
cmp
clc
lahf
jmp
jge
add
in
cdq
les
jb
jno
or
stos
mov
pop
movhlps
jp
lea
jmp
dec
push
mov
cmp
xchg
fwait
inc
jge
jge
retf
mov
xor
das
cmps
cmp
sti
xchg
add
icebp
ffreep
inc
arpl
in
jb
clc
repz
ret
mov
pusha
sub
into
fsubp
lds
mov
xor
push
xor
mov
std
and
rep
mov
es
fs
pop
pop
or
in
inc
dec
adc
out
not
stc
dec
dec
mov
cmp
stc
std
test
(bad)
jbe
and
jnp
stos
sbb
leave
push
pop
ds
mov
mov
repz
sub
mov
test
xchg
gs
loope
aam
cmp
mov
cli
dec
or
lods
enter
je
es
inc
inc
mov
jl
pop
xchg
sub
fwait
pop
fld
jecxz
rep
data16
rcl
imul
and
inc
adc
mov
scas
es
push
clc
arpl
push
aad
rol
xchg
and
jae
mov
mov
(bad)
cmp
dec
or
mov
and
test
dec
das
stos
fisttp
mov
dec
push
popa
stos
pop
nop
imul
add
(bad)
push
test
imul
push
sahf
sti
xchg
mov
mov
in
xchg
pop
adc
dec
lods
cmc
sub
das
dec
xor
push
das
rol
jb
jecxz
pop
jge
(bad)
lock
mov
imul
cwde
adc
xor
pop
or
ds
cmc
add
in
ins
test
and
ret
xchg
sbb
addr16
imul
jno
pushf
jge
pop
xchg
ins
mov
pop
mov
dec
mov
shl
adc
rcr
loop
jae
jg
xchg
repnz
(bad)
cmp
fisttp
mov
push
repz
ss
(bad)
mov
pusha
cmp
jmp
or
cmp
adc
lds
jg
cwde
jo
mov
repnz
xor
hlt
mov
mov
inc
and
mov
loope
xchg
call
imul
mov
movs
inc
test
in
sub
in
icebp
xlat
or
adc
(bad)
sahf
push
and
jle
call
icebp
xor
dec
scas
rol
ss
xchg
jnp
and
cdq
mov
and
mov
dec
jl
or
test
(bad)
(bad)
sti
shl
icebp
ja
lahf
cld
pop
push
fmul
dec
gs
jp
inc
dec
adc
xor
and
lock
sbb
xchg
xor
les
in
jg
xor
lock
push
out
cmps
out
adc
push
cmovno
lock
mov
sub
and
test
popf
mov
call
pop
lock
mov
nop
and
or
clc
push
repz
sub
sub
ror
add
adc
jns
jnp
add
aaa
imul
popa
mov
mov
stos
push
cmp
bound
mov
mov
cdq
dec
or
repz
clc
(bad)
mov
call
and
jg
dec
repz
jle
cmc
int3
fistp
mov
(bad)
loop
in
jmp
jo
popf
push
scas
or
outs
xor
inc
rol
in
(bad)
sub
mov
stos
rol
or
pop
sahf
(bad)
in
(bad)
mov
lock
fidivr
retf
and
mov
sbb
stos
(bad)
jecxz
scas
fistp
jne
adc
aas
in
fcomp
jae
popf
pop
(bad)
sub
jo
js
add
jg
das
outs
(bad)
jb
retf
mov
jbe
repz
mov
jns
mov
fwait
(bad)
mov
pop
push
jp
xchg
jle
xchg
xchg
stos
xchg
movs
js
rcr
jns
pop
mov
lahf
cmps
leave
das
cmp
add
push
add
retf
xor
fild
sti
sbb
pushf
fild
mov
xchg
aas
mov
js
gs
pop
or
mov
lock
jno
(bad)
fdivr
inc
jl
push
mov
leave
adc
cld
out
int3
test
or
sub
dec
xor
neg
pushf
ficom
sub
push
pop
loopne
push
lods
dec
(bad)
popa
mov
jo
xchg
sar
cmp
add
add
inc
test
sbb
or
jae
int
fdivr
add
pop
mov
ins
cmp
or
js
mov
mov
cmp
shr
mov
stos
(bad)
pop
imul
cwde
jno
nop
loope
fidiv
jno
add
or
sub
in
retf
inc
mov
push
pop
ja
idiv
std
adc
call
or
imul
xor
jecxz
gs
jp
jbe
clc
cmp
addr16
movs
inc
(bad)
and
push
cmp
and
or
into
jmp
je
lock
push
mov
data16
jmp
inc
mov
inc
sub
mov
add
pop
in
movs
xchg
pop
push
mov
int3
dec
aad
mov
lods
push
lahf
jl
mov
mov
scas
popf
or
inc
pop
jo
or
imul
cmps
out
movs
sub
icebp
adc
test
test
aad
ja
retf
ds
cmp
ins
test
(bad)
cs
enter
pop
shl
test
lods
xor
movs
sub
int
das
aam
mov
test
int
cs
movs
retf
pop
xchg
pop
jae
cdq
pushf
xchg
xor
mov
sahf
enter
aas
aas
mov
mov
(bad)
jmp
mov
in
xlat
loop
jbe
test
push
jb
push
push
div
and
push
inc
and
pop
sbb
sub
fisubr
cmp
xchg
cs
loope
loop
das
movs
and
jle
jo
pop
nop
and
sbb
out
mov
in
sub
xchg
stc
jmp
inc
xchg
pop
sub
mov
and
adc
xor
(bad)
jp
xlat
lahf
xor
inc
add
sar
aad
sbb
or
(bad)
fidiv
jl
out
jae
rol
out
lea
mov
adc
test
mov
test
xchg
and
pop
loop
(bad)
sahf
clc
sub
mov
xchg
push
push
in
push
fbstp
das
inc
stos
fwait
jbe
(bad)
xlat
adc
int
sbb
fwait
cmp
xor
cmp
pop
push
jmp
mov
mov
mov
xchg
ss
cld
int3
lds
(bad)
adc
paddusw
movs
xchg
add
test
stc
xchg
push
sbb
mov
sar
mov
icebp
pop
lds
sbb
ret
jmp
or
sar
push
les
xor
retf
sahf
xchg
out
pop
test
ss
xor
inc
mov
lfs
cld
push
mov
out
cs
push
mov
cmp
jne
add
rol
stos
daa
push
ret
add
push
add
iret
out
pop
add
lods
xchg
ror
jg
les
rol
sahf
mov
and
shl
in
add
mov
and
pop
outs
jmp
jb
(bad)
sar
dec
outs
add
xchg
mov
push
imul
imul
arpl
xchg
aam
xlat
sub
aaa
loopne
aad
mov
lock
nop
cmp
sbb
call
fld
mov
cmc
sub
xchg
mov
dec
loop
lods
mov
leave
aad
cs
push
(bad)
pop
cmps
sub
or
xor
pop
enter
repz
sar
sub
js
loopne
out
mov
cli
ffreep
xchg
je
mov
sar
dec
mov
(bad)
hlt
ret
push
pop
xor
pop
lock
push
sahf
iret
xchg
cmp
int3
dec
fcom
mov
mov
into
pusha
cli
add
inc
mov
dec
int3
xchg
js
adc
fwait
jg
xor
call
lds
mov
pcmpeqb
mov
arpl
movs
mov
jge
dec
or
out
adc
ficom
cwde
jo
fbstp
rcl
and
mov
nop
iret
(bad)
movs
movs
mov
push
or
mov
cs
dec
add
add
sbb
sti
and
ja
movs
xor
xchg
call
mov
or
pusha
iret
xor
add
adc
cs
rol
je
mov
xchg
adc
in
mov
repnz
iret
fsub
mov
cld
outs
loope
pop
sar
push
inc
xchg
out
mov
xchg
xchg
pop
mov
jmp
test
jp
test
inc
cmp
and
inc
sub
dec
pop
cmp
or
jo
aas
sub
outs
lahf
(bad)
rol
jno
les
imul
out
mov
aam
loop
test
imul
(bad)
and
out
push
setl
cmp
aad
xlat
jne
in
(bad)
scas
jl
or
pop
fwait
je
cld
imul
xor
daa
inc
(bad)
imul
push
sbb
inc
(bad)
push
fcmovnu
jae
mov
or
pop
sub
adc
inc
mov
aad
add
push
mov
inc
mov
mov
pop
mov
repnz
sub
and
sar
mov
xor
push
out
dec
mov
sbb
mov
push
lds
fs
fcom
inc
lds
js
jmp
or
cmps
test
jmp
sub
cmp
pop
dec
push
out
and
pushf
(bad)
xchg
push
icebp
lods
popa
xchg
or
stos
mov
fisub
retf
jo
or
int3
push
sti
xor
mov
out
push
stos
pop
cwde
push
xchg
xor
movs
ja
popa
das
rcr
in
mov
dec
jl
or
call
ss
jge
jmp
call
cdq
scas
js
add
in
aas
inc
adc
(bad)
jo
dec
push
mov
lds
sahf
stos
sbb
retf
loop
scas
addr16
cld
cmp
stos
je
push
cdq
push
sti
sar
imul
push
cwde
test
mov
jno
add
push
(bad)
xor
cmp
inc
jl
test
adc
ins
sbb
(bad)
or
arpl
push
xchg
in
shl
das
jo
push
daa
lock
dec
inc
not
loope
pop
sbb
inc
fisttp
xor
cwde
daa
pusha
stos
cmc
ins
stos
push
mov
pop
addr16
outs
cs
xlat
jp
rcl
add
out
sub
or
mov
pusha
adc
dec
xchg
pop
retf
mov
jecxz
adc
stc
out
and
fs
aaa
loop
imul
lahf
jb
test
or
sub
xchg
pop
scas
cld
in
push
das
imul
mov
pop
movs
out
pushf
cmps
mov
mov
retf
fdivr
nop
inc
pop
dec
xchg
pop
enter
cmps
test
xor
fdivr
call
ficom
fild
pop
jp
pop
and
or
js
xchg
in
hlt
and
mov
jbe
cld
fwait
or
cmps
jle
ja
inc
fist
popf
sar
sub
test
in
mov
popa
fsub
adc
add
sti
jbe
out
icebp
jne
sbb
cmp
push
int
mov
vmread
push
push
push
mov
mov
mov
js
and
out
and
push
shr
xchg
xchg
in
xor
bound
imul
ss
movs
das
cmp
mov
push
push
icebp
mov
cs
(bad)
aam
gs
mov
xchg
out
cli
shr
jo
ins
sub
sbb
(bad)
mov
not
mov
stos
sub
or
or
cld
and
outs
pop
scas
pop
aaa
pop
popa
sti
popa
int
mov
outs
aad
xchg
repnz
xchg
into
leave
retf
push
jge
clc
dec
leave
in
call
push
add
jl
push
inc
pop
mov
(bad)
int3
(bad)
fild
ror
xchg
pop
loope
mov
inc
mov
sbb
arpl
sahf
imul
push
mov
in
adc
mov
enter
fwait
push
push
mov
sti
cmp
inc
aam
dec
add
xchg
adc
mov
sti
mov
mov
imul
cmp
out
mov
mov
out
scas
jecxz
lock
es
(bad)
(bad)
retf
push
jne
cmp
cs
pop
push
retf
mov
test
push
adc
stos
int3
repz
fsin
mov
dec
inc
cmp
jb
add
loopne
pop
test
xor
in
xchg
inc
mov
sub
sub
movs
fld
lods
sbb
retf
xchg
xchg
xor
or
ins
xchg
sub
dec
sub
cmp
popf
stos
out
fxch
outs
inc
xlat
bound
outs
dec
int3
out
inc
hlt
clc
inc
xchg
imul
xchg
js
rcr
fisubr
inc
repnz
jecxz
adc
jp
xor
fld
dec
fbstp
lods
ficom
div
aas
fidiv
add
sbb
push
loope
fdivp
sbb
imul
mov
xchg
das
xchg
push
movs
in
pusha
test
dec
rcl
or
ffreep
or
gs
xor
mov
jmp
mov
sub
sbb
inc
lahf
or
pop
jae
pop
fs
arpl
out
mov
(bad)
shl
fld
in
jg
lods
add
push
rol
jg
dec
inc
popf
idiv
push
dec
rcr
add
cmp
and
jmp
adc
cmp
cs
xchg
clc
(bad)
test
js
repz
(bad)
fcom
repz
vmovmskps
lock
or
or
sbb
xor
push
stc
nop
fwait
ret
(bad)
bound
mov
popa
fidiv
iret
clc
xchg
push
mov
ja
into
xchg
mov
adc
cdq
data16
stos
mov
scas
sti
inc
cmp
clc
jmp
or
ins
jle
jge
das
fld
inc
and
lds
mov
lahf
ja
int3
jnp
(bad)
lds
int3
ret
sahf
xchg
dec
dec
pop
imul
push
jmp
bt
bound
pop
ds
sar
fistp
hlt
adc
add
lea
sbb
cmp
and
pop
cs
cmc
jp
jmp
add
push
push
call
call
mov
das
xchg
jl
fisttp
fcmovu
sbb
sbb
add
mov
mov
or
out
push
fistp
sti
cmp
mov
jecxz
cwde
fs
sti
std
(bad)
xchg
ja
and
loopne
mov
jle
js
add
mov
aaa
push
jecxz
xlat
push
add
ret
mov
xor
mov
sbb
xchg
ss
lods
and
sub
mov
and
jmp
dec
ds
imul
push
call
adc
push
(bad)
aam
sti
push
sbb
clc
cmc
mov
aas
sub
stos
push
xchg
mov
pop
retf
fimul
push
xor
adc
mov
adc
or
repnz
cmp
out
xor
jbe
jle
add
rcl
test
test
into
mov
retf
pop
imul
cmp
out
cmc
(bad)
pop
or
mov
call
cmps
repnz
gs
push
and
mov
push
sbb
add
dec
adc
mov
mov
hlt
movs
dec
mov
mov
pop
inc
lods
xchg
into
sahf
ror
mov
push
mov
loop
sar
movs
aaa
push
mov
mov
fs
outs
je
out
pmulhuw
add
jmp
pop
out
jecxz
mov
dec
aas
je
push
sbb
ret
ss
jp
(bad)
pop
ja
fs
cmp
aam
outs
mov
data16
adc
in
arpl
fs
cmp
or
inc
dec
push
push
jb
(bad)
aam
mov
and
fistp
bound
imul
hlt
pusha
pop
fsubr
dec
rcl
dec
or
pop
test
inc
pop
adc
das
dec
and
push
cmp
push
add
and
ja
arpl
xor
jle
push
jmp
adc
xchg
(bad)
ror
push
jg
jnp
sub
or
outs
xchg
je
xor
mov
push
add
xchg
xchg
mov
or
push
mov
push
repnz
cli
or
adc
jne
out
repz
cwde
sub
mov
add
in
sbb
jmp
jnp
mov
imul
cmc
rol
push
clc
sub
fnstsw
retf
adc
push
push
xchg
sbb
dec
iret
jl
je
cmp
test
cs
cld
dec
mov
lods
lds
movs
cs
in
jo
dec
call
aaa
stos
mov
les
jae
adc
push
add
push
gs
sbb
cld
sub
repz
fist
sub
outs
in
(bad)
in
sub
inc
add
popa
ret
jne
jae
pop
shl
cmp
xor
inc
popf
bound
add
sub
shl
mov
movs
bound
shl
push
push
and
scas
cli
icebp
adc
pop
in
rcr
cli
loopne
mov
pop
jo
adc
bsf
mov
push
push
sub
(bad)
sub
daa
addr16
or
lods
dec
jnp
pop
add
cdq
or
or
sub
push
sbb
sbb
popa
jno
adc
dec
loopne
fsubr
mov
loop
inc
sbb
inc
stc
adc
mov
jbe
sub
loope
popa
and
stos
rcl
mov
out
fstp
cmc
add
add
retf
ret
xchg
mov
mov
(bad)
xor
jnp
and
lods
cmps
inc
adc
cmp
adc
jno
fstp
jmp
test
movs
fld
mov
(bad)
push
push
mov
icebp
lods
ret
das
sub
and
in
pop
test
(bad)
int3
movs
mov
or
mov
(bad)
xor
loope
adc
mov
lea
mov
test
sbb
and
inc
xor
mov
fsub
xor
das
sub
dec
jl
in
dec
popw
lock
mov
fild
ja
jle
mov
loope
rcl
and
jecxz
xchg
shr
scas
out
popa
xor
pop
out
rcr
push
push
outs
xor
mov
jno
adc
js
mov
adc
pop
les
adc
fstp
pusha
inc
(bad)
xlat
(bad)
inc
xor
mov
(bad)
sbb
rol
into
sub
adc
aas
call
xor
xor
or
fisttp
jmp
adc
pop
add
lahf
push
cdq
nop
xchg
pop
loop
les
dec
push
pop
xchg
jne
xchg
popa
xor
movs
ror
scas
loopne
in
push
pop
(bad)
addr16
loopne
test
leave
jns
xchg
xor
mov
scas
lea
inc
cmp
cli
push
inc
loope
cmps
enter
ficom
mov
mov
pop
(bad)
cld
mov
and
mov
and
cmp
aas
scas
inc
inc
mov
fisubr
jle
shl
or
pop
rcl
adc
push
stos
in
outs
repnz
sub
and
and
enter
fimul
push
xor
in
add
mov
arpl
inc
ins
(bad)
mov
rcl
and
xchg
in
imul
or
xor
jle
adc
jno
clc
push
xlat
loopne
jecxz
dec
dec
add
add
mov
sbb
popa
repnz
dec
mov
aam
cmp
xchg
pop
fwait
pop
push
xor
push
loop
sub
cmp
mov
test
sub
push
cwde
in
aam
hlt
aaa
inc
outs
or
adc
xchg
ret
push
cli
out
dec
pop
inc
sub
cmps
inc
sbb
dec
xchg
pop
ja
push
push
mov
fwait
jmp
sbb
rol
clc
aaa
xlat
clc
dec
and
imul
and
fidiv
test
outs
loope
retf
jbe
or
shl
jne
mov
jle
inc
test
dec
repz
call
or
(bad)
icebp
inc
push
mov
hlt
adc
or
repnz
retf
jmp
dec
loop
ins
mov
test
aam
mov
outs
movlps
pop
sub
fdiv
int3
mov
dec
sub
sub
and
scas
fucomp
or
out
in
pop
leave
mov
repnz
jae
xor
out
xlat
pop
pop
adc
xchg
xor
and
call
movs
push
xchg
inc
adc
cmp
or
add
and
mov
or
mov
in
jmp
in
cmp
inc
loopne
(bad)
xor
clc
pusha
ror
push
pushf
inc
add
xchg
fnstsw
inc
fst
ins
jns
mov
cmps
sub
sub
int
fisub
shl
repnz
xor
xor
test
ss
dec
repz
enter
lea
and
ficom
mov
fcomp
movs
out
and
jne
mov
bnd
add
sub
test
mov
aad
not
or
jb
out
jp
out
xor
and
mov
cdq
sbb
cdq
jne
mov
inc
jb
sub
xchg
and
jle
inc
or
sti
cmp
mov
pop
shr
jo
stos
div
cmc
inc
push
pusha
outs
loop
in
movs
pop
scas
mov
not
jno
mov
fimul
adc
bound
and
xor
mov
rcl
sub
dec
cdq
cmp
in
pop
jle
pop
lea
xchg
xor
push
cmp
aas
dec
pop
test
hlt
fimul
loope
int3
xor
mov
jns
push
fnstsw
loopne
or
rcl
jo
cmp
jns
or
cdq
mov
clc
cmp
mov
dec
rol
cmp
mov
aad
lods
mov
cmps
sub
(bad)
xchg
and
or
pop
xchg
mov
stos
call
or
loope
or
xchg
jns
sbb
out
mov
and
cmp
call
dec
dec
ret
and
shl
adc
fwait
push
mov
dec
mov
mov
adc
stos
(bad)
xor
pop
xchg
xchg
rcl
ds
push
push
xchg
in
xchg
jmp
xor
pop
xchg
movs
(bad)
es
enter
jbe
and
jmp
sub
pop
imul
out
nop
rcr
in
outs
arpl
dec
hlt
repz
jbe
or
mov
sub
mov
pusha
jge
pop
bound
mov
in
data16
int
adc
cmp
mov
popf
sahf
or
push
mov
dec
mov
add
pop
and
mov
paddd
push
push
lahf
mov
movs
xor
call
adc
test
and
clc
cmp
xchg
test
push
add
stos
outs
dec
jl
add
sub
jbe
add
in
and
dec
xor
sbb
cmc
icebp
std
loop
rcl
fs
dec
fwait
mov
mov
je
les
hlt
jo
pushf
(bad)
add
dec
xor
push
dec
scas
(bad)
cdq
inc
sbb
or
fdivr
push
int
test
push
scas
or
mov
adc
ret
xor
popf
jle
pop
repz
mov
mov
jg
push
pop
cmp
mov
inc
in
daa
enter
xlat
add
setae
inc
mov
mov
int
xor
sar
xchg
push
xchg
cmps
or
bound
cmc
ja
inc
cwde
ins
jo
pop
inc
pop
push
lea
popf
push
pop
fsubr
hlt
fld
dec
imul
push
pusha
mov
aas
mov
scas
lock
shr
addr16
mov
mov
fidivr
test
mov
pop
mov
fucomp
sub
lods
fsubp
in
mov
cmp
test
or
sbb
xchg
(bad)
scas
mov
adc
push
in
cmp
cmp
idiv
adc
and
repz
cmp
xor
xchg
sbb
sub
push
mov
pop
cmp
push
or
ja
cwde
in
adc
adc
and
mov
mov
stc
les
inc
mov
fwait
dec
into
xchg
aas
or
jmp
ja
ja
xchg
fcomp
xchg
cmps
cld
sub
shr
stos
jg
loope
add
inc
test
repnz
out
push
mov
aad
scas
dec
push
outs
adc
sub
loopne
mov
stos
xchg
out
inc
add
lahf
lods
fsubr
pop
in
imul
fwait
xchg
shl
jp
stos
ins
pop
push
and
sar
mov
push
cdq
xchg
push
push
inc
mov
push
xor
adc
jno
mov
ret
xor
cld
inc
clc
xchg
sar
fidiv
in
cmp
cwde
or
in
mov
dec
iret
adc
and
int
test
pop
scas
(bad)
cdq
cmp
push
cdq
mul
sbb
call
fdiv
pop
inc
jge
js
sub
jb
sbb
fcmovnb
mov
xchg
pop
(bad)
div
retf
xor
f2xm1
setbe
mov
push
or
xchg
add
add
leave
sti
in
sbb
mov
adc
cmp
jl
and
mov
and
mov
fldenv
or
imul
cmps
ror
push
fld
leave
loop
pop
sub
xor
popa
repz
out
push
imul
out
data16
sub
imul
into
movs
or
repz
jp
jmp
pusha
xor
jecxz
std
enter
adc
fsubr
retf
pop
cdq
call
inc
inc
add
daa
pusha
inc
repz
jmp
cmp
std
clc
mov
xor
imul
iret
sbb
icebp
(bad)
inc
aas
push
addr16
shr
cmp
in
in
inc
(bad)
xor
int
test
cmp
sbb
cmc
(bad)
mov
jbe
sbb
add
mov
mov
xchg
or
add
jp
xchg
das
jbe
push
mov
add
mov
sub
and
sub
out
les
enter
push
je
movs
test
xchg
push
mov
in
pop
jmp
and
push
adc
clc
idiv
mov
lds
test
adc
add
xor
pop
xchg
xchg
adc
push
mov
arpl
out
(bad)
xchg
mov
inc
xchg
stc
int
out
cwde
out
sbb
fdivr
retf
fwait
mov
fwait
cmp
fisttp
repz
add
inc
push
xchg
dec
outs
xor
(bad)
pushf
fs
ja
mov
fwait
mov
test
add
cmp
popf
cmp
add
push
mov
iretw
jne
cmp
xchg
(bad)
shl
jnp
push
lahf
leave
adc
fisttp
ja
stos
lds
daa
cmp
xor
and
cwde
fistp
fsubr
in
add
aas
test
mov
dec
lock
neg
xor
movs
in
push
pop
cdq
scas
cmps
jl
mov
(bad)
push
and
inc
ja
xchg
jae
and
neg
push
stos
inc
dec
add
mov
ins
push
jno
mov
xor
jnp
lods
leave
inc
loopne
repz
jno
add
add
and
or
fnstcw
mov
pop
mov
fistp
shr
or
icebp
jae
iret
xchg
mov
cmp
jp
sbb
pop
xchg
out
sahf
repz
iret
jno
popa
xchg
dec
das
mov
cld
movs
mov
(bad)
jmp
dec
popf
fcom
mov
(bad)
sahf
popa
sub
add
inc
subps
pop
dec
pop
iret
cmp
and
lock
mov
push
(bad)
fild
and
mov
dec
je
mov
inc
int3
mov
fwait
mov
inc
sub
xlat
pushf
popf
pusha
jnp
mov
inc
cmp
jae
push
mov
jl
mov
sbb
rcr
add
pusha
cmc
popa
test
pop
jbe
cmp
(bad)
cmps
and
push
repnz
in
sti
cdq
sub
pop
inc
pop
sbb
imul
mov
pop
sti
cmc
(bad)
call
call
xor
shr
jnp
jmp
ins
xor
sbb
inc
inc
xor
pop
sbb
data16
xor
adc
nop
cmp
mov
mov
push
aaa
inc
ficom
mov
add
xor
dec
ins
sbb
jae
test
pop
nop
jge
imul
retf
in
cs
push
sbb
cmc
push
push
pop
stos
loop
add
and
adc
pushf
push
xchg
or
out
cli
add
jb
push
into
and
dec
jmp
lea
xlat
arpl
jmp
mov
popa
push
jl
(bad)
loope
popf
and
xor
jp
and
add
pop
and
xchg
or
ins
and
push
daa
mov
cmp
and
popf
jl
retf
sbb
test
sbb
scas
das
ror
rol
cmp
retf
mov
hlt
push
icebp
repnz
fst
(bad)
addr16
sub
bound
adc
jno
(bad)
cmps
mov
pop
mov
es
(bad)
mov
or
dec
into
and
mov
mov
add
xchg
jb
fidiv
inc
call
ss
dec
cmp
add
mov
add
in
daa
inc
cdq
xor
lds
push
cdq
push
mov
test
mov
jmp
sub
cmc
es
push
es
dec
mov
mov
pushf
nop
cmps
sub
xchg
dec
add
dec
xchg
cmp
aas
js
xor
pushf
jecxz
sub
call
xchg
xor
and
lods
jne
call
jo
mov
in
push
xchg
fwait
jns
addr16
push
push
das
inc
in
outs
mov
in
scas
pop
fnsave
shl
out
xor
scas
cmp
jmp
(bad)
sti
aas
cld
scas
(bad)
sar
cmp
jmp
jb
(bad)
adc
hlt
xchg
clc
sbb
inc
jno
movs
pop
adc
icebp
sub
js
push
push
ins
stc
pop
and
and
xchg
push
jb
leave
test
push
enter
sar
icebp
cmp
in
mov
sbb
sub
movs
mul
stc
bound
dec
add
fisub
jp
cmp
dec
add
pop
cwde
and
pop
fist
fcomip
pop
test
(bad)
aad
mov
jge
inc
xchg
stc
push
in
sub
ss
mov
inc
cmps
xor
xchg
pop
dec
push
xchg
add
call
mov
or
push
ins
mov
and
mov
mov
adc
mov
dec
and
sbb
pop
cmc
cld
in
cmovl
cld
inc
icebp
dec
lea
out
push
pop
add
dec
test
sahf
ja
aad
sub
xor
xchg
add
mov
(bad)
ja
mov
inc
cmps
sbb
sub
out
and
int3
aas
add
popf
dec
cwde
(bad)
push
inc
dec
cmp
inc
sub
retf
mov
nop
pop
inc
add
jg
mov
dec
mov
rcl
addr16
or
jecxz
out
jmp
mov
xbegin
(bad)
inc
cmp
push
dec
mov
sti
in
mov
or
dec
adc
xor
mov
ret
push
in
test
sub
jmp
leave
pusha
mov
test
lods
stc
into
jne
popa
push
or
repz
jp
lock
cli
je
mov
cmp
sbb
jecxz
aam
push
packssdw
xor
adc
ret
and
cmp
das
xchg
fmul
in
or
fist
sub
pop
cwde
mov
mov
clc
mov
repnz
inc
ins
cmp
inc
test
sahf
adc
loop
pop
add
pop
scas
pop
fild
xor
jg
inc
cmc
inc
pushf
call
add
inc
cmp
inc
movs
clc
pop
mov
or
adc
adc
xchg
outs
ror
push
or
mov
mov
data16
xchg
std
stos
xor
jge
adc
stc
sub
in
sbb
retf
jae
js
dec
fcmovbe
push
sub
mov
ins
imul
sub
pop
sbb
sbb
jnp
and
inc
ret
ror
or
pop
mov
jge
sbb
sub
mov
arpl
in
mov
aaa
push
inc
pop
xor
mov
sub
ss
adc
xor
pop
into
inc
lock
call
in
sbb
ss
cmp
ins
push
xor
mov
sbb
ins
outs
ins
push
daa
and
push
dec
xchg
loop
cwde
repz
shr
retf
into
pop
jmp
in
bound
bound
inc
pop
or
adc
mov
pop
mov
lahf
push
mov
inc
ss
test
and
pushf
mov
std
into
mov
movs
outs
pop
inc
jbe
jl
inc
pop
pop
add
test
fldln2
xor
sub
jle
push
dec
mov
mov
fsubr
movs
inc
push
xlat
lea
add
div
jp
mov
rcl
stos
push
and
mov
int
call
sti
pop
sbb
sub
into
xchg
xchg
test
jns
aaa
xchg
sbb
mov
jmp
mov
ffreep
fndisi(8087
dec
mov
test
jp
and
mov
cmpxchg
test
hlt
xchg
sbb
add
cmp
add
scas
dec
test
mov
retf
jnp
sub
into
std
push
addr16
ja
add
sub
fbstp
out
daa
fcmovnu
(bad)
in
dec
adc
and
pop
(bad)
ins
mov
sbb
dec
mov
xor
jmp
hlt
call
inc
pop
test
cs
xor
adc
dec
jb
movs
neg
int3
xor
adc
jae
sbb
(bad)
push
sub
cdq
in
ret
pop
dec
mov
cmp
retfw
lahf
movs
stos
jge
rcr
bnd
rol
push
int3
pop
inc
ss
inc
xlat
cld
and
(bad)
imul
mov
adc
mov
into
in
cli
cli
loop
dec
add
sbb
rcl
nop
daa
jg
xchg
push
test
and
cmp
jmp
stc
sbb
jo
dec
in
aas
xchg
dec
or
cmp
jnp
cmp
sub
dec
mov
mov
pushf
aaa
fwait
test
and
in
xor
jp
xor
das
pop
adc
ss
pop
mov
in
in
jns
sub
mov
xor
shl
leave
int3
jmp
stc
lods
sti
jnp
jmp
adc
mov
jbe
push
cwde
or
dec
shr
push
cdq
je
sbb
inc
rcl
pop
pop
ins
je
mov
int
mov
pushf
sbb
jecxz
mov
sbb
jmp
inc
rol
cli
jbe
mov
loope
mov
js
das
xor
pop
cmp
stos
or
bound
movs
pop
xchg
inc
pop
pop
adc
loopne
pop
add
fs
inc
sbb
jne
lock
xchg
fisttp
rdpmc
imul
in
cmp
hlt
jmp
out
je
dec
aad
cmp
add
mov
sub
fs
bound
lds
je
out
sub
es
xchg
inc
sbb
ret
stos
mov
sub
dec
push
ret
das
or
mov
add
pop
mov
test
cmc
enter
dec
fsub
rcl
push
(bad)
mov
push
dec
fdiv
xchg
xchg
jmp
fsubp
cmp
mov
sub
push
aam
lods
nop
mov
and
cmp
pop
repnz
sbb
imul
cmp
lods
leave
adc
adc
and
bts
loopne
scas
cmc
jno
aaa
adc
xchg
mov
and
mov
(bad)
out
scas
test
cld
mov
stos
enter
fxsave
ror
pop
icebp
fmul
daa
and
mov
pop
out
mov
call
jne
adc
push
cdq
mov
arpl
loope
mov
sbb
or
ss
test
or
or
push
sbb
shr
mov
jmp
jnp
repnz
lods
mov
jmp
movs
pop
cmps
jecxz
jmp
ss
pushf
les
stc
jne
hlt
lahf
ins
sti
mov
fmul
stc
stos
push
push
outs
fsubr
cmp
mov
push
repnz
scas
in
push
dec
jg
mov
inc
mov
mov
add
xchg
adc
inc
repnz
mul
movs
inc
mov
sub
dec
adc
in
xor
gs
popa
fs
or
retf
into
push
adc
pop
std
test
popa
movs
mov
dec
cmps
icebp
aam
je
mov
in
sub
sub
jg
int3
mov
cld
leave
jmp
pop
add
mov
imul
jno
aaa
in
outs
aad
mov
fucom
or
push
dec
arpl
pusha
stos
add
ds
jp
sahf
test
cld
div
mov
inc
addr16
inc
fldcw
push
in
mov
jae
pop
mov
push
adc
fwait
jp
sbb
retf
cs
pop
gs
int3
cs
pop
and
inc
add
out
pop
stc
push
add
xor
sar
inc
bound
(bad)
adc
xor
jmp
fistp
push
or
scas
fcomp
mov
test
mov
int
mov
rcr
(bad)
imul
ins
mov
sbb
xchg
daa
jg
sahf
pushf
mov
mov
aas
gs
or
das
es
in
dec
push
fldenv
lea
mov
xor
aad
fisub
push
loopne
xor
mov
jo
xchg
addr16
adc
stc
in
call
into
push
inc
loopne
dec
mov
cdq
pop
push
push
aam
inc
les
push
add
cmc
arpl
inc
dec
xlat
clc
iret
sete
stc
push
nop
sub
leave
leave
sub
and
or
mov
sbb
enter
xchg
adc
fdivr
add
fwait
xchg
pop
cmc
pop
(bad)
mov
fadd
imul
pop
mov
test
ins
out
mov
imul
cmp
and
sbb
sbb
dec
int3
out
jb
and
in
icebp
mov
mov
jp
lahf
xchg
movs
mov
std
adc
ret
enter
sbb
cmp
in
out
mov
push
fild
popf
fcomp
sub
xchg
loope
test
pop
imul
or
aam
(bad)
arpl
daa
xchg
or
inc
sub
out
jmp
cmps
out
int
push
mov
retf
pushf
inc
aad
dec
and
loop
test
inc
aas
inc
mov
inc
mov
lock
push
cld
adc
pop
jo
fnsave
ds
adc
out
enter
adc
jl
dec
mov
push
mov
sub
add
xor
gs
mov
mov
pusha
mov
test
push
add
retf
shr
mov
popf
cmps
outs
push
adc
mov
shl
mov
inc
hlt
jae
inc
stos
push
fsubrp
popa
ret
adc
sahf
inc
adc
inc
ja
mov
dec
add
fwait
inc
push
outs
daa
out
xlat
pop
stos
xchg
sub
mov
add
xor
dec
cmp
cwde
loop
adc
std
sbb
dec
fidivr
scas
xor
push
fisubr
retf
call
cld
clc
into
mov
ds
loopne
lahf
out
xchg
mov
xor
fs
add
and
movs
inc
dec
jecxz
push
mov
push
push
fsubr
jl
dec
test
pusha
pop
add
xchg
push
les
and
xor
adc
ins
fist
ficom
jns
sub
mov
dec
(bad)
and
mov
nop
mov
mov
(bad)
mov
(bad)
out
sti
or
sub
stc
mov
mov
dec
scas
loop
cdq
inc
mov
push
cmp
pop
sbb
push
mov
into
xchg
and
test
xor
pop
mov
jle
test
xor
imul
xchg
mov
or
pop
adc
jno
cmp
(bad)
jbe
and
adc
daa
or
jge
loope
pop
jge
std
pusha
push
cmp
jno
ret
imul
xchg
mov
loop
cmp
lahf
sbb
ja
or
retf
rol
inc
mov
mov
sti
loopne
cmp
jnp
jp
mov
pop
lock
fsin
push
stc
retf
outs
pop
aaa
sub
mov
test
movs
or
js
add
inc
pmulhuw
xchg
pop
jns
fild
xchg
jmp
mov
dec
mov
pop
or
fcmove
jns
leave
movs
in
nop
leave
xchg
leave
and
imul
push
hlt
jp
pop
mov
jne
pop
jmp
ret
or
shr
arpl
test
bound
je
fwait
pop
push
pop
js
clc
out
sbb
push
jle
or
lea
mov
shl
adc
sti
movs
mov
(bad)
xchg
das
int3
int
aaa
neg
adc
repz
int
mov
mov
mov
push
jnp
(bad)
pop
(bad)
fcomp
push
push
cli
jmp
pop
mov
icebp
into
cmc
fbld
dec
mov
imul
jp
(bad)
jg
cmp
popa
sub
mov
jmp
stos
lods
pop
cmps
cmp
mov
stos
xchg
inc
and
inc
xor
add
jmp
mov
jne
mov
dec
push
sbb
shl
sub
sub
vpsllq
stos
xchg
icebp
popf
or
mov
cli
push
ror
pop
add
movs
and
test
pop
and
mov
ja
xchg
mov
fisttp
pop
add
xor
dec
adc
pop
xchg
sbb
shl
sbb
dec
stc
and
repnz
dec
jge
repnz
stc
push
push
adc
gs
mov
adc
xor
mov
sub
bound
test
sub
fwait
inc
out
test
mov
test
xchg
mov
pop
xor
call
push
push
dec
mov
dec
scas
(bad)
cmc
sar
dec
sar
cmovno
jl
add
sbb
popa
cld
cs
adc
mov
xchg
mov
mov
mov
nop
xchg
sbb
in
push
int
lahf
sub
mov
leave
bound
xchg
(bad)
or
adc
cmp
cmp
fild
cmps
frstor
pop
pushf
je
fwait
fwait
jge
aas
movs
xchg
fdiv
in
pop
jmp
jmp
icebp
test
push
sub
cmp
sub
popf
hlt
cli
mov
in
jmp
out
dec
mov
out
jg
cmps
adc
xchg
add
jnp
adc
imul
and
jl
int
cli
xlat
(bad)
mov
or
aad
pop
test
xor
pop
test
cmp
ret
iret
adc
(bad)
jle
cmps
sbb
cld
cmp
mov
fs
ror
scas
fs
pop
test
popf
mov
fucomi
mov
into
pop
aam
ror
loop
push
dec
inc
mov
fs
lds
ror
aaa
add
add
push
movs
inc
xchg
mov
push
mov
neg
and
or
add
add
cmp
jo
nop
push
nop
retf
mov
ja
dec
stc
mov
jb
mov
fimul
mov
popa
pop
xor
call
movs
jp
push
lods
call
(bad)
cmps
push
inc
test
cmps
jno
xchg
mov
and
lds
adc
stos
push
(bad)
popa
push
dec
nop
or
shl
inc
sub
mov
jmp
dec
stos
mov
and
fild
mov
cmp
mov
jmp
pop
dec
sub
(bad)
push
push
stos
mov
inc
jbe
push
mov
js
push
mov
pushf
mov
jnp
adc
pop
sbb
sbb
dec
push
jg
bound
popf
fsubr
mov
add
sbb
adc
in
push
push
mov
push
xchg
push
aam
hlt
loop
repz
and
scas
cmp
(bad)
retf
shr
sti
sub
push
call
div
les
rol
xchg
and
adc
xchg
add
lods
pop
paddq
pop
pop
retf
sub
int
inc
pop
neg
call
outs
shr
mov
je
scas
xchg
outs
in
fidiv
pop
shl
sbb
sti
or
test
jmp
inc
sbb
pop
std
add
pop
jb
(bad)
mov
test
cmp
mov
scas
jmp
xchg
imul
pusha
pop
bound
mov
pop
and
and
push
add
cwde
jmp
jg
and
cmc
xor
mov
bound
inc
fdiv
add
js
adc
sbb
call
lahf
mov
jg
arpl
add
leave
pop
stc
jae
jmp
movs
sub
xlat
or
int3
jnp
jae
icebp
adc
and
hlt
mov
stc
aad
cdq
jp
add
rol
out
xor
scas
cmp
iret
inc
bound
lds
adc
mov
inc
sub
loopne
cmp
jne
xor
fimul
scas
pop
xchg
iret
cmp
aas
retf
imul
add
inc
push
inc
in
cmp
xor
mov
xor
dec
cs
aas
and
ins
sub
sbb
mov
sbb
mov
pop
push
stc
inc
adc
imul
jb
dec
adc
mov
sub
pushf
cli
std
pop
int
push
jmp
ret
xor
scas
jg
or
cmp
outs
inc
add
xchg
mov
push
icebp
cmc
aad
rol
aam
dec
imul
enter
mov
ficomp
mov
int
push
stos
test
xchg
sub
mov
int3
loop
sub
add
test
adc
inc
fs
pop
add
jecxz
nop
inc
shr
mov
jle
pop
(bad)
xchg
jnp
aaa
or
push
cmp
scas
pop
lods
popf
mov
push
xor
mov
add
(bad)
dec
cmps
mov
movs
loopne
or
stc
adc
pop
pop
and
xchg
rcr
repnz
es
sbb
or
jnp
jl
ss
data16
inc
pop
or
ret
or
mov
in
jp
and
pop
loope
adc
inc
out
mov
xchg
pop
(bad)
shl
stos
lods
push
std
sub
lahf
xor
dec
xchg
scas
shl
xor
adc
test
mov
dec
inc
cmp
xchg
aas
dec
outs
add
loopne
adc
(bad)
and
lods
mov
int3
and
dec
jns
in
in
dec
xor
scas
ins
hlt
daa
sbb
sub
mov
xor
xchg
mov
jl
cld
add
aaa
inc
out
sub
sub
mov
push
je
shl
or
mov
test
sub
mov
cmps
and
mov
xchg
jg
push
jb
popf
add
fnsetpm(287
jecxz
leave
push
in
lods
push
ret
pop
xor
lea
xor
add
add
xor
xchg
adc
(bad)
mov
mov
xchg
adc
or
dec
inc
test
push
test
jnp
mov
add
retf
daa
sbb
or
and
icebp
xlat
adc
and
mov
jnp
arpl
mov
shl
in
xchg
or
fdivr
addr16
cmp
xchg
mov
cmps
pop
aaa
loop
or
cmp
mov
cmp
ret
jmp
pop
pop
cmovnp
mov
bound
inc
int
test
(bad)
test
lock
push
pop
fld
pop
test
xor
dec
in
lock
add
inc
pop
or
mov
xlat
es
dec
mov
stos
or
ret
sub
cmp
jecxz
sub
pop
scas
test
or
or
adc
and
loop
test
cmp
and
lock
(bad)
rcr
sar
bound
mov
xor
mov
inc
cmp
retf
and
push
popa
pop
aas
mov
pop
dec
les
mov
rcl
aad
paddb
jo
and
pushf
(bad)
mov
inc
popa
push
adc
retf
mov
retf
and
out
xor
popa
retf
cmp
sbb
outs
cmp
(bad)
sti
sub
retf
popa
scas
and
test
jmp
jb
mov
nop
sub
lahf
or
loop
jne
aas
push
mul
mov
nop
cmps
jge
enter
cmps
push
sub
lahf
pop
out
scas
loopne
sub
fsubrp
jmp
call
leave
adc
xchg
sbb
cwde
xchg
in
push
push
fmul
cmps
xor
jecxz
or
mov
sub
adc
retf
test
aaa
iret
pop
adc
push
mov
dec
stos
mov
mov
push
xchg
dec
iret
pop
pop
inc
int
add
mov
add
xchg
ficomp
div
sub
call
test
fistp
lds
mov
sbb
push
add
fnsave
jo
jns
cli
pop
mov
jp
and
mov
stos
jle
inc
fsub
jge
dec
or
or
cmp
dec
cmps
or
sbb
push
ds
icebp
cmp
cmp
popa
mov
test
push
xchg
adc
fnsave
mov
or
mov
sub
out
test
test
sbb
div
enter
or
vpsraw
xchg
stc
loopne
ret
xchg
iret
popf
mov
sbb
cmp
cdq
sub
jmp
pop
dec
ja
test
dec
mov
dec
mov
sbb
jg
xor
add
mov
mov
jle
inc
add
imul
test
mov
mov
cmps
pop
jns
jb
mov
jo
and
xchg
mov
mov
(bad)
inc
movs
inc
scas
(bad)
ss
mov
jp
adc
jbe
pop
repnz
shl
xor
in
pop
sub
xchg
cli
mov
cmp
test
inc
scas
(bad)
pusha
pusha
pop
shl
in
data16
pop
nop
mov
inc
pop
movs
(bad)
jmp
fs
imul
loope
xchg
dec
shr
or
inc
sbb
addr16
ja
cmp
pop
sub
xchg
mov
mov
cmp
pop
popa
fs
push
aam
popf
push
stc
ret
outs
lds
push
les
lods
mov
sbb
cmps
add
movs
sbb
rcr
je
hlt
jle
add
mov
mov
push
pop
inc
jo
push
jbe
jecxz
rcl
ins
cmp
mov
and
out
clc
jmp
inc
bnd
pushf
retf
ja
fmul
outs
shl
jnp
pop
ficomp
inc
mov
fcomip
cs
xchg
inc
pop
xor
sub
push
outs
popa
mov
out
mov
or
add
popa
lock
(bad)
mov
les
ins
sbb
xchg
stos
mov
inc
sbb
mov
jmp
jmp
lahf
fwait
lods
mov
inc
not
lds
movs
jg
ret
and
pop
inc
in
std
mov
inc
jp
inc
jbe
je
iret
cmp
adc
add
test
push
or
mov
jno
(bad)
xchg
test
pop
jmp
xor
es
test
and
lds
rcr
shl
or
mov
fisubr
mov
fs
fmul
in
fcomp
xchg
in
xor
fwait
jo
jg
sub
mov
inc
inc
shl
sbb
inc
and
fsub
dec
ret
out
add
xor
add
add
sub
jmp
and
inc
test
and
push
dec
add
and
jge
jb
test
mov
adc
add
aam
and
clc
in
nop
jmp
in
sbb
push
jbe
jl
add
pop
aam
lea
lock
jbe
test
push
hlt
mov
mov
jo
fst
mov
push
mov
vmovupd
dec
dec
pop
mov
cmps
(bad)
out
xchg
mov
leave
icebp
cmp
mov
mov
xchg
jecxz
push
enter
into
sbb
jno
fild
scas
test
int3
mov
fisub
call
mov
loopne
out
push
add
adc
push
fisttp
jmp
cli
or
push
xchg
stos
mov
and
and
jp
out
shr
pop
fisttp
adc
push
push
imul
cmc
push
mov
leave
pop
jmp
das
xchg
imul
and
inc
pop
cli
sbb
out
mov
mov
data16
jecxz
mov
mov
mov
mov
sbb
outs
jmp
int
or
xor
adc
push
shl
mov
inc
(bad)
gs
imul
add
add
sbb
mov
(bad)
imul
adc
shl
add
pop
in
xchg
pop
aaa
mov
out
jb
mov
mov
push
pop
mov
adc
out
ja
shr
mov
fnstcw
into
mov
icebp
or
lods
fidivr
inc
repz
mov
fisubr
imul
mov
push
and
mov
and
stos
call
and
dec
dec
lods
adc
adc
shl
mov
cwde
xchg
and
and
loopne
cwde
not
push
in
push
(bad)
loopne
sbb
xchg
pusha
aad
imul
lahf
cmps
inc
or
ds
lahf
sti
arpl
sub
cdq
aas
std
push
imul
sub
pop
push
mov
mov
test
and
aad
pop
mov
jle
pop
data16
(bad)
fs
adc
add
xchg
add
xchg
aas
mov
test
jne
cmp
mov
mov
jbe
das
fld
les
enter
add
retf
cli
retf
and
dec
and
jae
jecxz
lods
sti
push
jae
xchg
or
push
scas
jno
lock
mov
lods
loope
push
jns
lock
sbb
push
clc
push
jo
and
add
ret
jge
cli
stc
add
in
and
sbb
les
sbb
in
xchg
adc
mov
ins
dec
inc
sbb
lahf
pop
call
adc
pop
jl
pop
lods
jno
ja
daa
ja
js
jo
dec
push
adc
pop
fisttp
and
xchg
mov
es
mov
or
loope
mov
dec
icebp
xchg
xlat
stos
scas
push
(bad)
stc
cli
daa
sar
sub
scas
add
loop
or
hlt
nop
(bad)
aas
scas
sub
mov
fsubr
dec
pop
test
test
inc
mov
sbb
ins
xchg
cmc
shl
outs
in
rcr
jecxz
int3
out
fidivr
adc
stos
(bad)
jno
stos
das
pop
mov
xor
out
test
jns
shl
push
int
pop
push
cmp
pop
sbb
movs
mov
cmp
retf
mov
mov
sbb
push
out
xlat
hlt
js
mov
cmp
ret
push
xchg
(bad)
nop
retf
fdivr
xor
out
rol
sub
repnz
ins
mov
xchg
or
xchg
ret
lea
imul
xchg
je
pop
lds
arpl
sub
inc
mov
push
cmp
lock
inc
call
cld
rol
inc
clc
add
mov
mov
dec
sbb
pop
mov
add
cli
fsub
dec
popa
lods
sbb
addr16
dec
pop
test
mov
dec
add
and
mov
arpl
push
into
pop
fs
sbb
xchg
pop
loop
mov
sub
xchg
pop
gs
sub
in
mov
loop
mov
add
js
sbb
mov
imul
sbb
jge
cli
cdq
and
test
or
es
dec
cmps
cmp
adc
xchg
stc
xchg
push
inc
push
mov
out
imul
jl
inc
xchg
inc
or
outs
push
arpl
mov
cld
mov
dec
arpl
pop
pop
inc
(bad)
xor
mov
add
mov
sub
data16
loopne
pop
dec
(bad)
aad
xchg
(bad)
sub
out
aad
clc
out
dec
pop
dec
jg
mov
inc
mov
push
js
mov
dec
fdivrp
lahf
cld
pop
cdq
xor
out
les
enter
mov
ror
je
mov
push
mov
sub
mov
mov
jmp
in
outs
(bad)
cmp
mov
sub
(bad)
es
add
lock
and
das
or
pop
movs
lods
adc
cli
or
jmp
jle
call
and
ss
push
jmp
mov
bound
mov
dec
pop
sub
mov
call
or
fsub
pop
in
(bad)
sbb
xchg
dec
dec
mov
jmp
sub
fiadd
jge
imul
retf
int
ficom
sbb
test
dec
pop
mov
pop
clc
shl
and
leave
or
ss
xchg
pop
stc
and
adc
outs
adc
aam
test
rcl
mov
mov
imul
sub
push
adc
loopne
(bad)
jle
lahf
inc
inc
xor
mov
popa
and
xor
cwde
out
pop
xchg
mov
ja
in
dec
(bad)
shr
push
push
jle
lock
clc
call
dec
mov
push
dec
pop
imul
(bad)
in
jmp
mov
fucomip
mov
ins
cmp
mov
and
inc
ss
inc
sbb
mov
movs
sbb
cmp
imul
push
retf
inc
pop
xchg
fsubr
inc
sti
lods
(bad)
int3
jns
aas
mov
pop
mov
cmp
adc
xor
dec
cdq
add
cwde
outs
loopne
retf
push
mov
or
bound
push
cmp
push
inc
fadd
and
mov
mul
push
push
mov
or
cmp
(bad)
daa
in
mov
ret
or
jp
dec
sub
scas
pcmpeqb
loopne
push
movs
add
or
inc
dec
push
mov
mov
ss
test
add
test
ds
xchg
inc
sub
loop
inc
ss
and
dec
cwde
push
aam
jl
outs
xor
idiv
aad
sbb
and
mov
inc
xchg
lock
je
fmul
aad
adc
pop
out
cld
xchg
sahf
and
mov
or
xchg
ds
mov
sub
cmp
pushf
into
inc
or
in
xchg
jg
add
enter
mov
jp
dec
mov
dec
fld
cwde
imul
adc
(bad)
repnz
int
ds
pop
xchg
mov
or
cmc
push
addr16
mov
dec
xchg
nop
jecxz
sbb
xchg
call
int
inc
mov
bound
mov
fmul
inc
xchg
xchg
sbb
xor
mov
cli
gs
test
cdq
jnp
gs
sub
adc
inc
lahf
repz
dec
push
mov
xchg
and
add
pop
retf
jnp
xor
push
outs
xor
or
pop
pop
div
xchg
inc
(bad)
pop
mov
jnp
fstp
jge
iret
mov
stos
sub
je
(bad)
sbb
xchg
(bad)
movs
fst
loope
sar
pushf
sti
adc
fsubp
es
mov
es
(bad)
pop
sbb
scas
out
push
mov
and
sar
hlt
sbb
xchg
cld
mov
in
jmp
dec
add
fwait
aam
(bad)
sbb
ins
js
gs
stos
push
mov
je
lahf
jne
xor
xchg
xchg
xor
pusha
or
push
mov
mov
jp
push
out
mov
inc
push
jl
mov
aas
outs
or
jbe
fs
pop
sub
mov
mov
cwde
retf
push
and
and
loop
(bad)
icebp
push
hlt
mov
popf
mov
idiv
and
sub
xlat
push
sbb
inc
fcomp
bound
loopne
cs
jb
ins
mov
xchg
int3
clc
enter
mov
and
pop
add
jg
pop
mov
pop
cmp
inc
add
(bad)
lods
(bad)
mov
mov
inc
cs
hlt
cld
inc
cmp
push
adc
das
push
and
sti
push
retf
clc
test
addr16
call
mov
adc
gs
cmc
int
fcomp
repnz
push
jle
jae
inc
daa
fidivr
pop
(bad)
fldcw
es
fs
inc
stos
lds
jnp
mov
std
mov
push
test
movs
or
ja
dec
movs
lods
add
dec
adc
stc
mov
ret
push
je
xchg
test
ret
call
fiadd
ins
jmp
or
les
cmps
cmps
push
or
mov
mov
imul
(bad)
iret
pop
mov
jge
push
mov
sti
dec
pop
mov
(bad)
jmp
leave
pop
jle
xor
sub
pusha
scas
add
mov
sbb
es
jo
pushf
sub
jae
dec
cmp
dec
out
retf
mov
xchg
out
call
hlt
jmp
cwde
cmp
fldenv
mov
(bad)
jecxz
or
cwde
jne
out
test
adc
dec
fndisi(8087
popa
jns
mov
pop
sbb
out
pop
(bad)
mov
out
xchg
scas
adc
dec
xchg
xor
hlt
(bad)
out
ficom
test
out
push
fisttp
xchg
test
fadd
dec
fimul
pop
loop
loope
jle
adc
pop
mov
jecxz
add
shl
mov
mov
xchg
sti
fdivp
mov
scas
sub
lahf
pop
push
ror
adc
ret
pop
jl
outs
aas
stc
(bad)
movs
add
in
popa
dec
cmp
mov
push
fwait
sbb
sbb
scas
push
popf
pop
int
outs
in
fidiv
cmp
movs
xor
push
dec
enter
sub
in
jp
push
aas
loope
jno
(bad)
in
cmp
pop
mov
cmp
daa
mov
xor
pop
(bad)
jp
and
or
sub
inc
icebp
sub
and
adc
sub
rcr
in
dec
push
in
lea
hlt
or
cmps
movs
inc
add
adc
pop
add
out
shl
pop
scas
lock
jmp
loope
jmp
pop
cwde
das
xchg
frstor
inc
inc
arpl
or
ficomp
sbb
jae
xchg
push
jmp
add
cwde
or
or
cmp
(bad)
inc
and
mov
sbb
jnp
ss
lock
popf
push
sub
push
in
mov
aaa
cmp
push
pop
gs
cmps
mov
xchg
push
popa
mov
fsub
dec
in
mov
rcr
cmp
jl
cmp
jo
mov
sub
je
outs
jg
sbb
cwde
cmp
neg
and
push
and
(bad)
fbld
fiadd
add
mov
push
in
shl
jns
add
push
mov
xor
and
js
xchg
test
ins
or
add
push
mov
rcr
sub
cmp
(bad)
ins
imul
xchg
movs
ror
sub
cld
test
and
push
lahf
or
das
mov
cmp
out
and
sbb
xchg
fisubr
mov
inc
mov
ja
popf
xor
repnz
pop
sti
(bad)
sbb
repz
stos
aaa
jo
outs
not
fcmovb
and
pop
mov
call
inc
jae
jne
test
ss
xchg
sbb
sub
(bad)
out
(bad)
out
loop
add
add
adc
and
pop
pop
sbb
and
mov
inc
popf
pop
cli
and
inc
nop
inc
sbb
pop
pop
jnp
popf
repz
das
xchg
xor
mov
inc
out
dec
jb
ja
mov
push
stos
mov
in
add
ror
jns
mov
aaa
leave
jg
push
xchg
outs
push
sahf
ret
fcom
and
ins
cld
mov
out
repnz
jp
pop
stc
dec
mov
xor
fisub
pusha
mov
fidivr
ds
fistp
clc
outs
stc
je
mov
loopne
nop
mov
cld
int3
jle
cmp
and
fild
and
add
ss
cmc
or
movs
or
push
das
aam
ins
(bad)
icebp
ins
dec
jae
into
sbb
dec
pop
mov
xchg
inc
add
sub
sub
stos
scas
push
fistp
jb
lahf
and
daa
or
cli
mov
lahf
enter
mov
pop
ins
adc
push
movs
lods
lods
shl
data16
adc
sub
nop
jmp
dec
rcr
or
push
push
leave
mov
lahf
mov
jl
and
dec
rol
sar
xor
pop
add
adc
sub
js
adc
pop
scas
push
mov
adc
adc
imul
xchg
ss
call
mov
jp
fcmovnbe
pop
(bad)
jae
cli
push
call
or
je
cdq
jno
and
adc
dec
mov
fucomp
(bad)
push
ficomp
jbe
mov
rcr
cmc
out
adc
pop
fdivrp
sub
sub
sub
lea
cmp
sub
cmp
loopne
inc
inc
addr16
push
sub
and
shl
aam
ret
jle
add
(bad)
popf
dec
in
mov
jo
cmps
xor
add
push
hlt
xchg
inc
or
pop
inc
test
test
mov
or
jp
pop
mov
xor
sbb
pop
sub
sub
mov
iret
mov
add
ror
pushf
popa
mov
jne
cmps
mov
inc
nop
mov
(bad)
pushf
movs
push
fst
sub
sbb
out
stc
inc
jmp
(bad)
(bad)
adc
jp
(bad)
loope
cmp
test
data16
jg
data16
cmp
push
inc
fst
mov
cmps
push
mov
scas
xchg
fisubr
jno
movs
div
pop
pop
jmp
int
adc
inc
jle
repz
aas
cmp
dec
ss
aas
adc
clc
es
inc
sub
dec
mov
mov
std
data16
sahf
dec
pop
cmp
inc
mov
sbb
cmps
ds
pushf
xchg
or
adc
fdecstp
bound
sub
push
cmp
xor
jns
dec
icebp
push
inc
outs
xlat
inc
or
in
test
mov
jo
adc
push
je
pop
jl
call
push
mov
sbb
adc
jmp
outs
dec
and
aam
mov
push
shr
inc
mul
(bad)
test
mov
mov
js
push
test
sti
cli
xchg
mov
leave
out
mov
fldenv
aam
cwde
add
jae
jae
imul
xlat
and
mov
pop
or
jl
mov
adc
xor
pop
push
test
jp
gs
fld
ret
xor
cld
xor
jle
addr16
outs
jae
imul
jg
push
popf
xor
push
mov
fwait
nop
sbb
test
xor
pop
outs
xchg
das
pop
mov
jg
push
push
into
(bad)
(bad)
es
adc
sbb
fs
mov
xor
add
out
stos
or
jbe
and
out
ficomp
inc
bndstx
pop
xchg
xchg
pop
and
dec
(bad)
arpl
or
das
shl
pop
hlt
ins
(bad)
aad
add
xor
fistp
xchg
in
push
out
fs
(bad)
lods
ds
stc
pop
inc
jne
jg
neg
mov
push
(bad)
xor
sub
mov
sub
or
mov
leave
loop
(bad)
xchg
sub
fwait
or
push
mov
cmps
fisub
cmp
pop
xlat
cmp
and
test
jo
sbb
test
cmp
call
jns
sub
dec
pop
enter
cwde
je
push
inc
test
loop
dec
aam
sbb
jns
push
in
repz
stos
scas
std
adc
cli
sahf
xor
and
pop
or
jecxz
and
push
jmp
xchg
sub
call
ret
or
cdq
pop
mov
add
push
adc
dec
cmps
shl
push
jl
cs
adc
pmaddwd
shr
jnp
ins
jmp
scas
jne
adc
(bad)
mov
cmp
mov
push
adc
nop
sbb
loopne
imul
iret
popa
fldenv
mov
arpl
pop
test
mov
adc
aam
pop
(bad)
sbb
pop
cmp
jne
ret
push
xchg
add
inc
sbb
and
fild
dec
ficomp
test
arpl
and
cwde
out
xchg
lods
adc
xchg
imul
ret
cmp
scas
sbb
mov
push
cmc
dec
mov
and
ret
(bad)
jg
or
jo
loopne
(bad)
mov
pop
pop
inc
addr16
cmp
aad
pop
fwait
add
jge
fdivrp
mov
jae
or
dec
cmp
adc
call
out
shl
sub
stc
nop
and
scas
sub
sbb
sbb
aam
call
inc
fwait
jmp
mov
inc
pop
jae
sub
pop
and
call
cmps
fadd
xlat
pop
inc
mov
arpl
ret
mov
push
rcr
leave
ret
dec
gs
int3
add
xor
repz
cs
and
pop
dec
test
inc
into
sub
out
bswap
sbb
into
test
pop
xor
test
stc
or
jp
fsub
mov
loopne
icebp
dec
mov
in
inc
and
jmp
or
inc
fcomp
pop
dec
mov
call
dec
es
in
and
cmp
push
pop
(bad)
push
xor
shr
bound
out
je
xor
aaa
test
mov
pop
or
add
pop
jbe
adc
es
lock
mov
cmp
mov
mov
int
lahf
nop
in
pusha
mov
int
repnz
ds
jnp
lods
jno
dec
pop
arpl
mov
or
cmp
add
xlat
and
mov
addr16
sbb
(bad)
nop
push
outs
push
cs
and
idiv
cwde
lods
ins
and
fcmovu
inc
test
out
xlat
mov
adc
loope
pop
inc
mov
xor
xor
cld
xlat
xchg
scas
jmp
push
lods
cmp
mov
stc
jns
xor
loop
push
jp
imul
icebp
lea
ss
ins
cmp
std
daa
jmp
xchg
jge
or
dec
cmp
adc
cwde
adc
xor
std
dec
push
or
and
lods
out
pushf
bound
imul
pop
ja
sbb
mov
pushf
ins
sub
pop
loop
fdivr
loop
lods
bound
cld
xchg
imul
loope
aam
test
mov
jge
sbb
rol
int3
and
or
xchg
pop
call
xor
push
xor
fnstcw
jmp
inc
dec
mov
out
pushw
shr
cmp
sahf
sbb
neg
fstp
cdq
fcmove
push
idiv
js
add
imul
std
lahf
int3
ss
aaa
jne
dec
daa
and
lds
pushf
adc
fsub
ins
pop
adc
js
fiadd
(bad)
cmps
out
cmps
cdq
fist
xor
mov
push
xchg
idiv
cmp
add
or
mov
cmps
push
rol
test
add
nop
cmp
jns
in
adc
call
enter
popa
mov
xchg
sub
add
xor
push
sahf
std
cmp
clc
sti
sub
retf
sub
ficomp
lgs
jnp
aam
adc
fbld
push
jo
or
mov
scas
lods
xchg
sbb
test
jo
lahf
xchg
cs
push
icebp
sub
xor
fwait
mov
mov
test
mov
fiadd
adc
fldcw
pop
mov
dec
mov
fild
test
and
(bad)
pusha
dec
add
retf
dec
push
fstp
dec
mov
cwde
jmp
xlat
fidivr
mov
push
sbb
and
(bad)
mov
lock
sti
mov
add
mov
xor
out
xor
mov
outs
ret
iret
in
aad
cmp
sbb
pop
sub
out
inc
and
add
movs
dec
fsubr
into
sub
sub
inc
inc
je
push
adc
jmp
cmp
fnstcw
add
gs
fadd
adc
std
repnz
mov
iret
or
sub
adc
mov
mov
fdiv
clc
sahf
xor
rcl
jle
jge
retf
pop
and
aad
pop
mov
sbb
js
call
outs
adc
hlt
inc
gs
jmp
xor
test
inc
jmp
inc
mov
scas
add
out
fwait
mov
and
mov
xchg
push
adc
pop
fimul
(bad)
cmp
xchg
push
and
adc
mov
into
out
(bad)
mov
ficomp
ss
jae
shl
pop
cmp
rol
adc
cmc
mov
jge
ret
sbb
xor
(bad)
in
mov
mov
out
aam
ror
pop
dec
arpl
pusha
cmps
and
stc
xchg
dec
pop
aaa
inc
std
add
lea
xchg
iret
data16
xor
loope
add
outs
stos
retf
daa
outs
cmps
sbb
xor
inc
mov
mov
mov
outs
cs
xor
int3
or
sub
sbb
or
pushf
ins
sub
call
sub
add
sub
pop
xchg
adc
dec
mov
cmp
xor
xor
push
xchg
mov
push
inc
div
push
mov
sub
jne
or
push
lods
je
pushf
jg
jmp
cmp
xchg
(bad)
xchg
pop
dec
adc
repnz
int3
imul
out
and
pop
mov
xchg
ins
in
and
cmp
sbb
out
dec
pop
out
lea
dec
lock
lock
test
in
inc
bound
pushf
imul
iret
jg
addr16
lods
(bad)
fimul
dec
fst
push
movs
sub
into
and
fild
mov
lods
jg
add
xchg
sub
aad
or
ja
xor
lea
sub
mov
rol
xor
or
out
xchg
mul
cmp
das
or
rcr
mov
retf
popa
call
out
fadd
inc
out
and
(bad)
mov
not
adc
cmp
jne
dec
outs
jnp
mov
or
cwde
je
mov
movs
clc
add
jg
cmp
sahf
stc
sbb
mov
or
mov
sbb
aam
(bad)
cmp
mov
pop
add
mov
(bad)
sub
mov
retf
rcl
push
mov
test
mov
adc
pusha
or
add
xchg
(bad)
pop
ins
icebp
xchg
and
add
sub
push
or
retf
retf
mov
jo
mov
mov
jmp
inc
fsubr
cmp
pop
and
retf
add
cmps
pop
dec
add
dec
aaa
jae
and
movs
and
push
sar
and
inc
or
push
mov
mov
lea
dec
int
jno
push
push
or
lds
jecxz
or
push
shl
nop
and
fdivr
je
fdiv
push
inc
jg
and
cdq
stos
or
test
xor
mov
rol
sub
pop
ss
xchg
lock
xchg
cmp
push
mov
or
mov
mov
in
shl
pusha
(bad)
loop
or
pop
or
mov
xchg
sbb
pop
adc
adc
sahf
push
mov
push
mov
es
fbld
mov
bnd
jl
inc
(bad)
out
mov
dec
(bad)
mov
fwait
or
pop
xor
mov
aaa
push
inc
ss
test
cli
cld
loope
fist
jge
ins
add
aam
imul
(bad)
jecxz
iret
jno
mov
cmp
dec
jb
repnz
jl
mov
aas
sbb
adc
push
leave
and
stc
mov
test
daa
outs
cwde
push
adc
mov
mov
sub
or
or
mov
adc
push
fsubr
pushf
repnz
mov
fwait
add
shl
dec
push
push
mov
das
lods
lock
rcl
(bad)
ror
pop
jmp
dec
fwait
adc
mov
(bad)
(bad)
scas
daa
mov
pop
mov
cmp
pop
xchg
fs
jno
sbb
lods
not
pop
dec
cmp
dec
add
ins
inc
mov
inc
int3
loop
mov
dec
dec
sbb
ins
mov
scas
fisub
xlat
pusha
call
cmp
cmp
paddw
ss
mov
pop
and
loope
cmp
add
pop
test
jne
mov
out
je
outs
or
sbb
rol
pusha
ja
scas
je
jecxz
fild
sbb
ds
ds
loop
in
ret
sbb
jmp
or
mov
or
push
fisubr
dec
daa
xchg
and
or
mov
jmp
add
or
mov
adc
adc
mov
in
sar
mov
rcl
rcl
jno
or
adc
mov
jo
mov
fwait
inc
and
loopne
sub
pop
std
jne
mov
sub
cmp
pop
adc
rcr
mul
loope
jl
cmp
js
jns
stos
out
push
push
dec
aad
data16
add
sar
imul
outs
icebp
repz
fneni(8087
retf
add
ja
push
mov
dec
(bad)
sahf
mov
inc
cdq
fstp
and
xchg
sar
outs
ins
dec
ret
leave
stos
jo
aas
out
sub
imul
push
fnstsw
xlat
dec
mov
rol
popa
lods
jns
mov
sbb
dec
xor
in
xchg
bound
pop
push
push
add
pop
push
ror
ss
ds
push
test
shr
sbb
fbld
xchg
fwait
xor
push
sub
loope
mov
mov
dec
push
shl
in
aad
fisubr
sbb
vpaddw
ins
dec
repz
dec
(bad)
jmp
adc
dec
iret
mov
loope
test
and
out
push
out
jge
jnp
add
inc
inc
jp
sub
sub
mov
mov
mov
jecxz
scas
mov
les
es
pop
push
add
pop
sub
jl
inc
test
pop
sbb
addr16
xchg
mov
lar
cmc
dec
mov
out
lahf
cmp
and
hlt
dec
fld
mov
jae
pusha
inc
outs
or
mov
mov
fadd
cmps
(bad)
nop
dec
inc
imul
dec
cmp
pop
cwde
and
mov
sti
or
(bad)
xchg
and
xlat
scas
jge
or
add
sub
push
xlat
jb
sub
push
jb
and
xor
(bad)
int
xor
pop
ret
retf
mov
mov
test
or
hlt
lods
lods
sub
sub
or
add
and
fist
add
js
push
inc
pop
jbe
push
and
adc
sbb
(bad)
aas
or
inc
movs
daa
mov
ds
(bad)
fs
lods
loop
jne
cmps
cmp
pop
lods
stos
das
rcr
loopne
jle
je
dec
pop
jb
dec
xchg
pop
jle
ins
dec
xchg
jl
cmps
(bad)
mov
pop
sbb
scas
in
jg
inc
ins
add
cmp
cwde
icebp
movs
movs
dec
sub
xor
jne
shr
das
jns
xchg
ror
shl
xor
pop
xchg
imul
dec
js
jmp
mov
jae
not
es
sti
inc
xchg
sbb
xor
imul
add
pop
pop
ins
or
mov
pop
repz
xor
mov
pop
mov
cmps
dec
xchg
pop
fwait
mov
les
das
or
adc
js
and
or
ins
test
dec
cmps
xor
adc
jno
push
out
push
mov
add
jae
add
add
push
aam
lds
fsub
mov
or
sar
(bad)
(bad)
das
imul
ror
in
test
push
call
push
loop
test
(bad)
fild
dec
out
psadbw
aaa
jne
mov
rcr
daa
and
into
xor
fnsave
hlt
ds
int
loope
sub
adc
lock
add
pop
cmps
scas
pop
dec
jmp
push
xchg
adc
popa
in
mov
out
inc
call
mov
cli
movs
push
test
sbb
inc
mov
fsub
ret
pop
cmp
stos
je
jno
or
mov
(bad)
stc
adc
push
daa
pop
push
xor
sahf
shl
repz
jmp
pop
push
and
push
in
out
mov
cmp
test
mov
or
outs
clc
dec
repz
jnp
add
(bad)
iret
fs
fnsave
nop
mov
adc
mov
test
jns
not
ins
add
dec
xor
mov
ins
(bad)
cmp
das
fisub
xor
aad
popf
adc
imul
inc
hlt
es
sbb
jb
adc
(bad)
add
mov
stos
mov
xor
shl
adc
add
sbb
add
adc
jmp
jae
mov
cld
jno
int3
jnp
clc
mov
sbb
cmp
das
sub
into
sbb
xor
addr16
cmc
outs
push
mov
shl
or
shl
popa
cld
push
jno
ins
data16
out
or
lods
adc
sub
popf
pop
loop
in
cdq
fadd
dec
or
jmp
cmp
cdq
fsubr
xchg
stos
jecxz
dec
and
aas
fild
retf
(bad)
fstp
jmp
clc
arpl
iret
and
xchg
out
rcr
(bad)
lock
mov
push
ror
mov
cld
lock
jo
cmp
mov
cmps
or
sti
or
iret
cmps
jle
pop
movs
jns
sub
cmps
(bad)
and
mov
icebp
(bad)
jbe
push
cmp
js
jno
xor
push
jl
add
xchg
out
and
push
xor
push
call
fild
sar
je
push
adc
sar
cli
hlt
das
push
cmp
out
scas
scas
frstor
push
in
cmc
outs
jg
lods
das
data16
jne
rcr
pop
fist
fmul
mov
test
add
pop
outs
cmp
pop
push
push
push
dec
icebp
mov
xchg
sub
outs
mov
xchg
sahf
retf
sbb
jmp
xchg
ror
and
repz
mov
loopne
sti
sti
(bad)
jl
sub
add
and
leave
sub
mov
in
shr
pop
data16
xor
iret
mov
pusha
add
mov
add
push
mov
adc
sub
xchg
(bad)
or
jns
jecxz
cmp
nop
shl
xor
add
gs
retf
or
je
pop
sub
and
jle
test
cmp
fsubrp
sbb
into
inc
adc
enter
mov
pop
or
push
pop
push
rcr
outs
bound
and
call
aam
push
out
push
cli
leave
push
hlt
aaa
mov
cmp
mov
and
sbb
or
pushf
movs
mov
and
inc
and
aam
stc
mov
repnz
jmp
jle
mov
test
jmp
mov
adc
add
or
dec
mov
ret
pop
jmp
test
(bad)
xor
cmps
rcl
sub
aaa
adc
popf
xchg
push
xlat
movs
rol
mov
dec
jbe
jo
or
fsub
or
adc
mov
mov
jns
or
sub
test
pop
sub
in
cmps
out
das
and
cmp
les
repz
sti
out
cwde
jae
pop
cmp
cmp
call
out
dec
imul
adc
dec
rcr
xor
hlt
cs
mov
mov
push
in
push
inc
repz
sbb
mov
pusha
fist
xchg
xor
int3
lock
cdq
movs
and
icebp
dec
inc
aam
movs
xor
movs
lea
push
leave
jne
mov
sub
mov
call
cli
sbb
nop
jg
jns
inc
imul
pop
inc
scas
cmps
sar
cli
adc
daa
adc
stc
jecxz
inc
sub
and
cmp
fdiv
cmp
sub
data16
jmp
enter
arpl
mov
rcl
pop
sub
xchg
fucomip
and
push
adc
push
(bad)
cs
jo
aas
sub
mov
lock
xor
and
sbb
add
sub
and
cdq
inc
jmp
dec
push
jb
mov
pop
adc
or
stos
pop
scas
mov
fwait
test
dec
cld
cmp
jbe
cmps
pop
ins
mov
hlt
mov
xchg
aas
xlat
repz
dec
mov
fwait
stos
adc
jne
mov
mov
pop
cs
sbb
jecxz
and
sub
ins
je
repnz
test
mov
aaa
nop
mov
out
rcl
sbb
adc
xor
out
xchg
add
aaa
fstp
ret
mov
add
out
pushf
test
repnz
sti
sbb
push
loope
inc
js
sub
(bad)
mov
arpl
cmp
dec
adc
(bad)
add
int
movs
mov
cmp
and
jbe
fcom
jg
imul
scas
push
ret
out
aam
cmp
or
jns
mov
mov
cdq
sub
ss
pop
pop
push
js
and
jge
daa
dec
pushf
rol
ins
mov
test
movs
or
cmp
clc
mov
hlt
mov
fst
or
test
js
scas
or
pop
xor
or
inc
cmp
push
pusha
sub
daa
(bad)
pop
es
nop
push
icebp
js
xor
push
outs
cld
xchg
daa
push
push
mov
cmp
jb
jae
ret
pop
sahf
(bad)
xchg
inc
lock
out
ins
xor
push
test
push
hlt
adc
ja
cmp
mov
mov
imul
sar
inc
adc
clc
inc
inc
int
or
xchg
ja
rcr
mov
dec
loope
cli
pop
xchg
jge
ja
ret
lods
and
shl
sub
dec
cmp
xchg
adc
fstp
adc
fidiv
sbb
aad
cmp
mov
out
lods
fbstp
in
cmp
xor
sub
leave
das
cmp
mov
into
pop
imul
fwait
and
xchg
push
jecxz
push
xchg
bound
add
cmp
iret
pop
in
xchg
out
push
(bad)
arpl
jecxz
dec
dec
into
call
push
loop
cmp
mov
fisub
outs
sub
lar
retf
add
push
xor
pushf
fs
or
push
fs
into
xor
jns
xchg
mov
movs
inc
pop
fdivr
jmp
adc
sub
mov
loopne
mov
adc
mov
je
push
in
cmp
mov
sbb
inc
lods
leave
in
cmc
sub
pop
and
or
sahf
scas
test
or
push
mov
in
cmp
iret
cmps
sbb
ins
data16
mov
mov
and
mov
xchg
cmp
js
ins
ret
aad
inc
cld
mov
rol
cli
popf
jns
(bad)
jecxz
adc
cmp
ds
sub
push
pop
cmp
mov
pop
mov
outs
and
lods
loopne
bound
sub
shl
inc
in
and
outs
ret
ins
popa
jl
jmp
adc
mov
mov
jbe
mov
adc
es
out
push
mov
hlt
les
fbld
std
pop
les
xor
push
imul
lock
mov
std
repnz
retf
or
mov
pushf
jmp
fwait
in
jle
sbb
mov
loop
and
imul
mov
or
sbb
lods
pop
xchg
sub
adc
test
cmp
addr16
jbe
xlat
lods
shl
mov
rcl
inc
jp
mov
jg
xchg
sub
adc
sbb
ss
and
sub
mov
and
sub
mov
push
fldcw
or
test
mov
and
scas
test
shl
mov
ret
je
pop
ds
or
retf
push
inc
xchg
imul
outs
inc
test
fst
rol
mov
mov
shr
call
or
pop
aad
(bad)
sbb
imul
pop
sbb
arpl
fld
adc
mov
or
add
pop
push
mov
(bad)
stos
sub
int
or
ins
sub
scas
scas
xor
dec
add
mov
mov
call
pop
aad
sub
xchg
or
sub
fist
push
sbb
addr16
out
push
dec
cmps
xchg
xchg
mul
lods
pusha
jae
in
call
jae
sub
js
push
xchg
test
inc
fnstcw
and
push
sub
jo
or
push
push
cmp
stos
mov
lods
loope
xchg
jp
hlt
push
push
ins
jecxz
cmc
arpl
mov
cdq
aad
mov
push
stos
jo
and
mov
into
xchg
mov
dec
ret
rcl
mov
add
sub
popf
cmp
out
adc
stos
or
sbb
mov
out
ret
mov
in
and
nop
ss
adc
mov
mov
les
test
mov
adc
rcr
dec
bound
pop
icebp
push
into
inc
sar
mov
sub
sbb
stos
adc
into
add
inc
jp
loop
iret
push
cmp
fnstcw
fistp
and
sub
dec
cli
cmp
cmp
gs
addr16
xchg
pop
or
pop
inc
in
push
fucomi
addr16
addr16
jmp
call
cdq
mov
aam
jns
(bad)
ss
add
or
xor
int
aaa
sub
fidiv
sub
xlat
leave
push
daa
repz
aaa
xchg
push
xchg
dec
test
xlat
test
psubd
mov
movs
ds
sahf
pop
inc
cmp
xchg
add
mov
add
mov
jno
xchg
or
cs
bound
in
adc
movs
pop
and
adc
fs
xor
and
mov
inc
call
jecxz
or
outs
dec
mov
stos
loopne
mov
test
rcl
or
push
sbb
setp
push
jp
mul
and
mov
push
pop
xchg
xchg
or
repz
movs
(bad)
in
push
jno
lods
or
aaa
std
jecxz
adc
inc
adc
daa
call
mov
int3
mov
pop
mov
or
or
cmps
shr
jae
xlat
in
pop
sbb
popa
dec
(bad)
cli
jne
cmp
and
cld
fidivr
sbb
fist
aas
add
aam
jns
or
sbb
mov
xor
bound
mov
fsubr
imul
jl
or
xchg
shl
jmp
lahf
pop
mul
enter
and
pop
adc
dec
xor
push
cmc
adc
scas
in
inc
mov
pop
mov
sbb
gs
or
das
inc
pop
movs
aas
aam
dec
retf
adc
inc
dec
mov
fs
and
mov
ret
daa
test
enter
pop
or
(bad)
daa
or
sar
sub
clts
xchg
scas
ja
pop
sbb
dec
addr16
sub
xchg
outs
cdq
dec
ret
xor
outs
cmp
pop
out
in
rcr
dec
dec
add
dec
pop
mov
push
and
jmp
fxch
jge
int3
(bad)
xor
pop
dec
mov
out
lock
push
push
popa
lock
and
mov
mov
inc
mov
stos
adc
js
data16
pushf
test
je
cmp
xor
cmp
pop
dec
mov
cmps
push
mov
push
cmc
lea
inc
hlt
pop
pop
or
lods
cld
jge
movs
xchg
test
jmp
pop
jp
and
ret
in
cmc
mov
mov
jge
arpl
jns
pop
dec
test
cmp
xchg
or
and
xor
jae
stc
and
sub
pop
js
movs
push
ins
push
xor
sar
jecxz
push
mov
lock
ror
out
sbb
add
or
inc
add
xchg
push
sbb
sbb
in
sub
int
inc
jne
mov
iret
in
(bad)
push
bound
dec
cdq
(bad)
inc
test
pop
hlt
sbb
out
dec
sbb
ffreep
add
repnz
xchg
in
repnz
jl
ret
sbb
adc
fwait
out
push
div
jmp
aas
lods
pushf
outs
scas
sub
xchg
xlat
and
shl
test
(bad)
mov
xchg
mov
ror
shr
mov
aad
adc
cmps
xchg
jae
bound
and
movs
(bad)
cdq
mov
and
jl
cmp
adc
push
(bad)
push
(bad)
xor
int
fidivr
add
dec
pop
arpl
(bad)
f2xm1
fild
pop
aaa
(bad)
out
sub
xchg
in
ret
test
xlat
std
xor
cmp
add
arpl
cmp
(bad)
icebp
xchg
dec
push
out
sahf
xor
sar
arpl
sub
enter
mov
in
cli
and
lock
sub
test
add
mov
push
pop
sub
dec
shl
(bad)
daa
xor
push
ins
lods
frstor
iret
mov
movs
add
xor
lahf
add
aam
rol
and
int3
mov
sub
es
sbb
sub
xor
add
jo
imul
inc
lahf
in
dec
sub
cwde
ror
ins
js
dec
fistp
push
and
retf
in
push
add
pop
(bad)
jne
aaa
add
std
mov
sub
into
push
popa
inc
xchg
jne
stc
outs
jmp
xor
ins
push
test
mov
(bad)
dec
out
addr16
mov
cli
xchg
mov
sub
fisttp
or
pop
push
inc
mov
leave
or
(bad)
rol
dec
rcr
pop
xchg
ror
popa
jns
pushf
xchg
cmp
out
(bad)
pop
cwde
or
xor
add
mov
dec
xchg
fdivr
sahf
sbb
inc
shl
dec
jmp
pop
iret
test
mov
push
daa
outs
xchg
push
retf
and
cmp
hlt
add
cdq
pop
mov
sbb
xor
add
xchg
and
pop
jae
in
(bad)
mov
fldcw
and
das
call
push
loop
addr16
pop
jnp
jge
add
sub
jl
retw
mov
sub
pop
icebp
daa
xor
dec
leave
jmp
out
dec
retf
push
mov
nop
(bad)
xchg
mov
pop
add
mov
ja
bound
xor
inc
rol
test
push
enter
jbe
sbb
fmulp
cmps
or
mov
adc
cmc
popf
adc
(bad)
jmp
iret
mov
inc
ret
mov
mov
xchg
mov
jbe
dec
push
aas
mov
clc
shl
pop
inc
pusha
dec
std
mov
scas
jecxz
dec
fnsave
push
mov
mov
bound
int
addr16
push
xchg
pop
fstp
dec
ins
and
aaa
jnp
lods
std
aas
add
rcr
movs
xchg
push
mov
inc
xor
adc
mov
scas
retf
jmp
jae
add
iret
in
cmp
mov
jae
lods
cmc
jb
xchg
adc
adc
cmps
cmp
outs
call
pop
sub
fidiv
scas
aas
lods
out
into
cmp
in
and
add
push
lods
or
shr
mov
hlt
mov
cmc
shr
mov
lods
sbb
sub
cmp
xchg
ins
cli
cmps
push
lock
mov
pop
xchg
cs
fisttp
or
and
push
pop
scas
xchg
inc
loopne
pop
and
push
iret
mov
pop
mov
xor
sub
pop
jnp
sar
sbb
(bad)
in
dec
dec
jmp
mov
ss
rol
sar
jbe
mov
sti
sbb
fidivr
mov
ret
xor
add
ja
xor
or
inc
pusha
popa
dec
mov
(bad)
es
hlt
pop
jg
xor
int3
pop
mov
cli
mov
sub
test
ins
xor
mov
fdivrp
rcl
add
xor
sub
test
int3
push
sbb
sti
inc
xchg
into
loope
sbb
mov
jl
fidiv
and
and
jno
icebp
cmp
push
popf
xchg
movs
scas
sahf
jecxz
loope
ds
cs
and
add
outs
or
int
fsubr
stc
shl
int
cwde
int3
test
in
ds
outs
call
mov
mov
clc
cmp
add
mov
cmp
adc
inc
and
idiv
or
stos
(bad)
dec
ds
pop
scas
pop
mov
dec
arpl
cmp
fisubr
(bad)
pusha
sbb
mov
pusha
(bad)
aam
in
adc
movs
les
or
fiadd
in
adc
fnstsw
xor
dec
sti
xchg
iret
pop
retf
mov
enter
pop
push
adc
push
inc
pop
int
dec
je
es
dec
rcl
mov
adc
mov
jns
mov
cwde
sbb
jnp
shl
arpl
pop
ret
add
loopne
out
inc
movs
xor
inc
outs
dec
cli
or
jbe
in
mov
xchg
addr16
test
popf
dec
mov
in
enter
imul
xchg
test
inc
test
sbb
sub
mov
daa
fadd
dec
jne
sbb
pop
add
gs
sbb
inc
sbb
rcl
adc
test
jle
in
pop
ror
lea
mov
pop
jne
enter
ret
push
jmp
dec
pushf
sub
rcl
ins
out
mov
sti
and
sbb
mov
sbb
in
call
sbb
in
retf
shl
js
jge
push
sti
stos
mov
mov
fistp
lock
sub
shl
cmp
xchg
(bad)
rcr
pop
test
call
adc
sub
scas
push
pop
push
cmp
jp
out
aam
or
or
std
add
in
pop
ret
push
pop
int3
sbb
xor
push
arpl
dec
stos
inc
loope
mov
std
mov
imul
pop
xor
lock
(bad)
mov
xor
mov
inc
repnz
cld
mov
sub
and
addr16
jo
cmp
pop
lods
outs
sbb
imul
jbe
cmp
pop
fwait
xchg
or
pop
mov
les
js
cmp
push
fsub
stos
cmp
lods
aas
jmp
lahf
pop
mov
es
aas
mov
bound
ins
retf
and
xchg
popa
cmp
popf
sub
jecxz
mov
cmps
mov
xchg
fbstp
or
jo
xor
dec
and
retf
jmp
sub
adc
pop
rcr
dec
mov
mov
cmps
mov
or
mov
rcr
push
mov
pop
jmp
jecxz
xchg
fisttp
sbb
out
mov
sbb
fdivrp
cmp
mov
sub
cmp
outs
mov
sbb
pop
les
(bad)
std
push
outs
mov
xor
jne
fcomip
add
js
cdq
ror
inc
sahf
mov
call
shl
ret
lock
mov
mul
enter
std
test
(bad)
mul
cwde
out
repnz
jb
ja
pop
inc
dec
jmp
cli
inc
icebp
fdivr
test
xor
sbb
fmul
and
int3
adc
in
arpl
sbb
(bad)
dec
fnstcw
xor
jae
add
mov
jbe
sub
mov
es
xchg
jae
xlat
sahf
inc
not
fsubr
jmp
stos
add
shl
mov
dec
sub
shl
call
or
xor
fwait
cmps
dec
scas
add
fmul
sub
lea
push
push
ins
movs
dec
mov
ins
xor
shl
ja
xchg
pop
sar
dec
sub
xchg
pop
cs
xchg
push
mov
push
pop
or
ret
ins
mov
neg
mov
cmp
rol
jmp
cmp
call
sbb
sbb
inc
iret
inc
or
out
mov
stc
sub
cs
pop
call
test
cdq
fsub
jle
in
push
inc
pop
sub
jmp
cld
xor
cvtdq2ps
scas
inc
test
mov
mov
popa
adc
and
xchg
aaa
stc
sub
(bad)
arpl
scas
push
add
fadd
loope
mov
sub
out
mov
outs
sub
inc
mov
and
or
ret
dec
lods
fmul
dec
popa
inc
(bad)
dec
push
jmp
inc
jns
mov
mov
jmp
fcom
stos
repz
cli
loop
data16
pop
retf
jbe
inc
sbb
out
std
xlat
scas
xlat
inc
xchg
popf
retf
xchg
mov
pusha
xchg
and
cs
inc
cmp
and
jb
push
push
cmp
(bad)
sbb
inc
add
hlt
xchg
imul
or
ror
clc
push
mov
xor
ret
lsl
push
or
cmp
pop
fist
fadd
pop
test
adc
or
fimul
push
mov
add
jmp
int
dec
cmp
jne
pop
mov
xor
fisubr
dec
add
pop
(bad)
repnz
push
sub
stos
push
mov
test
lods
das
outs
add
adc
int3
shl
out
dec
and
jmp
sub
mov
jne
push
hlt
xchg
jae
and
icebp
and
mov
xchg
js
xor
add
mov
xchg
sbb
mov
ror
mov
aam
push
mov
pop
cs
add
adc
sub
push
sub
int
cmp
xchg
push
inc
jl
add
sub
push
bnd
sbb
aaa
test
aad
stc
lock
xchg
add
jp
xor
idiv
sbb
or
dec
aad
(bad)
shl
aaa
inc
aad
xor
push
push
mov
dec
jne
cwde
jle
iret
repz
mov
sbb
cmps
xchg
mov
not
mov
icebp
adc
int3
mov
cmp
idiv
cmp
scas
push
inc
aaa
mov
movs
mov
add
push
inc
inc
jg
retf
aaa
dec
pop
cmp
inc
mov
cmp
out
lea
fwait
(bad)
aad
es
fldlg2
sbb
pushf
leave
(bad)
call
scas
lods
mov
aaa
and
(bad)
cmp
cmps
inc
test
pop
pop
lds
ror
(bad)
ds
call
sbb
mov
adc
fdivr
mov
lahf
repz
cmp
or
jb
(bad)
and
loop
adc
mov
int3
mov
sub
inc
push
mov
ins
iret
mov
js
push
push
sbb
daa
jae
xchg
push
fidivr
jmp
inc
shl
stc
inc
out
xchg
inc
mov
xor
xchg
mov
mov
adc
push
and
inc
test
mov
cli
mov
pushf
data16
pop
pop
dec
aad
imul
into
push
dec
add
fidiv
into
inc
cs
sub
stc
sbb
dec
mov
pop
fdivp
push
inc
xor
xlat
dec
ja
popf
lods
cmp
jbe
lds
cld
inc
outs
aas
sub
ins
or
stc
lock
push
pop
jge
xchg
sti
jbe
sub
imul
mov
(bad)
xor
pop
aaa
mov
dec
popa
icebp
push
repnz
pop
(bad)
repnz
shl
shl
and
test
bound
movs
loop
jl
sbb
das
stos
add
jg
adc
enter
sahf
mov
dec
ja
lds
scas
sub
cmp
mov
iret
push
enter
(bad)
cwde
cmps
fistp
add
repz
sub
mov
pushf
mov
call
sbb
and
mov
(bad)
cli
xchg
outs
in
in
in
sbb
and
xlat
and
enter
mov
inc
pop
jmp
arpl
shr
xor
mov
mov
push
stos
rcl
fld
jl
call
mov
retf
stos
sbb
rol
aas
pusha
cmp
cmp
(bad)
push
xchg
adc
ins
test
mov
or
and
add
push
sti
daa
mov
fmul
and
das
int
cmp
jecxz
lea
fsub
push
fwait
(bad)
jp
push
mov
and
stos
fwait
sar
push
pop
xlat
xor
pop
outs
dec
mov
and
sbb
in
pop
mov
inc
mov
lock
mov
gs
dec
dec
aam
push
sbb
xchg
or
inc
mov
jle
sub
inc
je
stos
mov
mov
mov
cdq
cli
xor
and
push
inc
xor
xor
dec
mul
test
test
ds
cmp
stc
aad
or
sbb
mov
jle
fwait
ss
mov
and
inc
push
mov
fwait
push
outs
sbb
push
inc
pushf
dec
mov
xchg
pop
mov
div
xchg
cmp
sbb
inc
leave
fs
dec
jmp
cdq
pop
inc
jmp
adc
ror
stc
adc
icebp
dec
push
rcl
dec
xchg
pop
add
or
xchg
xlat
adc
jnp
jno
push
lds
xor
sub
pop
scas
lods
xor
in
dec
jmp
fldenv
ins
sub
jg
loopne
sub
dec
mov
outs
(bad)
xchg
or
dec
fucom
or
inc
xor
and
aad
mov
and
and
sbb
jno
arpl
out
xchg
rcl
shr
cmp
push
(bad)
jp
sub
(bad)
cs
cmp
lea
hlt
mov
imul
icebp
sub
leave
jb
xor
(bad)
sahf
sbb
or
popf
outs
xchg
jmp
fcom
jmp
movs
fidivr
shr
test
mov
jle
adc
shr
inc
out
cmp
xor
adc
push
nop
and
mov
mov
sbb
call
ret
mov
and
cmp
mov
add
movs
enter
mov
movs
inc
icebp
je
xchg
cmps
or
mov
push
mov
popf
(bad)
movs
mov
fidiv
inc
mov
nop
xchg
mov
mov
ins
jno
or
arpl
push
cmp
test
fucomp
test
test
lods
sbb
ret
ret
push
cmp
ins
loopne
xor
movs
add
sub
clc
jp
sub
xchg
add
jecxz
xor
dec
hlt
imul
imul
add
sub
aam
jl
mov
mov
add
test
xlat
ret
jbe
je
smsw
dec
enter
and
and
and
mov
push
inc
fistp
pop
push
mov
mov
shl
dec
imul
pop
(bad)
adc
adc
mov
mov
pop
(bad)
sbb
sbb
sbb
mov
mov
lds
inc
daa
lsl
dec
dec
je
cmc
push
add
sti
call
ret
imul
inc
adc
cmp
arpl
in
xlat
or
mov
stos
xor
jns
test
push
jne
ret
push
stos
ja
cwde
mov
mul
xchg
arpl
in
rol
sub
xor
cli
add
mov
test
mov
or
pop
adc
and
and
test
test
lods
aas
jmp
jg
push
inc
jge
popa
cmp
mov
mov
mov
and
arpl
into
loopne
repz
jnp
and
xor
pusha
push
cld
push
inc
outs
test
stos
mov
cmc
gs
rcl
out
xor
adc
dec
mov
sbb
cli
jo
inc
cmp
sub
add
outs
and
enter
jo
jns
test
adc
or
mov
xor
xchg
push
vrcpss
dec
mov
sbb
test
inc
add
inc
dec
dec
lods
sbb
mov
in
inc
xchg
lahf
fwait
ror
xchg
pop
je
inc
pop
retf
push
dec
jo
pusha
jae
fwait
push
dec
sahf
mov
push
pop
ret
jb
les
cmp
xor
pop
xchg
test
rcr
push
lock
and
icebp
adc
lods
call
out
inc
ins
push
jns
sub
int
outs
ds
xchg
and
and
ret
xchg
cmp
mov
inc
sub
ds
lock
repnz
test
xchg
ins
aad
jp
imul
mov
sub
sub
stos
lahf
cmp
push
jno
sbb
leave
adc
icebp
(bad)
data16
stos
sub
adc
cmp
pushf
les
xchg
scas
ltr
adc
cmp
pop
mov
mov
mov
jns
push
pop
leave
jb
mov
mov
adc
xor
lahf
scas
mov
sbb
shl
pcmpeqd
adc
data16
cmp
lea
mov
mov
jmp
push
add
loopne
ss
cmc
stos
out
xchg
pop
lock
movs
mov
lea
stos
jns
test
push
inc
xchg
jge
movs
sub
loope
outs
ret
aad
mov
push
push
stos
clc
mov
add
pop
std
imul
rcl
cwde
inc
test
dec
inc
jmp
jmp
mov
mov
cmc
in
lods
mov
in
mov
lea
outs
add
jae
and
fiadd
or
push
adc
xor
shl
adc
sbb
ret
rol
es
sub
cmp
cmp
jge
jnp
adc
mov
push
shl
(bad)
or
pop
dec
fcmovnbe
cmps
jecxz
push
or
dec
push
or
cld
inc
fwait
call
push
cld
test
jmp
in
push
movs
aam
mov
int3
outs
iret
mov
inc
(bad)
cmps
adc
mov
mov
popf
fisubr
popf
and
mov
sub
dec
jae
sbb
fisubr
mov
sbb
sub
sbb
sub
xchg
repnz
mov
xchg
xchg
nop
cmp
adc
jae
sbb
inc
mov
mov
pop
pop
repnz
movs
inc
cmps
sub
jb
(bad)
leave
or
mov
stc
retf
pushf
rcl
ret
sbb
sub
dec
xchg
cmp
inc
jle
das
aas
loopne
push
add
jle
and
fadd
aas
xchg
mov
cmps
jmp
pop
mov
pop
or
push
add
leave
or
adc
stc
mov
push
pop
push
pop
movs
cmp
inc
dec
mov
lahf
adc
addr16
fwait
xor
aaa
cmp
dec
lea
push
(bad)
sbb
pushf
mov
push
xchg
cmp
dec
addr16
ficom
outs
jo
xor
dec
fmul
xor
xchg
in
add
xor
and
icebp
adc
fild
jmp
imul
push
loope
lock
movs
and
imul
or
xor
out
pushf
ret
cmp
mov
cli
mov
mov
mov
mov
sbb
stos
jmp
jg
push
aad
inc
mov
mov
movs
scas
push
loopne
pop
test
inc
dec
mov
inc
cld
xchg
cwde
sahf
pop
push
cmp
cmp
inc
and
pop
mov
and
mov
jmp
and
fdivp
bound
add
push
daa
shl
mov
mov
(bad)
inc
in
movs
inc
xchg
dec
lea
popf
mov
aad
inc
je
fdivr
test
fcom
push
push
outs
xor
or
aad
or
pop
popf
aad
sub
movs
pushf
sbb
mov
lahf
xchg
inc
push
adc
cmc
test
retf
test
sahf
rcl
js
sbb
ret
loope
pop
bnd
adc
sbb
xchg
std
or
xor
pop
and
cmp
or
pushf
ins
sbb
jmp
rcl
add
scas
mov
and
pop
xor
inc
add
mov
xchg
mov
pop
and
add
pop
out
js
stos
enter
rcr
and
out
jmp
cli
(bad)
cmp
sbb
popf
mov
adc
or
js
lods
idiv
push
(bad)
adc
fimul
repz
(bad)
mov
shl
jle
outs
cmp
and
fwait
into
push
mov
scas
xor
sti
movs
jle
std
cmp
sub
inc
je
popf
stos
sti
arpl
mov
imul
lahf
cmc
push
aam
inc
fcmovbe
jmp
fs
mov
jne
outs
mov
jne
clc
inc
pop
ret
sbb
mov
in
ret
loope
retf
rol
xor
sub
dec
repz
test
cmps
adc
sar
add
jae
icebp
pop
ror
mov
sub
xchg
mov
loopne
cmps
add
iret
in
mov
inc
pop
test
sbb
xor
gs
les
inc
mov
stos
cmp
loope
push
cmp
push
sub
pop
cmp
lods
test
cs
sbb
adc
fnstsw
movs
add
xor
xchg
repnz
pop
shl
ret
rcl
lods
scas
mov
call
in
ja
mov
test
(bad)
and
ins
in
push
ficomp
(bad)
outs
add
mov
mov
and
cli
mov
and
lods
loopne
movs
and
inc
outs
jmp
pop
dec
and
retf
and
mov
hlt
call
mov
rcl
pop
loopne
jle
rcl
xchg
sbb
sub
enter
cmc
push
pop
shl
or
push
adc
popa
int
enter
inc
xchg
mov
dec
mov
ds
shr
in
push
bound
pop
pushf
and
jae
or
push
pop
or
std
lea
push
push
in
mov
dec
inc
xchg
or
pushf
jmp
mov
mov
shl
leave
test
call
ja
sbb
scas
adc
iret
rcr
cmp
iret
(bad)
cdq
imul
sbb
pop
repz
test
xor
mov
inc
sbb
ins
loope
into
cmp
and
bound
leave
push
xor
sbb
popa
adc
add
push
add
scas
or
dec
shl
out
lea
dec
aam
mov
inc
mov
and
mov
call
mov
push
aad
rcr
push
lock
scas
push
mul
retf
scas
mov
dec
jb
sub
push
fimul
xor
push
rol
scas
repnz
jae
xchg
and
cld
pop
not
jg
das
and
movs
(bad)
call
ret
test
mov
push
aam
adc
mov
cs
or
fild
jmp
outs
stos
mul
adc
cmp
dec
aaa
es
(bad)
das
mov
cwde
in
in
mov
sbb
(bad)
enter
jmp
mov
popf
pop
stos
mov
inc
sub
mov
mov
dec
test
lods
mov
popf
xchg
(bad)
dec
arpl
and
sbb
fdiv
in
iret
bound
dec
(bad)
retf
loope
sub
imul
hlt
dec
nop
mov
or
shl
cdq
mov
jl
dec
ss
cs
jmp
hlt
iret
scas
jne
inc
push
sbb
xor
push
xchg
add
pop
jg
push
pushf
inc
into
pop
jbe
and
cs
inc
rol
sub
inc
daa
and
pop
sahf
rol
add
dec
gs
out
loopne
mov
xor
dec
aad
fwait
rcr
rcl
mov
lahf
cmp
fnstcw
mov
stos
xor
cdq
pop
mov
push
gs
loopne
cmp
(bad)
in
sbb
sbb
in
arpl
jmp
xlat
xchg
pop
inc
cmp
jle
xor
push
mov
sahf
stos
cmp
sub
push
out
mov
jb
sub
and
jnp
add
(bad)
sub
or
xchg
mov
lods
xchg
bndstx
push
mov
loope
int3
adc
je
sbb
jle
dec
and
repnz
(bad)
in
dec
dec
test
or
jnp
mov
inc
push
mov
popa
sbb
stos
push
clc
lds
or
push
pop
mov
cmp
fild
pop
jae
jmp
outs
dec
retf
cwde
mov
jo
sub
fisubr
and
popf
sub
cli
push
adc
pop
adc
sub
jnp
pop
leave
push
jno
push
jg
mov
and
xchg
mov
or
pop
enter
mov
sub
in
(bad)
lds
push
dec
jnp
dec
push
(bad)
clc
xchg
cmp
adc
xchg
mov
aaa
sbb
out
sar
in
mov
ret
dec
mov
ja
into
iret
and
and
cli
jo
dec
inc
stos
add
repnz
dec
sahf
jnp
sbb
or
lds
adc
sbb
cwde
adc
push
pop
fisub
test
inc
(bad)
push
pop
pop
ror
mov
xor
sub
cmp
cld
into
xchg
cmp
xchg
inc
jle
imul
cmp
push
dec
ja
hlt
and
jb
push
jp
adc
xchg
or
push
add
inc
scas
cwde
arpl
or
popa
repnz
mov
call
xor
xor
daa
retf
rol
rcl
jb
sbb
mov
ins
pop
fisub
and
mov
lahf
jg
xchg
movaps
daa
push
test
scas
fistp
aaa
loopne
aad
and
out
or
aas
mov
cmp
xchg
aam
sbb
push
ss
pop
inc
or
adc
or
mov
add
out
dec
rcr
mov
and
sahf
mov
loopne
ja
pop
stc
sub
fst
sbb
fwait
dec
pop
mov
sub
or
(bad)
sub
inc
sbb
push
jo
call
nop
fist
jb
xchg
add
scas
sbb
inc
outs
or
repnz
aas
enter
(bad)
push
mov
adc
mov
fdiv
pushf
les
jae
div
xor
aas
push
cmp
inc
sbb
and
sbb
pop
ja
sar
ja
push
inc
jge
sbb
sti
das
les
sub
in
push
push
or
test
pop
or
adc
stc
push
xor
out
xchg
(bad)
adc
and
pmaddwd
and
dec
faddp
(bad)
fmul
jle
push
inc
xor
lds
mov
jo
push
cmc
add
(bad)
xor
fwait
std
cwde
xchg
push
inc
inc
adc
dec
nop
pop
dec
add
mov
jg
sub
aam
xor
pop
jmp
fsub
(bad)
ficomp
int
mov
lods
xchg
inc
cld
push
xchg
lods
pop
stos
lds
push
ret
jecxz
sbb
mov
pop
stc
fcomp
inc
lahf
xchg
inc
push
hlt
loope
or
push
sub
dec
iret
dec
dec
fidiv
mov
push
sahf
or
sar
mov
or
daa
hlt
dec
cmc
pop
ss
das
in
push
hlt
jg
push
xlat
and
das
fs
fist
rcr
lea
sbb
ret
lahf
nop
mov
(bad)
mov
inc
pushw
das
sar
pop
xor
pop
inc
rol
clc
out
pop
jecxz
xchg
test
fistp
add
scas
and
enter
inc
push
pop
repz
in
sub
xchg
imul
jl
cmp
cli
rcl
cmp
dec
imul
stos
or
mov
enter
mov
pop
and
cmp
pop
jbe
ja
jg
xor
jg
push
pop
xchg
(bad)
adc
and
addr16
(bad)
sbb
repnz
lea
retf
out
and
xchg
sti
retf
stos
sbb
repnz
and
mov
shr
(bad)
push
jge
ret
xchg
dec
xchg
sub
xchg
ins
mov
sub
ins
pusha
out
fcomp
xor
ins
in
ins
or
ins
xchg
sub
lock
jmp
add
mov
int
mov
pop
and
jmp
loope
sub
shl
sub
cmp
fcomp
xor
sbb
pushf
bound
jecxz
repz
push
jge
lea
sahf
data16
push
xlat
call
rol
cmp
popa
sbb
xlat
pop
fincstp
push
rol
mov
in
sub
mov
sahf
test
push
inc
add
daa
mov
fs
loop
jg
popa
loop
addr16
dec
mov
add
data16
lahf
push
cmps
loopne
sub
cmp
fmul
lock
daa
imul
mov
ds
js
cmp
(bad)
mov
and
je
daa
loope
mov
ss
sub
fsubr
loope
mov
push
cdq
xchg
push
test
ret
xchg
mov
push
ret
sub
jp
ins
mov
stos
retf
xchg
in
les
pop
jecxz
inc
in
sub
retw
or
stos
xchg
into
cmp
loop
retf
test
mov
cmp
es
shl
push
mov
(bad)
ficom
ror
retf
xchg
adc
call
test
pop
in
movs
repz
imul
sbb
xchg
clc
mov
cmps
jl
and
add
ficom
leave
mov
xchg
adc
add
or
jle
jno
shl
dec
out
pop
movaps
push
adc
loopne
sbb
sub
cmp
or
das
cmc
pusha
xchg
ds
dec
imul
mov
scas
pop
std
(bad)
mov
add
jns
xor
stos
or
in
cmp
imul
or
sbb
les
sbb
sbb
inc
leave
inc
sub
ins
out
xlat
add
gs
aaa
pop
sar
aaa
jg
xor
(bad)
addr16
out
in
scas
mov
xor
mov
dec
mov
mov
sbb
gs
mov
and
sub
cmps
rcr
fscale
leave
xor
outs
pop
dec
mov
out
xlat
sbb
aas
mov
dec
sbb
mov
cmp
mov
mov
xor
mov
add
out
pop
inc
ficom
stos
or
add
leave
lahf
xchg
and
inc
sahf
(bad)
xchg
lods
pop
aam
sbb
rol
push
sti
pop
cmp
jae
push
rol
clc
push
dec
cli
setg
xor
jle
ins
push
or
cmp
dec
fisubr
not
push
adc
jne
jmp
jo
add
(bad)
mov
push
adc
jae
cmc
nop
push
nop
pushf
inc
xchg
cmc
enter
lods
jmp
dec
inc
das
dec
pop
xor
int
or
sub
sub
cmps
mov
in
fsub
cmp
push
sbb
mov
or
mov
in
pop
push
xor
sbb
sahf
mov
jbe
mov
and
mov
dec
(bad)
(bad)
nop
push
inc
xchg
test
cli
pop
add
sub
mov
mov
mov
outs
pushf
fst
in
mov
test
sahf
push
mov
sbb
jge
bound
retf
jb
add
push
(bad)
sub
xor
xchg
mov
gs
daa
ss
imul
gs
xor
sbb
shr
stos
xor
inc
aad
cmp
outs
fiadd
sub
xchg
pop
bnd
cs
in
cmps
mov
cli
or
push
imul
mov
xor
push
in
add
xchg
xchg
and
inc
adc
dec
addr16
inc
test
dec
mov
xchg
lods
mov
push
or
and
(bad)
dec
push
inc
mov
in
lea
cmps
sub
dec
in
pop
aaa
mov
fld
das
sub
xchg
fst
pop
mov
in
aaa
or
jae
(bad)
dec
sub
ins
inc
int3
push
xor
out
inc
hlt
jo
pop
add
sbb
fnstsw
pop
loopne
pop
sbb
pop
and
in
or
pop
cmp
cmp
cld
xchg
retf
data16
or
sub
jg
mov
lds
nop
cld
push
bound
gs
jns
dec
jge
mov
sbb
imul
mov
sbb
push
jb
mov
cmp
stos
pop
sub
jmp
mov
ja
es
dec
pop
leave
ret
inc
mov
mov
push
pop
in
stos
pop
mov
shl
sub
sub
daa
(bad)
fdivr
pop
pop
stos
and
pop
clc
sub
inc
cli
jne
jbe
and
dec
mov
pop
pop
xor
adc
add
mov
mov
es
(bad)
xchg
xor
cmp
jl
xchg
inc
jp
call
dec
pop
dec
ret
mov
xchg
and
add
xchg
and
out
push
and
or
fimul
jnp
mov
or
out
xor
ret
das
sub
jmp
cmp
push
mov
movs
push
adc
(bad)
and
ds
rcl
add
sbb
ja
xor
and
inc
cmp
pop
and
leave
imul
pop
or
scas
mov
das
fcomp
out
xchg
push
adc
fs
mov
mov
cmp
ret
hlt
mov
inc
das
jbe
mov
mov
rcl
lock
clc
and
outs
lods
adc
fwait
push
pop
mov
aaa
repz
fistp
pop
inc
inc
lods
(bad)
(bad)
pop
push
out
mov
mov
cmp
xchg
sub
inc
mov
mov
or
or
cmp
mov
lds
imul
stc
jmp
outs
jmp
bound
sub
test
bound
test
dec
mov
fistp
pusha
sub
jno
imul
sbb
(bad)
(bad)
jl
inc
cs
mov
xchg
mov
fisttp
or
dec
inc
not
out
and
inc
dec
imul
sbb
xlat
xchg
push
sbb
cmp
lods
and
xor
call
push
xchg
adc
pop
pop
ret
xchg
inc
inc
mov
shl
(bad)
cmc
dec
fisubr
add
jb
push
fwait
in
fnsave
sbb
mov
fsubr
mov
mov
jbe
clc
sub
cmc
inc
ss
sbb
jge
dec
add
push
xchg
cmp
pop
lods
aas
cmp
dec
or
cli
or
xchg
cmp
dec
jp
lock
in
cs
les
jae
mov
sub
mov
aad
std
push
jg
add
jecxz
sub
adc
adc
aam
and
jp
into
ss
data16
add
mov
and
rcr
xor
pusha
jno
xlat
shr
sub
pop
sahf
stc
sub
rcl
aas
jle
mov
push
push
cmp
jge
aaa
aas
lahf
xchg
popf
cdq
loope
jo
jmp
div
dec
aad
out
sti
fild
lods
je
adc
jae
mov
push
mov
mov
pop
sub
or
cwde
dec
add
mov
adc
sbb
jo
dec
sahf
jmp
hlt
aam
mov
and
cmp
cmc
sbb
jae
adc
sahf
cmp
movaps
xlat
aas
retf
jp
fbld
mov
in
int
lods
push
ins
cmp
jmp
scas
mov
mov
stos
(bad)
xchg
popa
test
and
mov
sbb
pop
jp
xchg
ins
inc
or
push
and
pusha
stos
pushf
add
lea
and
iret
dec
fst
pop
(bad)
outs
jns
push
out
scas
xchg
sub
cmc
inc
mov
loop
scas
sub
dec
enter
cmp
pop
test
ds
jl
push
std
fcomp
imul
lds
dec
cmp
cmps
or
inc
sub
push
mov
mov
ds
pop
sub
cmp
mov
out
sbb
pop
cmp
xchg
pop
xor
cmp
mov
repz
out
aam
mov
sub
outs
mov
cmp
inc
mov
add
int
retf
leave
iret
add
push
xchg
jae
out
mov
out
pop
pop
and
leave
test
std
in
jb
movs
pop
jl
js
xchg
aaa
out
cmp
xor
jg
push
lock
push
add
mov
push
jbe
adc
clc
dec
jle
push
and
or
lea
retf
sub
leave
mov
jo
lahf
call
addr16
lock
sub
and
aaa
repz
sti
inc
test
mov
nop
ins
loopne
aaa
pop
nop
icebp
das
hlt
iret
cmp
lds
int
sbb
test
ja
inc
retf
loopne
dec
jmp
and
pop
inc
icebp
and
jmp
fild
outs
add
pushf
les
adc
ins
and
sub
lahf
adc
xchg
test
repz
mov
xor
hlt
lods
dec
cmp
sahf
popa
jmp
(bad)
daa
add
stc
retf
js
repnz
sbb
sub
hlt
cmp
and
(bad)
popa
repz
adc
lods
fadd
enter
mov
push
cpuid
adc
pop
imul
cmps
mov
mov
cld
outs
(bad)
push
sub
lea
jo
mov
clc
and
fcomip
or
in
pop
push
ss
ss
sbb
addr16
paddsw
pop
fs
adc
mov
mov
push
jno
jge
cmp
fst
inc
out
les
xor
stc
rcr
lds
pop
add
mov
xchg
in
fsub
dec
xor
(bad)
scas
out
jo
rcr
lods
adc
ins
mov
fcomi
jp
and
dec
push
xor
sub
daa
mov
retf
das
popa
xlat
sub
mov
mov
lahf
scas
mul
cmp
xor
mov
lods
ins
and
pop
inc
xor
mov
outs
inc
or
pop
rcr
push
mov
test
mov
jmp
jae
test
aas
test
(bad)
jecxz
stos
pop
cmp
les
stos
mov
ret
sub
cli
jns
push
mov
cmp
jp
es
(bad)
push
div
mov
cli
xor
ret
and
add
lea
push
mov
mov
adc
jmp
mov
and
adc
xchg
push
lock
ds
nop
nop
into
into
lods
fadd
into
mul
sti
inc
and
test
mov
call
fwait
dec
cmp
xor
push
ret
jg
ror
int
test
aad
je
mov
xchg
sub
test
leave
push
popf
out
ja
sub
dec
sub
dec
xlat
cmps
mov
mov
cld
and
and
cmp
imul
inc
stc
push
inc
hlt
pushf
push
test
nop
les
call
adc
movs
push
(bad)
pushf
stos
mov
add
mov
add
mov
dec
or
je
sub
push
movs
mov
(bad)
stos
leave
fisub
xor
int3
sub
dec
mov
test
lds
es
and
mov
mov
inc
and
adc
mov
ret
xchg
dec
pop
popa
xor
adc
jns
xchg
shl
aas
out
sbb
ret
cdq
aad
jmp
loop
mov
inc
jmp
sbb
lock
pusha
call
in
mov
leave
sub
mov
sbb
pop
inc
ja
jb
iret
sub
sbb
push
xor
or
cli
das
or
std
shl
push
repz
push
pop
adc
lahf
jae
movs
mov
sahf
sbb
ret
std
add
pop
ins
push
movs
sub
cs
or
jae
(bad)
cmp
into
jmp
retf
or
xchg
aam
imul
and
dec
jns
stos
adc
leave
pop
ret
mov
nop
sbb
(bad)
sbb
sub
jmp
cmp
hlt
and
out
in
sub
jno
adc
sub
out
je
sbb
rcr
pop
xor
jmp
movs
int3
std
imul
xor
mov
das
mov
test
mov
push
in
push
loopne
popf
xor
aam
mov
pusha
mov
push
adc
in
mov
fnop
(bad)
mov
stos
adc
lods
leave
adc
xchg
(bad)
mov
repz
jmp
sub
jmp
repnz
(bad)
and
push
sbb
mov
dec
(bad)
inc
(bad)
loopne
xchg
retf
jecxz
pop
repz
add
jo
xor
pop
sub
ins
jecxz
dec
pop
aaa
push
jns
add
mov
lods
push
ficomp
sbb
mov
nop
inc
in
pop
fisub
aaa
sti
xchg
gs
jnp
pop
sub
test
jmp
push
das
adc
loopne
mov
ja
fwait
jae
out
(bad)
mov
pushf
dec
mov
jp
stos
add
pop
lods
or
cmp
sub
mov
rol
ss
fst
sub
ror
sub
pushf
mov
rcl
sahf
stos
jge
mov
retf
aad
push
or
or
lahf
push
ror
mov
sub
pop
cmp
(bad)
sar
dec
mov
rcl
cli
sub
call
xchg
gs
push
lods
stc
scas
test
jg
je
and
test
jl
enter
inc
test
les
sub
jae
mov
mov
mov
xor
xchg
bound
and
je
out
xchg
mov
push
mov
pusha
inc
out
push
arpl
outs
lods
outs
adc
mov
jmp
sub
push
push
imul
adc
and
loop
stos
into
rcl
jg
xchg
sub
in
add
mov
push
mov
lock
in
les
mul
add
(bad)
sub
dec
sub
into
daa
cmc
jmp
push
mov
jle
sub
and
xor
out
jg
and
test
frstor
dec
in
mov
cmp
mov
or
cmp
(bad)
xor
lahf
xor
dec
or
aaa
adc
int
mov
fmul
add
popf
jns
cwde
add
sbb
push
push
jge
push
mov
sub
punpckhbw
arpl
retf
cmp
punpckhbw
popf
adc
push
test
pop
jns
popf
out
lds
(bad)
sbb
lea
or
xor
push
add
jae
jp
aam
jle
and
gs
dec
ds
in
out
inc
mov
into
dec
(bad)
out
mov
or
pusha
cmp
repz
or
in
xor
sub
pushf
out
(bad)
icebp
xchg
fadd
dec
mov
inc
pop
iret
(bad)
(bad)
fwait
rcl
pop
xor
jmp
xor
xchg
sbb
pusha
mov
ins
add
pop
jl
jb
clc
dec
retf
pop
pop
pop
ins
cmp
ds
inc
or
leave
stc
fst
jns
or
jle
jnp
jns
push
int3
xor
cmp
ja
retf
jo
idiv
and
jbe
loopne
out
push
aas
pushf
cld
mov
pop
ins
sbb
call
sub
jmp
ss
xor
in
mov
ficom
mov
call
loop
or
test
mov
popf
(bad)
repz
scas
(bad)
in
cmc
dec
jge
in
shl
or
fild
inc
mov
pop
and
mov
or
scas
sti
sbb
add
dec
push
adc
dec
inc
sub
dec
pop
cmp
inc
pop
adc
std
lds
mov
call
movs
xchg
jg
(bad)
pop
sbb
retf
or
das
mov
hlt
mov
mov
shr
jecxz
xor
lods
mov
ss
inc
ds
loop
popa
scas
mov
and
enter
ret
psrad
pop
rcr
push
fdivr
sbb
inc
outs
scas
pop
mov
(bad)
pop
xchg
pop
in
les
outs
cmps
lahf
sti
cmp
enter
or
icebp
int3
fsub
outs
mov
cs
jle
shl
adc
push
push
push
pop
sbb
cld
mov
js
add
dec
jns
out
mov
xor
or
enter
mov
cmp
mov
xchg
and
jle
mov
loope
and
fist
push
test
cwde
imul
nop
xchg
bound
xchg
cmove
mov
retf
pusha
rcl
dec
fisub
fs
gs
pop
xor
pusha
xchg
pop
hlt
cmp
es
and
fs
sbb
add
add
ja
popa
mov
int3
cmp
push
movs
and
cmp
xor
push
dec
sbb
dec
std
rcl
pop
or
inc
test
dec
test
popa
cmp
add
retf
popf
(bad)
mov
sbb
push
(bad)
push
adc
idiv
mov
(bad)
sbb
movntq
aas
cmp
mov
jnp
es
jbe
sbb
adc
hlt
adc
test
lahf
add
lock
xor
jg
or
jle
ins
(bad)
cmp
js
stos
aad
outs
repz
add
and
and
into
ror
(bad)
push
or
fdivr
(bad)
sub
ins
pop
in
and
pop
mov
cmc
mov
adc
popf
imul
xlat
or
fidivr
int3
aaa
sub
addr16
(bad)
mov
out
adc
(bad)
mov
fcomp
rcl
add
out
xchg
(bad)
fbld
call
lods
pop
mul
mov
adc
stc
push
sbb
inc
cld
and
pop
mov
icebp
in
cmp
fxch
sub
xchg
sub
mov
shl
mov
retf
(bad)
inc
movs
cwde
inc
add
jae
mov
sbb
jo
mov
adc
loop
mov
pop
mov
std
pushf
aaa
addr16
sbb
lods
call
sbb
or
inc
or
xchg
sbb
xchg
lods
adc
bound
sbb
sbb
sbb
aas
mov
(bad)
push
adc
sub
sar
sub
mov
stc
cmp
xor
sti
rcl
in
or
(bad)
mov
adc
fs
pop
xor
push
fild
inc
add
mov
call
call
pop
push
and
xchg
dec
scas
icebp
sbb
pop
cld
push
mov
push
mov
rcl
je
pop
mov
sbb
jae
and
push
or
add
jge
xor
aad
adc
dec
sub
push
cmps
ror
push
pop
mov
stos
jo
jmp
aas
fadd
mov
je
movs
pop
clc
cld
out
stos
pusha
push
adc
mov
cmps
(bad)
pushf
mov
ret
sub
pop
inc
arpl
shl
retf
icebp
aaa
xchg
fdivr
push
repnz
es
inc
sub
loop
mul
cmp
fimul
jno
mov
test
sbb
cmp
enter
outs
adc
les
push
icebp
es
and
fisttp
arpl
outs
pop
pusha
jp
pop
and
mov
movs
ror
mov
loopne
mov
arpl
sbb
cmp
jo
ds
lahf
pop
mov
stos
(bad)
ror
pop
aas
lahf
xor
sti
(bad)
stos
adc
push
xchg
push
ret
inc
mov
int
and
int
adc
mov
add
popa
push
mov
xchg
call
adc
push
ret
lea
and
rcr
or
push
push
repnz
leave
pop
or
pop
xor
std
shl
aad
shl
mov
inc
into
in
cmc
loope
pop
pop
cld
cwde
dec
(bad)
cmc
(bad)
lea
push
mov
push
aam
xchg
sbb
aad
xor
push
push
push
inc
xchg
xchg
pop
daa
and
out
jmp
es
xor
push
cli
ret
xchg
enter
jne
ror
adc
mov
push
pop
hlt
stos
pop
jmp
jmp
cwde
xlat
xchg
adc
adc
sar
jo
stos
xor
jmp
cmp
push
xor
adc
mov
test
hlt
xchg
inc
jmp
add
out
xor
(bad)
jbe
out
fist
inc
repnz
xchg
sbb
hlt
daa
out
or
daa
ins
lods
push
sbb
or
repz
mov
xchg
cli
mov
mov
sbb
test
neg
mov
push
jmp
pop
popa
xlat
mov
lock
scas
push
(bad)
imul
(bad)
xchg
test
(bad)
pop
cmp
out
inc
sub
xor
cli
mov
leave
rcl
(bad)
or
clc
gs
inc
mov
scas
mov
add
or
ret
jmp
repnz
fwait
push
fsubr
sub
test
mov
jmp
push
bound
(bad)
fdivr
xchg
cdq
jmp
fldcw
fst
in
xchg
adc
jo
shr
push
xlat
adc
fadd
push
call
pop
fst
pop
mov
icebp
push
mov
add
cmc
stc
or
mov
ret
xchg
adc
rcr
stos
push
nop
lods
sar
push
mov
iret
mov
in
popa
add
ror
xchg
mov
add
add
les
xchg
jne
mov
vmwrite
shr
pop
sub
outs
les
fidivr
fwait
out
fs
inc
clc
or
loop
loopne
sub
or
xor
call
(bad)
shl
in
jmp
(bad)
ret
fwait
iret
shr
jb
std
xlat
xlat
mov
jmp
(bad)
push
sub
or
test
shr
out
test
push
xor
xchg
cmp
(bad)
cld
mov
xchg
mov
pop
in
xor
dec
inc
(bad)
ins
div
pop
fadd
mov
xor
scas
push
mov
inc
jg
scas
test
hlt
(bad)
in
(bad)
out
or
cli
xchg
inc
jae
sahf
dec
mov
push
sub
mov
fs
lods
rol
lds
scas
add
cld
and
mov
or
adc
cmc
scas
jg
imul
pushf
mov
pmaddwd
push
lods
xchg
sub
(bad)
and
(bad)
mov
mov
xor
std
addr16
sub
stos
sbb
xchg
div
or
jg
inc
fcom
jmp
pop
std
adc
mov
inc
imul
(bad)
pop
xor
jno
xor
push
jno
pusha
mov
cmp
pop
hlt
aaa
mov
sub
push
or
adc
xor
leave
loop
xchg
fnstenv
dec
(bad)
mov
lods
leave
dec
dec
mov
add
mov
add
scas
fistp
call
jp
mov
cmp
pop
inc
out
test
outs
mov
stc
add
pusha
ret
push
mov
dec
or
pop
add
test
pop
adc
cmps
mov
sbb
add
and
mov
jne
mov
lods
inc
out
sub
and
call
cmp
or
sahf
mov
ret
adc
(bad)
in
stos
mov
xchg
fiadd
or
pop
mov
aaa
cmp
test
xchg
push
adc
mov
mov
adc
test
fucomp
mov
xor
dec
xchg
out
mov
es
pop
fcomi
movs
and
mov
pop
(bad)
cld
call
scas
in
and
and
cmps
sahf
int
sbb
sub
dec
cmps
nop
push
mov
in
or
sub
cmc
and
xchg
shl
dec
out
jmp
or
cmp
adc
add
add
jmp
pop
lods
iret
adc
cdq
push
das
cmps
jl
xchg
mov
ins
inc
std
fdiv
retw
inc
pop
or
pushf
adc
mov
push
mov
retf
adc
and
daa
arpl
(bad)
mov
or
nop
ret
nop
push
mov
test
or
in
push
inc
cld
lahf
je
imul
xchg
inc
jmp
push
mov
sbb
retf
stos
add
fsubr
retf
test
loope
mov
jne
sub
or
repnz
call
mov
jge
mov
add
jge
out
mov
in
out
or
ret
cmp
jb
add
xchg
jge
add
mov
(bad)
jbe
loop
icebp
or
dec
jnp
and
mov
(bad)
bound
leave
inc
add
cmp
inc
mov
(bad)
fwait
in
inc
out
mov
jecxz
out
cwde
in
stos
pop
xor
bound
lahf
mov
inc
add
retf
es
aam
imul
fidivr
add
xor
xchg
add
and
fsubr
repnz
rol
jecxz
inc
add
loopne
mov
or
mov
aad
sbb
jnp
cli
jmp
(bad)
xchg
ja
xchg
fwait
or
jle
cli
or
xchg
into
and
sub
and
mov
and
mov
ss
pop
seto
cld
inc
in
push
pop
inc
ins
xor
retf
inc
adc
adc
or
stc
shl
enter
jno
outs
ret
ds
scas
std
(bad)
jle
xchg
arpl
aaa
jo
loop
inc
ror
inc
push
push
call
shr
inc
es
lods
xchg
dec
lock
sbb
dec
cli
pop
nop
mov
push
push
xchg
cmps
retf
lods
adc
inc
push
ds
xor
mov
or
mov
(bad)
dec
fild
push
loope
jnp
out
movs
pop
stos
xchg
jp
pop
inc
jo
xor
les
xor
push
repnz
sbb
xor
dec
nop
clc
xor
xchg
aam
and
mov
jle
or
in
pop
lds
in
popf
mov
and
imul
pop
mov
adc
js
and
cmc
push
mov
es
inc
push
jle
pop
add
repz
pinsrw
push
int
loope
stos
xor
sahf
ss
xor
in
rcl
sahf
add
xor
js
pop
or
mov
cs
pop
cmp
add
mov
(bad)
push
stos
fimul
fidivr
cmp
mov
in
dec
movs
sbb
sub
or
movs
mov
or
pop
aaa
mov
jge
push
data16
mov
retf
jb
int3
rol
dec
sbb
movs
sub
inc
cmp
xchg
add
ins
xor
sbb
jecxz
inc
sub
rcl
pop
stc
push
jmp
int3
mov
rcr
xlat
or
cmp
fstp
fwait
adc
sub
imul
jbe
cmps
mov
repz
jmp
ret
xchg
ja
out
nop
cmps
push
mov
jns
cmp
mov
aaa
(bad)
lods
into
inc
cld
imul
ins
cmp
pop
dec
mov
test
sub
out
xor
call
fsub
fdivrp
aaa
or
addr16
aad
mov
add
fdiv
(bad)
mov
movs
lods
mov
sub
mov
inc
jae
jle
out
dec
dec
pop
jae
shl
out
and
dec
add
push
scas
stc
call
push
adc
cmp
mov
cmp
js
fcmovb
std
sbb
fs
pop
mov
hlt
repnz
arpl
dec
test
and
xor
jns
iret
sar
lds
mov
cwde
fnsave
popf
ficomp
sub
sub
ins
fsubr
pop
das
test
mov
stos
push
inc
xchg
pop
sbb
sti
xor
imul
daa
clc
rcr
cli
sbb
mov
mov
and
add
mov
test
pushf
jns
sub
dec
mov
fidivr
dec
(bad)
ss
clc
or
push
mov
ret
jb
in
xor
jno
aad
inc
fs
adc
arpl
scas
js
or
xchg
adc
jmp
cmp
push
pop
inc
fiadd
xor
ins
fs
sbb
or
in
xor
push
pop
fistp
jg
loop
add
and
inc
xor
lds
xor
mov
(bad)
jmp
add
push
scas
mov
fiadd
mov
pop
xor
push
loope
dec
ins
cmp
mov
cli
into
mov
test
mov
adc
call
sub
or
shl
out
cdq
xor
scas
mov
call
popa
inc
stos
cmp
push
and
push
jo
pusha
and
mov
(bad)
inc
not
jnp
mov
push
pop
arpl
pop
mov
inc
(bad)
bound
mov
and
test
cs
aaa
xchg
das
ds
retf
cld
xor
push
mov
inc
(bad)
addr16
xor
ja
dec
xor
xor
mov
cmovns
aad
xchg
mov
sub
sbb
push
test
pop
mov
pop
add
jg
xor
push
out
test
xor
xor
add
arpl
xchg
jecxz
repnz
pop
xchg
and
outs
and
stc
adc
add
push
loope
and
aad
lods
popa
add
(bad)
fwait
mov
sbb
scas
ins
jne
imul
sub
xor
stos
or
int3
adc
jno
sub
hlt
jmp
or
sbb
jo
xchg
loope
mov
xor
ja
pop
xor
sub
xor
push
lock
add
ins
int
call
add
jae
lds
jne
mov
popf
add
jmp
cmp
shr
out
xchg
xor
mov
or
repnz
out
dec
ret
scas
or
dec
or
jb
popa
cmc
inc
add
(bad)
nop
jmp
in
push
imul
push
fcomp
ins
inc
or
xor
add
fsubr
out
mov
aaa
in
int
(bad)
pop
xchg
in
adc
aaa
pusha
push
nop
or
pop
fld
test
mov
xchg
hlt
or
or
int3
(bad)
ret
sbb
or
and
jge
sar
ins
jno
clc
rol
sub
jle
jecxz
ror
mov
outs
mov
add
mov
jg
mov
mov
sbb
pop
icebp
sbb
sti
pop
pop
add
dec
mov
lds
jb
push
fdiv
es
push
popf
mov
sub
jle
(bad)
(bad)
cmp
shl
xchg
sar
push
retf
or
enter
clc
sbb
mov
dec
stc
aam
bound
or
mov
push
movs
outs
cwde
nop
xchg
sub
jns
rcr
enter
adc
scas
pop
inc
mov
cmc
dec
cmp
fmul
pop
jno
neg
lods
push
aas
jne
in
int3
pop
cs
out
cmc
in
push
push
test
pop
mov
xchg
fsub
fimul
out
inc
xchg
xchg
jl
fidivr
mov
loopne
sbb
hlt
jecxz
cmc
ja
mov
gs
sub
ins
adc
xor
dec
adc
mov
add
enter
ret
mov
cmc
inc
fidiv
push
jno
mov
mov
inc
add
cwde
jns
ds
sahf
test
jl
push
add
xchg
retf
mov
rcl
repz
call
outs
das
push
rol
dec
inc
iret
xor
ins
mov
xchg
outs
push
stc
add
xor
js
inc
jae
push
mov
leave
pop
leave
mov
jbe
ret
sbb
push
mov
lods
inc
sub
into
nop
aas
mov
sti
pop
fcmovb
fidivr
add
dec
outs
fimul
nop
stc
bound
mov
in
jmp
mov
xlat
jae
hlt
lea
stc
fst
ins
xchg
xchg
mov
and
cmc
inc
sti
sbb
popa
ins
fidiv
fist
xor
ja
and
and
inc
inc
outs
cdq
and
and
push
arpl
mov
imul
and
add
int
stc
mov
dec
lahf
sub
push
and
dec
add
inc
push
ret
imul
xchg
jae
icebp
loop
fwait
pushf
pop
ror
cs
scas
cmp
mov
xchg
jns
push
inc
xor
dec
inc
xlat
scas
pop
dec
imul
shr
and
pop
or
inc
add
mov
dec
sub
arpl
mov
pop
dec
(bad)
call
leave
fdivr
inc
inc
iret
lea
outs
icebp
pop
mov
fwait
hlt
sbb
push
xchg
adc
enter
xor
push
xchg
and
mov
add
mov
lods
aad
adc
loope
ss
aam
not
and
cmps
dec
mov
daa
and
std
or
into
sub
mov
inc
into
pop
push
cmps
(bad)
shr
ss
mov
xchg
pop
leave
mov
add
push
push
ficomp
lock
pop
fidiv
int
inc
repz
enter
inc
fwait
movs
std
xor
add
test
inc
or
and
or
push
sti
or
cli
or
stos
ins
mov
mov
mov
xchg
or
cmp
jmp
(bad)
mov
loope
add
cdq
sbb
aad
mov
xchg
int3
out
addr16
fstp
(bad)
or
jo
pop
(bad)
sub
mov
mov
mov
cmp
add
fcomp
xchg
inc
push
sub
enter
xchg
movs
stos
pop
cmps
cmps
loop
loop
adc
dec
xchg
mov
jg
jle
sti
xchg
jmp
addr16
icebp
nop
cwde
adc
(bad)
movs
xor
pop
iret
sub
mov
push
inc
mov
out
movs
pop
pop
das
iret
sub
cmp
cdq
cdq
xor
out
add
pop
mov
iret
int3
or
inc
inc
enter
jle
xor
sahf
ret
lock
xchg
retf
pop
out
or
xor
aam
adc
xor
and
adc
mov
jnp
imul
sub
mov
jb
jmp
retf
lahf
ds
mov
clc
jmp
and
test
sti
sub
mov
push
sbb
das
icebp
enter
ss
(bad)
pop
loopne
dec
test
cmps
and
outs
pop
xlat
or
iret
loopne
retf
cdq
inc
and
out
sbb
rol
mov
out
addr16
push
mov
movs
pop
mov
jno
int
jg
jno
dec
cwde
lods
int3
xor
out
test
(bad)
scas
inc
fild
pop
xchg
aas
mov
pop
push
das
call
mov
rol
in
inc
adc
push
(bad)
fwait
scas
mov
add
inc
xchg
sub
retf
pop
xchg
jp
sub
repz
xchg
ror
lds
ror
jecxz
xchg
xchg
popf
add
push
addr16
(bad)
xchg
jmp
es
fs
and
inc
xchg
cmp
mov
out
jbe
inc
cwde
leave
mov
mov
xchg
out
dec
sbb
adc
test
adc
jne
mov
bound
or
js
movs
jmp
pop
das
addr16
enter
call
inc
test
sar
sbb
inc
xor
mov
jne
ror
in
jmp
jl
mov
pop
pop
jg
int
inc
xchg
mov
stc
sahf
sbb
push
shr
ja
scas
dec
stc
out
sbb
shl
mov
cmp
repnz
lods
add
pushf
jns
sbb
jnp
nop
sbb
test
cmp
loop
xchg
mov
fs
dec
cmc
test
xchg
mov
adc
and
mov
push
lock
fidiv
jmp
sbb
push
fs
ds
test
movs
sub
or
or
and
jno
daa
mov
cld
mov
lock
fsubr
in
dec
mov
jecxz
sub
mov
add
out
sbb
ret
cmp
out
mov
add
adc
sbb
add
mov
sbb
test
loopne
push
dec
test
shr
scas
test
repz
push
dec
out
and
lock
cwde
jnp
pop
cmp
std
hlt
shl
or
outs
sahf
stos
std
loopne
jmp
shr
lea
add
mov
add
arpl
pop
jg
fbld
fidivr
loope
pop
(bad)
inc
stos
cmp
mov
jbe
arpl
pop
in
lock
pop
jb
cmps
xchg
push
cmp
test
jg
shl
cmps
lods
sar
cld
into
sub
dec
cld
xchg
pop
cmp
(bad)
push
dec
icebp
mov
int
cmp
adc
ret
and
push
retf
repnz
pop
aas
jg
adc
outs
jecxz
sub
das
mov
adc
or
(bad)
cmp
mov
and
cmps
(bad)
mov
shl
or
and
fcmovnbe
int3
gs
cmp
mov
jg
ficomp
mov
cmp
dec
shl
jae
aam
dec
loopne
add
mov
mov
in
adc
xchg
push
dec
xor
ss
ror
sbb
scas
mov
movs
jne
mov
sti
clc
xchg
bound
retf
hlt
dec
loop
mov
sbb
cmp
dec
call
ins
data16
push
inc
scas
push
sbb
out
pop
sbb
xor
das
ins
xchg
cmp
repnz
pop
dec
dec
mov
mov
paddsw
sbb
add
inc
addr16
jno
std
into
call
inc
mov
pusha
mov
sub
and
(bad)
movs
jmp
outs
leave
mov
ret
or
mov
lock
xor
stos
jmp
scas
bound
sbb
repnz
mov
mov
cmp
pop
sti
add
pushf
es
jge
fiadd
cld
dec
adc
dec
sbb
jo
call
mov
fdiv
leave
leave
mov
sub
sbb
xchg
sub
call
pop
inc
dec
pop
test
int3
xchg
adc
movs
sub
call
cmc
jle
out
and
mov
jne
lods
icebp
sbb
inc
shr
je
push
in
lahf
repz
sub
pop
mov
mov
clc
adc
cmp
mov
scas
(bad)
mov
pop
or
cmp
and
jae
test
dec
mov
pop
sbb
xchg
sub
jp
xchg
xlat
dec
in
sbb
fimul
mov
retf
(bad)
cmp
adc
sbb
in
adc
lods
push
mov
mov
or
pop
push
loopne
outs
dec
cmp
out
xor
xor
cli
ds
mov
ret
test
lock
popa
xchg
pop
pop
and
repz
sub
cmp
push
or
in
clc
dec
inc
sub
xchg
sub
and
pop
xor
pusha
aad
ins
xchg
inc
sub
pushf
jns
dec
in
pushw
adc
bound
or
sbb
in
push
mov
addr16
xlat
mov
mov
xchg
jo
sbb
rcl
xor
mov
dec
jbe
stos
xchg
add
nop
push
jb
mov
jb
adc
iret
retf
mov
outs
int
xchg
out
adc
pop
and
rol
add
ret
aam
sbb
inc
and
out
js
call
outs
add
jp
jge
(bad)
mov
jmp
hlt
ins
in
xchg
inc
and
cmp
sub
sbb
jae
lods
mov
ja
mov
dec
ds
in
ror
out
mov
ins
pop
push
(bad)
cmp
cmp
cmp
mov
not
mov
and
imul
jl
adc
add
add
and
ins
or
(bad)
cs
out
jno
jp
arpl
jnp
fist
push
cmps
cmc
call
inc
aas
push
lods
xor
and
inc
stc
js
inc
inc
iret
pop
mov
inc
repz
jnp
jp
or
lahf
shl
push
int3
sti
loopne
stc
movs
adc
xchg
cdq
cmp
test
cmc
and
pop
adc
cmps
loope
sub
cli
or
mov
fs
jle
fcom
pop
add
lods
(bad)
call
popf
mov
loope
cmp
push
dec
push
test
pushf
in
daa
and
inc
test
jge
jl
in
das
ins
mov
int
or
cmps
mov
jmp
nop
inc
pusha
adc
jno
push
popf
add
popa
ds
fisttp
or
(bad)
jmp
pop
jle
push
pop
movs
or
pop
xchg
adc
inc
ins
add
inc
repnz
mov
mov
dec
mov
sbb
bnd
pusha
inc
(bad)
movs
pusha
mov
into
push
pop
push
sbb
push
and
test
imul
mov
jno
adc
(bad)
add
stc
pop
and
(bad)
jle
pop
sub
adc
stos
add
repz
mov
outs
(bad)
adc
mov
xchg
add
ds
jno
sub
push
jns
adc
imul
ds
mov
and
jbe
daa
mov
fsubr
sub
ins
push
inc
pushf
push
outs
ret
lods
mov
iret
pop
pop
xchg
cmps
test
repnz
xchg
es
jno
clc
mov
sub
pop
movs
leave
xchg
and
adc
sub
dec
aad
pushf
add
xor
sti
mov
mov
inc
jecxz
sbb
push
in
mov
jb
mov
sub
bound
adc
or
xchg
js
cmps
cmp
cwde
inc
dec
cmps
pop
(bad)
and
jnp
std
fdecstp
data16
call
pop
adc
nop
(bad)
aam
aas
add
and
bound
cld
dec
mov
lds
dec
aad
stos
mov
add
das
push
cmps
xchg
aad
lds
jno
rol
or
sub
adc
sub
or
aas
pop
xor
popf
cs
dec
push
lods
imul
cmp
push
sbb
test
mov
jmp
mov
loop
mov
mov
test
dec
sub
push
mov
fs
daa
push
dec
sub
outs
arpl
cmp
pop
mov
es
and
call
fnstcw
push
lods
dec
dec
add
pushf
xor
iret
ret
into
adc
pop
inc
cmp
mov
xor
mov
stos
jo
lahf
and
or
sub
add
adc
xor
xor
dec
pop
lahf
std
adc
in
mov
out
ret
cmps
cmp
cwde
addr16
mov
imul
ret
push
inc
jg
cmp
sti
or
test
push
cmc
inc
push
jo
dec
sub
das
sbb
sub
or
adc
out
cld
retf
into
loope
leave
adc
dec
mov
adc
movs
out
mov
fldenv
(bad)
mov
mov
cmp
sub
jne
push
push
mov
inc
or
in
in
test
mov
iret
mov
push
jg
or
stos
jnp
jecxz
popf
mov
add
daa
cmps
pop
ins
pop
js
ins
mov
jp
sti
nop
das
cld
aaa
push
push
mov
pop
leave
pushf
mov
sbb
das
cmp
jae
fs
mov
sbb
js
mov
loope
add
mov
call
out
adc
push
pop
add
aam
push
pop
and
scas
jae
or
xor
or
sar
pop
mov
imul
and
fnstsw
jle
xchg
fadd
cmp
add
mov
sbb
hlt
rcr
add
push
and
popa
pop
test
sub
sti
popf
xchg
pop
fisub
sbb
call
adc
jae
test
shl
bound
fcom
mov
repnz
push
push
pop
push
arpl
popa
sub
data16
xor
aam
mov
daa
xor
adc
cmps
les
ror
aam
push
jbe
mov
xor
ror
push
dec
psubd
push
add
scas
loopne
inc
movs
mov
stos
aad
cmp
add
xlat
jno
xchg
jl
jg
or
test
test
ror
mov
cmps
daa
push
inc
add
call
mov
adc
sar
imul
cmp
retf
test
loop
test
adc
cmps
aam
pop
adc
push
test
cmp
sar
lods
in
lahf
and
lahf
push
call
cld
rol
jge
ins
hlt
xlat
cmp
mov
mov
sub
mov
js
jno
lds
fisttp
xchg
lods
test
push
lahf
or
cli
dec
jge
bound
test
sahf
sahf
ss
ja
jl
pop
mov
lahf
jne
ss
(bad)
mov
ret
shr
aam
push
data16
sbb
sahf
ret
retf
repnz
mov
mov
mov
aad
add
and
dec
dec
ins
adc
mov
mov
ret
cmp
push
rcl
dec
lods
cs
adc
imul
int
push
jae
shr
test
sub
mov
popa
dec
add
add
push
or
push
mov
xchg
push
test
bnd
inc
outs
imul
in
xchg
test
jno
xor
int3
dec
xchg
imul
jecxz
(bad)
sbb
adc
jae
add
dec
cmp
pop
nop
push
cmps
outs
mov
mov
dec
sbb
dec
inc
sbb
adc
push
xor
add
push
add
sbb
mov
loop
mov
leave
rcl
stos
inc
shr
sbb
sub
sbb
loop
aaa
mov
nop
sbb
and
or
xlat
outs
xor
add
mov
pusha
gs
or
dec
lods
cwde
arpl
inc
fidivr
mov
dec
jae
add
sub
les
inc
mov
xor
dec
and
enter
mov
cdq
repz
pop
inc
xchg
fcmovne
lock
cmp
imul
not
popf
test
pop
cmp
in
les
jmp
mov
dec
cmp
sbb
cmp
xchg
es
cdq
xchg
sti
add
scas
in
lods
aas
imul
pushf
and
cmp
out
push
fwait
add
mov
(bad)
scas
adc
mov
dec
test
dec
push
sbb
shr
les
jns
dec
cdq
cmps
ja
scas
adc
cdq
out
outs
test
xor
inc
adc
loopne
pop
shl
fwait
mov
jne
enter
js
and
call
inc
dec
xor
jmp
pop
in
push
mov
cld
shr
or
sbb
or
jno
mov
outs
and
aaa
lods
xchg
pop
ficomp
jno
inc
push
stos
outs
pop
int
cmps
pop
inc
mov
lods
push
jne
pop
xchg
out
xchg
inc
pop
dec
dec
jg
ret
sbb
adc
stos
sbb
pusha
fnsave
jle
xor
sahf
cwde
add
inc
adc
jnp
leave
sbb
cmp
sub
stc
hlt
ss
jl
jo
xlat
inc
into
and
xchg
jmp
stc
cmc
and
and
loop
outs
pop
jo
cli
xchg
pop
xchg
(bad)
cmp
not
popa
popf
sub
mov
clc
jae
jecxz
or
movs
js
fdivr
push
cmp
jnp
add
dec
mov
pop
shl
xor
call
rcl
retf
xor
nop
icebp
pusha
scas
ror
xchg
repz
sar
pop
add
mov
das
or
cmp
rol
test
cmp
pop
cmc
dec
jb
outs
(bad)
faddp
in
pusha
sub
push
inc
cmc
push
(bad)
sub
(bad)
fdiv
adc
pop
xchg
cmps
in
ret
xor
fsub
cmp
mov
or
in
cmp
ins
add
cwde
push
stos
and
scas
sub
outs
adc
cmp
hlt
pop
mov
push
adc
xchg
nop
outs
mov
sbb
pop
call
js
inc
pop
dec
pop
jnp
jns
std
sti
ret
dec
xchg
jb
and
inc
retf
gs
leave
cmp
fs
or
or
and
shl
out
out
push
mov
mov
mov
mov
fimul
jp
scas
pop
cmps
cmps
mov
sar
mov
adc
lds
jno
mov
dec
dec
pop
mov
out
xchg
sub
mov
(bad)
sbb
dec
jns
arpl
std
mov
lahf
je
xchg
mov
mov
inc
adc
xchg
lock
sbb
lock
mov
popa
sub
add
push
jne
in
mov
lock
sub
jnp
jmp
jnp
push
not
pop
adc
fsub
ins
jnp
ins
fwait
stos
xor
push
stos
mov
(bad)
test
(bad)
pop
ja
retf
js
imul
jmp
inc
loope
and
pop
vpunpckhbw
pop
pop
xor
push
lds
or
mov
cli
xchg
xchg
inc
jp
into
sub
jb
popa
dec
mov
add
add
out
mov
call
inc
and
jbe
outs
jbe
js
outs
(bad)
bound
cmps
retf
pop
xor
dec
jbe
rcr
in
stc
into
or
xchg
push
dec
mov
psignd
and
dec
and
cmp
(bad)
int
jb
or
mov
outs
sbb
loopne
nop
fisub
xchg
stos
xchg
and
ret
xor
je
push
shl
popa
fiadd
dec
mov
add
scas
mov
jbe
add
shl
xor
dec
pop
pop
xchg
fs
ret
pop
cmps
loopne
fwait
pop
sub
pushf
xchg
test
cmp
sub
lock
mov
pop
dec
dec
add
add
jae
repnz
mov
or
in
in
hlt
ins
and
pop
das
ror
in
xor
lahf
xchg
inc
ja
(bad)
in
mov
repz
adc
add
ror
xchg
or
mov
jl
ins
(bad)
jo
fs
xchg
jmp
dec
jg
pop
imul
aaa
push
xor
mov
and
cmp
int
sub
mov
ficom
xchg
shl
leave
cmp
cmp
jl
ficom
lahf
fnstsw
pop
or
(bad)
fs
ds
push
jae
mov
jecxz
inc
xchg
pop
add
hlt
xrelease
stos
(bad)
lock
pop
xchg
mov
push
fdiv
sbb
xchg
adc
mov
pop
push
out
mov
cmp
sub
(bad)
push
add
cmp
sbb
dec
dec
sbb
enter
sahf
push
(bad)
retf
push
xchg
test
cmp
out
rcl
(bad)
push
sbb
sub
(bad)
repnz
pop
shr
pop
movs
inc
cmp
jmp
xor
sub
ds
or
les
jbe
mov
or
popa
sbb
push
loope
lea
sahf
xchg
mov
mov
cmp
(bad)
je
cld
shl
das
mov
dec
cmc
loope
lock
popa
bound
call
hlt
pop
cli
sbb
sbb
gs
add
fistp
rep
sbb
mov
stos
push
leave
xlat
and
fdivrp
addr16
push
xchg
ss
inc
pop
and
pop
dec
inc
jg
pop
pop
cmp
loop
in
imul
inc
xchg
shr
ror
int3
cmp
test
pop
xchg
pop
add
popa
sbb
stc
mov
scas
pop
inc
pushf
add
xchg
or
pop
popa
or
xchg
sbb
sub
mov
sub
jg
add
or
dec
jp
cmp
sub
out
loopne
(bad)
(bad)
out
push
scas
loop
mov
popf
xchg
pop
or
or
stos
and
test
les
jmp
ja
ins
aam
sub
ss
mov
fmul
(bad)
cmps
hlt
mov
aas
dec
add
and
iret
retf
jmp
mov
cmp
mov
ss
ja
mov
push
enter
in
ftst
mov
jmp
pop
scas
mov
(bad)
jo
jb
(bad)
daa
outs
mov
inc
dec
(bad)
leave
or
xor
or
test
inc
(bad)
sbb
scas
mov
dec
cmovo
pusha
pop
jl
jo
mov
in
test
(bad)
push
ret
push
dec
cmp
add
cld
addr16
xor
mov
jne
bnd
mov
mov
loop
and
shr
mov
add
mov
sbb
lods
sbb
fisub
(bad)
in
scas
aam
or
out
aaa
clc
add
cmps
xlat
xchg
clc
xchg
aaa
xchg
ss
idiv
sbb
jo
lods
push
cmp
stos
xchg
adc
out
lahf
and
retf
jmp
or
mov
jne
aad
retf
fcom
or
call
jp
arpl
mov
rol
xchg
hlt
ss
inc
dec
repz
jmp
stc
add
xchg
loop
out
jo
dec
lds
cmp
or
aas
jg
inc
mov
ret
mov
dec
sahf
movs
ror
sar
pop
imul
scas
stos
push
shl
stos
cli
rol
xor
mov
push
imul
je
test
jg
retf
ja
push
jp
addr16
mov
lea
or
jae
popa
push
push
add
test
es
outs
std
xor
hlt
push
call
jnp
lea
pop
mov
pop
sbb
or
jb
push
dec
mov
cmps
movs
mov
mov
jns
sar
mov
loop
enter
(bad)
fiadd
xor
dec
xchg
in
jge
xor
lods
aam
jg
popa
add
sar
cmp
xchg
sub
sbb
jne
pop
cvtps2pi
xchg
les
xor
(bad)
call
add
shl
movs
xor
sbb
ss
lods
mov
pusha
jle
mov
pop
push
outs
(bad)
stos
lahf
push
out
sub
das
icebp
push
cwde
rcl
mov
ret
ret
ja
jo
(bad)
mov
mov
in
out
ror
add
mov
sbb
sbb
cwde
pop
push
shl
mov
jmp
test
xchg
or
mov
add
dec
retf
cmc
or
shl
js
xor
dec
in
jge
mov
ins
ins
dec
mov
jl
lds
inc
ins
adc
cmp
add
xchg
add
fcom
mov
in
xor
nop
setb
cmc
inc
or
rol
cmp
bound
xor
xchg
mov
addr16
ins
jno
into
xor
pop
and
out
push
add
push
aam
ficom
xchg
xor
in
mov
imul
repz
inc
sbb
ins
sahf
mov
xor
sub
mov
sbb
test
sub
inc
fidiv
fist
(bad)
pop
jae
dec
sub
sbb
arpl
(bad)
mov
iret
mov
ins
jmp
mov
jmp
call
mov
and
(bad)
in
cdq
cwde
inc
aam
inc
gs
cld
call
in
repz
mov
cmps
and
sub
pop
cld
adc
inc
xchg
dec
imul
or
inc
fdivr
push
sbb
xor
pop
cli
push
adc
and
inc
cs
movs
push
mov
call
enter
fstp
pop
sub
mov
push
movs
es
pop
gs
inc
popa
in
sub
movs
cwde
mov
mov
retf
sbb
jmp
ins
add
loope
sub
xor
ja
in
sahf
dec
lods
dec
mov
jne
fild
cmp
(bad)
call
dec
in
xor
ret
dec
sbb
scas
add
push
nop
pop
(bad)
data16
inc
add
movs
ficomp
or
std
pop
leave
jg
enter
push
in
gs
loop
xor
aad
mov
icebp
call
push
push
(bad)
nop
outs
pusha
pop
movs
pop
push
fidiv
inc
js
std
push
sbb
pop
outs
ins
mov
push
sbb
mov
sbb
mov
outs
fstp
xor
jg
cmps
mov
dec
test
pop
sbb
cmps
clc
pushf
xchg
mov
and
out
push
mov
cmps
sub
fwait
push
add
xor
add
out
mov
jno
mov
scas
adc
adc
out
mov
inc
pop
int
data16
outs
xor
mov
cs
stc
xor
out
arpl
pop
pop
jne
add
neg
ficom
mov
outs
jbe
ss
add
xlat
mov
loop
jno
pop
fadd
jecxz
push
cmp
sahf
pushf
loopne
cmps
loop
rcr
xchg
mov
fild
cmp
dec
aad
push
sbb
lods
inc
stos
mov
jmp
in
fsubr
ins
inc
jno
cmp
xor
aam
sbb
imul
cmps
loope
lods
fild
jno
and
mov
adc
daa
sub
xchg
or
dec
inc
std
leave
xchg
movs
jbe
rcl
pop
xlat
rcl
in
xchg
sub
arpl
stc
(bad)
fs
cwde
jecxz
fsubrp
mov
xor
sbb
dec
cmc
push
sub
mov
push
jae
mov
stos
je
mov
xor
lds
repnz
sub
popa
mov
pop
jno
sub
ins
dec
mov
mov
adc
or
cwde
popa
movs
mov
outs
adc
fs
push
dec
into
jae
bound
or
mov
enter
imul
(bad)
je
jle
and
add
push
adc
aam
xchg
inc
cwde
shl
mov
hlt
and
cld
sbb
inc
xchg
movs
aam
cmp
out
test
aaa
hlt
cdq
shl
sar
cmps
adc
mov
cmp
(bad)
popf
mov
pop
mov
inc
mov
add
xchg
dec
in
mov
loope
test
xchg
ret
inc
mov
cmp
mov
movs
or
imul
add
mov
jbe
iret
xchg
inc
repz
xlat
ficomp
(bad)
fmul
mov
mov
push
stos
inc
icebp
dec
add
repnz
call
lahf
loopne
out
je
cmp
xor
xchg
jmp
inc
stc
push
inc
pop
add
pop
and
xor
and
loop
pop
inc
cmp
add
mov
es
mov
ins
adc
add
sub
sub
pop
stos
cmp
xchg
adc
add
or
test
sbb
(bad)
dec
test
mov
or
fwait
lods
test
add
fcmove
cmp
inc
jno
jae
sub
mov
mov
dec
sbb
ins
jp
fmul
push
addr16
popf
pop
inc
mov
xor
cmc
pop
leave
(bad)
xchg
xchg
daa
cdq
sub
adc
in
xor
in
cmp
out
into
test
out
cld
xor
mov
imul
loop
dec
bound
cmp
cs
cmp
or
dec
in
mov
fwait
cmp
add
pop
adc
(bad)
mov
pushf
sub
jbe
push
aad
test
(bad)
xor
push
adc
stos
mov
and
fiadd
jno
sub
mov
rol
and
lds
xor
das
jecxz
inc
mov
mov
in
add
inc
mov
push
xor
sbb
pop
iret
push
jo
gs
sub
fadd
sti
jae
and
or
mov
push
cs
lods
jle
mov
gs
test
(bad)
sbb
ror
xchg
popa
repz
pop
and
rcl
(bad)
mov
ror
repnz
pusha
pop
jl
unpcklps
pop
mov
cld
call
out
inc
inc
push
xchg
cmps
mov
icebp
xchg
dec
cmp
(bad)
(bad)
xchg
xor
push
iret
ret
sub
rcl
aas
sub
mov
and
test
xchg
ins
pusha
push
fsubr
(bad)
mov
and
mov
add
retf
repz
dec
outs
add
sub
push
mov
in
fcomp
cmc
push
xchg
lahf
inc
inc
sub
mov
and
jmp
in
mov
mov
scas
imul
out
adc
adc
cmps
sub
ror
mov
repnz
fwait
adc
add
imul
(bad)
pop
mov
inc
ss
adc
xor
stos
out
mov
in
jb
xor
test
sbb
jo
jo
icebp
xchg
pop
leave
mov
push
mov
shl
add
repnz
pop
iret
out
dec
adc
mov
fldenv
dec
sbb
sub
inc
loopne
mov
lods
and
xor
xor
cld
in
adc
retf
mov
adc
rcr
daa
cmp
aaa
dec
xchg
addr16
mov
hlt
(bad)
cmp
xchg
cmps
dec
les
cmp
cmp
sbb
or
jl
cmp
(bad)
mov
push
fld
pop
loopne
dec
mov
cmp
xor
dec
movs
into
jb
mov
es
mov
inc
arpl
mov
dec
xchg
pushf
imul
ficomp
loopne
fmul
mov
adc
dec
in
sahf
cmp
cs
mov
adc
pop
mov
push
sahf
jl
movs
shr
inc
inc
jl
xor
loopne
test
mov
jl
leave
loop
cmp
shl
int3
jnp
aam
les
repnz
div
or
fbstp
lea
(bad)
xchg
stos
xchg
mov
imul
call
movs
std
sbb
inc
arpl
mov
jmp
cmp
or
ret
rol
je
aas
mov
jnp
aad
in
inc
mov
hlt
mov
stos
jmp
arpl
fldenv
mov
xlat
fdiv
imul
inc
xchg
(bad)
(bad)
mov
adc
iret
int
sbb
stc
sub
ds
mov
or
push
fiadd
xchg
xchg
test
lds
sbb
push
pusha
icebp
adc
psrld
scas
fcmovu
add
add
jnp
jg
or
jne
(bad)
pop
mov
ja
pusha
fwait
xchg
inc
imul
xor
stos
inc
mov
sbb
add
mov
adc
jnp
mov
sub
dec
int
sbb
xor
inc
push
mov
movs
jno
outs
cmp
pop
mov
and
out
out
mov
fs
sub
and
sbb
out
stos
sub
lds
dec
mov
leave
cmp
outs
xor
ds
add
jge
mov
test
sbb
aas
pushf
sahf
das
add
mov
nop
ret
iret
push
popf
ror
lds
fstp
cwde
shl
scas
dec
jmp
pop
push
pop
lahf
and
cmp
popf
xchg
and
xor
int
sti
mov
adc
xchg
int3
lods
shr
call
(bad)
push
xchg
getsec
bound
mov
shl
dec
sar
data16
cmovg
ret
inc
test
(bad)
sbb
lods
rcl
mov
adc
das
jmp
jnp
sub
and
push
jmp
add
push
(bad)
loopne
push
xchg
aad
fprem
pop
popa
xor
movs
test
pop
inc
and
push
add
cdq
pop
in
cwde
or
mov
or
fwait
cmp
fld
xchg
mov
xor
inc
jle
dec
jne
sub
cld
xor
mov
sbb
js
and
in
mov
int3
nop
push
cmc
and
ds
(bad)
fcomip
test
jle
pop
adc
jg
pop
test
nop
fwait
outs
add
shl
addr16
or
lahf
mov
test
push
ret
call
out
aam
mov
sub
setl
dec
xchg
dec
call
inc
xchg
leave
ins
in
sub
hlt
push
xor
inc
adc
xor
or
jg
and
addr16
push
mov
inc
push
xchg
je
scas
inc
mov
test
mov
xchg
mov
(bad)
in
add
movs
stos
std
inc
dec
cmc
rcl
rcl
or
ds
ins
daa
add
retf
test
ror
in
jo
rcl
xor
test
fnstsw
aas
adc
lea
mov
jo
(bad)
sub
push
idiv
push
cmp
jmp
cmp
adc
jge
loopne
inc
xchg
les
cmp
mov
inc
jne
dec
xchg
jle
sbb
sahf
jns
test
xor
and
cmc
nop
cld
or
pop
fistp
mov
test
call
fwait
call
dec
scas
and
retf
adc
mov
xchg
cld
arpl
fwait
cdq
dec
dec
mov
mov
outs
lds
sub
dec
ins
out
pushf
scas
push
mov
stos
dec
fiadd
lods
les
retf
cmps
ficom
(bad)
lahf
xor
cli
push
mov
imul
rol
push
jp
cli
pop
xchg
mov
test
imul
jecxz
dec
mov
mov
int3
fisubr
dec
pop
inc
in
mov
idiv
add
add
mov
into
inc
(bad)
js
shr
(bad)
mov
loop
mov
xor
cs
mov
out
data16
xchg
push
jecxz
pop
pop
mov
xchg
cmp
adc
pop
loope
sub
fxtract
(bad)
ss
retf
push
icebp
fcmove
(bad)
jmp
daa
call
cmp
outs
and
into
push
sti
std
iret
and
mov
jp
inc
mov
ret
pop
shr
jecxz
xor
out
movs
mov
jmp
imul
xchg
enter
dec
dec
jmp
mov
and
das
cmp
sub
imul
sub
add
and
xor
mov
(bad)
shl
ds
inc
test
enter
test
jb
push
mov
out
xchg
jne
mov
cmp
mov
mov
leave
push
mov
cmp
in
imul
lds
mov
mov
fsub
cmp
mov
stc
xchg
jne
loop
or
jmp
test
xor
rol
mov
cmp
pop
sub
fwait
mov
jg
pop
mov
push
fidivr
test
add
clc
mov
stc
out
xchg
xchg
and
retf
(bad)
and
jecxz
xchg
jbe
mov
aad
xor
mov
das
xor
xor
xor
sbb
sub
retf
(bad)
stc
xchg
in
lods
arpl
int3
inc
xor
add
push
adc
and
add
mov
sub
push
jmp
xchg
jmp
adc
xor
xchg
sub
in
sub
jp
stos
(bad)
shr
ins
sub
mov
cmp
ja
adc
adc
cli
cmp
cdq
mov
xchg
add
pop
xor
mov
in
or
add
sub
dec
(bad)
rcr
stos
cwde
mov
(bad)
repnz
repnz
ret
pop
jo
test
imul
and
sti
pop
in
leave
xor
test
rol
in
es
fbld
jge
les
std
das
das
xchg
stc
cmp
aaa
cmps
inc
pop
mov
add
mov
adc
sahf
ror
jmp
dec
movs
lds
sub
mov
mov
dec
mov
xor
in
mov
lods
shl
jg
icebp
ret
bnd
and
je
fbld
jmp
or
or
dec
pop
pop
pop
cmp
push
pop
mov
ins
and
retf
test
xchg
sahf
je
xor
(bad)
shl
adc
inc
(bad)
xor
test
adc
sbb
mov
mov
cmp
push
jmp
dec
je
pop
sub
mov
(bad)
fcmovnu
mov
pop
shl
bound
loop
dec
mov
jbe
std
mov
and
sbb
outs
sbb
bound
ja
in
neg
xchg
jmp
inc
fnsave
in
and
jb
xchg
push
adc
or
push
push
inc
or
add
in
les
hlt
fistp
(bad)
pop
and
lahf
cmp
iret
sti
lock
mov
call
in
aaa
adc
adc
push
sbb
inc
and
inc
cmps
jmp
addr16
mov
in
aam
gs
out
out
pop
cmp
xchg
sbb
inc
and
adc
inc
jo
dec
xchg
cdq
mov
inc
mov
push
dec
enter
cmp
or
icebp
iret
ins
mov
(bad)
ds
cmp
push
add
sub
ror
push
cdq
(bad)
gs
cwde
jo
ins
cmc
fidiv
add
sbb
jnp
mov
pusha
arpl
pop
sbb
inc
imul
mov
sub
fld
xor
cs
mov
ins
loop
sar
push
mov
in
inc
stc
aad
outs
add
in
ja
xchg
icebp
mov
mov
jle
out
xchg
call
aas
xchg
(bad)
mov
in
cwde
adc
out
xor
sub
mov
adc
push
xchg
add
adc
mov
cli
data16
and
shl
mov
jg
imul
scas
jb
daa
pop
das
and
lahf
cdq
(bad)
adc
sbb
cmps
or
enter
in
into
mov
add
popf
ja
mov
jecxz
loop
ds
call
inc
nop
addr16
in
out
add
and
or
xchg
sub
pop
shl
jecxz
jne
shl
mov
sar
stos
lds
rcl
dec
int
jge
and
jmp
leave
adc
fdiv
leave
out
dec
add
cmp
pushf
add
ret
sbb
ror
push
and
dec
push
mov
adc
movs
push
fnstsw
stos
cdq
js
fisub
rcl
sbb
mov
sbb
pop
dec
sub
les
in
test
xchg
nop
aad
jg
fwait
clc
pop
ret
enter
pop
lea
cdq
cmp
xor
cld
jmp
xchg
jle
ins
(bad)
sar
(bad)
pop
mov
js
and
sbb
jle
sahf
mov
shr
fstp
xchg
xchg
cmovle
push
(bad)
sub
(bad)
pop
aam
es
or
push
(bad)
popf
push
push
dec
cmp
pop
mov
fcmovne
inc
aas
push
jns
push
(bad)
lahf
sahf
stos
mov
xlat
pop
jae
fmul
or
mov
cli
call
popf
pop
adc
inc
jl
fmul
sbb
inc
in
sub
jge
xor
mov
clc
sbb
dec
daa
adc
repnz
retf
retf
in
daa
(bad)
mov
or
jno
adc
ja
xchg
fcmovu
xchg
jp
(bad)
(bad)
popa
outs
dec
cli
(bad)
xor
dec
js
xchg
bound
stos
leave
xor
jmp
mov
xlat
les
or
movs
pop
in
xlat
cwde
fstp
repnz
sbb
outs
fild
sub
enter
dec
ret
lds
mov
push
push
call
cwde
mov
dec
test
std
out
and
enter
dec
sahf
cmc
xlat
in
pop
test
add
xchg
jnp
cwde
inc
add
or
inc
shl
lods
mov
inc
push
sbb
xchg
adc
mov
xchg
out
pop
pop
arpl
sub
sub
pop
mov
jg
stos
pop
add
adc
std
cli
nop
ficomp
out
sbb
mov
stos
(bad)
push
pusha
(bad)
mov
icebp
dec
repnz
add
sub
rol
mov
sbb
fcomp
xchg
and
xor
fild
es
hlt
test
fistp
and
push
push
mov
push
sahf
js
fwait
mov
dec
or
(bad)
fwait
cmps
add
inc
into
gs
lds
push
(bad)
jl
or
stos
test
and
rol
ss
add
loop
add
push
pusha
sbb
jnp
hlt
out
jmp
fsub
ror
mov
int
in
adc
jmp
push
or
pop
push
clc
dec
aam
mov
sbb
shl
xchg
fnsave
and
imul
push
das
nop
lahf
jo
cmp
adc
out
pusha
(bad)
in
scas
clc
xor
out
pop
xchg
aam
push
bound
cmp
inc
jo
sbb
mov
dec
cmps
cwde
nop
mov
jne
out
jo
scas
lock
lods
jmp
cmp
and
ds
test
or
popa
in
mov
sub
mov
or
stc
scas
retf
test
repz
dec
loop
(bad)
popf
pusha
sbb
fiadd
adc
ret
pop
xor
in
cdq
inc
mov
lods
iret
(bad)
and
and
cwde
xchg
std
repnz
clc
push
in
cmp
adc
stos
cmp
xor
add
pop
mov
iretw
cmp
inc
repnz
push
pop
xchg
mov
xor
cmc
dec
jp
ins
popf
cmp
stc
push
mov
lahf
mov
imul
xchg
and
dec
push
fcmovnb
repnz
mov
xlat
push
test
pop
jne
push
fild
adc
cmp
mov
(bad)
or
lods
stos
mov
scas
lahf
adc
test
cwde
lea
inc
in
inc
dec
mov
cli
mov
sub
and
mov
pop
ins
mov
retf
inc
mov
sub
mov
dec
shl
pusha
mov
mov
mov
cwde
pop
mov
ret
push
(bad)
cmps
retf
imul
loope
mov
mov
in
xchg
push
out
push
retf
dec
(bad)
cmps
xchg
sub
jb
out
std
add
and
dec
movs
pushf
scas
mov
jns
loop
stos
movs
ror
or
mov
call
lods
test
mov
mov
clc
or
mov
dec
add
loope
out
pop
in
out
fild
nop
addr16
xchg
clc
push
test
mov
mov
jo
mov
imul
sti
inc
dec
nop
mov
mov
icebp
push
mov
repnz
jmp
repz
cdq
gs
rol
mov
cmps
icebp
test
rol
mov
pop
push
add
imul
dec
out
(bad)
mov
mov
mov
jb
cmps
cli
ins
int3
pop
xor
iret
mov
mov
repz
or
pusha
mov
imul
ret
jecxz
jge
outs
out
gs
push
sbb
fmul
push
out
shr
into
push
mov
pop
pop
call
jns
(bad)
scas
jmp
ins
movs
pop
inc
adc
pop
movs
xchg
jnp
test
pop
pop
mov
mov
movs
xchg
pop
jmp
pop
std
jno
rcr
cmps
mov
mov
fcomp
sub
cmp
shr
jp
mov
mov
xor
ins
push
and
pop
adc
cs
xchg
cmc
mov
das
stos
cwde
xchg
int3
jmp
fist
mov
das
jbe
cmp
sbb
inc
xchg
das
aam
data16
mov
sub
inc
lods
jg
adc
adc
sahf
fistp
dec
(bad)
hlt
add
cmp
mov
data16
inc
mov
stc
mov
dec
les
and
fcomp
call
je
push
shl
movs
mov
jmp
sub
inc
int
cmc
mov
inc
jl
cmp
jle
test
movs
ficom
adc
jl
sbb
loopne
vmwrite
test
xchg
retf
scas
mov
enter
call
pop
xor
inc
out
nop
mov
out
mov
popa
fs
mov
scas
add
rcl
addr16
pop
push
cwde
jle
inc
add
pop
adc
adc
adc
scas
xor
fwait
sbb
cwde
jmp
or
ret
data16
arpl
and
jbe
enter
je
xor
inc
in
add
add
adc
in
cmp
addr16
add
cmps
mov
xchg
cli
je
xchg
dec
(bad)
int3
ins
loope
lds
sbb
sbb
imul
jbe
dec
cmp
cmp
or
pop
je
clc
mov
cmp
xchg
daa
pop
adc
je
lods
mov
sub
xchg
xor
daa
sub
call
icebp
out
rol
cld
and
out
and
les
pop
or
push
loop
dec
mov
les
fisttp
push
(bad)
iret
es
int3
push
repnz
mov
stc
movs
and
push
scas
ret
add
mov
jl
leave
retf
xor
mov
stos
rcr
lods
gs
fs
hlt
clc
inc
outs
cmp
and
cmp
shl
inc
mov
ffree
fisubr
push
call
outs
xor
aad
mov
lock
or
jecxz
mov
xlat
xchg
imul
adc
fldenv
mov
lock
lahf
int
call
test
jmp
xchg
mov
adc
or
push
ret
rcr
xchg
push
into
jmp
dec
inc
fwait
cwde
popa
(bad)
dec
mov
daa
and
mov
pop
xchg
inc
(bad)
or
test
in
js
imul
xor
jecxz
cmps
repz
loop
or
sbb
adc
retf
(bad)
call
bound
pop
sbb
jmp
lahf
jle
outs
adc
push
retf
inc
addr16
xor
stos
xor
scas
fnsave
test
scas
(bad)
rcr
in
jp
push
ss
fistp
rcl
mov
push
xor
or
test
pop
(bad)
add
xor
shl
sar
aad
in
pop
add
sti
xor
inc
mov
int
add
stos
xchg
xlat
cld
stos
shl
mov
sti
jbe
fistp
dec
adc
jne
repz
xchg
dec
pop
jb
add
retf
popf
pop
loopne
loope
xor
stos
test
cmp
ret
(bad)
cmp
xchg
(bad)
push
xor
scas
test
sbb
mov
fstp
stc
and
ffreep
lea
and
repnz
dec
add
dec
xchg
fwait
mov
cmp
pop
dec
stos
mov
fld
xor
es
mov
stc
inc
fcomp
xor
sbb
ss
push
push
pop
dec
leave
jae
loop
nop
mov
or
bnd
mov
sub
lea
xor
push
lods
sahf
adc
test
in
push
xchg
add
imul
cld
sub
in
ins
out
xchg
and
push
and
jmp
rol
lods
jg
mov
(bad)
retf
and
mov
jb
inc
data16
ret
pop
jns
scas
or
mov
and
or
dec
jns
mov
sub
push
mov
jnp
std
idiv
mov
out
and
mov
in
dec
sbb
add
shl
into
inc
mov
movs
das
pusha
pop
ins
mov
aaa
cmp
enter
test
push
sub
cmc
mov
jo
and
and
dec
jne
push
mov
movs
test
pop
loop
ficom
dec
xchg
mov
shr
(bad)
seta
xrelease
jle
and
push
sysret
push
arpl
jmp
push
jge
hlt
xchg
xor
fucom
lahf
fist
shr
cmp
jns
scas
in
sbb
mov
into
lahf
sti
arpl
dec
cwde
stos
in
stos
pop
pop
mov
lods
or
adc
push
mov
mov
mov
(bad)
xchg
jle
pushf
xlat
mov
jecxz
and
(bad)
lahf
jmp
push
jge
in
popf
ins
cmp
aam
loope
test
dec
jl
add
mov
retf
sbb
or
mov
mov
js
sub
adc
sbb
jge
dec
xchg
mov
xor
cwde
retf
dec
(bad)
(bad)
loopne
sbb
cwde
mov
jmp
fcomip
mov
test
pop
cmp
repz
fist
and
sahf
xchg
sti
mov
aaa
aad
sbb
adc
pop
stos
movs
jae
mov
adc
jecxz
aam
imul
fild
cmps
pop
dec
das
sub
test
push
bound
or
push
sub
mov
jmp
or
push
mov
pop
pop
jb
push
pushf
ss
lahf
pop
xchg
(bad)
addr16
outs
in
mov
scas
loope
pop
pop
or
cmc
sbb
int
aas
(bad)
mov
mov
lods
pusha
mov
ss
test
mov
fild
adc
inc
cmovns
cdq
pop
mov
gs
push
sub
or
stos
out
sbb
xchg
out
xor
pop
out
cmp
xchg
and
push
lahf
and
stc
out
out
popa
mov
inc
xor
es
loope
inc
add
sbb
fist
fdivr
std
push
and
jnp
scas
fdiv
fsub
pop
adc
icebp
push
cli
jns
aad
dec
ret
fld
inc
push
adc
xchg
jno
sbb
ja
sub
mov
(bad)
arpl
das
push
ins
mov
jg
aas
sbb
outs
mov
add
push
add
inc
lods
arpl
cmc
or
cmp
out
(bad)
cmp
jecxz
add
sbb
inc
call
adc
dec
push
mov
in
cmp
sbb
xor
sbb
sar
dec
loop
cdq
push
pop
mov
fcomp
test
xchg
test
fld
push
xchg
sub
sbb
imul
or
add
mov
aad
push
loop
test
mov
icebp
je
adc
jl
add
or
cli
lea
jmp
repz
pop
les
mov
pop
outs
shl
mov
sbb
iret
cmps
cs
pop
sbb
lock
push
push
push
jne
mov
add
rcr
sar
stos
fwait
mov
and
loop
sub
stos
push
mov
add
mov
adc
pop
in
outs
int3
stos
loop
or
sbb
push
inc
lea
shl
sbb
adc
or
inc
or
adc
mov
pop
call
xor
mov
sub
inc
pushf
or
inc
cmp
xor
inc
fnstenv
daa
sbb
push
adc
jnp
lods
or
stos
cwde
or
push
pop
xlat
pushf
aas
mov
adc
call
ins
mov
retf
sbb
call
ds
jmp
xchg
jge
and
cmp
inc
xchg
cmp
iret
bound
sub
jmp
ret
outs
pop
lods
in
xchg
push
mov
sub
xchg
sbb
push
xor
xchg
fs
hlt
mov
cmp
xor
dec
enter
adc
jge
or
enter
ss
mov
gs
iret
(bad)
mov
test
xchg
mov
adc
xchg
xor
push
nop
inc
into
mov
rcl
ins
retf
ror
pop
arpl
ficom
push
outs
xor
fiadd
pushf
shl
sar
leave
sub
loop
add
mov
jb
mov
push
jl
call
enter
pop
mov
xor
jle
hlt
sub
ret
adc
jo
cmp
mov
or
neg
mov
(bad)
cld
in
jge
sub
cmps
out
int3
jg
jbe
pop
rol
cmovns
dec
pop
cmc
out
mov
adc
push
ins
in
call
push
rol
pop
xchg
xor
in
out
mov
les
push
jmp
shl
jp
cmp
into
hlt
sbb
hlt
imul
fdiv
(bad)
and
inc
js
cmp
ret
psraw
cs
xchg
int3
sbb
push
mov
jo
lock
mov
pop
and
out
mov
test
jae
popa
or
popf
mov
jbe
xchg
(bad)
out
pop
movs
or
sub
mov
jne
test
and
mov
sub
int3
ss
cmps
cmp
jl
rol
je
sahf
ja
(bad)
cli
int3
sti
jnp
cmps
pop
div
xor
add
pop
jg
cld
ret
cmp
jp
imul
add
stos
ds
xchg
xor
sub
lock
push
cmp
sti
add
call
sbb
pop
cmp
mov
xor
scas
mov
cmc
(bad)
jle
cmp
jp
push
clts
lods
mov
lahf
mov
and
or
push
sbb
xchg
push
add
stos
iret
mov
push
inc
adc
outs
in
pop
push
fs
sub
mov
repz
jle
xor
xchg
pop
popf
dec
dec
sbb
pcmpgtb
xchg
test
enter
gs
(bad)
rcl
movs
cld
arpl
inc
ficomp
adc
mov
adc
add
in
xor
ja
jnp
es
xor
call
jb
icebp
call
fstp
mov
jns
pop
pop
in
mov
or
fstp
ja
(bad)
imul
test
scas
aad
ror
fneni(8087
mov
icebp
call
fisubr
mov
cmp
stos
dec
dec
xor
xchg
cmp
movs
mov
aam
loop
scas
xor
cmps
adc
sti
dec
jns
out
stos
lea
lock
int3
and
lds
pusha
cmp
std
jne
pop
dec
cld
imul
or
pop
addr16
jne
(bad)
push
sbb
jecxz
lods
bound
xchg
mov
out
vlddqu
push
mov
fadd
mov
lds
sar
adc
dec
(bad)
mov
inc
shr
mov
jae
xchg
aad
xor
pop
pop
mov
loopne
add
jmp
imul
mov
cmp
xchg
mov
and
sub
fistp
jne
mov
icebp
push
loope
adc
and
mov
push
sub
or
test
nop
jmp
lods
jmp
adc
icebp
iret
sub
imul
mov
jg
dec
push
fild
adc
push
ds
ins
enter
rol
(bad)
and
(bad)
(bad)
mov
daa
jge
mov
pop
in
or
enter
nop
sub
fdivrp
out
inc
jle
cmp
inc
mov
jle
or
dec
das
add
mov
lods
retf
cmps
adc
inc
cdq
jae
and
dec
mov
sub
cmp
fcmovu
pop
lahf
(bad)
and
retf
and
jbe
dec
aas
ret
inc
aad
cdq
jge
add
inc
fs
mov
retf
pop
pop
dec
adc
cld
les
sar
cs
test
jmp
mov
cmp
ins
out
mov
into
lods
push
cld
loopne
and
xchg
rol
jb
fld
mov
aaa
fistp
cmc
int
xor
lock
(bad)
ds
retf
in
lods
scas
inc
inc
mov
jbe
(bad)
clc
sbb
add
cmp
add
enter
fwait
or
clc
hlt
lds
dec
add
test
dec
test
push
add
mov
jmp
push
gs
or
push
stos
cmp
in
adc
jns
adc
lods
popf
inc
xchg
jl
inc
(bad)
sub
inc
hlt
dec
repz
and
mov
js
(bad)
pop
jno
mov
mov
aad
cmp
repnz
adc
adc
xor
push
fs
or
data16
mov
ss
cmp
sub
mov
mov
xchg
xor
movs
push
and
cs
inc
and
or
mov
retf
arpl
xchg
fwait
or
cmp
and
aam
sti
loop
pop
outs
outs
adc
or
jmp
mov
dec
rcr
jbe
jne
pop
imul
fst
or
int3
ror
jecxz
(bad)
clc
and
dec
cmps
add
daa
lds
fs
rcl
fld
add
inc
adc
into
je
adc
push
out
arpl
push
or
add
pop
ins
out
test
dec
fmul
push
pop
push
pop
mov
push
cs
lods
shl
sub
sbb
loop
fld
pop
push
or
inc
popaw
inc
call
or
in
cmp
jae
and
push
mov
popa
call
inc
enter
out
fistp
cli
aaa
mov
loopne
ret
sbb
leave
sbb
stc
nop
or
fmul
adc
sub
dec
push
or
sub
cmp
jg
lea
sbb
mov
hlt
mov
xor
arpl
int3
add
sbb
mov
adc
aam
nop
movs
je
lods
mov
add
pop
jmp
jb
mov
push
adc
cmc
xor
imul
push
into
ds
ds
data16
fistp
sub
js
inc
pop
mov
sub
sub
rol
jecxz
pusha
mov
stos
pop
sbb
stc
dec
pop
(bad)
sbb
adc
js
test
in
inc
sbb
lahf
push
dec
mov
sbb
(bad)
mov
sbb
out
fbld
and
dec
loopne
out
and
jnp
push
arpl
das
sahf
sahf
and
data16
and
push
xchg
test
je
fistp
outs
inc
push
inc
sub
xchg
inc
pop
xchg
(bad)
push
scas
pop
ror
adc
shl
fwait
pop
jp
xchg
sub
sub
out
daa
cmp
dec
mov
leave
jne
daa
shl
xchg
adc
pop
lea
(bad)
push
or
add
sbb
(bad)
js
mov
sbb
dec
aas
shl
data16
xor
mov
adc
cdq
retf
pop
hlt
add
jmp
cdq
mov
nop
fnstenv
fcmovb
(bad)
rcr
add
jle
out
xor
sbb
ror
mov
or
imul
imul
nop
mov
pop
push
rcr
xor
inc
push
ret
or
ret
lahf
out
sub
jecxz
jp
(bad)
xchg
ficom
pop
jecxz
pop
or
adc
dec
fst
sbb
cmp
or
add
test
inc
cmp
stc
mul
pop
mov
data16
jp
fcomip
xor
xchg
stc
std
in
lahf
(bad)
push
sti
sub
or
push
shl
pop
xchg
adc
fidiv
push
or
out
in
or
popf
xchg
nop
movs
(bad)
or
lock
push
into
pop
adc
stos
xchg
jmp
scas
sbb
pop
sbb
xchg
jmp
in
imul
ror
loop
popa
xor
ror
cmp
out
rcl
repnz
neg
mov
outs
jl
fisttp
lods
cs
push
cmp
hlt
mov
out
push
retf
inc
(bad)
pusha
jbe
out
and
jb
int
jo
cmp
(bad)
mov
inc
push
ins
(bad)
fidivr
sar
out
and
mov
inc
inc
(bad)
movs
daa
lods
(bad)
icebp
mov
ins
icebp
pop
mov
pop
repnz
mov
push
adc
mov
iret
dec
data16
arpl
repz
cmp
cmp
fstp
push
push
ss
aad
mov
(bad)
mov
push
sbb
push
daa
jl
shr
xchg
jg
xor
outs
pop
iret
mov
mov
sub
scas
mov
(bad)
sbb
icebp
out
pop
rcr
sbb
mov
or
popa
and
movs
in
jnp
fsubp
pop
push
inc
(bad)
xchg
retf
cwde
mov
cdq
inc
loope
and
mov
xor
mov
hlt
aaa
mov
push
rol
data16
cmps
xchg
fadd
js
sbb
cld
dec
pop
sbb
clc
stc
gs
adc
retf
xchg
dec
out
add
cmp
jo
in
adc
pop
xchg
(bad)
int
or
(bad)
fwait
scas
mul
mov
adc
xchg
scas
jae
out
xlat
(bad)
push
shl
fcom
mov
xchg
xchg
loope
ss
jb
add
cs
adc
add
mov
jbe
jecxz
sbb
(bad)
sub
lea
jne
iret
dec
dec
addr16
inc
test
pmulhw
cwde
sar
inc
inc
ja
sbb
inc
cmp
inc
push
dec
pop
pop
add
cmps
cmp
loope
dec
cs
lods
fisub
mov
jae
mov
and
mov
rcr
sbb
into
outs
repz
push
mov
out
xor
jecxz
test
pusha
or
out
sub
jg
iret
fild
xchg
fbstp
pop
js
jp
adc
cmp
adc
push
outs
in
addr16
mov
push
jmp
mov
aam
inc
cmps
dec
cdq
cmp
mov
or
sbb
aaa
jmp
sbb
hlt
ins
sub
clc
std
ins
and
jb
mov
adc
imul
mov
sub
fistp
cli
jb
shl
in
and
mov
push
mov
scas
pop
in
popa
sbb
cwde
int
rol
out
aaa
popf
xchg
jg
test
scas
sbb
adc
movs
loop
mov
std
ins
and
add
push
dec
(bad)
sti
jne
loopne
jo
cld
add
into
inc
mov
xadd
(bad)
xchg
sbb
add
test
fs
pop
dec
push
rcr
mov
jmp
sub
cdq
call
add
retf
xor
dec
push
ins
ret
outs
cmp
pop
call
xchg
pop
xchg
adc
(bad)
daa
ins
jns
push
push
inc
dec
movs
leave
out
mov
add
xchg
sbb
std
les
aas
cmp
xor
data16
and
push
scas
fild
iret
not
jl
mov
into
mov
pop
sbb
mov
xor
adc
cli
push
(bad)
bound
pusha
push
add
pop
cs
pop
ss
mov
mul
fucomip
mov
shl
(bad)
outs
hlt
push
cmp
icebp
jb
ret
dec
push
outs
ja
aaa
test
add
pop
out
mov
adc
adc
jo
push
or
mov
dec
shl
sbb
inc
int
lahf
or
cmps
shl
add
dec
out
repz
cmp
aas
iret
mov
out
push
push
sbb
jg
fsubr
jle
rcl
repz
and
xor
fisttp
pcmpeqd
lock
aaa
bound
jecxz
mov
xor
(bad)
not
mov
pusha
outs
jp
adc
out
xchg
stc
push
jmp
xor
imul
ret
mov
xchg
cmp
lahf
pop
pusha
cmps
cmps
mov
sub
loope
mov
les
sbb
mov
push
ins
xchg
out
bound
jne
and
or
sbb
dec
lods
mov
in
arpl
adc
xchg
mov
xor
jns
pop
xchg
repz
sub
xor
je
inc
std
pop
or
mov
int3
aaa
push
mov
mov
out
sub
sub
call
xor
ror
mov
xlat
clc
xchg
mov
sub
enter
xchg
icebp
test
data16
adc
mov
xchg
inc
test
aam
loopne
push
ret
jbe
cmp
fwait
push
mul
mov
fld
and
clc
push
rol
and
mov
jp
xor
jmp
dec
fdiv
sbb
jl
adc
int3
hlt
push
jp
xor
push
xor
push
inc
fs
ret
loope
or
sbb
jnp
(bad)
fnstsw
repnz
(bad)
fld
or
pop
outs
xor
mov
popa
jmp
cmp
lahf
pop
stos
xor
shl
mov
sub
cmp
pop
stos
clc
push
in
fs
xchg
fldcw
nop
push
jp
outs
inc
adc
xor
cmc
cmc
or
jmp
shl
test
inc
mov
pop
scas
sti
mov
das
mov
mul
jne
aam
adc
cmps
jno
inc
cs
fadd
mov
sub
cld
adc
cmp
push
ds
jnp
repnz
dec
outs
(bad)
mov
cmps
int
(bad)
adc
xchg
cs
test
lds
xor
adc
je
jmp
mov
sbb
popa
ss
loopne
pop
fidivr
cwde
mov
leave
pop
push
daa
fcom
(bad)
aad
pop
clc
inc
test
jp
loope
test
jmp
pop
movs
push
cmp
push
ret
cwde
ja
add
jmp
mov
jecxz
loope
movs
add
fiadd
pop
aad
sub
jmp
popf
imul
out
dec
jmp
or
mov
xchg
push
cmp
lea
loopne
mov
or
retf
popa
push
dec
jmp
das
stc
or
in
pop
sub
pop
or
push
adc
jbe
mov
test
add
add
adc
repnz
sti
jmp
dec
dec
sub
daa
xchg
xchg
pusha
push
pop
fistp
loop
into
sbb
sub
nop
shr
retf
dec
ror
into
ja
and
mov
scas
inc
jo
rol
sbb
sti
nop
push
xor
add
cmp
jns
nop
bt
aas
sti
aam
ror
into
hlt
ficomp
mov
cdq
(bad)
or
cld
shl
inc
pop
push
add
fisub
scas
test
cmp
fmul
jne
aam
mov
sub
mov
xchg
mov
mov
mov
(bad)
push
stos
mov
mov
pop
in
(bad)
(bad)
ret
add
fs
mov
pop
add
imul
retf
int3
das
inc
pop
lock
xchg
clc
mov
ja
dec
pop
mov
jno
cmc
xor
movs
callw
jbe
mov
jnp
pop
cs
cs
hlt
mov
dec
retf
xor
xchg
out
xchg
aaa
pop
sar
stos
mov
adc
push
inc
pop
cmp
or
aas
sbb
and
mov
mov
lahf
je
and
inc
and
mov
jns
and
test
(bad)
jg
mov
xor
test
rcl
(bad)
imul
enter
setge
dec
sbb
jmp
fsub
mov
or
and
fild
lods
je
scas
jmp
pusha
cmp
ret
and
das
xchg
cld
sub
iret
jns
sub
fidivr
aaa
or
pop
push
adc
ret
test
xchg
push
fstp
(bad)
cmc
in
out
idiv
sbb
fisttp
jg
sahf
rcr
daa
ret
aam
(bad)
mov
sub
xchg
bound
inc
inc
out
xor
lds
pop
push
rcl
push
into
mov
out
inc
adc
xchg
shr
stc
out
dec
in
mov
mov
mov
shl
lea
sub
mov
sub
jle
test
enter
fimul
(bad)
addr16
dec
push
(bad)
mov
fwait
cmp
shl
test
ins
jne
add
mov
mov
cmp
ja
ja
retf
clc
adc
add
dec
sar
sbb
sti
std
icebp
fcomi
enter
add
xor
and
fistp
(bad)
dec
jmp
retf
mov
repz
xchg
xor
fdivr
outs
outs
mov
push
nop
mov
ja
mov
push
xchg
push
scas
push
mov
outs
and
aas
dec
dec
in
cmp
sub
sub
mov
push
mov
imul
js
mov
cs
sbb
clc
test
sbb
lock
mov
js
shl
dec
sbb
movs
jnp
jo
mov
stos
nop
jmp
push
push
test
pop
ror
ret
ins
jle
sbb
ret
stos
cld
cmps
pop
jne
mov
and
aam
or
adc
push
test
mov
xor
retf
dec
ins
adc
xor
xor
or
ins
sar
jle
aad
pop
test
or
mov
jnp
pop
ret
aad
bound
mov
jle
dec
and
inc
xchg
in
pop
mov
jne
lds
pop
dec
(bad)
daa
scas
fs
push
pop
cmps
rcr
push
pop
movs
mov
xchg
jnp
fcomp
aas
xor
mov
mov
outs
cmp
pop
adc
pushf
mov
jb
xor
fisubr
add
cwde
popa
sbb
mov
sub
pop
xchg
outs
jmp
add
je
mov
add
fdivp
cmp
xchg
shr
mov
pop
jg
sbb
or
push
and
dec
std
jae
(bad)
sbb
jmp
movs
fsubr
and
iret
mov
jb
jl
mov
rol
or
ret
sbb
aaa
and
lock
sahf
xchg
mov
mov
lock
xchg
push
je
jmp
stos
inc
dec
aam
pop
push
loopne
mov
push
lahf
push
aaa
movs
and
cmps
mov
mov
cli
and
arpl
mov
shl
fld
jne
push
xchg
rcr
and
lods
inc
jne
pop
xchg
stos
xchg
enter
outs
adc
inc
cmc
jnp
add
and
or
add
les
jmp
retf
nop
les
inc
xor
jbe
hlt
ins
(bad)
cmp
or
cmc
and
xor
mov
lods
xor
fisttp
das
xchg
lahf
xor
sub
and
sub
mov
and
xlat
lods
(bad)
movs
mov
in
inc
inc
inc
pop
push
sbb
bound
int
inc
les
xchg
retf
imul
loope
mov
ret
sub
daa
(bad)
mov
popa
jns
leave
lds
push
dec
scas
pusha
and
mov
fsubr
add
mov
fwait
jl
and
add
pop
adc
adc
pusha
sbb
addr16
jmp
shr
jmp
arpl
jle
ret
sub
stc
sub
(bad)
leave
loope
or
inc
sbb
jmp
dec
into
fwait
cmp
xchg
xlat
mov
jno
inc
fistp
or
pop
sbb
xor
push
cmc
jb
aaa
lods
mov
outs
jb
and
call
nop
in
pushf
inc
retf
adc
lods
xor
lahf
gs
out
call
test
push
(bad)
mov
cmp
fsub
jbe
xchg
adc
pop
pop
push
mov
or
jbe
inc
add
aaa
pop
jno
push
mov
fiadd
inc
(bad)
retf
xchg
jle
add
pop
ret
cmp
jmp
repnz
xor
nop
cld
loope
repnz
pop
jmp
shr
cwde
sub
jmp
das
iret
mov
xchg
aaa
adc
pop
les
jo
cwde
push
mov
or
xor
rol
loop
xchg
jne
cmp
push
scas
test
sar
aas
loopne
jl
cwde
out
xlat
inc
push
je
xchg
mov
add
sub
inc
das
popf
clc
push
jo
push
(bad)
jmp
cs
pop
inc
call
or
aad
(bad)
cwde
lahf
push
jg
les
adc
fwait
jmp
inc
gs
sub
pop
add
mov
pop
pop
scas
sub
cld
add
rol
sbb
arpl
xchg
pop
dec
idiv
data16
adc
cwde
cmp
lds
retf
inc
out
xchg
cmp
call
or
dec
inc
movs
push
test
sub
mov
(bad)
hlt
sub
in
inc
dec
fisttp
xchg
add
fnstcw
test
in
dec
loopne
adc
xor
(bad)
stc
ss
mov
(bad)
and
out
imul
das
or
dec
iret
push
movs
gs
mov
mov
imul
cmp
movs
pusha
adc
lds
add
(bad)
jno
push
sbb
fld
fisttp
je
sbb
out
cmp
imul
xchg
(bad)
enter
pop
push
jbe
daa
ror
out
(bad)
ds
lods
adc
cld
push
xchg
ret
leave
mov
inc
cmp
jp
pop
das
and
jl
repnz
push
pop
adc
aas
mov
add
mov
mov
(bad)
push
dec
cmc
pop
aam
shl
fs
fcom
inc
enter
es
sbb
cmp
push
mov
and
imul
mov
call
repnz
ins
xchg
xchg
mov
outs
nop
dec
adc
stos
dec
movs
mov
movs
inc
xor
xchg
and
sbb
je
lods
clc
loopne
mov
push
jl
stos
xchg
push
and
xchg
ud2
arpl
retf
xor
jne
or
sbb
out
sub
sub
test
ret
out
test
loopne
ins
mov
or
jle
icebp
inc
sub
es
xchg
pusha
repz
xchg
mov
inc
bound
test
in
rcr
add
arpl
in
xchg
or
sahf
scas
mov
prefetchnta
mov
nop
pop
sub
push
push
sbb
scas
fmul
sahf
bound
arpl
cmc
push
outs
xchg
add
fiadd
and
push
fidiv
sub
aam
jmp
lahf
test
das
nop
rcl
xchg
inc
inc
and
or
lods
push
arpl
mov
mov
out
mov
sub
fcmovbe
lds
jns
hlt
sti
push
outs
mov
cmp
sbb
(bad)
sub
or
icebp
mov
push
jbe
jo
mov
outs
push
push
popa
jecxz
(bad)
loop
je
cmc
fiadd
jmp
fsub
lahf
and
das
sub
rol
lahf
sbb
and
fcomp
dec
(bad)
push
mov
into
mov
xor
hlt
push
inc
movs
add
aaa
scas
xor
in
fild
cwde
push
nop
out
nop
aas
xor
jno
int3
sti
or
sbb
cld
ins
jl
stos
push
push
mov
shr
addr16
bound
or
and
fsub
xchg
xor
adc
xor
sbb
and
dec
(bad)
outs
mov
add
mov
jle
mov
and
sbb
in
xor
inc
cdq
daa
out
clc
pop
(bad)
xlat
icebp
sahf
mov
jb
xadd
push
add
icebp
push
nop
(bad)
or
jb
cli
push
in
and
mov
jne
cld
(bad)
call
loopne
jbe
push
mov
mov
aas
aad
sbb
dec
and
cmp
fxch
cmp
mov
repz
mov
syscall
sbb
popa
outs
sub
pop
retf
mov
stos
inc
dec
aas
jp
(bad)
cmc
xchg
ja
icebp
inc
inc
jo
sar
adc
and
jmp
xchg
out
cs
fucomip
movs
xor
sbb
sub
scas
ret
pop
or
imul
xchg
enter
lds
cmp
lods
out
jmp
cmps
jmp
outs
pop
jne
aam
add
jmp
jle
sbb
inc
fst
(bad)
mov
mov
push
into
call
push
fwait
scas
repz
dec
mov
es
jp
push
inc
pop
cmp
jge
inc
mov
scas
add
sbb
adc
lods
mov
cwde
fs
adc
mov
and
sbb
inc
mov
mov
mov
sahf
push
sub
out
sub
loop
call
lock
stos
xchg
jno
pop
xchg
xor
xchg
das
movs
in
js
adc
push
jmp
ins
pop
cmp
std
sbb
cli
xchg
push
cmps
sbb
or
aam
adc
cmps
mov
xchg
outs
add
push
inc
gs
jo
mov
rcl
mov
outs
stc
std
pushf
or
add
cld
inc
xor
xlat
ror
ret
jno
inc
test
test
mov
cmp
jb
clc
jge
jne
arpl
push
mov
mov
adc
xchg
push
dec
fiadd
fisubr
hlt
pop
das
xchg
add
and
dec
inc
mov
inc
and
cs
xlat
push
test
xor
push
cmp
sub
test
fs
jne
jmp
stc
adc
mov
int
push
cwde
iret
push
push
lods
arpl
push
shl
jo
imul
std
popa
push
punpcklwd
adc
pop
sub
fwait
xchg
adc
call
outs
jns
fwait
mov
ret
xor
test
push
je
mov
adc
lods
jmp
imul
jmp
test
mov
fst
inc
iret
cld
imul
mov
leave
(bad)
mov
fs
jae
push
ja
lea
jg
jb
or
inc
pop
mov
xchg
imul
jge
pop
test
pop
les
cmps
repz
imul
adc
xchg
rol
push
xchg
xlat
cmp
sbb
jle
jge
jb
(bad)
mov
xchg
repz
push
cmps
jge
push
call
shl
or
or
int3
mov
jnp
adc
add
sub
outs
popf
popa
stos
data16
pusha
mov
mov
mov
jbe
loope
add
movs
cmp
or
lock
push
cs
scas
mov
xchg
pushf
jns
sar
das
mov
dec
add
loope
add
gs
mov
sub
dec
cwde
jb
mov
rep
ins
pop
cmp
adc
adc
es
aaa
dec
mov
scas
sbb
stos
push
bound
ja
std
mov
test
cs
and
adc
enter
popa
mov
(bad)
in
cmp
neg
jae
fistp
dec
sub
sbb
push
inc
mov
shl
stos
pop
dec
retf
xor
sbb
sub
lds
push
cdq
lahf
enter
and
clc
lods
in
out
in
jmp
or
or
jne
sti
fild
xor
das
mov
int3
neg
frstor
jp
sub
lods
mov
in
push
test
mov
scas
(bad)
pop
imul
mov
ret
cmc
fiadd
or
lods
int3
xor
mov
(bad)
adc
stc
fild
push
cs
jp
push
mov
ret
cmc
mov
(bad)
(bad)
cmps
push
cmp
fidiv
sbb
push
sub
xchg
imul
mov
sar
dec
js
cli
inc
std
mov
data16
pop
add
ins
fisub
push
das
das
lea
cmp
lock
and
pop
xor
popf
cmp
ins
sbb
sub
jb
add
mov
sub
out
nop
mov
popf
dec
repnz
jno
int
outs
inc
xchg
push
jne
pop
(bad)
ror
in
and
dec
hlt
jns
dec
call
je
ffreep
in
push
mov
(bad)
int3
cli
adc
icebp
xor
cli
pop
popf
mov
mov
push
inc
stos
retf
or
mov
pop
mov
in
adc
sar
loopne
mov
sbb
jae
retf
call
jmp
mov
loopne
inc
push
mov
pop
out
mov
mov
ja
cmp
push
mov
stos
pop
mov
push
cld
xor
or
sub
sub
sar
ss
or
(bad)
das
add
ror
add
xor
repz
int3
inc
sbb
test
cld
mov
sbb
icebp
xor
lea
mov
iret
and
add
xor
out
(bad)
ret
lods
in
cmp
mov
mov
iret
pop
or
sbb
adc
and
xchg
std
push
and
pop
movs
mov
sbb
loope
push
loope
and
(bad)
or
mov
xor
(bad)
and
pop
push
jl
int
dec
sbb
xchg
xchg
mov
sar
push
test
lds
cs
sbb
ret
mov
xchg
into
push
jp
sti
jle
lea
test
inc
xor
aaa
mov
adc
sar
ret
sub
xchg
out
mov
mov
mov
test
pop
or
ret
adc
(bad)
sar
mov
pop
retf
jmp
add
jne
push
jmp
test
jmp
out
fstp
cmp
std
lds
xchg
xor
pop
add
cmp
sub
(bad)
sub
imul
xchg
int3
retf
in
retf
inc
mov
sub
push
pop
mov
test
gs
movs
add
fidiv
(bad)
retf
mov
add
pop
jmp
ds
pushf
mov
add
stc
inc
pop
imul
cmps
(bad)
(bad)
dec
(bad)
shr
sub
sbb
jnp
inc
mul
mov
sahf
call
(bad)
jl
cwde
call
mov
mov
and
into
add
adc
sub
pop
fistp
xor
jno
bound
push
fcmove
mov
sub
scas
imul
int
call
in
(bad)
fisttp
pop
adc
mov
cdq
jecxz
jge
pop
ret
and
in
add
dec
not
jmp
xor
cli
test
jbe
cld
rcr
mov
ins
pop
and
push
lea
xchg
mov
cmc
pop
cwde
pop
jo
jns
shl
jmp
adc
int3
aam
or
shl
jmp
scas
out
push
xor
in
xchg
movs
and
sbb
cmp
mov
cmp
and
das
jmp
idiv
js
lds
das
xor
cmc
movs
aam
dec
sahf
mov
push
ss
inc
ret
out
imul
sub
repnz
cmc
pop
cmps
test
or
push
adc
mov
pop
mov
push
movs
add
and
outs
add
ins
jmp
cmp
cmp
test
jbe
nop
cli
sbb
aad
fadd
mov
scas
xchg
fcomp
or
adc
sbb
mov
pop
mov
push
and
push
inc
push
push
pop
outs
es
jbe
and
xchg
xor
loope
ja
(bad)
int
in
and
and
push
push
adc
daa
cld
or
jbe
sbb
daa
mov
fdivr
ret
mov
pop
adc
out
pusha
push
outs
fnsave
int3
jmp
push
push
adc
push
adc
cmp
fimul
mov
dec
push
add
(bad)
mov
mov
das
or
cli
push
xor
adc
jg
test
scas
adc
mov
mov
pop
push
loope
lods
jcxz
dec
(bad)
ror
cmp
out
aas
(bad)
div
jp
inc
clc
and
in
xchg
sub
add
push
xor
cmp
rcr
das
push
mov
add
inc
add
dec
adc
push
push
pop
add
fcomp
mov
cmp
fs
sti
push
scas
repnz
not
in
aam
cmp
pusha
dec
shl
fwait
mov
xor
push
sbb
retf
js
xchg
mov
mov
xor
dec
jo
xor
call
je
test
lds
fs
jle
sahf
movs
sub
dec
jecxz
pusha
add
scas
lods
ins
js
ss
push
stos
retf
(bad)
fsub
cmp
enter
push
add
fidiv
jle
inc
stc
scas
or
retf
xchg
lahf
pop
out
cmp
sub
repz
mov
mov
(bad)
pop
mov
xchg
pop
jb
(bad)
fist
lods
adc
arpl
sbb
xor
and
and
pop
xor
push
xor
aaa
dec
out
pop
push
movs
xor
rcr
mov
cli
iret
in
mov
and
idiv
es
mov
add
jl
pop
pop
adc
inc
stos
mov
in
popa
cdq
pop
cmp
push
inc
jmp
fwait
clc
and
mov
jno
inc
lds
mov
sbb
cmc
leave
imul
in
and
or
adc
xchg
ss
retf
test
mov
cmp
retf
mov
mov
int3
xor
sub
mov
pop
adc
xchg
add
and
mov
mov
ins
je
popa
xchg
jmp
adc
mov
movs
lds
inc
mov
lods
or
scas
out
adc
gs
and
jo
inc
rcr
inc
mov
or
out
fld
mov
and
pop
pop
ins
(bad)
dec
jno
dec
cmps
fld
lods
xlat
or
xlat
enter
xchg
push
movs
jp
pop
and
not
data16
js
mov
mov
fisttp
mov
sub
adc
inc
cmp
popf
loopne
pusha
or
in
dec
and
push
out
enter
add
jle
jg
dec
adc
lahf
pop
jae
sbb
call
cmp
shl
pop
in
iret
ret
dec
inc
fcmovnu
mov
pop
call
mov
ins
pop
int3
test
scas
adc
adc
push
adc
pop
add
out
pop
and
mov
stos
and
rol
dec
pop
out
mov
je
into
and
xchg
mov
mov
add
lahf
add
(bad)
mov
test
(bad)
xchg
call
mov
es
dec
cmps
inc
pop
test
vpmadcsswd
(bad)
fwait
jae
fs
inc
mov
push
(bad)
popf
add
push
imul
cdq
dec
sbb
mov
jp
cmp
adc
fcom
bound
and
sbb
push
fimul
ror
mov
sbb
cs
push
pop
addr16
loopne
mov
add
jmp
dec
pop
pop
jb
sbb
or
pop
lds
mov
cmp
frstpm(287
cld
mov
adc
jp
xor
std
sub
jl
shr
inc
push
inc
cmp
cmp
add
jns
and
lds
test
(bad)
cmp
pop
jecxz
fsubr
stos
add
lods
push
leave
and
out
out
(bad)
out
add
repz
jecxz
dec
pop
fisttp
adc
push
mov
daa
stos
std
mov
pop
pop
pop
sahf
mov
call
mov
and
dec
rcr
add
out
test
sti
add
loope
cmc
cli
in
sbb
mov
into
pusha
push
mov
mov
mov
jg
popa
xchg
xchg
add
dec
cmp
(bad)
out
and
dec
add
sbb
jne
jb
pop
inc
stos
dec
ss
add
pop
mov
mov
fwait
test
dec
outs
jle
cld
add
aad
outs
mov
test
in
fisttp
aam
mov
addr16
sbb
lods
pop
fcmovnbe
outs
cmp
mov
sahf
jbe
(bad)
retf
fnstsw
cmp
out
rol
test
scas
in
fwait
in
hlt
loope
hlt
jne
in
xchg
inc
loope
add
sbb
mov
pop
clc
or
mov
mov
ins
pushf
push
mov
adc
mov
push
pop
jno
aas
add
stos
sbb
outs
xchg
and
int3
sar
imul
(bad)
div
loop
lea
daa
push
das
scas
into
dec
(bad)
in
cmp
les
ret
jne
push
mov
and
mov
retf
pop
stos
mov
popa
pop
lds
xlat
paddusw
jae
xchg
ja
nop
popf
cli
sbb
in
je
add
push
fidiv
cld
push
scas
push
add
pusha
and
das
push
inc
mov
fsubr
or
into
xchg
sbb
jl
mov
bound
pop
cwde
sahf
dec
or
adc
inc
out
sbb
jecxz
pop
scas
and
std
mov
cmp
test
inc
push
ret
lds
(bad)
jmp
movs
fld
pop
test
adc
fisub
sub
mov
clc
hlt
and
xchg
mov
and
inc
cmp
movs
push
mov
pop
scas
adc
xor
loope
xchg
jmp
repz
mul
dec
hlt
jge
add
push
push
inc
mov
movs
and
xor
(bad)
fild
push
push
jmp
fist
or
mov
jp
cmp
inc
aad
fimul
ds
add
(bad)
lds
jmp
pop
rcl
daa
int3
pop
pop
dec
xchg
ror
cmp
push
push
and
ss
out
test
ja
inc
and
xchg
sub
pushf
enter
ins
test
ds
mov
pop
sbb
or
mov
sub
dec
mov
rol
loope
clc
call
mov
test
push
loopne
movs
mov
fldenv
pop
pop
in
rol
shl
and
and
enter
in
pop
xor
addr16
out
aam
xchg
pop
cmc
ins
jmp
push
dec
jb
cmc
xlat
adc
xchg
mov
cmps
or
xlat
mov
(bad)
loopne
data16
mov
das
nop
bound
(bad)
into
xlat
aas
sub
adc
sub
dec
sub
stos
lock
(bad)
mov
adc
sbb
inc
and
pop
xchg
sbb
sbb
dec
add
je
clc
arpl
cmp
sbb
imul
xchg
imul
xchg
and
lods
mov
inc
test
int
lods
add
ss
mov
jecxz
sub
aad
sbb
icebp
xor
sub
xchg
loopne
mov
sbb
fs
icebp
or
lock
out
(bad)
cli
daa
popf
lea
xor
push
dec
ret
retf
into
ja
push
mov
cdq
jo
and
imul
cmps
fwait
mov
into
or
hlt
pop
outs
test
fiadd
or
(bad)
cmps
int3
sub
cmp
inc
fisub
push
test
mov
sbb
in
push
sbb
sbb
(bad)
dec
pop
mov
jp
shr
daa
xor
ins
shl
mov
mov
xchg
fcmovnb
pop
push
adc
xor
clc
fld
(bad)
js
hlt
dec
dec
or
and
imul
shl
xchg
ja
jg
jmp
outs
pusha
push
inc
jge
sbb
pushf
lea
adc
es
out
ret
mov
adc
xor
in
gs
popf
retf
not
stos
ds
ds
push
xor
xor
add
dec
inc
das
dec
scas
cli
icebp
or
dec
adc
dec
adc
sub
sub
sub
test
lods
data16
mov
es
(bad)
adc
aam
pop
pop
loopne
mov
loopne
(bad)
loop
sbb
add
inc
shl
sbb
jne
arpl
adc
mov
mov
hlt
outs
pusha
push
jg
or
out
jmp
jg
jge
out
inc
cmp
cmp
js
loop
sbb
outs
jge
mov
mov
fisttp
ja
mov
dec
sahf
fistp
rcl
outs
fcomp
jle
cmp
mov
out
xchg
ret
push
and
inc
cmp
jg
loopne
je
(bad)
xchg
cmps
add
iret
addr16
mov
je
aam
inc
or
or
pusha
adc
mov
push
pop
mov
jmp
imul
jecxz
sub
mov
pop
or
add
loop
shr
xlat
out
int3
or
mov
or
or
retf
dec
cwde
xor
add
cwde
jle
xchg
imul
mov
cmp
stc
or
cmp
mov
jge
into
retf
add
cld
mov
js
std
jmp
add
or
mov
sub
and
pop
imul
xor
(bad)
loopne
lods
and
imul
pop
inc
hlt
jb
and
xchg
scas
jg
add
jns
out
inc
or
sbb
cmp
sbb
and
ja
loop
(bad)
repnz
ja
pushf
jno
inc
pop
outs
jmp
or
or
ror
loope
jp
jns
mov
jnp
in
cmps
mov
and
or
arpl
(bad)
push
fsubp
out
out
mov
add
push
sbb
add
or
or
sbb
das
sbb
lods
movs
push
pop
or
hlt
outs
es
xor
movs
xchg
xchg
shl
mov
mov
adc
adc
and
adc
int
sbb
adc
dec
mov
pushf
mov
push
mov
fdiv
out
fdiv
and
push
mov
inc
sti
jg
outs
ins
push
and
je
fiadd
and
arpl
xor
push
xor
repnz
es
mov
xor
icebp
xor
sub
pushf
cmps
sub
push
nop
mov
retf
mov
lods
or
adc
cli
inc
nop
cmp
xor
adc
sub
inc
out
mov
mov
iret
jbe
call
adc
imul
mov
aam
jb
xor
ret
repnz
add
imul
jb
data16
lods
pop
jmp
dec
in
mov
or
popa
mov
mov
je
jecxz
rol
mov
jb
dec
jg
pop
jo
add
mov
mov
xchg
adc
cmps
jbe
sbb
out
jmp
scas
mov
adc
imul
mov
mov
cmc
adc
ja
adc
fadd
fisubr
dec
sbb
pushw
fist
sub
iret
adc
jae
and
inc
add
aas
xchg
pop
sub
loop
adc
ja
or
pop
sub
mov
mov
outs
gs
rol
bound
mov
jl
pop
jl
int3
mov
movs
hlt
enter
sbb
pop
jg
add
(bad)
shl
mov
xchg
call
fwait
inc
dec
xchg
neg
dec
push
mov
sub
ja
outs
sti
das
fsubp
stos
add
adc
pop
xchg
call
enter
mov
sbb
dec
mov
clc
push
xlat
adc
and
adc
cdq
cmc
aad
mov
or
pop
nop
cmp
jl
scas
mov
neg
test
jne
push
(bad)
mov
icebp
inc
(bad)
sbb
jbe
nop
adc
cmp
popf
sti
outs
mov
das
cwde
loopne
iret
jbe
fsubr
shr
mov
fnstsw
xchg
movs
push
in
imul
dec
outs
dec
xchg
xchg
lods
(bad)
push
mov
mov
lds
push
shr
aam
icebp
fcmovu
xor
mov
xchg
(bad)
and
push
ror
push
repz
lock
fnstenv
shr
mov
mov
imul
cld
into
xchg
rcl
or
mov
idiv
xchg
sbb
gs
xchg
into
xor
sub
les
ja
addr16
arpl
pop
scas
(bad)
mov
sar
xchg
loopne
int3
mov
(bad)
pop
ss
sub
adc
xchg
or
aam
or
fs
inc
addr16
sub
in
inc
push
mov
xor
add
sbb
repz
repnz
jno
lods
mov
pop
arpl
and
push
dec
int3
or
adc
imul
lahf
mov
aam
(bad)
in
ret
ss
lock
ret
cmps
jecxz
jo
sahf
jbe
xchg
shl
push
sub
xor
cwde
or
and
(bad)
retf
and
(bad)
sub
dec
out
add
sbb
repz
push
scas
ja
scas
cmp
fwait
pop
imul
pop
pop
xchg
adc
fdivr
aaa
fld
ds
dec
test
out
xchg
xor
movs
mov
lock
cmc
mov
shr
ds
or
mov
(bad)
sbb
(bad)
dec
push
xchg
cld
movs
clc
sub
inc
cli
cmp
sub
repz
mov
mov
ficomp
fistp
iret
xchg
jbe
cdq
and
es
dec
add
shl
jl
mov
add
je
(bad)
fldcw
jmp
test
pop
xchg
out
xor
xlat
(bad)
dec
or
fmul
pop
mov
loope
mov
and
hlt
inc
xor
cmp
arpl
adc
xchg
leave
sub
lods
scas
xor
mul
fisttp
push
dec
fdiv
add
inc
pop
std
test
aas
leave
shr
sbb
aaa
sti
adc
out
push
aaa
mov
rcl
int
xlat
test
lock
nop
sbb
mov
retf
in
xchg
(bad)
in
pop
bound
push
in
(bad)
cmp
repz
(bad)
and
mov
fmul
and
cmp
ror
aas
xor
mov
lods
arpl
pushf
sub
ja
in
add
sbb
mov
leave
push
mov
xor
stc
jecxz
jmp
lods
xor
add
pop
outs
mov
lods
sbb
add
aad
fisttp
mov
js
ds
inc
pop
jl
inc
div
test
sub
out
lods
mov
mov
lock
cmp
popf
or
movs
jmp
xchg
es
shl
rcr
(bad)
dec
ret
lods
fcomi
scas
pop
out
jno
ds
popa
inc
mov
jae
adc
daa
neg
and
in
mov
in
test
cwde
jge
aad
in
hlt
inc
movs
mov
mov
in
cmps
jbe
and
test
lock
scas
loope
test
pop
pop
sbb
nop
mov
icebp
mov
and
xchg
jb
xor
(bad)
mov
out
popf
or
leave
sbb
rol
pop
xor
adc
imul
outs
dec
or
push
repz
inc
jg
mov
mov
mov
cs
scas
stc
sub
popf
fs
mov
xor
bound
cmp
mov
sub
popf
push
sub
cwde
in
js
mov
xlat
arpl
test
ror
neg
push
jge
push
mov
ins
and
je
add
sub
aam
popa
xchg
scas
xchg
xchg
dec
loope
pop
outs
mov
mov
das
add
cmp
adc
sti
fist
or
int
neg
imul
std
jg
mov
xchg
adc
stos
frstor
arpl
inc
push
and
adc
popf
dec
out
fisubr
push
xchg
mov
imul
ficomp
pop
sti
add
in
sbb
adc
jl
sti
inc
je
outs
shl
and
leave
jmp
stos
call
or
sti
push
out
scas
or
inc
pop
mov
aam
xchg
or
js
pop
sub
and
into
add
scas
cmp
loope
mov
test
rcr
mov
or
pop
loop
das
ret
in
std
or
ret
pop
iret
in
mov
out
xchg
and
jb
dec
jno
in
int
scas
fsub
int3
xchg
mov
jb
xor
pop
rcr
dec
out
ds
cmp
ret
stos
outs
mov
rcl
rol
aas
or
xchg
or
mov
mov
inc
inc
or
xor
mov
dec
and
jmp
aas
mov
mov
add
test
leave
add
or
xor
push
mov
stc
fwait
or
pop
lock
leave
push
in
jae
xchg
ror
mov
mov
dec
call
push
and
inc
push
repz
ret
xor
dec
in
outs
cmp
mov
ins
push
pop
xchg
out
rcl
xor
mov
dec
cmp
aam
xchg
pusha
dec
ret
inc
es
jbe
enter
jmp
mov
xor
push
icebp
outs
inc
sub
sub
dec
je
push
int
cmc
out
inc
dec
mov
xchg
psubsw
cmp
and
iret
dec
jbe
es
addr16
in
push
mov
shl
xor
push
mov
outs
jnp
push
push
push
cmps
dec
movs
loop
xchg
dec
adc
xchg
push
out
daa
lods
dec
push
stos
sub
jecxz
sbb
fcmovu
add
fs
inc
push
stc
not
fcmovnb
call
ss
dec
mov
stos
cmps
mov
push
out
pop
aam
shl
aam
data16
push
imul
jnp
das
mov
push
cmp
pushf
pop
xchg
bound
push
mov
cmp
sahf
mov
sbb
repnz
jmp
movs
jmp
loop
ficomp
test
add
mov
fdiv
mov
loopne
xlat
aad
mov
lahf
or
mov
leave
dec
push
sbb
rcl
jo
and
sub
arpl
cmp
loopne
adc
adc
cli
inc
mov
idiv
cmc
aaa
popa
fs
loope
(bad)
cmp
imul
(bad)
scas
xchg
cs
xchg
sbb
shl
cmovns
out
sbb
add
call
shr
mov
push
mov
movs
add
xchg
jb
xchg
imul
(bad)
and
std
mov
mov
(bad)
je
aad
and
mov
adc
xor
mov
cdq
js
and
jp
add
iret
mov
sub
cmp
je
xchg
push
cmp
mov
mov
jb
push
push
pop
pushf
jge
sub
mov
jg
adc
sbb
and
pop
inc
jno
and
imul
push
lock
es
jb
pop
cmp
test
jo
sub
and
ror
jl
jmp
push
and
(bad)
mov
and
out
rcr
adc
dec
xor
jmp
cmp
fdivr
adc
pop
xor
dec
aad
inc
mov
add
not
ret
jge
xor
test
inc
jmp
dec
inc
outs
lods
push
push
dec
cld
outs
and
and
push
sbb
fs
push
into
xchg
(bad)
dec
mov
cs
adc
inc
jbe
sub
push
cmp
aam
cs
push
xor
add
(bad)
test
pop
mov
sbb
jecxz
sbb
mov
pop
jl
and
xor
ins
pop
je
jl
arpl
ret
adc
repnz
pop
xchg
mov
int
sbb
hlt
push
imul
xor
dec
jno
cmp
mov
test
adc
xor
jmp
pushf
cmp
je
mov
mov
(bad)
mov
add
dec
lock
mov
xchg
jmp
cld
adc
mov
jge
aas
adc
lea
xchg
jo
push
jbe
adc
sbb
nop
sbb
btc
fsubr
imul
push
mov
xor
xor
popf
repz
add
cli
cmp
daa
lea
sbb
shl
mov
push
cmps
sahf
cmovg
xchg
mov
test
pop
mov
push
xchg
inc
ins
nop
test
scas
or
sbb
xchg
popf
(bad)
adc
out
inc
(bad)
xor
push
lahf
sub
fisubr
jo
test
(bad)
sti
movs
fnstcw
xchg
cmp
enter
test
movs
dec
test
sbb
xchg
dec
push
call
out
mov
jbe
fstp
inc
mov
jecxz
sbb
mov
jae
and
mov
dec
or
mov
cmp
cmc
cmp
lock
pop
(bad)
(bad)
stc
sbb
jge
retf
cmp
jno
xor
pop
out
clc
jns
fmul
mov
add
cmps
inc
mov
retf
push
sahf
(bad)
rol
add
cli
mov
data16
std
mov
push
ret
test
(bad)
xchg
dec
stos
sbb
xor
pop
push
ds
jns
(bad)
sub
cmp
sub
sahf
in
sbb
stos
ins
test
mov
adc
sub
cmp
and
cwde
inc
mov
add
ret
push
push
cdq
xchg
mov
pop
mov
mov
mov
push
xor
lods
inc
pop
jno
cmp
dec
rcl
add
neg
mov
lods
mov
adc
ds
es
daa
dec
jno
push
outs
sbb
mov
xchg
xchg
cmps
(bad)
sahf
xchg
cmp
test
call
adc
push
or
stc
sub
mov
mov
pop
shl
xor
pop
mov
fst
aaa
add
loop
nop
pushf
int3
inc
aas
dec
mov
daa
(bad)
push
sbb
xchg
jb
(bad)
mov
and
jbe
fisub
mov
pop
mov
call
push
mov
adc
xchg
shl
push
mov
sbb
jae
xchg
mov
je
call
sub
sbb
dec
mov
jno
test
cmovnp
adc
es
sub
xor
in
xchg
(bad)
adc
enter
jnp
pop
dec
pop
mov
add
mov
xchg
in
rcl
sahf
and
or
adc
call
sub
push
mov
inc
lds
push
imul
xchg
cmp
ds
gs
cmps
dec
xor
sti
call
push
sbb
mov
xlat
inc
dec
xor
(bad)
mov
mov
jbe
icebp
mov
mov
add
xor
fisttp
xchg
mov
cmps
(bad)
popf
ja
clc
inc
imul
popa
xchg
dec
in
jae
ds
aad
mov
call
mov
push
adc
mov
sub
ss
daa
cmp
inc
jecxz
mov
xchg
mov
ins
pop
inc
stc
ins
outs
pop
xchg
arpl
jb
push
fwait
or
add
cmp
sbb
or
xlat
mov
repnz
or
cmp
mov
cmp
adc
pushf
retf
sbb
loope
sbb
fnstenv
pop
mov
dec
mov
adc
test
sbb
push
ror
lea
push
cmps
push
push
cmc
fdivr
push
jge
(bad)
and
cmps
cmp
cdq
fadd
adc
ret
cmp
cmp
movs
and
out
cld
adc
and
and
and
xor
cmp
xchg
jle
out
add
out
cli
lock
cld
hlt
dec
pop
and
leave
nop
test
jp
ror
mov
enter
rep
cli
fild
add
out
(bad)
mov
retf
push
sub
cdq
jnp
inc
aaa
inc
sub
mov
in
stos
jg
lea
shl
cmps
mov
call
shl
sahf
or
jb
sub
sub
repz
xchg
daa
enter
inc
in
shl
cmp
in
lods
add
mov
ss
out
std
adc
retf
cs
xchg
dec
jb
xlat
call
adc
mov
cmp
sub
sub
and
or
add
sahf
fisub
cmp
rcr
xchg
lahf
sub
push
call
es
call
add
xchg
je
ds
cmp
(bad)
fcomp
sub
lock
jae
ror
je
ficomp
stos
jle
ja
push
add
push
mov
icebp
ret
mov
push
xchg
jle
sbb
pop
imul
adc
xor
jae
add
loopne
ror
dec
cmp
gs
adc
jns
stos
mov
dec
sub
sub
mov
arpl
leave
mov
sbb
pushf
pop
out
cmps
repz
aas
or
dec
ror
out
out
sub
xchg
and
sub
sti
rol
jge
jge
mov
inc
jno
mov
in
stos
pop
mov
inc
scas
add
outs
inc
aam
or
retf
pop
xor
lea
mov
sbb
pop
jo
clc
hlt
fmul
lahf
addr16
sbb
xor
mov
aas
pop
dec
and
pop
xor
dec
bound
test
call
aam
add
popf
xchg
std
adc
addr16
fisub
xor
addr16
(bad)
arpl
inc
ds
sub
cli
sbb
and
sub
in
jecxz
sbb
mov
retf
push
dec
aaa
in
pop
loopne
es
sti
imul
jo
daa
push
and
inc
push
push
bndldx
pop
jecxz
xchg
mov
inc
daa
mov
mov
outs
mov
cmc
pop
sub
call
push
jae
js
(bad)
frstor
test
xchg
fst
push
lahf
fistp
repz
inc
sbb
inc
(bad)
sar
xchg
popf
popf
pop
jge
adc
shl
push
ret
adc
add
sub
ja
pusha
inc
jno
popa
push
jns
popf
pop
xor
dec
data16
std
push
add
xchg
fisubr
mov
pop
dec
adc
retf
cmova
pusha
xor
test
cld
stc
mov
stos
add
sbb
pop
xor
cmps
pop
push
dec
jnp
cs
inc
imul
mov
leave
mov
xchg
mov
les
sbb
iret
xchg
mov
push
aaa
mov
jg
shr
or
mov
cwde
js
mov
icebp
idiv
out
or
lods
sbb
cmps
mov
movs
pushf
fist
xor
sub
popf
adc
(bad)
inc
and
dec
pop
xor
mov
jbe
add
addr16
dec
aas
repz
scas
inc
push
out
pop
mov
loope
out
(bad)
sbb
mov
jmp
ins
js
lea
clc
xchg
mov
mov
xchg
add
leave
out
inc
mov
adc
cmp
or
dec
call
iret
rcl
stos
ret
fs
add
mov
add
iret
cmps
mov
stos
inc
xchg
jne
mov
sub
popa
cmps
loope
and
jnp
fidiv
ficomp
sub
call
mov
enter
test
push
inc
add
fwait
cs
push
add
mov
fstp
mov
pop
gs
push
es
outs
push
mov
adc
sahf
into
push
add
ins
xchg
std
jnp
inc
ins
fucomip
jno
cmp
adc
or
add
pop
inc
mov
dec
fst
jns
xor
jae
xchg
mov
aas
sbb
mov
mov
test
div
rcr
into
xor
pushf
mov
leave
and
mov
nop
pop
jns
sub
fs
mov
loopne
cld
imul
shl
pop
loope
fsubr
call
popa
and
push
mov
pushf
add
jmp
cdq
mov
data16
cmc
shl
xchg
sar
out
xor
mov
out
sub
mov
movs
test
dec
add
pop
rcl
ds
movs
mov
or
inc
in
jae
arpl
retf
xchg
sbb
mul
lods
es
jl
test
out
clc
movs
daa
movs
stos
(bad)
sub
push
rcl
push
cdq
fisub
dec
pop
loope
pushf
adc
stc
push
ret
retf
les
stos
inc
mov
inc
cmc
adc
mov
addr16
and
inc
enter
ret
repz
in
and
fwait
push
leave
xchg
in
push
jl
mov
jmp
(bad)
pushf
mov
lods
fxtract
xchg
ss
retf
test
pop
stos
arpl
adc
rol
xor
inc
jecxz
out
ss
fsubr
jmp
cld
xchg
std
call
add
scas
pop
xchg
mov
aam
stos
inc
push
xor
fst
xor
sbb
pop
adc
or
in
jecxz
aaa
sbb
test
imul
or
pop
add
push
pop
fdivr
icebp
cmp
cdq
lea
mov
div
outs
sub
int3
push
jmp
inc
mov
cli
idiv
push
mov
lods
sbb
icebp
shl
jecxz
ss
cld
mov
mov
mov
and
sub
push
sbb
mov
scas
loope
fisubr
xchg
xor
mov
and
mov
lock
loop
jle
dec
push
cmps
inc
ins
inc
mov
mov
push
dec
and
sub
cld
sbb
call
cs
mov
int3
and
pop
(bad)
shl
call
adc
js
xchg
addps
xchg
jge
in
add
and
daa
fidiv
jbe
or
shl
mov
les
das
sahf
call
out
and
add
cmps
xchg
(bad)
retf
add
sbb
add
fld
stos
daa
int
ja
adc
retf
push
xchg
inc
into
cmp
sub
fidiv
mov
push
imul
add
inc
pop
rcl
add
imul
mov
jmp
mov
ds
mov
push
arpl
push
push
sbb
jmp
jecxz
or
lds
aad
inc
jno
inc
cwde
daa
fwait
ins
cmp
inc
dec
push
mov
fcmove
das
and
ja
add
dec
and
xchg
inc
pop
adc
push
ja
jmp
sti
call
dec
pop
jmp
push
imul
jge
sbb
jle
scas
push
faddp
fmul
test
lods
mov
sub
ja
adc
or
(bad)
push
and
jl
stos
cmp
fiadd
jo
ror
out
addr16
(bad)
cs
jl
ficomp
push
xor
inc
sti
out
or
push
ffree
push
cld
push
lock
adc
push
or
push
rcr
add
xor
and
cmp
in
out
movs
fst
into
(bad)
repnz
xor
stos
jg
cmp
lods
data16
ret
loopne
loopne
dec
push
add
fnstcw
adc
adc
cs
fistp
jl
push
lock
test
push
int3
(bad)
cmp
sbb
lods
and
inc
stos
enter
pop
retf
aam
daa
pop
ret
outs
outs
mov
stc
fwait
jne
cld
push
cld
jnp
fmul
sub
jge
cmps
add
(bad)
fidivr
sub
push
push
les
loop
jmp
xor
push
sub
and
sub
popa
sbb
or
mov
rcr
lods
mov
into
inc
fcomp
ins
popf
or
cmc
push
jmp
hlt
repz
fisubr
(bad)
mov
loope
jno
test
cmp
pop
mov
outs
or
add
mov
or
pop
cmovnp
popf
into
sbb
fcomp
push
js
rcl
dec
cmp
fsubr
jo
mov
sbb
sti
push
jnp
mov
mov
aas
mov
sub
clc
hlt
pop
push
ins
das
or
ror
mov
mov
movs
sub
jae
mov
scas
push
lods
adc
(bad)
xchg
mov
cmp
add
pop
mov
stos
inc
sti
sahf
pop
and
aad
not
sbb
stos
cmc
sbb
and
inc
push
adc
jmp
push
push
arpl
cmp
stos
xchg
push
and
jg
rcl
sti
div
adc
in
sub
clc
or
jge
(bad)
fnstenv
sti
push
add
sub
popf
pusha
xchg
daa
cdq
cdq
mov
push
push
lods
sub
test
push
sbb
lds
nop
inc
add
das
test
dec
xor
dec
dec
mov
push
(bad)
jae
adc
pop
inc
and
add
cwde
dec
ins
popa
aad
mov
pop
sti
outs
jge
mov
(bad)
mov
out
push
or
cli
cmp
ss
call
add
jmp
adc
sbb
rcr
faddp
rcl
int
or
jg
neg
mul
cdq
or
dec
std
mov
popf
and
fisubr
mov
js
cmc
dec
xchg
fdiv
mov
je
repnz
pop
and
enter
dec
test
jle
push
adc
adc
(bad)
movs
sti
call
mov
mov
adc
loop
xchg
and
push
pop
sbb
out
jae
mov
jo
push
data16
or
pop
jo
shl
dec
lahf
mov
xchg
inc
adc
fidiv
adc
in
sub
or
jmp
retf
popf
daa
cdq
loopne
adc
jle
in
fidiv
ret
xor
cdq
in
out
pop
adc
loop
mov
pop
hlt
push
pop
or
fsubr
cmp
jo
fcmovu
xor
jmp
rcr
xor
cdq
mov
cwde
movsx
iret
cdq
jmp
gs
test
outs
(bad)
jmp
add
sbb
and
jo
out
retf
sbb
or
popa
mov
push
dec
mov
push
inc
lock
pmuludq
hlt
or
sbb
and
pusha
jle
int
jmp
jno
sub
xchg
enter
and
cmp
popa
sti
sbb
pop
aas
jbe
pop
cmp
jp
mov
ret
jb
outs
adc
aam
clc
jmp
mov
repz
arpl
addr16
push
and
sub
(bad)
mov
mov
xchg
jns
push
lods
sub
cmps
xchg
inc
mov
lea
neg
pop
repz
sub
aaa
jle
icebp
(bad)
cmp
xchg
ret
lods
jmp
mov
xchg
pop
loopne
push
cli
adc
cdq
cmp
popa
pop
outs
push
ret
push
mov
adc
push
xor
cmp
test
aam
sbb
je
mov
sub
out
xchg
pop
popa
cld
fst
add
inc
rol
sbb
cwde
icebp
jb
and
cmp
pop
inc
inc
push
mov
in
frstor
in
mov
popa
dec
dec
aaa
mov
add
jb
mov
ins
fisub
fdivrp
xor
add
push
or
test
mov
add
popa
pop
iret
stc
outs
and
and
sub
popa
repnz
mov
in
out
leave
and
jns
jp
imul
in
arpl
aad
cmps
ins
pop
fldcw
lods
test
ins
outs
int
jnp
scas
sub
or
pop
loop
jg
push
add
jmp
clc
cmc
xor
xchg
dec
out
lahf
call
adc
into
loopne
mov
jmp
(bad)
pop
add
xchg
out
dec
aad
sub
ficomp
popf
xor
mov
fisubr
or
mov
pop
mov
in
iret
jp
dec
ds
inc
ins
das
out
mov
mov
jnp
aas
shr
dec
je
repnz
iret
ins
loopne
cmp
xchg
sub
hlt
add
jbe
into
dec
and
pop
mov
xor
(bad)
jnp
mov
neg
mov
ficomp
and
sti
cli
jns
dec
lods
es
dec
jmp
in
jmp
pop
push
jecxz
sbb
add
mov
shr
icebp
jp
push
pusha
aas
stos
pushf
adc
xchg
sar
cmps
add
inc
xchg
je
push
mov
push
jp
dec
xor
int3
add
out
outs
mov
int3
jmp
sub
sbb
loop
pop
inc
cmp
fidiv
cmps
es
leave
mov
pop
mov
jae
das
sbb
sub
imul
and
sahf
mov
jecxz
repz
les
sub
push
imul
push
and
fdivp
cmp
std
lds
cmp
jo
aaa
sbb
xchg
and
lahf
cmp
call
popf
cdq
jo
arpl
jns
cmp
jge
lods
iret
xchg
sub
sub
ficom
nop
mov
aaa
xchg
ftst
sub
push
(bad)
adc
sub
adc
stos
or
popa
add
pop
and
out
xor
mov
pop
hlt
movs
js
movs
icebp
(bad)
enter
lock
pop
imul
imul
or
sar
adc
retf
inc
jp
dec
stc
sti
rol
jg
xor
out
dec
and
nop
adc
and
cmp
int3
mov
repnz
and
gs
sub
loopne
inc
mov
jb
add
arpl
lods
mov
sub
loope
inc
fisubr
mov
sub
mov
imul
popa
jle
mov
xchg
fstp
jnp
jecxz
add
es
stos
(bad)
cmp
mov
jmp
sbb
(bad)
icebp
test
sub
test
inc
mov
jmp
daa
(bad)
jbe
icebp
or
dec
shl
aas
mov
rcr
adc
cld
mov
cmp
mov
mov
jns
out
jae
ds
mov
add
shr
add
push
xchg
ins
popa
xchg
in
out
xchg
xor
loopne
repnz
ret
imul
adc
sbb
pop
xor
pop
mov
pop
cmp
cmp
mov
ffreep
jns
retf
jns
rol
les
aas
ret
clc
add
mov
retf
shl
adc
in
jp
dec
aaa
sub
inc
add
sar
adc
frstor
or
lods
pop
aaa
pusha
int3
adc
aaa
dec
cmps
cmp
retf
inc
pop
inc
movs
in
jmp
lds
push
fisttp
mov
rol
addr16
cs
mov
scas
jge
cld
call
pop
pop
test
retf
pop
push
sbb
and
pop
cmps
sbb
fild
(bad)
cmp
or
mov
jnp
adc
pop
pop
or
(bad)
enter
dec
sub
cmp
push
int3
clc
(bad)
aas
or
fstp
xchg
dec
stos
movs
scas
xor
xchg
shl
cmps
mov
adc
(bad)
sbb
test
out
jmp
add
pop
data16
jbe
xchg
push
push
sbb
in
pop
jno
xor
test
les
xchg
push
jl
xor
jnp
(bad)
sbb
xchg
cmp
clc
cmp
xchg
lods
(bad)
sbb
ret
dec
ins
add
clc
inc
push
movs
out
popa
fs
or
mov
stc
test
jno
jns
jb
imul
jns
nop
loopne
mov
int3
inc
xor
int
in
add
cmps
sahf
adc
inc
jge
daa
jg
fld
xor
call
xor
xor
or
pop
jnp
adc
pop
(bad)
cmps
fidivr
cmp
clc
cmp
clc
jl
jle
dec
xor
xor
cmps
test
leave
(bad)
pop
rcr
sbb
(bad)
xor
mov
mov
sub
int
xor
push
clc
jbe
out
adc
repz
lahf
dec
loop
sbb
xchg
sub
sub
call
icebp
jge
push
rcl
stos
push
pop
sbb
lods
cmp
div
cmp
dec
jo
adc
into
xor
cs
fsub
push
icebp
mov
out
inc
add
add
pop
in
(bad)
add
loopne
pop
pop
lea
pop
mov
movs
sbb
(bad)
out
cs
xor
mov
dec
adc
mov
in
sub
sbb
in
bound
fldenv
mov
mov
enter
mov
sub
mov
dec
jp
inc
adc
xor
ins
loop
inc
clc
sub
cmp
shr
cmps
fild
cmp
mov
std
or
and
ins
mov
mov
test
retf
xor
mov
loop
pop
sub
sbb
addr16
outs
mov
ins
test
stos
and
mov
aaa
cmp
mov
jnp
ins
mov
add
push
jg
pop
imul
in
sti
fs
ja
aam
push
xchg
imul
mov
int
sub
sbb
xchg
retf
lods
mov
inc
fcomi
das
push
loopne
sub
adc
lahf
mov
lods
enter
imul
movs
sar
scas
push
sub
mov
xor
xchg
xchg
test
div
pop
pusha
dec
(bad)
sbb
stos
mul
mov
sub
in
sbb
(bad)
cmp
or
retf
mov
adc
push
xchg
mov
popa
sbb
ret
xchg
loopne
jno
es
mov
inc
cli
xor
sbb
popa
test
jecxz
shl
push
mov
popf
mov
sub
test
dec
push
rcl
add
(bad)
(bad)
enter
mov
dec
out
jl
in
jbe
lahf
mov
sub
fdiv
cdq
sbb
sbb
xchg
fs
loopne
adc
sub
stos
fcomi
aaa
jnp
add
jg
mov
adc
sbb
aas
and
push
pop
test
adc
stc
repnz
int3
loope
clc
fstp
outs
xchg
push
cmps
(bad)
jle
and
pop
sub
loop
adc
push
addr16
cdq
scas
xor
or
ins
push
outs
retf
(bad)
out
xor
mov
cmp
scas
or
push
icebp
in
call
adc
mov
dec
inc
ret
rcl
mov
push
rcl
cmp
xchg
jmp
out
adc
cmps
push
in
lahf
fst
mov
jmp
stos
cmp
cmps
aad
adc
repz
pop
mov
call
pop
bound
mov
call
scas
mov
and
movs
jmp
test
mov
out
add
aad
xchg
sbb
mov
sub
mov
mov
lock
dec
ins
and
loopne
test
mov
loop
sub
es
fwait
mov
test
out
stos
mov
mov
loope
xchg
out
data16
dec
cmps
clc
or
hlt
cmp
imul
cdq
stos
mov
pop
pop
sahf
outs
out
or
call
in
xor
dec
and
aaa
mov
out
or
jb
sbb
jne
stos
inc
into
mov
mov
mov
xchg
faddp
sub
nop
lods
(bad)
sti
inc
push
inc
pop
ja
loopne
sbb
push
(bad)
shl
or
mov
call
adc
sub
(bad)
mov
cmp
mov
push
loope
cld
sbb
int3
adc
es
ret
push
lahf
fisttp
in
jp
das
lock
(bad)
adc
dec
dec
push
xor
jle
pop
mov
lods
fdivr
push
cld
xor
out
xor
xchg
fiadd
dec
jecxz
sahf
stos
inc
idiv
xlat
jno
outs
enter
mov
push
popf
(bad)
xchg
scas
sar
mov
dec
jbe
mov
jae
add
daa
(bad)
pusha
and
idiv
ins
dec
repz
and
mov
stc
mov
jnp
aas
sub
mov
mov
dec
scas
popa
push
bswap
enter
imul
or
sbb
dec
or
stos
in
cld
jle
aad
sbb
xchg
bound
movs
popf
fwait
pop
scas
sub
fmul
add
push
cmp
pop
push
cmp
es
or
sti
jle
pop
(bad)
pop
push
cdq
pop
add
xchg
pop
mov
out
dec
popa
outs
sub
call
cmc
jo
sbb
aaa
or
dec
sub
ins
retf
ds
rcr
mov
aad
ins
sbb
out
cld
loopne
and
mov
mov
sub
xchg
jl
pop
push
jno
sbb
dec
jg
xor
in
leave
xchg
cdq
add
loop
call
imul
cmp
jnp
aaa
int
mov
mov
fs
outs
mov
push
in
mov
pop
retf
xchg
mov
mov
sbb
test
push
sub
mov
iret
push
xor
(bad)
jmp
mov
mov
cmp
ja
and
je
sub
fsubrp
xor
ret
lds
rcl
inc
mov
xor
fcom
jl
push
in
pop
div
frstor
imul
mov
addr16
and
nop
mov
hlt
loope
push
pop
inc
or
xor
test
icebp
clc
add
loope
or
cmps
sahf
jae
ss
or
sar
xor
mov
and
fild
jns
inc
ds
adc
mov
mov
inc
iret
xchg
test
mov
jnp
retf
retf
sub
cmp
rcr
out
mov
adc
push
mov
push
nop
dec
dec
pop
outs
add
push
sbb
(bad)
pop
scas
push
ins
addr16
and
sbb
dec
jb
mov
xchg
and
cwde
push
imul
out
mov
jbe
xchg
mov
not
jae
and
(bad)
das
push
mov
add
stc
in
dec
jge
push
out
aad
test
(bad)
or
imul
ret
shr
scas
loop
jns
mov
xchg
lods
fbstp
dec
scas
jp
and
movs
mov
ins
enter
mov
out
jp
jg
cmp
jg
scas
xchg
sti
std
mov
pop
scas
or
and
in
xor
fucompp
sub
push
std
or
sbb
inc
pop
pop
les
maskmovq
not
out
aam
fld
mov
xchg
mov
add
mov
call
rcl
inc
push
outs
test
pop
stos
push
aas
jo
push
inc
xor
movs
mov
cmp
movs
aaa
and
fsubr
mov
loopne
mov
and
jbe
fisttp
in
sub
icebp
xor
mov
out
(bad)
jne
jns
ror
or
fbstp
scas
pop
mov
sbb
int
cmp
sbb
push
and
lods
shl
out
sub
add
cmp
pop
pop
lods
adc
xor
ins
fdivr
sub
in
adc
dec
loopne
adc
clc
mov
jnp
mov
cdq
lods
adc
push
loopne
in
push
jnp
adc
jb
sub
dec
pusha
pop
xchg
div
or
dec
jecxz
ret
movs
pushf
aad
cmc
pop
dec
pop
loop
pop
in
arpl
cmp
les
pop
bound
adc
fistp
loop
pop
sub
scas
popf
push
dec
mov
mov
cmp
adc
std
daa
(bad)
scas
test
jmp
inc
stc
fstp
mov
les
cld
shl
xor
call
or
sub
in
adc
xchg
jae
xchg
dec
ror
sub
movs
sub
push
ret
in
out
sti
inc
push
mov
stc
lahf
sub
mov
mov
or
cmp
ror
add
gs
cdq
xor
jg
enter
and
inc
lods
aad
(bad)
in
aam
jnp
xchg
ret
cmp
push
xchg
imul
fwait
pop
js
inc
pop
adc
cs
xor
das
xchg
or
pop
or
mov
mov
mov
fisubr
lods
dec
test
(bad)
out
shl
mov
lahf
fst
mov
(bad)
mov
cmp
mov
fnsave
pop
call
or
je
mov
lods
and
xchg
xchg
fcomp
mov
and
or
ds
aad
mov
mov
mov
loope
out
popf
mov
add
sti
and
js
sbb
test
mov
sub
outs
fisttp
fsubr
jecxz
add
fstp
mov
pop
or
adc
and
xchg
mov
hlt
xor
dec
test
jp
pusha
adc
add
cmp
and
inc
loope
dec
fsub
test
test
out
(bad)
loope
xchg
out
shl
add
jo
inc
pushf
push
(bad)
mov
data16
mov
inc
xchg
ret
jb
and
mov
jae
push
push
sbb
or
pop
xchg
leave
mov
mov
rcl
xchg
fsub
xor
into
ret
int3
sbb
lea
inc
inc
mov
inc
in
loopne
dec
xchg
jl
jo
ror
cmp
fdivr
push
sbb
xor
mov
aad
hlt
repz
cmp
not
inc
movs
sub
into
scas
mov
cmp
add
adc
mov
xor
rol
dec
addr16
add
loope
lahf
sar
in
lahf
daa
call
sub
fsub
out
xchg
push
imul
popa
lahf
popf
xchg
mov
cmps
push
or
xchg
sub
bound
jae
cmp
dec
adc
fwait
mov
cmp
out
adc
push
sub
sbb
cmp
movs
pop
aad
adc
mov
call
mov
(bad)
adc
retf
jo
sub
xchg
jae
lahf
jns
movs
jmp
push
xor
stos
loop
ret
pop
push
push
cmps
sub
and
cwde
or
push
cmp
jge
lods
shl
and
popa
ins
aam
js
push
or
lea
fcmove
sbb
and
xchg
outs
sbb
jnp
pushf
fsub
sub
popf
pushf
pop
in
popf
xchg
test
ss
lods
inc
test
adc
cmp
xor
inc
dec
cmp
dec
mov
dec
(bad)
hlt
jo
out
jns
dec
sbb
and
jns
xor
adc
pop
inc
xor
and
loop
xor
jg
add
lahf
jbe
and
xor
add
(bad)
fdivr
inc
vmwrite
scas
adc
inc
test
xchg
lahf
and
or
aad
mov
mov
scas
stc
mov
movs
in
push
popf
shl
aad
std
dec
cmp
push
and
mov
inc
fsub
cmp
ret
dec
fadd
adc
adc
repnz
lods
lds
pushf
xor
xor
fnstenv
dec
xor
scas
sub
in
push
gs
stos
push
or
mov
mov
push
jns
in
mov
test
dec
xchg
mov
jnp
sbb
inc
scas
hlt
std
cmp
or
add
cmp
rsm
scas
xchg
fisubr
jns
fisttp
mov
mov
xor
shl
xor
mov
mov
not
adc
push
sbb
call
out
test
sub
leave
ja
cli
add
retf
push
mov
or
jb
jmp
xchg
dec
jae
sbb
inc
dec
int3
inc
inc
mov
jecxz
sub
mov
and
(bad)
fsub
stos
cs
add
dec
xor
dec
dec
pushf
out
inc
rol
in
adc
iret
adc
rcr
test
cmp
xchg
pop
cs
lea
into
shl
ins
sahf
(bad)
inc
das
cpuid
pop
mov
test
xor
mov
xor
xchg
push
and
sub
cdq
inc
scas
xchg
lods
fs
pop
mov
lahf
dec
ret
adc
pop
ds
adc
cmp
es
push
(bad)
icebp
ins
loope
push
mov
or
mov
faddp
retf
lods
inc
add
(bad)
das
rcl
sbb
adc
xor
frstor
mov
add
cmp
add
mov
rol
inc
adc
fldcw
fs
lahf
bound
les
pop
rcr
fst
xor
push
ror
scas
push
les
add
fst
inc
jp
cmc
cmc
mov
dec
xor
cmp
(bad)
push
pusha
fsubr
scas
and
js
push
mov
outs
mov
popa
mov
jl
xchg
sub
in
fwait
sbb
enter
adc
cdq
push
pop
push
pop
jl
jmp
arpl
mov
sbb
das
es
cli
xchg
aad
stos
lahf
iret
add
scas
bound
out
into
mov
sub
push
mov
int
je
ss
outs
gs
mov
cdq
lahf
aas
fcmovne
add
pop
xchg
xor
dec
xor
push
jmp
push
cdq
mov
mov
xor
cld
jmp
cld
and
xor
push
out
(bad)
mov
loopne
dec
inc
ins
mov
gs
out
out
xchg
cwde
stos
ins
sbb
cmc
retf
add
jg
xchg
(bad)
fild
mov
iret
ja
mov
mov
pop
sub
mov
mov
cli
outs
hlt
retf
push
jne
stos
fdivr
jnp
ret
or
pop
std
sub
sub
or
add
mov
lds
jg
loop
pop
les
xlat
push
div
push
cmp
mov
rcr
fsubr
pushf
ret
in
xchg
ja
retf
and
mov
das
sbb
imul
xor
add
gs
add
mov
and
mov
add
adc
push
push
idiv
jne
(bad)
into
pop
add
or
dec
repnz
test
test
sub
sahf
dec
ret
call
dec
loop
inc
frstor
jge
mov
out
fld
mov
adc
xchg
icebp
movs
mov
adc
sbb
mov
xchg
scas
mov
fisub
pop
add
pop
or
add
xor
cld
std
ror
push
or
aas
push
scas
jecxz
jecxz
xchg
lock
lods
mov
and
dec
xchg
adc
push
or
mov
cmps
movs
add
or
push
xchg
jmp
mov
cmp
xor
and
mov
push
stc
jno
mov
loopne
xchg
(bad)
enter
aad
jbe
lahf
out
mov
add
mov
push
fisttp
mov
adc
jno
retf
mov
fcom
ins
mov
not
jne
in
neg
adc
lods
mov
(bad)
into
mov
or
dec
lea
jno
jmp
push
pop
stos
jns
mov
dec
push
and
sbb
cmp
cli
inc
push
(bad)
fild
aam
xor
mov
mov
(bad)
outs
mov
pop
dec
rcr
icebp
or
xlat
stc
adc
ja
cmps
imul
mov
(bad)
cmp
stc
inc
xor
pop
push
mov
das
adc
lahf
add
psubd
xor
and
or
xchg
add
jb
pop
jb
cmp
cmc
adc
ins
sub
mov
cmps
sub
mov
leave
xchg
out
imul
push
loop
sahf
repnz
mov
pop
ret
pop
fwait
jb
sbb
dec
scas
pop
mov
addr16
in
stc
(bad)
xor
xchg
jnp
inc
inc
jle
mov
push
clc
je
dec
mov
mov
sub
and
ficomp
adc
and
cld
inc
dec
outs
add
mov
js
ds
jp
ror
outs
(bad)
clc
push
rol
xchg
jl
sub
bound
scas
mov
pop
imul
mov
jp
enter
mov
pop
push
loopne
call
mov
cmp
ror
sub
jo
fistp
scas
mov
cli
movs
adc
fnstenv
jmp
and
clc
stos
and
lock
inc
pop
ja
add
jle
dec
scas
aaa
xor
cld
cld
or
mov
hlt
cmp
fstp
add
cmp
stos
cmp
mov
or
mov
repnz
pop
outs
xor
adc
jmp
fcmovnu
retf
popa
mov
add
clc
mov
xchg
in
lahf
xchg
push
daa
les
dec
jge
sub
test
mov
mov
int
(bad)
or
adc
fwait
and
ins
dec
mov
mov
xchg
xchg
push
mov
sbb
mov
neg
xchg
inc
bound
inc
pop
out
and
sub
aad
loopne
pop
pop
icebp
inc
lock
cmps
inc
clc
(bad)
push
retf
mov
xor
test
xor
xchg
inc
shl
xor
pop
fbstp
pop
sbb
xchg
cmp
jns
xor
call
cmp
xor
xor
inc
dec
call
(bad)
icebp
idiv
pop
cmp
clc
pop
cmp
jp
sub
xchg
fidivr
mov
mov
ins
stos
push
hlt
loope
lahf
arpl
mov
(bad)
sub
or
fmulp
dec
mov
in
loopne
push
dec
or
cmp
stos
data16
sbb
pushf
cmp
dec
sti
or
add
retf
mov
add
xlat
adc
jns
push
enter
sbb
or
scas
xchg
push
xchg
jecxz
imul
minps
jle
into
cmps
mov
stos
inc
inc
int3
dec
test
nop
dec
jp
cmps
ret
and
pushf
jne
pop
xor
or
mov
imul
cmp
pop
mov
loop
add
xchg
cmp
out
jmp
jmp
or
repnz
xchg
ds
call
aam
adc
lods
sti
add
movs
call
outs
pop
fsubr
loope
mov
push
sub
lds
mov
sahf
aaa
jnp
lahf
fdivr
push
jecxz
and
int
push
jne
ds
adc
cdq
cmp
mov
loopne
add
in
inc
ss
cwde
test
mov
mov
call
xchg
test
arpl
outs
push
mov
test
push
fcmovnbe
adc
bound
in
push
sar
and
enter
mov
js
lods
pop
outs
and
xchg
loope
js
je
cmc
nop
call
arpl
inc
sahf
test
mov
addr16
xor
test
xor
sbb
cdq
pop
xchg
aas
jle
and
stc
sti
rep
mov
ret
sahf
(bad)
jmp
xor
xor
inc
jmp
repz
out
call
ja
je
popa
mov
clc
cmps
rcl
mov
fistp
ror
fucom
inc
retf
push
xchg
stc
push
enter
das
mov
mov
sub
push
xor
cdq
add
out
jo
dec
inc
cmp
xor
adc
jp
lahf
gs
into
jne
mov
and
pop
test
inc
xchg
(bad)
shl
add
or
sbb
mov
js
rcr
cwde
push
seto
cmp
arpl
and
xor
jae
jmp
test
fucomp
arpl
test
cmp
pop
and
mov
sub
fcmove
jl
sahf
mov
stc
mov
pop
inc
pusha
lods
add
out
ret
add
repz
push
pop
dec
pop
jns
leave
fwait
and
cmp
or
out
add
pop
cli
jns
push
test
in
ss
xchg
dec
hlt
push
inc
(bad)
push
fwait
sub
mov
add
addr16
mov
fstp
stos
mov
push
ret
lock
sub
push
int
jns
call
test
mov
cmps
add
lahf
mul
js
mov
cmp
xchg
pop
push
or
xchg
cli
jns
inc
cwde
outs
adc
daa
mov
xchg
fistp
cli
pop
mov
pop
jmp
(bad)
in
or
or
jmp
xchg
jmp
mov
cmp
icebp
sub
call
icebp
mov
test
mov
test
add
aas
or
and
dec
cmp
mov
pop
imul
jecxz
mov
jle
daa
push
cmp
adc
stc
sbb
in
dec
pop
jnp
mov
cwde
stos
and
push
ss
or
fwait
sti
ret
xor
inc
sub
fldlg2
pop
test
add
cmps
fld
fnsetpm(287
ret
jnp
aas
adc
push
and
cmp
sub
sub
pop
add
jmp
int
mov
cmp
pushf
(bad)
(bad)
in
mov
jns
ins
repnz
pusha
pop
dec
ins
(bad)
call
out
and
cmp
sahf
adc
imul
sub
call
jl
adc
adc
(bad)
es
rol
jne
sub
nop
ficom
sub
repnz
jmp
into
sub
fistp
fcmovnb
sbb
ins
jns
inc
add
mov
mov
in
mov
movs
dec
xchg
sbb
cs
in
xchg
and
cmp
cmps
xchg
fsub
xor
mov
fiadd
mov
xor
or
add
cmp
mov
mov
sbb
stos
jl
push
jg
fild
inc
movs
xchg
jl
bound
or
jmp
pushf
arpl
xor
sub
gs
(bad)
sar
clc
cdq
cmp
xor
test
fnstenv
ja
fcmovu
pop
mov
shr
into
repz
repz
lahf
bound
in
jg
ret
shl
push
or
jbe
aam
jmp
bound
push
or
jecxz
inc
inc
jl
mov
mov
sbb
clc
clc
lock
(bad)
jg
cmps
cs
cmp
mov
and
sub
or
jmp
js
sbb
inc
out
test
into
das
(bad)
and
cmp
mov
mov
rcl
cmp
ins
nop
not
mov
adc
std
pop
(bad)
pop
inc
mov
lea
jnp
inc
cmp
inc
leave
mov
jnp
nop
dec
pop
clc
xor
icebp
cmp
mov
fstp
jmp
push
in
add
daa
shl
mov
bswap
xor
retf
xor
add
scas
std
mov
push
dec
scas
fidiv
sti
jne
mov
jg
xchg
popa
adc
jle
test
pop
mov
pop
and
lods
dec
jle
inc
stc
jle
retf
jb
jne
js
ret
inc
ins
push
jne
inc
jnp
sbb
xor
sub
jle
out
pop
ins
inc
cmp
je
sub
pop
cs
dec
or
stc
jle
dec
jmp
out
jle
fwait
and
xchg
loope
xor
mov
bound
scas
xor
jge
jno
mov
mov
int3
cmp
push
test
adc
pop
(bad)
out
in
xor
clc
xchg
test
pop
and
mov
lds
popf
loope
das
sbb
pusha
mov
jmp
push
je
pop
mov
xchg
sub
and
lods
pop
lea
std
inc
mov
test
shl
(bad)
mov
lods
mov
dec
movs
adc
lods
push
mov
jno
inc
ret
mov
enter
stc
mov
(bad)
pop
dec
jge
push
jmp
mov
jo
loop
cld
sbb
sub
sbb
pop
add
shl
mov
add
jne
push
cmp
rcr
pop
addr16
lock
mov
cmps
lds
stos
inc
ins
mov
jns
inc
mov
(bad)
cmp
xchg
(bad)
inc
inc
jecxz
sbb
jecxz
(bad)
data16
aas
scas
xchg
jae
es
push
xchg
jmp
iret
or
sar
push
sbb
or
cmp
pushf
ficom
test
nop
neg
push
xor
cli
inc
cmp
add
cmps
dec
neg
cmp
adc
in
imul
inc
mov
mov
iret
and
fcomp
es
xor
mov
jg
pop
cld
and
mov
pop
pushf
jb
xchg
sar
jo
add
jl
js
push
cmp
out
or
fwait
fwait
int
cs
leave
and
push
test
jnp
adc
popa
inc
vpabsb
(bad)
(bad)
arpl
mov
sub
fadd
sub
das
and
mov
in
sbb
test
sar
or
mov
mov
cmp
inc
xor
and
mov
test
adc
sti
pop
pop
call
rcl
xchg
lea
test
lods
mov
sub
movlps
jmp
(bad)
call
push
arpl
inc
jbe
dec
adc
xchg
xor
pop
in
outs
loope
fimul
push
addr16
jl
stos
pusha
adc
cmp
pop
jmp
shl
imul
mov
not
dec
mov
cmps
cwde
mov
nop
cmc
mov
xor
dec
jg
xchg
xchg
mov
cmc
daa
jecxz
sbb
xchg
movs
lods
jge
xor
dec
xor
jg
sub
fist
xchg
data16
ins
retf
sub
call
cld
aam
mov
pop
jo
lds
cmps
push
test
pusha
ds
daa
add
daa
frstor
ffreep
dec
in
cmp
mov
cdq
js
xor
int
sbb
loopne
test
scas
or
(bad)
and
cli
imul
mov
mov
cmps
fisub
push
mov
sub
mov
mov
push
fdiv
push
test
dec
push
sub
mov
ds
dec
adc
fchs
stos
cwde
pusha
retf
test
pop
or
xor
pop
lods
lods
or
lds
jg
in
nop
jae
in
dec
lds
mov
call
pusha
pop
lods
lods
mov
fdivr
push
add
sub
test
cli
shl
in
pushf
push
in
lods
mov
icebp
and
loop
and
popa
(bad)
and
mov
jb
mov
add
dec
shr
mov
fprem
jp
sub
adc
ins
movs
mov
jecxz
xchg
ins
pop
cmp
out
and
pop
cli
mov
sbb
scas
or
aas
aam
loopne
mov
dec
neg
inc
and
add
lock
fdivr
retf
cmp
pop
dec
icebp
inc
adc
pop
test
jge
xor
aad
imul
shl
cmp
rcr
cmp
dec
mov
xchg
clc
adc
sub
jge
das
jmp
inc
inc
jl
sbb
xchg
ret
stc
fdiv
loope
jmp
sub
mov
or
jmp
mov
mov
popa
or
sti
sbb
dec
push
jbe
retf
cmp
fs
dec
hlt
cwde
aas
lea
daa
jp
inc
es
sahf
sar
push
mov
aad
jge
loop
rcl
movs
pop
call
cmp
int
jns
xchg
pop
and
in
repnz
push
pop
xor
cmp
into
pop
(bad)
mov
call
cs
(bad)
popf
jnp
retf
xor
cmc
inc
mov
jle
fwait
push
cmps
xchg
or
cmc
pusha
test
stc
fbstp
pop
pop
fwait
nop
sbb
cmp
imul
and
dec
inc
mov
ret
imul
jmp
jg
xchg
sub
or
dec
inc
pusha
pop
adc
adc
mov
push
ja
and
sbb
mov
jbe
jne
loop
pop
into
jg
push
or
add
and
cmps
fdivr
mov
int
sti
arpl
(bad)
pop
repnz
dec
jne
imul
outs
dec
jmp
inc
in
push
xchg
into
sbb
mov
mov
pop
xchg
retf
and
cmp
cmp
js
(bad)
xor
xchg
fadd
addr16
imul
push
addr16
sub
fdivr
daa
lods
jbe
add
cli
scas
rcr
sub
popf
jl
or
lock
arpl
aad
ja
div
mov
sub
xchg
pop
mov
(bad)
hlt
xchg
aaa
inc
and
mov
in
hlt
push
fadd
fs
adc
imul
cmp
int3
rcr
pop
pop
int
shl
dec
outs
ins
push
mov
sahf
mov
sbb
lock
cmps
pop
in
cmp
push
push
loope
or
mov
stos
movs
jae
xchg
inc
in
in
pop
inc
cwde
popf
bound
dec
dec
dec
sbb
pop
and
int3
repnz
xchg
or
mov
(bad)
into
int3
cs
(bad)
cmc
out
out
clc
jge
xchg
push
inc
sub
and
pop
nop
repnz
ja
push
pop
ret
mov
rcr
jns
test
or
push
pusha
call
push
dec
pop
or
xchg
nop
loopne
mov
cwde
gs
adc
test
outs
sbb
push
les
mov
loope
mov
nop
add
mov
aas
aad
cmps
aaa
and
jl
inc
add
vmwrite
cs
pop
in
or
and
pop
adc
lock
mov
inc
and
sbb
jns
push
mov
int3
pop
and
push
mov
int3
dec
cmp
jns
xchg
xchg
add
shr
das
sub
xchg
daa
mov
jo
xchg
pop
jbe
dec
gs
lds
jmp
mov
cmp
icebp
aam
pop
test
(bad)
sub
cmp
inc
inc
mov
inc
mov
jno
sbb
lahf
jbe
inc
hlt
push
pop
fidiv
adc
retf
or
inc
mov
je
pop
dec
call
shl
sbb
retf
shr
shl
fdivp
ret
aaa
leave
dec
in
push
out
push
sti
mov
icebp
scas
xchg
loop
sub
dec
lea
popa
xor
rol
ins
sub
sub
mov
adc
jno
ss
fwait
test
or
or
idiv
jecxz
test
scas
mov
dec
or
imul
or
ja
cli
xor
addr16
pusha
cmp
sub
ret
jecxz
pusha
daa
mov
arpl
mov
sub
xchg
fist
outs
movs
movs
sub
jp
adc
outs
jns
inc
les
pop
sbb
int
adc
test
jmp
cs
pusha
push
iret
aaa
adc
test
mov
into
mov
mov
xchg
fsub
or
es
in
loopne
xor
inc
and
repnz
mov
gs
pop
(bad)
mov
jge
popa
test
add
sahf
pop
loope
cli
ja
or
mov
sti
dec
and
fnstenv
push
fistp
std
add
addr16
jmp
nop
gs
mov
(bad)
fidivr
lods
sub
sahf
std
jmp
xchg
mov
pop
cld
lods
xor
sub
add
call
in
aaa
pusha
(bad)
in
mov
ret
fstp
sahf
mov
retf
mov
and
stos
test
test
retf
sahf
(bad)
add
mov
call
call
das
clc
inc
loopne
pushf
aas
(bad)
repz
sbb
add
cdq
mov
dec
jg
mov
outs
xchg
mov
outs
cmpps
ret
adc
mov
add
jae
test
and
push
or
jne
cmp
mov
xchg
pop
pop
and
sub
icebp
stc
div
fxch
pop
add
mov
or
fnstsw
push
xor
loope
xor
fnstcw
sub
jle
and
add
jbe
mov
int
pop
out
xor
jecxz
mov
mov
dec
cmp
pop
inc
mov
iret
ret
cmp
add
fsubr
xchg
xchg
xchg
in
add
sbb
icebp
and
ja
imul
inc
arpl
add
aas
adc
loope
jns
(bad)
lods
xor
dec
arpl
push
test
sahf
pop
movs
gs
mov
jmp
adc
daa
adc
aam
test
pop
jmp
hlt
jl
nop
js
jo
cmps
mov
call
fisub
lods
jmp
jne
les
and
in
mov
pop
adc
(bad)
enter
jnp
xlat
test
adc
xchg
push
shl
fcomp
mov
fscale
sbb
push
pop
and
les
(bad)
aam
sub
hlt
outs
stc
das
ds
leave
mov
xchg
mov
mov
xchg
jns
pop
out
imul
push
mov
push
test
js
out
arpl
fcom
dec
cmp
ins
xor
loope
add
dec
mov
aam
sbb
cmp
dec
in
neg
scas
push
lahf
jle
or
jge
mov
and
pop
or
lahf
dec
xchg
xor
(bad)
add
ss
dec
rcr
test
stos
mov
ins
jle
mov
cwde
jg
or
scas
push
sbb
mov
sbb
adc
push
push
mov
sub
inc
fisub
inc
lahf
mov
pop
mov
ffree
hlt
and
aam
xchg
aaa
adc
jmp
or
sub
cmps
pushf
push
dec
loop
jl
or
or
or
mov
sbb
dec
jae
idiv
cli
icebp
pop
mov
jb
mov
(bad)
inc
xor
xchg
mov
sti
test
arpl
or
popf
push
(bad)
jne
enter
sub
push
iret
(bad)
enter
or
push
xor
push
jo
fucom
sbb
sbb
invd
xchg
dec
addr16
mov
lods
push
sbb
and
mov
or
je
mov
call
mov
iret
xor
cmp
(bad)
jbe
jns
dec
(bad)
xchg
sub
sbb
sub
xchg
and
mov
aad
pop
pop
fyl2x
jne
and
xchg
pop
jbe
dec
adc
or
es
xor
(bad)
sub
jmp
jge
sub
sbb
cmp
lds
inc
mov
outs
mov
jecxz
cmps
add
(bad)
es
push
mov
adc
mov
xchg
or
pusha
in
stos
out
sub
bound
icebp
rcl
pusha
cmp
xchg
push
lahf
lods
dec
pop
push
cmp
mov
and
loopne
xchg
movs
pushf
fistp
mov
xchg
aam
xor
jmp
call
inc
mov
clc
adc
jbe
sbb
mov
xchg
lds
aaa
add
cmp
pop
lods
pop
(bad)
std
das
arpl
enter
je
fidiv
jl
cmps
xor
adc
je
mov
mov
js
cmps
xchg
out
loop
push
stos
lock
in
xlat
mov
and
mov
popa
imul
ret
pop
dec
fsubr
shl
call
dec
cmp
sub
stos
fstp
data16
lods
dec
in
add
xchg
daa
sahf
call
rcr
inc
repz
out
mov
add
jle
xor
mov
pop
jecxz
loop
add
inc
cs
aam
add
or
fcomp
repz
pusha
jle
rol
(bad)
loopne
rcl
daa
mov
add
stos
scas
xchg
fcomp
push
movs
jne
dec
pop
jae
outs
jne
push
lods
xchg
cmc
loop
popf
adc
sbb
mov
xchg
(bad)
hlt
xlat
cs
or
rcr
push
call
lea
pop
jge
mov
cli
pop
xchg
shr
outs
and
shl
or
jecxz
mov
mul
and
lods
jnp
call
inc
xor
inc
and
mul
dec
inc
lods
xor
lea
or
dec
jmp
pop
mov
xchg
add
cmps
push
push
pusha
and
shl
adc
or
jmp
add
loop
enter
pop
cli
retf
gs
scas
pop
mov
cmps
mov
ins
adc
push
sub
cmp
xchg
add
dec
push
stos
or
js
(bad)
enter
push
ret
outs
arpl
clc
(bad)
int
mov
adc
lods
ret
cmps
adc
push
(bad)
push
mov
or
push
(bad)
mul
push
cmps
pop
sbb
pop
inc
and
and
jp
xchg
fldcw
inc
in
outs
gs
fs
cld
mov
jns
pop
dec
ret
ficom
mov
aad
stc
jmp
add
ret
lea
test
sub
pop
mov
push
mul
jp
test
(bad)
inc
mov
mov
bound
ins
pop
pop
je
outs
mov
dec
push
pop
mov
mov
or
and
rol
mov
pop
sub
rol
out
inc
push
or
sbb
dec
test
dec
cmc
rol
pop
clc
loop
xchg
pop
je
repz
clc
fst
neg
ds
rol
xlat
xor
push
in
adc
lds
adc
xchg
cmp
jmp
repnz
dec
loopne
int
pop
push
jle
add
sahf
and
clc
sahf
or
dec
mov
ret
pusha
and
dec
out
jp
mov
sti
mov
mov
mov
scas
cmp
mov
inc
and
(bad)
(bad)
adc
ss
xchg
fidivr
lds
bound
mov
mov
push
xchg
inc
shl
pop
ds
ficomp
mov
mov
clc
(bad)
(bad)
data16
pop
xor
and
sti
add
cmps
mov
rcl
sbb
ins
clc
cmc
fdivp
sbb
sub
popf
call
and
inc
jge
push
dec
fiadd
xchg
enter
call
mov
in
cli
iret
push
inc
(bad)
stc
and
shl
mov
dec
not
jo
repz
push
or
push
mov
lods
gs
pop
(bad)
ror
jp
sub
adc
lds
lock
out
dec
mov
fs
(bad)
push
dec
rcl
sahf
(bad)
in
mov
inc
out
xor
test
or
(bad)
xchg
xor
sub
xchg
xchg
mov
xchg
arpl
and
loopne
pop
ins
aad
sbb
push
lock
or
jmp
scas
setge
aaa
sahf
pop
test
pop
pop
enter
outs
cli
inc
sub
mov
mov
jbe
jmp
mov
into
out
cmp
xor
or
sbb
or
or
jno
clc
xchg
test
fsub
fwait
mov
hlt
sbb
movs
lea
mov
mov
pusha
pop
mov
int3
popa
cmp
les
jge
xchg
ins
sub
iret
add
cwde
mov
fs
sbb
repz
icebp
mov
iret
mov
aas
mov
gs
aad
das
shr
cs
sbb
rol
dec
daa
pusha
dec
shr
popf
imul
pusha
(bad)
mov
jle
rcl
jo
inc
sub
add
dec
jb
inc
sub
icebp
or
in
out
cmps
xchg
clc
ret
in
push
test
or
cmp
cmps
sbb
mov
jecxz
out
jge
cs
jbe
xchg
sbb
add
dec
fbstp
movs
in
mov
gs
or
cmps
imul
imul
xchg
adc
jl
fs
jge
jmp
inc
and
add
mov
mov
cmp
fnsave
mov
pop
xchg
in
(bad)
aad
push
jl
lea
ins
in
dec
sbb
cmp
push
out
sbb
jl
sbb
shr
adc
xchg
jg
pop
shl
mov
nop
cmps
pop
cmp
popf
sbb
icebp
out
or
push
pop
ret
push
add
xor
ret
mov
mov
(bad)
jae
sub
stos
mov
push
cmp
sub
retf
cmp
test
push
mov
jo
dec
pusha
hlt
push
adc
(bad)
shl
out
cmp
mov
mov
test
cmp
aas
out
cmps
leave
jge
sbb
sub
shl
sub
and
sub
int3
lahf
test
xor
mov
pop
mov
push
(bad)
in
push
or
add
inc
mov
je
xchg
test
in
pop
scas
cmp
test
popa
in
inc
cld
je
movs
mov
jmp
push
je
cld
adc
mov
push
mov
fcomp
shr
(bad)
xchg
or
mov
loop
jbe
mov
ss
mov
pop
iret
test
jle
les
mov
es
icebp
fisttp
gs
out
push
push
add
ss
enter
dec
cmp
repz
inc
mov
lods
int
sahf
ins
xor
adc
jp
adc
addr16
lock
mov
imul
repnz
mov
mov
push
inc
cmc
or
mov
retf
mov
mov
test
mov
fdivr
mov
add
mov
push
jmp
xchg
scas
cmps
add
xchg
mov
sbb
push
loopne
and
pushf
pop
sbb
shr
mov
push
xchg
pop
jp
shl
les
mov
inc
cmp
add
std
fwait
lock
cmp
repz
into
ins
mov
mov
outs
jne
xchg
lods
scas
xor
mov
cmp
test
retf
call
std
loop
lds
jno
mov
pop
push
mov
sbb
or
enter
adc
fistp
fcom
pop
stc
jo
aaa
pop
xchg
and
mov
sub
stc
mov
loop
jne
pop
out
or
les
jnp
inc
scas
std
adc
sub
into
inc
xchg
fld
sbb
popf
aam
shr
pop
into
jp
cmp
add
jns
(bad)
push
jmp
dec
cli
in
push
test
(bad)
pushf
mov
shr
mov
sbb
push
mov
inc
popa
dec
mov
push
push
gs
imul
mov
ds
daa
inc
push
inc
fs
and
bnd
out
push
jmp
sub
int3
into
cmp
mov
mov
xchg
nop
and
pop
scas
push
stos
imul
test
movs
push
pop
jo
mov
pop
mov
or
sbb
leave
shr
adc
pushf
pop
cwde
inc
fs
ret
std
pop
movs
push
dec
cld
enter
repnz
inc
sub
mov
lods
bound
push
adc
outs
xor
shr
or
push
xchg
cld
loope
retf
repz
jmp
cmp
sbb
test
sbb
bound
or
mov
pop
jns
pop
jbe
rol
bound
xchg
jne
leave
ja
push
test
jns
mov
cmp
mov
fs
imul
movs
(bad)
fistp
inc
or
sbb
push
add
mov
jecxz
fild
jb
popa
in
out
mov
jg
mov
test
mov
xor
jno
xor
xchg
cmp
sub
in
mov
and
adc
mov
js
mov
mov
push
ror
push
cld
ror
in
test
or
pop
mov
inc
mov
push
jmp
lods
dec
iret
enter
xchg
jae
pop
in
and
fcmovnb
lds
lock
jecxz
mov
mov
pop
dec
xor
inc
sub
dec
test
test
pushf
fldenv
xchg
push
fwait
pop
(bad)
jbe
push
loop
dec
lds
mov
imul
sbb
dec
outs
xchg
and
aam
add
mov
jnp
loop
adc
loopne
jmp
xor
ret
mov
repz
xchg
shl
clc
jmp
sub
lods
mov
(bad)
cmp
test
cmp
mov
push
jecxz
rcl
lds
aad
call
push
push
inc
mov
sbb
and
test
sbb
js
add
shl
xchg
lods
jo
sub
bound
or
sbb
inc
jbe
sbb
gs
mov
mov
call
mov
out
or
outs
scas
inc
mov
mov
mov
lds
add
popf
repnz
pop
and
mov
ja
jge
cld
popf
out
jge
mov
adc
sbb
adc
sub
(bad)
jg
out
scas
mov
jecxz
sbb
inc
jno
out
mov
int
lds
jge
mov
(bad)
inc
sbb
push
imul
loop
das
rcr
(bad)
shl
or
loop
adc
or
ret
lock
inc
ror
sub
dec
sbb
jbe
mov
xor
or
xor
xor
sahf
shr
and
fwait
jmp
dec
outs
mov
(bad)
sti
jae
cld
not
inc
inc
es
std
fistp
xlat
shl
inc
(bad)
aam
sbb
cmp
js
test
mov
movs
idiv
mov
jl
sbb
push
inc
lds
xchg
stos
jno
mov
scas
jp
mov
loope
and
test
mov
or
pop
pop
stos
jne
(bad)
xor
sub
jnp
fild
mov
aam
in
xchg
mov
cmp
or
mov
mov
paddq
add
add
cmp
popa
mov
bswap
pusha
dec
cmp
inc
push
push
punpckldq
xchg
pop
repz
or
ret
xlat
test
retf
aas
add
icebp
push
fwait
clc
mov
sar
dec
mov
nop
retf
xchg
mov
jno
and
sti
pop
call
test
mov
adc
pop
test
call
push
dec
xlat
fs
nop
(bad)
mov
dec
sub
jae
add
push
inc
popa
inc
je
pop
inc
jbe
je
cdq
adc
mov
pop
fwait
xchg
push
repnz
sub
gs
jnp
xchg
dec
repz
push
shr
sbb
aam
cmp
mov
add
xchg
(bad)
in
jecxz
clc
out
mov
das
test
out
enter
ja
push
inc
sub
sbb
int
sub
sub
pop
sbb
xor
fs
stc
aad
cmp
xchg
adc
pop
mov
int
ror
mov
mov
or
ror
and
nop
mov
push
mov
call
hlt
cmps
ror
jne
or
into
inc
sbb
push
vminss
xchg
sti
rcl
pushf
xlat
sub
mov
add
lods
fdiv
jae
pop
add
xor
(bad)
jg
xor
add
xchg
or
mov
outs
leave
or
cmp
mov
xchg
mov
std
jns
popf
fs
push
arpl
je
int
pop
pop
xchg
sbb
mov
out
and
sub
jmp
mov
repz
cs
cmp
jg
and
add
call
cmp
mov
fs
or
stc
outs
dec
dec
imul
jmp
stc
fnstsw
mov
xchg
stos
ja
cmp
bound
pop
ins
adc
into
inc
mov
jnp
adc
jo
cwde
add
aam
iret
ret
push
sbb
or
nop
imul
mov
and
jbe
ja
jno
arpl
sbb
xor
fst
push
jbe
pop
push
idiv
xchg
dec
out
mov
dec
loop
sbb
out
cmp
fist
ja
pop
cld
ret
push
inc
mov
leave
pop
shl
je
push
adc
mov
in
push
iret
and
das
cli
jnp
xor
mov
iret
(bad)
out
xor
xchg
rcr
repnz
and
pop
test
out
out
stos
mov
les
xchg
loop
mov
inc
mov
scas
push
ficom
cmps
jmp
adc
lds
retf
scas
jge
push
aad
jno
adc
inc
dec
xor
out
cmps
(bad)
jnp
sbb
pop
int
add
scas
push
lahf
neg
xor
add
adc
in
in
dec
adc
ss
xor
jg
scas
int3
dec
mov
mov
daa
xor
jecxz
jno
sbb
adc
fisub
retf
dec
push
and
cwde
pop
xor
adc
inc
xchg
push
in
sub
popa
jmp
push
cld
dec
(bad)
push
fiadd
xchg
movs
in
(bad)
add
sti
adc
pop
in
imul
in
xchg
ins
loope
sub
int3
mov
jecxz
aaa
popf
loop
mov
adc
ss
push
and
int3
sub
push
sbb
pop
in
dec
retf
add
mov
sbb
mov
aas
aaa
popa
dec
sub
dec
sub
mov
sbb
jl
lea
add
(bad)
loope
repnz
pop
cli
push
rol
dec
cmp
mov
or
fmul
add
lock
adc
pop
inc
imul
pop
arpl
cmp
pop
cdq
jae
dec
sub
stos
movs
xlat
xchg
addr16
lods
ret
loop
(bad)
mov
inc
mov
in
and
sub
jmp
cmp
(bad)
loopne
and
add
mov
repz
mov
dec
dec
je
repz
scas
cld
sbb
fwait
lods
loopne
rcl
cmp
or
fnsave
dec
movs
div
push
fistp
pop
ss
sub
pop
dec
pop
scas
push
sahf
movs
add
fucom
sbb
inc
or
jae
mov
xor
lds
sub
repz
(bad)
fld
jb
fcmovbe
mov
mov
fst
cld
into
je
(bad)
mov
ja
(bad)
mov
or
push
sbb
mov
fstp
cli
int3
mov
mov
push
mov
fidiv
jb
out
aad
arpl
test
pop
add
ficom
outs
cmps
jb
mov
(bad)
jno
neg
sbb
add
push
pop
xchg
loope
jle
sub
leave
retf
xchg
out
out
fdiv
push
push
shr
dec
popf
(bad)
cmp
push
hlt
std
jp
call
not
and
dec
movsx
sbb
add
mov
adc
cmp
out
and
ss
mov
jne
jb
lods
dec
popf
xchg
mov
add
add
and
jbe
pop
dec
repnz
jecxz
jp
xchg
cmps
xchg
jae
mov
jmp
push
lods
pop
push
pop
xor
arpl
repnz
pop
or
push
sub
push
mov
aad
es
ss
test
js
cmp
xchg
fbstp
jg
inc
bound
arpl
pop
movs
out
fwait
inc
pop
jno
ds
xchg
pop
inc
out
ret
js
sub
pop
std
mov
adc
xchg
clc
neg
inc
icebp
bound
mov
inc
ror
loop
sub
test
pop
mov
dec
sub
cmp
sbb
loopne
dec
js
ja
ret
jmp
call
imul
add
inc
sub
pop
std
nop
jmp
or
inc
dec
mov
push
mov
xchg
cmp
push
aaa
dec
nop
out
(bad)
jp
daa
in
loope
or
and
sub
and
cld
jne
sbb
mov
popf
xor
in
fsub
or
jb
imul
mov
movs
addr16
pop
(bad)
fs
push
repz
shl
adc
sub
js
mov
jp
push
push
pop
or
movs
in
mov
fidivr
xchg
mov
adc
(bad)
push
push
in
ror
mov
jg
loopne
pop
push
push
add
(bad)
not
mov
push
int3
(bad)
(bad)
push
jp
and
into
add
add
repz
push
inc
inc
jns
fisub
jmp
dec
pop
mov
int3
jmp
imul
jmp
jmp
dec
xor
xchg
adc
add
div
imul
xor
inc
jb
nop
loope
sub
dec
rcr
fild
aaa
cmp
lock
fbld
retf
daa
sub
dec
add
ja
lea
aaa
mov
xchg
push
push
dec
enter
clc
xor
cmp
bound
mov
pop
loope
(bad)
(bad)
jmp
inc
int
in
or
sub
dec
loop
xchg
sahf
repz
repz
mov
dec
inc
loope
in
pand
js
test
xor
adc
stos
push
xlat
jp
sbb
xchg
mov
mov
xchg
retf
(bad)
add
xor
stos
sbb
add
mov
cmc
cmps
sub
xlat
popa
cmps
loop
inc
jmp
pop
fisubr
sbb
push
jno
dec
gs
mov
fstp
loop
loop
in
stos
ds
pop
lahf
aad
pop
xlat
xor
retf
cmc
adc
push
test
sbb
mov
out
repz
div
test
jp
iret
xlat
mov
add
jns
dec
jae
out
cmp
sbb
xor
inc
data16
jnp
(bad)
jb
or
nop
rol
jg
adc
add
ss
loope
pushf
lods
bound
adc
jle
(bad)
into
cmp
lds
pop
into
aaa
xchg
and
out
sbb
lahf
mov
xchg
adc
sbb
data16
fcom
in
xor
cli
sub
pop
lea
hlt
or
pushf
mov
and
(bad)
bswap
push
jnp
sti
das
push
stc
in
adc
movs
push
outs
jp
cs
into
jg
dec
mov
shl
mov
jg
mov
push
sbb
sbb
mov
cwde
add
push
xchg
dec
sar
dec
and
in
inc
xchg
cmp
mov
inc
loop
cmp
sar
mov
addr16
xchg
sahf
adc
icebp
or
push
fidivr
push
test
jge
loop
aam
dec
(bad)
test
(bad)
jo
out
adc
sbb
jns
(bad)
in
jns
stc
psllw
mov
cmp
leave
push
mov
mov
leave
mov
in
gs
and
jne
inc
sub
mov
xchg
out
and
test
movs
in
and
pop
int3
loopne
ss
push
sub
adc
lods
(bad)
xchg
jnp
jo
movs
xchg
ss
mov
jns
add
xor
jmp
popf
jle
and
sti
dec
xor
cmp
mov
xchg
js
or
inc
sti
and
inc
cli
out
mov
mov
ror
nop
lea
rcl
or
sbb
sbb
xchg
adc
cmp
pop
dec
les
inc
es
(bad)
retf
into
retf
jne
iret
aas
sbb
mov
mov
pop
jp
aas
scas
push
cmp
xor
mov
mov
mov
mov
push
push
hlt
retf
retf
aad
pushf
mov
and
(bad)
jae
cli
lods
fld
int3
sub
jae
sub
adc
xor
cmp
push
and
adc
pusha
xchg
(bad)
retf
nop
cmps
retf
imul
xor
push
mov
ins
push
loopne
bts
inc
mov
outs
jge
int3
mov
in
and
push
push
in
je
xchg
sti
inc
data16
or
test
or
push
cmp
loopne
pushf
lds
mov
mov
out
xchg
das
dec
jbe
dec
push
bound
mov
inc
add
inc
call
mov
jb
or
lods
inc
lea
ins
and
add
(bad)
jecxz
jo
pop
jae
or
sahf
mov
sbb
leave
loope
sub
mov
xchg
jle
xchg
xchg
or
out
cmp
sub
das
xchg
pop
mov
dec
test
mov
cmp
and
sub
cmp
in
call
or
test
adc
pop
ret
jnp
ds
mov
stos
cli
fidivr
imul
pop
pop
push
(bad)
mov
and
sbb
(bad)
jae
pop
mov
mov
mov
mov
inc
js
dec
out
pop
inc
out
ins
cmp
pushf
dec
cdq
sbb
push
dec
jb
cmp
shl
(bad)
stc
sbb
xor
or
inc
mov
call
enter
adc
pushf
into
popa
sbb
fcom
adc
push
add
hlt
retf
fdiv
xchg
ds
and
outs
push
sbb
and
or
xor
ins
push
cmps
loop
cmp
fs
or
gs
ret
retf
pop
mov
jle
xor
aam
icebp
push
out
jmp
mov
mov
js
mov
out
icebp
repnz
push
pop
test
add
sbb
ja
push
dec
sahf
popf
adc
imul
and
(bad)
xor
and
dec
add
pop
xchg
scas
mov
xlat
cmp
xor
ror
sub
sbb
push
ins
push
iret
hlt
inc
fsubr
movs
mov
loopne
inc
mov
sub
push
(bad)
das
call
mov
(bad)
jmp
mov
push
loope
into
sbb
cli
push
pop
and
retf
ja
jae
bound
cmp
addr16
pop
and
xchg
bound
push
inc
ja
arpl
dec
push
out
or
push
scas
pop
shl
push
xor
jae
jle
mov
jmp
push
cdq
xor
mov
push
daa
jbe
ret
sbb
push
cli
call
stos
and
imul
fimul
(bad)
hlt
sub
fdivr
cmp
nop
movs
inc
mov
dec
lods
cmp
xor
or
aaa
mov
mov
jp
pop
cmp
out
sti
ret
and
mov
pusha
sbb
xor
in
mov
xchg
lea
sbb
shr
push
mov
or
cli
nop
imul
adc
in
(bad)
push
rol
fist
div
pop
jbe
inc
xchg
stc
ja
dec
sahf
mov
or
dec
icebp
mov
push
mov
cmp
push
ret
fnstsw
lea
pop
push
mov
push
xor
ja
sahf
iret
rcr
push
out
jg
das
cwde
cwde
jmp
push
dec
mov
rol
outs
sub
lahf
add
push
test
dec
jmp
cwde
or
add
inc
and
fbstp
dec
cmp
sbb
je
pop
and
adc
rcl
call
xchg
xchg
cmp
(bad)
inc
cmp
arpl
cmc
jmp
jbe
sub
in
jae
test
add
sar
mov
adc
mov
inc
aas
adc
fnstsw
inc
(bad)
adc
xor
mov
inc
gs
mov
jl
mov
jno
jnp
push
enter
pop
push
dec
stc
add
adc
fdivr
mov
fnstsw
js
adc
xlat
adc
and
icebp
sbb
movs
add
mov
or
mov
push
ret
mov
ja
ds
add
shl
or
xor
in
fsubr
stc
xchg
mov
repnz
call
mov
sub
hlt
mov
cmp
sar
mov
adc
xor
lods
dec
adc
in
test
adc
push
scas
push
loopne
jns
iret
cmc
adc
in
and
and
and
cmp
in
pushf
or
call
cmc
dec
clc
inc
mov
lock
and
inc
pand
fldenv
or
out
rol
jnp
cld
add
test
(bad)
rcr
fwait
sub
mov
mov
imul
and
aam
jl
mov
push
mov
dec
je
cmp
jbe
jb
sbb
out
popf
(bad)
jmp
addr16
movs
adc
(bad)
push
fs
jmp
outs
fwait
or
lock
or
test
(bad)
shl
push
jne
js
das
mov
outs
push
test
dec
inc
(bad)
push
or
outs
das
jle
xor
inc
sbb
cmp
jmp
fwait
pop
ret
lahf
pop
sbb
xchg
icebp
cmp
adc
sbb
or
(bad)
dec
in
jo
pandn
push
push
add
cmps
sbb
sbb
mov
adc
dec
mov
push
jl
fcom
cld
test
cwde
push
imul
shr
outs
lds
loop
jge
mov
inc
mov
push
pop
imul
arpl
adc
in
int
cmps
repnz
push
cs
or
push
add
aad
sbb
xlat
call
inc
push
sub
xor
movs
sbb
inc
xchg
mov
push
sahf
ret
inc
mov
push
adc
call
(bad)
sbb
jmp
sti
push
stc
inc
xlat
add
xchg
and
aam
js
cdq
pusha
nop
ja
aaa
pop
or
sahf
cmc
jmp
sub
cmp
outs
fcom
gs
addr16
xchg
jnp
test
retf
xor
xchg
inc
inc
sbb
nop
test
adc
(bad)
and
pop
or
jo
stos
repz
out
xchg
sbb
out
and
out
and
es
out
dec
pop
stos
ret
test
mov
idiv
lods
jp
jg
dec
xchg
call
iret
push
jge
add
aam
push
pop
mov
xor
xchg
adc
movs
jmp
mov
pop
cli
ja
push
data16
repnz
jnp
aam
pusha
mov
bound
adc
retf
pcmpeqb
cwde
jnp
fisubr
add
or
cmp
dec
das
sub
popf
cmp
mov
sbb
add
cmp
mov
sbb
and
jmp
ins
pushf
cmp
adc
inc
cld
sub
push
jl
mov
and
xor
ret
dec
sbb
push
mov
jl
popa
and
push
std
xor
or
out
bound
xor
jmp
clc
int3
sbb
adc
push
xor
repz
ja
push
sub
cdq
fs
out
push
rcl
jecxz
scas
jb
mov
es
mov
loop
gs
mov
and
push
push
jge
or
dec
sbb
push
mov
fs
ror
mov
ret
jnp
inc
and
fs
call
aam
sar
aam
xchg
retf
jl
nop
bound
je
outs
jbe
loopne
push
push
inc
mov
cwde
pop
jb
mov
mov
and
out
in
imul
in
push
in
js
fistp
loop
pop
inc
cmp
in
leave
mov
popf
aas
fs
out
inc
call
cmp
lea
mov
popf
add
out
(bad)
mov
test
push
fwait
push
ds
add
call
cwde
int3
aad
(bad)
int3
xchg
cmps
jo
sbb
push
retf
repnz
inc
js
jno
push
xor
lods
mov
int
int3
jbe
dec
cwde
(bad)
out
in
mov
fs
sbb
enter
cmp
jecxz
add
fcom
push
out
aam
mov
retf
push
jl
sub
clc
and
sahf
sub
hlt
xor
loopne
jae
xchg
adc
jbe
cwde
imul
ins
inc
ror
leave
jg
shr
or
pop
mov
cmc
stos
mov
pop
xchg
adc
pop
push
into
ins
cli
cmp
xor
fldcw
fsave
dec
and
xchg
scas
jo
xchg
dec
shl
and
loopne
xchg
push
repnz
mov
adc
int
mov
add
xchg
jge
jb
or
addr16
icebp
outs
shl
inc
cs
xchg
loopne
stos
pop
cmp
mov
jae
mov
adc
popa
mov
add
sti
dec
hlt
aaa
in
addr16
cmps
mov
sbb
(bad)
push
adc
sbb
pusha
enter
retf
pop
test
push
cdq
cmps
cwde
test
sub
jp
scas
mov
icebp
ficom
mov
(bad)
out
addr16
aam
hlt
adc
daa
mov
bound
sar
pop
push
movs
es
jmp
addr16
jmp
ins
push
out
(bad)
pop
retf
inc
or
mov
xchg
fsubp
add
fdivr
jne
nop
or
repnz
in
jns
sub
stos
ins
inc
lds
mov
test
pop
iret
ss
mov
xor
sub
and
add
adc
std
mov
xchg
lock
add
dec
(bad)
xchg
ins
data16
imul
adc
stos
xor
scas
ds
and
dec
mov
push
xchg
lea
mov
lea
adc
push
cmp
arpl
pop
mov
mov
addr16
push
jne
sbb
lods
jbe
es
mov
jg
push
add
dec
push
mov
(bad)
nop
imul
gs
aaa
mov
cmp
inc
test
rcl
call
adc
sub
outs
cs
inc
(bad)
ror
push
repnz
les
fwait
pop
and
add
bound
and
or
addr16
cld
jns
ins
mov
cmps
push
ja
mov
(bad)
jp
xchg
pop
xor
jp
test
outs
inc
jbe
jecxz
jb
cmps
hlt
jbe
sbb
cmp
jmp
push
stos
mov
rcl
addr16
ss
jnp
lods
aad
dec
xor
sbb
hlt
ds
gs
test
cli
int
gs
repnz
sub
adc
in
xchg
enter
cdq
imul
cmc
mov
inc
std
lea
adc
mov
sub
mov
cwde
sahf
dec
mov
iret
push
xor
sbb
mov
mov
leave
mov
pop
jmp
imul
ficom
xlat
fnstenv
xlat
pusha
addr16
mov
and
adc
bound
xor
xchg
xor
mul
mov
stos
loop
(bad)
loope
mov
pop
out
sbb
dec
push
or
or
fs
mov
ret
jg
or
std
data16
mov
test
cmp
outs
jmp
inc
das
daa
dec
es
lahf
loop
popf
fnstenv
repz
mov
ret
int3
(bad)
(bad)
sbb
arpl
push
fisub
das
cdq
jb
cmps
mov
fist
inc
aam
fisttp
sub
popa
test
jmp
btc
mov
push
sti
rol
in
pop
fwait
add
add
adc
dec
loop
jmp
mov
jns
daa
ret
scas
push
xor
and
sar
ins
mov
pop
es
pop
rcl
ficomp
sahf
int3
cdq
pushf
or
cmp
cld
jno
fsub
mov
inc
xchg
(bad)
call
daa
sahf
mov
sub
adc
ins
jmp
out
mov
test
pop
and
add
inc
sbb
jae
cmp
test
xchg
pop
lods
leave
leave
jge
(bad)
fld
jne
enter
lods
xor
sub
jns
adc
cdq
clc
add
push
fbld
add
pop
sbb
pusha
nop
loope
lock
arpl
push
add
lods
scas
mov
lea
or
adc
sti
sub
mov
dec
sub
call
sti
les
outs
or
add
mov
(bad)
(bad)
dec
(bad)
jnp
daa
add
leave
rol
stc
and
mov
es
mov
mov
add
pop
mov
ins
and
aad
(bad)
lods
cld
arpl
and
jo
push
add
adc
iret
js
movs
sbb
sub
mov
test
ret
cmp
stos
lds
stc
es
out
dec
mov
fstp
pop
mov
and
mov
dec
pop
jne
into
es
adc
sub
or
es
mov
add
xchg
into
ins
bound
cmp
pop
(bad)
leave
pop
dec
or
call
add
mov
or
jbe
ret
cwde
push
push
adc
pop
jmp
(bad)
sti
add
pop
les
mov
push
mov
idiv
push
jnp
int3
movs
call
aam
call
(bad)
push
in
push
jne
outs
push
daa
cmp
and
cmc
fstp
in
stc
pop
mov
call
outs
and
dec
sbb
dec
jl
dec
sub
jne
add
pusha
scas
add
and
mov
pop
pushf
add
in
and
int
dec
inc
test
ins
inc
mov
fwait
pop
retf
rol
fwait
pusha
outs
xchg
mov
cld
les
push
in
dec
add
addr16
jne
ret
push
daa
lods
lahf
and
nop
dec
out
xor
sbb
adc
inc
adc
stos
es
xchg
adc
mov
sub
add
rcr
out
popf
imul
dec
add
xchg
jb
lods
out
mov
jae
stc
inc
dec
repz
cli
or
xchg
out
xor
xor
push
mov
adc
cdq
in
arpl
test
sub
(bad)
xchg
mov
adc
xor
cdq
mov
es
xor
mov
or
ins
in
div
lds
jne
mov
ins
mov
(bad)
mov
inc
xchg
or
lods
pop
ins
pop
mov
dec
and
ror
imul
je
jae
das
or
and
xchg
stos
inc
outs
jne
mul
es
iret
into
pop
xlat
and
leave
pop
xchg
adc
es
test
repnz
or
int
cmp
xor
and
retf
dec
xchg
in
push
retf
scas
lock
add
xchg
sbb
ss
jle
js
inc
inc
rcr
dec
jg
rcr
mov
cli
sub
fidivr
loop
(bad)
cli
or
shl
and
cs
(bad)
fld
jecxz
and
inc
ins
mov
jg
cs
inc
inc
pop
pushf
sahf
pop
push
dec
hlt
or
imul
sar
mov
dec
sahf
sbb
ret
sar
(bad)
mov
jle
or
movs
inc
paddusw
jae
mov
cmp
jns
in
pop
cmp
xchg
mov
inc
sti
retf
adc
fcom
pop
inc
clc
xor
jbe
popw
sbb
sbb
test
into
call
mov
lods
loop
mov
ror
sbb
mov
lock
fnstenv
mov
fistp
cmp
mov
sar
xor
mov
stos
xchg
mov
(bad)
dec
adc
call
stc
or
les
push
jb
or
test
clc
test
push
push
call
mov
xor
popa
data16
adc
rcr
out
add
jmp
call
stos
nop
mov
or
ds
call
sti
adc
dec
cmp
(bad)
mov
pushf
sub
in
gs
das
into
mov
xchg
(bad)
cmc
sbb
pop
std
mov
movs
inc
sti
loope
data16
outs
mov
in
cli
sub
sar
ror
mov
pop
movs
std
call
cmps
rcr
push
adc
ror
mov
or
sub
ret
add
movs
in
cmc
lock
out
dec
arpl
nop
imul
inc
xchg
mov
and
add
call
adc
add
mov
pop
mov
pop
push
push
pusha
mov
xor
cmp
and
pop
aaa
dec
jno
popa
xor
mov
push
cmps
push
mov
mov
dec
cmp
sbb
cld
movs
into
repnz
mov
sub
xor
test
dec
sub
adc
xor
cld
das
or
inc
mov
imul
add
and
dec
xchg
int3
jno
test
jo
mul
ins
xor
cwde
jb
sbb
cdq
call
push
pushf
push
xor
fs
cs
add
add
mov
ja
sahf
nop
jbe
xlat
jnp
(bad)
out
jp
pushf
cmp
loopne
push
movs
popf
fiadd
cmp
stc
pop
dec
mov
jmp
pop
push
out
push
mov
ret
mov
mov
(bad)
mov
push
cmp
push
xchg
ins
inc
movs
mov
dec
xor
dec
and
je
push
push
pop
xchg
and
fucomip
push
jl
pop
sub
mov
inc
popf
hlt
inc
pushf
add
dec
xor
xchg
pushf
into
lea
mov
ret
xor
adc
int3
xor
and
or
inc
inc
jp
add
mov
inc
ins
(bad)
(bad)
in
stos
rcr
outs
(bad)
shl
pop
xchg
lods
les
ds
nop
mov
mov
fidivr
stos
and
sar
pop
xchg
cmps
sbb
cmp
out
lds
mov
iret
xchg
loop
lods
jnp
mov
sub
js
dec
or
mov
(bad)
inc
cmp
call
xor
add
pop
mov
jo
inc
cmp
ds
retf
xchg
ja
stos
outs
jp
add
pop
stc
int
mov
jbe
sahf
sub
test
xchg
fcom
mov
outs
test
outs
pop
repz
loopne
aaa
(bad)
and
outs
jmp
hlt
adc
mov
test
test
mov
and
sub
out
out
test
ins
test
sub
push
scas
cmp
pop
fild
or
pop
mov
push
add
cld
lock
cmc
cs
xchg
sbb
xor
sti
arpl
mov
sbb
mov
fwait
sub
fs
sbb
aaa
mov
rol
mov
mov
mov
out
dec
and
les
and
int3
bt
dec
shl
div
ret
mov
jne
in
scas
or
inc
sar
out
cmp
mov
shl
repnz
xor
xor
inc
and
or
xchg
or
repnz
add
fist
add
and
inc
and
bound
inc
(bad)
retf
hlt
loope
(bad)
out
sub
add
xchg
enter
mov
xchg
nop
sbb
in
enter
mov
dec
jp
mov
push
fiadd
xor
sahf
loope
mov
pop
mov
jle
test
jne
push
lock
or
xchg
call
inc
mov
dec
pop
shl
pop
mov
out
mov
(bad)
iret
jp
out
cmp
dec
repz
lds
jge
jns
int
inc
call
lods
aad
cmp
retf
mov
push
ss
pop
test
add
xchg
jmp
call
fld
jle
mov
sub
shl
pop
add
add
or
mov
fistp
cwde
ins
popf
push
imul
mov
mov
sahf
mov
add
ret
repz
shl
push
movs
mov
gs
lods
mul
jl
jnp
dec
mov
push
pop
push
mov
sbb
jp
jg
xchg
ins
sub
pusha
fisubr
popa
test
cli
test
movs
fs
adc
push
mov
adc
cmp
(bad)
push
pop
mov
sbb
test
pop
jge
mov
sub
fwait
sbb
out
push
sahf
add
sti
std
push
and
mov
sbb
pop
sub
xor
sbb
out
adc
retf
add
pop
(bad)
fld
mov
push
into
pop
sbb
push
mov
in
cmp
sbb
sub
and
ja
pop
cmp
xlat
pop
rcl
sub
add
je
add
out
push
xor
prefetchnta
jmp
adc
out
(bad)
scas
jo
ins
jbe
and
cmp
pop
mov
arpl
int3
test
lods
xchg
pop
ret
cmp
imul
and
dec
cdq
mov
mov
push
hlt
jbe
aaa
pushf
fld
loope
dec
sbb
xchg
jne
cmp
mov
adc
sbb
mov
imul
jne
retf
scas
daa
pop
adc
retf
out
bound
inc
push
ja
(bad)
rcl
sub
add
repnz
mov
ja
jp
dec
das
bnd
into
push
pop
mov
(bad)
std
je
mov
jle
pushf
ins
jmp
add
leave
imul
adc
out
(bad)
pop
inc
fsubr
mov
dec
sub
or
cmps
jecxz
or
fyl2x
cmp
outs
cmp
adc
jge
lea
pop
dec
aas
fsub
mov
mov
es
addr16
sbb
sbb
mov
xchg
ds
push
adc
fidiv
lock
ret
mov
cmp
jle
sbb
xchg
bound
push
cmp
not
out
test
jnp
(bad)
jbe
push
das
jle
popa
dec
pop
rcr
clc
aad
adc
dec
shl
fisubr
shr
and
das
dec
pop
dec
test
in
mov
test
jae
(bad)
int3
call
repnz
mov
outs
jle
add
or
into
gs
ficomp
imul
push
jne
pop
and
dec
cmps
fimul
mov
ins
mov
hlt
fidiv
rcr
dec
ficom
mov
sbb
jl
or
hlt
sbb
jo
or
(bad)
adc
mov
nop
js
inc
mov
jle
push
mov
cmp
lods
pusha
and
and
add
jno
add
fs
add
inc
aam
push
xor
enter
mov
inc
fstp
sbb
or
or
push
push
pop
adc
push
ss
loopne
sbb
out
jo
or
mov
pop
out
adc
sbb
or
push
pop
or
pop
add
fcom
int3
rol
jmp
mov
out
jnp
adc
push
addr16
sbb
inc
call
lods
pop
xchg
add
jmp
mov
mov
shl
xor
shr
mov
repz
xor
mov
push
push
pop
test
rsm
mov
stc
fisttp
cwde
push
rol
and
ja
sbb
fdiv
push
jecxz
stos
adc
adc
add
out
ins
push
xchg
sti
push
dec
pop
dec
pop
jb
nop
fmul
cmp
je
xor
sbb
mov
inc
aad
add
push
fadd
jmp
mov
pop
fld
cmc
xor
dec
push
pop
(bad)
lods
test
cmps
push
push
gs
rol
jmp
out
jmp
or
push
pop
scas
cwde
fcmovnbe
loopne
xchg
jecxz
test
mov
fs
outs
aas
cmp
les
imul
mov
pop
cmp
dec
jno
aad
les
fwait
cmps
and
lahf
adc
jb
cmc
stc
adc
ret
jl
int3
sbb
mov
test
mov
jle
push
cmp
jae
push
jmp
add
int
cmps
xchg
pop
loop
test
retf
cmp
sar
jae
or
daa
ss
or
out
aam
add
test
jns
pop
jp
jns
xor
mov
sub
adc
jns
es
jae
xchg
hlt
(bad)
fld
lods
repz
mov
xor
push
mov
inc
adc
cmp
(bad)
imul
loop
pop
adc
cmp
test
jns
and
jp
mov
aad
add
xchg
push
cmps
or
cmp
add
lea
mov
xor
repz
pusha
mov
cmp
ins
mov
addr16
inc
mov
loope
arpl
adc
int3
and
out
or
mov
clc
mov
rcl
cmp
jo
fcomp
lds
mov
movs
pushf
or
mov
sbb
daa
dec
retf
clc
pusha
cli
in
js
ret
in
cld
mov
call
inc
mov
mov
inc
mov
mov
test
in
add
push
push
jo
mov
dec
test
jp
inc
push
cmp
add
into
ror
cmp
jecxz
jg
mov
adc
jg
push
inc
adc
jle
out
aam
mov
fmul
sbb
pushf
lock
iret
stos
ss
cs
mov
(bad)
cmp
jbe
lock
fdivr
lods
sbb
cmp
sub
and
das
les
int3
sub
xchg
call
add
dec
repnz
jb
xchg
push
pop
sar
mov
mov
(bad)
pop
pop
pop
shl
jo
mov
ss
nop
int
loopne
mov
jl
les
xor
fnstcw
sub
sbb
mov
lods
push
gs
mov
call
jg
add
adc
dec
or
xchg
pop
adc
pop
(bad)
fisttp
xchg
std
mov
mov
js
inc
cmp
(bad)
js
adc
jmp
lea
fistp
sti
cmp
mov
call
dec
mov
mov
cmp
xor
sbb
int
je
mov
xor
inc
ins
imul
pop
xor
sub
inc
sbb
imul
and
lods
xor
inc
cmp
inc
mov
xchg
out
mov
cmp
push
dec
lods
cmp
jp
or
mov
out
push
xchg
mov
add
test
pop
cld
movs
inc
ins
dec
or
jns
push
adc
loop
jge
rcl
jb
ror
leave
mov
mov
xchg
lahf
push
(bad)
mov
xlat
ficomp
in
test
jl
ins
jmp
pusha
cmps
lods
test
stos
or
jae
jbe
mov
das
fimul
pop
in
fsub
aad
ss
pop
inc
dec
sub
mov
call
pop
cmp
jecxz
lock
lds
jo
xor
call
(bad)
retf
js
in
push
push
mul
clc
inc
adc
loop
pop
push
and
mov
jne
rol
dec
xor
daa
push
xchg
stos
fist
pop
sbb
out
jle
sbb
xor
dec
pop
addr16
push
jmp
cmp
mov
sub
xchg
push
pusha
nop
(bad)
mov
inc
lahf
cmp
ins
jl
mov
gs
(bad)
jg
push
cdq
cwde
sub
mov
push
fs
fs
movs
loope
(bad)
jmp
in
push
mov
inc
out
imul
ja
mov
adc
leave
or
and
stos
mov
jmp
popf
stos
pop
hlt
sub
push
cdq
pop
adc
push
dec
mov
mov
stos
repnz
in
and
psubb
mov
retf
es
js
data16
ins
loop
fbld
shl
cdq
mov
aam
jne
out
mov
lahf
fild
push
cli
jns
neg
push
push
pop
sub
fisttp
and
repnz
repnz
push
aas
xchg
cmp
sti
imul
mov
into
dec
dec
sbb
or
jmp
shl
rol
push
and
cmp
xchg
xor
mov
jp
cmp
call
cmp
jmp
inc
dec
pop
mov
push
push
fistp
retf
retf
loopne
mov
jne
push
dec
pop
jo
outs
add
jne
test
es
adc
sbb
movs
fidiv
push
sbb
mov
js
lahf
push
fcomp
cmp
xchg
in
mov
ins
out
push
cmc
imul
cld
xchg
pop
cdq
lods
push
push
(bad)
icebp
cmp
dec
outs
clc
jmp
test
xchg
mov
(bad)
aas
retf
out
(bad)
xchg
or
aas
cmp
pop
fwait
int
mov
mov
jo
jae
adc
test
call
sub
mov
bound
fadd
xchg
adc
ficomp
mov
add
fisttp
inc
test
sar
and
movs
jbe
movs
dec
mov
mov
push
cmovg
cmp
cmp
pop
test
cmp
test
jmp
jg
jecxz
xchg
mov
pop
rcr
mov
mov
sbb
test
shl
std
xchg
and
enter
pop
rcr
test
mov
xlat
sub
std
in
or
pop
in
dec
jp
xchg
mov
or
xchg
sar
add
xor
fiadd
push
inc
lea
popf
das
jae
add
(bad)
out
out
mov
(bad)
pop
adc
inc
fucomip
dec
pop
push
mov
hlt
fisttp
mov
xchg
std
or
pop
addr16
adc
outs
dec
dec
pop
mov
clc
mov
sbb
dec
out
push
stos
sub
in
or
mov
mov
nop
imul
mov
add
(bad)
mov
mov
and
cs
push
mov
(bad)
xor
xor
outs
and
ss
xor
sar
push
xor
dec
inc
popf
in
gs
leave
mov
es
mov
adc
clc
or
adc
xor
jecxz
ret
call
ins
and
sbb
rcr
aad
ins
mov
stos
xchg
xor
popa
sbb
or
mov
test
lea
pop
inc
ret
or
(bad)
(bad)
push
icebp
and
aas
cmp
xchg
fmul
mov
movs
mov
out
push
push
mov
scas
dec
(bad)
data16
std
shl
retf
dec
push
mov
cli
ror
add
mov
movs
xor
fstp
out
repz
push
cli
mul
jo
int3
push
mov
adc
pop
out
mov
popf
sahf
cmp
push
out
gs
bound
cdq
arpl
movs
mov
adc
test
push
fsub
sub
test
jge
cmp
mov
dec
mov
xlat
mov
sbb
sbb
test
retf
movs
fwait
adc
xor
rcr
add
aad
or
adc
pop
add
imul
mov
sti
mov
int
pop
xchg
js
dec
movs
test
imul
xchg
inc
test
rcr
add
push
int
test
fsqrt
adc
lea
popf
inc
adc
(bad)
jmp
jl
or
shl
jl
ror
mov
retf
int3
pop
ret
xor
sub
inc
pop
adc
cmp
add
pop
ds
inc
push
mov
pop
dec
fnsave
sbb
fbld
mov
and
ins
rcr
cmp
mov
cmp
cmp
imul
out
jp
and
cmp
jl
neg
cwde
cli
cmp
or
arpl
inc
shl
cmp
push
sub
mov
in
das
jp
fcmovnu
scas
cs
xor
rcl
arpl
mov
(bad)
movs
sub
xchg
xchg
ret
(bad)
mov
xchg
mov
out
stc
mov
cmp
xchg
call
inc
imul
pop
push
ret
stos
(bad)
adc
or
xor
fsubrp
stos
das
(bad)
repz
mov
mov
lods
sahf
mov
(bad)
jno
push
xor
not
pop
xchg
call
lock
addr16
aas
mov
push
push
loope
pop
inc
imul
mov
ins
sbb
cmp
bound
and
adc
xlat
mov
(bad)
in
push
int
das
outs
mov
das
ins
add
aaa
cs
in
sub
scas
lock
xor
fwait
inc
cdq
sar
and
sbb
inc
push
cmps
js
jno
popa
mov
mov
pop
sub
or
mov
lods
dec
(bad)
scas
out
js
frstor
push
push
stc
xor
xchg
pushf
aam
jmp
mov
cmps
fld
push
cld
mov
mov
jns
xor
sub
ret
rol
fcmovnbe
jecxz
sar
fsubr
jne
es
int
(bad)
les
inc
pop
pop
lock
mov
shl
push
adc
and
inc
jbe
push
cdq
xchg
(bad)
js
inc
inc
data16
iret
sbb
inc
xor
jmp
(bad)
int3
adc
add
xchg
cmp
cdq
mov
fcom
aaa
jle
mul
sub
ins
dec
add
jg
jb
sub
cmps
aaa
aam
xchg
jl
int
jmp
mov
imul
cmps
pushf
push
ficomp
adc
bound
jo
xlat
leave
or
call
scas
xor
or
shl
pop
hlt
mov
stos
fs
mov
int3
test
ret
pop
pop
inc
shl
push
inc
sahf
pop
inc
jge
loop
aaa
in
inc
fs
and
mov
aaa
fs
das
or
out
push
call
and
das
loope
cmc
call
sbb
sbb
dec
add
push
inc
cmp
icebp
mov
sub
das
arpl
scas
into
push
clc
jns
mov
mov
daa
int3
cmc
pushf
or
into
xchg
push
cdq
adc
les
aad
xor
pop
cmp
test
imul
mov
sub
adc
mov
mov
aam
jg
mov
nop
inc
sti
inc
loop
and
les
mov
jne
mov
fwait
enter
stos
dec
sub
aas
test
xchg
mov
inc
sub
dec
mov
xor
das
retf
adc
dec
jge
ja
inc
cmp
jmp
iret
sbb
(bad)
cmps
(bad)
push
mov
outs
jl
push
push
or
clc
mov
adc
inc
push
add
shl
xor
xor
ja
dec
jmp
sbb
rol
out
jg
(bad)
adc
mov
push
pop
pop
jge
rol
add
cmp
inc
pushf
in
aam
jg
sub
jbe
inc
dec
dec
ror
inc
rcl
rcl
das
pusha
mov
mov
sub
(bad)
mov
cmp
cmp
mov
movs
jg
xor
test
ficomp
add
ffree
test
retf
dec
or
shr
rcr
jl
sbb
out
fcmovne
fadd
sahf
fs
movs
adc
xchg
movs
xor
out
bound
sbb
jge
scas
add
xchg
xor
jmp
add
mov
popf
(bad)
aas
sub
cmps
mov
and
pop
arpl
push
adc
xchg
xchg
shr
xchg
xor
call
dec
std
push
add
std
dec
dec
in
cs
pop
mov
xchg
std
pop
jnp
mov
lock
rol
jo
push
cdq
bound
add
add
mov
shr
lds
add
test
push
mov
xor
test
cmp
or
and
inc
into
and
fdiv
pusha
xlat
inc
xbegin
cdq
jge
or
xlat
addr16
jg
icebp
cwde
or
and
ret
jle
ficom
push
push
stos
dec
fiadd
jo
dec
xlat
push
pushf
dec
cmp
jnp
mov
(bad)
xor
xchg
xor
stos
xor
xchg
push
mov
and
fistp
outs
push
sub
add
jae
push
addr16
test
add
scas
int3
js
lods
mov
rcr
out
lock
xchg
push
cwde
aaa
xchg
pop
inc
jecxz
xor
jb
call
leave
jno
int
fdiv
divps
cli
cmps
pop
mov
fs
mov
ja
sub
stos
or
mov
mov
xor
shl
cdq
shl
arpl
clc
call
loop
and
add
loopne
lods
mov
jns
clc
xor
loope
dec
jmp
fmulp
add
mov
leave
push
jge
mov
dec
push
mov
jle
stos
dec
ss
popf
sti
sar
inc
push
je
fcom
pop
adc
and
sub
adc
jl
icebp
mov
call
adc
das
mov
test
jb
xchg
adc
dec
call
and
push
inc
jge
push
icebp
std
sbb
aas
dec
lods
jbe
mov
cmp
adc
lsl
fdiv
mov
retf
lods
in
push
push
xor
test
sar
(bad)
call
mov
ss
cmps
xchg
arpl
add
repnz
(bad)
lea
push
js
jge
fmulp
in
movs
dec
cmc
jbe
mov
out
fld
push
mov
mov
cmp
mov
pop
ins
inc
xchg
cmp
jp
cld
mov
inc
test
jae
cmp
aam
xor
xor
inc
sub
popf
and
add
imul
inc
out
sub
jmp
mov
and
test
inc
inc
jb
push
fcmovne
stos
(bad)
shl
retf
dec
push
or
cdq
push
shl
inc
push
xchg
pop
sbb
mov
imul
mov
mov
fsub
fild
pop
mov
mov
mov
adc
or
out
hlt
push
test
or
das
fidivr
loopne
sti
sub
mov
fisubr
jnp
fwait
mov
mov
mov
stos
lea
(bad)
sahf
jecxz
pop
or
jmp
sub
aam
out
and
(bad)
jecxz
pop
enter
inc
rol
mov
daa
inc
jge
xor
(bad)
push
retf
cmp
add
jg
enter
(bad)
(bad)
es
popf
and
daa
mov
xor
jl
ins
jmp
jg
pop
je
and
adc
add
repz
mov
sub
lea
push
xor
inc
arpl
jbe
inc
out
pop
jae
fnstcw
ss
leave
push
(bad)
sti
cmc
cmp
ds
js
ficom
or
outs
mov
les
push
shr
cdq
out
stos
lods
cwde
daa
hlt
out
sbb
jae
aas
aaa
movs
pop
or
pusha
push
adc
sbb
pop
xor
test
mov
push
pushf
lock
out
mov
mov
js
sub
sbb
mov
outs
sub
and
dec
xchg
test
ja
add
sub
xor
jmp
adc
(bad)
outs
lds
je
fimul
pop
mov
and
loop
xchg
pop
push
mov
loop
or
sbb
mov
(bad)
push
add
jmp
mov
es
pop
sbb
mov
xor
push
sub
pushf
(bad)
pop
push
outs
jbe
mov
and
mov
jns
inc
(bad)
mov
jne
or
add
repz
(bad)
enter
nop
push
cmps
scas
push
gs
repz
jns
pop
dec
xchg
rcl
(bad)
cli
mov
xchg
xor
fld
in
scas
aad
pusha
fild
xchg
cld
cmp
xor
cmovp
fdiv
pop
aam
jle
push
dec
nop
(bad)
mul
fdiv
or
xchg
mov
gs
cwde
retf
popf
in
inc
mov
mov
sbb
outs
push
test
mov
pop
leave
aad
xchg
mov
mov
test
or
xor
cmp
push
es
adc
or
pop
jae
pop
pushf
inc
add
inc
ins
ja
cmp
mov
(bad)
(bad)
daa
inc
cmps
xlat
sar
jae
push
mov
cmp
mov
xchg
mov
push
jnp
adc
shr
lock
sub
add
xchg
daa
mov
dec
adc
dec
cli
pop
add
int
cs
cmp
mov
push
(bad)
xchg
push
out
and
cmp
dec
cwde
push
rol
push
mov
push
mov
(bad)
loopne
sbb
not
xor
pop
lea
sub
clc
mov
mov
push
retf
out
sub
adc
lahf
cli
mov
pop
jle
movs
mov
addr16
push
jge
and
xor
iret
(bad)
stos
lock
aam
adc
cmc
ins
popf
enter
into
test
mov
mov
(bad)
or
mov
mov
lock
inc
mov
fs
add
(bad)
push
(bad)
out
(bad)
sahf
pop
cmp
sbb
mov
lds
call
inc
into
xor
jnp
loop
loopne
and
sbb
sub
or
push
dec
sti
jae
cld
xchg
push
repnz
(bad)
adc
xlat
dec
je
cli
js
inc
shr
(bad)
and
das
icebp
enter
mov
pop
fistp
sbb
stc
cmps
jmp
mov
cmp
jmp
in
xlat
dec
push
sbb
push
cmps
scas
inc
dec
sub
fild
xor
retf
dec
test
mov
jno
adc
sub
unpckhps
loopne
les
sbb
xchg
inc
je
js
xchg
cs
adc
lods
push
in
pop
jb
icebp
and
inc
stos
popf
stos
jb
jmp
and
push
xor
mov
(bad)
ficom
popf
jne
push
jae
inc
add
fimul
dec
test
and
repnz
(bad)
push
and
dec
in
ret
and
pop
pop
push
test
icebp
pop
into
cmp
test
arpl
mov
loopne
mov
mov
dec
loopne
jecxz
sub
add
and
sahf
fimul
addr16
ds
and
movs
imul
mov
push
hlt
jg
sbb
rcr
push
leave
sub
add
pop
out
or
inc
dec
mov
es
mov
idiv
mov
push
lods
jg
lods
aas
cmp
pop
mov
repnz
leave
cld
fmul
in
push
inc
push
xor
push
pop
lods
(bad)
jecxz
ins
mov
(bad)
xor
into
outs
clc
fwait
rol
(bad)
addr16
ret
fisubr
mul
xchg
retf
adc
jbe
or
int
adc
xor
pop
scas
stos
sbb
cdq
aaa
xchg
je
popa
jnp
int
(bad)
and
jno
cmp
(bad)
(bad)
xchg
(bad)
mov
cmp
pusha
(bad)
shl
cmp
stos
sti
mov
or
jno
sahf
div
ror
mov
push
mov
hlt
or
not
inc
ss
mov
ror
iret
test
retf
mov
hlt
ds
dec
loopne
inc
cli
loop
mov
shr
les
jp
sub
out
test
mov
sahf
js
mov
mov
jbe
cwde
mov
sub
adc
pusha
inc
push
or
add
dec
(bad)
cmp
add
cs
call
xor
in
ins
test
or
shr
mov
sahf
cdq
(bad)
mov
inc
xchg
pop
xchg
mov
jae
jb
cmp
aam
adc
das
(bad)
lock
shl
int3
inc
(bad)
(bad)
ins
sbb
(bad)
mov
add
jae
int3
pop
add
cmp
in
imul
popf
test
out
test
sub
jmp
inc
pop
xor
add
(bad)
sub
dec
rcl
stc
out
sar
mov
out
sbb
jne
xor
fdiv
pop
sub
or
aaa
mov
stos
or
mov
sub
add
dec
xor
iret
popa
jno
sbb
fs
mov
test
sub
jl
movs
loopne
xor
pop
pushf
pusha
push
pop
retf
and
add
sti
stos
mov
out
add
adc
xchg
mov
lea
inc
cs
pop
lods
hlt
pop
(bad)
sti
inc
pusha
jmp
push
int
imul
jno
mov
addr16
movs
dec
sub
cs
xor
mov
shl
ja
pushf
cmp
xlat
movs
jmp
je
xchg
and
scas
mov
int
into
data16
ss
ins
dec
shl
cmc
push
inc
cmps
call
xor
nop
imul
dec
push
ins
or
fsub
cmp
out
int3
xchg
xchg
int3
ss
mov
in
push
inc
and
fucomi
test
pop
xchg
icebp
loop
xchg
add
inc
xor
cmps
clc
mov
mov
into
test
sub
rcr
dec
ret
sbb
xor
sbb
sbb
scas
(bad)
(bad)
push
sub
imul
and
mov
dec
mov
ret
popa
add
cmps
daa
pop
aad
or
movs
inc
sub
call
std
fs
add
in
mov
ss
aam
push
adc
xchg
test
test
jp
or
popa
gs
mov
ja
add
(bad)
mov
cmp
mov
lods
fld
jae
(bad)
(bad)
movs
dec
test
mov
mov
push
out
add
pushf
xor
xor
ds
aaa
fdiv
jmp
jmp
jl
inc
jns
scas
jp
push
(bad)
pop
jmp
cdq
cmps
mov
jmp
xor
xchg
push
and
sbb
fadd
jl
xchg
out
mov
daa
lds
and
inc
push
pop
add
dec
in
sub
(bad)
out
ret
sbb
and
enter
lahf
aas
stos
mov
(bad)
aam
cdq
pop
ins
cmp
ror
xchg
push
jg
loop
test
push
dec
aad
(bad)
mov
mov
out
sbb
pop
push
sub
pop
dec
(bad)
pop
jge
rol
fsub
adc
or
sti
dec
pop
pusha
cdq
popf
inc
mov
pop
int
nop
mov
idiv
lods
xor
sub
imul
not
ficomp
xchg
rcr
xor
inc
and
pop
jle
mov
cli
por
jo
pusha
addr16
pop
add
lea
xchg
test
call
cli
sbb
clc
jne
sti
sbb
cmps
(bad)
mov
or
xlat
xor
mov
fdivr
pop
out
lods
movs
mov
mov
mov
out
ret
repnz
cmp
mov
mov
stc
test
pop
les
mov
xor
jg
pop
or
stc
iret
fisub
push
das
in
shl
test
out
retf
mov
or
in
lods
push
pop
mov
inc
je
jp
xchg
sbb
inc
dec
jge
push
jp
and
popa
imul
fcom
sbb
mov
push
sub
ret
xchg
sub
repz
jmp
and
call
xchg
loopne
je
and
jge
mov
test
(bad)
xchg
movs
aad
movs
rcr
outs
arpl
and
out
lds
or
adc
popf
jmp
sbb
add
out
cld
xor
idiv
sbb
mov
sbb
mov
in
jo
mov
sar
sti
inc
sti
xchg
jns
adc
(bad)
fisub
and
out
icebp
das
mov
and
retf
inc
jns
sub
ja
std
adc
lds
xor
mov
cmp
xchg
cmp
fs
addr16
and
xchg
scas
and
in
jge
arpl
and
pop
mov
sub
sub
fild
xchg
fld
pop
fist
scas
sar
rcl
mov
sbb
dec
jb
rcr
xchg
scas
jmp
lods
xor
popa
mov
xlat
fistp
(bad)
mov
push
hlt
and
retf
mov
call
cmp
sbb
aam
dec
pop
cmp
sbb
(bad)
mov
ins
add
adc
ffreep
inc
ins
or
sub
sbb
mov
jns
scas
cmp
adc
call
push
cmp
mov
cmp
sub
out
daa
adc
ror
mov
je
adc
pop
imul
aad
retf
mov
xchg
add
test
pop
sub
mov
dec
inc
sub
add
mov
mov
inc
and
ret
or
pushf
stos
dec
or
stos
(bad)
mov
xchg
fidiv
mov
sub
push
xchg
icebp
sub
aad
and
add
test
xchg
dec
dec
adc
addr16
adc
jp
mov
sbb
mov
mov
cmp
arpl
push
inc
rol
inc
pop
shl
idiv
sbb
fst
sbb
inc
push
jno
dec
jne
dec
and
lock
pop
leave
sbb
inc
push
imul
adc
aad
push
test
std
leave
sub
out
pop
loopne
jns
in
sub
mov
movs
fmul
ds
(bad)
stc
or
mov
es
xchg
cmp
push
in
adc
scas
cmp
in
mov
fistp
std
xor
or
mov
xor
retf
lods
cmps
cdq
ja
dec
mov
vpmacsdqh
dec
outs
dec
sbb
aad
xor
ror
jnp
mov
sub
mov
mov
xlat
and
mov
ins
or
loope
xchg
call
repnz
sbb
jmp
test
fdivr
cwde
ins
dec
lock
add
jmp
fbstp
ss
pusha
cmps
int3
dec
out
shl
icebp
xor
inc
sub
ror
xor
lahf
pop
ror
clc
dec
or
adc
hlt
aaa
ins
test
xor
ret
jge
inc
adc
into
(bad)
adc
(bad)
dec
iret
push
inc
jmp
mov
sahf
add
dec
aaa
bound
jl
sub
clc
jmp
xchg
das
rcl
adc
xchg
pop
jmp
sub
or
sbb
xchg
imul
in
jp
test
retf
cmp
stos
mov
xor
mov
lods
outs
jmp
or
movs
or
aaa
fucomp
jnp
adc
adc
outs
aaa
imul
push
mov
je
xor
stc
cmp
or
outs
fdivr
fsubr
mov
lock
outs
cmp
call
inc
mov
cmp
mov
dec
fisttp
and
ins
add
lds
pop
repnz
loopne
mov
inc
jg
add
mov
dec
or
cdq
jne
test
out
enter
mov
fimul
dec
sub
cmp
jno
mov
sub
cwde
(bad)
jno
mov
adc
mov
mov
sar
adc
mov
test
xor
ror
jbe
std
data16
lock
dec
out
scas
bound
dec
repz
popf
pop
fdiv
bound
out
gs
fisub
cmp
sub
inc
mov
push
jne
dec
(bad)
push
xchg
mov
xchg
jl
or
test
aam
fst
cmp
retf
in
cmp
dec
push
loop
stos
(bad)
mov
push
sbb
ror
test
icebp
stc
inc
jge
adc
lods
inc
inc
mov
jg
dec
call
lods
mov
push
pushf
push
jmp
(bad)
pop
mov
sub
push
adc
and
outs
sub
shr
sbb
inc
mov
mov
dec
jg
rcr
jae
cmps
mov
adc
mov
cmp
and
push
inc
jmp
pushf
pop
push
and
out
add
out
add
mov
cmp
je
mov
mov
inc
inc
push
int
add
les
mov
adc
mov
inc
jns
fld
inc
pop
sahf
and
adc
sbb
mov
mov
inc
fldcw
mov
dec
sbb
nop
(bad)
dec
nop
mov
hlt
adc
shr
(bad)
push
mov
ja
xchg
xchg
mov
into
fidiv
cmc
cmp
cmp
bound
inc
mov
mov
adc
fld
in
or
jns
sbb
test
(bad)
cmp
das
jmp
xchg
push
movntq
imul
shr
push
cmp
ret
test
ds
xchg
lock
and
cs
lods
inc
ins
mov
add
lods
sub
ja
sub
loopne
xchg
jle
inc
xor
daa
mov
xchg
add
ins
fwait
ds
movs
or
mov
lea
popa
retf
xchg
dec
xor
fimul
push
xchg
cmps
in
dec
add
loope
call
push
and
ja
call
in
lods
cmp
rcr
ret
adc
test
(bad)
dec
mov
sub
dec
pop
pop
test
mov
rcl
shl
dec
ja
and
pmovmskb
cwde
mov
cmps
sub
ja
sbb
xor
shr
and
push
inc
jo
call
iret
adc
mov
in
js
ficomp
into
int
or
push
mov
clc
cmp
hlt
jbe
push
mov
ins
sub
(bad)
push
(bad)
int
nop
sub
enter
cmp
push
fisttp
icebp
out
(bad)
test
fidiv
inc
inc
dec
std
or
add
cmp
xlat
cmp
shr
leave
out
outs
mov
das
xchg
addr16
mov
push
add
ret
jns
out
pop
mov
scas
(bad)
and
dec
dec
cmp
xor
sub
test
ret
sbb
loope
rcl
inc
sahf
repnz
cs
pop
ins
push
in
cld
stos
jecxz
add
(bad)
pusha
ja
imul
push
idiv
mov
and
cmps
sub
or
fwait
adc
inc
ja
jp
jp
ret
or
ror
add
cmp
aaa
push
outs
ror
or
jns
fstp
jns
mov
movs
mov
(bad)
fiadd
lahf
daa
jae
ror
jecxz
cs
ds
cwde
and
test
sub
or
cmp
pop
fs
push
cmc
cmp
xor
jecxz
jnp
mov
cli
xchg
in
xor
mov
in
out
imul
mov
cmc
add
add
xlat
pop
pop
push
sub
jle
(bad)
pop
cmp
mov
rcr
push
aaa
and
or
fnstenv
lahf
xchg
sbb
push
aas
inc
inc
imul
and
lahf
stc
cmp
into
fs
pusha
mov
(bad)
cmps
lods
rcr
pushf
sti
test
jnp
popf
std
daa
into
fwait
inc
test
pop
adc
dec
sub
or
sbb
aas
movs
enter
mov
xchg
jg
jo
lock
add
sbb
out
sbb
xor
mov
jmp
inc
fsubr
movs
mov
or
cdq
push
xor
sahf
sub
xchg
sub
ret
rcl
sub
mov
or
test
adc
outs
jmp
mov
mov
pop
fidiv
cmp
jbe
sub
pop
in
mov
push
cmp
xchg
ins
mov
gs
pop
and
cdq
and
shr
jo
test
adc
fcmovb
dec
and
pop
adc
cdq
or
sar
cmp
or
or
arpl
sbb
inc
(bad)
sbb
mov
mov
dec
stos
stc
paddb
jecxz
pushf
and
fs
int3
loope
cmp
pop
pop
mov
and
imul
arpl
push
mov
xor
push
pop
fsubr
pop
cmp
pop
sbb
out
leave
ja
pop
sbb
push
jmp
pusha
mov
add
xor
ret
lea
test
pop
mov
shr
out
out
mov
cwde
fnstenv
mov
push
pusha
cmc
cmp
mov
mov
in
inc
inc
dec
mov
shl
repz
es
mov
pusha
mov
lea
add
(bad)
cmps
pop
je
inc
data16
xor
test
xor
dec
sbb
fmul
enter
and
(bad)
pop
(bad)
mov
jb
jno
jge
push
in
fisttp
push
into
push
call
out
dec
shr
adc
cmp
out
lods
js
mov
xchg
shl
pop
pop
or
popa
repz
xchg
pop
stc
bound
and
jge
shr
hlt
dec
cdq
mov
lods
fild
pop
inc
cli
mov
jnp
rol
and
mov
scas
push
jl
bound
aam
mov
xchg
outs
xchg
(bad)
pop
fild
xor
sar
pushf
test
imul
stc
push
jbe
push
outs
fldenv
ins
cmp
js
adc
or
js
imul
pop
xchg
test
mov
mov
sub
sbb
das
lods
fild
iret
in
aaa
and
es
mov
dec
shl
and
or
cmp
fisttp
add
popf
sub
or
sbb
retf
dec
(bad)
jl
shl
aad
in
add
push
stos
clc
clc
mov
sti
test
jne
sahf
adc
aaa
inc
dec
cli
mov
sbb
mov
adc
outs
xchg
jge
cmps
loope
adc
or
js
pop
call
mov
call
into
inc
sbb
push
mov
mov
fnop
add
cdq
fiadd
stos
out
push
dec
fild
xchg
mov
(bad)
lods
or
xchg
inc
mov
push
(bad)
xchg
cmp
stos
xlat
in
inc
or
out
or
rcl
lahf
add
add
int3
jo
enter
cmp
pop
shr
aad
lahf
into
mov
jae
dec
pop
out
mov
loopne
outs
add
dec
add
add
sbb
test
dec
mov
(bad)
repz
jne
pop
in
xor
cmps
jl
sbb
mov
mov
(bad)
pop
stos
repz
mov
mov
mov
arpl
jne
mov
or
push
xchg
jno
mov
rcl
imul
adc
rol
aaa
sbb
rcr
cld
mov
xor
out
adc
adc
aam
xor
aaa
xor
mov
rep
adc
pop
stc
(bad)
(bad)
pop
dec
retf
cmp
stc
cmp
js
push
rcl
shr
inc
cs
push
(bad)
stc
cld
aam
sbb
mov
data16
cs
sub
sub
xchg
rcr
out
icebp
xchg
adc
jno
cmp
leave
ins
pusha
and
das
dec
jp
in
pop
aas
into
push
out
inc
cmps
dec
(bad)
mov
int3
and
push
xchg
mov
jmp
idiv
mov
add
loop
push
jl
cmp
xor
es
inc
int
mov
add
(bad)
aad
test
aam
push
sbb
dec
xchg
add
pop
xor
pop
lock
sub
jl
aam
jne
rcl
push
jp
scas
adc
ror
inc
scas
mov
loopne
mov
xchg
inc
inc
hlt
or
arpl
pop
add
(bad)
out
aaa
cdq
repnz
push
inc
dec
mov
ret
and
xchg
sub
cmp
dec
cs
out
cs
fiadd
clc
push
push
stc
sbb
fidiv
loop
xchg
rol
les
sbb
stc
mul
sbb
(bad)
jnp
jb
fs
ror
jns
out
call
push
or
sbb
adc
or
mov
jb
or
aam
stos
mov
retf
inc
lahf
dec
test
xchg
das
hlt
dec
pop
mov
xor
adc
mov
std
xchg
and
pop
cmp
jno
xchg
enter
pop
push
loop
ss
xor
add
mov
icebp
in
(bad)
out
sahf
mov
mov
push
adc
mov
ret
xchg
or
int3
fld
sub
int3
cmps
rcl
or
and
stos
fstp
aam
(bad)
movs
xor
in
pop
add
or
sub
ja
loop
fistp
int3
aas
jns
test
retf
ja
mov
fldcw
push
push
push
xchg
xor
sbb
push
xor
cdq
pop
lock
movs
fisub
add
and
sbb
stc
push
cmp
cmc
mov
sub
mov
aad
xchg
popa
repnz
fs
and
pop
or
fcmove
ins
xor
pop
add
loope
fidivr
add
sbb
and
push
and
test
dec
clc
sbb
jl
push
loop
sbb
sbb
les
call
push
inc
mov
sbb
stos
push
or
pusha
xor
push
cmps
sub
sbb
xchg
pop
es
shr
aad
xlat
arpl
leave
int
mov
jecxz
test
cs
gs
ja
jecxz
and
dec
sub
jl
inc
stos
inc
inc
sti
jle
in
aas
ins
inc
sbb
and
inc
scas
icebp
dec
fdiv
sub
clc
inc
(bad)
fsubr
sub
ds
les
jnp
jne
js
scas
mov
inc
bound
fadd
(bad)
dec
mov
pop
and
out
fcom
mov
out
xchg
sub
sti
add
lods
es
cld
add
pop
sahf
adc
sbb
retf
ins
ja
add
add
idiv
fdiv
dec
and
sub
scas
ins
jge
jmp
cmps
jno
or
cmp
mov
push
jl
push
out
(bad)
in
(bad)
icebp
sbb
aad
fisubr
mov
fs
out
into
stos
jns
jae
pop
xchg
jl
sar
lods
(bad)
jge
fwait
jbe
mov
imul
loope
das
and
int3
int
cdq
daa
mov
lea
adc
aad
dec
lds
jnp
shr
or
(bad)
jmp
pusha
sbb
cmps
cmc
jmp
sbb
test
jo
icebp
mov
daa
pop
xor
stos
pushf
popf
cmps
in
and
jmp
(bad)
pop
jns
mov
call
int3
popa
popa
xor
lock
or
aad
mov
hlt
mov
ds
or
je
shl
xor
adc
xchg
dec
push
xor
inc
inc
sub
sub
jne
aaa
outs
adc
mov
not
sbb
sub
adc
(bad)
adc
cmps
scas
fs
sub
sub
mov
add
and
ins
jmp
(bad)
fisub
xor
or
stc
pop
jns
xor
dec
sbb
pop
inc
pop
fsub
mov
sti
ret
pusha
dec
xor
js
or
je
add
cmp
rcl
jo
dec
xor
inc
out
in
xor
loopne
fdiv
dec
cmps
and
jae
and
pop
inc
int3
add
movntq
xor
push
jp
rcl
leave
adc
push
in
sbb
nop
lock
repz
rcl
ds
mov
cmc
add
ins
xchg
pop
adc
cmp
jp
mul
out
push
xchg
loop
retf
dec
push
adc
push
pop
mov
scas
scas
sub
jbe
push
sub
and
sbb
mov
stos
cmp
dec
xchg
pop
pop
lods
fiadd
popa
fisub
cmp
cmp
pop
cdq
popf
jecxz
fistp
push
push
idiv
pop
fwait
cmp
pop
pop
ret
xchg
mov
sbb
adc
jno
xchg
sahf
mov
pusha
call
sbb
mov
or
push
(bad)
jg
lea
add
stc
aam
mov
je
jg
mov
nop
push
inc
(bad)
cmps
xor
cmp
out
pop
mov
pop
popf
mov
mov
rcr
ins
jnp
lock
(bad)
jbe
fwait
(bad)
imul
adc
movs
sub
fsub
ret
add
sub
(bad)
in
jp
add
arpl
arpl
icebp
in
cmp
mov
fcomp
into
mov
ret
retf
hlt
(bad)
stos
and
jmp
int
jg
fiadd
add
mov
cmp
add
jle
adc
aad
xor
xchg
xlat
iret
sbb
xor
cbw
mov
repnz
and
pop
xor
cmp
ret
ret
cmp
xor
or
jbe
or
stos
or
hlt
sub
jns
test
(bad)
sub
cmps
push
ja
inc
cmp
jmp
ret
retf
fistp
(bad)
mov
dec
xchg
push
dec
jmp
dec
popa
xchg
push
aas
sbb
hlt
xor
xor
xchg
sbb
je
popf
mov
or
xor
dec
outs
imul
mov
pop
stos
scas
inc
je
call
mov
out
es
add
(bad)
hlt
sub
stos
sub
nop
inc
xor
das
pop
mov
mov
xor
sahf
scas
scas
das
pop
enter
push
outs
pusha
ds
push
jecxz
jecxz
pushf
add
mov
or
jecxz
dec
loope
ins
mov
rcr
inc
and
mov
jmp
int3
in
imul
pop
pop
(bad)
(bad)
push
adc
std
push
dec
sub
mov
add
push
and
xchg
fsub
jo
mov
jp
pop
sub
or
lock
and
loopne
dec
cmp
sbb
xor
dec
unpckhps
jmp
outs
mov
fnstenv
mov
mov
mov
xor
psubsw
xchg
push
sbb
arpl
mov
stc
cmp
mov
add
cmp
shl
mov
lods
push
xchg
dec
scas
aad
cmp
xor
ret
mov
dec
mov
dec
imul
mov
jge
add
or
push
pop
push
add
mov
fidivr
jmp
hlt
mov
dec
lock
imul
je
aam
mov
mov
push
sub
sub
daa
stos
jo
cmp
leave
xchg
jns
sub
xchg
cmp
cdq
jnp
mov
push
sahf
in
xchg
or
sub
xchg
stos
out
pop
mov
test
rol
int
addr16
cmp
dec
(bad)
pop
mov
jg
lods
loop
sbb
jecxz
pop
(bad)
push
mov
push
test
mov
sub
pop
hlt
sar
inc
(bad)
fs
test
jae
cli
ja
popf
adc
(bad)
mov
mov
jnp
xor
inc
xlat
outs
fnstsw
or
cs
mov
push
lds
inc
gs
js
and
push
in
test
std
loop
add
mov
cmps
mov
stos
jle
jb
dec
mov
mov
adc
xchg
add
popf
movs
cmp
jae
loopne
pop
inc
cmc
dec
lea
pop
mov
inc
dec
inc
cmp
scas
mov
mov
lock
fcomp
je
out
pusha
outs
retf
pop
add
into
mov
push
aad
xlat
xor
ret
stc
fwait
push
outs
mov
movs
ins
nop
xchg
mov
sub
push
movs
pop
cmp
push
xor
(bad)
icebp
sbb
out
pop
cmp
inc
fsqrt
push
out
outs
mov
and
push
xchg
imul
dec
shl
out
cld
not
mov
pusha
fs
or
test
pop
mov
sub
je
std
lods
bound
push
inc
xor
mov
adc
not
mov
sbb
sub
pop
in
or
pusha
mov
inc
pop
mov
mov
mov
and
push
ss
call
jne
pop
dec
add
mov
add
dec
xchg
sub
test
sahf
mov
sub
push
inc
test
leave
rol
movs
test
(bad)
(bad)
mov
sbb
mov
aas
pop
cmps
mov
xchg
adc
or
mov
push
push
movs
fsubr
sbb
push
pushf
aad
(bad)
inc
stos
mov
adc
adc
mov
xchg
popf
mov
mov
push
loopne
push
xchg
fs
push
mov
inc
aam
or
das
adc
dec
in
dec
cdq
sub
fidiv
gs
push
cmp
sbb
pop
sti
sub
(bad)
xchg
fwait
test
call
sub
ss
(bad)
mov
adc
fs
xchg
mov
arpl
dec
push
pop
(bad)
pop
pusha
pop
adc
and
rcl
inc
mov
popf
push
loope
push
ret
jo
adc
mov
lock
lds
xchg
dec
not
adc
loop
add
mov
pop
xchg
fisttp
popf
jl
jge
leave
cmps
cmp
lods
sbb
mov
cli
sub
out
das
push
and
mov
jns
push
add
push
aas
dec
pusha
mov
add
mov
retf
xchg
lea
and
fdiv
jmp
mov
jl
pop
test
inc
test
fmul
pop
rcl
adc
cmp
int
mov
push
and
mov
jns
xor
sbb
sbb
xchg
out
(bad)
pop
in
inc
sbb
cli
(bad)
push
loop
xchg
or
rol
ficom
xchg
popf
out
dec
xor
bswap
bound
sbb
(bad)
fwait
dec
fnstenv
jmp
pop
pop
and
pop
xor
inc
test
mov
fdiv
and
xor
cdq
add
lds
push
lds
and
arpl
(bad)
mov
dec
cmp
lea
mov
cmps
push
in
loope
inc
jge
daa
leave
imul
dec
popf
out
jg
mul
xor
push
enter
fldcw
(bad)
js
stc
rol
mov
add
jmp
ins
jae
or
dec
cmp
(bad)
pop
inc
icebp
es
or
sub
adc
shl
fdiv
rcl
push
add
and
pop
lahf
mov
mov
or
int
sbb
je
cmp
es
mov
cmp
cmp
pushf
std
out
and
mov
cs
ja
call
dec
xchg
fiadd
jge
gs
and
jnp
shl
iret
loop
inc
fidivr
add
sti
in
rol
sub
ret
aaa
inc
or
pop
sbb
cld
adc
adc
vpavgw
mov
into
inc
and
mov
add
popf
sar
test
retf
call
ds
xchg
mov
sub
lds
xor
test
mov
out
nop
sbb
push
adc
sbb
xor
(bad)
cmc
push
shl
mov
ret
adc
mov
jl
aad
cs
call
push
xchg
mov
retf
jp
and
sub
dec
jnp
fdivr
adc
arpl
dec
jnp
push
jns
add
mov
neg
sbb
stos
shr
jns
lock
sar
mov
hlt
or
sub
mov
cmp
ds
adc
(bad)
ds
adc
push
inc
out
adc
pop
sbb
adc
inc
daa
aas
mov
and
push
mov
cmp
das
aad
pop
inc
xor
cmp
mov
shr
pop
jmp
mov
jns
out
jmp
retf
dec
jl
or
stos
dec
jl
pop
pop
pop
cmp
add
sub
jge
pusha
imul
adc
add
mov
push
mul
ds
cmps
adc
fst
ins
daa
mov
inc
stc
push
mov
jae
repz
jns
xchg
jno
pop
out
(bad)
sar
jnp
in
push
movs
or
pop
aam
cli
loope
jmp
inc
xor
mov
jbe
add
mov
in
dec
inc
inc
dec
jns
stc
or
pop
out
test
(bad)
fisub
cmps
mov
push
test
leave
(bad)
(bad)
out
sbb
mov
mov
bswap
scas
pop
sti
dec
pop
lods
in
sahf
ret
dec
push
mov
xchg
xor
mov
fstp
aaa
pop
pop
leave
dec
add
sbb
popa
rol
mov
mov
cmp
cmp
hlt
scas
fcom
(bad)
sub
cmp
test
(bad)
jge
shl
cmp
test
inc
mov
imul
lds
dec
and
call
xor
xchg
and
xor
add
xor
fwait
imul
cmp
out
outs
loop
fs
pop
jg
inc
mov
cld
sub
sub
fucomp
inc
imul
(bad)
cmc
in
xchg
cmp
addr16
test
loope
lds
mov
in
pop
hlt
sbb
xchg
mov
jl
call
jnp
adc
and
std
mov
gs
(bad)
cmps
push
add
shl
lahf
push
dec
fimul
arpl
pop
bound
pop
pop
mov
cmps
(bad)
sub
daa
inc
and
or
jmp
fidiv
gs
xchg
jbe
lods
pop
mov
test
adc
das
pop
scas
sub
stos
xchg
xor
mov
or
int3
mov
push
fdiv
and
nop
and
mov
(bad)
ror
push
lds
jmp
scas
pop
push
in
cmp
pop
dec
add
shl
cld
xor
pop
and
xchg
jmp
dec
cmp
adc
mov
outs
fwait
dec
loope
push
test
test
ficom
jns
das
mul
sub
test
cmps
mov
call
cmp
cmp
jbe
mov
imul
pusha
sahf
mov
call
and
in
dec
and
idiv
mov
push
mov
sar
scas
in
and
adc
jb
fidivr
icebp
mov
dec
jmp
je
ja
adc
add
ret
mov
ins
lock
push
jb
mov
add
fadd
jae
mov
call
push
iret
jo
or
clc
jmp
sahf
xchg
int
add
mov
rcr
fisubr
add
fs
sub
jno
rol
adc
mov
mov
jnp
and
arpl
xor
push
in
sbb
push
test
pop
add
stos
inc
dec
inc
aad
mov
xchg
fistp
jge
stos
cmps
aam
sahf
js
push
push
out
pop
pushf
cmps
cmp
sub
(bad)
dec
pop
pop
lods
mov
mov
pushf
fucom
out
xchg
call
add
cs
mov
test
cld
out
mov
test
pop
cmp
mov
or
test
adc
cmc
push
cdq
mov
das
mov
pop
mov
add
ss
dec
shl
stos
ret
mov
xor
cmp
dec
sub
stos
adc
and
dec
jne
push
enter
fld
or
xor
aad
inc
clc
push
or
out
(bad)
rol
and
push
sub
pop
retf
push
mov
mov
dec
mov
or
push
pop
or
lahf
sti
fnstenv
mov
sbb
add
xor
retf
sbb
imul
scas
inc
inc
xchg
ja
dec
sub
retf
popa
iret
daa
pop
retf
push
xchg
jne
mov
mov
out
and
mov
pop
push
popa
fdivr
retf
cmp
repnz
lahf
jge
lods
push
out
and
mov
push
arpl
ja
cvtps2pd
in
sbb
retf
and
jb
sub
imul
stos
mov
cmp
les
mov
mov
lock
xchg
adc
test
mov
mov
bound
or
cs
ins
je
sub
cld
inc
ret
test
enter
push
push
jno
add
pop
xchg
xor
sar
sub
(bad)
pusha
sar
pop
rol
cmps
sar
push
jg
jmp
imul
dec
das
adc
js
xchg
jp
fdiv
dec
outs
xchg
push
mov
bound
enter
mov
aas
outs
outs
sbb
sar
repnz
xor
mov
data16
jl
lea
enter
(bad)
cmp
lea
jmp
cmp
dec
or
nop
mov
bound
repnz
test
xor
cmp
(bad)
mov
test
jmp
xchg
cmp
(bad)
leave
xor
mov
dec
cld
jo
xchg
pop
adc
call
jno
or
stos
sub
dec
pop
xchg
xor
jmp
pop
or
inc
jae
gs
sub
aad
adc
adc
(bad)
stc
loopne
adc
sub
mov
ss
rol
scas
mov
out
aaa
je
call
mov
std
iret
and
rcl
push
push
cmp
test
sbb
pop
or
es
sub
dec
jnp
adc
dec
pop
mov
aam
sub
cmp
xchg
rcl
ins
jbe
adc
in
ja
push
daa
pop
mov
nop
jmp
and
pop
rol
inc
fwait
sbb
sbb
sbb
in
movups
sbb
sub
stc
push
cmp
shr
cld
push
mov
lock
pop
std
jns
jns
les
mov
push
mov
into
cmp
add
sub
or
jle
jmp
sti
outs
xchg
call
add
jb
lods
addr16
(bad)
jne
jmp
clc
and
ficomp
lea
mov
shl
jge
movs
pop
xchg
arpl
fnstenv
cmp
or
je
imul
into
lea
adc
push
dec
stos
enter
fistp
loopne
jns
cli
lahf
cmp
nop
test
dec
cmp
stos
xor
inc
clc
and
jnp
in
mov
(bad)
dec
fst
imul
dec
pop
xchg
xabort
xor
(bad)
pop
jl
stos
shl
inc
mov
leave
inc
mov
add
mov
scas
mov
inc
sub
sbb
and
mov
sbb
ror
pop
fbld
cmp
mov
adc
rcl
xchg
dec
dec
loop
aas
pop
push
icebp
or
sub
mov
sbb
inc
mov
jo
mov
jmp
ins
inc
inc
cmps
es
mov
jecxz
scas
sub
shl
sar
shl
xchg
xchg
sbb
pop
sbb
mov
test
cmc
xlat
push
mov
xchg
dec
(bad)
inc
sahf
ja
sub
int3
sub
mov
add
clc
in
test
mov
add
mov
push
call
stos
push
stos
js
lock
mov
mov
loope
pop
in
(bad)
mov
cmp
jle
mov
adc
lds
repnz
loope
sbb
or
dec
add
mov
jne
inc
push
or
jno
sbb
in
outs
add
pop
jnp
xchg
xlat
les
fisub
adc
sub
je
in
lahf
sub
push
scas
cmc
rcr
jne
test
out
mov
ins
and
inc
pop
pop
loope
sub
(bad)
xor
cdq
jg
fs
or
sub
inc
mov
mov
push
jmp
adc
jmp
pushf
in
push
xchg
add
mov
popa
aaa
push
jnp
jge
stc
pop
fist
movs
mov
cwde
jge
(bad)
out
addr16
jge
mov
(bad)
les
jp
sbb
gs
retf
(bad)
aam
jmp
popa
mov
(bad)
mov
movs
sub
and
scas
adc
push
mov
sbb
add
bound
leave
stc
sar
iret
mov
clc
push
loopne
je
and
rol
or
adc
in
push
jecxz
in
add
aaa
scas
cmp
ja
push
mov
add
mov
push
popf
sbb
push
in
test
xchg
push
mov
jmp
pop
(bad)
test
xor
(bad)
sub
leave
or
out
adc
js
aaa
inc
lds
and
push
iret
add
adc
cmp
fdivp
addr16
xor
push
std
outs
fidiv
(bad)
inc
out
shl
and
sti
ins
inc
sbb
les
cmp
dec
jp
retf
xchg
pop
std
push
jb
pop
ror
mov
test
mov
push
ror
add
adc
sbb
and
(bad)
iret
cdq
push
or
bound
adc
adc
pop
imul
mov
xor
jae
xor
movs
daa
dec
xchg
lock
aam
adc
push
lock
dec
mov
jbe
ins
dec
or
jnp
js
aad
rcl
loopne
jae
xchg
div
sbb
iret
call
mov
pop
cld
stc
add
dec
push
push
ror
loop
push
push
es
rcl
xchg
add
not
adc
addr16
dec
scas
inc
push
fmul
iret
pop
jnp
mov
out
pop
xchg
xchg
nop
xlat
lea
and
mov
jge
sahf
sbb
mov
es
mov
and
jmp
dec
and
push
or
dec
call
scas
jno
not
in
ret
dec
leave
sub
xchg
mov
test
loope
cmps
sub
int
pop
cmp
movs
cwde
jecxz
ret
xchg
sbb
data16
out
inc
adc
(bad)
sub
and
pop
sbb
and
loop
lahf
stc
sub
pop
(bad)
mov
mov
cmc
jmp
repz
test
adc
cmp
mov
ins
mov
call
pop
adc
push
hlt
addr16
fsub
mov
in
scas
add
and
push
call
pop
or
(bad)
pop
sbb
dec
js
lds
cmp
inc
sub
bnd
mov
xchg
push
push
mov
jmp
adc
dec
stc
ja
mov
shl
sbb
iret
pushf
std
push
add
dec
aad
test
mov
cmps
or
ins
mov
shl
add
outs
mov
adc
je
in
or
fimul
cli
push
cmp
mov
lock
pop
xor
and
popa
push
xor
sub
(bad)
cmps
dec
repnz
and
test
push
ret
loope
sub
clc
stos
scas
test
cmp
inc
and
ror
cmps
sub
jno
popa
nop
add
mov
aad
(bad)
jns
mov
mov
or
ret
out
mov
or
in
(bad)
or
call
sub
ss
int3
cdq
dec
popf
mov
cmp
gs
lock
mov
pop
pop
nop
pop
mov
dec
xchg
add
ret
loop
cmp
fsubr
fbstp
stos
pop
mov
adc
(bad)
xlat
pop
clc
out
dec
fcmovne
mov
sti
mov
fimul
std
sbb
xchg
je
iret
adc
jmp
test
mov
js
pop
cmps
clc
pop
dec
leave
inc
iret
data16
aad
fst
push
mov
repz
add
sbb
mov
aas
fdivr
xchg
ins
ins
xchg
mov
test
aaa
stc
xor
jbe
push
push
push
or
test
or
jle
in
out
out
or
(bad)
and
clc
xor
pop
adc
dec
jge
daa
dec
stos
lea
mov
mov
jo
ins
aam
cmp
mov
ins
add
jl
dec
dec
dec
(bad)
and
les
mov
test
stos
stos
dec
ds
rcl
pop
xchg
addr16
mov
scas
xchg
push
pop
add
mov
movs
cmps
xlat
or
mov
push
sub
(bad)
in
jnp
cmp
and
inc
mov
retf
das
jl
rcr
repz
push
mov
sub
xor
or
jecxz
sti
in
sub
mov
in
add
sar
loopne
(bad)
iret
call
jne
mov
sbb
not
aam
imul
or
sub
rol
xor
inc
imul
cwde
ds
sbb
mov
adc
lds
enter
push
pusha
and
xor
add
xchg
sub
addr16
popf
jle
repz
je
add
fcmove
ret
cmc
mov
rcr
dec
nop
out
jae
jno
(bad)
stc
and
mov
push
test
xor
loope
mov
xlat
or
push
imul
pop
mov
cmp
mov
cmps
inc
mov
imul
mov
retf
xor
pop
rcr
jae
mov
mov
push
push
adc
mov
mov
cmp
mov
xchg
jb
(bad)
jmp
jmp
sbb
or
mov
xor
ins
adc
sub
lods
retf
fs
inc
xchg
inc
rcl
push
imul
call
popa
test
push
pop
adc
shl
out
std
fwait
inc
cmp
adc
cmps
out
mov
sti
pop
cs
cmp
mov
xor
mov
push
mov
dec
push
dec
pop
and
(bad)
ds
cmp
sub
inc
ret
call
mov
in
in
or
or
xor
mov
cmp
pop
adc
loopne
cdq
xchg
mov
mov
aam
xchg
pop
rol
dec
sbb
ror
data16
inc
xor
adc
ins
mov
int3
add
mov
or
fild
ret
rol
jle
fucomp
add
mov
cmp
add
addr16
pop
in
dec
mov
xchg
inc
fiadd
adc
ins
(bad)
mov
mov
xor
sbb
scas
mov
adc
sub
jecxz
mov
popf
test
(bad)
or
mov
imul
outs
lods
mov
fcmovne
jge
inc
scas
xor
cmp
cmps
pop
test
sbb
ret
dec
add
inc
jle
enter
retf
adc
aam
add
icebp
popf
jae
sub
rcl
push
jns
add
test
leave
dec
jmp
pop
data16
hlt
test
lods
adc
cmp
inc
ja
fwait
mov
sbb
cmp
pop
retf
mov
add
mov
mov
xchg
movs
add
addr16
in
aam
jp
mov
sbb
or
or
js
ins
xor
mov
dec
mov
shl
push
imul
push
xchg
(bad)
loop
es
and
cs
popf
(bad)
ret
dec
in
in
stos
xor
sub
inc
sti
iret
jmp
adc
fsubr
adc
imul
(bad)
lds
adc
add
sbb
add
test
mov
jge
mov
popa
add
lock
in
iret
push
and
mov
add
inc
mov
test
out
add
test
add
mov
call
mov
jnp
push
sbb
jbe
sub
lods
sub
cmps
sahf
pop
pop
sbb
stos
fld
xchg
jno
sbb
arpl
or
mov
jl
fidiv
mov
cmp
ss
xchg
(bad)
mov
(bad)
fwait
xor
cld
ins
sahf
pop
push
aam
aaa
out
hlt
cmp
xor
and
and
lods
mov
or
xlat
test
std
sub
stc
xor
dec
(bad)
lods
retf
int
dec
ret
pop
mov
add
jnp
in
stos
or
(bad)
pop
(bad)
loop
cmps
inc
cmc
loopne
push
test
ins
jmp
xlat
pop
and
in
pop
pop
xchg
(bad)
into
fisubr
push
mov
sub
mov
push
clc
sbb
jge
jmp
add
hlt
xchg
pop
js
mul
cs
aam
sbb
loopne
in
xchg
adc
sub
mov
int3
popf
sub
ins
movs
es
jae
dec
ds
push
popf
popf
aas
fiadd
ins
fs
or
inc
add
fsubr
and
fwait
sub
and
test
out
sar
je
data16
nop
mov
fs
xchg
sbb
je
repz
jle
xlat
pop
fdiv
cmc
aaa
mov
adc
pop
xor
xor
mov
inc
in
pop
mov
push
cmp
mov
lods
dec
jo
icebp
jbe
in
(bad)
aas
pop
xor
xor
mov
push
loop
repnz
fimul
pop
(bad)
jmp
lods
push
std
xchg
mov
xchg
and
dec
push
cmp
add
adc
mov
pop
pop
sti
cmps
cmovae
bound
pop
cli
repnz
cwde
or
es
push
push
and
cmp
xor
sub
ins
xlat
cmp
dec
or
sub
inc
shl
(bad)
xchg
ret
inc
int
and
adc
(bad)
fstp
or
jno
std
cmp
loopne
pop
jb
outs
push
pop
imul
xor
jg
dec
xchg
push
icebp
jo
pop
sbb
jmp
add
and
(bad)
inc
sbb
int3
js
stos
(bad)
or
mov
daa
jl
cwde
repz
test
mov
ds
or
movs
nop
add
add
mov
ret
push
cmp
inc
cmp
push
inc
lock
mov
pop
mov
not
mov
in
inc
mov
dec
fidiv
dec
jo
dec
sbb
aaa
aaa
xor
test
and
mov
(bad)
shr
call
sbb
fimul
mov
bound
mov
add
aad
std
xchg
xchg
or
shl
mov
std
jmp
in
imul
jne
mov
and
(bad)
les
(bad)
pushw
xlat
test
mov
adc
cmps
ds
cdq
xor
inc
and
lds
mov
icebp
fstp
dec
pushf
es
retf
mov
mov
dec
and
pop
pop
sub
gs
mov
sub
data16
js
dec
lods
data16
dec
movs
cld
aaa
cmp
cmps
retf
frstor
adc
cs
mov
pop
xor
sti
push
sbb
inc
movs
mov
add
xchg
fimul
fmul
xchg
sti
fild
sub
enter
(bad)
(bad)
test
loop
mov
test
movs
add
pop
stos
and
push
lods
ds
(bad)
cld
jecxz
int
mov
xchg
mov
aas
cmp
in
retf
xchg
or
add
fwait
scas
xor
in
out
inc
jmp
pop
sub
push
mov
out
mov
or
mov
and
cld
imul
dec
movs
mov
mov
fstp
and
dec
cld
xlat
sar
mov
(bad)
(bad)
push
push
mov
add
xor
mov
inc
xchg
or
inc
push
into
sbb
fldcw
or
bound
hlt
add
lock
in
and
sahf
fucomip
arpl
sub
adc
mov
push
pop
jb
jae
lea
fwait
es
lea
cdq
push
xchg
hlt
mov
adc
jns
test
sub
and
inc
dec
clc
mov
pop
pop
push
mov
dec
aad
or
add
sub
loopne
ret
loope
loop
jle
mov
jns
xor
cmp
xchg
inc
bound
push
bound
cmp
jbe
and
test
gs
sub
jp
enter
mov
jmp
aas
in
nop
jg
mov
add
fwait
push
popf
or
inc
push
in
jle
sar
test
(bad)
jo
loop
jne
dec
jp
imul
retf
sub
inc
push
jge
stos
cmp
and
mov
repz
xchg
cmp
fwait
das
aad
jmp
nop
(bad)
mov
rep
sbb
or
fisttp
jbe
dec
je
fwait
mov
(bad)
js
not
outs
dec
sbb
inc
out
idiv
push
mov
or
cmp
push
jp
mov
sti
sub
cmp
or
dec
jnp
ret
repz
scas
cmp
ret
shl
push
pop
es
mov
stos
cmp
(bad)
movs
frstor
imul
sahf
aad
cmc
call
and
cmp
push
sbb
stos
cmp
popa
mov
push
mov
adc
push
push
jns
(bad)
mov
cmp
pop
and
bound
pop
addr16
xchg
and
mov
mov
cli
shl
mov
(bad)
lock
out
icebp
out
in
into
inc
mov
imul
adc
stos
cmp
or
fistp
out
sub
dec
inc
retf
sbb
stc
leave
xchg
xchg
aam
lahf
das
inc
sub
xchg
add
adc
push
pop
and
loope
fadd
xor
pop
inc
ret
in
jnp
mov
loop
sub
and
sti
fidivr
xchg
sahf
fstp
loopne
push
sub
pop
and
jg
push
mov
and
push
pushf
inc
sub
pop
add
shl
test
not
popf
and
iret
xor
ror
xchg
pusha
es
sbb
mov
call
cmp
jae
xchg
ja
push
popa
sub
jle
mov
test
pop
pop
adc
not
(bad)
ds
pop
popa
lods
or
mov
scas
rcr
stc
push
fcomip
and
jbe
(bad)
pop
out
mov
push
mov
sbb
dec
movs
xchg
out
jb
inc
mov
imul
cmp
and
in
xchg
mov
mov
outs
adc
sbb
xor
jecxz
add
je
pop
aad
mov
inc
or
lods
adc
mov
cld
dec
outs
xchg
pushf
pop
push
sar
je
loope
adc
mov
imul
movs
pop
sub
clc
outs
jmp
mov
fdivr
outs
cmp
pop
call
(bad)
fistp
mov
adc
ss
dec
mov
push
jnp
cs
es
loop
out
sub
push
imul
fsub
cli
push
and
rol
mov
lds
scas
jecxz
sbb
pop
mov
aad
cmp
sub
leave
mov
das
mov
lods
fs
or
enter
lds
out
ret
dec
jmp
nop
lahf
sar
scas
clc
xchg
jmp
xchg
push
gs
mov
pop
mov
xchg
jb
mov
and
(bad)
dec
loop
cmps
xor
or
loope
lds
pop
mov
outs
std
inc
retf
mov
mov
pop
lods
lods
aam
xor
icebp
or
hlt
xlat
add
call
and
push
xor
inc
in
xlat
and
mov
push
test
cmp
mov
mov
rcl
shl
jle
push
stos
fidivr
stos
sub
daa
movs
mov
jnp
ins
cmp
mov
and
sbb
sub
pushf
fisubr
add
mov
xchg
cli
xor
mov
cmc
fsubr
out
scas
call
gs
push
jno
imul
ins
fiadd
jg
xchg
pop
es
(bad)
sbb
(bad)
int3
loop
nop
mov
pushf
(bad)
out
cmp
inc
cmps
lods
or
es
xlat
push
pop
gs
xor
idiv
mov
mov
xchg
(bad)
jnp
retf
psllw
pop
ins
fs
loopne
popf
jne
fsubr
fisttp
in
push
inc
add
xor
(bad)
jecxz
or
pop
pop
fisubr
adc
add
aaa
stos
sbb
inc
mov
test
mov
xor
sti
addr16
ret
add
lahf
leave
push
pop
sbb
mov
sbb
repnz
aaa
adc
mov
push
pop
xor
sti
out
rcr
lea
loopne
sbb
push
movs
mov
xor
daa
xchg
fnsave
inc
bound
xchg
push
div
stc
repnz
sub
or
mov
call
es
dec
call
sub
mov
mov
mov
je
ror
push
jp
adc
inc
(bad)
mov
xchg
push
nop
sub
mov
loopne
cmc
stos
dec
mov
sub
push
movs
adc
sub
push
mov
mov
mov
push
loopne
cld
xchg
sbb
lea
pop
mov
repz
shl
xchg
xor
xchg
jmp
mov
repz
icebp
ins
mov
cmp
jns
nop
or
mov
pop
push
into
ret
retf
mov
sbb
popa
test
mov
adc
xchg
cmc
mov
mov
add
icebp
loopne
cmp
loopne
test
jns
(bad)
aam
jmp
out
jne
inc
lock
repz
xchg
in
xchg
stos
mov
cmp
push
push
sbb
push
mov
xor
mov
dec
adc
mov
add
retf
dec
fdivr
pop
popa
cmc
xchg
mov
cmp
adc
add
jecxz
and
scas
jno
mov
push
inc
add
loope
(bad)
arpl
cwde
daa
retf
dec
leave
lds
scas
mov
mov
pop
pop
jl
mov
dec
ds
repz
adc
inc
shl
or
popa
enter
pop
hlt
push
xchg
cs
mov
pop
arpl
sub
xchg
mov
fs
jb
stc
mov
xor
inc
mov
movs
pop
or
add
or
repz
loope
outs
mov
(bad)
fadd
lods
call
inc
std
data16
push
sahf
mov
and
jns
xchg
retf
xor
pop
sub
push
fwait
and
jno
pop
sti
fadd
pop
and
imul
div
jnp
ret
jmp
ret
xchg
popa
ds
and
cmp
xchg
(bad)
dec
sbb
das
ret
or
adc
sub
xchg
movs
popf
and
daa
ror
mov
cs
xchg
outs
push
adc
push
sub
adc
xchg
push
aam
test
bound
rcr
rcr
mov
push
inc
je
pop
cmp
(bad)
call
std
jge
repz
jbe
test
and
jle
or
in
and
js
fadd
push
in
mov
jmp
in
ja
cs
mov
jmp
adc
ja
push
adc
mov
xor
jns
adc
and
sar
pop
fadd
out
add
imul
in
(bad)
repnz
dec
inc
int3
sbb
scas
mov
jg
clc
jo
or
or
outs
pop
jmp
mov
cmp
test
sahf
cdq
mov
pop
sbb
and
xor
idiv
div
int
das
inc
out
and
ins
retf
call
xor
test
inc
lods
je
xlat
hlt
sub
dec
cmp
xchg
ss
mov
or
xor
adc
iret
dec
sbb
idiv
or
mov
scas
mov
ins
call
out
sbb
add
cmp
push
mov
ret
out
imul
sub
mov
mov
scas
mov
lahf
add
xor
xchg
jmp
fiadd
pop
mov
xchg
cmp
pop
mov
xchg
sub
ins
push
sub
push
pop
test
fld
pop
int3
dec
jbe
clc
dec
retf
sbb
xlat
cmp
sbb
or
inc
loope
xor
mov
scas
cmc
ret
mov
cmp
jl
jo
daa
cld
push
xchg
cdq
pusha
pushf
dec
pop
fs
mov
sub
jns
je
sbb
jle
push
mov
adc
loopne
inc
xor
mov
movs
xchg
cs
hlt
mov
fist
int3
inc
sti
scas
jb
mov
les
add
sub
or
sub
push
fs
ror
adc
pop
stos
jo
fidiv
mov
mov
in
sbb
div
aas
sbb
mov
mov
retf
test
dec
push
mov
(bad)
js
pop
cmps
(bad)
and
sbb
scas
data16
or
push
add
dec
je
rol
dec
push
mov
movq
enter
cmp
loope
adc
pop
jg
out
pushf
or
jno
sub
mov
gs
fild
(bad)
cs
pop
sub
mov
cmp
push
or
push
shl
mov
lea
cmp
call
adc
mov
jns
bound
jle
adc
pop
pop
popf
adc
jno
icebp
dec
mov
jae
aas
push
push
ds
mov
outs
movs
out
js
outs
mov
pop
rcl
test
jb
and
scas
int
(bad)
mov
pop
das
mov
aad
movs
or
cmp
lods
mov
loope
or
mov
fdivr
xlat
jnp
mov
and
mov
inc
mov
and
fwait
(bad)
fs
mov
jecxz
jl
ins
mov
dec
cmp
jno
lods
popa
call
adc
jne
inc
pop
das
arpl
shl
aad
fistp
jl
inc
mov
test
mov
leave
dec
mov
hlt
jl
xor
pop
sahf
clc
data16
jbe
out
push
aam
pop
shr
push
sub
pop
jl
xchg
mov
rol
xchg
push
call
shl
mov
add
push
or
into
adc
pushf
mov
push
scas
fld
std
out
retf
ror
cmp
pop
clc
cs
xor
mov
and
xchg
stos
sahf
sar
cli
or
sbb
fidiv
int
mov
test
mov
inc
cmps
push
xlat
leave
push
and
xor
xchg
in
test
and
(bad)
mov
adc
and
(bad)
(bad)
mov
pusha
sbb
sub
mov
push
mov
jns
hlt
scas
cmp
sub
dec
lods
mov
adc
clc
dec
inc
fmul
pop
int3
(bad)
xchg
pop
retf
ffreep
cmp
cdq
pop
pop
addr16
daa
sbb
push
dec
inc
jb
push
dec
mov
jmp
jmp
or
mov
or
or
sbb
fisubr
out
xchg
add
rol
shl
pushf
or
aad
dec
imul
data16
dec
test
jns
jg
int
test
jge
in
sti
xchg
jo
int3
adc
push
iret
rcl
fcmovnb
fmul
jno
jae
lods
push
inc
fld
push
jmp
mov
xchg
test
push
movs
ror
fs
lods
mov
mov
loop
push
ret
iret
loopne
mov
lods
or
int
out
jnp
rcr
jecxz
cmc
add
mov
mov
(bad)
cmp
bnd
pop
int
mov
dec
dec
xchg
or
ins
retf
xor
push
dec
fdiv
stos
sbb
and
mov
jmp
adc
rol
in
dec
mov
pusha
or
push
and
inc
loopne
jle
loopne
jmp
dec
xchg
ret
call
or
xchg
fistp
pop
sahf
das
mov
aaa
les
mov
iret
add
cli
jo
jb
std
or
mov
mov
test
es
lock
movs
jecxz
loopne
test
push
or
mov
and
push
adc
push
stos
pop
jg
dec
mov
or
ins
(bad)
pop
(bad)
jecxz
add
imul
lock
imul
loope
cli
cdq
push
ins
push
and
or
shr
(bad)
pop
lods
(bad)
fbstp
loope
xchg
shl
push
dec
add
add
xchg
mov
in
shr
add
aam
mov
rcr
test
bound
push
test
xchg
adc
and
cdq
mov
sub
ins
scas
cmc
push
push
clc
repz
xor
mov
pop
and
call
fist
imul
pop
call
mov
fld
loope
and
mov
push
aas
out
(bad)
cwde
pop
daa
and
sub
push
shl
jbe
jo
push
mov
mov
inc
mov
cli
mov
add
or
mov
inc
sbb
rcl
inc
add
pusha
stos
mov
xor
jmp
jecxz
imul
pop
mov
lods
ffreep
jno
dec
pushf
jae
adc
and
outs
and
add
retf
test
jmp
inc
scas
push
enter
xor
mov
idiv
pop
popf
mov
stos
rcr
test
or
aad
outs
mov
or
jge
push
xchg
xor
mov
(bad)
in
xchg
dec
xor
stos
jne
popa
std
(bad)
pusha
xlat
stc
add
jnp
cmc
fisub
retf
cli
ins
call
xchg
aam
enter
inc
xchg
push
out
popa
cmp
out
out
adc
loopne
mov
jp
inc
jnp
add
repnz
jg
xchg
sub
mov
mov
lods
mov
mov
sahf
jge
cdq
cmp
int3
xchg
test
mov
dec
lock
jmp
into
out
pop
jp
mov
pop
sub
fmulp
(bad)
into
lock
xor
xor
stos
mov
in
dec
fbld
ds
and
sbb
(bad)
iret
es
pop
test
inc
loopne
aas
push
(bad)
clc
enter
lahf
cmps
adc
cmps
sbb
pushf
call
je
movs
scas
push
pop
cli
aaa
mov
xor
sub
sub
int
pop
mov
clc
mov
dec
jne
pop
jge
and
adc
test
xor
pop
jo
test
pop
xchg
jns
mov
dec
mov
jne
cmp
(bad)
fdiv
sub
int
xor
fld
push
or
xor
xchg
pop
inc
jmp
xchg
xor
sbb
call
out
add
enter
aas
out
sbb
(bad)
jae
dec
xchg
mov
push
or
pop
lahf
adc
(bad)
fisubr
pop
jae
mov
retf
jecxz
mov
push
fst
push
pushf
(bad)
jo
mov
nop
and
cs
mov
push
out
jae
adc
sub
jno
mov
mov
lods
pop
push
jnp
add
in
ss
cmps
scas
inc
neg
sbb
xchg
call
or
fisttp
stos
movs
push
add
and
add
lahf
int
push
lahf
add
xchg
por
rcr
loopne
push
jo
out
adc
enter
nop
mov
aas
push
sti
jne
loop
leave
adc
(bad)
mov
das
push
pop
inc
pop
shr
out
or
or
in
sub
in
pop
push
jnp
cmps
sar
in
sbb
dec
into
and
cld
cs
adc
movs
repnz
fistp
stos
je
jb
jne
ret
icebp
push
push
xlat
cmp
and
outs
ins
adc
in
(bad)
int
or
frstor
je
cmp
mov
iret
sbb
dec
loopne
gs
gs
inc
aas
dec
into
jmp
repz
call
lods
test
pop
into
dec
xchg
loopne
jo
mov
adc
movs
add
jne
add
dec
and
scas
jbe
push
js
in
dec
xor
lock
(bad)
add
push
mov
ret
or
retf
pop
add
aas
cmp
or
mov
cmp
dec
add
xchg
(bad)
mov
adc
fild
sahf
push
dec
mov
cmp
pop
lock
(bad)
mov
dec
add
test
mov
xchg
pop
retf
(bad)
jnp
out
cdq
jge
sub
push
in
cmps
push
les
pushf
push
std
(bad)
push
xor
inc
sbb
or
fnstenv
jmp
or
or
aad
loop
lods
mov
ror
add
push
jb
gs
sbb
jl
or
push
(bad)
rcl
jb
xchg
cmp
push
inc
adc
daa
mov
into
(bad)
and
data16
jmp
mov
inc
aaa
cmps
sbb
xchg
jnp
jo
add
pop
inc
xor
pop
das
pop
mov
mov
mov
push
cdq
and
cmp
jbe
mov
and
(bad)
and
dec
or
dec
xor
cmc
push
push
pop
aas
movs
sbb
sbb
mov
cmc
xor
sahf
sbb
fbld
pop
sub
mov
out
and
into
(bad)
cmp
mov
mov
mov
push
pop
push
shl
lea
push
sbb
cs
push
jmp
push
cwde
bound
daa
mov
out
fdiv
sbb
rol
xlat
pusha
popa
jge
mov
mov
sbb
xchg
jge
in
jmp
cmp
xchg
shl
fidiv
hlt
fistp
add
(bad)
push
sbb
aaa
push
out
jg
ins
cmp
lods
xchg
xchg
mov
repz
cmp
jmp
imul
push
sbb
pop
cmc
pop
aad
xchg
sub
dec
push
mov
daa
ins
and
xchg
sbb
cmp
mov
push
inc
mov
outs
lds
mov
or
mov
and
push
push
sub
mov
out
mov
push
sub
and
cdq
pop
(bad)
cmps
cmp
inc
jge
repnz
dec
lods
shl
(bad)
not
pop
sub
or
ds
add
int
inc
sub
fwait
push
leave
xchg
inc
dec
imul
push
repz
sbb
ficomp
pop
adc
pushf
pop
fcomp
adc
mov
mov
mov
ja
xlat
pop
and
dec
sbb
sbb
inc
movs
daa
retf
mov
push
fld
popa
jg
es
add
xchg
fsub
pop
add
(bad)
sub
pop
push
push
pop
outs
or
mov
push
xor
stos
aam
fdivr
dec
add
sub
mov
pop
imul
adc
adc
call
test
dec
jmp
rol
mov
inc
sub
retf
sub
retf
dec
or
(bad)
and
aad
mov
add
out
popf
add
stc
lds
sub
lock
call
mov
pop
ficom
(bad)
in
add
dec
or
pop
mov
arpl
(bad)
(bad)
mov
in
ret
leave
sbb
adc
je
mov
and
xchg
leave
mov
or
sub
ror
es
dec
mov
mov
adc
add
jle
(bad)
mov
mov
push
jg
pop
add
mov
shr
add
xchg
xchg
push
test
in
out
outs
jae
rol
mov
cwde
movs
pop
and
mov
mov
pop
mov
call
repnz
xor
cmps
adc
cmp
mov
and
jb
stos
inc
shl
mov
dec
cmpxchg
xchg
repnz
cmp
mov
stos
xor
lods
ret
repnz
aaa
xor
push
inc
sub
inc
push
jns
sub
or
jge
sbb
fdivr
cld
adc
clc
mov
aam
and
sub
and
call
or
cmp
or
call
jecxz
xchg
push
dec
arpl
aam
mov
test
add
cmp
mov
repz
popa
addr16
dec
test
or
js
ret
ja
jbe
outs
xor
mov
sub
addr16
mov
in
cmc
js
ret
cli
jmp
iret
mov
test
movs
call
test
aam
add
shl
mov
das
sbb
aaa
fld
mov
popw
push
xor
bound
cmp
shl
(bad)
fisubr
lock
mov
sbb
xchg
test
int3
push
add
in
stos
pop
inc
xor
aam
icebp
pop
cwde
cmp
movs
and
push
pop
shr
js
loop
sub
retf
add
sub
shr
aas
retf
pop
fs
cmp
fs
jno
shl
fisttp
addr16
mov
push
pop
sbb
xchg
test
cwde
inc
rcl
stos
xor
bound
cmps
je
jecxz
bound
or
fs
scas
stos
clc
loopne
xchg
xchg
mov
push
fld
pop
inc
pop
clc
cmp
outs
pop
inc
jo
ins
pusha
fndisi(8087
clc
add
pop
pop
cld
jo
in
jno
aaa
sti
xor
mov
mov
pushf
ror
arpl
dec
(bad)
xchg
xchg
cmp
icebp
je
imul
cmp
or
aas
jg
aam
xor
lea
je
ins
leave
test
movs
cdq
(bad)
jge
out
push
enter
fstp
dec
aam
lods
je
push
inc
jbe
mov
lods
jmp
stos
jecxz
xchg
stc
cld
popf
jne
pop
hlt
xor
cld
inc
ficomp
div
mov
mov
fiadd
xchg
mov
adc
pop
xor
adc
into
shl
push
adc
adc
iret
test
scas
and
push
cli
ficomp
jle
jp
not
mov
xchg
xor
sbb
repnz
lods
jmp
sbb
add
adc
std
cmc
dec
lock
pop
(bad)
sub
inc
jmp
dec
outs
enter
mov
jmp
xchg
xor
and
out
adc
jnp
je
or
mov
inc
lea
sub
lods
mov
sbb
repz
dec
in
cmp
mov
in
iret
or
xchg
outs
scas
or
frstor
imul
out
ins
dec
lods
mov
jge
pop
xchg
inc
xor
mov
sbb
movs
jmp
dec
push
out
scas
xchg
in
mov
lods
push
inc
sub
hlt
mov
cli
arpl
cmp
push
mov
pusha
rcl
inc
out
out
lods
sbb
inc
mov
ds
push
cmp
mov
pop
into
add
ins
jecxz
ds
(bad)
or
xchg
mov
fmul
in
std
out
cdq
push
fsubr
xor
out
adc
add
sbb
js
lods
test
pop
sbb
add
cmp
push
pop
or
popf
nop
lods
xchg
dec
add
mov
and
pop
popf
data16
add
jb
nop
sahf
test
xlat
btc
pop
lahf
out
xlat
sub
js
cwde
retf
sbb
loopne
sahf
nop
fdivr
cmp
add
retf
xchg
fwait
sbb
push
mov
js
xor
jo
jne
out
(bad)
repz
xchg
pushf
cli
or
sbb
outs
ins
test
cdq
mov
sub
inc
add
icebp
pop
dec
xor
hlt
jmp
cmp
aas
mov
inc
inc
adc
addr16
pusha
pop
aad
sar
jl
fiadd
inc
dec
js
clc
pop
and
dec
rcr
push
mov
aaa
daa
jno
sbb
fisttp
dec
and
fwait
rol
sub
(bad)
pusha
lea
test
xor
retf
pop
mov
fistp
adc
push
dec
fs
xchg
jg
ins
out
cmps
pop
cmc
popf
pop
push
jae
leave
test
call
loopne
fldenv
sub
sub
fistp
setle
inc
dec
mov
pop
sbb
mov
loope
sbb
push
and
out
ror
call
push
loop
inc
pop
cmp
lods
loopne
popa
push
cmp
push
dec
add
inc
dec
test
xor
cli
push
cmc
(bad)
cmp
jmp
lock
jmp
inc
mov
add
sbb
cdq
loopne
pop
adc
jp
repz
mov
sar
xor
cli
int
jge
ret
sahf
dec
push
sub
mov
and
retf
fidiv
dec
cmp
xor
jle
xchg
push
add
ds
(bad)
iret
pushf
mov
(bad)
retf
mov
inc
sbb
mov
adc
mov
pop
mov
int
nop
push
sub
rcr
or
aaa
fwait
mov
(bad)
mov
sub
fldln2
mov
cld
mov
out
push
test
iret
push
sar
adc
cmp
call
pop
cmps
xor
cs
movs
dec
push
repz
cld
cmp
xor
jge
ret
sbb
push
pop
inc
mov
adc
sahf
add
mov
outs
mov
pop
jb
and
iret
jmp
cmp
pop
mov
mov
cmp
iret
push
inc
repz
jbe
nop
sub
sbb
cdq
call
mov
js
rcl
fcmovnbe
inc
test
mov
sub
sti
mov
icebp
jge
sub
(bad)
int
push
sub
jmp
mov
jl
std
iret
(bad)
jo
xor
mov
adc
adc
ror
retf
jp
cmp
sbb
and
cmp
imul
mov
push
jnp
cmps
add
or
ins
mov
jne
ja
dec
scas
mov
or
xchg
loopne
call
mov
pop
bound
cwde
jecxz
pop
fistp
jmp
jo
retf
stc
(bad)
je
xor
lock
xor
in
mov
add
ins
hlt
push
(bad)
mov
fistp
dec
or
cs
dec
sbb
push
push
sahf
and
jle
lea
xchg
sbb
jmp
addr16
repz
xor
jge
icebp
inc
sub
imul
inc
scas
sub
cmp
cmp
movs
(bad)
retf
mov
lock
jle
and
stos
(bad)
jns
jecxz
adc
ins
aaa
icebp
mov
jo
repz
or
jecxz
xor
and
sbb
aam
jmp
jge
cmp
into
xchg
or
xor
int3
imul
mov
addr16
sub
bound
cmp
push
add
lea
loopne
and
dec
sahf
cmp
pop
pop
ret
in
mov
lods
or
ins
pop
push
mov
add
mov
(bad)
div
js
mov
ret
mov
jge
iret
cmps
dec
and
ins
mov
fcomp
jo
xchg
test
fadd
add
sbb
call
ins
mov
or
cmovno
cmp
(bad)
test
mov
fistp
scas
cli
cdq
in
int3
mov
stc
or
(bad)
add
test
push
repnz
jo
int3
sbb
mov
imul
pop
popf
shl
ret
xlat
cs
pop
jb
sub
test
sub
inc
and
mov
fdivr
test
js
jae
pop
fst
jg
aad
push
mov
aas
add
xchg
mov
sbb
mov
cmp
in
jg
out
addr16
dec
jle
or
dec
sub
xchg
jns
rcr
mov
push
loope
mov
shl
popa
(bad)
mov
sahf
jmp
cli
leave
fst
fidivr
pop
mov
cmps
inc
popf
lods
stos
ret
cli
cs
fldcw
xor
mov
sbb
pop
fnstenv
and
loopne
sub
xchg
xor
sahf
inc
addr16
mov
hlt
sbb
cmp
mov
rcr
ret
jno
cmp
push
enter
mov
dec
cmps
and
pop
or
out
bound
inc
int
jle
xchg
outs
and
mov
inc
shr
dec
mov
or
add
and
jbe
aam
push
loope
sub
movs
sbb
jle
mov
fiadd
jo
mov
mov
mov
call
mov
shl
push
jnp
cmp
in
mov
cld
pop
test
(bad)
cli
movs
mov
sbb
xchg
rcl
fst
cmp
jo
mov
scas
dec
iret
gs
cs
iret
aam
(bad)
jbe
scas
push
mov
add
fstp
push
(bad)
(bad)
or
fld
cmp
fist
jl
out
adc
outs
sub
lods
xchg
out
int3
es
and
outs
(bad)
xchg
or
data16
inc
jb
xlat
or
int
arpl
fwait
cmps
leave
jge
sbb
das
hlt
fidivr
(bad)
int
pushf
aaa
mov
popa
cmc
idiv
push
scas
ret
adc
or
push
sub
sbb
pop
pop
xchg
test
lock
add
test
fnstcw
xor
xor
jno
or
push
clc
dec
adc
mov
dec
push
adc
or
xor
add
inc
cwde
ja
dec
jne
or
ror
jmp
dec
aas
push
retf
repz
das
cdq
test
inc
xchg
pop
jnp
popa
push
jge
mov
in
add
sub
ins
pop
outs
add
enter
xor
push
mov
rcr
or
xchg
mov
push
push
and
push
icebp
jmp
fsubr
jp
add
jnp
cmp
add
jmp
in
in
sahf
sub
sub
pop
arpl
pop
mov
jmp
ret
pop
sub
pusha
stos
mov
jae
dec
enter
pop
nop
or
call
cmp
leave
xchg
outs
xchg
xchg
repz
sub
mov
in
mov
movs
xchg
cmp
rcr
fwait
popa
test
xor
ror
and
push
jbe
pop
xor
lods
stos
test
sbb
mov
dec
aas
mov
icebp
mov
pop
push
mov
mov
cmps
push
sub
pop
lds
or
and
mov
mov
or
sub
popf
mov
mov
popf
sub
inc
cmp
add
popa
out
test
pop
inc
adc
ficomp
outs
xchg
in
fild
pushf
pop
push
cmp
fisub
das
loopne
scas
test
jp
arpl
bnd
loopne
inc
and
add
mov
jle
adc
les
xchg
repnz
sub
cmp
cdq
rcr
sti
pminsw
test
cmp
jg
fwait
das
adc
add
pop
lods
pop
push
pop
jl
mov
iret
and
aam
push
lds
ret
imul
mov
inc
push
movs
push
jbe
inc
or
xlat
in
xor
mov
mov
pop
retf
cmp
popf
retf
push
jle
sbb
in
stos
outs
ret
adc
push
add
cwde
xor
mov
or
sub
ret
aas
not
pusha
bt
push
xor
jle
dec
test
mov
xchg
sti
jno
and
push
popa
sbb
test
add
lock
int
ins
cmc
(bad)
xor
mov
sbb
jle
adc
pop
dec
aaa
inc
or
call
test
pop
jmp
rol
aas
ds
cmps
imul
(bad)
icebp
or
fwait
add
pop
pop
imul
dec
popf
push
inc
xchg
icebp
pop
inc
arpl
jae
inc
push
xor
(bad)
or
cli
rcl
(bad)
data16
sbb
pop
and
popa
out
aam
or
jae
dec
adc
xchg
mov
test
cmp
adc
(bad)
in
jns
mov
dec
or
xchg
add
or
int
adc
mov
mov
xor
sbb
mov
pop
fadd
pop
popf
fstp
cmp
pop
or
inc
xchg
imul
sub
dec
inc
aam
push
(bad)
outs
jns
dec
or
pop
lds
jno
xlat
cs
jg
cmps
ins
inc
stos
cmp
push
dec
jge
(bad)
dec
retf
sahf
je
fiadd
gs
out
mov
push
add
sub
(bad)
rcl
cmps
call
sbb
arpl
mov
(bad)
fdivr
pop
mov
int
adc
ins
inc
cdq
inc
sbb
mov
(bad)
and
stos
adc
pop
inc
cmc
into
jae
fistp
adc
or
pop
jl
je
dec
jbe
out
icebp
out
gs
ret
sar
adc
cmp
retf
inc
out
dec
lods
mov
mov
sbb
cmc
rol
cmp
mov
xor
xchg
push
push
sub
sub
je
mov
xor
out
fwait
mov
outs
jecxz
mov
dec
repz
mov
fwait
adc
and
int3
leave
jbe
(bad)
fdiv
jb
loope
pop
dec
test
sub
jmp
jl
in
inc
mov
push
inc
push
inc
pop
into
pop
mov
iret
pop
mov
inc
pop
jbe
adc
popf
jb
mov
enter
adc
mov
xchg
sbb
mov
das
fidiv
cmp
mov
mov
mov
sub
arpl
mov
inc
out
push
sbb
sbb
sub
jne
push
retf
mov
movs
xchg
in
cmp
inc
fwait
add
sbb
jecxz
push
push
scas
je
int3
sbb
ffree
jg
mov
sub
imul
aas
out
sti
(bad)
sub
and
sti
test
cmp
xchg
ja
inc
adc
test
(bad)
jge
shr
push
(bad)
in
cmc
cmp
call
pop
enter
mov
retf
sbb
retf
sbb
sbb
aam
and
dec
test
(bad)
mov
pushf
(bad)
cmp
outs
sbb
push
hlt
rcl
aas
mov
and
movzx
mov
sbb
push
lods
pop
jne
mov
inc
aaa
pop
push
mov
mov
pop
sbb
xor
clc
fs
rol
data16
push
push
mov
mov
adc
and
(bad)
repz
xor
inc
add
cs
out
imul
push
data16
adc
aas
aad
ins
or
or
aaa
popf
mov
shl
dec
imul
pop
nop
mov
out
xchg
sbb
je
je
movs
xchg
push
neg
push
mov
or
pop
pop
lds
repz
push
cmp
add
mov
push
xchg
push
nop
fidiv
cs
adc
std
sbb
pop
pushf
jns
lock
inc
add
xor
repnz
punpckhwd
jmp
pop
fwait
add
xlat
mov
pop
pop
ss
into
shl
test
xor
shr
lea
fiadd
sub
and
pop
and
sub
shl
mov
jl
fisubr
or
bound
jne
repz
inc
add
add
pop
outs
sbb
jmp
int
int
push
imul
pusha
sub
add
lods
call
retf
gs
xchg
xchg
cmp
adc
dec
pop
popf
mov
xchg
mov
or
cmc
jecxz
lahf
jb
scas
sub
repz
jno
(bad)
mov
das
scas
mov
or
sbb
cwde
cmp
in
lds
int3
push
les
mov
cmp
ins
gs
pop
cmp
dec
mov
jo
lahf
xchg
fnstcw
inc
es
adc
pop
push
(bad)
les
gs
pop
lods
ins
cwde
std
inc
fiadd
js
loopne
mov
lock
(bad)
aad
pop
sbb
lea
push
std
mov
loopne
ret
and
rcr
scas
ret
iret
arpl
jmp
push
fcom
xchg
(bad)
xchg
fstp
add
xchg
mov
inc
das
xor
les
mov
pop
jbe
cwde
sahf
cmp
fs
das
retf
jl
movs
mov
xor
or
fistp
mov
pop
(bad)
data16
ins
dec
mov
clc
pop
leave
jg
test
dec
pop
aam
pop
das
pop
and
imul
mov
ss
mov
js
pop
iret
mov
leave
test
mov
or
push
cdq
lea
inc
ss
and
std
adc
test
lods
or
(bad)
test
push
test
ds
jg
sbb
adc
mov
mov
adc
fdiv
arpl
or
loope
lods
pop
fs
loopne
in
popa
jecxz
repz
dec
or
fcom
sub
loope
jle
sbb
mov
mov
xchg
clc
cmp
xchg
int
aad
hlt
xor
or
jmp
stc
and
mov
(bad)
and
mov
sar
pop
aas
inc
cmp
rol
jp
out
lea
push
lods
gs
arpl
or
cmp
dec
ret
add
push
mov
adc
jmp
ficomp
shl
shl
jl
push
test
js
jnp
cs
daa
test
mov
test
inc
ins
mov
daa
and
mov
mov
pusha
xor
lods
or
icebp
sti
das
cdq
cmp
aas
pop
dec
inc
dec
inc
xchg
jne
gs
push
cmp
retf
mov
add
adc
xor
jecxz
arpl
shl
inc
daa
or
repz
cmc
adc
pop
xor
dec
xchg
rcr
repz
pop
xor
pop
xchg
fcmovnu
mov
pop
clc
push
imul
hlt
lock
and
add
gs
xor
dec
aad
xchg
sbb
sub
sti
add
cmc
ins
jecxz
push
jmp
and
cmp
mov
mov
fimul
jb
sub
mov
aad
jno
pop
vpsubq
stos
inc
xchg
gs
push
sub
inc
int
or
and
mov
sbb
push
xchg
not
mov
mov
adc
cdq
push
daa
ja
cmps
mov
lahf
mov
push
push
xor
cwde
jb
movs
push
pushf
add
call
repz
mov
sub
xor
sub
pop
dec
sbb
and
pop
pop
loopne
and
ja
add
add
cmp
pop
sub
jmp
and
push
cli
inc
add
test
dec
scas
fimul
iret
pop
mov
iret
sbb
push
data16
mov
and
xchg
xor
dec
vshufps
mov
or
xchg
or
adc
and
sub
cmp
js
or
rol
xchg
iret
int
arpl
add
js
aas
push
in
xlat
cdq
xor
xchg
stos
mov
out
or
mov
in
xor
and
test
aaa
dec
dec
dec
pusha
cmc
outs
adc
test
sbb
xchg
cmp
xchg
repz
push
mov
loop
dec
fistp
xchg
test
cmp
mov
xchg
mov
lahf
aam
and
(bad)
mov
xor
push
popf
pop
ror
xlat
jbe
test
dec
in
lock
inc
dec
mov
test
sbb
call
lahf
test
test
fadd
shl
(bad)
fstp
dec
inc
jle
xchg
cmp
les
or
xchg
movs
movs
xor
xchg
sub
std
mov
lock
mov
ffree
arpl
sbb
inc
cmp
(bad)
mov
mov
sub
aad
and
pop
add
or
cmp
xchg
std
or
lea
add
movs
sbb
vpmadcswd
aaa
sub
push
dec
xor
pop
add
or
(bad)
aaa
ins
push
stc
xchg
out
ds
adc
xchg
cmp
pop
and
mov
jb
inc
push
dec
sub
mov
adc
sysexit
xor
mov
movs
jae
out
je
push
imul
pusha
push
xor
rcl
push
push
cdq
jns
push
cmc
lods
cmp
pop
mov
or
inc
in
mov
rcr
aas
push
mov
sbb
mov
xor
inc
iret
mov
adc
sub
fisubr
aas
cmp
xchg
inc
mov
test
jecxz
push
movs
cmp
push
loope
pushf
loopne
in
sbb
pop
dec
jmp
scas
or
mov
in
inc
je
adc
dec
repz
std
sbb
mov
mov
mov
repnz
add
pop
pop
rol
push
sub
data16
jg
cld
fild
pushf
fcmovnb
add
ror
int
dec
add
sbb
lds
mov
jbe
mov
dec
push
sub
cmp
test
adc
xchg
xchg
sbb
xchg
mov
pushf
(bad)
xchg
add
movs
pop
mov
sbb
jle
(bad)
fdivr
lds
test
sub
mov
cmps
sub
imul
pop
cmp
sub
mov
add
pusha
and
mov
ins
gs
xor
in
mov
cmc
outs
ins
and
xor
cli
fistp
repnz
cmp
lds
cmp
pushf
push
cmps
pusha
je
loop
mov
outs
das
sbb
data16
xchg
lods
out
ja
add
add
cmps
stc
mov
imul
pop
jle
not
add
lahf
mov
pushf
fsubr
call
scas
mov
int
js
inc
inc
(bad)
push
xor
cmp
loopne
and
sub
pusha
pop
cmp
cmp
mov
sub
iret
pushf
js
jno
adc
retf
dec
sbb
cmp
jb
push
sbb
in
xor
dec
std
sahf
mov
pop
cmp
pushf
js
aam
mov
test
cmp
push
gs
mov
adc
lock
ins
fld
xor
ja
mov
out
mov
dec
mov
les
retf
mov
int
das
jnp
das
jmp
mov
mov
push
rcl
lods
and
xor
ds
xchg
jg
ret
pop
movs
jp
dec
sbb
mov
fisubr
jle
mov
mov
mov
jl
shl
rcr
push
in
push
push
stc
std
xor
push
outs
push
mov
jb
and
adc
std
cmps
or
push
push
jnp
sti
test
movs
(bad)
xor
cli
repnz
lods
pop
jp
test
mov
jbe
jmp
jae
pop
adc
scas
lods
adc
bound
test
sbb
mov
test
push
ds
jmp
call
or
or
dec
xor
adc
xchg
out
(bad)
aad
sub
push
mov
hlt
dec
and
stc
jnp
adc
iret
xchg
les
gs
fnsave
nop
std
xchg
xor
leave
pushf
(bad)
ja
pusha
sbb
scas
scas
push
jmp
sub
out
mov
js
scas
mov
int3
sbb
test
xchg
dec
fstp
fcomp
outs
or
push
fucomi
cmp
and
or
lahf
and
ins
pop
and
ins
(bad)
sbb
sub
cld
enter
xchg
sbb
mov
pusha
add
sub
inc
xchg
sub
mov
pop
jmp
xor
icebp
loope
ss
sahf
ja
push
fwait
xlat
ror
dec
push
dec
gs
fdivrp
pop
fs
leave
jns
push
push
std
jbe
xchg
outs
push
push
sbb
int3
xchg
sbb
pop
push
ins
cmps
cs
data16
pop
scas
pop
arpl
mov
and
popf
xchg
addr16
je
fistp
sub
fild
xchg
push
or
push
lahf
jg
test
dec
cmps
into
xchg
(bad)
cmp
lock
outs
jle
stos
into
aaa
sub
bound
xchg
jp
retf
adc
push
cld
cmp
ret
xchg
loop
pop
sbb
jne
xchg
cmp
enter
das
(bad)
adc
nop
add
enter
xor
pop
ds
retf
out
jl
inc
repnz
lahf
daa
cwde
sbb
popf
repz
je
cmp
mov
retf
out
cdq
inc
push
cdq
xor
inc
mov
adc
stc
stc
mov
jmp
dec
or
pop
sub
jmp
mov
das
and
fcomip
cmps
jecxz
mov
test
add
cli
jno
retf
add
adc
out
pop
int
inc
(bad)
or
inc
add
adc
mov
cmp
or
cdq
jmp
xor
shl
(bad)
rcl
into
push
mov
movs
out
addr16
pusha
icebp
ja
pop
in
push
push
cdq
pop
jg
mov
out
xor
and
ja
sti
sub
mov
sub
fsub
sub
repz
sar
ret
pop
retf
xor
loopne
pop
test
sub
xor
and
inc
outs
and
jnp
inc
mov
(bad)
mov
mov
lods
dec
sub
inc
out
mov
gs
pushf
(bad)
sbb
dec
sub
in
push
gs
lock
add
stos
mov
jb
je
ja
push
mov
jmp
scas
mov
ss
pop
call
outs
in
push
pop
mov
xchg
adc
jmp
gs
loope
mov
adc
retf
scas
repz
ss
jb
adc
cmp
popa
div
lahf
mov
xchg
sbb
sub
inc
or
jmp
mov
out
dec
popa
popf
scas
test
test
packssdw
pop
call
adc
pop
mov
push
xor
into
jns
js
or
sbb
add
jle
fistp
into
push
xor
aam
inc
jmp
call
and
(bad)
xlat
iret
jo
inc
(bad)
jne
enter
lods
push
(bad)
dec
outs
cmp
arpl
cdq
mov
sbb
mov
lock
ins
jae
loopne
pop
adc
fiadd
pusha
icebp
pop
repz
(bad)
scas
lods
outs
dec
mov
lock
lahf
and
cmp
cmps
std
clc
js
add
and
cli
inc
movs
scas
mov
or
sbb
mov
js
shl
hlt
aas
dec
cwde
cmp
pop
popa
aas
(bad)
xchg
add
cmp
and
fsub
dec
xchg
mov
inc
sub
sbb
dec
xchg
loop
in
jb
int
mov
push
mov
movs
pop
push
addr16
push
outs
mov
xchg
add
push
rcr
jecxz
xchg
imul
push
rdtsc
repnz
scas
stc
fwait
mov
push
cmps
lock
jno
aam
fcomp
and
or
test
lds
pop
scas
inc
or
(bad)
pushf
xchg
inc
clc
adc
(bad)
jg
xchg
test
fwait
mov
fsub
icebp
sub
mov
test
pop
lock
add
jecxz
mov
(bad)
test
call
jecxz
leave
push
push
ret
adc
inc
adc
or
or
push
(bad)
cmp
and
loopne
mov
lods
mov
xchg
in
das
xor
pop
add
adc
loopne
push
test
(bad)
pop
or
xor
and
xchg
not
and
int3
sar
es
(bad)
stc
mov
mov
scas
das
popa
test
cmp
in
jmp
ret
outs
out
adc
out
int
pop
pop
fidiv
jno
cmc
xlat
jl
fwait
cmp
pop
or
push
cmc
ins
jae
dec
mov
inc
or
sub
ret
mov
arpl
stos
shl
sub
mov
jns
mov
xchg
and
jno
mov
(bad)
or
mov
test
fcom
adc
mov
stos
mov
bound
dec
mov
fstp
cmc
stos
lea
push
enter
outs
mov
sub
fdivr
mov
mov
cmp
mov
xor
das
xchg
mov
jl
enter
(bad)
xor
pop
add
dec
in
jne
cli
addr16
fcmovb
xchg
loope
mov
jmp
sub
xchg
imul
or
xor
push
mov
daa
pop
mov
xchg
jmp
and
add
mov
cld
push
mov
shr
imul
dec
push
cdq
imul
scas
mov
jge
sbb
lods
jmp
sbb
pop
retf
pop
pop
ja
ror
fbld
(bad)
inc
cmp
add
push
xor
jge
adc
repnz
loop
ror
clc
push
mov
jmp
mov
sahf
imul
inc
xlat
jbe
ret
add
jle
ins
push
lock
(bad)
lods
ret
sbb
pop
xchg
lods
mov
cdq
mov
mov
mov
pop
and
pop
mov
mov
cwde
in
inc
pop
pushf
nop
dec
pop
loop
mov
lods
mov
and
mov
fdivr
dec
std
rcl
out
inc
xchg
mov
icebp
test
sbb
push
aas
addr16
cmc
or
into
sahf
cmp
stc
jno
(bad)
loope
xor
(bad)
fmul
push
outs
add
add
push
aaa
add
mov
adc
mov
pusha
rol
pop
mov
fsubr
sbb
and
add
xchg
mov
xor
xor
jle
jne
push
ret
sti
bound
sub
fadd
shr
loop
aam
push
adc
sbb
push
shl
fcmovnb
mov
repnz
clc
mov
scas
xchg
lds
push
test
inc
test
std
pop
cmc
lods
loopne
lods
(bad)
mov
stos
icebp
(bad)
out
dec
neg
xchg
(bad)
idiv
leave
cmp
iret
stos
fstp
lock
shr
mov
mov
stc
push
mov
sub
mov
hlt
retf
into
mov
pop
dec
mov
(bad)
cmp
mov
data16
iret
je
or
xor
int3
push
mov
fdivr
cmp
cmp
mov
jmp
aad
ss
add
mov
push
mov
mov
icebp
mov
imul
inc
xchg
aas
inc
outs
mov
mov
adc
sub
xchg
pop
mov
cs
xlat
add
add
jecxz
shl
push
or
pop
mov
lods
sub
jge
cli
mov
push
enterw
stos
xchg
fadd
mov
xchg
shl
cli
push
(bad)
adc
cmp
inc
inc
add
inc
cmps
jns
push
sar
mov
sti
addr16
jg
call
jo
stos
mov
sbb
cs
xchg
inc
push
push
fs
adc
shl
jg
dec
or
jle
sub
jge
mov
add
mov
jnp
mov
aas
call
mov
push
dec
inc
xchg
add
jmp
retf
sbb
push
push
cmc
scas
aad
fild
fwait
jno
xor
mov
arpl
add
rcr
popa
jb
repz
or
dec
cmp
push
cmp
mov
scas
or
adc
mov
test
loope
cmps
xchg
mov
mov
ja
sbb
dec
mov
mov
xchg
xor
mov
push
shr
cmp
mov
mov
cwde
sub
ss
movs
cmp
popf
push
mov
ficom
inc
in
(bad)
cdq
jne
imul
cmp
sti
(bad)
ins
out
stos
nop
mov
loope
dec
dec
cmp
or
sbb
les
repz
lods
adc
push
cdq
iret
dec
xchg
pusha
fsubr
shl
test
and
movs
fcomp
xchg
lock
adc
sahf
pop
jp
xchg
rol
rcr
inc
xchg
pusha
bnd
jg
pop
xlat
movs
and
fsub
ret
or
dec
mov
cmp
push
fwait
sbb
(bad)
mov
ja
fcmovne
adc
jp
push
aas
lock
xor
jo
dec
cmp
jae
pop
pop
and
and
jg
(bad)
push
pusha
mov
addr16
xor
mov
(bad)
lods
mov
sub
les
xor
cmc
hlt
retf
fnstcw
or
in
test
test
cmp
pop
imul
sbb
lods
lock
nop
xchg
jge
xor
push
in
lods
mov
mov
int
xor
cmp
stc
jns
sub
loopne
shr
mov
nop
shl
imul
inc
or
dec
fstp
xor
mul
jp
test
inc
out
cmps
lock
inc
jo
jmp
push
inc
stc
push
xor
test
xchg
dec
ficom
pop
jl
and
dec
pop
sbb
cmps
and
pop
sub
mov
in
mov
aas
mov
sub
xchg
pop
cmp
rcr
sti
outs
sbb
dec
push
mov
xor
push
loopne
xchg
test
dec
and
mov
cmp
xchg
nop
imul
test
pop
cdq
into
xor
lods
fisub
xchg
mov
mov
lods
movs
loope
mov
dec
sbb
loope
xchg
push
fwait
es
lods
mov
call
jmp
xchg
mov
adc
mov
out
in
xchg
rcl
fnop
push
adc
ss
out
inc
jmp
mov
mov
lahf
or
add
cmp
stos
mov
sahf
aam
sbb
rcl
inc
jb
loope
inc
mov
call
mov
(bad)
xlat
or
mov
mov
xor
sar
adc
retf
sar
add
(bad)
loopne
int3
mov
inc
ss
nop
push
or
ins
scas
fidivr
mov
addr16
rcl
daa
inc
xchg
mov
mov
or
into
fimul
rcl
jecxz
int3
cld
push
dec
mov
fisttp
test
popw
push
std
ins
inc
sub
mov
mov
xchg
or
dec
rcl
dec
aaa
ret
or
and
pop
mov
call
aad
ins
jbe
jl
xor
dec
out
mov
mov
xchg
add
test
xor
test
call
mov
gs
push
aaa
das
xor
ds
pop
stos
and
neg
cmp
mov
dec
dec
xor
mov
iret
sar
vmovupd
repz
lea
and
push
cmp
loopne
add
jle
sbb
cld
clc
jmp
mov
test
(bad)
push
mul
loopne
add
pushf
adc
jg
lods
mov
sqrtps
lea
dec
arpl
daa
jno
popa
mov
cmp
xor
ss
movs
sahf
rcl
jno
ret
imul
(bad)
daa
shl
dec
not
and
mov
xor
rol
dec
inc
ins
dec
xor
test
test
inc
cli
fs
jl
repz
cmp
mov
xchg
inc
nop
std
jb
cdq
or
mov
ins
cwde
stc
stos
add
sbb
pop
lahf
pop
scas
dec
call
fld
out
push
and
ss
mov
stos
(bad)
movs
std
loopne
mov
mov
and
repz
or
fistp
pop
arpl
jmp
cdq
retf
adc
(bad)
ror
pop
mov
outs
and
jle
rcl
data16
dec
fs
out
xchg
rol
lds
and
pop
(bad)
fldcw
test
(bad)
loop
idiv
movs
repnz
pushf
pop
(bad)
ins
ror
out
dec
shl
push
vmovups
adc
loope
cmp
retf
sbb
jge
sub
out
int3
cmp
xchg
(bad)
in
(bad)
inc
into
xor
leave
adc
mov
in
mov
sbb
xchg
fdivrp
jecxz
fwait
cmp
push
pusha
fcomp
fincstp
xchg
adc
dec
ss
mov
push
pop
add
(bad)
mov
mov
fdivr
test
xchg
mov
push
popf
add
mov
jp
out
cmp
mov
lahf
xor
inc
imul
lods
and
lds
fild
je
mov
imul
retf
and
fiadd
push
pusha
(bad)
add
jp
inc
mul
inc
outs
enter
fidiv
sbb
shl
sub
mov
jb
xlat
imul
dec
daa
or
xor
mov
stos
test
std
adc
stos
xchg
mov
adc
sub
loope
dec
sbb
fadd
cwde
ret
dec
shl
dec
lock
arpl
and
dec
mov
mov
rcl
lock
inc
jmp
ds
mov
add
fwait
ret
test
icebp
and
repnz
inc
stos
sub
cmp
scas
or
or
dec
sub
out
dec
sub
sbb
mov
repnz
out
add
or
xchg
aam
rcr
dec
push
sub
jg
jg
push
pop
test
out
inc
push
retf
scas
(bad)
sub
push
mov
dec
or
sti
push
inc
ss
push
ins
and
fsub
int3
fcomp
add
pop
mov
ret
rol
mov
es
imul
mov
or
jo
and
leave
test
push
lds
std
fwait
pop
sbb
pushf
sbb
sahf
add
out
or
mov
fsubr
and
mov
mov
sub
mov
sbb
mov
adc
inc
test
ds
xlat
dec
outs
push
rcl
or
call
cmp
idiv
inc
sbb
je
push
pop
arpl
call
inc
in
sub
lods
sbb
jle
call
jmp
mov
fst
or
pop
pop
pop
cmp
dec
cld
xor
mov
in
push
lea
test
add
ins
enter
mov
or
dec
jecxz
mov
xchg
ss
mov
stos
rcr
and
mov
sbb
jo
jb
pop
fisttp
(bad)
ss
mov
nop
adc
loopne
rcl
aad
cmps
mov
(bad)
in
cmps
add
pop
ret
xchg
mul
fadd
mul
sbb
cdq
movs
mov
inc
mov
xchg
leave
mov
jg
mov
pop
push
sub
dec
add
jl
(bad)
fsubr
clc
xor
dec
leave
jge
jecxz
xchg
sbb
ja
sbb
sar
int
mov
mov
mov
arpl
fmul
mov
add
das
fild
add
dec
lock
xlat
hlt
add
dec
dec
ror
sub
pop
sahf
mov
ja
mov
retf
movs
sbb
dec
ret
call
and
rol
retf
fisubr
or
loop
out
and
test
adc
cld
nop
jb
sub
nop
adc
daa
or
mov
(bad)
lock
test
ficom
in
std
aas
rcr
fisub
inc
mov
int
loopne
mov
jp
sahf
ror
dec
jb
mov
mov
das
sbb
fistp
jo
hlt
inc
les
pop
xlat
xchg
dec
std
xor
jge
mov
pop
test
xlat
sbb
icebp
sub
add
sti
fistp
outs
sti
call
sbb
hlt
mov
repnz
adc
or
ret
imul
(bad)
mov
jge
add
xlat
jno
mov
pop
ss
je
or
mov
adc
(bad)
retf
shr
push
stos
mov
pop
clc
popa
jbe
sahf
(bad)
out
sti
mov
xor
mov
out
ja
xchg
mov
xchg
test
mov
ret
iret
mov
pop
mov
dec
and
mov
loope
je
fbstp
mov
pusha
sahf
cli
dec
mov
cmc
call
jmp
call
repnz
imul
sbb
xlat
inc
xor
and
xlat
mov
scas
jb
adc
test
adc
movs
sub
popa
inc
cmp
push
sub
sbb
cmp
inc
pop
add
sub
(bad)
fisubr
sahf
pop
leave
push
push
jbe
xchg
dec
push
push
rol
mov
loopne
sub
pop
mov
mov
sar
loopne
bound
push
adc
pop
mov
arpl
push
or
xchg
adc
cmp
(bad)
shl
push
pop
rcr
push
je
rol
fcomp
loope
adc
mov
xchg
sub
cwde
cmps
scas
rcr
ins
retf
sbb
mov
in
(bad)
call
dec
hlt
out
and
lahf
aas
mov
dec
add
push
push
mov
test
cmp
cmc
xor
test
iret
adc
sbb
mov
mov
in
sub
pop
retf
aam
push
or
dec
scas
and
inc
sbb
xor
xchg
repz
mov
loopne
mov
mov
rol
xor
scas
(bad)
mov
push
movs
or
and
in
lods
xchg
dec
ds
cmps
sti
call
ret
sub
xor
push
dec
je
ss
outs
mov
pop
add
(bad)
(bad)
sar
pop
and
mov
bound
ins
inc
(bad)
rcr
loope
add
(bad)
es
push
dec
adc
ins
sti
inc
dec
dec
lock
lods
mov
inc
lods
(bad)
and
pop
sbb
dec
xor
test
push
cld
adc
add
or
jp
lods
adc
cmp
in
xor
and
scas
push
sbb
in
repz
dec
movs
imul
xor
lock
mov
xchg
shl
aad
retf
cmp
xchg
pusha
fsubr
push
push
ss
sbb
adc
inc
fdiv
jb
dec
mov
sub
rol
cld
nop
sbb
xor
xchg
dec
loopne
fmul
adc
cmps
dec
or
or
mov
cli
jbe
lods
and
icebp
xor
iret
dec
pop
add
fldenv
js
dec
dec
(bad)
sti
retf
xlat
mov
dec
xor
xchg
xor
arpl
adc
inc
mov
cld
jmp
xlat
mov
jnp
lods
pusha
ins
push
(bad)
sub
sbb
int3
out
pop
std
pop
inc
cmp
mov
sub
and
push
cmp
add
pop
neg
into
shl
out
push
pop
jge
xchg
cdq
(bad)
stos
xchg
addr16
inc
push
ret
push
fiadd
ins
push
mov
fbstp
push
ja
ror
or
pop
push
sbb
ss
sbb
push
ret
sub
mov
mov
sub
mov
and
bound
inc
sahf
mov
lock
mov
adc
lahf
push
(bad)
pop
call
xchg
cmp
sbb
mov
push
outs
loopne
ror
mov
sar
test
icebp
(bad)
cwde
(bad)
sub
ror
stc
bound
je
aad
push
push
jecxz
test
iret
push
xor
dec
jle
dec
and
fdivrp
inc
jl
je
int3
mov
mov
aas
cmps
inc
leave
aaa
mov
dec
scas
in
push
adc
bound
or
mov
adc
mov
pop
ja
xor
and
mov
movs
mov
int
inc
dec
rol
adc
mov
clc
lods
js
sub
xlat
call
jge
adc
cmps
adc
loope
add
retf
unpckhps
(bad)
or
in
mov
arpl
and
jecxz
jecxz
outs
in
add
adc
jns
inc
cmp
daa
pop
vmovdqa
cmp
dec
sub
pushf
sub
nop
xor
fcom
or
push
sub
outs
enter
dec
add
dec
xchg
add
add
in
pushf
mov
jae
adc
lds
imul
xor
mov
cli
scas
cmc
nop
stc
sti
push
pop
outs
pop
xchg
sub
clc
mov
xchg
sub
adc
(bad)
ss
push
lea
push
stos
movs
mov
xchg
xchg
xchg
scas
stos
fwait
retf
pushf
sub
stos
or
sahf
dec
aas
js
fnstsw
mov
ficom
aad
dec
pushf
stos
cmp
cmp
sub
cmp
and
sbb
popf
jecxz
mov
sub
mov
out
retf
fiadd
cdq
mov
rol
jns
addr16
mov
rcl
fiadd
cmc
movs
inc
push
jl
jne
pop
add
jne
push
cmc
jge
mov
test
ins
div
jne
adc
or
enter
xor
stos
or
arpl
dec
mov
imul
jp
sbb
scas
aam
test
out
in
mov
dec
jns
cmp
jae
lea
inc
jmp
xchg
sub
or
int
add
imul
ja
repz
test
push
retf
mov
into
mov
sub
ret
rol
sub
call
inc
xor
sahf
mov
cdq
test
loopne
dec
icebp
xor
push
dec
outs
pop
cmps
cmc
add
leave
or
dec
dec
sahf
push
dec
pop
hlt
cmps
jl
inc
es
push
jecxz
in
cmp
out
imul
pop
lock
pop
(bad)
jge
dec
clc
ds
mov
jne
mov
test
test
mov
pop
cmc
mov
mov
sbb
int3
pop
mov
adc
pusha
xchg
stos
mov
push
sahf
pop
cmp
and
fbld
sti
jnp
hlt
retf
in
mov
ror
mov
inc
fwait
stos
push
inc
xchg
mov
in
enter
mov
jmp
in
retf
xchg
xchg
clc
jle
cld
sbb
or
or
cmps
loop
hlt
arpl
jl
dec
movs
mov
loope
scas
cmp
pop
loopne
or
dec
rol
repnz
mov
mov
lock
and
ins
fnsave
or
in
mov
or
or
push
jno
inc
outs
ds
icebp
je
sbb
push
jge
pop
sub
sub
fdivrp
or
xchg
fidivr
fcmove
shl
inc
daa
push
pop
enter
cvtpi2ps
inc
test
jb
out
mov
stc
xchg
or
lea
hlt
inc
movs
out
pop
inc
xchg
retf
inc
into
rcl
call
arpl
call
jp
test
shr
fs
lds
xor
aas
rcl
ret
xchg
das
outs
mov
iret
test
pop
sbb
cs
push
pop
in
adc
stos
adc
mov
(bad)
mov
push
loope
test
call
in
cld
fwait
dec
cmp
push
sub
jge
cmp
movs
jb
arpl
je
or
nop
jae
pop
push
xor
cmp
jmp
test
ja
mov
add
xchg
push
cmp
fisubr
cmp
icebp
pop
push
adc
mov
cmp
in
and
ror
xchg
aam
push
pop
and
repz
(bad)
mov
cmp
sub
cs
inc
pop
test
sub
push
lahf
sahf
mov
inc
popa
push
outs
mov
dec
add
dec
into
add
xor
sub
icebp
sbb
cmp
lods
pop
add
cld
retf
inc
inc
pop
cmps
dec
ret
fist
call
jbe
mov
arpl
inc
jnp
xchg
mov
jo
dec
push
inc
jmp
and
leave
fidivr
scas
xchg
clc
aas
pop
push
and
jl
or
frstor
xor
mov
jmp
cld
xor
xlat
or
mov
fisub
lahf
jae
push
and
and
(bad)
mov
dec
push
add
mov
bound
ja
add
push
add
clc
sbb
fnsetpm(287
cmp
mov
pop
add
ins
inc
(bad)
sub
jns
sbb
sbb
mov
clc
jl
push
lods
fisubr
cld
sbb
mov
in
div
loope
loop
rcl
jmp
adc
xor
mov
js
sub
daa
xor
mov
ins
or
xchg
jnp
dec
test
xor
hlt
add
and
lods
push
add
ss
dec
fnstcw
cs
mov
push
ds
mov
mov
repz
xor
bound
sbb
push
inc
arpl
int
inc
add
aas
(bad)
dec
jmp
adc
add
ret
xchg
mov
jge
lahf
cmc
jp
fadd
ds
push
jb
out
sahf
into
mov
ss
sbb
outs
fst
cld
push
out
adc
loopne
jg
xor
lar
cld
xchg
pop
cmp
adc
dec
jge
dec
int
gs
fstp
adc
sbb
lds
xor
push
and
inc
outs
or
aam
pop
and
add
fadd
ins
jbe
jnp
push
adc
sbb
iret
pushf
ins
push
lods
dec
nop
cmc
in
movs
ins
fcom
cdq
mov
inc
ins
mov
cld
push
pushf
push
dec
sbb
jle
(bad)
mov
lds
fidivr
lock
imul
hlt
push
stos
test
fstp
mov
aad
adc
xor
and
adc
jo
pop
rcl
or
sub
xchg
out
data16
inc
repz
inc
xor
adc
jmp
sbb
sar
cli
sub
mov
xor
inc
enter
dec
loop
and
int
(bad)
sub
jl
xchg
call
or
mov
or
daa
adc
outs
loop
cdq
cmp
ins
cmp
sbb
mov
dec
fldenv
cmp
mov
or
jge
inc
xor
jmp
shl
test
mov
cmp
pop
repz
or
mov
out
pop
inc
daa
pop
lahf
stos
mov
jge
push
popf
scas
mov
movs
mov
test
cmc
inc
push
call
nop
dec
lods
movs
mov
jg
sub
movs
retf
cs
and
cmc
scas
push
push
(bad)
(bad)
in
fld
sub
test
xchg
or
or
xchg
xchg
xor
mov
addr16
pop
imul
dec
adc
xor
cs
pop
scas
fcom
lods
(bad)
dec
mov
cld
clc
jmp
hlt
out
in
stos
lahf
push
cmc
pop
mov
clc
stos
add
sbb
call
fisub
xchg
inc
fld
mov
shl
int
movs
pop
jbe
adc
loopne
(bad)
stc
inc
and
xchg
adc
cmc
cmp
mov
mov
stc
push
xor
pop
xor
test
js
inc
bound
rcr
popa
clc
xor
push
mov
jae
mov
add
lahf
shr
cwde
mov
shl
sbb
repnz
daa
cwde
sbb
xor
add
repz
or
lock
mov
jp
outs
mov
jl
out
es
test
loop
jl
add
pop
or
pop
xor
dec
rcl
xor
fsubr
lds
scas
repnz
adc
push
and
xchg
xchg
dec
push
clc
(bad)
cmp
aas
pop
test
fld
leave
movs
clc
mov
aas
push
cmp
(bad)
dec
rdpkru
xchg
push
push
add
add
mov
dec
xchg
inc
scas
or
pop
ret
scas
aam
pop
leave
adc
jle
cld
mov
test
cmc
clc
popa
push
mov
sub
(bad)
jmp
or
sub
mov
test
sub
push
dec
imul
aas
push
ret
cdq
test
push
test
mov
push
pushf
shl
stos
jge
add
push
jns
jno
arpl
mov
cmp
dec
test
pop
mov
lods
jmp
xor
jmp
popf
mov
loope
xor
std
mov
in
dec
mov
push
stos
leave
push
mov
mov
inc
dec
pop
je
pop
scas
daa
mov
(bad)
adc
mov
out
inc
add
sub
(bad)
sub
or
pop
ret
icebp
fxch
add
hlt
mov
gs
ss
pop
icebp
cs
add
jb
leave
aam
ret
pusha
ds
nop
gs
cmp
in
cmc
cmps
inc
jmp
aas
call
pop
push
loopne
rcr
gs
xor
cmc
movs
ret
je
sub
js
(bad)
outs
dec
rcr
mov
cmps
sbb
sti
in
lods
mov
bound
cmc
pop
and
and
fwait
adc
or
(bad)
ret
mov
or
jle
out
xchg
retf
xor
add
data16
out
jne
out
xchg
ja
dec
xchg
retf
popa
js
inc
ror
test
icebp
and
fimul
jns
jmp
or
pop
outs
mov
sub
and
pop
push
jle
xchg
mov
sub
sub
push
int3
jnp
je
imul
cmp
xor
mov
lds
stos
icebp
sbb
mov
push
shl
jae
mov
add
xchg
mov
cmc
ins
fmul
dec
in
sahf
jb
jmp
sbb
lods
stos
mov
inc
add
in
fisttp
push
mov
sub
cmove
sub
call
pop
xor
inc
ret
inc
cmp
ficomp
sbb
jb
adc
jnp
idiv
mov
je
inc
push
pop
dec
cdq
jns
popa
lods
fwait
out
in
add
retf
sbb
popa
dec
pop
sti
pop
jb
jge
mov
or
fdiv
lds
cmp
mov
das
jp
ja
mov
rcr
loope
(bad)
jmp
xchg
es
ins
ficomp
push
push
jg
cmp
pop
sub
jmp
mov
push
sub
ins
jne
push
mov
xchg
icebp
jecxz
xchg
ins
jae
scas
xchg
(bad)
mov
push
setle
jmp
loope
arpl
cs
mov
jl
xchg
pop
sbb
leave
je
mov
enter
xchg
dec
pop
dec
fcomi
fisub
mov
sub
push
cwde
gs
xor
jb
cmp
and
or
mov
adc
movs
mov
jno
fld
lea
stos
stos
cmc
clc
aas
and
xor
retf
add
cmps
push
dec
leave
inc
(bad)
push
xchg
cmc
pop
idiv
(bad)
retf
dec
jb
push
jmp
sahf
sbb
cmc
mov
cmp
loopne
int
add
jae
dec
les
jns
dec
cdq
xlat
add
mov
add
loope
mov
iret
popf
leave
lods
mov
cmps
ins
adc
xor
cmp
jmp
rcr
xchg
mov
pushf
fcmovne
adc
(bad)
(bad)
mov
retf
mov
jb
xlat
cld
mov
mov
shl
or
or
pop
inc
push
dec
adc
xchg
push
scas
call
dec
xchg
lods
cmp
mov
xchg
repz
add
cli
pop
pop
hlt
mov
sub
stc
or
push
out
mov
add
inc
das
test
int3
pop
sbb
lods
imul
(bad)
sub
inc
fimul
add
pop
jl
pop
sar
jl
and
dec
mov
loop
fstp
test
fs
dec
movs
jb
out
add
sar
pop
dec
out
mov
xchg
addr16
stos
xchg
sbb
cvtpi2ps
pusha
adc
mov
cld
mov
inc
adc
push
mov
cli
push
(bad)
in
ret
lods
sbb
sub
xchg
aad
push
stos
push
cmp
jne
inc
add
or
movs
das
adc
aam
pop
push
cmp
mov
mov
add
pop
sub
sti
(bad)
xchg
test
in
daa
add
leave
xor
push
out
loop
enter
cmps
adc
out
retf
int
pop
stc
pop
outs
cwde
mov
scas
xchg
imul
jmp
cwde
popa
cmps
cmps
add
pop
pusha
jnp
es
pop
cmps
shl
pushf
shl
sbb
pop
repz
shl
or
add
aam
and
dec
cld
int
(bad)
xchg
mov
bound
in
or
(bad)
loope
loop
dec
je
les
pop
jg
xor
push
cmps
pop
das
(bad)
mov
movs
xor
stc
retf
int3
cli
dec
ins
retf
dec
pop
sbb
cld
pop
adc
adc
cmp
adc
ret
out
pushf
mov
cdq
add
mov
icebp
mov
jl
int3
adc
loope
div
jmp
jno
(bad)
scas
daa
adc
push
xor
not
xor
jge
hlt
push
pop
call
scas
push
out
adc
fwait
jmp
ja
cld
sub
lock
repnz
xor
mov
shl
fwait
ret
xchg
mov
xor
es
test
add
dec
mov
and
xlat
pop
mov
fsubr
xor
adc
ror
daa
lods
jns
or
cmp
ret
xor
stos
xchg
movs
push
icebp
ja
lods
and
sbb
jno
ins
xchg
add
dec
into
xchg
jp
push
fs
mov
in
call
push
call
test
daa
jbe
dec
out
pushf
retf
adc
push
ret
mov
stos
out
adc
jl
icebp
cld
cmp
sar
jmp
aad
jle
movs
mov
cld
out
sbb
push
rcl
jmp
mov
(bad)
adc
jecxz
and
sub
cwde
push
daa
stos
sbb
xor
and
into
sub
imul
ds
jmp
and
dec
jbe
pop
sbb
popf
fisubr
mov
xchg
add
and
pop
jae
fist
rcl
jno
stos
popa
jno
popf
rcl
daa
into
sbb
or
jl
pop
movs
test
scas
jno
mov
popa
mov
push
inc
mov
aam
and
mov
mov
lods
jg
lea
into
cwde
popf
sti
jb
(bad)
adc
xor
jo
adc
push
cld
int3
jbe
xor
icebp
mov
xor
pop
xchg
pop
and
adc
bound
mov
dec
loope
jg
dec
out
in
cmp
sub
mul
(bad)
cmp
mov
pop
call
sbb
sbb
jbe
jbe
paddq
jp
add
mov
rcr
xor
push
pop
mov
test
repnz
outs
sub
stos
or
sub
fbstp
push
fmul
mov
sbb
fs
inc
stos
and
ror
mov
lahf
xchg
xchg
sar
adc
stc
mov
into
arpl
sub
dec
rol
es
xor
xchg
inc
sub
retf
xor
ja
xchg
cmp
arpl
pop
xchg
fstp
push
pop
mov
mov
cmp
mov
neg
dec
and
sbb
repz
dec
pop
xchg
test
push
cmp
int
mov
cmp
mov
out
cs
(bad)
lods
imul
das
cmp
aaa
movs
mov
sub
mov
js
icebp
mov
add
mov
dec
(bad)
jns
imul
mov
pop
aam
rcl
mov
fs
xchg
push
test
(bad)
mov
mov
shl
inc
push
cs
aas
jmp
sahf
mov
cmp
sbb
inc
icebp
dec
xchg
setb
mov
iret
ja
jbe
pop
push
adc
sahf
pop
adc
and
mov
sub
xchg
inc
jmp
mov
sbb
shl
outs
in
push
(bad)
jmp
bound
enter
inc
xchg
stc
lock
mov
cwde
arpl
mov
int
aad
into
aad
push
outs
jmp
xor
or
mov
xor
enter
mov
jmp
mov
rol
shr
out
ror
pop
cmp
test
cli
out
and
out
add
movs
lock
and
lods
rol
int3
test
mov
movs
fdiv
mov
cmc
xor
inc
daa
jge
bound
test
inc
repz
call
mov
pop
ds
and
xor
mov
mov
mov
out
pop
cli
retf
ins
movs
xor
mov
cli
fs
dec
cmp
xchg
(bad)
int
lds
mov
ss
pop
or
jecxz
data16
push
ds
out
es
fcom
pop
ins
cmps
cli
rol
and
pushw
stos
repz
adc
jl
add
or
mov
leave
loopne
push
outs
jg
cmp
push
sti
adc
ss
cmp
out
call
or
arpl
(bad)
jno
push
ror
or
sbb
dec
test
aad
xchg
add
loope
outs
sub
cmp
adc
(bad)
shl
popf
xor
rcl
cmp
mov
aam
mov
push
adc
pop
inc
fsubr
shl
mov
and
loope
push
daa
js
cdq
xlat
das
in
mov
xlat
jp
mov
sub
push
icebp
or
mov
fwait
mov
xor
mov
shl
ins
je
in
xchg
xlat
inc
in
pop
cmps
sbb
das
ss
sbb
pop
int
push
push
aaa
repnz
int
mov
adc
or
test
jge
mov
lods
data16
std
xchg
jb
mov
fnstenv
cmp
lock
xchg
pop
mov
icebp
hlt
movs
in
push
mov
cmp
pop
fwait
cmc
mov
into
imul
sub
iret
scas
or
xchg
push
scas
inc
(bad)
push
cld
and
jg
pop
push
mov
das
call
jmp
daa
xor
lods
sub
rol
cwde
out
jp
inc
icebp
push
dec
into
cmp
xchg
(bad)
mov
daa
ins
jp
ins
dec
mov
lea
scas
cs
imul
test
mov
inc
jo
sub
inc
(bad)
sbb
xlat
lods
fimul
mov
mov
fild
and
push
cs
mov
xor
cmps
xchg
cmp
xor
push
sbb
pop
(bad)
es
sti
cmc
cli
lock
sbb
pop
cwde
add
rcl
lds
test
ins
ins
js
sub
cld
scas
leave
ins
retf
adc
rcl
sbb
push
cdq
cmps
je
mov
push
push
jns
adc
loope
sbb
xor
js
rol
dec
(bad)
and
jno
xor
sbb
xchg
out
pop
fadd
idiv
(bad)
lods
leave
inc
aam
inc
shl
fcomp
jns
xchg
dec
jmp
popf
jmp
arpl
pop
mov
out
pop
inc
movs
aas
test
jle
retf
jo
mov
retf
call
xor
sbb
lds
push
adc
adc
nop
movs
or
nop
xchg
add
jmp
imul
xchg
inc
push
repz
cmps
fsub
cmp
sub
xchg
jecxz
xor
into
sub
dec
cs
ret
fsub
xor
xor
cmps
adc
mov
shr
adc
test
jae
cmp
rcr
add
imul
mov
aad
cmp
mul
push
pusha
cmp
add
or
in
mov
retf
arpl
stos
dec
or
or
dec
and
inc
inc
out
mov
xor
outs
xchg
ja
jns
jmp
cld
fs
out
jp
stos
and
call
ds
xor
and
fmul
or
mov
dec
xor
mov
pop
(bad)
cmp
mov
imul
xor
xor
scas
fist
jge
push
ss
add
(bad)
mov
pop
rcr
in
cmp
lahf
icebp
cmc
lock
je
or
retf
xchg
xor
inc
dec
je
adc
mov
pop
or
push
inc
push
dec
jne
mov
into
(bad)
jnp
add
xor
push
call
pop
arpl
popf
sbb
int3
ffree
inc
sbb
mov
addr16
movs
xchg
nop
pop
push
ja
push
loope
pop
sub
sar
and
adc
jb
call
dec
jmp
sub
sbb
mov
(bad)
xor
jge
xchg
(bad)
data16
jns
fscale
or
xchg
loope
not
inc
or
and
push
cmps
mov
out
sbb
cmp
retf
mov
hlt
(bad)
popa
out
pop
push
pop
dec
jae
mov
adc
ins
and
xchg
mov
push
aaa
enter
xor
sbb
pusha
stos
ja
daa
jbe
addr16
cs
jns
mov
fnsave
arpl
add
add
sti
sub
mov
pop
push
loop
mov
rcr
pop
cmp
inc
inc
arpl
bound
movs
jbe
xchg
xchg
jno
fs
mov
jl
cmp
sub
mov
enter
(bad)
push
icebp
and
mov
adc
xchg
jg
push
inc
xor
test
jge
cmp
push
retf
mov
ror
ret
pop
xlat
sub
popa
xchg
mov
and
adc
ror
inc
inc
(bad)
rcl
dec
mov
mov
loop
popa
mov
add
cmps
mov
push
mov
repnz
mov
mov
mov
lea
pop
sbb
mov
out
cdq
clc
mov
shr
cmp
sahf
adc
outs
mov
inc
cmp
push
es
pop
xlat
(bad)
fiadd
je
adc
hlt
cmp
xchg
lds
sbb
or
dec
pop
adc
js
jbe
cmp
xchg
stos
jns
sbb
cmp
in
or
loope
cmp
and
cmp
nop
imul
test
repz
pop
rcl
pop
push
gs
or
pop
mov
retf
adc
adc
mov
cmps
jg
jo
push
mov
jne
jp
into
dec
jmp
push
jno
push
xor
jno
out
clc
sbb
xchg
and
xor
jecxz
addr16
mov
push
not
inc
retf
pushf
inc
ror
cmp
call
stos
xchg
shl
sbb
jnp
mov
cmp
sub
mov
push
imul
mov
mov
data16
pop
test
les
clc
ficom
dec
xchg
pushf
mov
enter
(bad)
adc
xchg
jae
cdq
jmp
and
in
or
adc
outs
jo
pop
jnp
stos
arpl
jbe
js
inc
out
dec
out
dec
xor
aas
icebp
jp
mov
aaa
jecxz
sahf
retf
mov
rcl
ds
jb
sub
xchg
retf
adc
call
(bad)
mov
dec
sbb
out
mov
lgs
jecxz
sub
mov
in
cmps
dec
cmp
in
loope
ret
mov
fisubr
dec
dec
mov
imul
sub
sub
jb
mov
pop
stos
ja
inc
mov
leave
sti
sub
sub
mov
xor
and
sbb
hlt
outs
ins
out
fs
mul
push
sub
add
ja
int
pushf
icebp
retf
add
fs
mov
and
nop
xor
out
mov
mov
enter
not
test
enter
(bad)
xor
jmp
js
push
push
push
mov
jno
push
sub
sbb
test
aas
ja
addr16
popa
and
cmc
inc
adc
ins
gs
(bad)
rcl
push
out
push
ret
inc
adc
jb
loop
clc
xor
mov
int3
jns
pop
adc
mov
int
sbb
pop
int3
mov
pop
lock
and
adc
ret
and
pop
out
pop
push
aad
sbb
xor
jno
xchg
loopne
mov
dec
dec
adc
(bad)
xchg
mov
out
mov
jb
mov
in
cmps
int3
jo
push
cs
fidivr
mov
(bad)
call
xchg
call
pop
fdivr
mov
scas
and
fwait
cwde
rol
lea
dec
test
sbb
dec
not
jl
js
div
sti
pmaxsw
inc
ror
jp
mov
add
loope
push
mov
jne
push
push
(bad)
loopne
aam
pop
inc
mov
xor
js
stos
xchg
push
mov
addr16
mov
sbb
xchg
mov
in
push
mov
(bad)
fistp
cmp
lods
jnp
outs
aaa
xor
(bad)
icebp
mov
mov
and
fst
mov
adc
push
xor
mov
xchg
repnz
lods
push
inc
retf
mov
shr
ds
aas
dec
jb
popa
push
jne
lock
das
mov
xchg
das
data16
aad
add
add
sub
ror
jl
bound
out
jg
div
fimul
imul
(bad)
std
xchg
ret
jnp
push
adc
adc
add
xor
ins
cmps
mov
xor
push
mov
jb
rcr
sahf
outs
dec
test
mov
mov
int3
(bad)
push
pop
aam
adc
adc
sahf
mov
pop
inc
stos
jb
sub
or
mov
push
pop
cmp
jae
jg
leave
clc
daa
mov
adc
xchg
loop
sub
pop
push
fwait
mov
adc
lds
les
mov
push
jmp
and
aam
push
mov
mov
mov
cmp
loop
jecxz
test
popa
leave
and
stos
or
dec
jle
sbb
mov
jp
sub
fist
aad
lds
and
aam
rcl
aaa
push
mov
ds
xor
push
in
inc
lock
inc
mov
das
push
idiv
dec
jo
push
jns
sbb
xchg
pushf
jo
xchg
ja
sbb
out
or
dec
adc
iret
pop
dec
dec
inc
ja
mov
pop
inc
pop
and
aam
inc
push
pop
cld
xchg
scas
jecxz
jns
adc
inc
shl
popf
xor
xchg
add
aam
enter
mov
sub
push
mov
and
loope
dec
jns
(bad)
push
out
stc
dec
or
adc
mov
sub
adc
xor
sub
outs
int
mov
aam
dec
or
lea
in
sbb
out
pop
pop
pop
(bad)
addr16
out
xchg
enter
(bad)
(bad)
shl
mov
movs
in
sub
mov
pop
inc
inc
mov
sub
les
cmp
xor
popa
add
and
fwait
test
adc
add
sbb
mov
adc
mov
sahf
pop
inc
nop
leave
lods
in
ror
es
adc
pusha
xchg
test
and
inc
mov
pop
mov
adc
jge
or
mov
xchg
in
jg
push
cmp
mov
movs
std
pop
call
pop
or
retf
or
bound
mov
loope
and
(bad)
(bad)
cmp
mov
jl
mov
lods
or
xor
(bad)
pop
push
dec
mov
aas
jbe
sbb
movs
dec
pop
in
mov
cmps
jne
dec
mov
mov
or
ret
jg
cmp
not
pop
cmp
xchg
clc
fstp
aad
add
les
js
loopne
dec
mov
dec
sbb
test
shl
mov
mov
cld
into
lods
mov
in
adc
or
cwde
ret
xor
inc
je
and
ds
sar
popf
stc
scas
or
in
lds
xchg
xor
xor
jge
mov
jmp
in
ds
sub
adc
cmp
add
ins
xchg
fwait
outs
enter
lods
or
xlat
enter
push
pop
jne
call
bound
jbe
xchg
aam
not
repz
out
mov
jno
inc
loop
(bad)
out
movs
imul
stc
movs
(bad)
outs
out
es
xchg
pop
cmp
sub
mov
and
imul
push
dec
dec
aam
ds
mov
gs
or
addr16
stc
sub
data16
fnstenv
mov
(bad)
pop
lahf
sub
ds
std
jecxz
in
add
arpl
lods
je
stos
xor
adc
mov
ss
mov
sub
aas
xchg
sub
mov
std
xchg
jg
sbb
jl
inc
(bad)
enter
xchg
lea
pop
mov
(bad)
sbb
dec
jecxz
jg
les
repnz
adc
out
clc
jne
cmp
pop
aaa
add
shl
(bad)
aam
jae
and
mov
out
mov
mov
out
push
push
shl
popa
into
loopne
or
or
std
fld
lock
fstp
imul
test
cwde
mov
push
pop
fidiv
out
jmp
ret
push
sub
xor
push
inc
dec
push
push
or
xchg
xor
mov
add
cdq
mov
test
cld
pop
mov
in
movs
sub
mov
test
les
icebp
mov
pop
dec
retf
mov
pop
retf
nop
dec
sub
sbb
push
retf
push
adc
cwde
test
call
je
imul
cdq
scas
dec
add
cwde
xor
adc
and
sub
mov
gs
(bad)
out
rcr
pop
mov
jae
js
xor
xchg
push
or
jb
cmp
and
in
fs
sbb
(bad)
cmp
inc
popf
shl
push
and
push
push
cmps
mov
sub
popf
pop
in
pop
jle
push
xor
mov
out
mov
pop
sub
repz
(bad)
jl
in
je
inc
xor
mov
xor
mov
je
push
push
pop
xchg
add
inc
cld
mov
jecxz
retf
stos
cmp
dec
test
or
mov
xor
jnp
mov
repnz
cld
dec
int3
movs
pop
sbb
fnsave
adc
jne
adc
add
mov
hlt
ror
jb
push
aaa
jae
aaa
mov
imul
out
sar
test
push
xor
(bad)
push
in
enter
lods
mov
jno
mov
test
xor
jae
inc
cmps
jb
pop
push
ficomp
movs
jne
cmc
inc
ins
fdiv
or
das
fucomip
lahf
outs
mov
(bad)
lods
mov
push
adc
imul
call
jg
and
mov
sub
xchg
or
scas
xchg
mov
mov
inc
and
inc
fucomi
jmp
lock
(bad)
out
repz
xchg
cmps
dec
stos
or
cld
or
lods
stos
and
mov
mov
in
lods
xor
imul
in
stos
movs
retf
not
fwait
ins
scas
jae
out
(bad)
xor
push
out
(bad)
test
dec
sar
mov
call
mov
sbb
push
sub
jb
(bad)
test
fild
or
xchg
cs
into
adc
pop
xor
pop
dec
lods
lds
pop
repz
fnstcw
add
in
scas
ret
fidiv
out
fsub
mov
sbb
jge
add
(bad)
pop
hlt
mov
test
add
popa
cmc
aaa
sub
aad
dec
cmp
stos
or
pop
mov
xor
mov
fs
cwde
.byte
