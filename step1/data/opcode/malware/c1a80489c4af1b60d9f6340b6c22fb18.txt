xor
inc
call
adc
call
jb
ret
push
push
add
pusha
push
add
add
add
add
inc
add
inc
add
inc
add
adc
or
push
je
imul
xchg
sbb
mov
adc
cmp
cmp
xor
xor
xchg
and
and
sbb
sbb
push
sbb
mov
and
xchg
or
or
add
or
cld
nop
xor
sbb
cmps
sbb
or
pop
xchg
ins
retf
lock
in
cmp
or
pop
add
mov
adc
mov
and
add
movzx
mov
cmp
pop
jmp
sub
cdq
xor
dec
or
mov
and
xchg
ror
int3
in
xor
mov
cmp
jne
sbb
push
fsubr
call
enter
or
xor
pop
retf
int3
inc
mov
xchg
or
mov
add
ror
mov
in
add
cli
fs
out
iret
adc
push
pop
nop
in
mov
hlt
pop
je
repnz
call
cwde
dec
mov
sbb
push
add
or
adc
cdq
bound
inc
test
add
mov
push
retf
xchg
dec
mov
nop
push
push
push
mov
cld
adc
jmp
loop
push
xlat
jge
popa
cmp
push
or
int
in
jne
adc
adc
mov
lea
mov
inc
add
adc
and
or
pop
inc
fistp
jmp
aas
loop
or
call
lahf
add
push
mov
inc
pop
clc
mov
cdq
cmp
lock
inc
into
add
jne
popa
imul
ja
(bad)
and
sbb
arpl
movs
cmp
cmp
and
cmp
jmp
pop
mov
add
iret
cmps
das
cmp
sub
or
fisubr
in
jl
jmp
fs
or
adc
sar
xchg
ror
mov
cmp
int3
sbb
xchg
mov
sbb
cmp
jge
mov
(bad)
ins
fst
out
pusha
adc
and
sbb
sar
mov
je
loopne
mov
call
dec
adc
call
cmc
pop
fs
and
fnstenv
xchg
push
mov
call
pop
jns
xchg
dec
inc
or
mov
(bad)
call
in
hlt
dec
test
dec
in
and
dec
data16
push
dec
or
push
out
add
iret
sub
push
dec
or
push
and
jae
xchg
out
ja
repnz
dec
add
fidiv
push
sbb
jbe
imul
jne
adc
out
cld
xor
mov
add
rol
cmp
jmp
pusha
add
adc
sub
psubsw
or
adc
sbb
adc
sub
mov
jmp
add
cs
daa
and
psllw
dec
cmp
sub
inc
jmp
cmp
add
pusha
xchg
jbe
clc
fucomp
mov
dec
or
pop
mov
push
sub
push
push
call
cmps
fs
les
xor
xor
les
and
add
xor
and
add
clc
sub
inc
sub
and
outs
mov
or
add
inc
add
add
push
gs
inc
cmp
mov
sub
aas
xchg
data16
aam
xor
cld
or
and
call
ja
jg
pop
inc
dec
frstor
sti
dec
xor
leave
nop
stos
(bad)
call
aas
and
mov
cmp
movs
lods
and
push
call
ret
adc
cli
adc
xchg
in
add
xor
push
cmc
add
mov
lea
jno
adc
xchg
push
call
mov
xor
aaa
or
push
aas
or
jne
mov
or
and
lods
jmp
mov
nop
xor
push
adc
jne
icebp
(bad)
or
jmp
adc
sbb
jne
inc
dec
mov
jnp
jno
sbb
adc
push
inc
adc
dec
pop
dec
imul
and
lea
xor
inc
or
fidiv
pop
mov
ror
adc
stos
jecxz
jl
adc
je
mov
ret
data16
cmp
mov
(bad)
movs
adc
imul
adc
and
xchg
and
push
mov
pushf
cmp
cmp
xor
sub
cmp
push
cmp
or
adc
sub
popa
mov
or
adc
clc
bswap
int3
fdiv
add
cmp
mov
adc
pop
rol
bnd
jp
ror
mov
lods
and
pop
mov
add
xchg
xchg
scas
push
mov
and
jmp
mov
sbb
out
xchg
test
aad
shl
xchg
dec
inc
fldenv
daa
push
push
call
sbb
jne
sbb
ds
mov
xchg
add
mov
push
jg
adc
jne
fs
pop
add
jle
imul
fisub
sbb
or
adc
in
pop
inc
fistp
loopne
cmp
or
adc
dec
or
jg
loopne
pop
add
rcr
call
jmp
pop
dec
fisub
sbb
sub
hlt
mov
out
sbb
lea
mov
shl
fisttp
movhps
sbb
fadd
xchg
(bad)
jmp
sbb
mov
push
jl
mov
mov
call
mov
ret
inc
or
or
pusha
pushf
or
lods
jg
pop
add
sbb
cs
outs
or
push
jmp
test
inc
add
ret
(bad)
bound
sbb
xor
sub
add
add
fiadd
enter
test
jmp
test
cli
and
or
(bad)
cmp
pop
push
push
mov
mov
popa
add
test
fs
fdiv
add
add
and
pusha
fsub
add
in
repz
in
or
push
and
dec
(bad)
addr16
or
dec
xchg
adc
popa
mov
retf
dec
retf
mov
push
(bad)
jg
aad
pushf
jl
cli
(bad)
jmp
add
je
dec
sti
or
adc
aad
in
and
fbld
pop
ins
and
aad
sub
(bad)
arpl
dec
lods
std
sub
or
lea
shr
popf
(bad)
xor
mov
add
xchg
cld
pop
ret
adc
or
dec
sbb
repnz
inc
push
add
sub
dec
inc
sbb
aaa
mov
test
dec
nop
ret
fs
add
hlt
imul
pop
pop
inc
pop
rcr
gs
adc
mov
pop
out
stc
sub
jg
adc
push
jmp
or
sbb
mov
jle
dec
or
sub
fwait
pop
adc
sub
cwde
shl
adc
pop
inc
xor
std
(bad)
push
lea
and
cld
cld
call
or
xlat
xor
adc
pop
and
loopne
cmp
nop
xor
inc
data16
add
jne
and
and
adc
push
pop
call
mov
adc
pop
and
mov
mov
outs
sti
mov
and
and
adc
shl
sahf
aam
icebp
cmp
dec
or
adc
pop
pop
fs
(bad)
ins
pop
int3
dec
lea
mov
mov
or
call
clc
add
sub
push
add
shl
sub
jmp
mov
add
enter
(bad)
jle
pop
adc
sub
(bad)
xor
call
sub
je
fbld
es
mov
jne
retf
call
jp
(bad)
dec
movs
sub
and
jge
movs
(bad)
adc
cmp
add
icebp
dec
xor
repz
into
xor
cmc
xchg
add
test
adc
inc
push
rol
(bad)
xchg
call
jmp
adc
mov
jne
and
xchg
pop
xor
xchg
pop
mov
push
push
xor
dec
pusha
das
jne
call
adc
or
jg
or
jne
call
dec
and
xor
and
and
add
data16
inc
fiadd
xchg
cvtps2pi
mov
and
mov
dec
scas
inc
nop
pop
adc
jne
sub
or
jl
xor
inc
mov
(bad)
push
or
dec
or
imul
sub
adc
jb
jmp
sbb
mov
adc
sbb
sub
adc
add
xor
call
loope
pop
xor
mov
sub
mov
std
lock
repz
adc
push
pop
xor
pop
ins
cli
xor
push
xchg
sbb
in
data16
and
cmc
mov
popa
cdq
loop
and
call
mov
jne
cmovae
or
jmp
sub
mov
inc
les
shl
push
add
mov
popf
dec
push
or
stos
mul
call
or
mov
or
inc
nop/reserved
sahf
dec
add
sub
cwde
clc
or
movs
loop
clc
cmp
sub
jno
les
xor
fbld
xchg
inc
test
add
and
cli
add
push
or
aaa
sbb
sub
(bad)
or
or
and
adc
inc
mov
dec
enter
xor
daa
inc
cli
mov
and
and
out
test
dec
pmulhw
rcl
or
out
(bad)
and
in
pcmpgtb
lds
(bad)
nop
enter
stc
sub
or
fwait
sub
add
stc
sbb
jne
mov
pop
mov
add
iret
mov
or
or
sub
xor
or
test
jp
mov
(bad)
sahf
aas
call
add
(bad)
pop
adc
into
ds
or
(bad)
jl
js
bound
dec
addr16
inc
fsub
jl
push
push
in
push
sbb
sbb
xor
dec
add
aam
jo
and
mov
cmps
stc
mov
or
xchg
xchg
fbstp
ret
jge
gs
cmp
lds
push
(bad)
scas
(bad)
loopne
or
sub
pop
retf
mov
xor
push
dec
dec
(bad)
and
outs
clc
add
cmp
xor
and
loope
icebp
cs
or
fsubr
iret
stc
out
push
or
dec
or
sbb
cdq
add
rcl
jmp
or
push
or
xchg
cwde
dec
cdq
inc
and
sbb
add
fild
test
std
or
add
pop
cld
jmp
sar
sub
dec
ret
gs
test
jge
cmp
inc
add
xchg
call
inc
repz
add
mov
in
or
pop
test
jle
jmp
xor
push
and
les
add
call
je
xor
enter
jo
inc
or
add
xchg
push
cmp
pop
or
hlt
add
les
push
mov
enter
xor
sub
out
pop
adc
rol
xor
out
nop
mov
add
and
push
adc
xor
test
gs
sub
or
inc
mov
jp
add
jo
jne
ret
in
push
pop
call
lods
and
jg
(bad)
jmp
push
sbb
xchg
ja
mov
pop
jne
clc
xor
jmp
cwde
jmp
mov
sar
out
nop
jge
push
pop
jne
imul
sub
in
nop
paddd
in
mov
ja
je
pusha
jns
sub
rep
clc
sbb
movs
sbb
je
je
cmp
sbb
push
std
sbb
pushw
mov
div
jmp
aam
(bad)
out
adc
add
add
cli
jbe
out
cmp
push
mov
add
out
in
cmp
push
xor
int3
push
adc
test
shr
rol
xor
mov
cmp
jb
ret
les
aad
call
fild
push
xor
push
call
cmp
jbe
add
inc
inc
mov
ja
popa
in
and
add
sbb
sub
add
adc
dec
(bad)
je
cmp
push
push
xchg
aam
pop
or
enter
sbb
push
in
jmp
adc
into
ins
push
push
ret
jmp
jmp
pusha
loopne
push
call
xchg
or
or
ins
pop
int
dec
sub
or
inc
push
adc
adc
xchg
lods
mov
std
sbb
test
sub
push
inc
xor
cmp
hlt
push
fist
pop
or
xor
push
je
mov
mov
push
mov
mov
inc
ja
cmp
push
pop
add
je
sub
out
dec
sete
aas
push
into
mov
jb
call
aas
inc
jno
adc
stos
or
or
adc
sar
xlat
mov
cmp
dec
mov
push
cs
jb
aaa
mov
outs
add
inc
sbb
daa
fmul
jmp
add
sahf
sub
test
and
sub
and
test
adc
mov
aam
div
sqrtps
push
push
lea
inc
dec
shl
out
dec
call
cmp
icebp
test
mov
aaa
push
push
ss
inc
out
sub
add
sub
loop
popa
mov
inc
and
out
pop
dec
movs
test
outs
cmp
shl
cmp
inc
jmp
xor
sub
inc
dec
loope
or
retf
dec
add
jmp
lea
cs
mov
test
push
adc
adc
xchg
push
mov
rol
hlt
repz
cmc
cld
adc
rol
je
arpl
mov
dec
pop
mov
adc
add
or
mov
es
xor
dec
or
stos
fnstsw
leave
mov
pusha
or
push
aam
and
mov
xor
push
and
mov
and
sbb
(bad)
adc
dec
pop
push
mov
movs
xor
inc
add
jp
mov
cmp
out
inc
adc
mov
add
rcl
xchg
hlt
cld
enter
out
rol
xchg
call
imul
inc
lods
ret
or
pushf
or
xchg
push
adc
aaa
or
cmps
push
f2xm1
(bad)
sbb
mov
push
or
fst
xor
and
adc
aam
xchg
fwait
test
push
sub
mov
shr
cmp
inc
les
mov
cmp
or
ds
loop
inc
fwait
gs
jne
xchg
jmp
push
sbb
es
and
adc
pop
fucomi
or
cmp
lahf
add
push
pop
push
mov
mov
inc
enter
pop
mov
push
adc
pusha
xor
imul
mov
(bad)
mul
or
mov
gs
call
or
pop
mov
mov
iret
xor
test
pop
mov
adc
xchg
scas
push
cmp
adc
dec
xchg
adc
and
sub
rcr
jnp
je
mov
or
test
or
sbb
mov
je
(bad)
call
sub
pop
or
ror
enter
jecxz
je
mov
xor
xor
mov
cmp
lock
in
mov
fidivr
or
xchg
sbb
stos
pop
test
mov
xor
pop
ds
mov
and
adc
adc
inc
mov
mov
mov
add
mov
inc
xor
jge
mov
or
adc
cmp
mov
pop
pop
push
dec
mov
inc
sbb
mov
inc
dec
add
sbb
jle
mov
pusha
sub
(bad)
(bad)
push
xchg
dec
ins
ret
jo
(bad)
mov
add
inc
cmp
je
mov
lahf
mov
or
and
and
js
pop
jg
inc
push
xor
jne
sub
and
inc
inc
test
in
jmp
add
sub
or
ja
cmp
and
add
add
leave
fdiv
(bad)
sbb
je
aam
push
jbe
dec
push
test
dec
pop
sub
cld
inc
aaa
inc
inc
jb
mov
sub
sbb
add
or
adc
add
or
add
(bad)
aad
sbb
call
pop
adc
inc
dec
or
(bad)
out
test
scas
pop
pop
jne
pop
add
loop
and
cmp
pop
in
les
add
pop
nop
xchg
adc
rol
mov
mov
stos
push
aaa
in
and
mov
dec
jge
add
sub
mov
mov
mov
or
movs
movs
jg
sub
sub
push
addr16
ss
cs
(bad)
clc
loope
sub
add
out
mov
ror
or
clc
cmps
cmps
pop
aas
ud2
ret
adc
ret
adc
add
push
inc
pop
inc
outs
pop
jb
popa
outs
add
push
push
dec
add
push
dec
popa
jae
je
push
ins
jne
nop
imul
sub
(bad)
pop
mov
fisttp
call
cld
xor
sbb
shl
mov
in
push
or
adc
movs
sbb
movhps
scas
cmps
hlt
mov
push
jmp
push
and
sub
sbb
pusha
pop
pop
push
push
mov
push
shr
add
mov
jmp
mov
pop
adc
es
xor
imul
loope
pop
loop
adc
gs
mov
sbb
adc
pop
enter
pushf
in
dec
sub
test
pop
or
pusha
dec
sbb
dec
add
outs
cld
call
pop
shl
je
arpl
mov
lock
out
push
je
call
sbb
xor
and
icebp
push
mov
popa
cmp
pop
js
and
or
mov
sub
or
and
adc
cmp
jo
dec
add
mov
mov
xor
mov
sub
retf
xor
mov
push
add
call
retf
and
fsub
or
pop
add
inc
cdq
and
and
ret
push
add
jecxz
jmp
pop
and
mov
jmp
mov
xlat
dec
or
(bad)
je
(bad)
dec
call
test
xchg
mov
rcr
push
test
lods
push
push
test
mov
pop
or
outs
add
and
es
je
push
or
outs
imul
jb
xor
sbb
pop
lds
mov
sub
fist
xor
adc
dec
dec
dec
xchg
or
enter
xor
test
movs
sub
mov
int
xlat
cmps
xor
add
sub
jns
push
mov
adc
add
jmp
cmp
pusha
add
sub
aas
jb
aas
xor
push
cmp
cmp
cwde
inc
adc
and
jg
push
std
comiss
push
cmp
mov
mov
scas
bswap
(bad)
and
sbb
xlat
clc
push
clc
into
clc
adc
js
jl
fidivr
fld1
jl
retf
test
xchg
mov
daa
call
sahf
and
ror
std
ins
fadd
sbb
je
sub
test
xor
cmp
inc
adc
je
cmp
cli
xchg
mov
mov
aad
out
sbb
inc
cld
mov
add
mov
stos
sub
in
mov
adc
add
or
inc
pop
xchg
into
or
sub
and
xor
jo
mov
and
mov
sbb
adc
enter
xor
cmp
je
cmp
add
and
add
(bad)
outs
inc
or
dec
stos
dec
pop
adc
in
out
jmp
add
mov
add
push
call
ss
sub
sub
bound
xchg
and
push
dec
ss
mov
inc
mov
stc
xor
or
js
mov
push
cmp
dec
jle
(bad)
fild
sbb
lds
jg
sub
int
sti
push
test
and
mov
adc
sub
dec
add
fcmovnb
cs
cmp
in
and
pop
les
int3
aas
mov
js
loope
adc
ret
mov
jo
ret
ror
sub
fmul
and
add
rol
and
mov
loope
adc
add
inc
shl
jl
stos
sub
fcomp
cmp
mov
fild
push
sbb
dec
aaa
mov
movs
pop
leave
int3
adc
push
cmp
xor
imul
add
or
sbb
or
push
push
mov
in
or
push
ror
popa
and
mov
inc
adc
stos
push
imul
mov
ret
xor
jbe
cmp
mov
rol
call
adc
jne
mov
sub
dec
bound
mov
jne
or
test
xchg
xchg
pop
push
xchg
ror
add
pop
pop
bound
dec
repnz
or
inc
(bad)
cmp
sub
test
xor
jne
mov
or
int
out
sbb
repnz
inc
or
push
or
push
jo
dec
sti
(bad)
test
mov
mov
and
inc
xchg
mov
jo
mov
dec
jl
lock
push
lea
call
pop
mov
mov
enter
adc
mov
or
and
jae
fcmovbe
nop
int3
push
and
inc
or
push
push
fsubr
pop
enter
fadd
neg
jmp
mov
outs
xchg
xchg
and
sub
push
add
pop
mov
sub
bound
clc
sub
adc
mov
push
(bad)
aad
stc
std
(bad)
jl
aaa
or
mov
jecxz
cmp
mov
mov
sub
xor
mov
stos
pop
mov
lahf
or
ror
and
jo
add
jmp
inc
rol
rcr
int3
jmp
pusha
mov
or
xchg
push
push
mov
test
pop
scas
add
rcr
ror
jmp
enter
js
leave
mov
repnz
stos
xchg
ret
add
cmp
cmp
call
mov
adc
mov
xchg
jecxz
mov
and
inc
movs
mov
adc
pop
call
out
call
jmp
shl
into
xchg
add
cld
add
gs
(bad)
fdiv
mov
gs
adc
mov
push
push
imul
dec
and
int
dec
jno
adc
jmp
dec
out
xor
xor
dec
xchg
pusha
adc
je
cmp
nop
lahf
mov
dec
dec
jmp
retf
or
mov
cmp
sti
xor
stos
in
xor
pop
call
int3
(bad)
xchg
mov
jb
pop
dec
jmp
fld
mov
mov
push
pop
dec
add
into
call
dec
jne
inc
(bad)
js
or
out
xor
call
xchg
or
and
jb
test
add
(bad)
fld
sub
jmp
ja
add
push
push
inc
pcmpeqb
out
push
inc
pop
cmp
jne
jnp
push
adc
xor
dec
add
or
mov
push
push
add
fistp
enter
sub
cmp
pop
(bad)
fnstsw
xchg
adc
in
loope
push
add
add
jmp
scas
popa
in
sbb
add
adc
pop
or
ja
out
(bad)
sbb
inc
aam
push
clc
inc
jle
fiadd
add
mov
mov
adc
daa
call
inc
adc
xchg
sti
ret
adc
push
cmp
adc
add
or
mov
mov
sbb
cld
push
pop
es
jl
cmp
jge
and
ror
push
jg
add
cld
por
mov
jecxz
dec
adc
ret
lds
pop
call
sub
push
jle
and
icebp
sar
aaa
add
stc
add
lea
adc
jmp
dec
dec
and
add
mov
bound
xor
mov
icebp
xor
dec
add
inc
sub
adc
mov
cmp
repz
dec
pusha
aas
inc
mov
dec
pop
cmp
dec
mov
cli
clc
nop
dec
xchg
cmp
call
and
sbb
ret
xor
loopne
adc
sub
idiv
cld
(bad)
loopne
jmp
nop
adc
call
push
xor
dec
cli
inc
or
icebp
jl
cmp
call
and
xchg
adc
or
rol
or
retf
add
aad
retf
mov
mov
movs
jge
sbb
rcl
cmp
add
movlps
arpl
cs
cld
imul
adc
cmp
cmp
cmp
cmp
cmp
ds
or
ds
sub
cwde
clc
adc
jnp
push
push
jmp
call
dec
mov
or
or
inc
adc
pop
jmp
push
rcl
push
or
add
popa
sub
mov
call
out
pop
xor
adc
and
(bad)
(bad)
cmc
inc
dec
push
lock
push
mov
xchg
lds
adc
je
call
stc
call
push
stc
cld
adc
loop
dec
loopne
xchg
and
pop
jbe
jno
mov
adc
push
pop
or
jg
call
and
cdq
or
dec
inc
push
or
outs
sub
addr16
pop
mov
mov
inc
sbb
sub
sub
add
ins
icebp
inc
inc
sbb
push
cmp
adc
inc
icebp
jmp
jb
pop
xor
adc
rcr
adc
out
mov
icebp
pop
pop
fs
or
adc
std
inc
or
pop
adc
or
mov
popa
ret
dec
add
hlt
adc
or
js
test
xchg
mov
mov
daa
pushf
loop
or
pop
push
jbe
or
cmp
cmp
inc
iret
outs
sub
inc
gs
add
and
adc
push
xor
cmp
test
stos
sub
push
adc
push
lods
iret
and
lods
dec
ds
into
adc
or
lds
add
and
inc
jmp
push
mov
inc
adc
cmp
test
push
jns
fild
inc
clc
dec
cld
ret
gs
mov
xor
lock
push
lea
(bad)
repnz
push
xchg
dec
rcl
mov
cmp
push
movups
imul
mov
sub
nop
and
call
dec
mov
pusha
pop
das
pop
mov
nop
push
out
test
xchg
add
and
jmp
add
dec
pop
or
rol
fcom
mov
or
ret
sub
lds
cmp
fnstenv
ss
das
imul
(bad)
cmc
repnz
or
cmp
mov
adc
or
call
mov
or
sub
and
cld
sub
out
sbb
clc
add
or
jp
(bad)
js
jmp
call
xchg
jns
adc
inc
adc
(bad)
pop
mov
aam
mov
cdq
or
je
aas
push
push
call
dec
or
fcmovne
or
cmp
pop
ret
mov
cmc
ret
out
(bad)
mov
pop
push
or
and
jmp
push
mov
lods
cmp
mov
adc
xchg
add
cwde
and
add
mov
and
(bad)
das
or
les
sub
push
mov
mov
mov
rol
aas
test
pop
movs
shl
xor
inc
push
xor
or
call
dec
add
sub
sub
xor
push
mov
test
dec
nop
push
mov
xchg
(bad)
cld
cdq
adc
dec
or
mov
cld
(bad)
repnz
push
push
or
mov
stos
inc
clc
out
mul
fst
lds
shl
in
jb
cmp
dec
or
mov
and
xchg
aam
shl
int3
jb
cmp
sbb
mov
mov
lods
enter
jb
cmp
mov
xchg
or
jl
sub
leave
call
mov
pusha
inc
xchg
inc
adc
les
xchg
popf
xor
inc
int
icebp
sbb
aam
jp
fs
or
stc
sar
add
add
nop
ror
int3
fcom
movs
xchg
dec
or
dec
in
ja
in
jb
cmp
xor
xchg
and
and
sbb
sbb
adc
adc
jae
push
mov
lock
xor
pop
mov
xlat
(bad)
jl
call
mov
push
lock
and
hlt
inc
clc
cld
stc
xor
pop
std
clc
fwait
inc
loopne
ins
clc
xchg
push
lock
ins
hlt
push
cmp
adc
pop
add
cs
push
lock
mov
movs
jp
aas
add
mov
mov
mov
push
bound
xor
popa
rcl
adc
and
jb
out
push
xor
cs
shl
jae
imul
xchg
popa
arpl
inc
js
sub
xchg
cmp
pusha
std
jae
jl
mov
mov
ror
inc
test
and
fcomp
mov
retf
pop
mov
cld
mov
push
sub
fadd
ror
jne
test
pop
push
sbb
sbb
in
mov
xchg
imul
xchg
test
or
adc
mov
bound
test
adc
jl
adc
js
or
jo
imul
and
nop
in
sahf
loop
pushf
mul
jecxz
or
enter
inc
test
or
xchg
(bad)
jmp
inc
mov
pop
or
push
inc
imul
nop
cmp
push
pop
or
xchg
push
inc
movs
jo
push
fld
aas
mov
add
push
sub
adc
pop
sar
and
mov
push
lahf
xchg
imul
pop
ret
inc
sub
pop
cmp
xchg
retf
mov
call
(bad)
aam
dec
sub
pop
inc
rol
dec
adc
mov
pop
lods
scas
jmp
and
sub
out
iret
(bad)
out
shr
dec
mov
cmc
aaa
xor
adc
inc
jb
mov
and
sbb
dec
sub
xchg
dec
sub
sbb
xchg
in
push
jns
mov
mov
sbb
outs
adc
loopne
inc
fs
cmp
add
and
inc
cmp
and
or
xor
mov
shl
sti
xor
pop
xchg
mov
cmp
push
(bad)
sbb
or
int3
lock
addr16
test
mov
adc
xchg
popa
pop
icebp
push
push
inc
fadd
xlat
mov
jbe
and
jle
dec
call
adc
inc
cmps
jmp
cmps
xlat
push
and
mov
stc
adc
pop
adc
stc
pop
push
lock
push
xchg
sbb
or
or
xchg
and
sub
scas
ja
or
ret
adc
mov
add
mov
mov
push
mov
adc
cmps
dec
jne
xor
pop
(bad)
mov
sbb
test
outs
pop
aam
clc
popaw
adc
mov
mov
pop
adc
(bad)
out
adc
gs
lock
cli
(bad)
mov
fwait
add
sti
or
call
mov
fidivr
iret
jnp
mov
in
dec
inc
les
call
nop
inc
int3
sub
cmp
jne
(bad)
cmp
idiv
or
and
mov
(bad)
jl
int3
movs
daa
ins
xchg
xor
mov
or
sahf
int3
adc
dec
fst
mov
movs
push
pop
jb
push
dec
repz
mov
retf
out
inc
push
div
add
and
in
xor
cmp
aam
mov
fst
sub
fsubr
call
in
and
lds
or
inc
add
sbb
inc
xor
mov
mov
inc
jle
bound
add
add
add
push
add
inc
dec
or
sub
push
daa
dec
or
cmp
mov
div
arpl
jl
cdq
mov
inc
jo
sar
in
adc
ss
pop
dec
inc
mov
nop
jmp
mov
movs
xor
sbb
fsub
mov
or
mov
sbb
and
jmp
sbb
in
fistp
or
fcom
add
adc
mov
cmps
mov
rcl
(bad)
mov
retf
test
pop
xor
clc
imul
daa
movs
jmp
loop
push
retf
xor
rol
cmp
dec
ds
dec
test
shr
add
push
(bad)
es
stos
mov
mov
pop
add
cwde
dec
fcmovne
pushf
mul
aam
or
mov
test
or
cmp
in
mov
sbb
adc
mov
jg
and
add
adc
pop
and
lock
dec
xor
dec
xchg
shl
sub
jecxz
jae
xor
pushf
loope
push
inc
dec
mov
sub
sbb
out
xchg
sahf
aas
fdivr
and
pushf
jle
mov
xchg
inc
clc
sbb
adc
jge
pusha
(bad)
mul
pop
dec
mov
repnz
mov
xchg
xor
jp
push
loopne
and
fmul
add
ror
call
movs
fbld
jne
add
js
gs
sub
and
cdq
and
je
cmp
(bad)
sub
les
pop
mov
inc
or
test
and
and
push
(bad)
adc
xchg
call
test
imul
or
mov
push
dec
shl
push
lea
push
jo
mov
int
xchg
jg
adc
push
mov
add
mov
div
adc
(bad)
mov
jne
sbb
mov
add
sub
fst
or
(bad)
pop
inc
cmps
dec
inc
add
pop
and
enter
shr
mov
cld
push
int3
sbb
pop
sbb
mov
mov
push
jmp
lahf
dec
xchg
cmp
movs
jmp
cs
repz
mov
jmp
mov
adc
jmp
ret
ss
arpl
jno
xchg
popf
cdq
fadd
pop
ror
ret
or
xor
(bad)
std
jg
adc
add
mov
xor
sub
cmp
rcr
bnd
das
mov
add
push
push
pop
je
jne
xor
xchg
jg
pop
sbb
into
mov
jl
mov
cmp
xlat
lahf
add
jno
mov
pop
clc
in
adc
add
inc
cmps
fild
jmp
ret
je
sub
or
jl
xchg
loop
adc
fimul
test
sbb
ficomp
jmp
jne
fisub
push
adc
js
inc
jp
lahf
cmp
or
test
fisttp
push
neg
pop
fs
and
in
inc
repnz
or
mov
and
(bad)
aam
inc
dec
add
call
outs
pop
repnz
and
rol
mov
in
mov
arpl
push
sbb
push
cli
push
cld
in
mov
sbb
out
(bad)
mov
aam
push
mov
add
pop
add
aas
bound
inc
hlt
shl
fwait
nop
mov
jle
bound
shl
rcl
arpl
(bad)
or
inc
add
popa
and
cwde
or
gs
jmp
cmp
in
mov
jb
iret
cs
xlat
test
sbb
mov
loop
nop
sub
ret
xor
mov
xor
jmp
cld
sbb
mov
lock
shl
sub
add
cmp
inc
jo
xchg
js
shr
popa
dec
inc
mov
pop
mov
hlt
mov
rol
add
ins
sbb
fucom
mov
mov
jg
sbb
nop
clc
leave
mov
test
push
mov
lods
sbb
or
xchg
and
mov
hlt
mov
bound
movs
in
(bad)
rol
push
adc
sti
or
add
mov
popf
bound
adc
pop
daa
lahf
neg
add
lea
cmp
mov
rcl
bound
mov
adc
mov
push
loopne
outs
nop
or
cwde
add
or
mov
iret
fld
je
and
and
into
adc
cmp
in
or
xor
inc
or
sub
ss
adc
adc
xchg
and
test
enter
xor
test
movs
pop
or
ror
call
daa
jb
icebp
imul
enter
aad
popa
adc
cdq
enter
push
js
xchg
ret
daa
add
dec
out
sub
mov
fdiv
fwait
sbb
sub
adc
out
mov
and
sbb
xchg
inc
ins
inc
cmp
sbb
out
movs
outs
sub
xchg
mov
xor
in
in
cmp
mov
(bad)
out
enter
pop
or
out
inc
mov
call
adc
adc
push
mov
mov
cmp
call
les
adc
test
popf
adc
loop
adc
std
cmp
sub
hlt
xchg
or
mov
mov
movs
out
cmp
or
cmc
movs
push
clc
sub
and
adc
push
loope
add
push
xor
test
into
sub
inc
mov
mov
add
dec
sub
dec
adc
mov
cmp
enter
xchg
rcr
out
(bad)
pop
arpl
sub
cmp
jne
jo
push
pop
jo
test
add
loopne
or
mov
jle
movs
push
inc
adc
dec
sbb
jo
and
into
loop
nop
jno
inc
inc
jne
jmp
div
sub
fs
xor
pop
jle
cmp
cmps
xor
mov
icebp
or
or
inc
sub
rcr
fyl2xp1
ins
cmc
(bad)
pushf
call
or
data16
sub
adc
pop
rol
push
movs
and
cmp
adc
pop
jae
popa
jb
cmp
xor
movs
daa
cld
dec
in
mov
mov
cmp
dec
jg
jmp
out
xor
mov
out
cmp
and
cmp
and
push
xor
jmp
loop
pop
sbb
fs
xor
test
or
nop
ins
enter
adc
in
sti
cmp
add
scas
jmp
inc
adc
push
mov
jnp
unpcklps
sar
jmp
lock
adc
add
jae
push
push
outs
cmp
(bad)
dec
jne
xchg
cmp
hlt
or
cmp
movs
mov
xor
and
jo
adc
adc
cld
sbb
adc
dec
or
push
add
fbld
or
test
fild
mov
mov
inc
loopne
dec
push
in
mov
div
push
(bad)
and
bswap
pop
lods
inc
dec
jmp
lods
push
push
jmp
inc
push
add
sar
mov
jge
push
fimul
push
es
hlt
xor
arpl
mov
ss
fiadd
test
mov
shl
in
out
pop
mov
mov
xchg
cmp
icebp
cmps
in
mov
test
xor
(bad)
fsub
inc
cmp
pop
nop
fmul
test
imul
fs
aas
loopne
xchg
pop
mov
push
push
out
push
repnz
rcr
test
xor
lods
inc
xor
push
inc
xor
mov
pop
daa
ins
push
ret
and
push
mov
mov
leave
pushf
mov
jmp
iret
mov
leave
or
mov
call
or
dec
inc
jl
xchg
sbb
clc
lahf
jp
popa
or
fist
push
mov
iret
or
sub
adc
sbb
add
mov
inc
jo
mov
sbb
mov
adc
lods
arpl
jmp
in
jecxz
sub
sahf
nop
sti
push
hlt
mov
cmp
add
jmp
mov
ret
pop
sub
xchg
dec
pusha
or
and
lods
add
and
jb
xchg
sbb
das
inc
push
cli
push
adc
jae
and
fst
pop
mov
inc
cld
push
fld
ja
dec
fist
dec
and
jmp
adc
adc
into
or
add
dec
outs
dec
cld
or
mov
xchg
test
aad
cld
cmps
push
mov
imul
inc
add
cmp
xor
mov
mov
nop
cld
mov
sbb
and
loope
sub
stc
push
pop
stos
pop
test
and
or
fst
dec
or
movs
inc
shl
mov
add
data16
popa
add
pop
ins
imul
hlt
outs
jp
jmp
shl
fidiv
into
je
popf
(bad)
push
imul
xchg
popa
je
and
jo
retf
jns
adc
cmp
inc
xor
push
inc
js
push
shl
adc
or
clc
fadd
cdq
sub
xor
iret
push
xchg
int3
mov
add
mov
out
jmp
lea
and
dec
jmp
addr16
and
and
jo
sub
mov
mov
adc
daa
mov
stc
pop
jb
dec
cmp
add
std
mov
je
cmp
adc
sbb
outs
inc
push
and
adc
je
xor
push
cld
push
mov
add
movs
mov
adc
pop
and
bound
jne
fwait
add
inc
inc
nop
enter
and
mov
das
test
stc
pop
adc
test
cwde
inc
enter
in
rcl
dec
stc
adc
sub
mov
rcr
and
inc
xor
hlt
cmp
adc
cld
inc
pop
sub
retf
xchg
add
sub
arpl
test
ret
pushw
dec
jae
dec
cmp
pop
xor
leave
push
push
add
and
pop
inc
popa
xchg
or
ret
and
jne
pop
xchg
sub
and
dec
cmc
dec
sub
jae
push
inc
call
push
mov
mov
sbb
shl
or
push
iret
and
fnstcw
aad
or
add
sbb
pop
ins
fimul
add
jmp
jne
pop
pop
push
popa
mov
mov
es
rcr
sub
inc
add
(bad)
dec
cmp
ror
mov
aad
jns
mov
test
iret
cmp
mov
(bad)
sub
inc
or
inc
aas
pushf
mov
add
and
dec
test
mov
adc
clc
inc
add
dec
add
push
add
and
jl
mov
aam
bound
pushf
xchg
and
xchg
mov
aad
xchg
loopne
inc
or
loope
pop
xor
and
and
nop
push
ror
enter
in
push
push
sbb
jl
outs
out
push
ja
inc
jae
push
outs
fldcw
nop
popa
fs
push
sbb
inc
and
push
mov
scas
cmp
sar
jbe
pop
retf
jg
inc
js
imul
push
dec
dec
push
in
and
xor
sbb
xor
call
ss
imul
push
aaa
je
aam
add
inc
add
cmp
sbb
mov
xor
bound
sub
ret
fcomp
sbb
push
shr
int3
enter
iret
add
into
fcmovnu
fcmovu
retf
fstp
fnstsw
loope
and
int3
add
add
inc
jb
outs
ds
push
jne
outs
je
ins
and
ds
je
xor
xor
xor
inc
inc
inc
or
add
pop
loop
dec
xchg
adc
dec
and
inc
rcl
add
mov
call
adc
sbb
adc
sub
dec
pusha
enter
dec
cmp
inc
in
std
inc
inc
add
xor
push
inc
push
inc
and
pop
std
int3
inc
fs
mov
add
scas
je
xchg
shl
push
or
xor
jl
mov
pop
adc
adc
cmps
push
and
mov
inc
xor
or
or
pusha
add
dec
push
add
mov
add
mov
sbb
adc
enter
sbb
dec
push
inc
js
sub
aaa
sub
or
gs
adc
inc
movs
enter
pop
inc
je
enter
nop
and
and
xor
les
dec
mov
and
shl
add
pusha
adc
add
inc
out
or
lods
movs
xchg
adc
xor
js
or
mov
sbb
jo
cwde
xchg
in
add
adc
pushf
and
adc
push
call
inc
adc
inc
pusha
xor
(bad)
nop
cmp
daa
fadd
add
jmp
icebp
mov
jp
add
xor
pusha
sub
hlt
ret
mov
or
sub
or
xchg
sub
or
xor
push
dec
movs
js
mov
push
nop
mov
or
push
add
and
or
sbb
sbb
sbb
sbb
add
and
push
inc
pop
jo
cmps
nop
inc
sub
sub
lock
mov
loop
clc
mov
add
inc
add
loope
sub
fmul
push
xor
dec
push
mov
iret
ucomiss
(bad)
ds
inc
iret
dec
iret
push
iret
pop
iret
iretw
outs
iret
jbe
jle
xchg
mov
xchg
iret
sahf
iret
cmps
iret
scas
iret
mov
mov
iret
(bad)
iret
fmulp
out
out
iret
test
xor
xchg
xor
dec
rcl
pop
repz
test
mov
hlt
repz
lock
xor
dec
cmp
fmul
sbb
pop
dec
xchg
mov
ss
in
or
cmp
cmp
cmp
ds
aas
pop
aas
ins
aas
jbe
jl
mov
nop
aas
cwde
aas
stos
aas
mov
lds
sar
fnstcw
in
jmp
cmp
dec
sub
dec
dec
push
(bad)
fs
push
jb
jl
xchg
iret
sahf
iret
mov
ret
push
cmp
xchg
push
mov
fcmovnbe
stc
loopne
cmp
in
call
mov
xchg
clc
lahf
cld
test
scas
cld
mov
cld
inc
cmp
jmp
lock
push
iret
(bad)
bswap
dec
in
or
pop
xchg
pop
mov
xchg
rol
jecxz
repz
loope
out
lock
cld
test
adc
add
adc
lock
hlt
je
jp
mov
movs
cld
mov
mov
mov
es
iret
pop
divps
(bad)
mov
ror
loop
call
xor
imul
loopne
lock
test
mov
and
lock
in
call
(bad)
hlt
mov
sar
sti
cld
adc
xor
push
cmp
cmp
cmps
inc
(bad)
cmp
mov
cmp
cmp
inc
cmp
adc
gs
mov
cmp
lods
repnz
ds
cmp
cmp
mov
into
aas
jecxz
sbb
mov
ficomp
ficomp
clc
dec
push
lods
iret
(bad)
movhps
into
sahf
jge
scas
retf
es
push
sub
je
sbb
xor
xchg
xor
daa
cmp
jo
js
and
xor
leave
shr
outs
loope
jmp
test
mov
xchg
stc
popf
stc
lods
stc
mov
loopne
jmp
or
dec
inc
out
mov
cmp
cld
mov
cld
retf
cld
icebp
cld
add
jae
cdq
cmp
add
cmp
cmp
nop
inc
ds
in
call
leave
hlt
sar
ficom
sbb
daa
xor
jmp
lods
inc
add
push
xor
leave
adc
adc
sbb
and
and
stc
push
stc
pop
stc
addr16
mov
jecxz
xor
and
mov
out
out
out
out
out
in
pop
fcomp
inc
and
ss
dec
(bad)
push
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
in
xchg
mov
mov
shl
jecxz
repz
rep
repz
mov
call
enter
cli
clc
add
or
sbb
cmp
cmp
inc
aas
dec
aas
push
sub
or
jp
aas
xchg
aas
mov
xor
and
xchg
(bad)
stos
out
out
out
out
out
out
out
out
out
out
out
loope
ss
leave
and
sub
cmp
aas
push
and
inc
lahf
jne
jg
mov
cmps
lahf
mov
mov
lahf
out
lahf
sti
xchg
inc
dec
ins
test
cmp
cmp
cmp
xchg
push
pusha
cmp
inc
ds
jae
jp
test
mov
cwde
jecxz
repnz
(bad)
test
shr
adc
cmp
cmp
cmp
add
dec
and
popf
data16
inc
or
adc
sbb
addr16
(bad)
pop
in
dec
mov
iret
iret
iret
aam
and
es
push
ret
cwde
ror
cmp
in
call
xchg
mov
cmp
sub
cmp
push
cmp
jo
(bad)
dec
out
neg
push
cmp
dec
pusha
mov
xchg
xsha1
cmps
dec
mov
sbb
adc
mov
cmp
loope
hlt
aas
stc
aas
dec
add
cmp
push
cmpxchg
pop
dec
pop
mov
in
(bad)
sti
loope
aas
dec
leave
cwde
xor
mov
xor
xchg
cli
retf
add
fs
push
je
js
jl
cmp
mov
mov
ret
lahf
enter
stos
sbb
adc
mov
pop
xor
cmp
fstp
into
adc
sub
sub
call
mov
inc
add
add
aaa
mov
add
fwait
cmp
ret
aaa
add
or
cdq
push
push
inc
loopne
add
jns
gs
push
(bad)
push
cmp
mov
adc
repz
push
rdtsc
ror
push
repnz
sbb
imul
shl
pop
cmp
arpl
sti
cmps
push
ss
sub
rol
fiadd
enter
pop
imul
xor
cs
in
rol
mov
popa
mov
out
mov
cs
aas
push
jbe
test
jmp
repz
cmps
and
and
xor
jne
and
gs
outs
ins
arpl
or
sbb
mov
push
xchg
icebp
jne
fcomp
mov
xor
or
jo
popa
outs
arpl
push
pop
push
mov
push
xchg
adc
arpl
inc
jne
xchg
(bad)
xor
push
dec
test
pop
in
dec
adc
jmp
inc
adc
inc
imul
hlt
adc
xor
jae
inc
jle
movs
je
sub
stos
je
mov
push
bound
xchg
sbb
xchg
push
push
and
sbb
push
inc
cmp
pop
push
adc
sbb
pushf
xor
inc
mov
cmp
fcompp
jbe
out
or
adc
dec
rcl
(bad)
fs
ret
mov
and
or
xchg
inc
push
or
imul
add
adc
adc
jne
lock
outs
mov
dec
scas
aam
and
js
ds
(bad)
dec
sahf
sahf
je
cmp
pop
add
pop
add
push
inc
push
adc
dec
mov
test
and
inc
inc
pop
inc
push
and
jae
dec
fisubr
inc
sub
and
adc
mov
xor
or
cmc
fs
out
bound
mov
xor
mov
cwde
nop
push
cmps
repnz
data16
push
inc
ins
ins
sbb
test
mov
jb
xlat
and
push
aaa
push
cmps
fs
jae
dec
iret
shr
sub
mov
setne
jae
enter
fstp
das
cld
ret
inc
jb
jo
arpl
xchg
ja
in
mov
ror
xchg
inc
adc
jg
out
aas
pop
rcl
inc
jae
nop
add
pop
cdq
sub
dec
mov
mov
and
push
push
inc
ror
xchg
or
outs
jo
jns
cld
or
xor
xchg
mov
sbb
adc
pop
adc
das
inc
adc
jae
dec
imul
push
inc
ja
data16
outs
push
ret
inc
or
nop
xor
and
repz
stc
dec
or
push
ins
push
adc
data16
ins
adc
dec
push
rol
inc
xchg
sub
cwde
arpl
fwait
push
push
popa
sub
outs
test
cmp
mov
pop
bound
and
add
fiadd
add
inc
add
mov
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
mov
add
xchg
add
and
add
add
mov
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
rcl
add
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
imul
gs
xor
cs
ins
add
fs
imul
add
je
jb
arpl
fs
jae
add
fsubp
(bad)
dec
add
dec
push
add
or
