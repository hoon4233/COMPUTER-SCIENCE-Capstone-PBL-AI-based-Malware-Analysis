push
mov
sahf
lea
jg
jp
jnp
jne
aas
mov
push
jns
jns
jnp
mov
and
test
jp
cmp
jp
jnp
repz
jnp
jp
lock
lock
or
pop
pop
movsx
popa
pop
dec
pop
lock
leave
jmp
stc
sbb
lods
gs
stos
add
jnp
stc
movs
ja
and
mov
int3
sub
popa
adc
push
jnp
punpckhwd
(bad)
and
cmp
data16
call
sub
sub
jmp
jp
data16
gs
jp
je
(bad)
popa
jnp
repz
adc
jno
fild
popa
neg
sub
data16
adc
add
test
xor
jnp
jbe
clc
out
gs
pop
aaa
cs
adc
fist
ret
cmp
iret
xchg
jmp
icebp
and
inc
mov
sub
outs
popa
jnp
neg
cmp
scas
dec
mov
mul
repz
dec
pop
cmp
lds
das
adc
daa
ins
jb
push
dec
add
xchg
dec
test
loop
sahf
test
mov
pop
jb
ja
icebp
gs
adc
ins
test
cmc
imul
in
icebp
push
hlt
jae
sahf
test
mov
adc
out
lahf
test
movs
ja
jp
jle
mov
popa
jnp
jno
mov
pop
jb
mov
pop
jg
mov
call
jnp
stc
movs
jae
mov
popa
jnp
xchg
inc
clc
bound
push
imul
xchg
cmp
popa
jnp
mov
mov
into
call
jnp
jp
and
and
xchg
(bad)
mov
and
pcmpgtd
fwait
jp
jnp
xchg
rcl
popa
adc
jnp
jnp
xchg
mov
cmp
jnp
das
call
addr16
cmp
add
jnp
push
call
jnp
xchg
jno
int3
sub
mov
ja
jp
mov
sahf
adc
call
pop
pop
cmp
mov
out
jnp
test
cmp
scas
pop
mov
pop
pop
cmp
mov
xchg
dec
aam
jp
mov
xlat
xchg
xchg
xor
popa
jnp
mov
popa
jnp
jp
bnd
lea
sub
lock
jbe
or
pop
repnz
dec
mov
out
pop
cmp
dec
popa
nop
cld
stc
add
call
test
dec
sahf
nop
movs
icebp
and
fwait
sub
xchg
jne
jg
jne
outs
movs
inc
mov
cdq
test
adc
loope
fwait
jp
and
and
adc
jno
fisttp
cdq
nop
mov
repz
mov
cmp
inc
fwait
jp
and
cdq
lock
mov
sbb
jnp
sbb
or
ret
test
jno
loopne
inc
outs
popa
jnp
and
mov
das
call
jp
xchg
(bad)
call
ja
daa
jno
pop
xchg
sbb
test
bnd
fs
pop
cmp
fbstp
mov
sbb
jnp
sbb
jae
(bad)
fwait
jp
test
xchg
jae
bound
lock
jb
outs
mov
jp
test
inc
mov
xchg
sahf
repnz
sbb
test
test
in
test
test
mov
jle
jp
test
test
xchg
sahf
sbb
jp
and
and
sub
sub
sub
daa
ins
mov
pop
inc
loopne
data16
call
enter
push
xchg
shl
pop
lea
add
call
repz
inc
inc
push
mov
mov
pop
popf
repnz
and
pop
jle
jnp
and
mov
das
call
sub
sub
and
call
jnp
lea
adc
cdq
repnz
mov
out
fld
adc
mov
dec
mov
stos
cmp
pop
stc
mov
cmp
adc
popf
repnz
jnp
repnz
xchg
jnp
aas
imul
ins
pop
popf
repnz
aas
and
xor
jg
xor
int3
sub
cmp
pop
aas
popf
into
std
mov
cli
test
and
lea
je
jle
repnz
push
xchg
lock
jbe
lds
jg
mov
mov
mov
add
adc
cdq
repnz
cmp
retf
sub
sub
and
sti
xchg
sub
lahf
out
mov
ja
fcom
inc
test
xchg
es
cmp
adc
mov
jnp
xchg
dec
xchg
xor
mov
loop
mov
lea
mov
pop
das
call
lock
jbe
retf
popf
test
pop
pop
jnp
test
jb
into
jnp
repz
adc
gs
jnp
sub
push
xchg
adc
call
sbb
push
jnp
mov
and
adc
adc
and
sti
xchg
imul
mov
adc
cmp
sub
fdivr
or
leave
jb
xor
sahf
dec
adc
sub
jp
and
adc
aaa
sub
punpckhwd
adc
mov
adc
loop
call
clc
cld
jle
adc
jp
ds
or
push
shl
adc
call
mov
fist
aaa
adc
and
jle
jnp
aas
xchg
sub
retf
jnp
repz
je
mov
mov
clc
pop
jle
adc
and
jl
dec
adc
outs
(bad)
jp
jnp
repz
jnp
popf
call
dec
pop
jae
je
mov
mov
cmp
fstp
jge
and
adc
sahf
test
dec
mov
mov
stos
jp
jnp
addr16
sub
sub
mov
adc
jp
fisub
mov
ins
je
add
jnp
icebp
and
cmp
mov
push
inc
repz
cmp
mov
jmp
mov
call
mov
call
sub
ins
xchg
xlat
popa
jnp
jnp
dec
push
fwait
sahf
test
mov
test
test
popa
push
xchg
stc
inc
mov
jae
pusha
jnp
repz
neg
mov
lock
cmp
sub
loop
outs
jp
push
popa
jnp
pop
popf
jnp
inc
bound
mov
popa
jnp
jp
sub
mov
pop
mov
adc
cdq
repnz
in
push
jp
lea
popf
fdivr
jp
mov
icebp
sbb
adc
sahf
sub
repz
adc
mov
mov
out
sub
mov
sahf
mov
jnp
aas
xchg
sub
inc
sahf
outs
cmps
jp
jnp
repz
xchg
mov
xchg
cwde
adc
mov
fs
mov
test
ficomp
and
icebp
pop
test
repz
xchg
mov
ins
inc
pop
cmps
sahf
test
pop
repnz
jnp
repnz
stc
pop
mov
out
jno
mov
adc
sub
adc
xchg
inc
fild
sahf
test
pop
mov
repnz
lea
test
mov
mov
retf
sub
sbb
loope
xchg
sub
jp
repnz
call
jnp
jle
jnp
jp
jnp
jp
test
jb
hlt
xor
repnz
adc
call
jnp
icebp
and
adc
loope
fwait
jp
adc
or
das
popf
sub
test
int3
xchg
inc
xlat
call
jnp
jp
data16
jns
dec
xchg
cmp
jp
sub
call
bnd
fnstcw
jp
nop
xor
sub
sub
and
jno
cmps
(bad)
test
adc
fdivr
inc
xor
repnz
mov
mov
jb
popf
test
push
jl
jp
mov
lock
fdiv
jp
xchg
mov
popa
jnp
jmp
neg
mov
mov
test
jbe
nop
div
jnp
inc
mov
rcpps
xchg
es
test
mov
test
ficomp
and
icebp
pop
test
xor
ds
push
cmp
mov
retf
test
cmps
test
cmp
test
outs
cmps
jp
jnp
repz
xchg
mov
popa
jnp
mov
int
fs
mov
pop
jmp
ficomp
and
icebp
pop
test
add
ds
je
frstor
call
into
pop
test
test
movs
jae
mov
sahf
test
in
test
jnp
xchg
pop
add
jp
(bad)
and
lahf
test
(bad)
lock
aas
popf
jb
jne
es
jp
sbb
test
push
dec
pusha
jnp
cli
fadd
xchg
(bad)
and
jp
jp
fcom
xchg
sahf
sub
cdq
test
movs
ja
mov
sahf
test
mov
je
dec
test
test
popa
je
mov
(bad)
(bad)
xor
in
(bad)
test
adc
in
jp
or
jp
clc
pop
jbe
int3
pop
rcr
jle
in
jnp
sbb
(bad)
xor
loopne
xchg
and
outs
int3
pop
rcr
jle
mov
shl
fstp
lock
test
test
popa
jbe
test
cmp
test
mov
inc
dec
mov
(bad)
xor
lds
mov
cmp
cli
pop
jp
sets
das
ficomp
repnz
sbb
(bad)
xor
in
test
test
inc
lahf
mov
cmp
test
test
adc
and
jns
test
movs
jae
mov
cmps
(bad)
test
xchg
jg
call
jnp
mov
in
inc
lahf
test
icebp
in
test
sub
repz
xchg
mov
popa
jnp
mov
(bad)
and
in
test
sub
repz
xchg
mov
popa
jnp
fbstp
ret
mov
cdq
call
test
mov
lahf
test
test
jnp
jp
nop
outs
push
in
test
(bad)
sahf
jp
jp
neg
repnz
test
in
inc
test
mov
adc
sub
mov
neg
scas
sahf
test
or
pop
jmp
outs
pop
jnp
jp
repnz
pop
jg
jp
dec
lahf
test
icebp
in
test
in
dec
jp
jnp
aas
popf
ret
jecxz
popa
jnp
cdq
call
test
mov
outs
(bad)
imul
test
lock
stos
sahf
test
jmp
xchg
xchg
(bad)
fstp
jp
and
jp
mov
in
test
neg
xchg
sahf
test
jmp
icebp
pop
test
inc
call
push
inc
repz
je
leave
bound
sti
mov
popa
neg
sahf
sahf
test
jmp
icebp
pop
test
pop
call
je
sub
call
fbld
sahf
repnz
stc
les
gs
cdq
test
retf
add
xchg
mov
jp
clc
pop
jbe
fidiv
lahf
test
jp
jnp
(bad)
jnp
repz
pop
test
xchg
test
test
or
cmp
pop
xchg
mov
jp
clc
pop
outs
call
mov
test
xchg
test
test
in
test
test
xchg
mov
xchg
sahf
jp
jnp
fucomip
into
sbb
jno
jge
gs
jp
ficom
(bad)
mov
test
push
adc
popf
repnz
lea
test
mov
je
aaa
arpl
stc
(bad)
out
test
mov
push
test
mov
jp
dec
test
test
jp
ds
je
ja
jnp
repz
neg
loop
test
jmp
icebp
pop
test
push
call
je
lods
pusha
jnp
stc
(bad)
(bad)
sahf
jnp
ret
pusha
jnp
adc
cmp
popa
jnp
repz
sbb
test
adc
jmp
dec
test
(bad)
jmp
sbb
sahf
clc
jbe
call
jnp
mov
imul
sbb
imul
fdivr
jp
mov
icebp
fsub
test
sub
repz
xchg
mov
popa
jnp
fist
repnz
jnp
repnz
mul
pcmpgtw
cmp
test
outs
cmps
jp
jnp
repz
xchg
mov
popa
jnp
(bad)
adc
je
xchg
popa
jnp
mul
sub
sahf
sub
jp
into
outs
test
test
lock
aas
popf
repnz
lea
test
mov
je
ret
call
test
jp
clc
daa
and
inc
jp
jnp
jmp
test
test
and
lea
loop
xchg
repz
cmp
(bad)
sub
adc
sbb
sub
test
jmp
jp
jp
test
ficomp
xchg
sahf
sub
ins
xchg
cmp
test
jnp
stc
movs
imul
sub
mul
lahf
test
mov
cmp
inc
pusha
jnp
sub
bound
sub
test
test
test
xchg
int3
frstor
sbb
push
jnp
stc
fmul
test
mov
adc
adc
test
jae
inc
test
inc
test
test
stc
scas
test
test
lock
test
jae
mov
dec
call
test
icebp
push
test
jb
(bad)
jbe
lahf
test
inc
(bad)
jbe
lahf
test
test
(bad)
push
lahf
test
xchg
mov
adc
mov
test
jae
(bad)
mov
test
xchg
icebp
in
test
sub
mov
clc
daa
scas
sahf
test
adc
test
lock
test
jae
(bad)
mov
lock
test
jae
(bad)
mov
lock
test
jae
mov
jmp
icebp
push
test
jb
or
test
mov
adc
loope
cmp
cmp
jnp
sub
jnp
stc
lea
sub
bnd
ss
retf
sti
or
sub
jnp
aas
popf
jnp
jp
cli
out
sahf
js
call
xchg
dec
fbld
sbb
sahf
test
pop
test
bound
jmp
inc
movs
mov
push
xchg
push
mov
test
jp
jp
lock
cmps
ds
push
repz
icebp
sbb
adc
mov
push
inc
xchg
std
mov
test
and
push
ret
jp
jmp
test
retf
les
adc
pop
test
repnz
ret
cmp
jp
push
xchg
adc
hlt
fstp
enter
clc
pop
push
mov
call
jnp
jp
jnp
aaa
ret
repz
repnz
call
ficomp
mov
ss
rol
bound
or
mov
and
pcmpgtw
xchg
pop
fisubr
fisub
jnp
aas
imul
stos
imul
cmp
push
test
sti
cmps
jnp
push
arpl
cmps
clc
pop
jnp
adc
in
jnp
(bad)
xchg
pusha
fisub
sbb
cdq
repnz
ret
call
bnd
xor
int3
sub
sbb
sbb
jp
mov
xchg
mov
and
sbb
jnp
repz
pop
call
repnz
jae
rsm
dec
sahf
nop
mov
fwait
stos
jo
sub
adc
imul
mov
cmps
jns
movs
adc
call
lock
push
aas
mov
nop
pushf
icebp
and
pop
jp
repnz
xchg
repnz
sti
(bad)
pop
fstp
and
and
ret
pop
jns
jnp
arpl
jnp
sub
sub
outs
xor
into
sti
xchg
xchg
xchg
jp
test
sti
xchg
add
jp
cli
imul
popa
test
sti
mov
aas
scas
sahf
test
in
(bad)
inc
test
call
mov
in
data16
jae
(bad)
cmp
ficomp
lahf
test
jp
cwde
adc
xor
mov
call
inc
lahf
test
jge
jnp
(bad)
nop
cmp
test
jnp
push
mov
inc
test
jnp
repz
dec
pop
xchg
aaa
jl
jp
dec
lahf
test
inc
xchg
jnp
jp
jnp
aas
xchg
sub
mov
fs
bound
popa
jb
push
jns
das
mov
mov
call
mov
popf
jp
repnz
dec
mov
(bad)
adc
ds
rep
clc
pop
inc
jmp
test
(bad)
push
test
adc
out
cmc
xchg
bound
jbe
test
jnp
push
mov
pop
xchg
jle
call
repnz
dec
mov
mov
test
xchg
mov
in
test
jnp
mul
(bad)
sub
(bad)
mov
adc
test
test
and
jmp
(bad)
pop
test
jb
push
cmp
pop
mov
test
popa
repnz
call
lock
test
mov
test
hlt
mov
test
outs
icebp
popa
repnz
popa
jnp
mov
in
test
out
push
test
xchg
dec
jg
jnp
mov
jmp
xchg
nop
mov
popa
jnp
mov
in
data16
test
or
(bad)
mov
adc
out
icebp
xchg
ds
mov
clc
aas
(bad)
sahf
test
call
mov
test
neg
rcr
jp
iret
std
test
out
test
test
(bad)
sahf
test
fadd
test
mov
push
test
ds
repz
data16
xchg
mov
in
test
test
hlt
mov
test
nop
addr16
popa
jnp
in
lahf
test
fs
pop
cmp
fisttp
popf
repnz
lea
test
mov
mov
pop
neg
ret
test
(bad)
xor
in
test
push
outs
test
mul
sahf
repnz
lahf
test
repz
data16
ret
test
xchg
mov
loop
xchg
icebp
popa
repnz
repnz
test
in
test
test
adc
test
test
and
jmp
(bad)
pop
test
jnp
jle
mov
and
call
jp
rep
clc
pop
jb
jnp
jmp
into
and
lods
test
bound
(bad)
jns
in
data16
(bad)
adc
ds
mov
clc
pop
jmp
xchg
jnp
call
xchg
neg
cmps
sahf
test
or
setne
repz
adc
xchg
lock
mov
mov
popa
repnz
cli
popf
test
popa
neg
push
popf
test
in
(bad)
xor
in
test
push
outs
test
sti
data16
outs
icebp
popa
repnz
popa
jnp
mov
in
data16
pop
data16
test
neg
mov
into
add
test
neg
cmps
sahf
test
or
setne
repz
gs
mov
fwait
jp
adc
test
jnp
ret
call
xchg
mov
call
test
mov
add
jnp
jnp
jp
(bad)
xor
in
jp
(bad)
loop
lahf
test
mov
and
sbb
or
test
call
sub
test
and
lahf
test
mov
and
lock
test
loop
test
or
sbb
call
test
or
test
clc
pop
sbb
test
std
jnp
jae
setae
fmul
out
jg
sbb
fwait
adc
inc
xchg
xchg
gs
mov
call
jnp
jnp
cwde
imul
mul
loop
test
mov
test
test
popa
je
pop
arpl
icebp
fcom
in
popa
je
outs
arpl
cli
push
jns
jne
jno
jp
sti
in
popa
je
jp
jnp
adc
test
pop
call
test
mov
xchg
test
test
jnp
movs
imul
neg
rcr
aam
test
test
popa
je
(bad)
popa
jnp
adc
inc
mov
jnp
dec
test
xchg
adc
sahf
test
mov
popa
jnp
or
cmps
nop
cmp
test
test
movs
ja
(bad)
shl
jnp
mov
sahf
dec
lahf
test
and
call
test
ds
test
fnstsw
test
lock
ds
test
hlt
cmp
sahf
jne
mov
xchg
test
mov
test
push
mov
lahf
test
and
(bad)
push
lahf
test
stos
mov
ds
test
sar
pop
jl
jnp
mul
(bad)
test
test
adc
and
punpckhwd
sbb
call
test
mov
loope
fwait
jp
adc
pop
xchg
pop
pushf
jnp
push
xchg
xchg
stos
jnp
jp
dec
lahf
test
xchg
fld
jp
jp
cmps
nop
cmp
test
test
movs
ja
test
adc
jp
(bad)
xor
xchg
gs
mov
xor
aas
data16
(bad)
fiadd
fs
test
(bad)
fiadd
fs
test
xchg
(bad)
push
lahf
test
stos
mov
ds
test
stos
neg
mov
(bad)
xor
mov
jp
push
xchg
xchg
cdq
out
jp
mov
mov
jb
(bad)
fiadd
loop
gs
inc
fwait
jp
adc
and
pushf
jnp
push
xchg
repz
test
xchg
sahf
test
icebp
in
call
jnp
ss
repz
mov
sbb
jnp
sub
test
mov
pop
in
popa
jnp
mov
and
(bad)
fiadd
jmp
and
mov
das
call
js
jp
sub
punpckhwd
or
adc
sahf
jle
mov
ret
jp
int3
fdivr
repnz
mov
xchg
sahf
sub
cli
jnp
sti
mov
cmp
mov
test
pop
xchg
mov
cmp
pop
test
push
jp
test
jne
cmp
fdivr
aas
stos
jb
neg
xchg
aam
jp
repnz
repnz
jne
cmp
data16
xchg
sahf
sub
call
adc
and
call
xchg
and
popa
jnp
mov
pushf
test
test
jp
sets
pop
stc
cmps
jp
repz
test
aas
lahf
jnp
xchg
inc
je
aas
lahf
repnz
jns
xchg
popa
lock
jp
cmp
xchg
sbb
sub
out
popf
xchg
pop
stos
in
loopne
and
xchg
sahf
jp
xchg
sbb
dec
pop
cmp
adc
sahf
jle
mov
test
xchg
jp
bnd
lea
sub
lock
jb
mov
jmp
sub
test
cmp
dec
jo
jnp
pushf
call
adc
cmp
fcomp
jns
adc
mov
jnp
daa
idiv
repz
cli
ins
rol
call
xchg
xor
popa
jnp
aas
popf
clc
mov
jp
pop
mov
call
popf
adc
xchg
repnz
adc
lea
jnp
test
call
xchg
xchg
mov
test
sar
popa
icebp
sahf
inc
jmp
inc
mov
in
xchg
sahf
dec
call
jnp
repz
mov
mov
mov
popa
and
and
clc
jbe
xor
cld
repz
and
fld
call
repnz
test
cmp
call
adc
mov
popa
in
call
dec
inc
repz
mov
hlt
jnp
repz
adc
jno
push
push
jnp
jp
adc
jp
mov
adc
or
aas
lea
setns
pop
in
popa
jnp
jg
mov
in
popa
jnp
pop
xchg
jnp
jae
jnp
icebp
and
adc
loope
fwait
jp
adc
pop
repnz
movs
sahf
jle
mov
xchg
cwde
adc
mov
fild
mov
mov
call
sti
cmps
jl
push
shl
and
pop
jle
jnp
mov
push
call
adc
mov
test
jbe
mov
pop
push
mov
fwait
mov
cmp
pop
jle
jbe
mov
call
mov
fild
and
call
mov
dec
mov
fbld
bound
xchg
loop
jnp
mov
mov
bound
xchg
jbe
aas
popf
repnz
push
mov
sbb
imul
jmp
div
imul
pop
cmp
pop
jno
jae
mov
test
mov
fild
outs
jne
xchg
test
cmp
xchg
xor
jnp
sub
xchg
xchg
test
popa
jnp
xchg
push
out
call
jnp
setno
lds
mov
das
call
(bad)
iret
jo
dec
sbb
sahf
jle
mov
push
adc
in
data16
inc
call
ja
punpckhwd
repnz
call
jnp
(bad)
test
xchg
test
xchg
ret
ror
jnp
popf
call
and
mov
lea
lds
jno
add
call
test
repz
dec
(bad)
xchg
adc
jp
push
xchg
test
jb
idiv
test
gs
fild
adc
setge
and
xchg
fisttp
popf
xchg
js
popa
jnp
aas
cdq
nop
xchg
ret
call
repnz
and
test
jbe
pusha
jnp
sub
sub
adc
pop
call
repnz
xchg
(bad)
jp
mov
adc
xchg
sub
xchg
in
call
cmp
xchg
loope
gs
mov
call
jnp
and
mov
aaa
xchg
mov
aas
test
cmps
pop
add
jp
je
cli
popa
jnp
icebp
and
mov
add
or
jle
xchg
jns
call
jnp
lea
mov
push
aaa
xchg
mov
popa
jnp
pop
xchg
sub
xor
push
imul
ds
aas
mov
jno
or
xchg
test
call
jp
aas
mov
cdq
or
jnp
adc
fwait
jp
jp
jnp
jnp
sub
sbb
jp
adc
jnp
jns
jp
sub
call
lock
repz
jp
jbe
aas
mov
call
mov
aas
mov
jnp
(bad)
mov
ds
and
cmps
pusha
pusha
jnp
jne
mov
jp
lock
daa
jp
jp
out
pop
stc
cmp
adc
jnp
repz
lock
xchg
fsubr
popa
jnp
mov
adc
xchg
lods
out
popa
jnp
mov
call
adc
jp
repnz
mov
outs
adc
jp
repnz
cli
and
fwait
lock
cmps
jle
nop
sbb
mov
aas
mov
jno
or
xchg
xchg
call
sbb
mov
adc
mov
xchg
or
jnp
adc
fisttp
bnd
cli
sbb
fdiv
pop
fwait
jp
sti
out
adc
pop
pushaw
jnp
sub
mov
pop
jne
jne
jp
repnz
repnz
adc
call
test
sub
or
jp
neg
cmps
xor
call
scas
jb
bnd
stc
sbb
call
repnz
lahf
test
cmps
clc
fbstp
push
lahf
out
popa
adc
aas
mov
call
jle
mov
push
iret
mov
push
fistp
popa
sub
(bad)
fld
push
mov
jnp
jp
jo
jp
repnz
fldl2e
cmp
ret
test
xchg
mov
popa
jnp
aas
mov
dec
paddusw
gs
xchg
nop
out
popa
jnp
jp
jnp
mov
call
jb
push
jo
call
jnp
paddusw
adc
or
jnp
mov
pop
bnd
adc
jb
bnd
test
gs
xchg
into
fdivr
xchg
or
cli
pop
addr16
jnp
and
jno
int
ins
xor
jae
mov
gs
mov
imul
adc
mov
jnp
cs
cmp
cli
mov
ins
push
pop
jnp
adc
jno
cmp
or
jnp
xchg
mov
test
jnp
ds
cmp
jp
popa
imul
adc
ret
gs
xchg
sahf
fnstcw
adc
mov
jnp
fwait
xchg
cmp
jp
jp
jp
xchg
add
and
das
call
xchg
fsubr
or
in
popa
jnp
popf
call
xchg
ret
test
adc
mov
popa
adc
adc
pop
call
jnp
imul
call
clc
jbe
xor
cld
repz
and
repz
dec
(bad)
jle
cmp
push
neg
xor
in
jmp
ins
cli
pop
nop
and
test
cmp
fisttp
jnp
jne
ds
stc
mov
adc
xchg
mov
pop
inc
and
call
push
mov
xchg
jp
mov
adc
lahf
je
aas
jne
gs
jnp
aas
sahf
cli
pop
inc
push
jnp
test
cmp
call
lock
or
jp
mov
mov
mov
pop
cdq
jnp
xchg
sub
popa
jnp
sub
lock
jmp
adc
nop
leave
xor
sbb
or
jmp
jnp
and
fisub
sahf
test
jp
clc
daa
xchg
push
test
test
(bad)
hlt
jnp
test
test
adc
out
popf
test
sahf
(bad)
data16
jnp
test
cmp
repz
test
loop
outs
xchg
lock
in
test
xchg
loop
outs
xchg
lock
in
test
xchg
loop
bound
mov
lahf
data16
and
cmp
imul
test
cdq
xchg
call
test
fadd
jmp
xchg
xchg
call
test
fs
cmp
inc
dec
mov
xchg
test
xchg
add
mov
pop
popa
jnp
dec
neg
mov
(bad)
bound
in
test
add
jp
neg
xchg
xchg
js
popa
jnp
mov
popa
jnp
out
cdq
xchg
xor
mov
jnp
jae
je
jecxz
jnp
adc
test
pop
dec
sub
call
clc
bound
movs
icebp
call
jnp
mov
popa
test
stc
fmul
out
imul
jnp
mov
push
mov
call
mov
test
lahf
jle
cmp
dec
sub
xchg
jmp
call
xchg
cld
lock
jnp
xchg
dec
jnp
lea
test
mov
jp
jp
(bad)
data16
adc
jb
jne
int
jp
test
pushf
test
aaa
xchg
nop
lock
jnp
mov
popa
jnp
jp
test
popa
neg
xchg
popf
test
ss
call
call
and
sub
jnp
jnp
ret
call
xchg
mov
call
test
adc
gs
mov
dec
repz
jnp
mov
push
mov
call
lock
mov
jle
xchg
dec
inc
repz
mov
sahf
neg
xchg
popf
test
aaa
xchg
mov
popa
jnp
sbb
adc
cli
pop
cwde
pop
jnp
dec
mov
(bad)
test
repnz
jle
mov
fs
lea
test
mov
jnp
dec
mov
mov
popa
jnp
call
sub
addr16
jnp
jp
repnz
push
mov
cmp
mov
pop
xchg
ins
repnz
lea
test
mov
mov
jbe
aaa
sub
punpckhwd
cmps
inc
ins
cmp
xchg
add
call
jnp
add
jg
inc
loope
xchg
jp
push
repnz
pop
jg
sub
jnp
xchg
jo
call
jnp
or
xchg
movs
repz
jnp
push
pop
jnp
lea
mov
gs
mov
mov
repz
adc
and
aas
xchg
jle
lea
ds
repnz
pop
aas
cdq
jnp
aas
cwde
jp
shl
call
mov
sbb
fwait
sub
out
jnp
stc
movs
ja
cmp
repz
test
jp
jno
aas
xchg
sub
gs
pop
repnz
jnp
xchg
add
call
mov
and
repz
push
(bad)
jle
cmp
sub
test
loop
xchg
dec
mov
jg
cmp
bound
repnz
and
test
leave
sub
lock
jb
mov
ins
sbb
jnp
test
cmp
in
bound
shl
xchg
clc
pop
aas
xor
adc
popf
test
jae
push
mov
cmp
bound
repnz
adc
jb
sahf
test
movs
jae
mov
push
mov
fild
popa
lock
int
outs
int
aas
outs
int3
dec
mov
outs
int3
inc
jne
sub
fnsave
mov
fwait
imul
cwde
jno
dec
repz
add
mov
sahf
jle
mov
aas
or
int3
aaa
or
js
push
pop
sbb
aas
and
xor
jg
xor
and
sti
cmps
mov
jp
test
sub
test
jp
js
loopne
jp
repnz
popa
jnp
sbb
std
push
jp
jnp
jp
xchg
cmc
gs
jnp
int
pop
retf
cld
call
std
call
std
adc
jnp
jg
mov
mov
popa
jnp
push
mov
sub
jnp
stos
out
call
jg
cmp
bound
call
xchg
test
bound
repnz
dec
mov
jle
mov
mov
jnp
xchg
pop
xchg
loop
xchg
dec
mov
mov
jbe
pusha
jnp
sub
sub
punpckhwd
mov
or
sbb
cmps
(bad)
imul
xchg
test
jg
cmp
aas
xchg
mov
sbb
popf
test
and
mov
cld
xchg
test
xchg
jg
out
cld
jnp
test
test
popa
jnp
stc
les
pop
call
adc
xchg
jp
sbb
jnp
test
cmp
pop
ins
pop
jnp
mul
xchg
sub
gs
sub
popa
jnp
mov
or
call
test
jle
pop
sbb
popa
cli
jne
push
jnp
xchg
jnp
lahf
jle
cmp
repz
mov
call
jnp
jne
(bad)
imul
mov
in
test
and
xor
jg
inc
imul
popa
sub
sub
and
or
jbe
aas
cdq
mov
loope
gs
call
cmp
jb
lahf
test
mov
ds
mov
or
fild
xchg
repz
cmp
jnp
push
inc
jp
xchg
xor
cmps
adc
sahf
ds
stc
sbb
sahf
push
xchg
fild
call
adc
popa
jnp
(bad)
mov
test
jle
sub
jp
dec
pop
cmp
mul
call
and
jnp
mov
test
ret
call
cmps
adc
cdq
sub
lahf
test
mov
test
cmp
xchg
push
test
call
cli
fild
xor
sbb
xor
sbb
and
popa
loop
sbb
jnp
push
jae
popf
sub
clc
pop
jb
mov
call
lock
call
cmp
jp
addr16
xchg
mov
imul
jp
ds
mov
adc
arpl
out
xor
bound
jnp
sub
and
mov
sbb
cdq
punpckhwd
and
clc
out
dec
add
mov
popa
jnp
aas
popf
jp
jp
nop
mov
mov
test
pop
popf
repnz
repnz
xchg
aas
xchg
inc
fild
jns
call
jnp
xchg
das
xchg
call
sub
pushf
test
movs
jae
mov
fs
cmp
loope
popa
seta
pop
inc
dec
cmp
out
jle
mov
fnstcw
ds
adc
adc
and
sti
mov
jp
test
stc
pop
jnp
jge
dec
jb
loop
call
clc
in
popa
setb
loop
call
test
jb
xor
jp
clc
in
popa
setb
loop
call
clc
and
popa
jnp
jp
jo
int3
loope
call
test
stc
pop
jg
dec
mov
inc
call
repnz
and
call
sub
and
jne
mov
xchg
jp
repz
sub
popf
fwait
test
sahf
jle
mov
push
mov
mov
popa
jnp
js
je
cmp
jecxz
call
jnp
jp
cmp
repz
call
repnz
test
cmp
mov
cdq
jle
jp
jnp
test
jae
jmp
jnp
jae
btc
cmp
sub
sub
add
stos
mov
popa
jnp
mov
adc
xchg
pop
clc
popa
jnp
mov
gs
mov
call
pop
retf
add
es
fimul
jno
inc
punpcklwd
pushf
call
dec
pop
cmp
adc
mov
es
retf
add
and
xchg
mov
jno
fild
in
ds
sbb
sahf
or
xchg
mov
call
test
sahf
call
mov
fdivr
int3
sbb
sub
repnz
jne
mov
call
(bad)
outs
test
mov
ins
pushf
call
and
and
clc
jbe
xor
sub
call
mov
call
mov
jb
call
cmp
jnp
mov
aaa
xchg
bound
imul
sbb
jle
dec
loopne
xchg
ds
jnp
aas
xchg
jp
jno
xchg
inc
sbb
fwait
lock
mov
adc
cwde
adc
or
call
test
repz
inc
gs
mov
fwait
sub
int3
xchg
mov
test
jb
cmova
jp
jnp
xchg
ror
test
jg
and
call
pushf
adc
xchg
repnz
stc
call
xchg
push
xchg
ins
sub
gs
movs
ja
or
xchg
pop
cli
popa
jnp
or
mov
sahf
test
dec
mov
shl
and
bnd
lea
sub
(bad)
retf
and
adc
sahf
jle
mov
xchg
into
fdivr
adc
xchg
popa
cli
call
sbb
call
adc
jp
ds
(bad)
jle
mov
in
call
xchg
lock
ds
sahf
dec
sahf
ret
jb
loope
call
cmp
jp
mov
xchg
mov
cdq
mov
and
adc
popf
jnp
jp
jle
mov
xchg
pushf
adc
test
pop
mov
popa
jp
adc
mov
popa
jnp
bound
fild
jnp
inc
fs
cmp
out
jne
test
test
fild
pop
inc
stc
pop
(bad)
das
cmp
out
jbe
pop
outs
iret
and
xchg
sar
call
mov
call
je
aas
lahf
adc
popa
jnp
mul
mov
test
cmp
call
mov
popa
jnp
test
jg
cmp
sub
fisub
call
jnp
int
test
stos
lds
jp
jg
dec
mov
call
fistp
jg
stos
fidivr
adc
stos
and
adc
jnp
jp
enter
repnz
repz
dec
(bad)
ret
loopne
call
and
call
sub
cld
repz
and
ret
call
repnz
test
cmp
ins
inc
dec
jnp
sbb
ds
sbb
xlat
pop
cmp
lahf
jb
cmp
jp
jnp
adc
fidivr
sbb
jp
clc
pop
jbe
jle
mov
dec
pop
call
jnp
jp
ja
cmp
call
jnp
mov
call
cli
call
jnp
or
mov
in
call
jnp
push
mov
repz
mov
and
adc
mov
mov
das
call
sub
icebp
cmp
and
dec
cmp
push
repz
cmp
jp
cmp
push
popa
jnp
pop
cmc
hlt
fstp
clc
mov
jp
pop
jp
and
mov
popa
jg
jp
ret
jmp
popa
jnp
fwait
call
mov
call
cmp
sbb
popa
je
jg
std
fstp
mov
call
je
push
arpl
test
mov
ja
hlt
fstp
xchg
repz
jnp
jg
mov
sbb
bts
jp
and
fisttp
and
xor
call
cmp
je
inc
arpl
mov
cmp
out
ja
add
cmp
lahf
fdivrp
cmp
fdivrp
cmp
jp
xchg
mov
jnp
jg
in
jp
jge
jp
test
mov
cmp
out
jge
mov
call
sti
xchg
out
out
cmp
cmp
jbe
and
dec
sahf
test
fs
adc
jge
mov
call
sti
xchg
out
out
cmp
test
cmp
mov
popa
repnz
dec
test
out
adc
jp
cmp
jp
popf
test
cmp
mov
popa
repnz
push
test
out
adc
jg
lock
jnp
jp
shl
lahf
out
out
cmp
mov
popa
repnz
jnp
repnz
cli
ins
out
adc
jg
std
fstp
jnp
jp
mov
repnz
test
fs
pop
cmp
lahf
fdivrp
cmp
jp
sti
xchg
out
out
cmp
jp
(bad)
icebp
and
jg
in
jp
stos
idiv
mov
and
adc
and
xchg
xchg
jp
add
cmp
pop
js
jle
in
jnp
scas
popa
jnp
fstp
jle
pop
and
mov
sbb
fstp
jle
in
jnp
into
popa
jnp
test
cmp
lahf
fdivrp
cmp
jp
cli
jae
jp
call
js
jmp
inc
jnp
jnp
ja
hlt
fstp
cli
pop
xchg
sbb
cmp
cmp
popa
je
jg
fcmovnu
jp
mov
xchg
add
inc
mov
call
jnp
jp
cmp
in
pop
cmp
xchg
out
out
cmp
jg
mov
cmp
jmp
cmp
mov
fild
sub
jnp
fwait
call
sti
xchg
out
out
cmp
mov
popa
cli
jae
xor
test
cmp
lahf
out
out
cmp
jp
jnp
mov
icebp
call
mov
mov
mov
cmp
popa
pop
pop
jp
jnp
aas
xchg
je
jg
fcmovnu
jp
fwait
popf
repnz
xchg
int3
and
cmps
mov
in
call
push
pushf
test
cmp
imul
jnp
jne
ds
inc
loope
call
cmp
cmp
cmps
mov
adc
sbb
xchg
jnp
sub
push
ins
jl
aaa
sbb
push
fstp
nop
fsqrt
sbb
sahf
cmovne
xchg
out
out
cmp
mov
mov
call
int
push
jmp
aas
xchg
sti
out
fs
xchg
cli
sbb
call
cmp
outs
popa
jnp
pop
mov
fstp
nop
xor
cmp
fstp
jnp
jle
sbb
popa
test
fild
jle
pop
and
mov
call
clc
mov
jp
arpl
mov
lock
xchg
sbb
call
ret
fdivr
jle
pop
and
fdivrp
cmp
cmp
inc
test
cmp
push
mov
jnp
mov
test
and
adc
(bad)
pop
fld
loopne
xor
popa
jnp
jg
mov
pop
cmp
hlt
push
popa
jnp
mov
popa
sub
call
xchg
or
popa
jnp
ret
call
fmul
cmc
and
mov
cmp
jp
fcomp
mul
jnp
mov
mov
out
popa
fdivr
in
jnp
adc
pop
adc
xchg
mov
popa
jnp
ret
call
sahf
sbb
xor
ja
call
ds
mov
cmp
jp
xor
sahf
outs
fisub
jnp
aas
mov
jp
repnz
lea
mov
pop
aas
leave
repnz
popa
jnp
ret
call
repnz
stc
add
call
out
pop
cmp
jmp
mov
scas
call
jnp
aas
mov
cli
jno
and
mul
cmp
fistp
and
aas
sar
jp
repnz
lea
mov
call
repnz
lea
mov
out
stos
fdivr
jp
mov
mul
retf
jnp
jp
ds
sahf
outs
sbb
and
(bad)
pop
jnp
lea
mov
lock
ds
jnp
jp
jg
jl
push
jle
cmc
add
cmp
sahf
push
mul
retf
xchg
add
jnp
jg
mov
xadd
call
test
sahf
mov
in
popa
cli
pop
or
jnp
test
jb
sbb
test
cmp
fist
in
ds
sahf
outs
sbb
and
aas
test
call
repnz
and
xor
jg
lea
aas
popf
(bad)
inc
cli
test
and
adc
jno
xlat
and
outs
jp
test
fist
or
aas
cdq
sub
aas
mov
setns
call
test
jb
outs
cmp
and
aas
xchg
nop
mov
and
adc
test
fistp
and
adc
popf
mov
das
call
jno
and
sbb
cmc
mov
xchg
adc
cmp
jp
and
mov
lea
sub
lock
jb
es
test
cmp
gs
jg
inc
sahf
jnp
jp
dec
xchg
int3
and
jnp
jp
push
xchg
int3
and
jnp
jp
addr16
int3
and
jnp
jp
imul
sahf
jnp
jp
call
aas
jno
fidivr
icebp
mov
mov
jne
ds
jg
mov
outs
movs
inc
mov
jnp
repz
xor
mov
popa
jnp
and
cwde
jne
outs
mov
push
loope
fwait
clc
jo
outs
int
ins
pop
mov
sbb
addr16
jb
popa
jnp
and
int
test
mov
arpl
and
call
test
clc
mov
jnp
sub
repnz
xor
pop
cs
fwait
and
sahf
push
mov
fild
and
adc
jno
fidivr
jp
stc
mov
das
xchg
repnz
jnp
jp
pop
xchg
int3
and
icebp
mov
add
xchg
cli
and
fwait
xchg
push
test
sahf
jle
mov
pop
jg
cs
jge
cvtpi2ps
(bad)
stc
mov
inc
addr16
cmp
sbb
(bad)
sti
cmps
jl
push
scas
repz
clc
jb
outs
int
jl
adc
push
popa
setno
cdq
clc
jb
loope
pushf
pop
adc
adc
xor
jg
mov
pusha
jnp
jp
inc
movs
js
push
adc
arpl
(bad)
repz
clc
jb
loope
pushf
js
sub
and
cdq
cli
pop
jge
(bad)
repnz
stc
mov
int3
gs
xchg
popa
jnp
push
inc
jae
popa
jnp
push
loop
gs
xor
pop
cs
fwait
and
sahf
push
mov
inc
stc
mov
aas
cdq
lock
aas
cdq
jg
sbb
gs
sub
lahf
jnp
jnp
cli
pop
inc
fwait
rdpmc
repnz
loope
pushf
jnp
xor
and
cwde
cli
pop
jge
maxps
(bad)
stc
mov
inc
addr16
dec
call
je
jle
inc
cmps
push
outs
inc
fs
jnp
jge
test
xchg
add
jp
cs
xor
clc
jo
call
jnp
cmp
popa
jnp
clc
(bad)
xchg
ds
adc
aaa
sub
jg
mov
xchg
xchg
jge
gs
data16
cmps
inc
popa
push
xchg
cmp
popa
jnp
mov
test
popa
jnp
push
dec
xchg
cdq
jp
inc
pop
or
xchg
jae
popa
jnp
mov
mov
mov
je
out
popa
dec
inc
repz
jp
sub
and
cmc
mov
sahf
gs
xchg
call
jnp
jp
pop
sbb
popf
jnp
je
mov
mov
outs
pushf
test
cmp
cmp
xchg
mov
jle
sahf
fs
aas
test
jnp
aas
cdq
repnz
repz
jp
jnp
repnz
jmp
jp
cmp
icebp
loop
gs
jp
push
mov
pusha
jnp
jp
stc
mov
aas
cdq
mov
fisub
iret
sub
gs
mov
gs
cdq
test
fs
stc
mov
aas
cdq
mov
cmps
jnp
jnp
sub
je
das
jno
js
sahf
dec
(bad)
xchg
test
xchg
loop
xchg
and
xor
jg
cmp
inc
out
jp
sub
sub
sahf
mov
gs
shr
jp
inc
call
(bad)
jns
sahf
test
test
mov
jns
sahf
test
call
inc
lahf
mov
popa
sbb
and
xlat
(bad)
imul
popa
jns
js
and
jne
sahf
repnz
mov
je
jbe
mov
cmp
jb
pop
jnp
icebp
hlt
rol
repnz
out
cmp
jns
stos
gs
jbe
adc
pop
cwde
arpl
pmaxub
outs
jp
and
mov
jnp
icebp
hlt
fild
repnz
outs
xchg
push
fstp
(bad)
imul
sahf
test
mov
btr
jp
je
aaa
sahf
test
in
jne
sahf
jnp
int3
hlt
mov
sahf
mov
(bad)
call
jnp
int3
hlt
mov
sahf
mov
(bad)
call
inc
test
cmp
test
jp
jp
dec
arpl
mov
out
pop
cmp
clflush
mov
mov
mov
jnp
call
test
or
jp
sub
adc
call
popf
cwde
repz
bound
mov
inc
pop
mov
neg
(bad)
mov
sub
jp
test
stc
les
jae
popa
jnp
adc
into
jbe
sahf
test
mov
ins
pusha
test
ds
psubb
(bad)
sti
inc
test
movs
test
mov
js
bound
data16
push
rcr
gs
cs
cdq
xchg
test
(bad)
sahf
jnp
jp
or
sahf
test
repz
jnp
jmp
movs
test
imul
popa
jnp
int3
sahf
push
xchg
jb
test
cli
pop
xchg
mov
icebp
in
inc
test
jnp
dec
std
mov
sahf
into
inc
movs
sahf
test
adc
js
jp
int
mov
jns
outs
je
out
popa
bnd
les
adc
xchg
xchg
test
mov
cwde
jns
xchg
jbe
repnz
outs
mov
xchg
sahf
test
arpl
inc
mov
arpl
xchg
sbb
test
mov
(bad)
jne
sahf
jnp
jp
or
cmp
daa
cdq
mov
and
xchg
test
call
(bad)
cmp
outs
lahf
inc
popa
jnp
repz
out
test
jns
(bad)
stc
movs
gs
(bad)
cmp
movs
gs
mov
pop
out
mov
fild
lock
repnz
jmp
inc
test
test
in
inc
test
ret
inc
test
movs
test
lock
scas
mov
mov
in
inc
test
test
in
inc
test
test
adc
bnd
jge
adc
bswap
mov
ja
icebp
hlt
ret
inc
test
adc
out
int
test
mov
jns
cmp
mov
test
test
jbe
mov
cmp
sub
xchg
xchg
test
outs
push
and
out
xchg
xchg
test
jnp
jp
sub
adc
repz
inc
test
sbb
jb
je
inc
pusha
jnp
icebp
in
jne
sahf
je
jp
xchg
call
jae
jne
inc
fwait
jp
xchg
cmp
xchg
gs
outs
lahf
jnp
jnp
stc
mov
inc
(bad)
cmp
lahf
inc
test
movs
gs
mov
cli
pop
jnp
push
call
sti
mov
mov
xchg
cdq
cli
pop
jnp
outs
call
sti
mov
mov
xchg
lahf
cli
pop
jnp
jae
nop
push
test
cmp
sub
ret
test
outs
mov
ret
test
sub
pop
xchg
call
dec
fwait
jp
jnp
xchg
sahf
neg
dec
gs
sahf
mov
repnz
xchg
outs
lock
mov
push
push
jbe
mov
sahf
test
xchg
loope
cmp
out
cmp
lock
lds
call
jnp
cmovns
cmps
inc
arpl
jp
push
test
pop
inc
cdq
jp
jnp
pcmpeqw
cmps
inc
gs
jp
push
nop
cli
pop
inc
lahf
jp
jnp
push
bound
mov
int
fnstcw
add
cli
sbb
fwait
push
jge
sub
xchg
xchg
test
test
cmps
mov
scas
inc
test
test
mov
mov
cmp
fist
lock
cmp
mov
jns
aaa
popf
lock
outs
mov
test
(bad)
jne
sahf
cli
daa
mov
jnp
or
cmp
test
(bad)
imul
sahf
test
mov
btr
jp
je
push
call
mov
xor
aas
imul
sbb
sahf
jle
mov
and
icebp
mov
jno
fstp
nop
idiv
repnz
or
mov
jnp
test
cmp
sub
outs
loop
lahf
outs
pop
cmp
int
jae
mov
jne
fstp
repnz
call
adc
and
cld
repz
and
ret
call
repnz
test
cmp
sub
outs
sahf
dec
lahf
outs
pop
cmp
jp
test
cmp
sub
outs
loop
lahf
push
cmp
int
jae
mov
jne
fstp
jnp
jp
je
int
jae
mov
jne
fstp
repnz
repnz
and
test
jbe
lock
repnz
sub
lea
mov
fdivr
inc
sahf
mov
jnp
push
retw
cwde
jp
jnp
or
sbb
and
cld
(bad)
jle
fisub
jnp
repz
jp
repz
adc
popa
jnp
jp
imul
popa
xchg
hlt
or
sbb
xor
call
jnp
jp
jnp
inc
adc
fnstcw
fdivr
not
jp
mov
and
adc
adc
and
inc
pop
fisub
jnp
push
add
xlat
jle
fisub
jnp
mov
adc
ss
cmp
sbb
jle
mov
mov
call
jnp
popf
call
jle
or
jnp
packssdw
cmps
jg
or
inc
popa
repnz
xchg
fild
popa
jnp
lea
dec
lahf
push
cmp
jp
outs
call
mov
outs
in
cmp
pushf
push
popa
jnp
outs
popa
jnp
lea
pop
lahf
outs
pop
cmp
mov
mov
call
pop
lahf
push
cmp
push
outs
stc
jmp
stos
data16
adc
mov
jnp
pop
adc
stc
movs
ja
mov
xor
sahf
mov
jnp
xlat
or
stc
inc
jg
cmp
sbb
jnp
dec
jns
fdivr
fdiv
jp
test
xchg
inc
adc
push
mov
test
iret
repz
jbe
xor
inc
xor
sbb
dec
or
push
mov
or
js
lods
icebp
jp
fcomp
adc
mov
arpl
int
xchg
pop
cmp
jb
or
repz
clc
dec
pop
jnp
adc
fist
stos
cmp
jp
test
jle
cmp
jp
ds
mov
mov
and
xchg
fbld
lahf
test
(bad)
jnp
jp
jle
fisub
jnp
mov
popa
jnp
xchg
jp
call
jnp
aas
mov
pop
aas
lea
gs
gs
jp
loopne
jp
repnz
stc
lahf
test
pushf
pop
mov
jno
outs
int3
fild
jle
or
jnp
packssdw
cmps
jg
or
mov
mov
int3
jp
sbb
sub
push
sbb
mov
out
add
sbb
jp
repnz
call
int3
fild
jle
or
jnp
test
xchg
fbld
and
xchg
int
adc
pop
repnz
outs
jge
fstp
jle
mov
sub
fild
jle
or
jnp
adc
jnp
jp
lock
jp
sub
or
test
loopne
pop
add
cmp
sbb
jmp
daa
loopne
daa
pop
popa
jnp
jg
mov
gs
neg
loopne
xchg
ror
jnp
mov
popa
jnp
popf
call
mov
lahf
out
mov
loope
mov
cmp
inc
pusha
jnp
xor
iret
loopne
xchg
nop
adc
dec
adc
or
fcom
loope
xchg
add
mov
test
out
jo
test
sahf
xchg
sbb
pop
jns
out
or
jp
mov
and
retf
shl
mov
lahf
stc
call
xchg
cmp
call
ds
cmps
cmp
mov
mov
int
test
cs
adc
ins
icebp
mov
outs
pushf
sbb
ds
ds
cdq
and
cwde
loopne
sub
lock
mov
jb
fild
mov
mov
cld
mov
mov
int
test
cs
adc
ins
icebp
mov
outs
pushf
sbb
ds
ds
cdq
and
cwde
call
mov
push
out
test
movs
ja
mov
outs
int3
fild
jg
test
fdivr
jp
cmps
nop
cmp
test
mov
xchg
int
test
push
fs
bound
jae
mov
xchg
adc
jnp
xchg
pop
cmp
jp
int3
fild
int3
(bad)
pop
test
popa
pminub
ds
and
mov
adc
icebp
repnz
call
jnp
or
aas
icebp
sub
jne
and
jnp
mov
stc
mov
bound
repnz
test
cmp
jb
or
repz
repnz
jae
push
xchg
ret
test
adc
sahf
jle
mov
ins
lock
mov
idiv
jnp
push
or
sub
sub
inc
mov
jns
in
popa
sbb
pop
cmp
inc
dec
mov
(bad)
push
jp
mov
push
sbb
test
dec
push
jno
jp
mov
sbb
(bad)
ins
test
(bad)
pop
test
jnp
mov
loop
jbe
popf
test
xor
pop
call
jnp
jp
pop
jmp
jecxz
sbb
test
jg
icebp
and
gs
mov
out
mov
xchg
in
popa
jnp
adc
test
pop
call
lock
dec
jb
push
jnp
repz
test
jnp
(bad)
mov
(bad)
bound
jp
fbstp
int3
fidiv
xchg
pop
sbb
or
popa
jnp
mov
loop
bound
in
fwait
jp
lock
mov
and
call
jnp
push
inc
fcomp
jnp
outs
jmp
sub
and
jp
xor
jp
test
icebp
and
sbb
gs
(bad)
cmp
test
and
mov
cmp
inc
fwait
jp
adc
cdq
test
dec
mov
repz
popa
sbb
repz
test
in
popa
sbb
test
xchg
dec
push
popa
jnp
mov
sahf
test
in
test
jg
jp
clc
daa
mov
(bad)
cmp
jnp
not
mov
cmp
inc
fwait
jp
adc
cdq
test
mov
gs
cdq
test
(bad)
imul
sahf
sub
or
ja
call
call
jp
mov
jno
outs
int3
fild
test
out
(bad)
mov
jle
test
test
int
mov
sahf
inc
dec
add
cli
pop
out
jnp
jne
(bad)
push
call
sbb
test
jp
test
xchg
pop
adc
repz
push
in
jb
into
push
sbb
test
popa
jnp
clc
inc
test
jmp
sub
and
jp
mov
jp
repnz
jnp
repnz
xchg
test
mov
jb
cmp
jne
(bad)
ins
test
cmc
and
jnp
mov
mov
int
test
out
test
sahf
repz
jg
and
test
test
fild
test
movs
loopne
xor
jnp
mov
mov
int
test
out
fs
xchg
test
test
test
fild
test
mov
inc
sbb
ds
nop
mov
jne
out
ins
test
stos
adc
fs
sbb
test
test
test
fild
test
test
sahf
test
in
test
test
mov
out
popa
sbb
ins
test
(bad)
bound
test
sahf
jnp
jnp
ret
push
popa
neg
test
pop
sub
sahf
clc
pop
jbe
test
popa
setae
fcom
out
jg
jl
jp
test
mov
sahf
jp
int3
in
test
cmp
test
test
movs
ja
test
fistp
call
adc
call
xchg
and
sahf
test
mov
popa
jnp
adc
lock
mov
ds
inc
je
aas
lahf
je
out
xchg
test
mov
xchg
test
jle
test
xchg
int
test
test
test
mov
push
jne
(bad)
ins
test
test
repnz
mov
xchg
fld
jp
mov
in
popa
sbb
test
test
fs
pop
cmp
pop
mov
ds
stc
sbb
or
xchg
test
push
(bad)
imul
sahf
repz
aad
and
(bad)
imul
in
(bad)
test
iret
gs
mov
adc
lahf
ret
arpl
jnp
cdq
call
test
mov
pop
test
popa
je
mov
call
test
sub
xlat
push
popa
neg
test
aam
test
mov
test
jnp
jne
(bad)
outs
test
jnp
(bad)
lock
sbb
outs
test
(bad)
test
test
je
aas
lahf
not
jg
test
mov
cmp
inc
fwait
jp
adc
loop
fwait
sub
in
(bad)
cmps
test
int3
daa
mov
inc
imul
loop
xchg
repz
je
call
int3
jle
(bad)
ss
stos
neg
push
sbb
test
pop
mov
and
setne
(bad)
outs
test
test
sahf
cmp
call
ret
inc
push
popa
jnp
cdq
call
test
mov
sahf
sti
daa
aad
and
jmp
sbb
push
popa
neg
test
int3
sub
call
(bad)
test
jnp
jne
(bad)
outs
test
jnp
push
outs
je
call
call
jp
mul
lahf
test
mov
cmp
inc
pusha
jnp
sub
bound
cmc
mov
bound
in
(bad)
test
shl
sahf
sub
or
adc
add
call
xchg
movs
leave
sahf
test
mov
call
ja
jp
cwde
adc
in
and
mov
cmps
test
sbb
jno
inc
jnp
xchg
ja
sub
jg
jnp
test
out
lahf
test
ds
ds
hlt
and
cmp
jnp
jmp
cmp
pop
test
lods
sub
call
test
mov
outs
int3
fild
ud0
pusha
adc
int
test
(bad)
test
sahf
sub
rol
mov
call
test
mov
jmp
mov
fild
test
mov
jbe
test
test
sahf
sbb
sub
sbb
out
or
icebp
xchg
cmp
test
test
movs
ja
mov
fnstcw
repz
popa
sbb
fs
sahf
test
test
push
aas
lahf
neg
jg
test
xchg
pushf
enter
mov
cmps
jns
repz
imul
inc
je
aas
lahf
je
out
xchg
test
mov
xchg
test
jle
test
test
out
cdq
test
inc
dec
push
mov
pop
test
test
cli
pop
jp
sets
pop
sbb
pop
cmp
xchg
mul
test
sahf
sub
jmp
xchg
movs
sbb
jnp
mov
xor
(bad)
call
sbb
xchg
fldcw
popa
neg
test
and
test
test
popa
je
mov
jnp
call
xchg
fmul
sahf
test
mov
test
adc
jp
(bad)
test
retf
loop
xchg
inc
sahf
test
dec
jnp
jp
into
jbe
popf
test
jmp
neg
cmps
call
test
jae
bound
adc
mov
push
fs
bound
test
sahf
push
lea
icebp
jp
jp
(bad)
test
jae
and
stc
movs
ja
mov
call
test
adc
jnp
jnp
call
test
jb
test
pop
jbe
ds
jne
cmp
test
xor
jp
repnz
push
mov
out
pop
cmp
daa
xchg
sahf
xchg
outs
(bad)
push
jp
jnp
jnp
inc
popf
test
mul
test
sahf
sub
rol
call
mov
sbb
in
test
test
mov
cmp
inc
pusha
jnp
sub
test
test
inc
stos
inc
adc
lock
inc
call
xchg
jnp
mov
call
cli
pop
jp
sets
pop
stc
cmps
jp
(bad)
cdq
test
mov
pop
idiv
mov
cmp
inc
fwait
jp
adc
sahf
test
into
bound
aaa
mul
mov
xchg
or
push
popa
mul
cmps
call
jp
clc
pop
push
jle
mov
or
js
dec
les
lock
call
push
inc
repz
test
arpl
int
mov
jb
cmp
call
test
jmp
(bad)
mov
imul
mov
lock
or
jp
(bad)
bound
cdq
test
(bad)
adc
jp
jp
(bad)
test
jae
push
addr16
stc
movs
ja
xchg
jbe
call
jnp
aas
imul
mov
jp
test
jp
repnz
lea
and
sahf
repnz
stc
fcom
out
and
jnp
mov
in
test
test
mov
cmp
inc
pusha
jnp
or
retf
cmps
popa
sbb
cmp
jp
repnz
cli
call
sbb
(bad)
jp
inc
test
jbe
pop
jb
add
stc
movs
jg
aam
(bad)
sbb
xchg
(bad)
cmp
call
jnp
xchg
inc
and
jp
(bad)
jbe
popf
test
test
cmp
repz
and
test
cli
pop
jp
sets
call
test
icebp
sbb
gs
mov
pop
cli
call
sbb
test
inc
test
call
pop
jb
add
stc
movs
jg
fucom
mov
adc
lock
into
bound
sahf
test
lock
or
jp
(bad)
xor
cmc
mov
gs
lds
sahf
xchg
cmp
popa
jnp
dec
inc
jnp
jne
aad
test
sbb
and
xor
jg
jge
sahf
jp
pusha
(bad)
jp
sub
sub
cmp
pop
jne
jnp
test
cmp
inc
dec
mov
mov
sahf
jnp
fist
clc
aas
sbb
iret
sbb
cld
mov
sahf
jnp
mov
popa
jnp
aas
popf
sub
add
jg
icebp
and
or
xor
popa
jnp
call
lahf
out
mov
xchg
xor
popa
jnp
adc
test
pop
call
lock
or
jp
ds
xchg
and
call
mov
bound
loop
test
adc
imul
mov
stc
sub
adc
xor
popa
jnp
jg
mov
data16
jae
aas
imul
adc
imul
mov
stc
sub
adc
in
popa
jnp
xor
repnz
sahf
sahf
xchg
mov
push
enter
mov
sti
lahf
aaa
mov
sti
lahf
cmp
pop
cmp
jae
int
ja
xchg
adc
mov
ja
aas
imul
repz
jg
mov
jb
cmp
popf
mov
popa
je
call
mov
call
jmp
repnz
jae
call
xchg
call
(bad)
jle
call
jne
jmp
repnz
test
test
stos
test
xchg
sahf
repnz
jnp
icebp
push
inc
mov
test
push
pushw
xor
test
bound
data16
cld
mov
sahf
jnp
sti
xchg
(bad)
call
call
jp
jle
mov
xchg
test
popa
push
xchg
pusha
adc
mov
jnp
call
xchg
adc
sahf
test
mov
popa
jnp
jg
dec
cwde
jp
adc
jp
(bad)
test
gs
mov
call
xchg
mov
mov
jp
(bad)
test
gs
mov
xchg
jnp
sysexit
inc
test
out
aaa
outs
int3
daa
xchg
je
call
xor
repnz
test
jne
(bad)
test
pop
push
mov
test
bound
data16
(bad)
test
gs
xchg
add
jp
repnz
dec
mov
xchg
call
neg
xchg
or
jp
test
xchg
(bad)
test
xchg
and
jle
mov
or
push
popa
neg
xchg
loopne
test
test
popa
push
ret
mov
in
xchg
test
xchg
(bad)
test
gs
mov
call
out
ins
mov
jp
inc
test
jo
pop
jb
aas
jnp
and
je
cmp
jb
mov
jae
jnp
adc
ror
test
xchg
mov
mov
mov
cli
test
xchg
push
jp
jnp
(bad)
pop
xchg
sahf
inc
stos
push
gs
mov
pop
popf
pop
jno
lahf
nop
mov
in
test
dec
sbb
jns
jl
inc
out
xchg
xchg
sahf
jnp
mov
in
jmp
sub
repnz
mov
adc
call
xchg
xor
sahf
test
mov
popa
jnp
jnp
or
popa
neg
test
hlt
xor
call
test
test
arpl
call
cs
fwait
jp
stc
mov
call
popa
adc
cdq
test
jmp
xchg
jns
call
jle
mov
call
(bad)
jp
popf
test
mov
in
xchg
xchg
call
lock
dec
jb
ss
repz
xchg
ins
jb
aaa
jnp
inc
push
pop
call
adc
jp
and
jmp
xchg
jnp
das
imul
push
mov
call
jp
cwde
adc
mov
mov
pop
das
call
lock
jbe
mov
ds
inc
pop
dec
es
push
add
jnp
jg
mov
out
cmc
jp
je
ret
jne
popa
sub
call
adc
pop
cli
out
icebp
jp
je
jne
cmp
jb
cmp
call
mov
cmp
inc
fwait
jp
xor
xor
test
jp
mov
lds
es
das
call
jns
jp
sub
(bad)
pop
loopne
ja
popa
jnp
jg
mov
call
jnp
mov
xchg
call
jnp
shl
pop
lea
add
call
repnz
repnz
test
repnz
xchg
repnz
mov
dec
xchg
sub
popa
jnp
int3
sbb
and
call
sbb
repz
out
cmps
test
test
jb
mov
jmp
test
loopne
popa
jnp
mov
outs
mov
gs
cmps
(bad)
pushf
test
jp
repz
neg
test
fwait
sub
popa
adc
and
call
xchg
shl
jnp
jp
jnp
js
jnp
jp
jnp
jp
neg
sbb
pop
mov
and
mov
jp
repnz
xchg
repnz
adc
pop
mov
xchg
adc
iret
xchg
xchg
mov
ret
jp
test
mov
call
jnp
adc
test
and
xor
pop
call
adc
and
call
adc
ds
jnp
test
cmp
xor
cmp
test
jnp
xchg
inc
jnp
jp
mov
adc
push
je
popa
adc
jb
jnp
stc
movs
das
lds
mov
das
call
sub
sub
jl
jmp
jnp
jg
mov
fwait
sub
sbb
popf
jnp
aas
cdq
sub
aas
popf
sub
jp
inc
call
adc
punpckhwd
adc
call
cmp
inc
pusha
jnp
sub
bound
pusha
adc
setge
adc
xchg
lock
popf
xchg
mov
popa
jnp
and
mov
das
call
sub
and
ret
call
repnz
ret
call
repnz
adc
adc
jp
mov
mov
cmp
inc
pusha
jnp
sub
jno
loope
movs
es
pop
ds
jp
xchg
addr16
test
ja
aas
and
xor
jg
xor
mov
xchg
fdiv
popa
jnp
adc
mov
popa
jnp
adc
call
mov
lods
sub
loop
pcmpgtw
xchg
pop
repnz
repnz
adc
call
jnp
adc
fild
sahf
push
xchg
sub
mov
jb
xor
call
sub
ds
mov
adc
aaa
sub
xor
shl
cdq
push
(bad)
adc
jnp
jp
js
jp
js
jp
jnp
test
jb
aaa
jnp
repz
clc
test
sbb
ins
jnp
jl
ds
stc
inc
jnp
adc
call
mov
lock
xchg
enter
adc
or
jb
aaa
jnp
repz
adc
xchg
repnz
adc
out
popa
setb
and
adc
xchg
nop
pushf
mul
adc
xchg
test
mov
test
xchg
xchg
cld
sub
jnp
xchg
iret
push
call
jnp
aas
popf
nop
pushf
repz
jp
repz
and
and
sub
sub
sub
pusha
js
mov
repz
ret
cmp
popa
jnp
popf
call
adc
jp
jg
jp
jnp
jp
jnp
test
jb
aaa
jnp
repz
clc
test
stos
mov
or
jp
xchg
mov
popa
jnp
adc
mov
mov
sti
cmps
jnp
push
arpl
mov
xchg
sub
cld
int3
jp
adc
adc
scas
mov
jnp
xchg
adc
xchg
cmp
popa
jnp
xchg
push
add
jp
jp
jp
and
and
clc
jbe
xor
mov
pop
popa
jnp
mov
loop
jbe
loop
jb
loop
jle
in
push
push
cmp
cdq
jp
jnp
fnstsw
mov
sbb
jno
out
jl
mov
adc
imul
mov
mov
outs
int
test
fidivr
clc
pop
fs
ds
sbb
cwde
pcmpgtw
not
mov
test
cmpxchg
fbstp
int3
fidivr
ds
dec
cli
pop
adc
jnp
jne
ds
aas
lahf
mov
mov
sbb
lahf
jns
jle
push
jb
call
mov
sbb
lahf
jnp
stos
jmp
das
imul
or
call
aam
jnp
lahf
and
inc
jnp
lea
mov
push
push
and
xchg
int
cdq
ins
fwait
call
lahf
adc
ins
je
cmp
iret
jb
int3
enter
xchg
int
cdq
xchg
aad
jp
sahf
jmp
icebp
xor
xchg
int
jae
stos
pusha
ds
mov
scas
adc
push
repnz
cmp
sbb
jmp
add
in
fstp
mov
out
in
dec
movs
pushf
and
imul
mov
lock
call
scas
pop
dec
cs
fdivr
je
jp
mov
neg
fdivr
jl
jp
mov
sti
or
retf
sbb
sbb
push
lea
loope
gs
ds
aas
movs
mov
mov
ds
repz
pop
aas
xchg
jnp
ins
jmp
xchg
int3
xor
mov
jl
ds
jno
aas
xchg
jp
pop
xchg
push
sahf
loopne
bound
push
jnp
mov
retf
jp
js
int3
xor
mov
push
jnp
jp
ds
mov
inc
and
xchg
int3
and
mov
ds
cmp
pop
jp
jnp
and
sahf
cli
and
fwait
jne
cmp
jge
sbb
and
sahf
cli
and
fwait
sti
or
sbb
xchg
int3
and
cmp
out
jbe
fwait
popf
stc
cdq
jle
jle
ds
int
jnp
mov
sbb
jnp
jle
ds
int
inc
xchg
jnp
jp
jno
cmp
out
jle
ds
push
bound
jnp
cli
and
fwait
cli
sbb
xchg
jne
xor
sahf
mov
mov
bound
xchg
inc
fisubr
push
pushf
cli
and
fwait
xchg
imul
(bad)
pusha
sti
out
or
cmp
call
mov
aas
cdq
je
jns
clc
call
test
and
add
or
icebp
jmp
jp
cmp
cmp
and
adc
jmp
out
push
icebp
jmp
jmp
(bad)
icebp
jmp
jmp
(bad)
icebp
jmp
jmp
mov
jmp
and
cmp
cmp
and
mov
in
or
icebp
jmp
data16
jmp
jmp
sbb
pop
mov
out
xchg
icebp
jmp
jmp
std
xchg
call
sbb
jmp
call
jmp
jg
or
jp
push
fisttp
and
icebp
jns
or
icebp
lock
jmp
icebp
xor
jmp
or
mov
inc
push
jmp
or
icebp
clc
pop
jbe
jmp
stc
pop
jnp
jmp
or
icebp
jmp
jmp
gs
cmp
jge
adc
jp
cmp
je
mov
jmp
call
jmp
jmp
call
jmp
jmp
adc
dec
mov
stos
test
jmp
jmp
adc
xchg
mov
jmp
or
cmp
or
icebp
jmp
jge
adc
jmp
fwait
xor
or
or
jp
cmp
jmp
or
fisubr
cmp
adc
dec
mov
stos
test
jmp
jmp
adc
xchg
mov
jmp
or
cmp
or
icebp
jmp
je
mov
jmp
or
or
jmp
mov
mov
lea
sub
lock
repnz
mov
inc
push
mov
repnz
pop
mov
jae
popa
jnp
icebp
and
fwait
mov
xchg
mov
sahf
test
repz
mov
jbe
mov
push
pushf
mov
dec
xchg
in
popa
jnp
aas
mov
gs
popa
jnp
jne
cs
push
dec
jecxz
adc
jmp
mov
and
adc
inc
jmp
lock
mov
jne
imul
jmp
je
jle
inc
js
popa
jnp
imul
xchg
jnp
cmp
aaa
lahf
push
push
bnd
inc
push
mov
adc
jp
jnp
aas
xchg
sub
xor
jne
ds
ds
jnp
sub
aas
xchg
je
das
lahf
jp
sub
adc
and
fwait
mov
xchg
sub
popa
jnp
mov
xor
sahf
call
sbb
sub
mov
sahf
test
and
mov
das
call
sub
sub
gs
xchg
repnz
xchg
std
sub
jns
sub
mov
mov
fs
call
repz
xchg
loopne
out
jle
jnp
inc
in
fdivr
push
xchg
dec
mov
jnp
xchg
retf
jp
ds
sahf
push
xchg
xchg
xor
xchg
repz
inc
cwde
jp
je
pop
mov
cmps
push
xchg
call
jnp
lods
cs
fldcw
jl
and
adc
mov
cmps
adc
js
inc
cwde
retf
jp
adc
jns
(bad)
jl
popa
js
xchg
xor
sbb
and
aas
popf
nop
(bad)
sti
cmps
pusha
sar
inc
jns
xchg
outs
icebp
popf
fdivr
imul
popf
jg
xacquire
call
inc
fild
xchg
call
mov
(bad)
out
cmp
and
jnp
stc
and
sahf
fcomi
popf
fdivr
jle
pushf
and
aas
cdq
or
jmp
ds
xchg
loope
call
test
mov
sub
call
jnp
pop
xor
repz
jb
xor
icebp
sbb
xchg
int
repnz
jne
test
dec
repz
out
cmp
push
xchg
repnz
adc
adc
pushf
and
mov
and
xchg
imul
xchg
fucomi
popf
fdivr
outs
xchg
jbe
pop
hlt
aas
jnp
repz
outs
or
outs
jle
repz
popa
js
test
call
cmp
fisttp
bound
push
je
jl
popa
dec
mov
xchg
mov
stos
adc
out
jl
popa
js
loop
cmp
lods
call
popf
fdivr
int
xchg
mov
adc
fstp
lock
jmp
and
inc
jnp
lea
mov
push
pushf
and
int3
xor
dec
cwde
jmp
icebp
ins
out
cmp
xchg
inc
loope
jne
adc
sbb
mov
int
xchg
retf
js
inc
cld
test
mov
jp
jnp
js
jnp
jp
jnp
jp
test
jb
pop
xlat
jp
repnz
popa
jnp
jp
ds
sahf
push
jp
sahf
push
jle
lods
ss
xor
jnp
jnp
xchg
fnsave
call
and
xor
jg
les
sub
sbb
loop
xchg
ret
call
repnz
icebp
and
cmp
and
jp
cmp
sub
ret
fdivr
xor
popf
sub
jp
stos
sub
popa
adc
and
jp
jnp
pop
sub
call
and
mov
les
or
dec
adc
loop
xchg
ret
call
test
xchg
movs
xor
test
jno
loopne
mov
jnp
int
test
mov
jmp
inc
arpl
bound
fild
jnp
outs
imul
cwde
xchg
jmp
int3
fild
jnp
outs
imul
mov
jae
adc
lock
jb
cmp
xchg
cmp
call
int3
fild
test
xchg
leave
xor
adc
sbb
ret
fdivr
and
mov
xor
sti
and
pop
adc
loop
xchg
ret
call
inc
cld
mov
mov
int
test
mov
jmp
inc
arpl
jl
int3
fild
test
adc
repz
adc
loop
gs
adc
ss
fisttp
ss
repnz
xchg
fild
imul
stc
movs
jae
pop
jno
out
xor
mov
jno
outs
int3
fild
jae
int
test
daa
cld
test
call
mov
movs
sub
jnp
int
test
cli
pop
jl
push
ss
sub
dec
aam
popa
clc
pop
jbe
cmp
call
test
inc
data16
out
jb
int3
fild
test
test
xchg
cmp
popa
jnp
int
test
mov
adc
sti
cmps
jge
push
xchg
jne
ds
and
adc
push
aas
sbb
loop
xchg
ret
call
dec
jb
daa
jnp
adc
call
xchg
sbb
popa
jnp
mov
and
jp
jp
clc
sar
repnz
repnz
and
test
jbe
xor
xor
xchg
xchg
popa
jnp
aas
lea
jp
cli
ins
dec
pop
jnp
icebp
jl
sub
popa
repnz
repnz
adc
inc
call
ret
fdivr
pop
xlat
jp
adc
popf
cmp
sub
popa
clc
dec
popa
jnp
popf
call
sbb
call
xchg
sbb
jnp
mov
or
aas
xchg
sub
mov
fdivr
push
fdivr
cli
pop
and
jnp
adc
scas
stos
sar
call
imul
in
ds
mov
(bad)
jp
clc
pop
(bad)
call
mov
pop
aas
xchg
sub
mov
fdivr
pushf
fistp
repnz
sti
mov
mov
test
push
jp
jnp
ret
pushf
test
mov
daa
repz
jmp
dec
arpl
bound
repnz
mul
retf
adc
pusha
jnp
jns
jae
cmp
repnz
cmp
xchg
push
xor
xor
repnz
cmp
jp
lock
jb
cmp
sub
clc
pop
jb
jge
xchg
loope
call
ds
mov
popa
clc
pop
jbe
sub
ds
cmps
xchg
retf
test
and
mov
das
call
jp
jp
sub
test
xchg
in
popa
jnp
aas
imul
pop
test
jl
jp
clc
pop
jb
sub
sahf
jnp
outs
int
test
(bad)
lahf
test
ja
int3
and
pop
(bad)
test
push
sbb
sahf
jp
call
xchg
lock
xchg
int3
adc
mov
jle
xor
neg
test
mov
pop
sbb
into
data16
xor
neg
test
ror
call
test
lea
outs
call
test
in
test
(bad)
pusha
test
test
jnp
adc
mov
sahf
test
test
jb
sub
mul
test
je
out
popf
test
in
aas
mov
xchg
jo
popa
jnp
mov
sahf
test
and
mov
sahf
test
test
sub
sub
stc
movs
push
adc
sahf
test
test
test
outs
int3
ins
mov
outs
int3
pop
and
xor
jg
lea
jp
sub
sub
sub
pop
push
push
jnp
ret
call
test
call
sti
mov
jnp
(bad)
data16
ja
sub
clc
pop
jbe
mov
jge
in
test
xchg
sub
sub
mov
sahf
test
mul
xchg
sub
aas
imul
push
sbb
test
or
je
popa
neg
xchg
sub
jp
clc
pop
callw
sub
pop
call
xchg
pop
aas
popa
jnp
mov
pusha
clc
popa
jnp
push
dec
cdq
xor
pop
xchg
pop
fnstsw
adc
jp
js
jp
js
jp
jnp
mul
xchg
sub
daa
jnp
repz
repnz
repnz
stc
lahf
test
push
or
cmp
adc
xor
mov
daa
imul
sub
jno
call
mov
enter
retf
xchg
fdivr
out
test
xor
repz
jp
repz
neg
xchg
inc
fnstsw
adc
test
jae
dec
mov
popa
sub
call
bnd
lea
jp
sub
dec
cmp
xor
call
sti
mov
jnp
(bad)
data16
ja
sub
clc
pop
jbe
mov
pop
call
xchg
dec
cmp
jnp
(bad)
and
jno
or
call
lock
mov
pusha
test
(bad)
data16
xchg
fdivr
(bad)
data16
xor
sti
mov
cmp
xchg
sub
and
call
xchg
sub
pop
(bad)
cmp
test
jnp
stc
movs
ja
and
mov
sahf
test
xchg
xor
retf
and
sub
lods
xchg
and
addr16
(bad)
cmp
jp
jnp
adc
fdivr
push
xchg
test
mov
xchg
and
ds
jg
lea
jp
sub
test
popf
call
test
mov
popf
test
xor
fbstp
mov
arpl
cdq
repnz
test
pop
call
adc
xchg
and
call
xchg
mov
mov
lahf
test
mov
fnstcw
repnz
sbb
jl
loop
fwait
pslld
stos
(bad)
in
into
data16
aas
call
test
xchg
mov
pop
push
cmp
adc
call
cmp
dec
mov
fstp
repnz
repnz
xchg
aaa
neg
xchg
adc
jp
jb
push
inc
adc
inc
and
call
cmp
dec
mov
popa
repnz
repnz
xchg
inc
adc
outs
and
call
cmp
dec
mov
jp
cli
ins
push
ss
and
call
jp
jp
sub
fbstp
mov
mov
mov
outs
test
jae
mov
cdq
test
xchg
mov
mov
repnz
test
pop
call
adc
xchg
and
call
xchg
pushf
cmp
jge
pop
mov
or
jp
repnz
repz
sbb
sub
out
outs
test
cmp
cli
popa
jnp
adc
call
cmp
call
xchg
adc
popa
jnp
aas
popf
clc
bound
(bad)
cmp
jp
jnp
adc
fdivr
cs
test
mov
shl
ret
call
test
call
cmp
jp
jnp
adc
fdivr
cs
test
nop
cmp
bnd
jnp
adc
js
popa
jnp
mov
loope
call
jg
stos
pop
jnp
repz
ret
daa
and
call
test
mov
loop
packsswb
fild
adc
jb
and
xchg
fdivp
fbstp
or
jp
xchg
dec
add
repnz
call
xchg
fdivr
push
xchg
test
adc
popa
jnp
xchg
sbb
call
cmp
add
cmp
sbb
xor
and
repz
push
(bad)
repz
lock
inc
mov
push
adc
test
cmp
xchg
nop
lea
loop
xchg
sti
cmps
add
lahf
test
mov
popa
mov
test
movs
adc
pop
mov
mov
jb
xchg
test
cdq
mov
in
test
ja
call
adc
xchg
and
call
xchg
movs
aas
popa
jnp
mov
loope
call
js
jp
jnp
mul
(bad)
test
jnp
repz
sbb
jno
fdivr
(bad)
jp
adc
cmp
test
jp
sbb
jge
in
test
jnp
jp
jp
cmp
loopne
popa
jnp
jp
adc
dec
mov
movs
jp
repnz
repnz
adc
call
jnp
repz
adc
adc
call
clc
fstp
repnz
lahf
test
cmps
clc
out
popa
jl
xchg
test
jle
push
movs
jp
repnz
repnz
xchg
movs
test
jle
fsub
xchg
and
jae
jnp
adc
repnz
cwde
inc
popa
jnp
adc
gs
mov
call
cmp
mov
adc
popa
xchg
and
popa
jnp
sub
shl
js
call
test
mov
jnp
neg
pop
test
cmp
jp
ficomp
xchg
jne
call
xchg
adc
popa
jnp
jp
adc
and
pop
imul
call
xchg
lock
mov
outs
test
nop
cmc
xor
ins
jnp
addr16
(bad)
loop
lahf
test
adc
(bad)
loop
lahf
test
xchg
lds
call
test
jbe
(bad)
loop
lahf
test
adc
loop
lahf
test
xchg
in
call
shl
jp
clc
out
popa
push
test
mov
fdivr
jl
jp
adc
cmp
out
sahf
or
xchg
popf
inc
call
test
neg
mov
in
(bad)
loop
lahf
test
xchg
cmp
(bad)
test
jnp
(bad)
xlat
jnp
jp
and
(bad)
call
test
in
(bad)
pop
test
inc
call
jnp
dec
je
(bad)
fild
sub
test
je
call
test
xor
rol
cwde
neg
inc
loop
lahf
test
test
fwait
test
test
xchg
test
test
out
adc
jmp
push
int
hlt
xchg
fdivr
(bad)
sub
cmp
repz
neg
retf
sub
adc
test
jae
or
popa
jnp
jmp
test
(bad)
lahf
test
icebp
inc
call
jnp
jp
nop
inc
jns
jnp
call
test
xor
pop
mov
mov
cmps
jp
neg
xchg
lahf
test
outs
int3
pop
rcr
pop
ret
sub
pop
int3
lahf
test
outs
int3
daa
enter
mov
pop
add
sub
iret
add
sbb
sahf
imul
pushf
test
fmul
test
mov
mov
call
sub
mov
movs
pop
sbb
in
(bad)
sub
inc
call
retf
test
test
jle
sub
test
test
enter
repnz
push
mov
jae
or
and
jnp
mov
call
xchg
fdivr
push
xchg
test
mov
jnp
and
mov
das
call
jp
jp
sub
adc
ins
les
dec
js
call
test
cmps
ret
cmp
popa
jnp
popf
call
test
mov
fwait
test
xor
push
mov
mov
loop
xchg
cli
pop
push
xchg
push
jnp
jp
add
jp
jnp
add
xchg
jmp
jnp
jp
(bad)
pusha
test
inc
call
dec
pop
xchg
js
call
jnp
mov
mov
movs
jp
repnz
sbb
cs
and
lahf
sti
out
jge
out
dec
call
mov
pop
(bad)
and
lock
mov
mov
fwait
test
xor
sbb
popa
jnp
xchg
lea
jp
test
test
fild
mov
call
add
mov
nop
cmp
test
jnp
stc
movs
ja
mov
xchg
pop
xchg
lahf
test
cmps
nop
(bad)
sbb
(bad)
sub
mov
cmp
test
jnp
stc
movs
ja
mov
mov
mul
and
cmp
test
jnp
stc
movs
imul
push
adc
in
(bad)
pusha
test
inc
call
adc
xor
pop
sbb
imul
xor
and
les
test
iret
repz
jbe
xor
and
repz
jp
repz
adc
cmp
cmp
pushf
jp
adc
mov
xchg
cld
inc
popa
jnp
mov
xchg
jns
repz
push
(bad)
cmp
sub
pop
jnp
repz
repnz
mov
inc
call
neg
mov
test
jle
call
bound
ins
jnp
jbe
push
mov
jae
test
push
xchg
jnp
ja
(bad)
sub
gs
movs
jae
mov
loop
xchg
js
pop
gs
sub
gs
movs
jae
arpl
imul
xor
jnp
jp
adc
dec
mov
mov
jle
pop
mov
lea
mov
pop
das
call
jle
jp
sub
and
sti
cmps
icebp
mov
repnz
repnz
ret
call
and
mov
call
jnp
adc
xchg
fdivr
dec
jb
pop
jnp
adc
call
xchg
xor
jp
mov
adc
loop
pcmpgtd
jb
xchg
test
cmps
jmp
jp
(bad)
sbb
out
popf
and
sub
(bad)
push
sahf
test
mov
popa
xchg
xor
pop
xchg
test
adc
xchg
fdivr
(bad)
call
repnz
mov
call
add
popa
neg
jp
test
mov
sahf
clc
pop
jbe
call
jp
xchg
xor
jnp
or
pop
jp
test
mov
pop
jbe
test
popa
je
xchg
and
jmp
test
xchg
inc
repnz
test
mov
popa
xchg
popa
lock
xchg
sub
sub
hlt
jns
jnp
and
ds
je
sub
call
jbe
(bad)
test
call
jnp
aaa
sub
mov
jp
xchg
in
popa
jnp
cmp
fbstp
push
sahf
jp
add
inc
and
call
js
jnp
sbb
call
call
popa
jnp
sub
call
daa
in
pop
sub
xor
pusha
jnp
add
sub
jp
push
sahf
jp
inc
retf
sub
jp
addr16
jp
inc
(bad)
xor
das
xchg
(bad)
scas
jnp
jp
imul
in
cdq
jp
xchg
gs
jnp
sub
sub
jne
or
jns
jnp
jg
emms
cmp
pop
jp
test
mov
jbe
test
popa
psadbw
addr16
xchg
and
out
popa
xchg
xor
sbb
popa
jnp
xor
sahf
test
mul
jnp
test
test
and
xchg
lock
data16
pop
jbe
xchg
sbb
popa
jnp
mov
and
outs
pop
jnp
adc
repnz
xchg
dec
popa
jnp
add
jno
fdivr
mov
sub
imul
test
jp
sbb
bound
cli
sbb
jne
sub
jg
test
adc
sbb
xchg
or
jnp
test
jnp
repz
pusha
test
jnp
mov
sahf
jg
jp
nop
test
in
pusha
test
jg
out
je
test
xchg
sahf
(bad)
jb
sahf
test
inc
(bad)
jb
sahf
test
test
sahf
test
adc
jb
call
outs
in
(bad)
call
sub
jp
xchg
inc
sbb
repnz
xchg
xlat
jns
jp
add
jmp
gs
mov
leave
xchg
xlat
and
mov
xchg
xchg
or
jnp
add
out
outs
in
(bad)
call
sub
js
xchg
or
ins
repnz
repnz
xchg
or
jp
(bad)
call
sub
xchg
mov
gs
mov
fdiv
mov
adc
xchg
and
call
xchg
mov
mov
inc
jnp
mul
xchg
sahf
sub
pop
jnp
adc
pop
out
popf
and
ror
mov
jp
adc
repz
jnp
adc
repnz
(bad)
cmp
dec
popa
jnp
mov
call
jnp
pop
in
(bad)
call
sub
xchg
sub
xchg
ret
call
and
pusha
jnp
adc
fdivr
inc
mov
sub
imul
test
jp
ficomp
jle
test
adc
xchg
loop
lahf
sub
xchg
sbb
imul
call
inc
je
popa
xchg
ins
dec
popa
jnp
jp
adc
dec
mov
jnp
jnp
or
mov
popa
xchg
dec
dec
popa
jnp
jp
adc
xchg
and
dec
mov
jne
imul
jp
cmp
popa
xchg
xor
popa
jnp
jp
adc
xchg
and
dec
mov
test
xor
xchg
jae
call
xchg
adc
jnp
jp
adc
dec
mov
test
add
jnp
popf
call
test
mov
popa
repnz
stc
mov
xchg
fdivr
(bad)
data16
call
cmp
jp
pushf
adc
test
pop
call
xchg
test
popa
jnp
jp
test
fwait
test
sahf
dec
jb
push
jnp
xchg
sti
jnp
jp
push
ja
popa
xchg
mov
jnp
jp
adc
dec
mov
jp
cli
jne
pop
jnp
xchg
sbb
pop
jp
test
mov
mov
test
mov
pop
popa
jnp
and
(bad)
pushf
xchg
adc
mov
jnp
adc
repnz
mov
call
jnp
arpl
imul
popa
jnp
jp
adc
dec
mov
test
popa
cli
ins
mov
js
sahf
xchg
and
jmp
jnp
adc
bnd
cmp
dec
popa
jnp
adc
mov
sahf
and
and
sub
sub
sub
cld
das
jp
ret
call
repnz
test
lock
jp
adc
repz
repnz
call
jg
mov
aaa
xchg
pop
dec
popa
jnp
mov
popa
jnp
mov
pusha
adc
ds
adc
popa
jnp
sub
(bad)
in
out
sbb
jmp
repz
sbb
test
adc
rol
mov
or
dec
popa
jnp
jmp
movs
jbe
popa
sub
push
jnp
repz
jnp
adc
into
pop
test
jnp
repz
test
jnp
iret
movs
test
mov
mov
test
mov
xchg
pop
jp
jnp
(bad)
loopne
call
test
push
inc
sahf
test
aam
cmp
pop
push
jnp
repz
dec
(bad)
cmp
out
arpl
inc
sahf
test
test
stos
test
test
mov
neg
mov
sahf
into
dec
test
test
push
xor
pop
test
lods
lahf
test
in
test
test
outs
int3
pop
lods
lahf
test
aaa
adc
xchg
xor
mov
(bad)
test
stos
test
jnp
adc
mov
sahf
test
push
jnp
jne
dec
test
and
mov
das
call
jnp
xchg
ror
xor
and
dec
pop
mov
xchg
dec
push
cmps
dec
inc
sti
xchg
cld
cmc
jp
clc
inc
sbb
jp
cli
je
xor
call
jnp
jp
data16
dec
call
push
data16
jnp
push
jae
lods
xchg
lea
mov
push
xchg
repnz
adc
fild
popa
adc
pop
push
jnp
jae
je
in
jnp
stc
sbb
call
xchg
adc
call
cmp
push
xchg
repnz
stc
sbb
call
dec
inc
cmp
jnp
aas
popf
sub
jp
jnp
mul
xchg
test
jo
cmp
push
test
push
(bad)
bound
cdq
add
test
repnz
xchg
pop
mov
test
cmps
neg
xchg
test
in
(bad)
add
retf
dec
call
neg
xchg
test
sahf
dec
jb
dec
jnp
repz
jp
repz
dec
inc
xchg
jne
movs
jp
je
dec
mov
jp
nop
xchg
sti
(bad)
cwde
cmp
test
and
mov
jle
adc
aaa
sub
punpckhwd
(bad)
push
or
mov
repnz
repnz
sub
sub
jp
inc
inc
or
cmp
repz
call
jnp
(bad)
sub
call
stos
xchg
out
mov
ds
repnz
pop
jnp
lea
mov
les
test
iret
repz
jbe
gs
sub
sub
punpckhwd
add
adc
loopne
call
js
jp
jb
vmread
jp
xchg
cwde
jg
jnp
xchg
inc
jns
jp
mov
popa
jnp
call
adc
cmp
call
jnp
xchg
mov
sbb
or
jp
neg
jp
test
sahf
dec
jb
dec
jnp
repz
popa
test
jg
mov
mov
jp
adc
test
jecxz
cmp
in
jb
sub
jp
ret
cmps
dec
popa
jnp
popf
call
test
mov
popa
jnp
dec
mov
jnp
call
call
jp
sub
(bad)
bound
or
jbe
popa
neg
jp
test
mov
jp
clc
pop
jb
mov
fidivr
adc
xchg
xchg
dec
call
and
repnz
repnz
sub
adc
xchg
xchg
push
call
repnz
repnz
adc
adc
popa
xchg
xor
sbb
in
call
test
mov
stos
jp
clc
bound
push
jp
jnp
fistp
repnz
repnz
mul
xchg
sahf
sub
cld
lea
call
clc
pop
jl
xchg
fs
popa
jnp
mov
call
push
lea
call
jnp
adc
dec
jb
dec
jnp
sti
mov
cmp
jnp
xchg
out
and
sbb
mov
les
xchg
and
ja
outs
xor
outs
sbb
into
sbb
div
jnp
test
jnp
stc
movs
imul
popa
xchg
xor
lock
test
popf
test
sahf
dec
jb
dec
jnp
xchg
push
repnz
repnz
mul
jnp
test
jnp
adc
jbe
xor
(bad)
popf
test
sahf
or
call
jnp
jge
test
aas
and
gs
repz
jbe
xor
dec
pop
fstp
jge
and
adc
or
call
shr
jbe
add
jp
mov
and
adc
or
or
call
repnz
repnz
jne
ds
sub
repnz
sbb
cs
cmps
ds
popa
adc
sub
jb
push
ja
jb
dec
jnp
repz
mov
and
adc
popa
jnp
adc
mov
call
mov
call
ds
repz
neg
xchg
neg
xchg
xor
jb
dec
jnp
repz
clc
inc
popa
jnp
pop
popf
repnz
out
call
clc
out
imul
stc
sbb
nop
pshufw
xchg
cmp
bound
call
jnp
lea
adc
mov
scas
jg
std
fstp
sub
ds
repz
neg
xchg
xor
call
push
data16
pop
jle
imul
sub
ins
repz
xchg
in
call
jnp
adc
pop
xchg
xor
mov
jg
das
call
(bad)
into
js
adc
call
jnp
punpckhwd
in
and
jp
jnp
cmp
call
ret
es
popa
jnp
popf
call
and
mov
lea
leave
sub
lock
jb
call
pop
pop
and
repz
push
(bad)
push
xor
call
jnp
aas
fnstcw
jp
clc
dec
popa
adc
mul
retf
clc
pop
jbe
xchg
in
push
popa
jnp
or
mov
shr
adc
in
ds
adc
mul
retf
clc
pop
push
xchg
fcom
lock
aas
(bad)
jb
push
jnp
stc
movs
ja
mov
cmps
ds
jnp
icebp
and
adc
cdq
lock
call
mov
and
adc
and
pop
aas
mov
jp
sbb
call
(bad)
retf
adc
adc
call
jns
jb
data16
in
data16
xchg
and
adc
jl
popa
jnp
mov
cmc
repnz
xchg
in
popa
jnp
psubw
gs
xchg
mov
popa
jnp
xchg
ror
jp
push
ss
inc
push
call
push
call
jg
mov
push
xor
and
xor
jg
aaa
sub
punpckhwd
xor
or
mov
test
jp
or
call
push
call
jnp
jnp
or
call
push
call
xchg
and
jnp
mov
xchg
fild
test
iret
repz
repz
jp
repz
test
outs
mov
jp
adc
test
gs
test
jb
dec
call
es
das
call
add
call
mov
pop
aas
jne
gs
test
jbe
push
xchg
xchg
addr16
jp
mov
iret
repz
jbe
les
or
mov
popa
jnp
aas
cdq
sub
aas
popf
sub
jp
jge
js
adc
test
punpckhwd
xchg
mov
mov
vmwrite
adc
out
push
push
xchg
or
jp
mov
xchg
pop
push
call
in
out
popa
mov
and
adc
inc
push
call
mov
jbe
aaa
sub
pcmpeqw
fbld
repnz
into
mov
dec
inc
jnp
repz
dec
(bad)
jp
sub
ds
cmps
neg
xchg
adc
jp
push
xchg
test
jb
dec
jnp
jae
setle
nop
mov
sub
jnp
jp
push
mov
dec
jnp
jae
setbe
dec
jnp
dec
mov
xchg
dec
jnp
repz
mov
and
adc
ds
jg
xor
add
mov
sbb
popf
fdivr
btr
xor
adc
cdq
repnz
repnz
fisttp
bound
push
dec
pop
cmp
cmp
jp
jnp
mov
popa
adc
xchg
and
cmovge
(bad)
sub
adc
stos
mov
mov
mov
popa
repnz
popa
mov
and
adc
aas
mov
ret
ret
push
loopne
xor
popa
jnp
ds
jg
outs
push
xchg
fdivr
sub
sub
sub
daa
imul
adc
jmp
inc
ins
push
cmps
repz
push
push
cmps
lock
xor
(bad)
xchg
int3
push
popa
jnp
mov
inc
jnp
repz
push
fbstp
mov
inc
(bad)
jp
repnz
stc
mov
sti
cmps
inc
popa
push
sub
sbb
call
push
xor
bound
push
popa
jnp
mov
ds
cmp
ds
sub
repnz
sti
xchg
test
jp
jb
push
jp
inc
jns
ja
test
jb
inc
jnp
icebp
and
fwait
or
adc
es
das
call
sub
sub
and
inc
jno
and
ins
push
mov
aas
(bad)
repnz
popa
jnp
aas
cdq
lock
and
ins
pop
mov
fistp
sbb
dec
popf
loop
xchg
sub
dec
jnp
repz
stos
mov
dec
sbb
imul
clc
push
jmp
push
bound
test
out
mov
inc
call
jnp
xor
out
outs
int
inc
call
jnp
jecxz
adc
loop
sti
sub
and
popa
jnp
shr
pop
xor
cdq
pop
nop
(bad)
lods
sbb
xchg
sub
push
lea
call
clc
pop
outs
pop
test
test
fild
lock
mov
inc
call
jnp
sub
lds
mov
adc
test
xchg
popf
adc
add
test
test
jbe
stos
dec
test
mov
stos
mov
popa
clc
daa
xchg
jbe
xchg
add
mov
call
jnp
repz
xchg
jnp
fistp
inc
pushf
test
(bad)
mov
mov
test
xchg
jg
jp
adc
xchg
jno
call
test
imul
call
xchg
cmps
test
jb
jg
jp
xchg
enter
sbb
ds
repz
xchg
test
cli
pop
jp
sets
pop
adc
rsm
sahf
xchg
fwait
sub
sbb
pop
lea
call
jnp
stc
movs
jae
(bad)
test
pop
or
push
xchg
and
iret
cdq
test
jo
jp
clc
pop
outs
or
jno
popa
test
outs
jmp
adc
nop
fdivr
xchg
je
popa
jnp
mov
popa
je
jbe
jnp
mov
sahf
jnp
jp
xchg
jp
popa
jnp
xchg
sub
call
test
xchg
(bad)
push
test
test
test
xchg
(bad)
and
adc
lods
test
(bad)
(bad)
push
test
adc
popa
loop
and
sti
sub
and
popa
jnp
shr
pop
xor
cdq
pop
nop
(bad)
xchg
mov
pop
sbb
mul
jp
test
or
cmp
daa
jp
test
mov
jp
clc
pop
outs
sahf
(bad)
push
test
addr16
jnp
jp
stc
loopne
sahf
test
xchg
test
push
xor
jnp
test
test
adc
xchg
and
xchg
jne
call
jle
jp
popf
adc
movs
test
call
test
loope
call
test
call
(bad)
push
test
gs
(bad)
jbe
pushf
test
pusha
jnp
icebp
and
adc
popf
test
mov
jae
pusha
jnp
cli
fdivr
test
jnp
jp
mov
adc
jge
call
test
clc
call
test
(bad)
jbe
pushf
test
aas
jns
mov
add
out
push
loope
cwde
jp
adc
ret
xchg
and
call
xchg
cld
push
popa
jnp
mov
xor
imul
mov
sahf
clc
push
test
sti
cmps
jnp
push
arpl
cmps
sbb
addr16
(bad)
call
(bad)
jo
pushf
test
(bad)
mov
sahf
sub
inc
jnp
sti
cmps
cmps
xchg
jp
neg
mov
jne
test
(bad)
push
lahf
test
in
(bad)
call
and
repnz
mov
(bad)
test
into
push
lahf
test
call
adc
xchg
and
xchg
mov
mov
push
cmps
test
mov
pop
call
test
jmp
test
test
xchg
movs
pusha
test
(bad)
test
inc
sahf
test
test
aam
test
jnp
mov
xchg
repnz
adc
call
adc
punpckhwd
adc
test
test
jnp
adc
daa
mov
test
sbb
xchg
jnp
mov
adc
test
inc
jnp
test
and
xchg
sub
popa
jnp
mov
adc
jnp
dec
jge
mov
call
adc
popa
jnp
lds
xor
sahf
jnp
cmp
call
test
mov
xor
adc
and
call
xchg
pop
pop
popa
jnp
jp
bnd
popa
neg
test
jp
jp
xchg
lahf
sbb
ins
test
call
test
jp
inc
jo
popa
adc
nop
and
jnp
jnp
xchg
mov
aas
imul
adc
and
xchg
mov
call
jmp
loopne
arpl
popa
jnp
mov
adc
popa
jnp
sub
les
ret
and
or
mov
sahf
test
repz
lock
inc
fwait
jne
mov
pop
jmp
adc
jp
jp
repnz
neg
call
xchg
call
ds
repz
clc
pop
jg
xchg
or
popa
jnp
das
imul
adc
rol
popf
call
test
mov
popa
jnp
call
into
cmp
inc
jnp
icebp
xor
adc
adc
das
nop
jg
das
cwde
jnp
repnz
pushf
test
mov
jp
repnz
or
test
pop
popa
jnp
dec
into
add
inc
jnp
icebp
xor
adc
adc
nop
jg
div
xchg
jp
arpl
repz
repz
mov
jnp
adc
fdivr
out
pushf
test
cdq
dec
(bad)
adc
pop
ficomp
mov
pop
popa
jnp
xchg
pop
pop
call
neg
into
pushf
test
or
jae
popa
adc
xchg
and
js
jnp
xchg
jae
gs
mov
mov
in
mov
xchg
sbb
jp
xor
pushf
test
gs
jp
(bad)
data16
iret
test
mov
jnp
test
out
test
jmp
test
repnz
test
aam
test
ficomp
xchg
and
mov
test
(bad)
sub
call
dec
pop
xchg
fs
jp
fdiv
popa
neg
xchg
loopne
jp
repnz
repnz
mul
iret
test
call
xchg
sbb
jnp
lahf
xchg
test
in
test
test
adc
ret
test
jnp
stc
movs
sbb
call
test
jp
jnp
inc
jnp
jp
mov
gs
cli
ins
and
call
jnp
popw
mov
gs
repnz
repnz
mul
ret
test
test
in
(bad)
xchg
ret
test
jnp
pop
or
jp
jnp
call
adc
jp
mov
call
test
inc
jnp
ret
call
xchg
call
xchg
or
push
xchg
and
call
xchg
sbb
popa
jnp
mov
pushf
test
mov
mov
in
(bad)
data16
xchg
fdivr
cmp
jp
repnz
jae
push
adc
mov
jp
sti
pop
adc
icebp
xchg
mov
mov
sbb
xchg
cmp
jp
mov
(bad)
icebp
xchg
popa
seto
popa
mov
jp
adc
call
sub
inc
jnp
adc
jmp
and
call
xchg
nop
adc
ins
inc
test
out
push
loop
push
xchg
jp
repz
nop
xchg
(bad)
out
test
adc
mov
(bad)
xchg
popa
cli
jne
or
mul
iret
test
cmovo
sub
cmp
jnp
repnz
adc
das
ficomp
call
test
jle
call
nop
pushf
repz
jp
repz
and
and
bnd
lea
sub
lock
outs
fisubr
mov
repnz
call
mov
push
mov
sahf
push
xchg
xchg
test
jp
mov
gs
xchg
dec
pop
popa
jnp
mov
call
ds
cmps
sub
inc
jnp
repz
je
aas
lahf
je
das
popf
jp
jne
cs
jnp
je
das
xchg
neg
push
sub
jp
cld
test
repnz
dec
mov
je
mov
addr16
ins
jo
jnp
adc
fbld
repnz
xor
sbb
call
sub
jl
call
test
jbe
int3
fild
sub
jl
call
test
ds
int
xchg
ds
retf
call
aas
lahf
neg
jl
je
das
popf
jp
jne
cs
mul
pop
xchg
neg
xor
call
adc
pop
popa
jnp
mov
call
xchg
pop
gs
jnp
aas
cdq
sub
xchg
mov
xchg
xchg
fs
jnp
and
mov
aas
and
xor
jg
sub
mov
xchg
sub
sub
xchg
push
or
call
mov
pop
(bad)
fstp
call
(bad)
and
in
(bad)
es
jp
sahf
sub
pop
mov
call
mov
or
jnp
or
mov
add
jae
push
add
test
jbe
sbb
cmp
sbb
call
sbb
in
(bad)
es
jp
sahf
sub
xchg
lds
jp
mov
das
mov
jns
call
push
add
test
jbe
je
jp
repnz
repnz
dec
mov
shr
xchg
cmp
jp
and
adc
popa
xchg
pop
popa
popa
jnp
sub
lock
jb
mov
mov
cdq
repnz
dec
cdq
repnz
sub
jg
jp
xchg
pushf
addr16
jnp
dec
js
call
test
cmps
repnz
test
cli
pop
jp
sets
pop
adc
imul
jb
or
gs
movs
jae
pop
lea
call
clc
pop
jb
push
xchg
test
repnz
mov
(bad)
call
pop
call
jp
repz
adc
adc
call
xchg
in
addr16
jnp
mov
popa
jnp
jmp
test
xchg
mov
popa
jnp
jp
into
movs
sahf
test
sub
into
call
jo
jp
sub
jge
call
ret
fwait
jp
jnp
push
call
test
call
mov
pop
das
call
jg
jp
sub
xor
loopne
ss
popa
jnp
(bad)
xchg
popa
repnz
repnz
dec
xchg
lock
jb
mov
leave
xchg
fldenv
jp
cs
div
out
test
push
cdq
repnz
xchg
popf
pusha
call
jnp
mov
dec
call
and
mov
call
(bad)
cmp
pusha
adc
or
jp
(bad)
xchg
fs
neg
into
pushf
test
or
jae
popa
adc
xchg
and
js
jnp
xchg
(bad)
mov
loop
mov
mov
gs
jp
(bad)
data16
iret
test
or
call
test
ficomp
xchg
test
loop
xchg
jae
je
(bad)
arpl
adc
xchg
fdivr
(bad)
data16
fs
jnp
call
xchg
xor
pop
xchg
sub
jp
xchg
and
stc
xchg
loopne
nop
pop
popa
jnp
or
(bad)
fld
js
popa
jnp
mov
cdq
repnz
mov
sahf
aas
call
test
popa
jnp
stc
fsub
test
pop
pop
mov
gs
ret
movs
inc
popa
jnp
popf
call
test
mov
sahf
test
xchg
or
ficomp
and
adc
adc
call
sub
jp
test
jne
repz
jp
test
rcr
call
mov
test
mov
push
xchg
and
call
xchg
lock
jnp
mov
call
(bad)
into
jns
jp
(bad)
data16
xchg
fdivr
push
xchg
repnz
jae
push
adc
mov
cmp
test
jmp
sbb
adc
xchg
jnp
jnp
jp
jnp
xchg
pop
pusha
call
neg
jmp
push
popa
popa
jnp
mov
or
or
jmp
test
test
movs
ja
test
mov
jp
neg
neg
xchg
or
sahf
test
mov
in
call
out
test
neg
xchg
cmp
pop
out
test
sahf
into
push
xchg
test
cmps
repnz
repnz
test
out
test
popa
popa
jnp
test
cmp
jp
adc
and
xchg
shl
jp
mov
mov
mov
fdivr
test
out
test
mov
repz
into
push
xchg
test
movs
ja
gs
xchg
push
sub
test
out
test
mov
ins
repnz
repnz
sub
enter
repnz
repnz
mov
sahf
jp
jp
neg
into
pushf
test
mov
bound
repnz
adc
das
ficomp
call
mov
test
lock
out
test
aas
and
gs
repz
jbe
xor
and
repz
dec
(bad)
repz
adc
popa
jnp
aas
xchg
test
jbe
inc
cmp
iret
mov
das
cwde
push
adc
xchg
jge
call
dec
lea
sub
jnp
call
jp
xchg
inc
ins
call
mov
call
jnp
adc
fidivr
jnp
jp
jo
jp
repnz
adc
jnp
ret
call
repnz
mul
retf
ror
xor
icebp
and
jno
fnstcw
jge
and
adc
mov
sub
sub
les
cmp
call
jp
push
loop
cwde
push
jl
bound
or
xor
test
jb
jnp
call
xchg
mov
mov
cmp
jmp
test
xchg
mov
jnp
jp
or
jp
or
xchg
and
xchg
loope
call
push
(bad)
ins
popa
jnp
jnp
test
or
add
in
jnp
fst
gs
movs
jae
gs
push
mov
ins
test
jb
and
jp
nop
xchg
ret
call
repnz
and
jno
iret
repz
leave
sub
lock
jb
adc
sbb
ins
sbb
call
jnp
sub
lods
cmp
into
jl
repnz
xchg
sub
lahf
test
movs
jae
mov
xor
lock
xchg
(bad)
jp
cli
pop
xor
call
jnp
repz
jbe
les
lea
call
push
fstp
lods
xchg
jp
nop
test
and
retf
bound
jp
mov
and
adc
mov
jp
adc
mul
retf
bound
mov
nop
pushf
sti
cmps
call
push
mov
test
repnz
popa
jnp
push
je
call
shl
repz
jp
repz
cli
ins
cld
sbb
sti
cmps
and
jp
cli
je
add
ret
call
(bad)
gs
mov
fdivr
stos
mov
test
cmp
ins
xor
call
xchg
int3
pusha
popa
jnp
loope
test
fnstsw
call
test
xchg
bound
xchg
fldenv
jp
mov
ins
test
mov
call
sti
adc
popa
neg
mov
enter
ret
shl
popa
jnp
pushf
call
test
mov
sahf
test
mov
cmp
inc
pusha
jnp
sub
sbb
xchg
mov
add
call
jnp
jmp
ins
test
cmp
test
mov
out
jo
retf
add
ins
popa
jnp
loope
cmp
jp
fnsave
popa
neg
xchg
hlt
cmp
push
xchg
repnz
adc
pop
xchg
daa
and
(bad)
call
test
jle
jnp
mov
popa
jnp
mov
fadd
xchg
(bad)
(bad)
js
jp
(bad)
data16
ret
call
mov
jp
(bad)
data16
pop
gs
mov
adc
sti
(bad)
gs
xchg
xchg
dec
popa
jnp
int
loope
test
jnp
(bad)
adc
jp
int3
pop
loopne
test
in
data16
jmp
cmp
push
test
sti
cmps
jnp
push
arpl
cmps
clc
pop
js
adc
jp
(bad)
data16
sbb
mov
cdq
jp
dec
call
test
(bad)
inc
mov
xchg
sahf
sub
(bad)
cli
lahf
test
xchg
enter
sbb
inc
sahf
sahf
test
mul
jnp
test
jnp
xchg
adc
test
outs
inc
jnp
jnp
(bad)
sahf
xchg
pop
je
xor
jnp
mov
sahf
jnp
xchg
lods
cmp
sbb
fdivr
(bad)
data16
arpl
stc
fadd
out
push
mov
jp
rcr
sbb
repz
jl
cmp
repz
adc
cdq
test
out
cwde
jp
cli
pop
inc
pop
jnp
stc
pop
mov
cmp
out
xor
jnp
jp
neg
xchg
lods
mov
ret
xor
jnp
pushf
call
test
mov
sahf
test
adc
xchg
fdivr
(bad)
data16
ins
call
neg
xchg
cwde
lea
clc
pop
outs
mov
bnd
jnp
mul
xchg
sahf
sub
jb
call
neg
xchg
or
popa
neg
xchg
lock
adc
xchg
and
call
xchg
add
popa
jnp
mov
lahf
test
mov
jp
ret
sbb
pushf
call
test
mov
sahf
test
mov
popf
and
adc
xchg
and
call
xchg
mov
mov
in
bound
jne
call
adc
jp
(bad)
data16
sbb
loop
xchg
jae
je
push
pusha
jnp
mul
xchg
sahf
clc
pop
jg
xchg
cmp
ret
repz
bound
outs
std
xlat
jnp
jnp
jg
mov
mov
test
cmp
das
sbb
fdivr
cmp
cmp
pop
xchg
int3
mov
clc
pop
push
lea
popa
jnp
mov
cmp
test
jnp
mul
xchg
sub
jne
call
nop
mov
test
test
dec
push
mov
in
outs
test
test
popa
nop
xchg
test
jecxz
test
test
push
stos
gs
cdq
and
(bad)
data16
xchg
fdivr
(bad)
data16
ins
call
jp
repz
neg
xchg
mov
pop
out
xchg
test
fadd
jb
jb
call
mul
jge
sub
cmp
repnz
mov
jnp
jp
neg
xchg
into
outs
sbb
call
sub
jb
call
sub
(bad)
xchg
and
pop
popf
jnp
xchg
hlt
push
jnp
call
adc
test
jnp
jp
jnp
and
call
repnz
xchg
repnz
mul
xchg
sahf
sub
test
mov
sahf
xchg
and
ins
repnz
jae
je
popfw
test
aam
bound
popa
jnp
mov
ds
call
(bad)
ret
cli
ins
pop
cmp
out
pop
cmp
dec
pop
cmc
mov
push
mov
iret
push
call
jnp
jp
movs
cmp
call
jnp
xchg
test
jp
mov
push
adc
popa
jnp
sub
push
ret
movs
dec
popa
jnp
popf
call
test
mov
or
jp
neg
mov
test
sahf
dec
jle
and
div
call
adc
jp
js
jp
js
jp
(bad)
push
test
push
jp
mov
lock
jnp
xchg
and
ds
in
bound
mov
xchg
jp
ret
push
ins
popa
jnp
popf
call
test
mov
in
ds
mov
xchg
jp
sub
call
imul
popa
mov
in
test
neg
stos
xor
fistp
sahf
test
mov
push
fistp
popa
push
mov
cmp
xchg
pushf
adc
fld
jno
or
cmp
mov
and
pusha
nop
cmp
cli
mov
jle
sahf
repnz
repnz
adc
pop
jb
popa
adc
jnp
jnp
xchg
inc
lahf
gs
mov
pop
push
adc
popa
jnp
sub
les
xor
adc
and
mov
xchg
test
call
jns
adc
xchg
enter
adc
jnp
ins
mov
call
fnsave
popa
neg
sbb
mov
clc
lahf
out
mov
pop
push
mov
cmc
mov
outs
adc
test
aas
popf
cli
jne
sbb
jne
data16
jnp
js
sub
test
xchg
call
clc
cmps
mov
cmp
xchg
dec
add
call
data16
jnp
js
sub
test
xchg
dec
add
repnz
repnz
sub
mov
lahf
out
mov
pop
push
mov
cmc
mov
pop
aas
popf
sub
jo
cmp
jp
jns
jp
xchg
xchg
sahf
sahf
test
mov
gs
inc
xchg
pop
mov
adc
(bad)
mov
call
sti
adc
popa
neg
sbb
jne
sahf
clc
pop
(bad)
call
pop
int3
adc
fdivr
jbe
cmp
cwde
jp
sti
jb
add
xchg
pushf
adc
lea
sbb
mov
mov
test
cmp
ins
add
jnp
and
xor
jg
sub
jp
sub
pop
and
mov
sbb
mov
mov
test
cmp
je
jle
call
imul
xchg
repnz
adc
call
jnp
stc
movs
jae
mov
popa
jnp
mov
or
cmp
pop
xchg
les
mul
xchg
sub
jae
call
mov
mov
sahf
test
xchg
cmc
jbe
jp
mov
call
test
xchg
js
popa
jnp
call
xchg
hlt
jne
jnp
inc
test
daa
adc
daa
mov
int3
daa
mov
(bad)
cmps
xchg
sahf
test
mov
jmp
repnz
jnp
mov
test
sub
fnstcw
pop
cmp
sub
jp
je
inc
leave
mov
pop
xchg
and
mov
cmps
xchg
(bad)
jb
sahf
test
xchg
cmp
mov
call
test
mov
popa
adc
xchg
and
call
xchg
mov
call
xchg
push
je
jnp
jbe
(bad)
lahf
xchg
add
mov
call
sub
call
xchg
add
sahf
test
jp
jnp
jnp
cmp
jp
(bad)
data16
xchg
sub
mov
dec
mov
pop
call
xchg
adc
sbb
mov
mov
popa
cli
ins
or
dec
mov
pop
and
xchg
jp
repz
dec
pop
and
call
jns
jp
les
adc
gs
mov
call
fnsave
popa
neg
xchg
sbb
jp
neg
xchg
mov
cmp
push
mov
repnz
repnz
and
xor
jg
ss
sbb
lea
jg
jp
data16
jnp
jp
nop
sub
popa
adc
ja
jnp
xchg
test
jp
mov
push
adc
jg
into
repz
push
(bad)
out
mov
pop
push
mov
cmc
mov
sub
popa
adc
xor
dec
jnp
test
cmp
pushf
je
jnp
mov
or
sub
or
dec
jnp
test
cmp
jl
popa
jnp
aas
popf
sub
jp
jnp
movs
int
call
jbe
jp
xchg
cld
jno
jnp
and
mov
popa
test
xchg
mov
mov
das
call
jp
jp
sub
aaa
add
mov
sbb
loop
push
mov
inc
out
pop
cmp
lahf
out
mov
jp
jp
(bad)
outs
test
xchg
push
mov
or
inc
neg
mov
mov
fild
in
cdq
jp
adc
out
jnp
adc
call
test
or
inc
jnp
repnz
adc
pop
xchg
lahf
test
or
call
test
or
daa
sbb
setns
adc
mov
cwde
jp
cli
imul
in
test
jnp
setns
lock
jnp
mov
sahf
push
bound
sahf
push
data16
xchg
mov
jnp
mov
sahf
test
xchg
(bad)
jp
jp
jnp
dec
lock
ss
or
ins
xchg
jns
and
push
jb
push
outs
clc
bound
adc
dec
sbb
daa
lock
cmps
or
out
pop
cmp
dec
pop
cmc
mov
push
mov
loop
gs
inc
fwait
jp
adc
loop
fwait
sub
adc
scas
ins
jnp
stc
movs
ja
mov
add
cli
test
je
mov
cmp
inc
pusha
jnp
sub
popf
jnp
je
mov
cmp
inc
pusha
jnp
sub
sbb
loope
fstp
call
pop
jbe
je
mov
cmp
inc
pusha
jnp
sub
popf
jnp
mov
pop
jne
mov
cmp
inc
fwait
jp
adc
loop
fwait
sub
adc
and
daa
ins
jnp
stc
movs
ja
jne
mov
cmp
inc
fwait
jp
adc
data16
adc
repz
mov
sbb
pusha
jnp
sub
popf
jnp
nop
adc
popa
jnp
aas
ins
jnp
repz
mov
sbb
pusha
jnp
sub
popf
jnp
je
mov
cmp
inc
pusha
jnp
sub
sbb
icebp
neg
jp
nop
xchg
jp
clc
pop
jbe
mov
mov
gs
mov
gs
inc
fwait
jp
adc
data16
jne
mov
cmp
inc
fwait
jp
adc
loop
fwait
sub
adc
shr
call
mov
cmp
inc
fwait
jp
adc
data16
jne
mov
cmp
inc
fwait
jp
adc
loop
fwait
sub
adc
and
add
call
inc
call
cmp
inc
pusha
jnp
sub
popf
jnp
xchg
fdiv
jnp
mov
and
mov
in
je
mov
cmp
inc
pusha
jnp
sub
popf
jnp
xchg
test
jnp
mov
and
jne
mov
cmp
inc
fwait
jp
adc
data16
mov
ss
pusha
jno
jnp
mov
and
iret
xchg
test
mov
jp
jnp
test
jb
data16
stc
fs
pop
cmp
dec
pop
cmc
mov
push
mov
cmp
sbb
xor
lds
mov
mov
call
mov
jb
data16
adc
mov
bnd
fs
dec
sahf
test
mov
xchg
mov
inc
test
jl
jp
into
dec
xchg
jnp
adc
in
popa
jnp
mov
xchg
call
jnp
adc
adc
dec
xchg
repnz
xchg
sbb
xor
bnd
jnp
mul
scas
test
dec
test
fstp
push
fwait
adc
dec
sahf
test
xchg
add
mov
push
cmp
call
jae
mov
jnp
lea
cmp
pop
pop
call
jp
jbe
mov
xchg
popf
adc
inc
and
mov
call
mov
popf
mov
call
repnz
repnz
push
test
repnz
call
mov
gs
dec
jb
imul
xlat
(bad)
movs
xchg
sbb
mov
jle
push
repz
pop
sbb
out
push
popf
test
in
test
xchg
pop
jae
mov
sahf
test
jp
mov
xchg
mov
sahf
dec
pop
call
test
push
xchg
repnz
mul
push
test
cmp
jp
(bad)
mov
sahf
test
xchg
add
jp
jnp
dec
test
neg
scas
pushf
test
mov
pushf
jp
neg
push
call
test
repnz
bound
neg
push
popf
test
mov
pop
bound
jnp
dec
test
xchg
add
jnp
mov
and
mov
sahf
jp
adc
and
xchg
xchg
call
xchg
xchg
jp
cli
je
and
cwde
jge
popa
repnz
popa
repnz
and
aas
mov
repnz
adc
call
jnp
repz
sbb
lea
pop
cdq
jnp
aas
xchg
jle
jp
repnz
xchg
repnz
mov
popa
jnp
pop
cmp
mov
in
ds
sub
cli
lahf
out
mov
jnp
test
cmp
call
adc
adc
call
jnp
adc
push
jp
fwait
jge
popa
adc
and
jp
pusha
xchg
jp
fsubr
and
loop
cmp
xchg
sub
mov
call
test
mov
sahf
test
adc
call
adc
popf
and
jp
cmp
jp
mov
pop
xchg
call
in
jp
adc
popf
and
mov
cmp
jp
and
popa
adc
mul
jnp
sti
bound
repz
push
push
cmps
adc
popf
and
jp
cmp
jp
push
cmp
dec
fisub
jnp
daa
bound
mov
popa
out
call
repnz
adc
enter
fisubr
and
loop
cmp
test
repnz
sbb
inc
ss
les
call
repnz
sbb
inc
xor
pusha
jnp
mul
mov
repnz
popf
fdivr
jns
jp
xchg
shl
inc
jb
cvttps2pi
xchg
mul
mov
jb
xor
gs
xchg
out
aam
popa
neg
mov
or
pop
cmp
push
and
jmp
call
adc
jnp
add
call
clc
pop
push
mov
(bad)
mov
adc
mul
jnp
mul
call
jnp
xchg
mov
test
lahf
(bad)
mov
cdq
sbb
(bad)
call
loopne
cmp
jp
and
fmul
mov
jb
data16
repz
push
push
cmps
neg
mov
mov
jp
adc
adc
mov
or
cmp
jp
jg
jp
test
xchg
cmc
jle
jp
lea
or
cmp
jp
push
call
mov
cmp
jp
mov
jp
jnp
jp
jnp
fs
test
push
iret
pop
cmp
nop
int
test
mov
sahf
dec
sub
mov
gs
movs
pop
lds
mov
jp
pop
push
jns
jnp
jmp
cmp
jnp
jmp
ds
jnp
jmp
xor
jnp
jmp
ss
jnp
jmp
sub
jnp
jmp
cs
jnp
jmp
and
jnp
jmp
es
jnp
jmp
pop
jns
jnp
jmp
pop
jns
jnp
jmp
push
jns
jnp
jmp
push
jns
jnp
jmp
dec
jns
jnp
jmp
dec
jns
jnp
jmp
inc
jns
jnp
jmp
inc
jns
jnp
jmp
jb
and
jmp
jbe
and
jmp
push
and
jmp
outs
jns
jnp
jmp
bound
jnp
jmp
sahf
jle
jnp
jmp
mov
jnp
jmp
mov
jnp
jmp
cmp
or
popa
jnp
jp
bnd
ss
mov
jnp
mov
inc
adc
xchg
lea
jp
mov
xchg
mov
es
fwait
cmp
fwait
nop
xchg
mov
pop
out
mov
jl
mov
inc
punpckhwd
popa
xchg
movs
jnp
jnp
jnp
adc
test
cli
jbe
jno
call
jg
inc
popa
imul
in
mov
jp
das
mov
test
mov
jmp
pop
mov
in
out
adc
inc
jg
jb
jnp
jp
pop
mov
jmp
mov
and
jmp
mov
and
jmp
stos
jle
jnp
jmp
scas
jle
jnp
jmp
mov
jmp
cmps
jle
jnp
jmp
fidivr
jnp
jmp
fidivr
jnp
jmp
sar
jnp
jmp
(bad)
jle
jnp
jmp
retf
jnp
jmp
into
jle
jnp
jmp
ret
jnp
jmp
(bad)
jle
jnp
jmp
cli
jle
jnp
jmp
(bad)
jle
jnp
jmp
bnd
jnp
jmp
idiv
jnp
jmp
jmp
jnp
jp
pop
out
jle
jnp
jmp
loop
and
jmp
out
and
jmp
sbb
jnp
jmp
push
jle
jnp
jmp
adc
jnp
jmp
push
jle
jnp
jmp
or
jnp
jmp
push
jle
jnp
jmp
add
jnp
jmp
push
jle
jnp
jmp
cmp
jnp
jmp
ds
jnp
jmp
xor
jnp
jmp
ss
jnp
jmp
sub
jnp
jmp
cs
jnp
jmp
and
jnp
jmp
es
jnp
jmp
pop
jle
jnp
jmp
pop
jle
jnp
jmp
push
jle
jnp
jmp
push
jle
jnp
jmp
dec
jle
jnp
jmp
dec
jle
jnp
jmp
inc
jle
jnp
jmp
inc
jle
jnp
jmp
jp
and
jmp
jle
and
jmp
jb
and
jmp
jbe
and
jmp
push
and
jmp
outs
jle
jnp
jmp
bound
jnp
jmp
data16
jnp
jmp
call
jnp
jp
pop
sahf
jg
jnp
jmp
xchg
jg
jnp
jmp
xchg
jg
jnp
jmp
mov
jnp
jmp
mov
jnp
jmp
cmp
or
popa
jnp
jp
pop
xchg
jnp
jmp
mov
and
jmp
mov
and
jmp
stos
jg
jnp
jmp
scas
jg
jnp
jmp
mov
jmp
cmps
jg
jnp
jmp
fidivr
jnp
jmp
fidivr
jnp
jmp
sar
jnp
jmp
(bad)
jg
jnp
jmp
retf
jnp
jmp
into
jg
jnp
jmp
ret
jnp
jmp
(bad)
jg
jnp
jmp
cli
jg
jnp
jmp
(bad)
jg
jnp
jmp
bnd
jnp
jmp
idiv
jnp
jmp
jmp
jnp
jp
pop
out
jg
jnp
jmp
loop
and
jmp
out
and
jmp
sbb
jnp
jmp
push
jg
jnp
jmp
adc
jnp
jmp
push
jg
jnp
jmp
add
jnp
jmp
ds
jnp
jmp
xor
jnp
jmp
ss
jnp
jmp
sub
jnp
jmp
cs
jnp
jmp
and
jnp
jmp
es
jnp
jmp
pop
jg
jnp
jmp
push
jg
jnp
jmp
dec
jg
jnp
jmp
dec
jg
jnp
jmp
inc
jg
jnp
jmp
inc
jg
jnp
jmp
jp
and
jmp
jle
and
jmp
jb
and
jmp
jbe
and
jmp
push
and
jmp
outs
jg
jnp
jmp
bound
jnp
jmp
data16
jnp
jmp
call
jnp
jp
pop
sahf
jl
jnp
jmp
xchg
jl
jnp
jmp
xchg
jl
jnp
jmp
mov
or
popa
jnp
.byte
