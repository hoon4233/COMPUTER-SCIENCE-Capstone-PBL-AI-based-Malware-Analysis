sbb
add
dec
and
mov
mov
fmulp
(bad)
popf
ret
(bad)
loope
test
dec
xlat
shl
xor
stos
inc
test
cmp
fs
js
jbe
or
pop
inc
xchg
xchg
adc
sub
retf
dec
jno
and
leave
xchg
pop
push
popa
sub
dec
adc
outs
fisub
mov
arpl
dec
add
sbb
adc
xchg
(bad)
cld
adc
sub
sbb
dec
das
mov
mov
mov
test
mov
push
lds
lahf
mov
mov
popa
imul
mov
jmp
cmp
mov
shl
aas
mov
dec
inc
ins
(bad)
out
retf
xor
jge
fwait
dec
mov
jle
adc
repz
pop
push
rep
movs
daa
in
out
out
les
mov
pusha
les
(bad)
call
xor
cwde
cld
mov
dec
sbb
lods
aad
stos
ja
out
out
rcr
xchg
mov
int
jnp
popf
dec
or
and
push
inc
mov
pop
clc
out
mov
les
imul
retf
cmp
mov
or
push
in
xchg
mov
xchg
pop
jae
add
dec
pop
mov
add
adc
into
lods
mov
adc
cmp
add
mov
push
test
xchg
cmovge
addr16
aad
cmp
into
cmp
mov
in
jnp
lahf
xchg
in
push
lds
xchg
es
int
ret
(bad)
ror
xlat
cmp
push
jo
enter
bound
add
mov
sbb
or
ins
out
inc
xchg
sbb
push
nop
mov
mov
mov
or
lods
out
out
je
cmps
ret
test
pushf
xor
retf
mov
cli
into
mov
inc
or
iret
ins
lea
and
es
lea
or
sub
inc
sub
out
data16
adc
mov
in
fsubr
sub
lods
inc
dec
pop
mov
xor
mov
bound
mov
sbb
and
mov
sbb
ret
retf
lock
icebp
(bad)
xchg
add
mov
test
adc
mov
mov
mov
stos
pop
pushf
data16
loop
retf
cmc
test
idiv
jle
(bad)
jecxz
pop
fdivr
dec
dec
ret
mov
dec
fs
fisttp
fucom
jp
lahf
adc
loop
rol
ret
(bad)
stos
adc
ret
dec
in
push
call
sbb
dec
xchg
add
push
or
jmp
jp
les
mov
mov
ret
xor
adc
push
push
dec
mov
stos
movs
sbb
xor
les
into
outs
icebp
or
(bad)
ja
in
fmul
mov
loopne
push
dec
hlt
ror
cmp
cmp
ja
clc
sbb
add
pop
xchg
cmp
jmp
mov
pop
(bad)
sbb
js
jno
call
dec
cmc
inc
loop
stos
es
adc
fld
jae
push
pop
inc
(bad)
jecxz
push
pop
xchg
js
and
sbb
push
imul
push
inc
xchg
lea
mov
int3
jmp
sub
leave
jle
outs
sub
test
enter
or
inc
int3
add
in
in
ins
(bad)
into
dec
mov
repz
test
fnstcw
jno
imul
cmps
mov
scas
scas
stos
test
daa
nop
lods
stos
inc
loope
inc
sbb
repz
inc
loopne
movs
iret
pop
pop
cmp
or
mov
gs
push
(bad)
jo
int
fld
notrack
jle
sbb
mov
pop
and
jno
mov
lahf
(bad)
inc
jl
jbe
or
js
jecxz
jbe
push
sbb
inc
loop
dec
bound
mov
mov
fxtract
adc
rol
push
imul
rcl
scas
ret
cwde
fidiv
fisubr
jle
mov
pop
xchg
xchg
mov
pop
xor
fstp
mov
repz
add
das
jb
mov
adc
lahf
xchg
jl
and
js
cmc
inc
lea
push
test
cmp
daa
ficom
mov
cmp
data16
leave
cld
pop
cld
pop
jmp
and
rcr
aad
cld
stc
xchg
test
xchg
push
jp
xor
daa
test
dec
xchg
mov
inc
jp
bound
inc
cwde
adc
int3
into
stc
xor
xlat
adc
pop
outs
(bad)
pop
int
movs
inc
inc
icebp
jno
push
repnz
push
daa
cmps
fdivr
test
inc
cs
sub
(bad)
xchg
fcom
aam
jne
fld
dec
mov
cli
fninit
je
push
xor
mov
loopne
dec
add
xchg
lds
xor
fidiv
jg
je
mov
clc
sub
push
xchg
rcr
in
fincstp
mov
dec
into
fadd
sub
adc
or
jmp
xchg
jae
test
add
or
add
das
cli
or
jp
xchg
movs
jecxz
(bad)
jle
sti
sahf
xchg
test
daa
outs
xor
in
pop
ds
push
dec
inc
movs
retf
test
movs
int
mov
cwde
in
or
sub
shl
xlat
pop
sbb
sub
mov
es
xlat
and
int
fcmovne
or
and
das
mov
outs
or
jne
aad
push
sbb
sti
lds
cmp
(bad)
sbb
mov
pop
iret
sbb
cmp
popa
stos
movs
jae
push
out
imul
or
inc
out
scas
aam
sbb
mov
aad
sbb
lea
mov
adc
rcl
sbb
inc
ja
xor
inc
push
pop
mov
add
jbe
rol
pop
cmp
pop
dec
ds
loop
cmp
popa
sub
xchg
pop
cmp
rcl
inc
mov
sahf
xchg
dec
fsub
movs
fsubr
icebp
xchg
sub
pushf
jecxz
pop
int
loope
int
ret
inc
jmp
hlt
sub
xchg
mov
fdiv
scas
movs
out
push
or
jb
xchg
repz
and
pop
push
popa
jge
cmps
pusha
cdq
adc
rol
(bad)
cmp
iret
jl
xlat
aaa
shl
adc
and
cmps
daa
adc
mov
mov
dec
push
popf
out
cmp
leave
(bad)
cli
add
cmps
stc
daa
xchg
ret
push
cmp
lods
pop
loope
cmp
xchg
or
jno
mov
cmc
cwde
movs
add
rcr
mov
add
not
pushf
cmp
fcomp
mov
lods
or
fisubr
dec
sbb
test
rcr
mov
sub
in
loop
inc
xor
rol
loop
les
lock
inc
in
cmp
sbb
ds
push
cmc
add
daa
xchg
cmps
cmp
mov
inc
and
sub
loope
or
mov
(bad)
jg
adc
outs
or
pop
xor
mov
or
out
test
mov
mov
adc
cwde
mov
fld
in
je
in
sbb
jg
mov
icebp
mov
mov
mov
(bad)
jo
int
xchg
outs
inc
pop
call
sbb
lea
ds
ja
pop
sbb
jmp
mov
aad
push
mov
int3
inc
mov
jno
dec
imul
lahf
add
test
mov
push
ja
je
mov
lock
repnz
fcmovu
sbb
xlat
call
ss
arpl
gs
add
cs
mov
leave
fwait
test
add
(bad)
into
pop
xchg
rcl
and
hlt
jnp
xchg
cmp
mov
mov
mov
xchg
in
mov
in
sar
ss
push
pushf
clc
je
xchg
push
inc
mov
ficomp
inc
and
ins
fnstsw
leave
mov
sub
in
xchg
push
push
stos
sbb
sub
retf
dec
stos
repnz
sub
icebp
in
call
dec
adc
pop
xchg
jmp
stc
mov
fst
lea
out
inc
cmp
sbb
fs
inc
loope
and
cmp
and
pop
mov
mov
push
adc
or
call
mov
minps
inc
pop
scas
fidivr
pop
or
dec
xor
mov
jle
xchg
rol
mov
(bad)
cdq
mov
cmp
retf
arpl
mov
retf
mov
repnz
and
bound
mov
xlat
cmp
adc
mov
add
add
xchg
xchg
aaa
inc
pop
out
outs
jbe
popa
fsub
sbb
inc
mov
(bad)
push
fadd
pop
ja
fmul
jle
add
xchg
push
and
xchg
int3
mov
mov
(bad)
jl
xchg
dec
xchg
loop
sub
pushf
test
fild
jb
bound
ret
inc
shl
mov
ins
dec
push
add
add
stc
inc
or
hlt
nop
aad
loopne
js
call
ds
sbb
test
and
xor
(bad)
cmp
adc
int
mov
jg
inc
xchg
nop
loopne
jns
sbb
call
inc
lods
cmp
sub
mov
inc
pusha
(bad)
test
dec
pop
mov
mov
pop
fild
cmc
addr16
push
xchg
sub
or
jmp
adc
ins
mov
push
ds
or
dec
push
mov
or
in
in
adc
or
pop
sbb
scas
ret
loopne
je
lods
xchg
fwait
and
mov
aas
jle
sbb
push
xor
and
xchg
daa
nop
test
push
aas
je
xchg
outs
jmp
dec
cmps
popa
mov
icebp
or
pop
shr
sbb
add
sbb
test
pop
dec
das
fdivr
ds
inc
jp
loop
mov
pop
xchg
mov
mov
mov
sub
in
push
and
mov
loop
inc
xor
xchg
mov
inc
xchg
mov
mov
mov
pushf
sub
imul
xor
push
les
mov
rol
add
in
xchg
inc
mov
pop
pusha
jle
scas
or
mov
mov
aam
xor
or
loop
scas
sbb
fiadd
pop
outs
push
pushf
jmp
out
jnp
dec
icebp
ds
fwait
xchg
bswap
fisub
cmp
add
das
ins
ret
cs
xchg
sbb
push
cdq
xchg
fdivr
jmp
dec
inc
add
add
pop
jge
pop
(bad)
shl
and
jmp
jmp
(bad)
std
movs
pop
pop
addr16
mov
fimul
lock
pop
inc
mov
inc
fisub
push
fiadd
ja
push
add
sti
and
jle
pop
jge
push
mov
xor
fisubr
sub
jp
and
popf
and
inc
inc
mov
les
xor
imul
inc
push
pop
fnstcw
mov
xchg
fcomp
and
imul
outs
cs
sub
daa
stc
test
iret
sub
push
jb
dec
xchg
daa
jne
lods
push
stos
rol
pop
(bad)
outs
fisttp
xchg
idiv
xor
inc
cdq
dec
cmp
sbb
popf
jmp
mov
xchg
jmp
xchg
push
(bad)
bound
iret
add
sti
icebp
mov
cmp
das
adc
pop
cmc
(bad)
adc
add
out
out
xchg
or
jbe
cmp
inc
xor
test
jo
jno
retf
outs
or
pop
pop
adc
jmp
arpl
or
push
fidivr
jmp
mov
push
or
sub
xchg
daa
adc
xchg
and
ret
dec
scas
aas
cmp
(bad)
das
shl
or
sbb
mov
and
into
inc
lock
pop
and
ins
leave
sbb
in
mov
(bad)
sub
ja
test
mov
mov
add
xor
mov
retf
in
xor
add
adc
imul
dec
mov
int3
lds
adc
movs
lds
adc
mov
or
inc
retf
xor
loop
push
retfw
xor
leave
jno
or
clc
jge
outs
sti
mov
adc
pop
mov
data16
fisttp
cmp
lahf
inc
xchg
(bad)
scas
cmps
gs
popf
and
repz
ss
inc
fcmovbe
ja
mov
inc
fcom
and
dec
or
mov
pop
(bad)
sti
(bad)
fisub
sbb
out
push
and
mov
cmp
ins
and
sub
retf
xlat
int
push
retf
inc
hlt
xor
mov
fstp
repz
loopne
mov
arpl
xlat
mov
lds
pop
adc
shl
sbb
mov
pop
jge
jle
xchg
fstp
test
and
pop
push
pop
jp
(bad)
xor
(bad)
cs
scas
mov
in
nop
sbb
mov
lahf
pop
gs
push
pop
jno
mov
sub
out
pop
sbb
add
sub
jle
fs
jge
mov
push
scas
inc
push
aam
in
adc
xor
(bad)
cmp
jno
sbb
out
repz
push
or
jbe
mov
ds
inc
(bad)
adc
jbe
sub
sbb
inc
cwde
mov
in
xlat
mov
fnstcw
stos
js
jmp
into
arpl
xchg
dec
js
sub
stos
xchg
lods
mov
push
adc
movs
fild
mov
das
loope
call
dec
fstp
mov
mov
stc
loopne
sahf
pop
fidivr
or
call
sbb
call
pushf
mov
mov
out
push
push
movs
mov
cmp
in
mov
push
xlat
mov
sbb
pop
xchg
outs
pusha
add
jle
rol
inc
sub
sbb
push
mov
or
cmps
popa
in
sub
repz
jl
inc
inc
nop
data16
arpl
rcr
add
(bad)
movs
lahf
call
fwait
icebp
pop
or
jg
mov
fwait
push
jle
push
ins
(bad)
cmp
js
movs
jg
mov
xchg
push
outs
(bad)
pushf
(bad)
dec
sub
scas
loopne
jmp
add
jmp
or
sub
(bad)
pop
fwait
jl
xchg
pop
dec
or
add
cmp
mov
test
or
mov
add
add
iret
xor
xchg
fild
int3
es
in
pop
(bad)
push
and
adc
aam
fwait
aad
movs
pop
addr16
repnz
movs
arpl
push
sbb
push
mov
pop
in
mov
ss
int3
xor
test
dec
inc
push
adc
outs
ret
push
aam
xchg
pop
mov
in
mov
cmp
cmp
fcomp
add
sbb
and
pop
lea
(bad)
mov
xchg
jae
inc
sahf
cmps
dec
xlat
push
mov
mov
fdivr
pushf
jmp
dec
shl
js
jmp
xchg
cmp
lock
mov
xchg
popa
pop
cld
movs
loope
cmc
(bad)
xchg
(bad)
inc
sub
mov
fs
mov
xchg
mov
mov
fsubr
mov
out
out
mov
popf
push
sub
mov
js
cs
pop
or
lods
(bad)
sbb
popa
sar
xchg
inc
ror
out
mov
push
mov
adc
cld
mov
push
in
shl
cld
imul
dec
mov
mov
cmps
adc
cld
push
xchg
addr16
add
pop
push
shl
cmp
jmp
xchg
jle
cmp
inc
inc
push
loop
aas
push
sahf
and
fwait
sub
inc
outs
cmp
repnz
pop
gs
test
les
test
jl
mov
stos
sahf
out
dec
xor
(bad)
enter
or
push
dec
adc
adc
or
and
aad
sub
and
pop
mov
sub
aam
xchg
scas
inc
sub
ins
movs
adc
(bad)
scas
test
jmp
int
mov
dec
mov
or
rcl
lock
and
jmp
lahf
mov
push
push
mov
and
ds
repnz
arpl
in
call
lea
sbb
pop
mov
adc
das
add
xchg
test
dec
adc
aad
adc
outs
push
inc
mov
pop
fwait
and
inc
and
cmps
pushf
jbe
adc
mov
push
imul
test
cmc
int3
dec
or
cmps
jbe
cs
xchg
pop
xchg
inc
xchg
fst
es
or
xor
shl
xor
out
rcr
and
dec
pop
call
push
fstp
loope
ja
ror
dec
pop
push
test
jns
loopne
call
outs
mov
mov
mov
push
daa
movs
or
or
push
mov
push
mov
xchg
popa
call
mov
je
lods
gs
and
jns
cmp
xchg
(bad)
jbe
sti
jb
mov
and
mov
out
pusha
mov
enter
cmp
movs
xchg
inc
pop
mov
popa
into
add
jge
or
je
repnz
or
not
arpl
aas
ror
shl
movs
adc
adc
add
imul
cmps
lahf
sbb
loope
inc
je
nop
mov
mov
imul
icebp
popf
aam
push
adc
sahf
xlat
mov
add
fcmove
jmp
jl
and
fild
out
jle
(bad)
or
fbstp
adc
retf
imul
ds
jg
xor
mov
loope
shr
mov
mov
push
dec
cmc
pop
leave
pop
pop
or
dec
jl
fstp
push
cmp
push
aaa
pop
push
fisub
arpl
pop
shr
mov
aas
(bad)
inc
fwait
dec
adc
mov
mov
fsubrp
sub
xchg
in
jp
(bad)
(bad)
pusha
imul
pushf
outs
imul
sbb
and
add
test
into
cmp
fisttp
out
retf
inc
xchg
scas
scas
in
arpl
call
jecxz
push
std
add
push
cs
imul
imul
xor
test
jns
lea
adc
daa
add
jg
int3
adc
fadd
movs
pop
and
push
or
add
sub
dec
inc
ret
cdq
add
sbb
outs
ins
or
jbe
adc
xchg
mov
loop
in
mov
ins
xchg
sub
jnp
pop
data16
lock
scas
push
lea
fs
(bad)
dec
into
stc
cwde
out
stos
shr
retf
aaa
cmps
mov
sub
retf
aad
stos
cmps
movs
and
xchg
xor
mul
(bad)
(bad)
je
int
dec
adc
add
push
cmp
pop
(bad)
int
retf
dec
xor
icebp
mov
fst
stos
stos
fimul
xlat
adc
push
jecxz
xchg
ja
inc
test
(bad)
sar
mov
xchg
jbe
mov
aam
mov
mov
in
loop
std
iret
adc
(bad)
sbb
fnstcw
pop
sub
dec
addr16
mov
mov
enter
aaa
lds
adc
cs
push
jg
inc
push
sar
hlt
je
fist
mov
mov
mov
xchg
mov
sbb
stc
cwde
adc
fwait
adc
pusha
xor
les
mov
jo
in
fnstcw
xor
(bad)
les
push
or
dec
jmp
ins
cld
sbb
imul
add
xor
xchg
imul
and
repz
pop
push
lods
repnz
int
repnz
adc
pushf
mov
add
call
in
pop
(bad)
push
fs
sub
jae
dec
mov
adc
inc
push
mov
iret
sbb
js
inc
jg
push
push
cmp
jle
ret
bound
inc
xor
iret
leave
push
or
mov
dec
cwde
dec
sbb
mov
adc
shl
and
inc
add
outs
add
jg
dec
(bad)
cmp
fwait
cmps
stos
pop
ret
pop
sub
and
bound
in
pop
fadd
fst
mov
cdq
push
test
out
test
clc
retf
add
xor
adc
test
xchg
psadbw
inc
add
inc
in
imul
leave
push
and
jno
xchg
mov
cmp
mov
jnp
shl
xor
jns
lods
repnz
dec
xor
inc
addr16
in
mov
mov
add
adc
les
mov
mov
in
out
pop
shl
jbe
pop
test
data16
fild
repnz
loopne
movs
fadd
mov
cmp
dec
popa
aad
fwait
inc
xor
mov
add
mov
pop
add
and
add
sub
(bad)
jge
movs
fdivr
ror
ss
mov
ss
call
and
jne
loop
xor
movs
push
lods
dec
lds
(bad)
jecxz
adc
and
cmp
push
add
shl
or
adc
cwde
sbb
sahf
xor
nop
inc
xor
scas
mov
in
jmp
jge
aam
cmp
cld
jno
cmp
fadd
jl
push
in
cs
stc
jecxz
jecxz
xor
mov
jge
mov
iret
das
lds
mov
std
scas
sbb
pop
nop
mov
inc
xchg
sub
xor
xchg
in
out
iret
sbb
jmp
mov
mov
sub
inc
out
and
fist
sub
or
sub
jg
inc
pusha
aam
dec
dec
add
sets
not
jns
cmp
and
mov
cld
arpl
int
xchg
es
shl
inc
cdq
cmp
add
and
loope
and
jg
xchg
mov
cmc
push
ficom
adc
lahf
mov
push
fst
jmp
cdq
jmp
test
cmc
stos
pusha
pop
xchg
imul
shr
and
mov
cmc
mov
nop
mov
or
clc
jmp
cdq
jmp
cmps
scas
sub
xor
pop
fiadd
mov
stc
cwde
xchg
jae
xor
inc
outs
ins
dec
cld
add
mov
push
in
addr16
mov
cmp
cmp
jg
or
lods
add
movs
cmps
cmps
push
pop
not
pop
adc
lea
jns
repnz
dec
loop
cmp
in
or
loope
jp
pop
pop
hlt
retf
lods
and
icebp
lahf
or
sub
jmp
popf
(bad)
outs
push
pop
mov
cdq
aad
sub
and
addr16
sbb
lods
xchg
jge
fwait
in
(bad)
mov
repz
xor
push
jne
jno
xchg
push
and
cmp
mov
push
mov
cdq
add
mov
int3
add
cmps
xor
sub
inc
popf
shl
stos
cmc
inc
out
xchg
lock
inc
and
jl
daa
pop
mov
les
mov
push
xchg
add
shr
inc
jl
mov
mov
mov
xor
jae
(bad)
mov
(bad)
pop
shr
jae
dec
xor
js
leave
lods
and
xor
mov
sar
cmp
out
aaa
mov
sbb
or
sbb
(bad)
(bad)
mov
sub
sbb
enter
rol
mov
pop
jns
push
loope
cmp
call
mov
ins
push
sub
pop
pusha
pop
and
iret
int
popa
pop
sbb
and
(bad)
pop
(bad)
dec
jne
mov
inc
stos
stos
arpl
and
int3
popa
popa
cmp
test
xchg
xchg
xchg
push
sahf
cmp
mov
dec
rol
jno
pop
repz
and
shl
sub
loop
not
les
imul
es
push
lods
lock
out
mov
mov
out
das
jle
sbb
lds
pop
xlat
push
cmps
cwde
out
pushf
in
ror
xor
mov
mov
(bad)
int3
(bad)
dec
scas
push
or
pop
mov
add
in
add
and
fld
dec
pusha
xlat
shr
jae
mov
es
sbb
lods
jae
mov
(bad)
fisub
ror
clc
std
xor
loop
cmps
test
mov
shl
leave
cmc
and
cmp
outs
and
mov
push
inc
xchg
gs
stos
cmp
aas
push
xor
ss
loope
and
aas
sbb
retf
fisub
leave
jg
cmps
leave
push
loopne
cs
fidiv
mov
jo
add
aad
aas
test
push
inc
or
xchg
pop
ror
pop
ins
dec
je
(bad)
ja
mov
je
xor
sbb
movs
dec
jge
pop
fstp
and
add
jecxz
cld
xchg
inc
inc
ins
sti
cs
cli
add
icebp
jmp
fidiv
mov
cmps
xchg
xchg
int3
pusha
or
cmp
(bad)
mov
pop
sub
dec
jge
mov
dec
add
loop
inc
cmp
sub
mov
mov
and
das
sahf
fdiv
div
lods
dec
push
xor
data16
imul
ror
or
sbb
mov
dec
sbb
sbb
rcl
stc
or
nop
movs
ja
addr16
push
cmc
push
lods
cmp
fnstenv
out
add
lea
lahf
pusha
xor
popf
mov
xor
jne
jae
sbb
xchg
loopne
jb
mov
imul
pop
ror
cdq
cwde
adc
cmp
dec
clc
dec
push
sbb
mov
in
sbb
test
and
sub
jle
xchg
cwde
sub
dec
sbb
adc
cmps
out
mov
ja
movs
dec
dec
and
pop
sbb
stc
dec
push
jbe
push
or
sbb
and
lods
shr
pop
xor
xlat
jle
ret
inc
sub
mov
dec
frstor
xchg
push
dec
stos
sti
cwde
cdq
adc
adc
xor
jmp
in
sub
inc
aam
or
jne
or
mov
xor
cld
push
pop
icebp
ret
add
leave
mov
scas
jecxz
adc
xor
out
inc
cmp
xor
enter
in
sbb
jbe
les
dec
stc
in
adc
mov
adc
mov
inc
pop
aaa
cdq
icebp
popa
les
xor
mov
addr16
dec
stos
mov
xor
fstp
and
add
dec
inc
std
inc
(bad)
mov
sub
fcom
mov
shr
pop
(bad)
mov
push
scas
mov
push
mov
mov
xor
cld
dec
pop
xor
loop
popa
ins
ins
mov
cmp
cmp
out
out
mov
arpl
ds
out
movs
into
mov
or
fwait
jmp
adc
inc
dec
mov
add
mov
cmp
clc
push
nop
ins
sub
rcl
imul
sub
push
sub
xchg
(bad)
or
jno
pop
sbb
and
or
xor
cmp
dec
mov
or
push
fsubr
inc
cdq
loope
fstp
stc
add
mov
movs
xchg
fwait
or
fsub
inc
or
fs
in
repnz
xor
jbe
sbb
sahf
icebp
(bad)
jns
scas
xor
pop
jo
push
int3
pop
xchg
pop
rcl
adc
inc
in
cld
xchg
xor
add
push
sbb
add
(bad)
pushf
(bad)
or
lahf
jmp
shl
ret
and
lods
add
inc
scas
call
add
push
jecxz
xchg
into
repnz
sub
inc
adc
fwait
imul
stc
mov
test
lahf
push
sub
ss
mov
jl
lea
ss
mov
test
sbb
cmp
jmp
inc
xchg
push
mov
jmp
add
jno
scas
xor
(bad)
jg
push
mov
in
mov
or
sub
push
xor
pop
pop
lds
jmp
int3
js
cdq
jp
inc
(bad)
movs
in
mov
into
inc
adc
ins
push
dec
mov
test
cmp
or
jo
sub
push
push
sub
outs
pop
test
push
(bad)
div
jo
sub
outs
mov
push
push
(bad)
mov
xlat
int3
ins
add
test
or
jb
pop
sub
(bad)
out
fs
jmp
lahf
les
aam
outs
sbb
pop
jmp
cmp
pop
call
mov
mov
inc
mov
jecxz
test
or
jp
mov
das
fsub
push
retf
clc
inc
aaa
neg
jecxz
lea
and
cmp
mov
aas
mov
mov
inc
icebp
(bad)
xchg
push
xor
adc
mov
sub
sub
pop
cmp
bound
and
div
jb
lfs
add
pushf
pop
mov
das
pop
pop
fist
popf
jmp
cmc
mov
mov
jp
movs
add
push
mov
sbb
add
std
xor
sub
jecxz
test
psrlq
or
icebp
inc
pusha
cmc
jo
mov
inc
mov
cmp
out
sub
jb
gs
ins
js
sbb
dec
fisttp
aaa
inc
cwde
popa
xchg
jnp
clc
ss
jl
adc
arpl
add
pop
mov
mov
push
imul
or
stos
pusha
scas
xchg
push
xor
and
inc
add
aad
shr
xchg
loope
jnp
je
pop
cmp
stos
jno
jl
jle
adc
inc
or
(bad)
icebp
pop
cmp
sbb
push
daa
retf
fistp
xchg
out
or
popf
or
sbb
rep
dec
inc
sbb
xor
int3
rsqrtps
jbe
ds
leave
jecxz
and
fsubrp
mov
(bad)
in
fiadd
aad
and
or
inc
mov
sahf
sbb
int3
mov
(bad)
gs
and
xor
inc
idiv
inc
ins
mov
cli
push
cmp
inc
push
mov
(bad)
imul
or
mov
retf
sbb
repnz
sub
(bad)
cs
jecxz
cli
xlat
xchg
test
mov
add
add
mov
outs
mov
add
ret
mov
and
cs
push
and
shl
int
push
test
adc
adc
leave
pusha
sahf
pop
mov
dec
je
and
push
cmps
cdq
mov
lods
mov
xchg
mov
xor
jnp
cli
pop
repnz
cmps
pop
push
mov
mov
mov
mov
and
(bad)
adc
retf
(bad)
dec
mov
mov
jno
out
push
cwde
and
jmp
fdiv
test
xor
cmps
sahf
xor
lds
leave
ds
xchg
ficomp
outs
or
adc
call
and
mov
mov
lods
cmps
cmp
push
dec
xor
add
lods
push
jmp
inc
hlt
test
add
in
xor
push
out
sub
sbb
in
inc
es
mov
or
dec
call
movs
movs
movs
int
mul
in
mov
icebp
sbb
jmp
call
lock
or
pop
xlat
popf
scas
fwait
mov
xchg
jmp
push
fbstp
dec
and
sbb
(bad)
push
outs
scas
xor
cmp
ficomp
retf
push
xor
rcl
arpl
leave
sub
cs
adc
pop
push
in
arpl
repnz
add
pop
(bad)
pop
lea
xchg
xor
popf
cwde
jg
rcr
push
arpl
pushf
cdq
daa
pop
jbe
inc
adc
aas
lods
(bad)
jg
mov
pop
add
dec
ja
inc
sbb
add
push
in
aam
cmps
popf
inc
ins
mov
pop
push
(bad)
xor
add
xchg
retf
ins
push
(bad)
mov
cli
cdq
push
sbb
rcl
movs
sbb
dec
sbb
or
pop
mov
mov
(bad)
or
jmp
sub
dec
ja
std
cld
or
ret
jae
jmp
mov
fwait
mov
sbb
jmp
stc
jae
bound
mov
mov
inc
push
fld
(bad)
add
xor
xchg
stos
pop
mov
pop
pop
gs
push
mov
loopne
scas
mov
jle
je
jno
push
jecxz
push
dec
jmp
addr16
nop
(bad)
out
push
(bad)
sbb
add
pop
test
fnstsw
std
push
adc
xchg
test
fs
ins
and
int3
pop
adc
mov
push
cdq
shl
and
aaa
sub
call
imul
test
jmp
fucomp
cdq
jns
xchg
hlt
lahf
push
stos
je
ror
or
jne
mov
out
ficomp
std
xchg
sub
jnp
mov
and
ins
dec
sbb
ja
repz
dec
and
mov
xor
cmp
jle
and
inc
in
xchg
repnz
cmps
gs
shl
(bad)
bound
jecxz
inc
mov
call
es
adc
add
cmp
repnz
pop
push
mov
dec
lods
outs
push
das
sar
xor
js
pmuludq
repnz
add
movs
cmp
inc
std
push
pop
or
cmps
cmps
leave
mov
xor
pop
outs
pushf
cwde
cld
push
fisub
dec
jp
mov
loopne
imul
pop
push
mov
mov
add
stos
add
sub
sti
add
int3
jbe
fsub
add
xchg
es
pop
mov
in
nop
add
fmul
nop
pop
cdq
jecxz
lods
inc
lds
rol
mov
push
mov
mov
out
adc
mov
push
fucomp
arpl
inc
pop
add
mov
cdq
ds
ror
(bad)
lods
sbb
retf
xchg
nop
push
and
das
pop
mov
ins
fld
sbb
sub
aas
adc
cli
mov
aas
push
and
popa
fdiv
lods
fld
out
cwde
bound
jo
cmc
outs
gs
ds
push
inc
mov
test
pop
jge
fadd
pop
cbw
loop
add
ficomp
shr
pop
lods
jle
dec
leave
pop
cmp
jno
test
jne
out
test
dec
ror
mov
movs
dec
xchg
sbb
add
out
xchg
int3
arpl
xchg
adc
fisttp
stos
adc
push
shl
jo
in
stos
xchg
ins
retf
out
cmps
les
add
mov
jno
add
f2xm1
lods
inc
jae
icebp
sbb
or
dec
je
jle
mov
or
in
mov
scas
add
cmc
adc
cmp
xchg
sub
fld
mov
xchg
and
call
fadd
aaa
xchg
(bad)
call
(bad)
xchg
ror
add
ins
jg
or
cdq
mov
fucomip
cmc
mov
jnp
sbb
add
mov
enter
jno
xchg
mov
(bad)
das
aas
retf
add
pop
jo
call
test
push
and
pop
xchg
fsub
xor
punpckhwd
fistp
adc
and
dec
pop
out
aas
sbb
inc
xchg
push
pop
rol
arpl
mov
aaa
cmp
call
jne
sbb
fdivr
mov
pop
ret
sbb
fidiv
mov
push
adc
lock
push
cld
and
push
sahf
fwait
repnz
push
out
xor
aas
jmp
cli
pop
outs
nop
push
stc
sub
dec
sub
push
and
ja
jg
adc
outs
mov
lods
test
adc
sub
vucomiss
out
aam
test
mov
test
dec
sar
add
es
push
mov
dec
addr16
ins
pop
aad
cmp
cmps
int
je
cmp
jecxz
mov
mov
inc
mov
jno
(bad)
add
xchg
(bad)
mov
nop
not
movs
push
sti
xor
push
xchg
repnz
xchg
mul
mov
jmp
mov
mov
dec
xchg
mov
aam
sub
or
xor
xchg
rcr
jge
jb
icebp
loop
pushf
test
sahf
dec
gs
xor
jmp
jmp
inc
retf
sub
push
add
sbb
stos
popa
imul
in
std
or
jns
cdq
lock
jae
jne
and
rcl
mov
shr
jg
push
fist
inc
lock
into
rdpmc
and
arpl
push
call
push
sti
sbb
fmul
and
sbb
ds
push
aas
rcl
test
cmp
xchg
and
fs
xor
ins
imul
mov
mov
mov
leave
out
sub
push
push
cdq
mov
out
mov
cs
arpl
sub
jmp
nop
daa
cmc
retf
dec
lods
jge
jl
fsubp
jecxz
sub
scas
cmp
aaa
fcomp
pop
fsub
adc
mov
repnz
cli
ins
xchg
stc
and
test
mov
lods
jp
sub
mov
mov
or
pop
inc
add
sub
mov
sub
mov
pop
jb
sets
add
out
jb
out
(bad)
rol
ret
call
(bad)
pop
mov
scas
adc
xchg
stos
and
lahf
clc
pop
test
rcl
jecxz
mov
push
sbb
jne
pushf
jp
pop
dec
int3
and
call
imul
loop
or
cwde
sahf
push
add
lds
leave
and
sub
and
push
xor
adc
fucomp
(bad)
stc
push
(bad)
iret
shr
sbb
int
push
pop
or
or
sbb
stos
arpl
div
out
retf
nop
leave
cmc
xor
adc
mov
shr
dec
loope
mov
jmp
inc
xor
sub
lahf
xchg
lock
jmp
pusha
(bad)
mov
cmps
mov
xchg
mov
loope
add
fisubr
aaa
fsubr
loope
pop
mov
and
pop
(bad)
cmps
pop
lods
jae
xor
cmp
das
cmp
inc
add
inc
imul
pop
jno
mov
pusha
xor
jmp
test
jge
daa
xor
cld
std
movs
cmp
retf
and
xor
imul
stc
ret
jg
xchg
enter
jbe
pusha
cdq
inc
mov
push
or
ret
clc
sti
lods
sub
frstor
cmps
mov
shr
icebp
and
addr16
sub
pop
and
sub
xlat
push
ins
ror
pop
or
pop
or
(bad)
cmps
dec
add
shl
repz
fiadd
in
jle
push
xchg
popa
shr
nop
call
movlps
loop
idiv
jne
xor
add
iret
lea
inc
dec
rcl
retf
jae
push
scas
jg
in
or
mov
mov
push
dec
xor
cmps
cmps
out
mov
fld
jmp
dec
pop
jge
push
sub
push
cmp
xor
int3
int3
test
icebp
enter
pop
test
xor
mov
idiv
(bad)
scas
and
fcom
cmp
inc
test
jb
enter
pop
(bad)
rcr
dec
push
js
mov
xor
test
(bad)
in
arpl
mov
cs
cdq
retf
pop
xchg
mov
lahf
(bad)
pop
in
cld
dec
psllw
and
ret
add
pop
cmc
outs
add
push
or
in
cld
push
xchg
xor
lahf
sub
pusha
pop
(bad)
jecxz
and
sub
das
cmps
pusha
call
sub
sbb
push
mov
pop
(bad)
xchg
ins
adc
cmps
js
pop
pop
sti
xchg
xchg
outs
loopne
dec
int
push
and
mov
mov
push
shl
mov
push
mov
adc
dec
scas
or
pop
and
xor
sub
sub
jb
or
rcl
inc
cdq
add
leave
cmp
sub
cmp
lds
or
fild
(bad)
sbb
xor
ret
fsub
pop
repz
mov
fstp
lahf
mov
(bad)
mov
vandnpd
sub
or
add
ins
icebp
cli
stos
out
mov
mov
(bad)
ss
cwde
adc
fistp
lock
in
push
dec
lods
jg
aaa
xor
dec
pop
dec
rcr
and
push
jmp
mov
push
jl
xchg
lds
outs
dec
jbe
shr
inc
sub
cli
mov
sbb
pop
rcl
xchg
loope
jge
jmp
push
mov
sbb
xchg
inc
hlt
cwde
add
mov
pop
cdq
shr
fs
mov
je
imul
adc
int3
push
fld
sub
imul
mov
mov
shl
scas
mov
dec
push
mov
pop
jae
enter
cmp
and
bnd
or
sub
je
imul
or
sar
sbb
add
sub
idiv
cmc
and
mov
add
mov
sbb
repz
cli
movs
jns
xor
pop
fwait
and
ins
movs
test
mov
xchg
data16
pcmpgtd
out
(bad)
sub
add
xor
addr16
sub
inc
xor
imul
data16
in
ror
and
jmp
div
sub
and
icebp
lahf
in
jg
pop
push
mov
sub
mov
lldt
cli
xchg
inc
mov
or
dec
cmp
mov
outs
call
mov
xchg
ficom
pop
inc
xor
outs
mov
(bad)
xchg
out
call
js
outs
stos
jae
mov
lods
and
push
jp
popa
aam
jp
mov
mul
(bad)
adc
sti
cdq
rcl
sub
leave
enterw
inc
mov
push
fmulp
pop
dec
push
push
psubusb
or
push
fwait
popf
mov
sar
ret
ins
and
mov
dec
push
icebp
cmc
dec
mov
mov
dec
push
in
pop
lea
fucomp
inc
mov
ror
cmp
mov
lock
std
and
pop
inc
loopne
xchg
pusha
stos
xchg
call
ret
dec
data16
icebp
out
xchg
dec
sub
mov
js
aad
outs
into
pop
idiv
add
adc
sbb
jecxz
fld
xchg
adc
iret
xor
data16
xchg
sahf
out
fucomip
mov
mov
ret
push
dec
xor
lock
mov
fisttp
aas
imul
stc
fucomp
inc
pop
test
pop
or
sbb
push
(bad)
dec
sbb
fdiv
push
icebp
mov
cmp
dec
cmp
dec
add
xchg
(bad)
iret
or
push
mov
icebp
neg
jmp
ja
scas
cmp
mov
xchg
sbb
push
push
jno
or
and
in
aad
xchg
mov
cwde
and
jo
push
xor
dec
daa
shl
aas
lods
arpl
mov
mov
mov
xchg
xchg
sbb
dec
out
pop
test
iret
jmp
push
xchg
cmp
(bad)
scas
icebp
and
pusha
std
fadd
fst
ret
icebp
out
bound
push
in
cmps
sub
sbb
sti
popa
cld
mov
js
adc
(bad)
xchg
inc
lahf
loopne
mov
jno
sbb
rcr
test
push
ja
out
outs
add
inc
push
add
sub
add
fcmovnb
pop
fwait
out
sub
jno
int
in
dec
xor
lods
sbb
inc
(bad)
sbb
xor
lods
adc
inc
stc
repz
jge
test
sar
xchg
test
xchg
push
adc
and
loopne
add
push
dec
pushf
push
pop
stos
push
add
loope
jbe
xor
jno
inc
mov
xchg
bsr
lock
out
mov
jae
jmp
xchg
scas
jmp
pop
adc
adc
lahf
dec
jl
push
(bad)
retf
retf
dec
(bad)
aad
mov
sbb
add
mov
jmp
push
cmc
adc
sub
arpl
(bad)
inc
mov
mov
shl
loope
push
fsubr
cmp
adc
(bad)
pop
lahf
loop
fsubr
std
out
mov
cmp
add
push
jmp
sar
retf
xchg
cmp
mov
push
pop
mov
shl
xor
mov
inc
imul
lods
inc
out
sbb
mov
inc
mov
sbb
gs
sub
mov
dec
(bad)
sbb
rcl
and
jnp
mov
cmp
mov
sub
std
icebp
clc
loope
dec
mov
stc
cmp
jns
icebp
(bad)
rcl
and
mov
scas
mov
fild
dec
jp
retf
ja
loopne
push
inc
xchg
cmp
rol
paddb
or
in
sar
test
or
inc
xchg
lods
inc
stc
mov
mov
jmp
enter
inc
cwde
mov
mul
xchg
std
xor
jge
fsubr
pop
and
or
into
xchg
(bad)
test
lahf
mov
xchg
ret
out
lods
inc
ins
and
jb
sub
cmp
push
aad
push
(bad)
fnsave
into
adc
enter
(bad)
mov
sub
mov
xchg
dec
retf
lods
mov
adc
std
ds
xor
aas
jmp
add
push
and
mov
out
mov
add
add
inc
mov
jl
and
sbb
mov
mov
imul
mov
push
cmp
and
fs
sbb
lock
daa
fwait
mov
dec
call
jns
inc
(bad)
add
test
ss
inc
call
adc
inc
call
je
mov
iret
cmp
outs
icebp
neg
fbstp
retf
popa
cld
inc
dec
imul
mov
mov
mov
aas
sbb
inc
bound
or
aas
repnz
repz
adc
push
adc
cli
scas
leave
push
ss
loopne
jnp
inc
outs
xchg
mov
mov
mov
fist
pop
inc
mov
enter
bnd
das
shl
or
and
inc
mov
pop
mov
cwde
push
sbb
rcl
xchg
out
mov
sub
push
jns
fisub
pop
cmps
mov
hlt
and
sub
jp
movs
mov
mov
sbb
loopne
push
rcr
fstp
outs
push
dec
xor
mov
cwde
mov
or
jae
push
dec
sub
bound
xchg
int3
(bad)
adc
mov
nop
(bad)
push
jb
dec
sub
xlat
std
pop
je
jge
jl
popa
sti
mov
jg
or
inc
inc
mov
fadd
cdq
or
and
loop
out
fcomi
jb
ficom
dec
pop
sbb
movs
outs
inc
loopne
push
push
cld
mov
add
mov
push
xchg
dec
clc
(bad)
and
(bad)
mov
loopne
lock
xor
mov
cdq
mov
inc
mov
lods
adc
sbb
dec
push
adc
ins
sub
mov
mov
push
dec
xchg
and
push
ficom
lods
les
sbb
shl
pusha
jo
(bad)
dec
(bad)
fwait
xchg
and
es
mov
sub
shr
(bad)
xchg
enter
cdq
cmp
test
loopne
mov
sub
icebp
mov
repz
inc
inc
aad
push
mov
cdq
aaa
outs
dec
xchg
lahf
out
jl
gs
cmp
inc
jmp
xchg
dec
inc
rcr
mov
iret
jle
cmps
mov
push
pop
imul
mov
lds
clc
sub
jmp
sub
repnz
retf
ficom
rcl
ret
sub
sub
pop
les
dec
pusha
stos
aas
(bad)
enter
fchs
add
xor
arpl
out
shl
arpl
in
adc
arpl
and
enter
popf
mov
or
or
test
mov
and
or
ja
bound
repz
loopne
sub
sub
cwde
add
dec
mov
rol
cmp
add
imul
add
cmp
mov
sahf
lahf
repnz
sbb
inc
bnd
aaa
dec
loope
xchg
sbb
mov
mov
inc
mov
dec
xchg
cmp
lock
mov
stos
ds
pop
xchg
add
fldcw
xchg
push
mov
jbe
retf
dec
int
clc
jns
arpl
(bad)
in
jg
jmp
adc
pop
and
stos
xchg
mov
lock
and
int3
push
add
mov
pop
sbb
inc
adc
je
retf
out
push
sbb
aas
xor
retf
int3
push
int
retf
in
cli
fcmovu
xchg
ret
push
mov
test
fimul
pop
(bad)
sti
push
cdq
jp
and
fs
push
mov
sub
test
push
cmp
push
pop
add
xchg
(bad)
and
idiv
imul
add
and
es
mov
push
loopne
or
xor
out
stos
inc
pop
push
inc
pop
add
xchg
push
and
jno
paddusb
xor
lock
gs
mov
inc
mov
cli
mov
push
and
test
test
(bad)
fsub
scas
mov
or
lds
(bad)
jo
scas
xchg
fs
cmps
pop
push
test
xor
fcom
loopne
(bad)
pop
ss
pop
test
je
ret
push
jbe
push
cmp
in
push
in
mov
pop
or
shl
pushf
pop
or
xor
cmp
inc
idiv
shr
pop
jle
sub
fst
xor
push
ror
data16
loop
fiadd
fxch
ret
sbb
pop
outs
dec
add
mov
aam
psllq
stc
adc
leave
jmp
dec
ret
lahf
and
rcl
shl
lods
push
not
mov
bsr
xor
mov
adc
outs
jns
xchg
inc
cmc
into
sbb
xor
mov
push
jmp
stos
push
fild
xlat
(bad)
sar
xchg
push
clc
ficomp
mov
lods
mov
enter
cdq
cmp
push
or
xchg
aas
leave
sbb
ins
shr
or
sbb
xchg
mov
js
sbb
(bad)
stos
and
inc
neg
call
rcr
outs
lock
(bad)
push
xchg
shr
push
shl
aad
jbe
xchg
push
pushf
xor
cmp
in
fldln2
push
aaa
fisttp
js
lods
jnp
cld
clc
and
je
add
mov
addr16
xor
js
jns
in
call
test
adc
rcl
stos
fs
jle
sbb
pop
push
xor
jmp
js
es
aad
lahf
arpl
jnp
(bad)
(bad)
mov
das
rcl
retf
jmp
sahf
(bad)
push
adc
sbb
lock
push
cmps
leave
sbb
adc
pop
and
loope
neg
mov
xchg
mov
xchg
sbb
sbb
lsl
jmp
pop
out
std
dec
scas
xchg
(bad)
bound
out
jb
cli
dec
inc
ds
add
add
xlat
jno
push
gs
adc
mov
out
sub
mov
dec
cmp
fs
or
mov
pop
fnstcw
jno
bound
movs
retf
inc
push
xor
mov
inc
(bad)
das
jb
or
push
push
mov
jnp
mov
xchg
ins
sub
fild
pop
(bad)
inc
retf
mov
mov
aas
ins
jmp
lds
mov
dec
fst
xor
cli
scas
jg
enter
add
or
in
push
dec
pusha
cmp
add
ds
ret
mov
mov
and
or
fdivr
ins
sbb
jo
repz
jecxz
cld
jmp
xchg
pop
jge
mov
jge
add
jb
or
inc
(bad)
fxam
stos
xchg
push
or
jnp
mov
push
fisub
add
pop
push
adc
cld
jo
add
arpl
(bad)
sar
lods
rcr
cmp
lods
imul
mov
push
pop
(bad)
jge
inc
fild
mov
jae
cld
inc
xor
ins
or
cmp
fnstenv
dec
dec
popf
xor
sub
push
dec
ins
pop
dec
pop
test
push
cmps
xchg
sbb
push
xchg
test
or
and
cs
add
iret
hlt
xchg
pop
imul
test
xchg
gs
retf
js
and
loop
mov
and
test
inc
js
cvttps2pi
sub
add
cmp
icebp
push
retf
fcmovbe
dec
test
add
jne
(bad)
mov
and
nop
push
test
push
in
add
and
out
movs
jl
sbb
pop
pusha
es
dec
mov
(bad)
cmps
pop
nop
jg
in
cmp
es
xor
cmp
js
xcrypt-cfb
cmps
mov
bnd
lds
ror
imul
arpl
xchg
adc
lods
xor
repnz
pop
call
(bad)
mov
push
mov
xor
sbb
pop
mov
pop
rcr
jmp
dec
xchg
sti
dec
inc
push
pop
sub
jmp
jmp
jno
mov
pop
das
or
in
lahf
ror
sbb
fild
sbb
call
add
in
sbb
and
mov
(bad)
in
sbb
push
js
popa
mov
or
inc
imul
xor
adc
(bad)
mov
out
test
xor
sbb
dec
imul
jb
dec
or
fisubr
pop
xor
xor
lds
aaa
(bad)
inc
cs
sbb
loope
test
retf
ror
test
mov
data16
xlat
outs
inc
movs
jbe
inc
movs
jnp
sbb
dec
test
mov
retf
jg
retf
retf
jns
sub
sbb
repz
mov
es
xor
js
cmps
cdq
sti
dec
mov
mov
std
scas
stos
mov
stos
test
std
and
aad
and
xchg
mov
add
mov
push
adc
lds
push
pushf
jne
mov
(bad)
mov
dec
loop
sub
not
shl
add
or
retf
popf
outs
popf
pop
dec
cmp
lods
rol
daa
push
jmp
iret
dec
xchg
(bad)
(bad)
imul
call
sbb
aaa
pushf
dec
mov
out
pop
cmp
xchg
ins
sub
pop
jmp
rcr
adc
sahf
mov
mov
jp
cwde
adc
scas
cs
jo
mov
mov
enter
mov
lock
and
movs
js
imul
sbb
gs
and
out
repnz
and
and
retf
xor
cmps
cmc
repz
(bad)
retf
scas
(bad)
xor
outs
mov
(bad)
ret
int
retf
jno
sub
and
fisubr
retf
inc
xchg
jmp
adc
xchg
dec
or
stos
test
mov
jne
mov
sahf
mov
mov
xor
jmp
fdivr
lahf
pop
add
mov
jmp
push
jno
inc
push
movs
xor
cs
scas
or
pop
leave
jmp
add
mov
lock
adc
cmc
jo
sar
std
mov
das
sbb
jl
cmp
mov
dec
outs
in
test
cmp
push
mov
cmp
xor
lods
mov
das
jo
sub
movs
cmp
jbe
es
inc
mov
jae
cld
out
sub
pop
ror
stc
inc
loopne
inc
push
push
jae
mov
xchg
movups
xlat
jb
add
cli
fisub
dec
pop
jle
inc
inc
mov
xchg
adc
cdq
fwait
jns
push
add
mov
loop
inc
movs
adc
pop
sub
adc
daa
pop
push
std
(bad)
sub
repnz
and
xchg
pop
sub
test
enter
and
leave
rcr
std
dec
jne
xchg
cld
jmp
mov
sti
mov
sbb
adc
xor
js
or
inc
cld
mov
add
fidivr
jecxz
push
sub
fisub
sar
mov
stos
sub
mov
adc
add
scas
lds
rol
shr
fwait
dec
mov
xor
inc
outs
or
mov
sbb
xor
push
and
rol
sbb
lods
xor
fst
rcr
cmps
mov
in
popf
(bad)
cli
fist
cmc
xchg
inc
popa
bound
aam
sbb
cld
repnz
icebp
add
mov
aam
or
movs
add
lods
int3
fnstsw
test
(bad)
in
mov
aad
imul
adc
jae
test
or
leave
sahf
jl
repnz
pop
shl
pop
adc
pop
push
jle
jb
fdivr
ja
push
sub
into
mov
cmp
out
stos
jb
pushf
cdq
inc
mov
addr16
out
adc
adc
ss
sbb
xchg
stos
jo
or
das
int
test
repz
push
cld
fcomp
mov
rcl
dec
test
push
or
ret
(bad)
mov
xchg
add
pop
add
mov
jmp
leave
jmp
fbstp
clc
pushf
push
xor
pop
repz
mov
enter
xchg
inc
sbb
mov
lock
ja
sbb
mov
arpl
lods
pop
in
inc
dec
int3
add
pop
jp
add
add
add
jg
jmp
inc
add
cmc
sahf
jmp
mov
push
iret
add
or
and
fsubr
sti
sbb
pusha
leave
jle
popf
cmps
test
ret
xor
cmps
ror
fisttp
in
sbb
fdivp
mov
mov
cs
sub
cmp
data16
cli
adc
nop
pusha
test
pop
js
jno
mov
jae
cmc
cmp
es
pop
push
adc
dec
mov
xor
fadd
dec
lea
icebp
dec
dec
inc
retf
pop
mov
loope
push
push
rcr
in
push
into
mov
mov
push
adc
dec
mov
pop
or
stc
pop
popf
sbb
popa
jmp
jbe
mov
xchg
fdivrp
jmp
fbstp
pop
xchg
xchg
out
jmp
into
jmp
leave
in
sahf
or
scas
xor
rol
aas
hlt
jne
jge
sbb
mov
les
std
sub
dec
gs
fld
cmp
adc
adc
and
cmps
xchg
add
xlat
mov
out
repnz
call
mov
loopne
lods
(bad)
into
xchg
repz
mov
jp
int3
adc
lea
and
dec
dec
xchg
push
jmp
addr16
add
fwait
dec
cmp
xor
int
popa
pop
push
sbb
clc
mov
(bad)
inc
cmp
jmp
inc
stc
fnsave
xor
mov
mov
xor
cwde
push
les
pop
test
ja
sbb
push
rcl
movs
jge
cmp
mov
ins
dec
imul
xchg
(bad)
pop
jne
mov
fistp
aaa
pop
and
add
add
dec
cmp
xor
sub
jg
pushf
xchg
jbe
icebp
pop
cmp
not
pop
pop
mov
jl
shl
and
and
test
or
jge
cld
rcl
or
or
sub
(bad)
xor
mov
push
into
cmp
test
jo
pushf
fist
cmp
sbb
push
cld
pop
mov
sub
inc
or
outs
jno
add
mov
(bad)
sub
fisubr
mov
stc
push
(bad)
fdiv
inc
lock
fsubr
push
xor
sub
jle
pop
cmps
xchg
dec
pop
sub
loop
mov
cmps
psrld
aam
pop
cs
cmp
pusha
test
das
cwde
xchg
inc
in
clc
movs
ret
(bad)
cmps
repz
pop
dec
aaa
push
sbb
les
imul
cmp
jge
hlt
fadd
ds
fstp
pop
add
mov
jns
xchg
addr16
(bad)
inc
rcr
enter
ins
or
(bad)
fldpi
and
je
add
ins
cmps
data16
stos
idiv
pusha
jno
pop
push
xor
clc
cmps
dec
mov
push
sbb
daa
jmp
push
repnz
adc
sbb
stos
inc
lods
call
test
stos
dec
pushf
jns
shr
xchg
enter
std
mov
and
rcl
addr16
jecxz
das
outs
shl
dec
sar
out
sbb
fisub
retf
mov
cmp
lock
push
add
sub
jecxz
fiadd
cmps
and
cmp
lahf
lea
inc
les
shl
push
fsubr
adc
js
push
arpl
cmp
and
cmc
push
mov
mov
push
pop
mov
fwait
test
pop
mov
sub
popf
push
mov
push
out
clc
push
fstp
ret
mov
das
hlt
xchg
push
mov
imul
ins
lahf
in
scas
sub
push
add
sbb
mov
test
lahf
enter
xor
fist
sbb
mov
call
cmp
nop
mov
jmp
mov
or
int
fisubr
cwde
fs
mov
xor
es
fwait
es
adc
hlt
ret
ret
add
std
(bad)
inc
inc
mov
or
pop
mov
mov
gs
mov
pop
out
and
pop
rol
and
cmps
jns
push
imul
fs
dec
mov
int3
addr16
inc
sahf
and
mov
lea
add
mov
clc
enter
adc
sti
lods
clc
shl
cs
(bad)
sbb
in
in
movs
(bad)
in
add
lods
inc
adc
xchg
aam
xor
jmp
mov
pop
xchg
out
imul
xor
jno
je
jmp
dec
mov
and
push
pusha
(bad)
imul
dec
or
jmp
push
mov
mov
retf
and
retf
jne
and
mov
mov
mov
ror
push
gs
rcl
sub
sbb
cmps
inc
inc
dec
jno
and
retf
mov
mov
aaa
stos
mov
gs
xor
add
xchg
fild
lahf
jbe
inc
repz
add
cmps
das
out
inc
or
jmp
cmp
mov
cmp
fmul
out
mov
jmp
xor
xor
push
fdivr
mov
push
fisttp
push
jb
xchg
pop
push
mov
mov
stos
(bad)
fcom
arpl
mov
stos
jg
js
mov
push
test
dec
rcr
push
inc
outs
mov
mov
sahf
mov
ret
lock
cmp
or
test
or
(bad)
or
pop
ficomp
int3
mov
xor
(bad)
jmp
(bad)
push
(bad)
fidiv
shr
mov
xchg
test
test
and
sar
dec
fistp
movs
das
or
jmp
test
jg
enter
data16
dec
cmp
lock
aam
add
cmps
cli
mov
clc
stos
and
dec
or
loopne
ffree
test
adc
in
inc
pop
movs
loop
outs
sbb
shr
call
mov
push
lds
fnsave
adc
data16
leave
jbe
lds
sahf
or
sub
push
sub
xor
xchg
xor
jnp
out
repnz
push
or
popf
xor
xchg
mov
xlat
xchg
ja
je
shl
mov
xchg
or
sub
ret
xchg
cmp
clc
adc
or
ja
or
pop
xchg
lds
mov
xor
sbb
sahf
jecxz
inc
lahf
retf
sub
rcr
xchg
ja
and
jecxz
pop
(bad)
add
or
int3
jg
jae
dec
inc
push
pop
pop
push
aad
arpl
fnsave
lods
imul
sub
pop
jo
jno
rcl
push
pop
daa
sbb
dec
and
ficomp
dec
cmp
into
or
jmp
sub
mov
pushf
call
jno
inc
pop
push
test
jnp
jp
arpl
loope
cld
mov
outs
jnp
jg
inc
xlat
lahf
jp
push
test
ja
leave
and
xchg
mov
mov
ss
fdiv
jns
jo
lods
popf
and
xchg
ret
push
into
jno
pop
ins
push
rol
das
mov
add
iret
aad
xor
push
fs
push
das
push
popf
jmp
mov
dec
fcmovnu
cmps
pop
lahf
push
mov
repz
rcr
mov
into
pop
xchg
jne
test
mov
sbb
mov
jbe
jg
push
add
mov
cmp
mov
lods
jnp
xchg
fcmove
in
cmp
xchg
stos
inc
sub
jmp
ret
jae
adc
mov
jl
int
lds
mov
jo
cmp
iret
pop
test
fld
jmp
enter
outs
retf
lods
xchg
daa
gs
inc
or
loope
jae
fidiv
xor
into
sub
jecxz
mov
fimul
loopne
aad
inc
inc
inc
das
fst
sub
mov
pop
jns
mov
das
aaa
loopne
(bad)
imul
push
pop
xor
pusha
xchg
idiv
mov
pop
data16
push
aas
cmp
jle
sbb
sub
adc
pop
fld
(bad)
pop
mov
inc
mov
(bad)
adc
mov
push
fadd
mov
and
or
repnz
sahf
push
cwde
dec
test
mov
mov
xchg
pop
lds
enter
push
out
data16
cs
loopne
add
jl
movs
cli
aam
in
cli
inc
aas
das
dec
push
imul
inc
mov
cmp
fld
push
clc
mov
dec
fwait
jno
xchg
mov
fcmove
(bad)
jns
inc
adc
fs
je
aas
mov
nop
mov
xor
mov
push
outs
(bad)
and
mov
sti
stos
xor
push
jl
stos
push
scas
xchg
inc
mov
or
cmps
and
mov
repnz
sub
ret
or
inc
sbb
inc
test
div
push
jne
leave
sub
xor
xchg
les
xor
mov
add
pop
xchg
and
fwait
mov
adc
cld
addr16
xchg
repnz
jecxz
movs
dec
sub
test
fstp
mov
out
(bad)
cdq
sbb
sbb
(bad)
loopne
inc
or
pop
inc
push
adc
ins
dec
scas
arpl
lock
jmp
repnz
and
lds
and
bound
xor
fistp
xor
dec
repz
inc
loopne
stos
jle
arpl
mov
jb
cmp
shr
mov
(bad)
rcl
push
fsub
mov
mov
clc
mov
mov
cmp
fnsave
dec
mov
(bad)
pop
test
add
push
mov
sub
aam
mov
xor
pop
or
mov
in
jg
jne
sahf
push
mov
add
(bad)
xchg
jno
push
lods
mov
xor
mov
push
push
cmp
rol
adc
sbb
and
imul
pusha
push
cli
sub
adc
paddusb
xchg
cmp
add
push
loop
and
jo
xchg
in
stc
push
into
fnstcw
js
mov
mov
jp
push
loop
mov
and
loopne
add
popf
and
sub
dec
mov
test
inc
xor
mov
fisttp
test
nop
and
clc
jmp
mov
jge
or
or
loope
sbb
fwait
sub
mov
cmp
add
mov
pop
hlt
movzx
call
adc
dec
pop
push
cli
xor
adc
push
repnz
jnp
test
pop
(bad)
adc
js
push
dec
cli
clc
shl
cmp
jmp
fs
dec
ins
mov
pop
(bad)
push
mov
jno
push
movs
cmps
jo
push
test
adc
mov
bound
cmp
pop
outs
je
xchg
int3
push
dec
aas
dec
xchg
xor
clc
mov
mov
lahf
push
cmc
push
arpl
fmul
pop
outs
sub
push
cli
mov
bound
mov
iret
outs
scas
into
cwde
dec
cwde
bound
sub
xor
or
xor
push
out
xchg
je
add
lock
pushf
sub
mov
leave
mov
stc
loop
pop
into
sbb
inc
jg
dec
cld
push
jne
fdivr
or
in
ror
cmp
cmp
mov
imul
nop
jmp
or
sahf
sub
shr
jg
pusha
jl
cmp
adc
adc
mov
mov
aaa
outs
mov
sub
emms
pop
mov
mov
scas
popf
cmp
das
ja
leave
pusha
cmp
sub
xor
ja
fdiv
add
mov
cld
add
in
dec
aas
add
xlat
movs
dec
cdq
je
jg
and
push
in
and
leave
push
or
outs
add
cdq
aam
popf
push
call
jbe
cmp
push
lock
push
in
fcom
test
push
inc
imul
cmp
xchg
jmp
jbe
dec
and
pop
iret
pop
out
(bad)
push
adc
mov
jnp
(bad)
out
(bad)
fmul
pop
jb
ret
sbb
rcl
xor
jb
pusha
push
add
shr
in
sub
fucom
popa
popa
test
and
aaa
sub
fdivr
sbb
or
ss
push
sbb
push
pop
inc
dec
lahf
and
in
out
sahf
fist
cmc
inc
mov
in
sbb
rcl
test
icebp
adc
mov
sbb
fyl2x
(bad)
xchg
xor
dec
dec
xchg
xchg
lods
dec
iret
jae
push
hlt
pusha
xchg
sbb
outs
(bad)
jmp
into
pop
push
jle
and
dec
outs
lods
inc
sbb
fdivp
add
mov
sbb
cmps
xchg
xchg
gs
mov
mov
cmp
sub
adc
pop
mov
inc
push
aaa
jle
xchg
scas
in
out
data16
push
outs
fdiv
add
daa
je
jl
jmp
cmp
mov
mov
ja
(bad)
jecxz
mov
mov
ss
xlat
pop
fimul
dec
(bad)
(bad)
jnp
cmp
js
inc
cmp
sbb
and
jle
stos
fidiv
test
lods
cmp
pop
or
sbb
xchg
cwde
inc
inc
sbb
outs
shr
jg
and
pop
sbb
jmp
xor
cmp
test
call
and
xchg
test
imul
lods
nop
sti
xchg
lods
jae
ret
mov
lods
mov
push
je
jle
mov
and
fstp
dec
sub
lods
mov
lds
inc
lahf
das
imul
scas
lods
xchg
fs
push
sahf
(bad)
xchg
sub
and
(bad)
jns
rcr
inc
nop
rcr
inc
jp
jno
inc
retf
cmp
mov
jbe
push
xor
das
repz
push
jmp
and
mov
push
jg
jo
sub
popa
out
(bad)
cmp
inc
sub
inc
and
push
ja
push
cs
inc
mov
idiv
sub
jno
sbb
retf
(bad)
std
mov
jno
jl
xchg
cmp
scas
mov
mov
mov
or
cwde
je
pop
push
fidivr
cmp
adc
mov
mov
sbb
xchg
iret
sbb
cmps
jecxz
cmp
stos
ds
sub
jmp
dec
mov
mov
scas
enter
in
push
idiv
addr16
pop
inc
inc
pusha
invd
jnp
and
cmps
imul
mov
inc
cwde
daa
xlat
and
jnp
mov
inc
and
xor
xor
jmp
pop
dec
sbb
jecxz
iret
push
mov
(bad)
in
jae
and
or
cmp
mov
aad
out
fs
into
sbb
xlat
sub
inc
lock
ja
xchg
jmp
xchg
push
jne
leave
cli
mov
cmp
mov
push
sahf
fwait
das
sub
mov
mov
ret
xor
or
or
sbb
xor
sub
imul
cmp
dec
adc
adc
(bad)
push
mov
int
add
add
push
(bad)
adc
inc
les
xor
mov
shr
mov
sbb
fdiv
add
xchg
sbb
ins
xor
xchg
dec
xor
xor
(bad)
es
pop
pushf
lock
lds
das
loop
dec
xor
pop
retf
repz
aad
xchg
jge
pop
repnz
sbb
gs
mov
and
mov
test
pop
adc
sub
das
mov
adc
lds
test
lahf
and
test
cmp
ret
xchg
int3
mov
push
mov
inc
adc
mov
rcr
xchg
pusha
xchg
cld
aaa
popa
(bad)
adc
out
lock
ins
cdq
mov
jbe
add
nop
sbb
add
sahf
scas
inc
int3
add
ja
sahf
sub
mov
pop
retf
cmp
xor
bound
fwait
jle
cmp
jbe
es
rol
add
mov
fs
jmp
mov
cmp
pusha
ror
shl
out
add
mov
xchg
push
mov
mov
add
mov
mov
repz
jbe
inc
jg
(bad)
cmc
jg
mov
lea
push
(bad)
test
loop
test
std
mov
loopne
retf
(bad)
cmp
pop
addr16
daa
pop
and
add
mov
pop
push
inc
iret
dec
lahf
das
mov
fstp
ror
pop
mov
adc
les
mov
xlat
sbb
loope
mov
mov
sbb
test
and
in
mov
pop
retf
pop
fsubr
or
mov
inc
and
fcmovnu
sub
sbb
xchg
pop
inc
push
call
pop
mov
pop
fcmovne
fild
imul
rcl
sar
icebp
adc
retf
loop
mov
mov
mov
xor
mov
data16
push
mov
mov
push
clc
mov
push
dec
outs
cmps
push
pop
pop
ror
jnp
mov
dec
mov
mov
pop
popf
jge
stc
adc
cmps
repz
pop
sub
fld
fbld
pop
(bad)
or
cld
test
xor
cmp
mov
repz
dec
sub
push
mov
fsub
mov
call
(bad)
(bad)
or
push
push
repnz
mov
xlat
mov
and
int3
sbb
icebp
jmp
or
or
push
mov
xchg
xchg
les
loop
add
cli
xor
or
mov
sub
push
adc
or
cmp
retf
mov
xor
dec
pop
cmc
pop
daa
sahf
mov
(bad)
std
in
push
es
scas
push
jp
xor
jmp
or
and
mov
sbb
lods
into
sub
in
cli
pop
pop
sar
and
lea
call
cmp
inc
push
push
frstor
push
xor
leave
loope
sti
dec
(bad)
leave
dec
dec
sbb
lock
inc
in
cmp
lock
fistp
cmp
popa
(bad)
mov
loop
in
movs
dec
or
shr
mov
into
and
popf
sub
sbb
jo
mov
push
test
repz
jecxz
mov
ret
jecxz
fucom
add
xor
push
mov
and
leave
enter
lods
xor
gs
pop
imul
dec
add
dec
and
mov
je
lahf
leave
retf
sbb
data16
rcr
lea
pop
inc
sar
xchg
js
ins
icebp
popa
push
xchg
dec
and
xchg
icebp
call
aam
std
rcr
(bad)
pusha
or
or
cmp
fcomp
cmp
in
mov
sub
pop
inc
jnp
ret
adc
cs
fidivr
retf
gs
add
(bad)
popa
push
enter
mov
pop
xchg
cmp
mov
shl
jne
jmp
pop
rcr
push
xchg
outs
mov
call
movs
iret
inc
in
mov
pop
into
push
jbe
cld
mov
(bad)
jecxz
and
push
std
in
mov
ror
inc
cs
sbb
cmp
call
and
test
mov
xchg
cdq
add
jb
push
dec
in
and
push
inc
push
imul
sbb
push
test
cmp
lds
mov
in
mov
iret
inc
inc
loopne
arpl
sti
sub
adc
clc
xchg
fcmovnb
jmp
or
fucomip
jg
ss
mov
enter
dec
imul
pop
lods
xor
xchg
lock
adc
sbb
mov
clc
mov
out
call
mov
mov
mov
and
in
sub
jae
mov
jmp
xchg
cmps
lods
push
cs
inc
rcr
cmpxchg
push
and
sub
repz
rol
out
jp
je
fadd
xchg
dec
nop
jns
inc
jns
test
neg
mov
fs
and
popa
aas
push
push
lods
inc
xor
enter
les
xlat
ds
sbb
(bad)
cmp
push
xchg
xlat
push
adc
sub
lds
mov
mov
fimul
iret
push
(bad)
outs
sbb
adc
cwde
not
cmp
sbb
and
mov
inc
sbb
push
jp
and
adc
dec
cmp
xchg
jle
add
pop
push
aas
pop
lahf
xlat
dec
mov
sar
dec
push
mov
lock
or
mov
mov
rep
mov
or
rol
pusha
and
sbb
sub
out
lahf
cmp
fiadd
jmp
push
xchg
cmp
sti
mov
push
mov
sar
mov
test
fnstenv
add
push
fst
out
sbb
adc
add
and
add
add
repz
jb
pop
fcmovu
mov
je
sahf
je
mov
mov
lods
mov
xchg
js
rcr
pop
jb
ret
jp
dec
out
repz
xchg
or
repz
mov
push
retf
sar
cwde
aad
push
sub
jmp
retf
lds
xchg
repz
push
pop
push
test
sbb
rcl
inc
call
outs
mov
sbb
call
pop
cwde
mov
mov
dec
lds
inc
cmp
(bad)
shl
leave
xchg
enter
(bad)
in
push
adc
jl
movs
pop
cmp
cmp
sbb
xchg
or
inc
jp
retf
add
lahf
pop
mov
aam
ins
nop
or
lds
les
add
mov
or
adc
sbb
sbb
xor
cmp
test
ret
and
sti
cmps
adc
dec
pop
fsubr
outs
cmp
ja
dec
test
cmp
aas
out
fadd
mov
sar
arpl
mov
sti
sub
aaa
(bad)
jecxz
xchg
pushw
push
sbb
push
scas
mov
xor
push
mov
inc
aas
call
jnp
pop
fbld
mov
push
stos
xor
dec
cmp
inc
fwait
in
aaa
adc
and
mov
push
pop
cmp
(bad)
or
sub
int
pop
dec
call
test
int3
push
ins
jmp
scas
aad
ret
fsub
repz
ins
lahf
popf
test
sub
mov
mul
idiv
mov
call
cwde
cmc
cld
dec
add
or
stos
xor
ds
xchg
loope
dec
or
mov
call
push
ret
retf
mov
push
mov
adc
fs
jno
sub
sbb
jmp
(bad)
inc
icebp
shl
adc
add
int
movs
add
inc
ret
adc
push
stos
jl
stc
push
inc
push
les
dec
xsaves
push
add
sub
lods
cmp
jns
or
ins
add
lahf
rol
jmp
pop
pushf
cmp
or
jle
shr
push
jmp
mov
fcomp
stc
mov
test
in
int
xchg
mov
ret
cli
jmp
add
mov
push
pop
das
fstp
iret
push
xchg
push
repnz
imul
mov
test
adc
jno
add
ins
inc
pop
cmp
dec
mov
jmp
or
shr
xchg
mov
outs
dec
add
jp
inc
inc
lods
mov
xchg
scas
out
dec
js
adc
dec
mov
mov
or
hlt
sub
jecxz
push
mov
sub
pop
popa
and
sbb
push
daa
xchg
fwait
xchg
cwde
cmp
mov
pusha
cli
add
sub
sbb
xchg
cdq
add
xchg
pop
cs
js
ins
pop
inc
dec
rol
dec
add
jmp
dec
in
cdq
pop
add
pop
enter
push
sub
fst
jge
fcomp
pop
mov
xor
xchg
pushf
test
push
ss
mov
out
arpl
inc
jne
push
int
fcomp
add
mov
mov
mov
daa
ret
sbb
out
fadd
xor
adc
js
int
and
stos
mov
rcl
add
cmps
pop
xor
int
jp
pusha
rcl
mov
sahf
int3
cmps
sbb
pop
lahf
fldcw
adc
retf
pop
das
repnz
loopne
mov
enter
cmc
dec
retf
add
xchg
pop
out
or
mov
ficomp
test
mov
cwde
inc
xlat
dec
mov
sbb
add
rol
shr
push
shr
fild
mov
(bad)
in
jmp
mov
mov
ficom
pop
dec
inc
fs
jo
sbb
jmp
dec
lahf
push
aad
xchg
fstp
dec
mov
mov
cmp
js
push
mov
xchg
mov
icebp
and
sbb
pop
popf
(bad)
fldcw
movs
xchg
or
xor
fwait
nop
push
jecxz
jecxz
mov
into
xchg
mov
leave
mov
cld
cs
sbb
test
retf
imul
sub
fdiv
jb
adc
push
shl
stos
pop
sbb
bound
gs
call
es
into
retf
mov
clc
in
mov
call
rol
xchg
je
icebp
mov
or
inc
dec
ficomp
sub
push
cmp
dec
fistp
outs
aad
je
fistp
stos
adc
sbb
daa
sahf
and
sub
mov
inc
outs
fwait
movs
adc
cld
popf
mov
je
shl
bsf
addr16
pop
xor
popf
sbb
sub
xor
mov
adc
add
scas
dec
pusha
pop
push
dec
int
xchg
sub
xor
data16
(bad)
jbe
xor
and
aam
and
repz
out
imul
adc
loop
cmps
mov
pop
adc
lahf
and
jb
cmp
pop
push
ret
ret
cld
imul
bound
adc
outs
shl
int3
jbe
aad
mov
and
jb
add
jae
arpl
add
jmp
push
std
add
cmp
mov
mov
jb
pop
movs
dec
and
popa
push
std
aas
arpl
inc
and
ins
add
shl
(bad)
mov
jmp
dec
mov
pop
and
sub
mov
or
xor
out
xor
ss
ins
inc
pushf
and
je
addr16
sti
sbb
xchg
adc
add
fsubp
add
sub
adc
add
or
sti
cld
sar
adc
push
stos
push
in
mov
mov
retf
int
mov
sub
inc
jae
sub
cmp
nop
ja
addr16
xchg
push
and
iret
scas
mov
popf
scas
ret
inc
lock
lods
movs
xchg
sub
inc
dec
mov
cmp
mov
xchg
aad
xor
mov
cli
sbb
shl
fcmovnu
cmp
ja
add
fwait
push
xchg
jle
stos
repnz
(bad)
xchg
cmp
jbe
imul
pop
int3
inc
push
verr
ja
xchg
jge
out
ja
popa
sub
adc
fild
sub
add
or
data16
loope
sti
loopne
push
cs
add
ins
das
jmp
mov
xchg
ret
mov
lods
and
rcr
pusha
jne
lea
out
scas
js
repnz
bound
adc
test
jno
add
into
(bad)
mov
das
mov
xchg
cld
dec
inc
jo
adc
in
jne
adc
sbb
js
pop
or
add
outs
sub
enter
mov
cli
pushf
adc
or
cmp
sbb
pop
xor
sub
pop
lahf
jns
jp
dec
sub
jge
bound
int
data16
shl
cmc
cwde
push
push
and
pushfw
les
daa
pop
jl
inc
dec
in
xor
int
pop
das
das
add
mov
les
mov
ds
jo
or
ins
and
xchg
sbb
loop
test
sub
fstp
test
adc
loope
push
mov
push
stos
pop
sbb
es
shl
lods
fstp
pop
mov
fiadd
sbb
jns
ins
dec
iret
mov
push
or
pop
mov
push
rcl
pop
scas
mov
add
cmps
adc
mov
mov
and
adc
xchg
sbb
rcl
lods
or
push
into
lods
xor
mov
jge
dec
cdq
ror
sbb
rol
jp
ins
push
cld
push
push
ret
repnz
xchg
push
les
sar
addr16
enter
cmps
dec
cmps
leave
add
test
dec
aaa
adc
or
neg
mov
fcom
xchg
sbb
jno
xchg
dec
jmp
adc
dec
add
add
sar
push
ret
sub
mov
mov
cmc
rcr
sub
mov
xor
popf
dec
sub
fnstsw
clc
retf
and
hlt
daa
ror
shl
hlt
cmp
(bad)
js
jb
mov
in
adc
add
test
stc
xchg
jb
and
fs
push
test
add
sub
inc
hlt
das
pop
ss
in
in
repz
or
imul
scas
ror
xor
ja
adc
mov
fwait
sub
out
js
add
repnz
inc
test
addr16
and
pop
pop
adc
xchg
sub
(bad)
mov
mov
or
sub
sub
int
dec
and
xchg
rol
mov
pusha
add
add
inc
(bad)
out
mov
mov
jmp
adc
inc
ins
xchg
es
in
push
mov
push
jle
sbb
pushf
push
mov
cmp
inc
sar
jg
add
mov
and
inc
repz
inc
popf
mov
push
adc
call
in
jbe
dec
sbb
les
mov
jl
int3
cmps
movs
arpl
dec
jl
imul
loope
push
dec
stos
xchg
jns
jmp
cli
mov
dec
arpl
push
pop
jmp
dec
and
jo
push
xchg
ja
sub
jg
xor
in
jmp
inc
mov
ds
push
pop
cmp
add
push
sub
cmps
cli
daa
movs
jnp
aaa
jmp
int3
inc
xor
nop
mov
(bad)
fmul
call
sbb
pusha
test
jmp
pop
adc
stos
dec
xchg
pushf
hlt
cmp
(bad)
push
neg
and
enter
jae
mov
cld
jne
inc
test
jbe
cmc
movs
push
pop
test
bound
sbb
pop
dec
adc
jnp
mov
sbb
push
cmp
mov
inc
push
fistp
out
retf
dec
out
in
mov
test
lea
rol
sahf
int
mov
sbb
inc
cmps
iret
fnsave
jo
cmps
add
and
ss
ss
and
add
jae
les
jmp
mov
cmp
lock
(bad)
in
mov
arpl
mov
int
das
push
jmp
outs
rol
mov
mov
cmp
xchg
fdivr
pop
jmp
push
mov
sti
jne
enter
je
addr16
mov
pop
fstp
jmp
cmps
ds
pop
jo
and
ss
lea
stc
dec
jl
sub
xchg
rcpps
fist
push
dec
pop
sub
ret
or
cmps
mov
pop
add
jmp
xor
adc
stos
cmc
fbld
hlt
mov
dec
push
cmp
mov
add
mov
lods
pop
fisttp
jno
or
popf
xor
imul
rcr
push
pop
es
inc
mov
and
test
retf
sub
ins
fistp
bswap
fdiv
(bad)
mov
in
int3
adc
in
test
adc
cmp
pop
adc
adc
mov
pop
out
dec
dec
xor
aas
lock
fs
add
aad
sub
add
fld
in
xchg
xchg
popa
cwde
call
mov
rol
imul
call
div
sub
and
aaa
test
or
inc
imul
adc
push
cwde
sub
mov
scas
aam
push
pop
xchg
push
repnz
mov
dec
jns
hlt
cmp
sub
and
std
mov
shl
jge
sub
dec
shl
mov
adc
movs
es
test
mov
push
or
iret
fwait
mov
pop
xchg
adc
ret
aas
sub
fucomp
mov
(bad)
ds
dec
(bad)
aaa
mov
xchg
rcl
ror
cmp
ins
pop
mov
hlt
aam
call
loopne
xchg
movs
mov
outs
add
or
cmp
stc
cs
enterw
popf
outs
rcr
mov
jns
rcl
test
mov
daa
js
or
test
popf
(bad)
jle
out
xchg
cs
dec
jbe
sub
mov
test
sti
xchg
and
pop
inc
es
xor
xchg
jp
lods
mov
push
fistp
loop
test
xchg
leave
pop
lock
mov
inc
mov
stos
sbb
hlt
adc
jb
pop
es
mov
sti
push
xor
pop
fidivr
mov
je
fdivr
ds
call
push
(bad)
shr
mov
outs
imul
repz
sbb
nop
hlt
lock
out
js
push
gs
int
das
mov
es
ds
es
xchg
mov
sbb
pushf
aam
icebp
lds
jns
(bad)
pop
mov
enter
pop
pusha
and
mov
inc
sbb
and
fcomp
add
xor
mov
mov
push
test
mov
repz
scas
inc
pop
xor
ds
pop
aas
inc
push
leave
clc
(bad)
stc
mov
(bad)
add
int
xor
sub
aaa
adc
jmp
xor
sub
sbb
mov
stos
loope
cdq
js
cmp
mov
jge
sub
scas
dec
popa
rcl
mov
push
call
lods
push
js
jge
lea
test
pusha
and
into
cmps
les
pushf
add
fadd
sub
xor
dec
pop
inc
or
int3
pusha
mov
jl
mov
or
outs
cmps
arpl
loop
and
xor
dec
jnp
pop
sub
repnz
test
cs
sbb
add
and
idiv
push
mov
aas
push
shl
xchg
inc
pop
jnp
and
out
xchg
pop
xchg
hlt
xor
loope
repz
push
adc
add
leave
test
add
add
bound
fidivr
stos
or
and
fsincos
mov
lock
loope
sub
aam
popf
inc
std
cmp
cli
imul
cmc
mov
mov
xchg
xchg
xor
aas
pop
(bad)
dec
xor
inc
sub
or
or
sti
adc
iret
test
ficom
jmp
dec
icebp
movs
cmps
mov
cmp
mov
je
scas
dec
cmp
imul
mov
lahf
mov
sub
pop
jmp
inc
cmp
out
sahf
ss
cmps
sbb
xor
rcr
and
sbb
fdivr
and
mov
mov
dec
jns
arpl
sbb
int
dec
xor
push
out
mov
bound
xor
sub
xchg
adc
loope
test
push
push
pop
push
aam
dec
jno
sar
sub
(bad)
fwait
int3
sub
inc
jbe
mov
mov
imul
xor
mov
jl
mov
sub
sub
dec
xor
aad
adc
retf
jne
xchg
loop
(bad)
add
dec
stos
loopne
pop
push
cmp
cmc
test
inc
test
pop
or
pop
and
out
aad
in
jecxz
mov
add
scas
repz
xchg
int
sti
add
inc
inc
ss
push
xchg
popf
mov
sbb
and
xor
in
jl
mov
xor
and
(bad)
ds
int
inc
int
sub
sub
and
inc
xchg
call
push
jno
leave
retf
fmul
pop
ins
movs
xchg
out
addr16
hlt
push
jo
ficomp
mov
pusha
out
fs
cmp
mov
push
push
sub
sahf
gs
push
adc
mov
lock
shl
jne
sbb
jb
sahf
(bad)
out
aas
ror
sbb
mov
ins
fs
inc
or
bound
inc
xchg
outs
repz
push
lea
add
dec
popf
mov
sbb
outs
inc
cmp
xchg
lods
fld
pop
mov
pop
pop
mov
call
adc
mov
jmp
fmulp
movs
call
adc
(bad)
clc
in
push
push
fisub
or
imul
inc
sub
aad
ret
mov
sbb
jo
das
ins
test
xchg
xchg
push
(bad)
fld
jmp
pop
pop
(bad)
sbb
jle
mov
fmul
lds
(bad)
jmp
popa
inc
pushf
or
rcl
pushf
pop
push
pop
adc
icebp
xor
(bad)
hlt
jp
fwait
loopne
or
popa
shr
mov
mov
pop
lods
inc
xor
and
shl
sub
sbb
or
xor
das
test
mov
iret
es
fnsave
icebp
push
or
mov
mov
xor
sub
and
cs
add
jns
bound
enter
mov
test
das
cmp
or
adc
jns
out
sbb
cmp
jg
jbe
dec
mov
add
cmp
push
out
mov
in
adc
pusha
cli
movs
loop
scas
mov
sti
add
out
div
cld
inc
mov
fsubr
adc
addr16
xor
rcl
sub
(bad)
sbb
mov
add
sti
mov
call
(bad)
jp
pop
dec
sahf
ret
je
sub
jmp
stc
push
pop
add
(bad)
(bad)
idiv
jecxz
add
jmp
fs
pop
adc
cld
cmp
(bad)
jmp
(bad)
fwait
(bad)
lahf
movs
push
cs
push
add
test
adc
mov
adc
in
fidivr
cld
jmp
sbb
mov
sar
in
cs
inc
or
pop
push
js
dec
stos
or
add
ds
lods
mov
add
aam
dec
(bad)
mov
inc
dec
xchg
movs
daa
and
lahf
push
jmp
clc
dec
repz
push
dec
xchg
jl
jbe
hlt
addr16
push
cmp
cmp
cmp
add
dec
jp
sub
xor
stc
stos
cmp
xor
test
and
fisttp
mov
adc
(bad)
(bad)
in
movs
jbe
aam
repz
pop
int3
sbb
sub
scas
loop
in
xor
out
mov
push
out
shl
sbb
pop
jae
imul
dec
fsubr
ret
dec
xchg
mov
fnsave
jb
popa
xchg
test
sbb
push
mov
add
jno
out
sbb
test
adc
xor
sub
(bad)
mov
push
mov
push
mov
hlt
xor
jmp
popa
pop
icebp
add
cmps
inc
adc
fcmovbe
in
adc
sub
ror
adc
test
mov
cmp
into
inc
mov
xlat
neg
sti
jge
jle
mov
popa
mov
push
adc
lods
mov
lods
jmp
mov
jne
pop
or
push
ds
mov
in
dec
in
psubsw
call
div
jl
cs
jecxz
and
(bad)
xlat
and
fnstcw
(bad)
clc
mov
(bad)
and
push
jmp
push
or
push
out
es
pop
sahf
sbb
xor
jmp
cmp
xchg
(bad)
mov
loop
xor
mov
aad
mov
and
sub
call
mov
fmul
stos
pop
ret
xchg
mov
ret
mov
aam
and
xchg
ds
cmps
stos
jp
jns
or
push
xor
push
pop
lods
ret
movups
test
popf
xor
je
mov
sbb
push
call
fwait
mov
nop
adc
movs
push
sbb
icebp
repz
lsl
cmc
add
cmp
pop
jecxz
and
cli
ds
cmp
fcomi
jecxz
pop
imul
xor
int
xor
div
adc
test
cmp
or
loopne
jle
in
pop
xlat
mov
mov
pop
retf
mov
stos
call
addr16
inc
mov
pop
cli
fadd
or
into
rcl
pop
ret
lock
std
outs
aad
sbb
add
mov
mov
jge
pop
add
push
loopne
mov
cmp
clrssbsy
cmp
fwait
cmp
(bad)
lahf
(bad)
jp
gs
push
out
(bad)
lods
fiadd
push
mov
dec
xlat
adc
outs
adc
dec
sbb
pop
mov
lods
fwait
arpl
push
ja
sub
in
xor
mov
sbb
mov
jl
push
mov
frstor
stos
test
adc
sahf
inc
fisttp
call
jb
in
scas
mov
aam
pop
and
add
call
xchg
clc
and
ds
mov
jecxz
into
cwde
push
and
aaa
and
add
dec
mov
scas
pop
mov
push
cmp
sub
mov
jbe
mov
fsub
retf
dec
mov
js
rcl
jge
daa
mov
sahf
sbb
adc
rcl
movs
out
inc
xchg
nop
int
and
sbb
add
add
cmp
into
stc
lods
gs
pop
cmp
js
lds
ins
and
push
push
les
add
xor
(bad)
(bad)
popa
push
xor
sahf
fld
sbb
std
sub
mov
xchg
nop
push
bound
mov
push
fistp
cdq
inc
dec
xor
jle
in
(bad)
jmp
sahf
scas
cmps
pop
movs
cmp
mov
adc
cmp
mov
cmp
lea
jne
leave
into
(bad)
idiv
mov
xchg
and
ror
(bad)
cmps
inc
test
or
and
mov
ret
js
iret
outs
add
mov
out
or
imul
jnp
inc
jp
mov
les
add
(bad)
pop
cmc
sub
sar
jbe
jmp
dec
jns
mov
push
adc
cmp
add
and
jecxz
xchg
lahf
push
jbe
and
sbb
mov
bound
jns
rcl
or
or
in
push
sbb
test
aad
daa
jmp
or
pop
push
xchg
sbb
dec
sub
fld
cmps
fisttp
lea
xor
lock
sub
rcl
cmp
ds
inc
add
mul
lods
mov
cld
sbb
jb
push
mov
mov
test
pop
pop
shl
or
sub
sbb
cmp
cwde
call
xchg
jge
and
pop
mov
sar
dec
dec
daa
mov
sub
or
xor
add
aas
movs
cdq
sub
inc
hlt
jae
cmps
jecxz
mov
and
lea
and
fwait
icebp
dec
xchg
jne
(bad)
dec
cli
sbb
aam
mov
adc
mov
in
jb
shl
les
jecxz
inc
add
lahf
cmp
cmp
pop
es
add
ins
xchg
adc
add
mov
sub
mov
scas
sub
outs
sub
int3
bound
in
repz
daa
push
test
push
mov
mov
mov
pop
scas
(bad)
mov
cmp
in
fisttp
push
mov
cdq
into
cmp
pop
sub
mov
fst
inc
mov
inc
xchg
pop
jp
or
stos
dec
push
(bad)
push
hlt
loope
inc
xor
(bad)
out
arpl
push
sub
sbb
in
bound
inc
jne
xor
adc
cmova
inc
and
out
rcl
mov
in
sar
xchg
sub
mov
xlat
mov
adc
dec
(bad)
lea
cld
inc
sbb
aas
push
stos
cmc
sub
sbb
cmps
add
xor
ds
mov
cmp
sbb
pushf
jle
mov
jle
inc
movs
xchg
jnp
adc
cs
push
out
pop
pop
jbe
jo
cwde
add
enter
and
mov
adc
mov
imul
sahf
lods
(bad)
pop
mov
push
(bad)
xor
xchg
dec
push
xchg
or
je
or
mov
lahf
cmp
in
fs
sbb
jl
pop
fmul
mov
mov
in
bound
aaa
cmp
push
scas
dec
adc
mov
mov
(bad)
out
call
ins
push
sti
mov
adc
rcl
or
fsubr
out
scas
test
dec
in
cmp
mov
add
xchg
sub
mov
add
stos
adc
arpl
jae
mov
jae
lahf
xchg
mov
fnsave
hlt
in
xchg
push
call
cmp
ins
push
sbb
xchg
out
mov
fwait
jmp
rcr
call
and
cmp
test
and
movs
sahf
mov
mov
or
jbe
sti
mov
inc
mov
sti
mov
xchg
rcl
(bad)
dec
out
(bad)
bound
mov
add
fist
fdiv
push
lods
inc
das
mov
mov
pop
(bad)
dec
outs
xchg
fsubr
mov
xchg
data16
push
pop
jecxz
ret
cli
dec
loopne
mov
dec
push
and
cmp
mov
sub
arpl
mov
jmp
mov
std
mov
push
pop
leave
jmp
movs
ror
inc
loop
cmp
xchg
jne
in
mov
call
mov
in
arpl
test
adc
bound
retf
not
push
pushf
cmp
cs
xor
mov
pop
pop
clc
adc
mov
cld
jmp
sub
sbb
push
imul
repnz
ret
pop
push
push
push
mov
rol
je
add
mov
push
jno
xlat
jl
das
shl
push
cli
movs
mov
clc
cmp
shl
bound
icebp
mov
js
mov
mov
inc
ficom
out
lods
xchg
std
push
idiv
aam
bound
sub
retf
shl
adc
mov
dec
cmp
retf
adc
movs
adc
loope
arpl
add
pushf
call
xor
push
xchg
loopne
popf
mov
sbb
fist
loop
jecxz
out
jecxz
int3
shl
mov
fdivr
adc
pop
mov
fistp
(bad)
mov
lods
sar
rcl
dec
add
test
(bad)
xor
call
adc
ret
nop
shl
and
xor
je
mul
out
dec
add
ja
mov
mov
push
add
jg
out
cmp
pop
sahf
fwait
dec
xchg
or
fnsave
fld
(bad)
xlat
loopne
hlt
cmp
cs
sbb
(bad)
fidivr
and
mov
jmp
repnz
mov
(bad)
loopne
cwde
jae
(bad)
mov
push
(bad)
push
mov
test
mov
test
mov
jmp
adc
or
shr
xor
sbb
sbb
sbb
xchg
jns
fdivr
pop
push
inc
xchg
mov
aaa
(bad)
xchg
inc
jne
mov
cmp
stos
leave
or
mov
fild
movs
lea
es
or
push
jge
jns
inc
inc
jp
dec
inc
sbb
add
sub
push
mov
cli
mov
(bad)
xor
sub
movs
jne
packsswb
movs
mov
lds
pop
sbb
sbb
cmp
lods
stc
clc
ins
add
push
cmp
and
cld
imul
test
int3
jbe
test
sub
mov
jmp
inc
stos
std
cmps
gs
cs
mov
loop
shl
sub
rol
arpl
push
pop
mov
in
test
dec
adc
arpl
xchg
mov
and
(bad)
enter
movs
push
es
pop
and
(bad)
jbe
imul
sti
dec
mov
sahf
mov
fsubr
xor
add
in
pop
fild
mov
jb
mov
ins
pop
fmulp
cmp
or
xchg
jb
imul
add
sub
jns
push
add
hlt
bound
repnz
aaa
packuswb
mov
jp
lods
popf
popf
jbe
adc
jae
mov
stc
xchg
mov
mov
or
shr
cmp
dec
pop
push
and
ja
mov
aas
or
not
cmps
call
cmps
mov
mov
jge
adc
pop
or
scas
adc
iret
inc
cwde
ins
pop
sub
jbe
sti
lock
jno
adc
jecxz
cdq
test
mov
push
mov
push
retf
sbb
fsub
push
mov
sahf
int3
enter
stos
(bad)
call
lods
outs
(bad)
lock
stc
and
sub
mov
cmp
dec
mov
out
jmp
ficomp
aam
sbb
xor
je
xor
es
push
mov
add
mov
or
(bad)
retf
fidiv
out
cli
adc
outs
mov
sbb
mov
rol
push
mov
mov
scas
ins
pop
xchg
cmps
enter
add
sbb
dec
in
stc
loop
mov
ins
std
pop
push
je
adc
popa
fs
push
out
f2xm1
lock
outs
inc
push
scas
hlt
jnp
popa
push
cmp
cmp
rcr
cmp
je
cdq
push
mov
jle
fadd
cwde
mov
xor
cmp
cdq
xchg
ins
jp
xor
enter
aam
imul
push
lods
in
call
jae
xor
or
shl
add
mov
retf
outs
popf
hlt
cmp
fcom
inc
maxps
pop
shr
and
mov
adc
adc
jmp
mov
and
hlt
ficomp
push
das
mov
jbe
cmc
out
or
cmp
loop
add
dec
dec
add
mov
jecxz
adc
movs
lea
push
jno
jge
ffreep
imul
int3
xchg
ss
mov
xchg
mov
jnp
arpl
and
add
dec
inc
ins
mov
cmps
das
dec
adc
jne
mov
mov
jnp
or
jle
loope
lods
mov
push
add
dec
sub
dec
fxch
xchg
jmp
mov
test
pop
sub
jg
and
repnz
and
inc
fcomp
mov
movs
ja
aas
mov
sub
mov
mov
mov
dec
stc
div
sub
cmp
cmps
xchg
push
sbb
aad
out
aam
xchg
fs
fwait
and
fbld
inc
(bad)
push
and
adc
out
arpl
inc
xor
jp
je
jecxz
or
xchg
mov
data16
mov
fcmovnbe
jp
or
push
stos
add
inc
nop
or
mov
cmp
cdq
rcr
mov
mov
movs
in
js
lock
pop
cmp
mov
sbb
sti
imul
call
jae
pusha
lahf
add
or
mov
test
repnz
aaa
mov
inc
push
mov
sub
push
xor
inc
mov
test
sbb
or
mov
xchg
out
xchg
xor
fdivr
inc
ss
je
sbb
sahf
mov
int
jbe
cdq
lahf
pop
das
and
inc
fwait
mov
dec
xchg
and
cli
pop
and
cmp
enter
stos
fisub
mov
push
sub
xchg
pusha
mov
or
ss
xor
cmp
xchg
dec
mov
int
mov
sar
pop
lahf
gs
cld
nop
push
mov
aam
arpl
cdq
hlt
mov
shl
or
push
js
loop
(bad)
fdivr
dec
call
dec
sub
(bad)
jge
bound
cdq
push
xchg
and
popf
pop
test
movs
add
ret
lods
push
fcom
push
push
imul
mov
push
inc
lods
lds
cwde
xchg
push
in
mov
push
ss
xor
pusha
inc
jbe
pmulhw
pop
bound
daa
cmps
adc
mov
loopne
inc
mov
out
call
dec
xchg
and
rcl
aas
pop
lea
adc
lock
pop
mov
movs
jecxz
aas
mov
cli
mov
call
sti
gs
stos
mov
mov
(bad)
into
mov
mov
inc
mov
arpl
scas
sbb
sahf
mov
sahf
dec
lock
dec
cwde
ins
popa
movs
dec
dec
xchg
push
inc
mov
inc
popa
je
add
add
(bad)
cmp
xchg
cmp
retf
out
aaa
cld
mov
stos
xchg
addr16
cld
mul
mov
imul
pop
xor
neg
cmps
xchg
enter
outs
stos
dec
sub
out
in
adc
fld
push
cmc
xlat
xlat
xchg
retf
xor
push
out
jae
mov
pop
pop
mov
imul
gs
mov
rcl
xlat
(bad)
jmp
dec
dec
bound
pushf
cmp
outs
in
xor
div
jns
and
ss
push
mov
clc
sub
lock
(bad)
stos
rcr
fisubr
stc
fidiv
jno
push
sar
pop
adc
lahf
movs
cmp
imul
call
shl
fmul
ret
(bad)
outs
mov
mov
loop
cli
mov
jecxz
inc
icebp
popa
gs
mov
xor
call
push
out
xchg
sbb
push
mov
aaa
and
jno
mov
rcr
(bad)
push
add
lds
mov
mov
movs
mov
in
fcomp
sar
add
test
push
sub
leave
push
in
dec
mov
loope
cmp
jmp
arpl
xchg
xchg
sbb
dec
(bad)
and
leave
inc
je
jecxz
jmp
jle
jp
cmp
push
or
pushf
inc
xchg
inc
and
fld
in
push
inc
fisub
or
ins
(bad)
pop
sbb
(bad)
movs
inc
popf
sar
cmp
push
jmp
daa
xchg
mov
aad
test
lods
xchg
lods
add
push
inc
not
sahf
jmp
aad
mov
jno
lea
stc
mov
sub
daa
cmps
mov
ret
call
shl
mov
cmps
cdq
aaa
jge
sub
inc
push
imul
(bad)
cs
rcr
and
inc
sahf
mov
dec
xor
add
pop
mov
(bad)
cmp
sahf
int3
cli
inc
les
mov
mov
cmp
push
test
fucomi
xchg
(bad)
pop
jae
hlt
test
push
sub
jno
clc
jbe
mov
jb
or
enter
daa
mov
push
setns
bound
mov
int
pop
cmp
mov
lods
sbb
mov
ds
xor
jle
repnz
bound
stos
push
rcr
aad
dec
inc
mov
sub
test
dec
inc
int3
fbstp
fs
add
out
xchg
mov
pushf
mov
repz
pop
iret
and
int3
adc
adc
jmp
sbb
xor
xlat
jbe
mov
xchg
fild
popa
mov
mov
outs
fs
adc
outs
imul
(bad)
pop
or
(bad)
shr
outs
cwde
xor
xchg
outs
cmp
adc
pop
mov
jg
inc
in
inc
adc
add
pusha
push
shr
push
pop
inc
or
cld
sti
inc
pop
dec
mov
pop
pusha
in
scas
dec
or
call
mov
push
popf
test
(bad)
in
movs
test
lock
aas
xchg
pop
jg
mov
retf
arpl
fiadd
cmc
adc
std
je
mov
cmp
xchg
aad
loope
mov
or
mov
mov
mov
xor
jo
mov
mov
gs
add
adc
enter
mov
pop
(bad)
out
iret
push
jo
xchg
sahf
fiadd
daa
adc
push
repz
sbb
push
and
cmc
shl
add
xor
push
jno
sahf
imul
call
fmulp
pop
adc
xchg
retf
loopne
cmp
adc
das
push
ficomp
prefetch
ins
out
ret
or
cdq
test
pop
aad
fisub
pushf
xchg
push
mov
call
into
cmp
ja
xlat
jne
cld
retf
sti
popa
icebp
jo
ror
inc
mov
jnp
int
cmps
jae
pop
in
imul
xchg
repz
movs
xchg
and
pusha
pop
push
out
cdq
call
inc
xchg
fwait
hlt
pop
sbb
lods
mov
mov
aaa
dec
xor
mov
icebp
mov
adc
sahf
dec
mov
ss
xor
adc
sbb
ss
sbb
int
jecxz
mov
arpl
adc
xchg
outs
xor
sahf
ja
push
and
loope
jae
push
and
mov
ja
into
(bad)
xor
dec
(bad)
lahf
fdiv
sbb
test
fld
jle
pop
mov
(bad)
fs
sbb
daa
push
es
jmp
jg
lock
xchg
dec
movs
arpl
or
or
call
add
and
in
sub
sub
inc
clc
scas
cdq
inc
out
in
addr16
jmp
adc
gs
jge
arpl
mov
loope
inc
cdq
mov
xor
mov
stos
push
adc
stos
retf
hlt
loope
dec
push
daa
paddsw
cmp
pop
and
add
cli
xchg
sbb
fwait
mov
cmp
cld
dec
jg
jecxz
cmps
(bad)
mov
ins
clc
mov
imul
dec
pop
ret
pop
xor
mov
je
gs
retf
inc
mov
cs
push
shl
imul
loop
push
and
mov
push
cmc
gs
and
add
adc
(bad)
pop
add
mov
and
mov
inc
clc
sub
ss
jbe
push
cmp
int
cdq
mov
stos
out
pusha
in
cmp
out
push
not
outs
xchg
or
in
mov
int3
lods
add
xchg
jo
add
jae
pop
ret
call
mov
push
fisub
and
cmp
movs
mov
mov
mov
push
add
ss
sbb
in
sub
xchg
xor
cmp
ins
add
sub
mov
inc
cld
int3
sub
fild
mov
dec
and
mov
jne
fwait
cmp
mov
ins
into
stos
stos
dec
pushf
fs
enter
sti
(bad)
lock
sub
jp
mov
and
jl
cmp
pop
sub
cmp
outs
aas
pand
not
xchg
js
mov
jbe
outs
or
xor
outs
inc
mov
aam
xchg
adc
jne
sub
je
adc
push
sbb
xor
mov
pop
ja
jnp
es
scas
or
inc
pusha
imul
jg
and
rcl
mov
repz
jp
dec
ins
fldenv
mov
mov
fdivr
ret
(bad)
retf
hlt
pushf
adc
enter
(bad)
daa
leave
jnp
stos
cwde
or
sbb
sbb
test
popa
test
pop
cmp
sbb
aas
jl
jns
(bad)
jp
sahf
xchg
mov
sbb
retf
(bad)
mov
inc
cmovge
mov
sub
push
xchg
jb
out
icebp
addr16
xor
push
mov
rol
fidivr
and
cmp
data16
sub
in
movs
add
mov
stos
inc
cli
imul
retf
inc
jge
jp
out
add
inc
stos
adc
imul
fcmovnb
jle
fadd
jne
cmps
pop
pop
add
stos
das
push
into
fcom
imul
add
xchg
xor
sahf
or
mov
sbb
cmp
in
push
push
out
shl
in
(bad)
idiv
xchg
stos
cmp
sahf
lods
pop
sbb
adc
add
sub
mov
jnp
rcr
add
retf
xor
push
fld
jg
cmps
clc
(bad)
rcl
jp
int
dec
mov
jnp
sub
js
(bad)
call
iret
popa
xor
pop
repz
test
fist
and
add
mov
xor
scas
xchg
sbb
xor
add
sub
mov
xchg
xchg
test
loope
ja
enter
push
mov
stos
fild
cmps
mov
mov
bound
lock
mov
inc
inc
in
add
xchg
(bad)
add
mov
mov
add
jge
sbb
adc
or
shl
clc
dec
adc
movs
jbe
cmp
or
aad
lds
mov
cdq
add
mov
add
in
cmc
out
fldenv
or
sbb
jmp
es
cmp
mov
imul
jp
xchg
sahf
mov
sub
lea
and
push
iret
aas
stos
jg
xor
push
call
xor
mov
scas
call
shl
pop
call
sar
push
dec
adc
xchg
xor
xchg
in
add
jmp
xchg
cdq
imul
lock
or
mov
mov
scas
push
jge
adc
sub
jle
data16
or
sub
aaa
add
arpl
lds
mov
push
or
inc
add
inc
sub
cmps
lea
push
mov
add
pop
push
sub
fsub
nop
int3
int3
xor
sbb
add
mov
stos
daa
outs
sub
into
cmp
jle
and
inc
and
ins
dec
sti
add
mov
shl
sahf
ret
iret
mov
daa
(bad)
jbe
mov
xor
ret
inc
pop
cmps
adc
xor
xchg
in
adc
pop
fsub
push
xchg
mov
fimul
pop
scas
push
cmps
adc
div
loop
add
and
jmp
loop
sub
jmp
sub
and
fst
lds
sub
or
jg
ds
cmp
ja
hlt
test
stos
imul
pop
lods
loopne
std
push
xlat
test
mov
cmp
cmp
push
jmp
jae
push
or
bnd
pop
mov
loope
ss
(bad)
and
mov
sbb
xor
mov
sbb
loopne
aam
ret
xlat
jg
cmp
xor
fstp
es
xor
mov
call
xor
btc
pop
cmp
sbb
shl
mov
pop
mov
mov
int
movs
adc
fild
pop
fnstcw
rol
mov
cs
arpl
test
mov
jb
push
xlat
(bad)
mov
popa
cmp
sub
add
add
cli
push
or
loopne
(bad)
lock
mov
jle
cli
movs
call
(bad)
cmp
ins
mov
imul
test
aas
sub
jmp
ror
arpl
jb
jmp
xlat
jle
xor
xchg
mov
fiadd
iret
repnz
jmp
out
cmp
mov
mov
xor
push
mov
jbe
fstp
pop
popf
int3
sbb
jbe
cmps
mov
shr
adc
add
mov
add
xchg
mov
idiv
mov
call
add
mov
mov
cdq
and
fistp
outs
push
adc
rcl
jmp
push
leave
xlat
ret
pop
shl
mov
js
retf
ja
xlat
add
(bad)
in
jns
sbb
stos
daa
stc
je
imul
dec
xchg
outs
sbb
movs
enter
add
cmp
sbb
push
fistp
adc
je
scas
pushf
xchg
jne
push
sbb
mov
lock
int3
scas
inc
out
sar
sub
cmp
sub
jb
cmp
sar
dec
mov
scas
fnsave
popf
daa
stos
rcl
push
call
or
and
fs
aam
or
pop
xor
std
lea
lods
inc
call
sbb
gs
inc
add
fwait
inc
push
out
fs
lea
xchg
adc
int3
cmp
sub
mov
mov
in
fcomp
and
dec
mov
sub
test
xchg
out
shl
xor
ret
fsub
or
mov
addr16
popf
mov
or
mov
sub
adc
push
sti
ins
sub
xchg
ins
retf
pop
push
out
mov
fsubr
fdivr
stos
or
and
dec
jns
add
fs
int3
in
cmp
mov
aaa
test
mov
sbb
enter
pop
cwde
mov
push
leave
imul
sbb
dec
test
push
xor
jns
inc
aaa
data16
xlat
push
mov
(bad)
xlat
je
out
push
xchg
push
sub
cmp
in
clc
adc
mov
jp
ins
cdq
push
ret
jnp
pop
cmp
mov
repnz
push
inc
mov
and
sbb
xor
push
pop
mov
xor
push
in
push
mov
cdq
jnp
ret
adc
in
jnp
jo
sbb
mov
or
out
sub
adc
addr16
outs
pop
daa
push
or
clc
test
bound
repz
dec
outs
fisubr
adc
pop
scas
hlt
mov
mov
ins
arpl
adc
lock
mov
xor
push
jl
inc
ja
ret
jg
cs
xchg
cdq
dec
add
mov
cmc
rcr
sub
mov
das
je
add
test
xchg
cmc
scas
stc
ret
mov
mov
js
xor
mov
arpl
lea
scas
aas
adc
mov
ret
movs
jg
ins
lods
pop
rol
fucomip
cli
mov
jge
jne
mov
dec
push
dec
cmps
clc
cwde
aam
cmps
mov
ss
mov
hlt
jle
aas
popf
in
jno
lods
gs
rcl
and
call
fstp
mul
cs
xor
pop
aad
mov
jne
stc
dec
pop
(bad)
xor
ja
(bad)
jle
cmc
sub
cmps
enter
adc
xor
dec
mov
jbe
or
mov
and
add
daa
fisttp
jbe
push
sahf
jnp
mov
jmp
cmp
dec
push
retf
xchg
test
mul
into
bound
pop
out
push
pop
xchg
icebp
jle
xor
iret
sub
cmp
push
push
mov
js
jge
loopne
movs
nop
push
mov
and
leave
fwait
outs
std
dec
mov
stos
cli
mov
cli
repz
stc
dec
outs
jmp
and
mov
pop
aam
or
inc
popa
mov
cmp
in
les
nop
xlat
jmp
fdiv
jb
sahf
push
inc
push
(bad)
pop
imul
inc
sub
cwde
inc
adc
lods
mov
ror
xchg
pop
pop
fdiv
xchg
sbb
xor
neg
lahf
lods
addr16
cmp
push
adc
pop
ret
push
sub
jae
mov
mov
mov
out
scas
xor
jb
mov
loop
mov
push
popf
mov
jo
cs
jmp
adc
and
repnz
ins
adc
push
mov
xor
shr
int
dec
daa
out
test
ss
sub
mov
mov
shr
shl
mov
lods
jg
jb
adc
cmps
dec
xor
jg
out
int
call
xchg
dec
lods
daa
cmp
adc
push
cmp
and
xchg
xchg
pop
mov
or
pusha
xor
div
add
sub
test
inc
mov
adc
jno
aaa
adc
mov
sbb
adc
mov
rol
push
pmuludq
stos
sbb
sub
adc
stos
pop
mov
push
les
pop
aaa
jbe
bnd
xor
sub
add
ins
xchg
mov
in
jnp
pop
push
fcomp
call
inc
shl
inc
sub
retf
mov
stos
xchg
pop
ret
ins
push
rcl
push
shl
push
movs
push
cmps
retf
fbld
ss
mov
cmps
jmp
movs
mov
mov
js
in
adc
or
mov
test
push
dec
retf
icebp
xor
pusha
cmp
int3
jle
pusha
inc
fcom
pusha
les
add
leave
ret
rol
inc
test
xor
lds
mov
sti
mov
cmp
fs
int
cs
movs
pop
xlat
xchg
cmps
jns
xchg
fstp
add
mov
mov
mov
and
mov
pop
mov
push
cmp
in
sti
push
movs
dec
ins
adc
or
dec
jmp
les
test
xor
xchg
inc
sub
inc
fistp
dec
leave
in
mov
xor
movs
cmps
add
bound
dec
lahf
jo
dec
int3
cmp
jge
mov
dec
sbb
adc
and
bound
stos
test
inc
add
daa
lods
cmp
push
fs
mul
cmp
test
pop
cmp
or
xchg
sub
dec
push
adc
mov
xchg
adc
pop
pop
das
ror
call
outs
rol
cmp
jb
lods
mov
adc
aam
mov
push
dec
adc
cmp
(bad)
aam
adc
int3
jae
mov
out
jo
rcl
and
adc
jp
mov
das
sbb
jbe
sub
inc
adc
sahf
push
out
cmp
mov
aaa
rcr
cdq
retf
inc
ja
dec
adc
test
aaa
adc
adc
jp
jp
das
sub
add
imul
rcr
jne
pushf
test
mov
sbb
lods
mov
mov
ins
mov
xor
mov
inc
inc
dec
push
xchg
xor
out
or
(bad)
call
jbe
lods
lahf
cdq
retf
inc
(bad)
pop
dec
(bad)
fistp
push
sub
lods
in
sub
sbb
fldcw
xor
daa
cmp
or
jb
dec
mov
jecxz
dec
cmc
mov
pop
cmps
sbb
xchg
jo
dec
jg
mov
in
jl
popa
and
sub
push
push
xor
(bad)
or
push
xor
in
sti
test
pop
inc
cmp
mov
mov
sub
xlat
cmp
int
push
pop
call
jle
in
push
mov
add
push
scas
cdq
push
lods
rol
mov
sbb
stos
(bad)
and
pop
xor
and
mov
call
jb
addr16
cmps
inc
sub
pop
sbb
loop
mov
call
inc
das
push
int3
(bad)
pushf
clc
jnp
or
aaa
fnsave
pop
xor
in
gs
sbb
push
or
lods
xchg
ret
mov
je
movs
mov
inc
out
dec
(bad)
js
dec
xchg
mov
repz
fld
test
inc
jmp
xchg
jae
(bad)
inc
sub
ss
dec
ror
add
repnz
les
push
mov
cmps
int3
sbb
test
(bad)
mov
adc
sbb
and
pusha
sub
lahf
sti
int3
dec
call
dec
lock
jns
js
dec
adc
lahf
cld
ins
in
in
push
pop
gs
and
sbb
fnstcw
inc
or
pop
in
dec
out
scas
rcl
mov
inc
scas
jle
or
mov
or
je
add
sub
stos
mov
xchg
ja
pusha
push
lods
adc
or
jg
call
pop
ins
fwait
push
xor
xchg
mov
jne
adc
shl
inc
inc
mov
retf
push
arpl
push
cmp
jg
(bad)
pop
jl
cmp
mov
pop
adc
mov
push
pusha
push
imul
ja
xchg
ins
mov
mov
sbb
icebp
adc
cmp
repnz
(bad)
lock
call
mov
inc
add
dec
pop
xchg
jmp
push
sbb
sahf
push
stos
daa
cmp
stos
jge
adc
push
mov
and
fs
sub
cmp
push
push
mov
ds
fs
outs
int
mov
inc
add
icebp
sub
xor
gs
and
cmp
pop
fmul
int3
pop
or
mov
jmp
jae
adc
jecxz
sub
xor
xor
adc
mov
mov
(bad)
adc
xchg
dec
adc
out
enter
mov
retf
jmp
ret
mov
hlt
inc
pop
sbb
push
lods
cmp
aad
pop
and
das
add
mov
fdiv
fcomp
and
inc
sub
repz
inc
xchg
aam
shl
xlat
in
test
stos
jg
pop
shl
pop
sub
jmp
mov
cs
in
ret
retf
mov
popf
jmp
adc
dec
add
(bad)
pop
out
shr
pop
xchg
or
out
imul
cmp
dec
xor
stos
pop
cli
inc
pop
xchg
les
fstp
inc
imul
loope
int
and
jle
or
shl
fiadd
or
xlat
out
xor
call
jp
call
push
(bad)
fidivr
dec
fisubr
pop
pusha
xor
stos
jbe
pop
mov
push
(bad)
leave
nop
aaa
mov
mov
adc
push
rcl
xchg
cld
lds
loop
fwait
adc
retf
and
jmp
aas
imul
(bad)
inc
daa
xchg
jo
movs
mov
xor
jmp
adc
adc
add
pusha
mov
dec
data16
add
xor
mov
and
addr16
(bad)
jmp
jl
retf
mov
ss
rcl
cmp
or
cmp
cmp
jb
imul
gs
mov
ss
adc
push
jg
jbe
ins
jg
dec
movs
add
jmp
mov
cmps
(bad)
push
test
test
out
xchg
icebp
and
cmp
imul
xor
imul
aam
sub
pop
jmp
jmp
addr16
in
mov
jne
pop
cmp
es
ror
je
mov
cmp
push
inc
jns
daa
out
jmp
pop
adc
ja
push
mov
inc
(bad)
bound
sti
(bad)
call
pop
(bad)
dec
outs
fnstsw
in
imul
cli
pop
dec
pop
xchg
das
jl
retf
mov
xchg
scas
sbb
xchg
xchg
sar
push
add
jbe
jmp
add
out
jbe
sub
ds
imul
dec
sub
(bad)
sar
mov
mov
jne
outs
mov
cli
adc
je
push
aas
ror
inc
arpl
shl
sub
aad
push
dec
std
dec
fwait
std
sub
gs
mov
mov
jae
ror
or
rol
pop
je
or
cmp
idiv
dec
fist
cmc
mov
dec
aam
add
leave
jmp
ror
mov
cs
push
adc
pop
movs
pop
adc
inc
std
mov
pop
and
dec
push
adc
adc
mov
pushf
test
dec
dec
pushw
cmp
dec
sbb
clc
mov
repnz
fistp
dec
cmp
rdmsr
fisubr
out
fdiv
fst
or
add
pusha
inc
cmp
pop
mov
fnstsw
jp
cld
jg
and
push
pop
dec
sahf
push
adc
fmul
stos
jne
mov
prefetcht0
test
cmp
and
sub
push
mov
aam
popa
mov
rcl
fadd
xor
dec
mov
pop
in
pushf
jae
je
loop
jns
add
pop
and
xchg
jnp
call
or
sbb
xchg
aas
fistp
pop
das
adc
dec
xchg
jno
nop
dec
iret
leave
(bad)
movs
out
jge
push
inc
int
fs
fsubr
lds
push
loopne
mov
mov
adc
in
push
test
lods
push
inc
daa
jg
mov
push
dec
repnz
hlt
sub
mov
shr
xor
movs
movs
jg
xchg
cwde
pop
cdq
leave
push
out
sub
shl
mov
sbb
aaa
add
sub
(bad)
cmp
shl
retf
or
into
out
mov
mov
jl
inc
je
adc
ins
jo
fisttp
push
aad
loopne
in
cmp
push
adc
jb
mov
leave
int
and
loop
inc
cs
adc
aam
mov
sbb
gs
in
scas
pop
jp
in
scas
std
push
mov
mov
mov
inc
mov
cmps
fwait
(bad)
movs
pop
(bad)
sti
rcl
jne
pop
mov
jne
jae
int
jae
mov
and
or
ja
cmp
inc
add
or
shr
(bad)
sbb
fcom
loope
lds
add
popf
lods
jp
dec
and
out
pop
xor
gs
mov
mov
test
and
adc
nop
call
iret
mov
int
xchg
jmp
repz
imul
push
sbb
mov
mov
movs
dec
lock
aas
shl
ds
inc
retf
pop
out
cmps
inc
xchg
test
pop
push
data16
dec
shl
xor
push
xlat
fisttp
int
bound
jmp
out
mov
inc
ficom
mul
and
fwait
push
mov
inc
in
sbb
(bad)
push
xor
stos
adc
mov
leave
jae
jmp
jnp
retf
ret
adc
clc
dec
mov
jbe
es
inc
lods
test
jae
fdiv
pop
sbb
xor
fstp
xor
idiv
xchg
out
inc
or
stc
sti
ror
push
inc
movs
inc
(bad)
mov
mov
sbb
jle
push
retf
mov
xor
imul
mov
outs
sbb
cmp
dec
inc
push
and
adc
pop
push
sub
xchg
sbb
scas
fld
mov
ja
sbb
jmp
adc
ss
es
imul
jp
inc
leave
dec
lock
scas
jb
mov
fcomp
loop
or
lahf
adc
push
jmp
pusha
mov
jns
dec
(bad)
sti
fiadd
scas
dec
inc
cmps
(bad)
pop
pop
test
jle
loopne
xchg
aam
pop
or
pop
lds
repnz
sbb
jno
inc
add
bound
xchg
sub
stc
sbb
ss
jge
shr
xchg
pusha
or
dec
movs
cmp
call
cwde
or
inc
in
fstp
xchg
pop
add
lea
xor
or
inc
mov
popf
sub
xchg
inc
test
mov
or
(bad)
mov
mov
scas
pop
ds
mov
shl
scas
push
xchg
or
jns
pop
mov
lods
xlat
mov
test
inc
(bad)
icebp
aas
lods
mov
test
mov
sub
repnz
test
addr16
cwde
cmp
dec
vpsubw
sbb
fistp
ret
imul
and
and
pop
cmc
mov
leave
rol
mov
mov
xchg
(bad)
lods
sub
jae
or
movs
into
pop
cmp
mov
cmp
arpl
xor
ret
xchg
jo
repz
or
test
jge
cdq
scas
cmp
jle
mov
lock
retf
popf
xor
or
xlat
cwde
(bad)
rcl
pushf
xor
test
es
and
sbb
in
sub
and
cmp
add
add
shl
and
stos
pop
dec
xchg
pop
cmps
hlt
sub
and
xchg
adc
mov
popf
aad
pop
cmp
mov
xor
cmp
fimul
push
sub
imul
or
ds
in
popf
sbb
lock
jbe
add
jno
mov
rcr
fwait
lds
pop
xchg
cmp
jo
mov
loope
jo
jg
retf
call
cmp
xor
inc
cli
jp
(bad)
push
fs
out
mov
jns
mov
ins
aad
xchg
cwde
sub
xchg
pop
test
mov
imul
(bad)
sbb
vmovsd
movs
ins
cmp
xchg
or
cmc
and
addr16
dec
mov
shr
adc
out
int
fldcw
mov
rcr
pop
mov
add
aas
cmp
mov
sahf
jns
sub
mov
out
xchg
(bad)
dec
ja
jmp
in
sub
pusha
inc
adc
push
xor
jns
je
loope
or
iret
imul
cmp
xchg
(bad)
push
loope
and
or
sbb
das
movs
or
push
mov
jns
and
(bad)
push
sbb
jl
pop
fsubr
inc
jae
jmp
cld
into
call
(bad)
and
mov
jne
jae
push
cli
pop
aas
push
call
sub
bound
ror
call
jne
dec
gs
ja
pop
aas
cs
(bad)
in
inc
inc
xchg
jno
inc
mov
cmp
sub
daa
test
xor
mov
mov
push
(bad)
xchg
dec
jae
jp
arpl
sub
mov
or
add
shr
int3
mov
dec
xchg
enter
(bad)
mov
stos
retf
push
cmps
test
xor
je
jb
shl
mov
xchg
test
jmp
xor
push
cmp
(bad)
rol
inc
or
retf
movs
adc
sbb
jbe
pop
movs
add
inc
and
pop
sub
jge
add
jno
iret
retf
mov
leave
test
pop
jnp
inc
ret
popa
mov
stos
mov
clc
loopne
imul
icebp
arpl
mov
add
(bad)
cmp
pop
dec
out
std
(bad)
jns
cld
stc
jmp
mov
cmp
xchg
adc
xor
mov
mov
jne
mov
sbb
mov
jmp
mov
inc
cmp
es
jle
xchg
rcl
add
pushf
cmp
jl
cs
xchg
std
cmp
ret
test
sbb
sbb
sub
xor
xor
pop
and
arpl
fidiv
adc
sbb
adc
push
(bad)
icebp
mov
loopne
iret
rol
fsubr
mov
(bad)
push
add
rcl
sbb
outs
imul
xchg
das
mov
bound
pop
jo
push
frstpm(287
cmps
hlt
lea
dec
aaa
dec
mov
xor
ficomp
mov
mov
daa
ins
in
jmp
sub
xor
cmps
mov
add
or
shr
in
and
dec
inc
dec
adc
dec
jns
(bad)
movs
dec
lahf
cmp
ror
stc
out
add
outs
mov
bound
pop
dec
xchg
mov
in
dec
sbb
push
push
push
fisttp
test
mov
lock
pop
ins
sbb
jl
mov
cmps
sbb
cmps
sub
push
call
dec
cmps
add
addr16
(bad)
pushf
mov
cwde
mov
xchg
jmp
push
or
push
pop
add
or
lahf
mov
cdq
shr
push
sub
fnstenv
lods
or
dec
xchg
ret
popa
pop
jbe
mov
xlat
mov
rcr
inc
cmp
jl
int
out
mov
mov
cs
popf
outs
scas
jecxz
rol
push
lds
bound
jne
dec
mov
fbstp
mov
fs
test
cwde
push
lds
in
shl
sbb
ror
sub
cmps
push
mov
xor
mov
inc
sbb
shl
bound
xchg
ja
nop
div
jmp
call
int3
cmp
(bad)
xor
mov
sub
or
push
jb
dec
mov
(bad)
pusha
shl
retf
xor
dec
push
xchg
cmps
jecxz
out
or
outs
mov
or
cmp
xor
and
xchg
movs
ins
push
and
fdivr
add
xchg
jecxz
ror
call
in
movs
fld
(bad)
cmp
sub
int
jp
out
push
aas
cmp
ss
inc
push
xchg
(bad)
outs
dec
enter
mov
cmp
aam
hlt
fisubr
enter
xor
movs
dec
xor
cmp
fisub
add
pusha
sub
mov
imul
pop
daa
fldenv
mov
jge
aaa
out
leave
shl
push
jecxz
jge
push
sbb
adc
add
mov
inc
test
inc
inc
xlat
xor
xor
aaa
fst
fbstp
mov
pop
out
ficomp
imul
push
clc
in
es
push
ret
mov
mov
into
scas
or
cmp
jle
bnd
dec
xchg
gs
pop
xchg
pop
sti
jg
cli
add
aam
inc
(bad)
movs
inc
xchg
stos
mov
in
and
add
sub
(bad)
call
and
aam
into
inc
push
mov
lahf
inc
push
repz
into
xor
xor
and
cmc
adc
pop
mov
mov
xor
jno
aad
ins
sub
dec
or
fld
jl
aaa
xor
mov
mov
out
inc
adc
aad
iret
fcom
seto
cmp
call
int3
mov
test
retf
test
xor
iret
dec
or
xor
in
adc
je
jne
es
cmp
jp
(bad)
std
inc
adc
adc
sub
cmp
fstp
or
or
fbstp
mov
mov
or
add
xchg
psubusb
mov
scas
les
fstp
mov
mov
mov
dec
(bad)
pop
sbb
pop
test
fs
and
push
clc
cwde
jo
adc
jb
cdq
pop
sbb
mov
or
cmp
mov
mov
(bad)
ret
pop
fcmovbe
mov
test
rcr
inc
(bad)
fnstenv
mov
stos
mov
sbb
div
sub
mov
lea
mov
pop
xchg
fsubr
scas
jmp
mov
test
jl
jg
push
and
aaa
gs
xchg
xor
mov
xchg
push
clc
popa
or
jno
(bad)
or
out
icebp
jmp
(bad)
(bad)
fld
xchg
pop
cld
pop
jl
xchg
and
sub
jmp
in
mov
sbb
(bad)
sbb
push
pop
icebp
mov
fimul
dec
pop
scas
push
mov
mov
sub
mov
popa
cmps
out
mov
outs
fdivr
jae
or
mov
pop
fiadd
cmp
iret
jns
out
push
xchg
ja
(bad)
push
sbb
popa
mov
pop
call
scas
push
sub
ss
pusha
adc
dec
aas
test
mov
xchg
xchg
retf
mov
xor
or
jbe
repnz
jl
pushf
mov
push
sbb
fldlg2
push
inc
or
dec
mov
leave
sub
push
xchg
aaa
jb
xchg
ja
push
xchg
clc
scas
xor
repz
mov
jl
cmp
sub
les
push
movs
in
and
push
cmp
push
pop
scas
xor
clc
je
xor
in
test
mov
test
inc
jbe
add
pop
jo
mov
fstp
ja
pusha
push
and
xchg
je
dec
dec
pop
sbb
inc
and
ins
call
sar
scas
je
mov
not
cmps
mov
scas
push
call
add
movs
dec
and
mov
sbb
lea
out
jno
mov
cmps
lods
cli
repnz
and
js
jl
dec
xchg
mov
sub
aam
mov
dec
loop
in
stos
or
int3
pop
add
inc
inc
or
repnz
mov
mov
xchg
cmc
ds
int3
pop
fisub
leave
aas
icebp
dec
add
call
xor
push
enter
and
pop
or
inc
cmp
push
cmps
test
mov
repz
jmp
cli
add
mov
cli
call
and
pop
jnp
pop
(bad)
add
int
push
fimul
mov
cmp
mov
mov
repz
xor
cmp
xchg
jg
pop
(bad)
dec
jle
cdq
rcl
shl
sbb
xor
inc
xor
fdivr
push
inc
pop
inc
push
sahf
adc
enter
or
adc
call
fisttp
push
mov
sbb
push
pop
lods
add
(bad)
xchg
jbe
jns
xor
jl
mov
xchg
mov
test
shl
cdq
loopne
(bad)
(bad)
push
add
icebp
aad
outs
dec
lock
into
push
cmp
dec
and
jp
jb
cdq
outs
retf
mov
and
fadd
lods
add
push
sub
xchg
add
stos
(bad)
test
fwait
adc
adc
rcl
push
cmp
push
cwde
sub
jae
sub
lahf
repz
bound
(bad)
pop
mov
xchg
es
call
jmp
sar
cs
(bad)
sbb
in
ror
cli
fist
lods
push
dec
or
xchg
int3
out
xor
xchg
xchg
mov
in
dec
xchg
sbb
adc
or
pusha
sub
cmc
fdivrp
arpl
inc
mov
mov
(bad)
cmc
pop
mul
arpl
and
test
retf
mov
and
nop
pop
fs
mov
xor
loop
clc
lea
push
(bad)
adc
data16
jne
xchg
or
mov
jge
mov
fld
repz
xlat
pop
(bad)
adc
icebp
mov
lea
idiv
cdq
outs
test
(bad)
add
jnp
mov
addr16
mov
aas
lahf
lods
arpl
xchg
inc
pop
adc
adc
push
mov
add
cwde
xchg
scas
sub
fisubr
cmp
mov
scas
(bad)
mov
mov
push
push
jno
fcom
mov
and
icebp
sbb
stos
jecxz
sub
pop
fmul
sbb
dec
dec
stc
stc
enter
sar
test
movs
add
out
test
adc
sub
and
and
movs
arpl
and
jne
pop
sub
inc
call
sti
mov
xor
mov
mov
scas
into
pop
in
loop
jb
xlat
cmps
iret
adc
jecxz
add
adc
rcl
neg
mov
shl
adc
fldcw
mov
add
fmul
sub
imul
ja
pop
sbb
xchg
inc
inc
shl
repnz
fs
jmp
ss
xchg
mov
pop
sar
mov
xchg
mov
jg
loope
out
sti
pop
iret
xchg
xor
jecxz
xor
inc
mov
and
xchg
push
in
inc
dec
or
jge
mov
int
in
cli
fst
das
pop
sbb
add
dec
push
jmp
(bad)
push
xchg
jecxz
mov
mov
retf
pusha
cmps
das
cdq
(bad)
cdq
out
jl
rcl
out
imul
sbb
add
inc
ss
mov
or
shr
lahf
loopne
jmp
push
mov
add
loope
loopne
loopne
fwait
add
push
rol
rcl
dec
dec
sub
jmp
aaa
mov
call
inc
hlt
loope
cmps
xchg
aad
jbe
mov
(bad)
int3
mov
cmovs
and
and
mov
push
xor
pextrw
addr16
fs
and
inc
lock
test
rcr
sbb
fs
or
xchg
and
xlat
pop
xor
mov
mov
leave
in
xchg
rep
push
adc
ins
sub
repnz
sbb
jne
jecxz
in
or
pop
scas
movs
imul
sub
out
cwde
adc
cld
pop
(bad)
sbb
pop
jg
pop
(bad)
jp
pop
fisttp
jne
sbb
(bad)
mov
pop
in
dec
xor
xchg
adc
jno
pushf
cmp
xchg
dec
imul
call
(bad)
push
rcr
and
mov
out
scas
ret
adc
inc
fs
mov
pop
dec
jnp
int3
mov
cwde
scas
shl
rcpps
cmp
or
cmp
sbb
fcmovnu
mov
jmp
mov
out
inc
(bad)
and
mov
and
xchg
stos
mov
stc
ss
in
xchg
pusha
fstp
shl
cmp
xchg
into
cli
push
mov
push
add
or
inc
shl
and
lods
mov
rcr
rcl
cdq
hlt
cmp
dec
mov
cmp
or
or
daa
lea
repz
xor
loope
fwait
aas
imul
adc
(bad)
dec
jae
mov
stos
enter
or
cmp
cmp
pop
mov
jae
iret
clc
jp
jae
dec
and
out
and
es
addr16
jbe
cmp
int
aam
ret
call
imul
mov
stc
adc
jl
or
ja
sbb
xchg
push
xchg
scas
push
enter
rep
adc
jmp
and
outs
sbb
sbb
loope
jge
call
jle
rcr
jl
adc
scas
adc
les
lea
jb
scas
xor
les
imul
jmp
jmp
popa
cmps
sub
aad
js
lods
pop
dec
inc
cmps
je
pop
scas
xor
push
ss
dec
retf
pop
hlt
jb
mov
aam
repnz
mul
adc
and
sbb
repnz
xlat
int
cmps
sbb
data16
jo
mov
adc
mov
cmps
fcomi
test
adc
cmp
(bad)
je
es
in
cmps
(bad)
adc
sbb
push
mov
leave
xchg
lock
cmps
xor
lock
(bad)
sub
mov
call
lahf
loope
movs
push
test
lods
mov
test
jne
(bad)
addr16
pop
xchg
je
std
add
xor
xchg
push
cmps
and
sar
loope
movs
fld
push
jnp
(bad)
js
mov
add
lds
jle
cmp
ins
adc
shl
add
mov
jmp
or
sbb
test
out
cld
dec
mov
or
iret
imul
adc
icebp
jno
pop
push
cmp
rol
retf
push
nop
loop
rol
xchg
push
sbb
pop
enter
stc
and
das
arpl
push
lods
cwde
int
adc
xor
std
inc
lods
push
(bad)
mov
(bad)
or
inc
out
mov
and
aad
outs
out
xor
mov
pop
cdq
les
xor
fcom
or
sar
cmovle
jle
leave
nop
mov
out
xlat
enter
shl
aaa
cmps
sub
out
lahf
popa
loopne
stc
dec
fstp
sahf
lods
inc
or
cmp
iret
or
xor
cmp
into
or
mov
(bad)
cwde
fld
mov
or
arpl
ins
shl
mov
pop
jne
test
fnstsw
scas
push
pop
lods
cmp
pop
(bad)
push
out
mov
call
icebp
sub
(bad)
adc
xor
shl
lahf
sti
mov
add
inc
push
int
xlat
xlat
scas
aam
test
mov
jbe
dec
mov
mov
adc
mov
sbb
fstp
ds
add
ret
je
arpl
or
sysret
loop
cs
pop
shl
xchg
lds
je
out
cmp
dec
fldcw
fstp
sub
dec
lock
movs
retf
das
mov
push
in
jge
lods
ins
clc
neg
push
adc
ret
pusha
outs
lods
inc
pop
jo
xor
adc
xor
push
cli
ret
dec
jge
mov
outs
repnz
xchg
movs
out
add
dec
jo
mov
leave
scas
popa
cmp
aam
dec
ss
push
leave
popf
sbb
out
je
push
xor
mov
ins
sub
sbb
inc
adc
aad
les
jmp
sbb
setnp
out
bnd
pop
sbb
inc
mov
cmp
jg
dec
or
mov
push
adc
shl
xor
pop
mov
stos
fisttp
jmp
ss
(bad)
stc
mov
jmp
aad
(bad)
or
test
sar
xchg
outs
and
push
sub
mov
cmps
shl
inc
cmp
and
jmp
retf
push
add
cmp
add
add
jle
outs
ins
sbb
xchg
lods
add
cmps
ret
push
das
hlt
lods
sbb
les
pop
out
cmp
push
or
pop
jbe
mov
dec
mov
pop
pop
movs
aas
sub
pop
and
fild
pusha
mov
inc
leave
and
outs
iret
imul
cmc
sub
push
pop
pop
pop
pop
adc
mov
mov
mov
(bad)
out
mov
mov
or
test
ins
mov
fstp
push
mov
sub
daa
jae
adc
test
mov
(bad)
push
ret
dec
stos
fnstsw
add
add
inc
dec
stos
pushf
int
jo
jmp
push
push
inc
mov
jb
pop
fwait
sbb
pop
es
sub
pop
sub
mov
and
shl
nop
jl
mov
call
cmp
std
adc
fisubr
adc
and
shr
jle
pop
aaa
clc
dec
(bad)
fwait
popa
mov
cmp
inc
mov
xchg
mov
mov
and
cmc
add
out
mov
add
test
adc
lahf
mov
jnp
mov
cmp
fld
xlat
(bad)
mov
daa
mov
bound
ss
mov
dec
or
and
fdivr
ss
xor
fsubp
fisttp
xchg
jle
call
outs
inc
and
push
lods
pop
pop
jg
dec
push
cmp
adc
test
and
push
pop
(bad)
rcl
test
adc
in
and
dec
ins
mov
test
ss
ja
and
push
jne
pusha
outs
sbb
push
mov
or
dec
dec
pop
push
dec
out
adc
xchg
leave
pop
sub
test
call
movs
sub
adc
(bad)
pop
(bad)
loopne
aaa
jecxz
aas
push
hlt
mov
push
xor
(bad)
out
or
pusha
mov
cmp
mov
xchg
fcmovnbe
pop
xchg
xor
stos
and
push
xor
out
out
mov
pop
or
imul
fbld
hlt
push
repnz
dec
adc
pop
push
jg
(bad)
(bad)
out
sbb
mov
xor
mov
add
outs
inc
and
aaa
lock
shl
pop
mov
loopne
jo
lahf
add
in
ins
add
aaa
jno
aad
xchg
pusha
xchg
mov
inc
jg
cmc
inc
lahf
call
or
jbe
fwait
mov
and
mov
inc
dec
loope
xlat
mov
sbb
fwait
mov
dec
lock
ror
fld
scas
imul
pop
push
pop
sti
mov
jecxz
js
ss
dec
xchg
push
xchg
(bad)
aad
int
(bad)
or
leave
add
ror
into
cmp
jae
iret
mov
or
out
pop
or
pop
scas
dec
jno
popa
daa
mov
ret
jbe
mov
test
out
or
lahf
sbb
or
xor
loopne
out
call
popa
jbe
aam
mov
out
mov
adc
loope
ret
adc
(bad)
fbld
fnsave
fdiv
pop
ins
movs
std
call
pop
or
mov
push
pop
out
push
out
out
jmp
inc
mov
aaa
inc
out
lods
and
mov
push
mov
dec
xor
cmp
push
jnp
sub
in
pop
daa
pop
and
cld
sub
nop
dec
imul
(bad)
pusha
icebp
push
in
popa
rcr
in
add
xor
cli
xchg
daa
jecxz
inc
mov
cld
or
imul
in
movs
loop
jg
(bad)
fisttp
xor
retf
pusha
into
adc
jnp
dec
mov
(bad)
adc
push
xchg
sbb
scas
mov
fcmovu
pop
pop
xchg
aas
movs
daa
lods
call
fwait
jmp
push
lock
sahf
arpl
mov
ins
test
pop
add
mov
ins
jl
push
xchg
pop
mov
lock
movs
pop
inc
cmp
cmp
mov
cmp
dec
mov
fimul
mov
scas
fdivr
test
test
mov
xchg
stos
mov
rol
outs
push
adc
cmp
dec
pop
inc
jle
pop
mov
inc
test
out
ret
std
push
mov
xchg
mov
aad
cdq
sbb
(bad)
jbe
lock
and
imul
sahf
ja
pop
in
test
push
mov
xchg
xor
mov
mov
ins
pop
xchg
inc
mov
out
mov
cdq
sbb
jg
iret
inc
cmp
xor
add
xlat
and
pop
loope
stos
jmp
xor
xor
or
sub
add
rcr
pushf
cmps
pushf
inc
cdq
mov
adc
loope
add
jmp
sub
sub
or
push
pop
add
(bad)
daa
push
mov
rcl
sub
push
mov
push
dec
push
rol
jae
inc
xchg
jo
xor
push
lea
pop
mov
sbb
bound
and
(bad)
cmc
jae
xchg
mov
out
mov
les
sbb
mov
or
sub
(bad)
mov
jl
test
fldenv
cmc
(bad)
jnp
stos
inc
shl
dec
jo
jbe
les
jb
mov
dec
pop
xor
or
cmps
nop
pop
shl
push
mov
xor
sbb
nop
popf
aas
push
jmp
xlat
inc
cmp
push
push
frstor
sub
cdq
cld
stos
mov
mov
xor
dec
jb
repnz
inc
mov
or
fs
push
nop
sti
(bad)
mov
sub
sbb
jmp
inc
mov
jbe
out
adc
iret
ret
jnp
mov
test
test
push
mov
shl
mov
jl
scas
inc
cmp
xchg
mov
outs
inc
loopne
mov
sub
pop
push
add
jno
retf
push
lds
sti
cmp
sub
push
sbb
and
into
xor
jmp
push
pop
inc
cmp
mov
pop
out
fcom
jl
stos
cli
call
cmp
jmp
jns
les
repz
mov
call
push
mov
inc
or
das
pop
dec
lods
jno
jmp
cmp
dec
loope
cmp
mov
cld
push
std
into
mov
sub
fimul
mov
(bad)
ret
adc
loop
dec
mov
in
push
data16
xchg
fs
sub
mov
mov
aas
xchg
inc
cmp
out
ss
or
xor
imul
fnstenv
(bad)
out
sar
jbe
pop
scas
scas
popa
out
lods
mov
out
aas
push
adc
mov
ins
das
dec
xchg
test
or
jb
push
pop
imul
imul
fmulp
aas
(bad)
and
cmps
repz
dec
scas
paddw
inc
fs
xchg
sub
sub
(bad)
ja
jae
push
sar
ror
xor
je
in
lock
cdq
jb
ins
int3
adc
dec
xor
das
popa
dec
movs
push
xchg
and
iret
icebp
dec
and
in
push
call
outs
adc
ja
fnstenv
push
call
add
or
cmp
mov
pop
push
xchg
xlat
pusha
pop
enter
int3
leave
sbb
jp
add
stos
(bad)
dec
shl
rol
sar
mov
jno
mov
retf
shl
adc
cmp
int3
call
mov
sbb
jle
or
mov
cmp
maskmovq
idiv
loope
cmp
mov
xlat
je
je
out
test
inc
ret
(bad)
fstp
mov
fcmovnb
mov
mov
xchg
out
cmp
push
cmc
pop
pop
pop
in
inc
sub
lds
cmc
jl
xor
daa
pop
in
xchg
xor
aam
push
std
sbb
lock
sbb
test
mov
jb
fisubr
or
xchg
jmp
gs
es
pop
or
leave
sahf
sbb
sbb
cmp
stos
pop
iret
adc
push
dec
cmps
mov
push
shr
and
xchg
les
mov
adc
push
cs
inc
jb
(bad)
(bad)
adc
outs
mov
mov
jb
mov
mov
mov
sar
dec
arpl
cmp
mov
test
or
add
dec
pxor
loope
pop
mov
outs
dec
jmp
sbb
jbe
je
and
cdq
lods
mov
ror
iret
sub
shl
loop
push
xor
inc
adc
aad
lds
aam
js
imul
in
adc
call
jnp
dec
aas
jne
(bad)
in
(bad)
out
sub
nop
or
inc
cld
std
ja
mov
or
push
mov
scas
sbb
mov
jnp
pop
or
stos
(bad)
fwait
cmps
ret
pop
neg
push
inc
mov
out
dec
jbe
mov
pop
mov
mov
sbb
sbb
loope
test
aad
push
xchg
(bad)
mov
std
pop
jmp
in
in
dec
pop
dec
mov
repz
pop
mov
xchg
or
mov
(bad)
(bad)
adc
test
push
das
loop
out
push
stc
push
or
inc
pusha
and
fcomp
js
inc
out
(bad)
mov
mov
lods
jmp
fbstp
mov
stc
imul
jns
mov
dec
jp
push
mov
mov
mov
lods
adc
clc
(bad)
icebp
fdiv
sub
add
add
iret
dec
hlt
add
or
jae
and
add
cwde
jns
test
and
and
inc
cmps
pop
jecxz
hlt
mov
mov
bndldx
sbb
jecxz
jae
mov
inc
int3
and
add
lock
std
outs
fs
cmps
nop
or
fcmovu
or
push
jle
jne
cmps
pop
inc
clc
cli
(bad)
repnz
dec
ins
xor
pushf
ret
xchg
xlat
push
and
int
in
es
iret
mov
add
xor
imul
mov
iret
pop
sub
add
into
or
sub
jg
inc
push
cmc
lea
inc
stc
leave
mov
(bad)
xor
idiv
jns
and
inc
xor
pop
aam
cdq
inc
dec
mov
fxam
pop
(bad)
mov
or
adc
lock
ror
mov
xchg
rol
sub
jecxz
je
jne
idiv
mov
push
xor
fadd
movs
int3
push
jp
xchg
out
mov
jbe
jge
test
cli
enter
push
ja
push
or
and
(bad)
jp
jl
and
lods
adc
ret
mov
xchg
lds
fisub
pop
sbb
adc
sbb
jno
sub
test
stc
cmp
aad
xchg
test
in
(bad)
sbb
xor
sub
xchg
hlt
in
mov
xor
bound
jl
inc
jae
(bad)
xchg
hlt
dec
sar
mov
inc
ror
dec
jp
stos
pushf
sub
jae
movs
cmp
fiadd
jne
cwde
mov
ins
scas
fwait
cmp
inc
loop
inc
or
cmp
pop
rcl
push
mov
jmp
adc
pushf
je
in
cmp
sbb
out
or
not
lods
pop
retf
mov
imul
call
mov
mov
icebp
add
pusha
sub
(bad)
dec
int
push
int3
add
and
pop
loopne
or
cmp
lahf
mov
or
sbb
stc
adc
pop
mov
movs
(bad)
dec
(bad)
in
or
xor
push
push
inc
sbb
cmp
inc
test
popa
pop
add
test
xor
and
push
xor
int
ss
xor
and
push
push
push
xchg
add
mov
add
jle
jmp
cmps
div
out
scas
mov
xchg
in
div
and
mov
imul
jecxz
mov
adc
(bad)
sub
and
cdq
fidivr
adc
cli
dec
outs
fcmovnu
xchg
movs
outs
sub
lock
aas
lahf
lds
mov
adc
aas
ret
into
ror
add
sbb
pop
fdivrp
pusha
into
in
retf
mov
mov
or
sub
in
call
mov
mov
mov
jmp
sub
jg
loop
iret
ds
push
dec
arpl
in
mov
adc
jl
xor
into
mov
imul
xchg
pop
mov
outs
popa
add
fdiv
and
fld
jmp
jbe
push
cli
out
int3
stos
jb
test
and
mov
in
mov
ins
sub
push
xlat
into
push
push
xchg
add
out
mov
pop
popf
repnz
clc
sbb
out
in
xchg
div
out
sbb
outs
pop
in
pop
cmc
jg
retf
pop
outs
lahf
push
push
mov
shr
idiv
mov
loopne
push
sbb
or
cwde
push
sar
xchg
dec
mov
or
add
imul
jns
or
mov
hlt
mov
(bad)
lea
inc
mov
(bad)
leave
mov
xchg
or
test
test
ss
sar
cmp
nop
add
ins
pop
retf
stos
push
xchg
dec
retf
out
jmp
sar
inc
sbb
aad
loop
jne
push
mov
add
xor
dec
or
sub
std
stos
sub
push
ss
or
mov
aad
lods
add
mov
xchg
ja
mov
sbb
pop
inc
jle
pusha
xor
pusha
mov
mov
out
repz
(bad)
pop
pop
mov
ins
mov
scas
mov
(bad)
fs
sar
pushf
lea
shl
pop
and
es
mov
fs
lods
cwde
dec
jb
fmul
mov
add
imul
call
iret
cmc
(bad)
mov
add
lock
lds
(bad)
in
ins
sti
or
push
cmps
icebp
xchg
or
inc
jno
cmps
pop
and
in
ins
cmp
xor
pop
mov
jns
shr
retf
mov
cli
jb
cmp
aaa
add
cli
sbb
movs
cmp
and
ret
mov
push
push
or
pop
add
xchg
mov
mov
mov
fdivp
mov
ret
dec
movs
pop
inc
or
push
leave
xor
adc
push
inc
std
mov
sub
sti
xchg
popa
std
jb
xor
jno
mov
mov
xchg
pop
add
cmp
test
jb
sub
in
enter
xchg
fimul
pop
cmp
sub
ins
dec
call
and
imul
repnz
jg
pop
lods
das
sbb
push
adc
loop
add
push
aaa
xchg
outs
mov
div
xchg
push
dec
daa
mov
js
push
mov
dec
jo
and
fild
dec
sbb
in
mov
cwde
xor
retf
push
lea
test
adc
int3
out
pop
dec
xor
adc
mov
in
test
pop
mov
movs
xor
mov
sbb
sbb
cmp
xor
adc
sbb
popa
lock
dec
bound
fldcw
mov
(bad)
in
pop
push
int
inc
in
inc
sti
retf
in
pop
in
sub
leave
push
jl
out
sub
(bad)
shr
xor
pop
test
pop
sub
xor
adc
cdq
add
add
cdq
mov
mov
xlat
fiadd
mov
(bad)
int3
push
outs
pusha
(bad)
mov
ja
xchg
or
fld
mov
push
adc
fstp
not
mov
mov
fld
call
and
sbb
aaa
lods
aad
adc
ror
or
jg
pushf
out
mov
lds
inc
lahf
out
out
aas
aas
cdq
mov
nop
jecxz
mov
inc
or
(bad)
aas
jns
hlt
inc
sbb
fcomip
xor
lea
shl
xchg
cmp
mov
mov
enter
pop
add
adc
sbb
push
sbb
and
cmps
xor
inc
(bad)
sahf
add
(bad)
add
aam
dec
test
pop
imul
pop
ins
mov
inc
fwait
and
mov
mov
xor
stc
sub
xchg
sar
fsubr
sbb
adc
add
cs
add
es
inc
arpl
sub
pop
xor
pop
sub
(bad)
jnp
fxch
cmps
repnz
mov
dec
out
cmp
inc
hlt
sub
dec
popf
sub
popa
or
cmp
inc
(bad)
shl
ins
stos
nop
jl
pop
cmp
pop
mov
push
and
inc
lds
pushf
or
cmp
cmps
xor
add
movs
lds
push
jecxz
and
je
cwde
sub
xchg
xor
mov
mov
xchg
xchg
fisub
sar
mov
retf
adc
xor
sti
fmul
inc
test
and
add
pushf
or
shl
pop
jae
dec
inc
xor
scas
pushf
ret
pop
inc
stos
outs
xor
retf
mov
(bad)
pop
or
shr
test
jl
mov
loop
mov
rcl
dec
or
cmp
xor
pushf
inc
in
xchg
cs
pushf
rcl
pushf
les
or
mov
pop
ins
fbld
add
rcr
(bad)
or
into
fldcw
cs
retf
leave
mov
imul
aaa
iret
dec
push
mov
push
jo
sbb
fild
in
test
call
pop
jae
push
xchg
inc
xchg
mov
aad
pop
test
pop
mov
cs
outs
popa
jmp
dec
add
sti
pop
aad
jmp
stc
std
test
and
fisubr
pop
or
lea
mov
dec
(bad)
pop
sub
jp
adc
popa
in
dec
lods
je
ins
fwait
daa
(bad)
lahf
das
std
(bad)
cmp
sbb
mov
adc
fwait
pop
idiv
ins
test
sahf
fld
push
pop
mov
in
or
stos
jl
pop
je
or
ins
xchg
jb
popf
pop
(bad)
daa
scas
ins
sbb
shl
ret
stos
jl
mov
cmp
outs
mov
push
rcr
neg
popf
jmp
or
cmps
pop
dec
imul
dec
es
xchg
mov
mov
call
adc
mov
jg
push
in
pushf
ret
test
movs
sub
test
(bad)
push
xor
jmp
jo
push
mov
lods
dec
pop
inc
inc
test
cmp
push
add
xchg
rol
push
or
jle
nop
pop
(bad)
fwait
mov
dec
inc
pop
popf
(bad)
cs
pop
bound
fxch
push
bound
les
push
and
movs
retf
vpaddw
push
cmps
and
sbb
shl
loop
ss
addr16
fisub
ins
in
mov
sub
fcmovnbe
je
mov
and
mov
xlat
jl
cmps
xchg
test
hlt
jno
repnz
pop
jmp
jno
cmp
pop
mov
push
sub
out
in
out
dec
imul
and
ja
pushf
or
jge
jnp
(bad)
jge
iret
ror
mov
aad
ret
pop
ins
fwait
sub
push
cld
hlt
xchg
fmulp
out
sbb
sbb
mov
dec
jge
sbb
dec
xchg
repz
push
jecxz
mov
imul
out
stc
inc
dec
jns
rcr
lea
cwde
jp
in
and
mov
and
cmps
inc
xor
mov
lea
pop
shr
inc
cmp
pop
sub
xchg
mov
scas
in
stos
ins
out
jb
adc
jb
cmp
repnz
jno
xchg
fidivr
mov
cmp
push
dec
je
inc
es
in
and
sbb
mov
push
adc
push
adc
mov
ins
pop
scas
add
mov
xchg
push
push
mov
inc
lock
movs
pop
cmp
pushf
xchg
repnz
mov
push
pop
or
inc
out
mov
inc
mov
pop
inc
and
loopne
scas
ss
shr
mov
repnz
aaa
sbb
imul
mov
pop
sub
and
mov
xor
jl
test
fdiv
mov
lods
jae
jnp
push
movs
push
es
and
mov
xlat
aad
mov
mov
gs
rol
push
ss
mov
(bad)
adc
xchg
pushf
mov
jnp
fucomi
ss
mov
rcl
xchg
fmul
stc
mov
add
jbe
js
pop
inc
jns
pop
sub
stos
dec
stos
inc
adc
push
xchg
push
sbb
fisub
cmp
add
xor
in
mov
sar
outs
stos
and
sub
sub
imul
push
stc
cmp
xor
xchg
xchg
pop
cmps
cmp
jecxz
pop
pop
out
ins
cmp
pop
pop
add
dec
add
stc
xlat
jmp
mov
bound
adc
popf
mov
mov
pop
jnp
scas
out
mov
sbb
out
leave
repz
mov
sub
je
imul
dec
loopne
push
outs
cmp
test
mov
cld
cmc
das
xor
(bad)
stos
dec
jno
sahf
pop
repnz
cmc
pushw
hlt
or
std
and
fs
in
mov
push
stos
outs
(bad)
int3
xchg
sub
jo
or
jecxz
push
scas
test
cmp
or
push
pop
push
(bad)
pop
retf
inc
sub
mov
out
sahf
push
jno
inc
pop
repnz
add
int
dec
adc
lods
retf
pushf
and
sbb
pop
sbb
(bad)
xchg
retf
rcr
push
out
int3
out
pop
fbstp
jmp
sar
bound
daa
sbb
into
or
pop
test
fwait
and
xor
pop
aad
loope
out
jecxz
add
add
outs
push
movs
in
pop
mov
aas
mov
pcmpgtw
fstp
adc
int3
pavgw
(bad)
mov
scas
(bad)
scas
aaa
outs
test
repz
fucomp
call
jo
popw
xchg
push
jle
xor
xchg
neg
adc
jmp
retf
mov
int3
ret
mov
(bad)
sbb
and
loopne
jle
in
mov
mov
xor
xor
pop
je
xor
pushf
mul
js
rcl
xlat
pop
jo
xor
int
xchg
fadd
lahf
push
(bad)
jg
adc
inc
mov
outs
sub
or
(bad)
mov
xor
loopne
sbb
sub
call
adc
jle
mov
xor
mov
inc
cmp
push
into
add
repz
rol
fisub
push
xor
movs
add
lahf
(bad)
xchg
call
lahf
pop
movs
cmc
inc
xor
pushf
stc
mov
and
pop
cdq
inc
rcr
mov
inc
cs
inc
xor
ins
xchg
and
iret
dec
stos
mov
stc
cmps
sbb
cmc
mov
xor
call
dec
mov
inc
add
js
retf
aas
mov
sub
pop
loop
pop
add
stos
sahf
mov
mov
pop
sub
sub
test
fcomi
stc
jge
sbb
test
add
push
mov
xor
pop
mov
pslld
cmps
repnz
dec
xchg
dec
cmp
add
int
xlat
scas
lea
xor
pop
xchg
add
or
add
dec
das
jl
mov
into
xchg
and
call
jb
aam
mov
and
pop
or
sub
outs
leave
xchg
pop
sbb
arpl
push
rcr
xor
mov
out
dec
adc
xchg
in
xchg
adc
push
and
pop
pop
(bad)
sub
pop
push
(bad)
vpsubusb
pop
test
ret
dec
cmp
mov
cmp
inc
pusha
sbb
mov
push
aas
nop
je
mov
mov
sahf
mov
jns
or
rol
and
cmp
int3
bound
popa
imul
jb
test
and
cdq
(bad)
mov
push
pop
ret
shr
and
add
addr16
cmp
cmp
call
cmp
out
push
mov
push
ret
stc
push
adc
fistp
adc
mov
sar
or
pusha
movs
sub
push
add
xchg
push
mov
ins
popf
jle
inc
out
aaa
out
les
shl
les
mov
or
(bad)
xchg
push
mov
fisub
(bad)
sbb
nop
adc
loopne
jmp
jbe
jnp
jle
mov
sub
sub
cwde
xor
or
jl
dec
dec
fdiv
push
xchg
cmps
push
(bad)
imul
mov
inc
leave
mov
xor
push
push
cmps
sbb
inc
mov
shl
js
movs
ja
add
rol
jmp
or
mov
inc
aas
fnstenv
adc
mov
(bad)
out
mov
fcomp
push
ja
push
sti
mov
jle
cdq
call
adc
jg
sub
xor
test
aad
or
ins
out
and
mov
enter
or
jb
or
dec
out
mov
fsub
inc
push
jnp
leave
loop
xor
aas
inc
mov
std
ror
jg
fwait
mov
push
repz
cmp
push
(bad)
clc
pop
xchg
rcl
scas
fistp
sbb
xchg
in
ja
mov
(bad)
cmp
bound
ins
ret
ret
and
xchg
xor
jb
arpl
rcl
sbb
sbb
mov
xchg
movs
in
in
pop
lds
mov
out
popa
sbb
loopne
and
push
cwde
inc
popf
mov
out
xchg
in
movs
cld
pop
inc
les
stc
fst
push
sti
sbb
jo
add
jge
sbb
je
in
push
adc
mov
fs
test
and
cmp
sbb
mov
movs
loopne
jl
shr
adc
es
and
iret
cmp
daa
push
movs
adc
jo
repnz
push
jmp
jo
xchg
repz
xlat
sbb
push
shl
xchg
fiadd
xor
xchg
fdivr
push
std
adc
and
data16
ins
xchg
mov
int
jge
or
test
mov
mov
push
dec
loope
adc
mov
leave
loop
cwde
dec
test
clc
inc
mov
push
push
adc
pop
ret
in
mov
loope
sub
push
enter
call
dec
test
xchg
pop
aaa
pop
je
bound
pop
bound
add
add
mov
jae
push
enter
xor
int3
adc
mov
loop
iret
xor
add
jne
movs
xlat
pop
pop
mov
ss
cld
wbinvd
sub
enter
stc
das
cli
imul
xor
ins
jnp
in
xchg
pop
pop
xchg
hlt
mov
sub
sub
push
js
mov
mov
fmul
adc
clc
popf
je
mov
xchg
shl
xchg
sbb
stos
push
shr
gs
outs
mov
lahf
popf
lahf
dec
xchg
in
pop
adc
sub
hlt
jbe
inc
inc
xor
lock
inc
sbb
and
cmp
mov
cmp
(bad)
fwait
stos
mov
sub
bound
sub
adc
xor
lahf
mov
bound
popa
imul
rcr
jns
scas
add
cwde
mov
stc
fld
mov
push
pop
jecxz
pop
sbb
mov
dec
mov
and
aas
fsin
xchg
ret
aad
popf
fiadd
xchg
test
mov
mov
popf
or
fdivr
push
dec
xor
xor
push
movs
adc
and
stos
stos
and
test
pusha
jb
push
cmc
jl
jmp
call
ja
gs
xchg
ds
and
mov
stos
inc
aaa
and
lods
xchg
inc
or
out
(bad)
in
push
dec
dec
int
sub
les
es
in
pmuludq
push
mov
or
inc
aam
add
push
je
sbb
or
cmp
mov
mov
sub
int3
mov
mov
in
int
cmp
mov
stc
xor
movs
adc
mov
jmp
mov
push
push
adc
lahf
loopne
xor
pop
adc
nop
sub
sub
add
stos
jle
ds
adc
iret
dec
call
and
and
pushf
adc
loopne
pop
mov
dec
sbb
or
test
cmp
xor
inc
or
cs
jmp
adc
inc
imul
js
adc
call
and
into
data16
imul
(bad)
sub
push
and
clc
(bad)
data16
push
sbb
adc
movs
sub
and
jo
nop
pop
icebp
inc
popa
xor
mul
int
sti
inc
xchg
xor
lods
xchg
or
cmp
jns
retfw
xchg
sub
cmp
not
sub
aam
pop
data16
aad
jge
push
jge
lahf
add
mov
xchg
les
ret
cmp
(bad)
ins
outs
pop
inc
xor
adc
fsubr
push
sub
repnz
dec
call
inc
dec
mov
stos
nop
cmp
pop
lahf
not
int3
cld
add
pop
add
stos
bswap
add
adc
inc
scas
xchg
inc
sub
retf
(bad)
int3
mov
(bad)
clc
dec
and
out
test
fbld
or
cmp
inc
sub
adc
inc
int
push
mov
rcr
cmp
pop
call
sbb
mov
mov
or
mov
add
in
rcl
jp
xor
mov
inc
mov
xor
dec
je
fadd
sbb
pop
ret
mov
fst
cmps
mov
leave
pop
sub
stc
and
arpl
out
mov
lock
sub
out
div
inc
repnz
nop
adc
jp
cmp
cwde
and
sub
addr16
shl
ins
mov
mov
ins
pop
pop
enter
push
fst
push
loopne
jae
jmp
mov
sub
mov
jmp
jg
xlat
pop
xor
cli
movs
mov
pop
sbb
and
in
cwde
xchg
ret
lahf
jbe
les
in
add
push
dec
imul
scas
mov
mov
cmps
fs
mov
fnsave
push
mov
ins
mov
icebp
icebp
pop
or
ja
jne
cmp
mov
jae
adc
lahf
jae
nop
jmp
adc
ror
enter
fist
and
xchg
sbb
push
js
out
je
mov
inc
add
mov
push
sti
jae
movs
cmps
fs
lds
popf
adc
xchg
mov
cwde
mov
sti
add
into
cdq
pop
dec
cmps
nop
or
fbld
ss
add
arpl
scas
cmp
lahf
pop
shl
and
pop
in
nop
push
adc
rcr
xchg
and
dec
sub
fdiv
push
or
or
cli
and
in
sbb
pusha
loop
mov
out
pop
dec
lds
jmp
mov
add
jmp
clc
iret
stos
movs
add
fdiv
retf
cmp
jnp
rol
mov
xor
cmps
or
(bad)
je
icebp
into
mov
ror
mov
les
add
jmp
rol
inc
cmp
sub
push
inc
icebp
mov
clc
jl
sub
cmc
nop
cmp
aad
(bad)
aaa
inc
push
fwait
xchg
out
into
sbb
mov
pop
xor
mov
mov
in
dec
and
loope
pop
leave
in
sti
push
or
adc
iret
ins
adc
sub
inc
mul
int3
mov
sub
adc
je
sbb
ficomp
retf
dec
jmp
loop
mov
inc
call
pushf
outs
push
xchg
push
sti
imul
push
test
inc
push
pop
xchg
aam
xlat
std
nop
and
inc
gs
cmps
push
add
(bad)
cdq
sbb
nop
movs
mov
or
add
sbb
popa
cs
ins
in
sti
js
retf
or
mov
out
add
inc
pop
adc
fcmovbe
or
add
or
ins
ret
adc
or
xchg
push
jne
lods
jge
mov
dec
leave
or
sahf
xor
sti
inc
xor
jno
mov
jno
int3
or
mov
shl
push
bswap
shl
test
jecxz
fisub
or
mov
inc
sub
jns
xor
jns
and
inc
jge
inc
movs
fidivr
movs
xor
add
jns
adc
xchg
ret
xor
and
neg
add
mov
xor
push
(bad)
adc
cld
loope
pop
pop
imul
mov
sub
sbb
(bad)
rcr
dec
rcr
or
gs
or
ret
dec
sbb
push
lahf
ficom
jo
mov
adc
mov
repz
jns
jp
repnz
cmps
jnp
sbb
inc
xchg
add
sub
outs
and
pop
in
sbb
jb
xchg
jecxz
pop
sub
jno
inc
fistp
xchg
mov
pop
(bad)
and
inc
dec
xor
loop
sub
in
sbb
push
push
cmp
and
jns
jae
cmp
int
test
out
inc
mov
ss
pop
sti
xchg
ds
dec
or
add
loopne
inc
adc
add
sub
(bad)
(bad)
(bad)
out
jp
gs
ss
sbb
vpsllq
shl
fmul
sbb
outs
adc
fild
fist
sub
xor
mov
mov
or
(bad)
ret
cmp
pop
lock
cmp
scas
hlt
inc
jb
lods
push
dec
hlt
push
pop
add
and
mov
fisubr
adc
add
out
push
dec
aaa
bound
in
sbb
xchg
es
fldcw
cs
sbb
mov
cdq
sar
repnz
outs
imul
popf
test
test
dec
add
jo
jge
mov
pop
push
movs
add
push
inc
cmc
pop
xor
mov
mov
jp
ror
jnp
cli
data16
aaa
int
into
das
mov
stos
into
sub
pop
or
jmp
cdq
movq
dec
out
pop
movs
fnstenv
mov
imul
mov
add
sti
cdq
pop
push
into
pop
movs
test
sub
mov
inc
dec
test
cdq
adc
sub
or
dec
pop
add
or
xchg
leave
shl
fnclex
bound
mov
xor
inc
pushf
xor
mov
and
rcr
stc
sbb
repz
std
jp
jecxz
fwait
cdq
dec
jo
mov
push
cmp
cmc
icebp
daa
fucom
cwde
push
outs
inc
lods
movaps
loop
enter
stos
jmp
inc
out
mov
daa
pop
and
out
sub
or
arpl
bound
js
adc
(bad)
mov
cli
inc
fsub
test
or
dec
fist
in
adc
pop
mov
push
scas
pop
sub
xlat
push
dec
jecxz
cmp
lds
sbb
mov
aad
and
xlat
clc
lods
cmp
or
ds
rcl
mov
adc
push
xchg
mov
dec
gs
and
xor
mov
imul
retf
mov
adc
int3
imul
jne
test
jp
into
rcl
jl
push
iret
(bad)
xlat
sub
adc
jbe
mov
jne
or
xor
pop
mov
jmp
cdq
js
test
bound
aad
pop
xor
mov
adc
cs
dec
movs
in
and
ss
jae
test
scas
jl
jae
mov
ret
repz
mov
and
iret
mov
sub
xor
nop
inc
test
xchg
ss
mov
cli
retf
push
and
adc
rcr
push
cld
sbb
push
jae
mov
aam
mov
adc
jp
jmp
pop
(bad)
int3
mov
into
outs
fwait
dec
je
aad
imul
inc
push
fst
movs
adc
in
pop
fiadd
mul
mov
aam
std
mov
jnp
mov
mov
cwde
jbe
int3
rcl
dec
xor
cdq
dec
ss
out
fmul
aas
cdq
adc
fldcw
jno
lahf
xor
push
dec
add
inc
das
pop
retf
pop
mov
into
retf
or
out
and
sub
les
in
(bad)
popf
and
aaa
outs
out
jle
std
xor
fistp
out
pushf
sub
cmp
cs
cmps
cmps
mov
xlat
(bad)
jmp
mov
inc
lock
icebp
pushf
pushf
ror
icebp
xchg
xchg
xchg
je
and
sahf
(bad)
in
adc
call
repnz
and
push
out
jae
dec
xchg
xchg
sbb
aas
xchg
and
sbb
loopne
push
push
repz
jns
in
jle
nop
cmp
and
add
addr16
cli
dec
push
adc
jp
mov
pop
cmp
push
jp
xor
sub
push
jb
add
sbb
popa
test
ficomp
stos
dec
or
jp
dec
pop
add
or
js
test
adc
inc
jmp
ins
imul
jae
jae
sbb
push
cs
or
les
dec
cmps
(bad)
icebp
scas
sbb
fadd
sbb
mov
add
ret
xchg
xor
push
mov
shl
dec
pop
inc
sbb
iret
jbe
add
stos
jno
cmp
mov
frstor
fcom
sub
cmps
loop
cmc
cdq
and
aam
pop
out
in
in
icebp
fcom
cwde
es
adc
shl
pop
(bad)
pop
shr
cdq
jecxz
mov
es
mov
scas
ret
push
shr
pop
cmp
ret
aam
imul
inc
pop
cmps
leave
std
outs
in
imul
cmp
mov
into
jae
xchg
dec
fdivr
xchg
shl
call
cmp
cmc
inc
xchg
aaa
jmp
and
jecxz
and
stc
or
adc
cmp
mov
div
mov
xor
mov
stos
jne
jecxz
retf
idiv
fstp
test
adc
jl
in
mov
jge
stos
mov
adc
and
and
retf
cdq
mov
xor
into
cmps
in
mov
and
or
cmp
jo
add
mov
rep
jmp
call
(bad)
jae
std
mov
or
and
shr
mov
cmp
or
jmp
js
cmps
mov
adc
ins
dec
cmps
das
cmc
cmp
cs
(bad)
daa
lahf
dec
in
out
cmp
dec
cmp
cmps
std
in
mov
dec
or
jge
sbb
mov
aas
sahf
xor
jg
xor
js
cmp
nop
xchg
fs
dec
jae
les
push
popf
mov
and
daa
and
mov
cmp
loopne
rcl
mov
and
adc
cdq
inc
dec
das
pop
push
pop
out
pop
pusha
jg
movs
jmp
je
scas
adc
repnz
jge
inc
ret
push
and
shl
add
ficomp
stos
mov
pop
ret
add
ror
inc
jne
inc
test
pushf
pop
sbb
inc
mov
mov
mov
lea
xchg
mov
cmp
mov
mov
pop
int3
imul
mov
(bad)
cld
inc
sub
dec
xchg
dec
shl
(bad)
pop
pop
mov
pop
gs
ins
push
jmp
sub
xor
xchg
(bad)
xchg
xchg
arpl
pop
xchg
scas
lahf
xchg
ins
jmp
cmp
mov
mov
into
cmp
xor
cdq
jae
and
xchg
xchg
daa
ins
stos
dec
imul
mov
push
pop
test
mul
cmp
(bad)
pop
add
aad
add
rcr
dec
lods
sbb
(bad)
mov
xchg
cmp
mov
cmps
fcmovb
cmp
mov
inc
pop
mov
je
xchg
loop
mov
xor
add
push
pop
add
leave
(bad)
rcl
sbb
xchg
fs
xchg
or
mov
repnz
jmp
mov
jle
inc
fs
dec
hlt
lahf
mov
push
jmp
inc
mov
adc
mov
adc
out
or
and
sahf
dec
outs
xchg
adc
fwait
cs
mov
loope
test
arpl
bound
into
pusha
add
jo
ss
call
(bad)
iret
je
add
xor
retf
out
jmp
push
cdq
pop
mov
xchg
cdq
sbb
xchg
movs
mov
and
sub
sbb
nop
mov
repz
fld
popa
dec
in
fld
inc
scas
daa
call
inc
jae
jp
ins
mov
ins
add
sub
ins
fyl2x
gs
jns
cld
xor
xor
rcl
add
ret
and
fs
push
pop
shr
push
and
call
repnz
cmps
xchg
push
xor
sbb
jns
cmp
or
pop
or
fstp
lods
or
cmp
stos
cmp
sbb
xlat
push
cli
jo
cmp
mov
xchg
push
test
fnstcw
jg
bnd
stos
xlat
mov
xchg
rol
retf
ss
lea
mov
rcl
push
cmp
push
popa
fdivrp
stc
cld
mov
in
push
mov
add
cmps
xor
jno
jbe
out
jg
jle
jge
sbb
inc
add
pop
mov
mov
or
(bad)
rcl
inc
aad
es
test
push
add
adc
cmps
and
test
shr
fs
xchg
repz
shl
ret
mov
adc
hlt
push
jnp
mov
dec
sahf
(bad)
sahf
mov
popf
pop
repz
or
sub
and
adc
push
xchg
test
cmp
dec
dec
inc
cmp
jb
adc
hlt
call
out
int
(bad)
repnz
rol
xor
addr16
dec
test
ss
(bad)
mov
scas
jo
inc
sahf
lock
add
pop
sbb
adc
jno
xchg
jp
push
jns
das
sub
std
pop
push
mov
pop
bnd
jne
scas
pop
pop
(bad)
inc
test
mov
fstp
fist
push
icebp
cmp
and
test
bound
xor
out
stc
add
rcr
sti
cdq
popa
rcl
xor
lods
mov
push
push
dec
aad
lock
ret
inc
jns
add
xchg
scas
sbb
and
int
xor
shl
inc
or
out
xor
(bad)
(bad)
in
cmp
xor
mov
sbb
sbb
cmps
sahf
cmps
sbb
xchg
fcomp
scas
mov
dec
adc
loope
fist
jmp
loop
int
add
jb
inc
mov
add
inc
sbb
sub
pop
call
add
std
dec
adc
pop
mov
fbstp
and
lahf
sbb
pop
jns
xchg
xchg
out
mov
add
add
aaa
sahf
iret
lods
sbb
and
aas
push
push
pop
sti
ds
jbe
ret
pop
or
xchg
mov
test
dec
push
or
pop
pop
adc
adc
bound
imul
sahf
fsubr
push
jmp
lods
dec
retf
add
sahf
test
inc
xchg
js
stos
cmps
cmp
add
sub
nop
cmp
repnz
cmc
jecxz
push
sahf
jle
sub
dec
test
jp
int3
sub
jmp
cmp
fidivr
(bad)
(bad)
dec
clc
aaa
sub
arpl
dec
mov
mov
or
jmp
push
retf
mov
cmp
(bad)
out
in
xchg
pop
icebp
mov
int
in
push
mov
into
jmp
stos
jp
ror
mov
sub
mov
icebp
mov
imul
cwde
xchg
fidiv
movs
sbb
fisubr
or
in
mov
xchg
push
mov
dec
cld
popf
lahf
scas
outs
cmps
in
shl
(bad)
call
movs
dec
pop
mov
add
add
addr16
sub
es
mov
mov
in
les
lods
cmp
push
int3
repz
lds
lds
xchg
mov
popf
mov
enter
and
add
ins
dec
imul
test
ins
cmps
rol
xor
or
pushf
xchg
lea
jne
mov
fisubr
pop
push
or
ret
fs
mov
test
aam
ror
inc
jecxz
pop
mov
arpl
adc
fucom
test
push
pop
not
or
mov
xchg
push
sub
push
fsubr
cld
or
jne
sub
movs
add
repz
enter
not
xchg
popa
aad
xor
or
in
ja
movq
push
and
jle
fnstcw
dec
jmp
jmp
loope
or
jno
dec
xor
lea
cmc
push
out
mov
inc
dec
mov
dec
mov
inc
and
xor
add
pop
addr16
dec
retf
fwait
daa
stc
mov
imul
mov
leave
inc
dec
sbb
rol
cli
jb
push
or
push
xlat
test
test
lods
je
xor
dec
aas
sbb
xchg
cmp
mov
pop
(bad)
into
out
push
jae
mov
or
sub
push
adc
(bad)
fwait
test
inc
nop
xor
retw
add
xchg
mov
dec
lahf
jle
push
cmp
imul
ret
mov
dec
or
mov
and
add
stc
out
div
lahf
push
cli
fstp
cld
mov
icebp
pop
sbb
movs
xchg
pop
bound
push
pusha
imul
push
dec
add
push
ror
inc
push
dec
xchg
pop
inc
jge
xor
pop
sub
sub
repz
(bad)
lds
stc
mov
lock
push
lock
call
pop
pop
xchg
rcr
addr16
xor
pop
scas
test
stos
stos
mov
jbe
fistp
push
(bad)
and
xor
sbb
or
pop
jle
push
ss
xchg
xor
pop
in
adc
les
sbb
pop
sti
es
mov
jnp
cmp
loopne
or
push
xchg
inc
std
iret
repnz
or
jecxz
mov
scas
test
pop
rcr
scas
mov
xchg
fdiv
sbb
sbb
cmp
fdivrp
pop
(bad)
cmp
leave
or
pop
iret
inc
imul
int
lea
loope
fidivr
clc
jle
cwde
jl
fwait
pop
add
dec
test
daa
pusha
pop
fucompp
(bad)
leave
xor
dec
xchg
mov
sbb
popf
jmp
mov
call
stos
sti
jecxz
jbe
and
(bad)
aad
data16
cmp
fwait
shr
lea
sahf
in
cmp
outs
and
data16
jae
add
call
retf
int
xor
sbb
(bad)
jl
cmp
cmc
aas
rol
fdiv
or
sub
fild
cmp
ret
mov
fs
leave
es
cmp
cli
mov
loopne
aas
mov
sub
mov
cli
dec
cmp
pop
mov
inc
(bad)
push
les
add
les
fisub
sbb
rol
and
out
icebp
outs
sub
sub
pop
mov
cmp
xor
xchg
sub
adc
sbb
(bad)
iret
int
push
test
lea
int3
jge
popa
fs
rcr
ins
push
and
jmp
xchg
ficomp
adc
movs
mov
loopne
loope
stos
adc
loop
mov
and
fdiv
adc
mov
cmp
sbb
or
test
cld
xor
popf
jo
gs
dec
mov
lods
ficom
pop
sub
arpl
and
gs
mov
outs
xor
iret
and
cwde
into
inc
stos
mov
and
mov
daa
pop
es
add
test
mov
(bad)
(bad)
sar
mov
sbb
sahf
jae
clc
jns
fld
and
test
mov
xchg
dec
in
or
xor
dec
dec
mov
sub
out
add
xor
mov
xchg
enter
inc
and
rcl
adc
inc
mov
push
jne
sbb
pop
femms
xchg
pop
out
sbb
or
add
into
mov
pop
mov
xchg
outs
sbb
arpl
lea
test
cld
mov
fs
leave
sbb
sub
mov
adc
dec
inc
call
iret
sbb
xacquire
or
push
icebp
jns
mov
mov
or
mov
xchg
xchg
adc
int3
call
jns
stos
fst
(bad)
ins
in
les
pop
imul
in
leave
mov
sbb
(bad)
movs
aad
scas
pop
push
cs
dec
push
fimul
pop
pop
push
adc
add
xchg
xchg
dec
imul
scas
push
aad
pop
cmp
dec
sub
and
test
add
leave
das
mov
jmp
aam
rcr
(bad)
lock
ror
ds
outs
xor
je
xor
lea
rol
and
(bad)
mov
inc
test
nop
add
sbb
dec
fsub
enter
test
jmp
enter
jne
jbe
pop
fadd
jl
rcr
test
xchg
mov
dec
xchg
inc
xchg
xchg
outs
repnz
and
add
pop
fs
outs
popf
or
aad
mov
std
or
scas
lahf
pop
outs
mov
lods
inc
mov
dec
xchg
jmp
sub
mov
add
mov
cli
xor
sub
test
push
inc
add
ds
sbb
push
outs
into
dec
movs
inc
jne
dec
xchg
jg
mov
xchg
xchg
mov
inc
in
mov
sbb
mov
pop
mov
pop
es
(bad)
repnz
aad
mov
add
fwait
adc
pusha
lods
mov
loopne
push
out
mov
sbb
mov
push
jecxz
cmc
mov
inc
mov
and
mov
cs
fcomp
xchg
dec
xchg
sbb
cmc
dec
fldcw
cmp
sbb
cmp
and
push
add
xor
int3
push
mov
sub
scas
test
loopne
dec
int
add
and
das
or
call
pop
xchg
nop
test
xchg
bnd
stc
pop
dec
loope
mov
add
mov
mov
inc
xchg
scas
loop
push
fisubr
xor
pop
(bad)
push
shl
movs
push
cmp
mov
mov
scas
sbb
js
jmp
icebp
inc
sub
test
int
jb
or
dec
in
lahf
xor
pop
int
repnz
dec
imul
out
mov
stc
xchg
pushf
sbb
mov
cmp
call
jg
pop
and
cmp
mov
fcomp
repz
sub
sbb
cmp
imul
cmc
xchg
cmp
jmp
push
dec
mov
push
aas
mov
outs
mov
dec
sub
ins
imul
inc
add
or
sbb
shl
push
inc
daa
mov
retf
outs
imul
and
das
dec
movs
add
test
push
into
mov
in
fiadd
jno
pop
ins
add
and
mov
mov
cmps
adc
add
andps
mov
pop
and
in
or
cmp
xchg
add
in
sub
push
hlt
repnz
xor
mov
jae
cmp
mov
stos
sbb
xchg
pop
ffree
mov
mov
hlt
adc
(bad)
xchg
inc
push
mov
dec
arpl
sub
je
push
daa
in
xor
sub
cmp
cwde
adc
ins
sub
(bad)
imul
adc
dec
loopne
(bad)
fld
sbb
xchg
fcomp
imul
loopne
cmps
mov
add
jp
repz
sub
gs
loop
rcr
xor
in
dec
and
mov
rol
std
mov
mov
pop
mov
lock
arpl
fnstsw
xchg
mov
les
or
enter
add
scas
mov
dec
pop
push
cmp
xchg
dec
mov
mov
dec
inc
jbe
sub
dec
cmp
cld
xor
ss
loopne
out
mov
add
mov
icebp
cdq
jb
and
dec
pusha
xchg
shl
in
mov
push
in
and
mov
pop
frstpm(287
ret
push
cs
shr
adc
dec
push
jle
jg
lds
ficom
jno
cmps
bound
jl
pop
dec
dec
push
dec
cmp
cmp
push
ins
jo
cdq
andnps
adc
data16
inc
push
(bad)
cmp
push
xchg
lea
leave
inc
xor
rep
nop
les
aam
cmps
inc
popa
cdq
mov
fisub
mov
jp
fstp
(bad)
in
js
pushf
jnp
cli
add
test
js
cdq
test
ror
jle
mov
add
enter
xor
dec
repnz
xchg
xor
mov
les
fnstcw
sti
adc
pop
cmp
mov
cmp
add
dec
mov
and
fs
aad
xlat
push
neg
jge
outs
mov
cmps
dec
repnz
scas
sub
je
push
sti
cs
mov
in
repz
sar
clc
inc
dec
mov
fstp
or
in
push
popf
inc
scas
inc
ficomp
call
rcr
hlt
push
retf
scas
sub
ins
mov
jecxz
aam
outs
sub
and
pop
aas
xchg
mov
cs
cmps
pop
jno
sub
pop
into
inc
inc
sbb
int3
mov
jp
inc
xchg
mov
popf
test
outs
jmp
cmp
test
gs
fcmovbe
sar
ret
popf
leave
xchg
push
lods
jg
and
int
dec
cdq
out
fxch
pusha
mov
je
mov
retf
cmp
cmps
inc
fs
jmp
push
stos
shl
gs
dec
sub
loopne
(bad)
xchg
into
mov
adc
jo
mov
lds
cs
ficomp
add
and
sub
bound
xchg
xchg
mov
pop
xor
push
scas
jno
cmp
mov
adc
mov
jp
aas
call
or
and
addr16
inc
jns
dec
lea
es
mov
cmp
scas
lds
(bad)
iret
fwait
stos
adc
js
(bad)
shr
stos
(bad)
add
xor
enter
push
mov
pushf
and
cmp
pop
aam
fistp
repnz
pop
outs
sub
sub
outs
sub
pop
jo
sti
sti
ja
add
popf
sub
mov
ds
pop
inc
iret
stc
std
scas
int
std
sub
xlat
mov
adc
or
pushf
mov
std
push
xor
inc
fsubrp
scas
shr
xchg
das
cld
sub
pop
and
ja
jle
addr16
adc
and
fstp
sbb
scas
mov
push
add
sahf
dec
stos
pop
mov
lods
dec
pop
mov
xor
jp
lods
int3
cmp
pushf
mov
jg
lock
fwait
jmp
mov
int
test
in
mov
cmp
lods
adc
(bad)
mov
in
cmc
loope
loope
leave
sbb
addps
lds
stos
sti
add
adc
fs
jl
dec
mov
xor
in
rol
sahf
cmc
xchg
dec
test
xor
cwde
xor
cmc
(bad)
xor
and
cmp
jge
out
jge
ins
push
inc
mov
xor
cmp
push
bound
int
shr
jo
mov
test
test
adc
or
out
cdq
mov
into
dec
out
mov
inc
ret
cmp
sar
sub
test
push
mov
inc
xchg
into
(bad)
loop
mov
(bad)
clc
or
pop
out
out
std
in
cmp
sbb
cld
cmp
(bad)
or
jmp
in
sub
adc
push
(bad)
enter
dec
inc
mov
mov
adc
cmp
push
mov
sub
mov
scas
mov
fld
retf
mov
call
pop
cmps
dec
pop
cmp
aaa
mov
mov
or
call
pop
xchg
xchg
jmp
fcmovnu
das
cld
ins
mov
push
xor
inc
leave
fdiv
xchg
shl
push
mov
and
add
into
xor
cmp
add
rol
push
pop
pop
cmp
cmp
xchg
cmp
jo
popa
adc
repz
pop
scas
popa
mov
cmp
mov
adc
add
pop
std
aaa
cwde
pop
adc
sub
sub
xlat
aaa
in
push
sbb
mov
xlat
cmp
cwde
(bad)
cs
lods
std
arpl
repnz
jno
xabort
push
fcomip
stos
mov
in
dec
xchg
mov
dec
stc
adc
jae
sub
scas
xchg
mov
inc
sub
frstor
sbb
(bad)
xor
cmp
fld
xchg
or
ja
js
and
cmps
push
jo
jb
mov
sbb
and
in
cdq
or
push
in
lods
xchg
(bad)
in
and
stos
mov
aad
lods
mov
leave
xchg
xchg
push
(bad)
call
add
les
sbb
cmp
stos
(bad)
aad
aam
pop
pop
movs
xchg
pop
inc
sbb
je
cmp
fs
sub
icebp
adc
pop
stc
out
xchg
sbb
jmp
push
inc
clc
dec
(bad)
fisub
pop
or
adc
mov
jl
lea
adc
popa
jns
push
xchg
cs
mov
jbe
cmp
mov
or
imul
cmp
push
add
shl
xchg
and
xchg
fsub
mov
inc
aas
push
mov
add
mov
push
push
mov
xor
(bad)
jns
dec
xchg
adc
movs
pop
jl
mov
dec
jmp
sub
aas
xor
mov
jg
push
addr16
adc
pop
sahf
popa
or
pushf
pop
test
sbb
push
rcl
mov
mov
js
or
leave
fist
jns
aaa
sbb
push
dec
jb
popf
popa
inc
repz
pusha
pop
mov
repnz
pop
jo
mov
(bad)
xor
jnp
fwait
mov
adc
cld
enter
mov
push
movs
fnstsw
sbb
push
sbb
pusha
hlt
or
gs
jne
xor
cs
test
inc
ds
sub
jmp
inc
fdivp
or
stos
test
pop
inc
and
icebp
mov
pop
(bad)
xlat
test
(bad)
adc
test
jl
mov
scas
and
in
inc
dec
mov
inc
add
jmp
jl
int
adc
adc
mov
(bad)
sub
jo
dec
out
js
ja
out
and
mov
lea
mov
xchg
xchg
xchg
pop
jb
sub
xchg
and
shr
sub
and
sub
aas
dec
jg
jge
add
cmp
cmp
mov
adc
xor
inc
fist
stos
daa
in
ins
adc
or
and
in
fcmovnb
sbb
int3
test
or
lock
xchg
dec
ret
(bad)
cmp
sbb
cli
cmc
aas
(bad)
jae
xchg
sbb
mov
(bad)
jbe
push
sub
sbb
or
call
adc
stc
outs
sbb
stos
or
xor
push
add
mov
das
fld
pop
mov
lods
pop
sti
jle
cmp
frstor
ficomp
mov
xor
ins
and
(bad)
outs
imul
vpinsrw
scas
retf
or
cmp
es
inc
cmp
cmp
jae
bound
jmp
cmp
mov
sbb
jecxz
ud2
push
cmc
rcl
xchg
and
sub
lods
call
pop
or
imul
cmp
mov
add
inc
push
or
push
jno
push
es
xchg
jae
inc
test
mov
arpl
je
adc
fidiv
push
sbb
lea
retf
mov
shl
ja
ja
or
cvtps2pi
add
inc
repnz
sbb
int3
fbld
leave
pop
push
imul
mov
pop
sbb
and
mov
sub
cmp
imul
imul
pop
mov
repz
int3
push
mov
pushf
hlt
mov
mov
sbb
jbe
lahf
xor
add
mov
je
xchg
(bad)
mov
xchg
rcl
cdq
call
dec
mov
adc
xchg
(bad)
movs
mov
push
das
xchg
dec
inc
dec
xor
clc
test
dec
sbb
dec
push
jl
mov
dec
xor
mov
arpl
add
es
(bad)
stc
xchg
js
cmc
inc
add
pop
cld
cli
je
xchg
fcmovne
ret
outs
jb
pop
cmps
ret
(bad)
xchg
xor
add
push
add
add
call
or
popf
(bad)
xchg
nop
pop
jno
adc
inc
jbe
mul
inc
(bad)
add
not
aaa
jno
pop
or
repnz
test
loope
ins
cmp
push
adc
cmp
in
cmp
mov
repz
sub
call
xor
rol
adc
sub
call
(bad)
and
xchg
cmps
inc
push
popf
mov
push
mov
imul
sbb
cld
cmp
ins
or
cmp
ret
sbb
push
cmps
fwait
sbb
scas
and
mov
jno
mov
fsubr
cmp
sti
leave
xchg
cmp
test
mov
pop
sar
mov
hlt
adc
mov
push
add
sar
xor
mov
dec
xor
js
lods
push
mov
test
outs
push
hlt
sbb
cmp
rol
or
sbb
mov
add
mov
xchg
(bad)
pop
mov
jne
jne
adc
sbb
rol
mov
fidivr
retf
push
dec
imul
cmp
inc
mov
inc
mov
daa
jnp
popf
pop
cmc
ror
js
daa
mov
imul
add
pop
jmp
jecxz
mov
pushf
into
cmp
test
sub
in
lock
pop
pop
stc
(bad)
sbb
sbb
inc
cli
sub
mov
adc
push
cmp
sub
in
jae
jne
ret
inc
and
call
and
fmul
iret
xchg
ret
mov
aaa
xchg
mov
jmp
mov
push
cwde
adc
clc
(bad)
aas
mov
sub
ds
jl
mov
and
arpl
into
test
(bad)
jmp
inc
imul
adc
mov
xor
jecxz
mov
mov
stc
inc
add
jno
mov
in
push
cmp
mov
sahf
pushf
fcom
jg
adc
mov
jle
pop
push
sbb
jne
or
imul
jg
inc
add
jg
scas
lds
retf
xchg
mov
imul
adc
pusha
fistp
scas
addr16
and
xor
cld
sar
xor
pop
sub
or
inc
mov
shl
neg
mov
mov
pop
and
mov
adc
fs
jl
dec
jecxz
sub
inc
lds
lock
add
sub
(bad)
sbb
jnp
in
aaa
rcr
fdivrp
xor
out
ds
fistp
pop
sub
add
stc
adc
push
and
jo
in
fsub
scas
jnp
adc
ficomp
rcr
not
fcomp
test
ins
in
mov
dec
fstp
test
adc
fldenv
rcl
(bad)
or
out
mov
jo
push
mov
add
jb
movs
data16
jmp
pusha
push
cmc
or
mov
pop
(bad)
dec
mov
je
or
mov
inc
aad
lock
lods
inc
jae
inc
aad
lock
ins
push
mov
es
out
inc
call
inc
test
inc
lea
mov
sub
fcmovu
and
mov
cdq
adc
mov
cdq
daa
mov
fisubr
cwde
pop
add
mov
jae
mov
mov
inc
mov
push
xor
lods
movs
adc
xchg
leave
call
jmp
sub
adc
mov
sub
in
pushf
xchg
jne
bound
fsubr
retf
mov
pop
fild
sub
or
cmp
call
mov
pop
rcl
je
outs
repnz
dec
sbb
adc
aad
push
cmp
fild
mov
daa
push
call
mov
cmp
xchg
pop
push
or
jle
fsubr
adc
jne
or
and
pop
sub
xchg
xchg
call
xchg
shr
inc
cmps
sbb
mov
add
or
fist
mov
dec
idiv
pop
in
fst
das
push
mov
lea
xchg
cwde
pop
loope
icebp
into
sahf
cli
imul
add
push
(bad)
push
je
sub
(bad)
dec
fstp
ins
cmc
mov
add
stc
push
sti
xor
mov
shr
je
out
dec
mov
enter
stos
lods
mov
sub
rcl
add
jb
add
shl
aas
or
out
lahf
xchg
cmp
sbb
(bad)
mul
push
add
sar
jmp
sbb
mov
cmp
cwde
or
(bad)
inc
scas
inc
and
mov
pusha
inc
push
(bad)
das
cmps
ja
aam
fcomp
pop
inc
mov
sub
mov
pop
pushf
jl
add
jo
retf
imul
movs
or
inc
xor
mov
push
sub
dec
mov
dec
push
adc
movhps
push
jecxz
add
or
ins
stos
xor
pop
jne
js
cmp
pop
sbb
or
stos
outs
mov
xchg
lock
das
(bad)
mov
sbb
sub
mov
inc
jno
fsub
inc
shr
mov
aad
and
push
jle
rol
add
mul
add
dec
sbb
xchg
cmp
rcl
xlat
popa
ja
sbb
scas
ret
sub
or
(bad)
int3
sub
fs
(bad)
(bad)
jmp
or
push
jmp
jae
mov
pop
and
(bad)
bound
jg
jno
setl
cld
mov
sbb
imul
jecxz
call
adc
nop
test
mov
inc
movs
jecxz
daa
inc
ja
mov
sub
dec
and
and
enter
dec
pushf
addr16
sub
call
aad
push
(bad)
stc
rcr
mov
cdq
iret
push
inc
ficomp
and
cwd
sbb
adc
mov
push
int3
scas
push
push
push
pop
pop
out
xchg
scas
and
mov
mov
(bad)
out
add
ins
out
mov
sub
jecxz
fld
adc
js
jmp
aam
ins
inc
aad
xor
les
test
xor
xor
adc
sub
in
(bad)
rcl
dec
dec
add
repnz
mov
les
push
sub
imul
sbb
sub
retf
shl
cmp
retf
adc
out
xor
cmc
nop
scas
movs
dec
jmp
sbb
cdq
push
sbb
loopne
into
sbb
sbb
xor
test
outs
mov
xor
cli
cmp
mov
lock
xor
shr
cmp
jle
inc
cmp
jmp
fbstp
je
hlt
dec
in
outs
stos
inc
in
xor
dec
add
push
(bad)
es
scas
rcr
pop
pop
aad
add
clc
dec
or
dec
mov
and
test
stos
push
fld
sbb
loopne
fimul
sub
inc
test
mov
(bad)
repz
(bad)
out
pop
fwait
repnz
pop
(bad)
icebp
cli
fisubr
pop
jmp
shr
call
lods
xchg
aaa
jns
mov
in
rcpps
sbb
add
(bad)
int3
imul
lahf
xchg
adc
adc
inc
out
adc
or
rcr
fstp
and
in
loop
adc
retf
inc
test
mov
cmps
in
dec
jae
cmp
fdivp
mov
cmps
push
lods
js
loopne
stos
(bad)
push
mov
(bad)
fstp
mov
imul
dec
outs
dec
jnp
int
push
into
jle
jmp
inc
and
out
xchg
popf
jnp
inc
fs
lahf
movs
and
paddw
outs
nop
js
es
rcr
push
repz
popf
iret
jle
lea
mov
cmp
pop
gs
into
ficom
(bad)
hlt
jno
xchg
movs
std
dec
dec
xchg
aam
in
mov
ins
sbb
sub
adc
(bad)
dec
pop
cmp
add
fldenv
(bad)
icebp
pop
pop
fidiv
into
jno
cs
icebp
fbld
imul
adc
int
jae
xor
scas
test
std
test
int3
sbb
ror
out
in
(bad)
sub
sar
push
sbb
fs
cmp
mov
push
call
pop
lods
lahf
jp
mov
das
retf
repz
push
aad
imul
adc
jb
jp
sar
mov
jo
inc
ret
inc
adc
cld
addr16
std
cmp
les
(bad)
mov
imul
push
mov
hlt
cmp
movs
lods
push
sub
xchg
mov
out
jb
add
fst
das
jle
jl
inc
cmp
fwait
push
sti
icebp
sbb
push
sbb
js
pop
scas
icebp
call
retf
fwait
cmp
and
sub
push
mov
cmp
arpl
fbld
push
fadd
fld
mov
imul
adc
ins
sahf
mov
in
push
mov
mov
std
push
dec
inc
jns
(bad)
sbb
lea
clc
(bad)
cli
test
jp
imul
mov
lds
sub
outs
mov
push
xor
cmc
fwait
jo
or
in
popa
stc
stos
call
xchg
jbe
(bad)
push
jmp
jle
mov
popa
jp
push
or
sbb
xchg
dec
mov
(bad)
adc
gs
stc
rdmsr
stc
cld
jmp
daa
loopne
pop
imul
leave
test
aad
dec
or
mov
bound
(bad)
hlt
(bad)
gs
fadd
leave
mov
(bad)
in
outs
dec
lock
and
test
ror
leave
clc
cmp
add
pop
add
pop
test
ret
hlt
(bad)
mov
sbb
adc
push
sub
int
or
bound
jne
sub
push
test
arpl
retf
paddsb
dec
in
cwde
and
retf
loop
in
stc
leave
xchg
jecxz
(bad)
clc
repz
xchg
rcl
repnz
js
inc
pop
je
and
clc
jno
les
or
mov
call
add
iret
sti
and
jae
cmp
mov
enter
xlat
dec
adc
jge
mov
sub
mov
leave
push
jecxz
and
mov
xchg
lock
and
(bad)
enter
cmps
daa
fcmove
mov
retf
jp
push
test
pop
ret
jmp
pop
sbb
inc
jo
dec
out
inc
sbb
out
shl
xor
popa
mov
fstp
sub
mov
js
scas
and
stos
pop
sub
(bad)
stc
sbb
ret
ror
xor
ror
add
imul
adc
jmp
jae
inc
pop
iret
xor
cmp
cmc
sbb
enter
or
cmp
ins
push
ret
cmp
shl
sahf
or
add
retf
mov
call
and
lea
xchg
mov
hlt
dec
mov
pop
and
sub
loop
cmp
push
ds
xor
xchg
inc
jo
pop
push
je
(bad)
cmps
out
jp
mov
sub
outs
std
ins
dec
cmps
(bad)
ror
js
arpl
call
ror
rcr
sbb
popf
mov
sub
daa
mov
cmp
inc
cmp
call
push
lahf
gs
pop
add
imul
mov
(bad)
iret
out
movs
imul
fsub
test
inc
(bad)
mov
mov
sbb
(bad)
shl
test
mov
sub
xlat
and
jmp
mov
(bad)
jl
cmps
gs
xchg
push
fstp
mov
or
test
scas
xchg
aam
push
(bad)
inc
dec
pop
jg
or
inc
and
mov
sbb
sub
je
in
push
iret
cmc
imul
pop
adc
or
repz
movs
call
dec
outs
mov
sub
lahf
call
mov
sbb
leave
test
mov
and
inc
std
mov
inc
pop
sub
out
repnz
mov
mov
mov
(bad)
loop
mov
jmp
scas
sub
int3
mov
in
and
add
xchg
xor
dec
add
jmp
ss
xchg
mov
lods
jne
fiadd
push
dec
xlat
sbb
neg
push
cld
(bad)
fisub
lods
test
mov
jno
repnz
mov
fadd
les
cmp
push
lds
pop
test
loop
arpl
retf
test
cmc
das
mov
push
inc
aaa
pushf
scas
sbb
pop
aam
cmp
test
sub
xchg
test
sub
aam
pop
pop
ins
add
lods
cmp
in
(bad)
push
das
es
addr16
pop
jp
cli
lods
push
ror
mov
inc
pop
mov
inc
sbb
sbb
stc
fiadd
jp
xor
loopne
and
mov
dec
jns
push
xchg
out
push
sub
aaa
jg
out
sub
cmc
push
mov
retf
and
xchg
es
push
pop
(bad)
js
shl
sub
and
(bad)
mov
push
retf
cmp
retf
add
mov
div
mov
push
sub
and
push
or
push
push
jnp
push
rcr
sub
jecxz
rcl
addr16
int3
push
fcomp
push
pop
mov
or
jmp
jb
mov
fwait
xchg
mov
ja
loop
mov
jns
pop
mov
(bad)
jae
test
aas
sub
sar
call
fndisi(8087
outs
pop
xchg
pushf
inc
push
lods
or
popf
out
add
dec
sbb
shl
in
repz
mov
jl
stos
popf
cmp
xor
clc
(bad)
fisubr
xchg
cmp
adc
sub
dec
pop
bound
adc
pop
out
sub
(bad)
pop
add
xchg
cmp
fbld
adc
ret
(bad)
ror
mov
movs
inc
mov
enter
jmp
pop
hlt
in
adc
xchg
call
mov
push
shr
inc
rcr
pusha
add
inc
jns
inc
push
jnp
bound
out
add
cmp
pop
fisttp
ins
cmc
sbb
dec
mov
enter
sbb
std
and
sbb
fisub
mov
ficom
out
repnz
or
and
push
(bad)
in
test
sbb
das
outs
cwde
lock
cmps
inc
push
movs
xor
and
ja
jmp
or
xor
or
adc
imul
mov
xchg
icebp
jle
add
sub
out
fisttp
mov
xor
out
mov
das
push
inc
out
cmps
hlt
xchg
das
push
add
pop
(bad)
js
loope
mov
in
shl
nop
stc
(bad)
ss
loop
cmp
sbb
push
sub
lahf
push
adc
sub
xor
mov
push
and
xchg
inc
shl
adc
and
mov
jmp
imul
push
mov
mov
jg
pop
xchg
aaa
ret
lods
cmc
pop
ret
mov
popa
data16
inc
add
dec
push
retf
mov
cdq
or
sub
sti
mov
xor
fcmovnbe
int3
xchg
push
xor
pop
and
push
aas
(bad)
pop
jle
les
adc
add
push
ss
xchg
and
mov
daa
fild
fidiv
sub
movs
xlat
mov
nop
pop
daa
mov
inc
jl
or
xchg
fwait
popf
mov
test
jbe
jne
cli
sub
outs
pop
ror
idiv
mov
mov
fwait
out
add
call
enter
dec
or
jle
mov
inc
test
push
idiv
dec
fsub
jmp
int3
sbb
in
stos
loop
sbb
addr16
jmp
cdq
xor
mov
mov
(bad)
lods
cs
mov
int3
or
dec
fcomip
sub
push
push
push
xchg
jge
je
push
xchg
bound
lahf
jno
frstor
fstp
nop
ja
cld
aad
out
adc
push
sbb
shr
mov
mov
cli
rcl
xor
add
xchg
loop
cld
enter
(bad)
xor
lock
or
pop
mov
inc
mov
mov
aad
(bad)
test
ret
adc
test
pusha
jnp
ds
lods
fisub
inc
lahf
retf
out
rol
xchg
push
mov
sar
adc
dec
retf
fstp
xchg
call
mov
cmp
ja
or
adc
and
popa
sar
jg
imul
sub
icebp
mov
xor
or
sub
jge
mov
push
push
stc
ds
(bad)
adc
mov
dec
or
pop
cmp
cmps
dec
retf
jmp
xchg
mov
xor
out
retf
fdivr
mov
mov
lds
sub
(bad)
fcomp
scas
imul
xchg
inc
jmp
lods
leave
test
jl
jo
or
jmp
inc
push
repnz
jl
xchg
sbb
stos
dec
pop
push
rol
loop
push
adc
repz
aas
lods
jl
aam
mov
ret
mov
sub
loope
out
movs
add
push
push
add
mov
push
and
bound
ins
xchg
mov
or
mov
ret
add
push
outs
cmc
xor
int
sub
add
or
cli
stc
inc
shl
out
fist
or
mov
xor
arpl
cli
push
push
loope
pop
int3
int3
bound
stos
lea
cmp
dec
dec
mov
pop
cmp
fcom
stos
jno
out
push
pop
jmp
xchg
cmp
sbb
hlt
gs
test
retf
jnp
sahf
xor
test
scas
xchg
pop
pop
ss
jg
cli
inc
jo
or
inc
mov
sbb
xor
mov
jecxz
and
mov
mov
mov
das
push
adc
stos
jmp
arpl
push
cmp
ret
jge
repz
ja
jnp
cmp
jl
mov
and
not
cmp
sbb
(bad)
popf
fisubr
jge
ficom
cld
mov
jge
xchg
push
jno
inc
nop
fsincos
adc
lds
sub
popf
into
mov
(bad)
iret
inc
sbb
ds
pushf
ds
pop
mov
dec
test
add
iret
retf
push
sub
mov
xor
lea
push
out
adc
scas
and
aas
and
inc
mov
jb
fidiv
jbe
ds
ins
loope
lea
ret
pop
test
jnp
iret
jns
nop
outs
jmp
imul
retf
pop
jno
fdivr
jecxz
enter
out
jg
arpl
out
push
add
mov
outs
and
xor
call
jb
mov
add
xor
aaa
and
and
outs
icebp
lea
out
fstp
imul
shl
pop
fnstsw
push
sti
dec
add
push
push
mov
inc
in
mov
mov
pop
push
test
test
sub
scas
sbb
and
addr16
jmp
add
cs
sbb
xlat
jge
mov
sti
jbe
repz
shr
push
hlt
cdq
dec
aaa
mov
sub
sbb
push
mov
sub
loop
xchg
jle
sub
add
das
mov
scas
outs
test
repz
call
adc
sbb
les
mov
jo
push
push
xor
(bad)
sub
shl
aam
scas
loopne
pushf
(bad)
xchg
xchg
aas
pop
retf
sub
jecxz
addr16
xchg
les
pop
dec
add
imul
loopne
sbb
add
xor
xor
or
jne
call
and
or
mov
mov
jo
pop
xchg
das
push
add
add
addr16
ins
(bad)
sahf
aad
pop
popa
fs
ja
inc
jae
fld
jmp
inc
mov
adc
pushf
inc
add
push
lahf
inc
daa
(bad)
stc
pop
xchg
cli
test
jno
pushf
or
and
out
and
ss
jmp
xor
shr
jnp
jmp
imul
push
xor
xor
test
push
movs
popf
xor
mov
out
or
repz
idiv
lock
dec
mov
inc
and
cdq
push
lds
(bad)
jae
cmps
js
xchg
push
js
(bad)
scas
mov
xchg
fwait
cmp
shl
pop
mov
jg
xchg
movs
mov
test
loope
lods
js
push
adc
call
and
pop
xor
add
lea
inc
xchg
mov
push
lock
sub
repz
dec
mov
xchg
popa
sub
mov
cmp
shl
mov
jne
imul
add
sbb
loop
adc
or
in
loopne
add
es
mov
popf
sti
loopne
push
add
repz
sub
in
daa
je
clc
push
cmp
call
sub
mov
or
fwait
cmp
outs
mov
pop
cmp
in
mov
or
add
mov
push
pusha
fs
push
lods
rol
in
outs
inc
push
int
or
test
adc
addr16
fwait
add
and
mov
adc
fst
xor
mov
mov
(bad)
bnd
ins
xor
xchg
push
aam
es
gs
es
pop
mov
jmp
mov
fcom
jmp
(bad)
retf
mov
(bad)
inc
test
cmp
cmp
cmp
or
and
stos
xchg
jb
out
aaa
mov
jmp
aas
and
mov
retf
fwait
addr16
adc
pop
(bad)
out
ret
cmp
jge
and
sub
xchg
sbb
and
xchg
adc
jo
call
fadd
int
mov
popf
retf
inc
push
fsubrp
and
and
pop
pop
out
cs
retf
xor
sub
call
push
retf
loope
stos
add
aad
sub
inc
int
add
call
out
lea
adc
jns
not
cdq
mov
punpcklwd
and
(bad)
nop
add
adc
jp
push
pusha
imul
dec
in
xchg
dec
or
aaa
les
(bad)
xchg
cld
jle
add
push
dec
div
ret
push
xchg
cs
aam
pop
(bad)
lock
push
push
imul
ror
in
(bad)
inc
push
in
mov
inc
sbb
retf
xor
dec
sbb
and
mul
retf
movs
movs
push
jmp
sub
and
or
iret
les
adc
outs
jno
and
adc
fdivr
mov
cmp
inc
and
mov
sahf
and
ins
lods
and
sub
pop
scas
pop
push
pop
xchg
test
mov
and
mov
pop
push
dec
(bad)
lea
repz
sbb
cld
imul
fcomp
rcr
repnz
push
into
mov
or
add
mov
jmp
jo
jnp
cs
test
pop
push
and
in
scas
cld
fldcw
sub
adc
xchg
inc
pop
and
push
xor
push
mov
fimul
fld
stos
pushf
sbb
xlat
pop
sub
shufps
inc
jp
inc
cld
retf
xchg
retf
outs
dec
xchg
push
dec
xor
sahf
mov
sbb
in
lods
dec
adc
in
inc
mov
aaa
jecxz
imul
mov
fisub
push
sar
xchg
hlt
sbb
push
mov
(bad)
push
mov
in
xor
pop
dec
sub
pop
fadd
pushf
xor
out
or
add
cmps
ret
nop
pop
fiadd
adc
push
xchg
push
(bad)
push
and
sub
mov
mov
mov
push
cmp
daa
xor
scas
sbb
jnp
cmps
mov
jg
xchg
mov
lods
fdivr
xchg
sbb
adc
sub
fnstcw
in
fstp
adc
sub
sti
fiadd
add
jns
popf
int
dec
cmp
stos
inc
mov
mov
or
push
lods
bound
sbb
retf
or
and
das
dec
sub
inc
dec
retf
or
sar
daa
cmp
je
(bad)
cmp
es
out
adc
ror
jno
dec
sub
adc
mov
jbe
xlat
dec
fwait
arpl
mov
adc
jns
adc
into
jno
mov
dec
stos
aas
lock
push
and
dec
clc
adc
sahf
in
sub
sbb
jg
sub
cdq
or
xchg
xchg
add
pushf
xor
scas
aam
jmp
jmp
cwde
fnstcw
jae
cmp
les
sub
pusha
sub
mov
push
sub
lods
and
adc
pop
dec
imul
push
adc
push
and
mov
retf
out
mov
xor
std
pop
pop
push
sbb
cmps
call
adc
push
xchg
dec
movs
dec
cdq
and
push
xor
mov
test
jno
adc
cmp
jnp
in
or
adc
mov
sbb
stos
je
adc
mov
jnp
mov
(bad)
pusha
mov
mov
sbb
or
and
mov
pop
shr
out
daa
enter
in
xor
add
and
sbb
jl
(bad)
fwait
loop
imul
cmps
adc
xchg
xchg
jl
movs
or
ret
jbe
xchg
mov
mov
mov
cmp
in
add
leave
enter
dec
cmp
jnp
pop
cmp
mov
lods
sbb
add
or
inc
imul
pop
dec
add
call
int
loope
sar
mov
push
fucomi
stos
aad
(bad)
fadd
mov
out
mov
sbb
xor
(bad)
shr
cmp
push
daa
mov
xor
cmps
fcom
xor
and
mov
gs
push
cli
call
jae
or
xor
jns
inc
xchg
aas
or
dec
cmp
ins
pushf
dec
sar
fxch
stos
mov
xor
loop
call
pop
xchg
(bad)
sbb
jmp
pop
pop
iret
or
mov
int3
adc
cmp
fwait
push
sbb
and
popf
xlat
arpl
(bad)
lods
xor
inc
add
aas
enter
or
pop
(bad)
jne
out
cmp
sub
dec
ins
repz
and
movs
jl
ja
or
mov
lds
jnp
icebp
jmp
jo
sbb
dec
loope
jne
out
daa
fwait
pop
shl
dec
dec
mov
or
jecxz
in
sahf
inc
push
sbb
pop
adc
dec
fwait
loope
leave
add
test
mov
push
outs
inc
aad
imul
shl
shl
pop
les
mov
stc
adc
pushf
ss
and
int3
imul
jo
test
and
pusha
mov
sbb
push
mov
xchg
inc
mov
add
retf
mov
inc
not
pop
imul
mov
and
jbe
sub
(bad)
retf
(bad)
stos
rcl
mov
loope
mov
shl
cwde
add
test
push
cmp
cmps
xchg
lds
in
jge
inc
and
add
call
jmp
jno
data16
cmc
inc
scas
jae
in
cs
inc
jecxz
dec
push
clc
xchg
add
sub
or
jbe
sub
daa
retf
adc
push
in
adc
outs
inc
imul
sub
jne
sub
retf
jle
push
pop
js
lahf
mov
dec
xchg
repz
push
inc
inc
outs
mov
dec
(bad)
call
mov
aad
test
jl
mov
add
cdq
ja
xchg
in
lods
xor
sbb
pop
call
push
and
mov
xor
mov
loopne
sub
iret
(bad)
or
loopne
loope
daa
add
add
fiadd
sub
mov
or
in
outs
loopne
xchg
sub
mov
sub
aas
and
les
dec
or
xor
or
add
push
mov
aad
dec
fwait
cli
lock
test
pop
jne
push
mov
mov
mov
inc
push
rcr
inc
shr
xchg
pop
xor
ja
cmc
ins
gs
dec
mov
push
into
dec
ss
jo
inc
bound
ret
push
mov
xor
mov
mov
add
cmc
pop
dec
popa
out
popa
mov
ret
shl
sbb
sar
jne
rcl
enter
mov
shr
xlat
test
js
mov
xor
ins
aam
mov
pop
leave
cmps
(bad)
jne
push
leave
les
xchg
cli
mov
sbb
in
jmp
jmp
inc
or
mov
cli
pushf
adc
pop
push
pop
xchg
pop
mov
push
pop
xor
xor
ja
sbb
pop
repnz
stos
mov
add
push
mov
test
rol
mov
jno
sbb
out
jp
and
or
inc
and
mov
pop
loop
fwait
and
rcl
or
fld
push
test
movs
jg
inc
movs
adc
mov
add
and
push
fcomip
ss
neg
aad
inc
dec
(bad)
lods
jo
mov
nop
mov
repnz
add
push
sahf
or
test
pop
sbb
add
jb
xlat
jmp
pop
xor
push
aaa
inc
loope
mov
(bad)
jmp
cmc
repz
adc
jmp
cmp
push
xchg
jnp
sahf
or
push
dec
xor
(bad)
and
movs
dec
in
ror
daa
lods
arpl
not
inc
in
jns
retf
mov
(bad)
fild
xchg
pop
sbb
test
cwde
and
dec
loop
sbb
or
add
fwait
jbe
leave
cmps
fucomp
fbstp
fimul
push
jno
adc
pop
mov
sar
rol
(bad)
movs
(bad)
dec
jge
and
xor
iret
test
and
clc
(bad)
out
xor
popa
or
les
dec
adc
xor
inc
pushf
loope
jmp
dec
sub
cmp
xchg
adc
push
mov
das
and
and
jl
cmp
mov
je
push
xchg
scas
je
ret
mov
(bad)
iret
mov
test
test
cmp
xchg
mov
dec
or
sbb
or
xchg
sbb
xor
gs
jae
push
sbb
and
lock
cmp
push
add
sbb
mov
mov
mov
into
jecxz
data16
(bad)
sub
jns
mov
mov
retf
dec
xor
and
push
xchg
sub
jmp
sbb
sub
push
mov
out
lods
mov
es
xchg
cld
pop
loopne
dec
and
stc
xor
push
jge
push
xchg
cmp
jg
pop
xlat
push
enter
mov
cld
push
sub
ror
scas
mov
aas
stos
leave
jns
jle
push
mov
add
jns
push
test
inc
enter
(bad)
cmp
xor
mov
sub
cmp
mov
shl
adc
mov
cmp
rcr
xor
xor
adc
shr
mov
mov
jmp
mov
mov
pushf
mov
push
jo
(bad)
lahf
add
jno
xchg
cmc
retf
addr16
lock
ret
fidivr
mov
xlat
nop
rcr
push
xchg
call
jg
pusha
int3
and
rcr
mov
pop
jnp
gs
mov
cmp
inc
mov
mov
stc
sbb
mov
sbb
fisttp
and
jns
shr
outs
nop
xor
retf
and
push
sub
and
(bad)
jmp
inc
(bad)
add
and
shl
mov
jl
out
mov
into
int
fwait
lea
mov
mov
in
stos
shl
out
push
imul
imul
lods
test
ja
into
xlat
jmp
xchg
dec
mov
xchg
mul
cmc
cdq
mov
cmps
stos
and
xor
loopne
push
mov
mov
pop
call
inc
fimul
sub
pop
pop
imul
mov
mov
push
pop
jo
adc
cmp
pop
jnp
cld
scas
(bad)
jnp
dec
cwde
popa
rol
(bad)
repnz
push
lods
nop
ins
adc
imul
push
jmp
cmp
xchg
xor
sti
mov
sbb
inc
cmc
cli
(bad)
ret
push
arpl
mov
stc
pushf
jecxz
inc
and
pop
repz
std
es
cdq
cmp
out
dec
shl
mov
inc
fild
(bad)
push
cwde
or
test
inc
mov
mov
(bad)
jg
les
pop
push
lods
ds
fs
lea
adc
cmp
aad
repz
popf
in
ja
fadd
cmp
xchg
out
jnp
retf
scas
jl
inc
dec
call
pop
out
adc
lea
mov
cmp
stos
cmp
jecxz
add
add
mov
push
int
mov
std
lds
loop
xchg
jl
cs
pop
clc
shr
frstor
rcl
mov
pop
bound
(bad)
lds
(bad)
fcom
adc
int3
mov
xchg
inc
fistp
into
stc
ss
mov
and
mov
and
int3
cmp
jp
and
inc
sbb
je
and
lahf
scas
push
aam
fdiv
push
and
(bad)
pop
push
pop
cmp
adc
out
ret
sub
in
inc
sub
dec
cmp
pop
into
cli
jbe
jmp
daa
cmp
js
xor
cmps
mov
test
dec
loop
adc
or
js
add
cwde
test
add
(bad)
nop
jns
pop
pop
fidiv
call
mov
jmp
mov
stc
sbb
movs
stos
into
sti
sub
jmp
mov
cli
push
dec
or
sbb
jo
fmul
fs
data16
mov
push
hlt
xchg
mov
push
sbb
jno
pop
sbb
les
mov
xor
and
imul
into
call
not
jns
mov
ret
push
jmp
cmp
xor
xor
pop
imul
aam
mov
popf
adc
data16
adc
jnp
inc
sti
cmp
mov
pop
data16
dec
lods
fwait
shl
xor
mov
jo
aas
xchg
add
mov
jge
mov
out
loopne
sbb
lods
rcr
add
loop
mov
je
mov
push
test
scas
scas
shl
jmp
sub
leave
ja
mov
and
add
popaw
jno
push
mov
dec
leave
push
cmc
fwait
movs
add
cwde
in
adc
cwde
addr16
into
pop
cmc
ror
xor
lods
and
clc
cld
lock
mov
pop
pop
cmps
lods
ret
pop
jb
int3
push
lods
es
pop
not
rcl
xchg
dec
sub
cmp
dec
push
inc
xchg
mov
mov
push
cmp
rcr
lods
mov
xchg
xchg
fidivr
ret
scas
stc
mov
test
sub
ins
js
lods
jmp
push
and
lods
inc
sbb
fs
and
rcl
xor
inc
jp
stc
cmp
dec
cmp
in
and
jg
pop
pop
push
mov
pop
sbb
loope
push
dec
cmps
fsubr
xchg
pop
cwde
mov
mov
sqrtps
sbb
or
test
cmp
out
mov
cmp
jmp
cmps
adc
and
dec
adc
mov
push
xchg
sbb
(bad)
je
xchg
imul
sbb
dec
xor
push
ins
xchg
mov
hlt
pop
outs
(bad)
cdq
xor
pusha
mov
ins
mov
mov
and
les
test
mov
dec
(bad)
ror
lds
inc
xchg
cmc
pushf
into
xlat
adc
mov
lahf
cmp
outs
pushf
into
js
repz
hlt
stc
mov
popa
imul
inc
and
add
cmp
push
es
pop
and
in
jle
cmps
arpl
jl
and
cmp
mov
mov
mov
pop
sbb
cmp
and
pop
jp
(bad)
sub
pop
mov
add
mov
inc
fwait
jp
dec
js
shl
test
sbb
adc
cmp
out
ins
mov
push
bnd
ins
mov
push
pushf
popa
dec
mov
sbb
add
shl
adc
ror
std
cld
mov
jae
ss
cdq
cmp
push
or
retf
mov
mov
adc
push
mov
sbb
dec
xchg
addr16
push
jno
rcl
mov
xor
mov
jmp
jne
je
or
f2xm1
ss
das
pop
xlat
cmp
sub
mov
mov
sub
daa
int3
lods
sub
stos
jp
and
stc
stc
pop
xor
lods
push
jecxz
mov
mov
mov
add
into
popa
aas
test
movs
xor
cmp
pop
mov
je
inc
in
jae
add
pop
retf
popa
mov
sub
cs
fs
pop
and
and
cmp
cdq
mov
jp
xor
mov
mov
adc
out
loopne
jl
mov
add
aaa
xlat
cwde
inc
test
in
int
jo
andps
aad
loope
ds
fwait
push
scas
adc
test
add
ror
sbb
cmps
or
fstp
xchg
gs
push
fucom
cli
adc
hlt
imul
aad
mov
out
mov
inc
push
aas
lahf
jmp
aam
sub
mov
xchg
adc
push
mov
or
clc
cmp
ja
aam
push
(bad)
adc
out
lea
and
fdivr
mov
repz
cmc
cmp
sub
int3
sub
add
xor
mov
cmps
test
out
mov
mov
imul
inc
(bad)
repnz
pop
(bad)
jg
in
jo
ja
(bad)
jae
int
mov
bound
pop
jns
out
ins
cmp
aaa
loop
pop
leave
movs
or
fld
inc
ins
stc
or
push
inc
lea
xor
jge
push
lahf
dec
pop
dec
cmps
xchg
arpl
rol
jb
adc
cs
pushf
cmp
inc
push
pop
sbb
xchg
sar
das
in
dec
or
dec
push
mov
push
retf
inc
xor
shl
sub
cmp
enter
pop
arpl
lahf
jbe
sbb
out
adc
jg
inc
mov
jg
xchg
or
cmps
clc
push
mov
sbb
jl
mov
add
mov
cmp
(bad)
in
push
(bad)
mov
mov
repnz
xchg
sbb
test
ret
mov
das
int
mov
xchg
or
mov
jns
scas
(bad)
ins
xchg
aaa
push
and
aam
sbb
test
das
lock
outs
hlt
push
push
stos
sti
add
stos
cmps
adc
xor
ja
and
xchg
mov
aas
adc
in
jno
repz
sub
jg
arpl
inc
add
adc
push
retf
sbb
and
movs
jnp
sub
mov
mov
aad
sub
jmp
jae
and
ds
ds
sbb
mov
sbb
pop
inc
test
jno
inc
iret
gs
cmps
xchg
imul
mov
lods
aam
(bad)
cld
lock
or
fwait
and
jnp
or
ds
mov
div
and
ds
ins
bswap
mov
repz
imul
mov
loop
shl
dec
xchg
ret
jmp
xor
scas
(bad)
jo
aam
mov
lods
test
push
xor
stos
int3
inc
(bad)
dec
jb
pop
or
fbld
test
jp
(bad)
in
ror
jle
vpunpckhdq
in
cld
js
mov
cli
lods
mov
mov
mov
stos
pusha
addr16
aam
fsub
dec
cld
xchg
sbb
shl
mov
xor
jmp
pop
ins
sti
sub
pop
movs
jle
repz
dec
lds
mov
sbb
mov
out
iret
repnz
jmp
lods
hlt
(bad)
jecxz
test
push
sbb
mov
fisub
lods
jo
ficom
or
push
xor
pop
mov
arpl
mov
fild
into
jae
mov
out
and
jmp
mov
lds
and
mov
enter
jle
pop
mov
push
cmp
cmp
mov
jmp
jmp
jno
push
enter
jmp
stos
stos
ins
mov
rcl
imul
xor
sbb
inc
mov
push
popf
aad
sbb
movs
stos
lock
pusha
add
nop
iret
xchg
sti
push
pop
(bad)
stos
xlat
fld
xchg
jmp
(bad)
je
aam
pop
imul
or
call
mov
inc
shl
retf
add
push
inc
inc
cmp
jae
lock
rcl
lea
pop
into
loopne
push
pop
jecxz
fsubrp
push
ds
dec
lock
dec
xchg
push
cmp
inc
xchg
xor
bound
add
or
pusha
repz
sbb
retf
xor
inc
adc
lock
inc
xchg
cmp
push
or
pusha
inc
sbb
cmc
push
mov
sti
cmc
inc
pop
test
test
aam
sbb
jecxz
pop
push
push
jp
jmp
in
dec
pop
cli
gs
das
popf
stc
push
jp
cmp
not
das
je
or
cmp
and
cmc
cmc
push
sub
sub
mov
fdiv
loope
add
daa
retf
rcr
std
pop
adc
bound
call
add
loope
inc
test
fninit
and
fnsave
adc
mov
stc
(bad)
sub
jb
or
cdq
rcl
jmp
aad
mov
fsubr
repz
jmp
hlt
xor
movs
pop
jae
fadd
mov
mov
mov
dec
fdiv
or
lahf
(bad)
pop
and
jl
mov
push
dec
or
dec
inc
sar
push
push
or
mul
jp
push
pop
xor
pusha
pop
test
(bad)
push
imul
push
(bad)
mov
or
stos
loopne
and
js
sbb
jne
mov
rol
mov
add
mov
xor
cdq
rol
jns
adc
jae
mov
pop
ja
push
int3
mov
xor
or
add
sub
add
xor
adc
mov
retf
aas
mov
call
mov
popf
out
or
mov
ja
lock
xor
gs
push
pop
dec
ror
pop
cmp
pop
retf
(bad)
pop
(bad)
mov
ss
dec
int
pusha
ins
inc
imul
xchg
jns
loop
ja
pop
cmp
mov
cmp
cld
cmp
fist
cld
inc
push
fst
adc
addr16
(bad)
in
xchg
data16
shl
mov
push
jne
xlat
cmps
cwde
add
dec
mov
stos
das
mov
stos
push
inc
repnz
retf
gs
and
pop
mov
or
pop
mov
in
(bad)
cmp
cmc
push
mov
mov
sar
loope
scas
icebp
mov
nop
mov
gs
popw
push
sub
ror
add
mov
mov
ror
fcmovnb
add
pop
sub
mov
or
sbb
lea
xlat
pop
in
pop
fild
mov
pop
sar
js
xchg
scas
cmps
and
scas
push
(bad)
pusha
sub
rcr
scas
or
add
(bad)
cmc
(bad)
inc
ss
ror
inc
inc
adc
sub
pushf
pop
call
jecxz
mov
scas
(bad)
jmp
inc
pusha
loopne
neg
(bad)
mov
xchg
imul
setle
push
and
xor
(bad)
repnz
cmps
xchg
inc
jnp
mov
inc
cmp
jbe
test
sbb
push
dec
xor
jae
cli
push
sbb
out
push
cld
sbb
pop
inc
dec
sbb
test
in
and
mov
jno
cmp
jne
jns
arpl
ret
jecxz
sbb
addr16
adc
push
dec
sbb
loope
mov
mov
jp
ret
adc
ds
jnp
fdiv
xor
inc
cwde
mov
(bad)
pop
ins
lock
sub
mov
arpl
jg
js
pusha
mov
dec
lods
xchg
loopne
push
retf
sbb
dec
or
(bad)
loope
and
daa
loope
cs
pop
cmps
xlat
push
sub
jl
adc
sub
pop
xor
call
mov
add
jo
fs
cmps
scas
cs
xor
mov
addr16
sbb
sbb
xor
inc
xchg
xchg
(bad)
std
(bad)
dec
mov
xchg
xchg
xchg
rol
xor
xor
pop
fidiv
das
out
sahf
je
push
das
pop
(bad)
sub
dec
rol
xchg
or
neg
pop
mov
mov
sti
mov
inc
mov
mov
shl
cmps
rcr
push
repnz
daa
aad
mov
(bad)
cld
es
movs
out
outs
pop
mov
nop
mov
cmp
test
sbb
shl
mov
popf
jmp
int
sbb
stc
loop
(bad)
jno
or
bound
pop
dec
jns
cs
cld
in
das
mov
or
push
dec
sub
ss
add
dec
or
dec
cld
or
jmp
pop
lods
mov
imul
jno
or
dec
jp
jp
jnp
pushf
sbb
aad
fwait
jmp
fist
cwde
ss
mov
(bad)
hlt
push
test
add
ins
or
loope
push
ret
add
hlt
stos
gs
jecxz
sub
and
pop
inc
loopne
pushf
addr16
mov
dec
or
xchg
mov
and
mov
sbb
loope
pop
mov
sbb
mov
push
mov
inc
int
xchg
push
aaa
and
xchg
ja
call
(bad)
mov
sbb
and
mov
test
scas
out
xchg
out
std
xchg
jp
hlt
xchg
jge
fadd
or
sub
add
cmp
mov
aas
dec
retf
inc
enter
mov
popa
imul
sbb
sbb
add
add
pop
jmp
imul
scas
nop
mov
lods
mov
rol
mov
pop
mov
cwde
out
add
jae
mov
scas
das
(bad)
pop
fistp
xchg
and
dec
mov
test
mov
sbb
icebp
lea
xor
pop
and
loopne
daa
or
mov
jno
adc
xchg
lods
push
mov
sub
mov
test
repz
int3
into
xor
mov
sbb
dec
cmp
xchg
and
inc
sahf
add
mov
add
xchg
paddw
jge
push
sub
test
push
push
into
mov
cmp
pop
(bad)
or
or
jmp
or
in
dec
push
sbb
retf
sub
mov
xchg
or
scas
xlat
jge
hlt
mov
xor
mov
xchg
jp
out
or
sahf
and
mov
or
or
out
adc
pop
inc
(bad)
mov
gs
dec
movs
mov
lahf
aad
add
sti
or
xchg
mov
fs
sub
pop
mov
mov
fistp
dec
mov
dec
or
retf
dec
xor
leave
or
in
(bad)
scas
dec
inc
les
or
mov
test
push
inc
dec
jg
mov
jbe
dec
sbb
dec
adc
sbb
push
cmp
push
jg
cld
add
out
sbb
cmp
dec
cmp
xlat
lock
popf
hlt
sub
xchg
jle
jo
cmc
daa
in
retf
push
inc
aas
or
dec
mov
hlt
sbb
cmps
mov
and
(bad)
xchg
mov
fs
outs
outs
jp
stos
mov
or
xchg
nop
adc
or
pusha
add
sub
ret
push
test
push
daa
jno
cmp
mov
popf
pop
or
cs
cmps
sub
mov
xchg
nop
jecxz
fwait
das
inc
aaa
outs
adc
fdiv
cmp
xchg
fist
push
in
inc
mov
push
bound
loopne
add
ds
retf
cmps
pop
fldenv
jp
js
(bad)
xor
cmp
(bad)
inc
adc
mov
movs
cmp
cmp
pusha
mov
push
sar
dec
out
(bad)
repnz
inc
dec
sub
cs
jnp
adc
inc
xchg
es
xor
enter
adc
xchg
(bad)
push
into
sub
xchg
stos
pop
loopne
jmp
inc
or
jle
data16
inc
jnp
(bad)
cld
mov
pop
adc
std
cmc
out
sub
call
ins
jnp
ja
cmp
call
adc
ss
imul
int
clc
or
push
push
pop
into
lea
sbb
test
add
sbb
call
mov
push
movs
jb
mov
push
jmp
cs
pop
lock
sub
xor
ins
les
jnp
rcl
aam
es
push
mov
pop
jl
ins
dec
out
shl
dec
cmp
mul
call
push
imul
hlt
ja
hlt
inc
loope
movs
pop
out
pop
cli
enter
xlat
fidiv
sbb
dec
jmp
mov
jmp
mov
inc
loop
movs
sub
cmps
and
mov
test
int3
cld
mov
xchg
std
xchg
inc
mov
ins
lods
sar
cwde
repz
out
test
or
cmps
setbe
sub
mov
in
(bad)
mov
xlat
add
cmp
scas
ss
sar
pop
shl
or
and
test
push
dec
call
in
jge
dec
mov
xchg
jnp
xor
xchg
push
or
and
pop
fs
neg
cld
pop
mov
add
sbb
sub
push
stc
inc
mov
scas
(bad)
in
std
jns
add
cmps
stos
xchg
loope
xor
aad
fucomi
cs
outs
lahf
popf
shr
or
push
std
push
dec
pop
push
int3
xor
xlat
jne
fldenv
ds
ss
ret
push
xchg
int
push
dec
push
dec
movs
mov
sub
pushf
xchg
adc
adc
mov
inc
or
xchg
push
add
cmps
scas
aad
sbb
dec
jl
cmc
mov
inc
mov
push
pop
jnp
stos
pop
call
push
shl
loop
inc
iret
jge
sbb
or
scas
repz
sub
mov
push
scas
pop
sub
add
adc
push
test
dec
je
rcl
adc
xor
ret
sbb
out
mov
cmp
pop
and
jmp
pop
aad
arpl
mov
lds
and
aad
jo
(bad)
mov
mov
jmp
and
add
add
pop
xchg
ror
in
cmp
outs
cld
out
das
pop
sbb
ds
scas
and
movs
mov
movs
push
repnz
lods
and
and
mov
pop
push
xchg
fstp
xchg
retf
data16
(bad)
addr16
fldenv
mov
repz
test
mov
mul
add
push
dec
adc
xlat
xchg
mov
jecxz
pusha
xchg
mov
daa
shr
les
adc
fisttp
js
fmul
adc
xor
call
add
mov
mov
mov
push
hlt
int
sub
inc
fcmovnu
jp
sar
neg
hlt
nop
and
cmc
popa
pop
nop
mov
mov
aaa
das
ret
or
stos
add
lea
ror
and
xor
sahf
xor
xchg
sub
jbe
aam
mov
xlat
sub
out
dec
loop
cld
retf
rol
bnd
icebp
adc
and
cli
add
xchg
dec
adc
push
adc
call
add
cld
adc
loope
jb
aaa
sbb
cdq
push
stc
fwait
out
mov
pop
jns
pop
leave
sbb
xchg
inc
or
push
lods
add
mov
or
pop
scas
push
inc
fisub
test
inc
cmps
jmp
retf
mov
push
pop
jmp
cmp
ins
mov
jg
into
ret
popf
inc
scas
cmp
cmc
inc
adc
dec
jecxz
cmp
out
leave
rcl
mov
fdivr
or
enter
sbb
xor
pop
int3
push
fisub
sbb
test
mov
xchg
test
cmp
xor
leave
sbb
cld
pop
movs
les
inc
cmp
add
and
push
xchg
rcl
in
dec
test
push
adc
xchg
ja
xchg
adc
out
(bad)
ds
jne
xor
movs
cdq
xor
ror
mov
imul
lock
cmps
es
loopne
mov
lahf
movs
ins
lds
out
inc
mov
dec
mov
test
hlt
outs
jmp
movs
jmp
mov
les
retf
les
xor
loope
movs
inc
cld
movs
xchg
cld
test
mov
out
cld
inc
sbb
sbb
das
icebp
int
sub
cwde
outs
ror
fldenv
ins
and
adc
iret
mov
call
mov
mov
addr16
mov
popf
adc
lock
mov
or
mov
gs
jbe
push
push
or
mov
cwde
test
loopne
dec
dec
addr16
cmc
ss
mov
rol
jmp
idiv
in
cli
(bad)
(bad)
out
outs
xchg
sahf
mov
retf
push
or
dec
or
push
mov
test
lea
push
mov
or
iret
popa
jb
leave
sub
sub
cmp
push
lea
fst
stos
adc
enter
int3
out
call
daa
mov
lods
push
mov
loope
adc
in
adc
jp
mov
push
inc
inc
out
movs
jecxz
fs
sub
jns
aad
cwde
lahf
daa
jo
enter
fcomi
pop
je
aaa
cmp
cmps
jno
sbb
out
sub
inc
out
sub
jp
mov
es
psubusb
mov
mov
add
mov
iret
faddp
cmp
cmp
shl
inc
add
stos
(bad)
mov
mov
je
and
add
stos
inc
in
lea
adc
push
fistp
cli
cld
dec
(bad)
js
pop
jnp
or
push
lds
push
mov
push
or
add
and
pop
scas
hlt
mov
adc
xor
xlat
sub
mov
adc
ss
out
loop
jmp
jmp
std
inc
scas
sbb
hlt
and
mov
outs
scas
add
cmp
jmp
push
addr16
call
lods
test
pop
dec
inc
cmp
call
jecxz
movs
adc
bound
mov
or
loopne
mov
hlt
mov
cmp
cld
popa
jns
cmp
jmp
aaa
pushf
mov
xchg
cmp
pop
xchg
iret
inc
jp
jnp
sbb
movs
adc
std
not
into
or
jb
out
cmp
dec
mov
pop
ret
lock
je
les
cmp
push
outs
inc
xchg
jge
fdivr
pop
shr
mov
dec
call
in
mov
test
sahf
dec
jmp
jnp
in
ds
mov
sbb
sub
jae
inc
or
pop
data16
inc
ret
push
aaa
pop
jl
lock
jns
add
(bad)
sbb
fld
sub
jns
inc
add
sbb
push
(bad)
jp
clc
fiadd
and
add
jmp
mov
and
es
pop
jns
xchg
add
imul
test
dec
xchg
int3
sbb
sbb
adc
inc
(bad)
sub
mov
outs
dec
mov
fs
into
cli
or
push
repz
sub
or
cmp
stos
or
push
pop
pop
in
lods
lahf
mov
inc
out
fldpi
inc
mov
adc
test
or
test
idiv
xchg
cli
or
xor
pop
sub
add
icebp
out
out
pushf
push
sub
and
in
arpl
sub
and
and
xchg
sbb
cmp
xchg
scas
mov
xchg
imul
jg
sbb
das
adc
fisub
fsub
cdq
dec
movs
call
jecxz
sbb
fnstsw
add
adc
je
fdivr
jmp
cmc
es
jmp
dec
loope
pop
pop
xchg
inc
and
xchg
test
push
cdq
mov
lock
add
nop
outs
sbb
cli
out
push
cwde
or
and
xchg
scas
rcl
sar
daa
gs
sub
sub
or
pop
jle
sub
and
push
loopne
das
jle
add
xor
cmp
leave
dec
(bad)
jmp
inc
comiss
and
enter
xchg
push
lds
out
jge
jmp
fwait
inc
je
sbb
mov
jmp
cmc
arpl
dec
mov
push
xchg
std
aad
push
cli
fmul
movs
aam
jmp
in
sub
hlt
dec
fsub
add
mov
test
fdivr
gs
(bad)
int3
jnp
int
std
inc
ins
rcl
movs
xor
mov
sub
mov
sub
xchg
stos
cmp
std
cmc
mov
aaa
add
imul
jbe
push
mov
daa
sahf
xchg
iret
popa
and
imul
and
cmp
cmp
mov
inc
and
aad
pop
leave
(bad)
dec
xchg
retf
popf
mov
js
mov
push
popf
add
add
adc
xchg
ja
cmps
movs
out
loop
mov
adc
or
inc
pop
jne
mov
bound
jmp
mov
icebp
push
jne
cmp
sub
ins
xor
xor
ret
lock
jp
pushf
imul
(bad)
outs
outs
mov
mov
pop
add
add
(bad)
rcr
push
pop
mov
lods
jmp
and
fidivr
test
imul
mov
dec
inc
cmp
shr
ret
loopne
ins
addr16
push
arpl
xchg
inc
out
(bad)
les
jecxz
pushf
adc
add
inc
dec
scas
jge
je
daa
push
mov
lods
ds
gs
adc
call
les
mov
xchg
mov
lahf
pop
fcom
sbb
sub
ins
nop
jbe
mov
adc
mov
dec
das
mov
jo
mov
lock
or
imul
mov
dec
sti
cmp
sbb
inc
and
loop
mov
cdq
lods
jmp
leave
add
push
jae
rcr
cmc
jle
cmp
jmp
jnp
dec
ds
stc
pop
jb
jmp
inc
mov
adc
mov
mov
addr16
xchg
not
mov
sahf
push
(bad)
and
imul
nop
outs
lahf
push
mov
fidiv
mov
pushf
add
ins
jne
and
mov
dec
test
lods
add
mov
fild
jg
adc
in
pop
es
retf
bound
loop
aad
dec
stos
inc
aaa
jl
sbb
pop
clc
scas
xchg
(bad)
fstp
std
jge
std
fdivr
or
inc
lahf
nop
fsub
sti
test
adc
(bad)
arpl
xor
push
jmp
stos
jae
push
push
mov
xchg
popa
push
out
cmp
outs
ror
and
sbb
cmp
ds
jmp
push
and
adc
pop
jecxz
mov
mov
xor
jg
push
add
jae
jnp
fiadd
dec
inc
int3
out
out
jo
add
push
cmp
inc
js
push
test
mov
or
pop
sbb
dec
pop
push
mov
outs
into
lahf
add
cld
dec
pop
outs
cwde
fidiv
retf
add
jns
pop
jmp
xor
xchg
sar
mov
loop
addr16
cmc
neg
lock
cmp
femms
or
pop
dec
xor
xor
add
hlt
call
push
les
movs
retf
mov
mov
addr16
ror
xor
or
push
push
add
mov
xchg
xor
lahf
mov
gs
sbb
test
int
xor
jae
adc
or
sbb
cmp
or
jno
fdivr
(bad)
pop
xor
jae
std
cld
sahf
sub
out
dec
sbb
iret
xchg
bound
cs
jb
mov
jo
add
adc
mov
add
enter
into
vdivps
and
dec
out
test
add
xchg
ret
mov
sqrtps
ds
rcr
lahf
sub
or
lock
retf
out
inc
(bad)
xor
rol
xchg
add
(bad)
jecxz
inc
fisub
icebp
push
repz
dec
cmp
bnd
aad
xor
jecxz
cmp
stos
loope
fcmovnbe
inc
xchg
add
push
sbb
pop
mov
popf
push
or
and
xchg
not
dec
mov
daa
inc
inc
jle
push
add
dec
jecxz
not
aas
jo
mov
add
(bad)
loope
mov
loope
call
sub
mov
iret
mov
adc
test
mov
xor
ror
mov
push
and
or
jne
sahf
inc
ss
jae
sbb
dec
outs
outs
cmp
mov
imul
mov
pop
or
inc
cmps
enter
ds
shl
dec
cld
adc
daa
imul
sub
movs
pop
push
(bad)
in
test
stos
adc
call
jo
adc
fwait
test
aam
stos
push
cmps
lahf
or
mov
test
xchg
mov
pop
retf
cmp
shl
xor
add
ins
retf
xor
fcom
pop
out
push
mul
push
or
xchg
into
inc
call
adc
and
mov
cmps
mov
test
add
mov
mov
ins
push
or
or
mov
dec
adc
cli
xor
stos
and
adc
lea
cmp
inc
jns
lds
idiv
hlt
in
std
push
sti
inc
(bad)
mov
gs
sub
pop
push
mov
icebp
lea
data16
shl
push
push
and
mov
int
outs
in
push
sahf
retf
(bad)
mov
pusha
cmp
leave
pop
stos
fld
call
cmc
pop
push
iret
pop
pop
in
leave
test
int3
adc
int
inc
xchg
cmps
add
adc
leave
mov
repnz
dec
into
pusha
jne
fmul
push
xor
xlat
jae
in
adc
and
push
imul
(bad)
ins
push
adc
scas
ss
js
fiadd
sub
sti
daa
xchg
mov
je
pop
arpl
cmp
lods
test
lock
add
ror
pop
in
jae
sbb
fnsave
sbb
popf
ror
push
sti
in
cld
xchg
cmp
loop
mov
mov
ds
ja
dec
je
dec
ror
or
in
daa
movs
xor
test
fist
dec
add
jmp
mov
xor
mov
mov
scas
mov
mov
push
ins
push
or
xchg
in
test
jmp
or
stos
and
xchg
add
mov
and
iret
test
lahf
cmp
xchg
imul
scas
aam
ret
scas
daa
cmp
cmps
lahf
jmp
jmp
push
pop
inc
jno
gs
mov
xchg
rol
jl
stos
rcr
inc
pop
aam
mov
loop
(bad)
inc
and
(bad)
lods
jecxz
ins
mov
test
fisub
out
mov
pop
outs
jmp
sub
cmc
dec
mov
cdq
inc
xor
test
push
jo
call
lahf
pop
sbb
scas
cmp
cmp
rol
nop
ds
(bad)
mov
mov
jb
cmp
pop
adc
lea
dec
xor
ret
call
js
jl
mov
mov
ds
mov
push
mov
dec
adc
sub
cmp
lods
or
pop
ss
jge
or
loopne
sub
inc
mov
rol
pusha
jge
dec
xchg
arpl
in
sub
xchg
outs
add
dec
ret
mov
stos
dec
sbb
jmp
xor
jb
mov
loop
jns
je
cmp
pop
mov
push
jbe
jmp
sti
jbe
cmp
sbb
inc
in
addps
sbb
dec
mov
add
fild
push
xchg
pushf
xor
cwde
sub
mov
test
daa
cmp
retf
cs
mov
mov
sti
jne
daa
adc
or
fidiv
and
cld
cmp
mov
or
call
out
xchg
inc
dec
mov
sub
aaa
sub
push
pop
and
sbb
nop
mov
in
cmc
addr16
(bad)
mov
in
and
pop
or
or
or
jmp
xor
xor
and
inc
in
adc
aam
dec
into
xor
pop
stos
adc
call
xchg
cmp
sub
push
jmp
push
pop
ins
iret
int
mov
shl
imul
mov
sub
push
dec
adc
cmp
and
es
loope
pop
and
fwait
pop
stos
and
fisttp
and
enter
sub
mov
adc
mov
mov
add
pop
pop
cmp
pusha
cmp
jbe
mov
shl
outs
dec
out
adc
mov
sbb
repz
xchg
mov
xchg
lods
mov
pop
sbb
add
mov
sahf
dec
adc
sub
pop
and
push
fsub
retf
cwde
pop
dec
dec
jl
xlat
pop
mov
clc
and
(bad)
pop
retf
addr16
mov
cmc
loope
mov
fistp
movs
int3
retf
(bad)
es
sar
out
aaa
push
push
push
fistp
mov
in
icebp
xchg
adc
cmps
test
push
push
pop
xor
jno
ret
lods
xchg
stos
nop
cmp
jmp
cs
pushf
fstp
jns
inc
fbstp
hlt
pop
mov
retf
mov
sub
ds
hlt
lods
clc
jg
push
movs
lea
aad
out
idiv
fadd
sar
aam
rol
adc
or
rol
lods
mov
pop
inc
cmp
jb
or
inc
dec
jg
imul
inc
aaa
mov
retf
ins
daa
xchg
in
mov
mov
(bad)
in
mov
dec
pop
xchg
enter
push
cmp
idiv
xor
aaa
mov
mov
mov
adc
mov
sbb
shl
jl
retf
add
lock
dec
(bad)
iret
repnz
bound
add
mov
xchg
cld
and
xchg
add
shr
icebp
xchg
add
push
(bad)
sti
fstp
scas
add
cmps
mov
xchg
or
adc
mov
ds
pop
pop
mov
test
and
cld
into
idiv
clc
pop
hlt
push
xor
loopne
mov
and
out
enter
sub
push
add
and
bnd
fmul
repnz
cdq
scas
add
pop
pop
gs
jmp
pop
call
outs
outs
adc
pop
clc
(bad)
push
xchg
push
adc
arpl
test
sbb
xor
lock
cwde
dec
repz
adc
movs
xchg
xor
aaa
mov
and
mov
sti
pop
fstp
and
sbb
xchg
cmp
inc
push
inc
ficomp
neg
mov
and
data16
jo
data16
retf
xlat
mov
sub
imul
idiv
push
cmpxchg
mov
fsubp
jo
and
add
cli
ins
pop
mov
pop
addr16
ds
push
loop
les
pop
adc
rcl
xor
xor
ret
pop
inc
mov
mov
pop
xor
dec
jg
popa
xor
or
das
push
into
or
push
test
lock
das
xchg
mov
sbb
dec
xor
pop
scas
jbe
push
adc
fwait
icebp
mov
cmp
push
dec
and
hlt
daa
les
repz
fs
sahf
std
sbb
pop
cmp
daa
jp
dec
out
lods
icebp
shl
(bad)
xchg
xchg
mov
pop
sahf
xlat
xor
(bad)
retf
push
ins
mov
cwde
jbe
and
arpl
and
add
cmc
data16
ret
jne
das
ss
repz
pop
adc
aas
lahf
movs
into
std
out
pop
push
mov
fs
xchg
mov
sbb
aas
sahf
xchg
cmp
loopne
pop
pop
icebp
fild
cli
scas
sub
jne
dec
lahf
sub
shl
xor
scas
aaa
js
sbb
sub
out
fs
int3
les
scas
jg
mov
pop
add
aaa
aas
jge
jb
fcomp
ds
pop
out
in
mov
jmp
xor
jmp
sbb
pop
or
leave
cld
fidivr
mov
movs
out
adc
out
and
mov
mov
call
in
mov
jo
jp
(bad)
loopne
loope
in
sbb
cmp
aaa
movs
xchg
xor
jb
movs
xchg
xor
ins
dec
jno
add
cli
aad
and
in
pop
sub
out
idiv
and
mov
and
iret
mov
test
mov
int3
cmp
imul
out
pop
or
int
iret
mov
(bad)
sbb
cmp
out
push
lods
xchg
ds
sbb
stos
fdivr
test
je
lahf
or
xchg
jp
cmps
or
movs
mov
jle
sub
pop
pop
adc
adc
jecxz
lds
(bad)
pop
cwde
repz
ins
in
mov
cmc
dec
leave
test
jae
in
sbb
mov
sub
aam
aas
inc
loopne
in
(bad)
jg
rcl
loopne
xchg
rol
nop
js
aaa
mov
pop
cwde
std
xor
sar
in
je
xchg
dec
sti
outs
addr16
adc
sti
std
add
dec
mov
pushf
mov
push
fwait
inc
jle
shl
or
mov
popf
shl
fnsave
push
sahf
ret
test
(bad)
pop
pop
cmp
push
or
push
mov
pop
inc
out
push
mov
jo
int3
stos
dec
push
in
test
retf
call
push
jnp
or
push
fsub
nop
in
scas
movs
loop
mov
xchg
(bad)
pop
sub
out
jl
pushf
in
mov
sbb
mov
idiv
push
mov
sub
xchg
or
mov
jge
cwde
xchg
mov
cmp
and
pop
inc
jmp
pop
(bad)
lds
xchg
mov
mov
loop
mov
sti
sub
aad
retf
bswap
fcomp
test
mov
rcl
call
mov
push
div
mov
add
fdivrp
iret
pop
sti
imul
scas
add
mov
outs
(bad)
in
dec
dec
in
push
dec
cmp
push
push
push
dec
or
ds
lods
xchg
jge
pop
retf
mov
cmovge
repnz
adc
cld
ins
int
mov
jge
sbb
fcomp
sbb
inc
bound
mov
stos
fbstp
add
cmps
(bad)
lds
mov
inc
ror
mov
loop
lods
outs
jg
or
in
jl
lea
popa
dec
arpl
mov
ds
pop
les
pop
enter
iret
mov
fidivr
mov
cdq
jecxz
aam
imul
shl
in
push
lods
pop
popf
shl
add
cmp
stc
clc
ss
std
adc
cmp
adc
loop
lods
mov
dec
pusha
dec
push
dec
lods
loopne
popa
ins
cmp
or
add
retf
aam
cwde
arpl
(bad)
cmp
mov
or
and
mov
and
jmp
adc
jmp
dec
jmp
int
jmp
add
pop
push
pop
push
dec
cli
or
adc
mov
jns
scas
div
ins
loopne
pushf
fmul
xchg
mov
imul
push
iret
stos
cmp
out
ja
add
xor
mov
or
jae
jmp
and
inc
mul
pop
jg
ror
movs
clc
cs
mov
mov
test
and
lods
mov
lods
std
xchg
mov
jns
dec
sub
pop
pop
sbb
pop
(bad)
repz
pop
retf
push
test
cdq
pop
xor
fiadd
pop
inc
mov
retf
xor
call
jmp
xor
ins
push
cli
scas
push
fs
mov
in
mov
push
jmp
out
(bad)
mov
cld
popa
lods
pop
out
lds
xchg
shr
fld
aaa
sub
pushf
push
out
or
adc
repnz
shr
pop
cmp
fisttp
cmps
dec
mov
jae
adc
cmp
pop
and
ficom
cmp
rol
sub
add
mov
lea
jecxz
push
xchg
pop
shr
scas
cdq
test
adc
shl
test
jnp
jmp
fadd
mov
popf
and
push
mov
sub
adc
hlt
ficomp
iret
sti
retf
mul
test
or
das
or
cmp
lahf
cmp
mov
push
and
add
rcr
(bad)
sub
mul
mov
mov
lods
inc
pop
scas
mov
iret
bound
push
lock
aad
jecxz
(bad)
and
xchg
mov
inc
jmp
shl
aaa
enter
xchg
daa
cli
ja
sub
clc
movs
pop
mov
in
push
dec
test
sbb
jmp
outs
and
inc
xchg
stc
adc
leave
sbb
lds
icebp
retf
cmp
stos
add
dec
loope
and
add
movhps
mov
aaa
mov
jo
cs
addr16
pop
lds
adc
out
or
es
cmp
push
lahf
dec
sub
sbb
dec
pop
das
sub
(bad)
test
cmp
lea
push
jmp
jne
stc
mov
add
add
push
out
mov
adc
jmp
jne
movs
pop
mov
jmp
dec
mov
pop
sbb
movs
xchg
mov
dec
ins
adc
iret
(bad)
cmc
and
in
or
push
jl
call
add
addr16
sub
pop
mov
addr16
mov
add
lahf
push
dec
(bad)
sbb
mov
mov
mov
stc
loope
outs
mov
push
cmc
loop
pop
movs
retf
out
or
movs
jae
mov
mov
lods
ret
aas
outs
nop
sub
push
push
xor
ss
fbld
stos
lea
jbe
jmp
sub
in
jg
jae
mov
jecxz
jns
loop
(bad)
aam
xor
ja
(bad)
jecxz
xor
scas
pop
jno
call
(bad)
xor
adc
cmp
inc
jge
xchg
or
mov
mov
scas
stc
popa
sub
popa
loopne
adc
fidiv
neg
std
es
enter
paddq
ret
mov
mov
push
mov
enter
mov
xor
and
pop
and
loope
jo
mov
mov
out
iret
addr16
ror
push
and
pop
cmc
dec
xor
or
mov
cmp
test
cs
xchg
in
xchg
jle
fdivr
sub
sub
lds
xchg
cld
dec
pop
cmp
pop
xor
ret
int3
int
sub
es
sub
cld
enter
pop
ds
dec
ret
inc
fmul
jl
push
jmp
cmp
sub
dec
push
cmp
aaa
dec
xchg
push
into
shr
xchg
lahf
jb
mov
into
push
fmul
test
and
out
dec
call
loopne
sub
jg
outs
jmp
loop
mov
and
cld
sub
fnstcw
cmp
sbb
mov
jmp
repz
xchg
xor
lea
lds
retf
pop
mov
movs
and
add
add
(bad)
mov
scas
cmps
mov
or
mov
pop
xchg
xor
jae
into
jmp
xchg
loop
out
xor
adc
es
scas
call
mov
dec
aam
lock
and
fmul
add
loopne
fdiv
mov
hlt
adc
dec
in
push
mov
cmp
or
add
cld
mov
pushf
cli
mov
inc
jo
stc
test
sbb
loop
imul
xor
cmps
loopne
cmp
sub
and
xchg
pop
fistp
push
repnz
xor
leave
js
xor
cld
sub
(bad)
aam
mov
jb
cmp
movs
cs
pushf
pushf
les
out
cld
mov
dec
test
cmc
bound
push
fwait
sub
out
sbb
ret
mov
lahf
sub
add
lods
or
ins
lods
movs
stc
cmps
and
scas
dec
and
push
jne
scas
addr16
add
or
push
ret
xor
pop
das
aaa
test
lods
push
jmp
div
and
shl
or
and
inc
test
push
or
ret
add
push
inc
add
pop
mov
push
add
adc
xor
stos
outs
mov
mov
xor
mov
iret
pop
sub
(bad)
xchg
cmps
mov
dec
push
mov
aad
cld
cli
daa
dec
dec
or
mov
loop
push
fsub
push
inc
and
pushf
aad
sbb
mov
adc
rcr
in
test
and
sbb
add
dec
sbb
inc
add
dec
lods
psllq
add
mov
dec
scas
mov
bound
repz
test
jmp
rcl
lea
dec
pop
loop
loope
cmp
cmc
rol
clc
repz
ins
(bad)
retf
cli
adc
mov
and
and
dec
mov
out
test
je
pop
aas
js
int3
push
js
jecxz
mov
scas
paddq
out
xor
adc
test
retf
adc
jne
sbb
or
aas
push
ins
xor
cdq
test
repz
imul
jno
jae
xchg
into
sar
pop
push
sahf
fs
sub
jo
add
or
ins
add
scas
ins
cwde
mov
in
ficom
mov
dec
mov
(bad)
fdiv
pop
rcl
(bad)
mov
out
test
sahf
out
inc
adc
cmp
or
mov
or
xchg
mov
cs
outs
inc
sar
xor
jl
cmc
in
xchg
enter
push
jnp
jb
push
mov
std
into
mov
sbb
and
popf
enter
sar
test
(bad)
mov
push
or
int3
pushf
fsubr
inc
rcl
call
mov
cdq
add
push
hlt
dec
adc
jmp
jnp
addr16
jne
jg
jno
out
sbb
out
xchg
lods
xor
fbstp
clc
out
ret
mov
(bad)
and
cmp
int3
or
dec
adc
fs
fcomp
add
jle
push
inc
dec
push
lods
daa
push
imul
xchg
jge
adc
add
jmp
sti
push
pushf
push
mov
fiadd
jg
jmp
mov
dec
(bad)
pand
test
add
popa
ins
mov
or
call
out
xchg
(bad)
std
mov
das
fucomi
std
inc
xor
xor
repz
jg
cdq
mov
outs
add
mov
and
xchg
jg
sbb
out
ins
rcl
inc
aad
loopne
mov
sub
add
push
mov
jle
cmp
ja
add
xor
pop
pop
push
shl
xchg
push
nop
cli
jmp
aam
pop
xor
jg
repnz
les
or
arpl
mul
sbb
cmps
dec
push
and
sub
mov
aaa
sub
xor
sub
out
xchg
mov
push
pop
mov
pop
shr
xor
pop
mov
push
mov
mov
cdq
les
das
cdq
or
(bad)
adc
inc
jne
jmp
or
ds
push
test
jp
xor
mov
dec
pop
aas
cmp
dec
je
and
fsubr
mov
aas
mov
cs
cmp
ret
push
out
enter
movs
loope
sahf
ins
sbb
outs
mov
cmp
mov
test
mov
pushf
jns
push
push
jmp
adc
repz
and
lea
retf
dec
xor
fcmovnu
loopne
inc
movs
pop
inc
sbb
(bad)
sti
hlt
cli
jle
or
enter
jno
int3
movs
pushf
pop
fisttp
sti
retf
loopne
fst
jmp
and
fndisi(8087
aam
jne
adc
mov
push
xchg
jmp
movs
iret
ja
dec
xchg
loopne
dec
or
mov
mov
mov
mov
cmc
xchg
in
lods
add
pop
cmp
fistp
mov
(bad)
mov
push
mov
cmps
adc
adc
push
mov
imul
push
shl
aam
mov
adc
test
out
popf
fisttp
inc
scas
cmp
cmp
xchg
add
pop
aam
mov
loopne
outs
je
and
jo
xchg
jecxz
push
xchg
jne
and
pusha
sbb
add
mov
xor
loop
xchg
jbe
adc
jns
rcl
ss
in
mov
adc
lods
add
xor
loope
or
xor
cmp
pop
into
mov
test
xor
sti
inc
push
pop
sbb
jbe
fwait
sub
inc
inc
mov
xchg
lods
sub
push
popa
sub
pop
shr
mov
mov
mov
in
ret
aam
repnz
push
popa
into
mov
add
xor
rcr
ins
fwait
in
mov
mov
sub
test
mov
dec
ret
popa
ins
imul
enter
or
adc
push
test
inc
xchg
mov
dec
inc
jmp
rol
or
dec
ss
xor
fwait
jmp
in
hlt
das
xchg
mov
jno
push
imul
pop
imul
adc
into
jp
mov
test
(bad)
(bad)
fucom
xchg
xchg
push
push
pushf
cmp
fisttp
cmps
les
mov
push
dec
add
dec
loop
and
clc
enter
mov
mov
pop
fcmovnbe
push
test
in
mov
in
movs
xor
xchg
leave
xor
pushf
cmp
push
pop
pop
mov
adc
jecxz
inc
jno
cmp
lock
jmp
jno
cmp
in
shr
or
arpl
cld
sub
add
inc
aad
push
dec
pop
ret
mov
jo
das
jo
dec
out
cld
loope
push
pop
js
ins
shr
or
push
push
and
adc
loopne
pop
xchg
jbe
es
outs
add
bound
xchg
div
adc
retf
xor
xchg
xchg
xor
popa
into
pushf
pusha
mul
aas
hlt
loop
test
aad
out
lahf
loope
push
push
sub
sti
fstp
sub
push
ret
test
cs
cmp
inc
xor
fstp
test
add
sub
je
popa
jmp
jecxz
pop
bound
xchg
mov
fstp
dec
push
popf
jmp
in
loop
and
pop
jg
dec
add
push
or
mov
shl
push
enter
or
xor
mov
pop
(bad)
cmp
(bad)
in
mov
sub
cld
fisttp
jbe
ja
push
out
jne
jle
cwde
lea
mov
sbb
mov
loope
and
fld
sub
sti
jb
and
repz
inc
adc
pushf
or
aad
adc
fstp
xchg
(bad)
xchg
jecxz
ins
test
dec
xor
mov
ret
movs
pop
shl
daa
ror
push
fdivrp
idiv
out
pop
out
pop
push
sub
gs
aam
push
pushf
addr16
test
inc
jnp
inc
fs
jnp
cmp
out
pop
sbb
add
add
sahf
das
sbb
clc
dec
scas
mov
ja
jne
dec
(bad)
sbb
sub
jp
cwde
pop
mov
ds
rol
jo
outs
xchg
out
ret
lods
iret
and
jo
lods
cmps
xor
mov
imul
sbb
sub
and
sbb
popa
cwde
mov
icebp
ds
sbb
stos
outs
adc
sbb
sahf
fadd
test
xchg
out
and
cwde
push
sbb
xor
call
inc
and
daa
leave
rcr
sti
add
xchg
pop
cmp
mov
loope
imul
ins
lahf
stc
sbb
xchg
pop
inc
adc
outs
sbb
fild
sbb
lea
mov
mov
mov
mov
xor
cmp
xchg
int3
fsubr
dec
jno
scas
retf
cmps
lahf
js
retf
jle
ins
sahf
aam
sbb
sub
fwait
mov
pop
mov
leave
in
call
dec
push
push
popa
mov
pop
dec
jge
jae
fdivr
test
in
js
xor
adc
jne
arpl
mov
cmp
cld
pop
push
mov
fimul
popa
aad
mov
pop
pop
shl
sbb
mov
jne
mov
movs
pusha
std
stc
pop
push
xchg
xor
cs
add
xchg
in
add
push
dec
lods
sub
cmc
addr16
jb
loop
jmp
cmps
adc
sub
sub
aas
push
bound
xchg
repnz
repz
in
jl
mov
ret
xor
mov
jmp
in
or
call
scas
jge
mov
xchg
mov
jo
and
sub
clc
dec
dec
jns
shl
jb
nop
(bad)
mov
aad
mov
add
popf
fst
push
or
mov
fistp
push
sub
cmp
test
out
push
jp
jg
sahf
mul
mov
inc
and
inc
test
pusha
inc
mov
adc
idiv
mov
dec
fdiv
hlt
mov
xchg
std
xchg
js
clc
fistp
mov
cmp
inc
sub
mov
jae
ins
push
push
out
lahf
add
je
sub
push
leave
call
xchg
mov
cmps
cwde
(bad)
adc
mov
test
out
daa
iret
pop
xchg
retf
mov
gs
sbb
inc
inc
sbb
repz
add
pop
ins
sbb
sub
(bad)
add
data16
mov
pop
test
fwait
lods
mov
ds
repz
pop
xor
mov
xor
fcmovu
and
in
outs
movs
test
pop
and
ins
pop
es
stos
enter
call
clc
sub
stc
pushf
push
push
fbld
mov
adc
inc
inc
mov
aas
sbb
pop
xlat
into
jle
sbb
inc
test
mov
cmp
nop
mov
xor
pop
dec
lds
int3
fdivrp
sbb
fiadd
cmp
rcl
cmps
pop
cld
adc
adc
mov
push
jae
xor
adc
fiadd
lock
shr
push
mov
add
ds
popa
ins
push
aaa
imul
cmp
fnsave
enter
call
es
xchg
cmp
cmp
sub
and
rol
addr16
(bad)
stos
test
ss
inc
mul
fs
popa
popa
jge
cmp
add
mov
in
mov
jp
stos
call
pop
cmc
and
dec
iret
inc
sar
test
cmc
pop
fldenv
repz
sub
mov
hlt
mov
pop
aaa
enter
jmp
sbb
test
pop
sbb
dec
add
fist
test
cdq
mov
popf
stos
test
popf
cmp
test
fnsave
loope
or
sub
out
fwait
push
pop
mov
push
sbb
lods
enterw
dec
daa
pop
push
jno
xor
rcl
inc
sub
jnp
shl
xor
inc
repnz
inc
push
loope
sahf
sub
and
sbb
jp
sub
sub
loopne
in
out
sub
mov
out
sbb
out
movs
cld
popa
xchg
pop
enter
sbb
dec
ror
iret
add
pop
sbb
mov
mov
add
add
mov
and
mov
inc
push
ss
mov
xchg
sbb
mov
lock
sbb
(bad)
in
inc
sbb
enter
inc
and
rcl
mov
call
call
int3
test
sbb
stc
pop
dec
data16
cmps
sbb
mov
rcr
(bad)
retf
xchg
sub
mov
les
cmp
xchg
dec
repnz
jmp
sbb
push
mov
sbb
add
pop
mov
jl
inc
and
xor
popf
(bad)
(bad)
cmp
clc
jg
lock
pop
mov
jge
leave
push
sub
fld
jmp
ss
sbb
cdq
outs
dec
xor
sbb
mov
rcl
call
dec
stc
in
outs
pusha
js
adc
inc
jge
jp
pop
pop
jge
mov
xor
inc
mov
das
push
add
bound
out
imul
fsubp
add
pop
inc
or
sub
or
ror
stos
ds
cmp
push
loopne
jmp
mov
pop
sahf
add
outs
pop
in
cmp
mov
cmp
mov
add
adc
ins
loop
sti
jns
cli
xchg
leave
pop
push
or
jbe
push
push
or
mov
pushf
es
in
in
fwait
das
int3
not
jbe
mov
cli
retf
xchg
push
bound
aaa
int
add
cs
add
in
dec
sar
mov
pushf
cmp
repnz
mov
stc
loop
xor
sub
pop
rcl
push
loopne
lea
cwde
dec
fld
test
lea
inc
sbb
dec
cdq
dec
lahf
jmp
std
mov
xor
or
pop
and
outs
shr
cmps
int3
add
(bad)
cs
push
pop
jne
cmps
inc
push
fild
aam
int
or
mov
fldcw
add
xchg
dec
fdivr
shr
cli
sbb
xor
aas
sbb
fld
mov
into
push
jo
(bad)
mov
inc
xchg
ins
loop
jo
jmp
rcr
xchg
adc
call
mov
call
movs
xor
inc
cmp
mov
xchg
fcomp
fnstsw
fucomp
dec
test
mov
imul
and
fdivp
xchg
pop
dec
or
enter
mov
jae
inc
test
cmp
retf
xlat
mov
ds
(bad)
mov
cmps
push
mov
dec
jmp
hlt
cmc
cmp
push
or
dec
push
inc
test
push
and
inc
cmp
push
in
mov
iret
arpl
push
hlt
out
xor
dec
sbb
rcr
adc
outs
in
sbb
test
(bad)
mov
rol
out
call
mov
pushf
inc
js
mov
xor
mov
mov
std
jp
push
pop
loopne
jmp
not
movs
and
nop
stos
outs
test
out
outs
rcl
dec
sub
dec
and
adc
xlat
mov
call
xor
mov
jg
out
mov
and
mov
and
mov
jb
addr16
mov
enter
push
jmp
push
sbb
xchg
sbb
or
jmp
inc
dec
call
retf
arpl
add
out
fdivr
cmps
xchg
mov
jb
shl
mov
pop
leave
out
(bad)
push
xchg
loope
xchg
mov
out
cmp
out
stc
jnp
sub
sbb
mov
es
inc
sbb
pop
(bad)
rep
fsub
ret
inc
adc
into
pop
loopne
dec
pop
and
cmps
cmp
sub
bound
int
cs
mov
pop
xor
in
pop
shl
ror
and
and
push
mov
shr
mov
adc
push
xor
push
pslld
mov
push
push
sbb
add
add
push
push
call
xor
ret
jne
sbb
mov
lds
xor
inc
imul
jae
icebp
pop
mov
leave
sbb
push
or
jmp
pop
add
mov
(bad)
sti
clc
ficomp
add
lock
push
push
jno
mov
sbb
push
ror
retw
jg
stos
push
pop
pop
add
xlat
push
push
addr16
or
sbb
and
loope
and
arpl
jae
cdq
fmul
xor
mov
popf
pop
and
cs
inc
cmp
add
inc
sub
mov
daa
mov
pop
pop
movs
jge
fcomp
mov
sbb
mov
pop
sbb
ret
scas
aaa
mov
cmps
out
cmps
jge
fld
mov
cdq
call
ds
dec
call
(bad)
lods
or
xor
fwait
inc
fidiv
cmps
call
pop
or
js
lahf
retf
dec
(bad)
div
loope
xchg
call
push
sub
movs
push
into
mov
jbe
lds
leave
cmp
sub
xchg
add
mov
xlat
xchg
or
retf
or
pop
ret
mov
wbinvd
out
aaa
mov
test
jno
mov
mov
shl
adc
xlat
lahf
icebp
stos
xor
push
push
hlt
addr16
adc
stc
add
out
inc
push
ss
inc
inc
sbb
enter
es
xor
inc
sub
xchg
and
dec
cs
stos
add
xor
xor
xor
cmp
(bad)
jp
fstp
xchg
sbb
dec
cmp
add
adc
lods
xor
jg
pop
lods
shl
fwait
aas
mov
push
sub
int3
rcl
mov
pop
fmul
in
sub
cmps
xchg
sbb
jp
mov
arpl
dec
cmp
sub
icebp
imul
fmul
enter
jl
fwait
ins
jae
leave
and
(bad)
jnp
lahf
sti
in
inc
add
xchg
or
mov
jle
and
stos
jp
fstp
or
push
pop
xlat
adc
(bad)
cmp
test
mov
aam
imul
out
mov
push
out
jmp
inc
mov
aam
aaa
(bad)
fistp
daa
push
push
dec
xor
pop
repz
mov
inc
outs
jmp
ret
outs
lods
xor
sbb
mov
mov
fcomp
ret
lds
fisub
cmps
inc
pop
movs
in
ja
jbe
in
inc
outs
cld
cmp
mov
and
pop
scas
pusha
jb
mov
adc
mov
loope
ins
mov
jmp
push
in
dec
fst
adc
push
xor
adc
fbld
inc
cmp
xor
xchg
cwde
repnz
aaa
mov
in
gs
fmul
loopne
in
cmps
gs
sahf
leave
sbb
in
or
mov
jae
(bad)
sbb
cld
adc
cmps
xchg
jb
xchg
jl
leave
mov
push
dec
cmc
cmp
outs
mov
fstp
out
jmp
push
shr
jae
xor
mov
pop
add
jbe
inc
aaa
inc
and
inc
adc
aas
retf
sbb
movs
or
or
jmp
out
repz
in
dec
aad
cs
xchg
stc
jmp
mov
clc
jle
sbb
jge
xchg
sub
push
retf
xchg
or
push
xor
jge
or
mov
adc
xor
pop
cli
inc
cmp
xor
mov
stc
arpl
sbb
je
call
pop
scas
lahf
mov
pusha
jo
push
shr
nop
or
cld
ffreep
fwait
ja
(bad)
into
sub
outs
ins
sbb
scas
mov
bound
call
cmps
push
mov
inc
or
pop
imul
mov
adc
jmp
je
sub
les
fbstp
jg
pop
add
sbb
push
jmp
push
pop
dec
pushf
ins
sub
xor
cmp
sti
fsubr
cmp
dec
xchg
xchg
call
lods
mov
stos
fld
in
xor
stos
mov
jne
ja
jmp
push
xlat
sti
pushf
mov
cld
es
shl
dec
popa
jg
jne
out
icebp
jl
cmp
jns
loopne
xor
push
inc
mov
mov
jecxz
shl
push
and
fstp
xlat
xor
mov
xchg
icebp
dec
stos
pop
push
addr16
push
bound
inc
push
pop
out
inc
xchg
mov
adc
adc
xor
cld
test
xlat
push
das
mov
xchg
shl
lahf
lea
pop
daa
push
sub
adc
fcomip
scas
jo
pop
mov
retf
mov
call
(bad)
and
dec
mov
scas
or
mov
push
xor
les
jp
sub
das
les
xchg
cmp
mov
sbb
outs
mov
dec
sub
or
test
cwde
add
dec
stos
xchg
push
adc
or
hlt
push
push
and
(bad)
sbb
test
mov
jge
and
scas
dec
sub
jno
xlat
inc
add
popa
fiadd
pop
push
push
scas
jle
xchg
pop
xchg
mov
add
cs
add
push
add
stos
xchg
fdiv
adc
cmp
xlat
sbb
(bad)
arpl
aas
push
leave
mov
add
sbb
sbb
in
popf
mov
shl
(bad)
int
arpl
dec
xchg
cmp
adc
xor
xlat
icebp
loop
xchg
inc
lea
mov
or
cmp
ds
pop
mov
lds
xor
push
pop
lods
adc
jge
mov
ror
and
test
lods
jbe
cmps
jnp
pop
sahf
les
xor
push
rol
mov
cdq
dec
loope
mov
mov
xchg
add
fdiv
stc
movs
rdtsc
repnz
or
fst
inc
cmps
pop
push
jns
test
dec
dec
addr16
push
pop
retf
sti
mov
outs
fwait
addr16
imul
push
and
mov
mov
cmp
loope
mov
test
xlat
jo
mov
push
sahf
fwait
push
aad
movs
cmp
xchg
cmp
xor
nop
ins
mov
sub
inc
std
push
mov
sbb
xchg
in
ins
iret
fbld
add
shl
pop
mov
cmps
mov
pop
add
fisub
add
fnstenv
call
jmp
imul
dec
cmp
int3
fidivr
pop
jb
cmp
stos
cld
add
stos
lea
xchg
push
rcr
add
aad
xchg
ret
lods
pop
jp
cmp
sub
repz
sub
into
mov
jmp
imul
stc
mov
outs
and
mov
pusha
sbb
jmp
cmp
sbb
in
xchg
inc
mov
mov
ds
push
call
lods
icebp
push
inc
xor
je
loopne
mov
call
mov
pop
mov
imul
xor
inc
popa
inc
lds
mov
ret
retf
cmps
fdivr
fwait
mov
movs
push
movs
arpl
adc
mov
mov
add
adc
(bad)
add
cmp
loope
mov
xchg
and
shr
inc
inc
dec
pop
repz
xchg
out
test
(bad)
mov
icebp
(bad)
fistp
push
lock
push
shr
bound
lock
rcr
push
dec
mov
dec
push
jl
lea
pop
pop
div
fisubr
mov
xchg
pop
push
loope
xchg
pop
mov
repnz
sub
mov
cmc
std
dec
xor
ret
or
mov
pop
push
(bad)
shl
mov
aaa
pop
es
hlt
sbb
js
int
sti
sbb
sub
pop
std
stos
leave
repz
xchg
or
add
scas
mov
mov
addr16
das
mov
pop
or
jg
lods
add
pop
mov
inc
les
mov
xor
push
pop
(bad)
dec
aad
cwde
ret
pop
pop
cdq
jns
pop
push
repnz
inc
in
pop
or
in
cs
lock
(bad)
adc
mov
xor
mov
fisub
xchg
dec
cli
imul
jp
sbb
aaa
sbb
inc
outs
cmp
icebp
push
leave
or
stc
cmps
mov
pop
retf
inc
adc
xor
push
enter
pop
ficom
xchg
inc
jmp
and
push
cmps
jae
test
shl
add
xor
mov
xchg
dec
or
cmp
fs
enter
iret
jl
aad
in
or
mov
sbb
push
mov
dec
call
mov
into
inc
imul
arpl
jno
cmp
adc
push
pop
push
int
jae
inc
mov
pop
mov
adc
jne
icebp
test
and
sti
sub
daa
cli
test
xchg
cwde
inc
aas
xor
out
xchg
loope
mov
jecxz
push
inc
loopne
mov
pop
movsx
add
mov
(bad)
mov
sbb
mov
mov
mov
fcmovnu
cdq
sbb
les
xlat
ror
pop
add
mov
cmp
pop
loopne
cwde
std
xchg
add
jg
fistp
shr
and
cmp
push
xchg
push
iret
and
scas
sbb
(bad)
xchg
jb
repz
jmp
pop
mov
lds
xor
fild
fwait
(bad)
ins
not
mov
jae
fsub
stos
jno
das
inc
in
push
(bad)
push
adc
stos
adc
jns
xlat
jp
lea
inc
dec
cmp
sub
(bad)
cli
jne
pushf
sub
aas
call
iret
inc
and
mov
daa
imul
push
xor
and
push
cld
sbb
xchg
dec
push
imul
push
rol
retf
fadd
lock
gs
rcl
add
out
loopne
(bad)
sub
sti
add
mov
(bad)
shr
xor
iret
outs
cmp
call
xor
jne
mov
mov
pop
jl
test
leave
test
and
bound
jb
jbe
jg
ja
dec
test
or
pop
std
sar
pop
hlt
sub
adc
xor
out
sbb
mov
mov
in
sub
test
bound
push
push
out
aam
cwde
je
test
push
mov
fisttp
les
imul
mov
mov
xor
sbb
push
dec
inc
pop
test
or
pop
jmp
xchg
(bad)
(bad)
xor
inc
dec
cwde
call
repz
sti
pop
movs
adc
(bad)
arpl
push
imul
out
inc
adc
sbb
clc
enter
dec
xchg
cmc
jb
lea
xchg
(bad)
stos
dec
sbb
or
push
leave
lods
adc
jb
loope
pop
xchg
mov
cdq
sub
pop
jle
add
cmc
push
movs
ja
dec
xor
push
cmc
push
mov
xchg
add
pop
or
cwde
and
stos
stc
jns
adc
enter
sub
cmp
jecxz
cmp
stos
fsubr
push
or
jge
push
out
mov
push
adc
icebp
push
mov
lock
xor
or
not
movs
adc
mov
sbb
popf
adc
jo
das
pop
sbb
das
lock
adc
in
cmp
adc
add
retf
shl
sbb
sbb
push
out
repz
cmp
cmps
lock
out
or
out
aad
test
xor
outs
push
mov
jl
enter
mov
pop
xlat
daa
stc
addr16
iret
in
push
xchg
sahf
test
jg
mov
out
push
push
xor
dec
adc
push
xchg
cmp
add
mov
pop
cmps
or
fist
int3
push
lods
mov
push
cmp
push
(bad)
cs
inc
jg
jno
repz
pop
cmps
in
div
repnz
adc
push
es
lods
xchg
lods
sub
(bad)
push
addr16
mov
nop
sub
stos
es
xchg
(bad)
cmc
(bad)
js
sbb
loopne
clc
jmp
dec
mov
push
int
jmp
xor
pop
xor
pop
imul
xor
xchg
mov
popf
adc
rcr
rol
div
push
push
arpl
sbb
sub
cmp
fdivr
or
outs
rol
retf
dec
adc
lea
mov
repz
sub
nop
pop
in
retf
imul
cmp
lods
rcr
mov
jmp
cmps
fucomp
outs
lahf
inc
mov
movs
(bad)
jl
ss
mov
lods
mov
fwait
imul
cmps
mov
lods
ss
fldenv
cmp
sahf
cwde
cmp
(bad)
imul
and
mov
out
add
mov
enter
dec
dec
inc
aad
xor
cmp
xchg
fiadd
inc
stos
push
popf
shr
scas
inc
sbb
jae
out
dec
pop
mov
mov
mov
pushf
cmp
cli
xor
jle
test
aas
retf
test
push
and
out
xor
adc
cmp
fst
sbb
xchg
dec
les
jp
adc
mov
inc
movs
mov
mov
dec
(bad)
mov
pop
data16
out
cmc
jecxz
adc
cld
xor
aad
daa
add
or
jne
push
jb
fcmove
retf
cmp
ins
dec
xchg
sub
sub
jno
cmp
mov
(bad)
push
stc
mov
dec
in
xchg
mov
sub
cmps
add
pop
in
dec
out
add
out
repz
aad
cmps
inc
cmps
bound
sahf
stos
cmc
fld
cmps
inc
push
cli
lods
(bad)
push
adc
nop
lock
sub
daa
or
lock
mul
cdq
clc
cmp
das
repz
lock
leave
mov
test
ins
fdivrp
clc
clc
mov
call
fldenv
inc
(bad)
aam
mov
sub
jmp
adc
into
fbstp
pop
aam
jge
pop
hlt
jl
add
inc
mov
xchg
mov
cmc
jmp
int3
mov
xchg
loopne
mov
xchg
push
mov
dec
rcr
lods
out
sbb
mov
sar
and
add
ins
ret
or
out
mov
or
inc
ja
ins
test
in
iret
mov
add
loop
out
cs
pop
out
and
shr
les
inc
adc
je
sti
mov
add
dec
sbb
js
adc
and
mov
jno
lods
adc
push
sahf
(bad)
and
sbb
jne
inc
xchg
retf
div
fsubr
mov
cmc
push
cdq
xchg
in
ds
push
int
cmp
fs
push
rol
ror
mov
sub
pop
and
jnp
xlat
pop
cmps
test
fst
sub
sub
cmp
cmps
sub
retf
jmp
mov
mov
into
mov
mov
push
pop
aaa
pusha
push
cdq
ins
fwait
icebp
mov
dec
mov
cmps
clc
stos
push
repz
aad
call
push
jge
jl
pop
and
imul
lods
inc
scas
jp
push
jnp
pop
mov
xor
jmp
cli
adc
mov
outs
jo
mov
shl
inc
xchg
sbb
mov
add
cli
mov
pushf
std
jo
stos
jl
int
jmp
mov
aad
fwait
out
test
repnz
mov
js
aaa
and
inc
cmp
sub
ja
mov
test
ficom
add
sub
jg
loop
fs
mov
xchg
daa
scas
and
sbb
sub
sub
xor
inc
(bad)
mov
rcl
stos
jo
sbb
aaa
aam
sar
repz
shr
dec
dec
fcmovne
imul
cmps
mov
das
sbb
test
jbe
push
scas
jmp
push
xor
icebp
adc
jge
nop
cmc
pop
test
cvtpi2ps
cli
addr16
adc
icebp
ror
xor
sbb
das
add
cmp
push
movs
push
pop
fadd
dec
jb
xchg
xchg
dec
das
lods
jne
(bad)
daa
mov
out
call
pusha
xchg
movs
js
test
retf
jne
idiv
xchg
fmul
dec
js
popf
xor
dec
inc
inc
push
dec
popf
jne
adc
sub
jbe
aas
jp
test
xor
adc
xlat
adc
repz
and
push
push
jecxz
sub
sahf
std
inc
ja
mov
sub
dec
sbb
cdq
adc
xchg
aam
cmp
arpl
icebp
call
mov
jmp
sub
mov
xor
(bad)
out
in
push
jle
test
out
xlat
push
hlt
imul
fist
(bad)
cmps
and
sti
jbe
in
xchg
cld
stos
push
xchg
lahf
mov
sub
cmc
xchg
lea
dec
cmp
or
inc
in
mov
jl
outs
cld
push
jns
cdq
pop
or
cwde
cli
jne
popf
pushf
in
xchg
movs
iret
js
pop
scas
adc
inc
icebp
fdivrp
scas
clc
clc
sub
inc
inc
aaa
cmp
fcmovnu
cld
sub
sbb
es
add
push
mov
dec
xor
iret
sbb
ja
pop
add
data16
ds
(bad)
mov
iret
icebp
xchg
repnz
out
add
push
test
adc
int3
les
fisttp
stc
push
rol
pop
mov
sub
popa
push
dec
xchg
repz
daa
test
shr
cmc
cmp
nop
lahf
aas
adc
mov
push
inc
pop
jne
ret
aas
stc
call
and
(bad)
push
fcom
cmp
jb
sbb
inc
lods
in
xor
pop
or
sub
inc
setb
add
(bad)
xchg
adc
popa
pop
dec
adc
add
aas
mov
sar
das
mov
shr
mov
dec
cmp
cs
push
and
(bad)
or
inc
(bad)
loope
aad
add
adc
sub
pop
loope
js
mov
std
out
sub
(bad)
mov
mov
lods
add
and
mov
mov
and
dec
xchg
add
or
push
mov
pop
pop
or
cmp
adc
fist
push
xchg
pop
fnsave
push
fdivr
and
xchg
sbb
xor
sub
add
jge
inc
jecxz
cs
mov
fdivr
mov
mov
add
pop
clc
sub
mov
out
inc
xor
(bad)
outs
xchg
pop
inc
stos
sub
pop
mov
shl
loop
cmc
in
rcr
cmps
push
int3
clc
or
imul
push
or
leave
and
cdq
xor
test
loopne
mov
out
mov
add
test
dec
push
inc
bound
push
push
outs
popa
inc
and
inc
mov
in
mov
and
adc
inc
ret
stc
and
sbb
fmul
jecxz
sbb
int
xchg
adc
outs
pop
push
mov
xor
sub
outs
xor
jmp
scas
sbb
fistp
test
aaa
pop
jns
and
test
pop
xchg
(bad)
push
outs
rol
pusha
add
dec
jae
jno
add
adc
push
mov
in
int
dec
jo
jp
or
loopne
jns
sbb
bound
cmc
sbb
dec
or
adc
lods
adc
in
add
inc
in
and
jno
jle
add
xor
and
das
out
jecxz
pop
div
fucomp
icebp
repnz
les
dec
inc
push
(bad)
js
pop
cmps
fimul
gs
pop
sar
jg
out
jbe
mov
add
sbb
push
(bad)
xchg
xchg
mov
mov
mov
mov
stc
in
out
stos
add
push
pop
jl
fmul
nop
cmp
mov
xchg
int
jbe
repnz
inc
mov
and
out
sub
hlt
(bad)
sbb
pop
dec
xchg
mov
push
(bad)
mov
bound
repz
cmp
(bad)
push
fsubr
mov
xchg
pop
(bad)
scas
test
add
xchg
daa
mov
add
pop
or
daa
push
mov
adc
fadd
xor
in
adc
inc
in
repnz
aaa
and
push
push
xchg
add
mov
and
retf
mov
in
xor
call
pop
xchg
dec
pop
xchg
sbb
xor
(bad)
and
sbb
sub
xlat
outs
adc
cmp
xlat
cld
mov
imul
in
cmp
jmp
hlt
es
clc
fwait
adc
or
retf
(bad)
nop
inc
mov
sti
adc
mov
(bad)
out
lods
movs
repz
push
ror
mov
sbb
cmps
(bad)
dec
jmp
shr
or
pop
jo
pop
sbb
out
hlt
daa
mov
std
loope
push
or
sbb
stos
retf
pusha
ret
mov
mov
aad
scas
dec
js
fwait
add
popa
jmp
xor
(bad)
hlt
fimul
inc
fcom
lds
repnz
(bad)
fcmovnu
dec
mov
pop
arpl
shr
out
lods
dec
mov
xor
cmp
or
clc
pop
sbb
lds
ds
pop
jmp
cmc
shr
and
xchg
mov
test
fisttp
fld
cdq
inc
int
test
add
sti
icebp
shr
push
cwde
and
inc
push
rol
out
loope
dec
sahf
sbb
dec
and
out
mov
sbb
add
outs
mov
scas
xchg
rcl
enter
and
mov
clc
dec
dec
std
stc
ins
sub
mov
outs
rcl
push
nop
test
mov
adc
aam
xchg
movs
xchg
xchg
xchg
pop
pop
sub
ds
jle
jge
mov
jbe
ins
xchg
in
sti
mov
mov
test
push
outs
lods
clc
std
lea
lds
enter
jae
out
push
shl
and
xor
mov
dec
dec
dec
fsub
adc
jbe
aaa
test
push
sbb
sar
sub
cs
(bad)
bound
cmc
test
jecxz
jmp
fistp
cmp
jle
and
adc
add
mov
fs
push
popa
stos
mov
cmps
je
out
dec
push
mov
out
shl
and
pop
mov
mov
mov
cs
jg
fisubr
in
stc
jmp
in
iret
(bad)
sti
out
add
fisttp
mov
push
mov
adc
fs
stc
stos
cwde
pop
enter
push
lea
adc
cmp
mov
fcmovnb
pop
ret
cmps
sbb
and
je
push
test
aas
movs
cwde
xlat
mov
push
ds
fs
mov
cmp
popa
movs
cmps
xchg
inc
mov
popa
cmp
jno
xor
sub
jmp
mov
jns
daa
push
mov
cmp
mov
ja
xchg
sbb
pop
sahf
loope
out
arpl
and
lods
mov
sbb
fdiv
cwde
movs
sti
dec
mov
or
jne
fsubr
or
lea
inc
dec
data16
call
jg
add
add
push
lods
fisub
addr16
icebp
add
dec
(bad)
jno
fsubr
sahf
pop
push
jmp
sahf
jne
addr16
inc
pop
dec
pop
rcl
mov
xor
xchg
add
dec
nop
aam
push
ror
inc
add
mov
jecxz
jp
retf
cmp
jne
imul
or
jbe
clc
xchg
test
popa
push
xchg
aad
dec
jmp
leave
dec
into
aad
and
hlt
stos
ins
lods
dec
sbb
test
dec
icebp
adc
out
cmp
mov
out
sbb
fcom
xchg
rcr
ins
and
jbe
les
fmul
pusha
mov
or
rcl
clc
daa
inc
jmp
push
mov
dec
fisub
adc
popf
xor
and
push
scas
out
fchs
add
sti
retf
inc
lock
out
js
add
gs
dec
or
and
je
mov
push
and
xor
imul
mov
cmc
fwait
mov
icebp
adc
cmp
adc
scas
mov
add
mov
hlt
mov
add
repnz
enter
inc
sbb
pop
pop
retf
aaa
sahf
call
mov
aad
int3
jae
repnz
lods
push
repnz
int
fwait
neg
imul
xchg
arpl
mov
add
shr
cmp
(bad)
aaa
imul
push
clc
and
loope
xchg
clc
ins
xchg
cmps
cld
mov
outs
adc
adc
popa
(bad)
rcl
mov
outs
jmp
popf
inc
int
fild
mov
mov
dec
push
shr
sbb
and
xchg
adc
fsub
out
hlt
adc
inc
mov
mov
test
mov
cmp
or
xor
and
les
push
push
and
sbb
into
xor
gs
cli
adc
xchg
and
jno
neg
inc
xor
push
ds
hlt
ins
out
jnp
and
and
test
inc
push
xor
hlt
cli
outs
fidivr
fisub
or
les
cmp
jmp
push
cdq
add
cmp
ret
xor
xor
or
aaa
loope
adc
dec
and
arpl
adc
(bad)
in
jb
push
xor
lods
je
dec
adc
push
dec
or
sub
jno
sti
out
daa
fst
jmp
xchg
pop
jae
iret
test
xchg
mov
dec
sub
pop
dec
rcr
popf
cmp
and
dec
mov
push
push
popf
sbb
sbb
aam
test
push
adc
sahf
sbb
jge
pushf
jo
repnz
add
adc
out
cli
inc
sti
pushf
icebp
ror
fstp
add
dec
pusha
sbb
(bad)
push
bound
fild
data16
or
icebp
mov
aam
or
mov
jns
sub
mov
(bad)
pusha
pop
or
jnp
je
jmp
fisubr
in
mov
movs
rol
mov
pop
(bad)
cmp
xchg
pop
sub
jo
pop
aam
jmp
idiv
aas
pop
mul
daa
scas
outs
ins
xchg
(bad)
mov
fcmovnb
pop
pop
int3
mov
neg
mov
leave
scas
xchg
icebp
je
out
pop
data16
stos
int
(bad)
shr
leave
pop
or
jle
or
retf
in
sub
mov
xchg
mov
aad
mov
pop
sar
inc
and
cmps
dec
mov
sub
daa
mov
test
dec
aam
xchg
xchg
inc
test
inc
inc
sbb
inc
sbb
aaa
fisub
mov
cmp
xor
mov
and
sbb
pop
xor
fwait
push
jmp
xor
imul
test
jp
bound
jecxz
or
loop
xor
xor
in
jns
iret
es
or
sub
sub
jmp
call
pushf
rcl
dec
bound
retf
inc
or
jne
mov
dec
(bad)
div
ja
cmp
and
fcmovnbe
je
aaa
jae
daa
ret
push
bts
jmp
fsub
lds
add
inc
rol
jl
xchg
mov
pop
sti
push
push
fistp
ret
fwait
mov
lock
mov
hlt
xchg
jns
in
stos
fnstcw
stos
and
xchg
icebp
mov
pop
xchg
mov
ret
mov
mov
into
sbb
call
add
mov
mov
inc
test
or
xchg
mov
hlt
cmp
jbe
or
jp
hlt
xor
jmp
jmp
pop
pop
cmps
fidiv
mov
imul
scas
and
out
mov
clc
test
mov
cmp
jns
inc
mov
loop
xor
int3
sub
cmp
add
cmps
fs
leave
psllw
cmc
not
outs
aad
sub
gs
bound
addr16
fiadd
out
in
xchg
int3
test
mov
inc
les
aaa
mov
cmp
inc
mov
loopne
call
mov
ss
jl
call
xchg
inc
aam
test
sub
out
sbb
or
fidiv
jb
jns
pop
loopne
push
dec
mov
call
cmp
xor
jae
icebp
dec
enter
popf
fstp
mov
jecxz
loopne
mov
and
mov
cmps
mov
adc
ss
int
jge
(bad)
mov
and
jns
(bad)
fdivr
xor
jns
out
add
pop
div
mov
arpl
adc
(bad)
cmp
sbb
lods
xor
adc
test
adc
push
mov
in
pop
scas
pop
cli
push
push
nop
int
adc
lods
repnz
int
enter
push
inc
repz
mov
cmp
mov
fdivrp
in
(bad)
and
xchg
mov
pop
adc
clc
inc
aam
cmps
mov
add
push
push
xchg
sbb
in
cli
xchg
xchg
jl
sbb
sbb
jns
pop
add
outs
lods
aas
(bad)
(bad)
in
lahf
dec
pop
shl
or
xchg
fiadd
outs
add
shr
repnz
call
push
scas
pop
mov
jp
xor
dec
pop
push
adc
push
ins
cmc
xchg
jge
xchg
cmps
mov
es
leave
add
(bad)
std
test
imul
dec
add
cld
call
rcr
jnp
or
push
ror
call
mov
pop
dec
adc
movs
das
std
push
or
aad
pop
cmps
jne
inc
mov
and
jp
inc
inc
scas
mov
(bad)
and
dec
inc
lock
out
add
call
cmp
dec
mov
movs
xchg
call
enter
lods
mov
dec
movs
inc
add
fwait
loopne
aas
ret
inc
inc
jle
nop
fs
mov
and
sahf
repnz
addr16
jp
mov
js
sbb
into
repnz
add
jmp
add
pop
push
data16
pop
in
jnp
ja
dec
dec
fld
push
xlat
pusha
lds
push
or
repnz
jmp
pop
sti
(bad)
adc
jmp
push
push
inc
dec
dec
dec
mov
aas
vpmacsdd
pop
xor
mov
fwait
sbb
data16
ret
jmp
sub
in
or
and
pop
inc
ins
arpl
fnsave
ins
inc
dec
lds
inc
retf
pop
push
and
enter
and
ss
cmc
rcl
cmp
sti
in
xchg
cvtpi2ps
js
ja
sub
invd
push
adc
mov
mov
mov
shl
sub
imul
in
icebp
loopne
loop
sbb
fistp
inc
sbb
iret
out
and
sbb
int3
retf
repz
sbb
(bad)
rol
cmp
jne
dec
push
jno
test
(bad)
mov
xchg
out
in
mov
call
xchg
jge
mov
and
mov
lods
jbe
(bad)
cli
ror
rol
inc
and
add
jno
mov
mov
pop
add
push
sbb
dec
pop
mov
and
mov
jecxz
sbb
inc
push
mov
inc
mov
dec
in
imul
adc
rol
aas
fptan
mov
or
dec
addr16
into
dec
cmc
cli
sub
adc
sub
shl
rcr
leave
pop
fwait
lahf
adc
repz
dec
lahf
adc
jb
mov
pop
dec
jns
popa
push
aam
in
sbb
repz
ficomp
dec
arpl
mov
imul
mov
dec
jl
add
sahf
daa
add
or
hlt
repnz
dec
lods
jmp
and
div
or
stc
add
dec
sti
and
xor
(bad)
mov
bnd
mov
imul
scas
pop
add
leave
or
mov
and
hlt
inc
xchg
sbb
fwait
push
mov
fidivr
xchg
pop
(bad)
jg
and
mov
xchg
pop
pop
xchg
push
mov
add
leave
pop
aam
mov
ret
inc
aad
pop
inc
stos
or
push
or
mov
ins
fisttp
adc
mov
mov
ds
and
mov
pop
movs
pop
jnp
fcom
and
xsave
push
adc
sbb
jmp
inc
mov
retf
(bad)
jmp
and
scas
mov
sub
mov
mov
push
mov
fild
std
and
push
mov
cmp
sbb
pop
add
je
sar
retf
inc
pop
jbe
inc
jmp
dec
ret
arpl
in
dec
ins
jmp
inc
add
jmp
mov
stos
jmp
mov
mov
enter
mov
ret
sub
icebp
jecxz
adc
addr16
iret
jno
jno
ins
sbb
xor
adc
push
inc
daa
adc
fdiv
repnz
mov
adc
pop
xchg
mov
ss
xchg
cmp
(bad)
out
push
je
or
jmp
nop
add
add
sbb
retf
sub
rol
jg
mov
sti
dec
inc
xor
sub
fcom
mov
push
dec
enter
out
(bad)
pop
movs
fsubr
mov
add
xchg
test
xchg
inc
scas
stos
fwait
scas
xor
or
pop
xchg
dec
fwait
or
push
lods
push
(bad)
imul
(bad)
xchg
cli
mov
xchg
sbb
sti
mov
jg
sbb
call
xor
or
xchg
icebp
jge
adc
jno
prefetcht1
ins
(bad)
cmp
inc
inc
mov
fiadd
sbb
daa
mov
(bad)
test
sbb
aas
(bad)
push
mov
dec
add
push
(bad)
out
mov
aad
jne
fiadd
mov
or
jmp
imul
sbb
xor
fwait
adc
call
pop
sti
in
daa
inc
cmp
ret
pop
movs
in
sbb
fstp
out
mov
dec
(bad)
aam
sub
les
ss
or
pop
xor
push
fcomp
(bad)
lods
push
add
or
xchg
mov
imul
dec
out
pop
mov
fwait
scas
jbe
dec
fcom
out
cmp
jle
stos
fwait
jb
loope
push
jl
lahf
out
mov
push
call
dec
add
push
(bad)
(bad)
arpl
clc
xchg
xor
jp
jl
fisubr
mov
sbb
je
or
jp
push
daa
inc
mov
mov
aaa
inc
add
aad
mov
add
rol
out
dec
or
or
ins
inc
movs
ds
imul
pusha
fsub
push
add
and
cs
and
xor
inc
aaa
sbb
xlat
popf
sbb
out
test
xor
mov
cmp
arpl
dec
aaa
fnsave
loopne
sti
mov
call
jmp
adc
es
jmp
and
and
hlt
cmps
cmp
push
dec
dec
dec
jecxz
push
lods
ins
or
dec
adc
mov
je
lahf
or
push
xchg
jle
aas
les
popf
js
dec
sub
adc
ja
js
pusha
xor
dec
mov
adc
dec
adc
fnstsw
movs
push
push
cdq
test
ds
icebp
movs
mov
loope
lea
cmp
iret
loope
call
retf
adc
outs
xchg
xchg
xchg
add
add
inc
shl
sbb
mov
lods
pop
mov
mov
fild
popf
jns
xor
enter
or
loop
in
das
xchg
sbb
mov
repz
mov
frstor
sbb
das
stos
dec
lahf
sub
popf
ret
cmp
jb
push
sub
sbb
pop
xchg
and
addr16
dec
sbb
fdiv
xchg
cmp
int
ret
sub
adc
outs
pop
sbb
add
and
jge
sub
(bad)
add
out
test
jle
xchg
mov
imul
and
inc
and
inc
jle
jg
movs
cli
pop
jmp
adc
icebp
cmp
push
sbb
inc
jmp
mov
gs
sti
sbb
dec
cmps
dec
(bad)
jl
sub
jp
fisub
jmp
xchg
pop
(bad)
leave
clc
std
inc
jmp
xchg
add
sbb
mov
nop
pop
mov
test
xlat
lock
adc
cmp
fstp
jb
in
arpl
and
pop
outs
std
or
inc
mov
mov
shr
add
sahf
movs
or
aaa
std
pusha
ins
pop
in
jl
push
jnp
and
mul
adc
in
mov
cmp
push
jo
mov
mov
loop
cwde
jl
mov
pop
mov
adc
pop
inc
adc
sub
lods
cld
and
retf
(bad)
push
inc
push
repz
sbb
sti
fadd
dec
mov
std
out
outs
cmp
inc
ds
js
jp
sub
lea
push
push
loop
idiv
test
sti
lods
movs
sub
mov
xchg
pop
fdivr
push
or
fstp
fs
or
sahf
popa
call
movs
ja
pop
jo
xchg
outs
enter
push
add
add
pop
call
lahf
add
pusha
pop
mov
push
cmp
out
jns
aad
mov
cmp
sub
adc
pop
sub
movs
cmp
xor
inc
mov
data16
cmp
sub
enter
loop
pop
mov
push
or
xor
sub
mov
scas
loope
cmps
pop
jb
ror
push
rcl
idiv
loope
inc
div
icebp
mov
scas
sti
retf
and
push
aad
aad
std
cli
aad
jmp
rcl
ror
in
add
das
sub
retf
test
adc
push
ret
sahf
fnstenv
cli
cmps
cmp
mov
ror
fisub
sub
mov
xlat
mov
popf
bound
ss
out
js
popfw
(bad)
jmp
sbb
cmps
cmps
xchg
pop
pusha
loope
inc
cmp
adc
pop
xor
outs
push
jb
pop
mov
jns
cmps
and
xchg
repnz
std
mov
jecxz
adc
mov
sub
push
mov
into
loopne
stos
bound
mov
xchg
jle
mov
dec
adc
test
xlat
push
fidivr
push
pusha
fild
loop
xor
jecxz
mov
pop
test
jg
add
pusha
fst
fcmove
mov
jb
lods
fcom
xchg
rol
aam
ret
add
dec
icebp
cmp
lahf
push
cmp
push
enter
movs
inc
push
mov
popa
mov
(bad)
retf
fcmovnbe
adc
mov
jnp
clc
sbb
pop
movs
gs
scas
inc
xchg
jb
and
ret
rol
ret
sub
xchg
mov
mov
sbb
mov
mov
enter
xor
out
jno
pop
xor
pusha
mov
enter
ds
push
je
dec
jmp
mov
mov
sbb
pop
mov
les
icebp
std
push
xchg
les
pop
mov
ffree
ffree
dec
sbb
inc
retf
cmps
test
dec
push
fbstp
(bad)
gs
xchg
sub
mov
ins
sub
test
jecxz
cmp
mov
sbb
jnp
call
mov
xlat
popf
call
es
inc
in
cmps
fcmovnbe
imul
push
inc
and
leave
jns
gs
ins
or
lods
adc
jmp
rol
dec
enter
and
dec
jno
test
dec
mov
int
dec
sbb
or
jge
push
add
sbb
xor
jne
mov
push
push
enter
data16
jae
ds
fmulp
push
and
fs
shl
mov
pop
(bad)
mov
fsub
jecxz
jns
adc
cmc
jnp
aaa
mov
call
mov
int
ss
xchg
xchg
fmul
ret
push
pop
jnp
mov
push
sbb
in
mov
(bad)
sbb
push
sti
cmp
inc
out
xor
call
add
(bad)
inc
mov
jle
jle
inc
sbb
das
out
xor
(bad)
jmp
dec
int
data16
cs
dec
mov
ja
lods
ror
mov
sub
cmp
mov
gs
nop
les
push
outs
cmp
aas
jmp
add
shl
pop
adc
cmps
push
ja
stos
es
mov
hlt
dec
cld
sahf
rol
xor
aam
push
jb
mov
(bad)
add
retf
push
inc
mov
jns
jo
sbb
pushf
add
les
bound
xchg
sbb
ss
hlt
out
xchg
mov
mov
push
cld
enter
push
jb
lods
addr16
cmps
sub
cwde
push
or
aam
mov
sbb
loop
std
inc
fstp
mov
or
xor
aad
rcr
es
inc
xchg
sbb
dec
jl
cwde
(bad)
retf
fimul
pop
imul
popf
push
retf
xor
sub
adc
outs
push
out
neg
mov
in
adc
out
rol
pop
sbb
and
aas
je
xchg
cwde
mov
mov
dec
cmp
and
inc
and
jns
retf
mov
lahf
inc
sub
ret
or
inc
(bad)
adc
neg
push
je
das
mov
loop
jle
push
adc
xor
push
xchg
lea
jne
loopne
in
shr
mov
dec
and
clc
mov
fcmove
mov
out
mov
or
shl
cmp
sar
pop
dec
popf
jp
pop
mov
inc
dec
mov
idiv
xchg
sti
cmp
and
fist
mov
jno
cmp
mov
fs
mov
ins
add
ja
xchg
rol
call
paddd
jp
cmp
jne
icebp
pop
dec
stos
clc
nop
sub
cld
shl
sub
mov
lea
dec
bound
int
cdq
mov
jmp
sbb
rcr
xor
ror
je
fiadd
jp
scas
cmp
xor
fcom
lock
add
sbb
sbb
inc
pop
mov
stc
jl
ss
popa
fmul
xor
push
dec
push
mov
mov
push
add
mov
retf
mov
mov
addr16
retf
cli
pop
mov
lea
xchg
push
cmp
jae
jne
adc
test
stos
iret
(bad)
pop
mov
mov
mov
push
mov
mov
int3
cmp
dec
inc
cdq
pop
and
jg
inc
scas
adc
test
push
sbb
push
pop
mov
jae
stc
and
(bad)
push
aas
stos
mov
arpl
js
cld
pop
les
fimul
adc
or
(bad)
repz
imul
mov
sbb
loope
push
dec
push
inc
dec
arpl
mov
addr16
xchg
pop
out
jge
and
sbb
imul
popf
xor
fcomp
in
jle
or
(bad)
and
jmp
add
fmul
js
stos
jp
and
scas
xor
push
adc
adc
addr16
(bad)
xchg
add
out
aas
ret
test
idiv
pop
jns
loope
iret
mov
loope
nop
xchg
push
ficomp
arpl
xor
ret
xchg
push
cmps
mov
daa
cmp
test
gs
out
stc
and
scas
pop
dec
mov
loop
fimul
js
jmp
fmul
mov
test
retf
imul
ins
inc
mov
adc
and
jp
xor
sbb
mov
imul
clc
push
movs
popf
jb
mov
mov
sar
xlat
pop
int
dec
mov
pusha
lods
xor
xor
sbb
hlt
jae
sbb
leave
cmps
xchg
inc
cmp
popf
bound
sub
lods
xchg
dec
adc
xor
and
movs
scas
fsub
sub
sbb
xor
mov
loop
mov
xor
stos
push
mov
(bad)
(bad)
out
mov
data16
sar
test
adc
jmp
or
cmps
scas
and
ret
je
shr
mov
xchg
ret
adc
imul
push
sub
xchg
or
inc
jno
add
repz
sahf
popa
xor
or
adc
lock
cmc
xchg
inc
dec
sub
mov
sti
or
sbb
cmp
xchg
mov
dec
fidiv
push
fistp
pop
push
fcmovbe
rcl
xlat
mov
push
dec
mov
pop
mov
call
dec
add
mov
pop
inc
mov
sbb
lods
movs
rcl
xchg
inc
mov
mov
sbb
in
(bad)
sti
xor
out
inc
jmp
pop
sbb
push
xor
(bad)
jmp
dec
aam
sub
sti
fdivr
test
jnp
cld
inc
add
sub
nop
dec
sub
mov
push
ficom
rcr
fadd
pop
sbb
push
pop
cdq
cwde
dec
jno
jno
repnz
jge
ins
ja
mov
jbe
repnz
jae
mov
push
mov
mov
fld
cwde
jmp
inc
xor
jne
mov
popf
sub
lods
fisubr
rcl
das
mov
add
mov
jo
(bad)
sub
pop
pop
test
dec
dec
cmp
inc
cs
and
mov
add
mov
add
jae
rcr
sub
sub
not
add
mov
outs
stc
add
rol
retf
in
ja
sbb
iret
fs
arpl
pop
push
or
(bad)
ds
call
or
daa
xchg
adc
mov
adc
loope
pop
imul
sub
in
add
mov
ss
cwde
cmp
push
cmps
xor
rcl
xchg
neg
je
mov
jecxz
iret
adc
pop
mov
call
(bad)
jbe
out
and
stos
mov
sub
mov
ja
fcmovne
xchg
pop
nop
je
mov
(bad)
das
loop
shr
pshufw
pop
jns
test
xchg
mov
sbb
movs
retf
outs
mov
pop
dec
aad
add
cmc
cld
retf
jmp
cli
aad
aam
mov
dec
push
jmp
fisttp
lahf
mov
outs
cld
(bad)
sub
push
movs
inc
xchg
out
inc
das
xlat
mov
sti
inc
(bad)
sbb
cwde
arpl
shr
scas
fisttp
les
mov
pop
push
(bad)
pop
retf
int
out
pop
loope
push
fwait
and
std
mov
sub
les
jnp
cmps
mov
(bad)
stos
jo
cmp
push
sbb
lock
es
ins
push
jbe
ss
mov
mov
mov
push
sub
inc
cwde
outs
stc
pop
cli
lea
sahf
sub
lahf
(bad)
jno
mov
add
jo
cmps
push
inc
pop
sub
pop
idiv
mov
push
stos
icebp
jecxz
rcr
push
xchg
inc
imul
jmp
ss
(bad)
sbb
xchg
fiadd
xchg
inc
test
test
mov
mov
xchg
push
out
xor
out
xchg
lock
jb
scas
movs
jbe
gs
pop
and
out
into
fbstp
lahf
push
fdivr
ret
push
pusha
nop
leave
or
inc
mov
mov
sbb
in
and
call
sbb
rol
xlat
call
aam
xchg
sub
jno
bt
xchg
pop
pusha
(bad)
ss
in
sub
xchg
sbb
js
(bad)
je
test
cmp
mov
shl
jbe
popf
jbe
push
les
movs
adc
jmp
neg
push
cmp
ss
dec
sub
push
inc
jnp
jo
(bad)
push
jecxz
push
mov
inc
rcl
sti
repz
stc
out
repz
lahf
add
mov
dec
pop
xchg
into
fwait
not
mov
ins
xlat
(bad)
mov
js
ins
pop
mov
cdq
rcl
enter
aad
jl
cmps
jno
das
jecxz
icebp
sub
fs
push
inc
movs
loopne
test
or
xchg
dec
aad
clc
pushf
xchg
dec
jb
xor
inc
cmps
mov
lods
lea
jg
adc
cld
sahf
inc
xor
dec
les
xchg
xchg
sub
mov
pusha
jns
jmp
adc
in
pop
add
daa
or
adc
mov
push
ret
push
fisttp
xor
jo
and
(bad)
cmp
sub
cmp
adc
sub
sub
pop
sub
dec
repnz
(bad)
aaa
push
fucom
push
(bad)
pop
push
ret
inc
mov
cs
out
jge
cmps
dec
cld
xlat
mov
fsub
sar
into
xor
inc
stc
and
aaa
dec
add
cld
aad
inc
fst
cmp
mov
daa
mov
(bad)
out
shr
mov
jg
pop
push
mov
inc
pop
ja
push
dec
enter
addr16
in
xchg
ror
mov
jo
mov
add
sub
xor
fstp
fisubr
xchg
pslld
and
(bad)
ds
or
fstp
cwde
lods
aad
mov
mov
mov
pop
jmp
loop
mov
mov
add
pop
loopne
mov
in
fnsave
mov
adc
stc
in
xor
out
sub
outs
push
or
xchg
pop
adc
iret
and
out
retf
stos
push
cmc
push
pop
and
mov
xchg
adc
push
jg
dec
add
cli
and
add
mov
jbe
pop
fxch
ins
mov
adc
mov
stos
or
add
push
pop
lock
(bad)
rcl
cli
xchg
jne
pop
sar
jb
cmp
mov
popf
cmp
js
push
mov
ret
push
inc
cmp
je
cli
lds
sub
outs
adc
outs
cs
and
stos
sub
jle
ds
mov
xor
xadd
add
mov
sti
adc
mov
in
jmp
xchg
sub
cmp
imul
xor
ja
push
sahf
loopne
mov
fbld
data16
cmps
xchg
xor
mov
lahf
fistp
call
cmc
dec
ds
cmps
xchg
adc
out
mov
and
inc
pop
jecxz
cwde
push
out
push
and
popa
mov
(bad)
mov
sbb
shl
jg
movsx
fistp
xchg
pop
sub
aaa
cmp
cdq
stos
movs
into
jg
inc
sbb
lahf
sub
mov
out
test
cmp
adc
or
scas
je
gs
cld
stos
adc
cmp
cmp
mov
dec
pop
jns
fist
int
movs
jb
aam
mov
int3
adc
dec
stos
inc
popf
dec
jno
imul
outs
pop
jge
cmp
dec
stos
dec
outs
lock
out
aam
cli
xor
mov
iret
arpl
cs
enter
(bad)
loope
and
xor
mov
mov
mov
xchg
lahf
cmp
mov
xchg
aam
xor
retf
pop
cmp
jp
cmps
or
jg
lds
mov
bound
dec
or
dec
jo
test
outs
and
add
dec
jae
xor
pushf
enter
out
cld
xor
push
sbb
cmp
addr16
(bad)
call
xchg
add
outs
mov
mov
loopne
call
lock
dec
rol
stos
adc
cmp
sbb
icebp
add
loop
cdq
mov
mov
pushf
pop
inc
inc
rcl
push
lods
mov
xor
fcom
add
xor
movs
push
jbe
inc
out
vmaxpd
mov
icebp
mov
cmp
push
out
sbb
jae
mov
(bad)
adc
std
scas
push
in
cmp
(bad)
loope
cmp
repz
lds
cmps
test
xchg
mov
or
mov
jae
or
inc
add
sub
jmp
jecxz
mov
fwait
loope
and
pop
ret
retf
pop
dec
mov
les
adc
cld
fadd
in
fistp
dec
icebp
mov
jnp
jmp
jmp
or
jmp
mov
ins
pop
push
sub
xchg
loop
movs
loopne
sahf
jb
std
in
xor
fwait
jns
inc
in
test
fnstcw
inc
bound
outs
leave
mov
jle
out
pop
push
outs
fmulp
adc
cli
pushf
les
iret
or
bnd
xor
shl
rcr
pop
rcl
fwait
cmp
out
pop
addr16
jp
jecxz
lds
jae
push
add
imul
(bad)
shl
cmp
in
aas
ds
lds
xchg
push
mov
fmul
and
loop
arpl
stos
sbb
int3
add
aam
inc
adc
jecxz
pop
ins
je
mov
mov
stc
leave
xchg
inc
push
mul
adc
and
(bad)
adc
jle
xchg
sub
mov
mov
cmp
mov
mov
or
nop
cmp
push
adc
add
dec
aaa
cdq
jmp
enter
mov
sbb
or
xor
adc
push
pusha
fsub
sahf
imul
sbb
add
dec
je
push
mov
jo
mov
xchg
mov
xor
iret
sub
call
xor
or
bts
add
ja
mov
adc
push
mov
out
sub
mov
arpl
or
push
retf
jb
mov
cmp
dec
std
int3
int
jp
bnd
cmp
je
jg
int3
mov
dec
sbb
test
js
rcl
add
xor
out
lds
movd
rcl
mov
call
pop
call
loopne
mov
cdq
jmp
mov
cmp
mov
add
ins
mov
push
and
xchg
nop
rcr
cmp
pop
(bad)
push
fsub
sub
dec
mov
inc
jle
(bad)
fistp
jle
sub
js
adc
xor
retf
mov
loop
outs
add
xchg
pop
cmp
pop
xor
stc
inc
xor
cmc
adc
lds
and
pop
mov
xchg
aaa
sbb
xor
mov
movs
in
out
inc
ret
into
xchg
sbb
add
(bad)
push
xor
inc
jge
test
leave
sub
xor
js
call
mov
out
(bad)
mov
(bad)
jmp
xchg
sbb
sti
mov
lds
mov
cmp
xchg
js
xchg
push
add
cmp
cmp
lods
clc
cmp
mov
in
scas
push
addr16
push
mov
movs
jge
sub
xor
push
les
imul
(bad)
out
stc
jl
das
jmp
imul
xchg
lds
rol
fimul
outs
shr
movs
sahf
movs
xchg
cmc
and
mov
jg
xor
in
mov
imul
(bad)
xlat
sbb
fnclex
das
xor
xchg
push
jmp
les
movs
mov
cmp
sub
outs
imul
cmp
jnp
or
pop
lock
adc
int
push
cmp
adc
retf
bound
sub
sbb
pop
push
icebp
cli
gs
sahf
scas
inc
push
test
call
inc
or
cmps
pop
icebp
mov
pop
xchg
les
sbb
sub
imul
mov
mov
inc
mov
mov
or
add
adc
pop
sub
ins
mov
iret
adc
inc
ret
pusha
lea
mov
lods
sbb
aad
fild
mov
(bad)
pop
xor
scas
and
sub
mov
ins
in
(bad)
fld
imul
or
fstp
push
rcl
cwde
ret
test
loope
fcmovne
cld
daa
mov
nop
inc
mov
mov
lds
add
sub
imul
mov
ins
or
sub
mov
mov
popf
sbb
call
rcr
jge
pop
jge
scas
or
pop
xchg
lods
test
inc
int3
cld
test
cmc
lahf
in
jle
push
rol
jle
adc
mov
lea
sbb
fisubr
add
xor
fwait
ins
sbb
dec
out
fldenv
mov
in
cmp
push
sahf
fcmove
sub
inc
jo
adc
js
rcr
(bad)
dec
ds
mov
and
dec
or
pop
lds
leave
cmp
pop
jae
cmp
loop
ins
mov
dec
hlt
cmp
dec
rcl
int3
(bad)
bound
retf
jno
push
push
cdq
mov
in
bound
dec
imul
and
add
call
addr16
aas
push
push
pop
ss
add
mov
rcr
bound
leave
push
int3
pop
dec
iretw
stos
pop
cli
ret
or
js
push
inc
mov
xchg
mov
cmp
aas
adc
pop
jge
adc
aad
not
sub
ds
mov
rcr
sub
fdiv
adc
xor
jge
inc
jne
dec
test
retf
loopne
fisttp
fwait
test
xor
xchg
mov
mov
cdq
sub
stos
push
pushf
add
dec
jmp
ja
and
call
push
dec
sbb
xchg
cli
in
in
clc
call
in
js
mov
es
jno
dec
mov
mov
out
and
stos
adc
push
iret
mov
aaa
xchg
test
ret
xchg
xor
retf
enter
lods
adc
xchg
aad
add
push
cmc
test
ins
mov
test
int3
ret
jns
dec
inc
les
sar
loope
lea
inc
fcom
out
inc
loopne
and
outs
ds
xor
rcl
daa
cmp
cmp
cmp
outs
pusha
test
test
je
xor
mov
inc
repz
inc
mov
xor
push
gs
loopne
jp
pop
(bad)
pop
inc
xchg
mov
sbb
sub
loop
xchg
jmp
mov
mov
add
hlt
pop
add
sbb
dec
xchg
pop
scas
xchg
aam
fs
stos
retf
dec
inc
pushf
jmp
inc
push
or
mov
mov
sbb
inc
adc
adc
dec
push
outs
jae
test
inc
mov
sbb
mov
cmp
pop
es
inc
mov
inc
hlt
stc
push
adc
pusha
mov
sub
das
cmp
inc
rcl
ret
stos
mov
movs
pop
and
mov
sbb
jns
cmp
mov
push
js
mov
jno
xor
mov
aam
repnz
sti
dec
jecxz
sar
shl
cmps
jge
push
dec
movs
pop
add
(bad)
cmps
fwait
cmps
in
jae
fcmovnu
mov
lea
arpl
jmp
mov
or
shl
and
pusha
cwde
rol
dec
and
mov
jmp
in
lock
aam
icebp
cwde
mov
out
push
dec
xor
in
cli
xchg
(bad)
les
push
cmp
test
dec
loop
push
adc
or
jns
(bad)
int3
out
in
and
push
jp
pop
adc
repnz
mov
mov
outs
ucomiss
adc
push
mov
jmp
inc
cmp
or
mov
mov
pop
mov
mov
mov
scas
mov
xchg
xor
cmp
pop
ss
lods
pop
lds
jmp
pushf
movs
enter
adc
addr16
sbb
inc
and
lods
or
pop
fadd
mov
popf
push
or
mov
(bad)
addr16
std
xor
cdq
loop
sub
hlt
icebp
out
imul
ja
fsub
jl
and
fwait
push
adc
(bad)
cli
adc
ret
test
adc
jmp
jg
inc
pusha
outs
adc
fidivr
aaa
mov
mov
xor
test
and
mov
gs
xchg
fs
xor
pop
jno
add
fsubr
xchg
popf
mov
out
leave
adc
dec
or
pop
cmp
lea
nop
loopne
cmp
cmp
jmp
(bad)
xor
jnp
imul
(bad)
pop
dec
pop
cmps
div
bnd
xchg
push
jmp
sbb
jp
pop
pop
adc
popa
adc
mov
adc
pop
das
mov
pop
xchg
mov
sbb
jbe
inc
inc
retf
jmp
adc
xchg
into
jecxz
test
ret
loopne
sar
rcl
popa
or
movs
cmps
shl
stos
add
popf
cmp
or
push
sbb
ds
pop
addr16
not
sub
dec
ret
pop
adc
push
adc
xor
out
and
scas
adc
stos
inc
mov
retf
xchg
lods
into
push
adc
rol
idiv
sbb
ret
std
hlt
sbb
mov
mov
dec
hlt
ficomp
xor
mov
xchg
sbb
jl
pop
cmps
jnp
aam
cdq
push
mov
mov
loopne
adc
sub
mov
aaa
fisubr
sub
adc
loop
mul
jmp
test
loop
ss
or
(bad)
dec
sbb
test
scas
sub
adc
dec
adc
movs
and
loope
mov
sbb
push
add
inc
addr16
adc
scas
or
dec
and
jmp
xchg
test
mov
cmp
clc
ins
(bad)
iret
jbe
sub
jp
mov
popa
dec
mov
fld
adc
sbb
(bad)
push
ror
retf
pop
sbb
pushf
jle
jo
pop
retf
repnz
nop
enter
sbb
arpl
loope
mov
(bad)
push
push
inc
add
xlat
call
sbb
rcr
addr16
add
jo
jmp
mov
lds
mov
jbe
jge
cmp
pop
clc
test
xchg
cld
pushf
test
in
mov
push
xchg
repz
into
mov
ret
ret
shr
jbe
xor
mov
jb
aam
imul
mov
cmp
xchg
(bad)
int3
mov
adc
repz
rol
cld
jo
ret
out
js
jecxz
shr
dec
cli
sub
sbb
out
push
loope
cmc
pop
iret
outs
push
es
sbb
sub
(bad)
aaa
cmps
and
loopne
cdq
mov
mov
leave
mov
mov
jno
pop
nop
mov
pop
mov
cmps
test
pushf
call
fsubr
jp
dec
adc
and
inc
loop
out
fidivr
es
repz
scas
add
or
adc
and
pusha
xchg
sbb
xchg
pop
cmp
mov
mov
inc
jns
(bad)
pusha
adc
dec
test
sub
dec
stos
test
iret
movs
movs
lock
into
mov
stos
gs
test
adc
lahf
loope
mov
das
imul
lods
pop
push
ss
mov
pop
int3
movs
or
add
sbb
sub
sub
pop
mov
test
repnz
sbb
(bad)
outs
xlat
cmps
inc
clc
sub
(bad)
and
dec
ins
mov
jmp
fnstsw
loopne
push
pop
xchg
push
fiadd
lds
mov
jns
pop
out
mov
inc
ds
jbe
(bad)
push
xor
retf
out
mov
repnz
icebp
call
leave
cmp
xchg
fwait
sbb
retf
aaa
cmp
xor
push
or
push
out
sub
adc
(bad)
mov
or
sbb
cmp
xchg
mov
adc
lahf
mov
add
sub
aad
mov
(bad)
adc
mov
jl
dec
test
jl
aam
jnp
or
not
sbb
movs
cmp
mov
dec
fistp
xchg
sahf
imul
sub
mov
cdq
cmp
out
outs
jle
add
dec
ins
daa
inc
cmp
and
and
(bad)
jmp
cmp
retf
fild
mov
out
mov
pop
pop
retf
sbb
push
outs
add
pop
inc
stos
push
mov
push
or
or
jmp
ja
test
mov
fld
xor
loop
or
les
jle
push
imul
dec
stc
mov
loope
cmp
loope
fidivr
xlat
pop
outs
xchg
mov
mov
jbe
sbb
lea
mov
pop
dec
xchg
rol
push
leave
out
ja
and
out
xchg
mov
pop
scas
mov
jne
ds
sahf
sti
imul
cli
das
rol
in
ror
mov
ss
cmp
cwde
dec
xchg
sbb
jecxz
rcl
inc
stos
test
js
inc
push
sbb
sbb
mov
inc
rol
jmp
sbb
push
xor
dec
push
data16
jne
cmp
ret
sahf
clc
les
mov
add
adc
into
int
inc
outs
xchg
cmp
daa
sahf
xlat
mov
call
push
xchg
lods
xor
cmp
dec
xchg
lahf
cmp
lods
rcr
dec
push
dec
dec
mov
mov
sub
movs
mov
pop
jle
sbb
scas
std
sub
cld
xlat
jno
jecxz
xor
xchg
pop
sub
pop
ret
pop
mov
pop
clc
lock
dec
repz
in
sub
test
push
sbb
and
xchg
shl
fidivr
mov
mov
retf
rcl
dec
and
sub
lods
dec
adc
push
cld
repnz
out
fs
mov
or
xchg
test
mov
adc
pop
or
push
int
js
and
jmp
mov
mov
xor
(bad)
dec
jl
pusha
dec
push
pop
movs
dec
jl
and
fcom
push
cmp
into
ja
add
test
ret
and
loopne
pop
mov
add
call
ins
and
in
jbe
adc
sub
push
xchg
push
inc
mov
call
pop
mov
rol
adc
xor
data16
clc
cmp
push
shr
into
in
dec
mov
xor
or
jb
daa
popa
popf
xor
add
pop
mov
test
cmps
aas
(bad)
test
or
xrelease
pop
das
shr
push
rcl
dec
push
daa
aam
packssdw
daa
icebp
(bad)
adc
push
mov
push
inc
call
int3
retf
sti
push
mov
or
jge
push
push
daa
mov
shl
es
add
pop
and
test
(bad)
outs
pop
test
shr
nop
mov
jecxz
fisub
adc
cmp
mov
leave
outs
imul
fisubr
xchg
nop
or
mov
push
pop
clc
je
push
cmc
mov
and
or
jnp
xor
rcl
push
cwde
sbb
cmp
iret
icebp
xchg
dec
add
cmp
pop
sub
test
call
lea
pop
cwde
sti
das
out
test
fstp
add
js
mov
adc
(bad)
or
or
push
pop
aas
imul
inc
fld
das
xor
test
call
jns
add
mov
adc
mov
jecxz
mov
popf
sbb
idiv
mov
inc
dec
jle
dec
and
inc
push
inc
test
lea
mov
sbb
and
mov
icebp
popa
cmp
adc
cmp
out
popf
test
call
aad
movs
pop
ins
xchg
test
pop
jmp
adc
sub
adc
adc
or
jecxz
imul
adc
(bad)
xchg
fs
inc
cwde
leave
(bad)
push
sub
call
rol
and
mov
pop
xchg
push
push
inc
repz
(bad)
sbb
ret
and
and
in
mov
fsubr
adc
xchg
add
sub
int3
std
int3
scas
jl
outs
push
pop
cmp
aaa
(bad)
in
mov
lahf
xor
bound
ret
shr
jnp
and
je
mov
addr16
mov
dec
popf
jl
rcl
clc
fist
mov
inc
movs
(bad)
push
enter
inc
or
mov
inc
jo
leave
xchg
xchg
mov
jle
mov
fist
xchg
jmp
xor
or
cmp
jle
std
xlat
jns
ins
push
movs
into
fdiv
mov
push
popf
stos
dec
cmp
mov
mov
push
iret
repnz
lahf
xor
fdivr
into
xchg
inc
cmp
popa
ins
inc
movs
cdq
add
cwde
pop
dec
sbb
sahf
data16
add
xor
mov
gs
push
xchg
mov
jp
retf
and
jmp
jmp
fnstcw
(bad)
fstp
pushf
mov
mov
jmp
inc
or
inc
adc
leave
popf
outs
or
push
push
inc
arpl
sub
dec
call
and
mov
lods
ficom
sub
and
fwait
mov
cdq
jl
mov
mov
mov
lahf
sti
xor
and
pop
mov
jp
mov
imul
sub
push
arpl
test
mov
xchg
cmp
fisub
push
(bad)
mov
outs
test
mov
hlt
pushf
mov
push
shl
call
les
xchg
imul
cmps
(bad)
scas
jno
out
push
xchg
std
mov
xchg
call
or
int
pop
out
sar
out
dec
mov
mov
push
mov
les
adc
(bad)
(bad)
lahf
das
pop
sti
js
xchg
cmovo
mov
jle
lea
push
dec
push
mov
iret
jg
(bad)
jnp
stos
inc
cmp
jecxz
les
cmps
aam
sub
add
aas
inc
mov
ins
ss
adc
push
jbe
repz
push
mov
xor
icebp
xchg
(bad)
into
test
and
xchg
add
push
stos
loopne
fld
(bad)
stc
jnp
push
inc
xchg
mov
cmps
push
jecxz
fwait
das
jl
fmul
add
and
sbb
jecxz
add
jbe
repz
out
and
outs
jmp
test
pushf
daa
repnz
adc
scas
bound
fnstenv
ror
outs
push
push
(bad)
test
clc
inc
and
jnp
cmp
xor
pop
adc
mov
movs
xlat
ds
xchg
rcr
sbb
retf
add
scas
add
movs
rcl
mov
jb
ds
cmp
out
inc
add
pop
call
push
std
ins
int3
mov
mov
sbb
pop
call
fisub
mov
sub
rcr
push
xor
push
out
cmp
icebp
mov
mov
repz
mov
fidivr
outs
(bad)
adc
mov
push
outs
mov
stos
xor
fmul
dec
push
repz
jne
bound
jl
ror
repnz
add
pop
push
cmp
push
ins
push
jecxz
lods
sbb
ss
in
add
mov
inc
jmp
pusha
mov
adc
jae
pop
or
hlt
aaa
out
(bad)
in
cmp
mov
aas
add
sub
adc
stos
mov
inc
mov
sub
xchg
sub
jae
out
sub
pop
mov
outs
mov
fcom
imul
jns
(bad)
or
and
jnp
lds
ss
ret
cwde
mov
cmp
movs
in
and
jmp
out
mov
mov
jb
or
cmp
mov
cmp
mov
ins
aas
sbb
sub
jne
and
or
push
sqrtps
jg
adc
fs
stc
cmp
add
(bad)
cld
push
shl
mov
test
pop
mov
mov
(bad)
loop
add
jmp
mov
aaa
inc
jns
jmp
mov
inc
inc
push
in
mov
adc
push
fdiv
repnz
sub
pop
mov
cmc
in
push
test
sub
cmp
outs
loope
xchg
sbb
ds
daa
aas
lds
je
mov
and
es
push
mov
test
ret
fcmove
pop
push
push
mov
or
mov
popa
retf
ins
adc
dec
retf
imul
dec
pop
jge
xor
out
fs
inc
sbb
in
jg
pop
lea
stos
clc
arpl
shl
mov
mov
xor
sbb
rcr
jne
add
dec
jae
les
aaa
mov
outs
leave
mov
daa
jecxz
in
mov
xor
and
aas
sbb
push
nop
in
(bad)
mov
adc
pop
mov
or
sub
inc
adc
adc
scas
repz
out
mov
cmc
sar
scas
mov
jp
xchg
sbb
mov
mov
xchg
push
jo
mov
push
scas
(bad)
bound
shl
outs
jmp
addr16
ror
xchg
add
ror
mov
or
std
lock
cmp
pop
sub
retf
or
cmp
dec
mov
or
fist
xchg
out
out
sbb
std
aaa
cmps
adc
sbb
inc
out
ret
ja
cdq
retf
mov
and
rcr
dec
es
jne
nop
sbb
push
lahf
push
push
cmp
outs
lahf
retf
mov
ja
and
mov
dec
jg
push
mov
mov
hlt
out
out
xchg
cmp
gs
aaa
or
xor
xchg
sub
and
mov
cdq
jo
dec
adc
mov
movs
push
xlat
es
mov
xchg
push
ja
dec
sub
push
xor
and
leave
jle
imul
mov
cmps
pop
push
mov
adc
mov
or
arpl
inc
pop
xchg
fsubp
and
or
std
push
cmps
jnp
jno
dec
(bad)
lds
sbb
xchg
es
cmp
or
cmp
or
cmps
out
mov
mov
jmp
jecxz
push
es
cmp
jbe
jb
add
sub
fisub
sar
inc
stos
out
and
jnp
xor
mov
cmps
aaa
lds
mov
push
int
sub
out
adc
mov
adc
fwait
movs
cmc
pop
sbb
jno
cwde
js
mov
mov
mov
dec
mov
push
mov
sub
shl
out
mov
mov
mov
pop
jns
leave
dec
(bad)
aas
mov
push
out
and
repnz
pop
idiv
inc
cli
mov
jno
ficomp
sub
pop
xchg
(bad)
rcr
inc
mov
jnp
xchg
cdq
mov
mov
inc
and
shr
stos
sub
add
add
aaa
mov
jno
iret
ret
xor
scas
sbb
mov
add
dec
jecxz
push
mov
lea
jmp
shr
dec
fbld
push
in
sub
push
fdiv
popf
mov
add
das
fldcw
test
cmp
mov
shr
cmc
rol
sub
dec
call
sbb
mov
rcr
arpl
test
adc
std
inc
jge
xchg
dec
leave
dec
mov
mov
retf
imul
and
scas
mov
mov
inc
repz
sub
outs
in
cmp
or
pop
adc
add
jbe
(bad)
push
xlat
fmul
push
add
inc
adc
mov
or
stc
cmc
fnsave
mov
jmp
test
es
iret
leave
lods
cli
out
xor
add
jl
push
xchg
dec
and
stc
frstor
mov
test
mov
jg
sbb
dec
push
sbb
shr
cld
(bad)
fistp
stos
test
push
test
xchg
fistp
mov
and
push
jo
jmp
pusha
dec
in
cmp
mov
add
xchg
inc
loop
iret
je
js
out
jp
into
fidiv
push
pop
inc
(bad)
jmp
sub
cmps
push
pop
imul
sar
(bad)
aaa
je
adc
push
push
dec
arpl
loopne
test
dec
cld
fcomp
iret
je
inc
pop
repz
inc
in
sub
xor
rol
or
mov
cmps
ret
movs
in
jb
aam
sbb
add
repz
call
jbe
mov
out
je
icebp
idiv
add
lds
cmps
xchg
shl
aas
push
repz
pop
sub
mov
cmp
adc
inc
dec
stos
jl
lods
movs
xchg
and
mul
out
pop
(bad)
fnstenv
and
mov
sub
pusha
xchg
aad
mov
(bad)
addr16
mov
xor
mov
add
pop
jb
cmps
stc
mov
inc
cmp
pop
mov
inc
(bad)
stc
or
hlt
jecxz
pop
dec
imul
jno
js
mov
or
xlat
dec
jmp
push
adc
sbb
push
stos
add
push
sub
imul
in
xchg
cmc
jg
leave
xor
outs
int
fidivr
sub
push
mov
sbb
pusha
mov
aam
aam
nop
cmp
sub
jno
shl
cld
in
push
retf
or
imul
sub
xchg
iret
dec
mov
mov
lea
pop
xlat
(bad)
push
lock
xchg
push
mov
fisttp
sbb
loop
push
jmp
(bad)
xadd
in
cs
call
dec
loopne
pop
mov
stos
add
jbe
mov
addr16
jmp
xchg
js
shl
sub
jno
sub
mov
cmp
sbb
fst
add
mov
jp
cmp
stc
(bad)
lds
(bad)
jp
mov
aad
mov
ins
int3
mov
mov
ret
cmps
imul
jbe
pop
jb
clc
leave
mov
loop
dec
loop
cdq
cmps
mov
test
leave
adc
xchg
jmp
jbe
stos
and
pop
mov
loope
cwde
sbb
dec
mov
jecxz
dec
push
test
sbb
popa
xor
inc
jmp
lds
retf
pop
dec
sbb
pop
jb
and
(bad)
out
xor
sub
xor
icebp
adc
movs
jp
jno
sub
ret
aaa
add
sti
mov
or
dec
push
add
cmp
pushf
repnz
je
mov
ror
cmc
adc
jns
mov
fst
lock
faddp
jmp
mov
daa
rcl
data16
jae
cmp
xchg
jge
(bad)
cmps
fsubr
push
leave
xchg
lds
or
sbb
jae
cwde
inc
xor
lahf
push
inc
test
popf
xchg
jmp
mov
adc
or
cmp
cwde
outs
xor
mov
dec
and
jnp
or
fstp
aas
xchg
cmps
jmp
mov
inc
sbb
leave
pop
pop
fiadd
lock
test
(bad)
and
xchg
addr16
dec
das
add
and
ret
dec
outs
std
mov
inc
fidiv
mov
repnz
dec
pusha
les
push
cmp
xchg
sub
jg
nop
mov
lea
enter
addr16
add
out
dec
or
nop
jae
pop
fld
imul
mov
sbb
lods
cs
lods
outs
aaa
pusha
fstp
xchg
push
and
shl
icebp
push
aam
fisttp
jae
retf
sbb
xor
add
sar
cmp
add
loope
jo
mov
js
jl
mov
fiadd
adc
cdq
dec
sbb
into
pop
arpl
out
les
in
push
mov
inc
aaa
in
fimul
out
repnz
inc
mov
cwde
cmc
cmc
push
aam
jno
mov
(bad)
enter
in
lahf
sbb
jmp
sar
adc
outs
xchg
dec
lods
pop
mov
xchg
pushf
out
mov
fiadd
nop
pop
xchg
xchg
jo
loop
mov
pop
jne
adc
ins
repz
out
add
outs
aad
xchg
lods
and
repz
jmp
sbb
into
js
mov
pop
adc
std
aas
outs
popa
xchg
fwait
jae
push
mov
movs
push
arpl
das
test
mov
hlt
dec
rol
lods
mov
daa
(bad)
ja
jp
pop
pop
cmps
test
cmps
daa
sub
add
push
pop
cli
xor
(bad)
pusha
lock
jge
mov
jbe
and
sbb
xchg
jmp
add
sub
les
test
daa
pop
into
fwait
add
in
mov
add
rol
push
add
ficomp
xor
add
scas
xchg
xchg
out
test
add
jmp
in
in
rcl
shl
dec
adc
mov
add
inc
imul
dec
scas
xchg
cmp
out
popf
and
and
push
pop
sbb
xchg
(bad)
xor
add
lods
(bad)
(bad)
int3
and
sar
jge
or
loopne
cmps
inc
aas
mov
bnd
fist
cmp
xchg
aam
or
mov
scas
xchg
or
push
adc
pop
and
sub
ret
jmp
retf
mov
adc
mov
inc
dec
adc
or
(bad)
pop
and
mov
aaa
inc
(bad)
and
and
cmp
popa
inc
or
pop
sub
dec
rol
mov
push
or
inc
addr16
imul
jae
push
dec
sbb
cdq
outs
pop
push
pushf
pop
call
out
sar
aaa
push
data16
or
test
mov
and
dec
mov
pop
mov
dec
sti
cmp
add
iret
jg
add
rcr
call
(bad)
mov
cmps
fnstenv
xchg
pop
(bad)
mov
jae
cmp
jl
icebp
(bad)
fimul
call
pop
dec
(bad)
repz
test
out
loop
sahf
repz
aam
call
fstp
aad
shl
cmp
adc
inc
sahf
xchg
rcr
or
sub
push
sti
fidiv
pushf
test
out
sahf
fisttp
sti
repz
mov
push
popf
push
xchg
adc
cmp
fwait
out
repz
mov
dec
mov
xor
iret
pop
mov
sbb
mov
inc
mov
push
adc
iret
cmp
faddp
pop
mov
jo
adc
mov
inc
adc
out
(bad)
xor
ret
sbb
retf
cmp
cmps
retf
lds
lods
daa
hlt
jno
xchg
adc
cli
cmp
rcr
pop
mov
test
cmp
xchg
sbb
mov
popa
mov
inc
mov
push
and
jle
mov
aas
xor
fs
les
retf
loop
inc
inc
mov
xchg
add
mov
(bad)
adc
mov
pop
inc
push
leave
jno
ror
mov
(bad)
sbb
fwait
stos
pop
xchg
sub
mov
sti
xchg
movs
cmp
js
xchg
add
lds
fwait
aas
inc
fwait
popa
aam
push
iret
pop
inc
mov
scas
std
retf
std
sahf
(bad)
xor
aaa
xchg
mov
(bad)
jne
sbb
or
sbb
pop
pusha
inc
or
mov
and
dec
xor
test
into
daa
(bad)
out
pop
test
push
xor
jecxz
xchg
(bad)
call
sub
cmp
setnp
adc
ret
addr16
leave
lahf
jp
(bad)
fcmovb
mov
sbb
mov
stc
xchg
jmp
pop
xlat
or
(bad)
pop
(bad)
mov
mov
cmp
sbb
cld
sbb
xchg
xchg
lea
xor
enter
mov
rcr
mov
scas
ret
enter
jb
jnp
adc
mov
cmp
xchg
add
ret
pop
mov
push
in
sub
push
adc
ds
or
push
hlt
ret
cli
pop
jb
lahf
not
and
xchg
and
mov
sbb
jb
sbb
scas
inc
lea
loopne
xor
mov
jnp
mov
mov
into
lock
int3
loopne
add
mov
(bad)
fisttp
mov
xor
or
cmc
adc
and
inc
in
add
clc
push
xlat
push
ret
push
call
dec
lock
xor
pop
in
out
pop
or
not
mov
call
mov
adc
pusha
jecxz
cmp
sbb
jne
xor
test
mov
test
(bad)
jmp
jmp
out
add
and
mov
ins
fcmovu
test
xchg
mov
out
movs
or
sbb
mov
jl
mov
les
pop
out
leave
jb
dec
and
jmp
fimul
or
lds
clc
icebp
fwait
and
add
std
jl
sbb
push
xchg
fdivr
(bad)
adc
loop
pop
mov
mov
adc
sub
test
pop
popa
enter
mov
sahf
xchg
clc
das
dec
mov
call
arpl
mov
cmp
int3
adc
test
cmc
int
sti
(bad)
adc
jno
inc
cmp
mov
fld
leave
mov
aad
(bad)
inc
add
mov
cwde
pop
not
icebp
dec
call
ins
fucom
mov
fist
inc
lahf
xlat
mov
and
je
enter
adc
xor
test
sub
pop
dec
pop
mov
xor
jecxz
in
mov
dec
(bad)
retf
stc
(bad)
popa
pop
mov
jge
mov
xor
dec
dec
jae
adc
jmp
sbb
inc
rcl
or
jo
pushf
dec
call
mov
push
cmp
test
inc
into
out
sbb
imul
(bad)
mov
adc
mov
out
cs
out
loope
test
push
cdq
cmp
push
pop
sub
std
sbb
mov
mov
mov
inc
cmps
or
dec
cli
add
jmp
pushf
fldenv
arpl
push
rcr
(bad)
xchg
fwait
jno
inc
jmp
addr16
adc
lods
mov
loop
pop
leave
xchg
ins
push
(bad)
test
xchg
repnz
add
pop
mov
xchg
imul
outs
test
jnp
jnp
jmp
add
scas
mov
aad
pop
xchg
inc
cmp
mov
(bad)
(bad)
neg
mov
popa
int3
(bad)
repz
or
retf
clc
fstp
lock
xadd
inc
stc
(bad)
out
push
push
fldcw
pusha
xchg
mov
pop
and
xchg
fistp
xor
and
scas
gs
xchg
(bad)
lock
inc
sub
mov
cli
addr16
mov
xchg
jae
out
mov
pop
shr
push
test
pop
add
movs
sahf
and
inc
pusha
clc
jb
call
and
add
jl
in
cdq
jmp
push
out
sbb
jbe
mov
pop
mov
sbb
mov
and
fsubr
jl
out
jne
ins
int3
out
adc
sahf
out
iret
lods
dec
dec
ret
and
jae
daa
and
rcl
sbb
cmps
loope
mov
xor
sbb
loopne
add
je
jecxz
cwde
sub
sub
xor
jnp
cvtdq2ps
or
jmp
inc
idiv
cmps
fstp
fwait
jp
loop
or
pop
mov
xchg
sub
jmp
in
aaa
mov
test
call
loope
mov
mov
mov
adc
outs
xlat
sub
ss
pop
xchg
imul
fs
jo
and
aaa
or
movs
adc
cs
rol
loope
mov
jp
mov
scas
test
scas
addr16
and
adc
mov
add
aad
test
push
(bad)
aaa
fimul
inc
out
inc
mov
aad
push
out
ret
lock
cwde
js
cld
popa
ror
push
cwde
in
dec
pop
jno
sbb
fiadd
adc
clc
mov
adc
xchg
mov
ss
test
jmp
rol
push
aas
pushf
out
push
or
jbe
(bad)
lods
test
push
arpl
sub
mov
out
jge
lods
(bad)
fs
cld
mov
fs
mov
inc
mov
xchg
cmp
stc
xor
sar
xor
jp
cmp
mov
and
ret
cdq
neg
push
dec
sti
cmp
icebp
es
in
ret
mov
je
jmp
inc
cmp
sar
neg
test
jmp
push
add
ja
fst
xor
add
scas
pop
dec
mov
pop
ins
jmp
mov
cmp
jmp
shl
fistp
out
add
cs
gs
arpl
(bad)
repnz
clc
retf
movs
pop
xor
xor
fwait
jae
jae
rcr
sbb
int3
xchg
jae
cmps
pop
mov
lods
xchg
lock
pushf
mov
lods
ja
inc
in
inc
xor
fadd
addr16
fs
jmp
adc
icebp
gs
xor
cmp
mov
outs
sub
js
and
jp
movs
push
vpsllq
pop
daa
add
cs
lds
mov
add
int3
push
fdiv
mov
int
arpl
push
push
xor
or
push
xchg
xor
push
adc
imul
and
in
test
daa
push
stc
xchg
jnp
pop
mov
pop
sub
test
mov
sub
inc
or
je
ficom
xchg
dec
(bad)
or
dec
or
bnd
fisttp
xor
dec
pop
(bad)
(bad)
int
fwait
sbb
xchg
pop
hlt
retf
adc
into
aad
pop
shr
sub
dec
mov
pushf
jmp
xor
movs
mov
inc
jne
add
xor
cmp
mov
mov
jno
shl
mov
shr
fidiv
jecxz
push
pusha
mov
jb
or
loop
xchg
mov
(bad)
dec
push
jo
pop
mov
mov
xor
push
add
movzx
mov
dec
outs
lock
mov
(bad)
adc
inc
popf
jp
adc
sbb
fst
dec
loop
xchg
scas
jg
pop
icebp
push
cwde
jg
popf
add
add
fisub
adc
lea
mov
imul
fdiv
and
cld
lds
scas
movntps
pop
inc
inc
imul
das
gs
xchg
adc
lea
adc
sar
jae
push
outs
xor
dec
in
retf
add
push
fs
stc
popa
scas
aas
or
sub
jo
xchg
mov
mov
jbe
add
push
or
in
dec
ret
cmps
in
(bad)
or
pop
push
mov
xlat
test
aam
pusha
pop
and
cmp
clc
in
icebp
into
xor
cld
mov
(bad)
out
mov
mov
dec
repz
adc
ret
test
stc
cli
xor
outs
cmps
enter
out
add
xor
mov
scas
ret
jne
mov
cmp
fwait
mov
jnp
outs
pop
lods
push
push
mov
mov
imul
loope
mov
iret
stos
pop
cmp
and
test
add
sahf
push
(bad)
div
popf
(bad)
test
push
push
sbb
outs
sub
cmps
popa
push
push
pop
aam
mov
jne
loope
add
fldenv
cs
enter
inc
adc
(bad)
imul
aam
fidivr
loop
(bad)
adc
or
out
(bad)
lock
jg
out
sbb
popa
ja
mov
cmp
fisubr
jl
ror
cli
mov
push
mov
(bad)
popa
arpl
out
iret
mov
test
imul
call
push
jb
or
jae
cmc
pop
push
test
jnp
cld
xchg
jmp
fnstsw
and
int3
dec
adc
cmc
movs
movs
inc
cli
ds
stos
call
jnp
lahf
mov
sbb
stos
push
mov
mov
sbb
jae
add
xor
pushf
popf
push
adc
lock
popf
aam
mov
addr16
and
pop
fst
loop
push
mov
add
xchg
pop
add
pop
addr16
mov
clc
lods
ja
sbb
jmp
in
add
ins
loopne
pop
adc
ds
jnp
sub
jb
dec
fisub
ror
mov
dec
ins
daa
loop
stos
xor
and
adc
inc
pop
and
pop
lods
fcmovb
stos
or
sub
xlat
js
repz
mov
jb
sub
(bad)
aaa
(bad)
mov
loop
mov
add
scas
pop
fidivr
lea
dec
aas
push
clc
mov
push
mov
xchg
repz
fs
call
out
arpl
stos
sbb
pushf
aas
stc
push
cmc
pop
push
fwait
jl
jecxz
stc
xor
cmps
leave
and
shr
jge
movs
xor
(bad)
ret
or
push
and
inc
pushf
push
cmps
shl
pop
mov
or
rcl
aam
inc
outs
pusha
jae
retf
mov
scas
jle
imul
jno
std
les
test
push
cmp
dec
cwde
push
(bad)
mov
ds
sbb
test
hlt
test
inc
jmp
mov
cli
xor
ins
mov
push
push
or
movs
test
pop
and
push
cmp
sub
pop
xlat
ds
or
js
xchg
and
loopne
ror
ds
adc
(bad)
in
add
cmp
aas
and
add
dec
mov
shr
push
pop
adc
jo
pop
dec
sub
jle
fstp
loop
sbb
push
mov
dec
dec
(bad)
fnclex
pop
ja
cmp
fsub
or
(bad)
xchg
add
es
fsubr
adc
lods
(bad)
cmp
pushf
cmp
add
push
movs
cmp
aad
inc
in
push
gs
lods
das
adc
push
xchg
sub
js
push
(bad)
ffreep
mov
xchg
mov
add
sub
push
jne
popf
jmp
shl
pop
xor
js
scas
sbb
sbb
dec
adc
add
cwde
adc
and
scas
mov
xor
pop
pop
test
je
cmps
stc
cmp
fmul
adc
jne
push
fidivr
das
mov
(bad)
lods
mov
push
and
jae
movs
xchg
js
into
or
(bad)
jnp
es
stc
loopne
hlt
jge
xchg
push
adc
mov
nop
inc
dec
fs
pop
mov
xchg
jl
(bad)
mov
out
sbb
mov
mov
rcl
mov
in
pop
outs
dec
in
push
not
adc
mov
mov
add
xchg
int3
fcmovbe
(bad)
ret
sbb
std
sbb
call
imul
mov
imul
clc
mov
rcl
inc
and
push
lea
cwde
outs
cmc
sbb
xchg
in
push
cmps
xchg
and
test
cmps
mov
add
daa
jmp
jp
outs
inc
sbb
dec
sbb
mov
jae
mov
and
jno
cmp
das
scas
outs
aad
inc
jle
sub
cmp
neg
and
loope
xchg
outs
loop
pusha
lods
fild
xchg
sbb
adc
fmul
pusha
sahf
imul
or
sub
jmp
sub
mov
mov
xchg
dec
mov
dec
fwait
push
jno
lods
popa
jno
lods
jne
outs
mov
add
sar
sar
adc
xchg
add
jmp
pop
inc
sti
into
xor
pop
dec
aad
(bad)
pop
and
and
inc
loop
aad
hlt
imul
cmp
xchg
xor
dec
and
adc
cmp
ret
or
int
and
sub
inc
inc
dec
adc
dec
and
inc
cmps
retf
call
sbb
xlat
sub
stos
mov
and
jecxz
push
lds
xchg
aas
dec
mov
push
dec
out
xor
cdq
fist
out
retf
in
fist
hlt
jb
cmp
ins
das
fist
jne
sub
push
scas
xor
push
clc
imul
out
pop
popa
fisubr
adc
stos
mov
xor
add
xchg
adc
ins
mov
pop
and
je
sti
xor
into
push
cmp
pop
ror
xchg
clc
or
lahf
cmps
into
sti
repz
aad
fs
es
mov
hlt
push
jle
or
out
out
dec
and
out
adc
addr16
xor
fdiv
or
js
cdq
test
cli
adc
and
push
push
inc
(bad)
and
mov
inc
sub
rcl
mov
ror
repz
sbb
(bad)
ja
lods
(bad)
popf
outs
xor
clc
cli
xchg
and
jnp
mov
(bad)
xlat
inc
lahf
mov
(bad)
retf
dec
repz
ins
push
ret
in
je
std
pop
jnp
cmp
pushf
xchg
dec
push
add
clc
mov
lods
jnp
int
retf
jge
call
test
dec
arpl
add
cld
cdq
cmps
mov
and
pushf
jmp
mov
sub
mov
xor
ret
outs
mov
(bad)
jnp
sub
shl
mov
call
idiv
fcom
dec
jae
push
xlat
push
ds
fsubr
and
mov
sub
pop
out
add
out
inc
add
fs
sub
mov
mov
cli
jge
int
fsub
mov
daa
mov
out
(bad)
cmp
or
cmp
dec
movs
push
push
push
daa
in
in
lods
lea
push
push
scas
into
popf
daa
ret
cmp
popf
and
(bad)
mov
push
add
outs
mov
mov
test
mov
mov
jne
inc
in
cli
not
js
aad
imul
std
sbb
xor
push
ror
push
cwde
mov
arpl
das
inc
into
adc
push
mov
mov
sbb
mov
inc
iret
dec
cmp
mov
jo
pushf
dec
(bad)
fcomp
pusha
ss
retf
stos
inc
scas
mov
or
push
cdq
sbb
inc
xchg
pushf
xchg
sti
sbb
or
out
fwait
movs
xchg
and
loope
pushf
aam
sbb
sub
loopne
pusha
inc
jbe
mov
and
jmp
sub
cmps
xor
mov
stc
jecxz
inc
pop
fnstcw
mov
push
mov
mov
fcom
rcl
neg
or
mov
pop
loop
loop
sti
jle
xor
adc
cmc
ds
iret
push
cmp
outs
in
mov
inc
fcomp
add
jecxz
add
pop
ret
lea
clc
and
je
add
pop
dec
in
or
fist
mov
mov
(bad)
push
adc
movs
fiadd
add
cmp
jne
sbb
or
(bad)
jp
retf
xchg
add
jbe
inc
mov
mov
dec
loope
mov
push
adc
shl
pop
je
sub
mov
push
cmps
pop
(bad)
dec
add
push
imul
add
std
(bad)
cdq
sub
dec
jo
sar
int
sbb
dec
fwait
arpl
pop
fld
mov
imul
xchg
push
adc
fcomp
dec
xor
adc
push
jne
and
jge
xor
std
push
mov
dec
shl
dec
xchg
ret
outs
ja
popf
dec
std
popf
pop
xchg
cmp
or
push
int3
icebp
xor
lahf
mov
shl
in
xchg
cli
inc
aas
adc
sub
or
cdq
ret
cmp
jmp
cmp
stc
mov
mov
dec
rcl
push
leave
pop
inc
mov
cmp
cmp
inc
repz
inc
je
inc
push
repnz
mov
sti
pop
cmp
add
out
pop
mov
test
gs
or
and
or
dec
mov
jle
mov
push
dec
jno
sbb
cwde
lea
sbb
ret
push
inc
mov
mov
fdivr
xchg
add
fcmovne
fiadd
jmp
cmc
mov
pop
cld
pshufw
xchg
sub
and
push
int3
ja
jb
cmp
xchg
jbe
arpl
push
jbe
inc
xchg
xchg
cmps
ds
inc
jp
and
(bad)
ror
pusha
fcmovnb
aad
dec
mov
inc
cmps
mov
clc
sub
imul
xor
push
in
xchg
inc
movs
or
add
fld
out
ss
aaa
push
movs
xchg
mov
pop
sub
add
xlat
inc
stos
mov
jle
loop
lods
mov
jle
jo
and
pop
mov
(bad)
mov
cli
dec
mov
sbb
jp
cs
dec
outs
inc
in
movs
cmp
jmp
sbb
xchg
jmp
push
adc
jnp
inc
and
adc
push
test
jne
mov
iret
sub
mov
mov
aaa
jae
add
sbb
mov
jmp
fbld
dec
or
call
popa
cmps
es
imul
aas
call
dec
out
lods
pop
jge
mov
xor
in
pop
imul
push
(bad)
xchg
stos
rcl
mov
fwait
sar
retf
in
or
std
pusha
fidiv
jl
retf
(bad)
enter
clc
leave
sar
dec
fimul
sti
dec
push
shl
sbb
push
xor
popf
push
jecxz
sub
and
inc
pop
fisubr
dec
push
fs
cmp
and
out
xchg
add
scas
push
jne
(bad)
pop
mov
adc
mov
rcr
jns
aas
ja
dec
data16
push
pop
enter
fiadd
movs
xchg
xor
data16
gs
inc
es
clc
and
sbb
lahf
inc
fadd
test
test
in
(bad)
sahf
fcom
into
mov
mov
bound
dec
xchg
push
mov
pop
test
pop
push
das
clc
and
daa
mov
jmp
pop
daa
inc
push
jns
mov
add
jg
call
push
add
(bad)
icebp
fsubp
mov
jb
ret
push
push
push
mov
or
mov
inc
add
mov
and
pop
pop
out
(bad)
dec
icebp
sbb
adc
loopne
mov
(bad)
fistp
cmp
mov
(bad)
pop
retf
int3
pop
(bad)
sti
inc
out
ins
and
out
inc
rcr
ds
jmp
inc
popa
(bad)
out
call
mov
jle
dec
ds
in
push
add
sar
jge
jl
mov
lds
ja
test
arpl
ficomp
adc
sbb
inc
lock
cli
or
movs
in
mov
aad
jge
outs
pop
jo
sbb
mov
sar
cmc
sar
xor
test
inc
pop
shl
addr16
pop
loope
or
sub
es
push
addr16
loop
mov
sar
das
cli
adc
sub
stos
nop
jno
in
ret
jno
in
adc
xchg
mov
mov
cmp
mov
les
inc
dec
or
movs
ret
and
pop
enter
push
sbb
pop
pop
in
mov
sub
inc
daa
fs
xchg
push
sbb
shr
mov
sbb
add
mov
inc
sbb
rol
adc
cld
gs
mov
aas
in
fisubr
daa
mov
loope
test
call
and
shr
add
ins
outs
sub
(bad)
cli
loop
mov
out
lds
add
dec
les
adc
pop
jo
inc
mov
sahf
in
(bad)
int3
mov
adc
sbb
pop
imul
aad
pop
dec
enter
inc
jnp
inc
xchg
(bad)
jae
lods
enter
inc
and
sub
mul
loopne
shl
sahf
fwait
xor
xchg
xor
jmp
cmps
scas
mov
jno
dec
jmp
test
sub
int3
lea
inc
arpl
call
mov
adc
sahf
jmp
in
pushf
daa
cdq
inc
in
mov
or
repz
or
xor
jecxz
test
or
iret
sub
out
add
fnstenv
mov
aaa
ins
push
stos
iret
pop
pop
add
loopne
out
push
sub
loop
inc
nop
jo
(bad)
jne
cs
sub
add
dec
pushf
fcom
fwait
jae
nop
jno
(bad)
sub
sub
jecxz
push
push
push
jmp
ins
retf
xor
xor
xchg
outs
jne
aaa
inc
(bad)
mov
bound
push
cmp
cld
jne
jmp
call
push
call
sbb
mov
movs
mov
push
gs
adc
fcmovnbe
cli
scas
iret
sub
ss
jns
es
sbb
out
xchg
stc
adc
mov
not
cmp
or
sahf
js
cmp
das
mov
mov
scas
xchg
inc
inc
jo
pop
push
addr16
stos
sbb
lods
mov
pushf
pusha
mov
mov
ret
mov
ins
adc
push
adc
sub
pop
jecxz
adc
arpl
imul
fwait
movs
xlat
out
fadd
cmp
pop
(bad)
or
xchg
fbstp
cmps
pop
sbb
xchg
int3
ins
sbb
add
adc
mov
dec
mov
repnz
mov
sbb
arpl
add
rol
sbb
dec
pop
shl
mov
add
push
int
aad
jb
xchg
sub
test
mov
cmp
ja
inc
jl
xchg
jb
xchg
in
fwait
push
xor
xor
inc
jecxz
rcl
(bad)
cmps
lea
mov
dec
xchg
jmp
dec
xchg
pop
je
jle
inc
(bad)
dec
xchg
popa
push
rcr
(bad)
push
sub
test
cmp
or
cmp
mov
mov
xchg
dec
pushf
add
scas
outs
sub
jmp
adc
mov
mov
rcr
xor
das
cmp
add
mov
mov
and
dec
mov
xchg
dec
adc
movs
jne
push
xchg
int
sbb
xchg
fwait
xor
xor
outs
imul
inc
repnz
mov
lds
push
xchg
mov
or
mov
or
xor
js
mov
adc
cdq
fsub
stos
adc
pop
loop
cmc
adc
jg
cwde
push
pop
jecxz
(bad)
fbstp
mov
cmp
cmp
nop
xor
ds
mov
ins
arpl
add
mov
sub
and
dec
add
jbe
pusha
mov
mov
cmp
mov
or
inc
cmps
mov
dec
loop
aaa
imul
(bad)
aad
pushf
push
mov
jne
xchg
test
sbb
(bad)
jne
gs
fstp
mov
inc
and
addr16
adc
dec
retf
jno
pop
jp
test
js
cmps
sahf
retf
dec
xchg
pop
mov
dec
sub
movs
adc
fxch
outs
push
inc
in
test
int3
pop
hlt
(bad)
in
jecxz
out
iret
adc
mov
fldcw
rcl
sar
imul
jne
das
jns
iret
inc
mov
jge
fwait
test
xchg
outs
dec
push
pop
mov
sti
push
popa
sar
inc
rcl
and
into
xor
retf
add
mov
imul
arpl
out
dec
mov
dec
push
and
movs
inc
idiv
in
das
adc
jg
mov
dec
dec
mov
loope
adc
hlt
icebp
sub
inc
(bad)
(bad)
in
fld
xchg
lock
scas
cmp
jns
sbb
sbb
cdq
add
mov
jne
mov
loope
rol
push
pop
ror
jae
inc
mov
inc
cwde
fiadd
push
adc
(bad)
ret
loopne
adc
aad
jmp
cmp
mov
mov
push
jp
pop
(bad)
xor
inc
scas
movs
je
cmp
pop
pop
loopne
pop
cpuid
mov
xchg
sbb
jo
cmp
sbb
sbb
xrelease
inc
add
jmp
pop
or
xor
clc
mov
jge
add
mov
xor
neg
call
cmps
push
ret
pop
out
gs
sahf
inc
pop
add
in
sub
jg
sbb
pop
in
cmp
sar
popf
dec
or
mov
add
mov
xchg
out
add
xlat
adc
jecxz
sub
inc
xchg
dec
sub
sub
mov
scas
scas
xchg
ja
mov
jnp
movs
sbb
pop
out
and
mov
push
and
dec
fs
call
scas
or
fisubr
dec
sar
fistp
lods
pop
adc
inc
xchg
jecxz
(bad)
pop
jmp
adc
and
xor
stos
enter
out
pusha
movs
pop
xor
mul
(bad)
sahf
push
stc
bound
pop
adc
daa
(bad)
cmp
mov
mov
das
shl
and
cmp
idiv
xor
int
adc
xchg
fsub
pop
fimul
sbb
sub
pop
sub
pusha
call
mov
gs
or
and
gs
pop
jb
pop
test
scas
bound
xchg
xor
push
and
fadd
or
pop
and
pop
aaa
es
sbb
and
test
aam
sub
ss
pop
xor
cmps
icebp
inc
test
call
clc
mov
adc
lock
mov
arpl
pop
pop
daa
ins
hlt
(bad)
stc
mov
(bad)
test
nop
mov
std
pop
aam
sub
int
xor
je
xchg
lds
hlt
dec
cmp
pop
xchg
ds
jg
imul
stos
and
pop
jnp
push
mov
movs
xchg
jg
retf
int
shr
sbb
ror
neg
mov
out
scas
mov
sub
(bad)
out
jl
jne
inc
jmp
push
sbb
mov
mov
xor
push
sbb
mov
leave
jnp
xor
pushf
push
test
daa
mov
fcomp
cli
sbb
pop
movs
and
inc
fwait
das
into
xor
or
push
retf
mov
fstp
jbe
cdq
pusha
cmp
xlat
lods
outs
(bad)
retf
sbb
xor
mov
in
add
adc
fldcw
sbb
outs
jbe
ss
stos
mov
shr
movs
cmp
sub
push
push
or
je
sub
xlat
clc
xchg
test
push
pop
outs
js
leave
ret
test
or
xchg
jmp
xchg
sbb
mov
dec
(bad)
fcom
or
test
inc
pop
sbb
and
cmp
mov
fist
les
scas
adc
pop
nop
pusha
pop
cmp
imul
ret
mov
fsub
daa
fisttp
pop
jb
xor
mov
jle
test
inc
cmp
sar
dec
adc
mov
punpcklbw
rcr
mov
in
or
adc
not
fld
pop
mov
xor
fmulp
mov
sbb
fcomip
popa
sub
mov
jmp
push
fdiv
push
inc
inc
repnz
jmp
pop
(bad)
imul
xor
rol
shl
mov
mov
sbb
xchg
push
loope
out
aaa
jmp
jbe
ret
loop
pusha
mov
and
and
inc
xor
xor
icebp
cmp
pop
mov
sbb
inc
out
dec
jmp
sahf
cmp
cs
lods
cmp
stos
jge
mov
fwait
or
adc
cmp
rcl
or
cwde
mov
scas
xor
mov
jb
fadd
pop
dec
lea
push
jle
mov
jns
bound
(bad)
adc
mul
jno
(bad)
fdiv
mov
mov
dec
mov
imul
dec
loope
hlt
enter
das
xor
and
push
fld
sbb
pop
jbe
int3
cmp
adc
cmp
mov
mov
ss
in
push
or
xchg
loope
popa
adc
imul
mov
icebp
out
in
sbb
dec
jns
xor
fxch
jmp
and
inc
mov
mov
ins
gs
mov
into
dec
retf
pusha
(bad)
inc
adc
repz
ret
xchg
stos
sub
mov
fild
inc
sbb
jle
out
or
mov
push
dec
jns
loope
cmps
dec
adc
clc
xor
xor
pushf
mov
push
dec
in
and
pusha
iret
add
mov
xchg
adc
iret
push
test
mov
push
lods
sbb
je
and
stos
nop
cmp
ret
mov
jmp
cs
or
scas
and
and
mov
imul
mov
adc
gs
mov
jns
js
push
mov
mov
pop
scas
jno
out
(bad)
mov
bound
test
into
or
cmc
sbb
push
lea
xchg
mov
ss
or
fsqrt
xchg
jl
shl
(bad)
xchg
jmp
retf
repnz
clc
jbe
imul
cmp
xchg
and
dec
mov
xor
(bad)
xor
int3
rcr
fnstcw
adc
test
mov
int3
pop
sahf
pop
push
mov
pop
jmp
pop
aas
and
jp
push
or
fwait
leave
jne
mov
clc
mov
and
lds
sti
cdq
adc
jl
movs
ins
mov
imul
push
aaa
push
pop
push
dec
xor
push
and
mov
ins
xchg
push
mov
int
add
enter
push
aam
in
xchg
fdiv
adc
push
xchg
dec
sbb
sbb
push
arpl
into
xchg
sti
scas
dec
and
into
shl
mov
loopne
jmp
adc
push
add
aad
ins
test
pusha
add
push
fs
call
lahf
ret
pop
mov
pop
retf
pop
js
ret
push
dec
mov
loopne
add
push
xchg
pop
fiadd
mov
test
xchg
retf
fidiv
push
jae
and
out
inc
mov
popa
mov
xchg
and
xchg
jbe
inc
ins
std
adc
cmp
mov
add
xor
fs
or
hlt
lods
std
pop
pop
xor
mov
icebp
cmp
nop
data16
test
fild
xor
xor
xor
(bad)
in
jp
or
dec
add
cwde
enter
push
jno
inc
jp
lds
dec
lock
outs
mov
dec
cmp
push
xchg
out
jge
in
in
and
fcomip
movs
dec
imul
cmp
and
pop
cmp
push
mov
ja
pop
sbb
outs
lock
xor
in
test
jns
mov
les
add
cmp
inc
lds
or
(bad)
pop
daa
adc
arpl
dec
fs
popf
retf
pop
aaa
sbb
test
fnsave
sub
push
lea
jmp
bound
pop
pop
push
test
xor
loopne
or
inc
sbb
sub
adc
cld
fs
mov
js
sbb
or
jo
inc
psrlw
sbb
ror
dec
push
stos
addr16
inc
adc
push
pop
cmps
mov
pusha
push
jae
inc
mov
ins
sbb
push
sbb
xor
xor
out
stos
dec
loope
call
or
cmps
xchg
adc
cdq
push
test
push
je
out
fwait
jle
ss
pop
mov
dec
sar
repz
lods
rol
jne
inc
fmul
hlt
jb
std
mov
jle
faddp
jbe
adc
mov
mov
xor
loopne
fnsave
inc
xchg
jo
sbb
push
(bad)
fisttp
dec
jmp
mov
inc
test
xlat
arpl
imul
fadd
xor
jg
sbb
pop
jb
(bad)
lds
xor
mov
sub
pop
sub
adc
or
and
xchg
out
xchg
jp
mov
out
sub
pop
pop
inc
int
ja
inc
ror
sub
sub
dec
out
(bad)
out
int3
cmps
(bad)
cmp
fbld
add
gs
mov
mov
dec
nop
and
push
aam
clc
pop
cmp
jl
xchg
add
mov
int
push
(bad)
clc
int3
scas
and
shl
add
loope
aaa
rcl
add
xchg
jg
scas
sub
jbe
xlat
retf
scas
sahf
imul
shl
or
lea
add
sbb
ror
xlat
adc
hlt
sub
and
mov
les
sub
pop
mov
push
mov
arpl
shr
push
test
pop
xor
sub
dec
ret
or
inc
imul
and
pop
ret
ror
mov
iret
inc
inc
adc
push
(bad)
xchg
xchg
cli
fcomp
test
dec
xchg
test
popa
outs
fidiv
inc
rol
ds
xor
pop
cwde
popf
jae
jg
push
jle
xchg
sub
inc
mov
or
cmp
jmp
gs
push
push
add
nop
lds
sti
cmp
add
popf
cmp
inc
(bad)
mov
iret
movs
push
es
jp
jp
stc
pop
dec
pop
xor
repnz
mov
adc
pushf
mov
sbb
mov
mov
cmps
push
jo
lahf
or
inc
and
std
xor
(bad)
gs
in
cld
cmp
scas
ret
xchg
pop
call
lods
fisttp
jns
add
scas
shr
out
adc
sub
stos
add
cmps
xchg
push
add
(bad)
aas
dec
scas
fs
push
cmp
ds
aam
shr
mov
sbb
xchg
push
cmps
push
inc
stc
mov
mov
pusha
adc
mov
and
mov
cmp
ja
sub
out
dec
retf
out
pop
push
pop
shl
leave
sub
in
fstp
cli
mov
aam
sub
inc
retf
pop
cmp
and
(bad)
popf
push
(bad)
out
retw
push
mov
adc
mov
push
push
pushf
push
mov
(bad)
(bad)
mov
jnp
or
popf
sbb
adc
(bad)
in
cmp
fld
les
cmp
xchg
push
or
lahf
outs
sbb
xchg
cmc
jmp
pop
(bad)
data16
cmp
push
xchg
and
jge
pop
ins
push
or
rol
jmp
fcom
inc
stc
or
add
sbb
test
mov
add
xor
inc
xchg
cmp
(bad)
ret
inc
and
idiv
ret
add
fs
mov
js
fxch
in
lods
not
outs
pop
jmp
data16
cmp
(bad)
in
mov
mov
cwde
stos
pop
inc
sbb
or
mov
xchg
dec
adc
imul
hlt
sti
loop
cmp
test
loope
loopne
add
loopne
iret
retf
xor
push
add
and
adc
ret
pop
cld
mov
xor
jecxz
cmp
dec
inc
enter
ja
dec
lahf
lds
aas
mov
mov
popa
xor
mov
shr
jno
jmp
mov
scas
fnstenv
movs
mov
mov
push
(bad)
cmps
and
adc
sbb
mov
int3
fld
jmp
retf
(bad)
mov
inc
out
ret
jo
and
sbb
cwde
fdiv
pop
dec
add
je
lods
iret
mov
xchg
sub
(bad)
mov
add
push
cmp
sbb
outs
dec
jnp
mov
call
out
es
ffree
mov
cli
push
cmps
jmp
sbb
aas
sub
pushf
ins
adc
xchg
stc
fmul
shl
dec
imul
ret
pop
mov
mov
mov
icebp
repnz
mov
inc
lods
shr
popa
mov
sbb
test
and
adc
add
xor
push
sub
outs
pusha
mul
cld
pop
call
push
push
jb
pushf
lds
cli
xchg
daa
ret
pop
cli
push
int
cmps
xchg
inc
xor
jae
jg
inc
mov
push
scas
cmp
leave
pop
popf
dec
out
loope
inc
dec
add
and
and
mov
pusha
ret
shl
mov
dec
stc
fld
cmp
pop
and
scas
xor
(bad)
mov
cmp
fs
ins
ss
fstp
ins
stos
fnstsw
pop
arpl
pop
test
dec
push
fldcw
call
sub
and
xchg
jno
aas
cmp
sbb
iret
ja
out
jle
lahf
cmps
sub
lods
mov
dec
in
cmp
cmp
push
iret
fcomp
sbb
mov
add
lea
or
add
mov
dec
ss
and
test
push
pushf
in
push
or
int
test
adc
call
inc
pop
ins
push
movs
adc
pop
cmp
cdq
jmp
or
dec
push
xor
aas
mov
inc
sub
inc
push
cmps
rcr
leave
and
retf
rcl
shr
mov
pop
xchg
adc
rcr
mov
jbe
(bad)
xchg
loop
outs
scas
shl
ret
shl
pop
in
mov
test
add
and
sbb
jmp
push
xchg
cmp
dec
cli
stos
fisub
mov
mov
xchg
outs
loope
adc
pushf
fstp
xor
mov
ss
mov
xchg
in
retf
xchg
or
xchg
int
mov
mov
adc
mov
add
push
out
pusha
fs
adc
xor
xchg
lahf
loop
fnsave
mov
dec
out
inc
and
test
and
jno
or
cmp
cmp
sub
(bad)
rol
pop
cld
jge
inc
or
int
in
sbb
or
push
(bad)
mov
test
push
out
popa
ss
enter
(bad)
mov
into
fiadd
shl
movs
mov
shr
cmp
call
(bad)
movs
fcom
cmp
xor
(bad)
jmp
lods
fsubr
fdiv
or
aam
fcmovb
jle
sar
ds
stos
cmc
xor
rcl
add
fisub
mov
inc
mov
int
ds
sbb
leave
mov
inc
arpl
jae
cmp
xchg
mov
ss
sti
mov
and
jno
mov
jl
push
adc
xor
dec
jp
inc
addr16
sbb
add
cmp
cmp
adc
ret
dec
rcr
iret
add
and
inc
ficom
out
push
add
inc
shl
popa
xlat
sub
cmc
xor
jmp
es
dec
je
enter
test
mov
int
push
lahf
pop
inc
(bad)
fistp
mov
adc
test
cmp
add
aam
aad
jae
xor
out
in
enter
adc
rol
jns
pop
cmp
call
test
mov
ret
aam
xchg
jl
cs
and
(bad)
movs
pop
arpl
movs
add
inc
pushf
ja
sti
mov
mov
aaa
pop
das
cdq
fcomp
test
arpl
mov
pop
leave
lds
and
inc
shl
pop
pusha
in
pushf
or
cli
pop
and
push
inc
pusha
(bad)
popa
xor
dec
sub
pop
jmp
push
je
xchg
ds
push
pop
dec
popaw
xchg
xchg
sbb
pop
fwait
cmp
adc
adc
or
dec
and
iret
pop
(bad)
and
sub
(bad)
div
(bad)
ins
cmps
push
test
fcom
xchg
ss
mov
xor
(bad)
cmp
stc
add
(bad)
mov
call
daa
scas
fisubr
rol
mov
push
adc
clc
mov
(bad)
mov
xor
xchg
in
add
mov
adc
fwait
push
inc
ins
sub
aad
js
inc
jmp
jl
mov
or
aas
std
mov
or
pop
je
push
xor
imul
adc
jae
mov
cwde
cmps
cmp
adc
sbb
add
inc
retf
stos
mov
xchg
fcom
sbb
mov
xchg
pop
leave
and
inc
xchg
(bad)
aam
xor
push
ss
push
sbb
cdq
xchg
inc
aam
push
or
jo
test
adc
addr16
iret
push
push
repz
popa
popa
mov
jg
and
(bad)
xchg
test
cmp
pop
das
or
pop
ret
jns
adc
jno
inc
loopne
sti
(bad)
ss
sbb
cmp
sbb
xchg
in
scas
and
iret
and
and
fcomp
mov
push
xor
leave
test
out
jl
push
push
pop
(bad)
repnz
clc
aam
inc
rcr
xchg
add
push
cmp
pusha
dec
sub
inc
neg
dec
pop
adc
cmp
mov
and
and
mov
enter
clc
jl
loope
mov
ret
ss
popf
pop
pop
add
and
jmp
out
icebp
rcl
cmp
or
cmps
shl
jmp
cmp
sar
outs
mov
out
jno
jne
cmp
xchg
sub
out
xor
int
inc
jb
iret
add
or
(bad)
or
fcom
aas
mov
fldlg2
jb
es
aad
in
and
sub
mov
mov
xor
in
pushf
pop
and
shl
fadd
xchg
push
lds
adc
sbb
aam
loop
mov
push
xor
xor
vsubsd
push
shr
ins
call
jecxz
mov
sbb
xchg
popa
dec
sbb
dec
(bad)
sbb
push
mov
add
add
stos
es
inc
ins
sub
sub
pop
sahf
inc
jbe
sbb
inc
cdq
in
push
push
cmps
push
sahf
sub
adc
mov
movs
mov
in
cmp
mov
sbb
jmp
sar
sbb
out
mov
mov
(bad)
repz
cmps
(bad)
es
retf
add
and
jne
dec
in
fnstsw
retf
xor
or
add
sub
fwait
pushf
jo
push
mov
lods
scas
inc
pop
add
or
jecxz
jae
popa
leave
test
leave
add
dec
stc
mul
sub
mov
fs
xor
(bad)
cmc
dec
data16
pop
or
xchg
dec
out
adc
push
jmp
add
dec
aad
into
xor
cdq
jb
outs
outs
push
sub
sub
repnz
test
outs
and
inc
push
add
mov
cmp
sbb
and
daa
push
push
mov
fmulp
xor
sbb
mov
cwde
xchg
sub
inc
cmp
pop
mov
out
mov
int
rcl
jmp
test
test
jl
jbe
retf
xchg
xchg
push
pop
fisttp
fnsave
lock
lahf
jnp
ins
call
and
call
push
stos
mov
mov
push
or
mov
ret
jle
xchg
xchg
nop
mov
jae
adc
arpl
pusha
(bad)
out
leave
pop
pop
pushf
loopne
mov
sub
enter
push
ret
scas
data16
out
mov
mov
pop
movs
push
sbb
mov
sahf
mov
or
jmp
jbe
mov
shl
(bad)
xchg
adc
mov
fwait
ret
jnp
or
sub
sub
adc
push
shl
mov
xchg
jns
fld
inc
in
xchg
and
pop
pop
add
push
movs
jge
dec
or
mov
popa
mov
adc
ja
inc
stc
mov
int
xchg
loop
push
add
sbb
cmp
lock
cwde
mov
rcr
push
push
jae
push
scas
pop
cmc
xchg
(bad)
mov
dec
inc
mov
add
mov
test
retf
dec
sbb
and
(bad)
(bad)
jecxz
jmp
adc
popa
mov
icebp
call
icebp
mov
rol
loope
mov
mov
popf
mov
sar
stos
add
pop
sbb
sahf
dec
(bad)
sbb
sub
lds
stc
jl
aas
and
shr
xor
jle
jecxz
cmps
and
sbb
jae
fwait
sbb
sahf
sub
stc
pop
aaa
aam
bound
dec
fst
or
jns
out
pop
inc
dec
loop
and
or
xor
mov
mov
sbb
pop
push
imul
inc
stc
push
sub
adc
ret
fcmovb
xchg
or
mov
cmp
pop
aaa
lahf
aaa
xor
sub
mov
push
adc
jo
mov
stos
and
pop
pushf
fwait
test
popf
cli
cdq
cs
push
push
sbb
aaa
jecxz
mov
cmc
scas
test
xor
mov
in
ins
loop
cmps
mov
adc
push
xchg
aam
sub
fstp
mov
iret
mov
inc
das
dec
icebp
call
mov
popf
mov
add
push
mov
fcomip
lea
js
ret
scas
xchg
mov
jmp
retf
pushf
cmp
inc
test
jbe
leave
pop
jae
rol
fldenv
bound
sahf
xor
mov
mov
sub
pop
out
in
cs
jle
loope
adc
mov
fstp
scas
and
(bad)
sub
pusha
cmps
ins
mov
(bad)
mov
movs
dec
xor
in
add
data16
leave
jp
pop
sub
cdq
aam
int
xchg
xchg
adc
dec
fiadd
hlt
pop
in
mov
test
call
xor
repz
leave
lock
out
mov
cmc
test
sbb
pusha
and
in
div
repnz
or
xor
mov
inc
pop
cdq
adc
aaa
pop
rcr
jg
test
inc
in
aad
mov
jmp
or
pop
call
mov
movs
or
mov
retf
push
cmc
xor
mov
inc
ret
sub
leave
xchg
mov
sub
inc
xchg
gs
dec
dec
cmc
das
jg
xchg
dec
fmulp
stos
ds
sbb
pop
lahf
sub
push
pop
out
jnp
push
dec
pop
or
inc
loop
pop
sub
leave
aad
dec
or
ror
movs
sti
cwde
(bad)
cmp
mov
daa
jne
inc
rcl
mov
push
or
cmc
pop
(bad)
nop
sbb
movs
xor
imul
jbe
ins
mov
add
(bad)
(bad)
ja
push
std
mov
std
mov
int3
push
in
sub
loop
inc
push
ret
cmps
shl
pop
ins
xchg
es
cmps
adc
fnstsw
ror
in
popf
out
or
mov
push
and
cld
jmp
or
and
loopne
dec
mov
xor
push
mov
pop
cdq
cdq
pop
jb
test
cmps
fsubr
mov
arpl
es
les
jg
jg
jno
jl
jnp
(bad)
(bad)
fnsave
fwait
mov
inc
adc
sahf
ins
js
jo
(bad)
(bad)
push
mov
in
sub
add
cmps
sbb
cmc
stos
mov
mov
arpl
shl
mov
cmp
xor
sbb
rcl
popa
jecxz
jne
and
out
les
(bad)
dec
add
shl
xchg
inc
push
cs
or
cmp
sbb
dec
dec
push
out
mov
inc
movs
daa
mov
push
out
je
sub
xchg
rcl
sar
daa
sub
jp
mov
fadd
aaa
jmp
outs
fwait
mov
les
inc
fsubrp
test
inc
or
bound
je
xchg
xchg
pop
lods
pop
shl
cli
or
dec
popa
call
pop
or
cli
and
adc
iret
mov
xchg
add
jmp
or
pop
fcom
pop
jp
sbb
movs
sub
or
aaa
mov
call
mov
loope
cmps
cmp
jns
mov
jp
pop
inc
(bad)
daa
pop
add
and
(bad)
sar
hlt
int3
(bad)
dec
jns
jmp
xlat
pop
ret
mov
fsubr
mov
xchg
fs
pop
cmp
scas
ss
leave
int
mov
xor
fwait
retf
cmp
sbb
ins
jno
fsubrp
push
fimul
ins
xchg
or
xchg
mov
aam
retf
int3
xchg
in
lds
lahf
in
sub
int
jmp
cld
mov
xchg
fmul
arpl
pop
popf
popa
outs
(bad)
mov
dec
inc
add
or
xor
push
mov
loope
push
add
cli
call
and
adc
dec
sub
dec
ins
rcl
fs
mov
mul
cmps
loope
gs
pop
dec
dec
xchg
push
data16
cli
ret
mov
ins
loop
xor
in
cmps
inc
and
shl
clc
lods
sar
mov
dec
lock
pusha
and
dec
ins
jmp
mov
(bad)
js
ins
lea
or
cli
fsub
jle
(bad)
cmp
sub
and
and
(bad)
and
(bad)
ret
fsubr
les
xor
add
cmp
loop
lods
shr
stc
push
or
mov
out
shr
xor
inc
test
test
inc
sub
sahf
pop
daa
ret
ins
or
cmp
mov
dec
push
gs
push
jno
mov
sub
in
test
adc
jne
add
aad
std
jno
jecxz
loopne
repz
sbb
sti
mov
cmp
adc
movs
or
call
push
(bad)
sbb
(bad)
push
mov
rcl
sti
sub
pop
cmps
mov
aaa
jecxz
test
adc
aaa
out
cmps
push
imul
ja
or
ja
and
xor
test
pop
loop
xchg
mov
(bad)
sar
mov
movs
xor
aad
dec
dec
inc
loopne
pop
repz
inc
gs
xchg
xlat
mov
inc
out
sar
clc
cmp
push
cld
adc
push
xchg
lods
pop
push
nop
bnd
mov
cmp
jp
aam
or
std
imul
jnp
mov
cmp
ins
pop
adc
movs
in
and
clc
push
push
push
dec
sub
dec
mov
hlt
jmp
imul
adc
(bad)
cmps
jp
xor
xor
jl
(bad)
test
ins
cmp
mov
lods
dec
shr
add
jo
cdq
or
ds
cmp
outs
ds
or
cmps
retf
jne
sahf
pop
ss
sbb
xchg
jle
dec
fisubr
xchg
adc
adc
pop
jno
(bad)
movs
retf
pop
fdivr
fxch
mov
xchg
xor
ror
add
mov
in
cdq
add
lds
xor
and
mul
aaa
mov
in
push
xor
adc
pop
sub
jg
das
scas
les
outs
sbb
in
daa
xchg
inc
gs
sti
mov
call
loop
add
sub
jne
rcl
call
in
mov
in
ror
and
(bad)
punpckhwd
sar
mov
rcl
inc
jae
ud0
pop
xchg
outs
adc
call
mov
aas
dec
je
rcr
pop
ret
ret
leave
test
cli
div
ror
add
cld
aam
xchg
inc
jo
push
icebp
(bad)
cmc
mov
mov
cmp
aaa
add
jg
mov
xchg
cld
push
sbb
sub
iret
sahf
xor
push
js
pusha
sbb
xchg
jbe
push
mov
inc
imul
mov
mov
jne
outs
cwde
pop
es
les
lds
inc
retf
in
(bad)
in
stos
popf
push
cmc
jae
rcr
cmp
xor
(bad)
ins
hlt
retf
adc
ficomp
rcl
cmp
ret
sbb
xchg
loopne
or
fist
cwde
mov
mov
xchg
push
fsub
dec
repz
mov
jno
mov
cmp
dec
pop
faddp
icebp
outs
xor
stos
repz
xor
aad
ja
fdiv
int3
ins
ss
push
sub
cmp
shl
das
inc
call
xor
retf
popa
shr
cmp
hlt
push
push
mov
sbb
arpl
cli
push
jo
mov
das
out
das
dec
in
push
jno
mov
push
inc
mov
cwde
int3
enter
xlat
pop
clc
scas
ss
mov
pop
inc
jns
cwde
invd
sub
and
sub
ins
hlt
mov
movs
sbb
icebp
test
and
jmp
cmp
push
sub
retf
(bad)
(bad)
fild
push
pop
leave
dec
aas
(bad)
fdiv
add
in
stos
outs
cmps
add
movs
dec
mov
mov
inc
mov
mov
fstp
ins
and
xor
sbb
mov
cmps
push
or
xlat
imul
fisubr
(bad)
jmp
movs
xor
mov
stc
pop
cmp
xor
push
pop
(bad)
loop
ficom
add
and
xchg
jge
popa
in
adc
inc
jge
xchg
dec
inc
outs
dec
jmp
dec
sbb
xor
push
inc
mov
jno
nop
push
ins
popf
fist
rol
idiv
imul
bound
es
(bad)
xor
xlat
imul
push
and
inc
adc
mov
jbe
inc
sub
(bad)
lods
or
xchg
je
leave
call
popf
ds
test
pop
adc
in
mov
xor
jp
outs
das
pop
or
and
mov
arpl
hlt
xchg
fs
pop
(bad)
repz
ins
jne
lock
sar
test
pop
push
mov
push
jmp
cmp
mov
adc
and
sub
test
or
xlat
ss
push
gs
(bad)
jae
sbb
int3
sub
pop
popa
shl
mov
jmp
cli
xor
pop
push
adc
mov
mov
xchg
retf
xchg
push
or
sbb
les
cmc
cmp
aad
xchg
jmp
daa
int3
mov
add
fisttp
jo
(bad)
into
enter
and
inc
pop
push
add
pusha
sub
or
cmp
out
and
add
in
ins
in
or
ror
mov
dec
add
nop
out
ror
ficom
cmps
ret
mov
xor
sub
dec
lock
nop
jl
call
in
call
lds
sub
mov
repz
repnz
loope
mov
mov
and
stos
push
mov
adc
xchg
das
jns
ret
adc
xor
inc
sub
jae
add
or
ret
cwde
cmc
(bad)
adc
clc
retf
push
xor
sbb
sub
fisubr
pop
mov
(bad)
lahf
add
in
pop
cmp
aas
inc
loopne
loop
pop
aad
retf
adc
adc
jno
test
sti
lds
mov
fimul
icebp
lea
cmp
outs
retf
retf
jne
ins
xchg
les
dec
dec
mov
add
mov
or
fisubr
in
inc
js
gs
lahf
push
sub
and
movs
add
push
sets
stos
xchg
and
arpl
into
or
jbe
movs
sub
sub
popf
adc
and
leave
adc
xor
sub
into
xchg
test
cdq
mov
and
jbe
dec
ja
xlat
cmp
push
xor
loop
lea
cdq
mov
fimul
and
dec
xchg
out
outs
inc
cld
mov
aam
aad
xor
shl
or
cli
into
xchg
das
or
popa
push
dec
mov
mov
sub
fwait
arpl
push
arpl
jg
lock
cwde
fnstenv
mov
cli
shl
stos
popa
lock
daa
lds
ret
push
cmp
xor
sub
lahf
cld
adc
test
lds
popf
push
je
dec
movs
punpckhwd
nop
xchg
xchg
add
test
(bad)
pop
in
inc
jmp
mov
gs
dec
scas
sub
push
lock
xchg
sub
cli
rcr
lods
add
cmp
adc
lock
(bad)
mov
dec
jns
sar
mov
add
bsf
cmp
pop
ins
enter
xchg
or
int
mov
stos
das
mov
retf
js
xor
pushf
pop
jns
dec
fcom
push
push
sub
push
stos
sub
int3
repnz
xchg
lods
movd
or
lea
jmp
dec
ror
push
sbb
clc
sti
inc
inc
push
mov
and
mov
sub
push
retf
or
jnp
sub
loope
cld
test
out
nop
jp
int3
and
stc
ret
in
gs
retf
dec
xchg
inc
into
or
cld
inc
adc
fwait
cmp
mov
push
jmp
pop
in
ins
mov
ins
xor
pop
jmp
pop
jbe
gs
push
pusha
mov
xor
in
sub
das
sbb
out
xor
dec
stos
nop
mov
mov
retf
test
loop
mov
pop
inc
retf
dec
mov
mov
pop
das
fcomip
retf
iret
mov
xlat
xchg
dec
jge
enter
in
stos
sbb
cmp
stos
jge
in
add
in
aam
or
sahf
popa
push
in
lahf
lds
pop
ja
popf
jbe
mov
test
or
xchg
cld
xchg
icebp
xchg
sbb
adc
push
mov
jecxz
xor
popf
stc
sbb
cmp
not
aam
(bad)
scas
mov
rcr
fwait
and
xor
(bad)
iret
push
xchg
test
movs
add
add
dec
sub
dec
xor
stos
dec
sbb
out
pop
popa
jo
adc
inc
loopne
sub
fmul
pop
mov
xlat
or
aaa
sti
shr
jl
das
cld
mov
pop
sar
adc
push
dec
mov
jne
add
cs
outs
push
dec
jnp
clc
fldcw
xchg
adc
xchg
pop
dec
inc
add
scas
hlt
(bad)
mov
iret
scas
dec
or
jno
mov
enter
fs
dec
and
cmp
jp
cmp
cmp
adc
jecxz
pop
xor
jne
cld
icebp
outs
in
scas
lock
imul
icebp
add
sbb
mov
sbb
(bad)
add
mov
sbb
or
mov
nop
xchg
aad
mov
cmp
int3
aaa
bound
mov
sbb
mov
mov
ins
das
jl
jmp
ins
inc
or
pop
jle
ret
sbb
xor
ret
and
jp
inc
sbb
sub
movs
in
sbb
les
pop
fwait
pop
sbb
stos
int
inc
mov
add
in
movs
int3
sbb
enter
and
adc
test
push
lea
mov
in
lods
out
mov
add
sbb
jg
sar
addr16
sbb
xor
cwde
inc
inc
and
push
dec
and
add
fcom
inc
adc
sub
into
repnz
mov
clc
test
in
cmp
dec
pop
jne
loope
leave
fistp
test
outs
imul
int3
mov
push
ins
mov
push
in
lods
inc
xchg
jmp
mov
outs
push
inc
cmp
and
adc
ins
fild
or
inc
sub
mov
sti
push
adc
mov
push
xor
fcom
sbb
xchg
xchg
cwde
shl
les
mov
aaa
in
arpl
cmp
aam
jl
push
mov
add
cwde
rol
xchg
push
fimul
(bad)
stc
add
xor
jecxz
mov
sahf
xchg
stos
(bad)
les
jp
add
mov
sub
xor
leave
xor
sub
(bad)
sub
sub
mov
cmp
out
cmc
in
adc
lods
outs
js
pop
pop
mov
dec
sub
jmp
mov
call
lds
jb
mov
mov
stos
call
fld
mov
lea
pop
mov
cmc
je
outs
fisubr
xor
retf
or
sar
push
out
jp
shl
jmp
sub
sub
hlt
test
cmps
iret
dec
(bad)
sar
leave
movs
adc
pop
and
fistp
clc
mov
pop
sub
neg
cmps
scas
mov
cmp
push
sbb
pushf
lahf
out
mov
sub
stos
aas
cmp
cwde
stc
scas
xor
movs
jae
xlat
push
pop
push
add
in
and
jae
retf
cli
add
arpl
push
dec
stos
mov
jne
loope
mov
mov
(bad)
mov
sbb
int
push
in
mov
mov
call
loopne
hlt
xchg
push
add
pop
stos
shl
mov
fisubr
and
xlat
popa
mov
call
sub
cmp
rcl
neg
xor
push
pop
sbb
call
jg
pop
std
rcpps
ja
rcr
enter
pop
dec
mov
mov
mov
loopne
or
xchg
or
pop
iret
into
fimul
pop
and
or
cmp
fisttp
mov
inc
sub
shl
and
dec
mov
add
call
shl
stos
ret
mov
sbb
or
(bad)
scas
xchg
mov
jle
pop
mov
ins
outs
dec
cmp
xchg
xchg
les
inc
je
leave
jge
pushf
inc
out
fdivp
and
push
je
(bad)
leave
(bad)
in
mov
outs
fsubr
push
js
cwde
ins
cmp
sbb
outs
jmp
test
imul
fistp
push
mov
lahf
mov
lahf
inc
sbb
mov
out
call
int3
cmp
xor
and
movs
cmp
dec
leave
dec
arpl
mov
retf
enter
sbb
movs
mov
sbb
sar
call
aam
cmp
cmp
js
pop
aam
xlat
and
mov
mov
iret
ret
xor
mov
arpl
ret
mov
int3
ror
call
outs
push
push
ficomp
ss
push
(bad)
push
aaa
xor
cs
imul
pop
mov
js
adc
cmp
cmp
call
jb
in
mov
call
push
out
nop
in
cs
aam
xor
mov
push
push
nop
outs
mov
pop
sub
xchg
mov
stos
push
mov
ss
arpl
es
fidivr
fdivr
jns
sbb
dec
inc
imul
mov
pinsrw
nop
icebp
pop
loopne
out
addr16
add
pop
ja
inc
sub
jnp
dec
xchg
mov
xchg
add
and
add
sbb
es
lods
lods
in
push
sar
(bad)
imul
ret
push
and
or
mov
mov
into
lods
icebp
fisubr
mov
mov
adc
and
ss
cwde
push
push
add
jl
mov
xor
cmp
(bad)
xor
xor
push
inc
mov
fisttp
out
mov
or
mov
mov
cld
jge
mov
popf
iret
sbb
push
(bad)
in
add
stos
push
xchg
das
out
jge
and
sub
retf
arpl
dec
cld
call
sub
pop
aad
and
push
aam
inc
inc
xor
adc
add
jnp
jge
xchg
push
out
push
out
hlt
jo
out
and
xchg
stos
mov
popa
(bad)
fisttp
cmp
adc
xchg
mov
aad
test
adc
jp
add
adc
jns
(bad)
clc
pop
test
paddq
or
xlat
stc
xor
fcmovnu
mov
mov
(bad)
int
jl
jbe
sub
outs
sti
push
add
test
fild
je
sti
sbb
(bad)
jge
in
imul
lahf
jne
iret
mov
sti
cmp
add
shl
shl
push
fldenv
test
mov
push
pop
sbb
inc
clc
arpl
dec
cdq
imul
popa
sbb
xchg
pop
dec
loopne
push
inc
aaa
mov
inc
lea
dec
xor
ffree
fnstcw
push
das
jge
mov
inc
sbb
add
imul
jmp
not
ins
fcom
pop
jmp
adc
retf
(bad)
out
ins
push
into
out
sub
movs
jl
mov
stos
sbb
out
inc
ins
imul
ss
mov
test
sahf
or
lods
dec
pop
cmp
push
sbb
stos
call
enter
mov
rcl
aam
rol
loop
mov
out
pusha
xchg
jecxz
arpl
leave
lds
cmp
in
lods
scas
pop
mov
mov
push
ret
sbb
mov
pop
(bad)
dec
sub
and
jae
nop
lds
rcpps
add
adc
aaa
dec
and
xchg
outs
cmc
push
push
cld
cmp
loopne
fdivr
mov
mov
pop
jge
mov
ficomp
ja
add
xor
jecxz
inc
adc
scas
jb
mov
sub
push
push
dec
(bad)
cwde
(bad)
aad
fldcw
add
ror
rcl
test
jb
push
cmps
aam
loopne
and
lahf
push
ss
jg
sahf
es
sti
or
push
sub
movs
push
cld
enter
mov
addr16
mov
inc
add
lods
sub
or
pusha
pop
xor
outs
cmps
ins
push
xchg
mov
sbb
mov
in
mov
js
sbb
ror
fwait
test
in
jno
clc
imul
add
inc
pop
nop
popf
retf
mov
mov
and
pushf
ja
push
or
enter
xchg
mov
ret
cwde
xor
mov
ins
add
pop
mov
and
loope
cmp
push
sbb
jle
adc
mov
jl
dec
mov
push
xchg
or
or
and
and
fwait
(bad)
adc
cld
mov
movs
ins
pop
push
sbb
(bad)
in
pop
jp
adc
sub
and
xor
mov
popf
jmp
cwde
pop
push
cmc
push
stc
push
cmp
push
mov
mov
repz
cmps
cmp
call
and
(bad)
sub
jns
and
mov
and
mov
xor
push
pop
pcmpgtb
test
sub
mov
cmp
dec
sub
dec
mov
dec
mov
mov
popf
mov
stc
adc
mov
rol
pop
outs
leave
xchg
es
push
dec
adc
cmp
cmps
fld
rcr
adc
dec
adc
cdq
dec
jmp
mov
addr16
push
loope
sbb
inc
adc
mov
sbb
or
aaa
adc
mov
enter
mov
adc
jp
push
or
sub
sub
xor
stos
sti
mov
and
pop
pop
jb
jle
ret
add
xchg
(bad)
fistp
or
xchg
mov
es
sub
jnp
add
(bad)
test
sahf
cwde
add
shr
mov
nop
les
add
ja
xor
clc
(bad)
les
push
add
loopne
aad
push
and
and
sub
in
jno
out
cmps
hlt
add
xor
push
es
cmp
push
cmp
ret
arpl
push
cmp
pop
cwde
hlt
or
pop
popa
xlat
inc
scas
dec
in
cwde
cwde
hlt
add
test
push
mov
or
fld
mov
add
enter
pop
in
sbb
adc
mov
jmp
mov
dec
pushf
lods
jmp
(bad)
jle
test
jne
(bad)
push
xchg
add
xor
adc
int
test
adc
jg
push
and
ss
mov
add
jmp
add
push
inc
lods
jo
imul
sub
aad
mov
xchg
inc
pop
sbb
popa
jns
adc
out
fs
leave
mov
mov
loop
sub
or
jecxz
in
cdq
jmp
cmc
mov
clc
mov
jae
adc
jecxz
ins
dec
fcom
out
addr16
jmp
fstp
nop
cmc
sbb
fdivr
fsub
or
xchg
jbe
idiv
addr16
pusha
xchg
add
xor
mov
and
mov
push
loop
and
std
adc
into
(bad)
jg
pop
jo
not
sub
and
push
xor
push
sahf
inc
repz
inc
add
ins
dec
xchg
(bad)
jbe
inc
lea
(bad)
imul
sbb
pop
cmp
mov
sbb
(bad)
or
loope
ds
inc
push
xchg
gs
stos
adc
push
hlt
sbb
nop
and
js
mov
dec
call
(bad)
pusha
pop
xor
int3
jns
ins
(bad)
cmp
xchg
push
adc
xchg
xor
add
mov
retf
arpl
ins
pop
jne
push
outs
jp
addr16
dec
or
icebp
add
jmp
loop
movs
and
cmc
out
(bad)
(bad)
bound
cmp
(bad)
out
ins
xchg
loop
sub
xchg
jg
add
ret
mov
mov
mov
mov
js
push
xchg
ret
or
lods
sbb
mov
xor
pop
je
dec
sbb
repz
lock
pusha
jle
xor
test
pushf
mov
pusha
or
fbld
pop
xor
push
sub
mov
cwde
cmc
mov
loope
int3
inc
cmps
pop
push
les
xchg
adc
push
cmp
inc
dec
pop
and
dec
popf
lock
jmp
mov
jae
mov
jmp
push
xchg
or
adc
nop
jnp
inc
ds
and
test
xchg
movs
sbb
movs
mov
ss
inc
shl
daa
jmp
imul
fwait
cmp
xchg
mov
call
adc
mov
loope
jo
popf
pop
xor
add
leave
into
shl
(bad)
jmp
lahf
punpckhwd
es
(bad)
cmp
pop
sti
lods
xchg
xchg
push
bound
lahf
pop
lea
sti
mov
dec
aas
sub
out
fbld
xlat
ja
out
pop
cmp
(bad)
test
iret
push
js
xchg
push
std
jb
pushf
sbb
mov
sti
pop
outs
sub
or
jo
mov
(bad)
adc
pushf
call
aam
std
bswap
add
add
xor
sbb
retf
mov
rol
shr
add
les
loope
idiv
mov
(bad)
out
retf
aad
mov
mov
jmp
fnstcw
xchg
mov
mov
pop
mov
out
push
sub
sbb
mov
pop
and
icebp
inc
or
lds
fild
dec
mov
fadd
mov
mov
mov
xor
dec
mov
inc
inc
mov
into
ss
mov
pop
jno
call
out
fisubr
or
sbb
mov
mov
xlat
nop
outs
pop
cmc
aas
test
inc
lds
loop
fld
dec
push
mov
dec
mov
and
mov
aas
mov
(bad)
xchg
ror
movs
(bad)
cmp
lods
cmc
adc
xchg
jl
dec
or
jl
in
pop
jmp
dec
xor
loop
fistp
xchg
les
and
(bad)
sub
jecxz
pop
int3
repz
adc
daa
call
sbb
dec
adc
mov
or
dec
inc
jl
daa
push
mov
(bad)
push
dec
push
aam
mov
and
pusha
shr
int
out
pop
or
cmp
int3
mov
addr16
xor
neg
ss
jb
lock
repz
dec
ror
movlps
std
es
add
(bad)
(bad)
mov
test
or
add
sub
hlt
xor
push
retf
cmp
out
mov
dec
xchg
xchg
ja
adc
imul
inc
lock
sti
inc
sub
es
mov
dec
inc
ret
int3
mov
xor
jg
mov
and
jge
adc
pop
push
xchg
cmp
xor
sbb
jmp
mov
sub
je
jae
inc
xor
loop
iret
jmp
nop
push
shr
ja
mov
sbb
push
or
aas
add
adc
addr16
push
addr16
mov
sub
push
push
cmp
aam
jb
(bad)
mov
push
mov
js
pop
and
fdiv
mov
inc
es
sbb
inc
jnp
gs
fiadd
xor
cmp
shl
and
xchg
repnz
retf
fst
jmp
sbb
or
pop
addr16
push
shr
loope
icebp
xchg
dec
xor
dec
aaa
sub
inc
lahf
jbe
js
hlt
xchg
mov
leave
cdq
cmps
mov
in
int3
pop
xchg
neg
lods
sahf
pop
test
mov
popf
loope
mov
(bad)
loopne
push
cwde
into
pushf
mov
(bad)
mov
and
push
aad
cmp
(bad)
xor
inc
iret
repz
or
cmc
int3
xor
pop
adc
out
es
push
sbb
push
sbb
mov
(bad)
lea
push
(bad)
nop
add
sub
stc
lock
cwde
repz
sbb
mov
cmp
jb
inc
jle
jecxz
jno
aad
xchg
and
push
fidiv
push
in
aaa
xchg
mov
pop
push
xchg
mov
mov
jbe
bound
xor
shr
sbb
sub
(bad)
repz
(bad)
jnp
xchg
(bad)
pop
int
ffree
js
cmp
dec
out
sar
mov
mov
(bad)
mov
test
mov
pop
xchg
fsub
pushf
add
mov
sti
add
add
mov
fistp
dec
xchg
or
dec
jbe
lods
xchg
enter
ficomp
pop
dec
jp
enter
mov
neg
mov
jo
and
pop
adc
test
sbb
sahf
in
add
mov
or
sar
enter
jl
cmp
cs
cdq
jae
mov
add
pop
jns
retf
cmp
inc
aad
outs
enter
out
add
pop
mov
sbb
mov
jbe
js
std
aam
or
pushf
push
jle
adc
test
push
sbb
inc
jge
bound
inc
call
mov
movs
test
imul
mov
ret
test
test
adc
jns
cwde
scas
xlat
add
das
pop
lods
mov
xchg
fadd
adc
fistp
bound
stos
mov
out
(bad)
xor
out
add
out
(bad)
sub
mov
test
mov
out
jmp
cmps
mov
xchg
mov
pop
lahf
jns
cdq
bound
pop
das
test
addr16
ds
sbb
cli
dec
nop
xor
stos
call
stos
out
and
outs
cmps
(bad)
sbb
daa
pop
cmp
push
cmps
or
mov
mov
mov
repz
mov
(bad)
adc
pushf
push
cs
aam
leave
(bad)
js
(bad)
lea
ds
outs
or
sub
pop
xchg
xlat
mov
pop
or
xchg
sub
sbb
push
or
iret
cmp
sahf
int
pushf
(bad)
and
std
xlat
cmps
mov
sbb
pop
xor
fcom
cwde
scas
or
out
sbb
jno
push
outs
call
add
mov
lods
(bad)
cmps
xor
dec
xor
js
lock
sti
retf
sbb
push
inc
pop
test
fiadd
sub
(bad)
and
out
mov
and
ss
scas
push
das
dec
pop
jmp
(bad)
xor
jmp
std
cld
call
push
je
mov
les
shl
(bad)
ds
sub
fbld
cmp
iret
sub
push
mov
jmp
sub
shl
xchg
push
mov
call
jmp
iret
sbb
dec
push
sahf
iret
jmp
mov
clc
dec
jecxz
xchg
fisttp
sbb
sbb
xor
pop
cli
mov
or
(bad)
mov
adc
scas
repnz
mov
jmp
mov
mov
fstp
ins
push
sar
lds
nop
ficom
retf
retf
add
loopne
push
int3
pop
mov
push
mov
pop
or
rol
jge
es
mov
and
push
xor
pushf
stos
jmp
stos
ins
mov
push
sbb
dec
mov
popa
cmp
push
push
ffreep
or
jl
pusha
jle
pop
push
xor
cwde
movs
movs
or
inc
outs
xchg
mov
add
(bad)
xor
adc
add
hlt
adc
xor
enter
das
in
jae
dec
ja
scas
xchg
push
(bad)
xor
sti
and
sbb
cmp
ret
adc
mov
add
xchg
in
test
inc
inc
fisttp
and
imul
jecxz
push
in
fist
jl
aaa
mov
dec
sbb
sub
in
int3
push
mov
je
xchg
out
in
push
jge
sbb
(bad)
push
cli
jl
sub
adc
push
test
pop
rol
(bad)
pop
mov
lods
in
inc
mov
mov
inc
mov
adc
lea
push
mov
dec
adc
fld
in
dec
enter
mov
mov
xchg
lock
dec
neg
jecxz
dec
xor
bound
mov
int3
test
sub
sub
nop
cmp
inc
out
dec
adc
lods
cmc
(bad)
loope
call
inc
pop
adc
call
lods
cmp
mov
sub
idiv
out
jns
jno
movs
mov
jo
in
push
sar
popf
push
pop
add
jnp
mov
xor
test
jecxz
int
outs
mov
shr
aad
hlt
xor
(bad)
push
jo
mov
adc
out
outs
dec
retf
jns
(bad)
cs
pop
or
xor
jns
leave
pop
jno
mov
aam
aam
mov
mov
add
push
or
pop
jmp
push
call
enter
and
xor
jbe
xchg
mov
stos
add
pop
lock
mov
jno
mov
popf
mov
je
ja
sub
mov
test
sub
and
(bad)
les
das
or
mov
xchg
xor
or
jbe
popf
scas
xchg
loope
call
in
movs
pop
xchg
por
dec
ret
mov
xor
fmul
mov
adc
jae
push
mov
jmp
sub
push
(bad)
rcr
adc
jmp
or
xchg
out
pusha
cmps
mov
out
pop
daa
or
sbb
stos
cmps
cmp
scas
and
rcl
mov
pop
mov
jo
add
mov
pop
xchg
push
and
(bad)
jae
cmps
es
jmp
mov
sbb
shr
or
adc
scas
mov
ins
js
enter
push
cmps
and
movs
and
xchg
jb
mov
inc
adc
mov
aad
clc
cmp
or
dec
pop
xchg
and
rcl
jg
in
xchg
div
rcl
inc
dec
mov
fs
and
cmp
leave
xlat
jb
adc
dec
pusha
add
sub
(bad)
or
lock
ins
sti
jl
inc
add
dec
jnp
in
hlt
push
inc
ror
fmul
mov
popa
das
jmp
(bad)
mov
mov
sbb
test
sub
dec
adc
aad
out
aam
cmp
add
xchg
not
dec
and
jge
mov
das
ja
imul
jnp
pushf
out
ins
inc
imul
inc
loope
mov
inc
push
cdq
popa
fidiv
dec
push
dec
pop
pop
in
jmp
call
push
arpl
cmc
mov
mov
in
mov
cld
adc
adc
jns
(bad)
push
jecxz
or
and
mov
push
add
sbb
adc
fwait
cmp
pop
movs
outs
inc
or
xor
push
add
or
sbb
jp
cld
push
popf
icebp
inc
cmp
aad
das
lds
pop
mov
adc
xchg
push
movs
pop
fnsave
ins
in
push
sbb
fs
jmp
inc
rol
fwait
xor
mov
jle
add
dec
cmp
push
aad
and
xchg
jg
cmp
int3
pop
or
shr
dec
jmp
adc
push
xchg
xchg
call
sub
int3
fistp
jge
inc
jmp
out
cmp
pop
push
ins
jmp
adc
sbb
aas
(bad)
js
adc
fstp
movs
fistp
fcomp
jbe
pop
das
cmp
inc
xchg
mov
stos
(bad)
(bad)
sbb
sub
jae
xchg
and
iret
fdivp
shl
cmp
or
les
xchg
out
push
aam
xchg
fisub
dec
pop
ins
sbb
or
inc
cmp
or
inc
jmp
inc
cmc
ffree
ds
in
pop
cli
jg
sbb
and
adc
and
jmp
es
xor
add
inc
and
mov
jne
dec
push
jo
inc
mov
or
cs
mov
cmps
(bad)
cmp
std
jns
fwait
aam
cs
jb
adc
loop
sub
jp
(bad)
enter
add
and
mov
(bad)
fild
fs
out
jne
ins
cmp
dec
xor
out
lahf
dec
dec
iret
inc
jnp
mov
aaa
sbb
fnstenvw
push
cli
lods
in
add
lock
fisttp
int3
or
in
xor
sti
pop
nop
in
fcmove
rol
jnp
xchg
(bad)
movs
shl
push
and
mov
dec
push
cmp
fadd
mov
jne
mov
jp
mov
div
pushf
pop
outs
ss
cmp
not
pop
push
cmp
xor
cmc
call
repnz
mov
xor
shl
push
mov
ret
dec
xchg
(bad)
into
cmp
and
sub
retf
imul
xlat
pop
and
dec
imul
std
inc
call
xchg
or
out
in
push
not
mov
dec
lds
mov
xlat
inc
in
clc
cmp
call
mov
jbe
rcr
fidivr
sub
cmp
scas
or
js
inc
sub
lods
ror
addr16
mov
sbb
les
xchg
xor
shl
and
jecxz
and
test
mov
fisttp
jne
retf
push
cmp
aam
mov
aaa
xor
and
mov
mov
mov
or
das
stos
rcr
jne
and
xchg
push
jmp
lods
iret
pop
sbb
cdq
loopne
push
jno
cmp
sub
add
nop
shl
stos
inc
push
xchg
push
es
or
jns
jns
mov
adc
xchg
push
movs
adc
loop
or
mov
cmp
stos
push
dec
jne
jle
add
push
mov
xchg
jns
std
adc
outs
mov
mov
mov
cwde
(bad)
adc
or
in
inc
sub
mov
into
xchg
mov
xor
dec
adc
mov
inc
pop
or
push
sub
stos
(bad)
lock
es
and
sub
and
rol
je
cmp
xchg
mov
add
pop
mov
jge
fwait
mov
jmp
add
sbb
movs
mov
xlat
enter
or
mov
retf
adc
and
cmp
mov
dec
xor
inc
js
in
and
(bad)
in
fdivr
cmp
loopne
jmp
fcmovb
mov
xor
movs
sti
push
jb
scas
pushf
rcr
inc
pop
(bad)
test
test
fist
in
outs
cmp
and
mov
add
and
dec
and
or
test
mov
dec
mov
push
push
cli
jp
mov
outs
add
xchg
dec
pushf
rcl
(bad)
movs
pop
gs
cmps
into
aas
push
popa
aas
and
inc
(bad)
pop
scas
in
inc
and
mov
pop
outs
jns
iret
and
fdiv
das
(bad)
sub
popa
cwde
push
add
xchg
test
(bad)
sub
lods
(bad)
cmp
test
test
inc
(bad)
scas
shr
or
pop
sub
ret
scas
or
or
mov
and
dec
aam
sub
push
xchg
jo
push
pop
cmc
inc
pusha
in
clc
or
imul
or
(bad)
adc
cmp
cmp
fisubr
push
mov
clc
(bad)
cld
mov
les
dec
push
fsub
sbb
pop
movs
and
dec
jne
dec
dec
or
call
aad
pop
add
cmps
adc
(bad)
mov
jb
fucomi
retf
(bad)
jns
jbe
add
dec
arpl
pop
mov
mov
push
inc
pop
ss
inc
push
add
icebp
sub
hlt
adc
test
es
int3
push
pop
sbb
sbb
mov
adc
lock
or
out
shl
dec
and
pop
popf
jge
pusha
sbb
xor
sbb
xor
pop
iret
repnz
xchg
scas
test
or
cmp
test
cmp
fs
lea
jnp
sbb
aam
pop
lea
stos
rcr
cmp
xor
sbb
and
jle
dec
fcmovnbe
pop
addr16
or
cmp
xchg
push
iret
ds
in
mov
mov
inc
icebp
js
inc
mov
stc
cwde
cmps
push
jns
dec
in
mov
jecxz
in
(bad)
sbb
dec
clc
fnsave
test
sbb
loop
test
xchg
adc
sub
add
push
or
pop
push
mov
xor
fst
dec
test
pop
movs
sub
(bad)
nop
shl
push
lods
mov
sbb
lds
push
out
repnz
mov
retf
(bad)
loop
mov
mov
lock
fiadd
outs
loop
sbb
jl
loopne
jp
mov
and
push
repz
jmp
cmp
mov
jae
sub
in
cmps
repnz
mov
test
lahf
mov
(bad)
adc
cmps
aad
fidiv
jl
retf
dec
xor
push
jo
data16
xchg
ror
mov
pusha
sub
je
fild
fnstenv
sbb
call
adc
fcmovu
test
pandn
push
sbb
test
adc
dec
call
lahf
inc
stos
dec
inc
adc
clc
fidivr
inc
add
cs
daa
das
pop
mov
cmp
mov
lods
popa
jo
repz
inc
leave
aaa
imul
cmp
arpl
fwait
ins
test
js
pop
fsub
jns
popf
mov
loop
sub
retf
mov
ins
lods
aaa
je
ss
mov
daa
and
and
mov
test
outs
mov
dec
xchg
ror
imul
cmp
mov
mov
dec
dec
stos
mov
sbb
push
cmp
adc
out
rcl
mov
mov
push
push
mov
push
jo
mov
dec
pop
push
scas
xchg
cld
fiadd
addr16
add
test
push
xchg
not
xchg
push
xchg
fisubr
or
out
out
shr
sub
(bad)
mov
mov
adc
retf
fadd
popf
fs
sub
xchg
push
jno
dec
and
or
int
call
cmp
mov
cmc
xchg
aad
xor
rcl
inc
enter
mov
sahf
sbb
sub
imul
jp
sub
iret
imul
retf
sbb
cli
retf
pop
jp
ins
inc
aam
call
leave
pop
jmp
pop
enter
and
jmp
jecxz
push
and
jmp
mov
mov
pop
icebp
and
(bad)
pop
mov
into
dec
shr
adc
fwait
push
int
imul
mov
popa
xchg
cmp
add
mov
inc
aad
sub
retf
fsubr
mov
sahf
(bad)
sahf
ret
hlt
fsave
lea
and
lea
xlat
jmp
adc
fild
popf
in
add
stc
je
imul
inc
jl
mov
dec
and
out
(bad)
(bad)
ret
fldcw
js
je
or
into
loope
push
add
xor
or
xlat
repnz
das
movlps
lock
ror
js
push
xchg
mov
mov
sbb
in
lods
xor
shl
sub
outs
dec
dec
jecxz
leave
ins
retf
sub
push
lods
inc
stos
adc
movs
clc
cwde
mov
sbb
test
movs
xchg
mov
jecxz
lods
std
ds
adc
push
jb
lahf
cld
fild
es
mov
add
pop
cmp
inc
jb
and
inc
cmp
cdq
push
outs
popf
imul
push
cmp
(bad)
out
xor
mov
sub
mov
push
retf
sar
mov
movs
add
repz
push
mov
sub
and
and
fbld
jnp
push
cmp
fnstenv
push
call
retf
dec
std
mov
cld
jno
and
push
enter
in
cmp
cmps
ret
jecxz
(bad)
stc
daa
jne
jmp
ret
retf
hlt
xchg
and
std
dec
inc
daa
imul
xlat
loop
lea
inc
jne
xor
adc
or
jp
sub
cmps
aaa
xchg
dec
push
push
sar
int3
add
push
(bad)
test
enter
ins
cmp
jle
inc
je
out
push
push
scas
jbe
retf
and
push
mov
pop
inc
mov
rcl
aad
inc
jo
ins
int3
push
mov
add
xchg
retf
test
inc
div
and
dec
retf
mov
cs
pusha
call
mov
xor
mov
inc
add
shr
pushf
in
out
mov
loop
fwait
xor
mov
pop
sbb
das
sub
pop
xchg
xchg
mov
adc
and
mov
dec
imul
jge
fnsave
fistp
ret
push
hlt
int
add
dec
and
pop
xlat
adc
jge
push
pop
cwde
push
push
retf
js
mov
dec
scas
inc
pop
sahf
xor
fdiv
into
mov
fld
icebp
mov
cdq
ds
ja
ins
xchg
retf
fst
lea
mov
pop
sahf
dec
add
push
not
add
xchg
mov
sub
sar
lods
jle
(bad)
outs
clc
lods
mov
add
push
jp
adc
jmp
dec
iret
and
aam
xchg
add
and
xor
push
xlat
pop
mov
dec
les
test
retf
std
repnz
and
fistp
jnp
mov
mov
xor
push
pusha
pop
or
push
popf
push
pop
leave
int3
jnp
outs
sbb
outs
mov
inc
pop
or
xchg
push
xor
lods
mov
dec
mov
jmp
repnz
shr
add
mov
mov
imul
inc
push
or
outs
popa
es
repz
dec
adc
out
and
loopne
mov
mov
test
sub
mov
jne
jns
int
inc
icebp
fsubr
imul
xchg
pop
sub
mov
stos
out
push
jl
loopne
arpl
sub
into
xor
lds
adc
mov
aas
mov
fmul
es
cmp
add
nop
int3
jle
cmps
pop
fwait
pop
scas
xlat
inc
push
hlt
sbb
cmp
cs
in
lea
mov
xchg
pop
or
push
push
jle
push
out
or
jg
hlt
pop
aam
cld
sti
lods
rcr
sub
aad
dec
outs
icebp
daa
mov
popf
fisubr
int
mov
cwde
add
(bad)
fild
sbb
or
or
sti
lods
inc
in
cmp
fild
lods
and
mov
iret
ret
lahf
inc
mov
test
pop
jns
mov
push
loopne
fild
push
not
fwait
(bad)
(bad)
add
mov
xchg
rol
add
jecxz
cld
cmp
repnz
mov
dec
cmp
scas
(bad)
xchg
push
ins
dec
sbb
(bad)
lahf
cmp
mov
jbe
loopne
push
mov
lahf
push
ret
jmp
ds
pusha
push
in
sahf
inc
lea
add
mov
clc
and
into
add
mov
aam
mov
dec
jno
adc
sub
mov
in
(bad)
cmp
es
ja
pop
inc
xchg
outs
ja
scas
es
ret
into
movs
push
pop
sbb
(bad)
cld
inc
mov
imul
test
imul
(bad)
sub
jmp
imul
or
outs
cwde
sub
xchg
je
mov
xchg
push
(bad)
mov
push
(bad)
pop
(bad)
jno
mov
push
sub
stos
repnz
mov
test
js
jecxz
movs
jo
int
(bad)
mov
jnp
in
jmp
cld
int
in
jmp
aad
outs
mov
dec
das
iret
jbe
cmp
jo
(bad)
xchg
mov
popa
cmp
jecxz
fs
jge
cdq
add
push
mov
and
call
neg
outs
inc
dec
jp
xchg
sti
sub
jecxz
stos
ror
push
cmp
ss
test
in
inc
call
xchg
sbb
xchg
pop
mov
hlt
xor
pop
and
jb
xchg
(bad)
retf
fist
mov
mov
dec
mov
and
scas
test
imul
jns
or
test
ins
mov
ror
loope
ins
dec
xor
repz
fwait
jg
mov
pop
es
push
push
sub
or
popa
sahf
pop
adc
xchg
lahf
and
or
jmp
mov
hlt
add
add
retf
cmp
sbb
cdq
test
pop
mov
dec
fiadd
loope
je
mov
add
xchg
(bad)
and
xchg
(bad)
mov
lds
xchg
push
fcmovnbe
mov
xchg
fdiv
cmps
and
dec
inc
mov
or
xor
and
pop
pusha
or
idiv
mov
sub
adc
pop
fwait
aam
sahf
(bad)
mov
in
adc
into
sbb
(bad)
fnstsw
add
mov
idiv
cli
push
sar
cmp
push
loope
dec
aaa
dec
and
jecxz
repnz
xchg
fucomp
loopne
mov
stos
push
push
mov
cli
retf
in
js
cld
and
jbe
retf
cmp
or
in
mov
das
jl
mov
sub
loope
sbb
retf
imul
sbb
sub
inc
mov
lods
test
in
mov
pop
into
fcomp
pusha
idiv
xor
mov
ret
rcr
pop
jbe
inc
push
cmp
push
mov
fld
test
pop
sti
imul
jecxz
dec
sbb
out
out
sbb
xchg
pop
push
jmp
and
jge
jl
aam
sub
sub
push
or
stos
call
xchg
shl
cmp
jns
sbb
call
xchg
sub
cld
jl
or
sbb
clc
adc
or
loopne
add
add
xchg
add
cmp
dec
jnp
outs
dec
sti
mov
inc
cmp
mov
push
mov
adc
mov
shl
jnp
push
bnd
rcl
shl
mov
rol
push
jb
loopne
xor
xchg
jns
jp
je
test
fld
sar
stos
nop
adc
loop
xchg
push
jl
push
push
push
pop
mov
lea
out
enter
sub
and
mov
ins
daa
or
int
les
inc
mov
call
addr16
mov
add
aaa
daa
lea
xor
cmps
dec
push
and
ret
fiadd
pop
mov
push
push
xchg
or
retf
ss
inc
test
imul
jmp
fild
out
dec
mov
arpl
loop
(bad)
(bad)
hlt
popf
mov
mov
aaa
out
retf
xchg
(bad)
sub
adc
mov
add
inc
cmps
cmc
pop
(bad)
cmp
pop
mov
and
xor
loope
test
sub
cdq
div
mov
es
push
mov
xor
lods
jl
repz
push
dec
push
add
fcmovne
addr16
outs
fadd
in
in
mov
push
dec
(bad)
or
pop
add
lds
mov
mov
stos
das
inc
adc
and
ja
add
out
mov
shl
mov
fwait
xchg
popf
daa
pusha
scas
out
cmp
mov
jne
(bad)
pop
xchg
fiadd
das
cmp
dec
adc
loope
call
pop
outs
mov
pop
jns
imul
push
cmp
push
ins
lahf
dec
mov
push
mov
mov
clc
xchg
mov
pushf
outs
mov
mov
pushf
(bad)
ror
xor
push
jle
test
adc
mov
sub
dec
ror
jo
cmps
cmp
and
popa
int3
in
lods
stos
add
lds
outs
sub
bound
push
inc
nop
add
stos
mov
iret
je
add
mov
mov
pop
pop
sbb
mov
je
lea
(bad)
pinsrw
jns
int3
xchg
push
pop
test
loop
dec
mov
cmps
cmps
lahf
imul
out
jecxz
jo
sbb
cmp
adc
sbb
aad
test
out
sahf
cdq
imul
pushf
sbb
sub
psubb
sbb
das
nop
jne
inc
mov
sub
rcl
aas
movs
stc
cld
outs
daa
enter
pop
ret
sbb
fisub
pop
test
push
cmp
sub
cmp
mov
icebp
xchg
dec
add
ret
jne
mov
add
and
ins
lahf
push
push
cmp
xchg
les
fisubr
movs
mov
mov
ss
iret
xor
(bad)
xor
jecxz
cmp
scas
popf
jmp
mov
dec
leave
ja
ins
cmp
push
push
out
je
movs
in
(bad)
push
cwde
mov
retf
jp
shl
nop
mov
mov
cmp
daa
inc
mov
mov
pop
sub
mov
fsub
mov
push
ror
les
iret
leave
pop
jns
loop
mov
out
arpl
mov
fs
mov
sub
jl
sbb
adc
and
or
jno
es
leave
dec
adc
mov
fbld
mov
and
and
popf
inc
cmp
pop
add
adc
jae
inc
pop
jbe
scas
fstp
test
ins
pop
or
xor
sub
repz
sbb
cs
sbb
rol
pop
cwde
sbb
sub
fidiv
adc
inc
sti
pushf
mov
jmp
dec
push
sub
les
enter
or
sub
add
mov
cld
fisttp
pop
xchg
jp
xchg
sub
loopne
push
push
sar
leave
xor
hlt
dec
push
scas
push
cld
fsub
mov
imul
fcmovu
mov
push
in
adc
or
inc
pop
not
cld
jbe
out
outs
sti
fistp
call
and
and
sbb
mov
ja
sti
or
ret
sbb
mov
aas
dec
xchg
inc
dec
add
imul
sar
ins
mov
sub
dec
pop
mov
adc
idiv
xor
lods
xchg
into
xor
cdq
(bad)
xor
jno
jmp
jl
je
cmp
scas
mov
cmp
push
retf
in
ror
sub
(bad)
int
xchg
sbb
jmp
add
dec
push
and
scas
es
out
pop
jne
xchg
fisubr
stc
xor
ret
sbb
xchg
enter
or
xlat
add
fwait
repz
jmp
pop
mov
rol
not
and
(bad)
inc
fimul
mov
jo
sbb
xchg
jle
and
sahf
mov
dec
in
lods
mov
test
pusha
ffreep
gs
cmp
and
ins
jno
inc
mov
mov
push
xor
jmp
xchg
push
arpl
out
int3
sub
pop
or
shl
jbe
or
jno
cmp
mov
xchg
add
fwait
add
and
ror
add
out
cmp
(bad)
xchg
mov
push
and
mov
jl
dec
adc
ja
adc
ret
jno
inc
outs
dec
push
jno
outs
(bad)
mov
es
fdivp
retf
shl
ja
cmc
cwde
cmc
mov
arpl
arpl
mov
popf
ja
jle
loopne
test
scas
xor
stos
enter
lock
popf
push
push
(bad)
jmp
test
mov
out
sbb
fisttp
arpl
push
out
enter
xchg
xchg
test
xchg
push
ja
xor
adc
jl
(bad)
xor
push
(bad)
cld
jne
sbb
mov
pop
ret
jb
sub
sar
test
push
dec
and
scas
adc
mov
ss
cmp
ror
xor
xchg
outs
rcl
scas
ficomp
inc
pmulhw
dec
mov
inc
mov
pop
push
or
or
std
sub
test
sub
test
sar
ror
lds
outs
jo
(bad)
movs
rcl
(bad)
popf
les
mov
cmc
test
sbb
pop
mov
scas
cmp
nop
out
shr
mov
out
xor
mov
lods
xchg
call
shl
xor
sbb
ja
mov
adc
inc
std
lock
gs
dec
sar
(bad)
call
ds
lods
add
jb
jle
sbb
pushf
adc
and
retf
fcmovu
cwde
in
adc
loope
inc
and
cmp
sbb
pop
movs
mov
(bad)
jbe
mov
mov
in
iret
jns
cmc
pop
cmps
add
sbb
loopne
pop
add
rol
stc
sub
push
sti
cmp
lock
jge
pop
cmp
mov
push
jns
fisttp
into
cmp
adc
cmp
cmp
rol
xchg
nop
mov
mov
(bad)
(bad)
pop
mov
pop
mov
cmp
ds
mov
sub
shl
adc
(bad)
ret
fs
ror
mov
es
pop
ss
icebp
retf
outs
and
jmp
mov
mov
fdiv
fs
std
adc
int
adc
add
ss
(bad)
ret
pushf
cmps
pop
mov
pushw
das
push
mov
xor
inc
std
push
inc
jle
rcr
and
icebp
std
mov
nop
hlt
pusha
sbb
or
pop
ucomiss
mov
add
ss
test
aam
sar
push
js
movs
in
jae
push
mov
lods
dec
(bad)
movs
in
rol
lgs
sub
or
test
jns
push
push
dec
mov
aam
adc
xchg
sbb
ins
les
pop
es
add
(bad)
aam
mov
mov
cmp
idiv
leave
in
pop
rcl
not
test
pop
pop
and
mov
push
test
or
jno
cdq
and
xchg
cmc
xchg
inc
mov
sbb
sbb
int
add
in
inc
lahf
mov
push
or
mov
and
adc
frstor
jle
fisubr
adc
mov
sar
mov
pop
cdq
(bad)
dec
cmps
add
mov
push
iret
mov
push
stos
and
sti
sub
in
cld
inc
xchg
push
sahf
mov
rcr
shl
push
push
push
aad
dec
daa
out
mov
or
jns
test
ficom
pop
retf
pop
bound
cmp
out
aad
jmp
dec
xlat
enter
cmp
pop
add
cld
jno
test
mov
pop
and
int3
jo
cwde
hlt
adc
inc
fiadd
(bad)
rcl
xchg
ret
sahf
mov
rcl
fs
or
test
jecxz
test
sub
jbe
mov
sbb
rcr
add
inc
into
adc
sti
xchg
jg
loop
idiv
mov
sar
and
xchg
inc
mov
mov
mov
in
fstp
lock
lods
fisttp
aaa
jae
outs
sbb
pop
mov
lea
dec
sti
rcl
das
ret
sti
jns
sub
movs
rcl
inc
mov
mov
mov
or
mov
add
add
(bad)
adc
or
adc
retf
in
ins
outs
loop
jle
bound
addr16
enter
and
inc
lahf
sbb
push
outs
imul
jns
jb
and
daa
nop
cs
push
xchg
fdiv
loop
add
sbb
jp
scas
and
xchg
and
push
jo
xchg
ins
repnz
sbb
xchg
jnp
xchg
daa
iret
es
adc
mov
pusha
rcpps
add
add
mov
xchg
pop
sub
cmps
ss
or
adc
ret
icebp
mov
jge
pop
dec
xor
div
lods
out
mov
pop
(bad)
ss
in
adc
ss
into
add
fstp
neg
ja
rcr
aad
in
jnp
ins
std
sub
mov
popa
pop
push
lods
jle
push
aad
test
pushf
sahf
mov
sbb
test
cld
mov
push
cmp
in
in
xor
aam
inc
sar
hlt
imul
mov
fucom
inc
mov
je
test
shr
(bad)
pop
cmp
ret
or
dec
(bad)
pop
shr
int3
push
or
sbb
inc
call
push
xchg
sbb
mov
out
inc
daa
scas
dec
fs
mov
test
imul
mov
xchg
sub
sbb
test
pop
jmp
xor
mov
jecxz
add
jne
xchg
sub
loop
adc
dec
lods
xchg
xor
add
(bad)
mov
xchg
mov
idiv
clc
mov
push
cmp
fcmovne
xor
fdiv
mov
mov
gs
std
or
sub
pop
jmp
mov
jnp
leave
push
xor
loope
jns
aaa
ins
lds
sbb
pusha
scas
les
dec
ror
mov
mov
xchg
xchg
cmp
dec
fsubr
xchg
pop
or
mov
sbb
inc
sbb
cwde
xchg
dec
adc
fdivr
mov
ja
pop
loope
mov
jmp
ins
les
xchg
rcl
ja
rcl
data16
dec
ret
lock
lods
pusha
xor
mov
push
push
adc
inc
cld
and
jle
jl
cld
ja
aas
mov
adc
mov
push
(bad)
test
ror
add
fld
mov
sub
jnp
leave
loop
or
dec
out
dec
int3
aaa
in
into
cdq
call
lods
push
(bad)
and
cmc
in
xor
dec
mov
bound
inc
(bad)
fistp
outs
movs
pop
lahf
xor
out
pop
out
pop
push
lods
les
mov
movs
(bad)
push
cmc
cmp
jb
icebp
sub
shr
sub
pop
pusha
pop
leave
jecxz
cmp
adc
pop
or
push
and
retf
jnp
inc
adc
(bad)
pop
xor
mov
cmps
sub
sbb
mov
jmp
repz
test
cwde
mov
out
std
push
rcl
adc
div
aam
mov
fist
sbb
xor
dec
(bad)
xlat
lods
test
shl
inc
stos
cmc
push
iret
test
repz
mov
sbb
repnz
out
scas
push
sub
movs
xor
inc
iret
push
mov
fcomip
mul
add
xchg
rol
pop
mov
and
ficomp
ja
in
pop
jle
pop
mov
mov
push
popa
jle
dec
into
imul
lds
push
mov
dec
cmp
dec
mov
ja
cmp
xchg
aam
mov
nop
mov
cld
iret
xchg
(bad)
pop
dec
inc
push
ja
dec
dec
out
dec
jg
test
inc
xor
cli
push
mov
fisttp
xor
jae
adc
cmps
icebp
push
rcl
adc
inc
xchg
(bad)
sbb
enter
sub
cmps
ins
adc
xchg
pop
push
test
out
pop
loope
data16
jg
xchg
adc
sub
push
loope
dec
addr16
js
out
xchg
mov
in
(bad)
mov
adc
pop
daa
gs
jmp
cmp
push
imul
adc
cmp
ret
mov
jmp
loopne
lods
mov
movs
xchg
sub
pop
aas
cmps
jmp
mov
dec
cmps
xchg
out
loope
jp
sbb
jnp
jl
(bad)
sti
jb
scas
out
gs
mov
push
loopne
cmp
xchg
and
sub
sub
mov
dec
mov
xchg
cmp
rcl
sub
pop
mov
dec
cmps
inc
xor
fdivr
push
add
aas
into
push
xor
pusha
jbe
xchg
pop
loope
(bad)
out
push
cmp
and
xor
push
ins
xor
shl
add
ins
das
inc
pop
loop
dec
xor
es
repz
in
xchg
cld
rcl
pop
mov
mov
sub
cmp
and
daa
loop
jns
cmp
fist
das
and
and
fst
sub
pushf
push
sar
mov
call
push
stos
sbb
rol
jb
xor
pop
dec
outs
xchg
dec
inc
pop
(bad)
out
dec
(bad)
jae
xchg
sub
gs
push
mov
push
pop
out
sbb
sub
(bad)
loopne
pop
mov
sub
xchg
nop
cmp
jne
jns
and
pop
mov
inc
nop
aad
add
mov
or
jo
int
xchg
test
mov
aas
jp
(bad)
popf
clc
xchg
sub
jl
pop
lea
inc
jmp
mov
adc
fs
jne
mov
mov
test
or
out
dec
movs
cmp
and
xchg
cmp
or
jmp
fst
les
rcr
scas
ret
pop
div
cdq
pop
test
(bad)
call
(bad)
ins
(bad)
mov
cmp
loopne
pop
xor
jae
mov
mov
cmp
jno
push
fidiv
mov
inc
ficom
bound
jmp
push
not
test
xchg
xor
mov
add
lea
dec
sub
sbb
mov
(bad)
push
inc
call
push
scas
inc
test
sub
push
lahf
popf
imul
sub
jl
mov
cdq
sbb
push
ja
aaa
in
cdq
xchg
ror
in
pop
(bad)
or
and
repnz
xchg
lods
push
dec
jmp
test
pop
aas
stos
fist
(bad)
dec
out
inc
int
cs
pop
sub
add
sbb
call
push
pop
mov
xlat
xchg
xchg
and
ins
pop
pop
sub
jne
lods
xor
add
xchg
xchg
lahf
sar
ds
cmp
pop
inc
nop
aaa
popa
or
jl
popf
test
mov
pop
imul
mov
mov
push
add
leave
mov
and
xor
sbb
xchg
inc
push
(bad)
jp
cmp
mov
xchg
inc
(bad)
loopne
in
jecxz
pop
xor
sar
repz
aas
jo
inc
push
icebp
sub
loope
fmul
adc
mov
or
add
mov
or
in
pop
in
cmc
sbb
pop
jge
(bad)
jb
in
mov
jl
movs
popf
stos
leave
sbb
loop
out
movs
fldpi
cli
out
sbb
mov
les
retf
jge
push
ins
(bad)
out
(bad)
xchg
rol
mov
sbb
or
and
and
mov
retf
bound
xchg
aam
sbb
(bad)
push
fisttp
mov
test
jo
(bad)
xchg
cwde
mov
icebp
(bad)
xchg
push
inc
mov
xchg
xchg
pop
leave
sub
inc
adc
fwait
shl
push
or
clc
sbb
hlt
js
pop
dec
inc
cs
dec
xchg
addr16
add
or
push
jbe
adc
jle
or
xor
pmaxub
pop
outs
add
lods
lock
fucomip
adc
sbb
in
movs
(bad)
mov
sti
dec
or
inc
fmulp
jo
pop
scas
movs
xchg
hlt
(bad)
adc
outs
fstp
lods
es
rcl
dec
hlt
xchg
cmp
lds
(bad)
cli
jo
add
mov
ds
push
dec
push
adc
jl
mov
push
into
stc
xchg
inc
imul
xor
jge
nop
xor
push
stc
xor
fcmovnbe
pusha
pop
lods
pushf
and
aam
ja
(bad)
cmp
inc
mov
xor
je
xor
pop
inc
pop
pop
mov
push
add
test
sub
push
pop
push
mov
xchg
xor
enter
pop
cli
cmp
jp
add
je
cmp
or
mov
daa
aam
ror
inc
and
test
push
icebp
cmp
sub
rcr
adc
in
push
and
inc
in
daa
clc
mov
pop
xchg
out
into
lahf
dec
dec
sbb
mov
push
xor
cld
iret
mov
out
sbb
jecxz
movs
ja
in
int
mov
outs
add
add
iret
mov
in
cli
sbb
stc
stos
cdq
mov
test
pusha
inc
bound
cmp
fld
jo
mov
scas
pop
lock
je
(bad)
mov
cmp
add
mov
inc
push
loope
shr
jecxz
outs
stos
movs
fist
push
jmp
mov
popa
cmp
dec
hlt
mov
push
add
push
fcomi
pop
popf
cmp
sbb
loopne
fisttp
mov
add
xchg
(bad)
cli
dec
in
out
or
pop
xor
cmps
repnz
adc
aas
xor
or
mov
push
outs
jbe
sahf
bound
jmp
cmp
mov
mov
dec
push
fdiv
idiv
out
sbb
mov
push
fisttp
int3
inc
xor
pop
pop
in
jne
adc
add
pop
xchg
mov
push
cld
jmp
cmp
mov
or
(bad)
xchg
fcomp
mov
mov
and
push
inc
inc
xor
inc
pop
mov
rcr
fs
pop
or
push
loopne
ds
dec
repnz
cmp
push
test
out
loopne
cs
or
std
pop
cmp
fbld
lds
hlt
outs
inc
xor
xlat
cmp
jmp
or
shl
aas
adc
pop
cli
and
xor
or
push
cmp
(bad)
nop
and
cs
jmp
js
pop
(bad)
mov
ds
rol
mov
mov
add
pop
enter
add
js
ret
retf
xor
(bad)
aam
mov
mov
add
imul
lahf
jmp
mov
imul
cmp
clc
lea
dec
and
mov
in
mov
aad
mov
int
(bad)
out
pop
jne
scas
shr
std
or
xor
pusha
stos
sbb
daa
lock
add
adc
out
std
sbb
in
in
dec
jae
lea
les
ret
sub
cli
sahf
aas
nop
fwait
jp
fidivr
push
push
dec
mov
stos
or
mov
cld
bound
je
in
jg
shl
rol
add
in
rcr
bound
mov
sbb
sar
jns
and
xor
push
daa
add
jl
retf
mov
push
xchg
js
lds
idiv
pop
loope
or
mov
mov
add
les
sbb
out
and
adc
push
lea
mov
popf
shl
or
or
fdiv
stos
add
jmp
cs
fisub
sub
sbb
pop
mov
jg
bound
mov
out
aad
clc
ins
shl
ja
cld
call
xor
pop
xchg
fmul
jmp
rol
iret
dec
push
push
popa
mov
jle
adc
inc
jnp
mov
repnz
xchg
sub
cmp
and
xchg
(bad)
mov
adc
clc
inc
in
jno
mov
aaa
(bad)
sbb
sahf
fist
scas
xchg
scas
in
cmp
ficom
push
dec
test
movs
das
jbe
or
cmp
mov
sbb
xchg
fnstcw
pop
mov
or
inc
pushf
mov
or
hlt
xchg
sub
and
or
nop
in
mov
inc
sub
and
fidiv
sub
sti
or
cmp
cdq
push
pop
mov
sbb
add
sub
push
and
sahf
adc
adc
adc
jecxz
jns
fdivrp
lods
add
pop
out
retf
mov
out
fxam
jno
ficomp
adc
push
push
xor
pop
add
add
xor
cmp
aad
add
stc
dec
inc
adc
push
xchg
add
addr16
stos
mov
inc
ins
xchg
pop
xchg
push
mov
int
jns
xchg
shl
call
lods
xor
push
push
cmp
call
mov
dec
movs
mov
daa
jbe
stos
xchg
mov
add
scas
daa
dec
push
pop
push
sub
mov
in
mov
cmp
retf
pop
cmc
jnp
dec
add
and
xchg
repz
aas
inc
sbb
pop
xchg
enter
and
repnz
sbb
mov
push
int
rcr
and
aas
retf
mov
fcom
cdq
mov
mov
dec
mov
cli
add
xchg
cmc
jns
mov
ror
inc
add
push
xchg
and
popf
adc
xor
pop
xor
retf
adc
push
dec
mov
in
jno
sar
test
iret
mov
loop
rol
sub
add
or
scas
retf
popa
or
xchg
inc
push
cwde
adc
loop
cmps
xor
out
mov
and
xchg
push
and
std
iret
mov
mov
jle
pop
addr16
cmp
adc
add
lods
shl
ins
pusha
push
mov
sbb
cmp
shl
dec
sbb
not
mov
stos
and
adc
mov
je
pop
cwde
xor
call
sbb
out
push
pop
mov
push
(bad)
f2xm1
jge
arpl
push
shl
imul
enter
ret
enter
jb
mov
je
or
into
test
mov
ja
aaa
dec
or
lods
fadd
dec
mov
cs
push
sbb
pop
js
and
cmc
dec
fld
mov
inc
enter
cmp
in
xor
jmp
xchg
or
cmovle
out
push
loope
icebp
add
mov
mov
push
fwait
cmp
or
mov
jle
mov
js
fdiv
sahf
dec
pop
jg
cmp
enter
push
dec
jl
ror
mov
pop
and
out
enter
add
je
or
jmp
cld
cmps
push
or
lock
mov
mov
xchg
xchg
loope
push
cwde
and
inc
add
pop
xchg
jge
stc
xchg
mov
sbb
sbb
or
nop
xchg
shr
jmp
scas
ins
mov
adc
xchg
dec
sbb
fwait
push
div
mov
mul
push
cmc
sub
sbb
cli
ins
sbb
mov
ror
mov
dec
push
fcmovnbe
nop
jae
xor
mov
cdq
outs
dec
jae
add
sbb
or
cwde
test
leave
mov
loope
daa
enter
push
sub
js
dec
out
cmp
inc
sub
test
jno
xchg
in
pop
sbb
scas
lock
(bad)
push
xor
rol
pop
addr16
dec
imul
jo
mov
call
and
cmp
adc
jge
nop
fld
imul
push
out
or
sbb
mov
gs
adc
enter
out
sbb
aaa
mov
xor
pop
hlt
pushf
mov
push
inc
pusha
fcomp
or
or
xor
pop
pop
fidivr
sub
xor
jg
dec
es
jg
mov
cmp
imul
pop
mov
sub
and
pop
addr16
and
fdiv
mov
test
fldenv
icebp
(bad)
call
mov
in
test
push
es
fild
sub
mov
cmp
dec
xlat
xchg
jg
sti
xlat
sub
pop
sub
fcmove
call
mov
dec
loope
mov
dec
sub
scas
push
or
popa
int
mov
mov
out
ins
cld
push
nop
arpl
cdq
and
sbb
fild
clc
fs
dec
adc
sbb
push
outs
xlat
loopne
push
push
aam
inc
mov
sbb
icebp
pop
cmps
and
mov
xchg
mov
push
or
push
push
int3
add
ja
mov
push
nop
gs
test
push
fcom
mov
stos
mov
stos
cmc
cli
sub
sub
sub
cmp
inc
enter
call
pop
sti
sbb
pop
mov
push
and
pop
pop
xchg
cmp
xor
sub
or
jns
loope
addr16
pop
jmp
push
mov
(bad)
mov
pop
(bad)
lds
mov
jne
pushf
mov
lahf
out
xor
popa
imul
and
pop
(bad)
lods
jno
pop
fst
bound
ret
fs
adc
stos
or
test
sti
int
push
mov
pop
mov
ret
lahf
gs
jl
mov
mov
and
xchg
dec
fmul
dec
shl
add
mov
xchg
sbb
lds
mov
sub
or
or
jmp
sub
pop
cdq
pop
scas
and
dec
mov
mov
jmp
push
xlat
or
popa
(bad)
and
cmp
fadd
or
(bad)
mov
xor
in
pop
bound
push
xchg
movs
or
shr
and
cdq
loop
cmps
test
inc
dec
cmp
data16
push
(bad)
pusha
ror
js
int
ret
sahf
(bad)
arpl
cwde
out
mov
or
test
in
cmp
cwde
pop
mov
push
pusha
mov
push
adc
xor
cld
daa
add
aam
add
sub
jmp
stos
sahf
cmp
inc
or
pop
mov
repnz
jmp
cmp
retf
pushf
shr
shl
lahf
loop
sub
cld
adc
push
jmp
mov
push
sub
out
sub
out
out
mov
inc
sahf
jb
pop
cmp
fwait
inc
pop
ins
mov
retf
div
mov
xlat
xor
es
out
test
push
(bad)
int
jle
aas
ret
push
inc
jb
mov
sbb
jecxz
and
jl
cmp
out
jp
ds
daa
jnp
jle
sub
(bad)
push
jp
push
in
mov
test
mov
pop
sub
enter
in
int3
push
jns
lock
inc
pop
xor
jg
lods
std
cmps
xchg
daa
mov
pop
xchg
xor
ficom
es
scas
mov
ss
imul
test
out
xor
into
fld
call
imul
test
add
sti
xlat
or
in
leave
das
xchg
jecxz
pushf
adc
mov
jne
ins
jle
inc
ror
jle
shl
jne
sbb
clc
scas
addr16
sub
in
mov
xchg
in
or
(bad)
int3
mov
push
sub
int
ja
shl
dec
imul
mov
xor
mov
cld
cmp
push
jmp
jmp
fs
or
hlt
mov
jns
xchg
or
and
sbb
retf
add
xchg
mov
cmp
mov
call
or
loopne
int3
fiadd
test
arpl
mov
and
xchg
std
in
ret
stc
push
cmp
or
rcr
sub
jne
in
int3
daa
imul
xlat
retf
push
dec
dec
lods
xor
push
not
lods
adc
mov
mov
pop
sub
push
fmul
jo
ds
cmp
add
aad
xchg
fld
add
cmp
dec
in
cmps
pop
or
imul
mov
punpckldq
out
or
mov
nop
cld
mov
test
sub
(bad)
and
mov
or
mov
inc
pop
lds
mov
dec
std
pop
mov
xchg
pop
mov
sahf
pop
retf
div
and
push
aas
push
mov
ret
xchg
adc
xor
retf
push
and
add
ja
imul
addr16
sbb
jl
fisubr
sbb
sahf
lock
cli
mov
out
jecxz
imul
dec
cmp
mov
or
cmps
push
stc
sub
test
call
movs
(bad)
fnstcw
adc
mov
call
adc
movs
mov
mov
xor
add
loope
sbb
test
cmps
push
inc
pop
jmp
aam
inc
bound
mov
gs
inc
xchg
mov
and
inc
jmp
imul
xchg
nop
(bad)
sub
mov
sti
push
adc
push
std
push
mov
mov
xchg
push
adc
push
test
mov
shl
cmps
xlat
cdq
cmps
cdq
and
(bad)
(bad)
inc
scas
outs
mov
jne
xlat
(bad)
dec
fimul
dec
out
add
or
adc
mov
inc
or
jmp
jg
outs
xchg
or
shl
cdq
nop
adc
(bad)
mov
or
cmp
and
lods
cmp
gs
jno
push
loopne
sar
push
js
int
push
sub
imul
out
loopne
call
inc
sub
sbb
adc
sub
das
push
add
(bad)
push
cmp
fst
sti
xor
mov
je
jle
sbb
adc
and
es
fadd
add
into
imul
bound
inc
inc
ins
test
xchg
push
cwde
jle
outs
mov
shr
sub
fs
daa
sbb
(bad)
mov
mov
lds
cli
inc
push
fst
test
push
xchg
mov
pop
imul
sahf
arpl
jp
ret
out
mov
cmps
xor
cmp
or
out
scas
sbb
jmp
ret
jecxz
adc
mov
rcr
fstp
xchg
(bad)
stos
call
movs
outs
sub
dec
imul
adc
xchg
jl
aaa
xor
shl
ror
sub
pop
scas
cmp
mov
in
inc
cwde
lods
push
out
pop
xlat
mov
inc
cmp
outs
popfw
pop
scas
push
inc
aam
repnz
retf
es
sbb
enter
in
icebp
pop
pop
jl
or
retf
mov
aas
int
dec
ret
ins
jns
sbb
push
shr
sub
mov
xchg
sub
fisub
ss
add
cmps
push
adc
retf
or
mov
inc
les
cld
jae
push
nop
sbb
pop
shr
mov
pop
mov
js
mov
sbb
adc
mov
mov
stos
aaa
lds
adc
fdivr
pushf
jae
push
mov
sub
jbe
in
mov
push
or
ret
out
mov
pop
cmc
ins
sbb
push
mov
inc
lods
adc
or
test
or
mov
outs
hlt
xchg
xchg
mov
jp
inc
psadbw
cdq
outs
push
and
clc
enter
test
inc
dec
push
inc
xlat
dec
shl
mov
lahf
lock
sub
or
nop
mov
scas
ja
xchg
lea
sub
pop
or
jle
scas
or
dec
mov
cmp
icebp
sti
dec
inc
std
pushf
dec
call
push
fsub
pop
nop
mov
fwait
jle
lods
jne
js
or
das
loope
loope
mov
sub
pop
adc
imul
or
dec
mov
jbe
cmc
in
leave
add
sbb
mov
lods
(bad)
mov
ror
add
mov
jbe
push
cmps
ret
test
mov
mov
(bad)
mov
adc
adc
sub
loopne
imul
mov
leave
aaa
jmp
test
ret
stc
xor
push
and
mov
dec
mov
test
add
xlat
mov
(bad)
int
sub
sub
adc
imul
sbb
lds
int3
dec
outs
clc
cdq
sbb
or
cwde
add
ss
and
stc
adc
sub
shl
shl
xlat
jmp
ss
lea
movs
add
mov
ds
movs
or
mov
mov
lock
sahf
cmp
jmp
rcl
pop
and
pop
mov
adc
repz
xchg
stos
repnz
out
dec
call
sub
add
mov
adc
jbe
add
pop
xlat
out
call
pusha
popa
pop
popa
xchg
div
add
imul
mulps
call
jbe
leave
jge
cdq
xchg
dec
dec
cld
fcom
push
jo
jl
jp
cmp
fstp
ja
(bad)
jae
daa
mov
ja
pop
test
push
call
test
outs
jbe
arpl
jb
or
fsubr
dec
fs
or
sub
idiv
sahf
fmul
mov
jnp
(bad)
jge
(bad)
jmp
(bad)
clc
(bad)
jnp
leave
mov
xor
je
add
out
push
push
sbb
ret
in
pop
sub
cmp
xor
push
adc
pop
fbstp
les
dec
xor
sub
mov
gs
mov
cmps
adc
pop
ficom
ja
inc
push
rcr
sbb
sub
jns
jnp
xchg
sub
mov
movs
mov
ret
dec
stc
mov
ins
mov
jbe
sbb
sub
or
dec
sbb
es
mov
stos
adc
std
push
pop
mov
jnp
push
adc
mov
jns
pop
ds
jp
cmps
jae
pusha
repnz
out
or
out
xchg
sub
sahf
test
(bad)
xor
xor
addr16
cmp
sbb
jle
sub
loope
xchg
mov
je
xchg
enter
dec
sub
shl
movs
jg
pop
sub
popa
cs
xchg
jle
xchg
in
mov
jns
or
mov
pusha
cld
xor
test
lgs
push
iret
mov
call
inc
lds
or
lds
std
mov
mov
test
enter
popf
(bad)
cmp
xor
cmp
shl
mov
icebp
lock
mov
adc
das
xchg
shl
outs
mov
mov
mov
inc
stos
(bad)
sub
scas
ins
pop
das
js
sub
fbstp
xchg
rcl
cwde
inc
imul
shl
mov
cwde
cmps
lahf
jp
mov
cmp
sub
movs
add
fpatan
sub
repnz
es
mov
neg
popf
(bad)
mov
sbb
mov
mov
cmp
cmp
xor
popf
pop
clc
push
js
dec
or
inc
mov
push
xchg
adc
(bad)
jmp
les
lea
mov
fcmovnb
add
cmp
mov
mov
push
out
or
mov
les
pop
sbb
cmp
mov
in
ins
aad
inc
mov
adc
sti
xor
out
retf
jecxz
mov
xor
loop
out
inc
(bad)
mov
push
pop
sub
imul
repz
fsub
int3
cmp
cmp
mov
ss
jno
or
pusha
(bad)
cmp
jbe
dec
fiadd
in
fdivr
mov
cmp
mov
adc
pushf
fwait
cmp
xchg
dec
mov
sahf
scas
aas
xchg
setp
adc
mov
inc
jb
dec
ins
clc
aaa
xor
mov
mov
jl
push
mov
ret
sbb
xchg
clc
sbb
sub
push
fadd
outs
in
js
dec
(bad)
and
and
cmc
jns
jae
out
pop
pushf
cmp
in
mov
pop
cli
mov
cmp
lds
dec
and
loopne
jmp
push
aad
repz
push
sbb
mov
stos
push
mov
adc
scas
imul
sti
imul
adc
or
sbb
push
jge
in
ret
jne
xchg
push
add
pop
retf
or
cmp
dec
dec
aam
stos
mov
xchg
int
dec
mov
sbb
pop
int
repnz
mov
adc
fwait
test
std
lea
pop
dec
imul
pushf
and
scas
cmps
mov
hlt
sub
inc
enter
dec
(bad)
(bad)
push
das
lahf
aaa
jno
adc
clc
arpl
pop
gs
inc
and
adc
and
dec
mov
sub
sbb
nop
pop
popf
pop
lods
or
mov
je
mov
cmp
je
or
imul
jns
sti
cmp
stos
iret
inc
test
cli
mov
loop
or
or
jmp
into
out
outs
pop
fild
ss
ror
jbe
repz
adc
sbb
mov
fimul
dec
ss
mov
jnp
pop
push
mov
stc
pop
adc
push
js
xor
mov
lds
pcmpeqw
pop
jno
imul
call
mov
repz
add
movs
rol
shl
js
mov
push
pop
dec
push
xor
inc
pushf
sub
jno
cmp
es
icebp
mov
pop
aad
push
lods
test
sar
enter
jge
sbb
dec
sbb
loop
ins
xchg
fwait
shl
push
and
add
push
stos
leave
outs
aas
aaa
(bad)
mov
push
ds
inc
xchg
aam
fwait
mov
stos
lock
pop
pop
adc
stos
bnd
mov
lds
daa
fbstp
xor
dec
aad
addr16
jbe
data16
sahf
mov
xchg
jmp
dec
into
ins
in
cmp
or
mov
data16
enter
cmp
push
lds
rcl
fnsave
in
mov
mov
in
(bad)
xor
nop
adc
push
or
inc
jbe
cmp
pop
mov
xchg
pushf
sbb
add
movs
ror
in
jns
ins
hlt
sub
in
pop
push
ins
je
mov
push
idiv
sbb
add
pop
jae
mov
push
mov
in
mov
push
addr16
(bad)
push
ins
sub
sub
and
fdivp
mov
jne
and
fwait
xchg
retf
lods
or
sub
dec
pop
mov
mov
push
cs
das
retf
into
retf
stc
call
clc
sub
and
arpl
dec
pusha
or
xor
sahf
dec
scas
and
fwait
dec
xor
fld
xchg
enter
out
test
xchg
cmp
hlt
xchg
iret
sub
stos
dec
jle
loopne
(bad)
jmp
or
dec
and
dec
xlat
dec
popf
sahf
and
cmps
and
cmp
js
jbe
fdivr
push
ss
xor
jg
lock
mov
fucomip
ds
pop
daa
mov
sbb
idiv
nop
push
loop
add
push
fild
xor
and
mov
call
clc
or
clc
loope
test
lds
sbb
inc
in
xor
adc
repnz
stc
retf
rol
call
cwde
fist
fsubr
and
jle
pushf
cmp
push
adc
push
dec
or
ds
test
in
(bad)
loopne
mov
xor
rcl
outs
jl
inc
mov
int
pop
out
xor
and
sub
lods
add
mul
jmp
pushf
jns
add
call
stos
scas
rcr
les
xchg
lods
inc
push
cmp
push
shl
ja
dec
cs
dec
jecxz
inc
popa
iret
add
or
aas
xor
push
std
xchg
xchg
mov
neg
arpl
daa
sbb
inc
xchg
hlt
outs
mov
jmp
pop
movs
jne
push
rcr
push
mov
jmp
(bad)
aaa
or
add
out
icebp
scas
icebp
push
mov
xor
test
dec
scas
sub
jmp
prefetchnta
ficomp
sbb
outs
mov
fist
lock
xchg
push
das
stos
test
sbb
push
outs
push
cmps
and
fdivr
sub
nop
call
add
mov
das
fcom
frstor
popf
push
pop
jo
push
stos
mov
ja
fisub
popf
or
repz
popw
std
call
enter
mov
mov
outs
or
mov
mov
jnp
test
and
ss
mov
jp
stos
xchg
pop
(bad)
call
pop
xchg
push
mov
popf
(bad)
adc
(bad)
sbb
stos
mov
cmp
aad
cdq
test
mov
adc
clc
mov
pop
and
cmp
mov
cmp
hlt
(bad)
popa
and
ds
(bad)
xor
cwde
inc
ret
sahf
jmp
lods
mov
test
cs
inc
adc
mov
cmp
pop
enter
push
sbb
pop
mov
or
sti
sti
outs
mov
dec
jnp
xchg
scas
ja
mov
rcl
loopne
mov
sbb
sub
mov
les
push
rol
mov
mov
mov
push
mov
fs
xor
cmp
xchg
dec
mov
jecxz
fbstp
mov
mov
not
mov
ret
ror
aam
pop
adc
iret
xchg
xor
push
arpl
jae
outs
mov
sbb
xchg
imul
xchg
pop
or
shr
dec
daa
sbb
gs
sub
sub
add
cmp
std
jnp
aaa
adc
and
movs
pop
inc
add
retf
push
adc
cmp
fstp
inc
push
stos
add
sbb
repnz
dec
outs
rcl
mov
inc
outs
mov
inc
pop
clc
out
mov
retf
push
jbe
mov
push
xchg
scas
xchg
jnp
jg
xor
nop
adc
jno
out
lods
and
retf
cmp
mov
ret
lahf
call
push
cmps
dec
sub
outs
cmps
aas
jbe
xor
js
push
mov
cmp
or
adc
mov
sub
lock
jo
(bad)
addr16
lock
mov
add
jg
cmp
push
and
xor
fs
fcomp
arpl
ficom
mov
sub
and
lods
fsub
ja
jbe
jns
cli
addr16
data16
add
test
ins
and
sti
jns
xchg
xor
les
add
sbb
inc
int
inc
mov
push
pushf
out
xor
mov
test
fld
and
dec
mov
push
(bad)
jle
lahf
cmp
push
int3
sti
jg
dec
les
add
jnp
lock
xchg
or
push
push
xor
lods
jmp
push
inc
mov
jo
or
test
mov
jae
pop
shr
cs
sbb
xor
mov
retf
loope
or
inc
call
pushf
push
sub
and
test
sub
mov
pop
aas
mov
inc
jno
add
sub
sbb
popa
sub
mov
ins
xchg
loop
push
out
loope
xor
or
or
gs
ja
mov
aam
leave
cdq
jle
xor
sar
add
retf
lods
sub
mov
inc
fld
or
ret
mov
pop
popf
sar
add
jecxz
pop
push
shl
mov
cli
mov
pop
mov
jne
loop
jne
std
inc
push
xchg
scas
bswap
xlat
repz
cmp
jle
push
out
pop
out
ds
add
mov
icebp
loope
jg
sti
mov
sub
out
aas
xchg
jb
jbe
mov
push
jg
jne
pop
cwde
and
clc
add
sub
iret
in
add
xchg
mov
dec
jne
cmps
pop
int
jecxz
std
test
fld
mov
or
(bad)
sub
inc
(bad)
fadd
push
repnz
ret
pusha
xor
inc
or
and
sbb
fs
stos
repnz
mov
xchg
push
xchg
mov
jbe
cmp
push
sbb
pop
or
ss
mov
lock
cld
icebp
adc
ss
add
pushf
push
ret
adc
dec
adc
pmaxub
cmp
mov
lock
std
aad
dec
pop
shr
ins
mov
dec
lea
daa
das
xchg
or
ss
gs
or
aam
or
xchg
retf
mov
mov
sub
pop
mov
push
jmp
mov
and
rcr
es
xchg
cmp
mov
sbb
int3
(bad)
xor
push
add
and
mov
jge
add
mov
xlat
push
call
push
xchg
fimul
in
jmp
adc
int3
call
ds
popa
jmp
jp
sub
lds
mov
cmps
sahf
push
sahf
dec
xor
cmp
retf
sub
test
das
mov
cli
dec
mov
cmps
(bad)
idiv
jecxz
cld
mov
cmp
or
in
pushf
inc
test
shl
cmp
push
ss
es
je
in
push
xor
adc
xchg
in
jae
out
mov
fcmovb
dec
ror
and
xchg
idiv
xor
sub
inc
and
cmp
mov
mov
jb
fist
pop
jl
pextrw
add
push
and
sbb
stos
clc
inc
inc
loope
fsubr
mov
dec
(bad)
imul
adc
sbb
mov
out
into
jecxz
inc
adc
adc
push
mov
xor
add
pusha
repnz
sub
xor
pushf
push
cs
push
adc
or
lods
fs
or
jb
not
fimul
xor
daa
test
jg
or
push
mov
mov
lds
xor
das
mov
stos
mov
int
pop
cmp
sbb
or
push
jnp
cmps
pmaxsw
and
out
and
into
add
push
neg
mov
jno
call
dec
mov
cmc
jle
add
mov
fidivr
jge
pop
inc
(bad)
popa
cmp
or
cmp
push
repnz
mov
xchg
push
ins
inc
add
ret
enter
cdq
shl
inc
mov
clc
add
imul
scas
bound
rol
sub
dec
in
jmp
inc
jp
sbb
xor
(bad)
fstp
cmps
mov
or
aaa
in
xor
xor
and
fist
dec
pop
xchg
mov
sbb
mov
adc
push
out
shr
scas
cld
daa
inc
cs
neg
sti
jb
iret
loop
cs
test
movs
mov
jb
jb
cli
in
outs
and
push
xchg
(bad)
(bad)
stos
add
out
pop
test
sbb
js
mov
retf
mov
and
test
sub
pop
xchg
push
xchg
int
push
sbb
fisttp
mov
lods
sub
repnz
inc
adc
outs
cmp
ret
sti
jns
dec
ins
pop
mov
inc
sbb
fimul
lods
idiv
test
cmp
xchg
shr
xor
adc
sbb
out
call
mov
xchg
pushf
mov
(bad)
mov
shl
shl
and
(bad)
xlat
mov
sbb
cmp
xchg
xchg
ja
mov
leave
pop
stc
xlat
shl
push
pop
sub
and
fwait
sbb
push
pushf
jecxz
pop
mov
jmp
lock
lods
retf
popa
push
out
jmp
mov
or
jmp
ror
sub
idiv
xchg
and
xchg
mul
in
(bad)
stc
jp
jmp
or
push
fiadd
adc
mov
(bad)
and
out
jp
or
rcl
dec
pusha
xor
aaa
movs
cld
stos
(bad)
pop
jmp
in
loop
test
in
ja
xchg
lea
popa
pop
inc
xor
int
popf
arpl
cdq
jmp
rol
jl
cwde
(bad)
pop
fld
mov
or
in
loop
fisttp
sub
mov
std
jno
mov
adc
sti
adc
sbb
aam
mov
movd
int3
outs
sbb
movs
xchg
adc
push
ret
xor
stos
cmps
shl
inc
js
pop
xchg
dec
xchg
loop
je
jecxz
mov
pop
or
inc
mov
call
dec
aam
ror
mov
stos
and
(bad)
loopne
jno
js
mov
ret
out
in
xchg
push
jmp
ins
and
addr16
out
jmp
mov
cmps
lds
adc
fsub
cwde
mov
retf
cwde
mov
loop
hlt
dec
pop
shl
jbe
in
ret
fwait
push
stc
xor
mov
or
sar
in
into
push
icebp
cmp
in
push
retf
mov
sub
daa
jg
mov
arpl
and
add
sub
clc
test
xor
inc
int3
in
push
fmul
xchg
out
push
mov
test
enter
xor
out
loope
fs
mov
pop
add
mov
rol
idiv
repz
das
cmc
out
mov
xchg
daa
add
jb
push
stos
test
sbb
push
xor
in
or
into
sbb
cmc
jp
fist
or
jne
sub
stos
shr
and
test
mov
out
jecxz
call
(bad)
outs
cmc
call
jmp
cmps
leave
push
cmps
adc
xor
fmul
dec
add
das
add
push
xor
out
mov
jno
cmp
ja
leave
stos
popa
jmp
or
popa
scas
dec
adc
loop
xchg
push
jle
jmp
jecxz
mov
fidivr
adc
jmp
dec
xor
xor
mov
add
dec
(bad)
push
pop
mov
scas
mov
shl
stc
or
lods
sub
pusha
stc
mov
cld
push
in
sbb
jmp
iret
les
fisubr
mov
xchg
mov
xor
mov
daa
dec
pop
sub
je
test
lods
retf
pop
mov
cli
clc
sar
xchg
sub
lahf
or
pop
push
push
mov
adc
and
out
sub
leave
(bad)
aaa
xor
rol
ss
jmp
mov
dec
aaa
loopne
push
add
aam
(bad)
push
fwait
fwait
mov
(bad)
mov
sub
jge
xor
jo
lock
(bad)
popf
adc
loopne
sahf
and
ins
dec
rcr
jo
mov
paddq
dec
mov
icebp
inc
jmp
stos
pop
adc
call
cmp
rcr
mov
sbb
movs
aas
test
push
aas
dec
push
inc
push
push
or
ret
mov
or
sub
(bad)
repnz
aad
pop
sbb
aam
inc
mov
stos
jmp
lock
aad
jmp
mov
sub
xor
sub
js
push
fdivr
test
jle
aad
imul
sar
outs
and
(bad)
test
aaa
fsub
xor
cmp
std
cs
push
or
dec
ror
inc
lds
or
lods
inc
les
je
iret
call
push
daa
movs
and
adc
aam
mov
rcl
pop
cmp
mov
stos
addr16
fs
push
mov
push
cmp
ja
fldcw
inc
adc
xchg
adc
gs
mov
imul
pop
bound
mov
retf
jecxz
stos
ret
rcl
iret
xor
(bad)
mov
jg
xchg
jge
pop
push
iret
add
cmp
inc
ds
nop
mov
cdq
xor
pop
ret
pusha
push
add
aas
les
lea
pusha
mov
fs
push
or
outs
and
jmp
mov
int
cld
xor
je
dec
jb
cmp
dec
data16
aaa
fcmove
sub
push
cmc
sbb
pop
cmps
adc
add
(bad)
popa
neg
sub
mov
mov
lods
jecxz
call
inc
jnp
add
jge
push
pushf
mov
adc
es
mov
inc
inc
push
mov
mov
mov
or
sub
cs
arpl
sub
gs
mov
in
jle
scas
mov
mov
shl
int3
mov
div
movs
mov
popf
in
pop
test
fst
push
sti
and
xchg
inc
adc
sbb
hlt
repz
xchg
out
imul
xchg
dec
int3
mov
in
add
les
sub
rcr
sbb
mov
xchg
and
cmp
mov
jmp
inc
jae
sahf
inc
push
pmaxsw
out
outs
rcr
stos
out
fsubrp
or
push
pop
jg
ficomp
popf
repnz
xlat
das
shl
popa
call
inc
cmps
int
shr
outs
jns
int3
mov
adc
mov
push
mov
lods
fistp
retf
mov
cmps
xchg
(bad)
hlt
(bad)
mov
and
push
mov
aaa
xor
jmp
or
push
rol
int
fiadd
sub
adc
mov
test
cdq
data16
fcmovnu
jmp
and
xchg
cli
test
mov
adc
cmps
dec
mov
test
adc
outs
imul
sub
fpatan
add
idiv
sbb
lock
sub
xchg
in
mov
je
add
in
cld
sbb
sub
in
cmc
mov
cmc
mov
(bad)
sbb
lods
arpl
fwait
sbb
cmp
hlt
xchg
les
dec
xchg
clc
jp
mov
fbstp
sbb
push
push
jno
add
test
addr16
lods
enter
xchg
xor
jmp
in
dec
ins
or
xchg
test
scas
or
mov
lds
imul
pop
add
pop
lods
xchg
hlt
lahf
(bad)
mov
sub
aam
sbb
dec
push
nop
imul
fbld
dec
outs
or
mov
in
test
js
mov
pusha
jo
push
cmp
es
cmp
pop
push
inc
and
dec
push
or
sbb
jmp
pop
add
and
and
jbe
aam
test
jnp
clc
and
xor
mov
dec
push
pop
or
push
scas
aad
inc
stc
push
jno
shl
mov
ror
ret
push
push
jbe
gs
cmp
sub
mov
out
push
push
test
push
dec
xlat
imul
cmp
add
push
fst
stos
add
adc
sub
mov
jno
aad
ss
daa
loop
sub
mov
fdivr
or
push
jmp
fld
mov
pop
cmps
call
(bad)
sub
pop
fwait
jne
das
stos
dec
inc
aad
(bad)
adc
out
test
mov
mov
mov
ficomp
les
and
inc
add
std
add
pushf
mov
fidivr
mov
jno
sub
sahf
int3
push
adc
jbe
or
ficomp
or
xor
daa
loop
in
xor
hlt
jnp
mov
rol
add
sbb
sbb
jmp
add
retf
push
(bad)
adc
js
sub
cs
xchg
add
mov
(bad)
fdiv
add
jmp
push
jg
lods
rol
shl
adc
mov
fcom
gs
in
sti
sub
or
dec
ds
addr16
loope
nop
retf
pop
mov
fisttp
push
(bad)
daa
aas
and
in
xchg
mov
cmp
shl
js
xor
fidivr
stc
fstp
in
or
inc
mov
jmp
mov
add
stc
fst
jmp
test
adc
mov
pop
pop
inc
(bad)
out
adc
clc
sbb
adc
adc
mov
ins
dec
mov
jo
xor
arpl
fild
push
xlat
cld
clc
or
daa
jecxz
cmps
arpl
mov
xchg
push
loope
mov
dec
push
add
adc
xor
movs
call
or
lahf
and
pop
pop
push
bswap
fmul
das
add
imul
fist
mov
push
push
int3
ja
fist
fstp
es
loopne
mov
add
out
out
dec
lahf
xor
push
jle
mov
add
and
inc
xchg
(bad)
mov
jbe
inc
jmp
lods
les
pop
ret
adc
pop
pop
(bad)
jmp
fiadd
or
into
push
addr16
rcl
movs
(bad)
addr16
mov
xor
xchg
cmp
pop
movs
cld
popa
inc
icebp
ficomp
push
add
jb
dec
sbb
pop
or
retf
xchg
push
imul
dec
or
add
xchg
shl
inc
sub
movs
dec
es
push
xor
clc
daa
imul
sbb
add
sub
cli
es
cmp
jge
dec
arpl
cs
pshufw
out
or
mov
jno
ret
popa
push
fldenv
shr
push
sbb
jae
jp
mov
dec
jo
icebp
mov
cmp
and
mov
adc
push
pop
pop
fistp
mov
xchg
cmp
add
adc
sbb
aam
repz
adc
retf
cld
das
jb
scas
call
mov
cli
mov
stos
add
pop
sar
pop
jp
cld
sbb
adc
je
cmps
inc
xor
(bad)
pusha
jge
test
iret
or
cmp
push
fsub
out
and
mov
movs
mov
shl
neg
mov
mov
bound
div
mov
js
in
push
in
push
lock
fmulp
pop
mov
lock
fs
fidiv
aaa
pop
adc
or
push
jle
jg
inc
add
les
std
xchg
and
xor
xchg
jmp
mov
fst
out
cwde
jge
sbb
sub
mov
sbb
clc
jb
jno
add
inc
test
cmp
sub
imul
outs
pusha
movs
mov
xchg
dec
and
mov
pusha
add
(bad)
std
in
sub
outs
sub
xor
push
sti
inc
xchg
call
out
les
das
(bad)
jno
mov
push
dec
and
jge
jmp
scas
int
fsub
xchg
test
jecxz
je
fimul
cld
fs
sbb
(bad)
or
xchg
jns
mov
lea
loop
div
cmps
retf
cmovns
mov
xchg
jno
add
cmp
outs
addr16
es
pop
push
movs
lds
call
jb
js
xlat
xchg
adc
and
cmps
ficom
add
dec
enter
xor
fld
inc
inc
std
dec
ss
outs
mov
sbb
add
dec
in
call
push
mov
fisttp
aam
inc
out
test
mov
xchg
pop
(bad)
fnsave
std
pop
repz
loopne
out
arpl
and
mov
(bad)
in
sub
adc
test
(bad)
and
movs
add
xchg
js
das
cmp
cld
cmps
icebp
inc
sahf
push
xor
(bad)
addr16
out
fist
movs
in
inc
neg
fs
imul
or
add
mov
hlt
dec
add
jae
fwait
mov
loopne
imul
mov
add
mov
pop
cmps
mov
cdq
or
daa
push
jp
gs
sub
jnp
mov
icebp
clc
(bad)
cli
out
mov
outs
cdq
push
je
adc
loop
inc
push
adc
vsubss
mov
scas
pop
xchg
push
and
je
sbb
mov
mov
cmp
ret
sub
cli
(bad)
inc
inc
add
mov
cmp
mov
mov
mov
fsub
int
jmp
imul
dec
(bad)
mov
sub
pop
xor
cmp
mov
scas
rcr
rcl
xchg
sahf
mov
pop
je
ja
and
cli
hlt
sbb
ja
jnp
add
xchg
ins
mov
icebp
popa
fsubr
fs
cwde
stos
enter
icebp
into
and
mov
in
xor
ret
xchg
or
xchg
mov
inc
or
lods
inc
aaa
mov
in
xor
cmc
aad
dec
retf
aam
or
test
ss
in
out
lods
push
test
xchg
mov
adc
dec
lahf
sub
(bad)
int
sbb
aas
hlt
shr
xchg
xlat
push
add
pushf
nop
xchg
nop
loop
jge
lock
div
in
jmp
dec
jae
adc
retf
inc
xchg
xor
inc
out
addr16
xor
jle
push
fbld
push
test
jp
inc
push
fs
fmul
xchg
std
in
lea
adc
outs
jae
sbb
(bad)
div
push
setp
ins
call
aaa
mov
adc
xchg
outs
xor
mov
js
ret
stc
jmp
out
sub
xchg
xchg
imul
les
cmp
imul
test
scas
adc
repz
or
sahf
and
cdq
push
xor
xor
pop
stc
fidivr
cmp
cmc
mov
pop
iret
(bad)
std
push
xor
pop
int
push
movs
imul
stos
into
iret
inc
cmp
out
mov
jnp
cmp
out
add
ja
dec
sbb
leave
sbb
nop
rcl
in
ret
test
(bad)
retf
add
fwait
cmp
sbb
pop
repz
mov
fcom
ror
fld
stos
sbb
int
lods
or
jno
nop
into
retf
xchg
or
adc
and
jae
or
adc
cmp
daa
and
clc
shr
add
(bad)
push
mov
inc
out
cmp
ror
js
movs
lock
jno
out
call
jmp
mov
mov
cmp
inc
retf
adc
inc
jg
aas
pop
je
sub
push
rol
sbb
dec
dec
dec
pop
int
jl
std
loopne
int
xchg
popf
in
(bad)
push
xor
hlt
aam
out
out
and
ret
popa
sti
and
xchg
cmps
(bad)
inc
push
arpl
(bad)
std
cmps
pop
jnp
scas
and
push
mov
cld
mov
in
cdq
push
add
xchg
mov
fcmovne
mov
test
push
sub
inc
(bad)
adc
in
sub
jmp
xor
xor
lahf
add
in
addr16
out
scas
and
dec
and
pop
jmp
(bad)
int3
repz
shr
mov
or
iret
cmp
and
call
push
aad
cmp
out
jne
std
adc
xchg
inc
scas
(bad)
pop
ror
or
test
dec
cwde
push
push
dec
inc
sub
(bad)
pop
test
dec
xor
stos
fisttp
dec
das
lock
ffree
xor
push
mov
pusha
in
pop
mov
jnp
mov
imul
xor
rol
dec
outs
push
mov
adc
outs
arpl
pop
repz
cmps
leave
inc
cmps
jo
push
xor
enter
xchg
lods
ficomp
push
popa
fcmovnbe
xchg
ret
popf
and
inc
into
fs
leave
xor
std
cmp
in
mov
sar
int
dec
push
ret
enter
aam
movs
pop
stos
jbe
dec
push
repnz
adc
leave
xlat
jns
jg
mov
push
out
stos
dec
pop
xor
repz
aaa
arpl
sbb
mov
shl
push
adc
push
iret
loop
sub
dec
das
push
sbb
or
lock
loope
pop
mov
shl
pop
cwde
aam
repnz
sti
minps
fs
loopne
or
xor
hlt
dec
jge
test
into
in
add
jg
jne
aas
mov
mov
pop
cmps
mov
mov
into
les
ja
sub
jp
push
push
shl
not
inc
(bad)
mov
inc
ins
dec
pop
lods
push
xchg
pop
sbb
nop
add
into
lock
add
push
or
clc
push
push
push
sbb
call
out
mov
mov
push
cmp
pop
mov
jl
lock
push
jmp
adc
je
sub
xor
mov
and
push
out
push
jl
sbb
movs
pop
inc
sub
js
clc
ins
dec
pop
in
jmp
rcl
and
loopne
outs
mov
(bad)
xor
and
mov
sub
shl
xchg
mov
out
test
fcmove
sbb
in
jbe
rol
loop
cld
cmp
or
arpl
clc
aaa
add
(bad)
mov
sub
into
ret
jge
cwde
mov
or
lods
sub
dec
mov
popa
cmp
cmc
pop
adc
xor
mov
dec
push
test
je
sbb
mov
cmps
lock
inc
stc
ret
sub
jl
jb
xor
test
sbb
ror
mov
retf
popf
adc
mov
scas
fldcw
(bad)
jecxz
dec
or
fstp
pusha
sub
adc
push
xor
outs
xor
jl
scas
and
push
jl
loopne
cmps
fisttp
xor
enter
and
sahf
jmp
xchg
push
outs
dec
sub
sbb
sub
fwait
adc
mov
lods
or
shl
rcl
and
cmp
ins
xchg
fadd
stos
cld
sbb
cmps
imul
cli
jle
hlt
mov
rol
mov
stos
mov
push
cmp
test
les
into
sbb
mov
jb
add
sbb
icebp
retf
mov
push
and
aaa
in
mov
int3
inc
xchg
fdivr
xor
pop
jbe
pop
sub
retf
and
mov
push
cmp
mov
xchg
mov
fist
sub
mov
gs
test
lahf
enter
add
adc
(bad)
into
xlat
js
jnp
(bad)
add
popa
push
das
test
outs
fdiv
mov
cmp
jbe
inc
repnz
cmp
adc
jle
cmp
inc
add
into
dec
add
mov
sbb
iret
mov
jae
jae
out
loopne
xchg
mov
or
(bad)
and
mov
mov
push
xchg
outs
mov
lock
movs
les
fcomp
(bad)
shr
repz
(bad)
shr
mov
inc
ja
test
out
add
jnp
xchg
ins
mov
shl
mov
push
out
pop
adc
mov
and
stc
cmps
ins
mov
dec
or
les
mov
daa
mov
and
mov
ror
add
rcr
fnstcw
jge
in
mov
push
cld
gs
fldcw
mov
xchg
pop
(bad)
pop
xchg
and
retf
sti
(bad)
jmp
xchg
iret
sti
fld
sbb
inc
gs
cli
das
and
imul
cdq
jecxz
mov
mov
and
aaa
add
inc
imul
pop
popf
add
movs
push
rol
out
xlat
jae
xchg
jmp
sbb
arpl
xchg
cmp
pop
(bad)
fbld
sahf
(bad)
jne
sbb
mov
pop
xor
out
dec
jl
sub
popf
mov
mov
inc
push
sub
xor
add
mov
sbb
jp
iret
imul
es
jo
mov
xchg
sub
push
jno
push
paddw
push
xchg
and
sbb
xlat
das
push
mov
adc
aad
ret
les
pop
lods
sub
pop
ins
in
into
int3
mul
repnz
inc
in
mov
mov
out
je
test
neg
and
sub
mov
jae
push
mov
scas
inc
loopne
push
xchg
repz
dec
jno
inc
and
fs
retf
rol
xchg
xchg
ror
stc
jmp
retf
cs
xor
into
jbe
sbb
push
xlat
dec
dec
icebp
add
xchg
and
and
sbb
pop
mov
jg
sub
out
and
xchg
retf
add
(bad)
ficomp
inc
mov
outs
bound
mov
mov
idiv
lahf
bound
cli
dec
jle
cld
arpl
(bad)
jle
cmps
cmp
pop
sbb
in
in
pushf
sbb
jmp
loop
mov
sub
ret
jl
cmps
mov
enter
not
scas
outs
test
or
cld
xor
jecxz
jg
dec
pop
pop
push
cmp
and
jl
and
rcr
jne
mov
mov
out
mov
jge
dec
sub
ss
sbb
push
lock
stos
pop
mov
ins
cdq
pop
xchg
pop
xlat
jp
shr
or
(bad)
jne
sbb
into
cmp
das
add
hlt
aaa
sub
arpl
in
or
out
and
mov
in
aaa
sub
stos
mov
ja
pop
imul
dec
mov
js
adc
and
cmps
inc
out
and
(bad)
enter
xor
retf
push
jp
out
mov
icebp
lods
fwait
inc
les
(bad)
mov
jmp
(bad)
mov
push
imul
add
xor
mov
sub
xor
mov
jg
sbb
xor
popa
pop
mov
adc
pop
fst
dec
ror
aam
xchg
push
cwde
(bad)
loope
inc
and
mov
xor
imul
call
or
iret
mov
test
jbe
mov
xchg
sbb
push
sbb
scas
xor
mov
cmp
popa
popf
and
jae
daa
add
cmc
adc
inc
fwait
jp
shl
int
sub
daa
dec
cmp
xchg
ficom
repz
call
push
test
out
daa
ret
fcomp
jecxz
test
ds
cdq
std
pop
push
mov
les
dec
xor
int
inc
rcr
sbb
ret
mov
and
jg
fsub
mov
dec
or
call
repz
in
jmp
and
test
mov
sub
xor
mov
sahf
lahf
adc
mov
repz
int3
call
fidiv
dec
sbb
daa
or
inc
movs
fwait
scas
movs
sti
pop
iret
arpl
and
or
xor
mov
sar
xor
jnp
pop
mul
in
add
adc
test
enter
repz
and
cdq
outs
pop
rcr
dec
icebp
dec
movs
(bad)
enter
sahf
das
sbb
jnp
push
int
fisubr
or
xchg
in
jg
add
aaa
xlat
inc
adc
or
ss
or
add
xor
neg
test
lea
cmp
sbb
cmp
push
and
out
ja
clc
fst
dec
sahf
ror
xor
in
popf
repnz
(bad)
add
mov
ja
cs
lock
mov
push
jl
out
jecxz
(bad)
pop
fadd
push
leavew
scas
add
mov
cwde
cs
mov
outs
test
push
jge
jns
in
sub
xor
imul
mov
aad
dec
ins
mov
mov
ja
cmp
pop
jg
dec
push
pop
or
push
jge
mov
lds
cmp
rcr
test
mov
inc
jmp
retf
out
ja
jb
push
sbb
imul
aaa
pop
test
aad
and
lods
sahf
rcl
mov
inc
mov
scas
xchg
and
cmc
repz
repz
fstp
stos
pop
dec
fmul
(bad)
fsub
pop
sti
mov
leave
cld
mov
mov
mov
inc
into
ins
les
adc
or
mov
mov
inc
jae
pusha
mov
push
dec
push
pop
cmp
stos
mov
jb
push
sbb
sbb
ret
cmc
das
hlt
jl
popf
fadd
fisub
push
call
push
sbb
ja
rcr
popf
cdq
inc
and
inc
mov
scas
xor
test
push
js
fcmovu
scas
mov
or
xchg
push
xchg
xor
adc
in
test
movhps
xor
xor
out
loope
fbld
dec
fldcw
cmp
ins
mov
jne
jne
dec
movs
mov
je
pop
inc
dec
mov
push
ins
stos
leave
aaa
jge
pop
mov
add
jg
stos
mov
lods
inc
inc
push
mov
aaa
jmp
popa
popf
cdq
fcom
jp
neg
adc
in
arpl
mov
iret
ins
call
ret
pop
and
fcomp
inc
sbb
push
jmp
mov
xor
in
(bad)
(bad)
imul
cmp
nop
push
clc
mov
mov
pop
xchg
xor
dec
jmp
xchg
je
mov
fld
adc
imul
aad
add
mov
retf
aaa
out
popa
outs
das
aam
rcl
shl
daa
lea
pop
inc
ins
mov
in
sbb
mov
les
shl
loope
jle
jl
aad
mov
cmp
xchg
out
bound
mov
pop
aas
and
and
stc
mov
mov
call
and
lock
and
into
out
adc
ins
push
xchg
stos
mov
push
cli
inc
scas
out
retf
push
and
mov
xor
test
sbb
mov
lahf
(bad)
stc
jmp
popf
popa
jns
imul
retf
inc
retf
sahf
adc
push
stos
sub
dec
in
mov
dec
and
inc
shl
jno
xchg
sub
dec
retf
fidiv
xor
jns
cmc
std
imul
and
xchg
cmp
push
ss
(bad)
or
add
out
test
inc
stos
ins
and
inc
ins
lahf
je
ror
aaa
es
je
fcom
jecxz
jns
stos
outs
sbb
cmps
inc
adc
repz
outs
sub
cmc
call
mov
adc
pop
pop
loope
ins
and
mov
(bad)
aas
mov
jge
lea
or
mov
push
arpl
sbb
xor
push
pop
jae
(bad)
cmp
loop
push
mov
cmp
jae
lahf
jge
sbb
fs
pop
popf
stos
xchg
jl
js
mov
sub
fscale
loopne
jg
pop
rol
inc
pop
(bad)
outs
mov
jmp
jl
pop
sub
xchg
ret
mov
fst
loope
inc
cmp
jl
imul
dec
push
jge
repnz
ins
cmp
sahf
mov
test
inc
xchg
adc
in
shl
jbe
jmp
jae
data16
add
movs
out
aaa
loopne
xor
ds
or
(bad)
fldenv
mov
cmp
aad
push
xor
(bad)
xor
repnz
pop
mov
fiadd
cli
or
cmps
adc
aaa
aaa
mov
je
je
rcl
mov
mov
sbb
push
inc
aaa
push
and
pop
rol
mov
scas
repz
scas
in
in
stc
sbb
cmc
mov
das
add
scas
jo
mov
mov
add
xor
xlat
push
xor
and
and
(bad)
cmp
popf
xor
dec
cmp
pop
mov
adc
lds
cmp
sub
call
mov
in
jl
loope
mov
adc
inc
xchg
jae
pop
cwde
test
ss
jo
push
pop
ss
sbb
push
and
enter
add
icebp
cmp
pop
sbb
repz
repnz
dec
dec
imul
dec
push
pop
mov
iret
mov
mov
test
loope
jmp
cmc
pop
cmp
dec
push
push
test
cmp
jae
test
push
and
into
mov
int
aam
retf
stc
and
mov
or
mov
add
(bad)
mov
pop
adc
(bad)
push
popa
cs
jns
dec
popa
or
icebp
xchg
inc
push
adc
fidivr
adc
mov
out
test
dec
icebp
add
adc
fistp
and
frstor
sar
lea
loopne
cld
add
xchg
sub
jg
jge
mov
in
(bad)
dec
pop
xchg
popa
jne
xor
cmp
adc
into
movs
push
sub
lea
icebp
lea
pop
xlat
aam
mov
pop
lods
pushf
jno
adc
push
cmps
out
lar
mov
xor
mul
fs
and
fdiv
mov
xor
jl
call
dec
ja
shr
imul
ret
fdivr
retf
int
sbb
and
neg
pop
jae
mov
imul
and
out
and
hlt
fisttp
cmp
dec
or
mov
stc
mov
out
cdq
cmp
push
dec
call
pop
lea
and
(bad)
cmc
dec
push
les
bound
pushf
movs
imul
or
pusha
out
and
mov
and
(bad)
fst
xlat
push
jmp
outs
es
adc
mov
cmp
idiv
int
pop
aas
add
sbb
jb
adc
aas
js
push
or
ss
ja
aas
gs
inc
movs
lea
xor
dec
xchg
rcl
ins
mov
adc
jp
sub
cli
into
sbb
cdq
loop
mov
jae
adc
imul
arpl
add
movs
mov
cld
mov
and
stos
mov
sub
sub
out
adc
aam
cli
pop
outs
inc
loopne
pop
mov
(bad)
adc
pop
sbb
mov
and
lds
lahf
rcr
cmps
sub
sub
or
fld
(bad)
push
mov
imul
popa
add
pop
jecxz
cmp
mov
movs
mov
sub
dec
sbb
imul
cmp
fisttp
inc
in
fwait
fwait
daa
cmp
mov
inc
pop
(bad)
xchg
bound
dec
add
mov
ret
(bad)
push
sbb
inc
lods
push
add
push
mov
inc
mov
(bad)
push
cmp
and
inc
in
sub
sbb
and
xor
sbb
(bad)
mov
inc
add
xor
dec
movs
pop
imul
dec
sbb
scas
mov
in
retf
pop
in
int
mov
repz
push
out
push
push
mov
cld
adc
push
mov
je
mov
movs
mov
arpl
xchg
out
mov
out
iret
inc
sub
jl
fisubr
ret
ja
cmp
and
(bad)
cmps
cmp
mov
imul
add
push
xchg
jne
dec
xor
pop
pop
stos
mov
push
or
dec
push
jb
mov
mov
push
lea
push
mov
fild
mov
or
xchg
rol
add
(bad)
dec
adc
es
mov
in
js
cmp
cmps
bound
jmp
aad
paddsb
retf
cmps
dec
adc
scas
(bad)
jge
xor
push
aas
shl
mov
mov
inc
push
or
push
and
pop
stc
repnz
xor
pop
add
outs
pop
mov
icebp
scas
data16
sbb
es
adc
jmp
addr16
mov
ss
jecxz
fcmovnbe
test
cmp
mov
repz
mov
or
dec
push
pop
test
into
push
(bad)
push
test
push
stc
sub
jl
add
xlat
pop
inc
cmp
lahf
fcom
jecxz
fninit
jmp
retf
xchg
neg
test
push
cmp
jmp
fwait
popa
dec
stos
(bad)
pushf
mov
jno
jmp
cld
sub
jne
add
pop
movs
xchg
mov
pop
cmps
ins
lods
sub
ja
and
test
movs
or
gs
sub
hlt
mov
mov
hlt
cwde
in
out
jmp
adc
das
mov
dec
add
cmp
mov
retf
cmc
outs
imul
rol
mul
cmp
mov
ror
push
lods
mov
mov
stos
sub
push
xor
push
jo
or
neg
(bad)
fnstcw
in
or
scas
inc
leave
mov
pop
dec
in
js
cmc
dec
or
xchg
jnp
push
(bad)
out
push
cmc
repz
(bad)
aas
les
fs
sbb
in
pop
pusha
inc
cmp
mov
leave
out
pop
nop
lar
call
mov
retf
out
add
lock
pop
pop
add
fdivr
push
xor
(bad)
popf
xor
xchg
xchg
fisub
in
sub
iret
xchg
retf
outs
mov
xor
ins
ret
stos
mov
adc
fstp
not
cld
mov
xor
out
sub
ss
or
or
xchg
out
iret
inc
mov
mov
bound
dec
mov
lds
dec
stos
mov
shl
mov
add
ficom
sub
adc
fwait
inc
pop
lock
out
push
adc
mov
lock
mov
scas
ss
dec
hlt
xchg
fimul
leave
mov
sbb
cs
jo
daa
not
rol
inc
mov
dec
pop
mov
gs
data16
test
xchg
out
push
jb
fcmovu
xchg
xchg
(bad)
xor
pop
mov
pop
out
int
and
pushf
leave
sub
fs
ja
cmp
scas
shl
add
inc
rcl
xor
pop
test
or
fsub
jle
cmp
inc
jle
int3
cmp
pop
mov
jecxz
pop
jmp
add
(bad)
jne
out
popa
cmp
int3
loop
push
pushf
mov
ror
lds
cmc
dec
into
mov
xchg
adc
add
out
mov
mov
push
and
popa
in
jp
(bad)
jge
mov
cs
or
jnp
test
inc
lods
test
mov
cdq
mov
loope
div
fcomp
xchg
xchg
cmps
or
sbb
popa
aam
scas
(bad)
mov
lahf
cmp
fdivrp
retf
and
and
xchg
adc
mov
mov
movs
mov
mov
out
std
sbb
outs
jbe
mov
push
cmps
sub
imul
popa
dec
pusha
js
fs
pop
dec
dec
dec
xchg
lahf
pop
xchg
mov
test
addr16
or
sti
mov
retf
push
sub
mov
out
inc
aas
jo
push
es
mov
sub
fidiv
stos
(bad)
movs
ftst
pop
dec
add
push
in
rol
ret
pop
mov
jg
popf
or
xchg
or
push
push
inc
dec
aas
mov
ja
in
dec
or
lock
call
push
push
mov
(bad)
and
mov
mov
cmp
fcom
mul
cwde
adc
scas
mov
aad
out
push
stc
add
das
out
and
xor
cli
inc
fcom
xchg
test
adc
sbb
jo
shl
sub
jle
jnp
sahf
nop
add
ss
push
add
mov
call
jbe
jecxz
push
push
push
rcl
fidiv
dec
iret
inc
loop
std
cmp
jno
popf
pop
sub
mov
jbe
in
adc
add
sbb
pop
mov
pop
jp
(bad)
fucomip
jge
or
push
inc
and
xor
mov
or
mov
sbb
shr
dec
sti
xchg
add
xor
(bad)
add
and
inc
fldcw
mov
fst
pop
movs
dec
imul
sbb
or
cwde
mov
(bad)
mov
dec
sub
mov
add
sub
cdq
inc
(bad)
jns
xchg
lahf
mov
add
popa
xlat
xor
cwde
fist
shl
add
outs
sahf
rcl
mov
test
(bad)
mov
scas
push
in
add
and
dec
sub
in
dec
push
aaa
or
out
jl
or
sub
jmp
movs
add
sub
inc
xchg
movs
out
(bad)
push
mov
movs
push
and
add
js
mov
add
outs
(bad)
ds
mov
icebp
arpl
or
jg
aaa
repnz
stos
(bad)
jmp
std
dec
dec
into
inc
out
sbb
and
mov
or
aam
ss
les
inc
cwde
jg
pop
adc
add
jl
jne
add
push
inc
pop
mov
mov
or
mov
or
jmp
jg
out
mov
cmp
jg
fdiv
cmp
push
loope
fwait
adc
pop
mov
sar
cmp
rcr
sub
jp
sahf
fst
xchg
lods
(bad)
and
jne
cmc
push
int
jge
mov
adc
fs
scas
fsub
cmps
adc
stos
cs
sar
fld
and
push
adc
sub
in
ins
pop
dec
iret
jae
mov
adc
and
shr
xor
mov
push
fstp
push
and
pop
inc
mov
(bad)
or
repz
sub
mov
int
fsubr
inc
ret
ret
jne
fs
mov
mov
push
sar
ds
loopne
jp
mov
xor
xchg
repz
or
fisub
les
mov
popf
sbb
dec
pop
pop
sbb
dec
xor
movs
jnp
pop
push
pcmpgtb
loopne
inc
call
push
imul
jae
jmp
push
pusha
and
mov
cmps
push
inc
sbb
push
adc
push
mov
and
mov
test
ror
std
push
push
and
jecxz
dec
mov
or
push
adc
sub
xor
push
cld
dec
sbb
or
das
and
cmp
dec
inc
push
sbb
popf
nop
push
retf
test
jle
imul
adc
(bad)
pop
test
adc
iret
daa
ja
sub
(bad)
jnp
push
sbb
xor
(bad)
dec
adc
adc
adc
das
sti
out
push
ss
pop
mov
movs
add
fcomp
daa
and
(bad)
jecxz
dec
leave
cmp
dec
stos
je
(bad)
xchg
ins
add
bound
rcr
clc
shl
xor
clc
dec
add
inc
cmp
jmp
xchg
(bad)
out
mov
mov
scas
fdiv
shr
mov
jl
add
ret
jno
out
or
xchg
add
adc
mov
pop
sub
xchg
sbb
add
retf
sub
jo
test
inc
sbb
push
int3
in
addr16
mov
push
loopne
inc
mov
adc
imul
and
adc
sbb
lds
jg
inc
mov
jb
xchg
xchg
je
inc
jns
pushf
xor
push
jns
mov
and
adc
imul
popf
repnz
rcl
test
mov
mov
add
inc
pop
gs
lea
ins
adc
leave
and
(bad)
add
mov
push
adc
mov
cmp
mov
div
(bad)
stos
scas
jnp
es
cmp
data16
xchg
add
jno
imul
sbb
inc
pop
inc
inc
mov
ins
xor
int
fnop
lock
aaa
je
rcl
push
mov
lahf
in
adc
fwait
pop
(bad)
in
push
mov
rol
inc
mov
jmp
inc
push
sub
out
icebp
sbb
js
push
aaa
cld
cdq
retf
retf
rol
adc
jne
popa
pop
in
arpl
mov
jmp
lods
sbb
shl
fisub
sub
std
jle
add
or
scas
ja
bound
out
pop
add
hlt
inc
sub
retf
and
sbb
ror
adc
out
lock
dec
xchg
pop
mov
cmp
push
aam
mov
cmp
jae
sub
cmp
mov
xor
mov
repz
xor
mov
popf
nop
pop
lock
xor
sbb
cli
adc
int3
(bad)
xchg
inc
cli
leave
xor
aaa
in
push
dec
mov
cmp
sub
sub
stos
pop
sar
out
add
or
ret
adc
cli
mov
sti
add
mov
mov
mov
cmp
jno
cwde
sub
mov
loopne
scas
mov
and
stc
data16
mov
(bad)
jns
inc
movs
inc
cmp
inc
iret
in
sub
rcr
sub
xchg
jnp
sbb
mov
ja
or
mov
add
aad
movs
mov
ja
push
pop
dec
aam
out
les
mov
retf
ja
dec
jl
adc
into
imul
dec
shl
jmp
push
push
rcl
xor
lahf
fs
mov
add
(bad)
mov
jecxz
gs
or
sbb
loope
aam
cmc
jne
pop
daa
dec
adc
push
repz
and
or
xchg
std
or
imul
push
pop
sbb
ss
dec
sub
mov
xchg
mov
into
and
cmp
iret
jl
mov
sub
call
ss
test
iret
sub
jge
dec
ja
loop
jo
pop
aaa
cmps
jne
stos
or
jg
rcr
or
mov
(bad)
pusha
out
xor
inc
pushf
shl
add
jmp
pop
push
stos
mov
bound
enter
inc
rcr
out
add
in
jecxz
loop
aad
add
pop
aad
xor
sbb
dec
add
jbe
mov
fdivr
inc
ins
pop
cwde
xchg
xchg
aas
push
pop
(bad)
out
hlt
xchg
ret
outs
(bad)
and
mov
sub
lods
jg
icebp
clc
xor
xchg
mov
or
push
add
pop
sub
pop
lods
aas
(bad)
mov
rcl
fstp
mov
fs
dec
and
and
cmp
test
cli
xor
fist
lods
fisttp
dec
xor
mov
mov
mov
scas
ja
rol
call
push
push
mov
icebp
arpl
div
je
push
sahf
add
mov
fnstenv
pop
xor
mov
xchg
mov
lods
daa
push
outs
sahf
aas
mov
xlat
xchg
push
inc
test
push
or
push
cmp
das
imul
inc
cmps
(bad)
(bad)
in
nop
mov
push
imul
xchg
cmp
cmp
es
mov
xchg
mov
pop
push
mov
cmc
mov
sbb
sub
ds
ror
cmp
push
sbb
icebp
xor
and
sub
push
popf
stc
imul
sub
and
push
ret
ss
std
sub
xor
movs
add
cdq
ds
dec
xchg
sub
and
adc
xchg
sti
sbb
dec
jb
add
fimul
(bad)
dec
jecxz
shl
xchg
ins
or
mov
test
retf
dec
sbb
out
fimul
mov
cmc
sbb
push
arpl
fwait
xor
fsub
push
add
add
fcmovu
mov
(bad)
and
sbb
mov
push
fst
ret
cmp
fmul
and
imul
sbb
pop
repz
popf
or
pop
lods
fs
jecxz
(bad)
and
fst
(bad)
push
test
out
and
fs
arpl
lods
jb
loopne
push
ins
data16
(bad)
mov
addr16
or
inc
push
sub
mov
(bad)
xor
sub
(bad)
fiadd
aas
out
shl
or
loop
jns
xor
aad
pop
mov
(bad)
push
dec
dec
fidiv
adc
scas
sub
xor
and
adc
cdq
add
xlat
outs
repnz
cmp
xor
mov
dec
sbb
or
es
adc
add
out
push
daa
inc
mov
sbb
adc
cmps
dec
sbb
pop
das
sub
test
std
fldcw
cmps
das
mov
jle
ror
popa
repnz
mov
pop
fdiv
jo
aad
stc
mov
imul
sub
fdiv
pop
jns
ins
bound
cmp
jge
movs
stc
mov
sub
mov
lea
mov
std
push
fcomi
push
mov
sub
xchg
js
cmps
pop
lea
outs
cmp
mov
adc
push
into
push
pusha
ins
sub
enter
loopne
dec
pop
fidivr
mov
loopne
je
pop
je
out
add
scas
stos
push
jo
xor
or
out
adc
or
add
sbb
cmp
rcr
xor
and
cmp
(bad)
cld
loope
sub
loop
stos
sti
and
repnz
xchg
cli
leave
sti
(bad)
jl
rcl
sub
hlt
mov
pop
cdq
lods
sbb
mov
add
sti
out
pop
test
addr16
cwde
mov
inc
loope
pop
mov
je
icebp
dec
sub
add
rcl
(bad)
std
sbb
xchg
pop
cmp
xor
dec
jmp
mov
inc
lea
mov
rol
push
mov
imul
pop
popf
or
dec
rcr
stc
jbe
jne
dec
push
push
loope
enter
sub
pop
pop
imul
xchg
push
dec
data16
push
push
jmp
je
pop
jle
mov
cmp
cmp
bound
mov
cld
aas
sbb
test
not
xchg
ficom
cmps
stc
cmp
adc
inc
outs
xor
das
ins
retf
retf
int
fwait
push
fcomp
cs
loope
(bad)
mov
or
imul
hlt
fadd
dec
aad
aaa
jl
(bad)
and
retf
jbe
fistp
ret
(bad)
loopne
hlt
loope
mov
dec
mov
adc
das
loopne
mov
pop
adc
xor
or
pop
push
mov
mov
sub
movs
inc
mov
(bad)
cmp
pushf
imul
jb
dec
ror
fldenv
dec
(bad)
js
in
jb
mov
imul
into
leave
cmp
cmps
arpl
popa
cld
cmc
loop
mov
xor
dec
in
(bad)
(bad)
outs
cwde
push
and
out
or
fistp
pop
jo
adc
jbe
dec
xor
mov
mov
retf
sbb
sub
push
sub
jne
mov
add
sti
sbb
xchg
cmp
mov
add
pop
pop
cmp
loopne
inc
xor
or
dec
movs
inc
jb
or
test
ret
call
sub
fnstcw
and
test
adc
stos
ret
jecxz
sbb
mov
inc
push
pop
push
cmp
adc
jns
add
sub
lods
aaa
sub
jne
jmp
add
sar
dec
movs
push
mov
outs
jb
in
fsub
data16
jecxz
mov
xchg
add
cmps
sahf
pop
pop
repnz
daa
out
push
jl
scas
bswap
jle
xchg
rcl
cwde
sbb
inc
cwde
add
test
xchg
xor
inc
stc
outs
mov
xor
push
test
sbb
dec
ficom
aas
xor
(bad)
imul
adc
loope
call
pop
mov
ficomp
das
aam
test
push
imul
or
cdq
cdq
push
and
cmps
clc
add
adc
jp
(bad)
lock
out
xor
scas
imul
out
pop
(bad)
xor
mov
in
inc
jno
popf
movs
stos
push
rol
clc
mov
scas
mov
fsubr
hlt
inc
mov
sub
out
pop
scas
cmp
xchg
pop
xlat
or
sahf
mov
test
rcl
mov
ds
push
and
push
ss
adc
(bad)
pop
dec
popa
mov
(bad)
mov
xchg
icebp
or
(bad)
test
ret
stc
retf
xchg
pop
sbb
mov
or
adc
mov
cmps
mov
jle
pushf
ins
ja
shr
aad
or
call
js
mov
push
or
test
call
and
sub
les
les
loopne
push
mov
mov
leave
push
std
mov
call
scas
cmp
cli
pop
dec
jmp
xor
imul
rol
cmp
add
mov
cwde
jne
mov
and
add
cmps
stc
mul
inc
ret
xchg
es
inc
xchg
adc
(bad)
scas
inc
sbb
cmp
sub
jnp
jmp
aas
mov
int3
shr
out
mov
cmp
je
cmps
mov
sub
jae
rcl
fs
xchg
add
and
loopne
lock
jne
pop
movs
xchg
gs
jmp
xchg
aam
sub
test
out
mov
(bad)
(bad)
cli
scas
mov
test
bound
mov
jl
lods
lods
jmp
in
ret
dec
mov
inc
and
jg
xchg
(bad)
or
jg
cmps
sub
fwait
dec
shr
jb
lahf
xchg
jle
outs
fisubr
adc
loope
jnp
sub
lods
test
(bad)
into
bswap
adc
push
xor
adc
mov
mov
xor
out
das
mov
adc
or
push
popf
push
lods
sbb
jmp
cmps
xor
push
mov
inc
sub
pusha
in
cmp
and
mov
jo
aaa
nop
add
imul
pop
and
out
out
jne
and
mov
cmp
inc
sbb
mov
repnz
mov
enter
and
movs
xor
sbb
int3
sub
loope
add
out
iret
inc
aad
push
stos
call
in
pop
or
add
mov
sbb
int3
inc
push
gs
mov
jl
(bad)
in
and
and
scas
gs
xchg
cmp
and
call
mov
loopne
idiv
dec
fisttp
xor
push
lock
retf
clc
es
cmp
push
xor
cmp
push
not
adc
std
fiadd
lods
jg
rcr
mov
jo
ja
dec
fucompp
lock
inc
fsubr
sbb
pushf
pop
add
cmp
mov
mov
xor
xchg
es
push
jl
jns
loope
pop
jmp
mov
repz
(bad)
push
pushf
in
add
cmp
sub
xchg
and
jne
xor
mov
mov
retf
xchg
(bad)
scas
jmp
mov
lods
movs
je
mov
stc
imul
push
test
popa
inc
imul
sbb
repz
scas
xchg
dec
sbb
inc
add
or
fadd
scas
fcmovb
ds
jle
mov
push
leave
mov
rol
fbstp
pop
ins
jae
lods
lahf
iret
inc
aad
or
cmp
push
daa
dec
es
lahf
in
add
popf
fwait
cmps
jb
nop
jo
dec
dec
sbb
lea
mov
and
dec
jnp
ins
dec
jo
loopne
pop
cs
lahf
rol
retf
mov
sub
paddw
ins
in
sahf
shl
sar
daa
sti
in
sbb
stc
inc
outs
mov
in
fcomp
jl
out
jno
(bad)
scas
fwait
push
jne
mov
inc
cli
mov
mov
push
cmp
jl
push
js
imul
adc
sub
push
je
into
rcr
cmp
shl
jb
xor
pusha
enter
mov
in
push
shl
pushf
push
push
inc
xor
loopne
xchg
mov
addr16
out
imul
dec
retf
in
lock
stos
(bad)
sub
mov
test
in
je
cld
addr16
enter
and
enter
cwde
and
jecxz
pop
mov
scas
imul
sbb
dec
add
adc
mov
lods
cdq
(bad)
(bad)
out
fild
jns
pop
add
xchg
adc
inc
mov
sbb
inc
fiadd
lock
call
mov
cmp
jae
pop
mov
inc
ins
stos
push
je
imul
out
push
fimul
mov
cmp
scas
mov
cmp
push
aas
and
xlat
xor
test
sub
inc
mov
mov
test
rol
shr
pop
push
aas
pushf
or
aam
ja
mov
cmp
xchg
sahf
jb
shr
es
sar
mov
jae
mov
stos
cmps
scas
loope
dec
dec
div
sub
mov
inc
sahf
int3
mov
mov
sub
jno
dec
cmc
ja
xchg
mov
sbb
pop
push
adc
ja
nop
pop
xor
xchg
sbb
cmp
sahf
out
or
xchg
dec
mov
jmp
mov
xor
and
std
dec
add
adc
or
jp
leave
test
stos
sub
stos
in
xor
mov
out
ins
jbe
(bad)
das
push
ds
fbld
gs
loope
outs
shl
arpl
lods
push
pop
jbe
loope
pop
mov
aaa
fcom
jne
pop
idiv
stos
hlt
sub
add
outs
cmp
dec
iret
pop
cwde
sbb
shr
push
rcr
sbb
out
lods
and
mov
jnp
bts
ja
inc
jmp
adc
jl
xchg
jns
or
xchg
pop
sbb
fild
movs
daa
sub
mov
add
movs
fild
jmp
fst
mov
pushf
cld
mov
arpl
movs
hlt
pop
dec
addr16
cmp
enter
mov
cmp
adc
mov
add
scas
out
xchg
nop
stos
es
xchg
cmp
js
dec
stos
rcl
mov
sub
lock
test
cwde
call
xchg
test
test
std
xchg
dec
pop
xor
imul
xchg
loopne
jl
sbb
aaa
idiv
push
add
in
mov
iret
clc
xchg
aad
dec
pop
xchg
or
ja
sub
dec
fldcw
mov
inc
bound
xlat
adc
mov
push
popa
js
cmp
mov
pop
jmp
aas
jne
add
imul
arpl
hlt
mov
xor
add
int
xchg
inc
mov
inc
push
xor
jl
test
sbb
xor
and
push
ret
shl
add
xchg
div
jb
xor
fmul
push
pusha
mov
mov
shr
jnp
test
stos
xor
in
out
mov
in
push
repnz
mov
into
mov
mov
mov
mov
ss
cmc
dec
xchg
add
inc
xchg
mov
test
mov
push
jecxz
sbb
xchg
xchg
inc
jnp
(bad)
outs
cmp
mov
cld
xchg
sub
sbb
pop
call
fadd
lock
jne
mov
(bad)
cmp
out
mov
mov
adc
ret
call
cmps
mov
inc
clc
inc
push
or
xchg
lahf
pop
jl
add
and
test
test
sub
dec
loope
rcr
adc
enter
cmps
daa
push
adc
push
scas
pop
dec
sub
mov
add
mov
cmp
push
je
mov
push
fwait
shr
into
sbb
imul
or
shl
popf
mov
and
es
jg
cmp
sar
stos
push
dec
and
sub
push
ja
(bad)
mov
jmp
jns
repnz
jmp
mov
icebp
inc
mov
jmp
fisubr
sub
pop
cli
push
fcomp
cld
mov
int
clc
shl
out
inc
arpl
sub
jbe
mov
jl
sbb
gs
js
sbb
or
arpl
aam
mov
shl
push
(bad)
jns
push
rcr
mov
dec
adc
(bad)
or
xchg
test
adc
movs
push
jo
mov
jmp
add
rol
shr
aad
jne
dec
test
aam
push
add
aam
imul
xor
add
sub
(bad)
pop
mov
or
jmp
and
(bad)
mov
mov
gs
xor
pop
sar
adc
fistp
inc
retf
xchg
xor
das
dec
pop
test
mov
mov
mov
sub
scas
cwde
push
sbb
mov
fisttp
ins
into
dec
or
cmp
aas
xor
sub
data16
repnz
mov
push
jl
pop
dec
(bad)
sbb
dec
shr
(bad)
mov
lods
and
repnz
ficom
ds
xchg
xchg
sbb
or
sbb
adc
test
pop
pop
clc
in
pushf
and
iret
push
adc
cld
add
add
js
inc
mov
sub
dec
and
aas
int
iret
(bad)
test
mov
fcomip
scas
enter
xchg
das
xchg
retf
jmp
pop
out
pusha
xchg
jmp
je
jne
and
xchg
xor
cwde
addr16
ins
mov
xchg
mov
(bad)
add
xchg
sub
btc
in
(bad)
out
adc
mov
scas
sbb
test
repz
mov
add
push
push
cmp
repz
and
in
lds
call
cmp
jmp
mov
daa
xchg
hlt
ss
mov
cmp
xchg
inc
mov
popa
add
xchg
or
inc
xchg
ficomp
je
or
jo
int
or
jecxz
ja
mov
dec
cdq
sbb
pop
aam
sub
pushf
jne
add
xchg
add
icebp
lea
js
int
fst
pop
sbb
iret
aaa
adc
das
test
movs
sar
cld
xchg
nop
(bad)
je
jge
mov
frstor
ficom
mov
inc
imul
test
push
mov
inc
jbe
cmp
lods
retf
add
push
fcomip
pop
(bad)
sbb
sub
pop
dec
sub
pop
sbb
in
jg
lods
fld
sbb
test
js
pop
adc
in
push
jnp
ficomp
les
mov
xchg
sub
mov
pusha
arpl
mov
cs
dec
lods
in
ret
inc
adc
xchg
mov
jnp
loop
lahf
fidiv
bound
adc
xchg
inc
mov
push
int3
sar
dec
pushf
cmp
and
xor
xchg
mov
pop
jecxz
add
arpl
and
imul
rol
std
xchg
and
cli
cmp
movs
je
adc
rcr
(bad)
mov
ja
out
adc
add
mov
adc
xchg
and
or
addr16
push
shr
repz
lea
xor
or
mov
loop
push
mov
and
sub
nop
test
and
mov
lahf
ror
fild
loope
push
mov
pop
aam
mov
jae
lds
push
int3
lahf
movs
scas
pop
cmp
popa
(bad)
add
aas
jne
jnp
fs
jo
mov
or
nop
int3
sub
pop
rcr
bound
mov
out
lock
test
sub
jne
xor
es
into
imul
stos
addr16
mov
and
push
xchg
aas
aam
and
aam
cmp
dec
shr
movs
das
stos
push
jl
imul
sbb
cmp
out
pop
(bad)
ficomp
pop
sahf
cdq
add
adc
push
and
xchg
jle
adc
aaa
dec
and
test
pop
enter
sub
mov
add
xor
daa
ror
mov
cmps
push
(bad)
(bad)
xchg
mov
and
test
push
cmps
out
mov
aas
test
ret
ds
push
neg
ins
adc
lahf
icebp
aaa
in
push
repz
jo
cmp
ss
ins
xchg
add
pop
ret
popa
xor
out
(bad)
push
aam
adc
rcr
xchg
loope
mov
sbb
fwait
jmp
ror
fsubp
sbb
dec
(bad)
enter
lahf
or
rcr
xor
pusha
seto
out
fimul
push
leave
pop
adc
iretw
sub
mov
enter
(bad)
pop
nop
mov
jge
mov
jmp
push
push
add
mov
mov
sub
test
mov
or
dec
or
in
bnd
cmp
in
popf
call
push
cld
js
sbb
xor
mov
test
not
adc
inc
cmp
sbb
xor
in
cmp
pop
sub
in
pop
(bad)
mov
mov
mov
mov
xchg
js
lahf
push
xchg
xor
push
push
mov
jnp
lock
outs
int
jo
add
nop
mov
(bad)
icebp
cmps
fstp
inc
test
sahf
ins
pop
xchg
push
xchg
fisttp
pop
cmp
jo
punpckhwd
lahf
dec
data16
lahf
jne
pushf
mov
int
rcr
sub
mov
jo
lds
pusha
into
sub
inc
fmul
sub
loop
ret
movs
aas
cs
pop
xchg
mov
cli
(bad)
ja
push
xchg
xor
adc
xor
sub
mov
shl
and
adc
cmps
popf
cmp
pop
mov
pop
fild
imul
cmp
pop
adc
mov
addr16
lods
jge
mov
inc
cmps
call
jnp
jnp
pop
mov
dec
jmp
push
jp
sbb
(bad)
pop
std
xchg
push
ins
leave
inc
(bad)
lock
push
inc
ins
push
xchg
xor
add
mov
stc
ja
enter
pop
mov
into
lahf
cmp
xor
cmps
es
leave
out
jno
loop
(bad)
mov
cdq
fstp
lea
push
ja
xchg
mov
in
adc
or
mov
aaa
fs
or
out
add
outs
lock
scas
lods
imul
icebp
xchg
cld
jecxz
sbb
(bad)
xchg
sbb
test
es
cs
iret
adc
sbb
rol
(bad)
fwait
enter
push
nop
nop
aaa
push
mul
test
jp
cdq
or
mov
inc
mov
sub
dec
and
inc
ficomp
dec
sahf
dec
mov
imul
adc
adc
push
cdq
push
jle
int3
push
or
jnp
stc
sub
jb
mov
or
or
repz
dec
(bad)
repnz
pop
ffree
loopne
xchg
mov
sbb
addr16
jmp
pop
sbb
int3
leave
test
pop
xchg
fisttp
mov
stc
std
pop
repnz
jle
ja
repz
repz
or
mov
push
pushf
lock
imul
inc
pop
into
sub
sub
or
fcom
nop
cmc
enter
fs
out
add
int
lds
adc
jecxz
cmc
and
or
and
pop
(bad)
aas
push
or
add
ins
pop
mov
call
es
adc
dec
xchg
mov
(bad)
icebp
in
frstor
mov
pop
(bad)
fs
lea
cmp
call
mov
jg
ficomp
div
mov
call
xor
xor
cmp
xchg
inc
jno
jmp
push
pop
pop
adc
out
lahf
stc
(bad)
and
add
(bad)
and
aam
mov
test
in
jmp
jle
pop
xchg
push
shr
je
xchg
mov
mov
jmp
or
cwde
retf
mov
push
shl
inc
fst
pop
call
fsubr
jmp
or
inc
fdivr
add
fcomp
dec
push
mov
daa
(bad)
aad
dec
jg
mov
pop
cmp
leave
fsubr
popa
push
enter
pop
retf
data16
sbb
into
test
enter
cmp
dec
or
lahf
and
add
test
outs
fmul
shr
out
jle
push
lods
dec
inc
mov
fs
xor
fdiv
stc
cs
ret
mov
sbb
cmps
in
mov
test
in
mov
ja
je
repz
jmp
stos
les
shl
popf
push
aad
ins
fwait
or
sbb
mov
mov
jb
xor
jae
adc
sbb
cmp
jle
cdq
sbb
mov
pop
loop
sub
arpl
pop
adc
stos
inc
clc
rcr
add
fwait
inc
scas
mov
fsubr
iret
or
pop
adc
jne
push
test
call
fcmovne
rcr
dec
mov
ds
add
push
nop
iret
mov
xchg
pop
xor
cdq
cmp
cmc
sbb
lds
call
iret
pop
mov
retf
cwde
jo
lods
adc
adc
push
loopne
pop
movs
cdq
inc
add
fcom
push
neg
rcr
xchg
in
xchg
inc
int3
mov
jnp
clc
jp
out
mov
xor
mov
aaa
rcl
pop
dec
pop
jns
fnstsw
push
out
fs
pop
jle
pop
retf
hlt
aad
imul
push
cmp
fnsave
ror
fistp
or
mov
push
hlt
into
ss
pop
in
in
sub
(bad)
mov
popa
daa
add
push
int
jo
aam
push
xor
out
aad
sub
mov
loop
test
nop
das
cmp
dec
rol
inc
(bad)
cli
xchg
imul
xor
add
arpl
xor
stos
nop
fwait
or
push
in
rol
pop
lds
xor
jle
mov
lds
pop
iret
scas
lods
hlt
imul
and
xor
frstor
or
pop
shl
xchg
arpl
inc
out
in
adc
out
shr
inc
mov
int3
dec
inc
or
push
cdq
dec
retf
push
retf
shl
sti
and
inc
xchg
sti
fdivp
sub
mov
imul
inc
test
retf
stos
mov
pop
mov
fdivrp
xchg
xchg
retf
mov
aam
imul
inc
push
sar
cmp
sahf
dec
mov
add
cmp
mov
ins
imul
(bad)
leave
nop
mov
or
fist
cmps
adc
jo
mov
sub
push
(bad)
(bad)
seto
aaa
lahf
outs
xchg
cmp
dec
mov
pushf
or
ret
call
fisttp
popa
adc
and
add
cmc
xchg
scas
dec
add
or
cmps
xchg
push
add
sbb
push
clc
push
movs
shr
cmps
cli
cmp
lahf
sub
(bad)
pop
gs
sub
xchg
mov
inc
cli
jbe
inc
jl
repz
push
cmp
sbb
and
aas
xor
clc
jge
xchg
pop
jp
dec
pop
jb
in
adc
mov
push
gs
xor
or
outs
xchg
pop
mov
xchg
and
and
jne
add
cmc
xchg
xlat
retf
mov
or
pop
std
in
ds
(bad)
mov
or
adc
sahf
stos
test
mov
xchg
sbb
in
jns
sub
pushf
push
out
int
and
mov
push
jbe
push
or
mov
push
out
sub
lock
jns
pop
sub
inc
fiadd
ja
adc
popa
mov
iret
int
cli
mov
popf
fs
pop
inc
setg
(bad)
hlt
push
arpl
fnsave
popa
int
test
lahf
cmc
hlt
sub
mov
and
push
cs
push
jmp
mov
sbb
sub
inc
dec
cmps
sbb
push
(bad)
cmp
add
cmp
js
mov
imul
xchg
or
mov
jo
push
fisttp
sub
outs
cli
adc
call
leave
pop
repz
data16
jge
mov
imul
aaa
mov
popf
mov
(bad)
les
jl
in
xor
xor
outs
sahf
sbb
pop
inc
add
mov
js
daa
mov
pop
enter
in
loope
cmp
fsubr
not
scas
fs
mov
mov
add
mov
pop
lds
rcr
ret
in
xchg
mov
push
inc
sub
lds
clc
pop
and
cmp
gs
pop
pusha
mov
mov
and
(bad)
jns
pop
inc
push
bound
jbe
and
cwde
popa
sub
mov
(bad)
(bad)
scas
cld
mov
test
(bad)
cs
mov
add
add
mov
xor
ror
fnstcw
adc
repnz
lahf
cmp
mov
jne
dec
push
fisubr
mov
lahf
pusha
mov
(bad)
daa
ret
aas
xchg
pop
hlt
xor
(bad)
push
call
fs
fs
loop
cld
(bad)
xchg
stos
xchg
mov
mov
sub
or
xor
ror
or
mov
jecxz
mov
cmp
pop
push
call
lods
mov
cdq
cmps
xor
cld
aas
rsqrtps
fisttp
fstp
add
pop
adc
jo
push
xor
jns
mov
or
push
add
and
pop
jb
(bad)
mov
out
in
inc
jns
loop
sbb
sbb
mov
je
outs
push
das
loop
mov
and
test
repz
cmp
and
out
loope
dec
mov
aad
je
sub
inc
sbb
xor
xchg
sahf
dec
cmp
xor
ret
data16
xchg
sbb
cli
scas
retf
bswap
xor
inc
xor
add
xchg
add
data16
cmp
cmc
idiv
mov
call
pop
clc
fs
push
xchg
push
dec
mov
mov
mov
(bad)
jo
out
push
test
dec
dec
sub
ins
jecxz
pop
jo
arpl
cmps
push
add
mov
cmp
ret
cwde
and
test
cmp
cmps
mov
cwde
ins
das
cmc
lahf
mov
or
pop
adc
sub
imul
test
jmp
jp
mov
sub
xor
pop
(bad)
mov
mov
out
dec
cmps
xor
pop
(bad)
mov
adc
add
fnsave
and
or
jne
stc
ins
mov
push
mov
sub
fdivr
(bad)
loopne
sub
mov
push
jae
test
and
scas
scas
mov
sub
mov
jmp
xchg
str
pop
or
rcl
in
cmc
pop
call
lea
xor
hlt
cmp
mov
xor
add
push
sub
mov
jmp
iret
loop
shl
in
(bad)
enter
stc
(bad)
dec
cmp
dec
(bad)
dec
dec
sbb
das
push
hlt
icebp
imul
add
sbb
pop
jnp
out
xor
jae
in
dec
sahf
lods
fdiv
std
out
test
cmp
xchg
push
add
and
sahf
test
rcr
mov
dec
test
cmp
cmps
sub
inc
adc
cmps
mov
imul
(bad)
iret
xchg
aam
stc
sahf
mov
add
jno
loop
or
inc
cmp
mov
fcmovnb
add
mov
mov
sub
adc
or
test
push
call
sahf
jns
push
push
mov
shl
enter
jmp
inc
sbb
fidiv
aaa
cmp
fcom
rcl
clc
or
jmp
shl
jmp
dec
xchg
xchg
fiadd
adc
and
les
and
les
neg
mov
add
cmps
xchg
push
xchg
xchg
inc
or
cwde
ins
cmp
jnp
push
loop
rcr
bound
popa
shl
adc
add
mov
add
lods
test
lea
mov
pop
add
loope
mov
lds
jmp
popa
and
mov
sti
test
test
and
pop
and
mov
xchg
or
mov
mov
clc
or
inc
mov
addr16
sub
jne
popa
inc
sub
push
repz
push
mov
(bad)
imul
std
out
adc
cmp
and
or
jnp
mov
xchg
or
mov
sub
or
mov
mov
leave
pop
mul
aas
fs
clc
mov
imul
out
jb
fimul
cmp
addr16
repz
dec
or
in
jg
int3
adc
repz
sub
xor
or
mov
inc
lds
aaa
or
inc
cmp
cwde
push
xchg
or
pusha
mov
or
dec
inc
mov
shr
dec
fs
lods
dec
mov
ret
inc
cmovae
fnstsw
in
outs
xchg
pusha
rol
imul
or
mov
mov
sbb
movs
arpl
out
out
icebp
daa
mov
clc
cwde
xchg
pop
ja
shl
push
adc
adc
movs
sub
cmp
sub
xor
jnp
jg
sbb
idiv
push
xchg
fcomp
jmp
cli
mov
sbb
outs
mov
enter
mov
inc
inc
repnz
add
dec
mov
call
stos
out
repz
xchg
mov
mov
cmc
jp
aam
add
sbb
pushf
mov
xchg
cmps
lahf
push
jmp
mov
mov
pop
xchg
pop
xor
pop
nop
xor
jo
loope
mov
retf
cdq
or
aaa
mov
rcl
mov
js
dec
aas
and
movs
retf
push
cmp
dec
sahf
ds
mov
ret
jl
(bad)
mov
sub
hlt
push
scas
aam
adc
and
iret
jns
enter
(bad)
mov
dec
xchg
jmp
mov
mov
jle
dec
mov
cmovo
sub
rol
sbb
idiv
in
push
fwait
cmp
push
imul
rcl
mov
pop
and
fst
lods
in
adc
fimul
lds
fld
outs
pop
(bad)
lock
sbb
in
sub
cli
(bad)
inc
pop
mov
dec
inc
mov
mov
mov
icebp
jg
leave
daa
mov
cs
call
dec
mov
imul
bnd
mov
cdq
sbb
adc
imul
xchg
sar
cmp
ins
cmps
cmps
xor
shl
fucomi
pop
sbb
push
(bad)
lahf
inc
mov
add
jnp
and
shl
add
and
out
push
jle
fsubr
xchg
xor
ss
push
adc
pop
inc
adc
mov
les
cmps
(bad)
push
vmulps
add
and
sub
imul
add
cmp
pop
dec
cmps
cs
loop
mov
adc
icebp
adc
lods
ss
jno
bound
mul
aad
push
retf
(bad)
mov
ret
imul
xor
sbb
shr
out
stc
xlat
mov
add
js
inc
aad
ins
sbb
jne
xlat
not
aaa
push
lods
aaa
dec
aam
outs
pop
push
xchg
jae
add
mov
sbb
fstp
and
test
js
mov
enter
jl
stos
clc
mov
or
iret
pop
jmp
xadd
mul
call
cld
push
or
and
mov
aad
xchg
out
movs
mov
pusha
or
pop
fsubr
movs
mov
pop
jo
add
mov
loope
loopne
test
mov
mov
daa
fs
xlat
movs
mov
jb
sub
call
jae
out
dec
jbe
out
cmp
(bad)
dec
inc
xchg
aas
add
dec
pop
push
add
dec
push
scas
rcl
cmp
push
cmp
int3
stos
push
add
stc
pop
call
jo
jnp
xchg
cvtdq2ps
xlat
add
cmp
mov
mov
push
jno
mov
enter
pusha
xchg
pop
jg
adc
inc
data16
scas
adc
cmp
cld
xor
les
xchg
sbb
inc
sbb
in
and
and
(bad)
sbb
(bad)
iret
out
sbb
gs
push
pop
call
stc
in
and
xchg
fldcw
ret
mov
test
sub
adc
cli
dec
and
inc
mov
popa
je
dec
dec
mov
je
scas
bound
jp
jo
les
test
aam
mov
add
outs
inc
test
mov
retf
hlt
sbb
cwde
inc
outs
xchg
mov
mov
adc
ror
sub
movs
pop
movs
(bad)
out
cmps
loope
add
out
jnp
test
fisub
xor
ins
mov
in
cmp
jne
mov
div
jmp
add
jmp
mov
adc
mov
data16
mov
or
mov
aam
fmulp
mov
xchg
gs
cmp
pop
xor
jno
gs
push
pop
mov
jnp
retf
(bad)
loop
cmps
mov
clc
push
cld
add
mov
xchg
movs
add
add
sub
bound
cmp
stos
cmp
xchg
push
add
xchg
dec
test
or
movs
pusha
mov
or
test
jbe
jg
or
push
add
sahf
psubq
sub
cmps
call
sub
cmp
pop
mov
adc
push
gs
push
push
sub
ret
push
mov
sbb
call
fistp
sbb
not
jge
cmp
test
inc
mov
pop
sub
pop
movs
jno
add
gs
iret
(bad)
push
xlat
mov
jmp
mov
adc
adc
out
not
ror
lock
enter
and
sbb
mov
and
jle
out
test
inc
sub
inc
lods
jl
mov
mov
mov
data16
cmp
sub
xchg
aad
jne
repnz
dec
gs
mov
xor
add
out
adc
out
sbb
sbb
adc
test
fwait
jbe
es
aaa
aad
shl
arpl
cmp
icebp
lock
jmp
and
ins
int3
ficomp
xchg
call
xchg
popa
pop
dec
or
add
aaa
or
adc
jmp
push
clc
aaa
sti
cmp
sbb
pop
pop
nop
and
fst
sbb
jns
or
sbb
loopne
xchg
pop
retf
mov
push
fdivp
cli
sbb
fsubr
fwait
test
ja
sti
fild
ins
push
xor
dec
mov
pop
xchg
pop
mov
xchg
jbe
(bad)
cmc
aaa
mov
stos
cld
and
mov
mov
inc
gs
mov
int3
pushf
jbe
popf
js
xor
inc
(bad)
out
movs
or
push
sbb
push
ja
inc
jae
jg
dec
jno
and
adc
clc
stc
ja
and
scas
xlat
imul
dec
cmp
push
icebp
inc
int3
xchg
push
jnp
inc
jp
(bad)
cmp
cmp
fimul
mov
mov
cmc
inc
mov
rol
adc
fs
cmc
add
lock
ss
out
dec
jmp
push
movs
jno
mov
test
(bad)
and
mov
les
pop
push
cmp
lock
iret
xchg
inc
sbb
xchg
jae
std
cmp
pop
mov
inc
in
in
xlat
popf
imul
push
cmc
(bad)
cli
test
fs
mov
scas
xchg
xchg
add
mov
mov
pop
mov
test
mov
pop
ficomp
mov
stc
xchg
dec
jp
pop
dec
push
and
cdq
int
sbb
stos
add
jb
dec
pop
adc
mov
mov
mov
xchg
xchg
imul
and
jnp
mov
mov
jo
je
add
in
(bad)
push
xor
popf
jo
(bad)
(bad)
sahf
sbb
out
inc
push
cs
add
stos
dec
inc
scas
push
hlt
mov
loopne
push
pop
pop
enter
cmp
(bad)
add
movs
jmp
dec
or
and
ja
sbb
pop
out
adc
ins
ins
inc
mov
sub
sub
add
lds
call
sub
loopne
out
cmc
ss
cli
das
xor
mov
loope
or
cmp
test
mov
sbb
lock
sar
and
jmp
jl
stc
lods
(bad)
cmps
lods
jae
push
test
in
mov
push
pop
inc
aas
xchg
mov
test
pop
outs
mov
sbb
aaa
mul
sub
pop
jg
pop
mov
stc
or
and
inc
inc
xor
xchg
xchg
mov
dec
imul
pop
nop
dec
shl
out
xor
or
fld
pop
push
lea
mov
cmp
stos
add
stc
loope
or
sub
inc
add
out
jp
in
mov
xchg
xchg
mov
push
imul
inc
dec
sub
push
int
bound
xlat
mov
xchg
pop
or
iret
aam
mov
stos
jb
xchg
push
cld
arpl
retf
and
mov
dec
es
xchg
fs
faddp
or
mov
mov
int
int3
std
(bad)
push
fwait
cld
stos
into
loope
repnz
outs
int
aam
cwde
repz
inc
pcmpeqd
scas
push
mov
xchg
add
sub
adc
cmp
jle
mov
dec
in
(bad)
fcmovu
aam
sbb
mov
mov
ror
jbe
mov
call
aad
adc
xor
mov
sub
mov
jns
ins
popf
daa
shr
fcomp
loop
pop
test
mov
jmp
in
cdq
sbb
jge
pop
scas
mov
pop
out
rol
pop
pop
int
(bad)
sbb
xchg
jbe
setle
ds
push
jge
push
sahf
cmp
imul
(bad)
imul
mov
enter
sub
jae
jl
mov
xchg
inc
xchg
inc
xor
and
jp
add
stos
addr16
mov
xor
leave
jbe
aam
and
iret
fbstp
psubd
inc
dec
shl
ds
dec
jno
test
ja
pop
xor
icebp
popf
dec
dec
icebp
mov
js
and
mov
stos
or
pop
lahf
sub
fsub
push
push
ror
adc
mov
out
lock
nop
add
out
nop
bound
push
lods
mov
bnd
stos
ss
mov
dec
fnsave
mov
jns
test
mov
mov
sbb
add
mov
xchg
sbb
repz
jecxz
popf
mov
push
data16
inc
sar
mov
aam
mov
or
mov
cmp
hlt
scas
icebp
mov
stos
jno
mov
jl
add
popaw
test
jle
cmc
sub
(bad)
adc
pop
imul
sub
sub
cmp
mov
push
adc
jp
jnp
sub
jecxz
sbb
stc
clc
cmc
mov
adc
add
push
xchg
ds
add
lock
push
ds
mov
jbe
jne
xlat
mov
packsswb
xchg
int3
push
icebp
push
cli
jmp
cmps
sti
sub
mov
es
xor
lahf
clc
sbb
jae
imul
arpl
les
loopne
call
jecxz
(bad)
sub
jge
sub
fld
scas
add
fwait
xlat
pop
cmc
cdq
(bad)
xchg
mov
in
cld
fucomip
stos
loop
movs
stos
fcomp
adc
mov
xlat
popa
fild
arpl
and
(bad)
mov
mov
xor
cmp
rcr
rcl
add
sbb
jnp
test
xor
ret
adc
push
cmp
mov
dec
aas
repnz
imul
and
sub
fxch
(bad)
test
cmp
sbb
mov
idiv
popf
pop
je
sub
and
jle
ins
cmp
ret
fidiv
je
pusha
fwait
inc
movs
xchg
push
std
mov
adc
(bad)
xchg
sub
push
(bad)
jecxz
pop
bnd
ret
int
adc
xchg
dec
arpl
mov
fwait
mov
inc
or
pop
jmp
jmp
(bad)
adc
xchg
imul
dec
les
jo
inc
or
pop
gs
push
jmp
outs
arpl
mov
ss
push
(bad)
mov
mov
stos
hlt
xchg
and
sbb
fst
mov
dec
mov
mov
(bad)
xchg
jne
adc
neg
sbb
mov
push
mov
mov
cs
adc
jmp
push
(bad)
(bad)
lea
mov
test
mov
popa
pop
ins
out
popf
aaa
rol
jle
jle
outs
test
test
and
add
mov
cmc
or
int
dec
jae
mov
in
adc
call
cmp
mov
sbb
daa
lea
adc
sahf
gs
xchg
xchg
cmc
bswap
adc
push
and
std
fisttp
xchg
jl
inc
jo
pop
movs
aas
xor
push
jl
mov
call
inc
ret
(bad)
test
cmp
and
mov
push
or
pop
lock
hlt
lods
sub
pusha
jmp
stos
outs
outs
lods
or
lods
push
loope
scas
cli
ds
imul
or
jmp
std
popa
fisub
fimul
xor
das
and
or
es
xor
inc
adc
jae
in
test
jmp
cmc
mov
push
jno
pshufw
daa
mov
pop
adc
xor
gs
cmp
mov
popf
jo
rcl
movs
inc
sbb
lea
(bad)
mov
and
rol
nop
into
mov
mov
dec
sub
cli
dec
mov
aaa
outs
and
addr16
lods
fnsave
int
iret
jae
pop
push
leave
sub
int3
or
add
clc
cmp
inc
mov
aaa
cmp
pushf
or
jp
outs
jecxz
and
jo
fimul
test
(bad)
or
push
retf
lea
imul
icebp
pusha
or
pushf
mov
imul
mov
dec
out
(bad)
es
scas
mov
mov
popf
pop
mov
in
test
cwde
stos
int
(bad)
fistp
call
loopne
cld
jl
enter
xor
stos
psubb
iret
mov
mov
out
adc
mov
ja
and
xor
jo
lods
cwde
jae
push
pop
into
in
es
cmp
out
mov
outs
jmp
or
push
hlt
std
jno
neg
add
xchg
lea
fbstp
fucomi
in
push
stc
cdq
xor
adc
mov
push
out
nop
jge
inc
aam
adc
and
das
iret
mov
loop
sbb
je
add
out
rcl
dec
inc
rcr
shl
fnstcw
adc
jo
xchg
shl
cmps
pop
cmps
(bad)
xor
stos
xor
mov
into
scas
cmp
inc
and
xor
outs
int3
icebp
aad
push
add
or
(bad)
xor
mov
push
pop
push
mov
imul
in
add
sahf
dec
push
add
sub
cdq
mov
cwde
arpl
out
and
outs
icebp
lods
inc
stc
or
scas
mov
not
xchg
mov
sub
xchg
loopne
xchg
jns
repz
mov
daa
mov
pop
push
xchg
cld
and
fld
movs
cmp
or
or
bnd
test
mov
and
inc
(bad)
cdq
mov
ret
out
fwait
mov
mov
cdq
xchg
out
ss
push
jns
xchg
sub
xor
les
push
out
add
pop
cmp
daa
mov
xor
(bad)
outs
(bad)
mov
inc
cmps
mov
sbb
clc
mov
fild
mov
or
pusha
cmc
es
pop
xor
inc
cmps
inc
movs
sbb
je
repnz
jge
jecxz
sub
adc
shl
hlt
lock
cmp
in
es
aam
(bad)
xlat
ret
pusha
sbb
addr16
jle
popf
ss
fmul
int
cmp
cmp
cdq
mov
cmps
xchg
(bad)
push
lods
rol
fistp
dec
mov
out
cmc
add
and
jmp
test
xchg
dec
sub
xor
(bad)
xchg
test
jecxz
inc
ror
jecxz
icebp
shl
rol
dec
or
push
fisub
data16
imul
dec
or
pop
adc
(bad)
adc
sbb
iret
outs
jo
jg
je
mov
jne
(bad)
cwde
aam
sub
fistp
shl
fbstp
add
sub
cmp
and
enter
test
and
loope
jg
jnp
adc
les
retf
cli
or
add
arpl
outs
cdq
cmps
adc
ret
xlat
mov
jb
mov
sbb
jp
add
in
outs
outs
fisubr
dec
or
mov
lock
je
lock
push
fwait
ja
pop
jmp
jmp
sbb
lea
(bad)
fld
add
imul
movs
mov
xchg
dec
mov
loopne
(bad)
mov
imul
mov
hlt
adc
cmp
jmp
mov
xor
pushf
in
jmp
(bad)
cmc
hlt
cmps
xor
cmps
mov
and
xchg
sbb
pop
neg
cmp
mov
test
into
repnz
dec
inc
push
cmc
inc
cmps
out
inc
fistp
icebp
outs
inc
call
jge
jge
mov
dec
retf
out
std
or
xor
sti
jl
push
jle
inc
out
xchg
cli
mov
fild
sahf
scas
mov
add
xor
push
lock
or
xchg
sub
call
int
cld
clc
jnp
pusha
sub
push
scas
pop
hlt
mov
icebp
cmp
cs
outs
and
dec
and
cmp
or
pop
inc
jno
gs
sbb
inc
cmp
cmps
gs
scas
sbb
(bad)
shr
and
icebp
add
adc
jne
add
lahf
arpl
jo
xchg
pushf
mov
test
adc
dec
(bad)
sbb
int3
out
shl
sbb
in
mov
sahf
or
test
xor
xchg
sbb
xchg
aad
and
jle
pop
inc
sub
inc
jnp
scas
push
add
pop
std
dec
xor
out
push
push
lock
iret
jo
shr
jns
fcomi
dec
and
mov
stc
ins
pop
mov
dec
out
js
stc
bound
adc
das
mov
cmp
shl
daa
jmp
mov
lock
xchg
das
stos
or
mov
out
iret
aam
retf
sbb
jne
adc
mov
adc
(bad)
cmps
sub
fisttp
aas
and
jae
cmp
mov
push
lds
cmp
add
(bad)
or
out
gs
xchg
xchg
and
in
cmc
add
pop
cmp
jmp
pusha
out
mov
in
jmp
mov
scas
cs
sbb
cmp
mov
pop
jmp
or
mov
shr
sub
push
arpl
out
ror
es
mov
adc
mov
div
mov
push
cmps
scas
ja
cli
outs
(bad)
or
daa
sbb
mov
bound
mov
mov
mov
pop
sub
sub
loope
lods
pop
in
lock
xchg
sti
stos
aam
sub
outs
test
aad
xor
push
js
movs
mov
cmp
xor
mov
mov
mov
xor
mov
leave
mov
enter
popf
push
jecxz
rol
retf
mov
cmps
or
add
mov
xchg
mov
and
push
ret
xor
pop
jb
mov
jo
cmp
pop
adc
pop
mov
shl
sub
cwde
ss
push
sahf
sub
(bad)
cld
dec
pop
fcmovne
(bad)
dec
sub
push
xchg
call
push
cmp
cmp
popa
int
(bad)
repz
sub
mov
mov
mov
(bad)
jle
mov
jp
iret
(bad)
rol
jle
adc
xlat
out
stc
scas
push
ja
cli
and
xor
cmc
in
jnp
add
xchg
fiadd
lds
fnsave
enter
daa
xchg
or
adc
xor
(bad)
push
fcomp
cdq
add
in
shl
and
scas
and
jne
imul
mov
js
push
adc
div
xlat
mov
cli
(bad)
data16
int3
dec
shr
test
call
push
gs
lds
push
jbe
add
std
xchg
pop
test
or
add
les
test
inc
xor
sbb
pusha
sub
sbb
movs
imul
pop
and
jne
mov
sbb
cmp
clc
ret
into
fdivr
cmp
add
(bad)
jp
adc
pop
jle
add
xchg
es
xchg
jmp
lds
data16
pusha
dec
aas
ss
(bad)
je
mov
sbb
clc
add
jae
js
mov
push
add
repnz
lods
inc
adc
es
lods
or
push
adc
dec
pop
pusha
enter
clc
jbe
xchg
mov
cmp
inc
jmp
les
test
sub
sbb
lods
sub
push
in
ins
stos
cli
xor
pop
loopne
ficomp
pop
pop
xor
aad
sub
pop
stos
sbb
(bad)
call
sub
(bad)
cmp
xchg
neg
adc
sbb
ins
mov
fisttp
ficom
sub
mov
jmp
popf
mov
sahf
rol
inc
arpl
cmp
sub
adc
xor
(bad)
ret
cmp
xor
xchg
test
add
or
adc
loope
pop
sbb
cmp
test
retf
fisttp
std
sti
jecxz
jbe
mov
mov
inc
sub
add
cdq
popa
ins
cmp
sub
sar
cmp
sub
mov
outs
fidiv
push
adc
dec
push
repnz
call
ret
sub
aas
sbb
sbb
shr
rcr
data16
xor
loopne
scas
cmp
pop
or
or
cmp
add
push
les
fwait
(bad)
or
add
cld
pop
aad
jmp
pop
jmp
into
out
push
scas
mov
enter
push
loopne
jp
cmp
outs
je
jno
pop
inc
cld
test
ins
mov
mov
cmp
stos
mov
push
scas
push
push
fist
(bad)
std
push
lds
sbb
jge
or
scas
ss
inc
jg
push
sbb
adc
jbe
push
mov
sub
ret
jmp
cwde
dec
push
pop
js
jnp
scas
in
and
lods
in
popa
pop
ret
or
pop
call
pop
and
xor
mov
inc
mov
mov
mov
dec
loopne
pop
adc
xchg
xchg
inc
push
int
pop
sbb
xchg
mov
das
int
dec
int
mov
stc
mov
(bad)
call
cld
mov
jp
cmp
inc
nop
outs
pop
mov
ret
adc
out
and
xor
cmp
mov
add
call
cdq
inc
in
fldenv
call
xor
mov
std
xor
loopne
dec
sub
sbb
out
lock
in
stos
mov
aad
das
sub
add
cmp
sti
es
jecxz
ss
cli
pop
int
ins
and
test
stos
sbb
and
stos
jns
inc
arpl
les
dec
ret
sbb
sbb
out
jbe
xor
js
ja
mov
dec
mov
or
and
aam
ss
pushf
shl
mov
or
or
into
aaa
in
jmp
clc
test
(bad)
popa
xchg
into
xchg
xor
lea
and
add
xor
xor
cmps
mov
not
mov
(bad)
pop
in
push
xchg
cmps
inc
xor
(bad)
fld
cmp
lahf
mov
movs
(bad)
icebp
out
nop
mov
inc
outs
outs
mov
adc
inc
add
das
jne
aam
outs
rcr
fsubrp
inc
lahf
addr16
xor
es
dec
movs
sbb
icebp
sub
adc
inc
inc
xchg
aad
pushf
in
icebp
movs
daa
ds
out
(bad)
jle
push
push
dec
push
fild
or
jg
jecxz
rcr
jge
jne
loop
push
out
sbb
sub
cs
mov
cmp
mov
rol
fistp
dec
rol
test
push
and
sub
mov
jmp
out
inc
jnp
pop
dec
sti
sbb
mov
in
adc
ror
and
adc
xchg
loop
and
mov
shl
jg
cmp
inc
mov
pop
mov
neg
leave
mov
mov
aaa
jbe
jp
mov
adc
pop
sub
test
pop
push
mov
out
mov
adc
ret
pop
mov
add
outs
push
adc
pop
mov
push
test
scas
mov
add
xchg
xor
dec
dec
hlt
jg
leave
cmp
ret
out
jp
into
int3
mov
ins
jl
and
test
jp
xchg
push
sti
ja
mov
in
mov
jo
cdq
cmp
in
std
icebp
(bad)
jge
addr16
imul
test
sub
into
shl
repz
jo
sti
ret
fist
ins
inc
sub
lods
imul
dec
and
add
mov
inc
xor
in
jae
push
jns
sub
(bad)
movs
aas
jle
jp
icebp
xchg
sub
sub
ret
popf
aad
jmp
xor
mov
adc
dec
or
xchg
pop
jecxz
push
and
ins
dec
cmp
stc
jge
ins
test
dec
push
xor
jg
xor
iret
push
into
mov
push
into
scas
rol
sub
imul
push
push
xor
or
adc
bound
or
ds
push
mov
pop
into
addr16
jmp
fild
test
sbb
jmp
sahf
inc
dec
loop
push
loope
sbb
adc
(bad)
inc
mov
outs
dec
mov
jno
jp
cmps
inc
in
and
dec
pop
mov
adc
test
mov
call
sub
cmp
xchg
push
mov
jns
in
cmp
(bad)
mov
mul
(bad)
ret
rol
clc
ss
shl
sub
test
fdiv
cli
lahf
jno
jecxz
jl
push
xor
lods
jp
mov
call
popf
sub
in
jecxz
ins
fwait
imul
xchg
arpl
out
(bad)
outs
pop
rcr
ss
inc
in
jnp
test
jmp
retf
mov
jp
push
xchg
pushf
int
xlat
clc
retf
loop
push
ins
(bad)
je
mov
mov
dec
push
(bad)
sbb
imul
loop
mov
rcl
addr16
shl
sub
sahf
xchg
scas
icebp
(bad)
aas
and
xor
ja
in
lds
inc
loop
push
fld
sbb
loope
jnp
cdq
call
pop
inc
shl
ins
(bad)
pusha
popa
in
(bad)
retf
inc
push
cld
jl
mov
push
cmc
mov
or
mov
sbb
out
ror
jp
adc
gs
dec
jp
pop
ret
mov
ret
icebp
fnstcw
cmps
mov
out
popf
ds
into
xchg
(bad)
mov
mov
fnsave
fnsave
adc
ins
in
stos
into
mov
out
and
cmp
clc
movs
cwde
cmp
leave
and
push
fucomip
mov
pop
daa
hlt
aas
mov
and
xor
xchg
mov
pushf
adc
inc
cmp
jne
xor
test
xlat
scas
adc
mov
out
fidivr
shl
(bad)
cmp
dec
jmp
sbb
sbb
mov
in
pop
mov
push
mov
dec
test
push
jae
rol
add
pop
pop
xor
lahf
push
jb
add
xor
imul
xor
mov
xchg
sar
pop
inc
add
scas
push
add
in
and
inc
and
out
ins
jge
jmp
jns
cwde
sbb
sbb
les
pop
xchg
push
aaa
xchg
mov
(bad)
loope
(bad)
cmp
or
popa
cwde
push
add
push
call
mov
sbb
push
xor
(bad)
(bad)
dec
adc
pop
push
shr
mov
out
cmp
cs
jae
je
sbb
stc
mov
out
les
dec
add
mov
mov
mov
outs
jp
cwde
mov
in
retf
jg
in
leave
mov
(bad)
jae
scas
xlat
cmp
repnz
fcmovne
jge
push
jbe
jge
and
retf
dec
stos
pusha
test
xor
lock
pop
mov
les
call
test
rcr
fld
xor
xchg
hlt
out
xchg
xchg
lds
sub
sub
int
xlat
pop
pop
rcr
inc
pushw
repz
int3
push
dec
lods
sub
clc
(bad)
push
add
pop
or
add
mov
popf
inc
fsub
xor
pop
imul
xor
jne
popf
mov
add
pop
jecxz
ja
dec
jmp
sti
add
mov
mov
sub
and
pop
fadd
add
daa
retf
xor
and
cwde
fs
sti
frstor
mov
jno
sbb
xor
jl
jnp
aas
jbe
into
push
leave
jmp
add
cmp
pop
jae
inc
rol
hlt
xchg
ja
repnz
xchg
mov
sbb
ja
push
leave
sub
sub
lods
mov
fwait
ror
pop
test
scas
xchg
inc
and
movs
cmps
pop
jne
repnz
scas
push
out
data16
lock
xchg
fst
dec
sbb
xchg
sub
push
adc
jae
movs
push
or
fisttp
movs
adc
in
sti
sbb
lahf
(bad)
push
push
mov
js
push
adc
jo
cs
mov
arpl
inc
test
scas
loope
jl
ins
jmp
aas
xchg
es
cmps
in
push
mov
sbb
sti
mov
adc
or
dec
jl
cmp
out
inc
loopne
in
mov
cmps
cs
out
dec
xchg
test
xor
cmp
adc
mov
add
dec
(bad)
and
les
mov
scas
push
mov
mov
or
lahf
jmp
nop
cmp
mov
mov
sbb
fistp
push
test
mov
fwait
mov
or
and
movs
int
ret
ss
add
or
cmovge
sub
js
jbe
mov
(bad)
mov
int3
adc
push
xchg
repnz
jb
test
push
pop
aaa
inc
imul
mov
fs
add
add
sub
mov
ret
(bad)
movs
push
dec
xlat
adc
mov
retf
pop
xor
rcl
outs
add
test
cmp
add
aad
(bad)
sti
mov
mov
mov
(bad)
aam
pop
imul
(bad)
cwde
std
sbb
inc
or
test
rol
cmp
jae
pushf
neg
stc
ss
mov
outs
adc
repz
lea
cmps
les
sub
iret
inc
and
push
mov
jne
dec
dec
stos
add
jno
repz
xchg
dec
sbb
cmp
xchg
imul
push
xchg
jb
fcomip
sti
dec
popa
mov
inc
es
lods
or
fistp
pop
lahf
int
popf
pusha
data16
aam
fcom
js
pop
outs
ror
and
sub
push
aaa
dec
hlt
adc
add
and
xchg
cmp
push
xchg
jp
mov
out
scas
xchg
mov
int
sbb
ins
dec
fnstsw
pop
add
pushf
cmp
je
push
pop
jle
scas
ins
dec
movs
mov
pop
sub
push
mov
jle
lock
xchg
dec
iret
mov
inc
imul
xchg
test
fistp
hlt
sub
sar
lea
stos
xor
rcl
add
push
xchg
inc
add
nop
icebp
or
divps
xor
dec
mov
loop
push
push
lds
ins
inc
loop
mov
push
and
jmp
test
sub
xor
mov
iret
jno
loopne
gs
mov
inc
loop
mov
cmps
inc
mov
xchg
jmp
jbe
adc
in
sbb
or
push
mov
int3
xlat
pop
jecxz
xchg
das
add
mov
aas
rcl
dec
inc
mov
adc
cld
add
out
int
and
mov
sbb
or
retf
adc
push
(bad)
retf
int
dec
test
lahf
push
cmps
xchg
mov
fiadd
iret
cli
cmc
repz
pop
mov
ins
xor
arpl
and
and
cwde
cmp
sub
int3
mov
xor
pop
bndstx
(bad)
cmp
inc
popf
jo
add
ins
jmp
xor
adc
in
cmp
fs
cwde
jl
test
scas
popa
xchg
mov
xchg
dec
add
mov
mov
adc
jmp
mov
idiv
jmp
sbb
outs
test
jmp
lods
lea
jbe
jns
sbb
jmp
cmp
xor
icebp
dec
cmp
icebp
aad
fs
sbb
add
mov
int3
movs
pop
xchg
fstp
ds
jecxz
shl
sub
mov
idiv
sbb
and
pop
jb
jl
jp
push
sti
in
push
cwde
xor
push
aad
sbb
fcmovne
ja
stc
jl
add
xchg
push
xor
addr16
push
imul
sbb
adc
(bad)
loopne
inc
popa
jbe
xor
mov
jg
inc
in
cld
retf
pusha
sub
inc
adc
cwde
div
aas
xor
dec
inc
sub
xchg
int
lods
data16
cmp
jmp
push
lds
xor
xor
loopne
pushf
and
xor
push
data16
cmp
jae
push
adc
pushf
pop
push
std
cs
cdq
hlt
pop
pop
ret
in
fwait
push
adc
or
dec
pop
nop
sar
sub
xchg
adc
sbb
xor
cmp
out
jb
lds
pop
pmaddwd
fwait
cmp
dec
sub
inc
push
inc
mov
outs
pop
inc
imul
imul
pop
inc
dec
rol
out
push
dec
inc
adc
(bad)
xchg
je
sar
mov
std
lods
mov
sbb
mov
stc
gs
sbb
jbe
cld
test
ins
fwait
retf
pop
fs
fldcw
push
cwde
in
fldcw
and
int3
cli
adc
dec
add
cmp
aam
dec
int
dec
pop
jo
(bad)
loopne
iret
jmp
and
std
jmp
scas
and
xlat
jge
sti
mov
sbb
imul
popa
(bad)
jbe
aaa
mov
sbb
jno
or
push
call
in
movs
or
jecxz
push
int
test
xchg
jnp
push
or
popa
sbb
idiv
push
push
push
xchg
and
sbb
inc
mov
ret
cli
ds
outs
mov
push
cdq
or
(bad)
in
and
out
in
repnz
mov
outs
call
cld
jp
mov
xor
xchg
mov
pusha
pop
lahf
scas
or
mov
outs
xor
and
mov
xchg
sbb
and
and
cdq
(bad)
mov
push
mov
sub
sti
cmps
cmp
addr16
clc
shr
sub
inc
in
xor
fcom
lock
mov
jmp
in
sub
and
ins
ins
test
loope
(bad)
test
ds
scas
cdq
into
clc
je
mov
pop
jl
inc
xor
or
in
xlat
add
mov
sbb
mov
dec
cmp
std
add
shl
jno
or
mov
in
dec
inc
push
(bad)
jb
push
xchg
add
pop
pop
sbb
mov
cmp
mov
mov
jo
hlt
inc
stos
adc
into
mov
pop
lods
scas
sbb
iret
inc
mov
out
mov
fmulp
xchg
fcmove
cwde
or
cmp
movs
popa
mov
xor
stos
mov
dec
jne
or
stos
imul
and
jne
test
mov
sti
shr
xchg
push
or
movs
imul
dec
hlt
int3
pop
int
mov
cwde
mov
xor
outs
inc
xlat
loope
call
jbe
sbb
pop
into
enter
dec
outs
(bad)
or
cwde
mov
dec
(bad)
pop
leave
scas
leave
xchg
shl
mov
add
inc
and
dec
imul
or
mov
sbb
std
or
cmc
mov
jle
test
jmp
mov
mov
adc
pop
fwait
xor
pop
ss
test
mov
mov
fcom
imul
fdiv
jo
push
ss
pop
add
fwait
out
arpl
xor
mov
push
mov
data16
daa
shl
in
lahf
or
dec
gs
mov
jno
push
mov
std
sbb
add
mul
or
mov
add
jo
retf
sbb
repz
and
xchg
int3
ins
stc
aam
test
mov
shr
add
pop
mov
sub
outs
fs
sub
adc
jno
fbstp
and
clc
jecxz
adc
aad
jmp
cld
sub
hlt
retf
stos
out
scas
pop
and
sub
jmp
pop
mov
add
jp
test
and
adc
mov
push
push
loop
clc
mov
lods
pushf
sbb
fild
mov
mov
repnz
xchg
and
pusha
push
pop
movs
sbb
mov
fld
jp
and
ja
add
cmp
outs
fild
js
or
ds
push
mov
out
ds
ret
outs
dec
mov
std
or
cdq
mov
add
cwde
fs
ret
mov
and
dec
or
adc
adc
movs
jg
mov
xchg
fwait
repnz
adc
pop
or
into
inc
xchg
(bad)
fisub
mov
push
cmp
mov
hlt
aaa
test
sti
nop
sub
and
shr
adc
add
add
shl
sbb
add
pop
jmp
leave
(bad)
jl
jno
cmps
push
stc
into
or
out
sub
bound
neg
jb
in
mov
loopne
nop
arpl
loop
push
je
pop
mov
sahf
inc
inc
in
clc
scas
daa
popa
gs
adc
mov
nop
je
cmp
movs
xchg
lds
jg
sar
ret
int
mov
es
jbe
pop
(bad)
int3
mov
jb
cmps
loopne
les
ret
sbb
and
int3
sbb
xor
stos
in
div
int3
dec
xlat
fdiv
rol
xchg
cmp
or
idiv
(bad)
fsub
ret
fucom
add
add
retf
dec
jp
and
xchg
xor
push
or
movs
or
push
xlat
add
loop
add
or
stos
ret
adc
xchg
cs
pop
add
mov
pop
jae
dec
scas
xor
loop
cmp
cmp
test
ss
ret
cmp
xchg
(bad)
mov
cmps
test
xchg
jnp
loop
and
adc
adc
xor
cmp
pop
retf
cmp
test
ja
js
in
pop
pop
mov
retf
fstp
(bad)
xchg
cmps
shr
gs
dec
cdq
cli
mov
stc
out
retf
pop
cmp
(bad)
push
pop
fs
or
and
jb
mov
call
(bad)
ss
add
jle
daa
out
xlat
cwde
adc
popa
cmp
nop
inc
cli
xor
push
xor
ror
jl
mov
retf
push
ror
(bad)
sbb
add
and
dec
xchg
leave
lods
ss
push
cs
shl
or
pop
shr
fisubr
push
pop
sbb
add
inc
addr16
ins
mov
in
hlt
pop
add
stc
stos
rol
lods
pop
pushf
add
xlat
adc
rol
and
inc
sbb
sub
div
xor
dec
gs
mov
sub
scas
mov
out
xor
xor
push
in
or
and
or
jle
mov
mov
int3
push
in
clc
mov
sub
(bad)
ins
xchg
xchg
inc
lock
sar
xor
push
ja
push
push
xchg
je
cmp
fisubr
cdq
inc
push
sub
scas
ret
mov
mov
repz
inc
jno
jne
(bad)
pusha
xor
or
in
and
movs
movs
jmp
js
mov
sti
lahf
add
aas
cmp
jl
lock
jne
dec
mov
mov
sti
out
retf
mov
xor
in
lahf
and
push
addr16
data16
and
xor
mov
cmp
sbb
fist
and
mov
in
gs
dec
xor
retf
pop
sbb
xchg
jnp
stos
rol
rcr
adc
push
das
mov
aas
xchg
das
inc
(bad)
fwait
mov
cmp
fcmovu
jo
ret
jo
push
mov
inc
leave
add
jb
ror
(bad)
jmp
mov
mov
clc
adc
cld
pop
ins
xchg
lds
imul
out
xchg
jbe
mov
(bad)
xchg
push
xor
pusha
das
aad
loop
jg
push
sub
fndisi(8087
push
inc
mov
repnz
lods
inc
pop
xchg
fsubr
(bad)
stc
inc
push
sti
(bad)
lods
std
scas
and
sahf
cmp
pop
xor
sub
adc
neg
rcr
mov
imul
cld
cmp
and
jo
sbb
add
sub
mov
call
mov
dec
not
int
into
xor
movs
inc
ror
and
daa
inc
mov
aad
into
fst
cmp
jecxz
pop
pop
pop
mov
jne
fwait
xchg
xchg
adc
fld
ror
cmp
jnp
sub
pop
popf
push
aam
pushf
push
pusha
inc
sahf
les
pop
jno
std
ror
push
mov
cld
mov
(bad)
ins
pushf
push
ret
sub
fwait
sub
imul
fcomi
jno
mov
lods
xor
ss
test
sub
push
leave
loope
fsub
or
cwde
ins
enter
mov
xchg
(bad)
pop
clc
fcmovnb
ret
sar
clc
loop
inc
(bad)
inc
adc
cmp
cld
and
jmp
inc
push
pop
fcomp
pop
cmp
push
call
les
popa
test
call
dec
sbb
pop
pop
pop
loop
push
pop
arpl
(bad)
repnz
sbb
pop
jmp
xchg
xor
bound
jmp
call
data16
fnstenv
dec
addr16
pop
repnz
gs
rcl
jmp
jmp
lods
push
xchg
es
bound
scas
mov
push
imul
xor
movs
mov
adc
aad
shl
adc
xchg
fisub
push
js
pushf
je
mov
mov
inc
push
push
pop
lock
popa
fxch
pop
aas
jmp
add
sar
adc
mov
xchg
push
mul
xor
push
xchg
lahf
(bad)
or
adc
mov
ror
lods
movs
clc
repnz
and
fsubr
push
aam
inc
xor
stos
fnstsw
sbb
test
fdiv
mov
sbb
sub
data16
cmp
test
xchg
cmp
mov
push
adc
test
fs
in
sub
jmp
out
out
sar
add
jmp
fidivr
sti
xchg
xor
pop
lods
stc
loopne
inc
sahf
scas
ins
dec
xor
add
adc
mov
sub
div
lahf
jbe
mov
dec
stos
scas
aaa
mov
f2xm1
cmp
mov
pop
push
ins
rcr
mov
cmps
cmc
js
push
fnstsw
bnd
fcomp
jo
dec
ss
push
out
hlt
jg
dec
inc
icebp
test
pop
arpl
aas
dec
sub
sti
pop
outs
adc
movs
clc
fstp
(bad)
sub
push
xchg
sbb
xlat
xlat
stc
sub
cmps
ins
retf
sar
or
xchg
cld
jne
mov
sub
das
psrlq
cmp
dec
ins
mov
add
xor
inc
imul
aam
(bad)
loopne
outs
into
push
scas
xchg
or
inc
or
out
xor
add
in
or
cli
fist
pop
mov
mov
enterw
stc
pop
jp
pop
or
int3
or
shr
dec
cdq
popa
add
shl
stos
in
add
shr
and
dec
jmp
ret
jmp
mov
and
jno
adc
mov
bound
push
jbe
call
pop
dec
cmps
mov
mov
div
bound
pop
(bad)
sti
ins
pop
push
inc
in
add
mov
addr16
push
out
sbb
(bad)
in
jbe
or
cmp
daa
outs
xor
loopne
mov
and
sub
or
nop
int3
pop
cdq
mov
xchg
sub
in
push
jl
fwait
xchg
sub
and
outs
inc
mov
arpl
push
dec
jnp
popa
and
xlat
push
sub
push
out
jns
and
clc
push
sets
xchg
hlt
add
xor
stos
xor
inc
(bad)
jmp
lock
push
jge
mov
mov
or
cli
popa
int3
or
out
push
xlat
scas
and
aaa
ret
aaa
mov
cmps
jb
inc
fimul
enter
cdq
add
mov
mov
add
jecxz
sbb
mov
mov
mov
sbb
das
sub
xchg
in
or
pop
xor
int
mov
xchg
cli
pop
das
sub
addr16
xor
inc
push
test
addr16
dec
jp
xchg
jo
rol
or
retf
xchg
xchg
icebp
dec
shl
pop
mov
pop
xchg
push
sar
lods
jecxz
adc
cmp
mov
scas
xor
cld
cmps
jns
and
jmp
dec
int
mov
and
jmp
mov
jge
mov
call
cmp
jmp
jb
dec
or
sbb
clc
je
movs
popa
jne
jmp
push
push
sub
mov
xor
test
lea
mov
xchg
mov
js
sti
sbb
mov
and
push
stc
test
aas
ja
and
lock
mov
jb
and
outs
cld
iret
(bad)
push
rol
cwde
mov
sbb
test
nop
jns
push
or
add
scas
xor
xchg
xchg
test
push
(bad)
mov
mov
xchg
ret
stos
dec
pop
call
(bad)
call
push
xchg
push
and
js
out
sbb
dec
out
in
mov
rcl
dec
push
sti
out
pop
cwde
push
add
popa
es
sbb
ds
je
imul
and
(bad)
mov
movs
adc
cdq
fst
jp
cmp
add
idiv
in
cmp
bound
push
push
js
push
(bad)
and
in
stos
pop
jge
fwait
ret
push
jnp
loopne
add
movs
dec
scas
(bad)
rcl
push
cld
mov
lods
inc
movs
fdivr
and
push
lock
in
cmp
(bad)
sub
pop
xor
fisttp
aad
xor
(bad)
rcr
loop
cmps
or
pop
loopne
fcmovnu
ficom
push
cmps
ret
fldenv
mov
push
iret
pop
das
sub
repz
enter
and
adc
xchg
stos
add
mov
mov
jo
in
(bad)
jg
ret
test
call
sub
mov
(bad)
imul
in
add
nop
push
mov
mov
jl
jne
dec
adc
push
jle
mov
add
sahf
(bad)
inc
mov
int
int3
jmp
ins
jge
adc
mov
inc
mov
and
(bad)
dec
in
jb
imul
xor
xchg
daa
pop
mov
retf
sbb
fld
sub
mov
cmps
(bad)
mov
xchg
pop
mov
and
xor
xchg
test
push
movs
add
fxam
push
test
int
and
jle
inc
lahf
sub
mov
repnz
enter
cs
add
mov
dec
inc
pop
push
jae
mov
addr16
or
mov
loope
mov
sub
xlat
cld
nop
in
sbb
ret
push
cmc
mov
and
test
add
jmp
inc
push
mov
adc
xor
or
jb
loop
scas
jl
idiv
pop
outs
mov
dec
ret
push
sbb
push
in
xor
xor
dec
fidivr
aam
push
pop
sub
pop
jno
pop
loope
repnz
push
or
inc
pusha
adc
sbb
push
xchg
jb
and
push
and
adc
jmp
into
push
out
mov
mov
movs
push
push
jl
xchg
xor
dec
xor
or
lock
fbstp
push
fld
sbb
mov
mov
(bad)
mov
and
pop
popf
add
dec
or
or
and
(bad)
jmp
stos
xchg
(bad)
mov
pop
add
xor
dec
movs
mov
psubq
aam
xchg
test
jne
cwde
sbb
aaa
jo
push
shl
and
sbb
(bad)
out
stc
or
mov
sahf
test
data16
rcl
xor
or
and
(bad)
xchg
jmp
cld
pop
ficom
sub
push
and
in
enter
lds
stc
(bad)
dec
sub
mov
push
mov
xchg
test
jge
test
ins
div
ss
mov
jecxz
(bad)
sub
int3
sti
push
cmps
(bad)
das
mov
pusha
xchg
scas
imul
fnstcw
std
out
sub
inc
pushf
gs
outs
jmp
add
jge
aaa
sbb
fs
xchg
mov
(bad)
stos
ret
in
movs
dec
xchg
(bad)
inc
neg
(bad)
sahf
push
(bad)
mov
popf
call
cld
fwait
and
rcl
sub
shl
and
lea
add
sbb
neg
push
mov
popf
ins
xchg
pop
or
xchg
inc
stos
xor
inc
dec
dec
in
adc
sti
adc
imul
lods
repz
xor
and
inc
fadd
adc
pop
adc
push
cs
(bad)
shr
es
clc
xor
fldcw
sub
shl
pop
pop
loope
imul
jno
popa
stc
test
push
inc
add
ds
pop
pop
or
stos
call
jno
std
xchg
xchg
fsubr
pop
ins
xor
in
or
pop
inc
sub
clc
dec
jmp
xor
cmc
aaa
dec
daa
ror
jmp
call
jle
fidiv
mov
lods
mov
pop
mov
mov
sti
and
mov
adc
rol
add
scas
add
scas
dec
add
pop
stos
call
fwait
ja
movs
cmp
imul
mov
cmp
std
hlt
xchg
inc
xchg
es
xchg
(bad)
out
push
outs
mov
nop
and
leave
xor
jecxz
add
ss
icebp
pop
rol
pop
mov
cmp
stos
dec
aam
arpl
pop
mov
dec
cmp
hlt
pop
js
mov
clc
pushf
jns
add
sbb
ror
push
outs
xchg
call
(bad)
fwait
adc
bound
gs
adc
push
xchg
lods
daa
inc
push
xor
aaa
mov
std
shl
(bad)
adc
repnz
daa
out
sub
and
aaa
aas
hlt
pop
sub
iret
dec
sub
inc
xor
out
stos
out
les
and
(bad)
daa
cmp
out
mov
in
ret
adc
inc
sub
iret
or
cmp
sbb
xor
gs
dec
stos
popa
(bad)
sbb
sub
test
or
and
mov
in
in
xchg
jle
or
and
loopne
adc
mov
inc
jo
lock
mov
adc
add
ror
xor
jb
xchg
loop
ret
ret
sub
ret
sti
fiadd
push
add
jecxz
lea
sbb
push
mov
and
mov
push
into
pop
ret
lods
add
pop
dec
movs
lds
xchg
jecxz
adc
push
push
fcmovnb
mov
movs
into
inc
data16
dec
loop
mov
dec
adc
adc
lahf
std
push
ja
das
shl
xchg
and
pusha
div
adc
push
xor
idiv
push
xchg
ss
jmp
and
enter
adc
lods
gs
mov
and
jge
lods
cli
int3
xor
cmp
jno
pop
push
sub
out
push
(bad)
into
mov
scas
clc
rol
inc
push
xchg
aad
das
jmp
fidiv
dec
cli
push
cli
std
stos
and
iret
stos
adc
je
sub
push
add
jne
push
test
in
(bad)
sbb
xlat
dec
out
cmp
maxps
je
shl
(bad)
ss
or
sti
push
xchg
hlt
leave
sub
jae
inc
imul
icebp
mov
push
adc
je
jb
fsub
cdq
call
push
add
dec
es
jbe
sub
or
sub
inc
sbb
and
mov
es
mov
sub
bswap
xchg
xchg
fstp
ficom
mov
adc
inc
sahf
jae
dec
fisubr
push
ret
mov
adc
test
ja
icebp
sub
lods
push
and
or
mov
cmp
sbb
leave
arpl
dec
pushf
mov
add
mov
jne
ret
add
pop
jne
test
sti
(bad)
pop
unpcklps
cmp
movs
xchg
das
add
inc
cmp
inc
aaa
mov
popa
dec
in
(bad)
(bad)
cdq
xor
out
xor
bound
rol
sub
ret
ror
cmp
clc
stos
cmps
mov
add
stos
ror
push
xchg
out
stc
inc
sbb
jno
adc
js
xor
nop
xchg
sub
stc
iret
xor
mov
or
inc
shl
jno
adc
mov
sub
push
imul
icebp
push
sub
int3
sub
repnz
dec
inc
lds
mul
sbb
movs
push
retf
add
cmp
ret
dec
mov
mov
or
inc
or
aas
jne
(bad)
mov
cld
or
daa
and
sahf
push
pop
or
mov
setge
cmp
ds
pop
cli
jmp
out
scas
scas
lds
adc
and
dec
inc
sub
jmp
(bad)
inc
inc
mov
inc
push
icebp
pop
add
push
cmp
dec
call
rcl
outs
jmp
mov
mov
lahf
imul
jp
sbb
and
ret
mov
mov
mov
jmp
ret
pop
out
loop
xchg
jbe
add
mov
adc
pop
js
pop
mov
cdq
ds
ins
add
mov
sub
(bad)
mov
sub
loopne
cmp
jmp
icebp
jbe
mov
nop
fucom
nop
in
ds
and
xchg
leave
fbstp
xor
pusha
or
ds
or
jle
mov
pop
(bad)
lea
test
sub
stc
xchg
pop
in
std
es
inc
dec
xchg
and
lahf
jnp
mov
or
sar
or
adc
pusha
mov
push
test
mov
xor
adc
cmp
push
bnd
jae
repz
out
inc
scas
and
ret
cmp
(bad)
(bad)
lahf
xchg
dec
icebp
sbb
loop
xchg
sub
sbb
into
push
mov
cwde
jmp
scas
push
or
push
jl
pushf
mov
dec
call
sub
xchg
or
cmp
cmp
mov
xor
mov
test
lds
fwait
or
pop
cdq
(bad)
xchg
out
xchg
push
mov
jecxz
ficomp
cs
test
adc
or
xchg
and
mov
mov
and
mov
adc
shr
retf
out
cmc
(bad)
ins
adc
or
fldenv
imul
std
lea
mov
xor
xchg
sub
clc
add
scas
jns
mov
call
sbb
inc
sbb
pushf
mov
pop
outs
ss
mov
pop
out
mov
xchg
stos
mov
mov
mov
cld
cmps
jno
stos
cmps
out
stos
lods
dec
mov
jmp
sub
nop
ja
jg
cli
xor
test
dec
sub
in
fwait
and
sbb
or
dec
xor
mov
jb
(bad)
mov
and
sub
mov
in
sar
sahf
or
outs
add
mov
ins
pop
jns
jecxz
aad
mov
add
aaa
int3
xchg
fwait
add
xchg
or
arpl
pop
and
jmp
pop
jge
adc
xor
push
xchg
cmc
cdq
repnz
gs
push
and
loop
lds
out
jle
jmp
lods
fstp
push
jno
cmp
lock
xor
cmp
add
into
jg
into
push
popf
jmp
cmps
xchg
push
xchg
mov
hlt
push
shl
push
pop
das
test
mov
and
cmp
jp
ror
mov
ins
mov
out
popa
mov
jg
call
(bad)
gs
loope
add
mov
lea
idiv
mov
imul
inc
add
fwait
xchg
mul
push
scas
leave
push
pop
xor
int3
mov
pop
sbb
mov
adc
aaa
call
addr16
jo
sbb
aam
pop
or
xor
pop
and
mov
inc
fiadd
jle
inc
xor
imul
leave
or
xchg
jmp
cmp
cli
mov
cmc
lea
imul
mov
rcl
dec
add
cmp
pop
cmp
xchg
push
mov
rcr
add
les
cmc
std
adc
mov
ins
push
call
pop
dec
fld
sub
push
bound
jbe
scas
call
cmp
(bad)
mov
rep
out
int
das
call
bnd
dec
inc
ins
stc
push
sbb
mov
or
inc
push
pop
sbb
shl
int3
loope
pop
movs
add
fwait
stos
loop
in
sbb
sbb
push
push
pusha
retf
or
xchg
fnstsw
(bad)
lea
cmp
mov
jecxz
pop
test
cwde
fcom
and
xchg
imul
and
sub
icebp
mov
out
xor
sbb
pop
cmp
mov
clc
daa
mov
pop
xlat
ror
inc
retf
enter
call
cli
fiadd
or
jecxz
ficomp
mov
call
jae
fcmovnbe
mov
mov
mov
pop
cmp
pop
imul
mov
push
mov
inc
xchg
cdq
pop
lea
mov
pop
mov
inc
lock
jmp
aad
in
xor
es
mov
cmp
mov
fnstsw
je
mov
pop
in
loope
pop
aaa
mov
lahf
pop
outs
jl
cmp
stos
js
mov
xchg
les
not
xor
xor
test
and
inc
sub
dec
mov
or
adc
popa
loopne
pop
and
mov
jg
and
push
mov
pop
int
pop
push
cwde
aad
push
push
ins
adc
push
push
sbb
jb
call
ret
not
xchg
fld
mov
aad
mov
call
mov
mov
loop
sbb
lea
sub
fs
sti
cmps
dec
jbe
sub
call
out
popf
pop
dec
int3
bound
and
sub
(bad)
jp
mov
push
sub
dec
xlat
add
adc
or
push
fwait
jno
test
sub
mov
xchg
xchg
mov
adc
pop
dec
dec
add
repz
imul
inc
popf
sub
fdivr
inc
jg
shr
(bad)
jecxz
jo
rdtsc
ret
pop
jle
mov
and
popa
xchg
pop
inc
inc
inc
(bad)
xchg
mov
fisub
jmp
dec
push
(bad)
and
nop
cmp
lahf
push
pop
inc
popa
lods
(bad)
retf
jo
mov
jbe
inc
(bad)
sub
(bad)
dec
shl
or
push
or
adc
pop
push
mov
cmp
push
mov
jp
jecxz
loop
dec
shr
jns
pop
sti
pop
jns
arpl
aad
gs
stc
shl
(bad)
jmp
mov
mov
or
and
lods
and
mov
sub
cmp
clc
movs
cmps
mov
hlt
mov
fwait
xor
mov
pop
ins
mov
test
cmp
aas
imul
lods
into
sub
dec
int3
in
ret
std
push
out
or
xchg
push
adc
push
lods
jnp
pop
out
mov
xchg
inc
fldcw
(bad)
popa
cmp
xchg
adc
imul
cli
outs
fistp
js
enter
aad
pop
icebp
cmp
pop
cwde
(bad)
mov
stc
rcr
mov
ret
sub
mov
xchg
lods
lahf
xor
ds
hlt
aas
test
jae
jmp
add
xchg
xchg
xlat
inc
sbb
(bad)
push
out
in
ficom
xchg
jecxz
sar
test
fimul
sbb
push
and
xor
mov
xchg
sar
ror
(bad)
add
in
inc
imul
push
cmps
jle
push
das
dec
cmp
pop
cwde
js
add
push
es
aas
xor
or
pop
xor
inc
xchg
popf
in
mov
bnd
jno
inc
inc
xor
xchg
bound
and
(bad)
cmc
mov
int3
inc
(bad)
jmp
sbb
dec
mov
and
add
pop
es
(bad)
cdq
(bad)
push
add
stos
cmp
add
sbb
adc
inc
sub
fisub
and
jmp
pop
sbb
xchg
and
out
ret
push
call
adc
push
mov
jl
pop
inc
ins
retf
jecxz
mov
adc
mov
jecxz
cdq
push
push
jae
mov
sbb
imul
mov
pop
or
int
mov
sub
cmps
push
inc
scas
mov
test
or
inc
mov
jnp
xor
mov
sub
aaa
es
pop
lds
in
rol
mov
clc
mov
mov
mov
pop
push
imul
fwait
in
mov
movs
push
push
mov
lods
mov
pop
or
loopne
pop
sub
pop
popf
xchg
aam
lods
movs
sbb
aaa
mov
fild
(bad)
sbb
and
sbb
stos
adc
pop
xor
pushf
ins
ins
ror
sub
mov
pushf
push
mul
xchg
ret
lea
inc
mul
call
cmp
mov
femms
mov
out
jnp
mov
mov
fild
lods
inc
xor
push
adc
cmps
sub
scas
aas
cmp
clc
jne
sbb
lods
dec
dec
xor
ins
in
mov
jl
or
loope
xchg
int
les
or
push
popf
adc
pop
mov
dec
cmps
aas
mov
pop
(bad)
hlt
mov
xlat
mov
or
adc
sbb
adc
hlt
dec
mov
clc
fs
and
js
inc
fisttp
test
push
xchg
movs
mov
add
outs
and
fcomp
movs
xchg
pop
jl
pop
add
inc
push
cmp
cmp
outs
mov
jmp
into
(bad)
cwde
fisubr
cmc
fnstcw
adc
(bad)
jns
sub
adc
sub
cwde
mov
mov
push
sub
jo
mov
push
add
jae
adc
popa
mov
push
inc
call
mov
dec
lock
rcr
pushaw
adc
inc
sub
push
mov
aad
or
push
sti
daa
dec
cmc
iret
push
(bad)
ja
sbb
out
jl
xchg
add
fucomip
pushf
dec
mov
inc
or
dec
in
hlt
fld
fimul
lahf
dec
mov
imul
dec
mov
pop
cmp
sbb
adc
es
xchg
mov
sbb
inc
cmp
fxch
inc
loopne
xor
sub
imul
loop
mov
dec
jbe
in
daa
jbe
bound
adc
xor
dec
sbb
mov
int
test
enter
test
adc
(bad)
out
repz
xchg
test
xor
push
push
shl
pushf
inc
je
push
(bad)
(bad)
call
push
cmps
sbb
repz
test
sub
rcl
stos
es
jo
jns
or
fcom
jl
and
out
adc
jne
out
ret
nop
pop
inc
dec
lods
mov
mov
push
sub
mov
push
into
mov
pop
inc
mov
cli
cmp
cmp
or
xlat
pop
cmp
or
jp
or
and
push
jbe
(bad)
mov
adc
and
mov
dec
jecxz
cmc
and
xchg
aam
add
jae
xor
(bad)
dec
pop
inc
ins
fst
sbb
xor
xor
out
sub
adc
push
jecxz
add
pop
lahf
adc
cmp
inc
mov
cmp
ror
outs
or
jl
cmp
xor
and
dec
data16
dec
mov
cmc
adc
retf
xchg
test
adc
pop
sbb
mov
inc
jo
sub
daa
ins
mov
(bad)
shl
loopne
add
js
ret
aam
je
scas
xor
dec
xchg
mov
sub
xchg
cmps
sti
outs
js
xchg
test
mov
loopne
mov
cli
stc
mov
out
inc
test
aas
ret
sub
xor
sbb
sub
xchg
pop
jno
push
fst
or
inc
neg
xor
inc
das
xchg
sub
xchg
ror
pop
stos
pop
lock
xor
pusha
sar
enter
fwait
imul
mov
sub
pushf
ds
jmp
pop
xchg
push
sub
push
and
and
adc
test
cmps
or
adc
fimul
add
cmp
or
xor
lea
and
sub
and
xchg
pop
sbb
cmps
int3
xchg
icebp
or
call
cmps
cmp
movs
inc
mov
adc
pop
jb
in
std
xchg
or
test
out
icebp
das
not
dec
aad
mov
sbb
jp
or
push
rcl
push
adc
enter
mov
movs
jmp
out
js
and
adc
or
test
add
int
ret
jne
mov
mov
jb
fwait
test
test
test
aas
outs
sub
jns
and
cmc
xor
dec
adc
mov
in
push
and
push
mov
cli
push
xchg
(bad)
es
mov
mov
test
push
mov
popf
out
mov
iret
neg
aad
punpckhwd
(bad)
pop
pop
in
push
mov
jnp
pop
jnp
mov
bound
jmp
imul
stc
out
scas
pop
out
div
cmps
sub
jp
add
lahf
pop
adc
mov
xchg
(bad)
cmc
jns
outs
ret
(bad)
das
test
xor
mov
clc
bound
or
dec
mov
iret
mov
repnz
jbe
or
sbb
nop
cmp
into
nop
jo
cs
and
cmp
xor
push
adc
int3
fs
(bad)
loopne
stc
push
dec
add
stos
mov
popf
add
rol
mov
mov
aam
jae
jns
sbb
push
hlt
out
jg
gs
fnstenv
mov
stos
movs
adc
sbb
dec
inc
call
pop
mov
mov
dec
movs
cld
push
adc
data16
mov
test
push
retw
lahf
daa
dec
mov
xchg
sub
jne
fsubr
in
push
or
fst
dec
shl
cmp
cs
outs
inc
leave
xor
loopne
inc
sbb
(bad)
(bad)
out
ins
xor
adc
loope
fdiv
inc
sub
fcom
mov
sbb
xchg
push
add
inc
inc
jge
test
(bad)
in
mov
mov
cmps
iret
pushf
dec
dec
jbe
(bad)
dec
sub
sbb
movlps
fsub
arpl
fbstp
adc
test
scas
or
sbb
cmps
cmp
or
dec
and
inc
add
mov
cld
push
mov
pop
xchg
xor
data16
std
sbb
lods
into
sbb
repz
fisub
jo
inc
outs
inc
(bad)
stos
repnz
jge
(bad)
mov
pushf
scas
mov
test
ds
mov
test
repz
mov
mov
mov
cmp
scas
mov
fwait
jecxz
mov
mov
mov
scas
sti
scas
loopne
iret
or
inc
sbb
in
adc
(bad)
stc
daa
push
mov
call
in
(bad)
call
mov
out
rcr
pop
dec
aad
jbe
cmp
loop
mov
add
int
xchg
sub
xor
icebp
add
adc
mov
cmp
sub
cmps
retf
imul
aad
jnp
xchg
sub
xor
in
mov
mov
dec
nop
jns
push
dec
cmp
xchg
aad
clc
popa
inc
xchg
jbe
xor
repnz
sub
in
push
sub
push
into
or
std
push
repz
fdivr
mov
cmp
push
dec
sub
xchg
daa
sti
nop
aas
retf
movs
inc
jecxz
leave
mov
xchg
lock
enter
mov
pop
adc
in
xor
dec
fs
call
fist
mov
fcom
loop
aas
(bad)
xchg
sub
pop
jg
sahf
dec
fisub
fild
jns
xor
inc
ja
outs
popa
xor
rcl
sbb
fist
push
push
jb
xchg
outs
pop
test
retf
cdq
push
or
(bad)
jae
imul
jle
fcomip
push
cmp
fs
mov
cs
stos
jb
adc
cmp
sub
loop
mov
or
pop
cwde
and
retf
add
jno
lahf
push
and
or
fcomp
jle
jg
sub
fscale
fisub
push
mov
dec
dec
cmp
sub
leave
sub
cmp
cmp
mov
data16
into
(bad)
sbb
mov
or
pusha
pop
out
sbb
and
cli
xchg
jbe
pop
xchg
xchg
ret
rcl
out
call
or
cmp
les
mov
lds
repz
xor
jmp
out
mov
cmp
loopne
test
xor
test
dec
add
outs
mov
(bad)
icebp
and
test
mov
cli
push
xchg
jno
scas
rcl
int3
outs
mov
test
int
outs
xor
sbb
push
sbb
out
pop
push
sub
inc
pop
int
test
shr
push
inc
out
sub
push
dec
jp
popa
int
fucomip
inc
fstp
pop
mov
lds
push
ror
mov
in
dec
test
loopne
xchg
mov
ret
addr16
out
loopne
std
ret
jo
push
sbb
pop
dec
sbb
mov
mov
ins
sub
pop
scas
test
xchg
jae
sub
sbb
test
ret
cmps
jb
pop
push
cmp
xor
(bad)
hlt
rcl
(bad)
bound
xchg
xor
inc
mov
xor
xor
(bad)
int3
sbb
hlt
ffreep
xor
loopne
xor
test
hlt
sbb
stos
mov
adc
loop
sti
jmp
shr
sbb
inc
ds
into
dec
xchg
ss
add
fsub
cmps
pop
leave
and
(bad)
into
nop
(bad)
push
inc
sub
sar
add
das
nop
push
add
mov
pop
retf
jno
outs
(bad)
or
nop
ror
mov
(bad)
jo
movs
mov
not
clc
jae
fcomp
pop
lods
cld
je
mov
jp
sbb
fisubr
or
sbb
ins
mov
or
pop
add
fdivrp
mov
xchg
pushf
fs
ins
pushf
lods
sar
jmp
xchg
xchg
jge
in
nop
rcr
fisttp
aam
xchg
or
and
pop
mov
mov
fsub
ins
mov
and
rol
test
xor
ret
sbb
and
pop
inc
out
xor
pusha
out
fisttp
sub
push
pop
xchg
jb
repz
xor
cmp
test
(bad)
mov
pop
lods
cmps
cwde
inc
fadd
imul
int3
mov
inc
add
sub
and
push
sub
xchg
sahf
dec
lahf
add
(bad)
imul
in
sub
mov
das
mov
cmp
push
or
ror
cmps
mov
fwait
add
std
out
and
xchg
in
sbb
ret
cmp
jno
dec
loope
and
into
jo
mov
mov
sar
mov
int3
xchg
leave
in
or
jle
js
mov
popa
push
sar
jle
xchg
jae
sbb
in
js
pop
fstp
out
adc
pop
jbe
sbb
mov
dec
add
mov
dec
xchg
daa
call
call
or
push
xor
sub
xchg
cmp
fnstsw
mov
imul
stos
xchg
hlt
mov
les
cld
test
and
cmps
inc
push
stos
lahf
bound
fwait
data16
stos
xlat
fistp
xor
push
pop
lds
cdq
daa
mov
mov
jge
or
push
sbb
fnstenv
bound
sbb
lods
jnp
out
adc
add
jg
lea
adc
je
push
aaa
inc
aaa
push
enter
call
xor
or
jmp
loop
retf
retf
adc
adc
rol
dec
loope
cwde
xlat
test
add
mov
cli
jbe
test
xchg
mov
mov
adc
mov
or
je
adc
xor
popf
lds
push
cmp
das
mov
cli
pop
jmp
aas
dec
out
adc
push
push
xchg
(bad)
pop
adc
jno
and
jg
pop
jge
xchg
fistp
imul
lds
cmp
std
or
lea
shl
mov
jmp
add
into
loop
adc
jg
loop
mov
rcl
cmps
addr16
(bad)
sbb
fcmovnu
mov
add
fmul
cmps
pop
sub
inc
jb
in
push
aad
popa
jne
jg
sahf
mov
cmp
out
sbb
out
cwde
push
adc
pusha
push
int3
jb
push
cmp
retf
ds
or
aaa
retf
mov
aam
aam
inc
sbb
sbb
stos
outs
adc
test
int
lds
or
inc
popf
test
test
cmp
inc
mov
(bad)
dec
mov
sahf
sub
mov
test
cmp
jbe
imul
in
dec
cli
jne
mov
(bad)
mov
xchg
into
dec
in
repnz
xchg
aaa
ret
in
ficomp
mov
dec
stos
xchg
xor
bound
retf
push
adc
pop
stos
scas
inc
mov
or
pusha
or
scas
jno
xor
scas
inc
mov
in
add
sbb
xlat
call
lock
dec
lods
jns
mov
xchg
xchg
loope
fcom
jmp
mov
or
sbb
out
mov
call
popf
movs
(bad)
mov
mov
ret
out
jae
jecxz
xchg
sti
sbb
shl
or
cmps
daa
mov
inc
cmp
(bad)
outs
xlat
pop
dec
jb
mov
in
mov
retf
call
popf
xor
xchg
or
jbe
lods
mov
cli
push
inc
push
jb
test
adc
mov
adc
or
fldcw
popa
adc
adc
stos
scas
shl
test
mov
mov
std
xchg
loopne
xchg
lods
cmps
xchg
arpl
ins
(bad)
cli
push
rcr
pushf
test
jne
cmp
fnsave
xchg
setge
adc
xor
mov
and
or
or
sar
sahf
dec
push
mov
movs
mov
inc
out
and
addr16
fs
sub
jmp
pop
shl
sub
cmp
pop
sbb
xor
int
scas
inc
push
xchg
ja
mov
stos
xchg
push
lahf
mov
xchg
pop
fbld
enter
jmp
cmp
dec
inc
jl
mov
test
in
mov
pusha
adc
leave
mov
pop
mov
sub
jp
test
or
imul
mov
or
in
es
into
or
mul
aaa
dec
repz
xlat
and
cmps
movs
call
cmp
lods
adc
jl
loop
cmp
fdiv
gs
aas
adc
stc
dec
push
scas
js
movs
cs
jns
lahf
dec
mov
std
sbb
dec
pop
lods
jge
sbb
das
repz
push
dec
xchg
adc
enter
fwait
mov
xor
std
sbb
sbb
cmc
and
xchg
into
fnstsw
test
popa
fs
shl
out
mov
sbb
cmp
pop
mov
scas
adc
sbb
in
int
gs
inc
adc
add
xchg
mov
in
xor
cli
ja
ret
inc
(bad)
into
aas
xchg
repz
push
and
repz
push
jl
mov
push
test
jge
mov
adc
pop
cmp
lods
sbb
xor
and
mov
fistp
xchg
adc
out
fstp
mov
movs
(bad)
scas
mov
xchg
loopne
or
fisubr
mul
mov
or
push
ret
neg
and
fcomip
aad
push
movs
retf
scas
test
xchg
mov
retf
nop
aam
mov
lods
mov
sbb
push
push
rcl
and
fimul
movs
add
jl
add
sub
mov
shl
rcr
jecxz
inc
shl
xchg
cs
cmp
jg
(bad)
out
inc
(bad)
sub
mov
pop
repnz
pop
dec
ffree
xor
sub
pop
xchg
mov
mov
cmp
movs
cmp
scas
push
inc
aas
or
das
xchg
aaa
jmp
mov
dec
inc
mov
sbb
not
jmp
adc
or
jns
mov
mov
repnz
call
test
xor
mov
sti
and
and
enter
(bad)
js
bound
dec
enter
add
jl
ins
(bad)
jno
repnz
pop
mov
in
sbb
push
frstor
jnp
test
mov
repz
outs
xchg
mov
es
ret
movs
(bad)
sub
(bad)
shr
mov
xor
fisttp
(bad)
push
(bad)
fcomp
nop
or
and
xor
shl
adc
lods
mov
inc
fadd
cmp
fmul
push
fadd
cs
pop
mov
leave
xor
mov
pop
mov
loop
jae
xchg
imul
xchg
xchg
mov
jmp
or
dec
push
inc
cmc
shr
cs
jnp
sar
test
jne
or
sub
stc
sti
pusha
push
aad
imul
xor
movs
push
outs
cmp
cmp
mov
sbb
shl
inc
cwde
js
loop
lock
add
and
mov
mov
mov
fwait
xchg
mov
rol
ror
(bad)
loopne
pop
icebp
dec
add
mov
xor
jnp
or
pop
xchg
jmp
or
jae
in
sar
fldcw
repnz
sti
adc
fs
test
mov
fild
in
cmp
xchg
sbb
pop
outs
dec
pop
std
popa
in
popa
inc
sbb
mov
dec
and
xchg
dec
aas
scas
outs
fst
popf
sub
mov
xor
pop
xchg
xor
inc
pop
push
dec
xlat
enter
mov
scas
adc
sbb
mov
jbe
jp
out
or
sbb
stos
sahf
add
add
jl
mov
jge
jmp
sbb
shr
mov
loope
fldcw
jno
push
inc
call
xor
ss
(bad)
mov
and
sub
adc
cdq
js
sbb
in
stos
mov
call
shl
mov
lods
inc
add
xor
mov
inc
xlat
scas
aad
add
mov
mov
jmp
mov
sub
dec
mov
sbb
clc
add
or
outs
and
jmp
ja
xor
xchg
pop
cli
sbb
ret
mov
(bad)
mov
mul
stos
adc
sub
xchg
js
or
jnp
inc
mov
dec
and
lahf
jne
jmp
aas
add
stc
pushf
push
daa
int
(bad)
aad
neg
push
mov
cli
cmp
imul
mov
xchg
jmp
push
sahf
mov
cmp
jbe
inc
mov
dec
ret
sub
mov
xlat
sbb
outs
add
mov
or
cmp
push
imul
scas
xchg
arpl
(bad)
adc
sub
cmp
movups
inc
push
jge
inc
mov
add
mov
enter
lock
jnp
xchg
sahf
hlt
or
jg
xchg
push
test
xor
push
mov
inc
popf
dec
stc
or
jecxz
(bad)
adc
xchg
mov
in
dec
sub
fnstenv
or
push
(bad)
dec
mov
stos
imul
aad
sbb
or
xchg
adc
sti
sbb
popa
push
xchg
enter
daa
fstp
xlat
xor
retf
in
cdq
or
popa
or
std
cmp
std
mov
xchg
lahf
scas
cmp
xor
dec
cmp
fadd
add
mov
les
mov
(bad)
jge
mov
and
out
loop
push
adc
push
test
adc
lea
outs
or
retf
adc
mov
mov
cmp
loopne
hlt
out
div
mov
sbb
int3
cmp
and
jno
add
mov
(bad)
fsubr
adc
sbb
mov
xchg
dec
cmps
jno
jnp
and
hlt
iret
(bad)
adc
ds
jle
in
mov
jle
pop
lahf
dec
in
out
xor
(bad)
outs
or
sub
out
inc
cmp
lods
fmul
hlt
hlt
mov
xchg
into
add
xchg
loop
push
push
scas
and
dec
sbb
fsubr
in
iret
mov
scas
or
ror
cmp
add
jno
pop
ja
ins
mov
aaa
dec
lea
adc
ds
ins
or
inc
cld
outs
pop
jbe
cmps
stos
test
ds
ins
adc
cmc
and
or
clc
imul
fwait
xor
sti
mov
ds
lds
adc
add
stc
or
xor
out
arpl
mov
lds
add
xchg
or
cmp
adc
sbb
pop
inc
push
rcl
mov
arpl
in
mov
jl
push
dec
addr16
sbb
test
shl
ror
cmps
add
and
ret
mov
inc
jns
inc
sahf
lods
outs
or
mov
and
mov
repnz
push
arpl
jge
xor
(bad)
clc
sar
mov
out
pop
jecxz
popa
cmp
inc
ret
xor
repz
xchg
aam
push
mov
xchg
(bad)
and
inc
mov
add
rcl
ins
adc
arpl
jnp
into
inc
jo
pop
icebp
nop
icebp
test
jle
lea
mov
mov
fistp
jp
test
add
mov
dec
outs
shl
dec
(bad)
jg
xchg
mov
cmp
mov
scas
dec
and
adc
add
pushf
push
ja
addr16
iret
gs
mov
cdq
hlt
aam
ret
(bad)
mov
pop
jmp
sbb
call
mov
fild
sahf
dec
push
aam
daa
sahf
mov
xchg
test
adc
mov
xchg
xor
ret
add
outs
adc
pop
sub
in
stos
shl
or
ret
sbb
out
aas
jg
fidivr
sbb
cmp
cmp
push
stos
retf
out
retf
pop
ins
iret
sub
pusha
icebp
in
test
cmps
push
mov
je
lahf
mov
push
dec
ds
neg
push
(bad)
mov
mov
lock
sahf
sahf
out
mov
std
pop
adc
sub
push
cmp
lahf
mov
imul
fwait
jg
dec
pop
leave
addr16
xchg
mov
in
or
stos
or
popa
fcom
push
in
fmul
in
sbb
xchg
inc
and
mov
inc
xchg
data16
xor
loopne
imul
jge
cwde
out
adc
retf
and
xor
bound
mov
mov
inc
movs
sbb
not
inc
sbb
imul
data16
hlt
inc
sub
mov
mov
mov
xor
icebp
xor
cld
lods
add
jne
inc
mov
(bad)
or
sbb
inc
movs
push
mov
cmp
sti
xchg
xor
inc
cmp
ror
std
xor
retf
mov
sub
mov
ret
ss
pushf
xor
push
pop
out
das
jg
mov
gs
push
xor
cmp
icebp
rcl
cmps
ret
jae
sbb
sbb
dec
(bad)
ins
outs
dec
popf
inc
or
call
cmps
xor
cdq
cld
xor
jp
pop
sbb
add
xor
mov
mov
pop
add
pop
jnp
movs
adc
add
push
pusha
inc
pop
test
xchg
iret
and
into
mov
icebp
sbb
mov
fimul
inc
into
push
push
inc
lods
fwait
not
sbb
mov
xchg
retf
sbb
or
pop
pop
movs
add
in
xor
jecxz
out
push
mov
adc
or
cli
ins
sti
inc
push
push
mov
pusha
cmp
sub
sub
mov
push
xchg
in
xlat
jo
add
popa
push
adc
pop
cmps
mov
fist
sub
adc
xor
out
mov
sub
pop
(bad)
cli
push
inc
or
mov
push
push
dec
lea
rcr
call
cwde
hlt
add
pushf
in
add
mov
xchg
inc
bound
push
mov
scas
loopne
jns
aas
jge
jge
jo
pushf
adc
aaa
dec
push
sbb
cmp
(bad)
cld
xchg
mov
jg
push
and
outs
xchg
sahf
fsub
cmp
movs
and
jmp
jl
sub
aaa
pop
popf
fld
rcl
repnz
inc
not
faddp
adc
out
mov
call
sbb
adc
int3
xchg
push
mov
mov
cld
popa
adc
xor
daa
sbb
xor
jae
fadd
inc
push
or
out
jae
ss
add
stc
lods
jno
fsub
mov
inc
mov
movs
cmp
mov
sbb
int
mov
mov
xor
pusha
int
dec
xor
enter
mul
push
nop
std
call
inc
rcr
push
or
in
pop
push
clc
push
call
bound
jns
jp
mov
xchg
adc
sbb
jae
jmp
add
xchg
lods
adc
data16
sar
push
cli
cli
pop
sub
rcl
sbb
lea
(bad)
(bad)
aas
jecxz
(bad)
in
adc
xchg
xor
adc
jge
pop
mov
mul
jo
pop
xor
mov
mov
fyl2xp1
xchg
xor
aaa
fisttp
adc
shl
nop
pop
inc
push
add
sub
sbb
pop
lds
xor
jge
xor
scas
cld
pop
ret
mov
(bad)
rol
lock
imul
xchg
fimul
loopne
adc
sbb
dec
dec
sub
jmp
push
jb
stos
xor
sub
(bad)
call
aam
adc
int
je
xchg
inc
paddusw
sbb
rol
xor
adc
xor
mov
aaa
push
push
push
inc
mov
cli
int
cmp
push
js
(bad)
rcl
ins
push
mov
jno
cmp
jge
ds
pusha
test
sbb
push
jmp
mov
dec
xor
jo
fldcw
cmp
inc
mov
add
dec
retf
(bad)
in
ror
in
cmps
mov
mov
push
lds
mov
and
mov
loopne
les
sub
pop
call
cmp
cmps
push
iret
pop
fwait
mov
inc
push
xor
rol
jne
test
sbb
cld
mov
jne
or
test
push
inc
cs
test
push
push
xor
xor
push
shl
scas
cmp
cmp
outs
std
cmp
add
adc
mov
movs
sub
pop
int3
jne
sbb
xchg
or
jg
sub
shr
fadd
mov
pop
retf
adc
clc
lods
aad
mov
cli
sbb
out
add
dec
sbb
clc
jo
loopne
push
jbe
xor
jns
es
mov
in
inc
jae
mov
cmp
push
xchg
xchg
in
scas
sbb
repnz
call
dec
lods
add
xlat
lahf
fisubr
sbb
xor
pushf
repnz
jnp
and
aaa
loopne
leave
sbb
retf
mov
aam
or
pop
push
xchg
das
and
cmps
push
dec
(bad)
or
and
lods
aas
pushf
mov
std
outs
sahf
mov
lods
xor
(bad)
dec
dec
ja
push
cmp
or
xchg
arpl
xchg
icebp
xchg
out
ins
(bad)
stos
xor
sub
rcl
pop
ret
fld
sbb
or
sahf
mov
test
and
jbe
mov
test
xchg
movs
or
mov
arpl
or
adc
cwde
lock
mov
hlt
pop
aas
jl
dec
popf
push
push
cmp
js
test
sbb
sub
push
jne
repnz
dec
(bad)
cli
outs
mov
jecxz
pop
and
jg
test
xchg
push
add
ret
retf
mov
add
push
dec
out
mov
cmp
mov
xlat
cmc
add
repnz
jb
call
xchg
mov
and
cwde
ror
dec
xchg
or
xchg
(bad)
dec
mov
xor
push
dec
sbb
adc
sti
sahf
adc
pop
stos
popa
jmp
leave
icebp
lahf
jmp
mov
xchg
jne
cld
outs
test
out
mov
leave
in
mov
je
push
pop
or
pop
push
push
mov
(bad)
rcl
xchg
add
sub
fs
cmps
jbe
shl
test
push
sar
iret
movs
popf
jo
cmps
xor
repz
dec
push
clc
shl
ss
in
rol
jmp
push
mov
cmc
fidivr
mov
leave
mov
mov
jp
cmp
scas
xor
sub
dec
pop
mov
into
mov
les
dec
(bad)
je
push
cwde
sub
push
mov
imul
adc
push
add
jle
or
pusha
arpl
out
in
cmp
clc
aam
popa
rol
ret
arpl
xchg
push
or
and
or
iret
mov
lods
jmp
mov
fld
mov
repnz
idiv
mov
fcmovnu
adc
adc
inc
or
sub
jp
and
pop
jo
nop
cwde
sbb
cdq
mov
fdivr
sbb
aas
xlat
stos
push
retf
cdq
aaa
inc
daa
pop
scas
imul
enter
dec
ins
inc
jb
(bad)
clc
cmp
pop
mov
push
add
scas
les
fcomp
es
push
test
les
popa
cld
and
sub
mov
ret
or
loopne
sub
cld
mov
fsubr
inc
sbb
cmps
scas
or
ror
mov
out
test
jne
ins
repz
pop
in
xchg
pop
in
and
mov
test
mov
mov
cli
fistp
mov
dec
cmp
cmp
mov
mov
fcmovu
sub
popa
mov
mov
scas
(bad)
(bad)
push
cld
out
sbb
add
shr
and
leave
mov
loopne
push
mov
rcl
pop
mov
out
lahf
mov
rdtsc
(bad)
icebp
add
mov
dec
pop
xchg
xchg
scas
repz
jecxz
cmovae
sbb
pop
shl
pop
shl
aaa
dec
fimul
jb
inc
sub
xor
pop
cmp
sub
mov
test
and
dec
dec
jmp
shr
xor
call
pusha
push
mov
rol
inc
out
arpl
jnp
add
cld
push
inc
call
js
sahf
adc
xlat
sahf
clc
mov
jmp
inc
rol
push
addr16
out
(bad)
adc
xor
jns
pushf
daa
or
mov
popf
and
retf
scas
mov
mov
cmp
out
xor
pop
xor
jne
scas
loope
push
dec
pop
mov
pop
sbb
stc
in
pop
cmp
cld
out
mov
pop
or
and
jecxz
scas
push
push
test
ds
or
or
or
jne
repnz
in
in
lock
iret
mov
outs
imul
cmp
adc
aas
and
sub
ja
xchg
leave
in
adc
or
push
push
stos
out
fdiv
cmc
out
frstor
fwait
fwait
out
push
xchg
pop
in
arpl
or
xchg
movs
jg
std
mov
xor
(bad)
pop
jl
test
and
and
adc
ins
cmps
or
push
shl
fnstenv
mov
popa
fwait
dec
jmp
aad
fstp
lahf
jmp
mov
sub
add
jg
push
mov
imul
jae
push
hlt
xchg
bound
jmp
inc
push
and
inc
leave
inc
jle
xor
(bad)
adc
jnp
mov
dec
push
cmp
jl
xor
(bad)
cmp
pop
xor
adc
sar
add
pusha
(bad)
dec
test
cmps
xchg
imul
push
push
(bad)
push
dec
mov
jmp
in
pop
push
aaa
data16
outs
std
movs
mov
dec
push
hlt
or
dec
sbb
neg
mov
test
mov
xor
retf
in
sbb
add
fld
adc
or
xchg
mov
scas
xchg
sbb
push
lods
shl
sbb
xor
sbb
jno
lods
mov
and
loopne
inc
pop
pushf
jl
test
push
aas
shr
sub
dec
addr16
aad
fld
ss
out
jmp
or
nop
daa
push
nop
sbb
sbb
add
lds
test
lock
int3
test
movs
mov
loopne
xchg
in
push
push
pop
into
add
push
scas
mov
dec
in
sub
jmp
nop
dec
mov
pop
jae
mov
jbe
or
in
ret
cdq
push
daa
(bad)
int
mov
sahf
adc
fisubr
jmp
mov
dec
outs
and
and
enter
div
mov
pop
std
jge
std
das
test
xlat
push
mov
cmp
test
loope
or
jns
div
inc
dec
leave
mov
mov
and
shr
push
in
sar
pop
sub
adc
or
sbb
ss
daa
loope
sti
mov
div
test
idiv
cmp
mov
(bad)
xor
(bad)
push
loope
es
add
and
and
(bad)
cwde
stc
bound
adc
push
sub
cli
stos
mov
int
inc
and
out
popa
jb
in
inc
push
movs
xlat
cmp
lock
xor
not
or
cmp
dec
mov
or
and
and
push
mov
dec
add
push
dec
iret
lds
pop
or
push
inc
xchg
sbb
hlt
and
cli
int
test
ret
mov
fisub
or
xchg
pop
mov
cmovo
sub
ror
(bad)
cdq
sub
icebp
mov
cmp
psrld
dec
or
cmp
std
push
mov
or
fist
mov
movs
imul
rcr
and
test
mov
mov
and
cli
pop
in
ss
movs
outs
inc
fbld
mov
fsub
cmp
test
fucomp
mov
(bad)
aas
retf
loop
repz
arpl
adc
das
adc
daa
jg
mov
loop
arpl
or
enter
xor
icebp
jge
inc
ret
push
push
call
mov
inc
inc
dec
pop
stos
cmc
sti
adc
ins
push
je
sub
ins
push
adc
fs
cmp
push
jne
push
cmps
dec
push
adc
inc
hlt
pop
iret
lds
out
push
mov
jae
int3
sahf
mov
pop
sbb
xchg
outs
fxch
call
xchg
outs
jnp
(bad)
in
or
inc
inc
add
icebp
in
ret
sbb
xchg
xchg
lock
or
sbb
adc
xor
pop
mov
out
mov
fwait
mov
retf
js
imul
sbb
scas
fist
neg
cmc
cmp
push
aaa
int3
adc
jnp
xor
mov
arpl
mov
dec
cmp
imul
fcomp
movs
xchg
icebp
pop
out
dec
add
imul
jg
jbe
inc
jne
or
jbe
inc
cmp
bound
test
mov
inc
ja
or
stos
lds
cmp
les
js
mov
jbe
jg
mov
jl
mov
sbb
cwde
test
fisttp
pop
out
hlt
in
cdq
jmp
sbb
popf
xchg
and
scas
add
xor
pop
pop
lock
retf
push
xadd
xchg
int
pop
int
fcmovnb
lock
pop
jne
sub
jnp
(bad)
dec
pop
inc
jp
mov
imul
clc
cmp
pop
sbb
add
pop
lahf
les
rcr
popf
retf
lods
stos
inc
dec
fiadd
inc
retw
pop
mov
jp
add
jmp
xchg
mov
test
xlat
sbb
or
pop
jb
rol
not
jno
(bad)
or
pop
xchg
test
stc
ds
(bad)
adc
loope
aaa
inc
outs
mov
hlt
or
cmps
adc
cmp
add
xchg
mov
and
call
mov
pop
jno
and
xchg
into
cmp
dec
push
add
push
jo
retf
adc
xchg
push
ja
mov
mov
mul
ret
(bad)
jle
dec
mov
leave
call
jle
xchg
out
cmp
xlat
in
inc
icebp
pop
pop
jmp
call
inc
popf
xor
sub
xor
pop
jno
cld
sub
jno
dec
jbe
movs
dec
enter
(bad)
jecxz
jns
mov
inc
mov
mov
xchg
push
or
outs
ins
outs
mov
dec
dec
cdq
pushf
lods
or
jg
(bad)
mov
jp
mov
dec
or
inc
adc
pop
jb
push
outs
js
out
dec
lods
push
sbb
pop
mov
mov
ucomiss
inc
mov
stc
shr
movs
(bad)
xchg
movs
inc
and
dec
jnp
loopne
jmp
scas
es
and
repz
jle
test
and
fs
adc
(bad)
dec
jmp
mov
push
dec
in
leave
push
sti
sub
mov
jle
fnsave
aaa
mov
shl
mov
push
ins
test
lods
es
data16
cmp
jbe
mov
and
dec
or
fdiv
imul
fs
out
xchg
mov
jae
inc
(bad)
rcr
xchg
loopne
push
iret
jae
xchg
cmps
and
(bad)
shl
ret
jae
(bad)
xchg
outs
inc
jae
ficom
repz
cmp
jge
pop
pop
jo
enter
in
inc
fwait
sbb
(bad)
fstp
adc
mov
repz
adc
jne
add
inc
cmp
jl
lods
movs
sub
jmp
fwait
adc
(bad)
sbb
add
cmp
inc
addr16
pop
lds
pminub
lock
sbb
xchg
pop
inc
fild
sub
retf
gs
xchg
xlat
inc
repnz
in
sbb
adc
adc
and
call
sbb
mov
leave
or
xchg
stc
lock
inc
inc
mov
lahf
pop
xchg
je
xor
stos
mov
mov
cmc
cli
fs
or
mov
dec
adc
dec
mov
and
clc
and
jge
ror
mov
ins
sbb
pop
push
push
adc
fwait
sbb
mov
fs
pop
pushf
mov
push
ins
pop
daa
inc
pop
or
adc
leave
mov
push
scas
gs
retf
push
adc
rol
xchg
jecxz
dec
and
xchg
icebp
pop
xor
pop
adc
inc
push
retf
(bad)
pop
(bad)
lea
cmp
and
nop
in
sbb
mov
movs
add
push
and
add
sti
pop
loope
add
jle
mov
loopne
scas
in
add
ins
or
add
cmp
popf
dec
jmp
pusha
in
in
sub
dec
push
adc
mov
cwde
cmp
push
outs
pop
rcr
outs
or
push
outs
pop
sbb
loope
mov
jge
mov
(bad)
popa
inc
xchg
std
(bad)
push
popa
dec
lods
push
hlt
in
adc
xor
adc
(bad)
call
or
dec
popf
mov
sub
test
inc
mov
xor
js
mov
pop
inc
pop
pop
and
xchg
sub
xor
lock
mov
sub
pop
dec
jmp
pusha
jge
xchg
and
std
jnp
add
mov
in
scas
xor
xchg
adc
sbb
xor
dec
pop
ds
sub
iret
cmp
(bad)
cmp
inc
test
fdivr
into
arpl
imul
inc
pop
loope
loope
sbb
(bad)
sbb
repnz
mov
dec
ja
jmp
jne
dec
(bad)
push
stos
daa
dec
push
jecxz
repnz
mov
in
xor
fidiv
sub
mov
call
loopne
movs
call
dec
mov
mov
loopne
sbb
jmp
popf
dec
aaa
pop
xor
clc
xchg
adc
mov
lds
push
test
ins
dec
cld
loope
rcr
in
push
scas
test
data16
pop
gs
add
mov
inc
mov
adc
pusha
pop
fsub
rcl
jb
push
mov
std
scas
push
push
push
mov
test
mov
push
retf
out
(bad)
popa
retf
xor
loopne
cmp
pop
repnz
repz
jb
adc
dec
int3
add
sbb
push
out
or
mov
ret
(bad)
(bad)
retf
adc
sbb
aam
sbb
pop
in
out
mov
add
cmps
int3
and
push
add
aad
imul
js
ins
mov
inc
push
lock
aaa
xor
(bad)
pusha
and
out
mov
pop
loope
clc
je
aam
xor
int
mov
popf
mov
mov
in
nop
test
push
and
fist
and
fdivr
scas
in
pop
adc
arpl
pop
pop
imul
mov
pop
dec
addr16
push
fwait
or
sub
pop
pop
ins
ja
jns
into
gs
iret
mov
cmp
aad
ss
ret
mov
ja
sub
clc
ins
ret
shr
pop
xor
mov
pop
repz
pop
enter
jmp
sub
rcl
xor
adc
ror
mov
in
push
stos
fcomip
jno
sub
mov
pop
stos
or
jmp
mov
jp
mov
pop
add
sub
out
ret
inc
push
adc
dec
dec
in
and
push
push
push
ins
sub
or
lods
popa
int
cmp
mov
inc
mov
cwde
sbb
and
mov
jmp
mov
adc
inc
push
test
outs
adc
jmp
pop
push
enter
daa
mov
mov
imul
fdivr
scas
add
push
fld
mov
xor
(bad)
bnd
and
(bad)
outs
and
loop
test
pop
add
adc
push
cld
sub
cwde
dec
enter
adc
jnp
inc
test
cdq
mov
inc
(bad)
jle
(bad)
sub
imul
mov
loope
fs
outs
lods
out
cmp
push
or
les
and
xchg
mov
jns
pop
fadd
inc
das
push
add
adc
push
cdq
addr16
jl
push
rcr
sahf
outs
fs
adc
(bad)
lods
daa
jg
lods
mov
sahf
cdq
add
mov
sahf
bound
cld
imul
jo
es
ins
push
js
pop
loopne
push
jns
mov
icebp
cmp
test
lahf
inc
call
adc
pop
lahf
fidiv
pop
sub
ret
(bad)
adc
fimul
mov
and
out
fidivr
add
cld
arpl
jbe
into
adc
inc
sub
push
dec
adc
icebp
int3
sub
ficom
mov
daa
loopne
out
retf
shr
ja
retf
cmp
arpl
pop
retf
add
test
push
adc
repnz
hlt
in
mov
jl
fnstenv
mov
arpl
fwait
jmp
dec
pop
sub
(bad)
adc
call
arpl
mov
sub
loopne
sbb
and
inc
inc
sub
pop
dec
mov
and
pop
jecxz
xchg
sbb
lock
arpl
rcl
jge
(bad)
sti
fcom
xor
xor
in
aaa
sti
out
scas
stos
call
aam
push
addr16
pusha
push
shr
and
xor
sub
popa
leave
pushf
fdivr
sub
out
add
jecxz
jge
inc
push
xor
ins
(bad)
out
jo
outs
xor
and
add
shl
add
lea
mov
adc
je
dec
mov
cmp
cld
push
mov
retf
fldcw
das
lea
push
stos
xor
push
fs
mov
jo
sbb
retf
xor
push
pop
push
retf
xchg
push
mov
xchg
mov
cmps
jle
jnp
jno
popf
mov
ja
add
xor
cmc
add
aaa
cmc
cmps
(bad)
mov
es
retf
movs
dec
es
movs
adc
stc
push
xor
jnp
xor
repnz
loop
jecxz
nop
and
xor
test
xchg
pop
imul
je
fistp
cmp
lahf
sub
dec
rcl
popf
rcl
inc
jmp
clc
pusha
mov
cmp
pop
xchg
pop
lea
stos
psubd
push
jne
xchg
ins
xchg
sahf
idiv
test
bound
aaa
cmp
test
dec
dec
push
lock
dec
scas
scas
loop
cmp
sti
xor
jmp
lods
pop
push
scas
jne
cmps
push
and
xchg
mov
fadd
push
jp
jne
(bad)
loope
cmp
xchg
pop
bound
leave
jmp
popa
push
xor
mov
inc
mov
mov
and
jne
xor
pop
jne
into
inc
add
jae
xchg
mov
jns
js
push
lahf
pop
mov
(bad)
das
mov
icebp
jmp
popa
inc
shr
nop
sub
out
mov
cs
xor
pop
retf
cli
push
and
push
ins
jb
out
pop
and
stos
mov
pop
pop
ss
push
pop
pop
cmp
inc
inc
adc
imul
cld
adc
mov
(bad)
scas
xchg
push
pop
repnz
inc
out
cmps
dec
push
and
fnstsw
and
imul
std
xchg
dec
scas
aam
ins
push
scas
adc
cmp
push
aad
push
jb
pushf
and
loopne
test
fsin
cdq
sub
or
add
push
xchg
loopne
retf
lods
cld
shr
jo
loop
cmp
cdq
iret
in
xor
mov
xchg
jg
retf
jl
dec
lock
mov
xchg
test
push
lds
lods
inc
imul
std
xor
je
adc
icebp
outs
push
pushf
daa
aas
xlat
into
jg
dec
ja
adc
adc
std
push
cmp
cmps
cmp
inc
xchg
ret
into
in
sub
cmp
out
call
sbb
cmps
shl
hlt
jb
cmp
(bad)
mov
sub
bound
aam
and
jp
add
add
dec
cmp
ins
imul
push
loopne
mov
jb
outs
ins
cdq
mov
(bad)
cld
jecxz
rcl
sbb
xor
mov
loop
ror
sub
add
inc
mov
hlt
cmp
or
popa
push
dec
(bad)
(bad)
xor
mov
xchg
pop
shr
in
pop
sbb
outs
out
aas
mov
(bad)
out
or
retf
push
mov
aas
pusha
adc
in
fiadd
xor
int3
sub
aam
mul
rol
dec
sub
xchg
cdq
push
movsx
shl
xchg
test
ret
xor
shr
call
mov
jmp
ins
mov
adc
xor
add
mov
jle
mov
sbb
add
mov
int3
rcr
or
hlt
pusha
add
jnp
enter
mov
dec
sub
sbb
adc
in
into
inc
test
fmul
mov
repz
mov
rcr
push
fild
dec
out
add
pop
shr
and
outs
cld
cmp
jmp
pop
fbstp
push
jbe
cmp
pop
lds
inc
and
(bad)
fstp
push
cld
push
adc
lods
fwait
and
inc
loopne
jg
nop
and
cmp
inc
xchg
and
push
scas
popf
mov
fisub
ss
bound
mov
outs
cld
out
(bad)
addr16
mov
shr
fwait
dec
cmp
add
out
test
and
add
cli
sbb
aad
sub
ret
push
lods
call
jle
icebp
mov
inc
imul
mov
fld
xor
jl
mov
out
(bad)
mov
iret
in
cmp
vcvtps2dq
mov
xchg
imul
push
push
inc
sbb
bound
clc
inc
pop
xchg
mov
xor
loopne
xor
loope
js
cmp
inc
and
adc
es
adc
cmp
sub
daa
mov
adc
stos
dec
test
add
mov
call
loopne
adc
dec
cli
add
add
stc
lahf
mov
xlat
sub
and
retf
jo
mov
sahf
sbb
xor
xchg
sub
cs
fbstp
and
ss
add
add
mov
shl
in
xchg
ds
mov
mov
mov
add
ds
popf
retf
adc
out
mov
shr
loop
out
dec
aam
mov
into
pop
aam
imul
out
stc
push
aad
hlt
push
or
icebp
mov
icebp
aas
aaa
popa
pop
lahf
pop
and
mov
movq
je
push
leave
cmp
push
sub
xor
inc
in
fidivr
ficom
int3
push
loop
xor
fstp
(bad)
jecxz
pop
push
cmp
loop
xor
jl
adc
sbb
and
fbld
pop
fisubr
sub
cmp
les
mov
pop
aad
mov
outs
sub
mov
jb
aad
addr16
mov
or
inc
sbb
or
aaa
nop
ins
jg
test
xchg
outs
sbb
mov
mov
int3
xor
xor
lea
push
mov
(bad)
adc
adc
pop
jne
sub
jecxz
mov
popa
ror
es
mov
into
add
add
aas
mov
jg
cmps
dec
call
push
dec
outs
xchg
inc
int3
dec
sti
xchg
retf
mov
jl
ja
push
iret
mov
xlat
mov
aas
mov
push
xor
ret
daa
cmps
ins
mov
retf
jecxz
mov
cmp
in
in
hlt
xor
and
in
fild
out
jno
(bad)
mov
or
cmps
mov
(bad)
in
push
popf
add
push
mov
fild
and
imul
pop
mov
mov
movs
test
pop
shl
jg
or
leave
dec
push
mov
sahf
lods
push
sbb
sbb
mov
jp
xchg
xchg
adc
mov
xchg
pop
dec
mov
std
pop
mov
ret
or
mov
rol
xor
arpl
retf
or
pop
adc
xor
mov
mov
ins
jmp
add
dec
adc
and
xchg
pop
fld
out
sbb
inc
imul
(bad)
xchg
adc
push
mov
xor
mov
out
pop
out
std
add
adc
pop
sub
and
and
fsubp
addr16
in
ds
idiv
ins
or
inc
adc
jle
call
push
cwde
pop
mov
mov
dec
xchg
inc
mov
sub
into
(bad)
retf
jecxz
call
into
sbb
idiv
int3
xchg
or
popf
mov
inc
jmp
cmp
or
call
dec
pop
xor
fstp
pop
retf
scas
sub
adc
pop
js
test
daa
xor
and
scas
jge
jae
xor
dec
push
push
push
leave
ds
inc
aaa
(bad)
cmp
mov
or
mov
fisubr
loope
sahf
jmp
adc
pop
add
adc
out
(bad)
cmp
test
mov
cwde
xlat
mov
xchg
dec
mov
rcl
out
in
cli
in
jmp
jne
inc
inc
test
leave
jl
push
push
pop
or
adc
clc
dec
dec
in
inc
sti
clc
adc
pop
mov
stos
(bad)
cmp
or
and
mov
popf
or
push
sbb
test
cmps
pop
das
sbb
aam
retf
pop
(bad)
mov
stos
cmc
lods
popa
loope
jmp
or
call
(bad)
cmp
rcl
sub
inc
cmp
pop
xchg
out
xchg
inc
mov
and
nop
call
push
dec
mov
test
cmp
jg
out
xor
mov
dec
fisub
and
add
(bad)
cmp
cs
push
or
mov
pop
mov
fisttp
inc
jp
push
jecxz
and
cmp
mov
fsubr
scas
push
ins
sbb
ds
lock
shl
xor
sub
fist
and
je
ret
xchg
mov
push
out
pushw
aam
push
aas
fnstsw
dec
mov
enter
adc
push
mov
pop
pop
or
std
adc
(bad)
int3
mov
jae
push
scas
jne
jg
adc
retf
pop
scas
shr
fist
mov
xor
pop
ret
mov
ja
daa
or
int3
dec
xor
inc
scas
jo
mov
out
mov
retf
lock
mov
jl
leave
and
aad
rcr
lock
xor
enter
jle
xor
mov
pop
mov
ss
fwait
or
dec
loop
fdivr
sub
mov
add
xor
test
pop
xchg
sbb
ret
mov
aas
sar
cwde
aas
aam
loope
pop
ret
mov
mov
sbb
cli
push
repz
adc
ins
push
out
rcl
and
push
cwde
push
aad
add
outs
and
adc
jge
adc
das
mov
fcmovnb
lock
aam
rol
movs
das
int
xchg
inc
movs
pop
call
outs
out
sub
xchg
(bad)
adc
add
cwde
pop
enter
adc
ret
jne
fdivr
or
mov
(bad)
sbb
mov
mov
push
leave
push
faddp
stos
fwait
icebp
jge
repnz
sahf
ss
add
hlt
mov
rcl
sbb
data16
sbb
and
std
sub
repz
jo
inc
js
scas
cmp
int
scas
sbb
ja
lods
mov
(bad)
push
cmps
add
pop
addr16
xlat
dec
jne
pushf
icebp
imul
or
(bad)
test
cs
adc
cmps
ror
cmc
arpl
jp
call
mov
jo
ret
dec
fild
sub
dec
cmp
sbb
iret
stc
lock
lds
jmp
sub
cmp
mov
nop
sub
xchg
call
repz
jmp
add
or
(bad)
and
out
sbb
out
push
xor
jl
cmp
push
pusha
test
sbb
jne
inc
or
data16
nop
adc
adc
cmp
inc
mov
(bad)
(bad)
shl
lods
ds
and
inc
movs
cwde
fiadd
and
fisubr
ins
int
pop
pop
ja
and
lods
sub
div
imul
int
int
js
sub
mov
dec
pusha
stos
sahf
add
inc
xchg
sub
inc
and
movs
ret
jl
ins
popf
push
dec
or
push
bnd
dec
into
push
mov
int
mov
out
mov
pop
mov
push
and
or
pop
pushf
mov
repnz
xor
in
pusha
into
push
inc
in
push
mov
inc
mov
lahf
and
push
adc
push
pusha
add
dec
mov
adc
imul
cmp
mov
stos
lods
sar
lock
ds
lds
and
sub
repz
idiv
aas
sti
mov
lds
loop
call
je
pop
push
jmp
sbb
dec
mov
dec
ds
lods
pop
(bad)
xchg
xor
movs
and
adc
iret
mov
push
adc
adc
repz
inc
push
cmc
pushf
inc
jae
pop
inc
jge
mov
loopne
mov
rcr
xchg
mov
rcl
dec
jmp
pop
jmp
stc
ja
add
sub
pop
pop
mov
dec
shl
ret
adc
lea
sbb
add
push
std
aam
in
pcmpeqb
imul
mov
psllw
je
bound
imul
inc
loop
pushf
pop
retfw
leave
imul
mov
inc
and
add
cmp
rcr
imul
fdivr
ins
jmp
or
xchg
rcl
(bad)
add
(bad)
stos
retf
rcl
into
std
inc
ror
push
cmp
les
jle
mov
or
or
xor
iret
fs
inc
mov
ja
(bad)
xor
xor
add
in
ds
xor
ror
dec
out
fwait
push
es
cmp
movs
jmp
sbb
pop
ss
out
dec
repz
push
sar
jecxz
out
xchg
hlt
pop
inc
test
or
popa
mov
xlat
jg
cmp
imul
loope
sahf
xor
xor
or
iret
dec
aad
and
xchg
adc
push
ds
inc
pusha
xchg
add
loop
mov
xchg
cmp
push
mov
push
leave
sub
fwait
cmp
dec
adc
mov
xchg
push
sub
mov
scas
xchg
les
cld
je
lods
inc
stos
mov
mov
(bad)
mov
mov
jle
mov
xchg
inc
dec
jno
(bad)
popa
into
test
push
and
aas
lock
out
xchg
jbe
out
(bad)
int3
bound
ja
pop
sbb
(bad)
push
mov
jle
sub
int3
cmc
fstp
fcom
push
or
xchg
and
pushaw
push
(bad)
stos
cmp
add
mov
out
push
and
mov
pop
leave
ror
push
cmp
mov
lds
jo
jge
pop
mov
mov
sub
add
and
sbb
mov
push
adc
cmp
cwde
std
gs
sub
in
mov
ret
cmp
mov
push
cdq
xlat
jge
adc
clc
fistp
push
add
lahf
xchg
call
daa
imul
xor
or
in
fwait
pop
and
lock
cmps
ret
jp
popf
rcr
or
adc
test
(bad)
lods
test
cmc
pop
ret
cmps
mov
cmp
or
adc
fld
retf
xchg
and
mov
sbb
add
je
sub
jecxz
loope
rol
scas
lods
mov
inc
and
and
push
std
dec
clc
test
leave
cmp
pop
sub
mov
dec
dec
nop
sub
push
repnz
(bad)
jbe
lock
das
scas
cwde
gs
cwde
pop
add
dec
clc
jle
xor
loop
(bad)
stc
jns
mov
xchg
jecxz
and
adc
es
mov
jl
sahf
xchg
shl
cmp
xchg
shr
ret
or
test
mov
adc
call
in
xchg
adc
add
mov
cwde
sahf
jae
mov
pmulhuw
dec
adc
fstp
repz
and
xor
sub
push
ret
push
daa
mov
jecxz
inc
mov
nop
inc
adc
add
xor
rol
jp
cs
sti
cmp
and
mov
stos
mov
sub
iret
out
bound
adc
ret
loopne
cdq
mov
repz
jle
xor
add
sbb
jo
jo
or
(bad)
xlat
sbb
les
mov
xchg
test
movs
shl
rcr
stos
sub
aaa
mov
popf
hlt
dec
adc
dec
add
mov
xchg
mov
out
xchg
rcr
clc
pop
jne
sbb
push
adc
jle
or
push
ret
imul
test
fsubr
mov
or
(bad)
xchg
clc
mov
data16
mov
mov
scas
adc
mov
sub
mov
xchg
ins
pop
ret
and
ds
aam
mov
jbe
or
xchg
dec
icebp
mov
xchg
movs
jmp
repz
in
aaa
in
nop
in
sub
mov
dec
adc
push
out
mov
push
dec
lds
mov
xchg
jmp
push
cmp
add
leave
pusha
push
jecxz
lahf
inc
pop
mov
test
cwde
sbb
imul
cmps
ret
(bad)
and
gs
mov
std
jle
les
test
or
cli
jns
jecxz
cmp
scas
jl
out
movs
inc
sub
and
adc
mov
pop
xlat
jb
js
jnp
rcr
pop
sti
pushf
sbb
ss
dec
jmp
inc
cmp
mov
ret
sub
movs
add
mov
push
mov
cmp
add
movs
jp
or
xor
pop
loopne
sahf
xchg
sbb
rcr
xor
push
mov
mov
mov
stos
dec
inc
dec
and
(bad)
and
inc
and
imul
cli
or
and
shr
loop
cmps
rcl
shr
call
and
std
dec
xor
push
(bad)
xor
rol
jge
dec
or
dec
inc
enter
sub
shl
leave
bnd
jno
or
shr
mov
sahf
in
cmc
into
pshufw
scas
out
ins
pusha
scas
lods
imul
sub
xchg
addr16
dec
mov
mov
int3
std
cli
or
mov
push
push
add
cmp
inc
dec
mov
push
xchg
fistp
mov
sbb
and
es
or
adc
arpl
add
jo
mov
(bad)
enter
sbb
sub
clc
sar
icebp
ins
lds
mov
dec
pop
mov
xchg
mul
sub
cmp
(bad)
mov
test
push
lahf
inc
xchg
dec
cmp
pop
retf
xor
(bad)
(bad)
std
mov
dec
ror
dec
dec
aam
adc
jle
iret
adc
xor
mov
push
pop
(bad)
pop
ret
into
mov
fbstp
add
rcr
ins
xor
and
jns
or
add
inc
mov
mov
mov
inc
bswap
mov
mov
mov
ins
clc
scas
dec
stos
in
sahf
xlat
xor
or
nop
fdiv
jge
call
mov
jae
fcomp
int3
cmp
cli
rcl
mov
pop
push
sbb
sbb
stos
shr
cmp
jns
sbb
sahf
pusha
cld
push
imul
jb
dec
jg
leave
pop
iret
mov
adc
or
mov
retf
adc
xchg
cmp
shl
mov
inc
sbb
mov
sar
inc
push
cmps
arpl
inc
xlat
jo
fs
adc
or
fidiv
push
mov
add
push
data16
imul
fld
scas
(bad)
pusha
pop
out
fs
rcr
jge
outs
and
(bad)
clc
xor
ror
out
mov
out
mov
inc
adc
aad
xchg
xor
or
adc
cmps
sub
ficomp
ins
clc
pop
and
mov
mov
test
mov
inc
pop
push
adc
aaa
xchg
js
ror
fdiv
add
mov
dec
mov
std
retf
sub
inc
push
aam
mov
sbb
xor
xor
mov
jg
arpl
imul
jg
xor
cdq
lock
push
or
loope
test
int3
lock
int
cmp
(bad)
sbb
or
jg
mov
ret
ret
sub
in
mov
adc
xchg
adc
cmc
sbb
adc
cs
jo
jno
and
push
mov
cmp
mov
(bad)
retf
mov
inc
xor
sub
add
ja
gs
push
jmp
popf
mov
imul
and
int3
inc
mov
and
jp
jmp
call
fist
cld
push
sar
test
shl
jb
push
add
aam
fs
xchg
enter
mov
inc
inc
or
test
iret
cmc
dec
jbe
xor
or
push
mov
pop
xchg
jmp
iret
stc
and
and
inc
cmp
call
mov
mov
or
adc
adc
sahf
ja
adc
sbb
shr
push
cdq
ja
lahf
push
icebp
scas
outs
jne
pop
(bad)
sar
in
arpl
pop
ret
mov
inc
push
jmp
and
mov
loope
xchg
sbb
cmp
cmps
pop
(bad)
cli
ds
mov
inc
sub
sub
jmp
sbb
popf
sub
jecxz
shl
aas
stc
sub
daa
unpckhps
push
mov
nop
dec
push
mov
jb
cwde
xlat
fstp
in
(bad)
push
or
add
cmp
or
aad
dec
in
add
inc
pushf
cwde
(bad)
mov
add
imul
inc
popa
jbe
dec
push
stc
shr
push
cmc
not
js
jmp
add
(bad)
shr
and
cmp
leave
gs
and
xchg
je
rcl
ret
mov
je
lds
shr
mov
es
sbb
or
addr16
sbb
cmp
xor
gs
ds
cmps
cmp
movs
add
xor
mov
mov
test
pop
call
pop
push
js
sbb
sub
retf
sbb
mov
scas
data16
or
ja
jecxz
mov
mov
inc
sbb
rol
(bad)
dec
outs
loop
cdq
xchg
and
or
sub
lahf
outs
or
and
pop
hlt
mov
mov
push
xchg
or
lods
adc
inc
sbb
mov
clc
sti
mov
std
cmps
pavgw
ror
(bad)
fnsave
pop
cmps
js
and
pushf
add
test
inc
cmp
mov
loopne
add
jmp
adc
shl
iret
add
ds
pop
xor
sbb
shl
out
push
jg
and
jo
add
idiv
(bad)
call
loopne
lock
jecxz
mov
push
or
jmp
xchg
xor
cmps
add
ja
push
jg
data16
lea
inc
in
aad
repz
mov
push
cmp
cmps
mov
lods
ffreep
hlt
jl
das
call
int
sub
xchg
mov
add
add
int
jbe
outs
pop
pop
dec
mul
sbb
mov
data16
repnz
and
(bad)
adc
mov
in
cmp
adc
leave
shl
pop
repnz
inc
les
xlat
iret
stos
jbe
int
dec
pop
mov
outs
imul
and
push
movs
sub
adc
mov
retf
es
mov
mov
(bad)
aad
out
out
mov
mov
and
outs
jle
xchg
leave
leave
xchg
xor
fadd
test
mov
mov
gs
fidivr
mov
dec
lods
and
add
inc
or
sbb
aam
popf
push
mov
clc
fwait
call
adc
mov
pop
cli
push
rcr
les
jne
dec
mov
cmp
inc
retf
mov
pop
outs
xor
dec
addr16
push
(bad)
rol
retf
or
adc
add
push
jo
cld
sbb
call
(bad)
pusha
leave
loope
adc
imul
push
push
xchg
sbb
cdq
xchg
or
jns
loopne
bound
push
cli
repz
lods
jmp
sbb
pop
cmp
add
ret
addr16
jo
pop
cmp
jp
fxch
std
retf
retf
xor
out
xchg
(bad)
jbe
sub
cmp
int3
or
mov
test
cwde
push
in
js
or
jae
push
dec
in
ror
cmp
dec
rol
(bad)
push
xor
ins
mov
jl
iret
cdq
sbb
in
mov
out
adc
shl
cld
jns
sar
inc
stc
sbb
aaa
in
dec
shr
xchg
push
pop
pop
or
pop
sbb
fs
cmp
(bad)
push
std
pop
adc
jbe
nop
movs
in
pop
inc
dec
sub
arpl
out
test
jae
repz
mov
cmps
sub
mov
cmp
sbb
mov
sbb
cmp
scas
cmp
inc
popa
addr16
stc
retf
repz
mov
iret
push
aam
inc
sub
cwde
inc
or
inc
xchg
or
rcr
test
(bad)
bound
adc
sub
test
sbb
lods
or
xlat
gs
pop
aas
adc
cdq
jecxz
cmc
adc
jnp
in
sahf
or
nop
cmps
and
jno
test
mov
add
dec
lods
gs
out
mov
scas
sub
cmp
pop
jbe
jle
sbb
adc
pop
cli
xor
movs
out
daa
out
cmp
in
(bad)
cmp
gs
ins
clc
dec
jmp
jecxz
jns
push
test
jae
mov
inc
mov
mov
and
(bad)
cmps
or
ins
aam
mov
hlt
xchg
mov
rcl
push
and
fistp
cmp
scas
xchg
js
add
push
out
mov
js
xchg
push
retf
and
test
mov
aam
dec
int
call
rcl
or
js
push
and
es
add
dec
dec
jo
test
or
daa
sub
cdq
fld
mov
sar
cmp
cmp
pop
arpl
xchg
push
aaa
push
test
dec
lds
ins
cmp
adc
xor
loopne
out
not
lahf
pop
loope
fwait
pop
addr16
loope
out
mov
lods
xchg
das
jo
mov
push
inc
iret
in
pop
call
dec
pop
xchg
lock
cmps
mov
jns
inc
cmp
xor
mov
jle
sbb
dec
mov
push
sub
aam
inc
inc
mov
retf
test
push
out
xor
mov
pop
pop
pop
lahf
push
pusha
les
adc
add
pushf
mov
push
sub
mov
jge
add
push
(bad)
out
jp
jae
repnz
pop
xchg
stos
xchg
fsubr
fld
xchg
sub
pop
mov
shr
test
lods
pop
inc
jmp
shl
stos
pop
or
lea
stos
fcom
sbb
ficomp
add
and
mov
or
addr16
xor
xor
cwde
adc
clc
dec
sti
aas
push
jno
shr
in
inc
(bad)
sub
push
and
xor
test
cwde
enter
sub
sbb
in
pop
mov
adc
scas
lods
out
(bad)
mov
sub
es
cmovp
mov
ret
jl
inc
add
into
push
xchg
push
adc
ja
cmp
xor
and
sar
pop
xchg
daa
daa
mov
lock
popa
cmp
cmp
inc
push
sahf
outs
int
fcomp
jmp
daa
xor
sub
pop
and
cli
lds
shl
mov
and
sub
bnd
jae
dec
pop
repz
cmp
sbb
or
jns
leave
mov
repnz
cmp
int
lahf
xor
and
dec
scas
sub
dec
cmova
jne
scas
test
pop
add
mov
push
lock
movs
lds
stos
adc
je
unpckhps
add
pop
test
repnz
adc
or
add
sbb
mov
imul
das
xor
movs
(bad)
lods
fcmovnu
pop
push
xchg
aaa
jno
xchg
adc
cmps
pop
dec
cmp
pop
dec
jno
pop
call
daa
pusha
ins
jmp
xor
aad
adc
sbb
test
dec
cmp
mov
xchg
mov
pusha
push
pop
call
xchg
dec
dec
dec
inc
dec
adc
push
pushf
xor
jl
leave
dec
fcomip
mov
inc
js
dec
jno
mov
sbb
retf
imul
aas
adc
lea
into
and
mov
pop
adc
jmp
sbb
cs
sbb
mov
adc
mov
lahf
xchg
jo
popa
inc
ror
mov
inc
mov
jl
sbb
cdq
mov
sti
inc
aaa
test
push
mov
loopne
outs
(bad)
and
add
mov
ret
push
cs
cdq
add
xor
std
icebp
jne
adc
test
jns
shl
frstor
inc
pushf
stos
sbb
or
jo
xor
in
sub
(bad)
sub
cld
lea
mov
mov
scas
jo
fcom
mov
and
lock
clc
shr
sar
(bad)
xchg
scas
xchg
stos
ds
add
pop
sbb
js
pop
scas
lock
fdivr
push
xor
pop
jno
movs
inc
and
mov
lods
sar
mov
pop
ret
scas
mov
mov
(bad)
outs
shl
ds
rol
jg
fwait
xchg
fsubp
or
aad
inc
mov
pushf
inc
mov
mov
outs
jb
scas
test
inc
xor
scas
leave
inc
mov
xchg
fisub
xor
mov
pop
stos
adc
dec
push
and
xchg
mov
push
outs
pop
fld
(bad)
sahf
push
or
push
cmp
dec
xchg
jnp
gs
lods
or
aas
or
outs
adc
fdiv
mul
daa
adc
push
(bad)
(bad)
and
cmc
sti
mov
aad
cmp
dec
out
pop
sbb
out
and
in
imul
xchg
dec
jl
and
out
dec
loop
cmp
mov
push
sbb
pusha
jl
imul
pop
cmp
lods
out
cmp
cmp
dec
fs
push
(bad)
adc
cdq
xor
push
pop
mov
jmp
xlat
popa
xor
mov
das
ins
xchg
mov
sbb
pop
nop
dec
mov
inc
push
pop
mov
jb
cmc
ds
jp
adc
out
loopne
cmps
cs
stos
jmp
les
test
sub
push
imul
lahf
gs
pop
and
jno
mov
lahf
dec
or
mov
in
aad
dec
outs
test
adc
sar
cmp
push
xchg
sbb
xchg
fisubr
out
pushf
or
mov
ins
outs
pushf
dec
shr
arpl
stos
xchg
xchg
sub
inc
(bad)
outs
pop
dec
xor
test
inc
add
jmp
lock
mov
jp
mov
dec
sbb
adc
mov
outs
jns
dec
pop
pushf
sub
push
aad
push
add
xchg
xchg
dec
push
je
repnz
mov
cmp
dec
inc
mov
mov
out
enter
fadd
repz
loope
push
sbb
(bad)
xor
or
test
imul
enter
test
push
test
and
inc
(bad)
int
push
jmp
icebp
jns
or
aaa
in
cmc
lea
stc
test
xlat
fstp
das
dec
pop
jge
inc
cli
sbb
mov
pop
xor
jnp
mov
xchg
push
add
sti
out
push
sub
loope
dec
movs
rcr
movs
lds
fs
fistp
int
jmp
out
push
cs
shr
jnp
iret
lods
jmp
enter
aaa
xchg
lds
pop
mov
shl
stos
and
mov
sbb
inc
in
mov
or
rcr
ds
into
ds
pop
push
add
dec
lahf
xor
je
movs
inc
pop
test
add
enter
sub
or
jb
jmp
push
in
mov
cld
dec
add
mov
mov
xchg
and
iret
inc
xor
xor
jnp
mov
sbb
fwait
sbb
cwde
xchg
push
test
add
mov
inc
push
movs
fisub
lea
int
jl
xchg
mov
pop
ret
and
adc
pop
pop
cmps
xchg
jl
jo
adc
xchg
mov
pop
adc
in
xor
jno
mov
int
cmp
or
out
adc
pushf
fadd
mov
mov
sti
add
dec
popa
sub
int3
cmp
out
xchg
xor
jge
jbe
enter
jmp
(bad)
mov
enter
or
pushf
dec
enter
cli
dec
push
loop
loop
sbb
push
repnz
outs
or
jbe
xlat
and
cmps
ss
mov
test
push
out
cdq
or
pop
jnp
cmp
outs
pusha
push
mov
cmp
dec
pop
(bad)
and
imul
add
mov
neg
cmc
scas
xchg
sbb
out
int3
movs
sysret
mov
movs
push
mov
lahf
sbb
adc
sbb
cmp
stos
add
ret
fwait
mov
adc
xor
test
dec
adc
dec
repnz
clc
imul
and
jbe
push
mov
bound
sti
push
push
dec
movs
(bad)
call
fmul
jecxz
leave
push
ficomp
call
mov
pop
ret
dec
sbb
sub
cdq
push
mov
fst
test
mov
mov
or
dec
mov
mov
test
adc
inc
sbb
cmp
inc
test
add
cmp
or
out
in
mov
movs
adc
mov
and
sbb
fs
mov
push
mov
test
lods
xor
mov
or
cmp
pop
jb
push
mov
or
push
dec
cmps
sbb
jns
inc
mov
ss
pop
mov
or
cmp
add
mov
lea
sbb
push
aad
xchg
dec
out
shl
jge
cmp
std
cmp
inc
iret
and
repz
inc
aas
stos
fdivr
or
pusha
(bad)
push
sub
mov
arpl
mov
inc
fisub
adc
scas
xchg
inc
outs
sub
xchg
and
cmp
rol
or
mov
(bad)
int
(bad)
pop
int
sub
jne
retf
jl
sub
cmp
cmp
div
cs
mov
jmp
mov
push
div
jae
add
movs
rcr
idiv
sub
xchg
aaa
sub
ins
retf
test
rcr
retf
stos
push
shl
scas
ret
loopne
icebp
rol
xor
pop
imul
adc
in
(bad)
stos
add
stc
(bad)
pop
jo
outs
dec
pop
xchg
dec
adc
mov
inc
sbb
in
adc
stos
neg
push
or
dec
push
movs
cld
jo
(bad)
add
mov
out
adc
fld
loop
xor
outs
movs
xor
lods
xor
mov
push
rcl
test
cmp
cmp
mov
inc
mov
(bad)
popa
aaa
mov
sbb
ins
mov
push
sub
pop
test
popa
push
rol
mov
adc
daa
(bad)
retf
add
xchg
int3
or
jg
aam
mov
fadd
neg
cmps
xor
inc
cmp
mov
dec
out
cwde
fdivr
pushf
mov
jge
and
lods
stos
aam
adc
or
mov
xchg
ds
imul
stos
cwde
sub
mov
adc
mov
sub
xchg
iret
adc
test
inc
rcr
cmp
std
jecxz
aam
or
adc
popa
aaa
inc
call
stos
repnz
sbb
push
pop
jno
ror
jp
enter
in
ds
push
cdq
and
jmp
loop
sbb
push
call
adc
and
push
mov
int3
js
enter
cmp
pusha
cmp
inc
fwait
mov
mov
rcr
jge
movs
sub
dec
mov
push
addr16
int3
fmul
aaa
out
inc
stos
inc
sub
lods
pop
sbb
or
or
inc
pushf
mov
xchg
sbb
ret
push
test
jl
fwait
pop
xor
das
and
outs
xlat
imul
ds
add
pop
mov
lods
sbb
jno
pop
pop
mov
call
adc
push
inc
jns
jmp
sub
xchg
clc
mov
sbb
adc
pop
das
inc
add
and
test
xor
push
fiadd
xchg
xchg
jp
inc
jge
mov
xor
ret
stc
mov
cmp
stc
retf
and
sbb
and
dec
sbb
mov
addr16
sbb
lock
pop
inc
mov
add
and
out
repz
daa
add
ins
xor
push
sub
int
mov
mov
mov
ins
sbb
shl
shr
(bad)
(bad)
cdq
pushf
or
xor
dec
jbe
cs
and
test
push
and
push
jge
sub
xchg
(bad)
dec
push
mov
push
push
repz
pop
mov
frstor
dec
mov
mov
repnz
js
and
leave
mov
fidivr
jns
ret
mov
repnz
sub
dec
fsubr
push
je
not
sub
push
movs
out
inc
add
shl
mov
and
pop
int3
mov
xor
call
test
lock
adc
repnz
clc
sbb
ficomp
das
shl
pop
lods
cmps
sub
add
and
xchg
sbb
xchg
mov
mov
or
xchg
repz
aas
int3
sbb
adc
jecxz
aad
inc
xor
adc
lahf
fistp
scas
push
loope
call
aam
sub
std
xor
fstp
outs
nop
rol
mov
pop
call
push
xchg
or
push
mov
leave
adc
out
xchg
iret
fisttp
clc
mov
cmps
repz
scas
retf
cmp
sub
test
jecxz
fld
(bad)
cwde
xor
ret
bound
mov
invd
xchg
jmp
int3
lods
data16
(bad)
mov
mov
pop
test
cmp
add
loopne
(bad)
jno
ins
cmp
add
(bad)
shr
nop
inc
fist
data16
(bad)
jmp
push
mov
push
dec
js
inc
shl
(bad)
or
or
push
ds
mov
lock
ror
push
idiv
mov
xor
mov
cli
in
bound
repz
call
or
stos
jae
jnp
jp
leave
fisub
aad
fisubr
scas
scas
jg
pop
jne
xchg
adc
scas
or
pop
outs
ins
daa
mov
ins
xlat
or
cmp
fsubr
mov
sub
dec
mov
dec
pop
ret
add
jge
ficom
and
mov
cmp
int
and
cmp
add
jmp
in
dec
jg
fstp
sub
shl
bound
xchg
jae
in
jmp
cmp
jmp
cmc
fwait
inc
ret
jnp
shl
inc
ret
add
scas
imul
sub
or
mov
stc
ins
les
cmp
pop
jmp
sbb
lea
dec
sub
jnp
dec
adc
call
and
out
xchg
test
jl
es
push
push
pop
in
call
jmp
sub
dec
mov
pusha
out
dec
cmp
loope
inc
mov
xor
imul
out
ss
mov
pop
test
test
ss
test
xchg
test
jmp
inc
repnz
aas
inc
adc
(bad)
mov
cmps
imul
pop
out
outs
cmp
jle
mov
out
je
movs
pop
test
or
fst
lea
ret
cdq
xchg
cwde
ret
add
jae
repz
movs
(bad)
xlat
lock
cmp
ins
jno
in
inc
jmp
clc
cld
xchg
(bad)
cmp
cmp
or
cmp
inc
and
pop
or
pop
cld
les
in
inc
and
test
sbb
dec
ds
sar
cmp
out
enter
mov
jle
xchg
push
data16
pop
xlat
mov
in
repz
and
ds
jb
test
add
pop
in
push
jb
jmp
sbb
or
jge
(bad)
cmp
ds
loop
sub
inc
dec
imul
cmp
jg
hlt
or
scas
pop
or
sub
or
popa
pop
rcl
ins
mov
data16
lds
push
pusha
mov
cmps
jmp
jge
push
fsubr
xor
jno
idiv
and
test
jg
scas
ins
pop
add
cmp
into
(bad)
dec
es
xor
pop
in
test
fmul
xor
cli
jge
cmp
cmps
outs
xchg
pop
dec
icebp
lds
(bad)
and
mov
jp
pop
or
std
cmp
ins
pop
push
jbe
xlat
xor
stos
test
int
popa
ins
inc
es
mov
inc
add
cmp
pop
dec
pop
jne
adc
jl
(bad)
pop
or
ret
ds
xchg
ret
jo
dec
push
mov
scas
push
ret
popa
xchg
push
aas
es
pusha
pop
in
enter
repz
cld
mov
sbb
adc
cli
sbb
mov
jl
fstp
adc
adc
pop
mov
gs
and
pop
lock
call
in
ds
jecxz
adc
fnstcw
mov
mov
not
or
cmc
in
pop
xchg
sbb
sub
add
ror
and
lods
stc
xor
addr16
fnsave
dec
aad
sub
jmp
jae
ins
movs
or
test
jns
call
push
and
ret
push
out
add
fmul
mov
cmp
push
jb
sbb
in
cmp
mov
mov
xchg
retf
push
sbb
xor
push
ds
adc
xor
hlt
xor
mov
(bad)
and
gs
psadbw
shl
push
inc
inc
and
std
dec
add
ja
lods
push
or
sbb
xchg
jge
pop
xchg
jbe
sbb
cwde
mov
sar
pop
xor
dec
scas
shl
stos
pop
test
bound
popf
stos
sub
je
push
or
sub
(bad)
mov
dec
and
in
arpl
jecxz
(bad)
add
(bad)
outs
test
add
cmc
xchg
push
sbb
or
in
mov
or
add
cmps
adc
sub
mov
ret
iret
daa
mov
push
enter
add
inc
dec
mov
cmps
mov
fadd
dec
jg
cmp
stos
pop
fld
call
mov
(bad)
mov
jbe
jmp
clc
mov
ins
les
mov
mov
cmpps
xor
test
pop
inc
dec
pop
inc
fstp
dec
or
pop
pop
mov
loopne
cld
js
out
dec
cmc
aaa
sub
pop
fcomi
sub
test
outs
les
dec
imul
pop
jmp
cld
xor
in
(bad)
ins
mov
xor
lds
(bad)
scas
clc
mov
cwde
ret
mov
jns
sar
and
jb
mov
dec
sub
inc
add
cmps
mov
in
ds
ss
or
(bad)
sub
xor
retf
or
fldcw
mov
mov
pop
fdiv
or
bound
and
sbb
push
mov
(bad)
ficomp
cmps
test
adc
(bad)
push
and
lods
fist
mov
hlt
das
rcr
bound
mov
ds
daa
mov
mov
imul
dec
dec
adc
movs
cmp
lea
inc
inc
popf
push
or
adc
sbb
dec
push
pushf
xor
daa
or
mov
cmp
repz
jae
in
shl
(bad)
mov
icebp
mov
ss
inc
push
dec
imul
sbb
xchg
stc
xor
inc
fwait
inc
in
mov
loopne
test
sbb
rcl
ins
cs
jp
sub
mov
psubusw
arpl
mov
dec
icebp
(bad)
jno
dec
cmp
cmp
push
and
cmp
lea
cmps
adc
sbb
mov
mov
cmc
and
xchg
fnsave
fidiv
push
retf
adc
int
mov
loope
and
pop
or
jno
sub
mov
xor
jmp
push
and
cld
ret
or
jmp
das
xor
cdq
sbb
sbb
mov
sbb
mov
outs
retf
jmp
xor
mov
std
call
cmps
mov
and
pop
test
add
add
inc
mov
pop
adc
je
sbb
mov
mov
stc
sahf
ins
repnz
push
mov
in
imul
fdiv
mov
cdq
jbe
cmp
fnstenv
push
cmp
cmp
in
or
push
jae
mov
sbb
ins
nop
pop
imul
mov
mov
mul
jge
aaa
sbb
sbb
cmps
mov
jb
mov
jb
mov
call
inc
fcom
push
out
mov
and
jno
shl
add
pop
dec
enter
lock
push
dec
imul
adc
sbb
ds
mov
pusha
(bad)
(bad)
stos
fisubr
clc
repz
jp
jmp
mov
xor
fmul
cs
mov
fisttp
or
add
cmp
adc
iret
jl
mov
dec
push
pop
and
cmps
xor
ret
push
sbb
jb
lds
mov
pop
div
aaa
enter
ret
sbb
push
retf
mov
movs
movs
shr
mov
adc
dec
inc
lea
dec
jae
loope
or
and
(bad)
aad
jo
hlt
out
shl
mov
in
push
repnz
or
outs
fist
mov
or
mov
xor
jnp
rcl
cld
dec
pop
mov
scas
mov
push
or
add
mov
push
dec
dec
test
(bad)
cmp
fdiv
dec
mov
push
loopne
cwde
test
dec
cld
cmp
mov
ins
dec
(bad)
(bad)
ds
mov
rol
mov
stos
outs
sbb
jb
ins
cwde
fwait
sti
outs
pop
ret
(bad)
sub
inc
and
in
scas
and
mov
jmp
(bad)
pop
ja
and
xchg
mov
scas
addr16
in
in
(bad)
xor
xchg
xor
ins
popf
imul
fld
jle
xchg
mov
lods
(bad)
aad
jmp
rcl
push
add
iret
mov
cmc
or
ins
outs
push
jecxz
jecxz
sub
mov
movs
(bad)
or
retf
add
pop
pop
shr
inc
int
shl
mov
imul
pop
and
mov
and
loop
dec
rcl
gs
and
jmp
mov
das
pop
popa
inc
fxch
stos
or
lea
mov
sub
les
sbb
xlat
mov
test
cdq
leave
or
xchg
xlat
and
or
and
xchg
push
and
ret
lods
mov
lods
sub
cmps
sar
push
dec
jecxz
add
xor
mov
inc
dec
cmp
imul
pop
pop
or
xchg
(bad)
cwde
and
ficomp
es
(bad)
fcom
(bad)
sub
or
in
cmp
fcom
call
stos
mov
add
aaa
xchg
fstp
mov
cld
push
inc
cmc
scas
mov
jl
sub
jo
aas
xor
imul
jae
cmp
sub
mov
cwde
xor
ins
into
icebp
aas
out
jbe
ss
jnp
cmp
inc
sub
push
cmp
scas
mov
mov
adc
dec
mov
test
xor
xor
data16
adc
pop
mov
xor
xor
mov
jecxz
mov
clc
push
cmp
fisttp
push
fs
and
imul
cwde
ins
mov
jns
cmp
and
dec
xor
xlat
fisubr
sub
mov
ret
aad
(bad)
cdq
adc
xor
add
cmp
mov
(bad)
sbb
test
push
and
gs
ins
imul
and
mov
adc
fstp
(bad)
in
add
lods
shl
adc
sti
into
dec
loopne
stc
loope
dec
mov
ror
jmp
push
or
xor
rol
xor
clc
dec
mov
lock
in
mov
jmp
mov
retf
and
mov
xchg
out
xchg
std
sbb
push
inc
cwde
mov
inc
adc
pop
(bad)
sti
jb
mov
repnz
imul
sub
ja
dec
ins
pop
mov
not
jnp
loop
xchg
fild
sbb
and
bound
ins
sub
lock
popa
sbb
cmp
mov
test
bound
or
jmp
pop
inc
add
dec
popf
adc
xlat
cld
xchg
popf
clc
inc
(bad)
(bad)
pop
dec
and
jne
mov
dec
push
je
(bad)
push
ins
mov
dec
mov
inc
sar
(bad)
or
cmps
cmps
mov
mov
push
loope
mov
push
xchg
pushf
jnp
ficomp
iret
and
sub
shl
(bad)
(bad)
mov
push
push
imul
xlat
push
push
dec
test
sar
mov
adc
mov
cwde
sub
xchg
out
ret
loop
loopne
mov
jg
cli
mov
jbe
jmp
retf
add
pop
not
mov
adc
(bad)
mov
jmp
jecxz
repz
pop
xchg
out
jnp
cwde
aam
add
jmp
stc
or
adc
test
dec
mov
test
mov
scas
loop
mov
push
lods
aad
icebp
ror
stos
iret
fwait
xor
loopne
arpl
add
dec
jp
mov
cmps
xchg
shl
movs
fidivr
xchg
fisttp
jp
fiadd
and
addr16
mov
popa
ror
mov
(bad)
xchg
mov
ds
rcr
sbb
dec
mov
ret
push
or
stos
push
jmp
and
jbe
imul
sbb
xchg
test
adc
mov
frstor
sbb
lock
(bad)
sbb
mov
shr
pop
add
push
mov
outs
jge
cmp
add
out
xadd
(bad)
mul
arpl
push
jg
and
pop
std
inc
jmp
inc
iret
xor
cdq
(bad)
fisubr
cli
mov
daa
add
loop
or
dec
pop
xor
sahf
mov
jb
mov
std
ds
inc
in
inc
ja
das
cli
and
sti
in
inc
movs
pop
inc
pop
jmp
adc
mov
cmp
pop
inc
add
sbb
dec
in
je
scas
fyl2xp1
clc
shl
retf
inc
in
ja
add
scas
in
leave
enter
mov
xor
adc
push
dec
outs
jmp
cld
dec
cdq
lahf
add
sahf
aaa
test
out
xchg
lahf
mov
push
inc
sahf
shl
dec
call
mul
jl
loopne
in
das
mov
and
addr16
cwde
inc
ss
jno
je
add
std
je
cs
sub
pop
arpl
scas
arpl
jmp
rol
cld
sub
cmp
in
mov
xor
call
adc
into
in
jns
push
arpl
enter
dec
pop
jg
jae
xchg
shl
sbb
pop
arpl
sub
or
imul
inc
inc
scas
pop
and
stos
and
xor
xchg
in
or
loopne
dec
xchg
dec
cmp
(bad)
scas
lock
imul
das
pop
aaa
(bad)
pop
add
ficomp
sbb
adc
mov
(bad)
sub
icebp
sbb
test
push
pop
pop
pop
adc
dec
das
out
addr16
sahf
dec
sbb
pushf
cmc
out
(bad)
fldcw
dec
in
popa
sub
movs
jbe
and
dec
and
loopne
xchg
and
stc
push
movs
int3
hlt
rcr
and
push
leave
in
push
or
sub
leave
lods
(bad)
cmp
jge
or
test
sub
lock
repnz
scas
ror
fs
neg
arpl
add
rol
repz
sub
test
jle
sub
dec
dec
outs
mov
imul
sbb
inc
test
loope
xchg
loope
mov
push
sub
(bad)
loopne
mov
add
mov
nop
pop
in
and
(bad)
das
inc
dec
test
or
lock
and
shl
adc
mov
sbb
lahf
jecxz
fldcw
fst
push
xor
sti
lods
movs
xor
mov
loope
dec
sahf
cmp
fist
not
(bad)
psubsb
mov
jp
sbb
mov
bound
adc
pushf
or
adc
int
lock
pop
mov
icebp
xor
lahf
push
xchg
scas
dec
stos
cwde
sub
add
mov
and
cmps
outs
sbb
xor
rcr
icebp
or
aam
or
add
lahf
movs
aas
mov
call
fwait
mov
and
imul
mov
repnz
mov
lods
imul
out
rcr
xor
sub
popa
pop
ins
out
cmp
xchg
sbb
cmp
sbb
call
fnstenv
push
and
inc
lods
xchg
fwait
mov
push
mov
movs
sbb
inc
es
cmp
mov
xchg
fld
pop
cmp
jo
daa
and
mov
push
inc
mov
aas
adc
retf
inc
clc
mov
push
das
pop
adc
in
sbb
push
push
(bad)
loope
bound
sahf
fnstenv
daa
lds
addr16
mov
sub
pop
pop
ret
(bad)
dec
or
pushf
adc
and
pop
movs
aaa
outs
push
mov
pop
or
push
pop
test
cwde
sub
dec
mov
and
adc
sbb
jb
pop
xchg
out
adc
fs
sub
jecxz
and
in
sbb
pop
pop
sub
(bad)
mov
jp
mov
xchg
pop
or
xor
jns
test
arpl
and
sahf
fdiv
in
push
jmp
mov
add
jmp
mov
mov
cmp
pop
pop
cmps
cwde
and
jge
dec
mov
fcmovnbe
sbb
jbe
adc
pop
pop
add
inc
sub
push
pop
sub
sbb
xchg
cmc
cmp
popa
adc
out
mov
xchg
xor
adc
fsubr
push
out
fild
pop
pop
es
ins
les
add
push
int3
add
xor
leave
sub
movs
cs
cmc
mov
mov
fcom
sbb
mov
scas
not
jb
jne
rcr
add
xor
pop
outs
pop
imul
das
add
mov
int
jl
adc
out
xlat
push
retf
rol
sbb
cmp
aad
aam
(bad)
scas
mov
ja
dec
pushf
outs
cmp
leave
int3
loope
jo
inc
xor
bound
popf
mov
mov
sbb
dec
int3
enter
and
cwde
nop
hlt
or
jns
loop
(bad)
jge
push
mov
mov
or
shl
in
cmp
scas
push
xlat
mov
es
push
popf
jae
xchg
push
sbb
cmp
adc
lods
xchg
or
lds
sub
jne
or
movs
into
mov
je
into
mov
movs
and
popa
mov
(bad)
stc
mov
or
cmp
jmp
jo
popf
test
push
in
push
stc
sbb
fdiv
pop
mov
sbb
adc
cmps
and
not
mov
call
cdq
popf
dec
mov
jg
lahf
jb
inc
mov
(bad)
aam
aam
xchg
cmp
xor
sbb
cld
or
and
aas
mov
sahf
shl
inc
ffreep
adc
test
cdq
cmp
mov
js
push
aad
lods
jae
in
nop
push
jl
call
fld
scas
jbe
(bad)
repnz
cmp
shl
sub
mov
out
jns
outs
add
dec
clc
int
mov
pop
cmp
push
sbb
adc
pop
pop
je
pop
test
into
cmp
mov
push
lahf
test
xor
mov
fs
pop
adc
stc
pop
mov
dec
push
and
aam
mov
jle
aad
add
add
ins
loopne
mov
mov
inc
lea
movs
fistp
xor
xor
sahf
and
in
enter
cs
or
sbb
sub
mov
daa
push
lahf
jns
pop
xchg
dec
lock
push
pop
jbe
xchg
sub
ret
cmps
pop
and
pop
cmps
cmp
push
stc
cmps
arpl
cmp
ja
sar
lock
scas
mov
add
ret
jb
fidiv
add
in
repz
pop
hlt
stos
xchg
out
sub
in
cmp
cmp
dec
bound
adc
add
std
retf
or
and
ret
xchg
mov
ret
arpl
adc
mov
mov
gs
push
jl
into
and
rcl
sti
push
int3
sti
or
mov
fisubr
mov
data16
not
das
call
ret
inc
loopne
in
jne
sub
je
and
or
mov
ror
xor
mov
cmp
les
mov
push
push
inc
adc
adc
cmp
mov
mov
pop
daa
imul
jb
dec
sub
adc
daa
push
and
lds
retf
adc
xchg
call
jae
out
sahf
(bad)
mov
cld
mov
aam
sahf
jmp
sbb
sbb
push
push
call
xchg
out
mov
pop
sbb
mov
sbb
loope
inc
sbb
fimul
and
sbb
into
jle
add
jle
lods
sub
cmp
push
nop
jne
mov
repz
shl
in
jl
fidivr
js
and
sbb
les
fld
jbe
dec
mov
inc
mov
jae
hlt
ss
mov
mov
popf
lds
xor
sub
pop
adc
call
in
xchg
sbb
or
sub
inc
add
pop
mov
cmps
lock
fistp
popa
pop
xchg
cmps
and
int
dec
stos
jl
test
xchg
nop
jge
popa
add
ds
cwde
xchg
push
aam
outs
mov
push
cmc
popf
sub
push
(bad)
into
call
pushf
inc
sub
cmc
inc
xor
adc
loope
push
or
cmp
ds
jmp
jmp
push
cmp
pop
fst
ds
popa
push
cmp
sub
or
jle
mov
js
mov
daa
ret
xor
inc
in
outs
and
ja
stc
imul
mov
sub
mov
lds
dec
les
vmovddup
std
xor
mov
data16
jbe
add
jp
(bad)
jno
xchg
fdiv
out
stos
mov
lods
test
jl
pop
cs
and
call
cmp
xchg
push
mov
scas
mov
cmps
rol
fs
inc
jno
out
cmps
inc
(bad)
sbb
mov
add
mov
or
in
popf
jo
test
out
mov
shl
push
xchg
fwait
stos
mov
xchg
and
xchg
fnstcw
jae
pushf
addr16
mov
mov
or
outs
pop
repnz
add
mov
into
pop
mov
loope
rcl
adc
mov
push
pusha
cmc
popf
in
aam
gs
adc
pop
xchg
jno
sub
nop
add
pop
mov
mov
pop
call
jno
lock
(bad)
stc
push
pop
push
sbb
mov
ins
leave
data16
mov
inc
xchg
dec
dec
fidivr
jmp
test
nop
and
mov
call
jle
retf
push
jnp
xor
in
pushf
xchg
mov
sar
pop
dec
enter
push
lock
pop
retf
dec
cmp
sti
mov
jae
dec
xchg
xchg
push
inc
push
loop
nop
cmps
lds
sub
pop
xchg
jmp
cmp
(bad)
ficomp
lahf
mov
loope
adc
mov
pop
(bad)
cmc
add
mov
inc
xchg
jbe
xchg
inc
or
in
fstp
sub
ins
stc
cs
das
xor
jmp
add
nop
jge
xchg
std
mov
fwait
ror
sbb
dec
lods
sub
xchg
es
mov
mov
ret
and
cmp
push
sub
ret
outs
stos
pop
imul
sbb
dec
mov
sub
fmul
imul
push
push
in
pop
sub
popf
test
and
call
add
ror
cmp
in
jmp
push
push
leave
and
hlt
push
out
inc
mov
mov
xchg
(bad)
mov
dec
jne
mov
adc
mov
jnp
dec
aam
jmp
cmp
jecxz
jmp
call
popf
mov
bound
ins
push
pop
je
dec
pop
or
stc
inc
xchg
inc
xchg
cmc
and
ss
push
rcr
leave
push
and
mov
(bad)
mov
adc
xchg
cli
add
mov
ret
or
jle
xor
add
out
xchg
shl
jp
mov
cmps
pop
outs
jmp
daa
xchg
sbb
push
adc
loopne
sti
out
mov
sub
mov
cmp
dec
test
add
sub
sbb
inc
inc
or
retf
mov
xchg
pop
push
xchg
cmp
adc
popf
mov
and
dec
fsubr
dec
mov
imul
dec
je
daa
loop
dec
std
ins
dec
xchg
pop
cmps
push
sbb
add
aad
les
in
or
push
sub
pand
dec
ds
mov
fxch
repnz
pop
push
add
ror
movs
cdq
inc
es
bound
test
lahf
call
je
ins
xchg
sub
dec
pop
mov
fwait
jle
and
jge
jae
test
xchg
push
jne
inc
and
xor
repz
(bad)
jbe
push
mov
or
sbb
cmp
and
test
mov
outs
test
fadd
xchg
in
add
ret
lods
movs
sbb
xchg
adc
lods
push
jb
jl
out
and
stc
ud2
jp
adc
into
jae
repnz
fxam
sahf
mov
pop
xchg
jmp
mov
aam
pop
jmp
push
rep
add
and
xor
in
mov
jb
loop
push
or
(bad)
and
stos
in
pop
out
sbb
sbb
adc
add
je
shl
mov
lea
jae
fadd
test
fwait
jmp
and
dec
neg
test
sub
cmc
push
lods
and
ins
lahf
enter
cmc
and
cmc
retf
or
jno
popa
pop
jmp
cld
jle
jl
in
outs
(bad)
sbb
inc
addr16
jae
std
sbb
push
repnz
cmps
fnstsw
retf
push
pop
movs
xor
call
add
sbb
test
cmc
cmp
inc
push
jmp
and
mul
push
inc
push
repz
cmps
sub
int
test
xor
shr
aam
dec
lods
scas
dec
cwde
xor
jge
cmp
mov
lods
or
and
inc
and
fbstp
frstor
mov
xchg
cdq
retf
in
shl
xchg
fld
pushf
inc
stc
outs
ins
call
inc
pop
cmp
inc
fld
pusha
gs
mov
es
and
push
loope
clc
out
mov
retf
aam
fs
mov
pop
adc
das
iret
fldenv
mov
jmp
jbe
imul
shl
cwde
(bad)
fld
sbb
mov
dec
jle
inc
(bad)
mov
pop
js
js
push
test
mov
mov
scas
xor
jg
or
jmp
jb
mov
cmp
mov
sbb
ret
fdiv
fs
push
lds
adc
movs
mov
pusha
sbb
mov
sahf
cmp
jnp
fidiv
pop
ret
pop
dec
adc
lds
push
dec
or
adc
mov
in
lds
call
xchg
cmp
xchg
pop
fbstp
mov
inc
scas
sar
jle
push
add
mov
sub
cmp
jae
adc
(bad)
push
test
fdivr
loope
cmp
stos
fwait
inc
cs
gs
pcmpgtb
out
loop
lock
es
push
cmp
hlt
jnp
popa
rcl
outs
mov
ret
jge
jmp
adc
out
sub
fisttp
ret
pop
push
jae
sub
jne
cmps
jno
je
jle
cmp
or
loopne
pop
pop
adc
shr
aaa
mov
gs
and
fs
adc
xchg
rcl
(bad)
adc
mov
jmp
mov
push
add
ror
jno
iret
sti
es
fidiv
(bad)
xchg
stc
enter
sub
test
fs
or
adc
mov
pop
mov
xor
fimul
inc
adc
js
adc
add
outs
push
jl
cmp
or
xchg
and
es
push
das
lods
inc
push
inc
push
dec
inc
adc
adc
pop
rep
in
xor
rcr
jl
stos
fcomp
push
or
fld
jae
stc
adc
int
dec
sbb
xchg
mov
jl
and
scas
push
lahf
pop
xor
(bad)
mov
imul
imul
out
mov
pop
mov
and
xchg
enter
adc
sbb
in
div
xchg
cmp
arpl
cdq
jge
and
inc
inc
push
push
dec
(bad)
std
jecxz
and
shr
xor
inc
inc
fs
std
mov
dec
fadd
cmp
das
dec
sbb
mov
sub
pop
adc
out
sub
ds
sbb
rol
rol
mov
int3
mov
pushf
cmp
(bad)
mov
mov
fist
cmc
sub
cli
outs
loopne
mov
add
pop
out
xchg
retf
dec
mov
repz
stos
cmp
or
movs
dec
test
pop
add
push
or
and
jmp
xor
call
in
pop
dec
jmp
cmps
sub
xor
mov
cld
in
jmp
xor
jl
cmp
out
mov
fs
mov
out
xor
nop
jbe
dec
xor
push
mov
cmc
mov
rol
mov
mov
or
(bad)
cmp
xchg
repz
push
movs
movs
test
xlat
rcr
mov
jmp
std
xor
xor
add
sar
adc
mov
data16
in
mov
pop
pop
jno
and
ss
int
cmc
mov
into
jmp
inc
shr
bound
ds
test
aam
jmp
xchg
aam
dec
jle
jnp
sub
add
cwde
or
mov
inc
mov
jge
mov
fs
sbb
add
jno
add
imul
scas
pop
(bad)
fcmove
mov
jae
dec
(bad)
sbb
out
out
xor
push
sbb
push
cmp
inc
dec
gs
sbb
mov
mov
pop
test
leave
imul
or
or
in
push
es
ins
mov
jmp
adc
inc
stos
push
add
dec
das
mov
cmp
out
pop
popf
test
(bad)
mov
pusha
inc
ds
mov
int3
cmp
int
cmp
repnz
sbb
sub
cmp
test
jb
imul
xchg
sbb
sub
test
loope
shr
xchg
pop
cmp
push
sbb
out
call
pop
out
xchg
inc
xchg
cwde
xchg
dec
pop
sbb
xor
pop
(bad)
aaa
add
jo
add
enter
stos
lea
dec
push
fadd
or
mov
sbb
ins
jmp
or
sbb
cmp
mov
int3
test
and
jecxz
stos
inc
int
popa
fidivr
mov
push
jae
ds
movs
mov
aaa
ins
xor
out
inc
and
(bad)
mov
jo
mul
jbe
std
scas
and
sbb
push
repnz
xchg
fsubr
fsub
jmp
mov
dec
push
fist
fwait
arpl
movs
mov
or
int
pop
fisub
dec
mov
inc
outs
or
jne
out
and
aaa
cdq
ss
mov
and
xrelease
stos
icebp
pop
jmp
shl
sub
xchg
xchg
push
mov
loope
and
enter
in
test
retf
ja
lock
aas
lea
push
xor
in
in
xchg
int
js
lods
or
gs
xchg
push
mov
and
cmp
cmps
dec
bound
(bad)
xor
ficom
stos
xchg
mov
jl
sub
pop
cmp
cmp
sar
sub
shl
adc
lds
jmp
stos
jmp
and
leave
repz
push
or
iret
and
cli
dec
or
in
retf
fucom
add
sub
and
add
jmp
push
push
xchg
push
jb
mov
repz
or
popf
mov
repnz
mov
loopne
xchg
cmps
push
fist
xor
inc
xchg
xor
(bad)
cwde
mov
cli
mov
sbb
inc
mov
xchg
(bad)
mov
inc
pushf
popa
sub
mov
pop
inc
icebp
jg
mov
(bad)
xor
sbb
stc
sbb
jg
add
pop
adc
out
adc
sar
adc
jmp
popf
and
jg
loope
mov
pop
push
push
adc
movs
cmps
loope
stos
mov
push
out
test
sti
out
mov
into
daa
mov
iret
mov
pop
(bad)
and
jnp
cdq
popf
cli
mov
fwait
mov
adc
sbb
movs
push
and
inc
arpl
or
pop
rcr
jmp
mov
adc
sub
hlt
mov
test
push
fiadd
ffree
xchg
inc
push
mov
lods
pop
adc
fadd
add
xchg
sahf
outs
cmp
repz
xor
shr
clc
cmp
push
pop
fisub
sahf
and
add
sahf
mov
dec
ss
and
(bad)
icebp
int
jb
es
test
add
sub
call
mov
adc
loope
ja
bound
int3
aam
dec
sbb
mov
jns
in
std
inc
stos
fdivr
outs
addr16
not
ja
out
ss
ss
and
(bad)
and
cmp
mov
das
repnz
mov
xor
xchg
adc
or
lds
xor
pop
imul
push
sar
sub
xor
inc
(bad)
xchg
push
mov
sti
loope
xchg
nop
fldenv
cs
mov
int
cmc
jae
loopne
test
rep
adc
inc
jle
mov
mov
ins
and
jo
popf
rcl
cmp
dec
arpl
fsubr
pop
mov
dec
arpl
lods
ror
mov
or
in
in
mov
js
push
sub
in
scas
sbb
xlat
pop
je
xchg
pop
ficomp
out
addr16
add
mov
cmp
inc
mov
sbb
repnz
push
mov
cmp
mov
test
test
out
mov
sub
imul
xchg
fiadd
inc
mov
or
xor
aam
and
sub
adc
add
or
aad
or
sbb
or
dec
adc
stos
popa
ret
xor
inc
int3
out
xchg
mov
fcom
mov
(bad)
adc
std
popa
or
loope
cmp
add
sub
lock
pop
lods
jo
jecxz
cdq
adc
jle
lock
loope
mov
inc
jge
adc
ret
inc
stos
dec
mov
jmp
test
gs
sub
mov
repnz
retf
sbb
cmp
push
retf
jmp
dec
add
jg
ins
repz
pusha
mov
cli
mov
(bad)
retf
pop
sub
add
xchg
loop
adc
sbb
jae
movs
aaa
fld
mov
fisttp
cmp
push
jl
mov
push
pop
push
out
mov
test
aas
outs
mov
fsub
stos
inc
ret
cmp
sub
shl
mov
shr
and
clc
out
mov
outs
clc
ret
mov
jmp
dec
scas
push
inc
pop
lods
rcr
fst
imul
(bad)
sar
mov
aas
push
das
bound
movs
mov
add
mov
dec
add
lods
stos
lods
push
sub
mov
outs
mov
lds
enter
rcl
clc
fwait
push
pop
push
cs
dec
jmp
jge
and
sub
mov
dec
lods
jnp
push
cmp
pop
sbb
popa
mov
mov
or
popf
lods
or
daa
adc
dec
loop
fst
test
xbegin
xchg
pushf
int3
loop
xor
push
out
and
mov
loop
aad
jmp
bound
cld
test
inc
paddusb
je
push
jmp
and
cli
jnp
mov
push
out
lods
(bad)
fldenv
das
dec
mov
add
std
aaa
out
hlt
bound
sbb
xor
xor
pop
aaa
xor
push
fiadd
pop
push
cmps
jle
not
jp
cli
cmp
outs
jb
or
mul
jmp
push
inc
add
data16
int3
std
ss
push
adc
adc
mov
(bad)
xchg
mov
dec
lock
pop
fnsave
mov
mov
iret
jae
rcl
aad
inc
fiadd
and
xor
outs
imul
push
retf
pop
adc
inc
inc
(bad)
es
cmp
stc
jp
ins
push
movs
ins
fcom
sub
sbb
mov
popf
std
imul
xlat
sub
mulps
adc
xchg
(bad)
vmread
dec
daa
inc
xchg
push
(bad)
enter
fisttp
mov
imul
mov
ja
dec
inc
xchg
xchg
fist
call
mov
jnp
push
lods
mov
sub
popf
lods
fcom
pop
pop
sbb
push
cmp
push
mov
push
or
mov
and
push
inc
ret
cwde
movs
lock
jae
ss
jne
adc
xchg
sbb
xchg
mov
jle
mov
imul
pop
xlat
and
mov
aas
outs
fidiv
push
pop
lea
push
or
add
adc
test
jmp
mov
clc
in
inc
mov
iret
out
js
push
or
xor
jge
pop
xchg
add
mov
jne
daa
mov
adc
stc
cmps
ficomp
(bad)
mov
pop
add
lock
inc
jbe
lods
jbe
jae
jae
les
xchg
push
sub
arpl
xor
movs
sbb
movs
and
push
repz
lods
inc
scas
and
add
test
or
frstor
xchg
stos
xor
call
pop
pop
fidiv
xlat
(bad)
(bad)
mov
(bad)
cmp
dec
fcomp
loope
cmp
js
push
loopne
dec
or
xchg
jo
push
mov
pusha
push
mov
sub
mov
lods
dec
sbb
push
push
mov
loop
sbb
mov
rcr
out
or
cmps
dec
dec
es
inc
ret
fst
inc
cmp
jnp
fld
jmp
cwde
fs
call
mov
movs
dec
in
add
cdq
imul
ficom
or
dec
xchg
jbe
bound
mov
imul
repnz
(bad)
std
xchg
xchg
icebp
cmp
test
enter
inc
and
xor
push
jae
lods
aaa
add
jge
mov
add
jb
jl
ficom
test
ss
dec
jmp
mov
icebp
retf
pop
outs
cmps
jp
frstor
jae
mov
jle
(bad)
call
imul
push
mov
les
push
dec
out
jb
aas
movs
cdq
repnz
add
retf
pop
aad
fiadd
sar
or
lods
(bad)
or
jge
mov
xchg
xor
push
dec
out
hlt
sub
aaa
sbb
dec
xlat
xor
push
and
das
sahf
cmp
inc
mov
sub
in
mov
pop
mov
push
add
mov
sbb
sub
sub
push
pop
and
xor
ret
das
inc
pop
push
add
xor
test
jbe
lahf
fmul
mov
mov
push
and
daa
cmps
or
mov
jg
xchg
mov
jo
add
popa
pop
aaa
iret
inc
mov
cld
mul
and
shr
xor
cmps
out
(bad)
sbb
pop
or
mov
xchg
test
jnp
mov
mov
or
sahf
loope
call
rcr
dec
clc
xor
pop
and
and
push
mov
push
inc
xchg
jbe
test
mov
xor
mov
adc
inc
pop
jo
xchg
and
cdq
jns
outs
xchg
pop
xchg
retf
mov
inc
xchg
in
cmp
sub
lods
dec
mov
out
shr
(bad)
dec
cdq
pop
cmps
clc
dec
dec
xchg
in
int
push
loop
jo
cmp
and
cld
ss
stos
jg
xor
adc
call
popa
and
jmp
push
int3
dec
mov
bound
xor
hlt
mov
push
or
xor
cmp
shl
push
fwait
mov
inc
rol
nop
mov
ss
jno
xlat
and
or
adc
cmp
movs
fisttp
mov
sbb
add
rol
into
icebp
nop
pshufw
add
sub
out
fwait
sub
add
ror
iret
inc
aad
sub
or
pop
cdq
inc
cmps
rcr
mov
test
sti
dec
dec
inc
dec
xor
enter
lock
sbb
rcl
daa
pop
std
or
cmp
cmp
lock
or
fwait
sbb
mov
pop
sub
fcmovbe
add
scas
fst
in
xchg
in
call
xchg
pop
cmps
(bad)
mov
pop
loopne
mov
pushf
add
sbb
cmp
call
gs
cmp
ret
jbe
stos
dec
xor
outs
daa
xchg
mov
sbb
dec
lock
fsub
mov
mov
out
sub
or
and
cs
fistp
(bad)
xlat
dec
xor
aam
popf
mov
stos
inc
mov
mov
shr
push
push
lahf
sti
pop
xchg
imul
jle
sub
ins
pop
cmc
popa
scas
test
cmps
cmp
mov
cmp
inc
mov
lods
adc
into
adc
xchg
xchg
call
xchg
cmc
mov
cwde
dec
mov
xor
jecxz
or
iret
retf
or
mov
gs
add
(bad)
jg
fldenv
clc
adc
dec
and
inc
inc
xlat
hlt
mov
push
fcmovu
push
jns
test
test
test
and
fdiv
mov
push
pop
clc
xchg
jns
stc
lea
test
iret
jle
add
movs
and
inc
jmp
cld
movs
cwde
sbb
add
mov
ret
enter
pop
or
mov
or
inc
cwde
add
pop
dec
pop
push
(bad)
loop
dec
mov
pop
int
stos
push
jmp
sahf
lea
mov
cmp
push
cli
fild
pop
jg
jmp
scas
or
imul
daa
xchg
(bad)
push
cmp
aas
pop
scas
xor
rol
clc
ds
into
(bad)
jle
cmps
out
scas
or
adc
ret
jmp
xor
cld
or
add
fcom
pop
vmovq
jl
or
jge
nop
pop
pop
mov
popf
aam
ret
xor
aaa
push
push
sbb
adc
jl
sbb
jae
cld
fwait
loope
xor
fmul
lock
and
fmul
or
and
sbb
dec
inc
cli
sub
push
add
adc
aas
into
aaa
inc
cdq
add
sub
pushw
sbb
mov
dec
lods
call
inc
and
ret
iret
pop
pushf
sub
leavew
and
or
int3
jle
jecxz
in
std
repz
sub
divps
aas
fsubr
and
lock
faddp
retf
(bad)
or
add
dec
movs
shl
adc
xor
or
shl
inc
cmp
rcl
push
and
fwait
mov
sub
mov
rcl
mov
lock
aaa
add
mov
xchg
add
inc
(bad)
int
push
loopne
scas
mov
clc
sbb
and
jb
pop
and
push
inc
pop
xchg
aam
(bad)
push
call
retf
lahf
cmp
repz
stos
pop
ins
sbb
test
dec
pop
call
add
cwde
inc
dec
dec
and
mov
xchg
dec
jns
or
inc
mov
xlat
mov
mov
addr16
fwait
jmp
adc
mov
clc
adc
mov
cmp
push
push
mov
mov
sub
pop
or
out
sub
and
aaa
xor
xor
push
imul
sbb
adc
test
scas
jmp
push
xor
loopne
fsubr
xlat
mov
call
or
das
fstp
dec
cmp
in
xchg
pop
scas
adc
lods
retf
rcl
sbb
sbb
fnstenv
xor
push
mov
int3
in
mov
jns
es
cmp
out
scas
rol
xor
mov
mov
cmp
daa
push
xor
inc
inc
aas
cmps
and
popf
lock
pop
sub
pop
adc
xor
pop
icebp
cmps
cmc
pop
cld
xor
retf
pop
frstor
push
clc
arpl
(bad)
cmc
bound
mov
add
pop
rcr
jbe
leave
or
adc
pushf
dec
out
out
and
gs
mov
and
stc
inc
aas
repnz
inc
or
stos
clc
sub
jecxz
push
cmp
add
daa
jl
scas
mov
call
mov
(bad)
(bad)
mov
xchg
in
mov
lods
inc
adc
lds
sahf
std
push
xlat
jae
pop
cwde
(bad)
std
sahf
pop
lahf
jno
cmp
adc
test
or
xor
in
adc
jl
push
(bad)
std
add
and
sub
jmp
pop
pop
hlt
outs
sti
(bad)
scas
fwait
loop
cmp
xchg
nop
fsub
test
xor
cmc
int
cmp
add
cmp
mov
out
js
or
cli
push
cmc
scas
cdq
ss
ins
mov
push
mov
jb
(bad)
push
cli
cmps
(bad)
mov
add
test
pop
aaa
js
and
icebp
jmp
addr16
push
outs
outs
xchg
pop
test
mov
cmp
xchg
mov
xor
popf
aam
jae
ins
cli
hlt
mov
jmp
std
jg
inc
cmp
cmp
xor
fld
jnp
adc
sbb
xchg
cmp
pushf
sbb
lahf
cld
shl
sub
dec
dec
xchg
mov
and
in
mov
jmp
cs
mov
cmp
cmp
iret
out
scas
adc
mov
cs
push
in
es
jne
xchg
inc
aam
bound
lahf
(bad)
int3
cs
mov
out
stos
setne
mov
pop
imul
jnp
stos
aam
jge
mov
or
pop
jo
lds
in
call
mov
adc
dec
dec
pop
inc
imul
mov
push
ret
in
imul
mov
push
push
sub
shl
and
sti
clc
jl
and
pop
mov
pushf
xor
xchg
shl
imul
or
test
mov
adc
imul
push
loope
pusha
es
lds
leave
maskmovq
imul
hlt
push
lods
popf
adc
mov
jg
inc
div
pop
pop
pop
stos
mov
mov
lahf
cs
or
rcl
ret
dec
push
fs
xchg
call
cmps
js
(bad)
xchg
popa
outs
push
das
dec
pop
test
cmp
fld
inc
mov
add
test
mov
ja
xor
test
xchg
lods
ficomp
xchg
inc
fiadd
(bad)
jae
pop
pop
les
jle
out
fnstcw
push
push
pop
push
std
adc
cli
or
push
neg
fisub
push
addr16
mov
imul
les
pcmpeqw
mov
fdivr
or
xor
xchg
imul
add
into
sbb
bound
adc
(bad)
cmp
jne
add
adc
das
fnstsw
mov
(bad)
or
mov
repz
xchg
pusha
sar
inc
sub
mov
push
pop
cmc
inc
sub
inc
cli
mov
test
outs
retf
aas
imul
sub
loop
mov
jo
push
(bad)
jmp
inc
lods
inc
dec
lods
inc
mov
pop
sub
cmp
inc
jmp
push
jl
jne
lahf
sub
(bad)
fisub
cmp
rcl
movs
mov
jb
mov
xor
mov
imul
mov
fs
cmp
icebp
mov
add
xchg
pushf
dec
(bad)
push
sahf
jge
sub
push
mov
imul
call
dec
push
shl
push
sbb
pusha
(bad)
movs
add
lods
cld
sbb
ja
jge
sbb
add
dec
adc
imul
sbb
dec
stos
sub
icebp
jae
cmp
(bad)
inc
mov
mov
dec
jo
or
mov
dec
cmp
setge
pop
adc
or
test
leave
in
addr16
fld
cmc
int
in
jp
iret
mov
ins
inc
fldcw
add
rcl
stc
shr
xor
(bad)
nop
mov
arpl
or
xchg
add
add
xchg
nop
ret
cmc
shl
add
and
test
and
test
repnz
push
inc
jb
in
jmp
jo
xchg
cwde
arpl
mov
lods
es
test
xor
(bad)
push
(bad)
or
and
jo
sbb
ins
xor
xchg
dec
in
leave
fisubr
test
or
sub
and
(bad)
je
ss
push
aam
mov
ins
and
aam
dec
cwde
add
pop
mov
ss
test
sbb
test
inc
stos
dec
cmc
and
push
dec
inc
xchg
dec
les
jbe
adc
xchg
push
cmps
int
and
inc
jbe
rcl
std
cmp
xchg
sbb
and
jnp
inc
cwde
jecxz
pop
ds
out
xor
stc
xchg
fadd
pop
out
xchg
ret
push
inc
xor
mov
popf
sub
arpl
sub
fnstcw
imul
mov
adc
xchg
in
inc
mov
ja
or
mov
jno
sub
xor
and
add
push
cmp
call
dec
mov
movs
mov
mov
jecxz
sub
mov
pop
mov
icebp
or
(bad)
cmps
(bad)
into
inc
movs
mov
das
out
clc
and
loop
fstp
mov
mov
dec
or
cmp
ins
pop
bnd
sbb
inc
out
ficomp
aam
pop
aaa
ja
push
jb
sbb
mov
push
imul
mov
adc
and
fs
mov
push
xor
adc
repnz
in
lods
repnz
mov
fdivr
mov
jb
stos
stos
xor
clc
push
and
int3
pop
mov
stos
pop
or
pop
shl
pop
or
jg
lahf
lods
mov
fxch
push
fcomp
xor
cmp
pop
xchg
jp
sbb
pop
fist
pop
pop
mov
lds
(bad)
gs
ins
test
push
mov
pop
aam
pop
ja
sahf
imul
setb
in
repnz
(bad)
sub
mov
fistp
arpl
hlt
cmp
not
adc
int
(bad)
xlat
push
jbe
cli
cmp
mov
rol
mov
fdivr
sbb
xor
into
pop
mov
jnp
push
jp
and
pop
push
or
popf
and
xlat
cmp
retf
xchg
js
cli
xlat
bound
mov
scas
xchg
sub
test
mov
xor
arpl
sub
adc
adc
cmp
(bad)
pusha
pop
mov
into
dec
jg
adc
jge
adc
rcl
shl
or
lahf
std
(bad)
in
jnp
push
jle
cmp
rcr
jbe
test
(bad)
movs
jmp
pxor
push
aam
mov
out
inc
cmp
push
retf
xor
push
pop
xchg
popa
int
outs
sbb
jne
les
or
add
shr
prefetch
or
xchg
jmp
dec
ret
enter
mov
add
jo
inc
ja
scas
outs
inc
in
stos
cmp
cmp
jecxz
push
xchg
int3
pop
aaa
dec
shr
(bad)
in
mov
mov
fcmovnu
leave
enter
mov
mov
(bad)
add
mov
mov
stos
xchg
xor
nop
cmp
outs
dec
jl
(bad)
mov
pop
mov
and
xchg
clc
push
add
fs
outs
daa
or
aas
loope
outs
add
adc
(bad)
(bad)
(bad)
sub
xchg
adc
mov
sahf
sbb
xchg
mov
std
loope
mov
loope
xchg
mov
cwde
lea
inc
in
popa
fstp
sbb
cmps
shl
das
aad
test
jl
mov
dec
push
aad
ror
inc
ds
rol
xor
ds
push
dec
mov
inc
shl
or
mov
cdq
shl
stc
popf
cmp
in
jne
dec
jecxz
enter
movs
(bad)
loope
push
clc
loope
adc
adc
xor
out
cmps
mov
inc
pop
pop
push
dec
adc
(bad)
mov
xchg
or
pop
adc
cmp
push
xor
xchg
mov
(bad)
imul
xchg
add
push
push
pop
mov
xor
daa
movs
jl
ret
inc
adc
fsub
sbb
jecxz
daa
out
es
stc
jmp
xlat
ja
retf
rcl
sbb
sbb
cmps
xchg
sbb
xchg
arpl
rcl
jmp
add
sub
in
scas
sub
inc
movs
fsubr
pop
xor
into
scas
mov
add
adc
(bad)
fistp
sub
or
lea
push
cmp
shr
aad
ret
dec
call
data16
in
clc
xchg
mov
retf
pop
sar
fs
(bad)
jp
aam
mov
fwait
adc
and
rcl
aas
dec
mov
das
and
adc
rcl
dec
inc
lar
pop
sub
adc
mov
push
cs
sbb
cmp
mov
xchg
test
cs
cmp
shl
lods
test
cdq
lods
push
sbb
sbb
sti
push
out
or
sbb
ins
cmp
xor
lods
arpl
mov
aad
pop
movs
xor
popa
push
inc
pop
inc
rcl
cdq
ss
out
push
xor
fist
cwde
aam
nop
mov
data16
cmp
adc
sbb
or
scas
(bad)
(bad)
dec
movs
cmp
xchg
push
adc
xor
in
aas
ret
dec
scas
js
fwait
in
fdivp
cmc
fs
push
out
ret
mov
cmp
add
in
and
call
jmp
js
arpl
adc
or
arpl
in
push
pop
mov
pop
sbb
pop
and
cmps
outs
jmp
cmp
mov
fnsave
push
xor
int
add
out
dec
ret
scas
dec
enter
in
aad
(bad)
cld
pop
jecxz
lods
into
mov
ins
or
(bad)
inc
add
mov
fs
call
mov
xchg
(bad)
adc
jno
pop
movs
mov
ret
mov
std
mov
adc
sub
in
or
or
test
add
test
mov
popa
xchg
xchg
mov
adc
mov
sbb
sbb
xor
mov
arpl
in
test
push
xor
adc
nop
in
xchg
xchg
test
fbld
adc
xor
ds
jbe
test
movs
adc
fst
and
jnp
fsubrp
jg
in
jno
pushf
nop
test
sub
and
test
jne
push
sbb
sbb
mov
idiv
rcr
adc
test
push
sbb
jg
mov
aaa
jne
cmps
in
jae
mov
inc
pop
call
adc
inc
(bad)
cmp
pop
push
xor
mov
xor
or
push
mov
jecxz
fcmovnb
pop
jns
out
popa
jo
mov
(bad)
emms
xchg
out
out
int3
test
or
mov
stos
pop
lds
add
adc
mov
out
mov
aas
mov
stc
mov
or
clc
inc
add
xor
fmul
xor
dec
arpl
add
or
pop
xchg
xor
push
push
cmp
mov
sub
retf
sub
adc
outs
cmp
xlat
mov
add
int
push
int
cld
retf
in
cmp
push
push
ret
sbb
jle
(bad)
adc
pop
dec
mov
add
popa
stc
mov
add
jbe
jno
in
daa
jbe
push
ins
and
xlat
mov
fs
loope
jge
push
aas
inc
or
push
mov
inc
scas
mov
repnz
lahf
jns
dec
jge
ins
jmp
adc
ficomp
outs
mov
lock
mov
xchg
dec
or
or
lock
jne
ss
mov
xor
mov
jbe
mov
cmp
push
retf
push
push
fdiv
aam
jns
(bad)
push
out
jl
sti
stos
(bad)
or
test
rcl
adc
or
and
inc
popf
mov
pushf
pop
pushf
shr
test
test
imul
mov
mov
cmp
repnz
xchg
es
jl
adc
mov
ret
xchg
cwde
les
pop
pop
jg
fidiv
fmul
xchg
and
pop
jno
adc
mov
ds
sbb
dec
pop
jns
mov
dec
and
push
cli
xor
shr
int3
test
cwde
push
loop
call
das
aam
loopne
fucom
pop
mov
cs
fnstenv
cli
or
(bad)
mov
jbe
sub
xchg
clc
sbb
(bad)
push
dec
inc
push
std
aam
ficom
push
mov
add
imul
mov
out
call
jo
sbb
imul
adc
adc
dec
ins
in
ds
sbb
mov
mov
mov
jb
aaa
sar
ret
ret
pop
mov
xor
je
mov
xchg
ror
imul
dec
mov
jns
jne
add
sub
xchg
jne
mov
nop
adc
mov
cmps
fisubr
stos
imul
fwait
mov
scas
les
inc
fcom
inc
xor
cmp
and
mov
jnp
ss
mov
test
adc
cs
jb
mov
push
test
lods
icebp
(bad)
jecxz
pop
mov
mov
aaa
bound
sub
push
aaa
inc
push
mov
mov
outs
sbb
jno
pop
repnz
gs
out
and
repnz
(bad)
pop
push
mov
push
mov
cmp
test
mov
movs
xchg
add
sub
lea
cli
iret
dec
xor
ja
push
das
les
add
mov
test
iret
cmc
cmps
ins
fidiv
push
movs
xor
fst
cmp
cmps
and
mov
jnp
lock
movs
xchg
ins
xchg
sub
(bad)
pop
cmp
xor
mov
pop
ret
call
and
inc
idiv
and
in
sbb
leave
in
xchg
and
cdq
out
push
iret
popa
loopne
not
leave
ss
retf
mov
pushf
mov
mov
jecxz
xchg
sbb
cmps
scas
xor
test
ins
sbb
retf
sub
xchg
in
xor
movs
or
lds
xchg
in
mov
inc
inc
push
data16
cmps
std
inc
or
pop
xor
sbb
es
dec
das
fmul
(bad)
(bad)
dec
lods
in
or
jmp
pop
mov
hlt
xchg
sbb
inc
or
cli
mov
inc
dec
lahf
xor
addr16
ds
aad
sbb
addr16
and
out
mov
pusha
out
pop
out
loope
mov
pusha
sbb
ret
shl
fcom
in
jns
ret
out
adc
sub
mov
xor
or
push
addr16
fild
in
inc
aas
or
mov
mov
cmp
mov
lea
xor
cdq
or
sahf
enter
in
inc
pop
in
add
rol
lock
sbb
cmp
call
call
inc
push
xchg
call
movs
test
cmp
cdq
push
sub
cmp
push
sub
adc
std
push
or
xor
inc
push
sbb
or
sbb
xchg
jb
into
sbb
xlat
loopne
dec
out
mov
mov
cdq
xchg
jno
xchg
fidiv
outs
(bad)
mov
rcl
out
aad
xchg
dec
(bad)
pop
mov
daa
call
fcom
mov
scas
out
or
push
lods
daa
adc
pop
pop
movs
jo
pop
outs
ss
mov
cwde
sbb
dec
movs
call
ja
cmp
sub
jns
pusha
jno
pop
ins
mov
sub
lock
mov
outs
ret
ins
(bad)
dec
lahf
daa
fst
fldenv
inc
mov
sub
(bad)
push
icebp
(bad)
out
dec
mov
jle
mov
cs
les
push
cmp
aad
xchg
adc
iret
or
jnp
push
cmc
jmp
mov
sbb
dec
jle
mov
or
test
es
push
sbb
sti
add
mov
outs
pop
and
xchg
scas
loopne
popa
loopne
xor
sbb
out
icebp
and
mov
sbb
ror
sahf
sbb
add
aam
in
scas
inc
ins
mov
xchg
test
aam
mov
sbb
pop
jns
lods
adc
cmp
sbb
jbe
ret
jbe
shr
scas
cld
imul
cmc
mov
xor
xchg
pushf
hlt
movs
push
mov
jns
lods
lods
pushf
leave
in
fdivp
loop
dec
ja
add
arpl
and
or
push
jnp
sub
jno
mov
sub
(bad)
xor
stos
sbb
jecxz
and
(bad)
jnp
cmp
jbe
jbe
jmp
adc
mov
push
mov
lahf
xchg
mov
cmp
jp
mov
ret
mov
mov
call
push
sbb
inc
enter
jg
jl
adc
jne
cld
mov
jg
mov
mov
clc
dec
rcr
dec
(bad)
pop
inc
std
mov
sar
mov
cmp
pop
sahf
xchg
jno
fst
mov
xchg
out
je
div
sar
add
aas
ja
out
push
stos
inc
add
adc
pop
gs
adc
aas
sub
ds
out
in
push
dec
retf
push
mov
mov
rep
cld
mov
adc
and
xchg
xchg
push
repz
push
push
jbe
push
xchg
pushf
push
sysexit
mov
mov
fild
call
xchg
push
dec
repnz
js
and
hlt
(bad)
fsub
push
mov
fxch
cmp
inc
cmp
dec
movs
mov
or
dec
mov
pusha
adc
or
push
push
popf
daa
dec
add
adc
jns
push
and
rcr
and
cld
scas
test
pop
rcl
pop
inc
scas
add
dec
mov
or
cmp
les
push
retf
xor
mov
cmps
xchg
das
xchg
dec
jle
shl
pop
sbb
add
and
mov
jg
call
xchg
pop
les
pusha
in
call
or
test
fisttp
mov
dec
mov
add
sbb
jmp
gs
add
test
pop
dec
dec
pop
test
mov
adc
das
inc
cmp
clc
stos
cmc
cs
or
cmps
movs
adc
std
mov
xor
out
mov
out
fwait
mov
imul
imul
push
aad
xchg
sahf
adc
cmp
push
fcom
int3
dec
outs
and
and
mov
lahf
pushf
push
stc
out
mov
loop
in
repnz
push
or
fisttp
(bad)
std
adc
mov
mov
shr
pop
pop
or
fistp
int
sbb
je
outs
pop
idiv
in
jge
in
xchg
jl
call
mov
dec
jge
xor
fild
mov
xchg
add
pop
in
mov
sbb
dec
fld
mov
and
into
dec
ret
or
xchg
call
enter
mov
dec
enter
push
adc
enter
cmp
or
xor
(bad)
pop
test
sbb
mov
fwait
ret
jle
push
push
jmp
and
sub
movs
in
xchg
lods
loop
outs
lds
repz
xchg
add
and
arpl
and
test
mov
jo
cmc
push
add
arpl
pop
enter
inc
ret
mov
aad
dec
sub
push
(bad)
pop
sbb
cdq
ret
cmp
jo
retf
dec
xchg
rcr
and
cmc
mov
cwde
xor
add
mov
jns
lods
ror
adc
retf
popf
leave
int
sub
mov
jecxz
and
int
pop
adc
sub
pop
les
out
jne
rcl
mov
loop
sahf
aas
(bad)
out
push
mov
or
sbb
ja
movs
cmp
push
repnz
mov
cs
mov
movs
cdq
jbe
sbb
dec
add
xor
or
jmp
mov
fld
dec
jnp
les
sbb
inc
mov
or
stos
mov
jp
sbb
cwde
(bad)
push
and
mov
xchg
mov
stos
test
push
mov
jno
xlat
fsub
add
test
cmp
push
sub
in
out
jmp
rol
mov
retf
push
scas
gs
sub
mov
or
sub
jno
clc
loop
jle
mov
or
mov
pop
mov
and
add
rol
popf
xchg
test
pop
in
scas
add
push
scas
sbb
mov
je
pop
stos
dec
sub
test
movs
push
mov
sub
nop
jecxz
add
ins
in
(bad)
ja
popf
js
mov
ins
nop
mov
add
cmp
pop
pop
sbb
mov
push
pop
pop
mov
mov
ja
cmc
pop
mov
adc
mov
(bad)
ds
movs
nop
movs
xchg
nop
pop
push
cdq
inc
adc
(bad)
mov
pop
or
push
shl
push
std
and
int3
mov
or
mov
push
inc
rol
jg
loopne
out
inc
inc
jge
inc
jge
into
retf
(bad)
popa
sbb
fstp
rcl
fst
aad
scas
pushf
jnp
ret
into
or
(bad)
in
mov
out
and
adc
mov
es
mov
pop
sub
sub
bound
fs
xchg
pusha
popa
pusha
movs
adc
scas
jns
xlat
dec
lock
push
outs
in
xchg
test
addr16
inc
stc
jmp
adc
ds
sub
jns
test
fadd
out
shl
into
ins
in
pusha
imul
test
pop
jo
push
sbb
mov
test
ins
ficomp
pop
nop
out
xchg
xor
ins
adc
pusha
sub
std
sub
dec
mov
xor
xor
and
push
retf
pop
and
scas
dec
inc
pop
xor
in
lods
mov
add
inc
pushf
push
in
loop
mov
js
les
mov
popf
pop
sub
or
pop
cmp
adc
xor
test
add
add
inc
std
leave
test
lods
cmc
dec
xor
inc
cli
cs
push
in
and
ins
xor
mov
pop
loopne
push
or
mov
(bad)
or
outs
in
jae
stos
lds
cli
movs
ja
test
jno
clc
xchg
(bad)
in
scas
popf
retf
and
mov
popf
lock
icebp
fimul
xchg
xor
sbb
push
mov
fsub
in
push
jnp
xchg
ss
std
jb
push
scas
sub
jmp
or
fdivr
inc
add
pop
cli
xchg
pop
dec
inc
fisttp
push
jmp
in
pop
and
pop
shr
enter
add
je
push
les
mov
mov
pusha
nop
pop
div
mov
xor
and
aas
push
clc
stos
cmp
lahf
popa
add
test
sbb
mov
add
dec
pop
sub
(bad)
jb
mov
call
cmp
push
(bad)
sub
repz
jmp
jp
ret
mov
or
xor
sbb
dec
das
cmc
lea
je
sbb
popa
in
dec
test
(bad)
jmp
in
inc
test
inc
imul
(bad)
jb
lds
aam
mov
arpl
push
mov
iret
or
mov
inc
je
fld
mov
xchg
adc
fdivr
jne
inc
inc
jns
jg
out
inc
lahf
enter
fistp
and
xchg
repz
sub
fistp
mov
dec
xchg
jns
(bad)
shr
nop
mov
adc
stos
movs
out
and
dec
sbb
arpl
loopne
ret
jmp
mov
sub
ss
xor
shr
daa
pusha
pushf
xor
mov
mov
jno
inc
jl
addr16
ds
or
jecxz
gs
int
stc
ja
or
xchg
ds
test
loopne
(bad)
fwait
cwde
pop
and
or
pop
fwait
pop
and
push
inc
pop
or
(bad)
imul
mov
sbb
push
dec
retf
out
jae
lds
jle
adc
jmp
mov
or
mov
add
out
push
inc
dec
mov
push
xor
mov
cwde
sub
loopne
mov
inc
cmp
fldenv
(bad)
mov
dec
lods
inc
loope
fld
bound
movs
(bad)
fild
outs
fld
mov
int
lock
arpl
mov
std
or
call
test
addr16
or
mov
stc
hlt
xor
jle
test
cli
jmp
aam
mov
cmp
xor
adc
leave
xor
mov
popa
dec
push
daa
lds
out
inc
cmps
xchg
test
loopne
int
retf
leave
int3
ret
loopne
les
pop
in
in
mov
fucomip
test
pop
ror
mov
and
std
lock
es
jbe
add
adc
inc
arpl
and
mov
stos
xor
dec
in
and
jp
and
xor
mov
adc
adc
inc
add
push
sbb
jns
test
pop
std
jl
cwde
(bad)
or
popf
cmp
int
dec
aam
fs
push
add
arpl
(bad)
stos
jmp
mov
push
jmp
(bad)
sub
(bad)
dec
and
cmp
inc
push
mov
js
aas
outs
adc
pop
xchg
loope
cmp
jo
xchg
shl
xchg
mov
and
popa
test
aad
add
xchg
mov
sub
pop
pop
in
pop
pop
adc
adc
add
push
movs
cmp
js
int
pop
sub
sbb
sub
rcr
xor
pop
mov
inc
or
cwde
jl
mov
lea
and
adc
sbb
mov
clc
cli
sti
pop
cmp
push
das
adc
and
adc
iret
or
mov
scas
mov
test
fild
or
and
adc
xchg
xor
ret
shr
inc
fadd
cmps
das
jle
sti
adc
stc
das
loop
push
mov
out
mov
fist
pushf
mov
scas
inc
mov
sahf
sbb
sar
bound
inc
pop
out
shl
mov
jmp
out
inc
fist
test
inc
test
dec
scas
inc
mov
inc
fld
retf
(bad)
les
xchg
fld
cs
or
and
push
in
mov
das
sub
jg
test
popa
fld
shl
jae
inc
cs
call
cld
lar
dec
xrelease
popf
dec
int3
enter
les
mov
push
mov
and
sub
out
cli
imul
pop
mov
retf
and
mov
inc
hlt
fyl2xp1
cmps
cmp
sub
or
mov
sar
gs
movs
mov
push
push
mov
dec
jnp
out
iret
stos
xchg
mov
adc
push
fld
(bad)
mov
add
lock
dec
data16
mov
jo
cmp
mov
push
mov
sub
leave
call
sub
fidivr
stos
or
jp
mov
call
int3
mov
clc
dec
ss
test
and
pop
ret
mov
add
test
cli
neg
push
nop
in
lock
mov
xchg
in
popf
sub
xlat
out
add
mov
add
or
movs
imul
pop
mov
mov
xchg
mov
and
adc
scas
inc
xor
jnp
adc
or
outs
pop
add
xor
adc
jmp
push
jno
sbb
cmp
xor
scas
mov
fmul
xchg
pusha
mov
es
pop
inc
adc
inc
dec
pop
cmp
mov
add
mov
adc
xor
dec
les
cmc
mov
nop
int3
ds
inc
int
xor
loope
ds
push
adc
mov
push
cli
pop
imul
push
mov
std
push
cmp
je
adc
mov
repnz
ret
pop
cdq
(bad)
mov
icebp
je
push
lahf
pop
add
popa
fisub
scas
jg
ror
or
dec
and
daa
dec
or
xchg
in
or
enter
pop
sub
xchg
cdq
mov
or
and
sub
jns
daa
sbb
loope
fdivrp
sub
mov
js
jns
inc
xor
repz
sub
jbe
fnstcw
ss
adc
(bad)
cmp
or
sbb
movs
outs
inc
mov
js
es
dec
add
push
cmp
add
xor
cmp
xchg
scas
adc
lds
nop
lock
retf
(bad)
ror
data16
push
jmp
mov
inc
shr
push
movs
add
bound
xchg
fldcw
lock
sub
cmp
mov
add
dec
mov
test
test
aad
fwait
sbb
mov
mov
div
dec
xchg
and
rep
fwait
dec
pop
and
xor
dec
mov
iret
adc
pop
and
sbb
sub
out
pop
xchg
mov
add
xchg
stos
repnz
pop
jne
mov
xor
cmp
jno
push
das
(bad)
jmp
inc
(bad)
jl
cmp
and
movs
fdiv
bound
cmp
cmps
jle
dec
call
pop
shl
pop
or
pop
inc
add
mov
pusha
outs
push
cdq
jo
jb
(bad)
lock
mov
std
pop
jae
and
ds
xchg
jp
push
push
dec
add
mov
or
stc
jmp
jp
fild
ins
jmp
mov
loop
shl
gs
xor
push
stc
push
arpl
mov
iret
xor
or
in
jns
fadd
push
jmp
adc
push
mov
inc
daa
add
repz
popf
daa
and
lea
xchg
into
add
push
pusha
push
and
sbb
xor
popf
pushf
int
xchg
cmp
mov
(bad)
and
iret
push
xor
or
jp
call
pop
(bad)
call
repz
jl
mov
(bad)
mov
hlt
pop
js
loope
add
adc
and
cwde
pop
cmps
sub
jle
out
push
pop
adc
stc
mov
in
ret
mov
adc
adc
push
and
xor
iret
inc
xor
sbb
retf
gs
adc
int
inc
mov
movs
pop
jle
pusha
mov
inc
jne
cmp
dec
call
and
into
inc
jae
jnp
add
fidivr
and
push
cwde
out
jmp
loopne
adc
xchg
jg
cmc
mov
dec
pusha
ret
call
sub
sbb
div
inc
xchg
aaa
das
jecxz
mov
adc
sti
retf
cld
push
cwde
inc
ins
xor
sbb
cmps
pusha
(bad)
mov
lods
push
xchg
out
xchg
dec
test
das
push
mov
es
mov
daa
mov
cld
cli
sub
mov
inc
add
ss
test
jbe
in
push
cmp
add
xor
adc
call
mov
cmp
int
or
adc
xor
add
adc
sub
aad
and
sub
add
mov
dec
movs
(bad)
retf
ss
(bad)
and
in
sbb
push
lock
pop
dec
mov
es
aaa
sub
hlt
push
sub
or
sub
rol
pop
and
sbb
xchg
call
fstp
xchg
mov
adc
(bad)
imul
outs
mov
cli
push
sbb
dec
popf
aaa
out
sub
xor
add
or
(bad)
arpl
sub
shr
stos
ja
mov
sub
cmps
out
repz
inc
lods
pop
mov
(bad)
push
xchg
jnp
jg
dec
out
xchg
pop
inc
mov
popf
add
xchg
inc
leave
scas
push
xor
xor
dec
xchg
mov
adc
xchg
imul
cs
aad
ins
cmc
push
inc
retf
sub
inc
xor
push
shr
in
mov
add
(bad)
imul
sbb
xor
add
lock
int3
adc
cmp
call
lods
ss
pop
test
sub
fwait
push
cmp
shl
jnp
mov
pop
arpl
(bad)
rcr
xchg
add
dec
in
sub
mov
mov
int
(bad)
rol
lds
(bad)
push
arpl
jmp
loop
aas
mov
adc
out
dec
cmc
inc
cwde
lods
mov
mov
retf
dec
mov
push
jle
mov
xchg
je
sub
lahf
sbb
lahf
add
ss
mov
mov
imul
push
adc
pop
mov
stos
std
xor
(bad)
rol
add
sub
stos
(bad)
jo
out
jmp
jns
lds
jecxz
and
mov
push
(bad)
pop
pop
outs
lock
out
push
cmp
js
sar
stos
mov
fiadd
inc
sbb
lods
jp
movs
mov
(bad)
aad
mov
pushf
ret
cmp
and
sub
call
dec
xor
push
movs
or
push
inc
scas
jp
and
rol
in
aam
sub
sub
push
and
(bad)
ret
mov
push
movs
into
es
sti
(bad)
sbb
sub
pop
enter
adc
jnp
xchg
or
(bad)
dec
add
cmc
into
pop
daa
jp
pusha
xor
repz
ret
adc
xchg
push
sbb
adc
out
push
xor
or
imul
mov
sbb
mov
shl
imul
add
adc
not
repnz
xchg
test
and
push
mov
jbe
sbb
loop
cmp
xchg
pop
popa
jmp
sub
ret
hlt
inc
addr16
mov
sbb
mov
sbb
(bad)
pop
fmul
dec
jge
hlt
shl
rcl
jne
sar
adc
sbb
or
sbb
adc
daa
cmp
fistp
arpl
dec
mov
xchg
in
inc
repnz
scas
shufps
ret
iret
cmp
enter
pop
push
jo
xchg
dec
je
test
repnz
cwde
xor
test
inc
fcom
cmp
adc
scas
push
inc
lods
ss
cs
cmp
lds
mov
ss
or
rcr
cli
clc
mov
or
loope
jb
iret
ins
(bad)
jae
xor
sub
pop
pop
dec
cmps
sbb
retf
arpl
in
test
aaa
imul
xchg
mov
pop
inc
sti
loope
bound
or
xchg
xor
fcomp
xchg
das
mov
mov
lahf
mov
(bad)
and
mov
xchg
xchg
fisubr
aaa
add
sbb
retf
mov
int
nop
mov
push
(bad)
movs
fcomp
mov
cmp
add
push
jle
mov
call
mov
outs
das
in
sbb
mov
nop
jbe
mov
fdiv
sub
call
inc
hlt
push
push
test
add
dec
arpl
lahf
pop
pop
push
leave
and
xchg
jl
push
retf
jmp
cmp
sub
scas
call
jnp
sti
adc
or
cdq
je
inc
pop
inc
adc
scas
inc
and
cmp
push
pop
cmc
mov
cld
pop
or
xchg
data16
xchg
rcr
fdivr
jmp
adc
test
mov
mov
jmp
daa
bound
push
and
xchg
dec
das
std
jmp
ins
neg
out
push
jo
out
movs
or
push
add
ret
jmp
test
jp
jl
sub
fstp
bnd
cs
xchg
dec
adc
int
leave
adc
out
xor
repz
pop
add
dec
fmul
dec
inc
cmp
mov
aaa
mov
jmp
retf
jp
mov
pop
out
cmp
and
cmps
xchg
retf
add
into
cmp
jo
jns
add
dec
mov
add
outs
jbe
jnp
(bad)
out
adc
mov
pop
(bad)
add
cmp
inc
out
xchg
je
jle
shr
and
je
dec
xchg
cmps
inc
xor
push
adc
mov
in
and
jnp
adc
xor
fidiv
test
(bad)
jmp
out
dec
mov
xchg
and
movs
cli
pop
pop
inc
adc
mov
push
jno
stc
call
sbb
out
stos
push
mov
xor
jmp
adc
addr16
loopne
sub
push
mov
mov
clc
pmullw
push
mov
stos
int
mov
push
push
add
movs
clc
sbb
(bad)
pop
outs
mov
inc
xchg
call
mov
out
retf
cmp
mov
ins
or
jb
in
pop
and
or
xchg
add
in
gs
push
pop
jmp
cld
fst
sbb
cmp
dec
pop
push
sub
mov
(bad)
lock
jmp
addr16
or
mov
ficomp
push
inc
pop
jo
out
push
pop
loopne
or
ror
dec
(bad)
adc
inc
call
neg
jbe
xor
xor
daa
call
movs
jecxz
and
std
sub
iret
push
jne
movs
jns
fwait
scas
pop
mov
les
mov
adc
ds
jbe
fld
test
or
push
and
mov
je
fld
add
and
and
aad
and
adc
outs
lahf
jp
jg
call
or
ja
daa
aas
inc
dec
push
xchg
dec
pop
cmp
mov
fnstenv
out
inc
sub
mov
pop
mov
iret
imul
shl
inc
lock
fwait
mov
and
dec
mov
imul
mov
lods
pushf
enter
pop
imul
js
fld
movs
sub
jo
inc
(bad)
in
int
retf
cs
popa
cli
call
jmp
mov
gs
sub
mov
push
cmps
xor
movs
sub
pusha
mov
sti
jnp
ja
mov
jecxz
push
ds
or
loopne
sbb
dec
jae
jg
fbld
cwde
retf
(bad)
or
cmps
mov
rcl
sbb
cmp
cmc
cld
ins
jne
mov
dec
mov
mov
mov
stc
mov
cmp
icebp
sahf
inc
push
pop
int
jmp
pusha
test
mov
or
inc
sar
inc
mov
cmp
fadd
out
cmp
cmp
test
adc
fwait
mov
imul
aam
sbb
xchg
push
dec
xchg
pop
ret
scas
pusha
sub
jne
outs
int
out
hlt
std
imul
add
push
js
pop
je
inc
shl
dec
add
and
inc
lds
xchg
fsubr
pop
xchg
(bad)
(bad)
fbstp
or
and
pop
jns
jmp
shl
in
jp
dec
jp
or
fs
lods
jle
retf
test
mov
mov
(bad)
daa
xchg
retf
ja
xchg
sti
jecxz
call
mov
xchg
retf
push
call
ds
iret
and
sbb
push
popa
out
and
clc
dec
test
mov
push
retf
mov
leave
in
and
xor
mov
(bad)
xchg
jle
jmp
dec
ds
xchg
adc
in
push
sti
and
popa
ds
pop
pusha
ins
es
es
mul
(bad)
in
int
or
cmps
or
sub
dec
push
clc
ficomp
xor
xor
and
(bad)
mov
rcl
adc
pop
mov
mov
mov
cmp
into
ins
stc
jb
mov
mov
retf
xor
nop
aad
mov
and
fistp
pop
cmp
pushf
sub
mov
and
pop
dec
ret
cmp
call
pop
dec
cmp
(bad)
stos
xor
out
inc
pop
cwde
icebp
xchg
fwait
test
push
xlat
adc
sahf
jge
into
mov
cmc
sub
add
pop
mov
xchg
cmp
jp
or
add
lods
cdq
adc
fisub
fst
enter
inc
mov
cwde
inc
push
sub
jmp
iret
push
or
inc
cmp
and
cwde
rol
mov
push
mov
movs
adc
mov
(bad)
mov
(bad)
xor
jo
out
or
out
loop
call
mov
pop
push
mov
mov
push
pop
push
dec
retf
push
push
cmp
and
inc
(bad)
in
inc
int3
sub
dec
add
cs
or
js
xchg
fsubr
mov
bnd
push
sbb
mov
cmp
add
dec
(bad)
or
xor
cmps
fistp
addr16
sub
(bad)
push
adc
sub
and
xchg
sbb
mov
jne
int
adc
and
(bad)
sar
retf
cmp
inc
push
xor
repz
xor
mov
and
sub
xchg
mov
mov
(bad)
push
pushf
cmps
adc
hlt
or
adc
and
ret
xor
cmc
or
pop
out
(bad)
cdq
add
cmc
push
sbb
enter
sbb
cld
cmp
fs
and
push
jno
mov
push
outs
call
mov
sbb
mov
cmp
pop
test
pop
push
xor
sub
xor
sar
or
inc
shr
and
fwait
or
add
adc
test
jae
or
push
lahf
(bad)
jbe
xor
push
ds
scas
adc
(bad)
out
mov
cmp
lahf
or
sbb
adc
pop
mov
fs
jmp
ret
lods
inc
add
jnp
pop
jo
push
jno
sub
std
push
jmp
mov
push
jl
je
scas
int3
fisttp
cs
xchg
add
gs
cmp
inc
mov
imul
dec
(bad)
int3
(bad)
and
xor
outs
repnz
xor
addr16
out
stos
lock
mov
stos
pop
int3
dec
pop
aad
fstp
pushf
aas
in
jne
sub
iret
pop
xchg
popa
push
xor
xor
xor
fwait
aad
mov
add
inc
mov
in
fisub
mov
rcr
pop
pop
lock
mov
das
aaa
pop
mov
or
dec
data16
lahf
mov
mov
aad
ja
xor
cli
rcr
leave
mov
push
inc
inc
cmp
aad
clc
jge
enter
lods
repnz
mov
icebp
add
adc
and
sti
cmps
inc
lock
dec
pop
inc
ja
into
jae
nop
inc
ja
cmps
mov
mov
cli
ds
add
pop
lock
or
fisub
or
shl
push
test
inc
lods
popf
fucomi
aaa
push
xchg
ins
add
push
nop
xor
jp
scas
lock
(bad)
jmp
pop
lds
xchg
out
stc
fbstp
mov
repz
sub
or
mov
test
loope
jmp
mov
push
in
dec
shl
cwde
outs
shr
and
int
pop
xor
and
scas
lock
(bad)
retf
adc
add
repnz
add
sbb
mov
cmps
dec
movs
out
scas
sti
mov
sbb
enter
fldenv
cmp
inc
jb
nop
inc
xor
test
xor
jle
add
fsubr
push
dec
mov
fwait
jo
mov
mov
add
scas
arpl
popa
sub
dec
sub
mov
addr16
and
scas
ins
ret
mov
xchg
cdq
outs
call
mov
add
(bad)
jle
mov
dec
rol
pop
mov
adc
sbb
adc
sub
rcl
jge
stos
add
pop
push
shl
out
xor
cmp
pop
in
cmc
dec
xlat
and
xor
and
push
sub
ins
fbld
call
dec
mov
cmp
pushf
inc
aad
push
pop
jnp
fnstenv
mov
mov
fidiv
cmp
repnz
rcr
mov
(bad)
in
add
in
mov
jbe
xchg
push
cmps
cmp
jmpw
add
rol
add
jge
sbb
xor
sbb
xchg
test
mov
push
test
bound
push
out
xchg
mov
xchg
mov
imul
aaa
xor
jb
sti
cld
mov
pop
sub
mov
cmp
or
outs
rcl
jle
dec
repnz
and
test
mov
mov
jno
pop
rol
mov
pop
xchg
inc
dec
stos
mov
mov
adc
ins
test
idiv
cmp
jnp
mov
cmp
sub
mov
sahf
sbb
and
mov
add
jp
xchg
xlat
retf
push
mul
mov
mov
bound
adc
lods
adc
loopne
pop
xor
outs
loopne
pop
(bad)
into
rcr
sbb
cmps
je
(bad)
xor
pop
inc
jmp
mov
mov
arpl
hlt
cs
out
lods
stos
ins
xchg
lahf
leave
(bad)
movs
nop
leavew
mov
dec
daa
cli
pop
or
repz
dec
mov
push
pop
or
cs
fisttp
pop
popf
mov
jnp
push
movs
test
outs
mov
aaa
popf
inc
sbb
sbb
xchg
jmp
cmp
movs
dec
loopne
out
pop
cs
lds
add
movs
out
pop
dec
mov
out
ret
xchg
setl
push
and
test
xchg
mov
push
hlt
cwde
pop
(bad)
cmps
div
sbb
out
iret
addr16
arpl
and
daa
lods
mov
ror
pop
mov
and
aad
movs
sub
adc
retf
rol
clc
sub
add
sub
mov
or
mov
or
adc
(bad)
push
iret
iret
test
xchg
pop
pop
xor
fsub
add
dec
xchg
ins
repz
sti
ins
mov
int3
inc
out
call
dec
push
dec
call
pop
ja
je
cs
xchg
cmp
retf
xor
xor
imul
shl
movs
repz
cmps
xchg
pushf
mov
mov
jmp
and
loop
adc
or
inc
mov
sbb
fstp
ins
jae
jl
jne
lods
cmp
cmc
lahf
push
pop
or
daa
loopne
cmc
cmp
loopne
mov
test
mov
loopne
call
and
or
std
retf
sti
das
fiadd
mov
les
xchg
xor
rcr
hlt
xor
fimul
mov
int
ja
ficom
sub
out
inc
and
fs
rcl
cld
cmps
scas
push
test
(bad)
fs
pop
push
dec
cmp
cmc
fst
pop
rcr
call
xchg
and
push
xchg
adc
xor
cmps
dec
daa
mov
(bad)
in
jmp
push
push
and
(bad)
ins
in
jb
add
bound
dec
inc
add
xchg
and
xlat
sub
or
cmp
and
mov
sbb
fmul
aaa
aas
enter
xchg
js
outs
jb
imul
ins
stos
or
out
and
jnp
subps
dec
std
jne
mov
sub
dec
xor
int3
std
add
mov
sub
xchg
add
and
and
cmpxchg
adc
inc
push
test
or
std
dec
mov
cs
push
mov
js
or
push
dec
pop
xlat
int3
loop
sub
pushf
xchg
dec
push
out
rol
ret
call
shl
jbe
fisubr
or
call
and
push
bound
aaa
movs
aad
dec
push
psraw
fwait
pop
jp
add
and
imul
dec
add
cmp
and
jle
xor
in
(bad)
call
stc
fadd
xor
cwde
ins
inc
rcl
stos
stc
mov
jmp
loop
push
sar
xor
push
xor
daa
(bad)
sbb
movs
fsub
movq
sahf
push
sbb
out
push
out
push
push
mov
hlt
dec
mov
imul
ja
mov
scas
mov
stc
add
jmp
test
sub
aas
cmp
inc
fld
scas
adc
xchg
mov
cdq
out
sub
jmp
(bad)
cmp
jge
sbb
test
mov
sar
hlt
push
push
xor
aas
cmc
out
jnp
(bad)
dec
jb
arpl
pop
xchg
jmp
cwde
mov
and
or
cli
fnstsw
push
dec
(bad)
pop
inc
sbb
imul
jge
mov
lods
sub
push
jg
div
js
cvtps2pi
add
mov
fld
retf
pushf
enter
loopne
test
xor
mov
mov
imul
push
mov
and
rcl
or
add
mov
jno
jb
mov
cmp
inc
xchg
aam
pop
iret
ja
imul
nop
cmp
call
jle
pop
call
ja
sahf
call
pop
and
and
out
add
mov
shr
add
mov
into
jge
fldcw
pop
jg
jl
enter
mov
jge
xor
xor
push
cmp
pop
mov
mov
retf
dec
mov
or
fstp
mov
push
sub
int
push
(bad)
cld
test
sub
dec
and
inc
cmp
aaa
loop
and
test
cmps
fild
mov
xor
cmp
movs
push
rcr
pop
jmp
test
ins
loopne
(bad)
mov
out
outs
mov
and
mov
sub
push
(bad)
mov
pop
ins
enter
xlat
lods
dec
dec
fistp
cmps
call
cmp
scas
cmp
(bad)
dec
popa
mov
ficomp
sar
js
and
movs
out
stos
sub
xchg
fisub
or
cmp
mov
or
icebp
mov
pop
cmovp
clc
pushf
cmps
xor
mov
lds
sbb
dec
and
das
fst
int3
dec
into
dec
shr
mov
jne
mov
repz
arpl
cld
lods
stos
lods
jno
inc
inc
or
mov
mov
sar
mov
mov
or
pushf
or
es
jo
popf
jns
add
cmp
mov
xor
mov
jl
data16
popa
or
pushf
mov
push
lahf
popa
cmps
cmc
out
add
ins
adc
cmp
adc
lods
cwde
stos
rcl
adc
xor
pop
jmp
bound
mov
movs
fisubr
out
cmc
nop
pop
ror
lods
xor
xchg
xor
mov
dec
jmp
inc
xchg
arpl
pop
or
shl
les
inc
and
(bad)
cmp
and
inc
push
lods
neg
mov
pop
or
loopne
push
sahf
jbe
sbb
test
xor
addr16
pop
in
mov
rcr
push
jne
or
rcr
outs
repnz
xlat
and
mov
and
cs
pop
inc
ret
sahf
fsub
into
(bad)
arpl
test
mov
mov
shl
xor
sbb
sub
data16
pusha
xchg
or
mov
ds
mov
lahf
dec
mov
out
pushf
repnz
jmp
pop
cdq
scas
ret
sahf
mov
mov
mov
adc
mov
xchg
xchg
mov
arpl
stos
fdiv
or
arpl
shr
dec
stos
dec
fdivr
outs
ror
mov
cwde
movs
jmp
loop
and
push
add
pusha
or
push
movs
mov
loopne
ins
es
xchg
push
inc
(bad)
sub
sub
call
and
fadd
ds
inc
push
add
out
movs
xlat
jno
scas
dec
je
ror
lahf
jle
fdivr
pop
dec
adc
sub
mov
bnd
pop
ja
fnstenv
jae
sub
cmp
cmps
pop
sbb
arpl
repz
sub
les
mov
fsubr
hlt
xor
pop
dec
push
mov
xchg
mov
push
mov
cs
xchg
lds
jns
mov
jbe
test
popa
les
rol
jmp
adc
into
mov
adc
leave
jmp
jp
adc
pop
arpl
jns
shr
pop
imul
push
xchg
dec
mov
out
arpl
pop
cld
scas
pop
aaa
or
add
daa
in
jle
lods
hlt
cmp
jp
and
cmp
push
in
push
shr
pop
sbb
add
pop
or
fadd
add
test
add
imul
rcl
jge
pop
call
inc
mov
sub
mov
in
mov
shl
into
loope
cmps
push
sbb
adc
push
sbb
xchg
cmp
mov
push
aaa
lds
inc
shl
xchg
popf
xor
loopne
xchg
push
inc
sbb
xchg
mov
mov
pop
xchg
add
sbb
popf
in
jae
ins
cli
mov
in
mov
mov
test
imul
sbb
mov
ins
inc
cmps
lea
shl
(bad)
repnz
lea
xchg
(bad)
lods
xchg
sti
jge
cwde
imul
xchg
dec
dec
cmp
add
outs
or
call
in
imul
adc
pop
xchg
iret
jmp
adc
pop
test
pop
repnz
add
stc
lds
add
and
lock
fxch
loop
(bad)
ds
add
add
jmp
mov
pop
jbe
loopne
clc
sub
mov
sbb
fisttp
leave
mov
outs
imul
push
sbb
ret
repz
lahf
mov
xchg
into
jle
push
mov
jo
pop
sub
mov
sub
push
fwait
pop
ins
mov
(bad)
cld
ss
inc
aam
mov
retf
mov
ins
sar
imul
popf
add
dec
adc
mov
sti
aas
fnstsw
rol
aad
test
xor
jmp
push
add
xchg
mov
cwde
push
jecxz
mov
jb
daa
fwait
popf
sar
aad
out
mov
mov
(bad)
push
push
daa
out
and
dec
jp
imul
inc
jo
push
mov
lea
push
test
mov
inc
not
xchg
push
mov
cmc
bound
mov
and
adc
xor
jmp
sub
and
cmp
inc
push
pushf
add
scas
pop
sub
aam
pop
(bad)
xchg
dec
or
loopne
or
push
pop
rcr
and
adc
loope
icebp
inc
loopne
retf
loope
adc
mov
xor
lds
jle
dec
ja
add
nop
test
mov
retf
inc
push
mov
aas
arpl
or
xor
cmp
out
int
aam
jns
cmc
fs
cmp
sub
popa
dec
and
xchg
jecxz
adc
pop
mov
idiv
popf
add
push
xchg
(bad)
mov
and
dec
jmp
loopne
nop
add
sub
stos
or
cmp
dec
or
fld
out
sbb
sbb
xchg
pop
(bad)
mov
sbb
push
adc
fwait
adc
adc
adc
add
call
and
rcr
std
or
push
ds
adc
pop
push
cld
cs
push
xor
add
jl
out
pop
ds
frstor
stos
sbb
repnz
cdq
jecxz
sbb
retf
and
cmp
std
inc
mov
or
mov
xchg
cmps
mov
out
jmp
jns
or
mov
jp
aam
hlt
add
sbb
not
sub
or
fadd
sbb
ret
push
xchg
icebp
add
and
mov
push
cmp
inc
xchg
inc
mov
xlat
scas
retf
push
ins
inc
cmp
mov
mov
movs
icebp
dec
imul
or
not
mov
pusha
mov
adc
adc
imul
add
jg
jns
popf
jecxz
mov
stos
loop
sub
jb
push
xchg
push
ds
dec
cmp
mov
and
jecxz
and
jecxz
fldenv
mov
rcl
adc
pushf
pop
or
xor
test
push
adc
shr
int3
jns
(bad)
mov
data16
(bad)
xor
jg
sub
in
imul
xchg
pop
inc
and
aas
pop
jp
and
sub
outs
push
cmc
ins
inc
jo
mov
mov
pop
ss
iret
mov
push
loop
aam
lea
aaa
outs
or
out
jns
retf
out
shr
(bad)
push
push
shl
add
daa
out
repnz
loope
inc
jp
mov
cmp
aad
cmp
and
xor
pusha
stos
sub
in
fstp
mov
adc
xchg
cmp
sub
xchg
sahf
jnp
mov
test
jnp
push
and
lock
repz
inc
pushf
xchg
xor
dec
push
adc
sbb
pop
mov
xchg
or
jmp
xchg
lahf
jb
sbb
inc
retf
cli
push
out
aad
adc
mov
mov
movs
(bad)
cdq
adc
lods
pop
outs
rcr
adc
and
mov
aad
jmp
adc
jae
and
daa
jl
inc
adc
outs
test
js
scas
jmp
cmps
jl
popa
fld
cmps
pop
gs
cmp
fistp
push
popa
mov
sbb
jns
out
mov
mov
je
xchg
xor
adc
sbb
mov
mov
xor
(bad)
dec
adc
xor
pop
add
push
leave
jbe
mov
jecxz
mov
rol
jg
add
or
push
nop
pop
jecxz
sub
lahf
dec
push
push
sub
in
cmc
mov
push
pop
and
out
js
xor
pop
xor
mov
outs
mov
cmp
jne
or
mov
rcl
bound
aaa
jb
movs
sbb
sub
jo
fmul
rcl
scas
mov
out
sbb
sub
sti
or
add
adc
sbb
daa
mov
mov
jle
mov
sti
addr16
xchg
push
sbb
sub
sets
ret
and
cdq
pop
dec
(bad)
retf
sbb
mov
push
pop
cmc
sbb
inc
mov
add
mov
loop
jno
pop
sub
(bad)
mov
outs
adc
xor
pop
in
mov
sbb
pusha
jge
sbb
mov
xor
movs
jnp
data16
jae
addr16
iret
call
add
push
xchg
adc
std
stos
shl
sbb
test
pop
std
aas
icebp
(bad)
push
aad
cmp
mov
inc
and
fwait
das
(bad)
pop
jle
mov
lods
sub
fisub
sbb
frstor
scas
sub
lods
mov
dec
pusha
lea
inc
loope
mov
lock
int
pop
nop
and
inc
and
mov
loope
push
(bad)
lds
sbb
adc
inc
or
ret
bswap
mov
mov
push
xchg
int
pop
inc
popf
sti
jne
out
jae
cli
rcr
mov
imul
arpl
jmp
in
imul
jb
mov
sub
fs
adc
call
add
shr
mov
shl
push
popa
xchg
mov
mov
add
idiv
cmc
sub
cli
mov
lock
(bad)
dec
inc
or
les
hlt
int3
lahf
test
inc
aam
ss
clc
into
sbb
or
add
cmp
adc
mov
mov
lahf
jne
lds
pop
pop
or
pop
hlt
stos
loope
sub
or
hlt
in
out
loope
jbe
lock
cmps
mov
sub
gs
(bad)
mov
jg
push
push
in
(bad)
je
js
sub
dec
je
retf
lock
leave
inc
jge
iret
lock
add
(bad)
push
ja
(bad)
xchg
icebp
add
rcl
test
sar
daa
add
add
pop
sub
cwde
in
xchg
sbb
push
popa
rol
cmp
jecxz
lds
add
repnz
lods
pop
cmp
xchg
(bad)
or
sub
mov
imul
sbb
sahf
daa
test
pavgb
fstp
dec
xchg
jle
retf
in
jbe
(bad)
pop
and
ret
dec
pop
enter
mov
cmp
sbb
push
pop
jb
and
add
or
(bad)
je
xor
(bad)
jb
jno
into
sbb
or
lea
loop
mov
inc
add
add
adc
jmp
div
sbb
xchg
stc
pop
add
mov
lea
inc
adc
pushw
inc
fdivr
data16
jae
pushaw
dec
lahf
cdq
je
pop
jp
jo
sbb
add
loop
shr
rcr
mov
mov
add
push
xor
pop
xchg
cmp
dec
mov
out
adc
sbb
xor
inc
xchg
outs
add
sbb
iret
ins
(bad)
dec
adc
xor
rol
mov
lds
or
add
adc
mov
xor
or
mov
lods
add
and
ins
dec
cli
adc
push
call
xchg
xor
fild
pop
jl
aam
es
mov
and
add
jne
aam
rcr
adc
push
or
mov
mov
popf
fxch
aad
sub
mov
and
jne
add
pushf
outs
cmp
inc
dec
fisttp
call
xor
adc
pop
jno
adc
mov
in
pop
or
dec
in
in
in
ins
rcl
sbb
movs
mov
pop
aam
adc
js
add
loope
ficom
in
stos
adc
repnz
fisubr
nop
daa
sub
fbstp
in
mov
call
not
mov
int
and
cs
cmp
pusha
nop
pop
test
movs
adc
je
push
jnp
pop
idiv
push
and
and
jg
fwait
xchg
(bad)
adc
cmp
sub
imul
ror
scas
and
repz
test
jmp
xlat
clc
adc
mov
pop
retf
(bad)
jecxz
out
ins
xchg
inc
sub
int
arpl
lahf
jns
bound
ins
imul
xchg
xchg
mov
ja
sti
test
aad
retf
ss
fs
dec
cld
iret
sub
add
int3
test
rol
sahf
dec
lods
(bad)
inc
xchg
xor
inc
cmp
call
fisubr
xchg
shl
movs
jno
xchg
out
aam
or
xchg
scas
cdq
sahf
jmp
shl
xchg
cmp
cmp
sbb
out
cld
mov
test
pushf
jle
test
push
inc
jmp
mov
add
les
shr
push
stos
gs
dec
cs
xchg
adc
clc
mov
mov
dec
mov
(bad)
out
lds
in
and
fs
adc
xor
fisubr
mov
mov
xchg
nop
loopne
push
jnp
adc
pushf
mov
add
sub
es
imul
out
add
popa
push
mov
repnz
inc
push
cmc
jne
inc
pop
mov
ins
sub
icebp
popf
jno
mov
push
sub
jl
sbb
mov
or
arpl
adc
mov
jmp
das
mov
pop
call
mov
sub
in
loop
test
mov
jmp
pop
fs
sbb
std
mov
es
xchg
or
add
fcmovnu
rol
ret
in
pop
fnstcw
mov
retf
jns
cli
push
cs
pop
jbe
imul
inc
pop
fstp
dec
nop
or
pop
mov
jp
sbb
or
xchg
xchg
and
pop
fst
sub
cmp
xor
cmp
or
xchg
dec
jne
sub
fwait
sub
sbb
popf
stc
adc
pop
mov
xor
ds
in
stos
int3
cdq
mov
xchg
mov
xchg
and
stos
mov
cld
imul
pop
add
xor
lock
imul
mov
adc
mov
inc
cmps
push
cmp
or
ucomiss
test
jmp
and
xchg
lods
nop
ficomp
test
imul
sub
iret
jbe
push
shl
pop
shl
shl
(bad)
sti
inc
mov
mov
in
int
test
push
or
mov
lahf
cmp
and
cmp
jmp
addr16
xor
sbb
sar
add
nop
lea
inc
dec
arpl
bound
lods
inc
xor
sbb
test
sar
xchg
mov
test
stos
pop
and
test
mov
dec
daa
into
adc
jge
ds
ror
add
cld
xchg
add
or
mov
hlt
jmp
push
idiv
adc
daa
lds
mov
ins
mov
push
retf
adc
jb
call
push
or
push
into
(bad)
dec
mov
adc
cmc
xchg
dec
push
cwde
or
xchg
hlt
mov
jg
jg
xchg
and
fwait
popf
rol
jg
or
test
enter
repz
lods
pop
and
pop
xor
sbb
and
shl
lock
adc
jp
mov
bswap
adc
iret
mov
inc
call
repz
push
fdivr
dec
mov
mov
ds
dec
xor
pop
jl
rcr
inc
lea
int3
mov
push
or
(bad)
test
cmp
inc
push
arpl
dec
xor
mov
cmp
jle
ins
jl
(bad)
rol
fwait
sub
push
dec
aam
pop
adc
fadd
xor
xchg
xchg
cmp
jecxz
xor
adc
jne
bound
loop
pop
les
sub
mov
mov
xchg
sub
xchg
inc
pushf
movs
pop
jp
int3
ins
aam
add
push
outs
mov
loope
inc
dec
bound
jp
stos
ja
push
es
sub
ss
cmp
and
jae
test
pop
jecxz
outs
mov
ins
push
les
sar
fdivr
jmp
mov
dec
mov
xchg
shr
cmp
sti
sbb
test
push
sbb
cmp
dec
xor
inc
and
in
inc
imul
pop
loop
loop
cmps
jns
mov
jae
fmul
aas
jae
adc
inc
sub
dec
sub
and
(bad)
test
add
push
and
stos
retf
and
mov
and
mov
fcom
jge
push
pop
add
sub
shr
call
test
sbb
repz
xchg
jns
mov
aas
mov
test
call
aas
jg
inc
xor
mov
js
neg
mov
int3
pop
test
iret
adc
test
mov
fsubr
pop
adc
and
ret
mov
rcr
inc
jae
xor
mov
jns
pop
(bad)
sbb
ja
jg
(bad)
adc
mov
in
test
in
scas
test
out
push
xchg
(bad)
mov
sar
les
lods
jbe
add
cmp
adc
pushf
sub
call
pop
jle
add
mov
in
pop
jcxz
movs
or
and
lods
pushf
outs
xor
mov
pop
fs
cmp
add
(bad)
ins
es
stc
aam
repz
sub
fsub
push
xor
cmp
fcmovnu
mov
jno
gs
and
pop
int3
push
push
add
aad
in
pop
(bad)
imul
pop
mov
jae
add
not
pop
mov
inc
pop
call
push
inc
cs
dec
call
dec
jle
ss
xor
mov
loope
data16
inc
mov
mov
push
addr16
ror
or
out
dec
test
(bad)
pop
or
outs
lods
xchg
sub
test
add
mov
pop
adc
cmp
aad
inc
lods
xchg
test
fdivr
mov
repz
add
idiv
imul
jns
xchg
sub
sbb
or
fld
and
xchg
loopne
psrld
inc
mov
xchg
pop
repz
lock
mov
dec
xor
pop
sahf
into
push
retf
in
push
push
adc
call
ins
pop
and
sbb
push
imul
sbb
dec
jecxz
add
aad
jle
xchg
jmp
mov
idiv
jmp
pop
or
xor
mov
jl
retf
push
loope
fcom
jge
and
arpl
and
aas
xor
shr
clc
sbb
inc
shr
(bad)
arpl
jae
in
and
adc
pop
jne
mov
outs
ret
add
enter
cmc
retf
xor
inc
xchg
lea
xlat
mov
in
xchg
outs
pop
stc
fild
shr
in
lods
fisub
dec
dec
and
das
gs
pop
pop
inc
nop
dec
popa
mov
rcr
xor
inc
sbb
in
mov
imul
in
jp
dec
sbb
lods
cwde
sahf
rcr
js
xchg
mov
xlat
enter
sbb
push
daa
inc
fld
dec
loop
mov
loop
pop
sub
mov
push
cld
(bad)
xor
push
nop
(bad)
mov
js
xor
xchg
shr
into
mov
popa
mov
loop
adc
movs
push
ficomp
inc
push
(bad)
test
xchg
in
cs
push
std
es
xchg
xchg
loop
xor
push
push
xor
or
add
aas
xchg
push
mov
xchg
or
cmps
ror
btr
out
mov
mov
mov
in
enter
push
mov
mov
call
test
movs
adc
pusha
mov
cmp
add
fbstp
pusha
pop
inc
cli
pusha
call
or
xchg
sbb
(bad)
in
dec
and
pop
xchg
les
mov
out
jge
pop
push
std
pusha
sbb
(bad)
sahf
retf
not
jae
je
mov
(bad)
test
jp
mov
xchg
mov
xchg
sbb
bnd
cmp
adc
and
jns
mov
xor
stc
mov
aad
push
sti
inc
push
jne
adc
in
mov
ss
push
es
callw
xor
jmp
fwait
test
sbb
sbb
aas
imul
ins
pop
cmps
cmp
test
ret
jge
dec
(bad)
fild
sbb
int
in
jo
stc
push
into
xchg
push
sbb
push
sar
sbb
or
adc
mov
icebp
sti
mov
scas
rcl
jecxz
adc
pop
fiadd
lds
or
adc
in
sbb
mov
inc
ret
ror
fwait
mov
or
clc
fst
sbb
imul
or
(bad)
ja
arpl
sbb
fs
adc
push
popf
int
ror
je
xchg
cmp
pop
les
dec
fistp
std
outs
and
rcl
jnp
xchg
(bad)
cli
xchg
sub
hlt
cmps
add
inc
or
mov
adc
sti
in
xlat
loopne
mov
test
shl
mov
push
std
push
mov
mov
(bad)
and
sub
add
enter
ja
sub
test
out
stos
or
mov
pop
icebp
lods
rcl
call
or
je
cmp
push
loopne
loop
inc
sbb
setb
in
adc
(bad)
vorpd
aam
cdq
ret
or
xchg
push
dec
jns
jp
jo
in
je
mov
jmp
iret
sub
inc
mov
inc
outs
ins
or
test
test
pop
rep
ins
mov
enter
xor
repnz
push
push
mov
sar
adc
or
pop
sub
dec
mov
push
xchg
push
xor
in
dec
xor
scas
lds
addr16
out
push
jl
in
cmps
pop
push
mov
mov
out
xchg
adc
xchg
or
ret
push
jns
sub
push
inc
popa
pop
xchg
arpl
(bad)
stc
call
aam
xor
lds
jg
retf
xlat
sub
test
je
(bad)
pop
jne
(bad)
call
sub
pushf
stc
pop
jo
dec
das
(bad)
dec
adc
addr16
sahf
movs
pusha
sbb
push
aam
mov
jge
leave
imul
mov
mov
popa
jno
mov
loop
pop
imul
jmp
cs
imul
aad
rol
mov
dec
mov
push
les
and
cmps
bound
inc
out
jmp
push
ins
push
add
and
xchg
xchg
sub
jecxz
jno
adc
neg
shl
push
cmp
push
or
mov
(bad)
fbld
test
push
fwait
push
aas
dec
jmp
and
(bad)
mov
aaa
in
arpl
stc
ficom
sbb
xchg
icebp
push
sahf
addr16
fnsave
gs
add
scas
mov
shl
sub
lods
push
stc
and
(bad)
aad
repz
shl
fsqrt
adc
and
dec
cmp
movs
lock
clc
sub
fnstsw
jns
or
pop
imul
les
mov
dec
sbb
mov
daa
pop
or
les
dec
jbe
hlt
aad
and
jmp
gs
fld
cwde
cdq
cmp
pop
ret
adc
mov
jle
mov
fldenv
test
imul
sub
mov
and
push
gs
jbe
outs
int
movs
adc
sub
aam
adc
dec
push
adc
mov
and
cmc
sbb
sbb
in
push
xchg
sub
adc
dec
jno
out
lock
hlt
(bad)
xchg
push
call
pop
rcl
dec
fxch
and
(bad)
outs
xor
push
xchg
retf
iret
add
and
popf
jo
lds
mov
xor
pop
inc
cmp
sti
iret
or
xchg
pop
mov
add
shr
daa
pop
shl
mov
sub
stos
push
pop
rol
pop
dec
push
sub
push
stos
mov
movs
in
js
movs
mov
mov
scas
cwde
mov
(bad)
xor
xchg
mov
add
pop
adc
fbstp
repnz
ret
or
mov
fidivr
and
add
out
dec
lods
imul
mov
sub
jns
jl
pop
test
lahf
repnz
xchg
mov
hlt
jae
data16
sbb
add
sub
adc
stos
mov
mov
ja
xchg
xor
mov
mov
lds
out
loope
shr
cwde
jmp
and
mov
add
inc
lods
and
mov
into
sub
jl
jg
movs
mov
xor
js
mov
ins
fmul
jae
and
(bad)
ins
jmp
pop
pop
pushf
ins
dec
mov
das
mov
pushf
sbb
mov
mov
pop
dec
movs
mov
cmp
jno
pop
sbb
inc
and
sbb
adc
pop
jo
dec
mov
out
mov
fstp
pusha
std
xchg
add
jecxz
repz
bound
sub
das
popa
mov
repz
fimul
jb
pop
add
pop
fsubr
pop
pop
daa
cs
cmp
mov
add
xor
push
in
rcr
xor
mov
call
nop
cmp
mov
push
mov
push
and
mov
push
stos
xchg
jne
xchg
adc
xchg
push
lea
dec
sub
mov
or
in
pushf
arpl
sbb
mov
pusha
int3
bsr
pop
lahf
and
adc
lods
outs
xchg
aam
iret
imul
mov
shl
(bad)
out
xlat
push
lea
mov
loop
xor
cmp
dec
fs
into
fisub
mov
test
movs
call
movs
mov
dec
aaa
mov
cmp
adc
test
test
push
movs
lds
mov
sbb
arpl
mov
push
lahf
cmps
cmp
ret
clc
xor
pop
push
jecxz
and
ss
retf
enter
inc
xor
jmp
outs
(bad)
(bad)
mov
dec
mov
loope
mov
lock
xlat
movs
inc
fisttp
add
lea
loopne
pop
mov
pushf
mov
jl
(bad)
mov
or
xchg
hlt
loopne
and
cmp
cmp
mov
add
xchg
lsl
push
push
and
pop
jno
xlat
mov
and
sub
loop
jp
cmp
in
fstp
sub
xchg
fstp
gs
add
and
mov
shl
stc
push
cmp
sub
hlt
outs
aam
xchg
fist
les
sbb
scas
inc
adc
jo
adc
in
ret
sub
xchg
scas
add
adc
mov
shl
cmp
jne
dec
xor
hlt
push
fstp
arpl
std
cmps
jnp
cmc
repnz
mov
fwait
retf
inc
icebp
aad
fucomi
sti
sub
mov
inc
out
sub
int3
dec
inc
or
ja
(bad)
shl
cmp
mov
and
int3
pop
pop
adc
ins
leave
xchg
xchg
push
add
inc
sbb
fchs
xchg
push
cld
bound
jb
sub
(bad)
cdq
xor
repnz
mov
in
inc
fisttp
xor
imul
das
cmp
jmp
cmp
jmp
pop
xor
ror
sbb
mov
pop
out
cmp
xor
scas
mov
fistp
fmul
jne
iret
iret
jmp
pop
(bad)
call
in
test
xchg
push
cmp
or
pusha
fdiv
test
pop
gs
pop
jae
xchg
or
push
(bad)
cmp
add
(bad)
stos
hlt
je
fidivr
retf
ret
mov
pop
xor
cmp
mov
stos
jb
(bad)
outs
pop
inc
xlat
jns
in
cmps
aas
or
xchg
cmp
out
lea
pusha
jo
mov
stos
dec
in
cmps
aad
or
lods
jmp
ja
xchg
sub
mov
scas
jp
mov
push
push
lahf
xor
mov
jb
xor
sbb
cmps
fwait
das
push
inc
jbe
mov
cmp
pop
push
or
aas
dec
push
rcr
fld
xor
mov
mov
mov
push
lea
and
nop
mov
inc
(bad)
sbb
push
out
xchg
pop
push
ins
hlt
or
inc
mov
sbb
push
ins
movs
sub
or
test
xchg
inc
and
push
popf
adc
xchg
push
jmp
repz
jp
xchg
mov
test
mov
dec
retf
loope
movs
and
in
adc
dec
add
lods
jle
inc
adc
lods
inc
adc
mov
addr16
mov
in
clc
xor
sti
out
jae
xchg
cmps
xor
or
les
pop
sbb
xchg
dec
(bad)
cmp
(bad)
mov
xchg
ja
push
icebp
pop
lock
push
mov
cmp
mov
mov
es
in
out
xlat
jmp
loop
xchg
xchg
in
mov
pop
enter
or
adc
(bad)
xchg
aas
mov
imul
dec
mov
mov
pusha
add
xchg
(bad)
call
xor
jae
mov
lea
enter
jne
call
and
mov
out
add
and
scas
ds
ins
pop
sub
ret
xchg
aaa
mov
out
mov
push
and
idiv
sbb
in
int
jns
movs
inc
ins
or
idiv
lds
movs
adc
push
xor
or
adc
faddp
lock
mov
out
add
push
das
or
inc
test
sbb
lock
and
xor
shr
ret
jbe
ss
mov
ja
dec
imul
cmp
push
mov
pop
adc
and
ret
xor
mov
push
psubsb
jne
cld
pop
inc
dec
in
jmp
cwde
add
stos
or
push
shr
cmp
jne
push
lods
leave
jne
imul
clc
sub
jp
hlt
dec
out
jns
(bad)
cmp
sub
pop
push
sbb
lods
cmp
hlt
jmp
leave
das
(bad)
cdq
inc
or
mov
popf
nop
push
inc
cmp
add
rcl
xor
pop
nop
add
add
inc
leave
sub
scas
pop
fnstsw
sbb
add
test
push
push
repnz
stc
xor
mov
jmp
mov
aaa
add
mov
inc
(bad)
leave
xlat
push
shl
push
dec
iret
bound
cli
rcr
iret
mov
jle
push
mov
push
xchg
inc
jmp
int
cmp
(bad)
in
cdq
jmp
test
inc
loop
movs
aas
nop
push
shr
sbb
out
std
push
sub
cmp
sbb
and
ficomp
ins
inc
and
mov
xchg
leave
jnp
pushf
push
jl
sbb
loop
fist
push
fwait
mov
in
mov
push
in
mov
shl
bound
inc
and
mov
cmp
ins
cs
mov
pop
mov
call
mov
dec
xor
xchg
lods
mov
mov
push
mov
mov
shl
in
pop
arpl
add
int
lea
movs
push
pop
xor
outs
out
(bad)
inc
fdiv
or
enter
jbe
sub
mov
int3
test
inc
jnp
mov
clc
inc
inc
sub
movs
mov
push
inc
(bad)
in
xchg
mov
mov
sbb
pop
mov
retf
ds
cmps
and
and
cmp
in
xlat
pop
das
lods
call
jbe
movs
push
lock
repz
push
mov
jge
(bad)
imul
out
adc
jle
jae
fist
mov
nop
daa
mov
sbb
cs
adc
or
xchg
shr
xor
mov
cmp
dec
daa
cmps
shl
ja
dec
ss
mov
push
stc
test
cli
push
mov
add
xchg
mul
ror
xor
jge
jle
lahf
sti
add
or
mov
pop
xor
cwde
cmc
adc
mov
sbb
das
jnp
aas
pop
xor
(bad)
into
(bad)
inc
mov
pushf
inc
lea
xchg
cmp
dec
cld
fsub
fcmovb
mov
or
out
nop
add
pop
mov
mov
cmp
fdivr
and
push
jnp
jne
in
int
pop
pop
sbb
arpl
cdq
dec
lds
mov
ins
int
add
cmps
jae
sub
mov
cmps
in
int
push
popf
int
cmp
pushf
or
push
sub
mov
adc
es
mov
mov
jle
push
push
sub
adc
pop
fwait
jns
imul
cmp
mov
add
adc
cmps
pop
pusha
sbb
xor
bound
mov
sbb
jp
add
sbb
out
aaa
xchg
(bad)
retf
std
sub
xchg
or
mov
rol
test
mov
loop
xor
ja
out
cli
adc
test
lods
rcr
add
jbe
mov
dec
push
pop
add
outs
jae
popf
xchg
fsubr
dec
(bad)
add
sahf
dec
inc
int
in
cmp
loop
or
or
mov
mov
jg
sub
lahf
call
cdq
or
lock
cmp
mov
es
lock
add
mov
fcmovbe
lods
leave
or
clc
jl
mov
inc
lds
sub
jne
xchg
cmp
add
ins
iret
jecxz
ins
(bad)
in
and
addr16
and
or
into
mov
mov
into
add
addr16
sbb
push
adc
mov
mov
fadd
mov
push
jle
ins
cli
dec
fwait
arpl
int
cmp
or
adc
cmps
xchg
push
jl
test
rcr
and
and
scas
pop
arpl
mov
pop
in
das
mov
ret
or
adc
pop
iret
xor
jecxz
loope
rcl
in
sub
test
js
nop
or
and
inc
mov
movs
xchg
aad
sub
xor
mov
test
call
sbb
inc
dec
loope
sub
mov
pop
popf
xor
and
pop
sub
loopne
mov
mov
mov
jg
pop
and
sub
outs
pop
mov
retf
mov
sub
movs
dec
frstor
xor
sbb
dec
bound
jne
xchg
adc
mov
adc
fidivr
sub
std
inc
jb
clc
ins
call
mov
dec
mov
jmp
imul
pop
pop
ret
push
shl
or
push
push
daa
cmps
pop
lock
dec
nop
movs
inc
outs
pop
les
xchg
icebp
cmc
add
dec
in
cld
mov
mov
xchg
rcr
pop
std
pop
imul
xchg
int3
pop
adc
and
int
push
sti
mov
loope
sbb
fisubr
pop
dec
pop
push
imul
fisubr
jo
out
ja
adc
or
shl
pop
hlt
mov
inc
push
add
pop
and
and
aaa
repnz
mov
xor
inc
js
call
dec
std
jno
test
jno
sbb
and
mov
pop
xchg
xchg
leave
xchg
hlt
lock
test
xchg
les
clc
xchg
ins
out
sub
daa
test
loope
mov
nop
cmp
stos
jns
cmc
jmp
jmp
sub
mov
cmp
push
inc
xchg
in
ficomp
dec
arpl
out
mov
loope
pop
int3
push
jmp
mov
hlt
loop
and
adc
and
shrd
clc
or
push
mov
push
or
xor
cmp
xor
aaa
aam
lahf
pop
xchg
loope
ja
fwait
inc
ins
fwait
int3
ret
ror
xor
je
je
mov
hlt
ret
les
cmp
cdq
mov
or
or
mov
xchg
das
fild
add
out
test
lods
(bad)
outs
mov
xlat
cdq
fs
popf
(bad)
shr
clc
pop
xchg
adc
or
inc
outs
push
pushf
mov
jno
dec
(bad)
call
call
xchg
fs
xchg
aaa
jnp
cmp
aad
popa
ret
or
cli
ins
cdq
mov
bound
int3
and
mov
cmp
mov
lds
dec
(bad)
int3
pop
shr
loop
(bad)
jl
cmp
(bad)
shr
popa
enter
dec
in
inc
pop
les
push
das
iret
lea
sbb
inc
shl
scas
aas
sbb
bound
fnsave
or
xor
jle
push
pop
data16
loope
jmp
jae
add
mov
pop
int
add
and
dec
jnp
jle
jecxz
icebp
or
xor
dec
cs
mov
pushf
int3
call
sahf
in
jge
or
popf
call
xchg
mov
neg
stc
sub
sbb
mov
nop
clc
and
ret
xchg
mov
and
push
mov
push
mov
push
jb
inc
fwait
cs
rcr
popf
loope
data16
sub
xchg
push
inc
mov
retf
push
fwait
call
push
lods
push
mov
cmc
adc
push
xlat
call
add
push
js
icebp
(bad)
push
add
pop
and
shl
jno
ins
dec
int3
inc
inc
inc
int
test
sbb
inc
xchg
(bad)
stos
les
(bad)
cwde
fidivr
repz
mov
je
dec
cdq
mov
sbb
pop
movs
cmps
adc
and
or
inc
jle
jne
mov
bound
div
pushf
sub
movs
shl
mov
mov
rcl
inc
daa
xor
sbb
popa
imul
fdiv
jle
xor
xchg
sti
mov
bound
push
cmp
stos
(bad)
nop
scas
ins
and
into
and
lds
lahf
pop
and
mov
xchg
in
mov
out
cmc
bound
lock
adc
mov
jb
not
cdq
jg
int3
mov
gs
ret
mov
pushf
shl
jge
or
and
or
int
jmp
cmp
adc
jmp
fyl2xp1
pop
pop
sar
sub
cdq
sub
sub
lahf
scas
or
les
mov
jmp
mov
cdq
es
addr16
sbb
ins
stos
adc
add
cmp
lea
arpl
fs
stc
rol
pop
movs
dec
dec
jne
sahf
in
inc
xchg
(bad)
jo
add
rcr
pop
jmp
inc
lods
pushf
xor
in
loop
jne
adc
ds
shr
xor
fld
add
jns
mov
xchg
aad
cs
mov
mov
lods
inc
or
inc
inc
cmps
pop
cli
jg
or
das
test
sar
jecxz
pop
aam
xor
inc
sbb
cmp
dec
popf
lods
retf
cmp
inc
pop
aaa
push
mov
add
jmp
clc
rcl
pop
jb
movs
sbb
push
add
aaa
loop
pop
mov
xchg
and
call
fbld
dec
mov
int
iret
inc
ss
push
cmp
aas
mov
arpl
stc
fidiv
mov
jne
cmp
lahf
lds
test
int3
jl
popa
sbb
in
inc
loope
clc
int3
dec
dec
push
pushf
mov
push
lahf
adc
int3
adc
xor
xchg
ins
jg
push
mov
(bad)
aaa
scas
and
xchg
(bad)
sahf
cmps
(bad)
int
cwde
popa
int3
xor
add
xor
xor
loopne
xor
popa
pop
push
out
dec
fild
pop
mov
in
shl
adc
pop
gs
xchg
cwde
jp
(bad)
fdiv
cmp
jl
das
sbb
(bad)
mov
mov
(bad)
mov
push
shr
adc
movs
mov
mov
scas
xbegin
mov
ret
es
dec
mov
xchg
leave
inc
jb
lea
in
mov
push
pop
scas
jb
jb
mov
rol
jge
scas
imul
sub
popf
dec
jmp
aas
test
shl
or
pop
xor
rcl
pop
mov
jecxz
mov
mov
cld
mov
ret
inc
and
(bad)
cmc
lds
pop
pop
dec
fst
lea
and
push
pop
mov
xchg
add
sub
sub
mov
xlat
icebp
repz
enter
xor
mov
das
daa
push
adc
outs
retf
aaa
test
mov
sahf
dec
dec
scas
mov
aad
sub
inc
jmp
inc
sahf
data16
loop
pop
fs
test
not
dec
lock
int
inc
fidiv
retf
ror
fld
gs
(bad)
inc
push
xor
cld
add
sbb
rcr
aad
or
xchg
hlt
xchg
dec
push
xchg
cwde
lods
lds
mov
cmp
(bad)
ffreep
mov
xor
xor
sub
fs
mov
out
mov
mov
adc
movs
fwait
rol
dec
jg
dec
mov
outs
add
std
push
outs
lahf
(bad)
mov
mov
adc
xor
cmp
push
pop
pop
popf
mov
fsub
push
jae
xor
and
fsubr
add
es
jns
psrld
mov
xor
fisub
mov
clc
jbe
cdq
frstor
ror
mov
and
inc
sub
(bad)
mul
mul
sub
fnstcw
push
inc
dec
cli
lds
mov
ret
pop
push
arpl
test
push
ins
sbb
ror
mov
pop
aaa
inc
test
scas
and
adc
fist
cli
ror
mov
in
push
and
fisub
addr16
inc
jns
push
mov
or
(bad)
das
cmp
mov
mov
call
dec
mul
dec
xchg
or
mov
or
push
ret
int3
in
out
add
aad
sbb
inc
pop
mov
stos
(bad)
data16
lods
fild
xlat
pop
mov
dec
jne
ja
mov
push
or
jb
adc
pop
pop
add
addr16
xor
pop
mov
enter
and
cmp
mov
not
pusha
mov
clc
mov
dec
leave
inc
inc
stc
fcom
aaa
arpl
jle
lods
cmps
enter
(bad)
mov
ret
js
cmp
mov
movs
stos
mov
mov
lock
mov
add
mov
push
in
pop
inc
ins
cwde
mov
push
test
imul
mov
xor
rol
test
inc
adc
dec
adc
popa
inc
dec
cmp
ret
dec
mov
out
outs
jb
jl
sbb
lea
adc
pop
fs
jecxz
stc
or
add
adc
jo
int
mov
ja
cwde
or
imul
adc
push
jno
sbb
lods
mov
int
mov
fnsave
pusha
addr16
xor
inc
cmp
push
imul
xchg
dec
mov
retf
push
or
(bad)
adc
popa
inc
(bad)
jae
pop
daa
xchg
xchg
cwde
jb
jne
pop
pop
or
cmp
ds
mov
push
sbb
idiv
in
push
cli
sub
push
pop
cld
inc
jp
cmps
pop
sti
jmp
sbb
and
sbb
out
sub
lods
xchg
inc
mov
bswap
sbb
into
pop
jp
mov
push
lahf
add
aas
cmps
imul
and
mov
or
loopne
pushf
int3
shl
out
sbb
aam
std
sub
and
sub
add
pushf
call
(bad)
push
mov
std
sbb
popa
repz
clc
push
retf
mov
xchg
shl
pop
data16
or
mov
pop
push
jp
loop
push
pop
arpl
mov
pop
stos
(bad)
mov
leave
add
fs
sahf
and
pop
(bad)
lea
and
icebp
push
int
jno
sub
ins
xchg
rcr
out
push
xchg
or
pushf
out
mov
jno
xchg
(bad)
cmp
xchg
out
(bad)
fld
data16
fstp
hlt
scas
idiv
mov
adc
ss
xchg
mov
push
push
dec
add
mov
mov
mov
cmp
cmp
and
sbb
outs
cmp
sub
pop
clc
in
mov
mov
mov
jo
les
in
ror
into
push
pop
jns
(bad)
sub
cmp
cmp
dec
jge
mov
rol
pop
cmp
imul
add
shr
cmps
xor
push
fdivr
cdq
ds
fstp
mov
sub
adc
outs
stc
ficom
jmp
add
xchg
sub
sub
xchg
loopne
test
(bad)
jmp
not
sbb
ret
call
(bad)
add
and
push
push
cmp
dec
xor
call
test
mov
pop
push
(bad)
call
mov
pop
jg
push
sub
inc
imul
fimul
sbb
mov
add
nop
das
not
sbb
add
clc
fdiv
out
bound
pop
xor
sub
sub
push
gs
sbb
cdq
pop
aam
xlat
imul
aad
ja
push
xor
or
aad
(bad)
fild
int3
ja
xchg
cwde
jp
retf
adc
ss
xor
or
lea
add
dec
bound
int
mov
loope
retf
and
inc
(bad)
xchg
icebp
mov
in
cmp
jb
out
hlt
xchg
adc
adc
cli
cs
mov
jg
sbb
push
inc
pop
cmps
mov
push
dec
cmp
xor
dec
mov
xor
mov
xchg
jl
sti
outs
movs
adc
xchg
std
cdq
jle
sub
stos
inc
jp
sbb
mov
sbb
arpl
inc
iret
mov
sti
aam
clc
sub
(bad)
icebp
mov
fwait
jnp
xchg
aam
mov
sti
sub
fldl2t
sub
test
data16
sti
push
not
mov
adc
fbstp
cmp
push
sub
shl
jnp
retf
gs
fcom
push
shr
xlat
fisub
imul
idiv
adc
(bad)
ss
mov
jg
je
jecxz
in
inc
pop
xchg
retf
jg
ret
adc
and
mov
iret
xlat
push
mov
add
mul
ins
sub
xchg
scas
push
(bad)
sbb
dec
cld
pop
mov
push
push
out
sbb
jns
das
je
cli
int3
mov
xchg
dec
xchg
lea
xlat
repz
stos
mov
jp
push
ins
mov
clc
pushf
push
mov
and
in
(bad)
leave
fisttp
cmp
repz
or
es
push
loop
xor
xchg
stc
gs
and
mov
pop
imul
(bad)
xor
rcr
cmp
call
int
adc
push
test
jae
rol
out
xchg
xchg
sbb
pop
fidiv
push
mov
ss
sahf
sti
add
out
add
adc
dec
or
daa
loopne
hlt
xchg
movups
pop
jmp
mov
jmp
rcl
adc
repnz
stos
push
ins
movs
fdiv
inc
(bad)
push
cs
ja
call
sbb
rcl
xor
xor
(bad)
icebp
fdiv
test
adc
jnp
push
push
sub
pop
(bad)
cld
in
hlt
or
push
dec
leave
ficomp
pop
push
mov
or
pushf
xor
ins
mov
gs
stos
and
xor
ins
cld
(bad)
cmp
nop
es
inc
jle
push
xor
repnz
mov
lahf
mov
sub
xchg
sub
cmp
sahf
loopne
and
jb
imul
mov
int3
test
aas
(bad)
xor
pop
jmp
lods
inc
dec
loopne
xor
add
cmp
call
sub
push
div
mov
push
pop
lds
rcl
jmp
in
mov
push
(bad)
js
and
clc
xor
cmp
push
cli
xor
sub
and
jp
imul
push
dec
jl
mov
sti
jge
sbb
xor
dec
xor
mov
pop
xchg
sub
cwde
int3
pop
retf
mov
jge
push
adc
jmp
mov
int3
mov
sbb
in
add
in
lds
ret
test
xchg
repz
ja
jo
inc
inc
fisubr
jmp
fucomp
leave
shl
and
lods
jmp
mov
loop
cmp
popf
fsubr
fisttp
test
cwde
xchg
or
repnz
arpl
jo
jg
and
xlat
adc
ins
dec
(bad)
sub
ret
sbb
cmps
inc
xlat
scas
push
hlt
mov
or
in
or
ror
xchg
daa
add
pusha
cs
mov
sub
and
fcomp
jb
sbb
enter
push
add
test
xchg
mov
(bad)
sub
pushf
cmp
push
inc
rol
inc
bound
movs
sub
sbb
ja
add
int3
test
xchg
pop
test
sahf
retf
mov
aad
mov
push
add
repnz
jno
pop
(bad)
cmp
xchg
mov
aaa
xor
icebp
pop
inc
dec
jp
xchg
aaa
or
push
(bad)
mov
cmp
sub
mov
std
and
(bad)
cs
dec
dec
in
icebp
call
inc
movs
mov
arpl
cmps
or
aas
add
movlps
fisttp
rol
adc
fld
imul
ins
sahf
cmp
sub
push
add
pop
js
rcl
pop
or
psubusw
sbb
call
pop
push
lock
enter
sub
call
jg
xor
mov
xchg
fldl2e
fidivr
mov
lods
pushw
mov
out
retf
fs
cmps
mov
xor
push
pop
movs
movs
je
into
je
shr
cmps
inc
jge
push
in
out
aaa
sbb
inc
popf
sbb
shl
and
or
out
fcomp
popf
jmp
aam
push
sub
add
mov
inc
xor
xchg
stos
call
ret
lahf
les
outs
repz
leave
and
(bad)
test
imul
cli
fimul
sbb
test
mov
es
push
cld
inc
push
push
or
sub
leave
push
pop
push
dec
cld
inc
outs
jecxz
inc
pushw
rol
cmp
sub
or
sub
sti
push
call
adc
inc
inc
hlt
or
pop
dec
movs
leave
leave
push
fadd
mov
lea
ficomp
out
sbb
rol
leave
sbb
jns
mov
inc
push
xor
dec
outs
mov
push
(bad)
in
jb
pushf
outs
loopne
push
dec
jnp
mov
xlat
xchg
addr16
sbb
push
popf
lods
push
jno
mov
sahf
ds
add
ficom
add
not
mov
fs
add
cld
jmp
push
jb
das
or
fsubr
leave
add
jge
push
pop
iret
repz
xchg
in
ins
push
ins
aaa
std
sub
add
and
iret
xchg
in
int3
cmp
mov
mov
xlat
adc
pop
sbb
bound
mov
push
daa
adc
dec
or
mov
enter
xchg
cmp
ret
and
in
adc
adc
cli
ret
sbb
stc
jbe
loope
cmp
cs
aas
dec
les
jb
mov
ds
lds
pop
inc
cwde
mov
jecxz
xor
or
cli
fsub
xchg
pop
mov
pop
stc
mov
adc
xlat
and
icebp
imul
fs
fstp
ins
push
out
push
cwde
outs
stos
or
xor
mov
pop
ror
sub
rcl
push
fidiv
data16
sbb
clc
mov
mov
dec
inc
idiv
dec
jne
ret
sbb
sbb
jbe
xchg
sti
nop
mov
jo
popf
mov
push
out
(bad)
ficomp
and
gs
or
sub
xchg
jp
mov
xor
out
aam
cs
jmp
arpl
mov
leave
sub
ins
sar
inc
std
jp
pushf
loope
mov
loop
ja
jnp
dec
xchg
mov
mov
test
imul
pop
mov
xchg
hlt
xchg
(bad)
shl
cmp
aas
repnz
ret
bound
ja
imul
mov
popf
jno
stc
popa
push
std
cmp
and
dec
xchg
ds
rol
js
idiv
adc
sbb
outs
mov
movs
retf
popf
pop
add
lds
add
jecxz
(bad)
jle
movs
xchg
push
push
cwde
rol
jl
dec
addr16
or
cmp
pusha
pop
leave
in
xchg
or
xchg
cmp
cmp
mov
into
loop
in
jne
test
mov
push
push
shr
movs
outs
sub
mov
call
ror
add
jge
out
or
adc
retf
ins
fs
stos
cdq
js
scas
or
daa
fwait
and
sub
mov
mov
cmp
pop
ror
xchg
stos
fmul
(bad)
mov
gs
push
push
leave
mov
clc
and
sti
nop
xor
ret
aad
in
sbb
add
inc
adc
inc
push
cwde
movs
xor
stos
lahf
push
ins
stos
jo
popa
pop
imul
mov
inc
(bad)
mov
outs
add
in
lahf
ss
ds
(bad)
mov
aaa
push
nop
jb
test
jo
aas
popf
popa
sub
push
mov
cmc
(bad)
fnsave
into
int
push
dec
jecxz
js
jmp
sbb
lods
push
shl
retf
xchg
es
pop
and
inc
add
sub
push
mov
lods
jp
dec
mov
test
loope
sbb
jl
xchg
bound
sbb
cmc
jge
stc
inc
mov
mov
outs
aas
nop
sbb
ret
mov
iret
mov
sti
inc
bound
test
or
leave
mov
dec
in
add
xchg
inc
dec
adc
and
add
outs
test
cmp
test
add
fidivr
xchg
repz
add
fwait
lahf
push
cwde
cmp
mov
mov
test
mov
dec
stc
xor
cmp
pop
fwait
(bad)
rol
iret
mov
loope
lock
sbb
cld
adc
lods
retf
repz
xchg
inc
pop
nop
shr
shr
retf
mov
xchg
inc
js
jo
jo
loopne
add
fwait
in
pop
mov
sbb
pop
and
ins
xchg
cmp
mov
out
out
pop
lods
sbb
sub
loope
xchg
or
dec
sbb
ds
xor
rcl
or
cmps
cwde
mov
xor
repnz
int
lods
aaa
ret
dec
mov
xor
mov
stos
sub
(bad)
sbb
pop
pop
jmp
(bad)
sbb
fmul
mov
lea
icebp
(bad)
jnp
mov
mov
jnp
in
inc
xchg
add
(bad)
jo
shl
sbb
in
mov
icebp
lea
cmp
adc
pop
in
push
and
cmp
jno
and
pop
fcomp
dec
inc
ss
pusha
fcmovb
jge
mov
mov
pop
loop
or
mov
jecxz
inc
mov
or
lahf
test
pusha
sub
ror
push
popf
or
push
fist
cmp
sbb
jle
outs
ret
mov
loopne
mov
or
xchg
call
mov
(bad)
mov
cmp
arpl
int
(bad)
cmp
inc
(bad)
push
cdq
test
add
mov
mov
shl
fistp
jp
cmp
es
loopne
mov
pop
cmp
pop
in
lock
mov
leave
dec
jae
(bad)
call
pop
xlat
and
xor
in
stc
stos
or
sub
aaa
add
push
xchg
mov
ret
jecxz
xlat
and
test
mov
call
mov
or
clc
pop
jge
(bad)
retf
inc
inc
jecxz
test
sub
hlt
leave
es
push
adc
sub
test
sti
mov
mov
in
mov
add
lods
ins
mov
repz
pop
into
iret
or
sub
sbb
stos
rol
imul
(bad)
fnstsw
mov
add
add
dec
call
and
mov
jne
adc
call
nop
cmps
xor
ja
inc
adc
dec
mov
leave
jle
pop
and
xchg
out
xchg
outs
sar
fiadd
dec
mov
mov
and
sbb
mov
fwait
out
dec
pop
dec
mov
cdq
mov
loopne
loop
push
cwde
test
push
jge
cmc
sub
mov
fldenv
and
cld
clc
push
iret
jl
xchg
sub
dec
sub
pop
mov
sub
aas
jecxz
cmp
test
fcomp
cwde
mov
imul
sbb
dec
(bad)
xlat
sbb
inc
in
aaa
iret
mov
test
mov
or
dec
out
out
out
loope
pop
sbb
and
lods
js
mov
add
xchg
and
popa
push
int
scas
sub
xchg
rcr
jnp
enter
in
cwde
jne
fidivr
adc
jb
inc
nop
into
mov
aad
lds
out
sub
js
jle
inc
xchg
scas
lahf
adc
sti
push
in
ins
out
jns
mov
push
test
cmp
dec
nop
pop
jo
pop
jb
cmp
xchg
mov
inc
mov
jmp
jns
jl
sbb
push
fnstcw
xor
loop
ficom
imul
sub
cmp
dec
inc
call
jns
push
cld
add
retf
pop
out
jg
cmp
mov
and
nop
mov
xor
outs
jmp
clc
dec
jecxz
bound
pop
jge
fmul
sbb
(bad)
pop
cmp
jmp
cmps
jae
jbe
sar
jecxz
repnz
outs
aam
cli
out
mov
pop
mov
stc
mov
aas
imul
test
je
xchg
mov
and
jo
repz
mov
add
xchg
inc
mov
pusha
mul
data16
dec
int
pop
cmc
cld
mov
mov
pop
cmps
cmp
adc
pop
das
xor
fnsave
adc
push
ins
daa
pushf
call
cmps
pop
xchg
aas
adc
test
imul
sbb
out
popf
mov
or
dec
and
sbb
cmp
ror
cmp
mov
fwait
dec
mov
int3
jge
rol
neg
add
push
mov
mov
(bad)
into
or
add
bound
cmps
lock
push
adc
cwde
mov
mov
jnp
mov
call
xchg
repnz
dec
or
xor
sub
mov
stos
inc
popf
lods
(bad)
ja
lea
jge
sub
xchg
pop
cmp
ret
add
aam
jnp
xchg
popf
dec
pop
in
pop
je
mov
add
inc
cmp
sar
xchg
inc
lock
fcomp
add
add
(bad)
xlat
mov
adc
sbb
loopne
jnp
arpl
es
sub
mov
sub
(bad)
daa
jg
xchg
outs
xlat
sub
jmp
pusha
jle
pop
lahf
jae
cmp
mov
dec
(bad)
cwde
cdq
mov
dec
sti
cdq
mov
dec
rcr
repz
out
icebp
add
ss
lds
test
lahf
ror
aas
ins
mov
mov
xor
dec
push
xchg
cmp
pop
shl
sub
cmps
aaa
movs
xor
daa
retf
pop
push
xchg
push
inc
adc
pop
retf
cmp
mul
in
stc
shl
inc
adc
adc
aam
xchg
push
mov
(bad)
xchg
sub
inc
adc
jp
or
shl
mov
bound
and
in
mov
add
sbb
lods
adc
inc
xchg
test
inc
mov
jle
push
jns
dec
sbb
mov
adc
add
cmp
ins
and
push
sub
pop
(bad)
cwde
(bad)
push
aaa
xchg
pusha
push
les
or
hlt
pop
imul
pop
sub
js
(bad)
push
jmp
and
fisub
add
mov
lea
and
(bad)
je
imul
sub
jmp
lock
or
fcmovnu
mov
sbb
bound
(bad)
push
mov
dec
ss
outs
enter
xchg
adc
lods
add
push
sub
bound
lods
add
fadd
ret
stos
sub
daa
jns
aam
cmp
in
ss
dec
out
sub
mov
push
xor
cmp
stos
add
push
repz
je
jmp
test
ja
fwait
jb
shl
imul
mov
inc
xor
lods
xor
iret
and
std
pop
mov
(bad)
stos
add
mov
ds
xor
and
(bad)
add
xor
loope
inc
popa
sbb
shr
out
iret
frstor
sub
minps
mov
test
retf
dec
aas
mov
push
outs
mov
jp
add
push
cmp
icebp
sti
mov
dec
les
cmps
xlat
ja
lea
repnz
into
into
mov
es
mov
aaa
vmwrite
gs
add
cmps
sub
cmp
(bad)
in
sub
jns
cdq
leave
fsub
popa
cdq
sbb
lea
ds
cmp
or
push
arpl
test
inc
call
xor
jecxz
nop
into
cli
jne
les
inc
mov
pop
inc
mov
pushf
pop
cmps
mov
sar
push
ss
or
div
div
xor
out
dec
scas
or
push
out
bswap
in
push
push
das
or
adc
cmps
and
cmp
ja
fdivr
ins
es
lods
mov
loop
cli
ret
adc
gs
add
dec
cmps
(bad)
sbb
mov
xlat
imul
pop
xlat
je
adc
(bad)
loopne
pusha
rol
inc
das
lods
pop
pop
and
xchg
movs
fwait
es
ins
enter
loope
popf
sbb
pop
inc
jnp
sub
xor
mov
add
je
pop
iret
push
movs
out
(bad)
jne
jg
sub
pop
popa
mov
xchg
(bad)
sar
add
mov
inc
jbe
div
sar
lods
or
inc
scas
dec
inc
imul
pop
test
pop
in
popa
loopne
mov
add
dec
ret
pusha
jnp
arpl
in
cmp
repnz
cmp
jns
cmps
lock
jmp
enter
cdq
nop
inc
loopne
sub
movs
mov
in
fld
dec
cmp
and
dec
fwait
sub
out
pop
xor
adc
mov
popf
mov
dec
pop
fs
pop
aas
push
les
mov
dec
mov
and
inc
movs
add
mov
xchg
sub
shl
scas
push
adc
cdq
inc
movs
adc
mov
sub
gs
add
mov
cwde
movs
push
sub
sbb
push
mov
push
pop
xchg
call
xor
retf
iret
mov
int
test
inc
call
jne
cmp
fiadd
or
jg
jae
cwde
pusha
or
(bad)
xchg
sti
aad
push
cmp
pop
sbb
mov
out
cmps
mov
data16
xor
call
xstore-rng
cmps
inc
sub
xor
int3
sbb
je
push
jae
adc
jbe
ss
mov
es
call
les
sbb
bound
add
cmp
pop
js
test
mov
pop
jbe
mov
sub
jg
mov
jb
retf
mov
pop
mov
cdq
(bad)
xlat
jl
mov
sbb
mov
mov
cmps
adc
retf
aas
outs
pop
aam
pop
mov
arpl
and
mov
and
sub
lock
ja
hlt
dec
mov
out
loopne
mov
adc
dec
xchg
les
adc
adc
sbb
adc
mov
(bad)
mov
adc
icebp
ficom
(bad)
and
div
xchg
mov
pop
out
cdq
inc
or
fstp
out
shr
xchg
es
pushf
fs
mov
dec
jecxz
xor
mov
ja
mov
and
inc
adc
repnz
bound
cmp
push
mov
das
mov
(bad)
fidivr
push
sub
push
fimul
ficomp
add
leave
cmp
lods
jecxz
push
mov
lahf
outs
jp
daa
jl
fwait
ins
lea
loope
in
dec
and
cmc
jle
dec
lods
sti
xor
std
cmps
fsub
mov
sbb
ret
xchg
ret
sub
jns
popf
xchg
mov
imul
xchg
xchg
lahf
mov
popf
cmp
sub
sar
int
pop
inc
mov
ja
push
dec
xlat
loop
call
mov
pushf
mov
sbb
sbb
or
fwait
jnp
mov
xor
gs
loope
jmp
lock
mov
call
in
out
pushf
cld
mov
stc
lahf
in
jecxz
xchg
hlt
cmp
cmps
pop
inc
xchg
mov
add
aas
inc
hlt
cli
push
sti
test
repnz
sub
xchg
icebp
sbb
test
sti
sahf
mov
retf
enter
xchg
or
sub
pop
pop
out
call
jge
imul
rcl
pop
div
xchg
xor
pop
xchg
xor
lods
stos
mov
or
add
sti
cmp
jmp
int3
pop
cmp
mov
add
adc
stc
mov
daa
or
sub
push
inc
mov
and
sbb
and
mov
jns
into
into
xchg
cwde
jg
sub
movs
dec
pop
test
and
cdq
into
fldcw
xor
stos
popa
jp
xor
jle
sbb
je
or
pop
int
pop
lds
add
cmp
sbb
clc
sbb
shl
push
test
mov
mov
call
jns
push
cmp
int
mov
lea
(bad)
mov
xchg
jge
push
ret
ss
ins
icebp
fs
and
maxps
test
nop
js
jmp
(bad)
fsub
into
adc
jne
bound
stos
jmp
inc
daa
scas
loopne
jo
outs
mov
sub
iret
mov
mov
cwde
repz
mov
mov
mov
jns
clc
adc
in
gs
jns
jbe
neg
xchg
lods
nop
mov
outs
std
dec
lods
(bad)
inc
inc
pop
pop
(bad)
jmp
xchg
adc
stc
cld
xchg
iret
sub
fucom
fadd
jg
outs
mov
sub
pop
sub
adc
test
es
sti
inc
sbb
mov
pop
xor
jae
inc
ins
inc
imul
loop
sub
hlt
in
fsub
ret
and
out
(bad)
xor
mov
xor
jecxz
sub
mov
xor
movs
stos
push
pop
mov
test
mov
jecxz
cmp
daa
cmp
(bad)
jne
cmp
fistp
mov
iret
imul
jns
into
dec
les
js
cld
pop
add
add
adc
cmp
jbe
or
test
out
ss
xchg
dec
jge
sub
sbb
jmp
lahf
and
fld
fwait
ror
adc
out
sahf
cmc
out
or
imul
cpuid
aaa
sbb
add
faddp
sub
imul
cli
xchg
cmp
inc
dec
pop
push
sbb
mov
jne
pop
sbb
daa
push
arpl
mov
xchg
shr
push
jge
cwde
loop
cmp
nop
lods
and
pop
mov
scas
or
mov
psubsw
loop
icebp
test
lea
add
lods
cmp
dec
inc
inc
and
std
adc
push
add
inc
jne
mov
mov
test
mov
mov
mov
je
fist
out
fiadd
add
and
bound
ficomp
mov
enter
add
pop
add
sub
or
push
push
aaa
xor
cli
stos
xchg
cmc
mov
popf
imul
stos
in
add
xor
jb
mov
add
xchg
push
in
lods
shl
scas
xchg
or
push
fwait
inc
mov
sub
xlat
push
(bad)
jno
cmc
lods
adc
inc
shl
pop
scas
jbe
mov
or
xchg
(bad)
mov
pop
pop
add
push
adc
add
and
dec
xchg
xchg
adc
cmps
test
(bad)
std
cmp
mov
dec
fnstsw
add
add
pop
mov
inc
inc
sbb
or
push
mov
and
mov
sub
sub
mov
pop
shr
outs
jno
sbb
test
lahf
push
xchg
mov
cwde
dec
sub
fstp
xchg
push
test
movs
mov
jne
out
psrlw
out
int3
fsubrp
das
pop
add
sub
inc
xor
push
das
xchg
xor
mov
pop
add
pop
into
bound
stos
retf
xor
or
xor
leave
cmp
pop
add
xor
ret
out
mov
inc
push
mov
jmp
xor
adc
fisub
xor
push
dec
and
(bad)
ss
add
popf
push
adc
cbw
movs
mov
jle
bsf
jl
lea
sub
mov
loop
mov
aaa
ins
adc
inc
mov
jae
test
popa
adc
in
repnz
cmp
add
sub
mov
outs
mov
sub
add
sub
in
or
inc
mov
test
jg
stos
outs
std
sub
mov
stos
sbb
mov
out
mov
repz
nop
dec
jge
mov
pop
lods
shl
mov
js
jno
(bad)
mov
push
pop
mov
cmp
push
push
mov
and
icebp
jo
mov
jae
add
mov
push
cli
add
push
xchg
push
outs
dec
out
cwde
add
inc
lods
mov
pop
aad
stc
mov
cld
mov
imul
in
pop
ret
sub
ins
push
mov
adc
xor
popa
ret
retf
int3
les
pop
std
retf
cmp
add
pop
movs
push
call
xchg
push
xor
popa
mov
push
or
ror
mov
sbb
jae
in
aam
cmp
stos
cs
aam
inc
and
mov
adc
dec
out
(bad)
repz
in
fwait
into
bound
out
xchg
sub
sti
mov
cmp
dec
mov
lahf
inc
jns
pop
out
mov
push
fdivp
and
ror
adc
add
xchg
std
popa
and
inc
addr16
inc
ffreep
(bad)
adc
les
push
cmp
repnz
mov
cmp
adc
retf
fist
pop
dec
push
jns
mov
xchg
jns
pop
cmps
test
hlt
mov
mov
xor
lahf
test
jb
imul
jbe
push
data16
mov
fdivp
out
clc
js
cs
mov
mov
loope
push
ss
cmp
fidivr
loope
mov
int
adc
cmp
(bad)
cld
not
fsubr
mov
loope
neg
xchg
outs
aaa
push
mov
sbb
inc
inc
ret
or
cmp
push
dec
cmp
je
pop
pop
sti
cmp
fild
lea
jmp
addr16
push
push
movs
fwait
inc
xchg
imul
stc
mov
cmps
xchg
ret
fcmovnu
xor
test
imul
sbb
ss
sbb
xor
sti
std
cmp
retf
retf
jl
(bad)
and
dec
cmp
mov
dec
or
and
xchg
in
mov
das
aad
cmp
xchg
pusha
add
sar
outs
pop
in
les
mov
push
lods
dec
pop
or
(bad)
pop
mov
sbb
movs
(bad)
jmp
jbe
ins
add
stos
les
ficomp
and
adc
xchg
dec
rol
fsubrp
or
push
fstp
test
lahf
call
ret
pop
or
jmp
push
scas
or
popf
mov
xchg
push
stos
and
mov
int3
add
popf
call
aaa
cwde
mov
and
sub
pop
(bad)
loop
scas
in
sub
scas
leave
sahf
cdq
aad
dec
push
add
out
sub
neg
call
xor
out
xchg
fild
dec
cmp
mov
push
inc
pop
(bad)
ret
out
repnz
dec
and
inc
sar
sahf
lods
push
lods
add
addr16
gs
inc
push
and
cld
add
lock
ss
xor
ret
in
inc
(bad)
jne
loope
icebp
dec
out
push
inc
mov
or
fdiv
cwde
test
test
pop
jbe
aas
stos
test
into
rcl
lock
popa
lock
sbb
lea
push
scas
aaa
push
add
adc
jbe
push
inc
jns
cmp
pop
and
sub
adc
xlat
imul
loop
loopne
test
shl
nop
jns
add
mov
je
pop
mov
fwait
bound
and
sti
ret
push
mov
scas
xchg
cmp
clc
scas
retf
or
repz
fcmovnb
push
sub
aas
cmp
movs
sub
or
lock
mov
sub
mov
adc
and
ins
jg
add
sbb
sahf
jb
scas
in
jl
adc
into
out
add
adc
jae
sbb
aas
sbb
fimul
dec
mov
mov
adc
sahf
in
repz
cwde
fdivrp
inc
sub
pop
add
sbb
fwait
cdq
push
sub
imul
dec
mov
xor
add
gs
outs
mov
lea
mov
shl
add
ja
xchg
jb
out
dec
sub
stos
xor
sbb
push
shl
stos
push
sti
mov
arpl
or
mov
fs
nop
fidiv
out
and
adc
jo
push
adc
pop
push
add
fistp
xchg
enter
mov
ror
sub
mov
outs
into
test
sbb
dec
jmp
mov
mov
lods
push
mov
fld
scas
fs
or
pop
clc
into
cdq
xchg
hlt
add
add
and
(bad)
pop
sbb
push
inc
jbe
sbb
cs
test
lds
pushf
push
adc
adc
outs
adc
sbb
imul
xchg
js
jnp
and
mov
mov
in
jb
stc
mov
jg
and
xor
xchg
cmc
adc
(bad)
mov
mov
cmp
cs
pop
push
mov
cmp
imul
sub
jg
cmc
in
fxch
push
xchg
movs
lock
rol
xor
not
mov
shl
xchg
fs
imul
hlt
stc
call
sbb
push
mov
or
mov
hlt
xchg
pop
or
mov
xor
dec
pop
mov
scas
in
dec
xchg
les
xchg
fsubp
sbb
cmps
cmps
mov
imul
fs
dec
test
pop
fs
ss
out
movs
out
dec
rol
push
xchg
dec
pop
mov
(bad)
pop
push
shl
inc
xor
inc
scas
sub
sti
jmp
push
jns
sub
sti
lahf
inc
cdq
push
lea
sub
inc
sub
push
sub
sub
cli
clc
fsub
ins
scas
jnp
retf
out
in
aad
sub
iret
push
ds
iret
push
jmp
sbb
mov
cmp
jp
repz
add
outs
cmp
mov
imul
xchg
std
ss
sar
outs
dec
and
inc
jge
sub
imul
sbb
test
and
push
(bad)
fdivr
arpl
dec
pop
jns
push
movs
clc
add
cmps
cdq
aaa
(bad)
push
pushf
in
push
pop
stos
push
addr16
imul
xchg
movs
repz
add
pop
add
retf
jecxz
enter
pushf
retf
in
adc
add
test
dec
and
sti
mov
jb
and
jge
retf
aam
jo
fs
fucomip
(bad)
mov
bnd
movs
mov
fnstenv
cdq
cmp
ret
rcr
mov
sar
mov
rol
out
add
retf
cmp
iret
xor
add
jle
popa
inc
push
mov
and
fucomip
inc
mov
fld
mov
je
sub
adc
aaa
ficomp
jbe
cmp
push
xchg
stc
mov
out
test
(bad)
(bad)
adc
aam
and
rol
add
int3
xor
sub
pop
sahf
dec
add
push
jmp
inc
mov
sub
out
js
jmp
cmp
arpl
fild
sbb
popf
xor
std
adc
in
cmps
pop
outs
push
aas
aas
mov
cwde
idiv
shl
mov
add
sar
pop
not
dec
(bad)
mov
popf
cwde
dec
mov
jns
dec
iret
mov
(bad)
(bad)
loopne
inc
stos
outs
jnp
and
mov
inc
mov
pop
jnp
xchg
sahf
sub
adc
shl
push
or
clc
xchg
(bad)
sar
lock
sbb
push
out
mov
and
je
add
retf
and
jmp
imul
inc
pop
(bad)
lock
inc
js
jns
xor
pop
ror
adc
adc
arpl
push
fnsave
aas
add
cld
cmc
mov
dec
sahf
add
mov
inc
data16
gs
fnsave
lea
popa
adc
push
dec
dec
test
clc
fild
imul
adc
mov
sti
jle
adc
shr
jae
sar
sub
add
daa
push
inc
xor
stc
ror
inc
leave
sar
push
mov
arpl
mov
(bad)
inc
(bad)
in
imul
mov
xchg
inc
xor
and
add
(bad)
movs
daa
loope
xchg
ja
push
jmp
pusha
add
scas
lods
adc
jnp
sub
fbstp
pop
stc
push
ds
inc
push
movs
cmps
xlat
push
arpl
push
xchg
inc
repnz
ficomp
ja
cmp
sbb
inc
mov
je
addr16
aam
outs
fsubrp
inc
pop
aaa
cdq
repnz
lds
push
in
in
iret
mov
mov
dec
mov
xchg
xor
addr16
push
imul
sahf
sti
jp
push
and
inc
xchg
xchg
daa
in
sub
pop
and
test
imul
movs
push
rcl
jp
lods
cmps
and
jle
push
(bad)
and
test
or
mov
movs
push
push
push
std
push
inc
test
ins
gs
sub
push
xchg
out
mov
adc
je
mov
jae
mov
pushf
xchg
popf
pop
cs
enter
out
cli
out
cmps
fwait
cmp
sbb
adc
sbb
mov
jmp
jecxz
test
aas
sbb
imul
aam
aad
dec
test
(bad)
lods
or
out
push
adc
or
and
scas
into
adc
lods
outs
lea
adc
or
dec
ss
cwde
call
jno
jb
push
add
loopne
xadd
gs
pop
call
push
xor
sub
call
xlat
jmp
inc
leave
or
adc
and
xsaves
cmps
es
mov
pop
and
fiadd
fsubr
inc
sub
xchg
mov
inc
fucom
leave
add
mov
pop
pop
les
mov
jle
add
xchg
scas
mov
aaa
into
nop
fisttp
sub
fcomip
out
pop
aaa
jbe
xor
shl
movs
lods
hlt
mov
shl
int3
push
jge
outs
mov
jmp
fmul
adc
adc
xor
mov
pop
cdq
stos
cwde
leave
fistp
mov
aam
dec
bound
in
cdq
add
xlat
sbb
jmp
sti
icebp
sub
and
test
aaa
enter
stos
aad
fld
loopne
imul
adc
in
add
mov
fmul
sub
popf
imul
stos
push
shr
pop
in
pop
jb
pop
scas
add
pop
mov
lods
fwait
mov
mov
outs
sti
pop
adc
push
loope
pop
(bad)
fsubr
inc
test
push
rcr
inc
adc
hlt
push
ficomp
xchg
or
and
mov
cs
xor
mov
pop
and
in
add
cmps
xor
push
fist
adc
mov
and
fstp
sbb
sbb
pop
sub
sub
jp
fsubr
neg
pop
mov
(bad)
leave
inc
mov
pop
jge
enter
adc
imul
adc
imul
jo
fxtract
mov
test
dec
aaa
scas
cmps
test
sub
push
test
sbb
mov
movs
push
jmp
imul
mov
lahf
mov
ret
and
arpl
int
cld
fs
xchg
aad
mov
test
xchg
in
add
add
mov
xor
xchg
int
mov
xor
push
adc
push
sub
retf
call
rcr
push
fcom
outs
push
add
inc
fs
scas
cmp
mov
loopne
sbb
leave
aaa
aas
sar
adc
dec
sub
xor
stos
mov
aad
sahf
xchg
stos
jl
call
mov
jge
pop
fwait
push
int3
loop
jmp
cs
adc
or
mov
mov
xor
mov
pop
cmp
retf
imul
fsubr
adc
pop
mov
pop
je
sbb
and
or
mov
mov
push
xor
and
neg
mov
outs
xor
push
cmps
lods
mov
mov
push
fwait
cli
test
pop
dec
push
cmp
mov
(bad)
js
xor
or
mov
adc
imul
int3
scas
inc
mov
pushf
ret
cmc
add
cmp
cmp
mov
xchg
es
repnz
iret
pop
xchg
xor
push
pop
sahf
sub
cwde
pop
mov
cmp
xchg
jae
fsub
xor
dec
lahf
push
jle
pop
xchg
pusha
jae
push
and
push
pop
jbe
and
xchg
in
adc
mov
or
stos
retf
ror
lods
scas
adc
lds
or
and
scas
ret
inc
push
add
test
push
into
dec
mov
jl
adc
retf
push
sti
add
sbb
imul
push
cmps
and
mov
sbb
(bad)
pop
(bad)
gs
js
xchg
inc
and
lods
and
jp
ins
or
dec
mov
out
call
or
call
arpl
movs
dec
pop
sub
lods
dec
das
adc
push
jo
xchg
mov
or
mov
jecxz
fs
jo
adc
(bad)
movs
pop
fwait
ds
dec
dec
iret
and
(bad)
push
mov
add
or
shl
jp
stc
fsubp
repz
retf
jne
and
inc
jb
loop
xlat
mov
jmp
loope
pop
nop
in
outs
ret
and
pop
mov
jecxz
cli
xchg
std
mov
outs
in
or
mov
inc
retf
cdq
icebp
(bad)
add
call
inc
xchg
push
fstp
lds
mov
sbb
mov
je
mov
lahf
xor
cmc
test
repz
paddsw
arpl
lods
mov
retf
push
scas
idiv
imul
jg
es
test
in
inc
dec
push
scas
dec
jg
adc
push
xor
fidivr
mov
push
je
and
out
mov
daa
mov
sbb
fisttp
(bad)
inc
mov
jg
cmp
sub
mov
dec
bound
inc
and
xchg
mov
mov
clc
sbb
clc
gs
(bad)
call
stc
pop
cwde
dec
ds
cdq
mov
in
std
mov
adc
gs
test
mov
add
std
jnp
mov
retf
stos
pop
mov
inc
add
ja
cs
in
test
mov
push
and
(bad)
leave
jo
dec
xor
out
stos
and
mul
es
xchg
mov
or
jmp
js
dec
xchg
dec
mov
add
enter
or
adc
cmps
imul
fsubp
pop
mov
aam
and
outs
xor
js
xlat
mov
mov
push
iret
imul
ja
je
rdpmc
in
ss
and
cmp
fs
dec
mov
sbb
sub
jbe
sub
or
outs
cli
bound
imul
pop
mov
pop
fisttp
pop
lock
sub
in
pusha
push
lahf
jbe
hlt
xchg
pop
xor
jo
outs
or
mov
retf
(bad)
push
cld
inc
push
jne
(bad)
dec
sub
cmp
jno
mov
pop
adc
push
test
jae
add
jge
mov
ror
outs
mov
lock
or
pop
push
push
inc
cmp
clc
jns
pop
or
mov
cmps
xchg
es
mov
les
mov
or
adc
mov
push
xchg
sub
es
mov
leave
jae
loopne
ja
mov
imul
js
add
ror
das
cmp
cmps
cwde
clc
neg
jg
outs
inc
ret
sbb
aaa
mov
pushf
jb
aaa
ret
loop
jae
mov
out
jl
jge
out
inc
imul
cmp
test
out
add
cmp
sub
test
fiadd
push
(bad)
mov
stos
xchg
ret
pop
adc
or
ret
or
jnp
mov
mov
adc
movs
cmp
jl
jg
ds
xor
jl
(bad)
mov
cmp
pusha
iret
(bad)
push
push
xor
or
push
fsubr
nop
lds
cmps
out
jae
je
sub
xor
popa
push
or
sbb
mov
ins
adc
mov
in
mov
or
push
pop
jns
scas
xchg
push
xor
add
repnz
xchg
std
xor
lahf
and
or
mov
(bad)
fwait
mov
daa
inc
or
dec
or
jg
cld
scas
xor
iret
das
mov
xchg
inc
repnz
jle
jle
sub
xor
cmp
cmps
xor
pop
or
daa
cmps
cdq
lods
movs
in
imul
or
aam
cmp
cmc
mov
inc
pop
lea
retf
mov
and
xchg
inc
jo
jecxz
pop
xor
dec
loope
xchg
pop
fiadd
mov
ret
ja
repz
xchg
jecxz
fild
data16
sar
les
popa
(bad)
retf
mov
jb
inc
sub
mov
fdiv
cmp
jnp
pop
test
push
jp
(bad)
(bad)
and
cmp
and
dec
stos
test
sub
jmp
inc
sahf
scas
aad
test
mov
dec
icebp
(bad)
icebp
add
push
ds
inc
jmp
aam
mov
cmp
push
daa
stos
mov
test
out
stos
test
mov
xchg
out
jle
fmul
mov
sub
sti
cld
div
mov
inc
and
cli
mov
mov
scas
dec
dec
jle
sub
jbe
cli
fbld
loopne
jl
rcr
sbb
movs
out
stos
sub
xchg
mov
ret
cmp
int3
and
push
xchg
push
fsub
mov
addr16
mov
jnp
mov
mov
sub
std
out
outs
xchg
sbb
adc
movs
adc
pop
xor
mov
cld
sbb
ja
outs
(bad)
mov
mov
enter
add
push
cmp
stc
xchg
dec
adc
movs
fiadd
nop
mov
xchg
sbb
jns
minps
(bad)
sahf
(bad)
xchg
xchg
je
je
dec
or
cmp
jle
cmps
pop
xor
cmps
ficom
mov
lods
cmp
sub
(bad)
pop
lods
sub
jo
pop
out
dec
pop
in
xchg
push
mov
mov
retf
adc
lahf
and
popa
ds
add
ja
adc
fcmovbe
cmps
js
ret
xchg
sbb
or
test
ret
add
and
cmc
add
pop
pop
dec
shl
jg
push
imul
push
dec
(bad)
stos
lods
xor
and
xchg
push
mov
inc
repnz
mov
call
xor
je
aaa
movs
mov
and
adc
mov
mov
adc
test
xchg
ins
sbb
in
adc
mov
idiv
pop
mov
mov
aas
arpl
daa
jnp
loopne
xchg
scas
mov
std
mov
pop
mov
(bad)
push
xchg
sbb
adc
into
not
push
jmp
or
push
(bad)
mov
push
mov
dec
call
xor
test
pop
test
xchg
xchg
and
out
inc
lahf
bnd
in
jecxz
mov
pop
jmp
inc
leave
(bad)
sahf
inc
mov
out
pop
(bad)
cmp
fs
or
pop
adc
mov
or
or
outs
inc
jecxz
pop
scas
and
cmp
mov
mov
pop
cmps
nop
mul
mov
(bad)
into
push
sub
dec
xor
pusha
ins
test
dec
add
adc
add
inc
cdq
aas
sti
dec
test
cmc
push
mov
jnp
pop
clc
cmp
mov
test
imul
jmp
push
(bad)
sbb
jmp
mov
xlat
into
lock
xchg
aaa
adc
repnz
adc
push
inc
or
adc
adc
add
mov
icebp
cmps
(bad)
es
push
outs
push
stos
push
adc
cmc
push
pusha
aam
gs
sbb
sbb
mov
sahf
mov
add
ins
fimul
dec
add
fisub
stos
lahf
stos
ins
ds
sti
rcl
push
mov
mov
and
sub
jmp
loope
ds
push
sub
jecxz
jne
out
and
pop
int
clc
cmps
or
fsub
add
adc
ret
(bad)
push
xchg
retf
pop
adc
ja
add
jle
sar
les
cmp
push
lds
mov
pop
xchg
fiadd
in
sub
aaa
sub
and
xor
pop
jno
lock
mov
mov
shl
jno
cmp
addr16
pop
int
pushf
inc
clc
int3
and
lahf
dec
push
fyl2x
sbb
dec
ret
outs
cwde
mov
pop
aam
xor
jno
mov
sub
ja
fs
int
inc
scas
cwde
add
mov
es
sub
cmp
jle
mov
adc
push
jns
iret
daa
arpl
xor
fdiv
and
movs
mov
pop
sar
cdq
scas
mov
inc
push
cld
and
jno
and
(bad)
into
xchg
(bad)
mov
jl
xchg
retf
mov
sahf
call
xchg
mov
dec
push
stos
mov
dec
gs
repz
mul
xor
imul
mov
sbb
mov
sbb
push
push
pushf
inc
xor
add
sahf
nop
pop
mov
xchg
icebp
or
(bad)
cmp
xlat
jb
sub
shl
pop
cmc
inc
call
push
jmp
(bad)
cs
mov
fsubr
mov
fs
jno
pop
popf
or
fs
mov
sbb
and
test
mov
jbe
enter
sbb
imul
out
push
movs
outs
outs
repz
loop
pop
bound
and
pop
sbb
jno
xor
jl
rcr
ret
fwait
mov
lods
cmc
or
xchg
push
pop
movs
pop
mov
inc
pop
icebp
cmp
cmps
push
jecxz
inc
xchg
add
sbb
nop
into
retf
cli
mov
pusha
jg
sar
mov
pop
fisttp
and
pop
and
or
push
imul
in
xchg
jmp
jo
cwde
sub
sahf
mov
nop
cmp
dec
sub
pop
mov
and
mov
call
jns
sub
mov
cmp
and
inc
fwait
(bad)
sbb
popa
or
sub
hlt
xor
xor
mov
pushf
dec
mov
fwait
xchg
pcmpeqb
jle
mov
push
rep
mov
xor
aaa
(bad)
lock
xor
and
mov
push
cmovae
(bad)
fld
sub
dec
scas
push
jno
stc
push
add
xchg
sbb
mov
push
and
jg
shrd
ror
pop
jb
xor
sub
cmp
fcomp
call
out
mov
add
movs
sti
nop
mov
sbb
ret
mov
stc
adc
sbb
adc
scas
mov
xchg
dec
cmp
xchg
pop
cmp
inc
push
add
sbb
call
retf
inc
sub
iret
(bad)
push
fsub
adc
jp
jl
mov
mov
mov
mov
jmp
movs
add
push
fmul
loope
sar
out
ins
sub
test
test
in
ficom
jle
dec
jne
cmp
or
xor
gs
out
jmp
jmp
push
dec
or
jle
jecxz
sbb
int
jns
lds
dec
add
lahf
call
ins
pop
jns
sti
lods
lahf
or
xchg
les
in
or
push
ja
pop
das
adc
sub
lea
enter
arpl
pop
sub
xor
repz
add
ds
mov
ins
xor
cmp
imul
adc
add
in
imul
xchg
arpl
icebp
dec
pop
or
fwait
sub
jmp
test
mov
pop
xor
sbb
mov
hlt
bound
xor
dec
adc
mov
jbe
fcomp
xchg
mov
inc
jl
jne
mov
pop
sti
jl
pop
push
out
lods
xor
push
pop
popa
jae
nop
dec
imul
nop
cmp
into
xchg
push
mov
pop
lods
jo
inc
jp
jae
sub
mov
inc
fs
push
add
ror
aam
xchg
sbb
int3
repnz
stc
sub
xchg
pop
popf
call
test
and
xor
mov
and
xchg
push
daa
cmp
sbb
and
clc
xchg
inc
mov
test
or
aam
shr
stos
xor
loop
jbe
push
aam
and
add
aad
adc
jnp
pusha
add
adc
add
cmps
ds
and
push
mov
cmps
rcl
and
sbb
repz
cmp
push
clc
xor
inc
addr16
xor
das
sub
mov
(bad)
xchg
(bad)
xchg
pop
rcl
xchg
jle
mov
leave
mov
dec
mov
inc
sub
mov
mov
ret
sub
pushf
repnz
in
gs
into
cmp
sbb
in
leave
fcomp
mov
clc
sub
jns
add
int3
ret
xchg
imul
adc
mov
mov
add
jp
out
(bad)
fadd
out
push
pop
repnz
arpl
pop
imul
xor
or
dec
mov
inc
icebp
pop
jbe
pop
in
jnp
int
push
aam
and
xor
mov
push
pop
mov
mov
iret
xlat
sub
call
jno
dec
mov
add
imul
add
pandn
jmp
(bad)
jmp
pop
call
adc
push
cli
into
mov
retf
fidiv
push
aaa
pop
mov
inc
xchg
inc
cmp
fcomp
out
(bad)
repz
xchg
ret
push
ret
lods
(bad)
mov
cmp
shr
mov
push
std
dec
sub
mov
adc
fldenv
push
outs
cmps
inc
adc
mov
and
jb
dec
add
repnz
add
adc
jbe
(bad)
fsub
retf
popa
aad
outs
and
cmp
mov
out
mov
ss
cmp
and
mov
jl
xor
out
pop
loopne
pop
adc
xchg
and
out
popa
fdivr
xchg
adc
sbb
test
dec
aas
in
mov
sub
add
in
cmc
out
sub
dec
dec
mov
push
in
mov
fistp
jg
lods
mov
jp
clc
(bad)
sub
adc
sbb
dec
call
mov
sbb
pop
fisttp
adc
loope
push
repz
dec
lods
gs
mov
sar
pop
lods
push
cmc
fstp
pop
imul
inc
mov
shr
and
cmp
div
xor
ror
lods
pop
fdecstp
push
ror
xchg
dec
lods
repz
out
push
pop
adc
stos
ja
xor
dec
lods
(bad)
out
mov
cmp
call
fld
cdq
shl
popa
jge
ror
xchg
sub
xor
xchg
dec
and
retf
fwait
xlat
out
inc
nop
or
ret
leave
int
je
ss
sub
(bad)
pop
iret
aam
dec
or
mov
cmp
inc
sbb
cmp
pop
pop
or
and
xor
adc
inc
out
mov
shr
pushf
mov
lea
mov
(bad)
(bad)
iret
aas
inc
lock
scas
pop
cmp
les
retf
push
cmp
xchg
xchg
lock
aam
push
sbb
inc
xchg
scas
mov
inc
cmps
push
neg
jge
push
cmp
xor
or
js
add
mov
lock
inc
ins
test
sub
mov
mov
popf
add
loop
std
pusha
add
shl
out
sahf
or
push
mov
ja
mov
or
(bad)
outs
inc
sub
scas
pop
fidivr
cdq
inc
call
(bad)
test
mov
inc
not
dec
icebp
daa
mov
(bad)
mov
int3
lock
aaa
(bad)
int
or
addr16
cs
jnp
cwde
pop
or
and
xor
cdq
add
loopne
xor
scas
stos
ds
addr16
test
jae
add
test
xor
lods
cmp
popa
inc
mov
leave
pop
sti
and
add
mov
into
pop
xlat
outs
fiadd
repz
adc
das
stos
pop
or
mov
add
sbb
pop
cmp
mov
xor
leave
(bad)
sahf
loopne
inc
sbb
or
leave
adc
aaa
xor
sahf
pop
xchg
jae
addr16
dec
inc
int
test
xchg
mov
cmp
adc
adc
popa
pushf
cmp
adc
and
lods
cmp
inc
in
shr
popa
mov
int3
jb
imul
dec
mov
fbstp
jle
inc
push
loope
xlat
fdivr
add
lahf
add
fisubr
fnstcw
in
retf
jmp
dec
pop
loop
out
and
and
cmp
push
ror
push
test
dec
icebp
push
cld
outs
es
in
and
pop
cmp
push
jmp
pop
jbe
jmp
and
outs
(bad)
nop
mov
mov
cmp
fnstsw
dec
loope
jg
aad
push
and
jns
dec
pop
inc
push
bound
shl
aas
mov
push
xchg
jle
(bad)
jno
add
push
ins
sar
mov
cmps
and
cmp
icebp
dec
mov
xchg
adc
iret
in
jbe
mov
or
cmp
or
adc
ds
push
and
inc
jp
inc
popa
rcl
lds
adc
ins
mov
cmc
lods
out
pop
test
or
sub
pop
mov
pop
dec
out
cdq
dec
ds
daa
repnz
and
mov
xchg
or
push
pop
or
and
push
adc
or
ficom
mov
movs
sbb
mov
cmp
sub
aas
dec
nop
call
ror
ins
add
lods
repz
adc
xchg
and
and
test
enter
xchg
sub
loop
into
mov
adc
cld
cmp
and
movs
mov
push
adc
pop
xchg
jno
je
lods
or
sbb
push
scas
dec
sbb
loop
inc
loopne
cmc
(bad)
cmp
inc
mov
push
inc
std
bound
out
and
mov
(bad)
push
pop
imul
sbb
push
mov
loop
retf
dec
mov
in
pusha
sub
test
jge
jmp
mov
stos
inc
mov
retf
ret
ss
(bad)
mov
xchg
xor
mov
shl
inc
jp
imul
cs
ins
cld
xchg
add
add
sub
jg
mov
xchg
mov
inc
sbb
mov
out
in
and
add
cmp
sub
adc
mov
fst
mov
push
loope
and
inc
sub
mov
mov
(bad)
addr16
repz
xor
push
pushf
mov
dec
fstp
cmp
jnp
sub
or
jns
retf
es
imul
mov
mov
push
sbb
mov
pusha
push
mov
mov
retf
inc
mov
loope
pushf
pop
loopne
dec
push
pop
mov
jl
stos
and
pop
fwait
sbb
movs
jne
(bad)
adc
add
jb
pop
mov
cmp
sbb
adc
mov
dec
shl
adc
pop
std
mov
and
mov
bound
sbb
stc
add
pop
and
rcr
xchg
shr
adc
fsubr
scas
inc
mov
sbb
les
xchg
popa
xchg
xor
mov
xor
jl
jle
cli
fild
retf
jp
test
mov
and
sbb
cmc
adc
jge
and
nop
test
xor
idiv
ficom
std
xlat
es
jmp
fdiv
cmc
push
ss
xchg
ins
sti
je
call
mov
jne
mov
jecxz
cdq
sti
inc
mov
div
jb
jo
pushf
jg
xor
call
(bad)
cdq
and
cmp
jg
je
jmp
push
mov
rcr
mov
mov
aaa
or
mov
cmc
test
addr16
js
test
leave
fidivr
mov
fs
mov
(bad)
movs
adc
or
cwde
xor
out
sbb
cmp
iret
push
jbe
in
sbb
cmp
cld
sub
rol
rcr
stos
jo
rcr
daa
ret
dec
xor
inc
rcl
sub
dec
add
out
test
adc
adc
mov
inc
pop
xchg
or
mov
iret
push
lods
mov
mul
sub
imul
sub
jmp
dec
fnstenv
cs
leave
and
ss
jnp
loop
int
push
jb
mov
es
xchg
test
adc
mov
shl
mov
inc
mov
mov
pop
mov
jmp
rol
pop
mov
loop
jle
lods
cmp
mov
mov
cmps
cmps
es
jo
lods
push
mov
loop
add
(bad)
xor
jns
xchg
out
adc
imul
push
stos
or
and
outs
repnz
std
int
fwait
popf
shl
call
pop
sbb
xor
sub
test
mov
or
ret
out
xlat
test
sar
xchg
sbb
(bad)
inc
mov
mov
lahf
icebp
adc
jmp
push
xchg
pop
iret
jno
lock
ss
mov
rcr
retf
sub
and
push
out
div
inc
neg
add
dec
xor
fcomp
jl
or
mov
cld
jno
popf
xlat
mov
int
push
mov
dec
mov
adc
mov
movs
xchg
jmp
xchg
call
sbb
pop
cwde
jne
fimul
sbb
pop
adc
arpl
push
jbe
push
push
push
pop
xor
mov
scas
pop
rcr
cdq
sbb
(bad)
scas
add
repz
xor
mov
outs
jne
sub
mov
mov
jno
push
sbb
pop
mov
shr
mov
xchg
loope
sahf
mov
test
addr16
arpl
loopne
pop
mov
sbb
(bad)
xlat
cmps
clc
inc
jb
and
sbb
outs
in
push
test
fisttp
jle
ins
jmp
lea
cli
mov
std
gs
xor
xchg
test
sub
lahf
xchg
dec
jbe
pop
loopne
mov
and
dec
aam
out
pop
in
gs
lahf
pop
ds
mov
shl
retf
in
cmc
adc
mov
mov
imul
repz
xlat
xchg
fwait
mov
(bad)
push
aas
retf
movs
in
jo
pop
(bad)
pop
push
dec
jne
scas
jge
pusha
call
stos
dec
leave
call
jno
pop
mov
inc
aam
lds
fmul
or
mov
inc
mov
outs
xor
dec
bound
sbb
and
pop
inc
mov
sbb
cli
push
cli
mov
lea
pop
pop
and
test
out
or
pop
jno
test
aam
mov
shl
cli
cs
scas
ror
into
cld
vmovsldup
(bad)
nop
sub
lea
lods
mov
xor
sti
fidiv
push
test
xor
das
fnstcw
xchg
mov
and
or
lods
or
xchg
ret
arpl
inc
leave
ins
fwait
sti
xchg
sbb
(bad)
xor
pop
imul
(bad)
(bad)
and
loopne
jne
cmp
sub
in
fs
cmp
cmp
or
test
pop
dec
int
inc
mov
mov
add
push
dec
pop
jl
fdiv
xor
out
mov
fisubr
sub
in
and
call
out
inc
outs
cmp
loop
jno
cmps
xor
fcomp
mov
pusha
and
inc
(bad)
ds
sub
retf
mul
xchg
imul
das
add
lds
pop
mov
lds
jae
inc
in
imul
dec
push
adc
enter
jae
push
call
sbb
sbb
pop
xchg
pop
mov
jo
stos
cmp
xlat
loopne
xor
push
jne
pop
(bad)
movs
retf
push
(bad)
enter
addr16
int
fwait
mov
mov
xchg
inc
aad
call
push
data16
hlt
and
xor
popf
or
mov
xchg
arpl
mov
and
pop
adc
mov
xor
jbe
push
xor
movs
ret
push
call
xchg
mov
(bad)
int3
cld
pop
xchg
sbb
pushf
daa
aaa
rol
loopne
mov
mov
inc
cs
(bad)
retf
out
add
iret
or
cmps
cmps
mov
cmp
and
or
int3
adc
iret
dec
cli
inc
xor
imul
xchg
pop
(bad)
int3
loop
jp
mov
popf
(bad)
sbb
loopne
and
mov
push
retf
outs
cmp
xchg
push
repnz
xchg
fsubr
pop
(bad)
ds
das
xor
jmp
div
pop
and
and
fstp
ja
sbb
sub
inc
mov
in
popf
cmp
push
push
shl
test
jo
jo
aaa
dec
jne
jp
pop
pop
fcmove
aaa
out
aam
outs
mov
mov
sbb
push
jmp
pop
push
add
imul
xchg
out
xchg
rcr
adc
outs
(bad)
jmp
sub
jmp
retf
arpl
cmp
adc
jle
movs
mov
pop
test
sub
xor
dec
dec
xchg
in
jae
jmp
add
sbb
pop
int3
(bad)
pop
inc
(bad)
dec
inc
sar
push
cmps
fnstenv
imul
push
xchg
out
nop
and
sub
push
push
push
shl
js
lods
xchg
inc
cmp
and
mov
jmp
sub
gs
mov
add
and
enter
push
inc
ror
sub
enter
xor
das
mov
mov
lea
sub
or
dec
jo
std
mov
inc
push
push
push
outs
mov
mov
dec
mov
inc
sub
rol
push
movs
cmps
and
mov
cld
push
xchg
(bad)
xchg
pop
jl
imul
xchg
(bad)
adc
lahf
enter
jae
stos
push
pop
lods
add
enter
lock
mov
pop
pop
pop
cmp
sbb
sub
or
std
xchg
test
or
ror
jmp
sbb
movs
scas
fisubr
ins
leave
retf
and
and
cdq
cmp
jmp
mov
push
pop
inc
ds
pushf
dec
jne
scas
dec
outs
mov
leave
xor
cmps
xchg
mov
fist
dec
js
repz
cmp
xchg
sub
mov
mov
sub
cmp
stos
adc
and
adc
jle
pusha
dec
jle
cs
les
or
(bad)
add
xchg
inc
and
dec
shl
(bad)
cli
pop
or
shl
sub
lea
retf
xlat
das
push
mov
psubusw
ins
xlat
into
push
call
push
ins
cmps
es
pop
dec
movs
jl
rcr
inc
xor
outs
popf
and
clc
fwait
ss
mov
int3
(bad)
xor
aaa
push
nop
icebp
dec
and
repz
xor
pop
(bad)
or
in
push
mov
push
mov
icebp
add
cmc
leave
xor
xor
mov
mov
outs
stc
push
mov
das
pop
push
shl
ja
or
push
jbe
stos
fcmovu
inc
pop
aaa
stos
push
push
cmp
retf
add
scas
pop
cmp
or
inc
nop
sub
jne
cmp
inc
dec
dec
sbb
dec
loopne
sub
xchg
jbe
jns
(bad)
and
stos
xor
(bad)
out
add
mov
push
mov
sub
push
jae
rcr
movs
mov
arpl
dec
xchg
xchg
dec
push
add
rcl
bound
push
repnz
dec
add
add
fist
(bad)
in
outs
ret
es
std
sbb
popa
test
pop
repnz
sar
mov
jge
stc
push
mov
nop
bound
fstp
add
cmc
outs
cmp
icebp
pop
xor
sbb
ficom
sbb
jecxz
rcr
xor
push
or
inc
hlt
xor
push
sbb
cmp
pop
xor
cmpxchg8b
jge
fidiv
xchg
xor
scas
adc
iret
in
das
jnp
(bad)
ror
(bad)
test
(bad)
push
push
popa
test
push
jmp
dec
inc
aas
sbb
or
dec
das
mov
mov
test
dec
jmp
pop
jne
add
fsub
(bad)
ror
dec
fist
sbb
mov
sar
mov
or
daa
adc
fild
fiadd
add
stos
mov
pop
push
imul
pop
loope
or
cmp
std
(bad)
dec
mov
mov
jl
movs
or
test
daa
cmp
pushf
loopne
in
fs
sbb
push
dec
(bad)
fprem1
push
ins
mov
add
cwde
popa
push
mov
jbe
sbb
and
jge
cli
mov
movs
mov
fcom
mov
data16
or
cmps
sbb
sbb
int3
aaa
(bad)
aad
xchg
pop
rol
mov
ret
mov
jle
retf
rcr
and
or
cmps
push
int3
or
add
js
into
dec
(bad)
bsr
shr
cs
pop
scas
mov
jmp
cmp
jns
test
imul
add
pop
sbb
bound
cld
lods
sbb
(bad)
scas
inc
mov
pop
jno
out
cmp
neg
ins
adc
popa
push
pushf
push
les
repz
and
sahf
mov
jg
xchg
mov
jl
pop
xchg
mov
jo
sbb
adc
sub
jmp
sbb
mov
jb
or
jecxz
stos
aad
je
or
aaa
mov
ins
push
test
mov
mov
mov
adc
adc
push
and
(bad)
mov
fcomp
xor
lahf
icebp
scas
jecxz
mov
gs
push
inc
mov
loop
lock
or
cwde
fsub
int3
retf
xor
jl
inc
out
add
pop
cmp
cwde
jnp
or
popa
xchg
pop
xchg
ins
xchg
or
outs
stc
popa
lock
push
sbb
or
pushf
push
outs
mov
sti
movs
add
fwait
and
test
or
pushf
push
pushf
sub
and
fwait
jae
ins
push
xor
xchg
fwait
xchg
imul
pop
stos
dec
pop
fs
add
and
ds
pop
adc
pop
pop
call
mov
mov
(bad)
mov
mov
sbb
(bad)
pop
push
loope
jns
jg
mov
push
xor
sub
scas
fisubr
cmp
adc
retf
sub
cs
and
ss
dec
pop
jo
enter
in
lods
jb
jmp
dec
mov
push
iret
mov
mov
retf
mov
rol
jae
adc
xchg
jbe
sbb
inc
or
inc
mov
sub
out
xor
fsubr
sub
mov
test
cmps
(bad)
jmp
data16
imul
mov
fwait
pusha
jbe
iret
sub
push
movs
mov
and
mov
push
sbb
daa
loopne
inc
add
mov
out
push
jg
ret
lods
sbb
cld
xor
retf
xor
nop
adc
(bad)
and
push
dec
fldenv
xchg
sar
sbb
leave
imul
imul
xor
lods
xor
mov
pushf
int
or
sbb
ins
push
sbb
cmp
mov
(bad)
retf
outs
aas
xor
int3
and
int3
popf
pusha
jne
mov
mov
sub
and
loop
xor
sahf
push
mov
popf
sub
xchg
or
or
cmp
loope
push
or
int3
xchg
push
jp
repz
rol
pusha
mov
xor
enter
movs
mov
inc
fbld
xor
push
out
nop
retf
cmps
scas
mov
cmps
mov
cld
xchg
mov
mov
test
and
shl
mov
pop
xchg
movs
add
int3
bnd
sbb
dec
rcl
pusha
ja
xor
cmp
push
adc
dec
mov
push
call
sub
jbe
cmps
inc
sbb
cdq
ss
or
ret
dec
in
add
dec
or
xor
dec
(bad)
jmp
push
fiadd
cmc
adc
mov
ja
mov
shl
out
push
push
fist
icebp
stos
jg
(bad)
out
or
xchg
sub
cmp
aaa
stos
icebp
cmc
scas
mov
pop
sub
cli
inc
out
movs
ficom
xlat
sub
loop
stc
push
inc
add
xchg
scas
pop
mov
cwde
(bad)
push
mov
cmps
add
loope
test
or
rcr
mov
or
adc
and
les
jle
rcl
adc
cdq
out
in
push
push
bound
repnz
mov
cwde
or
add
cmp
dec
stos
in
sub
fst
scas
mov
pop
cmps
imul
mov
std
sbb
js
pop
jecxz
repz
fidiv
mov
cmp
jbe
ror
repnz
sar
inc
aam
adc
jae
pusha
stc
adc
jae
or
fsub
push
dec
outs
loopne
out
sub
push
sar
ja
jmp
sbb
dec
jbe
test
das
call
aaa
fnstenv
mov
ret
(bad)
push
(bad)
mov
mov
push
mov
loope
mov
das
push
outs
js
xchg
aam
cmp
sub
shl
lds
imul
clc
jno
push
add
icebp
mov
push
mov
nop
hlt
jne
xor
mov
dec
mov
adc
(bad)
rcl
mov
aaa
rcl
jecxz
mov
adc
mov
jbe
sti
xchg
jb
std
mov
fdiv
cld
lods
stc
add
sar
shr
pushf
mov
push
dec
mov
jnp
outs
push
inc
push
sbb
add
inc
sti
les
popf
mov
xchg
jmp
in
jne
xor
and
inc
mov
xchg
cmp
mov
jmp
in
jg
ins
lds
call
mov
pop
jp
hlt
out
iret
das
fldenv
mov
out
sub
shl
leave
mov
push
mov
in
mov
mov
mov
adc
into
dec
xlat
rol
dec
stc
or
ss
pop
cmp
cmp
loop
sar
push
adc
push
jmp
and
xchg
dec
je
mov
pop
sub
xchg
in
and
bnd
aam
or
cmps
sbb
mov
test
das
fild
imul
xchg
pop
push
imul
imul
add
(bad)
push
(bad)
push
in
mov
scas
sub
ins
pop
aas
rcl
out
fstp
jge
sar
outs
add
test
lea
ins
cmc
ins
fdiv
inc
loope
out
mov
jge
fadd
nop
sub
adc
stos
dec
jecxz
lods
in
test
mov
(bad)
ds
dec
pop
jecxz
fwait
sub
push
add
fdivrp
mov
fsubp
push
push
mov
ss
out
retf
push
fcmovb
dec
in
shr
push
pop
jg
mov
lock
stos
lahf
adc
(bad)
inc
lea
add
xlat
sub
sahf
mov
cdq
fwait
xor
lods
sub
inc
pop
sbb
inc
enter
inc
int3
mov
dec
fiadd
mov
mov
adc
jno
repz
sub
shr
sbb
or
in
adc
add
and
cmps
mov
pop
sbb
cli
push
xor
iret
add
jge
or
out
pop
jne
hlt
mov
sbb
jmp
retf
jns
(bad)
out
or
push
mov
pop
loope
mov
mov
lea
mov
adc
jmp
les
cli
loopne
xchg
mov
shld
mov
jg
jbe
test
sti
cmps
(bad)
add
jo
cwde
push
retf
inc
test
jp
push
sbb
rol
sub
and
push
aam
clc
call
lods
cwde
mov
sbb
inc
nop
dec
cmps
not
adc
mov
inc
lock
xlat
stc
test
or
pop
loop
cmp
in
cmc
mov
call
jge
mov
pop
jb
(bad)
mov
cmp
inc
cs
sbb
imul
sbb
mov
rcl
fmul
pop
lods
shl
inc
cmp
adc
adc
daa
mov
or
pop
(bad)
sub
and
jo
mov
xor
clc
adc
push
mov
xchg
sub
ins
or
mov
push
mov
in
xor
jmp
stc
mov
(bad)
jno
ret
test
into
in
or
cmp
in
adc
add
dec
rol
out
(bad)
sub
inc
std
jmp
imul
outs
mov
fisubr
ret
loop
movs
mov
jns
scas
mov
jg
loopne
dec
stos
repz
mov
sub
icebp
mov
out
dec
aaa
pushf
xor
pop
sbb
mov
mov
mov
lahf
mov
iret
inc
(bad)
mov
pop
jle
fdiv
sub
fucomip
xchg
fmul
fucom
enter
test
xchg
movs
ficom
repz
cs
repz
test
dec
repnz
pop
dec
add
fmulp
scas
aad
ror
mov
add
mov
test
inc
je
les
aam
bound
adc
push
push
fsub
pop
mov
dec
inc
jg
xor
and
shl
sbb
shr
loope
test
popf
sub
mov
test
mov
test
repz
pushf
adc
fldcw
aaa
(bad)
and
jmp
call
hlt
adc
xchg
imul
imul
and
mov
mov
mov
jmp
adc
fcom
inc
cmp
pop
stos
test
jae
or
aam
(bad)
in
mov
xor
mov
mov
enter
push
daa
inc
dec
out
xor
dec
dec
mov
(bad)
js
bound
inc
or
mov
hlt
popf
push
push
push
adc
into
xchg
in
lahf
ja
(bad)
movs
push
xor
dec
lock
jae
xchg
sub
xchg
loopne
and
xchg
ins
and
or
leave
fld
ins
loope
push
cmp
and
jmp
jmp
push
xchg
shr
push
jno
sbb
pop
ret
stc
cmp
bswap
inc
mov
es
dec
push
into
mov
mov
mov
jecxz
inc
ins
cs
repnz
icebp
(bad)
out
push
inc
xchg
jmp
call
test
lods
imul
mov
jne
jmp
cmp
retf
loop
push
mov
pop
inc
iret
cdq
push
or
jbe
ins
ins
repnz
in
push
outs
xor
jmp
inc
fidivr
dec
fwait
iret
inc
jecxz
mov
push
dec
call
inc
or
inc
or
jnp
inc
inc
clc
out
aad
test
bound
lock
das
jge
clc
push
or
dec
movs
and
xchg
push
scas
and
mov
push
ret
pusha
imul
push
sahf
shl
psrld
mov
cmps
pop
inc
jno
gs
cmp
sbb
or
rcr
add
test
and
jge
test
or
out
in
add
clc
cmp
dec
call
icebp
inc
ins
test
loopne
sti
inc
xchg
inc
out
pop
xor
cli
out
int3
sbb
pop
lods
mov
mov
and
sbb
sub
lahf
push
jae
pop
jmp
out
cmove
jae
les
fs
xor
jb
and
push
sahf
xor
jns
pop
int3
arpl
add
mov
pop
or
cmp
jbe
jnp
and
xchg
mov
aas
rol
call
adc
inc
stos
repnz
sub
pop
jb
mov
sub
nop
dec
fdivr
inc
(bad)
pop
and
fcomp
mov
mov
cmp
rcr
mov
int3
push
add
jecxz
sbb
and
jg
or
cmp
sub
sbb
arpl
cmps
dec
jmp
add
mov
xor
add
loope
pushf
(bad)
push
sub
jg
ror
sbb
jmp
mov
cs
imul
popa
pushf
pop
les
mov
xlat
(bad)
or
add
movs
dec
sub
mov
cmc
(bad)
dec
push
ret
jge
cli
push
into
xor
lea
adc
sbb
pop
push
mov
jno
xchg
xchg
pusha
arpl
inc
add
jmp
xor
(bad)
mov
rcl
rcr
(bad)
rcl
lds
or
push
fucom
cdq
add
xor
inc
lahf
inc
xchg
jle
loope
xchg
cmp
xchg
sbb
inc
sbb
xchg
sub
mov
rcl
lock
mov
imul
xor
mov
or
xchg
sub
dec
mov
adc
inc
les
loope
mov
fsubr
xchg
scas
data16
cmp
test
xor
lea
mov
xlat
cdq
lahf
cmps
add
add
mov
mov
bnd
sub
push
and
in
inc
mov
adc
test
frstor
mov
mov
cwde
clc
ins
sbb
sbb
adc
jns
mov
xor
adc
mov
inc
inc
sbb
sub
jge
xchg
outs
ins
add
xlat
shl
arpl
xchg
out
cmp
lods
inc
mov
mov
inc
outs
dec
data16
pop
test
push
rol
or
sbb
icebp
mov
cmps
jmp
xor
test
xchg
pop
inc
icebp
mov
sbb
cmp
dec
ds
lds
sbb
(bad)
rcl
push
mov
repz
add
push
and
outs
ins
or
movs
(bad)
lock
dec
push
in
adc
jnp
xor
fdivr
ss
sub
xchg
(bad)
mov
mov
repz
xor
lods
jnp
imul
and
jno
sub
(bad)
mov
call
pop
dec
jae
push
gs
cmc
aas
cwde
stos
retf
push
call
push
mov
callw
jge
fiadd
sub
or
push
push
sbb
mov
sar
pushf
mov
and
fs
or
sub
xchg
rcl
cmp
and
cmp
inc
and
pop
mov
jmp
ins
cmp
xor
pop
add
fldpi
cdq
imul
mov
dec
icebp
push
das
xor
punpcklbw
(bad)
lea
sbb
mov
or
pop
stos
jmp
xor
mov
push
mov
or
sbb
sub
mov
shl
jne
push
scas
js
mov
js
rcl
into
mov
jl
ret
test
mov
loopne
jnp
sahf
or
cli
pop
xor
jge
clc
cdq
mov
jb
nop
lods
pop
in
sub
sbb
scas
push
cmps
cmp
ret
push
jmp
xor
jmp
jne
mov
dec
std
push
sub
or
lock
jge
(bad)
dec
mov
in
pop
lods
shl
into
adc
fnstcw
mov
aas
stos
pop
push
popa
imul
bound
mov
icebp
dec
fcom
push
or
in
pop
lock
leave
std
and
jp
pusha
jmp
pop
sbb
dec
je
jp
arpl
jmp
push
sub
fidiv
test
cmp
pop
cld
add
call
cmp
int3
xchg
mov
and
adc
jmp
xor
adc
mov
and
fiadd
or
pop
div
fldenv
mov
mov
sbb
loopne
sub
ret
sub
nop
movs
sub
push
xor
pop
ret
xchg
int3
or
or
push
int
dec
jnp
std
jmp
push
mov
xchg
gs
in
lock
aas
jbe
push
fs
fwait
push
inc
inc
std
and
fwait
cmp
mov
and
mov
dec
ds
repnz
shr
sub
cdq
test
mov
adc
es
lahf
ins
int3
push
push
push
aam
xchg
jb
ss
push
popf
clc
adc
pop
mov
mov
fldcw
cmps
adc
in
push
inc
add
dec
or
cmps
or
cmps
push
iret
add
js
pop
call
adc
add
and
mov
jo
retf
ins
push
sbb
dec
mov
retf
cmovl
and
hlt
ja
aas
jo
(bad)
sbb
(bad)
xor
mov
in
pop
call
dec
mov
xor
int
std
cmp
mov
push
pop
xor
mov
retf
fst
pop
jge
and
or
add
mov
mov
sub
jmp
sub
or
ror
adc
scas
(bad)
mov
in
mov
call
sub
scas
fistp
fild
jmp
repnz
call
stc
sahf
jo
dec
xchg
or
mov
sti
outs
nop
jmp
inc
push
pop
adc
test
cdq
adc
out
mov
imul
in
ss
or
aad
sub
cmp
(bad)
hlt
sahf
mov
bound
add
or
fcomp
or
inc
scas
rcl
ja
adc
test
out
add
into
add
cmps
es
xor
iret
enter
dec
pop
adc
movs
fs
sub
sbb
mov
gs
jbe
cmc
cs
mov
lods
data16
cmp
sbb
test
fcom
das
scas
xor
cmp
movs
in
xchg
inc
outs
ins
ror
retf
mov
dec
jns
jbe
push
xchg
fld
in
rcr
cld
mov
push
cmps
pushf
pop
adc
and
in
scas
jmp
pusha
xor
jmp
setnp
adc
fisttp
pop
xchg
addr16
cmp
clc
lods
and
add
mov
add
push
mov
or
cmps
shl
pop
push
dec
out
push
push
ret
mov
jno
cmp
test
add
cmp
or
and
mov
sub
mov
lock
dec
add
xchg
push
add
and
ins
dec
leave
aad
shr
xor
sahf
or
enter
add
movs
(bad)
jmp
xor
clc
adc
push
scas
std
jae
and
dec
mov
movs
(bad)
cmp
mov
or
ret
mov
xor
mov
fstp
test
xor
dec
(bad)
mov
inc
loopne
jo
inc
push
arpl
xlat
retf
(bad)
retf
add
add
mov
push
in
adc
out
or
add
aas
push
pop
or
ins
inc
fidivr
cmp
fcomp
pop
fnsave
inc
out
cmp
mov
(bad)
sbb
ins
add
inc
xchg
cmp
dec
imul
push
inc
shl
je
pop
jle
loopne
inc
jns
aad
mov
jno
push
fcmovnb
stos
iret
dec
jmp
pop
push
mov
test
xchg
popa
inc
xchg
cld
xchg
cmp
add
jmp
adc
add
out
call
dec
xlat
shl
fst
xchg
fs
scas
mov
dec
scas
fs
dec
push
in
std
mov
fsubr
ficom
mov
jge
ds
jp
fidivr
cli
ins
or
cmp
icebp
mov
and
cdq
mov
dec
shl
mov
cmp
sub
sbb
nop
add
ins
icebp
loope
mov
mov
test
movs
dec
mov
das
je
cld
inc
ja
sti
mov
jle
les
(bad)
push
mov
clc
paddb
repz
movs
sbb
xor
xchg
mov
pop
(bad)
in
xor
mov
cwde
aad
shr
pop
dec
mov
inc
lods
loope
mov
iret
inc
cmc
in
in
int3
cmp
test
dec
xchg
in
add
dec
stos
jne
sub
adc
pop
dec
daa
outs
jge
ss
push
mov
sbb
xlat
mov
mov
sbb
mov
sub
mov
mov
or
sub
push
xchg
mov
stos
in
in
ja
imul
pusha
out
push
lods
stos
out
stos
mov
cmps
jno
mov
and
imul
popf
jle
mov
std
mov
xlat
cmps
sti
jno
clc
jns
sbb
stos
mov
rcl
sub
jg
mov
sbb
fist
dec
xchg
add
cmps
outs
sbb
pop
aad
test
rcr
ficomp
cmc
shr
add
pushf
fwait
mov
pop
push
popf
sub
mov
fmul
daa
outs
out
push
test
xchg
mov
push
push
or
out
cdq
xor
je
ret
mov
cmps
shr
jbe
ret
or
mov
repnz
cwde
jl
add
and
or
xchg
mov
jmp
lock
cmp
push
or
lahf
fdiv
or
test
enter
and
xlat
mov
mov
xchg
pop
in
(bad)
call
int
xor
std
sbb
out
xor
sti
sbb
enter
xor
clc
mov
imul
inc
jp
mov
jno
aaa
inc
dec
loope
xchg
cmp
mov
add
sub
mov
test
mov
xor
jns
fdiv
inc
pushw
(bad)
popa
call
add
arpl
clc
and
fnstcw
add
sbb
or
fstp
pop
retf
cmp
mov
cmps
inc
push
into
cmps
dec
or
xchg
rol
xor
cmp
jp
sbb
xor
jmp
cli
lds
mov
sub
jns
xor
pop
jns
jmp
imul
aaa
mov
dec
jmp
stos
(bad)
adc
(bad)
scas
sti
pusha
xor
adc
add
ins
into
movs
jbe
jmp
fs
rcl
inc
hlt
out
mov
push
and
loop
mov
adc
ins
cli
(bad)
js
push
dec
adc
imul
jp
retf
push
add
in
ret
xor
mov
je
and
ror
cdq
cmps
and
xchg
adc
lahf
test
clc
jae
and
xchg
sbb
imul
push
adc
rcl
pop
repz
enter
fist
cmps
adc
call
jmp
jo
mov
or
add
xor
jnp
fs
jge
inc
stos
cmps
in
xchg
sbb
sub
mov
mov
sub
addr16
lods
sar
adc
cmp
push
cmps
xchg
xor
dec
and
sbb
add
jb
xchg
mov
loopne
in
add
xchg
lahf
xor
adc
aam
mov
push
sub
ret
pop
test
adc
xchg
adc
movs
adc
icebp
int3
pop
in
cmp
dec
xor
mov
sbb
mov
es
cli
ret
xor
retf
pushf
retf
(bad)
push
xor
adc
ins
imul
push
jge
test
push
jae
push
rol
gs
jle
cmps
(bad)
pop
xor
lds
sub
push
cs
out
mov
sbb
fcom
or
sbb
loopne
mov
xchg
cdq
fwait
jecxz
stos
push
xor
inc
mov
sub
test
icebp
and
in
push
mov
push
add
dec
test
ret
adc
ror
sar
push
jo
inc
adc
fld
stos
fdivr
mov
pop
pop
inc
add
ret
lds
cmp
mov
ja
mov
popf
jmp
mov
sub
int3
enter
add
out
into
mov
jns
xchg
out
mov
ret
and
adc
sub
cmps
out
inc
xchg
mov
sbb
aad
std
add
loopne
xor
pop
imul
fadd
sub
nop
nop
inc
test
jne
cmp
cmps
enter
xor
fs
sahf
jae
cmp
sub
pop
dec
xor
enter
stc
in
and
popa
int3
mov
or
aaa
push
sub
jle
iret
sbb
inc
aaa
imul
xchg
pop
cdq
movs
and
pop
movs
pusha
jecxz
cmp
push
sbb
mov
jmp
xor
mov
mov
mov
pop
push
icebp
je
dec
xor
int3
add
and
sbb
ins
xchg
outs
jge
lods
adc
push
inc
leave
or
adc
push
dec
cmp
int
jns
fsubr
mov
sbb
retf
ins
push
pop
pop
std
xchg
mov
and
inc
out
call
push
sub
mov
int
xchg
clc
mov
adc
rol
jmp
sub
mov
jge
scas
or
iret
cs
adc
movs
mov
loopne
call
(bad)
gs
mov
add
jae
cmp
aaa
xor
push
pop
test
mov
jl
push
enter
and
xchg
cmps
fcmove
jmp
sub
loope
cmp
cmps
xor
movs
shr
fcmovnbe
and
enter
inc
mov
int3
jp
ret
fld
nop
fcomi
adc
add
mov
mov
jmp
imul
jno
lahf
dec
push
jns
lea
jno
push
mov
nop
ret
movs
loopne
pop
push
push
sti
pop
test
lock
xchg
rol
into
cmp
xchg
pop
xor
retf
push
out
lods
jns
invd
fistp
mov
pusha
inc
lds
jbe
in
or
stos
shl
inc
cmp
sbb
test
shr
mov
or
fild
xchg
adc
es
or
pop
(bad)
stos
popf
or
push
sti
rcr
icebp
fistp
add
or
sti
lds
pop
(bad)
daa
xchg
out
cmp
daa
mov
jmp
xchg
(bad)
and
ja
ins
icebp
adc
mov
out
ins
adc
ds
cmps
dec
pop
aad
mov
xor
pusha
out
cmp
mov
mov
(bad)
push
fist
xor
dec
scas
jmp
stc
inc
xor
clc
sub
aaa
ins
shl
pop
sub
inc
and
push
hlt
sti
jge
jmp
add
movs
adc
xchg
rcr
cmp
ds
movs
adc
(bad)
jns
pop
scas
je
push
stc
xor
icebp
hlt
addr16
in
sbb
inc
mov
mov
or
das
outs
pop
and
leave
pop
xchg
rol
mov
movs
push
or
jp
push
aad
addr16
add
lods
aaa
and
jmp
mov
and
inc
mov
cs
icebp
or
repnz
adc
movs
inc
mov
adc
fstp
mov
mov
in
not
shr
dec
test
out
std
mov
mov
popf
call
(bad)
push
push
or
cwde
mov
retf
dec
push
mov
aam
mov
jge
mov
or
fwait
mov
out
xchg
stos
jae
clc
test
mov
fcmovnbe
sub
mov
add
adc
stos
push
inc
mov
imul
xor
mov
add
cli
or
xor
int
adc
push
push
jb
mov
xchg
xchg
ins
shr
loope
adc
dec
push
push
inc
cmps
and
push
xor
dec
or
mul
iret
std
(bad)
stos
mov
cmc
adc
into
xor
dec
loope
xor
ja
xchg
fadd
lods
push
sub
xchg
int
ins
jg
stos
and
sbb
xlat
repnz
(bad)
outs
jg
std
data16
call
lods
or
fstp
arpl
hlt
inc
ja
(bad)
aad
out
arpl
inc
mov
jge
js
test
inc
jmp
dec
rcl
ja
dec
or
adc
mov
inc
xchg
dec
pop
popa
add
loop
and
cmc
out
sub
in
outs
out
cmp
das
sub
xchg
mov
jp
adc
sub
xlat
loopne
jle
jo
fmul
call
loope
xchg
out
shl
fwait
bound
cmps
cmp
sub
js
mov
jle
sbb
cmc
pop
scas
scas
cmp
scas
stc
mov
pop
pshufw
sbb
mov
mov
fnstsw
scas
jo
test
add
mov
mov
das
push
or
jae
xchg
repz
(bad)
push
(bad)
out
cdq
mov
dec
push
xor
mov
jge
mov
das
mov
xlat
iret
call
daa
pop
push
xchg
test
outs
les
aad
test
sbb
adc
ja
inc
mov
leave
push
mov
or
shl
in
sti
xor
and
sub
dec
sbb
push
mov
pushf
cmp
pop
arpl
cmp
push
xor
inc
push
dec
sbb
mov
out
mov
mov
dec
dec
gs
xchg
push
dec
push
mov
dec
out
mov
sti
pop
imul
js
mov
in
mov
dec
adc
dec
push
pop
mov
call
mov
cmps
jbe
das
xchg
aam
out
sbb
cs
int
mov
dec
mov
aam
iret
xor
jge
cmp
out
dec
and
int
es
sbb
loope
pop
inc
cmp
dec
sub
in
sbb
cmps
pop
pop
sub
in
(bad)
mov
mov
std
pop
pop
mov
fdivr
mov
ss
push
and
xchg
(bad)
sbb
bound
pop
mov
pop
(bad)
retf
mov
ss
mov
loop
dec
push
and
cmps
outs
in
add
xchg
leave
jl
jb
xor
cmp
and
xor
sub
mov
shl
push
inc
adc
into
and
jecxz
push
mov
jp
mov
and
retf
mov
cmps
outs
(bad)
xor
into
shr
dec
ds
fnstsw
scas
call
xchg
sbb
mov
call
inc
or
movs
cmp
test
ror
shld
dec
imul
xchg
xchg
cmps
sub
stos
jns
fild
push
jo
call
xor
push
jle
retf
cmps
xchg
in
and
jae
and
push
inc
rcr
dec
jns
test
or
imul
ins
int3
inc
lea
push
fwait
out
mov
jbe
ins
ficomp
pop
jbe
aaa
push
ret
xchg
dec
lahf
test
(bad)
addr16
ficomp
nop
out
fmul
add
int
jo
test
xchg
dec
cmp
mov
jmp
lods
test
dec
or
loop
jle
test
mov
xor
xchg
cli
ins
inc
pop
mov
jns
inc
je
push
nop
jns
jecxz
neg
dec
pushf
mov
dec
adc
stos
lods
xorps
imul
pop
adc
stos
dec
mov
retf
xchg
pop
sbb
push
cs
adc
call
frndint
lods
cmp
sbb
cmp
out
cmp
mov
loopne
dec
aaa
add
jne
add
cmc
xor
add
stc
fs
xchg
xor
out
add
aad
pusha
xor
jg
jne
nop
int
push
xchg
ds
icebp
int
(bad)
xor
mov
out
leave
dec
popa
inc
and
ja
outs
add
lea
in
jbe
lods
xchg
ins
sbb
ja
jmp
lods
in
ja
cmp
loope
or
cwde
push
nop
out
push
cdq
push
jp
shr
mov
dec
dec
jmp
or
xchg
scas
add
adc
dec
movs
jecxz
in
pop
lods
push
xchg
ds
mov
mov
push
and
sbb
dec
rol
mov
add
and
fsub
popa
inc
(bad)
imul
les
lock
add
sbb
sbb
out
nop
sbb
imul
es
shl
out
pop
call
mov
loop
fmul
adc
jge
xlat
mov
xchg
sbb
shl
mov
ins
push
inc
push
stos
retf
pushf
fild
lahf
or
push
sub
push
ret
hlt
pusha
dec
xchg
mov
es
xchg
mov
scas
dec
test
xchg
or
cmp
push
adc
lods
int
mov
jns
and
shr
(bad)
ins
xchg
cs
sub
into
cmc
dec
(bad)
xchg
jl
scas
sbb
mov
jle
xor
push
pop
xchg
js
push
pop
mov
sub
xchg
mov
xchg
jg
cwde
jg
and
push
sbb
cmp
mov
sti
mov
cwde
jmp
test
sbb
test
xchg
repnz
iret
jns
sbb
cs
xchg
and
aad
adc
mov
aam
pop
add
inc
loopne
sub
jne
dec
pusha
cmps
lock
fcomp
scas
dec
inc
xchg
ins
popa
add
sub
adc
pop
cmc
and
mov
lahf
mov
push
xchg
inc
gs
inc
(bad)
and
jge
shr
mov
jecxz
push
jno
scas
test
and
sub
sub
xor
and
lahf
(bad)
int3
cdq
xlat
pop
jecxz
je
aaa
pop
or
into
and
ss
mov
jge
jo
(bad)
dec
xor
mov
shl
add
out
rcr
cmp
push
fisttp
push
add
fild
adc
jbe
in
add
jmp
xchg
movs
(bad)
test
xchg
mov
scas
xchg
fstp
loop
push
daa
push
dec
sbb
ss
and
adc
dec
retf
sub
or
ins
hlt
mov
(bad)
(bad)
stos
xor
hlt
xor
test
lds
test
jp
sub
in
ja
les
popa
mov
add
lods
xor
pop
add
xor
lds
fisttp
ins
and
jmp
xchg
dec
arpl
ja
aad
xlat
ds
jo
push
bound
aas
xor
test
mov
into
mov
shr
in
movs
mov
test
mov
in
mov
sbb
mov
mov
fwait
inc
shr
fst
xor
sbb
icebp
hlt
and
or
mov
ss
inc
pop
xor
sti
scas
popf
cld
ss
mov
dec
in
inc
mov
sub
fs
mov
lea
fisubr
xchg
sti
bound
rcl
aam
outs
mov
(bad)
fwait
xchg
jbe
mov
pop
jmp
mov
test
sub
xchg
mov
outs
(bad)
scas
or
sub
inc
mov
nop
test
lods
sub
sbb
repz
mov
(bad)
lods
inc
loopne
mov
mov
and
jp
repnz
add
jns
fs
je
xchg
out
jmp
cdq
jnp
mov
mov
daa
out
int3
iret
or
mov
into
fst
and
movs
sub
loop
punpcklwd
bound
jo
jno
and
mov
cwde
or
ja
ja
bound
push
call
sbb
arpl
sbb
xor
test
xchg
jbe
cmps
pop
mov
iret
jmp
pop
adc
les
adc
out
jns
nop
mov
repnz
enter
popf
into
out
int3
or
fild
pop
mov
jmp
xor
push
cwde
cli
loope
cld
xchg
lahf
int3
rcr
push
mov
test
pop
jecxz
mov
retf
inc
push
push
iret
mov
mov
(bad)
aam
add
inc
pushf
add
(bad)
js
inc
mov
shl
mov
fdivr
jecxz
std
stos
push
push
shl
fwait
inc
and
push
sysret
xchg
jmp
enter
shr
cmp
aam
pop
dec
dec
repnz
popa
or
lock
or
mov
sub
sbb
dec
xchg
daa
or
sbb
mov
nop
cwde
test
rcr
or
mov
outs
sub
and
mov
imul
scas
push
push
out
sbb
aad
fidiv
daa
cmp
xor
or
movs
(bad)
pop
pushf
repz
and
jb
add
ins
sbb
mov
add
fild
pusha
(bad)
aad
ins
fsubr
lock
int3
inc
adc
dec
imul
push
repnz
nop
pop
sbb
pop
jge
ins
loope
push
movs
enter
movs
clc
mov
stos
xchg
das
add
or
hlt
xor
aad
(bad)
mov
loopne
mov
sbb
mov
push
fucomip
and
jae
fsubr
sbb
dec
xor
jecxz
dec
jp
imul
sbb
in
ds
add
and
xor
or
sbb
mov
ss
pop
jo
sub
and
mov
hlt
data16
adc
cwde
adc
out
dec
shr
cwde
push
(bad)
adc
pop
adc
push
jno
jp
(bad)
popf
js
mov
lahf
add
out
cwde
xor
push
sbb
out
das
pusha
cmp
or
rol
sbb
addr16
(bad)
jl
lods
adc
imul
out
retfw
sbb
sub
in
push
cmp
sub
adc
push
int
push
push
jmp
fimul
stos
rcr
mov
repnz
movs
gs
dec
mov
imul
push
mov
inc
das
repnz
gs
in
into
mov
and
cmps
retf
js
neg
lods
sbb
jns
inc
aad
mov
jmp
mov
adc
int3
pop
xchg
sahf
jle
pop
or
fwait
rdrand
and
pop
inc
xchg
imul
into
xor
cmc
loop
in
push
push
aas
pop
add
(bad)
push
push
jg
pop
cmps
jmp
cli
enter
sbb
jl
sub
ficom
or
(bad)
jbe
dec
popf
repnz
cld
and
jmp
xlat
nop
xor
or
jnp
pop
xchg
xor
stos
push
cmps
mov
aaa
mov
sbb
sub
test
xchg
daa
rcr
bound
(bad)
jge
cld
cs
cs
mov
add
or
fcom
adc
xchg
jne
in
repnz
sbb
pushf
cmp
mov
pushf
loopne
movs
xlat
pop
push
sub
mov
dec
push
call
fstp
cdq
mov
push
adc
scas
lock
push
enter
(bad)
ins
ds
loopne
scas
jns
rcr
cld
xchg
mov
pop
pop
aaa
cld
ds
icebp
add
mov
lock
or
inc
inc
(bad)
sbb
push
sbb
fidivr
cmp
leave
sahf
jne
pusha
xor
sti
inc
pop
idiv
push
ds
mov
or
pop
pop
mov
fimul
loop
aas
sub
mov
std
mov
cs
es
movs
sub
or
inc
lds
or
dec
dec
jecxz
sub
leave
dec
sbb
sub
aas
lods
icebp
mov
rcl
adc
inc
scas
ret
repnz
imul
cmps
ds
test
sub
sub
and
and
jmp
bound
enter
lods
jg
fwait
sbb
pop
mov
gs
cmp
sub
push
push
call
xchg
pusha
loopne
cmps
and
nop
or
xlat
adc
std
inc
sbb
xor
mov
icebp
inc
dec
stos
cdq
or
mov
push
xchg
gs
cs
mov
lea
push
sbb
stc
jae
daa
inc
jae
sar
mov
fld
pusha
xor
mov
rcr
movs
jge
add
pop
mov
shl
icebp
outs
jo
add
cwde
sub
je
movs
sub
pop
dec
mov
ret
jmp
push
pop
dec
dec
cmp
mov
out
cmp
xchg
and
imul
inc
dec
fld
popa
push
mov
mov
push
dec
or
xor
lods
or
sahf
arpl
ret
retf
retf
pop
jbe
xchg
in
hlt
in
js
in
jae
repnz
xchg
pop
pop
push
jns
addr16
inc
les
ins
push
pop
pop
in
pop
test
int
mov
xlat
fstp
ja
mov
aam
and
fild
sub
and
pushf
adc
aas
or
jle
dec
lods
sub
push
jne
test
pop
adc
popf
push
mov
or
enter
bound
mov
(bad)
test
leave
push
shr
test
(bad)
in
not
es
adc
jmp
pop
loop
stos
xadd
push
push
sbb
in
mov
mov
mov
dec
ja
movs
add
mov
xchg
cmp
mov
repnz
xchg
dec
inc
outs
add
call
xchg
lea
shr
cmps
movs
(bad)
and
in
dec
and
fistp
add
imul
or
retf
mov
adc
inc
das
lods
sbb
cmp
loope
pop
inc
xchg
dec
cwde
add
add
out
cmc
hlt
loop
xor
jle
cmp
jb
mov
in
jno
cmp
jns
push
mov
ret
xor
fnsave
outs
add
lods
jb
mov
sbb
sahf
jno
lahf
scas
jle
jmp
dec
pop
rcr
and
push
pop
xchg
out
xchg
mov
mov
jecxz
pop
leave
icebp
mov
sub
xchg
add
(bad)
retf
xchg
push
clc
jmp
retf
std
mov
xchg
mov
les
cld
cmp
das
int
ins
rcl
push
je
mov
daa
mov
(bad)
in
adc
mov
mov
and
dec
xlat
sar
js
lods
leave
sbb
push
pop
xor
bound
inc
jo
push
pushf
push
movs
int
test
pop
lea
fisttp
adc
mov
cmp
ss
cmc
jno
or
dec
dec
adc
or
push
sub
jg
(bad)
in
jae
pop
mov
xchg
sbb
movs
popf
into
loope
add
inc
fmul
sub
mov
shld
xchg
pop
cmps
bound
dec
xchg
ins
jmp
mov
ror
fistp
sbb
lock
adc
mov
div
sar
popa
das
fs
enter
test
push
stos
or
pop
mov
retf
jnp
inc
data16
cmp
outs
sub
push
mov
cli
sub
or
ja
push
shr
push
test
xchg
mov
out
shl
fst
mov
sbb
sub
dec
stc
add
out
and
mov
jb
mov
push
out
cwde
scas
dec
fist
add
(bad)
repnz
push
mov
adc
push
jmp
fisubr
add
cwde
enter
or
pop
adc
xor
mov
js
or
mov
inc
jno
sbb
into
inc
fwait
sub
mov
push
(bad)
xor
jp
jmp
mov
shl
fist
and
mov
inc
ret
inc
movs
dec
add
in
jle
cmps
shr
sub
push
inc
ss
pop
loopne
inc
(bad)
int
rcl
mov
push
aaa
mov
mov
test
mov
jp
inc
test
lods
mov
push
call
adc
data16
push
jl
fld
mov
and
or
cmp
rcl
adc
lods
pop
int
(bad)
outs
mov
out
cmp
xor
push
push
stc
push
out
jg
dec
iret
daa
sti
rcl
and
lds
cs
(bad)
lea
dec
sub
jo
repnz
repnz
mov
lahf
lahf
aas
and
or
jp
pop
or
adc
cs
clc
mov
lds
cmps
sub
ret
mov
mov
xlat
aaa
sbb
mov
cmp
cdq
pop
gs
(bad)
mov
mov
test
cmc
pop
inc
into
jecxz
xchg
xchg
jae
repz
ins
in
cs
mov
movs
jp
and
adc
hlt
or
push
imul
repnz
push
xchg
mov
sbb
(bad)
fist
je
mov
or
movs
inc
or
mov
jecxz
aam
test
lds
popf
and
icebp
pop
mov
xchg
aas
or
rol
xlat
jle
and
and
mov
into
mov
mov
std
sbb
cdq
cld
sub
and
cmps
add
pop
adc
and
mov
das
stos
push
sub
mov
push
fbstp
ins
test
jp
pop
nop
jge
test
add
and
mov
ret
jns
xor
inc
add
(bad)
inc
fist
inc
push
icebp
dec
push
mov
sub
rcr
push
cmp
and
inc
and
jge
in
jle
daa
sub
loopne
inc
das
gs
adc
or
(bad)
in
mov
mov
xchg
mov
je
std
dec
fisttp
loop
inc
dec
jl
fnsave
mov
inc
and
iret
js
dec
mov
sub
pusha
xchg
iret
(bad)
mov
mov
ja
sub
movs
pop
mov
lds
fcmovnb
or
adc
ret
int
jo
test
jo
(bad)
mov
ret
pop
add
fmul
inc
inc
xchg
xchg
add
fs
jmp
stos
pop
push
outs
icebp
iret
add
mov
mov
sbb
dec
mov
mov
shl
jge
jnp
sbb
fs
out
cs
lea
jecxz
cmp
xor
xchg
cld
mov
and
xchg
cli
gs
pop
fcmovne
inc
hlt
sbb
push
test
sbb
stc
lods
ret
mov
and
stos
or
mov
pop
or
mov
or
fcos
scas
imul
cdq
icebp
and
xchg
cmp
or
push
inc
enter
popf
ins
pop
mov
pop
xchg
test
ret
mov
aaa
add
into
fwait
pop
lods
dec
psadbw
ins
pop
pop
in
xlat
mov
lea
jmp
sbb
or
out
loope
cmp
fs
xor
jnp
ja
fild
mov
(bad)
xor
ins
and
rol
inc
cmp
mov
and
scas
(bad)
and
scas
imul
jecxz
sti
call
scas
lahf
inc
cwde
jmp
pop
mov
adc
jo
addr16
in
movs
xchg
adc
and
test
mov
adc
xchg
mov
fisttp
hlt
sub
clc
jb
or
push
sub
push
outs
(bad)
inc
sahf
(bad)
leave
cdq
adc
popa
mov
rol
push
xor
rcl
cmp
xor
das
mov
adc
jle
mov
and
cmp
out
or
inc
ins
div
fmul
jge
test
jne
stos
enter
mov
out
retf
jnp
pop
and
fld
inc
(bad)
fs
or
mov
mov
(bad)
gs
aad
out
dec
leave
mov
mov
sahf
mov
jmp
add
or
out
aad
mov
loop
popa
in
sbb
xor
inc
mov
push
movs
or
daa
(bad)
jp
ss
mov
pushf
in
and
adc
pop
int3
dec
out
ror
add
loope
mov
mov
call
jl
sbb
ret
pop
ins
cmp
mov
aam
push
sahf
push
and
add
mov
(bad)
sbb
rol
(bad)
int3
push
xor
mov
ss
mov
sbb
jnp
mov
jg
dec
xor
inc
(bad)
adc
sbb
das
stos
out
xchg
test
ds
arpl
and
in
in
adc
out
dec
jl
mov
nop
jp
outs
data16
jno
mov
aas
add
out
arpl
inc
rol
iret
push
cmp
shl
loope
(bad)
sub
int3
pop
lds
and
and
dec
(bad)
stc
jp
push
fdivr
pop
jmp
jecxz
push
push
mov
xor
fsub
xlat
jae
jmp
nop
push
(bad)
fist
retf
iret
inc
adc
sahf
gs
mov
jae
pop
jns
xchg
sub
pushf
sub
int
mov
jne
xor
in
lods
pop
or
mov
sub
push
(bad)
gs
inc
mov
jp
dec
jecxz
jnp
cs
and
das
mov
daa
jmp
xchg
mov
inc
imul
xchg
sub
xchg
ins
jmp
xchg
adc
imul
ror
mov
dec
mov
and
sbb
sbb
pop
stos
out
inc
and
aas
dec
(bad)
xor
neg
cmp
dec
adc
push
ret
dec
pop
jmp
xlat
mov
sbb
or
movs
cmp
lods
or
jge
jg
lods
jno
call
pop
dec
push
hlt
adc
fisttp
mov
or
or
cmp
push
stc
xor
fistp
sbb
movs
sbb
xor
aam
pop
scas
lock
mov
(bad)
jo
aam
popf
mov
push
inc
(bad)
jno
data16
push
enter
movs
push
mov
mov
aaa
gs
jns
jns
and
adc
clc
mov
add
pop
out
pop
mov
outs
ror
lock
pushf
dec
mov
shl
test
ss
mov
add
je
fs
cmc
popf
in
call
scas
cwde
mov
dec
int3
adc
and
jg
in
pop
dec
pop
cmp
leave
ds
scas
dec
mov
out
rol
sbb
dec
inc
test
rol
adc
sbb
jno
fsubp
int
mov
sub
lea
test
push
sbb
dec
jnp
rol
gs
out
enter
inc
mov
push
je
or
in
and
stc
stc
(bad)
cli
jnp
ins
mov
push
lock
push
pop
jbe
mov
fmul
xlat
pop
mov
test
enter
popf
gs
xchg
movs
fidivr
fmul
adc
push
push
sbb
xchg
pop
addr16
add
cld
retf
mov
icebp
ja
and
inc
stc
push
jmp
jae
rcr
cdq
dec
fwait
aad
xchg
jl
push
aam
cmp
aad
adc
icebp
push
call
aam
xor
pop
adc
jmp
lock
movs
xchg
add
mov
movs
push
jbe
(bad)
(bad)
inc
fwait
call
xor
fcomp
pop
jp
int3
aad
mov
pop
out
stc
std
xor
cmps
dec
push
ret
sub
lods
int
std
(bad)
clc
and
sti
(bad)
cs
pop
sub
push
repnz
hlt
fst
push
or
jle
sub
nop
or
das
sub
cmp
out
out
pop
and
push
mov
ins
and
jo
aad
dec
movs
retf
outs
enter
xor
jne
inc
(bad)
dec
aas
mov
pop
pop
ffree
push
aad
push
imul
jg
adc
out
inc
imul
std
xor
bswap
(bad)
sahf
lods
mov
cmc
mov
push
sar
or
out
addr16
push
and
and
cwde
arpl
fwait
lock
js
cld
clc
mov
pop
push
sbb
mov
shl
sub
fsub
and
rcr
imul
in
in
fstp
jg
add
pop
mov
sub
lea
in
arpl
dec
loopne
clc
cs
(bad)
ret
loope
sub
dec
(bad)
call
mov
pop
push
and
xchg
es
pop
add
out
rcl
ret
(bad)
pop
mov
into
jae
call
and
mov
out
stos
xrelease
jg
push
loope
repnz
pop
dec
add
pop
sar
enter
repz
sub
imul
push
sub
icebp
xchg
inc
adc
retf
sti
test
pushf
clc
repnz
sub
sub
stos
jo
sbb
ret
pop
in
cwde
loope
dec
iret
and
rol
ins
xchg
pop
retf
xchg
in
addr16
pop
sub
cmp
and
add
mov
fcmovnb
addr16
(bad)
and
or
adc
dec
sbb
push
movs
lods
xor
and
stos
pop
popa
fwait
mov
xor
or
cmp
aam
sub
les
lods
adc
pushf
inc
sbb
xchg
jns
push
clc
dec
mov
rcl
ja
fucomp
lods
pop
jnp
lahf
ds
and
push
les
popa
(bad)
mov
repnz
ins
shl
mov
mov
inc
(bad)
xor
dec
inc
mov
adc
mov
add
fst
cwde
mov
jl
inc
(bad)
push
ret
jmp
xchg
dec
dec
ret
or
mov
das
xchg
sub
push
dec
outs
xchg
pushf
or
cld
enter
push
xor
gs
sahf
mov
repz
push
inc
mov
in
or
outs
jle
push
jp
inc
pop
retf
sbb
pop
popf
inc
mov
add
cmp
mov
out
xlat
mov
or
xchg
popf
xchg
or
xlat
mov
cmp
xchg
fisttp
push
xchg
xchg
enter
adc
dec
dec
fwait
loopne
retf
jnp
pusha
(bad)
movs
scas
aad
push
ins
push
push
mov
aam
test
xchg
test
punpcklwd
sub
jmp
cmp
(bad)
sub
fdiv
dec
addr16
(bad)
pop
xchg
out
xor
or
into
(bad)
or
loopne
mov
mov
xchg
cdq
mov
xor
jmp
bound
cmps
dec
push
data16
jecxz
movs
aas
sahf
mov
pop
mov
mov
jg
lods
sub
mov
cmp
pop
xchg
out
xchg
lds
adc
push
mov
mov
mov
sub
adc
cmp
imul
dec
loopne
or
or
sbb
adc
pop
enter
and
pop
(bad)
out
aad
int
aam
sub
dec
sbb
or
test
mov
cmp
mov
dec
in
inc
sbb
mov
cmp
or
mov
lds
jmp
inc
inc
xor
rcr
aas
add
outs
cli
sub
enter
scas
add
ds
and
into
and
sar
push
sahf
mov
into
pusha
pop
fisub
retf
mov
scas
xchg
lods
jl
rcl
and
fisttp
mov
mov
into
fimul
(bad)
xchg
retf
pop
dec
inc
dec
retf
icebp
shl
xor
fxch
mov
ja
mov
xchg
mov
fild
add
frstor
sub
pop
jb
mov
bnd
mov
repnz
jnp
std
int3
dec
aas
xor
push
mov
inc
inc
xchg
jae
out
inc
cwde
push
int
sbb
popf
xchg
adc
pop
dec
jl
mov
inc
test
xchg
out
jb
sbb
or
shl
dec
fimul
and
(bad)
push
sbb
call
repnz
mov
xchg
out
out
and
fst
arpl
xlat
test
inc
pop
cld
mov
inc
jmp
fadd
arpl
add
jb
xor
inc
test
xor
mov
cmp
sbb
add
xlat
or
sbb
or
test
cmps
test
mul
stos
and
mov
mov
out
iret
adc
iret
retf
loope
fld
iret
ins
and
xlat
sahf
mov
popf
cdq
or
add
add
(bad)
adc
mov
sti
push
push
inc
fwait
js
push
xlat
inc
cmp
add
dec
adc
mov
stos
std
jbe
jmp
cmps
dec
and
cs
repz
xchg
test
call
popa
xchg
jae
movs
jmp
cmp
andnps
xor
dec
mov
inc
mov
cmc
int3
adc
enter
inc
popa
(bad)
loopne
and
jnp
pop
test
jle
in
jle
lahf
mov
lea
adc
test
and
dec
into
mov
imul
mov
pushf
mov
xchg
ins
push
push
hlt
and
outs
add
lea
fidiv
(bad)
arpl
mov
xlat
ins
jae
mov
(bad)
out
fnstenv
into
mov
idiv
mov
in
(bad)
mov
int3
pop
scas
add
clc
pop
int3
adc
cmp
arpl
push
es
push
mov
(bad)
pop
and
ja
neg
jg
or
pushf
cmp
arpl
test
xchg
pop
jbe
movs
inc
fidiv
lahf
dec
mov
lock
and
sub
loop
sub
push
and
adc
es
sub
and
push
or
xchg
retf
lods
pop
add
jle
mov
test
xor
cmp
add
push
push
scas
scas
inc
jmp
sbb
adc
cwde
out
ins
inc
mov
shl
push
daa
push
pop
lock
or
cmps
mov
jg
mov
jae
js
std
xchg
scas
inc
mov
cld
std
jl
sbb
out
mov
arpl
and
rcl
cs
inc
inc
mov
ja
cmp
dec
xchg
fsub
push
repz
jp
jl
je
mov
push
js
fbld
repz
mov
iret
hlt
hlt
xchg
ja
push
xchg
jns
cmp
push
retf
inc
mov
add
fdiv
cmp
mov
push
xchg
mov
xor
stos
or
fld
popf
pop
std
aas
leave
dec
pop
cmp
repnz
sub
fsubp
mov
cmp
inc
mov
push
in
cmp
(bad)
(bad)
loope
js
sub
mov
test
or
jno
retf
xchg
jmp
fist
and
jo
adc
sub
pop
add
lods
mov
pop
out
pop
cmp
add
mov
jle
inc
nop
stc
test
pop
cmc
xlat
add
mov
shl
mov
or
jns
(bad)
mov
mov
cld
cli
outs
shr
ds
push
pop
dec
cmp
cwde
ret
mov
int
out
pusha
int
jmp
inc
pop
repnz
cdq
lods
adc
push
daa
int
sub
retf
sbb
int
gs
int
add
popa
(bad)
jne
in
mov
int3
sahf
sbb
lods
xchg
ja
cmp
inc
stos
xchg
jp
scas
and
push
mov
dec
test
pop
cld
add
sub
or
add
test
test
sub
loopne
adc
into
les
pusha
or
xor
mov
add
outs
mov
jg
shl
je
ss
push
pop
jno
and
cmps
sub
cmc
imul
sbb
jecxz
jmp
and
pop
mov
retf
jo
inc
hlt
jmp
add
js
mov
lods
inc
stc
and
lea
outs
popa
push
(bad)
sti
xchg
push
xchg
cmp
dec
int3
test
leave
cmp
sub
jg
lods
fsub
addr16
icebp
(bad)
in
pushf
in
lea
fcmovne
ret
lods
xchg
xchg
cmp
mov
push
fstp
inc
sar
mov
mov
mov
mov
aam
mov
icebp
out
retf
jp
cmp
scas
daa
xor
sbb
add
dec
cmp
or
mov
push
mov
lods
jbe
mov
sub
mov
mov
stc
mov
stos
pop
iret
les
pop
cld
pop
test
stos
mov
ds
sub
jnp
mov
or
jnp
addr16
stos
xchg
mov
mov
stos
sbb
sbb
fcomp
lock
sub
jmp
pop
int
or
shr
inc
outs
jnp
dec
mov
std
adc
inc
rol
ins
or
pop
jmp
and
or
cmp
push
jnp
test
xor
mov
pop
test
pop
or
(bad)
addr16
jbe
mov
call
and
push
mov
imul
(bad)
pusha
lahf
fmulp
adc
pusha
fcomp
sahf
or
test
(bad)
pop
mov
push
xor
call
icebp
cmp
push
loop
stos
mov
mov
mov
pop
fstp
fbld
and
lea
sub
out
xchg
nop
mov
(bad)
movs
mov
push
pop
fisubr
dec
cmp
xchg
push
and
sbb
bswap
lods
jmp
cmp
and
enter
jne
cmp
lahf
ret
aad
mov
(bad)
mov
inc
mov
cmc
(bad)
mov
add
adc
(bad)
push
add
or
jne
arpl
xchg
das
xor
outs
adc
lahf
mov
mov
fs
push
call
repz
xchg
pushf
jb
or
iret
(bad)
push
sbb
lahf
in
jge
test
jecxz
out
(bad)
loopne
xchg
outs
test
repnz
mov
shl
mov
mov
sar
mul
jle
(bad)
ficom
pop
pop
push
mov
call
loop
addr16
bound
jl
jne
retf
jo
mov
xchg
add
loop
adc
mov
inc
imul
jge
lock
int
fwait
nop
fwait
loope
pop
dec
add
shl
daa
adc
cwde
mov
pop
xor
pop
adc
popf
neg
call
dec
lds
mov
cmps
mov
in
xlat
cld
stos
fldcw
std
out
jmp
push
in
ficomp
xchg
retf
jb
(bad)
jmp
enter
mov
cmps
xchg
dec
pusha
fmul
mov
push
out
test
cli
adc
cmps
xchg
sti
ss
mov
pop
lahf
sahf
loope
js
sub
(bad)
mov
jno
cmp
xchg
xchg
into
push
xchg
fdivr
movs
sub
dec
cmp
lea
xor
icebp
mov
leave
push
cdq
xor
out
or
into
leave
(bad)
nop
fadd
mov
(bad)
pop
jl
cli
(bad)
dec
stos
jmp
pop
sub
pop
push
mov
pop
not
jle
inc
ja
ds
test
mov
push
push
mov
cmp
nop
lahf
xor
push
or
sub
inc
(bad)
in
scas
push
sbb
(bad)
fsubrp
sti
int
lea
jb
mov
add
or
lods
mov
sbb
movs
sbb
cmp
inc
jl
inc
loop
call
push
dec
cmp
stos
mul
test
xor
test
jae
jle
sub
imul
push
ror
and
mov
rol
mov
daa
in
aas
jae
(bad)
pop
lea
xor
cld
mov
inc
cld
dec
adc
adc
ficom
jbe
icebp
push
retf
mov
mov
int
fsubr
jb
push
ins
loop
xchg
js
fisttp
push
dec
std
or
sahf
mov
clc
ss
mov
xor
ins
aaa
pop
mov
jle
leave
push
jnp
movs
popf
je
add
xor
fadd
dec
test
icebp
test
sub
or
push
jp
dec
test
jmp
jle
lods
push
icebp
div
cmp
sbb
xchg
push
aad
xor
add
push
push
ins
dec
enter
clc
hlt
push
pop
out
iret
and
cmp
test
std
movs
add
add
sub
rol
gs
test
and
retf
repz
mov
push
ins
(bad)
sub
scas
inc
push
mov
mov
inc
pushf
or
in
lds
pop
mov
inc
add
pop
rcl
push
dec
test
leave
repnz
loope
xor
pop
(bad)
mov
not
cmc
inc
sahf
xor
dec
and
repz
lods
mov
xchg
int
mov
and
es
cmp
lods
mov
sar
xchg
lock
stos
and
fld
adc
std
push
or
test
movs
jno
push
push
jns
xlat
dec
adc
fist
inc
fstp
push
adc
xor
in
clc
sbb
sahf
jo
sbb
shl
adc
ja
mov
fsub
mov
(bad)
shl
in
sbb
pop
shr
in
inc
xchg
lss
xor
sub
jbe
cmp
push
or
sub
mov
jae
fidiv
mov
ds
fcmovnu
cmp
add
jne
cdq
popf
or
push
inc
ins
es
cmps
outs
dec
fwait
cmp
outs
jno
arpl
arpl
lods
xor
stc
clc
repz
xchg
loop
xchg
push
stc
cdq
cld
or
arpl
popa
inc
xor
adc
retf
xchg
std
(bad)
xchg
sub
fisttp
mov
xchg
xchg
dec
dec
cmp
dec
dec
dec
out
ret
xchg
ins
repnz
cdq
movs
(bad)
fadd
scas
movs
aas
stos
jae
test
sbb
scas
and
mov
xor
push
lds
xlat
pusha
mov
leave
xor
add
out
cmp
jecxz
out
adc
test
add
adc
mov
ret
add
inc
cmp
jmp
(bad)
cmp
pop
in
es
mov
inc
mov
mov
and
xchg
outs
jg
push
inc
pop
sub
sub
mov
fs
xor
imul
ins
and
mov
enter
mov
jp
or
or
fnstenv
xlat
jne
push
loopne
fidiv
jno
mov
or
adc
je
neg
pushf
mov
cwde
ret
xchg
loop
adc
ret
data16
and
lock
bound
popf
xchg
sbb
inc
jecxz
repz
push
xchg
push
loop
adc
fcmovb
push
sub
jmp
stos
pop
mov
or
rcr
mov
dec
mov
pop
mov
xor
jns
push
aad
and
ja
jnp
cwde
stos
into
mov
not
cli
mov
mov
scas
push
out
dec
into
mov
push
and
in
jg
add
xor
loopne
jmp
dec
or
and
mov
loop
mov
std
xchg
mul
mov
ret
and
push
out
ret
push
mov
jl
push
rcr
mov
(bad)
(bad)
ret
out
neg
push
push
cmps
ins
pop
sbb
xor
or
call
dec
mov
xor
dec
dec
lds
mov
test
mov
and
pop
lods
out
call
pop
cmp
aas
pop
sub
or
pop
shr
inc
cs
pop
xlat
(bad)
scas
outs
push
(bad)
repz
mov
push
nop
push
int3
sahf
daa
jb
xor
dec
push
pop
xchg
aam
mov
popf
or
cmps
ss
mov
fidivr
xor
stos
sar
cmp
xchg
loopne
adc
xchg
je
in
mov
cmp
scas
mov
mov
mov
into
data16
jmp
outs
push
repz
mov
mov
(bad)
sar
jae
jg
xor
(bad)
in
or
xor
mov
xchg
sub
xchg
popa
clc
jl
fcomp
sbb
mov
pop
popa
sbb
jae
adc
imul
sub
repz
mov
sub
(bad)
sar
ror
test
push
mov
data16
data16
das
fidivr
repnz
imul
mov
add
das
xchg
mov
dec
inc
stc
lods
imul
ror
dec
daa
mov
sbb
fwait
imul
jb
jge
add
fs
shl
or
int
mov
ds
imul
ins
sbb
jno
xor
(bad)
aad
xchg
or
push
jl
aas
inc
sbb
xchg
repnz
and
cli
mov
aad
xchg
retf
into
xchg
popa
imul
xchg
inc
xchg
xor
pop
dec
or
loopne
call
les
pusha
xchg
daa
jo
nop
clc
xor
ins
cdq
xchg
pop
mov
dec
not
mov
dec
das
stc
in
mov
dec
mov
out
mov
js
lds
popa
lock
mov
fisub
es
jmp
lds
repz
inc
or
enter
in
mov
dec
(bad)
push
fild
mov
add
(bad)
call
mov
or
push
fild
ret
mov
out
lods
jne
rcl
je
loopne
dec
sub
mov
movs
(bad)
clc
arpl
(bad)
out
adc
inc
and
adc
in
xchg
push
cmp
mov
and
and
and
mov
fnstsw
call
icebp
bound
es
cdq
je
mov
mov
pop
inc
mov
sub
fsub
inc
rcr
or
mov
std
pop
adc
ja
jl
cmc
jmp
mov
sub
mov
mov
or
bound
pop
addr16
mov
cwde
cmps
es
cmp
pop
ret
push
icebp
push
push
jae
pushf
ds
adc
shl
dec
mov
or
inc
fadd
jne
loop
lods
(bad)
sbb
push
mov
daa
cmp
out
jb
dec
shl
jns
and
outs
cmp
mov
mov
jecxz
cmp
jo
dec
leave
ficom
and
rcr
push
mov
push
cmps
fist
mov
lahf
add
pop
or
xor
std
out
retf
in
xor
xchg
ja
push
inc
arpl
(bad)
dec
pop
shr
aaa
xchg
add
push
arpl
movs
test
daa
popf
or
call
(bad)
(bad)
push
fcomp
std
clc
out
sahf
ins
xchg
xchg
sbb
pusha
lods
mov
xchg
jle
test
cmp
add
or
pusha
fcomp
cld
mul
jns
xchg
cmp
inc
cmc
fnstsw
adc
int3
pop
inc
adc
daa
stc
mov
sbb
xor
in
loope
add
mov
out
mov
or
or
mov
or
pop
mov
ret
clc
jg
jmp
jnp
repnz
xchg
(bad)
xchg
cvtps2pi
sbb
ins
mov
jnp
popa
in
add
pcmpeqd
sub
add
xor
inc
sbb
jmp
lods
xchg
out
not
out
daa
stos
xchg
jl
mov
ror
sub
cli
cli
aad
sub
mov
mov
inc
dec
dec
(bad)
call
mov
xchg
int
outs
pop
fs
in
jne
sbb
sbb
adc
xchg
push
shr
retf
sbb
not
mov
mov
or
dec
dec
imul
xor
ja
or
push
dec
repnz
test
pusha
dec
pop
dec
add
cmp
lds
jmp
hlt
adc
mov
std
(bad)
(bad)
scas
les
(bad)
push
outs
push
jno
fs
in
inc
add
sbb
cmc
fidiv
xchg
test
rcl
stc
js
(bad)
adc
ficom
push
pop
fdiv
jg
mov
sbb
int
loop
movs
mov
ins
cmp
aad
adc
(bad)
shl
iret
jmp
jl
loopne
ss
stc
mov
aas
test
ja
add
repz
mov
iret
pop
sti
push
cdq
xor
cmp
mov
(bad)
repz
nop
(bad)
inc
push
and
clc
xchg
rol
or
sbb
pop
rcl
and
xlat
sbb
(bad)
xchg
pop
fs
jmp
idiv
sbb
inc
cmp
sbb
mov
fidivr
or
or
retf
jbe
jnp
cmp
adc
ins
cwde
push
cmps
sbb
call
leave
adc
xlat
loopne
neg
mov
pop
push
push
pop
pushf
xor
outs
mov
xchg
inc
add
ja
mov
xchg
fmul
scas
lods
mov
rcr
test
mov
int3
push
(bad)
icebp
inc
inc
iret
or
and
pop
xor
cmp
(bad)
cmp
xchg
(bad)
push
jb
mov
pushf
inc
stos
jecxz
push
inc
out
iret
nop
popf
and
sbb
add
retf
pop
dec
dec
ins
push
sub
fwait
mov
fild
loop
fdivrp
rcr
push
sbb
mov
scas
xchg
(bad)
iret
out
int
xchg
jo
ret
cmp
aas
sbb
inc
icebp
daa
sar
scas
ret
out
pop
add
fs
test
add
mov
mov
jmp
int
jne
call
dec
aas
scas
adc
(bad)
or
loope
mov
pop
push
pusha
jmp
jns
loop
js
lock
push
not
cmp
cmc
push
pop
gs
jbe
lea
inc
xchg
xor
(bad)
or
sbb
dec
mov
or
jmp
jp
xchg
jmp
shl
fs
jbe
stos
jle
jecxz
(bad)
add
test
xchg
in
sbb
nop
cdq
pop
adc
add
nop
mov
cmp
cwde
pusha
or
jmp
mov
xlat
mov
mov
movs
sub
out
xchg
lea
outs
imul
clc
popa
lds
sahf
adc
inc
ret
sub
push
std
cmp
cmp
(bad)
movs
shr
in
dec
sub
or
pushf
stos
add
ss
stos
adc
sbb
mov
test
sbb
leave
mov
dec
clc
scas
or
mov
sub
pop
push
or
jmp
add
push
sahf
push
pop
xchg
pop
mov
sub
sahf
xchg
cdq
stos
rcl
nop
sub
jmp
bound
sub
adc
mov
push
pop
jnp
jnp
rol
jne
ja
popa
mov
(bad)
fist
adc
fild
movs
cld
and
enter
repz
jb
sbb
push
sbb
stos
repz
cmp
xchg
(bad)
call
mov
or
and
fstp
std
xchg
ins
loopne
fld
scas
in
dec
(bad)
out
and
lea
jmp
ret
xor
xchg
jl
imul
sbb
pop
sub
pop
out
dec
cs
ror
fstp
inc
(bad)
push
cmps
je
scas
sbb
nop
outs
popa
nop
mov
js
mov
(bad)
adc
sti
mov
push
sbb
inc
and
add
iret
and
mov
xchg
push
fst
jmp
sti
sar
mov
xchg
mov
mov
or
ror
mov
pop
(bad)
dec
aam
xor
inc
xchg
jmp
jbe
ret
mov
pop
imul
ret
lds
out
dec
mov
mov
dec
xor
ds
loop
pop
push
cmc
inc
loop
jo
mov
push
stos
adc
hlt
mov
popa
inc
add
icebp
push
cdq
cmc
jns
add
scas
test
mov
(bad)
in
mov
hlt
mov
(bad)
xchg
repnz
(bad)
jbe
(bad)
sub
(bad)
addr16
movs
cmp
jg
popf
sub
sbb
lods
gs
xchg
xor
call
in
push
nop
mov
cmp
popf
or
aas
les
inc
iret
bound
or
push
jno
push
pop
test
and
jbe
stos
inc
sbb
leave
addr16
test
pop
clc
push
pop
pop
xor
push
test
pop
hlt
jge
data16
sbb
mov
std
shr
les
or
cmps
cmp
stc
jae
imul
mov
or
inc
mov
pusha
fst
xchg
or
xor
push
mov
aam
mov
sub
lds
jmp
fucomip
aad
cs
stos
or
data16
jae
cld
mov
pop
jmp
xchg
or
pop
bnd
jp
xchg
or
xchg
dec
xor
in
and
mov
jp
dec
and
inc
mov
sbb
jp
mov
call
and
ret
out
lods
aam
push
pop
xchg
(bad)
push
inc
inc
mov
pop
mov
mov
int
or
jmp
das
sub
dec
xchg
aas
(bad)
or
inc
fldenv
mov
mov
inc
xchg
xor
pop
call
scas
jae
push
or
ss
test
mov
push
sar
and
pop
push
adc
aad
mov
dec
xchg
leave
icebp
mov
xchg
jmp
sub
mov
mov
loopne
add
pop
mov
test
push
xor
bound
mov
cmp
lods
call
aaa
lods
xor
jecxz
fldpi
and
mov
cmp
push
or
mov
rcr
arpl
mov
xor
(bad)
iret
push
mov
mov
push
mov
or
mov
xchg
or
outs
std
add
jg
stc
dec
sbb
push
mov
mov
lods
sbb
add
sub
ror
inc
or
pop
(bad)
jmp
repnz
mov
rol
data16
pop
add
xor
xchg
(bad)
xchg
jae
jle
sub
loop
in
jae
or
(bad)
shl
push
outs
sti
loopne
pop
fbld
mov
push
or
add
nop
mov
sbb
popa
jo
cmp
xchg
mov
adc
add
icebp
adc
lods
shl
push
mov
repz
repz
nop/reserved
in
push
push
xchg
inc
rcl
cli
push
adc
fisub
cmp
pop
mov
cmp
jle
jl
aam
repnz
cwde
sbb
cmp
mov
jae
and
and
pop
stos
cmp
ret
stos
or
jg
in
adc
aam
lods
out
and
jmp
inc
inc
inc
cmp
inc
push
jmp
in
mov
ret
arpl
inc
mov
pusha
into
xchg
in
imul
jb
and
lods
mov
xchg
loop
push
mov
dec
push
fidiv
out
cwde
xor
movs
cs
rol
sahf
pushf
and
aaa
pop
xor
movs
pushf
int3
sti
std
imul
sti
rol
in
inc
xchg
scas
(bad)
inc
sar
xchg
mov
mov
sub
xchg
(bad)
xchg
cmps
xchg
in
push
inc
push
inc
push
mov
pop
xlat
sub
jno
push
imul
sub
ins
dec
cld
mov
add
add
or
sub
cmps
aas
loop
mov
xor
ror
imul
add
es
enter
xchg
xlat
(bad)
rcr
cli
out
loop
sahf
jg
pop
icebp
mov
iret
pop
and
test
pop
mov
sbb
es
cdq
enter
sti
push
icebp
pop
cmp
icebp
fisub
ss
(bad)
das
cmc
xlat
aaa
sub
es
mov
sbb
mov
ja
rcl
add
lock
sub
mov
es
mov
rcr
and
cmp
fisubr
stos
arpl
out
addr16
pop
pop
and
icebp
pop
xchg
mov
mov
pushw
fst
xchg
rol
pushf
adc
pop
sub
xor
jnp
adc
aad
test
sbb
fild
inc
je
add
ret
ficom
out
dec
mov
inc
outs
aad
ins
and
data16
(bad)
xor
pslld
clc
jne
jb
es
or
mov
mov
mov
fnstcw
adc
ja
stc
pop
sub
jae
sbb
adc
inc
cwde
push
mov
lock
test
inc
fidivr
mov
push
sub
dec
and
lods
cmp
retf
and
dec
into
pop
daa
mov
lahf
mov
test
fild
lods
mov
xor
ins
test
sti
xor
dec
retf
adc
aad
aam
cs
(bad)
pop
jmp
cmp
push
movs
cmp
ds
bound
lea
xor
mov
push
inc
add
mov
mov
inc
(bad)
push
cmp
jne
lds
stc
jns
inc
pop
jg
sbb
cld
outs
inc
add
add
ret
imul
mov
test
cmp
nop
out
push
outs
push
mov
and
pushf
inc
(bad)
popf
loopne
mov
out
push
jecxz
push
dec
push
ins
mov
mov
sar
popf
ret
cld
sub
pop
aad
and
mov
push
int3
xchg
movs
add
xchg
push
push
lds
std
(bad)
call
mov
sbb
and
icebp
sbb
jmp
add
mov
jae
retf
mov
in
jb
pushf
mov
fsub
rol
test
add
cwde
bound
sbb
imul
mov
cli
push
fistp
popf
inc
add
gs
push
dec
or
sub
iret
jl
jne
mov
sbb
cmp
test
cmp
mov
stc
(bad)
ret
jo
xchg
mov
cmp
cmp
pop
push
inc
cmp
add
pop
cmp
sbb
jmp
sbb
push
fldenv
pop
es
call
(bad)
jnp
je
jecxz
ins
imul
outs
scas
jmp
scas
fldenv
lahf
dec
xchg
or
imul
retf
cmp
lods
add
cmps
pop
out
mov
lods
arpl
push
jp
(bad)
dec
retf
xor
and
aas
mov
sub
ror
(bad)
xchg
es
jae
or
add
es
rol
sub
xor
xchg
mov
xor
xchg
mov
xchg
lods
push
sbb
js
cdq
stos
push
or
mov
div
adc
out
xor
jbe
and
sub
xor
popf
push
inc
rcl
js
movs
sbb
call
ds
push
mov
jns
cmp
je
xchg
pop
xchg
sar
js
repz
es
mov
scas
push
mov
pushf
test
xor
inc
(bad)
push
call
jo
add
shl
je
adc
xchg
mov
mov
iret
je
sub
out
or
iret
pusha
gs
jecxz
in
jp
movs
cmps
push
cmps
dec
popf
mov
fucomip
cmps
fwait
je
dec
mov
cmp
inc
push
ss
adc
movs
jecxz
mov
push
out
ficomp
xor
dec
fdiv
js
rcr
scas
ins
cmp
loopne
dec
repnz
test
addr16
aaa
push
dec
inc
hlt
and
fisub
mov
ss
fld
in
xor
fisubr
mov
dec
mov
jno
movs
rol
scas
sub
inc
out
outs
or
mov
mov
mul
sti
jmp
cmp
clc
leave
retf
mov
pushf
rcr
test
and
call
(bad)
mov
lods
add
mov
adc
imul
outs
jmp
repz
cmp
idiv
xchg
movs
fimul
dec
cmp
out
test
icebp
jle
dec
mov
ins
scas
in
lods
outs
mov
sub
test
jp
mov
inc
or
pop
dec
rcr
(bad)
cld
and
jmp
jo
aas
and
daa
and
data16
cmp
call
mov
cmp
adc
fidiv
popa
ss
out
push
mov
mov
inc
or
sub
repnz
fist
sahf
pusha
adc
movs
push
imul
mov
aaa
mov
mov
rol
sub
sahf
ins
cli
and
sbb
out
or
xchg
pop
adc
iret
fwait
mov
test
xor
pop
add
loope
pop
push
or
ins
(bad)
retf
neg
into
push
leave
add
das
jns
cld
sar
mov
mov
nop
stc
ficom
mov
pop
pop
jecxz
push
sbb
out
jg
mov
nop
loope
sub
data16
adc
test
mov
or
adc
fisttp
fs
or
mov
dec
adc
into
lods
push
fwait
mov
mov
mov
and
scas
inc
xor
jle
mov
lods
es
aas
jmp
sub
ror
jmp
unpcklps
retf
aam
lock
pop
dec
pop
in
sbb
dec
mov
retf
jns
retf
ins
lods
mov
push
sub
pop
sub
mov
push
lock
pop
xchg
repz
dec
fld
mov
lea
cli
ins
cmp
add
mov
add
retf
pop
mov
or
sub
ret
or
inc
es
jecxz
sti
popf
cmps
lods
repnz
test
adc
jns
std
loope
xchg
or
pop
int3
mov
mov
adc
repz
lahf
mov
jo
adc
mov
adc
data16
cs
jbe
inc
frstor
out
jne
jmp
add
or
mov
mov
sbb
scas
fidivr
push
and
call
shl
push
lea
fmul
cmps
pop
jg
pushf
stc
fadd
hlt
add
fcmovbe
mov
jnp
lds
push
test
or
sbb
scas
pushf
icebp
xor
or
adc
outs
stc
mov
push
popa
xchg
mov
mov
or
or
push
inc
stos
pop
fsub
xchg
jns
arpl
imul
sbb
xor
(bad)
in
mov
jmp
out
sbb
fs
sub
jne
in
jb
adc
add
xchg
add
sbb
out
(bad)
call
enter
scas
retf
rcl
add
add
aam
popa
add
icebp
retf
inc
cdq
hlt
xchg
sbb
ja
adc
lock
shl
mov
xchg
sbb
sbb
sub
jnp
cmp
jo
xor
inc
and
or
daa
pop
pop
jl
dec
stos
xchg
or
rol
jne
mov
test
outs
(bad)
cld
jp
and
xchg
fiadd
xchg
mov
inc
mov
ret
push
pop
sbb
mov
mov
mov
shl
cs
fcmove
pop
rcl
out
xor
call
push
jmp
cld
retf
mov
mov
lea
push
int
imul
fistp
cmp
sahf
leave
pop
jge
mov
in
in
jle
lods
out
(bad)
dec
jmp
inc
(bad)
sbb
cld
mov
jb
aaa
popf
push
dec
push
mov
push
sub
(bad)
mov
sub
push
mov
mov
scas
dec
test
or
mov
les
mov
mov
xor
cmp
in
sub
xchg
out
mov
(bad)
or
movs
cdq
xor
push
xchg
pusha
add
push
xchg
out
dec
xchg
xchg
test
dec
xor
xchg
js
call
add
push
xor
or
dec
push
mov
dec
test
das
mov
cmps
ret
xchg
or
lods
scas
(bad)
push
pop
bt
ins
stos
jmp
sar
mov
sbb
shl
ret
cdq
mov
sar
jp
js
hlt
or
mov
mov
ja
inc
or
pushf
inc
div
ret
ret
out
xor
into
push
rcr
ret
ret
hlt
jecxz
mov
fsub
ja
test
xor
jmp
shl
inc
call
inc
enter
into
xor
cmps
shr
mov
clc
pop
out
ss
outs
push
test
ja
mov
aam
es
test
xchg
call
ret
add
adc
mov
fstp
mov
push
(bad)
cwde
in
mov
xor
push
call
or
xor
lods
test
xchg
push
(bad)
cmp
mov
cdq
mov
scas
mov
fidivr
add
mov
xor
sbb
inc
int3
mov
dec
cld
xchg
jnp
scas
loopne
or
add
(bad)
mov
pop
lds
mov
push
inc
shl
dec
js
aaa
dec
cmp
call
xchg
leave
sahf
dec
ins
sub
ins
mov
jae
daa
jg
nop
dec
mov
retf
sbb
inc
sbb
mov
ret
out
mov
push
xchg
enter
dec
inc
cld
mov
mov
xor
sbb
jbe
imul
dec
inc
jg
dec
xchg
lea
mov
loopne
xchg
sahf
and
imul
sbb
(bad)
jmp
test
stc
dec
fist
xchg
pop
push
cmp
mov
pop
ret
mov
out
lahf
call
push
and
cmp
repz
mov
call
mov
lea
inc
xchg
jge
sti
jns
gs
lock
outs
fnstsw
jae
sbb
std
pop
out
cdq
cmp
div
outs
addr16
xor
bound
movs
xor
sub
push
fmul
xlat
call
adc
mov
popf
jo
retf
(bad)
imul
push
in
mov
adc
(bad)
push
nop
mov
ss
mov
pop
addr16
adc
or
inc
mov
loopne
sbb
add
jae
repz
daa
mov
xchg
aad
cmp
in
(bad)
pop
mov
fsubr
das
call
ss
neg
mov
fistp
je
pop
xchg
repnz
test
and
push
mov
lahf
mov
pop
mov
inc
cmps
fs
aaa
shl
sti
mov
mov
hlt
sbb
cmps
mov
jmp
enter
ret
aas
and
hlt
cdq
xor
and
(bad)
pop
inc
cmc
stos
mov
ss
or
cmp
out
pop
ins
lods
dec
push
scas
xchg
pushw
xchg
je
or
jecxz
(bad)
push
loop
pop
jns
data16
inc
imul
mov
(bad)
jecxz
add
pusha
pusha
test
movs
fldcw
add
cmp
sub
out
fwait
cmp
pop
stc
ret
lods
mov
or
data16
xchg
push
push
jg
xor
daa
cli
mov
and
fxch
lahf
dec
sub
pop
or
into
test
xor
push
mov
push
scas
xlat
loope
pop
test
outs
je
(bad)
xchg
rcl
or
mov
jecxz
sub
jb
in
div
call
daa
popa
sbb
mov
and
ret
sub
add
shl
aad
leave
push
daa
das
inc
mov
scas
xor
pusha
xor
retf
hlt
dec
or
dec
(bad)
pop
mov
mov
dec
fadd
pop
add
sbb
les
fst
rol
add
aad
or
scas
add
sub
in
mov
jle
sub
mov
imul
dec
aaa
xchg
enter
or
iret
jmp
inc
xor
pop
sbb
mov
ror
jne
je
jnp
imul
sahf
push
mov
mov
popa
shr
and
push
sbb
pop
out
out
xchg
icebp
push
inc
fnstcw
push
aad
cwde
and
in
dec
mov
ins
mov
in
test
test
mov
js
jle
adc
lds
dec
or
loopne
and
fs
mov
cwde
inc
mov
sbb
mov
sub
ror
mov
shl
outs
sti
cli
outs
sbb
xor
out
fstp
pop
addr16
dec
pop
sbb
xchg
and
dec
or
das
sbb
mov
sbb
loope
fiadd
or
loopne
xchg
inc
dec
or
push
bnd
popa
setae
pop
jb
xchg
xor
cmp
dec
loope
lock
pop
jmp
cmp
add
sbb
shl
(bad)
icebp
xchg
xchg
call
jmp
mov
or
enter
push
pop
pop
pop
scas
fucomip
jle
jmp
pop
pop
mov
xchg
das
sub
imul
sti
int3
jns
jo
sub
cmc
inc
pop
jnp
(bad)
cmp
and
fwait
shl
cmc
ins
pop
inc
ins
mov
maxps
sub
xor
aad
loop
dec
inc
mov
std
jb
cmp
mov
xor
stc
jp
lock
xlat
jmp
cmp
cmps
inc
pusha
or
mov
cmps
xlat
jne
add
adc
push
sahf
cdq
js
xor
xor
stc
dec
mov
push
add
pop
movs
sar
mov
jmp
pop
(bad)
retf
inc
xchg
jmp
xchg
es
mov
dec
push
jg
mov
jmp
gs
mov
test
add
push
xchg
xchg
and
xor
cmp
add
lock
loopne
dec
dec
mov
dec
inc
test
sbb
adc
pusha
inc
push
es
cdq
push
jns
jg
mov
aad
pop
cmp
push
inc
xor
xchg
mov
scas
std
outs
sub
jp
call
mov
mov
add
fnstenv
dec
(bad)
addr16
stos
int3
jne
xor
xchg
adc
test
and
cwde
sub
add
mov
sub
pop
xor
movs
sti
push
adc
lds
xchg
out
add
push
addr16
out
ins
dec
cmc
ds
dec
dec
mov
jle
in
pop
hlt
sub
sbb
cmp
mov
stos
lods
int
jp
xchg
por
adc
imul
cli
clc
xchg
adc
mov
ds
aad
xchg
repnz
mov
jp
xor
cmp
cmovl
mov
inc
push
push
sub
aad
stos
pushf
je
es
stos
lods
xchg
and
xor
(bad)
push
adc
in
lock
add
cdq
mov
outs
or
mov
jg
out
loope
test
xchg
sbb
repz
aas
rcl
retf
pop
popf
in
xor
ss
pop
adc
ds
pop
dec
mov
mov
(bad)
fcmovnbe
push
movs
fwait
pop
aaa
popf
sbb
push
pop
ss
test
enter
sbb
(bad)
cs
xchg
adc
push
test
scas
(bad)
jmp
out
fmul
mov
test
push
ret
adc
test
sbb
mov
xor
lock
leave
jnp
in
cs
jnp
pop
cdq
cmps
pop
pusha
bound
xchg
add
fimul
ins
push
out
mov
jmp
adc
and
jae
aam
cmp
jbe
pop
add
cld
inc
popf
(bad)
cmc
mov
dec
inc
xor
add
add
imul
cmp
ds
and
and
adc
add
and
cmp
or
movs
mov
and
ss
rol
jnp
test
lods
(bad)
outs
clc
loop
out
(bad)
mov
outs
add
lds
cmp
ret
mov
xchg
in
add
scas
xlat
daa
mov
sbb
or
push
and
fild
sti
lods
fwait
call
sbb
sti
mov
pop
cs
sub
jg
push
cli
and
and
or
sbb
push
and
sti
pop
push
popa
(bad)
push
shr
adc
lahf
pop
sbb
inc
xchg
xchg
pop
add
jno
out
push
sub
cmp
in
loop
dec
mov
stos
movs
out
xor
(bad)
xor
je
pop
xchg
push
in
and
jmp
cmc
cmps
lock
xor
lahf
in
(bad)
pusha
dec
neg
jl
xchg
jns
out
dec
icebp
add
or
sub
movs
bound
jo
xor
inc
xor
cmp
adc
push
mov
call
inc
stos
push
pop
scas
cwde
mov
adc
repz
mov
add
cmps
push
sahf
push
xchg
ins
add
add
aad
add
pop
lods
arpl
je
je
inc
cmp
xor
jns
sub
dec
jp
sbb
hlt
adc
fcmovne
and
(bad)
xlat
sbb
dec
loope
cmp
lds
not
push
cli
lods
ins
mov
fistp
xchg
shl
in
mov
push
cmp
mov
sbb
or
mov
outs
into
cmps
push
mov
fild
aam
test
and
icebp
lea
xchg
out
scas
pop
sbb
cmps
xor
jmp
jmp
jmp
ret
pop
out
in
pop
cmps
xor
out
leave
nop
sbb
retf
cmp
lods
ds
jae
jmp
dec
or
adc
cmp
test
cmc
jno
add
or
xor
cmp
pop
mov
adc
lahf
jbe
adc
ret
int
xor
pop
jecxz
test
adc
mov
mov
mov
lods
fisttp
int3
mov
outs
dec
xchg
fdiv
push
sbb
pushf
shr
adc
ss
jecxz
aaa
adc
or
and
mov
adc
retf
xchg
ror
xor
push
jb
mov
adc
push
jecxz
mov
pop
mov
cmovae
xchg
or
push
popa
or
gs
sub
sbb
ds
push
repnz
sub
or
cmp
push
out
fsubr
add
fld
std
push
cmc
jmp
fisttp
add
sub
jecxz
sub
fldcw
xor
frstor
data16
and
cdq
jnp
ja
call
enter
mov
sbb
cmp
or
jne
inc
add
iret
fild
mov
ins
div
sbb
cmc
jle
aaa
inc
mov
push
push
iret
and
mov
(bad)
adc
pop
mov
jno
and
ficom
push
xchg
ror
gs
test
push
lea
jno
test
pop
sar
fmul
shl
clc
cs
call
mov
leave
and
pop
cmp
add
jecxz
xor
mov
outs
jecxz
frstor
fwait
dec
ret
mov
sahf
retf
mul
pop
jnp
push
xor
ja
push
cmps
into
push
inc
jnp
test
xor
stc
mov
sbb
das
jmp
xor
rcl
das
push
mul
into
xchg
fldenv
outs
add
ret
adc
mov
jmp
sbb
outs
sbb
mov
repnz
cmp
xchg
arpl
cmp
add
rcl
imul
ins
jecxz
dec
lds
cmp
inc
sbb
pop
das
cdq
xchg
and
xor
xor
push
push
retf
push
dec
mov
rcr
cmp
(bad)
xchg
fsub
adc
mov
push
xor
rol
mov
dec
mov
rsm
lds
cmps
dec
and
jge
xchg
(bad)
sbb
adc
dec
not
adc
xor
dec
inc
into
mov
sbb
jle
dec
xor
ins
mov
or
aas
and
add
je
push
retf
fld
out
cmp
push
jae
jno
retf
jmp
les
pop
jp
loopne
les
inc
inc
dec
xchg
add
adc
xchg
xchg
adc
xchg
dec
xchg
push
mov
xchg
mov
movs
dec
les
fistp
out
sbb
ss
in
iret
xlat
(bad)
sar
adc
aaa
and
jns
loope
inc
loop
push
push
ds
scas
add
les
and
jne
sbb
push
and
adc
dec
(bad)
push
fist
popf
in
mov
sub
arpl
scas
add
dec
repnz
fild
adc
adc
cmp
shl
mov
mov
mov
cmps
mov
adc
stc
imul
jns
int3
aas
mov
(bad)
xchg
nop
imul
push
fldcw
imul
jb
xor
fmul
daa
pop
in
mov
mov
lods
and
adc
and
and
(bad)
xor
frstor
cmp
mov
jno
sbb
mov
mov
outs
movs
pop
mov
or
adc
or
fsub
iret
outs
adc
mov
pop
xor
cmc
push
xchg
les
mov
sub
fisubr
imul
out
cld
ins
or
dec
mov
dec
dec
or
mov
and
pusha
scas
test
add
rol
fcompp
or
fldcw
jo
adc
or
lods
loopne
arpl
jl
or
sub
bound
cwde
(bad)
cmp
inc
jnp
inc
aad
mov
fst
(bad)
dec
xor
push
inc
add
test
arpl
rcr
(bad)
fcmove
icebp
xor
dec
and
sahf
sub
dec
mov
dec
fsubr
outs
mov
add
mov
into
shl
mov
pop
into
sbb
movs
mov
push
pop
inc
xchg
jne
add
adc
mov
push
jae
pop
out
cmp
adc
scas
sbb
xor
ins
cmp
mov
outs
out
je
xchg
cwde
int3
rcl
push
test
jno
out
out
test
mov
cmp
sbb
cmp
mov
std
movs
sbb
pop
std
push
loope
xchg
inc
scas
jge
xchg
bound
cli
cmp
mov
ficomp
inc
scas
ins
jae
dec
sbb
test
mov
cmp
ja
push
push
call
inc
inc
jmp
(bad)
jmp
mov
shl
mov
mov
mov
ss
inc
out
cmc
test
test
xor
scas
xchg
mov
hlt
bound
jbe
sbb
test
bound
popf
cmps
jp
push
mov
and
(bad)
jecxz
sbb
dec
adc
test
movs
jbe
mov
outs
arpl
es
push
pop
push
stc
fldenv
xchg
add
fmul
fucomip
gs
out
mov
cld
neg
sbb
or
dec
push
push
mov
(bad)
sub
pop
mov
cmp
sbb
dec
mov
test
xor
repz
xchg
inc
or
int3
xchg
popa
cli
inc
test
inc
push
hlt
sbb
test
and
xchg
lock
push
jl
pop
in
ss
jmp
jg
movs
inc
mov
pop
xchg
cmp
mov
(bad)
jecxz
sub
xchg
icebp
mov
or
pop
push
push
mov
out
dec
mov
outs
int
xchg
scas
push
shl
add
outs
popf
fild
xchg
cmova
mov
mov
mov
mov
xor
mov
dec
(bad)
in
xchg
dec
outs
pusha
sub
mov
es
or
push
and
int
(bad)
shl
add
adc
add
adc
sbb
mov
rcl
arpl
ss
jb
int3
stos
xlat
xchg
dec
and
loop
add
cmc
or
scas
jp
push
xor
push
ror
adc
mov
jbe
cmp
pusha
push
jbe
retf
imul
jg
fdivr
jp
and
sub
or
loop
in
icebp
jle
movs
stos
(bad)
mov
adc
bound
add
mov
and
test
adc
ret
fidiv
cld
sub
mov
movs
cmps
xchg
add
arpl
xchg
pop
xchg
cmps
(bad)
out
ins
or
ret
ret
inc
mov
jp
dec
xchg
cmps
pop
std
mov
daa
in
fimul
pusha
mov
(bad)
cmp
push
shl
or
xchg
add
and
outs
(bad)
ficom
sbb
bound
xchg
inc
and
sahf
cld
push
cs
pop
sti
xchg
jb
loope
(bad)
mov
mov
add
sub
and
or
popa
sub
mov
cmp
(bad)
jg
cmp
int
push
adc
mov
xchg
retf
mov
sub
add
cld
addr16
rcl
or
outs
add
sbb
(bad)
fldlg2
inc
loop
pop
daa
push
lock
stos
push
daa
js
aam
aaa
pop
std
and
in
pop
xchg
push
xor
mov
arpl
jae
and
cwde
fsubr
sbb
push
push
pop
aad
mov
popa
mov
or
mov
push
in
out
jle
xchg
push
jg
repz
dec
sub
push
popf
imul
aaa
adc
mov
cmp
test
push
mov
adc
jecxz
ret
mov
xchg
adc
pop
ret
fild
xlat
ins
push
mov
movs
stos
std
jmp
sub
inc
aas
imul
ret
xchg
or
adc
test
out
lods
xor
jae
ficom
push
adc
out
jecxz
add
pop
jne
xor
sub
xchg
xor
stos
jbe
mov
sub
sbb
in
jecxz
out
add
std
int3
fcomp
or
(bad)
repz
int3
gs
je
jbe
or
inc
stos
pushf
push
data16
sbb
cwde
pop
inc
mov
scas
loopne
or
sbb
pusha
(bad)
add
xchg
das
cmp
leave
push
dec
inc
jmp
cmps
dec
movs
aad
loope
and
test
bound
xchg
sbb
ret
adc
pop
lods
pop
cmp
mov
call
(bad)
in
adc
pop
mov
std
popf
(bad)
push
or
jns
mov
or
int3
int
cmps
cmp
aad
xchg
jae
mov
jg
xchg
dec
in
ins
add
and
std
and
and
pop
or
repnz
inc
push
and
push
ss
push
dec
jp
popa
adc
xchg
adc
push
out
lock
mov
sbb
fs
push
adc
push
scas
addr16
call
arpl
jno
dec
call
mov
dec
xor
out
push
push
mov
push
inc
dec
dec
out
push
sub
pop
add
out
scas
loope
scas
pushf
cmp
data16
push
jle
xor
xlat
sub
push
push
lock
jle
inc
test
pop
sbb
adc
sti
jae
cdq
nop
inc
pop
movs
sbb
or
cmp
(bad)
shl
mov
push
xor
or
sub
pushf
sbb
outs
sub
push
mov
or
sbb
jg
mov
es
jge
pushf
fisttp
mov
mov
sub
outs
adc
add
lods
out
js
xor
cwde
xchg
inc
iret
push
mov
push
mov
xchg
retf
adc
and
rcr
shr
(bad)
in
(bad)
into
pop
pop
fcomp
xchg
(bad)
xchg
addr16
push
dec
xlat
sub
imul
or
mov
xchg
out
mov
jb
shl
push
in
jg
pop
(bad)
retf
xor
hlt
(bad)
jno
stos
dec
int3
retf
mov
retf
push
(bad)
(bad)
(bad)
addr16
test
pop
push
ficomp
out
(bad)
jno
adc
test
dec
push
call
mov
iret
add
push
mov
int
pop
mov
inc
(bad)
inc
sahf
clc
cs
jmp
push
in
mov
push
jge
loop
div
push
popa
std
cmps
inc
mov
pop
call
inc
std
cmp
sub
sbb
out
dec
push
test
cmp
jl
sahf
lds
das
xor
mov
jns
pop
movs
in
push
push
mov
fwait
cmp
js
mov
sub
pop
loopne
push
add
push
push
idiv
xor
lods
adc
or
dec
aas
pusha
sbb
jns
xor
jle
fmul
mov
add
cmp
xor
das
popf
mov
out
xlat
dec
addr16
inc
stos
cmps
out
shr
sahf
mov
push
jp
lahf
jne
xor
imul
mov
cmps
add
pop
xchg
outs
xchg
imul
in
stos
call
jbe
jns
adc
ret
push
pop
icebp
and
adc
sbb
xchg
mov
das
cs
loopne
xchg
dec
outs
pop
mov
or
or
push
cmp
mov
push
inc
mov
jbe
das
out
imul
pop
leave
add
popf
inc
fwait
pop
cmc
mov
add
cmps
mov
cmp
test
xchg
fst
pusha
(bad)
xor
idiv
fisubr
jmp
out
push
fmul
retf
sbb
push
cmp
cs
adc
push
stos
loopne
cdq
push
push
nop
xchg
mov
add
lods
sub
pop
test
movs
push
in
fst
mov
aaa
sbb
mov
add
jp
pop
into
div
int
pusha
push
hlt
push
lea
dec
test
push
mov
adc
dec
and
mov
loope
mov
popf
jnp
pop
sub
xor
fst
mov
iret
jne
jmp
cs
movs
jmp
mov
and
loope
(bad)
mov
lock
outs
sub
dec
or
call
js
and
lods
jmp
xchg
dec
fcmovbe
imul
stos
jecxz
cmp
adc
cwde
pop
inc
push
inc
shl
pop
ror
fmul
push
push
or
mov
cs
ss
mov
cld
cs
inc
js
je
jbe
xor
mov
cli
mov
sub
movs
mov
sbb
repz
xlat
fdivr
pop
mov
sub
pop
es
push
(bad)
and
mov
xchg
push
jg
arpl
sti
mov
sti
(bad)
xchg
or
push
into
sub
(bad)
sub
cli
aad
xor
cld
int
pop
hlt
pop
dec
int
pop
das
sbb
mov
push
add
into
out
loopne
mov
lock
push
out
int3
push
into
jmp
mov
mov
stos
or
mov
out
push
stc
sahf
mov
pop
cmps
not
out
(bad)
out
or
repz
and
sub
dec
jae
and
or
ins
add
loop
mov
push
sub
call
ret
dec
test
mov
loope
aad
cwde
call
inc
int3
adc
mov
ret
sbb
lahf
mov
out
mov
dec
sub
mov
xor
push
(bad)
fbld
mov
test
pop
sbb
out
data16
push
push
enter
xchg
xor
dec
das
sbb
std
stos
xor
mov
pushf
jge
fisubr
aam
movs
lock
add
sub
bnd
movs
lahf
jge
xchg
fwait
xor
add
out
cmp
cmp
add
outs
fisub
mov
les
sbb
dec
iret
cmp
nop
mov
loopne
push
jp
lahf
in
jnp
push
ds
jnp
mov
xor
rcl
mov
cmc
mov
add
pusha
das
jnp
(bad)
jle
pop
mov
add
xor
mov
xchg
lea
popf
push
fdivrp
push
lods
rcl
(bad)
mov
inc
sahf
stc
pop
pop
repz
in
jmp
mov
daa
adc
(bad)
sbb
sbb
aaa
or
daa
adc
ffree
retf
ret
cdq
mov
push
popf
xchg
cmp
ds
arpl
dec
jae
out
dec
ret
jae
sub
hlt
cmp
inc
jge
int
popf
fucom
lods
inc
test
repnz
adc
xchg
sbb
pushf
cld
push
mov
adc
imul
push
scas
push
imul
sub
ins
in
aas
xor
and
into
adc
mov
loop
mov
push
jge
push
movs
xor
test
ja
push
dec
add
sbb
sbb
xchg
mov
loope
mov
into
cmp
sti
sbb
pop
and
mov
mov
cs
in
mov
sbb
cmps
mov
addr16
or
push
sti
push
sub
out
ins
xor
cmps
push
inc
sbb
(bad)
cli
jmp
inc
sbb
inc
dec
mov
ret
stos
fld
cdq
outs
adc
hlt
lds
repz
dec
nop
out
pop
inc
rcl
mov
mov
int3
pop
aam
xchg
cmp
rol
sub
xchg
fcomp
and
movs
push
xchg
or
dec
xor
iret
xor
jnp
dec
cld
mov
(bad)
leave
jecxz
sub
imul
jo
aam
mov
cmp
mov
repnz
int3
cmps
js
cwde
push
mov
rcr
int
xor
jmp
jns
frstor
clc
or
sub
dec
or
in
cmp
fiadd
sbb
(bad)
(bad)
int
aaa
sahf
cmp
rcr
sub
nop
and
int
es
and
add
and
out
xor
ins
push
repz
xor
test
mov
sbb
stos
xor
fdiv
dec
adc
jno
mov
sub
adc
jp
cmp
mov
add
or
jnp
inc
xor
fistp
sar
aas
push
aam
pop
in
outs
dec
in
mov
and
add
push
and
sbb
mov
cmp
aas
sub
nop
xchg
mov
ja
ret
and
jne
jg
out
mov
xchg
retf
jbe
ficom
push
cmps
sub
je
mov
mov
jmp
ins
call
add
jg
out
pop
ss
addr16
leave
ss
cmps
mov
dec
fdivr
ror
(bad)
into
sti
cmp
sub
sbb
mov
mov
adc
bound
(bad)
xchg
loop
outs
stos
mov
aas
push
movs
inc
mov
mov
and
add
or
and
xlat
dec
mov
and
pop
jmp
cwde
sahf
mov
icebp
into
mov
pop
and
fdivr
mov
jae
mov
inc
cld
(bad)
pop
mov
mov
cs
adc
inc
ss
pusha
jmp
aam
fbld
adc
push
and
xor
pop
lahf
fs
mov
pop
jmp
adc
hlt
or
jp
and
adc
push
mov
adc
and
mul
retf
xor
outs
or
add
fwait
popa
aad
rcr
(bad)
pop
jb
xor
nop
push
mov
fsubp
dec
ss
imul
cli
mov
popa
lods
enter
inc
mov
jecxz
sub
sbb
imul
jmp
mov
fild
add
imul
loopne
and
sbb
jg
inc
mov
repz
jecxz
jb
dec
je
jb
sub
sti
mov
mov
sbb
inc
jmp
dec
inc
jnp
out
int
fnsetpm(287
jo
ins
cmp
mov
repz
sub
mov
adc
inc
jo
arpl
in
sub
xlat
(bad)
mov
scas
cmp
mov
mov
cmc
pop
push
cdq
scas
in
adc
movhlps
inc
addr16
imul
fisub
push
jle
sbb
hlt
push
jns
pusha
popa
das
xchg
fld
inc
sar
or
push
imul
pushf
mov
(bad)
cmp
clc
jle
xor
dec
jne
jnp
lea
fwait
ret
aas
pop
mov
pushf
cmp
dec
test
int3
adc
repnz
mov
add
retf
or
in
mov
or
jp
ja
test
in
or
xchg
aam
into
stos
pop
jnp
sub
xor
daa
push
aad
jae
sub
pop
sub
inc
mov
fs
daa
mov
pop
cmps
dec
cmps
inc
les
push
cdq
out
push
sbb
(bad)
enter
lock
xor
xor
sbb
out
cdq
mov
fmul
add
xchg
test
xor
mov
jae
jl
push
movs
ror
inc
fst
mov
jo
outs
pop
mov
xor
xor
xchg
outs
bound
fs
or
xchg
outs
xchg
fs
lock
stos
cdq
cmp
ud2
ret
mov
mov
xchg
dec
push
popa
cmp
repz
dec
scas
mov
mov
lods
sub
mov
clc
xor
(bad)
arpl
fadd
mov
push
ins
retf
xor
adc
ficom
sub
in
mov
sti
in
jge
out
add
add
lahf
loop
sbb
sbb
mov
icebp
jle
aas
xor
mov
xchg
retf
cs
outs
jmp
test
add
push
ds
push
or
push
daa
je
stc
add
inc
inc
in
idiv
(bad)
xchg
push
lahf
lods
mov
fst
sahf
xchg
rcr
xor
jecxz
push
mov
jmp
stc
call
inc
cmp
inc
push
clc
mov
mov
hlt
add
jge
mov
xchg
ins
sub
adc
test
jl
sub
inc
mov
lods
xchg
lods
dec
xchg
jge
add
xor
dec
dec
adc
jmp
popf
in
xchg
cmp
ror
lods
sbb
out
sti
adc
xchg
loop
xor
lods
shl
dec
clc
sub
stos
or
xchg
push
mov
jne
sbb
mov
lahf
(bad)
pop
pusha
arpl
mov
or
retf
cmp
shl
sub
mov
mov
(bad)
pop
and
mov
and
out
movs
stc
mov
xchg
ss
push
adc
adc
and
fidiv
call
fisttp
inc
sbb
mov
sub
jmp
stc
inc
call
adc
push
in
dec
push
add
test
outs
call
xor
and
sbb
pop
xchg
inc
mov
cwde
inc
mov
pop
add
outs
mov
inc
pop
ins
addr16
fdivrp
in
jp
inc
test
mov
sub
loop
aas
or
retf
cli
lods
xchg
ret
nop
cmp
mov
and
fwait
out
nop
adc
shr
fisubr
push
dec
inc
cs
(bad)
(bad)
push
retf
test
push
sar
sub
out
mov
repz
fdivr
mov
ins
xchg
pop
arpl
or
mov
jns
mov
or
fs
je
jl
arpl
push
clc
push
loop
test
or
sbb
adc
cmps
add
dec
xchg
jns
jo
fwait
jns
pop
dec
ins
retf
xchg
shl
jge
cmp
mov
fidiv
xor
cwde
push
mov
lock
cmps
cwde
aad
xor
cmp
mov
and
sub
in
outs
retw
shl
push
xor
sahf
push
inc
sbb
xchg
cmc
and
les
adc
fnstsw
cs
ror
inc
mov
imul
loop
fld
sbb
mov
mov
or
retf
push
xor
adc
jge
ret
icebp
adc
jecxz
and
pop
out
in
cmp
(bad)
aad
jno
sbb
loopne
inc
and
xor
push
inc
mov
push
sbb
pop
mov
jmp
retf
xchg
lods
cli
fisttp
and
(bad)
jns
fcom
jg
arpl
and
jns
jno
jl
jb
add
and
inc
fs
pop
push
jb
mov
jecxz
(bad)
cwde
in
mov
pop
push
icebp
or
cmp
xchg
enter
inc
pusha
and
xor
pop
pop
xchg
mov
pop
push
sbb
and
das
xchg
mov
ret
fisub
pop
out
aaa
add
sub
iret
jnp
ss
ficom
push
pusha
push
mov
leave
(bad)
mov
sbb
xchg
ins
int3
dec
ds
add
add
not
or
cmps
add
addr16
mov
loop
jle
cmp
add
push
call
mov
fiadd
jmp
lock
push
fadd
movs
pop
mov
cs
mov
jl
push
dec
mov
jnp
jmp
xor
shr
cmc
xchg
jmp
lahf
sar
das
add
sar
add
dec
adc
les
cmp
inc
cmp
inc
xchg
imul
mov
repnz
movs
push
cmp
dec
mov
and
add
bound
jno
and
cmp
rcr
xlat
or
pop
ss
test
lods
dec
mov
lods
stc
and
and
push
push
fnstcw
sub
das
stc
sti
popa
cmc
dec
add
rcr
mov
adc
lahf
push
xchg
mov
cs
je
push
arpl
or
push
jae
push
dec
add
mov
stc
(bad)
sub
in
xchg
xchg
mov
xlat
mov
std
test
and
fsubr
(bad)
neg
mov
call
fucomi
stos
xor
xchg
jno
mov
(bad)
pop
mov
int3
pop
inc
int3
fs
jno
mov
push
fcmovu
fsub
ret
add
call
cmp
jg
xor
aaa
imul
icebp
sub
addr16
rcr
jge
push
mov
mov
adc
je
or
mov
and
arpl
xchg
ret
xor
or
adc
mov
(bad)
push
test
imul
cmps
movs
or
jo
addr16
jns
out
sar
stos
loopne
lods
mov
sub
jne
sahf
xchg
cmp
pop
mov
sbb
stc
jnp
xchg
sbb
lds
mov
fcomp
sub
sbb
and
push
dec
cmp
movs
sub
test
add
mov
into
sbb
and
push
lods
sti
inc
cld
inc
mov
mov
not
xchg
push
sbb
ja
pop
mov
fsub
push
sti
ror
xchg
imul
pop
mov
lock
cmc
cli
mov
push
mov
push
add
sbb
and
and
mov
cwde
cmp
enter
sbb
xchg
adc
inc
sbb
adc
xchg
xchg
(bad)
sub
mov
fucomp
(bad)
pop
fwait
stc
jecxz
push
mov
cld
in
cmps
test
and
jl
sub
ins
outs
int3
pushf
ja
test
cmps
mov
inc
sahf
push
rep
push
sub
pop
aas
ds
push
cmp
lock
cmps
jae
movs
mov
fld
sub
mov
dec
sbb
and
mov
test
ss
iret
(bad)
mov
add
retf
mov
(bad)
jge
(bad)
pop
pop
call
push
mov
pop
call
cmp
icebp
pop
mov
ins
retf
repz
or
(bad)
dec
cmp
test
out
sub
pop
jle
lds
sub
stc
push
pop
cmps
pop
push
rcl
jmp
xor
sub
sar
add
jae
mov
cmps
mov
or
adc
(bad)
push
jns
sahf
clc
mov
or
cli
icebp
xor
xchg
push
or
cmp
jl
and
mov
mov
mov
push
mov
in
fdivr
lock
into
push
inc
loopne
jae
xchg
test
test
pop
xor
push
sbb
dec
int3
xchg
jecxz
sbb
inc
mov
fdiv
retf
test
cdq
scas
mov
cld
cmc
or
(bad)
jmp
(bad)
fdiv
add
jno
cmp
icebp
pop
in
iret
popf
jle
push
jmp
out
dec
cmp
hlt
mov
and
push
out
nop
lods
retf
test
and
jae
or
dec
or
push
mov
cli
mov
jmp
out
sub
cwde
arpl
adc
jns
jnp
mov
ret
mov
(bad)
or
push
or
std
out
ret
adc
mov
jl
out
lea
movs
push
xchg
cmp
sbb
xchg
test
call
sbb
xor
stc
xchg
pop
outs
(bad)
jne
nop
fwait
pop
add
jno
or
add
test
loopne
pop
lahf
xchg
mov
xchg
cmp
mov
jg
ret
ds
retf
in
pop
and
cmp
loop
ds
and
pop
dec
sbb
sbb
jo
icebp
aam
inc
push
dec
fcmovne
adc
xor
call
mov
push
mov
ins
push
imul
aam
cmp
in
mov
in
mov
sub
bound
push
ins
fstp
jmp
mov
fwait
push
add
mov
mov
sbb
push
aam
fldenv
sub
xor
push
data16
inc
pop
lds
xor
ret
(bad)
movs
shl
jge
push
cld
mov
and
mov
lea
outs
clc
add
mov
mov
jnp
xchg
(bad)
cmc
not
mov
movs
xchg
les
adc
xchg
iret
mov
shr
into
shl
xor
xchg
mov
scas
jmp
scas
ror
leave
mov
xchg
enter
popf
aaa
lock
aaa
jmp
imul
or
lahf
and
fistp
out
push
xor
mov
and
push
jecxz
xchg
mov
xor
jecxz
je
jecxz
cmp
mov
sti
xchg
push
sbb
pusha
xor
loope
mov
sbb
adc
push
jnp
ins
imul
(bad)
xchg
(bad)
jecxz
sub
outs
jne
retf
cmp
mov
adc
cmps
aas
pop
js
retf
pushf
fld
movs
js
clc
jbe
int
scas
jne
inc
out
xlat
pop
sub
xchg
cs
das
inc
iret
fstp
rol
cmps
dec
pusha
adc
sub
in
pop
pop
mov
(bad)
jmp
popa
retf
cwde
pop
sub
push
shl
pop
retf
scas
es
push
test
xchg
fld
mov
cmp
(bad)
fdiv
stc
and
push
out
out
jb
outs
shr
fsubp
cmp
retf
sti
cmp
pop
ins
push
mov
stc
cmp
fdivrp
adc
mov
push
push
mov
inc
nop
int
int3
sbb
(bad)
fs
dec
push
push
mov
jmp
cmp
outs
shr
sbb
sub
(bad)
scas
cwde
mov
sub
mov
dec
mov
jne
fnstcw
sub
fwait
cmp
push
jno
out
adc
sub
inc
push
cmp
(bad)
dec
jns
push
jno
das
pop
pop
or
add
or
jmp
push
sbb
inc
stos
sub
shl
and
xor
and
int3
pop
sbb
mov
mov
icebp
mov
mov
cmp
addr16
and
inc
inc
push
js
xchg
xchg
xlat
adc
dec
arpl
stos
jmp
in
fsubr
mov
push
shl
and
test
sbb
mov
cmp
jle
test
(bad)
cmps
and
out
loope
dec
xchg
mov
es
xchg
daa
mov
inc
jbe
inc
jbe
cmp
jae
cs
inc
jno
hlt
cli
mov
or
dec
add
rol
mov
out
sahf
repnz
mov
nop
sbb
loope
and
leave
xchg
sti
inc
aaa
movs
mov
mov
enter
arpl
lock
ret
inc
out
test
in
out
shl
aam
sbb
adc
fistp
sub
pop
push
ret
and
adc
lds
add
int
mov
mov
ficom
call
mov
pop
sar
jo
jge
cmc
aas
dec
out
out
mov
inc
add
les
bound
test
movs
sub
pop
es
in
jne
cmp
mov
out
add
aas
and
lods
add
add
imul
enter
loopne
push
test
repnz
je
in
dec
dec
sbb
xchg
dec
adc
cli
or
gs
shr
push
in
lds
push
je
xchg
push
test
or
movs
das
mov
scas
jb
jne
cmps
cwde
mov
div
shl
xchg
push
inc
mov
jmp
les
loope
ficomp
fcomp
push
cmps
dec
test
nop
mov
cld
push
xor
ins
dec
inc
repz
mov
fild
inc
adc
out
out
lock
push
pushf
sti
jae
mov
adc
dec
retf
mov
leave
mov
sbb
sbb
test
jle
and
xchg
dec
mov
mov
xchg
(bad)
imul
sti
mov
and
push
cwde
fs
outs
(bad)
(bad)
adc
push
(bad)
dec
aam
dec
ficomp
sub
xchg
idiv
out
mov
mov
retf
jl
loopne
cmp
fbstp
xchg
mov
cmps
jno
dec
fisubr
dec
sub
xchg
or
gs
pop
inc
retf
sbb
movs
or
call
(bad)
retf
xchg
jmp
pusha
or
push
stos
in
mov
ins
fadd
or
sbb
mov
(bad)
push
ror
in
cmp
mov
mov
retf
(bad)
xor
lds
add
jle
jo
repz
pop
push
cdq
push
cli
ret
fstp
fld
nop
xchg
cs
(bad)
(bad)
call
jae
dec
icebp
aaa
call
lods
xor
sar
mov
push
clc
pop
aam
sub
outs
fnstsw
sub
xchg
popf
pop
sbb
clc
int
push
pop
pushf
adc
cld
mov
add
cmp
mov
fld
rcl
dec
and
js
mov
pop
popa
mov
push
cmp
mov
pop
cmp
push
sub
mov
outs
mov
xchg
or
cli
ins
les
hlt
cmc
clc
mov
cmp
les
(bad)
leave
inc
retf
add
lea
dec
out
jmp
xor
stc
add
push
and
outs
std
jbe
and
int3
jns
ds
ins
mov
aad
shl
sub
lods
xor
sbb
push
addr16
pop
enter
xor
aaa
pop
jge
sub
out
sahf
push
lods
cli
fist
or
int
ja
inc
sub
adc
cmp
sub
xchg
cdq
or
or
adc
jge
sti
mov
pop
xor
retf
pop
sbb
daa
dec
cmp
sbb
sbb
jae
xchg
pop
aaa
jnp
ds
dec
arpl
hlt
xor
and
mov
adc
dec
or
int3
push
dec
lds
shl
rcr
call
rol
icebp
sub
mov
adc
sbb
ret
or
dec
mov
jle
and
sub
push
mov
add
push
and
mov
xchg
dec
mov
dec
imul
pop
pop
sti
ja
xchg
inc
test
fcomi
pop
(bad)
jns
cdq
and
loop
ret
push
ret
or
js
jbe
and
aaa
jno
mov
sub
or
xlat
loop
push
lds
mov
cmps
adc
popw
mov
add
fstp
mov
and
stos
inc
int
test
icebp
jno
jo
adc
cmc
mov
out
dec
pop
dec
jbe
js
cmp
iret
cmp
jb
xchg
fld
sub
call
popf
int
jle
out
mov
xor
in
mov
arpl
or
xor
xor
xchg
or
mov
adc
sub
cli
leave
stos
shl
pushf
outs
idiv
jle
sar
mov
mov
(bad)
dec
inc
xchg
mov
pop
clc
dec
in
ret
jmp
fs
outs
mov
or
test
xor
mov
push
lds
scas
adc
loope
push
into
xchg
retf
dec
push
adc
hlt
mov
fld
xlat
inc
push
retf
inc
or
sbb
imul
scas
jmp
(bad)
repz
add
popa
shl
push
xchg
outs
push
xor
das
or
push
and
cmp
mov
ret
lds
jnp
add
cmp
shr
and
faddp
mov
jge
xor
adc
sbb
push
in
popf
sbb
push
rol
ins
aam
cmp
push
jb
or
and
jo
pextrw
cmp
jns
fnsave
pop
cwde
xchg
inc
outs
inc
add
inc
xchg
iret
push
sub
icebp
loope
repz
inc
es
mov
xchg
inc
sub
jne
test
sub
es
mov
test
jbe
movs
icebp
push
adc
fisubr
pop
or
scas
jbe
push
push
ror
lods
pushf
sbb
outs
cmps
aas
xor
mov
jmp
in
cwde
mov
idiv
sub
push
sar
xchg
jns
push
test
out
adc
mov
adc
and
jno
xchg
scas
aam
dec
inc
sub
or
loop
mov
mov
inc
jmp
pusha
adc
pop
inc
xchg
leave
(bad)
ja
push
shl
aaa
fimul
clc
sbb
inc
jno
push
ret
mov
push
stos
mov
mov
out
pop
xor
ja
inc
lea
ja
and
bound
ins
ss
ja
clc
adc
inc
jg
mov
mov
mov
pop
scas
call
xor
and
stc
mov
and
sbb
inc
(bad)
out
pop
out
das
out
add
and
adc
enter
pushf
and
xor
dec
push
cmp
cli
popa
sub
dec
out
rol
int3
pusha
dec
inc
adc
or
lods
arpl
push
dec
xchg
sahf
mov
in
inc
lods
mov
adc
ds
mov
xchg
daa
das
sahf
retf
cdq
pop
(bad)
addr16
fxch
xchg
nop
xor
call
sbb
idiv
out
mov
pop
adc
or
adc
not
push
cdq
mov
gs
push
test
icebp
add
clc
or
xchg
je
cli
cwde
aas
or
push
sbb
retf
add
fidivr
ins
cmp
cmp
cmp
or
add
inc
dec
add
lds
cwde
leave
pop
jo
arpl
mov
(bad)
(bad)
loope
shr
test
cs
les
in
xor
add
inc
aad
jmp
mov
mov
or
fisub
test
pop
fs
test
pusha
pushf
push
or
aam
xor
jp
scas
jmp
push
jb
ret
jecxz
adc
inc
inc
scas
dec
fcom
and
iret
mov
lea
loopne
ror
add
fcom
sub
cmp
sub
xchg
cmp
les
inc
and
xchg
cmp
out
movs
jne
cmp
push
or
jae
rcl
pop
lds
mov
out
mov
test
out
int3
xor
jno
icebp
mov
mov
repz
outs
dec
sub
sbb
popf
xchg
sbb
add
mov
leave
pop
mov
shl
nop
jle
add
mov
(bad)
pop
xor
test
push
in
ds
nop
in
shl
movs
(bad)
in
mov
mov
or
sub
dec
lock
repz
lock
ja
outs
pop
inc
data16
sbb
add
stos
add
je
and
xchg
jg
dec
mov
jl
jno
lods
push
dec
mov
push
mov
ja
cmps
fwait
add
adc
outs
outs
aas
mov
mov
add
ds
loopne
ror
sti
jo
add
ss
lods
ret
call
stos
test
mov
xchg
or
pop
pushw
pop
push
mov
out
push
and
shr
or
mov
shr
mov
dec
(bad)
fstp
push
mov
mov
push
ret
retf
lds
push
ret
in
ret
pand
popf
or
ja
mov
add
sbb
jecxz
loopne
mov
mov
sbb
sub
xor
imul
pushf
repz
or
xor
push
jmp
dec
mov
fisubr
or
sbb
mov
cld
inc
cmps
ja
lock
add
leave
mov
cmps
dec
push
pfcmpgt
mov
shr
xor
movs
inc
mov
leave
in
bound
xor
fdiv
out
jno
xor
cmp
add
adc
(bad)
pmuludq
sub
movs
mov
push
ins
cmps
adc
mov
shl
ret
fcom
add
add
add
dec
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
jmp
mov
add
cmp
jb
cmp
ja
cmp
je
sub
cmp
ja
cmp
jne
mov
shr
rol
xchg
sub
add
mov
add
sub
mov
add
loop
sub
jg
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
or
inc
mov
add
add
