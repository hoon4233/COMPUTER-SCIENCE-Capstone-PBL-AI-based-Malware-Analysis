sbb
leave
std
cmp
mov
sbb
inc
mov
inc
dec
cmp
cmp
cmp
pop
sbb
and
cmp
adc
out
inc
mov
sub
push
retf
xchg
sbb
inc
mov
jae
xchg
xchg
outs
dec
cmp
ror
bound
add
icebp
cmp
cmp
ror
xor
iret
enter
fcom
mov
aaa
shl
sbb
(bad)
push
dec
popa
adc
mov
movs
push
icebp
sbb
aaa
mov
sbb
out
inc
mov
pop
cmp
mov
mov
xchg
push
cmp
loope
test
inc
cmp
rol
push
aaa
inc
mov
mov
mov
aaa
retf
hlt
loopne
pop
mov
mov
mov
ret
cmp
pushf
lahf
inc
mov
mov
int
sbb
out
mov
scas
cmp
mov
add
sbb
repz
jp
pop
aaa
adc
dec
mov
sbb
iret
mov
add
pop
aaa
mov
xchg
or
pop
aaa
retf
mov
add
dec
mov
pop
mov
pusha
add
retf
stos
fwait
out
mov
fimul
popa
adc
leave
mov
cmp
inc
leave
mov
mov
int
xchg
dec
dec
cmp
inc
leave
test
enter
inc
pop
cmp
daa
sub
(bad)
dec
out
shl
inc
jbe
daa
repnz
mov
pop
dec
pop
jae
inc
mov
repz
mov
sbb
inc
mov
sbb
inc
fist
fist
int3
sbb
shl
add
pop
sbb
test
lds
addr16
mov
add
xchg
pop
aaa
stos
mov
fdiv
cli
mov
aaa
inc
in
inc
imul
xor
aaa
aaa
mov
ss
mov
fsubr
mov
cmp
push
inc
pop
sbb
test
mov
aaa
pop
cmp
pop
mov
mov
lods
push
icebp
sbb
cmp
mov
mov
jge
adc
adc
adc
inc
mov
sbb
fdiv
sub
test
inc
fnstcw
add
sbb
outs
int
aaa
mov
mov
add
pop
aaa
mov
mov
adc
pop
aaa
stos
jmp
fsubr
jae
xchg
jp
loope
add
adc
sbb
inc
in
sar
mov
pop
mov
popa
adc
out
xchg
iret
mov
xchg
mov
add
enter
aaa
sub
jb
sub
cmp
cmp
fistp
mov
jno
outs
sub
out
adc
adc
mov
mov
add
enter
in
cmp
outs
aaa
inc
sub
inc
(bad)
mov
dec
stos
leave
mov
mov
mov
mov
sbb
sbb
test
mov
aaa
shl
test
push
sub
ins
mov
mov
adc
cmps
mov
loopne
test
retf
adc
sbb
mov
aaa
sub
out
dec
dec
ins
aas
stos
or
fidiv
inc
mov
fcomp
add
das
mov
lods
jb
mov
dec
lock
cmp
ins
retf
stos
sub
inc
mov
fcomp
pop
xor
inc
les
pop
sbb
test
push
xchg
jb
cmp
push
xor
imul
mov
loopne
mov
dec
dec
pop
pop
mov
aaa
sub
ins
aas
stos
jmp
fidivr
mov
sbb
sbb
aaa
test
ins
sub
mov
inc
push
dec
ins
retf
stos
cmc
bound
inc
cmp
enter
adc
mov
sbb
sbb
xor
xor
jbe
jb
mov
imul
out
mov
mov
cmp
retf
hlt
call
push
mov
pop
(bad)
hlt
loopne
inc
lds
inc
xor
inc
pop
jbe
cdq
cmp
retf
hlt
cld
mov
cmps
cmp
retf
hlt
loopne
inc
lds
jg
pop
retf
inc
dec
xchg
bound
cmps
xor
cmps
and
inc
inc
repnz
mov
out
ret
aaa
aaa
dec
and
aaa
mov
pop
daa
jnp
in
inc
inc
cmp
test
lock
inc
not
ja
lea
aaa
aaa
dec
and
xor
out
mov
jo
(bad)
mov
mov
into
jnp
in
ror
enter
enter
imul
push
mov
fistp
sbb
adc
dec
mov
push
jbe
retf
mov
add
(bad)
dec
out
mov
dec
sbb
mov
sar
ret
aaa
aaa
dec
and
xor
fidiv
inc
pop
cs
mov
mov
mov
inc
mov
enter
dec
test
popf
retf
mov
cwde
fidivr
mov
ja
xor
out
inc
cmp
ss
dec
out
sbb
shl
pop
cmp
mov
lods
dec
popa
adc
hlt
in
pop
cld
dec
mov
mov
aam
mov
mov
pop
push
dec
inc
mov
dec
dec
or
jp
mov
repnz
cwde
sar
shl
push
xchg
pushf
int
mov
pop
mov
jb
cmp
retf
hlt
lock
xchg
jb
cmp
sbb
in
rol
pop
or
xchg
push
jbe
retf
data16
stc
xor
sbb
shr
sbb
ror
retfw
jo
fld
scas
xor
retf
popa
inc
mov
retf
jno
outs
fs
mov
add
xchg
jb
ja
das
inc
cmp
retf
hlt
loopne
pop
inc
out
push
mov
hlt
in
sbb
shl
pop
cmp
mov
mov
ins
daa
leave
in
or
pop
dec
pop
jg
int3
xchg
jb
cmp
cmp
retf
mov
mov
shr
cmps
xor
loop
mov
push
cmp
or
jnp
ins
xor
pop
fcomp
and
ds
xchg
jb
cmp
retf
hlt
in
shl
xchg
jb
cmp
jae
inc
imul
push
dec
popa
adc
pop
fs
daa
xor
ins
sbb
lods
jne
dec
ins
cmp
out
sti
jne
out
je
dec
out
pop
dec
xchg
dec
dec
test
push
pop
aaa
adc
sub
mov
dec
pop
pusha
adc
icebp
retf
fwait
repz
inc
inc
loop
pusha
leave
in
adc
add
dec
sbb
retf
jbe
inc
dec
pop
pop
inc
inc
mov
icebp
sub
pop
aaa
inc
loop
enter
aaa
sub
sbb
inc
sbb
mov
adc
xor
sbb
mov
xchg
jb
cmp
push
pop
cmp
adc
dec
mov
pop
mov
mov
test
and
aaa
ss
sbb
test
pop
xor
dec
dec
aas
leave
mov
add
test
loopne
movs
cmp
retf
jbe
fnstenv
mov
push
pop
cmp
mov
xchg
dec
popa
adc
xor
popa
push
cmp
ss
mov
push
inc
mov
aaa
stos
or
inc
cmp
(bad)
adc
or
add
sbb
pusha
mov
push
cmp
jb
mov
jo
mov
fistp
mov
sub
sbb
retf
jb
test
pop
fisttp
ins
add
inc
fwait
test
sbb
dec
or
inc
mov
aaa
retf
jb
iret
mov
xchg
jb
cmp
push
cmp
jb
mov
fdiv
mov
out
sbb
neg
mov
push
sub
ins
mov
mov
inc
mov
icebp
xor
mov
mov
and
inc
xor
enter
inc
inc
xor
aaa
jecxz
lods
jne
mov
dec
xor
xchg
jb
adc
add
sbb
mov
dec
out
xor
sbb
ss
sbb
and
inc
cmp
sbb
mov
fdiv
cld
sbb
sub
aaa
inc
cmp
(bad)
mov
les
jecxz
sbb
sub
sbb
mov
dec
out
xchg
sbb
xor
aaa
stos
call
aaa
inc
or
aam
xor
enter
hlt
iret
hlt
in
addr16
hlt
adc
dec
dec
sub
hlt
in
aas
inc
sbb
(bad)
xchg
sbb
inc
xor
inc
mov
sbb
int
jne
dec
out
inc
lds
mov
or
mov
ds
fwait
adc
add
add
xchg
jb
xor
adc
mov
pop
inc
pop
sbb
mov
mov
adc
sbb
adc
mov
jb
loope
inc
mov
push
mov
(bad)
out
gs
leave
into
sbb
leave
mov
pusha
bound
pop
retf
ret
inc
int
inc
mov
div
jmp
adc
leave
hlt
call
and
sbb
inc
cmp
dec
jno
or
imul
enter
hlt
iret
xor
enter
xchg
ficom
pop
aaa
adc
and
aad
sbb
inc
cmp
dec
jno
and
mov
enter
jb
mov
inc
je
rcr
cmp
mov
sub
ins
cmp
sub
xchg
pop
mov
dec
xchg
jb
mov
dec
xor
enter
adc
adc
inc
cmp
push
call
hlt
pop
cmp
mov
mov
cmp
push
sahf
xchg
iret
inc
dec
xchg
lock
xchg
(bad)
retf
dec
xor
retf
jbe
push
mov
xor
inc
mov
sbb
cdq
les
lock
dec
sbb
inc
mov
(bad)
adc
repz
retf
inc
xor
or
loopne
aaa
rcl
xor
lea
dec
lea
retf
inc
cmp
iret
cmc
sbb
adc
mov
ss
mov
mov
sbb
test
(bad)
inc
out
dec
jno
cmp
retf
dec
xor
retf
jbe
dec
mov
in
jne
adc
mov
jg
inc
sti
sbb
fwait
push
mov
xchg
xchg
iret
jae
xchg
lock
push
xor
ins
xor
dec
cmp
jle
xor
gs
aam
aaa
ret
inc
push
inc
mov
mov
jb
pop
mov
dec
out
rcl
aaa
ror
aaa
ss
sub
sub
sbb
ss
push
mov
fistp
pop
inc
fistp
pop
inc
fstp
aaa
inc
icebp
jo
fdiv
sbb
ja
sbb
retf
hlt
loopne
inc
fistp
pop
inc
loope
jge
mov
mov
sar
ret
aaa
aaa
dec
xchg
cmc
sub
dec
enter
inc
mov
mov
aaa
iret
hlt
in
sub
mov
dec
lock
xor
daa
aaa
inc
dec
ins
iret
stos
movs
ja
inc
out
inc
ins
mov
mov
inc
mov
or
sbb
mov
mov
xor
aaa
sub
jne
pop
xchg
pop
inc
mov
mov
dec
out
iret
xor
enter
ffreep
dec
out
sbb
adc
inc
cmp
push
call
inc
inc
mov
mov
(bad)
jge
leave
mov
mov
addr16
xor
enter
fild
enter
mov
sub
ins
clc
ret
inc
jg
inc
mov
mov
dec
out
adc
test
dec
dec
jg
hlt
in
add
mov
mov
repz
loope
bsr
sbb
push
neg
aaa
dec
jno
mov
mov
fmul
mov
adc
adc
and
adc
cmp
push
call
cmp
stos
adc
inc
(bad)
add
out
stos
xchg
loop
mov
jbe
mov
mov
dec
out
push
adc
ret
jb
cs
mov
mov
dec
out
adc
test
dec
dec
dec
retf
hlt
in
cmp
push
ror
mov
sub
aaa
inc
xor
aaa
dec
xor
jb
sub
sti
jne
cmp
retf
out
stos
push
fdivr
retf
jbe
mov
mov
cmp
mov
lock
out
jg
out
inc
mov
sbb
cmc
xor
enter
addr16
xor
enter
pop
adc
pop
aaa
stos
sub
dec
push
popf
test
mov
xchg
add
out
mov
add
popf
icebp
inc
mov
(bad)
in
sbb
mov
xchg
mov
dec
out
retf
jb
sub
inc
(bad)
add
out
xchg
sbb
fistp
pop
mov
aaa
iret
or
enter
fbstp
out
shl
mov
mov
out
inc
mov
aaa
sub
sbb
adc
stos
mov
fdivr
jg
out
inc
lds
pop
inc
fldenv
mov
pop
call
repz
mov
enter
cmp
mov
mov
sub
jne
(bad)
add
out
xchg
sbb
fistp
pop
sti
push
pop
aaa
iret
or
enter
fucomip
inc
out
shl
mov
mov
out
inc
mov
aaa
ret
inc
jmp
adc
jne
(bad)
add
out
xchg
sbb
fistp
pop
sti
push
pop
aaa
iret
or
enter
fbld
out
shl
mov
mov
out
inc
mov
aaa
sub
sbb
adc
stos
lock
enter
cmp
out
inc
lds
lock
sbb
push
pop
aaa
sub
mov
ret
fwait
repz
mov
enter
cmp
mov
mov
ss
cli
jne
(bad)
add
out
xchg
sbb
fistp
pop
sti
push
pop
aaa
iret
or
enter
fistp
jne
or
lods
jb
sub
cli
jne
cmp
retf
out
stos
or
enter
cmp
out
inc
lds
lock
repz
ja
sbb
mov
and
sbb
mov
dec
out
test
add
dec
xchg
add
sbb
xor
aaa
stos
fwait
sbb
push
call
leave
mov
dec
out
adc
and
adc
mov
sbb
(bad)
mov
xor
enter
mov
retf
hlt
in
call
retf
inc
mov
sbb
mov
out
jae
xchg
hlt
rcl
mov
or
leave
mov
mov
aaa
ret
inc
xchg
inc
mov
lock
sbb
leave
mov
add
leave
mov
cmp
scas
mov
xor
enter
mov
mov
out
mov
stos
daa
aaa
inc
cmp
jecxz
dec
out
sub
sti
jne
cmp
addr16
mov
and
sbb
inc
cmp
dec
jno
mov
mov
aaa
iret
xor
enter
mov
mov
es
xchg
jb
cmp
push
call
cmp
movs
sbb
inc
cmp
fistp
xor
enter
mov
retf
hlt
in
add
ficom
xor
enter
mov
mov
out
mov
imul
ror
aaa
dec
xor
xor
mov
out
mov
xchg
mov
dec
out
retf
jb
mov
dec
out
adc
popf
fistp
mov
pusha
data16
dec
jno
mov
mov
aaa
cli
jmp
mov
(bad)
mov
cmp
mov
retf
out
stos
fnsave
inc
xor
cmp
adc
enter
ficom
sbb
sub
sbb
or
mov
mov
repz
mov
mov
mov
movs
jle
(bad)
and
leave
mov
pop
out
mov
dec
out
(bad)
adc
leave
mov
dec
out
rcr
movs
or
inc
mov
xchg
iret
add
enter
fist
dec
mov
xchg
mov
cmp
enter
jb
xor
ret
sbb
cmp
mov
sbb
leave
mov
dec
out
adc
cwde
aam
mov
mov
dec
out
adc
and
push
mov
aaa
inc
mov
jb
xor
cmp
mov
cmp
mov
mov
dec
out
adc
and
adc
or
inc
mov
aam
xor
enter
hlt
ror
aaa
dec
xor
xor
out
dec
out
inc
pop
lock
mov
aaa
stos
popf
je
inc
call
xchg
mov
dec
out
retf
jb
lock
sbb
cmp
mov
mov
dec
out
rcr
movs
or
inc
mov
xchg
iret
add
enter
fist
dec
mov
xchg
mov
dec
out
adc
lds
push
push
mov
cmp
mov
cmp
leave
mov
dec
out
adc
push
mov
dec
out
adc
and
push
mov
aaa
inc
mov
jb
mov
sbb
inc
xor
aaa
dec
xor
xchg
mov
dec
out
adc
sbb
test
mov
leave
mov
pusha
bound
pop
retf
cli
and
inc
inc
sti
mov
mov
dec
sbb
(bad)
push
aaa
inc
xlat
fwait
mov
dec
out
dec
mov
sbb
mov
mov
mov
aaa
iret
xor
enter
enter
leave
mov
dec
fwait
repz
cmp
jo
or
enter
les
or
enter
cmp
sbb
inc
jbe
(bad)
mov
mov
pop
inc
dec
lods
fwait
mov
dec
out
mov
repz
mov
mov
mov
movs
xchg
out
imul
iret
cmp
enter
(bad)
mov
mov
into
retf
xor
enter
adc
in
iret
xor
enter
mov
mov
dec
out
adc
pop
inc
mov
repz
fistp
(bad)
dec
out
mov
repz
mov
mov
mov
mov
xchg
hlt
ror
mov
cmp
addr16
and
push
inc
mov
aam
xor
enter
hlt
mov
dec
xchg
mov
dec
out
jnp
mov
mov
dec
out
leave
xor
enter
mov
leave
xor
enter
mov
mov
dec
xchg
mov
dec
out
jnp
hlt
enter
mov
dec
out
ror
mov
ja
retf
out
retf
imul
mov
dec
out
adc
sub
adc
fwait
mov
lds
(bad)
popa
out
mov
out
(bad)
dec
fstp
aaa
mov
xchg
mov
dec
out
retf
jb
mov
lds
(bad)
gs
mov
out
mov
mov
out
mov
mov
out
(bad)
push
lods
sbb
mov
xchg
mov
dec
out
retf
jb
mov
dec
out
adc
sub
adc
icebp
das
mov
out
sbb
shl
pop
cmp
pop
mov
mov
lods
push
icebp
sbb
mov
aaa
inc
loope
mov
inc
xor
das
adc
dec
mov
cmps
loop
cwde
sbb
gs
dec
out
ror
hlt
clc
mov
cmps
jbe
retf
inc
mov
aaa
ret
hlt
cld
jo
mov
pop
sbb
jno
inc
xor
xor
xor
aaa
aaa
outs
repz
dec
sub
inc
inc
jge
retf
hlt
les
jbe
retf
mov
xchg
fbstp
mov
aaa
inc
cmp
cmp
ror
push
cmp
das
imul
enter
push
pop
inc
jl
inc
mov
aaa
sar
xor
xchg
rcl
out
mov
(bad)
retf
dec
sub
retf
jbe
mov
repz
fistp
pop
ins
xchg
pop
aaa
sub
jle
inc
cmp
popa
stos
pop
jl
inc
or
sbb
mov
ror
hlt
in
test
inc
inc
pop
add
adc
inc
aas
sti
jmp
rcr
mov
fxch
inc
lds
addr16
ja
mov
mov
mov
jo
adc
pop
aaa
inc
xor
aaa
rcl
inc
pop
test
mov
aaa
inc
xor
loop
mov
lock
cmc
xor
cmp
jno
mov
ja
lock
hlt
mov
scas
add
lahf
xor
inc
mov
cmp
int
aaa
inc
dec
cmp
rol
add
sub
ins
add
sub
ret
cmp
jno
mov
mov
mov
jp
pop
aaa
stos
stc
sbb
inc
xor
ja
mov
cmp
mov
aaa
inc
inc
sbb
ss
sbb
inc
mov
enter
jbe
xor
and
mov
ficom
sbb
mov
mov
xor
sbb
inc
lds
(bad)
sbb
ss
imul
or
cmp
retf
hlt
call
das
(bad)
sbb
loop
xor
mov
sbb
test
ins
xor
icebp
and
sbb
inc
xor
xor
inc
sbb
aas
ss
imul
xor
aas
retf
jns
dec
jo
ja
lock
stos
push
out
mov
lock
ss
imul
xor
ss
jo
sub
scas
sub
aaa
inc
mov
aaa
stos
add
sbb
xor
stos
sub
aaa
inc
cmp
push
mov
fnstenv
inc
mov
xor
sub
inc
mov
aaa
stos
cmp
enter
inc
div
sbb
inc
mov
push
mov
fnstenv
inc
icebp
icebp
cmp
scas
sub
aaa
inc
mov
test
mov
inc
xchg
test
add
scas
mov
aaa
jecxz
test
xor
xor
add
sbb
inc
mov
cmps
add
sbb
inc
mov
test
mov
lea
sbb
inc
lds
(bad)
sbb
inc
or
cmp
out
(bad)
retf
hlt
hlt
mov
(bad)
sbb
and
aaa
inc
sbb
popf
mov
aaa
ret
test
mov
(bad)
and
xchg
jb
cmp
mov
loopne
mov
xor
adc
dec
jno
arpl
dec
adc
dec
cmp
ror
pop
aaa
jg
sbb
inc
int
or
mov
adc
jno
jne
xor
ja
xchg
xor
add
mov
ss
mov
enter
jbe
xor
data16
mov
test
repz
icebp
imul
mov
or
div
sbb
inc
test
pop
mov
mov
aaa
retf
inc
pop
mov
add
xchg
jb
cmp
cmp
mov
xchg
add
sbb
inc
sar
retf
cmp
hlt
out
or
xor
cwde
dec
mov
ins
xor
mov
cmp
cmp
retf
jo
add
mov
inc
dec
adc
mov
xor
pop
aaa
ror
push
xor
inc
les
inc
push
inc
add
sbb
xor
mov
ins
adc
mov
cwde
mov
cmp
jno
mov
rcr
lock
hlt
mov
stos
add
pop
rol
out
xor
mov
ins
xor
mov
cmps
add
mov
mov
das
retf
inc
pop
mov
inc
cmp
mov
add
pop
aaa
jecxz
mov
mov
inc
cdq
xor
dec
jle
sbb
mov
das
retf
inc
pop
mov
inc
cmp
mov
add
pop
aaa
jecxz
xchg
mov
inc
cdq
dec
sbb
mov
inc
and
jae
pop
fadd
lds
sbb
js
(bad)
retf
push
dec
addr16
cmps
sub
pop
pop
(bad)
(bad)
sbb
mov
xchg
jb
cmp
enter
jne
fst
lea
mov
jns
mov
mov
add
sbb
loope
mov
lea
mov
fisttp
rcr
aaa
loope
xchg
or
gs
mov
ror
hlt
loopne
test
and
fild
sbb
loope
test
fst
add
sbb
loope
xchg
fld
add
sbb
loope
mov
inc
pop
jo
adc
mov
mov
or
pop
(bad)
or
iret
hlt
mov
mov
mov
jb
test
shl
cmp
mov
pop
sbb
mov
pop
ret
add
loopne
ret
pop
jl
inc
mov
push
mov
add
enter
pop
aaa
inc
inc
sti
mov
rcl
aaa
test
shl
mov
lock
ins
sbb
inc
mov
xor
or
retf
hlt
clc
enter
jne
jbe
xchg
sbb
ret
jb
sub
div
jge
inc
cmp
mov
(bad)
enter
sbb
mov
xchg
jb
loope
aaa
inc
mov
mov
push
inc
test
xor
xlat
jle
sbb
inc
cmp
xchg
adc
sbb
fistp
stos
xor
inc
cmp
xchg
adc
xchg
iret
hlt
test
sub
sbb
inc
lds
aaa
adc
sub
out
cmps
pop
inc
push
inc
mov
fdiv
(bad)
cld
fistp
mov
add
xchg
jb
loope
inc
repnz
rcl
dec
or
mov
ret
inc
ror
mov
imul
push
fistp
pop
retf
xor
das
adc
hlt
in
sbb
jb
cmp
leave
cld
or
mov
sub
retf
in
mov
sub
loopne
iret
hlt
lock
cmp
ret
adc
out
aaa
mov
pop
aaa
leave
hlt
in
fmul
jl
mov
push
mov
hlt
in
and
push
pusha
adc
sbb
mov
mov
inc
dec
(bad)
enter
jbe
out
inc
hlt
pop
cmp
mov
mov
ins
aas
leave
in
adc
inc
lds
hlt
mov
or
test
add
mov
aaa
aaa
cdq
pop
add
mov
aaa
aaa
lods
pop
add
mov
aaa
aaa
mov
sbb
mov
xor
xchg
jb
cmp
xor
cmp
retf
icebp
pop
dec
sbb
hlt
hlt
out
hlt
mov
push
(bad)
repz
hlt
movs
es
cmp
mov
push
cmps
and
dec
xor
aaa
inc
mov
int
pop
sbb
hlt
movs
push
push
add
mov
dec
pop
or
jnp
ins
pop
retf
dec
fild
scas
xor
aaa
inc
mov
imul
pop
mov
add
sbb
dec
pop
dec
enter
mov
add
inc
aaa
inc
cmp
sar
pop
mov
sbb
rcr
xchg
mov
iret
rcr
pop
inc
xchg
jb
cmp
xor
mov
mov
mov
bound
mov
aaa
test
dec
jae
push
xor
nop
or
pop
mov
dec
sbb
jne
out
mov
mov
or
arpl
dec
push
mov
mov
inc
or
loopne
stos
mov
or
ja
dec
fild
and
inc
les
xor
sbb
jle
ins
and
inc
lds
mov
ret
adc
cmps
xchg
out
inc
hlt
or
test
fwait
test
sbb
ret
xor
or
and
inc
les
xor
xor
aaa
loopne
iret
rcr
jle
sbb
cmp
mov
mov
add
sbb
mov
aaa
inc
mov
sbb
jns
mov
push
mov
int
pop
sbb
xchg
mov
mov
mov
jb
cmp
iret
cmc
sbb
inc
dec
fild
dec
iret
retf
movs
sbb
mov
(bad)
sbb
cmp
jg
lea
ss
clc
xchg
iret
rcr
jle
sbb
cmp
mov
mov
or
add
dec
fild
scas
xor
inc
dec
mov
aaa
inc
mov
xor
sbb
inc
les
(bad)
jmp
push
mov
repnz
mov
ss
mov
jo
dec
sbb
inc
mov
mov
dec
out
sbb
in
rol
pop
adc
adc
out
ss
adc
pop
and
inc
xor
inc
les
jo
dec
lock
mov
mov
lock
mov
and
outs
pop
sbb
inc
mov
inc
call
icebp
dec
dec
sbb
cmp
in
mul
xchg
mov
add
mov
xor
out
ss
sbb
jg
sbb
inc
lds
or
xchg
fwait
push
mov
imul
xor
movs
push
enter
xor
icebp
sbb
pop
dec
push
test
cmp
iret
cmc
pop
ss
mov
jb
cmp
ss
cwde
enter
ret
cmp
iret
cmc
push
ss
in
mov
shl
sbb
jns
mov
xchg
cmp
ss
mov
mov
mov
jb
ja
add
cmp
sub
dec
iret
retf
mov
pop
aaa
sar
mov
mov
mov
mov
jb
ja
fmulp
mov
ss
mov
fs
scas
bound
cli
xor
(bad)
repz
ss
out
shl
sbb
shl
pop
cmp
(bad)
push
xchg
sbb
stos
jne
aaa
inc
loop
pusha
stos
dec
loope
mov
dec
out
stos
add
inc
mov
aaa
inc
xor
test
call
mov
xor
add
movs
aam
dec
out
aaa
mov
test
and
add
mov
pop
popf
les
mov
mov
mov
inc
inc
pop
inc
cmp
and
fdivr
outs
out
sub
mov
add
sbb
leave
and
jmp
xlat
loope
jbe
mov
out
sub
mov
add
xchg
mov
mov
lock
lahf
call
mov
xor
mov
xor
ss
pop
popf
les
scas
cwde
or
mov
mov
dec
out
test
fdivr
and
fdivr
xor
bound
pop
aaa
inc
mov
sbb
hlt
and
fdivr
cmp
adc
pop
aaa
retf
and
call
ss
sti
call
(bad)
sbb
inc
pop
inc
into
mov
outs
out
mov
mov
mov
retf
(bad)
(bad)
push
jo
and
imul
enter
fsub
sbb
inc
mov
(bad)
call
fwait
rol
xor
lods
dec
out
ret
jb
daa
inc
mov
stos
mov
out
xor
xchg
mov
outs
out
adc
outs
inc
mov
xor
add
hlt
fdivr
mov
aaa
sub
aaa
inc
dec
lods
fld
imul
int
dec
fwait
repz
cmp
dec
jno
push
rcl
mov
xor
enter
push
mov
mov
aad
mov
retf
leave
test
cmp
test
ret
dec
sbb
inc
mov
jmp
push
retf
imul
enter
mov
mov
aaa
inc
xor
aaa
mov
sbb
dec
ins
retf
stos
test
cdq
mov
pop
out
inc
mov
aaa
leave
xor
jmp
mov
pop
test
mov
lds
popf
dec
out
jae
sbb
stos
icebp
sbb
inc
mov
out
adc
push
movs
cmp
mov
out
rcl
mov
inc
test
retf
push
stc
xor
dec
mov
(bad)
enter
ret
lods
dec
out
mov
pop
sbb
mov
mov
mov
mov
mov
pop
out
ret
or
fdivr
mov
cmp
cwde
mov
les
sbb
pop
aaa
stos
adc
inc
cmp
mov
jle
sbb
retf
and
jmp
cmp
(bad)
enter
xchg
pushf
dec
out
xlat
sub
enter
sub
xchg
mov
outs
out
leave
xor
jmp
(bad)
outs
out
inc
mov
mov
outs
out
retf
xor
call
xchg
outs
out
retf
xor
call
iret
xor
call
imul
enter
outs
inc
mov
mov
outs
out
jnp
movs
call
leave
xor
call
imul
enter
call
mov
(bad)
fistp
mov
pop
sub
out
sbb
leave
and
call
dec
jecxz
cmp
sbb
xlat
sbb
or
lds
mov
out
adc
iret
ins
(bad)
enter
jecxz
dec
out
dec
movs
sub
xlat
inc
test
leave
movs
or
mov
mov
mov
fbstp
sbb
retf
xor
call
dec
xor
ss
mov
dec
dec
mov
mov
mov
aaa
leave
xor
fdivr
mov
aaa
inc
mov
cmp
int3
adc
dec
xor
icebp
sub
mov
mov
mov
mov
aaa
rcr
push
mov
mov
mov
dec
out
rcr
mov
push
(bad)
enter
jg
mov
inc
push
call
cmovb
push
mov
ret
inc
push
cmp
mov
mov
cmovb
adc
ret
inc
dec
push
cli
mov
mov
adc
jo
xor
cwde
dec
out
(bad)
adc
enter
add
and
mov
ss
mov
mov
dec
xchg
jae
mov
mov
outs
out
test
mov
out
inc
dec
xor
enter
add
dec
out
stos
xor
ss
pop
lea
mov
mov
ret
ja
aaa
ret
ss
mov
aaa
aaa
cdq
cwde
or
sbb
inc
mov
sub
lea
aaa
aaa
movs
cwde
or
sbb
inc
mov
cmp
inc
mov
aaa
ss
fmul
outs
out
dec
jno
xchg
ret
ss
pop
add
loope
sbb
int3
call
mov
mov
out
inc
lds
out
test
mov
out
adc
fwait
jo
xor
cmovge
enter
es
dec
cdq
mov
mov
aaa
xor
xor
add
in
mov
dec
out
dec
pop
popf
les
scas
cwde
or
mov
mov
dec
out
sbb
in
rol
pop
pop
fs
xchg
push
jbe
iret
sar
push
pop
cli
movs
sub
inc
inc
jge
retf
hlt
aam
pop
dec
fidiv
mov
dec
movs
cmp
inc
push
sbb
mov
xchg
jb
cmp
push
cmp
iret
iret
int3
sar
or
aaa
inc
mov
xchg
iret
int3
leave
mov
inc
or
aaa
inc
mov
xchg
ret
inc
dec
repnz
jb
cmp
push
cmp
iret
ret
ss
out
test
pop
dec
leave
js
or
jb
mov
cmp
ret
xor
pop
mov
ja
retf
mov
xor
pop
dec
retf
or
aaa
inc
mov
jb
mov
add
mov
dec
das
or
mov
push
mov
hlt
loopne
hlt
repnz
xor
inc
inc
xor
inc
mov
fidiv
lds
mov
mov
ror
inc
xor
inc
mov
pop
ss
mov
mov
iret
inc
les
pop
dec
sbb
hlt
repnz
xor
aaa
inc
les
pop
dec
sbb
pop
dec
xor
inc
mov
add
ins
cmp
aaa
mov
jb
mov
jb
mov
dec
mov
dec
out
test
in
test
pop
dec
retf
js
or
jb
mov
cmp
ret
xor
push
xchg
jb
cmp
retf
hlt
fadd
daa
jns
jb
cmp
dec
pop
sbb
shl
jb
mov
add
js
(bad)
retf
push
dec
fs
xchg
inc
dec
push
mov
ins
sbb
sbb
movs
cmp
retf
jbe
enter
popa
sub
sbb
add
and
inc
(bad)
pop
push
mov
pop
ja
add
repz
pop
inc
imul
push
mov
fisttp
sbb
adc
cmps
cwde
sub
sbb
mov
xchg
mov
outs
out
retf
jbe
inc
dec
out
inc
dec
cmp
aaa
mov
mov
aaa
inc
or
ror
xor
call
iret
xor
xlat
mov
mov
aaa
shl
mov
loopne
mov
js
(bad)
retf
push
dec
pusha
std
and
inc
or
inc
mov
ror
hlt
in
test
sbb
dec
ins
aas
sub
sbb
jb
mov
adc
dec
mov
repnz
ret
pop
sbb
inc
mov
aaa
sub
sbb
inc
fistp
pop
inc
fistp
pop
inc
mov
mov
les
fbstp
ja
leave
mov
mov
pop
cmp
xchg
sbb
inc
sbb
adc
sbb
ins
dec
aaa
inc
cmp
mov
mov
and
xchg
jb
or
ror
hlt
in
mov
aas
mov
pop
cmp
hlt
call
iret
retf
hlt
call
enter
(bad)
jecxz
aaa
adc
mov
iret
jae
xchg
lock
hlt
in
sbb
shl
pop
cmp
data16
dec
pusha
std
aad
std
push
xor
fadd
sbb
fstp
xor
mov
aaa
sub
ins
aas
stos
std
dec
aaa
inc
cmp
mov
dec
ins
xor
repz
ret
inc
xchg
jae
mov
xor
adc
dec
gs
mov
jb
cmp
mov
dec
pop
mov
mov
inc
mov
cmp
retf
adc
out
dec
out
test
inc
cmp
retf
adc
sbb
push
pop
aaa
adc
xchg
gs
mov
fild
sbb
cli
arpl
aaa
inc
inc
(bad)
mov
mov
mov
aaa
sbb
in
rcl
loope
pusha
std
cmp
out
pop
jle
sbb
fstp
xor
mov
aaa
sub
ins
aas
stos
add
inc
cmp
mov
test
out
aaa
mov
imul
mov
aaa
adc
scas
inc
mov
aaa
iret
hlt
in
mov
mov
sbb
adc
mov
inc
mov
or
mov
shl
sub
add
inc
inc
pop
or
xchg
inc
dec
jbe
retf
mov
in
dec
mov
push
cdq
cmp
fadd
scas
xor
jo
int3
adc
mov
out
dec
fstp
add
sbb
jae
bound
mov
add
xchg
pop
add
pop
aaa
stos
lods
dec
aaa
inc
xor
aas
add
sub
test
mov
xor
cmp
inc
dec
pop
push
pop
aaa
stos
inc
dec
aaa
inc
xor
aas
leave
hlt
in
pop
dec
xchg
jb
inc
jge
retf
hlt
call
imul
push
fist
dec
pusha
leave
in
adc
stos
add
retf
retf
hlt
loopne
pop
inc
out
push
mov
hlt
in
jns
pop
aaa
stos
sbb
inc
call
pop
add
pop
aaa
stos
and
fdivr
add
fnstcw
aad
mov
mov
mov
outs
ret
fsub
and
sbb
jmp
scas
or
(bad)
test
sbb
mov
jb
lock
push
sbb
rcl
aaa
rcl
aaa
rcl
aaa
iret
int3
jmp
or
aaa
inc
mov
xchg
ret
inc
shr
mov
dec
push
mov
xor
pop
aad
mov
jb
mov
pop
enter
out
mov
xchg
jb
cmp
cmp
hlt
out
hlt
cmc
sbb
ss
pop
cwde
dec
mov
fdiv
xor
ret
aaa
aaa
mov
shl
xchg
jb
mov
pop
leave
test
dec
pop
add
scas
sbb
xor
inc
les
das
pop
sbb
xor
gs
inc
(bad)
iret
pop
call
xchg
cmp
mov
inc
cmp
dec
push
or
xchg
fcomp
pop
inc
mov
cmp
in
cmp
jae
jb
cmp
retf
jns
jb
mov
stc
mov
cmps
xor
or
mov
mov
add
scas
gs
cwde
enter
cli
cmp
jae
jb
cmp
dec
push
pop
aas
leave
in
cmp
jecxz
push
xchg
mov
ror
hlt
cld
push
and
mov
push
icebp
sbb
inc
and
cmps
(bad)
jno
cmps
shl
ins
sbb
and
cmps
shl
pop
cmps
shl
mov
shl
pop
cmps
shl
mov
shl
and
shl
mov
shl
mov
cmps
stc
popa
sti
jne
and
cmps
(bad)
jno
cmps
shl
ins
sub
and
cmps
shl
fwait
test
mov
shl
mov
shl
jg
retf
mov
mov
stos
mov
aaa
inc
jmp
mov
call
pushf
dec
or
mov
mov
sar
push
xor
and
cmps
rol
mov
mov
cmps
shl
mov
and
cmp
and
cmps
rol
shl
shl
mov
push
dec
out
push
icebp
sbb
icebp
sbb
add
aaa
repnz
mov
test
hlt
and
mov
push
icebp
sbb
shl
inc
cmps
shl
mov
shl
ins
shl
mov
inc
and
cmps
imul
shl
sub
shl
mov
shl
xchg
call
and
cmps
shl
mov
sbb
mov
dec
add
cmps
jae
mov
shl
mov
shl
mov
cmps
ror
shl
ins
shl
mov
inc
and
cmps
imul
shl
sub
shl
mov
shl
xchg
call
and
cmps
shl
mov
sbb
mov
push
test
cmps
jae
mov
shl
mov
shl
jns
shl
mov
mov
cmp
mov
xchg
dec
popa
adc
hlt
adc
retf
hlt
adc
pop
dec
fs
ror
pop
mov
sub
pop
dec
xchg
jb
cmp
mov
hlt
mov
mov
mov
fisub
imul
sar
dec
int3
leave
hlt
in
xor
dec
mov
hlt
loop
test
mov
mov
cmp
mov
aaa
dec
pop
dec
int3
retf
dec
xor
fild
mov
fild
mov
enter
xor
or
cmp
mov
ja
pop
or
hlt
cld
loop
mov
or
hlt
mov
or
mov
pop
cmp
mov
xor
retf
mov
daa
dec
xchg
jb
cmp
sub
sbb
pop
(bad)
sbb
dec
pop
pop
int3
adc
shl
loope
jb
mov
enter
push
aaa
inc
fistp
mov
call
aaa
inc
xor
adc
hlt
in
add
icebp
inc
xlat
out
mov
scas
jb
stc
and
dec
xor
enter
imul
push
fstp
dec
pusha
cld
inc
add
movs
cmp
retf
ja
cmp
mov
not
cmp
shr
fxch
pop
cwde
sar
retf
mov
pop
imul
inc
inc
sbb
or
clc
addr16
dec
out
shl
cmp
scas
dec
lods
jo
xor
push
sbb
mov
loopne
cmp
adc
jo
xor
push
sbb
push
sbb
jmp
ins
sub
out
ror
hlt
int3
mov
inc
cmp
xor
jne
jne
mov
fist
pop
pop
jns
mov
repz
adc
mov
mov
jb
pop
movsx
movs
enter
sub
retf
inc
sbb
retf
ja
jb
mov
(bad)
push
sbb
jge
jne
mov
xor
jecxz
repz
retf
inc
sbb
retf
ja
out
inc
hlt
loopne
push
ins
movs
jne
or
pop
dec
sbb
xchg
or
aaa
inc
mov
mov
mov
jb
ret
rcr
cld
sbb
retf
hlt
enter
sbb
leave
int3
enter
xchg
cmc
dec
push
retf
mov
enter
lock
cmpxchg
mov
cmpxchg
mov
mov
arpl
aad
mov
movs
jne
xor
pop
pop
mov
pop
add
mov
out
inc
mov
mov
mov
fbstp
cld
sbb
shl
mov
aaa
retf
hlt
in
fcomp
call
dec
ja
out
inc
hlt
in
mov
inc
or
pop
inc
sbb
mov
aaa
inc
mov
mov
mov
jb
ret
into
xchg
xchg
or
aaa
retf
hlt
call
ss
fidivr
leave
movs
les
shl
xor
movs
jne
mov
out
push
sbb
pop
inc
push
retf
outs
sbb
xchg
aaa
dec
pop
dec
fcom
push
movs
jne
cmp
mov
inc
mov
mov
mov
adc
movs
(bad)
sar
repz
cmp
retf
hlt
sar
inc
les
das
pop
add
cmc
hlt
lock
imul
aaa
adc
retf
mov
fistp
pop
inc
fistp
pop
inc
fistp
pop
inc
mov
ja
les
(bad)
clc
sbb
retf
hlt
cld
pop
inc
cmp
fist
dec
ins
xlat
adc
shr
xor
(bad)
and
lock
stos
std
push
aaa
inc
sbb
sbb
in
rol
pop
or
inc
mov
popa
adc
loope
fldenv
sbb
ret
mov
add
mov
inc
mov
sub
inc
sub
retf
ja
ins
push
mov
lea
cmp
shr
pop
push
mov
enter
fwait
lock
loop
xlat
dec
out
mov
pop
fild
sbb
dec
pop
gs
push
push
loopne
div
jo
sub
xchg
out
cmp
mov
rcl
enter
enter
enter
cld
test
enter
fbstp
jae
cmc
inc
les
icebp
(bad)
mov
enter
mov
dec
out
jo
call
fstp
cmp
enter
sub
mov
(bad)
add
out
adc
jl
mov
aaa
sub
jb
sub
popf
int3
mov
fst
inc
cmp
mov
test
aas
cli
cmp
jne
loope
mov
inc
cmp
(bad)
mov
mov
aaa
inc
fchs
mov
mov
xor
push
aaa
inc
dec
lods
ret
mov
neg
aaa
mov
mov
pop
lahf
push
pop
aaa
iret
xor
leave
mov
cli
sbb
retf
inc
xor
retf
ja
mov
dec
out
adc
(bad)
(bad)
add
out
adc
sbb
inc
xor
jae
mov
enter
jne
(bad)
(bad)
add
sbb
mov
mov
fbld
sbb
adc
je
add
sbb
mov
mov
mov
fsub
inc
inc
bound
inc
imul
push
dec
addr16
xchg
inc
push
push
sbb
hlt
cdq
fdiv
clc
sbb
mov
mov
lock
sbb
rcl
aaa
iret
hlt
loopne
iret
hlt
in
sub
sbb
fistp
pop
inc
dec
ins
cmp
clc
sbb
retf
dec
sub
retf
jbe
mov
out
ret
aaa
aaa
dec
xchg
jb
dec
ins
iret
adc
sbb
dec
ins
daa
mov
clc
sbb
mov
clc
sbb
sbb
cmp
adc
ja
mov
xchg
jb
cmp
enter
cdq
add
loope
inc
push
dec
ins
daa
mov
mov
sbb
in
rcl
nop
cdq
fsub
cdq
sbb
sub
or
mov
mov
push
aaa
inc
mov
repz
out
inc
hlt
pop
cmp
data16
cmps
aam
(bad)
cmp
inc
cmp
iret
adc
pop
inc
mov
aaa
sub
out
dec
dec
ins
aas
stos
mov
aaa
inc
mov
fcomp
jne
ins
das
mov
lods
jb
mov
dec
lock
add
enter
aad
mov
push
sbb
mov
dec
ins
retf
stos
popa
push
aaa
inc
sbb
sbb
push
fist
dec
mov
pop
xlat
xchg
jb
push
cmp
iret
inc
dec
xchg
lock
loopne
test
aaa
inc
mov
aaa
mov
mov
sbb
add
push
sbb
pop
test
jb
mov
dec
lock
add
enter
push
or
bswap
aaa
dec
lock
or
add
dec
cmp
shl
inc
imul
push
jno
clc
fst
lock
popa
pop
mov
inc
mov
fisttp
neg
aaa
retf
hlt
loopne
mov
dec
aaa
inc
adc
loopne
mov
jb
les
push
xor
ja
mov
lock
mov
pop
inc
fistp
pop
inc
fnstcw
add
sbb
jbe
dec
inc
mov
div
mov
imul
pop
aaa
stos
inc
pop
aaa
inc
cmp
test
les
aaa
sbb
scas
jo
and
jmp
mov
push
sar
jne
cmp
and
dec
pusha
leave
les
mov
or
jb
ins
inc
mov
dec
dec
pop
and
jae
pop
cmp
dec
xor
adc
jmp
pop
pop
jg
mov
repz
cmp
sbb
mov
sbb
inc
cmp
mov
mov
dec
retf
imul
mov
(bad)
sbb
xor
inc
lds
jle
sbb
cmp
jg
lea
cmp
push
ja
aaa
retf
imul
mov
add
mov
adc
jb
mov
lock
imul
enter
mov
or
repnz
retf
imul
mov
inc
dec
repz
repz
imul
mov
mov
mov
adc
dec
mov
mov
cs
jp
pop
(bad)
push
lahf
sbb
adc
jae
mov
jb
cmp
out
xor
aas
adc
cmc
sbb
retf
hlt
in
mov
imul
mov
out
fcom
xor
call
cmp
rol
inc
sbb
dec
push
and
pop
leave
inc
mov
jg
push
gs
dec
pop
and
retf
dec
mov
scas
mov
xchg
loope
ja
popa
retf
dec
mov
lea
push
(bad)
inc
cmp
retf
data16
lock
xchg
dec
mov
jo
mov
movs
pop
aaa
inc
xor
and
pop
leave
dec
push
pop
leave
jns
loopne
in
cmp
test
cmp
cmp
(bad)
sbb
in
sar
std
sbb
inc
mov
popa
adc
cmps
xchg
out
inc
imul
mov
pop
out
mov
dec
out
adc
cmp
xor
aas
retf
ja
hlt
retf
aaa
dec
inc
ins
xor
icebp
push
dec
mov
mov
dec
out
mov
pop
sub
sub
stos
xchg
adc
inc
dec
ins
and
cmp
(bad)
pop
mov
aaa
mov
loopne
mov
dec
in
leave
or
enter
mov
cmp
mov
inc
mov
pop
add
jne
mov
mov
dec
out
cli
ins
dec
aaa
inc
inc
sti
mov
mov
mov
sbb
jnp
sbb
cli
(bad)
dec
aaa
inc
inc
sti
mov
mov
mov
in
retf
jo
(bad)
mov
mov
into
retf
jbe
aas
leave
and
enter
int
pop
retf
sti
mov
(bad)
add
pop
jno
mov
repz
fst
add
out
stos
popa
pop
aaa
inc
xor
aas
stos
add
inc
or
aaa
inc
mov
sar
jo
mov
dec
out
mov
mov
repz
pop
xchg
jb
mov
cmp
mov
fwait
int
int3
cmp
cmp
sbb
sti
rcr
aaa
inc
sub
into
adc
movs
retf
mov
(bad)
stc
jne
out
inc
pop
mov
mov
mov
xchg
hlt
stos
loope
aaa
inc
or
aaa
inc
mov
sar
jo
mov
dec
out
mov
mov
repz
fldcw
(bad)
add
out
stos
in
pop
aaa
inc
xor
aas
stos
test
adc
inc
mov
sar
jo
mov
dec
out
mov
mov
repz
pop
jmp
inc
mov
cmp
mov
fwait
int
int3
cmp
mov
rcr
aaa
inc
sub
into
adc
movs
retf
mov
(bad)
stc
jne
out
jmp
xchg
or
add
out
adc
cmp
add
sbb
shl
call
jae
mov
cmp
mov
fwait
int
int3
or
push
pop
aaa
mov
dec
lock
mov
mov
mov
sbb
test
jae
mov
repz
pop
jnp
inc
mov
cmp
mov
fwait
int
int3
or
push
pop
aaa
mov
dec
lock
mov
mov
mov
sbb
test
jae
mov
repz
xor
xor
sbb
addr16
sbb
sti
mov
out
into
ror
popa
pop
or
mov
push
inc
mov
scas
mov
dec
mov
mov
repz
mov
fsub
stos
inc
pop
aaa
inc
or
xor
mov
sar
sbb
mov
mov
mov
mov
cmp
sub
jne
loope
in
mov
mov
xchg
lock
mov
mov
sbb
fild
mov
mov
adc
adc
inc
or
inc
mov
sar
out
adc
mov
(bad)
repnz
shl
xchg
leave
sbb
mov
xchg
mov
dec
in
retf
jb
pop
add
sbb
fild
mov
mov
and
inc
cli
jne
dec
lods
retf
mov
repnz
shl
or
sbb
sti
mov
out
into
ror
push
(bad)
xlat
add
out
stos
fstp
inc
xor
aas
stos
xchg
pop
aaa
inc
or
aaa
inc
mov
sar
jo
mov
dec
out
mov
mov
repz
xor
dec
sbb
pop
aaa
mov
dec
out
mov
repz
dec
pop
aaa
inc
xor
and
or
aaa
inc
mov
sar
jo
mov
dec
out
mov
mov
repz
pop
scas
jne
mov
cmp
mov
fwait
int
int3
or
push
pop
aaa
mov
dec
lock
mov
mov
mov
sbb
fild
mov
mov
adc
xor
inc
or
inc
mov
sar
out
adc
mov
fistp
repz
shl
aas
xchg
sbb
mov
aaa
inc
xor
aaa
stos
hlt
sbb
inc
ja
aaa
inc
dec
out
cli
test
sti
mov
mov
or
repz
leave
xor
enter
mov
dec
in
jns
loopne
mov
or
enter
mov
dec
in
dec
pop
and
retf
dec
mov
scas
mov
fwait
cmc
and
xchg
iret
sti
stos
sbb
inc
or
xchg
out
aad
pop
sbb
mov
ror
push
jo
mov
mov
enter
jmp
xchg
in
ret
or
enter
aaa
inc
mov
mov
add
enter
inc
pop
cmp
aaa
inc
dec
out
leave
xor
enter
pop
es
pop
aaa
adc
jbe
mov
repz
xor
add
mov
ffreep
lock
sti
mov
out
into
ror
push
fld
add
out
stos
adc
inc
xor
aas
stos
in
pop
aaa
inc
or
aaa
inc
mov
sar
jo
mov
dec
out
mov
mov
repz
pop
das
jbe
mov
cmp
mov
fwait
int
int3
or
push
pop
aaa
mov
dec
lock
add
cdq
mov
dec
in
ret
aaa
mov
dec
xchg
mov
dec
out
jnp
fmul
mov
dec
out
retf
xor
enter
les
xor
aaa
inc
cmp
retf
xor
enter
js
mov
mov
mov
enter
mov
mov
aaa
ret
inc
and
jb
mov
inc
and
dec
xor
mov
mov
dec
out
retf
xor
enter
inc
push
fld
add
in
adc
ja
mov
repz
cmp
ret
mov
dec
pop
mov
mov
inc
mov
or
enter
out
inc
imul
cmp
xor
enter
mov
inc
out
mov
mov
mov
mov
dec
out
xchg
in
mov
dec
out
pop
dec
lods
(bad)
mov
dec
out
mov
repz
test
inc
xor
das
stos
movs
pop
aaa
inc
or
aaa
inc
mov
sar
jo
mov
dec
out
mov
mov
repz
xor
pop
cmp
sbb
sti
mov
out
into
ror
push
(bad)
xlat
add
out
stos
mov
fdivr
stos
jne
aaa
inc
or
aaa
inc
mov
sar
jo
mov
dec
out
mov
mov
repz
dec
lods
(bad)
mov
lea
aaa
mov
dec
xchg
out
mov
xchg
mov
dec
in
retf
jb
mov
mov
enter
iret
mov
mov
fdivr
retf
xor
enter
test
jo
mov
dec
out
mov
mov
repz
xor
push
jge
sbb
pop
mov
aaa
sti
mov
out
into
ror
push
fld
add
out
stos
aad
aaa
inc
xor
aas
stos
xchg
daa
aaa
inc
or
aaa
inc
mov
sar
jo
mov
dec
out
mov
mov
repz
pop
jecxz
inc
mov
cmp
mov
fwait
int
int3
or
push
pop
aaa
mov
dec
lock
xchg
sbb
test
or
fwait
repz
cmp
push
call
aaa
sti
mov
out
into
ror
popa
pop
mov
inc
mov
push
inc
mov
scas
mov
dec
mov
mov
repz
sbb
aaa
inc
xor
daa
stos
cmp
aaa
inc
or
aaa
inc
mov
sar
jo
mov
dec
out
mov
mov
repz
pop
jnp
inc
mov
cmp
mov
fwait
int
int3
or
push
pop
aaa
mov
dec
lock
mov
mov
mov
sbb
fild
mov
mov
and
inc
cli
jne
dec
lods
retf
mov
(bad)
sbb
shl
test
pop
or
inc
mov
cmp
mov
fwait
int
int3
cmp
inc
(bad)
sbb
sti
rcr
aaa
inc
sub
into
adc
movs
retf
mov
(bad)
stc
jne
out
leave
jg
sbb
repz
test
or
fwait
repz
pop
ror
inc
mov
cmp
mov
fwait
int
int3
or
push
pop
aaa
mov
dec
lock
sbb
mov
shl
out
sbb
out
mov
jns
aaa
inc
xor
aas
stos
xor
adc
inc
mov
sar
jo
mov
dec
out
mov
mov
repz
fld
xlat
add
out
stos
and
aas
cli
sbb
aaa
inc
inc
sti
mov
mov
mov
aaa
sti
mov
out
into
ror
push
fld1
aad
mov
cmp
and
aas
iret
xor
enter
mov
mov
repz
lods
and
daa
stos
dec
and
inc
or
aaa
inc
mov
sar
jo
mov
dec
out
mov
mov
repz
fstp
xlat
add
out
stos
mov
fdivr
ret
jb
xor
mov
mov
sbb
fild
mov
mov
and
inc
cli
jne
dec
lods
retf
mov
lea
aaa
shl
fisttp
sbb
inc
sub
into
retf
cwd
lock
xchg
sbb
adc
dec
out
sub
jne
out
mov
xchg
sbb
fild
mov
mov
and
inc
cli
jne
dec
lods
retf
mov
lea
aaa
shl
dec
(bad)
sbb
mov
xchg
mov
dec
in
retf
jb
jmp
test
or
fwait
repz
pop
aas
or
mov
scas
mov
fwait
int
int3
or
push
pop
aaa
mov
dec
lock
mov
mov
mov
sbb
fild
mov
mov
adc
inc
and
inc
or
inc
mov
sar
out
adc
mov
fild
jne
pop
xchg
outs
pop
aaa
mov
dec
lock
jns
sbb
mov
xor
sub
ins
aas
stos
leave
and
inc
cmp
mov
or
fistp
mov
mov
loope
cmp
lock
loope
mov
enter
retf
ja
inc
mov
cmp
and
inc
xor
or
pop
pop
cmovb
in
sbb
in
rol
pop
sbb
inc
mov
mov
cdq
jbe
dec
sub
retf
jbe
jb
mov
or
dec
sub
retf
jbe
add
outs
pop
aaa
iret
xor
leave
mov
mov
aaa
sub
sbb
mov
mov
fist
jne
mov
dec
sbb
xor
jb
sub
push
call
inc
mov
fcomip
inc
out
sub
jne
fld
jmp
pushf
repz
mov
mov
shr
enter
pop
retf
dec
sub
retf
jbe
inc
pop
test
adc
call
ret
enter
xchg
fimul
inc
cmp
ret
cmp
jno
xlat
inc
cmp
mov
inc
mov
aaa
inc
cmp
mov
(bad)
leave
in
mov
cmp
retf
ja
icebp
inc
out
mov
sbb
mov
mov
mov
mov
mov
mov
dec
out
fild
adc
cmp
cmp
inc
repz
mov
retf
dec
sub
retf
jbe
fbstp
xchg
aaa
retf
xor
retf
out
loop
out
stos
aad
aaa
inc
cmp
enter
enter
add
xchg
bound
xchg
inc
mov
mov
in
mov
cmp
xor
retf
enter
push
call
aaa
retf
xor
retf
cdq
rcr
sbb
sub
mov
fbstp
mov
aaa
stos
jns
aaa
inc
loope
test
sbb
mov
aaa
iret
xor
retf
dec
pop
in
outs
pop
aaa
sub
sbb
inc
xor
shr
xchg
adc
aaa
mov
sbb
jae
icebp
push
inc
mov
mov
jl
aaa
inc
pop
sbb
mov
dec
xchg
lock
popf
retf
mov
xor
retf
dec
fisttp
add
retf
out
ror
mov
dec
out
retf
enter
retf
out
loop
out
adc
popf
cmp
jmp
xor
retf
adc
aaa
mov
sbb
jae
icebp
les
sbb
outs
pop
aaa
iret
xor
leave
mov
mov
aaa
ret
pop
or
mov
dec
out
adc
stos
dec
and
inc
pop
test
mov
dec
out
ret
inc
cmp
jb
sub
out
adc
cmovb
out
sbb
sbb
(bad)
or
enter
aaa
inc
jbe
sar
sbb
xor
leave
mov
or
retf
sbb
xlat
fbstp
inc
mov
iret
imul
iret
xor
leave
mov
pop
out
sbb
addr16
xor
leave
mov
fistp
pop
(bad)
fistp
pop
inc
fistp
mov
mov
jmp
fdivr
(bad)
push
sbb
inc
dec
lods
lahf
mov
test
aaa
cli
pop
and
inc
inc
(bad)
mov
mov
and
or
add
sbb
mov
mov
mov
mov
out
inc
pop
ss
test
addr16
(bad)
jne
pop
arpl
inc
mov
hlt
dec
jno
sub
pop
sbb
inc
pop
fild
inc
mov
mov
dec
out
inc
cmp
or
sar
cdq
lds
inc
leave
sbb
stos
adc
movs
cmps
mov
mov
sbb
rol
sbb
inc
cmp
retf
mov
pop
pop
add
jb
sub
(bad)
jne
cmp
retf
mov
and
enter
cmp
out
inc
les
mov
sub
repz
adc
retf
sbb
inc
pop
pop
mov
sub
xchg
mov
dec
out
adc
add
cdq
lock
sbb
adc
iret
add
mov
aaa
mov
dec
lock
not
adc
mov
mov
dec
out
test
push
xchg
mov
dec
out
retf
jbe
imul
in
rol
pop
add
adc
xchg
push
push
inc
js
xlat
xchg
iret
inc
dec
xchg
lock
test
aaa
retf
jae
mov
dec
cld
sbb
mov
test
aaa
retf
jae
mov
push
pop
lsl
xchg
cmc
and
dec
rcl
adc
inc
mov
cmc
and
dec
ret
dec
push
pop
leave
dec
push
dec
retf
inc
popa
pop
adc
sbb
dec
push
dec
ret
iret
cmc
or
adc
sbb
sbb
retf
ja
cdq
inc
mov
shl
sub
ror
ss
and
nop
xor
mov
jb
loope
mov
mov
mov
mov
call
(bad)
sbb
ret
pop
cmp
inc
mov
inc
dec
mov
pop
xor
dec
ffreep
sbb
mov
hlt
out
push
mov
cmp
in
mov
stos
(bad)
aaa
inc
loop
add
xchg
jae
mov
adc
sbb
dec
push
dec
ror
or
pop
push
push
inc
mov
retf
sbb
movs
cmp
retf
jbe
jb
loope
aaa
adc
push
arpl
mov
aaa
sub
sbb
stos
mov
aaa
inc
cmp
iret
adc
lock
mov
push
xchg
lock
mov
inc
mov
jb
out
inc
ins
mov
mov
inc
mov
loope
mov
fs
xchg
push
push
mov
iret
inc
dec
xchg
lock
xchg
mov
push
out
retf
jbe
mov
push
out
add
movs
xlat
mov
jno
enter
push
pushf
repz
pop
sbb
test
cdq
rol
aaa
adc
repz
test
aaa
shl
add
enter
enter
cmp
cmp
push
mov
icebp
repz
test
xlat
mov
mov
mov
push
out
adc
addr16
xlat
sbb
adc
test
lock
repz
test
aaa
shl
add
enter
enter
cmp
xor
nop
dec
mov
push
xor
cmp
mov
iret
inc
dec
xchg
lock
in
sar
test
repz
dec
popa
adc
add
jge
mul
mov
call
xor
sbb
repz
(bad)
mov
mov
into
retf
jbe
aas
retf
imul
adc
mov
cmp
ss
ficomp
push
pop
aaa
adc
add
fwait
repz
cmp
shl
mov
mov
push
pop
aaa
iret
xor
xlat
mov
test
aaa
shl
outs
test
aaa
sti
mov
out
into
ror
push
fld1
aad
mov
mov
push
out
adc
add
fwait
repz
pop
pop
add
mov
scas
mov
fwait
int
int3
xor
mov
sbb
sti
rcr
aaa
inc
sub
into
adc
pusha
sub
(bad)
jne
cmp
aaa
mov
pop
sub
inc
xor
daa
stos
jge
aaa
inc
or
aaa
inc
mov
sar
jo
mov
mov
enter
fnsave
sbb
mov
aaa
sub
popf
aaa
mov
popa
sub
inc
xor
aas
stos
cmp
adc
inc
mov
sar
jo
mov
mov
enter
popf
jno
sbb
mov
mov
sbb
fild
mov
mov
push
stos
in
aaa
inc
or
inc
mov
sar
out
adc
mov
mov
out
adc
mov
repz
dec
ins
daa
sub
popf
aaa
mov
nop
stc
jne
cmp
aaa
mov
cdq
sub
inc
xor
and
inc
xor
retf
ja
xor
dec
mov
aaa
fild
mov
mov
and
inc
cli
jne
cmp
aaa
mov
xchg
sub
inc
xor
aas
sub
popf
aaa
mov
mov
fdivr
stos
jns
aaa
inc
or
aaa
inc
mov
sar
jo
mov
mov
enter
shl
sbb
repz
mov
mov
mov
mov
xchg
icebp
stos
cmp
aaa
inc
or
aaa
inc
mov
sar
lock
jo
sbb
fild
gs
or
xlat
mov
outs
pop
aaa
iret
or
xlat
mov
sbb
shl
imul
iret
xor
xlat
mov
sbb
shl
jnp
sbb
sti
mov
out
into
ror
push
fld1
aad
mov
mov
push
out
adc
add
dec
or
jne
mov
ror
xor
call
sub
(bad)
jne
cmp
aaa
mov
test
aaa
inc
xor
aas
stos
inc
sub
inc
or
aaa
inc
mov
sar
jo
mov
mov
enter
cmp
sbb
repz
mov
mov
mov
mov
sbb
stos
add
aaa
inc
or
aaa
inc
mov
sar
jo
mov
mov
enter
stc
jae
sbb
cmp
aaa
mov
lahf
(bad)
jne
cmp
aaa
mov
cmp
fsub
stos
(bad)
aaa
inc
or
aaa
inc
mov
sar
jo
mov
mov
enter
mov
xchg
sbb
mov
mov
mov
mov
sbb
fild
mov
mov
and
inc
cli
jne
cmp
aaa
mov
loope
aaa
inc
xor
aas
cli
jg
aaa
inc
inc
(bad)
mov
mov
sbb
aaa
inc
sub
into
retf
cwd
lock
xchg
sbb
adc
dec
out
sub
movs
aaa
mov
pop
sub
inc
xor
daa
stos
jge
aaa
inc
or
aaa
inc
mov
sar
jo
mov
mov
enter
fnsave
sbb
repz
mov
mov
mov
mov
xchg
mov
outs
out
retf
ja
mov
mov
mov
sbb
fild
mov
mov
and
inc
cli
jne
cmp
aaa
mov
adc
fdivr
stos
shr
aaa
inc
or
aaa
inc
mov
sar
lock
mov
mov
mov
aaa
fild
gs
or
xlat
mov
outs
pop
aaa
iret
or
xlat
mov
sbb
pop
xchg
outs
pop
aaa
iret
xor
xlat
mov
sbb
pop
inc
fistp
pop
inc
fistp
pop
inc
fstp
aaa
inc
icebp
dec
fist
xor
call
inc
retf
sbb
iret
xor
xlat
mov
pushf
sbb
sub
out
adc
push
out
adc
dec
out
outs
pushf
sbb
mov
dec
lock
imul
xor
inc
mov
imul
push
cdq
fcmovnbe
mov
aaa
adc
dec
mov
lods
jnp
ret
jbe
pop
inc
mov
xchg
fimul
inc
sub
lods
push
sbb
aas
adc
sbb
xchg
bound
dec
xor
mov
inc
(bad)
mov
mov
call
inc
mov
cmp
fstp
aaa
mov
xchg
mov
dec
out
retf
jbe
aaa
call
aaa
retf
xor
retf
xchg
iret
mov
xchg
mov
dec
out
retf
jbe
daa
sub
out
adc
sbb
jo
inc
mov
mov
mov
repz
outs
pop
aaa
sub
ins
sar
mov
sbb
inc
fstp
inc
mov
mov
dec
out
adc
stos
lds
aaa
inc
cmp
push
mov
adc
enter
mov
dec
out
adc
int
dec
fwait
repz
mov
sbb
inc
fnstcw
mov
dec
out
adc
sbb
xchg
mov
dec
out
adc
stos
popa
ss
inc
pop
nop
sar
dec
out
ret
inc
cmp
mov
jae
mov
mov
dec
out
adc
sbb
fwait
repz
or
ror
xor
int3
mov
xor
leave
mov
mov
mov
dec
out
inc
mov
aaa
ror
mov
xlat
fbstp
inc
mov
push
dec
mov
shl
out
test
stos
sub
enter
mov
dec
out
adc
sub
sub
jb
iret
xor
leave
mov
pop
aas
sbb
mov
test
out
jmp
aaa
inc
cmp
ss
adc
enter
(bad)
add
sbb
mov
mov
mov
mov
out
inc
pop
sub
mov
shl
mov
dec
out
mov
repz
setp
aaa
retf
ja
div
stos
jo
inc
mov
(bad)
fwait
sbb
ret
int3
mov
(bad)
jecxz
mov
mov
sbb
inc
fstp
mov
sbb
mov
aaa
iret
xor
retf
mov
inc
xor
inc
xor
out
mov
pop
inc
fnstenv
add
out
adc
test
mov
enter
mov
mov
aaa
iret
xor
int3
mov
int3
out
enter
aas
dec
jno
mov
mov
aaa
sub
out
iret
xor
int3
mov
cwde
sbb
iret
xor
retf
dec
enter
enter
loope
dec
xchg
icebp
cli
enter
inc
(bad)
mov
mov
and
jnp
inc
mov
cmp
repz
ja
sbb
adc
adc
add
sbb
shl
add
pop
dec
outs
pop
aaa
stos
test
test
test
mov
fs
dec
lock
dec
out
xchg
test
mov
loope
enter
enter
loopne
dec
fwait
repz
xor
xchg
or
xchg
xor
inc
jbe
stos
mov
mov
mov
test
stos
ins
xor
inc
fistp
enter
enter
push
inc
mov
iret
mov
xchg
mov
dec
out
retf
jbe
and
out
stos
popf
xor
inc
cmp
push
inc
mov
mov
adc
dec
mov
xor
or
inc
loop
pop
imul
inc
dec
pop
inc
push
inc
mov
bound
jecxz
ja
and
aaa
inc
cmp
mov
test
dec
fbstp
sbb
adc
push
inc
mov
inc
dec
cmp
xor
lock
stos
lds
aaa
inc
cmp
push
mov
dec
dec
pop
inc
out
jns
icebp
sbb
fistp
fbld
sbb
retf
ja
enter
pop
inc
mov
and
sbb
movs
cmp
retf
jbe
jb
loope
fist
xchg
sbb
adc
adc
xchg
jb
pop
adc
pop
inc
xchg
lock
in
sar
mov
aaa
inc
pop
adc
mov
pusha
std
or
cmp
push
mov
dec
ins
aas
stos
mov
aaa
inc
cmp
ds
sbb
sbb
mov
(bad)
cmp
xchg
mov
inc
out
adc
lock
sbb
dec
ins
cmp
xor
(bad)
mov
add
enter
or
mov
(bad)
test
pop
mov
icebp
test
jb
mov
adc
enter
push
xchg
jb
cmp
push
test
out
inc
pop
jo
mov
mov
jo
pushf
repz
xchg
fwait
sbb
iret
hlt
mul
mov
je
mov
enter
jne
pop
sub
inc
mov
add
fwait
test
sbb
jmp
sbb
shl
pop
pop
dec
pop
inc
fstp
inc
mov
add
pop
aaa
stos
mov
aaa
inc
xor
xor
mov
push
mov
hlt
out
mov
js
(bad)
retf
push
dec
addr16
cmps
pop
dec
mov
pop
dec
xchg
icebp
sub
jb
sub
aaa
sub
sbb
fistp
pop
inc
fisttp
fild
cwde
sbb
retf
jbe
ss
xor
mov
ss
pop
test
pop
mov
inc
mov
(bad)
mov
xchg
jb
cmp
pop
inc
out
pop
mov
mov
dec
push
sbb
out
pop
mov
mov
pop
push
sbb
out
pop
mov
mov
ins
push
sbb
out
pop
mov
mov
jge
mov
mov
lds
fistp
pusha
sub
pop
aaa
stos
test
aaa
inc
fistp
pusha
sub
pop
aaa
stos
xchg
xor
inc
fistp
pusha
sub
pop
aaa
stos
movs
xor
inc
xor
cmps
jno
sbb
out
pop
mov
mov
leave
gs
pop
inc
out
pop
mov
mov
fldenv
sbb
out
pop
mov
mov
jmp
inc
out
pop
mov
mov
stc
gs
push
std
pop
ins
out
ins
cmp
push
mov
dec
sub
fistp
xchg
sbb
loope
lea
fyl2x
mov
mov
retf
mov
mov
gs
pop
mov
repz
jnp
sbb
loope
xchg
fyl2x
mov
mov
retf
mov
mov
sbb
sbb
dec
sub
fist
sbb
loope
xchg
fyl2x
mov
mov
retf
mov
mov
cmp
mov
fnsetpm(287
enter
ja
pop
repz
mov
pop
stos
ss
aaa
sub
add
pop
aaa
stos
push
ds
inc
fnsetpm(287
enter
jbe
pop
fist
inc
mov
dec
jecxz
sbb
ss
aaa
sub
add
pop
aaa
stos
or
in
ja
xchg
pop
mov
sbb
icebp
sbb
ss
aaa
sub
add
pop
aaa
stos
sub
aaa
inc
fnsetpm(287
enter
jne
pop
adc
mov
pop
stos
ss
aaa
sub
add
adc
stos
lds
aaa
inc
out
(bad)
push
fistp
dec
mov
xlat
inc
xor
dec
sub
retf
jbe
ret
sbb
aaa
mov
out
test
hlt
jmp
out
shl
dec
cs
aaa
sub
sbb
ret
inc
sub
mov
jb
loope
(bad)
xchg
sbb
sub
pop
aaa
sub
xor
loope
jb
call
inc
fstp
aaa
ret
jmp
repz
ins
pop
aaa
sub
inc
adc
mov
pop
inc
dec
sub
pop
inc
loope
or
hlt
loopne
pop
inc
fbld
loope
and
movs
jo
inc
xor
xchg
sub
jne
fistp
fbld
sbb
loope
xchg
xor
cmp
mov
pop
inc
dec
sub
pop
inc
dec
sub
pop
shl
loopne
pop
inc
fbld
loope
data16
dec
pop
sahf
push
pop
aaa
sub
jne
fistp
fbld
sar
pop
inc
fistp
pop
inc
fistp
pop
inc
fistp
pop
(bad)
mov
aaa
sub
jb
stos
xchg
ds
inc
cmp
pop
inc
out
pop
mov
mov
mov
mov
pop
inc
dec
sub
pop
inc
dec
sub
pop
push
fldcw
xor
sub
dec
pop
cs
pop
aaa
sub
jne
fistp
fbstp
xchg
sbb
loope
mov
enter
jbe
fistp
enter
jbe
fisttp
pop
popa
mov
aaa
sub
jb
sub
add
add
sbb
pop
daa
adc
mov
mov
pop
pop
xchg
lock
pop
aaa
sub
pop
aaa
sub
sbb
mov
aaa
sub
dec
pop
mov
aaa
sub
jne
fistp
fistp
mov
sbb
ja
xchg
fistp
enter
jbe
fisttp
pop
cmp
sbb
inc
(bad)
pop
inc
mov
sub
les
fld
jmp
cmp
inc
adc
add
sub
add
js
add
jo
inc
mov
pop
push
fstp
aaa
ret
jmp
repz
ins
pop
aaa
sub
sbb
jbe
push
inc
mov
dec
sahf
repz
fstp
inc
mov
fisttp
xchg
sbb
sub
les
fistp
pop
add
lock
add
sbb
dec
sub
pop
inc
dec
sub
pop
outs
mov
aaa
sub
sbb
fstp
aaa
ret
jmp
repz
ins
pop
aaa
sub
sbb
mov
add
pop
aaa
sub
pop
aaa
sub
and
call
pop
sbb
inc
fstp
aaa
ret
jmp
repz
ins
pop
aaa
sub
sbb
mov
enter
enter
jbe
fistp
enter
jbe
fisttp
pop
jns
(bad)
aaa
inc
mov
pop
inc
mov
pop
inc
mov
addr16
les
fld
jmp
cmp
inc
adc
iret
mov
xchg
jb
cmp
pop
inc
dec
sub
pop
inc
dec
sub
pop
push
fstp
enter
pop
push
mov
aaa
sub
dec
jmp
mov
in
lahf
repz
pop
jg
inc
mov
inc
jecxz
sbb
dec
sub
pop
inc
dec
sub
pop
push
fstp
pop
mov
aaa
sub
aaa
inc
fstp
aaa
inc
loope
jne
repz
ins
pop
aaa
sub
sbb
mov
add
pop
aaa
sub
pop
aaa
sub
sbb
mov
aaa
sub
jo
inc
mov
pop
push
ins
pop
aaa
sub
jne
fistp
fbstp
inc
test
fistp
enter
jbe
fistp
enter
jbe
fisttp
pop
adc
push
ss
mov
xchg
inc
mov
pop
inc
mov
sub
inc
fld
jmp
cmp
inc
adc
mov
mov
aaa
mov
mov
das
sub
mov
inc
mov
and
mov
mov
fld
(bad)
add
sbb
mov
aaa
stos
xor
aaa
inc
adc
mov
mov
aaa
mov
mov
das
sub
sbb
inc
(bad)
aaa
inc
mov
and
mov
mov
(bad)
ss
repz
mov
aaa
stos
cmc
cmp
inc
adc
add
sbb
sub
pop
aaa
sub
pop
aaa
sub
sbb
inc
fisttp
inc
mov
sub
jne
fstp
jmp
mov
aaa
inc
mov
fild
sbb
loope
xchg
fistp
enter
jbe
fistp
enter
jne
fild
pop
es
aaa
inc
mov
and
mov
mov
fld
(bad)
add
sbb
mov
aaa
stos
jge
aaa
inc
adc
test
mov
aaa
mov
mov
aaa
mov
mov
and
sub
aaa
inc
fnstenv
sub
mov
mov
fsincos
in
add
sbb
pop
mov
inc
mov
scas
loope
sbb
xor
dec
sbb
retf
jbe
cmps
mov
js
(bad)
retf
push
fist
dec
mov
(bad)
xor
inc
mov
ret
sbb
aaa
mov
out
test
hlt
jmp
out
shl
dec
cs
aaa
cli
lea
inc
inc
(bad)
mov
sub
pop
aaa
stos
xchg
cmp
inc
cmp
(bad)
adc
lock
mov
xor
enter
jbe
fistp
popa
leave
hlt
in
pop
inc
dec
mov
mov
jb
sub
dec
pop
sahf
push
pop
aaa
sub
jne
fstp
xor
bound
pop
aaa
sub
pop
aaa
sub
pop
iret
imul
dec
pop
push
fisttp
inc
mov
sub
jne
fld
jmp
cmp
inc
adc
add
sub
add
pop
xchg
add
sbb
xor
push
adc
dec
pop
push
fst
aaa
ret
jmp
repz
ins
pop
aaa
sub
sbb
mov
xor
sub
aaa
sub
sbb
fistp
pop
dec
fisttp
not
cdq
lock
mov
aaa
sub
sub
fisttp
sbb
sub
pop
aaa
sub
pop
aaa
sub
jb
sub
sbb
add
sbb
pop
sbb
inc
mov
(bad)
lock
test
(bad)
jmp
mov
aaa
sub
sbb
inc
dec
sub
(bad)
scas
sbb
sub
les
fistp
pop
add
lock
add
sbb
inc
test
sub
sbb
inc
dec
sub
(bad)
scas
sbb
test
mov
jns
mov
enter
jbe
pop
imul
mov
aaa
mov
mov
aaa
mov
mov
sbb
sbb
fisttp
ret
jmp
repz
ins
pop
aaa
sub
sbb
dec
sub
retf
jbe
aaa
mov
mov
aaa
mov
mov
sbb
sbb
fisttp
in
mov
aaa
sub
(bad)
(bad)
add
sbb
pop
aas
sub
mov
fistp
inc
out
sub
pop
aaa
sub
pop
aaa
sub
sbb
(bad)
inc
mov
aaa
inc
mov
pop
adc
aaa
sub
jne
fistp
fild
lds
fs
pop
inc
dec
sub
pop
inc
dec
sub
pop
push
fstp
lds
sbb
inc
fstp
aaa
inc
loope
jne
repz
ins
pop
aaa
sub
sbb
mov
add
pop
aaa
sub
pop
aaa
sub
sbb
mov
aaa
sub
jo
inc
mov
pop
push
ins
pop
aaa
sub
jne
fistp
fbstp
scas
sbb
loope
test
fistp
enter
jbe
fistp
enter
jbe
fisttp
pop
adc
mov
xchg
inc
mov
pop
inc
mov
sub
inc
fld
jmp
push
aaa
inc
adc
mov
mov
aaa
mov
mov
daa
sub
aaa
inc
fsin
aaa
inc
mov
sub
mov
aaa
adc
data16
add
sbb
pop
out
inc
mov
dec
jecxz
sbb
test
sbb
ja
xchg
fistp
enter
jbe
fisttp
pop
mov
dec
sbb
inc
fild
pop
inc
mov
addr16
ret
jne
fld
jmp
add
xchg
add
sub
add
js
add
sbb
inc
(bad)
aaa
ret
cmps
loopne
sbb
ins
pop
aaa
sub
lahf
sub
mov
pop
inc
dec
sub
pop
inc
dec
sub
pop
pop
(bad)
pop
add
or
inc
mov
sub
jne
fstp
jmp
mov
aaa
inc
mov
fist
lods
sbb
loope
xchg
xor
aas
adc
sub
pop
inc
dec
sub
pop
pop
fstp
fisttp
inc
mov
sub
jne
fstp
jmp
mov
aaa
inc
mov
fist
sbb
loope
xchg
fistp
enter
jbe
fistp
enter
jbe
fisttp
pop
fnstenv
sbb
inc
fild
pop
inc
mov
sub
jne
(bad)
in
add
add
inc
adc
div
inc
out
ret
jbe
push
inc
mov
imul
out
mov
movs
mov
in
aaa
inc
inc
(bad)
mov
sub
sbb
fistp
pop
inc
fstp
aaa
inc
xor
inc
dec
pop
mov
inc
mov
icebp
ror
(bad)
sub
aaa
inc
fistp
popa
stos
sbb
(bad)
inc
out
cmc
pop
mov
mov
dec
sbb
pop
inc
sbb
inc
mov
jb
loope
jb
loope
jb
loope
inc
push
fldenv
ss
mov
fbld
adc
enter
mov
pop
pop
xchg
lock
in
or
sbb
aaa
dec
jo
cdq
repz
push
aaa
mov
mov
out
xchg
loopne
mov
dec
sbb
fistp
adc
daa
sub
aaa
inc
xor
mov
dec
out
xchg
(bad)
push
cdq
fild
sbb
adc
cmps
jbe
sub
call
add
mov
pop
loopne
pop
aaa
iret
xor
enter
fild
test
add
aaa
inc
mov
sar
cwde
dec
mov
or
jne
cmp
aaa
mov
icebp
add
inc
xor
inc
les
pop
call
enter
fild
sbb
ret
pop
jae
inc
mov
dec
mov
inc
test
inc
cmp
aaa
mov
mov
gs
pop
push
add
iret
xor
enter
fbstp
int3
out
aaa
mov
sbb
mov
mov
mov
dec
push
inc
push
fst
add
out
adc
and
cdq
rcr
aaa
ret
xor
mov
sbb
mov
mov
mov
dec
adc
fstp
mov
dec
out
adc
and
cwde
dec
mov
adc
aaa
mov
int
aaa
inc
xor
dec
les
pop
popf
add
iret
xor
enter
fbld
cmps
sbb
retf
inc
out
ror
xor
leave
mov
int3
out
aaa
mov
sbb
mov
mov
mov
dec
adc
push
fnstcw
test
mov
mov
dec
out
adc
and
cwde
dec
mov
mov
aaa
mov
movs
getsec
inc
xor
dec
les
pop
pop
add
iret
xor
enter
fistp
mov
aaa
sub
ret
jne
fst
add
out
adc
sbb
cmps
dec
out
jns
pop
aaa
sub
test
test
mov
pusha
mov
xchg
adc
stos
mov
aaa
inc
xor
pop
retf
inc
sbb
retf
ja
add
sbb
xor
xchg
rcl
loop
pusha
leave
les
mov
not
aaa
inc
inc
(bad)
mov
retf
inc
dec
(bad)
test
push
ss
dec
out
xchg
jb
adc
mov
imul
in
rol
pop
xor
inc
mov
popa
adc
fist
icebp
retf
inc
sbb
retf
ja
inc
lock
mov
mov
fist
mov
out
into
retf
iret
mov
dec
out
inc
les
pop
out
add
iret
xor
sar
sbb
cli
in
sbb
inc
inc
(bad)
mov
mov
inc
loopne
mov
ja
jne
cmp
fidiv
push
or
les
mov
sbb
mov
mov
mov
inc
loopne
mov
mov
jne
cmp
fidiv
add
les
mov
sbb
mov
mov
mov
(bad)
push
out
enter
mov
inc
loopne
mov
test
fidiv
ror
mov
mov
sbb
mov
mov
mov
inc
loopne
mov
(bad)
fidiv
lea
shl
mov
mov
mov
sbb
mov
mov
mov
inc
loopne
mov
sbb
fidiv
dec
or
inc
xor
cmp
mov
sbb
mov
mov
mov
inc
loopne
mov
pop
stos
jne
cmp
fidiv
jns
aaa
inc
xor
loope
mov
mov
inc
loopne
mov
mov
jne
cmp
fidiv
sbb
inc
xor
cmp
mov
sbb
mov
mov
pop
xor
pop
aaa
iret
xor
sar
out
ret
inc
dec
add
jo
loop
sbb
add
stos
pop
hlt
enter
daa
retf
xor
sar
out
jo
adc
enter
mov
mov
aaa
retf
inc
sub
retf
ja
icebp
sar
aaa
sub
mov
cmc
mov
cmp
cmp
fisub
or
retf
mov
sbb
aaa
inc
xor
or
inc
mov
mov
mov
sbb
(bad)
dec
in
mov
inc
xchg
icebp
iret
xor
iret
mov
push
aaa
iret
xor
retf
mov
test
adc
dec
enter
push
stos
in
add
inc
or
mov
add
mov
cwde
sar
add
dec
out
lds
and
xor
jecxz
sbb
push
aaa
iret
xor
leave
mov
test
inc
gs
mov
cmps
jecxz
sbb
push
aaa
iret
xor
iret
mov
test
add
add
sbb
inc
mov
mov
dec
out
adc
and
cdq
ror
sbb
iret
xor
iret
mov
push
aaa
iret
xor
leave
mov
cmps
sbb
sub
popf
retf
mov
inc
getsec
inc
xor
and
xor
leave
mov
movs
sbb
iret
xor
retf
mov
loope
mov
dec
out
adc
loop
add
out
adc
and
fwait
repz
fistp
mov
mov
mov
pop
inc
fldlg2
in
add
out
adc
stos
mov
mov
sbb
inc
cmp
retf
mov
mov
fild
sbb
sbb
popf
iret
mov
mov
mov
mov
aaa
ss
mov
cmp
mov
in
add
out
adc
and
fwait
repz
fst
mov
dec
out
adc
and
mov
pop
inc
and
xchg
mov
inc
out
test
inc
out
ret
retf
mov
mov
out
test
out
test
inc
out
ror
mov
xor
mov
mov
enter
enter
retf
mov
addr16
cmp
retf
mov
add
aaa
inc
xor
daa
iret
xor
iret
mov
mov
int3
sar
out
adc
mov
mov
int
daa
adc
mov
in
iret
mov
dec
out
adc
ret
mov
mov
in
mov
mov
in
mov
inc
loopne
mov
out
mov
mov
and
inc
cmp
iret
mov
mov
xor
imul
sbb
pop
xchg
and
mov
fild
sbb
iret
xor
retf
mov
add
iret
mov
dec
out
xchg
pop
mov
dec
out
mov
dec
lock
lods
shl
fstp
pop
mov
push
push
mov
outs
stos
jle
enter
ins
mov
aaa
pop
cmp
(bad)
mov
or
inc
loop
pusha
stc
lahf
and
sub
(bad)
cwde
sar
mov
aaa
sub
push
and
out
out
dec
jno
cmp
pop
arpl
inc
mov
ss
test
jb
adc
add
sbb
mov
dec
out
xor
mov
adc
aaa
stos
and
aaa
inc
(bad)
aaa
inc
mov
cmps
jecxz
sbb
adc
or
inc
loope
jns
mov
mov
lods
sub
inc
fstp
inc
mov
mov
pop
out
adc
aas
stos
dec
or
inc
fistp
pop
rcl
pop
aaa
iret
xor
fnstcw
sub
enter
or
xor
ss
mov
xor
add
cmp
enter
jne
or
aam
xor
fstp
jns
aaa
inc
or
jp
mov
repnz
cwde
sar
shl
mov
dec
out
mov
repz
mov
out
clc
bound
push
loopne
div
jo
sub
xchg
out
cmp
mov
rcl
xchg
scas
dec
out
mov
xchg
mov
pop
out
jle
outs
test
sbb
retf
jae
cmc
inc
les
icebp
(bad)
sbb
enter
mov
pop
out
jo
shl
cmp
mov
mov
repz
imul
xor
fstp
movs
sbb
sub
out
adc
stos
lds
aaa
inc
cmp
test
dec
out
stos
jg
enter
xchg
scas
dec
out
stos
rcr
enter
das
retf
imul
aaa
iret
xor
fstp
mov
xor
inc
inc
sti
mov
mov
pop
push
cmp
jo
cwde
repz
adc
sub
jne
fstp
add
sbb
inc
cmp
push
lods
dec
out
ja
shl
cmp
inc
mov
push
out
lods
in
add
sbb
imul
sar
inc
mov
mov
out
iret
test
add
sbb
and
xchg
out
imul
sub
ret
(bad)
icebp
cwde
repz
and
stos
jmp
movs
aad
dec
out
ja
shl
cmp
inc
mov
push
out
mov
cmps
jecxz
sbb
imul
mov
jbe
pop
xor
mov
repz
mov
inc
or
aaa
inc
mov
xchg
ret
jb
dec
inc
mov
aaa
sub
jb
sub
sbb
dec
mov
mov
sub
fstp
inc
mov
hlt
mov
hlt
mov
mov
mov
push
dec
mov
mov
mov
xor
inc
(bad)
cmp
(bad)
adc
xchg
mov
pop
out
adc
pop
pop
aaa
inc
fistp
mov
inc
fld1
aad
mov
inc
neg
cmp
fbstp
dec
pop
aaa
inc
cmp
(bad)
adc
stos
cmp
aaa
inc
cmp
sub
pop
mov
mov
inc
mov
or
iret
or
fdivr
add
sbb
cmp
(bad)
adc
sbb
push
pop
aaa
mov
mov
lods
fbld
sbb
retf
imul
xor
hlt
clc
xchg
jbe
pop
aaa
retf
hlt
aam
inc
ins
data16
cmp
sub
sbb
mov
hlt
int3
(bad)
in
sbb
mov
xchg
mov
pop
out
leave
xor
fidivr
mov
aaa
inc
fistp
fisttp
hlt
enter
sbb
inc
mov
aaa
stos
sbb
aaa
inc
cmp
test
movs
xor
mov
mov
adc
inc
jbe
repz
mov
aaa
test
shl
inc
mov
mov
jmp
sbb
sub
pop
aaa
sub
jb
sub
sbb
inc
fyl2xp1
jmp
sbb
pop
add
inc
mov
aaa
(bad)
sbb
add
sub
push
aaa
inc
fistp
fild
jne
(bad)
mov
sbb
ret
pop
xlat
imul
adc
fistp
sbb
retf
xor
fidivr
mov
shl
out
(bad)
sbb
enter
fisttp
mov
enter
enter
fwait
lods
dec
out
inc
mov
mov
push
outs
aaa
inc
cmp
(bad)
scas
dec
out
iret
xor
fnstcw
add
ret
(bad)
add
cwde
(bad)
and
enter
ds
mov
(bad)
cs
sbb
stos
sub
ss
enter
aaa
sub
sbb
fistp
fist
sbb
adc
cmp
xchg
mov
pop
out
adc
sbb
fchs
inc
add
lock
stos
rcl
fistp
pop
mov
sbb
sub
pop
aaa
stos
rcl
aaa
inc
pop
add
cmp
out
retf
jb
jb
loope
mov
pop
inc
fistp
pop
inc
cmp
rcl
pop
inc
cmp
adc
aaa
fs
imul
in
rol
pop
and
inc
mov
popa
adc
sbb
leave
hlt
adc
mov
mov
aaa
cmp
mov
sbb
cmp
aaa
inc
mov
sbb
push
mov
aaa
ss
and
cmp
adc
aaa
inc
mov
ss
mov
mov
mov
aaa
stos
and
aaa
inc
xor
aaa
dec
xor
jo
lahf
repz
ja
lods
jne
pop
daa
sar
dec
out
retf
dec
out
ror
xor
retf
xchg
lock
jne
dec
lods
fstp
push
out
shl
(bad)
pop
in
mov
dec
out
mov
dec
lock
cmp
mov
mov
adc
stos
dec
adc
inc
mov
popf
xlat
mov
imul
xor
and
retf
xor
jnp
ins
sub
xor
retf
xor
rcr
xlat
gs
mov
dec
out
xchg
lds
pop
inc
cmp
sbb
ins
in
mov
dec
out
imul
pop
inc
fistp
enter
jbe
pop
mov
inc
mov
iret
imul
ror
mov
aaa
inc
adc
mov
pop
div
sbb
test
cmp
aaa
ret
add
sbb
dec
sub
fistp
xor
ss
xor
xor
out
sub
dec
mov
mov
mov
test
sbb
dec
mov
sbb
pop
sbb
inc
mov
jg
mov
xchg
inc
cs
aaa
jnp
adc
dec
ins
aas
stos
mov
loopne
mov
mov
aaa
leave
hlt
or
(bad)
dec
out
mov
mov
or
and
or
lds
or
add
jbe
lds
inc
and
cmp
inc
int
jne
lds
inc
adc
or
mov
adc
inc
movs
xchg
mov
sbb
dec
ins
daa
stos
pop
adc
inc
cmp
or
int
jne
lds
or
adc
or
test
pop
repnz
or
(bad)
mov
out
inc
dec
ins
daa
stos
adc
div
mov
mov
push
in
mov
dec
out
inc
cmp
xlat
mov
sub
popf
fstp
mov
aaa
retf
dec
sbb
retf
jbe
outs
inc
mov
mov
fs
aaa
inc
(bad)
aaa
inc
mov
mov
dec
out
adc
(bad)
lock
mov
sbb
ret
enter
inc
(bad)
fistp
pop
inc
(bad)
add
adc
inc
dec
sub
fisttp
sbb
stos
inc
sbb
jmp
mov
mov
mov
dec
out
mov
or
add
popf
cmps
inc
mov
pop
mov
xor
enter
enter
jne
pop
xchg
cmp
inc
dec
out
sar
ret
aaa
aaa
dec
fwait
iret
inc
ret
add
aam
mov
stos
inc
dec
out
adc
movs
mov
mov
enter
pop
sub
ret
fistp
fist
test
dec
mov
fisub
mov
aaa
retf
dec
sub
retf
jbe
mov
dec
out
adc
sub
inc
cmp
ret
out
stos
and
fsub
sub
aaa
inc
cmp
ss
test
add
sbb
mov
mov
aaa
sub
sbb
sub
add
add
sbb
mov
cmp
enter
(bad)
mov
mov
into
ror
(bad)
fistp
pop
inc
fcos
out
add
adc
inc
dec
sub
fbld
jbe
aaa
inc
ja
aaa
mov
mov
add
cmp
jle
xor
popw
sub
shl
sbb
mov
sbb
mov
mov
xchg
dec
mov
fmulp
mov
aaa
ret
enter
mov
mov
cmp
ss
mov
enter
mov
dec
out
adc
xor
mov
dec
out
adc
cmp
mov
repz
(bad)
aaa
inc
mov
mov
dec
out
adc
mov
repz
push
mov
sbb
mov
fistp
pop
inc
(bad)
out
add
adc
inc
dec
sub
fild
sbb
stos
mov
push
ss
mov
ror
xor
retf
xchg
lock
xor
enter
mov
mov
repz
mov
mov
mov
mov
sbb
mov
cs
aaa
stos
adc
aaa
inc
xor
aaa
aaa
xchg
jb
sub
sbb
pop
adc
inc
mov
add
pop
aaa
stos
or
aaa
inc
pop
xchg
mov
mov
dec
out
adc
sub
shl
popf
ret
out
stos
adc
inc
xor
daa
sub
aaa
inc
cmp
ss
test
test
mov
or
sbb
mov
mov
aaa
sub
shl
sbb
jmp
sbb
mov
mov
popa
dec
mov
fidivr
sbb
iret
cmp
enter
(bad)
mov
mov
into
ror
(bad)
fistp
pop
inc
fnstenv
add
adc
inc
dec
sub
fbld
sbb
stos
mov
aaa
inc
ja
enter
aaa
test
dec
out
mov
dec
out
jle
xor
popw
sub
shl
sbb
ja
sbb
mov
mov
aad
mov
fimul
xor
leave
mov
dec
out
mov
cmp
ss
mov
enter
mov
dec
out
adc
xor
mov
dec
out
adc
ds
mov
repz
(bad)
aaa
inc
mov
mov
dec
out
adc
pop
(bad)
sbb
adc
sbb
mov
fistp
pop
inc
(bad)
out
add
pop
aaa
inc
dec
sub
fild
mov
aaa
stos
(bad)
sbb
inc
ja
leave
mov
mov
add
cmp
jle
xor
popw
sub
shl
sbb
aas
mov
aaa
mov
mov
sbb
push
mov
aaa
ret
leave
mov
mov
enter
enter
ss
(bad)
and
leave
mov
sbb
mov
dec
out
leave
xor
retf
xchg
lock
xor
enter
mov
mov
repz
mov
mov
mov
mov
xchg
mov
dec
out
leave
xor
retf
xchg
lock
jb
sub
pop
pop
add
pop
aaa
stos
sub
popf
ret
mov
fistp
pop
inc
dec
lods
ret
mov
mov
aaa
ret
add
sbb
cmp
pop
fcomi
sbb
mov
inc
mov
cmp
(bad)
mov
fldcw
scas
add
out
stos
push
sbb
mov
mov
inc
cli
jne
dec
lods
ret
mov
mov
aaa
iret
cmp
retf
fwait
(bad)
mov
mov
into
sub
out
adc
xchg
stos
mov
out
adc
ret
mov
mov
aaa
sub
out
adc
sbb
push
pop
aaa
mov
dec
lock
inc
mov
mov
test
ret
mov
mov
aaa
mov
mov
mov
pop
inc
fistp
pop
inc
fistp
pop
inc
fstp
aaa
inc
icebp
jo
shl
sbb
sti
mov
aaa
retf
xor
leave
mov
stc
sbb
sub
out
mov
out
stos
jno
aaa
inc
cmp
cmps
loopne
sbb
mov
inc
mov
cmp
(bad)
mov
(bad)
xor
sbb
mov
mov
pop
shl
lods
ret
mov
mov
aaa
mov
dec
lock
inc
mov
lock
(bad)
inc
cmp
ss
fistp
cs
ret
(bad)
add
cwde
(bad)
cmp
enter
pop
inc
dec
sub
fbld
dec
out
ror
xor
retf
xchg
lock
dec
ins
daa
mov
mov
sbb
jmp
cmps
xor
cmp
out
mov
push
add
(bad)
aaa
mov
xchg
jb
cmp
mov
inc
mov
cmp
jge
aaa
inc
xor
dec
mov
sbb
xor
adc
ja
test
pop
mov
xchg
xor
cmp
retf
jbe
add
mov
pop
aaa
stos
cmp
inc
mov
inc
dec
dec
sub
fbstp
mov
aaa
jns
xor
add
add
add
sbb
test
sbb
dec
sub
fisttp
mov
aaa
jns
xor
mov
mov
add
sbb
xchg
xchg
les
jg
lods
jne
mov
cmp
test
stos
add
sbb
test
sbb
xor
ss
mov
pop
aaa
stos
dec
sbb
inc
add
ja
test
les
mov
inc
cmp
push
mov
xor
mov
inc
mov
inc
inc
cmp
or
lods
lea
les
mov
inc
mov
inc
inc
cmp
mov
mov
aaa
inc
mov
inc
inc
cmp
or
xor
push
mov
inc
mov
ins
and
mov
sbb
inc
pop
adc
loope
sbb
mov
xchg
jb
cmp
push
push
mov
aaa
inc
dec
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
xchg
rcl
out
mov
sbb
aaa
xchg
jb
retf
dec
pop
stos
loope
aaa
inc
xor
aas
retf
hlt
in
add
mov
add
dec
repz
jno
xor
dec
cmp
pop
sbb
nop
add
mov
xchg
ins
les
mov
icebp
inc
mov
pop
inc
out
aaa
adc
fdivr
call
sbb
outs
mov
aaa
inc
xor
adc
or
inc
ret
xchg
adc
cmp
sbb
mov
dec
jmp
cmp
daa
xchg
dec
data16
xchg
aam
iret
mov
dec
mov
aaa
inc
dec
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
shl
cmp
cmps
.byte
mov
aaa
inc
