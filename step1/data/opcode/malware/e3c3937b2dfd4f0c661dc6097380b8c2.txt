mov
mov
or
mov
xor
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
xor
push
mov
push
lea
push
mov
mov
call
mov
lea
mov
mov
call
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
call
mov
lea
mov
call
mov
mov
lea
mov
mov
call
xor
mov
lea
mov
mov
call
or
mov
mov
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
call
mov
mov
xor
cmp
mov
je
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
call
mov
mov
cmp
mov
je
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
call
mov
call
mov
push
call
mov
movzx
push
push
lea
call
mov
mov
mov
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
lea
call
mov
mov
lea
mov
mov
call
mov
mov
lea
mov
mov
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
mov
call
mov
mov
call
mov
call
mov
push
call
mov
movzx
push
push
lea
call
mov
lea
mov
mov
call
mov
lea
mov
call
mov
lea
push
mov
call
mov
push
mov
call
mov
mov
add
or
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
mov
lea
mov
mov
call
mov
mov
lea
mov
mov
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
lea
mov
call
mov
push
call
mov
call
test
je
push
lea
push
push
call
mov
call
mov
mov
push
push
mov
call
mov
call
mov
sub
push
call
lea
add
mov
mov
lea
push
lea
call
mov
lea
lea
or
lock
dec
pop
test
jmp
push
call
mov
call
test
je
lea
push
push
call
mov
call
mov
mov
push
push
mov
call
mov
call
push
lea
call
mov
lea
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
cmp
je
lea
call
test
je
lea
call
test
jne
lea
call
test
je
lea
call
test
jne
lea
call
test
jne
lea
push
lea
call
mov
mov
mov
call
test
je
mov
jmp
xor
mov
test
je
and
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
test
pop
je
call
mov
mov
mov
push
mov
call
jmp
call
mov
mov
mov
call
push
call
mov
call
test
je
call
mov
mov
mov
push
call
push
call
mov
call
test
je
call
mov
mov
mov
push
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
call
xor
test
setne
test
jne
push
call
mov
mov
mov
call
add
mov
mov
mov
test
je
test
jne
movzx
push
call
test
je
push
push
mov
call
jmp
xor
jmp
mov
lea
nop
mov
add
test
jne
sub
sar
push
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
mov
push
mov
mov
mov
lea
mov
add
test
jne
sub
push
push
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
push
mov
push
mov
cmp
je
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
add
cmp
mov
jne
mov
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
mov
call
mov
lea
mov
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
mov
call
mov
lea
mov
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
push
mov
push
mov
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
mov
mov
push
lea
mov
mov
call
mov
push
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
push
mov
mov
mov
push
lea
mov
mov
call
mov
push
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
lea
mov
call
mov
mov
push
lea
call
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
lea
mov
call
mov
mov
mov
mov
push
push
push
lea
call
lea
push
mov
call
mov
push
push
lea
call
mov
push
push
lea
call
mov
add
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
call
mov
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
mov
add
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
mov
mov
xor
cmp
je
push
call
add
mov
call
mov
mov
cmp
je
mov
cmp
je
push
call
add
mov
mov
lea
call
mov
mov
cmp
mov
je
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
call
mov
call
test
je
push
call
add
mov
mov
test
je
mov
call
jmp
push
call
mov
call
add
inc
and
in
inc
pop
push
aad
jmp
sbb
sub
or
xchg
cld
lock
inc
pop
sbb
dec
icebp
xor
popa
mov
pusha
aaa
push
daa
sar
sub
sbb
fxch
pop
mov
cvtps2pi
push
int3
sbb
cli
mov
inc
push
xor
dec
dec
pop
(bad)
cmps
leave
adc
pop
sub
pop
ja
or
sbb
mov
pop
xchg
lods
dec
(bad)
sub
adc
sub
mov
loopne
xchg
xchg
push
loope
sbb
xchg
je
jbe
test
dec
shl
adc
mov
fcmovbe
int3
push
mov
lock
inc
(bad)
mov
scas
les
jmp
inc
(bad)
out
(bad)
cmp
out
mov
rcr
ins
xlat
xor
enter
test
add
ret
push
ss
adc
fbld
cld
test
xchg
add
shl
in
pop
ret
test
retf
ror
addr16
cdq
shr
jecxz
inc
push
pusha
jne
iret
mov
in
fdiv
inc
push
and
mov
mov
fsub
in
and
pop
xor
jge
add
aad
jl
aad
add
aad
aam
int3
ret
mov
inc
add
and
aaa
xor
ins
push
adc
inc
pusha
cdq
in
adc
loope
jb
xchg
ror
not
ins
push
dec
add
inc
add
ins
mov
sahf
mov
pushf
aad
and
cmps
mov
das
addr16
es
out
aaa
fiadd
xor
pop
mov
sbb
loop
and
pop
and
mov
jge
mov
repnz
test
push
in
bound
sbb
in
jmp
add
sar
vcmpps
rcl
stc
adc
and
out
pop
clc
jecxz
jge
aad
add
popa
sub
mov
movs
adc
xor
in
sub
sbb
xor
es
test
rcr
pop
dec
imul
sahf
ret
cld
adc
inc
cmp
push
mov
or
xchg
mov
rcl
mov
retf
repnz
shl
in
pushf
add
je
jne
movs
jae
jecxz
je
jp
xchg
adc
sti
icebp
pop
loopne
pop
and
jl
test
inc
sbb
aam
daa
push
jno
and
sbb
aad
ds
mov
push
dec
mov
icebp
fs
sub
das
adc
adc
das
movlps
test
inc
in
xchg
dec
push
mov
ja
mov
adc
xor
pop
dec
daa
jne
cmps
mov
daa
(bad)
rcr
sub
adc
or
pop
test
xchg
add
aaa
test
(bad)
and
dec
xor
dec
ins
cmps
(bad)
call
xlat
dec
ficom
lea
push
xor
xchg
addr16
iret
jne
xchg
and
cmp
lock
int
es
bound
shl
jo
popf
push
sub
push
(bad)
std
cwde
sar
add
ins
(bad)
repnz
cs
inc
mov
mov
xor
pop
add
jb
out
push
rol
sahf
mov
and
jg
sbb
pop
mov
pop
xchg
lea
pop
int3
mov
in
fistp
inc
lock
repz
cdq
inc
ja
add
std
cmp
and
shl
cmps
imul
rep
cli
test
cmp
sbb
(bad)
imul
mov
xor
jmp
adc
jl
push
adc
(bad)
bound
sbb
aaa
nop
mov
ja
test
ret
xchg
and
cs
pusha
inc
xchg
(bad)
movs
test
sbb
rcr
(bad)
sub
mov
(bad)
jp
(bad)
sti
aas
stc
das
outs
push
and
jns
aam
data16
icebp
jmp
in
mov
sahf
mov
xchg
xchg
mov
data16
call
adc
push
les
(bad)
xchg
icebp
ss
mov
adc
imul
(bad)
out
cmc
xor
addr16
jmp
sub
sub
(bad)
enter
jle
movs
mov
push
fisub
mov
ret
pop
ret
imul
cmps
mov
mov
popa
dec
cmp
gs
in
nop
iret
mov
mov
imul
jge
dec
das
xor
sub
push
push
mov
jns
ret
mov
test
iret
stos
push
push
lods
inc
cmp
jo
das
push
fs
test
sub
adc
push
aaa
xchg
idiv
js
daa
pusha
mov
or
fild
leave
xor
test
mov
fimul
jle
test
pop
jl
and
xor
add
mov
or
dec
push
and
pop
jns
add
add
out
jo
cmp
addr16
(bad)
lods
pushf
(bad)
loop
mov
mov
pop
pop
inc
xchg
jno
ins
push
pusha
cmp
out
int3
pop
shl
les
hlt
mov
loope
sbb
outs
jb
adc
xor
adc
(bad)
in
mov
(bad)
and
cmps
sub
mov
daa
xor
call
push
mov
jns
adc
pop
popf
loopne
in
cld
les
dec
cmp
dec
mov
mov
sub
cwde
dec
mov
(bad)
iret
jns
dec
sti
call
pop
push
push
push
out
popa
ds
enter
(bad)
fsubp
cmps
push
add
adc
psubb
dec
xor
icebp
cmp
adc
mov
xor
btc
mov
push
call
jbe
and
jnp
jbe
add
push
xchg
mov
pop
int
cli
cmp
rol
iret
ss
adc
fimul
pop
(bad)
mov
jmp
or
jg
das
test
ror
scas
inc
stos
dec
jbe
sbb
add
push
fs
test
dec
test
and
adc
aas
and
xchg
aas
fs
sysret
and
jle
into
adc
hlt
lds
inc
mov
inc
das
out
sub
in
jne
xchg
lahf
xchg
or
out
and
dec
pop
pop
hlt
hlt
shl
adc
arpl
es
sbb
popa
fwait
popa
mov
aaa
mov
nop
sub
jp
outs
mov
call
ja
push
adc
scas
fstp
pop
sub
jp
sbb
and
arpl
and
cmp
aad
or
add
sub
imul
cmp
icebp
jmp
retf
cmp
xchg
jb
xchg
sub
xor
or
lea
dec
sbb
aam
mov
mov
leave
inc
jne
pop
sbb
movs
xor
hlt
xchg
pop
outs
push
ret
and
test
mov
test
xchg
ins
sbb
and
es
pop
or
mov
in
out
sub
inc
sbb
ins
push
es
ins
int3
push
daa
add
jb
cmc
mov
loop
scas
out
out
xor
mov
ds
dec
add
xchg
int
sbb
mov
les
mov
popa
cli
arpl
xor
jo
pop
out
test
inc
cmc
and
mov
(bad)
mov
and
add
jecxz
popa
das
stos
xor
es
inc
or
adc
scas
sar
icebp
pop
or
add
inc
jbe
repnz
scas
pusha
jecxz
call
test
add
xchg
inc
mov
pop
enter
mov
inc
ja
xchg
mov
lea
cli
test
jle
cld
and
(bad)
jae
lods
gs
in
or
and
mov
in
inc
or
adc
rol
lods
xchg
shl
ins
repnz
xor
neg
jecxz
test
in
mov
sub
pop
pushf
ror
call
(bad)
repnz
rcl
xchg
mov
xor
jg
je
mov
jg
mov
and
mov
mov
cmp
not
aam
xor
jae
adc
fld
mov
fwait
ds
adc
add
outs
cli
or
mov
xchg
addr16
push
jae
xchg
aam
cmc
adc
xor
outs
xchg
ja
push
jns
sbb
push
pop
push
cmps
jmp
xchg
inc
add
mov
sbb
xor
cmp
clc
repz
xor
jmp
(bad)
in
push
out
jl
and
lds
aas
mov
xor
(bad)
mov
scas
push
push
sub
push
xchg
clc
mov
outs
shl
repnz
les
out
xor
xor
dec
push
jge
outs
sbb
push
mov
cli
jne
sub
jne
add
outs
ins
or
inc
xlat
adc
adc
lds
(bad)
jp
in
icebp
xchg
sub
xchg
inc
out
inc
push
sub
xor
dec
jne
dec
stos
push
dec
inc
mov
inc
repz
sub
enter
repz
fldenv
ret
repnz
and
jecxz
loope
mov
cmps
pop
cmp
push
inc
xchg
ror
push
or
mov
jns
jle
cld
rcr
push
add
mov
in
and
in
fdivr
stc
dec
int3
arpl
dec
leave
or
push
pop
pop
fdivrp
leave
and
je
aaa
movs
adc
in
scas
rol
cdq
add
add
xor
and
rcl
add
mov
repz
inc
icebp
(bad)
mov
rcr
icebp
sti
mov
add
add
jge
xlat
data16
mov
ret
and
rcl
in
ss
shl
mov
adc
dec
cwde
xor
sub
gs
pavgb
sbb
mov
xor
xor
bound
jp
imul
cmps
in
xlat
cmp
sahf
dec
cmps
cli
xchg
and
fs
ds
mov
shl
mov
sub
mov
cmp
jns
mov
push
into
daa
mov
out
dec
imul
jle
ret
push
inc
icebp
jbe
in
adc
add
jb
cmps
mov
xchg
loopne
add
xor
test
rcl
cmps
push
lds
daa
pusha
xchg
and
or
lock
cmp
out
mov
fld
xchg
lds
lahf
push
mov
sar
cmp
je
movs
imul
into
rol
pop
inc
pop
in
mov
xchg
shl
pushf
aas
fcmovbe
call
inc
mov
or
mov
pop
sub
xor
push
dec
sbb
push
into
xchg
iret
das
cmp
or
inc
or
add
pusha
xor
push
ja
mov
sar
xchg
cli
stc
dec
mov
cmp
and
repnz
sbb
mov
movs
add
mov
and
ret
inc
xchg
pop
dec
test
sahf
push
push
sub
xchg
adc
test
mov
pop
pop
pop
int3
in
sbb
movs
loop
push
dec
push
sar
jp
push
loopne
mov
jns
push
js
(bad)
sbb
cld
iret
loopne
xor
shl
xor
jbe
neg
out
(bad)
test
ror
cmp
scas
or
xor
jo
pop
add
jle
out
sahf
imul
sbb
clc
test
lods
add
add
es
push
dec
int3
inc
xlat
fadd
mov
pop
inc
inc
and
repnz
push
pusha
sbb
pop
push
mov
jecxz
sbb
add
cli
outs
xlat
inc
cmp
fsub
xchg
das
shl
pop
test
test
mov
cld
xor
sbb
inc
ret
(bad)
push
js
cwde
in
sbb
pushf
add
(bad)
jae
sbb
fst
dec
pop
adc
mov
ds
mov
xor
sub
add
add
push
jbe
inc
loopne
in
cmp
mov
repz
xor
dec
sti
dec
cmps
or
test
add
imul
add
and
inc
rol
in
in
xor
and
adc
(bad)
sahf
xchg
jb
dec
call
inc
xchg
push
in
pop
and
inc
pop
cmps
adc
sbb
aaa
bound
mov
or
es
inc
push
test
es
push
mov
dec
neg
or
icebp
(bad)
xor
ror
xor
and
mov
fdiv
scas
pop
in
fadd
dec
adc
scas
add
aaa
or
cmp
pop
mov
xchg
das
jae
ins
xchg
push
ret
mov
(bad)
and
xchg
inc
jb
es
into
inc
xchg
in
and
pushf
out
inc
push
out
pop
or
mov
stc
out
and
xor
xchg
jne
pop
add
mov
rcr
and
jb
jge
xchg
sbb
icebp
std
pop
das
cld
or
stos
push
push
addr16
push
jbe
das
adc
call
cmp
or
shl
pusha
pop
not
shl
div
jno
sti
mov
mov
inc
aaa
mov
mov
test
mov
repz
dec
loop
idiv
mov
inc
(bad)
je
cmc
cdq
xchg
dec
mov
mov
ret
inc
adc
jmp
push
aad
push
and
mov
(bad)
stc
xor
ret
scas
xor
mov
int
cmp
test
inc
add
xchg
data16
dec
xchg
cld
push
push
dec
adc
pop
adc
les
mov
mov
ror
imul
inc
sahf
mov
or
xchg
sbb
mov
popa
movs
push
push
adc
int
cmp
loopne
xchg
push
sub
cmp
xor
adc
mov
movs
xor
ror
inc
push
xchg
es
mov
dec
dec
sub
jbe
rcr
cmp
stos
neg
lds
cmps
out
sahf
xchg
xchg
jae
pop
ret
inc
repnz
jno
mov
push
xchg
mov
into
fs
pop
mov
or
movs
ror
cmps
push
dec
mov
sub
test
stos
clc
cmps
adc
push
jecxz
or
pop
in
xchg
(bad)
arpl
sub
push
mov
push
xor
inc
or
test
xlat
mov
jno
scas
or
sti
aad
shl
ins
cmps
into
jbe
push
sbb
ins
arpl
adc
push
jmp
rol
arpl
das
movs
out
add
fmul
jbe
call
ret
and
xor
and
fistp
and
out
aad
test
xchg
adc
sub
cdq
loopne
sub
fcomp
push
popa
icebp
js
ficom
call
lahf
push
mov
cmp
adc
push
push
das
and
ss
push
push
ret
(bad)
(bad)
cmp
bound
ret
fldenv
adc
mov
enter
hlt
xor
or
mov
push
outs
neg
push
push
inc
jge
stos
cld
inc
mov
retf
mov
jmp
(bad)
stos
xlat
out
out
rcl
sbb
adc
mov
test
cmp
cmps
jno
mov
xchg
call
scas
out
call
mov
and
push
test
or
mov
inc
(bad)
push
mov
loopne
add
rcr
mov
ror
xchg
test
aas
jmp
shr
sbb
div
inc
xlat
inc
jbe
jns
cmps
rol
cmp
js
rol
and
xchg
mov
arpl
mov
xor
xchg
enter
je
inc
sub
push
sub
int
jns
mov
bsf
xchg
int3
cmps
xor
rcl
test
repnz
cmc
cs
xor
jb
fcom
nop
retf
push
and
jo
cmp
lock
xchg
outs
cdq
xor
inc
push
mov
xchg
xchg
adc
aam
xchg
sar
mov
pop
stos
jp
cmp
rcr
cmp
aad
pop
ficomp
movs
sbb
adc
inc
ret
xchg
ss
adc
sbb
mov
xor
push
jne
push
shl
rcr
sar
and
lea
icebp
xchg
push
push
or
push
inc
fs
sar
aad
psadbw
add
xor
inc
pop
ds
rcr
test
adc
mov
dec
push
outs
(bad)
je
(bad)
fdivr
aaa
push
ret
imul
jle
pop
test
iret
inc
out
inc
cmp
les
cmps
inc
dec
add
idiv
int3
jns
mov
mov
add
stos
inc
adc
fild
mov
test
mov
mov
pop
jb
inc
jnp
sub
xor
test
test
pop
(bad)
adc
mov
and
popa
call
xchg
inc
rcr
clc
adc
jns
icebp
int3
mov
loopne
fwait
mov
pop
jne
push
mov
stos
pop
mov
push
scas
imul
inc
retf
ss
or
inc
sar
test
in
inc
sub
leave
rol
cmp
xor
dec
jecxz
dec
call
cld
adc
pop
add
push
push
pop
sti
sti
mov
jmp
ins
test
shl
test
arpl
leave
jno
hlt
ss
pop
adc
leave
out
cld
cmps
mov
push
sub
jo
sub
pop
pop
sbb
data16
mov
push
icebp
arpl
or
sub
out
icebp
cmp
pop
jle
in
scas
jbe
xor
loop
stos
movs
and
xor
push
mov
inc
cmps
fisub
dec
and
aad
inc
adc
inc
add
inc
mov
jle
(bad)
cs
xchg
pop
neg
xchg
pop
cmp
sbb
mov
add
push
imul
fsubrp
loope
inc
dec
adc
or
push
test
addr16
or
mov
sbb
push
adc
mov
sbb
gs
adc
adc
jae
pusha
adc
pop
js
addr16
loopne
or
movs
mov
jecxz
dec
(bad)
cmps
in
mov
xor
adc
fcom
xor
pusha
xchg
xor
iret
in
fdiv
add
mov
test
ffree
imul
inc
shld
add
shl
xor
shl
fs
sbb
loope
ins
cmp
shl
(bad)
fcom
lock
xchg
cmps
shl
call
shl
ins
push
push
shl
sahf
data16
mov
xor
retf
xlat
and
inc
data16
shl
pop
fcom
adc
fdivrp
sbb
push
push
cmp
adc
jp
push
push
mov
adc
rcl
sahf
xchg
pop
mov
ror
and
pop
or
dec
imul
mov
fwait
jno
adc
mov
xor
cmp
sbb
jo
and
xchg
pusha
aad
mov
cmp
xchg
add
sub
in
aas
add
dec
daa
cwde
fs
mov
add
mov
not
fcom
icebp
out
sbb
adc
(bad)
jmp
inc
rol
mov
pushf
mov
push
cs
pop
sub
jns
mov
inc
and
outs
test
sbb
outs
or
in
fld
pusha
jb
xor
push
test
(bad)
jp
and
add
mov
push
lds
push
mov
adc
dec
das
mov
mov
ret
pop
dec
cmp
adc
pop
xchg
xchg
xchg
jb
push
popf
dec
dec
shl
jmp
pop
sub
mov
pop
push
ss
cmp
lds
lods
test
add
xchg
sub
jo
push
lods
jb
xor
add
xor
addr16
jns
mov
out
shl
in
pushf
add
and
mov
nop
aam
into
sub
repz
cwde
inc
push
jl
lock
or
dec
xor
jae
mov
(bad)
xor
mov
cmps
mov
mov
cmps
mul
imul
xlat
xor
jno
and
test
addr16
leave
aad
fidiv
pusha
sub
dec
add
push
and
inc
pop
adc
xor
call
and
test
push
(bad)
neg
xchg
adc
xchg
dec
cmps
xor
test
loope
into
neg
neg
rcl
ds
fild
addr16
push
int
movs
and
ret
cld
movs
xchg
or
sti
out
jmp
test
adc
into
add
fs
ret
jle
clc
inc
(bad)
sub
pusha
xchg
cld
pop
sbb
inc
push
add
push
adc
ins
jne
ret
(bad)
rol
mov
int
(bad)
mov
jb
add
outs
std
les
ret
bound
call
ret
int3
hlt
jmp
in
mov
fisub
inc
mov
xor
rcl
jle
ss
jne
add
xchg
sub
rol
and
jbe
mov
xor
push
movs
(bad)
sub
or
xchg
test
rol
call
pop
mov
add
add
jo
out
mov
sub
jle
imul
rcr
cmp
sub
repnz
push
lods
xor
popf
mov
(bad)
push
and
and
add
cmc
xchg
inc
jbe
daa
les
popfw
push
outs
xchg
push
push
cli
add
mov
les
mov
cmp
hlt
push
mov
pop
xchg
xchg
xchg
popa
inc
mov
aas
ins
popa
stos
popa
push
dec
sbb
ss
xor
dec
xchg
not
push
pop
mov
cmp
or
mov
xor
push
mov
mov
inc
call
sti
xor
push
dec
and
aas
popa
cwde
rcl
jb
(bad)
imul
in
lods
ins
add
cld
inc
and
xchg
popa
and
mov
and
push
jb
and
pop
or
sub
fcom
rcr
push
adc
xor
imul
push
(bad)
call
shl
inc
push
outs
imul
pop
xor
sub
pop
xchg
mov
nop
dec
dec
inc
xor
mov
push
mov
add
push
lods
jmp
add
rcl
adc
int3
adc
cwde
or
mul
(bad)
loope
hlt
mov
adc
push
daa
xor
popa
sub
sub
mov
(bad)
mov
inc
xchg
shl
dec
cmp
mov
xor
sahf
cmp
add
xchg
repnz
add
rcl
inc
fisttp
mov
ret
call
push
inc
or
and
xor
and
pusha
xchg
sbb
ss
sahf
loope
dec
ret
movs
sub
imul
test
push
add
cmp
sar
mov
jne
popf
mov
adc
adc
push
sar
je
(bad)
dec
je
(bad)
cmp
xor
loope
xchg
jnp
rcr
aad
stc
fld
das
call
(bad)
jne
xchg
add
push
pushf
push
ficomp
rcl
xchg
aam
cmps
mov
mov
add
gs
pop
test
pop
outs
cmps
sbb
test
pop
out
add
inc
fst
lods
and
xchg
xadd
xchg
sub
mov
js
inc
scas
xchg
jmp
xchg
and
xchg
push
outs
add
aam
mov
add
daa
imul
(bad)
shl
cmps
mov
cmps
cmp
xor
jg
add
adc
dec
cdq
or
push
xor
mov
rcl
rol
cwde
sbb
jo
sbb
fimul
jmp
and
cmps
out
cdq
rcl
push
div
(bad)
shl
retf
lock
xlat
rol
(bad)
fst
add
out
xchg
xchg
sub
sub
sbb
enter
sub
add
cmp
mov
shr
pop
jecxz
shl
adc
lea
pop
xlat
xlat
xchg
scas
(bad)
aad
movs
jns
dec
lock
call
sub
or
test
adc
je
aaa
and
and
aaa
iret
adc
loopne
loope
add
adc
push
sbb
nop
push
jb
xor
scas
dec
call
iret
pop
push
fs
mov
dec
cmp
fisub
lock
scas
rcl
clc
imul
mov
xchg
jmp
sbb
cmp
pop
call
loopne
xchg
scas
mov
mov
cmps
jno
push
ja
fist
mov
pop
cmp
aas
in
aaa
and
aam
test
addr16
cmps
xchg
and
inc
imul
pop
enter
fstp
test
push
addr16
cmps
scas
xor
sbb
pop
xor
jno
adc
lods
sti
and
and
and
cmp
or
(bad)
cmp
lahf
jmp
ret
xchg
rcl
lds
ja
mov
and
div
sub
jbe
ror
add
mov
loopne
push
iret
in
sbb
and
enter
cli
in
test
or
push
sbb
dec
add
cmc
in
sub
dec
ror
mov
pusha
push
adc
jg
xchg
gs
adc
cwde
into
add
sbb
aad
and
dec
pusha
(bad)
jo
das
leave
lock
into
xchg
aam
loop
orps
mov
out
test
dec
lods
loopne
popa
aaa
mov
loope
idiv
mov
mov
sub
rcr
ret
pop
das
adc
loop
cmps
jmp
gs
mov
jmp
push
jl
paddd
(bad)
xchg
mov
mov
cld
adc
iret
and
push
and
cmp
jmp
push
rol
push
sub
arpl
push
add
adc
lock
xor
sub
push
inc
dec
aas
mov
adc
fcom
jmp
es
ja
fcomi
bt
icebp
pop
cmp
int3
test
xlat
fdiv
mov
fnsave
fld
mov
lock
out
jo
jne
stos
pusha
(bad)
push
jmp
mov
inc
hlt
and
test
push
out
add
aaa
aam
bound
loopne
mov
not
sub
xchg
or
arpl
push
mov
daa
xchg
pop
mov
xchg
mov
out
arpl
repnz
icebp
xor
push
inc
int
mov
jmp
div
dec
loop
xor
mov
adc
in
push
pop
jae
jl
out
mov
sbb
mov
dec
mov
pushf
mov
pop
inc
inc
push
mov
(bad)
push
push
xchg
(bad)
in
mov
(bad)
repz
xchg
mov
pop
xor
icebp
xchg
pop
push
inc
cmps
ficom
aaa
pushf
or
mov
mov
or
inc
retf
mov
adc
adc
out
cmp
mov
les
imul
enter
sub
cmp
add
xlat
and
imul
in
mov
jns
sub
jae
out
or
in
scas
jo
mov
and
repnz
loope
mov
ins
sahf
xchg
xchg
xchg
adc
and
adc
add
inc
in
mov
add
stos
xor
outs
div
xor
jno
push
(bad)
adc
lods
mov
sub
inc
inc
lahf
js
daa
add
arpl
loopne
cs
sbb
or
mov
and
or
in
ins
inc
call
rol
dec
mov
inc
(bad)
cmps
sub
mov
call
mov
and
pusha
and
rcl
shl
(bad)
enter
adc
add
xor
pop
(bad)
div
jo
pop
das
stos
movs
ds
sti
inc
xor
mov
adc
movs
dec
dec
shl
adc
push
mov
idiv
inc
(bad)
jl
les
jo
mov
rol
fnstcw
inc
cs
jne
scas
movs
xor
push
pop
and
sahf
inc
cmp
cmp
jle
retf
sbb
(bad)
and
push
mov
mov
ss
add
ret
push
idiv
pop
dec
scas
sbb
outs
adc
shl
dec
mov
sub
inc
(bad)
aad
outs
xchg
das
div
daa
ret
icebp
xchg
(bad)
and
loopne
mov
and
in
sub
push
iret
cmp
sbb
mov
mov
adc
dec
mov
pop
aad
(bad)
and
pop
add
mov
mov
fwait
mov
mov
movs
mov
je
das
xchg
js
mov
call
test
dec
add
pushf
push
in
lock
push
push
daa
jo
mov
or
loopne
jno
add
adc
repnz
and
popa
or
ret
das
cmp
and
lock
adc
mov
or
inc
ds
fimul
push
xchg
push
xor
shr
in
jae
push
aaa
xor
xchg
dec
out
popf
jp
(bad)
mov
cmp
adc
cmp
add
out
retf
xchg
xor
sbb
mov
pop
cld
add
pop
sub
nop
cmp
lods
add
xchg
dec
pop
jbe
dec
cwde
pop
add
jge
shl
neg
add
aas
ja
gs
das
ss
jo
inc
sub
aad
(bad)
lock
cmp
fdivr
test
xor
push
into
jb
mov
les
jns
in
fcomp
aad
in
ins
ror
adc
xchg
rcl
xchg
jb
xchg
push
xchg
pop
loop
add
daa
mov
jb
mov
dec
and
mov
retf
in
jg
mov
dec
adc
sbb
mul
iret
mov
pop
call
ret
xchg
test
rcl
add
add
dec
aam
push
push
out
xor
add
clc
add
in
and
dec
mov
xlat
push
test
(bad)
or
xor
scas
leave
cmp
mov
cs
mov
stc
fwait
sub
retf
inc
cs
or
add
xchg
dec
inc
mov
lock
sub
daa
pop
lahf
neg
enter
ins
pop
jo
data16
mov
mov
sub
repz
std
adc
and
and
call
popf
imul
arpl
and
sub
mov
test
pop
aas
nop
lds
out
int3
fmul
and
(bad)
mov
shl
jno
retf
scas
retf
sub
sub
imul
push
rol
jns
xchg
xchg
lock
xchg
(bad)
sub
not
outs
dec
lods
xor
cdq
fdivp
jmp
es
pop
xor
cmp
jno
outs
dec
pop
cld
ss
push
or
add
pusha
loopne
out
cmc
mov
sub
push
dec
jmp
or
adc
icebp
sahf
sbb
jo
(bad)
shl
nop
(bad)
fwait
mov
mov
dec
add
ss
add
sbb
sub
stc
xchg
nop
repnz
cmp
aad
pop
je
jmp
mov
cmp
mov
fldenv
jno
add
aad
es
pusha
cmp
movs
pusha
sbb
out
adc
out
push
(bad)
leave
jb
sub
mov
nop
xchg
push
xlat
int
repz
fnstenv
and
xchg
je
iretw
lods
mov
add
mov
add
repz
mov
mov
shl
shl
popa
out
ss
shl
inc
fsub
mov
push
cdq
inc
shr
fbld
jbe
stos
fadd
adc
pop
int
jnp
pop
repnz
std
ss
xchg
sbb
iret
mov
ja
repnz
icebp
fbstp
mov
int
test
aas
mov
sbb
mov
sub
ss
sbb
in
inc
dec
xchg
push
xchg
popa
sub
out
or
jb
or
adc
fild
addr16
mov
sahf
mov
repz
xchg
hlt
jmp
and
std
scas
lock
xor
jns
dec
ror
jno
mov
lds
mov
(bad)
loopne
shr
push
pop
fadd
fwait
fwait
sub
test
jne
and
xchg
inc
in
(bad)
mov
leave
push
test
xchg
call
inc
ja
jecxz
test
shl
popf
jnp
fnstenv
in
add
lods
loopne
ret
or
outs
scas
into
clc
int
or
add
add
stc
mov
addr16
(bad)
dec
push
jbe
lds
or
xchg
sub
add
mov
stc
inc
into
push
int
mov
or
push
mov
arpl
adc
mov
xchg
loopne
mov
pop
out
jmp
mov
retf
and
mov
xchg
push
std
inc
or
inc
mov
test
test
jp
iret
adc
mov
scas
add
sahf
imul
dec
ins
mov
push
rol
xchg
mov
(bad)
inc
iret
(bad)
imul
push
and
jecxz
push
leave
ror
dec
je
cs
adc
sbb
mov
cmps
or
into
shl
ret
xchg
rcr
push
call
sar
jne
pop
add
call
out
shr
xchg
adc
rcl
in
add
push
xor
test
pop
dec
xchg
xchg
jl
xor
rol
push
(bad)
enter
push
ror
jbe
and
aad
inc
loop
inc
pop
rcl
xchg
mov
pop
xor
sbb
push
arpl
rcr
cmc
add
xor
test
pop
les
inc
push
into
and
jmp
mov
sbb
xlat
or
jle
push
sub
or
mov
cs
test
mov
shl
mov
sbb
add
out
cmp
add
xor
dec
test
loop
and
xchg
jnp
push
out
xchg
xchg
icebp
mov
nop
nop
adc
cmp
enter
nop
mov
mov
jne
pop
jo
xor
jae
dec
jns
add
clc
dec
call
mov
add
pop
scas
dec
sub
cmp
xor
mov
dec
(bad)
adc
std
fs
scas
xchg
inc
out
adc
mov
mov
imul
loop
add
sahf
dec
add
adc
gs
add
(bad)
jl
sbb
lahf
and
pop
cmps
jmp
mov
aaa
retf
imul
mov
inc
(bad)
aam
inc
out
lods
adc
mov
pusha
ret
pop
add
or
daa
add
jno
aam
test
inc
mov
rol
and
cmp
sub
pop
adc
add
mov
mov
mov
enter
dec
iret
psrlq
fs
loop
add
inc
dec
or
outs
les
aad
clc
pushf
in
mov
dec
sub
jno
mov
cld
es
test
lds
scas
jg
out
punpckldq
sahf
(bad)
out
movs
inc
dec
movs
imul
push
addr16
out
pop
add
stos
xchg
push
cmp
mov
les
in
nop
push
es
jge
in
jne
and
sub
or
lods
jecxz
push
retf
mov
xchg
cmps
out
push
jmp
loope
mov
dec
pop
fsubr
jmp
rol
shr
mov
cmps
mov
mov
out
es
repnz
retf
jno
scas
loop
in
xor
stc
mov
add
fidiv
push
fidiv
dec
scas
int
lods
shl
sub
daa
inc
ja
inc
mov
bound
fidiv
mov
ret
loop
mov
xchg
jge
mov
mov
mov
rcl
mov
adc
or
scas
jno
mov
push
mov
xchg
jno
push
pop
mov
sbb
repz
(bad)
push
arpl
shl
ficom
push
lea
call
jne
xlat
mov
lock
add
popa
xchg
and
in
or
sub
mov
lds
add
push
pop
xor
in
xchg
jle
xchg
(bad)
leave
test
sub
adc
ins
repz
ins
jnp
iret
inc
and
mov
rcr
fimul
xor
xchg
pop
cmps
repz
xchg
loope
ss
lods
das
in
dec
pop
mov
jg
sbb
cdq
pop
ins
mov
sar
imul
cwde
mov
leave
cs
in
(bad)
bound
inc
xchg
cli
inc
repz
add
inc
outs
mov
aad
or
repz
push
mov
cmps
in
aas
fidivr
cmp
sub
or
enter
jecxz
mov
out
test
jae
add
or
and
adc
inc
mov
push
div
mov
loop
pusha
gs
push
(bad)
cmps
es
xchg
bound
push
mov
jecxz
mov
jp
pushf
cdq
(bad)
pushf
jb
movs
cmp
fstp
js
ins
push
daa
retf
sub
fstp
(bad)
fcomip
dec
loopne
aad
or
call
inc
std
add
and
shl
sbb
mov
inc
jl
lock
mov
sbb
mov
das
jns
jp
jl
jl
jne
lea
cmp
mov
xchg
sahf
icebp
push
push
jns
scas
push
jp
add
mov
(bad)
outs
pop
inc
add
pop
adc
pop
pop
mov
pop
xchg
sar
mov
mov
inc
jl
cmps
call
es
clc
xchg
xor
out
pop
jge
cmps
mov
das
fdivrp
push
xlat
jmp
push
xchg
lock
inc
mul
xor
aad
push
mov
repnz
hlt
push
popa
arpl
jo
jne
lea
pop
shl
xor
fistp
cmp
cmps
push
jae
jp
and
mov
div
hlt
cmps
inc
idiv
(bad)
cli
mov
repz
dec
or
enter
nop
xchg
xchg
or
mov
mov
mov
repz
jmp
call
leave
loopne
inc
xchg
lock
je
loop
add
arpl
stos
add
aad
xlat
bound
dec
nop
(bad)
adc
aas
gs
xchg
outs
and
hlt
cmp
out
cmp
pop
jp
test
sar
lods
stos
das
xchg
daa
push
imul
mov
jp
lock
std
pop
ja
enter
inc
hlt
movs
cmp
push
out
jbe
add
and
popf
xor
mov
lods
sbb
jecxz
into
cmps
not
mov
mul
mov
mov
xor
ds
push
addr16
in
fnstenv
xchg
shl
push
icebp
mov
pop
loopne
pusha
adc
sbb
mul
cs
les
mov
mov
ret
ret
loope
dec
inc
cwde
inc
xor
outs
adc
shl
(bad)
xor
dec
(bad)
sbb
cmp
push
pusha
pop
mov
jbe
push
mov
pop
pop
sahf
ror
test
dec
mov
fiadd
mov
xor
test
ds
push
lahf
lock
pop
push
dec
inc
xor
push
stos
dec
xor
push
cmovbe
mov
cld
mov
mov
cmc
mov
xor
imul
sar
aam
lods
movs
mov
ret
imul
fwait
jo
xchg
add
xchg
jnp
or
xchg
dec
pop
nop
push
out
mov
jg
fldenv
cmc
pop
xor
inc
add
mov
or
mov
fs
cmp
xchg
daa
inc
arpl
lock
adc
sbb
ja
sub
cmps
jle
rol
sbb
or
je
add
or
cli
movs
xchg
in
jl
mov
mov
outs
imul
jmp
sub
inc
push
pop
mov
and
out
aas
pushf
xor
or
xchg
xchg
add
test
dec
mov
in
sahf
xchg
mov
dec
loope
pusha
xchg
imul
add
xor
jg
movs
or
add
imul
xchg
adc
or
(bad)
pop
(bad)
repz
rcl
inc
popa
popf
push
inc
inc
shr
adc
or
in
and
sub
imul
fbld
inc
test
shr
jg
addr16
xchg
mov
xor
aas
xor
fisub
repnz
push
cmp
sti
clc
sub
jo
leave
(bad)
in
and
jb
out
ins
cs
push
add
push
mov
or
shl
lds
cmps
jne
adc
push
adc
popa
ja
cwde
idiv
fisubr
mov
(bad)
xchg
int3
adc
jecxz
push
dec
shr
xor
(bad)
loope
test
hlt
mov
push
xor
(bad)
scas
fcomp
jmp
cwde
xor
sub
scas
div
jo
inc
sub
adc
mov
les
xchg
daa
xchg
lods
mov
loope
ds
loop
inc
sbb
add
push
sbb
addr16
jmp
or
dec
and
mov
mov
add
iret
sub
xor
xor
jbe
test
and
js
add
inc
mov
mov
lds
(bad)
fdivr
movs
mov
fnstenv
xor
push
inc
add
ins
ds
push
xor
xchg
rcl
xchg
mov
push
shl
out
dec
outs
inc
fcomp
imul
xchg
int3
xrelease
ja
mov
out
or
mov
mov
inc
cmps
jne
sbb
js
and
fsub
je
shl
cli
mov
sub
aas
xor
daa
jp
cld
jae
(bad)
mov
mov
sbb
and
push
gs
jno
pop
mov
jns
lock
xor
out
xchg
jo
scas
push
push
sub
xor
add
sub
ret
jno
xchg
jnp
sbb
cmp
pop
int
neg
mov
mov
call
stos
leave
mov
(bad)
(bad)
mov
out
xor
jg
mov
loop
popa
push
inc
sub
jno
or
outs
and
add
(bad)
into
cs
lock
cmps
int3
mov
addr16
das
(bad)
and
loop
out
clc
push
popf
hlt
xchg
add
xor
push
cld
sbb
outs
adc
xor
pop
pop
pop
and
mov
ins
inc
xor
repnz
lods
adc
gs
dec
mov
pop
xor
dec
pop
loopne
loope
sbb
pop
(bad)
loope
cmc
shr
mul
aaa
lock
add
xchg
jb
mov
mov
or
ret
icebp
icebp
or
(bad)
pusha
push
mov
movs
adc
jne
xchg
out
add
lock
mov
addr16
add
ja
push
call
jne
aam
jo
pop
mov
mov
lahf
lock
lock
inc
cs
test
das
mov
out
in
lea
or
cmp
sub
adc
xor
rcr
sub
cmp
xchg
sub
adc
add
mov
push
push
shl
mov
mov
mov
rcr
pusha
or
mov
and
or
aad
loop
lods
jbe
inc
out
rol
mov
sub
inc
cwde
add
cmp
dec
rcl
adc
(bad)
in
mov
out
shl
das
pop
outs
mov
test
(bad)
popa
inc
ds
push
xchg
inc
sar
stos
pop
repnz
push
inc
fwait
lock
dec
pop
addr16
cmp
mov
jo
push
mov
aaa
push
jg
jo
leave
fsub
hlt
push
pop
pop
jns
dec
ss
in
adc
mov
push
or
push
imul
call
sbb
add
xchg
mov
pop
xchg
out
lods
inc
lods
bnd
enter
or
fisttp
cmc
fwait
inc
test
(bad)
xor
sbb
das
jae
mov
sti
push
add
ret
xlat
rol
inc
pushf
sbb
dec
mov
mov
inc
sbb
lds
jp
pop
fadd
cmps
fcmovnbe
and
xor
imul
inc
and
ror
xor
xor
lods
add
cmc
das
retf
out
out
ins
div
lods
push
push
je
push
pop
clc
adc
pop
daa
(bad)
inc
nop
(bad)
cld
fbld
add
pop
inc
pushf
sub
loop
xor
push
xchg
cdq
dec
inc
cmp
sti
push
pop
mov
in
leave
mov
mov
push
inc
lods
dec
out
cmp
mov
aad
fwait
mov
sub
aaa
retf
add
aas
and
mov
cmp
xchg
mul
lds
lods
adc
mov
enter
jp
adc
in
inc
iret
pop
ror
ja
iret
test
mov
lock
xchg
sbb
cmps
pop
iret
inc
inc
push
in
rol
std
jns
and
ror
cmc
mov
aad
stos
mov
popf
das
jno
inc
nop
jb
mov
(bad)
int3
pop
cmp
gs
jmp
mov
adc
outs
mov
cmps
hlt
jle
and
xchg
jae
jae
jbe
aad
jnp
lods
inc
inc
inc
dec
hlt
jmp
daa
fcomip
and
xchg
js
std
jecxz
addr16
push
shr
out
push
mov
add
data16
in
cwde
dec
stos
aam
jecxz
push
test
adc
mov
out
inc
xchg
add
xlat
stos
ret
mov
sbb
mov
add
push
lock
add
xbegin
pop
mov
ret
call
mov
scas
fldlg2
push
cmps
dec
xchg
mov
and
push
xlat
push
mov
stos
xlat
xchg
loop
inc
shl
mov
dec
cld
pop
dec
adc
inc
jbe
into
push
popa
scas
rol
fsubr
aaa
out
pop
inc
push
repz
retf
fcmovnbe
jne
adc
clc
jo
(bad)
push
and
fs
lock
dec
xchg
loope
pop
dec
xchg
repz
retf
mov
sub
xor
push
xchg
or
cmps
cmps
pop
imul
hlt
or
push
arpl
inc
ror
aam
xchg
ret
icebp
mov
bound
mov
dec
mov
xchg
adc
add
aas
mov
shr
jle
mov
adc
repnz
and
(bad)
sub
xlat
stos
lods
dec
push
pusha
xor
aaa
mov
mov
test
rol
out
int3
aas
test
mov
xchg
(bad)
lods
jmp
dec
xor
test
or
jno
and
adc
std
xchg
shr
and
jbe
mov
or
pop
loop
sbb
div
inc
xchg
icebp
push
sub
jne
stos
xchg
(bad)
dec
ret
int3
pop
xchg
jle
sbb
push
mov
cmc
push
and
lods
lods
jb
leave
in
idiv
inc
jo
pusha
out
pusha
(bad)
enter
hlt
cmp
mov
outs
cmc
mov
mov
aas
jae
fcom
and
in
add
fsubr
test
xchg
bound
xor
sub
popa
and
pop
xor
inc
in
mov
cmps
mov
jge
shr
fucomip
or
fidiv
nop
fwait
jl
int
inc
xor
stos
pop
pop
rcl
mov
add
jecxz
fs
cmp
xor
daa
sti
xchg
mov
aaa
popf
mov
addr16
dec
dec
jne
movs
test
cld
push
daa
adc
push
push
xchg
(bad)
jg
not
xchg
add
fs
ins
clc
mov
add
xchg
and
pop
movs
xlat
ror
or
stos
and
jae
push
jecxz
mul
retf
adc
fs
repnz
faddp
fmul
mov
mov
xor
pop
fistp
or
cmp
inc
push
or
clc
mov
cmp
ins
retf
in
int
dec
jmp
mov
sar
retf
ja
rol
adc
aam
xor
mov
(bad)
je
fucomp
sbb
test
mov
jnp
in
pop
int
imul
jecxz
ss
or
xchg
xchg
or
dec
and
daa
cmp
cmp
xchg
mov
add
pop
xor
gs
jnp
push
mov
sub
push
push
fs
arpl
inc
add
or
pop
pavgw
arpl
adc
stos
ror
pop
jnp
cmps
jmp
leave
jle
mov
dec
and
loopne
xchg
jb
in
mov
add
in
ror
mov
and
cdq
mov
push
xlat
inc
loopne
aaa
cmps
xchg
test
scas
xor
inc
xor
mov
icebp
push
fs
stos
js
jp
and
xchg
out
stc
repnz
mov
sub
imul
sub
xchg
(bad)
push
mov
mov
or
mov
dec
sub
jnp
scas
add
mov
imul
ds
ja
sub
test
inc
pop
mov
ds
adc
jo
out
fiadd
sub
jle
jo
fwait
mov
test
js
and
pop
in
data16
imul
sub
(bad)
and
push
(bad)
lock
in
or
dec
and
cmp
xchg
mov
sub
sbb
mov
xchg
and
mov
out
jb
in
mov
mul
adc
jae
jle
and
and
ss
cmps
retf
jnp
lods
xchg
div
jnp
cmps
mov
(bad)
sbb
push
xchg
rcl
jmp
out
repnz
push
and
pop
dec
add
stos
push
xchg
lods
add
loope
repz
cmps
add
mov
xchg
fld
adc
push
and
idiv
or
cmp
out
(bad)
lock
push
sbb
outs
xchg
push
hlt
push
cmps
dec
add
rol
mov
out
call
imul
fdiv
add
inc
push
test
xor
mov
push
out
fcom
xor
jnp
xor
pop
xor
repz
scas
and
and
pop
mov
pusha
popf
int3
push
out
jae
mov
repz
mov
aaa
xchg
sbb
scas
hlt
mov
rol
cwde
shl
aam
fiadd
fstp
jmp
adc
cdq
arpl
and
ret
sbb
aaa
xor
or
and
in
xor
or
or
cmp
das
mov
outs
xor
(bad)
mov
mov
dec
cmp
mov
sbb
mov
stc
inc
cmps
cmp
dec
rcl
ins
xchg
test
push
sbb
pop
xchg
xchg
mov
push
or
xor
imul
cdq
das
jp
pop
add
xor
int
aaa
mov
fist
aad
scas
push
icebp
outs
inc
jle
mov
fisttp
add
mov
dec
add
jge
lds
jo
ins
cmp
or
scas
mov
ror
cmp
and
stc
sub
test
cwde
inc
xchg
inc
pusha
int
popf
mov
push
movs
ins
xchg
pop
push
xor
test
bnd
adc
dec
sbb
and
xor
stos
inc
movs
lahf
cmc
mov
inc
stc
or
pusha
xchg
sbb
and
adc
faddp
push
popa
imul
mov
das
and
fsubr
add
fdiv
inc
and
jno
jmp
jno
add
repnz
add
ror
outs
hlt
cli
pop
mov
out
hlt
out
fist
addr16
inc
inc
mov
ret
addr16
mov
scas
daa
or
in
fcmovnu
and
mov
cmp
add
stc
shr
cmps
mov
cmc
xchg
ret
lods
in
push
jmp
aaa
inc
mov
shl
mov
enter
lds
push
inc
adc
mov
sub
js
cmp
inc
xchg
repnz
xchg
ins
push
lods
push
adc
shl
repz
adc
les
cmps
nop
pop
shl
inc
mov
xchg
cli
jmp
push
mov
imul
dec
aaa
push
and
xchg
(bad)
out
into
fdiv
lea
mov
mov
inc
mov
ins
inc
aad
icebp
cmp
cmps
jbe
push
add
cs
lods
clc
movs
inc
jle
jbe
fwait
enter
inc
test
mov
cmova
jnp
in
xchg
stos
xor
cdq
adc
call
cwde
ret
cmp
stc
add
movs
or
adc
push
ror
push
jno
jo
pop
out
dec
in
push
shl
push
scas
icebp
add
inc
test
xchg
sbb
mov
sub
pusha
sub
sub
aad
add
adc
xor
outs
jnp
adc
jne
mov
adc
(bad)
not
out
pop
fsub
adc
and
mov
mov
ja
mov
mov
and
inc
jbe
ja
call
jo
pop
jbe
xlat
xor
out
xchg
dec
test
bound
aam
xchg
bound
ds
mov
mov
retf
rcl
and
or
in
jne
push
mov
xor
not
push
dec
dec
xlat
in
test
mov
pusha
inc
sahf
jmp
xor
push
popfw
push
dec
shl
jl
movs
mul
out
addr16
lds
loope
outs
jmp
dec
(bad)
idiv
dec
jg
fs
mov
jle
lea
cmps
or
adc
push
inc
scas
fimul
push
pop
add
mov
push
mov
sbb
stos
mov
inc
test
add
cmp
lods
and
add
or
mov
or
xchg
daa
lods
test
std
and
add
outs
ins
test
mov
(bad)
mov
adc
test
inc
shr
jmp
inc
adc
push
add
lds
or
movs
sub
mov
scas
pop
je
push
push
scas
sbb
add
inc
mov
xchg
push
das
inc
out
cmp
push
sar
sub
xchg
hlt
push
push
lds
push
add
cmps
inc
movs
bound
or
and
scas
xchg
rol
outs
repnz
xchg
or
push
pusha
xlat
mov
mov
popf
jmp
push
mul
fimul
rcr
icebp
xchg
lock
ins
out
jmp
mov
sub
push
sub
mov
push
arpl
aas
cmp
push
popf
push
xlat
in
repz
xchg
mov
push
adc
and
push
or
icebp
pop
inc
and
sub
fs
or
inc
xchg
mov
push
xlat
push
cmp
ret
add
and
jns
out
or
sar
mov
dec
loopne
and
mov
or
adc
mov
sbb
mov
push
vmwrite
loope
add
mov
inc
fwait
dec
pop
out
call
sbb
mov
sbb
xchg
dec
add
add
push
lds
rcl
mov
push
repnz
arpl
jnp
dec
les
js
mov
pop
fisubr
xor
aaa
fwait
movs
inc
test
nop
(bad)
out
in
mov
adc
and
adc
push
xchg
lds
mov
mov
mov
(bad)
rcl
mov
xchg
pop
cwde
in
rcl
xor
mov
adc
ja
ffreep
push
inc
out
das
das
pusha
dec
or
push
or
rol
not
pop
sti
mov
add
inc
xchg
movs
jle
sbb
adc
in
in
dec
push
xchg
es
mov
pop
xor
add
add
pop
in
outs
enter
ficomp
xchg
movs
rol
rcl
jae
pop
and
adc
pop
xchg
sub
jbe
mov
sbb
test
stos
add
call
mov
push
pop
xor
sub
popf
mov
jmp
mov
int
jno
xchg
je
out
je
cli
xchg
push
aaa
sti
repz
ins
push
xor
aas
fs
jo
adc
(bad)
in
cmc
pop
add
fidiv
jb
inc
mov
mov
data16
sub
pop
mov
push
fsubr
test
mov
xchg
jecxz
sbb
aas
sub
push
inc
pushw
into
mov
stos
fcmovb
xor
xchg
jecxz
dec
mov
push
aaa
and
cmps
mov
aam
cmp
enter
sbb
mov
adc
add
dec
sub
stc
imul
jbe
or
xor
out
cmp
sbb
dec
xor
cld
in
out
jmp
jne
push
not
push
daa
scas
aas
retf
sbb
data16
xchg
out
jo
jae
pop
div
out
cmp
and
push
fsub
add
sbb
out
pusha
stos
xchg
and
cmc
mov
shl
or
pop
push
push
xor
jb
push
sub
jno
cdq
lock
pop
add
es
mov
retf
jmp
addr16
or
xbegin
loope
jmp
mov
clc
std
push
adc
fnstsw
fistp
repnz
mov
lock
loopne
push
cmc
dec
mov
imul
sub
rol
jbe
mov
loop
cdq
ror
nop
(bad)
lahf
and
pusha
adc
pop
aas
mov
cmp
adc
hlt
test
inc
scas
push
retf
xor
ins
jo
cmp
fdivr
pop
lods
pop
inc
ret
ss
mov
mov
and
sub
dec
leave
test
jns
cmp
adc
sbb
push
loopne
inc
shl
lock
inc
ret
daa
(bad)
ror
loop
cmps
sbb
mov
mov
scas
test
js
loope
jno
xchg
mov
dec
mov
aad
pop
adc
cmps
in
mov
lds
inc
cli
out
and
test
jmp
cmp
jle
out
cli
stc
push
jb
fidivr
sub
inc
add
add
xor
sar
ja
(bad)
xchg
pushf
xor
mov
jne
cmp
lock
xlat
adc
push
mov
out
fsubrp
sar
into
and
xor
mov
and
stos
addr16
repz
(bad)
out
and
aas
rol
aam
add
pushf
imul
adc
jb
jo
dec
outs
add
jnp
mov
cmp
mov
int3
adc
shl
rol
mov
or
cmp
inc
push
pusha
in
mov
scas
outs
sub
xchg
pop
add
or
push
faddp
shl
call
adc
les
push
les
and
je
sub
jge
lock
pop
mov
sbb
cmps
sbb
mov
add
stos
enter
adc
mov
repz
adc
daa
hlt
mov
cmp
jg
sub
mov
inc
icebp
mov
and
mov
into
mov
dec
jae
jae
cmp
cli
mov
iret
xchg
out
(bad)
cli
into
push
fs
mul
xlat
cmp
push
adc
icebp
cmp
(bad)
dec
cmc
jl
retf
pop
mov
hlt
mov
mov
movs
push
imul
mov
mov
jecxz
(bad)
cmp
jno
loopne
and
inc
not
lods
mov
adc
pop
xor
mov
lods
popa
popf
pop
sub
cmp
stc
test
xchg
ss
or
enter
push
xor
popa
shl
and
fadd
pusha
adc
xchg
loop
xchg
sbb
push
(bad)
fisttp
test
lds
movs
add
popa
jae
mov
ins
sbb
lea
lods
outs
aaa
frstor
fimul
cmp
xchg
aas
add
xchg
out
inc
push
push
test
add
pusha
out
xlat
out
arpl
pop
ja
cmps
test
(bad)
xchg
xchg
gs
jmp
mov
ret
xchg
dec
mov
outs
inc
vcvtps2dq
ss
fptan
(bad)
call
pop
fisubr
pop
je
adc
(bad)
frstor
pop
std
sahf
retf
mov
mov
mov
mov
push
cs
dec
push
xor
call
sub
pop
add
sub
out
mov
shl
outs
dec
test
xchg
in
int
push
neg
rcl
in
cmps
mov
ja
pop
pop
mov
adc
outs
push
push
jl
push
fdiv
call
ret
out
ss
enter
movs
ins
inc
mov
retf
jbe
loop
cmps
mov
ret
sbb
xchg
fcmovnbe
outs
add
fild
test
jno
xor
push
xor
push
jbe
out
pop
sti
out
mov
pusha
fist
add
cmps
leave
aam
icebp
out
jne
pusha
ret
movs
pop
sbb
(bad)
jbe
gs
aad
jecxz
inc
arpl
es
mov
mov
loopne
ror
or
xchg
cmps
sbb
in
pop
je
neg
inc
xor
data16
lahf
sbb
pop
ja
jbe
pop
mov
add
sbb
inc
iret
fld
(bad)
mov
sar
stos
ds
add
repz
daa
jbe
inc
rcr
pop
shl
jge
inc
pushf
fs
mov
cmp
inc
movs
leave
xchg
cld
mov
fmul
movs
jae
xchg
leave
js
add
jb
scas
pusha
(bad)
adc
or
xor
cmp
loope
ds
dec
sti
test
arpl
retf
sti
push
ins
(bad)
sar
cwde
add
jae
lock
hlt
addr16
mov
mov
mov
neg
jecxz
je
and
ror
mov
rcr
cmp
sbb
imul
ins
mov
scas
ret
pop
and
sub
xlat
pop
stc
sbb
mov
popf
xor
bsr
jge
jge
xchg
add
mov
pushf
push
add
lods
sub
xchg
addr16
jae
inc
push
lock
jbe
xor
mov
pusha
and
mov
cs
int3
jno
dec
push
xor
jnp
inc
mov
fldenv
mov
xchg
push
cmp
pop
mov
test
retf
jno
aaa
icebp
xchg
inc
mov
test
push
(bad)
cmc
ret
call
out
sbb
data16
jle
shl
adc
pop
xor
pusha
loopne
dec
(bad)
push
push
push
adc
sbb
stos
and
ss
pop
push
inc
cmp
ret
clc
push
xchg
not
test
(bad)
test
push
lahf
sbb
call
and
push
xor
addr16
or
sub
cmp
aas
dec
hlt
push
xchg
icebp
mov
cmc
loope
add
or
mov
or
xor
mov
mov
gs
outs
shl
jnp
cmps
jg
out
or
rol
push
mov
and
jnp
xchg
pop
(bad)
adc
not
popf
scas
inc
out
mov
sahf
xor
rcl
xchg
add
push
mov
or
inc
xchg
(bad)
mov
push
cmc
xor
cmp
jge
rcl
sub
sub
aad
gs
scas
xchg
add
jge
mov
ins
xor
popa
fbld
or
and
je
or
xchg
mov
push
cmp
ret
mov
sub
dec
xchg
retf
outs
mov
scas
out
in
mov
out
aad
push
nop
test
bound
xchg
jle
std
mov
outs
or
clc
and
pop
mov
xchg
push
xchg
fs
lods
pop
xor
mov
mov
mov
das
jae
repz
add
jnp
xor
das
js
call
cmpxchg
adc
or
cwde
into
mov
push
push
lock
cli
icebp
hlt
shl
mov
xlat
adc
and
fnsave
and
outs
cmp
dec
xchg
mov
xchg
mov
jb
bswap
xchg
push
push
jg
and
int
xlat
xchg
loope
dec
sar
add
test
pop
pop
daa
push
mov
push
mov
cdq
rol
gs
lds
das
data16
call
sbb
imul
loope
clc
jp
arpl
and
test
adc
mov
push
push
fdivr
jecxz
loope
xchg
ret
ror
inc
mov
pop
add
adc
cmps
dec
xchg
pop
and
inc
(bad)
ins
adc
or
or
cmovs
shr
adc
mov
pop
adc
jmp
mov
lock
sti
hlt
adc
out
sub
mov
(bad)
in
shl
test
mov
stc
cmp
jecxz
mul
ret
add
jb
inc
aam
sbb
cmp
into
mov
in
mov
jo
repz
shl
scas
dec
jne
adc
es
push
stc
bound
mov
in
test
loopne
aad
or
sbb
sub
add
pop
cli
xchg
aad
sub
fiadd
mov
xchg
aaa
cmp
ret
(bad)
mov
jmp
scas
cmp
xchg
mov
stos
fnsave
scas
out
and
adc
repnz
add
jl
add
pushf
not
in
lahf
pop
fisubr
lock
test
loop
outs
ret
loope
pcmpeqb
sub
imul
loop
fistp
inc
sahf
pop
pop
sbb
arpl
jle
sub
sub
pop
dec
cmps
sub
and
iret
fisub
add
xor
add
push
mov
ret
mov
push
jmp
pusha
mov
xor
ins
inc
ins
pop
(bad)
addr16
mov
xchg
das
inc
dec
xor
adc
push
addr16
std
adc
loop
push
repnz
ja
sbb
sbb
fnstsw
stos
repnz
popa
enter
(bad)
mov
add
cli
lea
adc
sbb
scas
sbb
inc
retf
(bad)
daa
jne
mov
and
out
and
xchg
or
adc
rcl
scas
sub
cmp
shl
cwde
pop
retf
push
push
or
lock
(bad)
ins
xchg
(bad)
fistp
add
lahf
fmul
dec
xchg
(bad)
jmp
xor
xchg
fistp
cmp
mov
pop
add
or
test
sbb
inc
push
cli
das
pop
fcmovnu
scas
into
cmc
nop
mov
stos
jo
jo
adc
inc
movs
jb
push
add
and
pop
popf
nop
xor
icebp
out
or
mov
mov
(bad)
aas
adc
xor
ja
xchg
push
rol
icebp
inc
ret
mov
add
push
inc
lahf
loopne
adc
ja
mov
out
call
mov
inc
ret
pop
push
jmp
pop
inc
mov
sbb
xor
add
addr16
add
adc
in
jg
add
sbb
outs
push
inc
push
clc
jo
(bad)
and
lds
dec
inc
or
xchg
dec
push
cmp
mov
jg
inc
iret
sbb
leave
nop
mov
js
repz
pop
adc
sub
sub
mov
fisub
pop
or
sbb
pusha
in
mov
loope
je
add
mov
shl
es
call
call
enter
je
add
outs
sub
test
xor
out
clc
shl
dec
jl
push
xor
outs
xor
inc
out
loope
mov
cmc
sbb
sar
das
test
push
and
fdivr
cmps
mov
push
fnstcw
jae
repnz
jg
xor
nop
inc
stos
jno
fs
mov
stc
and
mov
aaa
pusha
dec
(bad)
sbb
imul
arpl
mov
push
sbb
seta
in
data16
mov
inc
(bad)
cmp
setge
mov
shl
sbb
(bad)
push
test
fcmovu
fsubr
cmp
push
add
adc
xor
stos
aad
push
sbb
add
fs
push
adc
mov
sbb
and
daa
xchg
pop
jmp
movs
mov
loope
test
lods
pop
pop
div
inc
jmp
sub
(bad)
rol
xchg
les
pop
cmps
shl
and
adc
mov
and
out
shl
pop
xor
in
jle
mov
sub
popa
stos
dec
sar
cmps
adc
inc
pushf
std
inc
dec
(bad)
shr
in
jp
mov
dec
call
adc
mov
fcomp
xchg
mov
hlt
mov
mov
cmp
mov
mov
inc
enter
addr16
imul
fisub
push
mov
push
in
inc
cmps
jg
push
rcr
inc
cmc
fild
les
int
test
cdq
(bad)
and
ss
jae
mov
sbb
aaa
add
das
xchg
jecxz
dec
xchg
xor
fistp
mov
pop
sub
loope
mov
hlt
jmp
clc
mov
lock
imul
fidivr
xlat
adc
pusha
fiadd
mov
pop
out
xchg
std
clc
inc
cdq
ret
dec
std
data16
movs
mov
es
cmps
inc
cmp
xchg
out
push
push
push
inc
inc
jo
popa
sub
mov
arpl
xor
das
or
repz
mov
sbb
pop
push
cmp
pop
pushf
add
xchg
push
or
mov
test
daa
sbb
icebp
pop
push
in
sub
mov
aaa
cmps
addr16
xchg
pop
out
and
add
jb
iret
div
push
pop
(bad)
dec
adc
xor
cld
stos
xchg
out
and
xor
into
into
(bad)
sbb
dec
dec
adc
aaa
mov
(bad)
mov
mov
retf
dec
in
shl
xchg
iret
push
add
xchg
or
push
lock
add
mov
mov
movs
adc
pop
and
jno
jo
nop
in
or
ins
rol
xlat
inc
add
adc
sub
sbb
add
mov
add
stos
cmps
jb
cmc
xor
xor
fisubr
push
popf
add
pushf
push
pop
sub
ret
inc
mov
cwde
ror
dec
inc
xor
push
or
fsubr
das
mov
xchg
cmps
xchg
mov
push
jmp
es
mov
and
adc
out
and
popa
fimul
sub
or
int
push
push
jp
sti
push
ja
into
(bad)
in
push
mov
aad
jo
rcl
dec
xor
xor
push
xor
fsubr
stos
mov
xchg
add
adc
loope
cwde
sub
jo
shl
cdq
and
pop
xchg
retf
pop
jp
cmp
cmp
and
fsubp
push
sahf
sbb
adc
adc
mov
cdq
test
sub
ins
aas
lods
loopne
mov
xchg
rcr
fwait
repz
not
movs
or
jge
add
stos
xor
adc
(bad)
inc
sub
xchg
mov
xor
sub
test
into
or
outs
fs
jno
pop
inc
push
xchg
mov
loope
clc
out
js
xor
test
add
dec
and
or
mov
adc
jmp
mov
shl
push
daa
xor
loope
push
jnp
ret
stos
mov
add
hlt
xchg
lock
loope
ficomp
pusha
loop
push
rol
mov
neg
cmp
and
push
clc
push
xlat
push
inc
shr
aad
pop
add
add
daa
jnp
adc
mov
(bad)
enter
cmps
ins
xchg
pop
jmp
push
mov
(bad)
pop
test
or
mov
aad
push
aam
xor
and
ror
xchg
or
jno
retf
mov
call
push
xor
xchg
loop
add
push
gs
xor
lods
xchg
jecxz
add
scas
xchg
cli
xor
dec
pop
retf
cmp
xchg
pop
test
daa
stos
scas
inc
inc
xor
cmp
xchg
shr
ins
jno
sbb
push
inc
popa
out
inc
push
add
fnsave
xchg
sbb
xchg
sub
fiadd
dec
mov
and
push
push
rcl
xchg
adc
rcpps
loop
sub
iret
icebp
icebp
and
das
ins
(bad)
jecxz
cmc
repnz
loopne
out
mov
ret
mov
inc
retf
jb
loop
in
cmps
pop
push
shl
sbb
idiv
dec
push
ins
test
test
imul
mov
jle
or
lods
ret
cmp
jo
(bad)
or
add
wrmsr
sub
sub
call
push
adc
aas
test
sbb
jnp
xor
(bad)
pop
push
mov
push
inc
dec
xchg
enter
mov
adc
xchg
push
xchg
mov
inc
dec
mov
fst
or
adc
xchg
fcom
out
cmp
cmps
push
pop
push
movs
pusha
aas
(bad)
sar
std
mov
xor
push
jbe
pusha
sbb
jo
sbb
lahf
pusha
aaa
or
mov
xchg
in
xchg
xor
arpl
jae
popa
add
push
punpcklbw
jae
shl
mov
or
rol
add
es
push
and
mov
xlat
pop
mov
mov
mov
gs
ins
stc
jmp
(bad)
adc
inc
fisubr
ja
adc
xor
test
inc
(bad)
jl
push
aaa
add
mov
pop
shl
xor
mov
xchg
pminub
dec
icebp
cmps
cmp
push
ds
and
fld
aaa
mov
jge
pop
adc
jae
out
push
pop
repz
and
movs
add
mov
xchg
sub
repz
xchg
add
pusha
leave
cmps
and
xor
pusha
addr16
xchg
mov
retf
mov
(bad)
xlat
mov
addr16
loopne
mov
pushf
and
cdq
mov
mov
jmp
jo
ins
jo
add
rol
xchg
outs
es
dec
repnz
fsub
loope
jge
fcomp
icebp
push
jae
add
xchg
jmp
in
clc
test
stos
pop
ror
retf
push
pusha
repnz
mov
dec
scas
sar
mov
sub
sbb
les
pop
ja
add
push
sahf
mov
clc
sar
push
pop
loopne
mov
out
or
bound
push
imul
xchg
xchg
adc
push
mov
jbe
lock
les
mov
add
and
push
test
add
sbb
mov
cmc
lock
call
mov
jo
arpl
push
add
lahf
pop
sar
repz
ins
jg
es
or
cmc
push
sub
xchg
stos
and
mov
jae
fnstsw
push
push
adc
clc
stos
int
repnz
mov
mov
rcr
sbb
push
inc
add
xchg
xchg
test
xchg
jmp
cld
cmp
xor
or
mov
outs
fist
not
mov
ret
xchg
cli
cmps
leave
nop
push
xchg
mov
loope
ror
xchg
and
daa
pop
push
adc
aas
sub
mov
lock
ds
ret
push
xor
je
jp
or
leave
jo
stos
jb
xor
dec
aas
and
mov
repnz
je
loopne
scas
xchg
jg
setne
add
or
lods
xor
dec
bound
shl
aaa
push
xchg
mov
dec
and
fwait
mov
xchg
enter
test
xchg
pusha
add
sbb
mov
add
in
dec
sbb
stos
xor
add
sub
mov
cmp
daa
pop
and
lds
inc
pop
mov
xor
(bad)
std
cmp
gs
rcr
mov
(bad)
adc
fsub
stc
push
loop
mov
(bad)
out
fnsave
mov
push
inc
inc
sbb
mov
ret
not
daa
mov
mov
sub
cmp
and
or
mov
in
jb
mov
stos
inc
jbe
sbb
and
fadd
jbe
or
xchg
fbld
push
int3
add
xor
into
(bad)
fucom
sbb
inc
push
mov
(bad)
xchg
out
rcl
xchg
xchg
lock
dec
mov
push
jae
ja
pop
mov
rol
mov
or
inc
cmc
sub
aam
out
ss
outs
pusha
cmps
cmps
push
iret
iret
dec
retf
sahf
push
and
sbb
addr16
push
cmps
shr
xor
shl
outs
loopne
mov
or
loope
mov
jb
idiv
std
xor
inc
jmp
inc
retf
jo
hlt
pop
add
xor
mov
push
mov
shl
sbb
mov
aaa
mov
scas
cmp
mov
popf
test
mov
and
aad
mov
add
fwait
retf
push
cmp
or
dec
ds
mov
fiadd
(bad)
add
pop
add
jo
push
dec
xor
add
out
jp
les
and
int3
adc
mov
stos
mov
cmp
cmp
(bad)
sbb
rcl
jo
adc
and
jae
adc
inc
add
pop
adc
jo
push
mov
movs
mov
add
jge
adc
jbe
adc
popa
cmp
jge
clc
adc
sti
pop
jmp
xchg
lock
mov
sbb
call
dec
xchg
pop
xchg
das
iret
daa
cdq
leave
cmp
mov
test
in
push
in
xchg
cmps
es
pop
sahf
lock
cmp
loop
inc
sub
adc
hlt
lock
ficomp
(bad)
sbb
(bad)
mov
fadd
fist
je
test
es
or
out
or
test
ds
not
mov
jo
ja
add
add
adc
xor
pusha
lock
or
cmps
mov
movntq
add
and
cmc
add
rcl
push
cmp
cmp
or
sbb
rcr
pop
shr
or
cmps
mov
jae
xor
aaa
movs
neg
inc
push
sbb
cmps
jbe
lahf
inc
push
lahf
mov
cmc
push
es
retf
sbb
mov
pusha
cmp
lock
inc
scas
(bad)
(bad)
fimul
adc
fs
sbb
push
or
xchg
fldcw
scas
xchg
repz
outs
push
pushf
addr16
addr16
fistp
mov
adc
or
ja
stos
sahf
in
mov
idiv
das
adc
xor
ins
cmp
popa
stos
loope
mov
in
jge
adc
mov
push
inc
and
push
adc
neg
icebp
mov
(bad)
shl
pop
pop
mov
aas
in
cmp
test
push
and
mov
imul
mov
and
je
push
jno
not
cmp
inc
pop
cmc
mov
(bad)
rcl
add
sbb
jg
ret
clc
inc
push
aaa
loope
shl
stc
sub
adc
xchg
and
cmp
movs
fs
(bad)
out
pop
mov
je
and
imul
ja
and
push
aas
pop
jae
adc
xchg
mov
adc
push
adc
jbe
test
ss
jb
adc
pop
scas
add
pop
(bad)
mov
xor
mov
(bad)
jo
mov
and
in
arpl
shl
dec
addr16
stos
adc
arpl
adc
aaa
mov
nop
iret
cli
pop
icebp
repz
shl
fnsave
es
add
movs
xchg
rcl
fs
nop
popa
jb
rol
fstp
mul
mov
push
sbb
(bad)
mov
call
outs
loop
es
mov
add
pop
push
push
movs
cmp
sahf
add
adc
aam
sbb
(bad)
xor
xchg
fld
nop
popa
push
add
scas
push
mov
push
dec
inc
out
ret
stc
jmp
adc
loop
inc
retf
clc
dec
ret
dec
jne
jo
pop
sub
nop
daa
xchg
cld
and
loopne
xchg
les
mov
or
nop
mov
stc
leave
aaa
ss
mov
or
dec
fucomp
addr16
mov
out
inc
push
fnstcw
gs
push
test
mov
lods
ret
shl
imul
je
arpl
ret
loope
arpl
dec
lods
mov
pop
pop
xor
aad
xchg
test
xchg
pusha
scas
inc
adc
out
ins
or
out
xchg
cdq
arpl
gs
iret
and
ja
rcl
aas
jb
jmp
mov
mov
mov
out
not
sbb
mov
xor
rol
xchg
push
sub
add
pop
cmp
fisub
and
dec
push
pop
inc
mov
js
adc
outs
mov
iret
mov
movs
pushf
mov
push
xchg
jb
loope
mov
jnp
sbb
rcl
mov
mov
test
add
hlt
xchg
(bad)
nop
jo
mov
cmp
pop
scas
mov
and
iret
lods
cmps
mov
stc
arpl
(bad)
mov
inc
inc
push
out
and
test
inc
cmp
push
adc
mov
push
(bad)
and
in
cmp
hlt
xchg
and
fild
inc
(bad)
inc
push
int3
inc
imul
and
mov
dec
ret
mov
(bad)
pop
jg
inc
xor
or
les
xor
int3
sub
add
sbb
sbb
movs
dec
push
add
not
aam
mov
mov
stos
mov
inc
enter
mov
bound
pop
xchg
xchg
jecxz
rol
or
mov
mov
into
stos
neg
mov
int3
aam
neg
stc
sbb
pushw
jns
test
pop
repz
inc
cmp
pop
fldcw
imul
mov
sbb
xchg
mov
xchg
xchg
mov
test
jb
xor
imul
call
cld
xchg
jge
popa
packssdw
xchg
adc
xor
ret
pop
xchg
sub
jbe
fstp
mov
nop
ja
or
pop
or
popa
dec
pop
sbb
mov
jns
jno
add
les
xchg
dec
retf
jp
out
add
(bad)
ins
xlat
cmp
mov
mov
and
movs
xchg
push
xor
jl
jmp
int3
idiv
xor
inc
inc
and
jle
mov
call
rol
enter
retf
add
fld
jb
xchg
int
les
std
inc
loop
adc
push
into
(bad)
shr
in
mov
lds
xchg
xor
stc
add
push
int
cs
sub
cmp
(bad)
mov
les
mov
das
pop
(bad)
jb
sub
adc
loope
fmul
aam
fst
adc
mov
shl
stos
pop
pushf
out
jp
and
das
mov
add
push
push
mov
fild
ret
(bad)
sahf
and
gs
pusha
pop
add
je
inc
cmp
sbb
push
push
xchg
mov
(bad)
in
aaa
sub
push
dec
adc
sbb
cmp
cwde
lods
add
xor
mov
mov
fisubr
inc
xor
inc
push
mov
add
fdivr
cli
pop
sbb
scas
jae
push
pop
popf
out
adc
repz
xor
xor
dec
push
pop
shr
pushf
push
nop
shr
sbb
daa
adc
adc
mov
popa
fs
push
(bad)
jbe
test
jmp
lock
loope
add
cdq
jecxz
push
dec
ins
retfw
nop
xor
dec
jmp
out
inc
stc
fdivr
push
sub
aaa
enter
and
sub
data16
test
mov
not
mov
push
(bad)
int3
mov
fisubr
cmp
pop
jmp
adc
iret
xchg
pop
mov
rol
push
adc
pusha
inc
adc
sti
jne
jmp
mov
and
mov
jge
mov
xlat
in
push
mov
ins
gs
sub
div
mov
jne
cwde
loopne
lds
ja
cmps
aaa
inc
mov
or
sub
and
pop
mov
test
pop
push
mov
popa
adc
pop
aam
fbld
mov
mov
and
sar
adc
bound
fiadd
in
lock
xor
shl
add
adc
scas
lds
mov
aad
loop
gs
push
cmps
repz
cmp
mov
cmp
cmps
cmp
push
push
inc
cs
pop
pop
enter
(bad)
sub
jmp
adc
cmp
mov
push
jb
cmp
jno
jmp
loopne
test
jp
push
std
cld
xor
jne
dec
sub
jg
mov
fwait
xchg
ins
cmp
ds
push
mov
xor
xlat
xchg
int3
pop
(bad)
mov
imul
sub
jno
adc
jnp
sbb
and
pushf
push
dec
sbb
cmp
jbe
xchg
adc
sbb
loope
or
fsubr
out
jne
mov
mov
xor
pusha
jg
jg
jbe
ror
inc
fidiv
sbb
outs
ss
shl
jbe
movs
push
sbb
mov
call
adc
add
xchg
xor
sar
and
add
xchg
pop
adc
(bad)
popa
(bad)
retf
fldenv
or
or
inc
nop
adc
push
rcl
xchg
jecxz
imul
(bad)
fmul
clc
(bad)
mov
and
call
pushf
push
rcl
mov
mov
mov
cdq
xchg
mov
shl
mov
jne
pop
jle
pop
icebp
popf
aam
shl
cmp
cmp
pop
mov
cdq
ins
test
cmp
idiv
mov
mov
jb
mov
or
pop
sbb
ja
xchg
jg
add
add
inc
scas
mov
js
and
jne
jl
ficom
in
gs
mov
pop
mov
add
clc
adc
das
add
out
inc
add
xchg
jmp
xlat
jmp
bswap
xchg
mov
inc
aas
daa
mov
dec
adc
cmp
mov
mov
es
frstor
jecxz
xchg
pop
movsx
xchg
adc
es
inc
add
or
in
jbe
mov
add
daa
sbb
inc
nop
loope
cmp
add
push
cmp
movs
mov
popa
push
loopne
push
pop
push
xchg
or
jne
jne
push
je
(bad)
jb
out
cmc
mov
mov
xchg
add
and
mov
(bad)
pushaw
(bad)
push
push
jge
jns
pop
hlt
push
xlat
adc
andnps
add
add
stos
lock
ficom
xor
loope
mov
xor
popf
daa
pop
mov
icebp
inc
sbb
in
push
and
mov
es
xchg
hlt
mov
dec
sub
shl
jnp
xor
rcl
pop
pop
jb
sti
int3
cld
adc
sbb
mov
outs
imul
inc
enter
test
pop
int3
add
call
mov
push
mov
xor
test
or
xor
xor
cdq
add
pusha
mov
sbb
xchg
daa
push
adc
xchg
dec
(bad)
adc
sbb
xchg
leave
cli
aad
pop
(bad)
add
nop
sahf
push
cmps
mov
add
sbb
cmps
pop
jmp
push
ja
mov
and
adc
cmps
add
jo
and
test
push
lods
ins
jo
adc
arpl
xor
shl
test
sbb
sub
sub
loop
push
pop
add
arpl
mov
nop
pop
xchg
jo
lds
inc
pop
inc
arpl
daa
es
int3
xlat
ret
rcl
daa
jo
fsub
pop
adc
pop
cmp
xchg
ins
nop
sub
xchg
in
shl
xchg
idiv
xchg
loope
jl
inc
inc
adc
mov
cmp
cmc
sbb
js
popf
(bad)
cmp
pop
mov
stc
push
add
dec
das
bound
mov
adc
push
movs
loope
mov
push
push
push
pop
and
cdq
pop
push
xor
jg
add
pop
push
out
aam
push
bound
mov
in
push
pop
jne
mov
sub
fs
sar
shl
leave
icebp
xchg
push
push
jecxz
adc
xor
hlt
adc
loop
or
xlat
fst
jecxz
fsub
mov
push
adc
ds
dec
aas
repz
call
test
mov
xor
or
mov
je
or
xchg
pop
sub
fucomip
retf
pop
sbb
push
dec
cmc
dec
mov
sbb
arpl
movs
and
mov
ds
and
jbe
scas
ja
sub
add
push
and
pop
gs
ret
clc
out
xchg
mov
jae
mov
pop
mov
fcom
(bad)
ds
ret
xchg
mov
xchg
std
mov
mov
cdq
adc
scas
sahf
mov
sub
sub
xor
ret
sub
xlat
adc
in
or
imul
and
push
in
xchg
push
inc
lock
test
ficom
jo
push
xchg
cs
cmp
inc
sahf
repz
adc
xchg
sar
pop
mov
pop
jno
push
pop
add
cmps
lahf
adc
adc
test
sub
repnz
xor
xchg
xor
(bad)
pop
mov
pop
call
ret
or
dec
cdq
js
call
not
mov
mov
arpl
xchg
jns
cmps
xchg
into
stos
xchg
daa
imul
mov
dec
push
mov
shl
mov
sub
jb
sbb
mov
in
mov
cmp
cmp
inc
cmp
pop
cli
(bad)
xchg
and
xor
mov
jb
sahf
in
mov
mov
mov
fild
fsubr
ja
add
repz
jbe
int
in
loop
rcl
pop
and
push
push
push
pop
mov
std
xchg
js
pop
sar
xor
adc
popf
mov
sbb
inc
jne
xor
fld
or
out
mov
xchg
cmps
test
mov
daa
inc
pop
push
mov
xor
aam
inc
mov
mov
jne
xor
fstp
int
or
or
jmp
icebp
(bad)
bound
push
popf
push
rcr
fsubrp
inc
add
aam
sub
shr
in
dec
lock
adc
push
push
inc
adc
cmp
cmps
mov
inc
sti
jnp
clc
mov
data16
adc
jne
push
ds
inc
bound
jge
inc
mov
test
icebp
mov
xchg
leave
jmp
pop
push
nop
pop
xor
dec
xchg
bound
mov
stc
sub
enter
es
rcl
imul
bound
loopne
jb
imul
aam
mov
mov
xchg
idiv
cmp
dec
iret
cmc
inc
xor
cmp
push
pop
inc
inc
nop
cmp
mov
(bad)
mov
mov
or
push
cmp
xor
xor
mov
popa
(bad)
out
and
inc
jl
xor
dec
fisttp
(bad)
(bad)
inc
adc
scas
in
inc
or
in
imul
jg
pop
mov
movntps
daa
adc
push
ins
loope
push
mov
inc
xor
jecxz
add
rcl
xor
in
mov
or
xchg
pop
jne
stos
icebp
mov
arpl
das
add
xlat
dec
fcmovnb
xor
push
and
cmc
fst
jo
sahf
fwait
push
loop
inc
mov
ds
pop
cmc
adc
imul
push
ins
inc
out
xchg
mov
movs
push
xor
adc
xlat
ss
adc
or
mov
les
xchg
mov
(bad)
stos
sar
lds
pop
mov
inc
xchg
sar
pushf
inc
add
pop
jae
aaa
std
out
call
mov
(bad)
ficom
dec
pop
and
data16
inc
xor
icebp
xchg
cmp
mov
fst
sbb
inc
pop
inc
movs
jecxz
mov
add
mov
pusha
and
inc
lds
es
fld
stos
stc
shl
call
retf
mov
mul
adc
jl
outs
into
pop
sub
mov
pop
outs
aas
xor
fist
xlat
push
jae
cs
aad
repnz
mov
(bad)
int
pop
pop
rol
and
adc
pop
or
xchg
aas
cmp
leave
repz
in
jle
push
ret
or
push
add
cdq
adc
xor
sub
cmp
(bad)
mov
and
sub
imul
push
cmp
push
out
mov
xlat
xchg
push
cwde
adc
mov
mov
addr16
add
mov
out
test
(bad)
rcl
mov
sbb
xor
test
es
push
inc
daa
dec
fadd
inc
push
jbe
and
outs
test
dec
sahf
jne
out
ret
fstp
pop
imul
push
(bad)
or
pusha
fs
dec
jp
mov
cmps
les
mov
xor
pop
pusha
xor
jae
push
xchg
sar
imul
and
push
xchg
mov
inc
sbb
push
xchg
les
nop
sub
iret
outs
in
sbb
pop
sub
shl
push
call
or
adc
push
adc
adc
xchg
sub
add
cdq
cmp
xor
sub
nop
loop
add
cmp
mov
repz
xchg
test
xor
xchg
mov
xor
shl
mov
inc
cmp
sub
pop
lock
pop
add
jle
sub
jp
xor
movs
aad
inc
iret
test
out
imul
outs
js
and
clc
es
add
xor
je
leave
sbb
jle
aaa
xor
and
sti
(bad)
in
inc
push
stos
or
mov
xor
push
movs
and
mov
cs
push
jbe
clc
and
out
popf
pop
test
leave
mov
inc
stos
xchg
shr
(bad)
cmp
js
xor
xor
(bad)
pop
(bad)
scas
xor
and
add
or
punpcklwd
jno
push
(bad)
xor
fisttp
xchg
mov
xchg
xor
scas
ja
sti
pop
in
daa
cmps
test
test
push
dec
rcl
repnz
xchg
xchg
pop
rol
pushw
arpl
cmps
mov
push
pop
inc
add
and
xchg
sbb
xchg
pusha
mov
retf
jmp
loop
xor
inc
inc
adc
nop
jbe
xchg
lock
sar
pop
mov
popa
pop
ss
dec
popa
out
outs
inc
es
idiv
xor
push
sub
nop
pop
sbb
cmps
(bad)
aas
int3
shr
xchg
out
or
les
imul
in
xchg
push
lds
lods
pop
data16
mov
es
arpl
out
cmps
mul
xchg
mov
pop
sbb
xor
inc
into
push
ins
fst
pop
call
aad
xchg
push
neg
in
addr16
pushf
inc
daa
jle
pop
xchg
js
int
adc
or
adc
lock
xor
popa
test
push
mov
sti
mov
(bad)
(bad)
ret
xor
test
in
jge
jno
adc
mov
mov
mov
loopne
call
adc
xlat
or
xor
(bad)
mov
leave
sbb
cmp
xchg
mov
js
enter
out
call
add
inc
adc
cmp
jnp
repz
fisub
adc
mov
aaa
jg
(bad)
stc
mov
sub
add
push
sub
shl
xchg
mov
std
mov
pop
inc
(bad)
mov
xchg
mov
xor
push
jno
daa
cmp
push
mov
and
and
or
adc
sub
jno
pop
(bad)
adc
lock
xchg
push
cmp
and
add
js
imul
add
cmp
mov
or
shl
fs
add
aad
repz
cmc
gs
push
dec
cmp
fwait
mov
push
cdq
(bad)
rol
pop
mov
mov
and
mov
cmps
adc
jb
push
or
nop
add
mov
jbe
sub
aas
in
movs
xor
(bad)
pop
(bad)
cld
xchg
jne
jecxz
outs
push
mov
mov
in
dec
out
mov
arpl
push
sti
stos
call
popa
push
cmp
(bad)
fsub
xor
fldenv
int3
xor
movs
(bad)
and
(bad)
hlt
adc
xor
mov
cmp
jnp
loopne
ss
or
loop
sub
(bad)
xlat
into
xchg
popf
ret
movs
mov
inc
ficomp
pop
das
or
test
inc
imul
test
and
xor
shl
sub
add
imul
ja
icebp
dec
xchg
(bad)
xchg
scas
push
aad
frstor
cmps
ror
inc
es
je
(bad)
jle
jbe
test
lds
mov
push
movs
or
mov
leave
arpl
ror
shl
(bad)
dec
dec
push
jle
addr16
jbe
pop
jle
pusha
ins
inc
int3
retf
or
dec
inc
fwait
xchg
aaa
xchg
loopne
fwait
clc
not
ja
pop
and
push
ds
adc
arpl
mov
hlt
cmp
mov
sbb
push
push
jge
or
xchg
(bad)
fistp
mov
shl
push
cs
out
sub
sti
fild
addr16
ret
jle
or
pop
fcmove
out
inc
mov
shl
push
cli
test
and
nop
call
xchg
jb
and
pusha
inc
xchg
and
and
jo
xor
mov
test
aam
cwde
jecxz
mov
mov
ja
inc
push
xor
pop
and
push
push
jae
repz
cmps
popa
lahf
shr
push
fdiv
ins
out
jo
ins
jle
jmp
sub
ret
mov
enter
mov
loopne
cmp
fbstp
ror
aad
jbe
(bad)
icebp
jmp
cmp
inc
push
lods
sub
rcl
lods
xor
cmps
out
pop
push
mov
mov
dec
test
dec
jo
xchg
and
and
push
cmp
xor
and
call
and
pusha
out
add
and
pop
dec
mov
and
or
xor
inc
and
das
pop
sub
jp
leave
sub
iret
mov
pop
pop
loop
lock
fist
push
fsub
mov
ror
xchg
aam
sub
or
leave
sub
in
out
pushf
pop
xor
adc
add
gs
cmp
and
adc
in
enter
outs
mov
daa
lea
shr
pop
push
in
add
jg
pusha
clc
popf
mov
and
loope
fnstsw
sbb
jb
ja
and
dec
rcl
push
in
adc
outs
inc
lahf
test
mov
enter
nop
or
mov
cs
mov
mov
bnd
sub
scas
imul
call
fstp
call
mov
mov
push
push
repz
fstp
adc
push
and
jae
std
cmps
mov
cmc
xchg
repz
adc
sti
xlat
pop
cs
pop
mov
push
mov
movs
mov
sub
mov
(bad)
jle
mov
stos
xor
inc
and
aam
pop
pop
inc
mov
popa
pop
xchg
icebp
shr
es
mov
les
call
ret
mov
es
add
mov
div
(bad)
pushf
retf
xchg
daa
outs
inc
mov
and
fnstenv
call
out
movs
push
jmp
das
mov
retf
loopne
mov
loope
mov
ret
out
sub
loopne
or
div
stc
test
or
stos
mov
jno
je
ja
je
and
pusha
add
push
xchg
repz
retf
daa
xchg
test
sub
adc
xor
rcr
xor
sub
xchg
into
neg
sahf
(bad)
out
shl
jge
daa
ins
leave
adc
loope
and
or
mov
popa
dec
mov
ja
mov
xor
outs
sbb
out
pop
popf
daa
cs
and
ret
adc
lds
adc
nop
inc
out
sub
mov
les
(bad)
cmc
jo
gs
dec
adc
popa
jb
ja
push
mov
loope
xor
std
retf
(bad)
dec
sahf
or
xchg
rcl
sub
daa
add
mov
ds
push
xor
js
in
imul
cmps
jl
out
mov
fcompp
add
cmp
bound
jmp
xchg
mov
dec
mov
xlat
out
je
rol
or
call
emms
lahf
mov
ins
lods
sti
out
mov
cmp
xor
inc
mov
ja
push
add
fadd
inc
popf
xor
inc
out
mov
inc
ds
addr16
sbb
ja
xlat
loopne
and
dec
or
mov
xor
push
or
ficomp
pop
xchg
(bad)
xlat
add
and
jecxz
mov
fwait
mov
push
mov
push
loope
push
test
(bad)
push
inc
aas
int3
mov
inc
xor
mov
mov
outs
xchg
xchg
out
inc
push
mov
(bad)
dec
ins
fiadd
mov
mov
inc
std
mov
scas
mov
cdq
or
jmp
sti
sub
cmova
ror
adc
repz
div
ret
add
push
test
in
cdq
aam
or
inc
cmp
xchg
pop
repnz
sbb
sbb
pop
sbb
inc
pop
add
aaa
(bad)
je
sub
ret
mov
(bad)
add
sbb
mov
and
and
and
or
loope
loopne
push
push
iret
pop
cmp
push
push
mov
ficom
aad
dec
xchg
mov
jg
adc
jae
push
mov
inc
jmp
cld
xchg
xchg
pop
push
dec
or
test
push
and
xchg
test
scas
dec
jno
call
fdiv
add
daa
inc
aas
lds
adc
test
xlat
test
push
mov
repz
push
add
jo
mov
sahf
or
sbb
xchg
dec
push
mov
les
pop
ror
mov
push
xor
or
lea
cwde
xchg
out
dec
or
das
mov
scas
jae
adc
jae
das
jno
ds
out
add
mov
sub
mov
dec
mov
loope
push
loop
and
and
gs
into
add
cdq
loopne
adc
clc
fdiv
test
int3
jmp
pusha
and
call
and
and
in
mov
idiv
mov
dec
inc
daa
jno
adc
leave
imul
popf
icebp
shr
xor
enter
xor
cdq
not
cli
xchg
inc
test
in
sub
inc
(bad)
xor
sbb
dec
idiv
fld
movs
or
call
shr
jae
rol
mov
pop
mov
xor
ins
cmc
ins
or
icebp
jmp
jno
bound
mov
cld
aas
pop
mov
xor
rcr
sub
out
and
lods
inc
je
out
dec
push
add
repz
in
dec
and
out
nop
cli
add
push
imul
xchg
pop
sbb
aam
test
div
pop
xor
sub
(bad)
sub
adc
jns
mov
mov
outs
cdq
lock
jae
lock
adc
aas
cmps
pusha
cmps
or
loop
shr
ror
xchg
pop
mov
cmp
xchg
hlt
imul
add
pusha
sahf
mov
loope
add
add
cmp
inc
repnz
push
and
push
xchg
jg
sub
push
adc
aad
xor
cmps
adc
push
imul
call
cmps
loope
mov
jno
adc
adc
ret
mov
das
stos
out
icebp
jmp
xor
(bad)
int
outs
push
inc
ss
cmps
mov
(bad)
jp
movs
xor
inc
xchg
es
mov
retf
cmc
pop
test
pop
push
mov
retf
xchg
int
mov
clc
imul
add
xor
ins
dec
hlt
cwde
fwait
in
xchg
mov
jmp
xor
xor
inc
push
ins
aaa
pop
xchg
ret
iret
sbb
inc
jno
mov
push
jno
seta
pop
sub
jb
xor
data16
dec
inc
sub
mov
loopne
in
mov
shl
retf
cld
out
cwde
std
inc
test
cmp
es
mov
pop
clc
mov
cmc
jne
gs
mov
out
mov
and
and
ss
js
push
pop
mov
jae
jmp
pushf
mov
data16
xor
call
iret
pusha
mov
push
mov
imul
loopne
cmps
push
mov
leave
and
add
pop
rcr
mov
xchg
adc
pop
mov
ja
outs
repnz
xchg
daa
jmp
into
xor
mov
daa
rcl
mov
xchg
mov
cs
ins
push
repz
xor
pop
aad
xchg
dec
and
test
pusha
jb
adc
mov
sub
and
mov
imul
push
gs
call
int3
cmps
and
stos
shr
adc
iret
nop
jl
test
aam
or
sub
inc
cmps
push
xor
mov
fldcw
sbb
jb
mov
addr16
cwde
mov
mov
loopne
sub
leave
lds
ret
js
mov
add
hlt
jecxz
and
aaa
cmp
aam
jnp
aam
ror
in
mov
inc
inc
pop
mov
icebp
jnp
fmul
outs
add
inc
fld
lock
js
mov
dec
inc
cmc
add
adc
jle
retf
sbb
mov
(bad)
lock
sub
jb
pop
daa
pop
adc
push
mov
xlat
shl
mov
jecxz
push
aas
xchg
or
fadd
out
aad
mov
(bad)
fiadd
adc
jmp
or
cmc
pop
inc
mov
mov
call
mov
dec
or
dec
jle
push
dec
jg
out
in
bound
xchg
je
and
sub
es
dec
test
js
xor
je
ret
fld
clc
fsubp
dec
aad
inc
ja
push
sub
fcmovnb
jno
daa
and
in
pusha
ret
lahf
pop
pushf
inc
add
sbb
lods
jae
fwait
cmp
pop
ja
xchg
mov
jmp
shl
fsubr
pop
scas
dec
mov
pop
rep
mov
call
ins
aaa
repz
push
mov
and
or
push
jbe
adc
xchg
mov
(bad)
pop
bswap
dec
pop
je
and
xchg
in
fld1
cdq
out
inc
test
sub
mov
lahf
and
push
hlt
jp
aas
xor
mov
loope
les
mov
mov
rcl
dec
xor
push
mov
or
inc
fadd
rol
pop
sar
mov
adc
adc
adc
(bad)
outs
dec
or
dec
out
icebp
xor
ds
repz
adc
push
xlat
xor
(bad)
nop
shr
jmp
outs
sbb
sar
(bad)
xchg
push
int3
mov
ror
das
jo
inc
xchg
pop
fwait
repz
push
rcr
test
mov
push
test
push
(bad)
loopne
cmp
fstp
sbb
dec
bound
push
pop
and
cmp
(bad)
inc
adc
icebp
lods
add
leave
call
enter
jne
shl
test
inc
vmovq
xchg
loope
and
outs
adc
outs
lea
adc
xlat
imul
aam
mov
mov
pop
adc
rol
das
sbb
pop
or
je
inc
mov
hlt
sbb
fmul
loope
sub
inc
xchg
retf
hlt
push
xchg
cmps
inc
imul
fs
push
fs
cmps
inc
mov
iret
cli
(bad)
or
clc
(bad)
pop
jbe
add
pop
sti
dec
aad
in
idiv
add
push
cvtdq2ps
dec
push
mov
add
fldenv
pusha
cmps
fwait
aaa
jns
clc
(bad)
pop
out
xor
or
popa
push
add
xor
mov
pop
mov
cmps
lock
dec
leave
add
je
sub
cmps
fcmovb
popf
xchg
or
mov
jo
(bad)
mov
pusha
pop
inc
inc
push
add
push
adc
gs
retf
test
maskmovq
imul
jo
ins
adc
pusha
xchg
add
ret
dec
in
aaa
(bad)
rcl
ds
push
mov
movs
sbb
mov
sbb
ja
pop
nop
ja
rcr
ins
ja
xchg
and
loopne
xor
mov
jge
pop
inc
inc
(bad)
out
retf
push
mov
sub
fidiv
call
jl
inc
cs
pop
mov
inc
add
mov
clc
mov
inc
push
mov
ds
iret
out
and
jo
jb
jle
test
sub
and
push
jl
and
xchg
jno
jae
mov
lods
daa
mov
jmp
mov
cdq
mov
not
cmp
stc
icebp
outs
mov
fxch
aaa
dec
cmp
pop
out
and
add
xchg
push
dec
xor
xor
outs
movs
cmp
adc
call
shl
add
dec
fwait
mov
outs
sub
push
loopne
adc
addr16
out
es
xchg
test
aas
mov
add
sti
lods
adc
retf
xchg
mov
pop
mov
sbb
out
rcl
pop
out
in
popf
popa
imul
ins
or
int3
jo
nop
je
int3
sbb
or
push
jae
(bad)
ds
cwde
sbb
das
xor
movs
mov
outs
mov
and
test
in
jg
rcr
jecxz
pop
mov
aam
ds
inc
dec
loop
pop
jge
and
addr16
mov
xor
call
add
push
pop
dec
das
cmp
sbb
cli
pop
les
(bad)
jl
push
lock
into
mov
mov
sbb
bound
jae
push
jbe
jmp
xchg
push
test
loop
cmp
add
inc
or
and
aad
das
out
ins
mov
inc
fidiv
push
push
pusha
push
and
xlat
ret
movs
das
and
inc
sbb
test
mov
fidivr
test
int
inc
fisub
aaa
repnz
jp
dec
jbe
xor
div
xchg
xor
movs
xchg
push
or
loope
outs
(bad)
xchg
xchg
mov
xor
pop
pusha
data16
(bad)
int3
mov
add
sbb
push
xchg
push
jne
arpl
mov
cmp
jp
jo
xor
mov
cmps
fs
lock
sub
and
leave
shr
jmp
(bad)
(bad)
jbe
pop
ins
jle
in
rol
pop
jg
lods
jne
push
pop
jle
in
jmp
dec
mov
outs
pusha
add
jmp
test
jmp
dec
ret
aas
nop
pop
pop
and
or
adc
out
adc
push
push
mov
out
jp
mov
hlt
nop
sti
pop
xchg
mov
push
or
fnsave
jae
jo
iret
fild
loopne
add
jmp
adc
cmp
cld
call
and
movs
sti
cwde
push
shl
dec
push
cmc
fneni(8087
mov
add
nop
aam
ds
push
adc
rol
xlat
sahf
inc
lock
mov
fdivr
loope
in
enter
inc
adc
clc
jl
xchg
pop
pop
push
fs
(bad)
cmps
push
xchg
dec
mov
xchg
mov
nop
and
pop
adc
push
jecxz
lods
or
popa
shl
and
mov
fmul
xchg
mov
stos
adc
xor
pusha
xor
icebp
aaa
sbb
jecxz
jl
(bad)
inc
mov
call
lds
push
push
sub
mov
pusha
adc
push
jecxz
mov
out
mov
mov
sub
dec
xor
test
adc
fs
pop
test
iret
shl
xchg
cwde
pop
or
mov
xor
pop
sahf
push
push
xchg
cs
imul
pushf
hlt
mov
pop
adc
push
js
popa
test
pop
jbe
and
inc
mov
and
dec
nop
shr
xor
push
push
in
hlt
jge
and
inc
cmp
push
lahf
(bad)
mov
cmc
arpl
or
xchg
inc
push
push
mov
movs
test
sbb
pop
cmp
mov
pusha
iret
inc
mov
ins
in
mov
gs
repnz
les
mov
in
test
mov
push
int
push
inc
in
jg
daa
fwait
pop
shl
push
push
outs
and
adc
xchg
mov
out
scas
mov
inc
in
xor
inc
(bad)
dec
and
mov
test
jecxz
push
call
out
shl
and
push
lods
pop
jns
mov
repnz
dec
or
sbb
dec
pop
inc
jns
pop
into
test
xchg
hlt
movs
xor
gs
adc
adc
addr16
inc
xor
sbb
popf
pop
fcompp
jp
sti
bound
aam
daa
inc
sub
stc
(bad)
xchg
pop
fucomip
repz
dec
mov
mov
ja
jg
add
add
xor
in
movs
repz
jo
in
dec
jp
hlt
popa
pop
ror
lahf
fldenv
nop
movs
mov
inc
xor
dec
inc
or
and
popa
dec
cwde
std
cmp
push
xchg
push
jb
xor
rcr
xchg
ja
mov
movs
rep
push
js
in
push
imul
dec
sbb
les
arpl
fldenv
loope
mov
scas
add
or
enter
jp
les
xchg
push
jge
aaa
pop
test
adc
fcmovbe
cli
repnz
inc
pop
pop
dec
dec
mov
ss
and
cmp
adc
scas
bound
push
inc
fcmovnb
sub
pop
xchg
xor
neg
fadd
rcl
test
xor
in
add
add
mov
pop
or
cmp
jno
xchg
shl
inc
fadd
nop
jp
icebp
push
fild
add
xor
jno
mov
pop
cmp
xor
gs
iret
(bad)
and
fs
cmp
sbb
dec
or
in
or
and
add
lock
xchg
pusha
xchg
jmp
mov
cmps
add
cmp
neg
jbe
cld
inc
cmc
mov
mov
sbb
inc
xor
mov
mov
push
addr16
(bad)
shr
arpl
mov
daa
popf
ja
ret
add
iret
scas
test
mov
jecxz
xchg
jmp
or
pop
aam
sub
test
mov
or
inc
rcl
idiv
jo
dec
shl
inc
dec
dec
push
addr16
mov
pop
aad
jecxz
inc
inc
lods
into
aaa
and
mov
out
sbb
icebp
xchg
and
inc
stos
mov
push
mul
mov
ds
fdivr
shr
scas
aad
pop
add
and
imul
bound
or
adc
test
sub
out
test
jo
addr16
outs
pusha
cmps
cmp
cmc
int
pop
call
pop
iret
test
xchg
adc
je
and
out
pop
mov
xor
push
mov
outs
adc
pop
adc
das
ror
sub
dec
ret
jno
fcom
cwde
adc
nop
icebp
fnstcw
sub
mov
retf
mov
iret
add
cs
or
adc
jo
adc
mov
dec
xchg
(bad)
shl
nop
out
jg
stc
dec
sbb
or
not
inc
dec
cmc
(bad)
push
mov
out
dec
and
call
pop
scas
push
pusha
xchg
adc
(bad)
fld
iret
(bad)
ja
shr
pop
stc
fwait
jge
clc
or
sbb
jmp
(bad)
in
ret
pop
call
inc
inc
sbb
mov
xlat
js
rcl
shr
nop
mov
inc
inc
sar
sub
pop
jp
sub
call
xchg
loope
inc
jg
lods
mov
ror
inc
push
sbb
add
or
cmps
in
in
int3
outs
(bad)
push
jge
add
inc
or
adc
pop
jae
jle
hlt
fcom
enter
in
and
(bad)
xchg
les
cwde
rcr
push
btr
mov
inc
loope
rcr
sub
push
adc
inc
fs
adc
sbb
lea
es
ja
test
and
mov
mov
iret
pusha
je
push
pop
pop
movs
in
adc
jmp
jns
pop
sub
iret
call
idiv
xor
pop
test
and
mov
test
add
adc
and
addr16
xchg
stos
das
cmc
mov
call
mov
xchg
xchg
pop
(bad)
in
in
jl
cmps
xchg
dec
jg
cs
mov
xor
out
repnz
icebp
or
test
into
cmp
xchg
iret
mov
mov
outs
in
pop
xchg
(bad)
stc
and
outs
inc
aas
lea
aam
mov
or
push
aad
(bad)
push
jae
cmps
push
nop
lods
add
lock
push
cmp
ins
xor
jle
loopne
cmp
jle
adc
sbb
jb
into
mov
jnp
sub
jbe
mov
adc
fcom
jo
movs
imul
not
and
fcomip
cmps
sub
rcl
jno
jbe
fs
ja
add
pop
jp
or
jo
xchg
cmp
xor
push
mov
es
cwde
ret
xchg
ja
xchg
repz
pop
repz
mov
add
arpl
loop
data16
jo
adc
aaa
mov
out
retf
mov
mov
mul
jnp
retf
repnz
cmp
adc
pop
test
mov
ins
loope
dec
fucom
jnp
repnz
jno
ret
mov
xor
fcomp
inc
or
inc
cwde
xchg
in
inc
and
pop
inc
add
jno
aaa
xor
leave
test
aad
xlat
nop
lock
cmps
pusha
pop
sbb
shl
popf
push
sti
sar
cmps
mov
sahf
lock
push
mov
pop
inc
in
xor
inc
cmp
addr16
ret
adc
cmc
mov
shl
xchg
ror
mov
mov
lock
cmp
arpl
je
mov
push
jmp
and
fs
frstpm(287
ret
inc
and
sbb
push
pop
shr
pop
cmp
add
out
iret
sub
xor
xchg
or
in
cmc
push
pop
inc
dec
sbb
cmps
jg
loopne
sub
and
cmps
xchg
fcmovb
and
ja
mov
add
scas
dec
pop
jb
dec
repz
jge
push
dec
and
add
cmp
ret
push
xchg
imul
pop
retf
test
lea
dec
add
add
int3
test
sbb
repnz
fcom
cmp
push
loopne
inc
push
in
aaa
rol
push
aad
pop
loope
mov
push
lock
inc
sbb
ficomp
push
push
cmp
mov
push
or
jle
mov
test
xor
xor
mov
sub
out
test
and
xchg
scas
mov
inc
jge
ret
je
xchg
push
data16
aad
push
lea
xchg
iret
sbb
mov
(bad)
or
add
leave
or
shl
shr
div
inc
shl
pop
dec
ja
aad
addr16
cs
int
loop
call
rcl
arpl
fsubp
mov
mov
dec
js
mov
jae
pminub
ss
mov
inc
retf
inc
xlat
aam
in
je
mov
xor
xor
pop
mov
adc
mov
xor
test
dec
xchg
fistp
gs
inc
inc
inc
push
xchg
push
and
inc
hlt
je
test
(bad)
sbb
xor
enter
fwait
or
push
inc
push
sub
or
mov
jl
mov
mov
jmp
lahf
fs
and
jl
pop
shl
or
push
mov
fsub
ret
add
inc
xchg
or
mov
dec
or
cmp
(bad)
or
popf
loopne
test
mov
mov
mov
add
mov
xor
jle
cld
push
push
mov
fcomp
pop
xchg
inc
leave
retf
sub
sahf
adc
inc
retf
aas
pop
sub
fistp
add
mov
dec
and
adc
call
pop
xor
test
test
mov
cmc
js
js
xor
clc
add
mov
rcl
mov
inc
mov
inc
call
in
pop
gs
cli
test
ret
mov
inc
adc
mov
push
imul
xchg
add
pusha
push
jne
jae
call
inc
aam
shl
bound
inc
adc
push
(bad)
mov
pop
push
test
test
dec
(bad)
push
adc
mov
xchg
out
in
xchg
mov
std
les
popf
and
outs
xor
leave
fcom
ins
idiv
bound
mov
mov
xchg
xchg
mov
jmp
and
cmps
push
pop
cmps
shl
xor
movs
mov
pop
or
mov
inc
inc
cmps
ret
ss
pop
outs
icebp
test
sar
pop
ret
pop
ret
dec
test
lock
pop
add
adc
(bad)
repnz
mov
lods
(bad)
xor
outs
(bad)
(bad)
jmp
lock
dec
and
(bad)
in
push
pop
ss
mov
jecxz
mov
in
stos
pop
test
inc
push
pusha
adc
mov
shl
jmp
inc
inc
das
scas
daa
loopne
jns
push
inc
push
pusha
jp
cmp
cwde
and
icebp
imul
pop
mov
pop
dec
push
mov
dec
test
fimul
movs
repnz
repz
les
hlt
pop
data16
inc
outs
jl
out
jae
js
ins
test
rcl
pop
jno
xchg
inc
inc
cmp
jns
mov
and
int3
imul
sbb
add
fisubr
dec
jb
rol
pop
fcmovnbe
ja
inc
and
(bad)
int
cli
mov
je
xchg
and
lock
shl
retf
mov
out
jbe
out
fist
and
push
sbb
xchg
push
cli
aam
push
xor
add
rcr
aad
xor
xchg
std
mov
mov
xchg
mov
cmps
int3
and
(bad)
shr
jecxz
and
retf
pusha
fld
xchg
fild
(bad)
push
adc
pop
dec
test
jbe
mov
popa
pop
or
mov
add
jne
dec
(bad)
repnz
je
mov
jae
jmp
add
add
add
add
pop
dec
inc
pop
jnp
and
xchg
lds
shl
movs
xor
loope
retf
cmps
pop
ins
dec
sub
xor
rol
push
in
cwde
(bad)
fcom
(bad)
dec
mov
iret
cwde
mov
lds
mov
lods
inc
jo
inc
jl
push
inc
adc
cmps
push
inc
push
je
mov
out
and
and
loopne
aam
repnz
mov
rcl
into
xor
xor
push
xchg
and
loopne
popa
xlat
loop
popf
test
jns
cmp
sar
daa
sub
ficomp
mov
ja
scas
cmp
pop
rcr
mov
jno
mov
mov
shl
add
jo
jge
xchg
dec
pusha
mov
adc
repz
sub
(bad)
cmc
imul
scas
xchg
shl
xchg
aaa
sub
push
ins
movs
daa
mov
lock
jno
call
mov
inc
test
lahf
dec
lock
hlt
pop
push
mov
mov
sbb
bound
dec
and
adc
cmps
test
mul
sub
jecxz
jmp
jl
sti
inc
ins
inc
cmp
dec
out
imul
adc
or
xchg
xchg
nop
push
ds
aaa
out
push
pop
push
fsubr
dec
push
in
fimul
mov
in
cmp
xchg
mov
pop
adc
retf
addr16
imul
rol
div
movs
aaa
out
stc
and
dec
or
lds
out
jno
ja
test
mov
mov
jb
xchg
out
sub
or
mov
push
cmps
dec
pop
sbb
push
movs
add
jmp
jmp
mov
rcl
xchg
dec
pop
out
ins
imul
call
into
inc
or
mov
push
add
dec
jne
shl
rcl
mov
shl
and
adc
into
out
neg
jbe
mov
pop
inc
sbb
hlt
shl
in
loope
popa
(bad)
push
aam
mov
sub
daa
inc
inc
xor
sub
or
push
add
jbe
imul
push
jno
div
cmp
xlat
leave
mov
clc
jecxz
test
fldenv
jb
popa
xor
sahf
lds
and
cwde
inc
adc
les
pop
xchg
mov
jge
pop
rcl
cmp
jbe
sbb
btr
push
xchg
dec
or
pop
(bad)
out
loop
adc
arpl
and
fstp
adc
lahf
mov
fdiv
test
add
sub
icebp
adc
pop
pop
xchg
inc
xchg
arpl
shl
dec
and
adc
std
add
cs
pop
loope
jecxz
xchg
sub
out
call
xchg
(bad)
(bad)
loop
(bad)
mov
je
xor
adc
(bad)
stc
mov
xchg
ret
nop
add
add
and
addr16
pop
fdiv
rol
leave
loop
cld
and
mov
adc
sbb
leave
out
clc
inc
call
call
pop
(bad)
ds
call
xor
call
xor
das
cmp
rol
mov
shl
jg
mov
cwde
adc
jp
lock
out
inc
fild
imul
cwde
rcr
icebp
stc
add
rcr
push
inc
lock
xor
adc
cmps
sbb
add
push
test
add
out
mov
rol
add
enter
dec
jno
jbe
movs
aaa
mov
data16
stos
jg
int3
js
xchg
addr16
mov
pusha
(bad)
adc
sub
and
lods
cmp
sbb
in
cmp
add
enter
sbb
outs
xor
scas
xor
mov
pop
sub
nop
mov
icebp
fwait
shl
and
add
lds
(bad)
jecxz
cmc
xor
bound
(bad)
hlt
pop
pop
mov
out
dec
inc
(bad)
pop
stos
sbb
jae
jbe
cmp
pusha
pop
add
outs
push
jne
sahf
ins
adc
and
loopne
xchg
int3
inc
mov
dec
push
inc
xchg
and
xchg
in
lds
mov
ja
mov
out
cmp
or
adc
push
pextrw
and
sar
in
jae
add
xchg
sub
or
push
imul
(bad)
(bad)
sub
xchg
mov
adc
(bad)
cdq
test
jg
xchg
(bad)
popf
jl
jmp
and
mov
test
movs
inc
push
movs
test
fs
cdq
or
fst
sbb
add
imul
mov
cmc
adc
pusha
rol
cmp
mov
retf
out
mov
jae
je
shl
fstp
rol
scas
push
aad
jg
sbb
leave
out
ja
(bad)
sbb
loope
jno
enter
dec
jo
add
jne
add
out
(bad)
push
scas
sbb
xor
or
push
xor
in
inc
or
mov
sbb
adc
or
or
es
mov
retf
jecxz
ins
out
xor
mov
(bad)
sub
xchg
inc
cmps
or
js
nop
jne
xor
ficom
daa
pop
jb
add
add
test
jo
push
cmps
jp
inc
lods
push
inc
out
ss
xchg
or
and
aad
pop
pop
daa
and
sub
(bad)
cmp
out
sahf
push
fistp
inc
push
and
mov
push
push
fild
outs
icebp
das
xor
mov
push
lods
lock
bound
in
das
pop
xor
das
shl
into
pop
les
jmp
aam
jle
ins
mov
push
arpl
pop
jo
(bad)
gs
cmp
adc
cmp
int3
into
aad
repz
xlat
xor
sbb
push
or
ds
inc
inc
jno
push
push
add
icebp
loope
test
xchg
inc
or
mov
jae
fcomip
and
sbb
xchg
xor
enter
inc
cs
cmp
dec
scas
and
pop
inc
push
test
(bad)
daa
stos
stos
adc
xchg
movs
mov
pop
sbb
movs
mov
das
mov
(bad)
(bad)
call
shl
cmp
add
out
sub
jl
popa
adc
jnp
mov
mov
pop
mov
dec
and
in
dec
adc
add
loopne
idiv
fmul
mov
adc
imul
sub
pusha
iret
sar
fwait
cs
xchg
push
inc
xchg
cwde
test
int
xor
dec
mov
xchg
cmp
dec
adc
(bad)
iret
lds
sbb
popf
push
xlat
mov
sbb
push
add
push
cmp
and
scas
out
shl
out
cmps
adc
inc
div
mov
in
ja
popf
mov
popf
adc
push
add
imul
push
add
(bad)
(bad)
lods
icebp
cmps
jno
add
or
mov
dec
xchg
xchg
loope
dec
fdiv
xchg
sar
scas
pop
fisttp
cmp
xor
sbb
cmps
inc
mov
stc
lds
mov
mov
clc
mov
adc
aam
or
jg
(bad)
jnp
(bad)
push
dec
or
sub
mov
push
(bad)
mov
outs
dec
push
mov
loope
ins
sbb
cwde
dec
xor
fcomp
push
or
daa
fs
xor
inc
cmp
fild
xor
push
pop
cmc
jecxz
xor
shl
and
mov
mov
movs
xlat
movs
mov
xchg
jno
or
adc
push
push
ds
sbb
and
test
std
mov
loop
mov
push
add
add
movs
fadd
(bad)
sbb
shl
mov
aaa
xchg
shl
and
xchg
scas
mul
add
push
out
dec
add
xchg
add
rcl
repz
xor
inc
(bad)
xchg
mul
mov
addr16
addr16
les
inc
addr16
imul
mov
xlat
pop
xchg
push
stos
adc
out
scas
sub
addr16
das
fisub
sub
nop
fcmovnu
inc
and
adc
lea
mov
movs
xchg
dec
adc
aaa
int3
fsub
popa
push
mov
push
ss
test
jecxz
in
rcr
jne
jmp
out
addr16
inc
jecxz
into
sahf
stos
mul
push
es
hlt
pop
pushf
out
cdq
xchg
xchg
or
cmp
shl
mov
jle
gs
(bad)
fiadd
retf
idiv
push
int
xor
push
xor
push
add
mov
cmp
aad
pop
ret
mov
inc
dec
jge
sbb
packssdw
push
inc
push
sar
mov
sahf
xor
out
push
adc
ret
ja
inc
mov
aam
ret
adc
push
ficom
pop
cs
inc
push
out
cmps
lahf
xchg
scas
jo
jo
nop
das
pusha
popa
and
outs
mov
inc
ja
adc
hlt
xchg
sbb
and
xor
xor
sub
movs
clc
sbb
test
add
and
and
mov
inc
fdivr
mov
and
(bad)
mov
int
and
mov
dec
add
pop
lea
enter
out
mov
cmps
dec
lock
popf
icebp
push
add
popa
adc
or
dec
aad
xchg
jns
mov
or
(bad)
dec
cmc
inc
loopne
rcr
push
stos
shl
lds
inc
or
icebp
scas
stos
fwait
xchg
dec
adc
adc
jge
data16
lea
pop
ds
add
adc
leave
(bad)
xchg
push
sbb
ja
imul
inc
inc
pop
outs
je
pop
bound
adc
lahf
or
stc
pop
addr16
adc
(bad)
push
and
repnz
gs
sar
shl
jecxz
cmp
push
push
and
mov
inc
aaa
loope
add
push
mov
xchg
mov
call
(bad)
adc
sub
push
test
xchg
mov
sub
or
out
test
fmul
add
loope
daa
arpl
in
cmp
cmps
push
push
push
and
dec
cmps
xor
retf
adc
rol
pop
and
mov
xor
dec
stc
push
fild
lods
or
push
cmc
clc
test
ret
inc
and
push
mov
and
retf
push
cwde
imul
mov
stos
icebp
pop
cmps
jnp
fs
mov
xor
test
fs
and
or
sbb
ja
fbld
stos
and
xor
mov
and
xor
lea
mov
mov
mov
xor
std
nop
ja
out
pop
test
jle
push
sbb
push
mov
sbb
add
or
add
imul
mov
pop
adc
out
(bad)
fistp
repnz
xlat
xchg
adc
push
jp
stos
retf
fs
inc
dec
movs
adc
loopne
out
xchg
sbb
ret
mov
xlat
pusha
jl
sub
(bad)
outs
inc
xor
xlat
sbb
add
addr16
daa
shl
push
cmps
es
jge
fnstcw
cmp
mov
jecxz
rcl
sub
xchg
xor
clc
loop
hlt
cdq
pop
sbb
addr16
mov
out
mov
jbe
add
mov
inc
lds
xor
cwde
xlat
test
fwait
jle
sub
jbe
dec
imul
add
movs
mov
in
fmul
enter
cmps
push
and
arpl
add
push
jle
xchg
out
fldcw
stos
and
imul
jno
ret
inc
xor
lahf
adc
add
xor
push
push
push
xchg
(bad)
shl
and
add
shl
fld
adc
aad
push
hlt
lahf
outs
pop
test
repz
jne
dec
bound
test
shr
xchg
mov
cmps
push
out
jg
xor
movsx
(bad)
cwde
pop
add
std
imul
aaa
lods
or
add
adc
retf
mov
ffreep
ja
add
shl
call
jb
mov
shl
cmp
or
mov
mov
pusha
jno
push
xchg
xor
xchg
jo
or
mov
daa
shl
and
adc
mov
inc
clc
xor
pop
mov
das
and
lock
mov
aas
adc
iret
mov
inc
shl
jmp
cmp
mov
mov
ffreep
mov
jg
sub
(bad)
lea
std
test
sub
jae
ss
ss
xchg
clc
mov
in
xor
xchg
(bad)
jns
data16
mov
lock
shl
mov
pop
lock
sti
cld
mov
in
mov
adc
ins
cmp
(bad)
mov
inc
jmp
scas
shl
jno
or
inc
rcr
push
gs
in
mov
(bad)
ja
aaa
pop
(bad)
int
neg
ror
push
add
call
pop
jo
and
mov
dec
or
pop
add
daa
call
iret
cs
jmp
pop
adc
loop
jge
jg
movs
nop
punpckldq
arpl
in
inc
test
jo
dec
push
push
xchg
mov
out
and
bnd
ss
inc
mov
push
sub
ds
pop
leave
mov
xor
or
ss
or
les
push
jmp
adc
sahf
movs
jnp
pop
mov
ret
dec
stos
sbb
lods
hlt
into
dec
and
xlat
imul
add
popf
rcr
push
mul
cmp
pop
cmp
aaa
les
push
jo
fdivp
cmps
jno
stc
mov
adc
and
aad
inc
push
pop
daa
cdq
push
and
(bad)
add
sbb
mov
sub
push
inc
and
cmps
mov
push
daa
push
call
rcl
clc
std
movs
jge
aaa
pop
sub
cmp
push
fs
sbb
retf
mov
mov
xchg
push
sub
lods
retf
jmp
std
inc
push
push
stos
push
aaa
add
fldenv
cmc
loopne
enter
daa
(bad)
and
movs
inc
mov
call
rol
inc
rcl
push
loop
test
push
fdiv
add
sahf
imul
lahf
les
test
sub
arpl
movs
cmp
out
push
mov
and
sti
mov
outs
fbstp
add
out
out
movs
pop
add
addr16
xchg
ret
pop
scas
iret
aaa
xchg
inc
inc
mov
in
jg
jno
xchg
mov
movs
sahf
js
jmp
pop
scas
ins
inc
sbb
or
ja
dec
and
aaa
ror
das
mov
scas
xor
and
and
inc
cmp
fisttp
clc
mov
adc
cmp
fwait
movs
int
aaa
inc
je
neg
or
adc
lock
cmp
mov
sub
loopne
stc
mov
jo
lods
jo
mov
mov
add
mov
mov
cmp
retf
nop
mov
js
out
xchg
repnz
nop
fisub
push
into
pop
sub
pop
icebp
ins
mov
xlat
inc
lds
std
fistp
test
sahf
or
repz
repz
push
inc
setno
outs
out
shl
leave
pop
push
pop
movs
pop
xchg
pop
xchg
pop
xchg
dec
aas
cli
cwde
cmp
mov
cld
sbb
adc
dec
or
mov
pusha
cld
sbb
xor
jae
add
xor
jo
add
lahf
pop
mov
(bad)
out
leave
sbb
add
icebp
push
cld
adc
push
sbb
cmp
push
pop
and
xlat
adc
mov
inc
neg
pop
sar
sbb
sub
or
mov
xor
and
xchg
fisttp
jb
mov
xchg
mov
rcr
lock
inc
sahf
fidivr
fistp
or
inc
push
js
sbb
xchg
bound
fxam
add
retf
repnz
cmp
xor
fmul
jmp
div
nop
mov
push
aas
sub
ja
imul
ret
fwait
ss
repnz
fcmovu
adc
mov
dec
mov
sub
mov
ret
repnz
and
mov
lds
push
mov
mov
pop
sub
sbb
out
iret
in
fdivr
jne
or
cdq
ja
cmp
mov
and
cmps
sbb
out
ficom
add
out
pop
pop
add
jg
test
push
pshufw
fidivr
pop
mov
add
ds
push
test
pop
fstp
push
ss
xor
jmp
mov
fadd
xchg
inc
(bad)
mov
push
xor
push
mov
cmc
cld
push
fcomp
ss
or
mulss
mov
adc
call
rcl
dec
sub
xchg
daa
mov
fcmovnu
add
jmp
and
xor
sbb
and
or
cmp
loopne
out
aad
xchg
xor
mov
add
cmps
sub
inc
xor
enter
xchg
shl
movs
out
popa
mov
rcr
add
or
scas
pop
sub
dec
lods
movs
fs
dec
push
mov
test
sub
sub
(bad)
push
loopne
sub
xchg
cmp
mov
mov
loopne
sub
inc
and
cmp
test
int3
and
jge
shl
icebp
lods
int3
cwde
rol
imul
into
dec
out
or
(bad)
shl
scas
out
ror
and
jae
cdq
scas
inc
xlat
imul
mov
call
xor
sahf
mov
data16
mov
jbe
jmp
and
aad
mov
ret
xchg
add
not
hlt
adc
xchg
jo
outs
cmps
ror
test
sar
mov
inc
mov
test
cld
push
out
mov
dec
sbb
dec
mov
mov
and
lea
das
push
xor
or
(bad)
cwde
rcr
or
inc
lock
mov
sub
out
inc
jae
and
test
shr
mov
icebp
and
pop
repnz
pop
lahf
je
rcr
jne
inc
aas
and
xchg
inc
cmp
xchg
adc
jo
mov
xchg
cmps
xchg
test
pushf
jo
icebp
xor
int
push
sub
push
mov
jl
lods
jg
xchg
adc
aam
into
pop
push
inc
stos
ret
mov
add
aaa
cmc
pop
jg
loope
movs
adc
xchg
xor
push
movs
add
inc
dec
and
movs
push
pop
mov
xor
loop
xchg
scas
test
xchg
add
adc
aaa
sub
cmps
jecxz
retf
jne
xlat
stos
ret
loopne
test
in
mov
or
pushf
mov
inc
adc
aam
cmp
fst
popa
lods
stos
ficom
lock
cmps
lods
mov
fcom
push
mov
xor
inc
or
(bad)
rcl
test
stc
add
adc
mov
sbb
das
daa
pop
add
mov
jmp
xchg
sbb
mov
retf
push
dec
int3
mov
out
mov
jno
ins
sub
sbb
ja
ins
mov
cmps
or
ss
xchg
(bad)
sbb
test
ror
aas
hlt
sub
xlat
js
jp
mov
cli
addr16
and
mul
out
inc
mov
outs
mov
popf
add
(bad)
jns
jecxz
or
bound
cwde
add
test
dec
lea
jns
out
into
or
jns
cmp
ret
psubusw
data16
retf
daa
xchg
in
mov
cmp
mov
mov
cwde
and
cmp
push
rcl
xchg
neg
(bad)
dec
jbe
div
cmp
test
xor
mov
lods
adc
xor
aaa
jp
imul
and
and
adc
imul
aam
mov
cmp
movs
push
xor
add
gs
mov
sub
mov
into
rep
test
or
xchg
mov
nop
xor
mov
repnz
out
stc
daa
jmp
repnz
mov
jne
jp
and
push
mov
add
adc
mov
inc
(bad)
lock
call
adc
mov
movs
push
cmp
xchg
pop
shl
sub
fucomp
cmp
xchg
cmc
mov
xchg
push
arpl
push
cmps
pop
push
xlat
xchg
xchg
aad
fsubr
iret
cmc
and
data16
shl
sbb
gs
or
sqrtps
ror
fsubr
test
add
lods
and
sahf
in
cld
fidiv
scas
loopne
push
test
mov
jge
loop
pop
push
shl
mov
loope
jle
mov
push
cli
es
push
push
pextrw
mov
ss
(bad)
inc
aas
rcr
inc
push
test
mov
jmp
sbb
push
push
mov
popf
outs
inc
xor
cmc
fld
out
and
push
loopne
push
shl
pusha
(bad)
int3
movs
mov
sbb
enter
xor
(bad)
aam
xor
loop
pop
lock
fmul
jle
xchg
jmp
jns
push
and
ins
pop
or
inc
xchg
xlat
sbb
shl
xchg
fs
test
xchg
pop
int
dec
scas
je
fisttp
scas
lds
in
pop
hlt
test
mov
mov
add
push
inc
repnz
shl
int3
xor
mov
mov
sub
dec
jne
push
rcl
adc
sbb
movs
push
push
mov
inc
pop
scas
not
sbb
fld
mov
sub
dec
jle
outs
mov
lods
fdivp
ror
lahf
inc
mov
jecxz
aam
arpl
sbb
loop
pop
and
mov
stc
mov
jns
int3
fisttp
xchg
jo
loope
or
out
adc
cmp
test
mov
jae
inc
add
sti
in
sbb
or
dec
ficomp
scas
js
add
(bad)
je
mov
(bad)
in
addr16
outs
pop
jne
out
mov
out
ficomp
sbb
push
ret
add
and
loopne
retf
ror
mov
movs
push
pop
mov
rcl
rcl
push
icebp
retf
test
das
leave
push
adc
jp
sub
mov
out
or
ins
push
dec
(bad)
cmp
enter
xor
dec
jb
mov
test
xchg
data16
test
lahf
cmp
sbb
xor
push
lock
lods
add
inc
xchg
ficom
or
mov
mov
mov
stc
or
add
stos
cmp
dec
and
dec
xchg
iret
sbb
sti
add
push
adc
mov
cdq
inc
xchg
ins
cmp
pop
fiadd
nop
pop
push
xchg
cmp
mov
cmps
or
adc
xor
jo
jo
in
jne
jecxz
xchg
in
daa
mov
imul
lahf
inc
add
pop
jbe
sub
ret
xacquire
das
ficomp
add
jne
(bad)
bnd
sti
shl
or
loopne
rcl
in
leave
mov
outs
lods
imul
xor
push
daa
imul
or
ret
adc
xchg
sub
das
and
retf
pusha
pop
div
iret
jns
dec
mov
jg
and
mov
jo
mov
ja
ret
ds
push
cld
xor
repnz
jo
scas
or
inc
xchg
xor
leave
stos
fadd
stos
sbb
mov
mov
mov
add
sbb
inc
je
rcl
pop
aad
movs
inc
xlat
iret
out
std
aas
xchg
aam
aaa
mov
add
jo
enter
movs
xchg
mov
ss
js
jp
and
nop
test
pusha
(bad)
pusha
neg
(bad)
cmps
(bad)
aaa
dec
sub
jbe
pop
sbb
mov
lds
and
xor
(bad)
loopne
(bad)
and
adc
imul
ja
lea
dec
les
push
jne
or
xchg
mov
sbb
test
mov
xchg
mov
out
loop
xchg
mov
sub
aaa
outs
aam
push
add
or
jns
adc
xor
xor
dec
outs
popf
xchg
ss
mov
mov
into
jo
(bad)
in
imul
mov
cs
call
fcmove
push
mov
xchg
outs
inc
xchg
sub
pusha
daa
fidivr
sbb
and
push
jo
mov
push
cmp
pop
out
test
fcomp
mov
fldenv
cs
mov
pop
cli
cmps
mov
test
shr
sbb
and
jl
push
in
push
pop
je
ret
add
jle
add
pcmpgtd
rol
jne
jp
xor
adc
mov
fwait
push
aad
std
mov
fst
js
pop
inc
jge
aad
in
movs
test
aaa
std
in
cli
jp
hlt
xchg
mov
inc
fiadd
call
and
jae
bound
sbb
or
repz
movs
sar
xchg
stc
mov
dec
(bad)
adc
jl
push
jl
jnp
in
push
repnz
shl
cmp
imul
cmp
in
xchg
mov
sub
clc
adc
push
cdq
mov
pop
adc
jnp
mov
(bad)
add
push
push
xchg
inc
ja
add
mov
repz
ins
sbb
dec
sbb
es
fs
dec
lods
mov
cmc
mov
mov
stc
cmp
add
repnz
aaa
jge
(bad)
in
xor
cmc
ins
cmp
xor
test
loopne
(bad)
mov
xor
mov
jmp
loope
(bad)
pop
ins
xor
sbb
mov
cmps
adc
fs
cmps
je
xchg
(bad)
cdq
and
scas
es
aam
xchg
mov
test
adc
aad
cdq
(bad)
mov
in
test
mov
xor
or
mov
int
push
mov
jl
mov
retf
das
pop
cmp
push
shl
xchg
inc
loope
mov
mov
je
out
nop
mov
push
mov
ins
jle
pop
cdq
inc
adc
loope
fsubp
pop
mov
out
pop
ror
in
xrelease
inc
push
and
mov
imul
imul
(bad)
push
mov
or
push
lock
dec
int
(bad)
fs
or
out
inc
mov
(bad)
daa
retf
jae
fcmovnbe
cmc
rcl
pop
aas
push
(bad)
cmc
sub
sbb
add
xlat
in
lock
loopne
jb
mov
and
mov
jno
data16
and
or
add
jbe
xlat
out
add
cmps
cmp
push
adc
ins
sub
jno
sub
xchg
mov
jmp
repz
pop
push
movs
or
not
das
sbb
mov
jg
push
pop
jge
push
jl
pop
inc
dec
lods
pusha
call
jge
in
arpl
iret
shl
jne
and
ss
mov
push
sub
div
or
inc
gs
lds
cmp
and
jecxz
ds
aad
fcomp
xor
xor
inc
adc
call
test
cmp
mov
xor
inc
rcl
pop
jl
or
fsub
lods
in
cmp
sbb
hlt
mov
mov
(bad)
or
jl
mov
mov
repnz
sti
mov
ror
sbb
jne
dec
mov
test
mov
loop
sahf
sbb
out
in
sti
lea
jae
dec
jb
add
or
push
dec
shr
imul
xchg
mov
jae
lea
jl
fldenv
cwde
and
push
and
in
shl
das
push
xor
pop
js
push
cmp
push
xchg
cmp
sbb
xchg
ror
jp
xlat
pop
fldenv
mov
js
fs
jle
ror
xchg
push
sahf
int
pop
sbb
(bad)
cdq
push
push
lahf
mov
cmp
daa
sub
inc
sbb
mov
xchg
push
mov
sub
frstor
pop
push
scas
add
(bad)
push
bound
xchg
push
(bad)
outs
push
mov
and
pop
adc
test
outs
sbb
add
jne
sbb
sar
push
sub
jae
js
mov
jnp
mov
dec
(bad)
mov
rol
imul
jg
cmp
adc
mov
inc
mov
adc
fmulp
inc
dec
mov
add
arpl
test
adc
adc
(bad)
mov
adc
test
dec
in
push
mov
mov
leave
sbb
mov
inc
cdq
add
retf
mov
shr
cs
cmp
inc
add
in
inc
ficom
lods
sub
sub
sub
mov
pop
cmp
inc
xor
lods
xor
(bad)
cmc
fild
call
idiv
cmc
outs
cmp
stos
jo
pop
jbe
adc
imul
jno
cwde
add
daa
and
jb
or
scas
pop
inc
add
ins
div
scas
jle
jbe
cmps
popf
and
ins
xchg
repnz
fsub
ds
xlat
inc
push
xor
fisub
movs
neg
dec
(bad)
popa
(bad)
pop
ja
out
add
or
pop
in
cmps
pop
push
ins
jb
sbb
dec
mov
sub
rol
gs
adc
retf
enter
inc
mov
call
jbe
iret
repz
fst
in
(bad)
inc
push
call
inc
add
lock
sub
jg
xchg
pop
addr16
xchg
xchg
mov
test
xchg
pop
push
push
push
ffree
(bad)
mov
lahf
dec
cdq
xchg
pop
mov
int3
repz
fbld
cmp
pusha
inc
mov
(bad)
fst
adc
jge
enter
add
cmc
xor
xchg
fisttp
jnp
ror
(bad)
mov
idiv
and
xchg
push
xchg
inc
shl
fisub
aad
add
jo
loopne
xor
retf
xlat
jo
xor
mov
jne
inc
aaa
inc
cmps
sbb
inc
mov
fadd
cmp
or
fstp
test
imul
stos
in
push
jo
sbb
retf
mov
call
add
xlat
jmp
xor
lods
cmp
inc
iret
nop
retf
push
(bad)
ror
push
push
sbb
sub
and
pusha
sti
jmp
leave
js
rcl
pop
xor
fisttp
test
call
adc
and
pop
or
stos
(bad)
leave
aam
jmp
sbb
ja
fcomi
xchg
mov
(bad)
rcl
mov
ja
xor
rol
movs
xchg
xor
aad
pop
outs
ja
mov
cli
sbb
ja
mov
ds
push
and
not
out
xchg
les
pop
xchg
xchg
and
xor
loop
and
jmp
sbb
sti
mov
inc
(bad)
and
ficom
add
stc
arpl
or
daa
test
addr16
sbb
ja
or
dec
add
shl
(bad)
stos
mov
enter
xchg
retf
bound
mov
mov
aas
je
sbb
pop
(bad)
mov
scas
loopne
xor
out
pop
sar
mov
and
je
adc
rcr
leave
push
rcl
dec
jmp
imul
cld
std
add
and
sub
push
sbb
loop
xor
je
xchg
addr16
rcr
out
pop
(bad)
sub
sub
add
stos
aad
and
rol
add
out
pop
mov
mov
lock
xor
xor
dec
popf
in
es
stos
push
push
fidiv
and
(bad)
pop
add
aas
imul
xchg
inc
mov
(bad)
movs
jae
sbb
mov
pop
jo
jno
cmp
xchg
mov
xchg
xchg
ficomp
jbe
jo
(bad)
mov
lea
inc
cld
jb
cs
jge
mov
push
dec
mov
scas
test
or
xor
push
push
stos
ss
mov
or
jo
xor
repnz
iret
ins
retf
loopne
fs
and
or
(bad)
retf
and
mov
(bad)
in
jb
cs
mov
test
ret
sbb
aas
push
nop
call
movs
sbb
xor
xchg
push
sbb
movs
xor
call
int
into
stos
jecxz
cmps
cmp
std
mov
push
pop
idiv
addr16
and
cmp
out
jo
bnd
mov
shl
jecxz
(bad)
aaa
or
fld
push
mul
mov
movs
call
pushf
cmp
add
push
dec
jp
test
aad
mov
jns
mov
sbb
inc
lock
test
and
lods
and
xor
popa
ds
add
sbb
sahf
daa
jo
loop
lods
pushf
xchg
test
inc
and
inc
inc
sbb
and
cmp
into
lds
ret
pop
movs
pop
cmps
mov
stos
add
mov
sahf
mov
out
shl
ds
and
sub
mov
ja
xor
aam
sub
mov
jl
icebp
mov
or
or
jne
outs
jp
push
add
mov
push
and
ret
(bad)
shl
icebp
push
jecxz
jmp
sbb
idiv
cwde
xchg
stc
push
add
pop
enter
or
xor
addr16
and
ds
push
retf
or
cmps
fs
push
aaa
xor
push
mov
mov
sbb
or
cmps
and
xor
adc
popf
outs
adc
jle
stc
(bad)
xor
fcmovb
cmps
out
lock
and
push
aad
pop
pusha
push
mov
xchg
rol
ret
mov
mov
add
(bad)
ja
push
xor
add
mov
mov
xchg
cmp
push
icebp
jo
push
lock
test
or
cs
mov
mov
or
inc
aas
push
push
mov
outs
in
cmps
mov
(bad)
out
mov
inc
xor
jge
adc
xchg
jo
cdq
aaa
mov
out
outs
daa
mov
sbb
rcl
pop
nop
adc
mov
inc
dec
add
mov
jle
repz
jecxz
outs
shl
imul
fadd
pop
push
pop
aam
icebp
cs
clc
push
rol
mov
fild
add
loop
adc
into
sbb
push
pop
adc
mov
add
(bad)
aaa
stos
retf
xchg
jne
and
arpl
out
xchg
sub
les
in
jg
sahf
movs
jns
iret
push
inc
test
arpl
xchg
(bad)
ins
loop
loope
dec
cdq
xchg
fidivr
cmp
add
and
sbb
mov
std
es
(bad)
and
aas
out
mov
push
and
ret
fsubr
outs
popf
pop
add
mov
fisubr
shr
dec
mov
cwde
cmps
call
fdivr
je
cmp
jle
rcr
std
jmp
inc
fcomip
loopne
outs
push
and
jns
push
fwait
fwait
popa
mov
mov
pusha
scas
lahf
xchg
xchg
push
inc
mov
(bad)
mov
ins
icebp
fdiv
and
lahf
out
nop
call
add
adc
and
adc
xchg
pop
add
adc
rol
retf
(bad)
gs
push
sub
cmp
xor
xchg
(bad)
jge
xchg
iret
push
or
jnp
cmps
test
ja
addr16
mov
adc
mov
inc
push
inc
adc
adc
mov
mov
adc
mov
mov
scas
cmps
pusha
ret
lock
int3
xchg
cld
jmp
adc
inc
adc
xchg
push
or
es
aaa
sub
int3
add
sti
int
fst
add
dec
loopne
xor
push
dec
sbb
(bad)
loopne
mov
addr16
cld
je
bound
adc
jbe
lods
pop
pop
inc
cmp
loope
xor
pop
mov
clc
adc
ror
data16
jno
mov
pop
jno
sub
rol
xor
pop
dec
fiadd
and
rol
jl
jo
push
push
xchg
frstpm(287
jnp
leave
popa
xchg
int3
ja
cmp
or
sub
xor
pop
and
mov
xchg
pop
cld
jbe
inc
cs
call
imul
loope
leave
inc
jns
es
cmp
mov
shl
adc
sub
sbb
or
popa
movs
and
sub
push
dec
and
jecxz
push
xchg
ret
jbe
or
and
(bad)
cmp
inc
pop
push
movs
clc
inc
push
cmps
shr
adc
xchg
xor
cmp
std
inc
loopne
mov
xchg
lea
add
pusha
inc
inc
outs
mov
dec
es
cmp
out
stos
aam
ret
movs
lods
adc
sub
ins
jb
or
mov
cmc
or
pop
pop
xlat
js
and
hlt
and
outs
xchg
push
adc
pop
xor
or
rcl
jo
(bad)
cmps
mov
push
xchg
cmp
lds
add
jl
sub
out
fwait
ret
adc
fs
fdivr
imul
bound
mov
outs
adc
jae
cmp
icebp
jno
xchg
or
xchg
jle
rol
cwde
rol
ins
aam
push
sahf
sbb
loope
and
fwait
mov
jp
dec
jle
and
fld
(bad)
mov
xor
pushf
or
mov
mov
lock
pop
adc
cmp
dec
fdiv
pusha
aaa
jo
es
div
pusha
and
rcl
jb
sub
push
neg
adc
adc
xor
push
ret
sar
nop
mov
jg
jle
mov
cmp
cmp
pop
mov
shl
push
sbb
in
fsubr
sub
push
shr
xchg
add
test
dec
fwait
cmp
sub
stos
std
cmp
or
cmp
(bad)
fs
jno
jmp
mov
test
adc
(bad)
out
(bad)
not
loopne
xchg
iret
mov
push
ja
int
xor
cmp
pop
pop
dec
jp
sub
loopne
or
ss
or
not
jmp
aad
or
and
pop
pusha
jno
daa
cmp
call
movs
shl
imul
jbe
out
sub
(bad)
int
mov
push
xlat
aad
aad
cdq
xchg
add
rcl
xor
add
cwde
rol
push
push
push
inc
add
add
mov
leave
fsubr
mov
xchg
lods
pop
add
mov
mov
outs
xchg
jg
jmp
xchg
inc
push
fwait
mov
pop
mov
mov
mov
or
sbb
je
add
fld
xchg
(bad)
sub
sbb
arpl
enter
and
jmp
les
cmp
inc
cld
add
mov
sub
dec
pop
xor
mov
out
mov
and
sti
in
mov
add
push
adc
loop
mov
loop
jl
ror
out
adc
addr16
fwait
mov
cmps
push
mov
jno
mov
push
push
jno
sub
mov
(bad)
call
(bad)
push
lock
mov
inc
out
xor
jecxz
pop
es
addr16
xchg
aam
fisubr
loop
and
lahf
or
ds
imul
jmp
out
addr16
inc
cwde
arpl
pushf
lds
add
sbb
cmps
fst
adc
sub
daa
or
add
fdivr
fdiv
jmp
shl
pop
cmps
sub
into
pop
mov
test
daa
push
(bad)
mov
add
sti
xchg
int
pusha
pop
adc
(bad)
mov
lock
stos
movs
ror
out
or
aam
push
xor
sub
adc
mov
cmp
pop
adc
cmc
les
push
mov
lock
and
ins
arpl
(bad)
lfs
sahf
out
out
xor
scas
pop
inc
xor
test
xchg
push
cwde
cld
and
sti
mov
clc
shr
mov
xor
or
push
jbe
mov
in
popa
push
(bad)
cmp
jle
xchg
out
lock
(bad)
inc
mov
mov
push
sub
xor
(bad)
aad
cwde
mov
outs
adc
std
(bad)
jp
pop
repz
dec
jae
mov
lahf
pushf
movs
push
pop
add
mov
data16
mov
add
pop
loop
jne
inc
and
xchg
xchg
xchg
and
pop
and
addr16
add
out
push
enter
ret
movs
jecxz
push
ja
enter
out
fstp
push
pop
pop
xchg
cmp
adc
add
mov
cdq
adc
cmp
pop
xor
inc
enter
ss
xor
jle
rol
xor
jae
inc
xor
aaa
add
mov
repz
(bad)
lock
mov
inc
inc
xor
jne
pop
jo
bound
(bad)
test
push
jne
sbb
sbb
ss
xchg
and
int3
icebp
(bad)
les
in
call
adc
jnp
aaa
sub
shl
push
mov
xchg
sbb
push
push
push
inc
rcl
in
xor
dec
sbb
daa
mov
pusha
pop
movs
xor
dec
(bad)
sbb
ss
jnp
sub
and
cmps
adc
mov
inc
sbb
je
rcl
dec
mov
inc
adc
mov
mov
stos
adc
adc
xchg
(bad)
and
mov
iret
arpl
sbb
sbb
fwait
inc
or
sub
xlat
pop
(bad)
xor
xchg
(bad)
aaa
shl
pop
sbb
sbb
and
lea
push
fwait
cmp
inc
sub
neg
mov
mov
mov
pop
add
lods
out
jnp
nop
sbb
pop
lahf
aaa
adc
jae
cmps
adc
xchg
xchg
fcom
add
sbb
jmp
adc
adc
mov
retf
mov
pop
inc
repnz
fsub
pop
jno
jmp
rcl
inc
out
or
addr16
push
mov
push
adc
and
pop
mov
inc
ret
out
out
ja
fcom
cmps
jb
pop
clc
aaa
(bad)
mov
xor
iret
xchg
clc
sub
mov
push
cld
in
inc
ds
retf
stc
shl
aaa
mov
and
(bad)
retf
or
scas
pop
cmps
add
aaa
mov
push
int3
or
lock
dec
(bad)
lock
(bad)
(bad)
pusha
fdiv
add
lods
retf
daa
test
pop
mov
nop
inc
jl
xor
sub
retf
push
sub
ficomp
(bad)
daa
call
mov
mov
xchg
rcl
mov
jnp
jle
cmps
or
int
mov
cmp
pop
hlt
lahf
pop
rcl
jle
mov
dec
idiv
stc
(bad)
(bad)
pop
dec
mov
push
mov
out
dec
add
(bad)
lahf
nop
sub
jnp
ja
retf
aam
(bad)
in
scas
cs
pop
push
add
add
and
int3
jl
sahf
sbb
dec
mov
push
pop
outs
leave
gs
jo
sub
and
out
add
rcl
pushf
sub
(bad)
push
push
or
retf
pusha
out
(bad)
daa
add
daa
inc
lock
mov
retf
into
fs
dec
sahf
out
cld
xor
(bad)
push
xlat
nop
lds
ins
in
or
sahf
adc
dec
mov
xor
jmp
hlt
fnstsw
(bad)
pusha
cmc
mov
ret
mul
xlat
mov
push
popa
ja
(bad)
(bad)
sub
(bad)
sub
or
pop
jp
sbb
xchg
nop
test
inc
cs
cmp
dec
daa
outs
cmps
ds
sbb
and
in
push
cs
icebp
adc
fisttp
inc
xor
scas
mov
aas
and
stos
jnp
sbb
stos
cld
iret
ins
mov
dec
std
inc
int3
mov
sub
pop
sbb
cld
pusha
mov
ja
test
mov
xor
test
mov
scas
jmp
cmp
shl
std
pop
addr16
xchg
fdiv
(bad)
xor
jb
xchg
dec
nop
retf
jle
rcl
(bad)
sub
mov
sub
push
pop
pop
dec
or
push
into
cmps
ins
cmps
inc
pop
cmp
pusha
stc
scas
sub
inc
pop
or
mov
pushf
data16
in
fbstp
fxch
adc
sbb
mov
pop
lods
or
out
(bad)
xor
and
xchg
mov
cmp
adc
inc
imul
into
addr16
sub
lea
pop
lods
scas
cmps
ret
xchg
ret
mov
imul
cwde
outs
test
push
das
add
rcl
push
adc
daa
xor
cmps
and
lods
push
inc
inc
rcl
xchg
mov
lock
push
xchg
pop
cmp
pop
nop
aaa
call
retf
jns
inc
jmp
(bad)
fdivr
out
sub
and
out
sbb
lods
lock
nop
daa
mov
fwait
xchg
out
xor
pop
adc
sbb
push
or
lock
shl
pop
cwde
inc
lods
cmp
rol
mov
addr16
push
sbb
(bad)
(bad)
aaa
or
pop
pop
mov
xlat
xor
mov
neg
xchg
cld
outs
retf
inc
in
clc
mov
jl
and
push
loop
inc
fld
cmp
sub
jne
jno
ds
push
or
xor
cmp
xchg
cdq
mov
mov
pop
sbb
shl
push
sbb
dec
(bad)
push
sub
lds
repnz
jbe
jae
stos
je
push
cmps
out
jl
pushaw
add
imul
mov
inc
es
xor
add
push
dec
dec
enter
inc
mov
retf
nop
pop
push
call
pop
out
lods
sub
mov
in
push
fucomp
dec
std
xchg
retf
in
push
lods
sti
adc
movs
mov
dec
dec
mul
icebp
jnp
pop
inc
xlat
jmp
push
adc
and
imul
or
sahf
xor
imul
xor
std
and
cdq
nop
mov
jno
mov
add
adc
arpl
loopne
xor
xchg
out
dec
stc
or
fstp
ja
gs
jnp
test
inc
jne
ficomp
je
cwde
sub
hlt
out
rcl
in
xchg
mov
dec
inc
inc
jl
stos
xor
add
stos
clc
imul
pop
xor
lea
icebp
(bad)
int3
jnp
call
adc
sahf
mov
aaa
dec
repnz
clc
or
sub
int
in
mov
(bad)
mov
cmps
jne
icebp
pop
in
call
sahf
push
sub
push
leave
inc
mov
mov
scas
and
or
loopne
icebp
gs
int3
sub
xor
push
call
fcmovbe
hlt
mov
pop
or
mov
add
int3
nop
mov
mov
arpl
movs
mov
sbb
jge
lds
jl
xchg
retf
inc
sbb
in
xor
dec
les
fcomp
add
and
ficom
jl
jno
rol
not
mov
in
adc
pop
inc
mov
inc
mov
cld
ret
xlat
push
daa
mov
aam
xchg
mov
sub
movs
jp
mov
and
xchg
ret
mul
fadd
jmp
jbe
ja
or
lods
mov
(bad)
xchg
dec
std
stos
add
sbb
scas
test
sub
jle
inc
cmp
fadd
add
add
or
ret
je
mov
pop
inc
cmp
mov
push
mov
xchg
arpl
mov
movs
ds
lods
mul
xchg
cmp
aaa
scas
ss
or
fwait
adc
mov
or
std
sbb
icebp
out
xor
jo
jmp
jecxz
outs
sbb
xor
adc
push
push
mov
xchg
(bad)
dec
jg
mov
sub
loop
repnz
adc
fs
push
push
cmps
dec
sbb
adc
mov
jp
jmp
stos
xor
and
push
ins
and
popa
(bad)
mov
mov
lahf
adc
bound
daa
jge
mov
xchg
loop
out
xor
loope
mov
or
daa
scas
mov
jecxz
xlat
mov
xor
add
retf
scas
sti
jne
and
mov
int3
jae
sti
add
outs
jmp
jp
iret
mov
xchg
lods
xchg
lods
stc
in
inc
sbb
std
stos
jo
jg
inc
test
imul
jmp
mov
daa
dec
cmp
test
mov
popa
cmps
and
jmp
popa
repz
cld
out
(bad)
push
push
in
daa
sbb
pop
sub
inc
cld
shl
je
or
pop
sub
cmp
aaa
mov
or
movsx
cmp
jp
aas
pop
not
imul
int3
xchg
add
outs
xchg
sahf
rcl
add
mov
or
fs
ret
mov
into
push
dec
loopne
into
inc
adc
ins
arpl
push
add
jmp
mov
pop
xchg
daa
add
shl
xchg
loope
sbb
adc
ins
sbb
add
inc
xor
adc
dec
cmps
xor
dec
inc
push
fldln2
bound
sub
cmp
pop
aas
dec
mov
and
dec
sub
pop
rol
push
sbb
pop
inc
push
loope
movs
cs
sar
inc
fidivr
loopne
mov
pop
cld
fidiv
jno
pop
retf
mov
les
and
icebp
mov
add
movs
cmp
test
repnz
shl
cli
push
mov
mov
or
and
add
mov
push
icebp
sti
and
push
stos
leave
pop
cmps
mov
imul
pop
movs
pop
and
ret
ins
in
jmp
das
addr16
mov
sbb
ins
push
and
or
(bad)
mov
mov
cmp
sbb
mov
mov
jae
dec
loop
pop
mov
mov
mov
jno
mov
sub
movs
add
aad
fs
and
push
pusha
jmp
push
mov
clc
xor
mov
add
and
push
retf
mov
pop
sub
cmps
ror
cmps
and
pop
dec
ret
mov
cmp
push
lods
rol
sbb
call
jp
call
xchg
pushf
movs
inc
jecxz
mov
out
xlat
test
enter
jecxz
xchg
pop
in
out
popf
push
jno
scas
stos
sbb
arpl
sub
dec
adc
inc
test
xchg
mov
fiadd
daa
jge
jne
hlt
jb
arpl
pop
sbb
mov
retf
daa
sub
scas
pop
daa
ss
mov
popa
adc
sbb
adc
mov
std
fwait
dec
add
shl
mov
(bad)
or
in
sar
xchg
jae
loope
in
in
or
lods
mov
jp
jmp
jae
mov
xchg
cmps
pop
xchg
retf
lock
ror
xor
xchg
mov
pop
xor
push
call
adc
test
xchg
pop
push
repnz
mov
push
test
fistp
neg
lock
push
call
adc
jb
mov
xor
ja
cli
ror
xlat
into
out
or
mov
mov
sub
movs
mov
adc
xlat
(bad)
dec
pop
push
push
stos
jecxz
mov
call
push
aam
nop
shl
rcl
lock
and
leave
pushf
in
push
bound
(bad)
pop
push
test
test
sbb
imul
test
xor
cmp
pop
mov
shl
mov
xor
mov
sub
inc
and
cwde
out
cwde
je
pop
dec
test
fbstp
test
shr
pusha
call
mov
imul
mov
inc
das
push
mov
shl
xchg
adc
add
add
leave
xchg
mov
les
imul
out
pusha
mov
rol
or
mov
repnz
add
test
stc
cmps
hlt
fidiv
stos
mov
sbb
aaa
aas
mov
and
lds
push
mov
jmp
add
call
cmp
sbb
cmp
xor
mov
iret
ret
imul
push
imul
fisttp
ret
lock
and
sbb
ficom
xor
xchg
and
add
in
xor
ss
xchg
push
jecxz
xchg
pop
and
mov
dec
mov
idiv
xor
movs
sub
shl
loope
retf
inc
cmp
(bad)
loope
or
push
scas
adc
inc
cmp
mov
bound
in
adc
mov
and
sahf
jae
or
add
in
jg
mov
(bad)
rol
add
mov
pop
xchg
pop
test
xchg
cmps
add
(bad)
loope
adc
mov
xor
adc
push
inc
inc
mov
jne
mov
xchg
shl
cld
in
fild
movs
call
xor
add
mov
pusha
ret
add
call
(bad)
xchg
jp
cmc
push
and
or
int
xchg
mov
mov
pop
(bad)
mov
push
clc
add
sbb
pop
inc
das
xlat
xchg
xlat
push
mov
inc
push
stc
mov
push
push
lea
add
push
popa
stos
pusha
inc
xor
sbb
mov
and
test
adc
gs
adc
mov
jo
dec
mov
cdq
in
call
xchg
mov
inc
add
push
push
shl
push
sbb
xor
loopne
sub
mov
sbb
cmp
ror
mov
pop
jb
dec
loop
pusha
mov
les
loope
mov
retf
xchg
xor
inc
pop
jb
sbb
fcom
dec
xchg
fwait
push
out
fbstp
jp
xor
gs
mov
xchg
sbb
inc
mov
sti
hlt
scas
dec
jl
shl
sbb
lods
pusha
ror
sbb
add
(bad)
cmp
push
add
adc
mov
dec
addr16
getsec
push
cmps
mov
imul
ins
jno
daa
mov
pushf
(bad)
add
rol
mov
cmp
addr16
sbb
lock
ins
sub
(bad)
(bad)
cmps
sbb
les
mov
nop
out
pop
jbe
shl
(bad)
push
scas
mul
add
dec
stc
pcmpgtw
push
inc
mov
les
mov
mov
je
adc
in
push
popa
and
sub
(bad)
mov
mov
add
repz
pop
and
(bad)
xchg
dec
xor
push
push
xor
inc
rcl
xor
stc
aam
nop
aaa
pop
(bad)
frstor
loope
fsubr
out
(bad)
std
add
icebp
jo
cdq
movs
sbb
push
pusha
ror
add
xlat
mov
daa
js
(bad)
adc
mov
add
mov
into
and
call
xor
ins
mov
ret
shl
xchg
sub
icebp
jns
stos
pop
jecxz
leave
mul
stos
aad
in
cmc
xchg
cmps
jmp
sub
scas
mov
jns
push
popa
xor
retf
add
inc
sahf
xchg
je
pop
sub
aam
addr16
inc
(bad)
push
inc
xor
push
xchg
int
cmp
jno
mov
int
imul
sub
adc
iret
mov
(bad)
push
cmps
pop
dec
dec
sbb
inc
fiadd
sar
add
pop
sbb
fadd
inc
xchg
or
or
js
rcl
cmp
sbb
xchg
mov
lods
lock
in
cmps
lds
add
mov
jmp
push
cli
cwde
test
and
inc
ret
stos
fucomp
in
ins
xor
rcr
es
adc
mov
mov
fwait
daa
jbe
pusha
push
dec
mov
shl
sbb
adc
mov
pop
out
sbb
adc
mov
lock
aas
aaa
shl
test
mov
cld
test
mov
in
and
and
dec
or
das
jmp
fs
add
rcr
adc
js
lock
ret
ins
cmp
add
pusha
add
jmp
int3
pop
andps
wrmsr
sbb
je
cld
mov
rol
xchg
and
push
aaa
and
out
or
push
mov
add
mov
xor
lock
call
pop
inc
and
je
pop
scas
adc
and
shr
cld
pop
int3
xchg
jno
out
jne
data16
xor
push
adc
mov
jae
mov
cmp
sbb
(bad)
lea
loopne
add
(bad)
loop
sub
lock
xchg
push
nop
mov
ins
dec
add
loopne
mov
shl
and
cwde
inc
(bad)
jp
ds
mov
je
les
mov
sbb
cmp
sbb
mov
test
mov
cmps
test
mov
sbb
lahf
fisubr
(bad)
or
nop
cmp
jecxz
push
and
jecxz
pop
cwde
rcl
sbb
mov
test
jp
xchg
cwde
out
pop
push
cmps
add
les
out
into
add
fld
lahf
loopne
mov
sbb
xor
lea
jns
pusha
cmp
and
(bad)
mov
dec
inc
out
dec
fcmovnbe
repnz
jmp
sbb
sbb
ja
stos
mov
daa
call
xchg
or
and
mov
mov
cmps
call
mov
adc
loopne
mov
imul
(bad)
fdiv
nop
bound
or
jmp
retf
pop
loop
imul
xor
xor
push
lods
push
mov
push
inc
cmp
inc
jbe
cmp
push
push
dec
hlt
inc
xchg
movs
ret
lds
fidivr
and
cmp
call
push
fistp
(bad)
and
stos
push
lods
dec
pop
or
mov
cmp
jbe
fbld
(bad)
xchg
xchg
mov
or
les
mov
ja
nop
push
gs
inc
jo
jno
rol
popa
and
cmc
inc
xchg
mov
mov
jo
out
test
mov
and
and
(bad)
fimul
(bad)
dec
or
xchg
aas
popa
pop
pop
mov
sbb
repnz
dec
sub
pop
aad
lock
ins
data16
call
aaa
xchg
nop
pop
daa
fsub
outs
jno
push
sub
pushf
lods
mov
cld
pop
or
scas
sbb
ret
cmp
out
call
cmps
cmps
pop
adc
hlt
mov
jae
test
mov
push
adc
fwait
push
inc
(bad)
mov
and
push
lea
data16
daa
xchg
pop
and
inc
inc
sbb
cld
mov
jo
stos
out
jmp
cmps
sahf
nop
mov
pop
sub
push
test
int
and
movs
cld
sbb
xlat
cmp
rcl
cmp
push
pusha
adc
call
(bad)
cmps
mov
daa
dec
mov
sub
nop
sbb
add
add
int
nop
jno
popa
cmc
and
add
pop
shr
pop
dec
mov
bt
pop
dec
push
xchg
dec
mov
mov
add
movs
or
cmp
push
adc
retf
add
xchg
dec
stos
pop
mov
dec
inc
cwde
std
pop
dec
xor
push
jbe
pop
(bad)
xchg
repz
sbb
jb
ja
cmps
pop
out
add
jns
shl
fisub
ret
test
push
mov
data16
sub
sub
pop
std
rcl
pop
inc
add
lock
int
and
(bad)
lds
jno
inc
daa
lods
jns
jmp
mov
dec
mov
sbb
aad
push
adc
fcmovne
adc
push
dec
sar
dec
fldcw
add
hlt
scas
shr
clc
jecxz
out
xchg
inc
fld
add
xchg
test
movs
mov
pop
mov
and
add
mov
test
dec
cdq
xor
and
lahf
fldcw
ins
dec
retw
jo
jno
inc
clc
push
clc
or
scas
mov
jg
mul
rcr
dec
daa
push
cmp
addr16
inc
aad
(bad)
xlat
lea
cmps
mul
push
outs
loopne
imul
jae
jno
sahf
scas
xor
cmp
pop
ret
daa
add
dec
stos
lock
popa
xchg
idiv
es
scas
inc
scas
shl
mov
pop
test
xor
call
lock
sub
call
mov
xor
out
icebp
je
out
enter
xchg
js
xchg
sbb
mov
aaa
aaa
(bad)
pop
fidiv
mov
movs
leave
jle
mov
cmp
dec
and
fimul
gs
cmp
repz
cwde
jmp
push
mov
fisubr
xchg
stos
mov
retf
xlat
fnsave
gs
xor
dec
pushf
dec
adc
dec
pop
into
jmp
cmps
iret
xchg
in
dec
stc
scas
or
mov
movs
es
push
fwait
mov
outs
pop
mov
out
push
fucomip
xchg
jmp
mov
dec
mov
into
pop
arpl
or
cmps
(bad)
rep
repz
push
data16
xchg
pop
outs
idiv
dec
pop
ins
sbb
mov
xor
inc
in
sti
mov
jle
mov
cmp
das
sub
mov
dec
into
ja
sub
pop
mov
adc
mov
sub
mov
push
jno
mov
repz
sub
mov
cmp
xor
adc
jbe
pop
xor
shl
mov
pop
mov
xor
push
(bad)
pop
fsub
mov
mov
call
arpl
fwait
add
pop
push
adc
cmps
aas
icebp
xchg
mov
(bad)
out
dec
dec
into
push
and
cmps
lods
inc
daa
cs
dec
cmps
add
dec
cmps
push
inc
daa
fldenv
retf
sbb
imul
add
dec
push
ret
scas
aaa
dec
cmps
dec
lock
lock
es
jns
xor
pop
push
popa
jbe
out
lods
int3
das
cmps
scas
and
push
test
jmp
dec
push
and
dec
int
dec
cmps
daa
xor
iret
push
dec
jmp
mov
fild
add
cmp
cmps
push
mov
lea
cmp
daa
ins
cmps
or
fdiv
es
daa
ins
call
clc
cmps
cmps
daa
retf
test
es
pop
ret
push
movs
sub
or
into
stos
or
dec
cmps
xchg
iret
repnz
retf
and
jmp
cmps
mov
push
or
loop
inc
jmp
dec
aad
cmps
dec
sub
daa
fldenv
pop
mov
daa
or
push
dec
adc
or
into
jb
mov
jb
push
cmps
pop
cmps
and
into
imul
pop
xor
jecxz
out
fwait
sub
push
mov
push
mov
imul
(bad)
dec
daa
fisubr
lods
mov
call
or
jmp
xchg
push
and
mov
lods
cs
pop
(bad)
mov
add
sub
int
movs
pop
pop
sbb
push
cmp
xchg
fist
dec
fistp
adc
iret
xor
cmp
int3
pop
adc
rcr
cwde
sti
pop
sti
sbb
pop
(bad)
arpl
pop
arpl
popa
idiv
(bad)
rcr
inc
fnstsw
xor
adc
fmul
or
sbb
xchg
sbb
pop
(bad)
adc
jbe
mov
jg
xchg
mov
push
xchg
fist
dec
lahf
jno
pushf
fs
push
sti
sbb
sbb
popf
sub
pop
inc
dec
sbb
lock
sbb
(bad)
fstp
je
sbb
fcomp
xchg
fst
pop
pop
arpl
pushf
dec
add
ret
inc
push
sbb
pushf
push
mov
adc
mov
sbb
xchg
retf
pop
jmp
not
sbb
xchg
sbb
sti
fdivr
neg
lods
mov
inc
pop
sti
jecxz
push
fbld
jg
sub
nop
mov
mov
mov
fistp
pop
aam
pop
int3
fwait
sbb
mov
fistp
(bad)
je
retf
pop
mov
dec
pop
or
call
fmul
jmp
or
push
sbb
xchg
fist
arpl
fwait
(bad)
rol
adc
lahf
fist
fnstenv
outs
loopne
adc
sub
inc
and
jecxz
xchg
neg
adc
fild
jecxz
sbb
arpl
sbb
das
and
sbb
sbb
pop
sbb
mov
dec
test
jmp
mov
inc
inc
adc
dec
jle
in
xchg
movhps
dec
call
push
add
sbb
inc
xrelease
push
and
popa
adc
or
or
cmp
test
push
pop
popf
dec
push
sub
pop
sbb
stos
popa
(bad)
or
lea
stc
mov
xor
movs
sub
int
cld
dec
pop
add
test
jge
add
xor
inc
adc
popf
(bad)
into
or
lahf
dec
push
pop
sub
dec
loope
push
dec
push
aaa
pop
pop
daa
or
push
adc
xchg
mov
or
push
dec
push
ret
popa
pusha
or
or
imul
stc
xchg
jl
push
test
lea
add
push
or
int
test
aad
aad
int
cmp
or
or
mov
sbb
adc
pop
ror
aad
data16
fxch
push
or
adc
add
(bad)
icebp
int
jmp
fnstcw
mov
neg
mov
std
sbb
into
mov
adc
mov
push
push
add
add
push
or
adc
add
cmp
inc
call
jnp
movs
std
rol
stos
aam
sub
in
xor
sti
adc
fdiv
add
jae
or
sbb
call
mov
mov
jnp
mov
mov
push
sbb
dec
fs
scas
call
dec
push
jae
mov
retf
call
push
xchg
je
test
aam
test
in
(bad)
repz
sti
rol
jnp
sub
cmc
out
sub
das
leave
aam
sbb
retf
inc
stc
mov
mov
sub
or
lock
xor
popa
jo
sbb
out
mov
lock
ret
jge
js
xchg
and
push
bound
jge
fadd
sbb
lock
std
xchg
jl
mov
dec
in
mov
aam
out
pop
shr
pop
jo
pusha
sbb
popf
mov
and
xor
mov
aam
jle
add
retf
jge
aam
mov
cmp
dec
sub
aam
ss
pop
ins
jo
icebp
xor
lock
pop
gs
std
pop
es
lock
xor
call
ins
cmp
push
push
lock
in
mov
mov
cmp
lock
fnsave
cmp
sbb
mov
leave
jo
(bad)
cmps
xor
es
xor
in
jge
mov
icebp
sahf
(bad)
jg
jl
lock
xor
das
inc
repz
or
aam
pop
sahf
cmp
inc
aam
js
stos
inc
push
and
shl
mov
repz
mov
sbb
sbb
std
fistp
push
add
mov
arpl
imul
pop
xor
pusha
jl
fwait
cdq
mov
jecxz
mov
xor
mov
mov
add
loop
sbb
arpl
adc
jecxz
and
daa
cmp
mov
icebp
add
stc
mov
ret
cmp
pop
push
adc
imul
arpl
adc
jecxz
and
cdq
sbb
in
outs
mov
in
mov
pop
xchg
adc
xor
cdq
mov
mov
in
pop
add
xor
pop
sbb
sub
aad
fiadd
mov
aam
xchg
stc
cld
xor
fst
push
int3
jl
pop
retf
lods
arpl
add
fiadd
out
lea
ins
ins
ss
jae
retf
imul
push
call
daa
and
mov
adc
jl
fnstsw
mov
cld
add
arpl
test
pusha
js
mov
pop
in
or
nop
mov
mov
ins
jmp
inc
loopne
ret
push
mov
jmp
inc
cmc
shr
stos
js
fs
sub
test
push
push
in
mov
retf
fs
into
lods
(bad)
int3
jg
mov
mov
aaa
loope
or
add
int3
(bad)
in
movs
and
retf
js
call
pop
pop
sbb
dec
jae
and
popf
mov
(bad)
pop
pop
pop
test
mov
sti
mov
retf
cmp
test
jnp
sti
mov
imul
sub
or
push
add
jmp
add
mov
adc
std
call
jmp
jg
aaa
js
jle
inc
fcmovnbe
mov
xchg
or
cmp
jge
fstp
fs
imul
sub
cmp
sub
pop
pop
movs
fisttp
fstp
mov
call
sti
xor
movs
cmp
movs
in
cmp
cs
(bad)
movs
mov
ins
mov
sbb
sub
pop
dec
cmp
xlat
out
faddp
fs
hlt
dec
sub
and
cmp
or
cld
mov
shl
cmp
cmp
xor
stos
scas
call
pop
call
(bad)
sti
call
jnp
psubsb
mov
jbe
mov
daa
sbb
pop
mov
push
test
jl
cld
and
jnp
pop
call
cmp
add
pop
sub
pop
inc
cmp
fwait
mov
cmp
xchg
arpl
call
pop
sbb
or
fwait
shl
daa
imul
call
mov
mov
cmp
test
sub
call
scas
test
mov
push
inc
jmp
xlat
push
retf
les
rcl
test
jmp
lock
ja
dec
test
js
sub
test
mov
push
push
jmp
push
and
mov
test
bound
sbb
scas
mov
loop
loop
xor
aaa
or
loop
out
mov
xchg
stos
sub
imul
into
sbb
lods
and
and
setae
push
push
mov
fnsave
push
dec
push
test
into
data16
test
cmps
outs
dec
xchg
mov
push
cli
adc
xor
inc
sbb
popf
jo
loop
mov
imul
cmp
mov
rcr
loop
mov
movs
data16
scas
sub
out
or
arpl
(bad)
jmp
outs
test
cmp
js
mov
imul
(bad)
out
dec
push
(bad)
sub
pop
or
mov
mov
(bad)
arpl
and
and
or
repnz
pop
inc
in
add
std
adc
inc
dec
push
xor
sub
jmp
rdmsr
jbe
mov
xor
sub
es
sbb
cmps
(bad)
xlat
bound
push
out
jb
mov
push
dec
clc
scas
xor
loop
loop
mov
push
(bad)
mul
out
jb
mov
xlat
bound
loop
loop
add
cmps
loop
pop
mov
out
mov
and
mov
scas
mov
push
bound
out
mov
iret
mov
jno
or
arpl
repnz
fidiv
in
dec
repnz
icebp
out
icebp
inc
mov
scas
cs
xchg
repnz
or
inc
loop
xchg
imul
aad
inc
pop
je
fcmove
imul
push
mov
pop
fmul
adc
mov
call
mov
sub
mov
mov
jle
dec
xchg
ds
aas
push
ds
inc
sub
mov
jmp
xchg
fisub
dec
inc
sub
xor
(bad)
outs
(bad)
lea
pop
jb
mov
mov
ret
bound
aas
outs
imul
mov
aad
aad
aad
lahf
enter
add
mov
mov
mov
jne
push
jmp
mov
jmp
dec
sbb
dec
mov
lods
jno
jmp
push
jp
sub
aad
hlt
outs
es
das
add
es
jp
or
ror
(bad)
jl
and
setp
jp
fimul
push
pop
popf
shl
dec
mov
jmp
cmpps
addr16
pushf
jo
dec
xchg
and
sti
jb
pop
aam
jecxz
sub
rcr
fmulp
or
jg
or
(bad)
fimul
ds
dec
ins
xor
bswap
cmp
jmp
mov
or
out
sbb
xchg
sahf
and
dec
pop
(bad)
(bad)
bound
repnz
cli
jmp
sbb
jbe
pop
aas
ds
into
stos
add
es
dec
fisubr
pop
or
mov
mov
cmc
dec
stos
pop
cmps
mov
jle
mov
jmp
mov
aam
loopne
clc
mov
ss
inc
out
jne
ds
sub
ret
xchg
push
push
dec
push
aas
xchg
dec
push
sub
jecxz
inc
cmp
shr
dec
mov
add
iret
fild
test
sahf
xchg
mov
pop
dec
retf
mov
jmp
adc
rep
ret
fs
dec
(bad)
mov
pop
jp
outs
sub
push
add
or
adc
push
loop
mov
inc
add
aad
mov
add
bound
push
xchg
or
dec
jp
jle
jne
jne
push
xchg
mov
cmp
sub
mov
xchg
int
inc
or
jmp
retf
push
stos
inc
movntq
mov
stos
jecxz
xchg
daa
or
inc
das
daa
jmp
mov
sub
xchg
es
or
scas
daa
jmp
popf
popa
xchg
or
sub
jns
and
dec
cmps
dec
call
inc
jg
sub
out
dec
stc
cmp
jns
jecxz
sbb
jecxz
dec
xchg
xchg
cs
cmc
int3
sub
test
push
jmp
inc
sub
aas
(bad)
mov
cmp
in
je
xchg
ror
(bad)
arpl
add
xchg
pop
(bad)
or
xchg
mov
mov
in
jmp
fwait
out
or
mov
sub
inc
or
fiadd
inc
inc
or
xchg
test
cmc
out
out
mov
mov
jo
stc
test
pop
shl
xor
repz
stc
mov
inc
lods
mov
test
mov
dec
(bad)
ja
mov
test
xchg
cdq
or
ja
ja
mov
ror
iret
or
iret
add
add
jo
(bad)
jbe
pop
xchg
cld
dec
(bad)
jbe
mov
mov
sbb
mov
push
push
pop
lock
sub
or
fadd
inc
sub
lods
jo
iret
xchg
je
aaa
mov
rcl
pop
xchg
aaa
xchg
xlat
push
jmp
or
dec
jmp
dec
call
stos
imul
xchg
and
in
jae
add
jno
lahf
and
in
in
movs
add
retf
mov
dec
jmp
retf
push
stos
push
int3
out
out
daa
dec
loope
out
out
jmp
jbe
daa
addr16
addr16
cmps
jb
jbe
rcr
push
push
fsub
jae
sar
rol
fcom
jmp
pop
adc
clc
xchg
jne
cmc
leave
test
das
pop
test
stos
xor
ror
cmc
pusha
hlt
jecxz
mov
xchg
pushf
sbb
mov
mov
test
inc
sbb
cmp
pop
fmul
or
xchg
xor
jmp
dec
scas
lahf
or
xchg
sbb
jo
jo
and
fwait
dec
mov
addr16
shl
outs
nop
ss
mov
in
ret
inc
retf
and
pushf
mov
pushf
mov
test
cs
add
jmp
in
mov
mov
push
jbe
and
out
aam
push
jp
mov
push
push
sub
xchg
mov
xor
cmp
or
mov
mov
xchg
es
push
pop
xor
mov
mov
sub
ss
mov
xor
xor
sub
mov
xchg
mov
sub
sub
mov
cwde
xchg
mov
lds
adc
sbb
aas
dec
stos
mov
sbb
fisub
cmp
mov
xchg
add
sub
jne
mov
mov
adc
es
inc
mov
cmps
ficomp
and
adc
mov
mov
add
push
arpl
pop
test
push
cdq
jns
jno
out
icebp
pop
sti
jae
cdq
xchg
mov
arpl
sahf
ret
out
xchg
jns
or
jmp
lock
cmp
add
cs
cmp
movs
retf
jns
dec
js
js
dec
sub
fcomp
jg
dec
pop
cmp
jns
push
adc
mov
jnp
pop
adc
push
pop
push
jb
dec
fstp
and
push
or
pop
fcom
pop
or
push
pop
cmp
jno
fs
rcr
fmul
sbb
pop
bound
dec
cmp
jp
push
(bad)
mov
pop
dec
pop
xor
pop
adc
push
mov
outs
sbb
dec
cmp
push
and
push
sbb
push
cmp
inc
shr
cmp
jb
sub
or
in
mov
mov
push
hlt
sbb
sub
dec
fwait
sbb
adc
ss
jp
cmp
mov
xchg
push
jg
push
inc
xchg
repnz
jns
mov
jns
cmp
pop
cmp
(bad)
mov
loope
add
loope
sbb
loope
mov
loope
sbb
loopne
rcr
mov
add
xchg
lahf
in
xchg
into
jecxz
int
jno
into
lahf
sti
repz
(bad)
repz
xchg
fsubp
hlt
xchg
pop
mov
fidiv
sti
cmps
dec
in
aad
in
into
ret
out
xchg
jmp
sti
xchg
xor
into
stc
sar
(bad)
loopne
xchg
iret
scas
test
sti
out
mov
jb
xchg
iret
movs
fst
popf
popf
test
cmc
mov
iret
fisub
mov
imul
adc
lea
push
xlat
leave
sar
ja
sbb
sahf
cmps
push
or
xchg
lock
mov
sahf
int
sub
mov
jmp
test
jp
js
push
outs
shl
scas
inc
retf
xchg
sahf
fsub
inc
retf
mov
lock
xor
jne
in
imul
shl
stos
inc
pusha
dec
in
(bad)
retf
mov
stos
stos
mov
dec
inc
or
test
test
fs
movs
sub
test
aam
inc
clc
mov
adc
dec
pusha
enter
pop
and
jge
sub
lods
mov
or
xor
nop
mov
mov
inc
dec
push
sub
sub
mov
xchg
inc
sub
frstor
sub
lds
cmp
outs
sub
shr
jp
jmp
push
ins
les
in
cmps
or
fst
dec
dec
or
cwde
mov
inc
pop
aaa
call
(bad)
stos
inc
std
les
test
mov
push
pop
inc
mov
fwait
pop
sbb
push
rcr
sub
sbb
inc
mov
mov
sub
mov
jne
inc
call
mov
mov
sub
test
xchg
test
sub
ret
mov
pop
ja
push
jmp
mov
ret
mov
in
and
adc
cs
retf
stos
push
loope
cmp
inc
mov
mov
sub
cmp
arpl
test
aaa
pop
dec
xor
test
sahf
mov
and
add
ret
mov
add
callw
sbb
in
cmc
stos
pop
sub
pop
push
sub
pop
or
inc
jle
or
dec
xor
cmps
or
retf
mov
mov
push
iret
mov
push
mov
ss
dec
adc
or
pushf
test
enter
test
aas
cmp
imul
rcr
test
lea
fcom
adc
sbb
(bad)
loope
adc
cmp
sbb
inc
sbb
clc
movs
test
js
enter
sbb
clc
enter
movs
dec
sub
daa
jle
sbb
dec
jne
arpl
sub
push
sbb
xchg
retf
pop
and
pop
pop
adc
pop
cmps
(bad)
popa
cwde
xchg
out
and
fs
call
and
dec
and
dec
adc
and
cdq
cmps
dec
sbb
iret
cmc
sub
push
test
lods
rcr
daa
pop
dec
mov
push
(bad)
pop
jmp
fadd
repnz
rcr
fisubr
popf
inc
int3
xchg
add
mov
xor
mov
xchg
pop
cmp
jns
sbb
adc
sub
push
jb
ja
scas
in
test
inc
shr
or
cli
mov
mov
mov
push
inc
sahf
xor
xor
cs
sub
clc
sbb
xor
jl
push
inc
dec
adc
xor
xor
popw
shr
pop
rol
scas
fnstsw
xchg
jb
sub
mov
inc
sti
lahf
in
imul
push
daa
(bad)
mov
addps
call
sub
lahf
cli
push
adc
mov
push
nop
pop
xchg
popf
mov
test
add
scas
or
ficom
push
mov
dec
jae
jnp
popa
and
cld
stc
dec
cwde
jp
push
clc
mov
mov
sub
dec
mov
lods
sbb
adc
es
jo
push
mov
sub
(bad)
push
xchg
(bad)
mov
pop
mov
scas
push
sub
push
lods
dec
or
js
push
dec
or
mov
pop
iret
fcmovnu
or
in
sub
mov
in
jge
clc
xchg
test
cmp
fdivr
fwait
out
dec
psubd
lods
lahf
inc
sub
dec
mov
and
pop
dec
cmp
popa
fidivr
mov
(bad)
outs
movs
dec
cmovle
lahf
ins
mov
int3
and
loope
into
or
mov
imul
inc
(bad)
retf
lods
(bad)
in
arpl
or
cmp
or
ror
ins
scas
lea
ja
or
sub
inc
in
lods
xchg
arpl
mov
sub
ins
call
ins
dec
(bad)
jl
add
dec
lods
ins
push
mov
inc
or
(bad)
or
push
adc
into
ins
push
(bad)
(bad)
sub
iret
stos
stc
arpl
adc
stc
dec
pusha
sbb
test
adc
psadbw
mov
loope
pop
sub
xchg
mov
test
(bad)
hlt
mov
mov
cwde
mov
(bad)
stc
loop
push
movs
add
add
xor
mov
(bad)
xchg
add
add
and
js
jmp
movs
shl
sub
sbb
call
test
cld
dec
out
fsub
imul
enter
or
adc
iret
outs
stc
(bad)
cs
add
pop
daa
(bad)
cmp
or
add
mov
cmps
push
add
cmp
bound
dec
sbb
push
cmp
mov
gs
call
sbb
mov
jl
jmp
dec
pop
and
jl
je
jmp
sbb
in
mov
or
repnz
mov
add
mov
inc
fbld
jne
cmc
jne
mov
xchg
xchg
adc
mov
push
imul
fstp
arpl
or
shl
call
ror
dec
cmp
(bad)
mov
cmp
pop
push
lock
imul
imul
inc
outs
sbb
sbb
cmp
das
xchg
jecxz
or
addr16
sbb
les
sbb
xchg
inc
shr
inc
imul
jg
mov
jb
push
fist
clc
lock
stos
out
push
jl
push
arpl
pop
fisttp
in
sub
jbe
dec
cmp
mov
or
imul
inc
loopne
(bad)
jmp
inc
in
xor
jmp
add
mov
push
popa
sub
cmp
aas
push
xchg
dec
add
idiv
mov
jmp
test
test
mov
sar
dec
inc
push
rcl
jmp
and
les
dec
xchg
add
cmp
adc
fidivr
ror
dec
arpl
or
stc
rcr
sahf
stos
loope
push
mov
inc
add
loopne
mov
int3
dec
pop
add
pop
stc
jp
outs
add
jle
xchg
dec
mov
mov
mov
and
imul
xlat
int3
sbb
cs
pop
sub
in
xchg
xchg
or
or
xor
fsubr
xchg
fsubp
xchg
fcomp
cmp
fcmovnu
retf
mov
mov
fstp
ds
inc
sub
lea
lods
mov
mov
mov
mov
test
retf
js
inc
cmp
aaa
sub
out
imul
push
push
pusha
je
push
out
pop
out
jg
mov
pushf
inc
jle
lahf
lods
retf
in
arpl
(bad)
dec
jg
(bad)
hlt
mov
out
call
call
(bad)
push
mov
push
sub
out
dec
dec
sysret
ror
add
cdq
pop
sbb
fwait
dec
xor
mov
mov
les
and
fisub
inc
aam
jb
inc
retf
jno
loopne
(bad)
aaa
into
retf
and
aad
dec
mov
xchg
or
outs
adc
sbb
jnp
mov
mov
adc
dec
sbb
mov
sbb
jno
jbe
(bad)
sti
or
rcr
hlt
outs
mov
mov
(bad)
sbb
pop
cwde
or
aas
stos
mov
push
push
jle
dec
(bad)
scas
leave
mov
cmp
pop
retf
test
sub
adc
pop
jbe
push
pop
out
jp
ins
movs
pop
inc
mov
xchg
stos
inc
test
adc
data16
les
pop
call
addr16
add
push
pop
fxtract
xor
loopne
jne
sbb
jbe
mov
daa
mov
pop
dec
dec
test
dec
jg
xchg
xor
push
xchg
frstor
nop
je
jmp
popa
push
cmp
out
sbb
xchg
not
imul
mov
pushf
bound
stos
les
xchg
add
push
test
out
jbe
fbstp
cwde
dec
(bad)
push
in
cwde
shl
or
sub
pop
out
sti
jno
stos
push
push
leave
js
or
sub
mov
push
mov
jp
add
push
xchg
(bad)
in
mov
sub
retf
js
xchg
leave
mov
sar
fidiv
addr16
in
inc
hlt
xchg
out
neg
sub
xor
or
mov
lds
fisttp
cld
retf
addr16
mov
dec
out
not
and
std
js
mul
inc
sbb
in
mov
lock
push
loopne
loope
dec
shl
stc
rcl
dec
inc
ret
xchg
popa
out
outs
pop
xchg
call
add
and
nop
mov
in
rcl
dec
ins
inc
push
lahf
pop
repnz
xchg
add
mov
push
(bad)
jo
ja
inc
cmp
mov
push
mov
xor
(bad)
std
bound
rcl
push
mov
mov
jno
jb
addr16
(bad)
mov
push
sbb
mov
jns
out
cmp
add
out
xor
add
scas
or
(bad)
into
(bad)
ja
xchg
sete
jb
xchg
iret
push
xor
push
pop
ret
ins
popa
xor
ficomp
fidiv
mov
bound
(bad)
xor
imul
adc
mov
push
mov
ss
inc
or
lock
or
push
mov
or
inc
and
cld
xor
movs
fstp
and
mov
pop
dec
nop
adc
stos
retf
lea
adc
ror
in
fisub
push
bound
rol
dec
inc
add
adc
cs
das
and
or
test
xchg
add
rcl
add
adc
push
adc
add
and
idiv
or
fwait
cmp
inc
add
icebp
mov
cmp
add
lahf
xor
or
add
inc
push
mov
stc
movs
mov
ds
add
sub
xor
les
or
sbb
aaa
rol
xchg
repz
inc
mov
cmp
cmps
mov
and
mov
and
mov
inc
cmp
popf
jbe
(bad)
aad
xor
adc
aaa
aaa
(bad)
loopne
pusha
cmpxchg
dec
div
mov
mov
mov
cmc
out
int
add
xor
xchg
ret
push
xor
popf
(bad)
clc
xchg
neg
pcmpeqd
minps
mov
aas
imul
cmp
jbe
xchg
mov
pop
sub
ins
jge
push
int3
lahf
ficomp
jnp
cmp
aas
jne
xchg
scas
mov
mov
add
jmp
jnp
jbe
int3
int
lods
dec
aaa
stos
int
jl
jmp
jmp
adc
cmp
ja
lahf
jmp
or
scas
dec
sub
ds
mov
lahf
jne
jl
sub
jmp
or
(bad)
or
jl
jmp
jns
iret
pop
cdq
pop
sbb
pop
js
or
int
pop
call
divps
jg
outs
test
cdq
mov
ficomp
stos
push
test
jecxz
cdq
(bad)
iret
call
push
sbb
mov
sbb
pusha
push
adc
mov
ins
fnstenv
leave
jne
or
mov
mov
add
xchg
std
in
mov
fcom
fiadd
ret
enter
sahf
(bad)
pop
ins
adc
call
mov
mov
and
xchg
ja
sbb
adc
enter
add
in
(bad)
fimul
add
ins
call
lahf
lea
mov
call
mov
sbb
sub
xor
push
and
pop
sub
xchg
out
(bad)
sbb
cli
xor
sbb
pop
cmps
push
(bad)
daa
jg
call
add
pop
or
daa
jbe
int3
imul
pop
xchg
jmp
xor
and
or
scas
outs
sub
xor
loop
pop
(bad)
mul
or
popa
loopne
mov
push
push
inc
pop
pop
vsqrtps
cmps
out
shl
mov
xchg
lods
jmp
mov
or
(bad)
mov
pop
fs
mov
cmps
mov
adc
dec
mov
test
mov
inc
add
inc
sbb
sbb
test
aaa
sbb
pop
adc
xchg
pop
jne
fsubr
aaa
and
int
mov
xor
sbb
es
mov
pop
mov
retf
xor
dec
or
out
mov
cmps
icebp
js
push
(bad)
fcom
jbe
test
repz
fimul
(bad)
sar
pop
les
repnz
sub
push
aaa
loope
mov
aam
mov
pop
jb
sbb
xlat
dec
int
mov
ja
fild
adc
bound
ror
mov
nop
sbb
jmp
inc
sbb
sub
daa
inc
sbb
pop
ret
test
jbe
sub
mov
mov
jnp
std
xor
mov
loope
pop
xor
out
mov
clc
push
push
xchg
shr
or
imul
adc
sub
jl
pusha
aas
and
push
(bad)
xlat
test
cs
pop
fimul
fdivr
mov
inc
xchg
add
mov
add
jmp
pusha
add
pop
sub
bound
pop
mov
xlat
stos
inc
pusha
pushf
jmp
nop
fwait
scas
xor
cmp
jecxz
mov
jecxz
add
repnz
jbe
inc
ret
cmps
mov
ret
inc
dec
push
enter
mov
cmp
mov
xchg
stos
xchg
mov
push
or
inc
mov
push
and
cmp
ret
call
inc
out
jae
add
push
and
adc
inc
dec
jg
add
test
pusha
jge
movs
add
mov
pop
icebp
cmp
test
mov
pop
int3
les
call
cmp
sbb
mov
loope
fcom
dec
(bad)
in
or
mov
mov
call
mov
jmp
lods
cld
mov
pop
mov
retf
push
xlat
mov
scas
dec
pushf
mov
pop
pop
lods
cmp
repz
imul
xchg
push
ja
inc
pop
not
mov
pop
jae
movs
push
ds
lahf
call
push
push
popa
cdq
out
adc
or
outs
ss
add
sub
push
mov
scas
mov
arpl
imul
dec
pop
loope
dec
je
movs
fcmovbe
sub
pop
aad
sbb
mov
out
dec
sbb
jl
pushf
mov
push
cmp
sbb
stos
or
pop
sub
scas
adc
cmp
iret
dec
jb
and
ss
ja
sbb
(bad)
jmp
popf
mov
xchg
icebp
loope
ins
fistp
test
or
icebp
mov
pop
sub
xchg
stos
cmp
nop
leave
icebp
adc
fnstenv
jg
pop
(bad)
fdivr
push
mov
xchg
xchg
jns
xchg
push
test
mov
add
scas
mov
xor
mov
adc
jmp
or
push
jmp
mov
cld
addr16
lods
pop
push
pop
(bad)
leave
jmp
cdq
mov
test
sbb
lods
mul
xchg
inc
xor
cmc
inc
xchg
jnp
cld
adc
sbb
out
outs
jmp
and
jl
and
inc
add
pushf
es
adc
push
lahf
sub
lds
ficomp
aaa
or
mov
jge
xchg
sub
and
lds
fcomp
gs
cmc
ja
fidivr
stc
push
dec
enter
ins
cmp
xor
xlat
out
push
dec
shl
pop
cmp
scas
data16
dec
loope
rcr
nop
es
test
adc
adc
ins
fsubrp
adc
jecxz
inc
jae
cmps
pop
mov
jb
sub
test
(bad)
lock
mov
cmc
mov
sar
nop
cmps
div
xchg
xor
pop
inc
into
mov
stos
movs
sbb
(bad)
adc
xchg
cwde
fisttp
test
and
dec
push
daa
js
jge
mov
add
or
push
stc
or
and
shl
push
out
fimul
sahf
or
push
pop
pop
and
jg
fld
(bad)
imul
cwde
lahf
jns
inc
fisttp
ins
or
aad
xor
lea
or
dec
test
out
xchg
stc
add
inc
mov
adc
retf
leave
mov
cld
out
iret
adc
cmp
push
mov
dec
fcomp
test
call
dec
mov
lds
ret
popf
call
jg
dec
or
(bad)
mov
push
xchg
lea
fcomp
loopne
push
psubusb
rcl
(bad)
mov
xchg
ror
imul
adc
gs
mov
ret
xchg
daa
mov
push
xchg
mov
xchg
arpl
pop
or
sub
push
(bad)
call
add
(bad)
pop
repz
stc
jb
mov
gs
pop
inc
mov
push
repz
mov
les
cmp
rcr
paddusw
(bad)
pusha
mov
or
xchg
push
shl
add
push
cmp
cs
fst
inc
xchg
add
(bad)
and
imul
fwait
movs
inc
push
loope
loope
loopne
inc
xor
jne
ja
pop
dec
jecxz
arpl
xchg
lods
mov
je
pop
retf
mov
inc
jbe
xor
scas
xor
aaa
je
xchg
aaa
ret
sub
out
xchg
push
add
jns
inc
adc
dec
movs
adc
xor
cmps
mov
push
dec
jbe
jbe
sub
repz
dec
enter
mul
jbe
pop
enter
mov
shl
add
test
adc
and
test
sub
std
or
cmps
out
repnz
pushf
(bad)
jmp
nop
push
inc
jb
inc
push
push
add
(bad)
call
into
call
mov
mov
push
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
xor
mov
mov
mov
push
mov
call
mov
push
mov
call
mov
call
test
je
lea
push
push
call
mov
call
mov
mov
sub
push
call
lea
add
mov
mov
lea
push
mov
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
push
push
mov
call
mov
call
mov
cmp
jne
call
mov
mov
mov
push
push
push
call
add
call
push
mov
push
push
lea
call
push
lea
push
call
mov
call
test
jne
call
mov
mov
mov
push
mov
push
push
push
call
mov
add
push
push
push
jmp
mov
cmp
je
mov
call
test
je
mov
call
test
je
mov
call
test
je
call
mov
mov
push
push
push
mov
call
add
call
mov
push
push
push
lea
call
push
lea
push
jmp
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
lea
push
mov
mov
call
mov
call
lea
call
mov
lea
add
push
mov
call
mov
mov
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
push
call
add
mov
mov
call
mov
mov
push
push
mov
call
add
mov
mov
push
call
mov
call
mov
mov
call
lea
push
call
mov
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
jne
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
call
mov
mov
and
mov
fild
and
mov
mov
fild
mov
sub
lea
fchs
faddp
fdiv
fstp
push
push
push
call
add
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
call
mov
mov
add
push
push
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
jne
lea
push
push
call
mov
mov
add
push
push
lea
call
call
mov
mov
push
push
mov
call
add
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
cmp
jne
mov
push
push
push
call
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
lea
push
call
mov
call
mov
push
push
mov
call
mov
call
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
mov
lea
call
mov
call
movzx
push
push
push
lea
call
lea
push
lea
call
mov
mov
mov
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
cmp
jne
mov
push
push
push
call
call
mov
mov
push
push
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
pop
ret
push
mov
cmp
jne
cmp
je
lea
call
lea
pop
jmp
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
lea
call
mov
call
movzx
push
push
call
mov
push
lea
call
push
push
lea
call
mov
mov
mov
push
push
lea
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
push
push
call
mov
call
xor
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
call
add
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jle
push
push
call
add
cmp
je
sub
sar
cmp
je
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
push
push
push
call
mov
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
call
mov
mov
mov
push
push
push
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
mov
mov
call
test
jne
mov
test
jne
xor
jmp
mov
lea
mov
add
test
jne
sub
sar
push
push
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
xor
mov
mov
mov
mov
push
mov
call
mov
lea
push
push
mov
call
mov
call
mov
mov
cmp
setne
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
push
lea
call
mov
mov
mov
mov
lea
push
mov
push
push
lea
push
mov
call
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
call
test
je
push
lea
call
mov
lea
push
mov
call
mov
lea
call
mov
call
test
je
mov
call
test
jne
mov
call
test
je
mov
call
test
je
mov
pop
mov
pop
pop
mov
mov
pop
ret
call
mov
mov
mov
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
lea
push
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
push
mov
push
push
push
push
mov
call
mov
mov
push
push
call
add
test
jne
call
mov
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
mov
cmp
je
push
call
mov
call
test
jne
mov
call
test
je
mov
call
test
jne
call
mov
mov
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
lea
push
mov
call
mov
mov
call
test
sete
mov
lea
call
cmp
je
lea
push
mov
call
mov
lea
push
mov
call
mov
lea
call
mov
lea
call
push
push
lea
call
test
jne
call
mov
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
push
mov
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
mov
mov
cmp
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
lea
push
push
push
push
lea
mov
mov
call
mov
cmp
je
call
mov
push
push
push
mov
call
add
mov
lea
push
push
push
push
lea
mov
call
mov
cmp
je
call
mov
push
push
push
mov
call
add
mov
lea
call
mov
mov
cmp
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
lea
push
push
push
push
lea
mov
mov
call
mov
cmp
je
call
mov
mov
push
push
push
call
add
mov
lea
call
mov
mov
lea
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
call
mov
mov
push
push
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
push
jne
push
push
mov
jmp
lea
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
push
mov
lea
push
call
mov
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
jne
mov
add
push
call
lea
add
mov
mov
lea
push
lea
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
test
je
lea
call
test
je
lea
call
test
jne
mov
lea
push
mov
call
push
push
lea
push
lea
call
cmp
jne
call
mov
mov
push
push
push
mov
call
add
call
mov
mov
push
push
push
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
pop
pop
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
add
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
lea
push
mov
call
lea
mov
call
lea
lea
push
call
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
call
push
mov
call
call
mov
push
lea
mov
call
mov
call
mov
call
push
mov
lea
mov
push
mov
call
mov
mov
mov
call
call
mov
mov
push
push
push
push
mov
call
add
push
lea
lea
push
mov
call
lea
push
mov
call
lea
mov
call
mov
push
mov
call
lea
push
call
lea
mov
call
mov
push
mov
call
mov
call
push
mov
mov
call
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
lea
push
mov
mov
call
mov
call
lea
mov
mov
call
test
jne
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
mov
call
lea
add
push
mov
call
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
mov
call
test
je
mov
push
push
call
test
je
lea
call
mov
push
push
lea
call
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
push
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
lea
call
mov
push
push
lea
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
lea
mov
sub
push
call
add
add
mov
mov
lea
push
lea
call
mov
push
push
push
push
push
push
push
call
mov
cmp
je
mov
push
push
push
push
lea
call
push
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
lea
call
mov
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
mov
mov
pop
ret
mov
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
call
mov
mov
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
push
lea
mov
call
mov
mov
mov
mov
lea
push
mov
push
mov
push
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
call
test
je
mov
call
test
jne
mov
call
test
jne
call
mov
mov
push
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
mov
cmp
je
push
mov
call
mov
mov
mov
mov
mov
pop
mov
pop
pop
ret
int3
int3
int3
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
push
call
cmp
lea
jl
cmp
jne
mov
mov
lock
mov
pop
pop
pop
ret
mov
mov
mov
push
push
mov
call
mov
test
jne
jmp
mov
mov
mov
add
push
add
push
push
lea
push
call
add
mov
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
mov
test
je
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
lea
push
mov
je
cmp
lea
jge
cmp
jge
push
call
mov
mov
pop
mov
pop
ret
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
call
add
mov
pop
pop
ret
call
cmp
je
call
mov
call
xor
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
push
call
add
mov
mov
test
je
mov
mov
lea
test
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
push
call
add
mov
mov
mov
test
je
mov
mov
mov
lea
test
je
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
lea
call
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
add
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
push
mov
push
push
mov
push
mov
push
push
add
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
push
mov
push
push
mov
push
mov
push
push
push
push
mov
mov
mov
lea
mov
lea
push
push
call
mov
mov
add
test
mov
mov
je
lea
mov
add
sub
jne
cmp
jle
mov
push
lea
call
mov
mov
push
push
push
push
call
add
test
jne
xor
jmp
mov
lea
lea
mov
add
test
jne
sub
sar
js
cmp
jg
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
pop
pop
pop
mov
mov
pop
ret
push
call
int3
push
mov
mov
push
push
push
mov
push
mov
mov
mov
push
push
call
add
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
xor
push
mov
mov
mov
mov
mov
push
push
lea
push
push
call
mov
call
mov
mov
push
push
lea
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
lea
or
lock
dec
test
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
push
sub
mov
push
mov
call
add
add
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
mov
mov
mov
mov
mov
cmp
mov
je
push
lea
mov
push
call
add
cmp
mov
jne
pop
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
shr
push
mov
add
mov
movzx
push
push
push
call
test
je
push
push
push
call
mov
add
test
jne
pop
pop
xor
pop
pop
ret
movzx
call
push
push
push
push
push
lea
push
push
push
mov
call
mov
mov
sub
mov
sub
mov
sub
or
jge
push
mov
call
movzx
mov
push
push
push
push
push
mov
push
push
call
push
call
test
jl
mov
cmp
jg
mov
mov
pop
mov
pop
mov
pop
pop
ret
push
call
int3
int3
int3
int3
push
mov
push
push
mov
test
mov
jne
call
pop
pop
pop
ret
mov
test
jne
push
call
mov
mov
mov
push
mov
sub
mov
sub
mov
sub
or
jge
push
mov
call
mov
cmp
mov
push
ja
lea
push
push
push
call
jmp
push
push
push
call
add
test
pop
jl
mov
cmp
jg
mov
mov
mov
pop
pop
pop
ret
int3
int3
push
mov
sub
mov
push
xor
cmp
push
mov
mov
je
mov
push
mov
xor
cmp
jle
mov
cmp
jne
test
jne
mov
mov
sub
mov
sub
sub
or
mov
jge
push
mov
call
mov
mov
mov
add
mov
lea
sar
cmp
jl
test
je
test
jl
mov
cmp
jg
mov
mov
mov
pop
mov
pop
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
mov
mov
mov
push
push
push
push
call
add
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
push
mov
push
lea
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
push
mov
test
push
push
mov
jg
jl
mov
cmp
jae
mov
xor
jmp
mov
push
push
push
push
call
push
push
lea
mov
mov
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
push
mov
add
mov
mov
adc
mov
cmp
jl
jg
cmp
jbe
push
push
lea
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
push
mov
push
mov
test
je
mov
mov
mov
or
jne
mov
push
push
mov
call
mov
mov
push
push
mov
call
mov
pop
pop
ret
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
call
cmp
je
push
call
mov
call
push
push
call
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
mov
jne
jmp
lea
push
push
call
test
je
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
mov
lea
push
call
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
push
push
call
test
je
jmp
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
push
push
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
lea
add
cmp
je
cmp
lea
jl
mov
cmp
jne
push
call
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
push
push
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
push
lea
push
mov
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
add
lea
cmp
mov
je
cmp
jl
mov
cmp
jne
mov
mov
call
cmp
lea
jl
cmp
jne
mov
mov
lock
jmp
mov
mov
mov
push
push
mov
call
mov
test
je
mov
mov
mov
lea
push
add
lea
push
push
lea
push
call
add
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
mov
call
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
add
lea
cmp
mov
je
cmp
jl
mov
cmp
jne
mov
mov
call
cmp
lea
jl
cmp
jne
mov
mov
lock
jmp
mov
mov
mov
push
push
mov
call
mov
test
je
mov
mov
mov
lea
push
add
lea
push
push
lea
push
call
add
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
mov
call
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
call
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
xor
test
setne
mov
test
jne
push
call
mov
mov
call
add
mov
mov
mov
test
je
test
jne
movzx
push
call
test
je
push
push
mov
call
jmp
xor
jmp
mov
lea
jmp
lea
mov
add
test
jne
sub
sar
push
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
call
push
lea
mov
call
mov
push
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
push
push
mov
test
mov
mov
mov
jge
push
call
lea
add
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
setne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
jne
mov
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
cmp
jne
xor
pop
mov
pop
ret
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
setne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
test
setne
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
call
test
je
mov
call
pop
mov
pop
ret
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
mov
mov
push
push
push
call
mov
add
test
je
push
lea
call
mov
call
mov
push
push
push
mov
call
mov
add
lea
push
mov
call
mov
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
push
push
mov
test
mov
mov
mov
jge
push
call
lea
add
mov
mov
test
je
mov
push
push
call
add
cmp
jne
pop
mov
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
push
mov
mov
sub
push
mov
mov
mov
mov
test
mov
jge
mov
push
call
add
add
add
mov
test
je
mov
push
push
call
add
cmp
jne
mov
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
jne
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
push
call
mov
mov
add
push
push
mov
call
mov
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
jne
movzx
mov
push
push
call
mov
add
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
mov
mov
mov
test
je
mov
push
push
call
add
cmp
jne
mov
mov
lea
mov
lea
push
push
call
mov
mov
add
test
mov
je
lea
mov
add
sub
jne
mov
cmp
jle
mov
push
lea
call
mov
push
push
push
push
call
mov
add
test
jne
xor
jmp
mov
lea
nop
mov
add
test
jne
sub
sar
js
cmp
jg
mov
mov
mov
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
push
mov
mov
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
lea
call
mov
pop
pop
pop
mov
mov
pop
ret
push
call
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
jne
mov
push
call
mov
push
call
mov
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
push
je
mov
push
push
call
add
cmp
jne
mov
push
push
call
mov
mov
push
push
call
mov
add
test
je
mov
push
push
call
add
mov
pop
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
sub
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
push
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
mov
push
mov
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
push
mov
push
mov
mov
push
push
push
call
mov
push
call
mov
mov
add
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
call
add
mov
mov
lea
call
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
push
call
mov
add
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
push
call
add
push
mov
mov
push
mov
call
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
push
call
add
push
mov
mov
push
mov
call
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
lea
push
xor
push
mov
mov
call
mov
call
mov
push
push
lea
push
lea
mov
mov
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
jne
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
call
add
lea
push
adc
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
push
push
push
push
call
push
push
mov
mov
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
call
test
je
mov
add
mov
call
cmp
ja
jb
cmp
jae
call
mov
lea
push
call
mov
call
mov
mov
lea
push
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
push
push
lea
call
push
lea
push
call
mov
sub
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
pop
pop
mov
mov
pop
ret
push
lea
call
mov
lea
call
cmp
ja
jb
cmp
jae
lea
call
test
je
mov
add
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jmp
mov
movsx
push
lea
push
push
call
add
lea
call
cmp
ja
jb
cmp
jae
lea
call
test
je
mov
push
call
cmp
je
add
cmp
jle
push
push
call
test
je
nop
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
call
add
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
mov
add
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
jmp
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
test
mov
mov
jne
mov
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
lea
call
mov
test
je
push
call
add
mov
mov
pop
xor
pop
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
push
lea
call
mov
push
lea
call
mov
lea
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
push
lea
call
test
setne
call
mov
mov
add
push
call
lea
mov
mov
movzx
mov
mov
push
push
push
push
call
add
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
cmp
jne
push
push
lea
call
mov
call
mov
mov
movzx
push
push
push
push
push
call
add
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
call
push
mov
mov
push
mov
call
mov
push
mov
mov
push
call
mov
mov
call
mov
add
xor
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
push
lea
call
push
lea
call
test
je
push
push
lea
call
cmp
jne
xor
mov
mov
pop
pop
pop
mov
pop
ret
push
push
lea
call
push
lea
call
test
je
push
push
lea
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
push
push
push
push
push
push
lea
push
call
test
jne
call
push
push
lea
call
push
lea
push
call
mov
lea
push
mov
push
push
call
test
jne
mov
mov
push
call
cmp
jne
call
push
push
lea
call
push
lea
push
call
call
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
push
lea
push
lea
call
mov
lea
push
lea
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
nop
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
push
mov
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
lea
call
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
push
push
push
lea
call
mov
xor
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
push
xor
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
push
push
lea
push
push
mov
call
mov
call
mov
call
mov
mov
push
push
push
mov
call
add
push
lea
push
lea
call
mov
call
mov
push
push
push
mov
call
add
push
lea
call
test
jne
call
mov
mov
push
push
push
call
add
jmp
push
call
mov
test
mov
jne
mov
call
mov
mov
push
push
push
push
call
mov
add
push
push
call
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
call
mov
lea
call
call
mov
mov
push
push
push
mov
call
add
lea
call
test
jne
call
mov
mov
push
push
call
add
jmp
mov
push
call
test
jne
call
mov
mov
add
call
mov
push
push
push
call
add
jmp
lea
call
mov
push
push
lea
call
test
je
push
mov
mov
push
call
mov
push
mov
mov
push
call
mov
mov
call
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
xor
mov
pop
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
mov
call
push
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
push
mov
push
mov
push
mov
push
push
call
test
je
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
call
mov
add
cmp
jl
push
push
call
add
test
je
sub
sar
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
jmp
push
lea
push
lea
call
mov
push
lea
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
jle
mov
push
lea
call
mov
push
call
add
cmp
jge
call
cmp
je
call
mov
push
push
mov
call
add
jmp
lea
call
mov
call
movzx
push
push
push
lea
call
mov
push
push
push
push
call
cmp
jne
call
mov
mov
push
push
call
jmp
call
mov
mov
push
push
call
mov
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
pop
pop
pop
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
movzx
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
mov
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
call
push
push
lea
call
mov
mov
mov
mov
mov
mov
lea
lea
push
call
lea
add
push
call
mov
lea
call
or
mov
lea
call
mov
mov
call
push
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
call
mov
mov
jmp
mov
push
mov
lea
call
mov
mov
mov
ret
call
push
push
lea
call
mov
push
mov
lea
call
mov
lea
call
mov
mov
mov
ret
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
push
xor
mov
mov
mov
cmp
jge
push
call
mov
cmp
je
cmp
je
mov
lea
mov
lea
cmp
mov
jae
push
push
call
mov
lea
add
cmp
jae
mov
push
push
call
mov
mov
add
add
lea
push
mov
mov
push
push
mov
call
mov
mov
mov
pop
pop
pop
mov
mov
mov
pop
ret
mov
cmp
jge
mov
cmp
je
mov
mov
call
cmp
jne
call
mov
mov
mov
call
mov
mov
lea
mov
push
push
mov
call
mov
jmp
mov
mov
mov
mov
test
je
mov
mov
call
test
jne
call
mov
mov
mov
call
mov
push
mov
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
call
xor
test
setne
test
jne
push
call
mov
mov
mov
call
add
mov
mov
mov
test
je
test
jne
movzx
push
call
test
je
push
push
mov
call
jmp
xor
jmp
mov
lea
nop
mov
add
test
jne
sub
push
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
push
je
jmp
lea
mov
cmp
je
mov
lea
mov
cmp
ja
sub
mov
mov
mov
mov
lea
mov
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
or
mov
lea
mov
mov
mov
sub
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
or
add
jne
mov
cmp
jne
mov
cmp
jbe
mov
sub
cmp
lea
je
mov
push
call
add
cmp
ja
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
mov
sub
push
mov
sub
cmp
pop
jae
push
push
lea
mov
mov
mov
call
mov
lea
push
lea
call
push
lea
push
call
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
test
push
je
mov
push
push
call
add
cmp
je
mov
call
test
je
mov
push
mov
call
mov
mov
mov
pop
pop
mov
mov
mov
pop
ret
mov
mov
push
push
push
call
add
push
lea
call
mov
mov
mov
lea
push
push
call
add
mov
mov
lea
call
mov
mov
pop
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
xor
mov
mov
mov
cmp
push
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
je
mov
push
mov
call
mov
mov
mov
pop
pop
pop
mov
mov
mov
pop
ret
mov
mov
push
push
call
add
test
je
mov
mov
push
push
push
call
add
push
lea
call
mov
mov
mov
lea
push
push
call
add
mov
mov
lea
call
jmp
mov
mov
push
mov
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
push
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
add
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
mov
call
push
lea
push
lea
call
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
cmp
sete
test
sete
test
jne
call
mov
mov
push
push
call
call
mov
mov
push
push
call
call
mov
mov
push
push
call
add
push
lea
push
lea
call
push
lea
call
lea
call
lea
call
test
je
push
push
push
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
add
push
call
lea
mov
mov
mov
add
push
call
lea
mov
mov
mov
mov
push
push
push
push
call
add
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
test
jne
pop
pop
pop
mov
push
push
call
call
mov
push
push
mov
call
add
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
push
lea
mov
mov
push
call
mov
call
or
mov
mov
call
lea
push
mov
call
mov
add
push
mov
call
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
push
call
mov
call
test
jne
lea
call
mov
mov
push
call
push
push
push
lea
push
push
call
add
lea
mov
mov
push
call
mov
mov
mov
call
mov
lea
call
push
mov
mov
push
mov
call
mov
call
mov
mov
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
call
add
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
jmp
lea
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
push
push
call
test
je
mov
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
or
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
xor
cmp
mov
mov
jne
mov
mov
cmp
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
mov
add
cmp
mov
jge
mov
cmp
je
push
call
mov
jmp
push
lea
push
lea
call
mov
call
mov
cmp
mov
jl
mov
lea
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
push
push
lea
call
push
lea
call
mov
mov
push
push
lea
call
mov
push
lea
call
test
jne
push
push
push
mov
push
call
add
test
jne
call
mov
mov
push
push
push
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
cmp
jle
mov
cmp
je
push
call
mov
add
mov
pop
pop
xor
mov
pop
mov
pop
ret
mov
push
push
call
test
je
mov
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
call
add
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
mov
mov
mov
push
call
add
cmp
jne
mov
push
lea
or
push
lea
mov
call
mov
call
test
je
xor
jmp
mov
test
je
and
cmp
jne
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
mov
push
push
push
lea
push
call
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
mov
mov
mov
push
lea
push
lea
call
mov
call
mov
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
mov
push
push
push
lea
push
call
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
lea
call
mov
cmp
je
mov
cmp
je
push
call
add
mov
mov
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
lea
call
mov
mov
mov
mov
pop
ret
mov
xor
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
push
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
mov
push
push
push
push
push
push
push
push
call
mov
cmp
jle
mov
mov
mov
sub
lea
sub
or
jge
push
lea
call
mov
test
je
mov
push
push
push
push
push
push
push
push
call
mov
test
jne
xor
jmp
mov
lea
lea
mov
add
test
jne
sub
js
cmp
jg
mov
mov
mov
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
movzx
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
mov
mov
add
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
push
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
add
mov
lea
call
mov
mov
mov
push
push
push
push
push
push
push
push
call
mov
cmp
jle
mov
mov
mov
sub
lea
sub
or
jge
push
lea
call
mov
test
je
push
push
push
push
mov
push
push
push
push
call
mov
test
jne
xor
jmp
mov
lea
mov
add
test
jne
sub
js
cmp
jg
mov
mov
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
mov
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
cmp
je
mov
cmp
je
mov
cmp
je
push
push
lea
call
push
mov
push
call
add
test
jne
push
push
jmp
push
mov
push
call
add
test
jne
push
push
jmp
push
mov
push
call
add
test
jne
push
push
lea
call
push
lea
call
lea
call
mov
mov
mov
push
mov
push
lea
call
test
jne
call
mov
mov
push
mov
push
mov
push
push
push
mov
call
add
mov
lea
call
jmp
mov
push
mov
push
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
push
mov
mov
lea
push
call
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
mov
mov
push
mov
push
mov
push
push
push
mov
call
add
mov
mov
ret
mov
lea
call
mov
lea
call
mov
jmp
call
mov
mov
push
push
push
mov
call
add
jmp
call
mov
push
push
mov
call
add
mov
lea
call
mov
lea
call
mov
lea
call
xor
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
mov
jmp
xor
test
je
and
mov
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
call
lea
push
lea
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
mov
call
push
push
push
lea
call
push
lea
push
call
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
push
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
mov
jmp
xor
test
je
and
mov
test
pop
je
push
lea
push
push
lea
push
lea
call
mov
call
mov
call
lea
push
lea
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
pop
mov
xor
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
push
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
mov
jmp
xor
test
je
and
mov
test
pop
je
push
lea
push
push
lea
push
lea
call
mov
call
mov
call
lea
push
lea
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
pop
mov
xor
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
mov
call
add
cmp
jl
nop
push
lea
push
lea
call
mov
call
cmp
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
add
call
add
cmp
jle
mov
mov
mov
push
lea
push
lea
call
mov
mov
cmp
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
push
mov
call
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
mov
call
add
cmp
jl
nop
push
lea
push
lea
call
mov
call
cmp
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
add
call
add
cmp
jle
mov
mov
mov
push
lea
push
lea
call
mov
mov
cmp
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
push
mov
call
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
mov
call
add
cmp
jl
nop
push
lea
push
lea
call
mov
call
cmp
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
add
call
add
cmp
jle
mov
mov
mov
push
lea
push
lea
call
mov
mov
cmp
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
mov
sub
add
mov
mov
push
mov
call
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
mov
mov
call
add
cmp
jl
push
lea
push
lea
call
mov
call
test
je
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
call
mov
call
movzx
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
add
push
add
call
add
cmp
jle
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
call
add
cmp
jl
push
call
add
cmp
jg
push
lea
push
lea
call
mov
call
test
je
push
lea
push
lea
call
mov
call
test
jne
push
lea
push
lea
call
mov
call
test
je
push
lea
push
lea
call
mov
call
push
mov
call
add
cmp
jne
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
lea
call
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
call
push
push
push
push
lea
call
push
lea
push
call
mov
lea
call
mov
xor
pop
mov
mov
pop
ret
call
push
push
push
push
lea
call
push
lea
push
call
call
push
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
call
mov
mov
push
push
push
call
mov
add
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
push
push
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
mov
add
push
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
lea
call
cmp
jne
mov
lea
push
lea
call
mov
push
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
test
sete
test
sete
test
je
lea
push
lea
call
mov
push
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
push
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
lea
push
push
push
push
lea
call
push
lea
call
mov
call
push
lea
mov
mov
push
call
mov
mov
push
push
lea
push
lea
call
push
lea
call
mov
mov
call
call
mov
mov
push
mov
push
push
push
mov
call
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
mov
pop
xor
mov
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
push
lea
call
mov
mov
push
push
lea
push
push
call
mov
mov
add
push
push
lea
call
test
je
mov
mov
push
push
lea
push
lea
call
mov
push
lea
call
mov
lea
call
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
push
push
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
mov
add
push
lea
push
lea
call
mov
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
jmp
mov
xor
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
mov
add
mov
push
mov
call
add
mov
mov
mov
mov
add
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
mov
add
push
lea
call
mov
lea
call
mov
lea
call
mov
xor
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
call
mov
mov
push
push
push
call
mov
add
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
push
push
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
add
lea
call
lea
call
test
je
push
push
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
add
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
lea
push
lea
call
push
lea
call
push
lea
push
lea
call
mov
call
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
add
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
mov
xor
test
setne
push
lea
push
push
push
call
mov
mov
add
lea
lea
mov
add
test
jne
mov
sub
push
sar
lea
push
push
push
push
lea
call
call
mov
mov
mov
push
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
lea
call
test
jne
pop
pop
mov
lea
call
mov
lea
call
mov
xor
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jge
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
push
mov
call
add
cmp
jl
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
add
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
mov
mov
push
call
mov
push
mov
lea
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
add
mov
mov
mov
lea
mov
mov
add
test
jne
sub
sar
push
lea
mov
push
push
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
mov
add
push
mov
call
add
cmp
jle
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
lea
call
lea
call
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
lea
call
push
push
lea
call
mov
mov
test
jge
push
call
movzx
cmp
jne
cmp
jge
push
call
movzx
cmp
je
push
lea
call
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
call
mov
call
test
je
call
mov
mov
push
push
call
add
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
lea
lea
push
push
lea
push
lea
mov
call
mov
lea
push
push
lea
push
lea
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
push
lea
push
lea
call
mov
call
mov
call
mov
mov
push
push
push
push
mov
call
mov
add
push
push
push
push
call
test
je
push
push
call
mov
lea
call
mov
xor
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
mov
push
call
add
mov
mov
test
je
mov
call
mov
jmp
xor
mov
lea
push
lea
call
add
mov
mov
push
push
mov
call
mov
mov
test
je
mov
jmp
mov
push
lea
push
push
push
push
push
push
mov
call
mov
test
jne
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
lea
push
push
call
test
je
mov
cmp
jne
push
push
push
push
lea
push
call
test
je
mov
sub
je
sub
je
sub
jne
push
call
mov
call
jmp
call
mov
call
jmp
mov
push
push
push
push
call
call
mov
mov
push
push
push
push
call
lea
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
lods
sub
add
fmul
xor
add
pop
add
nop
nop
nop
nop
nop
nop
push
sub
(bad)
jp
fs
rcl
push
xor
loope
push
push
mov
mov
iret
xchg
lods
cmps
or
pop
and
dec
scas
jne
das
xchg
loopne
pop
ja
push
jg
add
hlt
cmp
or
cli
or
and
xchg
add
or
cmps
adc
push
or
push
cmps
cld
sub
push
jmp
xor
sbb
mov
fistp
xor
ret
ja
pop
dec
push
cmps
pop
cmp
test
dec
fidivr
call
aam
stos
mov
jl
xor
das
mov
push
out
push
pop
(bad)
pushf
leave
ret
cmp
outs
jbe
fistp
loope
jg
aad
add
mov
sub
pop
movs
add
adc
dec
es
mov
fimul
cmps
jno
inc
xchg
mov
mov
mov
repnz
push
lods
out
mov
pop
jne
jl
fistp
or
jns
test
adc
outs
and
call
cmps
dec
add
cmc
int
xor
pop
scas
cld
(bad)
push
add
pop
into
fild
and
(bad)
popf
xchg
pusha
sub
pop
movs
or
sbb
ds
rol
jno
adc
and
xor
cmp
sub
and
xchg
dec
jb
addr16
xchg
add
ror
sub
pop
sub
add
push
dec
and
lock
xchg
stos
mov
push
aas
xor
repz
adc
sbb
jge
jo
inc
cld
scas
rcl
xchg
sub
push
iret
jb
ja
sti
xchg
jmp
cmp
adc
rcr
fcomp
mov
push
and
cmps
jne
jnp
jmp
sub
gs
stos
mov
push
fcomp
mov
push
and
cmps
jge
ror
ins
push
dec
adc
jge
sub
adc
lea
xor
daa
cmp
inc
pop
push
push
cdq
retf
hlt
push
repz
daa
jae
cmps
or
mov
call
fisub
sub
push
movs
sbb
mov
xchg
pop
add
add
dec
int
ud0
push
cli
pop
push
mov
sub
push
jns
test
test
add
sub
cld
pop
sbb
push
fisub
xchg
xor
sbb
add
or
add
aas
cmc
stos
mov
neg
ss
pop
ja
(bad)
inc
pop
xor
fadd
inc
jno
xchg
dec
(bad)
sub
push
xor
cli
add
push
(bad)
and
mov
dec
fisub
jbe
pop
sbb
mov
and
in
movs
sbb
lods
mov
sub
mov
aam
jo
jg
fisub
movs
xor
sahf
mov
popa
repz
jae
sti
inc
and
add
ins
shr
jno
jne
push
push
(bad)
fadd
sub
add
mov
pop
mov
shr
loopne
jmp
repz
stc
imul
cdq
add
repnz
adc
(bad)
push
mov
rol
cmps
cld
scas
pop
dec
push
movs
pop
push
cdq
out
inc
lea
xchg
jmp
fsubr
or
add
inc
push
ficom
cdq
add
push
inc
mov
push
das
mov
cmps
pusha
lea
mov
fist
(bad)
push
dec
into
stos
gs
iret
outs
pop
pusha
movs
cmps
adc
sbb
mov
sbb
pop
(bad)
push
mov
xchg
sub
xchg
aad
jmp
loopne
mov
lea
mov
pop
push
mov
fdivr
scas
adc
push
sub
add
stos
pop
mov
jno
fistp
sbb
sbb
xor
cmps
int3
scas
ror
sub
push
xor
sbb
pushf
mov
das
(bad)
fadd
xchg
sti
sub
push
pop
cmp
and
mov
lea
ja
add
and
out
pop
sbb
xor
fdiv
aam
and
aam
mov
bound
je
ja
fistp
outs
ins
cdq
inc
shl
or
lods
test
es
mov
pop
mov
cld
cmps
cld
scas
shr
mov
add
push
xor
cwde
jg
jg
sbb
inc
dec
mov
pop
dec
push
cmps
add
fisttp
sub
mov
xchg
outs
pop
mov
popf
and
and
sti
sub
sbb
xor
fdiv
das
mov
call
pop
xor
and
daa
xchg
loope
test
add
fsub
xor
jne
and
es
test
test
mov
mov
pop
push
movs
inc
pop
add
mov
bound
push
pop
lds
push
(bad)
lods
fld
sub
push
das
cmps
mov
aaa
add
cmps
xor
pop
test
pop
stos
iret
add
movs
mov
pop
int
rol
sahf
imul
pop
pop
sbb
jmp
push
fdivr
fmul
mov
repz
jne
out
ror
cmps
aas
test
std
scas
rcl
fcomp
or
iret
outs
loopne
and
cmps
mov
mov
add
push
in
movs
adc
lods
fnstcw
sti
fdivr
shr
cwde
scas
(bad)
mov
jo
shl
and
push
xor
out
ret
mov
sbb
mov
and
mov
ja
or
test
lods
lods
arpl
mov
mov
repnz
mul
push
rcr
fcomp
or
push
fcmovnbe
xchg
je
add
in
push
add
push
sub
inc
adc
pop
jmp
jge
movs
pop
pop
inc
test
cmc
inc
push
jno
ins
mov
mov
(bad)
lock
jns
fcomp
jmp
mov
call
jl
xchg
je
push
inc
ret
and
scas
push
(bad)
fldcw
aam
sub
sub
and
dec
mov
sar
mov
imul
test
or
mov
shl
and
sub
push
sbb
jecxz
lsl
jecxz
aam
and
fadd
mov
shl
es
sub
push
dec
fcomp
leave
shl
sub
push
(bad)
pop
bnd
mov
pop
add
push
es
push
mov
xor
das
mov
pop
pop
dec
ror
xor
outs
pop
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
lea
push
call
push
call
lea
push
push
call
test
jne
mov
push
push
lea
mov
call
mov
and
cmp
pop
je
cmp
je
cmp
jne
call
mov
mov
push
push
push
mov
call
lea
add
cmp
jne
call
push
push
push
lea
call
mov
push
mov
call
mov
lea
call
push
lea
call
push
lea
push
call
push
call
add
call
mov
mov
mov
push
mov
push
push
push
call
mov
add
mov
lea
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
cmp
je
push
push
lea
call
lea
call
mov
push
lea
call
mov
mov
mov
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
mov
mov
push
call
mov
mov
lea
call
mov
mov
lea
mov
add
test
jne
sub
push
sar
lea
push
push
push
push
lea
call
call
mov
mov
mov
push
push
push
call
add
lea
call
mov
push
lea
call
mov
mov
mov
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
lea
mov
add
test
jne
sub
push
sar
lea
push
push
push
push
lea
call
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
call
mov
mov
push
push
push
call
add
lea
call
call
cmp
je
call
mov
call
mov
call
call
mov
call
cmp
mov
je
call
cmp
je
call
cmp
je
call
mov
mov
push
push
push
call
add
jmp
call
mov
mov
push
push
push
call
add
lea
push
push
mov
call
push
call
test
je
lea
push
push
push
call
mov
push
push
push
lea
push
push
push
mov
mov
call
push
push
call
call
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
xor
jmp
mov
test
je
and
mov
test
je
call
push
push
push
push
lea
call
push
lea
push
call
mov
mov
mov
push
lea
push
lea
call
mov
call
mov
mov
push
mov
mov
push
push
lea
push
lea
call
mov
call
mov
mov
mov
call
mov
pop
and
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
push
lea
call
mov
call
push
push
lea
push
lea
mov
call
mov
call
push
mov
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
call
mov
call
mov
mov
mov
mov
push
lea
push
lea
call
mov
call
mov
mov
mov
cmp
je
mov
cmp
je
push
push
lea
call
mov
mov
push
push
lea
call
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
movzx
movzx
push
push
mov
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
lea
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
call
mov
lea
call
mov
push
push
lea
push
call
mov
mov
push
push
push
push
mov
mov
mov
mov
call
push
push
push
push
mov
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
mov
call
mov
mov
push
push
call
call
mov
mov
push
push
push
mov
call
call
mov
mov
push
push
call
add
mov
call
mov
xor
cmp
je
mov
mov
cmp
mov
mov
je
mov
jmp
mov
mov
mov
add
mov
jne
mov
cmp
je
lea
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
cmp
je
push
mov
mov
mov
mov
mov
mov
add
mov
mov
call
cmp
jne
call
mov
push
push
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
call
add
lea
call
call
cmp
je
call
mov
call
mov
call
call
mov
call
mov
pop
mov
pop
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
call
xor
cmp
jne
mov
cmp
mov
jne
call
push
push
push
lea
call
push
lea
push
call
call
cmp
je
call
mov
call
push
lea
push
lea
call
mov
call
test
sete
cmp
jne
push
push
lea
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
cmp
jne
mov
cmp
jne
call
mov
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
lea
call
xor
mov
mov
pop
pop
pop
mov
pop
ret
call
cmp
jne
call
mov
mov
push
push
push
call
push
call
add
mov
mov
cmp
je
mov
call
mov
jmp
xor
mov
call
push
mov
call
mov
call
call
mov
call
call
mov
mov
cmp
je
mov
jmp
xor
call
mov
call
mov
push
call
mov
cmp
je
push
call
mov
call
mov
cmp
je
push
push
push
lea
push
call
mov
call
mov
push
lea
mov
mov
push
call
mov
call
mov
mov
call
mov
lea
call
mov
cmp
je
call
mov
mov
push
push
push
mov
call
mov
add
push
push
call
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
lea
call
mov
pop
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
xor
cmp
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
mov
mov
push
mov
call
add
cmp
jl
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
test
setne
test
je
push
lea
push
lea
call
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
mov
add
lea
lea
push
push
push
lea
call
push
lea
mov
call
mov
mov
mov
mov
push
add
call
add
cmp
jle
call
mov
call
xor
test
setne
test
jne
push
call
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
mov
mov
mov
call
add
mov
mov
push
push
lea
call
push
lea
call
mov
push
lea
call
mov
mov
mov
push
push
lea
call
test
je
mov
mov
push
push
lea
push
lea
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
mov
push
push
push
call
add
cmp
jl
push
push
call
add
test
je
sub
sar
cmp
je
mov
call
push
push
jmp
cmp
jl
push
push
call
add
test
je
sub
sar
cmp
je
mov
call
push
push
mov
mov
push
call
add
mov
push
push
mov
call
test
mov
je
push
call
push
push
dec
pop
xchg
addr16
xchg
aad
lds
mov
jae
jbe
inc
fadd
adc
mov
mov
mov
jmp
jnp
push
jno
sbb
push
dec
or
(bad)
cmp
push
xchg
pop
or
rol
out
xchg
daa
popf
adc
mov
test
add
sub
imul
sub
sub
add
sbb
cs
pusha
pop
pop
cmps
sub
aam
cwde
and
aaa
retf
pop
sub
push
lods
push
dec
inc
xor
or
push
inc
xchg
nop
test
xlat
shr
imul
xor
stos
or
aaa
xor
mov
jne
dec
mov
mov
inc
inc
add
or
cmp
outs
mov
or
imul
fldcw
pop
mov
xchg
push
pop
xor
test
mov
fmul
xor
call
test
int3
cmps
and
xchg
push
cwde
movs
dec
outs
sti
ret
dec
jb
pop
jne
loope
rcr
cmp
mov
sar
lds
ja
neg
inc
dec
add
retf
jl
stc
sub
ds
mov
sub
(bad)
daa
xchg
mov
into
add
inc
sbb
ins
inc
sub
ds
dec
inc
clc
xchg
outs
inc
stc
jge
mov
mov
shl
push
mov
loopne
sahf
pop
(bad)
clc
cmps
dec
loope
stos
mov
ins
sahf
fcom
in
(bad)
push
ja
aaa
dec
pop
mov
xlat
push
xor
mov
push
aad
bound
mov
das
push
icebp
cmp
movs
inc
mov
(bad)
xchg
bound
in
adc
push
cmp
push
add
add
gs
mov
pop
test
iret
jmp
adc
inc
cmps
(bad)
push
in
push
cmp
inc
fild
adc
dec
push
daa
popf
aam
xor
lods
inc
lods
mov
iret
pop
mov
(bad)
std
retf
pop
inc
pop
dec
ins
mov
jno
sub
pop
clc
push
adc
retf
movs
mov
and
mov
sar
js
mov
sbb
test
xor
dec
push
loope
xor
ss
sbb
sbb
jnp
xlat
movs
ret
dec
push
fdivrp
dec
xchg
jecxz
sbb
fdiv
int3
ret
cmps
add
push
mov
test
xchg
iret
sbb
cmp
and
ja
inc
or
pop
inc
pushf
neg
test
jp
pop
inc
or
adc
pop
and
xor
jns
cmp
jmp
jecxz
cmp
test
mov
xchg
jp
inc
out
jnp
cmc
dec
fst
cld
lock
push
mov
adc
add
stos
in
aam
lock
lgs
ds
(bad)
stc
cmps
aad
mov
and
nop
xor
(bad)
aaa
push
scas
push
pop
jbe
movs
sub
mov
mov
loopne
in
sub
xlat
sub
jge
add
xchg
(bad)
mov
test
cmps
cmp
pop
mov
stos
ret
sub
cdq
or
xchg
and
cdq
mov
jmp
je
mov
cmps
popa
cwde
mov
int
and
(bad)
shl
xchg
and
or
fld
and
xor
psubusb
lods
addr16
cwde
sub
pop
mov
das
stos
shl
(bad)
mov
not
mov
aas
es
out
push
xchg
push
ror
xchg
inc
mov
xor
adc
cld
mov
mov
mov
int
and
jns
sti
es
test
aad
cwde
mov
cmp
cmps
mov
mov
mov
and
cmp
sbb
addr16
fnstcw
pop
xchg
jo
mov
jle
call
stc
fucomi
and
jns
xchg
in
stos
push
retf
and
imul
push
(bad)
cmp
xchg
xor
int3
stc
push
sahf
cmps
sub
xor
das
push
jge
cwde
bound
adc
fld
sub
mov
adc
sar
jmp
imul
sub
jle
ret
sbb
bswap
inc
cmp
push
out
add
or
mov
mov
and
aas
pop
xchg
ins
dec
addr16
fidivr
jno
popf
dec
sbb
mov
out
mov
aas
lahf
test
aaa
dec
into
push
(bad)
xchg
push
inc
mov
xor
xchg
test
cwde
or
int3
jno
jbe
adc
daa
lods
dec
adc
jns
cmp
clc
out
lods
in
je
sbb
push
test
dec
sbb
mov
pop
dec
hlt
jmp
inc
add
sbb
pop
retf
stos
push
jns
pushf
mov
(bad)
outs
xchg
les
pop
ja
(bad)
dec
fstp
ins
dec
repz
and
shl
push
icebp
outs
ret
mov
lock
add
jl
aaa
sub
fs
test
fisttp
sub
push
dec
cmp
inc
cmp
jae
imul
in
push
cmp
stos
adc
nop
pop
mov
fld
sti
mov
jns
fst
sbb
dec
aas
mov
sbb
mov
sbb
pop
mov
(bad)
or
xor
or
test
cmp
mov
mov
fimul
sbb
jne
or
test
push
js
dec
outs
xlat
jge
shl
and
out
addr16
adc
in
shl
fldcw
outs
dec
dec
enter
out
sti
cmp
jnp
fwait
xor
and
inc
inc
dec
stos
dec
add
mov
not
xchg
cmps
enter
(bad)
cmp
les
add
mov
xchg
fisub
aas
aas
jg
leave
push
sbb
mov
lods
cmp
xchg
sahf
jmp
sub
icebp
or
ret
cmp
mov
cmc
cmp
setge
and
mov
and
pop
mov
gs
jg
dec
in
arpl
(bad)
outs
pop
jbe
lahf
iret
sbb
rcl
or
ficom
(bad)
xchg
sub
push
mov
and
inc
outs
cmp
mov
adc
mov
(bad)
cmp
cmps
cmp
lock
sbb
cmc
mov
cmp
test
mov
movs
movs
pop
and
or
inc
xchg
cmp
pop
stc
cmp
mov
jno
inc
xor
xor
xchg
cs
shl
int
sub
aaa
jge
cmp
fldcw
call
idiv
mov
inc
adc
pop
xchg
into
pop
mov
(bad)
std
xchg
add
jmp
add
fild
sub
cmp
cmp
mov
mov
push
dec
loopne
mov
push
into
add
paddb
lds
jmp
outs
inc
rcl
jmp
xor
xor
or
inc
xchg
cwde
xor
xchg
mov
out
fldcw
pop
scas
mov
fsubp
in
push
push
sub
or
test
test
adc
popf
pop
icebp
push
xchg
mov
iret
xchg
jns
je
pop
loop
fdiv
xor
jmp
or
mov
ret
int
retf
ja
or
cs
jle
and
jp
sub
fiadd
xchg
dec
dec
xor
mov
mov
call
iret
pop
aas
mov
sub
jecxz
push
and
push
mov
iret
push
addr16
in
pop
mov
inc
add
adc
mov
cmp
jmp
adc
imul
daa
mov
xchg
gs
ins
idiv
cmp
lss
scas
push
out
mov
pop
mov
mov
adc
cwde
mov
mov
cld
cdq
jmp
mov
sub
push
and
imul
sti
xlat
xor
jns
jmp
outs
test
push
cwde
jmp
mov
adc
push
arpl
pop
call
out
adc
mov
xchg
xchg
retf
jbe
imul
jle
data16
xlat
fimul
movs
push
pop
rcl
gs
rcl
mov
mov
clc
ret
(bad)
push
push
push
movs
pop
push
dec
std
lahf
mov
stos
and
movs
push
mov
cmps
aas
repz
hlt
push
sub
scas
outs
add
iret
(bad)
pushf
jl
test
int
pop
or
and
shr
fs
stc
aas
fild
cmp
fcom
push
adc
in
ret
cmps
jl
movs
leave
icebp
in
cdq
fsub
xchg
arpl
add
in
pslld
clc
scas
test
stc
and
dec
cmp
enter
mov
inc
enter
fnstenv
imul
pop
xlat
cmp
push
jmp
ds
jge
std
cmp
add
mov
xchg
mov
dec
add
adc
and
in
sahf
add
xor
ins
mov
mov
and
mov
dec
out
jns
push
or
and
jnp
loope
retf
mov
loope
(bad)
lea
iret
pop
sbb
jecxz
xchg
test
sub
pop
add
add
cmp
dec
shl
fwait
and
inc
test
inc
aas
test
in
mov
cdq
icebp
or
cmp
scas
into
ins
inc
sbb
repz
mov
pop
push
in
int3
or
popa
cli
daa
aad
mov
and
pop
and
aad
cmps
and
neg
xchg
call
hlt
pop
(bad)
mov
(bad)
xor
retf
shr
mov
(bad)
and
popa
fsubrp
lods
inc
mov
xor
pushf
cs
jb
sbb
retf
test
push
iret
mov
int
sbb
and
cmp
cmp
(bad)
push
and
cmc
xor
jb
hlt
es
mov
mov
adc
popa
add
sbb
cmp
push
sub
mov
aaa
mov
pop
pop
fwait
adc
mov
xchg
and
aam
(bad)
fsub
lds
fdivr
out
mov
cdq
jmp
or
add
mov
leave
jne
clc
addr16
aad
inc
call
int3
jg
xchg
mov
rol
mov
or
ret
das
push
ja
jns
xor
inc
push
cmp
sub
pop
js
rdpmc
add
xor
stos
mov
lahf
iret
or
mov
lahf
nop
test
mov
mov
cmp
enter
hlt
aaa
pop
mov
aam
mov
in
retf
cmp
inc
adc
and
jmp
jecxz
imul
repnz
cmp
xchg
aaa
sti
jl
pop
cdq
or
add
test
sub
pop
jecxz
mov
mov
data16
sbb
push
xor
out
sbb
ret
out
hlt
adc
adc
scas
mov
sbb
and
fwait
add
jb
into
int3
ja
fidivr
add
xchg
jns
jnp
pop
int3
dec
inc
pop
adc
test
ja
in
mov
punpckhbw
imul
fwait
and
push
outs
je
stc
cmps
or
mov
mov
add
mov
ins
ja
(bad)
cmps
push
push
mov
push
sub
lods
sbb
popa
xchg
in
es
mov
xchg
push
dec
jle
xchg
push
fldcw
mov
call
and
xchg
(bad)
sub
stc
leave
or
dec
add
cmp
pop
sar
hlt
jns
hlt
adc
add
xor
xchg
es
inc
mov
rcl
iret
push
push
dec
and
mov
adc
pop
mov
fist
sbb
mov
cmps
retf
pop
dec
mov
xor
xor
cld
les
push
and
int
call
xor
and
pop
test
push
adc
mov
fisttp
fbstp
mov
xchg
cmps
jae
jne
inc
add
dec
xchg
cwde
mov
dec
test
in
xlat
fwait
push
loope
and
pop
mov
shl
inc
mov
mov
loope
xlat
inc
arpl
adc
jmp
sbb
cmp
popa
mov
outs
movzx
daa
mov
add
imul
cmps
hlt
movs
jno
and
jbe
jns
mov
mul
popa
fisub
addr16
adc
cmp
xor
jmp
pop
xchg
sub
jg
iret
jge
inc
mov
lods
and
adc
pop
add
ja
pop
sub
das
rol
mov
fcom
leave
push
mov
dec
sti
inc
mov
cmp
stc
(bad)
xor
mov
and
pop
and
mov
lahf
xchg
call
stc
jbe
imul
xor
into
pushf
and
add
test
test
xchg
jb
and
ret
pusha
cmp
pop
jno
rcl
dec
mov
aad
pop
jno
lahf
jmp
in
jns
fidivr
xchg
adc
pop
rol
inc
push
mov
sbb
xor
jne
sbb
gs
xchg
int3
repz
rol
out
imul
pop
mov
inc
scas
mov
adc
mov
movs
pop
dec
in
frstor
pop
out
push
mov
fbstp
mov
fwait
push
in
addr16
mov
ins
not
(bad)
out
retf
fdivr
gs
cmp
or
sbb
ss
bound
fwait
sub
imul
aas
lds
inc
dec
dec
mov
mov
std
dec
fdivr
cmp
mov
dec
retf
inc
sbb
add
clc
xlat
hlt
dec
out
xlat
scas
das
ss
xor
leave
imul
aaa
push
xchg
and
mov
sbb
xchg
xlat
sbb
loope
push
daa
rcr
mov
movs
shr
fisttp
idiv
or
popa
or
jle
call
adc
xchg
test
jne
movs
jge
jnp
pop
ret
imul
sbb
xor
cmc
popf
inc
xor
shl
adc
fcom
div
inc
inc
dec
mov
fcomp
(bad)
xor
inc
mov
adc
js
xlat
inc
dec
and
fs
dec
call
pop
out
cmp
std
jecxz
or
pushf
into
sbb
ja
aad
shl
(bad)
test
std
xor
dec
mov
repz
je
push
pop
pop
and
mov
cmps
or
aam
pop
sub
push
push
xchg
add
in
mov
fldenv
mov
retf
movs
dec
pop
ins
dec
jmp
adc
(bad)
cmp
mov
lahf
jle
pop
fwait
xor
call
mov
inc
test
in
mov
sbb
in
cmc
call
pop
mov
out
iret
in
pop
stos
lahf
daa
xchg
out
scas
jecxz
pop
ds
out
add
jge
in
outs
lods
add
pop
xchg
push
jecxz
lea
in
mov
pop
push
push
mov
(bad)
mov
cmps
retf
and
cli
dec
icebp
lahf
xor
xlat
fbstp
cmp
mov
pop
arpl
pop
or
xchg
lahf
into
cmp
sbb
into
loope
je
mov
pop
add
cld
lods
jmp
lods
stos
fcomi
mov
in
jne
fsincos
cmps
xor
sub
cmc
mov
sbb
rcl
pop
xor
mov
pop
jns
mov
inc
imul
jg
add
add
cli
ror
cmc
sub
mov
push
(bad)
movs
add
mov
out
cmps
mov
dec
stos
fisubr
mov
mov
inc
stc
pushw
xor
lahf
dec
(bad)
or
mov
jb
in
scas
daa
int
cdq
jg
or
les
ret
inc
xor
cmp
fimul
cmps
ja
leave
push
dec
cmps
xchg
fild
fisub
jecxz
jecxz
movs
push
xchg
jne
xchg
popa
xor
inc
daa
out
xchg
stc
mov
jae
jle
push
mov
loope
je
out
(bad)
mov
xor
fbstp
cmp
pop
push
test
mov
dec
stc
add
ror
repnz
(bad)
or
imul
xchg
mov
jp
ret
stos
pop
jne
mov
jl
inc
and
mov
jmp
mov
jge
mov
jmp
mov
adc
retf
(bad)
sub
mov
add
jnp
loope
xor
cmp
ret
mov
dec
in
cs
push
xchg
jno
in
jl
test
mov
movs
inc
inc
ja
add
imul
imul
mov
adc
rcr
xor
mov
enter
cmp
push
dec
push
mov
or
push
jl
dec
movs
out
jae
xor
imul
call
call
in
js
lock
mov
fistp
sbb
or
cli
imul
xchg
sub
dec
mov
hlt
imul
jle
sti
imul
add
ss
jnp
push
(bad)
cld
popf
stos
sub
stc
xchg
cld
xor
ret
jecxz
sub
enter
call
mov
or
jo
pop
push
lds
(bad)
or
rcr
stos
es
adc
and
or
push
(bad)
jne
sbb
and
sbb
add
cmp
mov
adc
cmc
aas
jne
push
xor
pop
sub
pop
push
enter
in
and
cmp
fcomip
(bad)
stos
sbb
and
jbe
mov
fldcw
jg
dec
push
push
(bad)
push
fnclex
ins
fwait
or
xchg
imul
add
cmp
jmp
daa
mov
hlt
push
scas
sbb
dec
sub
ror
cmp
xor
xchg
lods
mov
jo
aas
repz
mov
adc
call
in
or
pop
ja
jmp
sub
and
mov
mov
daa
lods
sti
lahf
pop
aad
shr
adc
mov
xchg
mov
rcl
fwait
in
out
pop
xor
xchg
pop
xlat
xchg
add
and
es
cmps
or
sub
mov
add
push
sub
bound
adc
int
push
stc
imul
mov
enter
push
sbb
ret
jle
mov
jge
jae
or
shl
mov
movs
sub
xlat
mov
movs
add
inc
ret
fwait
mov
jnp
xchg
hlt
js
inc
mov
enter
add
iret
dec
xor
xor
das
or
das
adc
test
adc
call
jne
addr16
mov
pop
fucomi
data16
out
sahf
pop
stos
idiv
(bad)
sub
in
fistp
xor
fld
cld
loope
cmp
ds
mov
enter
mov
movs
mov
repz
retf
into
fdiv
mov
pusha
sbb
out
ss
out
inc
lock
popf
int
ret
add
daa
jae
mov
cli
xor
pushf
sbb
dec
dec
add
inc
mov
and
xchg
adc
ins
idiv
xor
push
rcl
inc
fsub
div
push
enter
dec
outs
fadd
sub
popa
call
pushf
or
sub
adc
and
jmp
xchg
aas
xchg
xchg
push
xchg
scas
addr16
pop
scas
or
stos
test
jne
scas
fadd
push
pop
push
pop
sbb
xor
xor
xor
aam
jbe
sub
adc
scas
jne
xchg
neg
(bad)
push
adc
cmp
ds
jp
bound
mov
pop
pop
push
pop
cmps
out
dec
jo
dec
aaa
mov
jge
fucomi
call
aas
rcl
push
xor
jbe
fidivr
push
in
jo
mov
out
pop
lds
jb
dec
ds
or
shr
push
mov
push
mov
xchg
es
inc
in
fist
push
out
push
mov
faddp
cmc
scas
test
dec
js
fcom
es
and
pop
call
aad
test
int
jno
mov
push
test
dec
sub
je
cli
arpl
out
jns
cld
enter
ss
push
sub
jmp
xchg
sub
xchg
inc
mov
cmps
sub
js
div
arpl
(bad)
fwait
mov
out
rcl
adc
mov
mov
out
retf
loopne
ror
sbb
mov
shr
lahf
in
and
pop
xor
out
lahf
xchg
mov
xchg
pop
dec
fild
leave
mov
push
sbb
jge
jnp
enter
push
lahf
xchg
ja
inc
cmp
fidiv
sbb
sbb
leave
addr16
cmp
mov
mov
je
dec
inc
mov
repz
jae
cld
add
dec
cmc
cmp
jg
push
dec
popa
pusha
sti
lds
lods
mov
add
inc
sub
sbb
jno
sub
imul
mov
jmp
or
hlt
add
mov
rcl
jns
dec
jne
mov
and
jae
scas
jno
inc
sbb
and
out
mov
pop
xor
sub
enter
dec
aas
(bad)
add
cmp
hlt
mov
jle
or
je
pop
sub
sub
pusha
ss
scas
lods
inc
add
xchg
ins
dec
push
mov
je
and
out
test
sub
mov
loop
daa
or
mov
outs
stos
jmp
push
test
lea
shld
add
or
out
inc
aaa
les
mov
aas
(bad)
add
fidiv
push
pop
or
jo
add
dec
daa
or
sahf
mov
in
lea
fwait
push
mov
push
sbb
sbb
cmp
js
sub
or
mov
pop
scas
jb
ja
retf
int3
lahf
inc
sbb
sbb
adc
push
or
ins
leave
(bad)
(bad)
and
test
pop
daa
push
fadd
or
imul
xchg
cmp
dec
stos
adc
call
popf
loopne
xor
and
lods
idiv
(bad)
in
push
jo
inc
pop
inc
and
cli
pop
imul
in
scas
xor
rcr
push
into
in
inc
add
repz
mov
sbb
jecxz
movs
je
xchg
repz
mov
dec
mov
mov
dec
mov
xlat
and
stos
scas
in
aaa
cmp
repz
inc
and
aad
sub
mov
das
cmp
xor
out
jns
xor
push
out
stc
enter
outs
cld
mov
cmp
xor
adc
cmps
in
sbb
scas
test
mov
xchg
mov
ds
xchg
retf
pop
jmp
ret
push
out
xchg
ss
fucomip
xchg
sub
sub
(bad)
mov
js
test
pop
pop
into
scas
xlat
scas
mov
pop
pop
(bad)
clc
or
xor
out
push
shl
adc
inc
aaa
cmps
add
pop
nop
(bad)
push
imul
mov
add
(bad)
or
and
jbe
enter
inc
sub
sar
dec
stos
mov
scas
add
cmp
in
es
pop
mov
jecxz
xchg
in
sar
mov
or
cmp
in
lods
xrelease
dec
sbb
cmc
daa
add
jno
pop
imul
clc
ss
lods
stc
ja
lea
jmp
popa
sbb
adc
and
arpl
or
push
ins
les
scas
sbb
sar
imul
cld
aas
pop
pop
add
mov
clc
dec
in
add
aam
jecxz
(bad)
pop
fs
hlt
cmps
add
jns
int
out
mov
stc
sbb
enter
imul
outs
outs
out
retf
and
xor
out
lods
inc
xchg
mov
ret
xor
mov
cs
repz
aam
test
aaa
retf
add
mov
pop
cmps
sub
sub
in
cmp
dec
fnstcw
out
xor
cdq
or
arpl
dec
sbb
jns
enter
icebp
push
adc
or
pop
clc
test
xchg
jae
(bad)
icebp
push
nop
ja
mov
fldcw
jl
xor
jecxz
cli
shl
in
mov
push
jmp
cmps
inc
adc
stos
adc
jne
ficom
stc
cs
dec
adc
push
inc
(bad)
lock
xchg
cmp
aam
adc
daa
ficomp
ret
xchg
dec
mov
sub
loop
mov
(bad)
cs
jg
shl
cmp
sbb
dec
out
sbb
outs
aaa
inc
xchg
or
jne
or
cdq
or
sub
lods
out
mov
mov
dec
call
mov
sar
lea
sub
out
shr
jns
fldenv
(bad)
push
leave
inc
fcmove
fsubr
sti
mov
sub
popa
test
sbb
test
sbb
mov
out
mov
test
fild
cld
xchg
push
stc
(bad)
imul
xor
fcomp
fld
inc
xchg
push
xchg
pop
iret
inc
sub
mov
(bad)
fld
data16
jl
jmp
cdq
pop
popa
xor
push
lea
imul
js
adc
xor
aam
fild
stos
les
mov
xchg
das
sbb
(bad)
out
pop
push
dec
pop
sbb
xlat
rcr
(bad)
cmp
dec
scas
add
je
icebp
repnz
pop
xchg
dec
push
add
add
push
mov
shl
pop
xchg
daa
jb
xlat
pop
sbb
popa
inc
add
mov
les
mov
cdq
repz
dec
into
stc
cwde
jbe
adc
out
xchg
add
loope
sti
add
loope
add
sahf
pushf
rol
cmp
push
sbb
ror
add
ins
push
jns
jnp
add
ja
je
or
cwde
mov
fyl2x
push
lods
das
pop
lds
div
xchg
add
stc
out
mov
lea
ins
sub
hlt
imul
xlat
xchg
or
enter
repz
xchg
mov
fsub
bound
retf
repz
push
pop
xchg
add
jle
in
cmp
popa
mov
retf
pop
pop
pop
imul
mov
push
cs
and
cmp
int
fwait
push
(bad)
pop
jp
mov
mov
fwait
pop
pop
xchg
mov
pop
jo
jno
int3
ins
aaa
loop
jl
adc
xor
xor
stc
inc
mov
rcl
or
inc
cmc
stos
push
test
popf
lods
jp
sub
test
frstor
cmp
fnstenv
js
retf
(bad)
jno
fwait
sar
popa
sti
popf
fwait
sbb
mov
sbb
jl
mov
addr16
pop
cmp
test
out
mov
jg
rcr
adc
les
dec
adc
call
sbb
aad
sti
fnstcw
and
call
push
fnstenv
adc
mov
arpl
setbe
inc
mulps
mov
push
mov
push
mov
sbb
loopne
into
retf
dec
dec
leave
sub
push
(bad)
clc
ret
fsubr
push
arpl
mov
sbb
jg
scas
xchg
dec
ret
ins
adc
mov
(bad)
push
push
fwait
push
mov
sub
push
into
imul
mov
adc
xchg
and
mov
push
jmp
add
ja
imul
and
sar
inc
push
clc
or
fisubr
adc
repnz
xchg
loop
cdq
aas
mov
mov
ret
or
das
inc
pop
test
lahf
xchg
pop
cwde
cmps
adc
push
jp
and
imul
(bad)
sbb
imul
cmp
mov
inc
push
ret
lods
into
sub
sub
sbb
data16
cwde
test
icebp
jge
pop
jl
pop
ficomp
jb
in
push
lahf
xchg
push
popf
or
push
ins
(bad)
daa
daa
(bad)
retf
jle
addr16
js
hlt
rcr
out
mov
leave
fst
int3
hlt
push
test
out
sbb
pop
cmp
fnstcw
mov
bound
movs
lds
xor
push
cmps
leave
clc
aad
cmp
leave
nop
out
xchg
outs
and
test
lahf
xor
sti
fnstsw
mov
push
rcl
sub
imul
adc
xchg
push
inc
sub
add
repnz
mov
jmp
sbb
jl
popa
adc
inc
sbb
sbb
xor
stc
jo
cmp
cli
mov
and
test
mov
aad
pop
sbb
mov
out
mov
outs
or
cwde
or
mov
adc
xchg
xor
je
rcl
fsub
pop
popa
ffreep
push
arpl
rcl
jg
aas
push
sub
icebp
repnz
push
aad
fisttp
scas
(bad)
call
and
imul
jle
dec
loop
ins
cwde
les
in
(bad)
repz
inc
xor
xor
add
sar
pop
inc
pop
es
cwde
xchg
push
mov
stc
imul
push
mov
aaa
leave
outs
xor
sub
dec
(bad)
adc
rcr
fistp
cvtdq2ps
ret
or
push
push
push
xchg
into
xchg
and
std
push
xor
in
rcl
dec
mov
ret
lods
cwde
fst
and
ins
leave
or
imul
mov
loop
push
pop
lock
or
push
aad
jecxz
movs
movs
push
sahf
js
popa
adc
sub
cmp
jle
cmp
jmp
mov
jecxz
push
sbb
xchg
mov
in
imul
test
ds
inc
xchg
sbb
ja
sbb
jg
adc
pop
xchg
mov
inc
fninit
add
jae
retf
or
inc
xor
push
pop
and
dec
aaa
pop
test
mov
xchg
mov
mov
retf
hlt
xchg
cmp
or
and
xor
add
push
cmps
ja
push
and
ja
xchg
or
loope
sti
int3
dec
ins
sar
fld
movs
popf
sbb
adc
out
jbe
adc
test
ins
cmps
dec
daa
push
cdq
add
cmp
lds
daa
pop
or
mov
retf
cdq
ret
scas
ins
xor
mov
cdq
icebp
jge
xchg
mov
(bad)
or
sub
fld
xchg
imul
sbb
repz
(bad)
dec
daa
xor
fwait
sub
mov
mov
gs
push
push
sub
les
dec
and
jmp
dec
into
xlat
lock
sub
dec
clc
cwde
jg
jge
push
and
stos
mov
sbb
fsub
hlt
add
and
adc
rcl
outs
aaa
les
out
xchg
and
leave
daa
pop
or
push
loop
jmp
push
push
shr
mov
mov
test
sbb
test
ds
ja
push
(bad)
pushf
mov
xchg
frstor
xchg
cdq
imul
fsub
dec
sub
dec
call
(bad)
xlat
cli
lmsw
fsub
stc
cld
or
leave
jmp
(bad)
shl
jne
push
mov
ret
push
mov
jbe
test
sbb
ins
dec
push
dec
add
call
sbb
scas
movs
(bad)
test
cmp
mov
sub
jno
cmp
hlt
test
xchg
add
xchg
popa
sahf
adc
jg
aaa
std
icebp
jg
mov
mov
cmp
mov
jge
pop
call
push
mov
add
loop
popa
lds
sub
sbb
test
movs
lea
cmc
shr
(bad)
add
lea
push
mov
adc
dec
cmp
fnstenv
push
shl
fmul
out
and
mov
xchg
fldl2t
xor
ret
push
and
mov
fist
lock
test
cli
or
aas
es
fstp
popf
fwait
shl
cmp
lds
icebp
retf
xchg
fld
inc
out
repz
(bad)
sti
repnz
jg
popa
push
mov
inc
pushf
add
int3
dec
or
cdq
and
cli
sbb
adc
mov
jge
push
xchg
outs
cli
or
pop
das
adc
ins
in
and
mov
inc
cmp
pop
dec
hlt
mov
and
dec
jbe
sbb
movs
or
cmp
xor
(bad)
inc
push
(bad)
in
xchg
or
jg
inc
adc
lds
lahf
popf
jle
push
mov
inc
mov
cmc
and
jmp
sar
add
mov
pop
cli
inc
mov
cdq
stos
cld
xor
xor
and
jecxz
pushf
rcl
arpl
pop
pop
adc
adc
leave
out
in
arpl
(bad)
adc
mov
adc
dec
es
ins
arpl
mov
xchg
xchg
cmp
cs
xor
xor
test
push
mov
cwde
jge
test
xchg
cmp
inc
aas
cmps
jnp
add
mov
xor
push
cwde
or
das
sub
sbb
cld
mov
jno
mov
into
xchg
pop
imul
mov
imul
shl
xchg
xchg
imul
push
mov
dec
cmps
xor
aad
fild
dec
mov
mov
mov
ret
adc
xchg
sub
fsub
out
test
pop
jno
mov
shl
cdq
out
push
jp
or
xor
xchg
adc
cmp
sub
fidiv
mov
(bad)
xchg
dec
pop
push
stos
mov
mov
bound
fwait
push
xchg
xchg
xor
test
cmps
stos
outs
cmps
repz
xchg
add
js
xor
xor
loop
mov
enter
jbe
bound
das
inc
add
xchg
or
jbe
js
das
imul
xchg
mov
dec
jg
cmp
mov
adc
lods
dec
mov
(bad)
jmp
arpl
arpl
pop
sub
test
jae
sub
icebp
in
mov
xchg
ret
pop
leave
aad
xchg
xchg
daa
fbstp
sti
nop
maskmovq
not
jbe
inc
in
push
and
push
xchg
sbb
push
mov
mov
daa
pop
push
xor
xchg
or
sub
dec
sbb
ret
test
jecxz
adc
lds
xchg
cmc
sbb
push
fst
shl
cmp
fldcw
inc
push
add
push
mov
(bad)
xlat
aaa
scas
mov
test
sbb
out
sub
leave
xor
mov
jae
sbb
fistp
in
pop
sbb
jp
int3
leave
aas
dec
sbb
xchg
and
xor
retf
dec
packuswb
aas
mov
mov
cld
inc
daa
sub
sub
stos
nop
clc
push
or
push
pop
sbb
popa
mov
sahf
sub
mov
ds
lds
jbe
repnz
cdq
ret
mov
daa
sub
clc
jne
cmp
lahf
and
jl
mov
pop
cmp
sbb
pop
inc
loope
mov
lods
adc
neg
xchg
xchg
add
jmp
pop
popf
or
xchg
cdq
xor
(bad)
out
xor
imul
push
pop
or
jae
pop
ret
cmps
hlt
inc
mov
hlt
pop
(bad)
scas
xlat
sub
retf
xchg
call
ins
stos
jmp
inc
push
jns
sub
mov
inc
push
mov
mov
mov
fisttp
jle
aas
or
and
sub
and
adc
push
mov
pop
mov
retf
pop
jp
inc
pushf
mov
stos
push
sub
lahf
inc
call
call
push
jge
rcl
out
ins
dec
jl
inc
movs
xchg
fwait
lea
xchg
jns
je
loope
push
inc
mov
mov
cmp
or
iret
les
fdiv
bound
call
sbb
leave
dec
cmc
fs
loope
cmp
fmul
test
add
push
sbb
jmp
mov
pop
loop
jbe
stos
cmps
in
daa
add
cmp
sub
push
mov
add
add
addr16
movs
mov
or
out
cmp
pop
test
outs
jnp
loopne
outs
shl
call
sahf
in
push
movs
cwde
mov
mov
xchg
shr
daa
dec
jmp
ins
inc
xchg
xlat
push
(bad)
es
popf
add
fnstcw
pop
jmp
mov
arpl
push
(bad)
push
jmp
xchg
or
fnstcw
repz
mov
cmps
xor
or
lods
cmps
inc
mov
dec
cmp
test
test
test
jmp
pop
dec
cmps
cmc
(bad)
not
pop
or
bound
mov
push
bound
addr16
push
xchg
in
cmp
repnz
mov
mov
cmc
movs
into
clc
enter
xchg
int
adc
push
sub
mov
outs
pushf
mov
push
or
imul
sub
sti
je
cmp
inc
dec
cwde
(bad)
dec
push
dec
in
dec
ss
cld
in
inc
cmps
ins
push
das
inc
mov
mov
adc
jl
ins
mov
mov
and
push
ret
mov
outs
movs
cmps
rol
dec
push
jmp
sbb
sub
cmp
inc
xor
xchg
cmp
add
pop
daa
(bad)
jmp
dec
push
les
call
adc
ror
inc
xor
pop
cld
xor
(bad)
jo
test
push
inc
xor
scas
mov
and
cli
adc
pop
movs
mov
je
aas
xor
and
ins
in
sub
pop
(bad)
cwde
adc
dec
add
mov
or
jmp
(bad)
call
adc
test
test
xlat
pop
push
vandnps
loopne
inc
inc
dec
call
push
adc
stos
or
pop
and
dec
shl
(bad)
xor
xchg
jl
(bad)
aad
aas
das
push
add
dec
cmp
xchg
(bad)
dec
push
outs
add
sub
jl
jae
jo
(bad)
in
shl
nop
arpl
stc
xchg
lods
int3
scas
mov
stos
mov
or
or
cdq
xchg
xchg
cmp
out
popa
adc
jp
pop
jno
dec
xchg
fidiv
inc
jb
or
imul
mov
sub
push
pop
lds
xor
mov
sbb
ss
les
addr16
pop
les
pop
je
pop
xchg
lahf
pop
dec
pushf
jns
pop
leave
inc
js
dec
mov
xlat
lods
jge
mov
pop
ret
(bad)
iret
pop
daa
popf
add
inc
or
sbb
sbb
das
add
(bad)
clc
rcr
add
xchg
dec
sub
stos
in
ins
xor
xchg
and
lds
imul
in
or
add
jbe
call
mov
add
cmc
fadd
cdq
or
xchg
lods
add
ret
xchg
jmp
aaa
ja
dec
imul
sub
test
sub
shrd
aad
xchg
fdiv
jge
int
push
ss
jae
fcmove
pop
ret
push
mov
cwde
push
mov
cmps
jmp
mov
pusha
inc
sbb
imul
mov
mov
dec
dec
inc
mov
inc
mov
aaa
pop
loope
outs
cs
xchg
xor
ja
lock
push
leave
sahf
push
mov
jo
jmp
mov
xchg
sub
outs
inc
jmp
(bad)
mov
push
pop
out
dec
inc
add
sbb
into
hlt
jmp
or
clc
sbb
das
push
push
fs
cmps
je
daa
sbb
lock
movs
movs
scas
or
ja
js
lahf
pop
fidivr
push
lods
(bad)
xchg
ds
mov
inc
(bad)
les
scas
mov
sub
cmc
mov
call
(bad)
out
adc
cmp
mov
inc
xchg
popf
sbb
movaps
adc
lds
push
ficomp
mov
sub
sub
sub
add
push
out
out
out
pop
movzx
xchg
cmp
cmp
and
(bad)
pop
out
or
std
data16
ret
call
(bad)
cmp
shl
xor
jno
pop
in
inc
cdq
cwde
push
sbb
shl
test
push
cli
cmp
cmp
and
mov
sub
or
cmps
or
jns
outs
enter
daa
pop
sub
std
into
cwde
cmp
neg
mov
out
push
xor
add
fild
mov
add
sbb
pushf
xor
mov
lahf
jle
cdq
mov
sahf
or
pop
rol
and
push
aad
enter
dec
and
fidivr
pop
add
aaa
retf
push
enter
jp
jg
push
mov
das
xchg
mov
sbb
aam
jns
je
outs
loopne
add
retf
call
sbb
cmp
js
movs
aam
cld
sbb
push
daa
mov
cwde
inc
or
(bad)
xchg
dec
dec
jb
imul
rol
sub
jl
arpl
mov
cwde
scas
inc
adc
xchg
push
pusha
ins
int
inc
and
push
lods
es
xor
(bad)
aam
daa
pop
retf
out
aaa
jl
jle
sbb
add
pop
add
in
and
lds
repnz
cmps
mov
jp
push
push
fldenv
mov
dec
sti
ss
(bad)
int3
js
xchg
push
test
(bad)
mov
sbb
out
ja
push
cmps
pop
rol
xchg
lods
add
fst
ss
mov
sbb
(bad)
jp
daa
out
xchg
sub
xchg
gs
rol
mov
pop
fcmovnbe
test
push
aad
adc
mov
in
call
daa
mov
pop
inc
ss
fmul
lods
js
or
div
adc
pushf
inc
inc
sbb
cmp
icebp
sbb
leave
and
(bad)
mov
dec
popa
xchg
jmp
and
jecxz
fwait
cmp
push
lds
fdivr
in
cmps
in
popw
into
jns
cdq
cmc
sbb
xchg
sbb
(bad)
stc
gs
xor
xor
dec
cmp
or
jmp
mov
adc
push
adc
jno
(bad)
sbb
ret
pop
fmul
and
or
fnstcw
fimul
mov
cmp
dec
fucomp
jg
sbb
inc
aaa
xacquire
repz
mov
shl
or
pop
jmp
bound
out
arpl
push
rcl
in
daa
dec
loope
sahf
xchg
or
or
test
mov
cs
neg
je
(bad)
call
rcl
rol
push
or
call
fimul
cld
jg
dec
dec
xor
push
or
scas
sub
xchg
mov
je
ins
sbb
fsub
sbb
fnstcw
push
call
cmps
mov
mov
jg
pop
push
dec
jbe
mov
call
out
(bad)
(bad)
loope
sub
jns
cmps
lock
(bad)
jp
inc
and
les
aam
add
cmp
or
xchg
ror
popa
jmp
scas
xchg
addr16
stos
xchg
test
out
das
shl
enter
pushf
aaa
test
test
mov
jae
mov
or
cmp
push
fidiv
add
sub
into
mov
xchg
pop
loop
mov
rol
rcl
push
cli
ds
sub
jnp
or
imul
mov
adc
icebp
popa
div
xchg
jmp
and
mov
mov
cld
gs
push
test
dec
jae
dec
imul
dec
sbb
aam
or
(bad)
leave
and
mov
sbb
mov
xor
mov
mov
cmps
push
call
adc
xchg
pop
dec
cmp
aaa
lods
fld
mov
mov
jl
sahf
sti
mov
inc
sub
or
leave
mov
push
jmp
enter
dec
mov
adc
lods
test
add
jp
push
(bad)
ja
movs
cmp
pusha
mov
jne
mov
(bad)
mov
nop
mov
dec
mov
rol
cmp
dec
cdq
mov
retf
jo
imul
aam
aaa
fdivr
adc
push
jg
aas
mov
xor
jge
jge
test
addr16
or
(bad)
mov
aas
pop
inc
mov
jp
dec
adc
aaa
mov
scas
outs
gs
adc
inc
mov
sahf
std
call
call
jne
push
imul
cdq
adc
in
mov
or
mov
jne
jecxz
(bad)
cmp
mov
pop
adc
sub
pop
out
sub
or
or
add
sti
pop
cmp
mov
xor
enter
enter
or
mov
push
dec
ror
inc
(bad)
enter
std
js
fiadd
rcl
pop
addr16
mov
xor
cmc
sar
pop
cmp
fisub
push
dec
mov
sub
pop
mov
stos
ret
cld
ret
imul
cmps
fs
jae
sub
cli
(bad)
dec
cmp
jnp
sbb
sbb
ret
je
stos
inc
cdq
(bad)
sub
sti
sbb
xchg
cmp
cmps
test
enter
sub
bound
mov
add
stc
cmp
sub
pushf
push
test
cmp
test
inc
inc
aam
mov
mov
popa
pop
inc
inc
or
xchg
(bad)
inc
(bad)
mov
movs
cmp
movs
fild
lods
inc
(bad)
sub
lods
fwait
xlat
repnz
rol
(bad)
dec
mov
stos
mov
or
scas
repz
hlt
jg
push
popa
xchg
ja
xchg
xor
loop
pop
jl
add
cdq
sbb
int
loopne
mov
pop
or
pop
mov
dec
inc
push
leave
add
adc
out
xor
sahf
fadd
pusha
xor
leave
scas
add
mul
outs
xlat
push
inc
xor
mov
mov
nop
ins
lds
popa
mov
aaa
mov
jo
fistp
mov
test
stc
add
adc
sub
mov
dec
bswap
and
call
inc
test
enter
pop
aaa
mov
cli
int
(bad)
cmc
ret
dec
cmps
cdq
inc
test
xor
retf
lahf
std
inc
or
jne
fnstcw
pop
fldcw
imul
push
movs
inc
xlat
fstp
cmp
rol
(bad)
cli
je
pop
iret
ins
add
rcl
xchg
xchg
cmp
push
jbe
or
aaa
pop
mov
ret
in
push
xor
jecxz
fst
xchg
pop
fcomp
test
inc
leave
imul
arpl
out
sbb
imul
and
mov
sar
push
sbb
repnz
jle
loope
sub
stc
mov
ja
cdq
setl
push
sar
jo
pop
jge
and
inc
xchg
aas
xchg
cmp
lods
xchg
fcmove
jmp
or
fwait
cmp
xchg
cli
add
xchg
and
xchg
sub
xor
push
out
push
adc
dec
repz
dec
dec
dec
dec
pushf
mov
adc
pop
inc
stos
es
or
pushf
cmp
cmp
sbb
pop
repnz
xchg
sub
sahf
cmp
inc
imul
mov
retf
cmp
ss
es
lea
mov
dec
cmp
aad
fistp
movs
loope
test
push
imul
mov
sahf
xor
(bad)
in
mov
inc
push
and
xchg
add
mov
icebp
pop
mov
xlat
int
push
mov
and
add
xor
dec
mov
ins
mov
rcl
xchg
outs
and
inc
and
lahf
mov
jno
arpl
test
test
aas
mov
sub
push
out
aas
jns
adc
mov
push
out
imul
ins
xor
ret
lods
test
rcr
mov
iret
pop
xor
push
call
xor
push
out
iret
in
mov
fadd
cmp
dec
inc
cmps
sahf
push
pop
out
mov
fs
mov
ins
mov
enter
pop
(bad)
cmps
nop
fyl2x
int
inc
fwait
lahf
pop
jo
mov
or
xchg
jb
leave
retf
out
mov
sbb
push
push
inc
cmp
and
push
or
lods
in
push
jmp
and
jmp
js
mov
push
cmps
ret
rol
mov
and
sub
ss
push
xor
pusha
(bad)
data16
ss
dec
xor
ficomp
adc
iret
adc
pop
pop
cmc
int3
sbb
fldl2t
nop
push
inc
mov
push
rcl
jno
imul
aam
jp
lea
mov
or
xchg
ret
fst
jbe
or
fst
imul
push
push
fcom
ja
popa
add
aaa
clc
addr16
mov
mov
xchg
cmp
add
add
das
rol
into
(bad)
cli
loopne
or
inc
fnstcw
es
(bad)
push
js
je
mov
or
cmp
ret
movs
mov
cmp
jmp
pop
and
pop
cld
jge
jo
mov
sahf
mov
inc
mov
mov
jb
xchg
jmp
movaps
push
(bad)
jmp
enter
idiv
adc
sub
(bad)
sub
test
out
nop
rcl
jns
fxch
cmp
gs
mov
push
mov
adc
xchg
inc
pushf
in
xchg
lea
pop
loop
int3
leave
ja
scas
sub
push
jg
test
test
and
jecxz
jae
sar
es
pop
inc
jbe
sbb
addr16
sbb
mov
mov
mov
ret
imul
aad
push
inc
popf
outs
xchg
mov
jg
xchg
inc
outs
shl
jmp
ret
push
or
sub
sbb
jmp
out
test
test
cmp
inc
pop
add
cli
in
push
adc
add
(bad)
fmul
inc
sti
xchg
std
xor
sub
icebp
pop
xchg
dec
and
jle
mov
xor
sub
cld
jg
push
fldenv
pop
xchg
adc
ja
jmp
xor
cmps
js
jnp
fld
popa
mov
xchg
sbb
pop
sub
xchg
sub
add
and
addr16
xchg
adc
push
sub
cmp
(bad)
or
ret
xor
cmp
cmps
pop
adc
mov
lea
jo
imul
push
std
ror
fnstenv
dec
aaa
mov
out
cmp
fcom
cmp
adc
das
test
(bad)
mov
pop
jmp
pop
rcr
pop
mov
ret
out
push
fidiv
scas
xchg
imul
sub
loope
mov
cdq
push
jns
sbb
add
(bad)
push
mov
mov
dec
xchg
in
fs
adc
shl
jge
push
inc
inc
shl
cmps
lods
xlat
ss
xor
daa
xor
sbb
xor
mov
mov
adc
or
fcmovnb
clc
push
dec
sahf
nop
fstp
js
dec
setbe
stc
jbe
jne
pop
adc
fadd
nop
mov
in
addr16
movs
and
in
int3
inc
loop
cdq
or
in
push
or
test
push
jmp
dec
fadd
fild
js
inc
test
xchg
mov
out
and
jae
nop
arpl
inc
adc
inc
xchg
jge
jp
and
mov
stc
cmps
jmp
outs
inc
stc
pop
add
ja
xchg
sub
cmp
push
ret
ja
pop
cld
(bad)
adc
mov
sub
ss
and
xor
(bad)
dec
xor
xor
ret
arpl
fsubr
jns
std
mov
mov
pop
stc
dec
enter
mov
push
and
sbb
addr16
pushf
(bad)
fst
stos
jb
scas
ins
out
rcr
and
dec
cmp
lods
sahf
test
jp
sbb
icebp
adc
mov
cdq
and
iret
call
fcomp
test
popf
mov
inc
(bad)
mul
mov
jmp
mov
jle
and
inc
xchg
xchg
inc
in
(bad)
mov
int
fs
fmul
(bad)
fbstp
pop
hlt
mov
mov
mov
loop
add
xchg
pusha
fist
mov
in
push
push
inc
jns
or
addr16
add
sub
(bad)
mov
sub
aaa
jecxz
out
jmp
iret
les
sub
stos
test
cmp
rcr
cmps
ins
xchg
add
adc
push
push
sar
fsubrp
inc
push
test
inc
rcl
(bad)
fisttp
mov
and
or
fs
stos
stc
loope
popa
mov
dec
cmps
cli
out
mov
(bad)
sub
pushf
or
sbb
retf
(bad)
(bad)
pop
iret
inc
mov
enter
sub
(bad)
loop
jecxz
push
xchg
adc
sti
xchg
xchg
inc
call
call
mov
test
imul
outs
mov
and
loope
inc
ror
push
sar
stos
push
or
push
out
inc
mov
inc
aaa
mov
xchg
add
mov
cmc
call
lods
xor
xchg
mov
aam
aas
pop
arpl
retf
test
pop
aas
and
cmp
aad
jbe
in
mov
in
adc
mov
inc
mov
out
fcomip
jp
setbe
bound
jecxz
xor
inc
ja
loope
sbb
fnstcw
ror
imul
movs
mov
or
mov
test
cmp
iret
cmp
inc
adc
imul
or
cmp
cmc
jge
adc
popa
mov
xor
neg
ret
dec
stos
cmp
pop
xchg
sbb
xchg
int
cmp
add
mov
inc
pop
shl
mov
rol
shr
mov
mov
inc
mov
dec
aaa
pusha
push
pushw
push
and
(bad)
fadd
or
add
push
push
jp
aad
push
push
or
mov
scas
mov
out
mov
ja
pop
stos
in
xchg
cmps
mov
(bad)
stc
or
movs
pushf
add
jnp
sub
movs
dec
cmps
or
sbb
fisub
inc
sbb
adc
jmp
sub
xor
push
ret
mov
jno
sub
popa
add
add
xchg
fst
sahf
lds
aad
xchg
loopne
push
sub
ret
std
cwde
sbb
mov
mov
and
xchg
es
xor
jae
jmp
cmp
test
sbb
push
imul
add
xchg
fisttp
out
dec
mov
cmps
push
sbb
(bad)
popf
mov
(bad)
lea
aaa
dec
mov
pop
cmp
xchg
push
and
add
mov
jns
inc
clc
jns
call
aam
fisttp
pop
xor
(bad)
sbb
mov
adc
push
cmp
adc
and
push
push
lods
xchg
sub
sub
jge
imul
cdq
popf
mov
sbb
sbb
(bad)
(bad)
cmp
add
stos
dec
mov
jbe
leave
arpl
mov
pop
xor
sub
or
pop
sub
jmp
mov
outs
adc
sub
or
jl
xor
mov
push
imul
fiadd
push
stc
mov
mov
mov
sub
mov
inc
enter
ins
fisubr
pop
or
ror
add
cmps
imul
pop
xchg
leave
jne
and
(bad)
out
mov
push
mov
sub
jmp
sub
push
cwde
pop
lahf
shl
(bad)
addr16
repz
imul
dec
popa
shl
xchg
sub
inc
pop
retf
adc
and
jg
adc
std
sbb
push
jno
movs
(bad)
fadd
in
mov
push
push
xor
mov
mov
(bad)
sbb
dec
stc
sbb
xchg
mov
and
or
sbb
fsub
rol
mov
mov
inc
adc
movs
mov
cmp
sar
out
sub
js
adc
push
cdq
mov
xor
stos
lods
pop
or
mov
and
add
aaa
repz
push
aad
out
mov
mov
sahf
ja
jno
(bad)
aad
popf
(bad)
inc
sub
pop
test
imul
pop
idiv
test
jmp
dec
cmp
mov
mov
outs
test
(bad)
gs
pop
jno
cld
cmps
test
cmp
shr
imul
inc
clc
cmp
ins
cmps
(bad)
inc
push
je
mov
nop
fs
rol
mov
inc
cmps
xor
sub
pop
das
gs
jl
aaa
xor
ja
pop
jge
push
sar
mov
pusha
icebp
ins
jbe
jp
add
lea
(bad)
pop
and
add
and
clc
push
pusha
jl
mov
add
xchg
test
shl
sub
adc
adc
pop
inc
es
dec
pop
fadd
push
loope
jmp
movs
cmps
sbb
inc
stos
clc
or
inc
adc
gs
test
push
add
shl
cmp
hlt
mov
push
cmp
cdq
inc
add
cmp
int
pop
repz
nop
mov
xchg
adc
cmp
cdq
ja
add
rcr
jl
xchg
pusha
in
push
mov
data16
and
mov
pmuludq
mov
repnz
out
inc
rol
jg
push
pop
mov
enter
shl
inc
or
std
fs
mov
aad
inc
ins
sub
loope
sbb
push
xor
cmp
add
push
imul
aaa
test
dec
rol
test
inc
add
into
sub
add
push
jmp
inc
sti
sbb
js
jbe
sbb
repnz
mov
jbe
add
lock
icebp
pop
jb
call
les
(bad)
imul
sub
jo
mov
jbe
dec
adc
cmp
jno
int3
hlt
(bad)
mov
pop
sbb
fs
addr16
or
mov
jmp
gs
ds
cld
js
push
jo
ret
repnz
add
call
or
jb
jne
iret
popa
ror
pop
into
in
icebp
ja
mov
jp
cmps
(bad)
shl
mov
mov
adc
ret
push
fwait
jns
movs
fidivr
add
out
ds
pop
push
test
sbb
pusha
mov
out
test
int
sub
imul
jl
mov
add
icebp
push
arpl
ins
sbb
mov
bound
pusha
xor
jle
pop
add
cdq
hlt
mov
ficom
jmp
mov
or
xor
mov
push
mov
ja
xor
push
mov
movs
push
sahf
aad
sub
cmps
jg
and
pop
dec
push
mov
leave
dec
jecxz
mov
pop
lds
movs
adc
mov
xchg
dec
shl
and
int
cmp
(bad)
imul
adc
inc
leave
lds
and
js
neg
mov
mov
in
sub
neg
repnz
lahf
push
push
inc
movs
xor
mov
(bad)
aam
(bad)
(bad)
sub
(bad)
mov
add
fsub
adc
mov
test
xor
push
loope
iret
lea
shl
add
pop
(bad)
lods
rcl
aas
xchg
jl
out
add
inc
leave
out
sbb
xchg
jne
(bad)
jb
mov
inc
cmps
add
add
sub
cmps
xor
inc
xchg
ss
pop
push
imul
pop
xchg
and
adc
fs
leave
inc
test
mov
add
(bad)
sbb
push
addr16
xchg
mov
out
enter
fld
or
loopne
jb
faddp
dec
(bad)
xor
and
scas
pop
push
ror
ins
stos
femms
add
pop
dec
adc
mov
stc
(bad)
mov
(bad)
shr
(bad)
clc
test
gs
(bad)
xchg
mov
pop
jg
xchg
pop
bound
in
and
popa
pop
cmc
lahf
jmp
aam
sbb
stos
mov
in
int3
mov
cmp
outs
adc
inc
inc
aam
leave
stos
(bad)
(bad)
mov
(bad)
add
pop
outs
cmps
ret
js
out
enter
dec
push
push
jmp
ror
or
jno
sbb
stc
lods
pop
sub
cwde
sub
call
bound
addr16
inc
adc
and
dec
mov
pushf
fistp
mov
pop
rcl
ins
jb
bound
fwait
fs
stos
cwde
es
leave
cmp
js
mov
dec
in
add
xor
cmp
test
test
xchg
jg
daa
cdq
sbb
data16
repz
add
call
and
aaa
xchg
daa
cwde
loope
sbb
in
push
test
mov
push
hlt
fistp
pop
lahf
or
mov
sahf
inc
in
push
xor
(bad)
dec
enter
pop
push
add
mov
dec
inc
sub
and
mov
and
jne
cdq
jmp
xchg
xor
int3
call
push
test
push
retf
pop
je
pop
push
stc
mov
push
mov
push
xchg
leave
and
cmp
test
shl
ret
xor
push
sbb
je
fisttp
xor
inc
push
xchg
xchg
pop
stc
or
mov
mov
outs
arpl
test
outs
or
aad
cmp
or
fwait
xchg
mov
loop
mov
pop
stc
mov
fisttp
mov
xlat
cmp
and
fsub
adc
cmp
retf
dec
pop
out
sub
or
push
dec
sub
push
sbb
xchg
cmc
mov
aaa
es
push
pushf
jns
and
fwait
ins
rol
cmps
sub
sbb
mov
loope
and
add
bound
mov
jmp
push
out
cmp
shl
cmps
shl
movs
adc
scas
and
mov
dec
inc
mov
cmp
test
addr16
push
cwde
aad
and
or
ja
idiv
push
mov
icebp
mov
imul
lods
icebp
mov
add
(bad)
xor
inc
mov
pop
ret
sub
int
cmps
adc
pop
xor
inc
lds
popa
lahf
stc
pop
mov
aas
fld
mov
dec
int
icebp
(bad)
arpl
ret
int
push
push
mov
push
mov
gs
cmc
(bad)
sub
xlat
and
jecxz
test
mov
xchg
arpl
mov
(bad)
adc
adc
sbb
or
push
mov
iret
cmps
xchg
test
or
in
idiv
xchg
cmp
sbb
and
pop
out
(bad)
in
cld
pop
stos
mov
mov
in
pushf
js
dec
adc
xchg
fild
sub
mov
sub
es
imul
lods
inc
jbe
rol
add
fwait
sub
jecxz
xchg
lods
mov
jle
bound
int
jns
sahf
addr16
mov
adc
pop
inc
ret
cmp
jge
lahf
jnp
inc
in
xchg
test
inc
mov
(bad)
jle
cmp
xchg
js
dec
rol
push
sbb
inc
mov
lahf
sbb
push
test
push
test
cmps
int
cmps
pop
cmp
(bad)
inc
(bad)
(bad)
mov
push
pop
or
mov
push
out
push
sub
xor
ja
pop
imul
sti
cli
mov
das
mov
daa
add
push
dec
clc
or
daa
repnz
daa
inc
imul
gs
ss
scas
repnz
xor
jnp
shl
(bad)
cmp
test
cmp
ja
push
out
mov
add
mov
fnsave
imul
jmp
repnz
daa
pop
xor
pop
push
or
push
fcmove
jmp
xor
fld
out
ds
fadd
outs
pop
push
xchg
ins
div
rol
mov
push
mul
sub
int
mov
fmul
push
enter
mov
(bad)
jmp
or
push
stos
add
mov
mov
sbb
xchg
out
adc
jg
jbe
xor
push
sbb
jbe
jg
addr16
popf
fist
push
cmc
aaa
pusha
fldcw
push
rol
test
cli
mov
mov
jns
jmp
nop
pop
outs
cmp
sbb
fsub
pushf
inc
sbb
push
popa
adc
mov
aam
push
and
add
sahf
and
lock
(bad)
test
cmps
pop
ror
daa
push
jmp
xchg
push
int
cld
in
fisubr
adc
dec
addr16
lds
or
cmps
shr
jb
or
pop
daa
sub
cmp
lods
xor
pop
pusha
pop
or
mov
(bad)
and
jp
pop
hlt
imul
out
mov
ja
mov
dec
jmp
lds
out
mov
sbb
mov
div
gs
ins
xchg
pop
call
adc
(bad)
js
dec
mov
cmp
mov
cs
sub
jns
repz
xchg
lods
cwde
push
add
enter
or
cmp
ret
inc
jbe
movs
mov
shl
adc
call
into
ja
out
inc
mov
or
ds
fdivr
inc
and
repz
mov
(bad)
mov
jg
inc
bound
test
imul
cmps
mov
(bad)
mov
mov
cwde
jmp
push
push
ja
pop
sub
mov
cmc
adc
push
sbb
movs
repz
loop
cmp
loop
pop
pop
push
(bad)
fisttp
xlat
test
pop
inc
js
in
xor
iret
inc
movs
mov
int
clc
loope
cmp
mov
mov
mov
and
pushf
scas
or
sub
test
repnz
and
inc
xor
adc
cld
sbb
enter
push
aas
mov
arpl
imul
clc
push
fidiv
jno
inc
push
xor
mov
std
imul
sbb
out
stc
lock
test
xor
neg
addr16
call
es
enter
out
mov
ficom
dec
mov
or
loopne
mov
jae
dec
mov
cwde
daa
stos
outs
dec
lahf
xor
and
ja
push
and
retf
dec
fwait
lods
test
dec
mov
and
jb
in
ja
sahf
cmp
scas
daa
lds
or
sub
adc
dec
mov
push
test
bound
sar
imul
out
fcom
test
cmps
sbb
xchg
pop
mov
test
push
push
push
sub
mov
not
jae
ret
or
shl
push
mov
jno
mov
mov
xor
push
jmp
ja
adc
pop
jg
xor
mov
sub
aaa
cmp
scas
aad
and
mov
push
aam
and
mov
push
sub
inc
cmps
push
test
fiadd
sub
es
and
sbb
inc
add
push
add
mov
mov
in
js
inc
retf
in
lea
cmp
sbb
inc
aad
mov
movs
cmps
and
and
nop
fs
pop
dec
cwde
jecxz
int3
pop
mov
fwait
rep
vpunpckhwd
sbb
mov
das
push
dec
push
mov
xor
(bad)
xchg
sub
mov
cmp
inc
sub
jbe
rcr
cmps
or
popa
fdivr
jnp
adc
scas
cwde
jl
call
xor
int3
add
cmps
inc
psrlq
in
sahf
aaa
(bad)
pop
sub
or
lds
nop
push
fstp
and
sahf
hlt
test
push
mov
and
sbb
rol
aas
jnp
push
jmp
test
test
push
add
push
popf
pop
push
pop
std
popa
push
neg
cdq
pop
lods
push
adc
and
ss
or
cli
fist
mov
popf
fild
sub
ror
hlt
ja
push
push
imul
aad
cmp
int3
popa
bnd
icebp
push
jbe
or
mov
mov
fidiv
and
ss
jp
xor
fldcw
jle
push
lds
and
fstp
adc
fisubr
dec
or
jmp
sti
pop
ss
mov
fiadd
out
xchg
movs
cmps
add
mov
lds
or
pusha
(bad)
hlt
mov
sub
addr16
sub
jae
pushf
xor
inc
xchg
in
dec
jo
sti
test
pop
push
aas
inc
sub
jmp
out
sbb
test
add
icebp
stc
add
pop
mov
out
das
mov
rcl
shr
mov
aam
xchg
data16
fidiv
pop
lock
or
cdq
scas
push
mov
call
jno
xor
mov
and
add
adc
dec
push
pop
movs
stos
es
mov
jmp
rol
bswap
dec
ror
not
ffreep
scas
stos
mov
ins
data16
cdq
or
pop
push
aaa
mov
(bad)
cli
jne
out
cmp
push
dec
inc
sub
mov
sti
sbb
xlat
retf
jp
mov
xchg
push
ror
jecxz
dec
pop
adc
dec
ret
or
jns
rcl
push
mov
mov
(bad)
in
sub
ja
fstp
dec
movs
sbb
nop
or
addr16
imul
dec
stc
cmp
mov
pop
xor
push
cmc
mov
xor
aas
loopne
mov
mov
lds
push
add
sbb
mov
jg
push
xor
(bad)
aad
pop
pop
jns
ja
cwde
jecxz
leave
sub
stos
movs
popa
xchg
icebp
in
xor
ror
sbb
rol
jecxz
repz
sub
(bad)
(bad)
repnz
mov
push
push
cmp
pop
pop
mov
jle
ss
mov
pop
outs
call
(bad)
movs
add
sub
mov
ret
cmp
dec
inc
xchg
mov
inc
xchg
test
mov
cmp
jnp
es
pop
sub
jns
cmp
mov
(bad)
cli
shr
mov
ret
fmul
pop
call
mov
leave
push
jge
popf
add
loope
cdq
mov
lods
sbb
movs
add
and
aas
into
xor
push
mov
in
xchg
imul
inc
sub
mov
inc
jp
inc
leave
jle
iret
div
add
jle
cmp
repz
(bad)
dec
fnstenv
xchg
jmp
pop
std
test
mov
stos
aaa
rcr
mov
jmp
or
das
out
mov
mov
mov
fmul
cmps
in
adc
pop
xlat
cmps
sbb
imul
enter
push
xchg
push
sub
pop
push
addr16
cmp
test
add
adc
sub
xchg
jmp
lds
pop
cmp
fldcw
adc
aaa
ret
out
mov
(bad)
stc
call
pop
or
cdq
xchg
retf
les
sub
sbb
(bad)
dec
adc
jle
mov
adc
push
sar
or
jnp
jmp
cld
push
popf
movs
xchg
mov
shr
mov
add
sti
inc
cdq
xchg
or
dec
ss
loope
cmp
imul
addr16
jb
jb
jecxz
lahf
pop
mov
xchg
rol
mov
hlt
inc
mov
(bad)
mov
mov
adc
adc
dec
call
pop
sar
ret
ins
xchg
adc
jo
xchg
mov
push
sub
jns
outs
xlat
jp
dec
mov
jns
inc
mov
sti
push
push
lds
xchg
jmp
test
adc
pushf
lock
aaa
aas
retf
bound
dec
das
adc
cmp
mov
leave
cmc
lods
and
fstp
inc
test
cmps
dec
mov
rcl
rol
dec
and
je
(bad)
ja
vphsubbw
icebp
push
sub
fnstenv
mov
stc
pop
es
std
ret
loop
(bad)
std
xlat
add
sub
stc
pop
cmp
aaa
adc
cmp
and
out
cdq
sbb
pop
jbe
push
jg
xor
aaa
mov
dec
sahf
cmps
arpl
cmp
dec
jecxz
rcl
sub
loope
pop
mov
inc
mov
ret
out
xor
rcl
out
push
push
add
sar
int
outs
inc
pop
adc
jae
xor
cmp
loop
mov
xchg
add
jno
sbb
aas
scas
inc
movs
jmp
sbb
mov
jno
js
cs
push
rcl
xchg
xchg
adc
enter
add
mov
dec
jns
mov
retf
sub
push
loopne
xchg
xor
mov
mov
push
daa
popf
and
(bad)
push
fst
test
jmp
xor
cmp
mov
or
inc
and
(bad)
aaa
dec
lahf
mov
xchg
in
mov
xor
push
mov
mov
xor
jbe
xor
inc
dec
cmps
cs
fcom
xor
add
pop
jo
fincstp
mov
pop
outs
shr
or
xchg
mov
hlt
adc
sub
mov
es
xor
in
fs
aad
or
pop
mov
mov
mov
jns
sahf
add
jae
adc
ins
adc
outs
sbb
cmp
mov
inc
cmp
sbb
inc
push
xor
cld
mov
stos
add
add
addr16
mov
push
fisubr
sbb
xchg
pushf
dec
das
sub
sub
cmp
outs
and
retf
(bad)
mov
jge
sbb
in
cmps
xlat
pop
xchg
jg
jae
enter
sbb
add
mov
xchg
pop
sbb
in
cwde
icebp
mov
mov
push
cwde
or
inc
pusha
fld
sbb
mov
jnp
out
pop
xchg
movs
cmc
pop
xlat
cmp
sti
mov
aam
or
mov
cs
movs
aam
out
jl
daa
xchg
dec
in
dec
adc
mov
lods
jecxz
pop
fnstcw
aaa
or
repz
aaa
jb
iret
addr16
mov
pop
clc
xchg
daa
jae
inc
jg
loope
and
pop
adc
out
xor
push
pop
sub
cmp
repnz
pop
dec
ja
and
cmp
js
jge
cmp
or
ret
inc
imul
fild
aas
sub
xor
xchg
rol
ret
shr
pop
rol
mov
out
outs
xchg
inc
in
aaa
jae
addr16
jb
sbb
xor
jb
lahf
outs
add
jo
retf
cmps
mov
dec
cmc
arpl
std
sbb
iret
jno
xor
arpl
sbb
push
(bad)
outs
and
test
pop
add
sub
cmp
mov
out
int3
mov
add
int3
stos
mov
mov
xor
inc
shr
into
xchg
cmp
mul
test
imul
aaa
mov
aam
nop
pop
fsubr
ss
pop
ss
popa
jbe
pinsrw
adc
call
push
mov
repnz
out
push
sbb
sbb
xor
fisubr
jmp
sar
pop
jbe
lds
jmp
sbb
popf
inc
jmp
xlat
pop
movs
aas
out
xchg
dec
cmps
jmp
fcmovnb
push
add
cmps
xor
jbe
mov
sbb
xchg
or
cmp
shr
jle
add
mov
add
out
jae
lods
dec
xor
lahf
xor
pushf
xchg
fnstcw
mov
jo
push
enter
or
xchg
movs
xbegin
ret
lds
pop
xlat
and
jbe
push
jge
popf
xchg
fsub
jmp
(bad)
ins
shl
xchg
mov
mov
sub
mov
add
sub
mov
mov
aad
push
or
into
call
xchg
in
fld
jle
call
sub
and
outs
icebp
imul
mov
cmps
int3
xor
mov
call
es
cwde
inc
dec
shr
pop
and
cmp
pop
adc
xchg
pusha
mov
dec
cdq
push
push
test
dec
cmc
ror
leave
mov
mov
jg
mov
xor
js
hlt
lock
push
mov
sub
push
xchg
inc
ins
pop
inc
sbb
shl
in
je
retf
test
jb
add
push
imul
add
xchg
imul
fdiv
and
in
(bad)
cmp
test
clc
inc
xchg
pop
jbe
outs
sub
sbb
xor
ss
or
test
pop
push
adc
test
sar
in
cmp
clc
pop
out
sub
mov
xchg
dec
daa
mov
scas
jno
mov
and
xchg
dec
sti
test
ins
jbe
loop
sub
call
jne
mov
es
cdq
out
fcmovnbe
sub
dec
daa
mov
aam
imul
mov
cwde
and
mov
xchg
(bad)
iret
sbb
push
or
mov
mov
mov
jns
xchg
cli
xor
sbb
inc
addr16
inc
fwait
out
outs
test
pop
in
ficomp
into
dec
xlat
loope
mov
sbb
fwait
pop
aaa
jecxz
ja
movs
(bad)
push
dec
inc
mov
icebp
jne
mov
and
not
icebp
add
aam
clc
xchg
imul
xlat
dec
inc
jmp
xchg
inc
or
cld
or
fadd
sar
shl
mul
push
dec
lods
(bad)
xor
shl
(bad)
lods
cvttps2pi
(bad)
idiv
call
or
jbe
aad
add
cmp
pop
cld
cmps
test
enter
add
add
jae
lahf
dec
(bad)
call
or
mov
or
sub
pop
and
imul
ret
scas
popf
aaa
ret
sbb
sbb
fldl2t
outs
mov
jge
sub
rol
mov
mov
push
lods
xor
hlt
add
pop
jns
fnstenv
sbb
dec
leave
inc
daa
lods
inc
imul
sbb
inc
(bad)
push
adc
inc
add
data16
pop
inc
cmp
js
pop
cmp
jbe
add
cmp
movs
pmulhw
push
or
jns
mov
sbb
mov
inc
cmp
mov
push
sbb
neg
repz
push
adc
dec
(bad)
in
out
sti
imul
inc
xor
jp
jo
lods
or
pop
in
push
jge
daa
or
mov
in
in
sbb
cli
loop
test
outs
jmp
or
cmps
jmp
out
xor
cli
xchg
or
and
jl
push
(bad)
daa
out
popa
pop
fimul
cld
mov
cmp
imul
adc
cmp
pop
xor
mov
mov
xor
inc
mov
ss
loop
pop
mov
pop
push
out
out
lock
fisubr
add
jne
aas
mov
rcl
cmp
lods
cmps
ins
xor
pop
jmp
repz
sbb
stos
cs
dec
xchg
retf
jns
leave
mov
xchg
push
mov
aaa
in
(bad)
aas
fwait
inc
leave
in
pop
xor
push
adc
jns
and
in
(bad)
bound
ins
mov
fld
inc
pop
js
icebp
je
fdiv
out
mov
inc
mov
cmps
repz
dec
pop
sbb
lock
call
stos
(bad)
pop
test
clc
stos
mov
test
inc
sbb
test
ss
popa
movs
jno
pop
lahf
fs
mov
lods
jnp
jg
sub
dec
lds
adc
mov
pop
(bad)
div
add
sbb
cmp
pop
sbb
cld
bound
fadd
mov
cmp
mov
sbb
pop
jne
fs
mov
adc
pop
movs
pop
jo
aaa
mov
push
sbb
mov
repz
dec
cld
mov
cdq
aaa
xchg
je
call
ret
pop
sbb
icebp
sbb
jb
add
mov
mov
sbb
mov
xchg
jecxz
in
in
pop
inc
lods
jnp
add
js
jo
hlt
and
loope
add
out
ret
test
js
pop
pop
inc
daa
pop
cs
inc
in
jb
jne
push
xchg
dec
push
xchg
cld
neg
inc
loope
add
clc
add
aas
(bad)
shl
nop
cmp
stos
sbb
dec
fs
fpatan
int3
pop
cmp
in
ret
ins
test
out
push
fwait
aas
inc
(bad)
mov
inc
sub
push
or
retf
sbb
aas
daa
or
test
jle
inc
or
inc
mov
(bad)
or
pop
add
push
sub
jmp
sub
shr
pop
imul
jmp
div
loope
imul
stos
pop
iret
inc
adc
xchg
scas
(bad)
xlat
sub
adc
mov
xchg
(bad)
movs
ins
mov
iret
pop
mov
xchg
lods
jp
jae
jp
jg
lock
cmp
test
pop
pop
gs
pop
fiadd
push
popa
mov
sti
out
sub
push
imul
dec
jge
mul
das
and
fs
call
inc
sub
cli
mov
and
mov
jbe
ret
ds
pop
js
imul
lea
push
test
retf
dec
leave
(bad)
psubsw
movs
xor
int
push
sub
dec
arpl
xor
jno
movs
(bad)
ds
ss
imul
cmp
pushf
mov
dec
iret
dec
mov
dec
test
or
jne
xor
test
mov
in
and
pop
mov
popa
std
mov
adc
int3
rcl
mov
scas
shr
les
inc
push
push
das
(bad)
leave
fsubrp
retf
out
ins
loop
mov
mov
pop
mov
push
call
and
sbb
mov
push
sbb
sub
sar
lea
add
retf
(bad)
repz
addr16
or
cmc
sub
pop
out
fld
add
push
sub
jecxz
xchg
cmps
xlat
cs
xchg
mov
leave
pop
gs
pop
xor
adc
mov
fldenv
es
ror
adc
test
push
(bad)
push
mov
or
aas
inc
xchg
pop
dec
cli
pop
lds
mov
pop
packuswb
shr
cmp
mov
dec
mov
daa
xlat
jns
pusha
scas
mov
stc
(bad)
enter
xchg
int3
xchg
jp
bound
mul
nop
leave
and
xor
sub
jae
das
push
pop
or
add
cmp
aam
jmp
or
mov
cmp
push
cmc
pop
mov
ret
xor
push
mov
cmc
jle
or
push
dec
dec
mov
out
push
pop
jo
movs
cmp
and
imul
and
mov
loop
dec
xor
aam
lock
sti
pop
sbb
push
dec
sub
fild
das
ss
fisubr
scas
push
in
jmp
cmp
and
jnp
cmp
sub
sub
gs
dec
cmp
push
(bad)
pop
jg
out
outs
jmp
xchg
loope
idiv
xchg
outs
fadd
aaa
fmul
jp
xor
jp
test
pop
mov
pop
mov
shr
vandnps
ss
dec
(bad)
addr16
sbb
cmp
jne
mov
mov
mov
nop
pop
jmp
mov
adc
mov
lods
jae
out
cmps
in
mov
and
cmp
jnp
movs
in
js
add
sahf
aaa
sub
es
je
lahf
(bad)
iret
outs
cmp
pop
(bad)
jmp
cmp
call
or
dec
dec
cdq
or
mov
xor
sub
or
fwait
pop
in
dec
pushf
mov
(bad)
and
cmc
pushf
sbb
int
fidiv
push
sbb
in
xor
dec
call
imul
xchg
or
(bad)
dec
sbb
push
cmc
es
xchg
imul
mov
sub
lods
leave
push
int3
js
bound
sub
or
and
data16
xchg
(bad)
(bad)
jle
es
sub
sbb
stos
cli
sahf
sub
mov
loop
(bad)
push
pmulhw
cmps
icebp
aaa
sahf
dec
jb
jge
pop
push
dec
daa
jnp
sbb
sbb
and
ret
maskmovq
(bad)
xlat
js
pop
mov
js
test
movs
js
or
call
je
repz
or
cmp
sbb
mov
mov
cmp
int
and
xchg
push
xor
cld
push
div
jecxz
sub
and
xchg
and
lock
daa
test
adc
mov
ret
or
ja
shl
pop
sbb
scas
xchg
lods
push
mov
dec
xor
mov
(bad)
(bad)
cmp
out
lock
rcl
push
data16
and
aad
or
mov
sub
inc
cmps
inc
sbb
xor
or
sbb
inc
adc
and
std
ja
stos
movs
test
out
jne
add
add
lahf
push
mov
loope
aad
xchg
das
(bad)
fiadd
xchg
fld
push
mov
cmp
aad
movs
add
pop
lods
or
or
xor
adc
or
cwde
(bad)
cmp
nop
xor
dec
popa
xchg
jno
rol
jbe
mov
sbb
ja
inc
cmp
clc
pop
movs
sbb
repnz
sahf
push
dec
(bad)
xchg
xor
aaa
fild
adc
push
rcl
addr16
test
imul
enter
(bad)
mov
ror
mov
leave
adc
cmps
mov
cdq
dec
out
neg
stos
dec
lea
xchg
fcomp
ret
test
xchg
push
sub
sub
xchg
imul
aad
mov
popf
pop
dec
pop
jno
neg
int
js
ins
aas
leave
xchg
jne
push
repz
fnstsw
fs
jmp
popa
pop
or
pop
adc
les
xor
scas
(bad)
test
pop
pop
and
repz
sub
clc
lds
mov
cmp
pop
icebp
lock
(bad)
xchg
jecxz
mov
ror
jns
jmp
es
aad
mov
(bad)
pop
inc
mov
push
adc
(bad)
dec
(bad)
fxch
leave
ins
jp
stos
or
xchg
je
dec
pop
in
push
xchg
cmp
or
fimul
sbb
(bad)
ins
stc
add
sbb
xchg
cmp
pop
leave
cli
pop
sbb
sub
mov
test
jg
mov
jns
mov
dec
not
dec
add
jne
rol
mov
mov
jb
or
fld
add
sbb
or
mov
(bad)
loopne
pop
std
arpl
imul
mov
daa
outs
and
jns
sub
inc
mov
cdq
push
cld
cmp
inc
sub
mov
mov
ins
lds
mov
mov
adc
push
inc
add
sbb
add
mov
mov
xchg
inc
jge
fist
enter
push
xchg
cmp
adc
ret
xchg
cmp
add
sub
cmp
enter
cmp
xchg
call
test
int
xchg
adc
fdivrp
xchg
adc
sbb
xor
mov
lods
stos
jmp
mov
pusha
mov
ja
mov
clc
test
dec
push
xchg
cmp
das
add
jne
jge
xor
mov
rcr
cs
and
mov
shr
imul
push
ins
jbe
ret
xor
inc
sub
jmp
inc
stos
sub
inc
imul
fsubr
pop
ja
imul
or
jnp
in
cld
sbb
mov
xchg
inc
xor
test
or
mov
inc
aad
(bad)
jge
mov
adc
or
(bad)
loop
ret
aaa
out
mov
sub
gs
test
out
sbb
jnp
inc
ins
xor
mov
aam
enter
jne
adc
and
out
sub
call
icebp
daa
(bad)
in
(bad)
sbb
and
mov
xor
jae
adc
sub
pop
imul
add
adc
xchg
lahf
outs
xchg
xchg
js
xchg
and
je
shl
dec
pop
bnd
cmps
cdq
mov
shr
pop
repz
std
jl
add
jbe
out
(bad)
icebp
pop
mov
data16
lea
mov
retf
jg
cdq
xchg
stos
add
adc
fdivr
jg
lods
cdq
cmp
fs
popa
fdiv
xlat
pushf
stos
dec
push
icebp
jb
cmps
cdq
mov
clc
std
xchg
pop
out
xchg
xor
sahf
repnz
lfs
ja
xor
enter
sub
loop
idiv
sahf
sbb
inc
inc
test
stc
push
dec
xchg
aam
ja
imul
sbb
push
add
xchg
movs
ds
mov
adc
lock
stc
adc
lahf
sbb
pop
and
push
jecxz
outs
call
(bad)
sub
bound
pop
in
xor
fdivr
push
cmp
imul
imul
add
pop
and
cmp
outs
sub
sar
xor
cmp
test
push
xchg
leave
in
cmps
push
sahf
cmp
push
and
add
mov
stc
cmps
fdivr
push
icebp
xchg
mov
cmc
mov
jo
mov
clc
rcr
or
lods
cdq
inc
test
mov
movs
mov
aad
jl
mov
js
add
sub
or
nop
ja
stos
or
sbb
mov
hlt
arpl
fsub
ins
adc
(bad)
cmps
pop
lahf
call
mov
push
fild
inc
or
das
dec
sub
sahf
cld
ins
ret
mov
fdivr
and
and
cmps
sub
fbstp
arpl
jmp
das
pop
pop
mov
outs
xor
iret
cdq
repz
(bad)
mov
jle
imul
mov
loopne
jmp
dec
pusha
xor
ss
ret
inc
mov
mov
fild
ret
sub
scas
xchg
pop
aaa
push
mov
cli
ret
push
outs
cdq
aaa
cdq
aaa
movs
addr16
ja
pop
cli
(bad)
mov
sbb
out
add
test
mov
sbb
ds
and
push
(bad)
pop
xchg
into
pop
(bad)
adc
push
enter
pop
inc
movs
(bad)
sub
dec
sub
mov
imul
cmc
mov
adc
das
xchg
fisttp
xchg
ds
pop
mov
cmp
push
adc
mov
paddsw
or
es
pushf
sbb
mov
mov
(bad)
retf
test
lahf
mov
adc
xor
jmp
out
dec
int3
push
sbb
lea
push
sub
dec
(bad)
dec
in
aaa
retf
jae
sti
jae
or
sbb
mov
loope
push
push
dec
aad
inc
or
xor
xor
and
(bad)
sub
cmp
xchg
call
pop
xor
dec
lock
sar
push
bound
push
xchg
daa
inc
mov
mov
out
cdq
dec
cdq
jbe
pop
je
mov
dec
shr
je
inc
sbb
int
fwait
enter
sub
aas
xchg
je
ss
xchg
movs
xor
cmps
mov
ja
push
xchg
retf
dec
mov
or
mov
neg
jbe
test
daa
jb
(bad)
sub
jmp
mov
adc
mov
rol
cmps
test
pop
stc
aas
dec
push
add
push
loope
pop
cwde
adc
pop
push
pop
shl
aaa
pop
ss
loop
jae
mov
repnz
loope
test
pop
mov
xchg
pushf
fld
out
adc
mov
cmps
retf
xchg
adc
cmp
or
dec
cdq
dec
xchg
jo
mov
mov
jmp
mov
mov
shl
push
ret
pop
mov
clc
addr16
adc
into
pop
xchg
hlt
pushf
sub
push
xor
pop
adc
jnp
sub
int
push
pop
rol
lea
mov
cmp
test
xchg
in
pop
xor
fld
(bad)
push
inc
cmp
or
cmp
pop
xor
dec
pop
pop
xchg
test
adc
into
xchg
outs
sbb
outs
inc
in
mul
jmp
push
dec
shl
sbb
ds
xchg
sub
hlt
mov
cmp
fimul
mov
jecxz
and
shl
mov
cmp
data16
mov
imul
mov
mov
punpckhdq
dec
or
imul
sub
mov
cmps
push
cmpxchg
inc
retf
movs
jp
cmp
lea
fwait
gs
dec
sti
jo
test
mov
les
lea
movs
out
xor
fstp
in
popf
into
and
xchg
push
cmp
(bad)
retf
hlt
lds
shl
sahf
cmp
je
jns
mov
sub
xchg
mov
sub
out
pop
sub
mov
or
std
stos
push
cmps
inc
int3
inc
leave
lock
ins
dec
(bad)
xchg
pop
jmp
cmp
es
sahf
xchg
pusha
ror
in
(bad)
pop
lea
push
aad
pop
and
jo
not
(bad)
mov
cwde
push
adc
sbb
sbb
cld
loopne
xchg
cmp
xchg
out
(bad)
jns
push
mov
mov
enter
aam
dec
nop
inc
loopne
mov
mov
dec
and
xor
out
xor
dec
imul
or
fcos
enter
loop
or
call
fwait
mov
cld
add
test
sub
cmp
push
xchg
inc
test
adc
fxch
mov
mov
js
xchg
adc
xor
cmps
xor
lods
mov
mov
sbb
movs
lea
sbb
out
popa
aam
mov
and
cmp
sub
and
push
mov
xlat
in
push
jb
scas
mov
jns
add
push
mov
fidiv
xor
fdiv
scas
push
daa
sub
lock
in
aas
push
cmps
pushf
jmp
jo
leave
jmp
mov
lods
xor
xlat
dec
push
imul
mov
xor
adc
sti
xchg
xor
pop
jns
(bad)
or
pop
daa
xchg
data16
jge
aad
rcl
adc
(bad)
xor
xor
and
push
jbe
hlt
outs
sti
push
adc
add
cmp
xchg
pop
lahf
mov
mov
cdq
mov
xlat
mov
jb
cdq
test
adc
scas
test
scas
cmp
sub
sub
push
fnstenv
dec
dec
xchg
js
mov
jb
dec
sub
pop
pop
push
(bad)
test
mov
test
inc
cmps
mov
test
es
jbe
sub
pop
jmp
lds
sub
lds
mov
and
fisttp
loopne
dec
(bad)
imul
mov
scas
shl
enter
xchg
imul
adc
stos
je
fsub
push
cmp
inc
shl
pop
out
xchg
cmps
cs
fdiv
add
sbb
cmp
or
cdq
sbb
inc
(bad)
jnp
add
ss
cli
out
push
outs
(bad)
jmp
dec
pop
shr
adc
jmp
inc
aam
mov
aaa
dec
adc
sti
xor
arpl
gs
jae
jbe
mov
sub
push
xchg
jne
js
jns
pushf
pop
test
mov
dec
js
cdq
sbb
call
call
fstp
adc
movs
or
dec
jbe
pop
sub
inc
xchg
cmp
bound
mov
mov
(bad)
push
pop
leave
xchg
bound
add
cmpxchg
lds
jno
pop
and
mul
or
icebp
mov
call
(bad)
outs
lods
sub
xor
jne
sub
sub
push
or
jno
cmps
(bad)
sbb
lods
push
mov
jb
out
xchg
mov
sbb
out
inc
fistp
jne
inc
scas
(bad)
test
jmp
xchg
es
imul
xor
adc
add
jbe
pop
jmp
inc
inc
ficom
cmp
push
lahf
mov
or
test
clc
cmps
dec
aaa
xlat
stos
mov
loope
ret
pop
adc
adc
sub
jns
dec
idiv
in
push
(bad)
jg
mov
push
jae
sbb
inc
out
out
clc
jecxz
add
dec
in
cmp
dec
mov
push
mov
add
xor
add
jmp
es
push
ss
cmp
out
xchg
jmp
fisttp
(bad)
imul
es
jb
rol
jbe
mov
xchg
and
pop
sbb
dec
std
cmc
dec
inc
sbb
mov
adc
test
push
pop
xchg
jae
ins
jg
cmps
sbb
cmp
clc
mov
pop
test
rcr
loopne
repnz
imul
push
mov
test
dec
pop
add
add
imul
popf
add
inc
or
mov
js
nop
scas
(bad)
cmc
das
cmp
cdq
fild
cdq
mov
pop
jmp
xor
mov
(bad)
jne
ja
fcom
or
fnstsw
jns
dec
add
mov
mov
mov
repz
inc
inc
test
test
push
mov
hlt
popa
aam
retf
into
sbb
mov
push
not
imul
mov
xchg
pop
int3
arpl
lea
nop
jmp
mov
jbe
lock
call
add
xor
fldenv
clc
cmps
call
jg
ja
stos
sbb
xchg
push
push
outs
or
pop
cmp
jmp
stos
es
in
stc
lods
sub
inc
jmp
cs
imul
int
pop
xchg
ficom
test
sbb
sbb
sub
pop
pop
ror
shl
cmps
bnd
mov
test
jmp
xchg
xchg
cwde
mov
lahf
cs
imul
sub
ss
shr
out
xor
push
hlt
and
mov
cmp
push
loope
jmp
xchg
imul
fdecstp
leave
mov
push
pop
mov
bound
je
xor
nop
fcomp
(bad)
clc
sbb
test
jnp
jl
mov
adc
pop
aaa
jge
aad
dec
mov
(bad)
pusha
cmps
cs
xor
mov
jne
jmp
jle
addr16
sbb
add
cmp
xchg
push
sbb
arpl
in
push
mov
and
push
test
inc
or
data16
xchg
je
add
cmps
cmp
pop
leave
or
sub
mov
jo
pop
or
inc
dec
aas
push
adc
test
inc
movs
and
ds
ins
pop
sbb
test
push
test
jns
cwde
inc
cmc
mov
dec
or
iret
mov
mov
cmp
mov
xor
pop
ficom
inc
jp
and
cmp
fistp
dec
jmp
imul
aam
ret
jb
jns
xchg
fadd
repnz
loope
xchg
push
add
daa
pop
lock
pushf
cmp
imul
stc
test
add
inc
pop
cmps
mov
clc
icebp
fs
mov
jnp
sti
outs
push
popa
pusha
xchg
mov
js
sbb
aas
sub
sub
loop
pop
call
ja
mov
push
mov
sbb
leave
push
dec
adc
aaa
enter
std
push
sub
ss
cld
rcr
ss
mov
cmc
push
(bad)
in
cmp
xchg
sub
mov
retf
jp
xlat
nop
mov
in
add
add
and
dec
loope
pop
pop
test
mov
(bad)
je
xchg
repz
lds
push
(bad)
dec
mov
xchg
jg
dec
mov
ret
add
sbb
neg
sub
sbb
lds
jl
fmul
out
or
cmp
mov
cmp
cmp
inc
sbb
stc
inc
ins
xchg
and
sti
std
inc
(bad)
cld
retf
mov
pop
repz
and
ret
inc
lods
dec
jecxz
cmps
loope
push
pop
pop
add
fcom
cwde
lds
stc
mov
cs
shr
push
out
outs
sub
(bad)
out
retf
retf
test
mov
shl
in
sbb
or
push
clc
adc
adc
jg
fnsave
jno
push
mov
js
pusha
mov
mov
cmps
or
and
pop
test
cmp
push
push
lods
cld
icebp
push
dec
jo
imul
xchg
(bad)
and
outs
mov
movs
add
sbb
or
(bad)
sub
add
dec
adc
fimul
pop
push
mov
xchg
sbb
or
cmp
(bad)
out
jb
jae
pop
sub
jbe
xchg
dec
push
clc
test
fyl2xp1
lock
repnz
aad
xchg
pop
and
xchg
push
enter
in
icebp
scas
jg
aas
sbb
lods
(bad)
mov
cmp
pop
and
int3
ret
rcl
std
js
out
push
in
inc
data16
(bad)
stc
stc
imul
adc
mov
cmp
cmps
push
jbe
dec
dec
jbe
xlat
cmp
sub
loope
inc
outs
mov
cmps
pop
enterw
jns
mov
mov
loope
fwait
jnp
pop
inc
out
dec
sub
xchg
rol
jl
ror
in
pop
mov
out
mov
test
or
cmp
aam
(bad)
daa
test
cdq
stc
jmp
retf
adc
or
jmp
dec
pusha
cwde
lea
mov
test
int
xor
push
or
inc
and
in
jns
fnstcw
fild
dec
pop
test
ins
out
(bad)
mov
mov
xor
cli
mov
push
jecxz
loopne
dec
add
ja
and
test
jae
push
loopne
(bad)
in
retf
inc
sbb
jecxz
fild
sbb
pop
hlt
lahf
jb
stc
fmul
xchg
and
mov
adc
mov
sets
jmp
aaa
in
sub
jbe
aaa
xor
jns
out
in
daa
popf
ss
mov
inc
mov
or
inc
cs
sar
out
jns
sbb
xor
cmp
aaa
sbb
fs
jae
pop
mov
or
aam
fwait
or
call
xchg
add
dec
sbb
add
fnsave
sbb
and
das
sub
les
mov
movs
fldcw
fimul
pop
call
call
pop
cmp
(bad)
dec
mov
xchg
inc
xchg
lahf
movs
mov
mov
xchg
sub
jb
adc
addr16
div
or
push
mov
rcr
mov
cwde
mov
jnp
adc
jle
dec
mov
mov
and
inc
cmp
jg
movs
aad
lahf
jno
mov
ret
inc
jmp
and
ins
and
add
mov
in
mov
daa
xor
sub
shl
sbb
(bad)
ss
xchg
sbb
dec
dec
sbb
xor
sbb
or
call
and
or
push
cmp
add
pop
dec
test
int
fs
leave
mov
cwde
mov
sub
ins
mov
inc
or
call
inc
jbe
outs
ret
daa
sub
retf
lea
stos
in
hlt
push
pop
rcr
mov
imul
mov
fwait
add
cs
repnz
mov
addr16
xor
add
add
xor
mov
push
mov
and
sti
xlat
push
shl
pop
inc
(bad)
cmp
sub
enter
aam
imul
popa
shl
popa
dec
ror
jne
addr16
dec
sub
test
jl
push
cdq
std
into
test
lods
jns
or
(bad)
mov
lahf
lods
lock
add
and
int3
push
std
sbb
sub
sbb
push
not
mov
pop
fnstenv
sbb
std
out
sqrtps
repnz
mov
ret
js
sti
mov
mov
shl
pop
(bad)
mov
jmp
call
bound
std
xchg
cld
push
jns
add
xor
pop
or
adc
rcl
sub
sub
arpl
cmps
xchg
mov
mov
cld
cmp
dec
inc
jmp
jb
in
xor
pop
cmp
daa
mov
das
std
fucomip
inc
inc
pop
clc
inc
fwait
repnz
and
or
mov
add
jns
sbb
sbb
push
xchg
inc
frstor
adc
fnstenv
mov
loope
loope
je
push
jo
inc
daa
retf
xchg
sbb
push
fcmovne
jl
repz
stc
pop
loop
ja
sub
neg
iret
cs
pop
in
je
pop
mov
push
pop
out
aam
mov
addr16
lds
mov
mov
(bad)
adc
inc
jg
retf
mov
(bad)
in
adc
das
sahf
pushf
lahf
pop
xchg
jns
mov
(bad)
jns
imul
jns
add
and
or
movs
add
add
adc
into
jle
cs
mov
mov
bound
outs
imul
popf
pop
add
js
(bad)
jg
push
js
inc
test
adc
arpl
mov
aad
fistp
test
enter
call
jp
xchg
dec
mov
(bad)
cmp
xor
jb
or
jmp
ja
div
push
inc
stos
aaa
popa
dec
jae
mov
out
inc
mov
jne
movs
scas
push
adc
add
pop
pop
shl
mov
dec
or
pop
xchg
or
stc
jmp
dec
in
mov
push
inc
shl
jbe
fdiv
add
xchg
xchg
fimul
retf
mov
popa
in
sub
push
jnp
sbb
mov
ja
add
arpl
sub
push
sar
iret
cwde
mov
ror
jecxz
repz
lock
(bad)
mov
daa
in
retf
rcr
scas
mov
hlt
jmp
cmc
jo
das
aam
lods
mov
push
jno
rol
sub
imul
dec
xchg
fcmovb
ins
shr
xchg
mov
or
out
inc
gs
xchg
push
push
fadd
jnp
(bad)
mul
jns
jns
sbb
push
sbb
fnstcw
outs
mov
cld
mov
mov
xchg
iret
push
mov
inc
mov
xchg
pop
sub
jecxz
mov
or
pop
and
rcr
dec
scas
inc
cdq
(bad)
call
add
pop
loope
(bad)
shr
popa
jle
test
xor
fst
dec
add
xchg
loopne
mov
jae
movs
dec
jo
(bad)
dec
dec
ins
sbb
push
stc
sub
les
mov
xchg
mov
jge
enter
shl
pop
clc
cdq
in
mov
jge
neg
aam
dec
leave
mov
xchg
sub
cmp
mov
lea
aas
lahf
lods
or
imul
add
jb
imul
xchg
or
sub
stc
adc
in
push
out
xor
retf
fst
mov
cmp
inc
xchg
pop
push
mov
sub
nop
push
data16
lods
sbb
aaa
iret
arpl
(bad)
sbb
or
sub
es
pop
lahf
movs
mov
(bad)
fisttp
rcl
ror
popa
push
ror
xor
outs
cmc
xchg
movs
xor
out
jno
int3
jns
into
or
dec
aaa
test
pop
(bad)
sbb
mov
xor
gs
test
imul
jae
mov
inc
jo
imul
shl
jmp
retf
gs
dec
xor
es
fldz
mov
fstp
mov
pop
mov
mov
popf
add
popf
and
xchg
adc
xor
and
mov
sbb
lods
(bad)
xor
sbb
out
adc
sbb
(bad)
adc
jl
jo
test
cld
pop
std
inc
stc
cli
popa
sub
lds
cmp
call
nop
cmc
lea
gs
psllw
mov
jmp
sub
ja
mov
mov
sub
aaa
pop
or
inc
mov
lds
lea
jns
or
push
mov
push
cmp
mov
jns
test
scas
arpl
test
dec
xlat
sbb
shr
imul
push
jl
mov
mov
xchg
mov
mov
(bad)
xor
ins
push
cmps
jne
sbb
xchg
pop
fld
(bad)
mov
mov
mov
cmp
aad
xor
lods
stc
adc
repz
jne
adc
call
adc
fisttp
ds
iret
jmp
jle
xor
mov
add
xor
sbb
jge
out
xchg
pop
mov
sub
(bad)
loope
pop
or
xchg
jae
inc
mov
sbb
jae
popa
lods
pop
hlt
mov
xor
test
mov
in
mov
pop
xor
dec
adc
xor
jae
mov
sahf
jl
cmp
pop
imul
adc
or
pop
cdq
mov
cmp
cmps
xchg
cmc
in
push
and
in
cmp
loope
inc
cdq
dec
aad
jmp
dec
pop
fistp
add
add
in
push
push
addr16
(bad)
adc
adc
and
ja
xchg
sbb
mov
inc
adc
mov
inc
xlat
sub
jne
push
in
dec
pop
mov
jns
xchg
push
repz
out
cmp
sbb
dec
and
push
iret
shl
inc
adc
fdivp
daa
into
ja
ret
cmp
or
or
add
xchg
arpl
jne
sub
imul
loopne
sahf
repnz
sysret
and
pop
and
call
(bad)
sbb
leave
cmpxchg
es
aaa
dec
lock
(bad)
and
adc
call
cli
addr16
mov
scas
sbb
add
addr16
lds
sbb
cmps
icebp
data16
lds
push
leave
jecxz
retf
adc
sub
sbb
mov
mov
ss
and
and
add
nop
sub
cmps
cmp
inc
fmul
in
fdivr
hlt
loope
cwde
pop
fnsave
sbb
je
out
lahf
push
aad
movs
lea
adc
push
pop
jmp
out
adc
pop
addr16
mov
cs
sahf
inc
lods
dec
in
mov
jne
cld
icebp
sbb
shl
sub
gs
repz
daa
dec
jbe
mov
or
cdq
mov
push
loope
retf
cs
dec
cmc
sbb
frstor
xor
test
outs
mov
rcl
inc
sub
ds
cmp
sub
xlat
fbstp
xchg
mov
and
or
mov
push
xlat
fcmovnb
push
and
ins
pop
stos
and
adc
push
xchg
mov
pop
pop
cmps
in
dec
xchg
sysexit
xor
mov
into
out
jns
test
movs
ficom
cmc
pop
mov
test
ins
ja
add
mov
cmp
outs
test
call
shr
xlat
cli
cdq
xchg
pop
push
xor
int3
inc
clc
sar
push
in
push
push
sub
and
jg
or
cmp
in
icebp
in
inc
push
xchg
scas
jmp
mov
inc
xor
stc
mov
jmp
cmp
sets
jbe
and
neg
sub
out
into
fwait
pop
push
ins
cli
sub
dec
xchg
(bad)
mov
adc
jae
retf
dec
adc
push
repz
addr16
stc
icebp
add
mov
mov
inc
clc
pop
imul
xchg
ud2
xor
pop
mov
call
inc
js
jnp
jb
pop
dec
dec
in
and
pushf
iret
mov
dec
in
call
mov
xchg
idiv
fnstsw
cmovae
jmp
jp
add
inc
pop
pop
cs
sub
and
pop
ss
mov
imul
pop
mov
hlt
(bad)
pop
test
mov
ucomiss
aam
push
cwde
pop
mov
inc
clc
cmp
popf
mov
dec
xchg
pop
mov
daa
jbe
popa
inc
pushf
sbb
loop
fadd
push
push
jmp
pop
sahf
jg
mov
sub
sub
in
add
and
(bad)
(bad)
jg
dec
ss
daa
aas
or
jmp
imul
mov
add
pop
mov
mov
push
fdiv
jo
inc
movs
or
aas
inc
addr16
imul
data16
xchg
scas
pop
mov
shl
and
or
aam
movs
dec
out
mov
adc
mov
ins
adc
hlt
mov
aam
push
(bad)
push
rol
inc
clc
inc
or
ins
xchg
xchg
ss
pop
and
pop
sti
or
repz
push
retf
out
scas
adc
cmp
fcmovnbe
imul
pop
pop
mov
rcl
adc
mov
cmp
js
push
dec
sar
mov
mov
das
in
pop
lods
mov
rol
mov
retf
jl
jge
jbe
(bad)
mov
and
mov
jbe
lahf
adc
jmp
(bad)
imul
dec
push
xor
imul
inc
xchg
push
sub
leave
fcom
dec
aaa
test
ss
push
mov
sbb
sub
movs
sbb
lods
test
cld
mov
aaa
add
loop
mov
add
fild
cdq
cmp
or
mov
ds
mov
(bad)
cwde
sub
call
or
rcr
arpl
fistp
mov
ins
and
add
dec
out
xchg
dec
(bad)
arpl
dec
and
popa
jno
pop
ret
mov
or
or
dec
adc
dec
out
cmps
(bad)
scas
je
repz
xchg
leave
shr
loope
dec
xor
xchg
push
icebp
and
in
aam
and
mov
xor
aad
xlat
sub
loop
xor
pop
jle
aaa
mov
aaa
inc
push
adc
mov
icebp
sub
push
xor
fmul
sbb
mov
push
or
into
jecxz
jge
and
cmp
sbb
icebp
sbb
mov
pop
dec
and
jmp
sbb
adc
mov
jecxz
retf
mov
js
adc
iret
dec
sub
jge
popf
fs
leave
mov
mov
push
jp
daa
loope
rdtsc
mov
jp
mov
aaa
(bad)
cwde
je
pop
push
cmp
fwait
mov
inc
enter
aam
or
mov
jp
out
int
or
(bad)
or
push
adc
lods
and
arpl
aam
fadd
ss
inc
mov
out
adc
cmc
scas
inc
pop
and
ss
scas
aad
leave
movs
data16
ja
push
shl
fcom
cs
push
js
or
sbb
fcom
mov
inc
cwde
xchg
aad
jne
sub
sbb
jmp
jle
push
mov
pop
aas
cmp
pop
mov
jne
out
cmp
cmps
mov
add
nop
jae
nop
jo
mov
jbe
push
cmps
adc
fs
(bad)
xor
xchg
or
cmp
(bad)
push
dec
adc
and
fnstenv
jge
push
(bad)
mov
jno
push
xchg
push
fucom
jmp
out
shr
dec
sbb
out
(bad)
imul
jecxz
in
es
or
mov
inc
ret
and
enter
dec
mov
mov
(bad)
push
test
or
sub
add
not
dec
inc
inc
xor
jg
jecxz
test
out
(bad)
fcom
js
add
dec
das
sbb
imul
sub
int
xchg
mov
sahf
jbe
cmp
sub
mov
push
adc
jp
movs
mov
lock
clc
test
shl
and
icebp
add
je
push
xor
pop
je
xor
pushf
push
test
ja
stc
outs
bound
mov
dec
xor
pop
sbb
ror
adc
out
fmul
fiadd
stos
xor
xchg
push
cmps
push
das
push
or
sti
xchg
fwait
(bad)
enter
movs
bound
out
imul
pusha
ja
xchg
sbb
pop
fild
pop
call
movs
mov
mov
(bad)
jmp
mov
inc
cmps
lods
add
cmps
loop
push
sar
cdq
pop
jle
push
push
jge
jl
sti
loope
mov
ja
mov
jno
icebp
ss
push
test
hlt
sbb
retf
mov
jne
sbb
popa
push
rcr
js
jg
movs
xchg
mov
sub
mov
out
(bad)
ins
mov
fisttp
adc
shl
xor
xor
inc
sub
mov
mov
mov
sbb
test
inc
(bad)
jl
add
dec
lds
or
push
or
jmp
fisub
fs
mov
test
test
xchg
mov
test
sub
fldl2e
stc
daa
and
sub
cmps
ds
sub
fld
and
dec
pop
aaa
clc
dec
mov
test
or
dec
hlt
mov
push
ins
loop
outs
xchg
cmp
lds
jbe
sub
(bad)
out
sti
test
and
mov
in
call
jmp
push
mov
sahf
lea
sub
or
stc
jg
or
adc
ret
hlt
fst
xchg
jno
or
sub
xor
pop
mov
jmp
cs
push
out
mov
sbb
jl
jg
mov
mul
frstor
or
jp
pushf
jne
outs
jo
fwait
dec
mov
pop
pop
push
movs
call
inc
mov
fidivr
xchg
daa
xor
pop
cmp
hlt
cmp
cdq
pop
repnz
cmp
repz
je
xchg
add
fsin
xchg
push
push
pop
popa
pop
mov
sub
xchg
bound
cmps
test
mov
pop
xchg
xor
mov
jle
(bad)
cli
sub
add
xlat
movs
xchg
aas
inc
std
aad
shr
out
out
jg
iret
hlt
(bad)
xor
ins
aad
and
fwait
ins
dec
or
in
stc
out
mov
fcomp
push
into
mov
sub
pop
sub
push
jmp
ja
popa
xor
push
cmp
pop
xchg
xor
stc
out
push
inc
inc
push
push
daa
scas
ror
inc
push
into
rol
pop
loop
xchg
push
les
pusha
nop
test
xor
cmps
adc
adc
jns
out
out
mov
mov
and
cli
stos
gs
pop
sub
(bad)
lock
xor
pop
and
out
fucomip
sub
out
in
or
sub
mov
cs
inc
outs
retf
retf
ss
pop
inc
daa
out
out
adc
sahf
push
mov
idiv
add
(bad)
ja
pop
enter
xchg
dec
out
repz
fs
push
mov
enter
loopne
call
out
into
dec
cmp
xor
adc
inc
adc
mov
pop
mov
sbb
in
cmp
add
ja
je
mov
or
jmp
mov
iret
push
and
test
test
jae
or
fld
lahf
ja
push
mov
push
imul
pop
jno
mov
out
ja
std
std
xchg
mov
cmps
jae
sub
dec
inc
mov
cwd
std
es
std
jo
out
pop
xchg
fwait
bnd
jne
outs
loope
mov
ins
mov
imul
jbe
mov
push
mov
(bad)
retf
push
inc
stos
bnd
push
dec
push
inc
lahf
mov
cmp
in
stos
lds
stc
dec
inc
cmp
sti
xchg
fs
js
adc
imul
int3
mov
retf
cmps
inc
(bad)
mov
sbb
and
call
cmp
sbb
sub
cmp
ja
cld
fadd
jmp
ins
pop
push
mov
(bad)
iret
lods
jp
jnp
lods
push
jnp
push
add
fbstp
fisubr
mov
xchg
push
pop
or
add
(bad)
mov
sahf
add
mov
mov
inc
gs
ret
lds
jmp
lea
arpl
out
jnp
xchg
leave
push
and
xor
push
mov
and
mov
lahf
mov
aad
int3
dec
xor
popa
out
pop
ss
sub
push
test
xchg
les
and
(bad)
mov
xchg
scas
jne
inc
mov
js
xor
je
xchg
push
xor
neg
shr
inc
enter
jb
mov
daa
retf
scas
jns
mov
test
mov
ins
push
lods
enter
loopne
out
cmp
mov
(bad)
xor
stos
stos
int3
pop
repnz
fimul
sbb
rcr
sbb
icebp
adc
or
es
mov
pop
popa
loope
cmps
clc
das
dec
pop
pop
mov
cmp
push
retf
imul
jo
shl
cmp
ja
cmp
out
adc
mov
sti
inc
cmp
pop
cmp
inc
mov
imul
cmp
scas
idiv
fild
push
xchg
add
mov
fdiv
pop
push
and
cmps
arpl
mov
(bad)
cmp
outs
(bad)
push
mov
jmp
mov
mov
test
stos
cmp
push
outs
or
mov
sub
jmp
xor
(bad)
sbb
cmps
push
mov
xor
push
test
mov
jle
retf
push
daa
jmp
(bad)
not
clc
mov
addr16
stos
pop
imul
loopne
push
mov
mov
mov
adc
cmp
test
or
add
add
(bad)
mov
add
sti
into
test
sti
lods
fwait
cmp
sbb
in
stc
and
or
outs
mov
sub
inc
lods
pushf
iret
pushf
ja
adc
xchg
test
pop
xchg
sbb
pop
sub
(bad)
xchg
mov
mov
add
mov
mov
pop
mov
adc
call
(bad)
ss
pop
fwait
xchg
mov
mov
mov
pop
pusha
outs
out
test
out
inc
dec
stc
and
adc
arpl
pop
pop
xlat
or
ja
inc
fcom
or
or
lea
out
movs
sti
inc
push
out
fwait
ins
pop
cld
push
imul
cmp
add
(bad)
pop
xchg
scas
push
mov
push
mov
jecxz
rcl
inc
or
ja
pop
cmp
sub
je
add
rcr
or
sub
adc
imul
test
sub
push
dec
jmp
es
mov
push
sar
test
imul
ror
gs
mov
xchg
icebp
repnz
xor
in
pop
cli
mov
dec
cmp
shl
jns
mov
popa
clc
xchg
add
popa
or
cmps
sub
pop
and
push
xlat
adc
adc
mov
and
sub
pop
scas
scas
(bad)
mov
mov
or
(bad)
cmc
pop
xchg
jge
fnstenv
adc
mov
call
add
push
stos
test
imul
sbb
out
inc
push
leave
jnp
xchg
mov
mov
sub
mov
or
in
sets
dec
adc
ficom
push
lahf
and
cmp
in
cmp
pop
leave
arpl
fldcw
rcl
inc
jecxz
call
inc
test
aam
bound
mov
rcl
fsubr
pushf
cmc
lods
xor
cmp
jecxz
inc
(bad)
idiv
ror
jmp
sub
out
dec
cmp
adc
lds
je
clc
aaa
sbb
test
xlat
ss
or
mov
popa
jmp
mov
arpl
xchg
cmp
cmp
fcom
adc
imul
sub
pushf
sbb
ret
popa
cmp
or
loope
push
call
dec
dec
cld
mov
sbb
jmp
imul
imul
xchg
cmp
in
push
pop
int
scas
or
sbb
cmp
jnp
push
retf
clc
mov
push
int
mov
fdiv
fwait
xchg
push
sub
ss
jno
imul
dec
stc
arpl
push
or
pop
jg
ss
clc
ss
cmp
add
mov
sbb
sub
sbb
xor
mov
pop
dec
aam
fimul
pop
mov
pop
in
mov
sbb
pop
ja
add
push
(bad)
jns
aas
jne
in
(bad)
lea
std
imul
mov
pop
or
cmp
xor
xchg
sbb
inc
adc
add
loop
push
in
enter
mov
in
inc
imul
les
jnp
push
add
in
jmp
into
cli
cmp
dec
xchg
js
int3
inc
fld
(bad)
xor
ja
neg
in
jae
sbb
add
pop
addr16
cmp
push
jle
into
out
push
outs
jns
sbb
aaa
jle
leave
lock
clc
cmp
iret
gs
xchg
xchg
push
mov
push
mov
cld
xchg
mov
push
pop
jb
les
add
inc
ret
xor
sub
(bad)
pop
or
cdq
test
jge
push
push
jg
add
add
fadd
fcom
mov
xchg
les
daa
push
gs
mov
ja
xor
add
xlat
xchg
cdq
sub
mov
pop
iret
and
in
mov
mov
gs
test
and
ja
not
test
pop
cdq
(bad)
arpl
mov
test
sub
push
out
shl
xchg
add
pop
mov
test
arpl
pop
popa
(bad)
jns
sbb
gs
cmc
xor
sar
je
ja
test
and
es
fldenv
push
jmp
popa
repz
mov
xchg
dec
or
mov
bound
fs
ss
inc
icebp
or
adc
add
and
mov
fld
(bad)
outs
sbb
dec
shl
lods
test
div
not
sub
test
sbb
ins
or
(bad)
or
mov
mov
(bad)
push
lds
pop
jb
iret
dec
dec
sar
imul
jo
mov
scas
int3
or
push
sti
ds
sub
xchg
aad
or
mov
imul
cmp
mov
mov
and
nop
jp
push
and
movs
das
dec
pop
test
xor
mov
cmps
popa
test
mov
pop
pop
push
xlat
dec
xchg
sbb
fidivr
sbb
xchg
retf
mov
daa
aas
sub
xchg
dec
mov
jne
sti
scas
fs
lods
xchg
adc
push
rol
sub
aaa
lds
repnz
ret
aas
cs
lea
fst
dec
adc
je
shl
sbb
jbe
mov
je
pop
xchg
test
sbb
cmp
pop
jmp
cmps
sub
in
lods
sbb
xchg
(bad)
dec
mov
adc
paddq
ja
push
test
aaa
jne
mov
jmp
dec
mov
pop
inc
ficom
popa
mov
dec
cmps
xchg
add
push
sub
xor
pop
sbb
jmp
pop
test
das
mov
push
mov
mov
add
jl
jge
bound
push
dec
repz
movs
pop
pop
inc
push
cld
int
inc
xchg
mov
lods
jns
fcomp
inc
sub
mul
sti
cmps
icebp
sti
sbb
sub
call
mov
sub
fidiv
enter
pop
and
add
xlat
lock
cld
rol
sbb
mov
test
xchg
leave
lods
xchg
rol
dec
(bad)
out
or
pushf
mov
movs
daa
stc
daa
sub
data16
and
pop
cld
pop
lea
(bad)
aas
dec
dec
out
data16
mov
push
cmp
jne
fwait
push
dec
xor
shl
cmp
sbb
sbb
cld
rcr
lods
cmp
xchg
repz
or
jge
pop
aam
inc
xor
push
xchg
adc
adc
mov
in
sbb
jbe
test
jecxz
lock
xchg
add
enter
js
js
mov
xor
aam
aas
add
push
cmps
mov
(bad)
mov
idiv
out
xlat
mov
mov
test
sub
pop
cmp
bound
dec
push
rcr
jp
or
add
cdq
xor
inc
js
or
test
jne
mov
mov
daa
add
neg
and
push
std
mov
addr16
repnz
stos
and
leavew
mov
mov
ret
adc
(bad)
mul
and
cli
jmp
aas
out
cwde
mov
bound
jno
js
adc
int
loope
sbb
push
mov
shr
and
pop
dec
inc
adc
movs
or
gs
inc
aas
pop
pop
fcom
clc
xor
add
(bad)
jns
stos
cwde
mov
pop
movs
(bad)
sahf
jne
and
push
sbb
out
add
mov
sub
mov
daa
ret
xchg
dec
push
jne
fucompp
test
je
lea
data16
jno
and
mov
xor
cmp
xor
mov
movs
and
xchg
dec
idiv
xor
dec
fisttp
sub
adc
jle
push
lock
pop
mov
mov
enter
or
dec
ja
xchg
jmp
lock
inc
pop
enter
push
mov
jmp
jne
gs
push
stc
cmc
mov
mov
xor
push
adc
leave
sbb
mov
cdq
mov
lahf
aad
out
js
lods
add
and
push
xlat
daa
pushf
(bad)
mov
xchg
ins
jno
or
sub
pop
jg
adc
retf
add
xor
ror
push
aas
(bad)
out
ds
(bad)
ss
leave
int3
imul
sub
bnd
out
jae
mov
cmp
sbb
jp
adc
xor
mov
idiv
or
dec
push
jmp
xlat
or
or
add
push
sub
fidiv
add
sbb
mov
mov
sahf
cld
popf
push
popa
push
aaa
aaa
ret
or
cwde
and
push
lods
jmp
mov
fdivr
in
add
mul
fst
test
cdq
cmp
mov
pop
leave
mov
xor
(bad)
sbb
pop
aam
not
aaa
(bad)
int
cmp
gs
add
inc
pop
dec
call
ror
sar
inc
out
jns
test
sbb
cwde
ins
test
popf
cmp
sbb
add
lods
or
nop
cmc
in
scas
test
sbb
leave
sbb
and
jecxz
xchg
rcl
test
div
jmp
jg
jne
arpl
loope
push
mov
aaa
dec
xor
pop
or
and
and
ficomp
and
jmp
daa
pop
mov
mov
xchg
hlt
jnp
test
test
xchg
popa
outs
std
inc
movs
outs
sub
push
ja
fs
push
jno
push
dec
push
mov
add
leave
in
push
fisttp
sti
addr16
into
push
mov
inc
inc
imul
dec
daa
mov
cdq
xchg
sub
mov
jle
mov
out
xchg
xchg
jo
cdq
sub
mov
mov
inc
scas
push
jg
clc
das
sub
jecxz
mov
sub
xchg
je
cmps
imul
lahf
cdq
shl
cwde
(bad)
shl
jns
sub
inc
xchg
mov
imul
mov
movs
cmp
cmc
fwait
vmread
loopne
loopne
repnz
sbb
pop
jo
out
test
(bad)
stc
leave
jbe
fimul
dec
lods
xor
enter
rcr
out
test
pop
jmp
push
or
jbe
jmp
aad
pop
jmp
pop
test
shl
and
cmp
and
sub
push
movsx
loop
or
cmp
mov
inc
jbe
int
ret
xchg
loop
and
stc
test
xor
fsub
shl
mov
outs
jecxz
cmps
lds
sbb
lds
adc
or
adc
shl
cli
pop
adc
push
pop
cdq
pushf
cmps
adc
mov
icebp
and
xor
push
mov
ret
repnz
in
jecxz
xchg
jmp
mov
pop
(bad)
pop
add
mov
push
pop
int3
dec
push
retf
dec
repz
test
xchg
jae
lahf
icebp
xor
sub
mov
mov
push
add
xor
ss
or
dec
movs
jle
gs
scas
test
sar
mov
jns
cmp
into
popf
mov
adc
std
jmp
sbb
test
sbb
stc
das
xchg
pop
xchg
add
dec
dec
mov
add
test
rcr
inc
push
mov
jb
mov
mov
int3
outs
lahf
pop
pop
dec
inc
cmp
gs
inc
adc
ins
fst
leave
xchg
xlat
cmp
sub
and
mov
mov
add
hlt
adc
mov
(bad)
pushf
in
jnp
ins
push
pushf
mov
or
repz
out
push
cmp
pushf
fcmovnb
cmp
nop
mov
iret
push
aaa
jl
cmp
and
xor
leave
fwait
xor
sub
fldenv
mov
dec
sti
(bad)
fwait
sbb
sbb
lea
aas
ins
sub
cmc
dec
fild
push
in
aaa
jmp
mov
into
lods
outs
push
add
fs
xor
outs
inc
icebp
daa
jg
gs
ror
rcl
jnp
shl
xor
push
pop
inc
inc
xchg
xor
xor
sub
(bad)
pop
popa
ror
outs
ret
cmps
pop
rol
mov
shl
rcr
inc
in
jno
jns
or
out
fwait
in
sub
fst
jp
daa
adc
repnz
call
sub
gs
jg
xchg
int
cdq
cmp
shl
pop
pop
xchg
bound
setb
xor
jmp
mov
inc
stc
aam
mov
xchg
repnz
xchg
dec
push
jo
in
imul
mov
mov
outs
sbb
mov
jmp
nop
mov
leave
dec
leave
ins
mov
xor
addr16
add
or
adc
mov
or
fld
test
ja
movs
cmps
xchg
(bad)
jne
gs
and
dec
into
pop
adc
add
retf
(bad)
inc
push
mov
push
cmps
das
cmp
(bad)
in
dec
sahf
xchg
jge
idiv
rol
xchg
adc
cmps
mov
pop
cmps
pop
add
mov
pop
out
icebp
or
dec
into
push
and
movs
or
cs
pop
aaa
rol
mov
jmp
mov
(bad)
sbb
into
ja
test
push
pop
add
idiv
sub
gs
out
dec
imul
(bad)
hlt
icebp
lds
cmp
movs
sbb
out
xchg
mov
(bad)
loope
jbe
fnsave
std
pop
push
mov
aam
mov
in
mul
jecxz
in
scas
lods
push
cld
xchg
ror
aaa
stc
sar
bound
in
movs
ja
push
sub
pop
jl
idiv
mov
sub
cwde
xchg
ja
jecxz
push
out
push
xor
bound
mov
pushf
rcl
jae
fnstenv
pushf
mov
and
(bad)
movs
mov
xchg
iret
das
push
jnp
push
ja
out
sahf
fisubr
mov
cmp
push
bound
dec
xor
icebp
add
mov
xor
cmp
mov
and
push
add
jo
cmps
jl
fwait
cmp
sub
pop
pop
pop
retf
adc
ja
out
mov
mov
sub
cmc
inc
sub
jmp
enter
rcl
and
cli
xchg
mov
lahf
sub
inc
add
ja
xor
minps
mov
jl
movs
push
xchg
sbb
jo
inc
lea
shl
or
pop
jge
mov
push
jmp
push
sub
inc
shr
pop
mov
cmps
(bad)
push
pop
mov
mov
mov
inc
jo
xchg
xor
and
pop
(bad)
js
aam
pushf
adc
or
fnstenv
(bad)
repz
repz
sbb
push
sbb
add
aaa
push
lds
sub
loop
mov
add
mov
ror
xchg
add
pop
xor
arpl
jbe
loop
mov
push
pop
leave
mov
shl
push
mov
adc
pop
out
(bad)
cmps
shl
dec
je
fistp
clc
sub
mov
xchg
mov
sar
adc
dec
imul
sub
xor
outs
fld
bound
inc
fistp
add
jne
push
cmp
(bad)
outs
sbb
sub
pop
pop
out
ss
mov
xchg
xor
xor
in
nop
test
push
adc
cmova
movs
mul
call
retf
and
dec
fldcw
imul
add
stos
push
mov
rcr
dec
loop
ss
jl
push
xor
xchg
adc
inc
es
or
cld
dec
fld
push
mov
ds
mov
jno
inc
mov
dec
xchg
cdq
test
mov
pusha
in
pop
ror
cmp
inc
pop
(bad)
fwait
push
push
lea
adc
stos
(bad)
(bad)
dec
hlt
jb
inc
push
test
(bad)
int
add
scas
jl
jno
mov
jns
adc
sar
xor
pop
hlt
jo
iret
call
fbstp
add
cs
mov
cmp
push
mov
dec
imul
sub
test
mov
ret
sbb
adc
loope
in
mov
movs
jecxz
retf
fidiv
jl
out
movs
call
mov
pop
outs
in
pop
push
add
scas
ins
push
xchg
addr16
push
cmp
sub
sbb
addr16
mov
push
outs
rol
(bad)
adc
test
sbb
pop
imul
icebp
xlat
leave
mov
int3
and
stc
sub
int
xchg
movs
aas
loopne
ror
scas
in
mov
push
stc
cmp
jmp
call
cdq
pop
pop
jle
xchg
mov
out
data16
popf
ret
add
cmp
adc
ins
sub
pop
mov
stos
mov
sub
fcomp
cmp
out
outs
dec
js
(bad)
push
bound
ds
movs
call
test
pop
cmps
outs
hlt
ss
mov
mov
jmp
jmp
sbb
and
inc
xchg
pushf
jp
sbb
xlat
xor
jmp
sub
mov
jge
mov
cmp
aas
call
jb
cmps
cdq
(bad)
fnstcw
arpl
out
xor
jmp
and
in
cmp
sub
ret
inc
outs
cmps
or
loop
or
fild
sar
sbb
mov
sub
mov
cmp
pop
add
gs
ss
out
dec
ret
push
and
fstp
cmp
(bad)
mov
adc
cs
adc
pushf
adc
mov
mov
lds
out
std
psubusb
or
mov
shl
(bad)
or
pop
lahf
lock
ins
and
rol
xor
cmp
jbe
rcl
mov
sbb
xchg
lea
sub
inc
test
xchg
xchg
test
or
push
mov
push
xchg
mov
outs
mov
js
dec
ss
mov
fsubr
movs
std
pop
jmp
(bad)
(bad)
lahf
ret
hlt
pushw
out
push
cmps
or
fwait
mov
mov
test
sbb
and
dec
shl
xchg
clc
mov
stc
loope
push
lods
xchg
fwait
or
mov
call
cld
aaa
movs
es
xchg
frstor
outs
fiadd
mov
icebp
fxch
or
lods
mov
dec
xor
or
xchg
mov
fild
popa
out
ret
inc
repnz
fnstenv
leave
call
sbb
mov
(bad)
out
gs
aas
(bad)
in
ret
test
push
pop
pop
dec
scas
sub
ins
bnd
adc
inc
or
jns
mov
mov
inc
dec
cmc
lahf
jno
loope
push
cmp
xchg
push
xchg
xor
ja
cmps
xor
(bad)
mov
and
sub
xchg
push
(bad)
mov
mov
mov
jmp
dec
ret
les
in
mov
int3
sub
mov
popa
cmc
leave
bound
and
mov
in
cdq
gs
jle
xchg
and
ss
icebp
fwait
pop
aad
les
aaa
sbb
(bad)
and
fcomp
rol
or
cdq
cmp
mov
mov
loopne
ss
and
pop
pop
mov
mul
test
mov
xor
xchg
daa
or
push
lods
xchg
aaa
xor
mov
daa
ins
xchg
addr16
xchg
pop
into
add
cwde
leave
sub
push
outs
and
mov
xchg
leave
mov
and
imul
or
dec
xchg
dec
inc
dec
stos
imul
push
std
iret
call
lods
push
pop
xchg
mov
in
pop
mov
or
hlt
ins
gs
cmc
mov
mov
push
adc
mov
retf
aad
mov
xchg
jecxz
xor
cmps
mov
stos
clc
(bad)
lahf
lahf
sbb
fiadd
jno
in
adc
ficom
xchg
jmp
fdiv
scas
xor
push
pop
repz
sbb
pop
mov
iret
lods
xor
mov
pop
fild
pop
xor
jle
rol
jo
jmp
enter
hlt
push
pop
push
repz
out
pop
icebp
pop
addr16
sub
jg
push
adc
daa
jo
mov
stos
fcom
add
mov
pop
movs
shl
in
nop
mov
add
cmc
xchg
in
imul
add
inc
xchg
mov
imul
outs
sahf
inc
stos
enter
and
repz
mov
pop
mov
lahf
mov
push
mov
(bad)
int3
mov
xor
icebp
scas
ret
stc
shl
push
cmps
shl
lock
ficom
(bad)
mov
or
outs
lock
leave
xchg
mov
inc
fst
xlat
xor
sbb
cmps
int3
ins
setge
jmp
or
fwait
mov
mov
sub
pop
jns
sbb
push
rcr
jmp
jge
test
push
mov
not
jp
dec
sub
out
mov
inc
rol
add
js
retf
xor
and
jns
inc
inc
(bad)
xlat
dec
cmp
push
dec
in
out
xchg
inc
adc
mov
stos
enter
sbb
jmp
or
pop
jp
jno
test
loope
jmp
cwde
push
rcl
sbb
rcl
jge
dec
das
rol
push
rcl
adc
popf
cmps
retf
sbb
pop
sub
test
test
loop
xchg
xchg
sar
dec
call
add
xchg
(bad)
sbb
jmp
test
mov
sbb
(bad)
push
pop
or
stc
bound
jge
pop
mov
add
sub
add
xor
fsub
aad
movq
push
dec
xor
jne
lods
inc
pop
test
test
stos
jae
test
cli
inc
mov
mov
(bad)
(bad)
cmps
push
lds
(bad)
add
xchg
sbb
sub
jnp
pushf
add
mov
sti
lock
push
ret
fcmovbe
or
stos
mov
lods
push
mov
cmp
pop
cli
and
fwait
int3
adc
mov
jne
lods
js
mov
mov
sub
std
iret
jecxz
push
add
ret
jmp
aaa
inc
fcomp
xchg
popf
xchg
inc
fstp
fisubr
aad
sub
(bad)
rcl
xor
jnp
sub
jmp
(bad)
push
xor
je
dec
pop
cmp
ja
push
test
aas
jl
sti
jl
mov
add
icebp
shl
dec
xor
sub
popa
aaa
retf
adc
mov
push
and
and
dec
lods
scas
leave
jecxz
shl
and
sti
test
sbb
sbb
(bad)
out
cs
popf
sti
push
mov
ja
fmul
data16
enter
mov
xchg
sbb
and
adc
cmp
shl
inc
mov
dec
cmc
mov
xchg
mov
pop
(bad)
cmp
sti
imul
xchg
adc
mov
mov
xor
test
fild
xchg
sub
idiv
dec
cmp
stos
jbe
idiv
rol
data16
popf
repnz
push
push
cmps
mov
mov
out
mov
arpl
das
fcom
js
and
mov
fadd
das
adc
stc
add
mov
jb
addr16
scas
mov
in
and
cli
stos
enter
dec
push
jl
push
inc
lock
xchg
xor
in
stos
and
lock
xor
adc
push
cmp
jecxz
push
cdq
lods
addr16
jge
int
and
xor
push
(bad)
in
std
xchg
ror
lods
sub
pop
cmps
(bad)
call
add
icebp
xchg
(bad)
mov
arpl
jns
fld
ds
and
dec
add
lods
push
aad
pop
jae
lods
dec
cmp
imul
inc
mov
ret
dec
pushf
add
daa
pop
mov
test
pop
sub
adc
ret
and
daa
cs
hlt
and
cmp
imul
gs
bound
inc
mov
mov
adc
mov
mov
jge
pop
jo
call
xchg
lods
jno
jbe
xor
cmps
mov
sahf
stos
les
retf
pop
xlat
enter
stc
adc
push
adc
xor
aaa
outs
cmc
xor
pop
cmp
and
loop
mov
fisttp
(bad)
sbb
sti
jmp
mov
lea
clc
sub
add
pop
or
sti
cmc
ins
aad
jecxz
shl
inc
inc
loope
gs
cmp
lock
sbb
dec
and
mov
iret
mov
je
cmps
in
outs
mov
pop
pop
ins
sar
test
jno
push
test
adc
lock
xchg
es
mov
(bad)
mov
sub
mov
cmp
sbb
dec
jg
sub
mov
xchg
in
mov
or
jp
in
loope
(bad)
jmp
mov
adc
fbstp
add
cdq
jno
dec
pop
leave
fs
cli
pop
pop
inc
cmp
push
dec
dec
mov
test
pop
xchg
cmc
test
and
in
pop
jl
rcr
inc
(bad)
loope
mov
push
je
mov
jno
push
xlat
xchg
sub
mov
adc
shr
xor
mov
adc
mov
and
add
add
cmp
fstp
dec
add
(bad)
(bad)
xchg
mov
ja
dec
dec
in
push
xchg
pop
cli
js
mov
fs
adc
stc
sahf
xor
into
in
dec
ja
(bad)
call
loop
loopne
out
add
sbb
imul
push
pop
stos
xchg
jmp
popf
sub
or
jns
push
scas
jmp
jbe
lods
cmps
inc
clc
push
xchg
stos
into
jp
iret
or
shl
xchg
call
loopne
mov
lods
ins
(bad)
jae
movs
(bad)
aaa
daa
adc
dec
mov
mov
inc
jp
and
scas
rcr
daa
(bad)
scas
das
mov
xor
imul
clc
sahf
xchg
mov
jnp
mov
push
leave
sub
pop
shl
ins
rol
test
sub
mov
(bad)
popf
xchg
pop
push
fstp
cmps
xrelease
mov
jbe
shr
loop
pop
mov
sti
mov
dec
call
mov
loope
dec
sub
pop
aaa
out
fsub
cmp
add
jne
std
inc
add
inc
sub
enter
adc
sbb
mov
mov
xchg
or
jne
or
fwait
mov
idiv
jmp
xor
sahf
push
mov
cli
(bad)
pop
out
(bad)
cmps
popf
xor
rcr
dec
sub
dec
fldcw
adc
push
mov
ins
sti
leave
cmp
pushf
and
xor
popf
call
xor
(bad)
fnstcw
aam
xchg
movs
cmp
xchg
or
push
pop
vhaddps
pop
cli
gs
push
cmc
test
inc
push
jecxz
xlat
ins
retf
sar
out
dec
out
or
xchg
jl
or
sbb
popa
mov
in
(bad)
rcl
aam
add
jns
loopne
jb
(bad)
xchg
adc
jns
gs
pop
adc
sub
test
adc
inc
xchg
pop
mov
mov
sub
jecxz
inc
mov
and
dec
push
push
mov
call
push
xor
in
push
inc
fistp
es
jecxz
xor
int
mov
popf
imul
jno
loope
nop
lahf
jb
dec
sbb
movs
sbb
pop
jmp
call
cmps
sbb
ss
mov
(bad)
sub
jmp
(bad)
ror
push
mov
test
aas
stos
jl
mov
fcomp
sbb
add
jns
pop
fwait
push
mov
and
std
xchg
call
pop
loop
(bad)
fisubr
cmp
adc
inc
mov
lods
lahf
mov
shl
jl
fucomp
out
es
ror
sbb
xchg
pusha
pop
cld
or
or
out
addr16
mov
sbb
test
dec
xchg
dec
jge
dec
sbb
das
sub
cs
xchg
retf
cdq
sahf
enter
cwde
or
inc
or
xchg
pop
jge
adc
push
or
jne
ss
adc
not
not
xchg
stos
popf
dec
fwait
sub
pop
imul
and
and
mov
out
or
das
loopne
xchg
mov
jmp
repnz
mov
sub
push
in
fld
pop
pop
ud0
sti
push
jns
dec
xchg
out
ror
jg
fcom
pop
fldenv
mov
xor
icebp
mov
push
lds
mov
lods
add
call
fstp
ret
popa
das
rol
fdivr
jb
mov
pop
mov
ds
dec
iret
fsub
inc
sti
push
or
jmp
dec
jg
test
xchg
mov
lock
imul
add
mov
cmp
test
imul
dec
fist
push
or
jge
xchg
and
mov
jnp
imul
inc
mov
sbb
lods
leave
fst
imul
aad
icebp
push
stc
cmps
sbb
rol
imul
fld
movs
pop
mov
ins
add
inc
cmc
popf
(bad)
loop
push
sbb
sub
pushf
aaa
imul
cmp
movs
pop
mov
pushf
neg
dec
jmp
mov
xchg
not
movs
xchg
jns
or
test
jnp
(bad)
cmp
cmps
add
xchg
jns
imul
or
mov
pusha
in
arpl
movs
cdq
jmpw
bound
push
lea
cmps
jne
mov
popa
mov
add
inc
inc
add
icebp
pop
aam
imul
mov
shl
int3
add
xor
icebp
push
hlt
bound
jns
pop
jmp
cmp
mov
mov
cmps
sbb
fs
mov
push
jns
sbb
std
mov
popf
add
xchg
jnp
lea
inc
and
clc
pop
push
cmp
ins
rcr
ja
rol
pop
inc
xor
cmp
or
ds
dec
movs
push
stc
scas
or
xor
and
aam
add
push
shr
imul
xchg
inc
dec
xchg
cdq
xchg
jge
pop
mov
sbb
stc
jle
pusha
xor
add
arpl
sub
cmps
or
cmp
(bad)
and
pop
stc
xchg
mov
xchg
dec
dec
pop
mov
mov
push
stos
xchg
pop
test
inc
add
enter
jb
jb
pop
stos
or
cmps
mov
ja
shl
push
popa
loop
scas
and
pop
out
cwde
mov
fcmovnb
push
fwait
stos
sub
mov
mov
leave
in
pop
sbb
ja
ss
pop
in
mov
jmp
fsub
mov
dec
jo
aad
(bad)
fst
cmp
mov
outs
sub
add
push
cmp
add
or
ins
enter
pop
push
xlat
cmps
je
sub
loope
or
or
(bad)
mov
and
or
mov
shl
dec
loop
dec
mov
xchg
xchg
xlat
stc
and
clc
adc
xchg
stos
or
jnp
cmp
or
int3
test
retf
pop
xchg
mov
add
cmp
push
push
(bad)
les
dec
(bad)
(bad)
mov
cmp
jns
sub
push
scas
stc
push
sub
fstp
out
inc
dec
int3
sub
mov
int
cmp
mov
fcom
jmp
sbb
adc
ret
jmp
icebp
pop
pushf
lahf
mov
in
push
cdq
inc
nop
or
mov
pop
cmps
inc
inc
cmp
push
outs
or
movs
lahf
inc
leave
sar
adc
into
jmp
sti
pop
movs
stc
fsub
xchg
xlat
mov
jno
aaa
pushf
inc
std
or
nop
cli
xchg
repz
jno
ret
pusha
and
idiv
imul
pop
je
sub
(bad)
pop
sbb
ins
lahf
test
sbb
mov
inc
dec
mov
leave
int3
lea
shl
pop
call
inc
dec
inc
jnp
loopne
push
jo
inc
mov
jecxz
sbb
inc
std
stos
inc
pop
outs
dec
outs
outs
and
fldcw
cdq
lds
mov
out
adc
stos
sbb
cmp
push
mov
fidivr
cmps
fisttp
jg
jecxz
cmp
repnz
fist
cwde
adc
xor
jmp
and
or
stos
cmp
adc
xchg
sbb
cmp
pop
aad
stc
add
push
lea
rol
cmp
push
jno
jns
cdq
xchg
mov
inc
cmp
sar
enter
jmp
movs
adc
lahf
adc
add
repz
adc
stos
xchg
stc
ret
push
push
ud1
mov
ds
mov
jae
(bad)
stc
lea
inc
dec
imul
inc
(bad)
sbb
jb
dec
test
jns
fdiv
xlat
js
cwde
clc
(bad)
inc
mov
jo
leave
sub
leave
adc
mov
popa
pop
push
das
ins
lds
mov
cmps
push
xlat
dec
adc
jp
xchg
fsub
sub
cmp
invd
dec
es
idiv
(bad)
push
stos
sbb
fcmovu
lea
std
repnz
inc
sub
xchg
test
dec
fisub
stc
out
add
fmul
in
pop
adc
cdq
cmc
inc
ret
cmp
or
inc
je
push
aas
xlat
xchg
imul
mov
test
cmp
cmc
shl
cmps
or
sub
ins
fldcw
aaa
pop
pop
add
mov
stc
mov
add
loop
or
retf
jb
xchg
enter
or
sub
mov
xchg
out
sbb
xchg
jg
sub
jb
ret
mov
movs
ss
dec
or
(bad)
mov
test
xchg
bound
out
push
iret
sbb
fdivr
test
fmul
mov
sub
pop
stos
dec
or
loop
push
mov
jmp
sbb
call
leave
push
mov
in
inc
sahf
pop
fstp
sub
push
mov
pop
mov
mov
adc
sub
aaa
cmp
inc
add
mov
sti
push
fidiv
pop
sub
daa
jge
mov
add
shl
stos
push
fldln2
(bad)
push
mov
aad
xchg
imul
xchg
push
mov
jb
dec
lods
pop
xchg
jp
shr
inc
daa
inc
sbb
pop
jbe
test
xor
add
addr16
es
cmp
pop
mov
out
in
out
clc
dec
sbb
jg
adc
jmp
or
inc
xor
test
test
mov
push
mov
fwait
xor
push
fisttp
cli
repz
sbb
dec
out
jle
aaa
sub
mov
es
sub
or
test
sbb
addr16
mov
pop
call
stos
shl
in
cmp
push
jmp
nop
mov
popf
push
pop
test
mov
pop
call
out
inc
adc
push
pop
icebp
aad
fisub
xchg
pop
movs
fwait
jb
js
int
fcomp
movs
push
fsubr
or
imul
inc
data16
mov
out
leave
dec
stc
sbb
cmp
xchg
xchg
pushf
push
je
mov
aas
sub
jnp
jbe
mov
inc
jmp
into
adc
sub
cmp
jg
dec
(bad)
jb
xchg
push
cmps
mov
mov
push
clc
dec
cmp
gs
add
aaa
daa
test
mov
aaa
mov
test
(bad)
int
pop
leave
inc
rcr
jnp
push
or
sbb
dec
lea
jl
push
sar
js
mov
xchg
frstor
out
clc
inc
ret
cmc
pop
mov
xchg
and
enter
scas
fisttp
ss
mov
leave
bound
pusha
fstp
xchg
repnz
mov
add
pop
in
fidiv
xor
pop
aas
test
fidiv
inc
xchg
retf
inc
hlt
dec
xchg
xchg
jne
mov
push
(bad)
mov
test
add
xor
adc
jae
jmp
fsubr
push
test
adc
jge
mov
retf
push
dec
xchg
jmp
xlat
stos
rcl
fistp
jns
retf
popa
sbb
adc
sar
and
add
and
or
inc
xchg
or
aas
mov
or
or
call
into
cmc
(bad)
push
jp
xchg
in
fsub
leave
pop
and
xchg
mov
or
mov
sub
mov
pop
sub
ds
mov
dec
and
dec
nop
jle
jae
int3
in
push
adc
xor
jmp
sub
test
push
and
cdq
sub
aad
mov
aam
sahf
xchg
mov
xchg
js
in
ror
jo
inc
scas
fistp
xchg
sbb
mov
or
mov
sbb
inc
dec
jns
ja
inc
dec
push
push
mov
aaa
xchg
sti
cld
jne
and
pop
mov
xchg
xor
add
test
aam
sti
mov
adc
(bad)
aad
rol
add
push
jmp
aas
leave
push
sub
pop
lods
pop
shl
xchg
or
mov
sbb
push
(bad)
cld
idiv
add
pop
push
cwde
aam
jp
push
jl
sub
je
test
sbb
add
pop
stos
mov
aaa
shl
imul
(bad)
push
jg
xchg
jp
addr16
or
sub
push
inc
dec
cmp
jmp
adc
jp
push
add
retf
pop
add
cli
sub
cmp
xor
div
mov
dec
fsubr
or
int3
lock
fcom
js
cs
lahf
popf
and
mov
dec
in
push
cmp
imul
inc
add
inc
outs
jle
sub
pop
pop
enter
or
adc
fwait
pop
data16
or
fisttp
push
inc
in
mov
dec
push
jnp
jp
or
in
and
jne
and
jmp
mul
sbb
xchg
inc
mov
je
jbe
adc
sbb
(bad)
adc
(bad)
jp
pop
mov
or
sti
icebp
int
enter
retf
popa
add
sbb
adc
fwait
or
fcom
xor
add
fbld
leave
xor
jne
idiv
sub
shr
mov
mov
out
idiv
xor
dec
fistp
mov
xor
mov
(bad)
cmp
pushf
push
test
aaa
fcomp
push
in
cmp
xacquire
jge
add
call
les
or
sbb
test
sub
(bad)
retf
dec
clc
lock
push
mov
fisub
jl
inc
or
js
sbb
out
xor
cld
(bad)
sbb
not
out
enter
imul
sub
mov
dec
scas
and
add
mov
stos
pop
push
addr16
fisubr
jmp
cmp
cmc
lds
pop
cmps
jbe
data16
dec
aad
imul
adc
sub
add
xchg
call
fild
(bad)
test
add
push
mov
and
imul
aad
cmc
xlat
lock
inc
ror
xchg
(bad)
cmc
addr16
int
arpl
stc
jecxz
push
ret
sbb
add
sahf
(bad)
mov
not
cwde
test
std
movs
cli
loopne
jo
adc
bnd
xchg
mov
popf
cmp
mov
call
stos
push
mov
jb
push
add
ret
dec
mov
xor
mov
or
and
sub
xchg
sub
pusha
movs
cmp
xchg
shr
aaa
mov
addr16
mov
cmp
xchg
or
fs
xor
jnp
scas
jb
push
jnp
loopne
mov
(bad)
cs
xchg
sbb
repnz
adc
leave
adc
jecxz
dec
jnp
in
jmp
jmp
cmp
lds
popa
(bad)
sahf
ror
sbb
push
out
jle
popa
ret
dec
xchg
dec
pop
jbe
rol
cli
bound
mov
popa
call
cmp
stc
inc
or
outs
int
addr16
xor
aaa
sbb
fstp
push
jmp
ins
push
dec
retf
pusha
pop
cmp
mov
inc
xchg
repnz
adc
xchg
dec
xchg
test
adc
sub
rol
mov
mov
and
jbe
pop
mov
pop
(bad)
mov
pop
mov
jno
jne
jns
xor
cs
fwait
inc
lds
sub
mov
pop
(bad)
xlat
xchg
xlat
(bad)
(bad)
fsub
mov
fiadd
and
xor
sbb
jmp
jecxz
sub
shr
pop
cld
sbb
rcl
xchg
cmps
inc
data16
aam
or
neg
int
cmp
pop
inc
jns
inc
in
lahf
xchg
inc
daa
adc
dec
ret
call
pop
mov
imul
pop
adc
cwde
sub
inc
cmp
sti
cmp
fnstsw
sub
mov
xchg
mov
jbe
cmps
int
test
test
or
mov
es
mov
lods
adc
adc
sbb
xchg
mov
(bad)
cmp
dec
adc
xor
fcomp
mov
xor
sbb
sbb
push
jae
mov
pop
sub
add
push
or
pop
in
bound
ja
(bad)
(bad)
xor
pusha
fcom
sbb
xchg
out
cwde
loope
in
or
pop
inc
fisub
scas
hlt
cdq
aad
sub
xor
sti
cmp
cmps
and
cmps
push
into
imul
add
xlat
xchg
hlt
cmc
cld
dec
and
lods
out
dec
scas
fadd
mov
or
or
ja
sub
div
fcmovnu
or
cli
sti
xlat
cmp
je
push
mov
xor
ret
jecxz
jae
jns
xchg
movs
retf
push
dec
in
mov
adc
xlat
cmc
popf
push
dec
dec
inc
mov
js
or
imul
cmp
xchg
xchg
lds
jp
inc
not
out
mov
leave
call
jmp
push
(bad)
jg
imul
push
add
aaa
pusha
add
int
lock
js
xchg
push
std
mov
call
jns
dec
jnp
packssdw
test
jno
jne
sti
or
inc
sub
movs
mov
push
pop
dec
enter
ja
add
scas
jo
and
popf
cmc
movs
adc
xchg
pop
aad
les
cmp
pop
and
push
jne
cdq
mov
frstor
aaa
(bad)
jae
pop
sub
pusha
jmp
jne
jno
sbb
xchg
and
sbb
jmp
stos
out
or
xchg
sub
imul
xchg
and
les
shl
repz
aaa
adc
popa
ret
das
adc
out
inc
cmp
les
leave
push
in
mov
(bad)
outs
mov
mov
js
jb
gs
fidivr
jb
mov
fucomi
mov
adc
pop
fiadd
test
jmp
mov
xor
ja
lea
mov
pop
cmp
xchg
movs
and
fild
shl
jmp
repz
add
pop
enter
dec
jmp
scas
fistp
pop
mov
mov
push
hlt
mov
mov
dec
fimul
stc
xchg
ret
neg
test
pop
pop
sbb
push
xor
leave
aas
(bad)
(bad)
daa
cmp
jbe
mov
sbb
sub
cmp
push
hlt
mul
not
mov
xchg
in
sbb
or
popf
clc
out
cmp
xchg
les
mov
aaa
jmp
(bad)
xchg
xchg
out
sub
(bad)
sbb
aaa
or
jle
mov
fisttp
ret
jmp
jge
dec
in
popf
cmp
push
add
out
add
pop
imul
int
out
cmps
or
test
xchg
loop
fnstenv
ret
sbb
or
in
pop
inc
addr16
xor
cmps
leave
mov
stc
out
push
dec
sbb
jno
mov
mov
outs
nop
fldenv
(bad)
xlat
sbb
and
cmps
cmps
mov
ss
in
daa
pop
stc
cmps
cli
push
push
xchg
mov
pop
test
aaa
push
and
int
push
mov
dec
lea
jmp
jmp
xor
jns
jns
std
cmp
mov
test
test
pop
mul
mov
push
lods
push
mov
lods
sub
mov
aad
sbb
inc
jne
xchg
add
stos
xlat
int3
mov
hlt
dec
xlat
aam
ins
ficom
fild
xchg
leave
arpl
sbb
jmp
fdiv
lds
cwde
mov
jmp
arpl
test
jmp
sub
jae
pop
ds
movs
push
jecxz
shl
jle
mov
cmps
mov
add
dec
xchg
es
jl
jle
(bad)
jmp
fcmovne
mov
push
loopne
fdiv
pop
test
xchg
inc
les
imul
jbe
retf
cwde
xor
std
cwde
jbe
add
dec
xor
jge
mov
mov
jp
inc
in
sub
dec
push
mov
adc
and
(bad)
test
jmp
sub
mov
push
ret
inc
sbb
inc
add
jnp
push
dec
xor
retf
test
jae
mov
pop
ret
fs
adc
jbe
retf
call
add
push
push
(bad)
jge
jmp
sbb
je
jmp
dec
xor
(bad)
jns
ja
jno
and
sub
int
inc
call
jns
mov
(bad)
stos
dec
cld
call
jne
sbb
(bad)
rol
js
sub
mov
test
pop
int3
mov
aaa
test
ins
(bad)
mov
mov
rcr
mov
les
push
mov
inc
test
jbe
push
fbld
idiv
jne
mov
or
sbb
movs
(bad)
jge
xchg
cli
div
outs
mov
xor
pushf
frndint
jb
jno
ins
(bad)
jp
mov
mov
mov
lahf
sub
jnp
jbe
imul
stos
sbb
stc
pop
scas
mov
data16
ret
xchg
div
aam
hlt
out
jbe
cli
cmc
mov
mov
xor
cmp
xor
mov
mov
fwait
sbb
dec
lods
retf
inc
fs
mov
xchg
ja
pop
test
(bad)
gs
ins
popf
push
scas
xchg
fdivr
mov
mov
ror
mov
mov
ja
aad
jbe
imul
xchg
sbb
js
add
enter
push
lock
mov
xchg
dec
push
jmp
fwait
(bad)
mov
mov
les
jp
mov
push
sbb
cmc
stc
pop
jmp
fwait
cmp
mov
push
(bad)
push
dec
sub
sub
gs
pop
leave
pop
dec
cmp
adc
imul
mov
(bad)
inc
and
jecxz
and
(bad)
dec
inc
movs
mov
fwait
inc
mov
test
dec
imul
stc
dec
in
mov
movs
xor
xchg
or
sub
clc
test
js
pop
mov
push
cld
or
test
add
mov
or
mov
or
jne
mov
stos
leave
js
inc
push
cmp
out
xchg
add
fidiv
loop
int3
jbe
and
ja
dec
sub
inc
enter
ds
xchg
jmp
jno
cdq
xchg
jmp
pop
aad
cdq
mov
xchg
fstp
cwde
(bad)
(bad)
push
adc
push
adc
out
pop
sbb
jne
adc
or
cmps
pop
push
stos
std
retf
or
push
sub
cmp
xchg
inc
leave
pop
xor
jns
and
iret
and
cmp
and
push
push
mov
es
jmp
dec
ins
push
adc
xchg
call
or
daa
outs
xor
or
mov
push
cmp
sub
(bad)
dec
dec
push
inc
jl
mov
cmc
call
cwde
push
sub
pop
fwait
dec
mov
jbe
sub
hlt
push
sub
pop
jbe
out
sub
sub
sti
int3
mov
mov
push
je
and
cdq
jbe
bound
sbb
pushf
daa
fst
ds
and
fnstsw
pop
inc
aam
mov
adc
jns
cmp
aad
enter
mov
pushf
jecxz
pop
dec
sbb
mov
movs
dec
mov
loop
adc
jle
xor
imul
cmp
loopne
rcr
pop
jmp
sub
stos
jl
lods
fwait
in
dec
fld
fidiv
inc
fist
lods
enter
test
movs
aaa
outs
xlat
js
xchg
ss
loop
imul
int
xor
sub
test
push
add
mov
(bad)
xchg
std
fild
dec
dec
(bad)
fist
mov
out
mov
add
call
fidiv
out
in
jecxz
sbb
pop
cmp
pop
clc
ja
repnz
jns
cmp
and
dec
fisttp
js
cwde
out
out
sub
or
adc
inc
and
into
jb
push
xor
imul
or
push
cmp
cmps
aam
cmp
xchg
sti
pop
cmc
cmc
xchg
xor
movs
loop
mov
xchg
xchg
mov
inc
or
push
in
fdiv
pop
loopne
in
aaa
test
iret
jo
mov
xor
call
test
push
mov
pusha
in
jb
adc
adc
adc
jns
retf
pop
js
ss
push
xor
sub
mov
bound
jb
inc
push
xchg
cmc
mov
repnz
cmp
cli
xor
and
push
clc
fwait
jmp
and
fcom
adc
mov
(bad)
mov
call
ss
dec
inc
retf
sub
xlat
inc
sbb
mov
aad
fisttp
pop
bndldx
adc
movs
(bad)
in
mov
push
mov
pop
sub
gs
push
cwde
mul
xchg
test
movs
jb
push
div
mov
fisub
pop
into
shl
stc
sub
sbb
jbe
push
sbb
retf
sbb
sub
cwde
in
ins
xor
retf
add
imul
xor
movs
xchg
sti
xchg
in
pop
mov
xchg
imul
sbb
data16
stos
add
loop
add
xchg
jo
mov
test
xchg
cmp
addr16
inc
arpl
jo
xchg
loope
test
inc
pop
push
dec
stos
mov
daa
fimul
cmp
iret
scas
(bad)
or
sub
dec
dec
sub
pop
imul
fcom
adc
mov
add
cmps
inc
mov
hlt
into
jo
push
js
std
cwde
jecxz
jno
ret
jne
jo
push
xchg
sub
push
sbb
cs
sub
mov
je
test
(bad)
ja
xchg
cmp
loope
scas
xor
mov
mov
aas
lock
outs
push
push
cdq
and
sbb
(bad)
ja
icebp
pop
push
sar
jns
dec
or
sub
sbb
inc
push
add
pop
dec
ds
pop
idiv
lods
in
ss
adc
inc
xor
mov
push
js
cwde
outs
int
cmp
pusha
icebp
jne
and
sbb
mov
lea
in
ds
jle
inc
in
mov
mov
dec
jns
mov
jns
xor
arpl
jae
xchg
lods
pop
dec
pop
push
push
or
sub
popf
stc
icebp
(bad)
loopne
and
and
(bad)
mov
push
xlat
out
mov
dec
dec
sbb
dec
pop
mov
push
cld
enter
clc
xor
pop
pop
fisttp
jp
fdiv
mov
iret
sub
adc
scas
fst
sbb
adc
add
mov
jns
cmp
pop
loope
shl
adc
pop
int3
es
lahf
sub
in
pop
loope
xchg
dec
push
xchg
outs
adc
ja
adc
cmp
add
jae
dec
mov
vunpcklps
push
imul
xchg
sbb
xlat
test
cmp
and
je
ins
mov
and
pop
or
pcmpeqd
shl
bound
sub
movs
pop
dec
test
pop
(bad)
movs
adc
pop
add
pop
cld
outs
test
imul
push
mov
pop
inc
dec
mov
mov
scas
(bad)
push
loope
test
fidivr
cmps
(bad)
imul
inc
mov
shr
repnz
pop
imul
scas
dec
pop
popa
push
fisubr
ret
add
lods
mov
inc
call
ja
dec
das
jne
popf
lds
shl
cmps
push
xchg
aaa
pop
fsub
pop
test
imul
push
mov
push
mov
jnp
pop
xchg
lea
popf
test
(bad)
mov
addr16
xor
iret
mov
adc
or
pop
leave
lods
inc
aas
inc
loope
in
mov
add
mov
or
inc
(bad)
dec
sahf
ins
out
mov
cmp
movs
jne
push
mov
jg
push
sbb
cmc
jnp
repz
mov
xchg
inc
lods
pop
sub
aad
add
cmp
sub
cmp
cdq
mov
mov
leave
inc
dec
shr
aaa
cmp
push
movs
in
call
push
stos
sbb
stc
mov
aaa
lds
lds
jae
shl
(bad)
mov
in
ret
addr16
push
jmp
push
cdq
pusha
gs
lea
stc
cmp
mov
pop
imul
(bad)
dec
lea
in
(bad)
push
addr16
or
je
dec
ja
(bad)
in
dec
leave
mov
xchg
pop
mov
sti
adc
jne
into
aaa
leave
add
add
iret
pop
sub
lods
cmps
jecxz
int3
test
xchg
dec
int
aad
jecxz
aam
daa
(bad)
lahf
test
push
leave
mov
jo
add
jp
inc
jle
mov
sub
out
mov
addr16
cli
aas
fstp
pop
mov
in
add
lock
and
outs
sub
sbb
mov
inc
mov
mov
jo
push
(bad)
(bad)
(bad)
movs
dec
je
int3
fcomp
ret
sbb
pop
repz
cdq
xchg
mov
pop
sub
push
in
enter
sub
mov
ficomp
mov
adc
div
call
adc
inc
std
pop
cmp
adc
mov
mov
aad
enterw
or
stos
or
bound
out
push
clc
xchg
das
ss
daa
push
dec
dec
pop
jmp
jmp
xchg
icebp
and
arpl
test
aaa
ds
mov
imul
dec
lods
jmp
in
cmp
sub
int3
or
std
adc
pop
or
pop
aaa
pop
mov
outs
mov
out
stos
es
dec
(bad)
jecxz
aad
mov
clc
cmovb
aam
push
ins
test
fimul
push
and
add
cmp
pop
lds
push
es
es
jno
mov
pop
mov
push
dec
stos
fadd
aam
pop
test
clc
xchg
(bad)
into
(bad)
dec
xor
(bad)
xchg
es
addr16
test
cmc
jnp
add
or
sar
lea
ret
mov
xchg
jg
push
pop
outs
inc
sub
mov
xor
adc
test
(bad)
clc
mov
sub
xchg
fidiv
gs
mov
movs
fcomp
out
js
or
mov
bound
mov
pop
mov
aaa
(bad)
pop
test
mov
mov
cmp
fsub
aaa
in
gs
push
test
mov
aas
sub
stc
xchg
aas
stos
imul
dec
jecxz
inc
gs
ins
pop
mov
ins
mov
mov
jg
mov
cmp
xor
rcr
lahf
ins
movs
jmp
call
in
inc
mov
or
or
sub
mov
js
imul
movs
cmp
push
test
jp
mov
or
xchg
sbb
cli
aam
imul
mov
mov
push
jmp
inc
scas
xchg
in
cdq
sbb
push
sbb
call
inc
xor
(bad)
imul
shl
mov
xor
popf
mov
mov
imul
imul
iret
mov
pop
in
xchg
sub
mov
push
jmp
es
push
xor
js
(bad)
or
js
xchg
pop
mov
mov
push
shl
mov
xlat
inc
jae
mov
data16
scas
test
push
or
pop
dec
repz
call
xchg
arpl
out
jge
out
sbb
arpl
or
adc
pop
ins
xchg
aad
dec
mov
(bad)
sbb
dec
mov
mov
sbb
sbb
adc
jb
clc
mov
cmp
cmp
add
aaa
ret
imul
fmul
sbb
push
sbb
out
inc
xlat
pop
pushf
(bad)
jbe
add
in
aaa
sar
dec
stc
cmp
inc
fstp
pop
adc
test
fdiv
pop
push
pop
dec
stos
sbb
push
ret
xor
cs
xchg
out
or
aas
pusha
xchg
xchg
pop
(bad)
(bad)
repnz
pop
popa
jl
and
fld1
movs
repz
fisubr
enter
cmp
test
popf
mov
sub
dec
sub
ds
jmp
mov
les
outs
call
in
lods
xchg
cmp
movs
or
(bad)
int3
xor
sahf
ret
bnd
push
mov
inc
inc
lods
push
or
in
in
test
mov
cmc
sub
out
fldenv
icebp
push
stc
les
xchg
sub
jge
or
xor
outs
mov
mov
dec
stc
xor
cmps
clc
lea
ja
popa
fs
arpl
pop
(bad)
dec
out
or
pop
push
push
pop
jp
out
je
in
cwde
clc
push
data16
and
mov
clc
push
(bad)
cmps
aaa
sbb
mov
push
push
out
inc
les
push
xchg
push
or
movs
idiv
scas
(bad)
fbstp
cdq
add
dec
and
xchg
cmp
clc
cmps
mov
inc
fstp
dec
mov
and
xlat
mov
cld
ja
jo
jno
daa
push
sub
sub
pop
addr16
idiv
enter
nop
push
fnstsw
scas
sbb
cwde
call
inc
ds
cmps
cmp
je
or
arpl
push
bound
rol
jle
inc
xor
push
push
imul
jmp
push
aas
mov
jle
call
scas
sbb
repnz
jmp
pop
jne
(bad)
clc
xor
clc
jno
aam
adc
xchg
cmp
enter
or
or
hlt
mov
sbb
test
pop
out
add
cmp
cmc
pop
cmc
and
or
loop
jle
cmp
jecxz
pop
mov
cdq
mov
jge
or
loop
mov
xchg
cmp
inc
arpl
stc
in
nop
adc
je
imul
inc
lods
jo
cmps
xchg
pop
cs
retf
loop
and
inc
ja
div
mov
pop
push
mov
push
int
test
cmp
retf
test
in
lock
or
loopne
xor
sub
stc
mov
adc
and
jbe
cli
cmps
in
mov
adc
sbb
mov
popa
sbb
loopne
mov
xchg
ins
stos
cld
je
loop
fnstcw
add
out
cwde
popa
xchg
clc
jo
cwde
sub
leave
enter
outs
lods
add
dec
or
retf
cwd
loope
stos
mul
ret
mov
sub
pop
or
fs
jb
pop
dec
add
ss
pop
sub
push
or
mov
lea
pop
popf
aaa
mov
icebp
jno
jmp
lock
push
out
mov
inc
cmp
aaa
imul
adc
cmp
stc
xlat
push
push
and
add
mov
mov
mov
mov
or
pop
mov
jl
or
addr16
addr16
ret
in
xchg
test
pop
and
in
dec
or
in
sar
addr16
scas
cli
inc
ds
sbb
push
adc
sub
imul
mov
sbb
push
daa
int3
sub
imul
and
sub
mov
cmp
dec
fdivr
out
sbb
jb
push
cli
jg
loopne
jg
pop
cmp
pop
cmp
movs
stos
repz
pop
inc
add
pop
pop
pop
cmp
jmp
pop
jnp
adc
lods
idiv
cmp
add
dec
mov
jnp
in
fninit
fmulp
cli
jp
or
jmp
leave
repnz
jns
mov
and
repnz
pop
jg
push
fidivr
lods
lahf
test
dec
popf
sub
loope
pop
push
fucomip
outs
sahf
add
jno
dec
call
retf
push
mov
or
dec
call
imul
out
ret
test
(bad)
jp
adc
cli
out
pop
jp
fchs
adc
cli
sub
fidiv
adc
xchg
xchg
or
repnz
sbb
mov
fbld
mov
outs
pop
pop
(bad)
fsub
add
pop
cli
sub
mov
mov
fimul
jl
fistp
cwde
(bad)
imul
test
mov
aaa
bound
fadd
adc
sbb
mov
sbb
xchg
jg
imul
leave
mov
js
sti
and
ins
inc
sub
iret
stc
adc
fsubr
test
scas
inc
sbb
rcr
xchg
sub
sbb
add
ror
sub
js
and
sub
pop
out
and
jmp
inc
retf
adc
adc
js
nop
test
out
mov
nop
fsubr
mov
js
ja
popf
imul
mov
dec
test
test
xchg
mov
call
int3
push
mov
mul
pop
pop
pop
ins
popf
imul
in
jne
nop
in
into
int
stos
out
sub
pushf
ss
nop
fst
pop
das
ret
mov
ret
sahf
nop
and
sub
cmps
clc
pop
clc
in
adc
hlt
lods
nop
std
fcom
mov
stc
or
sub
inc
nop
jmp
pop
or
rcr
jae
adc
nop
int
ss
in
cmp
jne
ins
xor
lahf
mov
stc
sbb
dec
and
adc
cmp
push
sbb
ins
xor
inc
push
(bad)
int
ret
nop
lea
adc
push
or
xor
jl
sbb
push
int3
cld
mov
popf
and
loopne
push
jbe
leave
fadd
add
out
jmp
push
or
jge
fld
cmp
fyl2x
pop
in
icebp
push
mov
mov
pop
popf
gs
adc
push
icebp
jno
mov
imul
add
imul
(bad)
jo
jno
push
fldcw
repz
jl
lods
jge
pop
icebp
jge
pop
jno
add
cdq
movs
mov
add
jno
xor
sub
icebp
mov
aad
push
cmp
sbb
push
jl
icebp
pushf
push
pop
cdq
aad
std
jno
icebp
add
shl
test
dec
adc
std
icebp
jge
frstor
cmp
es
icebp
jge
pop
in
js
and
sbb
jno
cli
mov
mov
mov
jmp
shl
cmp
add
loopne
adc
cli
push
jno
icebp
add
jge
js
sub
fs
push
fld
cmp
cmps
cli
xchg
pop
loope
add
pop
in
push
pop
repnz
xor
icebp
cmps
xor
inc
xchg
jmp
loope
jno
loope
es
cdq
fidiv
push
sbb
xchg
lods
cdq
xchg
add
push
sbb
lods
jmp
(bad)
stos
add
sti
xor
xor
xchg
jle
jge
stc
push
mov
xor
ret
sbb
adc
xor
stos
std
jns
mov
jno
icebp
popf
jb
or
pop
jno
jmp
data16
mov
imul
aad
imul
cmp
and
(bad)
jecxz
(bad)
cmp
jmp
movs
sbb
gs
dec
push
jmp
push
and
add
and
dec
in
mov
in
stos
in
imul
bound
cmp
mov
cmp
call
out
call
inc
clc
sub
and
scas
cmp
loop
lods
jbe
cmc
mov
icebp
dec
(bad)
retf
xchg
sbb
sub
adc
jmp
scas
inc
out
and
mov
push
(bad)
outs
loop
(bad)
out
(bad)
out
(bad)
out
cmc
sub
outs
sbb
ins
(bad)
repnz
jmp
push
lods
movs
jmp
outs
jl
hlt
in
ins
in
sub
lahf
outs
mov
inc
leave
jge
adc
movs
test
mov
(bad)
rcr
movs
inc
int
imul
imul
sbb
in
in
mov
in
in
and
cdq
ins
fwait
sbb
mov
fistp
es
test
ds
ins
dec
push
mov
mov
dec
sub
push
icebp
out
and
in
test
jne
mov
pop
das
into
iret
xchg
add
pusha
cmc
inc
ds
loopne
dec
das
out
cmp
fcmovnb
sub
sbb
adc
(bad)
cli
test
xlat
jne
mov
jp
icebp
(bad)
sar
xor
dec
cmc
xor
dec
xor
inc
call
rcl
repnz
cs
mov
dec
and
pusha
ror
mov
cli
dec
aam
add
dec
icebp
inc
inc
sub
add
pop
xor
popa
test
dec
test
ror
inc
inc
popa
add
lods
mov
pop
rcr
xchg
cdq
mov
xchg
xor
or
xor
rol
cdq
aam
xchg
xor
pop
inc
jp
loope
mov
test
inc
mov
test
xchg
leave
leave
rol
jmp
inc
hlt
dec
add
adc
inc
and
push
mov
(bad)
and
push
push
pusha
mov
push
les
(bad)
fadd
or
add
push
mov
rcl
mov
xor
jl
out
leave
xor
inc
add
dec
scas
mov
add
lods
jno
add
fdivr
pusha
adc
xor
sbb
dec
into
inc
popf
inc
aad
add
inc
in
or
pusha
mov
cmp
push
adc
les
xor
sub
add
pusha
jge
push
dec
mov
inc
dec
adc
or
push
xor
push
adc
into
fld
jno
ror
add
mov
adc
jno
fisub
sub
iret
adc
jns
cli
and
push
test
and
push
popf
mov
lea
lds
daa
mov
test
sbb
pop
pop
dec
in
cwde
and
sub
sub
fisttp
cdq
in
(bad)
sbb
retf
and
popf
or
lahf
in
imul
ins
jae
in
or
lahf
fmulp
iret
in
sub
inc
fwait
ins
and
dec
sbb
ins
cvtps2pi
push
(bad)
in
push
or
jmp
jg
pop
movs
dec
cmp
cmp
hlt
stos
clc
mov
inc
sub
inc
in
lods
jecxz
call
and
jmp
pop
pop
dec
jbe
push
inc
pop
jb
inc
jle
and
jns
in
and
jge
icebp
lods
les
ror
mov
mov
paddusw
test
outs
shr
jmp
bndldx
mov
or
in
mov
and
dec
pop
out
popf
pop
aas
xchg
repz
sub
adc
dec
pop
fistp
jnp
fild
(bad)
adc
xchg
and
ret
iret
out
mov
adc
xchg
lahf
psllq
ret
push
xchg
std
in
inc
sbb
xchg
mov
inc
fimul
adc
inc
cmp
les
rcr
stos
push
outs
jg
pop
bswap
cmp
dec
jnp
aam
test
pop
ja
div
pop
add
push
jns
cvtps2pd
pop
pop
sub
inc
aam
mov
aas
jg
ret
push
dec
or
retf
inc
push
pop
dec
aas
aas
aam
sar
xchg
sar
sbb
xlat
das
daa
je
stc
pop
inc
das
push
cwde
jmp
pop
xor
nop
repz
xchg
sahf
fist
pop
iret
pop
mov
imul
pop
xor
(bad)
aas
pop
aas
bound
mov
inc
iret
fidivr
xchg
mov
out
not
dec
(bad)
adc
pop
inc
fucomp
(bad)
xor
jg
pop
mov
inc
fiadd
mov
fist
dec
push
pop
push
mov
scas
sub
push
out
test
das
scas
sub
call
xchg
pop
shl
pop
cmp
outs
xlat
mov
scas
jmp
scas
xor
xor
lds
xchg
mov
call
scas
in
in
cmp
in
stos
cld
sbb
xchg
mov
in
scas
push
mov
fsubr
out
(bad)
dec
xchg
cmps
cmps
pmaxub
sahf
inc
pop
ins
ja
pop
mov
imul
imul
push
retf
mov
inc
mov
imul
div
xchg
pop
xchg
retf
inc
ret
pop
scas
fcomp
popf
sub
pop
fst
fbstp
inc
in
lea
lods
cmc
ins
push
jp
or
xchg
add
pop
jmp
adc
mov
imul
mov
inc
sbb
stos
repz
sub
cld
mov
cmp
mov
cmps
aaa
and
sti
std
or
stos
sbb
jge
in
cmp
pop
cmp
stos
sub
es
out
cmp
push
mov
xchg
mov
sti
in
out
(bad)
popa
pop
imul
xor
fcomp
add
je
mov
mov
stos
cmp
adc
and
mov
mov
aam
div
adc
cmp
push
clc
jnp
pop
call
mov
call
aam
mov
and
add
cwde
aad
jmp
(bad)
or
loopne
out
push
jg
fwait
jmp
(bad)
adc
sub
mov
aam
mov
push
xchg
pusha
sahf
call
push
mov
xor
pop
pusha
xor
cmp
cld
jmp
cmp
cmp
jl
or
cmp
adc
stos
andps
imul
rol
push
cld
sahf
jnp
stos
inc
stos
rol
cmp
jmp
inc
ja
xlat
sti
xlat
imul
ja
pop
stos
aaa
stos
inc
imul
fsubr
aas
jmp
stos
aaa
out
imul
(bad)
stos
aaa
mov
push
(bad)
mov
sti
sub
ja
push
stos
push
stos
xlat
dec
loop
xlat
mov
movs
dec
mov
in
bound
(bad)
xor
stos
aaa
(bad)
fidivr
mov
sub
jmp
jmp
or
mov
mov
(bad)
mov
stos
aas
pop
xchg
aas
push
stc
cdq
xor
xor
in
mov
mov
xlat
dec
ss
icebp
fst
mov
nop
xor
je
outs
add
loopne
xor
imul
aam
nop
pop
mov
nop
pop
lock
mov
out
xchg
adc
mov
out
mov
xchg
rol
nop
test
adc
popf
nop
paddq
mov
cli
push
fsub
fst
cmp
fdivr
jmp
ret
cmp
adc
push
rcr
nop
fwait
lods
bound
lock
jl
adc
add
je
(bad)
loope
push
mov
pop
nop
pop
in
push
xor
rol
adc
adc
push
or
mov
adc
rcr
test
iret
xchg
pusha
rcr
sub
adc
adc
hlt
mov
adc
dec
push
mov
push
js
lock
adc
clc
sar
jge
xor
jo
adc
aam
xchg
iret
test
shl
nop
sub
lods
and
pop
xchg
xor
nop
aam
adc
jge
int3
xchg
js
sbb
cmc
xchg
mov
nop
mov
mov
(bad)
adc
stc
fst
jl
repnz
(bad)
repz
sub
mov
and
pop
sbb
mov
inc
cld
lock
aaa
je
pushf
in
xor
cld
aam
pusha
stos
call
mov
push
mov
arpl
lock
or
push
nop
or
pop
test
xor
push
xor
mov
inc
loopne
push
nop
mov
adc
lock
adc
xchg
ds
nop
jbe
popf
js
mov
fstp
jns
jbe
in
nop
repnz
sbb
sbb
xchg
mov
fmul
adc
fsub
pop
imul
mov
test
xchg
out
sub
push
inc
pop
cs
stc
dec
cmps
jecxz
iret
cmps
fidivr
adc
xchg
loopne
and
cs
movs
mov
xchg
xor
pop
hlt
and
test
stos
jmp
lock
sub
and
mov
movs
jl
cmp
sub
aaa
in
mov
jno
adc
data16
mov
in
jbe
ins
retf
ins
adc
cs
pop
jo
xor
je
test
retf
dec
xchg
pop
sub
imul
test
retf
dec
push
fild
test
pop
lods
loopne
enter
pusha
jmp
je
or
dec
mov
pusha
mov
mov
ret
pop
icebp
mov
mov
adc
lods
cdq
movs
enter
and
ret
mov
or
xor
mov
xchg
and
inc
mov
adc
loopne
cmc
xor
adc
in
ins
sub
pop
add
sub
and
push
(bad)
loopne
loopne
mov
xchg
mov
sub
pop
mov
pushf
loopne
loope
loopne
pusha
fsubr
mov
mov
pop
ins
jl
adc
mov
sbb
mov
pushf
sub
and
je
pop
imul
mov
shl
sbb
ins
fndisi(8087
cwde
test
mov
pop
and
fcmovnb
mov
xchg
sub
mov
loop
daa
pop
sub
fs
sub
in
pop
sub
aad
and
and
add
pop
and
fs
fwait
ins
xor
push
pop
in
in
fld
fs
sub
in
jle
jecxz
ss
mov
cmp
xor
pusha
or
mov
xchg
sbb
into
adc
(bad)
aam
enter
addr16
sub
cmc
fcomip
push
fcomip
push
fcomip
push
fcomip
push
fcomip
push
fcomip
push
fcomip
push
fcomip
push
fcomip
push
and
pushf
adc
enter
in
fidivr
mov
test
bound
fnstsw
jp
push
add
test
in
mov
(bad)
popa
stos
nop
cmps
jmp
add
popf
out
mov
fcomp
les
arpl
dec
inc
in
dec
add
fnstcw
sbb
jbe
mov
jmp
mov
cmps
int3
inc
cmp
add
push
outs
cdq
and
cmps
sub
(bad)
cwde
ss
jl
xchg
pop
cmp
mov
inc
cdq
imul
push
mov
popa
adc
daa
aaa
(bad)
pop
lahf
inc
sti
push
jbe
and
inc
xchg
stos
pop
dec
imul
mov
imul
jmp
xchg
push
push
leave
xor
push
fisttp
push
shl
dec
into
and
push
out
pop
fmul
push
lds
pop
push
jmp
xchg
imul
retf
ins
cmp
fld
inc
xchg
sub
stos
push
stos
das
(bad)
cmp
xor
mov
push
aaa
fild
and
or
sbb
inc
dec
movs
pop
nop
aaa
mov
mov
push
(bad)
xchg
sub
mov
pop
and
scas
inc
push
mov
sub
sahf
inc
mov
mov
or
inc
sahf
aaa
mov
imul
les
mov
call
cmp
sbb
adc
js
stos
and
(bad)
and
cmp
scas
push
xchg
sub
ins
shl
cs
pop
nop
jne
mov
sahf
push
mov
push
pop
xor
aas
ss
jmp
mov
iret
aaa
pop
addr16
pop
mov
sub
mov
ss
jp
dec
int
fsubrp
dec
mov
cmp
cmp
ja
or
mov
stos
dec
mov
fidivr
mov
out
mov
push
sar
call
cmp
int3
jge
cmp
and
and
jle
push
mov
mov
mov
std
ds
or
and
and
adc
call
data16
fs
mov
fidiv
xchg
cmp
cmp
push
mov
mov
int
mov
cdq
dec
lock
push
mov
pop
mov
jl
mov
cdq
add
out
mov
add
iret
pop
jns
movs
ss
in
inc
in
ds
pusha
pop
mov
sbb
mov
dec
nop
dec
fimul
mov
ins
pop
jle
sahf
pop
jle
push
jle
push
pop
jle
imul
sahf
pop
jle
push
pop
jle
jno
cmp
ret
cmp
push
sbb
dec
das
aam
jecxz
jle
cmp
push
jnp
and
xor
cwde
movs
js
or
pop
imul
sub
enter
adc
sub
cmp
cmp
or
cmp
or
inc
mov
xor
cmp
cmp
jle
xor
push
leave
lock
das
sbb
aas
sbb
xor
pop
sbb
cmp
inc
add
pop
pop
or
call
add
sub
jg
pop
jg
sbb
jo
fidiv
aad
hlt
pop
lds
add
mov
cdq
sti
dec
shl
in
outs
fst
scas
pop
pop
push
lock
push
enter
out
clc
sub
ja
sub
shr
aam
sbb
mov
xor
adc
scas
out
xor
sti
jp
das
adc
das
cmp
shr
inc
dec
mov
mov
xor
cwde
aas
call
jg
retf
push
iret
jecxz
inc
sbb
in
lea
mov
mov
ins
mov
retf
sub
mov
cdq
es
jle
fcom
repnz
dec
mov
mov
sub
retf
jl
sbb
cmp
mov
mov
nop
lahf
(bad)
dec
repz
sbb
cmp
mov
aas
xchg
scas
jno
mov
push
(bad)
push
lods
and
push
cmp
cs
sbb
fwait
push
mov
mov
jns
movs
add
inc
scas
add
repnz
test
inc
pop
push
movs
in
jno
inc
setae
bound
cmp
in
xchg
sbb
hlt
lahf
lock
aam
mov
icebp
cmp
inc
int3
xor
xchg
enter
comiss
lock
iret
mov
jmp
ins
push
ds
std
add
mov
cld
or
add
mov
and
mov
dec
push
mov
push
xchg
and
or
lock
fldcw
push
mov
pop
mov
cs
push
lahf
ja
cmp
or
fstp
push
sti
ficomp
sbb
js
dec
sbb
xor
out
out
cmp
xchg
iret
inc
dec
xlat
dec
les
jge
call
mov
icebp
push
xor
lea
dec
int3
jp
pop
mov
clc
in
dec
sbb
js
sahf
cdq
fdivr
test
and
outs
sbb
stc
bswap
or
(bad)
ds
outs
add
push
inc
and
inc
sbb
or
(bad)
int
dec
cdq
or
push
push
or
jp
rol
mov
or
enter
cld
stc
mov
int3
pop
sbb
add
dec
outs
sahf
clc
ins
ins
cwde
mov
cmp
ins
sbb
ins
mov
ins
retf
out
push
ret
jmp
inc
jp
(bad)
out
sbb
pop
jmp
add
imul
cmp
pop
mov
add
jg
jns
or
sub
fstp
dec
outs
push
js
in
sbb
imul
cdq
std
ins
or
push
in
dec
test
out
sahf
inc
imul
cli
scas
jmp
dec
mov
sbb
fcomp
call
sub
sbb
xchg
xchg
dec
lahf
iret
and
es
idiv
mov
push
jmp
xor
stos
mov
cmps
inc
outs
daa
iret
xchg
stc
mov
jns
push
pusha
pop
jo
mov
call
xor
sub
addr16
aam
lahf
(bad)
cmp
pop
add
push
cmp
es
jno
leave
mov
ins
cmp
sahf
lock
push
popf
mov
jbe
push
clc
arpl
xor
mov
loop
cmp
fs
mov
sub
sub
adc
push
aam
lods
inc
in
add
jg
jne
jbe
xor
ja
mov
sub
add
adc
loopne
nop
lods
dec
xor
retf
xor
add
mov
(bad)
iret
xchg
push
imul
or
lods
push
push
(bad)
inc
pop
repz
mov
out
scas
pop
pop
adc
or
mov
ss
fist
jnp
fwait
adc
loope
push
cmp
outs
push
imul
shr
xchg
or
inc
pop
and
sbb
sbb
or
pop
xchg
push
stc
add
cmp
jo
mov
retf
popa
lods
and
and
dec
fs
add
loope
adc
lds
ins
adc
xchg
or
aaa
(bad)
ss
inc
arpl
inc
mov
cmp
add
ror
int3
ja
shl
cmp
int3
add
pop
pop
xchg
test
je
pop
les
fild
adc
add
jnp
sbb
jne
inc
enter
sub
(bad)
imul
call
jmp
stos
or
cdq
push
imul
push
pop
icebp
dec
fisubr
adc
add
add
adc
popa
sar
pop
popa
or
imul
mov
and
pushf
mov
test
pushf
into
add
adc
test
pushf
leave
mov
(bad)
jbe
test
push
(bad)
and
xor
mov
inc
cmp
inc
dec
lods
fnstsw
jbe
xchg
xlat
imul
das
mov
jg
cmps
cmp
in
push
loope
mov
jecxz
lahf
(bad)
cmp
adc
cli
test
xchg
in
inc
sti
fwait
xchg
and
or
sti
jns
pop
(bad)
sbb
xchg
sbb
js
pop
aad
hlt
test
sub
stos
jg
xchg
or
aad
sbb
cli
rcr
push
div
aam
aam
ins
xchg
scas
xor
jp
push
(bad)
jp
dec
sub
jge
adc
add
inc
test
lea
or
stos
js
popf
pushf
fldcw
sbb
fs
xchg
call
data16
enter
or
enter
inc
jnp
cli
xabort
loopne
aad
je
outs
frstor
push
cmp
(bad)
stc
jns
gs
(bad)
push
out
mov
add
xchg
jbe
cdq
jl
ja
jmp
je
out
jne
jmp
mov
(bad)
jns
cmp
xchg
test
dec
not
sub
jb
inc
sahf
enter
cmps
jne
mov
addr16
es
fs
mov
push
loopne
pop
push
int3
int
mov
dec
ins
adc
test
pop
and
out
add
push
add
popa
push
cmp
mov
fs
sti
mov
les
push
adc
push
fld
cmp
ins
loop
sub
push
scas
mov
jns
xor
mov
adc
test
mov
cmp
push
push
imul
dec
(bad)
xor
sub
adc
jns
pop
call
cwde
mov
mov
sub
fst
mov
(bad)
lock
sbb
out
xor
rol
dec
xor
jae
push
xor
(bad)
push
addr16
xor
or
jno
jg
or
push
std
jge
push
std
jb
aam
inc
dec
aad
sbb
mov
push
loope
add
icebp
or
and
adc
mov
ds
popa
cdq
fld
enter
les
push
fist
push
push
mov
into
daa
cmp
movs
jae
inc
test
loope
mov
outs
xor
test
jle
aam
imul
and
pushf
lock
cwde
sub
call
dec
loope
push
and
scas
ds
pop
jmp
enter
cmp
out
mov
test
fist
scas
pop
cmp
(bad)
jns
adc
dec
fistp
xor
add
sub
push
and
shl
jo
enter
adc
mov
aas
jge
xor
xor
jo
ret
pushf
push
inc
jae
jo
out
xor
or
cli
dec
xor
jo
mov
mov
xchg
out
fisub
sbb
sbb
mov
xor
jb
test
mov
inc
adc
pop
jg
add
loopne
enter
nop
inc
lea
jge
rol
aaa
aad
push
mov
out
xor
sahf
adc
loope
in
inc
xor
add
jge
(bad)
popf
out
add
add
jae
les
xor
push
inc
jle
mov
(bad)
xchg
add
mov
adc
popf
in
out
jo
push
jo
sub
(bad)
loope
test
rol
mov
je
xchg
sbb
aaa
or
bound
pop
and
clc
popf
xchg
jmp
nop
daa
mov
dec
jg
pusha
xor
data16
fiadd
jo
jno
nop
cmps
dec
movs
mov
push
add
outs
mov
xchg
in
ror
int3
rcl
push
mov
mov
adc
mov
movs
xor
and
add
cwde
cmp
xor
jne
in
pop
pop
rcl
gs
xchg
out
aas
add
cli
pop
jl
jno
inc
fiadd
rcl
pop
xor
fmul
cdq
push
adc
push
sbb
mov
int
sti
adc
xor
xor
clc
xor
pop
pushf
push
add
mov
(bad)
(bad)
loope
clc
and
in
test
mov
aad
xchg
pop
push
in
inc
adc
mov
call
out
hlt
adc
mov
iret
dec
repnz
sbb
push
scas
add
inc
jae
add
mov
xor
sub
pusha
xor
out
enter
mov
icebp
loopne
push
sub
fwait
xchg
mov
bnd
adc
cmps
xchg
(bad)
jbe
inc
stos
or
in
(bad)
adc
push
(bad)
in
mov
sbb
js
inc
mov
rcr
sub
mov
(bad)
mov
mov
and
inc
fist
mov
sbb
cli
daa
inc
xchg
repz
pushf
jo
mov
loopne
fwait
and
fwait
add
cmp
mov
lock
adc
mov
mov
pop
inc
mov
jge
add
add
(bad)
mov
add
shl
add
outs
nop
mov
icebp
out
jne
aam
pop
ficomp
pop
pop
pop
jno
gs
sar
bound
mov
and
mov
mov
dec
(bad)
jns
cmp
daa
dec
scas
jne
inc
xchg
mov
inc
in
add
shl
mov
loope
jo
das
int3
jnp
out
mov
adc
in
xor
xchg
out
xor
repnz
mov
dec
sbb
mov
push
cmp
xor
rcl
sar
jo
xchg
sar
sbb
mov
mov
jae
dec
jl
loop
out
retf
in
mov
xchg
jnp
popf
adc
bnd
es
inc
adc
mov
vmovntps
les
xchg
mov
mov
std
nop
nop
out
enter
inc
and
jmp
or
add
clc
imul
fsubr
cmps
dec
mov
dec
fdiv
loope
sahf
dec
mov
mov
pop
(bad)
into
sti
xor
retf
jb
in
scas
dec
dec
leave
xchg
iret
aad
mul
test
outs
ss
push
mov
(bad)
and
add
test
mov
dec
pop
mov
pop
push
xchg
adc
movs
scas
inc
pop
jl
leave
or
pop
cwde
fmul
sub
sbb
lds
gs
imul
int
push
sbb
imul
jmp
cs
fld
sti
js
clc
cmp
int
out
lea
and
stos
dec
mov
pop
jge
gs
dec
adc
sub
jmp
pop
push
and
cs
or
scas
sti
test
or
cmps
dec
cwde
int3
call
lds
fwait
cs
scas
jo
dec
mov
jle
jnp
retf
scas
xor
or
sub
(bad)
mov
mov
cmp
mov
xchg
inc
rcr
sub
shr
test
dec
std
dec
mov
je
push
shl
cmp
push
into
lahf
pop
int
push
mov
xor
jmp
push
xor
mov
rcl
shr
cwde
sbb
push
mov
int3
jnp
ss
es
or
je
pop
cwde
test
fdivr
jl
cmps
ins
xchg
(bad)
or
mov
inc
scas
cmp
ret
into
or
pop
mov
int
int
fidiv
sub
push
mov
lea
mov
mov
aas
cmp
or
pop
iret
sub
jge
jns
sbb
imul
out
out
add
lahf
dec
fldcw
cmp
std
jbe
out
cdq
popf
push
daa
push
cld
pop
mov
mov
sub
push
mov
cdq
jge
adc
push
(bad)
call
ds
sub
sbb
stos
in
(bad)
std
jae
push
in
add
sub
mov
push
jp
mov
and
dec
inc
inc
lds
inc
mov
adc
leave
xchg
retf
mov
lods
cwde
fwait
mov
inc
cmp
in
jl
ins
inc
dec
inc
jnp
adc
fadd
mov
rol
or
sbb
mov
sbb
xchg
idiv
xor
sub
ins
js
test
std
repz
jge
pop
sbb
imul
pop
sbb
inc
fs
or
and
dec
outs
dec
(bad)
ss
aad
fld
popa
inc
int3
(bad)
xchg
(bad)
enter
out
lds
sub
mov
js
in
movs
add
jg
mov
mov
pop
pusha
push
mov
jo
inc
add
xlat
pop
pop
jo
punpckhdq
sbb
and
int3
jle
push
fimul
jecxz
aam
outs
lahf
mov
lods
mov
in
dec
xlat
and
dec
push
pop
sti
pop
stos
mov
outs
xor
jmp
cmp
out
xchg
pop
test
call
cmp
xchg
shl
cdq
sbb
in
fldenv
mov
test
adc
push
dec
stos
scas
push
rcl
adc
mov
outs
sbb
or
dec
xor
and
dec
or
mov
ret
and
add
mov
jmp
retf
push
mov
imul
(bad)
adc
push
int
in
pop
sbb
sbb
push
call
ror
arpl
sbb
imul
aam
adc
push
in
adc
pusha
sbb
push
call
ror
push
sbb
sbb
fldenv
test
in
les
jmp
mov
imul
(bad)
push
mov
call
push
sbb
sbb
jmp
shr
mov
out
push
into
push
in
adc
bound
sbb
sbb
sbb
inc
fisub
test
in
les
pop
mov
imul
(bad)
push
mov
push
into
push
out
adc
shr
lea
in
push
int3
push
in
adc
fisub
sbb
fld
push
mov
push
out
adc
sbb
xchg
test
(bad)
sbb
jae
leave
test
test
sbb
or
movs
xchg
outs
stos
ja
daa
repz
sub
lahf
mov
add
lea
div
push
dec
es
dec
push
adc
xchg
push
hlt
retf
adc
daa
int
es
lea
fld
jnp
mov
out
cdq
movs
mov
ret
mov
jns
xchg
xor
clc
mov
retf
test
mov
push
shr
jbe
jmp
push
test
cmp
jmp
rcr
jmp
inc
adc
adc
aaa
cmps
shl
xchg
mov
movs
sbb
test
fucom
push
cmp
daa
inc
call
xchg
imul
cld
repnz
xor
inc
add
xchg
cmp
test
jl
pop
jge
stc
and
mov
stos
pushf
out
repz
xchg
fsub
mov
popa
xlat
adc
shl
shr
imul
ret
xchg
sbb
push
sub
or
shl
sub
dec
mov
cmp
jle
mov
inc
pop
stc
cmps
jmp
icebp
mov
scas
push
sub
cdq
data16
xchg
cld
cmps
clc
cmps
mov
and
sub
es
add
push
int
mov
enter
lock
pop
jmp
xor
push
xchg
add
mov
cmp
and
out
mov
or
mov
dec
pop
sti
shr
mov
inc
test
mov
push
jmp
fsubr
lahf
inc
fnsave
add
inc
push
imul
xchg
leave
push
enter
aad
cmp
xchg
mov
dec
test
mov
sbb
push
aad
retf
sub
lods
add
cmp
sti
mov
daa
loopne
push
lods
cmp
xchg
test
mov
addr16
mov
cmp
mov
xchg
ss
cmp
fisub
int
mov
mov
and
lock
mov
es
fmul
mov
pusha
jns
fistp
lods
adc
pusha
in
imul
sub
jb
mov
cmps
hlt
pop
loop
in
ja
jp
jmp
and
test
push
sub
dec
and
std
jg
retf
inc
mov
sub
xor
jg
movs
sub
push
scas
lds
push
push
out
stos
fldl2e
out
xor
shl
aas
fst
jp
jge
imul
test
stc
out
pop
loopne
movs
retf
xchg
pop
jge
mov
iret
mov
aaa
push
je
push
es
dec
push
mov
mov
push
pop
test
fistp
cmps
xor
inc
lods
lods
sub
icebp
enter
fs
neg
lahf
sbb
jne
sar
lock
aaa
in
dec
lahf
and
push
inc
add
inc
in
cdq
jmp
adc
push
clc
fidiv
or
pop
aaa
mov
lock
pop
push
pop
or
sbb
pop
dec
pop
cli
push
in
loope
push
(bad)
fsub
adc
std
pop
call
add
sub
mov
cmps
js
adc
ss
test
cmps
pop
call
inc
jns
lods
xor
push
mov
push
or
pop
xchg
pop
out
xchg
ss
pop
mov
inc
fstp
and
mov
inc
das
mov
xchg
(bad)
dec
sahf
outs
loope
push
or
jmp
les
adc
mov
popa
ret
scas
mov
clc
lock
sar
dec
jmp
xor
pop
test
push
sti
cmps
aam
cmp
lods
jb
jae
cmps
mov
popf
mov
and
inc
mov
push
inc
in
test
shr
sbb
add
mov
sbb
or
sub
clc
out
fiadd
clc
test
sub
adc
jecxz
sub
ret
jnp
stos
sbb
push
push
sbb
test
mov
ins
jg
mov
call
sbb
jns
cmc
ret
bound
push
and
call
ss
mov
repz
js
cwde
or
es
test
xor
dec
adc
mov
xor
jae
call
cmp
push
dec
cs
es
xchg
ja
imul
in
jecxz
xchg
jg
jg
cs
cmp
or
enter
scas
sar
test
aas
aaa
push
ror
jne
and
mov
lea
push
push
push
mov
call
mov
test
mov
jge
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
mov
jmp
mov
lea
push
push
lea
push
push
call
mov
test
mov
mov
jge
test
je
mov
push
call
mov
or
test
jmp
test
mov
je
mov
push
call
jmp
mov
mov
and
xor
push
pop
mul
seto
mov
neg
or
push
call
and
pop
mov
jmp
mov
call
mov
ret
mov
mov
test
jne
mov
or
test
je
mov
push
call
mov
jmp
mov
push
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
xor
cmp
jne
push
mov
call
mov
or
pop
cmp
jmp
mov
mov
mov
cmp
jae
mov
mov
imul
mov
add
mov
cmp
jbe
cmp
je
mov
cmp
jne
mov
add
and
lea
push
and
mov
add
mov
xor
push
push
push
mov
mov
push
add
movzx
push
push
push
movzx
push
push
movzx
push
push
xor
push
call
add
jmp
cmp
jne
or
mov
mov
mov
mov
mov
mov
add
mov
movzx
push
call
mov
lea
dec
not
and
mov
mov
lea
and
lea
and
mov
add
mov
xor
push
push
push
push
push
movzx
push
push
push
movzx
push
push
movzx
push
push
push
call
add
jmp
cmp
jne
push
lea
push
lea
push
push
xor
mov
mov
mov
mov
mov
call
cmp
je
mov
jmp
cmp
je
mov
lea
movs
movs
movs
movs
mov
and
push
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
cmp
jne
mov
test
jbe
mov
add
push
call
add
dec
pop
jne
push
call
push
and
mov
call
pop
pop
jmp
lea
mov
and
lea
movs
movs
movs
movs
mov
mov
imul
mov
mov
mov
mov
add
mov
movzx
push
call
mov
push
lea
mov
dec
not
and
mov
lea
and
lea
and
push
push
movzx
push
push
push
movzx
push
push
movzx
push
push
mov
jmp
movzx
cmp
jne
and
push
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
cmp
jne
mov
test
jbe
mov
add
push
call
add
dec
pop
jne
jmp
mov
jmp
cmp
jne
inc
mov
add
cmp
jne
mov
lea
mov
mov
add
mov
movzx
push
call
mov
lea
dec
not
and
mov
mov
lea
and
push
lea
and
push
push
movzx
push
push
push
movzx
push
push
movzx
push
push
mov
push
mov
add
call
add
add
mov
inc
mov
mov
jmp
cmp
jne
push
mov
call
test
mov
jge
xor
cmp
jbe
mov
add
push
call
inc
add
cmp
pop
jb
push
call
push
and
mov
call
mov
or
pop
pop
test
jmp
mov
mov
push
and
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
mov
xor
cmp
jne
cmp
jbe
mov
add
push
call
inc
add
cmp
pop
jb
jmp
push
push
push
call
push
push
push
push
push
call
mov
add
cmp
jge
push
call
pop
mov
push
mov
call
mov
or
pop
cmp
je
mov
push
call
mov
call
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
mov
mov
mov
xor
cmp
mov
je
mov
mov
lea
push
push
push
call
cmp
mov
jl
mov
mov
lea
push
push
push
call
test
jl
mov
lea
push
push
mov
mov
push
call
test
jl
mov
mov
lea
push
mov
add
push
push
call
mov
mov
push
call
mov
mov
push
call
push
call
cmp
pop
je
push
mov
call
jmp
xor
mov
mov
mov
push
call
mov
mov
cmp
je
add
push
push
call
push
call
cmp
pop
je
push
push
mov
call
jmp
xor
mov
mov
push
mov
call
mov
mov
mov
mov
mov
cmp
mov
jbe
mov
jmp
imul
push
call
xor
cmp
setne
mov
cmp
jne
jmp
mov
imul
push
push
push
call
mov
add
call
mov
call
jmp
mov
cmp
jne
xor
jmp
mov
lea
push
lea
push
push
push
call
cmp
jl
push
lea
push
mov
call
or
push
lea
push
mov
mov
mov
mov
mov
mov
call
mov
or
push
push
lea
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
cmp
jge
mov
mov
push
call
mov
jmp
mov
lea
push
xor
push
mov
mov
xor
push
mov
mov
mov
mov
mov
push
call
cmp
mov
jge
mov
mov
push
call
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
cmp
mov
jle
xor
push
call
pop
mov
cmp
mov
je
push
mov
call
jmp
xor
or
mov
inc
mov
mov
add
cmp
jl
mov
cmp
je
cmp
jle
mov
push
pop
add
sub
mov
mov
jmp
mov
mov
mov
cmp
mov
je
jmp
mov
lea
push
mov
add
mov
call
mov
mov
push
push
mov
call
cmp
jne
mov
call
mov
cmp
je
mov
push
call
add
dec
jne
push
call
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
mov
call
mov
xor
cmp
mov
mov
je
xor
cmp
je
inc
cmp
mov
jl
mov
mov
mov
mov
mov
cmp
je
mov
cmp
mov
je
mov
lea
push
mov
mov
call
mov
lea
cmp
je
inc
mov
xor
inc
cmp
jne
mov
mov
lea
push
push
call
test
je
lea
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
push
push
lea
call
mov
mov
push
push
push
add
call
push
push
movzx
push
push
lea
call
mov
push
lea
call
movzx
cmp
jg
je
cmp
jg
je
dec
dec
je
dec
je
dec
je
dec
je
dec
je
dec
jne
push
push
lea
call
lea
jmp
push
push
lea
call
push
mov
call
mov
mov
mov
mov
jmp
push
push
lea
call
lea
mov
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
lea
mov
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
mov
call
push
call
push
call
mov
mov
lea
push
push
call
jmp
sub
je
sub
je
dec
dec
je
dec
je
dec
je
dec
jne
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
mov
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
lea
jmp
push
push
lea
call
mov
mov
mov
push
push
push
push
call
push
push
push
push
push
call
jmp
cmp
jne
push
push
lea
call
mov
push
mov
call
mov
mov
mov
shr
lea
push
push
push
push
call
push
call
add
mov
lea
mov
mov
call
mov
mov
push
mov
mov
call
lea
mov
call
or
lea
push
call
cmp
jne
inc
mov
add
add
cmp
jle
cmp
jle
mov
xor
call
ret
lea
cmp
jne
mov
mov
push
push
push
call
cmp
jl
cmp
mov
jle
mov
mov
mov
mov
mov
cmp
mov
je
mov
imul
mov
mov
lea
push
mov
mov
call
mov
lea
cmp
je
inc
cmp
mov
jne
mov
mov
lea
push
push
call
cmp
jl
cmp
jne
mov
mov
push
push
call
cmp
jl
mov
lea
push
mov
call
lea
movzx
cmp
mov
mov
jl
cmp
jle
cmp
je
cmp
jne
or
push
lea
call
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
lea
push
mov
mov
push
mov
mov
push
call
push
mov
call
or
lea
push
call
inc
add
cmp
jne
inc
mov
add
cmp
jl
mov
cmp
mov
je
lea
push
lea
call
mov
mov
cmp
je
mov
mov
lea
push
push
push
call
test
jl
mov
push
mov
push
call
test
jne
inc
xor
inc
cmp
jne
mov
mov
lea
push
push
call
cmp
jl
cmp
jne
mov
mov
push
push
call
cmp
jl
mov
mov
mov
push
call
cmp
jne
cmp
jle
mov
mov
push
push
push
push
call
mov
cmp
mov
jge
mov
mov
call
mov
jmp
mov
cmp
jne
or
jmp
push
mov
call
mov
push
lea
call
xor
cmp
mov
jne
mov
cmp
je
mov
xor
cmp
setne
cmp
jne
call
mov
xor
cmp
setne
cmp
je
push
call
mov
call
mov
push
mov
call
mov
mov
cmp
je
push
mov
call
push
push
call
mov
imul
push
push
push
mov
call
add
or
cmp
je
push
push
call
xor
call
ret
push
mov
mov
test
je
mov
test
je
push
call
push
mov
test
je
mov
call
push
call
pop
and
pop
cmp
je
mov
call
mov
test
je
and
mov
push
call
mov
test
je
and
mov
push
call
pop
ret
push
mov
sub
push
push
mov
mov
xor
cmp
push
jne
jmp
mov
cmp
je
mov
call
cmp
mov
je
push
call
neg
sbb
inc
mov
je
call
push
call
mov
lea
push
push
call
lea
push
mov
push
call
mov
sub
mov
cdq
push
sub
sar
push
push
push
mov
sub
cdq
sub
sar
push
call
mov
push
call
mov
mov
mov
lea
push
push
push
call
test
jl
mov
mov
lea
push
push
push
push
call
cmp
mov
jne
mov
cmp
jge
cmp
je
mov
sub
mov
push
push
mov
sub
push
push
push
call
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
push
call
cmp
jl
mov
mov
lea
push
push
call
mov
mov
push
call
mov
cmp
jne
mov
jmp
mov
lea
push
push
push
call
mov
mov
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
push
call
mov
call
cmp
mov
je
mov
sub
mov
push
push
mov
sub
push
push
push
call
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
pop
ret
push
mov
call
mov
mov
call
mov
or
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
lea
push
mov
push
mov
call
add
mov
mov
call
ret
push
mov
call
mov
cmp
jne
push
call
pop
mov
mov
and
test
je
push
call
jmp
xor
or
mov
mov
call
call
ret
push
mov
mov
test
push
je
mov
mov
push
push
call
mov
mov
mov
call
and
mov
test
je
mov
mov
call
mov
push
mov
mov
mov
movzx
lea
mov
call
mov
mov
mov
push
push
call
mov
test
je
mov
mov
call
pop
pop
ret
push
mov
call
mov
mov
mov
xor
cmp
mov
je
mov
cmp
je
mov
mov
lea
push
push
push
call
test
jl
mov
cmp
je
lea
push
push
mov
mov
push
call
test
jl
mov
cmp
je
push
mov
push
call
mov
mov
push
call
mov
mov
push
call
jmp
mov
mov
cmp
je
mov
cmp
je
mov
push
push
call
mov
mov
cmp
jne
lea
mov
call
cmp
je
xor
cmp
jle
mov
mov
add
push
call
add
inc
cmp
jl
cmp
je
push
call
push
call
pop
pop
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
cmp
je
cmp
mov
jle
xor
mov
mov
mov
cmp
mov
je
lea
push
mov
mov
call
cmp
mov
mov
jne
mov
mov
call
mov
mov
cmp
je
mov
push
call
inc
mov
add
cmp
jl
push
call
mov
cmp
je
push
call
mov
cmp
je
mov
push
call
mov
call
mov
cmp
je
mov
call
push
call
pop
mov
cmp
je
mov
call
push
call
pop
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
or
call
call
ret
push
mov
push
push
push
push
xor
cmp
mov
mov
je
push
push
call
cmp
je
cmp
jle
mov
lea
push
call
push
lea
call
push
mov
add
push
call
pop
pop
mov
add
mov
call
cmp
jne
mov
cmp
jl
jmp
mov
imul
push
mov
call
jmp
cmp
jle
and
mov
mov
lea
cmp
je
push
lea
call
push
mov
add
push
call
pop
pop
mov
add
mov
call
test
jne
add
inc
cmp
jl
mov
and
jmp
call
xor
cmp
jle
mov
mov
mov
mov
jmp
mov
lea
push
mov
mov
call
mov
cmp
je
mov
test
jne
inc
add
cmp
jl
jmp
mov
imul
push
mov
call
pop
pop
pop
leave
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
xor
mov
xor
mov
mov
cmp
setne
cmp
jne
call
xor
cmp
setne
cmp
je
lea
push
call
mov
push
pop
lea
push
push
mov
mov
call
cmp
jne
mov
lea
push
call
lea
push
call
jmp
mov
lea
push
push
mov
call
test
je
movzx
mov
mov
cmp
jg
je
cmp
jg
je
dec
dec
je
dec
je
dec
je
dec
je
dec
je
dec
jne
push
mov
call
fld
fstp
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
mov
mov
mov
mov
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
fld
fstp
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
fld
fstp
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
cmp
jne
push
mov
call
push
push
lea
call
push
lea
mov
call
lea
jmp
push
mov
call
movzx
push
push
lea
call
push
lea
mov
call
lea
jmp
push
mov
call
mov
mov
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
push
lea
call
push
lea
mov
call
lea
push
mov
call
jmp
push
mov
call
movzx
push
push
lea
call
push
lea
mov
call
lea
jmp
push
mov
call
push
lea
call
mov
push
push
lea
mov
call
push
lea
mov
call
lea
push
call
mov
jmp
sub
je
dec
je
dec
dec
je
dec
je
dec
jne
lea
push
push
mov
call
test
je
movzx
push
movzx
push
movzx
push
movzx
push
movzx
push
movsx
push
lea
call
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
lea
push
push
mov
call
test
je
movzx
fldz
push
fstp
movzx
push
movzx
push
lea
mov
call
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
lea
push
push
mov
call
test
je
movzx
fldz
movzx
fstp
movsx
push
push
push
push
push
push
lea
mov
call
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
lea
push
push
mov
call
test
je
cmp
fild
jbe
dec
fdiv
jne
cmp
jne
fchs
fstp
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
push
lea
call
mov
push
push
lea
mov
call
push
lea
mov
call
lea
push
call
mov
add
mov
call
mov
lea
push
call
lea
push
call
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
mov
call
mov
xor
cmp
mov
mov
mov
jle
mov
mov
imul
mov
test
je
mov
test
mov
je
mov
shl
mov
lea
push
mov
mov
call
mov
push
lea
push
push
mov
call
add
lea
push
call
and
cmp
je
mov
inc
push
lea
push
mov
call
push
lea
mov
call
lea
push
mov
call
lea
jmp
mov
add
mov
lea
mov
xor
inc
mov
mov
mov
mov
test
je
mov
lea
push
push
push
call
test
jl
mov
mov
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
mov
mov
push
call
and
cmp
je
push
call
cmp
je
push
call
cmp
je
push
call
inc
add
or
lea
push
call
cmp
jne
inc
mov
cmp
jl
and
xor
call
ret
push
mov
call
mov
mov
mov
mov
xor
cmp
mov
je
cmp
jne
mov
mov
cmp
je
mov
call
push
call
pop
mov
call
push
lea
push
mov
call
push
mov
push
call
push
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
push
call
mov
mov
push
push
call
mov
mov
push
call
mov
lea
push
call
mov
mov
jmp
mov
cmp
mov
mov
je
mov
jmp
mov
mov
cmp
je
cmp
je
mov
mov
push
push
call
push
call
mov
cmp
pop
je
mov
mov
mov
cmp
jne
cmp
je
mov
cmp
je
add
cmp
je
mov
mov
push
push
mov
call
mov
cmp
je
cmp
je
dec
lea
mov
call
mov
sub
call
or
mov
call
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
test
jne
xor
jmp
mov
test
jne
xor
jmp
mov
push
push
push
push
call
ret
mov
mov
test
je
push
call
test
je
xor
inc
ret
xor
ret
push
mov
test
je
mov
test
je
mov
jmp
mov
test
je
push
call
test
jne
xor
pop
ret
test
je
mov
mov
call
test
jne
mov
test
je
test
je
xor
inc
pop
ret
mov
test
jne
ret
mov
test
je
jmp
push
push
call
and
ret
mov
test
je
mov
push
push
push
call
push
call
ret
mov
test
je
mov
push
push
push
call
push
call
ret
mov
test
je
mov
push
push
call
ret
push
mov
push
push
call
test
je
push
push
push
push
call
mov
call
pop
ret
push
push
mov
xor
test
je
push
mov
push
push
call
and
cmp
jne
cmp
je
push
mov
call
push
call
mov
push
push
call
test
je
pop
pop
mov
pop
ret
push
push
mov
test
push
je
mov
mov
push
push
call
push
call
mov
jmp
push
call
push
call
push
push
call
mov
test
je
cmp
je
mov
push
push
call
push
call
test
je
mov
push
push
call
push
call
mov
push
push
call
test
je
push
mov
test
je
push
call
test
je
test
je
mov
call
test
jne
push
push
push
jmp
mov
push
call
push
call
mov
test
jne
mov
jmp
push
push
push
call
mov
pop
mov
pop
pop
pop
ret
push
mov
test
je
push
mov
xor
push
mov
test
jne
mov
test
jne
push
call
push
call
test
jne
test
je
test
jne
mov
mov
call
call
push
call
cmp
je
push
call
test
je
pop
pop
mov
pop
jmp
pop
pop
pop
ret
push
mov
test
je
push
call
test
je
push
mov
cmp
je
mov
mov
test
jne
push
call
push
call
test
jne
jmp
mov
xor
test
je
cmp
jne
push
call
test
je
test
je
test
je
cmp
je
push
mov
call
test
jne
mov
push
mov
call
pop
pop
ret
push
mov
push
mov
call
test
jne
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
mov
mov
call
cmp
je
push
push
push
call
mov
test
je
cmp
jne
xor
pop
pop
pop
ret
mov
jmp
push
mov
mov
test
je
push
call
pop
ret
push
push
call
mov
neg
sbb
and
add
test
je
xor
cmp
push
setne
push
push
push
call
pop
ret
push
mov
test
push
je
push
push
call
test
jne
push
push
call
jmp
push
push
push
call
mov
test
je
mov
push
push
call
pop
pop
push
push
push
call
mov
test
je
cmp
jne
pop
pop
ret
mov
push
push
push
push
call
mov
shr
cmp
jne
movzx
jmp
xor
inc
ret
push
mov
push
and
push
mov
push
mov
push
mov
call
test
je
test
je
push
push
call
test
jne
push
call
pop
mov
mov
cmp
push
jne
test
je
test
je
push
call
push
push
call
mov
test
je
cmp
je
push
call
test
pop
je
push
jmp
push
push
jmp
test
je
push
call
test
pop
jne
test
je
cmp
je
push
push
call
test
jne
push
call
push
push
call
mov
push
call
test
pop
je
mov
call
test
je
push
push
call
pop
pop
pop
pop
pop
leave
ret
push
mov
mov
call
test
je
mov
test
push
push
mov
je
mov
lea
lea
push
mov
call
mov
mov
test
je
mov
cmp
je
mov
cmp
je
cmp
jne
xor
pop
pop
pop
ret
push
mov
push
push
push
mov
test
jne
call
mov
and
test
mov
je
mov
test
je
mov
jmp
mov
test
je
push
call
push
push
call
test
je
push
push
call
mov
jmp
inc
cmp
je
cmp
jg
push
push
call
test
pop
pop
jne
push
mov
call
mov
test
jne
mov
call
mov
test
je
test
mov
mov
je
xor
test
je
cmp
je
lea
push
lea
call
cmp
mov
jne
jmp
mov
jmp
lea
push
lea
call
mov
mov
cmp
je
test
je
test
je
cmp
jne
mov
mov
lea
push
lea
call
mov
push
push
call
test
pop
pop
je
test
je
mov
test
je
mov
jmp
mov
test
je
push
call
test
jne
jmp
cmp
je
mov
mov
call
test
je
cmp
jne
xor
pop
pop
pop
pop
ret
push
mov
push
and
push
push
push
push
push
call
mov
test
jne
mov
call
mov
test
je
mov
test
mov
je
lea
push
lea
call
mov
mov
test
je
cmp
je
cmp
je
call
cmp
je
cmp
jne
jmp
mov
xor
push
push
push
call
mov
xor
cmp
je
push
call
test
pop
je
mov
push
push
call
mov
cmp
je
cmp
je
mov
cmp
je
mov
jmp
mov
cmp
je
push
call
test
je
mov
jmp
cmp
je
mov
mov
call
test
je
cmp
je
cmp
jne
mov
inc
cmp
jl
xor
pop
pop
pop
leave
ret
call
int3
push
mov
call
mov
test
jne
and
jmp
mov
mov
mov
mov
mov
call
push
mov
call
mov
cmp
mov
jb
cmp
jbe
add
cmp
ja
test
je
mov
mov
cmp
jne
push
call
push
call
cmp
je
push
call
push
call
mov
test
jne
test
je
mov
test
je
cmp
je
mov
push
mov
push
call
test
jne
inc
jmp
cmp
je
cmp
je
cmp
jne
test
je
mov
test
je
mov
movzx
cmp
jne
test
jne
cmp
jne
test
je
xor
jmp
mov
push
xor
mov
call
and
mov
mov
sub
mov
je
dec
dec
je
sub
jne
cmp
jne
push
call
test
jge
cmp
je
push
push
call
cmp
jne
test
jne
movzx
cmp
jne
test
jne
cmp
je
push
push
push
call
test
je
mov
test
je
push
mov
call
jmp
push
push
call
movzx
cmp
jg
je
cmp
je
cmp
je
cmp
je
mov
test
jne
push
push
call
test
mov
je
mov
call
push
call
cmp
je
call
push
call
push
call
pop
push
mov
call
test
je
mov
call
push
call
push
push
call
pop
pop
push
call
test
je
call
push
call
push
push
push
call
mov
call
ret
test
jne
push
call
mov
xor
test
setl
mov
push
push
call
test
je
cmp
je
mov
mov
push
mov
call
jmp
mov
test
je
push
call
jmp
push
push
mov
call
mov
test
je
mov
and
push
call
push
push
call
pop
pop
jmp
cmp
jl
cmp
jle
cmp
jle
cmp
jne
test
jne
push
call
test
pop
je
mov
mov
call
jmp
push
call
xor
cmp
mov
jne
jmp
xor
push
push
call
mov
cmp
je
mov
call
test
jne
push
call
jmp
cmp
je
push
push
push
push
push
push
mov
call
add
or
jmp
mov
call
mov
ret
mov
push
push
call
test
jne
cmp
mov
push
je
call
jmp
call
mov
test
je
cmp
je
mov
push
call
cmp
je
mov
mov
push
call
jmp
mov
test
je
push
call
jmp
push
mov
push
call
mov
test
je
mov
mov
xor
push
mov
call
cmp
je
push
push
push
push
call
mov
jmp
push
mov
call
mov
mov
call
mov
and
test
mov
mov
jne
test
je
call
mov
and
mov
neg
sbb
not
and
and
mov
mov
mov
mov
call
ret
push
call
pop
ret
push
push
call
pop
pop
ret
mov
xor
ret
push
mov
mov
push
mov
cmp
jbe
mov
test
jne
call
add
cmp
jb
mov
test
push
mov
jne
mov
call
jmp
mov
push
call
test
je
mov
mov
pop
pop
ret
mov
xor
ret
cmp
push
push
mov
ja
mov
cmp
jbe
call
mov
xor
cmp
jb
ja
cmp
jbe
mov
push
mov
call
mov
xor
cmp
ja
jb
cmp
jae
mov
mov
pop
pop
ret
push
push
mov
test
mov
jne
xor
jmp
cmp
jne
call
mov
mov
cmp
ja
lea
cmp
ja
cmp
jae
sub
mov
mov
mov
push
add
push
push
mov
call
add
mov
pop
pop
ret
push
push
mov
test
mov
je
cmp
jne
call
mov
lea
cmp
jb
cmp
jbe
mov
push
mov
call
mov
lea
cmp
ja
mov
mov
push
push
add
push
mov
call
add
mov
cmp
jbe
mov
pop
pop
ret
push
mov
push
push
mov
mov
xor
xor
cmp
jne
mov
mov
jmp
cmp
jne
mov
add
mov
adc
jmp
cmp
jne
cmp
jl
jg
cmp
jbe
push
push
push
call
mov
xor
add
adc
cmp
jg
jl
cmp
jb
cmp
jbe
mov
push
mov
call
mov
pop
mov
xor
pop
pop
ret
push
mov
mov
push
xor
cmp
mov
mov
mov
mov
je
cmp
je
mov
push
call
mov
pop
pop
ret
mov
jmp
push
mov
cmp
push
mov
jne
xor
cmp
sbb
neg
jmp
cmp
jne
mov
add
mov
cmp
jbe
mov
xor
jmp
push
mov
test
je
mov
test
je
cmp
push
mov
jne
mov
lea
cmp
jb
cmp
jb
cmp
jbe
mov
push
mov
call
mov
mov
add
cmp
mov
jne
mov
mov
add
cmp
jae
mov
mov
add
mov
jmp
call
cmp
jne
mov
sub
mov
mov
add
cmp
jae
mov
mov
add
mov
sub
add
mov
sub
pop
jmp
xor
pop
pop
pop
ret
mov
ret
push
mov
call
mov
mov
mov
xor
cmp
mov
je
call
or
mov
mov
mov
mov
mov
call
call
ret
push
mov
push
push
push
push
call
mov
add
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
push
lea
push
push
call
add
lea
push
mov
call
mov
xor
cmp
sete
xor
call
leave
ret
push
xor
cmp
je
xor
cmp
pop
setne
ret
push
push
call
push
mov
call
mov
cmp
je
mov
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
cmp
je
push
jmp
push
push
call
cmp
mov
je
xor
inc
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
mov
mov
xor
jmp
call
test
je
jmp
test
push
push
jne
mov
xor
cmp
jle
cmp
jle
mov
push
call
cmp
jge
push
call
cmp
jl
xor
jmp
mov
pop
pop
ret
push
mov
sub
call
test
je
push
push
call
jmp
test
je
mov
jmp
push
call
test
je
lea
push
push
call
jmp
lea
push
push
call
test
je
push
lea
push
call
jmp
xor
leave
ret
push
mov
sub
push
push
call
test
je
mov
push
push
call
mov
xor
cmp
je
cmp
jne
cmp
jb
push
lea
push
push
push
push
push
call
mov
jmp
cmp
push
jne
mov
xor
cmp
je
cmp
jb
push
lea
push
push
push
call
test
je
mov
mov
push
mov
call
push
mov
call
lea
lea
movs
movs
movs
movs
xor
inc
cmp
mov
mov
jb
push
add
push
push
push
push
push
call
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
xor
cmp
push
push
mov
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
jbe
mov
jmp
cmp
mov
jbe
mov
mov
mov
mov
cmp
jae
mov
add
add
inc
mov
mov
add
cmp
jb
cmp
jae
mov
mov
sub
shl
add
sub
lea
mov
add
sub
dec
jne
cmp
mov
jne
lea
mov
cmp
jne
lea
mov
lea
push
call
mov
add
cmp
ja
mov
push
pop
jmp
cmp
jne
mov
mov
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
mov
cmp
mov
je
push
push
push
lea
push
call
mov
test
jl
lea
mov
mov
mov
cmp
je
push
push
push
lea
push
call
mov
test
jl
lea
push
mov
mov
push
push
push
call
jmp
cmp
jne
mov
cmp
je
push
push
push
lea
push
call
mov
test
jl
lea
push
mov
mov
mov
sub
mov
movs
movs
movs
push
push
movs
call
jmp
cmp
jne
mov
mov
movzx
test
je
test
je
test
je
push
call
mov
mov
mov
add
jmp
mov
jmp
mov
and
mov
mov
sub
mov
push
movs
push
movs
push
movs
push
push
movs
call
jmp
cmp
jne
mov
cmp
je
push
push
push
lea
push
call
mov
test
jl
lea
mov
mov
mov
sub
mov
movs
movs
movs
push
push
movs
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
push
mov
push
call
jmp
push
mov
push
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
mov
movzx
test
je
test
jne
mov
mov
and
jmp
cmp
jne
push
call
mov
mov
mov
add
jmp
cmp
jne
mov
jmp
push
call
lea
mov
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
push
movs
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
push
mov
mov
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
push
mov
mov
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
test
je
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
test
je
cmp
jne
mov
mov
cmp
lea
movs
movs
movs
movs
je
push
push
push
lea
push
call
mov
test
jl
lea
mov
mov
push
sub
mov
lea
movs
movs
movs
push
movs
call
jmp
test
je
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
mov
test
jl
mov
mov
jmp
test
je
cmp
jne
mov
mov
cmp
lea
movs
movs
movs
movs
je
push
push
push
lea
push
call
mov
test
jge
mov
mov
jmp
lea
mov
mov
push
sub
mov
lea
movs
movs
movs
push
movs
call
mov
jmp
cmp
je
mov
jmp
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
mov
mov
add
push
push
call
mov
test
jl
mov
mov
jmp
mov
mov
add
push
push
call
mov
test
jl
mov
mov
lea
push
call
mov
pop
pop
pop
leave
ret
lea
in
das
inc
add
xor
(bad)
xor
xor
inc
add
inc
add
xor
mov
xor
push
xor
mov
inc
add
xor
add
inc
add
xor
add
inc
add
inc
add
in
push
push
xor
cmp
push
push
jbe
mov
mov
lea
xor
push
push
call
test
jne
mov
mov
mov
mov
add
cmp
jb
cmp
je
inc
cmp
jb
xor
pop
pop
pop
leave
ret
mov
jmp
push
mov
call
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
push
push
call
mov
not
and
or
cmp
jne
xor
jmp
push
push
push
call
mov
xor
cmp
je
or
push
push
push
push
push
push
push
call
xor
inc
pop
ret
push
push
push
push
push
call
ret
push
push
push
push
push
call
ret
ret
cmp
mov
je
jmp
jmp
push
mov
push
mov
mov
test
jne
mov
call
mov
test
jne
push
push
push
push
call
jmp
push
push
push
push
push
call
pop
pop
ret
lea
ret
push
mov
call
mov
test
je
push
push
call
xor
pop
ret
push
mov
push
push
push
mov
push
push
call
mov
test
je
push
push
call
mov
test
movzx
mov
je
cmp
jb
mov
or
or
push
push
push
push
mov
mov
call
test
jne
or
mov
pop
jmp
or
pop
pop
pop
ret
push
mov
push
mov
mov
mov
mov
cmp
je
cmp
je
add
jmp
cmp
jne
cmp
jb
cmp
ja
mov
jmp
xor
mov
mov
pop
pop
ret
push
mov
push
and
push
mov
mov
lea
push
push
mov
push
push
call
test
jne
push
mov
push
mov
push
call
mov
mov
pop
leave
ret
push
mov
call
mov
mov
mov
pop
ret
mov
mov
mov
ret
ret
push
mov
call
cmp
jne
and
push
push
mov
call
push
push
call
pop
ret
mov
ret
push
mov
push
push
push
push
push
call
pop
ret
mov
test
jne
mov
jmp
mov
xor
ret
mov
test
jne
mov
jmp
and
mov
ret
lea
cmp
jne
push
push
push
push
call
test
jl
xor
ret
mov
push
mov
push
call
ret
mov
push
mov
push
call
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
push
push
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
call
ret
mov
push
mov
push
call
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
mov
push
push
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
mov
push
mov
push
sub
mov
push
lea
push
movs
push
movs
push
movs
push
movs
call
pop
pop
pop
ret
mov
push
push
push
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
push
mov
push
push
call
ret
mov
mov
push
push
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
mov
xor
ret
xor
inc
ret
mov
mov
cmp
jb
cmp
jbe
cmp
jb
cmp
ja
push
call
jmp
xor
ret
mov
and
ret
xor
ret
mov
test
je
cmp
je
cmp
je
xor
inc
ret
xor
ret
mov
test
jne
call
and
xor
inc
ret
mov
test
jne
call
and
xor
inc
ret
mov
ret
mov
ret
mov
mov
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
call
movzx
mov
mov
call
mov
call
ret
cmp
je
xor
cmp
sete
mov
test
je
call
mov
jmp
xor
push
push
call
test
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
push
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
push
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
push
call
ret
push
push
call
ret
push
push
call
ret
push
push
push
push
push
push
call
dec
dec
ret
push
mov
mov
cmp
je
mov
cmp
je
cmp
je
call
mov
mov
cmp
je
push
call
pop
ret
push
mov
mov
cmp
je
push
call
mov
pop
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
push
mov
push
call
mov
call
mov
mov
pop
ret
push
mov
mov
test
push
push
push
jne
xor
jmp
mov
push
mov
push
mov
mov
push
mov
mov
mov
sub
push
sub
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
mov
test
push
push
push
jne
xor
jmp
mov
push
mov
push
mov
mov
mov
push
mov
mov
sub
push
sub
push
mov
push
push
or
push
push
push
push
call
pop
pop
pop
pop
ret
push
call
mov
mov
test
je
mov
test
je
push
push
push
push
call
cmp
mov
je
test
je
push
call
test
jl
mov
push
mov
call
pop
ret
push
mov
push
push
mov
test
push
jne
call
push
call
xor
test
mov
jle
mov
push
mov
call
test
je
cmp
je
push
push
call
test
jne
jmp
push
push
call
cmp
je
inc
cmp
jl
xor
pop
pop
pop
pop
ret
push
call
jmp
mov
mov
test
je
push
call
ret
push
mov
call
test
je
push
call
mov
pop
ret
push
mov
call
mov
cmp
jne
mov
cmp
jne
push
pop
jmp
cmp
jne
xor
inc
jmp
cmp
jne
xor
mov
push
push
mov
call
jmp
push
mov
push
mov
call
pop
ret
cmp
jne
call
mov
test
je
test
jne
push
call
xor
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
and
push
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
lea
call
push
and
push
push
push
push
push
push
push
push
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
push
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
sub
mov
push
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
sub
mov
push
lea
push
movs
push
movs
push
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
push
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
push
and
push
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
and
push
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
push
push
push
mov
test
jne
mov
jmp
push
mov
push
lea
call
cmp
mov
mov
pop
je
push
push
call
xor
pop
leave
ret
push
mov
call
mov
mov
xor
mov
mov
mov
call
mov
add
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
call
mov
mov
mov
mov
mov
call
ret
mov
ret
jmp
mov
mov
push
push
mov
call
mov
call
mov
ret
push
mov
sub
push
mov
push
mov
call
mov
mov
test
je
mov
jmp
test
je
push
call
jmp
push
push
call
mov
test
je
push
push
push
push
call
test
je
mov
push
mov
lea
push
push
call
test
jne
test
je
push
push
call
test
je
test
je
xor
test
mov
jne
call
test
je
mov
lea
push
push
push
call
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
call
jmp
lea
push
push
call
lea
push
push
push
call
push
call
lea
push
lea
push
call
jmp
push
call
mov
mov
lea
push
push
call
lea
push
push
call
push
lea
push
push
push
call
mov
mov
mov
mov
add
cdq
sub
mov
sub
mov
cdq
sub
mov
sar
sar
sub
mov
sub
mov
mov
add
cdq
sub
mov
mov
cdq
sub
sar
sar
sub
cmp
jge
mov
jmp
add
cmp
jle
sub
add
mov
cmp
pop
jge
mov
jmp
mov
add
cmp
jle
mov
sub
add
push
push
push
push
push
mov
push
call
pop
pop
leave
ret
sub
push
push
push
xor
push
inc
xor
test
mov
mov
mov
je
call
test
je
xor
push
call
or
mov
call
mov
mov
jmp
push
push
push
push
push
call
test
jne
cmp
je
push
mov
call
push
call
xor
test
jne
cmp
je
cmp
jne
push
push
push
push
call
test
jne
push
push
push
push
call
inc
test
jne
mov
cmp
jne
call
test
je
cmp
je
mov
mov
cmp
je
cmp
jne
push
mov
call
push
call
xor
mov
mov
call
test
je
push
call
test
pop
je
mov
mov
push
push
push
push
push
call
test
jne
jmp
push
call
or
jmp
and
mov
pop
pop
pop
pop
add
ret
mov
mov
mov
test
je
and
mov
xor
push
push
push
push
call
ret
push
mov
call
push
call
pop
mov
mov
xor
cmp
mov
je
call
call
ret
push
mov
call
mov
mov
and
test
je
call
call
ret
push
mov
cmp
jne
push
call
test
mov
jne
push
call
test
mov
setne
mov
mov
pop
ret
push
mov
cmp
jne
push
call
push
call
mov
mov
mov
mov
pop
ret
push
push
call
mov
and
lea
push
call
push
call
mov
test
je
and
lea
push
mov
call
mov
xor
test
setne
test
jne
jmp
call
mov
call
call
ret
cmp
je
push
push
call
ret
push
mov
cmp
jne
push
call
push
call
mov
mov
mov
mov
pop
ret
push
push
call
mov
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
lea
push
mov
call
mov
xor
cmp
setne
cmp
jne
call
push
call
mov
mov
call
mov
call
ret
cmp
je
xor
cmp
sete
mov
test
je
call
mov
jmp
xor
push
push
call
test
je
push
call
ret
push
call
mov
mov
call
ret
jmp
push
push
mov
call
mov
test
jne
jmp
call
mov
call
movsx
shr
movsx
mov
mov
lea
pop
ret
push
mov
push
mov
call
test
jne
jmp
push
mov
push
mov
push
call
pop
ret
push
mov
call
call
mov
cmp
jne
cmp
je
push
call
push
mov
call
pop
mov
mov
and
test
je
push
push
push
push
push
call
jmp
xor
or
push
mov
call
mov
call
ret
push
push
push
call
push
mov
mov
call
mov
push
mov
call
mov
pop
pop
ret
push
call
mov
xor
test
je
add
jmp
ret
push
mov
test
push
mov
jne
xor
jmp
push
push
call
mov
push
lea
mov
call
push
mov
mov
call
xor
inc
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
test
je
push
lea
call
and
and
mov
pop
pop
ret
push
push
mov
call
mov
test
jne
jmp
call
cmp
je
mov
test
je
push
call
and
cmp
je
and
xor
pop
ret
xor
inc
pop
ret
push
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
push
push
call
mov
test
je
mov
push
call
mov
pop
jmp
push
mov
sub
push
push
push
mov
call
mov
xor
cmp
je
cmp
jne
call
cmp
jne
call
cmp
jne
call
test
je
push
call
mov
cmp
jne
mov
mov
cmp
je
mov
call
mov
mov
xor
inc
test
je
mov
push
call
and
test
je
call
mov
test
je
cmp
je
push
lea
push
push
call
mov
add
mov
mov
lea
push
push
push
push
mov
mov
call
mov
mov
push
push
call
mov
mov
call
mov
push
push
call
cmp
jne
mov
mov
call
mov
test
je
push
push
push
call
mov
call
mov
mov
call
pop
pop
pop
leave
ret
push
mov
mov
push
xor
cmp
jne
cmp
jne
xor
jmp
cmp
je
push
call
cmp
jne
jmp
push
lea
call
mov
cmp
jne
cmp
je
cmp
jne
push
call
jmp
mov
mov
call
mov
mov
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
push
mov
mov
call
test
jne
call
mov
lea
push
sub
push
mov
mov
push
mov
call
pop
leave
ret
push
mov
push
push
push
push
call
mov
mov
test
je
push
call
test
je
push
push
push
call
test
jne
cmp
push
jne
call
jmp
call
test
jne
push
call
jmp
push
push
push
call
test
jne
push
push
call
mov
test
jne
pop
pop
pop
ret
push
push
mov
mov
jmp
push
call
test
je
mov
push
mov
call
test
jne
cmp
je
push
call
mov
test
jne
xor
pop
pop
ret
xor
inc
jmp
push
mov
push
mov
call
test
jne
call
push
mov
push
mov
push
push
call
pop
ret
push
mov
cmp
je
mov
mov
call
test
jne
mov
call
pop
ret
push
push
push
mov
call
test
jne
call
mov
test
je
mov
push
call
test
jl
push
call
test
jl
push
call
test
jl
push
push
push
push
call
xor
inc
jmp
mov
call
neg
sbb
neg
pop
pop
pop
ret
push
mov
push
push
mov
cmp
jne
call
jmp
mov
and
lea
push
push
mov
push
call
test
jge
mov
jmp
mov
pop
leave
ret
push
mov
mov
test
je
push
call
test
jne
mov
call
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
jmp
lea
push
call
push
push
push
push
lea
push
call
test
jne
mov
call
pop
pop
pop
leave
ret
push
mov
push
lea
mov
mov
push
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
mov
push
push
lea
push
xor
call
mov
mov
call
cmp
je
push
call
test
je
mov
jmp
mov
and
cmp
jne
call
mov
mov
call
mov
mov
pop
leave
ret
push
mov
mov
push
call
mov
push
push
push
call
and
pop
mov
pop
jmp
push
call
test
je
mov
ret
xor
ret
push
mov
sub
test
jne
push
mov
mov
call
test
jne
lea
push
push
call
mov
mov
cmp
jne
mov
cmp
jne
push
push
call
push
call
test
je
mov
call
test
jne
mov
mov
call
test
je
push
mov
call
pop
leave
ret
push
mov
call
push
mov
call
mov
xor
xor
cmp
setne
mov
cmp
jne
call
lea
push
mov
pop
lea
rep
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jne
cmp
je
mov
mov
push
call
and
cmp
jne
lea
push
lea
push
push
call
push
mov
push
mov
push
call
cmp
mov
jne
push
lea
push
push
call
jmp
mov
add
push
push
call
mov
mov
call
mov
ret
mov
mov
push
lea
pop
lea
rep
call
ret
push
mov
cmp
jne
xor
inc
jmp
push
mov
push
call
test
je
cmp
jne
push
push
push
push
push
call
jmp
push
push
push
push
call
pop
pop
ret
push
mov
call
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
call
mov
test
je
mov
push
call
mov
test
je
cmp
jne
and
or
mov
call
call
ret
push
mov
push
mov
mov
test
je
lea
push
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
mov
cmp
push
mov
jne
push
mov
call
test
jne
call
mov
cmp
jne
push
jmp
push
call
push
call
test
je
push
push
call
test
je
mov
push
mov
call
jmp
mov
push
push
push
call
test
je
push
mov
call
test
jne
mov
call
pop
pop
ret
test
je
mov
test
jne
xor
ret
push
push
mov
push
jmp
mov
mov
call
test
jne
push
call
push
call
mov
test
jne
pop
pop
ret
mov
jmp
push
mov
test
je
cmp
jne
xor
pop
ret
mov
call
test
jne
mov
call
mov
test
je
mov
jmp
mov
mov
call
test
jne
mov
pop
ret
push
mov
push
push
push
mov
call
jmp
cmp
je
push
call
test
je
push
push
push
push
push
call
jmp
push
push
push
push
call
cmp
je
push
call
test
je
push
push
push
push
push
push
call
push
push
call
mov
test
jne
pop
pop
pop
ret
push
mov
call
push
call
test
jne
xor
jmp
mov
lea
push
mov
call
test
jne
push
call
push
mov
call
test
je
mov
test
je
push
lea
call
mov
test
je
push
lea
call
push
and
lea
mov
call
and
xor
test
setne
or
mov
lea
call
mov
jmp
push
mov
call
call
ret
cmp
push
mov
je
cmp
jne
push
push
call
test
jne
mov
call
pop
ret
push
mov
push
lea
push
mov
push
mov
call
test
je
mov
jmp
mov
call
pop
pop
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
mov
xor
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
cmp
je
push
mov
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
mov
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
mov
xor
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
cmp
je
cmp
je
cmp
je
mov
mov
sub
mov
push
lea
push
movs
push
movs
push
movs
push
movs
call
pop
pop
pop
ret
push
mov
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
pop
ret
push
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
push
mov
push
push
call
pop
ret
mov
cmp
push
push
jne
mov
jmp
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
mov
neg
sbb
and
add
ret
mov
mov
mov
mov
mov
xor
ret
push
mov
mov
cmp
jne
mov
jmp
push
mov
push
mov
push
push
push
push
push
push
push
call
pop
ret
push
mov
mov
cmp
jne
mov
jmp
push
mov
push
mov
push
push
push
push
call
pop
ret
mov
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
jne
mov
jmp
push
mov
push
mov
push
push
call
ret
mov
test
jne
push
call
push
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
cmp
push
mov
jne
push
call
test
je
mov
push
mov
call
jmp
push
push
call
test
jne
mov
call
pop
pop
ret
push
mov
push
lea
push
mov
push
mov
call
test
je
mov
jmp
mov
call
pop
pop
ret
mov
push
push
push
mov
call
test
jne
mov
call
pop
ret
push
push
call
push
mov
call
mov
test
jne
call
cmp
jne
push
call
test
pop
mov
jne
xor
jmp
push
push
call
test
mov
jne
push
call
and
jmp
push
call
push
push
push
push
call
pop
ret
push
mov
sub
mov
push
push
push
movzx
shr
xor
cmp
mov
mov
jne
cmp
jne
xor
jmp
lea
call
mov
push
lea
push
push
push
mov
mov
call
cmp
jne
xor
inc
jmp
mov
jmp
push
mov
call
cmp
jne
call
mov
cmp
je
push
push
call
test
jne
cmp
je
mov
push
push
push
mov
push
call
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
mov
push
push
mov
call
movzx
mov
mov
push
mov
mov
call
test
jne
call
mov
cmp
jne
xor
inc
jmp
push
push
call
test
jne
mov
push
lea
push
movzx
or
push
push
mov
mov
mov
mov
call
pop
pop
pop
leave
ret
push
mov
push
call
test
je
mov
call
test
je
mov
jmp
push
push
call
test
je
push
call
jmp
push
push
call
pop
ret
test
je
mov
test
jne
xor
ret
push
mov
push
jmp
mov
push
call
test
jne
push
call
pop
ret
push
mov
call
mov
test
je
cmp
jne
mov
call
mov
call
test
jne
push
push
push
push
push
push
call
mov
pop
jmp
push
mov
call
mov
test
je
cmp
jne
push
mov
call
mov
call
test
jne
call
push
push
push
push
push
push
call
pop
ret
push
mov
call
cmp
jne
mov
call
mov
call
test
jne
call
push
push
push
push
push
push
call
mov
call
pop
ret
xor
push
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
xor
inc
ret
xor
ret
cmp
jne
xor
ret
mov
mov
push
push
call
ret
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
inc
jmp
xor
ret
push
mov
cmp
push
push
push
je
mov
test
je
mov
test
jne
mov
jmp
push
and
call
test
je
mov
add
mov
push
call
mov
xor
jmp
mov
xor
test
sete
test
mov
jne
push
push
call
test
pop
pop
je
cmp
je
push
push
push
push
call
test
je
cmp
jne
test
jl
add
mov
test
jne
mov
jmp
mov
pop
pop
pop
pop
ret
mov
mov
mov
mov
call
jmp
mov
inc
mov
ret
mov
dec
push
mov
jne
test
je
mov
push
call
mov
pop
ret
push
push
push
push
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
push
mov
push
push
push
mov
mov
call
test
jne
push
mov
call
mov
test
je
push
mov
test
je
push
call
test
je
mov
call
cmp
je
test
mov
mov
jne
and
jmp
mov
mov
lea
push
push
push
push
call
pop
pop
pop
leave
ret
push
mov
cmp
push
jne
cmp
je
cmp
je
cmp
jne
mov
call
test
je
push
call
push
call
mov
test
je
call
push
call
cmp
je
mov
call
test
je
push
call
xor
inc
jmp
xor
pop
pop
ret
push
mov
call
mov
mov
push
push
call
and
and
mov
mov
xor
inc
sub
je
sub
je
sub
je
sub
jne
push
call
mov
lea
push
lea
push
push
call
push
push
push
push
push
call
push
mov
lea
push
push
call
mov
call
ret
push
push
push
call
push
push
call
push
call
push
call
jmp
push
call
mov
shr
push
movsx
push
push
call
xor
test
sete
jmp
push
call
push
mov
call
push
push
push
call
test
je
push
push
push
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
call
mov
mov
call
mov
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
mov
push
mov
mov
call
mov
xor
test
setne
test
jne
call
cmp
je
push
push
push
push
call
jmp
mov
mov
mov
call
test
movzx
mov
jne
mov
test
jne
test
jne
cmp
jne
push
pop
push
push
lea
push
call
lea
mov
push
mov
push
push
call
add
test
mov
je
push
push
call
movzx
cmp
jne
jmp
push
lea
call
and
push
mov
call
mov
mov
call
mov
mov
call
mov
push
push
push
mov
call
cmp
je
mov
mov
and
or
cmp
je
push
push
call
jmp
push
lea
push
push
call
test
je
and
lea
push
push
call
test
pop
pop
je
push
push
call
test
mov
je
mov
push
push
call
test
jne
push
push
push
call
push
push
call
cmp
jne
push
call
push
push
push
call
push
push
push
push
call
cmp
mov
je
push
call
and
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
push
mov
call
mov
test
jne
call
push
mov
cmp
je
cmp
jne
call
push
push
push
push
call
test
mov
jne
call
mov
pop
pop
ret
push
mov
sub
push
push
mov
test
mov
je
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
lea
mov
mov
push
mov
call
test
jne
mov
mov
call
xor
jmp
push
call
push
push
push
push
push
push
push
push
push
push
push
push
call
add
mov
call
test
jne
mov
mov
call
xor
test
setne
pop
pop
leave
ret
push
push
mov
mov
push
call
test
je
mov
mov
call
mov
xor
push
push
push
push
call
push
push
push
push
push
push
call
mov
call
mov
cmp
jne
jmp
push
push
push
push
call
push
push
push
push
push
push
call
call
cmp
je
push
push
push
push
call
pop
pop
pop
ret
push
mov
call
mov
xor
mov
mov
mov
cmp
mov
jne
push
mov
push
call
test
je
mov
jmp
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
jne
jmp
cmp
mov
jne
push
call
push
push
push
call
cmp
jne
mov
shr
push
movsx
push
push
call
test
jne
mov
test
je
cmp
jle
cmp
jb
cmp
jbe
cmp
jb
cmp
jbe
lea
cmp
ja
mov
mov
lea
push
push
push
push
call
test
jne
mov
mov
call
mov
xor
push
lea
mov
and
call
imul
mov
add
cmp
mov
jne
mov
mov
cmp
jne
mov
lea
mov
call
test
je
cmp
jb
jmp
mov
mov
mov
mov
mov
jmp
cmp
push
push
jae
push
push
call
test
mov
je
mov
mov
lea
call
mov
mov
mov
lea
cmp
ja
jmp
mov
mov
push
push
jmp
mov
mov
cmp
je
push
push
push
add
push
call
mov
test
jne
mov
call
mov
mov
cmp
jne
mov
and
lea
call
or
lea
call
xor
call
ret
movsx
shr
movsx
push
push
jmp
push
call
push
mov
call
jmp
push
jmp
mov
call
jmp
push
call
push
jmp
mov
shr
push
movzx
push
push
call
push
mov
call
jmp
push
push
call
jmp
push
jmp
lea
call
mov
lea
mov
mov
call
mov
mov
push
mov
mov
call
test
jne
mov
test
je
push
lea
call
test
je
mov
lea
push
push
lea
push
mov
call
and
and
lea
mov
mov
call
jmp
lea
call
mov
push
mov
lea
push
mov
mov
call
and
mov
lea
mov
call
jmp
mov
shr
push
push
call
push
movzx
jmp
mov
shr
push
movzx
jmp
push
call
push
mov
shr
jmp
mov
call
jmp
push
jmp
mov
shr
push
movzx
jmp
mov
shr
movsx
push
movsx
jmp
mov
shr
push
movzx
jmp
push
call
push
push
call
push
xor
cmp
sete
jmp
push
call
jmp
push
call
jmp
mov
shr
movsx
push
movsx
push
push
call
jmp
push
jmp
push
call
push
jmp
mov
shr
push
movzx
jmp
movsx
shr
movsx
push
push
push
call
jmp
push
push
call
push
jmp
mov
shr
push
push
call
jmp
mov
movsx
shr
cmp
movsx
mov
mov
jne
push
call
push
push
push
jmp
push
push
jmp
push
push
mov
call
jmp
push
mov
call
jmp
mov
push
shr
push
movzx
push
jmp
movsx
shr
movsx
push
push
push
mov
call
jmp
push
push
mov
call
jmp
movsx
shr
movsx
push
push
mov
shr
push
movzx
push
mov
call
mov
jmp
mov
call
test
mov
je
jmp
mov
lea
mov
call
mov
push
push
mov
call
mov
mov
test
je
mov
mov
or
lea
call
xor
inc
jmp
nop
jo
inc
add
outs
inc
add
outs
inc
add
outs
inc
add
outs
inc
add
jo
add
outs
inc
add
outs
inc
add
jb
add
jno
add
jno
add
jo
add
jo
add
jo
add
jo
add
jo
add
outs
inc
add
outs
inc
add
jo
add
jo
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
inc
add
jno
add
add
add
jno
add
jno
add
jb
add
inc
add
jno
add
jno
add
jno
add
jno
add
jno
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
outs
inc
add
in
mov
sub
mov
cmp
push
ja
je
cmp
jb
cmp
jbe
cmp
je
cmp
jne
mov
mov
mov
mov
mov
xor
push
lea
push
movzx
or
push
push
call
jmp
mov
xor
push
shr
push
or
push
push
call
test
je
mov
xor
inc
cmp
je
mov
jmp
cmp
jb
cmp
jbe
cmp
jne
push
add
push
push
push
call
jmp
lea
cmp
ja
mov
push
mov
add
push
mov
lea
push
xor
push
push
mov
call
cmp
pop
jne
xor
pop
leave
ret
and
push
mov
cmp
je
mov
mov
push
call
push
push
mov
call
pop
ret
push
mov
call
mov
xor
cmp
jne
mov
jmp
push
mov
mov
mov
call
pop
mov
mov
cmp
mov
je
push
call
jmp
xor
jmp
mov
call
mov
ret
mov
xor
mov
cmp
je
mov
mov
mov
call
ret
push
sub
lea
mov
xor
mov
push
mov
call
and
call
mov
call
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
call
push
lea
call
mov
mov
xor
push
push
lea
push
mov
mov
call
test
je
lea
push
push
push
push
lea
push
push
call
add
jmp
push
push
push
lea
push
push
call
add
push
push
mov
push
call
lea
mov
call
mov
push
mov
call
mov
ret
push
mov
call
mov
call
mov
call
mov
call
and
mov
call
mov
call
test
jne
call
push
push
push
push
call
test
jne
push
push
push
call
or
lea
call
call
ret
push
mov
call
mov
call
mov
call
mov
call
and
mov
call
mov
call
test
jne
call
push
push
push
push
call
test
jne
push
push
push
call
or
lea
call
call
ret
mov
ret
push
mov
cmp
je
push
push
mov
push
lea
push
push
call
add
cmp
pop
ja
test
jne
pop
ret
mov
test
je
mov
xor
inc
jmp
pop
jmp
push
mov
call
mov
cmp
mov
jne
mov
call
mov
test
jl
mov
test
jne
lea
push
call
mov
test
jl
and
mov
mov
and
lea
push
push
push
call
test
jl
mov
lea
push
lea
push
mov
mov
push
call
push
push
push
call
mov
mov
mov
or
xor
test
je
mov
push
call
jmp
push
push
push
call
mov
mov
xor
mov
call
ret
push
mov
call
mov
lea
push
push
push
call
add
test
jne
push
call
test
pop
jne
xor
jmp
call
cmp
je
push
call
and
call
mov
lea
push
mov
call
push
mov
call
or
push
call
xor
inc
call
ret
push
call
push
push
call
int3
push
mov
sub
push
mov
push
xor
cmp
mov
mov
je
push
movzx
cmp
je
inc
inc
movzx
movzx
inc
inc
mov
add
cmp
mov
je
cmp
jne
mov
jmp
cmp
jne
mov
cmp
jne
push
pop
xor
lea
rep
or
push
lea
mov
call
mov
mov
lea
push
push
movzx
push
push
mov
push
call
cmp
jne
and
mov
add
call
xor
jmp
cmp
je
cmp
jne
push
movzx
push
push
movzx
push
mov
push
call
cmp
jne
mov
add
cmp
jne
cmp
pop
je
mov
push
push
push
push
push
push
call
mov
pop
pop
leave
ret
mov
push
mov
push
mov
call
movzx
mov
mov
push
push
call
test
mov
jne
push
push
call
mov
push
call
pop
pop
ret
push
mov
sub
call
mov
mov
not
and
jne
xor
inc
jmp
push
push
push
push
xor
lea
push
push
xor
call
mov
add
mov
call
test
mov
push
mov
mov
pop
mov
mov
je
lea
push
mov
mov
call
test
je
inc
test
je
or
lea
push
mov
call
test
je
or
test
je
lea
push
mov
mov
mov
call
test
je
or
test
je
push
push
lea
push
mov
mov
call
test
je
or
test
je
push
push
lea
push
mov
mov
call
test
je
or
test
je
push
lea
push
mov
call
or
and
test
je
push
lea
push
mov
call
or
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
or
mov
mov
mov
and
cmp
jne
or
mov
or
mov
and
pop
sub
pop
neg
sbb
inc
pop
leave
ret
push
mov
cmp
jne
push
call
mov
xor
inc
pop
ret
push
push
push
push
xor
xor
cmp
mov
je
call
mov
push
push
push
call
test
je
push
push
call
mov
test
je
push
call
mov
push
mov
call
test
mov
je
test
je
push
call
mov
pop
pop
pop
pop
ret
push
mov
mov
test
jne
call
mov
push
xor
inc
test
je
mov
mov
mov
mov
jmp
mov
add
cmp
push
ja
jmp
call
jmp
call
jmp
push
call
jmp
push
jmp
mov
test
je
push
push
call
jmp
mov
test
je
push
push
call
jmp
mov
test
je
push
push
push
call
jmp
mov
test
je
push
push
push
call
jmp
mov
test
je
push
call
xor
cmp
sete
and
jmp
mov
test
je
push
push
call
jmp
push
jmp
push
call
mov
mov
jmp
xor
pop
pop
pop
ret
lea
dec
jge
add
inc
add
inc
add
inc
add
inc
add
jge
add
jge
add
jge
add
jge
add
jge
add
in
mov
cmp
push
mov
jne
call
cmp
jne
call
call
push
mov
push
mov
push
mov
push
call
jmp
cmp
push
push
jne
mov
and
test
je
mov
mov
mov
call
mov
jmp
cmp
jne
mov
jmp
cmp
je
cmp
jne
cmp
jne
cmp
jne
cmp
je
jmp
mov
test
je
push
push
call
test
pop
pop
je
mov
mov
mov
add
mov
test
jne
mov
test
jne
mov
jmp
cmp
je
mov
shr
movzx
mov
jne
mov
mov
call
jmp
push
push
push
push
call
test
jne
call
mov
cmp
jne
xor
pop
pop
pop
pop
ret
push
push
push
push
push
push
push
call
jmp
mov
ret
mov
ret
mov
ret
mov
ret
push
push
mov
call
mov
mov
call
test
je
mov
call
push
call
mov
push
mov
call
pop
ret
mov
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
ret
push
push
push
push
push
call
ret
push
mov
call
mov
xor
inc
xor
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
lea
mov
test
je
call
and
pop
ret
call
mov
mov
push
mov
call
ret
call
mov
mov
push
mov
call
ret
mov
ret
push
push
mov
mov
xor
cmp
je
cmp
jne
mov
cmp
jb
call
mov
neg
sbb
and
add
or
push
push
push
call
jmp
cmp
je
cmp
jne
push
mov
call
cmp
jne
push
call
push
call
push
push
push
push
call
pop
push
mov
call
mov
pop
pop
ret
push
mov
mov
test
je
cmp
jne
mov
cmp
jb
call
mov
neg
sbb
and
or
push
push
push
call
jmp
mov
test
je
push
mov
push
push
push
push
call
test
je
mov
push
push
push
push
call
pop
pop
ret
push
mov
test
push
push
mov
jne
call
mov
test
je
cmp
jne
mov
mov
push
push
push
call
mov
and
cmp
jae
push
push
or
push
push
mov
call
jmp
mov
test
je
push
push
call
pop
pop
pop
ret
push
lea
sub
mov
xor
mov
push
push
push
call
movsx
shr
cmp
movsx
mov
jle
cmp
jg
jmp
cmp
jle
push
pop
lea
cdq
sub
lea
sar
mov
sar
mov
shl
add
sub
cmp
jle
push
pop
push
pop
cmp
jle
mov
push
lea
push
push
call
mov
add
sar
add
imul
lea
lea
mov
mov
mov
movzx
mov
shl
inc
not
movzx
mov
mov
add
dec
jne
lea
push
push
push
push
push
call
test
pop
pop
mov
pop
jne
push
push
call
mov
mov
xor
call
add
leave
ret
push
mov
mov
push
xor
xor
cmp
setne
push
mov
call
cmp
je
cmp
jne
mov
cmp
jb
call
cmp
jne
call
cmp
je
push
mov
push
push
push
push
call
pop
pop
ret
push
push
mov
test
mov
je
cmp
je
cmp
je
call
cmp
je
push
call
add
cmp
jle
push
call
test
jle
cmp
jne
mov
jmp
push
and
call
push
call
pop
pop
ret
cmp
je
mov
mov
jmp
xor
inc
ret
cmp
jne
call
lea
cmp
je
mov
mov
mov
jmp
ret
cmp
jne
call
mov
mov
jmp
mov
mov
test
jne
call
add
cmp
jne
mov
push
call
jmp
mov
mov
push
mov
call
ret
cmp
je
mov
mov
jmp
xor
ret
mov
test
jl
cmp
jl
call
mov
lea
ret
mov
push
push
push
push
call
ret
push
mov
mov
test
jne
call
mov
mov
cmp
jb
push
mov
add
cmp
jb
call
lea
push
call
mov
mov
push
mov
call
test
jne
mov
mov
push
call
xor
pop
inc
pop
ret
push
mov
sub
push
push
push
lea
push
xor
mov
push
push
push
mov
push
mov
mov
mov
mov
call
test
jne
lea
push
lea
push
push
push
push
push
push
push
mov
push
call
test
jne
lea
push
lea
push
mov
push
push
push
push
push
push
push
call
cmp
mov
je
push
call
cmp
je
push
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
xor
push
mov
call
mov
cmp
jne
xor
jmp
lea
push
lea
push
push
push
push
push
push
push
push
call
push
call
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
cmp
push
mov
je
push
call
mov
test
je
push
lea
push
push
push
push
push
call
push
mov
call
xor
test
sete
jmp
push
lea
push
push
push
call
add
push
lea
push
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
mov
test
push
mov
push
jne
call
test
je
push
call
and
push
mov
lea
push
push
call
mov
add
cmp
ja
push
lea
push
push
call
cmp
jne
push
lea
push
call
test
je
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
test
jne
call
mov
test
je
push
call
and
pop
ret
push
mov
test
je
push
push
call
mov
and
je
push
dec
call
test
jne
push
call
pop
pop
ret
push
call
mov
test
je
mov
test
je
push
call
pop
mov
lea
cmp
ja
push
call
and
jmp
sub
sub
push
push
call
pop
pop
xor
inc
pop
ret
jmp
push
mov
sub
mov
xor
mov
mov
push
mov
push
lea
push
push
call
lea
push
push
call
pop
neg
pop
mov
sbb
xor
inc
pop
call
leave
ret
push
mov
sub
push
push
lea
push
push
call
mov
push
push
jmp
push
call
test
je
push
push
call
test
je
lea
push
push
call
push
lea
push
push
call
test
jne
push
push
call
mov
test
jne
pop
pop
leave
ret
mov
jmp
cmp
jne
xor
ret
mov
mov
jmp
cmp
jne
call
mov
mov
jmp
push
sub
lea
mov
xor
mov
push
mov
call
mov
mov
mov
lea
push
push
push
mov
mov
call
mov
test
jne
push
lea
push
push
push
call
mov
test
jne
and
lea
push
lea
call
lea
push
push
mov
call
mov
mov
test
setne
add
mov
call
test
jne
or
jmp
mov
mov
call
mov
ret
mov
mov
cmp
je
cmp
jne
push
push
call
mov
push
call
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
sub
lea
mov
xor
mov
push
mov
call
xor
mov
mov
mov
call
cmp
mov
je
lea
push
mov
call
cmp
je
mov
push
push
push
push
mov
call
cmp
jne
cmp
je
xor
cmp
setne
cmp
jne
jmp
push
lea
call
push
lea
mov
call
push
lea
push
lea
push
call
push
mov
push
lea
push
call
add
mov
add
mov
call
lea
push
mov
push
call
lea
push
push
push
call
test
jne
push
lea
push
push
push
call
cmp
jne
lea
push
push
call
push
call
lea
push
lea
push
push
push
call
mov
add
call
mov
add
call
xor
inc
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
call
xor
cmp
sete
mov
ret
call
add
push
call
ret
call
mov
mov
ret
call
mov
ret
call
cmp
jne
push
push
call
call
mov
test
je
mov
test
je
call
test
je
mov
mov
pop
jmp
call
cmp
jne
push
call
pop
ret
call
add
push
call
test
jne
jmp
ret
push
push
mov
test
mov
jne
push
pop
mov
test
je
push
call
and
pop
cmp
je
xor
push
pop
mov
mul
seto
neg
or
push
call
mov
shl
push
push
push
mov
call
add
mov
pop
pop
ret
push
mov
mov
test
je
push
call
and
pop
mov
and
and
call
and
pop
ret
mov
mov
mov
dec
mov
jne
call
ret
mov
push
mov
mov
shr
mov
xor
div
mov
mov
mov
test
je
mov
jmp
cmp
je
mov
test
jne
xor
pop
ret
test
jne
call
push
mov
test
jne
xor
jmp
push
mov
mov
xor
shr
div
mov
jmp
cmp
je
mov
test
jne
xor
pop
pop
ret
mov
jmp
push
mov
test
jne
xor
jmp
push
mov
mov
shr
xor
div
lea
mov
jmp
cmp
je
mov
mov
test
jne
pop
pop
ret
mov
push
mov
call
xor
inc
jmp
mov
push
mov
test
je
cmp
push
jne
mov
xor
test
jbe
mov
mov
test
jne
inc
add
cmp
jb
call
mov
test
jne
mov
shr
xor
push
mov
div
inc
cmp
jae
mov
lea
mov
test
jne
inc
add
cmp
jb
pop
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
ret
mov
mov
xor
cmp
mov
jg
push
pop
mov
mov
mov
mov
mov
mov
ret
mov
jmp
push
mov
cmp
jne
push
push
lea
push
call
mov
mov
imul
add
dec
lea
js
mov
mov
mov
dec
sub
test
jge
mov
mov
inc
mov
and
and
pop
ret
push
mov
push
push
push
mov
lea
push
lea
push
push
mov
call
test
jne
cmp
jne
push
push
mov
call
mov
call
mov
mov
mov
shl
mov
mov
mov
mov
pop
add
pop
leave
ret
push
mov
mov
call
test
je
push
call
pop
mov
pop
ret
call
inc
ret
push
mov
call
mov
mov
mov
push
mov
push
lea
call
and
push
lea
call
lea
push
mov
mov
call
xor
cmp
mov
jne
call
cmp
je
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
ret
push
mov
call
mov
mov
test
jne
xor
call
ret
push
lea
call
test
jne
lea
push
call
test
je
mov
add
mov
cmp
jne
mov
jmp
push
call
and
lea
mov
call
mov
test
jne
call
push
call
push
lea
call
push
or
mov
call
mov
add
mov
cmp
jne
mov
mov
jmp
push
call
push
push
call
int3
push
mov
sub
push
mov
test
je
mov
neg
sbb
mov
je
push
lea
lea
push
lea
push
lea
push
mov
call
mov
add
and
cmp
jne
and
push
call
cmp
jne
pop
lea
call
lea
call
pop
leave
ret
push
mov
call
mov
mov
mov
mov
call
lea
mov
call
lea
mov
call
or
lea
call
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
push
push
call
mov
mov
xor
cmp
je
dec
cmp
mov
jne
cmp
je
cmp
je
call
cmp
je
mov
cmp
je
push
push
call
mov
call
mov
call
mov
call
mov
call
mov
call
push
call
mov
mov
call
mov
test
je
test
je
mov
test
je
push
call
cmp
pop
jae
cmp
je
mov
and
test
je
push
call
push
mov
call
pop
pop
push
call
test
pop
mov
jne
cmp
je
push
call
pop
mov
pop
xor
cmp
pop
setne
pop
pop
ret
push
mov
mov
push
xor
mov
mov
mov
mov
call
mov
pop
pop
ret
mov
test
jne
call
mov
mov
dec
mov
jne
call
ret
test
jne
jmp
mov
test
je
mov
test
push
mov
mov
je
and
jmp
and
push
call
mov
pop
ret
mov
test
jne
call
cmp
push
jne
mov
mov
jmp
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
mov
mov
push
call
pop
ret
mov
test
jne
mov
jmp
mov
cmp
je
mov
test
jne
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
jmp
push
mov
cmp
jne
push
push
lea
push
call
mov
mov
imul
add
dec
lea
js
mov
mov
mov
dec
sub
test
jge
mov
mov
mov
mov
mov
mov
mov
inc
and
pop
ret
push
mov
push
push
call
mov
mov
mov
test
je
mov
jmp
mov
mov
pop
ret
push
mov
push
push
call
mov
mov
mov
test
je
mov
jmp
mov
mov
pop
ret
push
mov
test
push
mov
jne
push
call
jmp
push
push
call
mov
mov
mov
test
je
mov
jmp
mov
mov
pop
pop
ret
push
mov
mov
call
test
je
push
call
pop
mov
pop
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
mov
call
pop
ret
push
mov
push
push
push
mov
xor
cmp
mov
jge
call
mov
cmp
jl
mov
cmp
jne
push
call
pop
mov
mov
jmp
mov
cmp
jne
cmp
ja
push
call
push
push
push
mov
call
add
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
sub
push
add
push
push
call
add
mov
jmp
mov
test
jne
mov
cdq
and
add
sar
cmp
jl
mov
cmp
jle
mov
jmp
cmp
jge
push
pop
add
cmp
mov
jl
mov
cmp
jl
push
call
push
mov
push
push
push
call
mov
mov
sub
push
add
push
push
call
push
call
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
push
push
mov
mov
push
not
test
mov
push
mov
je
push
call
mov
test
mov
jbe
mov
cmp
jae
mov
push
push
mov
call
add
sub
jne
jmp
call
push
push
mov
call
mov
test
mov
jbe
mov
cmp
jae
mov
push
push
mov
call
add
sub
jne
pop
pop
pop
pop
ret
push
call
test
pop
je
mov
jmp
xor
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
xor
inc
ret
xor
ret
push
mov
call
push
mov
push
mov
and
call
mov
test
je
mov
xor
jmp
mov
call
mov
ret
mov
call
ret
push
mov
call
mov
mov
mov
and
push
push
call
mov
test
je
mov
xor
jmp
mov
call
mov
ret
mov
call
ret
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
jne
mov
jmp
mov
test
jne
mov
jmp
mov
mov
xor
ret
push
mov
call
mov
mov
mov
test
jne
mov
jmp
call
push
mov
push
and
push
mov
call
mov
test
je
mov
mov
xor
jmp
mov
call
mov
ret
mov
call
ret
mov
mov
mov
mov
ret
cmp
jb
call
movzx
mov
push
mov
push
add
jmp
cmp
je
test
mov
jne
mov
mov
and
cmp
jae
and
add
inc
mov
test
jne
pop
pop
ret
call
int3
mov
ret
mov
test
jl
cmp
jge
imul
add
ret
call
int3
mov
mov
mov
test
push
mov
mov
mov
mov
pop
je
test
jne
call
ret
cmp
je
push
call
pop
ret
mov
mov
or
sub
cmp
jae
mov
ret
add
mov
mov
xor
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
mov
pop
ret
mov
test
je
and
push
push
push
push
call
xor
add
inc
ret
push
push
call
mov
xor
mov
mov
push
push
lea
push
call
add
cmp
jge
mov
jmp
mov
call
mov
jmp
mov
mov
mov
xor
cmp
sete
mov
ret
mov
mov
call
mov
mov
lea
call
ret
push
mov
push
mov
push
push
xor
cmp
mov
jge
call
mov
cmp
jl
mov
cmp
jne
cmp
je
xor
cmp
jle
mov
mov
add
push
call
add
inc
cmp
jl
push
call
pop
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
mov
jg
mov
mov
imul
push
call
push
xor
push
push
mov
call
add
cmp
jle
xor
mov
mov
add
je
mov
mov
add
dec
jne
jmp
cmp
jg
mov
cmp
jge
mov
sub
imul
imul
push
add
push
push
call
mov
sub
add
xor
test
jle
mov
add
imul
add
je
mov
mov
mov
sub
inc
cmp
jl
jmp
jle
sub
test
mov
jle
mov
imul
mov
push
add
call
mov
inc
sub
add
cmp
jl
jmp
mov
cmp
jne
mov
cdq
and
add
sar
cmp
jge
push
pop
jmp
mov
cmp
jle
mov
mov
add
cmp
mov
jl
mov
mov
cmp
jl
imul
push
call
mov
imul
push
push
mov
push
push
call
mov
mov
mov
sub
imul
imul
push
add
push
push
call
mov
sub
add
xor
test
jle
mov
add
imul
add
je
and
and
mov
sub
inc
cmp
jl
push
call
pop
mov
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
mov
test
mov
je
test
jne
call
mov
mov
push
push
not
test
push
mov
mov
je
test
jbe
mov
cmp
jae
mov
mov
mov
imul
push
push
call
add
sub
test
ja
jmp
test
jbe
mov
cmp
jae
mov
mov
mov
imul
push
push
call
add
sub
test
ja
pop
pop
pop
pop
ret
mov
mov
cmp
je
cmp
mov
je
and
mov
mov
mov
mov
mov
ret
push
push
mov
xor
cmp
jle
push
push
mov
call
cmp
je
push
mov
call
cmp
je
push
mov
call
push
mov
mov
call
mov
mov
mov
neg
sbb
inc
mov
cmp
jl
pop
pop
pop
ret
jmp
push
mov
cmp
mov
je
push
xor
cmp
jle
push
xor
mov
push
add
call
inc
add
cmp
jl
pop
push
call
pop
pop
pop
ret
push
push
mov
mov
not
test
mov
mov
je
push
call
jmp
call
push
push
mov
call
push
push
push
call
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
jmp
push
push
mov
test
mov
jge
call
cmp
jl
push
lea
push
call
push
mov
imul
add
call
pop
pop
ret
push
mov
mov
sub
mov
call
mov
sub
call
mov
sub
pop
jmp
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
mov
mov
add
cmp
je
cmp
jne
mov
mov
add
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
jmp
mov
movzx
mov
movzx
dec
mov
cmp
mov
je
test
je
and
or
cmp
jl
cmp
je
mov
mov
shl
cmp
lea
je
cmp
je
mov
push
push
add
push
push
mov
call
test
jl
mov
mov
jmp
cmp
jne
mov
and
mov
mov
jmp
cmp
jne
cmp
jne
mov
mov
mov
test
push
pop
je
cmp
jne
mov
test
je
mov
xor
cmp
push
setne
mov
call
test
pop
je
mov
mov
mov
jmp
and
push
push
lea
push
call
mov
and
push
push
mov
call
or
cmp
je
push
call
pop
mov
mov
push
pop
jmp
mov
mov
jmp
movzx
add
cmp
ja
jmp
movsx
jmp
movzx
jmp
movsx
jmp
movzx
jmp
mov
mov
mov
mov
add
jmp
fld
fstp
jmp
fld
fstp
jmp
xor
cmp
setne
jmp
mov
mov
add
inc
mov
cmp
jne
cmp
jle
mov
mov
mov
mov
jmp
mov
cmp
je
mov
mov
mov
mov
jmp
xor
call
ret
nop
aam
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
popf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
mov
call
mov
push
lea
call
mov
mov
xor
cmp
mov
mov
mov
jne
lea
mov
push
call
test
mov
mov
mov
movzx
mov
je
lea
push
call
test
pop
jne
or
cmp
je
push
push
call
mov
jmp
mov
call
mov
mov
push
push
lea
push
push
call
movzx
and
mov
add
inc
mov
mov
mov
mov
mov
xor
mov
mov
shl
push
call
test
pop
jne
or
cmp
je
push
push
jmp
mov
cmp
ja
shl
mov
call
mov
mov
push
push
push
call
add
push
push
call
mov
lea
push
call
test
pop
je
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
mov
push
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
xor
and
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
call
test
je
mov
xor
mov
rep
mov
mov
rep
call
pop
xor
pop
ret
call
mov
mov
mov
push
mov
push
push
push
call
add
call
pop
xor
pop
ret
nop
nop
nop
(bad)
dec
add
mov
xor
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
push
mov
push
push
push
push
push
call
test
mov
jne
movzx
cmp
push
push
push
mov
je
cmp
je
cmp
je
add
cmp
ja
call
mov
mov
jmp
call
mov
jmp
call
fstp
jmp
call
fstp
fld
fstp
mov
mov
xor
cmp
jbe
mov
mov
push
call
add
inc
cmp
jb
cmp
lea
je
mov
call
or
cmp
je
push
push
call
mov
jmp
mov
xor
cmp
jbe
mov
push
call
inc
add
cmp
jb
push
push
call
call
mov
test
je
mov
mov
movzx
add
cmp
ja
jmp
mov
jmp
mov
mov
mov
mov
jmp
fld
fstp
jmp
fld
fstp
jmp
neg
sbb
mov
jmp
lea
mov
movs
movs
movs
movs
jmp
mov
jmp
movzx
sub
je
dec
je
sub
je
dec
jne
test
je
mov
push
call
jmp
lea
push
call
jmp
push
call
lea
mov
call
or
cmp
je
push
push
call
xor
lea
call
ret
lea
xor
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
inc
add
inc
add
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
call
mov
mov
call
lea
mov
mov
call
and
lea
call
lea
call
mov
mov
mov
add
neg
sbb
and
cmp
mov
mov
mov
je
push
mov
call
neg
mov
sbb
and
add
mov
call
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
push
push
push
call
add
lea
push
mov
mov
call
test
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
cmp
je
push
lea
call
push
call
mov
add
mov
call
add
mov
cmp
je
push
lea
call
mov
push
call
lea
mov
call
jmp
push
mov
call
test
push
lea
push
je
push
call
mov
jmp
push
call
mov
push
lea
call
push
call
mov
add
mov
call
xor
cmp
jne
call
push
lea
call
push
call
mov
add
mov
call
cmp
jne
cmp
je
call
mov
push
lea
call
push
call
mov
add
mov
call
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
call
mov
mov
mov
mov
and
test
je
call
cmp
je
push
call
pop
or
mov
call
call
ret
mov
mov
cmp
jb
xor
ret
inc
cmp
mov
sbb
neg
ret
and
ret
mov
add
call
ret
mov
add
call
ret
push
mov
push
add
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
mov
cmp
jb
xor
jmp
mov
mov
imul
add
push
push
push
push
call
add
inc
xor
inc
pop
ret
push
mov
call
mov
push
add
lea
call
mov
and
test
je
and
mov
mov
mov
mov
mov
cmp
je
mov
push
mov
call
test
je
add
dec
jmp
mov
call
mov
ret
jmp
mov
test
je
sub
mov
xor
cmp
setne
mov
or
cmp
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
xor
mov
mov
mov
cmp
je
mov
mov
call
cmp
je
dec
jmp
mov
call
mov
ret
xor
xor
cmp
setne
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
mov
call
or
cmp
je
push
push
call
xor
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
and
mov
mov
mov
mov
call
mov
mov
test
je
mov
jmp
mov
mov
add
push
call
add
and
mov
or
cmp
je
push
push
call
mov
call
ret
mov
call
mov
ret
push
mov
call
mov
mov
mov
and
and
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
call
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
push
push
push
call
mov
mov
call
ret
mov
and
mov
ret
push
mov
mov
test
je
cmp
je
mov
push
call
and
pop
ret
push
mov
mov
test
je
push
call
and
pop
pop
ret
push
mov
call
mov
mov
mov
mov
pop
ret
push
push
mov
xor
cmp
jle
push
push
mov
call
cmp
je
push
mov
call
cmp
je
push
mov
call
push
mov
mov
call
mov
mov
xor
cmp
setne
inc
mov
cmp
jl
pop
pop
pop
ret
jmp
push
mov
call
mov
xor
cmp
je
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
add
cmp
je
push
call
mov
test
mov
je
lea
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
xor
push
pop
mul
seto
neg
or
push
call
mov
mov
shl
push
push
push
mov
call
mov
shl
add
cmp
lea
mov
mov
je
mov
add
lea
add
push
mov
mov
pop
mov
movzx
test
mov
mov
je
and
or
mov
movzx
mov
cmp
jg
je
dec
dec
cmp
ja
jmp
add
add
mov
mov
jmp
add
add
mov
jmp
mov
add
mov
add
mov
mov
mov
mov
jmp
add
mov
fld
add
fstp
jmp
add
mov
fld
add
fstp
jmp
add
add
mov
jmp
add
add
mov
push
mov
call
cmp
mov
je
test
jne
call
add
add
mov
neg
sbb
mov
jmp
add
mov
add
mov
movs
movs
movs
movs
mov
push
pop
jmp
sub
cmp
ja
jmp
add
add
mov
mov
neg
sbb
push
and
mov
push
push
lea
mov
call
push
push
lea
mov
call
cmp
mov
je
push
call
pop
jmp
add
add
mov
mov
sub
sub
inc
mov
cmp
mov
jne
mov
xor
lea
push
xor
call
cmp
je
lea
push
lea
push
push
call
mov
mov
or
mov
add
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
lea
mov
call
mov
cmp
je
mov
shl
lea
jmp
cmp
jne
push
call
sub
inc
cmp
jne
push
call
cmp
pop
mov
jge
lea
push
call
cmp
je
push
call
cmp
je
lea
push
call
push
call
pop
mov
cmp
mov
je
push
mov
push
push
call
mov
push
mov
mov
call
test
je
push
lea
call
push
mov
call
push
call
test
je
push
lea
call
push
call
push
call
test
je
push
lea
call
push
call
mov
mov
mov
mov
push
lea
push
mov
call
mov
cmp
je
cmp
je
push
push
lea
push
push
call
mov
cmp
jge
lea
push
call
push
jmp
movzx
add
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
fld
mov
fstp
jmp
fld
mov
fstp
jmp
push
push
call
push
call
jmp
mov
xor
cmp
setne
mov
jmp
mov
lea
movs
movs
movs
movs
xor
jmp
mov
mov
mov
lea
mov
call
or
cmp
je
push
call
pop
call
ret
mov
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
stos
inc
add
test
inc
add
stos
inc
add
stos
inc
add
test
inc
add
test
inc
add
test
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
test
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
inc
add
stos
inc
add
stos
inc
add
lods
inc
add
inc
add
lods
inc
add
lods
inc
add
mov
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
pop
mov
pop
ret
call
call
call
cmp
jne
push
call
mov
test
je
mov
test
je
mov
push
call
and
call
lea
cmp
jne
call
call
and
pop
ret
cmp
je
push
call
jmp
cmp
push
mov
jne
call
inc
mov
call
sub
cmp
jbe
call
call
mov
pop
ret
push
mov
call
call
mov
call
xor
cmp
je
or
jmp
push
call
cmp
jge
push
call
xor
jmp
mov
call
mov
cmp
mov
jne
push
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
or
mov
call
mov
call
xor
inc
call
ret
mov
ret
push
call
test
pop
je
mov
and
ret
xor
ret
mov
test
je
and
mov
ret
push
mov
call
call
mov
cmp
jne
cmp
je
push
call
push
mov
call
pop
mov
mov
and
test
je
push
push
push
push
push
es
pushf
in
push
lods
pop
push
and
out
sbb
lods
push
and
mov
rol
inc
loop
cmp
or
jg
outs
mov
and
stos
lock
arpl
int
xchg
fldenv
ffree
data16
pop
repnz
call
push
push
dec
(bad)
push
add
js
jb
icebp
add
scas
scas
ds
into
mov
ss
outs
inc
sub
jl
sbb
xchg
add
ins
mov
cmc
and
sbb
jp
aaa
dec
jle
xor
mov
(bad)
ficom
das
test
pop
xor
pushf
jne
xor
xchg
(bad)
xchg
out
add
ds
out
(bad)
(bad)
pop
cmp
test
js
out
cmp
call
ror
or
iret
scas
movs
inc
in
jmp
in
sbb
jle
(bad)
cmp
ficom
push
dec
dec
outs
mov
jmp
xchg
push
jmp
mov
pop
add
fsubr
sahf
push
add
adc
cmps
push
pop
inc
arpl
fwait
add
xchg
mov
adc
fisttp
mov
pop
call
sub
cmp
(bad)
jmp
(bad)
mov
jmp
mov
leave
cmp
cmps
mov
xor
loop
jmp
push
xor
jmp
push
test
sbb
sbb
inc
inc
adc
bound
add
push
sar
jnp
std
mov
leave
hlt
ficom
pop
xor
daa
add
and
or
sbb
adc
into
dec
xchg
enter
and
inc
rcr
push
outs
inc
fidivr
jle
cmp
rol
xchg
ret
into
xchg
icebp
jmp
test
and
xor
sub
adc
dec
and
mov
ret
or
retf
ins
lods
sahf
pop
xor
(bad)
pop
cmp
adc
pop
push
shr
in
xchg
mov
push
ret
mov
add
mov
push
inc
inc
pop
(bad)
jbe
mov
mov
sbb
push
ror
mov
repz
repnz
or
xchg
or
adc
(bad)
hlt
rcl
sub
in
cli
mov
cli
cwde
mov
jp
outs
cs
dec
jmp
push
scas
and
mov
cmps
rol
jp
cli
xchg
out
mov
pusha
jl
popa
jle
mov
call
shl
and
stos
leave
mov
(bad)
dec
scas
mov
stc
and
fstp
bound
pop
retf
aas
ficom
mov
das
mov
inc
cs
adc
jo
push
scas
in
inc
loopne
dec
mov
pop
push
outs
dec
push
add
push
inc
jbe
rcl
and
dec
rol
and
sbb
addr16
arpl
ficom
xor
push
inc
jmp
mov
shr
jp
jecxz
ret
push
cmp
pop
mov
into
dec
add
sti
sbb
cmps
cmp
fnsave
hlt
stos
sub
js
retf
inc
ja
(bad)
lea
dec
scas
js
push
jecxz
mov
push
pop
mov
popf
dec
ror
add
dec
xchg
(bad)
(bad)
xchg
retf
push
aas
pop
into
inc
ficom
push
ss
push
push
(bad)
repnz
cmp
xchg
fmul
xor
xlat
arpl
stos
dec
addr16
or
(bad)
dec
mov
scas
iret
cmp
mov
lds
mov
scas
mov
cmp
push
jno
mov
pop
inc
into
push
push
cmp
ficom
movs
jnp
lea
push
retf
pop
inc
stc
stos
mov
add
nop
cmp
inc
out
ss
or
sub
sub
mov
cli
es
jb
sub
pop
push
push
fwait
sar
sub
aas
push
das
xchg
ins
mov
mov
cmp
dec
arpl
add
mov
cmp
push
push
mov
mov
lea
push
out
adc
dec
mov
add
mov
arpl
xor
mov
add
jg
loop
mov
xchg
gs
imul
das
push
or
pushf
sahf
stos
hlt
arpl
popf
rcl
mov
lock
push
dec
xchg
(bad)
pop
xchg
(bad)
jp
enter
in
dec
or
pop
adc
jbe
mov
jae
(bad)
shr
ss
jle
adc
lods
mov
out
stc
sbb
and
ret
sub
sbb
xchg
pop
mov
cmp
mov
call
pop
cmp
icebp
push
and
fiadd
cmp
fild
mov
add
in
pop
sbb
adc
out
mov
adc
and
es
out
mov
loopne
in
pushf
mov
jmp
shl
inc
pop
neg
test
jge
pushf
pop
repz
clc
mov
repz
into
nop
call
xchg
fist
and
popf
push
adc
push
fild
hlt
faddp
xchg
jo
mov
outs
mov
pop
jo
add
sar
out
xor
(bad)
(bad)
sbb
mov
shl
sbb
jle
ds
adc
repnz
test
loope
jecxz
push
dec
jecxz
xchg
(bad)
jg
pop
ins
iret
pop
arpl
xor
dec
aam
jb
ds
cmp
mov
ror
mov
sub
sar
scas
mov
pop
push
adc
ret
mov
push
xchg
or
int
es
ins
jge
pop
push
rcl
push
fnstcw
cs
push
push
adc
stos
retf
mov
sahf
mov
pop
call
ss
fbld
imul
repnz
mov
cmp
xlat
imul
or
es
mov
ret
mov
out
fcmovb
push
mov
xchg
push
jb
jmp
or
repnz
cmp
rcl
jle
mov
pop
icebp
inc
leave
nop
inc
dec
xchg
pop
cld
div
mov
pop
ffreep
ret
in
arpl
xchg
or
mov
or
add
or
adc
cli
popa
sar
xor
inc
sahf
mov
pop
pop
or
jne
mov
add
jo
je
pop
mov
movs
xchg
test
fs
mul
and
sar
jbe
pop
ins
(bad)
stos
sub
ss
mov
test
out
loope
stos
and
mov
outs
push
dec
in
or
mov
push
mov
sbb
cmp
stos
dec
jb
retf
jns
mov
out
cmps
call
and
fbstp
pop
push
adc
push
ins
test
cmp
mov
dec
adc
jns
imul
jbe
fwait
(bad)
mov
xor
das
test
or
cmp
adc
push
adc
mov
sbb
sub
jno
int
mov
loopne
retf
data16
ds
rcr
pop
nop
sub
jle
xor
and
es
clc
into
aas
add
pop
adc
pop
add
fild
mov
gs
inc
mov
data16
dec
mov
dec
addr16
inc
sbb
fdivr
adc
fistp
fwait
test
into
mov
mov
sub
dec
mov
mov
(bad)
(bad)
sbb
js
(bad)
stos
addr16
pop
jg
dec
hlt
dec
dec
out
xor
adc
(bad)
sub
retf
jae
fcmovne
cdq
push
add
push
or
sbb
sbb
sub
inc
mov
and
mov
movs
call
cld
or
adc
or
sub
push
inc
mov
jo
je
sub
push
mov
scas
rcr
fcmovu
ss
int3
inc
pop
xchg
(bad)
jmp
(bad)
jmp
pop
loopne
bound
stos
adc
mov
ret
int3
add
fwait
into
cmps
movs
loope
popa
xchg
or
outs
mov
jnp
xchg
out
out
rol
mov
xor
or
jmp
fild
xchg
and
xchg
js
out
jecxz
inc
mov
sub
shl
jl
call
aad
pop
mov
dec
outs
or
pop
push
adc
mov
mov
and
mov
adc
out
loop
push
jo
sahf
xor
lods
xor
push
aas
add
shl
sub
dec
add
mov
std
fdivr
bound
sub
push
dec
scas
xchg
mov
retf
inc
fadd
adc
cmp
ficom
not
into
mov
sub
or
(bad)
jno
sub
sbb
push
imul
mov
xchg
sbb
out
fwait
scas
nop
pop
adc
dec
push
push
jmp
adc
or
and
repnz
repz
mov
push
test
push
xor
add
add
cmp
stc
push
xor
mov
(bad)
mul
leave
div
jp
mov
cmp
lea
mov
jmp
mov
push
push
push
xor
dec
push
dec
push
dec
stc
mov
xor
lock
dec
sahf
aam
xchg
les
cmps
jge
clc
jl
mov
xor
shr
add
xor
pop
cmps
push
pop
fimul
dec
push
pop
lods
cmp
add
sti
cmc
sub
inc
test
and
mov
sbb
dec
in
mov
popf
mov
add
pop
inc
dec
inc
ret
push
mov
fcmovu
ret
dec
ror
sahf
adc
aad
xchg
fsub
push
test
div
ror
dec
adc
jmp
adc
sub
int3
or
add
push
inc
shl
fbstp
jecxz
add
ja
dec
pushf
ins
scas
mov
jmp
addr16
rcl
mov
or
mov
aad
jnp
or
adc
mov
sbb
jecxz
push
jb
sbb
stos
cld
repnz
adc
pop
sbb
dec
push
push
adc
xlat
enter
pop
adc
leave
sti
shr
sbb
(bad)
xor
ret
push
xchg
mov
xchg
sbb
sahf
xchg
mov
ror
dec
iret
mov
ins
cmps
cmp
pop
loop
mov
cld
add
test
sbb
loope
push
hlt
test
pop
mov
(bad)
xchg
outs
mov
adc
pop
xchg
push
sbb
jl
lahf
and
add
pop
hlt
adc
pop
sub
pusha
(bad)
dec
out
and
xor
stos
sbb
sbb
add
sub
inc
jge
in
ret
adc
sbb
mov
dec
mov
jle
mov
inc
outs
fstp
push
xchg
ss
test
loopne
xor
int3
lods
sbb
sbb
jp
daa
out
mov
aaa
ficomp
push
fidivr
cmps
sub
in
lock
add
repnz
push
jb
lds
adc
dec
sub
adc
cmc
enter
and
mov
movs
mov
ja
scas
xor
in
push
mov
cmc
(bad)
mov
push
add
mov
jmp
push
pop
in
mov
push
push
in
jl
ss
xor
pop
mov
jae
jne
xchg
lea
and
(bad)
popf
ret
sub
inc
iret
and
inc
jmp
xor
arpl
pusha
scas
pusha
(bad)
cmp
(bad)
repz
xchg
pop
push
fisttp
mov
jb
push
jne
jl
pop
cld
cmp
ficomp
call
iret
in
movs
data16
mov
push
mov
add
mov
(bad)
out
stos
xor
inc
(bad)
imul
sar
sbb
inc
hlt
outs
xor
inc
scas
loope
arpl
idiv
lods
add
into
adc
outs
ja
mov
enter
call
in
sbb
out
gs
jmp
(bad)
cmc
mov
ja
xchg
push
jno
aas
outs
jmp
pop
fwait
ret
jg
mov
aad
pop
mov
cmp
cmc
push
stos
add
stos
xchg
adc
sbb
push
push
das
outs
and
add
hlt
es
repnz
lods
leave
xor
mov
shl
inc
imul
rcr
cs
cmps
jle
fld
dec
sub
push
arpl
xlat
sub
jmp
ins
add
sbb
mov
rol
ret
mov
dec
retf
mov
sub
arpl
or
mov
dec
loopne
aam
mov
repz
pushf
stos
push
push
add
mov
or
scas
push
jmp
sub
xor
sub
retf
dec
js
adc
xchg
dec
adc
inc
enter
adc
sbb
mov
dec
stos
sbb
jg
pusha
push
neg
xchg
out
bound
repz
mov
mov
lods
sub
popa
in
leave
jle
mov
repnz
cmp
mov
scas
setno
pop
sbb
jmp
mov
enter
lods
(bad)
iret
into
(bad)
jmp
mov
outs
push
into
arpl
adc
cs
fisubr
pushf
mov
popa
and
movs
and
xchg
jge
cld
inc
int3
jle
jno
dec
mov
sub
(bad)
push
(bad)
movhps
inc
sub
cmp
mov
and
fcomp
test
jnp
cs
mov
xchg
and
push
outs
xor
or
js
sbb
adc
retf
sbb
jg
mov
mov
and
stos
pop
mov
xlat
mov
mov
push
enter
rcl
outs
loop
xchg
jbe
mov
iret
outs
lods
push
mov
aas
sub
add
cmp
or
mov
fldl2e
clc
mov
and
movs
data16
(bad)
cld
in
in
bound
push
dec
(bad)
lods
into
inc
pop
ret
gs
and
cli
mov
fs
outs
cmp
retf
sbb
fs
jne
fidiv
sub
pop
cli
or
add
loop
out
mov
call
mov
dec
daa
xchg
inc
jg
push
or
and
rcr
cmps
(bad)
dec
xchg
out
dec
dec
(bad)
push
mov
rcl
xor
jge
pop
scas
push
and
sar
jo
sbb
cwde
cld
call
push
loopne
and
adc
cs
adc
and
popf
mov
jecxz
inc
mov
push
jecxz
dec
or
adc
inc
mov
or
inc
mov
mov
inc
sbb
int
push
addr16
aas
xor
stos
inc
(bad)
mov
int
int3
mov
nop
xchg
xchg
mov
jae
adc
scas
push
cmp
adc
ret
es
bnd
cmps
xor
(bad)
call
or
xchg
jnp
pop
xchg
(bad)
call
xor
add
popa
les
mov
adc
not
imul
inc
stos
cli
into
adc
jge
push
ficomp
sbb
jo
bound
ficom
inc
dec
add
loop
fidiv
jns
xchg
xor
inc
xchg
inc
dec
adc
movups
or
adc
(bad)
hlt
scas
pop
push
bound
push
or
mov
dec
dec
outs
sub
jmp
fmul
jbe
imul
mov
jecxz
cmp
(bad)
call
add
std
push
jo
ror
ret
jg
lods
sub
or
ret
and
inc
push
sbb
gs
outs
jbe
loop
mov
mov
xchg
add
int
outs
dec
sub
xchg
cs
jle
sub
outs
int3
iret
cwde
mov
scas
and
cli
push
push
inc
or
in
rol
xor
icebp
xor
sbb
outs
push
mov
cmps
ret
xor
cmps
ret
cli
scas
jecxz
adc
lock
retf
retf
mov
shr
test
(bad)
jecxz
rcr
jecxz
push
push
shl
mov
xchg
xchg
loop
test
scas
lods
jno
jle
cmps
adc
dec
test
add
ret
mov
mov
(bad)
mov
lods
es
fs
cmps
cs
iret
add
sub
add
fiadd
mov
add
jg
xor
leave
adc
imul
cmps
call
test
call
push
jg
sbb
dec
push
sub
(bad)
xor
out
test
stc
leave
(bad)
loop
outs
jae
push
maskmovq
test
imul
test
shr
mov
rcl
xchg
jmp
push
ja
scas
repz
jb
sbb
cmp
xchg
stos
int3
loop
out
imul
loop
aad
adc
popf
push
and
cdq
jmp
pop
adc
xchg
cmc
bound
data16
mov
bound
minps
pop
adc
pushw
ret
sbb
sub
mov
ret
mov
lea
cmp
fisub
dec
add
push
xchg
mov
stc
repz
pop
mov
nop
stos
movs
mov
mov
and
stos
mov
cmp
fdivr
mov
jne
cli
call
mov
inc
mov
inc
aas
xchg
nop
adc
jb
idiv
test
aas
xchg
xchg
into
daa
add
adc
int3
jno
in
out
les
mov
mov
fld
sar
dec
mov
mov
jb
cmp
(bad)
jmp
jle
xchg
movs
ror
fidiv
pop
ins
mov
popa
fadd
adc
into
adc
pop
fnstenv
movs
or
jg
push
or
xchg
lods
(bad)
mov
push
push
inc
stc
test
das
mov
dec
scas
shl
mov
pop
ja
in
add
add
or
dec
inc
push
(bad)
inc
mov
ja
mov
push
jmp
ja
xchg
cs
xchg
repz
outs
cs
lock
and
push
dec
mov
sbb
adc
pop
xor
cmp
out
pop
mov
and
mov
add
ja
cmp
mov
mov
sbb
inc
cdq
add
out
addr16
and
xor
test
call
inc
xchg
jmp
out
xor
jge
inc
out
jge
sbb
out
sbb
int3
jbe
nop
adc
fist
fimul
xchg
cli
call
xor
ret
and
mov
mov
or
(bad)
or
mov
outs
mov
cmc
cwde
mov
sbb
xchg
int
sub
lahf
mov
in
test
jo
pop
push
bound
dec
idiv
jnp
and
lds
test
(bad)
xchg
or
jmp
pop
xchg
ins
sub
fwait
pop
jg
das
mov
inc
es
rcr
lahf
mov
stos
jmp
lahf
test
mov
sbb
in
dec
sahf
adc
xchg
mov
rcl
loopne
pusha
cdq
push
neg
call
xor
clc
scas
jae
imul
push
icebp
pop
sbb
push
movs
adc
(bad)
sub
mov
pushf
and
shl
arpl
mov
jg
mov
movlps
mov
inc
jbe
mov
repz
cmps
sub
sti
add
pop
(bad)
jb
mov
int3
pop
out
repz
sbb
das
repz
jp
mov
adc
arpl
or
xor
mov
cmp
push
inc
inc
jnp
pop
jp
mov
out
push
push
outs
adc
push
aaa
push
and
sahf
pop
ret
cmp
jecxz
pop
(bad)
mov
mov
es
stos
out
push
js
pop
loopne
ret
into
mov
jmp
push
push
cmp
mov
xchg
sahf
call
dec
push
lds
mov
xchg
push
(bad)
loop
cmp
out
xor
je
inc
pop
mov
(bad)
ins
imul
fadd
cs
and
mov
or
mov
cs
(bad)
in
cwde
retf
jle
aam
cmp
inc
sbb
aas
mov
popa
jbe
xor
dec
ret
ins
pop
loopne
dec
stos
popf
ins
test
pop
jno
jl
jle
and
sub
jmp
(bad)
jp
cmp
hlt
xchg
pop
stos
ins
retf
xor
add
adc
mov
or
clc
cmp
repz
fimul
dec
jnp
pop
in
sahf
dec
inc
or
mov
mov
rcr
xchg
pop
scas
ret
inc
pop
jge
pop
pop
mov
and
xor
icebp
cmp
mov
ficomp
xchg
jbe
in
sub
in
add
arpl
jno
pop
mov
and
xor
aam
(bad)
cmp
add
adc
and
in
scas
dec
dec
cmp
test
sub
adc
push
js
pop
loopne
xor
or
cld
cmp
jae
mov
cmc
add
mov
shr
jle
inc
pop
xchg
mov
and
jmp
push
sti
stos
retf
jbe
xchg
loop
loopne
test
test
inc
jl
inc
scas
int3
inc
jg
jg
mov
loope
push
mov
outs
repnz
adc
iret
cmps
add
fistp
xor
inc
fiadd
call
mov
jmp
and
push
test
push
repz
fsubr
push
mov
mov
out
pushf
fs
push
cld
sub
pop
push
arpl
xchg
inc
pushf
sbb
loop
sahf
jge
inc
xadd
inc
dec
arpl
fwait
dec
bound
jmp
iret
loop
xchg
sub
mov
in
jae
sub
and
fsubr
pop
in
in
leave
fs
fdiv
ret
xchg
cld
mov
mov
shr
cmp
out
and
and
dec
pop
xchg
sub
(bad)
push
rcl
dec
push
out
repz
ja
jb
ror
pop
mov
add
and
scas
neg
mov
mov
sbb
sub
shr
pop
jl
add
xor
xor
enter
repz
and
(bad)
push
or
fisub
(bad)
sbb
mov
jns
xor
and
mov
sar
nop
add
cmps
adc
inc
or
outs
adc
repz
push
jb
xchg
rcr
add
dec
(bad)
push
push
xchg
cmps
jmp
pop
aas
idiv
xor
or
dec
je
sar
rcr
nop
add
call
adc
inc
mov
imul
hlt
movs
sar
adc
push
or
ret
imul
enter
xchg
jge
and
adc
pop
sbb
sub
push
repnz
adc
jmp
ret
ret
and
outs
(bad)
mov
or
jg
ins
(bad)
into
dec
(bad)
fwait
mov
and
mov
mov
ret
and
sub
es
test
xor
xchg
sub
jmpw
xchg
jl
xchg
dec
lods
loop
adc
jecxz
sbb
pop
mov
jo
or
cmps
(bad)
rol
xor
fisubr
push
lock
nop
mov
add
jg
pop
push
sub
pop
aaa
sbb
scas
push
or
ins
cmp
jmp
aaa
adc
in
sbb
shl
add
fucomi
imul
sub
pop
shl
cmp
div
sar
adc
add
cmp
push
sbb
mov
mov
mov
push
push
(bad)
dec
aaa
mov
inc
ja
push
dec
pop
loope
sbb
xchg
adc
shr
inc
mov
iret
xor
or
xor
rol
outs
imul
add
or
retf
xor
cmp
and
loop
in
mov
mov
(bad)
push
jmp
add
mul
sahf
icebp
push
nop
xchg
lock
in
pop
cld
popf
pop
loope
mov
stc
mov
inc
(bad)
cdq
inc
jmp
cli
cmp
movs
cmp
add
xchg
mov
jno
stos
bound
rcr
bound
je
pop
outs
ror
sbb
add
jg
int
sbb
and
push
ret
les
adc
mov
stc
mov
mov
jb
ins
xor
xor
adc
mov
push
pop
cmps
mov
movs
leave
pop
push
inc
xchg
pop
movs
push
(bad)
js
cmps
mov
add
dec
daa
cld
xor
adc
dec
fadd
(bad)
sbb
mov
movs
iret
jb
and
pop
add
pop
int
lods
scas
outs
scas
arpl
cld
push
jp
sub
adc
jnp
daa
mov
xlat
sub
and
(bad)
xchg
icebp
push
in
aad
(bad)
cmp
cmp
ror
sub
int3
dec
xchg
and
cmp
jle
(bad)
push
xor
push
ins
popa
adc
xor
nop
jmp
jmp
mov
dec
loopne
and
and
or
adc
add
retf
sbb
mov
fidiv
repz
rcr
aas
pushf
cmp
push
test
bound
std
mov
mov
fisubr
pop
jb
mov
std
outs
mov
cld
loop
dec
mov
xchg
pushf
push
mov
addr16
ss
enter
cmp
ror
jns
stos
xchg
stos
jg
in
sti
fld
sub
pop
jge
and
cli
xor
cmp
aam
cmps
pop
mov
mov
retf
sbb
xor
retf
outs
ror
xchg
xchg
test
loope
pop
mov
(bad)
pop
push
cmp
jne
lds
mov
mov
sub
sahf
loopne
jbe
mov
sub
jge
cmp
inc
das
aad
rcl
repnz
sub
lds
jno
adc
xor
xchg
fld
push
idiv
mov
fcomi
lahf
jo
add
push
cmc
adc
dec
(bad)
add
out
retf
js
lock
pop
mov
push
ret
and
xor
push
pop
xchg
cs
xlat
fld
outs
fucomp
push
sbb
mov
push
jo
sti
push
bound
shl
fsubr
jecxz
mov
call
inc
pop
and
xchg
jbe
enter
leave
ja
movs
sub
adc
xchg
sbb
mov
cmp
dec
lods
push
push
sbb
inc
cld
fisttp
in
movs
xchg
cmp
in
ficom
jmp
mov
pop
int3
iret
pusha
lea
dec
add
in
xor
(bad)
leave
je
push
in
mov
adc
or
loop
push
sub
mov
retf
popa
fist
pop
cmp
and
es
inc
cmc
(bad)
outs
iret
or
mov
loope
out
icebp
data16
ds
mov
sub
dec
xchg
not
adc
xchg
pop
jg
ins
(bad)
mov
mov
xor
sbb
inc
(bad)
adc
inc
loop
mov
jecxz
mov
lods
jbe
test
or
mov
dec
add
mov
clc
out
loop
or
cmps
cmp
inc
inc
outs
push
push
mov
push
push
cmp
jb
mov
mov
jge
jbe
cld
movs
outs
iret
ins
popa
push
dec
aas
fsub
neg
mov
js
cmp
test
popf
mov
mov
(bad)
sti
jg
jb
lods
mov
jbe
pop
test
xor
out
xor
scas
ror
in
or
push
xor
fld1
sbb
movs
jp
jmp
cmp
dec
cmp
xor
xor
out
mov
in
push
and
dec
cmp
or
sahf
aaa
push
outs
xchg
cmp
jmp
add
pusha
movs
jle
add
dec
xor
xchg
fidivr
call
push
inc
mov
inc
dec
add
xchg
sub
inc
inc
xor
sbb
cli
mov
mov
fs
adc
jbe
xchg
jbe
not
pushf
cmp
mov
lahf
out
sub
clc
xchg
sub
sbb
test
out
xlat
int3
and
pop
mov
push
mov
arpl
and
inc
cwde
adc
cmp
int
retf
repz
add
pushf
xchg
(bad)
jae
dec
scas
xor
dec
sbb
fmul
jecxz
dec
xchg
inc
scas
cwde
inc
popf
aas
mov
fisub
adc
or
xchg
ins
or
repnz
ret
into
add
sub
or
push
dec
test
call
lahf
adc
inc
pusha
out
xchg
test
push
jle
call
popa
into
pop
or
mov
or
inc
dec
ins
push
in
int3
sub
gs
loopne
arpl
inc
adc
lea
jle
jmp
retf
add
ds
push
inc
outs
lock
aam
aam
stc
into
scas
rcl
inc
push
and
int
dec
adc
mov
loope
xchg
xor
scas
jecxz
aam
mov
inc
add
aad
les
lahf
inc
out
fstp
ficomp
sbb
scas
push
outs
push
mov
jnp
cmp
loop
popf
sub
add
jg
jecxz
xchg
das
cmp
and
inc
pop
and
fisttp
mov
div
adc
sbb
add
dec
jns
mov
inc
push
jmp
mov
xchg
aaa
dec
mov
loop
and
adc
inc
int3
les
call
cmp
ficomp
in
(bad)
rol
ins
push
test
or
pop
(bad)
loop
repz
rol
int3
and
aas
push
fsubr
loopne
call
and
in
es
pop
push
jns
xchg
dec
test
retf
xor
cmp
xor
mov
mov
mov
into
mov
xor
pushf
stos
ja
ds
push
es
push
cmp
je
pushf
cmp
loopne
lahf
xchg
nop
mov
mov
out
mov
mov
or
enter
iret
push
test
adc
out
in
lods
addr16
jo
xor
mov
push
inc
ja
jae
pop
jne
push
jne
sub
cmp
lods
adc
in
xor
popa
lahf
mov
mov
mov
inc
adc
jne
repnz
xor
shr
in
jecxz
aaa
lods
sbb
sahf
hlt
test
xlat
push
mov
add
inc
fidivr
(bad)
ins
loop
cli
jmp
movs
bound
adc
jecxz
jle
add
pushf
pop
pop
jae
mov
sbb
cmps
ins
xchg
dec
mov
sbb
mov
jnp
out
out
mov
xchg
pop
and
push
lds
pop
cmp
(bad)
(bad)
ret
jg
loopne
aas
ss
and
mov
mov
push
cli
arpl
xchg
retf
cs
jbe
mov
adc
jbe
push
add
cmps
sub
cld
repz
sti
lock
inc
inc
pushf
(bad)
mov
jo
iret
pop
outs
and
push
gs
(bad)
mov
enter
mov
movs
ja
jge
or
outs
sub
call
ins
add
das
xchg
(bad)
retf
inc
jno
lea
sbb
test
jnp
call
xchg
add
fdiv
test
jp
fsub
mov
or
sub
ds
(bad)
daa
dec
retf
mov
out
inc
fwait
or
pusha
inc
dec
scas
aad
outs
adc
mov
jmp
ret
ficom
mov
je
jle
push
sub
mov
inc
je
push
add
and
mov
sahf
mov
dec
imul
add
std
jecxz
ror
add
inc
adc
inc
ds
jmp
pop
lahf
xlat
rol
adc
imul
jecxz
push
icebp
add
jno
fisttp
xor
sahf
mov
mov
psubusb
sti
ss
xor
outs
pop
je
push
nop
add
dec
add
xor
aam
ins
add
sahf
mov
cmps
inc
call
mov
push
and
xchg
dec
jb
popa
frstor
add
mov
pop
(bad)
cmp
jae
add
cmp
jge
mov
div
cs
xchg
outs
pusha
fwait
mov
jecxz
and
aad
jnp
jnp
add
sbb
out
call
push
repnz
pop
nop
xchg
pop
ret
ja
push
or
xlat
sahf
jns
mul
mov
out
mov
pop
out
xchg
or
cmc
loopne
daa
xor
xchg
mov
pop
cmp
sbb
cdq
push
xor
es
out
cmps
push
xchg
xchg
cmp
addr16
js
inc
dec
xor
rcr
dec
out
inc
xchg
arpl
mov
stos
bound
push
cmp
cmps
jg
outs
or
push
jecxz
aaa
push
movs
imul
adc
push
cdq
gs
ins
popa
pop
push
in
pop
adc
mov
out
xchg
push
aaa
ja
or
push
dec
rcl
outs
sbb
xchg
fwait
aas
fst
leave
imul
fwait
push
movs
xchg
mov
arpl
cs
fwait
sbb
(bad)
jnp
out
sbb
in
into
cwde
je
mov
lock
lahf
or
sub
xor
retf
mov
out
enter
scas
pop
cwde
pop
push
and
lea
cdq
setg
cmps
mov
cs
fnsave
jmp
dec
mov
loope
lods
mov
dec
ss
add
(bad)
ds
adc
pop
sar
fidiv
mov
jb
push
inc
push
cmps
sub
jae
mul
retf
lods
push
in
and
sbb
jg
pop
mov
lock
movs
fadd
sub
fimul
lock
ss
sbb
inc
push
mov
bound
stos
call
xchg
movs
dec
inc
push
add
push
mov
dec
pusha
in
(bad)
xor
in
mov
and
mov
ret
pop
dec
inc
dec
mov
and
rcr
sub
(bad)
repz
lea
mov
pop
mov
aad
add
inc
int
das
lahf
out
jnp
jge
push
inc
fwait
popf
cdq
mov
ins
dec
jne
movs
jns
mov
pop
or
(bad)
mov
and
into
mov
jmp
(bad)
jl
fisubr
cmp
cs
mov
pop
mov
movs
aam
mov
push
jno
sar
aas
test
das
aaa
outs
jno
lods
jle
cmp
push
jb
pop
mov
retf
mov
(bad)
call
jmp
adc
ror
fwait
sub
arpl
pushf
imul
push
pop
jo
sbb
aas
mov
inc
add
adc
mov
aad
clc
ja
imul
out
push
call
pop
inc
mov
repz
aas
pop
xor
inc
shr
(bad)
push
sub
pop
ja
sub
jae
fmul
push
sub
sub
rol
popa
std
adc
imul
(bad)
(bad)
mov
rcr
xchg
out
inc
cmp
lock
push
bound
nop
mov
inc
icebp
xchg
frstor
mov
sub
fisub
fnstcw
fld
jns
ret
push
scas
sub
inc
inc
pop
lea
call
mov
add
je
mov
sbb
test
push
into
dec
addr16
(bad)
xor
xor
in
mov
push
test
inc
pop
cs
add
aas
adc
rcr
sbb
push
adc
test
int
rcl
pusha
dec
cmp
jle
int
cmp
clc
jb
adc
stc
int3
adc
and
xchg
mov
icebp
push
shl
or
mov
les
cmp
pop
enter
sti
repnz
in
mov
test
inc
ins
ss
push
jns
mov
(bad)
out
sbb
cs
in
rcr
jb
add
jnp
ret
push
dec
mov
cmp
rcl
xchg
or
retf
iret
das
movs
mov
cmps
xor
repz
cmp
and
(bad)
outs
pushf
sahf
xchg
into
lea
test
mov
(bad)
lock
les
ret
pop
sbb
xchg
out
and
cmps
add
out
and
scas
and
dec
mov
jb
xor
or
loop
xchg
mov
xchg
pop
sub
movs
loop
mov
push
fmul
or
cmp
fld
add
int3
pop
pushf
cmps
mov
inc
xchg
(bad)
mov
xchg
and
call
or
dec
dec
add
out
sar
xchg
push
nop
sahf
mov
pop
retf
mov
clc
aas
push
fdivr
xchg
out
and
inc
sbb
mov
jbe
mov
sbb
pop
aad
cmp
xor
out
xchg
aas
mov
adc
add
and
lock
pop
xchg
mov
cmps
jae
jo
xchg
cmp
(bad)
mov
pop
add
ins
push
arpl
jb
aas
test
into
adc
(bad)
adc
mov
add
test
ins
mov
outs
test
lahf
xor
rcr
pop
ins
bnd
jmp
enter
rol
xor
out
sbb
jae
cmps
jecxz
iret
loope
sbb
enter
push
mov
sbb
hlt
lods
or
inc
nop
sub
ss
out
jno
inc
cdq
pop
inc
xor
(bad)
shl
cmp
shl
fsub
add
jmp
dec
mov
xor
mov
cld
xchg
neg
mov
shl
ret
pop
sti
xor
adc
add
xor
mov
fcomp
adc
je
(bad)
mov
mov
in
pop
sub
ins
cdq
mov
dec
sub
jecxz
sahf
xor
rol
mov
pop
out
sub
adc
xchg
xchg
push
fs
jb
mov
aas
xor
xchg
mov
push
out
dec
stos
fmul
or
and
mov
add
psrad
xchg
pop
lock
(bad)
pop
pop
and
retf
into
in
xor
dec
sub
loopne
jg
inc
jecxz
shl
ret
je
pop
(bad)
ror
pop
aad
dec
add
add
rcl
mov
scas
popf
jp
lods
and
xchg
les
repz
mov
push
push
mov
mov
call
jp
jmp
and
mov
cld
out
cmp
adc
jae
aas
adc
lock
sub
dec
cli
inc
loop
dec
mov
scas
adc
adc
and
add
xchg
xchg
jge
scas
mov
and
adc
lock
rcr
xor
test
ficomp
in
jno
in
adc
xchg
mov
mov
outs
jb
mov
mov
ror
mov
push
push
cli
jg
xchg
lahf
cmp
xor
jp
std
push
push
add
inc
sbb
aad
in
mov
ffreep
cs
call
stos
add
pop
mov
xchg
mov
pop
xor
push
xchg
fwait
pop
push
cmp
stc
pop
rcr
xor
or
iret
bound
stos
lahf
cmp
jp
inc
stos
xchg
sub
stos
pop
mov
cmp
es
xchg
inc
sbb
pop
xlat
loopne
call
pop
push
pushf
dec
cmp
mov
mov
inc
pop
sbb
out
inc
push
sti
mov
ja
jbe
mov
setb
mov
xchg
repz
frndint
mov
and
bound
loop
shl
mov
mov
je
aad
addr16
push
lea
and
mov
mov
inc
jbe
and
pop
sbb
xor
jb
inc
(bad)
fdivr
dec
(bad)
iret
mov
mov
push
or
or
adc
lahf
cmp
xchg
and
mov
jg
sbb
(bad)
sub
dec
inc
mov
aad
add
mov
ja
sti
xchg
mov
jmp
in
sbb
adc
bound
add
mov
icebp
adc
pop
push
sub
add
bound
mov
dec
jo
xchg
pop
sbb
js
and
push
dec
int
loope
mov
pop
pop
mov
push
test
jge
movs
lahf
and
mov
push
int
adc
arpl
icebp
xor
mov
aad
or
sub
and
int
pop
xchg
pop
rol
test
aaa
jge
out
mov
sub
sahf
mov
mov
cmp
mov
push
push
pop
(bad)
jo
jae
push
xor
jmp
jecxz
in
pop
pusha
ret
adc
pop
lahf
fisttp
loop
mov
jnp
cmp
ins
lods
xor
(bad)
sbb
out
mov
adc
mov
jg
or
dec
jg
xor
xor
retf
in
push
enter
dec
push
cmp
clc
in
mov
pushf
icebp
(bad)
addr16
or
(bad)
and
mov
xchg
cmp
push
int
adc
pusha
mov
push
popf
inc
icebp
dec
cmp
jae
cmp
mov
mov
sbb
aad
add
add
xor
mov
push
mov
sbb
iret
sbb
(bad)
jmp
repnz
fnstsw
dec
arpl
inc
adc
sti
add
pusha
retf
pop
mov
or
xor
or
mov
(bad)
pop
mov
pop
outs
imul
xor
retf
dec
mov
data16
addr16
retf
enter
repnz
push
int
call
out
jle
ins
stos
ins
jbe
retf
(bad)
sbb
add
fisub
retf
inc
in
mov
push
mov
js
pop
cmps
loop
push
xor
or
out
rol
mov
mov
adc
leave
stos
mov
shl
inc
das
stos
out
pushf
push
pop
dec
jecxz
jns
jg
push
fmul
push
ss
lods
outs
push
fild
outs
cmp
cli
in
pop
mov
into
repnz
xchg
push
sub
mov
cmps
mov
inc
or
ins
idiv
xor
cmp
mov
cmc
sar
data16
adc
mov
jbe
outs
(bad)
inc
pop
out
hlt
mov
cs
jle
retf
icebp
shr
cs
data16
xor
stc
xchg
adc
mov
aaa
mov
cmps
mov
call
sbb
es
jbe
sbb
xchg
popa
mov
mov
cs
inc
xor
xor
jno
sar
aas
mov
ret
dec
mov
inc
pushf
jmp
outs
mov
stos
xor
sahf
xchg
inc
jl
jg
jb
(bad)
retf
mov
push
jb
stos
dec
adc
cmc
in
push
fild
pushf
xor
clc
pop
and
fsubr
bound
xchg
cs
mov
fisubr
(bad)
out
add
jmp
fsub
retf
xor
psubw
inc
jb
xchg
pop
out
push
bound
bound
sbb
pop
stos
mov
out
add
out
(bad)
cdq
dec
add
or
(bad)
int3
dec
mov
xchg
lahf
ss
and
ins
adc
cli
scas
ins
sub
xor
popf
stos
in
ret
pop
test
jmp
repz
mov
xor
outs
retf
or
ins
inc
ret
rcl
ficom
shl
popf
inc
xor
sbb
dec
iret
push
jnp
test
xor
les
pop
mov
mov
cmps
cs
out
push
repz
mov
push
dec
mov
mov
popf
call
inc
nop
jl
dec
fidivr
pushf
pop
pop
ins
adc
sub
les
pop
or
ds
in
mov
sub
das
addr16
lods
outs
inc
xor
sub
dec
es
shl
call
arpl
inc
pop
movs
ins
cmps
out
and
mov
add
mov
dec
pop
or
pusha
loop
fnstcw
cs
mov
arpl
jp
jge
mov
int3
cwde
push
mov
mov
in
mov
mov
dec
pusha
js
inc
adc
and
cmp
sub
outs
pop
dec
add
scas
adc
ins
das
or
out
mov
(bad)
hlt
mov
add
jmp
xor
and
test
fmul
dec
push
es
dec
pop
adc
add
out
cli
out
or
fadd
pop
repnz
and
adc
(bad)
pop
push
into
push
lock
call
repz
lock
scas
xor
call
or
sti
and
dec
scas
jne
sbb
xlat
call
ss
cmps
or
lea
repnz
sbb
mov
repnz
pop
aad
in
mov
fucom
adc
mov
in
mov
sub
mov
shl
enter
mov
ins
jp
cmp
psrld
out
dec
ret
mov
ds
and
mov
repz
add
xor
inc
inc
adc
data16
adc
sub
xchg
push
push
pushf
adc
push
(bad)
jge
and
inc
cmp
jle
out
icebp
adc
and
mov
pop
je
ja
and
push
jb
dec
cmp
cmp
lock
push
scas
cmps
test
fmulp
cld
loop
or
jmp
inc
lahf
sar
sub
dec
dec
daa
mov
ss
jle
or
xchg
xlat
or
jmp
mov
push
int3
xor
stos
mov
or
aam
out
mov
daa
outs
jecxz
ret
sbb
ins
or
cmps
inc
add
cmp
push
ret
jns
mov
xor
mov
aaa
(bad)
pop
sbb
fchs
lods
and
fild
stos
hlt
push
(bad)
sbb
fidiv
adc
fcos
rcr
lds
mov
das
pushf
xchg
in
and
(bad)
push
sub
mov
out
mov
neg
rcr
call
push
jle
mov
sbb
dec
mov
nop
inc
cmp
xor
push
cmps
aas
jno
stos
lods
cmps
dec
inc
jp
mov
sbb
push
cmp
leave
add
out
inc
mov
int
mov
cs
aaa
mov
fucomip
sbb
fisttp
popf
add
jns
gs
fistp
data16
ins
jg
adc
inc
out
push
shl
mov
fmul
icebp
out
push
popf
sub
dec
dec
dec
pop
test
fistp
cli
or
call
push
adc
arpl
ret
into
stc
stos
and
(bad)
retw
and
push
xchg
and
fidiv
and
cmp
in
sub
add
add
lods
mov
or
jns
push
(bad)
mov
int
aam
xchg
mov
fmulp
das
add
into
sahf
add
xchg
and
inc
and
into
scas
out
dec
sbb
rol
(bad)
sbb
sbb
cld
movs
test
mov
pop
and
mov
sub
dec
push
sub
js
inc
cmc
call
out
movs
inc
in
xchg
std
adc
repz
adc
push
mov
mov
ins
out
pop
(bad)
xor
xchg
cmp
jb
xrelease
push
int
adc
sbb
jo
lahf
outs
cdq
ret
cmc
repnz
cld
(bad)
lock
scas
retf
push
dec
jb
xor
dec
mov
not
daa
pop
dec
mov
stos
mov
ds
dec
jnp
test
pop
scas
dec
hlt
in
std
enter
inc
out
jne
mov
or
mov
fidivr
mov
loop
push
cmps
sbb
push
cdq
mov
movs
retf
loope
mov
(bad)
mov
add
scas
jmp
inc
dec
movs
arpl
inc
push
call
xchg
(bad)
loop
in
adc
loopne
lods
inc
(bad)
outs
dec
jle
push
jle
clc
(bad)
repnz
and
mov
adc
xor
xlat
mov
sbb
sub
mov
aad
jae
mov
bound
daa
mov
mov
push
sbb
ror
adc
mov
outs
lea
add
add
(bad)
shl
or
aad
jmp
rcl
bound
ds
dec
in
cs
leave
bound
mov
mov
inc
loop
adc
loopne
(bad)
scas
pop
pushw
cmps
and
sbb
or
or
pop
dec
add
mov
das
stos
pop
fistp
inc
shr
inc
bnd
retf
cmps
ror
ret
outs
or
ins
mov
xchg
sub
xor
imul
hlt
pop
rsqrtps
(bad)
cmps
loope
xrelease
mov
test
xchg
outs
outs
xchg
inc
xchg
data16
bound
cmp
loopne
retf
xchg
sbb
out
push
sbb
jbe
xlat
pusha
cs
cwde
imul
out
mov
pop
movs
xchg
xor
dec
loopne
adc
rcr
pop
mov
bnd
dec
fbld
xchg
and
cmc
movs
jle
lea
jmp
add
pop
sub
(bad)
repnz
ret
mov
sbb
push
add
push
scas
jae
outs
in
jp
frstor
movs
repnz
(bad)
call
xchg
cmp
mov
mov
dec
jge
push
inc
push
sub
les
xor
pop
inc
into
inc
es
movs
and
dec
fld
outs
js
pop
xor
loop
push
lahf
in
xchg
xchg
inc
hlt
(bad)
loop
cli
jl
mov
xchg
mov
iret
sbb
arpl
add
pushf
jo
add
pop
sahf
add
adc
and
lahf
das
push
or
dec
gs
aam
inc
xlat
sti
mov
or
pop
inc
test
ret
mov
sbb
lods
xor
fidivr
jmp
mov
pop
cmp
cmp
cmp
(bad)
gs
lods
xor
add
add
js
jne
imul
test
pop
push
pop
rcr
and
cld
test
rcl
and
cs
xchg
imul
outs
and
das
test
jo
and
and
sub
mul
pop
fs
mov
adc
cmp
std
push
push
btr
mov
sbb
xchg
outs
retf
dec
jmp
dec
mov
cwde
movs
mov
pop
sbb
icebp
jne
jle
xor
cli
fs
fmulp
bound
(bad)
lock
pop
js
xchg
daa
jge
push
or
sub
adc
(bad)
into
xlat
push
inc
int
movs
push
retf
aas
jae
or
retf
jmp
iret
gs
out
mov
repnz
mov
(bad)
je
cmp
fmul
sbb
sbb
push
xor
ret
jmp
repnz
cld
and
stos
jmp
pop
mov
data16
rol
icebp
or
fisttp
in
cmp
push
sub
xchg
cmp
imul
mov
int3
ins
add
or
fdiv
pop
mov
sub
dec
fxch
sbb
cmps
adc
aad
cs
and
inc
cmps
mov
push
fisub
xchg
out
(bad)
pop
neg
lahf
pop
sub
mov
jg
sbb
push
sub
pusha
retf
mov
jns
cmp
sub
mov
cmps
inc
mov
mov
jbe
xor
test
cs
inc
cwde
pop
dec
jb
out
mov
les
cmc
leave
xchg
dec
sbb
pop
mov
and
xchg
or
jbe
(bad)
sbb
inc
pop
adc
lock
scas
scas
and
mov
or
(bad)
mul
cmps
fidiv
ret
fcmovbe
push
sbb
lock
adc
scas
stos
cs
push
call
loopne
dec
pop
mov
inc
sbb
ret
loop
inc
dec
pop
push
mov
cmp
xchg
mov
jmp
addr16
repz
in
sahf
mov
jmp
mov
outs
lods
inc
cmps
or
scas
and
retf
jbe
jge
mov
cmp
add
aad
or
pop
cmp
xor
lahf
ret
sahf
fstp
sbb
rol
mov
jg
push
ds
and
ss
dec
lock
ret
imul
les
xlat
push
cmp
mov
dec
sub
add
mov
mov
cmp
or
mov
rol
int3
ret
sti
adc
call
retf
mov
jbe
or
mov
xor
inc
add
inc
jecxz
or
rcl
mov
pop
sbb
jno
pop
mov
mov
and
mov
push
sub
adc
dec
ds
mov
out
js
pop
fist
pusha
xor
rol
sub
push
xchg
jbe
xchg
xchg
jmp
mov
shr
loop
push
fisttp
xor
jg
fs
mov
gs
pop
jbe
and
sbb
scas
imul
xchg
dec
xchg
add
(bad)
popa
jns
push
or
ss
mov
ret
retf
pushf
jl
das
jecxz
jecxz
loopne
lea
sub
push
pop
aam
dec
imul
pop
inc
and
lods
mov
ror
ds
fsub
cmp
outs
cwd
jo
jo
pop
in
adc
mov
mov
add
jb
inc
ss
pop
out
adc
cmp
ret
int3
dec
mov
mov
ins
call
dec
inc
jp
hlt
out
nop
out
jl
xor
pop
mov
aam
dec
mov
into
mov
dec
rcl
cmps
push
jae
xor
sub
sahf
cmps
mov
xor
xchg
loopne
cmp
and
test
fcom
mov
mov
xchg
mov
sub
pop
int3
ret
jbe
jl
(bad)
stos
shr
sub
arpl
movs
sahf
dec
jl
xor
outs
repnz
mov
outs
ins
(bad)
(bad)
je
mov
pavgw
fiadd
xor
pop
xchg
ffree
data16
push
dec
ret
(bad)
loope
xchg
cld
jo
jl
xor
call
and
mov
or
mov
std
xchg
ins
dec
jmp
xor
call
xor
xlat
dec
int3
fldenv
(bad)
jmp
ret
and
pop
into
or
xchg
pop
jle
shl
ror
into
add
(bad)
pop
scas
inc
dec
hlt
imul
call
movs
int3
ins
arpl
mov
cmp
iret
stos
xchg
jecxz
sub
sbb
mov
ret
push
adc
mov
sub
and
push
inc
pop
pop
add
inc
push
jmp
ret
in
aas
adc
sbb
add
call
cs
test
retf
std
imul
das
mov
mov
dec
sbb
iret
jnp
sub
hlt
sub
xchg
retf
mov
dec
fisubr
xchg
das
or
retw
rol
rol
mov
jns
jb
xchg
jne
mov
xchg
mov
imul
daa
je
leave
mov
add
test
mov
(bad)
jbe
dec
or
mov
add
inc
push
inc
jae
or
retf
mov
fisub
push
xor
mov
movlps
aad
fs
inc
or
ror
add
pop
push
sbb
lock
dec
sub
sbb
add
push
fimul
fwait
sbb
mov
jmp
mov
sti
mov
inc
psubusb
xchg
pop
fwait
cmps
lods
int3
cld
das
bound
sar
adc
mov
or
push
das
mov
ret
sbb
outs
and
dec
cs
push
and
cmp
jnp
xor
movs
xchg
aad
xor
sub
inc
inc
pop
rol
add
mov
imul
lods
in
std
(bad)
stc
out
dec
hlt
or
pop
fs
xor
inc
fidiv
test
adc
pusha
dec
adc
pop
fwait
sbb
push
push
aaa
xor
(bad)
sar
leave
xchg
pop
out
mov
rol
(bad)
sbb
pop
popa
pop
xor
jb
add
cli
neg
hlt
cdq
push
jg
pop
xchg
mov
xchg
push
inc
out
and
pop
(bad)
es
dec
cli
jp
call
loop
add
pop
dec
pop
xor
pop
call
aam
add
push
js
sub
mov
push
mov
xor
mov
push
(bad)
and
leave
adc
inc
inc
jns
int
jg
pop
dec
push
sbb
pop
lock
call
fs
pop
into
mov
adc
call
jg
pop
add
test
mov
jecxz
repz
popa
pop
jb
xor
or
mov
cwde
repnz
xchg
aad
inc
fmul
xchg
pusha
sub
pop
inc
(bad)
jno
mov
cs
cmp
imul
pop
xlat
(bad)
in
push
push
inc
lods
retf
mov
outs
cmps
pop
mov
sub
stc
mov
aam
das
pop
or
or
sbb
hlt
dec
or
test
adc
dec
arpl
ret
xlat
mov
ins
xor
sbb
jae
inc
pop
adc
add
(bad)
(bad)
mov
push
data16
test
fwait
inc
sub
pop
jl
rcr
shl
in
xchg
popf
xor
movs
mov
xlat
inc
pusha
(bad)
sub
xor
mul
add
cmp
xor
pop
scas
xchg
out
lahf
dec
add
mov
inc
lods
xorps
add
fucomi
cli
out
mov
cli
out
test
arpl
nop
mov
ret
adc
push
in
iret
mov
mov
cwde
mov
mov
(bad)
in
in
xlat
movups
cwde
test
inc
or
mov
mov
mov
fwait
jb
(bad)
push
hlt
lahf
xchg
dec
inc
and
mov
adc
stos
inc
mov
int3
test
es
pushw
movs
fiadd
scas
xor
mov
mov
into
jmp
(bad)
lods
int3
fsub
ins
sbb
arpl
xchg
and
cld
mov
aas
mov
les
mov
inc
test
or
cld
push
(bad)
sbb
or
(bad)
sbb
sbb
mov
sar
in
pop
pop
cmp
pushf
cmp
cmps
ret
inc
iret
inc
loop
push
sub
aaa
add
mov
jno
sar
mov
dec
mov
stc
rcr
js
mov
and
lds
shl
out
imul
out
dec
jecxz
mov
push
movs
dec
ret
fbld
movs
cs
out
test
(bad)
(bad)
mov
inc
dec
pop
push
push
and
movs
sub
xchg
sub
push
repz
out
pop
int
fcomi
mov
inc
xchg
scas
jbe
and
aaa
mov
and
loope
mov
ret
imul
bound
gs
jo
xor
adc
and
push
ins
lods
out
cmps
sbb
or
mov
jle
pop
ja
(bad)
xchg
outs
jmp
lods
push
leave
sub
cmp
stos
cmps
and
loop
sar
lods
or
jb
adc
aas
cmps
fisub
pop
into
add
mov
cmp
test
or
jb
call
xor
cmp
inc
inc
dec
fisttp
mov
xchg
call
push
rol
xor
cmp
out
dec
mov
clc
in
mov
pop
mov
lods
test
je
add
sbb
jne
jo
pop
retf
xchg
ds
mov
gs
or
lea
and
sahf
add
mov
mov
(bad)
mov
dec
jmp
pop
(bad)
mov
and
das
or
ret
add
mov
imul
adc
fidiv
xlat
aaa
push
loopne
jl
aas
jmp
dec
xor
bound
inc
adc
(bad)
repz
mov
sbb
je
mov
outs
adc
std
xor
mov
call
stos
jb
dec
mov
out
mov
add
aam
lahf
sbb
ins
jp
push
enter
sub
out
mov
outs
out
out
pop
adc
mov
push
mov
stos
(bad)
adc
adc
jnp
mov
pusha
mov
mov
push
adc
push
cs
pop
xchg
dec
jge
sbb
cmp
fmul
je
mov
and
arpl
out
fcmovnu
stc
push
rcr
int3
adc
mov
retf
cmps
data16
inc
dec
into
and
pop
mov
scas
push
or
mov
jb
adc
cmp
sub
leave
xor
jp
cs
nop
mov
sbb
adc
cmp
add
push
sti
(bad)
js
cli
jecxz
xor
and
scas
inc
jle
dec
(bad)
dec
mov
(bad)
mov
ficomp
aas
cmp
loop
(bad)
in
ja
hlt
add
push
mov
xchg
mov
ins
and
push
cmp
stos
add
lea
xchg
and
mov
cmp
jg
push
bound
push
test
adc
les
movs
imul
xlat
and
ins
jb
sbb
hlt
xchg
jbe
into
push
mov
imul
mov
aad
mov
pop
push
clc
push
push
pop
mov
enter
std
fisub
fild
es
fcomi
cmp
sub
sbb
ds
xor
push
sub
into
sbb
dec
mov
sbb
cdq
xchg
jle
mov
mov
(bad)
mov
fcmovnbe
push
ret
cld
cmp
dec
add
and
sub
inc
ds
lea
shr
cdq
inc
xchg
cmps
mov
imul
shr
jo
out
jge
test
enter
cmp
jbe
push
inc
out
iret
jp
xchg
call
adc
std
aaa
frstor
xchg
icebp
cmp
push
or
cmp
mov
in
enter
out
dec
cmps
retf
push
lds
arpl
into
mov
mov
es
test
in
jmp
shl
push
pop
sub
jp
pop
dec
popf
xchg
nop
or
call
ins
inc
ins
data16
in
(bad)
xlat
pop
sub
rol
pop
cmp
imul
pop
fld
pop
xor
or
xor
cmp
mov
fst
dec
or
retf
sahf
mov
gs
jle
sbb
data16
and
push
jb
sbb
push
mov
adc
jb
or
or
lds
add
icebp
in
or
xchg
xchg
aas
cmp
(bad)
in
mov
mov
aaa
and
inc
call
icebp
(bad)
popa
or
mov
pop
pop
mov
jb
cli
cmp
and
sub
pmuludq
mov
sbb
add
jg
icebp
and
dec
push
ins
add
std
in
scas
sbb
test
int3
(bad)
fsub
push
jns
jb
mov
jg
(bad)
imul
inc
xchg
test
push
das
cwde
les
icebp
cmc
jecxz
hlt
and
lock
jle
xor
xor
out
mov
jmp
scas
xchg
scas
mov
and
(bad)
mov
push
push
pusha
pop
xor
adc
(bad)
out
xchg
pop
mov
mov
stos
or
dec
push
mov
cmp
pushf
xchg
mov
bound
scas
bound
daa
cli
mov
mov
push
pop
loop
sub
xchg
(bad)
mov
outs
mov
out
inc
sbb
push
les
or
xor
retf
mov
jecxz
cmp
bound
mov
add
cs
sub
pushf
aas
inc
xchg
shr
stos
ins
dec
jnp
or
imul
dec
test
mov
push
clc
cmp
lahf
ss
mov
cli
jno
mov
fs
mov
imul
sub
ficomp
inc
jg
mov
jbe
scas
mov
ret
fsub
pop
idiv
and
sub
call
in
sbb
jmp
(bad)
dec
mov
cli
xor
cdq
shr
ja
in
push
bnd
mov
push
dec
fwait
adc
jle
pop
sbb
pop
and
mov
test
sbb
inc
addr16
or
add
adc
ret
mov
sar
inc
pop
push
add
pop
mov
inc
js
fidivr
add
mov
sub
(bad)
fldcw
pusha
sub
(bad)
pop
dec
jo
jle
pop
cmps
inc
cdq
movs
outs
movhlps
int3
cs
retf
repnz
lods
cmp
aad
xlat
ds
push
ret
lea
xlat
out
inc
jb
and
pop
retf
push
inc
outs
icebp
mov
call
add
dec
inc
sbb
arpl
popa
inc
mov
xor
push
outs
call
cmp
sub
shl
nop
cld
sti
push
leave
int3
lea
mov
pop
in
xchg
mov
pop
icebp
mov
xchg
cs
or
retf
or
push
or
(bad)
aas
hlt
sti
mov
add
mov
mov
xchg
into
scas
lock
inc
into
jae
ret
push
(bad)
mov
nop
test
jbe
out
mov
push
jmp
dec
out
sar
retf
xchg
mov
xchg
retf
mov
mov
jge
add
fwait
sub
jnp
and
in
and
cmp
cld
push
mov
mov
out
jae
ror
dec
in
fimul
push
cmp
mov
xor
lahf
push
mov
dec
and
jo
sub
xor
clc
(bad)
and
test
cwde
cs
mov
fsubr
in
repz
les
pop
fs
sub
sub
lock
inc
jmp
xchg
xor
pop
mov
aas
or
dec
push
dec
repnz
cmc
mov
xchg
movs
cmp
enter
shl
mov
dec
fild
cmp
inc
scas
popa
xchg
in
adc
data16
out
jmp
add
xor
push
xor
mov
jp
push
icebp
inc
and
xor
enter
daa
jo
popf
movs
pop
dec
cld
loop
repnz
add
mov
push
test
inc
jle
jno
cmp
sub
int3
ds
or
mov
cmp
mov
mov
inc
leave
lods
adc
movs
aaa
jge
cmp
xor
inc
jb
inc
(bad)
lea
shr
sahf
xchg
jb
inc
dec
loopne
cmp
xlat
mov
cs
das
jbe
adc
jns
retf
sub
mov
mov
fwait
scas
xchg
lahf
xchg
int
ins
adc
jb
jb
sar
fsubr
pushf
fisubr
mov
ins
jnp
sbb
mov
xchg
push
inc
inc
push
(bad)
adc
adc
inc
or
les
xor
inc
inc
jnp
call
sub
push
dec
dec
ror
pop
mov
fist
stc
inc
mov
push
and
gs
div
loope
push
xchg
push
sahf
scas
jmp
mov
fdivr
mov
adc
push
cmp
inc
mov
je
out
xor
mov
daa
cmovae
push
jl
iret
or
inc
or
(bad)
fist
(bad)
cmps
or
mov
outs
into
jmp
cwde
in
pop
ds
mov
xlat
or
jbe
mov
call
lahf
outs
cdq
jo
cmp
out
(bad)
fwait
into
pusha
fbstp
mov
addr16
xchg
scas
inc
jo
pop
pop
clc
jl
mov
call
jecxz
mov
mov
and
ret
pop
mov
pop
aaa
psrld
retf
out
rcr
(bad)
jno
push
mov
jg
outs
fld
mov
mov
test
dec
inc
jl
call
jae
in
daa
xor
or
pop
js
outs
adc
pop
idiv
out
pop
loop
push
fsubr
fwait
pushf
ja
cld
add
add
out
xor
lea
jecxz
leave
jge
int
mov
clc
xchg
mov
and
dec
xor
or
pop
inc
cmp
mov
mov
pop
sub
dec
jle
pop
movs
call
in
(bad)
std
add
out
cld
sbb
add
jmp
sbb
jp
mov
jmp
mov
dec
or
pop
movs
out
pop
fnsave
lods
lahf
aam
push
push
and
xor
out
sbb
(bad)
out
jae
and
inc
rcl
mov
aas
and
das
loop
outs
xchg
cwde
inc
lea
imul
inc
push
lahf
dec
inc
in
mov
mov
lods
adc
lods
js
div
inc
das
xchg
jl
sti
mov
mov
xor
push
mov
shl
mov
xchg
enter
dec
xor
sub
pop
lock
push
out
pop
pop
xchg
jbe
loope
fsub
pop
jne
loopne
rcr
xchg
sub
pop
ror
out
or
xor
(bad)
pop
outs
pop
arpl
in
pushw
in
jo
pop
xchg
bound
lods
adc
shl
xchg
movs
inc
cmp
adc
push
js
sbb
adc
jne
pop
loope
inc
jmp
fsub
pop
lods
mov
xor
xor
mov
mov
xchg
sti
repnz
xchg
jmp
xchg
dec
inc
dec
dec
push
mov
test
sub
xchg
add
shr
xlat
nop
jae
xchg
or
shr
out
retf
adc
mov
(bad)
mov
call
add
mov
push
jl
cs
pop
les
ret
inc
push
(bad)
push
(bad)
push
nop
dec
dec
mov
cmp
pop
int3
mov
jg
ret
hlt
pop
retf
adc
mov
inc
fdiv
pop
sub
lods
scas
push
int
(bad)
push
jl
(bad)
mov
cmp
scas
dec
outs
mov
mov
adc
or
mov
outs
das
cwde
lds
inc
out
xor
mov
mov
and
jecxz
push
test
ret
adc
ins
adc
mov
div
imul
ret
(bad)
div
stos
loopne
dec
add
je
cmp
lea
in
ret
sub
sahf
push
or
push
shr
repnz
pop
clc
stos
mov
lods
push
cmp
push
cmp
adc
retf
out
mov
scas
cdq
jnp
mov
adc
xchg
cmp
mov
mov
mov
hlt
sahf
mov
call
outs
arpl
cld
mov
in
clc
inc
ret
(bad)
push
pop
sub
rcr
push
imul
inc
retf
aaa
test
or
(bad)
xchg
out
mov
mov
jne
mov
outs
adc
pop
cli
add
push
ret
adc
adc
sbb
pop
pop
neg
je
outs
jns
loop
push
in
sub
repnz
test
dec
and
push
sbb
dec
and
call
int3
les
sub
mov
dec
leave
lods
add
push
mov
dec
mov
mov
inc
cs
pop
sub
mov
mov
add
mov
pop
add
(bad)
cmp
sti
xlat
add
sub
fxch
adc
loop
sbb
mov
retf
jp
mov
addr16
mov
add
(bad)
jg
dec
(bad)
jae
aam
mov
shl
pop
cmp
jp
mov
dec
aam
ret
xor
out
sub
out
mov
loop
dec
into
push
sbb
in
and
fimul
lods
and
retf
mov
cmp
pop
xchg
das
cld
pop
cmp
cmp
and
push
call
shr
or
mov
inc
imul
rol
out
xor
jb
ret
cmc
mov
cmp
mov
out
push
fistp
movs
xor
(bad)
pusha
lahf
dec
and
sub
cs
maxps
cwde
add
dec
inc
push
adc
leave
(bad)
cli
repnz
ins
sar
cmps
cmp
fist
repnz
fdivp
xor
sbb
pop
ja
push
fstp
out
inc
jecxz
cwde
jmp
sub
cdq
fwait
or
or
inc
and
cmp
xchg
stos
inc
inc
adc
or
(bad)
xchg
repnz
inc
stos
ret
jge
push
scas
inc
mov
fld
sar
push
xchg
(bad)
fiadd
sub
mov
cmp
into
loope
adc
dec
add
or
lahf
pop
and
add
push
add
pushw
push
loopne
lds
loop
push
fdivrp
jbe
nop
rcr
fld
pop
dec
xchg
mov
push
movs
sub
xor
neg
jbe
jp
ins
sar
mov
cli
in
adc
adc
and
sub
dec
jmp
mov
jbe
mov
les
(bad)
out
jb
(bad)
fimul
out
fmul
jl
sbb
test
jecxz
mov
add
je
pop
jae
jecxz
cmp
mov
clc
sub
sbb
mov
inc
jecxz
xchg
pop
mov
inc
aas
lds
scas
fucomp
pop
mov
idiv
cmps
inc
mov
les
push
ret
mov
rcr
and
jl
arpl
xchg
dec
mov
xchg
ret
sbb
stos
and
push
xor
add
es
ds
sub
xchg
pushf
push
xchg
aad
push
sub
movs
jp
popa
xchg
jecxz
push
pusha
add
rcr
mov
repnz
into
call
mov
and
sahf
xchg
cs
fnstcw
ins
ret
fdivp
mov
mov
dec
sbb
ret
pop
arpl
pop
lahf
push
xor
int3
mov
clc
adc
pop
sub
sbb
neg
inc
mov
adc
and
sbb
cs
inc
mov
push
nop
mov
xor
push
sub
fisub
add
bound
push
jl
outs
cli
mov
loop
cmc
(bad)
and
push
icebp
aam
add
fld
and
sbb
xor
xor
pop
jmp
loopne
adc
leave
(bad)
mov
data16
jg
jo
lds
jmp
sbb
enter
xor
mov
xor
inc
ficom
cld
ret
das
dec
js
or
fnstcw
(bad)
fsubr
in
aaa
scas
sahf
pop
mov
dec
fstp
xor
sub
les
lahf
test
fnstsw
(bad)
repz
aad
cmp
add
cmp
rcr
mov
xor
push
stc
or
je
jle
sahf
dec
xchg
xchg
daa
pop
cwde
push
and
pop
mov
push
mov
adc
and
mov
mov
lahf
xchg
dec
pushf
in
pop
(bad)
pusha
out
loop
rcl
arpl
jmp
(bad)
stc
das
jbe
lds
adc
push
(bad)
jp
inc
ror
js
sbb
repz
pop
jmp
sahf
sti
dec
cmp
out
mov
fnstcw
ss
jecxz
imul
jbe
add
cmp
sbb
retf
inc
lock
into
aad
test
mov
cmp
lods
outs
inc
and
fbld
jle
shl
cdq
sbb
sub
mov
ins
adc
movs
(bad)
mov
jne
dec
gs
add
push
add
push
and
(bad)
xchg
icebp
xor
adc
mov
cdq
cwde
data16
push
mov
ret
pop
push
and
sub
jmp
and
int
(bad)
and
mov
xchg
adc
stos
ror
adc
arpl
adc
outs
push
cmp
xchg
add
aam
out
lock
popa
dec
mov
iret
sti
mov
pushf
ror
lods
enter
cdq
mov
out
in
pusha
scas
cli
and
popf
rcl
retf
(bad)
hlt
aas
ss
mov
sti
das
xor
mov
out
and
loop
shl
hlt
and
mov
shr
add
mov
in
jnp
enter
fisub
mov
imul
ds
loope
scas
jecxz
cli
sub
xchg
mov
test
test
sub
push
loop
mov
movs
pop
popa
mov
imul
js
pop
push
call
and
xor
call
cld
cmp
pop
cdq
lahf
ficomp
adc
outs
sub
and
pop
jl
adc
pop
sub
lds
mov
adc
repnz
xor
jmp
dec
das
dec
popf
data16
cdq
and
adc
ins
call
scas
jmp
push
or
(bad)
out
pop
mov
jge
(bad)
mov
fcomp
and
es
xor
mov
sub
es
dec
fisub
and
ins
jae
loope
xadd
sub
iret
(bad)
stos
into
inc
mov
or
jle
or
and
mov
xor
and
pop
je
xchg
push
int3
call
mov
idiv
pop
loop
es
cmp
jmp
xchg
sbb
push
movs
mov
cmp
pushf
pusha
cmp
sub
mov
inc
shl
out
add
int
loopne
pusha
fild
das
ds
fild
dec
mov
pop
xchg
(bad)
in
xlat
or
pop
jl
jno
fbld
leave
cmp
and
push
loope
(bad)
loopne
jl
mov
inc
es
dec
xchg
adc
imul
rcr
les
idiv
pop
push
in
add
inc
jmp
mov
inc
inc
fistp
mov
test
jo
add
pop
push
(bad)
dec
jmp
scas
ret
mov
and
jo
cwde
adc
dec
test
out
xor
and
push
aaa
ret
push
sar
ret
jecxz
hlt
cli
cli
outs
(bad)
adc
sbb
mov
or
mov
cli
int
stos
stos
popa
in
push
fild
or
shr
les
adc
sub
cs
cmps
call
repz
adc
cmp
or
add
out
dec
pop
sbb
push
(bad)
cli
cdq
mov
cld
das
loop
push
jbe
popa
jae
push
push
and
cmp
add
(bad)
test
outs
ret
pop
arpl
repz
je
xor
cmc
ret
and
adc
push
lods
mov
scas
ins
jmp
add
jb
out
in
neg
pop
outs
mov
mov
or
shr
inc
pop
sbb
fdiv
mov
loop
ins
rcr
jmp
pop
ins
into
imul
sahf
ficom
imul
repz
cvtpi2ps
cmp
adc
and
fcom
stc
shl
shl
mov
ret
dec
popa
push
fstp
push
lahf
ficomp
test
push
mov
pop
xchg
sahf
leave
stc
inc
(bad)
sub
gs
adc
retf
and
cs
or
mov
xchg
iret
xchg
clc
addr16
(bad)
cwde
mov
lods
int
sbb
sub
sbb
mov
mov
ror
and
push
test
dec
jnp
pusha
push
fs
nop
jecxz
(bad)
stc
or
fwait
sbb
sbb
retf
or
dec
dec
pop
(bad)
loopne
cmc
sub
movs
cmps
jo
or
cs
sbb
into
push
cli
pop
cdq
imul
pop
in
inc
mov
out
outs
mov
aaa
mov
sub
mov
dec
mov
push
push
adc
shr
nop
int3
sbb
push
aam
addr16
(bad)
fidiv
and
ins
in
loop
ret
into
or
ficomp
lahf
jb
popa
push
push
jno
dec
or
data16
mov
clc
clc
bound
fmul
rol
adc
ficom
mov
sbb
pop
and
sbb
pop
xchg
cs
jae
sbb
jmp
pop
icebp
sti
pop
adc
adc
jbe
lock
dec
xlat
jecxz
pop
dec
push
shr
add
pop
movs
jns
leave
fisub
mov
or
sub
fdiv
add
movs
push
in
nop
(bad)
fmul
not
adc
scas
fcom
iret
push
movs
pop
push
mov
daa
cdq
call
lahf
mov
xchg
in
scas
cmps
arpl
(bad)
xchg
cld
xchg
inc
fimul
pop
xchg
lds
mov
shl
test
push
push
jmp
sbb
scas
dec
(bad)
cdq
or
adc
mov
mov
sub
xchg
dec
lahf
scas
inc
pop
or
test
pop
lds
add
sar
data16
je
rcr
xchg
fisttp
movs
pop
or
cmp
les
xchg
xchg
push
dec
mov
and
xchg
add
test
mov
outs
cmp
mov
sub
xchg
rcl
cmp
push
(bad)
rcl
or
(bad)
retf
mov
mov
test
(bad)
outs
push
(bad)
sbb
mov
mov
sub
repnz
(bad)
scas
ret
mov
(bad)
cli
vrcpss
jbe
and
stc
xchg
xchg
out
imul
bndstx
pop
aas
dec
xor
mov
retf
xchg
jmp
push
mov
pop
sub
cmp
push
jb
repnz
dec
cmps
addr16
mov
jbe
sub
jle
pop
or
adc
cmp
nop
(bad)
mov
sar
inc
and
push
push
jle
mov
pop
sub
mov
jmp
sbb
stc
loopne
mov
mov
neg
add
arpl
mov
nop
arpl
mov
mov
pop
outs
add
(bad)
or
xor
mov
les
out
daa
mov
iret
ret
mov
xchg
mov
sub
test
xchg
add
cmps
mov
lahf
cmp
mul
mov
sbb
mov
fisub
mov
xchg
pop
mov
(bad)
or
cmps
mov
inc
cmp
pop
loop
(bad)
shl
stos
mov
scas
xchg
repz
mov
push
pop
sub
push
hlt
xor
movs
es
adc
or
(bad)
clc
outs
iret
or
mov
cmp
jg
loopne
es
(bad)
adc
loopne
lods
cs
adc
in
jmp
arpl
sub
add
sub
jl
pop
and
int3
ins
xchg
mov
sbb
mov
fwait
scas
sar
js
add
jo
inc
ficom
push
dec
mov
clc
jp
aam
sub
cli
pop
adc
lods
addr16
mov
mov
dec
push
std
adc
jle
loope
out
xchg
loopne
out
cmps
add
mov
add
je
ins
cmp
pop
and
dec
int3
mov
int3
mov
lock
in
push
xor
adc
inc
outs
push
mov
add
lock
push
inc
in
xchg
pop
mov
push
pop
mov
pop
push
add
add
lahf
mov
test
jb
out
jg
jmp
ins
int3
sbb
jno
adc
fistp
dec
mov
leave
fcmovb
rep
lock
pop
int
cs
push
adc
and
into
not
inc
xchg
popf
cmp
sbb
push
pop
add
sub
add
icebp
repz
xor
outs
cli
scas
xchg
je
aaa
aaa
and
inc
jmp
pop
and
or
into
or
(bad)
adc
xchg
stos
dec
lea
xchg
adc
repz
aam
es
loop
and
mov
mov
das
sub
push
jle
jno
push
(bad)
jecxz
test
icebp
pop
imul
lods
mov
outs
mov
jb
sbb
mov
movs
dec
adc
nop
enter
xchg
mov
and
ret
inc
or
sbb
in
jo
data16
mov
mov
xchg
push
adc
xor
outs
inc
test
sbb
aam
retf
mov
stos
mov
ins
daa
cld
frstor
xor
popf
(bad)
pop
fcom
stos
mov
mov
(bad)
adc
leave
(bad)
out
call
(bad)
mov
mov
retf
pop
push
ja
fild
cmps
loopne
das
jl
mov
sub
push
and
pusha
lods
lahf
inc
adc
fmul
out
and
out
xchg
pop
mov
shl
mov
cmp
add
test
mov
sar
adc
inc
arpl
into
in
rcr
cs
loope
mov
jne
push
jmp
nop
lahf
mov
or
push
(bad)
adc
pop
sbb
loopne
and
cdq
xchg
loopne
hlt
scas
mov
mov
in
mov
add
pop
inc
sub
test
hlt
jo
mov
dec
adc
ins
jmp
pushf
out
sub
sub
dec
leave
xlat
pop
dec
mov
in
out
fimul
jmp
push
pop
adc
in
jo
push
jb
sti
stos
in
sbb
es
cwde
mov
add
mov
dec
lahf
xor
jmp
xchg
push
or
loopne
inc
push
pop
in
jmp
jle
shr
bound
xchg
dec
cdq
mov
fwait
mov
cmc
pushf
cli
test
arpl
mov
jle
push
mov
ror
sub
lock
sub
xchg
ins
cmps
in
fnstenv
lea
ror
lea
shr
jb
sbb
jb
push
(bad)
adc
fs
jmp
sub
test
movs
das
cli
dec
push
sbb
mov
push
jbe
(bad)
loop
xchg
add
rol
dec
cmc
nop
adc
(bad)
neg
mov
dec
jmp
addr16
lahf
iret
inc
sub
fidiv
mov
lods
(bad)
sbb
push
inc
scas
cmps
and
sar
shr
movs
push
cli
mov
or
aad
jle
fst
movs
or
outs
bound
mul
push
ffree
mov
in
sbb
inc
dec
dec
call
cmps
sbb
mov
pushf
inc
mov
xchg
scas
push
mov
ret
pop
jge
mov
xor
mov
mov
and
mov
fcom
xor
imul
aad
scas
cmp
push
pusha
cmp
mov
xor
jge
cwde
adc
sbb
jbe
xor
lds
fistp
and
push
add
mov
shr
mov
or
repnz
xor
cdq
mov
dec
cmp
push
mov
and
or
loopne
mov
loopne
xor
div
pushf
sub
push
push
inc
cmp
adc
loop
fcomp
mov
dec
cmp
jae
fwait
and
sbb
mov
adc
outs
push
out
fimul
aad
mov
or
push
fisub
popf
sbb
xor
bound
push
adc
mov
ret
int
stos
aas
push
cmps
fnstsw
ror
pop
popa
fidiv
bnd
sti
fisttp
int3
dec
jno
popa
xor
pop
aas
xor
add
cmovl
pop
jbe
mov
add
outs
mov
inc
and
dec
cmp
add
ds
mov
adc
adc
sbb
cmp
idiv
sahf
ret
xlat
pop
loope
push
jl
sub
les
cmp
fmul
call
ss
pop
dec
ins
mov
sbb
pop
iret
popf
out
add
push
sar
fidivr
xchg
pop
neg
jno
sbb
cli
and
xor
inc
cwde
push
or
and
jmp
mov
cwde
mov
adc
or
in
mov
add
(bad)
ss
sub
jo
or
pop
cmp
scas
ds
sub
and
ins
int3
dec
cli
add
sahf
mov
adc
add
les
in
popf
mov
cmp
je
xchg
inc
or
sahf
stos
adc
mov
dec
ret
or
jmp
adc
lods
out
inc
ret
and
call
sbb
imul
fbstp
ja
and
pop
int3
sbb
mov
scas
ins
hlt
in
sbb
(bad)
mov
mov
std
push
test
mov
cmp
fwait
mov
ins
dec
andps
repnz
outs
in
pushf
addr16
cmp
call
jecxz
rcr
xchg
mov
dec
mov
xchg
push
inc
mov
jmp
scas
and
pop
mov
cwde
pop
inc
sub
dec
xor
push
jo
or
iret
cmps
cmps
sub
cld
sub
clc
cmp
xor
push
jp
sbb
movs
mov
push
bound
leave
ret
leave
lds
jp
pop
pop
push
scas
pop
push
inc
fadd
cmps
jecxz
lahf
pushf
xor
jnp
add
out
sub
inc
lea
add
cli
adc
jo
push
adc
xor
punpckhwd
test
ss
out
sahf
jp
mov
sub
cmp
and
loopne
sbb
pop
je
adc
(bad)
jmp
mov
mov
sbb
loop
fwait
mov
cmp
fild
sub
and
xchg
inc
jbe
das
push
std
sahf
xor
jge
rep
push
(bad)
fcmove
mov
ins
bound
jb
mov
fdivrp
ja
xchg
mov
lods
scas
sub
or
jno
out
and
mov
mov
in
adc
divps
mov
imul
aaa
call
neg
icebp
mov
bnd
dec
jp
xchg
xchg
dec
je
pop
arpl
push
cmc
push
dec
mov
cmps
cmp
ins
push
cmps
pop
xchg
mov
xchg
ret
pop
xchg
cmc
(bad)
stos
mov
mov
push
repz
(bad)
adc
push
shl
cli
mov
dec
jmp
test
mov
cmps
out
bound
dec
push
(bad)
cmp
mov
outs
xchg
push
sbb
loop
sub
(bad)
movs
nop
inc
hlt
stos
pop
imul
outs
sbb
mov
(bad)
out
mov
jg
sbb
test
pushf
pusha
jl
dec
and
fstp
jmp
into
(bad)
jnp
enter
jg
xor
jmp
mov
mov
pop
jne
add
mov
int3
or
bound
push
rol
adc
xor
push
fucom
test
jmp
push
dec
mov
es
into
ret
popa
das
cmp
ins
nop
lahf
in
jne
pusha
pop
push
bt
arpl
iret
mov
in
outs
jl
sbb
aaa
(bad)
mov
(bad)
mov
repnz
in
mov
enter
and
jl
xor
cmp
je
out
enter
and
gs
and
xor
imul
jg
shr
fist
jl
fxch
pop
mov
fisub
fnsave
(bad)
push
(bad)
out
shl
fisub
mov
xchg
(bad)
pop
bound
lea
adc
xchg
in
ins
loop
rcr
test
icebp
ja
xchg
pop
or
outs
(bad)
int3
jo
xor
jle
pop
inc
jmp
lock
ret
pop
in
jl
jg
cmp
pop
jmp
sub
lar
loopne
and
jg
inc
rcl
cmc
fisttp
mov
shl
sbb
aam
sti
mov
sub
repnz
jle
mov
pop
jb
sbb
or
xor
call
je
sbb
fistp
in
push
sub
jbe
retf
repnz
es
ja
xor
repz
lods
jnp
pop
or
inc
or
adc
cld
iret
icebp
stc
cmp
sahf
cmp
jne
sti
mov
jbe
jp
and
mov
ins
(bad)
xor
cmp
rcr
jp
nop
inc
jb
sub
cmp
(bad)
cmp
xchg
push
ins
cs
scas
mov
jbe
pop
sub
mov
lea
bnd
aas
push
pop
jp
cmp
jmp
pop
(bad)
push
not
mov
retf
cs
sbb
cmp
push
sar
mov
push
sub
mov
pusha
cmps
inc
dec
sar
xchg
scas
popa
add
icebp
mov
nop
out
xchg
mov
shl
test
jo
xchg
push
shr
sub
fld
pop
imul
outs
xchg
jno
push
jo
push
dec
bound
pop
(bad)
icebp
ret
xchg
ins
inc
jmp
popf
and
sub
pushf
mov
loopne
xchg
js
or
xchg
lock
arpl
movs
mov
push
stc
mov
pop
lds
test
sub
sub
gs
retf
inc
push
cmc
lods
(bad)
inc
adc
sbb
lods
adc
enter
addr16
jle
xor
cld
fdiv
sub
dec
and
mov
loopne
addr16
bound
outs
outs
cli
shr
push
out
mov
pop
xchg
xchg
mov
sbb
loop
add
push
adc
dec
pusha
add
xchg
xchg
(bad)
fst
jl
jle
sahf
pop
and
sbb
lahf
jmp
add
mov
clc
jl
test
aas
popf
(bad)
lock
lods
mov
pop
(bad)
daa
push
xor
cs
lods
sub
xchg
jl
rol
pop
cli
jbe
pop
cmps
icebp
ins
fneni(8087
mov
test
and
ds
into
shr
jecxz
repnz
xchg
je
pop
push
loop
out
(bad)
fdivr
mov
daa
mov
push
add
fidiv
pushf
sbb
inc
aad
jmp
mov
adc
outs
test
xor
or
cli
inc
enter
cs
sbb
cmp
call
pop
cld
cmp
ins
push
(bad)
lods
jae
and
adc
adc
xor
pop
xor
pop
jmp
or
ins
leave
push
mov
iret
(bad)
xchg
fst
add
adc
push
inc
aam
xor
adc
imul
fcom
pushf
pop
xchg
mov
iret
popa
cmc
pop
mov
hlt
push
leave
push
pop
fstp
push
stc
sbb
mov
jno
(bad)
fisttp
dec
dec
sbb
addr16
push
js
sub
jge
adc
out
idiv
xchg
cmp
jecxz
inc
mov
jo
dec
sub
ret
rol
mov
lahf
or
sub
test
dec
adc
lds
xchg
div
dec
sub
mov
pop
sub
and
xchg
das
mov
out
and
push
cmps
ror
fidivr
dec
test
sbb
addr16
sub
ror
cli
or
pop
pop
dec
mov
loope
sbb
push
mov
push
ja
lods
jbe
cmp
stos
fimul
and
mov
jo
push
push
and
pop
pop
out
pop
xchg
xor
mov
ret
xlat
mov
loop
mov
mov
mov
test
mov
cmps
cmps
jb
(bad)
std
(bad)
scas
mov
mov
adc
imul
push
mov
sub
mov
pop
push
cld
or
and
in
sub
cmps
dec
xor
sar
dec
(bad)
aaa
and
rcl
push
dec
cmc
push
dec
pop
xor
or
pop
movd
pusha
jecxz
ss
fstp
test
(bad)
popf
sbb
shl
mov
inc
push
jecxz
(bad)
jbe
(bad)
out
mov
in
pop
fs
add
jg
jp
das
inc
je
call
fstp
arpl
test
xor
gs
push
not
das
inc
ds
mov
dec
pushf
and
sub
sbb
lea
into
scas
call
cwde
adc
test
dec
in
out
loop
popf
aas
mov
sbb
mov
add
mov
xchg
cmp
(bad)
cld
sahf
cmp
mov
push
fsub
push
jg
into
jns
xor
sbb
xor
push
ds
jmp
outs
xchg
js
jg
lahf
mov
sbb
loopne
sub
jo
pop
sub
dec
ja
aas
ss
repnz
call
sbb
push
pushf
jbe
adc
jmp
ds
pop
ss
or
inc
mov
and
sbb
dec
and
jnp
enter
sub
sbb
fucomp
dec
sub
lock
pusha
xchg
sub
unpcklps
pop
ins
xchg
mov
out
fcomp
xchg
outs
add
mov
imul
movs
sub
and
outs
xchg
aaa
inc
sub
mov
clc
mov
add
inc
adc
jb
rcl
fs
inc
sti
sar
mov
dec
popw
dec
xor
push
inc
call
rcr
pusha
pop
pop
fcom
and
cs
dec
cmc
or
pusha
dec
cli
jne
ds
push
mov
cmp
jno
cli
popf
stc
or
add
sar
mov
lods
jge
(bad)
mov
pop
mov
fucomi
push
(bad)
stos
not
(bad)
(bad)
leave
sbb
ss
push
and
pop
dec
and
ret
xlat
jb
into
mov
mov
xchg
jp
mov
pop
stos
(bad)
rcr
add
push
in
cli
sahf
rol
adc
jmp
repz
fdivr
xor
sub
jne
adc
ror
xchg
mov
pop
das
add
jecxz
inc
xchg
dec
pop
test
dec
inc
nop
pop
jp
adc
mov
xlat
rol
stc
mov
lahf
or
daa
ins
jae
pop
push
push
sbb
dec
pop
cdq
test
out
int3
loop
xchg
movs
jmp
scas
into
xchg
add
pop
dec
inc
jnp
cmp
jb
sub
jl
or
repnz
jmp
push
add
jno
jg
sub
sbb
push
ficom
jmp
gs
lods
mov
inc
ins
lock
adc
dec
add
dec
pop
lea
cmps
ins
pop
dec
pop
or
jecxz
xchg
jb
pop
sti
iret
cmc
mov
stos
(bad)
mov
xchg
mov
mov
push
adc
scas
lods
inc
push
test
pop
mov
dec
popf
scas
mov
sub
fisttp
mov
(bad)
stc
int3
jb
clc
ins
sbb
ficom
jns
stos
push
out
push
mov
ins
das
push
jbe
xchg
and
push
xor
push
pop
push
ins
scas
mov
call
cmp
xlat
mov
pop
sub
add
xor
jecxz
adc
lock
cmp
mov
lods
call
icebp
add
ret
push
call
ret
mov
cmps
aaa
mov
scas
push
cdq
movq
add
adc
jmp
rol
fiadd
into
shl
cs
and
aaa
stc
je
adc
or
out
mov
mov
jl
push
call
movs
and
adc
stos
out
nop
cmp
shl
idiv
mov
or
add
sub
add
scas
shr
dec
mov
test
sbb
clc
bound
jmp
data16
test
dec
ret
dec
xlat
adc
adc
aam
lds
mov
dec
aas
cmp
pop
push
dec
(bad)
cmp
jns
mov
sub
push
dec
sbb
dec
and
out
shl
push
out
cld
rol
jmp
mov
arpl
and
lods
dec
mov
jl
pop
mov
pop
push
test
cdq
fcomp
cmp
inc
jecxz
jo
outs
aad
cs
sbb
mov
mov
outs
adc
(bad)
and
dec
test
aad
fcomp
cs
mov
or
fisub
ja
sub
loop
or
call
pop
cmp
imul
out
mov
pop
xchg
sub
adc
jg
push
out
jno
outs
into
arpl
mov
ins
fcmovu
pop
xchg
xchg
and
mov
jno
pop
cmps
outs
in
das
adc
mov
inc
dec
int
xlat
add
mov
pop
retf
aaa
and
ja
rol
test
jl
(bad)
push
das
and
pop
call
mov
jnp
xor
mov
out
idiv
mov
ficomp
outs
scas
enter
mov
or
xor
std
movs
fsub
inc
mov
neg
mov
xchg
xchg
fist
pop
in
xchg
mov
sbb
imul
cmp
lahf
push
mov
mov
pop
ret
mov
dec
mov
add
fstp
jbe
sbb
mov
fimul
mov
ror
ret
bound
xor
loope
jecxz
hlt
inc
mov
fsubr
dec
jno
lock
les
cmovs
sub
out
les
xchg
bound
add
add
jmp
jp
repz
fdiv
lea
call
jl
test
movaps
in
call
ret
loopne
jae
stos
movs
movs
pop
fwait
inc
mov
loope
mov
or
ret
pop
adc
mov
in
sbb
mov
adc
sbb
cmc
xor
in
pop
jno
arpl
add
inc
das
or
int3
and
iret
shr
icebp
js
ds
push
imul
gs
ins
fldcw
dec
js
ins
push
shl
scas
inc
das
cmp
test
push
out
stos
or
dec
mov
pop
xchg
scas
vsubsd
rcr
dec
mov
jae
and
push
push
mov
or
adc
in
mov
fcmovu
fdivrp
and
jb
cmps
inc
pop
push
in
sub
ds
outs
or
pusha
jg
lock
mov
pop
(bad)
ficom
icebp
jne
xor
sub
add
sub
fucomi
bound
xchg
into
loop
nop
jg
sbb
push
dec
and
ret
cmps
jmp
or
push
rcl
mov
sub
sahf
fs
pop
inc
push
xor
mov
cmp
adc
loope
dec
out
rcr
inc
push
jno
cmp
sbb
bound
mov
inc
xlat
aad
adc
jg
ret
push
ror
add
adc
jo
sti
jo
out
out
and
lea
mul
cmc
dec
pop
pusha
mov
sbb
loop
sub
scas
loopne
pop
inc
adc
xchg
movs
fnstcw
jg
test
dec
xchg
mov
arpl
rcl
loop
mov
jo
adc
inc
xchg
nop
dec
xchg
ja
sub
mov
or
dec
scas
fcomp
test
dec
mov
push
sar
ss
arpl
sub
pop
jae
das
push
mov
pop
(bad)
cmp
or
arpl
sbb
push
sub
sub
xchg
stos
loopne
hlt
(bad)
inc
xor
ret
and
adc
xchg
sti
cld
ds
push
push
(bad)
rcl
mov
lahf
xchg
leave
mov
add
(bad)
cmp
aaa
sub
mov
sub
sub
dec
and
jle
lds
call
xchg
dec
stos
mov
fcom
sti
out
fisub
(bad)
pop
aad
xchg
outs
or
and
lock
and
inc
int3
loop
aaa
(bad)
jae
ss
lock
add
cmp
enter
jmp
aas
jl
repnz
in
sub
call
jge
and
test
and
je
dec
pushf
jae
nop
add
mov
popa
add
mov
cs
outs
imul
sbb
iret
lods
xor
inc
leave
ds
shr
adc
and
lahf
xchg
mov
xchg
mov
hlt
mov
loop
adc
jp
or
(bad)
pop
add
lock
add
xchg
pusha
(bad)
jle
jge
push
sub
inc
rcl
and
pop
sbb
adc
and
in
xchg
les
fadd
movs
mov
jnp
adc
sbb
and
dec
xor
nop
inc
fiadd
repnz
mov
shl
jb
add
lods
ret
(bad)
loopne
mov
repnz
xlat
dec
push
cmp
jle
(bad)
rcl
xchg
es
sub
push
(bad)
sahf
sub
xchg
mov
lock
inc
mov
scas
cmp
arpl
dec
fwait
jg
jnp
or
in
sbb
js
lods
ror
aam
sub
fs
hlt
in
shr
mov
jnp
or
std
push
cli
push
jb
scas
stc
mov
jmp
jle
test
pop
adc
xor
mov
pop
arpl
lock
pop
lds
xchg
ret
jp
mov
cmp
pop
jecxz
(bad)
mul
push
sub
pop
pop
push
xchg
mov
inc
sbb
mov
mov
outs
enter
shr
jae
or
mov
aas
mov
jno
aam
push
and
jg
dec
arpl
es
mov
mov
cmps
jnp
fisubr
icebp
repz
repnz
pop
pop
push
add
icebp
scas
ret
mov
cld
pop
or
inc
dec
pop
xchg
std
push
cmp
or
(bad)
add
(bad)
mov
icebp
push
mov
mov
add
xor
xlat
jmp
adc
popf
not
push
lahf
inc
(bad)
ins
xor
nop
cmp
sbb
mov
pushf
mov
cmp
add
sbb
and
arpl
fild
pop
inc
test
add
add
arpl
adc
push
add
sahf
mov
dec
mov
bound
or
push
shl
and
mov
mov
outs
add
push
push
dec
in
dec
jns
int3
jbe
xchg
mov
repnz
xor
inc
sub
mov
cs
ja
xor
ds
xchg
test
xchg
push
xchg
add
cli
or
loopne
iret
sub
std
rcl
movs
(bad)
(bad)
pop
jp
cdq
jbe
or
mov
push
push
mov
jl
pusha
fidivr
retf
xchg
push
inc
ret
loopne
fisttp
inc
(bad)
leave
clc
inc
loop
add
and
or
out
xchg
mov
jno
jg
jne
or
dec
retf
nop
adc
adc
sbb
mov
pop
adc
add
mov
ficom
dec
jae
mov
mov
test
rcl
scas
push
clc
cmps
push
dec
pop
call
mov
or
and
nop
xor
ja
dec
push
push
jae
pop
sahf
jmp
sub
push
push
sbb
dec
pop
mov
daa
sub
xor
pop
xchg
inc
mov
mov
xchg
pusha
add
ins
add
loope
int
in
(bad)
mov
sti
mov
mov
cmp
pop
call
sub
fcmovu
push
jns
mov
iret
div
push
test
adc
pushf
sub
jg
and
ds
adc
fdiv
in
leavew
call
call
or
add
pop
sar
mov
out
sub
pusha
jns
mov
adc
add
bound
xchg
stos
mov
fidiv
dec
adc
dec
ret
nop
aad
lods
sahf
sub
fdivr
fistp
and
mov
add
pop
inc
xchg
popa
jne
adc
jns
aas
pop
inc
push
jnp
add
ret
push
inc
sahf
mov
outs
imul
xchg
xchg
mov
xor
test
rcl
sub
pusha
cmps
shl
lods
mov
xlat
dec
sub
push
out
push
jp
fld
xchg
outs
fcomi
ret
inc
out
sbb
adc
adc
inc
push
popa
cmp
jge
inc
and
or
push
jb
push
out
adc
adc
int
movs
ret
push
mov
daa
mov
cmp
sbb
dec
cmp
dec
in
lods
addr16
dec
and
dec
sbb
scas
xor
sub
movzx
mov
push
nop
aam
jbe
mov
sbb
in
(bad)
call
xor
pop
pop
ins
scas
jge
push
xchg
cmp
(bad)
jmp
cmps
aad
ret
call
xor
shl
mov
add
sbb
xchg
out
aaa
push
mov
(bad)
clc
ja
inc
dec
jb
data16
outs
xchg
idiv
retf
fisubr
mov
jecxz
in
pusha
ss
mov
or
rcl
ror
mov
xor
cmps
or
xchg
sbb
inc
(bad)
cmp
lods
arpl
pop
out
pop
aam
cwde
je
lea
xchg
push
push
mov
pushf
sub
(bad)
xor
and
sahf
cdq
adc
mov
call
enter
cmp
ss
jp
sub
add
fucomp
cmps
mov
or
push
iret
pop
xchg
aas
popa
sbb
stos
shr
into
dec
xor
inc
pop
pushf
inc
fbld
cs
and
jae
std
pop
scas
retf
ficom
mov
push
xchg
pop
(bad)
jo
push
cmp
dec
test
fsub
fiadd
jno
sub
rol
add
inc
cmps
adc
fucomp
sub
jne
jge
dec
xchg
jl
ss
test
(bad)
jp
sub
adc
ja
test
ss
fld
adc
add
and
inc
fild
sbb
mov
stos
xchg
dec
sar
pop
xchg
stc
(bad)
lahf
xchg
xor
imul
dec
int
je
ret
xchg
add
add
push
lahf
push
outs
jl
movs
mov
mov
or
outs
adc
rcr
cmp
mov
mov
outs
xchg
(bad)
repnz
pop
jg
mov
cmp
fwait
lods
es
mov
xchg
cmp
arpl
movs
das
push
or
xchg
mov
adc
cdq
hlt
int
fsub
rcl
frstor
jnp
hlt
and
sbb
pop
lods
ret
test
push
push
ins
inc
mov
jge
add
xor
xor
add
fwait
in
out
adc
enter
stc
leave
xor
and
jl
repz
hlt
movs
xchg
inc
jmp
mov
movs
pop
sbb
add
push
cli
mov
dec
mov
ret
stos
out
inc
aad
in
ja
ja
pop
add
mov
enter
(bad)
mov
nop
fcom
push
push
and
push
adc
adc
xor
int
pop
jecxz
or
sbb
dec
xchg
jg
adc
push
inc
push
popa
jns
cld
popa
in
fbld
retf
dec
mov
cld
scas
or
inc
dec
das
xor
cld
xor
nop
push
mov
sub
jno
mov
mov
add
outs
arpl
pushf
jae
jl
(bad)
xor
addr16
mov
ins
pop
jbe
mov
jp
lds
bound
push
fs
je
mov
mov
cmp
mov
stc
lock
push
mov
and
jae
dec
mov
stc
add
jp
xchg
mov
(bad)
jmp
jecxz
push
(bad)
add
pop
push
cmps
daa
scas
xor
outs
int3
aas
cmps
push
add
inc
cmp
cmc
shl
sbb
xchg
and
cmps
repnz
pop
cs
and
sub
cmp
mov
jmp
div
inc
mov
int3
enter
test
into
fmulp
stos
mov
jno
pop
dec
mov
mov
dec
dec
fmul
cmp
test
js
jp
fwait
movs
cs
sbb
mov
fwait
lds
call
dec
pop
jnp
jnp
cli
xor
mov
test
mov
pop
xor
fs
pushf
das
jl
outs
fistp
cmp
pop
jmp
aad
loop
movs
lea
xor
or
push
mov
mov
out
pop
adc
dec
xor
inc
std
add
adc
and
div
in
add
(bad)
mov
mov
lahf
inc
(bad)
aaa
int
std
jl
bound
out
sub
sbb
xor
in
mov
adc
aad
cmp
or
mov
test
add
dec
inc
test
frstor
mov
adc
ret
jb
jne
dec
sub
inc
ins
add
xor
sub
(bad)
adc
inc
imul
pop
mov
xchg
push
aad
aaa
cs
mov
in
fwait
jne
xor
cmp
or
retf
out
mov
push
push
or
mov
jb
mov
and
inc
xor
retf
dec
sbb
cmps
xor
xchg
retf
mov
js
push
xor
inc
mov
neg
mov
jg
sbb
mov
add
(bad)
sahf
push
xchg
aaa
lock
clc
push
outs
push
cmps
inc
out
dec
imul
sub
sbb
mov
jle
call
xchg
sbb
add
in
or
pop
sar
outs
into
in
jmp
call
es
fcmovb
(bad)
push
and
sub
sub
jns
inc
pop
add
add
into
sbb
xchg
dec
mov
inc
cmp
xor
xor
inc
jae
push
mov
jae
xor
or
sbb
sbb
and
cmp
ret
rol
jno
mov
mov
retf
inc
popa
mov
mov
dec
popf
pop
add
in
add
lds
in
xchg
fmulp
mov
clc
(bad)
xor
loop
pop
inc
mov
sub
add
es
mov
cs
hlt
ja
xor
icebp
adc
and
dec
xor
fld
xchg
xchg
inc
xor
ret
mov
mov
fidivr
rcl
push
lods
rcl
(bad)
and
pop
dec
sub
call
cmp
div
jnp
pop
outs
dec
data16
cmp
mov
fcomi
sbb
test
xchg
xor
sbb
push
inc
loop
xchg
cs
mov
mov
and
test
shl
enter
iret
or
mov
inc
jmp
(bad)
out
call
lods
jae
jne
mov
test
push
jle
mov
dec
push
mov
(bad)
pop
push
mov
pop
cs
aaa
fidiv
pop
inc
cmc
test
mov
fbld
mov
jns
mov
xchg
add
scas
jecxz
and
es
xchg
push
jle
pusha
pop
dec
scas
sbb
scas
pop
mov
jp
sbb
pusha
call
xchg
jnp
xchg
and
std
pop
mov
add
ja
stc
retf
xor
repnz
in
mov
cmp
sar
jecxz
inc
aas
ja
cmp
mov
test
jge
mov
push
retf
sub
xchg
xor
int3
mov
clc
and
mov
push
(bad)
in
adc
push
mov
add
out
fwait
sbb
push
fld
jbe
mov
push
popa
jo
mov
shl
jae
add
lahf
mov
xchg
mov
push
in
dec
ins
ins
(bad)
or
cld
xor
test
ins
movs
mov
pop
mov
stos
dec
leave
sahf
(bad)
jae
mov
arpl
add
push
movs
stos
call
xchg
rcl
rcr
rol
xor
jb
in
add
lods
add
pop
or
bound
jl
xchg
dec
add
jmp
mov
xor
dec
stos
inc
dec
fadd
loope
lods
fcom
ror
into
call
mov
push
ins
push
pop
push
sub
mov
sti
ret
cwde
mov
mov
mov
outs
cmp
cmp
and
xor
mov
mov
test
ds
test
aam
cmp
jecxz
inc
outs
in
scas
mov
sbb
and
jl
ds
sub
loop
lfs
add
nop
repz
push
std
jg
adc
mov
ja
loopne
push
or
lock
pop
out
add
adc
mov
and
int3
sub
adc
xchg
dec
aam
jb
ret
jg
aas
jo
inc
arpl
sub
pop
inc
add
adc
std
aaa
das
repnz
xchg
xchg
fcmovnu
and
mov
lods
mov
out
out
sbb
adc
je
sbb
mov
loope
and
mov
pop
ds
pop
cmps
inc
mov
bound
jl
(bad)
fnstcw
pop
rcr
dec
pop
mov
stos
dec
sub
inc
cs
sub
adc
mov
push
sbb
mov
jle
jmp
push
mov
jmp
cdq
lock
popa
sar
mov
inc
(bad)
addr16
adc
xor
jge
jge
int
in
push
lahf
mov
and
push
retf
cmp
push
(bad)
adc
cmp
adc
or
fwait
pop
imul
aaa
pop
lods
add
mov
out
sbb
mov
imul
fstp
fisttp
mov
call
fxch
jge
aad
hlt
mov
aas
idiv
loopne
test
push
ins
push
cmc
mov
push
xor
and
lods
mov
add
jmp
xchg
push
fisttp
stc
outs
mov
rcr
push
jns
pop
jp
out
sub
sti
inc
lock
data16
not
mov
mov
test
test
dec
outs
and
std
cmp
mov
enter
fstp
(bad)
push
jmp
ret
out
data16
or
xchg
ret
inc
or
ins
jl
movs
mov
addr16
(bad)
fstp
loope
call
jno
nop
add
push
inc
dec
sub
cpuid
(bad)
jle
pop
pushf
ret
sbb
inc
pop
push
pusha
push
movs
xchg
xchg
adc
adc
mov
ror
pop
jecxz
repnz
bound
push
cmp
cli
in
lods
imul
cmp
pop
push
pop
jno
(bad)
outs
loopne
jb
retf
and
mov
mov
shl
mov
or
mov
mov
mov
add
(bad)
cwde
jae
mov
aaa
inc
mov
aad
xlat
and
adc
(bad)
jmp
clc
into
(bad)
loope
add
fs
test
jge
and
adc
mov
int3
and
aad
rcl
outs
nop
sahf
dec
scas
push
int
xchg
pop
add
shr
inc
cs
into
jp
jae
lahf
jmp
call
sub
call
sbb
fbstp
pop
mov
cmp
sub
popf
loopne
mov
js
adc
int
mov
ins
xor
daa
rcr
lock
push
sub
inc
mov
fisttp
mov
mov
cs
pop
push
cmp
add
loop
ret
or
pop
ds
lods
pop
dec
push
call
outs
sbb
pop
fdivp
add
iret
pop
add
xchg
jg
jmp
fcomip
adc
mov
push
les
or
jae
rol
fiadd
into
adc
xchg
xor
(bad)
int
xlat
clc
fild
fxch
mov
jecxz
push
test
mov
mov
xchg
loop
mov
fbstp
imul
out
lods
fst
popa
sbb
ds
pop
cmp
mov
pop
out
repz
movs
pop
(bad)
in
loop
adc
pop
jle
sub
add
rol
fadd
or
jno
mov
stos
add
pop
mov
jae
imul
xor
adc
out
mov
es
into
loope
mov
jp
and
bound
outs
popa
sub
pop
mov
sub
cli
push
imul
pusha
cld
addr16
dec
or
xchg
in
or
add
and
fldenv
push
fcomp
sub
aas
bound
div
and
mov
and
cmps
(bad)
push
xchg
std
ret
cli
(bad)
fild
jnp
push
stos
add
xchg
xor
jmp
pop
cmps
bound
sub
setbe
std
push
stos
xchg
push
out
cmp
lock
int3
out
shl
pusha
xchg
xchg
loopne
enter
dec
pop
inc
dec
pop
or
outs
not
jne
inc
shl
scas
rcr
xchg
into
popf
pop
adc
sbb
syscall
pop
rol
or
jb
inc
sbb
gs
cmp
dec
mov
add
or
mov
pop
fisttp
xchg
mov
les
and
push
cmp
pop
push
mov
mov
movs
add
repnz
pop
and
xchg
imul
scas
cmp
into
in
xchg
mov
test
push
jp
pop
sar
cdq
xchg
push
push
inc
jg
ds
adc
pop
fwait
push
stos
jnp
fld
sub
cmps
ret
es
retf
imul
sub
push
adc
jl
bound
pushf
dec
test
push
outs
add
sub
push
push
ror
mov
lods
es
xlat
test
call
push
fldenv
dec
pop
push
inc
xor
jle
stos
clc
aam
fisttp
pop
dec
in
cmp
mov
sub
sbb
sbb
pop
mov
bound
cmp
pop
jmp
mov
inc
pushf
pop
push
pop
push
hlt
dec
mov
lods
push
or
loop
div
pop
mov
test
adc
bound
cmp
hlt
pop
cmp
loope
xchg
icebp
les
mov
pop
jo
jnp
pushf
aaa
shl
mov
(bad)
test
xchg
out
fs
add
js
rcr
dec
jl
inc
retf
out
jae
ins
mov
jne
shl
pop
inc
mov
push
push
sbb
push
addr16
fimul
neg
pop
mov
and
fsubp
inc
sahf
push
mov
pop
pop
add
ret
mov
sub
(bad)
dec
lock
mov
dec
cli
xor
inc
jmp
ret
mov
push
in
push
ror
push
pop
push
js
(bad)
mov
jno
cmp
mov
sti
cmp
lea
pop
cmp
sub
pop
cmps
mov
loope
mov
mov
sar
out
iret
xor
mul
(bad)
mov
sbb
xchg
mul
adc
mov
pop
push
iret
repz
adc
push
dec
push
mov
sbb
mov
(bad)
cmp
ds
icebp
push
je
out
sub
xor
adc
aad
sar
xor
jmp
jae
pop
push
mov
sub
mov
data16
mov
fisub
push
popf
inc
(bad)
loope
or
inc
cmps
adc
movs
or
(bad)
imul
sar
icebp
push
je
rcr
mov
jmp
out
mov
out
mov
rcl
sar
jnp
push
in
out
pop
push
repz
ss
or
cdq
dec
cmp
sbb
sbb
std
pop
nop
pop
fiadd
and
neg
inc
xchg
dec
call
sti
fidiv
or
ja
jle
fisttp
adc
or
or
in
dec
add
call
lea
shr
jno
push
outs
and
add
mov
sar
push
sbb
mov
xchg
dec
retf
clc
push
dec
mov
outs
xchg
and
jmp
sub
sbb
lea
stos
in
(bad)
xchg
dec
mov
xor
bound
(bad)
shr
iret
je
pop
scas
fldenv
(bad)
les
adc
outs
jle
call
dec
aam
and
in
test
movs
adc
add
adc
cli
outs
les
in
int
jbe
loopne
fs
adc
stos
scas
jp
imul
cmp
cs
jp
fsub
mov
dec
jbe
and
fcomp
fiadd
and
stos
fstp
cmp
jmp
imul
or
call
xlat
jns
adc
push
dec
cmp
daa
shr
inc
fisub
sar
mov
mov
mov
mov
xchg
bound
call
ins
nop
inc
sti
xor
test
cdq
push
inc
idiv
cmp
sub
pop
add
retf
repz
nop
mov
pop
pop
mov
pushf
inc
out
push
fist
data16
sbb
inc
xor
ret
mov
ds
icebp
mov
imul
retf
push
jmp
shr
xor
lds
mov
sub
shr
cmp
mov
ret
iret
lods
fbld
pop
lock
and
cld
iret
pop
cmp
add
aam
imul
fld
push
out
jmp
outs
inc
in
ins
jae
xchg
xchg
xor
retf
xchg
pop
adc
xor
mov
icebp
loop
mov
xchg
sbb
mov
cmps
jecxz
inc
mov
test
or
data16
jecxz
pop
jge
retf
cs
scas
mov
mov
jnp
push
cdq
and
sub
pusha
lods
sub
xchg
push
jp
pop
cmps
mov
adc
fist
iret
aas
jnp
sbb
or
cmps
jge
test
push
jmp
imul
lods
mov
(bad)
mov
inc
outs
jge
mov
push
lahf
mov
out
ret
and
xor
mov
(bad)
cdq
mov
or
iret
repnz
sub
ins
ret
xor
xchg
aas
inc
jl
call
addr16
pop
mov
inc
dec
call
lods
int
jp
cmps
movs
push
xor
xchg
lea
aas
inc
nop
mov
shl
outs
es
cmp
stos
(bad)
xor
push
js
adc
dec
push
stos
nop
lock
mov
dec
out
xchg
cmc
add
mov
jmp
cmp
add
out
into
xchg
into
cmp
lods
test
sub
jne
mov
jge
fcom
or
cwde
iret
sbb
mov
jle
xor
xchg
inc
rol
sbb
pusha
movs
mov
sbb
inc
out
sti
pop
lock
inc
mov
sti
and
rcr
mov
push
js
int
xchg
cmp
inc
push
and
mov
pusha
scas
cmp
out
cld
int
mov
jecxz
xor
ret
in
je
inc
repnz
dec
xchg
lods
mov
mov
shl
test
lods
add
push
ror
outs
add
inc
and
scas
cmp
mov
jecxz
stos
mov
and
dec
mov
hlt
push
adc
and
int
mov
jp
dec
lods
retf
mov
sbb
sub
mov
and
xor
das
mov
add
jae
call
bound
dec
repnz
xor
cli
aas
fs
popa
retw
out
dec
mov
movs
mov
call
sub
mov
retf
add
je
scas
mov
fld
addr16
arpl
cwde
mov
outs
aas
mov
inc
aam
fisttp
retf
xchg
mov
mov
jg
cmc
push
and
loopne
push
add
rcr
cmp
(bad)
loopne
mov
mov
lock
cmps
dec
push
sub
hlt
sbb
mov
add
mov
mov
repz
push
outs
jmp
push
sahf
mov
ret
jnp
dec
rcr
mov
jns
fild
jle
adc
and
xor
cmps
test
les
retf
repnz
mov
pop
push
enter
or
pop
lods
jnp
xchg
(bad)
jmp
fcom
shl
pop
inc
movs
rcl
cmp
push
mov
mov
sbb
push
stos
aad
jle
and
add
imul
dec
cmc
fiadd
push
dec
clc
inc
push
mov
repnz
cld
or
outs
ret
fwait
retf
or
add
dec
push
rol
mov
and
jmp
popa
push
cs
push
adc
add
jg
or
push
loopne
imul
jnp
pop
sbb
push
cmps
js
sub
adc
das
retf
mov
mov
xor
mov
mov
inc
ja
jle
xor
push
jge
ror
popa
xchg
ret
jmp
push
push
fwait
xchg
repnz
push
xchg
(bad)
jecxz
repnz
sbb
retf
adc
xchg
repz
or
adc
enter
(bad)
fdivp
mov
daa
addr16
mul
(bad)
push
lock
jmp
lods
xchg
in
out
lds
jno
cvtdq2ps
lahf
mov
loop
fs
ss
inc
pop
jnp
cmps
arpl
add
pop
xchg
sub
xor
inc
adc
shl
pushf
fistp
cmp
mov
mov
push
xor
mov
fucom
add
dec
stos
mov
in
jae
inc
shr
jl
popa
adc
push
jp
pop
stos
and
scas
inc
out
xchg
(bad)
pop
mov
aam
and
les
pop
adc
aam
fistp
mov
dec
adc
mov
stc
xchg
sahf
push
xchg
outs
hlt
es
add
push
mov
cld
in
add
and
aaa
sub
jle
inc
mov
cmp
pandn
mov
and
mov
es
mov
ficom
outs
pop
push
cmp
push
data16
push
xor
adc
dec
mov
xor
mov
pop
repnz
das
cmp
out
and
imul
xchg
lods
xor
fstp
neg
pop
push
scas
outs
loope
push
loope
leave
stos
inc
sbb
mov
fwait
call
push
pop
add
int
sub
mov
outs
push
push
add
cmp
jle
jbe
movs
jb
jnp
push
mov
push
fisub
or
out
add
inc
ja
push
dec
inc
mov
sbb
mov
je
cmp
xchg
mov
mov
(bad)
xchg
adc
push
sub
push
in
pop
xor
dec
movs
mov
jb
or
aad
cmp
scas
xor
std
aad
sub
and
add
mov
mov
je
inc
mov
fwait
lock
out
jp
adc
xor
mov
or
test
ins
mov
jbe
bound
mov
mov
(bad)
ds
sti
adc
sbb
lods
xor
test
fdiv
rcl
xchg
out
aam
loopne
test
nop
mov
lods
and
retf
jnp
mov
push
leave
jo
or
stos
cmp
lea
aaa
cmp
(bad)
(bad)
or
ret
cmp
leave
pop
pop
or
test
loop
sahf
das
xor
xchg
xchg
add
(bad)
mov
push
sbb
push
lea
adc
and
mov
sub
int
and
push
fbstp
adc
outs
jb
xchg
sub
iret
push
and
fs
jmp
ret
inc
xchg
cmp
in
jle
push
push
push
repnz
and
outs
gs
adc
xor
cld
movlps
cdq
cmp
cs
sub
bound
adc
call
mov
xor
mov
xchg
push
xor
cs
pop
inc
es
cli
dec
cdq
cmp
cs
push
fnstcw
mov
repnz
jle
fstp
int3
imul
mov
gs
loope
xor
and
fwait
stos
rcl
imul
iret
mov
adc
out
inc
lock
icebp
adc
or
test
add
das
mul
xor
push
rcl
movs
outs
jne
add
pop
outs
inc
lods
mov
xchg
sub
mov
xchg
(bad)
out
dec
push
fild
inc
xchg
mov
popa
scas
hlt
ins
pop
imul
test
xor
cwde
push
in
fs
dec
adc
(bad)
repnz
fld
test
mov
cwde
or
pop
lds
jo
sub
cmps
sbb
add
add
fs
xchg
inc
out
xchg
into
int3
inc
sub
sub
(bad)
in
je
lahf
clc
inc
mov
add
ret
test
es
xchg
mov
fs
es
sub
enter
mov
adc
in
lods
mov
sbb
bound
lods
movs
mov
cmp
not
test
add
and
jmp
and
inc
cld
adc
push
dec
add
(bad)
enter
not
nop
or
push
jle
je
fwait
add
inc
xor
cmp
inc
and
(bad)
mov
leave
sbb
pop
unpckhps
mov
repnz
ret
inc
out
(bad)
jbe
mov
popf
push
outs
repnz
pop
push
hlt
jle
sub
sti
adc
addr16
repnz
loop
push
pop
sahf
mov
and
dec
addr16
add
(bad)
jb
xchg
cmc
call
test
jmp
mov
fild
out
mov
aad
out
dec
fbld
test
jecxz
push
push
push
xor
sbb
bound
int3
into
sub
add
mov
int
adc
loop
ret
pop
sbb
std
cli
adc
sub
cmp
into
xchg
out
les
int3
jp
popf
sahf
pop
movs
pop
jno
ja
dec
in
test
xchg
popa
aas
and
mov
xchg
loop
mov
(bad)
push
push
jns
cs
or
xor
mov
jge
repz
gs
stc
sub
sub
push
repnz
mov
in
mov
sbb
xor
sbb
mov
(bad)
mov
outs
xchg
sti
aam
fwait
dec
fcomp
pop
inc
jnp
(bad)
jae
xchg
mov
mov
push
jecxz
and
cld
ret
mov
xlat
fisubr
in
lods
(bad)
lock
mov
pop
cmps
scas
mov
outs
retf
jp
aas
jecxz
add
dec
int3
jne
hlt
jmp
sub
fistp
jae
repnz
xor
lock
je
add
xchg
pop
push
je
xchg
out
outs
cs
adc
push
and
icebp
pop
adc
imul
push
sub
ret
stos
stos
jmp
mov
pop
adc
mov
jmp
xchg
xchg
xor
ret
jno
inc
shr
inc
push
mov
cmp
js
pop
sub
add
rcr
into
and
inc
pushf
pop
fbstp
jno
shr
(bad)
enter
add
aad
push
int
adc
jae
hlt
dec
inc
sub
jl
mov
data16
dec
xchg
mov
adc
aaa
not
les
ror
mov
sbb
jp
fisttp
sub
push
lods
pop
fisttp
pop
into
out
adc
loopne
dec
push
cmps
sbb
sub
cld
jge
rol
mov
dec
fs
dec
push
cmc
jae
iret
shl
test
sbb
xor
jp
ret
jbe
adc
ds
mul
adc
jo
add
sub
xor
mov
sbb
mov
aas
data16
sar
adc
and
iret
test
(bad)
rcl
popa
gs
repz
mov
mov
loopne
inc
pop
or
aas
push
int
sahf
js
clc
ficom
inc
sbb
out
outs
pop
push
mov
ins
mov
repz
fnstcw
jecxz
ret
jmp
js
or
(bad)
(bad)
in
ss
xor
add
pusha
mov
and
fstsw
or
cs
daa
sub
int
into
inc
inc
sbb
shl
mov
dec
call
pop
addr16
cmp
dec
adc
outs
sti
dec
ror
les
(bad)
aam
jne
pop
xchg
ins
pop
jo
into
lea
cmp
mov
fcmove
rol
imul
inc
mov
ja
lahf
rcr
push
sahf
enter
icebp
mov
xor
or
or
push
ret
jb
mov
add
sub
call
scas
stos
mov
adc
jbe
jmp
dec
xor
or
push
mul
adc
je
bound
hlt
mov
bound
inc
cmp
clc
and
fucomip
cmp
(bad)
not
(bad)
mov
xor
mov
jp
dec
xchg
and
jmp
dec
mov
int
and
xchg
jmp
add
add
les
adc
loopne
jo
ret
pop
shr
jb
add
test
stos
or
addr16
push
pop
fs
mov
add
fs
mov
cmps
fwait
loop
fisttp
adc
(bad)
nop
movs
xchg
push
xchg
das
inc
jb
or
xor
adc
xchg
aaa
adc
mov
add
(bad)
cmps
jno
call
mov
xor
mov
loope
mov
mov
shl
push
int
push
and
pop
jl
pusha
jmp
sub
call
jl
ins
and
jl
xchg
jle
pop
fs
outs
ror
int3
repnz
movs
call
gs
scas
out
mov
fs
cld
push
xchg
fist
retf
or
fisubr
push
xor
mov
push
mov
mov
mov
icebp
(bad)
mov
xchg
call
xchg
pop
ret
pop
pop
inc
mov
push
xor
out
movs
adc
pop
jl
push
sub
pop
int3
and
sbb
or
fstp
xchg
retf
mov
sbb
das
push
add
mov
inc
mov
jbe
ins
ss
test
xchg
mov
int
cmp
and
xor
cli
sub
loop
rcl
jae
mov
popa
jmp
push
jl
dec
das
cmps
mov
dec
push
pushf
(bad)
fnstenv
not
mov
push
inc
fdivr
mov
icebp
pusha
leave
fimul
push
into
xchg
push
imul
push
fcmovne
jle
mov
ds
mov
inc
call
lahf
push
les
(bad)
in
dec
jno
stos
sahf
cmps
out
xchg
cmps
mov
jne
cmp
xchg
(bad)
jnp
jl
dec
xor
rcl
add
iret
jns
stc
xchg
xor
outs
jp
loop
gs
iret
add
fnstsw
or
sar
sti
and
out
pushf
jecxz
ins
fistp
mov
or
out
or
je
inc
cs
test
sbb
inc
or
add
and
xchg
jmp
lea
mov
inc
add
mov
(bad)
sub
xchg
cmc
(bad)
inc
and
out
arpl
cs
inc
jo
ret
inc
out
mov
out
outs
inc
fwait
in
add
fidiv
and
movs
stos
lahf
nop
jp
mov
cmp
and
mov
in
cmc
es
push
mov
push
push
push
xor
das
sub
shr
cmp
jecxz
out
and
shl
inc
push
inc
pop
ret
push
jmp
sbb
xor
sar
xchg
mov
fnsave
repnz
pop
or
sbb
sbb
xlat
leave
(bad)
into
jmp
int
mov
test
int3
data16
popf
push
add
add
jb
xchg
xchg
in
jbe
cld
jb
mov
push
xor
add
outs
or
jne
and
fwait
pop
jmp
clc
mov
lahf
mov
xor
push
inc
mov
leave
and
sbb
jge
iret
(bad)
fiadd
inc
mov
jae
fisttp
popa
add
sub
xchg
pop
imul
repz
in
fcmovbe
push
sbb
mov
mov
lock
test
xor
test
std
mov
fmul
mov
jge
mov
cmp
sbb
jo
mov
push
lea
pusha
test
jle
ja
hlt
pop
pop
lock
enter
add
adc
loop
js
mov
sti
es
rcr
bound
dec
pop
shl
jge
push
(bad)
es
lock
inc
in
or
pushf
and
sub
sub
sub
popa
sbb
push
cs
out
out
rcr
sbb
xchg
dec
in
cmps
mov
stos
test
mov
das
add
test
xchg
cmp
jb
mov
imul
mov
xchg
(bad)
neg
cli
into
rol
stos
leave
dec
xchg
fidiv
test
arpl
pushf
cmc
into
jb
jge
test
mov
and
rol
adc
add
add
push
enter
inc
add
add
xor
(bad)
rol
popf
ds
fist
and
mov
mov
mov
pop
xor
push
or
dec
scas
icebp
lods
cmc
imul
rcl
xchg
mov
pop
push
sahf
dec
adc
int
daa
lahf
cmps
std
jge
(bad)
or
dec
mov
popf
mov
and
outs
cmc
pop
fs
push
or
xlat
cld
xor
sub
popf
ret
gs
dec
adc
jmp
xor
mov
int3
rcl
dec
add
rol
imul
sub
movs
or
cli
mov
sbb
jb
push
ds
(bad)
in
cmp
clc
and
leave
popf
ins
xor
retf
adc
dec
rcl
mov
jle
stos
push
adc
xor
fiadd
rol
scas
sbb
iret
repnz
pusha
push
xor
mov
cli
mov
mov
aas
dec
outs
out
pop
xchg
enter
mov
(bad)
jo
inc
dec
repnz
inc
out
jg
push
add
jb
pop
(bad)
ja
cmp
mov
jecxz
(bad)
sbb
xor
and
cmp
sti
loope
or
sbb
pop
repnz
sbb
leave
xor
jae
out
sbb
aad
or
xor
dec
add
fisubr
rcr
jae
push
pop
bound
popa
repz
mov
fs
(bad)
(bad)
out
(bad)
cli
call
mov
inc
std
push
test
pop
loop
cmp
fs
dec
fcmovnbe
loopne
xchg
aas
sub
add
adc
ret
mov
add
push
ret
dec
daa
loope
and
cwde
mov
sahf
bound
sbb
jge
ins
inc
pop
push
cmp
mov
ds
(bad)
lods
dec
aas
add
mov
push
mov
in
jg
jnp
cwde
dec
nop
pushf
add
dec
add
idiv
push
jmp
and
hlt
shl
test
(bad)
scas
dec
fistp
cmps
test
sub
pop
xlat
dec
add
mov
gs
movs
imul
add
aad
inc
pop
sub
pop
jnp
add
xor
cmp
lahf
push
cmp
cmp
sti
shr
mov
mov
outs
in
mov
in
jecxz
out
call
iret
dec
mul
or
ds
xor
and
inc
iret
cmp
sub
mov
call
adc
es
data16
or
inc
xor
pop
icebp
push
inc
addr16
jbe
jb
mov
or
xor
mov
mov
test
fnstcw
dec
add
jbe
pop
sar
add
pop
neg
mov
into
xchg
inc
jle
ss
jbe
xchg
jle
fisub
in
mov
cld
sahf
in
jo
imul
or
sbb
imul
cmp
outs
push
push
out
mov
popa
pop
repnz
lea
nop
(bad)
cmp
dec
push
push
(bad)
loope
mov
pop
cdq
sar
loopne
stos
in
add
push
leave
pop
(bad)
out
hlt
out
jle
bound
and
mov
int
cdq
mov
pop
xor
scas
push
cmc
push
outs
inc
cmps
mov
out
ret
sbb
jle
dec
je
aad
jae
or
pop
mov
pop
jmp
into
push
and
or
shl
shl
ins
cmps
cs
fmul
pop
xor
push
pop
jecxz
ret
mov
shl
xor
jno
sub
sbb
std
add
dec
xor
jle
out
test
xchg
outs
jns
dec
sub
dec
push
int
jae
xchg
push
mov
add
mov
data16
pusha
shl
jg
sbb
ds
(bad)
xor
fs
cs
mov
stos
sbb
fstp
shl
xchg
xor
es
push
sbb
call
cmps
in
mov
and
inc
hlt
jb
mov
mov
jmp
push
pop
in
mov
fwait
mov
mov
pop
arpl
push
les
push
dec
pop
lods
ret
repz
dec
sar
sahf
jge
not
inc
ins
jle
mov
scas
ret
dec
lea
ss
xchg
call
es
adc
push
fadd
cmps
ins
mov
mov
fcmovne
scas
gs
int3
sub
mov
lahf
xor
repnz
dec
loop
xchg
cmp
or
mov
xor
in
push
js
aad
dec
aaa
cmp
std
and
jmp
add
mov
loop
sbb
in
xor
jne
pop
xor
dec
and
adc
in
mov
out
pop
jl
push
jg
cwde
mov
push
jmp
call
ret
jnp
scas
call
jne
sti
jmp
leave
in
bnd
jnp
jmp
or
mov
sti
loopne
xor
sub
retf
je
fcmovnu
(bad)
mov
(bad)
stos
retf
sub
jb
cmp
aas
xchg
push
aaa
mov
mov
stc
imul
movs
loopne
mov
inc
jns
jmp
sbb
call
into
sar
mov
pop
int
sbb
(bad)
loopne
jb
push
fist
mov
xchg
rcr
outs
xchg
cld
xchg
daa
push
daa
jns
fsub
pop
cmp
mov
lds
out
inc
or
pop
adc
xchg
pop
rol
out
xor
jg
xchg
xchg
pop
outs
mov
dec
pop
movs
adc
cmp
mov
call
push
xchg
adc
dec
(bad)
jmp
idiv
cmp
leave
push
in
sub
push
pop
adc
sub
push
adc
pop
cwde
xchg
pop
jmp
and
xchg
jge
bnd
out
mov
push
cwde
es
(bad)
adc
mov
mov
ss
in
xchg
mov
push
jp
ins
fist
pop
sbb
cmp
fbstp
dec
rcr
in
mov
call
xor
lahf
stos
(bad)
mov
dec
mov
dec
or
mov
ficom
xor
and
es
xchg
es
xlat
xchg
ds
add
icebp
jo
sbb
push
(bad)
dec
mov
mov
(bad)
xchg
cmp
mov
inc
je
enter
call
pop
pop
sub
ficom
mov
scas
bound
stos
stos
inc
loop
lock
aaa
dec
dec
sti
mov
bound
adc
fisub
adc
sub
mov
inc
and
mov
push
jb
pop
int3
repz
push
cdq
and
(bad)
jmp
or
inc
rol
cmp
mov
jp
dec
jb
neg
arpl
mov
enter
lds
xchg
xchg
jmp
xchg
inc
mov
mov
(bad)
sbb
mov
loope
mov
in
adc
sbb
test
mov
xchg
packssdw
jecxz
sbb
ds
popa
fst
mov
add
dec
pop
push
push
adc
ret
cs
pusha
lods
daa
cmc
inc
bt
test
stos
sbb
pop
cmps
mov
adc
sar
enter
out
js
sahf
fwait
or
or
dec
xchg
mov
mov
stos
rcl
push
mov
mov
mov
xchg
jo
pop
pusha
cmps
arpl
sub
push
inc
jae
cli
push
into
jno
ficomp
out
out
pop
pop
push
push
cmp
sub
xor
cdq
mov
(bad)
ds
sub
xor
cmp
es
les
or
mov
retf
shr
and
push
dec
dec
inc
pop
not
(bad)
sbb
pop
mov
and
addr16
neg
outs
ficom
mov
in
and
ret
adc
ss
xchg
dec
and
dec
arpl
sbb
xchg
int3
or
ja
cmc
pusha
rcr
loope
inc
shl
inc
jl
outs
rcl
lods
sub
sub
mov
inc
jne
mov
mov
aaa
jle
and
add
sbb
or
mov
mov
xor
xchg
xor
xor
scas
aaa
out
icebp
imul
shl
dec
and
xor
(bad)
mov
out
(bad)
mov
mov
mov
xchg
cmp
push
or
call
lock
es
shl
add
sub
idiv
ss
(bad)
dec
sub
ss
pop
sti
jecxz
cs
push
hlt
stos
imul
jg
dec
pushf
outs
sbb
mov
push
shr
int3
mov
pop
nop
mov
and
out
cld
dec
pop
nop
loop
div
scas
mov
jo
(bad)
pop
int
ret
inc
jb
pop
mov
mov
jl
sub
xor
and
xlat
aas
imul
pop
sbb
xchg
(bad)
mov
out
jl
sahf
(bad)
call
push
pop
pusha
(bad)
in
cmp
(bad)
(bad)
cld
push
jg
jbe
xchg
or
dec
in
aad
inc
inc
ror
xor
jl
fiadd
ja
add
cld
lds
bsf
push
inc
inc
push
arpl
jae
add
sbb
adc
sahf
lock
in
pop
or
jmp
sahf
and
dec
sub
ret
pop
and
add
cmp
stos
into
mov
lock
push
and
sar
sbb
retf
es
fild
mov
in
outs
imul
jmp
add
add
jae
les
dec
inc
pop
sbb
daa
ficom
shr
mov
icebp
aas
fdiv
jl
je
daa
jo
and
push
xor
sub
icebp
shl
push
adc
mov
jecxz
pop
out
add
jp
cmp
inc
or
fucomip
pop
sub
adc
sub
dec
add
sbb
js
jns
dec
popa
inc
jbe
mov
fcmovnbe
idiv
mov
in
jecxz
fdivr
enter
pop
(bad)
mov
or
outs
data16
(bad)
jo
pop
mov
loopne
push
jecxz
icebp
scas
into
mov
or
pusha
imul
xor
call
idiv
mov
lods
add
jmp
xor
adc
data16
sbb
fisubr
jo
ins
xchg
push
lods
cmps
loop
xor
lods
and
pop
mov
retf
out
sahf
push
jp
(bad)
jo
mov
mov
shr
shl
into
ja
sub
in
pop
stos
and
(bad)
push
jnp
inc
(bad)
or
imul
mov
fistp
add
in
push
shl
sub
push
(bad)
movs
cld
push
(bad)
cli
hlt
lods
jmp
iret
push
test
out
(bad)
leave
out
fwait
aam
(bad)
icebp
dec
push
xor
test
je
(bad)
neg
cmc
sar
pop
jl
sbb
jb
push
es
cmc
pop
out
and
sub
out
call
stc
add
mov
daa
neg
dec
scas
adc
cmp
jmp
xchg
(bad)
xchg
xor
jmp
adc
cmp
jmp
mov
clc
pop
in
adc
aaa
cmp
adc
mov
js
lahf
pop
jo
loopne
xchg
ds
stos
mov
cmps
test
xor
adc
cli
outs
call
push
nop
cmps
jmp
and
sub
rep
loope
std
add
test
fbstp
loopne
es
mov
(bad)
mov
xchg
xor
movs
mov
data16
leave
xlat
xlat
js
hlt
xor
jge
adc
repz
(bad)
shl
push
sbb
cmps
and
push
arpl
nop
std
dec
pop
js
jnp
sub
fsubp
pop
cwde
add
mov
test
inc
outs
add
test
jbe
lods
pop
cmps
dec
inc
icebp
(bad)
fstp
cmps
sub
ss
pop
adc
pop
outs
lock
in
mov
push
jl
imul
jb
adc
shr
xor
cmp
hlt
mov
scas
lahf
adc
aaa
pop
daa
fadd
jmp
shr
xchg
aam
pop
mov
or
add
scas
cmp
xchg
ds
retf
fisub
jmp
jb
push
pop
mov
xchg
lods
lahf
xor
inc
into
fistp
daa
out
push
cmp
inc
xchg
push
lock
retf
ins
pop
add
inc
jl
dec
add
mov
fild
add
mov
js
inc
inc
sbb
mov
cld
fiadd
fistp
jae
jle
xor
pop
(bad)
sub
lahf
dec
in
jg
lock
inc
(bad)
shr
inc
mov
cmp
hlt
push
lock
push
sub
data16
fmulp
cld
adc
idiv
adc
fild
pop
xor
ins
out
sub
(bad)
mov
mov
outs
mov
mov
std
push
push
or
gs
in
mov
xchg
add
in
ror
jmp
inc
sub
or
mov
out
pop
repnz
outs
push
adc
punpckldq
(bad)
in
adc
mov
call
stos
aaa
push
das
or
or
retf
mov
push
cmps
js
inc
mov
lds
mov
cmp
and
stos
jmp
pop
cmp
pop
jle
retf
(bad)
cmp
push
xor
mov
js
movs
sub
inc
out
adc
adc
pop
xchg
out
sar
fld
mov
pushf
in
or
shl
xor
cmp
adc
xor
shl
inc
xchg
add
add
add
add
push
sub
(bad)
(bad)
stos
mov
retf
ss
sbb
pop
ret
mov
call
out
out
data16
fcmovu
sub
jp
dec
mov
outs
inc
sbb
retf
push
call
or
cwde
mov
std
es
das
jo
cs
pop
jno
fcom
jg
out
jle
add
shr
lds
fstp
sub
sub
mov
je
pop
add
mov
sub
hlt
into
cs
jp
rol
adc
xchg
pop
cmp
jbe
sub
jp
es
(bad)
call
sbb
add
dec
shr
retf
mov
out
test
cli
jnp
(bad)
jg
mov
movs
push
and
push
loop
das
cmp
mov
dec
shl
adc
(bad)
aaa
mov
pushf
xchg
fstp
push
out
call
ds
rcl
std
dec
inc
(bad)
add
fidiv
xlat
call
dec
mov
cmps
outs
push
call
push
stos
sbb
pop
cmp
jae
scas
mov
inc
shr
and
ins
inc
cs
(bad)
sbb
sahf
mov
cs
dec
bound
bound
cdq
or
out
into
ror
inc
pop
dec
push
scas
rcr
lahf
fs
push
mov
mov
push
ds
cs
and
push
ret
push
push
sbb
push
bound
enter
cs
pop
pop
jle
lock
cwde
loop
sahf
jge
pop
jl
fs
repnz
mov
rcr
and
fsub
(bad)
loopne
push
cs
inc
pop
sbb
cs
xchg
mov
neg
push
sbb
xor
push
sahf
xchg
scas
and
lds
(bad)
js
into
and
ja
loop
mov
inc
inc
mov
dec
sub
cmps
mov
addr16
xchg
(bad)
scas
push
add
xchg
jp
pusha
jb
push
push
jb
scas
outs
adc
add
push
dec
and
(bad)
into
(bad)
into
out
in
xchg
scas
movs
retf
xchg
mov
ficomp
dec
inc
cmp
push
into
call
jmp
mov
sub
mov
add
les
xor
daa
jp
or
ret
stos
dec
je
jl
aaa
sbb
nop
push
push
push
push
(bad)
cs
out
xchg
popa
loop
add
scas
or
outs
jno
not
pop
lock
adc
inc
(bad)
adc
shl
adc
and
outs
ret
inc
ret
rcl
sahf
mov
(bad)
cmc
cmps
outs
lods
mov
mov
jns
out
push
sub
xchg
push
jae
fsubp
icebp
or
call
fist
out
dec
scas
(bad)
sahf
mov
repnz
sub
dec
xchg
test
shl
add
js
and
bnd
mov
pop
xor
xor
dec
xor
push
icebp
and
hlt
rcr
mov
adc
in
imul
mov
cs
jmp
jnp
jne
jne
adc
jb
add
jo
fisttp
mov
into
inc
je
icebp
ja
leave
and
mov
dec
or
inc
and
jle
push
out
ds
mov
scas
add
add
and
mov
push
sti
call
mov
push
jle
gs
dec
in
sub
into
(bad)
ss
xchg
jecxz
cwde
xor
dec
xchg
xchg
gs
fcomi
imul
dec
mov
popf
adc
stos
push
dec
scas
scas
mov
mov
sbb
mov
cs
pop
pop
in
and
mov
mov
call
adc
mov
call
test
out
sub
mov
add
mov
pop
mov
test
cli
imul
adc
fisubr
mov
loopne
out
gs
push
push
xor
sub
into
or
scas
push
out
push
xchg
pop
mov
js
sub
inc
dec
adc
mov
adc
or
inc
sbb
cdq
aad
bswap
call
je
xor
fsubr
std
add
or
pop
dec
les
fstp
sbb
popf
ficom
mov
inc
mov
dec
sbb
sub
mov
(bad)
adc
pop
cmp
add
daa
dec
out
xchg
or
(bad)
push
mov
xor
outs
stc
and
dec
mov
scas
icebp
and
adc
mov
push
fwait
push
mov
(bad)
sub
dec
mov
sbb
inc
shl
nop
aaa
adc
(bad)
fnstsw
push
and
scas
cld
push
jb
shl
mov
lock
adc
push
sti
movs
inc
pop
sbb
mov
sbb
dec
sahf
push
pop
or
jne
test
(bad)
inc
sub
scas
jb
push
in
les
loopne
or
add
add
adc
es
cmp
inc
mov
cmc
lahf
mov
cwde
pop
outs
adc
cli
push
and
retf
cmps
cmps
sbb
loope
mov
scas
aas
xchg
mov
mov
mov
push
xchg
jb
inc
xchg
iret
xchg
or
ret
cmp
movs
fist
lds
in
sbb
movs
xor
pop
or
inc
sbb
out
inc
adc
test
pop
sbb
inc
data16
sbb
in
rcr
fwait
and
pop
add
outs
jp
outs
pop
push
ja
mov
enter
call
pop
sub
adc
bound
nop
push
outs
mov
mov
cs
cld
aas
push
jmp
scas
add
mov
mov
xchg
into
aad
dec
mov
mov
sub
rcr
sbb
fcmove
xlat
xchg
mov
shl
imul
ret
out
fcomp
push
mov
jb
fwait
hlt
jae
loop
popa
sub
lea
lds
dec
push
push
jg
add
xor
adc
mov
cmc
fbld
pop
mov
in
repz
cmp
or
xor
(bad)
fcomp
into
movs
sbb
fisttp
dec
mov
inc
mov
sbb
mov
ror
mov
outs
dec
cmps
xor
add
inc
push
dec
or
ret
out
dec
jecxz
xchg
ss
clc
dec
jle
push
pop
int
clc
sti
jl
mov
mov
ret
in
inc
call
push
jnp
shl
cmc
or
push
icebp
and
mov
aam
out
and
lea
add
cld
fiadd
pusha
dec
in
fsub
jl
std
adc
scas
ret
pop
into
in
pusha
inc
mov
or
aad
data16
jg
mov
sbb
imul
xchg
loopne
push
xchg
gs
js
popa
loope
hlt
nop
es
add
xor
xor
daa
pop
fwait
sbb
cwde
fdiv
mov
pop
loope
fs
jge
call
retf
loope
les
mov
iret
in
sub
dec
out
jl
sub
push
dec
sub
loop
fisubr
jmp
lods
xor
scas
(bad)
pop
jnp
add
shl
jo
pusha
sbb
sub
mov
pop
outs
push
add
ins
push
cld
push
(bad)
dec
or
push
sub
sbb
pop
pop
outs
pop
jle
leave
and
mov
jmp
jle
jle
push
dec
outs
inc
inc
jb
cmps
icebp
pop
cs
push
xor
and
adc
ret
iret
(bad)
je
pusha
pop
cmp
push
push
ds
shr
aaa
out
adc
fmul
mov
jmp
adc
shr
mov
inc
jb
inc
mov
das
push
sbb
sub
(bad)
jg
push
cmp
repnz
push
mov
mov
push
ret
or
out
(bad)
mov
repnz
adc
cmp
sbb
in
inc
mov
mov
(bad)
mov
idiv
mov
cmp
inc
js
mov
xlat
xchg
movs
es
jae
add
push
mov
mov
mov
xchg
sub
jmp
push
and
xchg
mov
shl
pop
jg
div
pop
call
(bad)
enter
mov
mov
mov
nop
dec
ins
repnz
out
rcr
xchg
data16
call
or
iret
pop
outs
xchg
dec
xchg
jle
mov
iret
popa
fst
cs
sbb
out
or
fcomp
jg
scas
xchg
iret
xor
and
(bad)
aas
outs
cdq
cs
bswap
sbb
jg
(bad)
adc
and
cmc
jg
push
push
push
loopne
outs
sub
push
(bad)
xor
pop
jg
jle
xchg
mov
and
pop
ficom
and
in
pop
fmul
bnd
(bad)
pop
popa
cmp
test
not
shl
call
adc
ret
fnstsw
dec
mov
lods
adc
outs
inc
test
std
repz
and
sub
add
in
xchg
lea
mov
pop
xor
dec
out
sbb
ret
call
dec
inc
popa
mov
cmps
(bad)
imul
aaa
cmp
cmp
ret
retf
fisub
inc
in
mov
mov
add
mov
adc
(bad)
repnz
ret
or
inc
mov
and
dec
adc
jl
aaa
sub
call
xchg
xchg
lock
push
and
sbb
test
xchg
add
fidiv
movs
xchg
pop
setne
nop
mov
into
mov
inc
retf
push
fild
in
pop
adc
add
push
jns
movs
sbb
cwde
push
add
(bad)
jns
out
xlat
bound
inc
fst
and
add
cmp
jnp
mov
(bad)
mov
stc
mov
imul
ds
into
push
dec
and
xor
rcr
out
cmps
mov
push
push
add
add
repz
fbld
inc
loope
(bad)
add
enter
dec
mov
or
mov
jo
jb
divps
cmc
jmp
scas
shr
push
fisttp
dec
pop
ret
push
fadd
sub
cmovs
outs
mov
jae
mov
lds
cs
add
gs
dec
repz
and
pop
cmp
cmps
mov
pop
push
add
and
iret
adc
xor
dec
mov
sbb
test
xchg
xchg
(bad)
adc
xor
retf
push
ss
inc
mov
xor
cmp
mov
test
cmps
xchg
sub
ret
push
sar
pop
sbb
jp
(bad)
fiadd
aam
sbb
push
mov
jo
xor
xchg
dec
pusha
jb
jg
shl
and
push
adc
inc
xorps
jne
push
ins
mov
mov
fadd
and
xor
push
ds
xor
cmp
mov
mov
mov
push
fisttp
jg
outs
ss
sub
jo
stos
cmp
out
or
enter
out
pushf
aad
mov
or
add
pushw
iret
mul
jo
inc
mov
je
cmp
cmp
ins
cmp
iret
sbb
outs
repnz
icebp
imul
jo
aad
rcl
sub
push
mov
pop
adc
dec
pop
jbe
repnz
jb
inc
mov
mov
xor
(bad)
jmp
fmulp
out
jle
bound
shl
push
xchg
add
mov
ds
into
(bad)
pop
and
sub
fwait
arpl
mov
cmps
jb
bound
je
outs
movs
lock
adc
nop
(bad)
ds
adc
push
int3
frstor
mov
dec
pop
pop
lock
stc
aam
xchg
xchg
mov
mov
loope
mov
hlt
scas
imul
loop
gs
mov
push
pusha
add
aad
push
int3
add
or
push
dec
lds
in
leave
nop
mov
or
mov
aad
push
das
test
mov
dec
inc
rol
and
jbe
push
das
inc
repnz
repnz
mov
popf
push
inc
popa
xor
push
adc
aaa
shl
pop
sar
push
es
add
test
dec
sub
pop
lea
pop
xor
inc
cli
ret
xchg
adc
inc
call
pop
push
push
imul
sahf
jp
test
std
pop
aad
ror
loop
data16
cmp
dec
cmp
dec
cmp
adc
jle
inc
inc
cwde
lods
dec
xor
jmp
or
inc
cs
imul
movs
gs
or
js
arpl
scas
inc
scas
cmp
adc
std
push
lods
out
push
push
in
out
xchg
in
hlt
sub
retf
pop
mov
or
sti
push
aas
mov
dec
mov
lods
into
enter
xchg
sbb
jge
and
xchg
dec
jecxz
cmc
out
dec
fld
jo
push
ror
mov
inc
lahf
adc
cld
mov
pop
jnp
rcl
das
in
pop
push
sub
into
mov
in
pop
out
xchg
xchg
xchg
(bad)
(bad)
and
bound
jmp
mov
retf
ret
(bad)
mov
(bad)
xor
push
or
cmp
loope
test
xor
pop
and
retf
dec
inc
retf
(bad)
jmp
sti
dec
pusha
fbstp
gs
inc
rol
call
pusha
je
mov
scas
push
cld
je
push
pop
sbb
popf
push
inc
inc
jmp
popa
inc
imul
adc
sbb
inc
mov
sub
shr
pop
sub
lods
inc
cmp
pop
xchg
jb
daa
jmp
ds
rol
repnz
arpl
or
mov
add
sahf
mov
xchg
xor
sub
inc
into
jno
sbb
mov
inc
std
sub
daa
imul
sbb
pop
fwait
leave
mov
xor
into
mov
push
jae
xchg
add
cs
loopne
aam
xchg
add
shr
ret
and
mov
fs
jns
vrsqrtss
inc
pop
dec
pop
(bad)
loop
mov
add
jae
dec
mov
or
mov
imul
sbb
push
in
inc
pop
movs
jmp
lds
jns
sub
arpl
lahf
xlat
fisubr
pop
pop
xlat
bound
and
add
adc
aad
retf
jmp
mov
push
mov
pusha
sti
mov
jg
bound
cld
repz
into
pop
or
dec
mov
sar
sbb
push
sub
sub
xor
push
iret
mov
inc
(bad)
scas
pop
mov
mov
fldcw
push
aam
sahf
and
add
or
fild
push
ret
das
and
push
mov
mov
sahf
sahf
pop
pop
fucomip
push
ds
rcl
push
xor
push
xchg
cli
inc
lock
jecxz
sbb
mov
int
cmp
jge
cmp
out
(bad)
mov
push
sbb
in
and
lods
int
lods
xchg
je
and
fild
mov
cdq
pop
mov
pop
into
lock
sbb
mov
xchg
loopne
jecxz
inc
out
lock
and
jle
ret
sub
out
mov
push
jo
mov
ror
mov
mov
xchg
and
push
mov
ror
mov
inc
dec
mov
inc
dec
cmp
nop
movs
add
dec
loope
pop
mov
imul
inc
rol
popa
or
sub
push
add
out
ret
fisubr
jb
inc
and
jmp
push
movs
xchg
pusha
mov
in
ins
push
xor
fadd
dec
and
js
xlat
sub
sahf
xor
jp
jno
and
add
push
cld
lods
lahf
(bad)
dec
call
ja
dec
movs
xchg
shl
jo
inc
mov
je
mov
mov
cld
cmp
add
sub
popf
inc
pop
repnz
iret
test
dec
cmp
dec
cmps
std
jae
mov
sti
adc
outs
push
dec
xchg
inc
cmp
mov
popa
out
xor
and
mov
fcomip
cwde
mov
dec
jg
shl
sub
or
mov
xor
inc
popf
mov
call
sahf
adc
fidivr
cs
rol
ficom
and
call
adc
mov
push
neg
repz
into
into
jecxz
dec
mov
in
rcr
lahf
mov
outs
or
push
push
adc
fcmovu
(bad)
bound
sbb
or
xchg
scas
mov
mov
mov
xor
retf
xchg
cmp
and
inc
out
iret
shl
push
inc
mov
sub
ds
(bad)
push
sahf
jle
lods
scas
sbb
sti
mov
xchg
shl
into
in
mov
mov
ror
cdq
jp
mov
xor
daa
and
and
fidiv
and
push
dec
clc
dec
xchg
push
inc
jnp
repnz
into
dec
push
fsub
adc
pop
and
fisub
inc
shl
ret
xchg
data16
mov
outs
repnz
mov
in
adc
enter
daa
test
xor
sub
scas
adc
fiadd
push
pop
sub
repz
xor
out
call
mov
sar
cmps
arpl
scas
dec
jns
sub
cs
jmp
ret
dec
repz
push
out
xchg
iret
inc
idiv
arpl
inc
push
pop
test
out
daa
sar
outs
dec
mov
mov
inc
outs
fsubr
push
das
xlat
(bad)
aas
push
sbb
inc
pop
adc
(bad)
retf
(bad)
fisub
icebp
pop
in
leave
push
mov
pop
lds
xchg
repz
fadd
xor
leave
push
or
sub
pushf
ret
cmps
jnp
mov
jb
and
xor
ds
scas
add
nop
(bad)
arpl
xchg
mov
(bad)
jge
jle
jg
retf
das
push
dec
ds
repnz
jmp
jmp
ins
outs
scas
lahf
sub
lea
leave
icebp
fild
rcr
xor
out
iret
push
mov
aaa
mov
stc
mov
pop
adc
or
adc
movs
xor
mul
arpl
loop
mov
mov
imul
(bad)
xchg
cmp
sbb
push
or
push
jae
inc
xchg
sbb
pop
(bad)
push
xor
bound
jae
cmps
rol
ds
nop
xor
jmp
fsubp
push
push
cvtps2pi
shl
xor
mov
pop
jo
out
pop
repz
les
cld
(bad)
cmp
jb
ins
xchg
mov
jg
in
xor
nop
cmp
sbb
xor
in
(bad)
(bad)
jb
mov
repnz
mov
sbb
loop
xor
or
jo
dec
pop
lahf
inc
dec
cmp
push
jmp
icebp
clc
retf
mov
das
loop
add
mov
jo
push
test
xor
mov
fsub
push
dec
jbe
sub
stos
mov
mov
mov
jae
mov
jle
ja
push
jmp
(bad)
movs
add
pop
ret
jmp
mov
mov
outs
push
jle
adc
push
imul
hlt
loop
cmp
(bad)
push
loop
push
mov
outs
pushf
int
mov
sub
adc
cmp
aaa
icebp
sbb
or
xor
leave
mov
call
push
inc
mov
push
xor
stc
ins
mov
adc
cmp
and
xor
popf
dec
jp
mov
jle
enter
mov
aas
jl
cld
shl
add
push
mov
xor
fimul
fsubr
ret
and
sbb
sbb
or
mov
mov
mov
inc
jb
pop
mov
das
repz
hlt
or
ds
into
fbld
pop
(bad)
mov
inc
das
inc
add
push
push
aam
and
push
(bad)
rcr
fild
aaa
pushf
pop
dec
inc
sahf
jne
imul
or
into
jno
js
iret
fiadd
scas
or
xchg
jae
sbb
mov
test
mov
ret
jmp
fisubr
mov
mov
jno
add
mov
call
lock
shr
xor
mov
repz
dec
outs
pop
ss
fs
mov
and
or
jp
in
(bad)
test
lea
pushf
xchg
xchg
retf
mov
repnz
adc
out
(bad)
stos
or
mov
add
sub
sbb
mov
sbb
push
push
daa
mov
loop
aaa
or
xor
aas
inc
jecxz
xchg
pop
jle
cmp
inc
out
xor
lock
loop
lds
sub
adc
stos
push
sahf
mov
mov
cmp
mov
paddd
adc
add
test
test
xor
sub
loope
(bad)
mov
sbb
push
pop
scas
cmp
repnz
add
cmp
cmps
aas
adc
cld
xor
mov
test
mov
inc
lahf
and
push
mov
das
fisttp
add
xor
fmulp
or
mov
mov
dec
mov
loope
repnz
invd
adc
aas
dec
sub
jecxz
shl
jb
xchg
mov
stos
sub
xor
push
aaa
sbb
sar
outs
sub
xchg
sahf
scas
popf
push
xchg
arpl
inc
mov
jle
int3
je
dec
jmp
cdq
shr
lea
das
cmp
jle
jb
jle
mov
jb
icebp
fisub
ds
je
xor
mov
mov
mov
jno
jg
cmc
out
mov
mov
jb
sub
inc
xor
test
inc
inc
sbb
inc
xchg
mov
pop
lock
std
push
ret
scas
ss
mov
mov
div
cdq
popf
sbb
icebp
push
mov
and
cmp
pop
add
ins
fisttp
jle
call
add
mov
repnz
push
jo
mov
jmp
out
jnp
das
add
loop
add
sbb
call
and
inc
scas
mov
mov
push
inc
jno
jae
cs
mov
xchg
(bad)
cmp
mov
bound
pop
scas
lds
fwait
aad
inc
push
pop
jle
push
and
mov
loopne
cmp
aas
sbb
mov
sahf
add
adc
dec
mov
adc
loopne
mov
je
push
xor
ret
ret
out
scas
loop
out
jno
jle
pop
xchg
adc
scas
mov
loope
pop
add
cmp
(bad)
scas
push
mov
cmp
and
nop
faddp
retf
ds
aas
aad
loop
xchg
into
cmp
mov
xor
xor
dec
and
ret
mov
shr
test
ret
dec
push
bound
mov
(bad)
in
xor
xchg
add
xor
jb
(bad)
neg
je
movd
xchg
repnz
jge
or
jl
popf
(bad)
xor
repz
cmps
cmp
xor
cmc
xchg
lahf
mov
dec
adc
addr16
xchg
add
pop
jno
and
aas
mov
out
fwait
ins
js
mov
outs
ja
and
sbb
fs
xor
mov
sub
into
retf
or
ins
and
jg
imul
adc
add
or
jecxz
fisub
iret
sub
and
xor
clc
dec
adc
fs
sub
push
adc
cmp
outs
(bad)
rol
push
fcmovne
inc
jb
pop
loop
dec
outs
movs
pop
mov
in
jl
or
inc
or
lea
jle
aas
rol
ja
jo
xor
sar
sbb
data16
mov
cmp
pop
dec
jg
mov
xchg
mov
or
cmp
inc
sub
aam
(bad)
pop
mov
ins
dec
inc
sbb
adc
mov
push
rol
cmp
adc
sub
out
mov
call
outs
out
dec
lahf
in
and
and
dec
sbb
je
jmp
push
jecxz
mov
pushaw
lea
inc
ficom
adc
xchg
dec
jo
out
scas
jbe
sub
mov
outs
jb
jge
mov
sbb
mov
dec
mov
jne
jge
ror
je
mov
aam
ret
jmp
out
pushf
adc
cmc
punpcklbw
xchg
pop
jmp
inc
push
push
sub
test
mov
call
jb
jg
mov
stc
scas
sbb
push
fbstp
jmp
and
mov
sbb
inc
push
ret
scas
dec
das
sub
out
dec
sub
push
adc
stc
lods
out
xbegin
xchg
sub
test
inc
add
gs
out
nop
repz
std
mov
repz
outs
jbe
addr16
les
sub
mov
dec
xchg
mov
xchg
cmp
cmc
ret
mov
inc
push
jae
in
sbb
daa
pushf
adc
push
mov
cwde
sub
ret
out
imul
bound
mov
aam
mul
mov
(bad)
sbb
loop
(bad)
call
xchg
out
push
push
ret
ins
jle
bound
popf
dec
xchg
pusha
iret
test
cmp
pop
jb
mov
dec
jbe
das
pop
adc
sbb
test
clc
rcl
repnz
or
adc
mov
ss
cmp
or
sbb
jle
xor
loope
call
sar
dec
xor
push
pop
adc
and
push
cmp
ret
cmp
lock
(bad)
jmp
call
cs
cmp
jno
add
cmp
and
mov
ins
xchg
call
in
scas
aaa
out
push
sub
dec
test
call
popf
out
add
jne
iret
cmps
mov
lahf
shr
repnz
fs
push
sbb
repz
inc
inc
sbb
cld
push
test
popf
inc
inc
enter
fwait
int3
push
inc
mov
add
mov
popa
xchg
dec
xchg
test
cli
or
scas
inc
xor
xor
mov
inc
out
frstor
mov
lods
movs
push
mov
push
push
and
pop
das
jmp
enter
inc
loop
in
xchg
in
fsubr
pop
dec
sub
xchg
jecxz
(bad)
cmp
popa
push
mov
rcr
xchg
push
and
test
imul
aad
xor
xchg
push
popf
xchg
adc
movs
mov
mov
bound
dec
mov
sub
loop
cmps
jbe
loop
push
adc
push
inc
es
push
add
je
cwde
jmp
into
int
repnz
or
add
xor
mov
lea
das
rcr
ficom
repz
fistp
xchg
pop
adc
jp
ret
sub
mov
push
enter
cmp
adc
mov
sub
sahf
jb
bound
ret
push
xor
cs
scas
ret
ret
push
mov
xor
ins
dec
add
xor
pop
mov
rcl
push
fisttp
push
rcl
sahf
mov
addr16
dec
and
sahf
outs
cmc
shl
mov
push
popf
(bad)
repz
loopne
outs
test
fisub
pop
stos
fcom
xchg
and
scas
arpl
xor
lock
cmps
scas
push
mov
inc
inc
adc
ins
icebp
add
push
rol
push
pop
aaa
add
dec
mov
push
push
jb
mov
in
imul
push
mov
xor
aad
inc
sub
mov
daa
or
mov
dec
or
out
mov
mov
pushf
bound
dec
jle
jnp
jae
push
cmp
and
icebp
and
(bad)
xor
clc
ds
sub
jb
pop
ja
sar
dec
mov
loop
add
xrstor
push
cld
cmp
xor
ds
mov
push
push
mul
ret
movq
mov
mov
in
xor
sub
or
out
mov
out
adc
pop
xchg
mov
xorps
lods
sub
outs
adc
mov
xor
or
addr16
out
mov
jne
popa
dec
xchg
call
pop
xor
add
ins
ds
pop
int
push
push
pop
jns
push
stc
ficom
inc
push
ret
mov
fsub
in
sahf
push
sbb
call
jmp
in
or
mov
or
fwait
bnd
mov
in
pop
sahf
jo
arpl
aad
(bad)
leave
sbb
sbb
ret
mov
fbstp
mov
pop
xchg
mov
xchg
outs
adc
out
sbb
(bad)
ds
mov
icebp
jmp
and
sti
out
pop
inc
ins
retf
xlat
jmp
mov
gs
rcl
push
mov
xor
test
xor
and
push
shl
or
imul
push
into
dec
pop
and
adc
push
aaa
fild
sub
into
jecxz
xchg
and
jno
jne
pop
call
fdivr
ret
lods
sbb
lea
dec
loop
int
rcpps
mul
or
outs
ret
ja
sbb
mov
mov
mov
push
xchg
outs
ret
ja
or
sbb
lfence
push
repnz
pop
sbb
sbb
pop
in
dec
jno
out
cs
(bad)
cmps
out
les
mov
and
pop
mov
in
ss
out
xor
xor
idiv
and
repnz
test
mov
pop
mov
jecxz
popf
fcom
jbe
xchg
jp
retf
xor
adc
xchg
cmp
(bad)
pop
icebp
adc
movs
shr
cld
xor
ins
mov
push
sbb
cmps
jle
test
sar
mov
mov
call
jle
jge
out
add
stos
push
dec
mov
mov
or
ds
(bad)
jb
adc
and
jecxz
ds
into
lock
xchg
cwde
mov
push
inc
inc
iret
ret
popf
mov
pushf
not
icebp
mov
aad
push
push
fidiv
shr
jp
mov
sbb
movs
inc
fdiv
je
xchg
sub
cmp
fdiv
push
push
ins
das
jb
mov
sbb
pop
stos
movs
iret
dec
popf
pop
sbb
mov
sar
imul
lahf
mov
mov
mov
inc
lods
adc
in
mov
or
scas
push
lahf
outs
fs
mov
mov
jle
ror
int3
mov
sahf
dec
inc
icebp
dec
mov
mov
shl
sbb
xor
rcl
shr
cmps
fistp
in
jle
fistp
inc
or
jge
inc
mov
xchg
clc
ja
push
outs
and
clc
lock
daa
scas
xchg
sbb
movs
mov
inc
pop
sub
pop
mov
pop
rol
cmc
leave
loop
pop
mov
xchg
adc
dec
jae
sub
outs
mov
out
icebp
and
inc
sub
rol
inc
jns
adc
shr
popf
mov
push
std
mov
addr16
push
outs
mov
sbb
arpl
inc
ins
adc
sub
outs
cmp
rol
and
ins
and
aas
(bad)
std
cs
and
inc
jmp
lods
out
mov
xchg
sbb
ror
mov
add
bound
dec
js
mov
into
pushf
push
mov
inc
stos
repnz
loopne
add
sbb
stc
(bad)
or
adc
loope
(bad)
jmp
mov
ss
fucomp
mov
push
imul
int3
adc
movs
lea
cmps
loopne
jae
popf
jbe
imul
ja
pop
xor
fisub
or
scas
cmc
cmp
mov
push
and
cmp
add
inc
enter
das
(bad)
pop
js
hlt
(bad)
call
mov
pop
je
ins
and
aaa
sub
sub
jl
fidiv
mov
adc
mov
add
(bad)
je
shl
mov
mov
adc
rcr
mov
fnsave
xchg
inc
mov
add
and
add
xchg
sbb
mov
lods
mov
mov
jge
sub
sti
jmp
adc
sbb
or
test
pop
push
sbb
js
or
jle
xor
mov
test
(bad)
mov
pop
call
xor
adc
idiv
add
enter
das
add
mov
dec
add
mov
jg
or
mov
mov
cli
popf
popa
je
lea
lds
xor
sbb
loop
outs
cmc
mov
aad
cmp
and
retf
xchg
(bad)
mov
icebp
push
aas
adc
(bad)
cmp
sub
push
(bad)
cmps
das
loop
xor
add
mov
daa
dec
ins
push
sub
jle
xchg
outs
mov
sub
and
das
ins
pusha
jle
fcomp
mov
push
ds
movs
mov
pop
out
popf
mov
mov
shl
sbb
adc
sub
lock
leave
push
and
push
aas
lods
movs
xor
mov
out
(bad)
js
xor
adc
jp
adc
pop
icebp
not
xchg
dec
rcl
iret
dec
mov
xchg
shr
push
ds
enter
cmp
xchg
bound
dec
mov
and
add
jl
add
bound
adc
inc
mov
inc
ret
cmc
mov
push
inc
in
xchg
ret
cmc
jecxz
ret
cmc
sub
cdq
inc
in
adc
fs
mov
inc
mov
bnd
and
or
sti
movs
fiadd
inc
lock
in
adc
lods
sub
xor
pop
gs
adc
imul
add
dec
popa
not
or
mov
in
inc
xor
sbb
cmp
xor
(bad)
mov
jg
mov
jo
dec
mov
adc
sub
pop
ret
cmp
shl
add
cmc
or
lahf
cmp
pop
in
fistp
and
inc
mov
je
sub
xchg
inc
sahf
cmc
sub
dec
inc
movs
out
cmp
mov
ror
inc
mov
out
jmp
mov
add
inc
daa
stos
sub
in
pushf
add
loope
push
mov
daa
into
nop
mov
inc
inc
bndldx
(bad)
ins
inc
ret
call
outs
dec
inc
movs
mov
retf
jno
test
xchg
stos
add
adc
or
shl
xor
mov
cmps
mov
popf
(bad)
repnz
mov
pop
div
retf
sahf
jg
outs
xor
sar
cmp
add
rcl
jo
psadbw
sti
and
sti
popf
data16
pop
push
cli
jle
jle
repz
mov
idiv
cmc
neg
mov
ds
ror
jle
pop
data16
jp
jbe
sahf
es
adc
mov
jbe
and
sahf
push
mov
mov
lock
cmp
push
or
jle
aad
aas
sti
fidiv
cmp
ds
idiv
dec
pop
out
jbe
jbe
fwait
sub
ds
(bad)
cs
leave
jbe
cmp
push
dec
xchg
cmp
outs
lds
sti
fist
xor
cmps
adc
adc
mov
out
jp
and
jbe
push
push
xchg
mov
mov
jnp
rol
cmp
adc
rcl
div
neg
mov
push
and
jns
jbe
xchg
sbb
dec
mov
fiadd
jb
push
jbe
into
das
mov
push
mov
jbe
mov
jne
mov
bound
std
out
sahf
in
mov
push
shl
sbb
(bad)
test
add
mov
pop
xchg
xchg
mov
ss
cld
push
cli
pop
xor
ror
call
repnz
push
jnp
shr
sahf
into
arpl
fstp
repz
inc
cld
adc
xlat
push
ins
dec
sbb
sub
cs
clc
mov
stos
cmp
cmp
dec
out
mov
lock
cwde
fucomi
xchg
mov
and
mov
mov
out
into
mov
and
push
mov
iret
and
(bad)
xor
mov
or
imul
inc
mov
inc
mov
add
jl
in
in
shl
stos
jo
ins
imul
cld
loopne
cwde
jmp
mov
sbb
sbb
fs
aaa
neg
cmp
mov
popf
mov
lods
and
and
xor
test
xchg
dec
jl
ss
mov
or
cmp
push
in
leave
aaa
push
mov
sbb
mov
xchg
inc
(bad)
jo
mov
js
mov
mov
mov
jo
sbb
stos
xor
cwde
mov
xchg
cmp
xor
sbb
mov
std
clc
adc
cmp
mov
inc
enter
mov
mov
cld
push
sub
in
cmps
lods
shr
dec
xchg
pushf
sets
mov
(bad)
sbb
cmp
cmc
sar
imul
ds
cmp
or
cmps
mov
inc
(bad)
mov
cwde
mov
popa
push
adc
ret
pusha
shr
mov
push
ror
repnz
inc
mov
push
mov
movs
mov
jp
cmp
jge
inc
retf
mov
cmp
jnp
js
sti
pop
nop
stos
neg
add
xor
cwde
inc
pop
jno
cmp
jo
mov
sbb
jge
mov
xor
adc
sub
lds
(bad)
(bad)
push
xchg
xchg
xchg
pop
popf
clc
fcos
mov
fnstsw
mov
sbb
sbb
lods
add
mov
mov
test
lods
mov
cmp
popf
jnp
cmp
test
fdivr
add
mov
std
sti
dec
imul
dec
aas
sbb
call
xor
push
sti
fdivp
push
repz
mov
jnp
pop
xor
sti
movs
sbb
sbb
pop
jl
jle
cld
fdivrp
fdivrp
fisubr
sysret
imul
xchg
add
das
add
mov
push
aam
cdq
jmp
and
jb
cmps
int3
jle
mov
jns
mov
sub
fiadd
pop
lock
stos
sub
push
(bad)
(bad)
pop
jnp
aad
jo
push
std
fcomip
call
cmp
xlat
imul
xchg
(bad)
pop
xchg
cmps
jnp
xchg
fdiv
fld
cdq
stos
xor
pop
pushf
fadd
shl
and
cdq
imul
repnz
ins
cmp
jo
cmp
add
add
and
inc
mov
sbb
sbb
aam
xor
(bad)
stc
cli
inc
jge
add
and
push
jmp
aad
bound
out
stc
cmp
cmp
cmp
mov
out
inc
pop
fld
mov
sub
std
jg
xor
sub
mov
in
and
inc
sti
hlt
cwde
sub
fcmovne
test
inc
cli
bound
xchg
frstor
mov
hlt
loope
iret
das
mov
cmp
mov
hlt
movs
jg
jnp
je
jbe
cmp
(bad)
cli
and
je
add
add
and
arpl
out
jns
inc
jg
cmp
(bad)
stc
jmp
test
jg
jg
out
pop
lock
jb
jbe
jg
cmp
jle
sbb
dec
fld
neg
setnp
test
inc
mov
mov
aas
ins
je
jmp
into
dec
jmp
jns
sub
mov
jb
je
iret
std
test
pushf
sub
les
int3
test
xchg
into
repnz
aas
cmp
out
leave
jg
jg
repnz
mov
test
repnz
and
dec
(bad)
fbld
aas
xlat
dec
pop
pop
in
mov
add
arpl
bnd
iret
cmp
and
in
push
das
jg
xor
ins
push
(bad)
jmp
lahf
call
fcmovnbe
jb
xor
or
dec
xor
dec
out
cs
cmp
jg
adc
ins
jb
fistp
ja
inc
leave
and
pop
sub
inc
push
sbb
mov
in
cli
jl
xor
mov
outs
pusha
jl
cwde
icebp
fsub
outs
jbe
mov
aas
outs
inc
outs
pop
ret
mov
popa
jb
xor
pop
test
sbb
fld
js
(bad)
(bad)
mov
push
xchg
stc
fbld
mov
jns
test
nop
ret
cmp
xchg
sub
outs
shl
into
mov
inc
inc
test
and
dec
retf
mov
jmp
stc
fbld
mov
imul
jmp
jmp
shl
icebp
shl
es
inc
inc
push
inc
cmps
sub
ror
aaa
sub
cmp
jg
and
call
sub
adc
adc
jns
mov
ret
fwait
leave
mov
in
xchg
loope
inc
pop
cli
mov
shl
adc
xchg
movs
push
mov
mov
push
xor
xchg
shr
add
icebp
pop
pop
mov
or
xchg
jecxz
shl
push
fcmovu
lahf
stc
cmp
mov
xor
in
jge
or
(bad)
aas
xchg
outs
fsub
xchg
or
lock
dec
lahf
out
inc
xor
xchg
test
test
and
pop
pop
xor
sub
add
mov
call
and
adc
or
and
push
push
adc
mov
shl
mov
add
pop
addr16
inc
in
sub
jmp
pavgw
mov
pop
test
in
clc
adc
outs
movs
jge
in
add
cmp
push
(bad)
sbb
rcr
out
mov
mov
mov
lock
inc
cmps
les
mov
and
mov
or
add
arpl
dec
pop
mov
mov
(bad)
test
ins
rol
and
add
in
sbb
pop
jecxz
call
pop
shl
xchg
cmps
and
or
add
cmp
add
rol
mov
mov
inc
xchg
in
add
add
pusha
out
dec
data16
sar
cmovo
dec
sldt
pop
lds
cdq
sbb
and
push
test
xchg
inc
add
mov
out
ror
inc
das
and
add
aaa
cmp
lldt
dec
daa
xchg
inc
ins
aam
xchg
pop
adc
mov
lahf
xchg
sar
or
add
leave
sti
out
pusha
scas
mov
pusha
int3
or
and
cmp
jb
xchg
ss
out
push
fs
mov
clc
pusha
cwde
adc
cmp
movs
dec
mov
scas
mov
pop
(bad)
in
push
mov
sbb
cmp
in
adc
aaa
jp
and
fidivr
out
push
mov
daa
add
lock
jle
sti
add
loop
push
xor
ret
inc
cmp
mov
in
mov
ja
cmps
add
mov
daa
mov
sbb
test
xchg
repz
mov
or
mov
lahf
fs
inc
hlt
ror
dec
out
aas
lods
add
mov
push
sbb
mov
std
pushf
sub
mov
shl
imul
ss
call
pop
add
sbb
(bad)
movs
mov
push
std
xchg
cmp
mov
je
repnz
lahf
inc
push
leave
cmp
mov
jae
sub
iret
imul
mov
xchg
adc
sub
push
movs
inc
mov
xor
je
and
(bad)
mov
outs
cmp
cmp
shl
shl
and
call
xchg
leave
dec
in
ins
cmps
rol
cmp
ja
out
cmp
mov
cmp
mov
mov
call
es
mov
mov
cmp
adc
inc
inc
jne
mov
xchg
mov
hlt
cmp
and
inc
addr16
mov
out
push
jge
pushf
daa
in
sub
out
push
gs
into
gs
imul
mov
or
fdiv
aas
dec
in
test
out
cs
push
test
or
jne
or
mov
gs
jg
mov
test
jae
test
outs
test
dec
out
ja
out
mov
mov
jae
mov
call
out
xor
push
test
mov
dec
ja
cmp
jecxz
mov
xor
repz
xor
test
addr16
pop
xchg
inc
test
dec
jp
sub
sub
dec
mov
add
outs
cmp
pop
sar
mov
retf
push
add
jmp
arpl
scas
sbb
and
imul
mov
je
mov
mov
sub
dec
pop
lea
(bad)
lods
cs
ret
xchg
mov
cmp
dec
sbb
movs
cmps
add
gs
das
sub
jecxz
xor
inc
add
je
adc
daa
imul
movs
inc
xor
add
push
imul
dec
xchg
loopne
call
adc
data16
scas
sub
retf
xor
(bad)
sti
in
leave
dec
pop
jae
push
add
retf
xor
inc
mov
xlat
jnp
mov
and
scas
nop
jae
jge
or
test
cmps
sbb
push
xchg
add
xor
cmp
add
push
and
mov
in
gs
addr16
scas
xchg
xor
hlt
cmps
stos
mov
adc
push
outs
je
mov
cs
inc
jg
js
and
push
dec
nop
aam
dec
sub
or
add
add
mov
add
and
sub
test
add
test
addr16
leave
add
mov
pop
das
inc
das
cmps
in
inc
test
mov
ins
sbb
add
movs
cld
push
and
inc
dec
jecxz
jl
dec
pop
mov
mov
sub
dec
sbb
dec
js
into
iret
pop
hlt
or
in
lods
push
mov
inc
or
mov
add
mov
xor
ret
addr16
loope
sub
in
cmc
adc
cs
fisttp
fstp
mov
in
and
out
xchg
and
mov
pop
jae
fsub
xchg
and
push
cdq
(bad)
or
adc
movs
fisubr
(bad)
(bad)
ins
and
xchg
fild
push
fs
sbb
jb
jnp
pop
stc
jp
sbb
aaa
mov
or
imul
int3
mov
xlat
mov
mov
or
jmp
push
sub
sub
(bad)
push
jmp
cwde
int
imul
xchg
in
and
xchg
imul
int
sbb
in
and
xchg
imul
stos
fwait
mov
or
sub
or
movs
mov
xchg
sub
jns
jmp
add
shl
cmp
jle
inc
adc
xor
ins
out
aas
xchg
ds
sub
mov
inc
jns
mov
mov
repnz
sub
pop
push
loop
jns
jno
rcl
and
sahf
imul
sahf
bound
test
xchg
imul
popa
shr
icebp
or
sbb
loop
push
ret
xor
push
rcr
retf
and
out
mov
or
sbb
aas
add
out
dec
(bad)
bound
aas
or
jnp
dec
jmp
test
neg
test
ja
test
repnz
mov
mov
jb
arpl
popf
mov
out
rcr
add
popf
neg
neg
test
ja
jl
jmp
fstp
(bad)
cmc
xchg
mov
and
lea
mov
les
fwait
inc
sub
or
loope
push
and
in
in
movs
sahf
movs
(bad)
in
in
and
and
in
in
movs
sahf
and
fs
fs
sahf
movs
jle
pop
fs
push
and
fs
fs
sahf
movs
jle
pop
fs
push
movs
(bad)
in
in
and
and
in
in
movs
sahf
movs
(bad)
in
fstp
and
mov
xchg
in
retf
mov
fucompp
outs
cdq
fsub
ins
test
push
movs
dec
cs
clc
scas
xchg
sub
pop
add
adc
jle
pop
sbb
mov
ja
jnp
jno
sub
es
adc
les
adc
mov
xchg
push
int
adc
push
jmp
mov
xchg
rol
sbb
adc
jge
mov
and
stos
(bad)
movs
pusha
test
jg
jg
mov
mov
or
out
loop
mov
inc
jge
cmc
(bad)
cmc
daa
jne
jne
jne
jne
cmc
(bad)
cmc
out
(bad)
cmc
daa
jne
jne
jne
jne
cmc
(bad)
cmc
out
(bad)
cmc
daa
jne
jne
jne
jne
cmc
(bad)
cmc
out
(bad)
cmc
daa
jne
jne
jne
jne
cmc
(bad)
cmc
out
(bad)
cmc
daa
jne
jne
jne
jne
mov
xchg
aam
mov
sbb
sub
jne
(bad)
cdq
cwde
lea
das
jne
sub
jne
or
add
inc
sub
sub
push
jne
adc
xchg
loope
adc
xor
sbb
sbb
xchg
push
xchg
sub
or
cmp
pushf
mov
xor
jne
xor
and
mov
test
push
call
push
pushf
(bad)
call
sub
adc
and
popf
mov
out
mov
push
daa
adc
xor
cmp
out
test
inc
add
jle
mov
loop
add
test
dec
jg
jg
or
dec
mov
je
add
pop
jne
nop
sbb
xchg
mov
add
push
jle
cs
xor
clc
xlat
mov
imul
and
jg
int3
int
dec
push
sbb
daa
jns
or
dec
sub
jge
leave
int3
cmp
add
dec
dec
pop
aas
das
jg
adc
pop
adc
aas
outs
aas
sub
rol
shr
or
aas
dec
push
daa
sbb
or
cmp
push
pop
xor
test
sub
sub
inc
push
dec
adc
jp
push
push
and
or
int3
dec
or
add
imul
cmp
cmp
leave
shr
adc
push
es
je
sub
push
mov
add
aas
pop
daa
xor
adc
lock
jg
fcmovbe
fs
(bad)
adc
jp
enter
add
rol
sub
ins
ds
sar
pop
adc
in
stc
sub
dec
sub
dec
mov
sbb
dec
aas
sub
dec
jg
adc
(bad)
xor
sahf
push
(bad)
xor
push
aad
xor
sahf
push
(bad)
xor
and
and
mov
stc
sahf
push
inc
cmc
adc
xchg
push
sti
cmp
pop
and
xchg
pop
stos
jno
pop
repz
pop
ja
lea
cmp
jl
push
scas
jl
test
pop
stc
sbb
jge
jge
push
sub
xchg
push
lock
into
xor
jbe
lahf
dec
lods
jo
inc
mov
cwde
pop
xchg
jae
push
jnp
lahf
inc
(bad)
adc
lahf
inc
lods
adc
mov
lahf
push
into
pop
out
mov
jo
fld
je
rcr
sub
out
mov
mov
es
xchg
push
les
dec
sub
and
loope
outs
bound
pop
cmp
das
clc
clc
stos
into
inc
movs
and
push
cdq
je
mov
jecxz
dec
not
sbb
out
std
cli
push
cs
inc
mov
ss
imul
call
jbe
push
aaa
inc
inc
out
lods
shl
les
loope
adc
sub
and
mov
shl
jo
mov
call
and
cmc
aam
inc
and
mov
push
add
inc
xchg
lock
out
xchg
in
inc
arpl
xchg
and
xor
in
mov
repz
xor
(bad)
push
push
je
xlat
push
xchg
add
loopne
icebp
(bad)
add
xor
jne
mov
repz
movs
rcl
(bad)
cmc
push
adc
inc
loope
and
push
adc
push
jae
add
lds
cmp
jb
add
lea
(bad)
arpl
shl
add
add
popa
add
xor
rcl
adc
shl
jae
add
loope
loop
xchg
push
(bad)
repnz
lock
push
push
pusha
repnz
lock
shl
ror
xor
mov
rol
jecxz
jno
mov
push
lods
stos
xlat
test
mov
pop
sub
lds
add
lods
add
fwait
xor
xor
loope
mov
mov
arpl
xor
push
gs
scas
(bad)
loopne
xchg
mov
push
jp
sbb
xor
add
out
popf
mov
mov
adc
adc
push
(bad)
loopne
data16
nop
jbe
pusha
add
and
mov
rcl
hlt
jne
arpl
push
aaa
cmp
nop
nop
add
push
and
push
mov
jae
jno
jge
cmp
jne
mov
mov
push
pop
sbb
cmp
daa
fisub
into
adc
(bad)
mov
pop
jae
inc
adc
sbb
test
mov
xor
ins
jne
add
add
aaa
repz
xchg
jae
xor
in
sub
mov
adc
shl
dec
mov
jae
mov
jno
cmp
and
add
fbstp
lds
jbe
gs
in
jne
adc
pop
mov
xor
repz
test
mov
xchg
adc
int3
xor
jae
xor
cmp
cmp
ins
test
xor
in
inc
daa
sub
push
or
popa
ror
or
jo
and
jno
adc
adc
or
sbb
cwde
icebp
popf
mov
cmps
fadd
cdq
je
inc
mov
test
jo
inc
cld
add
and
loope
dec
add
xor
cmc
into
pop
fld
push
outs
out
(bad)
mov
jg
into
push
into
and
and
or
add
sub
or
jmp
dec
jb
pop
inc
ins
es
mov
aas
int3
pushw
xor
push
dec
add
pop
je
push
cmps
and
sub
addr16
adc
pusha
adc
stos
inc
mov
fadd
(bad)
call
out
mov
loopne
or
fwait
or
dec
out
inc
repnz
dec
sub
sub
or
arpl
test
out
loop
and
gs
test
mov
loop
stos
pushf
retf
sub
clc
jo
sub
push
stos
fstp
mov
fnsave
mov
es
test
or
xor
jle
cmp
jp
and
or
fisttp
lods
inc
and
dec
pop
jle
jmp
mov
hlt
popa
pop
cmp
sub
mov
add
mov
cmp
mov
mov
loopne
repz
popa
or
cmp
in
sbb
call
fs
ja
inc
push
into
rcr
out
jb
fsubr
jle
cmp
lods
cmps
jmp
jne
sbb
loop
pushf
pushf
mov
mov
jae
push
sbb
inc
popf
mov
push
stc
mov
mov
and
xchg
add
pop
fistp
push
and
or
xlat
mov
sub
fiadd
sbb
lods
daa
(bad)
mov
inc
cli
cmp
pop
dec
daa
movs
ficomp
pop
fisub
(bad)
mov
and
pop
push
in
imul
(bad)
(bad)
aas
lods
fistp
daa
pop
mov
xlat
add
xor
(bad)
xor
mov
jns
mov
(bad)
in
jbe
jne
xchg
call
and
mov
fwait
cmp
xchg
push
pop
adc
aas
dec
loope
dec
mov
mov
pop
loop
sub
hlt
test
or
test
push
icebp
call
dec
dec
push
mov
sbb
push
cmp
dec
jnp
call
rcr
mov
dec
dec
ins
xchg
mov
dec
mov
pop
pop
xchg
pop
retf
sbb
push
jmp
dec
dec
dec
dec
(bad)
call
test
mov
jmp
pop
int3
jb
test
test
into
stc
enter
rol
ins
dec
in
nop
jbe
test
(bad)
aam
push
mov
fwait
jecxz
addr16
jmp
out
mov
sbb
imul
stc
fcomp
clc
dec
push
inc
mov
cmps
ss
movs
dec
cmp
pop
push
mov
pop
shr
or
imul
dec
fwait
push
scas
xchg
outs
mov
mov
sub
jle
cmp
push
mov
push
cmp
mov
test
jg
pop
sbb
sub
push
stos
inc
or
add
or
std
pop
fnstcw
outs
hlt
icebp
fld
sub
mov
push
vmwrite
or
mov
xchg
or
(bad)
sahf
cli
jle
cmp
cmps
sti
cwde
bound
xchg
jp
mov
pop
jg
fdivr
cdq
or
lock
scas
cmp
(bad)
xchg
pop
mov
xchg
mov
stc
xlat
idiv
dec
xor
mov
pusha
sar
shr
test
cdq
cmp
pushf
out
nop
clts
fiadd
ins
fbld
in
ret
sub
out
mov
jns
(bad)
fisubr
popf
lods
mov
shr
test
dec
or
out
ins
lds
out
lods
rcr
sbb
jo
loopne
in
jmp
jg
pop
clc
mov
ins
aam
mov
out
pop
test
cmc
not
fimul
test
mov
test
iret
test
scas
adc
(bad)
mov
stc
ds
stos
out
jns
js
nop
add
mov
popf
mov
mov
pop
adc
pop
push
retf
mov
jle
repz
jge
or
jge
int3
dec
(bad)
(bad)
out
jns
je
mov
mov
mov
jb
mov
jne
repnz
popa
mov
out
and
dec
in
test
addr16
(bad)
pop
cmp
push
shl
in
lds
push
sbb
je
sub
cmp
add
add
cmc
xor
loopne
imul
lds
pop
cmp
pop
xchg
mov
repz
sub
les
jbe
xlat
into
and
or
mov
lods
mov
xchg
pop
(bad)
adc
push
aad
push
inc
sti
pop
nop
rol
xor
test
cli
fsub
lods
push
les
mov
push
add
enter
inc
stos
movs
cmp
ret
icebp
add
pop
movs
inc
movs
fadd
add
fild
or
lds
xor
jg
mov
xor
hlt
lahf
leave
das
jl
mov
xchg
push
and
aad
cmps
lock
mov
xchg
push
xor
cmp
push
adc
retw
mov
cdq
jae
addr16
inc
xchg
retf
xchg
adc
and
adc
add
inc
inc
ret
fsub
js
inc
stos
jecxz
adc
pop
rol
pop
adc
and
dec
js
out
(bad)
test
mov
arpl
jnp
dec
hlt
xor
ja
mov
push
push
adc
clc
xor
mov
mov
sar
out
sbb
ror
pop
mov
nop
inc
push
sbb
mov
or
sub
inc
push
cmp
mov
(bad)
jle
out
ss
retf
scas
movs
xchg
std
dec
arpl
pop
retf
xor
jmp
dec
rcr
jne
sbb
enter
inc
hlt
sub
cld
and
(bad)
pop
out
addr16
dec
cdq
push
cld
push
les
xchg
xchg
dec
sti
stc
jb
and
mov
dec
mov
cmp
pop
hlt
outs
dec
xchg
adc
enter
fldcw
add
inc
ds
jb
lea
lds
or
(bad)
xchg
data16
push
jmp
pop
sbb
ja
jmp
loop
inc
retf
xor
mov
imul
inc
outs
jnp
pop
cdq
jne
xchg
retf
ret
adc
sub
stos
mov
sub
xor
outs
imul
or
pop
inc
add
pop
xchg
inc
xor
and
pop
or
dec
adc
xchg
mov
pop
add
bound
shr
mov
add
jp
mov
add
adc
mov
and
hlt
mov
and
push
dec
xchg
or
aaa
(bad)
cli
imul
jecxz
xchg
cdq
mov
movs
retf
repnz
sub
xor
fild
sbb
bsr
cmps
cs
mov
sub
pop
adc
xchg
pop
rcr
mov
pop
(bad)
jb
cmps
mov
cwde
in
push
cld
pop
test
call
cmp
or
movs
ins
fimul
cmp
sub
lods
sbb
outs
stos
mov
movs
or
retf
push
mov
push
mov
xor
pop
mov
push
ret
adc
mov
and
or
leave
cmp
mov
test
xlat
xchg
push
add
sbb
or
out
sub
adc
sub
add
xchg
retf
inc
xor
add
mov
sub
mov
and
add
data16
mov
test
test
adc
data16
fistp
dec
pusha
out
and
xor
scas
xor
xchg
aas
add
into
mov
cmc
jge
dec
mov
xor
cmp
scas
mov
aas
loopne
inc
xor
ins
push
dec
xor
les
enter
sub
xlat
(bad)
shl
mov
das
xor
adc
xor
xor
and
dec
mov
and
sar
scas
loopne
mov
adc
ds
cmp
and
mov
push
retf
aas
repz
addr16
wrmsr
pop
fs
neg
cmp
faddp
xor
fidivr
cs
mov
ss
(bad)
sbb
mov
inc
pop
or
dec
push
dec
push
jmp
aaa
js
xor
ja
xchg
mov
mov
cmp
cmp
xchg
dec
inc
mov
dec
sar
xor
lods
xchg
mov
cmp
adc
mov
pop
clc
inc
ja
cmp
inc
mov
inc
sahf
xchg
out
mov
or
jbe
sub
ucomiss
or
int
icebp
leave
push
sbb
imul
jmp
mov
aas
jp
jle
ins
add
mov
fcomp
jl
sbb
dec
add
xchg
mov
fistp
inc
dec
mov
(bad)
stc
ror
retf
arpl
stos
cdq
sub
in
sub
jp
dec
imul
lods
(bad)
cwde
ins
push
pop
ins
addr16
or
fstp
out
test
sbb
cmp
mov
cmps
mov
stc
pop
push
fprem
cmp
jns
pop
ds
jno
pop
jmp
imul
jnp
dec
jae
push
pop
dec
mov
pop
pop
or
mov
int3
pop
into
fcmovne
pop
pop
pop
cmp
or
cld
imul
out
fdivr
daa
dec
ins
pop
imul
cmps
lahf
lahf
jmp
addr16
ja
(bad)
jb
sub
lahf
pop
push
fs
lea
movs
push
push
push
cmc
je
sti
mov
xor
inc
lea
(bad)
or
adc
dec
inc
(bad)
mul
push
mov
(bad)
fcom
sahf
(bad)
jmp
mov
pusha
cmp
or
std
retf
mov
and
cmp
cmp
aad
rcr
outs
mov
jns
cs
or
dec
std
rcl
pop
jbe
cmps
test
out
fcomp
stos
adc
sbb
aas
cmc
xchg
add
cmp
inc
out
push
hlt
mov
pusha
jmp
push
add
lods
xchg
int3
pop
dec
lods
jge
mov
div
addr16
and
pop
add
aaa
cmp
or
cs
xor
pop
or
pop
mov
movs
fadd
cmp
or
test
mov
movs
jle
loop
pop
push
ja
and
cmps
adc
(bad)
in
sbb
out
mov
jge
inc
jns
xchg
test
sar
aas
(bad)
icebp
mov
jecxz
cmps
jg
and
and
inc
push
lock
test
pop
jp
mov
pop
push
aam
bound
add
inc
and
das
jb
scas
lea
xchg
push
cmp
xor
test
aad
mov
inc
shl
adc
inc
sub
outs
(bad)
sub
data16
sub
mov
push
add
inc
sub
js
jns
xor
jle
dec
ret
mov
popa
jo
jne
std
stc
xor
lock
sar
sub
mov
inc
dec
fs
xor
sbb
add
je
push
mov
dec
mov
sbb
stc
mov
sub
push
jge
sub
xlat
push
sub
mov
mov
inc
push
jmp
push
sbb
jecxz
aad
popf
and
test
cmp
cmp
in
out
xchg
icebp
sbb
out
mov
or
(bad)
das
xchg
sub
sub
or
sub
outs
retf
retf
leave
bound
(bad)
scas
ror
xchg
loope
data16
mov
xchg
jns
jo
cmp
dec
mov
dec
ss
aad
or
movs
je
sub
inc
mov
leave
push
ins
push
int3
pushf
test
pushf
popa
xchg
in
movs
sbb
rol
jnp
mov
pusha
and
fs
aad
(bad)
push
in
aad
jge
xchg
xor
aad
ret
dec
sbb
std
xchg
mov
ja
outs
shl
sub
sar
mov
lods
int
mov
addr16
push
sub
push
addr16
(bad)
xchg
cmps
lods
(bad)
lea
sub
fidiv
mov
sbb
dec
adc
mov
mov
sub
push
out
ret
dec
loope
ins
mov
xchg
jmp
fs
lods
adc
iret
mov
or
adc
sbb
popf
cs
popa
outs
data16
out
and
loop
pop
adc
das
gs
add
pop
adc
add
push
pop
push
outs
fistp
adc
gs
sbb
es
sub
and
push
dec
pop
adc
mov
outs
mov
mov
xor
mov
lds
outs
adc
and
jb
dec
popa
outs
das
xor
lea
repnz
fcomp
xor
out
call
fdiv
outs
jl
test
popf
retf
pop
out
inc
in
sar
push
mov
pop
lods
repz
add
mov
mov
movs
lods
jle
pop
mov
adc
xor
(bad)
fsubrp
adc
popf
jp
icebp
push
mov
lea
mov
pop
or
iret
int
pop
into
mov
mov
cmp
inc
popa
cmp
mov
cdq
push
(bad)
cs
into
mov
xor
jae
mov
pop
mov
pushf
fiadd
aas
ret
lods
mov
outs
fs
outs
sbb
outs
(bad)
cli
or
sahf
mov
pop
mov
jecxz
mov
pop
fs
lods
inc
loopne
dec
outs
push
jl
or
out
cmp
jl
mov
out
and
ja
pop
mov
and
mov
mov
retf
jo
in
repnz
out
fdiv
push
dec
jno
bound
lahf
dec
sbb
pop
or
sbb
mov
rcl
pop
dec
repz
retf
and
pop
xor
int
jne
push
jle
neg
adc
push
xor
and
(bad)
bswap
in
dec
(bad)
dec
mov
pusha
loope
ret
shl
sub
pusha
or
cmp
jge
pop
bound
push
test
outs
pop
stc
mov
or
mov
push
inc
push
pop
dec
add
xor
mov
(bad)
xor
aam
or
sbb
cmp
mov
scas
in
push
cmps
xor
push
add
or
mov
mov
and
mov
cmp
adc
imul
mov
dec
js
xchg
mov
(bad)
jae
movs
das
jno
push
loop
int3
dec
xchg
in
jecxz
mov
and
xchg
sub
pop
pop
mov
pop
mov
ficom
jno
stos
repz
sub
hlt
into
add
shl
cwde
mov
pop
jl
and
daa
adc
push
loop
stc
jo
cmp
mov
ins
cmp
dec
dec
ret
push
jb
add
hlt
adc
and
repz
jmp
cmps
(bad)
mov
scas
xchg
cmps
mov
lock
hlt
je
pushf
movs
cs
dec
inc
pop
jmp
rcr
cmp
adc
stos
test
mov
xchg
inc
push
or
int3
call
xor
loop
jae
pop
mov
push
fwait
sar
mov
ss
(bad)
jmp
or
xor
loopne
inc
jl
cmps
shr
hlt
call
sub
adc
dec
pop
scas
pop
rcr
inc
pop
repz
dec
jo
mov
nop
repnz
bnd
(bad)
shr
jmp
scas
push
sbb
jns
xchg
sbb
dec
xchg
data16
mov
(bad)
stc
add
in
(bad)
out
inc
xchg
nop
pushf
(bad)
out
jmp
jae
push
sbb
inc
jle
dec
jb
cs
(bad)
add
and
loope
cdq
cmps
mov
jne
sub
not
or
push
sbb
arpl
popa
xchg
repz
mov
mov
scas
repz
mov
out
push
fld
xor
jmp
call
cmps
add
add
pusha
adc
cli
adc
mov
test
push
fcom
jmp
pop
pop
adc
jo
pop
add
loope
push
dec
pop
dec
and
adc
cs
rol
jp
or
mov
outs
xchg
sub
or
stc
shl
pop
sbb
test
mov
pop
shl
je
and
xchg
scas
std
mov
hlt
out
ror
stc
sbb
test
ret
dec
jnp
shr
jp
les
shr
mov
in
aam
lea
test
sub
lods
mov
mov
test
xor
movs
jle
sbb
outs
mov
iret
mov
sub
retf
dec
xlat
fdiv
mov
mul
xchg
mul
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
dec
jns
neg
neg
sbb
pop
pop
ret
push
push
call
mov
test
jne
call
mov
xor
jmp
cmp
jne
push
call
test
pop
mov
jne
call
mov
mov
jmp
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
test
push
jne
push
call
cmp
pop
mov
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
mov
and
cmp
je
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
mov
and
cmp
jne
dec
mov
js
mov
mov
mov
movzx
inc
mov
jmp
movsx
push
push
call
pop
pop
cmp
jne
or
jmp
dec
js
mov
mov
mov
movzx
inc
mov
jmp
movsx
push
push
call
pop
pop
cmp
je
mov
jmp
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
test
je
push
lea
push
push
lea
push
call
add
test
jne
xor
cmp
jle
dec
js
mov
mov
mov
mov
movzx
inc
mov
jmp
movsx
push
push
call
pop
pop
cmp
je
inc
cmp
jl
mov
jmp
add
js
mov
mov
mov
add
jmp
movzx
push
push
call
pop
pop
mov
pop
pop
xor
pop
call
leave
ret
sub
push
push
push
mov
xor
push
mov
mov
mov
mov
jmp
inc
inc
cmp
je
movzx
cmp
je
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
jmp
xor
or
jmp
mov
or
xor
inc
inc
inc
movzx
cmp
je
mov
cmp
je
movzx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
mov
or
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
and
and
or
or
jmp
cmp
jne
mov
or
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
mov
and
jmp
cmp
jne
mov
or
jmp
test
jne
or
jmp
mov
test
je
xor
jmp
or
inc
inc
movzx
cmp
jne
cmp
je
jmp
inc
inc
cmp
je
push
push
push
call
add
test
jne
add
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
inc
inc
cmp
je
cmp
jne
push
push
lea
push
push
push
call
add
test
jne
mov
inc
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
push
push
call
xor
xor
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
lea
cmp
je
mov
mov
test
jne
test
js
lea
cmp
ja
lea
push
call
pop
test
je
mov
push
push
call
pop
pop
mov
mov
test
je
push
push
call
pop
pop
inc
jmp
mov
jmp
shl
push
call
pop
mov
mov
mov
add
cmp
je
push
mov
add
push
call
pop
pop
test
mov
jne
push
call
pop
mov
mov
jmp
mov
add
push
call
mov
mov
mov
cmp
je
and
mov
mov
mov
mov
or
mov
call
mov
call
ret
mov
push
call
pop
ret
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
lea
sub
mov
xor
mov
mov
push
xor
cmp
mov
mov
mov
jne
xor
jmp
cmp
jne
call
mov
call
push
push
push
push
push
mov
call
add
or
jmp
mov
push
mov
and
imul
mov
sar
push
lea
mov
add
mov
add
sar
cmp
mov
mov
je
cmp
jne
mov
not
test
jne
call
xor
mov
call
push
push
push
push
push
mov
call
add
jmp
test
je
push
push
push
push
call
add
push
call
test
pop
je
mov
test
je
call
mov
xor
cmp
lea
sete
push
mov
push
mov
call
test
je
test
je
cmp
je
call
and
cmp
mov
mov
mov
jbe
and
jmp
mov
mov
test
jne
mov
xor
cmp
sete
movsx
push
mov
call
test
pop
jne
push
lea
push
push
call
add
cmp
je
jmp
mov
sub
add
cmp
jbe
push
lea
push
push
call
add
cmp
je
inc
inc
xor
push
push
push
lea
push
push
lea
push
push
push
inc
inc
mov
call
mov
test
je
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
sete
inc
inc
add
mov
mov
mov
cmp
je
cmp
jne
push
call
cmp
pop
jne
inc
cmp
je
push
pop
push
mov
call
cmp
pop
jne
inc
inc
mov
cmp
jb
jmp
mov
add
test
je
mov
xor
cmp
mov
jne
cmp
mov
jbe
mov
and
sub
lea
cmp
jae
mov
inc
mov
inc
cmp
jne
inc
mov
inc
inc
mov
inc
inc
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
cmp
jne
cmp
mov
jbe
mov
xor
sub
lea
cmp
jae
mov
add
movzx
inc
inc
cmp
jne
add
mov
inc
inc
inc
inc
mov
mov
inc
inc
inc
inc
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
cmp
mov
jbe
mov
and
sub
push
lea
pop
cmp
jae
mov
movzx
add
add
cmp
jne
mov
add
add
add
mov
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
cmp
je
push
lea
push
mov
sub
push
lea
push
mov
mov
push
call
test
je
add
cmp
jg
jmp
call
mov
cmp
jg
mov
sub
cmp
mov
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
and
mov
jmp
call
mov
mov
test
jne
mov
xor
cmp
je
push
pop
cmp
jne
call
mov
jmp
push
call
pop
jmp
mov
test
je
mov
cmp
jne
xor
jmp
call
mov
call
mov
or
jmp
sub
pop
pop
mov
xor
pop
call
add
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
mov
cmp
jne
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
push
call
pop
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
jmp
mov
cmp
je
call
mov
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
push
xor
mov
cmp
jne
lea
mov
push
push
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
and
xor
jmp
push
mov
push
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
mov
pop
mov
test
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
push
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
mov
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
mov
mov
jmp
mov
jmp
push
call
pop
mov
call
mov
call
ret
push
call
pop
ret
push
mov
mov
push
lea
cmp
jne
push
call
test
pop
jne
push
call
pop
push
call
pop
pop
ret
push
mov
sub
cmp
jne
and
jmp
cmp
jae
movzx
mov
mov
and
movzx
mov
jmp
push
lea
call
mov
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
and
cmp
je
mov
and
movzx
movzx
and
leave
ret
push
mov
push
cmp
jne
xor
leave
ret
cmp
jae
movzx
mov
movzx
movzx
and
leave
ret
cmp
jne
push
lea
push
push
push
lea
push
push
push
call
add
push
push
push
call
add
leave
ret
push
mov
mov
sub
cmp
je
push
push
lea
call
mov
mov
xor
cmp
jne
mov
lea
cmp
ja
add
movzx
jmp
mov
cmp
jae
lea
push
push
push
call
add
test
movzx
je
mov
mov
movzx
jmp
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
test
movzx
je
movzx
cmp
je
mov
and
pop
leave
ret
push
mov
sub
push
xor
cmp
jne
xor
jmp
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
push
mov
cmp
jbe
call
push
push
push
push
push
mov
call
add
jmp
push
lea
call
mov
mov
cmp
jne
mov
movzx
cmp
jb
cmp
ja
add
movzx
movzx
cmp
jb
cmp
ja
add
add
inc
inc
dec
movzx
je
cmp
je
cmp
je
movzx
movzx
sub
jmp
push
lea
push
push
push
push
push
push
push
call
add
cmp
jne
call
mov
cmp
je
mov
and
mov
jmp
add
cmp
je
mov
and
pop
pop
pop
leave
ret
push
mov
push
push
xor
cmp
jne
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
je
cmp
ja
movzx
cmp
jb
cmp
ja
add
movzx
movzx
cmp
jb
cmp
ja
add
inc
inc
inc
inc
dec
movzx
je
cmp
je
cmp
je
movzx
movzx
sub
jmp
push
push
push
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
push
mov
xor
mov
mov
cmp
push
je
mov
push
push
push
push
push
push
call
cmp
mov
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
push
push
push
call
test
je
lea
push
push
call
test
pop
pop
jl
add
mov
cmp
jne
xor
pop
pop
pop
leave
ret
or
jmp
cmp
je
push
call
pop
jmp
push
push
xor
lea
push
call
add
cmp
pop
mov
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
xor
ret
mov
add
cmp
jne
xor
cmp
sete
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
add
movzx
push
push
movzx
xor
test
push
lea
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
add
add
cmp
jb
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
ret
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
ret
push
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
push
call
mov
pop
xor
cmp
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
inc
jmp
call
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
cmp
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
mov
ret
mov
mov
ret
push
call
xor
inc
ret
push
push
call
xor
mov
push
call
pop
mov
cmp
jne
lea
push
call
pop
cmp
je
push
push
push
push
push
call
add
cmp
je
push
call
cmp
je
push
push
call
mov
cmp
jne
mov
push
call
pop
mov
mov
push
push
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmp
jne
push
call
and
mov
mov
call
ret
mov
mov
ret
push
call
test
pop
je
push
call
test
pop
je
xor
inc
ret
xor
ret
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cdq
mov
mov
xor
sub
and
xor
sub
cdq
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
push
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
jmp
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
push
push
push
call
pop
push
call
add
cmp
mov
je
cmp
je
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
mov
and
cmp
jne
or
cmp
jne
mov
test
je
test
jne
mov
mov
dec
movzx
inc
mov
jmp
neg
sbb
and
add
or
mov
or
pop
pop
ret
push
mov
sub
mov
push
mov
push
pop
cmp
mov
mov
jne
call
and
call
mov
or
jmp
push
xor
cmp
jl
cmp
jb
call
mov
call
push
push
push
push
push
mov
call
add
or
jmp
mov
and
imul
sar
push
lea
mov
add
mov
test
jne
call
mov
call
mov
jmp
cmp
ja
cmp
mov
je
test
jne
cmp
je
mov
add
sar
mov
movsx
dec
push
pop
je
dec
jne
mov
not
test
je
and
mov
mov
mov
jmp
mov
not
test
jne
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
shr
cmp
mov
jb
mov
push
call
cmp
pop
mov
jne
call
mov
call
mov
or
jmp
push
push
push
push
call
mov
mov
mov
add
mov
mov
add
test
je
mov
cmp
je
cmp
je
mov
mov
inc
dec
cmp
mov
mov
je
mov
mov
cmp
je
cmp
je
mov
mov
inc
dec
cmp
mov
mov
jne
mov
mov
cmp
je
cmp
je
mov
mov
inc
dec
mov
mov
push
lea
push
push
push
mov
push
call
test
je
mov
cmp
jl
cmp
ja
mov
add
lea
test
je
cmp
je
cmp
je
mov
cmp
jne
or
jmp
and
mov
mov
add
cmp
mov
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
inc
mov
jmp
mov
dec
cmp
jae
lea
cmp
jne
inc
inc
mov
mov
jmp
mov
jmp
inc
push
lea
push
push
lea
push
mov
push
call
test
jne
call
test
jne
cmp
je
mov
test
je
cmp
je
mov
mov
mov
mov
jmp
cmp
jne
cmp
je
push
push
push
push
call
add
cmp
je
mov
inc
mov
cmp
jb
jmp
mov
lea
test
jne
or
jmp
mov
mov
inc
mov
sub
cmp
mov
jne
test
je
dec
mov
test
js
inc
jmp
xor
inc
movzx
jmp
cmp
jg
cmp
jb
dec
movzx
inc
cmp
je
mov
movzx
movsx
test
jne
call
mov
jmp
inc
cmp
jne
add
jmp
mov
add
test
je
inc
cmp
mov
jl
mov
mov
mov
inc
cmp
jne
mov
mov
mov
inc
sub
jmp
neg
cdq
push
push
push
push
call
add
mov
sub
shr
push
push
push
push
push
push
call
test
mov
jne
call
push
call
pop
or
mov
cmp
je
push
call
pop
mov
cmp
jne
mov
jmp
mov
mov
xor
cmp
setne
add
mov
mov
jmp
cmp
je
mov
cmp
jne
or
jmp
and
mov
mov
add
cmp
mov
mov
jae
mov
movzx
cmp
je
cmp
je
mov
inc
inc
inc
inc
mov
jmp
mov
add
cmp
jae
lea
cmp
jne
add
mov
mov
jmp
mov
jmp
add
push
lea
push
push
lea
push
mov
push
call
test
jne
call
test
jne
cmp
je
mov
test
je
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
cmp
je
push
push
push
push
call
add
cmp
je
mov
inc
inc
mov
cmp
jb
jmp
mov
lea
test
jne
or
jmp
mov
mov
inc
inc
sub
mov
jmp
call
push
pop
cmp
jne
call
mov
call
mov
jmp
cmp
jne
mov
jmp
xor
pop
pop
pop
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
mov
cmp
sbb
inc
jne
call
mov
call
mov
jmp
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
mov
sub
mov
push
xor
push
mov
mov
mov
mov
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
jmp
or
mov
jmp
mov
or
xor
inc
inc
mov
cmp
push
je
lea
mov
cmp
je
movsx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
or
mov
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
mov
and
or
mov
mov
and
or
mov
jmp
cmp
jne
or
mov
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
and
mov
jmp
cmp
jne
or
mov
jmp
test
jne
or
jmp
test
je
xor
jmp
or
inc
mov
cmp
jne
cmp
je
jmp
inc
cmp
je
push
push
push
call
add
test
jne
add
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
inc
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
jmp
push
push
lea
push
push
push
call
add
test
je
xor
jmp
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
test
push
push
mov
mov
je
cmp
jne
mov
add
jmp
mov
dec
mov
call
inc
cmp
jne
call
cmp
jne
mov
mov
call
cmp
jg
pop
pop
ret
push
lea
sub
mov
xor
mov
mov
push
mov
push
xor
push
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
call
push
push
push
push
mov
push
call
add
cmp
je
mov
and
or
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
cmp
je
mov
xor
test
mov
mov
mov
mov
je
inc
cmp
mov
jl
mov
sub
cmp
ja
movsx
movzx
and
xor
jmp
xor
xor
movsx
push
sar
pop
cmp
mov
ja
jmp
or
mov
mov
mov
mov
mov
mov
jmp
movsx
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
cmp
jne
add
mov
mov
cmp
mov
jge
or
neg
jmp
mov
imul
movsx
lea
mov
jmp
mov
jmp
cmp
jne
add
mov
mov
cmp
mov
jge
or
jmp
mov
imul
movsx
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
or
jmp
cmp
jne
inc
or
mov
jmp
or
jmp
or
jmp
mov
cmp
jne
cmp
jne
inc
inc
or
mov
jmp
cmp
jne
cmp
jne
inc
inc
and
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
lea
push
movzx
push
mov
call
pop
test
mov
pop
je
mov
lea
call
mov
inc
test
mov
je
mov
lea
call
jmp
movsx
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
add
mov
mov
or
cmp
lea
mov
mov
mov
jge
mov
jmp
test
jne
or
jmp
test
jne
or
mov
cmp
jne
mov
add
test
mov
mov
mov
je
cmp
jne
mov
mov
mov
mov
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
add
test
mov
je
movzx
push
push
lea
push
lea
push
call
add
test
je
mov
jmp
mov
mov
mov
lea
mov
jmp
mov
add
cmp
mov
je
mov
cmp
je
test
movsx
mov
je
cdq
sub
sar
mov
jmp
mov
jmp
mov
mov
push
call
pop
jmp
cmp
jg
je
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
test
mov
je
or
jmp
mov
add
mov
call
test
je
test
je
mov
mov
jmp
mov
mov
mov
jmp
or
mov
mov
test
jns
mov
mov
add
jmp
jne
cmp
jne
mov
jmp
cmp
jle
mov
cmp
jle
mov
add
push
call
test
mov
pop
mov
je
mov
mov
mov
jmp
mov
xor
mov
add
mov
mov
mov
lea
push
push
movsx
push
mov
push
push
lea
push
push
push
call
pop
call
mov
add
and
je
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
or
inc
mov
push
jmp
mov
mov
jmp
sub
je
dec
dec
je
sub
jne
mov
test
mov
je
mov
add
mov
mov
mov
jmp
test
jne
add
test
je
test
mov
je
movsx
jmp
movzx
cdq
jmp
test
mov
je
cdq
jmp
xor
mov
test
je
cmp
jg
jl
cmp
jae
neg
adc
neg
or
test
mov
mov
jne
xor
cmp
jge
mov
jmp
and
mov
cmp
jle
mov
mov
or
jne
and
lea
mov
dec
test
jg
mov
or
je
mov
cdq
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
test
mov
mov
je
test
je
mov
cmp
je
dec
mov
mov
inc
jmp
dec
cmp
je
inc
inc
cmp
jne
sub
sar
jmp
cmp
jne
mov
mov
mov
jmp
dec
cmp
je
inc
cmp
jne
sub
mov
cmp
jne
mov
test
je
test
je
mov
jmp
test
je
mov
jmp
test
je
mov
mov
mov
sub
sub
test
jne
push
lea
push
push
call
add
push
mov
lea
lea
call
test
pop
je
test
jne
push
push
push
lea
call
add
cmp
mov
je
test
jle
mov
mov
movzx
dec
push
push
lea
push
lea
inc
push
inc
call
add
test
jne
cmp
je
push
lea
lea
call
cmp
pop
jne
jmp
or
jmp
mov
push
lea
call
pop
cmp
jl
test
je
push
push
push
lea
call
add
cmp
je
push
call
and
pop
mov
mov
test
mov
je
mov
mov
mov
jmp
call
mov
xor
push
push
push
push
push
jmp
cmp
je
mov
and
mov
mov
pop
pop
xor
pop
call
add
leave
ret
(bad)
(bad)
inc
add
inc
add
aad
add
(bad)
inc
add
(bad)
inc
add
inc
add
inc
add
inc
or
je
cmp
je
dec
js
mov
mov
inc
movzx
jmp
movsx
push
push
call
pop
pop
cmp
jne
or
ret
inc
ret
push
mov
push
mov
jmp
mov
mov
dec
call
cmp
je
cmp
jg
pop
pop
ret
push
lea
sub
mov
xor
mov
mov
push
mov
push
xor
push
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
call
push
push
push
push
mov
push
call
add
cmp
je
mov
and
or
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
cmp
je
mov
test
mov
mov
mov
mov
mov
je
inc
xor
cmp
mov
jl
mov
sub
cmp
ja
movsx
movzx
and
mov
imul
movzx
push
shr
pop
cmp
mov
je
push
pop
cmp
ja
jmp
xor
or
mov
mov
mov
mov
mov
mov
jmp
movsx
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
cmp
jne
add
mov
mov
test
mov
jge
or
neg
jmp
mov
imul
movsx
lea
mov
jmp
and
jmp
cmp
jne
add
mov
mov
test
mov
jge
or
jmp
mov
imul
movsx
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
or
jmp
cmp
jne
inc
or
mov
jmp
or
jmp
or
jmp
mov
cmp
jne
cmp
jne
inc
inc
or
mov
jmp
cmp
jne
cmp
jne
inc
inc
and
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
and
and
lea
push
movzx
push
call
pop
test
mov
pop
je
mov
lea
call
mov
inc
test
mov
je
mov
lea
call
jmp
movsx
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
add
mov
mov
or
cmp
lea
mov
mov
mov
jge
mov
jmp
test
jne
or
jmp
test
jne
or
mov
cmp
jne
mov
add
test
mov
mov
mov
je
test
jne
mov
mov
mov
mov
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
add
test
mov
je
movzx
push
push
lea
push
lea
push
call
add
test
je
mov
jmp
mov
mov
mov
lea
mov
jmp
mov
add
test
mov
je
mov
test
je
test
movsx
mov
je
cdq
sub
sar
mov
jmp
and
jmp
mov
mov
push
call
pop
jmp
cmp
jg
je
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
test
mov
je
or
jmp
mov
add
mov
call
test
je
test
je
mov
mov
jmp
mov
mov
mov
jmp
or
mov
mov
test
jns
add
mov
mov
jmp
jne
cmp
jne
mov
jmp
cmp
jle
mov
cmp
jle
mov
add
push
call
test
mov
pop
mov
push
je
mov
mov
mov
jmp
mov
pop
add
mov
mov
mov
mov
lea
push
push
movsx
push
mov
push
push
lea
push
push
push
call
pop
call
mov
add
and
je
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
test
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
or
inc
mov
push
jmp
mov
mov
jmp
sub
je
dec
dec
je
sub
jne
mov
test
mov
je
mov
add
mov
mov
mov
jmp
test
jne
add
test
je
test
mov
je
movsx
jmp
movzx
cdq
jmp
test
mov
je
cdq
jmp
xor
mov
test
je
test
jg
jl
test
jae
neg
adc
neg
or
test
mov
mov
jne
xor
cmp
jge
mov
jmp
and
mov
cmp
jle
mov
mov
or
jne
and
lea
mov
dec
test
jg
mov
or
je
mov
cdq
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
test
mov
mov
je
test
je
mov
cmp
je
dec
mov
mov
inc
jmp
dec
cmp
je
inc
inc
test
jne
sub
sar
jmp
test
jne
mov
mov
mov
jmp
dec
cmp
je
inc
test
jne
sub
mov
cmp
jne
mov
test
je
test
je
mov
jmp
test
je
mov
jmp
test
je
mov
mov
mov
sub
sub
test
jne
push
lea
push
push
call
add
push
mov
lea
lea
call
test
pop
je
test
jne
push
push
push
lea
call
add
cmp
mov
je
test
jle
mov
mov
movzx
dec
push
push
lea
push
lea
inc
push
inc
call
add
test
jne
cmp
je
push
lea
lea
call
cmp
pop
jne
jmp
or
jmp
mov
push
lea
call
pop
cmp
jl
test
je
push
push
push
lea
call
add
cmp
je
push
call
and
pop
mov
mov
test
mov
je
mov
mov
jmp
call
mov
xor
push
push
push
push
push
jmp
xor
cmp
je
cmp
jne
cmp
je
mov
and
mov
mov
pop
pop
xor
pop
call
add
leave
ret
nop
clc
loopne
add
inc
add
inc
add
fild
loopne
add
loopne
add
inc
add
loope
add
add
ret
push
mov
sub
push
push
lea
call
mov
movsx
push
call
cmp
jmp
inc
movzx
push
call
test
pop
jne
movsx
push
call
cmp
pop
jne
inc
inc
mov
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
cmp
pop
je
mov
and
leave
ret
push
mov
sub
push
push
lea
call
mov
mov
test
mov
je
mov
mov
mov
cmp
je
inc
mov
test
jne
mov
inc
test
je
jmp
cmp
je
cmp
je
inc
mov
test
jne
mov
dec
cmp
je
mov
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
test
mov
jne
cmp
pop
je
mov
and
leave
ret
fldz
mov
fcomp
fnstsw
test
jp
xor
inc
ret
xor
ret
push
mov
push
push
cmp
push
push
je
lea
push
call
mov
mov
mov
mov
mov
jmp
lea
push
call
mov
mov
mov
add
leave
ret
push
push
push
push
call
add
ret
test
push
mov
je
push
call
inc
push
push
add
push
call
add
pop
ret
push
push
call
pop
pop
ret
push
push
call
pop
pop
ret
push
mov
sub
push
push
push
push
lea
mov
call
xor
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
cmp
jle
mov
jmp
xor
add
cmp
ja
call
push
jmp
cmp
je
mov
xor
cmp
setg
xor
cmp
sete
mov
add
mov
call
mov
cmp
mov
jne
mov
lea
cmp
jle
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
sete
add
add
cmp
jne
or
jmp
sub
add
push
push
push
call
add
xor
test
je
push
push
push
push
push
call
add
cmp
lea
je
mov
mov
inc
cmp
je
mov
dec
jns
neg
mov
inc
cmp
jl
cdq
push
pop
idiv
add
mov
inc
cmp
jl
cdq
push
pop
idiv
add
mov
add
test
je
cmp
jne
push
lea
push
push
call
add
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
cmp
mov
jne
or
jmp
xor
cmp
sete
sub
xor
cmp
setg
sub
lea
push
lea
push
push
xor
cmp
sete
xor
cmp
setg
add
add
push
call
add
cmp
je
mov
jmp
push
lea
push
push
push
mov
push
push
call
add
mov
pop
pop
xor
pop
call
leave
ret
push
mov
push
push
push
push
push
push
call
add
pop
ret
push
mov
sub
push
push
push
lea
mov
xor
mov
call
cmp
jge
mov
mov
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
mov
add
cmp
mov
ja
call
push
jmp
mov
mov
mov
mov
mov
shr
mov
push
and
xor
cmp
jne
test
jne
mov
cmp
jne
or
jmp
add
push
push
lea
push
push
push
call
add
test
je
cmp
mov
je
mov
and
jmp
cmp
jne
mov
inc
mov
inc
cmp
push
sete
dec
and
add
mov
inc
push
call
test
pop
pop
je
cmp
sete
dec
and
add
mov
mov
jmp
and
xor
or
je
mov
inc
mov
mov
inc
test
sete
dec
and
add
mov
mov
inc
neg
sbb
and
and
xor
add
xor
or
jne
mov
mov
mov
and
inc
or
jne
mov
jmp
mov
jmp
mov
inc
mov
inc
cmp
mov
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
and
mov
ja
cmp
jbe
mov
mov
cmp
jle
mov
and
mov
movsx
and
and
call
add
movzx
cmp
jbe
add
mov
sub
mov
mov
shrd
shr
inc
dec
cmp
mov
mov
jge
cmp
jl
mov
and
mov
movsx
and
and
call
cmp
jbe
lea
mov
cmp
je
cmp
jne
mov
dec
jmp
cmp
je
mov
cmp
jne
add
mov
jmp
inc
mov
jmp
inc
cmp
jle
push
push
push
call
add
add
mov
cmp
jne
mov
cmp
mov
sete
dec
and
add
mov
mov
mov
inc
call
xor
and
and
sub
push
pop
sbb
js
jg
cmp
jb
mov
inc
jmp
mov
inc
neg
adc
neg
cmp
mov
mov
jl
mov
jg
cmp
jb
push
push
push
push
call
add
mov
inc
cmp
mov
mov
mov
jne
test
jl
jg
cmp
jb
push
push
push
push
call
add
mov
mov
inc
mov
mov
cmp
jne
test
jl
jg
cmp
jb
push
push
push
push
call
add
mov
mov
inc
mov
mov
add
mov
mov
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
push
mov
mov
mov
lea
dec
call
test
jne
call
push
pop
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
cmp
je
cmp
jne
xor
cmp
sete
add
add
mov
mov
cmp
mov
jne
mov
lea
mov
xor
inc
test
jg
mov
call
mov
inc
jmp
add
cmp
jle
mov
call
mov
mov
mov
mov
mov
mov
inc
test
jge
neg
cmp
jne
cmp
jl
mov
mov
mov
call
push
push
push
call
add
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
cmp
jne
or
jmp
xor
cmp
sete
sub
mov
lea
push
mov
add
push
push
xor
cmp
sete
add
push
call
add
cmp
je
mov
jmp
push
lea
push
push
push
mov
call
add
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
mov
push
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
mov
dec
mov
xor
cmp
sete
cmp
lea
jne
or
jmp
sub
lea
push
push
push
push
call
add
cmp
je
mov
jmp
mov
dec
cmp
setl
cmp
jl
cmp
jge
cmp
je
mov
inc
test
jne
mov
push
lea
push
push
mov
push
call
add
jmp
push
lea
push
push
push
mov
push
push
call
add
mov
pop
pop
xor
pop
call
leave
ret
push
mov
mov
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
pop
ret
cmp
je
cmp
je
push
push
push
push
push
push
call
jmp
push
push
push
push
push
push
call
jmp
push
push
push
push
push
push
call
add
pop
ret
push
mov
push
push
push
push
push
push
push
call
add
pop
ret
push
push
push
xor
push
call
add
test
je
push
push
push
push
push
call
add
pop
ret
push
mov
sub
fld
fstp
fld
fstp
fld
fdiv
fmul
fsubr
fstp
fld1
fcomp
fnstsw
test
jp
xor
inc
leave
ret
xor
leave
ret
push
call
test
je
push
push
call
test
je
push
call
ret
jmp
push
mov
push
call
push
call
test
pop
pop
je
call
add
cmp
jne
xor
jmp
call
add
cmp
jne
xor
inc
inc
test
jne
push
push
lea
cmp
mov
jne
push
call
test
pop
mov
jne
lea
push
mov
mov
pop
mov
mov
jmp
mov
mov
mov
mov
mov
or
pop
xor
pop
inc
pop
ret
xor
pop
ret
cmp
je
push
mov
test
je
push
call
and
and
and
and
pop
pop
ret
mov
cmp
jne
mov
cmp
push
push
jne
call
test
pop
pop
mov
jne
xor
ret
mov
mov
mov
add
push
push
push
call
add
jmp
push
call
add
test
je
mov
shl
xor
inc
ret
push
push
inc
call
movzx
cmp
pop
je
push
push
call
test
pop
pop
jne
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
mov
push
xor
push
mov
cmp
mov
lea
mov
mov
mov
mov
mov
mov
mov
jne
call
push
push
push
push
push
mov
call
add
or
jmp
cmp
je
push
lea
call
movzx
cmp
mov
mov
mov
je
push
push
push
xor
call
test
pop
pop
je
push
dec
push
lea
call
pop
push
call
pop
pop
inc
inc
movzx
push
push
call
test
pop
pop
jne
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
movzx
test
jne
movzx
push
call
test
pop
je
mov
inc
imul
lea
mov
jmp
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
movzx
cmp
jne
lea
cmp
jne
inc
mov
mov
mov
jmp
cmp
jne
lea
cmp
jne
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
inc
jmp
cmp
je
cmp
je
cmp
je
inc
jmp
lea
cmp
je
inc
inc
jmp
dec
dec
cmp
je
cmp
mov
jne
mov
mov
mov
add
mov
jmp
xor
cmp
mov
mov
jne
movzx
cmp
je
cmp
mov
jne
mov
movzx
or
cmp
mov
je
cmp
je
cmp
je
push
lea
call
mov
jmp
push
inc
call
movzx
cmp
mov
pop
je
mov
mov
mov
test
je
cmp
je
cmp
jg
je
cmp
je
push
pop
cmp
je
jle
cmp
jle
cmp
je
cmp
jne
cmp
mov
je
jmp
mov
mov
cmp
jne
mov
jmp
xor
cmp
jne
mov
mov
inc
jmp
cmp
jne
dec
push
inc
call
movzx
pop
mov
cmp
jne
or
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
movsx
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
lea
push
mov
mov
push
mov
push
lea
push
call
movzx
movsx
add
cmp
jne
mov
dec
test
je
push
inc
call
mov
movzx
mov
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
cmp
je
cmp
je
cmp
jne
mov
dec
test
je
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
cmp
pop
mov
jne
mov
mov
lea
push
lea
push
inc
push
call
add
test
je
jmp
cmp
jne
mov
dec
test
jne
and
jmp
push
inc
call
movzx
pop
mov
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
push
dec
push
call
cmp
pop
pop
je
cmp
jne
mov
mov
inc
and
lea
push
call
mov
test
pop
je
lea
push
push
push
push
xor
push
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
lea
push
movsx
push
push
dec
push
push
call
pop
call
push
call
add
jmp
test
jne
inc
mov
cmp
jle
mov
push
dec
push
mov
call
pop
pop
cmp
je
mov
dec
test
je
push
inc
call
movzx
cmp
pop
mov
je
cmp
je
cmp
jne
cmp
jb
cmp
jbe
cmp
jne
cmp
jne
movzx
mov
xor
and
inc
shl
mov
shr
movsx
movsx
xor
test
je
cmp
jne
cmp
je
mov
inc
inc
jmp
mov
sub
je
sub
je
dec
dec
je
sub
je
sub
je
mov
cmp
jne
dec
cmp
jne
mov
mov
jmp
cmp
jle
mov
inc
inc
cmp
jne
add
mov
cmp
jne
push
call
test
pop
mov
je
mov
mov
push
push
push
call
add
cmp
jne
push
inc
pop
inc
mov
jmp
mov
jmp
movzx
inc
inc
cmp
jne
test
je
movzx
cmp
je
movzx
inc
inc
cmp
jae
movzx
jmp
movzx
movzx
cmp
ja
sub
inc
movzx
movzx
mov
mov
shr
add
mov
and
mov
shl
or
inc
dec
jne
mov
xor
jmp
movzx
movzx
mov
and
mov
shr
shl
add
or
movzx
cmp
jne
cmp
je
mov
mov
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
movzx
pop
mov
cmp
jne
push
inc
call
pop
movzx
push
pop
cmp
mov
je
cmp
je
cmp
mov
je
cmp
je
dec
jne
inc
mov
jmp
push
dec
push
call
pop
pop
push
pop
jmp
push
inc
call
cmp
movzx
pop
mov
je
sub
cmp
jge
inc
mov
jmp
push
push
lea
push
xor
push
mov
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
jmp
add
mov
jmp
add
jmp
push
dec
push
call
pop
pop
cmp
je
cmp
jne
inc
cmp
je
cmp
mov
je
and
jmp
mov
jmp
mov
mov
cmp
jne
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
pop
movzx
mov
cmp
je
cmp
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
mov
mov
shld
shl
mov
mov
jmp
push
push
push
push
call
mov
mov
jmp
test
jne
movzx
push
call
test
pop
je
mov
mov
shld
shl
mov
mov
mov
call
movzx
mov
inc
movzx
sub
cdq
add
adc
cmp
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
mov
je
mov
mov
neg
adc
neg
mov
mov
jmp
cmp
mov
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
shl
jmp
imul
jmp
test
jne
movzx
push
call
test
pop
je
mov
shl
call
movzx
mov
inc
cmp
movzx
lea
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
je
neg
cmp
jne
and
cmp
je
cmp
jne
inc
mov
cmp
je
mov
mov
mov
mov
jmp
cmp
je
mov
jmp
mov
mov
inc
inc
inc
mov
jmp
push
inc
call
pop
mov
movzx
inc
inc
cmp
mov
mov
jne
cmp
jne
cmp
jne
mov
cmp
jne
mov
movzx
test
jne
jmp
push
push
jmp
push
push
call
pop
pop
cmp
pop
jne
push
call
pop
cmp
jne
push
call
pop
cmp
jne
mov
test
jne
cmp
jne
or
cmp
je
mov
and
jmp
cmp
je
mov
and
mov
mov
pop
xor
pop
call
add
leave
ret
test
push
jne
movzx
mov
and
push
call
test
pop
je
mov
pop
ret
movzx
and
sub
pop
ret
cmp
je
jmp
ret
push
lea
sub
mov
xor
mov
mov
mov
push
xor
push
mov
cmp
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
jne
call
push
push
push
push
push
mov
call
add
or
jmp
cmp
je
push
lea
call
movzx
cmp
mov
mov
mov
je
push
push
push
call
test
pop
pop
je
push
dec
push
lea
call
pop
push
call
mov
pop
pop
inc
inc
movzx
push
push
call
test
pop
pop
jne
mov
jmp
mov
cmp
jne
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
movzx
test
jne
movzx
push
call
test
pop
je
mov
inc
imul
lea
mov
jmp
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
movzx
cmp
jne
lea
cmp
jne
inc
mov
mov
mov
jmp
cmp
jne
lea
cmp
jne
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
inc
jmp
cmp
je
cmp
je
cmp
je
inc
jmp
lea
cmp
je
inc
inc
jmp
dec
dec
cmp
je
cmp
mov
jne
mov
mov
mov
add
mov
jmp
xor
cmp
mov
mov
jne
movzx
cmp
je
cmp
mov
jne
mov
movzx
or
cmp
mov
je
cmp
je
cmp
je
push
lea
call
jmp
push
inc
call
movzx
cmp
mov
pop
je
mov
mov
mov
test
je
cmp
je
cmp
jne
cmp
je
cmp
je
cmp
jne
mov
mov
add
mov
add
mov
mov
cmp
mov
mov
jb
cmp
jg
je
cmp
je
push
pop
cmp
je
jle
cmp
jle
cmp
je
cmp
jne
cmp
mov
mov
je
jmp
mov
mov
mov
cmp
jne
mov
jmp
xor
cmp
jne
mov
mov
inc
jmp
cmp
jne
dec
push
inc
call
movzx
pop
mov
cmp
jne
or
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
movsx
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
lea
push
mov
mov
push
mov
push
lea
push
call
movzx
movsx
add
cmp
jne
mov
dec
test
je
push
inc
call
mov
movzx
mov
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
cmp
je
cmp
je
cmp
jne
mov
dec
test
je
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
cmp
pop
mov
jne
mov
mov
lea
push
lea
push
inc
push
call
add
test
je
jmp
cmp
jne
mov
dec
test
jne
and
jmp
push
inc
call
movzx
pop
mov
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
push
dec
push
call
cmp
pop
pop
je
cmp
jne
mov
mov
inc
and
lea
push
call
mov
test
pop
je
lea
push
push
push
push
xor
push
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
lea
push
movsx
push
push
dec
push
push
call
pop
call
push
call
add
jmp
test
jne
inc
mov
cmp
jle
mov
push
dec
push
mov
call
cmp
pop
pop
je
dec
cmp
je
mov
dec
test
je
push
inc
call
movzx
cmp
pop
mov
je
cmp
je
cmp
jne
cmp
jb
cmp
jbe
cmp
jne
cmp
jne
movzx
mov
xor
and
inc
shl
mov
shr
movsx
movsx
xor
test
mov
je
cmp
jne
cmp
je
cmp
je
mov
inc
inc
mov
jmp
mov
sub
je
sub
je
dec
dec
je
sub
je
sub
je
mov
cmp
jne
dec
cmp
jne
mov
mov
jmp
cmp
jle
mov
inc
inc
cmp
jne
add
mov
mov
test
jne
push
call
test
pop
mov
je
mov
mov
push
push
push
call
add
push
pop
cmp
jne
inc
mov
inc
mov
movzx
cmp
je
movzx
inc
inc
cmp
jne
mov
test
je
movzx
cmp
je
movzx
inc
inc
cmp
jae
movzx
jmp
movzx
movzx
mov
cmp
ja
sub
movzx
inc
movzx
mov
mov
and
mov
mov
shl
shr
add
or
inc
dec
jne
and
jmp
movzx
mov
movzx
mov
and
mov
shr
shl
add
or
movzx
cmp
jne
cmp
je
mov
mov
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
movzx
pop
mov
cmp
jne
push
inc
call
pop
movzx
push
pop
cmp
mov
je
cmp
je
cmp
mov
je
cmp
je
dec
jne
inc
mov
jmp
push
dec
push
call
pop
pop
push
pop
jmp
push
inc
call
cmp
movzx
pop
mov
je
sub
cmp
jge
inc
mov
mov
jmp
and
push
push
lea
push
push
call
add
cmp
je
mov
test
jle
add
sub
mov
jmp
inc
inc
jmp
push
dec
push
call
pop
pop
cmp
je
cmp
jne
inc
cmp
je
cmp
mov
je
and
jmp
mov
jmp
mov
mov
cmp
jne
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
pop
movzx
mov
cmp
je
cmp
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
mov
mov
shld
shl
mov
mov
jmp
push
push
push
push
call
mov
mov
jmp
test
jne
movzx
push
call
test
pop
je
mov
mov
shld
shl
mov
mov
mov
call
mov
movzx
mov
inc
movzx
sub
cdq
add
adc
cmp
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
je
mov
mov
neg
adc
neg
mov
mov
jmp
cmp
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
mov
shl
jmp
mov
imul
jmp
test
jne
movzx
push
call
test
pop
je
shl
mov
call
mov
movzx
mov
mov
inc
cmp
movzx
lea
mov
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
je
neg
cmp
jne
and
cmp
je
cmp
jne
inc
mov
cmp
je
mov
mov
mov
mov
jmp
cmp
je
mov
mov
jmp
mov
mov
mov
inc
inc
inc
mov
jmp
push
inc
call
pop
mov
movzx
inc
inc
cmp
mov
mov
jne
cmp
jne
cmp
jne
mov
cmp
jne
mov
movzx
test
jne
jmp
cmp
jle
and
jmp
mov
call
mov
jmp
push
push
call
mov
jmp
call
cmp
mov
je
and
jmp
mov
jmp
push
push
call
pop
pop
cmp
pop
jne
push
call
pop
cmp
jne
push
call
pop
cmp
jne
mov
test
jne
cmp
jne
or
cmp
je
mov
and
jmp
cmp
jne
call
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
mov
mov
pop
xor
pop
call
add
leave
ret
push
push
push
call
test
mov
jne
ret
mov
and
and
mov
xor
mov
mov
inc
ret
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
dec
jne
mov
and
jmp
lea
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
push
push
push
call
cmp
jne
xor
jmp
add
mov
mov
imul
add
push
push
push
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
or
or
lea
mov
lea
mov
mov
mov
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
and
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
dec
jne
mov
and
jmp
add
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmp
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
test
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
or
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
jmp
cmp
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmp
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
jne
xor
jmp
push
call
pop
mov
mov
mov
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
and
mov
lea
mov
and
and
or
jne
inc
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
cmp
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmp
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmp
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmp
jne
push
call
pop
push
call
push
call
leave
ret
push
mov
push
push
push
mov
test
push
mov
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
test
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
jne
or
jmp
dec
mov
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
je
mov
mov
jmp
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
test
je
xor
inc
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
je
mov
movzx
push
call
test
pop
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
jne
movsx
push
push
call
pop
or
jmp
push
mov
pop
push
lea
push
lea
push
call
add
cmp
jne
call
mov
jmp
add
js
mov
movzx
add
mov
jmp
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
call
cmp
pop
jne
call
mov
or
pop
ret
push
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
or
jmp
mov
and
imul
sar
mov
lea
and
mov
pop
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
cmp
push
mov
je
push
call
test
pop
jne
call
mov
call
mov
push
push
push
push
push
call
add
jmp
call
mov
cmp
je
mov
cmp
jg
call
mov
jmp
mov
mov
jmp
mov
cmp
je
add
mov
mov
mov
mov
jmp
mov
mov
mov
lea
push
push
push
lea
push
call
cmp
je
cmp
je
cmp
jge
mov
jmp
call
mov
mov
jmp
cmp
jle
mov
push
push
call
mov
cmp
pop
pop
jne
call
mov
call
mov
jmp
lea
push
push
push
lea
push
call
cmp
je
cmp
jl
call
push
call
pop
xor
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
push
call
pop
and
push
push
push
call
add
mov
mov
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
mov
cmp
jb
cmp
jae
movzx
sub
ret
mov
cmp
jae
mov
cmp
jb
cmp
jae
movzx
sub
ret
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
add
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
add
cmp
jb
cmp
jmp
cmp
jb
or
ret
push
mov
sub
mov
xor
mov
push
push
xor
cmp
push
mov
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
mov
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
mov
cmp
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
cmp
mov
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
mov
pop
jmp
cmp
mov
mov
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
cmp
pop
mov
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
add
cmp
mov
je
mov
push
push
push
push
push
push
call
cmp
mov
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
call
add
push
push
push
push
push
push
call
cmp
mov
jne
xor
jmp
push
lea
push
push
push
push
push
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
push
push
push
push
push
push
call
mov
cmp
je
push
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
push
mov
xor
mov
mov
push
push
xor
cmp
push
mov
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
cmp
pop
je
mov
add
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
cmp
pop
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
mov
add
cmp
je
mov
push
push
push
push
push
call
cmp
mov
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
sub
test
movzx
movzx
mov
mov
jne
or
leave
ret
and
push
push
mov
lea
push
push
push
xor
inc
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
push
push
push
or
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
push
lea
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
mov
push
lea
push
push
call
add
or
mov
pop
mov
pop
leave
ret
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
push
push
push
push
mov
cmp
mov
je
xor
push
inc
push
call
mov
test
pop
pop
jne
mov
jmp
mov
call
test
je
push
call
push
call
pop
pop
jmp
mov
jmp
mov
add
mov
cmp
je
add
push
call
mov
xor
pop
pop
pop
pop
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
jne
cmp
jne
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
mov
jne
xor
inc
jmp
mov
push
pop
push
rep
call
xor
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
xor
inc
push
call
push
call
pop
pop
mov
jmp
mov
mov
movzx
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
mov
lea
push
push
call
add
or
je
push
call
pop
or
jmp
mov
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
mov
mov
test
je
mov
mov
test
mov
je
push
call
mov
test
je
push
call
test
jne
push
call
push
call
pop
pop
mov
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
sub
push
push
mov
push
xor
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
jne
xor
inc
jmp
push
call
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
push
call
push
call
pop
jmp
mov
movzx
lea
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
push
lea
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
je
push
call
push
call
push
call
push
call
add
jmp
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
push
pop
mov
mov
rep
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
xor
cmp
mov
je
mov
mov
mov
cmp
je
push
call
mov
cmp
je
push
call
test
jne
push
call
push
call
pop
pop
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
xor
push
mov
cmp
push
mov
mov
mov
mov
mov
mov
mov
je
lea
cmp
jne
push
movzx
push
push
lea
push
push
call
add
test
jne
push
call
push
mov
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
add
cmp
mov
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
mov
xor
mov
mov
inc
cmp
jl
lea
push
push
call
test
je
cmp
ja
movzx
cmp
mov
jle
cmp
je
lea
mov
cmp
je
movzx
movzx
jmp
mov
mov
movzx
inc
cmp
jle
inc
inc
cmp
jne
mov
push
push
push
add
push
push
push
mov
push
push
call
add
test
je
mov
mov
push
push
mov
push
add
push
push
inc
push
push
push
push
call
add
test
je
mov
push
push
add
push
push
mov
push
inc
push
push
push
push
call
add
test
je
cmp
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
jle
cmp
je
lea
mov
mov
cmp
je
movzx
movzx
cmp
jg
lea
jmp
mov
mov
inc
inc
inc
mov
mov
movzx
cmp
jle
mov
inc
inc
cmp
mov
jne
push
lea
push
push
call
push
lea
push
push
call
mov
push
lea
push
push
call
mov
add
cmp
je
push
call
test
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
pop
mov
jmp
push
call
push
call
push
call
push
call
xor
add
inc
jmp
lea
mov
cmp
je
push
call
mov
mov
mov
mov
mov
mov
xor
mov
pop
pop
xor
pop
call
leave
ret
call
mov
mov
cmp
je
mov
test
jne
call
mov
ret
call
mov
cmp
je
mov
test
jne
call
mov
ret
mov
push
xor
cmp
push
push
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
push
mov
push
push
mov
xor
cmp
push
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmp
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
dec
jne
cmp
jne
mov
cmp
jne
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
push
mov
xor
push
xor
inc
cmp
jl
push
push
test
je
mov
add
cdq
sub
mov
mov
sar
lea
push
mov
push
call
test
pop
pop
jne
mov
add
mov
jmp
jge
dec
mov
jmp
lea
cmp
jle
pop
pop
xor
test
sete
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
test
je
cmp
je
push
push
call
test
pop
pop
je
push
push
call
test
pop
pop
jne
push
lea
push
push
jmp
push
lea
push
push
push
call
test
je
lea
push
call
pop
mov
xor
pop
call
leave
ret
xor
mov
cmp
je
inc
inc
cmp
jb
xor
inc
ret
xor
ret
push
xor
jmp
mov
sub
inc
cmp
ja
add
jmp
mov
sub
cmp
ja
add
movsx
shl
lea
mov
test
jne
mov
pop
ret
xor
mov
inc
cmp
jl
cmp
jle
sub
cmp
ja
inc
jmp
ret
push
mov
sub
mov
xor
mov
push
push
mov
call
mov
mov
add
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
push
call
test
pop
pop
jne
push
call
test
pop
je
or
mov
mov
mov
shr
not
and
mov
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
lea
push
mov
and
push
or
push
mov
call
test
jne
xor
jmp
lea
call
cmp
je
cmp
je
mov
push
mov
call
push
mov
call
pop
cmp
pop
je
xor
inc
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
mov
add
call
mov
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
xor
inc
jmp
lea
push
push
call
test
pop
pop
jne
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
push
call
test
pop
pop
jne
or
mov
jmp
test
jne
mov
test
je
push
lea
push
push
call
add
test
jne
push
or
mov
call
cmp
pop
jne
mov
jmp
mov
test
jne
push
call
test
pop
je
or
mov
mov
mov
mov
and
cmp
je
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
push
call
pop
xor
test
pop
jne
or
cmp
mov
je
or
mov
jmp
cmp
je
push
call
cmp
pop
jne
push
jmp
cmp
jne
cmp
je
lea
push
push
call
test
pop
pop
jne
push
push
mov
call
test
pop
pop
je
or
cmp
jne
mov
mov
shr
not
and
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
mov
call
mov
mov
add
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
push
call
test
pop
pop
jne
cmp
jne
push
jmp
cmp
jne
cmp
je
lea
push
push
call
test
pop
pop
jne
push
push
mov
call
test
pop
pop
je
or
mov
mov
mov
shr
not
and
mov
pop
xor
pop
call
leave
ret
push
call
push
sub
neg
sbb
inc
mov
call
sub
neg
sbb
and
inc
cmp
pop
pop
mov
je
push
pop
jmp
mov
call
push
push
mov
call
mov
test
je
test
je
test
jne
and
ret
push
call
sub
neg
sbb
inc
pop
mov
je
push
pop
jmp
mov
call
push
push
mov
call
test
jne
and
ret
push
push
push
push
call
mov
mov
xor
add
cmp
jne
or
jmp
lea
cmp
lea
mov
mov
je
cmp
je
push
push
push
call
add
mov
cmp
mov
je
cmp
je
mov
cmp
je
cmp
je
call
jmp
call
cmp
jne
push
push
push
call
add
test
je
mov
cmp
je
cmp
je
call
jmp
call
jmp
mov
cmp
je
cmp
je
push
call
sub
neg
pop
sbb
push
inc
push
mov
call
test
jne
mov
jmp
mov
call
mov
mov
cmp
je
mov
add
neg
sbb
and
mov
call
mov
test
je
cmp
je
cmp
je
movzx
push
call
test
je
push
push
call
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
test
je
cmp
mov
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
push
push
push
push
call
test
je
push
lea
push
push
push
call
test
je
push
push
add
push
push
call
add
xor
inc
jmp
xor
pop
pop
pop
pop
ret
push
mov
push
and
push
mov
test
jne
xor
jmp
cmp
push
jb
lea
test
jbe
mov
mov
mov
add
add
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
add
cmp
jb
jmp
movzx
movzx
jmp
movzx
movzx
jmp
movzx
movzx
jmp
movzx
movzx
jmp
mov
mov
jmp
mov
test
je
cmp
jne
inc
inc
inc
cmp
jb
xor
pop
pop
leave
ret
movzx
movzx
sub
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
sub
mov
xor
mov
push
lea
push
push
push
mov
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
cmp
mov
mov
mov
je
mov
lea
push
push
call
test
mov
je
cmp
jne
lea
push
push
call
test
je
cmp
jne
mov
cmp
mov
jne
push
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
mov
cmp
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
je
mov
jmp
cmp
mov
jne
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
push
push
push
push
push
call
cmp
jne
push
call
pop
mov
jmp
cmp
je
mov
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
push
push
mov
push
mov
mov
mov
push
push
mov
call
or
cmp
pop
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
call
cmp
mov
jne
call
test
je
push
call
pop
jmp
mov
and
imul
sar
mov
lea
and
mov
mov
pop
pop
leave
ret
push
push
call
or
mov
mov
mov
cmp
jne
call
and
call
mov
mov
mov
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
jne
call
mov
call
mov
push
push
push
push
push
call
add
or
mov
jmp
push
call
pop
mov
mov
test
je
push
push
push
push
call
add
mov
mov
jmp
call
mov
call
mov
or
or
mov
call
mov
mov
call
ret
push
call
pop
ret
inc
push
call
test
pop
mov
mov
je
or
mov
jmp
or
lea
mov
mov
mov
and
mov
ret
mov
cmp
jne
call
mov
xor
ret
push
xor
cmp
jl
cmp
jb
call
push
push
push
push
push
mov
call
add
xor
pop
ret
mov
and
imul
sar
mov
movzx
and
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
xor
pop
pop
leave
ret
push
lea
call
mov
cmp
jne
mov
cmp
je
movzx
mov
cmp
je
mov
and
xor
inc
jmp
lea
push
movzx
push
call
test
pop
pop
je
mov
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
test
mov
jne
mov
cmp
jb
cmp
je
cmp
mov
je
mov
and
jmp
call
mov
cmp
je
mov
and
or
jmp
xor
cmp
setne
push
push
mov
push
push
push
push
call
test
jne
jmp
push
push
push
push
call
add
ret
xor
inc
cmp
jne
xor
ret
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
sub
push
push
push
call
xor
cmp
mov
mov
mov
mov
jne
push
call
mov
cmp
je
mov
push
push
call
cmp
je
push
call
mov
push
mov
call
push
call
mov
push
mov
call
push
call
mov
lea
push
call
test
pop
pop
je
push
push
push
push
push
call
add
cmp
jne
push
push
call
push
call
cmp
pop
mov
je
push
push
call
push
call
pop
mov
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
cmp
pop
pop
mov
je
cmp
je
call
cmp
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
lea
push
call
test
pop
je
push
push
push
push
push
call
add
cmp
jb
or
jmp
or
jmp
mov
cmp
je
push
call
cmp
pop
je
call
cmp
mov
je
mov
cmp
je
push
call
cmp
pop
je
push
call
mov
push
call
cmp
pop
je
push
push
push
push
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
push
push
push
push
push
mov
call
add
or
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
push
push
mov
xor
mov
mov
push
push
mov
push
xor
cmp
jne
push
push
xor
inc
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
push
push
push
push
call
jmp
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
push
push
push
mov
push
call
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
add
jmp
push
call
test
pop
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
call
test
je
xor
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
push
mov
xor
mov
mov
push
mov
push
push
xor
xor
inc
cmp
jne
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
mov
mov
mov
push
push
push
push
call
mov
cmp
mov
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
mov
jmp
push
push
push
push
call
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
push
call
and
movapd
mov
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
and
mov
mov
call
ret
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
test
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
push
push
call
xor
mov
push
call
pop
mov
push
pop
mov
cmp
jge
mov
shl
mov
add
cmp
je
mov
test
je
push
call
pop
cmp
je
inc
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
mov
inc
jmp
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
movzx
lea
inc
cmp
ja
add
movzx
lea
inc
cmp
ja
add
test
je
cmp
je
pop
sub
pop
ret
push
mov
sub
push
push
lea
call
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
push
mov
cmp
jne
call
push
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
call
mov
mov
push
push
call
mov
push
call
mov
add
push
push
push
push
push
call
xor
pop
ret
sub
mov
mov
mov
push
push
push
mov
push
xor
push
push
push
push
mov
call
mov
mov
cmp
je
test
je
mov
not
mov
jmp
mov
mov
mov
xor
xor
mov
cmp
je
test
jne
mov
mov
not
mov
call
mov
lea
xor
push
xor
mov
call
mov
mov
cmp
mov
mov
je
test
je
not
mov
mov
jmp
mov
mov
mov
lea
push
xor
call
call
mov
mov
mov
xor
xor
cmp
je
test
jne
mov
mov
not
mov
lea
push
call
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
mov
mov
mov
mov
and
test
jne
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
mov
add
mov
add
mov
mov
mov
mov
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
mov
add
mov
mov
xor
mov
add
mov
mov
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
mov
add
mov
cmp
jle
xor
jmp
mov
push
mov
push
mov
push
mov
push
mov
push
call
pop
mov
pop
ret
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
or
mov
mov
or
mov
push
push
push
call
push
push
push
call
push
push
push
push
push
call
mov
or
mov
push
push
call
mov
or
mov
mov
or
mov
push
push
push
push
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
push
push
mov
push
mov
push
mov
push
mov
push
call
mov
or
mov
push
push
push
push
call
mov
push
call
mov
or
mov
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
push
call
mov
or
mov
mov
push
mov
push
mov
push
mov
push
push
call
mov
or
mov
mov
push
mov
push
call
mov
or
mov
push
push
push
push
push
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
push
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
push
push
call
mov
or
mov
push
call
mov
or
mov
push
call
mov
or
mov
push
push
push
push
push
push
push
call
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
push
push
push
push
call
push
push
push
push
call
push
push
push
call
add
mov
push
push
push
call
push
push
push
call
mov
or
mov
mov
or
mov
push
push
push
push
push
push
push
call
push
push
push
push
push
call
mov
or
mov
push
push
call
mov
or
mov
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
push
push
call
mov
or
mov
mov
push
mov
push
push
call
mov
or
mov
push
mov
push
call
mov
or
mov
push
push
call
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
push
call
mov
or
mov
push
call
test
je
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
sub
cmp
jae
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
mov
mov
add
mov
mov
jmp
mov
add
mov
mov
shl
mov
cmp
jge
mov
and
mov
sub
cmp
jae
mov
cmp
jae
mov
and
and
test
je
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
mov
mov
add
mov
cmp
jbe
mov
shr
mov
mov
and
mov
cmp
ja
mov
jmp
mov
and
add
mov
jmp
mov
and
mov
add
mov
mov
and
add
mov
mov
xor
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
add
mov
mov
xor
mov
mov
and
test
je
mov
add
xor
mov
and
mov
jmp
mov
add
xor
mov
sar
mov
mov
add
mov
mov
shl
mov
lea
mov
jmp
mov
shr
mov
mov
and
test
je
mov
and
mov
add
mov
mov
and
add
mov
mov
xor
mov
jmp
mov
and
add
mov
mov
xor
mov
mov
and
test
je
mov
add
xor
mov
and
mov
jmp
mov
add
xor
mov
sar
mov
mov
add
mov
mov
mov
cmp
je
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
mov
mov
add
mov
cmp
je
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
add
mov
mov
add
mov
cmp
jne
mov
and
test
je
mov
add
xor
mov
and
shl
mov
mov
add
mov
mov
jmp
mov
add
xor
mov
and
shl
mov
mov
and
and
mov
lea
mov
mov
shl
mov
mov
mov
lea
cmp
jbe
pusha
mov
and
popa
mov
jmp
mov
mov
sub
mov
test
je
mov
cmp
jae
mov
add
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
cmp
jae
mov
jmp
mov
add
cmp
jbe
mov
jmp
mov
sub
mov
mov
mov
sub
mov
test
je
mov
cmp
jae
mov
add
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
mov
mov
xor
pop
pop
pop
mov
pop
ret
lock
add
inc
add
cmp
inc
cmp
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
call
mov
add
mov
push
mov
push
call
mov
mov
mov
push
mov
push
push
mov
push
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
lea
mov
mov
xor
mov
rep
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
call
mov
mov
mov
mov
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
lea
push
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
add
jmp
mov
mov
call
mov
mov
mov
mov
push
mov
push
call
push
mov
mov
push
call
mov
mov
mov
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
push
push
call
mov
push
add
call
add
sub
je
sub
je
push
push
call
add
pop
pop
pop
ret
push
push
call
mov
add
cmp
jge
mov
cmp
jle
push
jmp
lea
lea
push
push
push
call
push
push
push
call
mov
add
cmp
jg
pop
push
push
push
call
add
pop
pop
xor
pop
ret
mov
push
push
push
call
add
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
push
push
call
mov
push
push
push
call
mov
add
cmp
jl
cmp
jg
push
push
push
call
add
cmp
jge
push
lea
push
push
push
call
push
push
push
call
mov
add
cmp
jl
pop
push
call
push
push
push
call
add
pop
pop
mov
pop
ret
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
lea
push
push
push
push
call
push
push
push
mov
call
push
push
push
call
push
push
mov
call
add
test
jg
push
push
call
jmp
push
push
call
add
lea
push
push
mov
call
add
cmp
jge
push
push
push
call
push
push
call
add
test
jne
push
push
push
call
push
push
call
add
push
push
push
call
add
lea
push
call
mov
push
lea
push
push
call
add
add
cmp
jl
jne
push
push
push
call
push
push
call
add
test
jne
push
push
push
call
push
push
call
add
push
push
push
call
add
lea
push
call
add
lea
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
cmp
jge
push
mov
push
jmp
jmp
lea
mov
mov
push
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
push
push
push
call
add
jmp
push
push
call
add
mov
mov
sub
cmp
je
add
cdq
sub
mov
sar
push
push
push
call
mov
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
mov
mov
add
jmp
push
push
push
call
add
test
je
push
push
push
call
mov
push
push
push
call
add
jmp
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
mov
mov
add
jmp
push
push
push
call
add
test
je
push
push
push
call
push
push
push
call
add
jmp
push
push
call
add
cmp
je
push
push
push
call
push
push
call
lea
push
push
push
mov
call
push
push
push
call
push
push
push
call
mov
add
lea
add
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
test
je
cmp
jle
push
push
call
add
push
push
call
add
jmp
jmp
lea
sub
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
test
je
cmp
jge
push
push
call
add
push
push
call
add
jmp
cmp
jl
push
push
push
call
push
push
push
call
add
jmp
push
push
call
mov
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
mov
mov
mov
mov
sub
sub
add
cmp
jge
sub
lea
mov
mov
mov
jmp
lea
lea
mov
mov
mov
push
push
push
call
add
cmp
jl
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
push
push
call
push
push
push
mov
call
push
push
call
add
test
jle
push
push
push
call
add
push
push
call
push
push
push
call
add
pop
xor
pop
ret
int3
int3
int3
int3
mov
push
push
push
call
add
mov
ret
int3
int3
int3
sub
mov
xor
mov
push
lea
push
push
call
test
je
cmp
je
lea
push
push
call
add
test
je
lea
push
push
push
push
push
mov
call
add
push
push
call
push
push
call
add
mov
xor
call
add
ret
push
push
call
mov
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
call
push
push
mov
lea
push
push
push
push
push
call
test
je
lea
push
push
call
add
pop
mov
xor
call
add
ret
push
push
push
call
mov
add
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
call
push
push
call
push
push
call
add
test
je
push
push
call
add
ret
push
push
push
call
push
push
call
push
mov
push
push
mov
call
push
push
call
push
push
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
add
test
je
push
call
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
mov
mov
call
mov
cmp
jne
push
call
mov
test
jne
call
test
mov
jne
pop
pop
pop
lea
pop
ret
mov
mov
push
push
call
test
jne
call
pop
pop
pop
mov
pop
ret
push
push
push
call
add
pop
pop
pop
xor
pop
ret
int3
int3
int3
push
mov
push
push
push
push
call
push
push
push
mov
call
push
mov
mov
call
mov
add
test
jne
lea
pop
pop
ret
push
call
push
push
call
add
cmp
mov
je
mov
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
push
push
mov
call
push
push
push
mov
call
push
push
push
call
mov
add
test
jne
push
push
push
call
add
push
push
push
call
add
cmp
mov
jne
lea
add
cmp
je
cmp
je
push
push
call
mov
add
test
jne
mov
lea
mov
add
test
jne
sub
lea
mov
sub
push
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
call
push
push
mov
call
push
push
call
add
test
jne
push
push
push
call
push
push
call
push
push
call
add
jmp
push
call
add
mov
pop
pop
pop
ret
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
call
add
push
mov
push
push
push
push
call
add
push
push
push
call
add
ret
push
mov
push
push
push
push
call
add
mov
call
mov
test
je
push
push
call
add
test
je
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
test
je
lea
push
push
push
push
call
push
push
push
call
push
push
mov
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
add
mov
mov
call
mov
test
je
push
push
call
add
test
je
lea
push
push
push
push
call
push
push
push
call
push
push
mov
call
push
mov
mov
call
add
test
je
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
mov
push
push
call
add
test
jne
pop
pop
ret
push
sub
push
push
push
call
push
push
push
call
add
mov
call
mov
test
je
mov
call
push
mov
mov
call
add
test
je
cmp
je
push
call
add
push
push
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
push
push
push
mov
call
push
push
call
add
cmp
je
push
push
call
add
push
push
push
call
push
push
call
add
test
jne
push
push
push
call
add
pop
mov
pop
ret
int3
push
mov
push
push
push
push
call
push
push
mov
call
push
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
add
cmp
jne
push
push
push
call
add
pop
mov
pop
ret
push
push
push
call
push
push
call
add
cmp
je
push
push
call
add
push
push
push
push
call
add
mov
push
push
push
call
push
push
call
add
test
jne
push
push
push
call
push
push
push
push
call
add
push
push
call
push
push
push
call
push
push
call
add
cmp
je
push
push
call
add
test
je
push
push
call
add
add
jmp
push
push
call
add
add
jmp
push
push
call
push
push
push
call
push
push
call
push
push
push
call
push
push
call
add
test
pop
je
push
push
push
call
add
push
push
push
call
push
push
call
add
cmp
jne
push
push
call
push
push
call
push
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
lea
push
push
push
call
add
test
je
lea
push
push
push
call
add
test
je
push
push
call
add
test
je
push
push
call
add
push
push
call
push
push
call
push
push
call
push
inc
push
pop
and
adc
lds
jmp
inc
mov
das
gs
lock
daa
xor
mov
div
aaa
out
push
int3
scas
xchg
cs
push
mov
mov
pop
inc
test
mov
out
pop
dec
push
mov
jns
sbb
lods
cmp
cmp
cmps
cmp
out
dec
icebp
mov
test
cmp
stos
xor
stos
push
fild
ss
(bad)
jae
dec
push
jp
gs
pop
sub
(bad)
dec
ss
push
push
shl
sbb
mov
push
xchg
jbe
fwait
and
xor
aas
aaa
sbb
push
push
jecxz
hlt
data16
inc
adc
cmps
fsub
test
out
dec
mov
sahf
loop
mov
fst
sbb
cwde
add
xchg
movs
ficomp
pop
retf
shl
xchg
scas
mov
xchg
adc
push
stos
ds
ret
push
gs
mov
xchg
sbb
repnz
test
imul
ror
retf
ret
adc
push
cmps
cmp
push
pop
ret
iret
inc
fs
out
xchg
ret
out
inc
push
push
mov
dec
adc
mov
xlat
xor
test
xlat
cmps
mov
push
pop
inc
sbb
xchg
push
rcl
jae
into
cmp
ss
stc
adc
test
push
ret
inc
(bad)
lods
xchg
inc
push
xchg
and
xchg
mov
sbb
popa
icebp
jno
sub
jmp
or
movs
mov
ficomp
jmp
ins
pop
sub
pop
ss
push
(bad)
mov
out
adc
inc
ja
push
rol
sbb
jp
and
ss
outs
pop
xchg
sbb
mov
jae
xchg
aam
push
jb
in
xchg
push
sub
jb
inc
inc
adc
retf
mov
pop
daa
sbb
ror
arpl
pop
out
jbe
dec
outs
outs
mov
scas
not
inc
dec
pop
dec
push
xor
(bad)
adc
dec
aaa
dec
fidiv
outs
adc
xlat
movhps
dec
dec
cmp
mov
xlat
add
jecxz
push
retf
call
or
aaa
pop
and
das
dec
mov
xlat
adc
inc
test
pop
inc
sbb
out
(bad)
jbe
jb
aaa
(bad)
adc
addr16
(bad)
xor
sti
(bad)
xchg
mov
jg
sbb
lods
xchg
mov
dec
es
cmc
aam
ret
fwait
in
scas
cmp
jno
lahf
push
in
push
hlt
outs
xlat
movs
aad
jnp
imul
push
ret
arpl
jns
data16
inc
jbe
cmps
xor
es
cmps
pop
cmp
fistp
ins
xchg
jecxz
(bad)
dec
xchg
inc
cmc
aam
jno
and
jbe
mov
addr16
xchg
icebp
adc
ja
push
adc
mov
sbb
jmp
ss
sahf
(bad)
add
xchg
rcl
adc
xor
ficomp
aaa
jl
js
mov
pop
mov
and
inc
into
mov
aaa
ss
push
adc
xchg
inc
scas
neg
retf
cwde
mov
int
jnp
lahf
cmps
add
dec
ret
faddp
neg
(bad)
pop
les
les
in
jp
test
dec
daa
fincstp
or
push
push
push
test
xchg
add
cld
xchg
shl
aam
(bad)
movs
stos
jbe
inc
xchg
pop
cmp
(bad)
retf
push
icebp
xor
mov
(bad)
(bad)
outs
or
hlt
and
xchg
(bad)
push
std
push
cmp
cmps
adc
mov
or
pop
rcl
mov
cmp
out
scas
or
sbb
jno
push
cmps
xchg
loop
outs
sahf
mov
mov
into
jo
retf
xor
ret
jbe
inc
hlt
lea
cmps
loop
pop
xor
dec
mov
js
cli
push
cmps
div
xor
xchg
xchg
retf
xor
inc
jle
out
inc
jg
xchg
into
mov
pop
not
retf
stos
cmp
call
push
adc
(bad)
daa
adc
xchg
adc
push
sbb
push
rcr
push
xor
dec
mov
pop
lahf
xchg
xor
in
mov
out
jmp
mov
dec
dec
or
es
mov
mov
xor
push
mov
aad
add
(bad)
test
dec
sub
push
inc
mov
jle
jge
xchg
ss
(bad)
es
aaa
jae
jns
data16
cwde
out
ds
jp
fild
mov
fadd
outs
movs
or
in
retf
mov
add
popa
sbb
inc
test
and
adc
pop
aaa
rol
and
ins
pop
(bad)
jmp
sahf
clc
and
dec
loope
xor
test
sbb
js
lahf
test
mov
mov
adc
jae
mov
iret
aad
dec
mov
inc
out
jo
shr
xchg
psrld
(bad)
cmc
or
jns
add
adc
inc
outs
jae
call
in
dec
mov
xchg
fs
movs
cmp
ss
aam
mov
or
fdivr
jg
push
mov
push
xchg
push
xlat
cdq
mov
retf
lods
(bad)
int
xchg
adc
inc
xchg
sbb
jne
add
imul
je
fs
test
push
out
pop
ss
pusha
les
mov
int3
movs
add
sbb
(bad)
in
adc
or
hlt
push
dec
sub
pop
xlat
or
pop
(bad)
mov
mov
in
cmp
dec
sub
ret
into
xchg
(bad)
xor
aas
xchg
inc
mov
jg
dec
sub
jge
xchg
or
loope
int
rol
ret
jb
add
xchg
xchg
mov
fisubr
arpl
imul
in
scas
xchg
jno
inc
xchg
adc
add
aad
data16
lds
je
pop
pop
and
xchg
addr16
jbe
pop
mov
dec
or
and
mov
adc
cmps
or
mov
push
cwde
loop
jl
imul
inc
(bad)
rcr
and
aad
movs
mov
jle
push
(bad)
push
aaa
clc
addr16
int3
retf
mov
mov
ds
inc
test
adc
push
data16
into
gs
movs
xor
pusha
pop
outs
je
daa
cmps
arpl
in
aaa
ja
jns
cmp
fnstcw
push
pop
(bad)
retf
ret
repnz
(bad)
cld
pushf
outs
movs
jno
push
mov
cmps
mov
fs
mov
mov
pop
ret
cmp
push
push
jl
xor
out
jle
retf
push
lahf
or
rcr
pop
push
lahf
(bad)
sub
push
pop
ins
pop
inc
pop
mov
mov
inc
xor
ja
xchg
repz
ror
xchg
cmp
push
mov
xchg
xchg
mov
ret
mov
out
sub
sbb
xchg
add
div
es
xchg
lock
mov
dec
rol
adc
jne
retf
pop
xchg
test
(bad)
fiadd
mov
ss
add
xchg
addr16
aad
int3
lods
xchg
lock
mov
lds
adc
jae
not
call
das
pop
xlat
pusha
jmp
pop
dec
dec
rol
push
add
shl
mov
cmp
cmps
mov
pop
inc
cmp
test
and
mov
popf
fcomp
mov
pop
je
inc
test
mov
test
mov
jmp
into
cmp
neg
and
popa
xor
mov
cmps
js
push
and
mov
shl
pop
lds
xchg
add
xchg
lods
mov
test
push
sbb
xchg
cmp
arpl
jg
mov
es
out
mov
lds
and
inc
add
inc
push
fnstcw
sbb
out
dec
mul
mov
daa
fwait
mov
jle
inc
es
(bad)
xchg
add
pop
in
scas
fwait
xlat
or
stc
daa
repz
fcomip
sar
cwde
push
xor
into
not
fadd
xor
mov
es
pop
(bad)
out
les
pop
fsubr
in
dec
cwde
xchg
inc
add
jg
mov
out
push
adc
sbb
mov
repz
aaa
call
jbe
or
(bad)
jle
out
sub
(bad)
es
sub
sahf
jo
adc
jecxz
loopne
xchg
jecxz
pop
or
xor
in
add
sbb
test
popa
stos
aaa
mov
inc
(bad)
jae
cmps
mov
outs
ja
jb
call
aad
or
mov
cli
fld1
mov
xchg
inc
push
test
aaa
das
and
push
and
xor
cli
div
add
mov
mov
addr16
xchg
dec
pushf
dec
push
cmp
xor
aaa
(bad)
div
push
inc
sub
mov
xor
mov
xchg
(bad)
sub
inc
jbe
(bad)
(bad)
ret
lods
gs
add
pop
adc
ret
jbe
out
scas
jne
aam
xchg
jbe
push
adc
pop
pop
addr16
xor
bound
xlat
cbw
shl
sub
pop
xchg
xchg
and
adc
aas
(bad)
pop
push
jo
nop
icebp
nop
scas
ds
sbb
jno
icebp
pushaw
daa
inc
xchg
jo
xchg
fcom
jo
inc
jne
add
jmp
adc
mov
adc
jb
(bad)
aad
xchg
and
lahf
mov
inc
iret
push
aaa
mov
jmp
xchg
inc
mov
sbb
imul
leave
xchg
lea
lds
test
ins
mov
xchg
into
fcmove
xchg
push
jo
adc
not
mov
sti
stos
retf
add
hlt
push
not
scas
mov
daa
mov
cmps
in
mov
xor
adc
out
out
dec
sbb
mov
jle
pop
xchg
xchg
jl
dec
xchg
mov
cmps
test
aas
lahf
xor
pop
fimul
test
pop
sub
lea
and
cli
aas
daa
(bad)
mov
lds
mov
test
xchg
cmps
push
fldenv
add
ja
leave
fs
jle
push
mov
mov
jns
out
sub
or
inc
das
repnz
or
xchg
push
sbb
pop
push
leave
test
and
loop
das
dec
mov
inc
sub
inc
out
lods
mov
call
pop
dec
test
div
sub
aad
retf
loope
jp
xchg
jbe
jp
jbe
lods
cdq
lds
add
sbb
mov
aam
out
fisttp
cmps
push
iret
push
iret
loopne
and
out
hlt
mov
jmp
clc
dec
shl
inc
mov
(bad)
mov
mov
mov
bound
scas
pop
sbb
dec
fwait
rol
mov
add
xor
jg
not
mov
data16
das
stos
jbe
xchg
loope
popa
pop
outs
pushw
fild
jne
mov
mov
jo
rcr
hlt
cmc
fxch
aaa
or
fild
out
dec
int3
mov
jmp
push
adc
(bad)
mov
das
cmps
aad
xlat
dec
imul
add
daa
adc
inc
inc
xchg
out
aam
push
in
add
movs
rol
xchg
dec
scas
aam
push
mov
inc
aaa
jle
push
sub
ins
iret
test
inc
inc
iret
sbb
ds
jge
shl
(bad)
fcomip
or
and
dec
mov
lock
cmps
lds
pop
pop
adc
(bad)
xchg
test
out
in
nop
std
push
scas
push
sub
xchg
ficom
cli
dec
cs
push
xor
stc
inc
test
ret
les
lds
sbb
jg
call
scas
out
(bad)
and
cmp
cmps
pop
arpl
pop
adc
test
movs
test
xchg
shl
(bad)
(bad)
(bad)
cmps
sbb
aas
fisttp
xor
xchg
ja
in
dec
(bad)
pop
fistp
or
xchg
bnd
imul
jae
push
pop
pop
fidivr
data16
add
mov
(bad)
movs
add
ja
lods
mov
push
mov
pop
xlat
ins
jle
mov
jle
mov
push
and
inc
adc
fwait
inc
pop
and
xlat
in
pop
ja
movs
mov
test
mov
xchg
and
test
outs
daa
test
push
pop
and
out
lods
arpl
mov
mov
xor
lods
dec
das
ret
test
rol
int3
adc
pop
pop
inc
in
aaa
mov
rol
inc
(bad)
std
jne
cmps
xchg
aaa
into
icebp
mov
loop
add
fdiv
mov
fild
cmp
popa
outs
xor
out
sti
movs
or
hlt
push
and
in
xchg
add
mov
in
push
(bad)
leave
mov
(bad)
pop
xlat
or
mov
push
loop
scas
ja
popa
popa
inc
mov
cli
daa
xchg
xlat
fbstp
adc
jge
xchg
cmc
adc
xlat
aas
addr16
add
ja
dec
dec
or
and
push
cmps
das
mov
mov
mov
mov
aaa
dec
aaa
jmp
xor
push
scas
pop
in
ror
push
sub
sahf
(bad)
addr16
xchg
aaa
(bad)
mov
ret
out
adc
arpl
arpl
xchg
or
out
jae
arpl
mov
jg
sub
sub
pop
mov
(bad)
imul
aad
mov
and
xlat
jmp
addr16
call
in
or
out
cmp
pop
call
sbb
pushf
aam
xor
fdivr
rcl
xchg
push
mov
sub
sbb
cmps
cwde
or
and
es
pusha
add
mov
xchg
scas
fwait
pop
xchg
(bad)
pop
push
pop
xchg
mov
push
mov
sub
(bad)
(bad)
push
daa
fcmove
pop
scas
addr16
retf
mov
je
push
rol
in
ret
loopne
jbe
pop
add
push
frstor
inc
jnp
add
cdq
lahf
inc
lods
xor
(bad)
xchg
ds
rcl
div
and
and
xor
cmp
inc
xlat
les
les
pop
inc
in
xchg
or
int
push
dec
outs
aaa
not
inc
push
xor
in
call
push
push
les
xchg
rcr
mov
fbld
hlt
xchg
xchg
mov
adc
in
push
cdq
cmc
loop
xchg
and
movs
mov
adc
mov
call
mov
inc
(bad)
(bad)
add
not
test
push
rcr
dec
xor
xchg
out
xchg
xlat
jbe
adc
rcl
imul
icebp
push
in
repz
je
pop
mov
sbb
daa
(bad)
in
repnz
pop
xchg
pop
lods
jl
sub
idiv
imul
xchg
frstor
xchg
xchg
mov
jecxz
sete
mov
ins
inc
stos
sub
movs
sub
xlat
outs
xchg
add
arpl
cmp
pop
add
imul
addr16
mov
lahf
mov
push
fstp
push
jmp
mov
sub
loop
fisub
mov
xchg
pop
stos
dec
cmp
das
loopne
mov
mov
add
cmps
fidiv
and
mov
jbe
aaa
dec
xchg
data16
dec
int3
ja
and
(bad)
in
mov
aaa
mov
ficomp
dec
int3
adc
out
dec
pop
pop
xlat
hlt
div
adc
arpl
shl
sbb
rcr
dec
mov
inc
cmp
imul
adc
xchg
mov
adc
xchg
fbld
or
dec
xchg
push
ins
lahf
sub
and
in
inc
mov
into
fisttp
fisub
cmp
outs
(bad)
fs
not
stos
mov
cmps
sub
cwde
push
jae
sub
ret
pop
outs
sub
xchg
dec
movs
fdivr
inc
inc
pop
xchg
pop
in
or
push
dec
push
mov
mov
pusha
add
dec
movs
(bad)
addr16
sbb
cmps
mov
xchg
out
je
push
aaa
mov
xor
adc
mov
scas
inc
scas
das
sti
cmps
lds
shl
aad
les
jno
test
or
mov
xor
ret
sub
addr16
aam
stos
pop
call
test
adc
mov
jae
xor
mov
es
xlat
or
mov
and
jecxz
addr16
xchg
arpl
cwde
lods
out
sub
or
mul
(bad)
or
cmps
out
repnz
xchg
mov
test
add
int3
xchg
ins
ror
mov
aam
fdivp
and
movs
cdq
jle
mov
int
stos
push
inc
xor
xchg
loop
cmc
inc
in
push
into
pop
loop
popf
pop
neg
cmp
es
xchg
push
test
(bad)
dec
xchg
sub
cmp
push
test
and
ins
push
xchg
ret
push
idiv
cmps
pusha
sti
fdiv
int3
xor
cwde
inc
out
jns
and
mov
cmp
cmps
div
pop
push
arpl
std
out
add
iret
out
cmc
cmp
retf
sub
push
movs
pop
aaa
mov
(bad)
push
int3
push
aaa
adc
add
aad
inc
outs
popa
in
xchg
repz
xchg
adc
inc
sub
pop
xchg
das
push
ss
int3
(bad)
stos
sub
(bad)
fwait
cwde
ja
and
int3
xchg
(bad)
in
cdq
movs
push
scas
div
movs
xlat
or
mov
arpl
jb
lahf
ins
into
push
ss
mov
(bad)
in
shl
inc
cmps
pop
call
mov
jmp
dec
out
push
pop
ja
daa
sahf
mov
mov
inc
adc
cmps
pop
hlt
xchg
es
xchg
dec
out
push
inc
pop
pop
mov
dec
xchg
jle
push
mul
sbb
bound
fsubr
mul
mov
pop
aaa
xor
cmps
leave
mov
jno
test
push
cmps
cmp
jne
pop
ja
ja
xlat
xchg
xor
test
icebp
jg
(bad)
rcl
cmp
es
xchg
pop
mov
mov
(bad)
cmp
adc
xor
mov
jo
jecxz
fadd
in
mov
rcr
sub
cmp
ds
and
aam
push
add
and
jnp
(bad)
xchg
xchg
fild
push
xor
call
(bad)
(bad)
sub
xchg
(bad)
jae
fist
(bad)
jg
imul
jmp
push
xor
scas
dec
clc
ret
mov
out
mov
cld
in
and
sahf
mov
ss
inc
call
fst
movs
jb
pushf
jle
outs
xchg
lock
shl
sbb
(bad)
sar
(bad)
pop
adc
sbb
mul
inc
repz
mov
test
sbb
inc
cld
das
aam
jne
push
mov
inc
xchg
ja
push
sub
movs
sbb
packuswb
sbb
cli
pop
into
xor
out
dec
test
addr16
mov
push
cmps
fidiv
mov
cli
fnstcw
xchg
cmp
mov
cmp
cmp
cmp
ds
mov
sub
mov
(bad)
bound
push
and
ds
sahf
out
stos
ret
retf
(bad)
aaa
(bad)
cwde
nop
pop
(bad)
into
loopne
jmp
jmp
and
xchg
dec
cld
aaa
mov
not
(bad)
mov
movs
pop
pop
retf
out
and
shld
dec
call
dec
mov
ret
ficom
loopne
ins
daa
mov
push
xchg
mov
jp
jnp
xor
out
mov
xlat
mov
and
fadd
xor
ja
pop
call
into
movs
pusha
sbb
dec
sub
ins
(bad)
int3
stc
es
cmc
in
aas
sub
jbe
(bad)
enter
mov
push
movs
sbb
xchg
mov
les
in
mov
or
xchg
mov
sub
mov
inc
xor
cmps
xchg
pusha
aam
(bad)
icebp
jg
mov
in
push
push
xchg
addr16
inc
inc
dec
inc
mov
out
xchg
xor
mov
mov
data16
xlat
ja
(bad)
jo
leave
sbb
mov
xchg
push
xchg
in
(bad)
icebp
ret
pop
(bad)
std
inc
or
push
and
fistp
ds
pop
adc
mov
ds
xchg
cmc
or
popa
mov
into
arpl
addr16
adc
addr16
cmps
rol
pop
out
pop
(bad)
jmp
ss
daa
jno
cmps
das
xchg
push
jecxz
adc
daa
test
jbe
repnz
inc
adc
pop
xchg
aad
inc
scas
add
je
cmps
scas
in
jnp
mov
add
add
inc
add
cmp
push
addr16
leave
ds
sbb
dec
popf
fstp
dec
push
cdq
jbe
or
sub
mov
cmps
xchg
xchg
push
aaa
aaa
mov
and
jecxz
dec
fcmovnu
ds
pop
cmps
in
out
adc
loope
aam
or
outs
and
dec
pop
ja
cmps
les
sti
scas
dec
push
adc
loope
sbb
(bad)
pop
std
je
addr16
shl
jl
jg
cmp
pop
aaa
ins
inc
jb
xchg
push
adc
mov
push
clc
pop
jno
inc
retf
sbb
inc
xchg
(bad)
fxch
out
and
imul
lock
in
sbb
in
adc
and
cli
dec
inc
je
jno
loopne
imul
int
pop
call
pop
xor
jae
(bad)
lock
mov
push
fsubr
pop
inc
outs
sub
adc
push
fist
in
pushf
(bad)
cmp
rol
push
inc
in
fsubr
cmps
retf
and
out
jg
pop
iret
je
ins
push
mov
cmp
pop
(bad)
push
jle
mov
addr16
mov
mov
fmul
push
stos
push
neg
mov
js
xchg
arpl
push
fucomp
popf
in
cmp
or
sbb
sub
in
jmp
or
retf
sbb
sub
cmp
mov
cmp
ss
mov
fs
outs
movs
and
mov
test
retf
and
int3
das
nop
pop
ss
jecxz
mov
outs
mov
sbb
jmp
faddp
mov
fcom
jne
inc
xchg
fst
dec
pop
xchg
or
and
loopne
aaa
jle
fistp
and
cmp
inc
push
mov
cmp
outs
ficom
out
aam
dec
sbb
xchg
pop
xchg
mov
mov
outs
inc
push
cmps
fisub
mov
add
xchg
(bad)
pop
test
scas
lahf
popf
gs
aas
xor
adc
in
pop
xchg
adc
div
jl
rcr
mov
aad
push
cmps
(bad)
mov
push
xchg
fdivr
(bad)
outs
je
out
adc
push
jbe
data16
cld
add
aas
jge
add
test
js
call
in
rol
(bad)
push
repz
push
pop
out
hlt
fwait
mov
add
pop
dec
mov
lods
out
in
addr16
lods
xchg
mov
lods
gs
mov
sahf
jmp
scas
inc
ret
cli
xchg
xchg
push
xchg
xor
rcr
mov
retf
int
(bad)
aam
push
sub
stos
jbe
call
imul
add
out
ret
cmps
add
xor
or
mov
cmp
pop
aas
out
xchg
loop
mov
ja
mov
shr
fmul
sbb
cmp
sahf
sbb
pop
icebp
mov
xor
xchg
xlat
xlat
in
dec
sub
pop
out
call
dec
sub
int3
xchg
xchg
jns
into
fwait
xchg
push
jb
cs
xchg
das
icebp
clc
xchg
sub
push
inc
jo
push
mov
das
inc
push
xchg
ret
out
pop
xchg
jb
loope
pop
imul
jae
pop
mov
xchg
mov
js
addr16
retf
(bad)
test
aaa
dec
(bad)
mov
mov
fild
push
push
jecxz
inc
xor
sbb
ds
xor
ja
xor
aas
sbb
scas
xor
xor
call
xor
es
sub
outs
out
loop
cmps
ja
fs
dec
push
dec
inc
rcr
fs
loopne
jmp
push
ficomp
mov
movs
repnz
pop
scas
jno
sbb
inc
and
repnz
jg
add
pop
mov
nop
xchg
je
iret
xchg
movs
xchg
xchg
dec
cmps
push
fdiv
(bad)
(bad)
int3
inc
inc
iret
push
in
push
jno
ret
add
mov
xchg
push
ret
dec
xor
(bad)
in
outs
out
xrelease
out
loope
test
cmps
outs
inc
inc
dec
js
es
test
(bad)
cmp
movs
jg
xchg
add
and
scas
in
cmps
pop
leave
mov
stc
xchg
lahf
cdq
pop
imul
in
or
mov
es
daa
inc
xchg
jmp
test
pushf
mov
bound
jnp
out
inc
out
test
xor
push
xchg
daa
xlat
call
push
ret
es
inc
stos
js
mov
in
loop
xchg
push
cmp
add
xor
push
xor
push
dec
pop
xlat
push
aaa
push
ja
xchg
(bad)
repz
pop
add
push
ss
cmps
stos
stos
mov
sub
adc
cmp
dec
push
jo
add
out
hlt
sbb
xor
xchg
xchg
push
adc
and
push
pushf
mov
icebp
test
mov
jbe
retf
(bad)
xchg
shl
out
push
outs
mov
mov
cs
(bad)
dec
(bad)
aaa
mov
push
daa
mov
add
push
push
(bad)
aaa
xchg
mov
jae
mov
addr16
cs
push
imul
xchg
sbb
pop
push
out
data16
les
mov
push
ins
adc
movs
stc
dec
xor
out
inc
in
cmps
sub
pop
into
inc
inc
mov
ins
push
mov
out
std
cmp
sub
jp
or
cmc
inc
lock
push
(bad)
(bad)
and
outs
jno
inc
push
xor
inc
dec
or
(bad)
push
xor
mov
jmp
imul
jo
mov
in
cli
dec
and
dec
pop
cmps
ret
push
mov
inc
ret
arpl
cmp
into
adc
jbe
push
out
xchg
inc
lahf
arpl
push
xchg
les
pop
xlat
mov
pop
imul
jle
(bad)
call
test
ss
neg
xchg
add
inc
xchg
(bad)
sbb
or
xchg
addr16
xor
sbb
cmps
popa
xor
pop
imul
push
dec
and
push
inc
fisttp
adc
inc
sub
pop
and
sar
test
fwait
dec
or
in
mov
mov
push
dec
add
inc
sbb
add
mul
rol
in
mov
aad
cmp
outs
jnp
pusha
xchg
xchg
cmp
inc
scas
rol
fs
inc
sub
push
xorps
gs
xlat
call
lock
cwde
aas
push
lods
data16
pop
das
(bad)
sbb
je
mov
and
push
addr16
push
pop
shl
iret
jp
sub
(bad)
pop
inc
add
cmps
gs
int3
xchg
mov
not
sti
cmps
push
stc
sub
jnp
sahf
(bad)
sub
es
out
iret
dec
(bad)
push
fbstp
outs
jne
push
jne
pusha
aaa
xlat
pop
movs
dec
jge
imul
arpl
inc
inc
test
mov
xor
(bad)
xchg
push
loope
mov
addr16
aaa
mov
stos
aad
sbb
inc
pop
cmps
push
cwde
dec
mov
fld
and
mov
cmps
ror
push
adc
out
jns
movs
shl
test
(bad)
sbb
cmc
not
xchg
pop
cmc
daa
out
xchg
in
push
cmc
out
xor
mov
mov
out
ror
(bad)
fucomp
push
in
outs
pop
and
jge
cmp
cmps
sbb
adc
out
jg
nop
ds
fldenv
or
pop
imul
movs
scas
xchg
(bad)
cmp
jp
inc
nop
imul
pop
in
mov
out
mov
(bad)
pop
frstor
adc
jne
test
mov
xchg
xchg
adc
jae
sbb
and
mov
repz
xchg
add
shr
lods
stos
data16
add
mov
xor
cmp
push
mov
jg
cs
push
popa
mov
push
cmp
js
daa
mov
enter
inc
pop
sbb
mov
(bad)
xchg
hlt
xor
aaa
(bad)
push
hlt
das
in
aaa
int
xchg
xchg
std
out
adc
inc
icebp
xlat
outs
(bad)
adc
mov
ror
mov
or
mov
(bad)
aam
repnz
xlat
mul
jno
std
es
jae
xor
push
mov
ret
popf
arpl
sbb
cmp
movs
test
hlt
ror
xchg
jmp
ins
outs
ret
xchg
cld
cld
stc
leave
pop
push
cwde
mov
jno
or
iret
mov
mov
jo
scas
lahf
test
push
xchg
scas
ja
jmp
outs
nop
ret
repz
add
push
iret
addr16
(bad)
jle
inc
push
outs
mov
mov
enter
sti
pop
rol
icebp
or
mov
xor
inc
movs
aaa
shl
jl
jl
inc
push
add
pop
add
jnp
and
mov
aaa
ins
cwde
int3
out
js
repz
call
pop
out
jbe
and
pop
(bad)
xlat
cmps
mov
mov
jg
mov
add
sbb
add
mov
mov
xchg
std
adc
rol
jns
stc
mov
sbb
cmc
adc
aaa
mov
sbb
jnp
and
mov
test
(bad)
jle
sub
fstp
repnz
sub
scas
adc
in
cmps
mov
test
xor
pop
cmps
repz
xor
cs
aam
test
aam
push
xchg
inc
movlps
and
dec
sbb
nop
dec
call
or
push
xchg
push
out
jne
inc
push
data16
cmp
mov
mov
adc
pop
push
jnp
out
ret
daa
fadd
stos
mov
pushf
mov
mov
fdiv
cmps
jle
cmp
ss
ins
les
inc
je
das
pop
aam
addr16
mov
jmp
add
cld
nop
and
or
mov
mov
lock
int
push
mov
mov
pop
aaa
rcr
mov
or
and
xchg
(bad)
stc
xchg
push
ror
xchg
mov
rcl
inc
lds
call
add
adc
test
mov
push
mov
scas
inc
pop
shr
out
test
cmp
out
dec
mov
cmps
jno
pop
inc
fwait
mov
sub
xchg
aas
cmp
pop
not
add
pop
mov
mov
mov
test
xchg
leave
mov
cmp
xor
test
into
pop
pop
jmp
inc
jae
addr16
mov
jb
cmp
es
loope
(bad)
jge
aaa
pop
aam
stos
adc
push
sub
sar
lods
cld
add
inc
dec
xchg
scas
hlt
adc
jbe
push
cmps
scas
dec
cmp
mov
jbe
out
mov
cmps
xor
dec
xchg
aas
(bad)
lahf
add
inc
jge
mov
out
cmp
cwde
dec
(bad)
shl
out
cmps
pushf
inc
push
mov
aam
mov
stos
push
test
cld
adc
in
xchg
mov
cmp
mov
mov
mov
cmp
ins
frstor
gs
jns
and
cmps
pop
mov
xlat
cli
sbb
(bad)
cmova
xor
dec
xlat
js
out
mov
cmc
out
xlat
sti
aad
(bad)
test
retf
mov
in
pop
mov
mov
add
outs
data16
pop
inc
mov
jmp
gs
or
jbe
mul
push
dec
outs
lock
jl
pusha
popf
aaa
mov
push
mov
jge
test
leave
inc
xchg
xlat
in
pop
ret
fldcw
mov
cmp
pusha
cdq
push
xchg
data16
or
jmp
sbb
inc
movs
test
data16
ins
push
repz
adc
push
ret
xchg
cmps
inc
mov
ficom
leave
fcmovne
test
ret
cli
mov
repz
cmp
je
imul
aaa
mov
cmps
xor
aaa
dec
mov
scas
jl
movs
jbe
push
mov
xchg
jae
rcl
ret
xchg
xchg
mov
fidiv
xchg
mov
pop
test
adc
jns
lods
sbb
das
ins
push
inc
popa
call
mov
ret
(bad)
mov
cmp
leave
(bad)
stc
jmp
and
jo
mov
sub
in
mov
push
popa
mov
dec
jns
es
pop
pusha
loop
out
ds
mov
inc
xor
sbb
shl
pop
daa
or
cmp
or
into
mov
mov
pop
mov
test
call
jbe
mov
fs
mov
out
cmp
in
(bad)
pop
scas
scas
outs
int3
cld
dec
rcr
xor
dec
in
push
adc
ror
push
pop
mov
xchg
fst
inc
inc
(bad)
retf
ds
arpl
pop
nop
out
mov
inc
xchg
(bad)
int
(bad)
sbb
call
mov
repnz
jb
and
in
pop
xchg
ficom
pop
cs
rcl
pop
aas
sbb
push
mov
and
mov
pushf
mov
leave
ja
ret
aad
xor
pop
cmc
jl
fidivr
push
ja
adc
in
fidiv
cwde
fisttp
daa
dec
sti
jp
dec
ja
xchg
xchg
cmp
jg
sbb
add
jnp
arpl
loopne
pop
mov
mov
ds
pop
cmp
dec
push
stos
sbb
jle
ja
not
add
movs
dec
adc
or
jp
xchg
adc
and
mov
pop
stos
add
push
pop
ficomp
mov
pusha
(bad)
rcl
jp
daa
into
(bad)
(bad)
mov
fdiv
pop
push
out
push
arpl
es
out
outs
push
xlat
mov
shl
ss
mov
mov
xchg
add
out
sahf
into
jbe
mov
xchg
or
xor
aaa
mov
shl
fisub
xchg
push
or
(bad)
jp
div
es
push
(bad)
movs
imul
jmp
jp
daa
sub
jecxz
pop
mov
mov
jg
pop
cwde
pop
and
arpl
pop
inc
fst
out
push
adc
out
jmp
inc
mov
push
aas
repz
hlt
sbb
sahf
(bad)
xchg
js
js
(bad)
fcom
bnd
xchg
mul
xchg
xchg
cld
xchg
xor
jb
cmps
(bad)
test
arpl
leave
xor
adc
adc
push
aad
inc
push
push
ss
sbb
movs
loop
push
mov
cli
out
jecxz
and
call
sub
mov
mov
fadd
mov
adc
jle
jle
cmp
rcl
inc
pop
add
push
pop
inc
mov
dec
jae
sar
mov
pop
cs
rcl
jae
push
add
call
fcmovu
ret
xor
(bad)
daa
pop
ss
pop
xchg
ja
add
and
shl
les
sbb
imul
fsub
dec
mov
repnz
push
xchg
iret
fwait
adc
into
inc
ds
sub
add
xor
pop
mov
mov
popf
xor
std
gs
test
out
cs
mov
repnz
sub
mov
ds
test
push
das
(bad)
adc
ins
xchg
fwait
mov
add
inc
add
ins
pusha
imul
sahf
jbe
jns
call
sbb
imul
pop
xchg
cmps
jbe
sub
repnz
arpl
dec
cmps
shl
shl
or
or
xor
movs
mov
test
aaa
push
and
push
mov
pop
ins
out
mov
repnz
push
sub
xchg
cmps
(bad)
xchg
stos
inc
mov
adc
lds
test
lock
aam
and
add
mov
fs
cmp
jbe
sub
call
out
jle
imul
fs
addr16
jbe
xlat
lds
shl
bound
push
hlt
jbe
es
aas
sub
sub
mov
inc
clc
sbb
sbb
in
cmp
cmp
aam
repz
aaa
xor
fnsave
sahf
test
inc
jbe
inc
mov
in
xor
jp
xor
pop
in
push
or
mov
fbstp
in
int
stc
xchg
inc
hlt
sub
out
jmp
push
fistp
test
lods
aam
xchg
push
pop
loopne
imul
lds
sahf
xor
std
pop
lods
adc
xor
mov
xchg
cmps
mov
adc
ror
jle
arpl
sbb
and
aad
jle
shl
push
pusha
jmp
adc
scas
adc
cmps
ret
ins
jmp
xor
hlt
jnp
xor
xchg
fisubr
mov
(bad)
mov
inc
je
shl
out
xchg
jmp
movs
inc
push
xchg
pop
icebp
inc
push
scas
mov
adc
push
xchg
iret
(bad)
neg
jbe
sub
cmps
jp
ss
out
invd
lock
mul
test
(bad)
out
xchg
je
mov
call
cmp
mov
idiv
sub
and
aaa
xor
cmp
fdivr
cmovne
mov
test
(bad)
jbe
pop
(bad)
fcomp
pop
or
pop
push
adc
loopne
cmps
mov
sub
xchg
jg
js
movs
lock
shr
aad
jno
add
cwde
call
into
pop
and
mov
mov
pop
or
fild
mov
stos
loop
sti
cli
ja
mov
outs
adc
mov
inc
repnz
pop
sub
fisub
sbb
icebp
fstp
call
(bad)
lods
sti
jmp
(bad)
jo
mov
(bad)
mov
imul
mov
mov
rcr
enter
aaa
push
or
or
fisttp
cwde
add
or
test
mov
(bad)
cmp
jl
pop
mov
or
jae
pop
std
(bad)
cmp
lahf
adc
out
jno
(bad)
jo
fs
call
ds
es
xchg
in
push
(bad)
cmp
fcom
stc
addr16
loope
jne
cld
aad
ja
cmp
and
or
pop
es
mov
das
add
push
sbb
test
push
pop
movs
jns
cmp
dec
scas
mul
mov
dec
add
sub
ret
mov
jnp
sub
data16
xchg
sub
ss
das
or
jbe
clc
scas
in
(bad)
xor
mov
cmps
ja
mov
xchg
mov
addr16
push
test
scas
adc
and
inc
dec
adc
and
je
pop
movs
ja
sub
mov
mov
into
(bad)
test
repz
mov
push
cmps
and
xor
push
(bad)
cli
sbb
in
mov
inc
pmulhw
mov
imul
clc
fld
retf
mov
jle
fisubr
mov
cmp
lea
mov
mov
daa
nop
ds
jmp
test
cmp
jmp
ret
pop
and
ins
les
jae
fst
(bad)
xlat
adc
mov
enter
stos
test
pop
movs
movs
loop
dec
(bad)
daa
(bad)
out
addr16
push
add
or
repnz
mov
test
or
add
xor
js
cmp
iret
sbb
addr16
or
xor
psadbw
je
ret
jmp
lea
xor
mov
out
mov
rcr
test
(bad)
out
lock
xchg
shl
daa
jecxz
lds
mov
sbb
bound
test
jecxz
sar
je
movs
lahf
mov
daa
mov
out
dec
mov
aaa
jb
mov
(bad)
sbb
sbb
mov
sub
(bad)
outs
jnp
(bad)
movs
or
fwait
jbe
mov
outs
loop
jb
push
das
xchg
inc
lds
fs
int
dec
mul
(bad)
dec
mov
push
sbb
iret
dec
loope
inc
cmps
div
cmps
jge
cmp
mov
fidiv
ss
ror
aad
out
jbe
pop
xlat
std
cmps
xor
jns
je
cmp
loope
in
(bad)
out
(bad)
cmp
jnp
stc
pop
adc
imul
ins
cmove
lds
data16
popa
xchg
not
pop
and
cmps
dec
mov
pop
test
or
cmps
inc
xlat
jmp
movs
cli
mov
push
(bad)
xchg
and
shl
inc
neg
(bad)
xor
dec
scas
leave
mov
mov
(bad)
cmps
sahf
(bad)
cmp
cmc
inc
addr16
jnp
or
mov
mov
out
(bad)
and
and
push
out
xor
add
mov
push
sub
jge
ja
push
loopne
data16
fsub
test
jno
repz
es
push
dec
push
and
inc
mov
out
leave
into
test
cwde
pop
jae
test
or
(bad)
div
data16
shr
retf
add
arpl
scas
mov
adc
sahf
push
out
xor
enter
retf
test
into
push
out
cdq
cmp
jmp
mov
ja
and
inc
pop
xor
loop
pop
push
inc
add
pusha
repnz
shl
mov
and
pop
es
pop
push
pop
xor
cmp
or
jbe
xchg
inc
mov
stos
popa
shl
addr16
or
sbb
js
pop
jnp
xchg
xor
cmp
adc
inc
xchg
inc
xor
pop
adc
mov
(bad)
dec
add
ins
mov
cli
push
mov
dec
cmp
adc
daa
sub
pop
out
xchg
popa
clc
std
xor
popf
shl
push
mul
jbe
push
int3
inc
cmps
xchg
mov
outs
add
mov
call
es
pop
or
jecxz
setns
test
lahf
addr16
sbb
adc
jbe
jbe
data16
sbb
cmp
sub
aaa
mov
sbb
jbe
mov
xchg
das
jle
outs
mov
loope
add
movs
jno
mov
xchg
leave
mov
daa
imul
push
cmps
xlat
sub
inc
xchg
pop
pop
push
(bad)
sbb
mov
jbe
(bad)
adc
fild
cli
aaa
out
mov
std
cmps
loopne
pop
into
fwait
pop
scas
and
int
adc
cmps
lahf
adc
rcl
pop
xchg
out
into
push
xchg
jbe
ins
and
mov
sub
inc
xchg
inc
idiv
data16
bswap
mov
xchg
inc
cs
and
jbe
jp
test
push
jle
pop
xchg
nop
cli
mov
jae
pop
jno
out
cmp
cmp
rcl
(bad)
mov
pop
or
inc
mov
push
inc
stos
mul
bound
xchg
aas
xchg
out
not
push
repnz
jne
ficomp
xor
pop
and
mov
inc
outs
push
push
in
je
push
nop
cmp
pop
nop
inc
add
mul
jmp
mov
lahf
add
mov
mov
adc
add
sbb
in
cmp
(bad)
test
or
jl
nop
mov
aam
dec
inc
adc
les
jbe
xor
mov
repnz
out
movs
push
cld
push
mov
push
outs
adc
out
idiv
in
rol
pop
mov
xchg
cmp
mov
dec
popa
dec
xchg
clc
xor
fmul
(bad)
push
repz
xchg
and
fdivr
cld
lea
sbb
das
cli
ss
ja
mov
or
outs
jcxz
es
jecxz
das
cli
out
xchg
pop
add
lock
mov
out
repnz
in
jbe
mov
push
push
outs
xchg
mul
(bad)
stos
mov
cmp
jno
xor
cli
call
rcr
not
jmp
ins
mov
mov
jb
xchg
ins
mov
xchg
shl
in
(bad)
cmp
jg
inc
mov
adc
jns
aaa
inc
shr
adc
icebp
pusha
dec
movs
inc
xor
mov
xchg
std
push
retf
movs
and
adc
xor
add
inc
xchg
aaa
test
mov
daa
imul
lahf
ss
cmps
mov
call
leave
inc
pop
retf
out
sahf
push
cmps
push
mov
xchg
pusha
aam
rcr
into
mov
inc
dec
push
jae
pusha
shl
or
ja
aaa
cs
jle
xor
mov
add
inc
or
xchg
mov
ins
jne
rol
pop
rol
imul
loopne
or
add
repz
sbb
add
mov
ja
addr16
cs
(bad)
(bad)
das
sbb
mov
sbb
ja
jmp
arpl
lahf
push
mov
inc
dec
iret
xor
adc
push
sahf
pushf
faddp
add
push
ss
loop
push
cmp
jne
shl
js
sbb
inc
mov
jl
test
xchg
repz
sahf
leave
(bad)
popf
ss
inc
sub
inc
add
cmp
mul
xor
dec
push
pushf
cmps
ja
(bad)
or
ja
dec
sub
pop
in
out
mov
sbb
mov
and
push
mov
fldenv
out
out
cmps
xchg
aaa
out
cli
gs
pop
movs
jno
div
dec
mov
call
adc
shr
dec
mov
push
mov
aam
repz
lods
push
adc
xor
fsubr
mov
cmp
push
shl
ja
adc
jg
dec
push
mov
adc
call
hlt
xchg
xlat
popf
test
mov
push
pop
hlt
sub
add
dec
lea
call
xor
scas
pop
rcr
cmps
(bad)
xchg
and
mov
in
cs
fnstenv
sub
xor
jle
ja
outs
pop
iret
xchg
jmp
repnz
icebp
dec
pop
loope
xchg
and
mov
scas
pop
aam
inc
xor
out
call
adc
inc
xor
(bad)
stos
ret
cmps
xrelease
hlt
imul
fimul
(bad)
push
jmp
ds
mov
cmp
aad
sbb
or
psadbw
jp
data16
sbb
out
pop
leave
xchg
loope
arpl
stos
jbe
mov
xchg
retf
pushf
gs
jb
jbe
and
arpl
jp
push
add
push
ret
mov
sbb
sahf
pop
xchg
adc
sbb
(bad)
xor
or
rol
and
lds
add
in
rcl
dec
xor
cmp
mov
fwait
jge
jbe
dec
mov
mov
aad
adc
jge
cmps
sub
ret
daa
(bad)
cmps
push
inc
jbe
pop
mov
neg
sti
jle
jo
movs
mov
add
jno
inc
call
xor
icebp
mov
call
push
push
lds
mov
imul
in
push
out
mov
inc
setg
cmp
add
push
inc
adc
xlat
push
into
add
ds
call
jae
xor
(bad)
outs
cmp
fst
lock
inc
mov
dec
out
xchg
push
xchg
outs
add
push
and
retf
mov
cmp
retf
(bad)
cmc
inc
jbe
(bad)
xchg
xchg
fnstsw
xchg
push
push
scas
mov
ja
arpl
imul
(bad)
cmp
ss
out
mov
mov
or
cld
xor
(bad)
jmp
fwait
xchg
cmc
ret
xchg
xchg
inc
adc
push
add
cmp
xlat
pop
and
xchg
mov
xchg
outs
or
daa
fistp
jg
js
cmps
addr16
pop
data16
xchg
not
mov
pop
(bad)
out
and
(bad)
loope
xchg
sbb
cmp
(bad)
mov
ret
mov
es
loop
ret
jbe
nop
pop
imul
dec
je
inc
cmps
and
and
out
mov
retf
jae
jmp
daa
js
jne
stos
xlat
daa
sbb
push
mov
imul
push
cmp
mov
jnp
mov
popf
pop
aam
sbb
js
xlat
xchg
aaa
scas
scas
je
jbe
push
test
(bad)
lods
adc
sub
and
mov
inc
dec
test
push
mov
jle
cmps
(bad)
ins
call
movs
lds
add
aas
sbb
ds
and
jbe
call
adc
bound
jb
std
ficom
sub
add
cs
mov
sub
movs
mov
adc
es
fs
xor
repnz
stos
mov
cmp
xor
jbe
adc
xchg
jno
mov
pop
jno
push
mov
inc
xor
mov
out
sub
push
xor
out
xchg
adc
jae
addr16
ds
push
xor
dec
push
sub
leave
push
jecxz
test
stc
mov
inc
push
aad
adc
push
or
xchg
das
dec
(bad)
mov
lods
sbb
pusha
sbb
bound
mov
push
push
lahf
mov
retf
ficomp
bound
xchg
jbe
test
mov
push
loop
xchg
ins
(bad)
cdq
aam
cli
sub
lods
sbb
xchg
and
mov
loope
sbb
xlat
test
lods
or
mov
hlt
xchg
iret
(bad)
push
adc
add
push
nop
cmp
dec
sub
daa
or
push
add
not
or
inc
xchg
leave
xchg
ss
push
inc
inc
push
cmps
cdq
or
mov
out
fild
cmp
fsub
xchg
and
push
xor
adc
cmp
and
addr16
ret
rcl
adc
mul
mov
ja
sub
icebp
mov
data16
mov
mov
je
xchg
scas
sub
and
aas
push
ss
sbb
push
adc
pop
in
jecxz
leave
cdq
cmps
ins
mov
fidivr
cdq
clc
(bad)
and
push
add
mov
push
and
dec
addr16
not
movs
dec
pop
dec
in
(bad)
neg
ss
jle
mov
cs
(bad)
adc
inc
fbstp
je
jmp
daa
(bad)
ins
xor
adc
in
xor
sub
sbb
jp
jb
out
pop
sahf
jae
loopne
out
sbb
adc
call
xchg
push
cmps
xchg
add
sub
fsub
test
pop
loop
xchg
push
cmp
stos
je
addr16
movs
push
mov
mov
std
cmc
(bad)
fbstp
ins
shl
dec
mov
inc
xor
sbb
loopne
inc
lds
into
scas
mov
mov
call
pop
lods
scas
push
shl
push
jnp
lahf
inc
xchg
and
jb
dec
jnp
mov
jp
push
xchg
jo
mov
cmp
add
adc
push
cmp
mov
mov
sub
loope
xchg
xchg
fsub
dec
mov
ret
nop
repz
mov
cmp
cmp
hlt
test
out
jb
popa
adc
pop
jo
out
arpl
xor
(bad)
out
inc
cwde
daa
out
out
shr
sub
xor
and
mov
jmp
or
fadd
add
lgs
cmp
xchg
repz
ja
mov
adc
bound
pop
mov
xchg
pusha
ins
xchg
adc
imul
mov
aas
(bad)
aaa
mov
ja
jnp
stc
dec
sbb
jo
icebp
test
cmps
add
adc
sbb
jne
mov
daa
sbb
or
int3
cmp
add
rol
dec
xor
aas
xor
aaa
add
out
sbb
mov
popa
(bad)
jae
popa
pop
pop
push
cmps
js
(bad)
loopne
push
ds
xor
outs
test
xor
xchg
frstor
inc
out
loopne
lea
mov
push
lock
ret
icebp
sub
fdiv
(bad)
mov
push
clc
ss
clc
xchg
imul
test
pop
xchg
jle
pop
test
inc
xor
cmp
push
sbb
xchg
cmps
adc
fst
push
xchg
pop
sbb
or
test
inc
int
jg
xchg
cmp
iret
test
je
pop
or
mov
(bad)
jmp
xor
pop
arpl
out
mov
mov
mov
xlat
sub
mov
push
ror
test
push
das
pusha
pop
es
mov
(bad)
into
sbb
cmp
data16
enter
mov
push
xchg
aad
lds
xor
pop
outs
stos
mov
js
test
aaa
fidiv
jae
cmp
cwde
and
sub
adc
fld
sbb
add
test
shl
and
xchg
(bad)
popa
sahf
lds
outs
fidivr
push
iret
(bad)
inc
call
xor
call
xchg
jge
dec
movs
push
popf
imul
mov
mov
dec
xacquire
test
mov
inc
imul
cdq
push
and
sub
mov
or
aad
jle
xchg
fcomp
hlt
jne
inc
int3
int
inc
push
fdivr
xor
test
push
xchg
retf
inc
les
pop
mov
data16
ficomp
inc
ins
es
aad
lds
jns
ror
xchg
js
dec
mov
(bad)
into
xchg
xchg
mov
adc
out
aaa
(bad)
jbe
(bad)
push
fidivr
sbb
cmp
int
ja
adc
in
lock
pop
jbe
push
mov
jb
or
mov
loop
mov
adc
xor
daa
dec
sbb
sub
xchg
data16
aas
retf
fsubr
outs
cs
loop
(bad)
imul
(bad)
jge
pop
jmp
(bad)
iret
jbe
inc
mov
(bad)
push
inc
sub
loop
mov
add
imul
inc
in
mov
pop
mov
xor
inc
ret
sub
inc
out
and
in
pop
mul
cld
repz
ficom
mov
jp
push
shr
(bad)
cmc
mov
mov
inc
cwde
xchg
mov
shl
add
data16
cmpps
xchg
scas
mov
jl
stc
ja
sub
shl
pushf
icebp
loopne
cld
or
sub
mov
fadd
pop
cld
aad
add
ja
xlat
jecxz
aaa
aaa
inc
mov
mov
jmp
adc
mov
mov
jnp
xchg
push
aas
push
sbb
and
xor
push
push
mov
out
jl
adc
adc
inc
adc
inc
shl
test
push
sbb
cmp
inc
or
imul
mov
push
cmp
aam
(bad)
pop
scas
dec
imul
sbb
mov
push
loop
test
jbe
mov
xor
jp
xchg
push
push
lock
xchg
adc
call
not
adc
je
inc
lods
push
jbe
test
call
shr
mov
(bad)
sbb
out
mov
cmp
push
mov
inc
stos
(bad)
xchg
test
push
daa
adc
cmp
and
scas
sub
xlat
mov
pusha
cld
mov
daa
ins
imul
push
addr16
int
mov
push
out
jne
arpl
jo
stc
mov
sbb
test
in
xor
adc
push
cmps
mov
dec
ja
sti
sbb
adc
jmp
mov
sbb
ins
mov
mov
cmp
and
shl
and
rcl
stos
shr
hlt
add
stc
mov
mov
rol
dec
in
or
add
push
xor
add
push
pop
enter
pushf
pushf
and
and
in
pop
adc
(bad)
repnz
ret
test
or
inc
mov
xchg
jnp
xchg
inc
nop
dec
popf
cwde
xchg
ja
add
ss
rol
in
shl
xor
mov
aas
cs
(bad)
cmps
cmps
mov
push
lahf
imul
mov
adc
dec
push
inc
inc
in
inc
ss
test
arpl
loope
in
jb
mov
inc
and
cmps
and
ja
movs
mov
rol
in
jle
popf
fnstcw
ss
out
xchg
imul
xlat
xor
and
cmp
bound
std
inc
fld
leave
fs
and
ins
adc
inc
inc
aas
ins
fidiv
in
addr16
xchg
xchg
lock
cmps
repnz
in
mov
daa
mov
loop
xchg
arpl
push
adc
ficom
cmps
jbe
nop
psrlq
neg
call
jg
mov
xor
addr16
sbb
inc
mov
inc
xchg
push
pushf
stos
adc
xor
mov
adc
aaa
cdq
retf
mov
xchg
push
xchg
aad
push
imul
xor
adc
push
scas
pop
fsubr
(bad)
cpuid
test
rcl
mov
adc
mov
push
jne
pop
out
cmp
sbb
xchg
xchg
adc
adc
inc
popf
inc
add
mov
xor
ss
es
div
xchg
mov
sti
xchg
push
in
movs
sub
(bad)
out
mov
xchg
iret
push
mov
adc
pop
and
div
loop
bnd
add
loope
stos
inc
cmp
add
shr
icebp
scas
cli
inc
push
aad
fstp
sub
in
xlat
shl
push
pop
inc
(bad)
push
xchg
ret
mov
out
mov
sti
(bad)
clc
int3
rcr
stc
shl
mov
fst
mov
imul
in
cld
mov
mov
pop
dec
pop
adc
ja
xchg
into
(bad)
ss
inc
and
jb
or
xchg
and
jg
(bad)
mov
(bad)
(bad)
xlat
(bad)
lahf
and
cmp
inc
test
push
(bad)
icebp
dec
(bad)
push
xchg
dec
sbb
or
loop
fcomi
rol
pop
shl
push
push
mov
sub
push
repz
dec
and
arpl
(bad)
xchg
push
(bad)
lock
push
test
mov
mov
popa
jb
xchg
(bad)
std
mov
in
fs
repz
pop
push
ins
scas
sub
dec
fild
sub
call
cmp
push
cmps
ror
and
mov
push
mov
sub
jns
fbld
inc
dec
jmp
dec
lock
les
mov
adc
pop
mov
hlt
rcl
sahf
fwait
xchg
into
addr16
nop
in
mov
mov
imul
test
push
test
and
dec
mov
or
jns
xchg
push
pop
shl
inc
ja
arpl
vshufps
push
pop
xlat
sub
mov
cmp
mov
enter
mov
or
sub
pop
aaa
cwde
jecxz
cdq
jmp
loop
cld
icebp
cmp
inc
retf
andnps
xchg
pop
add
push
out
mov
xor
ins
sbb
mov
pop
ss
fs
push
test
inc
adc
push
push
adc
inc
sub
retf
cmps
test
or
or
rol
xchg
push
out
inc
mov
dec
inc
xchg
or
push
fldenv
or
cmc
shl
cld
bound
jo
push
shr
test
jge
shld
mov
out
pop
enter
ins
imul
push
in
loope
inc
mov
loope
mov
jno
pop
push
rcr
pop
cmps
std
sub
xchg
push
mov
ja
dec
jnp
inc
push
fcom
aaa
cmp
push
enter
(bad)
out
and
inc
int3
jae
gs
lock
ret
xchg
push
in
retf
pop
loope
(bad)
in
imul
sar
mov
push
cwde
cwde
cmps
es
test
jmp
and
pop
push
aam
inc
addr16
inc
in
repz
push
rcr
fcmovnbe
shr
inc
mov
ror
cmps
pop
(bad)
sub
adc
sub
sqrtps
push
mov
loope
(bad)
sub
mov
nop
mov
pop
cld
mov
xor
sub
aaa
jo
push
jb
xor
pop
scas
stc
inc
xchg
dec
push
sar
sbb
adc
mov
mov
cmp
lds
dec
pusha
xchg
dec
xor
cld
inc
and
cmp
(bad)
jge
cmps
sbb
cwde
imul
push
cmps
je
pop
jne
xlat
xchg
inc
in
daa
push
shr
push
lods
push
fisubr
ins
sbb
loop
stos
jg
cmps
cmp
(bad)
xor
je
adc
xchg
popa
sti
cdq
jge
adc
sbb
(bad)
aad
inc
xchg
jbe
jbe
sbb
sub
lods
and
into
push
hlt
addr16
mov
xor
push
lds
jg
outs
jbe
daa
sub
xchg
out
jb
jmp
mov
or
mov
(bad)
push
pop
ins
inc
fbstp
retf
sbb
sub
mov
les
cmp
test
stos
ss
shl
outs
data16
inc
adc
fmul
sub
push
repnz
cmps
xchg
in
add
inc
mov
(bad)
jns
mov
fisub
movs
iret
or
not
cmp
scas
xlat
mov
cmp
jge
add
nop
mov
push
in
jb
jno
xchg
and
pusha
out
or
xor
ja
les
fmul
imul
shl
cdq
arpl
pop
dec
sub
jl
or
xor
call
and
leave
rol
pop
cmp
sar
lahf
outs
fs
pop
ret
adc
dec
fist
cmps
xchg
and
sbb
retf
push
lahf
cmp
push
push
out
sahf
imul
je
les
jb
inc
mov
and
xchg
pop
jbe
xor
iret
sub
das
(bad)
in
ret
jbe
sbb
sahf
nop
fsubp
imul
push
fsub
xchg
daa
in
inc
sbb
jmp
(bad)
jb
cmp
push
gs
and
add
inc
cmc
addr16
aad
aaa
and
inc
pushw
jp
add
mov
out
cmps
cmc
xor
mov
and
cwde
jmp
mov
loopne
(bad)
push
jb
mov
in
or
call
dec
or
data16
adc
sti
jecxz
loop
inc
xor
and
cmovae
push
test
sti
icebp
out
mov
xlat
dec
idiv
mov
jge
bound
mov
adc
mov
mov
or
sbb
mov
sbb
aam
xchg
mul
out
xor
(bad)
movs
mov
xlat
enter
(bad)
lahf
inc
xchg
mov
sub
push
(bad)
jle
rcl
(bad)
fldcw
arpl
jecxz
pop
adc
repz
xchg
(bad)
loopne
or
push
xor
aaa
inc
add
jbe
inc
sbb
cmp
shl
and
inc
xchg
push
xor
mov
lock
push
(bad)
mov
test
aaa
cli
outs
jbe
jb
cmp
sbb
stos
retf
and
jne
sub
out
test
adc
mov
inc
cli
pop
mov
stc
xchg
push
cwde
les
xchg
push
sbb
mov
je
mov
(bad)
shl
loope
push
into
inc
movs
lods
ins
xchg
cdq
xor
pop
mov
out
ja
lods
(bad)
in
add
and
sti
xor
sub
neg
outs
call
mov
cmp
push
outs
stc
or
mov
call
adc
ret
xchg
and
inc
test
push
shl
pop
and
stos
sahf
fdivr
inc
cmp
out
lock
fwait
rcl
jo
mov
movs
je
nop
inc
outs
mov
mov
mov
or
xchg
push
xor
inc
movs
xchg
xor
jg
ja
out
add
inc
(bad)
sbb
movs
call
xor
cmp
sbb
inc
sbb
jae
inc
xchg
dec
fcmovb
or
push
cmps
add
out
fs
test
or
add
adc
mov
lds
(bad)
hlt
mov
mov
push
pop
cdq
repnz
push
movs
mov
mov
in
lahf
inc
pop
adc
lock
dec
inc
movs
out
loop
ds
sub
mov
jnp
out
adc
iret
xor
repz
push
xchg
inc
fisub
xchg
push
in
ins
sti
nop
fist
ficom
jbe
xchg
mov
xchg
mov
cmps
xchg
shr
cld
and
fcomip
jne
clc
xor
bswap
xchg
cmp
mov
inc
xchg
(bad)
jg
loop
neg
jle
(bad)
push
daa
sub
cmp
cmp
ja
ret
iret
dec
adc
inc
mov
out
mov
sub
mov
mov
xor
lea
xchg
mov
pop
mov
fucomip
cmp
add
jne
sbb
not
xchg
ss
mov
shl
mov
popf
inc
add
dec
cmp
(bad)
inc
jle
xor
out
out
add
push
xchg
into
push
mov
sahf
push
(bad)
mov
neg
lock
mov
dec
sar
add
add
push
outs
and
cmp
jb
imul
xlat
xor
ret
mov
call
jp
inc
add
and
mov
and
mov
mov
pop
outs
ins
in
test
inc
jmp
push
mov
test
xchg
mov
or
push
mov
(bad)
mov
xlat
jmp
out
cmp
cmps
neg
xchg
pushf
push
mov
leave
jbe
cmp
add
into
pop
sbb
mov
mov
dec
lds
shr
jge
adc
in
pop
cmp
sub
in
imul
loope
outs
addr16
xchg
addr16
ret
in
lock
mov
xlat
aam
and
out
aaa
jns
and
imul
push
and
ja
add
cmp
pop
cmps
push
fwait
xor
jp
ins
and
dec
pop
repnz
lds
xor
shl
loopne
icebp
and
js
pop
mov
daa
call
pushf
inc
inc
test
in
(bad)
or
fnstenv
jmp
leave
movs
mov
jo
dec
xor
or
sbb
into
inc
aaa
(bad)
xor
ins
push
cld
pop
test
sbb
fild
xor
and
mov
jg
movs
push
inc
add
test
jo
arpl
js
xchg
sub
mov
in
out
ror
mul
hlt
nop
xchg
and
xor
xchg
inc
fs
lea
lds
push
sub
pop
jmp
rcl
push
sub
xchg
xor
dec
aam
ret
pop
pop
cmps
sbb
clc
adc
mov
aam
(bad)
mov
ins
jns
jl
inc
push
xor
stos
dec
fcom
pop
mov
sahf
clc
ja
ja
cmp
xor
sbb
xor
inc
jnp
cmps
out
xchg
pop
xlat
add
push
lds
mov
xchg
sub
mov
pop
out
adc
inc
and
(bad)
fsub
pop
push
aas
pop
sbb
pop
mov
add
sbb
sub
push
mov
ficom
shl
fisubr
(bad)
pop
(bad)
jne
xchg
outs
mov
mov
iret
pop
push
dec
jne
dec
cmc
mov
out
pop
stc
and
xchg
fidivr
push
movs
sbb
nop
push
dec
dec
ret
shr
sar
inc
aaa
not
inc
push
inc
jne
cmps
cmp
jno
vpshlb
mul
and
xchg
adc
mov
push
jle
xor
addr16
xor
imul
std
leave
pop
jbe
and
dec
inc
test
addr16
popf
xchg
aaa
(bad)
scas
mov
test
dec
ja
test
cmp
mul
dec
and
lds
dec
push
test
push
retf
xchg
out
(bad)
clc
cmps
fbstp
hlt
scas
or
mov
mov
adc
pop
push
mov
cwde
xlat
adc
pop
push
js
cmps
inc
lds
pop
push
repnz
outs
adc
inc
gs
dec
inc
cs
shl
imul
sbb
sbb
call
adc
fs
and
adc
in
or
ins
psadbw
adc
out
fmul
ror
or
jge
add
cmps
mov
pop
je
shr
cli
or
ins
sbb
jp
mov
outs
iret
loope
jae
adc
mov
pusha
out
pusha
adc
push
les
or
dec
imul
gs
es
inc
inc
push
test
push
aas
addr16
push
scas
jecxz
bound
mov
cs
sub
(bad)
iret
sbb
mov
pop
pop
push
sahf
push
mov
cmps
cmp
out
push
imul
call
sub
movs
ins
mov
(bad)
pop
aam
xor
mov
mov
and
sub
mov
cmp
fstp
jae
pop
mov
stc
mov
xor
xchg
(bad)
ja
xchg
xlat
ins
fbld
pusha
inc
xchg
pop
mov
mov
call
pop
push
stos
adc
inc
xor
(bad)
jno
mov
cmps
cdq
es
or
ret
jl
and
xor
or
add
sub
shl
sbb
int3
add
dec
and
pop
push
or
inc
test
outs
push
scas
xchg
cld
pop
lahf
mov
mul
push
cmps
xchg
ss
daa
mov
aam
mov
xor
fcom
enter
inc
xchg
push
pop
mov
sub
fild
jb
icebp
call
movs
fisub
loopne
sahf
je
(bad)
bound
xor
add
mov
shl
fldenv
xlat
addr16
sub
push
sbb
push
xor
es
in
into
add
(bad)
ds
push
jmp
push
cmp
aad
loope
rcl
repz
add
or
idiv
or
pop
sub
mov
imul
cmp
sbb
mov
or
int
mov
loop
xchg
push
shl
cmps
imul
mov
sub
sub
push
pop
xor
es
mov
mov
jae
or
test
mov
cmps
xor
repz
mov
(bad)
repz
ins
shl
daa
nop
jecxz
inc
adc
ss
mov
ficom
test
not
fldcw
fimul
hlt
out
push
mov
adc
xor
(bad)
(bad)
sbb
aaa
cmc
inc
inc
jae
jmp
or
push
scas
movs
(bad)
movs
mov
pusha
(bad)
mov
cwde
sbb
jno
xchg
push
(bad)
aam
iret
mov
push
aam
daa
scas
and
mov
dec
out
push
addr16
pop
jns
ja
je
adc
push
pop
jecxz
cmp
popa
int3
cmps
cmc
xor
push
push
pop
xlat
mov
sar
mov
cdq
or
in
hlt
aad
rol
push
sbb
push
jo
xchg
stos
lods
ss
fist
dec
into
dec
mov
or
outs
inc
out
add
push
cmps
add
xchg
pop
test
pop
leave
pop
aaa
and
push
ja
pop
sub
movs
sbb
loopne
ja
nop
inc
mov
pop
xchg
inc
mov
es
and
fbld
(bad)
rcl
rol
jmp
push
iret
pop
shl
int
out
fcmovnb
test
add
dec
xor
pop
sub
mov
pop
and
mov
mov
(bad)
out
in
jbe
test
push
lds
inc
test
test
fdivr
int3
or
mov
leave
pop
mov
sbb
adc
push
scas
inc
shl
pop
and
mov
idiv
in
cmp
cmp
inc
xchg
repz
sub
fdiv
ja
lahf
sbb
xor
ss
mov
mov
push
sahf
push
sbb
scas
ss
push
add
sar
mov
pop
iret
add
xor
push
inc
cwde
cwde
pop
cmps
sub
cmp
sbb
sub
test
rol
sahf
push
xlat
out
push
inc
das
out
loope
inc
dec
mov
inc
mov
and
dec
ins
add
lds
sti
in
push
dec
inc
xchg
stos
mov
adc
daa
pop
and
adc
out
mov
rol
sbb
sbb
xlat
xchg
mov
movs
mov
scas
sbb
mov
in
mov
or
cmps
push
mov
sbb
and
pop
adc
xchg
test
ret
(bad)
ss
outs
je
ret
adc
sub
xchg
shl
test
enter
das
ins
jno
jno
xchg
into
add
fs
ja
inc
(bad)
in
push
lods
add
and
cmp
lods
je
inc
pop
ss
jo
jbe
fwait
xchg
ds
and
ret
mov
xlat
clc
mov
pop
sbb
iret
aaa
mov
xchg
xlat
ins
pop
cmps
ss
and
cli
shr
add
sub
inc
and
mov
sub
add
pushf
pop
jae
jecxz
or
int
jne
pop
and
sbb
hlt
shr
inc
retf
in
jg
popa
mov
cmp
sub
dec
inc
or
std
dec
xchg
(bad)
pop
lds
mov
cmp
mov
xchg
repnz
(bad)
dec
out
cmps
inc
repnz
fdivr
sub
js
int3
into
stos
(bad)
mov
dec
inc
mov
cmp
sar
daa
mov
jmp
cld
aas
and
dec
xlat
aaa
call
imul
ss
fild
repz
jg
mov
inc
addr16
dec
(bad)
push
rcr
outs
xchg
fs
cmp
das
ret
pop
dec
outs
jg
dec
sub
or
sbb
push
rol
popa
mov
xchg
xchg
imul
push
adc
ins
arpl
mov
out
jl
xchg
mov
loop
imul
inc
vshufps
and
movs
inc
rcl
scas
sbb
call
dec
pop
jbe
cmps
jne
push
enter
mov
iret
dec
stc
and
cmp
sub
mov
pop
xor
leave
fcmovu
fs
loop
xor
icebp
dec
nop
mov
(bad)
push
imul
sbb
push
(bad)
jg
push
mov
or
stos
iret
xabort
cmp
mov
addr16
std
pop
push
mov
push
push
inc
out
gs
or
xchg
stos
xchg
out
ss
gs
jne
push
ja
ja
mov
dec
add
std
push
clc
push
xor
stos
push
fidiv
fsub
scas
pop
shr
push
gs
(bad)
jl
sub
mov
pop
ret
or
inc
mov
(bad)
jne
jmp
push
pusha
inc
pop
cmp
mov
jecxz
daa
repnz
test
inc
xlat
mov
movs
fs
add
xlat
add
lods
xchg
pop
push
cmp
inc
pop
dec
cwde
aas
and
std
test
sti
mov
mov
outs
jg
and
daa
cmp
xor
adc
push
call
daa
pop
int3
cmp
jecxz
xor
xchg
(bad)
jns
pop
test
out
mov
dec
pop
addr16
je
mov
in
rcr
bound
bound
jae
outs
inc
popf
xchg
adc
loopne
add
(bad)
fidiv
into
out
hlt
mov
ror
inc
out
inc
aas
fcmovnbe
inc
pushf
mov
add
jecxz
push
xchg
fwait
adc
addr16
sbb
in
jnp
adc
mov
xor
daa
adc
sbb
sub
sbb
(bad)
data16
imul
clc
mov
mov
lods
mov
retf
pop
test
mov
pusha
push
out
lahf
loope
idiv
div
in
mov
call
add
out
repnz
ret
fdiv
xor
jo
test
dec
inc
std
addr16
sbb
aam
xor
(bad)
and
mov
in
test
xchg
push
test
ss
add
mov
inc
jb
sbb
xchg
add
ins
data16
jo
push
push
int3
es
cli
adc
scas
and
retf
xchg
xchg
lock
daa
rol
adc
leave
loope
push
cwde
imul
mov
xchg
outs
inc
xor
sub
add
icebp
push
test
mov
adc
mov
jg
sbb
cld
ror
fs
fisub
adc
fidivr
mov
mov
pop
cmps
pop
clc
push
(bad)
mul
stc
and
dec
jb
add
cmps
and
or
nop
sbb
sbb
pop
into
inc
add
push
adc
or
mov
add
or
dec
dec
mov
mov
fwait
jo
adc
push
mov
movs
or
xchg
idiv
out
les
cmp
fst
addr16
xchg
xor
lds
sar
push
test
mov
xchg
ja
in
inc
cdq
jno
mov
out
pop
sbb
or
pop
push
mov
ret
push
sbb
push
popa
sub
iret
mov
sti
das
inc
mov
ds
aas
fs
scas
ins
mov
xchg
lock
ja
mov
pop
xor
mov
xchg
(bad)
cmps
movs
(bad)
mov
jno
cdq
jo
inc
ds
jne
out
push
sar
mov
dec
call
mov
imul
test
(bad)
mov
in
addr16
mov
daa
and
jle
xchg
xchg
(bad)
lods
ins
inc
pop
mov
fidivr
aad
movs
loopne
mov
(bad)
push
xchg
mov
in
sub
add
xor
xchg
outs
and
pusha
jl
add
inc
in
cmp
jnp
out
dec
cmp
fadd
lods
and
scas
xor
(bad)
test
in
xchg
aas
scas
inc
mov
out
push
popa
sti
cmc
mov
cld
(bad)
arpl
jbe
xchg
cmc
sub
push
addr16
cmps
(bad)
and
aad
(bad)
loop
aad
(bad)
cmps
test
mov
mov
(bad)
add
and
sub
mov
adc
daa
out
(bad)
hlt
dec
add
jge
mov
dec
mov
aam
loop
inc
lods
dec
shl
inc
pop
jmp
das
aaa
dec
jne
sbb
push
test
jg
cmp
inc
repz
das
shl
inc
loope
xlat
(bad)
aam
sub
xor
jmp
inc
movs
cmp
or
or
imul
inc
mov
gs
aad
cmps
dec
xchg
cmps
(bad)
mov
and
fistp
(bad)
dec
aaa
push
in
out
inc
ret
jnp
add
jb
cld
in
xchg
lea
lahf
fdivr
(bad)
jl
ret
mov
pop
sbb
(bad)
inc
jae
(bad)
or
mov
sub
es
pusha
dec
(bad)
(bad)
sub
outs
popa
mov
js
add
xor
add
mov
daa
jmp
jle
clc
retf
and
loope
push
repz
stos
push
out
sbb
repz
or
in
mov
xor
(bad)
mov
pop
xchg
pop
or
mov
inc
daa
inc
rol
lea
pop
aaa
inc
pop
jecxz
pop
sbb
das
inc
(bad)
rcl
mov
push
cmps
icebp
mov
add
adc
mov
push
dec
xor
mov
cmps
out
out
xchg
jecxz
inc
sub
dec
bound
and
push
push
adc
dec
adc
inc
shl
popf
xchg
mov
inc
stos
neg
mov
dec
out
into
push
jbe
nop
rcr
add
and
cdq
lahf
add
push
xchg
pop
jb
jmp
jmp
mov
cmps
pop
xlat
mov
push
or
shl
sub
rcl
punpckhdq
mov
cmp
add
cmp
add
ret
pop
iret
imul
cmps
scas
pop
imul
mov
daa
jae
aam
retf
jle
cmps
push
cdq
jo
test
lea
inc
sub
push
jbe
shl
pop
inc
div
test
inc
lods
dec
in
ds
jnp
dec
aaa
mov
xchg
lahf
push
jg
add
push
movs
mov
mov
sub
xlat
mov
sbb
lock
mov
jb
in
jp
jge
lods
test
in
xlat
out
jae
mov
xor
push
mov
pop
jp
test
cmp
popf
and
enter
ins
xchg
outs
outs
div
test
jbe
dec
fcomp
xchg
xchg
ja
aaa
push
jg
mov
jno
xchg
jne
xlat
fcom
jne
inc
test
ds
mov
std
test
nop
cs
ret
and
rol
test
ficomp
int3
rcl
jcxz
or
(bad)
mov
cmp
(bad)
outs
enter
imul
push
fst
jg
add
cmp
jae
dec
sbb
push
jae
repz
loope
xchg
(bad)
or
(bad)
pop
sti
loopne
aad
cld
adc
and
rol
addr16
xchg
xor
sahf
mov
inc
pop
pop
add
out
mov
es
movs
call
lds
ja
jl
jbe
sbb
mov
adc
mul
pusha
fnstsw
arpl
pusha
cwde
pop
ret
and
aam
and
jo
and
aaa
mov
mov
ficom
xchg
fwait
jbe
(bad)
pop
(bad)
sbb
jmp
dec
inc
inc
pop
or
lods
imul
xchg
pop
retf
push
adc
scas
daa
xlat
mov
pusha
sub
add
or
mov
dec
dec
es
je
jmp
aas
cmps
into
jo
bnd
xor
inc
inc
dec
sti
mov
daa
xchg
push
movs
lds
ss
jnp
and
sar
test
inc
loop
pop
fistp
or
ret
fadd
mov
(bad)
imul
aad
cld
retf
aad
inc
ss
add
cmps
xor
inc
cmp
add
repnz
jbe
lock
std
sbb
cdq
es
adc
and
arpl
pop
ja
push
fsubr
dec
jno
mov
pop
(bad)
sbb
push
dec
cmp
push
mov
out
add
pop
inc
inc
into
pop
mov
mov
inc
psubusw
loop
push
sbb
stc
in
mov
dec
mov
push
adc
mov
fsubp
fadd
xchg
lods
push
mov
imul
cs
inc
push
div
dec
mov
cmp
out
test
dec
hlt
movzx
push
adc
mov
push
adc
mov
sbb
xchg
push
(bad)
sbb
rcl
(bad)
jmp
xchg
loope
addr16
pop
mov
inc
not
icebp
xor
jle
test
push
mov
ror
fnsave
mov
imul
xlat
push
add
xchg
push
call
and
mov
jnp
jno
jne
or
adc
fcmovne
(bad)
xor
xor
jge
es
(bad)
xchg
sub
leave
mov
popa
jo
mov
dec
daa
outs
cmp
xor
push
jne
jecxz
adc
xor
fsub
and
cli
popf
std
or
movs
mul
es
sahf
pop
mov
push
in
xor
retf
sub
rol
test
sub
mov
inc
push
(bad)
es
repnz
aas
push
ret
or
hlt
shl
jmp
push
jno
daa
jnp
mov
mov
adc
or
rcr
pop
pop
fld
out
popa
mov
mov
pop
dec
xchg
xor
pop
sub
data16
xchg
int
enter
and
cmp
xlat
mov
or
sbb
and
jmp
pusha
shl
or
or
sub
call
mov
ja
mov
loopne
outs
gs
(bad)
or
dec
(bad)
inc
pop
cmps
aam
fnsave
add
stos
test
pop
pop
icebp
in
rcl
push
inc
sbb
add
xchg
xchg
loopne
imul
add
inc
aas
dec
cmp
es
pop
int3
loop
cdq
inc
aaa
mov
pop
shl
push
jmp
cmps
jecxz
pop
mov
jmp
cdq
or
out
pop
xor
dec
test
sbb
adc
dec
inc
push
pop
add
mov
adc
outs
scas
or
xlat
aas
add
sti
pushf
out
mov
aaa
and
aam
cmps
inc
ja
mov
icebp
fsubrp
inc
add
or
xchg
fsubr
(bad)
and
mov
adc
dec
xchg
pop
xchg
jle
outs
js
dec
mov
not
mov
adc
test
pop
and
cld
jns
aaa
mov
xlat
out
daa
imul
cmps
mov
push
jae
pop
retf
mov
sbb
fld
ins
jmp
fs
not
ja
adc
jle
push
push
xchg
push
xor
xchg
mov
ja
push
(bad)
xchg
lock
test
dec
mov
or
jae
xchg
test
ret
push
aad
call
pusha
fstp
repz
dec
or
ret
ja
jno
(bad)
dec
xchg
dec
rol
and
mov
add
adc
push
mov
jns
lods
(bad)
stc
movs
mov
fwait
in
je
call
inc
or
jmp
es
add
xchg
xchg
dec
(bad)
xor
jb
and
mov
xor
jbe
add
xchg
fst
dec
jns
cdq
inc
jne
push
cmps
sub
fistp
out
xchg
mov
fidivr
pop
jp
mov
push
jbe
(bad)
or
add
out
loopne
dec
inc
xchg
out
push
ret
xchg
mov
into
push
ror
inc
ss
call
mov
leave
push
push
xchg
xor
and
inc
into
xlat
enter
or
sahf
pop
jg
jbe
fisttp
mov
or
loope
pop
out
gs
ja
fcom
or
pusha
pop
pop
fdivp
jmp
aaa
inc
adc
jge
mov
data16
xchg
inc
ret
pusha
add
pop
jbe
add
das
stc
xchg
mov
clc
not
test
in
addr16
add
jae
repnz
cmp
jno
mov
cmp
(bad)
out
idiv
pop
inc
and
aad
iret
jmp
shl
in
adc
mov
movs
push
dec
jne
pop
pop
adc
aas
adc
ja
gs
lock
and
shr
xchg
in
aam
inc
ss
xchg
add
aad
pop
sub
out
jge
arpl
jnp
mov
not
push
in
or
loope
mov
fimul
adc
xor
cs
test
in
xchg
cmps
jbe
mov
jnp
movs
inc
mov
dec
xchg
inc
push
(bad)
ss
inc
sbb
out
push
es
and
imul
mov
int3
loop
out
rol
mov
dec
lods
jae
mov
mov
push
jb
bound
test
mov
bound
xor
inc
and
xor
inc
(bad)
and
sbb
ret
pop
in
push
les
out
dec
push
push
mov
addr16
xchg
aad
(bad)
(bad)
push
adc
(bad)
in
mov
jecxz
jge
xchg
int
adc
ret
inc
shl
(bad)
sti
push
sub
pop
add
clc
adc
or
daa
lods
inc
push
adc
jo
popf
out
adc
and
in
pop
push
push
mov
jg
push
test
cmove
int3
mov
(bad)
rol
loop
adc
xor
movs
test
rcl
mov
xchg
or
test
mov
push
cs
(bad)
push
imul
mov
aad
test
dec
(bad)
repnz
push
out
outs
sbb
inc
cli
mov
cmc
das
aad
xchg
mov
daa
dec
mov
push
mov
ss
out
lods
mov
mov
dec
xor
mov
add
mov
push
or
jl
in
and
fidiv
loop
or
clc
adc
adc
and
outs
inc
and
sub
in
shl
nop
shl
push
stos
sub
jmp
test
push
dec
mov
xor
adc
(bad)
jns
and
push
outs
pop
and
and
(bad)
call
xchg
xchg
leave
iret
mov
pop
add
inc
jbe
or
jb
fs
push
out
add
cmp
lea
popf
int3
xchg
dec
inc
popa
xor
mov
repnz
mov
sub
mov
push
jo
sub
mov
cmps
call
(bad)
call
xchg
xchg
pop
outs
xchg
jns
push
aam
stos
xor
xchg
sbb
push
in
jle
(bad)
cmp
and
cmp
or
or
cmps
retf
push
add
stc
ja
push
adc
cmp
xchg
les
imul
pop
xchg
sbb
not
not
lahf
push
hlt
outs
xor
push
outs
test
ja
(bad)
adc
rcr
and
test
(bad)
sbb
xchg
xchg
pop
jmp
nop
xor
jmp
test
inc
fs
cmp
fcomp
inc
out
push
xchg
out
push
sbb
sub
or
popf
inc
aas
ins
inc
in
jp
xor
out
mov
ret
xchg
ror
imul
jb
mov
imul
fcom
out
retf
and
or
int
sub
cmp
popf
jge
popa
out
add
neg
jmp
adc
ins
es
add
(bad)
sbb
mov
xchg
test
mov
lds
xchg
out
dec
jecxz
inc
stc
gs
or
and
pop
retf
(bad)
fist
fcom
dec
ror
out
cmps
push
stos
jl
push
retf
mov
out
shl
xchg
rcl
mov
out
inc
aas
dec
out
xchg
jne
iret
cmp
add
inc
sbb
addr16
mov
xor
fdiv
scas
rcr
xlat
lods
aam
mov
pop
mov
jmp
push
(bad)
push
sbb
hlt
out
xchg
xor
rol
int3
pop
inc
aaa
push
stos
movs
out
retf
ins
jns
pop
imul
push
adc
fstp
lock
push
nop
dec
(bad)
pop
pop
sub
lods
(bad)
not
xchg
mov
repnz
mov
test
ins
xor
sub
push
add
daa
fisttp
in
aad
(bad)
es
cmp
mov
es
pop
pop
xlat
and
daa
dec
ja
mov
stos
sti
xor
imul
fistp
jmp
mov
dec
in
enter
cmp
aas
es
inc
push
out
in
pop
cmps
and
push
jl
jae
pop
inc
je
mov
cmp
sub
lahf
push
add
and
dec
lods
push
adc
jmp
mov
push
out
repz
clc
xlat
call
jecxz
pop
popf
adc
cmc
push
xchg
add
push
(bad)
int
aaa
mov
jae
and
ja
test
ss
mov
adc
push
lods
pop
mov
daa
in
dec
dec
adc
lea
xchg
aam
shl
lds
cli
jmp
daa
lds
mul
out
hlt
adc
mov
inc
ret
div
outs
ficom
nop
mov
xchg
mov
and
popf
outs
inc
add
fist
pop
retf
mov
out
adc
addr16
cld
loop
jae
test
pop
test
mul
pop
fmul
dec
jno
inc
add
jbe
not
scas
push
fcomp
pop
into
adc
xchg
es
adc
addr16
add
mov
xlat
or
out
stc
ss
(bad)
aas
ret
push
into
pop
ret
jl
test
mov
icebp
mov
xchg
nop
sub
or
xchg
mov
xchg
push
cmc
int3
mov
fmul
push
jbe
xor
sub
ds
cdq
es
ret
pop
repz
inc
scas
lods
mov
test
mov
sub
bound
out
inc
mov
pop
leave
out
inc
je
jbe
or
popf
shl
mov
adc
idiv
inc
(bad)
mov
inc
pop
push
ss
rcr
daa
xchg
sar
inc
push
mov
repnz
xchg
push
pcmpgtd
ret
scas
push
cmp
lahf
xchg
xor
imul
mov
(bad)
fiadd
in
(bad)
xor
push
cmps
push
aam
add
inc
mov
cmp
xlat
stos
mov
nop
fnsave
xlat
push
cmp
jmp
jp
sahf
outs
call
(bad)
out
xor
cmp
push
sub
push
xchg
int3
xchg
nop
mov
mov
xor
out
jp
xchg
ins
push
(bad)
sub
mov
call
stc
pop
mov
pusha
or
pop
int3
dec
mov
mov
push
das
mov
pop
mov
cld
stos
xor
dec
pop
or
xlat
dec
inc
push
std
push
xchg
mov
(bad)
popa
call
addr16
popf
pop
jb
popf
loope
call
push
inc
(bad)
out
jmp
mov
data16
xlat
pop
dec
repz
aad
pop
xor
mov
ficomp
mov
aas
jbe
pop
cs
xlat
xor
jl
push
ret
cmc
imul
mov
out
repnz
mov
mov
fisubr
idiv
test
loopne
push
push
(bad)
test
es
pop
daa
shr
mov
loope
sub
imul
aaa
jns
mov
daa
mov
mov
test
loopne
xor
sub
scas
xchg
xor
loope
jns
frstor
mov
pusha
sti
inc
adc
scas
push
xlat
(bad)
xor
sub
xchg
enter
cli
call
stos
es
ret
ss
xchg
imul
gs
mov
ds
push
mov
push
ins
into
movs
xchg
out
and
adc
sti
or
loope
jle
ret
sub
xchg
ret
daa
and
aad
je
(bad)
fisubr
scas
sbb
scas
adc
mov
cmps
in
div
(bad)
cmc
sahf
jmp
dec
popa
(bad)
adc
xacquire
push
cmc
pop
xchg
push
in
pop
ss
push
sbb
mov
add
movs
in
mov
ret
adc
outs
push
mov
push
(bad)
mov
cwde
push
xor
push
add
cmp
in
or
in
lock
mov
jp
and
mov
dec
push
mov
pushf
mov
pop
nop
aam
addr16
pop
repnz
add
lock
xchg
enter
lods
xor
and
cmc
jmp
push
cmps
mov
or
imul
dec
gs
mov
imul
pop
shl
sahf
or
pop
fadd
outs
push
dec
inc
std
fadd
dec
iret
mov
arpl
inc
jb
xchg
jecxz
xchg
mov
popf
add
adc
push
es
cdq
movs
push
xchg
jno
push
xchg
ss
inc
fbstp
cmc
jl
es
bound
mov
arpl
mov
cdq
rcl
xchg
mov
(bad)
adc
sahf
outs
and
dec
cdq
(bad)
lock
pop
mov
pop
push
sbb
jns
leave
out
pop
and
popa
enter
in
xchg
cmp
push
jmp
jle
and
inc
jge
cmc
ret
ins
jmp
(bad)
lds
(bad)
dec
cmp
not
shl
ss
fdivr
inc
xchg
push
push
mov
faddp
inc
add
push
mov
xchg
cmp
xchg
jno
imul
retf
out
popa
rcl
pop
ss
xchg
(bad)
jns
in
lahf
call
xchg
shl
pop
inc
pop
push
or
(bad)
ja
(bad)
xchg
jnp
xor
adc
xchg
neg
xchg
fldcw
shl
sub
xor
inc
xor
pop
push
shl
cwde
mov
(bad)
je
sub
mov
loop
or
xor
push
gs
or
or
daa
stos
daa
lods
outs
pop
aad
movntq
push
in
add
fist
ret
and
(bad)
in
adc
push
inc
mov
(bad)
xchg
outs
add
cmps
rcr
xchg
push
cdq
dec
sub
sbb
xchg
push
call
(bad)
fild
and
fcmove
cwde
imul
jbe
pop
xchg
shl
dec
mov
ins
cmp
cmps
int3
xchg
mov
cwde
cmp
mov
dec
pop
jbe
out
sbb
daa
jne
jp
ins
push
or
daa
fidivr
popf
rol
out
cmp
or
mov
iret
xchg
(bad)
xchg
add
dec
push
xchg
in
(bad)
mov
jbe
out
fild
sbb
not
nop
mov
sbb
(bad)
pop
cdq
dec
pop
retf
push
jns
jb
gs
inc
std
xchg
xchg
aam
push
aam
and
test
sbb
(bad)
call
adc
loope
inc
pop
push
pop
(bad)
jns
xchg
jae
aam
push
ja
outs
imul
repnz
adc
xlat
cdq
inc
mov
es
adc
dec
pusha
fcomi
lock
cmps
and
xchg
sub
cmps
inc
xchg
out
aas
repz
test
xor
addr16
xchg
(bad)
xchg
or
mov
je
or
xor
(bad)
aam
cmp
push
cmc
sbb
arpl
push
push
outs
or
jne
and
mov
cmc
clc
(bad)
xchg
xlat
cdq
xchg
sysexit
inc
inc
ret
push
fidivr
ret
je
shrd
(bad)
daa
mov
in
(bad)
(bad)
cmp
aaa
pop
xchg
ins
pop
mov
aaa
cmps
dec
push
and
cmc
fwait
cmps
popf
sub
scas
rcl
pop
push
mov
retf
cld
stos
imul
(bad)
sbb
in
(bad)
out
add
js
fs
scas
ror
xchg
sahf
nop
jl
outs
xchg
ja
cmps
je
cmp
inc
and
mov
push
inc
inc
xchg
dec
mov
xchg
call
xchg
cmc
jbe
pop
(bad)
cmp
sub
mov
adc
xchg
jns
frstor
and
mov
jo
pop
pusha
and
dec
icebp
xor
es
inc
mov
cmps
cdq
aam
leave
cmc
lods
mov
es
arpl
push
push
(bad)
mov
dec
test
jle
lds
gs
jbe
neg
ss
cmps
or
lods
inc
cli
daa
pop
and
in
fnstsw
ret
stc
adc
xchg
call
inc
arpl
out
outs
inc
ja
fs
test
jnp
pop
retf
ja
and
stc
xchg
lds
mov
dec
daa
mov
ja
std
dec
cdq
out
(bad)
shl
jbe
out
lahf
inc
push
lds
mov
(bad)
jbe
push
pop
push
dec
and
aas
push
mov
jecxz
push
push
add
addr16
dec
sbb
or
cmp
mov
mov
pop
jl
cmps
push
fs
pop
xchg
es
mul
inc
jecxz
xchg
mov
dec
adc
sahf
sub
and
or
imul
push
mov
cmps
or
sub
push
jmp
stos
adc
pop
into
ja
and
mov
les
xlat
(bad)
std
pushf
rol
(bad)
lods
shl
mov
or
or
ins
mov
lahf
sbb
xchg
push
dec
push
mov
icebp
push
shl
fst
push
and
jecxz
adc
or
daa
loop
lea
ss
(bad)
clc
cmp
test
xor
jne
xchg
in
out
push
pop
adc
inc
nop
pop
jecxz
xchg
ss
sub
test
pop
pop
cmps
push
shl
mov
imul
or
xchg
es
das
(bad)
repz
xor
inc
and
addr16
pop
not
imul
xor
xlat
shl
xor
pop
aam
outs
scas
xchg
pop
inc
jbe
pop
loop
mov
push
fld
adc
es
push
or
mov
ret
nop
mul
jno
jns
in
bnd
push
lds
mov
sbb
dec
shl
xchg
add
pop
out
xchg
into
add
hlt
xchg
mov
mov
pushf
inc
das
lods
pop
dec
(bad)
repnz
inc
or
clc
fcomp
rcr
fs
lds
es
pushf
popf
inc
mov
clc
aas
adc
cmp
xchg
mov
out
ret
xchg
mov
sub
aad
jo
push
(bad)
sbb
or
adc
out
and
pop
sub
mov
and
pop
jl
sbb
and
lds
sbb
movs
sbb
or
mov
push
in
sti
out
test
mov
xchg
(bad)
push
and
jmp
inc
push
push
xor
inc
xor
xchg
dec
add
fnstenv
popf
pushf
hlt
push
add
jno
push
pop
mov
adc
jbe
out
jne
add
fs
es
and
into
or
(bad)
sbb
and
pop
stc
xor
ss
mov
cmps
clc
sub
daa
lock
mov
retf
aaa
div
fnstenv
arpl
loop
mov
aam
sbb
ficom
xchg
es
dec
adc
and
inc
jo
dec
push
out
lock
ja
pop
xor
int
out
cmp
js
enter
mov
xchg
repnz
push
test
or
mul
in
mov
movs
mov
repz
in
push
push
not
rol
lahf
addr16
mov
in
or
mov
into
push
sub
push
pushf
xchg
or
mov
dec
sub
outs
jnp
jg
push
popf
xlat
test
jno
dec
dec
push
xor
mov
cmp
mov
fldenv
add
scas
cdq
mov
xor
inc
push
xchg
outs
int3
cdq
repnz
push
jle
mov
xchg
int
ret
inc
(bad)
pop
(bad)
leave
push
out
adc
ret
into
movs
cmp
jg
jbe
in
pop
jno
fcom
adc
and
in
jmp
ja
inc
add
push
cmps
imul
(bad)
fisubr
mov
cmps
(bad)
adc
mov
or
adc
test
jne
mov
push
pop
jmp
pop
(bad)
push
fdivr
mov
std
mov
inc
test
push
(bad)
adc
leave
sahf
push
mov
mov
mov
(bad)
hlt
xchg
rcl
add
add
aaa
fs
movs
daa
pop
gs
cmps
jo
mov
ret
dec
movs
pop
mov
jp
stos
fistp
push
test
aam
loopne
cs
bound
mov
ins
aaa
gs
push
hlt
and
mov
jno
out
jecxz
repnz
cmps
cmps
jno
inc
jo
cmps
xor
loope
mov
add
fwait
dec
xor
addr16
jbe
aad
gs
xor
stc
xchg
mov
and
sbb
je
xchg
push
dec
push
cwde
sahf
stos
out
cmp
mov
cdq
dec
jecxz
jbe
adc
mov
xchg
cmp
mov
ss
xchg
mov
(bad)
out
push
pop
test
mov
(bad)
xor
sub
xchg
sti
aaa
dec
(bad)
pop
add
xchg
bound
sbb
pop
jmp
out
(bad)
loope
jecxz
inc
mov
push
inc
cmps
lea
sti
aam
imul
int
inc
push
jg
and
inc
cmps
xchg
push
hlt
(bad)
and
inc
fimul
mov
es
pop
xlat
sbb
add
mov
or
push
or
in
mov
push
add
lods
sbb
add
xchg
sahf
sbb
cwde
into
and
je
dec
shl
data16
out
push
sub
inc
mov
jg
jg
add
push
outs
popaw
popa
and
add
dec
aas
mov
mov
push
cld
and
das
popa
mov
cwde
js
dec
push
out
gs
ds
je
jecxz
sbb
fbstp
mov
ja
jbe
js
out
and
xlat
jmp
push
call
cmc
push
mov
test
inc
(bad)
mov
xor
mov
push
(bad)
das
sub
push
cmp
pop
js
cmp
jnp
pop
(bad)
(bad)
test
adc
daa
not
(bad)
xchg
mov
xchg
stos
jno
cmp
aaa
test
(bad)
cmps
adc
cmpxchg
les
das
ret
mov
add
mov
pop
inc
(bad)
(bad)
inc
xchg
loop
daa
xlat
and
xchg
inc
jns
adc
push
push
push
xchg
add
mov
sub
push
adc
mov
inc
(bad)
mov
ret
call
je
in
push
cmps
js
fcom
jbe
mov
mov
cdq
push
mov
ja
(bad)
push
ins
xlat
aad
pop
jbe
ja
outs
(bad)
(bad)
repz
stc
push
test
leave
push
and
mov
call
call
call
cwde
into
dec
push
jbe
mov
les
inc
jmp
cmp
cmp
push
jle
sub
fwait
test
jmp
scas
sbb
fdiv
fdiv
jge
cld
shl
jecxz
ficomp
xor
and
aaa
pop
jmp
and
int
xchg
inc
nop
bound
push
call
pop
test
loop
push
mov
push
inc
dec
pop
sbb
rcl
xchg
inc
or
mov
add
sub
stos
mov
push
sbb
xor
cli
cmp
cmp
xor
out
dec
retf
pop
lock
call
jb
mov
mov
call
(bad)
fcom
push
push
jl
daa
cmp
into
outs
sbb
ins
adc
jecxz
imul
ja
test
pop
sbb
lods
jnp
adc
sub
adc
mov
xor
loope
xchg
jb
sbb
adc
rcpps
pop
cmps
test
mov
ins
adc
pop
jmp
out
xor
xor
sbb
mov
test
push
xor
cmps
jbe
das
fwait
call
fcomp
xor
mov
xlat
xlat
out
pop
aad
(bad)
and
xor
xor
pop
test
jne
jne
xchg
cmp
sahf
cmp
test
scas
shr
cmc
add
xchg
pop
adc
fist
clc
icebp
cwde
test
aas
push
fisttp
xor
aaa
cmp
sub
push
outs
mov
jl
cmps
mov
or
cmc
inc
arpl
imul
add
(bad)
adc
mov
add
mov
nop
movs
and
push
pop
jge
lods
out
pop
cmp
add
(bad)
sub
jp
xchg
add
out
shl
fbstp
imul
jmp
mov
xor
mov
mov
mov
aaa
outs
jo
mov
mov
and
frstor
(bad)
sub
pop
or
cmps
stos
lods
test
adc
(bad)
std
add
aas
cmc
xlat
repz
sbb
mov
xchg
fld
sbb
dec
test
nop
aas
jmp
mov
movs
pop
inc
outs
mov
ja
aaa
dec
(bad)
or
nop
mov
dec
test
and
fsub
xchg
cmp
push
or
shl
cmc
push
fld
addr16
jo
shl
jmp
sbb
stos
pop
add
push
int3
xor
psrld
xchg
xchg
add
inc
shr
iret
call
jmp
out
jo
test
es
inc
mov
xor
and
adc
xchg
jle
pop
cmps
cmp
push
jmp
loop
pop
lods
call
jne
sbb
(bad)
daa
ret
jbe
add
imul
mov
push
jle
inc
stc
movs
cmps
push
pop
out
xchg
push
xchg
out
in
mov
test
je
xor
jne
xchg
js
mov
adc
scas
xchg
aas
mov
jne
pop
sbb
or
mov
sub
data16
cmp
xchg
fnsave
popf
test
out
pop
jmp
xchg
mov
push
hlt
shl
dec
(bad)
mov
in
xlat
add
push
cli
data16
add
js
imul
addr16
leave
es
(bad)
in
push
stos
in
jns
push
out
lods
xchg
pop
xchg
(bad)
xor
add
push
aas
fcomp
cmc
out
xlat
ss
les
mov
(bad)
and
ins
cmps
jo
int3
stos
sbb
push
push
(bad)
push
mov
push
dec
sub
mov
mov
(bad)
out
sub
adc
bound
sar
xchg
push
push
test
add
pop
dec
xor
adc
cmps
mov
mov
push
sub
(bad)
enter
push
cmps
push
sbb
jmp
add
cmp
aad
std
loope
ficom
sbb
mov
push
inc
fs
mov
(bad)
xor
adc
inc
(bad)
adc
pop
adc
daa
popa
pop
push
push
test
dec
pop
int
cmc
mov
add
jbe
(bad)
fstp
mov
sub
(bad)
pop
(bad)
sub
sub
xor
pop
jmp
sub
mov
or
rol
cmps
repnz
sti
aas
cmp
stc
imul
cmp
push
neg
mov
jbe
mov
pop
jmp
mov
mov
ret
jecxz
xlat
push
mov
inc
and
aaa
sahf
sub
xchg
mov
inc
and
xchg
add
sbb
ins
lock
dec
xlat
cmp
ret
push
iret
aaa
jne
push
mov
jbe
mov
stc
cmp
daa
mov
add
or
test
int3
stos
dec
dec
push
inc
add
mov
jbe
daa
loope
adc
mov
fs
mul
push
xchg
mov
mov
mov
add
xchg
stos
push
pop
das
in
pop
sub
mov
sbb
jne
pop
inc
cmc
xchg
mov
adc
lds
mov
add
or
adc
cld
pop
daa
xor
in
stos
neg
sub
and
sahf
xchg
ins
inc
push
xchg
test
movs
jae
add
(bad)
(bad)
push
(bad)
dec
xchg
sub
mov
push
int
xchg
ret
repz
or
loop
outs
test
sbb
(bad)
stos
jmp
scas
pop
fisubr
dec
mov
popa
les
daa
sbb
mul
push
adc
addr16
xchg
addr16
push
xchg
cmps
(bad)
out
arpl
(bad)
mov
test
leave
lea
push
loope
movhps
add
pop
outs
ss
add
setno
xor
mov
cs
push
popa
pop
(bad)
(bad)
loope
pop
push
pop
pop
mov
imul
ss
push
xchg
xchg
jmp
sub
add
rol
add
sub
pusha
inc
rcl
pop
sub
movhps
fs
push
pop
inc
pop
or
mov
pusha
addr16
or
mov
mov
xchg
dec
xchg
jmp
pop
div
mov
scas
ins
in
pusha
repz
cmps
adc
rcl
pop
and
push
out
daa
nop
mov
test
sub
and
jo
inc
xchg
les
add
pop
mov
scas
pop
and
mov
ss
or
test
arpl
aam
aaa
dec
and
jns
push
(bad)
fnstenv
ss
pop
and
cmp
aam
pop
jmp
pcmpeqd
les
xor
adc
xchg
add
clc
pop
das
inc
(bad)
mov
push
or
sbb
sub
out
mov
push
das
dec
jmp
es
stos
adc
pop
es
mov
inc
(bad)
xlat
(bad)
mul
pop
inc
test
(bad)
adc
jp
ja
cli
push
mov
mov
movs
sahf
ss
mov
mov
aas
jbe
sub
cmp
(bad)
imul
xor
inc
mov
mov
dec
adc
mov
pop
popa
test
push
sar
fisttp
xchg
fsubr
inc
test
pop
push
add
push
or
and
not
mov
pop
rcl
daa
dec
pusha
mov
shl
ins
ss
inc
dec
enter
rcl
iret
repz
mov
add
sti
std
inc
(bad)
push
mov
lods
jb
xchg
add
or
es
and
fs
and
data16
add
mov
lods
add
(bad)
int3
jno
cmp
imul
jge
xchg
adc
adc
rcl
faddp
test
cli
dec
sub
add
shr
xchg
jmp
dec
adc
test
xor
xchg
sub
sub
jge
adc
mov
xchg
sub
ins
ror
stos
addr16
push
iret
ss
and
int3
adc
sbb
fidivr
daa
add
sub
adc
xchg
rep
icebp
push
xchg
xchg
addr16
xor
pop
inc
iret
fstp
shl
xlat
push
xor
mov
sbb
and
pop
jo
test
dec
std
retf
inc
shl
jmp
retf
jbe
mov
pop
out
aaa
push
lock
out
xor
push
std
arpl
gs
jl
ss
xor
adc
imul
or
mov
and
inc
mov
cmp
mov
iret
(bad)
mov
cwde
inc
imul
jnp
xor
fnstsw
cwde
aad
cmp
sbb
jle
mov
(bad)
div
push
xchg
push
push
pop
push
leave
xchg
mov
into
inc
data16
mov
dec
pop
mov
xchg
outs
(bad)
fisub
inc
inc
dec
retf
push
add
cdq
cmps
ss
mov
jbe
mov
and
xor
outs
iret
popf
cmps
pop
dec
cmp
dec
jmp
push
out
scas
add
adc
jb
cwde
push
jmp
inc
call
push
ds
cs
in
mov
pop
mov
fsubr
jne
rcl
shl
arpl
leave
loop
xor
jbe
pusha
loopne
mov
push
out
xchg
push
out
out
aaa
jbe
ss
pop
push
mov
inc
test
mov
push
add
enter
aad
ret
mov
aad
inc
xchg
test
push
mov
xchg
aas
mov
(bad)
sbb
mov
arpl
xlat
jb
in
not
xlat
xchg
fld
mov
mov
xchg
imul
pop
movs
sbb
mov
pop
icebp
fs
add
rol
add
dec
push
or
add
cmps
stos
pop
push
(bad)
loope
inc
test
xlat
jnp
lods
push
iret
loop
pop
je
push
aaa
jae
arpl
daa
ror
dec
popa
(bad)
jg
push
mov
(bad)
xor
xchg
push
xchg
mov
inc
push
sbb
push
jmp
xlat
adc
or
xchg
and
xchg
inc
rcr
test
into
pop
adc
mov
sub
xchg
call
arpl
loopne
sub
aam
jmp
es
jns
sub
ja
(bad)
(bad)
xchg
out
mov
pop
adc
call
aaa
push
dec
push
rcl
dec
js
mov
xchg
jno
add
xchg
and
(bad)
out
pop
push
adc
xchg
pop
xchg
jbe
mov
je
hlt
mov
ja
mov
ja
ja
cmps
xlat
mov
movs
jns
push
xchg
push
inc
inc
dec
iret
push
aam
out
(bad)
cmp
in
cmps
pop
clc
hlt
push
or
(bad)
mov
pop
mov
mov
out
ja
jno
inc
pop
leave
xor
sub
in
mov
icebp
outs
adc
xor
push
mov
shl
mul
cmps
jecxz
jnp
outs
cmp
pop
pop
pop
jbe
and
in
stc
es
es
fadd
xor
test
cli
xchg
xchg
jmp
mov
fld
push
mov
jns
hlt
add
ret
out
dec
or
rol
(bad)
jbe
mov
add
ret
inc
aad
ret
xchg
cmp
cmps
repnz
mov
pop
(bad)
cs
aas
mov
pop
(bad)
iret
jle
add
jbe
rol
jb
cs
call
shl
js
js
idiv
xor
lahf
xor
fld
sbb
sub
sbb
push
imul
dec
test
sub
mov
(bad)
enter
in
(bad)
mov
js
dec
shl
add
pop
ret
movd
fistp
scas
push
adc
hlt
xchg
fs
push
push
lea
leave
mov
lock
pop
mov
es
mov
data16
cmp
xchg
inc
adc
pop
jge
inc
shl
clc
ins
das
xor
bound
ror
adc
test
fs
data16
adc
frstor
test
out
sti
inc
sahf
bound
or
inc
xlat
jmp
inc
ds
and
xor
std
mov
add
mov
jae
xor
pop
les
xchg
(bad)
mov
(bad)
es
mov
(bad)
dec
ds
nop
cmp
inc
fisubr
push
inc
pop
xchg
xlat
push
lds
mov
fisub
and
jo
xchg
jb
cwde
sbb
test
aaa
jns
out
and
scas
(bad)
mov
stc
pop
add
js
out
enter
ret
pop
neg
enter
mov
pop
pop
dec
fst
pusha
xchg
js
mov
int
cld
(bad)
out
and
data16
sbb
or
push
xchg
cmp
les
outs
sbb
leave
add
pop
daa
addr16
inc
hlt
xchg
mov
cmps
xchg
inc
xchg
enter
test
mov
es
into
es
mov
xlat
cmp
stc
jbe
ja
js
dec
jne
inc
into
jbe
(bad)
bound
mov
sub
cmps
inc
mov
add
fdiv
out
fs
and
gs
rol
in
inc
retf
aam
pop
(bad)
lahf
pop
enter
fld
pop
xchg
and
(bad)
das
sub
test
jbe
cmps
arpl
inc
adc
retf
pop
std
inc
jbe
(bad)
pop
inc
not
pop
ins
mov
jne
inc
and
pusha
inc
jl
jle
xor
ss
mov
ds
nop
pop
inc
stos
cwde
das
adc
xchg
addr16
jle
daa
dec
pop
jmp
and
inc
push
ja
shr
(bad)
mov
pusha
mov
push
xchg
fmul
xchg
pop
aaa
inc
mov
pop
loope
jbe
inc
pop
es
xor
cli
ret
lods
fnstsw
adc
mov
mov
and
les
xor
gs
jmp
jnp
mov
cli
mov
sub
iret
inc
les
pop
add
cli
test
enter
jbe
jbe
push
cli
fwait
(bad)
mov
mov
dec
ror
sbb
xacquire
cmps
aaa
call
dec
arpl
(bad)
mov
in
adc
out
add
mov
call
inc
stos
sbb
push
and
cdq
sbb
jmp
or
mov
mov
mov
mov
je
pushf
retf
clts
cmc
pop
adc
int3
cwde
ret
ret
out
dec
mov
add
ja
ret
mov
gs
(bad)
scas
addr16
and
out
es
and
rcr
mov
push
xchg
inc
imul
scas
mov
loop
gs
in
mov
pop
daa
inc
scas
mov
xchg
add
or
cmp
xchg
pop
inc
adc
sub
and
ds
sti
es
movs
push
fnstcw
ins
sbb
xchg
scas
pop
cmp
psraw
mov
sub
fwait
dec
mov
arpl
pop
addr16
dec
sahf
fwait
or
(bad)
push
out
sub
mov
push
or
enter
in
cmps
xor
and
push
ss
or
add
sbb
(bad)
es
stc
aad
cmc
mov
data16
push
out
(bad)
(bad)
(bad)
pop
ret
mov
addr16
adc
and
lds
xor
stc
(bad)
iret
mov
pop
sti
adc
push
daa
fwait
jno
idiv
cwde
(bad)
mov
mov
sbb
inc
mov
loop
mov
xchg
sub
imul
aaa
adc
movs
adc
(bad)
shl
pop
sub
into
inc
push
out
push
push
(bad)
cmp
add
ja
repnz
xlat
xchg
bound
not
cmp
fisub
retfw
sub
pop
sub
xchg
mov
and
jmp
pop
pop
mov
xchg
dec
xor
inc
sbb
pop
scas
add
imul
cs
aad
push
jmp
inc
xchg
test
sti
es
xchg
mov
add
div
cmps
ss
jbe
pop
push
cmp
mov
xor
loop
xor
pop
hlt
lods
fnstenv
add
inc
mov
arpl
adc
les
pop
dec
xor
inc
mul
mul
js
fidivr
inc
add
leave
(bad)
sub
jle
imul
fidivr
mov
gs
add
pop
pusha
add
fs
mov
cmc
jmp
ret
xchg
pop
add
jo
leave
inc
xchg
(bad)
(bad)
add
push
dec
cmps
jae
adc
sbb
sbb
out
inc
mov
cmc
cld
add
push
(bad)
jle
sbb
mul
outs
call
hlt
jne
push
aam
test
and
cdq
call
je
inc
mov
cld
cmc
xchg
xor
jbe
inc
mov
or
enter
and
push
(bad)
adc
dec
es
es
add
push
xor
pop
mov
scas
dec
imul
xchg
sar
jmp
sub
pop
dec
aaa
(bad)
jg
sub
fs
mov
cmp
shl
push
es
xchg
sub
xchg
rcl
xchg
jecxz
iret
enter
cmps
or
inc
fwait
sar
mov
push
test
test
daa
fmul
loop
bnd
lods
(bad)
push
cmps
data16
cmps
stos
or
cmps
je
scas
push
pop
out
stos
not
les
inc
rcr
loop
xchg
xor
addr16
mov
outs
mov
add
xchg
pop
daa
mov
cli
xchg
popf
shl
shl
(bad)
mov
mov
adc
mov
or
inc
clc
pop
std
adc
xor
ret
pop
push
ja
inc
xor
jbe
(bad)
add
daa
mov
repz
mov
pop
xor
pop
xchg
mov
div
push
pop
int
jb
stos
pop
int3
sbb
dec
out
pop
fwait
mov
mov
shl
adc
xchg
es
adc
jl
daa
shl
je
push
dec
retf
xchg
pop
mov
ss
je
aas
push
daa
fcmovnbe
xchg
jbe
and
xor
scas
xchg
mov
(bad)
in
pop
clc
dec
lods
mov
xchg
xchg
inc
xor
sbb
push
cmc
call
and
outs
cwde
add
sahf
(bad)
(bad)
xchg
xor
faddp
mov
repz
dec
push
pop
pusha
cs
xchg
cmp
into
lods
aaa
inc
pop
dec
cli
xchg
xchg
mov
xchg
adc
ror
test
in
xchg
pop
add
outs
movhps
call
aaa
lock
cmp
mov
pop
xchg
out
call
data16
inc
xor
fnsave
test
out
rcl
fcomp
jbe
pop
mov
in
pop
push
xlat
or
sub
fdivr
aam
int
iret
movs
mov
(bad)
out
(bad)
mov
shl
(bad)
mov
adc
test
jae
inc
sbb
or
add
jl
pop
retf
inc
das
shl
sti
mov
popa
push
dec
xchg
sbb
cs
jg
add
xchg
inc
popf
fldenv
ds
xchg
and
bound
loopne
xor
xchg
and
out
mov
or
sahf
stos
cmps
jns
test
mov
dec
push
and
aas
pop
pop
dec
mov
mov
mov
sub
inc
test
movs
cmp
cmps
inc
aad
enter
xchg
xlat
scas
(bad)
je
push
mul
jg
into
hlt
lods
nop
pushf
cwde
inc
inc
gs
pop
mov
fmul
(bad)
xchg
out
stc
xlat
out
jg
movs
and
and
xor
daa
inc
jne
mov
pop
push
mov
push
sub
out
xchg
idiv
push
addr16
mov
xchg
bound
push
rol
xchg
jns
call
xor
cli
into
xchg
cmp
push
arpl
outs
inc
ret
loop
mov
push
test
cmp
gs
push
stos
test
retf
cmps
enter
pop
or
jbe
add
arpl
cs
mov
inc
call
jbe
cmps
movs
fwait
shl
arpl
and
inc
inc
add
and
inc
mov
jl
ins
mov
(bad)
movs
loope
lds
in
push
fisttp
call
cmp
sbb
cmp
out
imul
xchg
nop
xlat
and
inc
clc
out
adc
cmps
xchg
jbe
aad
adc
cmc
inc
ret
adc
and
cmc
xchg
out
test
ror
inc
mov
pop
xchg
and
fcom
xchg
addr16
popw
mov
ret
ja
add
push
loope
pop
push
or
and
jle
mov
and
xchg
mov
out
dec
into
test
mov
test
mov
sti
cmps
xchg
push
dec
and
pop
jb
push
and
test
cmc
inc
push
je
ja
inc
aaa
movs
int3
inc
dec
jbe
out
fdivr
or
fwait
mov
add
ret
cmc
push
in
es
arpl
aaa
jmp
ret
dec
xor
push
ja
xchg
jge
cs
pop
dec
mov
push
(bad)
adc
mov
or
and
sar
xor
and
jmp
xchg
jb
daa
jb
cs
push
mov
sub
clc
sub
xor
cld
fwait
push
test
cmp
sub
or
ror
out
mov
iret
xchg
loopne
push
pop
call
int
ja
xchg
xor
movs
int3
or
(bad)
add
rol
inc
jo
jg
movs
mov
outs
jg
repz
mov
sub
add
dec
(bad)
or
les
fisttp
cmp
xchg
es
test
jle
rol
es
xor
sbb
jecxz
and
xchg
sub
xchg
xchg
dec
dec
ja
test
xchg
xchg
addr16
and
mov
rcl
xchg
fimul
and
ret
shr
pop
cmp
or
out
push
ins
aad
jne
mov
add
push
sbb
push
xor
sub
mov
dec
mul
add
push
cmp
jne
and
test
fmulp
xor
mov
repz
out
ror
loop
ss
sbb
(bad)
repz
and
es
out
clc
mov
(bad)
jae
adc
aaa
dec
dec
aad
mov
ja
mov
inc
add
add
fldcw
xchg
(bad)
push
imul
mov
loope
ins
cwde
adc
push
(bad)
fsub
cwde
cwde
int
and
fistp
cld
ss
adc
loop
stos
xlat
mov
ret
inc
test
sub
inc
push
inc
call
ins
pusha
aam
pusha
pop
push
xor
xor
pop
xor
fistp
adc
push
cmp
retf
jecxz
cmps
std
dec
ss
shr
mov
adc
pop
stos
lahf
nop
sub
loopne
mov
mov
push
xlat
out
xchg
xor
mov
inc
and
add
push
lock
stos
(bad)
and
addr16
hlt
cmp
ror
mov
daa
cmps
dec
push
dec
adc
push
adc
mov
pop
cli
pop
movs
xor
push
xchg
jbe
ret
mov
xchg
test
inc
lock
jno
jno
jbe
outs
rcr
cmc
inc
mov
add
cmp
adc
push
ins
aas
sbb
inc
mov
add
push
xchg
addr16
sub
jb
cli
xor
arpl
mov
adc
push
sub
push
xchg
ror
xor
xchg
sub
mov
xchg
je
div
data16
xchg
mov
xchg
dec
nop
outs
ss
push
add
sub
js
ja
mov
xor
out
adc
cmp
mov
inc
inc
xchg
fs
mov
int3
in
in
adc
(bad)
mov
test
sbb
hlt
or
adc
or
aad
inc
stc
dec
outs
mov
inc
das
test
adc
adc
push
xchg
fcom
inc
(bad)
ss
cmps
pop
inc
cld
(bad)
fcmovbe
ror
cmp
fmul
out
xchg
mov
dec
inc
scas
hlt
jecxz
push
mov
test
adc
push
sub
(bad)
cmps
ss
jae
inc
imul
adc
lahf
neg
(bad)
aas
test
sar
out
push
pop
xchg
inc
jmp
sub
daa
test
rol
cmp
int
shr
js
cdq
ret
nop
leave
mov
mov
jbe
jp
xor
cmps
das
or
cwde
cmc
daa
icebp
inc
push
(bad)
out
out
push
lods
push
adc
dec
jns
push
cs
push
(bad)
les
mov
aas
aam
es
adc
shr
mov
(bad)
ficomp
ss
in
mov
sbb
fsubp
(bad)
jne
(bad)
jmp
push
xor
out
scas
cmps
ja
add
push
out
lea
dec
or
cmps
mov
scas
test
arpl
fwait
data16
push
add
inc
xchg
mov
not
push
push
leave
stos
adc
inc
neg
lahf
cwde
(bad)
xchg
and
pop
call
outs
adc
inc
mov
dec
mov
or
vpsrlq
inc
mov
mov
fs
jnp
das
in
js
xchg
sbb
push
sbb
mov
cmp
movs
sbb
mov
aaa
ss
mov
mov
in
cdq
(bad)
in
xor
xchg
mov
xchg
sahf
push
loope
xor
mov
stc
xor
xchg
iret
(bad)
jo
sahf
in
not
cmps
les
in
aaa
aam
test
daa
fs
mov
inc
mov
adc
sub
jg
(bad)
cmp
adc
inc
repnz
dec
cmps
mov
outs
pop
push
sub
pop
in
lods
cmp
mov
push
call
cmp
and
or
and
or
lock
inc
daa
fisttp
inc
js
inc
cmp
cs
xor
xchg
les
ret
mul
cmc
inc
xchg
pop
sahf
dec
xor
push
add
cli
iret
jo
cmps
daa
scas
in
cmps
(bad)
ffreep
leave
add
xchg
dec
jl
inc
xchg
push
retf
xchg
fmul
adc
push
aam
mov
daa
data16
scas
das
inc
push
out
pop
out
or
inc
pop
xlat
mov
aaa
aad
repnz
xchg
into
inc
inc
hlt
push
mov
cld
or
div
push
sbb
or
rcr
mov
pop
leave
scas
outs
pop
jbe
rcl
shr
sbb
jmp
mov
inc
mov
test
jg
pop
pop
(bad)
arpl
inc
test
dec
mov
mov
adc
mov
or
push
xor
dec
jle
xchg
in
inc
jae
push
addr16
cmc
fcmove
(bad)
out
mov
in
(bad)
push
xor
or
mov
ret
push
lahf
jb
clc
cmp
and
nop
xor
push
js
mov
dec
loope
xchg
xchg
ja
call
mov
(bad)
or
loopne
out
sbb
cwde
imul
jb
fdiv
mov
outs
enter
ins
nop
pop
xor
add
cmps
push
dec
adc
mov
and
jge
or
jmp
push
lds
mov
mov
loopne
mov
cmps
pop
inc
or
cmp
loopne
adc
mov
fsub
add
outs
and
mov
add
or
sub
jae
lahf
ss
jns
xor
rcl
popa
push
test
pop
pop
in
enter
inc
mov
add
jnp
icebp
push
aam
(bad)
cmp
inc
fild
push
test
adc
sub
jae
fnstenv
cld
inc
fadd
rol
or
test
cmps
push
xchg
outs
push
cmp
or
nop
jmp
int3
test
add
(bad)
fsub
out
repnz
int3
xchg
and
push
or
lds
(bad)
jge
sbb
ret
xchg
xchg
ds
mov
mov
and
jae
jnp
addr16
push
cmp
xchg
imul
or
cmovae
pop
xchg
jno
test
mov
mov
mov
mov
sub
cmc
push
mov
xor
mov
fld
pop
aad
push
inc
in
das
(bad)
add
and
add
(bad)
pop
inc
(bad)
cwde
fprem1
inc
sahf
jle
inc
xchg
jno
inc
sahf
mov
fadd
(bad)
mov
xchg
imul
pop
xor
mov
pop
mov
out
ins
cmp
ja
add
mov
sbb
jo
add
outs
ja
push
stos
xchg
pop
dec
adc
not
and
outs
push
dec
pop
pop
dec
pop
sbb
inc
jno
inc
inc
push
jbe
rcl
adc
push
adc
adc
xor
dec
mov
outs
ret
fadd
xchg
imul
enter
pusha
jnp
sbb
mov
mov
ret
and
pushw
stc
pop
push
out
cli
sahf
adc
(bad)
repnz
sahf
lds
dec
cmps
es
inc
rcl
(bad)
xor
in
add
iret
nop
adc
pop
mov
sahf
mov
and
retf
pusha
loope
pop
jbe
cmp
mov
je
fistp
fadd
fldenv
xchg
jbe
addr16
jg
aad
lock
inc
lods
mov
(bad)
cmp
push
icebp
(bad)
or
cmps
mov
repz
sahf
adc
push
xchg
mov
data16
mov
lods
out
and
xchg
sub
mov
stos
jmp
imul
outs
aad
jp
ja
std
push
and
imul
ins
mov
mov
rol
lods
(bad)
cld
xchg
in
imul
jae
inc
or
xlat
daa
mov
inc
popf
fs
data16
rol
or
mov
aaa
fwait
popa
sub
pop
push
dec
hlt
in
pop
cmps
inc
mov
jno
cld
dec
sub
jecxz
addr16
xor
cmp
jbe
mov
loopne
scas
push
or
jle
aas
mov
pushf
jns
sub
out
std
(bad)
mov
mov
mov
test
addr16
mov
data16
test
(bad)
xor
stos
xor
out
stos
and
mov
cli
outs
dec
mov
stc
lds
sbb
daa
clc
sahf
and
inc
mov
in
ja
xor
dec
ja
popa
es
cli
and
inc
test
sbb
out
clc
movs
jnp
or
out
repnz
adc
(bad)
sub
ss
jns
mov
push
sub
call
inc
test
inc
xor
test
fidivr
jbe
ja
stos
inc
(bad)
adc
adc
xor
loope
out
push
mul
inc
jne
adc
mov
(bad)
js
fiadd
fiadd
pushf
clc
xchg
sbb
(bad)
test
daa
ret
and
aaa
inc
ins
cmp
jecxz
addr16
nop
fld
retf
xchg
ror
mov
hlt
xchg
sub
arpl
and
mov
pop
(bad)
(bad)
adc
jge
hlt
sbb
push
inc
xchg
and
arpl
ss
dec
out
ficom
aam
dec
adc
test
xor
mov
es
push
mov
push
mov
jge
sub
fsub
push
mov
dec
inc
jle
(bad)
and
dec
(bad)
lds
aaa
in
and
es
xchg
aas
mov
call
es
std
push
dec
ret
idiv
add
pop
dec
dec
xchg
iret
aaa
retf
mov
and
scas
xchg
pop
jns
(bad)
mov
mov
les
sbb
je
add
aad
ja
aad
loope
dec
adc
xchg
ret
mov
pop
jae
adc
cdq
jb
ss
push
shr
xor
pop
xchg
push
pop
pop
in
jns
xor
dec
in
mov
div
test
call
inc
arpl
adc
add
push
xchg
lea
hlt
aaa
or
cwde
fwait
mov
pop
or
mov
xchg
push
pop
inc
lods
add
stos
push
mov
push
xlat
shr
test
cli
push
repz
jecxz
and
sahf
push
inc
push
ret
nop
out
je
or
push
or
xchg
fldenv
xlat
jae
push
iret
out
loope
push
mov
mov
xlat
push
push
and
retf
jae
(bad)
push
mov
push
xchg
or
and
mov
aas
adc
aas
adc
rol
sbb
xor
aas
xchg
std
nop
pop
fnstcw
pop
jle
fs
dec
ds
xor
sbb
clc
out
jp
ss
add
lock
jb
pop
xor
dec
push
nop
inc
loope
(bad)
dec
mov
cmps
(bad)
outs
adc
mov
ss
and
xor
ret
mov
push
addr16
not
pop
xchg
dec
in
pop
fnsave
and
pop
fisub
in
retf
dec
out
les
sbb
out
outs
shr
gs
push
xlat
pop
lea
cmp
cmp
(bad)
mov
test
je
ds
cmp
retf
push
in
imul
daa
repnz
xor
xchg
mov
push
(bad)
xchg
xchg
daa
mov
cdq
mul
enter
out
inc
or
push
popa
dec
lds
add
hlt
and
cmp
jne
mov
int
not
adc
psllq
mov
mov
test
test
add
push
ins
sti
push
int
add
sbb
rcr
add
lock
xchg
hlt
xchg
and
add
test
xchg
call
fidivr
sar
jae
rol
movs
je
std
outs
xor
in
push
out
and
cmp
and
xchg
pop
es
inc
jb
sub
mov
lea
outs
cmps
and
inc
pop
test
cmps
push
mov
mov
cdq
repnz
shr
sbb
scas
stos
adc
dec
(bad)
cmp
(bad)
sti
loopne
inc
hlt
mov
hlt
imul
gs
sar
arpl
loop
movs
arpl
jmp
push
pop
(bad)
xor
test
xchg
inc
outs
mov
and
and
mov
sbb
dec
mov
jle
nop
cli
div
add
push
xchg
aas
and
aam
cs
fistp
test
pop
test
jbe
xor
cmps
aaa
or
jecxz
fld
push
mov
xchg
inc
shr
push
mov
lahf
idiv
add
jbe
and
daa
es
xchg
lds
dec
inc
sub
stos
cs
mov
mov
or
add
mov
xchg
sub
gs
adc
xchg
aad
jae
(bad)
pop
cs
test
fsubr
jmp
xchg
xchg
add
(bad)
xchg
add
sbb
in
jae
mov
js
xor
es
mov
cmps
add
inc
shl
(bad)
sub
cld
push
loopne
repnz
jae
gs
out
mov
arpl
pop
ffreep
repnz
jbe
mov
fs
inc
and
add
loopne
cld
(bad)
test
into
or
stc
ret
retf
out
repz
jmp
jnp
test
addr16
stc
mov
push
test
xlat
ss
dec
jecxz
and
scas
sub
push
mov
mov
not
daa
inc
mov
adc
aaa
das
xchg
and
sahf
aaa
sub
or
test
rcl
data16
test
cmc
lock
inc
xchg
jp
pushf
sbb
mov
fidivr
mov
or
lea
jae
mov
push
push
rol
mov
pusha
movs
cwde
dec
pop
dec
inc
mov
mov
add
adc
mov
xlat
or
sub
(bad)
cmps
pop
sub
sbb
stc
or
sahf
inc
fmulp
scas
or
es
dec
jp
retf
dec
xchg
and
adc
or
adc
mov
push
add
push
adc
mov
lods
addr16
lds
add
mov
add
adc
push
push
add
push
fistp
popf
xchg
into
and
outs
ja
(bad)
daa
movs
call
and
xchg
pop
in
fsub
addr16
adc
or
aaa
push
sub
cmp
adc
enter
sbb
ret
pop
and
dec
test
inc
lea
push
mov
pop
mov
aas
mov
mov
repnz
outs
(bad)
out
add
xlat
add
loop
retf
xor
imul
push
push
inc
scas
xor
push
pop
cli
dec
add
dec
cmp
pop
adc
retf
xchg
ja
(bad)
sti
and
mov
movs
or
dec
jp
xlat
es
mov
and
or
sbb
jmp
aaa
out
cmps
adc
sbb
ss
add
push
std
out
xor
xor
addr16
mov
xlat
push
popf
push
xor
pop
cs
popw
add
movs
sbb
pop
mov
push
mov
add
cmps
add
daa
adc
test
pop
sbb
mov
dec
pop
push
(bad)
cmps
pop
pop
pop
(bad)
mov
dec
and
into
cmp
adc
retf
inc
fisubr
mov
movs
dec
jbe
mov
and
hlt
dec
or
inc
xchg
stc
outs
ficom
fstp
(bad)
jne
mov
inc
adc
push
aaa
icebp
and
bound
repz
pop
cdq
xchg
jecxz
not
push
mov
(bad)
xchg
jge
cmps
mov
mov
xchg
xchg
leave
pusha
push
xchg
into
mov
mov
mov
pop
cmp
xchg
hlt
sbb
ret
inc
retf
(bad)
(bad)
js
add
addr16
pop
add
pop
xchg
push
jo
repnz
xchg
scas
(bad)
out
(bad)
mov
or
sub
jbe
shl
es
mov
mov
call
inc
mov
les
cmps
cmps
sti
(bad)
out
xchg
adc
push
mov
push
fcom
addr16
inc
pop
ss
aaa
pop
(bad)
cmp
push
fnstenv
(bad)
or
pop
movs
mov
adc
fcmovb
mov
lods
ds
mov
les
adc
scas
lock
(bad)
in
fwait
les
test
in
pushf
push
mov
daa
and
imul
mov
aaa
popf
xchg
jo
cdq
add
cmps
fidiv
out
add
int3
push
mov
inc
xchg
out
push
pop
inc
test
ss
jmp
movs
xchg
icebp
xchg
xchg
xchg
dec
popa
fmul
aas
cmp
push
mov
lds
cmc
or
add
mov
inc
cdq
inc
cmps
mov
mov
cmps
call
sub
ret
repnz
(bad)
jae
or
inc
bnd
daa
fwait
or
adc
gs
dec
paddusw
adc
push
and
mov
mov
call
out
mov
xchg
out
js
fbld
loopne
(bad)
cs
mov
cmp
mov
out
test
jns
push
adc
sbb
push
fimul
shr
int3
push
popa
and
neg
pop
and
add
pusha
cs
je
addr16
inc
pop
retf
xor
loopne
test
jecxz
cmp
push
push
xchg
mov
(bad)
test
pop
lds
add
(bad)
sbb
ss
enter
dec
es
inc
push
aam
cmp
(bad)
(bad)
inc
movs
daa
push
add
fiadd
cmps
cli
es
iret
xchg
in
mov
mov
and
aad
add
push
push
xlat
inc
in
outs
sbb
ja
loop
push
cmp
shr
(bad)
and
dec
adc
mov
cdq
rol
mov
push
sub
mov
mov
cdq
out
leave
or
pop
shr
mov
sbb
cmp
xchg
data16
xchg
adc
push
mov
add
mov
xchg
jge
pop
test
cs
data16
cmps
xlat
or
xchg
cmp
fild
and
xor
ret
enter
inc
adc
lods
inc
sahf
out
shl
or
(bad)
jmp
imul
fidiv
and
pop
mov
in
mov
(bad)
pop
idiv
retf
adc
pop
daa
inc
inc
or
xor
test
daa
pop
xchg
jle
cmp
sar
cmp
fldcw
cwde
bound
mov
ss
inc
iret
jo
and
adc
xchg
cld
mov
cmps
add
sub
ja
inc
jno
sbb
push
movs
push
add
inc
jne
ss
nop
int
rcr
push
ret
inc
mov
call
inc
lds
push
jmp
daa
pushf
ds
aas
mov
cmp
add
mov
xchg
adc
out
cmp
xchg
mov
inc
cs
call
or
retf
daa
adc
push
scas
push
sti
mov
inc
jns
outs
xor
fbld
sbb
inc
test
outs
pop
and
sub
and
jmp
daa
arpl
cmps
fcom
rcr
repnz
outs
dec
das
ss
push
mov
mov
je
aaa
(bad)
out
pmullw
xor
add
ret
cmps
cwde
ret
cmps
and
jnp
sbb
xchg
xlat
push
dec
add
inc
mov
(bad)
mov
push
sbb
dec
bound
or
es
out
xlat
not
cmp
das
sbb
stos
push
fdivp
ins
(bad)
push
daa
std
dec
cli
daa
jge
push
jae
out
data16
ins
cli
inc
ds
(bad)
xchg
xchg
dec
call
fxtract
mov
mov
jg
test
xchg
adc
push
cld
ret
or
pop
out
div
or
ja
mov
cmp
add
sub
xlat
sbb
fxtract
jns
(bad)
cwde
pushfw
xor
fisttp
push
or
and
mov
aaa
ret
iret
inc
sbb
sub
dec
mov
call
xchg
mov
cmp
fst
cmps
aam
test
loopne
fwait
and
push
mov
push
mov
test
xlat
stc
inc
imul
bound
inc
ja
das
data16
and
and
mov
fcom
ret
jg
outs
aaa
mov
(bad)
pushf
test
jmp
es
mov
inc
dec
bound
dec
imul
and
xor
in
inc
retf
arpl
push
cmp
xchg
fs
dec
(bad)
pop
aaa
xor
push
fcom
push
outs
cmps
jmp
(bad)
clc
ret
cmp
inc
mov
sbb
imul
scas
ss
mov
scas
jbe
(bad)
cmp
call
or
inc
jmp
cmps
sbb
xor
or
xor
adc
jae
fisub
add
popf
ret
addr16
test
or
xchg
ror
sub
cmp
addr16
leave
stos
mov
adc
pushf
ror
mov
scas
or
dec
div
push
bound
pushf
mov
(bad)
imul
jmp
out
ins
call
daa
pop
and
ins
hlt
cmc
push
pop
sbb
jge
imul
mov
jge
(bad)
test
mov
sar
mov
daa
push
nop
mov
inc
jecxz
fiadd
xchg
in
sub
push
or
mul
fsub
aaa
fsubr
pop
int
fcom
movs
pop
es
in
sahf
add
fisub
add
movs
cli
mov
add
add
pop
lea
je
fucomip
push
pop
xchg
mov
fild
sbb
pop
pop
iret
push
cmc
or
mov
push
clc
in
adc
xor
inc
mov
push
or
ins
scas
and
jecxz
in
aaa
inc
and
dec
xchg
jmp
in
mov
cs
mov
imul
(bad)
pop
clc
push
sub
es
mov
shl
mov
pop
jle
sub
sub
outs
mov
(bad)
mov
pushf
xchg
call
or
or
mov
mov
push
mov
in
mov
push
jecxz
pop
cmp
shr
(bad)
in
out
pop
cld
sub
imul
inc
xor
test
fsub
lahf
test
repz
jb
test
jg
xor
fistp
push
jbe
pop
cwde
ja
int3
mov
pop
add
div
xor
dec
ret
xor
daa
call
add
push
mov
aas
sub
lea
add
bound
jo
xor
test
jmp
popa
ins
out
ss
movs
in
push
xor
popa
xchg
push
fs
movs
stos
and
jle
aad
test
push
dec
das
gs
scas
rcr
in
ret
test
pop
popa
mov
addr16
xchg
push
push
cmp
cdq
stc
rol
arpl
mov
(bad)
in
xchg
dec
xor
jle
arpl
mov
pop
push
add
sub
pop
outs
mov
cs
test
cmps
cdq
xlat
mov
fs
cli
xchg
call
call
pusha
add
mov
retf
jb
push
jb
or
(bad)
dec
popa
xor
dec
(bad)
adc
and
bound
repz
outs
mov
xchg
cmps
sar
push
pop
cmp
and
xchg
mov
cmp
push
je
push
adc
ds
iret
add
jo
mov
add
retf
or
xor
dec
(bad)
xchg
shr
sub
xchg
arpl
(bad)
sub
or
jge
loope
add
mov
ja
cdq
cmp
xor
idiv
and
shr
arpl
and
sbb
inc
push
pop
adc
jne
push
adc
push
mov
test
dec
(bad)
sbb
test
adc
test
(bad)
push
stos
je
cmps
xchg
push
push
inc
fdiv
push
out
aas
xor
stos
(bad)
cmps
pop
jnp
push
(bad)
fld
lock
movs
fist
lods
mov
pushf
ss
ret
jbe
scas
rol
fdiv
add
push
push
rcr
push
jmp
call
inc
xchg
in
dec
aad
jbe
ss
xlat
push
ss
cmp
push
jne
mov
xor
int3
stos
push
inc
fwait
aaa
sub
imul
adc
loop
(bad)
mov
stos
pop
mov
xchg
xchg
outs
push
dec
repnz
idiv
or
std
inc
stos
int
sbb
add
push
es
lds
adc
mov
(bad)
ins
fwait
loope
mov
out
fs
cmp
data16
(bad)
mov
mov
call
dec
ds
aaa
arpl
in
pop
mov
test
push
mov
test
fcomip
sub
sar
jnp
imul
mov
out
bound
add
int
adc
imul
inc
or
cmp
(bad)
daa
mov
and
jno
movs
push
mov
add
adc
push
hlt
sbb
inc
out
repz
scas
cmc
ret
jecxz
inc
jo
xchg
and
xchg
mul
inc
xor
les
ins
mov
stos
xchg
arpl
and
aas
mov
jnp
outs
and
push
adc
cmps
push
adc
xchg
sbb
movs
test
mov
call
js
dec
fwait
cdq
mov
push
xchg
jns
pop
test
and
ucomiss
push
mov
xor
pop
test
jbe
aas
test
ret
shl
adc
xor
loopne
cmp
push
(bad)
dec
retf
outs
scas
jmp
pop
(bad)
dec
jns
hlt
fild
retf
enter
iret
mov
xor
dec
pop
rcl
add
lods
pop
sub
xor
mov
push
xchg
bound
shr
lods
mov
cmps
dec
mov
xchg
or
mov
lahf
scas
jle
lock
daa
test
ss
mov
push
fcomp
dec
push
ja
inc
or
xor
xor
mov
gs
xchg
and
pop
mov
mov
mov
pop
mov
bound
daa
push
sbb
push
add
fdivr
frstor
adc
push
nop
aaa
ins
pop
movs
or
xor
je
push
fst
out
test
mov
icebp
push
cmps
out
dec
or
push
jmp
std
in
not
xchg
push
dec
out
imul
mov
rcpps
push
sbb
mov
jge
int
dec
ret
cmc
popf
mov
test
mov
inc
xchg
jge
sbb
(bad)
mov
shl
cmc
or
and
cmp
(bad)
mov
cmp
sti
jne
dec
xor
ss
int3
cmps
mov
pop
xchg
retf
xchg
dec
sbb
or
or
xchg
pusha
pusha
fnstcw
xchg
adc
out
push
enter
fsub
add
mov
fcomi
fs
hlt
sbb
dec
xor
dec
xchg
pop
add
enter
ss
rcl
pop
cmc
lea
xor
mov
mov
fiadd
adc
mov
ja
add
sub
and
stos
inc
shl
imul
scas
rcl
and
pop
(bad)
mov
jne
test
add
mov
or
sub
cwde
push
push
jb
jp
lahf
retf
xor
push
(bad)
retf
mov
pushf
dec
or
dec
mov
es
cmp
(bad)
std
jb
xor
push
mov
ficomp
mov
popa
pop
aas
adc
pop
cmp
lds
stos
adc
jmp
push
pop
sbb
pop
or
mov
fs
rcl
iret
adc
daa
jns
inc
mov
xlat
push
mov
xchg
div
sar
sbb
cmps
retf
or
(bad)
fcmovnbe
xor
sbb
mov
mov
pop
icebp
pandn
stc
repz
mov
xor
xchg
iret
outs
sub
int
mov
push
out
xlat
lahf
adc
mov
cli
push
das
repz
push
pusha
(bad)
movs
adc
in
fwait
xchg
xor
out
push
add
fwait
enterw
mov
mov
push
in
mov
pop
pop
push
pop
jbe
fild
out
aas
enter
lds
sub
inc
mov
(bad)
nop
rcl
not
lods
cmc
in
pushf
retf
inc
mov
fmul
mov
loopne
cmps
cmps
xor
push
pop
sbb
mov
xchg
retf
pop
mov
mov
cdq
cmps
pushf
pushf
push
xlat
aaa
xchg
pop
aas
(bad)
hlt
pop
(bad)
loope
(bad)
cs
ins
push
stc
fwait
scas
or
dec
mov
leave
ins
xchg
out
cmp
shr
idiv
cmp
(bad)
pop
sub
xchg
add
push
neg
add
mov
(bad)
xor
mov
cld
into
xlat
test
aam
lock
out
or
ds
mov
loop
jmp
mov
xchg
and
fist
repz
adc
fbstp
and
sub
dec
test
in
rcr
cmp
pop
es
inc
xchg
test
inc
adc
sub
addr16
add
or
jmp
les
mov
sub
les
out
and
inc
mov
ins
cmc
(bad)
inc
cs
fs
movlps
mov
ss
cmp
lahf
clc
mov
mov
mov
inc
cs
inc
movs
mov
adc
outs
dec
div
mov
add
stos
sahf
mov
in
ins
mov
cmc
aam
jbe
retf
jmp
cmp
jl
data16
dec
sub
jg
xchg
pusha
das
aaa
inc
test
cmp
das
cmps
scas
mov
push
loope
test
jbe
sbb
aam
xchg
loop
inc
int3
daa
sbb
test
mov
adc
out
scas
mov
out
scas
pop
lahf
es
addr16
gs
test
push
fisubr
arpl
cmp
leave
mov
adc
sahf
xstore-rng
cmps
add
mov
addr16
push
mov
cli
fild
retf
xlat
pop
ss
mov
fcomp
addr16
scas
pop
(bad)
cmp
lea
shr
neg
pop
jge
cmps
(bad)
out
xchg
xlat
(bad)
or
mov
mov
cdq
mov
push
mov
xchg
ret
pop
cmps
imul
push
and
call
(bad)
not
and
pop
dec
inc
pop
push
cmps
jp
inc
loope
push
cmps
imul
xchg
aaa
jmp
cmps
es
clc
inc
xlat
push
mov
xchg
inc
push
je
jnp
pop
xchg
pop
pop
cwde
sub
test
inc
sub
push
loop
mov
inc
jns
or
retf
aaa
mov
aam
retf
ret
shl
inc
mov
cmps
jbe
rol
lock
out
ror
out
repnz
loop
shl
mov
mov
es
jbe
(bad)
or
movs
inc
stc
add
mov
data16
xchg
push
fs
cmps
mov
mov
push
dec
and
or
push
sti
das
jmp
stc
pop
popa
jo
jg
repnz
mov
rcl
jmp
aad
jnp
xor
xor
add
cmp
out
mov
pop
test
pop
sbb
out
pusha
push
push
mov
movs
nop
adc
fadd
xchg
clc
jae
pop
xor
loopne
pop
xlat
sbb
adc
push
enter
cmps
inc
sub
shl
jne
or
inc
lea
lods
inc
xor
jnp
mov
xchg
sub
mov
xchg
and
lods
sub
hlt
push
pop
push
stc
test
mov
pop
mov
xor
ja
dec
pop
mov
mov
cmps
enter
arpl
push
push
popa
mov
add
xchg
ret
xlat
jmp
push
leave
push
add
inc
rcr
es
mov
cmp
ss
or
pop
fwait
adc
sbb
or
push
(bad)
xchg
or
out
cs
ja
fist
xor
out
(bad)
sbb
cdq
clc
sub
out
mov
cmp
jmp
fst
push
jl
imul
in
daa
out
scas
xchg
jbe
inc
cmp
mov
inc
or
pop
ss
cs
push
fcmovnu
inc
pop
idiv
sbb
jmp
ret
cmps
fs
add
push
out
xchg
cmp
sbb
push
xchg
xor
mov
mov
jnp
mov
adc
push
inc
(bad)
xchg
out
and
mov
xchg
xchg
jb
push
mov
lods
adc
fs
in
sbb
jae
(bad)
and
mov
or
add
jae
xor
xlat
inc
aaa
jnp
mov
fs
ja
push
imul
adc
xchg
xor
mov
inc
push
jae
inc
out
jmp
sub
mov
jb
movs
mov
ret
push
push
das
jae
xchg
xor
xor
ja
push
addr16
sbb
(bad)
clc
mov
add
mov
aad
shl
out
xchg
and
push
jno
imul
mov
imul
in
pop
push
adc
movs
rcl
cmp
mov
call
sahf
out
test
and
leave
idiv
loope
aad
inc
jo
xor
clc
add
es
and
mov
aad
mov
mov
ss
and
or
cmps
dec
out
pusha
jae
pop
cmc
xlat
adc
fmul
das
xor
xchg
push
dec
push
add
ds
lds
xchg
dec
or
sbb
shr
cli
rcl
push
inc
call
out
xor
and
les
stc
popf
sub
xchg
stc
stc
mov
push
inc
push
push
bound
ds
sub
mov
call
xor
push
mov
loop
inc
sub
xchg
into
out
mov
cmps
dec
mov
scas
pop
(bad)
adc
xchg
retf
ffreep
imul
lods
cmp
sub
ja
rol
jno
xor
add
mov
adc
cmp
mov
pop
or
(bad)
push
pop
stos
mov
xchg
mov
loopne
xchg
stos
jmp
or
pusha
pop
xor
fcom
in
int
push
pop
sub
cmp
dec
cli
es
ror
out
ins
mul
popa
enter
(bad)
xchg
mov
ss
xor
pop
mov
sbb
lahf
pop
into
ja
push
movs
inc
inc
arpl
jne
(bad)
xchg
sbb
push
dec
mov
(bad)
push
inc
add
mov
mov
test
test
mov
inc
test
bound
fisttp
and
ds
cwde
leave
jecxz
cmp
jmp
je
xchg
dec
and
xchg
(bad)
pop
cmp
daa
call
fst
(bad)
ss
dec
addr16
mov
sub
push
jg
mov
es
jmp
xor
push
call
push
add
movs
add
cmp
xchg
xor
push
xchg
not
xchg
out
xchg
gs
mov
fimul
cmps
not
pop
bound
add
fld
adc
test
movs
jne
lahf
mov
sub
test
das
in
(bad)
das
push
inc
sbb
bound
or
bound
mul
xchg
call
scas
ins
aam
xchg
jmp
jmp
test
loop
sbb
sar
adc
loop
mov
mov
add
add
iret
sbb
push
inc
push
inc
stos
push
mov
mov
pop
inc
xor
lods
lea
mov
xchg
shl
popa
adc
loope
jle
ins
xor
jns
sar
(bad)
cmp
sub
xchg
sub
pop
sti
ret
neg
mov
inc
leave
movs
cs
imul
push
xchg
push
xchg
dec
xchg
dec
pop
ror
ja
or
outs
mov
xchg
push
xlat
out
jbe
es
loopne
dec
out
aam
out
dec
(bad)
jg
daa
xchg
minps
out
div
(bad)
out
xchg
inc
fist
jp
mov
test
xchg
std
cli
shl
adc
fist
jmp
cmp
push
mov
xchg
jbe
imul
push
fidiv
push
add
es
daa
sbb
test
add
xchg
inc
hlt
xor
lahf
mov
mov
pushw
add
push
ss
jmp
mov
jmp
xchg
mov
push
mov
jnp
add
or
jmp
fnstcw
inc
mov
imul
inc
cmps
push
jbe
xchg
mov
push
loope
pop
pop
arpl
xchg
cli
sbb
dec
or
mov
xchg
mov
xlat
daa
jmp
out
push
xor
mov
mov
ja
add
inc
lods
xlat
movs
or
clc
jmp
sub
fdivr
xor
dec
shl
push
mov
out
mov
cmps
pushf
xchg
pop
ja
xchg
leave
push
cld
(bad)
pop
in
(bad)
sbb
not
out
ja
cmp
pop
arpl
imul
fmul
jnp
enter
cld
hlt
pop
mul
pop
mov
and
mov
dec
aaa
fxch
ja
ja
add
add
out
and
add
inc
fsub
inc
cmps
mov
dec
pop
cmp
aaa
repnz
faddp
jmp
inc
sub
xchg
pop
xchg
call
mov
mov
or
(bad)
rcr
cmp
out
adc
pop
imul
in
es
(bad)
mov
in
and
out
push
out
and
and
cmps
and
sbb
mov
aam
xlat
hlt
adc
dec
mov
retf
cs
test
cmps
jno
rcr
shr
push
inc
in
add
loope
(bad)
and
mov
xchg
mov
enter
imul
cmp
and
or
fsub
idiv
repz
jp
add
out
repnz
mov
xchg
cli
push
mov
sti
push
mov
pop
mov
ins
pusha
inc
xchg
add
adc
mov
xchg
pop
stc
and
fisubr
xchg
aaa
pusha
xchg
mov
mov
(bad)
xor
addr16
ss
out
add
inc
add
jbe
mov
jnp
add
mov
xchg
xchg
imul
push
out
ja
push
mov
mov
xlat
pop
(bad)
jmp
ficomp
cmp
stc
cwde
(bad)
sbb
test
addr16
push
inc
imul
je
pop
inc
add
xchg
mov
movs
mov
pop
vpacksswb
xchg
xchg
sub
div
(bad)
sub
mov
fdiv
adc
in
fsub
clc
dec
dec
lea
xor
aaa
push
mov
pop
jnp
fs
movs
or
inc
sbb
not
fwait
(bad)
xor
sti
add
cli
xchg
retf
adc
mov
arpl
jne
ror
je
xchg
sbb
xor
add
push
cmps
repz
(bad)
sar
idiv
xchg
(bad)
sbb
js
add
cmps
repnz
bound
pushf
xor
(bad)
arpl
cmp
lods
pop
repnz
dec
popf
fistp
push
or
jle
xchg
into
xchg
sbb
mov
mov
sar
sahf
pop
sub
inc
into
addr16
xor
or
(bad)
int
(bad)
fdiv
cmp
push
test
into
push
mov
dec
jnp
retf
sbb
cli
(bad)
jmp
xlat
aad
sub
out
inc
xchg
ins
inc
xchg
ja
jo
mov
sub
clc
fnstenv
push
xor
xor
sahf
(bad)
inc
mov
inc
in
jb
add
(bad)
data16
mov
(bad)
jg
mul
aaa
xchg
or
mov
les
push
cdq
sbb
sbb
loope
fidiv
xchg
push
push
inc
ja
into
add
xchg
jmp
push
push
(bad)
mov
rcl
xor
or
inc
stos
xor
xchg
call
push
mov
not
push
sti
push
jmp
xchg
mov
mov
ja
pop
push
jno
or
js
fcomip
cmps
sbb
pop
or
inc
imul
push
cmp
ja
dec
lds
push
push
leave
mov
icebp
(bad)
stc
and
repnz
mov
sbb
xor
daa
icebp
(bad)
dec
push
sub
xchg
cli
mov
mov
cmp
adc
test
inc
add
xchg
aaa
mov
sti
jo
push
push
pop
sbb
xor
daa
mov
jo
and
(bad)
iret
add
add
fcomp
dec
in
ja
imul
loop
std
xlat
cmp
pop
mul
popf
or
jecxz
inc
mov
inc
mov
mov
loop
push
neg
test
cmp
inc
jno
shr
jb
sub
sbb
jbe
ins
fwait
cpuid
sbb
or
pop
loope
or
es
or
xchg
sbb
mov
bound
mov
(bad)
mov
out
xchg
je
repz
push
dec
inc
and
xchg
enter
mov
sti
in
inc
adc
es
push
out
push
outs
sbb
arpl
repz
ret
mov
mov
sub
into
or
xor
into
mov
mov
mov
mov
add
jecxz
mov
shl
and
jmp
lahf
add
data16
loopne
pop
movs
test
add
or
lods
(bad)
stc
jne
inc
sub
leave
jbe
jns
aam
movs
in
cmp
movs
je
or
xchg
xor
ja
cmps
ret
jnp
arpl
push
pop
xchg
cli
aaa
clc
push
mov
push
cmp
push
fwait
cmps
lds
or
bound
ins
mov
repnz
push
or
mov
xor
cmp
and
aaa
das
xlat
push
cmps
out
cmp
inc
xchg
adc
xchg
not
adc
adc
popa
sti
enter
sub
and
int3
out
inc
daa
and
aaa
test
in
fs
rcl
loope
xchg
xlat
popa
jnp
fdivr
jmp
mov
jo
xor
popa
push
add
xor
and
loop
or
and
add
call
rol
push
mov
test
es
fwait
push
mov
rcr
imul
(bad)
push
in
(bad)
and
xor
ja
push
pop
test
ja
pop
adc
add
jns
(bad)
adc
addr16
or
sub
loope
bound
cmps
and
call
(bad)
mov
(bad)
into
push
mov
jns
inc
test
fdivr
cmps
dec
ror
add
mul
mov
rol
push
stc
jo
adc
jb
bound
cwde
cmp
call
pop
xor
popa
add
loopne
add
cmp
stc
in
mov
ror
cdq
je
lea
push
inc
ret
(bad)
push
mov
call
jns
adc
mov
pop
movs
daa
out
add
sbb
jne
and
xchg
addr16
std
imul
xchg
push
jle
sub
dec
hlt
in
loop
push
push
dec
hlt
or
es
je
jbe
ret
fstp
retf
daa
idiv
lds
xlat
sbb
mov
pop
xchg
stos
sbb
and
sbb
jns
xchg
sysret
dec
ja
dec
mul
ret
std
in
xor
sar
aaa
sti
sti
fs
fwait
cmp
shr
cmp
sub
daa
cli
imul
stc
popf
lock
arpl
xor
jp
add
or
data16
push
pop
nop
mov
daa
inc
push
inc
push
and
fisttp
ret
out
cli
(bad)
aad
daa
(bad)
(bad)
xchg
mov
mov
sbb
je
dec
cmps
iret
lds
jmp
or
stos
cs
cmp
xlat
mov
push
arpl
jge
fs
jmp
or
add
into
call
jns
jle
call
jp
movs
mov
out
fldenv
jecxz
xchg
div
push
stos
mov
ins
sbb
dec
mov
inc
xlat
mov
inc
fst
leave
out
sbb
sbb
add
rcr
mov
jmp
daa
xor
daa
fisubr
sbb
out
out
pop
fcom
data16
movs
adc
dec
dec
push
xlat
jmp
not
enter
inc
(bad)
mov
imul
xchg
mov
js
or
fstp
sub
(bad)
sub
dec
xchg
push
add
pop
and
mov
pushf
cmps
or
jecxz
dec
push
adc
arpl
cmps
mov
cli
ins
pop
nop
inc
(bad)
ja
popa
mov
es
and
sbb
popa
(bad)
pop
mul
dec
test
aas
cwde
jbe
push
ror
pop
aaa
mov
xor
fwait
js
fwait
dec
repz
jmp
lea
pusha
mov
pop
jbe
ja
ja
aaa
fiadd
xchg
aas
ss
or
stos
fs
jp
std
mov
inc
shl
or
or
inc
dec
sub
lahf
inc
dec
jnp
jb
dec
pop
pop
push
push
stos
jbe
movs
(bad)
pop
dec
jmp
sub
jmp
adc
call
cmps
cmp
sahf
jg
xchg
sbb
xchg
loop
lods
(bad)
xchg
mov
pop
jg
loop
pop
inc
xchg
push
mov
add
push
dec
bswap
(bad)
sub
xlat
add
inc
(bad)
ja
sbb
mov
push
or
fild
retf
mov
fwait
mov
jl
stos
mov
ja
mul
inc
aaa
sub
push
std
xchg
xchg
sub
cld
cs
es
mov
popa
call
pop
es
neg
or
fld
jmp
xchg
xchg
into
(bad)
out
pop
pop
xchg
mov
push
movs
push
add
in
sti
es
cs
xchg
jbe
aaa
dec
push
mov
ret
cld
mov
sbb
mov
mov
jnp
cmps
jbe
or
(bad)
ss
cld
push
ss
push
cmp
inc
xchg
or
pop
push
jbe
ins
jno
add
stos
(bad)
sbb
push
mov
xchg
retf
pop
sbb
pop
test
jnp
xchg
retf
aaa
xor
and
fwait
mov
test
mov
call
sbb
jmp
out
mov
jbe
push
xchg
push
data16
jne
imul
fdiv
mov
push
aas
enter
sub
daa
in
mov
iret
sub
fisub
sbb
pop
daa
in
fadd
(bad)
mov
push
pop
pushf
jmp
pop
xchg
cld
out
inc
retf
or
es
and
xchg
pop
xchg
dec
mov
mov
stos
icebp
pop
inc
imul
adc
jmp
out
push
mov
push
pop
mov
jbe
mov
fwait
sub
mov
adc
push
sti
out
gs
mov
cmps
scas
scas
or
ss
fwait
jp
daa
out
pop
jb
inc
pop
xchg
out
adc
inc
mov
hlt
aas
inc
push
xchg
cmps
ja
xchg
cmps
push
sub
dec
imul
neg
inc
ret
pop
cli
(bad)
mov
add
pop
inc
mov
mov
push
retf
pusha
mov
pop
push
add
out
jmp
ja
add
popa
fwait
xlat
pop
repnz
ror
and
mov
sub
clc
enter
sti
aaa
call
inc
sti
aaa
sub
mul
mov
adc
repz
mov
not
or
sub
push
mov
mov
jbe
mov
lds
cmps
push
fcomp
fisttp
idiv
aaa
(bad)
xchg
cmps
xchg
pop
mov
shr
jnp
jb
mov
pop
cli
cmp
ins
sti
inc
sahf
sbb
inc
fwait
mov
cmp
jl
jns
(bad)
in
mul
enter
lahf
push
sti
sub
adc
dec
xchg
int3
fwait
in
retf
xlat
push
push
stos
call
inc
xchg
cmp
scas
cmps
pusha
push
mov
data16
in
push
div
shr
(bad)
aad
jecxz
fucom
sub
push
data16
xchg
cwde
neg
es
and
mov
(bad)
stos
pop
bound
out
cmps
test
enter
pop
sti
or
cmp
or
ins
xchg
mov
inc
test
cwde
fs
mov
and
sbb
and
cwde
pop
stos
out
push
sbb
add
cmp
out
out
xchg
or
test
fwait
mov
xchg
addr16
xchg
inc
out
sub
mov
mov
lock
mov
daa
dec
mov
pop
jp
pop
dec
add
jecxz
pop
lea
out
ds
sti
xchg
sbb
scas
outs
push
push
sbb
not
or
jbe
mov
(bad)
xlat
out
xchg
sub
push
mov
jne
imul
adc
mov
cs
mov
add
out
dec
out
dec
stos
xor
in
pop
pop
cmc
sub
mov
and
sahf
fs
sbb
cmc
and
push
mov
inc
mov
ja
stos
dec
push
sub
adc
les
sti
ret
imul
sahf
pop
add
inc
dec
mov
cli
stc
mov
adc
fild
pushf
dec
mov
nop
fisttp
arpl
addr16
lods
les
(bad)
push
fwait
repnz
add
cli
jmp
jge
jbe
(bad)
xlat
or
rcr
sbb
sbb
fcmovnb
mov
and
jae
xchg
cmc
call
push
xlat
add
xchg
dec
pop
jae
sub
and
sub
ds
leave
test
mov
mov
push
stos
outs
test
fwait
call
and
test
cmp
mov
ja
push
inc
jbe
fadd
mov
add
cmp
xor
lahf
inc
push
pop
xchg
sti
and
mov
xchg
mov
or
fmul
sub
idiv
xchg
sbb
aam
imul
jmp
cmps
fidivr
mov
or
test
jmp
ret
ret
ss
jp
mov
sbb
mov
xor
or
ret
stos
daa
mov
out
imul
stos
ret
icebp
add
xchg
sbb
dec
les
sbb
mov
iret
imul
outs
mov
sub
adc
retf
(bad)
jae
div
cmp
pop
test
adc
pop
mov
daa
retf
aaa
(bad)
imul
retf
test
(bad)
jg
ja
bound
mov
xlat
pop
adc
ja
cmp
test
sub
xchg
pop
test
loop
adc
push
xor
jmp
mov
fwait
or
mov
fsubr
dec
movs
push
iret
sbb
cmp
ret
xchg
out
es
inc
test
push
push
arpl
sub
cmp
push
cmps
or
fldcw
xchg
inc
fwait
dec
cmps
repz
mov
pop
pop
lds
add
sti
cmp
retf
ja
push
adc
inc
push
lahf
push
dec
inc
idiv
inc
pop
inc
cmps
jmp
pushf
idiv
and
leave
rol
jbe
fwait
cmp
daa
in
sbb
inc
xchg
std
mov
fcom
mov
dec
mov
(bad)
adc
pop
out
push
cmp
push
xchg
jp
mov
(bad)
push
or
jbe
movs
pushf
(bad)
jns
sar
dec
add
addr16
xor
jbe
and
adc
pop
inc
lods
sub
xchg
xchg
cmp
ss
xor
sub
push
popa
cmp
jle
inc
push
std
xor
stos
or
sbb
ja
es
inc
rcr
imul
xchg
pop
mov
mov
arpl
movs
and
in
test
ss
stc
sub
ja
jmp
or
push
or
or
or
test
cmps
pop
or
mov
enter
fwait
mov
test
jl
or
test
retf
adc
adc
jno
clc
movs
sti
arpl
jno
bound
jmp
xor
fstp
rcr
retf
xchg
sub
jecxz
mov
stos
mov
mov
pop
fwait
inc
scas
lock
jmp
or
out
sub
ret
mov
jecxz
pop
sbb
lea
push
mov
pop
xchg
xchg
pop
jg
sub
cmp
push
adc
pop
jmp
sti
ror
dec
je
xchg
mov
data16
test
cmovne
inc
and
cmps
pop
add
ja
ja
jns
xchg
mov
int
ins
(bad)
retf
sbb
pop
out
pop
jb
ror
cmp
mov
push
das
data16
push
push
xchg
popf
sar
jg
bound
and
pop
push
and
pop
pop
dec
jnp
mov
ret
int3
(bad)
pop
cmp
loopne
jmp
out
and
repz
xchg
mov
stos
loop
inc
mov
jns
cmp
push
cmps
mov
(bad)
sub
mov
sti
addr16
push
mov
mov
xchg
pop
and
xchg
push
int
mov
add
aam
(bad)
cld
(bad)
pusha
dec
sti
push
sub
xor
mov
cwde
stos
mov
cmp
stos
ds
sbb
xor
fld
daa
imul
push
in
mov
aam
(bad)
dec
cmps
bound
popf
cmp
xchg
in
cmp
pusha
and
inc
mov
ds
jbe
xor
xor
adc
xchg
ja
sub
inc
aaa
adc
mul
push
push
inc
adc
inc
mov
out
cmc
aad
fisttp
(bad)
pop
add
and
test
shl
nop
xchg
adc
movs
mov
call
retf
sub
push
adc
mov
loop
push
and
xchg
push
xchg
push
data16
add
jmp
inc
(bad)
test
ret
inc
aad
dec
gs
push
xchg
fcomi
pop
push
call
or
(bad)
nop
mov
xor
sub
retf
push
xchg
xchg
inc
cdq
dec
ins
fs
enter
and
push
stos
push
mov
xchg
(bad)
test
(bad)
shl
xchg
jae
dec
iret
add
bnd
and
push
ss
(bad)
mov
mov
div
xchg
jg
add
adc
test
pop
(bad)
pop
ss
push
arpl
test
leave
(bad)
retf
sub
std
shl
std
mov
ret
and
and
push
call
add
call
mov
mov
cmp
imul
lds
jae
ja
data16
sbb
pop
jo
cmp
push
jmp
(bad)
mov
sbb
data16
push
dec
inc
fbstp
ja
dec
xlat
bound
xor
push
dec
xchg
xor
and
aad
pop
or
repz
scas
movs
inc
mov
dec
sbb
xor
pop
fmul
aad
cmp
(bad)
mov
jo
add
and
fst
fs
inc
push
cmp
xchg
add
jne
test
imul
mov
(bad)
push
(bad)
daa
enter
out
ret
ja
mov
js
jmp
pop
or
pop
jmp
or
shl
push
(bad)
retf
inc
xchg
test
pop
xchg
push
mov
jbe
fnstenv
es
or
pop
xor
inc
mov
cmps
push
push
cmps
ins
adc
(bad)
sub
add
xlat
pop
push
push
cmp
inc
dec
(bad)
pushf
mov
jae
inc
inc
(bad)
ja
stos
mov
cmp
cmp
inc
(bad)
sbb
jbe
cmps
or
xchg
jne
gs
fadd
pop
(bad)
sti
out
(bad)
mov
call
stos
xchg
xchg
mov
or
mov
inc
xor
add
jae
pop
inc
test
mov
imul
add
mov
inc
dec
xor
call
sub
pushf
cmps
hlt
iret
jp
xor
push
pop
test
pusha
pop
(bad)
pop
(bad)
adc
arpl
pop
inc
mov
push
add
lock
push
div
lahf
xchg
jmp
add
(bad)
rol
jmp
hlt
loop
aas
cmp
mov
add
rcl
adc
repnz
stos
bound
arpl
test
scas
mov
(bad)
ror
sbb
sbb
(bad)
jnp
sahf
add
xor
xchg
mov
js
dec
mov
push
mov
sbb
pop
rol
imul
enter
mov
stc
inc
dec
jbe
nop
cmp
adc
test
add
jo
inc
xchg
sbb
dec
(bad)
div
sub
cmp
xchg
mov
out
addr16
inc
(bad)
pop
cmps
or
push
bound
cmps
clc
fdiv
fabs
ss
push
push
mov
cmp
jecxz
mov
add
test
mov
sub
xlat
lock
(bad)
push
mov
mov
(bad)
mov
mov
or
(bad)
mov
pop
xchg
xlat
test
mov
push
nop
mov
mov
add
mov
xchg
imul
pop
das
inc
pop
push
push
es
push
mov
jo
pop
pop
mov
mov
sbb
mov
jb
push
add
or
xchg
aaa
mov
dec
mov
dec
pop
pop
ins
xchg
xlat
mov
addr16
push
ja
test
mov
lods
mov
clc
sub
sbb
mov
xor
aaa
sbb
mov
adc
and
push
lea
dec
adc
aad
dec
call
rcl
pop
push
mov
inc
pop
retf
jg
add
pop
pop
mov
add
data16
mov
mov
cmp
add
push
inc
inc
push
mov
iret
dec
cmps
jno
push
fst
(bad)
lds
or
fdivp
(bad)
(bad)
nop
mov
inc
jg
(bad)
xchg
xchg
cmps
popf
pop
or
(bad)
push
enter
hlt
and
ja
in
jne
dec
cli
(bad)
je
xchg
inc
pop
cmps
adc
aaa
xlat
jns
xor
and
aas
loop
push
mov
movs
jbe
and
fisub
xchg
or
pop
xor
in
fild
and
xor
pushf
bound
cmps
jmp
sub
pop
push
or
pop
leave
push
cwde
mov
es
jne
call
xor
cmp
inc
add
jp
ds
leave
sub
idiv
xlat
xchg
mov
inc
(bad)
fsubr
inc
lock
hlt
mov
mov
cwde
ret
dec
xchg
push
test
enter
mov
sbb
adc
mov
xor
cmps
fsubr
fst
inc
xor
fld
push
stos
test
pop
into
jo
aaa
nop
pusha
dec
mov
push
xchg
xor
mov
inc
sbb
int
inc
into
out
jecxz
mov
pop
sbb
add
(bad)
ror
ret
in
enter
ret
push
xchg
push
jnp
inc
and
jmp
retf
rol
pop
inc
xchg
imul
dec
data16
pop
ja
and
cmps
dec
xchg
or
fdiv
test
lea
cli
clc
lahf
dec
push
or
xlat
sbb
imul
(bad)
fld
scas
test
cmp
xchg
nop
mov
aaa
sub
sub
vmovaps
xchg
sbb
shl
xchg
push
dec
inc
in
xchg
mov
gs
call
repz
stos
inc
fnstenv
out
ds
das
call
add
mul
int
les
inc
iret
(bad)
xchg
dec
out
xchg
ss
jae
xchg
cmps
cmp
rcl
shr
inc
call
in
(bad)
fidivr
fwait
mov
test
hlt
inc
cli
scas
(bad)
out
stos
(bad)
fld
scas
test
push
(bad)
sti
push
dec
repnz
and
xchg
push
jb
and
dec
call
add
sti
fadd
in
inc
jge
dec
push
outs
adc
adc
inc
xchg
or
movs
pop
in
lock
jle
cwde
sbb
ja
add
call
xor
(bad)
push
test
repnz
mov
sbb
cmp
push
xchg
ds
dec
mov
jle
inc
(bad)
push
mov
es
cmps
mov
inc
adc
pop
xor
pusha
sub
add
movs
pop
ja
call
inc
adc
movs
and
(bad)
mov
or
jle
imul
mov
nop
cmp
mov
adc
and
adc
jmp
push
addr16
mov
mov
mov
jbe
cmp
and
std
ds
xlat
loopne
push
es
sahf
inc
addr16
lds
nop
pop
pop
jns
jb
jmp
ret
daa
aam
mov
out
jecxz
daa
nop
xchg
jmp
out
mov
push
jns
add
test
loope
mov
in
adc
ss
xchg
and
mov
xchg
push
or
or
mov
(bad)
out
push
out
inc
dec
xor
mov
daa
nop
lea
(bad)
sbb
not
or
data16
cmp
imul
inc
rol
leave
push
sbb
pop
and
aaa
icebp
fld
jbe
out
add
fs
mov
leave
aam
addr16
adc
rcl
lods
aam
xlat
push
xor
in
cmps
dec
xchg
ja
xor
and
repnz
fcom
inc
mov
gs
and
dec
repnz
mov
fsubr
rcl
adc
adc
mov
cmps
adc
mov
add
dec
sahf
cmp
jae
ret
push
jmp
xchg
pop
xchg
in
adc
and
fistp
cmp
icebp
aaa
fcom
test
lea
(bad)
icebp
jae
xchg
lods
and
imul
ja
ret
daa
(bad)
out
stc
mov
mov
(bad)
imul
mov
pop
fs
mov
mov
mov
mov
jge
movs
arpl
xchg
imul
ret
sbb
loop
(bad)
add
imul
mov
dec
xchg
es
or
dec
out
mov
mov
popf
xchg
xchg
inc
cmp
xchg
sbb
test
mov
jle
gs
or
cmp
push
sub
shl
nop
add
jae
cs
cmp
jns
push
popf
push
out
dec
or
cwde
jl
dec
mov
mov
xlat
sahf
shr
pop
mov
cwde
mov
sbb
xchg
xchg
mov
sahf
neg
pop
sub
jmp
jmp
jle
loope
dec
mov
sti
dec
fistp
cmp
(bad)
push
push
outs
sub
imul
sti
mov
pcmpeqd
rcr
mov
call
cmp
(bad)
mov
dec
adc
pop
xor
stos
out
pop
jp
dec
push
iret
jnp
fwait
popa
stos
mov
jecxz
std
call
dec
scas
iret
sahf
lahf
jp
push
ins
cmc
xor
lock
lds
mov
daa
ror
outs
pop
pop
sti
jp
push
or
cli
cwde
mov
sbb
mov
add
fsub
mov
mov
sbb
sub
ds
sub
fidivr
fistp
lock
(bad)
cmc
xor
sti
pop
in
mov
sar
(bad)
sbb
sahf
jo
ret
popa
pop
sbb
cmp
dec
push
call
test
sbb
or
sbb
outs
dec
test
fbstp
mov
dec
cmp
jl
pop
inc
je
fucomi
jg
aam
pop
fiadd
and
sbb
add
fadd
push
lock
fcomp
sbb
and
sbb
xor
cmp
hlt
push
loop
into
les
mov
cmp
push
into
xchg
scas
lock
push
les
adc
stos
xlat
les
cmps
rol
into
pop
jl
into
add
adc
cmp
shr
pop
scas
adc
push
scas
js
add
cmps
xchg
leave
xor
push
mov
xor
jmp
mov
(bad)
xchg
loop
sbb
outs
jg
mov
out
cmp
outs
jge
cmp
lock
sub
adc
inc
sbb
imul
push
std
out
loop
dec
lock
retf
inc
in
cmp
xor
jo
in
push
sub
xor
jne
push
imul
and
mov
inc
out
push
add
push
sub
neg
mov
push
mov
popf
xchg
dec
mov
xor
and
mov
(bad)
fadd
push
(bad)
nop
es
push
hlt
cmps
adc
sub
addr16
loop
pop
mov
outs
adc
ins
movs
movs
cmc
retf
jne
mov
push
jmp
fnstcw
or
outs
loope
pop
out
sahf
into
xor
je
sbb
cs
dec
nop
scas
leave
pop
xchg
push
adc
shl
pop
rcr
pop
imul
adc
add
inc
(bad)
xor
push
xchg
cs
push
test
pop
aas
mov
sti
rcl
ficom
scas
xor
mov
xchg
cli
cmc
mov
mov
sbb
xor
cs
lods
test
repz
mov
jae
mov
push
sub
sub
(bad)
push
or
(bad)
sub
cmc
fisubr
mov
movs
dec
xor
cmp
adc
(bad)
fnstenv
nop
jle
jle
(bad)
mov
mov
pop
loopne
sbb
movs
outs
shl
repnz
div
inc
sar
lods
push
fucompp
scas
shl
cmp
adc
mov
cmp
mov
mov
pop
cmp
xchg
repz
ficom
test
jle
jg
div
(bad)
adc
test
push
ds
les
outs
stc
sti
xor
jle
std
sbb
xor
aad
mov
out
jge
add
out
xchg
cli
xchg
out
xchg
pop
inc
outs
adc
mov
sbb
jne
aam
mov
sbb
inc
cmp
jb
push
adc
outs
outs
std
sti
cmp
jle
sar
xchg
repnz
cli
inc
mov
mov
out
pop
cmp
movs
add
ficomp
out
cmc
pushw
mov
stc
ficomp
mov
sbb
xchg
add
test
push
jle
cli
and
jl
cli
scas
add
and
fidivr
mul
push
jno
add
je
pop
scas
and
xor
ficom
sub
mov
sbb
ds
jns
cli
movs
add
sub
lock
mov
loope
mov
push
sub
inc
sbb
mov
jno
stos
mov
jge
inc
fsubp
pusha
ja
les
mov
cmp
icebp
and
mov
push
xor
in
loope
dec
aas
sub
jg
jnp
gs
test
dec
mov
push
cmp
lods
in
std
stc
cmps
std
cmps
jge
jge
jge
jl
test
gs
sar
fidivr
adc
sti
inc
cmp
das
jbe
add
out
(bad)
mov
cld
dec
mov
retf
ds
lock
sysenter
mov
stos
ds
jno
cli
fstp
adc
jns
cli
sub
mov
sub
sub
jno
in
push
xor
repz
and
mov
push
inc
mov
stos
dec
jg
fidivr
pop
jp
mov
loope
test
mov
aam
mov
jae
stc
mov
repnz
stc
loope
jg
enter
or
test
(bad)
cs
in
outs
imul
pop
cld
adc
faddp
call
adc
cmp
ficomp
retf
call
imul
push
imul
cmp
pop
mov
lods
fidiv
sar
inc
sbb
sbb
ds
mov
mov
lahf
mov
addr16
dec
lahf
movs
sahf
hlt
xchg
scas
or
fstp
xor
fnstcw
adc
mov
call
pop
mov
mov
mov
sbb
jmp
cmps
mov
dec
push
out
dec
add
outs
or
sbb
cmps
add
dec
mov
pop
push
dec
and
jmp
retf
call
jmp
cmps
sar
ds
sbb
imul
adc
into
jmp
arpl
jl
pop
and
iret
mov
mov
shl
pop
iret
mov
das
or
dec
daa
ds
fimul
mov
sbb
outs
mov
icebp
pop
out
(bad)
cwde
call
xor
jg
iret
adc
sub
sahf
or
mov
dec
xchg
cmps
or
(bad)
stos
pop
mov
push
imul
sbb
xor
retf
iret
mov
outs
adc
cwde
fisubr
iret
xchg
jl
cmp
cdq
daa
in
pop
int3
mov
arpl
les
outs
mov
outs
inc
sbb
xchg
mov
retf
fs
fistp
bound
jne
mov
sbb
cmps
jmp
sub
shl
inc
jne
sbb
int3
cld
lods
dec
clc
pop
inc
cmps
fadd
xor
xchg
movs
scas
dec
fcmovne
cwde
test
fadd
xchg
push
mov
in
mov
dec
add
test
add
jl
push
out
add
sub
inc
mov
ret
dec
loop
xchg
out
inc
enter
mov
mov
into
xchg
arpl
test
retf
out
add
sub
push
pop
out
test
inc
in
imul
mov
popa
aam
sbb
retf
data16
jg
or
add
retf
xchg
fdiv
test
dec
mov
in
inc
enter
cmp
jg
dec
pop
stos
push
test
mov
leave
cmps
gs
out
imul
mov
neg
(bad)
clc
inc
xor
pop
jns
loop
call
pop
iret
push
cmc
fsub
and
hlt
in
jge
push
stos
cli
pop
push
stos
call
in
ret
push
int
test
test
fld
or
out
movs
lds
add
add
outs
fmulp
cmp
xchg
and
nop
fdivr
imul
cmc
aaa
mov
in
in
movs
ja
retf
jo
movs
aam
pop
lahf
fsub
scas
nop
aaa
outs
dec
les
fwait
aad
hlt
call
mov
ss
add
les
add
scas
rcl
scas
les
mov
fs
jmp
or
ins
mov
xchg
sbb
mov
dec
sub
or
xchg
push
ror
push
inc
lahf
and
sub
or
fwait
inc
aaa
mov
add
les
rcl
in
jmp
lahf
xor
or
aas
sar
jae
je
mov
fucomi
mov
mov
retf
pop
jmp
cmp
pop
loopne
test
daa
outs
hlt
aam
repz
lahf
mov
add
jmp
or
ret
aam
and
fmulp
inc
jmp
or
push
movs
xor
dec
sti
jg
imul
sbb
js
mov
push
aas
dec
adc
mov
pusha
push
loope
in
sbb
xor
dec
and
mov
dec
pop
sub
movs
pop
pusha
inc
adc
fwait
sbb
xor
ins
aas
and
pop
jg
mov
sar
jmp
add
lea
arpl
add
loopne
rcl
jmp
sbb
fisub
ja
xchg
jmp
out
inc
icebp
sbb
ret
aas
jnp
je
leave
ja
scas
adc
fucom
loopne
frstor
pusha
pop
movs
mov
les
mov
sahf
jecxz
aas
lea
add
sub
adc
ins
jg
iret
and
inc
mov
lods
dec
cwde
rcr
sub
inc
pop
ins
rcr
pop
push
outs
mov
and
add
(bad)
scas
nop
jg
adc
add
jo
mov
aam
pop
call
cmps
or
cmp
push
(bad)
jns
push
ja
aas
pop
pop
mov
shl
xor
xchg
ja
cli
js
nop
call
mov
push
outs
js
mov
fwait
jmp
sub
js
sar
mov
std
lds
(bad)
and
push
push
fcomp
(bad)
in
fst
or
mov
sub
fistp
xchg
dec
pop
mov
push
xor
pusha
pop
mov
sbb
ins
xchg
push
das
mov
jle
xor
push
xchg
cli
fist
xchg
mov
push
sbb
sbb
mov
nop
mov
sbb
push
mov
sbb
mov
inc
fstp
xchg
mov
mov
adc
addr16
sbb
les
sbb
xchg
sar
fild
mov
add
stos
rol
cmp
inc
mov
rcr
adc
inc
mov
push
jne
shr
add
nop
rcl
cmp
nop
add
add
add
rcr
cmp
fild
mov
nop
fstp
push
jmp
cmp
hlt
idiv
outs
pop
push
mov
stos
nop
fistp
mov
push
jae
pop
outs
and
sti
shr
not
fcmovnu
cmp
sar
clc
iret
lahf
stc
push
mov
push
ror
nop
cmp
dec
mov
scas
ret
push
sar
adc
cmp
popf
nop
popa
jno
mov
mov
iret
or
and
or
test
aaa
dec
pop
test
ds
cmps
add
outs
pop
test
leave
ja
pop
xor
movs
fwait
mov
ja
push
dec
mov
call
lea
add
jecxz
mov
loopne
(bad)
dec
mov
xor
mov
(bad)
std
in
xchg
push
addr16
dec
xor
clc
fstp
mov
out
rcr
(bad)
mov
sub
jno
mov
ins
int3
stos
imul
xchg
mov
hlt
lea
popa
mul
pushf
ins
or
int
dec
popf
sahf
push
lods
aaa
dec
pop
add
stos
pop
xlat
mov
fdivp
pushf
stos
pop
sbb
leave
and
popa
xlat
stos
jmp
xor
cmp
rcr
out
xchg
scas
shl
aas
add
jp
pop
(bad)
cmp
sub
mov
jl
xchg
push
xchg
and
adc
popa
add
jle
mov
mov
call
add
xlat
in
loope
lds
shl
mov
loop
mov
test
rol
mov
sub
pop
add
xor
sbb
shr
call
test
xor
loope
leave
mov
aaa
out
jmp
xchg
sub
inc
push
test
xchg
jg
not
xchg
jne
(bad)
or
stos
rol
outs
scas
inc
or
mov
pop
fs
mov
mov
sar
sub
in
mul
push
cs
xchg
xchg
movs
mov
jg
jl
jmp
xor
adc
mov
mov
mov
xchg
dec
sbb
jmp
fsub
and
pop
mov
stc
arpl
cwde
enter
les
sub
cmps
loopne
mov
xchg
cmps
repz
loope
pop
dec
pop
addr16
std
daa
popf
xlat
dec
(bad)
scas
adc
popa
xor
daa
scas
mov
adc
imul
das
mov
adc
cmc
nop
cmp
fcomp
xlat
xchg
cmps
push
movsx
arpl
iret
mov
mov
dec
loop
idiv
in
loope
iret
push
addr16
mov
inc
addr16
mov
mov
mul
and
test
rol
daa
in
mov
push
inc
inc
add
xchg
add
test
inc
add
gs
mov
xchg
inc
cmps
inc
sbb
fs
movs
imul
push
cmp
shl
loope
ins
cmc
addr16
cmp
shl
aaa
int3
mov
movs
inc
stos
test
shr
aaa
inc
mov
add
inc
hlt
leave
(bad)
loope
dec
fadd
xchg
out
loop
aaa
add
shl
mov
movs
jmp
pop
mov
test
addr16
and
mov
rol
daa
bound
cwde
add
lea
sbb
mov
stos
sub
or
call
stos
dec
addr16
(bad)
pop
bound
ja
ret
push
cmp
fwait
sub
push
cmp
push
adc
cld
mov
imul
cmp
pop
jne
cmps
push
xor
xchg
inc
in
shl
pop
jne
adc
xchg
jne
call
and
xchg
and
and
daa
and
adc
pop
jne
xchg
push
mov
cmps
cdq
xchg
or
call
fmul
jg
(bad)
jle
mov
int3
push
sar
xchg
mov
jecxz
loopne
clc
(bad)
or
or
leave
mov
and
fs
xlat
daa
aam
push
in
in
and
xor
ja
imul
jbe
xor
ss
push
pop
mov
mov
enter
daa
aam
adc
es
xchg
jnp
retf
jns
mov
mov
jae
arpl
stc
or
or
retf
aad
ror
sub
ins
mov
mov
xchg
mov
push
fistp
cs
(bad)
pop
xchg
pop
sub
push
or
in
pop
jb
xor
push
pop
push
sub
(bad)
adc
cdq
call
jbe
mov
mov
push
pop
mov
movs
cmps
cmovo
and
gs
push
cwde
enter
sub
mov
or
sar
test
loop
xchg
push
add
mov
sti
shl
in
jp
bnd
xor
pop
movs
jp
adc
stc
mov
jns
lods
mov
fwait
pop
adc
test
retf
dec
pop
mov
inc
dec
xchg
push
adc
jle
js
sub
or
pusha
sub
(bad)
out
call
aas
jne
sub
pop
dec
int
sbb
fadd
cs
clc
dec
ret
cwde
retf
jae
std
pop
sub
pop
fist
xchg
xchg
in
ins
pop
adc
xor
adc
fldenv
ret
gs
and
and
jmp
gs
adc
addr16
into
cmps
fsubr
js
mov
aam
inc
les
ret
add
sub
sub
xchg
into
loopne
data16
pusha
pop
adc
push
cs
cs
pop
jns
xchg
cwde
ret
out
ins
dec
aas
cmp
test
inc
xchg
test
jge
fwait
pop
pop
adc
xor
pop
xchg
cmps
popa
sub
fcom
arpl
sar
movs
or
inc
in
xchg
jmp
shr
jbe
adc
je
push
mul
dec
inc
inc
push
inc
jne
sub
pop
adc
pop
inc
jle
pop
or
add
xor
jl
push
add
sbb
arpl
test
xchg
dec
push
pop
je
sbb
inc
jbe
pop
div
ss
adc
push
je
inc
fsubr
push
pop
adc
jbe
push
je
jo
test
add
pop
push
sbb
pop
push
jbe
add
and
pop
push
pop
pop
ss
not
adc
pop
xor
push
pop
adc
xchg
mov
push
pop
push
xor
or
je
and
add
loopne
add
jecxz
jmp
pushf
xchg
imul
dec
ficomp
jl
add
add
mov
leave
xchg
mov
adc
xor
shl
xor
xor
jbe
inc
js
push
xchg
cmps
push
xchg
out
xchg
push
xchg
cmps
push
xchg
out
xchg
push
xchg
cmps
push
xchg
out
xchg
push
xchg
test
hlt
or
cmp
xchg
dec
and
jmp
aas
jecxz
or
push
les
repnz
push
mov
in
into
rcl
inc
int3
push
sar
ss
ret
ret
dec
daa
mov
(bad)
and
push
out
xchg
push
jecxz
data16
jno
jno
xor
and
aam
add
add
mov
xchg
sub
sub
xor
fiadd
dec
adc
push
jo
mov
into
(bad)
popa
pop
outs
fldenv
mov
or
add
adc
dec
lock
cdq
mov
push
movs
aad
ja
cmc
js
xor
push
push
cmc
pop
gs
cmp
out
sub
add
(bad)
push
enter
loope
push
pop
ss
rcr
popa
adc
xor
rcr
push
iret
fs
and
add
xlat
outs
repz
pop
jae
data16
frstor
fcmovb
popf
std
call
or
aas
or
sti
imul
shl
arpl
mov
sahf
adc
inc
push
xor
cmps
jmp
mov
sub
sbb
sub
push
sbb
pop
int3
sbb
add
lods
jno
xchg
fwait
lock
sbb
imul
or
lea
push
scas
xor
repz
data16
xchg
lfs
jbe
xor
mov
cmp
inc
adc
jne
xchg
lahf
out
gs
leave
sbb
push
push
pcmpgtw
shl
cmp
outs
mov
sub
call
pop
or
lea
(bad)
mov
je
aad
inc
pop
loopne
data16
ds
pushf
out
neg
imul
test
std
and
stc
cmps
jge
jns
js
sub
mov
(bad)
push
jp
inc
bound
repz
clc
aam
add
stc
movs
push
(bad)
aam
pop
cmp
pop
adc
sbb
cdq
ret
lahf
fdiv
sbb
push
cmp
dec
add
iret
sbb
jo
inc
dec
cmp
ins
cmp
adc
inc
or
sbb
jae
repz
in
aaa
inc
and
das
es
xchg
sbb
neg
pushf
push
inc
or
retf
retf
cli
cs
cmp
or
loop
retf
sub
pop
sub
and
cli
dec
in
std
enter
jns
js
pop
pop
adc
out
retf
sbb
addr16
cs
pop
movs
test
in
stos
movs
cmp
jnp
jns
cmp
and
mov
mov
push
pop
pop
or
pop
(bad)
jmp
jno
dec
sbb
stc
lods
dec
enter
(bad)
lds
cwde
pop
lods
outs
pop
jmp
dec
sub
dec
or
and
retf
stc
jmp
jle
in
dec
leave
loope
jmp
leave
sbb
sbb
imul
lea
or
ins
jno
enter
sub
add
jne
sbb
sbb
sub
pop
jmp
dec
sub
int
sbb
jns
dec
ins
xor
int3
dec
loope
imul
dec
adc
mov
mov
stos
pop
repnz
stos
imul
jle
sub
mov
or
dec
cld
push
cmp
out
jmp
sbb
mov
js
pop
test
cs
and
sub
cld
sub
fwait
in
inc
push
xor
shl
sbb
test
js
mov
xor
sbb
pushf
fs
sub
jmp
ret
dec
push
js
dec
adc
or
and
sbb
test
inc
mov
enter
lock
aad
retf
push
cmp
cmp
jbe
stos
jns
fdiv
or
mov
push
stc
sbb
jle
xor
jns
or
fcomp
outs
hlt
or
xor
les
add
repnz
xlat
pop
mov
mov
adc
inc
movs
pop
stos
ss
inc
into
aam
mov
adc
mov
sar
sub
cmp
test
mov
fiadd
test
jns
psubq
cld
mov
push
dec
enter
push
xor
xchg
call
pusha
mov
ins
rcl
push
dec
scas
push
enter
mov
cwde
cmp
dec
mov
add
lds
(bad)
sbb
out
ins
and
idiv
loopne
mov
sbb
mov
rcr
les
idiv
(bad)
mov
out
sar
push
scas
enter
or
pop
test
enter
das
mov
retf
sub
mov
adc
inc
mov
dec
pop
push
les
out
mov
(bad)
mov
mov
mov
(bad)
jle
push
stos
mov
pop
mov
pop
nop
fcomip
push
add
popa
mov
iret
into
or
cs
mov
push
add
and
addr16
xchg
fistp
cdq
mov
into
and
inc
pushf
mov
nop
popa
jne
test
scas
outs
mov
and
out
sub
xchg
test
ja
or
jmp
gs
or
add
jmp
cld
(bad)
movs
push
push
adc
cmp
jmp
pop
outs
int
rcr
inc
retf
arpl
push
retf
xor
sub
pop
adc
mov
cdq
les
jmp
mov
push
push
jmp
push
add
gs
aad
int
xchg
push
sbb
aad
out
and
push
stos
pusha
add
and
xchg
cmp
sbb
adc
jl
mov
jne
ds
xor
add
ins
leave
jo
jle
scas
xchg
lods
dec
adc
(bad)
test
mov
add
outs
xor
or
mov
out
lock
jp
cmp
inc
push
mov
xchg
aad
mov
int3
outs
inc
jmp
and
xor
push
jmp
xchg
cmps
aad
out
lods
mov
jbe
ficom
out
jecxz
cmc
pop
ss
xchg
mov
pop
sub
cdq
sbb
and
or
or
in
or
movd
dec
ss
movs
mov
dec
xchg
jmp
fidiv
ficom
sub
dec
fs
or
jnp
jg
jg
pop
js
int
stos
neg
es
mov
cmp
mov
stos
lock
and
mov
aas
pushf
or
adc
test
xor
push
stc
jp
push
test
mov
lahf
enter
stos
mov
jg
cwde
mov
and
sub
cmp
sti
push
jae
pop
lahf
pop
pop
mov
mov
push
mov
icebp
int3
cmc
inc
jg
loopne
jg
std
mov
(bad)
into
(bad)
lahf
xor
ficomp
mov
push
mov
cdq
cdq
retf
es
cmp
cmp
inc
or
mov
dec
mov
test
xchg
add
cs
push
int
aas
retf
cld
cmc
aas
push
stc
es
cmp
add
mov
and
add
sub
(bad)
data16
push
fisttp
adc
jmp
sti
pop
(bad)
mov
das
cwde
jg
ds
out
xor
shr
mov
or
push
imul
inc
aas
push
pusha
dec
or
fld1
shl
retf
ds
inc
dec
cmp
mov
dec
push
and
jmp
sbb
mov
pop
gs
in
popf
pop
push
outs
add
inc
sbb
or
jmp
jb
push
icebp
or
mul
add
adc
test
inc
push
and
dec
adc
mov
xlat
fdiv
and
int3
sbb
inc
push
daa
test
enter
stos
clc
inc
sbb
xor
push
push
sbb
aam
jl
and
push
cmps
push
mov
(bad)
pop
ja
sbb
aas
imul
loopne
scas
mov
mov
jl
test
hlt
push
pushf
xchg
ret
mov
mov
les
adc
xchg
ins
cmps
xchg
(bad)
ds
push
sbb
ds
xchg
mov
scas
sti
(bad)
je
jno
das
sbb
fs
mov
hlt
cmps
sbb
in
pop
xor
add
xor
pop
in
xchg
add
or
push
adc
popa
push
inc
jns
inc
xchg
sbb
and
inc
xchg
mov
add
jge
ret
sub
adc
sbb
loopne
push
loope
mov
xor
ds
ss
xchg
add
outs
and
pop
mov
mov
sbb
fcom
cmp
dec
sbb
test
inc
icebp
aaa
sahf
mov
out
out
cmps
fwait
ins
inc
jb
push
push
ss
jl
dec
mov
dec
adc
stc
or
inc
add
mov
xchg
xchg
push
inc
mov
popa
out
xchg
pop
mov
jp
inc
xchg
dec
out
push
mov
cs
mov
rol
push
xchg
outs
test
push
xlat
rol
test
(bad)
aad
xchg
lock
shl
mov
xchg
add
wrmsr
loopne
inc
dec
js
push
and
(bad)
cmp
mov
add
addr16
lock
js
icebp
sub
mov
xchg
mov
in
cwde
inc
ficomp
or
rol
rcl
pop
jle
xor
dec
popf
pop
retf
mov
add
int
mov
rol
in
not
das
inc
xchg
sbb
and
les
leave
push
cs
mov
lock
sbb
out
push
sub
fild
shl
xchg
push
cmps
cwde
sbb
mov
ja
inc
or
inc
xchg
fisttp
out
js
pop
or
inc
stos
sbb
cwde
or
sbb
clc
(bad)
test
inc
or
std
xor
mov
or
add
scas
shr
movs
xchg
inc
jg
pop
cmp
sub
test
xor
aas
jb
xchg
adc
jns
loop
pop
mov
cli
mov
cs
pop
fbstp
mov
push
and
ffree
pop
jecxz
movs
lods
inc
mov
jns
js
pop
fcom
push
dec
or
loop
stos
stos
(bad)
retf
sti
mov
mov
xor
xor
cmp
cdq
sahf
pop
add
dec
fnstsw
(bad)
mov
jnp
js
addr16
in
cmp
cs
sub
mov
fsubr
fadd
cmp
stos
test
retf
cmp
jnp
mov
mov
mov
fdiv
cdq
sahf
clc
jne
sub
fbstp
aad
dec
scas
mov
in
cdq
scas
mov
in
dec
rcl
cli
cmp
sbb
mov
div
pushf
call
mov
inc
xchg
push
push
sub
mov
inc
mov
push
ds
fisubr
lock
mov
dec
es
cmps
sbb
je
xor
adc
stos
inc
dec
mov
mov
lds
jns
test
inc
push
dec
cwde
fsubr
mov
mov
repnz
jne
aaa
(bad)
push
xor
retf
stos
neg
push
pop
jnp
jge
inc
xchg
xchg
fidiv
inc
in
(bad)
jge
pop
push
call
enter
adc
adc
jmp
imul
adc
push
xchg
dec
jne
call
ss
sbb
fs
pusha
xchg
outs
add
sub
cmp
call
xchg
push
mov
cmp
push
sub
loopne
out
repnz
sbb
or
out
loopne
sahf
cmp
xchg
dec
call
pop
push
ja
popa
dec
ins
pop
outs
add
mov
in
cld
push
cli
add
(bad)
fstp
inc
add
loopne
call
pushf
ss
push
int3
mov
mov
out
aaa
pop
shr
dec
out
inc
sbb
dec
(bad)
dec
adc
mov
lock
add
cmps
cmp
test
repz
mov
add
dec
pusha
lods
jne
out
out
dec
out
(bad)
arpl
popa
cmp
fcmovb
sub
mov
arpl
addr16
mov
xchg
mov
cmp
xor
aaa
ret
icebp
inc
mov
cmp
sbb
pop
xor
cmps
add
ja
and
rcl
push
mov
and
and
aam
rcl
cmp
and
pop
add
mov
nop
adc
adc
jge
inc
arpl
inc
cmps
add
sbb
and
mov
rcl
add
jo
jno
adc
shl
jle
sbb
mov
je
lock
es
push
ja
xor
(bad)
(bad)
daa
pop
push
in
push
cmps
ror
xor
xor
jns
adc
ins
xor
es
lock
loopne
and
gs
retf
jo
jle
call
add
inc
sub
loopne
xchg
rcr
sbb
cmp
push
jg
add
push
cmps
adc
pop
movs
lds
dec
cs
es
mov
and
movs
gs
shl
mov
xchg
xor
xor
and
inc
mov
nop
add
add
dec
shl
mov
aaa
aam
mov
sbb
mov
adc
adc
out
xlat
cwde
push
jmp
bnd
dec
or
jb
push
clc
cmps
sbb
ds
xchg
repnz
in
inc
sar
push
cmp
inc
lods
les
hlt
arpl
mov
push
pushf
cmps
pusha
dec
in
fucomi
lock
sar
sti
xchg
int
and
(bad)
shl
or
xor
jmp
(bad)
cmp
popa
rcl
ins
or
popf
sub
sub
pop
inc
scas
out
xor
outs
push
mov
push
push
sti
cmp
jl
lea
rol
imul
xchg
in
push
push
test
dec
push
call
lds
mov
leave
jo
xchg
inc
mov
fwait
xor
das
dec
fmul
sbb
ret
scas
sbb
(bad)
jno
mov
push
lods
sub
sub
jo
sbb
cmp
push
adc
inc
in
outs
jge
pop
sbb
mov
dec
sbb
pop
sbb
(bad)
std
cmp
int
xchg
mov
idiv
test
pop
mov
call
(bad)
nop
icebp
fucomi
daa
mov
adc
das
xor
jecxz
js
retf
push
lea
(bad)
mov
xor
or
cli
fsub
in
add
daa
lahf
ds
or
mov
dec
stos
cli
sbb
lahf
ds
jmp
cmp
(bad)
pop
movs
sahf
jno
ror
(bad)
gs
(bad)
mov
dec
sbb
aam
imul
xlat
xor
lock
les
add
rcr
pop
push
jmp
test
popa
dec
sbb
jmp
fistp
inc
loop
ins
dec
lock
(bad)
retf
fdivr
clc
jmp
dec
int3
out
pop
je
retf
xor
push
fimul
fsub
sti
push
repz
xor
rcl
dec
andps
test
mov
push
dec
cmp
loopne
aad
xor
int
xchg
enter
mov
push
loope
repnz
adc
mov
pop
ds
mov
xchg
int3
scas
lahf
dec
push
ror
pop
lds
adc
adc
lods
(bad)
cmp
int3
scas
fcomp
ins
iret
cld
mov
aas
cmc
into
ret
push
dec
pusha
xor
sbb
xchg
sbb
pop
inc
sub
retf
xor
xlat
lods
imul
ja
pop
inc
(bad)
jae
shl
loopne
jbe
icebp
push
inc
repnz
outs
aaa
ret
cmps
psubusb
cmp
push
ja
loop
pop
jecxz
xchg
sub
aaa
(bad)
lahf
aas
idiv
jmp
clc
xchg
rcr
(bad)
fxch
fsubp
nop
pop
jmp
mov
out
push
loopne
imul
ins
ret
sbb
jmp
out
push
cld
or
xor
inc
cmps
jle
inc
shr
mov
xchg
push
sbb
in
xchg
xchg
pop
mov
ja
cdq
call
jecxz
aaa
jnp
retf
mul
sti
dec
or
stos
scas
sub
xchg
sbb
das
xor
or
int3
xchg
leave
push
out
icebp
cmp
and
jecxz
sbb
cmp
push
add
cli
mov
in
push
je
or
mov
adc
test
adc
outs
clc
and
out
and
jle
lods
sub
xchg
test
xchg
dec
mov
les
inc
sbb
pop
lock
fidiv
int
inc
pop
xchg
add
das
int3
test
shr
or
ds
push
mov
pop
imul
fcomp
cmps
or
leave
test
pop
or
sbb
in
jmp
push
stos
mov
sbb
stos
fild
dec
es
neg
stc
xlat
(bad)
mov
lds
arpl
mov
inc
mov
add
xor
ficom
dec
(bad)
(bad)
and
sbb
xchg
dec
pop
cmp
cmps
push
dec
xchg
leave
imul
lahf
sub
(bad)
push
cli
out
cwde
xchg
aas
sub
mov
das
xlat
ss
mov
(bad)
mov
mov
popa
jnp
mov
call
imul
cmp
add
sbb
ficomp
imul
enter
dec
loopne
imul
xor
inc
loop
xor
inc
imul
lea
push
push
mov
or
pop
inc
sub
pop
cmp
pop
into
movs
mov
cld
mov
(bad)
inc
(bad)
retf
cmp
mov
je
pop
test
mov
fisttp
in
daa
xchg
std
jp
push
cmp
pop
xlat
ins
cmp
aam
mov
sbb
ja
jno
xlat
dec
lock
dec
sub
sub
repnz
hlt
ins
jecxz
mov
push
dec
mov
sbb
mov
or
mov
cmc
lds
mov
mov
lock
push
cdq
aaa
mov
call
pop
out
dec
adc
xchg
cmp
imul
mov
js
call
dec
pop
pop
stos
mov
retf
adc
fld
or
or
sub
mov
fdivr
cmp
push
pop
push
(bad)
retf
and
and
inc
sbb
ins
jl
mov
or
xchg
inc
hlt
das
sbb
icebp
push
test
cmp
sbb
js
inc
push
(bad)
jno
mov
cmps
fs
push
xchg
inc
js
retf
mov
out
fidivr
retf
jbe
jae
lock
js
fs
(bad)
dec
fstp
xor
stc
cmp
jecxz
repnz
xchg
clc
cdq
daa
mov
loope
dec
repnz
lahf
jg
(bad)
push
pop
cmps
pop
scas
iret
shr
pop
xor
retf
mov
sub
cmps
pop
pop
out
lods
popa
icebp
cmp
sub
xchg
stc
push
xchg
sub
sahf
xchg
scas
xchg
cli
or
xlat
es
push
in
es
and
aam
cs
notrack
aam
pusha
aas
out
mov
push
and
out
out
cmps
data16
popa
add
fs
(bad)
shl
xchg
and
push
pop
sub
push
aaa
xlat
sub
xor
ds
scas
and
adc
adc
mov
xor
(bad)
cmc
shl
inc
scas
xchg
out
cmp
dec
cmc
xchg
bound
inc
jp
in
ss
fdiv
jae
es
jle
xchg
jecxz
sub
cld
or
xor
mov
mov
jmp
rol
test
sbb
ja
not
inc
inc
pusha
xor
jle
mov
push
imul
sar
pop
aad
icebp
popa
das
lahf
fadd
lock
(bad)
out
jo
ds
mov
sub
inc
xchg
jne
xchg
pop
jp
pop
and
dec
fld
(bad)
into
outs
shl
push
inc
mov
mov
pop
gs
xchg
add
xor
dec
call
test
mov
inc
aaa
cdq
adc
inc
nop
jmp
mov
rcr
xor
rcl
mov
jno
mov
or
add
rcr
dec
hlt
mov
mov
pop
ret
push
push
lea
push
mov
call
call
mov
mov
push
mov
lea
push
push
push
push
mov
call
add
lea
push
mov
call
mov
call
test
je
mov
call
test
je
lea
push
mov
call
call
mov
push
call
movzx
push
push
lea
push
push
call
add
lea
push
mov
call
cmp
je
mov
test
je
call
test
jne
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
lea
call
mov
push
lea
mov
call
lea
push
mov
call
mov
push
call
lea
push
lea
call
mov
call
mov
push
push
call
cmp
jne
mov
call
call
push
push
lea
call
push
lea
push
call
mov
lea
call
jmp
call
mov
mov
push
push
push
mov
call
add
mov
call
mov
lea
call
mov
pop
pop
pop
mov
mov
pop
ret
mov
call
push
push
push
lea
call
push
lea
push
call
int3
push
mov
mov
push
push
push
mov
sub
push
push
mov
call
cmp
je
call
mov
mov
push
push
push
call
add
pop
pop
mov
mov
mov
pop
ret
push
lea
push
mov
call
call
mov
mov
mov
mov
push
push
call
mov
mov
test
sete
movzx
mov
push
mov
push
mov
push
push
push
push
call
add
cmp
je
mov
test
je
mov
push
push
xor
call
test
je
lea
cmp
jge
call
mov
mov
push
push
push
push
call
add
push
call
mov
mov
push
push
add
call
test
jne
mov
mov
push
push
call
test
je
call
mov
push
push
push
mov
call
add
mov
call
call
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
mov
call
add
lea
call
mov
push
lea
mov
call
mov
mov
lea
push
mov
call
mov
push
call
lea
push
lea
call
mov
call
mov
push
push
call
cmp
mov
pop
jne
call
mov
push
push
mov
call
mov
add
call
call
push
push
jmp
mov
lea
call
mov
call
mov
pop
pop
mov
mov
pop
ret
mov
test
je
mov
push
push
call
test
jne
mov
jmp
mov
jmp
mov
call
mov
mov
push
push
mov
push
push
push
mov
call
add
jmp
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
call
cmp
je
call
mov
mov
push
push
push
call
add
pop
mov
mov
mov
pop
ret
push
lea
push
mov
call
test
je
cmp
je
cmp
je
push
lea
call
mov
mov
push
lea
mov
call
mov
push
lea
call
lea
push
mov
call
mov
push
call
lea
push
lea
call
mov
call
mov
push
push
call
cmp
pop
je
mov
call
test
je
mov
lea
call
mov
call
mov
pop
pop
mov
mov
pop
ret
mov
call
call
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
lea
push
mov
call
mov
mov
lea
push
push
push
push
mov
call
mov
push
mov
call
lea
push
call
xor
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
mov
push
call
ret
int3
push
mov
push
mov
mov
test
push
je
push
call
add
mov
cmp
mov
je
xor
mov
mov
mul
seto
neg
or
push
call
add
test
mov
jne
call
lea
push
push
push
call
add
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
mov
jne
mov
mov
pop
pop
ret
push
call
test
mov
jne
push
call
int3
int3
int3
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
mov
test
je
mov
mov
push
call
mov
mov
mov
pop
ret
int3
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
push
mov
call
call
mov
mov
push
mov
push
push
push
push
mov
call
add
mov
pop
ret
push
mov
sub
lea
push
call
mov
mov
lea
push
push
push
push
mov
call
call
mov
mov
push
push
push
mov
call
add
lea
push
call
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
call
mov
mov
xor
div
mov
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
push
push
call
add
test
jne
mov
test
jne
pop
pop
xor
pop
pop
ret
pop
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
add
push
call
add
add
mov
mov
lea
call
call
mov
mov
push
push
push
push
mov
call
mov
add
push
call
mov
push
push
push
push
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
xor
cmp
je
cmp
jbe
push
lea
mov
mov
test
mov
je
lea
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
test
mov
jne
add
cmp
jb
xor
pop
mov
push
call
mov
add
mov
mov
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
mov
fld
sub
fstp
push
push
call
add
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
mov
call
xor
mov
lea
mov
mov
call
mov
lea
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
mov
mov
mov
call
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
movzx
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
test
je
mov
mov
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
call
mov
mov
mov
push
mov
push
push
push
push
push
mov
call
add
lea
call
mov
mov
lea
push
push
mov
call
mov
test
jge
call
mov
mov
push
push
push
push
call
add
mov
push
call
push
push
push
call
push
call
mov
push
push
mov
call
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
lea
mov
call
mov
mov
lea
mov
mov
mov
test
je
mov
mov
push
call
mov
lea
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
lea
push
call
call
mov
mov
push
mov
push
push
push
push
mov
call
add
lea
call
lea
mov
call
push
push
push
call
push
call
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
mov
pop
ret
push
mov
push
push
mov
push
mov
sub
push
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
add
mov
mov
mov
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
lea
push
call
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
mov
push
push
call
mov
test
jne
call
mov
mov
call
push
mov
push
push
call
add
jmp
xor
mov
mul
seto
neg
or
push
call
mov
add
mov
mov
mov
push
push
call
test
jne
call
mov
mov
call
push
mov
push
push
call
mov
push
call
add
jmp
lea
call
mov
mov
mov
cmp
je
push
call
push
lea
push
push
mov
mov
call
add
push
push
push
push
push
push
lea
push
push
call
cmp
jl
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
lea
call
mov
mov
push
sub
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
je
lea
push
push
mov
mov
push
call
mov
mov
lea
call
cmp
je
add
cmp
jne
add
cmp
jne
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
push
mov
mov
call
add
lea
push
call
mov
mov
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
call
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
call
add
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
lea
call
call
mov
mov
mov
push
push
push
push
call
add
lea
call
mov
lea
call
test
jne
call
mov
mov
push
push
push
push
mov
call
add
jmp
mov
add
push
call
add
add
mov
mov
push
push
lea
call
mov
lea
jmp
lea
mov
add
sub
jne
mov
lea
push
push
call
mov
cmp
je
mov
lea
mov
add
push
call
add
add
mov
mov
lea
push
lea
call
mov
lea
call
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
lea
call
test
je
lea
push
push
call
add
test
je
lea
push
push
call
add
test
je
push
push
lea
mov
mov
push
call
mov
mov
lea
call
lea
push
push
call
mov
neg
sbb
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
test
je
push
call
mov
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
push
jne
mov
push
push
lea
push
call
mov
mov
shl
add
lea
js
mov
mov
mov
sub
sub
test
jge
mov
xor
test
setne
test
jne
call
mov
xor
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
mov
push
mov
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
cmp
jne
call
mov
mov
mov
push
push
push
call
mov
mov
mov
add
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
mov
lea
call
jmp
call
mov
mov
push
push
push
mov
call
mov
add
test
mov
mov
jne
mov
mov
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
mov
add
mov
push
lea
mov
call
lea
call
mov
push
add
call
add
cmp
jg
lea
push
lea
push
lea
call
mov
call
test
je
push
push
mov
mov
push
push
lea
push
lea
call
mov
call
mov
mov
lea
call
jmp
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
cmp
sete
test
push
je
lea
push
lea
call
mov
call
test
mov
jne
mov
push
push
mov
mov
push
call
mov
mov
lea
call
jmp
lea
push
lea
call
mov
test
je
mov
push
push
call
add
test
setne
test
je
push
push
lea
push
lea
call
mov
call
sub
lea
fstp
call
mov
push
mov
mov
push
call
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
add
call
add
cmp
jle
mov
push
push
call
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
call
mov
mov
mov
mov
add
push
sub
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
push
mov
mov
push
call
mov
push
mov
mov
push
call
mov
lea
push
mov
call
add
mov
mov
mov
mov
cmp
jne
test
je
mov
cmp
jne
add
add
test
jne
xor
jmp
call
push
push
jmp
call
push
push
push
lea
call
push
lea
push
jmp
sbb
sbb
test
sete
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
test
je
mov
mov
push
push
push
push
call
push
mov
mov
push
call
mov
push
mov
mov
push
call
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
je
mov
test
je
push
call
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
push
lea
push
push
mov
call
test
jne
cmp
jne
mov
push
push
mov
call
cmp
jne
call
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
test
push
jne
or
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
push
not
test
push
mov
je
mov
push
mov
call
cmp
je
xor
cmp
mov
jbe
mov
mov
test
je
push
push
push
call
push
lea
push
push
call
mov
test
jne
mov
add
cmp
mov
jb
pop
pop
pop
mov
mov
mov
pop
ret
mov
call
mov
test
je
jmp
lea
push
push
push
push
lea
sub
push
mov
call
mov
push
lea
push
push
call
push
lea
push
push
call
mov
lea
push
lea
push
push
mov
mov
call
test
jne
cmp
jne
mov
xor
mov
mov
mul
seto
neg
or
push
call
xor
add
test
setne
mov
test
je
lea
push
push
push
call
mov
mov
add
xor
cmp
setne
test
je
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
lea
push
call
test
jne
mov
pop
pop
pop
mov
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
xor
mov
mov
push
push
call
cmp
jne
mov
lea
call
pop
pop
mov
mov
mov
pop
ret
mov
push
lea
push
lea
push
lea
push
mov
mov
call
cmp
je
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
lea
push
push
push
lea
push
push
push
call
mov
test
jge
call
mov
mov
push
push
push
push
call
add
mov
mov
push
call
mov
lea
call
pop
pop
pop
mov
mov
mov
pop
ret
push
call
cmp
mov
jne
push
call
mov
push
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
lea
mov
add
sub
jne
mov
mov
mul
seto
mov
neg
or
push
call
add
xor
test
mov
jbe
lea
lea
xor
mov
mov
jmp
lea
mov
test
jl
mov
cmp
jge
mov
add
mov
test
jne
xor
mov
jmp
push
call
mov
test
mov
je
mov
mov
lea
test
mov
je
test
jne
xor
jmp
push
call
push
push
call
mov
mov
mov
mov
mov
push
call
sub
sub
add
add
cmp
jb
mov
mov
mov
lea
lea
mov
add
sub
jne
lea
push
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
push
push
push
or
mov
mov
push
push
mov
call
mov
push
mov
call
add
test
jge
call
mov
mov
mov
push
push
push
push
push
call
add
mov
lea
push
call
jmp
call
mov
mov
call
test
je
push
mov
call
mov
push
call
mov
lea
push
call
mov
mov
add
lea
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
push
push
call
test
jne
lea
call
mov
mov
mov
push
push
lea
call
mov
lea
push
push
mov
mov
push
call
mov
mov
mov
call
mov
lea
call
mov
mov
pop
mov
pop
ret
call
mov
mov
push
mov
push
push
push
push
mov
call
mov
add
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
push
call
add
mov
mov
test
je
mov
mov
lea
test
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
mov
mov
test
je
mov
push
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
mov
push
push
mov
mov
mov
mov
push
push
push
call
mov
mov
sub
mov
sub
mov
lea
sub
add
or
mov
jge
push
mov
call
mov
mov
mov
push
push
add
push
mov
lea
push
call
add
test
jl
mov
cmp
jg
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
push
call
add
mov
mov
mov
test
je
mov
mov
mov
lea
test
je
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
push
mov
mov
lea
push
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
lea
push
push
mov
call
mov
mov
add
push
push
push
push
push
push
push
call
mov
cmp
jne
xor
pop
mov
mov
mov
pop
ret
push
push
lea
push
push
lea
push
push
call
test
je
mov
mov
test
jbe
push
lea
push
lea
call
mov
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
lea
push
push
lea
push
push
call
test
jne
push
call
pop
xor
pop
mov
mov
mov
pop
ret
push
call
mov
pop
mov
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
mov
test
push
mov
push
mov
mov
jne
call
cmp
jne
call
mov
cmp
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
mov
lea
call
push
call
add
add
mov
mov
pop
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
push
mov
mov
mov
mov
cmp
mov
mov
je
push
lea
mov
or
mov
lea
mov
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
call
add
cmp
mov
mov
jne
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
call
mov
mov
push
lea
call
mov
lea
push
lea
push
mov
call
mov
mov
lea
call
test
pop
je
lea
push
lea
push
call
mov
mov
push
mov
push
call
add
mov
mov
lea
call
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
mov
mov
sub
push
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
mov
sub
push
mov
sub
cmp
pop
jae
push
push
lea
mov
mov
mov
call
mov
lea
push
lea
call
push
lea
push
call
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
call
mov
push
push
call
add
push
lea
call
mov
mov
lea
push
push
call
add
mov
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
call
test
je
lea
push
mov
call
mov
mov
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
mov
push
push
push
call
add
push
lea
call
mov
lea
push
lea
push
call
add
mov
mov
mov
lea
call
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
call
add
test
je
mov
push
push
push
call
add
push
lea
call
mov
mov
lea
push
push
call
add
mov
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
call
call
mov
mov
push
push
push
call
call
push
mov
call
mov
mov
push
push
push
push
call
call
mov
mov
push
push
push
call
push
call
mov
add
test
jle
push
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
mov
call
xor
test
setne
test
je
mov
mov
mov
call
add
mov
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
sub
je
sub
je
sub
jne
push
lea
push
lea
call
mov
call
push
push
lea
push
jmp
push
lea
push
lea
call
mov
call
sub
fstp
lea
push
push
call
add
jmp
push
lea
push
lea
call
mov
call
test
mov
jne
mov
push
push
lea
push
call
add
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
call
add
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
sub
test
jg
pop
mov
push
push
call
test
je
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
call
mov
add
pop
pop
mov
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
push
mov
mov
push
push
push
mov
call
push
mov
mov
call
mov
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
lea
call
mov
mov
add
cmp
ja
jmp
call
mov
mov
mov
push
push
push
call
add
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
mov
call
add
mov
call
push
call
add
push
lea
push
mov
call
mov
push
lea
call
mov
lea
call
call
mov
mov
mov
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
push
lea
push
mov
call
mov
push
lea
call
mov
lea
call
call
mov
mov
push
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
call
mov
push
push
mov
call
add
call
push
push
push
lea
call
push
lea
push
call
mov
lea
call
mov
pop
mov
mov
pop
ret
push
inc
dec
add
dec
add
inc
dec
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
push
push
or
test
jne
or
mov
mov
call
push
mov
mov
call
add
mov
mov
test
jne
call
mov
mov
push
push
push
call
call
mov
mov
push
push
push
call
call
mov
mov
push
push
push
call
mov
mov
add
mov
cmp
je
call
cmp
mov
jne
call
mov
mov
mov
push
push
push
push
call
add
cmp
jne
call
mov
jmp
call
mov
mov
push
push
push
call
add
mov
mov
pop
pop
mov
pop
ret
mov
push
push
push
call
add
test
je
mov
test
jne
lea
call
mov
mov
test
jne
mov
mov
push
mov
lea
push
push
push
lea
push
push
call
add
lea
push
mov
call
mov
lea
call
mov
mov
pop
pop
mov
pop
ret
cmp
jne
cmp
jbe
mov
call
mov
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
call
mov
mov
push
push
push
call
call
mov
mov
push
push
call
mov
push
call
push
push
call
xor
add
test
mov
mov
jne
mov
mov
mov
push
lea
push
lea
call
mov
test
je
test
je
push
call
add
mov
call
mov
mov
push
push
push
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
test
jne
mov
call
push
push
push
lea
call
push
lea
push
call
call
mov
push
push
mov
call
call
mov
mov
push
push
push
mov
call
push
push
push
call
push
call
mov
add
push
mov
mov
call
mov
push
push
mov
call
mov
test
je
push
push
push
push
call
mov
add
push
push
mov
call
call
mov
mov
mov
push
push
push
call
call
mov
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
push
mov
push
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
mov
push
lea
call
mov
push
lea
push
mov
call
mov
push
push
lea
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
push
mov
call
push
push
push
call
push
call
add
push
mov
mov
call
mov
push
push
mov
call
mov
test
pop
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
push
push
call
mov
add
push
push
mov
call
call
mov
mov
mov
push
push
push
call
call
mov
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
call
test
pop
je
mov
jmp
xor
ret
push
mov
mov
sub
call
test
je
push
call
pop
mov
pop
ret
push
mov
jmp
dec
cmp
je
mov
call
add
cmp
jne
pop
ret
jmp
push
mov
jmp
dec
cmp
je
mov
push
call
add
cmp
jne
pop
ret
jmp
push
mov
push
mov
push
call
push
call
add
pop
ret
push
mov
push
push
push
mov
xor
cmp
mov
jge
call
mov
cmp
jl
mov
cmp
jne
push
push
call
push
call
add
mov
mov
jmp
mov
cmp
jne
mov
shl
push
call
push
push
mov
call
add
mov
jmp
mov
cmp
jg
mov
cmp
jge
mov
sub
push
lea
push
call
jmp
jle
sub
push
lea
push
call
pop
pop
mov
jmp
mov
test
jne
mov
cdq
and
add
sar
cmp
jl
mov
cmp
jle
mov
jmp
cmp
jge
push
pop
add
cmp
mov
jl
mov
mov
cmp
jl
shl
push
call
mov
mov
shl
push
push
mov
shl
push
push
call
mov
mov
sub
push
lea
push
call
push
call
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
test
push
mov
jge
call
cmp
jl
push
lea
push
call
mov
push
lea
call
pop
pop
ret
push
mov
mov
push
not
test
mov
push
mov
je
push
call
xor
cmp
jle
mov
lea
push
mov
call
inc
cmp
jl
jmp
call
push
push
mov
call
xor
cmp
jle
mov
lea
push
mov
call
inc
cmp
jl
pop
pop
pop
ret
mov
ret
mov
ret
mov
and
mov
ret
xor
ret
push
mov
push
mov
test
jne
mov
jmp
and
push
push
push
call
test
mov
pop
pop
jne
push
push
call
test
pop
pop
jne
lea
push
push
call
test
pop
pop
jne
mov
jmp
mov
xor
pop
pop
pop
ret
push
mov
test
jne
mov
jmp
and
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
jne
mov
jmp
mov
mov
xor
pop
ret
mov
and
mov
ret
push
push
push
mov
call
test
pop
pop
je
mov
add
neg
sbb
and
jmp
xor
pop
ret
push
mov
push
add
call
ret
mov
add
call
ret
mov
add
call
ret
push
mov
push
mov
push
mov
push
mov
push
push
call
pop
ret
mov
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
mov
push
push
push
call
pop
ret
mov
mov
mov
push
call
ret
mov
mov
mov
push
call
ret
mov
mov
push
mov
push
call
ret
mov
mov
push
mov
push
call
ret
mov
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
mov
push
mov
push
call
ret
push
mov
mov
push
mov
push
call
ret
mov
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
mov
push
mov
push
call
ret
mov
call
xor
ret
mov
mov
ret
xor
inc
ret
mov
mov
mov
mov
xor
ret
xor
inc
ret
xor
inc
ret
mov
and
mov
ret
push
mov
test
jne
mov
jmp
and
push
mov
cmp
je
mov
mov
call
test
je
mov
mov
push
call
mov
mov
xor
jmp
mov
pop
pop
ret
mov
test
jne
mov
jmp
and
xor
inc
ret
mov
test
jne
mov
jmp
and
xor
inc
ret
mov
test
jl
cmp
jge
mov
lea
ret
push
push
push
push
call
int3
push
mov
push
push
lea
push
push
call
add
test
jge
push
call
mov
leave
ret
push
mov
test
jne
mov
jmp
and
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
jne
mov
jmp
mov
mov
mov
push
call
xor
pop
ret
mov
test
jne
mov
jmp
and
mov
test
je
mov
mov
push
call
xor
jmp
mov
ret
mov
test
je
mov
push
call
ret
push
mov
call
xor
cmp
jne
cmp
je
push
push
lea
push
push
push
call
pop
ret
push
mov
push
xor
cmp
jle
cmp
jne
call
cmp
push
jle
lea
push
mov
call
mov
push
push
call
test
pop
pop
je
inc
cmp
jl
xor
pop
pop
pop
ret
xor
inc
jmp
mov
mov
lea
test
je
mov
mov
mov
ret
push
push
push
mov
call
push
call
add
test
je
mov
mov
mov
add
pop
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
cmp
mov
jne
mov
push
call
push
call
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
mov
je
mov
lea
push
call
mov
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
call
test
jl
mov
test
je
mov
lea
push
push
call
mov
test
mov
je
mov
push
call
and
cmp
je
mov
mov
cmp
jne
mov
xor
cmp
jne
cmp
jne
mov
cmp
je
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
lea
call
push
or
push
call
test
pop
pop
je
cmp
jne
cmp
jne
mov
jmp
xor
test
je
and
push
jmp
cmp
jne
cmp
jne
mov
cmp
je
mov
lea
push
push
call
cmp
je
push
lea
call
push
or
push
call
test
pop
pop
jne
mov
jmp
xor
test
je
and
push
jmp
cmp
jne
cmp
jne
mov
cmp
je
mov
lea
push
push
call
cmp
je
push
lea
call
push
or
push
call
test
pop
pop
jne
mov
jmp
xor
test
je
and
push
call
test
jne
inc
mov
mov
imul
lea
cmp
jne
jmp
mov
cmp
mov
jne
mov
mov
test
je
mov
push
call
and
push
call
push
call
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
mov
call
ret
push
mov
call
mov
and
mov
movzx
and
test
jge
mov
lea
call
mov
lea
call
ret
movsx
cmp
jbe
mov
jmp
test
je
mov
shl
cmp
ja
push
call
test
pop
je
movsx
shl
call
mov
jmp
movsx
shl
push
lea
call
mov
jmp
xor
test
je
movsx
xor
test
jle
mov
sub
dec
shl
add
mov
movsx
inc
cmp
jl
mov
mov
test
je
sub
lea
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
test
jne
lea
push
push
lea
push
movsx
push
movzx
push
push
lea
push
push
call
mov
lea
push
call
jmp
push
mov
call
mov
mov
lea
mov
and
mov
and
push
mov
mov
mov
push
push
call
and
mov
call
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
push
call
mov
mov
mov
lea
push
push
push
call
mov
mov
cmp
jne
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
call
mov
xor
cmp
je
cmp
jne
mov
cmp
jne
mov
test
je
push
lea
call
push
mov
or
push
call
test
pop
pop
mov
je
mov
test
je
push
and
call
cmp
jne
inc
mov
imul
add
cmp
jne
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
mov
call
ret
mov
mov
call
imul
push
mov
mov
mov
mov
add
call
mov
test
je
xor
test
setne
mov
dec
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
xor
jmp
push
push
mov
call
mov
mov
mov
mov
mov
pop
ret
push
mov
call
mov
mov
test
jne
xor
jmp
push
call
pop
mov
mov
and
test
je
push
push
call
jmp
xor
test
je
mov
xor
inc
call
ret
push
mov
call
mov
mov
call
test
je
xor
inc
jmp
mov
xor
cmp
je
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
or
cmp
mov
jne
cmp
je
mov
push
call
jmp
cmp
je
mov
push
call
xor
call
ret
push
mov
call
mov
push
lea
call
lea
xor
push
mov
call
mov
cmp
mov
je
mov
cmp
jne
push
call
push
push
lea
push
push
call
mov
push
push
lea
call
mov
push
push
lea
mov
call
mov
push
push
lea
mov
call
mov
push
lea
push
push
push
push
mov
push
call
mov
lea
push
call
lea
push
call
lea
push
call
lea
push
call
push
call
call
ret
push
mov
push
xor
lea
mov
mov
mov
cmp
je
push
push
call
mov
mov
mov
pop
pop
ret
push
mov
call
mov
mov
xor
xor
cmp
setne
cmp
jne
call
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
cmp
jle
lea
push
mov
call
mov
mov
add
mov
cmp
je
inc
cmp
jl
or
test
je
mov
push
call
xor
call
ret
or
test
je
mov
push
call
xor
inc
jmp
push
mov
mov
mov
cmp
push
jne
test
jne
xor
inc
jmp
lea
test
jl
cmp
ja
push
push
push
call
add
test
je
mov
mov
push
mov
push
call
inc
xor
inc
pop
pop
ret
xor
jmp
push
mov
push
mov
test
jne
mov
jmp
mov
and
and
push
lea
push
push
push
call
mov
test
jl
mov
mov
lea
push
push
push
call
mov
test
jl
push
mov
push
mov
push
call
mov
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
pop
leave
ret
push
mov
push
mov
test
jne
mov
jmp
mov
and
and
push
lea
push
push
push
call
mov
test
jl
mov
mov
lea
push
push
push
call
mov
test
jl
mov
push
mov
push
call
mov
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
pop
leave
ret
push
mov
call
mov
xor
test
setne
test
jne
push
call
and
mov
and
push
pop
lea
push
push
push
call
test
mov
jl
and
mov
lea
push
push
call
test
mov
jl
test
je
mov
cmp
je
test
jne
movzx
cmp
jne
push
push
call
pop
movzx
mov
pop
jmp
sub
je
sub
je
dec
je
movzx
jmp
push
jmp
push
jmp
push
pop
test
je
mov
mov
push
push
call
mov
or
test
je
mov
push
call
mov
call
ret
push
mov
push
push
push
push
mov
xor
cmp
jne
mov
jmp
mov
lea
push
push
mov
call
cmp
jl
mov
push
xor
cmp
jbe
mov
lea
push
push
push
call
cmp
jl
mov
mov
cmp
je
mov
push
push
call
mov
mov
movzx
inc
cmp
jl
push
mov
push
call
mov
cmp
je
movzx
cmp
jle
mov
jmp
cmp
mov
jle
mov
add
mov
movzx
cmp
mov
jne
mov
mov
mov
or
mov
cmp
jne
mov
push
push
call
pop
mov
mov
pop
inc
movsx
inc
inc
add
cmp
jl
movzx
movzx
sub
je
dec
je
dec
je
dec
jne
push
jmp
xor
jmp
push
jmp
push
pop
mov
mov
mov
mov
mov
push
mov
mov
push
call
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
push
mov
push
mov
test
mov
mov
mov
mov
je
test
je
test
je
test
je
push
mov
mov
movs
movs
movs
movs
mov
mov
movs
movs
movs
xor
cmp
movs
mov
mov
mov
je
lea
push
push
mov
mov
push
call
mov
xor
cmp
jl
mov
lea
push
push
push
mov
mov
push
call
mov
cmp
jl
mov
push
lea
push
mov
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
push
push
push
push
call
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
call
mov
lea
push
push
push
mov
call
test
jl
mov
cmp
je
push
mov
push
push
call
mov
jmp
mov
lea
push
push
push
mov
mov
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
lea
push
push
call
mov
cmp
jl
mov
lea
push
mov
mov
push
call
mov
cmp
je
xor
cmp
jbe
mov
mov
lea
push
push
push
call
mov
cmp
jl
cmp
je
mov
movzx
inc
cmp
jl
jmp
mov
mov
lea
push
push
push
call
mov
cmp
jl
mov
lea
push
push
mov
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
cmp
je
push
push
push
push
call
mov
mov
add
push
push
call
mov
cmp
je
mov
push
call
mov
push
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
pop
jmp
mov
mov
pop
xor
pop
call
leave
ret
push
push
push
push
call
ret
mov
push
push
push
call
ret
push
mov
push
and
push
mov
push
push
call
push
mov
push
mov
push
push
lea
push
push
mov
call
test
je
mov
jmp
mov
push
mov
call
mov
lea
push
push
mov
push
call
test
jge
mov
jmp
test
je
mov
mov
imul
mov
call
mov
mov
push
lea
call
mov
mov
mov
call
cmp
je
test
je
xor
cmp
mov
setne
dec
mov
mov
test
je
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
mov
test
mov
je
push
lea
push
push
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
pop
ret
push
mov
call
mov
push
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
test
jl
and
and
lea
push
movzx
push
push
movzx
push
lea
push
call
mov
test
mov
jge
or
test
je
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
mov
test
jge
mov
or
test
je
mov
push
call
mov
jmp
lea
push
push
push
push
call
or
mov
mov
test
je
mov
push
call
mov
call
ret
mov
test
jne
mov
jmp
push
push
push
push
push
call
add
ret
push
mov
call
mov
mov
call
mov
xor
lea
mov
mov
mov
call
mov
mov
lea
call
lea
mov
call
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
call
ret
push
mov
call
mov
mov
mov
mov
mov
test
mov
je
mov
push
call
lea
call
lea
call
lea
call
mov
sub
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
sub
call
or
mov
call
call
ret
lea
push
push
push
add
call
ret
push
mov
mov
test
je
mov
push
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
mov
mov
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
mov
xor
cmp
je
cmp
jne
mov
cmp
jne
push
push
call
test
pop
pop
je
inc
mov
imul
add
cmp
jne
mov
jmp
imul
mov
mov
mov
lea
push
push
lea
push
mov
push
call
test
jge
xor
jmp
push
lea
push
mov
push
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
push
push
push
mov
lea
mov
call
test
je
push
xor
cmp
push
jle
push
lea
call
mov
push
push
push
call
push
mov
call
inc
cmp
jl
lea
call
xor
cmp
jle
lea
push
mov
call
mov
add
mov
push
mov
mov
call
push
mov
mov
call
mov
mov
mov
add
push
add
push
push
lea
call
push
mov
call
mov
test
mov
je
mov
call
push
call
pop
inc
cmp
jl
lea
call
pop
pop
pop
leave
ret
push
mov
call
mov
call
mov
call
push
lea
call
xor
push
mov
mov
call
pop
mov
push
push
push
mov
call
cmp
je
cmp
je
push
lea
push
push
push
call
mov
add
push
push
push
push
push
push
call
jmp
mov
push
call
pop
mov
add
call
mov
call
ret
push
mov
call
mov
call
mov
call
push
lea
call
xor
push
mov
mov
call
mov
mov
push
push
call
test
je
push
lea
push
push
push
call
mov
add
push
push
push
push
push
push
call
jmp
mov
push
call
pop
mov
add
call
mov
call
ret
sub
push
push
push
push
xor
push
mov
call
pop
mov
call
lea
push
push
call
cmp
jne
push
mov
call
push
mov
call
mov
cmp
je
mov
call
cmp
je
mov
lea
push
push
push
call
test
jl
push
lea
call
mov
lea
cmp
jne
push
push
push
push
push
lea
push
push
push
lea
push
mov
call
mov
call
mov
push
push
push
call
test
jge
mov
mov
call
mov
mov
call
jmp
mov
cmp
je
push
mov
call
jmp
mov
cmp
je
push
mov
call
jmp
mov
cmp
je
push
push
push
push
push
push
mov
call
pop
pop
xor
pop
inc
pop
add
ret
push
mov
call
mov
and
and
lea
lea
mov
push
mov
call
cmp
je
lea
push
push
push
mov
call
mov
call
mov
or
test
je
mov
push
call
call
ret
mov
push
mov
cmp
jne
call
lea
cmp
je
push
push
call
lea
call
pop
ret
push
mov
call
mov
call
lea
xor
cmp
je
push
push
call
lea
mov
cmp
je
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
mov
mov
push
call
cmp
je
push
push
call
mov
or
cmp
je
mov
push
call
mov
call
call
ret
mov
ret
push
mov
call
mov
mov
cmp
jne
and
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
cmp
je
and
mov
mov
and
lea
push
push
call
push
lea
call
push
mov
mov
call
mov
add
call
push
or
call
push
lea
call
push
mov
call
mov
mov
push
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
xor
xor
cmp
setne
cmp
jne
call
mov
mov
mov
mov
mov
lea
push
call
lea
push
call
mov
mov
mov
mov
cmp
mov
je
mov
lea
mov
lea
push
call
mov
mov
cmp
je
cmp
jne
mov
push
mov
call
mov
lea
push
call
lea
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
lea
call
lea
mov
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
cmp
je
lea
push
sub
mov
lea
movs
movs
mov
movs
movs
sub
mov
lea
movs
movs
movs
push
movs
call
mov
mov
cmp
jne
mov
jmp
mov
lea
push
push
push
call
cmp
je
mov
cmp
je
mov
cmp
jl
mov
cmp
mov
mov
je
mov
push
call
mov
add
call
mov
cmp
mov
je
mov
push
call
mov
lea
push
call
lea
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
call
ret
push
mov
call
mov
mov
lea
mov
xor
mov
call
cmp
mov
jne
xor
jmp
mov
mov
mov
imul
lea
mov
cmp
je
cmp
jne
mov
push
lea
push
push
mov
mov
call
mov
xor
cmp
je
push
mov
call
test
jne
push
mov
mov
call
pop
mov
mov
cmp
mov
je
mov
neg
lea
sbb
push
and
push
call
mov
mov
jmp
mov
call
mov
ret
mov
mov
mov
test
jne
mov
or
push
call
mov
jmp
lea
push
push
push
push
call
test
mov
jl
lea
push
lea
call
jmp
push
mov
call
jmp
push
pop
cmp
jne
push
mov
call
test
jne
and
push
lea
push
push
mov
mov
call
mov
test
je
and
mov
lea
push
push
push
mov
call
mov
test
je
and
mov
lea
push
push
mov
call
cmp
je
and
push
mov
call
pop
mov
mov
test
mov
je
push
mov
push
neg
lea
sbb
and
push
push
call
jmp
xor
mov
mov
jmp
mov
call
mov
ret
mov
mov
cmp
jne
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
jmp
lea
push
lea
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
or
test
je
mov
push
call
inc
xor
jmp
mov
call
ret
mov
push
mov
cmp
jne
push
call
push
mov
call
pop
ret
mov
mov
mov
mov
jmp
push
mov
test
jl
call
cmp
jl
call
mov
call
mov
pop
ret
push
push
call
mov
xor
cmp
jne
mov
jmp
cmp
push
mov
jne
push
push
call
cmp
pop
pop
mov
jne
mov
jmp
push
mov
call
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
pop
pop
pop
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
xor
mov
cmp
setne
cmp
je
xor
cmp
setne
cmp
je
xor
mov
cmp
setne
cmp
je
cmp
jne
call
mov
call
mov
call
ret
mov
push
call
pop
mov
test
je
push
call
pop
mov
mov
mov
mov
push
push
push
push
call
add
mov
mov
call
cmp
je
xor
jmp
xor
mov
push
call
pop
ret
push
mov
push
and
push
push
lea
push
push
push
call
mov
add
leave
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
cmp
setne
cmp
je
mov
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
push
call
mov
lea
push
push
push
push
call
mov
push
push
call
add
mov
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
add
cmp
je
test
je
mov
add
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
add
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
or
je
mov
mov
dec
jne
mov
mov
jmp
mov
mov
dec
je
push
push
lea
lea
cmp
jbe
mov
rep
pop
pop
sub
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
push
push
push
push
push
call
pop
pop
cmp
je
lea
push
call
or
je
mov
cmp
jne
mov
or
je
push
call
jmp
mov
push
push
call
add
push
mov
call
mov
mov
mov
mov
mov
cmp
adc
mov
add
jmp
mov
pop
ret
push
push
call
mov
mov
mov
xor
cmp
jne
cmp
je
call
mov
push
push
push
push
push
call
add
xor
jmp
xor
cmp
setge
cmp
je
xor
mov
cmp
setne
cmp
je
cmp
je
mov
mov
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
mov
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
mov
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
mov
cmp
je
dec
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
mov
inc
cmp
jne
mov
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
mov
cmp
setne
cmp
je
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
mov
push
call
pop
pop
mov
push
call
mov
push
push
push
push
call
mov
push
push
call
add
mov
call
xor
mov
cmp
sete
dec
call
ret
mov
push
call
pop
ret
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fsin
fstsw
sahf
jp
cmp
jne
mov
lea
jmp
fld
fxch
fprem1
fstsw
sahf
jp
fstp
fsin
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fcos
fstsw
sahf
jp
cmp
jne
mov
lea
jmp
fld
fxch
fprem1
fstsw
sahf
jp
fstp
fcos
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fptan
fstsw
sahf
jp
fstp
cmp
jne
mov
lea
jmp
fld
fxch
fprem1
fstsw
sahf
jp
fstp
fptan
fstp
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
call
cmp
jae
fld1
fadd
fld1
fsub
fmulp
fsqrt
fpatan
cmp
jne
mov
lea
jmp
ja
mov
mov
and
or
jne
and
fstp
fld
je
fchs
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
call
cmp
jae
fld1
fadd
fld1
fsub
fmulp
fsqrt
fxch
fpatan
cmp
jne
mov
lea
jmp
ja
mov
mov
and
or
jne
and
fstp
je
fldpi
jmp
fldz
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fld1
fpatan
cmp
jne
mov
lea
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
test
je
fchs
jmp
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
movq
movapd
movapd
movapd
psrlq
movd
andpd
psubd
psrlq
test
je
cmp
jl
psllq
cmp
jg
movq
fld
ret
ucomisd
jnp
mov
sub
mov
mov
add
mov
mov
mov
call
add
fld
ret
movq
psllq
movapd
cmpnlepd
cmp
jl
cmp
jg
andpd
addsd
movq
fld
ret
fld
ret
cmpnlepd
andpd
movq
fld
ret
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
movq
movapd
movapd
movapd
psrlq
movd
andpd
psubd
psrlq
test
jne
cmp
jl
psllq
cmp
jg
movq
fld
ret
ucomisd
jnp
mov
sub
mov
mov
add
mov
mov
mov
call
add
fld
ret
movq
psllq
movapd
cmpltpd
cmp
jl
cmp
jg
andpd
subsd
movq
fld
ret
fldz
ret
cmpltpd
orpd
andpd
movq
fld
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
fxch
cmp
je
fprem
jmp
call
fstsw
fwait
sahf
jp
fstp
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
movq
movapd
movapd
movapd
movapd
movapd
psllq
psrlq
psrlq
andpd
movd
psubd
mov
psrlq
psllq
movd
cmp
jl
cmp
jg
movq
subsd
orpd
movq
fld
ret
movq
fld
ret
cmp
movq
je
movq
cmp
fldz
jl
fchs
ret
movapd
addsd
movq
andpd
cmpneqpd
pextrw
andpd
orpd
mov
cmp
jne
movq
fld
ret
sub
movlpd
mov
mov
add
mov
add
mov
sub
mov
call
fld
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
fst
call
call
add
ret
lea
call
push
fstcw
mov
je
cmp
je
call
test
jne
fsqrt
cmp
jne
mov
lea
jmp
test
jne
test
jne
cmp
jne
jmp
call
jmp
test
jne
cmp
jne
and
je
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fxch
fstp
fst
mov
call
add
ret
lea
call
mov
push
fstcw
cmp
je
call
and
lea
cmp
je
call
je
test
je
mov
and
jne
fyl2x
call
cmp
jne
fchs
cmp
jne
lea
mov
jmp
cmp
jne
lea
mov
call
pop
ret
lea
call
test
jne
inc
jmp
faddp
mov
jmp
test
jne
faddp
mov
jmp
xor
jmp
xor
and
or
jne
lea
call
mov
mov
and
and
cmp
jne
or
jne
test
jne
sub
mov
push
sub
fstp
fstp
fsave
call
add
pop
frstor
fld
add
test
je
mov
jmp
mov
and
or
jne
fstp
mov
and
or
je
call
mov
shr
test
je
fld
test
je
fchs
mov
jmp
fldz
test
je
fchs
jmp
fstp
fld1
jmp
fld
call
fchs
test
jne
fstp
fstp
fld
mov
jmp
fld
frndint
fcomp
mov
fstsw
sahf
jne
fmul
inc
fld
frndint
fcompp
fstsw
sahf
jne
inc
ret
fstp
ret
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
mov
cmp
je
fldcw
test
je
test
jne
fldln2
fxch
fyl2x
cmp
jne
lea
mov
jmp
test
jne
jmp
test
jne
cmp
jne
and
je
fstp
fld
mov
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
lea
mov
call
pop
ret
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
mov
cmp
je
fldcw
test
je
test
jne
fldlg2
fxch
fyl2x
cmp
jne
lea
mov
jmp
test
jne
jmp
test
jne
cmp
jne
and
je
fstp
fld
mov
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
lea
mov
call
pop
ret
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
call
push
push
push
push
push
mov
call
fldz
add
jmp
push
mov
push
push
call
fld
mov
mov
and
cmp
pop
pop
jne
or
push
push
fstp
call
cmp
pop
pop
jle
cmp
jle
cmp
jne
push
fld
push
push
fstp
push
call
add
jmp
fld
jmp
fld
fadd
push
sub
fstp
fld
fstp
push
push
call
add
jmp
push
push
push
fstp
call
push
fstp
push
call
fld
add
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
push
call
mov
mov
and
cmp
pop
pop
jne
fld
push
push
fstp
call
test
pop
pop
jle
cmp
jle
cmp
jne
fild
push
sub
fstp
fld
fstp
push
call
add
jmp
push
push
call
pop
pop
jmp
fld
push
fadd
sub
fstp
fild
fstp
fld
fstp
push
push
call
add
jmp
fldz
fcomp
fnstsw
test
jnp
fld
lea
push
push
push
fstp
call
mov
mov
add
test
jge
mov
sub
cmp
jl
jmp
mov
sub
cmp
jg
add
cmp
jle
push
sub
fstp
fld
fstp
call
fstp
fild
fstp
push
push
fld
fstp
push
push
jmp
cmp
jle
add
push
push
push
fstp
call
add
push
sub
fstp
fild
fstp
jmp
cmp
jge
fmul
push
sub
fstp
fild
fstp
fld
fstp
push
push
jmp
cmp
jge
add
push
push
push
fstp
call
add
jmp
push
push
push
fstp
call
push
fstp
push
call
add
fld
pop
pop
leave
ret
call
mov
mov
ret
call
mov
imul
add
mov
mov
shr
and
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
mov
xor
mov
test
je
mov
add
xor
je
sub
je
test
jne
sub
jb
push
mov
shl
add
mov
shl
add
jmp
pop
add
je
mov
add
xor
je
sub
jne
pop
ret
sub
jb
mov
xor
mov
add
xor
xor
add
and
je
mov
xor
je
xor
je
shr
xor
je
xor
je
jmp
pop
lea
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
mov
cmp
je
push
mov
mov
lea
push
push
push
lea
push
mov
mov
call
add
dec
mov
js
mov
mov
jmp
lea
push
push
call
pop
pop
mov
pop
pop
leave
ret
push
mov
cmp
jl
jg
cmp
jb
mov
test
jl
mov
jg
test
jb
sub
sbb
mov
mov
fild
pop
ret
call
fldz
mov
pop
ret
push
mov
sub
push
push
xor
push
lea
push
push
mov
mov
xor
call
add
cmp
je
cmp
jne
push
push
push
push
push
call
add
mov
cmp
mov
mov
jne
cmp
je
push
push
call
mov
neg
pop
sbb
pop
inc
jmp
cmp
push
mov
mov
mov
je
call
mov
call
mov
push
lea
push
push
push
call
add
mov
call
cmp
je
mov
jmp
cmp
je
call
cmp
jne
call
mov
lea
push
call
test
pop
je
push
push
push
push
push
call
add
test
mov
jne
mov
push
lea
push
push
push
call
add
mov
pop
push
call
pop
pop
mov
pop
leave
ret
push
call
test
jne
call
jmp
xor
test
je
push
call
pop
or
ret
xor
ret
push
push
call
test
jne
call
jmp
xor
test
je
push
call
pop
or
ret
xor
ret
push
mov
mov
push
push
push
xor
xor
sub
je
dec
je
dec
jne
mov
jmp
mov
push
pop
jmp
mov
push
jmp
mov
push
push
push
call
add
test
je
push
push
push
push
push
call
add
lea
mov
cmp
je
cmp
je
mov
inc
cmp
jne
mov
jmp
mov
inc
mov
sub
push
add
push
push
call
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
test
je
push
push
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
push
push
call
mov
push
xor
inc
push
push
call
add
inc
cmp
jb
or
jmp
push
push
lea
push
push
call
add
test
je
push
push
push
push
push
call
add
lea
sub
add
push
push
push
call
add
test
je
push
push
push
push
push
call
add
xor
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
xor
mov
call
mov
mov
push
call
pop
test
jne
mov
mov
call
mov
jmp
push
call
pop
mov
cmp
jne
mov
push
jmp
mov
push
pop
cmp
jne
push
call
pop
jmp
push
push
mov
call
pop
test
pop
jne
push
push
call
pop
pop
test
je
mov
cmp
jne
call
mov
cmp
jne
mov
jmp
cmp
jne
push
call
pop
mov
cmp
je
mov
mov
push
push
jmp
cmp
je
push
call
pop
cmp
jb
mov
cmp
je
mov
jmp
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
call
mov
mov
mov
mov
call
cmp
je
mov
jmp
xor
push
call
pop
ret
mov
mov
mov
call
ret
push
mov
push
and
lea
push
push
push
push
push
call
mov
add
leave
ret
push
push
call
xor
mov
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
jmp
mov
push
call
pop
test
jne
call
mov
jmp
push
call
pop
mov
mov
cmp
jne
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
mov
cmp
je
cmp
je
mov
mov
mov
mov
inc
push
mov
sub
push
push
call
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
jmp
push
push
mov
call
pop
pop
test
jne
call
mov
mov
cmp
jne
mov
jmp
mov
call
mov
mov
call
mov
push
push
push
push
lea
push
call
add
cmp
jne
push
push
mov
call
pop
pop
test
je
call
cmp
jne
call
mov
mov
cmp
je
push
call
pop
mov
cmp
jne
push
call
pop
jmp
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
jmp
mov
mov
call
mov
cmp
je
call
mov
mov
call
ret
xor
mov
cmp
je
push
call
pop
push
call
pop
ret
push
mov
push
and
lea
push
push
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
push
call
push
push
push
push
call
sub
mov
sbb
xor
push
add
push
adc
push
push
call
pop
leave
ret
push
mov
push
push
push
lea
push
call
push
push
push
push
call
mov
xor
add
adc
mov
mov
xor
pop
leave
ret
mov
mov
push
mov
lea
jmp
cmp
je
add
cmp
jb
cmp
pop
jb
test
jne
lea
cmp
jb
cmp
jae
push
push
push
call
add
test
je
mov
inc
mov
lea
ret
xor
ret
push
push
call
xor
xor
mov
mov
mov
mov
mov
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
xor
mov
cmp
setne
cmp
je
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
jne
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jne
mov
or
push
push
lea
push
call
add
cmp
je
xor
inc
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
push
call
pop
test
jne
push
call
push
call
pop
pop
jmp
push
call
pop
mov
mov
mov
call
mov
lea
mov
push
push
push
lea
push
push
mov
sar
and
imul
mov
push
push
call
test
je
push
call
mov
mov
lea
push
mov
push
call
add
mov
cmp
je
xor
call
mov
cmp
je
push
push
lea
push
call
add
mov
cmp
je
cmp
jne
push
push
push
push
push
call
add
cmp
jne
mov
cmp
je
mov
jmp
mov
lea
push
call
pop
test
mov
jne
mov
push
pop
push
push
lea
push
call
add
mov
mov
mov
cmp
mov
je
mov
mov
cmp
mov
je
mov
mov
mov
mov
push
call
mov
push
call
lea
mov
push
call
lea
push
push
call
add
mov
cmp
je
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
call
mov
mov
push
push
call
pop
pop
test
jne
lea
push
lea
push
push
push
push
push
push
push
push
push
call
mov
jmp
mov
push
mov
push
call
pop
pop
mov
mov
cmp
jne
push
call
push
call
push
call
add
call
mov
mov
jmp
push
push
lea
push
call
add
mov
cmp
je
cmp
jne
push
push
push
push
push
call
add
cmp
je
push
call
push
call
push
call
push
call
add
jmp
mov
push
push
push
call
add
mov
cmp
je
cmp
je
push
call
pop
lea
mov
mov
cmp
jne
push
push
call
pop
pop
cmp
jmp
cmp
je
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
call
push
mov
call
pop
pop
mov
add
mov
cmp
jae
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
call
pop
pop
test
jne
lea
push
lea
push
push
push
push
push
push
push
push
push
call
mov
push
call
push
call
pop
pop
push
call
push
call
pop
pop
push
mov
call
push
call
call
mov
mov
mov
cmp
je
mov
mov
mov
mov
jmp
mov
jmp
mov
push
call
pop
mov
mov
mov
mov
shl
cmp
je
push
call
pop
mov
shl
cmp
je
push
call
pop
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
or
xor
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
push
call
pop
test
je
push
call
pop
mov
call
mov
cmp
jne
call
mov
jmp
push
call
call
mov
call
mov
push
push
lea
push
call
add
cmp
jne
call
cmp
jne
mov
mov
call
mov
mov
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
cmp
setne
cmp
je
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
push
push
push
push
call
add
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
lea
push
push
push
push
push
call
add
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
je
cmp
jne
mov
lea
cmp
jbe
jmp
mov
and
mov
push
call
pop
mov
push
call
push
call
pop
pop
and
mov
test
je
or
lea
push
pop
jmp
mov
cmp
jne
push
call
pop
cmp
jne
inc
or
jmp
or
jmp
or
mov
mov
mov
mov
mov
mov
call
mov
call
ret
push
call
pop
ret
push
mov
sub
push
mov
push
push
push
lea
mov
call
mov
test
je
mov
test
jne
call
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
fldz
jmp
mov
cmp
jle
lea
push
movzx
push
push
call
add
jmp
movzx
mov
movzx
and
test
je
inc
jmp
lea
push
push
push
push
call
pop
push
lea
push
push
call
add
test
mov
je
mov
add
mov
mov
test
je
test
fldz
fstp
je
mov
jmp
test
je
cmp
fld
jne
fchs
jmp
test
je
fldz
fcom
fnstsw
test
jp
fstp
call
mov
jmp
fstp
fld
fstp
cmp
je
mov
and
fld
pop
pop
pop
leave
ret
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
mov
push
test
push
je
mov
add
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
jne
sub
jmp
sub
jmp
sub
jmp
sub
mov
test
jne
mov
shr
jne
jmp
mov
add
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
mov
pop
ret
mov
mov
pop
pop
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
mov
pop
pop
pop
ret
mov
xor
mov
mov
pop
pop
pop
ret
mov
mov
pop
pop
pop
ret
push
mov
sub
push
push
lea
call
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
je
mov
mov
cmp
jne
push
push
call
pop
pop
jmp
push
lea
push
push
push
push
push
push
push
call
add
cmp
jne
call
mov
jmp
add
cmp
je
mov
and
pop
leave
ret
push
push
push
call
add
ret
mov
ret
mov
ret
push
push
call
and
mov
mov
mov
jmp
mov
mov
mov
xor
cmp
sete
mov
ret
mov
and
mov
mov
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
pextrw
and
sub
cmp
ja
movlpd
mulsd
movlpd
cvtsd2si
addsd
movlpd
subsd
movapd
mulsd
unpcklpd
add
movsd
and
movapd
lea
shl
add
mulpd
subsd
mulsd
subsd
movlpd
unpcklpd
movsd
subsd
mulpd
subpd
movapd
mulsd
subsd
mulpd
mulpd
subsd
movapd
subsd
movlpd
addsd
subsd
mulsd
mulpd
mulsd
mulpd
mulpd
addpd
mulsd
addpd
mulpd
movsd
addsd
mulpd
movsd
addsd
addpd
movlpd
subsd
subsd
addsd
mulpd
addsd
addsd
addsd
addsd
addsd
unpckhpd
addsd
sub
addsd
movlpd
fld
add
ret
jg
sub
shr
cmp
jne
mulsd
movlpd
fld
add
ret
movlpd
mulsd
subsd
mulsd
movlpd
fld
add
ret
jmp
nop
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jne
mov
or
and
mov
jmp
mov
mov
fldcw
mov
fxam
mov
fstsw
mov
fwait
mov
shl
sar
rol
mov
and
xlat
movsx
and
mov
add
add
jmp
cmp
jne
mov
or
and
mov
jmp
mov
mov
fldcw
mov
fxam
mov
fstsw
mov
fxch
mov
fxam
fstsw
fxch
mov
shl
sar
rol
mov
and
xlat
mov
shl
sar
rol
mov
and
xlat
shl
shl
or
movsx
and
mov
add
add
jmp
call
fxch
fstp
ret
call
jmp
fstp
fstp
fldz
ret
fstp
fstp
fld1
ret
fstp
fld
test
je
mov
ret
mov
fadd
ret
fxch
fstp
fld
test
je
mov
jmp
mov
faddp
ret
fstp
fld
test
je
fxch
fstp
fld
test
je
mov
jmp
mov
faddp
ret
fstp
fstp
fld
cmp
jg
mov
or
ret
or
je
fchs
ret
int3
int3
int3
int3
int3
int3
fld
frndint
fsub
fxch
fchs
f2xm1
fld1
faddp
fscale
fstp
ret
mov
and
or
mov
fldcw
ret
test
je
mov
ret
fadd
mov
ret
mov
and
cmp
je
fld
ret
mov
sub
or
mov
mov
mov
shld
shl
mov
mov
fld
add
test
mov
ret
mov
and
cmp
je
ret
mov
ret
cmp
je
fldcw
pop
ret
mov
cmp
je
and
je
fstsw
and
je
mov
call
pop
ret
fldcw
pop
ret
sub
fst
mov
add
and
jmp
sub
fst
mov
add
and
je
cmp
je
mov
cmp
je
and
jne
fstsw
and
je
mov
cmp
je
call
pop
ret
call
pop
ret
fldcw
pop
ret
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
mov
jae
fmul
jmp
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
mov
jbe
fmul
jmp
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
jmp
push
mov
add
mov
fstp
mov
mov
mov
mov
mov
lea
lea
push
push
push
call
add
fld
cmp
je
fldcw
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
call
or
je
call
fsubrp
jmp
fld
fabs
fld
fcompp
fstsw
fwait
test
jne
call
or
je
fld
call
fxch
call
fsubrp
fdivp
ret
mov
call
or
je
call
fld1
fchs
fxch
fscale
jmp
fstp
fld
jmp
fstp
fld
ret
ret
call
jmp
jmp
mov
call
jmp
fldl2e
fmulp
xor
call
not
test
je
call
fxch
fstp
test
jne
not
fld1
faddp
fscale
jmp
call
faddp
or
jne
fld1
fadd
faddp
ret
fld
fld1
or
jne
fadd
fchs
fxch
fdivp
ret
int3
int3
int3
int3
push
mov
add
push
fstcw
fwait
cmp
je
call
or
call
pop
leave
ret
fxch
fst
fxch
fst
jmp
push
mov
add
push
fstcw
cmp
je
call
or
and
call
pop
leave
ret
fst
jmp
push
mov
add
push
push
push
call
add
push
push
call
add
fstcw
or
mov
call
call
pop
leave
ret
and
cmp
jne
fst
mov
or
je
cmp
je
cmp
je
or
je
movsx
mov
jmp
mov
and
jne
fstsw
and
je
mov
jmp
fldcw
fwait
ret
mov
and
or
je
cmp
je
jmp
mov
and
cmp
je
jmp
mov
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
jae
fmul
jmp
mov
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
jbe
fmul
push
push
mov
inc
mov
test
jne
cld
lea
lea
movs
movs
cmp
je
lea
lea
movs
movs
fstp
lea
lea
push
push
mov
mov
movsx
push
call
add
pop
pop
fld
jmp
push
mov
add
push
push
push
call
add
fstcw
and
call
call
pop
leave
ret
push
mov
add
push
mov
mov
and
cmp
jne
or
mov
mov
mov
shld
mov
mov
fld
jmp
fld
pop
leave
ret
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
pextrw
and
sub
cmp
ja
movlpd
mulsd
movlpd
cvtsd2si
addsd
movlpd
subsd
movapd
mulsd
unpcklpd
add
movsd
and
movapd
lea
shl
add
mulpd
subsd
mulsd
subsd
movlpd
unpcklpd
movsd
subsd
mulpd
subpd
movapd
mulsd
subsd
mulpd
mulpd
subsd
movapd
subsd
movlpd
addsd
subsd
mulsd
mulpd
mulsd
mulpd
mulpd
addpd
mulsd
addpd
mulpd
movsd
addsd
mulpd
movsd
addsd
addpd
movlpd
subsd
subsd
addsd
mulpd
addsd
addsd
addsd
addsd
addsd
unpckhpd
addsd
sub
addsd
movlpd
fld
add
ret
jg
pextrw
and
pinsrw
sub
movlpd
subsd
movlpd
fld
add
ret
jmp
lea
int3
int3
int3
int3
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
pextrw
and
sub
cmp
ja
unpcklpd
movapd
mulpd
cvtsd2si
movapd
addpd
movapd
subpd
movlpd
add
movapd
mulpd
and
mulsd
mov
mulpd
shl
subpd
mulpd
add
shl
add
addsd
movapd
subpd
movlpd
shl
lea
andpd
movapd
add
subpd
unpckhpd
divsd
subpd
movapd
subsd
mulpd
subpd
movapd
mulpd
movapd
mulpd
addsd
movapd
mulpd
addpd
addpd
mulpd
addpd
addpd
movapd
mulpd
mulpd
addpd
movapd
mulpd
addpd
movapd
mulpd
mulsd
mulpd
mulpd
movsd
addpd
movsd
mulsd
unpckhpd
addsd
unpckhpd
addsd
subsd
addsd
movsd
movlpd
unpckhpd
addsd
mulsd
addsd
addsd
addsd
movlpd
mulsd
movlpd
andpd
mulsd
mulsd
subsd
subsd
subsd
mulsd
movsd
subsd
addsd
subsd
addsd
subsd
sub
addsd
movlpd
fld
add
ret
jg
sub
shr
cmp
jne
movsd
mulsd
movlpd
mulsd
addsd
mulsd
movlpd
fld
add
ret
jmp
mov
lea
add
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
movlpd
movlpd
xorpd
movlpd
movsd
psrlq
movd
movsd
mov
pinsrw
movsd
mov
and
sub
cmp
jae
mulsd
and
subsd
sqrtsd
andpd
and
sub
movlpd
orpd
movapd
movsd
addsd
subsd
mulsd
mulsd
mulsd
movsd
addsd
divsd
movlpd
movlpd
subsd
psrlq
movsd
psllq
mulsd
pshufd
movlpd
mulsd
mulsd
sub
xorpd
mulsd
mulsd
addsd
mulsd
addsd
pshufd
addsd
addsd
addsd
movlpd
fld
add
ret
sub
cmp
jae
mulsd
subsd
sqrtsd
pmovmskb
psllq
andpd
psrlq
movsd
movlpd
movsd
subsd
mulsd
addsd
subsd
mulsd
movsd
andpd
psllq
pextrw
orpd
sub
add
mulsd
mulsd
movapd
mulsd
mulsd
subsd
addsd
subsd
addsd
movlpd
subsd
addsd
movlpd
divsd
movlpd
subpd
movsd
mulsd
and
shl
mulsd
mulsd
sub
mulsd
mulsd
addsd
pxor
mulsd
addsd
pinsrw
addsd
pshufd
subsd
addsd
orpd
movlpd
fld
add
ret
add
cmp
jae
unpcklpd
movapd
unpcklpd
movapd
movapd
mulpd
sub
mulpd
mulpd
mulpd
movsd
mulsd
addpd
mulpd
mulsd
addpd
mulpd
pshufd
addsd
addsd
movlpd
fld
add
ret
sub
cmp
jae
mulsd
subsd
sqrtsd
pextrw
andpd
pshufd
andpd
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
in
dec
add
add
add
inc
add
add
add
inc
dec
add
dec
add
and
(bad)
fwait
inc
add
inc
add
dec
add
xchg
inc
add
pushf
inc
add
sbb
inc
add
inc
add
sbb
shl
add
jg
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
jg
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
cmps
inc
add
loopne
add
movs
inc
add
inc
add
movs
inc
add
cmps
inc
add
inc
add
imul
inc
add
add
add
add
je
and
popa
add
add
add
bound
push
add
je
jae
add
push
add
arpl
push
add
js
je
and
inc
add
jb
ins
add
je
add
add
inc
add
ins
add
dec
add
ins
add
push
add
add
imul
dec
add
ins
add
add
add
dec
add
outs
add
and
push
add
jne
jb
arpl
add
add
add
arpl
jb
imul
outs
add
add
add
dec
add
push
add
je
and
inc
add
jae
arpl
jb
imul
outs
add
add
dec
add
outs
add
and
push
add
jne
jb
arpl
add
add
ins
add
add
add
outs
add
jb
arpl
add
add
add
ins
add
add
add
add
add
bound
push
add
je
add
dec
add
push
add
je
dec
add
outs
add
add
add
dec
add
outs
add
jb
dec
add
outs
add
add
dec
add
je
imul
add
add
inc
dec
outs
jne
add
cmp
add
add
add
inc
add
add
add
add
inc
add
inc
add
sbb
inc
add
call
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
gs
add
add
loope
add
jg
add
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
mov
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
mov
add
mov
add
inc
add
loop
add
add
inc
add
inc
add
mov
add
inc
add
imul
imul
add
add
inc
add
add
add
add
add
loop
add
mov
inc
add
sbb
inc
add
ss
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
mov
inc
add
inc
add
aaa
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
aas
inc
add
aas
inc
add
imul
push
inc
add
aaa
inc
add
inc
add
xchg
inc
add
jne
add
inc
add
cmp
scas
dec
inc
add
cmp
inc
cmp
push
cmp
bound
inc
add
cmp
lds
inc
add
cmp
pop
cmp
sub
inc
add
inc
add
inc
add
cmp
scas
cmp
sar
inc
add
cmp
sbb
cmp
pop
cmp
ja
inc
add
inc
add
ja
add
bound
jbe
inc
add
inc
add
ds
add
inc
add
inc
add
popf
inc
add
aaa
inc
add
ins
inc
add
ss
add
jbe
add
add
cmp
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
rol
mov
inc
add
mov
add
inc
add
add
add
add
add
jbe
add
ins
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
push
add
add
inc
add
add
add
add
add
mov
add
push
add
add
mov
add
adc
add
dec
mov
add
push
add
add
push
add
add
add
and
add
add
add
dec
add
dec
add
add
add
add
outs
add
add
je
popa
add
ins
add
add
and
add
jb
outs
add
add
outs
add
add
je
add
imul
inc
add
add
add
add
jbe
add
bound
pop
add
add
add
add
add
je
add
and
add
jb
outs
add
add
outs
add
add
je
add
imul
inc
add
add
add
add
jae
add
jbe
add
add
and
add
add
dec
add
dec
add
add
add
add
dec
add
dec
add
add
add
jb
outs
add
dec
add
add
add
add
add
add
dec
add
dec
add
add
add
outs
add
jb
outs
add
dec
add
outs
add
add
jb
xor
xor
add
outs
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
popa
add
add
jb
jbe
add
xor
xor
add
and
add
dec
add
dec
add
add
add
add
bound
pop
add
add
add
add
add
je
sub
xor
sub
xor
add
inc
add
add
inc
add
add
add
add
jb
bound
pop
add
add
add
add
jo
add
sub
xor
sub
xor
add
inc
add
add
inc
add
add
add
add
jae
add
je
popa
add
ins
add
add
add
add
inc
add
add
inc
add
add
add
add
js
push
add
add
push
add
jo
add
add
add
add
dec
add
dec
add
add
add
jne
js
push
add
add
push
add
jo
add
add
add
add
dec
add
dec
add
add
add
add
popa
add
ins
add
add
outs
add
add
and
add
add
add
dec
add
dec
add
add
add
imul
push
add
add
add
add
xor
xor
add
add
inc
add
add
inc
add
add
add
add
push
add
outs
add
push
add
jb
jbe
add
xor
xor
add
and
add
add
dec
add
dec
add
add
add
add
dec
add
push
add
je
add
xor
add
add
and
add
add
dec
add
push
add
je
add
xor
add
add
inc
add
add
inc
add
add
add
add
imul
popa
add
ins
add
inc
add
add
inc
add
add
add
add
data16
jne
ins
add
add
je
add
jae
imul
add
and
add
add
add
add
ins
dec
add
ins
dec
add
outs
dec
add
dec
add
outs
dec
add
jo
add
dec
add
add
add
ins
dec
add
ins
dec
add
outs
dec
add
dec
add
outs
dec
add
jo
add
dec
add
add
add
ins
dec
add
ins
dec
add
outs
dec
add
dec
add
outs
dec
add
jo
add
dec
add
jno
add
dec
add
add
add
add
ins
dec
add
dec
add
outs
dec
add
outs
dec
add
dec
add
dec
add
add
add
ins
dec
add
dec
add
outs
dec
add
jo
add
dec
add
add
add
ins
dec
add
add
fsubr
add
outs
dec
add
outs
dec
add
dec
add
dec
add
add
add
ins
dec
add
add
fsubr
add
outs
dec
add
outs
dec
add
dec
add
add
add
ins
dec
add
outs
dec
add
jo
add
add
add
ins
dec
add
dec
add
outs
dec
add
outs
dec
add
dec
add
dec
add
add
add
jno
add
dec
add
jno
add
dec
add
dec
add
jb
add
jb
add
jb
add
jno
add
add
jno
add
add
dec
add
jb
add
jb
add
jb
add
jecxz
add
rol
dec
ins
gs
jne
jns
imul
inc
dec
ins
gs
imul
push
add
add
inc
add
add
add
dec
add
dec
add
inc
add
add
add
add
add
inc
add
add
sbb
inc
add
ss
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
inc
add
aaa
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
aas
inc
add
aas
inc
add
imul
push
inc
add
aaa
inc
add
inc
add
xchg
inc
add
jne
add
inc
add
cmp
scas
dec
inc
add
cmp
inc
cmp
push
cmp
bound
inc
add
cmp
lds
inc
add
cmp
pop
cmp
sub
inc
add
inc
add
inc
add
cmp
scas
cmp
sar
inc
add
cmp
sbb
cmp
pop
cmp
ja
inc
add
inc
add
ja
add
bound
jbe
inc
add
inc
add
ds
add
inc
add
inc
add
popf
inc
add
aaa
inc
add
ins
inc
add
ss
add
jbe
add
add
cmp
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
rol
rol
mov
inc
add
inc
add
inc
add
add
jae
je
add
add
add
xor
add
add
pop
add
add
inc
add
add
add
add
add
inc
add
pop
das
mov
rcl
xchg
adc
add
push
or
cmp
rcl
cmp
mov
in
add
in
add
rol
push
outs
imul
outs
and
arpl
je
outs
outs
add
add
ins
loopne
add
add
add
add
add
add
add
add
inc
outs
jb
js
je
jb
arpl
jae
add
arpl
gs
ins
add
ss
add
gs
push
push
je
arpl
jne
jb
outs
je
add
jb
gs
xor
cs
ins
add
add
dec
inc
pop
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
inc
pop
dec
dec
dec
inc
push
inc
push
pop
add
inc
push
pop
push
inc
add
add
dec
inc
pop
inc
dec
dec
dec
inc
push
inc
add
dec
inc
pop
inc
dec
dec
add
pusha
jbe
add
add
add
cmp
push
jbe
add
pop
dec
add
cmp
dec
jbe
add
pop
dec
add
inc
add
dec
add
pop
dec
add
jbe
add
pop
dec
add
sub
dec
add
pop
dec
add
inc
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
sub
add
add
add
cmp
add
cmp
add
add
ins
imul
outs
arpl
gs
outs
imul
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
inc
arpl
gs
outs
imul
add
jae
jb
add
jae
gs
popa
ins
jne
add
jae
gs
popa
ins
jne
add
jae
ins
ins
outs
arpl
add
add
add
add
jb
add
dec
add
jno
add
popa
and
arpl
fdivr
ins
lods
cld
iret
fprem1
cmp
mov
out
push
jae
pop
mov
dec
add
sbb
stos
sbb
or
(bad)
retf
popa
jns
push
add
adc
je
scas
leave
pop
inc
and
jecxz
call
inc
adc
mov
xchg
push
dec
dec
and
mov
inc
hlt
jmp
ds
cmp
in
or
stos
push
dec
loopne
imul
mov
push
mov
sub
mov
xchg
xchg
stos
mov
cld
into
popf
sub
dec
mov
mov
inc
fwait
aad
sbb
mov
lahf
retf
mov
fbstp
aaa
outs
dec
aam
sti
cmp
movs
mov
mov
iret
sub
movs
lahf
jmp
imul
lock
leave
fldlg2
into
imul
jnp
sbb
jle
mov
cdq
push
jmp
rcl
mov
sub
sbb
pop
movs
add
jl
pop
mov
mov
test
retf
cmps
shl
add
jge
cdq
push
pop
mov
iret
sete
jmp
cmp
leave
into
(bad)
cmps
dec
sahf
jnp
pop
push
in
cmps
push
and
ins
out
push
sub
(bad)
stos
jge
retf
stos
fld
pop
mov
and
jmp
ss
imul
cwde
pop
je
add
stos
jmp
or
stos
or
iret
retf
in
(bad)
pop
fcmovne
mov
pop
cmp
pop
scas
sti
std
ret
pop
push
pushf
mov
lods
jmp
pusha
push
idiv
in
pop
jnp
xor
sbb
push
cmp
jns
adc
stc
js
out
stos
pop
enter
mov
or
test
mov
addr16
dec
xlat
or
ror
cmp
add
mov
pop
imul
fist
mov
pusha
sbb
imul
cmps
repz
aas
lea
dec
ret
sbb
loopne
loopne
shl
out
mov
push
es
push
dec
and
shl
add
test
int
adc
mov
sub
outs
imul
(bad)
imul
iret
add
retf
stc
or
daa
mov
cli
dec
pop
mov
call
aas
rcr
push
jne
fimul
cdq
push
jae
dec
cmc
jl
or
add
arpl
inc
cli
sub
addr16
ficomp
sbb
in
jnp
fldcw
ret
add
cmp
int
pop
stos
arpl
loope
jnp
sti
mov
retf
cs
stos
jmp
nop
sar
movs
mov
inc
jecxz
js
retf
dec
ret
shl
xchg
fist
(bad)
les
and
xchg
or
sbb
icebp
call
mov
cld
push
mov
fisubr
sbb
pop
fnsave
imul
add
push
stos
fisttp
and
jnp
dec
jmp
sahf
dec
iret
add
das
mov
(bad)
dec
and
test
mov
sar
call
shr
retf
mov
mov
mov
mov
cmp
cwde
bnd
sub
pop
retf
cmp
cmp
test
sbb
adc
xchg
push
imul
mov
rcr
sar
dec
sbb
stos
into
scas
xlat
(bad)
scas
div
sti
or
jnp
xor
mov
inc
ss
mov
cmp
or
sbb
sub
sbb
add
cmc
pop
push
xchg
aad
in
inc
jmp
mov
mov
add
jb
cdq
sbb
mov
pop
inc
enter
mov
nop
or
(bad)
jns
dec
jne
pop
cmp
or
rol
mov
js
cmp
neg
call
mov
dec
mov
add
in
fadd
and
jle
mov
sbb
xchg
mov
jg
sub
inc
inc
ret
mov
cmp
sub
out
(bad)
cmp
stos
sahf
mov
jecxz
shr
pop
dec
arpl
in
push
mov
xchg
dec
inc
imul
or
inc
test
adc
jp
cmps
(bad)
cmp
and
ret
ror
or
cwde
jmp
movs
and
push
push
push
add
xor
ret
push
sub
rol
pop
pop
jp
xchg
in
das
pop
push
cmps
(bad)
jp
jl
fcomp
sbb
fwait
or
inc
pop
xor
call
jecxz
lahf
sbb
lods
add
mov
dec
xchg
jmp
test
mov
cmps
push
adc
iret
outs
jg
jle
lahf
or
xlat
into
adc
lds
retf
stos
push
and
retf
inc
or
xchg
out
jbe
loopne
or
movs
dec
pop
in
clc
retf
push
fs
gs
add
adc
inc
call
mov
dec
sub
(bad)
fcomp
push
retf
movs
clc
or
in
sub
(bad)
or
rcr
sub
inc
sti
dec
pop
popf
aad
stc
stc
cmps
repz
jmp
pop
cdq
mov
mov
(bad)
out
scas
test
lahf
cmp
adc
cdq
retf
push
lods
sub
mov
cmp
in
mov
popf
ins
dec
dec
mov
ins
aas
mov
lahf
test
lods
pop
cdq
inc
scas
sub
mov
pop
stos
sbb
adc
or
rcr
mov
rcl
cli
rcr
mov
or
adc
mov
shr
mov
inc
loope
push
scas
scas
xchg
shl
add
adc
ret
pop
fwait
stos
cmp
sub
mov
pop
cdq
fsub
jge
icebp
int
sub
xchg
mov
cmp
dec
cwde
repnz
xor
mov
int
fwait
(bad)
cmp
mov
inc
mov
aam
cmp
hlt
in
dec
shl
inc
fcmovbe
pop
fcomp
pop
stos
loope
mov
pop
retf
sub
daa
std
jmp
jb
retf
push
mov
sti
mov
clc
jb
arpl
jo
cmp
retf
mov
call
bound
dec
scas
sbb
adc
push
mov
pop
call
and
movs
xlat
sbb
or
inc
push
pop
call
imul
out
call
xor
ror
or
ja
push
and
mov
call
mov
mov
add
or
inc
retf
add
mov
xor
cmp
xlat
cmpps
jmp
pop
push
hlt
icebp
aaa
mov
jbe
sti
sub
mov
mov
stos
ret
pop
scas
popa
fidiv
fcom
dec
mov
and
xor
retf
jb
pusha
test
add
mov
sbb
sbb
pop
fsubr
jmp
cmp
cmp
or
sub
mov
mov
test
push
int
leave
push
dec
mov
jecxz
sub
cmps
xchg
in
dec
aas
shl
dec
ror
sub
ret
mov
mov
and
mov
adc
outs
cs
sbb
adc
jmp
mov
leave
pop
mov
test
sbb
sbb
sahf
sub
je
dec
cmp
cmps
pop
jo
ins
xchg
loope
movs
mov
push
jno
test
in
sub
stos
cli
call
add
or
jns
add
and
jae
shl
jecxz
nop
call
dec
movs
pop
ret
(bad)
pop
mov
mov
mov
cmc
div
lds
jnp
mov
jle
(bad)
add
inc
or
cs
jnp
imul
retf
lods
dec
mov
or
sbb
mov
rol
mov
xor
mov
push
out
sbb
xchg
mov
xor
ret
ins
out
sbb
in
rdmsr
retf
xchg
dec
mov
or
shr
mov
sub
fidivr
ja
sbb
pop
jae
mov
pop
mov
pop
xchg
fisubr
stos
jo
xlat
xor
sub
jecxz
add
pop
aas
or
aaa
lods
or
push
and
add
add
push
dec
nop
sahf
call
movs
lods
dec
sar
fwait
and
clc
aad
sahf
inc
dec
adc
ss
sbb
movs
shr
retf
sub
test
mov
in
in
mov
fnstsw
pop
sahf
gs
cmp
jl
pop
push
jge
lahf
mov
pusha
cwde
sbb
mov
ret
mov
sub
push
fstp
popf
mov
jge
xchg
xchg
imul
movs
sbb
sub
push
enter
shl
repz
adc
nop
call
push
stc
sub
imul
xor
or
(bad)
test
mov
outs
es
stos
enter
jp
jnp
dec
sti
(bad)
cmps
sub
and
and
sbb
pop
sti
or
in
cmp
sbb
sbb
pusha
cdq
jg
xchg
retf
xchg
sbb
int
sub
add
jo
lahf
(bad)
xchg
xchg
inc
mov
mov
mov
cmp
add
or
jp
stc
rol
mov
sbb
or
frstor
push
mov
outs
cmps
push
pop
(bad)
mov
dec
mov
xlat
sti
jmp
cmp
push
pop
push
sub
or
outs
cmp
add
ret
inc
add
inc
jecxz
jns
sub
test
mov
inc
sti
dec
retf
fmul
fdiv
xor
push
cs
mov
jno
or
jnp
popf
xor
(bad)
retf
or
sub
ret
push
jmp
les
jle
jns
dec
push
lods
push
jg
lds
js
das
and
xchg
sti
cli
lea
dec
dec
mov
inc
mov
sbb
cmp
sub
add
pop
stc
fisttp
dec
pop
jg
mov
js
adc
retf
or
cwde
pop
jle
or
or
shl
repz
xor
push
cmp
ds
pop
and
mov
mov
call
cmp
imul
lods
icebp
leave
hlt
jne
sub
mov
out
fisttp
cmp
cmc
push
cs
shr
mov
dec
call
jp
scas
jno
scas
es
test
leave
aas
jae
retf
push
call
shl
aad
and
in
shr
add
stos
push
add
out
sub
pop
mov
call
cmp
inc
push
adc
mov
add
loope
ss
inc
jp
sbb
jns
mov
sbb
or
pop
jmp
into
lods
jo
push
jns
inc
cmp
xchg
mov
mov
rcr
dec
add
xchg
mov
in
adc
int3
cwde
ret
fnstenv
stos
adc
(bad)
bound
enter
and
mov
retf
sub
mov
cmp
(bad)
mov
gs
inc
push
push
sub
mov
jl
dec
dec
jnp
ja
arpl
adc
push
test
int3
dec
mov
cmp
xchg
stos
add
or
dec
pop
sbb
mov
ss
hlt
retf
sbb
add
sub
inc
cmp
jno
xchg
nop
or
mov
fdiv
sahf
lods
scas
loop
jns
pop
retf
mov
sbb
pusha
cwde
mov
repz
fsubr
cmps
push
jp
ret
sbb
cwde
xchg
jp
je
inc
inc
xor
and
jmp
mov
push
stos
iret
das
dec
mov
cwde
mov
pop
inc
pop
fwait
sbb
stos
push
mov
pop
mov
outs
xchg
cmp
retf
jecxz
adc
xor
adc
jmp
(bad)
es
mov
sub
mov
or
(bad)
ins
fimul
mov
sbb
pop
iret
je
ja
dec
push
into
and
repnz
push
outs
pop
fidivr
fs
and
rol
in
adc
sub
xor
pushf
or
shr
fnstenv
dec
je
mov
add
lods
aas
jle
lahf
mov
sub
sti
sub
mov
fmul
mov
mov
jo
neg
pop
sub
xor
pop
fxch
push
nop
pop
jle
sub
or
fild
int3
mov
inc
mov
pop
mov
rcr
ficom
retf
mov
jle
mov
mov
xchg
inc
stc
mov
sbb
nop
icebp
jbe
imul
xor
cmp
mov
inc
add
idiv
fistp
push
or
test
icebp
outs
sub
push
test
aad
sbb
nop
push
jg
stos
cdq
ret
jl
xchg
ffree
and
sub
dec
popa
loop
lds
nop
in
jle
outs
mov
repz
adc
jmp
outs
stos
arpl
fdiv
leave
imul
or
cmp
(bad)
lahf
dec
stos
cmp
ret
test
or
fldcw
sahf
inc
mov
into
sub
adc
pusha
repnz
pop
mov
xor
xor
jnp
mov
cmp
out
in
dec
stos
xchg
stc
dec
(bad)
clc
xor
clc
enter
leave
cmps
popa
aad
mov
(bad)
mov
sub
cmc
xchg
movs
push
add
repz
xchg
stos
popf
fild
inc
inc
test
cdq
adc
sub
loopne
push
icebp
cs
into
je
(bad)
jmp
cmp
inc
mov
(bad)
jecxz
push
ror
cmps
fistp
sub
and
sahf
pusha
sub
jnp
push
mov
lock
retf
push
cmp
pop
and
pop
mov
stos
jns
test
mov
jecxz
fimul
cli
push
sbb
ds
inc
jnp
xchg
push
retf
bound
dec
or
sbb
or
stos
adc
aad
into
push
stos
bound
mov
dec
in
test
or
in
ret
jnp
dec
aad
sar
cmp
sbb
je
xchg
jne
sbb
jecxz
push
adc
cmc
dec
dec
and
jae
sub
sahf
scas
lahf
stos
inc
fidiv
push
fimul
cmps
test
out
adc
xor
jp
aaa
gs
sbb
ins
mov
fisubr
xchg
push
retf
imul
dec
out
icebp
add
sahf
aam
and
and
dec
stos
sub
or
dec
stc
push
cmp
cli
outs
ins
sbb
imul
shr
test
xor
clc
push
xchg
bound
jmp
dec
stos
outs
call
sbb
and
fst
cli
sbb
and
mov
mov
popf
jmp
sbb
outs
push
retf
mov
sub
mov
mov
jge
fwait
cli
mov
(bad)
sbb
cmp
or
and
cli
rcr
cmp
mov
xchg
push
adc
mov
popf
fs
sbb
jg
stos
dec
das
pusha
pop
sbb
sbb
push
(bad)
cmp
daa
fxch
ret
xchg
lock
pop
scas
xchg
fwait
out
inc
je
or
pop
or
lock
pop
sub
jge
cmc
or
adc
lds
or
out
fnstsw
stc
(bad)
popf
ins
pop
add
pop
fwait
popa
inc
mov
sbb
fwait
inc
mov
mov
pop
clc
stos
nop
aaa
enter
stos
mov
push
jne
pop
mov
mov
movs
(bad)
mov
mov
mov
cmp
jb
cmp
xlat
into
aaa
cli
mov
jb
add
mov
enter
sbb
jp
fiadd
and
scas
icebp
sub
test
pop
or
movs
push
loope
ret
cmp
pop
sbb
jmp
adc
loop
out
sub
imul
fs
adc
cmp
sti
push
clc
ins
jbe
or
push
push
mov
xchg
and
adc
shl
xchg
lods
int3
push
sub
cmp
fcmovnb
ret
jae
or
mov
fimul
mov
dec
pop
fstp
ja
scas
mov
sub
dec
push
inc
jl
and
cmp
and
mov
daa
push
cmp
sub
fisttp
xchg
pop
icebp
pop
(bad)
data16
mov
sub
xchg
add
xchg
or
lea
out
mov
out
or
mov
cmp
sub
outs
cdq
pop
repz
cmp
fsubr
jne
lea
lock
outs
out
repz
and
fisttp
or
repz
push
jge
dec
mov
mov
or
jmp
lds
enter
or
mov
lea
imul
inc
dec
movs
out
(bad)
das
pop
cmp
stc
mov
jmp
xchg
stos
push
dec
add
in
pop
out
sub
pop
jp
dec
cli
jp
lahf
pop
mov
pop
sbb
pop
dec
imul
in
cmp
int3
enter
(bad)
popa
sub
and
jnp
cmp
push
movs
push
lock
inc
xor
jmp
loopne
add
sub
mov
add
stos
mov
fucomi
sub
jnp
adc
mov
sub
xor
mov
sub
jp
mov
outs
repnz
dec
adc
mov
lods
pop
das
adc
dec
fidivr
inc
cmp
iret
mov
or
jns
cmp
retf
jnp
sti
lahf
movs
movs
ja
xchg
mov
lods
xchg
or
pop
(bad)
rol
mov
xor
(bad)
aad
jle
aaa
arpl
(bad)
jmp
fisttp
jmp
cmc
mov
add
clc
fxch
push
lods
test
(bad)
jbe
sbb
mov
out
mov
mov
cmp
dec
test
inc
fmul
push
pop
test
adc
inc
cmps
sti
sti
push
push
out
dec
and
sbb
adc
cmps
mov
(bad)
cmp
push
dec
into
cli
mov
and
push
call
cli
imul
push
test
mov
cmp
popa
mov
out
inc
cmps
cdq
mov
pop
jo
fwait
cmc
mov
sub
test
out
mov
mov
push
movs
leave
mov
cmp
mov
es
(bad)
(bad)
mov
icebp
jns
mov
jge
inc
clc
cmp
sub
or
addr16
cmps
mov
pop
xchg
or
mov
test
daa
mov
call
sub
mov
mov
jg
cmovs
mov
imul
adc
xchg
sbb
cmp
mov
jb
retf
lods
lea
sti
lea
pop
dec
inc
dec
std
fwait
xor
into
int3
cmp
jle
pop
and
xor
imul
jmp
sub
in
jbe
ss
sbb
cmp
push
rol
iret
inc
pop
sahf
mov
jo
adc
repnz
cmp
addr16
jg
adc
sub
pop
or
sbb
jbe
jle
add
jno
cld
arpl
and
hlt
call
or
add
clc
dec
repnz
aaa
jmp
mov
jns
in
mov
add
pushf
dec
xor
jbe
mov
retf
rcpps
stos
xor
stos
xor
add
jp
xchg
repz
fild
cmc
call
or
jmp
push
pop
jmp
jp
enter
js
int
jg
js
dec
retf
ja
das
sahf
jg
dec
mov
mov
test
sbb
test
push
shl
pop
fidivr
shr
mov
cs
dec
xchg
jmp
js
pop
sub
sub
xchg
add
sub
call
cmp
or
or
add
dec
cmc
das
pushf
push
ins
jg
dec
mov
jge
popa
sbb
(bad)
fisub
push
sub
sbb
sub
sbb
lahf
add
pop
mov
test
jp
bound
sbb
das
mov
stc
fimul
stos
and
jae
or
ins
sub
push
ds
sub
into
cs
dec
jmp
and
outs
paddsw
popa
jno
shl
call
pusha
mov
pop
xlat
mov
jle
fnstcw
ja
stos
adc
sbb
sub
pop
out
psubd
sbb
add
pop
out
xchg
fwait
xor
inc
cmp
les
cli
es
mov
test
inc
mov
pop
and
out
sub
add
and
dec
sahf
dec
ss
movs
mov
lods
aaa
inc
sbb
sub
lock
cmp
addr16
cmp
enter
or
jp
aam
jnp
adc
ficomp
jo
add
stc
shr
sub
push
cwde
mov
xchg
fs
int
inc
call
cmp
ja
mov
int
xor
movs
jp
loopne
sar
xchg
cmp
iret
dec
mov
clc
jl
aas
lahf
mov
repnz
and
into
ficomp
pop
and
repz
stos
dec
jle
or
cwde
sar
or
cmp
scas
ins
cdq
dec
sbb
mov
mov
leave
push
ficom
jo
and
and
jecxz
sub
inc
sbb
lahf
pusha
adc
sub
cmp
lods
in
add
cmps
popa
retf
cmp
sbb
pop
fist
leave
icebp
int
push
pop
cmp
push
sub
retf
rcr
pcmpeqw
les
mov
pop
xor
dec
xor
cwde
in
sbb
dec
xchg
cwde
sti
lds
pusha
fimul
push
sbb
ja
inc
mov
mov
ja
mov
jmp
cmp
es
xchg
(bad)
dec
jmp
and
mov
inc
mov
dec
mov
adc
das
inc
cmp
loope
or
mov
(bad)
sbb
pop
mov
mov
xchg
xor
or
cmp
pop
int3
cmc
loope
push
js
push
sub
mov
call
sub
push
in
stos
clc
push
cmp
xlat
adc
bound
jnp
fwait
jo
and
xchg
add
hlt
or
jmp
inc
cmps
pop
sbb
mov
repnz
stos
jne
adc
mov
jge
dec
lods
cmp
or
mov
pop
adc
imul
push
inc
sub
push
into
add
cs
movs
arpl
retf
jne
mov
cmp
mov
imul
retf
sti
xchg
into
je
mov
dec
mov
add
das
mov
addr16
je
ins
fdivr
push
fnsave
mov
dec
dec
sbb
inc
pop
outs
pop
out
outs
test
loopne
out
repnz
ja
jp
pop
mov
mov
sub
dec
cmp
sub
adc
jne
ins
pop
pop
adc
dec
inc
out
mov
cmp
cmp
xchg
pop
sub
rcr
sub
adc
cmc
cmp
fisubr
lahf
xchg
and
cli
or
cmps
adc
dec
sbb
pop
and
imul
mov
adc
jne
mov
in
cmp
rcl
or
leave
stos
adc
sub
push
stos
repz
and
lock
xor
pop
jecxz
fwait
fs
loope
cmp
imul
jns
or
xchg
pusha
cmp
(bad)
int
jbe
sub
inc
adc
push
sbb
call
stos
pop
pop
sub
cmp
jne
ins
and
mov
jb
or
stos
adc
jns
mov
(bad)
ja
icebp
aas
xchg
aam
sbb
sbb
imul
sbb
xchg
pop
or
xchg
ret
leave
cmp
or
mov
pop
movs
outs
xchg
int3
inc
mov
add
jecxz
sbb
out
adc
pop
pop
stos
or
xchg
std
sbb
xchg
(bad)
mov
xchg
jmp
ret
ds
sub
pop
jne
leave
xor
xchg
jae
or
ret
jmp
mov
data16
and
jl
adc
repz
loopne
push
(bad)
scas
mov
push
adc
imul
pop
and
(bad)
fisubr
jp
scas
dec
call
stos
test
adc
das
inc
int
icebp
and
cmp
add
sub
lods
aaa
sbb
push
push
fld
imul
outs
sub
xor
push
sbb
jns
in
jno
sbb
stos
test
adc
jg
push
jle
jmp
mov
xchg
push
pusha
fisubr
aas
inc
pop
aam
sub
cmp
pop
lods
rol
dec
ds
mov
mov
out
pminub
or
mov
jmp
stos
fstp
movs
and
sti
sar
fs
std
push
or
pop
call
jmp
xchg
add
out
and
xchg
(bad)
cmc
mov
or
or
xchg
jle
je
sbb
pop
rcl
imul
add
lods
push
pop
sbb
bound
and
popa
(bad)
jne
push
js
sbb
int
mov
xchg
pop
and
fimul
fisub
mov
lahf
dec
mov
xchg
xor
movs
dec
jg
mov
push
add
das
adc
mov
xchg
dec
adc
mov
loop
xchg
xchg
pop
ret
frstor
scas
std
dec
cdq
cmp
or
js
(bad)
mov
jnp
push
stos
dec
leave
lds
jnp
nop
js
mov
cmp
scas
mov
push
pop
cmp
retf
or
jecxz
push
push
fcmovbe
sub
mov
dec
add
test
cmps
repz
mov
outs
cmp
cmc
push
lods
push
ret
mov
ret
xchg
jnp
into
push
jle
mov
jmp
aaa
out
scas
pop
dec
fistp
fidivr
jae
xchg
push
mov
ror
test
imul
xor
cmp
daa
sbb
test
dec
adc
stos
out
stos
mov
test
inc
pop
sub
repz
mov
dec
xor
int3
sahf
fs
push
inc
adc
(bad)
scas
outs
xor
push
dec
sub
sbb
das
movs
or
sub
cld
enter
pop
lock
(bad)
sub
cli
ja
dec
xor
not
test
fwait
aas
int
ds
fild
and
adc
fwait
mov
sahf
sub
xor
sar
fsubr
add
jns
pusha
push
ret
push
ja
cmp
mov
stos
sbb
xor
adc
movs
cmp
cmp
dec
xor
inc
push
lea
sbb
out
out
aas
outs
dec
cmp
or
jecxz
jmp
jmp
jns
dec
adc
clc
jp
outs
sub
clc
ror
fstp
cmp
and
pop
ror
jecxz
in
mov
xchg
mov
push
stos
mov
lahf
mov
fnstenv
(bad)
bound
jg
or
add
dec
sbb
lahf
test
aas
sub
pop
mov
stos
sub
push
mov
mov
inc
bound
(bad)
into
push
xchg
dec
ficom
aaa
push
jge
mov
push
lock
sbb
ss
fsubr
outs
jecxz
retf
ret
stc
cmps
inc
retf
sub
xchg
jno
push
retf
xor
dec
inc
int
xchg
rcl
push
fldcw
cmp
or
lds
mov
dec
add
loopne
mov
stos
fisubr
sar
mov
scas
fist
out
iret
mov
sub
(bad)
jge
mov
std
xor
pop
sbb
push
xor
aas
stos
pop
imul
retf
in
or
iret
adc
mov
jne
into
pop
or
and
das
push
div
cli
mov
retf
ja
push
movs
cdq
pop
nop
dec
int3
repnz
and
xor
fwait
mov
stc
out
pop
sub
ret
fidivr
jne
sbb
mov
clc
int
xor
lods
jnp
sar
push
int
dec
cmp
loop
pop
fwait
call
stos
imul
jmp
comiss
sti
jmp
(bad)
dec
push
cmp
mov
sti
or
in
fist
aas
add
enter
loopne
call
xor
mul
fldenv
push
fdivrp
imul
mov
fisttp
pop
cmps
daa
pop
and
sti
or
jmp
in
pop
in
repz
jle
call
xor
inc
sbb
sub
arpl
push
inc
retf
jnp
dec
test
test
push
cmc
mov
in
mov
in
mov
cmp
pop
out
mov
test
sbb
stos
call
sub
in
add
repz
jmp
cmc
jns
std
cmp
fst
retf
aaa
call
jg
mov
call
jnp
mov
outs
mov
pop
pop
mov
push
stos
in
and
xchg
jne
jmp
jp
mov
in
outs
cmp
fisttp
dec
test
push
scas
neg
fild
dec
imul
lahf
fwait
lahf
mov
ds
cld
in
fld
cli
nop
ret
adc
xor
push
cmp
ja
retf
mov
outs
in
push
sub
jo
rep
add
stc
mov
stos
in
bound
mov
cmps
sbb
dec
xchg
ja
mov
mov
dec
ds
sub
data16
and
or
sub
jae
test
popa
lock
test
in
aas
vpunpckhbw
adc
jae
aas
inc
mov
add
das
jae
enter
lds
cld
xlat
in
scas
dec
cli
add
cmp
sti
repnz
stos
sub
shr
into
into
cmp
inc
imul
rcl
hlt
sub
xchg
and
stc
pusha
push
sbb
test
or
inc
or
call
sbb
pop
add
push
pop
push
or
push
dec
add
repnz
popf
repz
call
retf
std
icebp
mov
cmps
xor
daa
mov
and
loop
arpl
add
push
adc
sbb
into
jle
cmp
call
je
sti
ja
mov
jp
dec
pushf
cmp
rcr
retf
jmp
lahf
pop
iret
enter
xchg
push
(bad)
repz
dec
call
cmp
pop
or
sub
mov
xchg
ja
cmc
xor
js
mov
std
out
sbb
dec
add
mov
daa
outs
push
cmp
fwait
jle
punpckhbw
pop
stos
mov
sub
mov
in
jp
mov
out
dec
mov
or
jecxz
ror
aas
ins
fiadd
inc
std
xor
sbb
into
cli
adc
pusha
jb
hlt
pop
enter
xchg
add
xchg
sahf
enter
out
sbb
sbb
cs
movs
mov
jbe
and
sub
aad
mov
push
cli
dec
xor
fiadd
jmp
inc
jae
mov
retf
mov
and
call
nop
sahf
pop
adc
sub
mov
jecxz
out
xchg
sti
push
or
jle
out
cmp
loope
fldcw
lods
or
in
mov
fwait
jle
sub
test
add
pop
ficom
setne
retf
jns
inc
jmp
arpl
into
inc
pop
retf
(bad)
cmp
jne
cmp
ja
and
sub
jle
pop
cmp
enter
cmps
(bad)
rol
lahf
push
stc
mov
repz
sbb
int
jl
stos
ins
movs
clc
and
mov
rcr
test
int
push
gs
jp
or
fimul
cmp
aaa
pop
jp
mov
push
sbb
loope
sbb
fstp
fdivr
sub
xchg
adc
ret
jnp
add
lods
pop
stos
adc
xor
repz
mov
push
gs
iret
adc
and
add
mov
xor
jmp
leave
cmp
mov
add
and
stos
mov
fcmovnb
ja
jns
movd
cmp
dec
sbb
sbb
leave
dec
pop
mov
push
addr16
int
jmp
pop
or
add
adc
cmp
cmp
neg
hlt
xor
shr
mov
clc
fstp
pop
ins
or
scas
pop
adc
sahf
dec
(bad)
push
stc
mov
leave
push
add
push
push
ins
dec
xor
sbb
jecxz
dec
int
push
inc
mov
adc
int
loope
dec
cmp
mov
fsub
jns
sahf
sbb
cmp
fst
jp
mov
sbb
push
jno
scas
rcl
jb
mov
mov
popa
xor
adc
nop
add
aaa
les
jb
sbb
dec
mov
pushf
in
sar
pop
xchg
mov
stc
aas
mulps
rcl
dec
daa
xlat
push
(bad)
fwait
mov
mov
pop
fwait
add
out
stc
inc
(bad)
jnp
jo
add
in
or
xor
sub
lods
cmp
retf
jp
ja
jns
(bad)
div
jmp
adc
jae
mov
and
fistp
inc
shl
out
into
mov
sbb
xor
push
jmp
fsubrp
or
loope
mul
outs
leave
mov
test
inc
(bad)
cmp
add
ret
sbb
jnp
jecxz
dec
dec
pop
mov
add
pop
scas
gs
pop
sahf
cmp
pop
cwde
ror
push
and
std
or
clc
cmp
std
mov
dec
push
sub
or
outs
dec
push
push
sahf
test
mov
inc
add
or
jle
pop
lods
push
inc
js
out
dec
aam
loop
jmp
add
jno
jo
int
loope
fisub
ror
pop
into
fwait
mov
scas
jmp
jge
pop
sbb
jmp
bound
loop
and
push
mov
sbb
test
cmp
mov
or
inc
ins
loopne
sub
jno
or
dec
ja
(bad)
lea
in
repz
lods
fimul
dec
cli
sti
jmp
jnp
shl
mov
mov
cmp
ds
xchg
fwait
and
and
fsub
mov
fdivr
push
fwait
mov
out
or
jno
cmp
sub
sub
dec
repnz
jno
cmp
mov
cli
rol
adc
push
imul
mov
pop
(bad)
fidivr
add
push
jmp
scas
sub
jns
and
fcmovbe
shl
retfw
xchg
xchg
imul
dec
ret
cmp
cmp
imul
mov
cmp
jb
ret
pop
gs
ins
enter
sub
jmp
lods
or
(bad)
mul
sbb
enter
jnp
cmp
ja
aam
in
mov
movs
(bad)
jg
and
or
int
repz
sbb
fisttp
fisttp
or
push
mov
ficomp
leave
scas
or
je
adc
lods
dec
out
mov
retf
and
push
jae
std
xchg
jecxz
jmp
ins
xlat
pusha
movs
jle
sub
out
mov
lahf
mov
icebp
test
sub
sub
xor
hlt
mov
popf
inc
jp
stos
fild
adc
and
jb
push
mov
daa
neg
jp
(bad)
cmp
sbb
sub
lods
xchg
call
push
sbb
repnz
mov
dec
neg
js
sub
imul
data16
ins
push
mov
jae
pusha
(bad)
clc
ficom
clc
cmp
out
enter
das
sbb
dec
inc
mov
sbb
jmp
sub
pop
sahf
leave
push
mov
or
dec
imul
and
mov
aaa
dec
jmp
cmc
or
jmp
and
cli
ret
xchg
jnp
mov
mov
shr
pop
ja
mov
cld
xchg
xchg
or
sbb
pop
and
dec
mov
fwait
in
cmp
xchg
add
adc
xlat
sub
stos
call
and
and
jmp
cmp
aam
cmp
(bad)
jmp
lods
dec
jp
into
mov
xchg
add
jo
stos
xor
mov
pop
cvtdq2ps
(bad)
out
inc
lahf
sti
lds
and
push
push
lds
push
imul
aas
mov
cmp
outs
das
popf
pop
or
sub
pop
or
lahf
stos
(bad)
rol
cmp
test
sub
sbb
push
and
arpl
call
adc
inc
fist
push
sbb
push
ret
mov
or
jbe
sub
test
jns
imul
jmp
mov
mov
ss
imul
inc
(bad)
jae
(bad)
iret
sbb
repz
pop
xor
test
mov
pop
int
movs
mov
dec
js
xor
xchg
or
jecxz
jmp
pop
xchg
retf
sub
fwait
xchg
dec
dec
stos
or
(bad)
repnz
shr
fimul
push
pop
and
adc
pushf
lahf
dec
mov
dec
xor
sub
hlt
or
xor
test
les
ret
push
push
sub
sbb
sub
hlt
xor
(bad)
mov
xchg
sbb
imul
mov
push
fstp
call
sub
mov
mov
into
pop
adc
ret
sub
jno
push
mov
mov
xor
mov
js
jmp
xchg
out
(bad)
idiv
es
out
sub
or
sbb
fcomp
daa
call
cli
pop
jl
imul
jb
fldcw
cmp
and
ds
push
lock
mov
dec
daa
pop
sub
dec
dec
dec
ins
xor
ins
adc
and
jo
sbb
ss
pop
and
call
retf
mov
push
mov
icebp
mov
retf
sbb
movs
fisubr
repz
add
aad
adc
fiadd
jb
xchg
imul
mov
jp
fucomip
pushf
add
je
cli
push
pop
sbb
add
mov
xchg
mov
arpl
pop
dec
jmp
sub
stc
and
adc
icebp
dec
and
addr16
pop
push
outs
fst
or
xor
(bad)
lods
into
sahf
scas
mov
push
or
int
in
add
push
adc
iret
int3
pop
(bad)
or
xchg
test
mov
(bad)
dec
cld
retf
mov
out
cmps
jge
fwait
pop
imul
cmc
(bad)
mov
add
add
dec
or
retf
bound
loopne
cmp
(bad)
lahf
push
cmp
imul
mov
scas
enter
cmp
fcom
rcr
js
icebp
iret
mov
(bad)
and
or
sti
mov
jmp
mov
fld
push
mov
mov
mov
and
pop
cmp
stos
jns
or
loopne
stos
fs
mov
inc
outs
dec
or
xchg
fwait
pop
xchg
mov
retf
fmul
jp
jmp
mov
jns
stos
dec
jno
sbb
or
stc
dec
stos
pop
lds
sub
xor
mov
xor
adc
in
jae
stos
mov
fdiv
sbb
out
adc
aaa
dec
push
outs
cmc
outs
cmp
add
jns
jmp
and
js
jo
leave
imul
mov
es
jb
xchg
dec
xor
push
mov
not
movs
movs
lahf
mov
loope
pop
stos
out
in
lds
sbb
outs
sbb
xor
loop
gs
fwait
pop
shl
xchg
repnz
jno
pop
test
cld
sub
ins
mov
sbb
les
int
inc
dec
push
rcr
add
ins
mov
mov
(bad)
mov
ins
add
out
rcr
mov
jmp
jmp
data16
repz
lds
shr
fdivr
stos
iret
pop
pop
adc
pusha
xor
stos
xchg
ds
out
dec
dec
call
pusha
call
lock
jmp
std
enter
imul
and
add
sti
push
jmp
repz
lahf
xchg
jge
jo
push
stos
pop
cs
push
add
mov
jle
or
sti
add
jp
inc
cmp
mov
stc
xchg
nop
xchg
fcmovu
mov
aaa
mov
stos
and
int3
sti
sahf
outs
mov
xor
sub
jnp
fisttp
jecxz
jle
or
mov
dec
daa
push
push
jg
je
mov
(bad)
stos
scas
mov
popf
mov
jmp
out
push
push
sbb
test
push
stc
push
out
loope
jmp
mov
push
jo
scas
xor
popa
vorps
in
imul
inc
imul
out
push
or
dec
jbe
push
gs
out
ud2
jmp
push
sbb
out
in
pop
dec
pusha
cmp
xchg
imul
and
cmp
test
mov
fprem1
cmp
call
sub
mov
xchg
and
pop
pop
pop
retf
pop
add
imul
mov
jbe
mov
jmp
aaa
fld
in
xchg
mov
mov
ret
(bad)
shl
jecxz
mov
test
out
mov
dec
repnz
mov
and
adc
(bad)
mov
int
cmp
or
dec
fld
jne
push
sub
cli
ss
push
movs
fwait
mov
cmp
daa
in
sub
mov
pop
mov
jg
jecxz
mov
xchg
pop
sub
pop
movq
lods
pop
mov
cmp
(bad)
push
or
xor
and
sbb
popf
ret
cmp
or
jle
sbb
retf
inc
stos
dec
mov
pop
xor
outs
push
and
cmp
cmp
sub
(bad)
in
scas
cld
jmp
mov
add
jnp
cmp
sbb
retf
aas
jbe
in
pop
cmp
add
inc
retf
jns
fsubp
sbb
fist
popa
test
ficom
inc
jae
fst
mov
aad
fisttp
(bad)
jnp
ins
ja
mov
ret
das
pop
aas
cli
and
test
push
sub
or
(bad)
cs
xor
adc
imul
les
mov
add
gs
pop
movs
dec
outs
pop
fisubr
and
call
jl
loope
adc
xor
fwait
popf
jnp
cmp
lods
pop
mov
jp
lahf
xchg
pop
loopne
and
jl
mov
data16
and
mov
push
sbb
push
jg
sub
pop
xchg
xchg
scas
popa
lods
test
rcl
mov
sub
mov
cmp
or
scas
dec
imul
clc
or
push
mov
fisttp
iret
lds
sub
and
lods
dec
enter
fstp
inc
mov
(bad)
mov
inc
and
push
sbb
push
and
shr
mov
sbb
data16
stos
mov
fmul
fucomi
push
mov
pop
fisttp
leave
inc
fwait
pop
mov
cmp
add
xor
pop
scas
mov
push
pop
mov
sub
fs
arpl
fcmovu
mov
imul
retf
mov
and
(bad)
jnp
jnp
lock
mov
out
cmps
inc
jo
outs
adc
jmp
dec
jnp
popf
sub
dec
jmp
dec
popa
push
cmp
movs
call
out
or
stos
or
(bad)
push
pop
mov
fwait
das
call
xchg
int
call
fisttp
jno
jecxz
fwait
sbb
or
adc
std
cmp
mov
scas
xor
sub
push
out
sbb
fwait
stos
loope
sbb
jne
cli
fld
dec
dec
aad
and
fwait
push
test
jae
cs
push
call
imul
dec
jge
out
fstp
sbb
mov
mov
dec
(bad)
jmp
jmp
popf
push
call
pop
xor
retf
cmp
aad
mov
dec
outs
mov
mov
vmread
sbb
pop
out
or
jecxz
inc
stos
pusha
sbb
outs
cmc
jge
imul
and
aam
test
xchg
xchg
inc
cmp
and
mov
(bad)
sti
sahf
pop
stos
lods
mov
fadd
je
xchg
rol
sub
jmp
cmps
loopne
sub
out
dec
jb
cld
outs
inc
pop
jp
pop
and
sbb
scas
gs
iret
imul
add
imul
int
scas
mov
in
jmp
mov
in
pushf
lods
dec
add
pop
stos
loopne
jno
jp
adc
adc
sbb
fstp
movs
sub
call
push
xor
xor
sbb
out
jge
sti
sub
(bad)
mov
imul
dec
sti
sbb
stos
mov
mov
cli
mov
mov
pop
jnp
or
inc
lahf
imul
mov
mov
test
movs
pop
xor
add
aad
vcomisd
push
cmp
stos
lods
lock
mov
fcmovnb
mov
cmp
std
nop
lea
push
sti
xor
cdq
xor
add
mov
mov
sbb
cmp
outs
jo
mov
sbb
lds
call
xor
ins
sbb
fnsetpm(287
jle
cmp
fstp
int
sbb
jge
pop
repz
bound
inc
sbb
test
iret
loope
(bad)
cmp
pop
mov
fldl2e
jmp
cmp
call
cmps
jg
dec
sub
in
sti
repz
jnp
dec
lds
int
retf
jl
pop
or
push
xchg
sar
mov
adc
sbb
mov
dec
jno
dec
sub
stos
pop
sub
jecxz
fnsave
fbld
fiadd
pop
mov
mov
pusha
sub
mov
aad
push
sbb
adc
and
movs
mov
mov
addr16
leave
sbb
stos
icebp
imul
xchg
inc
dec
call
fwait
add
mov
jns
inc
aam
push
adc
pop
or
fmul
idiv
repnz
shr
pop
sub
aad
mov
retf
jmp
add
pop
pop
shl
pop
cmp
scas
sbb
mov
sbb
rcr
xchg
popf
leave
and
mov
xchg
int
aad
adc
xor
lods
nop
jno
jmp
fist
fcomp
push
mov
loop
mov
dec
shr
dec
mov
(bad)
cmp
fcmovnu
or
clc
imul
rcl
inc
sub
push
dec
or
sbb
xor
lods
cmp
adc
cwde
mov
mov
or
scas
jnp
jl
and
adc
sub
pop
jg
jne
fwait
push
repz
outs
mov
push
jmp
sbb
jl
adc
jge
inc
das
jae
ret
pop
mov
fisttp
jmp
cmp
and
(bad)
into
stos
in
mov
or
out
push
mov
ret
jo
jmp
cmc
inc
mov
dec
js
push
jmp
aad
pop
arpl
stos
lods
mov
cmp
mov
movs
ret
dec
into
adc
mov
stos
pusha
xchg
dec
cmp
or
sub
std
ss
adc
push
inc
mov
mov
stos
repnz
jns
sbb
in
sub
xor
mov
mov
stos
dec
mov
retf
xor
mov
inc
sub
mov
mov
sbb
dec
or
push
or
xchg
lahf
mov
dec
xchg
push
add
das
mov
dec
lods
push
jmp
cmp
and
dec
out
jae
sub
or
lahf
push
push
jp
adc
adc
sti
mov
inc
ret
jecxz
pop
test
cmp
fwait
retf
inc
sbb
inc
mov
sbb
dec
rcr
pusha
repz
iret
sbb
std
mov
inc
xor
jnp
pop
out
pop
pop
(bad)
aad
(bad)
dec
outs
into
mov
lods
out
push
imul
mov
inc
mov
sbb
imul
and
add
scas
into
fld
mov
and
enter
(bad)
xor
xchg
adc
inc
inc
pop
xlat
lods
out
fisttp
iret
jp
sub
scas
call
(bad)
lods
jmp
pop
inc
sbb
or
sar
aas
imul
stos
cmps
scas
packssdw
call
jne
or
mov
inc
pop
push
jl
sar
jb
mov
repnz
ins
mov
loope
mov
sub
not
jle
push
aaa
xchg
ror
arpl
fcomp
sbb
sub
js
jnp
jo
or
mov
fwait
adc
pop
jb
cmp
mov
clc
cwde
out
aas
dec
xchg
jp
fcom
mov
dec
scas
mov
or
ja
fnstcw
shr
or
fwait
dec
cmc
jge
sti
dec
cmp
or
fmul
out
cmp
sub
xor
repz
cmp
fld
(bad)
add
sbb
arpl
sub
test
push
mov
xchg
fwait
fwait
or
stos
(bad)
sahf
inc
sbb
repnz
jge
or
outs
fnstsw
dec
cwde
daa
cmp
xchg
inc
test
mov
or
es
in
dec
xchg
or
push
stos
dec
in
mov
sbb
push
je
mov
mov
cmps
daa
in
jae
jnp
das
mov
dec
(bad)
and
jl
jae
mov
call
mov
out
add
jecxz
addr16
lods
or
jle
mov
cmp
mov
int
into
xchg
adc
and
(bad)
ds
cwde
inc
sbb
xlat
in
xor
mov
jns
xor
retf
xor
(bad)
lock
inc
jge
test
jmp
cmovl
add
in
loop
clc
jl
call
xlat
dec
call
xor
inc
pop
dec
pop
loopne
ds
retf
mov
push
into
sub
in
fwait
push
ins
push
mov
imul
sub
les
dec
fnstcw
xchg
xchg
js
gs
inc
cmp
(bad)
popa
sub
pop
jns
push
pop
test
cmp
or
pop
mov
push
mov
push
test
sbb
fistp
inc
mov
and
pop
into
cli
pop
mov
cmp
jmp
add
test
jmp
inc
dec
dec
imul
xchg
or
test
leave
mov
sbb
out
inc
or
ds
mul
fisttp
dec
lds
xchg
das
jmp
adc
shr
add
cmps
clc
in
push
sbb
stc
inc
test
mov
xchg
xchg
(bad)
push
test
mov
dec
xchg
aaa
pop
and
pop
add
pop
rcr
enter
mov
jmp
lahf
pop
int
mov
or
pushf
retf
dec
imul
push
sub
xchg
jge
or
cs
sar
jmp
pop
stos
mov
sti
lea
in
xor
call
cwde
cwde
frstpm(287
push
cmp
push
mov
rol
mov
(bad)
loop
mov
dec
fstp
or
inc
jnp
or
pop
push
jl
xor
fimul
or
popa
ins
xor
imul
sbb
xor
sbb
or
inc
loope
add
mov
stos
into
or
aam
nop
jae
pop
mov
add
push
arpl
xor
addr16
cmc
sbb
cld
jmp
retf
pop
das
jp
ins
jecxz
or
sub
dec
popf
out
ret
call
xchg
jecxz
js
xchg
mov
mov
mov
pop
sub
push
sub
aam
shr
ror
mov
movs
call
leave
push
sbb
add
stos
mov
rol
jle
stos
in
adc
push
mov
test
jns
inc
fwait
dec
imul
push
mov
test
(bad)
dec
pusha
or
fldcw
or
out
es
std
cli
lock
cmp
stc
popa
pop
add
aad
mov
aad
inc
enter
sti
je
jmp
(bad)
cmp
cmp
mov
or
sub
mov
inc
cmp
mov
mov
(bad)
aaa
xchg
xchg
sub
pop
fcomp
dec
out
popa
shr
call
imul
mov
jp
das
sti
cs
sti
daa
out
fucom
or
xor
jg
fistp
dec
add
aam
xor
pop
inc
cld
push
dec
mov
mov
xchg
jp
es
push
jnp
push
(bad)
jae
push
test
jns
xor
cmpxchg
ins
mov
jl
ins
test
inc
mov
repnz
sub
add
jnp
pop
fistp
in
aam
or
(bad)
cwde
lds
ss
push
xchg
jle
and
mov
loope
inc
(bad)
call
jmp
mov
adc
aad
xchg
retf
push
into
sub
sqrtps
mov
das
(bad)
out
dec
retf
xor
adc
xchg
jmp
mov
inc
sti
pop
cmp
lea
stos
mov
nop
nop
pop
push
push
dec
(bad)
jmp
sub
call
mov
(bad)
sub
sbb
sub
mov
mov
jmp
rol
stos
fisttp
inc
and
jmp
pop
or
mov
pop
lea
or
rcl
sub
call
push
inc
sbb
xchg
outs
xor
sub
(bad)
dec
mov
rol
xchg
in
call
push
or
lods
mov
dec
sti
clc
jnp
xor
sub
mov
lods
loopne
sahf
or
dec
ss
sub
pop
cmps
dec
imul
xchg
cwde
stos
inc
mov
sub
cmp
push
leave
aad
jl
cmp
(bad)
sti
data16
imul
xchg
std
push
push
leave
mov
lock
cs
cmp
and
push
mov
fwait
cmp
in
jp
dec
outs
push
adc
dec
or
sbb
scas
mov
cmp
in
movs
mov
or
xchg
sub
mov
enter
mov
jmp
push
pop
inc
pop
test
jnp
inc
ins
sbb
or
jnp
jge
jmp
or
imul
add
mov
jmp
pop
retf
test
stos
cmps
loope
ret
inc
cmc
repnz
xor
test
movs
xor
pop
loop
push
sbb
xchg
hlt
push
mov
inc
mov
cwde
sbb
jge
in
fdivr
movs
add
pop
shr
sahf
mov
loope
sbb
dec
cmc
or
xchg
stos
jno
aaa
push
cld
imul
mov
into
mov
aas
mov
add
mov
xor
xchg
fs
push
jb
jmp
sub
push
xor
call
push
or
sbb
imul
mov
or
rcr
xchg
aad
enter
test
stos
in
push
retf
scas
sub
stos
or
sti
fisttp
or
das
pop
xchg
(bad)
cmp
mov
(bad)
xor
stos
cs
rcr
push
in
aam
fistp
lods
idiv
scas
mov
(bad)
aas
aas
inc
stc
jl
push
dec
stos
bnd
imul
int
dec
adc
fwait
enter
mov
lahf
push
cmp
push
icebp
fist
mov
pop
sbb
cmp
mov
dec
inc
dec
sbb
inc
and
xor
shr
push
sbb
sbb
std
inc
test
aas
add
adc
mov
push
je
repnz
jne
mov
pcmpeqw
mov
jmp
xchg
leave
arpl
lods
pusha
rcr
pop
imul
push
das
xchg
adc
jno
add
scas
retf
ds
jmp
ja
add
xor
stos
cld
cmp
jne
cmps
cmps
arpl
mov
pop
adc
sub
dec
pushf
fild
jmp
lods
sub
lahf
retf
ins
add
cmp
fs
pop
dec
xor
cmp
push
imul
inc
ror
fbstp
out
sub
jae
mov
xchg
imul
add
xor
sahf
cmc
adc
mov
cld
and
push
les
xor
push
inc
sub
btr
fimul
movs
jecxz
mov
cmp
sbb
xor
imul
ss
mov
dec
cmp
into
mov
sub
jmp
mov
je
test
fmul
and
mov
out
dec
mov
fabs
ins
push
or
shl
fcmovu
pop
pop
mov
mov
loopne
in
dec
push
ins
mov
movsx
mov
call
jmp
sbb
cs
xor
into
jnp
sub
jmp
sub
in
adc
in
jae
repz
cdq
add
stos
retf
sub
fwait
cmp
addr16
movs
cs
pusha
mov
xchg
xor
cmp
ss
jae
out
mov
aad
(bad)
(bad)
mov
out
cmp
dec
sbb
or
into
pop
dec
or
add
pop
aad
mul
cmp
adc
mov
mov
mov
jp
mov
in
or
sub
adc
dec
scas
dec
fbstp
iret
mov
pop
shr
cmc
out
inc
dec
pop
das
xlat
push
clc
rcpps
sbb
das
and
xchg
out
clc
mov
xchg
aas
dec
movzx
(bad)
lds
aas
mov
retf
out
push
lea
jnp
test
push
mov
jnp
cli
das
rcr
or
or
lea
clc
fiadd
sbb
or
dec
loop
popf
cmp
and
inc
jmp
ds
jecxz
mov
xchg
fiadd
xchg
sbb
jnp
test
int
stos
ret
xchg
mov
push
dec
jp
mov
mov
jge
int
add
cmps
push
sbb
sbb
cmps
scas
jecxz
fldz
leave
fcmovnbe
sti
popa
xor
jp
dec
clc
sub
pop
sbb
movs
jmp
sbb
in
in
push
pop
cmp
sbb
adc
jl
pop
mov
retf
push
rol
arpl
dec
adc
stos
in
and
jle
jns
pusha
into
clc
pop
xor
pop
test
sar
xchg
add
mov
adc
pop
div
jne
and
sub
repnz
dec
sar
leave
inc
sti
jae
push
pushf
imul
inc
test
mov
mov
movs
mov
pop
cmp
aas
pop
jecxz
out
fimul
stc
dec
sar
fwait
popf
pop
cmp
fwait
add
call
push
outs
loopne
pop
pop
hlt
pushf
mov
in
(bad)
lahf
or
sbb
into
or
test
sbb
sub
jl
stos
sub
mov
mov
sub
cld
push
(bad)
cvtpi2ps
inc
push
and
cdq
jb
cld
stc
sub
pop
push
cmps
mov
test
jno
push
mov
cli
jnp
jne
fistp
(bad)
pop
shl
(bad)
push
jle
into
stos
mov
dec
stos
sbb
stos
push
retf
mov
jbe
(bad)
lock
adc
pop
cmps
fistp
(bad)
jnp
(bad)
mov
sti
hlt
ud2
xchg
stos
in
inc
cmp
lods
cli
mov
cmps
clc
inc
jmp
sub
adc
(bad)
jmp
fimul
sbb
mov
call
push
fcmove
xor
mov
cmp
test
push
fld
jg
push
dec
mov
lock
sbb
jecxz
jmp
and
cdq
test
shl
pop
sbb
or
dec
outs
scas
lods
sub
add
sbb
fwait
mov
ja
dec
test
scas
mov
ficomp
jmp
(bad)
leave
push
stc
shr
stos
xchg
mov
mov
cdq
adc
fwait
pop
mov
xchg
enter
jnp
into
in
gs
mov
mov
stos
cs
jp
loope
mov
aas
jne
sbb
jno
dec
dec
mov
das
dec
pop
pop
popf
inc
das
pop
mov
fcomp
cmp
or
gs
cmp
js
add
repz
pop
retf
in
push
cmp
xchg
inc
je
mov
push
push
pop
ret
call
ror
gs
xchg
jne
loopne
imul
sar
and
xchg
xchg
xchg
jnp
push
sub
enter
adc
das
pop
jb
sbb
scas
std
or
mov
loop
jno
and
push
dec
dec
xchg
mov
aaa
shl
jmp
cld
fsubr
sti
add
data16
mov
cli
ror
adc
test
inc
lods
test
adc
jb
mov
push
call
cmp
stc
push
cmp
inc
xor
add
clc
mov
dec
ja
mov
jae
mov
ins
mov
stos
sbb
or
loopne
add
jg
(bad)
inc
fcom
(bad)
aam
push
jg
popa
clc
or
jge
outs
fisubr
test
test
jp
mov
sar
pop
sub
call
xchg
cli
dec
push
dec
dec
fwait
(bad)
jmp
cli
(bad)
or
or
ds
dec
cmp
lock
xchg
sub
cmp
data16
loop
lahf
push
pop
mov
pop
add
xor
jnp
pop
or
pop
out
adc
retf
mov
fs
arpl
add
dec
movs
pop
rcl
lods
js
leave
retf
call
fstp
push
jmp
int
pop
enterw
call
cmp
push
push
jmp
call
fcomi
sbb
jns
imul
(bad)
sbb
mov
sbb
add
dec
sahf
push
and
cli
push
loop
pusha
add
sub
or
xchg
retf
cwde
sti
call
ja
inc
aaa
sti
jge
test
and
jmp
ins
sub
imul
or
test
int3
repz
dec
jl
xchg
in
mov
mov
(bad)
xor
les
in
test
mov
sub
jne
push
stos
push
mov
add
cld
jmp
pop
stos
cdq
imul
lds
pop
gs
xchg
sub
into
dec
jle
cmp
cmp
mul
aas
jg
add
das
ficomp
push
pop
jle
call
mov
push
mov
imul
add
ret
mov
jle
imul
and
ret
or
sbb
cmc
pop
add
cmp
mov
push
imul
outs
jnp
cli
test
mov
stc
(bad)
arpl
jp
sahf
sbb
lahf
mov
mov
adc
addr16
fcomp
std
fwait
xor
int
fild
mov
fwait
jg
push
mov
jns
xor
retf
idiv
add
stc
ret
and
mov
jnp
jb
mov
(bad)
ds
xchg
mov
aas
jmp
dec
and
pop
mov
push
cmp
mov
loop
sti
xor
pop
popf
xchg
and
cmp
jae
jp
mov
sti
mov
or
mov
xchg
mov
sub
iret
stos
imul
out
lahf
adc
das
jno
leave
outs
and
add
(bad)
lock
jmp
lahf
sbb
mov
mov
push
fdivr
adc
sbb
cli
call
mov
cmp
inc
loope
inc
pop
mov
sbb
push
and
nop
sub
mov
cmp
gs
jp
inc
cmp
adc
cwde
sub
adc
pop
dec
add
into
mov
(bad)
pop
cdq
fldenv
push
fucomip
mov
or
(bad)
cmp
cdq
pop
(bad)
sbb
lods
cmps
mul
hlt
mov
movs
retf
movs
call
sti
out
sti
push
or
cmp
and
jb
imul
dec
dec
mov
or
push
loope
jns
and
mov
jmp
(bad)
out
sbb
add
js
mov
sbb
inc
das
int3
push
ficomp
jecxz
sub
cmps
or
add
cli
jmp
cmp
and
scas
ficomp
pop
sbb
mov
aas
pop
dec
pop
pop
and
repz
jns
stc
or
je
xor
xchg
jg
lods
das
xchg
fist
sbb
sub
imul
dec
test
mov
xor
or
fwait
adc
xchg
cmp
pushf
pop
cmp
mov
inc
jmp
int3
push
mov
scas
sbb
adc
fld
jge
adc
push
mov
adc
pop
in
or
sbb
jae
lods
jg
retf
sbb
jmp
data16
dec
mov
rol
mov
jnp
retf
std
push
ret
test
mov
js
imul
and
repz
repz
and
or
or
sbb
add
(bad)
int3
mov
jnp
cmp
in
mov
nop
scas
addr16
ret
mov
push
mov
dec
imul
mov
sub
idiv
jns
mov
pop
jmp
push
sub
sbb
and
mov
mov
jmp
pushf
xor
jb
sbb
test
jbe
mov
gs
push
loopne
lods
adc
ins
enter
push
sub
ret
sub
add
retf
sub
mov
sti
fist
lahf
imul
movs
adc
data16
leave
cmp
jbe
jo
out
jns
push
or
mov
lods
push
push
and
movs
jecxz
pop
jne
fidivr
retf
xor
xlat
fisubr
mov
pop
cmp
jmp
cmp
mov
dec
cmp
fdivr
stos
inc
or
stc
xor
retf
pop
pusha
jae
cmp
(bad)
push
pop
jae
sbb
scas
(bad)
frstor
inc
shr
cmp
lods
in
sti
arpl
mov
fldcw
sbb
ja
pop
ret
jbe
inc
cmp
lods
push
sbb
adc
xchg
sbb
pushf
jmp
(bad)
fs
xchg
pop
xor
imul
sub
adc
iret
xor
fwait
in
cmp
add
sbb
jmp
fwait
pop
or
loopne
sub
mov
or
sub
dec
jmp
cdq
add
cmp
mov
or
fwait
pop
dec
push
jmp
mov
ficom
lahf
inc
hlt
pop
ret
mov
rcr
mov
xor
jle
cmp
push
push
outs
mov
xchg
jne
popf
pop
or
sub
cmp
scas
cli
xchg
push
pop
and
pop
pop
jecxz
mov
push
out
dec
call
test
xor
ds
mov
pop
mov
xchg
into
mov
inc
sub
jge
jecxz
ins
fimul
mov
stos
rcl
rol
jg
or
loope
jns
test
lods
and
pop
mov
sbb
jle
pop
(bad)
xor
lods
nop
jmp
scas
stos
mov
push
dec
test
imul
mov
sub
xchg
out
retf
sub
mov
sbb
pop
jnp
sub
loop
mov
icebp
mov
in
jmp
test
mov
repnz
adc
or
fwait
mov
mov
xor
or
sbb
(bad)
hlt
push
inc
int3
cmps
xlat
scas
lea
mov
outs
push
addr16
xor
or
cmp
cmp
push
imul
scas
mov
or
mov
scas
aas
imul
sbb
sbb
jnp
xor
dec
xchg
or
cld
lds
dec
mov
imul
(bad)
sbb
pop
xchg
push
imul
and
mov
cmp
cs
imul
pop
mov
rep
std
adc
or
retf
cmp
pop
jmp
sbb
jle
sbb
mov
cld
add
test
and
call
adc
test
mov
cmc
mov
jne
int3
js
or
dec
fwait
in
and
pop
or
mov
mov
sti
rol
iret
stos
dec
or
jecxz
mov
scas
inc
mov
sbb
sbb
push
push
lahf
std
adc
imul
bound
cmovl
push
sub
or
call
inc
mov
xor
mov
cmp
jno
xchg
push
and
adc
into
push
in
cmp
or
push
mov
out
dec
jmp
jmp
push
retf
sub
rcr
and
pushf
stos
cmps
push
imul
mov
inc
pop
dec
fnstsw
push
cdq
cdq
pop
lea
aad
cmp
pop
mov
jmp
push
sti
mov
add
pop
xor
aad
fstp
cmp
fsub
or
jg
mov
sti
pop
in
jns
push
adc
and
sub
aas
jl
ins
sub
pop
fistp
movs
mov
sub
ins
cmp
sbb
sub
pop
inc
shl
and
sbb
jmp
mov
dec
cmc
inc
jp
test
retf
fcomp
(bad)
or
and
xor
adc
aad
js
sub
inc
dec
fidivr
repz
leave
(bad)
push
mov
sbb
jmp
imul
movs
pop
jecxz
jmp
retf
sti
sbb
add
mov
out
xchg
jl
mov
mov
stos
xlat
sbb
pop
int
adc
retf
xchg
lahf
pop
mov
mov
cld
sbb
mov
stos
adc
and
fisubr
fst
in
cmps
mov
fwait
sbb
retf
stos
mov
je
cmp
ins
and
cmp
or
jnp
fist
stc
pop
popf
jnp
jg
pop
mov
xchg
imul
stc
frstor
dec
sbb
outs
inc
fwait
dec
mov
push
or
imul
ja
cli
fnstenv
jnp
or
inc
mov
nop
add
mov
test
sub
xor
sub
xor
sub
or
stos
(bad)
mov
mov
shr
and
pushf
or
sar
sub
jae
pop
mov
movs
mov
push
stc
cmp
cmc
xchg
cmc
dec
test
fcmove
cmp
stos
retf
adc
nop
call
push
out
dec
out
and
sbb
ror
dec
or
adc
icebp
je
mov
mov
sub
or
or
sbb
inc
cmps
scas
mov
pop
fiadd
push
call
inc
xor
cmp
xor
mov
pop
jmp
iret
jp
xchg
(bad)
enter
jno
sub
xor
pop
or
shl
fidivr
adc
cdq
fs
pop
les
cmp
inc
cmp
and
iret
cmp
cmp
mov
dec
dec
sub
xchg
cmp
sti
loop
inc
(bad)
out
adc
test
fidivr
std
inc
in
lds
sbb
cli
scas
sub
dec
pop
cmp
imul
(bad)
je
clc
in
mov
(bad)
cld
pop
shl
call
das
mov
lahf
or
mov
jmp
and
mov
dec
cs
jge
push
cmp
sub
call
pop
mov
push
mov
add
jae
jmp
ds
lea
fmul
mov
mov
scas
rcr
mov
push
inc
popa
jge
sbb
sbb
pop
mov
add
imul
and
adc
pop
mov
retf
add
gs
fwait
sbb
mov
mov
cmp
aad
mov
fisttp
xchg
loopne
les
or
shl
in
jp
outs
cld
or
or
in
imul
movs
loope
mov
xor
jl
sbb
stos
ins
ds
out
gs
rcr
les
pop
add
dec
fdivr
sub
cmp
ins
mov
mov
push
push
sub
cmp
cs
jb
or
sub
call
fisttp
loop
dec
pusha
imul
ins
jnp
dec
pop
push
push
pop
in
ficom
inc
xchg
cmp
cmp
inc
dec
retf
in
mov
stos
mov
sbb
sub
mov
mov
leave
int
fwait
aam
adc
mov
cli
mov
dec
fs
popf
jb
sub
mov
js
sbb
pop
js
jno
xor
in
aad
sub
imul
push
not
push
dec
push
imul
or
repz
outs
inc
push
push
pop
add
mov
push
stc
imul
stos
addr16
xchg
(bad)
mov
xchg
cmp
sbb
dec
or
cmp
pushf
stos
xchg
imul
mov
fistp
dec
mov
arpl
hlt
and
icebp
add
mov
icebp
mov
mov
and
pop
(bad)
jge
fwait
jb
mov
mov
sbb
jns
ja
adc
mov
jb
mov
imul
retf
ret
push
mov
std
and
pop
scas
mov
sbb
movs
ds
mov
mov
or
dec
imul
sahf
retf
pop
fwait
jmp
jmp
cmp
lods
outs
add
in
hlt
sar
sbb
int
bound
cmp
les
retf
es
push
mov
add
retf
pusha
ret
aaa
test
popf
out
or
or
loopne
xchg
imul
inc
mov
or
fwait
jecxz
jecxz
inc
mov
adc
sti
jle
dec
mov
fadd
fwait
neg
jmp
adc
sbb
jmp
pop
sub
lahf
(bad)
mov
xchg
movs
jmp
dec
call
sub
jmp
fwait
test
sbb
jne
sub
stos
cmp
dec
aam
jnp
mov
push
push
aas
mov
or
or
jp
xor
sbb
mov
test
jmp
stos
dec
jmp
and
mov
out
mov
stc
sbb
push
add
cmp
mov
adc
dec
fwait
(bad)
cmp
mov
rcl
mov
dec
les
mov
sbb
xchg
dec
fld
or
call
ror
outs
(bad)
ds
dec
cmp
mov
pop
mov
jmp
jp
mov
dec
jge
mov
cmp
xchg
cmc
inc
retf
cdq
aam
cmc
imul
rol
or
int3
and
call
sbb
cmp
(bad)
sbb
fsubr
adc
and
mov
or
fwait
imul
das
out
ss
cmp
add
push
cmp
inc
jmp
in
mov
bound
pop
jns
retf
sar
mov
push
cld
fisubr
push
pop
retf
xchg
stos
(bad)
jne
sbb
in
xchg
ret
or
movs
pop
shl
mov
jbe
add
adc
jmp
sub
jg
or
and
cmovg
xchg
xor
cmps
popa
jecxz
imul
popa
(bad)
ret
in
cmc
aam
mov
cmp
push
arpl
xchg
test
rcr
ins
mov
xor
aas
repnz
shl
pop
xor
pop
test
sbb
mov
push
mov
ffree
xchg
mov
js
ja
and
fxch
mov
adc
gs
sbb
mov
xor
jl
shl
sbb
mov
popf
sti
repz
out
bound
popa
movs
hlt
cld
and
inc
lods
cmp
push
mov
in
jmp
bound
inc
fisttp
fwait
mov
mov
call
imul
shl
add
(bad)
(bad)
std
sub
fcom
sti
rcr
movs
test
stos
sub
pop
mov
dec
xchg
fld
sbb
sub
call
push
xor
jmp
in
repz
aaa
fld
cwde
and
jmp
xchg
push
jp
adc
or
mov
cli
std
jecxz
pop
test
jnp
xchg
nop
xchg
jl
sbb
mov
repnz
lods
sbb
xor
fidiv
sub
retf
mov
inc
add
outs
imul
jns
push
mov
push
xor
xchg
mov
retf
adc
dec
(bad)
mov
sub
(bad)
std
jno
cmp
lds
aad
cli
data16
pop
aas
fisub
ret
fisub
jmp
sbb
jge
retf
fisub
sub
cmp
fwait
pop
mov
sbb
and
and
or
dec
int
int3
mov
das
mov
mov
das
mov
aas
repz
psrld
scas
movs
sbb
pop
xchg
lea
fistp
mov
loope
(bad)
sti
or
xor
jp
sbb
lahf
dec
adc
or
jg
jp
test
adc
gs
test
lds
daa
neg
mov
lods
sbb
push
push
aaa
bound
sbb
or
inc
aas
leave
cmp
inc
mov
in
mov
pop
jle
imul
adc
add
mov
enter
test
mov
jmp
jmp
in
mov
leave
mov
dec
in
out
cmp
out
test
and
cmps
dec
(bad)
jp
pop
mov
fdivr
and
outs
in
sbb
jmp
out
push
test
xchg
out
mov
cli
stos
mov
mov
pop
test
retf
lods
mov
jnp
inc
stc
push
leave
adc
pop
push
xor
xor
dec
push
inc
sar
dec
loopne
int
jmp
mov
cmps
outs
pop
mov
jnp
(bad)
jne
jne
call
pop
pop
vmread
je
add
xchg
and
rcr
jae
xchg
push
sub
lods
test
jnp
jmp
mov
out
jle
xor
imul
jmp
int3
xor
mov
jmp
push
push
pop
xor
or
pop
cmp
ja
jp
pop
sub
pop
xor
dec
push
adc
fadd
iret
sbb
sub
pusha
pushf
cmp
sti
jno
jp
int3
(bad)
add
mov
stos
lods
adc
jecxz
loope
test
clc
mov
inc
fld
xor
(bad)
popa
fs
jecxz
aam
add
mov
sbb
pop
test
sahf
sub
sub
add
xchg
shl
aam
mov
fstp
outs
scas
(bad)
xlat
pop
cmp
mov
cmp
sub
retf
adc
add
sub
mov
test
mov
mov
imul
or
sti
push
int
scas
push
jae
pusha
mov
jae
mov
imul
pop
aad
and
dec
sub
ret
or
scas
pop
xor
jno
fwait
mov
enter
fld
clc
cmc
adc
dec
out
ficomp
aad
push
cmp
dec
cld
push
jp
fwait
imul
jg
cmp
adc
sbb
add
push
sbb
or
sbb
jmp
mov
mov
adc
pop
cmp
push
mov
sbb
lds
ret
movsx
lds
repz
sbb
movs
test
or
daa
sub
(bad)
mov
fs
jecxz
mov
movs
inc
sub
cmp
jp
xchg
test
mov
add
mov
and
add
mov
push
iret
lods
bound
mov
test
sbb
xlat
xchg
jns
push
cmp
add
push
push
ins
sub
bound
jmp
or
test
ficomp
adc
les
dec
jo
jbe
or
fmul
xchg
add
cmp
clc
daa
enter
or
ja
add
sti
idiv
xlat
jl
jnp
(bad)
xor
fild
ds
mov
xchg
jb
(bad)
rcr
cmps
or
mov
inc
mov
cmp
jle
or
sub
jmp
call
xchg
sbb
cwde
loop
and
sbb
gs
sub
xchg
jnp
out
cmp
sti
popa
xor
sbb
jp
cdq
imul
mov
cmp
retf
fistp
or
mov
push
leave
or
rcr
mov
push
push
cmps
dec
xor
push
test
jg
sbb
pusha
jecxz
hlt
cmp
bswap
add
(bad)
rcr
movs
dec
or
xor
(bad)
jnp
adc
push
stos
mov
popa
in
push
sbb
fwait
sti
jns
fsubr
pusha
jmp
aad
sbb
stos
mov
add
ds
sbb
cwde
sti
sbb
xchg
dec
fld
dec
pop
pop
sbb
add
xor
imul
pop
sbb
jge
fs
iret
shl
jns
mov
push
leave
stc
pop
imul
jae
pop
stos
ins
mov
divps
push
pop
daa
fdiv
(bad)
jmp
gs
xchg
jl
cmp
pop
stos
ins
pop
or
or
cmp
push
rcr
push
retf
add
mov
cmc
jmp
adc
jmp
cli
rcl
sub
adc
pop
jne
cmp
jmp
leave
add
fsubr
(bad)
imul
pop
jmp
jnp
out
or
retf
mov
mov
xchg
sub
imul
imul
popf
push
fst
sbb
mov
test
outs
retf
(bad)
and
mov
adc
out
sbb
test
ret
enter
movs
xor
mov
jns
jbe
pop
cmps
pop
dec
fcmovnbe
push
pop
adc
mov
cmp
pop
or
xor
fadd
mov
retf
add
call
mov
ret
mov
fidivr
or
fistp
sub
or
pushf
lock
leave
or
and
add
pop
jmp
inc
dec
jns
dec
and
jecxz
adc
sbb
test
inc
sti
push
xor
icebp
fucomi
call
jmp
lea
adc
pop
and
call
and
pop
mov
lods
imul
int
ss
jg
jmp
mov
sub
es
cmps
jb
test
mov
mov
mov
retf
out
dec
sub
cmp
jmp
ins
loopne
mov
inc
push
add
mov
int3
jg
xchg
xor
gs
push
pop
xchg
xchg
mov
add
iret
add
dec
enter
int3
adc
xor
jne
repnz
or
cmp
mov
icebp
out
inc
sub
jmp
and
jmp
mov
jns
dec
ret
cmp
xchg
clc
(bad)
mov
in
mov
out
mov
xor
dec
movs
cmp
pop
outs
(bad)
lods
adc
test
or
pop
sub
shl
arpl
out
jmp
pop
dec
and
jge
dec
ret
imul
stos
push
jnp
(bad)
xor
ins
sub
jg
adc
call
(bad)
xor
jno
mov
cmp
test
mov
dec
and
xor
lds
add
cmps
imul
rcr
shr
pop
add
xchg
in
jnp
add
xor
imul
popa
mov
sbb
inc
dec
mov
out
outs
mov
hlt
jnp
xchg
adc
clc
pushf
retf
fidiv
jmp
(bad)
(bad)
fstp
add
ds
ret
pop
sub
jae
jae
cwde
repnz
popf
add
xchg
fisubr
jmp
mov
jl
jmp
out
addr16
mov
es
jge
xchg
inc
jecxz
jge
jbe
adc
shl
icebp
dec
jge
mov
mov
dec
mov
jmp
dec
jmp
lds
inc
cmp
ret
out
inc
sub
call
rol
cmp
pop
cdq
rol
xchg
push
push
pusha
mov
stos
dec
jle
pop
jmp
pop
les
jmp
call
sub
mov
sahf
int3
gs
mov
imul
les
jle
cmp
adc
jecxz
gs
fldenv
lds
mov
sbb
mov
scas
push
ins
cli
add
out
jnp
fstp
lahf
into
cmp
call
sbb
push
in
push
retf
rol
mov
add
push
mov
mov
mov
outs
dec
ins
movs
jnp
push
clc
cmps
das
or
xor
(bad)
cmp
pop
stos
stos
fmul
iret
movs
aaa
jge
(bad)
mov
cs
lock
ret
sti
push
sub
adc
adc
adc
shr
in
dec
sti
sbb
cmp
stos
enter
sub
cli
pop
pop
movs
sbb
jno
jae
adc
ror
sub
sub
push
push
sbb
mov
scas
or
addr16
sbb
sahf
push
movs
mov
add
or
or
xchg
jmp
ja
push
shl
test
inc
xchg
lds
jmp
mov
pusha
mov
(bad)
sbb
pop
and
retf
(bad)
mov
xor
xor
inc
sbb
adc
rcr
lock
jg
sbb
mov
ins
xchg
stos
ja
repz
jbe
retf
xlat
dec
retf
xchg
and
mov
mov
pop
sbb
mov
test
adc
cdq
fadd
out
or
movs
cmp
fwait
or
pop
jb
mov
jns
mov
adc
push
jecxz
jmp
repz
popa
adc
mov
ins
push
sbb
ret
retf
sbb
adc
or
pop
pop
jbe
cmps
vmread
call
test
cs
jmp
popf
int3
lods
fisttp
nop
retf
push
pop
push
dec
jnp
fisttp
cmp
fmul
dec
dec
sub
cmp
stos
mov
mov
cdq
mov
cmp
test
ins
cmp
cvtps2pd
jle
lods
push
pop
mov
inc
dec
or
xchg
add
ror
cli
mov
(bad)
pushf
mov
retf
test
ror
js
out
adc
test
cmp
mov
xchg
clc
pop
xchg
jmp
add
adc
das
sbb
jle
fldenv
retf
and
jo
sub
retf
xchg
mov
enter
or
call
jmp
mov
fnstsw
cmp
inc
mov
mov
cmp
inc
cmp
test
cmp
mov
(bad)
clc
in
jmp
mov
sbb
fcmovnbe
sti
imul
mov
mov
pop
fisttp
cmp
retf
cmps
pop
imul
push
dec
scas
lock
xchg
dec
cmp
adc
add
and
mov
and
(bad)
mov
push
fimul
mov
pop
fdiv
jbe
mov
retf
mov
mov
stos
xchg
jmp
xor
add
mov
(bad)
call
cmps
mov
ins
or
(bad)
mov
sbb
test
cmp
retf
sub
push
mov
mov
int3
jnp
aas
push
mov
into
sub
shl
aad
jnp
repnz
or
(bad)
push
xor
xor
cs
jl
inc
sub
pop
dec
fwait
cmp
fwait
addr16
jnp
loopne
jp
dec
in
pop
sbb
lods
sub
ja
pop
jae
lods
add
jmp
xrelease
jnp
or
ins
or
mov
test
repnz
stos
imul
fwait
fs
pop
call
xchg
xchg
rcr
call
jns
cld
mov
lods
sub
inc
cwde
outs
mov
arpl
aaa
mov
stc
das
shl
popf
push
jns
lock
ins
dec
pop
setg
ja
and
mov
daa
cmp
es
mov
jnp
sbb
xor
test
cmp
icebp
(bad)
mov
xor
outs
lock
cmp
lahf
mov
bnd
stos
(bad)
adc
(bad)
js
ret
sub
or
bound
pop
test
xchg
jle
aas
and
mov
iret
push
mov
fistp
int
mov
(bad)
sahf
mov
jnp
fwait
jbe
test
retf
or
pop
fcomp
add
mov
fdivrp
int
mov
pop
inc
(bad)
sti
dec
mov
(bad)
adc
mov
mov
rol
int3
arpl
pop
sub
push
outs
sub
mov
dec
mov
or
push
aad
jge
sbb
aad
fucomi
shr
cmp
lods
mov
xor
sbb
sti
retf
(bad)
pop
mov
(bad)
test
pop
sbb
aas
xchg
jl
dec
pop
in
add
pop
repz
jle
call
inc
test
cli
adc
(bad)
mov
(bad)
shl
mov
sti
fisttp
pusha
int
inc
mov
jg
mov
shr
xchg
fild
inc
push
pop
stos
xchg
add
cli
call
and
retf
fimul
sti
sti
inc
mov
les
adc
shl
dec
mov
cmp
mov
jmp
dec
mov
cmp
dec
call
cmp
clc
or
add
cli
imul
sbb
sbb
mov
lods
xchg
xor
mov
data16
or
inc
ret
or
mov
in
sbb
or
pop
cmp
push
stos
pop
retf
xchg
(bad)
xor
test
jo
test
retf
jo
test
mov
or
jae
and
or
jp
sub
ud0
cld
movs
mov
dec
add
arpl
shl
inc
cs
or
sbb
test
das
pushf
dec
add
dec
jp
add
clc
fwait
lea
or
cmp
or
mov
fcmovne
sub
cdq
fnstenv
aad
ds
pop
mov
jmp
out
jnp
outs
inc
dec
mov
push
sbb
xor
sub
mov
lahf
jae
add
lds
or
imul
mov
mov
sbb
xchg
lock
dec
or
fisub
or
je
pushf
outs
sub
jo
movntps
sbb
js
sub
pop
out
jl
and
gs
std
xchg
jno
jle
cmp
dec
fnstsw
push
retf
fcom
push
test
push
pop
test
cli
sbb
jae
sub
jne
mov
fimul
push
pop
xchg
mov
dec
jmp
jp
mov
sbb
mov
ficomp
cld
dec
popf
cmp
dec
iret
dec
enter
sub
in
push
mov
pop
push
mov
lods
mov
(bad)
dec
cmp
pop
fwait
aam
stc
arpl
mov
sbb
add
mov
cmc
shl
sbb
cld
jnp
inc
cmc
push
dec
cmp
femms
out
ss
mov
xor
fdivr
xchg
das
(bad)
mov
lds
sub
fwait
push
scas
mov
or
pop
imul
lahf
ds
cmp
add
clc
call
jns
jmp
icebp
jmp
sbb
xchg
retf
jge
mov
std
add
mov
jns
mov
sbb
sub
mov
mov
stos
ret
mov
repz
pop
call
fsubr
add
mov
jnp
lds
popa
outs
xchg
pop
mov
xchg
pop
mov
ins
stos
repnz
dec
loop
lods
and
hlt
and
mov
push
imul
idiv
dec
int3
push
lahf
sub
call
dec
cmp
(bad)
sub
mov
lods
fdivr
pop
sbb
pop
rep
jmp
sbb
xchg
mov
mov
xchg
pop
(bad)
sub
imul
cwde
or
jmp
imul
loopne
pop
dec
cmp
mov
mov
sub
or
retf
pop
jae
call
mov
jae
mov
in
pop
push
inc
or
jecxz
popf
jg
fs
arpl
pop
retf
popf
retf
aad
add
push
cmp
inc
test
hlt
push
retf
jmp
pop
mov
lods
jge
stos
sub
or
dec
fdiv
dec
in
sbb
cmps
push
jae
scas
sbb
mov
adc
dec
sti
jae
jb
fs
sbb
dec
push
dec
jae
mov
dec
neg
xor
adc
and
cmps
imul
shl
pop
es
(bad)
call
add
jmp
retf
loope
retf
sub
cmp
(bad)
int
xchg
jmp
adc
xchg
adc
sub
xchg
sbb
leave
cmp
les
sti
int
fbld
sub
sbb
clc
pop
adc
and
lahf
aas
(bad)
jp
cmps
ret
lds
inc
fwait
aas
fisttp
sbb
jge
imul
stos
imul
jmp
fdiv
jbe
sub
pop
pop
call
daa
push
push
outs
cmps
into
in
js
test
pusha
retf
mov
sbb
dec
sbb
dec
into
iretw
adc
adc
mov
stos
jge
dec
ret
div
adc
stc
adc
je
retf
mov
push
mov
lea
pop
fisttp
mov
and
movs
ins
or
jne
jmp
jbe
inc
sub
or
ins
lods
or
inc
xchg
mov
fist
jnp
popf
pop
or
shr
and
sbb
ret
or
aam
in
ds
mov
pop
into
cmp
inc
sub
mov
mov
push
adc
adc
mov
sub
adc
or
cmp
jmp
inc
stos
sub
scas
fmul
js
xor
loop
mov
mov
jb
vpor
aas
fistp
ficom
sub
sub
js
xlat
xor
bound
dec
mov
or
dec
cli
pop
mov
adc
es
push
pop
push
in
jnp
test
ss
pop
out
arpl
repnz
jmp
sahf
jecxz
pop
mul
xchg
dec
stc
mov
mov
push
js
sahf
jg
jmp
pop
jge
scas
xchg
sub
or
sbb
mov
inc
and
(bad)
fstp
mov
pop
ret
mov
icebp
sbb
push
jmp
cli
bound
or
pop
fidivr
fwait
rcl
fsubr
gs
or
dec
mov
ficomp
cmp
cwde
sbb
into
pop
fdiv
xor
pop
leave
cmp
pop
retf
adc
(bad)
ds
dec
pusha
lods
xchg
push
in
dec
jmp
xchg
jle
jecxz
sub
lea
stos
push
fistp
dec
pop
mov
jmp
pop
out
cs
lahf
cld
retf
push
cdq
jo
push
jmp
in
iret
and
enter
pushw
and
in
(bad)
stc
jg
push
mov
popf
xchg
aas
xor
pop
cmc
out
add
sbb
test
outs
bound
(bad)
in
push
arpl
jmp
(bad)
iret
scas
pop
call
jno
cmp
mov
adc
aaa
jmp
imul
jnp
xchg
xchg
mov
cwde
mov
repnz
adc
mov
call
mov
imul
dec
stos
xchg
fnstcw
push
lea
enter
stos
retf
pop
push
fimul
xchg
(bad)
fwait
setp
jge
jecxz
fcomp
cmp
fld
lea
adc
sub
in
adc
fistp
mov
sub
sub
xchg
dec
jmp
les
adc
(bad)
ins
mov
sbb
das
movs
inc
fwait
movs
fwait
sbb
test
push
jo
sbb
mov
mov
fwait
popf
cmp
mov
mov
fdiv
sahf
dec
das
or
retf
jnp
cmp
cmp
dec
sbb
cmp
lea
pop
loop
retf
call
cdq
pop
stos
test
in
test
mov
jmp
je
push
xchg
mov
mov
bound
sbb
jp
mov
push
ins
aam
sbb
mov
xchg
jge
mov
xlat
dec
imul
in
xor
mov
mov
fadd
jmp
repz
jne
cmp
mov
jne
mov
mov
sbb
test
nop
jmp
sahf
push
outs
call
xchg
push
jb
mov
and
loopne
outs
sbb
mov
dec
cmp
(bad)
iret
test
xchg
sbb
cmp
mov
dec
sti
inc
add
xor
jns
or
fld
shl
jne
push
dec
xor
push
xor
xchg
(bad)
into
mov
movs
cmp
inc
mov
xor
into
pop
push
scas
mov
pop
jmp
push
xchg
inc
jo
cmps
jnp
shr
jbe
sub
lahf
and
xchg
mov
hlt
fsubr
mov
or
dec
xchg
inc
call
in
test
ret
rcr
mov
arpl
sti
push
dec
mov
mov
in
adc
xor
xor
imul
pop
dec
f2xm1
cmps
sbb
xchg
pop
push
repz
pop
mov
(bad)
push
sub
mov
sub
push
test
xor
mul
push
pop
pop
adc
adc
test
cmp
es
jbe
sar
fld
retf
push
enter
jns
and
je
in
stc
cld
cmp
fwait
cmc
push
in
call
call
sub
jne
js
mov
cmp
mov
mov
dec
sub
imul
std
jmp
pop
jecxz
sti
imul
cwde
scas
retf
test
out
fadd
pop
leave
xchg
fist
int
sub
sbb
(bad)
fnstenv
daa
(bad)
shr
iret
xchg
test
ret
aas
mov
cdq
mov
cli
imul
test
loope
pop
cld
into
or
clc
sub
out
add
sub
aas
fadd
push
and
daa
dec
cmps
cmp
add
stos
fcom
(bad)
push
dec
cmp
sbb
xlat
dec
mov
jmp
lea
call
jl
cmp
xchg
cmp
dec
fsub
push
jecxz
loopne
inc
pop
inc
sub
push
jl
cmp
repz
ds
cmp
mov
dec
jg
shl
jecxz
in
mov
jmp
in
pop
addr16
aam
pushf
scas
jmp
xchg
frstor
dec
jo
fmul
sbb
ja
in
mov
dec
dec
mov
mov
push
dec
popf
dec
add
sti
and
ficom
out
pop
iret
and
sub
ja
jp
xchg
stc
push
mov
jne
dec
dec
adc
mov
xor
loopne
sub
sub
inc
stos
stos
jne
sbb
sti
retf
pop
inc
hlt
lods
ror
or
(bad)
mov
imul
fist
imul
test
hlt
call
pop
sbb
mov
mov
mov
jnp
xor
rcl
cwde
sbb
push
out
or
sbb
fcom
retf
stc
jb
stc
fsub
mov
xchg
nop
jl
sub
arpl
push
jbe
sbb
pop
xchg
enter
pushf
pop
jno
fsub
call
clc
inc
xlat
js
mov
jmp
mov
add
inc
cmp
stos
sbb
sub
inc
mov
ror
mov
fidivr
rcl
jne
mov
add
fwait
push
aad
int
addr16
jg
pop
and
adc
ins
sub
pop
dec
inc
add
xchg
add
bsr
mov
out
pop
xor
mov
fld
or
shl
test
fld
push
jnp
mov
call
scas
adc
fdivr
mov
xchg
leave
xchg
test
dec
pop
in
dec
test
mov
mov
dec
dec
fsub
pop
cmps
and
xor
rcl
cmp
mov
mov
jmp
and
jbe
in
xchg
mov
sbb
test
jp
mov
pop
dec
pop
out
push
scas
aad
iret
jg
add
cmp
(bad)
and
or
and
cmp
repnz
sbb
sub
(bad)
mov
fwait
aad
cmp
pop
xchg
repz
jae
xchg
and
mov
mov
in
push
or
mov
gs
mov
cmp
test
pop
mov
arpl
dec
stos
stos
pmullw
mov
jnp
in
cmp
mov
mov
test
call
and
push
xchg
jno
sub
mov
pop
es
neg
dec
xchg
test
sahf
push
aaa
sub
mov
dec
or
dec
pop
xchg
push
or
mov
aaa
movs
cmp
imul
jmp
sub
movs
das
sahf
stos
xor
sub
scas
ss
movs
mov
ret
movs
cdq
(bad)
shl
dec
jmp
out
sti
aad
mov
cmp
pop
fldenv
xor
aaa
dec
dec
shr
mov
call
cmp
jecxz
dec
fs
imul
push
ja
mov
jne
inc
jp
pop
pop
in
rcr
push
adc
sub
pop
ret
(bad)
dec
ficomp
lock
int3
xor
(bad)
jnp
scas
inc
mov
inc
jmp
push
cwde
dec
add
adc
pop
sub
or
or
cmp
fnstcw
xchg
jmp
sti
add
std
pop
mov
dec
hlt
adc
or
sbb
ins
dec
nop
icebp
push
stos
leave
(bad)
mov
repz
mov
or
xor
(bad)
pop
push
dec
stos
das
mov
or
xchg
add
dec
sbb
retf
les
xor
xor
or
retf
popa
push
addr16
jle
mov
push
retf
retf
(bad)
rcr
test
cmp
leave
inc
cmp
or
sub
stc
jmp
mov
test
push
push
sti
out
jnp
sbb
dec
jp
outs
dec
cmp
pop
sti
enter
mov
mov
push
jg
call
adc
ret
push
sar
pop
or
arpl
and
fstp
mov
cmp
cmps
pop
mov
sub
pop
jmp
(bad)
cmp
mov
or
cli
add
cli
mov
ja
mov
ror
sbb
into
iret
loop
xor
mov
stos
lods
lods
out
leave
mov
add
jbe
test
fwait
add
and
ret
adc
cs
add
es
cmps
inc
fisttp
push
jmp
or
test
jbe
shl
and
sar
retf
retf
pop
test
mov
mov
jmp
les
ss
xchg
dec
imul
clc
xor
mov
sub
cli
cmp
sub
xchg
push
jecxz
dec
jne
xchg
int
pop
sub
mov
sub
xchg
push
adc
dec
jmp
mov
call
addr16
jp
icebp
imul
daa
pop
(bad)
out
mov
jge
mov
mov
jp
or
(bad)
sbb
mov
add
and
and
adc
push
jecxz
add
mov
sbb
mov
and
fwait
cmp
sub
mov
add
stos
aam
mov
ds
xchg
mov
stos
push
add
xchg
sub
cmp
arpl
jmp
cmp
dec
mov
sub
cmc
mov
frstor
add
mov
sub
add
xchg
stos
test
arpl
repz
retf
inc
call
xchg
xor
xchg
stc
xor
or
jnp
cmp
loope
int
mov
test
(bad)
(bad)
pop
jmp
in
push
les
pushf
js
lds
cmp
ins
ins
cmp
adc
(bad)
sbb
outs
or
pop
stos
pop
or
int3
adc
push
jmp
mov
inc
scas
pushf
cmp
and
movs
retf
fwait
pop
xchg
loopne
inc
hlt
mov
pop
shr
in
(bad)
cmp
test
pop
dec
fadd
stos
jae
(bad)
ror
test
cmc
popf
pushf
popf
and
mov
lds
sbb
xchg
xchg
mov
mov
mov
push
mov
test
ret
inc
inc
dec
retf
adc
mov
pop
call
ins
mov
outs
iret
cmps
push
idiv
add
jp
into
sub
sub
cmps
sub
sahf
cld
jmp
push
(bad)
dec
sub
cdq
or
fwait
add
jns
and
sub
pop
stos
lods
cld
fwait
sub
cmp
aaa
hlt
xchg
inc
push
pop
inc
xchg
not
retf
fwait
mov
add
push
xlat
sub
test
dec
sti
stos
je
push
imul
(bad)
jmp
xor
xchg
mov
pop
shl
inc
mov
mov
pop
stc
sahf
or
sti
sbb
arpl
std
push
mov
mov
test
std
mov
enter
std
je
stc
adc
daa
(bad)
fst
addr16
adc
in
iret
push
cmp
repz
imul
int3
imul
cli
add
movs
or
sub
retf
jnp
fwait
(bad)
dec
sub
test
cld
jnp
add
cmovns
xor
scas
jmp
ret
push
inc
cwde
fwait
jae
pop
pop
popf
xchg
mov
sub
mov
daa
inc
jns
sbb
add
dec
jl
inc
cmp
dec
or
sar
pop
movs
sbb
clc
xor
icebp
cmp
pushf
cld
fld
in
repz
lea
pop
pop
adc
jbe
mov
sbb
dec
jbe
adc
dec
dec
lea
arpl
test
dec
or
cwde
push
lahf
push
ror
and
fwait
dec
or
push
in
sahf
and
stos
leave
mov
dec
js
mov
sbb
xchg
imul
or
jae
pushf
push
les
sbb
mov
add
jno
dec
pop
jp
jnp
sub
dec
sahf
adc
gs
sbb
sbb
test
xchg
call
ror
jnp
xlat
xchg
mov
push
mov
sbb
stos
and
mov
sbb
jae
or
scas
push
mov
mov
jmp
adc
out
mov
xor
jo
dec
mov
add
and
pop
push
iret
and
sti
jmp
push
cmp
jae
jmp
push
js
pop
cmp
adc
test
retf
aaa
fs
ins
mov
sub
mov
(bad)
ins
cmp
pushf
or
(bad)
(bad)
pop
and
or
retf
xchg
es
jne
cmp
int
adc
stc
jp
adc
jmp
xchg
retf
sahf
sbb
rol
pop
pop
push
mov
test
mov
popf
jo
rcl
movs
scas
cmp
fdivr
repz
jg
loopne
cld
sti
js
jmp
or
je
adc
mov
sbb
and
mov
mov
test
fstp
outs
fistp
(bad)
sub
add
or
retf
cmp
mov
ss
push
jge
mov
jne
fmul
sub
sub
std
fimul
aas
scas
inc
fidiv
scas
scas
or
or
pop
and
sub
jmp
clc
inc
inc
ficomp
(bad)
fidiv
pop
bound
js
ret
popf
int
retf
(bad)
fidivr
jno
add
push
sbb
es
pop
js
sbb
leave
pop
adc
cmp
xor
iret
pushf
jl
sti
dec
jg
sub
test
pop
cli
in
cmc
movs
int3
fdivrp
test
jnp
pop
ins
or
inc
push
mov
(bad)
ret
mov
or
sub
sahf
xor
fnstcw
stos
mov
xchg
fwait
bnd
cdq
sbb
xchg
or
inc
movs
test
or
scas
mov
pop
or
mov
popa
dec
shr
jmp
cli
sbb
sbb
stos
lods
repz
push
addr16
test
jb
xchg
pop
(bad)
cmp
sti
xor
sbb
or
mov
nop
xchg
or
or
sahf
mov
sbb
xor
pop
xchg
or
cmp
cmc
jmp
dec
or
fwait
pop
mov
jmp
dec
cmp
and
enter
out
lds
popf
mov
cdq
jne
outs
xlat
imul
or
dec
add
repnz
ffreep
fcmovnb
inc
add
lock
imul
and
or
xor
sub
out
push
mov
outs
mov
out
aam
mov
cmc
sbb
mov
out
lock
push
xchg
retf
in
push
cmps
call
sub
sub
adc
push
adc
imul
mov
stc
mov
cmps
les
cmp
cmp
or
repnz
or
je
ins
imul
leave
ja
mov
or
push
out
mov
pop
push
aas
lea
or
movs
and
imul
aam
sbb
mov
daa
fwait
mov
out
mov
push
pop
out
push
sahf
js
(bad)
adc
icebp
imul
lods
pop
scas
xor
xchg
pop
(bad)
mov
mov
push
ret
mov
sub
out
jmp
call
fwait
retf
mov
gs
pop
mov
jl
fimul
cmp
call
in
loop
push
test
add
sub
sub
sbb
stos
and
mov
and
sbb
(bad)
xor
ret
daa
pop
ja
mov
hlt
jae
push
call
sbb
js
ret
jae
pop
xchg
xlat
jmp
out
test
aaa
fs
mov
sbb
dec
iret
in
jnp
cmp
sub
sbb
iret
and
dec
fwait
jae
imul
test
jmp
sbb
ret
pushf
pop
call
sti
in
add
push
stos
or
xchg
xor
pusha
add
stos
test
(bad)
dec
leave
fdivp
push
push
add
aam
fsin
mov
mov
mov
fs
pop
mov
or
imul
cmp
pop
imul
leave
push
sbb
jge
cmp
sub
hlt
xchg
mov
push
call
push
mov
test
mov
or
aaa
pushf
cmp
ret
out
pop
imul
mov
mov
xor
or
fist
and
clc
push
mov
ror
and
loop
xchg
adc
cdq
add
repnz
jae
mov
sub
jmp
jmp
mov
pop
jmp
jmp
dec
fwait
repz
lods
nop
push
pop
dec
dec
daa
dec
mov
repz
adc
outs
cmp
dec
pop
or
movs
leave
or
aad
into
pop
lahf
mov
retf
mov
scas
std
jp
sub
fbstp
fisubr
jae
fstp
into
or
pop
test
sub
shr
or
lahf
pop
ja
ret
fstp
cmps
outs
mov
and
mov
iret
jmp
add
sbb
mov
pop
mov
sub
jnp
jp
pop
xchg
jp
sub
mov
mov
rcr
ror
add
das
call
mov
xchg
arpl
jmp
sar
mov
jmp
mov
mov
pop
cdq
lahf
jb
cmp
fist
mov
fcmovu
mov
out
sub
cwde
stos
sbb
dec
in
ins
push
outs
mov
cmp
mov
loope
popf
push
sar
retf
sbb
fcmovbe
xor
sbb
leave
lea
xchg
mov
xchg
cmp
arpl
dec
mov
mov
mov
or
or
in
pusha
(bad)
movs
ret
imul
ins
inc
cwde
mov
test
ins
ret
and
stos
in
cmp
popf
ret
adc
in
cwde
mov
push
jmp
jae
mov
inc
sbb
pop
xor
mov
leave
cmp
gs
mov
cmp
repz
and
mov
gs
stos
imul
xchg
sti
add
dec
sbb
fcmovnb
cmp
dec
call
cli
dec
fwait
arpl
inc
mov
aaa
jo
pop
jnp
dec
mov
jnp
dec
sti
test
push
mov
inc
mov
lahf
mov
stos
iret
sti
call
lods
sti
xor
xchg
ror
idiv
test
push
movs
sub
sub
aaa
push
js
sub
xlat
fcomi
mov
or
leave
stos
jae
dec
leave
adc
xlat
add
cdq
add
push
adc
stc
jbe
xor
push
add
pop
repnz
sti
in
dec
aam
stc
dec
fisttp
cmp
fnstsw
mov
mov
and
popf
das
call
call
popa
and
dec
(bad)
aaa
pop
stos
nop
sti
test
pop
sub
out
or
jo
sbb
lahf
dec
xlat
sbb
pop
hlt
lods
fs
adc
nop
sti
and
jb
ret
fmul
or
imul
mov
inc
jmp
sbb
or
adc
call
and
push
pop
mov
xchg
fadd
cs
test
jg
push
call
retf
xlat
mov
(bad)
sub
cld
outs
retf
mov
lock
cmp
shl
popf
xchg
inc
adc
leave
retf
out
fwait
cmp
ja
pop
adc
pop
cmp
jne
mov
test
lods
sbb
imul
sub
sub
jnp
cmp
aas
je
bound
jmp
and
retf
pop
call
push
pop
repnz
mov
daa
iret
xchg
loopne
sub
stos
cwde
and
xor
hlt
(bad)
mov
mov
mov
dec
in
or
fist
cmc
loopne
repz
pop
add
jae
sti
pop
mov
fsubr
sbb
add
fsub
mov
mov
xor
imul
fld
adc
lods
test
outs
cdq
push
inc
jno
aas
jnp
das
or
xchg
push
sti
mov
jbe
lods
fwait
outs
into
jmp
cmp
xor
cdq
test
sub
jns
add
or
mov
mov
dec
scas
xor
stc
cmp
add
(bad)
push
mov
sar
cmp
mov
(bad)
(bad)
ds
sbb
out
xor
fisubr
stos
(bad)
mov
and
pop
push
xlat
out
push
test
test
xchg
push
or
outs
stos
fld
in
movsx
test
add
idiv
jp
mov
mov
push
(bad)
cmp
jae
dec
push
or
rcl
push
jecxz
imul
test
adc
ins
out
outs
sti
sbb
jnp
or
dec
retf
push
popf
mov
ud0
cmc
lods
cmp
inc
loopne
fnsave
jmp
ficomp
inc
sti
(bad)
xor
push
imul
fwait
mov
cli
mov
fld
(bad)
lods
(bad)
cwde
cmp
dec
je
scas
xor
sbb
or
xor
out
mov
dec
mov
mov
jnp
and
mov
js
cmp
retf
das
outs
jmp
mov
je
test
push
sbb
push
pop
add
lahf
repz
xchg
aas
pop
test
bswap
popf
ds
lahf
arpl
(bad)
ret
fcmovne
shr
pop
or
outs
jmp
pushf
dec
call
sub
lahf
mov
cmp
sbb
and
fwait
jp
dec
mov
cmp
jmp
push
pop
fisubr
rcr
adc
mov
push
pop
mov
outs
jmp
pop
sbb
jmp
stos
outs
pop
mov
iret
ss
jns
fnstcw
xor
pop
xchg
vmovaps
xor
xchg
bound
jg
jle
imul
sub
dec
daa
dec
into
and
inc
pop
out
cmp
mov
xchg
pop
pop
or
sub
inc
fstp
ds
mov
std
sbb
add
sub
cmp
outs
imul
ins
div
frstpm(287
fisttp
jecxz
sub
dec
xor
dec
mov
je
sbb
cli
cmps
push
sbb
mov
push
mov
mov
jg
push
xor
and
xchg
ret
cmp
push
dec
jnp
aas
push
imul
mov
inc
jmp
inc
cmp
retf
and
ins
jmp
push
outs
test
sti
sub
jne
jmp
mov
shl
sbb
imul
sub
dec
js
retf
push
jge
push
push
cmp
packssdw
test
jp
sbb
adc
push
cmp
clc
cmp
arpl
popf
bound
mov
test
jecxz
jmp
dec
mov
test
ins
ret
or
test
mov
mov
cmc
push
fdivr
js
push
sbb
mov
cmp
int
sbb
sbb
xchg
jmp
retf
or
pop
cmp
(bad)
jmp
jmp
fs
inc
inc
dec
xor
and
push
(bad)
xor
cwde
jg
cmp
pop
pop
jns
pushf
xchg
call
dec
rol
retf
jge
fldenv
lds
cli
mov
leave
pop
js
stos
mov
mov
xlat
out
movs
pop
sub
cmc
aaa
popf
cmc
and
mov
aaa
(bad)
stc
fadd
ss
mov
ror
imul
sbb
stos
xor
sbb
addr16
daa
sub
int
sti
add
sub
push
retf
pushf
test
imul
dec
xor
xchg
mov
and
push
pop
cmp
pop
cmp
push
fwait
stos
stc
ror
enter
iret
into
leave
popfw
outs
sti
pusha
mov
mov
repz
mov
hlt
pushf
out
jmp
(bad)
ds
(bad)
neg
pop
or
jecxz
dec
sbb
mul
ret
mov
jge
idiv
fwait
inc
jge
or
cs
test
arpl
or
cwde
movs
xchg
sub
sbb
add
arpl
cmp
dec
(bad)
mov
into
inc
push
xchg
sub
dec
enter
in
stos
jae
cmp
das
push
ret
and
xchg
movs
ds
jp
ret
sub
dec
sub
retf
sub
mov
xchg
loopne
mov
lds
fld
(bad)
or
xchg
gs
xlat
daa
fwait
je
adc
sbb
aaa
sbb
or
cmp
push
adc
mov
cmp
cmp
les
lods
cdq
add
cli
popa
mov
dec
mov
test
cmp
add
(bad)
pop
stos
sub
jmp
jmp
jle
cdq
jmp
mov
call
(bad)
mov
push
aad
out
cmp
iret
stos
sub
sti
call
sub
stos
or
sti
sbb
daa
jmp
mov
cli
push
adc
hlt
les
arpl
ja
les
lock
fdiv
out
sub
dec
jmp
dec
fdivr
sub
test
(bad)
xchg
sets
push
cs
inc
call
push
scas
pop
xchg
push
movs
inc
jnp
jnp
pop
stos
movs
repnz
(bad)
daa
mov
(bad)
ret
sahf
inc
mov
popf
push
mov
into
adc
jle
push
idiv
cmp
jmp
call
aad
adc
(bad)
lock
stos
sub
or
mov
fs
leave
out
xor
push
fwait
and
fldcw
add
and
iret
call
sbb
jg
and
(bad)
jge
dec
test
or
jmp
dec
arpl
mov
arpl
fidivr
jno
adc
dec
or
xchg
sbb
or
aas
or
sub
sub
cmc
in
mov
or
pop
test
repz
std
xchg
xor
dec
xor
pop
xlat
out
xlat
mov
inc
push
xor
mov
xor
xchg
inc
add
nop
xor
mov
inc
das
outs
sahf
cmp
add
push
sbb
mov
jmp
sbb
jmp
imul
sbb
jo
fnclex
lods
add
pop
ret
aad
add
cmp
sub
stos
push
pop
sbb
(bad)
sti
cmp
dec
mov
xlat
dec
cmp
sub
jg
sub
sub
call
rcl
push
xchg
mov
scas
jmp
dec
idiv
fsubr
dec
sbb
test
aas
out
jmp
and
xchg
es
push
sti
jl
xor
xor
and
and
arpl
push
dec
mov
or
pop
xchg
fnsetpm(287
ins
rol
sub
jg
push
out
or
neg
push
xchg
shl
scas
popf
cld
mov
fstp
and
addr16
shl
lods
imul
aas
jmp
jg
mov
ins
jo
pushf
(bad)
sti
pop
dec
mov
scas
fwait
stos
pop
mov
shl
sub
rcl
int
push
stos
pop
add
pop
inc
sub
imul
sub
mov
sti
sbb
add
pop
scas
js
adc
(bad)
into
dec
(bad)
cld
sahf
mov
inc
pop
sub
scas
mov
data16
push
repz
pop
stos
inc
int3
cmp
pop
jae
and
pop
enter
mov
lahf
and
inc
jmp
mov
leave
cmp
ins
sub
add
push
push
jmp
push
pushf
ja
or
and
xlat
and
jmp
out
pop
add
pop
cmp
pop
sub
mov
stos
int3
push
mov
cdq
enter
cli
jmp
test
mov
cmp
test
adc
fistp
call
cmp
sbb
ret
sbb
sbb
inc
pusha
xor
scas
test
jnp
pop
inc
loop
test
clc
push
or
scas
dec
leave
sbb
pop
bound
cmc
test
stc
mov
adc
dec
imul
fcom
ss
std
mov
in
sbb
push
scas
cmp
cmps
rol
imul
mov
dec
xor
xchg
out
mov
sub
adc
pop
adc
(bad)
fst
jbe
out
jmp
scas
jmp
ins
lods
pop
fiadd
cmps
iret
add
nop
dec
mov
inc
mov
bound
mov
fistp
bound
stos
(bad)
pop
inc
ja
int
inc
or
pop
(bad)
push
xchg
jg
ins
inc
jb
mov
pop
jecxz
xor
clc
or
call
sbb
leave
push
cs
mov
jns
pushf
push
stos
test
call
xchg
gs
jecxz
out
xor
jp
dec
pusha
xor
and
jnp
cdq
pop
jb
jns
mov
out
jmp
jecxz
stos
stc
movs
push
mov
dec
sub
pushf
jge
mov
jno
cmp
pop
shl
jl
retf
push
dec
leave
ss
sbb
mov
gs
into
mov
jae
call
fcom
sbb
dec
or
push
hlt
mov
out
in
inc
add
outs
lds
fcmovb
add
retf
cmp
inc
sub
mov
adc
or
mov
sti
adc
jmp
popf
cs
mov
fcomp
retf
jmp
sub
sub
mov
or
add
call
pop
or
or
and
jnp
outs
pop
jg
outs
loop
cmp
jns
fldpi
push
mov
sti
mov
pushf
pop
push
lods
jmp
call
fisttp
push
nop
jp
sti
stos
cmp
push
mov
pop
mov
dec
and
test
stos
fdivr
mov
sub
or
fwait
adc
in
sub
and
adc
pop
retf
test
fst
dec
outs
sbb
add
sbb
repz
sub
sub
jmp
mov
xlat
sbb
jle
dec
or
cs
test
add
sbb
adc
out
sti
fwait
pop
jg
push
add
cmp
stos
or
cli
add
or
repz
jecxz
cli
leave
and
outs
imul
xchg
cmp
jnp
mov
call
stc
sbb
js
xchg
xchg
sbb
cdq
mov
popf
dec
add
inc
push
pop
mov
cmp
push
push
inc
mov
jmp
in
pop
xor
into
fldcw
out
outs
fdivr
(bad)
cmp
js
imul
sub
popf
mov
sub
or
fld
pop
sbb
in
jle
add
stc
add
pop
pop
xchg
mov
ins
cwde
and
pushf
mov
jmp
js
sub
dec
iret
clc
fst
add
outs
rol
adc
cli
xchg
mov
jecxz
push
mov
fwait
cmovg
and
jecxz
repnz
pop
fidivr
jmp
les
movs
xchg
mov
xchg
mov
jnp
mov
push
jmp
mov
cmp
mov
out
ret
mov
push
and
mov
loop
or
lods
gs
pusha
adc
fldenv
neg
out
or
sub
dec
jle
cmp
sbb
jp
sti
mov
pop
cmp
outs
leave
dec
jmp
jnp
lds
xlat
sti
push
test
or
cmp
lds
mov
adc
aaa
aaa
sbb
sub
xchg
add
inc
push
inc
cmc
pop
jp
and
push
inc
xchg
push
mov
pop
cmp
and
out
dec
push
sbb
jp
call
fwait
test
lea
mov
mov
mov
cmp
xor
mov
ds
repz
or
test
stc
mov
jb
lods
out
push
rcr
fst
fwait
mov
jmp
sub
sti
in
xchg
add
in
cmps
mov
retf
mov
int3
add
fistp
mov
sub
cmc
cmp
mov
dec
jmp
jnp
pop
in
and
cs
fwait
jne
mov
push
leave
xlat
cmp
jge
inc
fnsave
mov
xor
push
or
xchg
fwait
mov
fwait
mov
cmps
cli
jecxz
popa
sti
mov
(bad)
ficomp
jl
out
cmp
sbb
mov
loopne
sub
pop
fstp
rcr
jmp
xlat
or
(bad)
retf
(bad)
and
sbb
std
adc
test
nop
arpl
sbb
sar
ins
retf
mov
out
ret
or
data16
mov
adc
jecxz
inc
pop
mov
sub
aas
ret
fcom
(bad)
pop
fsubr
mov
hlt
movs
mov
(bad)
lds
sbb
mov
(bad)
mov
cld
js
push
in
jnp
jmp
dec
movs
mov
pop
cmps
mov
std
add
ja
cmp
inc
jb
sub
hlt
fucomi
cmp
repnz
jecxz
xchg
dec
lock
cmp
das
cmp
call
call
icebp
std
test
dec
lahf
xchg
jle
or
adc
ret
mov
add
dec
dec
mov
sub
std
mov
pusha
or
jge
cli
arpl
dec
test
cmp
dec
outs
imul
push
or
ins
sbb
out
pop
sbb
cdq
mov
jnp
int3
repz
sub
cdq
pop
jle
cmp
iret
jmp
sub
imul
xchg
retf
imul
and
push
or
adc
sub
or
aad
mov
pop
sub
retf
xor
repnz
sti
cmc
pop
xor
data16
loopne
inc
(bad)
retf
fisub
fidivr
sbb
movs
push
sub
or
jnp
cdq
dec
sbb
in
jl
push
mov
retf
pop
(bad)
adc
jnp
sbb
xor
or
ins
sbb
jmp
mov
std
jns
jp
clc
fwait
enter
test
mov
(bad)
adc
retf
retf
fcomp
call
data16
mov
imul
inc
dec
aam
outs
rcl
outs
das
cmp
test
pop
jle
cmp
call
test
xchg
out
stos
add
lods
push
(bad)
xor
stos
aad
pop
cwde
xchg
stos
imul
mov
sub
or
jo
adc
xchg
cdq
sbb
inc
lds
mov
xor
stos
mov
push
imul
in
mov
fstp
shl
and
pushf
mov
in
mov
rol
sub
rol
cwde
mov
fidivr
ins
retf
int3
and
mov
jp
inc
xor
test
adc
xor
sub
and
pop
cmp
push
fwait
ss
inc
or
sti
leave
push
xchg
xchg
movs
sub
cmp
clc
cmp
aam
add
jmp
rcr
aad
call
jg
cli
shr
fisttp
jnp
mov
mov
mov
arpl
mov
jnp
retf
or
jg
cmps
pop
mov
call
gs
fucomi
popa
inc
pop
fnstsw
push
pop
sbb
push
data16
addr16
test
pop
fwait
pop
pop
cmp
jnp
sbb
push
ret
pop
mov
retf
imul
dec
adc
xchg
xchg
arpl
mov
fwait
dec
fimul
xor
jl
mov
mov
stos
retf
popa
cwde
cdq
inc
das
jg
mov
adc
pop
jp
and
jge
mov
jmp
in
stc
pop
add
scas
movs
push
fwait
movs
in
and
or
shr
sbb
outs
cdq
push
push
fwait
jmp
inc
mov
sub
addr16
cld
mov
stos
mov
int3
add
(bad)
cmp
sti
cmp
mov
cmps
in
retf
push
cld
adc
in
mov
pop
mov
dec
dec
or
mov
scas
in
cmp
or
push
sub
jb
mov
jnp
add
adc
xor
push
sub
loop
loop
pop
cmp
ret
pop
mov
sub
lods
jmp
sub
inc
adc
test
mov
cmp
cmp
int
xlat
test
and
add
pop
inc
mov
fdivr
adc
arpl
add
into
mov
sbb
add
push
sub
and
pop
sbb
pinsrw
ins
retf
jg
jns
mov
or
jmp
stos
jnp
jae
and
pop
(bad)
imul
lock
lock
repz
(bad)
jnp
mov
inc
fwait
or
test
dec
or
stos
sbb
loopne
lea
retf
dec
pop
fld
loopne
dec
in
icebp
jnp
iret
repz
jmp
aad
fucomi
in
sbb
into
jmp
add
stos
mov
jmp
or
lods
sbb
daa
das
(bad)
sbb
sub
fild
fisub
aaa
jnp
call
xchg
or
cwde
and
loopne
pop
cmp
pop
jmp
sbb
mov
jno
jle
cmp
movs
adc
dec
lock
loopne
or
sub
lods
aas
pop
in
inc
loope
pop
cmc
inc
test
fisttp
mov
jp
dec
mov
dec
or
inc
inc
add
jecxz
and
into
(bad)
into
jmp
inc
(bad)
dec
sbb
cmp
mov
test
add
in
call
imul
ja
xchg
shl
iret
sti
sbb
movups
pop
ret
lods
and
pop
aaa
call
sbb
dec
xor
adc
sub
push
popa
inc
repnz
sub
jnp
jnp
mov
cs
cdq
dec
xchg
jmp
cmc
sub
aas
test
or
aas
rcl
or
cmp
movs
dec
test
mov
dec
push
out
xchg
imul
fcomp
nop
fld
fwait
xor
lock
mov
fneni(8087
xlat
sbb
cmp
lods
jmp
enter
pop
add
(bad)
scas
scas
leave
mov
xor
ret
xor
fwait
(bad)
out
and
ret
add
jmp
cmps
xchg
dec
dec
sub
test
xor
fwait
jbe
(bad)
mov
cli
mov
lea
leave
pop
jns
pop
ja
mov
push
je
loope
out
mov
xchg
clc
adc
mov
test
mov
bound
shl
adc
xor
push
je
pop
xchg
mov
sub
pop
mov
cli
adc
int3
sbb
mov
loopne
sahf
sub
sbb
and
lods
js
push
fs
dec
fild
inc
jge
and
sar
enter
lods
pop
fwait
(bad)
inc
cmp
mov
test
fwait
(bad)
mov
repnz
mov
dec
xor
cmp
ret
int3
fwait
dec
mov
inc
pop
bound
int
loopne
or
add
cmp
je
pop
int
xchg
sub
in
mov
retf
xchg
(bad)
jmp
pop
mov
cmp
pop
cwde
jnp
(bad)
cmc
ret
cwde
or
or
cmp
push
add
sbb
idiv
call
xor
xchg
push
fdivr
mov
mov
xor
jmp
sbb
sbb
sbb
pcmpgtw
mov
daa
in
sub
and
ds
xor
in
pop
int3
jge
(bad)
sbb
and
imul
jo
push
ret
jle
xchg
fisttp
repz
(bad)
mov
push
mov
scas
inc
in
in
jmp
repz
es
retf
xchg
sbb
sbb
sbb
adc
inc
jmp
pop
dec
mov
or
leave
or
push
jg
push
sbb
aaa
ss
dec
adc
xor
sub
leave
jae
mov
outs
mov
jmp
mov
xchg
outs
jg
cmps
push
jle
lods
or
sub
hlt
jmp
inc
pushf
adc
dec
sti
fs
cmp
sti
mov
jne
xor
loop
jecxz
and
rol
sbb
jno
cwde
mov
shl
fwait
out
push
push
sub
jae
push
scas
sbb
test
inc
jbe
adc
out
into
cmp
and
or
adc
test
dec
push
sbb
fmul
jmp
(bad)
mov
jle
ins
stc
sub
(bad)
mov
jb
xchg
jnp
out
xor
stos
jns
push
jb
test
jge
gs
(bad)
sbb
or
stos
imul
mov
sbb
mov
sub
add
mov
imul
stos
(bad)
lahf
adc
(bad)
mov
cmp
xchg
arpl
mov
cmp
cmp
xchg
ja
xor
cmp
and
cwde
cmp
add
sti
fnstcw
add
fcmovu
and
sti
stos
push
jecxz
sbb
test
mov
mov
jp
fld
sar
or
clc
enter
mov
pop
mov
cld
aam
jmp
mov
jecxz
fwait
and
and
ss
mov
xchg
retf
idiv
call
outs
out
mov
mov
sub
pop
into
jmp
xor
test
repz
cdq
shr
retf
mov
jmp
and
sbb
pop
stos
cmc
mov
ins
stos
sub
popf
outs
outs
sub
add
pop
mov
ins
outs
ficomp
in
push
mov
pop
cmps
retf
lea
aas
adc
(bad)
mov
mov
mov
or
(bad)
retf
sahf
fwait
push
inc
jecxz
cmp
(bad)
jp
in
adc
push
sbb
lods
jae
stos
sbb
inc
xor
sbb
and
in
ja
popf
xor
rcr
xchg
push
rcr
pop
pop
fmulp
pusha
dec
mov
lods
sbb
stos
out
pushf
cmp
inc
or
daa
sbb
(bad)
cli
mov
jmp
fldenv
xor
xchg
test
adc
retf
sub
mov
xor
int3
pop
arpl
pop
adc
faddp
inc
mov
pop
stc
ins
retf
into
xor
nop
jp
sbb
repnz
jns
jmp
add
push
jae
xchg
jae
fs
cdq
sub
retf
cmp
or
ds
mov
jge
ficomp
and
cmp
jecxz
add
ins
les
jnp
bound
xchg
cmp
jle
sbb
lea
popf
ds
neg
jae
daa
pop
push
xchg
mov
mov
or
xchg
inc
xchg
xchg
adc
xor
dec
xchg
mov
cld
ror
mov
jne
push
mov
stc
ds
push
inc
addr16
imul
addr16
call
sub
sub
xlat
mov
or
xlat
in
scas
retf
aaa
or
imul
push
jbe
xchg
mov
or
cmps
sub
pop
sub
popf
jb
xor
mov
dec
psubsw
add
stos
je
fidiv
hlt
pop
xor
loopne
jb
sbb
inc
cwde
mov
inc
jmp
push
cs
cmp
stos
je
pop
jp
jns
fwait
sbb
mov
mov
lods
adc
fsubr
adc
or
int3
pop
mov
fs
scas
cmp
jae
jp
pop
cwde
lods
dec
cwde
ret
das
xor
dec
adc
arpl
add
retf
lods
dec
stos
add
add
jmp
jnp
pop
in
retf
in
pop
add
sbb
sti
mov
popa
sbb
(bad)
repz
xchg
and
mov
mov
je
cwde
stos
(bad)
sahf
in
dec
cdq
imul
jecxz
lahf
out
cmp
sub
mov
sub
or
fisubr
sbb
xchg
sti
mov
cmps
jnp
(bad)
push
(bad)
jnp
cmp
jne
sbb
or
and
xor
mov
retf
outs
loopne
mov
mov
add
mov
lea
mov
mov
popa
retf
lahf
mov
sub
xor
inc
test
je
pop
gs
adc
fwait
mov
pop
pop
leave
mov
mov
call
push
jl
ss
dec
add
xor
jg
cwde
ja
add
or
stos
outs
cdq
sbb
jmp
and
mov
sar
arpl
pop
pop
mov
bound
fnsave
jle
sbb
fnstcw
cdq
mov
ret
jp
xchg
bound
arpl
lds
retf
out
xchg
mov
dec
push
cdq
stc
(bad)
idiv
dec
pop
arpl
mov
push
int3
inc
mov
jg
dec
xchg
lea
inc
mov
xchg
jle
dec
mov
les
add
or
mov
dec
jns
xchg
jnp
cmp
push
mov
cmp
sbb
mov
psrld
in
pop
movs
gs
dec
cdq
push
xchg
push
repz
fs
cmp
pop
jb
push
pop
out
xor
sub
jb
pop
gs
icebp
xor
push
rcl
retf
xchg
loopne
aas
ja
jnp
imul
in
push
outs
adc
(bad)
fild
test
pop
stos
dec
mov
aam
sub
cld
adc
cmp
sub
cmp
push
std
pop
jnp
lahf
push
(bad)
jb
movs
repz
mov
(bad)
jns
pushf
rcr
imul
stc
push
or
pushf
cmp
leave
adc
arpl
sbb
test
push
movs
and
push
xlat
cmp
sub
retf
in
inc
adc
das
cwde
sub
int3
lods
mov
jb
fcomp
cmp
and
aaa
popf
dec
repz
pop
sahf
mov
jmp
add
jmp
mov
mov
lock
lods
mov
aam
sbb
inc
imul
fs
mov
or
sbb
aas
jb
xchg
or
dec
push
retf
cmps
fs
imul
add
pop
scas
stos
(bad)
sub
aas
or
mov
xchg
(bad)
sti
push
mov
push
imul
scas
fisub
fld
test
jle
repnz
cs
pop
out
xchg
iret
or
fbstp
fwait
dec
scas
jmp
jecxz
imul
jmp
rcr
inc
in
xchg
popa
or
sbb
mov
das
adc
inc
sti
lods
sbb
loop
pop
retf
push
jecxz
aas
pusha
fs
or
out
jnp
test
outs
mov
jle
sub
cdq
dec
sbb
imul
cmp
cmp
pusha
gs
cdq
or
arpl
mov
call
jns
shrd
out
lahf
push
leave
xbegin
xor
mov
call
sub
mov
imul
mov
(bad)
test
and
mov
dec
or
push
xchg
mov
loopne
lock
cmp
xchg
fimul
sahf
mov
idiv
inc
sbb
stos
xchg
jle
dec
mov
dec
push
imul
sti
and
retf
adc
adc
inc
ins
and
mov
sti
sbb
es
xor
cmp
mov
rcr
pusha
sub
push
adc
out
hlt
int3
out
xor
lea
mov
pop
sahf
mov
or
addr16
mov
imul
call
mov
xlat
jmp
mov
sbb
loopne
popa
nop
stc
sti
call
arpl
xchg
inc
or
retf
pop
sahf
xchg
js
sti
mov
sub
movs
xchg
loopne
jmp
neg
xor
sbb
xchg
cmp
es
mov
(bad)
jmp
cmps
outs
sti
enter
mov
(bad)
pop
mov
mov
push
push
or
jb
out
icebp
adc
xor
pop
jl
sub
aas
cmp
pop
add
test
and
or
jl
adc
cmp
pop
aas
push
sahf
jmp
cmps
and
jo
sub
retf
imul
xor
clc
fs
daa
out
mov
sub
and
adc
aaa
test
retf
or
push
cmp
dec
arpl
lock
aad
test
lea
adc
and
sbb
mov
out
dec
std
int3
fcmovnu
stc
test
mov
or
gs
push
mov
mov
pushf
jmp
jne
mov
sub
mov
mov
sti
add
xor
std
inc
jl
mov
iret
pop
int
jmp
jmp
loopne
test
imul
lock
push
sub
cmps
jmp
mov
outs
sar
fcmovnu
cmp
sub
js
jecxz
aaa
cmp
loop
ret
mov
add
retf
fwait
cmp
out
cmp
dec
out
(bad)
out
xchg
mov
lahf
cmp
sbb
imul
mov
add
cmp
(bad)
sub
std
cmp
rol
imul
mov
jmp
add
pop
or
cmp
mov
cmp
imul
mov
push
or
call
std
adc
mov
es
pop
mov
mov
or
loopne
and
fisub
retf
and
jl
jnp
out
addps
aas
outs
pusha
(bad)
out
and
sbb
test
aaa
retf
fwait
loope
out
or
js
jg
push
nop
mov
add
or
dec
cmp
push
je
adc
mov
mov
pop
out
enter
aad
xchg
jnp
add
sub
mov
xchg
(bad)
jmp
pop
dec
push
fst
dec
fcmovne
cmc
pop
push
shl
ret
pop
imul
and
fwait
pop
hlt
mov
mov
xchg
lock
pop
sahf
fistp
fistp
jne
mov
(bad)
stos
mov
popf
fiadd
imul
daa
test
mov
push
or
jp
mov
jmp
jecxz
inc
gs
pop
addr16
pop
gs
jns
push
sub
xchg
stos
and
jnp
add
neg
sar
or
mov
pusha
push
mov
ret
fcmovnb
fisttp
aas
imul
mov
call
dec
push
cmp
adc
in
inc
or
jnp
lds
mov
shl
xlat
adc
sub
cmp
(bad)
das
mov
rep
das
mov
pop
sbb
cmp
icebp
ret
mov
mov
inc
stos
and
fild
mov
sbb
cli
mov
xor
xor
ret
add
or
dec
mov
jmp
nop
or
movs
xchg
mov
repnz
xchg
sti
fcomp
inc
jmp
cmp
dec
mov
mov
nop
inc
mov
aas
repz
(bad)
sbb
dec
fimul
je
stos
popf
daa
mov
cmc
cmp
nop
sub
or
ror
cs
sbb
outs
bound
jnp
stos
out
push
xor
jge
daa
adc
(bad)
and
push
fist
sti
scas
jns
call
imul
cmp
scas
stos
cmp
ret
or
and
out
sub
stc
inc
daa
adc
xchg
mov
cdq
cld
fld
and
cmp
movsx
sbb
gs
sti
inc
push
sahf
xchg
sbb
stos
cmp
or
fbld
jecxz
cdq
pushf
inc
jae
retf
shl
xchg
aas
mov
mov
sbb
es
dec
rcr
neg
inc
inc
jno
idiv
xlat
sub
dec
add
and
lea
jp
mov
or
jmp
mov
xchg
retf
fst
sbb
outs
cmps
adc
or
stos
mov
xchg
sti
mov
add
jnp
xor
xor
dec
sbb
sub
movs
retf
mov
pusha
jnp
pop
(bad)
xchg
scas
ds
nop
lea
adc
push
cmp
and
sub
pop
inc
sti
mov
mov
jle
out
mov
push
jnp
cs
fsubr
mov
adc
ins
dec
add
mov
push
fild
mov
xor
pop
out
xchg
jnp
push
mov
(bad)
jnp
aas
xor
out
out
xlat
imul
pop
sbb
push
inc
shl
stos
daa
repz
aas
adc
fbstp
fbld
mov
jle
lea
ret
rol
nop
dec
or
xchg
(bad)
sub
adc
ret
movs
sub
ss
adc
fdivr
sar
mov
fisttp
push
sbb
call
sub
or
sub
mov
cwde
fcom
push
sbb
es
imul
(bad)
imul
jns
adc
jmp
fstp
pop
xchg
dec
push
inc
push
fadd
jnp
imul
mov
mov
or
in
jg
shl
xchg
or
dec
popa
cmp
leave
es
sub
lock
les
add
cmp
bound
adc
jb
mov
and
xchg
dec
shufps
sbb
sub
jp
sub
jnp
lea
fwait
in
or
jno
inc
jnp
pop
cld
and
mov
fwait
pop
cdq
and
adc
das
mov
in
fisttp
retf
aas
and
outs
(bad)
jmp
loope
xor
push
scas
sti
outs
daa
dec
test
out
sbb
leave
sub
(bad)
add
push
clc
loopne
xchg
push
pop
out
dec
pop
sbb
push
xchg
or
pop
jmp
daa
jecxz
lods
stos
cmps
out
jg
dec
mov
sahf
jbe
xchg
jnp
call
and
add
hlt
push
(bad)
mov
push
fisttp
sbb
dec
imul
repz
sar
fild
inc
stc
retf
jnp
and
data16
fld
pop
mov
cdq
mov
mov
mov
(bad)
mov
jnp
fisttp
mov
repz
add
xchg
sub
xchg
addr16
cmp
mov
or
std
cmp
push
mov
add
pop
cmps
dec
test
emms
inc
cmp
mov
xchg
int
loope
pop
fild
sbb
dec
push
arpl
ins
repz
and
xchg
sbb
sbb
mov
mov
or
in
es
retf
popa
xchg
aad
(bad)
inc
push
fisttp
div
ret
in
leave
cmp
cld
add
inc
xchg
jge
jmp
pop
jp
js
pop
mov
jnp
call
stc
cmp
pop
int3
push
mov
dec
movs
dec
jmp
or
cmp
mov
or
mov
dec
add
out
ret
cmp
sbb
and
out
stos
inc
or
rol
sbb
cwde
xor
or
(bad)
nop
(bad)
clc
sub
dec
inc
mov
pop
xchg
push
jne
or
pushf
outs
outs
popf
out
push
and
scas
cmp
mov
cdq
inc
xchg
mov
sub
fstp
cmc
call
imul
xchg
cld
add
lahf
fnstenv
(bad)
(bad)
les
leave
das
shr
pusha
mov
jnp
push
adc
push
leave
xor
cmc
retf
add
dec
lea
pop
rcl
clc
xor
pop
cli
test
ret
pop
dec
leave
sbb
retf
sbb
in
sbb
imul
adc
inc
push
mov
test
neg
clc
or
adc
mov
pop
cli
mov
movs
pop
lahf
xor
and
(bad)
and
(bad)
dec
adc
jmp
pop
xchg
cli
xchg
dec
xchg
fstp
mov
sahf
shr
or
aas
stc
retf
sbb
adc
push
lds
sbb
int
(bad)
aas
cmp
sub
adc
mov
add
push
stc
xchg
imul
lea
retf
lods
mov
aas
jbe
mov
lods
mov
mov
(bad)
sbb
(bad)
not
cmp
mov
sub
gs
inc
add
mov
ret
loopne
inc
imul
test
lea
jae
mov
dec
lahf
mov
fmul
mov
stos
jp
jecxz
stos
push
retf
cdq
arpl
mov
push
pop
fnstenv
push
jne
retf
inc
bnd
sbb
fdivr
pop
sub
pop
test
inc
scas
scas
xor
gs
lods
mov
cmps
adc
fimul
xchg
(bad)
fistp
in
mov
retf
ret
movs
sbb
push
xor
das
cmovne
stc
out
imul
mov
jg
loop
xor
mov
pop
push
rcr
out
in
aad
sub
aad
pop
add
jge
sahf
clc
cmp
iret
popa
xchg
outs
in
push
or
hlt
sbb
fsub
fwait
(bad)
or
mov
jne
sub
mov
inc
xor
jp
repnz
pop
dec
pop
or
sbb
pop
inc
retf
cmps
outs
mov
fadd
fistp
out
loope
sbb
sub
fsubr
daa
mov
xchg
stos
not
mov
imul
xchg
sub
jmp
push
fisubr
sbb
or
jp
sti
retf
mov
jne
push
jp
cwde
ret
sub
jo
outs
fcomi
or
sbb
push
xchg
add
or
lock
add
add
xchg
sub
sub
jmp
cmps
adc
arpl
and
rcl
mov
push
sti
mov
cmp
scas
popa
or
retf
mov
imul
ret
adc
pop
add
inc
mov
cmp
aas
jp
mov
mov
mov
inc
inc
inc
and
jbe
inc
cmp
ja
ffreep
cmps
cmp
jecxz
or
or
imul
in
lar
xor
jmp
jmp
mov
dec
push
sbb
int3
fs
sbb
loop
dec
and
pusha
inc
jmp
mov
in
pop
shl
add
repnz
xlat
or
add
and
into
and
ret
adc
jb
push
pop
push
leave
fild
xchg
into
mov
popa
sbb
fldlg2
push
icebp
call
outs
push
sub
add
inc
and
fmul
jno
mov
mov
dec
or
hlt
cdq
arpl
xor
arpl
push
cmp
es
push
test
push
pop
inc
repz
lods
sub
scas
xor
into
je
arpl
dec
pop
rcr
out
cmp
cs
(bad)
call
mov
test
neg
pop
sbb
stc
fisttp
imul
icebp
rcr
std
or
inc
inc
std
xor
fild
leave
cmc
add
ds
push
ja
enter
adc
bound
or
aas
scas
push
popf
add
pop
mov
or
xchg
fldcw
pop
push
test
pop
test
cvttps2pi
cli
fisttp
adc
jo
push
leave
scas
out
cmp
cs
push
mov
cmp
pop
jns
repnz
and
fsub
sbb
pop
cmp
das
int
inc
adc
call
cmp
and
in
mov
sbb
push
jg
das
(bad)
xchg
scas
xchg
dec
imul
and
fsubr
xchg
xor
stc
sbb
push
mov
sub
shl
pop
cmp
sbb
add
iret
pop
sbb
sbb
cmp
test
imul
lahf
scas
cmps
je
jmp
and
hlt
xor
sbb
add
retf
jns
jle
inc
movhps
jmp
aam
cli
cli
fwait
movsx
xlat
sub
adc
fisttp
cmp
and
mov
cmps
(bad)
js
mov
fwait
addr16
pop
cmp
mov
jnp
jmp
sti
lods
mov
call
push
push
jno
dec
adc
mov
pop
test
sub
sbb
int
mov
stc
inc
pop
mov
mov
cli
pop
cwde
mov
daa
sub
fcomi
fstp
jnp
idiv
jmp
jmp
xchg
leave
sub
cmp
call
or
fimul
fwait
(bad)
mov
lods
push
mov
push
adc
mov
daa
shl
retf
pop
cmp
ja
sbb
cmps
arpl
inc
inc
sub
pop
retf
cmp
fld
mov
or
fwait
and
jo
inc
jae
test
sbb
or
xchg
xchg
xor
daa
out
cmp
ins
xor
in
outs
pushf
mov
das
or
fisttp
stos
or
or
sbb
and
pop
mov
xchg
imul
jle
stos
sbb
add
cmp
sbb
mov
add
lods
lods
outs
imul
dec
mov
jbe
mov
cmp
leave
dec
xor
lahf
int
mov
xchg
call
daa
rcl
shl
jnp
mov
sbb
mul
leave
cmp
es
outs
push
mov
fwait
cmp
dec
(bad)
dec
inc
mov
out
add
inc
fld
pop
(bad)
retf
or
ja
mov
imul
js
imul
dec
(bad)
repz
je
sti
inc
jmp
iret
call
cs
addr16
pop
lahf
sub
pop
xchg
inc
call
mov
lea
call
inc
(bad)
push
pushf
aas
pop
dec
sti
mov
and
pop
push
xlat
add
and
repnz
pop
push
out
and
pop
push
xor
fstp
mov
xor
test
lods
lock
stos
jnp
push
xlat
jbe
cmc
jmp
and
jmp
jmp
cmps
sti
jo
xchg
cwde
push
bound
jmp
aaa
push
cli
or
in
scas
cmps
cwde
scas
dec
aad
push
shr
fnstcw
stos
pop
sti
sti
jecxz
movs
ins
ins
gs
test
repnz
fistp
scas
stos
cmps
jmp
sti
(bad)
fistp
sbb
sar
cmps
out
lock
enter
mov
test
sbb
sub
mov
jecxz
xor
out
clc
in
mov
push
xchg
mov
push
movs
xor
pushf
ret
jne
test
mov
fcmovnu
mov
push
ss
ret
mov
cmp
fdiv
fucomi
sti
push
cdq
(bad)
stos
push
adc
jnp
or
movs
sti
daa
ret
div
(bad)
cmp
sbb
mov
stos
cmps
push
daa
mov
jg
das
jecxz
and
mov
mov
(bad)
dec
mov
jge
(bad)
into
cmp
cli
pop
aam
xchg
dec
cmps
test
cs
sub
inc
retf
mov
mov
and
add
xchg
clc
and
leave
cs
cmp
xlat
jnp
xor
in
loop
sbb
test
out
and
das
pop
mov
xchg
mov
mov
and
jnp
xchg
bound
fwait
adc
jecxz
sub
adc
adc
pop
inc
sbb
retf
jmp
lock
in
fld
dec
mov
xor
inc
stos
mov
mov
ins
lea
das
sub
in
shl
push
push
cli
bsr
(bad)
aad
in
sbb
jmp
mov
dec
scas
or
lods
(bad)
jmp
mov
std
dec
test
pop
rcl
mov
mov
cmp
push
cli
xlat
cmovo
sar
adc
jp
or
inc
out
jb
out
outs
sub
cmc
sub
inc
(bad)
xor
cmp
imul
mov
mov
pop
mov
and
dec
xlat
fimul
neg
stos
stos
nop
adc
ror
jmp
inc
(bad)
xor
cmp
xor
and
lahf
add
mov
jbe
dec
jbe
dec
mov
sti
pop
repz
jle
cmp
pushf
xchg
cmp
test
lods
test
mov
sub
call
in
xor
daa
aaa
xchg
movhps
(bad)
mov
jl
sti
sbb
or
shl
jmp
int
mov
mov
imul
sbb
test
xchg
lea
pop
call
dec
out
scas
mov
adc
jns
iret
arpl
jo
ins
jg
ret
xchg
les
cmp
sti
retf
xchg
cmps
cmp
cmps
sbb
xchg
sti
ja
sti
xchg
test
jl
enter
cmp
xchg
fistp
(bad)
in
mov
push
movs
push
imul
ror
fstp
or
mov
out
push
hlt
adc
in
pushf
fninit
cwde
test
xchg
add
popf
arpl
fwait
retf
ja
sub
arpl
push
fwait
cmp
fcmovnu
outs
retf
push
xchg
push
or
xchg
(bad)
and
cmp
or
or
pusha
fwait
and
mov
retf
addr16
ds
mov
xchg
push
sbb
(bad)
ins
mov
jo
inc
jnp
test
int3
mov
inc
fidivr
adc
or
cmp
or
dec
pop
mov
test
xor
ds
fwait
jl
(bad)
cmp
jmp
cmps
cmp
or
sbb
aad
pop
lea
fxch
mov
sub
or
push
es
lods
(bad)
mov
fbstp
fld
adc
xchg
out
(bad)
jnp
cwde
sti
jne
mov
push
mov
(bad)
jmp
aam
and
sub
xchg
jmp
sahf
inc
cmc
xor
(bad)
jp
cmp
loop
in
adc
imul
jle
je
pop
mov
fidiv
mov
mov
dec
cmp
cmp
jmp
sub
repz
xchg
jmp
xchg
adc
pop
adc
dec
lock
cli
or
jnp
adc
fwait
jl
inc
test
imul
pop
push
jmp
loope
mov
pop
sub
mov
clc
(bad)
jmp
cmp
sar
push
daa
add
das
adc
dec
sbb
shl
movs
dec
mov
jnp
dec
xor
imul
and
or
dec
add
inc
jbe
pop
fwait
addr16
sub
pop
push
pop
cdq
dec
mov
xor
retf
sub
sub
fprem
cmp
out
shl
push
fbstp
push
scas
(bad)
rcl
lea
cmp
sbb
sub
and
jmp
in
test
ret
mov
jb
or
movs
retf
ror
sbb
mov
sbb
in
mov
inc
mov
cmp
cmp
sub
inc
xchg
inc
xor
pop
adc
addr16
fwait
icebp
or
cmp
(bad)
rol
in
ja
call
loope
cmp
cmc
sbb
ins
mov
retf
das
cmps
int
cmps
cmp
fwait
sahf
dec
das
pop
mov
pop
mov
dec
mov
fcom
fdiv
push
imul
shr
sub
mov
scas
inc
xchg
push
je
adc
add
je
or
out
push
xor
or
movs
dec
mov
jg
jge
inc
pop
push
mov
inc
call
or
loopne
les
test
(bad)
clc
pop
mov
cwde
cdq
pop
mov
jle
or
out
call
inc
and
call
jp
dec
(bad)
inc
fnstcw
mov
or
jmp
clc
ficom
out
mov
fimul
mov
cmp
dec
call
aad
lock
or
mov
add
(bad)
test
out
sub
adc
fisubr
pop
mov
jp
adc
sub
fwait
push
inc
inc
ror
imul
test
lock
pop
cmps
xchg
dec
jp
inc
jb
jo
pop
lods
mov
out
mov
sub
pushf
push
pop
(bad)
js
jge
or
jmp
ret
stos
xchg
jns
outs
retf
scas
clc
sbb
push
xor
fwait
inc
xor
into
cmp
or
xchg
retf
mov
les
inc
or
pop
out
retf
fild
push
not
repz
ret
mov
mov
ss
in
aam
mov
fwait
dec
popf
std
push
loop
cdq
pusha
mov
ss
retf
pusha
cld
shr
test
(bad)
jmp
scas
fnstsw
xor
out
js
int
sub
ret
sbb
pop
stos
daa
sub
jmp
test
push
sahf
pushf
cmp
xchg
test
add
cs
push
mov
push
mov
movs
pop
push
dec
sub
or
std
jle
jg
mov
pop
daa
(bad)
rcr
pushf
dec
jp
sbb
xchg
retf
xor
int
fwait
sbb
adc
mov
xchg
imul
xor
adc
sahf
adc
lods
xchg
sbb
rol
aam
add
cmps
leave
movs
jo
das
mov
pop
or
sub
add
pop
mov
xchg
xchg
pop
leave
and
adc
mov
je
test
add
adc
sbb
sti
sbb
adc
push
icebp
imul
imul
clc
out
cmps
mov
push
mov
mov
adc
loop
cmp
enter
push
pop
rol
cmps
call
ja
ret
sbb
iret
sti
mov
std
sub
or
sub
test
and
sub
sub
push
add
adc
fs
cmp
inc
sahf
pop
mov
int
push
push
shl
pop
je
mov
retf
or
es
cmp
in
and
out
pusha
fwait
cmp
xchg
xchg
cmp
jmp
sub
mov
cs
call
cdq
in
xchg
push
daa
sti
pop
leave
daa
fcmovu
outs
pop
or
or
fwait
jmp
nop
mov
pop
inc
pop
pop
mov
cmps
dec
aam
push
(bad)
es
ret
xor
out
sti
sub
mov
fwait
stos
data16
js
ja
scas
cli
(bad)
cmp
cli
jmp
lods
dec
cwde
cmp
mov
push
sbb
sbb
add
inc
inc
out
mov
daa
jge
dec
pop
inc
imul
retf
outs
leave
push
ror
jge
movs
xchg
adc
sahf
int
cmps
(bad)
xchg
sbb
push
dec
push
stc
bound
(bad)
ds
cmps
sub
sbb
jnp
es
sbb
int
xlat
jns
out
or
mov
test
int3
mov
xchg
push
retfw
jnp
dec
push
pop
mov
mov
mov
jmp
cmp
je
icebp
cli
jns
xchg
dec
push
push
sar
jl
lahf
addr16
jmp
pop
mov
jmp
cwde
push
test
int3
test
ficom
fwait
jnp
inc
int3
sub
ins
aaa
stc
retf
into
test
pop
pop
push
mov
xchg
mov
lahf
call
call
mov
inc
or
ins
pop
fwait
xchg
stos
fdivr
mov
jo
popf
mov
xchg
sahf
jle
lods
sub
push
(bad)
shr
or
retf
ja
xchg
add
mov
mul
call
mov
pop
mov
mov
mov
movs
fs
cmp
(bad)
or
fidivr
sar
jae
jno
mov
sar
or
dec
hlt
mov
mov
ins
inc
mov
cdq
in
sti
mov
xlat
adc
fadd
(bad)
mov
lea
push
in
dec
mov
xor
jmp
enter
cmp
dec
fcomp
pop
pop
fisttp
pop
idiv
mov
aaa
stos
push
test
cmc
dec
std
mov
jns
or
ins
mov
pop
arpl
fild
daa
mov
mov
dec
cwde
je
(bad)
enter
xor
pushf
enter
fisttp
fs
addr16
ficom
jnp
jae
xchg
push
push
xor
dec
sbb
retf
sar
sub
into
push
mov
imul
cmc
mov
test
mov
add
cli
cmp
jl
or
jmp
fwait
or
stc
xlat
pop
hlt
dec
push
sbb
mov
cmp
fstp
ins
fnstsw
aaa
(bad)
mov
mov
out
pushf
scas
pusha
or
das
xor
sub
xchg
jge
jle
push
loop
loope
stos
stc
cmp
ins
jecxz
jne
jnp
call
cmp
xchg
xor
outs
fwait
dec
cli
cmp
push
cmp
xchg
xor
push
push
sub
xchg
fisubr
mov
sbb
sbb
daa
push
cmps
fcomi
cmp
jns
pop
(bad)
jl
and
dec
stos
test
std
mov
lea
lods
jmp
imul
fisub
stos
test
call
mov
or
push
aad
es
lds
mov
jmp
sti
pop
ins
mov
call
fiadd
pop
outs
sbb
jbe
and
call
and
pop
fiadd
vmovlps
and
dec
inc
jae
imul
add
sub
mov
es
sbb
stos
(bad)
jnp
pop
fwait
cdq
bound
xor
jae
cmps
add
and
fucomi
sub
sub
mov
push
(bad)
ds
pop
sbb
inc
pop
or
enter
les
or
mov
daa
xlat
mov
push
iret
aaa
fyl2x
jmp
lds
add
mov
mov
test
inc
cmp
in
inc
fiadd
not
sahf
(bad)
xor
inc
imul
out
dec
movs
jns
push
(bad)
out
jae
movs
add
out
in
or
(bad)
dec
cwde
cmp
aaa
pop
jb
addr16
call
inc
ja
jecxz
push
retf
daa
pop
sub
stos
test
lahf
xchg
xlat
or
mov
(bad)
mov
cmp
rcr
fist
aam
sbb
dec
test
fwait
inc
dec
inc
or
int
je
retf
xlat
retf
(bad)
fistp
lds
push
ror
aas
inc
pop
stos
dec
aas
js
jmp
add
sub
xchg
push
jnp
addr16
mov
push
(bad)
cli
in
push
mov
ds
mov
call
mov
pop
push
dec
stos
movs
popa
in
mov
(bad)
xor
daa
f2xm1
jmp
inc
iret
push
jo
jmp
imul
ret
hlt
loope
sar
or
mov
fs
xchg
mov
sbb
lds
push
cs
xchg
call
xchg
mov
sbb
xchg
mov
mov
sti
mov
in
fcom
fdivr
xchg
cmps
push
push
mov
dec
(bad)
stos
dec
js
xchg
push
lock
aaa
xor
loopne
stos
push
ror
cmps
cmp
sbb
or
jecxz
ja
mov
adc
inc
jl
icebp
(bad)
ficom
addr16
cmp
pop
inc
imul
aas
push
mov
pop
push
xchg
or
mov
fld
and
repz
or
jmp
sub
sub
push
sbb
rcl
imul
xor
fwait
lods
jp
retf
pop
pop
sbb
fidiv
push
xchg
mov
jb
imul
adc
add
fwait
mov
and
stos
mov
mov
or
ror
retf
cmp
loope
xor
pop
mov
pop
stc
mov
pop
ja
jne
dec
pop
inc
mov
ffree
mov
sbb
sti
fisttp
cmp
addr16
pop
dec
dec
adc
arpl
mov
add
repnz
nop
fist
and
jbe
cmps
sub
fstp
lds
out
push
cmp
xlat
and
cmc
aas
cli
sub
xlat
inc
repz
mov
scas
out
jmp
iret
or
and
sub
mov
and
test
cmps
push
xor
repz
add
sbb
sbb
jg
jmp
(bad)
stos
lods
pop
xchg
xor
jbe
jnp
pop
mov
cmp
adc
daa
retf
or
fidivr
xchg
nop
leave
test
xchg
xor
push
daa
push
inc
jmp
sbb
es
ja
imul
pop
movs
aad
imul
sahf
cmp
inc
fisubr
ja
aam
dec
jg
retf
xor
ds
jbe
or
jecxz
leave
jp
sar
sbb
lock
cmp
fsub
mov
mov
fisub
cmp
retf
sub
push
loope
rcl
lahf
data16
lahf
or
add
cld
mov
in
fmul
push
mov
scas
push
test
dec
leave
retf
push
cli
sbb
fild
mov
pop
dec
push
in
inc
sti
dec
int
ins
ss
pop
add
out
jns
sbb
mov
add
sub
call
xchg
(bad)
fistp
sti
stos
(bad)
iret
addr16
xor
daa
xchg
stos
gs
lahf
aaa
retf
jns
jbe
push
dec
xlat
test
mov
outs
mov
add
mov
mov
lods
clc
push
aaa
addr16
mov
mov
xor
cmps
add
pop
or
(bad)
pop
jnp
mov
out
imul
inc
pop
inc
xchg
xchg
mov
retf
mov
push
jp
cwde
fimul
jne
cmp
jnp
scas
mov
or
lods
sub
(bad)
adc
aas
das
mov
push
ret
into
sub
mul
retf
mov
call
xchg
push
not
imul
adc
pop
outs
scas
arpl
fs
aas
cmp
push
sbb
or
adc
movs
aaa
cmp
jmp
(bad)
mov
call
movs
pop
stos
lds
jnp
mov
xor
sub
sub
and
mov
mov
fucomip
or
mov
cmps
or
pop
cmp
std
jnp
cmps
dec
mov
xchg
js
dec
inc
sti
jmp
or
cli
mov
fidiv
adc
dec
push
bound
addr16
pop
inc
cld
(bad)
sub
adc
pop
push
jae
push
in
mov
retf
in
xor
repz
in
lock
(bad)
jmp
out
ss
div
and
inc
and
movs
or
mov
stc
out
jmp
cmps
ins
sbb
imul
call
jbe
shr
jne
inc
mov
jnp
jns
neg
or
enter
jmp
retf
xchg
jp
mov
lods
mov
lea
pop
daa
sahf
push
or
ja
outs
and
test
stos
mov
inc
dec
dec
fwait
pop
out
out
fwait
sub
daa
mov
test
fs
fldenv
and
mov
mov
aad
fimul
and
clc
push
jnp
(bad)
and
push
pop
in
movs
mov
xchg
push
adc
sbb
sti
hlt
loope
push
xor
cmps
mov
std
mov
cmc
cmc
xor
pop
femms
cmp
call
cmp
ja
inc
mov
mov
cmps
pop
cmp
push
and
jg
pop
retf
sbb
adc
adc
jnp
movs
mov
jne
outs
jnp
mov
js
ds
mov
(bad)
pop
(bad)
and
mul
push
mov
cmp
iret
fisubr
stos
cld
sub
pop
xchg
cli
sbb
imul
mov
ja
push
aaa
mov
push
enter
(bad)
sbb
inc
xchg
(bad)
cmps
mov
jmp
xchg
popf
cmp
jp
xchg
es
call
push
push
dec
mov
mov
push
or
in
jb
(bad)
test
mov
jmp
nop
dec
mov
lods
xchg
inc
out
out
ds
lock
jg
or
push
loope
pop
or
mov
out
test
shr
leave
lods
dec
imul
out
retf
and
imul
dec
rol
xchg
jle
aad
add
cmc
pop
lods
or
mov
not
xor
pop
inc
mov
retf
je
jns
sar
jbe
sbb
cdq
retf
call
test
mov
sbb
sahf
call
int
sbb
loope
icebp
xlat
fbstp
idiv
dec
mov
sti
mov
daa
add
inc
sti
mov
in
lods
adc
fidivr
pop
inc
imul
stos
inc
ja
inc
xchg
(bad)
xlat
clc
pop
xchg
aaa
inc
push
ja
sub
idiv
push
xchg
neg
scas
push
jae
xchg
pop
cmps
imul
mov
mov
jmp
or
jmp
imul
push
mov
mov
stos
sub
inc
fimul
daa
cmp
xchg
test
push
sbb
push
scas
sbb
sub
es
loopne
xchg
fcmovnu
mov
xor
jmp
jns
aaa
mov
out
mov
xchg
mov
aas
dec
sbb
ficomp
loope
pop
push
or
(bad)
push
push
neg
imul
lods
jns
add
int
aam
(bad)
shl
cli
pop
in
(bad)
(bad)
lds
lahf
arpl
and
and
add
(bad)
out
sub
adc
cmps
ins
daa
es
cmp
dec
pop
mov
push
lahf
mov
xor
test
mov
out
out
adc
jne
mov
mov
xchg
scas
out
call
push
scas
(bad)
mov
fld
or
jg
jp
in
cmp
pop
cmp
sub
cmp
add
jne
dec
sub
adc
xchg
fild
pop
sub
xchg
or
fistp
das
jnp
scas
cmps
and
mov
push
jmp
cmps
adc
loop
add
mov
sub
ret
inc
rcr
outs
stos
adc
mov
sti
hlt
or
out
fcomi
ja
or
cmp
repz
inc
mov
inc
cmp
push
dec
sub
dec
outs
adc
fild
sub
aam
out
dec
test
push
mov
retf
gs
pop
out
call
mov
jg
fdivr
push
sti
or
pop
mov
data16
das
fwait
ins
in
jp
aas
popf
or
sahf
sbb
leave
pop
out
imul
xchg
mov
cmps
icebp
imul
mov
iret
sub
out
cmp
pushf
mov
mov
fdivr
daa
nop
hlt
ror
call
xor
inc
ins
push
pop
jo
add
aad
mov
jp
mov
mov
xchg
arpl
call
mov
or
cmp
or
or
fcom
(bad)
je
fs
aam
ja
fisttp
fincstp
retf
fcmovnu
xchg
int3
in
enter
mov
jg
sbb
mov
push
stc
movs
dec
sub
mov
(bad)
sti
stos
enter
addr16
aaa
jno
jbe
repz
dec
hlt
or
xchg
sub
xor
inc
dec
aas
cmp
imul
pop
in
test
fisubr
xor
fist
pop
stos
stos
push
fdiv
retf
mulps
pop
in
push
push
(bad)
out
or
int
lahf
jge
ja
jns
push
mov
jmp
ror
dec
jp
sbb
aaa
push
push
cs
or
cmp
push
cli
leave
sbb
pop
lods
sub
mov
mov
loopne
cmc
sub
mov
pop
ins
mov
pop
stos
adc
dec
lods
dec
(bad)
jns
jno
lods
cmp
mov
jecxz
aam
push
or
dec
cmp
lods
inc
mov
leave
mov
jg
imul
fwait
scas
or
pushf
aas
and
mov
sbb
sub
or
mov
je
jge
ds
inc
lahf
jnp
dec
pop
xchg
imul
push
jnp
mov
ins
repz
push
push
dec
stos
retf
ds
jnp
mov
jmp
cld
cmp
sahf
mov
data16
mov
dec
and
ds
popf
sbb
fwait
stc
fild
adc
jge
cld
jle
adc
repz
fisubr
xchg
sahf
push
fstp
stos
mov
retf
dec
sbb
mov
inc
test
pop
add
mov
iret
pop
aad
or
jmp
adc
sub
pop
jmp
cwde
mov
mov
rcr
mov
push
mov
mov
stos
dec
pusha
(bad)
dec
sbb
sub
adc
fwait
bound
movs
bound
in
adc
scas
shr
scas
mov
xchg
imul
mov
cmp
add
ins
mov
cdq
movs
scas
(bad)
mov
pop
(bad)
jmp
into
imul
fwait
dec
movs
mov
cmp
cmp
das
iret
push
pop
pop
pop
fucomip
adc
sbb
cmp
stos
sar
mov
sti
add
sub
aaa
sbb
mov
movs
inc
push
mov
leave
cmps
pop
je
mov
test
rcr
retf
add
adc
fidiv
jnp
push
xchg
retf
cmp
(bad)
and
fwait
sub
jmp
dec
push
imul
stos
push
mov
jae
mov
xchg
or
fwait
sub
aaa
add
xor
out
xchg
xchg
mov
jae
xchg
mov
xlat
shr
sub
in
dec
xor
inc
int
test
dec
in
imul
je
inc
ds
aas
daa
pop
shl
outs
jnp
sahf
mov
cs
mov
push
sbb
dec
(bad)
xor
dec
pop
adc
add
fmul
in
call
fs
test
shr
add
out
jbe
add
jnp
xor
imul
out
xor
inc
jecxz
fsubr
or
inc
daa
leave
in
mov
loop
sbb
mov
mov
stos
xchg
out
lea
sub
push
dec
hlt
push
jle
inc
outs
inc
je
push
aad
push
mov
mov
jnp
inc
dec
data16
aas
push
ret
icebp
idiv
pop
daa
or
dec
fwait
stos
aam
mov
dec
xchg
frstpm(287
cmp
xor
(bad)
cwde
(bad)
mov
cmps
or
mov
push
stos
xor
rcl
(bad)
sar
dec
adc
(bad)
jmp
loop
push
jnp
mov
and
cdq
in
mov
retf
adc
push
mov
pop
sbb
popf
pop
mov
xchg
jg
xor
int
fisttp
das
stc
pop
out
jmp
cmps
imul
sahf
aam
cmp
xor
cmp
in
in
or
mov
mov
je
sbb
push
fwait
sbb
dec
push
test
stc
push
adc
add
call
dec
pushf
fwait
lods
imul
popf
lahf
into
ins
add
retf
cmp
jge
or
mov
pushf
int
mov
mov
push
sti
sbb
jne
pop
sub
mov
stos
or
jp
dec
cmp
stos
xchg
adc
sub
loopne
in
mov
in
int3
xchg
ror
xchg
adc
pop
in
inc
daa
fwait
imul
retf
xchg
les
out
fs
ds
jmp
cmp
mov
push
mov
sahf
out
push
and
into
call
adc
fild
ss
dec
(bad)
xor
mov
(bad)
cwde
enter
add
fadd
addr16
mov
mov
lock
xchg
inc
xorps
(bad)
push
ret
(bad)
out
sbb
retf
scas
sti
clc
dec
push
mov
mov
addr16
xor
(bad)
mov
enter
or
shl
fisttp
push
jo
imul
call
out
push
sub
or
add
jnp
mov
(bad)
cmps
aad
dec
shr
addr16
mov
aaa
pop
loopne
push
repz
add
call
inc
xchg
push
cli
out
sub
cmp
sbb
retf
hlt
cli
push
xchg
push
sahf
push
scas
jns
mov
inc
cmps
stos
adc
inc
movs
fsubr
retf
jmp
fwait
cdq
mov
pop
not
dec
out
cmp
or
xor
mov
in
xchg
fld
jae
jne
mov
xchg
lahf
ficom
dec
or
and
push
jmp
push
inc
mov
cmp
sti
dec
jmp
fsubr
retf
dec
cld
mov
sbb
cld
sbb
out
test
dec
mov
push
mov
mov
and
jl
xchg
aad
sub
jmp
dec
iret
movs
xor
xchg
fstsw
add
push
xor
outs
mov
xor
loope
gs
mov
jl
pop
cmps
call
addr16
loope
cwde
inc
inc
sub
or
add
int
xor
aas
mov
mov
cmps
in
ret
sti
es
loop
into
fcomp
xor
mov
retf
pop
cmps
dec
retf
mov
pop
dec
adc
add
add
sub
jmp
(bad)
bound
xor
fwait
xchg
cmp
ja
jns
pop
xor
jmp
repnz
mov
aam
data16
iret
mov
mov
jg
popf
stos
stos
cs
aaa
mov
out
shr
mov
retf
jae
sahf
(bad)
fs
int
dec
ins
sub
pop
(bad)
or
push
(bad)
jl
arpl
or
pop
cmc
push
jnp
dec
inc
pop
xor
fs
jns
pop
movs
or
mov
xchg
xor
adc
sbb
adc
pop
or
mov
cli
mov
pop
popf
out
mov
nop
jmp
or
adc
mov
fwait
hlt
mov
inc
push
enter
dec
clc
mov
push
imul
iret
shl
ja
mov
fwait
or
mov
adc
les
sbb
add
xchg
fcmovb
retf
in
and
(bad)
(bad)
sti
test
lock
or
stos
xchg
cmp
sub
loope
pop
mov
ja
add
das
neg
cdq
std
std
imul
mov
mov
dec
js
retf
in
loopne
inc
sub
jbe
sub
outs
dec
add
push
adc
cs
xchg
stos
adc
cmp
ret
fstp
dec
aam
and
pop
pop
fstp
or
xchg
mov
or
(bad)
or
sbb
push
sub
sbb
les
push
mov
ds
(bad)
mov
leave
test
sti
fwait
dec
xor
cs
clc
add
jns
or
push
push
out
sub
or
dec
cmp
sub
js
in
jge
cmp
or
sub
or
sbb
inc
pop
cmp
outs
push
pop
and
sbb
imul
(bad)
sbb
(bad)
js
ja
sub
mov
loope
jmp
jmp
fadd
xchg
add
and
stos
out
lods
out
call
gs
pop
movs
je
lock
in
mov
ret
aam
retf
retf
jae
cmp
inc
mov
loopne
add
rol
push
or
mov
mov
in
sbb
out
or
imul
mov
push
jns
mov
push
cmp
inc
mov
vpunpckhdq
cmp
cmp
ins
rcl
rcr
pop
fcmove
in
mov
pop
jge
mov
movs
and
xchg
add
fld
cmp
mov
pop
test
pop
mov
dec
movs
dec
dec
outs
mov
or
popf
or
mov
jle
in
sbb
push
fs
and
mov
call
out
xchg
xchg
dec
fs
jge
push
(bad)
add
mov
pop
cdq
ror
push
lea
scas
mov
inc
mov
les
and
enterw
(bad)
imul
inc
pop
dec
push
ss
sti
or
push
sbb
outs
fwait
or
add
outs
sub
ret
out
pop
xor
dec
sti
cs
mul
(bad)
and
fistp
xchg
push
outs
fadd
mov
test
and
cmp
std
pop
ficomp
in
es
mov
hlt
les
jle
mov
pop
xchg
nop
sar
scas
fstp
stc
mov
call
fnstenv
pop
cmp
sub
cwde
mov
daa
fnstenv
or
cdq
pop
cmp
pop
push
inc
mov
push
xor
mov
xchg
adc
frstor
pop
(bad)
stc
popa
leave
xchg
adc
xchg
cld
in
es
mov
pop
out
xor
jb
mov
shl
lock
es
(bad)
mov
inc
imul
pop
push
push
jb
xor
loope
mov
fidivr
loop
jle
jns
xor
mov
stc
mov
xor
cli
jns
cli
(bad)
repz
and
popa
pop
fimul
pop
ja
jb
mov
imul
sbb
ss
bound
jp
or
sub
movs
(bad)
shl
sbb
or
stc
mov
jp
mov
push
or
jl
lods
not
push
data16
bnd
cmp
sbb
stos
fcmovbe
push
mov
cmp
int
sbb
icebp
hlt
sbb
push
cmp
pop
es
pop
jno
xlat
out
jg
inc
shr
jmp
sbb
not
call
pop
les
je
pop
clc
pushf
bound
movs
cmp
push
ret
js
push
push
add
push
sub
mov
jo
pop
pop
mov
jb
dec
js
jl
pushf
shr
pop
xor
rcr
cli
cmp
inc
xchg
cmp
call
and
inc
sbb
aam
adc
adc
pushf
xor
jl
pop
and
mov
or
adc
adc
sbb
adc
mov
out
jl
cmp
mov
adc
xor
bound
imul
jmp
test
mov
inc
aam
jl
sbb
jo
adc
xor
pop
bound
jecxz
popa
ret
push
cmps
ror
ret
and
jns
push
inc
pop
xor
ret
sbb
ret
bound
hlt
bound
cmps
out
sbb
mov
xchg
sub
pop
bound
inc
adc
mov
inc
outs
jge
sub
push
cli
mov
mov
cmp
in
out
iret
pushf
imul
xchg
or
bound
adc
ret
jge
popf
bound
inc
mov
(bad)
cmp
(bad)
int3
xor
loop
inc
icebp
adc
(bad)
rcr
pushf
es
xchg
sub
iret
dec
or
mov
mov
scas
sub
add
outs
or
sub
adc
fiadd
mov
mov
cmc
inc
sub
out
ins
sbb
pop
cli
shr
pop
cmp
out
xchg
and
ret
pop
cmps
loope
sbb
enter
in
or
jmp
les
leave
test
int3
and
sbb
test
pop
(bad)
sbb
or
mov
(bad)
mov
or
pushf
pusha
sub
sbb
mov
fidivr
sub
inc
or
out
xchg
mov
lods
jbe
push
sub
(bad)
dec
ret
int3
mov
dec
inc
sub
dec
stc
or
pop
and
out
outs
sbb
dec
sub
mov
pop
inc
cmp
sub
inc
dec
pop
mov
fwait
add
cdq
xor
inc
or
or
or
mov
mov
out
mov
mov
or
or
(bad)
imul
or
bound
rcl
daa
xchg
pushf
jecxz
xor
mov
jmp
dec
jecxz
(bad)
mov
jb
or
pop
outs
dec
push
mov
and
mov
sbb
or
mov
inc
mov
mov
push
fbstp
and
pop
dec
fwait
out
xchg
push
cdq
retf
cmp
bswap
pushf
push
or
cdq
and
push
test
and
(bad)
mov
in
xor
imul
mov
jne
aaa
fnsave
mov
jmp
push
mov
mov
sub
sbb
fist
es
mov
not
ja
or
mov
mov
lods
(bad)
sar
pop
neg
lods
lods
jle
sahf
ret
mov
xor
mov
mov
xor
popa
pop
out
mov
adc
xlat
cmp
inc
inc
mov
in
dec
repz
mov
push
mov
adc
ja
ja
xchg
out
mov
(bad)
cmp
mov
xchg
sar
or
ret
cmps
pop
daa
inc
xchg
mov
aaa
lods
aas
sar
pop
xor
aad
adc
fcom
jae
mov
ja
ja
xor
mov
mov
mov
daa
inc
pusha
and
adc
shr
ret
sbb
pop
mov
lods
inc
ins
imul
cmps
dec
jecxz
outs
repz
popa
adc
cmp
mov
shl
pusha
adc
mov
pop
xor
(bad)
xor
aaa
push
adc
push
xor
dec
shl
enter
das
pop
repz
inc
loopne
je
inc
push
push
lods
lea
mov
dec
or
sub
lods
fbld
dec
xor
pop
test
add
pop
jmp
xlat
in
shl
fdiv
mov
xor
ja
xor
mov
(bad)
aas
cmp
cmps
sbb
popa
push
rcl
push
mov
xchg
es
ss
pushf
sbb
stos
(bad)
mov
dec
sbb
aaa
and
aaa
aad
push
out
mov
out
mov
mov
stos
sub
call
jno
adc
pop
add
icebp
xchg
push
adc
test
cdq
sub
scas
dec
fisttp
test
in
daa
push
icebp
sub
retf
adc
out
sub
(bad)
pushf
sub
je
in
sub
inc
fimul
dec
mov
dec
cmp
fbld
push
pop
stos
fld
inc
mov
aad
mov
jp
out
xchg
mov
mov
in
jbe
out
dec
add
aaa
add
and
xchg
test
mov
xchg
dec
add
jne
cwd
add
cmp
mov
retf
cs
mov
stc
das
pop
cmps
jno
adc
xor
pop
repnz
adc
and
repz
mov
jno
mov
test
cmp
in
push
adc
mov
scas
fidivr
fwait
scas
cdq
outs
adc
sbb
das
dec
out
jno
dec
adc
test
hlt
sbb
lea
adc
cmp
das
icebp
xor
cdq
and
test
push
sub
or
test
lock
mov
fst
jmp
xor
jmp
in
mov
mov
xchg
icebp
jns
icebp
iret
lds
xor
or
jle
cdq
iret
cmp
mov
dec
jns
xor
aaa
int3
pusha
xor
mov
fnsave
ja
jno
xor
sbb
jg
mov
daa
sbb
ja
cmp
xchg
jg
jne
adc
lock
jns
mov
clc
xor
jno
sub
js
not
idiv
ja
push
cmp
aam
shl
mov
shl
jp
(bad)
sbb
jp
lea
cmp
ret
cmp
push
mov
push
cmp
adc
hlt
xchg
push
mov
jg
ret
ja
not
sbb
jns
shr
iret
ja
idiv
push
test
lods
repz
cld
xor
cmp
sbb
xchg
jb
(bad)
js
movs
cmp
ja
sub
ss
fmul
jg
or
jg
or
out
repz
ins
(bad)
cmp
out
rcl
mov
call
dec
xor
push
sub
cld
out
dec
add
test
cmp
std
xchg
addr16
mov
gs
jmp
cld
jbe
sbb
int3
sbb
mov
ja
ins
mov
call
rol
(bad)
dec
xor
push
jl
int3
pusha
mov
ss
sbb
adc
fldcw
mov
xchg
out
dec
popf
cmp
mov
pop
addr16
lods
xchg
in
bound
(bad)
mov
lds
fcomp
mov
push
xor
cld
cmp
pushf
xchg
ss
xchg
mov
mov
sbb
push
xchg
popa
dec
int3
pop
lock
push
test
shl
std
hlt
(bad)
in
pushf
mov
sub
dec
daa
cld
sbb
adc
or
inc
jns
pushf
sbb
adc
iret
inc
xchg
add
repz
mov
push
cld
sub
popf
leave
mov
push
stos
push
adc
or
push
ins
mov
xor
adc
or
in
ss
fwait
sub
repz
cmp
dec
(bad)
xchg
adc
test
xor
sub
int3
into
mov
ss
sub
repz
lods
pop
cmps
(bad)
in
and
jle
ds
push
out
or
(bad)
cmp
test
jns
dec
mov
leave
mul
dec
int3
movs
loope
(bad)
out
lods
mov
(bad)
bound
push
push
sub
rcl
push
push
in
xchg
aas
shr
push
sub
fs
inc
ins
and
(bad)
in
in
(bad)
in
and
inc
ds
iret
popf
xchg
repz
iret
inc
sub
(bad)
out
dec
lods
cld
test
lods
ds
xchg
shl
pushf
xchg
jbe
inc
xor
pushf
sbb
enter
loope
dec
or
inc
ja
xchg
xchg
xor
aad
push
daa
jno
fistp
or
mov
movs
popa
sbb
push
shl
inc
sub
jecxz
pop
clc
or
(bad)
sahf
dec
push
enter
cmps
jae
mov
(bad)
mov
pop
inc
rol
xchg
aaa
test
pop
ja
enter
neg
push
enter
ja
ret
aaa
enter
or
fisttp
or
or
pop
stos
and
imul
cmp
inc
int3
mov
repz
push
adc
push
xchg
xor
mov
pop
ficom
adc
repz
mov
ret
ins
mov
fwait
mov
jl
jae
or
les
popf
repz
inc
jae
push
mov
arpl
push
test
xchg
cli
add
popa
inc
test
adc
inc
push
inc
push
pop
sub
ins
sub
fsub
xchg
js
inc
xchg
shl
push
int3
inc
jl
sbb
inc
sbb
inc
jmp
inc
aaa
adc
out
test
rol
xchg
jg
(bad)
shl
mov
shl
xchg
loope
adc
daa
cli
aaa
std
push
pop
out
popa
sar
out
mov
rcl
xchg
push
add
adc
or
cli
push
mov
xchg
inc
shl
adc
shl
adc
mul
pop
dec
bnd
push
jae
mov
addr16
daa
(bad)
add
inc
test
sub
add
add
addr16
repz
cmps
aaa
stos
das
push
sbb
push
dec
pop
mov
outs
xlat
adc
enter
retf
lahf
inc
inc
into
aaa
subps
pop
inc
ja
fiadd
push
push
add
cwde
retf
test
leave
xchg
sti
and
int
mov
mov
ja
mov
ss
pop
pop
jg
frstor
xchg
fwait
sbb
in
or
mov
(bad)
and
mov
int
in
movs
fisttp
cmp
repz
cmc
fnstsw
xor
cmp
sbb
clc
loopne
gs
cmp
fwait
or
pop
loop
or
mov
mov
aas
mov
sub
sbb
in
push
int
test
test
ins
push
iret
enter
mov
cmp
add
aas
ins
das
sbb
dec
jbe
adc
out
xchg
(bad)
ds
jecxz
jbe
mov
aas
ficomp
imul
adc
inc
xchg
jns
mov
ins
jo
sti
aad
or
jo
fwait
imul
in
push
mov
dec
sub
enter
int
dec
inc
sbb
mov
cmp
adc
sbb
test
out
or
pop
mov
mov
sub
or
ja
dec
into
(bad)
loopne
mov
dec
pop
xchg
in
sbb
and
mov
aam
mov
lods
aas
or
pop
movs
stos
ins
mov
int
jl
or
ss
or
adc
fild
jnp
fld
push
jo
in
fist
or
inc
js
(bad)
sbb
pop
lahf
ins
fwait
xor
lods
pop
int
in
push
mov
sub
adc
pop
or
hlt
addr16
div
lods
outs
mov
(bad)
push
xchg
das
int
int
cmc
daa
test
jne
jns
sbb
in
sbb
dec
xchg
xchg
int
xor
adc
add
popa
loopne
aas
push
jp
jne
xor
lds
aam
xchg
popf
fdiv
into
addr16
out
mov
add
mov
lock
jge
sub
push
or
(bad)
cwde
add
js
cmps
popf
pop
icebp
leave
sub
fcmovnu
inc
mov
adc
pop
add
push
push
mov
cmc
add
xchg
es
xor
rol
mov
jne
hlt
xchg
xchg
bound
lock
cmc
add
mov
adc
add
jecxz
scas
(bad)
push
loopne
jne
push
inc
rcl
jecxz
fneni(8087
lods
jne
push
inc
rcl
test
push
test
cmps
push
mov
cmc
jmp
pmaddwd
pop
dec
cdq
iret
push
xchg
pop
xchg
mov
cmc
iret
pop
pop
sub
mov
inc
xor
cmps
sbb
push
adc
(bad)
xchg
mov
push
daa
mov
sbb
cmps
loope
mov
pop
adc
daa
jl
mov
xchg
pop
mov
pop
dec
cmc
in
inc
jne
push
inc
xor
daa
pop
imul
push
add
sub
inc
stc
pop
test
shr
outs
jmp
ins
ret
inc
out
push
adc
xor
sub
cmps
pop
into
in
out
push
mov
(bad)
dec
mov
pinsrw
lods
retf
les
out
outs
les
les
fsub
rol
out
xchg
(bad)
xchg
js
adc
scas
adc
adc
ror
les
dec
sub
out
add
add
pop
das
loop
pop
add
dec
fnsave
and
fisttp
or
xor
jg
or
dec
retf
mov
inc
popf
xchg
pop
(bad)
sbb
xchg
popf
inc
popf
xchg
pop
(bad)
sbb
push
ffree
sbb
push
fld
inc
popf
push
fld
ffree
sbb
push
fld
inc
sbb
inc
popf
inc
popf
xchg
pop
(bad)
sbb
xchg
popf
out
xchg
movs
ja
daa
mov
push
fld
ffree
bound
cmp
and
add
fsub
mov
xchg
push
pusha
mov
mov
adc
cli
mov
ret
jns
aad
pushf
push
mov
add
mov
dec
push
cmps
movs
pop
mov
jae
adc
icebp
xchg
cmps
sub
aas
pop
jmp
pop
fsubr
sub
cmp
dec
inc
mov
fsub
fldcw
dec
xchg
or
jecxz
retf
stos
sub
pop
cmc
adc
test
inc
xor
(bad)
mov
xchg
(bad)
mov
rol
inc
adc
inc
rol
mov
xchg
(bad)
mov
rol
inc
adc
inc
rol
mov
xchg
(bad)
mov
rol
inc
adc
inc
rol
mov
xchg
(bad)
mov
rol
inc
adc
inc
rol
mov
xchg
(bad)
mov
xchg
xor
jg
pop
push
mov
pop
ret
stos
mov
xor
(bad)
out
popf
cwde
mov
pop
and
sub
scas
in
mov
mov
sub
xchg
and
mov
test
jne
cmps
mov
movs
push
mov
pop
cs
xor
fbstp
xchg
cs
add
push
es
mov
and
jnp
lods
mov
mov
je
jbe
arpl
loope
sar
pop
and
and
test
(bad)
cmps
add
imul
mov
xchg
cdq
jnp
hlt
xor
retf
sub
sub
or
push
adc
jp
aad
mov
(bad)
push
mov
add
call
test
cmp
fsubr
addr16
pop
sub
js
sub
dec
test
dec
retf
sub
inc
lods
aas
lods
sub
retf
sub
inc
retf
dec
mov
retf
jno
popf
mov
sub
push
sub
or
pop
mov
sbb
add
mov
lods
dec
test
inc
lods
pop
sub
shr
fcomp
dec
mov
cdq
sub
dec
jecxz
in
inc
sub
aad
mov
int3
and
mov
inc
mov
in
sub
or
sub
xchg
jne
xchg
mov
mov
leave
les
ja
mov
enter
cmp
xor
adc
cdq
(bad)
jge
lods
dec
lods
js
or
sub
or
sub
shl
mov
mov
jne
jne
xor
shl
mov
mov
jne
jne
xor
add
les
dec
mov
daa
adc
xor
dec
jo
inc
xchg
jne
push
icebp
push
popf
xor
mov
add
in
int
icebp
pop
fld
mov
push
(bad)
adc
jl
and
and
loop
std
rcl
fcom
cli
pop
mov
inc
movs
neg
repz
mov
stc
pop
xchg
inc
repz
push
hlt
jmp
in
mov
pop
mov
adc
icebp
add
test
sub
dec
(bad)
lock
xchg
xor
jne
pop
xchg
dec
aas
mov
add
pop
int3
out
inc
(bad)
xchg
mov
jmp
int
dec
mov
cmps
movs
push
sbb
jge
jp
imul
cdq
loopne
jl
ret
mov
fwait
ins
add
add
adc
mov
retf
fnstcw
test
mov
les
or
inc
jne
int3
xor
les
adc
and
cdq
int3
jae
ret
and
rol
int3
add
ja
add
push
repnz
shl
xchg
and
xchg
scas
shl
add
dec
pop
and
ret
xchg
in
rcl
jecxz
outs
inc
push
ret
push
hlt
add
into
mov
cmps
shl
add
jae
sar
jne
adc
ja
es
int3
mov
mov
fild
xchg
adc
xor
jecxz
sub
bound
xchg
xor
add
popa
cli
xor
ret
shl
mov
mov
loopne
rcl
div
fmul
and
dec
add
loopne
mov
and
cmp
push
xchg
nop
pusha
xchg
mov
xor
aad
lds
xor
rol
xchg
push
xor
xor
xchg
pop
mov
inc
jbe
inc
inc
xor
add
aam
xor
mov
and
hlt
shr
inc
add
xor
(bad)
(bad)
stc
cmc
push
lock
cmps
sbb
shl
dec
ss
sbb
mov
scas
aad
inc
push
ja
dec
pusha
(bad)
(bad)
in
mov
out
shl
jnp
dec
ja
adc
in
leave
mov
jo
adc
mov
push
aaa
cmps
xchg
not
shl
ja
jae
movs
mov
inc
cmps
mov
mov
je
jae
add
les
jge
mov
jmp
dec
cmps
sub
pop
loop
inc
arpl
sahf
pop
mov
mov
in
mov
push
jle
sbb
daa
add
adc
das
fdiv
btr
(bad)
ins
test
je
jae
hlt
jle
outs
cmp
inc
xchg
ins
ss
arpl
data16
loop
push
fwait
add
fs
adc
gs
jmp
leave
push
and
in
scas
inc
cmp
sub
xor
adc
ret
push
mov
icebp
pop
mov
sbb
xor
int
mov
fs
mov
fwait
mov
xchg
(bad)
inc
sub
rcr
inc
out
ss
fs
mov
adc
and
loopne
add
dec
test
aas
dec
jle
mov
push
dec
mov
lea
mov
and
xchg
(bad)
addr16
popf
jge
sub
mov
lods
add
aad
cmp
xchg
push
or
jl
cmp
sub
pop
retf
bound
xor
xchg
jg
dec
and
push
lods
sbb
xor
hlt
push
movs
mov
xor
jecxz
imul
mov
pop
and
movs
dec
cmp
(bad)
and
push
mov
loop
xchg
int3
test
mov
sbb
ds
and
lods
clc
sbb
sbb
pop
mov
jmp
mov
scas
sbb
dec
mov
out
cmc
imul
fbstp
out
and
mov
mov
popf
pop
mov
bound
lods
cld
movs
mov
clc
add
adc
scas
cmc
dec
jl
fsub
movs
call
add
out
push
lds
pop
push
pop
or
jb
popf
imul
call
popf
(bad)
lock
mov
cli
sub
push
jo
xchg
std
sahf
xchg
mov
sbb
jne
pop
icebp
sbb
(bad)
pop
test
loopne
popa
push
xchg
jmp
jbe
sbb
and
mov
sbb
pop
cli
data16
sbb
fucom
stos
in
je
and
mov
sbb
xchg
jno
dec
outs
push
cwde
sar
mov
jp
inc
inc
test
call
scas
push
(bad)
and
sar
xor
inc
adc
ror
(bad)
sbb
stc
(bad)
xchg
push
inc
and
cld
xchg
aad
cs
cmp
arpl
cld
or
inc
mov
xchg
hlt
push
mov
push
bound
adc
jbe
(bad)
int3
jb
imul
stc
lods
inc
cld
repz
in
in
jbe
mov
cmp
pushf
neg
mov
lods
jbe
not
add
add
push
pop
xchg
repz
out
jge
je
jbe
jb
std
mov
fnstenv
lds
jle
jbe
clc
pushf
(bad)
cmc
cld
jb
lahf
sbb
cdq
loope
inc
or
sbb
fwait
or
jbe
lods
jae
shl
sub
in
cmps
int
mov
inc
inc
retf
or
dec
inc
mov
lods
jecxz
ret
push
xchg
and
int3
xlat
test
cmp
daa
mov
mov
mov
inc
inc
mov
leave
pop
test
fst
mov
mov
mov
arpl
inc
lds
mov
inc
hlt
ins
ins
inc
(bad)
lods
sub
daa
xor
out
and
add
daa
push
mov
and
retf
xchg
ret
out
sub
ret
(bad)
mov
cmps
ret
mov
push
xlat
arpl
xor
mov
ss
scas
retf
mov
aaa
adc
inc
aad
dec
in
pop
mov
jne
xor
test
push
out
and
jmp
push
out
inc
ret
mov
pop
xchg
idiv
add
xchg
lea
sub
jae
inc
jns
ja
pop
in
or
repnz
sbb
and
push
xchg
inc
retf
dec
or
push
ror
xchg
lods
(bad)
xchg
push
mov
xchg
bound
in
lods
ret
rcl
xlat
mov
mov
and
jae
mov
clc
or
mov
jb
cmp
cmp
xchg
xor
dec
icebp
and
shr
add
sub
shr
xor
sub
sbb
stc
xor
xor
inc
idiv
cmp
aas
xor
jle
sub
popa
ins
or
fs
mov
test
mov
in
std
mov
mov
pop
xor
leave
pop
stc
or
push
mov
loop
jno
mov
nop
shl
imul
jmp
and
bound
jns
mov
push
dec
dec
xchg
out
sbb
or
push
leave
mov
push
sub
test
xor
xchg
imul
pop
data16
lea
mov
adc
adc
push
push
push
call
push
int
aaa
mov
or
retf
xor
push
fimul
movs
mov
push
inc
repnz
mov
in
mov
mov
lds
push
inc
mov
mov
push
int3
fs
adc
xchg
or
xor
xor
add
pop
je
push
ficom
outs
jmp
test
xor
mov
jl
fdivr
xchg
fist
aaa
sub
jns
dec
push
not
movs
jmp
aam
mov
jg
jne
inc
out
out
or
retf
push
cmp
(bad)
cld
aam
fstp
iret
cli
bound
jne
iret
int
ins
sub
xor
cmp
jne
call
call
neg
arpl
sahf
pop
fwait
loop
shr
outs
pop
lods
test
mov
push
(bad)
je
aad
sbb
sahf
pop
fwait
je
in
sbb
jge
lods
jnp
sti
dec
mov
push
nop
jnp
(bad)
jecxz
in
in
mov
inc
inc
sub
jmp
jl
(bad)
cmp
cmp
aaa
pushf
xchg
pop
push
inc
dec
jmp
ins
xchg
cmp
shl
sbb
mov
lods
or
jnp
fsubr
jmp
inc
fs
sub
pushf
push
sub
jnp
jnp
or
das
mov
adc
in
lahf
(bad)
into
int
popf
mov
jb
mov
mov
int
lods
pop
sub
mov
std
jbe
frstor
int3
cmp
aaa
pop
mov
mov
clc
push
ins
xor
dec
sub
retf
(bad)
jmp
mov
adc
pop
xchg
xchg
jns
xchg
mov
ret
sbb
xchg
call
gs
dec
mov
aam
daa
pop
push
inc
jmp
add
or
test
jbe
inc
test
cmps
retf
js
int
and
push
push
lods
retf
daa
sti
(bad)
hlt
in
jmp
pop
shr
leave
movs
shl
fdivrp
push
add
xchg
mov
and
push
fldenv
mov
sub
fs
arpl
sbb
cmps
dec
mul
sbb
test
aaa
mov
hlt
xor
ret
push
pop
jne
and
or
jne
loop
icebp
mov
jg
and
push
cli
not
jae
add
data16
push
mov
test
ins
js
pop
cld
fld
push
or
popf
mov
inc
push
test
hlt
js
shl
fs
addr16
jbe
add
es
jp
adc
xchg
test
loop
mov
call
inc
inc
dec
js
or
rcl
inc
push
xor
pop
mov
mov
mov
xor
(bad)
cmp
dec
in
(bad)
fsub
cmc
fbstp
sub
arpl
ss
shl
xchg
sbb
and
jo
adc
cmp
out
js
push
jmp
int3
sbb
add
dec
outs
cmp
mov
lock
gs
xor
call
jp
outs
aas
xchg
retf
in
cmp
mov
pop
xchg
cs
ins
jge
adc
and
dec
mov
pop
push
mov
mov
ja
mov
push
and
dec
sub
jb
mov
mov
or
fnstcw
xor
jmp
int
jg
jnp
xor
add
jmp
xor
es
push
xchg
mul
into
or
cmp
ret
int
pop
cli
paddd
(bad)
aam
jl
jo
adc
dec
daa
cmps
xchg
(bad)
mov
adc
(bad)
jl
jle
mov
lds
into
es
and
(bad)
adc
cdq
xor
cdq
push
ret
push
pop
dec
xor
test
cmp
fbld
out
xchg
jmp
dec
lods
cmp
(bad)
adc
out
jns
xlat
dec
das
add
movs
xchg
or
mov
lods
dec
dec
pop
pop
sub
dec
push
test
inc
imul
test
idiv
(bad)
push
sub
push
pop
cwde
mov
mov
leave
arpl
mov
cmp
outs
test
dec
sbb
ins
and
sub
fs
inc
xsha256
cmps
push
add
out
(bad)
retf
push
aad
jmp
into
pushf
cmps
jnp
xchg
sub
add
and
je
je
xchg
sbb
loop
call
sub
out
test
jae
add
(bad)
std
cmp
call
ins
jl
ins
stc
fs
jge
pushf
sub
jnp
pop
sbb
in
jmp
adc
imul
sub
sti
in
cli
ret
pop
int
ins
cmp
add
je
imul
imul
sub
sar
mov
sti
in
movs
into
xchg
lock
std
pushf
jge
dec
call
sub
add
aaa
stos
je
pop
(bad)
in
sub
jns
mov
jmp
pop
push
cvtdq2ps
sub
cld
std
scas
sub
dec
das
mov
pop
mov
data16
mov
cmp
imul
(bad)
call
sub
retf
cli
fwait
ins
cld
fmul
fsubr
lods
or
inc
call
fidivr
pop
in
fwait
jmp
in
lods
fnsave
leave
or
mov
std
fisttp
fmul
in
in
loopne
pop
jns
sti
cli
fldenv
mov
dec
mov
jns
or
das
fistp
hlt
gs
xor
and
cdq
cmp
stos
fisttp
cdq
std
iret
dec
lock
xchg
mov
iret
push
cmp
jmp
add
std
and
call
retf
mov
mov
mov
sub
and
popf
or
sbb
sbb
std
jle
lahf
sub
cs
pop
std
fistp
jp
jno
mov
or
sar
mov
or
test
cs
cmp
fiadd
pmullw
aas
fwait
or
aas
lea
imul
mov
test
xchg
mov
aam
mov
(bad)
out
add
not
addr16
add
jns
mov
mov
or
adc
shl
jae
jno
adc
int
adc
arpl
mov
jns
icebp
mov
adc
nop
dec
jmp
cmp
repz
sahf
cmps
mov
sub
cmp
inc
popa
(bad)
jp
cs
call
push
gs
xchg
xor
push
in
mov
xor
out
sbb
jmp
mov
push
test
adc
shl
xchg
dec
inc
pop
xor
mov
xchg
int3
push
xchg
fs
xlat
pushf
and
or
or
mov
lahf
adc
pop
iret
adc
mov
sbb
ins
dec
test
fstp
daa
xor
ret
retf
adc
push
arpl
repnz
sub
scas
call
cli
adc
pop
(bad)
xchg
mov
je
xchg
add
jge
int
xchg
inc
test
adc
xchg
jl
popa
les
std
cs
ror
fdivp
or
push
lea
into
sbb
cmp
push
cmc
popa
adc
lock
int
int
jp
neg
jbe
fcomp
or
mov
jns
popa
push
ins
call
sub
dec
out
cli
cli
xchg
xor
out
adc
out
xlat
adc
lods
ror
pushf
scas
push
outs
push
and
ds
and
dec
or
fs
retf
push
add
jbe
shr
loop
ja
inc
sub
dec
lahf
cmps
pop
push
inc
sbb
ret
addr16
inc
or
sbb
jbe
(bad)
out
aad
sub
sbb
in
cmps
xchg
cmp
sub
push
xchg
cmp
dec
cwde
mov
test
push
cdq
mov
fsubr
popa
and
in
pop
dec
out
popa
xor
daa
lea
imul
push
and
ret
fwait
daa
bound
test
aas
push
sub
mov
daa
dec
mov
daa
jb
push
scas
sub
loopne
cmp
out
icebp
inc
daa
jmp
add
jmp
xchg
not
dec
sar
addr16
jns
xchg
push
mov
hlt
push
addr16
(bad)
xchg
stos
push
dec
pop
or
out
inc
cmp
xchg
mov
inc
and
sub
xor
xlat
ret
mov
test
std
inc
mov
clc
pop
add
sbb
inc
mov
data16
xchg
jno
dec
leave
loop
mov
int
mov
mov
ins
rcr
mov
or
push
ss
mov
jecxz
xchg
or
sub
mov
pop
arpl
mov
lahf
sub
xchg
int
pop
std
mov
int3
fist
pop
inc
sahf
cwde
mov
inc
pop
mov
mov
xlat
push
retf
jae
mov
out
loopne
add
pop
stos
mov
inc
mov
cmps
repnz
(bad)
hlt
xlat
stos
and
out
or
mov
add
mov
xor
jo
int
lahf
push
inc
mov
pop
mov
fisttp
xchg
out
data16
dec
inc
adc
jecxz
test
xor
sub
fstp
stos
or
push
adc
push
les
adc
push
loop
cmp
and
sbb
call
pop
fwait
test
sub
jmp
ret
pop
(bad)
clc
(bad)
out
call
push
mov
cmp
movs
(bad)
fsubr
and
sbb
mov
inc
hlt
sbb
movs
xchg
xchg
and
in
dec
stos
shr
(bad)
cmp
or
sbb
sbb
push
pop
cli
cmp
hlt
leave
xor
jecxz
ret
push
mov
mov
and
inc
fwait
inc
inc
add
fwait
cdq
out
xor
test
adc
scas
or
xchg
lock
in
inc
push
test
push
mov
sbb
sub
(bad)
out
movs
xchg
(bad)
std
sub
sbb
pop
mov
shl
mov
in
stos
rcr
jge
push
(bad)
xchg
(bad)
leave
and
jmp
cmc
push
xchg
cdq
cdq
xor
mov
gs
mov
and
pop
or
xchg
pop
es
je
dec
xchg
fisub
inc
mov
dec
(bad)
bound
mov
cmps
or
sti
or
out
lods
je
ds
jbe
mov
out
aad
push
(bad)
inc
lock
aad
xchg
jo
(bad)
rol
into
arpl
lods
and
test
add
jp
jle
add
in
mov
mov
mov
je
jne
mov
(bad)
sub
mov
aaa
addr16
(bad)
js
mov
push
aad
ss
retf
xor
or
add
push
mov
and
addr16
push
mov
movs
retf
push
iret
(bad)
mov
std
mov
mov
xchg
(bad)
and
ins
cmp
mov
in
xlat
push
sti
fwait
repz
xor
sti
hlt
jae
xchg
push
test
mov
inc
sub
fs
or
xor
xor
stos
nop
dec
test
aam
fs
(bad)
aad
pop
and
add
add
adc
or
jmpw
fwait
push
bound
fucomi
inc
xor
shl
aam
xlat
inc
cmp
dec
rcl
rcr
sar
pop
cmps
mov
and
leave
shr
test
xlat
dec
pop
xor
test
enter
inc
ret
dec
sub
retf
xchg
icebp
adc
jle
sahf
push
in
loop
sub
data16
dec
jnp
push
dec
or
aam
sahf
push
loope
mov
and
(bad)
sbb
and
jno
les
imul
pop
js
push
cmps
lea
push
out
mov
cmp
(bad)
sub
ds
cmp
in
les
xor
jp
mov
into
pop
hlt
jmp
or
jmp
adc
xchg
sub
add
hlt
out
aaa
mov
(bad)
fld
stos
pop
pop
stos
xor
cmp
or
adc
jle
cmps
pop
lea
dec
dec
movs
stos
sbb
or
dec
sub
dec
pop
int3
jp
sub
sbb
ds
sbb
mov
stos
stos
fs
sub
adc
stos
test
imul
(bad)
xor
pusha
push
stos
cmp
mov
mov
std
push
popf
sbb
sub
xchg
or
ror
sti
push
aaa
jge
adc
repnz
ja
add
data16
jo
or
mov
dec
test
cli
fcmovu
inc
and
jecxz
in
cdq
push
call
mov
xchg
sub
into
mov
out
lods
dec
pop
adc
stos
dec
jg
pushf
sub
pop
xor
stc
or
fiadd
jmp
stc
ins
frstor
pop
stos
jbe
stos
nop
jmp
scas
push
inc
bound
cmps
sub
lods
in
dec
imul
xchg
push
cmp
mov
jne
loope
pop
cli
fidiv
comiss
pop
movs
sub
add
push
int3
or
mov
dec
mov
jge
pop
dec
out
sar
dec
stos
pop
xchg
or
jmp
adc
das
fsubr
call
jno
push
sub
add
add
add
and
adc
mov
pop
dec
cmp
and
adc
jl
aaa
pop
and
das
cmp
and
adc
pop
mov
dec
cmp
es
lock
daa
xor
add
inc
daa
inc
adc
sahf
sub
cmp
sub
jp
mov
add
adc
add
aas
mov
xor
sub
aas
ja
push
xor
mov
cmp
sub
push
aas
inc
out
mov
adc
dec
cmp
adc
aas
and
(bad)
add
cmp
das
jo
aas
sub
pop
jl
ds
xor
pop
aas
lods
ds
stc
clc
sbb
xlat
xor
sbb
adc
inc
int
dec
cmp
xor
sbb
bound
add
clc
cmp
add
xor
push
lods
cmps
test
aaa
inc
sbb
jl
jnp
jle
dec
cmp
cmp
sbb
fnstcw
add
sbb
inc
pop
(bad)
loop
mov
add
add
cmp
sbb
int3
jnp
mov
add
add
cmp
or
iret
shl
adc
aas
movs
jmp
add
add
add
jo
aas
cld
jnp
scas
and
dec
cmp
inc
rcr
std
sbb
cmp
inc
and
mov
jne
and
cmp
add
add
int3
imul
cmp
dec
loopne
aas
xlat
cmc
outs
mov
add
add
dec
xor
aaa
mov
dec
cmp
dec
nop
sbb
int
test
cmp
dec
lock
xchg
add
dec
cmp
dec
push
push
aas
or
daa
mov
add
add
mov
xor
inc
scas
inc
cmp
push
add
aas
sub
inc
cmp
push
pusha
pop
aas
dec
and
loope
mov
add
inc
rcl
cmp
or
adc
aas
jmp
ror
add
sub
(bad)
mov
xchg
dec
cmp
cs
xor
cmp
das
cwde
and
fcmove
and
add
add
xor
and
lods
mov
adc
add
shl
lock
nop
and
cmp
xor
and
mov
and
cmp
xor
and
repz
adc
out
inc
cmp
xor
mov
jne
inc
cmp
ss
aas
ins
mov
push
fld
xor
dec
aaa
fsub
aas
sub
cmps
push
mov
add
jne
or
aas
mov
and
and
cmp
add
aas
hlt
pop
js
jns
inc
cmp
cmp
aas
bound
ficomp
add
aam
nop
and
jne
in
jecxz
inc
cmp
cmp
mov
fdiv
adc
lock
add
inc
sub
ss
cmp
aas
and
aas
hlt
daa
pushf
xchg
loope
inc
cmp
inc
dec
and
xor
push
test
add
aas
jne
jge
add
dec
cmp
inc
test
aas
sub
aaa
cmp
inc
fsub
aas
sbb
cmp
add
add
push
lods
popf
retf
or
add
add
xor
xor
xor
dec
pusha
and
push
cmp
add
nop
and
loope
fsubr
add
add
test
cmp
dec
call
jnp
cmp
cmp
dec
sbb
push
ja
dec
cmp
dec
dec
and
sub
add
add
js
aas
cmp
inc
repnz
push
mov
or
cmp
add
xor
cmp
fs
cmp
push
add
aas
jle
dec
jl
or
xor
es
push
les
cmp
push
pop
es
repz
ret
dec
inc
cmp
pop
mov
aas
push
sbb
dec
cmp
pop
mov
addr16
cmp
pop
call
inc
repnz
cmp
ror
pop
mov
movs
retf
add
add
rcr
push
mov
ins
mov
add
mov
popf
fwait
loope
sub
aam
push
mov
movs
shl
pop
push
mov
sbb
dec
mov
aad
push
mov
into
fs
mov
(bad)
call
adc
sbb
mov
(bad)
iret
adc
jno
pushf
xor
xlat
lahf
adc
(bad)
push
test
add
outs
adc
out
and
add
add
aas
adc
mov
stos
inc
mov
fstp
adc
ss
dec
mov
(bad)
adc
dec
xchg
pushf
cmp
inc
mov
fidivr
xor
inc
test
add
add
(bad)
adc
xor
jne
inc
retf
adc
add
add
fcomp
mov
pop
sti
clc
mov
fsubr
adc
repz
mov
add
add
call
mov
pop
ret
add
add
repz
mov
scas
adc
popf
fmul
add
add
mov
cmp
dec
ds
fisttp
mov
(bad)
add
pop
adc
sub
mov
loope
adc
jl
sbb
test
mov
inc
jge
pop
inc
mov
loop
adc
mov
mov
loop
adc
icebp
adc
add
add
adc
xchg
mov
jecxz
adc
jmp
add
fist
mov
loopne
dec
mov
in
adc
(bad)
mov
in
adc
div
add
add
dec
adc
ret
test
mov
out
adc
imul
add
out
adc
jl
xor
out
adc
add
adc
add
add
(bad)
adc
sbb
xor
add
add
int
jmp
add
cmp
aas
adc
mov
cs
jmp
jle
cld
jae
xor
add
add
retf
in
add
add
mov
pop
movsx
dec
dec
mov
(bad)
dec
mov
xor
sub
xlat
lahf
push
mov
std
inc
sti
mov
fdivr
push
mov
retf
mov
(bad)
or
xor
iret
stc
mov
ficomp
test
mov
mov
fstp
or
ins
or
cmp
(bad)
or
xchg
ffreep
scas
xchg
dec
mov
fdivr
mov
cmp
add
fstp
or
lahf
fwait
lods
xor
cmp
fidivr
(bad)
rcr
add
add
cmps
and
or
mov
loopne
or
add
sub
mov
scas
repnz
mov
mov
loop
or
mov
add
loopne
dec
mov
(bad)
mov
add
inc
clc
mov
std
mov
add
mov
aas
or
push
add
pop
in
or
jo
dec
mov
out
or
xchg
js
mov
out
or
sbb
add
js
sbb
mov
call
popf
(bad)
jbe
sbb
add
add
call
push
cwde
fisttp
xor
jmp
mov
push
shl
add
add
pop
push
mov
out
dec
mov
jmp
add
or
ror
add
jmp
add
stc
(bad)
xor
in
aas
add
push
scas
movs
and
add
add
fild
fmul
cmp
in
in
jg
mov
add
daa
mov
out
aas
add
adc
ds
out
fild
mov
lods
jbe
mov
out
jg
mov
xchg
push
daa
mov
lock
add
mov
sub
lock
push
inc
fiadd
add
jl
pop
add
in
inc
mov
repnz
mov
or
dec
mov
repnz
add
mov
add
push
repz
add
add
mov
repz
mov
mov
add
and
lahf
add
fdiv
add
sub
stc
xchg
dec
mov
jmp
mov
add
add
(bad)
(bad)
mov
xor
mov
in
aas
(bad)
mov
push
mov
add
std
mov
loopne
cmp
inc
out
mov
mov
cmp
mov
out
aas
cld
mov
daa
mov
mov
out
jg
mov
int
inc
mov
lock
mov
mov
icebp
(bad)
stc
mov
inc
call
add
aas
stc
mov
mov
add
and
jg
mov
(bad)
repz
mov
repz
ror
add
add
pop
je
xlat
push
dec
mov
cmc
aas
idiv
retf
sub
add
add
cmc
mov
mov
iret
test
mov
idiv
hlt
mov
sub
add
cmp
aas
hlt
mov
aas
adc
add
add
idiv
mov
fldl2t
inc
mov
clc
mov
mov
shr
add
add
stc
push
mov
pop
push
pop
mov
stc
aas
icebp
mov
adc
cmp
add
add
jg
mov
or
sub
add
add
jg
mov
pop
and
sbb
jg
mov
call
adc
(bad)
in
mov
jo
aaa
mov
idiv
mov
sti
xor
clc
(bad)
jmp
cmps
out
dec
mov
stc
jg
mov
lock
add
push
dec
jmp
xor
sti
jg
mov
shr
pop
mov
sti
jmp
mov
cmp
cld
jmp
mov
xor
inc
mov
cld
jg
mov
stos
sahf
cmp
cli
(bad)
fistp
push
fistp
mov
sti
(bad)
fdivr
cmp
add
cmp
fnstcw
mov
add
call
mov
mov
add
lock
call
mov
cmp
ss
(bad)
call
mov
out
inc
mov
(bad)
dec
mov
push
push
cmp
(bad)
inc
mov
loope
inc
mov
(bad)
inc
mov
shl
add
add
push
or
add
add
or
mov
mov
mov
push
mov
les
out
push
fs
cmps
ret
jns
arpl
mov
inc
cs
mov
add
lock
xor
push
lock
mov
mov
cmp
xor
sub
aas
pop
or
adc
call
outs
leave
ja
sbb
nop
mov
mov
lock
gs
movs
loop
lea
neg
sub
lock
es
loop
xchg
mov
xchg
aas
inc
cmp
repz
retf
lock
xor
dec
xchg
cmp
mov
ins
pop
mov
aas
or
dec
cmps
cwde
cmp
inc
jb
xchg
int3
lock
jno
loop
fcomp
nop
cmp
rcl
xor
jecxz
aas
push
jnp
daa
pop
cmp
sbb
(bad)
scas
data16
lock
jnp
dec
(bad)
in
fwait
imul
icebp
aas
cmp
xchg
mov
mov
movs
ins
mov
mov
mov
call
call
movs
enter
aas
or
cmp
jge
mov
mov
mov
jmp
aas
imul
shl
adc
jmp
mov
dec
jnp
pop
mov
pop
add
loopne
icebp
aas
pop
imul
xor
stos
mov
icebp
aas
cmp
mov
cmp
frndint
and
icebp
aas
mov
xchg
mov
cmp
repnz
xchg
test
jne
lea
fdivr
dec
pop
repnz
in
movs
xchg
xchg
jle
cmp
jne
jp
repnz
jb
(bad)
mov
mov
cmp
cmps
mov
into
push
repnz
movs
hlt
hlt
mov
fnstsw
inc
imul
fldl2t
inc
cdq
xor
cmc
loope
test
aas
jge
aas
mov
dec
call
sahf
repnz
push
adc
cmp
(bad)
sar
repnz
mov
or
or
in
test
repnz
aam
fist
nop
cmp
das
ds
and
inc
bswap
jno
adc
push
repz
in
xor
push
xchg
fmul
and
aas
jl
sbb
call
fs
cmp
aas
movs
pop
test
daa
xchg
cmp
lahf
xchg
pop
lds
aas
sub
pop
out
pop
mov
jno
aas
loope
inc
mov
data16
aas
mov
xchg
sahf
mov
(bad)
popa
(bad)
ss
mov
sub
sub
clc
call
dec
cmps
fdivp
aas
mov
fimul
add
cli
repz
repz
push
stc
and
xchg
mov
or
hlt
aas
js
xor
repz
mov
cmc
xor
aas
cwde
jns
jecxz
mov
aas
iret
sub
jp
dec
cmp
add
aas
jbe
ror
pushf
cmp
cmp
mov
xchg
aas
lock
cmp
rcl
lock
shl
(bad)
retf
cdq
cmp
sub
aad
mov
in
scas
xchg
inc
jge
or
fdiv
aas
xor
mov
cmps
sub
jbe
stc
hlt
aas
jecxz
pop
ror
mov
mov
ficom
cmc
aas
out
xchg
mov
mov
sub
sbb
setb
movs
push
cmc
aas
call
mov
inc
outs
cmc
aas
lods
xchg
sbb
cmp
(bad)
xchg
aam
(bad)
cmc
aas
out
call
push
dec
fld
stos
cmc
aas
lods
inc
inc
add
mov
pop
mov
leave
cmc
aas
mov
dec
cmp
dec
and
aas
pop
out
xor
cmps
fwait
cmp
fdiv
loope
idiv
inc
ficom
inc
loop
mov
jle
idiv
xchg
mov
jle
adc
inc
inc
idiv
xor
mov
(bad)
idiv
xor
xchg
mov
mov
push
xor
inc
scas
cmp
int
jg
sahf
mov
mov
xor
fwait
mov
adc
idiv
or
jmp
mov
das
sbb
mov
idiv
stos
mov
cmp
push
stc
jge
idiv
test
and
je
in
call
cdq
jp
xchg
cmp
aad
ins
fldcw
inc
push
jmp
idiv
shr
push
pop
and
mov
imul
cwde
cmp
add
jae
mov
add
ja
test
shl
aad
push
ror
cmp
dec
iret
ss
aas
jle
adc
cmp
sbb
push
daa
add
aas
sub
xchg
mov
mov
adc
mov
sbb
aas
sti
int
mov
in
xchg
inc
fldcw
aas
mov
(bad)
lahf
mov
(bad)
mov
aas
cmp
cdq
cmp
mov
clc
aas
es
xchg
jmp
mov
xor
clc
aas
stos
jecxz
xor
jo
ss
cdq
scas
icebp
clc
aas
ins
xchg
jecxz
adc
test
call
aas
and
popf
mov
aaa
aaa
stc
aas
mov
pop
addr16
inc
pop
stc
aas
cmp
movs
xchg
jl
jbe
push
dec
ficomp
rol
popf
mov
icebp
mov
into
xchg
mov
lock
aas
mov
jl
cmp
and
sbb
stc
aas
outs
dec
out
retf
cmp
in
jnp
or
aas
xor
sbb
dec
pop
xchg
mov
fwait
xor
aas
stos
fdivr
xor
mov
push
cli
aas
loope
(bad)
fld
popf
mov
sahf
jns
aas
(bad)
arpl
retf
fwait
cmp
std
jns
imul
push
leave
cli
nop
cmp
repz
shr
xor
(bad)
mov
lahf
call
pop
xor
mov
lea
pop
push
sti
aas
and
or
mov
mov
xlat
test
pop
and
pop
in
jb
sti
aas
jecxz
mov
mov
jbe
sti
aas
cmp
mov
mov
sti
aas
sub
cld
sahf
mov
push
int3
sti
aas
test
cmp
xlat
pop
ret
aas
jb
imul
std
sahf
mov
fwait
sbb
aas
fisttp
mov
cmp
inc
cld
aas
or
and
inc
fwait
cmp
rcl
icebp
addr16
aas
lods
cmp
dec
xchg
cmp
out
xchg
ins
(bad)
cld
aas
inc
pop
or
jno
imul
jmp
cmp
ret
pop
push
or
cld
aas
jb
adc
lea
pop
std
aas
pushf
jp
inc
aaa
mov
or
aas
ja
popf
jno
dec
popf
mov
sbb
aas
push
aaa
pop
xlat
add
cmp
leave
push
jecxz
std
aas
call
push
xchg
mov
out
std
aas
xor
pushf
cmp
mov
repz
std
aas
ret
js
ficom
xor
dec
sbb
movs
xchg
mov
inc
es
aas
xchg
adc
and
aas
mov
cs
(bad)
aas
(bad)
int3
test
cmp
dec
(bad)
sti
push
jp
aas
loope
or
and
xchg
cmp
nop
movs
mov
xchg
sub
icebp
mov
dec
iret
(bad)
aas
mov
pushf
mov
sbb
(bad)
aas
mov
movs
xchg
(bad)
popf
cmp
mov
(bad)
aas
inc
mov
cmp
inc
outs
pop
jbe
(bad)
aas
mov
cdq
cmp
mov
(bad)
aas
or
popf
mov
shl
repz
dec
xchg
jno
sub
sar
aas
out
gs
je
bound
add
add
add
inc
add
add
add
cmp
(bad)
(bad)
(bad)
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
aas
add
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
addr16
jg
push
aas
mov
imul
mov
aas
mov
cmp
mov
cli
inc
out
add
add
(bad)
(bad)
(bad)
inc
add
inc
inc
adc
add
add
lock
add
add
add
jg
add
add
add
inc
add
add
add
add
add
add
loopne
add
add
add
loopne
add
add
add
adc
add
add
add
clc
inc
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
add
clc
(bad)
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
(bad)
jg
cmp
inc
out
xor
xchg
push
repz
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
aas
add
add
add
lock
add
xor
add
add
add
inc
add
add
add
lock
add
add
add
jg
add
add
add
jg
add
add
add
jg
lds
aas
adc
and
(bad)
dec
mov
lds
mov
push
push
aad
push
jp
cwde
cdq
cdq
leave
aas
sbb
add
add
loopne
add
add
add
lock
add
add
add
lock
add
add
add
add
add
add
add
out
aas
add
add
add
out
aas
add
add
add
add
add
add
add
out
aas
add
add
add
out
aas
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
in
aas
add
add
add
in
aas
add
add
add
aas
add
add
add
aas
add
add
add
in
aas
add
add
add
in
aas
add
add
add
add
lods
jmp
add
add
add
aas
add
add
add
aas
add
add
add
jmp
repnz
cwde
jmp
cwde
jmp
inc
jmp
inc
jmp
in
jmp
add
in
jmp
add
call
add
add
add
aas
add
add
add
aas
add
add
add
call
add
cli
call
add
lods
call
add
lods
call
add
(bad)
call
add
(bad)
call
add
sbb
aas
add
add
add
call
add
shl
aas
add
add
add
out
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
out
add
add
add
out
add
add
add
out
add
add
add
out
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
out
add
add
add
out
add
add
add
in
add
add
add
in
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
in
add
add
add
in
add
add
add
in
add
add
add
in
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
jecxz
add
add
add
jecxz
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
loop
add
add
add
loop
add
add
add
loop
add
add
add
loop
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
loop
add
add
add
loop
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
add
add
add
test
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
cmp
test
(bad)
aas
adc
mov
leave
fidivr
add
fwait
jp
aas
xlat
out
daa
fldcw
and
add
ret
cmps
aas
shl
test
pop
cmp
xor
aas
inc
inc
mov
cmp
pop
inc
mov
rcl
rol
inc
cmp
mov
mov
inc
push
push
cmp
cmp
ins
xchg
mov
dec
jns
ds
pop
and
(bad)
aas
inc
cmp
cmp
sahf
xlat
sar
dec
js
and
or
cdq
ret
or
jns
dec
cmp
jb
dec
les
mov
sub
idiv
jbe
add
aas
in
(bad)
xlat
push
xor
or
out
and
add
mov
(bad)
xor
aas
cmp
mov
retf
sub
jmp
aaa
cmp
test
ds
xchg
into
aas
sbb
xchg
and
cmp
fdiv
and
iret
pop
aaa
cmp
add
sar
inc
or
out
xor
cmp
sbb
sar
mov
or
sbb
cmp
sub
test
cmp
loop
sar
ret
adc
and
add
push
sbb
sar
add
add
ret
aam
(bad)
int
or
cmp
sbb
pushf
or
cmp
sbb
pop
cli
mov
clc
dec
and
test
aas
sbb
mov
das
jb
cmp
sbb
aas
shl
(bad)
xor
mov
xlat
aas
mov
inc
addr16
scas
aas
cmp
rcr
push
pop
data16
cmp
add
fnstcw
inc
imul
push
fnstcw
pop
inc
repnz
add
fidivr
adc
adc
xchg
inc
fstp
(bad)
mov
xor
cmp
add
daa
sahf
int
fstp
push
fwait
xchg
outs
mov
cmp
mov
fdivr
ret
call
add
push
fnstsw
(bad)
cmove
sub
cmp
stos
aam
aas
std
sbb
sub
add
fidivr
mov
mov
cs
movups
aas
fdiv
aaa
popf
ja
sub
add
fistp
ins
(bad)
push
adc
ror
movs
and
dec
ins
sub
cmp
push
jb
aas
mov
loop
cmp
push
mov
rcr
dec
cs
jmp
loope
out
sub
adc
xor
aas
ret
shl
cmp
mov
loope
push
sub
add
outs
addr16
loope
stos
cmp
add
aas
jnp
dec
outs
push
cld
adc
sahf
ja
aas
jns
xor
cmp
sub
shl
mov
cmp
or
xor
pop
jecxz
xor
bound
fwait
xor
or
xor
cld
xchg
inc
sbb
fld
jecxz
mov
mov
fist
sbb
fsub
aas
ds
test
int
sub
iret
sbb
aas
test
push
mov
add
inc
iret
pop
arpl
aas
lods
retf
aad
sub
add
(bad)
call
test
xchg
test
ins
js
shr
in
and
xor
shl
es
sub
aas
leave
mov
push
add
sbb
xchg
ins
in
sahf
outs
shr
add
pop
push
stos
in
cli
arpl
jp
aad
add
and
sub
aas
mov
add
cmp
inc
cs
xor
xchg
push
repz
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
rcr
add
add
add
fstp
adc
(bad)
(bad)
(bad)
dec
(bad)
(bad)
dec
cmp
(bad)
jg
add
cmp
(bad)
jg
js
push
adc
pop
mov
pop
xor
pop
cmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
aas
add
add
add
lock
add
xor
add
add
add
inc
add
add
add
lock
add
add
add
jg
add
add
add
jg
add
add
add
jg
into
xchg
(bad)
adc
xor
or
xor
rcl
xchg
fadd
push
aas
neg
push
inc
xor
jp
mov
ins
jp
aas
add
in
test
jl
sbb
push
sub
add
fidiv
add
imul
add
xchg
aas
sbb
cld
cmp
ficomp
sahf
rcr
xor
neg
lods
mov
or
sbb
idiv
mov
icebp
bound
or
push
pop
cmps
aas
fist
sbb
mov
xchg
ror
push
shl
cmp
xor
lods
aas
pop
inc
fprem
fstp
cmp
adc
mov
jbe
scas
sub
pusha
icebp
in
pop
pushf
mov
aam
push
push
aas
loopne
cmp
sbb
mov
loop
cmp
daa
xchg
mov
rep
(bad)
int
les
cmp
jae
mov
lahf
jge
and
ret
pop
cmp
ja
mov
jp
mov
cmp
or
mov
int3
in
cmp
mov
mov
xor
icebp
ss
mov
mov
and
push
sub
es
sub
jmp
add
mov
repz
and
mov
lea
mov
add
cmp
fwait
ins
sar
cli
loope
lea
fisubr
lock
mov
cmp
aas
mov
xchg
icebp
sbb
add
(bad)
push
ret
ja
inc
or
sbb
test
or
add
pshufw
aas
jmp
mov
je
les
xor
mov
cmp
and
les
push
push
cs
jne
lds
sub
fbstp
cmp
sbb
lds
adc
sub
add
nop
push
mov
cdq
xchg
cld
sub
in
cmp
add
ins
pop
and
aas
int
inc
bound
push
sbb
xchg
mov
aas
lds
xchg
push
add
enter
xchg
add
push
or
int3
enter
iret
mov
add
out
fistp
aas
in
(bad)
jp
and
pop
jmp
repnz
push
xor
mov
sub
add
push
lds
stos
fs
imul
stc
jl
mov
aas
jb
js
and
xor
jecxz
int3
aas
jl
push
int
retf
xor
popf
xchg
int3
aas
jb
out
inc
mov
cmp
sti
adc
aas
or
sbb
pop
lahf
int
jae
xlat
mov
add
push
cmp
xchg
repnz
into
aas
xchg
adc
pop
pop
iret
aas
add
pop
cmp
sbb
idiv
and
pop
or
aas
jg
push
and
pop
cmp
or
(bad)
adc
cmp
xor
mov
cmp
jno
sar
xor
xor
add
sar
sbb
cmp
das
inc
sar
mov
xor
xchg
jp
aas
cdq
pop
sub
cmp
jp
sar
jle
jmp
iret
cmp
adc
fisttp
or
cs
daa
cmp
push
sar
stc
pop
movs
sub
jle
cmp
bound
aas
adc
or
sbb
inc
shl
aas
jns
sahf
lods
imul
or
aad
aas
mov
jmp
mov
sar
xor
mov
cdq
xchg
cmp
adc
pop
mov
pop
xor
pop
cmp
add
fstp
add
add
add
fstp
add
add
add
aas
add
add
add
aas
add
add
lock
add
lock
add
loopne
fidivr
add
add
loopne
fidivr
add
add
rcr
aas
add
add
rcr
aas
add
add
mov
add
add
add
add
add
add
add
add
fnstcw
add
add
push
add
aas
add
add
and
add
and
add
loopne
fdivr
add
add
loopne
fdivr
add
add
sub
xlat
aas
add
add
sub
xlat
aas
add
add
pusha
scas
xlat
aas
add
add
pusha
scas
xlat
aas
add
add
cwde
pop
xlat
aas
add
add
cwde
pop
xlat
aas
add
add
ror
xlat
aas
add
add
ror
xlat
aas
add
add
add
aas
add
add
add
aas
add
add
test
(bad)
aas
add
add
test
(bad)
aas
add
add
shl
(bad)
aas
add
add
shl
(bad)
aas
add
add
jo
aad
add
add
jo
aad
add
add
adc
add
adc
add
sub
aas
add
add
sub
aas
add
add
inc
and
aas
add
add
inc
and
aas
add
add
shl
aam
add
add
shl
aam
add
add
pusha
cmps
aam
add
add
pusha
cmps
aam
add
add
push
add
add
aam
add
add
clc
sub
aas
add
add
clc
sub
aas
add
add
js
sar
add
add
js
sar
add
add
cmp
add
add
add
adc
add
add
add
add
clc
dec
sar
add
add
clc
dec
sar
add
add
js
sar
add
add
js
sar
add
add
jo
sar
add
add
jo
sar
add
add
loopne
sar
add
add
loopne
sar
add
add
fdivr
aas
add
add
fdivr
aas
add
add
dec
dec
sar
add
add
dec
dec
sar
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
sar
add
add
jo
sar
add
add
pop
imul
add
sar
add
add
mov
add
add
add
add
add
add
add
add
jmp
add
add
sar
add
add
fadd
sar
add
add
fadd
sar
add
add
cmp
add
cmp
add
adc
aas
add
add
adc
aas
add
add
jo
sar
add
add
jo
sar
add
add
shl
aas
add
add
shl
aas
add
add
cwde
add
aas
add
add
cwde
add
aas
add
add
loopne
iret
aas
add
add
loopne
iret
aas
add
add
sub
add
add
sub
add
add
and
iret
aas
add
add
and
iret
aas
add
add
shl
aas
add
add
shl
aas
add
add
pusha
lahf
into
aas
add
add
pusha
lahf
into
aas
add
add
add
aas
add
add
add
aas
add
add
nop
sbb
aas
add
add
nop
sbb
aas
add
add
xor
int
add
add
xor
int
add
add
rcl
add
xchg
int
add
add
push
pop
int
add
add
push
pop
int
add
add
loopne
int
add
add
loopne
int
add
add
pusha
jecxz
aas
add
add
pusha
jecxz
aas
add
add
lock
int3
aas
add
add
lock
int3
aas
add
add
jo
int3
aas
add
add
jo
int3
aas
add
add
add
int3
aas
add
add
add
int3
aas
add
add
xor
aas
add
add
xor
aas
add
add
add
retf
aas
add
add
add
retf
aas
add
add
add
add
add
add
add
lock
add
add
add
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
inc
add
add
inc
add
add
add
cmp
add
add
add
cmp
add
add
add
cmp
sub
inc
adc
sub
adc
cli
inc
xchg
add
cli
inc
xchg
cmp
sahf
mov
cmp
sahf
mov
in
shl
pop
movs
push
push
push
lds
sub
es
push
movs
aas
jnp
(bad)
(bad)
(bad)
(bad)
fistp
dec
jne
push
mov
xor
sub
add
mul
push
ror
mov
add
popa
enter
mul
enter
inc
xchg
add
pop
cmps
call
pop
mov
add
pushf
das
jo
mov
shl
in
jecxz
add
mov
mov
rol
adc
add
lock
lds
call
bound
test
cmp
jb
add
mov
jmp
mov
cmp
imul
call
aam
add
outs
mov
mov
cmp
add
xchg
test
jecxz
mov
outs
jp
add
repnz
cwde
sub
cmp
jl
gs
imul
xor
cmp
pop
cmc
popf
sahf
add
mov
or
xor
cmp
add
cmps
test
add
mov
mov
jne
cmp
add
dec
clc
rcr
fisttp
mov
cmp
add
jge
int3
mov
mov
aaa
cmps
jno
add
shl
xor
cmps
add
ins
dec
sub
and
dec
cmps
fiadd
add
mov
mul
or
add
adc
cmp
mov
or
add
mov
cmp
cmp
mov
xchg
mov
jp
into
nop
jbe
daa
sub
aad
mov
sub
cmps
sub
jbe
stc
add
pop
out
shl
popf
push
sub
sbb
daa
mov
inc
outs
add
loop
arpl
fld
stos
add
sub
xor
outs
out
add
mov
cdq
test
mov
mov
and
add
fdiv
xchg
cdq
cmp
and
cmp
add
mov
cmp
cmp
sahf
mov
into
xchg
sbb
mov
push
add
and
call
cmps
cmps
pop
mov
popa
mov
push
jmp
pop
add
inc
mov
jae
mov
(bad)
stos
loope
gs
dec
iret
ss
add
addr16
mov
adc
dec
cdq
mov
enter
xchg
cmp
xchg
inc
fldcw
add
lea
mov
or
inc
pop
repz
xor
cmp
ja
cdq
scas
icebp
or
cmp
push
pushf
mov
(bad)
aaa
aaa
or
stos
(bad)
stc
and
call
ficomp
daa
into
xchg
sub
scas
jno
nop
lock
add
ins
fwait
cmp
in
jnp
or
add
daa
xchg
cmp
and
or
mov
jae
test
cmp
std
jns
imul
xchg
ja
mov
call
sub
cmp
adc
or
scas
add
mov
bnd
or
int
pop
or
push
ror
int3
or
mov
scas
xor
push
test
fwait
sbb
lods
pop
or
(bad)
loopne
cmp
rcl
icebp
addr16
push
imul
nop
out
fsub
mov
add
jo
cmp
mov
dec
sub
pop
cmp
cmp
movs
sti
fcomp
pop
or
aad
pop
mov
test
dec
sbb
mov
jnp
xchg
cld
or
pusha
add
je
idiv
mov
cs
push
add
dec
or
fst
push
add
and
cmp
pop
popa
out
sbb
push
add
test
xor
inc
outs
pop
jbe
ltr
mov
fcom
sldt
add
add
add
aas
add
add
add
adc
out
cmp
inc
xchg
add
mov
add
add
add
lock
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
out
jg
add
add
add
add
add
cmp
add
cmp
fs
add
fs
add
outs
gs
popa
data16
jb
add
outs
bound
add
pop
jns
add
xor
pop
jns
add
jns
outs
je
add
popa
bound
add
popaw
bound
add
add
arpl
add
add
cs
add
add
bound
add
add
arpl
add
add
cs
add
popf
ja
and
add
add
add
mov
mov
cmc
scas
aas
sub
ss
out
addr16
cmp
add
mov
add
add
out
mov
push
xchg
pusha
je
pop
add
add
add
add
mov
cwde
mov
enter
popa
add
add
add
aas
add
add
out
(bad)
ret
aas
xchg
clc
cmp
add
les
add
add
mov
xor
fdiv
add
add
add
enter
add
nop
retf
aas
and
and
add
add
add
add
aas
add
add
jne
iret
aas
(bad)
fld
(bad)
or
add
add
add
aas
add
add
inc
retf
mov
add
add
add
sar
add
add
(bad)
imul
add
add
add
aas
add
add
jo
mov
aam
adc
add
add
aas
add
add
not
aas
inc
adc
push
add
add
add
fdivr
add
add
dec
mov
aas
jmp
mov
add
add
fidivr
add
add
out
fidivr
jge
mov
pop
popa
cs
add
add
fdivr
add
add
mov
fdivr
fs
clc
sahf
in
adc
add
add
add
fidivr
add
add
lods
fnstsw
leave
fisttp
add
add
add
loopne
add
add
fld
aas
shl
mov
add
add
add
loope
add
add
sub
sbb
add
add
add
loop
add
add
inc
or
add
add
add
jecxz
add
add
sbb
idiv
add
add
add
in
add
add
xchg
loop
mov
in
or
add
add
add
in
add
add
inc
jecxz
pushf
or
add
add
add
out
add
add
shl
mov
(bad)
adc
add
add
add
out
add
add
test
and
div
add
add
add
call
js
cmp
aas
imul
add
add
add
jmp
test
adc
rcr
cmp
add
add
add
jmp
ins
out
add
and
add
add
add
jmp
add
add
cmps
add
aas
pop
xchg
out
arpl
add
add
aas
add
add
test
in
shl
add
add
aas
add
add
mov
push
lods
cmp
add
add
add
out
aas
add
add
cmc
lahf
call
mov
add
add
add
out
aas
add
add
jmp
adc
add
add
add
add
lock
add
add
cmp
mov
fcomp
add
add
add
add
and
pop
cmp
sub
add
add
add
icebp
aas
add
add
mov
mov
add
add
add
add
dec
add
aas
xchg
jb
in
daa
or
add
add
add
repnz
add
add
mov
cmp
sbb
add
add
add
add
jo
jmp
cmp
and
add
add
add
repz
add
add
popa
push
call
add
add
xor
add
add
in
aas
daa
pop
sbb
jl
cmp
add
add
add
hlt
aas
add
add
push
in
aas
into
jge
fs
and
add
add
add
add
push
outs
in
aas
xlat
mov
dec
push
js
add
add
add
cmc
aas
add
add
retf
xor
sub
add
add
add
add
out
aas
or
das
mov
add
add
add
aas
add
add
jl
aas
xchg
cmc
js
jl
xor
add
add
add
add
out
aas
sbb
fstp
cmp
adc
add
add
add
idiv
add
add
and
aas
mov
lea
add
add
xor
add
add
or
aas
mov
fnstenv
add
add
clc
aas
add
add
shr
gs
cs
add
add
add
push
lock
mov
cmps
inc
add
add
add
stc
aas
add
add
sub
aas
jbe
pop
mov
add
add
add
add
dec
lock
push
inc
pop
mov
add
add
add
cli
aas
add
add
adc
aas
daa
pop
loope
ror
add
add
add
add
lock
fwait
lahf
es
sahf
ret
add
add
add
sti
aas
add
add
lock
mov
dec
jb
push
inc
add
add
add
add
shl
aas
frstor
das
movs
daa
call
add
add
cld
aas
add
add
movs
repnz
pop
pop
int
add
aas
add
add
add
add
jmp
icebp
aas
or
aam
jge
pop
add
add
add
std
aas
add
add
gs
aas
out
dec
sbb
inc
add
add
add
add
sbb
rcr
push
into
nop
aas
add
add
add
(bad)
aas
add
add
addr16
aas
xchg
mov
sub
add
add
cmp
add
add
xor
sbb
xchg
dec
add
add
add
(bad)
aas
add
add
cmc
pushf
icebp
aas
xor
dec
add
add
add
add
int
arpl
repnz
inc
add
add
add
add
add
sub
shl
aas
fst
js
out
add
add
add
inc
add
add
call
adc
add
add
add
add
add
sar
add
add
add
add
add
lock
repnz
lds
xchg
mov
(bad)
dec
add
add
add
add
add
and
das
repnz
push
inc
dec
test
add
add
add
inc
add
add
mov
repnz
mov
add
add
add
add
xchg
pop
repnz
mov
adc
sar
add
add
add
add
add
push
out
jo
aas
xchg
push
dec
mov
add
add
add
inc
add
add
test
aas
inc
ss
xor
add
add
inc
add
add
xor
and
add
add
add
and
repnz
jae
add
add
add
add
add
add
inc
mov
retf
or
fsub
add
add
add
add
add
sub
fdivr
scas
rol
add
add
add
inc
add
add
push
out
aas
ffreep
sub
add
add
add
add
mov
push
dec
add
add
add
add
add
js
or
aas
sub
mov
add
add
add
add
add
add
in
repz
xor
jmp
add
add
add
inc
add
add
(bad)
sub
sub
ret
add
add
add
add
ds
mov
cmc
stos
xor
add
add
add
add
add
add
fwait
xlat
or
dec
add
add
add
add
shr
pop
aam
or
add
add
add
inc
add
add
out
repz
in
sti
cmps
sbb
add
add
add
add
cwde
cmp
cmp
add
add
add
add
ins
push
repz
push
loop
pop
push
sub
add
add
add
push
inc
add
add
repz
mov
cmp
add
add
add
inc
add
add
retf
and
cmovb
add
add
add
add
repz
test
jmp
add
rol
add
add
(bad)
repz
fwait
sbb
es
add
add
pop
inc
add
add
xchg
aam
aas
push
clc
inc
add
add
add
inc
add
add
(bad)
jo
ins
add
add
add
add
add
outs
adc
add
add
add
pop
inc
add
add
cld
repz
pop
mov
dec
add
add
add
or
add
(bad)
lds
hlt
aas
sub
lds
add
add
add
inc
add
add
adc
ins
sar
add
add
add
add
jne
in
inc
jecxz
add
add
add
or
add
inc
jo
hlt
aas
mov
push
adc
stc
xor
add
add
add
or
add
movs
cmp
hlt
aas
mov
mov
add
add
add
inc
add
add
inc
hlt
aas
div
aaa
add
add
add
add
push
hlt
aas
or
inc
retf
add
add
add
or
add
adc
cmp
dec
add
add
add
or
add
ror
hlt
aas
sbb
cmp
add
add
add
inc
add
add
ret
xchg
sbb
add
add
add
add
jnp
aas
xor
mov
xor
add
add
add
or
add
dec
sbb
test
add
add
add
or
add
mov
hlt
aas
(bad)
shl
inc
add
add
add
inc
add
add
imul
xchg
shl
add
add
add
add
movs
hlt
aas
js
xor
fwait
jne
add
add
add
or
add
cld
adc
dec
sub
bound
add
add
add
or
add
add
movs
mov
aas
sbb
es
int
inc
add
add
add
inc
add
add
cdq
sar
jecxz
dec
add
add
add
add
pop
retf
dec
outs
mov
add
add
add
or
add
add
js
hlt
aas
sub
cdq
cmp
add
add
add
or
mov
ss
dec
inc
sbb
cmp
add
add
add
inc
add
add
dec
in
aas
mov
dec
add
add
add
add
hlt
aas
adc
adc
add
ror
(bad)
div
aas
ds
es
add
add
add
push
inc
add
add
or
add
add
add
inc
add
add
dec
pop
cmc
aas
adc
push
push
or
add
add
add
add
pmaddwd
mov
movs
dec
add
add
add
push
inc
add
add
test
cmc
aas
xchg
mov
add
add
add
cmovo
add
pushf
jae
cmc
aas
add
xchg
dec
sti
push
dec
add
add
add
inc
add
add
inc
daa
cmc
aas
into
scas
mov
add
add
add
add
imul
cmc
aas
cmp
and
add
add
ror
add
add
movs
leave
iret
jmp
add
add
adc
add
or
ds
aas
xor
xchg
dec
arpl
add
add
add
adc
add
shl
aas
adc
xchg
add
add
add
inc
add
add
cmc
aas
add
dec
add
add
add
inc
add
add
push
cmc
aas
test
or
add
add
add
add
fcomp
aas
or
and
add
add
mov
add
sbb
aaa
add
add
add
adc
add
sub
cmp
add
add
add
adc
add
xor
cmc
aas
xchg
dec
adc
xor
add
add
add
inc
add
add
jbe
aas
push
mov
cs
and
add
add
add
adc
add
in
jl
aas
call
add
add
add
inc
add
add
in
and
mov
add
add
pusha
adc
add
xchg
nop
mov
aas
outs
sbb
add
add
add
add
neg
sub
add
add
add
add
sbb
mov
add
add
add
adc
add
add
pushf
cmc
aas
push
push
stos
js
jg
add
add
add
adc
add
push
push
mov
mov
mov
add
add
add
adc
add
xor
test
aas
push
(bad)
pop
and
mov
add
add
adc
add
adc
cmc
aas
lods
in
cmp
mov
add
add
add
inc
add
add
cmc
aas
jno
mov
or
add
add
add
inc
add
add
mov
and
xlat
shl
add
add
adc
add
add
cmc
aas
or
mov
add
add
add
add
adc
cmc
aas
or
shr
pop
cmp
add
add
add
adc
add
inc
pushf
retf
scas
mov
cli
cmp
add
adc
add
les
shl
aas
xchg
or
(bad)
cmp
add
adc
add
mov
stos
cld
xchg
(bad)
test
add
add
adc
add
test
(bad)
aas
mov
cs
xor
add
add
add
inc
add
add
loopne
aas
loop
jne
jl
cmp
add
add
add
inc
add
add
inc
sbb
cmp
add
add
add
add
push
lods
xor
std
mov
add
add
add
jnp
cmc
aas
sub
outs
inc
add
add
add
adc
add
and
hlt
cmc
aas
js
xchg
clc
adc
add
add
add
adc
add
adc
stc
cmc
aas
retf
aad
ins
test
add
add
add
adc
add
add
push
(bad)
cmc
aas
xchg
lock
cmp
add
add
adc
add
add
sub
scas
ficomp
cmp
add
inc
adc
add
add
cmc
pop
idiv
add
cmp
add
add
inc
add
add
lods
or
aas
sbb
push
and
add
add
add
add
mov
inc
ds
add
add
add
cmc
and
pusha
(bad)
dec
add
add
add
adc
add
add
test
idiv
cdq
jge
adc
xor
add
add
add
adc
add
add
push
pop
idiv
scas
xor
add
add
add
adc
je
and
aas
jmp
inc
add
add
add
adc
xor
daa
idiv
mov
and
and
add
add
add
inc
add
add
sub
aas
xchg
in
fiadd
add
add
add
inc
add
add
mov
cmovne
add
add
add
add
into
xor
aas
out
popa
repz
add
add
mov
add
add
idiv
stc
lea
mov
inc
add
add
add
adc
in
cmp
dec
inc
push
cmp
add
adc
inc
dec
inc
idiv
int
add
neg
add
add
push
inc
add
add
pusha
inc
idiv
popa
jo
dec
xor
add
add
push
inc
add
add
movs
cdq
cmp
add
add
add
inc
add
add
arpl
aas
movs
repnz
add
add
add
inc
add
add
push
idiv
dec
jns
ficomp
add
add
adc
add
add
cmp
aas
jbe
addr16
das
add
add
add
add
push
fimul
add
add
rcl
add
add
jmp
out
jecxz
jns
add
add
add
push
inc
add
add
pusha
idiv
inc
and
sbb
add
add
add
pop
inc
add
add
sti
out
movs
sahf
dec
add
add
add
pop
inc
add
add
and
aas
shl
shl
dec
add
add
add
inc
add
add
leave
imul
imul
sbb
jge
add
add
add
inc
add
add
mov
mov
add
add
add
add
cwde
fwait
clc
add
dec
add
add
add
add
mov
aas
sub
dec
add
add
add
pop
inc
add
add
jp
aas
jmp
icebp
inc
daa
cmp
add
add
pop
inc
add
add
jge
aas
pop
or
in
in
add
add
add
sbb
add
mov
xor
xor
dec
add
add
add
sbb
add
fsub
idiv
push
loop
adc
add
add
add
inc
add
add
idiv
push
dec
push
or
add
add
pusha
sbb
add
js
mov
aas
(bad)
push
xor
jmp
add
add
add
mov
aas
in
sub
add
add
add
add
idiv
jno
enter
dec
add
add
add
sbb
add
dec
jmp
idiv
enter
cmp
add
add
add
sbb
add
cmp
cwde
idiv
(bad)
mov
add
add
add
inc
add
add
fwait
idiv
retf
and
mov
add
add
add
sbb
add
inc
jne
idiv
out
xchg
repnz
add
add
inc
add
add
xchg
mov
add
add
add
inc
add
add
movs
idiv
pop
mov
add
add
add
add
test
xor
jge
add
add
add
add
stos
idiv
xchg
or
cmp
add
add
add
sbb
add
mov
lods
idiv
ins
or
push
pop
add
add
add
add
sbb
add
call
cli
test
shl
pusha
or
add
add
add
sbb
add
add
fs
idiv
add
add
add
sbb
add
adc
mov
aas
loope
push
jbe
inc
inc
add
add
add
inc
add
add
mov
enter
dec
add
add
add
inc
add
add
jge
adc
mov
add
add
add
mov
jbe
sti
loop
add
add
add
add
ret
int3
scas
sub
add
add
add
sbb
add
mov
(bad)
idiv
xchg
sti
call
xor
add
add
add
sbb
add
jl
(bad)
idiv
pop
jae
stos
mov
inc
add
add
add
sbb
add
adc
idiv
stos
fs
xchg
push
sbb
add
add
add
sbb
add
push
dec
idiv
mov
dec
dec
add
add
add
inc
add
add
iret
idiv
imul
(bad)
xor
add
add
add
inc
add
add
shl
aas
mov
retf
add
add
add
add
aam
aas
push
mov
mov
add
add
add
add
fwait
xlat
idiv
(bad)
(bad)
jmp
add
add
add
sbb
add
cmp
(bad)
aas
mov
mov
add
add
sbb
add
js
fdiv
aas
aaa
outs
lods
in
stos
dec
add
add
add
sbb
add
add
push
fcomip
aas
cmps
dec
arpl
pop
test
add
add
add
sbb
add
add
fsub
idiv
sti
jp
xchg
inc
add
add
inc
sbb
add
add
in
aas
and
icebp
inc
arpl
add
add
add
inc
add
add
aad
idiv
xlat
push
fisub
call
add
add
dec
jmp
hlt
add
add
add
add
add
xlat
ins
and
hlt
cmp
add
sbb
add
add
sbb
and
add
add
add
sbb
add
add
lock
pop
dec
add
add
add
sbb
cmp
repnz
add
sahf
dec
cli
test
add
add
add
sbb
dec
dec
cmc
idiv
call
add
add
add
inc
add
add
idiv
mov
sub
add
add
add
inc
add
add
idiv
cmp
idiv
std
xor
add
add
add
add
pop
jnp
jg
inc
add
add
add
add
mov
idiv
cli
inc
pop
retf
xchg
jg
add
add
add
sbb
inc
into
add
aas
push
xchg
nop
xor
add
add
add
sbb
clc
or
idiv
ja
xor
sbb
xor
add
add
add
push
inc
add
add
inc
add
dec
call
add
add
push
inc
add
add
pop
idiv
dec
pop
lods
das
add
add
add
inc
add
add
adc
add
add
add
inc
add
add
mov
pusha
xchg
add
add
add
add
idiv
call
add
add
add
add
and
idiv
ins
add
add
add
add
push
inc
add
add
inc
adc
aas
jle
sub
mov
add
add
add
push
inc
add
add
push
dec
rcl
add
add
add
pop
inc
add
add
jnp
mov
inc
add
add
add
pop
inc
add
add
idiv
jecxz
xor
ror
and
add
add
add
inc
add
add
test
xor
dec
or
add
add
add
inc
add
add
pop
inc
ficom
add
add
add
add
(bad)
addr16
shr
add
add
add
add
xor
sub
add
add
add
pop
inc
add
add
push
pusha
inc
xor
add
add
add
pop
inc
add
add
cmp
retf
inc
add
add
add
and
sub
stc
aas
pop
pop
adc
cmps
xchg
cmp
jns
je
ins
push
outs
outs
je
add
and
mov
mov
add
mov
repnz
retf
rcl
mov
add
dec
mov
les
or
scas
int
adc
leave
loop
popa
stc
push
mov
xor
adc
xlat
add
xor
rcl
mov
add
dec
fld
sbb
add
add
add
sbb
add
jmp
add
push
push
inc
push
cmp
repnz
mov
inc
div
mov
add
add
cmp
imul
outs
jb
sub
xor
outs
jae
popa
ins
ins
gs
ja
outs
outs
ja
pop
bound
ins
fs
jb
ins
gs
jae
pop
popa
jo
jae
bound
je
je
popa
jo
gs
jo
bound
add
icebp
dec
add
add
add
add
add
dec
add
add
add
add
icebp
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
inc
mov
dec
add
(bad)
(bad)
inc
add
add
add
cwde
mov
add
add
add
add
add
test
dec
add
add
icebp
dec
add
mov
add
add
add
add
add
aam
dec
add
mov
add
cld
icebp
dec
add
(bad)
(bad)
inc
add
add
add
les
add
repnz
add
add
add
add
add
add
sbb
dec
add
mov
dec
add
add
add
repnz
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
pusha
mov
add
add
add
add
add
jo
dec
add
add
mov
add
add
add
add
add
pushf
mov
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
and
dec
add
mov
add
add
add
add
add
call
mov
dec
add
add
add
repz
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
fdivr
add
pop
repz
add
dec
add
add
add
dec
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
repz
add
dec
add
add
add
mov
dec
add
add
add
repz
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
hlt
dec
add
add
add
add
add
add
int3
mov
dec
add
add
add
add
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
add
dec
add
mov
add
add
add
add
add
sbb
dec
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
or
add
pusha
hlt
dec
add
dec
add
add
add
dec
add
add
mov
add
pusha
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
mov
add
mov
dec
add
add
add
add
add
add
lods
mov
dec
add
mov
add
mov
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pushf
mov
add
mov
mov
add
add
add
add
add
clc
mov
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
call
add
add
hlt
dec
add
dec
add
add
add
add
add
dec
add
add
add
add
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xor
dec
add
hlt
dec
add
add
add
add
add
add
xchg
ror
ror
ror
add
add
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
icebp
dec
add
(bad)
(bad)
inc
add
add
add
les
add
hlt
dec
add
ror
add
add
add
add
add
add
ror
ror
mov
add
cld
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
in
ror
add
add
dec
add
add
add
dec
add
add
mov
add
adc
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
dec
add
add
add
add
add
add
xchg
ror
ror
mov
add
push
cmc
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
add
ror
add
add
add
add
add
add
ror
ror
add
add
add
(bad)
(bad)
inc
add
add
add
rol
dec
add
test
dec
add
add
add
ret
cmp
dec
add
dec
add
add
add
add
test
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sbb
dec
add
test
dec
add
add
add
dec
add
add
add
test
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
dec
add
add
add
ret
int3
ret
inc
mov
add
mov
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
ret
add
add
or
dec
add
dec
add
ret
inc
mov
add
test
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cld
ret
xor
dec
add
add
add
pop
ret
dec
add
dec
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
dec
ret
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
add
add
ret
dec
add
ret
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
in
dec
add
add
add
ret
dec
add
ret
dec
add
add
dec
add
add
and
dec
add
les
mov
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
dec
add
add
js
dec
add
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
pop
dec
add
add
add
add
add
add
int3
les
fadd
dec
add
ret
dec
add
add
add
add
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
add
dec
add
add
add
add
add
add
sbb
dec
add
lds
inc
lds
add
add
pop
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
or
dec
add
add
(bad)
(bad)
inc
add
add
add
pusha
lds
add
add
jo
dec
add
add
dec
add
add
add
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
dec
add
pop
dec
add
lds
add
add
in
lds
clc
lds
inc
mov
add
lock
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
fadd
dec
add
dec
add
(bad)
dec
add
add
add
(bad)
dec
add
dec
add
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
(bad)
dec
add
add
add
add
add
add
add
add
add
(bad)
dec
add
(bad)
dec
add
ret
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
add
(bad)
dec
add
add
add
(bad)
dec
add
(bad)
dec
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
dec
add
(bad)
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
dec
(bad)
dec
add
dec
add
add
add
dec
add
(bad)
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
xchg
(bad)
dec
add
or
loopne
dec
add
add
add
(bad)
dec
add
(bad)
dec
add
enter
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
loopne
dec
add
dec
add
(bad)
(bad)
inc
add
add
add
xor
dec
add
add
add
add
enter
add
add
dec
add
dec
add
add
add
dec
add
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pusha
enter
add
add
or
lods
enter
add
add
add
add
add
mov
enter
enter
leave
dec
add
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
lods
enter
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
leave
dec
add
enter
leave
dec
add
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
inc
leave
dec
add
add
add
add
leave
dec
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
je
dec
add
leave
dec
add
add
ror
dec
add
leave
dec
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
ror
add
dec
add
add
and
dec
add
retf
mov
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
or
push
add
add
add
add
add
add
dec
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
or
mov
dec
add
add
add
retf
aam
dec
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
dec
add
or
add
dec
add
add
add
dec
add
dec
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
dec
add
or
push
retf
dec
add
add
add
add
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
retf
dec
add
or
movs
retf
dec
add
add
add
dec
add
ret
inc
mov
add
and
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
movs
retf
dec
add
dec
add
retf
dec
add
add
add
dec
add
int3
dec
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
hlt
retf
dec
add
dec
add
dec
add
add
add
dec
add
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
inc
int3
dec
add
dec
add
add
add
add
add
add
pushf
int3
dec
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
int3
dec
add
add
add
int3
dec
add
int3
dec
add
enter
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
fmul
dec
add
int
add
add
add
dec
add
enter
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
or
jo
dec
add
add
add
int
add
dec
add
enter
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jo
dec
add
or
add
int
add
add
add
int
add
int
add
dec
add
enter
add
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
ror
add
or
add
into
dec
add
add
add
into
dec
add
into
dec
add
int3
dec
add
enter
add
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
adc
dec
add
dec
add
(bad)
(bad)
inc
add
add
add
push
add
add
add
add
add
add
dec
add
add
dec
add
add
add
add
add
add
movs
into
dec
add
lds
add
add
pusha
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xchg
into
dec
add
into
dec
add
add
add
add
add
into
dec
add
iret
dec
add
dec
add
dec
add
add
iret
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
loopne
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xchg
into
dec
add
add
(bad)
(bad)
inc
add
add
add
pusha
lds
lock
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
js
dec
add
add
add
iret
dec
add
add
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
js
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
int3
iret
dec
add
add
add
iret
dec
add
add
add
add
or
add
(bad)
(bad)
(bad)
inc
add
add
add
int3
iret
dec
add
or
or
dec
add
or
add
add
ror
add
add
dec
ror
pusha
ror
jl
dec
add
leave
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
cwde
ror
add
add
test
dec
add
add
leave
dec
add
add
or
dec
add
add
add
ror
in
ror
or
dec
add
add
add
add
or
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
int3
ror
or
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
add
add
dec
add
ror
inc
mov
add
sub
dec
add
add
add
ror
js
dec
add
ror
or
dec
add
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
ror
ins
push
dec
add
add
add
add
add
add
add
ror
sub
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
ror
add
add
or
dec
add
dec
add
ror
je
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
clc
ror
les
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
ror
add
add
ror
cmp
dec
add
add
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
nop
ror
add
add
mov
ror
dec
into
dec
add
cmovge
rcl
add
ror
call
ror
inc
ror
adc
add
add
add
add
cmovge
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
rcl
add
cmovge
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
dec
add
add
xor
dec
add
dec
add
add
into
dec
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pusha
ror
add
add
jo
dec
add
add
into
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pushf
ror
add
add
lods
ror
adc
add
add
ror
add
add
(bad)
dec
add
ror
add
add
nop
cmovge
(bad)
(bad)
(bad)
inc
add
add
add
int3
ror
add
add
adc
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
dec
add
cmovge
dec
aam
add
add
add
add
add
into
dec
add
add
add
cmovge
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
dec
aam
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
movs
aam
add
add
add
dec
add
add
dec
add
aam
add
add
add
aam
add
aam
add
aad
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
aam
dec
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
dec
add
add
add
add
add
add
add
add
into
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pop
aad
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
add
add
aad
add
into
dec
add
aad
add
add
add
aad
add
dec
add
(bad)
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
in
dec
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
cmp
dec
add
add
add
add
(bad)
dec
add
add
adc
ins
(bad)
dec
add
add
add
add
dec
add
add
add
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
ins
(bad)
dec
add
dec
add
add
add
add
add
add
int3
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
dec
add
(bad)
dec
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
inc
xlat
dec
add
dec
add
add
add
dec
add
xlat
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
xchg
xlat
dec
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
in
xlat
dec
add
add
add
xlat
dec
add
xlat
dec
add
add
dec
add
dec
add
add
add
dec
add
dec
add
add
fmul
adc
add
add
add
add
dec
add
add
add
(bad)
(bad)
inc
add
add
add
sbb
dec
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sbb
add
fmul
fmul
test
dec
add
fmul
adc
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
fmul
add
add
aam
dec
add
fmul
adc
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
dec
add
add
add
dec
add
fmul
adc
add
add
(bad)
add
add
dec
(bad)
pop
(bad)
sub
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
(bad)
add
add
cwde
(bad)
test
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
add
(bad)
add
add
call
(bad)
add
add
ins
adc
(bad)
(bad)
(bad)
inc
add
add
add
fcomp
dec
add
dec
add
add
add
fimul
cmp
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
dec
add
dec
add
add
add
dec
add
leave
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
adc
mov
add
add
add
add
add
add
fimul
aam
dec
add
fimul
add
add
enter
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
adc
(bad)
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
dec
add
fimul
cld
adc
cmp
dec
add
add
add
dec
add
add
enter
add
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
cmp
dec
add
add
add
add
add
fisttp
mov
aad
add
fisttp
adc
dec
add
add
add
add
adc
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
aam
dec
add
add
add
fisttp
mov
aad
add
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
push
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
fmul
add
add
add
add
or
add
movs
fmul
fcomp
dec
add
fmul
push
fisttp
fcomp
dec
add
dec
add
fisttp
adc
dec
add
add
fisttp
adc
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xchg
fmul
fcom
add
add
add
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
add
add
fisttp
hlt
fmul
push
fisttp
fcomp
dec
add
dec
add
fisttp
adc
dec
add
add
fisttp
adc
dec
add
add
add
adc
add
adc
add
(bad)
(bad)
(bad)
inc
add
add
add
ins
fisttp
add
add
jl
dec
add
fisttp
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
ins
fisttp
inc
adc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
rcr
add
add
add
fisttp
movs
fisttp
add
add
inc
adc
add
adc
add
(bad)
(bad)
(bad)
inc
add
add
add
rcr
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pushf
ror
dec
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
add
add
add
add
add
mov
fmul
add
add
adc
add
add
add
mov
fmul
in
dec
add
dec
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jl
dec
add
dec
add
add
add
fimul
loopne
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
enter
or
dec
add
dec
add
adc
dec
add
add
add
dec
add
dec
add
add
add
add
adc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
dec
add
adc
dec
add
add
sbb
add
dec
add
fisttp
dec
into
dec
add
add
add
adc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jo
dec
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
int3
fisttp
add
add
(bad)
dec
add
fisttp
dec
into
dec
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
loopne
add
fisttp
dec
into
dec
add
dec
add
loopne
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
dec
add
add
add
add
add
add
xchg
loopne
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
dec
add
loopne
add
add
add
loopne
add
loope
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
call
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
inc
loope
add
add
add
dec
add
dec
add
add
push
dec
add
dec
add
add
add
loope
add
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
add
add
aam
dec
add
fimul
sub
dec
add
add
dec
add
loope
add
add
add
dec
add
dec
add
leave
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cld
loope
add
add
add
add
add
add
add
into
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
dec
loop
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
movs
loop
add
add
add
dec
add
add
dec
add
loope
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
lock
add
jecxz
add
loop
add
fimul
sub
dec
add
add
pop
dec
add
dec
add
add
add
dec
add
dec
add
enter
add
add
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
pop
dec
add
dec
add
add
add
jecxz
add
jecxz
add
loop
add
fimul
sub
dec
add
add
add
add
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
js
dec
add
dec
add
add
add
(bad)
(bad)
inc
add
add
add
loopne
dec
add
add
add
jecxz
add
jecxz
add
loop
add
fimul
sub
dec
add
add
dec
add
in
add
add
add
in
add
in
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
and
dec
add
icebp
dec
add
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jl
dec
add
dec
add
add
add
in
add
in
add
mov
add
pushf
cmp
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
enter
add
dec
add
add
add
add
add
add
and
dec
add
in
add
add
add
add
cmp
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
dec
add
add
add
add
add
add
add
dec
add
dec
add
fimul
sub
dec
add
add
dec
add
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pusha
in
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
aam
dec
add
add
add
add
add
add
add
in
add
loope
add
leave
dec
add
add
dec
add
add
dec
add
add
add
add
add
je
add
(bad)
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
add
add
add
cmp
dec
add
add
dec
add
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
test
dec
add
add
add
add
add
add
add
dec
add
dec
add
add
add
cmp
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
shl
add
add
add
out
add
out
add
add
add
cmp
(bad)
(bad)
(bad)
inc
add
add
add
shl
add
cmp
add
add
add
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
out
add
out
add
add
add
cmp
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
je
add
(bad)
(bad)
(bad)
inc
add
add
add
test
dec
add
cmp
add
add
js
add
(bad)
(bad)
(bad)
inc
add
add
add
shl
add
cmp
add
add
jns
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
add
add
add
add
dec
add
dec
add
out
add
add
add
out
add
out
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
shl
add
dec
add
call
add
add
add
add
add
xor
dec
add
dec
add
into
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
call
add
add
add
add
add
sub
add
aad
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
cmp
add
call
add
add
add
push
add
add
call
dec
add
dec
add
leave
dec
add
add
jmp
dec
add
add
add
cmp
add
add
add
(bad)
(bad)
inc
add
add
add
shr
add
cmp
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
add
add
dec
add
dec
add
add
add
add
cmp
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
add
add
add
add
add
add
cmp
add
call
add
js
dec
add
in
add
add
add
add
add
add
dec
add
in
add
add
jg
add
and
add
adc
add
nop
inc
add
add
pop
or
fist
or
sti
pop
or
sbb
or
cmp
or
pop
sbb
add
or
cwde
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
or
js
or
cwde
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
or
mov
or
mov
sbb
add
or
sbb
add
sbb
add
sbb
add
or
dec
sbb
add
or
mov
or
fcomp
add
sbb
or
pop
sbb
or
cwde
sbb
or
fcomp
or
test
or
scas
push
or
ficomp
or
xor
or
test
or
loope
or
sub
or
fldenv
or
clc
and
add
and
add
or
jnp
or
cwde
and
add
and
add
and
add
and
add
or
mov
or
int3
and
add
and
add
or
test
or
shl
or
repz
add
and
add
and
add
or
mov
and
add
and
or
pop
or
push
or
jae
or
mov
or
mov
or
(bad)
or
stc
or
sub
or
pop
daa
or
mov
or
test
or
call
sub
add
or
cwde
sub
add
sub
add
sub
add
sub
add
sub
add
or
xchg
sub
add
sub
add
sub
add
or
push
sub
add
sub
add
sub
add
sub
add
or
mov
sub
add
or
sub
test
sub
add
sub
add
sub
or
fsubr
or
dec
or
push
or
fld
or
or
or
cmp
or
pop
das
or
mov
das
or
fsubr
or
and
or
popa
xor
add
xor
add
xor
add
xor
add
or
mov
or
mov
xor
add
xor
add
or
js
or
cwde
xor
add
or
and
add
cmp
add
cmp
add
cmp
add
cmp
add
or
icebp
cmp
add
cmp
add
or
jnp
or
stos
cmp
add
cmp
add
cmp
or
mov
aas
or
xor
add
or
jns
or
fwait
inc
or
mov
inc
or
sti
inc
or
and
add
or
leave
inc
or
cmp
mov
inc
or
sub
add
or
mov
inc
or
add
add
or
imul
add
inc
or
call
dec
or
sub
add
or
push
dec
or
mov
dec
or
fisttp
add
dec
or
sbb
add
dec
or
pop
dec
or
xchg
dec
or
test
or
fisttp
add
dec
or
cmp
add
or
jle
or
cwde
dec
or
ds
or
pop
dec
or
mov
add
add
dec
or
mov
dec
or
clc
dec
or
cmp
add
or
fmul
add
or
mov
dec
or
inc
dec
or
clc
dec
or
mov
add
push
or
rcl
add
or
clc
push
or
call
push
or
pop
push
or
test
push
or
rcl
add
push
or
and
add
or
jo
or
nop
push
or
loope
or
clc
push
or
sbb
add
or
js
or
test
or
mov
pop
or
push
pop
or
xor
add
or
jo
or
cwde
pop
or
rcr
add
pop
or
adc
xor
push
pop
or
cdq
pop
or
mov
pop
or
xor
add
or
enter
lock
or
and
add
pusha
or
push
pusha
or
mov
add
pusha
or
push
popa
or
sub
add
or
xchg
popa
or
lock
or
enter
nop
arpl
add
or
inc
or
jo
or
mov
or
nop
or
loopne
or
adc
add
or
and
mov
or
pop
or
clc
or
cwde
push
or
call
push
add
ins
or
pop
ins
or
call
ins
or
shr
add
add
outs
or
loopne
or
or
add
outs
or
cwde
outs
or
shr
clc
outs
or
js
or
test
or
repz
add
or
sbb
lds
fdiv
cld
je
add
jne
add
or
xchg
jne
add
jne
add
jbe
add
or
jg
or
stos
jbe
add
jbe
add
ja
add
or
push
ja
add
or
pushf
ja
add
ja
add
ja
add
js
add
or
imul
add
js
add
jns
add
or
xchg
jns
add
jns
add
jns
add
jp
add
jp
add
or
sahf
jp
add
jp
add
jp
add
jnp
add
or
inc
jnp
add
or
fwait
jnp
add
jl
add
jl
add
or
xchg
jl
add
jl
add
jl
add
jge
add
or
pushf
jge
add
jge
add
jle
add
add
or
call
add
jle
add
jle
add
jg
add
jg
add
or
mov
add
jg
add
or
cmp
or
outs
or
mov
or
rol
add
or
sbb
or
pop
or
add
or
add
or
xor
or
xchg
or
int
or
lock
adc
or
pop
or
jl
or
lahf
or
ret
add
or
or
add
or
jno
or
xchg
test
add
test
add
test
add
test
add
or
jbe
or
movs
test
add
test
add
xchg
add
xchg
add
or
add
add
or
mov
or
iret
xchg
add
xchg
add
mov
add
or
jle
or
mov
mov
add
mov
add
mov
add
mov
add
or
xchg
mov
add
mov
add
mov
add
mov
add
or
push
mov
add
mov
add
mov
add
mov
add
mov
add
or
or
add
mov
add
mov
add
or
daa
mov
add
or
jb
or
xchg
mov
add
mov
add
mov
add
lea
add
lea
add
or
mov
lea
add
lea
add
mov
add
or
push
mov
add
or
mov
(bad)
(bad)
(bad)
vprotb
or
into
(bad)
(bad)
nop
or
bound
or
test
or
retf
nop
or
out
nop
or
adc
or
jne
or
call
add
xchg
or
or
xchg
or
push
xchg
or
jns
or
pushf
xchg
or
rcl
or
pop
xchg
or
sub
or
jo
or
adc
add
xchg
or
icebp
xchg
or
add
add
or
xchg
xchg
or
test
or
retf
xchg
or
icebp
xchg
or
adc
or
push
xchg
or
jnp
or
mov
xchg
or
clc
xchg
or
xor
or
js
or
inc
xchg
or
js
or
adc
or
dec
cwde
or
inc
cdq
or
nop
cdq
or
push
call
or
add
or
cwde
pushf
or
adc
or
mov
popf
or
lock
or
and
or
pusha
sahf
or
mov
sahf
or
push
lahf
or
and
or
mov
lahf
or
lock
or
or
or
dec
mov
or
mov
mov
or
push
mov
or
and
add
mov
or
xor
add
movs
or
and
or
and
add
movs
or
loopne
or
sti
movs
or
and
or
push
cmps
or
enter
add
or
js
or
cmps
cmps
or
shl
add
test
add
or
xchg
test
add
test
add
test
or
push
test
or
mov
test
or
pop
stos
or
mov
or
in
or
pop
stos
or
sub
or
jo
or
fwait
stos
or
mov
stos
or
add
or
push
lods
or
cmps
lods
or
(bad)
(bad)
(bad)
push
dec
add
add
add
mov
add
add
(bad)
(bad)
call
add
add
in
dec
add
(bad)
(bad)
push
add
add
adc
dec
add
(bad)
(bad)
call
pop
dec
add
add
add
cmp
dec
add
(bad)
(bad)
push
pop
dec
add
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
hlt
hlt
dec
add
(bad)
(bad)
inc
add
add
add
add
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
sbb
dec
add
add
add
add
inc
adc
add
add
fs
dec
add
add
add
dec
add
add
(bad)
icebp
dec
add
add
add
(bad)
(bad)
inc
add
add
add
xor
inc
add
add
add
icebp
dec
add
add
add
(bad)
(bad)
inc
add
add
add
and
inc
add
(bad)
(bad)
call
dec
add
add
add
test
dec
add
(bad)
(bad)
push
dec
add
add
add
aam
dec
add
(bad)
(bad)
call
add
add
add
dec
add
(bad)
(bad)
push
add
add
sub
dec
add
add
add
and
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
js
dec
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
dec
add
(bad)
(bad)
jmp
sbb
and
add
in
dec
add
(bad)
(bad)
inc
sbb
and
add
adc
dec
add
(bad)
(bad)
jmp
sbb
add
add
sub
dec
add
add
add
sbb
and
add
cmp
dec
add
(bad)
(bad)
call
dec
add
add
add
js
dec
add
(bad)
(bad)
push
dec
add
add
add
movs
test
(bad)
(bad)
(bad)
call
add
add
shl
dec
add
(bad)
(bad)
push
add
add
cld
test
(bad)
(bad)
(bad)
call
sbb
and
add
sub
dec
add
(bad)
(bad)
push
sbb
(bad)
(bad)
(bad)
(bad)
clc
sbb
and
add
push
clc
dec
add
(bad)
(bad)
call
sbb
and
add
mov
dec
add
(bad)
(bad)
push
sbb
and
add
mov
dec
add
(bad)
(bad)
call
dec
add
add
add
dec
add
add
add
loopne
dec
add
(bad)
(bad)
push
dec
add
add
add
adc
dec
add
(bad)
(bad)
jmp
add
add
inc
stc
dec
add
add
add
nop
stc
dec
add
(bad)
(bad)
call
sbb
(bad)
(bad)
(bad)
(bad)
fcomp
dec
add
add
add
sbb
add
add
jmp
dec
add
add
add
sbb
add
add
(bad)
sbb
and
add
in
dec
add
(bad)
(bad)
jmp
sbb
add
add
sub
dec
add
add
add
sbb
add
add
inc
sbb
add
add
dec
sbb
(bad)
(bad)
(bad)
call
dec
add
(bad)
(bad)
push
dec
add
add
add
dec
add
add
add
adc
dec
add
(bad)
(bad)
call
add
add
add
add
dec
cli
dec
add
(bad)
(bad)
push
add
add
jl
dec
add
(bad)
(bad)
call
sbb
and
add
test
dec
add
add
add
clc
cli
dec
add
(bad)
(bad)
push
sbb
add
add
clc
sbb
add
add
add
add
add
add
sbb
add
add
add
sbb
add
(bad)
(bad)
push
sbb
add
add
add
sbb
add
add
add
dec
add
add
add
and
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
pop
sti
dec
add
add
add
mov
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
sbb
add
(bad)
(bad)
dec
sbb
add
(bad)
(bad)
call
sbb
add
add
add
in
dec
add
(bad)
(bad)
push
sbb
add
(bad)
(bad)
(bad)
clc
sbb
add
add
add
and
dec
add
add
add
js
dec
add
(bad)
(bad)
call
sbb
(bad)
call
sbb
add
and
add
sub
add
xor
(bad)
(bad)
cmp
(bad)
call
dec
add
add
add
test
dec
add
(bad)
(bad)
push
dec
add
add
add
dec
add
add
add
aam
dec
add
(bad)
(bad)
call
add
add
or
dec
add
(bad)
(bad)
push
add
add
xor
dec
add
(bad)
(bad)
call
sbb
xchg
sbb
add
add
dec
add
add
add
mov
dec
add
(bad)
(bad)
push
sbb
(bad)
(bad)
sti
sbb
add
add
dec
add
add
add
push
dec
add
add
add
push
dec
add
add
add
push
dec
add
push
dec
add
add
add
or
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
(bad)
jns
dec
add
(bad)
(bad)
call
add
add
add
add
add
add
inc
dec
(bad)
(bad)
(bad)
inc
push
dec
add
add
add
push
dec
add
add
add
push
dec
add
add
add
cmp
add
add
add
loopne
dec
add
(bad)
(bad)
push
push
dec
add
add
add
push
dec
add
add
add
pop
dec
add
add
add
pop
dec
add
add
add
pop
dec
add
add
add
pop
dec
add
pop
dec
add
add
add
cmp
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
cwde
dec
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
pop
dec
add
pop
dec
add
pop
dec
add
add
add
add
dec
add
(bad)
(bad)
push
pop
dec
add
add
add
pop
dec
add
add
add
and
add
add
push
and
add
add
sbb
dec
add
add
add
and
and
add
pop
add
add
add
(bad)
(bad)
inc
dec
add
(bad)
(bad)
dec
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
(bad)
(bad)
(bad)
dec
and
(bad)
(bad)
(bad)
call
and
(bad)
(bad)
(bad)
push
and
and
add
loopne
dec
add
(bad)
(bad)
call
and
(bad)
(bad)
(bad)
call
and
and
add
or
dec
add
(bad)
(bad)
push
and
add
add
cmp
dec
add
add
add
dec
add
add
add
inc
add
add
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
jl
dec
add
(bad)
(bad)
call
add
add
mov
add
add
(bad)
(bad)
push
add
add
add
add
in
dec
add
(bad)
(bad)
call
and
add
add
(bad)
dec
add
add
add
sbb
dec
add
(bad)
(bad)
push
and
add
add
sti
and
and
add
dec
add
add
add
add
add
movs
add
add
add
(bad)
(bad)
jmp
and
add
add
adc
dec
add
add
add
and
add
add
and
dec
add
add
add
dec
add
add
add
dec
add
add
add
daa
inc
add
add
add
add
add
add
add
add
add
cmc
dec
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
or
dec
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
mov
dec
add
(bad)
(bad)
jmp
and
(bad)
(bad)
(bad)
(bad)
jmp
dec
add
(bad)
(bad)
push
and
(bad)
(bad)
(bad)
inc
and
(bad)
(bad)
(bad)
dec
dec
add
add
add
add
add
(bad)
(bad)
push
and
add
add
cmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
call
dec
add
(bad)
(bad)
jmp
dec
add
add
add
pop
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
call
add
add
add
add
cmp
add
add
enter
(bad)
(bad)
(bad)
inc
and
add
add
enter
and
add
xchg
add
add
add
add
add
add
add
add
add
shl
add
add
add
(bad)
(bad)
inc
add
add
add
add
push
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
jmp
and
add
add
call
add
add
adc
add
(bad)
(bad)
(bad)
inc
and
add
add
add
inc
add
add
(bad)
(bad)
(bad)
jmp
and
add
add
add
and
add
add
add
jo
dec
add
(bad)
(bad)
call
dec
add
add
add
dec
add
add
add
movs
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
fadd
add
and
add
cmp
dec
add
(bad)
(bad)
push
add
add
add
add
and
add
(bad)
(bad)
dec
and
add
(bad)
(bad)
call
and
add
(bad)
(bad)
push
and
add
add
add
and
xchg
sbb
add
add
dec
add
(bad)
(bad)
jmp
and
add
sub
add
xor
add
ds
xchg
sbb
add
xchg
push
dec
add
add
add
add
add
add
add
pop
dec
add
add
add
inc
pop
dec
add
add
add
push
dec
add
add
add
cmc
dec
add
(bad)
(bad)
jmp
inc
add
add
add
icebp
dec
add
add
add
inc
add
(bad)
(bad)
jmp
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
into
and
add
(bad)
and
add
add
add
adc
add
loope
dec
add
add
add
and
add
add
add
adc
add
jmp
add
pop
es
add
add
add
and
(bad)
dec
es
add
(bad)
(bad)
call
es
add
(bad)
(bad)
push
es
add
add
add
dec
add
add
add
or
dec
add
(bad)
(bad)
jmp
dec
add
add
add
cmp
dec
add
(bad)
(bad)
inc
add
add
push
add
add
(bad)
(bad)
jmp
add
add
add
add
xchg
or
add
add
(bad)
(bad)
inc
es
add
add
add
es
add
add
add
enter
(bad)
(bad)
(bad)
jmp
es
add
add
add
cld
or
add
add
(bad)
(bad)
call
daa
dec
add
add
add
sub
dec
add
(bad)
(bad)
inc
dec
add
add
add
push
or
add
add
(bad)
(bad)
push
dec
add
add
add
or
add
(bad)
(bad)
jmp
add
add
lods
or
add
add
add
add
cld
or
add
add
(bad)
(bad)
inc
daa
dec
add
add
add
daa
dec
add
add
add
daa
dec
add
add
add
daa
dec
add
add
add
daa
dec
add
add
add
dec
or
add
add
(bad)
(bad)
inc
sub
add
add
or
dec
add
add
add
sub
(bad)
(bad)
(bad)
call
sub
(bad)
(bad)
(bad)
jmp
sub
and
add
xchg
or
add
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
push
(bad)
(bad)
push
dec
add
(bad)
(bad)
call
add
add
int3
or
add
add
(bad)
(bad)
push
add
add
clc
or
add
add
(bad)
(bad)
call
sub
and
add
and
dec
add
(bad)
(bad)
push
sub
and
add
push
or
add
add
(bad)
(bad)
call
sub
and
add
jl
dec
add
(bad)
(bad)
push
sub
and
add
test
dec
add
(bad)
(bad)
call
dec
add
add
add
aam
dec
add
(bad)
(bad)
push
dec
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
xor
dec
add
(bad)
(bad)
call
sub
add
add
shr
add
add
add
sub
add
add
jmp
add
add
pusha
or
add
(bad)
(bad)
inc
sub
and
add
movs
or
add
(bad)
(bad)
push
sub
add
add
and
dec
add
add
add
sub
add
add
dec
sub
and
add
ror
add
(bad)
(bad)
jmp
dec
add
add
add
adc
dec
add
(bad)
(bad)
inc
add
add
inc
or
add
(bad)
(bad)
(bad)
jmp
add
add
ins
or
add
(bad)
(bad)
(bad)
inc
sub
and
add
cwde
or
add
(bad)
(bad)
(bad)
push
sub
and
add
les
add
(bad)
(bad)
(bad)
call
sub
add
add
sbb
dec
add
add
add
lock
add
(bad)
(bad)
(bad)
push
sub
add
add
cmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
and
dec
add
add
add
mov
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
push
dec
add
(bad)
(bad)
call
sub
(bad)
(bad)
(bad)
(bad)
fsubr
dec
add
add
add
sub
add
add
call
(bad)
(bad)
push
sub
(bad)
(bad)
(bad)
(bad)
clc
sub
and
add
dec
cmovl
(bad)
(bad)
(bad)
call
sub
add
(bad)
(bad)
call
sub
add
add
add
sub
add
add
add
sub
add
(bad)
(bad)
push
sub
add
(bad)
(bad)
(bad)
cmp
add
(bad)
(bad)
call
dec
add
add
add
dec
add
add
add
jl
dec
add
(bad)
(bad)
call
add
add
mov
dec
add
(bad)
(bad)
inc
sub
add
(bad)
(bad)
dec
sub
add
add
add
fmul
dec
add
(bad)
(bad)
jmp
sub
add
add
add
sub
add
add
add
sub
add
add
add
adc
dec
add
(bad)
(bad)
call
sub
add
sbb
add
and
xchg
sbb
add
add
add
add
add
lods
adc
add
add
(bad)
(bad)
inc
dec
add
(bad)
(bad)
dec
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
and
dec
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
add
add
add
add
sub
(bad)
dec
sub
(bad)
call
sub
(bad)
push
sub
add
clc
sub
(bad)
(bad)
clc
sub
add
add
dec
add
add
add
pop
adc
add
add
add
add
rcl
add
(bad)
(bad)
jmp
cs
add
add
add
cs
add
add
add
cs
add
add
add
cs
add
add
add
dec
add
(bad)
(bad)
jmp
dec
add
add
add
call
add
add
add
add
cmp
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
call
cs
add
add
add
jo
dec
add
(bad)
(bad)
push
cs
add
add
add
pushf
adc
add
add
(bad)
(bad)
jmp
das
dec
add
add
add
enter
(bad)
(bad)
(bad)
call
dec
add
add
add
hlt
adc
add
add
(bad)
(bad)
inc
add
add
dec
add
add
add
dec
add
add
add
add
add
and
dec
add
(bad)
(bad)
push
add
add
adc
add
add
(bad)
(bad)
call
das
dec
add
add
add
nop
adc
add
add
(bad)
(bad)
inc
xor
add
add
lock
dec
add
add
add
das
dec
add
add
add
xor
and
add
mov
add
add
(bad)
(bad)
inc
dec
add
add
add
xor
add
add
cmp
dec
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
push
dec
add
(bad)
(bad)
(bad)
js
dec
add
(bad)
(bad)
inc
add
add
inc
adc
add
add
add
movs
adc
add
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
add
add
xor
(bad)
(bad)
(bad)
push
xor
and
add
int3
adc
add
(bad)
(bad)
jmp
xor
(bad)
(bad)
(bad)
jmp
xor
and
add
clc
adc
add
(bad)
(bad)
inc
dec
add
add
add
sub
dec
add
(bad)
(bad)
push
dec
add
add
add
pop
adc
add
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
add
add
test
add
(bad)
(bad)
(bad)
call
xor
(bad)
(bad)
(bad)
(bad)
fdiv
dec
add
(bad)
(bad)
jmp
xor
and
add
rcl
add
(bad)
(bad)
inc
xor
and
add
cld
adc
add
and
add
dec
push
dec
add
(bad)
(bad)
jmp
xor
(bad)
(bad)
(bad)
jmp
xor
(bad)
(bad)
(bad)
push
xor
add
add
cmp
dec
add
add
add
dec
add
(bad)
(bad)
dec
dec
add
(bad)
(bad)
call
dec
add
(bad)
(bad)
push
dec
add
add
add
test
dec
add
(bad)
(bad)
call
add
add
mov
dec
add
add
add
add
dec
add
(bad)
(bad)
push
(bad)
(bad)
(bad)
mov
(bad)
(bad)
inc
xor
add
add
enter
add
add
shl
dec
add
add
fdiv
dec
add
xor
add
xor
add
xor
add
add
lock
add
add
clc
xor
add
add
add
dec
add
add
or
dec
add
add
adc
dec
add
add
sbb
dec
add
add
and
dec
add
add
and
dec
add
add
sub
dec
add
add
xor
dec
add
(bad)
(bad)
(bad)
cmp
dec
add
(bad)
(bad)
inc
dec
add
add
add
int3
pop
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
or
add
jmp
add
add
xor
or
add
shl
add
add
add
xor
or
add
shl
dec
add
add
add
xor
add
add
stc
xor
add
add
add
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
test
dec
add
(bad)
(bad)
dec
cmp
add
add
xor
add
add
add
xor
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
xor
add
xor
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
adc
dec
add
xor
add
sub
add
xor
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
xor
add
ja
dec
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
add
add
xor
add
iret
xor
add
fidiv
add
in
dec
add
add
add
xor
add
sti
xor
add
push
ss
add
add
add
ss
add
ss
add
ss
add
add
add
ss
add
add
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
ss
add
ss
add
add
add
add
add
add
add
add
add
add
add
add
add
ss
add
ss
add
ss
add
add
add
ss
add
add
add
ss
add
add
clc
ss
add
add
add
dec
add
add
push
aaa
dec
add
add
sbb
dec
add
add
and
dec
add
add
das
aaa
dec
add
add
cmp
dec
add
add
inc
aaa
dec
add
add
push
aaa
dec
add
add
pop
aaa
dec
add
add
data16
dec
add
add
jno
dec
add
add
jl
dec
add
add
xchg
dec
add
add
xchg
aaa
dec
add
add
popf
aaa
dec
add
add
test
dec
add
add
mov
dec
add
add
mov
add
add
aaa
dec
add
add
aam
dec
add
add
fdiv
dec
add
add
out
dec
add
add
out
aaa
dec
add
add
div
dec
add
add
push
dec
add
add
pop
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
popa
add
add
cmp
popa
add
add
cmp
arpl
add
inc
cmp
arpl
add
dec
cmp
add
add
dec
add
add
pop
cmp
add
add
dec
add
add
outs
cmp
imul
dec
add
add
jg
dec
add
add
xchg
dec
add
add
(bad)
cmp
ins
add
add
add
add
add
add
add
add
add
add
add
add
cmp
jb
add
out
cmp
jb
add
idiv
dec
add
add
add
cmp
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
call
cmp
and
add
pusha
sbb
add
add
add
mov
add
add
(bad)
(bad)
push
cmp
add
add
cmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
pop
cmp
add
add
pusha
cmp
add
add
push
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
dec
add
cmp
or
cmp
or
cmp
or
add
jb
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
cmp
or
add
retf
add
add
add
cmp
pop
add
add
cmp
sbb
add
loop
dec
add
add
add
cmp
or
add
repnz
or
add
cli
cmp
sbb
cmp
push
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
push
add
add
cmp
or
add
inc
cmp
or
add
dec
cmp
add
add
cmp
add
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
(bad)
dec
cmp
and
add
sub
dec
add
add
add
sbb
add
(bad)
(bad)
jmp
cmp
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
push
cmp
add
add
clc
cmp
add
add
add
dec
add
add
add
cmp
add
add
adc
dec
add
add
add
cmp
(bad)
(bad)
(bad)
jmp
cmp
and
add
in
push
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
je
dec
add
add
jl
dec
add
add
add
dec
pop
dec
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
fdivr
dec
add
add
add
cmp
and
add
jo
dec
add
(bad)
(bad)
inc
cmp
add
add
add
movs
pop
dec
add
(bad)
(bad)
push
cmp
add
add
add
rcr
dec
add
(bad)
(bad)
jmp
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
cld
pop
dec
add
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
add
add
cmp
dec
add
(bad)
(bad)
inc
cmp
add
add
add
cmp
add
add
add
je
dec
add
(bad)
(bad)
(bad)
call
add
add
cmp
add
add
add
test
dec
add
(bad)
(bad)
call
cmp
xchg
sbb
add
add
and
add
add
add
add
sub
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
(bad)
(bad)
dec
dec
add
add
add
dec
add
add
add
dec
add
add
pusha
cmp
add
push
add
add
dec
add
add
js
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
sar
add
cmp
add
sar
add
fdivr
add
loopne
dec
add
add
loopne
dec
add
add
add
cmp
add
loopne
dec
add
add
add
cmp
add
clc
cmp
add
add
dec
add
add
add
ds
add
ds
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
cmp
dec
add
add
add
ds
add
add
add
dec
add
add
add
ds
add
add
add
dec
add
ds
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
dec
add
ds
add
add
add
add
add
add
add
(bad)
(bad)
push
add
add
adc
dec
add
(bad)
(bad)
call
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
dec
add
add
add
dec
add
aas
dec
add
aas
dec
add
aas
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
dec
add
(bad)
(bad)
call
aas
dec
add
add
add
aas
dec
add
(bad)
(bad)
(bad)
fdivr
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
lock
dec
add
add
clc
aas
dec
add
add
add
add
add
or
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
push
add
add
dec
add
add
jo
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
dec
add
add
add
inc
dec
add
add
enter
and
add
rol
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
(bad)
(bad)
jmp
inc
dec
add
add
add
fsub
add
(bad)
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
(bad)
(bad)
inc
dec
add
(bad)
(bad)
dec
dec
add
(bad)
(bad)
jmp
dec
add
add
add
call
add
add
(bad)
(bad)
call
add
add
adc
dec
add
(bad)
(bad)
push
add
add
inc
daa
dec
add
(bad)
(bad)
call
inc
dec
add
add
add
ins
daa
dec
add
(bad)
(bad)
push
inc
dec
add
add
add
cwde
daa
dec
add
(bad)
(bad)
call
inc
dec
add
(bad)
(bad)
call
inc
dec
add
add
add
les
dec
add
add
add
sbb
dec
add
(bad)
(bad)
push
inc
dec
add
add
add
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
push
add
add
(bad)
(bad)
call
add
add
dec
add
add
add
add
add
add
add
dec
add
add
add
add
add
mov
add
add
add
add
add
inc
dec
add
add
add
aam
dec
add
(bad)
(bad)
inc
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
lock
dec
add
add
clc
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
sub
add
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
add
add
add
add
dec
add
add
pusha
inc
dec
add
inc
dec
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
(bad)
(bad)
(bad)
fadd
add
add
rol
cmp
aas
or
sbb
ins
jns
mov
jmp
xor
sar
repz
(bad)
ficomp
pop
fcomp
dec
loope
mov
xchg
cli
arpl
loope
nop
out
mov
sbb
mov
pop
ficom
cmp
outs
fldcw
push
mov
xchg
test
push
nop
push
push
sbb
test
dec
dec
jmp
jae
sbb
arpl
icebp
add
cmp
outs
dec
sub
sbb
mov
fidiv
inc
pop
(bad)
jl
cmp
das
dec
retf
mov
or
fld
cmp
mov
and
pop
pop
xor
scas
imul
iret
sub
retf
popf
jecxz
lds
mov
aas
cmc
push
jle
in
adc
stos
inc
retf
mov
call
aaa
aas
cmp
outs
or
or
clc
pop
or
data16
cli
fmul
dec
cmp
adc
sub
(bad)
daa
in
xbegin
and
data16
repz
jl
mov
jp
lods
sub
pop
push
aaa
nop
lods
imul
das
loope
or
jnp
dec
pop
addr16
sbb
imul
das
leave
pop
push
lods
iret
cli
stos
pushf
xor
aas
jnp
mov
lods
and
sub
or
(bad)
jmp
cmc
inc
or
lods
out
cmps
ficomp
pop
out
in
iret
rol
mov
dec
ja
mov
sub
test
out
mov
stos
scas
cs
movntps
fstp
ret
lods
cmp
(bad)
psllw
int
mov
push
jbe
clc
xor
and
add
idiv
test
nop
lahf
into
and
pop
push
iret
sub
aas
cs
fwait
fwait
pop
ds
test
or
ds
add
out
or
(bad)
mov
cld
(bad)
xor
mov
or
add
lea
inc
pop
das
push
iret
es
and
ret
fwait
xor
das
jg
mov
jp
imul
(bad)
fimul
scas
hlt
mov
(bad)
mov
jmp
cvtpi2ps
aas
rcr
sahf
push
pop
xchg
fld
aaa
inc
(bad)
xchg
adc
addr16
stos
inc
mov
daa
push
fdiv
mov
cdq
dec
outs
(bad)
imul
das
mov
add
mov
adc
dec
outs
mov
repz
fimul
push
mov
pop
push
xor
out
fcmovu
(bad)
adc
dec
sbb
sbb
add
mov
lahf
in
cmp
mov
rol
jbe
das
dec
aas
sub
test
(bad)
ins
mov
int3
fsub
aaa
or
lods
and
out
push
pop
fcom
mov
std
call
mov
iret
dec
leave
fild
enter
sbb
adc
std
dec
(bad)
add
cmp
imul
out
sti
jg
cmp
(bad)
imul
jp
mov
and
mov
inc
pop
sub
jmp
add
or
cmps
popa
jg
arpl
(bad)
out
mov
fstp
popf
popf
leave
adc
cmp
sbb
push
repnz
stos
xchg
imul
mov
out
retf
fisubr
mov
and
call
cmps
mov
pop
repz
jg
xchg
stos
lds
imul
test
aas
add
and
mov
(bad)
lods
popf
cmp
inc
in
jp
rcr
stc
mov
test
pop
dec
pop
push
cld
into
mov
adc
leave
nop
fisubr
inc
add
push
pop
sbb
sub
push
fldcw
out
sbb
stos
stos
mov
mov
jg
(bad)
or
imul
fwait
jg
inc
sub
or
xor
dec
sti
xchg
sbb
imul
call
loop
pop
iret
push
retf
leave
inc
js
sar
scas
sti
imul
pop
xchg
mov
pushf
stos
pop
dec
in
adc
pop
outs
sub
jp
fmul
xor
mov
in
xchg
rcr
pop
fld
out
sub
sahf
sar
push
pop
fild
loope
repz
add
push
xor
and
scas
stc
xchg
(bad)
out
jge
cmp
jge
cli
ja
mov
fwait
xchg
pop
out
fist
mov
dec
pop
pop
dec
pop
mov
push
retf
inc
stos
mov
pushf
dec
in
call
dec
in
mov
or
or
dec
sbb
(bad)
cmp
or
xlat
popa
icebp
sub
and
scas
mov
pop
xchg
ret
cli
imul
push
or
into
cld
fucomi
jle
mov
test
lods
mov
outs
je
jae
mov
lock
pop
(bad)
iret
(bad)
std
aas
addr16
cmp
pop
retf
or
mov
push
ficom
jmp
mov
pop
fnstcw
mov
scas
inc
ins
pop
pop
cdq
cmp
cmps
jns
fcom
cld
push
or
iret
jno
mov
jbe
ficomp
pop
sbb
cmp
lods
popa
xor
or
pop
test
in
in
retf
popa
and
scas
arpl
dec
rcl
dec
pop
popa
jle
ins
mov
(bad)
clc
jbe
dec
mov
stc
lea
jmp
test
pop
cs
sub
xor
fnstcw
fnstsw
mov
add
aam
scas
in
jmp
movs
pop
(bad)
std
iret
daa
mov
add
jp
mov
repz
ret
mov
std
mov
sub
dec
sbb
inc
cvtdq2ps
jp
mov
push
sbb
out
mov
mov
cmp
jno
sub
xor
fst
loop
leave
out
push
push
jne
jb
xchg
fadd
push
mov
rcr
in
pop
daa
sub
mov
push
sbb
sub
cmp
in
(bad)
push
mov
(bad)
into
add
jmp
retf
(bad)
adc
sbb
xchg
and
sub
inc
cmp
aas
jbe
data16
stos
xchg
jecxz
jle
cmc
sbb
jle
clc
imul
ja
cmp
jno
pop
not
mov
jge
adc
inc
fisttp
loope
ja
sub
rcl
rol
lods
add
aad
pop
mov
inc
jecxz
hlt
pop
jg
ret
xchg
jg
pop
aas
or
aas
mov
ret
pop
adc
fdivr
daa
cmp
jmp
outs
jns
mov
push
in
jne
in
jbe
shr
or
in
cmp
or
leave
sbb
jmp
xor
sbb
test
es
xchg
add
jmp
cmp
out
adc
or
mov
cli
jmp
sbb
add
bound
sbb
push
pop
jg
(bad)
xchg
outs
cmp
(bad)
mov
mov
mov
sti
es
addr16
repz
mov
jae
mov
dec
daa
cli
ror
cs
int
and
dec
sar
retf
test
mov
and
adc
add
pop
fisttp
sub
out
xchg
ja
aam
sbb
sbb
lea
jmp
xor
cmp
sbb
ins
mov
in
test
mov
stc
aam
dec
sahf
retf
fwait
(bad)
icebp
sub
mov
rcl
cli
mov
out
std
test
loope
aam
in
add
popf
jae
test
jnp
pop
(bad)
test
scas
jae
mov
out
jecxz
cld
pop
int3
call
pop
sub
mov
retf
mov
dec
lods
mov
jp
mov
push
bound
outs
mov
add
sub
test
sbb
stos
leave
rcr
mov
mov
mov
inc
(bad)
xchg
in
fadd
arpl
jle
and
sbb
inc
es
(bad)
jge
cld
pop
inc
dec
call
cmp
stc
cli
mov
(bad)
push
pop
cmp
pushf
jmp
mov
pop
(bad)
ror
pop
scas
call
mov
push
fstp
add
or
push
cmp
pop
push
jmp
pop
je
jmp
aad
iret
xor
add
jo
fisub
pop
sti
dec
cmp
mov
cdq
xor
arpl
ins
inc
imul
pushf
xchg
aam
retf
into
adc
xchg
push
test
ret
dec
cmp
sbb
or
push
arpl
pop
cs
push
push
mov
adc
outs
sahf
cmp
pop
iret
repz
pop
fsubr
xchg
js
jge
je
or
imul
xlat
jbe
(bad)
imul
iret
popa
sbb
outs
loop
or
mov
dec
stos
xlat
mov
jecxz
xchg
out
mov
and
push
outs
or
fwait
mov
mov
sahf
int3
out
or
retf
cmp
xor
ret
mov
loop
and
aam
dec
pop
sub
cdq
mov
std
and
cwde
sub
sub
sti
or
jae
test
pop
loopne
rcr
pop
out
adc
inc
mov
je
dec
push
outs
nop
clc
movs
cmp
shr
push
sbb
mov
shl
jne
sbb
adc
dec
mov
pop
pop
jg
mov
push
dec
out
xchg
(bad)
inc
pop
fwait
idiv
das
and
scas
push
jns
jmp
mov
xor
out
repz
stos
(bad)
pop
add
or
aas
pop
inc
fld
or
cs
mov
dec
stc
jmp
cli
pop
cs
dec
pop
call
ins
jecxz
imul
in
retf
mov
pop
cmp
ror
enter
mov
fcmovu
fdiv
push
cmps
mov
scas
adc
mov
aad
pop
jecxz
jnp
fmulp
cdq
lods
inc
jmp
add
mov
and
push
das
es
jae
mov
ja
mov
in
neg
sub
pop
cwde
daa
mov
pop
dec
push
cmp
mov
pop
adc
cmp
cmp
push
sub
pop
xor
sahf
sbb
sbb
(bad)
and
dec
pop
jp
pop
mov
pop
dec
dec
cs
ja
gs
mov
frstor
jbe
jecxz
dec
cmc
std
xlat
(bad)
aaa
punpckhdq
inc
jno
scas
cmp
jmp
cmc
or
cmc
add
mov
jmp
fs
jmp
xchg
push
das
in
push
jbe
xchg
mov
mul
out
fwait
adc
add
stos
fistp
or
lea
mov
mov
(bad)
cdq
fsubr
dec
shl
adc
(bad)
scas
mov
mov
jmp
xor
ret
xor
retf
push
xor
cmp
sbb
xchg
adc
mov
ror
fs
in
into
out
mov
and
jmp
ins
adc
inc
dec
inc
sbb
jecxz
adc
lock
xor
inc
jb
jmp
pop
gs
mov
jge
push
in
adc
sub
push
cdq
das
movs
shl
std
mov
fstp
jbe
pop
pop
pop
add
or
ja
test
xlat
mov
fidiv
sub
sbb
cmp
add
aam
jmp
call
outs
xchg
call
adc
aas
js
out
jmp
shl
adc
cli
jno
push
(bad)
(bad)
mov
cmp
mov
jge
fmul
je
cdq
paddsb
mov
int
xchg
clc
cld
cwde
jnp
sub
sbb
rcr
inc
stos
out
js
aas
rcr
scas
test
mov
fcmovne
mov
lods
jmp
push
out
and
out
sbb
pop
jmp
lods
mov
pop
syscall
xchg
out
jnp
jg
sar
xlat
jne
ret
mov
sahf
hlt
int
aas
cmps
ds
inc
jo
sti
ins
jle
jmp
sahf
cld
shl
pusha
ja
out
lahf
fcmovne
ficomp
daa
imul
sbb
xlat
mov
retf
pop
push
aas
out
sti
stos
test
inc
adc
jmp
aas
ror
sbb
scas
inc
popf
dec
fwait
xchg
jnp
fdivr
cmp
scas
mov
sbb
ins
lods
xchg
nop
into
mov
cs
sub
mov
loop
out
mov
sbb
add
mov
stos
ficom
sar
dec
fmul
jne
mov
loopne
ins
retf
mov
jle
fcom
fmul
jg
loopne
mov
imul
pop
mov
mov
pushf
inc
mov
(bad)
mov
shl
or
addr16
in
add
mov
pusha
mov
push
dec
fs
shl
ficom
xchg
leave
sbb
adc
(bad)
push
aad
jno
sar
cmps
pusha
mov
pop
fxch
cdq
pushf
jmp
push
pop
std
int3
push
pop
pop
sti
jns
mov
movs
ja
iret
mov
test
jge
loope
jnp
fstp
stos
and
scas
(bad)
iret
mov
jno
pop
xor
test
cmp
das
pop
mov
push
retf
pushf
inc
mov
mov
call
adc
xchg
push
lds
jmp
call
and
adc
imul
ret
mov
jp
jmp
hlt
(bad)
int3
outs
test
mov
aas
dec
push
adc
loope
arpl
out
arpl
lahf
and
int3
rcl
pop
pusha
fs
scas
push
jae
fsubr
adc
jbe
adc
into
aam
sub
nop
retf
aad
fbstp
call
or
or
or
adc
xor
aam
dec
loopne
cmp
xor
mov
out
leave
sti
gs
nop
pop
(bad)
xchg
and
in
out
mul
mov
aas
sbb
mov
mov
stos
fidivr
cmps
out
cmp
mov
fmulp
add
test
ds
fldenv
cmp
test
popf
cmps
jp
retf
cwde
push
in
ror
dec
xlat
imul
pop
out
test
push
inc
sar
mov
push
sub
xchg
dec
addr16
mul
mov
dec
pop
xchg
inc
into
rcr
sti
test
retf
xor
mov
and
rcr
xchg
jbe
dec
pop
daa
das
mov
pop
cwde
sbb
mov
inc
cmp
fwait
(bad)
xlat
fwait
push
cli
(bad)
stos
leave
jl
dec
cmp
and
or
int
outs
jp
dec
mov
mov
pop
push
ror
jmp
jge
outs
add
jp
jne
push
fst
add
jae
sbb
xchg
ja
add
inc
or
lods
mov
in
fcomp
in
mov
add
pop
mov
(bad)
aas
lahf
or
pop
test
test
test
out
dec
(bad)
(bad)
loop
out
fstp
mov
lock
pop
sbb
cli
(bad)
out
mov
pop
int
or
xchg
outs
sub
pop
xor
iret
push
aaa
mov
dec
dec
outs
mov
dec
push
jg
dec
scas
jns
and
jmp
cmp
xchg
mov
pop
mov
inc
and
mov
pop
arpl
sti
push
retf
loope
stos
in
fucomp
mov
jl
sub
push
imul
jmp
dec
push
int
xchg
sbb
js
xchg
(bad)
pop
call
inc
sbb
mov
repnz
jae
jmp
fidivr
jp
lea
dec
xchg
ds
add
imul
das
jns
pop
pop
nop
test
(bad)
(bad)
retf
in
sahf
out
les
or
scas
dec
ds
popf
push
and
dec
dec
mov
cmp
test
lods
shr
emms
sub
dec
lds
and
outs
into
sti
push
sbb
mov
fistp
and
jg
sbb
mov
lock
mov
push
xchg
stc
cdq
(bad)
aam
and
into
jecxz
call
jle
pop
mov
imul
xor
int3
pop
(bad)
(bad)
or
xor
jle
mov
out
adc
jl
enter
stos
push
sbb
das
idiv
push
pop
push
sub
mov
or
call
popa
dec
cdq
icebp
das
pmaxub
xlat
sar
and
dec
mov
stos
not
inc
adc
les
mov
movs
push
sar
mov
fadd
ret
mov
(bad)
cli
mov
outs
mov
and
dec
cmp
inc
leave
mov
pop
dec
mov
aam
(bad)
(bad)
(bad)
dec
mov
xor
cmps
or
cmp
fist
mov
imul
lods
std
dec
jnp
mov
and
outs
icebp
adc
scas
pop
ds
scas
mov
lahf
pop
xchg
sub
(bad)
sti
ret
mov
and
cmp
in
add
std
inc
pop
jge
xlat
mov
adc
xchg
jbe
lahf
pop
xchg
jbe
sbb
call
fs
push
inc
mov
xchg
fst
sbb
(bad)
mov
rcpps
push
lahf
dec
dec
into
shl
mov
retf
arpl
int
lods
xor
or
arpl
inc
cmp
nop
fisub
xor
xlat
push
push
icebp
mov
and
outs
xor
mov
ins
mov
aad
je
sbb
gs
test
scas
imul
or
std
ficomp
(bad)
stc
add
or
pushf
dec
sbb
sbb
adc
dec
pop
pop
mov
ret
pop
ins
sbb
xor
aaa
lea
mov
retf
cmps
aam
xor
mov
retf
pop
sar
sar
imul
dec
sbb
push
jnp
ja
movs
stos
sub
jne
addr16
mov
repz
fcmovnu
imul
hlt
sbb
mov
or
and
pushf
stc
add
mov
dec
sub
test
loope
(bad)
cmp
loope
arpl
fsub
sub
js
in
ds
cs
pxor
stos
sub
es
repnz
rcr
out
loope
shr
iret
sub
mov
sbb
or
pop
dec
fstp
adc
jb
mov
cmp
cmp
dec
adc
jne
(bad)
aas
dec
cmp
xor
cwde
ds
(bad)
dec
or
sub
sbb
jns
jnp
jnp
pop
or
fdivr
sbb
mov
sahf
push
push
fisttp
sahf
ja
pop
xor
popa
inc
add
pop
outs
mov
fisttp
(bad)
dec
push
scas
cmp
sub
jns
fild
dec
push
(bad)
rcr
mov
lods
loopne
(bad)
sahf
aas
dec
je
pop
mov
inc
lods
jnp
dec
inc
retf
sbb
sbb
shl
es
add
pop
cmps
jno
push
into
aas
adc
xchg
outs
xor
pushf
inc
sti
int
daa
cdq
repnz
fmul
scas
xor
push
frstor
mov
cli
mov
movs
in
cmp
dec
lahf
sar
cmp
sahf
cmp
out
stos
sub
jecxz
dec
sbb
and
push
xchg
sub
scas
mov
sbb
mov
gs
mov
pcmpgtb
xor
into
scas
or
mov
push
mov
jnp
enter
fdivr
push
cmp
test
inc
pop
inc
cdq
mov
mov
sbb
sbb
cmp
jle
jns
fistp
dec
retf
sub
(bad)
mov
(bad)
cli
jnp
dec
lea
out
lds
dec
repz
(bad)
imul
cmp
je
cdq
retf
push
enter
es
in
or
cmp
pop
leave
sub
jg
dec
cli
loope
mov
xor
stc
and
sbb
or
jo
jge
adc
mov
cmps
pop
fxch
sbb
mov
daa
add
dec
sbb
xor
fs
push
rol
inc
add
rcr
jae
call
adc
sub
arpl
mov
jne
fldcw
(bad)
pop
xchg
inc
fistp
mov
packsswb
mov
sbb
mov
sub
in
arpl
fucomip
mov
sti
ds
jmp
add
dec
push
fldlg2
loopne
dec
cmpxchg
in
push
xchg
je
movs
out
cld
(bad)
imul
(bad)
cs
xchg
sub
xor
cmp
out
cmps
daa
sub
lahf
out
pop
retf
packssdw
xchg
xchg
cmp
mov
xchg
adc
scas
ss
jle
jmp
adc
sub
fisttp
imul
mov
loope
cmp
push
(bad)
sbb
ret
mov
pop
sbb
dec
pop
or
jmp
cmp
ds
out
pop
pop
inc
ficomp
out
fwait
test
push
push
xchg
adc
mov
push
and
sub
push
pop
int
cs
mov
jg
dec
dec
jnp
inc
cdq
icebp
retf
mov
fst
inc
in
(bad)
out
xor
sbb
mov
test
dec
mov
cmp
dec
outs
sbb
push
adc
pop
mov
cmp
in
pushf
mov
pusha
fcomp
popf
sub
lahf
inc
inc
xor
fwait
daa
mov
popf
jo
popf
js
xchg
shl
inc
pusha
or
jno
in
stos
js
outs
pop
shl
rcr
fdivr
jns
mov
mov
push
pop
and
cwde
scas
push
aad
jle
push
retf
jb
retf
sub
dec
push
mov
pop
xchg
jmp
into
scas
dec
stc
and
push
std
js
aad
xchg
dec
sbb
sbb
and
and
jmp
loope
shl
mov
fstp
dec
push
mov
(bad)
fimul
outs
mov
(bad)
pop
cmp
ret
in
push
mov
mov
xchg
push
aas
js
xor
and
fist
(bad)
sbb
add
dec
jmp
fwait
aad
out
loop
jns
xor
sbb
movs
xrelease
(bad)
enter
sub
xchg
mov
mov
aas
mov
popa
cdq
call
jmp
mov
xchg
mov
(bad)
aad
retf
lods
push
xchg
sbb
dec
imul
movs
mov
lea
jle
repz
cmp
dec
sbb
dec
fmulp
ror
xchg
jge
stos
sbb
scas
gs
and
ins
mov
push
lods
xchg
out
shl
cmp
mov
fmul
movs
pop
cmc
cmp
popf
ins
and
mov
jmp
out
push
sbb
cmp
test
stos
mov
mov
jnp
gs
fwait
mul
leave
push
inc
xor
imul
cmp
inc
imul
in
lods
mov
xchg
mov
out
fcomp
push
jmp
or
es
stos
jno
fidiv
add
loopne
sbb
or
pop
in
(bad)
in
stos
or
xlat
fwait
add
pop
(bad)
or
add
scas
xchg
and
xchg
cmp
push
aas
loop
sub
or
neg
sub
or
push
in
jnp
inc
ins
xor
les
iret
popaw
(bad)
cmp
push
jne
out
or
mov
mov
push
sti
fistp
call
imul
xchg
or
pop
rol
bound
ds
inc
(bad)
outs
add
in
enter
sub
sub
dec
sti
jns
and
mov
(bad)
and
push
cld
push
shl
shr
pop
sahf
inc
sahf
jg
imul
mov
cmps
mov
cmps
sub
jmp
mov
std
sub
daa
jne
dec
stos
imul
add
outs
imul
push
shr
jae
imul
or
mov
cli
ror
pop
sub
inc
loop
or
rol
int3
dec
aas
dec
fwait
add
sub
push
outs
(bad)
and
addr16
test
call
push
ins
pop
out
js
ja
push
jg
out
js
sbb
push
jae
mov
out
mov
or
jecxz
or
push
sti
outs
pop
ins
stos
inc
repz
stos
and
mov
jmp
aad
stos
push
fisttp
dec
jne
ss
pop
imul
cli
mov
lahf
xchg
sbb
mov
xlat
rcl
iret
daa
mov
repnz
int
fist
into
inc
mov
stos
sahf
jnp
out
(bad)
xor
sub
data16
retf
mov
ds
or
das
out
mov
add
inc
dec
jecxz
mov
popa
lods
in
dec
bound
scas
das
cmp
jmp
mov
jno
and
outs
jl
outs
sbb
out
jl
loop
push
adc
movs
fisttp
mov
loop
ficomp
repz
sahf
xlat
push
mov
in
dec
mov
addr16
call
sbb
cmp
retf
outs
mov
call
fcmovu
mov
sub
jl
scas
int3
sbb
daa
dec
mov
out
or
jno
jae
pop
sbb
fwait
(bad)
mov
push
outs
cli
sbb
add
dec
repnz
mov
out
fstp
stc
test
dec
outs
(bad)
dec
inc
ins
cmp
leave
sub
mov
and
inc
ja
ret
cmps
jne
cmps
pop
or
cmp
push
pextrw
icebp
iret
mov
jmp
arpl
inc
jnp
gs
jp
mov
push
lds
dec
pop
cmps
pop
xchg
clc
fcmovne
cld
xchg
leave
pop
jg
or
mov
sbb
scas
sbb
mov
and
aas
pop
sub
bound
outs
jns
sbb
and
aaa
xchg
cmps
les
scas
push
inc
pop
stc
push
iret
or
sbb
cmp
call
das
xchg
sti
xchg
in
retf
mov
sub
out
jnp
sti
cmps
mov
push
test
pushf
mov
in
jge
sbb
jbe
or
sbb
sar
bound
push
cdq
push
jecxz
fcomp
dec
pop
std
lahf
mov
stc
sub
daa
xor
push
shrd
cmp
pop
fisttp
and
dec
pushf
aas
or
push
nop
arpl
out
dec
push
lds
fstp
inc
mov
and
int3
arpl
mov
dec
fldcw
push
je
inc
cmp
call
adc
sbb
mov
mov
std
jae
aas
daa
push
fisubr
out
sar
sti
mov
mov
cmp
rsm
cmp
push
pop
outs
aas
retf
mov
inc
mov
mov
test
imul
ffree
mov
ins
in
pop
sbb
push
fsubr
mov
imul
ins
ret
or
xor
mov
cli
call
mov
and
int3
inc
sti
inc
mov
mov
cmps
push
aas
fadd
or
mov
jp
pushf
sbb
dec
jmp
jmp
nop
push
or
or
popa
and
jbe
dec
sub
das
mov
outs
enter
js
shr
pop
es
mov
jae
sbb
or
cdq
adc
aas
cli
mov
ret
scas
or
pop
push
cmp
out
sbb
out
loope
sbb
ds
lods
lahf
or
retf
inc
test
punpckhbw
punpckhwd
out
sbb
leave
(bad)
xor
jecxz
stc
rcl
jnp
je
cmp
add
sbb
mov
mov
test
gs
mov
dec
sub
fisttp
mov
mov
jmp
mov
(bad)
rcr
or
push
jg
jnp
imul
jae
sbb
cdq
clc
jnp
mov
mov
cmp
ret
jae
and
dec
aas
jmp
mov
and
in
jne
cmc
sti
aas
sti
jns
add
and
inc
call
lea
pop
rcr
jp
pop
aam
jno
jne
mov
xchg
mov
test
(bad)
cmp
mov
in
dec
(bad)
jl
dec
je
ret
out
jb
arpl
popa
mov
pop
pop
jne
fwait
cmp
inc
inc
aas
or
or
jns
xchg
sub
bnd
pop
dec
mov
int
or
push
test
shl
int
sbb
outs
mov
retf
fisttp
test
aaa
loope
or
cmp
pop
push
push
mov
ja
dec
cmp
aas
pop
and
sub
sti
out
pop
dec
sbb
add
cvtpi2ps
pop
or
cmp
push
xchg
sub
jecxz
fcomi
cmps
repz
bound
std
pop
add
shl
add
(bad)
fdiv
ds
pushf
shl
jns
jp
retf
sbb
xor
mov
inc
push
jg
push
mov
mov
mov
les
out
cmp
leave
out
mov
stc
xor
mov
push
pusha
fistp
fbstp
aas
mov
jecxz
pop
dec
seta
jg
ds
jmp
push
stc
pop
retf
(bad)
stos
rcl
adc
ja
cmc
sub
mov
sbb
repz
jns
xor
dec
push
lods
aas
movsx
push
ud0
imul
jl
xor
retf
iret
out
fwait
in
(bad)
popa
adc
enter
sbb
push
dec
lahf
add
adc
jmp
out
cmp
add
add
pop
push
lock
(bad)
stos
retf
fstp
mov
daa
sbb
push
iret
jns
jnp
stos
mov
pop
push
call
or
scas
stc
xor
movs
cmp
test
test
or
jb
pop
(bad)
mul
jmp
push
add
adc
and
inc
cmp
(bad)
in
pushf
mov
lds
cmp
leave
adc
cmp
sti
xchg
movs
fwait
out
and
or
jp
aas
mov
in
mov
ins
xchg
mov
int3
and
fild
adc
out
jmp
movs
sub
sbb
pop
into
inc
cmps
sahf
mov
push
das
jns
lahf
cmc
repz
jmp
inc
pop
jb
lea
jo
dec
ror
shl
and
adc
or
or
lods
mov
rcr
pop
jl
push
pop
cdq
pop
sub
xchg
mov
pop
std
mov
sbb
sub
sub
mov
fstp
dec
pop
mov
out
aas
xor
enter
fild
sbb
mov
daa
sub
imul
mov
jns
pop
popf
mov
or
movs
outs
inc
aas
ja
sub
and
pop
dec
sti
fdivrp
in
or
ret
cmps
and
jmp
and
pop
add
push
xor
(bad)
xor
lahf
sar
cli
jo
test
sub
mov
pop
test
sub
jmp
cmp
add
inc
sti
ficom
in
sub
aam
cmps
sub
jno
add
adc
cmp
(bad)
loop
lds
stos
dec
fs
hlt
cmc
mov
xor
dec
js
cmps
test
scas
mov
in
pop
out
pop
out
sub
cmps
(bad)
jmp
dec
sar
lahf
mov
add
cmp
rol
mov
pop
das
jae
cmp
pop
jle
mov
mov
mov
xchg
fld
xor
fisttp
out
retf
movlhps
ins
sahf
mov
cli
dec
push
pusha
push
aas
scas
movs
inc
fwait
cmp
mov
outs
inc
cmps
jmp
push
pop
imul
dec
cmp
sbb
pop
mov
(bad)
sbb
ins
xchg
and
std
into
outs
xor
xchg
mov
loop
data16
scas
jmp
xor
cmp
(bad)
pop
mov
sbb
sub
test
mov
jbe
pop
into
sbb
mov
xor
daa
retf
push
(bad)
mov
mov
jge
xchg
stos
shr
cld
add
mov
ins
retf
mov
retf
push
fld
fist
in
into
mov
ins
sub
pop
cmp
sar
jo
inc
aam
sbb
xchg
cmps
push
into
xchg
pop
mov
mov
dec
mov
cs
mov
pop
retf
mov
push
jmp
iret
dec
(bad)
imul
and
gs
jl
icebp
dec
repz
sbb
inc
jb
std
dec
idiv
mov
movs
dec
pop
cmp
sahf
dec
faddp
call
xchg
xor
mov
add
fild
leave
xor
sub
(bad)
jno
lods
pop
in
lds
icebp
mov
loop
mov
outs
or
jbe
sbb
or
int
sbb
in
dec
push
xlat
pushf
dec
popf
cs
imul
fisttp
mov
icebp
sbb
lea
inc
shl
pop
cli
jmp
sub
aaa
add
jp
add
fsubr
sub
std
jecxz
in
fucomip
xlat
push
pop
sahf
sub
sahf
in
lea
xor
inc
pushf
cmp
test
pop
xor
adc
test
push
adc
ss
mov
jg
sbb
dec
mov
and
jne
dec
scas
dec
cmps
pop
jae
xor
(bad)
mov
(bad)
loope
and
dec
lea
xchg
xor
push
imul
out
jbe
std
push
mov
retf
mov
pop
sti
out
jnp
jo
test
das
mov
cwde
push
mov
fcmovnu
sub
xor
or
pop
icebp
add
rol
mov
mov
les
stc
fistp
cmp
scas
adc
push
mov
dec
or
movs
and
jmp
clc
cmp
pop
stos
jb
mov
ins
sbb
pop
movs
pop
iret
or
das
je
clc
dec
and
test
push
add
fmul
dec
cmp
pushf
jae
add
mov
daa
sti
icebp
shl
adc
cmp
jmp
adc
push
mov
in
sahf
imul
ror
imul
adc
sahf
mov
add
xchg
(bad)
inc
push
lods
mov
in
out
jb
mov
fistp
pop
pop
pop
imul
fdivr
jne
mov
bound
clc
pop
(bad)
(bad)
loope
mov
xchg
test
lods
jns
out
xchg
cmp
pop
in
dec
leave
ret
cmp
das
daa
push
popf
push
call
(bad)
stc
pop
dec
add
loop
cmp
arpl
pop
mov
ins
dec
shl
dec
popf
sbb
cmps
add
call
cmp
dec
xchg
(bad)
out
jmp
add
inc
ret
inc
stc
mov
xchg
iret
fsub
cmp
fcomp
push
or
fwait
test
dec
mov
adc
fild
pop
dec
mov
mov
rcr
outs
into
out
or
popa
call
jbe
push
add
or
ret
and
dec
sar
sti
js
cmp
in
cli
xlat
mov
out
aas
cmp
scas
data16
data16
push
inc
inc
add
imul
xchg
jecxz
das
push
out
mov
mov
aaa
pop
lds
jmp
enter
imul
xchg
xchg
enter
or
mov
sbb
sub
xor
enter
ins
mov
push
mov
retf
cmp
fisubr
adc
mov
imul
in
pop
sbb
ficom
in
mov
sbb
sub
sbb
adc
dec
jg
(bad)
mov
fisttp
into
inc
je
sbb
int3
mov
and
outs
pop
lahf
aas
mov
jb
inc
or
dec
int3
pusha
pop
imul
(bad)
or
(bad)
out
mov
fcomp
xor
int3
mov
aad
(bad)
xchg
push
jg
jne
mov
aad
and
into
xor
xchg
mov
dec
jbe
movs
adc
aas
push
jmp
lods
test
out
in
sti
cmps
sub
scas
aas
pushf
and
fwait
dec
iret
call
into
(bad)
jns
add
xor
movs
lea
cmp
mov
push
cmp
fadd
ss
push
not
test
mov
rol
lods
push
arpl
pop
mov
stc
pushfw
push
pop
add
movs
sbb
call
shl
fwait
sbb
and
int3
push
das
lods
sub
repz
fs
loope
sub
pop
iret
ret
inc
sbb
fld
retf
ds
(bad)
xor
jo
inc
sub
sbb
push
pop
aam
out
sub
push
add
aas
int3
dec
std
mov
(bad)
aad
add
fstp
mov
push
jg
outs
and
mov
dec
fidivr
gs
ja
jne
or
repz
sahf
inc
sub
sbb
mov
or
fisttp
ins
push
jle
stos
pop
dec
cmp
es
cdq
leave
cmp
test
adc
lea
xor
jg
or
jns
mov
test
inc
inc
jmp
lea
add
int3
mov
and
mov
cmp
inc
aas
aad
pop
add
xor
iret
adc
cli
imul
and
popf
mov
sbb
adc
lds
sti
(bad)
lea
pop
mov
fsubrp
push
xchg
jl
add
(bad)
xchg
mov
les
ds
inc
add
ins
jns
jnp
cmp
ins
ins
mov
pop
call
dec
shl
adc
in
sub
ss
push
cmp
arpl
out
jbe
sbb
(bad)
fbstp
out
add
leave
jp
ror
stc
retf
dec
push
xchg
cmps
cmps
push
cs
in
sub
loop
sti
loopne
popf
xchg
cwde
and
dec
pop
shl
xor
push
lods
stos
inc
mov
add
or
(bad)
sub
fiadd
jge
cli
xlat
inc
ins
retf
mov
pop
call
in
jbe
ja
pop
lods
cmp
xchg
cmp
stos
add
addr16
cld
retf
push
in
jp
cmp
cmp
cmp
in
lea
jmp
or
(bad)
lods
stos
jecxz
mov
cmps
inc
pusha
int
push
cmc
aas
mov
mov
lahf
imul
test
lahf
dec
rol
sti
repz
sub
out
jmp
icebp
jmp
cmp
pushf
leave
xor
dec
push
fisub
shl
sbb
jmp
cli
iret
div
retf
gs
aas
pop
loope
or
cmp
jmp
scas
inc
shl
imul
and
call
push
sbb
dec
jo
mov
test
(bad)
fidivr
or
sub
or
into
pop
dec
(bad)
sub
sbb
mov
cs
cld
jmp
pop
dec
xlat
(bad)
xchg
(bad)
setnp
outs
cs
popf
dec
fadd
mov
stos
mov
pop
fisttp
pop
fisttp
ja
(bad)
dec
jl
adc
sbb
dec
js
ds
iret
dec
inc
outs
cs
push
(bad)
sbb
push
ret
mov
scas
rol
mov
das
xor
inc
aas
cmc
push
shl
movs
cwde
sbb
mov
push
call
in
mov
jge
dec
jno
das
retf
jg
jecxz
arpl
dec
out
retf
dec
sbb
mov
daa
rsm
pop
mov
imul
ins
or
(bad)
and
call
xchg
push
mov
cwde
jp
sbb
or
cmp
mov
lahf
or
in
inc
adc
pusha
fsubr
or
dec
xchg
cmp
push
les
sub
or
dec
sbb
dec
(bad)
shr
repz
fisub
aad
imul
mov
idiv
or
fnop
xchg
xor
outs
add
test
dec
out
pop
or
pop
inc
dec
call
repz
scas
(bad)
ficom
dec
mov
ja
inc
dec
sub
lods
inc
push
dec
outs
arpl
jno
inc
jnp
sbb
xor
mov
outs
mov
frstor
out
(bad)
mov
inc
cmp
daa
arpl
jp
dec
sbb
pop
dec
xchg
in
out
sbb
push
in
call
and
or
jno
data16
push
xchg
cmps
scas
or
pop
out
inc
repz
jmp
fcmovnb
(bad)
jp
add
and
mov
xchg
clc
dec
mov
pop
ret
ret
test
sbb
loopne
dec
fwait
das
retf
cmp
xor
sar
ficomp
cwde
push
int
inc
xor
or
std
test
cmps
cli
xchg
stos
or
test
retf
outs
dec
dec
imul
imul
cmp
mov
mov
sbb
dec
dec
sti
daa
test
imul
mov
daa
mov
(bad)
xor
and
sub
or
cld
adc
fwait
loope
pop
call
jbe
and
(bad)
outs
cmp
add
pop
mov
jge
push
inc
mov
mov
sub
mov
dec
xlat
ds
ins
xchg
lahf
mov
ret
pusha
call
popf
cli
aas
sub
test
imul
addr16
push
mov
pop
pushf
sub
popa
popa
dec
das
cmp
popa
mov
jp
inc
dec
out
mov
test
je
inc
enter
mov
pop
in
mov
pop
dec
cli
sbb
movs
leave
cmps
imul
dec
push
xchg
mov
mul
fiadd
ins
mov
fistp
dec
add
or
jmp
add
ds
dec
adc
mov
fld
cmp
cmp
pop
stos
(bad)
loopne
daa
xor
jae
jmp
(bad)
jnp
and
cmc
ins
std
lods
mov
retf
retf
dec
cld
movs
stos
cmps
stos
ss
cwde
push
dec
test
mov
inc
mov
sbb
cld
pop
sbb
sbb
mov
inc
imul
bndstx
cmp
outs
sbb
push
lahf
addr16
call
pop
js
jmp
lea
cmp
jl
pop
pop
dec
and
scas
inc
in
sbb
pop
dec
popa
retf
(bad)
sti
xor
push
cmp
jmp
test
loopne
(bad)
cmp
jge
sbb
xor
add
dec
ret
push
test
movs
dec
inc
mov
add
mov
cmp
push
shr
ja
inc
iret
stos
and
xchg
lds
out
mov
inc
sub
push
xor
pop
adc
(bad)
les
mov
iret
mov
push
scas
and
dec
jle
imul
adc
mov
adc
ins
leave
pop
pop
fwait
int
push
aad
push
mov
xchg
jbe
mov
repnz
mov
dec
mov
call
xor
cdq
push
(bad)
outs
scas
push
(bad)
xor
stc
in
mov
into
mov
iret
scas
cdq
mov
sbb
cmp
aas
adc
adc
add
into
fsubrp
lea
pop
mov
jmp
or
pop
sbb
cmc
jo
(bad)
stos
adc
data16
or
cmp
(bad)
out
lea
push
dec
scas
fwait
sub
dec
dec
adc
out
jmp
mov
(bad)
test
fsubp
mov
popa
mov
mov
(bad)
(bad)
sub
mov
jmp
pop
mov
mov
pop
out
int3
and
xchg
jnp
fs
mov
(bad)
jnp
clc
inc
stos
rol
lds
pop
adc
pusha
sbb
mov
iret
popa
xor
mov
dec
sub
pand
xchg
jge
stos
sub
repz
std
fs
fucomp
add
jae
and
(bad)
fstp
ds
mov
scas
rcr
pavgb
in
or
push
fidivr
dec
cld
rcl
push
cmp
inc
outs
(bad)
in
rcr
clc
adc
mov
adc
dec
adc
cmp
jb
jl
jmp
or
sbb
inc
mov
inc
int
cmp
add
sub
lods
jge
dec
jecxz
ret
cmps
jae
enter
bound
es
stos
std
dec
inc
mov
loope
mov
cmovg
das
xchg
jb
shr
xor
loop
out
sti
mov
pop
test
je
outs
pop
aad
in
fisttp
xlat
mov
or
popa
pop
addr16
mov
aad
xchg
mov
retf
jmp
hlt
sahf
xchg
stc
ss
das
dec
or
add
enter
sub
in
(bad)
(bad)
sbb
cli
in
cmp
(bad)
fmul
dec
xchg
push
pop
push
mov
enter
ja
pop
out
test
fadd
push
cmp
lods
sbb
sbb
or
adc
repz
stc
mov
mov
fistp
sbb
dec
or
scas
repz
pop
mov
sbb
(bad)
pop
xor
push
sti
dec
pop
dec
shr
imul
add
jecxz
pop
xchg
sahf
fs
icebp
(bad)
dec
int
out
mov
sahf
jp
int
cli
in
dec
gs
pop
stos
in
retf
lods
adc
mov
dec
xchg
xor
fild
das
cmp
jmp
push
int3
cmps
(bad)
push
pop
inc
mov
(bad)
nop
scas
std
pop
mov
leave
bound
pop
sub
icebp
ins
push
lahf
psubsw
jp
mov
sbb
cli
lods
dec
push
lds
into
fidivr
retf
mov
scas
dec
(bad)
jno
mov
mov
mov
std
push
pop
pop
jne
daa
imul
and
and
adc
push
push
jmp
call
das
jg
outs
(bad)
and
pop
inc
fcomp
ins
loop
lahf
push
add
pop
mov
sub
push
fisttp
std
push
pushf
cs
mov
sub
cdq
push
xor
pop
mov
ror
adc
add
in
mov
(bad)
cmp
pop
outs
jbe
ja
add
repz
xor
add
and
adc
mov
or
js
mov
xadd
(bad)
(bad)
inc
jge
(bad)
cdq
or
fcomi
adc
fstp
cmp
shl
push
mov
retf
or
cmps
ins
loope
add
mov
pop
xchg
pop
pushf
out
jl
add
fisub
xchg
stos
pop
test
dec
(bad)
add
aas
cdq
jl
lods
sbb
cmc
jne
int
mov
mov
jno
std
nop
pop
cli
in
ror
dec
ret
cmc
pushf
lds
icebp
cmps
push
shl
mov
movs
outs
mov
pop
sbb
and
fwait
push
sub
push
ror
mov
push
xlat
adc
lahf
out
dec
mov
dec
stos
shr
int
cmp
adc
and
mov
aas
xor
movs
xchg
dec
jmp
sub
dec
jnp
mov
fisub
scas
sbb
addr16
xchg
lods
xchg
loopne
inc
outs
and
xor
movs
ins
dec
xchg
xchg
outs
cmp
cmps
adc
pop
pusha
aaa
ds
cmp
aas
sub
jmp
shr
data16
fbld
ins
and
push
jae
fwait
or
dec
jnp
dec
sub
rep
mov
scas
dec
popa
pop
sub
sti
fisttp
sti
out
cmp
aas
(bad)
push
dec
sbb
adc
fwait
dec
out
mov
ja
jmp
jne
jb
jb
aas
xchg
(bad)
lods
fwait
pop
(bad)
in
(bad)
hlt
cmp
or
cli
sbb
jle
jno
call
lahf
mov
les
mov
lahf
mov
cmp
mov
les
into
lahf
push
int
xchg
fwait
scas
sub
xchg
dec
pop
pop
jge
minps
movs
jnp
dec
sbb
out
idiv
stos
sub
cmp
or
adc
mov
les
not
push
jno
mov
aas
ror
adc
or
repz
mov
in
cdq
ficomp
jmp
nop
mov
sub
mov
repz
mov
scas
outs
mov
sahf
mov
mov
mov
dec
sub
lods
mov
push
outs
dec
call
push
aas
pop
jnp
cwde
pop
sbb
and
inc
and
les
mov
mov
test
mov
mov
mov
add
jns
add
pop
pop
cdq
jmp
pop
cdq
add
leave
jbe
xor
sub
xchg
pop
dec
jmp
mov
icebp
add
jmp
cmp
sub
dec
or
cmps
inc
lods
ins
mov
std
sbb
pushf
outs
retf
pop
gs
jge
packuswb
jmp
aaa
sub
inc
push
push
aas
popf
xchg
dec
cmp
adc
inc
(bad)
push
jecxz
push
rcr
sub
jb
pop
aas
outs
mov
xlat
scas
jmp
dec
cmp
sub
cs
cs
mov
or
xlat
mov
mov
ret
or
cs
outs
inc
cmp
jae
add
das
in
stos
test
cwde
pop
stos
test
or
dec
pop
or
xchg
ret
pop
or
xchg
retf
pop
jmp
fimul
lea
adc
sbb
inc
imul
pop
pop
sti
adc
lea
jmp
stc
sti
push
iret
fwait
inc
mov
test
pop
mov
into
mov
xor
pop
push
div
enter
imul
jae
scas
sub
dec
rcr
fadd
fimul
mov
cmp
bnd
out
dec
ja
outs
xor
adc
jnp
mov
ficom
add
sub
mov
ins
call
adc
cmp
mov
sbb
imul
xchg
mov
adc
cwde
cmp
ret
push
sub
sbb
inc
call
xchg
mov
cld
das
push
outs
pop
dec
fst
fwait
dec
sahf
pop
add
iret
std
pop
shl
arpl
xor
(bad)
iret
ficomp
cmp
push
je
dec
test
mov
repz
repnz
and
cmp
cmp
fst
push
cli
test
sbb
jmp
or
inc
repnz
mov
jns
fld
xchg
dec
mov
retf
imul
add
cs
jbe
enter
out
xor
sub
push
stos
int3
js
js
sbb
xor
loopne
retf
aas
pop
outs
pop
cmp
std
les
mov
add
adc
stos
(bad)
sub
xchg
jmp
cld
sub
ss
xchg
(bad)
retf
mov
push
fnstsw
sar
das
jp
dec
cli
or
and
mov
jge
repz
into
shr
pop
pop
int3
arpl
inc
xchg
mov
or
push
cmp
adc
cli
push
mov
mov
jbe
or
jne
mov
push
xor
mov
pop
imul
mov
and
nop
fld
lock
leave
dec
(bad)
mov
xlat
dec
bswap
outs
lar
sub
jp
rcl
xchg
sbb
mov
sbb
adc
xchg
popf
pop
(bad)
jl
cmp
add
push
lea
out
mov
sub
xchg
ret
jne
mov
mov
mov
and
fcmovbe
mov
iret
stos
lods
inc
fldcw
int
pop
daa
jmp
sbb
test
cdq
aas
dec
sbb
xor
jg
mov
jp
and
pop
ret
mov
mov
daa
or
sti
imul
sub
sub
adc
jns
xor
inc
and
pushf
or
nop
retf
mov
icebp
xchg
dec
popa
inc
jne
or
pop
push
cmp
ror
mov
lahf
dec
mov
pop
mov
jg
dec
push
mov
gs
add
mov
cld
mov
shl
repnz
arpl
jecxz
xor
repz
in
mov
jo
pop
iret
jne
sbb
dec
inc
cmps
dec
xor
or
push
stos
aam
xor
ja
mov
add
scas
ds
pop
retf
popa
(bad)
in
sub
push
mov
ins
jnp
or
sahf
xchg
repnz
sub
lods
fstp
jne
mov
pop
popf
adc
inc
or
dec
idiv
aas
fst
cvtps2pi
ret
push
loopne
gs
adc
xor
mov
dec
ins
mov
jae
dec
adc
push
fwait
push
scas
fadd
scas
mov
adc
fistp
dec
inc
cwde
fldcw
scas
add
add
fldcw
push
push
mov
out
cmp
scas
cmp
dec
push
movs
popa
jmp
jnp
out
pop
fwait
mov
or
inc
mov
ret
xor
sti
adc
adc
(bad)
lods
cmps
std
fidiv
and
stos
sub
das
repz
fnstenv
xchg
mov
mov
jmp
cmps
(bad)
fild
scas
fwait
cmp
outs
(bad)
sbb
ss
pop
adc
mov
pop
js
fisttp
jmp
imul
cmps
scas
leave
call
push
mov
lahf
pop
cmp
push
rcl
es
pop
pop
int3
xchg
retf
pop
dec
dec
adc
mov
bound
inc
mov
mov
dec
sahf
adc
dec
stos
add
pop
or
mov
ja
inc
inc
adc
cmp
or
inc
icebp
lods
paddsw
or
call
ret
shl
dec
push
mov
push
mov
jnp
arpl
sbb
shr
(bad)
push
stc
imul
fxch
dec
mov
mov
int3
xlat
mov
imul
xlat
movaps
inc
jmp
sbb
mov
test
mov
mov
pop
cmp
inc
or
cwde
shr
pop
dec
add
or
fcmovbe
xor
int3
mov
dec
and
pusha
out
imul
ins
sar
pop
cdq
std
(bad)
jns
xor
push
cmp
stc
in
or
outs
ret
lock
jnp
mov
sbb
jg
mov
sbb
xchg
ins
mov
cli
xchg
fldenv
jge
add
sub
dec
mov
sbb
jg
aas
sti
xchg
imul
push
stos
push
xchg
mov
adc
jae
aaa
outs
jge
iret
pusha
inc
pop
hlt
mov
sahf
push
test
out
sti
fist
jp
sbb
pop
in
inc
push
jae
(bad)
xchg
mov
sahf
rcr
fdiv
(bad)
jo
or
pop
scas
jg
adc
ficom
jnp
mov
mov
xchg
into
les
repz
cmp
test
push
jecxz
arpl
pop
ret
lods
ds
fild
ret
xchg
push
xchg
(bad)
xor
add
das
pop
iret
xchg
push
stos
jnp
stos
test
mov
out
out
out
cmp
cmp
pop
jg
outs
lds
push
into
and
mov
cmp
adc
outs
leave
cmp
retf
xchg
nop
fstp
dec
rol
outs
mov
xchg
imul
ret
fiadd
mov
jns
sbb
jo
push
jge
test
out
mov
out
adc
rcl
dec
jmp
add
mov
push
cli
(bad)
sbb
mov
or
ins
mov
fldcw
fwait
mov
pop
sub
jb
dec
push
cmp
jmp
sub
cmp
cmps
retf
adc
or
jne
aam
fld
adc
jp
push
fstp
je
rcr
es
imul
or
popa
(bad)
mov
das
dec
imul
mov
enter
scas
jmp
pop
leave
out
xor
fst
cmps
add
push
pop
jg
scas
cmp
in
iret
scas
mov
(bad)
cmc
inc
dec
fdiv
xchg
pop
jge
pop
jne
mov
ins
adc
jmp
fdiv
sub
ds
jns
loopne
sbb
mov
add
lods
test
pop
call
or
in
fsub
jge
mov
mov
sahf
dec
pushf
and
(bad)
pop
mov
jle
js
dec
cs
scas
jb
jle
push
(bad)
mov
pushf
cld
sub
dec
aas
pop
ror
push
outs
mov
out
inc
pop
stos
push
dec
xchg
dec
lahf
ret
out
pop
in
ds
adc
cmc
push
sbb
in
fstp
dec
stos
mov
or
cmp
and
mov
xor
sub
jnp
mov
js
lahf
rcr
or
int
fwait
dec
xchg
xor
adc
or
lea
scas
cmc
mov
outs
leave
jno
scas
and
xor
and
pop
out
push
out
dec
xor
pop
adc
add
pop
mov
xchg
(bad)
fstp
xchg
repnz
dec
in
push
sbb
loope
leave
add
mov
in
cmps
xchg
aas
xchg
add
or
mov
lock
jge
cmp
retf
out
jo
xor
enter
sub
fs
add
xchg
xchg
rol
cmp
dec
popf
fisttp
mov
jg
xor
dec
mov
dec
fxch
mov
sar
xor
pop
shl
mov
sub
pop
call
sbb
mov
jmp
imul
mov
inc
outs
dec
xrelease
xor
jae
in
retf
in
sar
mov
mov
arpl
rol
aad
(bad)
jmp
mov
cmc
out
push
dec
sar
mov
mov
ds
cmp
stc
xchg
cmp
stc
or
mov
fist
jmp
or
xchg
sbb
out
js
shr
mov
xor
nop
retf
sar
inc
std
ror
jne
ss
and
ret
cld
stc
jle
sbb
in
xchg
xor
clc
imul
movsx
pop
fidivr
movs
dec
test
inc
push
xchg
adc
inc
hlt
sbb
or
ins
or
adc
stos
call
(bad)
push
daa
or
aad
(bad)
cmp
stc
jg
mov
popa
sub
add
mov
dec
sbb
pusha
(bad)
in
sbb
sti
loop
add
xchg
mov
fwait
xchg
or
jmp
call
daa
leave
sahf
or
fstp
inc
(bad)
mov
cmp
sbb
or
mov
loopne
ja
add
adc
dec
pop
loope
imul
cwde
ret
sti
sahf
popa
and
jno
out
sbb
xor
scas
mov
push
fiadd
mov
movntps
mov
fwait
das
repnz
xchg
scas
push
rcr
adc
mov
jecxz
test
push
ins
dec
sub
hlt
cdq
dec
ror
arpl
or
cli
add
mov
stos
sahf
les
jmp
in
cld
leave
cli
push
out
add
jecxz
inc
push
mov
add
lock
repz
sub
inc
jle
hlt
test
dec
mov
push
outs
push
call
rcr
dec
mov
out
aaa
mov
xor
pop
or
outs
push
das
add
stos
(bad)
in
in
inc
dec
xor
retf
addr16
or
jmp
sbb
add
pop
mov
mov
xor
and
or
cmp
(bad)
lock
or
sbb
xor
aaa
js
adc
sub
in
or
(bad)
pop
int3
mov
mov
fistp
mov
cmps
jne
push
movs
(bad)
push
arpl
or
(bad)
mov
ret
sub
push
shr
mov
sbb
xchg
leave
mov
jmp
mov
mov
imul
pop
xor
and
push
neg
cs
inc
jnp
ja
dec
test
mov
push
dec
(bad)
pop
shl
call
ss
sbb
cmp
outs
pop
inc
fimul
pop
adc
push
jecxz
mov
jle
mov
and
dec
adc
sti
(bad)
and
test
xchg
push
xchg
sbb
push
not
pop
stos
daa
sbb
mov
out
push
aas
sub
cld
es
pop
mov
add
pop
mov
enter
pop
pop
or
sub
aaa
lahf
shr
outs
gs
stos
sbb
and
(bad)
push
cmp
mov
mov
cmp
ret
sub
xor
mov
lock
fwait
jle
and
lock
dec
cmps
and
add
push
inc
pop
xor
cdq
push
lods
pop
pop
jnp
shr
and
cmp
fs
popa
mov
dec
mov
jne
mov
gs
cmp
rcl
push
jg
dec
xor
pusha
imul
cmp
out
stos
je
inc
xor
jg
jno
add
(bad)
fnstcw
or
sti
jle
jb
xor
jo
mov
lea
in
jp
(bad)
out
in
add
popa
sbb
inc
push
push
push
pusha
mov
int
(bad)
jae
test
(bad)
iret
retf
mul
jae
xor
aas
pop
or
push
xchg
adc
repz
cmp
pop
mov
inc
aas
pusha
sub
sbb
dec
shl
sub
mov
mov
pop
test
mov
pop
(bad)
icebp
cmp
out
mov
ds
std
arpl
sti
jge
sub
cmp
pop
adc
push
mov
push
imul
(bad)
retf
jecxz
call
stos
fstp
clc
ret
outs
jecxz
mov
jecxz
in
inc
add
outs
int
mov
cmp
rcl
(bad)
mov
xchg
or
jbe
mov
sub
fild
push
lds
nop
pop
shl
inc
aad
push
ja
jnp
fdivr
or
pop
xlat
into
mov
aad
mov
adc
into
fist
leave
les
daa
das
mov
mov
cmc
fcomp
(bad)
mov
repz
scas
jns
mov
adc
xchg
aas
outs
mov
or
mov
jl
std
mov
inc
push
jl
lahf
fiadd
pand
fucomi
std
dec
or
test
mov
mov
in
push
int
test
and
ins
dec
pop
(bad)
das
fcmovne
mov
sahf
mov
jnp
ret
xchg
mov
push
or
or
pop
dec
xchg
rcl
lods
mov
retf
cmp
or
push
test
push
dec
out
mov
mov
lahf
(bad)
cmp
pop
icebp
sub
fld
lods
xchg
pusha
js
mov
mov
aaa
mov
test
fstp
stos
in
jle
dec
stos
xchg
inc
ins
or
js
push
cli
les
outs
jmp
iret
sub
(bad)
xchg
pop
das
xor
add
xor
repz
pop
ins
inc
push
push
mov
call
retf
outs
xor
mov
inc
fs
add
popf
outs
pop
or
pop
dec
dec
test
je
mov
pop
xchg
frstor
xor
sbb
imul
psraw
arpl
add
mov
mov
scas
pop
jbe
jmp
aad
mov
push
(bad)
jecxz
fisttp
clc
popf
sbb
pop
cmp
pop
jno
and
daa
jge
add
or
adc
sbb
inc
dec
popa
fdiv
push
fst
inc
lods
sub
push
jmp
cmc
dec
cs
sbb
loopne
inc
pop
jb
push
fld
pop
xor
cmp
push
mov
and
aaa
jle
adc
in
push
in
push
cdq
sbb
retf
(bad)
imul
jnp
mov
(bad)
push
lss
mov
push
dec
in
ins
mov
fstp
mov
out
push
retf
mov
pop
adc
or
pop
xchg
stos
inc
xor
test
(bad)
ss
inc
xor
into
mov
pop
aas
(bad)
dec
pushf
jge
mov
ins
call
mov
das
sbb
cmp
das
xor
aad
inc
popf
mov
inc
std
dec
scas
sub
popa
setl
adc
shl
test
fsubrp
cmp
mov
dec
outs
jnp
jecxz
ror
mov
xchg
inc
mov
or
pop
loope
push
sub
imul
imul
jmp
int3
cmc
daa
inc
in
xchg
(bad)
cmp
imul
xor
pop
sub
test
fwait
sbb
scas
mov
fld
adc
cmp
cmp
inc
outs
inc
lds
cdq
sub
cdq
out
jmp
mov
into
repz
pop
lea
mov
pop
jnp
push
scas
lea
sahf
dec
and
mov
mov
outs
inc
jg
call
(bad)
fnstenv
out
xchg
or
(bad)
or
sub
jmp
imul
pop
push
inc
inc
push
mov
mov
scas
sub
dec
xor
(bad)
push
sbb
outs
pop
cmp
and
loope
mov
scas
scas
imul
outs
fdiv
mov
xchg
pop
pop
int
push
xchg
call
stc
or
mov
xor
and
fistp
pop
idiv
inc
push
imul
dec
xchg
xor
xchg
sbb
jp
retf
pop
and
push
and
pop
dec
outs
mov
inc
pop
sub
pop
sahf
fs
adc
fldcw
pop
push
ss
xor
sub
je
mov
pop
mov
xlat
inc
sbb
xchg
fs
in
mov
mov
add
or
in
xchg
fwait
xchg
adc
push
mov
xchg
sbb
bound
aad
sbb
jecxz
popf
mov
mov
(bad)
jge
in
inc
ds
mov
cmp
js
cmp
fst
sti
ins
mov
sbb
adc
lea
mov
scas
fwait
cmovg
mov
xchg
push
add
rcl
jnp
sub
fsubr
cmp
mov
lahf
mov
repz
mov
jbe
pop
rol
sub
ds
push
push
cmps
lds
xchg
jmp
and
add
outs
sub
xor
mov
out
rcl
ins
add
sub
push
jl
push
inc
sbb
stc
inc
sub
js
sbb
stos
call
pushf
out
add
push
pop
pushf
stos
cli
and
stos
(bad)
sub
sub
jle
inc
mov
repnz
in
test
or
(bad)
pop
lods
push
call
not
dec
jmp
cmp
jle
and
mov
inc
adc
jge
ret
pop
dec
and
dec
dec
mov
call
fmul
mov
jle
or
push
pop
das
mov
mov
(bad)
fidiv
inc
dec
out
cmps
sbb
adc
pop
add
(bad)
shl
enter
es
call
loopne
pop
pop
push
bound
mov
out
push
mov
xchg
retf
fild
shl
int
or
popf
push
(bad)
fcmovne
fimul
pop
jne
movs
nop
call
sar
mov
ja
sub
pop
push
jmp
cmps
and
repz
xor
jmp
jnp
jno
xchg
je
push
and
lahf
inc
push
fisttp
out
aam
jl
aaa
stos
fadd
cs
imul
aas
mov
dec
mov
shl
dec
(bad)
sti
and
sub
jge
or
cmp
lods
jp
sbb
aad
rcr
push
or
dec
and
adc
sti
mov
jno
xlat
inc
dec
mov
call
daa
out
jge
pop
test
dec
mov
adc
sbb
lea
and
lods
xchg
mov
push
cmps
mov
outs
imul
xchg
dec
pop
mov
in
jp
dec
outs
and
mov
dec
movs
xchg
aaa
lods
mov
int3
mov
sbb
push
inc
das
pop
cmovno
jnp
fcom
push
in
stos
or
xchg
jp
xchg
lods
inc
inc
pop
std
jnp
clc
mov
movs
jb
(bad)
cvtps2pi
dec
mov
bound
jmp
xchg
sahf
adc
lods
stc
ss
jmp
test
mov
or
bound
fwait
xor
sti
and
push
sti
out
xor
cdq
xor
mov
pop
jg
cwde
mov
loope
retf
aas
pop
mov
lods
xlat
jb
cmps
nop
sbb
mov
jo
jmp
ins
cmp
fst
mov
or
shl
bound
prefetch
jne
xor
fucomi
(bad)
into
into
stos
(bad)
xchg
ror
fistp
adc
test
dec
pop
fisttp
and
je
jno
jo
or
pushf
xor
cmp
dec
pop
repnz
dec
jmp
das
shr
push
xor
sti
daa
adc
or
loope
retf
imul
(bad)
xchg
ds
jmp
(bad)
iret
popf
retf
fwait
and
cmp
ins
jo
outs
(bad)
into
mov
cmps
mov
js
cmp
repnz
pop
daa
mov
mov
js
jo
int
add
fsubr
les
and
aaa
int3
(bad)
xchg
push
pop
shl
sub
das
jns
fsubp
enter
mov
or
or
int
mov
hlt
mov
popf
mov
mov
cli
xor
into
ss
xchg
jle
jbe
cmps
stos
fwait
cmp
imul
hlt
dec
mov
(bad)
cli
and
mov
jg
dec
push
sbb
inc
push
pop
and
push
mov
fldcw
clc
ffree
(bad)
mov
jmp
adc
xchg
push
push
xor
rcr
adc
dec
xlat
cmp
mov
cld
imul
gs
fxch
jmp
test
jg
mov
ds
xor
add
dec
stos
lahf
push
sbb
dec
ss
xchg
jae
(bad)
das
fmul
mov
dec
mov
push
outs
cmp
pop
out
test
xchg
(bad)
retf
push
enter
retf
or
test
repnz
sub
add
jg
(bad)
jg
call
cmp
cmp
das
retf
aas
push
xchg
jbe
ja
leave
push
xchg
cwde
dec
jnp
cmp
mov
inc
or
cmp
mov
repnz
xor
hlt
mov
add
in
out
sahf
ss
fs
mov
jge
inc
and
or
stos
inc
lds
cld
dec
xor
ins
mov
in
jmp
sub
and
cld
sahf
xor
dec
or
pslld
sub
or
or
and
adc
push
xchg
ror
gs
add
sbb
adc
or
inc
or
mov
mov
lods
lock
fdivr
ret
fiadd
ds
lods
dec
pop
fwait
cwde
icebp
jle
shl
push
push
in
scas
movs
dec
(bad)
add
push
scas
sub
or
sbb
xor
dec
mov
adc
adc
iret
sbb
jbe
push
leave
inc
sbb
or
xor
xor
sub
cwde
pop
pop
into
scas
(bad)
rcl
retf
enter
cmp
xchg
lock
cmp
push
nop
pop
dec
pusha
xor
sub
jle
add
into
call
mov
lock
mov
cmp
int
iret
(bad)
out
inc
push
push
das
add
add
retf
dec
cwde
mov
add
pushf
sbb
pushf
repz
inc
in
pop
mov
aam
outs
add
int3
add
xchg
cmp
in
add
(bad)
lods
stos
sbb
sub
xor
imul
sub
cmp
add
outs
and
outs
pop
(bad)
psubq
dec
imul
adc
xchg
fs
adc
cmc
mov
mov
icebp
mov
xchg
jae
pusha
jnp
cs
leave
rcl
mov
cmp
mov
cs
stos
clc
xor
push
mov
dec
pusha
jno
push
sub
(bad)
add
mov
aaa
retf
pop
sub
jmp
ret
(bad)
cmp
jno
pusha
outs
mov
dec
cmp
xor
test
or
scas
test
cmp
js
dec
dec
sbb
jmp
dec
(bad)
fwait
jmp
jno
in
pop
aas
lea
jnp
bound
mov
sbb
jmp
imul
jo
sbb
call
retf
sbb
outs
jg
jle
repz
ds
sbb
xchg
fwait
mov
cmp
(bad)
cmps
inc
push
test
and
push
imul
sub
pop
and
mov
dec
(bad)
in
cmp
iret
mov
imul
fwait
popf
out
retf
loope
lea
test
scas
mov
sbb
sbb
mov
mov
pushf
or
jg
dec
mov
adc
out
js
cmc
fist
pop
sbb
sub
cld
aam
clc
out
test
xchg
retf
sti
into
std
adc
cmc
xlat
into
jno
cmp
cmp
stos
dec
sbb
ds
mov
xchg
pop
pop
add
cmps
sbb
aas
cs
jmp
xchg
jae
(bad)
into
movs
inc
fisttp
and
xchg
or
push
retf
repz
cmp
es
sub
pop
fcom
dec
push
xchg
jno
ds
mov
pop
inc
ins
int
jno
jno
jg
out
test
push
cmp
hlt
sbb
jmp
xchg
jmp
movs
cmp
lahf
push
outs
ins
xor
sbb
xchg
mov
retf
jb
push
aam
repnz
jl
adc
dec
mov
jecxz
cmp
in
(bad)
sub
inc
mov
ja
imul
lods
stos
cmovae
cli
mov
and
push
jl
sbb
pop
das
lea
daa
std
rol
fisttp
mov
and
xor
inc
ja
sbb
lods
(bad)
arpl
(bad)
(bad)
jmp
(bad)
mov
test
xchg
cmp
sub
add
cmps
cli
mov
sub
pop
inc
shl
pop
in
add
or
ss
(bad)
js
scas
neg
mov
jns
aad
adc
aaa
pop
in
adc
jnp
fiadd
inc
mov
aad
lods
dec
pop
sti
cli
jmp
sub
ins
loopne
dec
clc
lahf
mov
dec
mov
sbb
jb
pushf
sti
cmp
mov
mov
fisub
test
lahf
push
call
push
pop
xor
aas
iret
sub
jecxz
ja
mov
popa
shl
lahf
fld
sub
(bad)
scas
dec
push
cs
mov
scas
call
dec
xchg
cld
jnp
jb
xor
cmp
mov
adc
outs
push
mov
call
shr
xchg
retf
call
lods
pop
fwait
lods
daa
dec
jge
jbe
bound
lea
and
pop
pop
imul
jg
or
ss
(bad)
mov
inc
sti
cmp
outs
sub
cmp
jecxz
or
sbb
lahf
or
js
loop
sub
xchg
mov
push
xlat
sub
(bad)
jne
mov
fcomp
xchg
jnp
or
js
dec
mov
cwde
inc
push
pop
sbb
ins
imul
cmp
xor
bound
fimul
inc
out
sar
retf
mov
das
aaa
push
dec
mov
xchg
or
ja
jne
pop
ds
stos
pop
xchg
int
int
add
mov
leave
inc
push
rol
push
sbb
adc
sbb
test
das
jecxz
in
jl
and
outs
jp
adc
test
es
test
pop
jne
out
clc
sub
clc
mov
sahf
mov
dec
pop
sub
cmc
movs
dec
sti
jne
and
jmp
cwde
js
cmp
fs
cmp
dec
movs
mov
int
inc
retf
xchg
ss
scas
sbb
mov
dec
mov
adc
cmp
add
aad
into
sbb
daa
mov
mov
popa
sti
add
iret
fs
or
imul
or
scas
test
jmp
ja
sbb
pushf
(bad)
dec
repnz
pop
movs
enter
(bad)
popf
mov
mov
cwde
retf
sbb
mov
push
add
jmp
pop
gs
inc
pop
ins
lods
(bad)
adc
out
out
in
xor
xchg
fisttp
ins
and
stos
in
jmp
mov
std
jne
pop
xor
mov
mov
sar
mov
repnz
jnp
mov
xor
int3
ins
mov
xchg
inc
mov
mov
lahf
push
sub
sub
or
lock
pop
jbe
or
adc
jmp
sbb
dec
(bad)
pop
aas
pop
out
aas
imul
adc
mov
or
movs
cmp
cdq
pop
sahf
cli
add
sti
inc
and
(bad)
aam
mov
mov
mov
xchg
(bad)
call
ins
hlt
inc
add
icebp
dec
lock
repz
adc
pop
add
jae
outs
jb
jl
push
mov
fild
dec
mov
xor
mov
or
fisub
jmp
cmp
mov
pop
lods
pusha
xchg
fs
outs
sub
pop
out
loopne
ds
jnp
pop
jg
out
mov
dec
mov
inc
cmp
faddp
dec
mov
nop
out
pop
mov
mov
fwait
xor
(bad)
xor
loop
dec
and
daa
push
ins
add
addr16
sub
mov
mov
loope
xchg
or
aas
bound
std
shl
xchg
jne
push
push
fsub
dec
nop
icebp
push
rcl
psubd
retf
sub
xor
out
add
dec
test
mov
sub
xchg
mov
mov
(bad)
aam
ret
and
pop
dec
and
aas
test
out
pop
inc
jg
fidivr
sar
pop
fild
ins
mov
movs
add
iret
add
popa
sub
cmc
sar
mov
fwait
jne
dec
or
lahf
bnd
sub
inc
push
lea
mov
mov
add
inc
sbb
(bad)
and
jge
daa
cdq
mov
in
data16
repnz
dec
cmp
cmp
jp
sbb
mov
sbb
cmc
test
mov
(bad)
sbb
aas
retf
add
dec
jo
iret
xchg
test
stos
retf
in
lahf
loop
jmp
push
cmp
das
repnz
dec
dec
jb
mov
push
lds
mov
retf
jno
jp
push
jecxz
sbb
popa
inc
cmp
pop
pop
mov
cmp
push
adc
pop
clc
mov
fmul
mov
outs
lods
lods
jmp
jno
push
and
jnp
imul
sahf
ret
inc
and
cmove
lock
push
sbb
popa
jmp
jns
fidivr
cmp
pop
inc
push
xchg
xchg
mov
mov
inc
ror
cmps
test
cmp
and
mov
pop
inc
xlat
sbb
sub
(bad)
or
lea
gs
sbb
pop
sub
pop
mov
push
inc
test
dec
ret
fnstsw
sub
out
cmp
ja
mov
jle
outs
mov
push
mov
aad
lock
adc
std
mov
xchg
jmp
mov
pushf
jecxz
scas
fwait
pop
repnz
adc
(bad)
mov
loope
pop
or
out
dec
add
sub
or
mov
mov
or
sbb
ins
ror
add
xchg
(bad)
pushf
cmp
pop
(bad)
jecxz
mov
sbb
sub
outs
jnp
int3
aaa
pop
and
inc
cmp
ja
scas
pop
retf
xor
sbb
stos
scas
cmp
xchg
dec
je
out
out
and
loop
in
test
call
mov
pop
mov
outs
or
pminsw
aaa
aad
cpuid
mov
jae
pop
mov
es
sub
aas
or
test
jmp
mov
mov
adc
jl
push
inc
das
lea
in
fwait
cld
ror
sbb
mov
ss
lods
cmp
popf
arpl
test
sub
fwait
push
and
mov
xchg
cmps
fstp
xlat
mul
(bad)
out
jmp
leave
in
cmp
call
test
push
or
fist
cmp
xor
xor
movs
fild
jg
gs
popa
mov
test
mov
cmps
out
push
mov
push
les
xor
adc
cmp
stos
mov
ret
dec
dec
or
cmp
push
in
lahf
test
inc
addr16
je
rol
iret
in
ins
xchg
add
jecxz
jb
jle
fimul
or
(bad)
inc
lods
push
pop
in
icebp
xchg
jno
mov
aas
movs
or
sub
pop
arpl
push
dec
test
popf
dec
push
sbb
test
les
std
xor
(bad)
and
xor
inc
add
xor
mov
out
pop
gs
lahf
jle
xor
fild
sbb
dec
pop
pop
mov
imul
cmps
data16
fimul
sbb
jecxz
test
popa
inc
cmp
inc
out
dec
dec
sbb
mov
std
out
jns
ror
aaa
xlat
das
cmp
int
mov
imul
push
scas
mov
jmp
ins
dec
sbb
push
jnp
dec
mov
outs
jp
dec
dec
cmps
add
jecxz
mov
adc
jae
jle
pslld
loop
mov
cmp
pop
and
fistp
ror
loopne
inc
(bad)
xchg
pop
cld
ror
outs
clc
imul
or
jmp
adc
push
nop
mov
ret
add
sbb
imul
pop
mov
int
mov
xor
mov
jp
iret
mov
pop
movs
lock
(bad)
into
mov
imul
packuswb
test
mov
(bad)
jecxz
cld
mov
jg
pop
in
sbb
sub
(bad)
cmp
daa
xor
rcr
aaa
jge
(bad)
jmp
dec
xor
inc
fisttp
lahf
cmp
add
clc
loope
jns
adc
xlat
into
jnp
push
call
sbb
jecxz
xchg
or
sbb
adc
or
inc
out
pop
mov
mov
(bad)
in
(bad)
imul
(bad)
inc
div
cli
jnp
or
mov
icebp
out
and
jo
stc
call
hlt
jns
jno
dec
(bad)
fsubr
add
pushf
shr
jmp
ja
push
xchg
mov
mov
pop
imul
mov
jecxz
mov
lahf
loopne
jmp
aaa
leave
mov
push
jecxz
into
pop
jl
icebp
pop
icebp
(bad)
sub
cmp
arpl
and
jno
aas
jmp
adc
cmp
xor
movs
sti
and
push
ins
push
jmp
xchg
jg
lahf
dec
cs
sbb
jbe
test
push
popa
cmps
push
adc
retf
cli
inc
cmc
data16
rol
or
xchg
out
ins
mov
(bad)
icebp
aaa
cmp
add
sbb
repz
popf
out
mov
sub
ja
lods
cmc
pop
sub
xor
pop
repz
int
mov
retf
mov
clc
daa
xchg
(bad)
call
dec
sbb
pop
fild
retf
or
xchg
test
adc
pop
pusha
add
sub
and
icebp
mov
das
fucomip
test
mov
in
imul
push
sahf
mov
imul
mov
sbb
mov
dec
cwde
(bad)
or
dec
sti
add
into
or
sahf
outs
(bad)
in
addr16
pop
or
push
stmxcsr
jle
mov
fcomip
push
cmp
push
push
into
jge
xor
loopne
test
push
ja
sub
jg
dec
xchg
mov
leave
dec
mov
mov
shl
xchg
dec
add
(bad)
out
(bad)
push
sub
xor
mov
dec
pop
mov
in
cmp
sub
pop
sub
cmc
dec
dec
dec
pop
into
popa
dec
gs
rcr
(bad)
cmp
cmp
or
mul
jecxz
pop
xchg
or
mov
xchg
xchg
fistp
sbb
shl
movhps
das
pusha
jg
sub
(bad)
pop
lods
sar
out
inc
ret
mov
sbb
jbe
and
popf
mov
inc
dec
stos
pop
out
mov
mov
inc
pop
push
retw
into
add
xor
js
jmp
ficom
cdq
sub
pop
jle
and
retf
and
les
xchg
outs
ret
mov
mov
arpl
lods
addr16
jecxz
jnp
in
or
inc
dec
dec
sbb
fistp
jg
std
jp
cwde
mov
bound
mov
dec
mov
cdq
jmp
xlat
iret
call
sub
lods
jecxz
pop
pop
popf
add
into
push
ds
ja
addr16
(bad)
jg
mov
in
aaa
and
inc
pop
pop
arpl
iret
sub
cmps
ret
outs
mov
stc
call
cmp
jp
or
ja
(bad)
lahf
push
push
lahf
call
cwde
pop
add
out
cmps
ins
jge
xor
pop
in
imul
cdq
add
pop
imul
jmp
jmp
cmp
out
mov
pop
clc
daa
mov
clc
fimul
les
cmp
jnp
mov
jmp
lahf
dec
dec
test
jo
dec
repnz
lock
fidivr
inc
mov
repz
jecxz
clc
push
jnp
ror
iret
push
shr
outs
(bad)
jg
pop
cmp
jp
call
inc
mov
dec
pop
sub
test
inc
aaa
cmp
mov
jbe
mov
sbb
inc
bswap
dec
bound
jg
or
push
fadd
mov
xor
mov
sub
test
leave
jmp
retf
lods
push
rcr
cmp
aas
xor
and
popa
jecxz
mov
leave
loopne
dec
scas
les
dec
mov
xor
fnstcw
or
jle
(bad)
xor
icebp
push
je
xchg
cmps
ror
imul
ja
dec
outs
push
adc
push
sub
sahf
fdivp
(bad)
repz
addr16
xlat
push
ins
mov
outs
pop
inc
adc
lods
jbe
xchg
cmp
and
dec
mov
and
mov
mov
sub
sub
sar
jle
call
int
rcr
push
shr
in
jg
push
jmp
and
dec
fcmovnbe
imul
mov
fadd
(bad)
mov
xchg
jnp
leave
out
or
outs
aaa
sub
jae
sbb
mov
out
iret
fild
fwait
mov
das
cli
push
sub
mov
js
outs
jae
arpl
fist
pop
jae
scas
std
add
(bad)
aas
and
in
iret
iret
inc
mov
imul
(bad)
arpl
dec
sub
aaa
sti
pop
stos
jle
(bad)
fstp
push
aaa
rcl
fild
mov
sub
mov
out
or
push
lods
xchg
inc
scas
loopne
les
ins
xchg
(bad)
out
lds
adc
pop
dec
rcl
repz
int
inc
ins
inc
push
lahf
and
lods
cld
jne
mov
fmul
loop
inc
in
stos
inc
push
inc
push
fidivr
ds
out
and
jl
mov
ja
(bad)
scas
jge
and
dec
test
sbb
out
iret
mov
scas
dec
(bad)
jmp
ficomp
push
ds
fstp
idiv
sub
mov
fbld
in
xchg
mov
iret
adc
rol
je
push
dec
mov
jg
pop
sbb
or
dec
or
cmovno
mov
xlat
div
aaa
dec
mov
adc
into
sbb
mov
sbb
outs
xchg
mov
ret
mov
sub
daa
or
scas
add
push
pop
sbb
pop
jne
pop
(bad)
das
(bad)
int
xchg
cli
sahf
sahf
jl
dec
and
add
jmp
mov
mov
mov
outs
or
pop
sub
lea
daa
cmp
int
inc
clc
data16
stc
or
(bad)
jmp
shl
outs
aas
jno
pop
popa
add
jmp
lahf
mov
cs
outs
mov
cld
scas
inc
aaa
dec
and
das
sahf
pop
or
fisttp
mov
dec
xchg
sbb
mov
adc
pushf
retf
add
mul
pop
test
pushf
mov
mov
jae
call
jp
adc
sbb
sahf
inc
mov
dec
gs
aas
into
aas
push
bound
loope
mov
fmul
mov
popf
pusha
sbb
mov
cmc
dec
push
jns
jo
mov
jecxz
hlt
jb
out
(bad)
cli
or
les
pop
imul
adc
mov
pop
jb
repnz
and
jne
jg
sbb
pop
in
cld
sub
imul
sub
mov
jb
repnz
(bad)
ja
mov
imul
mov
inc
leave
jge
icebp
lds
in
mov
loop
sub
fstp
push
push
and
add
dec
loop
xchg
call
xchg
xor
fwait
lahf
outs
pop
jmp
call
mov
mulps
out
pop
inc
scas
jns
dec
ds
mov
push
jns
sbb
xor
sub
mov
sub
cli
jae
sub
adc
cli
sbb
out
js
movs
into
pop
in
loopne
cmp
cmp
jns
jns
fild
jmp
or
pop
cmp
and
adc
ja
pop
pop
dec
lock
test
xchg
xor
loop
cli
sti
int
pushf
fnsave
cld
push
lods
mov
cs
nop
adc
jecxz
popf
mov
fs
pop
cmp
mov
jae
pop
cmp
push
cmps
iret
dec
jnp
scas
test
or
fnstsw
and
shl
xchg
sbb
sub
scas
xchg
jg
mov
cmp
stos
mov
fwait
mov
pop
xchg
lods
popf
out
out
or
xchg
pop
imul
stc
inc
mov
or
or
(bad)
scas
pop
fadd
call
dec
aas
push
mov
adc
pop
aas
jmp
pop
sbb
aam
stc
test
inc
push
outs
mov
add
dec
add
sub
fld
aam
xchg
cli
pop
lahf
mov
test
push
ins
daa
data16
add
rcr
dec
(bad)
or
ja
test
and
mov
cmp
daa
or
in
imul
xchg
inc
leave
pop
ds
xchg
jnp
mov
jns
ss
cs
pop
cs
(bad)
(bad)
mov
(bad)
jns
popf
xchg
ficomp
xchg
or
pop
mov
dec
pop
int
jge
mov
call
dec
jne
push
dec
dec
jle
push
or
xlat
es
xchg
mov
inc
hlt
scas
jmp
bswap
scas
push
inc
inc
pop
dec
cmp
xchg
jnp
in
int3
sahf
rol
jl
movs
or
dec
outs
xchg
push
mov
das
cmp
sub
sub
adc
pop
mov
xor
iret
xchg
jnp
and
fs
jmp
pop
dec
mov
lea
(bad)
cld
imul
mov
xor
add
addr16
sti
(bad)
ss
jne
push
sbb
aad
cmps
call
ret
mov
imul
add
(bad)
cmp
jns
jg
push
stc
jl
inc
aaa
mov
add
cmp
sbb
inc
pop
push
sahf
xor
repnz
pop
jecxz
pushf
pop
outs
sub
jns
push
jl
or
xchg
pusha
pop
dec
dec
mov
jmp
loop
jmp
fidiv
gs
push
aas
fs
popa
mov
jb
push
lahf
mov
outs
call
or
jl
aas
(bad)
or
syscall
mov
ret
scas
imul
jbe
pop
imul
push
rcr
in
inc
fcomp
mov
sub
xchg
pop
mov
mov
inc
inc
retf
jbe
lea
add
push
je
mov
jge
sbb
pop
inc
into
imul
jecxz
lods
loope
scas
mov
xor
gs
js
stos
add
enter
push
push
dec
inc
ror
cmp
or
in
scas
pop
rol
jns
or
mov
mov
mov
ficomp
or
add
in
leave
push
cmp
pop
pop
icebp
jnp
adc
xor
add
out
fild
call
outs
fsubr
xor
xchg
sub
add
repz
mov
mov
mov
cdq
ficom
and
arpl
adc
push
in
ror
mov
retf
cmp
cmp
mov
sbb
fisttp
test
pop
push
dec
test
jo
mov
xor
jns
shr
mov
dec
test
test
scas
jne
sbb
lods
popa
(bad)
jmp
cs
mov
inc
or
mov
call
test
outs
popf
pop
or
out
fsubr
fwait
mov
aas
ins
push
fcmovu
and
dec
iret
push
movs
pop
dec
scas
jmp
dec
add
daa
lods
outs
les
retf
aad
lods
adc
je
xchg
push
fs
aas
cdq
inc
fincstp
push
mov
test
or
test
pop
mov
mov
test
out
fisttp
pop
inc
push
mov
addr16
sbb
cvtdq2ps
popa
popa
mov
mov
jmp
cmp
inc
or
cmp
mov
mov
movs
mov
mov
push
in
cmp
in
jnp
pop
push
test
inc
iret
lods
aaa
hlt
cmc
mov
(bad)
mov
lahf
imul
(bad)
mov
aas
inc
in
jns
gs
fucom
fdiv
scas
mov
sbb
fwait
dec
add
sahf
inc
jns
aaa
adc
out
mov
stos
xchg
shl
pop
inc
out
enter
push
pop
jno
dec
es
das
or
push
stos
call
(bad)
sbb
cli
cmp
and
stos
xchg
popf
adc
cmp
xor
dec
repz
cli
pop
imul
repz
jmp
in
pushf
cmp
test
xchg
stos
cmp
or
call
(bad)
inc
in
js
fmul
pop
lock
jl
xchg
push
sbb
(bad)
lods
lods
jge
cmps
pushf
mov
push
addr16
jmp
sbb
push
dec
movs
push
outs
mov
scas
inc
sbb
cmp
lods
loop
mov
sbb
cmp
pop
pop
mov
pushf
jne
inc
out
or
xchg
fdiv
or
sbb
fild
sub
mov
in
(bad)
jmp
lahf
(bad)
adc
repnz
out
add
jle
dec
mov
cmp
jmp
jo
loopne
js
xor
jp
bound
push
dec
in
lea
cld
leave
sub
loope
lock
pop
movs
sahf
xchg
arpl
mov
or
jae
shl
sub
ror
jns
mov
int3
test
pop
dec
pop
popa
fisttp
aaa
lds
(bad)
mov
fwait
xor
lds
popa
cmps
or
cmp
retf
lods
scas
xchg
jne
jmp
jnp
stos
jle
mov
jp
lea
inc
xor
sbb
cwde
sti
xchg
push
pop
int
add
add
push
dec
push
or
sub
cmps
cwde
sbb
aas
mov
call
jmp
ins
or
and
popf
popf
ins
mov
mov
sbb
jmp
icebp
mov
jb
xlat
cld
repz
fnsave
jecxz
adc
cld
retf
int
and
test
lahf
sub
jg
sub
lea
and
sbb
pop
cmp
in
out
mov
es
and
xchg
xor
(bad)
jp
mov
inc
jae
arpl
and
add
xor
test
pop
or
sti
sbb
push
jmp
xchg
mov
mov
pushf
adc
mov
call
pushf
leave
dec
loope
es
mov
mov
(bad)
je
xor
cmp
push
scas
push
jnp
inc
mov
dec
jp
cmp
mov
(bad)
fiadd
nop
xchg
sti
adc
mov
fistp
pop
(bad)
and
sbb
shr
cmp
js
mov
cmp
outs
(bad)
sub
xlat
mov
enter
nop
cmp
mov
sbb
sbb
ins
cmp
cmp
push
or
push
scas
popf
xchg
out
xchg
out
dec
jo
fldenv
setae
mov
fisttp
mov
aas
sahf
movs
dec
mov
mov
enter
push
pop
sbb
imul
dec
or
or
fwait
movs
or
push
and
sub
pop
sbb
pop
fnstenv
lock
mov
pop
xor
popf
loope
inc
push
(bad)
xchg
ret
lods
(bad)
adc
scas
aas
pop
repz
hlt
pop
cmp
mov
mov
push
scas
(bad)
pop
retf
retf
jo
sbb
shl
and
jle
mov
or
out
dec
sbb
inc
push
outs
sahf
bswap
mov
mov
mov
lahf
into
mov
call
pop
fbld
dec
jmp
pop
pop
dec
ficom
jecxz
fisttp
pop
push
cmp
out
jecxz
lods
(bad)
jle
scas
jno
mov
into
iret
adc
push
inc
nop
ins
xor
and
addr16
ins
or
(bad)
and
cs
xchg
jl
outs
mov
lock
pop
stos
adc
(bad)
dec
add
shr
push
dec
dec
loopne
cmp
add
stos
mov
int3
aad
or
scas
aas
dec
jmp
add
(bad)
out
push
dec
mov
(bad)
lods
scas
sbb
mov
cmp
cld
and
mov
fs
sti
jne
jne
stc
call
into
mov
inc
cmp
mov
sbb
imul
fst
(bad)
cmps
mov
pusha
mov
push
adc
and
aas
mov
movs
pop
sbb
sbb
cmp
loopne
out
xor
mov
fild
sub
xor
mov
cli
or
dec
ins
cwde
pop
iret
sub
xchg
sub
inc
lahf
push
ret
dec
push
aas
push
outs
iret
scas
cmps
popf
test
lods
int3
mov
xchg
add
cmp
or
(bad)
ds
cmp
inc
mov
jbe
jecxz
shr
push
pop
rol
fwait
cmp
pop
pop
scas
dec
aaa
push
or
scas
cli
ret
sub
stos
sub
pop
popa
push
ret
jp
outs
inc
mov
add
stos
cmp
test
pop
stc
scas
pop
jno
test
(bad)
jge
sti
cmp
leave
(bad)
icebp
jmp
in
push
fidivr
stos
and
shl
jg
jo
imul
and
outs
cld
(bad)
sbb
shr
gs
call
(bad)
dec
push
fldcw
cmp
test
adc
inc
aas
push
in
mov
and
ja
(bad)
daa
dec
pop
ret
and
mov
mov
add
jmp
and
in
cmp
push
mov
sbb
nop
jb
and
mov
lahf
and
adc
sbb
jle
out
adc
mov
jbe
fcomp
aam
out
xor
mov
cmps
push
std
xchg
in
cmp
hlt
test
int
mov
iret
or
dec
push
mov
pop
dec
outs
fmul
xchg
(bad)
mov
dec
xchg
lahf
ins
sbb
pop
out
add
push
xor
lahf
fdivr
adc
xchg
ja
ret
xor
push
mov
xchg
cs
mov
cmp
xor
das
sbb
rep
cmp
xor
adc
mov
(bad)
aam
int3
fcmovb
ret
mov
cmp
(bad)
jne
std
mov
mov
mov
mov
mov
sbb
call
adc
and
pop
dec
adc
test
out
mov
test
daa
scas
shl
jmp
repnz
xor
jnp
pusha
mov
stc
pop
xchg
aaa
iret
xor
dec
retf
xor
and
popa
dec
push
stc
ins
cmps
out
push
adc
not
dec
and
jae
pop
adc
jp
xchg
pop
add
sub
loope
mov
sub
mov
push
fcomp
cwde
xchg
daa
sqrtps
mov
sbb
fwait
pop
dec
lds
retf
das
dec
sub
data16
dec
and
xchg
mov
sub
mov
adc
neg
push
push
out
scas
push
nop
xchg
sub
ins
cmp
fdivr
sahf
std
in
cmp
icebp
cld
mov
stos
ficom
fs
sub
push
aaa
aad
ret
daa
add
das
into
jnp
fild
xchg
push
imul
bound
test
cdq
(bad)
out
aaa
sub
push
jp
inc
jg
int
dec
jne
stos
lea
mov
dec
dec
daa
dec
pop
sub
or
dec
cli
int3
(bad)
dec
jno
sbb
lods
lahf
lahf
jae
add
or
in
sar
lahf
pop
popa
add
iret
movs
popa
xchg
fsubr
or
mov
push
in
sub
mov
in
pop
jg
loope
das
test
or
xchg
pop
xor
test
inc
movs
(bad)
add
int
leave
ins
mov
lds
dec
mov
(bad)
push
mov
std
mov
mov
ret
iret
cmp
push
into
add
push
sti
out
dec
(bad)
cmovnp
sbb
mov
fs
popa
shl
xor
jns
lahf
stc
inc
stos
jbe
ins
pop
push
cmp
out
in
fist
dec
sbb
(bad)
lods
dec
add
test
lock
dec
adc
nop
or
outs
js
cmp
or
test
xor
retf
xor
rcr
xor
cmp
adc
xchg
nop
jmp
push
jo
aam
mov
xor
xchg
popa
cld
mov
mov
iret
out
mov
jbe
scas
nop
cmp
in
test
jns
sbb
rol
add
xchg
inc
loopne
les
sub
cdq
ficom
cli
xchg
cmps
retf
and
dec
inc
sub
lahf
add
cli
xchg
adc
mov
jge
mov
dec
add
xchg
jnp
ret
mov
test
es
fist
fidivr
mov
iret
push
stc
sub
outs
xchg
mov
mul
mov
mov
xchg
xchg
and
mov
addr16
retf
jnp
out
xchg
mov
arpl
sbb
in
pushf
jb
pop
shr
xchg
neg
mov
cmp
test
fnstenv
retf
cdq
sub
jecxz
test
retf
in
cli
push
adc
push
push
in
sti
dec
pop
bound
pop
cmp
imul
adc
ror
add
or
out
jg
cmps
call
jp
(bad)
sub
mov
(bad)
push
mov
or
outs
sub
and
or
xchg
xor
sub
or
dec
and
add
xor
jb
mov
(bad)
out
movs
xchg
out
push
cmc
xchg
test
rcr
push
test
sbb
mov
inc
das
mov
popf
(bad)
xchg
push
push
sbb
loopne
push
ins
push
lahf
xor
aas
jnp
dec
sahf
pop
jo
cs
lods
fidivr
push
stos
mov
sub
cld
xor
sti
loope
out
arpl
icebp
in
adc
stos
mov
call
mov
inc
sti
sti
pop
jp
sub
add
mov
mov
jae
data16
movs
pop
pop
sbb
retf
das
loop
add
cmp
test
adc
sbb
sbb
rcl
fcmovne
fistp
or
mov
test
mov
push
or
jg
inc
cmp
jl
call
iret
xor
(bad)
jmp
inc
sbb
cmp
push
cli
adc
(bad)
(bad)
popf
push
or
cmps
sbb
inc
gs
sub
or
(bad)
popf
rep
aad
call
adc
adc
and
xchg
clc
dec
sub
out
push
sbb
test
xor
leave
xor
sub
adc
retf
call
mov
int
int3
rcl
mov
add
int3
push
in
dec
fidiv
xchg
jns
cmp
sub
arpl
mov
pop
fimul
dec
pop
and
pop
or
add
out
call
sub
dec
dec
xor
xor
sub
out
xchg
or
sbb
cmp
or
outs
cmps
or
mov
jg
push
iret
sbb
lock
push
sbb
in
js
or
sub
inc
push
movs
mov
in
mov
outs
cmp
ins
jge
(bad)
arpl
retf
(bad)
rol
mov
jo
mov
and
mov
jmp
sahf
stos
push
out
cmp
bound
or
push
iret
fidivr
outs
add
cwde
cwde
stos
and
push
retf
hlt
cmp
(bad)
ret
sub
push
outs
mov
sbb
in
mov
mov
jb
adc
mov
cmp
div
push
cmp
dec
add
sub
push
icebp
lock
ret
sub
bound
cmp
jnp
jmp
cmp
iret
mov
repnz
imul
or
add
bswap
mov
jge
jb
out
mov
sti
mov
fidivr
test
pop
jns
enter
pop
jmp
loop
xor
mov
(bad)
mov
ds
test
mov
jb
push
mov
inc
xchg
in
sbb
mov
jbe
cmps
jno
pop
fisubr
jecxz
mov
mov
xchg
sti
jg
outs
mov
je
shl
lods
cmp
jbe
pushf
sbb
das
sub
dec
mov
pushf
and
daa
xchg
mov
xor
mov
movs
aaa
sub
jo
movs
pop
movd
lock
imul
pop
sub
(bad)
retf
lahf
mov
cli
cmp
inc
inc
imul
dec
je
fmul
jle
clc
cli
mov
jmp
jmp
push
idiv
sbb
jle
add
dec
(bad)
aas
aad
jl
shl
lahf
out
add
mov
dec
sub
mov
cmp
repnz
mov
imul
lahf
das
lods
jmp
clc
and
adc
mov
cmps
sti
or
outs
push
(bad)
jge
packssdw
push
je
sti
retf
bnd
dec
push
pop
imul
pop
fdivrp
out
cmp
dec
or
mov
sbb
and
cmp
xor
(bad)
fist
ss
outs
ds
jae
xchg
or
jmp
retf
cmp
adc
retf
adc
sub
push
ins
and
or
jo
aad
fsubr
fwait
sti
movs
out
cmp
shr
inc
pop
and
dec
fistp
retf
adc
push
xchg
pop
xchg
mov
ins
jp
xchg
xchg
fcmovnu
mov
shr
inc
aas
sahf
push
pop
mov
test
push
nop
dec
push
inc
pop
and
je
stos
sub
dec
in
retf
int
ins
xor
jmp
hlt
and
jg
jne
inc
dec
pop
shl
xchg
mov
dec
int
aaa
(bad)
clc
dec
adc
aam
dec
jg
mov
xchg
(bad)
lea
cmp
in
jno
movs
lea
xlat
push
mulps
outs
push
gs
and
inc
in
jge
mov
xchg
leave
fsub
retf
into
sbb
jmp
xor
sub
loope
or
fnstcw
fild
call
rcr
movq
or
jbe
leave
cmp
or
imul
retf
cmp
aad
push
jmp
xchg
out
clc
sahf
std
icebp
jmp
(bad)
push
lods
sub
call
push
fucomi
sub
sbb
in
fstp
fcom
hlt
cmp
sbb
pop
jns
xchg
sub
addr16
outs
cmp
inc
(bad)
add
or
ret
jnp
shl
pop
dec
mov
lds
mov
mov
dec
outs
jecxz
pop
push
out
dec
inc
pop
dec
pop
pop
int3
sbb
sbb
repz
jmp
xor
mov
(bad)
adc
inc
loopne
mov
sub
ud0
leave
(bad)
iret
fs
sub
test
jae
push
dec
outs
cdq
pop
mov
mov
xor
sbb
(bad)
test
add
and
dec
(bad)
out
mov
stos
je
mov
cwde
sub
dec
push
xchg
and
in
mov
test
jnp
sbb
cld
into
sub
adc
sbb
jno
jmp
sbb
movs
out
mov
in
retf
pop
push
in
mov
aaa
sahf
ins
pop
cmp
call
bound
(bad)
out
mov
inc
sub
adc
faddp
fadd
(bad)
in
out
inc
inc
inc
push
mov
int
stc
sahf
adc
fisubr
popa
xor
or
int
arpl
je
push
mov
movs
jg
push
jg
outs
cmp
sub
pop
sub
loopne
add
rcl
sub
xchg
jmp
mov
loop
jp
mov
test
sub
cli
pop
ds
cli
mov
xchg
fnsave
xor
and
pop
pop
push
int
xchg
cmp
push
sub
test
inc
cmc
sar
adc
popf
xor
retf
jge
rcr
adc
imul
mov
or
stos
in
xchg
sub
outs
push
mov
call
pusha
(bad)
sub
pop
daa
xchg
lods
fistp
sbb
call
fsub
repz
sub
pop
fcom
sub
imul
mov
aas
and
or
loopne
xchg
add
and
adc
repnz
repnz
add
pop
sub
mov
sahf
push
cmp
fstp
out
stc
stc
(bad)
push
dec
mov
loopne
mov
jae
pop
pop
outs
fist
mov
or
cmc
dec
fisubr
jns
mov
outs
ret
gs
pop
jmp
push
jmp
sar
retf
in
xor
or
xchg
pop
jnp
mov
xchg
shr
popa
shl
mov
mov
sti
push
dec
shl
push
fbstp
add
popf
mov
jmp
loopne
dec
mov
jg
clc
cli
cmc
call
pushf
into
xor
mov
push
inc
sar
mov
scas
int3
scas
je
cmp
ja
cmp
scas
aaa
or
fs
pop
or
jmp
inc
pop
push
sub
retf
call
mov
fwait
imul
cmp
mov
pop
sbb
mov
es
xor
mov
addr16
jg
mov
stos
imul
call
push
push
jmp
nop
mov
mov
dec
and
xor
clc
(bad)
std
mov
sti
enter
sub
fwait
addr16
sub
test
jecxz
mov
dec
ret
cmp
in
pop
leave
sbb
cwde
jbe
fisubr
call
into
sar
in
out
mov
xor
das
sub
mov
sbb
loope
push
cmp
mov
enter
push
pusha
test
or
ja
retf
pop
std
int
das
(bad)
sbb
cmp
mov
jo
jg
das
sbb
dec
pandn
jle
add
push
sbb
retf
(bad)
into
pop
ret
(bad)
cmp
int3
xchg
mov
cli
sahf
xchg
jl
and
cmps
jo
pop
mov
push
fistp
mov
mov
xor
push
push
test
arpl
pop
fidiv
jl
std
(bad)
dec
sbb
jo
es
mov
pop
dec
add
mov
mov
cmp
pop
daa
add
out
ins
mov
mov
nop
scas
mov
jmp
sub
lock
inc
ss
jmp
pushf
jmp
or
int3
in
fild
das
dec
adc
mov
lock
rcr
mov
dec
xchg
mov
call
popf
add
arpl
js
adc
fnsave
mov
sub
mov
arpl
stos
icebp
xchg
int
mov
imul
ins
fst
out
dec
push
add
shr
jmp
xor
dec
(bad)
jg
pop
outs
sbb
(bad)
fldenv
adc
adc
mov
lock
push
cmp
dec
adc
fiadd
iret
cmp
out
mov
(bad)
iret
cmp
outs
inc
inc
ror
sbb
icebp
cmp
dec
call
mov
mov
pop
jmp
and
cmp
(bad)
push
mov
pop
or
outs
xchg
ja
push
xchg
push
sub
loope
outs
rcr
loop
bswap
frstor
and
mov
pop
mov
mov
mov
popf
(bad)
call
dec
mov
aas
js
mov
pop
and
jae
mov
lods
sub
xlat
in
dec
and
in
call
sub
xor
test
cmc
in
loopne
retf
idiv
dec
sbb
fisttp
ret
ins
adc
pop
movs
mov
sti
push
mov
aaa
dec
lea
in
sahf
aaa
fwait
jmp
ins
test
xchg
or
ds
mov
push
outs
xor
jle
imul
dec
das
mov
or
add
repnz
jg
ret
retf
sub
sbb
scas
ret
jbe
pop
xor
jle
xor
outs
xchg
cmp
adc
jbe
mov
push
mov
xor
inc
cmp
mov
mov
iret
inc
add
cli
loopne
stc
scas
cmp
out
test
mov
jp
cdq
cwde
in
iret
ja
paddusw
fistp
xor
pop
push
(bad)
push
mov
sbb
inc
stos
xor
sti
dec
sub
cmp
mov
outs
jecxz
push
inc
sbb
pop
in
xchg
push
faddp
test
push
shl
lahf
jp
ret
sub
mov
add
lahf
rol
xor
popa
clc
into
retf
in
add
jns
dec
jns
push
leave
lahf
mov
and
inc
popf
sbb
adc
add
aam
dec
push
add
sub
fsin
or
xchg
dec
pop
pop
les
inc
xor
sbb
mov
sbb
cld
aam
les
pusha
xchg
dec
outs
mov
popf
and
jle
inc
int
enter
aas
dec
fsub
push
pop
jno
fld
dec
xor
sbb
push
out
loop
jbe
jge
arpl
outs
addr16
ror
fs
inc
mov
scas
pop
jle
mov
jle
sbb
test
(bad)
sub
xor
inc
mov
sub
jg
push
iret
test
jmp
out
cmp
xchg
cli
imul
outs
xor
cmp
stc
sub
inc
or
cld
(bad)
xor
push
dec
push
sub
add
mov
test
add
xchg
xchg
cwde
call
adc
ds
cmc
jne
push
cdq
or
lahf
cmp
scas
jg
(bad)
ficom
pop
retf
ja
fistp
adc
dec
jg
sub
xor
sub
push
sbb
add
mov
lea
lods
movups
jecxz
retf
dec
cld
mov
mov
sub
lahf
cmp
in
fistp
jo
test
repnz
ja
test
dec
lods
push
call
jle
call
mov
(bad)
ds
dec
sti
mov
xchg
mov
sbb
mov
ficom
jp
cmp
sti
call
xor
lock
mov
mov
int3
fldenv
or
push
seto
out
out
dec
retf
bound
gs
xchg
mov
mov
xchg
inc
(bad)
daa
inc
adc
js
pop
and
sub
dec
adc
out
mov
sub
out
mov
sub
outs
xor
repnz
sti
fucomip
fldcw
cmc
pushf
sub
sbb
adc
hlt
jge
sub
push
mov
cli
or
mov
in
mov
call
push
adc
sub
dec
test
(bad)
jnp
cmp
pop
sub
sbb
retf
sbb
pop
jb
mov
jbe
mov
ss
add
fwait
xor
out
dec
or
imul
stos
mov
dec
aam
mov
fimul
stos
push
push
mov
test
xchg
or
cmp
cmps
cwde
das
or
test
xlat
arpl
movs
push
sahf
loopne
ss
iret
mov
push
cs
cmp
je
adc
sbb
(bad)
pop
jge
pop
fldcw
leave
(bad)
ror
movs
dec
inc
and
fst
jae
std
sub
mov
pusha
jl
sub
push
mov
jmp
stos
stos
dec
out
xchg
daa
and
xchg
sbb
pop
retf
out
push
mov
cmp
mov
jno
mov
fdivr
and
ror
adc
jo
(bad)
xchg
dec
sub
scas
scas
mov
xlat
pop
lock
aaa
pop
movs
mov
nop
fimul
fwait
jg
add
stos
das
xlat
mov
sar
push
sbb
retf
out
hlt
cwde
test
jbe
retf
rol
sbb
add
sbb
jg
jae
add
dec
or
ds
pop
mov
in
shr
cli
add
or
xor
or
or
outs
dec
rol
mul
scas
jmp
pop
jecxz
jmp
push
mov
dec
xchg
int
push
sbb
xor
jnp
imul
mov
movq
imul
inc
mov
sahf
retf
(bad)
scas
dec
daa
dec
in
lar
push
rol
scas
mov
aaa
shl
(bad)
dec
pop
pop
dec
imul
cmp
cmp
mov
(bad)
ds
dec
bound
cmp
fwait
and
or
jno
or
popa
dec
fsubr
mov
fist
fwait
ret
retf
pop
cwde
(bad)
pop
inc
mov
(bad)
iret
adc
test
dec
mov
sahf
into
fwait
pop
adc
cld
mov
call
sti
cmp
dec
mov
into
mov
shl
repnz
ja
enter
cmc
ss
and
mov
xchg
sbb
push
mov
test
xchg
pop
or
sbb
clc
sbb
lods
mov
jb
cld
loope
inc
fdivr
mov
lods
and
pop
retf
fisub
clc
test
adc
into
or
inc
leave
rcr
mov
jle
or
push
stos
cli
sbb
outs
dec
pop
scas
stos
sar
fild
cs
dec
sub
jp
stc
sbb
and
stos
add
or
push
fbld
mov
sbb
push
sub
push
ja
add
bnd
outs
sub
fidivr
retf
retf
push
stos
call
push
jne
xor
sbb
jle
dec
push
leave
cdq
(bad)
mov
sbb
add
and
jmp
stc
add
inc
loop
retf
retf
retf
push
outs
adc
stos
in
lahf
pop
pop
lods
sbb
call
sbb
out
aas
cmps
cli
sbb
and
cmp
pop
sbb
mov
aaa
hlt
add
dec
out
cmps
(bad)
mov
loopne
mov
dec
jmp
lds
mov
mov
pusha
pop
retf
leave
sub
cs
dec
jge
stos
mov
push
adc
mov
or
mov
cmps
stc
or
sbb
jae
js
retf
dec
movs
add
stos
fidivr
add
mov
push
leave
and
cs
cmp
(bad)
cmp
test
std
cmps
inc
(bad)
mov
loope
inc
into
xlat
jns
scas
cmp
or
fimul
nop
out
mov
mov
pop
push
cli
test
out
test
imul
jbe
pxor
jle
das
push
mov
push
mov
cmp
or
jb
push
imul
or
or
jl
scas
imul
xchg
mov
fadd
cmp
ins
jbe
dec
imul
pop
or
imul
clc
jp
retf
dec
cmp
dec
imul
les
pusha
lods
ficomp
pop
xor
call
adc
leave
and
xchg
pusha
dec
(bad)
icebp
(bad)
nop
mov
iret
stc
in
test
ds
sbb
adc
imul
movs
and
cmp
inc
out
adc
repz
imul
mov
cmps
je
dec
or
pop
inc
in
mov
xchg
jno
xor
adc
dec
test
dec
pop
or
mov
jnp
lahf
dec
jnp
scas
cld
xchg
mov
and
mov
mov
sbb
arpl
int3
dec
inc
mov
xchg
mov
adc
push
fisubr
call
stc
inc
int3
fcmovne
pop
(bad)
fwait
jnp
jmp
inc
or
imul
sub
and
sbb
and
pop
les
stos
retf
push
fwait
adc
jmp
in
cs
jg
pop
push
pop
sub
push
sbb
test
retf
xor
jmp
xor
scas
push
dec
ja
mov
or
fstp
sahf
jnp
mov
stos
mov
jl
or
xor
sub
outs
push
cli
push
pop
pop
movs
les
inc
test
sti
(bad)
inc
jnp
out
cmp
inc
push
fwait
out
scas
(bad)
fcom
out
lods
lods
sbb
nop
xchg
call
in
lea
jmp
push
stos
mov
int3
sahf
pop
mov
sbb
call
icebp
fidivr
dec
js
iret
call
out
ffreep
into
imul
int3
jns
(bad)
ins
je
sub
lea
leave
retf
sar
mov
sahf
sbb
mov
xlat
or
cmp
jl
(bad)
sub
call
mov
xor
in
inc
dec
js
mov
test
test
cs
or
mov
call
mov
pop
adc
cs
iret
mov
cmps
dec
ret
rcr
retf
fmulp
sbb
iret
mov
imul
cdq
mov
adc
push
cmp
inc
movs
out
pop
add
stos
cmp
jg
outs
ja
xchg
cmp
popa
iret
dec
int
(bad)
mov
xor
pop
add
cmp
inc
jne
std
hlt
jne
mov
fiadd
mov
fldenv
push
mov
or
call
cmp
cmp
stc
pop
test
dec
outs
xadd
mov
out
lods
pop
fwait
addr16
mov
push
jmp
pop
(bad)
push
fiadd
cmp
add
(bad)
in
inc
arpl
sbb
popf
xchg
std
sbb
(bad)
stos
dec
or
imul
inc
lods
ja
lods
nop
push
mov
in
std
jmp
enter
cmp
or
or
mov
and
mov
jnp
sbb
cmp
and
fadd
mov
push
ret
icebp
sub
sub
leave
pushf
in
dec
repz
cmp
push
iret
dec
jecxz
iret
sub
mov
add
int3
dec
imul
add
adc
pop
xchg
movs
dec
and
sbb
jecxz
xchg
pop
sbb
into
sbb
test
or
sbb
sbb
sbb
jbe
cs
imul
(bad)
cmp
retf
adc
add
pop
and
fdiv
int
test
inc
int
jmp
jg
xchg
cmp
add
dec
stos
push
retf
loopne
mov
pop
dec
sub
xor
push
stos
or
ret
sbb
mov
(bad)
push
lods
cs
leave
iret
(bad)
fstp
outs
enter
lock
sub
loopne
test
adc
addr16
sbb
sub
mov
outs
ret
xor
popa
add
sub
jmp
popf
mov
lahf
(bad)
pop
mov
adc
arpl
je
pop
dec
neg
cld
jns
inc
aam
xchg
shr
fwait
stos
jle
gs
push
mov
out
cmp
out
jg
pop
icebp
lea
in
mov
push
clc
dec
shl
jl
lahf
iret
xchg
mov
mov
fild
mov
sub
inc
pusha
sbb
scas
icebp
sub
xor
mov
push
pop
xor
or
imul
cdq
enter
jecxz
pop
add
imul
jo
xor
jle
add
jmp
cmp
mov
dec
sti
cmps
pop
xchg
mov
ins
sbb
into
dec
(bad)
xlat
lods
cmp
jecxz
push
or
jg
push
push
dec
mov
xchg
mov
fnstenv
cs
popf
pop
pop
pop
cmp
mov
clc
in
mov
outs
pop
ds
mov
mov
mov
mov
pop
xchg
ds
shr
push
mov
push
sbb
push
or
push
mov
inc
dec
mov
ja
call
enter
imul
(bad)
push
pusha
loope
pop
out
push
jmp
pop
inc
(bad)
mov
and
fisubr
or
xacquire
aas
enter
xchg
xlat
dec
scas
sbb
jp
mov
loope
jne
mov
cmovns
xchg
pop
out
dec
sub
cmps
jge
lods
out
lods
cld
test
push
pop
pop
outs
sti
push
pop
(bad)
adc
mov
scas
dec
rcr
or
out
rcr
inc
mov
or
jle
stc
cmp
xor
mov
pop
mov
lahf
cmp
sahf
lock
enter
bound
push
jle
xchg
retf
imul
out
aad
in
jne
cli
mov
repnz
jle
xchg
aam
jnp
dec
push
push
fdivr
sbb
out
imul
mov
(bad)
movs
cld
inc
pop
aam
and
ds
leave
xchg
popf
adc
mov
pop
inc
js
sub
or
ds
xchg
out
mov
in
leave
test
retf
pop
pop
inc
dec
mov
dec
or
ss
jb
cmp
sub
(bad)
mov
pop
cld
cmp
dec
adc
and
jg
adc
sub
movs
mov
or
leave
cld
fcmovnbe
retf
ja
ss
pop
ret
iret
adc
clc
cmc
stos
jae
dec
pop
fild
dec
sbb
sbb
jnp
int
nop
mov
cmp
sbb
mov
jmp
outs
cs
sub
push
sub
cmp
pop
(bad)
mov
stos
push
stos
fnstenv
sbb
pop
repz
gs
dec
dec
mov
mov
xor
ficom
or
lahf
icebp
fisub
sbb
(bad)
mov
pop
xor
aam
mov
cmp
adc
out
sar
repnz
(bad)
in
or
(bad)
stc
iret
push
mov
and
jle
xchg
mov
cmps
int3
inc
aas
out
fbstp
push
dec
mov
popf
movs
jns
inc
inc
xor
stos
std
sub
inc
cmp
or
lods
mov
xchg
clc
cmp
fwait
xchg
cmp
jg
test
in
mov
mul
pop
or
and
mov
data16
sti
js
lods
and
mov
repnz
loope
jle
xchg
stos
xchg
push
xchg
imul
ret
mov
and
push
cmp
(bad)
sahf
pop
pop
inc
mov
push
test
stc
dec
xchg
add
pop
mov
ins
mov
jb
adc
push
call
fwait
call
pop
mov
call
mov
dec
sub
leave
in
push
mov
and
stos
pushf
clc
vpsadbw
cmp
add
call
pop
addr16
mov
fldcw
movs
mov
pop
ins
ins
sub
scas
repnz
or
cld
mov
stos
movs
call
lahf
data16
in
dec
enter
ja
inc
in
bound
sbb
fist
cli
pop
mov
scas
mov
ficomp
dec
imul
sti
scas
push
mov
inc
shr
inc
test
jg
mov
sbb
pop
mov
lods
mov
stos
repz
rcr
pop
add
int3
int
dec
jge
mov
aaa
repz
popf
fsubr
xor
pop
mov
out
iret
cmp
or
xor
xchg
cli
cwde
adc
mov
push
aam
fsubr
jnp
mov
ret
fidiv
jnp
cmp
sti
js
mov
xchg
in
fbstp
sar
mov
out
inc
aas
div
(bad)
fs
aas
lods
jns
dec
iret
mov
hlt
mov
dec
pop
mov
mov
or
inc
mov
aas
or
retf
movs
xabort
xchg
sub
cld
in
stc
sbb
fnsave
inc
and
sar
push
bound
aad
sbb
lock
dec
dec
retf
das
stos
inc
test
xor
stos
push
adc
mov
mov
fimul
repnz
cmps
aad
aas
rcr
mov
dec
aas
jmp
sub
xchg
stos
sbb
pusha
push
aad
clc
test
cmp
xor
xchg
aam
fisubr
dec
sub
xor
lahf
icebp
mov
sar
mov
jmp
jmp
std
or
cmp
sbb
test
out
cs
(bad)
retf
iret
fiadd
pop
jno
repnz
sbb
fs
or
retf
mov
and
outs
pop
(bad)
xor
ds
xor
test
pop
fnstcw
ret
or
cmp
jmp
sbb
cmp
das
sub
out
jo
cmc
ja
push
outs
lods
call
mov
loop
jns
(bad)
outs
xor
sahf
pop
pop
nop
loope
ret
mov
sbb
inc
pop
sar
dec
xchg
xchg
imul
ins
retf
push
inc
mov
push
mov
cli
jg
mov
and
pop
or
loope
aaa
pop
(bad)
mov
pop
ss
aaa
(bad)
cld
cmp
push
jmp
ret
mov
or
out
dec
in
jle
cs
ret
ins
jp
movs
outs
aas
test
mov
daa
mov
out
faddp
(bad)
xchg
js
mov
pop
sti
dec
mov
int3
or
fst
rcl
sub
out
jae
adc
sar
jnp
pop
outs
clc
ret
test
cmps
fcmove
jecxz
xchg
jg
jmp
push
xchg
in
jnp
into
sbb
jo
push
jecxz
pushf
ds
jne
jne
jg
(bad)
(bad)
jg
out
or
dec
into
mov
cmp
jmp
cmp
lahf
sbb
adc
pop
mov
out
sbb
xor
fistp
xor
das
or
mov
fisttp
adc
jmp
stc
js
jmp
iret
xchg
jp
les
dec
sbb
or
push
call
test
jecxz
pop
fcomi
repz
and
pop
sub
push
dec
dec
lahf
push
loop
cmp
push
cld
xchg
mov
aaa
inc
cmps
aam
imul
mov
into
mov
mov
in
or
repnz
fdivrp
mov
ficomp
(bad)
ficomp
dec
push
push
icebp
stos
pop
jb
sbb
cdq
pop
jg
fsubr
mov
and
daa
mov
sbb
adc
mov
lods
cmps
test
add
cmps
dec
in
push
jecxz
dec
dec
jne
das
dec
or
int3
push
jge
outs
adc
mov
jl
pop
pop
movs
(bad)
retf
jne
sar
fwait
xor
and
scas
pop
fs
cmps
jo
retf
dec
pushf
xchg
xor
fidiv
mov
xor
hlt
mov
and
jnp
push
jmp
es
scas
pop
jmp
xlat
test
int3
mov
bound
ins
xchg
xchg
cmp
loope
mov
cli
test
pop
fstp
mov
cdq
dec
lods
dec
jg
cmp
out
retf
(bad)
mov
lea
cmp
push
fidivr
mov
aaa
into
adc
inc
add
pop
fwait
xchg
sub
sub
inc
add
jae
xor
je
call
sbb
call
in
sub
jbe
lods
xlat
cmp
clc
popa
iret
test
pop
push
dec
pop
lods
scas
and
lods
inc
les
stos
jl
xchg
retf
mov
cdq
jl
jnp
sub
cmp
mov
add
sbb
sub
mov
jecxz
pop
pop
ins
(bad)
fadd
(bad)
jp
fnstsw
add
push
mov
scas
call
shr
xchg
sbb
ret
and
(bad)
mov
inc
mov
xor
add
test
sti
inc
call
cmps
ins
std
pop
or
ins
shl
dec
jmp
ja
cdq
int3
fwait
inc
sbb
add
test
jmp
sub
int
leave
arpl
inc
mov
mov
mov
pop
pop
jmp
sub
stc
push
pop
stos
sti
rep
shl
ja
sub
adc
push
push
(bad)
sbb
pop
std
cmp
daa
push
clc
cmp
test
fwait
out
sbb
aad
(bad)
cmps
or
add
mov
jnp
(bad)
or
test
das
leave
pop
div
mov
int
sub
jbe
push
fcmovne
pop
jbe
ins
cmp
sub
addr16
(bad)
cmp
mov
push
push
aas
mov
mov
inc
jmp
sub
add
mov
test
jmp
inc
shl
cs
mov
mov
jg
inc
int3
inc
ds
(bad)
outs
out
push
add
fisubr
pavgb
not
imul
add
fdiv
cmc
and
or
ins
out
jecxz
out
shl
vmwrite
sbb
outs
dec
pop
jl
retf
lock
add
or
jo
cmp
adc
sub
rcr
pop
xchg
mov
data16
and
shl
enter
(bad)
cmp
mov
push
icebp
nop
cs
hlt
and
stos
pop
ret
mov
out
mov
jle
ja
outs
out
push
ror
pop
dec
std
cmps
sbb
test
xor
mov
sbb
jg
pop
out
fmul
mov
mov
(bad)
cmp
cmp
scas
push
push
add
and
test
mov
fwait
add
repnz
cmp
xchg
arpl
fisttp
mov
fild
scas
sbb
xchg
mov
lahf
popf
lods
in
sti
scas
repz
jmp
push
pop
pop
ficom
xor
cld
cli
inc
dec
push
and
retf
jp
enter
das
(bad)
es
imul
jmp
fbld
sub
mov
fistp
cmp
iret
pop
push
ficom
in
jmp
mov
cmp
sahf
pop
out
fisttp
fwait
mov
movs
mov
cmp
pop
adc
in
mov
push
mov
fs
sub
fprem
leave
xor
outs
inc
xor
outs
or
(bad)
test
mov
ror
mov
mov
xchg
and
test
dec
inc
sar
mov
ja
(bad)
out
retf
pusha
and
cmp
or
cmp
in
sbb
out
out
(bad)
jmp
fistp
rol
in
fistp
mov
stos
adc
aas
aas
jns
mov
ficomp
retf
jmp
jae
sbb
pop
and
(bad)
sti
hlt
lods
out
aam
dec
push
mov
jmp
sbb
or
jno
jg
jmp
mov
adc
dec
outs
test
pop
fild
int
lds
cmp
fstp
jno
or
int
push
call
(bad)
out
jmp
mov
dec
cmp
inc
(bad)
popa
jle
xchg
call
cs
inc
(bad)
mov
adc
mov
pop
dec
test
rol
pop
or
cs
fld
mov
pushf
jecxz
loopne
or
(bad)
out
xchg
sbb
and
inc
pop
push
dec
sub
mov
sbb
cld
imul
(bad)
fwait
adc
int
stos
popa
lea
sahf
sub
or
pop
aam
push
mov
enter
test
sub
adc
or
jle
aaa
cmps
popf
pop
mov
xchg
dec
mov
dec
rcl
stos
sbb
mov
inc
dec
jns
movs
out
jp
ret
add
je
outs
iret
adc
pop
push
sbb
shr
mov
sbb
lahf
sbb
(bad)
or
lea
(bad)
mov
js
(bad)
cmp
or
dec
ds
shr
jae
lods
inc
mov
pop
outs
sahf
jns
(bad)
es
xchg
xchg
out
sbb
sub
jp
call
push
or
mov
sub
cmp
sbb
stos
push
push
jmp
sub
or
inc
(bad)
jle
or
addr16
dec
push
imul
adc
test
pop
and
ret
test
mov
sub
inc
adc
cli
mov
jecxz
sbb
shl
test
xchg
push
sar
and
fs
pop
push
bswap
mov
loope
inc
(bad)
repz
inc
imul
push
adc
enter
clc
or
inc
outs
mov
jecxz
bound
mov
(bad)
mov
mov
jg
inc
cmp
mov
outs
hlt
int
lahf
mov
xor
imul
jl
jg
jnp
ja
mov
cmp
retf
and
movs
sar
in
icebp
mov
hlt
pushw
out
out
movs
test
mov
les
mov
jnp
lods
es
fmul
push
pop
bound
aad
pop
jmp
inc
cmp
call
sub
movs
jp
mov
jp
outs
int3
cmps
cli
dec
lea
sti
or
push
je
or
out
in
sbb
sub
dec
mov
cld
outs
pop
dec
ins
(bad)
mov
pop
mov
aaa
sub
ins
lods
sub
lahf
or
jmp
out
data16
test
hlt
and
mov
push
sti
lods
jmp
test
adc
jae
inc
fmul
inc
jmp
cmc
stc
fisttp
or
xchg
outs
ret
fldcw
pop
jmp
std
inc
jmp
inc
add
cmp
inc
or
or
popf
pushf
or
ret
outs
push
xor
mov
or
ror
mov
xlat
js
sti
popf
fwait
js
mov
sbb
sahf
jns
jnp
pop
xchg
sbb
mov
pop
xlat
scas
pop
mov
xor
xchg
pop
idiv
cmp
lea
jnp
jbe
mov
cmc
mov
movzx
out
and
cmc
dec
repz
nop
stos
pushf
cmp
mov
or
jae
outs
xchg
int3
mov
mov
push
or
cmp
mov
xlat
mov
fst
es
or
pop
cmp
rcr
mov
jp
je
mov
int3
cmp
or
cmp
and
jl
mov
jns
out
(bad)
mov
xor
mov
leave
jp
movs
ds
sahf
shl
je
scas
adc
push
cli
add
adc
mov
iret
lahf
sbb
add
inc
mov
inc
pusha
ins
xor
mov
clc
out
push
pop
mov
xor
scas
inc
mov
adc
mov
stos
(bad)
jo
add
dec
xchg
je
dec
shl
dec
je
ja
fimul
pop
sub
mov
lods
mov
mov
in
jnp
fwait
cdq
out
cmp
fwait
add
jo
jle
cmps
mov
fld
mov
aaa
sub
fcmovne
or
or
inc
scas
cmp
and
jp
leave
and
pop
dec
arpl
mov
mov
mov
repz
ficomp
and
es
adc
jge
mov
cmp
cld
(bad)
out
cmps
out
mov
out
sbb
les
inc
scas
pop
dec
xor
pop
mov
popf
in
shr
test
(bad)
cld
mov
sbb
mov
mov
xchg
jmp
imul
and
cmp
dec
lahf
or
sub
push
retf
(bad)
xor
sub
fnstenv
fimul
xor
cmp
push
pop
and
pop
dec
fisubr
pushf
sbb
jecxz
pop
in
call
(bad)
sbb
mov
mov
push
scas
add
push
pop
mov
popf
in
dec
jbe
pop
retf
call
or
int
or
sti
xchg
dec
dec
dec
std
mov
mov
out
inc
mov
dec
int3
mov
add
loopne
lods
xadd
ins
stos
xor
fld
cli
je
outs
pop
int
mov
jns
imul
call
push
push
pop
push
cdq
aaa
inc
mov
mov
fsub
(bad)
out
jg
ror
movs
push
jns
xchg
std
add
push
mov
int
(bad)
retf
aaa
stos
js
std
mov
sub
sub
dec
xchg
xchg
call
fidiv
mov
xor
dec
push
test
jnp
or
dec
inc
pusha
call
icebp
sti
xchg
sub
pop
pop
sti
imul
cmp
xor
sub
out
idiv
iret
add
jp
inc
mov
fistp
out
cmp
stos
sbb
sbb
jg
mov
out
mov
in
mov
mov
out
stos
aam
mov
stos
(bad)
jns
mov
cmp
icebp
fstp
or
mov
fcmovne
clc
add
pop
adc
repz
jg
sub
xor
scas
movs
(bad)
mov
mov
and
add
aas
lahf
imul
dec
gs
mov
xor
loop
lock
(bad)
sub
sbb
test
mov
xor
fucomi
arpl
data16
(bad)
mov
into
(bad)
sahf
imul
data16
xor
stos
sbb
and
iret
dec
push
into
sbb
ror
mov
mov
xchg
mov
dec
loop
fimul
inc
sbb
jmp
bound
jg
jno
mov
dec
call
stos
stc
leave
fnstsw
add
cli
ret
js
sbb
xor
repz
aaa
and
mov
cdq
push
pop
push
jns
ds
dec
mov
mov
out
out
and
add
xor
xor
dec
das
xchg
cmp
push
sbb
stos
lods
xchg
cs
mov
or
je
popa
dec
inc
shl
pop
jnp
push
jns
mov
xchg
(bad)
in
mov
or
in
and
cmp
mov
push
mov
mov
dec
push
xchg
adc
in
jmp
sub
cmps
inc
fwait
sub
stc
jo
push
add
addr16
mov
lahf
inc
je
in
into
scas
daa
xchg
dec
and
sbb
push
hlt
xchg
add
pop
add
mov
push
sbb
sbb
retf
shl
dec
sbb
(bad)
dec
stos
mov
jmp
enter
imul
(bad)
sbb
test
jnp
and
pop
mov
scas
repz
in
or
adc
fiadd
popa
fwait
dec
cmp
xor
dec
sbb
add
jmp
mov
ins
mov
push
sbb
clc
inc
jno
pop
push
ja
dec
xor
lahf
mov
push
adc
les
or
ja
(bad)
imul
jae
sub
jnp
sbb
jmp
dec
mov
sbb
jno
in
ret
jg
or
add
inc
ret
push
imul
sub
sbb
out
es
xor
jns
retf
pop
mov
add
rcl
xchg
das
jne
loop
add
test
mov
add
jmp
add
daa
mov
aaa
imul
jg
sahf
adc
scas
inc
cld
sub
xchg
jmp
jp
dec
fs
sti
hlt
popf
rcl
jo
nop
push
sub
vmwrite
cmps
jge
hlt
mov
sti
jmp
cmc
add
test
and
stos
(bad)
cs
loopne
pop
dec
into
cmp
retf
outs
xor
xlat
mov
sub
xor
ins
mov
sbb
jle
jge
stc
fmul
add
call
shl
pop
sbb
dec
ds
(bad)
(bad)
iret
or
xlat
out
imul
and
cmp
ret
bswap
pop
push
mov
test
pop
out
xor
loop
cmp
pop
inc
mov
jmp
mov
lahf
call
push
retf
mov
fstp
jmp
rol
push
das
jne
mov
inc
(bad)
pop
repz
mov
jg
fwait
(bad)
push
in
adc
pop
int3
sub
mov
lahf
add
add
ror
adc
push
dec
iret
or
mov
push
pop
cmc
xor
jne
imul
jg
xchg
shl
mov
fisttp
les
ja
ret
mov
cld
imul
sub
sahf
addr16
fucomp
in
inc
push
jne
and
mov
sub
dec
out
inc
push
adc
retf
push
cld
mov
ins
mov
stos
push
add
fnstenv
test
loop
iret
adc
or
test
cmp
popa
call
movntps
adc
int
mov
call
inc
cdq
fcomip
sub
jmp
xchg
sub
push
adc
loope
cs
mov
bound
pop
outs
or
jle
or
add
sub
mov
jmp
jmp
stos
jmp
dec
cmp
cmp
test
es
inc
cdq
std
dec
jne
xlat
sub
xor
cmp
push
out
test
in
into
scas
test
jmp
mov
and
jecxz
scas
jle
outs
iret
ins
psubd
mov
ds
mov
lea
adc
test
outs
retf
or
mov
dec
popa
out
scas
dec
(bad)
cmp
sti
adc
mov
jge
mov
mov
rol
cmc
add
mov
cmp
(bad)
lock
sub
xchg
arpl
add
xchg
dec
dec
jle
push
xchg
out
add
inc
bound
sbb
inc
mov
cmp
call
das
pop
and
cmps
fwait
inc
push
jg
push
xor
data16
aad
push
(bad)
jmp
mov
jmp
mov
dec
sahf
scas
mov
or
aaa
cmps
in
jp
fisttp
aas
xor
push
out
cld
cmp
(bad)
pop
stos
and
and
jge
lock
mov
jbe
dec
push
or
or
mov
or
push
popa
stos
call
jp
fist
idiv
(bad)
shr
sub
and
pop
iret
cmc
sbb
das
jo
adc
ins
mov
mov
pop
pop
sub
stc
dec
test
dec
sar
mov
cs
test
and
dec
stos
mov
cdq
mov
sbb
out
pop
not
scas
mov
mov
dec
mov
sbb
imul
sub
jns
stos
sbb
mov
jae
pusha
mov
cmps
xchg
and
jmp
mov
pop
jmp
mul
movs
aas
(bad)
push
xchg
cmp
fcom
icebp
inc
jne
iret
dec
pop
fdivr
cdq
adc
stos
retf
out
(bad)
fcomp
call
mov
pop
retf
mov
aaa
loope
sub
xchg
jmp
mov
stos
out
mov
cmp
jp
jo
sbb
mov
fwait
jmp
dec
enter
add
xor
aaa
push
cmc
cmp
fstp
or
mov
and
lods
aas
and
dec
stos
sar
mov
fimul
cmp
xor
jecxz
xlat
not
mov
cmp
inc
jle
jae
and
inc
pop
icebp
inc
mov
clc
movs
and
inc
loop
fld
loopne
imul
mov
pop
lods
ror
pop
jbe
icebp
(bad)
sub
jmp
jg
adc
or
loop
call
iret
xchg
std
push
retf
out
or
outs
or
and
pop
dec
pop
mov
sbb
or
and
add
fcomp
pop
lods
test
ins
xor
xor
push
repz
push
adc
or
mov
mov
sbb
push
mov
inc
cdq
imul
sbb
jae
mov
push
jns
in
imul
lods
mov
mul
xchg
pop
sub
dec
push
das
push
jb
inc
adc
cmp
rcl
pushf
mov
add
xchg
jno
stc
stos
neg
and
sbb
fs
xchg
movs
div
push
hlt
dec
jne
pop
out
ror
jle
in
mov
mov
jp
dec
mov
mov
or
mov
dec
rol
xchg
jge
push
js
test
dec
mov
cmovnp
cmp
mov
and
leave
leave
mov
pop
dec
inc
into
add
(bad)
push
sbb
mov
pop
test
add
mov
data16
leave
xchg
test
loope
xchg
adc
sub
cli
adc
jmp
dec
dec
dec
test
jp
lea
cwde
(bad)
ins
imul
lds
ret
mov
imul
xor
jbe
imul
inc
jns
popf
leave
add
mov
stos
mov
sub
cdq
push
or
aam
cmp
imul
and
mov
xor
stos
adc
(bad)
mov
in
xor
push
push
push
xchg
int3
adc
inc
out
jp
fucomi
dec
pop
jne
movs
test
jne
jl
sbb
push
pop
sbb
jmp
xchg
jns
leave
out
or
loop
mov
or
add
xchg
cmps
push
xor
and
fbld
xchg
sub
inc
pop
cs
in
or
nop
xlat
xor
fdivr
mov
mov
dec
aad
jae
retf
popa
xor
cmps
sbb
lods
std
call
mov
cmps
sahf
cs
cmp
in
mov
push
jp
div
inc
pop
stos
sti
adc
jecxz
cmps
inc
nop
fiadd
mov
mov
mov
mov
dec
xchg
imul
sub
push
fisubr
jg
cs
adc
adc
outs
in
inc
pop
and
retf
push
cmps
mov
fsubp
out
loop
xchg
fwait
outs
xchg
aam
ficomp
and
mov
and
ficom
aad
fnstenv
or
mov
repz
pusha
push
dec
sub
dec
faddp
pop
xor
iret
sbb
out
fwait
cmp
jae
mov
mov
sbb
mov
jne
or
mov
lea
sbb
cmp
cmp
cmp
pop
outs
sub
or
jmp
fsub
jge
lock
cs
inc
aam
cmp
shl
push
lods
mov
jmp
(bad)
jmp
das
mov
fwait
jno
aaa
adc
popa
push
int
(bad)
nop
push
mov
sbb
push
xchg
in
in
(bad)
mov
aad
sub
fcmovbe
jge
dec
icebp
fsubp
repz
adc
imul
lea
inc
jae
xchg
xchg
add
sub
ss
xchg
dec
xchg
aam
sub
das
cli
ds
cmc
pop
mov
mov
sbb
jns
and
cmp
pop
adc
retf
push
and
loope
or
jg
call
jnp
pop
ret
loopne
and
js
push
(bad)
and
xchg
rcr
sbb
and
or
xlat
leave
cs
pop
pop
inc
bound
add
ss
ret
jnp
out
rol
lock
popa
push
mov
outs
lahf
sub
mov
ss
dec
fcomip
mov
and
pop
aaa
mov
sub
out
clc
stos
call
cmps
pminsw
sub
out
sbb
mov
mov
loop
cmp
mov
gs
xor
push
jp
adc
scas
ja
cmps
xchg
das
mov
lahf
outs
jecxz
mov
mov
sub
inc
mov
add
and
movs
int
jbe
fcmovbe
loop
mov
push
mov
xchg
pop
imul
movs
jne
shl
aaa
out
into
add
xchg
and
sbb
scas
fcmovnbe
(bad)
mov
mov
stc
cmp
inc
or
stos
add
daa
xor
sbb
mov
test
loope
xchg
adc
push
sti
inc
cmp
not
add
adc
das
outs
rol
outs
shr
movs
shl
sub
xchg
push
das
pop
xchg
adc
pushf
sub
ja
aas
sbb
arpl
rol
nop
out
movs
call
dec
cli
cmps
movs
lahf
ficomp
cmps
dec
and
cs
dec
loopne
and
jg
ret
push
cwde
int
jge
jle
dec
frstpm(287
mov
cmp
movs
pop
jle
cs
mov
add
cli
(bad)
(bad)
mov
jle
dec
movs
mov
sar
add
rcr
call
pop
add
jnp
sub
sti
xchg
and
pop
pop
cli
arpl
xlat
mov
mov
pop
repz
js
lahf
push
(bad)
jns
(bad)
cmc
sbb
inc
and
das
dec
push
cmp
xchg
or
fadd
sahf
and
pop
pop
inc
clc
fs
pop
cmps
aas
xchg
arpl
adc
aad
in
imul
sbb
or
movs
inc
dec
leave
gs
and
adc
out
ds
xlat
inc
out
mov
lods
dec
stos
push
fwait
sbb
push
leave
fstp
fnstenv
and
cli
pop
(bad)
imul
aas
test
daa
mov
jnp
xchg
loope
sub
add
aas
ds
pop
aaa
sahf
xlat
push
pop
sub
xor
mov
mov
jmp
inc
mov
jne
mov
(bad)
ins
adc
imul
(bad)
out
cmp
out
sub
cmp
(bad)
or
arpl
jo
and
dec
inc
mov
pop
imul
fbstp
outs
inc
xchg
pop
and
std
iret
cs
sti
jecxz
bound
loopne
aaa
jnp
arpl
das
xchg
lahf
sub
sti
mov
pmaxub
dec
out
mov
retf
ret
jmp
pop
dec
packuswb
fwait
dec
cmps
mov
dec
ficomp
inc
sub
cmp
sub
xlat
iret
daa
pop
jecxz
or
jnp
dec
pop
fimul
sub
dec
retf
stos
jecxz
cmp
outs
sub
add
dec
pop
cmp
mov
movzx
xchg
push
out
loop
retf
fisttp
ret
loop
cmp
les
sbb
imul
dec
push
push
bts
out
iret
(bad)
icebp
stos
xchg
aas
cmp
push
call
cmp
(bad)
stc
add
and
scas
(bad)
in
pop
fwait
push
jmp
(bad)
stos
stc
ins
out
add
out
xor
sbb
xchg
jge
aaa
lahf
aas
int3
mov
das
les
cmc
jg
pop
and
outs
pop
pop
jnp
xor
stos
cmp
sub
repnz
jl
dec
sub
fist
dec
pop
sahf
or
and
jg
out
mov
jmp
enter
sti
out
aas
cmp
repz
sbb
push
inc
add
dec
pop
outs
or
mov
pop
mov
(bad)
sbb
xor
xor
sti
pop
out
pop
sti
pop
dec
cdq
cwde
fwait
repz
retf
sbb
inc
dec
jnp
pop
inc
pop
data16
adc
push
mov
mov
imul
dec
test
repz
lods
outs
sub
push
or
iret
mov
mov
sub
sub
sbb
outs
mov
(bad)
mov
cwde
(bad)
retf
jg
and
xor
je
mov
mov
outs
adc
adc
out
fld
rcl
or
test
fisttp
fwait
mov
pop
sbb
add
dec
rcl
mov
xchg
sub
xlat
xchg
mov
out
push
sbb
test
cld
aam
cmps
pop
(bad)
mov
jne
rol
call
sub
add
push
jnp
sbb
out
mov
xchg
mov
retf
(bad)
fndisi(8087
or
or
(bad)
push
adc
and
popa
std
pushf
mov
les
test
sub
fmul
out
in
int
pop
leave
popf
pop
lahf
or
mov
test
aad
aad
jnp
add
stc
mov
mov
repz
outs
int3
rcl
scas
mov
fwait
outs
mov
scas
fisubr
and
inc
or
add
or
add
pop
lods
sbb
mov
outs
icebp
sbb
sbb
stos
add
sbb
mov
ins
cmp
call
sti
jmp
and
sbb
mov
dec
mov
je
or
cmovge
leave
fist
and
push
pcmpgtd
jns
daa
xor
outs
xchg
dec
std
in
cli
bound
sub
sub
(bad)
jno
iret
int
pop
lahf
(bad)
cmp
pop
gs
and
mov
dec
repz
xor
push
std
imul
retf
inc
into
aaa
and
mov
fadd
mov
fcmovnu
xchg
imul
sub
sub
stos
retf
call
or
sub
in
cli
xor
sbb
add
push
(bad)
push
inc
xchg
ret
std
and
mov
ins
(bad)
retf
inc
or
fstp
daa
fidiv
sub
in
jge
or
push
xchg
(bad)
fsubr
jmp
mov
lods
cwde
ss
xchg
xchg
jnp
ds
lea
call
lahf
sbb
dec
cmp
(bad)
lods
push
pop
shr
out
popf
inc
jo
xor
in
call
test
mov
(bad)
mov
xchg
out
xor
out
adc
xor
nop
pop
sub
pop
mov
jmp
pusha
mov
es
into
out
lds
repz
sbb
dec
add
dec
gs
ds
retf
push
fidivr
cs
loop
xchg
cmp
adc
repnz
arpl
aad
arpl
adc
mov
pop
add
mov
faddp
iret
aaa
xchg
dec
sub
pop
pop
ds
jge
jmp
daa
scas
imul
lahf
out
xor
lahf
int
sti
lahf
in
inc
xor
pop
sub
push
ds
xor
out
adc
das
cmp
jno
(bad)
pop
(bad)
mov
jge
cmp
(bad)
jnp
push
imul
setns
popa
dec
push
mov
imul
jbe
cmp
das
call
dec
dec
xchg
mov
xor
cmp
lock
pushf
retf
mov
dec
jmp
inc
leave
mov
leave
(bad)
test
push
and
push
(bad)
mov
mov
or
cmp
sbb
xor
stos
dec
inc
xor
dec
ficom
in
jecxz
jmp
loopne
cmps
jbe
aad
fwait
mov
outs
mov
mov
cmp
mov
leave
(bad)
movs
mov
imul
jl
fdivr
call
add
sub
jge
wbinvd
sbb
push
stos
shr
(bad)
jne
outs
(bad)
lods
icebp
rcr
fadd
fisttp
fnstcw
pop
imul
pop
imul
dec
les
(bad)
(bad)
jle
test
loop
jns
mov
ja
pop
mov
sub
push
dec
rcl
mov
mov
cmp
jnp
das
dec
jb
inc
or
jg
jmp
mov
fnstenv
or
mov
pop
push
clc
or
outs
arpl
jb
jae
cmc
jmp
loop
inc
sbb
ins
push
cli
movs
packssdw
aaa
mov
std
sbb
mov
push
mul
outs
hlt
inc
jge
fimul
jle
daa
jmp
sti
and
cmp
xchg
mov
mov
jae
jmp
(bad)
sti
xlat
adc
or
fnstcw
xor
std
adc
cmps
imul
daa
sti
retf
not
cmp
into
out
into
push
ds
xor
(bad)
mov
scas
pop
outs
push
dec
mov
cmps
bound
push
test
fidivr
xor
add
bound
xchg
stos
jle
scas
mov
dec
mov
stos
pop
out
add
aas
xor
jmp
outs
push
inc
mov
cmc
inc
inc
xchg
scas
jle
adc
mov
sub
(bad)
sub
fcomip
dec
cmps
lea
lar
pusha
(bad)
mov
daa
mov
call
aas
cli
sti
fcmove
stc
int3
ds
scas
mov
rcr
mov
mov
mov
push
and
and
loop
jmp
mov
cmp
xchg
mov
rcr
scas
cmp
or
test
sbb
jmp
sar
dec
xchg
sub
aas
(bad)
pop
jbe
in
arpl
pop
imul
adc
pushf
adc
jno
repnz
sahf
das
cwde
mov
repz
inc
into
jns
jnp
push
js
jnp
pop
push
lods
cmps
jb
fild
and
loop
jnp
jmp
(bad)
xchg
push
je
jae
inc
jle
cs
rol
jb
in
aam
ret
repnz
sbb
jbe
mov
sbb
xor
scas
movs
inc
lods
jmp
ds
xchg
and
out
cs
pushf
cmp
or
mov
pop
jle
jbe
mov
out
sub
clc
shr
aam
push
jle
jnp
pop
cwde
jge
(bad)
cmp
dec
cs
fdivr
out
sbb
js
shl
dec
nop
jp
mov
mov
aad
out
test
jmp
pop
xchg
dec
or
push
dec
neg
push
pusha
pop
jg
(bad)
cmp
das
popa
sbb
or
repz
sbb
xchg
stos
jg
outs
mov
mov
ret
pushf
(bad)
jmp
ficomp
pop
(bad)
fbstp
cmp
dec
xor
dec
iret
fst
mov
pop
cmp
sti
xor
pop
out
dec
out
inc
xor
lods
mov
cld
cld
lahf
mov
and
mov
das
and
aad
les
dec
shl
adc
cdq
jl
mov
push
test
inc
cmps
pop
fld
pop
outs
(bad)
(bad)
sub
jmp
lahf
pop
das
dec
ja
enter
je
sar
fsubr
les
out
(bad)
mul
dec
inc
ficomp
jecxz
mov
neg
sbb
mov
fimul
add
cmp
out
mov
ja
dec
(bad)
jo
jo
mov
cmp
or
cs
fisttp
xchg
push
inc
ds
rcr
pop
mov
cmp
jge
dec
outs
adc
cld
cmp
push
aad
push
mov
xchg
popa
pop
jns
movs
inc
pop
mov
ss
movs
push
cmp
out
lahf
jp
sar
cmp
jg
cmps
mov
ror
mov
mov
fs
jle
stos
pusha
mov
in
loop
mov
repz
pop
sub
ror
bnd
ja
mov
mov
push
jnp
mov
in
xor
out
fcmovne
retf
xor
nop
out
enter
push
inc
mov
mov
cwde
shr
jae
mov
out
mov
(bad)
sub
adc
add
test
movs
in
mov
mov
jp
add
xor
(bad)
xor
pusha
cdq
sbb
and
dec
mov
sub
dec
adc
mov
repz
call
mov
push
aam
scas
sahf
sbb
jmp
jmp
leave
stos
call
mov
mov
pop
ins
out
jle
push
ins
retf
cmp
iret
inc
(bad)
jnp
mov
mov
mov
xor
into
cmp
sbb
xor
xchg
dec
jb
jp
gs
out
retf
out
pop
aam
iret
bound
xor
push
push
push
outs
jle
jns
dec
stos
sahf
idiv
jge
jns
ret
mov
test
mov
inc
cmps
jae
popf
stos
pop
mov
jb
jnp
pop
lahf
lea
mov
xor
ja
pop
js
dec
pop
sub
push
sub
cmp
out
xchg
(bad)
push
out
je
sbb
push
xor
std
loop
js
lahf
mov
mov
(bad)
leave
mov
aas
dec
cmp
or
jp
fs
pop
inc
bound
cmps
sbb
mov
fnstsw
add
or
stc
pop
aas
stos
cs
in
inc
(bad)
outs
das
or
jb
push
mov
jno
jmp
xor
int
clc
into
in
jle
and
dec
inc
fsub
mov
std
mov
fimul
dec
int3
pop
pop
dec
setbe
adc
dec
(bad)
stc
mov
mov
sar
xor
add
pmullw
jp
sti
enter
in
jb
fbld
ficomp
(bad)
cmp
pop
jnp
cmp
imul
dec
shr
mov
sub
fistp
cmp
mov
sub
jbe
stos
out
out
mov
idiv
arpl
cld
jle
or
pop
pop
outs
es
fldcw
jmp
out
out
daa
sub
ins
fcmovnu
pop
daa
fadd
fmul
push
enter
cmc
lea
mov
lods
or
xchg
dec
mov
cmp
mov
mov
jmp
sahf
mov
jl
sub
or
or
xor
sti
xor
cmc
bts
jmp
cmps
stos
cmp
outs
mov
test
arpl
ds
xchg
inc
cmp
xchg
and
mov
aas
ficomp
pop
sti
jl
ins
outs
fdiv
push
inc
cmp
jmp
std
xchg
inc
adc
inc
sahf
fucomi
test
adc
and
cmp
push
or
aas
ins
mov
or
pop
jmp
(bad)
ja
or
pushf
jne
or
sahf
vdivss
fist
mov
or
lods
add
imul
call
lahf
test
aas
jns
cmp
(bad)
cli
outs
cmc
ret
out
ds
dec
stc
mov
mov
push
nop
mov
aam
sub
or
pop
sbb
pop
outs
jg
daa
pop
jns
(bad)
ins
push
dec
leave
xor
(bad)
idiv
ja
push
(bad)
sbb
and
dec
dec
dec
scas
mov
mov
jg
cmovne
jl
ret
add
out
fwait
push
mov
imul
sar
outs
pop
jbe
jg
js
inc
mov
ja
dec
les
jb
dec
in
jne
jle
imul
mov
repz
push
sbb
jmp
fs
add
mov
mov
pop
repnz
xchg
cmp
and
push
push
adc
hlt
test
repnz
loopne
cli
leave
or
mov
xchg
sub
psubsw
jbe
pop
jae
mov
adc
and
mov
test
daa
fdivr
cmp
repz
fcmovnu
push
adc
mov
inc
pop
mov
or
daa
xchg
mov
nop
dec
xchg
sbb
retf
push
dec
ds
popf
sbb
addr16
dec
pushf
lahf
bound
sub
scas
test
fimul
retf
adc
pop
mov
(bad)
and
push
inc
dec
lahf
cs
outs
inc
outs
(bad)
xor
adc
call
jge
idiv
stos
aaa
int
xor
imul
cdq
mov
fwait
xchg
inc
les
jno
inc
mov
fcmovnb
addr16
pop
shr
rcr
mov
pop
jmp
iret
lds
add
scas
fcomip
pop
das
imul
cmp
bound
pop
fist
xor
retf
add
mov
cmp
hlt
mov
mov
add
test
push
mov
adc
push
fbld
iret
xchg
and
iret
push
mov
push
lods
(bad)
mov
mov
aas
repnz
movs
inc
fsub
retf
iret
jnp
popa
dec
jno
fiadd
cmp
fisttp
addr16
(bad)
imul
jnp
mov
dec
lods
popa
mov
pop
adc
mov
hlt
pop
jnp
repz
xchg
fild
outs
rcl
test
pop
push
lods
mov
test
out
adc
lds
sti
adc
push
mov
xchg
scas
out
outs
gs
jnp
das
xor
inc
mov
rcl
pop
lahf
and
mov
mov
cdq
loop
pop
jns
dec
push
xchg
mov
sub
into
or
adc
jbe
lds
scas
or
movs
mov
(bad)
out
nop
aas
xor
mov
cmp
push
test
arpl
fwait
push
out
adc
pminsw
(bad)
jmp
hlt
push
or
jmp
mov
jne
jmp
adc
and
mov
out
stos
mov
es
das
mov
xchg
gs
arpl
sub
fcomp
push
adc
cwde
jns
mov
mov
test
add
lods
xchg
sti
cmps
jmp
repz
and
scas
mov
pop
stos
xor
into
pop
fcomp
addr16
fs
xor
dec
push
lods
adc
pop
sub
and
hlt
add
jnp
imul
adc
pop
pop
imul
dec
dec
cmc
xchg
mov
xchg
sti
xchg
push
ret
rol
retf
cmp
or
imul
jecxz
arpl
jns
scas
ss
xor
(bad)
aad
das
xor
pop
add
fistp
inc
jo
mov
dec
call
sbb
pop
mov
loope
adc
iret
addr16
pop
xchg
inc
or
mov
adc
mov
iret
jmp
stos
xor
cli
pop
packuswb
mov
dec
sti
out
mov
and
(bad)
out
cmp
(bad)
fnsave
sub
pop
ror
test
and
inc
stos
ins
mov
retf
inc
test
or
data16
pop
fadd
xchg
mov
and
stos
mov
inc
dec
lahf
inc
sti
div
cmp
test
call
pop
adc
jmp
cmp
add
jecxz
sub
outs
(bad)
repz
daa
jno
test
stos
(bad)
pop
(bad)
mov
into
(bad)
sahf
xor
jmp
sti
fistp
sub
push
icebp
repnz
jl
jb
jbe
push
daa
jecxz
xchg
jmp
call
loopne
and
pop
jle
jp
sar
sub
jecxz
cs
xchg
or
mov
addr16
xchg
pop
(bad)
jnp
fidivr
fld
dec
jmp
add
(bad)
stc
into
iret
mov
stos
jae
xchg
in
pop
mov
sub
retf
adc
retf
out
or
loop
cmps
popa
rcr
xchg
push
lock
je
mov
xor
jp
das
fistp
out
sbb
in
mov
stos
dec
imul
arpl
imul
ret
es
int
ficom
pop
mov
pop
pop
mov
outs
out
sub
iret
adc
mov
jbe
mov
movs
sub
fcom
out
cmps
sbb
pop
pop
outs
sahf
mov
mov
cmp
push
(bad)
ds
sbb
aas
test
cmps
mov
(bad)
pop
inc
loope
pop
bnd
(bad)
dec
cs
inc
pop
repz
sub
test
dec
pop
mov
(bad)
sub
sti
loope
mov
sbb
cli
call
(bad)
ins
dec
arpl
test
mov
gs
cli
stos
lahf
stos
cli
popf
push
and
push
xchg
or
(bad)
pop
mov
xchg
pop
popf
test
add
movs
sahf
cmp
push
ficom
stos
cwde
inc
xor
cld
(bad)
shl
jecxz
pop
retf
or
mov
fsub
sbb
pop
popf
in
mov
inc
ins
dec
push
lahf
inc
pop
retf
cmp
(bad)
rcl
add
jl
sti
sbb
ror
mov
jae
xchg
mov
jp
fimul
and
(bad)
lock
scas
pop
adc
adc
pop
ja
scas
mov
and
movs
xchg
test
(bad)
mov
imul
add
cmps
iret
(bad)
lock
lahf
retf
imul
adc
sar
cmp
inc
retf
push
cmp
mov
call
pop
inc
lahf
lock
mov
mov
push
mov
aas
jmp
sbb
push
jl
out
pop
inc
dec
mov
daa
bound
cli
into
cmc
mov
into
dec
ds
aas
pop
jmp
jae
pop
cmp
mov
dec
dec
sti
jecxz
repnz
fidivr
data16
sub
push
sub
mov
lods
mov
pusha
jmp
sar
cli
hlt
pop
or
out
mov
pop
mov
ror
bndstx
mul
bndstx
mov
xchg
stos
mov
scas
fwait
mov
cli
cs
iret
mov
out
pop
push
sbb
test
imul
jnp
jne
mov
push
fpatan
jnp
daa
push
les
clc
retf
inc
retf
(bad)
out
lock
sbb
push
leave
sub
inc
retf
sti
cmps
out
cmps
in
and
jb
pop
xor
stos
xor
call
add
(bad)
sbb
mov
push
cmpps
repnz
or
or
pop
add
inc
cmp
gs
ficom
sub
out
mov
jl
push
(bad)
xor
mov
or
in
pop
mov
mov
jae
push
jbe
sub
lods
pop
sbb
push
mov
dec
xchg
into
fwait
(bad)
xchg
mov
adc
cs
inc
fwait
outs
xchg
sub
jg
mov
cmp
repz
xor
cs
jle
add
pusha
mov
jns
jo
add
cmp
fxch
(bad)
imul
inc
inc
push
mov
mov
pop
retf
sbb
jecxz
std
pop
add
xchg
adc
xchg
jb
leave
push
mov
mov
add
mov
sbb
push
mov
lahf
pop
mov
push
push
(bad)
retf
sub
or
shl
dec
stos
and
pop
pop
retf
repz
aaa
mov
pop
mov
ret
scas
push
cmp
in
mov
add
shr
sti
and
xor
ror
jp
ss
addr16
fdivr
(bad)
jmp
shl
add
lahf
push
mov
dec
js
xchg
pop
in
inc
jnp
inc
rol
and
adc
lds
ds
adc
inc
or
sti
mov
dec
and
mov
sbb
stc
call
retf
adc
jae
dec
maxps
stos
cmp
fiadd
ret
fcmovb
pop
out
ja
call
ds
stos
pop
retf
gs
das
je
fld
jbe
fcmovnb
or
push
imul
pop
pop
call
ret
jo
pop
daa
jmp
bound
cmp
jbe
push
outs
lds
ins
es
rcr
pop
push
sub
out
nop
jmp
add
cmp
dec
push
inc
sbb
out
mov
inc
mov
repnz
fistp
inc
fisttp
ret
xor
jp
pop
loop
test
imul
dec
xchg
mov
jmp
int3
std
or
xlat
(bad)
pop
mov
or
inc
fld
out
push
and
fadd
cld
cs
jp
ret
iret
xchg
dec
adc
pop
repz
mov
iret
adc
iret
jmp
arpl
pusha
(bad)
lods
(bad)
in
sub
and
and
and
cld
sbb
mov
jg
lock
mov
push
push
fsubr
xor
gs
daa
jge
jmp
enter
jno
jb
(bad)
in
pop
jo
fbstp
pop
mov
in
sbb
retf
xlat
jne
jecxz
jge
loopne
push
ins
outs
xchg
dec
dec
(bad)
jb
fs
cmp
mul
push
and
out
idiv
stos
(bad)
loopne
jbe
jo
mov
dec
add
out
pop
or
sti
dec
xor
and
cs
add
ds
xor
dec
gs
mov
mov
les
and
inc
inc
sar
push
xchg
cmp
dec
lahf
xchg
pop
movs
test
xor
adc
add
jno
mov
mov
das
scas
push
and
lahf
ror
cmc
fs
mov
nop
sbb
mov
cld
cmps
lock
shr
retf
out
in
pop
leave
push
pusha
addr16
pop
push
cmps
and
repnz
fsubr
sti
shl
iret
test
stos
gs
inc
push
popf
inc
pop
push
(bad)
inc
and
add
jle
jecxz
add
mov
mov
mov
movs
pop
add
jb
add
fisttp
add
dec
pop
mov
mov
out
xchg
jl
inc
fnstcw
daa
sub
and
mov
dec
sti
xchg
inc
fs
ret
fwait
xor
cmp
jnp
inc
out
xor
sbb
lods
ret
dec
adc
inc
dec
pop
inc
push
mov
mov
hlt
sub
sub
mov
cmp
mov
push
cmp
pop
jnp
neg
fild
mov
stos
cdq
push
dec
jg
outs
cwde
sub
(bad)
sub
sti
push
fnsave
cmp
dec
sbb
push
in
pusha
imul
popf
push
scas
jbe
push
mov
cvtpi2ps
stos
mov
pop
ja
pop
mov
mov
mov
or
fldpi
adc
push
inc
xor
sbb
sbb
mov
out
pushf
call
mov
lahf
fbld
dec
or
mov
jbe
adc
mov
push
mov
retf
jmp
call
pop
int3
pop
je
fs
jnp
cdq
sub
(bad)
jg
imul
imul
xchg
bound
(bad)
lea
fidivr
(bad)
mov
rol
(bad)
fist
js
sub
sbb
sbb
mov
sub
mov
jmp
into
out
aas
xchg
sbb
ja
mov
or
out
repnz
pop
(bad)
sbb
sbb
jnp
pop
push
sub
jp
push
dec
mov
nop
ds
retf
movs
sub
cmp
mov
pop
mov
ins
dec
push
(bad)
mov
pop
(bad)
(bad)
cmp
loope
sbb
ficom
add
push
ffree
cmp
or
(bad)
out
ins
cmp
test
mov
retf
push
adc
sar
dec
(bad)
cmp
pop
mov
out
(bad)
sub
xchg
sti
cmp
fistp
cmc
(bad)
(bad)
cmp
iret
das
pop
jae
mov
loopne
jl
and
pop
dec
xor
scas
jge
jmp
and
sbb
sar
mov
sti
pop
sub
push
xor
ins
push
ins
cs
clc
mov
clc
stos
sub
iret
xchg
inc
dec
push
or
or
push
dec
mov
dec
loope
cmc
sub
movs
out
inc
lods
pop
sub
cmp
pop
add
dec
cmps
mov
out
call
(bad)
outs
push
aaa
stc
outs
or
jnp
xchg
lods
sub
pop
cs
mov
fstp
jmp
aas
and
out
sub
jle
mov
stos
pop
xor
out
inc
das
retf
xchg
sub
frstor
dec
mov
push
inc
and
ins
sbb
cmp
sbb
mov
aas
jnp
fistp
sti
out
retf
rcl
ret
retf
aas
jnp
pop
aad
shr
outs
dec
test
aam
scas
inc
sbb
into
inc
movs
retf
xor
aad
sbb
cwde
(bad)
lock
outs
mov
movs
dec
imul
sbb
inc
fcom
adc
or
pop
and
cmps
es
hlt
shl
imul
jl
js
int3
fild
jne
jmp
jbe
cmp
dec
ins
adc
dec
out
and
aad
and
imul
loope
pop
sbb
pop
dec
setae
pop
xor
lea
lods
jmp
mov
rol
sbb
idiv
and
or
push
mov
or
sub
sar
pop
jno
sahf
and
dec
imul
cs
jo
out
xor
mov
cmps
mov
cmps
add
lods
out
fisub
lahf
mov
hlt
dec
outs
or
mov
mov
enter
mov
xor
(bad)
out
das
btr
cmp
mov
mov
cld
cli
inc
retw
shr
jmp
sub
sub
sub
add
sbb
mov
adc
lea
pop
stos
mov
retf
mov
gs
mov
dec
cmc
jg
jbe
mov
fsubr
mov
sub
pop
cmp
sub
retf
imul
push
mov
push
pop
clc
sbb
pop
lods
aam
ins
xor
sbb
pop
outs
pop
scas
pop
pop
pop
clc
les
or
mov
fwait
mov
adc
fmul
(bad)
lds
mov
shl
in
movs
pop
adc
xchg
or
mov
into
sub
add
aad
shl
pop
cdq
lock
mov
fwait
dec
inc
cmp
cmp
cmp
jbe
aas
push
addr16
inc
mov
mov
retf
(bad)
test
popa
cmp
das
(bad)
sbb
retf
jp
adc
scas
mov
xlat
sub
shl
test
push
inc
out
cmp
aam
dec
pop
js
dec
jmp
clc
test
xchg
xlat
(bad)
sbb
sub
add
push
jl
add
push
jns
jae
ret
das
xlat
into
push
lock
in
movaps
mov
inc
lods
ja
fwait
clc
sub
sti
xor
pop
sub
daa
cmp
sbb
inc
push
ja
sub
or
out
add
adc
int
(bad)
aaa
sbb
push
call
push
mov
out
in
dec
adc
mul
cmp
jns
dec
adc
aas
imul
arpl
jo
and
pop
mov
ss
push
push
or
and
jge
xchg
adc
mov
dec
pop
out
scas
mov
xchg
es
sub
adc
imul
test
xchg
xchg
repz
or
pop
sbb
iret
fwait
adc
sbb
sbb
out
mov
jmp
mov
mov
ja
fimul
int3
aam
aas
shr
cmp
loope
push
mov
inc
ja
stos
inc
push
mov
imul
xor
add
scas
rcl
cli
sbb
leave
add
cdq
ss
mov
(bad)
mov
xor
push
nop
inc
dec
or
sbb
and
push
arpl
pop
mov
jg
pandn
outs
rcl
sub
es
jp
sub
retf
aas
int
sti
ret
out
jne
test
aad
xor
loopne
arpl
jno
out
and
inc
cwde
cmp
cmp
shr
loop
xchg
and
mov
xor
popf
jmp
cmc
(bad)
adc
fcmovne
or
xchg
adc
(bad)
in
or
adc
(bad)
sti
mov
sub
(bad)
(bad)
fist
movs
push
xchg
pusha
and
inc
push
pop
mov
lods
outs
shr
(bad)
out
(bad)
and
aas
aad
sub
jne
dec
outs
imul
mov
out
mov
jmp
or
popa
jle
ins
je
pop
pop
mov
pop
pop
jmp
sahf
pop
aaa
hlt
cmp
push
cmp
jnp
dec
mov
xor
addr16
cld
mov
nop
xchg
fdiv
(bad)
enter
and
pusha
das
sub
dec
mov
jg
dec
sbb
and
retf
in
sub
and
mov
dec
wrmsr
fwait
test
add
lahf
loopne
sub
adc
test
xchg
cmp
mov
stos
cld
icebp
adc
push
add
rcl
and
and
stos
shl
fwait
enter
cmp
cmp
ins
jl
test
add
ins
inc
mov
ret
sti
(bad)
cmp
mov
sub
sar
scas
ss
call
lods
mov
lds
(bad)
loopne
call
les
jo
xchg
out
xchg
jns
les
(bad)
ja
bound
lahf
or
mov
cmp
push
mov
xor
sub
fbld
(bad)
dec
les
xchg
nop
sbb
mov
xor
dec
sub
ds
out
dec
push
pop
dec
pop
jle
dec
test
mov
mov
add
xchg
mov
int
(bad)
sub
xor
out
cmp
push
es
cs
aad
(bad)
es
fstp
cmps
jecxz
jg
push
cmp
jge
pushf
jne
mov
ror
mov
fstp
js
int
and
cmp
in
jle
lahf
pop
sbb
ds
mov
inc
pop
iret
outs
enter
pushf
dec
(bad)
sbb
loopne
mov
mov
fisubr
cmp
push
jecxz
not
jmp
loope
push
dec
pop
xor
add
popf
(bad)
cmp
inc
clc
push
jbe
jp
cs
inc
out
pop
dec
jns
mov
enter
jnp
jns
and
or
and
outs
xchg
mov
in
(bad)
out
sub
lods
sbb
enter
retf
pusha
mov
mov
mov
cwde
in
or
js
into
daa
add
jmp
xlat
stc
sub
dec
scas
or
lea
lahf
sub
add
or
inc
inc
sahf
les
pusha
inc
push
add
test
xchg
stos
stos
setno
sbb
fs
dec
shr
pushf
fmulp
mov
sub
aam
out
fdivr
stos
xor
jnp
jmp
inc
out
fwait
imul
es
add
jle
rol
mov
pop
sub
adc
inc
dec
shl
movlps
sub
pop
push
adc
and
sub
xlat
movs
push
xchg
xlat
sub
inc
push
stc
mov
xlat
ret
idiv
inc
outs
mov
add
jne
icebp
mov
outs
jp
rcl
fucom
sub
inc
fnsave
rcl
sar
rol
and
sti
stc
(bad)
cmc
aaa
popf
pop
stc
rcl
js
add
xor
pop
xchg
loop
retf
aad
mov
sbb
mov
xlat
leave
mov
popf
pushf
aas
xchg
inc
xchg
jnp
xchg
in
push
xchg
xchg
aad
cmc
push
sbb
int
fmul
outs
xlat
sar
mov
mov
xor
xlat
pop
mov
fcmovnbe
icebp
mov
sbb
pop
lods
xchg
cmps
movs
pop
ret
ret
daa
xor
and
xor
rcl
movs
adc
xchg
pop
push
xchg
jle
ja
push
mov
inc
outs
mov
add
inc
jmp
mov
mov
scas
outs
push
test
mov
rol
adc
ret
repnz
ja
xor
pop
(bad)
adc
in
mov
sbb
cmp
sub
sbb
xlat
mov
jae
dec
xchg
jae
jmp
rol
push
cld
push
sbb
push
pop
adc
or
adc
xor
test
imul
or
loop
cmp
(bad)
cli
leave
push
ins
jne
mov
les
pop
mov
(bad)
jmp
dec
sbb
sbb
fwait
sub
inc
xlat
pushf
into
int
sub
mov
mov
fst
call
popf
or
mov
icebp
mov
mov
loopne
inc
ss
jg
(bad)
mov
jbe
(bad)
sub
inc
(bad)
fdecstp
in
fwait
sub
push
dec
cmp
push
jnp
test
sahf
fnstenv
adc
into
shl
xor
test
sub
mov
or
xchg
enter
mov
inc
cmp
(bad)
ds
xor
inc
sub
movs
push
or
dec
sub
leave
es
(bad)
pop
(bad)
xor
test
movs
jbe
shl
jbe
jl
push
fild
sub
mov
and
test
inc
jns
leave
push
jle
ins
xor
sbb
sbb
push
sub
jge
call
mov
sub
(bad)
cmp
jmp
imul
(bad)
movs
jae
(bad)
pusha
cmc
mov
shr
rol
test
xchg
sahf
add
xlat
jmp
jbe
add
jno
or
jecxz
pop
sub
bound
jge
pop
test
jl
pop
pop
xchg
(bad)
(bad)
je
ret
rcr
in
(bad)
hlt
ss
pop
call
sub
enter
pop
xor
dec
lahf
or
rcl
jle
lahf
sbb
or
pushf
ret
sbb
ret
outs
mov
call
mov
cmp
mov
mov
fbstp
fbld
mov
je
mov
cmp
fisttp
hlt
ffreep
jg
fstp
sbb
out
cmp
cs
or
push
scas
cdq
in
cmp
pop
adc
jecxz
mov
mov
lahf
or
int3
fmulp
jg
push
xchg
cmp
fwait
scas
jg
aaa
pushf
inc
adc
out
mov
mov
fbld
cmp
add
sbb
addr16
pop
pop
sar
pop
hlt
out
hlt
pop
xor
dec
lahf
lds
sub
mov
cmp
enter
popf
jg
pop
hlt
jmp
sti
sbb
sbb
pushf
and
iret
or
popf
sbb
add
fbld
or
fmul
nop
enter
retf
sbb
jecxz
pop
jge
fwait
sbb
jl
jmp
(bad)
jle
iret
or
ret
out
adc
arpl
dec
mov
repz
stos
hlt
mov
or
fcomp
mov
and
mov
xchg
add
iret
sbb
sbb
adc
cmp
fdivr
sbb
mov
arpl
sbb
xchg
jl
lahf
pushf
mov
jne
les
rcl
jnp
inc
shr
std
ins
sti
retf
inc
outs
jge
jge
jge
std
out
std
in
mov
popa
cmp
outs
in
fs
jmp
dec
sar
pushf
mov
repz
xchg
xchg
xor
mov
stc
out
out
out
push
std
scas
cmp
cld
stos
scas
sub
push
in
inc
sbb
push
sbb
jg
mov
fistp
mov
sub
jnp
ja
cs
(bad)
xchg
iret
cmp
ins
out
std
mov
cmp
jmp
jg
fwait
add
in
jp
xchg
and
sub
addr16
jge
fst
imul
outs
jge
jp
jp
cli
call
ins
jg
mov
arpl
mov
je
and
xor
xor
(bad)
(bad)
std
loopne
test
cmp
in
ins
stos
pop
ins
js
js
adc
lods
cmp
xor
jecxz
(bad)
(bad)
xor
sub
push
xor
jbe
js
push
stos
jns
ins
jg
or
add
and
stc
popf
sub
jg
dec
cmps
adc
xchg
xor
nop
lods
pop
cmp
mov
jmp
cmp
xchg
div
jbe
mov
jp
mov
sbb
mov
pop
dec
jp
in
call
shl
dec
out
pop
rcl
out
xchg
loopne
out
xchg
movs
adc
retf
push
push
gs
gs
ins
addr16
out
mul
sbb
fmul
outs
add
outs
adc
out
cmp
and
pop
sub
movs
(bad)
mov
push
in
in
(bad)
cmps
ret
sub
test
xlat
adc
sbb
loopne
in
mov
out
add
movs
push
ins
ret
mov
and
cmc
ret
lea
out
shl
shl
cmp
call
xchg
in
lea
clc
inc
adc
push
shl
jae
pop
gs
dec
gs
shl
out
pushf
add
xchg
mov
repz
dec
inc
fsub
xchg
in
movs
lahf
push
rcl
cmp
fsub
mov
call
fwait
test
inc
call
pop
in
test
(bad)
mov
fsub
int3
shl
call
push
sbb
inc
iret
cmp
dec
push
xchg
call
repz
rol
out
and
pop
lea
ja
mov
pop
outs
rol
cmp
sub
pop
sub
xor
mov
and
push
adc
pop
shr
push
pushf
(bad)
shl
or
out
test
push
gs
and
adc
dec
in
ret
mov
outs
retf
mov
out
(bad)
mov
push
mov
outs
retf
iret
loopne
pop
(bad)
fsubr
fs
mov
push
loope
mov
jns
push
adc
add
add
mov
popf
xchg
mov
dec
imul
fidiv
(bad)
jg
mov
push
jmp
idiv
sbb
stc
(bad)
(bad)
dec
jl
push
daa
call
jbe
(bad)
(bad)
fidivr
idiv
push
or
cmp
fdivp
push
mov
(bad)
mov
xor
push
or
sub
mov
sahf
jl
into
(bad)
or
jp
aad
jle
test
pop
enter
sbb
cmp
call
xor
mov
call
das
in
icebp
add
(bad)
inc
lock
(bad)
stc
fst
and
lock
push
shl
or
stc
dec
jbe
sub
dec
sub
out
loop
jne
mov
es
push
(bad)
pop
sbb
fld
dec
pushf
xchg
jle
push
int
jns
add
pop
icebp
xchg
jno
(bad)
in
or
fs
fwait
push
mov
fwait
or
jnp
adc
iret
xchg
popf
push
adc
mov
gs
mov
fimul
inc
jecxz
xchg
cwde
(bad)
out
or
mov
adc
imul
ins
dec
xor
cmp
mov
cmp
or
jle
or
inc
push
aas
enter
push
jae
pusha
shl
mov
jmp
cwde
fadd
sbb
sub
leave
iret
push
jmp
jnp
loopne
fld
daa
cwde
jecxz
call
out
push
add
or
xor
clc
imul
jae
push
xor
out
dec
test
mov
inc
test
sbb
sbb
xchg
or
addr16
jge
or
or
retf
pushf
sbb
adc
push
dec
mov
cmp
sbb
xchg
sub
adc
clc
jmp
retf
out
dec
pop
mov
add
or
mov
mov
sti
mov
das
cwde
or
fwait
or
clc
imul
imul
push
dec
sti
adc
pop
and
cwde
or
sbb
cmp
addr16
imul
stc
sub
cmc
cdq
in
xor
cmp
mov
sub
or
loop
pop
dec
push
enter
sbb
loopne
shl
cwde
and
sbb
call
loopne
cmp
sbb
pusha
sbb
jl
stos
out
stos
dec
cld
mov
sub
je
push
bound
add
loop
shl
(bad)
fwait
push
jmp
das
pop
aas
aam
cmp
xchg
jns
push
jg
fwait
(bad)
or
mov
or
mov
xchg
fstp
or
push
ins
retf
or
xor
scas
(bad)
stc
iret
cdq
cdq
cli
jae
push
stc
fcmovnu
(bad)
data16
mov
cmp
(bad)
ds
in
push
push
pop
mov
into
push
cmp
in
iret
mov
nop
(bad)
adc
pop
das
adc
mov
mov
std
repz
sbb
cli
push
rol
pop
(bad)
sbb
stc
sub
(bad)
mov
xchg
cdq
fwait
imul
test
push
lahf
ror
popa
xchg
cmp
sbb
and
cwde
or
pop
test
adc
jmp
sub
rcr
mov
inc
jae
aad
stc
(bad)
stc
xchg
mov
pop
xchg
scas
mov
(bad)
cdq
fwait
xchg
pop
leave
retf
mov
sbb
popa
cmp
fwait
inc
jno
sbb
pop
fbld
rcl
pop
retf
mov
fwait
cdq
call
or
imul
or
retf
pop
or
stc
dec
es
loopne
or
dec
mov
out
mov
call
cmp
pop
dec
xchg
fisttp
or
dec
into
xor
retf
inc
retf
outs
jae
mov
int
dec
stc
or
retf
jns
(bad)
or
dec
iret
dec
popf
adc
pop
mov
leave
pop
xchg
call
sub
fwait
mov
retf
sbb
fcmovnu
(bad)
in
pop
pushf
call
mov
push
stos
mov
int
mov
mov
(bad)
jge
lea
jns
ss
stc
xlat
cdq
mov
xor
mov
call
jae
mov
pop
push
aas
int3
fwait
repz
mov
adc
cmp
(bad)
cli
retf
adc
mov
sub
setns
ss
add
cmps
cmp
stc
cmps
xor
xchg
jbe
xchg
mov
xchg
leave
fs
jbe
xchg
jmp
mov
pop
cmp
adc
je
cdq
mov
xchg
ss
cs
mov
mov
mov
pop
cmp
mov
inc
test
leave
cli
adc
and
scas
inc
div
adc
cmp
cmp
mov
dec
mov
mov
cmp
cld
mov
xchg
cdq
cli
jb
(bad)
int3
dec
or
ja
repnz
stc
cmp
adc
push
cmp
cmps
int3
dec
movzx
(bad)
adc
mov
push
adc
clc
(bad)
jns
test
pop
xor
cdq
mov
call
jno
imul
jmp
xchg
jbe
dec
lea
jno
mov
pop
dec
ffree
mov
fst
pop
adc
push
(bad)
xchg
xchg
mov
fisub
fwait
mov
int3
fnstenv
jg
pop
inc
jns
cdq
xchg
(bad)
xor
adc
pop
arpl
data16
mov
sti
(bad)
jb
jbe
sbb
ins
xor
push
push
xchg
push
jae
out
(bad)
push
stc
inc
jge
lods
inc
adc
xor
sbb
into
jno
jb
fnstsw
jns
or
stc
pop
pushf
out
mov
push
jae
mov
imul
scas
dec
and
pushf
into
add
jmp
jl
ror
mov
clc
sub
push
inc
jp
mov
lods
adc
popa
hlt
xchg
stc
inc
mov
cmp
xchg
ret
js
fucomp
xor
in
outs
cmp
aas
repz
xchg
mov
dec
(bad)
dec
stc
xchg
aaa
jl
pop
out
arpl
jl
dec
add
xchg
neg
pop
inc
cmps
push
jecxz
ret
call
cmp
leave
outs
stc
mov
stc
cmp
sbb
movs
data16
cmp
sbb
cmp
push
mov
jns
es
jl
xchg
inc
sbb
jns
out
sar
pop
inc
ret
adc
arpl
add
push
cmp
mov
cmps
mov
and
clc
push
jo
pop
xchg
sbb
shl
pop
push
je
pop
xchg
sbb
ins
inc
xchg
push
nop
in
rol
xor
jecxz
cmp
xor
imul
mul
cmps
adc
add
data16
pop
cmps
arpl
fmul
pop
ret
fistp
not
int3
ret
push
(bad)
xchg
and
test
es
xchg
fmul
inc
sbb
push
ds
cld
push
or
xchg
or
adc
dec
cs
cmp
push
mov
out
xchg
push
mov
add
lods
mov
dec
jb
push
and
push
mov
loope
ins
sub
mov
loop
mov
sub
dec
loopne
sub
mov
dec
lods
into
mov
mov
jle
pusha
frstor
std
test
sbb
add
jge
sbb
push
movs
mov
cwde
sub
mov
int3
pop
and
pop
scas
cmp
dec
adc
dec
mov
das
ds
enter
stc
or
pop
dec
cs
mov
loop
push
add
cmp
clc
loop
fsub
adc
test
mov
or
cs
fmul
sahf
iret
mov
inc
inc
cmp
fs
push
nop
es
jp
push
clc
push
lods
in
cmp
sbb
cmp
or
cmps
pop
push
fsub
mov
inc
rcl
js
js
int3
cmp
cmp
aas
test
inc
pop
mov
mov
hlt
push
cwde
iret
repz
pop
jmp
ins
bound
dec
test
fld
mov
sahf
loopne
das
fst
scas
xlat
stos
mov
jo
jecxz
inc
cmp
push
cmps
xchg
xchg
gs
das
das
adc
scas
xchg
daa
out
mov
sub
mov
jge
out
jle
pop
ficomp
out
arpl
mov
loop
xor
pop
cmp
jmp
imul
imul
jmp
retf
jmp
imul
jmp
mov
imul
jmp
retf
jmp
imul
imul
jmp
retf
jmp
jmp
retf
jmp
imul
imul
mov
jmp
sub
imul
call
imul
test
or
outs
nop
mov
jns
push
or
or
imul
mov
or
xchg
mov
mov
dec
sbb
outs
test
outs
or
add
sbb
or
jmp
sbb
imul
(bad)
retf
popf
or
sbb
inc
fwait
adc
or
or
sbb
imul
mov
das
sub
pop
cwde
mov
in
push
mov
adc
pop
ret
add
scas
jne
mov
inc
cmp
in
xchg
and
xor
in
xchg
repnz
stos
int3
fstp
or
cmps
out
mov
cmp
out
in
repz
in
in
xchg
dec
push
ret
repz
cli
mov
clc
sahf
clc
pop
cmp
xchg
rol
mov
mov
pop
jae
add
in
lods
icebp
jecxz
lock
out
mov
imul
mov
mov
repz
jbe
sahf
fistp
icebp
stos
cmc
test
jo
imul
cmps
out
out
out
mov
xor
xchg
fld
fwait
mov
sbb
stos
mov
hlt
repnz
lock
pop
cmp
mov
mov
rcr
out
daa
js
js
sbb
adc
pushf
add
fcmovne
neg
lock
inc
(bad)
popa
mov
xor
retf
or
ret
pop
add
lock
fld
js
mov
sbb
push
cmp
cmp
sbb
push
mov
sbb
push
cmp
cmp
dec
dec
xor
mov
out
(bad)
jmp
xor
aaa
sbb
mov
sbb
cmp
add
ffree
call
inc
cmp
sbb
or
mov
cmp
sbb
and
jg
cmp
stc
repz
popa
add
inc
aaa
push
xor
sbb
push
pop
push
xor
rcl
adc
sbb
and
sbb
es
xor
sub
mov
push
sub
js
inc
push
cmp
pop
push
js
fild
test
mov
dec
pop
dec
test
cdq
dec
adc
mov
imul
adc
xor
jne
cs
cmps
add
aas
iret
idiv
dec
rcr
cwde
xchg
push
loopne
shl
dec
push
movs
dec
(bad)
jmp
push
sti
lahf
mov
pop
push
sub
sbb
lea
pop
cmp
ja
adc
in
scas
scas
sub
mov
fidivr
cmp
inc
call
(bad)
push
ds
lahf
imul
sti
mov
adc
scas
out
fwait
retf
popf
mov
jl
cli
pop
jns
jp
lods
mov
cmovns
sbb
fist
adc
(bad)
jg
ins
int
jmp
cld
mov
in
lods
test
outs
outs
lea
sti
cmp
jns
xor
push
inc
jbe
test
out
ins
call
pop
cs
scas
pop
pop
cs
or
pop
dec
sub
mov
adc
cmp
or
scas
cmp
pop
sub
dec
sbb
lahf
out
scas
xchg
fldenv
add
jp
cld
mov
sbb
or
aas
pop
out
popf
lahf
mov
fisttp
cwde
cmp
jl
fprem
mov
cs
sub
test
pop
dec
dec
push
sub
jg
adc
jnp
lods
retf
fwait
out
sti
jl
or
dec
dec
in
cs
ja
xchg
xchg
jmp
xor
xchg
or
mov
sbb
cs
push
ss
ret
mov
jns
or
dec
sub
lods
mov
jmp
cmp
das
aas
and
lods
test
arpl
sub
sub
or
lods
jg
pop
mov
jge
pop
enter
pushf
mov
clc
fcomp
dec
adc
in
and
loope
xor
test
or
cmps
daa
loop
jmp
in
jne
xor
add
dec
test
(bad)
(bad)
xchg
out
fsubr
popa
mov
aad
scas
and
aaa
add
mov
push
push
xor
bound
repz
xchg
in
fldenv
sbb
mov
push
xor
pop
rcl
bound
and
sub
xchg
mov
jbe
repz
push
xchg
xchg
scas
scas
aad
cmps
in
and
movs
add
sub
cli
and
and
ret
movs
xchg
mov
test
xor
cwde
and
jbe
mov
cmps
push
mov
add
mov
adc
pop
jno
icebp
(bad)
inc
push
shl
xor
or
adc
push
jp
add
push
icebp
add
inc
mov
les
bound
xor
pop
pop
jne
cmp
xor
xchg
leave
lock
xor
push
scas
hlt
aas
(bad)
ret
inc
fst
(bad)
gs
pop
mov
loope
icebp
fild
xor
pop
adc
mov
dec
mov
add
push
pop
push
scas
sahf
std
mov
fld
dec
and
fxch
mov
stos
xor
jns
jns
mov
mov
stos
mov
sbb
cwde
call
jle
or
xor
sbb
push
call
scas
adc
jge
dec
pop
adc
mov
cli
icebp
dec
into
dec
inc
push
cmp
cmp
xchg
test
cmp
pop
mov
lds
mov
int
idiv
ds
fs
popf
(bad)
add
add
pusha
aas
(bad)
(bad)
iret
stc
mov
xchg
mov
xor
sub
mov
(bad)
loopne
fisubr
sub
addr16
mov
inc
mov
(bad)
pop
push
xchg
and
inc
sbb
sbb
int3
(bad)
pop
stc
call
cmp
shl
push
cld
push
sbb
dec
retf
call
add
mov
outs
movs
imul
pop
in
or
sub
sbb
mov
lahf
scas
pop
enter
sub
push
imul
movs
iret
lea
test
push
retf
xchg
mov
mov
loope
outs
pop
std
push
cmp
mov
js
mov
mov
aas
sbb
pushf
(bad)
fdivr
mov
cmps
test
in
scas
push
clc
aas
push
mov
xlat
outs
mov
in
loope
jmp
out
scas
lods
mov
aas
inc
ud2
dec
retf
and
out
adc
(bad)
test
(bad)
in
and
adc
lahf
or
imul
or
jl
cwde
pop
pushf
jo
sub
icebp
in
cmp
outs
mov
push
inc
(bad)
adc
or
int3
pop
mov
outs
mov
push
call
loopne
ins
pop
xchg
lods
outs
lea
into
or
ins
(bad)
adc
push
or
push
(bad)
cmp
adc
shr
mov
imul
fbld
jns
fidivr
lods
xchg
jmp
mov
mov
stos
jo
sub
setge
arpl
pop
pop
ins
xchg
xor
fild
inc
inc
(bad)
sahf
xchg
in
in
sahf
into
sub
(bad)
(bad)
sahf
popa
push
dec
pop
add
pop
loop
mov
push
jnp
push
sbb
xor
repz
pushf
ja
push
ins
jge
sahf
dec
out
retf
out
out
popf
jg
pop
dec
rcr
inc
out
das
ins
mov
and
xchg
ficom
out
(bad)
(bad)
dec
ja
mov
cmp
dec
cmp
mov
fisttp
cld
jo
inc
adc
add
lea
outs
mov
ins
jmp
and
(bad)
sbb
sbb
sahf
movs
mov
call
add
jmp
out
pop
fsubp
jmp
dec
push
arpl
xor
xchg
dec
jno
ins
movs
movs
mov
sub
fisttp
pop
fwait
jbe
pop
jecxz
ret
jae
cli
jecxz
cld
loop
dec
mov
dec
pop
rcr
scas
movs
inc
pop
mov
mov
je
push
add
ret
push
shl
add
and
aad
push
ret
mov
mov
into
call
sbb
mov
or
icebp
shl
clc
mov
mov
jbe
mov
sbb
jmp
xchg
addr16
test
jbe
int3
fstp
in
jle
push
repnz
test
inc
arpl
push
gs
add
shr
dec
outs
mov
xlat
dec
push
dec
adc
jecxz
cmp
dec
in
fsub
cli
or
cmc
sub
push
in
loope
gs
inc
jg
jne
push
sub
add
inc
pushf
das
inc
inc
and
and
pop
rcl
inc
pop
and
ret
jnp
mov
sbb
in
daa
sahf
cmp
shl
stc
adc
jecxz
mov
nop
lock
cmp
cmc
pop
adc
jle
mov
and
adc
in
in
test
push
pop
mov
sbb
in
(bad)
jp
test
jne
adc
add
sahf
jns
ja
mov
aad
adc
dec
mov
xchg
dec
or
inc
lock
xchg
xchg
repz
sub
dec
fsub
pop
pusha
sub
pop
cmp
scas
and
xchg
mov
in
xor
ror
sbb
(bad)
and
lods
jo
sbb
jns
mov
push
dec
repz
xchg
jbe
out
xchg
idiv
sbb
sub
push
stc
ins
xor
enter
cdq
sti
movs
test
push
push
fst
jo
pop
loop
push
pop
push
mov
sbb
jl
clc
ret
xchg
or
cdq
xchg
scas
jb
mov
push
sbb
scas
fld
jbe
out
fimul
dec
stc
pusha
cmp
or
mov
ja
xchg
jmp
xchg
mov
jo
push
je
out
push
imul
push
dec
lea
push
cmp
test
fsub
mov
mov
dec
dec
sub
dec
adc
sbb
push
les
xchg
mov
es
(bad)
ss
adc
jns
jg
fldenv
ss
mov
adc
xchg
fs
stc
pop
adc
pop
pop
push
fst
jl
in
inc
lock
cmp
aaa
xchg
pop
loopne
mov
pop
dec
jg
pop
adc
(bad)
pop
test
xor
jbe
int3
imul
pop
or
stc
test
ja
xchg
pop
push
push
adc
pop
jbe
mov
in
dec
and
fs
mov
call
outs
xchg
cmp
das
mov
xor
mov
sbb
pushf
imul
or
cmc
cmp
jl
cld
xchg
mov
push
mov
addr16
es
push
sysret
xchg
inc
scas
scas
int3
xchg
(bad)
lods
dec
int
adc
in
dec
idiv
movs
retf
das
push
cs
out
aad
cmps
xchg
jle
sbb
test
loop
lahf
test
jbe
add
mov
add
or
adc
push
mov
mov
and
adc
mov
test
push
cmp
pop
sbb
cmp
dec
cwde
xor
outs
ret
cld
xchg
cdq
jge
adc
int
push
aam
push
sbb
in
in
cmp
out
adc
rcl
and
lods
cmp
or
pushf
pushf
fstp
push
inc
fiadd
loopne
push
cmp
sahf
xor
push
jg
lea
fs
cmp
pushf
out
push
dec
test
pop
ins
ds
inc
stos
ss
mov
ins
adc
hlt
or
and
sbb
or
sub
mov
adc
adc
push
push
push
inc
dec
adc
jmp
mov
or
add
sub
outs
ret
outs
mov
pop
mov
sub
add
mov
mov
mov
loope
inc
adc
ret
cmps
sub
mov
repnz
dec
mov
out
xor
pop
imul
cmp
arpl
rol
addr16
or
adc
pushf
and
mov
jb
popf
pop
(bad)
sti
(bad)
(bad)
sub
lahf
outs
mov
mov
add
loop
and
mov
adc
mov
(bad)
(bad)
repz
and
imul
(bad)
jge
sahf
pop
psrad
mov
aam
adc
and
(bad)
sub
push
shl
loop
add
pop
xchg
sbb
bound
add
dec
(bad)
lock
repz
mov
nop
aam
add
sub
ins
cmc
mov
add
(bad)
pushf
xchg
cs
shl
das
xor
add
(bad)
repnz
push
jns
xchg
cmp
js
xor
in
cmovge
sub
xor
jl
ins
sub
mov
xlat
(bad)
repz
js
in
sbb
mov
fistp
mov
pop
std
xor
push
pop
mov
cmps
xchg
cmp
pop
xchg
mov
mov
mov
and
aaa
aaa
mov
mov
pop
(bad)
dec
aaa
dec
fsubr
and
add
mov
push
xor
out
mov
mov
mov
dec
daa
pop
aaa
clc
inc
and
dec
aas
int3
pop
ss
dec
les
mov
mov
push
shl
cmp
aaa
cmp
ja
jmp
pop
xlat
mov
fdivr
mov
popf
aaa
fdiv
(bad)
push
div
xor
mov
xchg
addr16
adc
adc
aaa
jo
nop
jne
test
dec
aaa
icebp
popa
gs
mov
jb
icebp
shl
mov
mov
mov
mov
daa
(bad)
adc
mov
mov
mov
mov
out
mov
pusha
icebp
pop
push
daa
xor
mov
xchg
push
mov
dec
icebp
mov
xor
addr16
jecxz
lock
loope
and
stos
mov
adc
rol
cdq
xchg
fucomip
jmp
adc
jnp
adc
sub
push
and
dec
je
mov
scas
push
dec
pop
les
retf
mov
xor
sbb
adc
loope
xlat
sti
mov
sbb
jg
fwait
and
adc
pop
mov
xchg
je
or
push
add
fld
dec
or
or
aam
hlt
std
int3
xchg
mov
ret
mov
adc
push
dec
cmps
or
xchg
mov
call
stos
and
repz
add
or
mov
sti
test
mov
pop
rcr
pop
jmp
aam
adc
add
xor
push
jb
retf
cwde
add
or
test
pushf
sti
mov
mov
pop
mov
fs
(bad)
test
jnp
std
imul
pop
and
hlt
icebp
std
inc
and
gs
out
scas
fwait
std
je
adc
jae
xchg
mov
cmp
jl
push
fcom
xor
jb
or
jecxz
lahf
cwde
mov
cs
add
sub
sbb
fs
(bad)
pcmpeqb
stc
sbb
pop
push
fcomp
fmul
loopne
sbb
pop
repz
outs
sbb
out
xchg
lea
inc
loopne
add
and
outs
adc
neg
(bad)
sub
push
adc
pop
lods
add
dec
xchg
adc
outs
jb
xor
jae
sub
push
call
sub
inc
cmp
sbb
mov
jae
xchg
sbb
sbb
sub
fidiv
outs
aam
dec
mov
movs
inc
shl
inc
fdivr
cdq
inc
add
movs
call
cmp
or
push
adc
(bad)
jmp
das
pop
sbb
out
addr16
test
jmp
xchg
adc
outs
add
add
jl
pop
imul
ins
ja
xchg
cs
xlat
push
push
and
push
cmp
dec
jne
or
ins
sub
mov
inc
jne
sub
pop
cmps
sub
not
movs
push
or
xor
xchg
enter
jge
stos
js
dec
inc
(bad)
pop
mov
cdq
neg
adc
or
mov
xchg
xchg
test
pop
call
push
leave
push
loopne
cmp
pop
clc
iret
pop
es
(bad)
xor
and
pop
or
jmp
mov
jmp
scas
push
and
xor
mov
stos
cld
or
push
push
fild
ss
aad
pop
mov
pop
ins
pop
sbb
cli
clc
fidivr
js
pop
mov
std
(bad)
fdiv
ja
push
mov
mov
stc
cli
sti
fdivr
jno
mov
mov
cmc
div
aad
mov
pop
js
jp
mov
std
(bad)
fdivr
jno
push
mov
mov
clc
clc
cli
fistp
jl
push
mov
mov
(bad)
cld
icebp
shl
jne
push
mov
mov
div
leave
fstp
jp
pop
mov
(bad)
cld
fnsave
jne
push
mov
mov
stc
cli
clc
fidivr
jg
pop
mov
std
(bad)
fdivr
jb
push
mov
mov
repnz
jbe
push
mov
mov
test
fstp
jp
pop
mov
(bad)
cld
fnstsw
jge
pop
mov
cld
(bad)
fdiv
jb
push
mov
mov
repnz
xlat
mov
mov
jbe
jns
mov
std
fistp
sbb
test
out
fstp
mov
dec
mov
ins
adc
(bad)
lds
pop
sub
mov
sub
mov
pop
leave
loope
inc
arpl
xor
sbb
and
xor
repz
lock
dec
jnp
adc
mov
aaa
and
adc
in
and
jmp
mov
sbb
cmps
stos
jmp
mov
mov
loop
leave
popf
popa
sub
or
inc
aad
movs
ret
ins
mov
or
lods
test
push
nop
hlt
pop
out
inc
and
jl
daa
push
push
sbb
xor
mov
dec
call
iret
pop
int3
xor
out
les
adc
jle
inc
dec
sub
inc
inc
inc
push
lock
jge
stos
or
pop
inc
dec
mov
push
mov
arpl
sahf
cmp
push
push
jo
mov
xchg
lahf
mov
fbstp
and
loope
stos
cmp
inc
je
push
dec
repnz
jnp
call
and
and
or
rcl
dec
push
addr16
jns
and
fcomp
xchg
push
jbe
cli
and
out
retf
fisttp
hlt
add
mov
pop
push
cmp
jns
push
shl
inc
mov
push
aam
iret
test
arpl
cmp
fs
(bad)
in
retf
dec
push
jg
lock
frstor
lods
jno
jmp
loopne
sti
xchg
out
fild
mov
inc
int
dec
xchg
push
out
or
add
add
mov
inc
jo
xor
pop
xchg
aad
sahf
jae
add
and
shl
sbb
sar
movs
dec
adc
outs
sub
xchg
lods
adc
push
inc
out
hlt
scas
ret
repnz
sbb
movs
iret
scas
add
push
and
xchg
cdq
ret
arpl
jne
jns
test
dec
ins
cs
add
jmp
leave
sub
mov
add
les
stc
mov
jb
sbb
ret
inc
loope
or
jne
(bad)
xor
shl
popa
and
mov
movs
es
cld
clc
push
jbe
jg
scas
je
stos
imul
mov
sbb
shl
push
fcmovbe
shl
xchg
pop
adc
inc
dec
ror
and
mov
jnp
test
xchg
je
add
jne
data16
sar
pop
leave
xchg
mov
lea
dec
je
mov
mov
push
xchg
loop
loope
xchg
cmp
mov
xor
das
loop
imul
xor
cmp
inc
xchg
adc
repz
sbb
cmp
lea
mov
push
inc
pop
xlat
(bad)
cmp
push
or
cmc
aas
fcmovb
xor
loop
push
inc
shl
xchg
aas
mov
pop
inc
mov
ror
xor
dec
cmp
mov
jae
sub
inc
aam
mov
pusha
cmps
mov
cmp
adc
es
pop
hlt
(bad)
jb
jmp
sub
mov
icebp
sbb
outs
dec
out
sbb
and
lock
out
mov
fdiv
jae
not
dec
nop
jle
xchg
mov
cmp
xor
jmp
inc
inc
movs
jmp
xor
sub
inc
test
mov
dec
pop
or
cs
mov
gs
or
cmp
pushf
mov
(bad)
sbb
fwait
pop
loop
or
stc
pushf
sub
pop
lods
cmp
je
fstp
aaa
retf
add
das
cmp
cmp
pop
jge
add
fld
outs
xchg
jnp
into
rcr
das
mov
mov
je
mov
stos
imul
fs
cmovle
or
mov
popf
and
fidivr
or
sub
fwait
int3
aas
push
pop
mov
movs
dec
adc
das
fstp
jo
push
or
and
sti
inc
jge
ret
cdq
(bad)
jmp
pop
sbb
in
ror
or
or
add
in
and
or
stos
das
stos
pop
pop
mov
jmp
test
adc
jmp
jns
add
mov
mov
sti
xchg
rcl
sub
cs
fcomp
retf
in
out
fisub
sub
or
jge
ins
imul
sub
cdq
jg
sub
fcomp
int
test
int
adc
mov
loope
int
jbe
in
jg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
dec
add
(bad)
(bad)
call
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
(bad)
(bad)
call
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
ins
add
add
mov
loop
dec
add
add
add
outs
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
jg
jg
jg
lods
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
cld
(bad)
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
add
or
push
ret
cmovo
add
add
add
add
adc
add
add
add
adc
add
add
add
mov
add
add
add
leave
sbb
add
ret
inc
and
sahf
mov
sub
inc
rcr
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
dec
js
rol
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
cmps
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
sub
fwait
xchg
and
and
add
int3
int
int3
int3
int3
int3
int3
int3
sti
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shr
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
das
lea
mov
inc
aas
and
movs
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
mov
aaa
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
and
dec
dec
gs
std
or
in
ficomp
frstor
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
cmp
or
imul
mov
xchg
add
in
or
(bad)
leave
and
(bad)
mov
popa
retf
dec
sub
xor
or
dec
cmp
adc
ror
loopne
inc
test
lods
adc
pop
ret
push
jne
push
push
enter
jg
fsubr
or
pop
addr16
sbb
jge
jnp
jo
pop
je
mov
cwde
push
stos
loop
mov
pusha
xchg
cmp
daa
mov
sti
movs
and
xchg
sub
ss
test
mov
sub
out
test
pop
or
ins
xor
daa
jo
sar
push
mov
dec
dec
jno
dec
sbb
(bad)
sti
push
test
xchg
cmp
cmp
lahf
popf
sti
test
sti
icebp
cmps
jns
hlt
idiv
loope
jmp
in
int
call
ja
xchg
ins
inc
xor
dec
add
scas
push
lds
stos
push
and
sbb
lds
shr
popf
mov
js
dec
push
mov
mov
mov
movs
test
ror
or
int
or
stos
xchg
js
mov
jl
nop
adc
jne
fst
outs
mov
adc
sti
shl
inc
lahf
pop
or
pop
sar
push
pushaw
fcom
xor
dec
or
push
fadd
(bad)
movs
lods
and
fs
std
daa
movs
dec
loopne
mov
cld
lods
pusha
mov
xchg
xchg
loop
das
sub
mov
das
xor
out
xchg
pop
test
popf
popf
sub
out
mov
push
add
mov
ss
cmp
repz
not
xor
loop
repz
pop
lock
ret
ds
xchg
dec
add
shr
mov
sti
fsubr
loopne
imul
mov
(bad)
dec
xor
leave
jle
lods
mov
mov
ja
or
lds
xchg
sub
mov
pop
cmp
inc
adc
inc
push
sahf
cmp
and
add
sub
sbb
cmc
push
fdiv
sub
fwait
aas
fwait
imul
(bad)
adc
pop
dec
in
xchg
or
lock
push
cli
mov
rcl
fwait
xchg
sbb
xchg
push
push
das
icebp
mov
ins
lods
clc
xlat
jo
cld
shl
sub
gs
test
out
mov
daa
xlat
add
movs
fisubr
fisubr
and
fst
loop
add
mov
leave
jle
ds
adc
jge
mov
out
stos
int3
sar
(bad)
pusha
ss
jno
neg
pop
inc
jne
sbb
xor
je
mov
ret
xor
cdq
nop
mov
lea
imul
leave
push
inc
out
dec
repnz
dec
dec
sub
or
pushf
ror
and
jnp
pusha
inc
jg
inc
add
pop
shl
xchg
push
inc
ins
xchg
xor
and
lds
dec
fwait
adc
pop
adc
xor
sbb
cmp
pop
push
pop
push
sbb
sqrtps
push
xor
popf
adc
mov
xchg
and
int
and
jmp
sub
jns
test
rcl
sub
mov
push
lods
(bad)
adc
ror
imul
jl
out
fcmovnb
retf
mov
out
lock
sbb
loop
sbb
mov
daa
stc
les
mov
lea
cmp
aad
mov
sahf
mov
lods
call
push
or
xor
ins
data16
fidivr
mov
mov
div
rol
add
jg
add
loope
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
in
add
repnz
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
mov
add
fiadd
add
fadd
add
mov
add
add
add
add
add
add
add
rol
add
pop
add
test
add
loopne
add
xor
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
fld
add
outs
add
add
add
add
add
add
add
lods
add
add
add
jno
add
test
add
add
add
stos
add
add
add
or
add
movs
add
add
add
add
add
add
add
add
add
add
add
jp
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiadd
add
jb
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
ja
add
stos
add
add
add
add
add
add
add
sub
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
retf
add
add
add
push
add
adc
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
dec
add
add
add
pusha
add
add
add
add
add
cmps
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
mov
add
pop
add
add
add
arpl
add
xor
add
mov
add
popa
add
add
add
call
add
add
add
add
add
jbe
add
out
add
lea
add
sbb
add
cli
add
add
add
test
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
pusha
add
add
add
pop
add
add
add
imul
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
loopne
add
sub
add
out
add
test
add
into
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
add
add
add
and
add
add
add
add
add
add
add
add
add
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
mov
add
inc
add
add
add
add
add
sahf
add
add
add
add
add
mov
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sahf
add
add
add
add
add
add
add
add
add
add
add
lea
add
rol
add
inc
add
add
add
imul
add
test
add
add
cmps
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
leave
add
add
add
add
add
add
add
xchg
add
ins
add
add
add
add
add
add
aam
add
scas
add
add
add
add
add
push
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
or
add
retf
add
add
add
add
add
test
add
fiadd
add
jb
add
lds
add
inc
add
add
add
add
push
add
add
add
ins
add
add
add
add
add
add
add
or
add
add
add
ins
add
add
add
ror
add
add
push
jae
add
pop
add
clc
or
or
mov
ror
test
dec
add
dec
add
lds
in
dec
add
dec
add
dec
add
dec
add
add
add
add
add
cs
inc
push
inc
inc
outs
ins
fs
popa
arpl
addr16
inc
add
add
mov
ror
mov
ror
mov
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
dec
add
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
dec
add
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
add
add
add
cs
inc
push
aas
and
dec
popa
jo
push
aas
and
push
je
imul
push
aas
and
je
push
jb
imul
push
aas
and
push
je
inc
push
push
inc
pop
push
inc
inc
push
dec
inc
inc
inc
inc
inc
inc
push
dec
inc
inc
push
inc
pop
push
dec
inc
inc
dec
inc
inc
add
add
cs
inc
push
inc
dec
je
ins
inc
imul
add
add
add
cs
inc
push
inc
inc
dec
je
ins
inc
imul
add
xchg
jne
add
add
add
aas
inc
push
inc
inc
dec
je
ins
inc
jbe
outs
je
imul
add
add
cs
inc
push
inc
inc
dec
je
ins
push
imul
ins
gs
inc
add
add
cs
inc
push
inc
inc
dec
je
ins
push
imul
ins
gs
popa
jae
xor
add
add
xchg
jne
add
add
add
aas
inc
push
inc
inc
dec
je
ins
push
imul
ins
gs
popa
jae
xor
test
(bad)
push
loope
add
dec
add
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
in
dec
add
add
add
add
inc
dec
dec
add
add
add
add
add
add
cs
inc
push
inc
push
je
imul
jns
inc
add
(bad)
(bad)
(bad)
call
add
cs
inc
push
inc
inc
dec
je
ins
inc
outs
outs
je
outs
ins
push
imul
jne
add
add
add
aas
inc
push
inc
inc
dec
je
ins
inc
ins
gs
outs
je
jbe
outs
je
imul
add
xchg
jne
add
add
add
aas
inc
push
inc
inc
jb
ja
gs
outs
outs
je
outs
ins
push
imul
xchg
jne
add
add
add
aas
inc
push
dec
inc
outs
arpl
jae
push
dec
dec
popa
outs
fs
gs
inc
add
add
add
outs
add
jae
je
outs
add
imul
add
add
add
add
outs
jae
add
add
popa
outs
add
ins
outs
add
add
add
add
add
add
add
test
dec
add
test
dec
add
test
dec
add
test
dec
add
test
add
test
dec
add
test
jb
add
loopne
jo
ja
add
add
ins
outs
add
add
add
xor
add
jg
add
add
add
add
test
enter
mov
test
ins
test
inc
test
sbb
dec
add
test
test
test
test
test
test
test
test
test
test
test
test
test
test
cmc
dec
add
dec
add
cmc
dec
add
dec
add
dec
add
dec
add
add
dec
add
dec
add
cmc
dec
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
add
(bad)
push
fimul
leave
(bad)
aas
add
add
add
lock
or
or
add
or
add
or
add
or
add
add
nop
imul
imul
add
add
add
add
stos
dec
add
add
stos
dec
add
outs
jae
add
add
test
add
stos
dec
add
popa
outs
push
add
add
add
add
dec
add
add
stos
dec
add
add
add
add
xor
add
add
add
add
add
dec
add
ror
ror
ror
test
add
test
add
test
add
ror
ror
test
add
test
add
aas
pop
add
add
add
add
add
add
or
add
jo
add
mov
add
add
add
add
add
add
or
add
add
add
out
aas
add
add
add
lock
add
add
add
lock
add
add
add
aas
add
add
add
loopne
add
add
add
(bad)
(bad)
(bad)
jg
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
dec
add
dec
add
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
leave
dec
add
leave
dec
add
dec
add
dec
add
dec
add
dec
add
leave
dec
add
leave
dec
add
leave
dec
add
leave
dec
add
retf
and
dec
add
retf
(bad)
retf
jbe
dec
add
retf
ret
add
retf
loope
dec
add
retf
push
retf
dec
add
retf
dec
add
retf
dec
add
add
pop
add
add
add
add
xlat
mov
or
add
add
dec
or
sbb
xchg
std
aas
add
add
add
loopne
add
jo
add
mov
test
add
loopne
add
jg
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
jg
add
add
add
adc
add
lods
dec
add
stos
dec
add
add
add
stos
dec
add
add
add
stos
dec
add
add
add
stos
dec
add
add
add
dec
add
add
add
add
dec
lods
dec
add
lods
dec
add
add
add
dec
add
add
add
add
stos
dec
add
add
add
add
sub
add
add
add
dec
add
add
add
lods
dec
add
mov
add
in
dec
add
add
add
lods
dec
add
add
add
mov
add
shl
add
adc
add
lods
dec
add
add
add
mov
add
enter
and
add
les
add
mov
add
add
mov
dec
add
mov
dec
add
add
add
add
add
add
add
add
add
or
add
add
push
add
add
add
add
add
and
add
pusha
add
add
add
nop
add
or
add
inc
add
or
add
add
loopne
add
clc
add
adc
add
adc
add
sub
add
add
add
add
add
add
adc
pop
add
add
add
pop
add
or
add
jo
add
mov
add
mov
add
add
add
add
add
or
add
call
add
add
add
adc
add
sbb
adc
add
xor
adc
add
dec
add
adc
add
pusha
add
adc
add
add
nop
add
adc
add
test
add
add
add
add
add
add
add
add
add
add
adc
add
fadd
adc
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
and
add
cmp
add
push
add
add
push
add
add
add
add
add
add
add
add
add
data16
add
add
add
js
add
add
add
loopne
add
add
add
add
add
add
adc
add
add
clc
add
add
xor
add
push
add
add
add
add
push
add
adc
add
dec
pop
add
add
add
add
cwde
pop
add
mov
add
enter
adc
add
loopne
add
clc
pop
add
adc
add
sub
add
inc
or
sbb
add
pop
or
sbb
add
add
mov
add
mov
add
add
add
add
add
add
add
arpl
add
mov
add
add
add
add
add
add
sldt
jns
add
or
adc
add
call
jns
add
or
sbb
add
sbb
add
xor
add
dec
or
sbb
add
pusha
or
sbb
add
add
nop
or
sbb
add
test
add
ror
and
add
fmul
add
lock
and
add
or
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
js
add
adc
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
sbb
add
sub
add
cmp
add
dec
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
adc
add
mov
add
cwde
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
fmul
add
call
add
add
add
add
add
add
add
add
or
add
or
add
adc
add
sbb
add
adc
add
sub
add
or
add
push
add
add
add
add
add
add
add
or
add
pop
push
add
adc
add
push
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
adc
add
add
add
add
or
add
adc
add
add
add
add
or
add
adc
add
add
add
add
or
add
adc
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
in
add
add
add
fsub
add
in
add
add
add
nop
mov
add
in
add
add
add
les
add
in
add
add
add
clc
movs
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
enter
xor
add
in
add
add
add
cld
stos
or
add
add
add
add
add
lods
or
add
add
add
add
add
add
add
in
add
add
add
cwde
scas
or
add
add
add
add
add
scas
or
add
add
add
add
add
mov
add
add
in
add
add
add
xor
or
add
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
dec
mov
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
in
add
add
add
mov
or
add
add
add
add
add
or
add
add
add
add
add
fmul
add
add
add
add
add
fisttp
add
add
add
add
add
or
add
add
add
add
add
fimul
add
add
add
add
add
fisttp
add
add
add
add
add
jecxz
add
add
add
add
add
add
add
add
add
add
add
in
or
add
add
add
add
add
or
add
add
add
add
add
test
in
add
add
add
mov
pop
add
in
add
add
add
nop
push
push
add
pop
add
in
add
add
add
fs
push
add
add
in
add
add
add
fcom
push
add
pop
add
in
add
add
add
movs
sbb
add
add
in
add
add
add
sbb
push
add
add
in
add
add
add
xchg
sub
add
add
in
add
add
add
or
push
add
add
add
add
add
or
push
add
add
in
add
add
add
add
sub
add
in
add
add
add
lods
dec
push
add
add
in
add
add
add
fmul
add
add
in
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
pusha
pusha
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
bound
add
add
add
add
add
add
add
bound
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
in
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
mov
add
add
add
add
add
add
in
add
add
add
inc
xchg
push
add
add
in
add
add
add
mov
add
add
add
add
pop
popf
push
add
add
add
add
add
popf
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
stos
push
add
add
add
add
mov
push
add
add
add
add
add
add
add
add
in
add
add
add
pop
mov
add
add
add
add
add
add
add
in
add
add
add
call
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
ins
mov
add
add
in
add
add
add
xor
in
add
add
add
xchg
mov
add
add
in
add
add
add
test
push
add
add
in
add
add
add
mov
add
add
add
add
add
add
mov
add
add
in
add
add
add
in
push
add
add
in
add
add
add
clc
mov
add
add
in
add
add
add
or
push
add
add
in
add
add
add
and
add
in
add
add
add
xor
push
add
add
in
add
add
add
dec
mov
add
add
in
add
add
add
pop
mov
add
add
in
add
add
add
jo
push
add
add
in
add
add
add
int3
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
add
pusha
add
add
add
add
add
adc
add
sbb
add
pop
cld
add
pop
rol
pop
rol
pop
rol
pop
rol
pop
add
pop
add
add
add
add
add
sbb
add
adc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
pop
(bad)
inc
pop
(bad)
inc
pop
dec
push
pop
inc
push
pop
inc
push
add
rcr
inc
add
jg
add
aas
rol
aas
rol
aas
rol
aas
rol
aas
shl
jg
jo
inc
clc
add
sar
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
pop
add
add
add
test
add
leave
dec
add
test
dec
add
or
add
rol
add
cmp
add
add
nop
jl
add
add
add
jg
add
pop
add
js
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pop
inc
add
inc
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
or
add
inc
add
add
add
add
add
add
add
(bad)
inc
add
add
add
or
add
adc
add
and
add
inc
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
clc
jg
push
aas
(bad)
push
aas
(bad)
(bad)
clc
jg
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
inc
ud0
loopne
(bad)
push
aas
(bad)
(bad)
clc
jg
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
or
add
adc
add
and
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
(bad)
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
and
add
adc
add
add
xchg
add
add
add
add
add
add
or
add
adc
add
and
add
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cld
jg
(bad)
cld
aas
(bad)
(bad)
cld
pop
(bad)
(bad)
cld
ud0
pushf
pop
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
dec
(bad)
call
(bad)
(bad)
cld
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
cld
jg
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
or
add
and
add
mov
add
and
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
jg
(bad)
clc
jg
push
jg
jmp
jg
inc
jae
inc
inc
(bad)
inc
inc
(bad)
inc
jae
jmp
jg
push
jg
(bad)
clc
jg
(bad)
cld
jg
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
adc
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
inc
adc
add
add
and
add
sbb
add
add
add
add
or
add
add
add
add
add
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
inc
repz
inc
ret
(bad)
inc
cmp
out
(bad)
(bad)
inc
(bad)
(bad)
cld
add
(bad)
clc
add
push
add
jmp
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
sbb
add
and
add
inc
add
and
add
and
add
sbb
add
add
and
add
and
add
adc
add
or
add
add
add
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
dec
ret
(bad)
inc
cmp
inc
ret
(bad)
inc
out
inc
jg
inc
aas
(bad)
inc
pop
(bad)
inc
ud0
rol
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
or
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
cld
add
and
add
add
add
add
add
add
add
add
add
add
test
add
add
inc
and
add
add
and
add
sbb
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
jmp
add
push
add
(bad)
clc
add
(bad)
cld
add
(bad)
inc
(bad)
jmp
add
inc
cmp
add
(bad)
inc
repz
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
inc
or
add
add
inc
and
add
add
inc
add
inc
add
add
add
inc
dec
add
dec
test
add
add
pusha
dec
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
inc
pop
(bad)
inc
jg
inc
iret
(bad)
inc
add
dec
xchg
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
or
add
add
nop
or
add
or
add
mov
or
dec
adc
adc
or
adc
or
adc
add
mov
add
or
adc
add
or
add
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
repz
dec
lock
dec
lock
(bad)
aas
clc
push
jo
lock
pavgb
adc
loopne
adc
lock
psubb
jo
cld
(bad)
aas
dec
lock
(bad)
(bad)
dec
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
or
add
adc
add
and
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
or
add
adc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
(bad)
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
or
add
adc
add
and
add
cld
add
rol
add
add
add
inc
and
inc
inc
adc
inc
and
adc
or
adc
and
inc
add
inc
add
add
cld
add
and
add
or
add
adc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
(bad)
aas
cld
(bad)
(bad)
aas
cld
jg
aas
cld
aas
clc
ds
lock
pavgb
sbb
loopne
sbb
lock
psubb
jl
cld
aas
cld
aas
(bad)
aas
cld
jg
aas
cld
(bad)
inc
add
inc
add
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
idiv
dec
repz
dec
lock
dec
lock
push
jo
clc
or
pop
clc
or
pop
cld
push
jo
dec
lock
(bad)
(bad)
dec
repz
(bad)
out
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
cld
(bad)
(bad)
aas
cld
jg
ds
clc
cmp
pop
clc
cmp
pop
cld
ds
(bad)
aas
cld
jg
aas
cld
(bad)
(bad)
mov
(bad)
(bad)
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
(bad)
cwde
add
add
add
add
or
add
add
add
add
add
push
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
sub
add
and
add
or
add
add
add
add
add
fadd
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
mov
mov
mov
add
(bad)
(bad)
(bad)
(bad)
dec
clc
xchg
ja
add
add
mov
lock
(bad)
clc
xchg
ja
add
add
mov
add
(bad)
clc
xchg
ja
add
add
mov
add
(bad)
clc
xchg
add
add
mov
str
clc
xchg
add
add
mov
push
add
xchg
add
add
mov
(bad)
inc
clc
xchg
js
add
add
mov
(bad)
push
clc
xchg
ja
add
add
mov
(bad)
(bad)
(bad)
clc
xchg
ja
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
add
js
js
add
xchg
add
add
add
js
xchg
idiv
add
or
(bad)
(bad)
push
jle
jg
inc
js
sub
xchg
out
idiv
clc
add
or
mul
and
stos
jle
jg
push
add
ja
mul
and
cmps
out
(bad)
(bad)
push
or
mul
and
(bad)
(bad)
(bad)
clc
add
ja
imul
and
(bad)
push
clc
add
ja
mul
test
add
ja
jle
and
maskmovq
test
mov
lock
(bad)
jg
add
ja
out
fwait
(bad)
jg
inc
jg
out
add
ja
jle
mov
idiv
jle
ja
or
out
fwait
fwait
xchg
(bad)
(bad)
jp
out
add
ja
out
out
jmp
jg
stos
jle
add
ja
out
out
out
out
jg
push
idiv
add
ja
out
out
out
xchg
(bad)
jg
jp
add
or
outs
outs
outs
outs
call
ja
add
or
loopne
out
out
jg
jg
add
add
ja
(bad)
inc
add
mov
add
ja
(bad)
(bad)
(bad)
inc
add
out
add
add
ja
mov
add
add
add
add
mov
mov
push
add
add
or
mov
ja
add
add
or
clc
(bad)
push
mov
add
add
(bad)
push
xchg
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
(bad)
(bad)
clc
add
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
jg
clc
add
add
or
(bad)
(bad)
clc
(bad)
idiv
mov
add
add
clc
jg
push
pop
sar
add
aas
rol
pop
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
jo
add
jg
add
aas
add
aas
add
jg
add
inc
add
jg
add
jg
add
jg
add
jg
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
add
stos
mov
add
jp
pop
js
ja
js
mov
cwde
js
jp
js
jb
js
jp
js
ja
stos
ja
pop
js
ja
jp
jp
js
js
or
mov
xchg
xchg
mov
jns
ja
mov
mov
add
pop
ja
ja
jp
add
ja
ja
mov
mov
mov
ja
ja
add
xchg
add
add
add
add
add
add
add
add
add
add
add
sldt
or
add
pop
add
add
add
add
add
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
jmp
add
jmp
ins
jmp
add
add
in
imul
jmp
adc
out
lock
hlt
or
adc
add
out
mov
(bad)
(bad)
(bad)
(bad)
(bad)
mov
repz
xchg
fst
fstp
(bad)
(bad)
jmp
add
repz
lock
repz
push
or
mov
sbb
mov
fstp
mov
add
or
jne
xchg
(bad)
(bad)
(bad)
fstp
(bad)
or
fmul
or
or
(bad)
scas
add
mov
fcmovnu
fcmovnu
mov
call
fisttp
iret
add
add
mov
(bad)
add
add
repnz
repz
add
add
mov
div
ins
add
add
mov
or
or
hlt
hlt
adc
add
add
fstp
mov
inc
pop
add
add
mov
mov
loope
add
rol
add
add
add
add
add
add
add
add
add
sldt
or
add
pop
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
or
or
adc
scas
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jmp
adc
adc
jmp
or
or
ins
adc
or
or
or
or
or
ins
out
repz
icebp
pop
in
ins
adc
jmp
adc
or
or
or
pop
lock
(bad)
(bad)
(bad)
push
mov
(bad)
fucom
repz
repnz
jmp
or
pop
pop
out
repz
hlt
hlt
(bad)
push
(bad)
mov
(bad)
(bad)
fstp
fucom
hlt
push
scas
inc
adc
or
or
out
out
pop
repnz
or
or
(bad)
(bad)
(bad)
fstp
(bad)
(bad)
push
scas
adc
or
or
pop
out
pop
repnz
or
iret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
hlt
(bad)
(bad)
push
jmp
icebp
icebp
icebp
hlt
or
push
cs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
adc
mov
mov
jmp
fstp
(bad)
(bad)
(bad)
fstp
fdivp
(bad)
(bad)
(bad)
(bad)
push
jmp
icebp
icebp
loop
push
push
push
sub
(bad)
(bad)
fstp
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
mov
mov
fstp
(bad)
call
iret
iret
pop
(bad)
push
hlt
hlt
(bad)
out
inc
test
icebp
loop
pop
pop
push
dec
mov
fstp
fstp
push
hlt
repnz
adc
repz
fdivr
pop
push
mov
fstp
fstp
push
repz
fstp
pop
adc
repz
mov
in
fstp
fstp
hlt
push
mov
mov
fst
(bad)
fnsave
lock
repnz
mov
outs
(bad)
(bad)
(bad)
(bad)
push
(bad)
hlt
repz
(bad)
(bad)
(bad)
mov
or
lock
fadd
cdq
cdq
push
dec
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fst
(bad)
(bad)
(bad)
(bad)
fsubr
mov
(bad)
(bad)
fdiv
(bad)
push
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
mov
or
or
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
jmp
fstp
fstp
(bad)
(bad)
(bad)
iret
in
or
or
mov
fcmovnu
fcmovnu
fcmovnu
(bad)
fstp
fstp
fstp
(bad)
mov
or
or
icebp
(bad)
icebp
loop
fcmovnu
fcmovnu
fcmovnu
fcmovnu
mov
(bad)
push
repz
fstp
fnsave
or
icebp
lock
mov
aam
aam
fcmovu
(bad)
loop
fdiv
or
or
lock
mov
loop
(bad)
fcmovnbe
aam
aam
mov
mov
scas
test
or
or
icebp
repnz
fsub
(bad)
(bad)
(bad)
(bad)
push
repnz
icebp
(bad)
fcmovnbe
aam
scas
inc
adc
or
or
icebp
repz
pop
pop
mov
hlt
hlt
repz
icebp
icebp
mov
or
or
or
or
icebp
repnz
scas
scas
scas
iret
mov
pop
mov
icebp
icebp
icebp
lock
pop
out
or
or
or
or
mov
iret
iret
scas
iret
iret
iret
iret
mov
mov
icebp
repz
repz
adc
or
or
or
or
pop
hlt
hlt
(bad)
fcmovnu
(bad)
fdiv
mov
(bad)
push
hlt
out
adc
or
or
or
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
loop
repz
hlt
adc
or
or
or
or
(bad)
(bad)
(bad)
(bad)
fstp
fucomp
loop
hlt
(bad)
(bad)
in
adc
or
or
or
mov
(bad)
(bad)
(bad)
(bad)
fstp
fstp
jmp
jmp
or
or
or
or
pop
pop
(bad)
(bad)
fstp
fld
in
mov
mov
or
or
or
or
or
or
or
mov
mov
mov
or
or
or
or
jg
push
pop
sar
add
rol
xadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
jg
add
aas
add
aas
add
jg
add
inc
add
jg
add
jg
add
jg
add
jg
shl
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
or
or
or
or
ins
ins
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
adc
ins
or
or
or
or
or
or
jmp
ins
ins
ins
jmp
or
or
or
or
or
or
or
or
or
ins
in
icebp
lock
in
ins
adc
adc
ins
or
or
or
adc
adc
adc
adc
adc
adc
or
or
or
or
or
or
or
ins
in
mov
push
pop
in
in
jmp
or
scas
mov
or
fnsave
adc
or
or
or
or
or
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
adc
scas
mov
fstp
fstp
sbb
hlt
repnz
scas
scas
adc
or
or
or
or
or
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
fdiv
fstp
fstp
sbb
repz
hlt
(bad)
out
scas
adc
or
or
or
lock
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fmul
scas
mov
(bad)
fstp
fstp
fstp
fstp
sbb
hlt
(bad)
push
scas
adc
or
or
imul
idiv
jno
or
call
(bad)
fsubr
(bad)
fstp
fstp
fstp
fstp
sbb
(bad)
(bad)
push
scas
adc
or
or
mov
sbb
sbb
jno
mov
scas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
push
scas
adc
or
or
or
idiv
sbb
sub
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
out
scas
adc
or
idiv
sbb
cs
fst
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
or
icebp
icebp
icebp
icebp
icebp
sbb
sbb
push
push
sub
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
or
or
icebp
icebp
icebp
icebp
icebp
sbb
sbb
push
push
cs
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
fdivp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
out
repnz
icebp
icebp
icebp
sbb
sbb
push
push
cs
fstp
fst
(bad)
(bad)
fstp
(bad)
(bad)
fdivrp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
or
out
repnz
icebp
icebp
sbb
sbb
push
push
push
sub
fstp
fstp
(bad)
(bad)
(bad)
mov
or
(bad)
(bad)
(bad)
(bad)
push
hlt
hlt
hlt
lock
adc
out
repnz
icebp
sbb
sbb
push
push
push
sub
fstp
fstp
(bad)
(bad)
fucomp
scas
in
scas
mov
hlt
hlt
hlt
hlt
hlt
hlt
scas
adc
out
repnz
sbb
sbb
push
push
push
sub
fstp
fstp
(bad)
call
scas
sbb
mov
hlt
push
repnz
adc
or
or
repnz
fnstsw
jge
push
push
jmp
fstp
fstp
fstp
(bad)
dec
in
sbb
(bad)
icebp
icebp
icebp
icebp
icebp
icebp
in
adc
or
or
repnz
fnstsw
jge
jns
jmp
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
in
adc
or
or
repnz
fnstsw
push
push
push
push
dec
mov
fstp
fstp
fstp
hlt
(bad)
(bad)
mov
(bad)
fst
fstp
fstp
fstp
in
adc
or
or
repz
fcom
push
push
push
push
dec
in
fstp
fstp
sbb
(bad)
(bad)
(bad)
fdivrp
fnsave
(bad)
(bad)
(bad)
fstp
fstp
(bad)
or
repz
fcom
push
push
push
push
dec
scas
fstp
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fdivrp
fst
(bad)
(bad)
(bad)
fstp
fisttp
scas
adc
or
or
repz
or
(bad)
fcom
push
push
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
mov
in
or
or
out
(bad)
ror
repnz
(bad)
(bad)
mov
scas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fst
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fucomp
adc
or
or
pop
fcmovnbe
ror
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
scas
mov
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
scas
ins
or
or
or
fcmovnbe
lods
or
(bad)
(bad)
(bad)
(bad)
(bad)
fdiv
(bad)
(bad)
(bad)
push
fstp
fstp
fstp
fst
(bad)
(bad)
(bad)
(bad)
(bad)
mov
or
or
or
pop
fld
(bad)
(bad)
(bad)
(bad)
(bad)
scas
mov
(bad)
(bad)
(bad)
(bad)
call
fstp
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
scas
in
or
or
or
pop
fld
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
or
(bad)
push
sbb
fstp
fstp
fstp
fst
(bad)
(bad)
scas
scas
or
or
or
or
fld
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnbe
scas
mov
(bad)
push
repz
fstp
fstp
fstp
fst
scas
scas
or
or
or
or
pop
sbb
mov
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
aad
in
hlt
push
hlt
repz
fstp
fstp
fisttp
scas
scas
or
or
or
or
or
lock
repnz
fcmovnbe
aam
aam
aad
fcmovnu
fcmovnu
fcmovnu
fcmovne
scas
out
repnz
hlt
repz
fstp
fnsave
or
or
or
or
mov
sbb
aam
repz
fcmovnbe
aam
aam
aam
aad
aad
scas
scas
mov
fstp
fisttp
mov
scas
in
or
or
or
or
or
or
mov
sbb
fcomi
hlt
hlt
hlt
repz
fcmovnbe
aam
aam
aam
mov
scas
scas
scas
scas
scas
or
or
or
or
or
or
or
or
(bad)
push
hlt
hlt
hlt
repz
fcmovnbe
aam
aam
aam
adc
or
or
or
or
or
or
(bad)
(bad)
(bad)
push
hlt
hlt
hlt
repz
icebp
icebp
icebp
lock
ins
adc
jmp
or
or
or
or
or
mov
mov
mov
pop
lock
hlt
hlt
repz
icebp
icebp
icebp
lock
or
or
or
or
or
mov
scas
scas
scas
scas
scas
scas
in
in
mov
pop
pop
lock
icebp
icebp
icebp
lock
out
or
or
or
or
or
or
or
scas
scas
scas
scas
in
in
in
in
in
in
in
in
mov
mov
pop
icebp
repnz
icebp
icebp
icebp
lock
or
or
or
or
or
or
or
repnz
in
in
in
in
in
in
mov
mov
mov
lock
hlt
hlt
hlt
repz
adc
or
or
or
or
or
pop
repz
fcmovnu
(bad)
fmul
mov
mov
mov
mov
mov
mov
hlt
(bad)
(bad)
push
hlt
hlt
out
adc
or
or
or
or
or
repnz
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
fisttp
or
or
sbb
hlt
hlt
lock
or
or
or
or
hlt
hlt
hlt
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
or
fstp
repz
hlt
(bad)
(bad)
in
adc
or
or
or
or
pop
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
(bad)
fstp
repz
hlt
(bad)
(bad)
(bad)
mov
or
or
or
or
pop
pop
pop
fcmovnu
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
fucomp
out
repz
hlt
(bad)
(bad)
(bad)
push
jmp
or
or
or
or
or
pop
pop
out
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
fucomp
mov
(bad)
(bad)
(bad)
inc
jmp
or
or
or
pop
pop
pop
out
out
div
mov
mov
fstp
fstp
fstp
fstp
fld
adc
out
(bad)
(bad)
(bad)
push
lock
pop
or
or
or
or
or
or
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
out
pop
out
out
out
out
or
fucomp
jmp
or
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
dec
add
inc
jg
ud0
add
add
loopne
inc
add
add
add
add
lock
add
jg
add
add
add
aas
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
inc
add
add
adc
inc
add
add
sbb
inc
add
inc
aas
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
mov
add
add
add
add
mov
add
add
add
ja
push
js
mov
add
or
add
add
add
add
(bad)
(bad)
js
mov
out
div
div
add
add
add
ja
(bad)
(bad)
(bad)
(bad)
push
ja
mov
jg
jg
test
(bad)
(bad)
(bad)
push
xchg
out
out
(bad)
(bad)
(bad)
js
add
add
ja
(bad)
dec
xchg
jg
push
add
add
ja
(bad)
jmp
and
xchg
out
(bad)
(bad)
(bad)
(bad)
js
add
or
(bad)
jmp
and
and
jle
jg
(bad)
(bad)
clc
add
add
ja
(bad)
jmp
and
sub
out
(bad)
(bad)
(bad)
push
add
or
(bad)
jmp
and
sub
stos
stos
jle
jg
(bad)
(bad)
(bad)
inc
ja
jmp
sub
sub
stos
stos
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
add
ja
(bad)
jmp
ja
stos
jg
(bad)
(bad)
(bad)
(bad)
push
js
add
ja
(bad)
jmp
sub
xchg
ja
push
(bad)
(bad)
jg
jg
add
or
(bad)
jmp
div
jg
add
push
div
clc
add
or
(bad)
jmp
sub
xchg
jg
test
jg
js
add
ja
mov
mov
div
push
pop
ja
push
div
clc
add
or
(bad)
out
sub
jg
test
jg
js
add
ja
mov
stos
fwait
fwait
xchg
div
(bad)
inc
out
clc
add
or
(bad)
out
mov
jg
(bad)
push
ja
(bad)
jle
jg
add
or
mov
fwait
fwait
fwait
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
or
(bad)
out
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
push
stos
jle
jle
add
or
mov
(bad)
(bad)
dec
push
div
cmps
out
add
or
(bad)
out
out
out
out
out
xchg
(bad)
(bad)
(bad)
jg
ja
stos
jle
add
or
mov
out
out
out
out
call
div
div
cmps
call
ja
mov
out
out
out
out
call
jg
ja
jp
js
add
or
mov
out
out
out
out
out
xchg
push
div
div
stos
add
add
ja
mov
out
outs
out
out
out
call
jg
ja
test
add
add
ja
mov
out
out
out
mov
div
div
div
add
add
or
mov
outs
outs
outs
outs
outs
push
jg
jo
add
add
or
xchg
add
out
out
out
mov
ja
add
add
add
or
mov
test
outs
push
add
add
add
or
xchg
test
out
add
add
add
add
ja
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
ja
js
mov
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
add
or
mov
mov
(bad)
push
add
add
add
(bad)
clc
mov
mov
js
add
add
add
add
ja
mov
js
pop
add
add
(bad)
push
js
mov
jo
add
add
add
(bad)
dec
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
js
add
add
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
or
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
(bad)
push
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
push
add
(bad)
(bad)
push
add
add
add
mov
or
dec
(bad)
(bad)
(bad)
inc
add
add
ud0
add
add
loopne
inc
add
add
add
add
lock
add
jg
add
add
add
aas
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
inc
add
add
adc
inc
add
inc
cmp
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
add
enter
add
add
add
dec
add
add
add
add
dec
add
popa
add
add
add
add
add
add
or
add
add
dec
add
and
push
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
or
dec
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
push
add
add
les
add
add
add
(bad)
inc
add
arpl
add
add
add
add
add
push
add
add
pop
add
add
add
ja
(bad)
inc
add
add
add
add
add
add
daa
ins
add
arpl
je
ins
add
pop
add
jb
outs
add
jb
add
jae
xor
xor
add
add
add
add
add
add
or
jns
(bad)
inc
add
les
enter
add
add
add
add
add
add
add
or
dec
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
ja
and
add
add
add
mov
add
add
add
xor
fs
inc
add
add
add
push
add
add
mov
push
add
add
add
add
inc
add
push
add
add
mov
pop
add
add
add
add
inc
add
arpl
add
add
add
add
add
push
add
add
mov
sub
sub
push
add
(bad)
inc
add
ins
add
add
add
enter
add
add
add
or
sbb
mov
inc
add
add
add
add
add
push
add
add
push
add
add
add
add
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jb
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jb
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jb
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
push
add
bound
xor
pop
xor
add
xor
xor
pop
xor
xor
push
xor
outs
xor
xor
js
mov
data16
pusha
xor
inc
xor
add
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
adc
xor
xor
pop
add
xor
xor
add
add
ins
add
popa
add
add
add
add
xor
xor
xor
xor
add
xor
xor
xor
mov
xor
xor
xor
add
shl
ret
xor
xor
xor
or
push
loopne
outs
xor
push
std
and
dec
xor
mov
jle
pop
xor
xor
xor
xor
xor
imul
xor
xor
xor
xor
xor
mov
pop
xor
push
js
mov
data16
pusha
xor
inc
xor
xor
add
xor
jmp
add
fs
dec
and
and
add
ins
add
popa
add
add
add
add
dec
xor
jle
pop
xor
add
popa
add
ins
add
popa
add
add
outs
add
add
xor
xor
xor
mov
data16
xor
xchg
xor
xor
add
xor
add
popa
add
ins
add
popa
add
add
add
add
mov
xor
xor
xor
sbb
aad
mov
xor
add
add
ins
add
popa
add
add
add
add
pop
xor
imul
pop
sub
xor
pop
xor
and
push
push
iret
xor
xor
xor
xor
pop
xor
xor
fs
dec
xchg
xor
dec
xor
pop
xor
xor
xor
xor
xor
sbb
mov
addr16
xor
and
and
add
ins
add
popa
add
add
add
add
inc
jge
xor
nop
push
xor
push
xor
and
add
jns
ins
add
popa
add
add
add
add
mov
xor
xor
pop
xor
xor
xor
xor
and
and
add
outs
add
and
xor
pop
add
add
add
ins
add
popa
add
add
add
add
xchg
pop
mov
data16
xor
or
and
push
push
(bad)
xor
xor
xor
add
xor
xor
add
add
ins
add
popa
add
add
add
add
outs
xor
jno
push
push
(bad)
xor
xor
push
jle
mov
jle
pop
xor
add
xor
add
add
outs
add
and
dec
xor
add
add
ins
add
popa
add
add
add
add
mov
outs
xor
push
mov
sub
jbe
jne
xor
push
xor
daa
add
xor
add
add
outs
add
and
dec
xor
add
add
ins
add
popa
add
add
add
add
outs
xor
dec
xor
imul
jbe
jne
xor
push
xor
push
inc
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
bound
ins
add
and
je
outs
add
add
imul
and
je
push
add
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
add
add
and
imul
je
popa
add
add
je
imul
and
jo
popa
add
imul
add
add
and
je
push
add
add
outs
add
ins
add
add
add
add
add
and
je
outs
add
add
popa
add
imul
add
add
add
outs
add
jb
jne
jo
je
imul
add
add
add
imul
and
je
push
add
add
add
and
jo
popa
add
imul
add
add
add
popa
add
and
bound
add
outs
add
add
add
outs
add
add
add
add
add
outs
add
jb
add
je
ins
add
add
inc
add
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
sub
add
ins
add
add
add
add
add
jo
add
and
data16
ins
add
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sub
dec
add
je
and
add
outs
add
add
and
add
jae
imul
add
popa
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
inc
add
imul
add
add
add
add
js
add
jne
je
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
outs
add
ins
add
outs
add
add
outs
add
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
adc
dec
add
jbe
popa
add
add
add
jne
outs
add
je
imul
cmp
inc
add
imul
add
add
add
add
add
add
add
outs
add
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
jb
add
and
ins
add
add
ins
add
or
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
dec
add
outs
add
popa
add
add
add
popa
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
add
and
ja
push
add
and
je
jb
jns
imul
and
je
outs
add
add
imul
and
data16
outs
add
je
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
je
imul
and
dec
add
je
and
inc
add
jne
outs
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jne
outs
add
je
imul
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
add
add
jne
je
add
or
dec
add
je
add
and
dec
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
push
add
and
imul
je
popa
add
add
je
imul
and
data16
imul
add
add
imul
and
add
jb
outs
add
and
arpl
outs
add
add
add
add
outs
add
imul
outs
add
add
jb
and
imul
je
popa
add
add
je
imul
and
imul
popa
add
add
popa
add
add
add
outs
add
add
jb
outs
add
jb
add
jae
or
push
add
add
jae
add
add
popa
add
je
and
jne
outs
add
add
add
add
je
and
imul
je
popa
add
add
je
imul
and
imul
arpl
outs
add
jo
ins
add
je
add
add
outs
add
add
add
and
popa
add
popa
add
outs
add
push
add
je
jne
jo
and
inc
add
imul
jb
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
ins
add
popa
add
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jae
add
and
push
add
add
popa
add
arpl
add
add
add
add
and
outs
add
add
popa
add
add
outs
add
and
jb
outs
add
add
outs
add
and
bound
popa
add
imul
add
push
add
add
sub
and
dec
add
and
jns
outs
add
and
jae
add
and
je
push
add
add
add
jae
popa
add
add
add
je
daa
add
and
popa
add
add
jne
add
dec
add
jae
jne
data16
imul
add
je
and
push
add
add
je
jae
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
ins
add
popa
add
add
add
add
add
jne
jb
add
add
outs
add
and
push
add
and
inc
add
add
outs
add
jae
je
jb
popa
add
add
and
jb
imul
je
jae
and
bound
add
outs
add
add
add
je
je
add
jo
je
imul
and
imul
je
popa
add
add
je
imul
and
popa
add
popa
add
outs
add
add
imul
add
add
add
add
jo
add
and
jb
add
jne
add
je
add
add
add
imul
jb
jns
and
imul
add
or
dec
add
jns
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
sub
add
ins
add
add
add
add
add
jo
add
and
data16
ins
add
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sub
dec
add
je
and
add
outs
add
add
and
add
jae
imul
add
popa
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
inc
add
imul
add
add
add
add
js
add
jne
je
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
outs
add
ins
add
outs
add
add
outs
add
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
adc
dec
add
jbe
popa
add
add
add
jne
outs
add
je
imul
cmp
inc
add
imul
add
add
add
add
add
add
add
outs
add
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
jb
add
and
ins
add
add
ins
add
or
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
dec
add
outs
add
popa
add
add
add
popa
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
add
and
ja
push
add
and
je
jb
jns
imul
and
je
outs
add
add
imul
and
data16
outs
add
je
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
je
imul
and
dec
add
je
and
inc
add
jne
outs
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jne
outs
add
je
imul
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
add
add
jne
je
add
or
dec
add
je
add
and
dec
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
push
add
and
imul
je
popa
add
add
je
imul
and
data16
imul
add
add
imul
and
add
jb
outs
add
and
arpl
outs
add
add
add
add
outs
add
imul
outs
add
add
jb
and
imul
je
popa
add
add
je
imul
and
imul
popa
add
add
popa
add
add
add
outs
add
add
jb
outs
add
jb
add
jae
or
push
add
add
jae
add
add
popa
add
je
and
jne
outs
add
add
add
add
je
and
imul
je
popa
add
add
je
imul
and
imul
arpl
outs
add
jo
ins
add
je
add
add
outs
add
add
add
and
popa
add
popa
add
outs
add
push
add
je
jne
jo
and
inc
add
imul
jb
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
ins
add
popa
add
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jae
add
and
push
add
add
popa
add
arpl
add
add
add
add
and
outs
add
add
popa
add
add
outs
add
and
jb
outs
add
add
outs
add
and
bound
popa
add
imul
add
push
add
add
sub
and
dec
add
and
jns
outs
add
and
jae
add
and
je
push
add
add
add
jae
popa
add
add
add
je
daa
add
and
popa
add
add
jne
add
dec
add
jae
jne
data16
imul
add
je
and
push
add
add
je
jae
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
ins
add
popa
add
add
add
add
add
jne
jb
add
add
outs
add
and
push
add
and
inc
add
add
outs
add
jae
je
jb
popa
add
add
and
jb
imul
je
jae
and
bound
add
outs
add
add
add
je
je
add
jo
je
imul
and
imul
je
popa
add
add
je
imul
and
popa
add
popa
add
outs
add
add
imul
add
add
add
add
jo
add
and
jb
add
jne
add
je
add
add
add
imul
jb
jns
and
imul
add
or
dec
add
jns
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
sub
add
ins
add
add
add
add
add
jo
add
and
data16
ins
add
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sub
dec
add
je
and
add
outs
add
add
and
add
jae
imul
add
popa
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
inc
add
imul
add
add
add
add
js
add
jne
je
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
outs
add
ins
add
outs
add
add
outs
add
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
adc
dec
add
jbe
popa
add
add
add
jne
outs
add
je
imul
cmp
inc
add
imul
add
add
add
add
add
add
add
outs
add
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
jb
add
and
ins
add
add
ins
add
or
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
dec
add
outs
add
popa
add
add
add
popa
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
add
and
ja
push
add
and
je
jb
jns
imul
and
je
outs
add
add
imul
and
data16
outs
add
je
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
je
imul
and
dec
add
je
and
inc
add
jne
outs
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jne
outs
add
je
imul
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
add
add
jne
je
add
or
dec
add
je
add
and
dec
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
push
add
and
imul
je
popa
add
add
je
imul
and
data16
imul
add
add
imul
and
add
jb
outs
add
and
arpl
outs
add
add
add
add
outs
add
imul
outs
add
add
jb
and
imul
je
popa
add
add
je
imul
and
imul
popa
add
add
popa
add
add
add
outs
add
add
jb
outs
add
jb
add
jae
or
push
add
add
jae
add
add
popa
add
je
and
jne
outs
add
add
add
add
je
and
imul
je
popa
add
add
je
imul
and
imul
arpl
outs
add
jo
ins
add
je
add
add
outs
add
add
add
and
popa
add
popa
add
outs
add
push
add
je
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
test
jne
push
call
xor
cmp
jae
mov
sub
mov
mov
add
push
push
mov
mov
call
test
jne
mov
cmp
jne
mov
push
add
push
mov
call
test
jne
mov
cmp
jne
mov
cmp
mov
je
cmp
jne
popa
popa
popa
popa
popa
push
call
mov
mov
mov
cmp
je
cmp
jne
mov
mov
add
mov
mov
push
mov
push
xor
push
mov
call
mov
dec
mov
jne
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
mov
cmp
jne
push
push
call
pop
pop
jmp
push
mov
movzx
lea
push
push
call
inc
mov
movzx
lea
push
push
call
add
inc
cmp
je
cmp
je
sub
mov
pop
cmp
je
mov
and
pop
pop
leave
ret
push
mov
push
xor
cmp
jne
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
cmp
je
pop
pop
jmp
push
push
push
call
add
pop
pop
ret
push
push
push
call
add
ret
cmp
push
mov
jne
xor
pop
ret
test
push
push
jne
cmp
je
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
jmp
push
call
cmp
pop
jbe
mov
cmp
jne
push
push
push
call
add
test
je
add
mov
test
jne
xor
pop
pop
pop
ret
mov
lea
jmp
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
mov
push
push
call
pop
pop
cmp
sbb
neg
je
push
call
pop
mov
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
push
call
pop
xor
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
mov
cmp
je
mov
xor
cmp
setne
cmp
je
push
call
pop
mov
cmp
je
push
call
mov
inc
push
push
call
add
mov
cmp
jne
call
mov
call
mov
mov
jmp
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
cmp
je
mov
mov
mov
call
mov
call
ret
push
call
pop
ret
push
mov
push
push
mov
push
call
mov
mov
test
pop
jne
call
mov
or
mov
jmp
test
je
call
mov
jmp
test
je
and
test
je
mov
and
mov
mov
mov
and
and
push
push
and
pop
or
test
mov
jne
call
add
cmp
je
call
add
cmp
jne
push
call
test
pop
jne
push
call
pop
test
push
je
mov
mov
lea
mov
mov
sub
sub
test
mov
jle
push
push
push
call
add
mov
jmp
or
mov
jmp
mov
cmp
je
cmp
je
mov
and
imul
mov
sar
add
jmp
mov
test
je
push
push
push
push
call
and
add
cmp
je
mov
mov
mov
jmp
push
lea
push
push
mov
mov
mov
call
add
mov
cmp
je
or
mov
jmp
mov
and
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
cmp
jbe
mov
cmp
je
mov
xor
jmp
mov
cmp
je
or
cmp
jbe
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
push
lea
call
mov
cmp
jne
mov
cmp
jbe
cmp
je
cmp
jbe
push
push
push
call
add
call
mov
call
cmp
mov
je
mov
and
pop
pop
pop
leave
ret
cmp
je
cmp
ja
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
jmp
mov
mov
cmp
je
mov
cmp
je
mov
and
jmp
lea
push
push
push
push
push
lea
push
push
mov
push
call
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
call
cmp
jne
cmp
je
cmp
jbe
push
push
push
call
add
jmp
push
push
push
push
push
call
add
ret
push
mov
sub
push
xor
test
push
push
mov
mov
mov
mov
mov
mov
je
mov
mov
jmp
mov
mov
lea
push
call
test
pop
je
push
push
push
push
push
call
add
lea
push
call
test
pop
je
push
push
push
push
push
call
add
mov
mov
test
jne
test
jne
cmp
je
or
mov
and
sub
mov
mov
je
dec
je
dec
je
call
mov
or
call
push
pop
push
push
push
push
push
mov
call
add
jmp
mov
jmp
test
je
test
jne
mov
jmp
mov
mov
push
pop
sub
je
sub
je
sub
je
sub
je
sub
jne
cmp
sete
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
and
mov
cmp
mov
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
jmp
cmp
je
cmp
je
cmp
jne
mov
mov
test
mov
je
mov
not
and
test
js
mov
test
je
or
or
cmp
jne
or
test
je
or
test
je
or
jmp
mov
jmp
test
je
or
call
cmp
mov
jne
call
mov
or
call
mov
jmp
mov
mov
push
push
mov
push
lea
push
push
push
push
call
cmp
mov
jne
mov
mov
and
cmp
jne
test
je
and
push
push
lea
push
push
push
push
push
call
cmp
mov
jne
mov
mov
and
imul
sar
mov
lea
and
call
push
call
pop
call
mov
jmp
push
call
cmp
jne
mov
mov
and
imul
sar
mov
lea
and
call
mov
push
call
pop
push
call
cmp
jne
call
mov
jmp
cmp
jne
or
jmp
cmp
jne
or
push
push
call
mov
mov
and
imul
sar
mov
pop
pop
mov
or
mov
mov
mov
and
imul
sar
mov
lea
and
mov
and
mov
jne
test
je
test
je
push
or
push
push
call
add
cmp
mov
jne
call
cmp
je
push
call
jmp
push
lea
push
push
mov
call
add
test
jne
cmp
jne
mov
cdq
push
push
push
call
add
cmp
je
push
push
push
call
add
cmp
je
test
je
mov
test
mov
jne
mov
and
jne
or
jmp
or
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
mov
and
cmp
jne
mov
jmp
mov
test
je
test
mov
jne
mov
mov
and
cmp
je
cmp
je
cmp
jne
mov
cmp
jbe
cmp
jbe
cmp
jbe
cmp
je
mov
mov
and
imul
sar
mov
lea
mov
xor
and
xor
mov
mov
and
imul
sar
mov
lea
mov
mov
shr
shl
and
or
cmp
mov
jne
test
je
mov
mov
and
imul
sar
mov
lea
or
mov
mov
mov
and
cmp
jne
test
je
push
call
push
push
lea
push
push
push
and
push
push
call
cmp
jne
call
push
call
mov
mov
and
imul
sar
mov
lea
and
push
call
pop
jmp
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
je
push
lea
push
push
call
add
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
jmp
mov
cmp
jbe
cmp
jbe
cmp
ja
push
push
push
push
call
add
or
je
push
push
push
push
call
add
and
cmp
jne
jmp
mov
and
cmp
jne
push
call
pop
call
push
pop
mov
mov
jmp
cmp
jne
push
push
push
call
add
cmp
je
mov
jmp
push
push
push
call
add
jmp
movsx
xor
dec
je
dec
jne
mov
mov
jmp
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
je
add
cmp
jg
jmp
push
call
pop
call
mov
mov
jmp
mov
mov
sar
mov
and
imul
mov
mov
pop
pop
pop
leave
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
or
xor
cmp
setne
cmp
je
cmp
je
mov
and
neg
sbb
inc
je
mov
push
push
push
push
lea
push
mov
call
add
mov
mov
call
mov
cmp
je
or
call
ret
xor
mov
cmp
je
cmp
je
mov
mov
sar
and
imul
mov
lea
and
push
call
pop
ret
push
mov
push
push
push
push
push
push
call
add
pop
ret
push
mov
sub
mov
xor
mov
push
xor
cmp
je
cmp
jne
call
mov
cmp
jne
or
jmp
push
lea
push
push
lea
push
push
call
test
jne
cmp
jne
call
cmp
jne
mov
push
push
push
lea
push
push
lea
push
push
call
push
call
mov
cmp
je
push
lea
push
push
lea
push
push
call
test
je
mov
mov
xor
pop
call
leave
ret
mov
jmp
push
mov
sub
mov
xor
mov
cmp
push
push
push
jge
xor
jmp
mov
mov
xor
xor
inc
cmp
jne
lea
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
push
push
push
push
call
jmp
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
push
call
cmp
pop
je
cmp
je
mov
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
mov
cmp
je
push
push
push
call
add
push
push
push
push
push
push
push
jmp
jmp
xchg
or
inc
mul
sub
add
pop
cmp
add
dec
out
cwde
jge
sub
cmp
(bad)
ins
mov
add
inc
sbb
bound
retf
sub
jbe
aaa
les
imul
(bad)
imul
les
aaa
std
xchg
mov
(bad)
push
dec
pop
inc
push
int
outs
sbb
xor
movs
xor
test
mov
push
cmp
jmp
fnsave
sub
and
jmp
mov
inc
test
sub
sbb
adc
fdiv
or
or
sti
retf
daa
push
test
sbb
ds
sbb
sbb
push
sub
pop
adc
push
cdq
jmp
aad
nop
adc
movs
das
jne
jns
or
push
and
and
xchg
cmc
pop
and
vmaxps
pop
retf
je
std
test
jle
push
pop
mov
repz
mov
and
leave
push
fs
jmp
jl
xchg
aam
xchg
outs
rcl
pop
add
das
mov
in
movs
or
cmp
icebp
mov
mov
imul
pushf
jle
cmps
imul
mov
jmp
mov
in
bnd
fsubr
cmps
lahf
or
sub
sub
sub
mov
movs
out
fisubr
lods
(bad)
dec
(bad)
mov
inc
dec
push
lods
not
and
aam
cwde
mov
mov
(bad)
div
ins
push
imul
xchg
push
push
imul
nop
jnp
(bad)
push
xor
jmp
imul
pop
test
jbe
fistp
sbb
lahf
cmp
cmp
push
aas
pop
mov
call
imul
xor
(bad)
inc
in
jbe
jge
cmp
pop
sbb
jne
mov
dec
loope
fnsave
ret
cmp
ins
inc
jge
xor
jge
sbb
pusha
(bad)
pop
popf
in
das
jns
fdivr
mov
aad
or
mov
inc
inc
adc
fmul
(bad)
xlat
pop
mov
dec
jae
arpl
and
mov
enter
stc
fadd
and
mov
mov
adc
cmp
xlat
and
int3
idiv
and
mul
mov
lahf
fisub
pop
dec
pop
jge
push
ret
inc
xlat
dec
neg
leave
int
hlt
or
(bad)
imul
scas
or
cmps
lods
xchg
(bad)
sbb
daa
mov
push
in
add
or
add
(bad)
mov
sbb
sbb
mov
add
adc
jbe
loopne
aaa
mov
sar
movs
adc
cmp
xchg
inc
jg
cmp
shl
push
jp
push
adc
pop
call
xor
out
inc
ins
xchg
aam
into
mov
push
dec
mov
loope
in
xchg
(bad)
hlt
mov
inc
in
not
mov
mov
pop
scas
jl
icebp
inc
mov
inc
movs
sbb
ja
sub
adc
pop
daa
lods
push
cmp
les
movs
push
loope
push
enter
xchg
lahf
das
sub
aad
gs
clc
pop
imul
jnp
int
dec
dec
(bad)
inc
xor
mov
xor
iret
push
es
mov
xchg
arpl
xchg
arpl
push
cmp
loope
retf
test
pop
or
push
std
ins
dec
jbe
gs
cwde
jp
fbstp
test
mov
pop
and
sbb
aaa
sbb
mov
out
pop
mov
adc
jmp
rcl
int
pop
loop
add
daa
sbb
faddp
push
jno
dec
aas
gs
shl
enter
repz
ss
ss
shl
in
enter
js
pop
cmp
lods
and
aas
aad
sbb
xor
sbb
addr16
mov
out
push
popa
shl
cld
(bad)
call
inc
aas
bound
push
addr16
movs
pop
sub
retf
mov
hlt
push
pop
mov
lds
push
cmp
mov
hlt
push
movntq
cmc
add
cmovo
xor
mov
popf
fwait
into
mov
dec
out
cmc
mov
loopne
fst
and
neg
in
xchg
dec
fwait
in
inc
int
mov
mov
shl
push
int
pop
in
jbe
push
adc
iret
lea
dec
(bad)
loope
sub
add
and
bound
(bad)
fnstsw
cmp
imul
aaa
stos
adc
mov
xchg
push
scas
inc
in
aaa
nop
fidiv
cmp
clc
clc
call
in
sub
mov
mov
inc
in
xor
pop
cmp
dec
push
cmps
pop
jg
push
jg
jo
fild
push
inc
lods
popf
xor
dec
mov
retf
out
ss
pop
and
scas
and
test
enter
jmp
mov
popa
arpl
adc
sub
cmp
adc
dec
out
test
int3
das
jmp
mov
cmps
std
mov
adc
outs
sbb
dec
sub
scas
mov
mov
mov
ss
add
mov
push
fdiv
xchg
push
sub
jbe
cs
add
add
movs
push
inc
arpl
(bad)
dec
and
mov
xchg
aad
lock
jno
das
xchg
inc
xor
sahf
daa
or
mov
aad
pop
mov
jecxz
(bad)
jnp
sbb
adc
enter
push
xor
dec
(bad)
ds
adc
xchg
setbe
dec
je
xchg
jmp
inc
lods
pop
sbb
stc
das
mov
mov
mov
mov
pop
and
push
ins
inc
or
push
push
addr16
(bad)
movs
fs
xchg
movs
out
clc
mov
std
(bad)
popa
jg
pop
fwait
out
mov
adc
and
push
or
jmp
xchg
inc
jmp
jl
ss
cmp
js
add
or
mov
cwde
in
push
push
aas
out
adc
xchg
adc
pop
rcr
sub
imul
xor
add
retf
cmp
mov
pusha
jecxz
adc
push
aaa
jge
cwde
inc
lds
je
test
fnstenv
cmp
adc
(bad)
cmc
sub
mov
mov
lods
sbb
mov
sub
enter
(bad)
fisttp
(bad)
es
fldenv
push
in
xchg
xchg
adc
push
cmps
scas
dec
(bad)
leave
je
inc
dec
js
dec
fldcw
nop
pop
arpl
cmc
call
sar
or
data16
adc
add
aad
scas
jo
mov
jle
xchg
xor
imul
and
psubw
mov
mov
or
pop
fwait
out
mov
mov
mov
or
xchg
cmc
mov
retf
jle
cmps
pop
das
push
ins
add
push
xchg
data16
jo
cdq
and
ja
xlat
scas
push
pop
stos
pop
jbe
lahf
int
fisttp
data16
push
aad
xchg
jbe
ret
mov
xchg
adc
jb
loop
out
jbe
shl
pop
inc
dec
pop
push
mov
xchg
loop
mov
call
dec
ins
dec
retf
leave
mov
call
shl
add
stos
stos
(bad)
and
jne
mov
or
cmp
inc
ret
dec
jle
ins
out
mov
std
(bad)
int3
pushf
in
push
loopne
ret
(bad)
mov
mov
outs
aad
js
fsubr
pusha
in
int
adc
clc
cwde
out
xchg
les
mov
gs
fs
adc
mov
rcl
xchg
inc
cli
std
fs
or
in
stos
cmp
xchg
ins
hlt
adc
push
inc
clc
dec
in
push
ss
nop
leave
loop
xchg
(bad)
mov
mov
inc
add
stos
lods
addr16
sar
call
jo
or
mov
add
adc
adc
lock
pop
(bad)
jne
pop
cmp
mov
and
stos
jg
in
les
mov
or
sub
scas
je
jmp
sbb
std
jge
ja
ror
daa
out
imul
push
mov
inc
pushf
lods
jo
scas
jnp
pop
push
adc
dec
dec
clc
sbb
test
sub
movs
adc
sub
xchg
es
jp
rcr
cmc
mov
push
inc
scas
push
or
loopne
lahf
daa
test
stos
and
in
call
out
and
dec
cmp
je
jle
int3
xchg
jnp
je
std
fisttp
mov
movs
ja
sub
lahf
cmc
mov
retf
and
repnz
scas
in
mov
test
fild
outs
outs
pop
outs
lea
adc
in
clc
pop
sbb
rol
sar
fmul
pop
pop
aam
ja
addr16
lds
adc
inc
adc
sub
cli
retf
(bad)
sub
in
cmp
inc
movs
imul
iret
je
int3
iret
lods
in
ins
push
xchg
imul
and
(bad)
dec
jle
mov
iret
xchg
xlat
adc
lods
push
lods
xor
test
test
in
inc
push
inc
outs
je
pop
mov
movs
mov
sti
into
pop
outs
lahf
mov
mov
test
pop
pop
test
hlt
xchg
xlat
out
daa
jmp
retf
jle
inc
ja
jb
push
push
push
dec
push
clc
adc
iret
pop
sar
cmp
xchg
push
inc
push
lods
sbb
sbb
sub
jmp
inc
dec
cmp
adc
gs
cmp
cs
mov
je
pushf
jmp
pop
xor
dec
jmp
xchg
(bad)
jmp
mov
dec
dec
mov
les
ja
pop
jge
icebp
xor
xchg
pop
mov
in
mov
add
mov
or
(bad)
cmp
cli
add
xchg
push
movs
out
and
mov
mov
outs
mov
push
xchg
cmp
add
fiadd
adc
arpl
fsub
adc
mov
xchg
xchg
jne
xlat
mov
movs
inc
adc
leave
xor
fistp
add
mov
push
push
mov
xor
push
mov
pushf
movs
or
lock
imul
dec
outs
pop
mov
das
outs
xchg
lahf
out
mov
out
test
enter
mov
jno
(bad)
xchg
icebp
popf
ror
mov
xchg
xchg
xor
fcmove
pop
aaa
cld
jb
push
ret
mov
je
out
dec
add
jge
sbb
cmp
neg
scas
sub
add
adc
sbb
xchg
loopne
jae
jmp
xchg
inc
int
out
dec
(bad)
inc
sbb
xor
in
mov
mov
das
sbb
aas
inc
mov
and
add
clc
dec
ret
jns
or
push
pop
inc
mov
int3
inc
popf
add
(bad)
hlt
cmp
lea
xchg
jg
cmps
sub
movs
hlt
test
and
or
shr
cmp
(bad)
mov
push
fs
sbb
ffreep
push
cmp
dec
daa
fsubp
or
cmp
cmps
imul
shl
loop
xlat
sub
aam
adc
les
xchg
lahf
rcr
iret
mov
ins
out
(bad)
xchg
neg
fsub
mov
test
push
jge
(bad)
(bad)
ins
mov
fwait
xor
jbe
push
(bad)
stc
pop
cmp
sbb
cld
out
les
js
pusha
adc
test
les
xlat
popa
inc
movs
push
in
jg
fwait
pop
sub
adc
repz
(bad)
inc
jbe
(bad)
lahf
lds
test
xchg
stos
sahf
mov
dec
js
inc
pop
push
cs
sbb
(bad)
div
in
(bad)
pop
xchg
std
push
out
jmp
pusha
cmc
xchg
sbb
dec
sub
neg
adc
sub
mov
sub
ret
push
aaa
xchg
jecxz
in
xor
packsswb
and
cmp
mov
jg
in
icebp
into
into
js
jmp
fcom
cli
sub
add
jmp
mov
sbb
popa
jg
mov
mov
scas
mov
push
(bad)
rcr
add
arpl
shl
(bad)
jle
push
sar
dec
aaa
int
iret
dec
fcom
out
pop
sbb
pop
jg
mov
test
aas
es
test
mov
pop
add
push
push
(bad)
pop
stos
adc
outs
xor
xchg
retf
push
add
out
rep
add
dec
push
aad
pushf
or
and
add
pop
(bad)
ins
lods
mov
jne
in
hlt
mov
lock
dec
mov
neg
xchg
inc
add
out
cmps
xor
pop
retf
rol
hlt
les
ficom
stc
cmp
inc
ss
jmp
cwde
jne
ret
mov
pop
lods
mov
jo
inc
fs
cli
adc
mov
sar
sbb
jmp
sbb
fs
mov
lahf
cld
xor
sbb
sbb
jno
mov
add
aaa
(bad)
pop
inc
aad
push
xchg
lds
lock
add
movs
or
sbb
cmc
or
inc
loope
cld
or
(bad)
int
dec
das
call
mul
(bad)
ret
lods
fcomp
pop
xchg
pop
cmp
ds
xchg
sbb
xchg
int
in
(bad)
sub
cs
cmp
cmp
jge
imul
xchg
cmp
xor
daa
in
loopne
push
mov
mov
pusha
leave
mov
inc
sub
cmps
ret
aaa
mov
arpl
mov
das
xchg
and
xchg
dec
inc
test
sbb
sub
dec
shl
inc
push
sbb
jge
cs
inc
push
rcr
mov
call
js
iret
ss
lds
sub
or
daa
out
xlat
jl
xchg
lods
in
cwde
push
xchg
popf
add
mov
shl
cmp
mov
jp
aaa
stos
enter
inc
jge
cdq
ja
xbegin
and
add
sbb
xor
aaa
lea
rcr
test
les
call
repnz
xchg
aam
xchg
or
mov
mov
jg
inc
or
test
in
jmp
(bad)
retf
cmps
rol
or
jp
sub
pop
pop
sbb
aad
(bad)
or
xchg
adc
mov
mov
sub
dec
add
inc
imul
and
sub
lods
mov
jnp
in
mov
mov
(bad)
push
out
adc
lea
add
sti
pop
je
test
std
cmps
lods
movs
pop
dec
mov
fild
mov
int
retf
addr16
pusha
inc
data16
pushf
adc
mov
sbb
aas
push
cmp
xor
mov
lods
or
jl
dec
mov
ret
aaa
shr
movs
push
lds
cli
jo
xor
jl
stos
pop
sbb
aas
(bad)
clc
dec
jns
jge
test
cmps
test
loope
(bad)
aam
ins
outs
aas
pop
jne
dec
jae
loopne
pushf
in
pushf
jno
dec
sbb
mov
or
movs
lfs
and
mov
push
push
sti
or
fsubr
rcr
dec
(bad)
mov
dec
es
push
neg
lock
retf
mov
cmc
into
mov
nop
in
and
jns
mov
cdq
arpl
ja
mov
stos
popf
ret
jecxz
mov
inc
pop
cmp
lock
cs
fsubr
int3
pop
mov
pop
sub
xchg
add
int
test
pop
imul
stos
sahf
neg
push
lods
mov
mov
xchg
scas
test
mov
enter
out
aaa
iret
adc
mov
(bad)
add
fstp
pop
dec
fwait
sti
in
rcl
imul
hlt
mov
push
movs
dec
std
lahf
inc
inc
pop
and
(bad)
fcmovnb
iret
jnp
fldcw
push
push
cld
xor
retf
aas
push
ss
rol
push
hlt
pusha
inc
mov
dec
mov
lods
adc
idiv
sub
in
and
ds
pop
jbe
mov
dec
dec
gs
scas
movs
packsswb
jge
xchg
cmp
pop
mov
xchg
jns
mov
add
pop
(bad)
jne
std
dec
sub
adc
dec
sub
sbb
in
out
retf
xchg
jle
inc
jmp
popf
imul
pop
(bad)
mov
dec
es
add
add
sahf
in
xchg
jg
cwde
adc
jmp
cld
or
sbb
sub
xchg
pop
mov
cdq
sbb
into
push
pop
stos
mov
(bad)
sbb
jecxz
test
ss
das
fdivr
mov
movs
and
lods
and
mov
push
lods
(bad)
mov
push
fwait
mov
or
int
mov
int
sub
and
push
mov
ja
fst
pop
sbb
xchg
lods
mov
push
in
add
jmp
mov
or
jns
rol
fldcw
popa
frstor
pop
icebp
jnp
mov
sbb
adc
mov
rol
(bad)
lock
je
mov
sbb
test
cmp
cmps
cmp
jmp
pushf
mul
loop
or
out
inc
pop
scas
pop
dec
(bad)
push
popf
lds
(bad)
push
add
or
mov
mov
outs
adc
xor
ds
xchg
pop
in
(bad)
(bad)
in
repz
popf
add
fisub
push
dec
mov
fistp
mov
dec
mov
jecxz
je
in
mov
out
dec
ins
push
cmp
je
mov
sti
(bad)
retf
daa
stos
das
inc
int
or
push
jno
and
mov
xchg
icebp
inc
imul
and
aam
js
and
cmps
mov
sbb
push
jb
ja
js
mov
leave
jmp
sbb
sahf
ds
dec
mov
aas
cmp
and
ss
bound
and
jno
loopne
ror
cdq
sub
mov
frstor
mov
or
dec
adc
scas
(bad)
jne
mov
pushf
outs
mov
int
rcl
call
dec
ds
dec
inc
dec
leave
das
xlat
movs
xchg
inc
jp
(bad)
mov
test
jl
test
fst
adc
(bad)
adc
and
ret
add
jmp
sub
mov
ins
mov
out
push
push
mov
pusha
aad
bound
retf
or
xor
mov
adc
in
sub
add
fs
push
pop
xor
fld
sub
pushf
fdivr
push
mov
add
aam
outs
imul
aas
ret
mov
into
mov
(bad)
mov
je
push
sub
pop
mov
fimul
mov
fwait
popf
repz
into
nop
out
bound
jp
(bad)
pop
jmp
cmp
scas
retf
lock
cs
fwait
adc
(bad)
test
in
inc
mul
mov
aaa
adc
mov
out
xchg
mov
jmp
popa
jle
(bad)
jecxz
in
jg
mov
movs
pop
aas
lahf
and
jae
call
mov
or
xor
xor
sbb
cmps
or
mov
lahf
fadd
and
daa
lds
inc
or
stos
cwde
pusha
idiv
test
icebp
sbb
adc
fsub
pop
lea
jmp
std
cmps
std
mov
or
nop
leave
loopne
cmp
aam
pop
inc
and
mov
cmp
sub
std
in
inc
pop
pop
sbb
sub
out
jge
adc
mov
jecxz
mov
stc
xor
pop
aaa
dec
sbb
pop
mov
mov
ins
js
jmp
ret
push
retf
(bad)
xlat
pop
ds
aam
adc
push
outs
adc
xchg
push
mov
pop
xlat
jns
push
cwde
inc
xchg
add
int3
repnz
(bad)
aam
or
sbb
sbb
sti
push
jge
dec
jno
call
push
lahf
sub
xlat
icebp
idiv
jbe
adc
and
push
test
jge
add
inc
dec
jle
fistp
out
or
push
aas
scas
pop
sbb
jl
pop
mov
arpl
je
(bad)
push
jne
mov
rol
fisubr
inc
push
cmp
emms
sbb
add
imul
sbb
or
lods
mov
mov
cmps
mov
pop
add
mov
xor
mov
mov
push
ins
xlat
cmps
mov
int3
cmp
pop
and
fdivr
mov
(bad)
add
nop
shl
ins
lahf
sti
aas
pop
adc
mov
jecxz
inc
xor
sbb
shr
add
pop
stos
test
iret
and
pop
inc
or
mov
fcomp
cmp
imul
stc
ror
in
or
push
and
sbb
dec
jg
pop
xchg
pop
and
(bad)
aam
cmc
les
lods
imul
loopne
mov
and
mov
push
xchg
ss
in
in
xchg
cmp
inc
push
jo
fstp
mov
push
(bad)
mov
cmps
data16
std
xchg
scas
xor
shl
inc
imul
adc
lds
stos
test
mov
sub
adc
add
outs
or
pop
xchg
jecxz
fimul
mov
add
sub
scas
mov
imul
popf
int3
stos
xchg
mov
daa
(bad)
movs
arpl
mov
call
inc
mov
test
leave
es
pop
ffree
push
add
adc
int3
dec
sub
repz
retf
xchg
leave
iret
xor
sub
(bad)
jmp
mov
inc
jbe
xchg
mov
push
mov
jbe
mov
adc
in
cdq
lods
fdivr
stos
lock
gs
push
push
dec
pop
pop
cmps
inc
fsub
hlt
pop
out
cmp
dec
or
idiv
(bad)
jp
ja
jbe
dec
and
imul
jne
movs
lahf
sub
cmps
add
sbb
stos
sahf
jno
lods
ins
ins
dec
test
das
xchg
sar
inc
into
sar
mov
movs
test
push
retf
jle
mov
shl
push
dec
not
call
test
cmp
clc
sub
ins
int
popa
cdq
push
sub
div
cmp
xor
pop
mov
and
lods
mov
push
pop
lsl
jg
in
pop
call
cmps
mov
and
(bad)
enter
add
or
mov
neg
jl
jp
mov
xchg
icebp
dec
icebp
gs
pop
xor
(bad)
mov
dec
inc
stos
adc
cmp
push
and
aam
out
pushf
pop
lods
push
and
sub
std
lahf
movs
sar
sub
shl
in
aad
les
pop
inc
mov
or
cmp
pusha
(bad)
jge
or
ins
push
in
and
idiv
mov
imul
adc
test
(bad)
mov
sub
jg
inc
add
lea
pop
jns
hlt
jg
fdiv
ja
jns
add
xor
iret
inc
loop
xchg
sub
sub
mov
mov
int
cmps
add
test
aad
mov
fsubrp
test
push
xchg
push
push
pop
into
loopne
ins
mov
imul
or
add
xchg
xchg
jmp
dec
xchg
cmps
push
movs
xor
sbb
das
arpl
mov
or
push
nop
ins
hlt
dec
shr
adc
pop
and
sbb
xchg
mov
mov
xor
test
sub
mov
cmp
data16
add
sub
mov
and
(bad)
cmp
out
push
out
sub
xor
pop
pop
mov
test
jl
jb
(bad)
xchg
jnp
xchg
gs
adc
cld
adc
std
call
stos
data16
fwait
aad
cli
test
cmp
data16
jns
and
push
(bad)
push
fdivr
xchg
push
nop
jge
sbb
xlat
mov
cmp
inc
and
cmp
jne
test
mov
cwde
add
mov
ret
dec
inc
dec
inc
aas
xchg
ror
push
mov
fsubr
fnstcw
mov
dec
les
pop
cmps
push
cmp
or
adc
pop
jecxz
push
add
cmps
movs
ja
xor
out
inc
in
add
int3
dec
cmc
outs
loop
aaa
pusha
dec
mov
mov
jae
mov
std
repz
ins
neg
pop
sub
shl
dec
ja
shrd
loope
ror
cmp
and
inc
(bad)
mov
es
addr16
pop
into
inc
outs
sbb
push
adc
mov
je
xchg
cmp
pop
(bad)
sub
add
jge
cmps
inc
leave
fiadd
dec
addr16
and
jbe
sbb
sbb
inc
loopne
lods
sub
or
fwait
xor
pop
or
sbb
stc
ficomp
shl
(bad)
fstp
call
push
test
fiadd
call
out
mov
(bad)
in
xor
lds
stc
inc
sub
adc
pop
mov
int3
mov
ror
fcom
scas
and
xchg
jp
ss
scas
mov
mov
mov
aas
or
xor
in
(bad)
add
mov
dec
mov
jne
cmp
movhlps
mov
mov
pushf
mov
mov
loop
xlat
(bad)
movs
jmp
pop
shl
leave
inc
sub
cmp
cmp
test
fincstp
sbb
and
ja
les
add
pop
movs
add
and
pusha
test
cs
mov
test
mov
or
xchg
cmps
xchg
sbb
scas
shl
xchg
shl
sbb
scas
pop
aaa
out
jmp
jne
(bad)
dec
js
push
jno
xchg
push
test
std
imul
into
test
(bad)
dec
inc
movs
inc
ss
pop
sbb
or
lods
add
jge
stc
int3
mov
cmp
ja
pop
xchg
sahf
xchg
dec
and
(bad)
xchg
stc
mov
scas
fild
jecxz
mov
and
fs
stc
pop
js
aas
jmp
add
add
std
dec
int
sbb
outs
std
aam
imul
lds
aas
js
cmp
movs
jno
jle
pop
out
pop
in
push
add
out
shr
mov
jmp
lock
mov
pop
int
fnsave
or
sub
daa
inc
xor
push
xor
jno
push
shr
xor
inc
(bad)
mov
push
ins
adc
inc
add
popf
fiadd
pop
mov
icebp
pop
in
add
cmps
jg
aaa
jae
loope
ds
icebp
(bad)
jle
scas
push
arpl
sbb
mov
pop
inc
loope
js
jae
mov
fadd
in
xlat
mov
pushf
inc
pop
lahf
lods
sahf
mov
jne
loop
jns
lahf
xlat
jae
pop
mov
sub
jl
(bad)
xchg
pop
mov
mov
mov
outs
xor
lock
outs
adc
out
mov
sbb
adc
mov
adc
jg
lods
add
pop
mov
pop
int3
or
mov
mov
lds
jne
xchg
out
push
jno
ins
push
hlt
(bad)
or
stc
stos
movs
(bad)
and
out
push
mov
sbb
fbstp
pop
aaa
and
std
pop
xor
leave
jg
mov
jmp
cmps
mov
jne
jb
mov
pop
out
dec
jge
test
mov
cdq
pushf
jmp
xor
cmp
jo
xor
jle
and
adc
sbb
jbe
fimul
xor
out
xchg
mov
mov
inc
xchg
pop
adc
retf
push
mov
mov
jbe
add
ds
mov
ret
pop
or
xchg
or
cmp
mov
ins
cmp
mov
frstor
push
test
call
arpl
pop
(bad)
jl
push
sbb
mov
xor
dec
call
push
retf
ins
push
mov
scas
in
daa
in
movaps
add
std
xor
or
or
sbb
outs
cmp
push
pop
pop
loope
nop
in
out
cmps
dec
(bad)
in
sbb
rcr
mov
and
xchg
mov
push
mov
jae
sub
xchg
clc
ja
ins
lds
jae
aas
push
ds
add
bound
lea
cwde
mov
cld
dec
xor
es
xlat
mov
add
mov
repnz
dec
ja
add
stos
xchg
(bad)
adc
push
movs
icebp
stc
test
std
xor
icebp
cmps
in
icebp
inc
jmp
push
pushw
pop
cwde
daa
add
cmp
push
adc
lods
fstp
or
or
ret
int
mov
out
cmp
pop
je
push
or
retf
and
inc
inc
test
aam
cmc
std
mov
or
inc
adc
jp
mov
sti
in
(bad)
idiv
in
inc
jnp
cmp
or
jl
mov
pop
cmp
popa
inc
ret
xlat
retf
xchg
bound
pop
out
sti
cmp
pushf
es
cld
adc
(bad)
daa
pusha
cmps
xchg
xor
movs
sbb
stc
dec
dec
jns
jmp
and
push
stos
test
mov
mov
int3
gs
jmp
dec
test
dec
popf
or
jns
add
push
jnp
mov
sbb
mov
outs
mov
xor
jbe
xlat
push
ror
push
push
jge
jle
dec
(bad)
nop
outs
jae
or
adc
cmps
cld
fwait
cs
or
push
pop
xor
stos
ror
push
int
mov
push
aaa
cmp
xlat
fsubr
fs
push
dec
test
cmps
movs
out
adc
jge
repz
and
mov
ss
add
adc
sbb
cmp
int
inc
gs
jge
dec
jp
jg
jne
push
xchg
jmp
mov
mov
push
xor
push
inc
mov
pop
cmp
mov
xlat
fcom
cmc
pop
mov
cmps
push
sub
(bad)
out
popw
cld
add
(bad)
push
jo
push
push
push
popf
push
call
sub
ret
jbe
inc
xor
cmp
(bad)
bound
cmc
out
cmps
or
or
xchg
cmp
sbb
sub
dec
enter
sbb
enter
and
outs
sbb
fs
daa
dec
dec
hlt
(bad)
ret
mov
jmp
in
cmp
and
not
push
mov
mov
add
inc
(bad)
out
out
cld
inc
inc
mov
pop
mov
stos
mov
jae
(bad)
popa
xor
int
adc
faddp
(bad)
das
out
out
mov
daa
xor
adc
mov
jmp
xchg
xchg
and
mov
mov
mov
stos
sub
xor
imul
sub
out
mov
icebp
das
pop
sete
jae
and
mov
in
xchg
not
xchg
xor
sub
pop
ins
xchg
dec
and
out
cmps
dec
jmp
sub
add
sub
push
jne
add
lahf
es
jle
inc
push
jns
mov
repnz
inc
and
mov
scas
jbe
sbb
push
aam
sub
mov
mov
(bad)
in
imul
mov
data16
mov
ror
cmp
or
in
sbb
or
leave
hlt
por
repnz
pop
(bad)
std
pushf
lock
ja
out
in
stos
pushf
mov
clc
jmp
cmps
test
jo
das
mov
popf
fcomp
out
add
push
xchg
pop
test
cdq
in
jecxz
push
and
leave
in
cmp
xchg
sahf
and
ficomp
retf
jp
mov
cmp
mov
jle
xchg
movs
jmp
mov
lods
nop
sbb
outs
cmp
or
xor
jmp
aas
fld
int
mov
adc
sub
sub
jns
bnd
loope
(bad)
pushf
xchg
(bad)
jb
cmc
pop
in
pop
(bad)
cmps
fld
push
ins
rcl
(bad)
cmp
jns
cld
ins
push
pop
sbb
mov
test
int
int3
sbb
psrlq
sbb
jecxz
into
xchg
sbb
pop
lods
call
fst
or
mov
cmp
dec
lea
push
call
pop
lock
ds
pop
jle
inc
lea
in
ins
pop
test
mov
fisub
(bad)
fnstsw
pop
imul
cmps
sub
sub
sbb
bnd
push
pavgb
in
loop
out
push
cmp
push
fwait
div
stos
jl
push
sbb
dec
ss
and
xlat
not
mov
in
imul
sub
pop
xchg
sub
adc
mov
mov
iret
jns
mov
icebp
pushf
call
mov
fmul
fld
aad
mov
push
ror
(bad)
inc
pop
mov
push
mov
cs
xchg
jmp
jmp
sub
add
ins
mov
aad
inc
popf
cmps
sub
jg
cmp
sub
mov
mov
cmp
cmps
jo
aam
imul
and
jno
es
lods
sub
stos
in
daa
lods
test
fistp
xchg
xchg
aaa
js
rol
test
or
and
cld
dec
mov
mov
les
mov
add
xchg
inc
push
adc
inc
inc
mov
mov
sub
jl
inc
std
(bad)
adc
adc
fsub
pop
out
adc
push
sub
push
mov
popf
stc
cdq
sub
out
push
shr
mov
jo
(bad)
and
xchg
data16
popf
mov
jmp
cli
mov
add
or
sbb
fwait
push
dec
pop
and
dec
pop
(bad)
cwde
aaa
push
mov
inc
in
shl
jge
outs
add
jl
cmp
out
in
cdq
and
and
cmps
jmp
js
out
or
pop
daa
ja
push
sub
(bad)
out
out
xchg
(bad)
in
sub
add
xlat
adc
ja
add
ficom
and
lds
mov
sbb
fstp
mov
fwait
add
inc
test
data16
jae
mov
jo
mov
sub
cmp
outs
sbb
(bad)
mov
adc
and
or
mov
inc
pop
lock
jae
daa
adc
or
xor
outs
stc
(bad)
add
push
xor
jecxz
test
(bad)
jae
pop
pop
imul
xchg
popf
out
add
sub
inc
sbb
inc
cmps
pop
pushf
xor
xor
lea
and
or
cld
inc
movsx
pop
xor
ret
adc
mov
and
test
and
add
outs
cmp
xor
push
or
push
neg
pop
pop
jae
aas
mov
jmp
add
hlt
or
jl
sbb
rcr
outs
jecxz
cs
pop
cmp
push
int3
sbb
sbb
jae
(bad)
rcr
(bad)
clc
imul
inc
or
mov
xor
jle
jnp
mov
xchg
jp
fdivp
outs
pop
jbe
mov
lods
movs
xor
call
jle
(bad)
pop
xchg
xor
(bad)
xlat
idiv
jb
mov
retf
xchg
sub
fldenv
jmp
rol
xchg
jo
add
push
aad
sub
movs
clc
stos
pop
out
pop
popa
push
(bad)
mov
rol
movs
idiv
inc
xor
lahf
sbb
or
pop
fisttp
das
mov
add
sub
sti
lock
scas
sbb
xchg
push
jmp
push
(bad)
jle
(bad)
(bad)
aam
mov
sub
jge
dec
cmp
out
pop
loop
push
sbb
movs
push
xchg
pusha
or
jge
xchg
pop
call
test
mov
outs
enter
fs
dec
ins
sbb
pushf
add
jb
ja
retf
das
stos
xchg
scas
mov
(bad)
inc
(bad)
lahf
add
pop
lock
dec
adc
ret
jp
loopne
(bad)
jge
cmc
jge
in
retf
into
dec
mov
call
pop
leave
push
xor
inc
jmp
xchg
repz
les
inc
in
and
mov
pop
loope
bound
icebp
cwde
xlat
ret
retf
mov
mov
or
or
enter
sbb
les
imul
and
jecxz
fld
cdq
adc
icebp
repnz
sub
ret
mov
cmp
in
mov
aad
fwait
inc
inc
jp
jmp
xor
pop
xor
lds
lods
add
das
mov
mov
dec
iret
xchg
jbe
dec
aaa
add
xchg
sti
push
das
lock
sbb
jbe
inc
imul
ss
icebp
xchg
ficom
std
retf
jbe
cmps
stos
xchg
loope
xchg
sbb
sbb
icebp
fwait
out
sbb
std
dec
cld
repnz
ins
cmp
in
jg
sti
or
in
sub
(bad)
push
movs
movs
int
mov
sub
ins
je
inc
lods
(bad)
xchg
je
xchg
mov
mov
jnp
neg
iret
and
adc
push
mov
rol
cwde
aam
push
mov
pop
das
sbb
ins
hlt
in
call
out
retf
int3
scas
jae
jmp
inc
cmps
leave
popa
cmp
add
mov
push
push
inc
sbb
pop
push
aam
mov
out
sub
idiv
or
mov
ds
pop
scas
jg
cs
mov
cmps
pop
cmps
int
pop
aas
std
cmps
jo
inc
(bad)
jl
xchg
scas
cmp
sbb
clc
mov
pop
jns
ret
jmp
or
sbb
movs
mov
inc
ret
es
dec
leave
ror
push
jmp
fiadd
dec
mul
lods
int
(bad)
mov
xchg
popf
jns
dec
sbb
mov
inc
sti
das
xor
push
pop
ja
sub
pusha
in
jne
cdq
cwde
mov
pop
sbb
dec
sub
out
cld
not
xchg
adc
popa
(bad)
or
inc
mov
stos
inc
test
aad
xor
jbe
inc
mov
pop
pop
push
ror
lods
popa
push
mov
and
mov
xchg
test
test
mov
mov
sahf
imul
cmp
int
adc
jnp
and
cwde
lea
inc
add
daa
fucomp
clc
test
call
or
xchg
pop
in
xor
and
pop
in
(bad)
popf
bnd
fbstp
jae
or
ficomp
enter
aas
mov
cmp
push
arpl
fist
(bad)
dec
sub
imul
and
ds
sbb
jmp
inc
gs
xchg
fnsave
mov
rep
push
fsub
push
pop
sub
inc
jg
inc
push
mov
int
into
xor
jmp
daa
pop
jl
aaa
(bad)
fld
(bad)
pushf
mov
jnp
in
fisttp
cmp
or
fisttp
ins
jo
pop
aas
jno
inc
dec
aad
ret
outs
cmp
popf
adc
cs
inc
imul
xchg
cmp
dec
pop
jecxz
push
and
hlt
inc
cmp
cmp
mov
xchg
fs
sub
pop
mov
frstpm(287
jmp
std
das
daa
sub
mov
bnd
ja
jae
test
in
cdq
sbb
fistp
lods
data16
mov
daa
shr
dec
loop
push
pop
and
daa
push
les
call
lock
dec
add
std
popa
sbb
mov
mov
push
and
ins
mov
test
je
cmp
mov
(bad)
sbb
pop
xchg
inc
aaa
pop
cmp
cli
mov
mov
add
mov
mov
inc
outs
daa
lea
mov
or
aas
or
stc
das
cmp
xchg
dec
ins
mov
inc
xchg
mov
pop
mov
xor
in
aaa
lds
loope
scas
out
xor
pop
cmps
sar
pop
cmc
inc
repz
mov
sbb
das
frstor
xchg
mov
sbb
(bad)
aas
inc
std
inc
or
aas
out
jle
inc
pop
sbb
jns
gs
add
test
and
ja
xchg
sbb
lods
cli
add
test
mov
mov
fisttp
and
fild
xor
lods
push
(bad)
enter
and
pmaxub
mov
sbb
cmp
std
fnsave
outs
mov
pushf
in
mov
int3
push
daa
or
and
mov
and
rcr
or
out
jmp
sahf
inc
sbb
jae
push
cmps
adc
sub
les
and
repnz
push
popf
or
dec
(bad)
cmp
hlt
in
icebp
in
xchg
ror
mov
mov
cmp
(bad)
push
push
add
popf
jg
aas
mov
out
push
fs
fiadd
pop
(bad)
mov
or
ds
pop
push
outs
sbb
outs
data16
(bad)
or
sbb
cmp
js
xchg
xchg
test
fist
addr16
pushf
das
call
stos
ds
imul
js
jne
(bad)
sub
cmc
push
dec
xchg
cmc
shl
movs
adc
cli
jmp
lds
or
(bad)
mov
inc
outs
dec
cmp
daa
int
push
xor
in
in
js
pop
and
stos
out
movs
(bad)
stos
test
fwait
rol
pop
or
and
or
movaps
dec
outs
add
xor
pop
add
jge
xchg
cmc
adc
mov
add
out
arpl
cli
jge
ja
iret
in
sub
ins
test
mov
adc
sbb
loopne
xor
movs
ja
add
aaa
shl
test
push
or
loope
xchg
in
push
in
aaa
repz
cdq
push
out
aas
out
inc
js
jge
sbb
je
xchg
pop
movs
int
inc
push
test
cmp
fst
ret
cmps
pusha
call
cli
ror
and
cmp
mov
in
ret
mov
nop
std
repnz
mov
mov
js
imul
or
and
(bad)
or
rcl
xor
jg
cmps
ins
jo
push
cs
iret
sub
addr16
add
mov
cmp
sahf
sub
mov
inc
fnstenv
arpl
div
in
div
outs
aaa
xchg
lahf
push
(bad)
sbb
not
cmc
xchg
stos
or
dec
pushf
add
fadd
inc
xchg
pop
std
xor
cmp
mov
mov
xor
push
daa
dec
xor
mov
call
std
adc
cmp
(bad)
sbb
lods
cmp
mov
jmp
leave
adc
and
xor
pop
jmp
push
push
in
xlat
(bad)
scas
dec
sub
xchg
pop
ret
mov
es
sbb
mov
outs
xchg
mov
add
nop
jl
mov
into
sbb
loopne
adc
sub
imul
les
ja
das
cdq
push
leave
cmp
xchg
inc
gs
dec
cmp
shl
popa
test
xchg
jp
cmp
mov
sub
dec
jbe
add
cmp
jle
(bad)
cld
ins
(bad)
icebp
repz
pop
ss
push
scas
sub
sbb
cmp
mov
mov
mov
nop
fdivr
fiadd
push
imul
adc
loop
push
movs
xor
push
xor
loope
inc
pop
xchg
mov
mov
cmps
les
lods
cmp
(bad)
cmp
(bad)
(bad)
lahf
daa
popf
lods
adc
cmps
sub
ins
sub
jge
push
adc
dec
xchg
jmp
lock
in
movs
mov
out
gs
dec
ins
xor
push
aas
inc
pop
hlt
adc
lahf
leave
or
je
xchg
inc
xchg
jge
xor
adc
sbb
cld
or
and
mov
clc
out
test
mov
pop
cs
or
mov
test
xor
fist
sbb
arpl
mov
and
imul
xchg
std
xchg
mov
mov
xlat
add
sbb
jbe
fwait
imul
adc
add
retf
fxch
js
mov
jl
or
dec
or
adc
lds
cli
mov
pop
daa
lds
rcl
test
mov
repz
std
lods
pop
cmp
adc
jae
xor
jno
xchg
in
and
icebp
imul
mov
fild
gs
push
mov
inc
lahf
jo
mov
aaa
shl
mov
lahf
sbb
mov
jo
jns
retf
dec
xchg
into
jp
xchg
pop
mov
fadd
loopne
in
mov
mov
adc
xchg
outs
pop
push
movs
test
mov
xrelease
addr16
(bad)
out
sbb
mov
pop
push
cmps
adc
jmp
sbb
lock
cmps
xor
push
cmp
mov
mov
nop
clc
push
mov
adc
sbb
and
xor
pop
or
sbb
jns
jnp
popf
int3
adc
mov
sbb
dec
shr
xlat
cmp
in
scas
aas
dec
cmp
cmps
jp
cdq
in
xchg
jo
pop
mov
ins
xchg
ds
lahf
ja
push
jno
fwait
enter
jecxz
(bad)
xchg
sub
and
mov
mov
frstor
inc
and
test
inc
into
add
xor
in
xchg
add
pop
push
into
add
adc
sub
jbe
jp
fmul
xchg
mov
inc
mov
mov
fwait
lahf
inc
push
sub
pop
fild
sbb
add
ins
xor
push
pop
call
out
mov
xchg
xchg
in
stc
pop
(bad)
pushf
fld
dec
data16
ins
(bad)
imul
std
push
mov
imul
xor
sub
cwde
es
lods
aad
mov
stos
cmps
sbb
pop
sub
or
dec
ins
ja
sar
jge
cmp
pop
push
mov
leave
mov
add
or
ss
push
sbb
in
das
movs
iret
jnp
sbb
sub
push
mov
fnstsw
sti
(bad)
xchg
or
das
pop
(bad)
ret
dec
pop
xchg
ror
in
loopne
jg
mov
push
push
jmp
sub
std
mov
mov
jne
pusha
jg
ds
dec
push
outs
pop
inc
gs
and
mov
test
mov
lods
mov
push
jo
in
xchg
jo
fld
sub
pop
sub
cmp
lods
repz
jg
inc
and
ror
in
ror
stc
cwde
add
in
or
iret
xchg
pop
sub
je
sbb
mov
and
fadd
in
and
xchg
in
push
xchg
daa
out
push
push
inc
pop
(bad)
jnp
rcl
xchg
xchg
sub
ror
pop
lea
arpl
in
pop
sar
dec
and
dec
mov
fist
aad
inc
mov
jmp
push
cmp
push
xchg
dec
daa
xlat
sbb
aaa
cmp
and
mov
or
int
dec
pop
pop
jp
sub
dec
std
gs
rcl
lods
shl
rol
aad
mov
and
jae
xlat
in
dec
sub
add
xlat
leave
stc
cmp
or
(bad)
and
sub
daa
sbb
out
imul
call
fnsave
sub
jg
jp
push
nop
mov
mov
out
sub
xor
inc
int
test
(bad)
movs
inc
pop
data16
cwde
add
mov
mov
push
lods
or
mov
push
fst
sub
lods
sbb
mov
push
ins
and
pop
ins
pop
out
int
push
ins
not
imul
and
(bad)
scas
fiadd
pop
and
aad
cmps
data16
mov
repz
cmps
mov
jae
inc
jbe
mov
ins
ja
xchg
mov
push
xchg
mov
fdivr
jb
(bad)
mov
inc
cld
pop
mov
mov
mov
xchg
mov
pop
cmp
mov
xchg
lahf
popf
idiv
sub
sbb
inc
iret
cli
retf
test
jnp
enter
test
pop
inc
inc
xlat
ret
ja
jnp
(bad)
mov
sbb
xchg
fld
pop
mov
dec
test
inc
jnp
int
xor
movs
hlt
std
(bad)
cmc
leave
sbb
and
dec
pop
cli
cwde
out
and
into
das
mov
enter
xchg
std
xor
cmp
outs
or
push
add
or
sub
pop
jb
repz
jnp
jl
push
in
popf
fnstsw
cmp
outs
ds
mov
mov
aam
retf
int3
xchg
rcl
mov
sub
aaa
sub
or
cmps
mov
leave
enter
scas
ret
cmp
int
mov
cmps
mov
repnz
or
rcl
cld
mov
cmp
mov
jb
add
not
jae
push
test
icebp
(bad)
in
stos
mov
mov
mov
mul
(bad)
(bad)
jnp
lea
mov
push
xor
dec
xor
mov
and
rcr
add
lahf
inc
dec
cmc
sbb
xor
rcr
test
out
lock
fs
cs
int
adc
jp
in
movs
add
and
sub
data16
cmps
pop
fisubr
in
pushf
push
lods
es
xchg
movs
lock
cmps
cmc
fild
pop
sbb
call
jg
xchg
mov
mov
mov
mov
adc
jo
in
mov
xchg
pushf
sar
retf
fstp
ret
push
push
fistp
mov
inc
ss
aaa
jg
mov
mov
cmps
aad
test
movs
std
ins
pushf
fsub
dec
xchg
test
jp
cmps
inc
cmp
dec
aaa
inc
aad
jae
cld
push
out
(bad)
fldenv
mov
push
pushaw
aad
sub
hlt
cmps
test
mov
iret
mov
cmp
cmp
cmp
lods
jmp
lods
push
out
pop
mov
jno
cmp
push
in
jns
pop
add
cmp
sbb
fcomip
dec
arpl
sti
or
addr16
stos
call
dec
and
cld
es
jmp
psllw
sub
hlt
pop
xlat
mov
pop
xchg
dec
outs
dec
cmp
addr16
mov
in
add
retf
pop
pop
adc
dec
in
jbe
xchg
jne
or
aad
popa
push
xlat
lea
inc
aam
(bad)
jp
stos
out
xchg
mov
fstp
inc
shr
out
push
dec
push
cmp
cs
ja
add
pop
xchg
jnp
sub
jmp
rcl
jp
sbb
inc
inc
bound
fld
or
dec
dec
mov
adc
inc
xor
call
gs
lahf
daa
jp
xchg
gs
jne
mov
lds
xchg
inc
mov
adc
popf
inc
int
(bad)
or
pushf
bound
dec
jl
mov
push
loope
ins
scas
test
xchg
mov
je
dec
lods
or
sar
dec
mov
nop
std
js
xchg
sbb
scas
clc
sub
aam
sbb
jae
mov
nop
or
push
push
sbb
xor
push
js
xor
mov
pop
sub
inc
or
inc
ins
dec
popf
sub
jne
out
in
fwait
shl
sbb
jae
fimul
and
invd
pop
sbb
sbb
stc
shl
cld
sub
iret
xchg
and
add
xchg
jbe
dec
jg
mov
mov
xchg
inc
test
jmp
dec
xor
int
and
pop
or
lods
clc
mov
sub
jb
push
es
out
mov
neg
in
xor
mov
push
cmp
jnp
das
icebp
mov
(bad)
mov
shr
mov
cmp
mov
mov
xlat
xor
jl
jmp
mov
xchg
fmul
push
movs
mov
daa
jle
mov
cli
pushf
retf
test
jnp
push
cs
test
pop
mov
test
daa
cmp
aas
cmp
jno
test
sbb
sbb
test
fwait
jns
hlt
lahf
loop
xchg
into
movs
pop
jns
mov
add
pop
jge
mov
fist
(bad)
adc
nop
xchg
test
push
sahf
dec
les
sti
stc
mov
and
fldcw
jno
mov
(bad)
aam
mov
or
lock
and
or
les
xchg
sbb
sub
mov
ins
mov
xchg
pop
gs
add
and
cmp
pminsw
push
shl
fimul
fisub
cmp
(bad)
dec
mov
out
jmp
and
mov
bound
push
mov
inc
std
and
pop
jl
leave
sub
mov
loopne
das
ss
test
arpl
gs
fcomp
retf
ret
jmp
xchg
in
fsub
add
adc
lods
out
arpl
int
push
mov
jge
sbb
pop
dec
out
cmps
enter
and
xchg
in
pop
imul
cmp
mov
xchg
cmps
scas
mov
inc
(bad)
rol
xchg
lods
or
jo
gs
pop
gs
cdq
nop
sbb
jge
pop
shr
dec
scas
stos
jecxz
adc
push
int
cmp
dec
cdq
dec
push
into
pop
sbb
pop
mov
adc
pop
and
pop
enter
test
sbb
cmp
into
lahf
mov
cli
add
add
aas
mov
xchg
(bad)
stos
out
rcl
inc
iret
rcr
push
and
cld
cmp
cmps
jg
mov
in
es
push
pusha
in
pop
or
ret
add
hlt
push
dec
jae
xchg
mov
ss
rcr
jns
sub
(bad)
sbb
mov
fs
inc
gs
hlt
es
rcr
add
sub
and
and
and
push
iret
or
mov
inc
mov
xchg
cli
jecxz
pushw
sub
mov
repz
hlt
jle
mov
dec
rcl
test
test
push
outs
xlat
int
int3
jp
mov
push
sar
pop
ret
mov
xchg
aam
mov
fadd
leave
adc
das
jge
in
jnp
cmp
jmp
call
sbb
(bad)
jo
jp
retf
enter
fwait
rcl
mov
call
jecxz
test
or
dec
fnstcw
fisttp
sbb
xchg
and
fbstp
lods
repnz
outs
xor
dec
test
sbb
jno
sbb
bound
and
jmp
or
fld
lods
and
xchg
sbb
test
(bad)
or
imul
pop
icebp
in
xchg
mov
fadd
xchg
ss
mov
inc
add
test
push
push
test
pushf
mov
dec
popf
and
movs
in
xchg
jmp
mov
jns
mov
mov
and
fimul
test
imul
hlt
stos
adc
or
imul
cmp
or
push
outs
jbe
lock
shl
aad
call
aad
push
dec
xchg
push
and
fbld
sbb
sbb
fisttp
iret
hlt
add
xchg
leave
push
and
dec
dec
push
inc
ret
leave
sub
mov
jne
in
xchg
iret
xchg
mov
pop
pop
mov
push
out
loope
sbb
push
sbb
xchg
cmps
test
ror
scas
stos
xchg
ret
push
imul
mov
pop
and
out
push
in
mov
(bad)
test
jnp
jmp
adc
push
or
dec
add
dec
test
movs
add
mov
fsubr
adc
mov
mov
dec
ret
sub
xor
mov
popf
(bad)
sbb
fnstsw
(bad)
cmp
popf
inc
fcom
lds
inc
stc
mov
adc
je
mov
xor
popf
add
daa
std
xchg
imul
push
jge
leave
push
in
sub
cmp
and
and
scas
dec
movs
(bad)
inc
fdiv
mov
xlat
(bad)
dec
adc
add
icebp
and
and
push
xchg
sbb
outs
xchg
out
xchg
test
fcomp
fst
aas
dec
jno
xor
daa
bound
add
cmc
retf
in
push
xchg
mov
sbb
cmp
fld
addr16
(bad)
mov
das
fsubrp
popf
sub
fistp
fst
pop
sub
cs
cmp
and
into
sub
push
std
and
pop
jne
pop
sbb
lods
or
cmp
mov
and
js
in
sbb
jbe
mov
cmps
mov
(bad)
outs
fcmovnbe
adc
mov
and
clc
enter
push
fild
fucomp
xchg
dec
pop
sahf
add
aad
add
inc
and
movs
cmp
jbe
sar
icebp
push
icebp
lods
mov
add
aaa
pop
sub
push
xchg
sub
and
aaa
sbb
aaa
xchg
fstp
sbb
sub
fdiv
pusha
pusha
pop
iret
mov
cld
xchg
dec
mov
xor
inc
cli
test
imul
pop
mov
xchg
or
add
or
cmp
pop
fadd
push
cmps
fistp
xor
dec
fistp
jo
in
mov
sahf
je
fisttp
mov
add
das
inc
cdq
(bad)
jmp
pop
sbb
mov
mov
fdiv
add
or
add
and
dec
xor
in
sar
jg
test
pop
adc
ja
sub
jno
mov
inc
in
jae
pop
iret
daa
and
pop
pop
dec
je
lds
popa
cmp
and
(bad)
sub
cmp
add
cwde
scas
inc
push
sub
sub
cwde
sar
mov
stos
or
jle
sub
add
std
jg
jne
dec
jmp
loopne
cmps
mov
sub
pop
adc
mov
pop
and
jg
mov
jl
outs
les
pop
mov
xchg
cmps
xor
inc
movs
push
and
mov
scas
xchg
scas
aam
mov
xchg
lds
push
mov
stc
mov
push
mov
pop
(bad)
inc
fsub
repz
mov
inc
lods
inc
xchg
addr16
push
mov
xor
sbb
ins
pushf
test
stc
mov
pop
push
retf
pop
or
xchg
pushf
cmp
test
into
mov
or
and
xchg
(bad)
iret
or
pop
jmp
repnz
daa
fwait
cdq
or
jno
push
cdq
xchg
mov
or
fcom
jle
(bad)
mov
movs
adc
sbb
out
addr16
sub
retf
addr16
cmp
int
and
pusha
das
icebp
ror
(bad)
into
iret
cld
loope
mov
out
cmp
push
sub
das
outs
cmp
out
ror
jbe
hlt
xor
sbb
int3
mov
nop
fiadd
iret
sbb
or
xlat
or
jg
jg
mov
sbb
ret
test
leave
fwait
adc
outs
out
(bad)
int
fdivr
mov
inc
iret
aas
out
jo
or
(bad)
dec
xchg
mov
test
add
daa
xor
push
ins
cmc
push
xlat
es
outs
fmulp
je
adc
sub
inc
hlt
jb
sub
test
xchg
retf
fidivr
mov
or
ss
xor
int
dec
lds
mov
mov
data16
push
sub
movs
pop
neg
dec
aaa
hlt
mov
mov
stc
pop
mov
fdivr
dec
dec
in
dec
sub
je
jnp
xchg
and
push
xor
bound
into
mov
jmp
sub
inc
(bad)
pop
imul
pop
repz
and
jae
xchg
scas
int
into
mov
mov
cmps
mov
add
sbb
(bad)
dec
(bad)
push
sbb
mov
mov
jmp
(bad)
jg
daa
xlat
aas
push
xchg
dec
pop
jb
(bad)
push
retf
xor
aaa
mov
xor
cmp
rcl
push
and
movs
push
jecxz
test
data16
(bad)
(bad)
jg
in
setno
call
cmp
scas
mov
lea
xchg
fcom
cmp
fucom
outs
movs
jge
popf
or
push
sub
(bad)
aad
call
dec
sub
out
mov
clc
out
lods
ins
das
adc
cli
mov
shl
or
xlat
adc
jmp
mov
push
(bad)
xchg
sub
jo
sti
test
xchg
sbb
mov
lea
iret
push
adc
sbb
imul
mov
mov
cmc
fcom
sbb
maxps
shl
out
dec
mov
(bad)
xchg
lea
iret
xchg
ret
ror
scas
jnp
pop
push
imul
test
sub
pop
retf
lods
(bad)
and
outs
xchg
xor
mov
inc
and
cwde
retf
and
aaa
xchg
dec
aad
fcomip
test
cmc
xlat
cmps
repnz
sbb
jmp
cmp
push
iret
add
xchg
test
dec
jl
adc
inc
xchg
jae
jmp
icebp
ror
push
icebp
and
and
xstore-rng
cmps
ret
inc
test
stos
cmps
imul
iret
outs
push
lods
ficom
mov
sbb
xchg
(bad)
cmp
sbb
jne
jp
sub
int
hlt
jnp
jmp
inc
hlt
dec
ret
add
add
in
mov
jo
sub
push
daa
lods
xlat
imul
or
imul
in
popf
inc
ins
xchg
mov
scas
sahf
(bad)
sbb
sub
pop
adc
iret
addr16
daa
addr16
(bad)
jne
sub
inc
mov
sahf
(bad)
pop
dec
sbb
mov
cmps
ss
inc
lea
mov
add
(bad)
and
xchg
mul
int
pop
add
daa
add
xchg
xchg
cmps
mov
or
adc
jmp
sbb
and
sub
ss
cmc
add
scas
mov
sbb
mov
jnp
inc
cmp
cmp
cmp
sub
adc
and
jmp
xchg
jae
mov
sbb
and
ds
int
inc
jge
inc
add
fistp
and
outs
dec
or
out
xchg
lods
jno
jbe
test
sbb
or
out
xchg
(bad)
mov
aaa
push
xchg
xchg
mov
push
inc
jae
mov
or
adc
mov
icebp
stc
les
push
pop
movs
dec
inc
inc
das
cmc
jge
pop
cmp
adc
out
aaa
stos
push
int3
call
test
adc
out
shl
iret
in
fistp
bound
sar
fistp
sbb
ss
jg
dec
leave
dec
cmps
fbld
hlt
out
dec
adc
adc
xor
int
mov
xchg
fnsave
jns
int3
(bad)
jno
aaa
call
cli
test
dec
(bad)
xor
mov
jl
mov
fld
mov
mul
lahf
adc
and
xor
rdpmc
call
je
idiv
xor
sbb
sbb
lods
push
sti
mov
in
movs
inc
ret
mov
mov
mov
push
or
or
inc
push
(bad)
inc
stc
pop
pop
cs
add
xchg
fs
inc
popf
sub
(bad)
jg
loop
push
adc
shr
pop
into
fisubr
sbb
in
aaa
stos
in
xchg
jg
or
pop
add
push
addr16
jae
mov
lods
std
fidivr
lea
in
push
popf
push
aas
lds
repnz
data16
div
in
and
sub
in
xlat
add
(bad)
int3
xchg
or
adc
dec
jo
or
aaa
jno
dec
fcomp
sub
int3
(bad)
repnz
mov
imul
cvtps2pi
ins
push
or
daa
xor
and
frstor
je
fdivr
bound
fist
test
mov
sub
pop
nop
push
push
push
pop
(bad)
sbb
dec
xor
jge
pop
div
xor
xor
jecxz
cmp
pop
push
and
inc
sub
mov
jbe
out
leave
daa
xor
int
in
add
or
(bad)
imul
push
xchg
call
xor
in
xchg
in
sub
lds
imul
fwait
or
jne
or
or
enter
sub
pop
push
mov
(bad)
imul
inc
push
std
dec
xor
jmp
adc
lds
(bad)
pop
add
test
adc
out
mov
xchg
or
sti
xor
sbb
cmovg
add
mov
out
add
in
mov
aas
fbstp
rcr
push
add
and
mov
push
mov
mov
(bad)
loopne
xlat
cmps
adc
lahf
jmp
out
js
add
in
sub
rcr
sub
cmp
rcl
mov
xchg
lods
jecxz
jae
mov
pop
aaa
pop
xor
cmp
push
mov
(bad)
cdq
rol
inc
add
xchg
ja
pavgb
imul
push
addr16
push
aam
popfw
xchg
fadd
push
imul
cmp
call
pop
fwait
jge
aam
push
fild
dec
xor
xchg
or
(bad)
cmp
inc
pop
hlt
cld
lahf
dec
test
pop
or
mov
dec
pop
(bad)
mov
xor
ret
mov
(bad)
dec
or
popf
sub
popf
lock
jae
addr16
mov
push
lods
cwde
lods
xchg
scas
mov
mov
pop
imul
add
aas
lea
and
xor
cmp
cmc
mov
push
ret
je
mov
cmps
jno
cmp
aaa
daa
pop
sub
imul
dec
out
sbb
aam
cmp
es
push
jns
ds
push
aaa
sub
sub
fldcw
leave
inc
mov
shl
loope
cmp
cmps
movs
aaa
dec
ins
out
inc
pop
aad
jne
fs
jmp
(bad)
int3
(bad)
ds
(bad)
(bad)
lahf
cld
sbb
inc
sbb
dec
int3
popf
dec
push
ror
call
cmp
add
xchg
pop
mov
sbb
add
mov
mov
das
pop
mov
or
pop
lods
popf
jb
or
es
sahf
xor
test
mov
clc
popf
repnz
sub
pop
pop
addr16
das
and
and
sbb
jle
je
jmp
lahf
out
retf
jb
(bad)
das
addr16
ret
mul
and
push
jns
(bad)
cmps
ret
(bad)
enter
int
dec
mov
test
cld
in
dec
sub
pop
mov
push
xlat
(bad)
hlt
push
test
ins
call
mov
ja
rcr
daa
sbb
not
and
mov
cmp
mov
xchg
pop
cmps
adc
cmp
add
sti
xlat
sbb
repz
inc
jge
ins
push
ins
mov
icebp
or
int3
cmp
sub
repnz
mov
xchg
fsub
and
xchg
lods
sbb
pop
adc
imul
in
mov
jnp
cmps
inc
stos
movnti
or
dec
scas
popf
outs
out
push
cmc
(bad)
cmp
lahf
sar
xchg
push
sub
adc
(bad)
and
mov
repnz
mov
inc
loope
push
mov
cmps
mov
out
pop
inc
cmp
inc
add
inc
xor
scas
in
or
cmps
cld
jbe
call
and
sub
inc
neg
and
popf
mov
call
jg
aad
out
jmp
mov
xor
mov
int
data16
pusha
in
aam
cmps
fwait
in
out
jp
cmp
fs
fwait
pop
lahf
cmps
int
cli
jae
dec
test
movs
pushf
cmp
sbb
leave
mov
push
movs
push
mov
cld
arpl
test
aas
inc
cmp
nop
adc
pop
xchg
xchg
pop
mov
inc
(bad)
pop
sahf
outs
popa
push
fnstsw
lea
aam
aas
push
jecxz
add
mov
clc
std
push
xchg
rcl
xchg
sbb
(bad)
cmp
fistp
mov
push
out
arpl
popf
jnp
mov
gs
outs
push
add
mov
xlat
loope
fdiv
es
jl
mov
pop
aaa
(bad)
shr
in
ins
add
xor
pop
and
repz
int
mov
or
mov
mov
mov
mov
call
or
jp
popf
mov
mov
jmp
imul
xor
push
imul
add
ja
ss
shl
jecxz
aaa
dec
loope
movs
or
adc
and
jno
les
aaa
sub
mov
ins
sbb
gs
cwde
cs
cmc
or
jl
mov
into
sahf
and
call
repz
dec
adc
add
pusha
nop
sub
fdivr
aas
mov
loope
not
push
pop
mov
and
(bad)
jnp
add
add
out
int3
mov
sbb
inc
shl
mov
mov
push
mov
fistp
icebp
mov
shl
out
mov
call
aaa
xlat
mov
ror
loopne
pushf
outs
movs
pop
into
movs
jge
add
std
and
bound
jns
(bad)
jl
pop
loopne
(bad)
loop
pop
xchg
hlt
mov
(bad)
xchg
out
mov
(bad)
cld
adc
and
jmp
add
xchg
fwait
inc
mov
xor
mov
int
ins
stos
ins
xor
lods
pop
pop
mov
mov
jge
and
jmp
iret
mov
idiv
test
repnz
cmp
popf
fistp
jae
and
jnp
popf
(bad)
test
in
sbb
clc
fldcw
adc
lahf
lods
jb
mov
inc
xchg
push
pop
inc
inc
adc
ret
add
push
pop
push
cmp
and
fidivr
int
fst
push
dec
add
aas
sub
les
add
fs
ror
rol
sub
gs
add
lahf
sub
push
pop
push
leave
jne
or
lahf
sbb
sbb
or
jecxz
xor
jmp
pop
adc
ret
addr16
jae
push
cmp
xor
mov
movs
push
sbb
nop
aaa
xor
popa
xchg
jecxz
add
mov
push
mov
xchg
(bad)
retf
hlt
in
movs
popa
xchg
aam
scas
adc
jo
sbb
int3
(bad)
(bad)
daa
jp
ret
xchg
cmp
mov
shl
mov
(bad)
mov
jp
jge
fwait
lods
pop
nop
mov
push
movs
(bad)
sar
stc
and
pushf
mov
inc
aas
push
imul
icebp
(bad)
icebp
scas
ins
jo
add
loope
loop
cli
cmp
scas
adc
sub
mov
(bad)
fcom
sbb
sti
into
jno
lods
ficom
push
xor
in
pushf
clc
mov
push
dec
ins
ror
push
mov
shl
popa
cmp
out
(bad)
(bad)
mov
cmps
sbb
adc
test
cld
sub
sbb
mov
push
ins
lahf
popf
repnz
dec
adc
xor
je
add
pop
stos
jmp
mov
ffree
div
sub
arpl
mov
push
cmp
mov
mov
imul
test
das
ja
or
push
push
mov
cld
add
std
mov
pop
xlat
aad
mov
or
push
jge
cmp
lahf
cmp
addr16
data16
inc
mov
push
aad
xor
inc
mov
or
xchg
or
dec
imul
add
push
or
xor
xchg
lahf
aad
(bad)
cmp
dec
or
jno
addr16
xchg
cmp
add
push
mov
daa
gs
push
mov
(bad)
xlat
push
jle
mov
adc
enter
aaa
fistp
jl
out
rcl
dec
inc
iret
stos
push
jno
mov
pop
std
and
int
repz
rol
aas
xor
lods
push
icebp
daa
int
and
sbb
xor
xchg
out
jns
dec
jecxz
jns
icebp
sbb
adc
or
popf
add
cmc
push
xor
jle
mov
int3
fnstsw
xor
xchg
(bad)
rol
lods
ret
test
int
ret
xlat
jge
add
gs
loop
(bad)
adc
push
dec
or
sub
out
push
push
sub
cmp
xchg
sub
cmp
dec
pop
add
stc
sub
inc
pop
outs
cmps
mov
(bad)
loope
mov
in
fdivr
or
push
jge
ror
pop
cwde
add
sbb
push
repnz
cmp
int3
pop
pop
cdq
retf
cwde
cld
jbe
or
pop
mov
mov
xlat
sahf
adc
cmp
push
les
push
shr
xchg
lahf
mov
dec
stos
inc
push
into
or
adc
jae
(bad)
dec
cmps
fdiv
icebp
fwait
sub
adc
xlat
jae
xchg
mov
push
push
mov
mov
and
dec
sbb
rol
movs
bound
cmp
iret
mov
sbb
mov
add
or
jns
add
ffreep
(bad)
(bad)
mov
xchg
(bad)
iret
dec
jo
mov
aad
dec
movs
inc
jl
jmp
ror
pop
repz
stc
int
and
inc
or
aaa
lahf
int3
sbb
and
les
mov
aaa
ror
pop
mov
xor
xchg
pop
in
fdiv
xlat
inc
int3
frstor
ins
and
jmp
pop
jns
cmp
loopne
outs
outs
adc
daa
(bad)
call
ins
iret
(bad)
pop
pushf
xchg
sbb
stos
jns
loope
in
mov
shl
mov
iret
scas
rol
sti
bound
mov
mov
sbb
adc
pop
movs
and
lock
int
push
xchg
test
jle
xchg
or
lods
adc
xchg
xchg
xchg
into
sub
jns
scas
sub
xor
mov
jecxz
(bad)
mov
sub
mov
mov
sbb
fadd
(bad)
mov
mov
(bad)
jle
stc
sbb
lods
or
inc
aas
nop
idiv
fisubr
or
sbb
test
popa
int3
pop
punpckhbw
xchg
add
call
inc
jle
xor
mov
mov
int
pop
sub
ds
das
push
ins
push
das
enter
cmp
pop
sbb
inc
shr
jmp
enter
xor
(bad)
inc
adc
pop
outs
inc
int
int3
and
ret
les
sbb
cmp
xor
out
push
add
sbb
movs
mov
shl
lods
push
or
dec
mov
cdq
daa
cmp
aaa
dec
inc
(bad)
scas
adc
sub
scas
mov
xor
or
inc
mov
sub
jle
(bad)
jle
int3
jbe
ret
push
xchg
daa
add
cmp
dec
ja
dec
int3
mov
mov
xchg
adc
mov
push
pop
out
jmp
xlat
jg
jg
dec
push
js
jecxz
cmps
mov
mul
loop
(bad)
rcl
dec
es
lods
ss
mov
pop
aaa
movs
les
mov
mov
sub
stos
js
pusha
xchg
jno
inc
les
mov
mov
pop
cmp
(bad)
outs
xchg
mov
adc
jmp
jmp
jmp
push
test
jmp
mov
(bad)
popf
mov
ins
aaa
xchg
xchg
test
out
jl
imul
pop
and
fnstsw
add
and
(bad)
rol
mov
push
scas
push
shl
inc
test
xchg
adc
rol
dec
das
push
fchs
dec
mov
jecxz
push
(bad)
mov
out
fild
xchg
adc
cmp
stc
pop
mov
add
aaa
and
xlat
mov
mov
scas
dec
sub
cs
dec
shr
jg
stos
mov
sub
lods
movs
jp
sbb
xor
cs
jbe
iret
pop
ja
adc
out
addr16
add
into
idiv
xor
pop
daa
cdq
adc
xchg
iret
pop
pushf
fst
cmps
das
inc
rcl
inc
xor
aaa
test
sub
(bad)
loopne
loopne
sbb
push
call
aaa
lock
es
daa
aaa
popf
in
iret
pushw
dec
mov
stos
stc
and
imul
(bad)
fsub
push
lds
xor
pop
cmp
ins
ret
dec
ja
mov
xor
mov
adc
fnstsw
js
push
stos
xor
sbb
add
mov
addr16
xchg
jecxz
dec
out
push
add
cs
and
inc
(bad)
mov
dec
test
mov
sub
scas
lea
out
gs
push
adc
mov
out
es
out
xchg
rcr
push
mov
and
xchg
jns
xchg
inc
mov
xchg
xchg
or
dec
shl
(bad)
sti
or
retf
mov
pop
shl
leave
sbb
push
(bad)
rcl
add
xchg
push
jg
cmps
add
test
jg
pop
in
jb
jmp
shr
sub
push
call
loope
sbb
dec
add
add
pushf
iret
and
leave
pop
stos
jge
push
inc
cs
sbb
clc
out
cld
stos
mov
dec
push
dec
pop
mov
test
call
(bad)
sbb
(bad)
ds
daa
das
rcl
popf
sti
repz
repnz
cmps
aam
and
jne
cmps
pop
push
push
(bad)
out
adc
test
cmp
pop
cmp
xchg
out
pop
or
inc
movs
iret
mov
movs
shl
out
xchg
fbld
cmp
dec
sbb
fs
xlat
ror
xor
cmc
rcl
in
mov
jecxz
sbb
outs
jp
push
jne
das
in
cs
(bad)
or
cmps
dec
fisttp
out
popf
mov
mov
inc
mov
adc
push
aaa
jp
enter
sub
push
xchg
nop
retf
nop
enter
xchg
fstp
cmp
fimul
mov
xchg
sahf
inc
inc
jne
mov
aaa
dec
sub
jb
xchg
cmp
xchg
xor
xchg
(bad)
(bad)
push
ins
cmps
repnz
(bad)
(bad)
fcomp
xor
xlat
ds
fist
fist
call
adc
out
mov
int3
or
cmps
push
scas
pushf
and
jns
push
sub
mov
add
jns
loope
inc
jns
pop
pop
sahf
popf
push
cmp
loope
cmp
aad
mov
pop
cmp
outs
xchg
adc
cmp
fiadd
(bad)
sbb
sub
into
arpl
scas
or
mov
xor
outs
ins
adc
mov
shl
fst
mov
cmps
and
cmc
jle
popa
fst
mov
leave
jp
(bad)
jne
out
sbb
aam
sub
addr16
dec
jnp
lahf
or
in
(bad)
jmp
xchg
jae
jo
mov
lds
lds
xchg
push
test
out
push
fldenv
(bad)
jmp
inc
or
sub
out
shr
das
les
(bad)
push
clc
cmp
lock
add
dec
lods
fisub
adc
adc
ficomp
xor
mov
outs
mov
push
lea
pop
lods
jg
dec
mov
in
lds
sub
or
stc
mov
adc
psrlq
mov
mov
and
or
cmps
and
and
mov
sbb
dec
ss
(bad)
sub
clc
inc
(bad)
out
mov
out
lods
mov
ins
push
loopne
arpl
aaa
in
sub
mov
(bad)
xchg
ret
loop
ja
int
pop
lods
mov
sub
mov
or
daa
mov
sub
mov
(bad)
lahf
stc
cs
out
or
pop
and
sbb
mov
push
sbb
jns
retf
inc
les
cmp
das
cmc
in
jg
fadd
mov
fst
out
out
xchg
cmp
fild
sbb
mov
fdivr
adc
ret
hlt
das
push
or
jne
xor
ror
call
mov
popf
cmps
mov
dec
add
adc
jbe
xchg
inc
ja
daa
dec
aad
fild
and
push
jnp
stos
jg
push
or
jg
cmp
ins
lods
sbb
and
sbb
popf
aaa
pop
mov
sub
ins
mov
jecxz
out
cmp
int3
push
test
xchg
fs
std
sub
mov
adc
movs
xor
push
retf
push
mov
mov
frstor
dec
loopne
cmp
or
jg
sub
inc
pop
imul
cld
xchg
dec
lods
iret
mov
sahf
or
in
out
mov
ret
and
(bad)
pushf
mov
mov
inc
icebp
jbe
fld
cmc
pop
inc
mov
mov
or
pop
dec
sub
js
int
xor
mov
push
mov
xlat
icebp
sar
push
int
pushf
or
adc
push
adc
xor
ins
xchg
fcom
mov
jmp
std
mul
(bad)
pop
inc
or
sbb
xor
inc
adc
cdq
dec
popa
lods
stos
ret
aaa
outs
(bad)
jmp
mov
jmp
fld
ds
or
outs
leave
mov
stos
cld
imul
mov
sbb
out
xchg
jbe
fild
test
aad
adc
leave
or
retf
cmc
jge
je
sbb
mov
and
aad
in
add
bound
addr16
jg
cdq
(bad)
lock
mov
pop
pop
add
jb
test
and
cmps
cmp
(bad)
dec
lods
push
imul
shl
(bad)
clc
lock
repnz
add
jl
jne
std
pop
aaa
push
ins
jge
xchg
test
inc
shl
xor
(bad)
pop
push
(bad)
aaa
sub
xor
movs
shr
mov
test
dec
xchg
dec
es
jno
shl
pop
pop
push
or
ret
outs
popa
iret
icebp
aas
mov
aam
mov
adc
sub
push
ins
cmp
jne
in
jmp
mov
bound
dec
in
xor
add
jg
rcl
(bad)
jg
mov
fnstsw
shr
pop
cmp
add
pop
sub
ficomp
fiadd
lahf
and
cmp
xchg
mov
daa
jns
or
das
lds
inc
dec
scas
sar
xchg
pop
jne
push
fadd
sub
test
(bad)
inc
push
adc
cmps
(bad)
in
mov
jmp
(bad)
mov
pop
aaa
cmp
add
sub
cmp
setg
ja
xor
add
loop
xor
dec
jl
jg
inc
push
dec
int
cmc
pushf
dec
mov
cmps
sub
push
inc
dec
jne
or
cmp
and
(bad)
mov
push
rol
std
sub
hlt
and
ret
jmp
aas
cmps
test
mov
xor
in
ss
sbb
sub
pop
cmps
mov
shr
in
pop
xor
call
jmp
xlat
cli
sbb
ds
aaa
gs
xor
test
xchg
sti
(bad)
aam
ds
(bad)
fsub
iret
mov
dec
jno
push
ja
xlat
sbb
mov
daa
mov
sub
inc
fnstenv
out
out
das
imul
pop
add
addr16
shr
push
iret
pop
out
hlt
sbb
ret
push
ins
popf
out
sbb
xor
mov
xchg
push
pusha
adc
iret
ficomp
(bad)
fdivr
jne
out
jne
or
je
jne
sub
(bad)
add
iret
loop
mov
div
add
mov
gs
xlat
int3
mov
neg
aas
xor
div
dec
xchg
xchg
push
mov
xchg
add
or
out
cmps
lods
iret
xchg
xlat
xchg
mov
push
or
outs
mov
outs
rcl
ds
idiv
pop
add
out
xor
enter
outs
outs
cmp
imul
jp
mov
or
mov
(bad)
cld
(bad)
or
mov
adc
rcr
xchg
ror
jge
pop
xchg
int
jp
sub
xchg
cmp
mov
dec
add
dec
cmp
mov
xor
xchg
rcl
js
and
jbe
cmps
inc
sbb
cmps
xchg
jb
pop
inc
cld
lds
lods
cwde
retf
call
mov
lds
xor
es
xchg
stc
pop
jecxz
pop
pop
mov
push
add
repnz
aad
iret
add
mov
jbe
inc
mov
loop
les
ds
xlat
in
int
fisub
mov
cmp
jle
out
fiadd
pop
cdq
lea
jecxz
aaa
cld
xchg
shl
cmps
(bad)
packuswb
inc
test
dec
in
repnz
addr16
lods
lock
cmp
sub
aad
pop
ja
inc
lahf
sub
test
div
outs
jl
lea
jo
pop
retf
out
(bad)
ds
jnp
mov
cmp
inc
dec
pop
sbb
scas
imul
cmp
test
les
aam
inc
pop
jbe
adc
cdq
(bad)
out
gs
idiv
inc
mov
push
xor
fs
in
jne
or
push
dec
lods
bound
ds
push
repnz
fwait
in
jo
xor
or
jae
es
xchg
in
loopne
xor
pop
stos
aad
repnz
cdq
icebp
cmp
adc
mov
sub
or
sbb
cmps
sub
(bad)
retf
xor
pop
mov
mov
mov
fdivr
mov
cmp
push
inc
loopne
and
push
data16
in
jb
cdq
dec
lods
xor
(bad)
js
sti
gs
sahf
out
cwde
sar
lock
das
push
mov
pop
add
jge
jns
in
dec
inc
and
dec
push
iret
scas
inc
in
fld
mov
inc
outs
out
and
iret
and
fldcw
out
ja
adc
fxch
jmp
jno
mov
add
out
cmp
adc
ins
xchg
mov
mov
(bad)
ins
arpl
sub
fs
and
push
sbb
ja
sbb
add
loopne
daa
mov
in
mov
inc
rol
(bad)
pop
and
inc
imul
(bad)
fwait
repnz
call
or
or
mov
push
mov
xor
cld
ins
int3
adc
(bad)
jmp
mov
(bad)
das
je
mov
add
ds
jl
lea
je
mov
scas
cld
cmp
loope
pop
inc
add
add
jo
loopne
daa
adc
cwde
lock
(bad)
lahf
and
mov
or
jmp
mov
jmp
push
in
out
xchg
sub
xchg
mov
popf
pushf
sub
mov
pop
enter
rol
loopne
pop
jg
and
int
adc
mov
lods
xchg
dec
loope
(bad)
std
xchg
inc
out
sub
pop
in
or
or
jge
popf
or
xchg
mov
dec
aas
cmps
scas
arpl
adc
xchg
ss
push
ret
xchg
je
lock
cdq
mov
cmp
in
pop
shr
cmc
ja
cmc
adc
loope
pop
sar
add
jno
lahf
mov
push
pop
mov
fdiv
imul
xchg
dec
inc
out
cwde
mov
out
xchg
cdq
rep
cmp
mov
sbb
pop
and
sub
test
sbb
fs
dec
in
pusha
xchg
jge
xchg
inc
pop
and
pop
xchg
sub
sub
jb
addr16
outs
in
sbb
retf
jecxz
fsubr
xchg
and
add
adc
aas
bound
add
retf
jbe
les
jge
retf
push
(bad)
std
xchg
inc
pop
fdiv
inc
ins
ja
pop
sub
jns
dec
xlat
mov
icebp
cmp
aad
(bad)
cmps
inc
cld
jbe
push
jne
outs
out
cmp
and
(bad)
adc
sbb
clc
hlt
pop
mov
aad
xchg
call
mov
ja
add
cmp
push
mov
cwde
cld
xchg
cmps
lods
not
imul
inc
je
outs
sub
(bad)
std
sub
pop
xor
test
jb
xor
repz
ror
inc
add
pop
jb
into
cwde
mov
push
retf
xor
ret
xor
pop
mov
add
push
aas
push
sbb
jge
gs
mov
ins
sbb
pop
aad
pop
mov
jge
adc
jns
xchg
jmp
sbb
or
ins
jg
pop
sub
movs
inc
pop
(bad)
sub
rol
mov
(bad)
mov
std
leave
adc
pop
cs
or
mov
and
sub
mov
mov
dec
or
xor
mov
shl
adc
test
dec
push
mov
cmp
sub
sbb
mov
mov
inc
aam
fisub
popa
pushf
cmp
and
jae
dec
bound
mov
shr
out
inc
mov
mov
(bad)
fist
push
jle
mov
ss
in
into
jl
in
xchg
and
sub
sub
adc
mov
push
cmps
mov
inc
xchg
pop
mov
pop
movs
js
ins
sbb
cwde
stos
fcmovnu
adc
pop
cdq
cmp
cmps
push
enter
in
jbe
mov
in
(bad)
je
in
ss
(bad)
sub
or
adc
shl
add
cmp
popf
loop
(bad)
jb
popf
cmp
(bad)
jecxz
xchg
out
push
leave
jge
mov
ins
ja
mul
jae
(bad)
imul
fcmovnb
push
mov
(bad)
daa
imul
inc
cmp
jbe
int
sub
lods
(bad)
push
pop
imul
dec
stos
shr
or
push
xchg
push
pop
inc
cmp
mov
pushf
in
or
clc
addr16
aas
mov
cmps
outs
sti
sbb
pop
inc
rol
sub
sub
out
sbb
xor
xchg
std
jae
mov
in
pop
jg
jp
sub
sub
mov
iret
cmp
push
or
xchg
add
jle
and
xlat
aas
lods
test
into
pop
add
dec
lea
cmps
(bad)
pop
sbb
es
dec
xor
push
push
mov
jmp
jne
bound
push
lahf
ins
jns
ja
outs
dec
pop
mov
movs
pop
inc
nop
xchg
inc
mov
cmp
enter
lea
dec
mov
jne
scas
add
cmc
int3
fcmovu
in
cmps
push
xchg
cmp
fstp
dec
xchg
test
lods
pop
dec
inc
inc
data16
ja
push
mov
adc
jl
xchg
lea
mov
push
inc
sar
xor
pop
or
or
dec
mov
pushf
jmp
adc
jmp
lods
sub
in
int3
and
jp
movs
xchg
cs
sbb
or
iret
adc
dec
cld
add
daa
outs
dec
mov
idiv
stc
xchg
pop
(bad)
int3
mov
addr16
add
stc
das
adc
sbb
mov
les
xor
imul
jnp
inc
jbe
pop
cmp
imul
hlt
xlat
je
pop
pop
dec
ret
xchg
sub
std
cmp
push
in
into
add
xchg
pop
das
jmp
mov
sbb
stos
dec
(bad)
push
ret
jo
in
pop
xchg
and
xchg
sub
ins
test
mov
std
mov
(bad)
pop
pop
xor
mov
or
rol
psllq
inc
pushf
jecxz
lea
pmuludq
jge
icebp
test
pop
scas
sub
cmc
hlt
ret
push
in
inc
dec
sbb
ret
test
dec
loopne
in
push
out
cmps
jle
stc
mov
pop
shr
rcr
jmp
sbb
fnstsw
nop
cmp
test
sub
sub
ret
sbb
or
pop
fistp
dec
push
cmp
ror
or
or
mov
aaa
cli
pop
retf
jle
jmp
je
int3
mov
dec
repz
or
sbb
push
jns
sub
(bad)
jmp
or
lahf
mov
(bad)
aad
cmp
or
imul
xchg
(bad)
call
sbb
and
mov
pop
loopne
call
dec
sbb
sbb
and
xchg
loop
inc
mov
mov
retf
pop
pop
into
shl
and
retf
cmp
test
mov
adc
loopne
mov
cmp
push
inc
mov
jns
fdiv
mov
push
cmp
jb
add
imul
mov
push
int
mov
ja
or
jg
cmp
jne
(bad)
pop
cmp
inc
mov
sub
fnstsw
mov
lds
test
mov
adc
sar
dec
or
cmps
in
or
push
(bad)
pusha
add
sbb
repz
nop
mov
pop
jne
lahf
jae
pop
das
sbb
add
sbb
jle
jge
lds
test
sub
xlat
into
pop
pop
mov
xor
popa
loopne
outs
inc
jne
sbb
call
aaa
cmc
sbb
and
sbb
adc
mov
inc
ins
out
aam
xor
pop
daa
lea
(bad)
adc
mov
inc
les
or
jle
mov
lahf
inc
mov
mov
xchg
fsubr
iret
xchg
jmp
stos
bound
pop
sbb
sub
add
out
test
retf
les
xchg
jmp
je
inc
cs
ret
add
mov
push
in
mov
mov
js
movs
rcl
dec
fnstsw
ja
pop
popf
xlat
sbb
cdq
pop
jl
(bad)
sub
adc
enter
aas
test
dec
lahf
sbb
cmp
adc
test
popf
neg
pusha
or
add
or
jno
scas
lock
add
mov
pushf
ficom
fmul
nop
or
fild
(bad)
aas
inc
add
loope
add
push
cmp
mov
mul
mov
das
jns
dec
jg
adc
mov
xor
mov
push
mov
sbb
dec
aaa
not
jno
leave
out
or
inc
xchg
xchg
data16
movs
imul
jo
push
call
jmp
ja
or
inc
push
movs
pusha
pop
retf
mov
cmp
pop
call
(bad)
mov
in
mov
cmp
in
mov
pop
arpl
addr16
dec
xchg
push
jge
ret
call
cs
dec
add
call
xchg
scas
test
outs
outs
jl
and
test
sub
int3
stos
aam
outs
push
xor
mov
xor
adc
xor
xor
sub
dec
lea
lea
rcr
push
and
sbb
xchg
(bad)
movs
out
lods
add
clc
sub
inc
push
mov
or
xor
inc
sbb
xor
pop
cmp
stc
outs
cmp
pushf
adc
sahf
add
pop
jae
es
sub
xor
gs
cs
xchg
jnp
ins
cmps
adc
cwde
jae
fld
dec
aaa
dec
sub
inc
cmp
push
es
je
aad
and
mov
fbstp
dec
sub
pop
cmps
inc
movs
loope
div
enter
cs
xlat
inc
or
(bad)
es
mov
add
xor
retf
pop
jmp
in
stos
cdq
push
jne
adc
pushf
or
xchg
popa
aaa
mov
inc
sub
int3
mov
xchg
repz
jl
or
std
fwait
jbe
sbb
push
lods
pop
lds
fcmovnb
mov
jb
in
add
stos
cmp
in
lods
inc
call
stos
mov
lock
xchg
adc
repnz
(bad)
cmp
stos
movs
ja
mov
icebp
ins
push
add
push
(bad)
jmp
aaa
adc
mov
mov
xchg
addr16
push
push
cs
int3
mov
jge
out
adc
enter
and
dec
ret
shl
push
in
and
sahf
xchg
add
arpl
adc
test
mov
pop
imul
ins
cli
js
and
push
mov
pop
sub
shl
dec
test
mov
fsubr
pop
or
dec
enter
lods
test
sub
jns
pusha
inc
inc
dec
ss
daa
shr
cmps
and
mov
aas
std
ja
sub
dec
retf
cmp
pop
out
inc
xchg
pop
test
sbb
idiv
adc
std
mov
jp
adc
fdiv
jno
pop
xlat
adc
jno
lods
stc
adc
adc
(bad)
sbb
or
imul
xchg
xor
(bad)
fldl2e
in
es
jg
fisttp
imul
push
adc
(bad)
iret
test
xor
movs
mov
(bad)
pop
jns
push
dec
or
jb
pop
push
ss
mov
pop
jnp
neg
imul
dec
jno
and
sar
aas
xor
sub
jno
movs
push
inc
jl
mov
int
test
mov
xor
and
pop
not
jmp
std
xchg
mov
das
add
push
add
imul
(bad)
pop
add
cmps
xchg
cmp
sbb
retf
rcl
xlat
sbb
jnp
out
or
xlat
fcmovnb
sti
pop
mov
mov
stos
push
(bad)
pop
push
rcl
mov
inc
call
mov
mov
sub
loopne
pop
call
xchg
out
popf
outs
jge
dec
mov
sub
mov
retf
push
scas
push
sub
cmc
test
add
in
pop
out
ins
mov
(bad)
add
sub
inc
push
out
and
scas
aas
rcl
and
pop
add
lea
movs
pop
cmps
loopne
xor
addr16
cmc
or
add
fmul
push
lahf
sbb
(bad)
test
inc
fbld
loopne
fisttp
out
jl
dec
xchg
out
sub
bound
in
aaa
imul
push
scas
call
les
mov
push
cmp
enter
test
ins
inc
push
push
mov
(bad)
mov
xlat
mov
movs
pop
call
mov
ja
loop
ret
mov
daa
(bad)
outs
xlat
out
add
stos
aas
retf
fst
mov
sub
imul
xchg
cld
jl
xor
adc
into
popf
retf
cwde
out
loope
jbe
and
mov
aad
cmp
mov
dec
(bad)
jmp
mov
sub
mov
(bad)
jecxz
js
inc
enter
xlat
mov
sub
addr16
xchg
clc
xchg
rcr
push
sbb
std
ficomp
fimul
or
aad
aas
or
in
test
pop
mov
mul
mov
into
or
ss
hlt
xor
xor
(bad)
scas
sub
out
xor
mov
fwait
(bad)
out
pop
add
jl
in
out
push
or
or
jbe
retf
ror
xor
hlt
ins
pop
cld
and
(bad)
out
sbb
stos
add
cmc
outs
xlat
and
pusha
xchg
jne
mov
add
adc
aas
out
ffreep
xchg
bsf
mov
shl
cmc
in
jb
mov
fsubr
cmps
sub
sub
pop
jno
jmp
in
mov
movs
xchg
(bad)
xchg
fstp
popa
(bad)
scas
aad
mov
sbb
es
sub
sbb
inc
cmp
out
popa
xchg
and
jae
(bad)
push
(bad)
(bad)
call
pop
sbb
mov
ret
mov
out
cmp
jb
push
mov
in
cmp
push
inc
cld
ficom
mov
adc
inc
sub
and
fisub
mov
les
xchg
xor
cld
xchg
pop
ds
pop
xlat
pop
add
push
popf
icebp
inc
(bad)
cwde
retf
fsubr
xor
cmp
pop
sahf
cld
inc
imul
daa
lods
xchg
ret
(bad)
mov
fisttp
lds
cmp
mov
jae
add
add
in
mov
adc
into
or
int
push
fld
retf
add
pop
stos
push
inc
retf
mov
xchg
cwde
and
xchg
adc
es
sub
mov
cmps
fscale
mov
xchg
imul
add
ret
mov
adc
scas
sbb
fld
fs
fdivp
sbb
mov
ficomp
inc
mov
pop
sbb
pop
xor
fwait
repz
fisttp
dec
sub
pop
hlt
stc
daa
dec
xor
cmps
add
mov
out
(bad)
mov
mov
retf
pusha
pop
cmps
push
test
ins
pop
movs
push
xor
add
mulps
das
mov
jno
mov
xor
and
pop
lods
xchg
es
(bad)
xchg
push
loop
test
pop
sti
icebp
push
je
hlt
xchg
popf
add
and
repnz
pop
mov
lea
dec
jo
push
imul
bswap
movs
ins
add
test
and
sub
xchg
test
cli
stos
and
or
js
pop
lock
push
jno
adc
pusha
mov
mov
or
cmps
cld
cmps
pop
nop
cmp
add
das
jecxz
xchg
add
fist
test
push
or
adc
fs
sub
mov
dec
sti
and
mov
ret
bnd
or
sbb
mov
iret
xchg
dec
aaa
push
inc
jmp
loopne
cld
inc
sbb
unpcklps
inc
dec
sar
movs
pop
call
sbb
add
ds
mov
mov
mov
aad
lds
int3
aad
sub
xlat
arpl
(bad)
cmp
scas
aam
dec
mov
cs
or
into
popa
out
and
dec
cmp
outs
fstp
mov
fs
jmp
push
les
data16
dec
cmc
pusha
imul
mov
ret
jns
mov
mov
dec
mov
or
sbb
jg
inc
jmp
mov
rcl
lea
and
push
jae
sbb
cs
cmp
jae
ja
(bad)
out
sub
repnz
fnstsw
pop
sbb
jp
daa
pop
aaa
dec
sub
cmp
scas
std
jmp
lods
test
(bad)
lds
cmp
fimul
inc
mov
mov
mov
xchg
jo
cdq
cdq
loopne
pop
mov
and
rcl
mov
data16
add
outs
ins
cdq
scas
test
lods
mov
inc
scas
ja
sbb
call
(bad)
gs
lahf
cld
shr
mov
pop
cmp
call
sbb
mov
sahf
je
push
cmp
fsub
aaa
cmp
int3
loop
fmul
sub
mov
jl
jns
call
out
test
and
shl
jbe
sbb
mov
sbb
ret
imul
push
mov
inc
scas
int
jmp
dec
add
lods
rol
enter
mov
xchg
cmp
pop
mov
rcl
xchg
lods
out
xchg
jl
ins
(bad)
xchg
lahf
hlt
cmp
mov
jbe
cli
je
fisttp
xor
mov
stos
stos
ror
(bad)
or
sub
cmps
out
mov
mov
in
sbb
sbb
and
dec
xor
nop
pop
fs
cs
rol
xlat
xor
popf
inc
out
jns
cwde
popf
mov
dec
mov
cmc
addr16
add
je
test
or
inc
outs
xchg
jmp
push
les
inc
mov
pop
cmp
imul
pop
pop
mov
mov
les
add
gs
pop
repnz
fs
(bad)
pop
(bad)
xchg
mov
loope
dec
sbb
push
nop
je
push
add
cmp
bswap
aad
dec
push
push
mov
pop
(bad)
out
neg
xchg
(bad)
mov
je
cmp
inc
ret
xchg
or
push
dec
jle
outs
scas
popa
mov
test
cwde
jge
jl
xor
gs
das
pop
cmps
sub
cmps
jnp
sub
mov
add
and
ins
mov
xor
pop
popf
jecxz
ins
sub
(bad)
mov
push
(bad)
out
movs
sahf
xchg
mov
int3
xchg
sbb
cmp
inc
pop
test
mov
scas
and
or
xor
int
mov
sub
jmp
dec
cld
xchg
xchg
jo
inc
or
sub
xchg
and
fsubr
mov
push
push
add
sub
and
jbe
sub
jg
jmp
or
cmps
push
dec
dec
cmp
sbb
push
and
fidiv
in
xchg
jle
fidiv
(bad)
mov
sbb
and
inc
pop
sbb
pop
rol
pushf
cli
into
adc
out
push
aam
cmp
repz
mov
sbb
push
in
adc
jne
dec
cmps
and
adc
pop
inc
mov
test
ja
sub
sub
jge
lds
(bad)
cli
or
adc
pop
scas
adc
mov
push
in
dec
in
out
mov
int3
or
cmps
ds
ins
fiadd
inc
(bad)
add
jg
cld
(bad)
xlat
ror
mov
xlat
movs
push
jno
sub
and
mov
and
movs
jae
pop
mov
adc
out
and
xor
push
cmp
push
or
jmp
ds
fst
and
dec
push
xchg
dec
or
repnz
adc
hlt
adc
ins
xlat
lea
addr16
dec
cmp
xchg
loop
sbb
push
xchg
push
mov
loopne
mov
in
mov
aad
adc
adc
dec
xchg
scas
mov
adc
sbb
cmp
push
add
mov
cs
out
fbstp
push
fadd
pop
xchg
mov
sbb
pop
imul
iret
jb
add
mov
mov
cwde
into
movs
mov
cmc
sbb
sbb
pop
adc
adc
add
dec
sbb
idiv
and
adc
mov
jmp
and
xchg
xor
or
pop
sub
jnp
sub
movs
push
loopne
mov
add
fld
not
scas
mov
sub
int
scas
movs
fiadd
mov
test
cmps
sbb
jno
std
and
dec
mov
ins
aam
add
pop
scas
ror
or
fwait
xor
scas
sub
sbb
addr16
shr
add
mov
repnz
cmps
jecxz
fsub
push
cmc
adc
mov
pop
test
js
dec
cmp
or
adc
or
sub
and
sbb
idiv
xchg
fcmovnbe
mov
mov
sub
imul
sbb
inc
ja
ss
sbb
aad
int
fdiv
sti
fnstenv
mov
cmp
adc
jno
cmp
add
adc
mov
test
and
sub
mov
mov
pop
(bad)
add
(bad)
mov
dec
pop
fwait
in
out
outs
xor
inc
cld
cld
std
add
daa
xor
imul
ds
sar
fcmovu
cmp
mov
xchg
xor
jb
jnp
mov
or
rcr
dec
shl
cdq
push
pop
je
in
mov
xchg
adc
mov
mov
(bad)
mov
mov
mov
xchg
xchg
cmp
cli
sub
ss
out
inc
popf
inc
xor
ins
hlt
fiadd
pop
adc
arpl
pop
ss
or
mov
mov
test
mov
leave
pop
push
je
dec
add
xchg
movs
cmps
mov
fild
mov
jns
mov
js
dec
cs
mov
jmp
xchg
push
mov
pushf
inc
data16
dec
fistp
mov
js
fst
mov
or
pop
dec
out
mov
push
inc
iret
dec
(bad)
dec
outs
(bad)
(bad)
mov
pop
cmp
fnstcw
pop
adc
out
or
pop
xchg
push
lods
sub
rcr
std
shl
cmp
mov
sbb
cld
inc
xchg
pop
adc
(bad)
aad
pop
sub
repz
jns
mov
pop
shl
adc
push
dec
or
xchg
cmp
mov
call
push
aas
mov
loope
inc
pop
loopne
sar
ss
int3
std
div
imul
cmp
cmp
sti
pop
test
push
cdq
lahf
mov
aaa
jmp
jae
test
adc
scas
push
or
cmps
cmp
jb
repnz
inc
mov
call
jno
es
fcomp
push
push
jns
lods
xlat
bound
pop
jle
jl
not
mov
inc
push
or
or
pushf
jbe
ror
sub
hlt
adc
rcl
or
loope
loope
(bad)
(bad)
xor
sbb
push
cmp
cmp
test
xchg
leave
cld
push
add
or
movs
cmp
dec
mov
scas
mov
(bad)
das
pop
mov
dec
imul
xchg
mov
pop
dec
push
pop
(bad)
mov
jno
add
das
xor
jae
fs
jbe
ret
or
xchg
and
aaa
sub
mov
ja
in
xor
adc
and
mov
inc
fs
inc
dec
mov
jecxz
mov
int3
dec
lods
retf
jg
add
cli
(bad)
xchg
in
cmp
and
rcl
mov
xchg
add
and
inc
inc
sbb
sbb
inc
and
clc
mov
xchg
adc
push
xchg
or
movs
inc
outs
ss
sub
pop
frstor
push
iret
pop
dec
inc
fstp
mov
xchg
mov
outs
arpl
out
inc
sbb
ret
push
xchg
mov
jnp
loop
push
ins
test
sub
dec
cmpxchg
sub
adc
hlt
hlt
outs
sub
jecxz
inc
pop
repz
jmp
popf
push
fidivr
iret
aad
cmp
mov
iret
mov
mov
mov
imul
arpl
icebp
xchg
push
idiv
dec
(bad)
jmp
sbb
sub
push
mov
lods
mov
icebp
adc
lahf
mov
in
mov
adc
jle
aas
sub
fsubr
das
out
sti
sar
push
lods
sahf
jecxz
sar
mov
cwde
jno
inc
arpl
and
dec
inc
dec
ss
inc
xchg
dec
icebp
fwait
jmp
xchg
jns
and
add
jg
push
pop
xchg
call
jne
popf
push
inc
out
push
out
(bad)
mov
add
push
inc
or
jmp
push
in
out
ja
mov
jns
or
sahf
dec
or
jae
jnp
sbb
into
mov
jne
scas
outs
aas
cmp
(bad)
clc
pop
stos
xchg
push
arpl
arpl
data16
sub
ja
fdivr
dec
iret
mov
cmps
test
lods
(bad)
dec
mov
jo
mov
pushf
mov
movs
xchg
mov
sbb
jnp
data16
sar
jb
dec
jle
pop
inc
aad
fistp
jmp
jns
sbb
pop
sub
mov
sbb
mov
mul
enter
pop
imul
div
add
push
mov
mov
in
or
push
out
les
cmp
sub
inc
fs
xchg
or
and
sub
into
aam
shl
ret
sub
fsincos
in
sub
aad
push
adc
sbb
xor
pop
ins
mov
(bad)
nop
xor
or
sub
lods
mov
dec
(bad)
aaa
jle
dec
xchg
lea
or
sub
sbb
arpl
rcl
ins
neg
dec
push
test
or
(bad)
daa
test
jb
addr16
jnp
stc
cmp
cli
pop
shl
cmp
cmp
aaa
adc
adc
int
xchg
je
inc
je
into
in
sbb
cld
adc
push
icebp
jecxz
adc
imul
xchg
push
repz
or
pusha
jg
enter
add
(bad)
mov
pop
cwde
or
inc
xchg
vsubpd
xlat
adc
cmp
call
jecxz
sub
adc
in
push
sbb
fisttp
ss
adc
cmp
jbe
clc
mov
out
in
popa
fnstsw
into
mov
mov
rep
dec
sub
lods
(bad)
mov
sbb
xchg
ds
mov
pop
push
add
pop
inc
sar
mov
inc
pushf
out
addr16
sbb
xchg
mov
loopne
and
sub
popa
inc
cmps
movs
in
cdq
lds
cmc
out
cmp
push
scas
mov
mov
out
sbb
xchg
xchg
loop
xchg
scas
lds
dec
cmps
adc
inc
test
in
sahf
xchg
(bad)
dec
mov
test
ins
test
push
mov
in
push
cmps
mov
xor
sahf
fcom
ins
popf
mov
outs
xor
adc
dec
sbb
jnp
mov
inc
sti
jne
clc
fwait
es
std
push
or
fwait
iret
inc
gs
jb
push
xchg
and
test
cmps
stc
aad
jnp
and
cli
outs
cmp
jecxz
sub
stc
sbb
fistp
out
jae
jle
mov
and
inc
or
adc
or
repnz
clc
pusha
fisttp
lock
xchg
nop
repz
lea
sub
sti
jl
or
xchg
repz
out
push
lods
(bad)
je
dec
fbstp
pop
out
clc
fadd
or
gs
jle
push
mov
cli
inc
xchg
push
jbe
int3
inc
pop
mov
add
test
inc
es
daa
frstor
xchg
cdq
cmp
mov
cmps
movs
xchg
test
popa
shl
or
xor
(bad)
sbb
cmc
mov
cmp
push
add
out
dec
cmp
cdq
(bad)
xchg
or
adc
mov
jmp
jae
in
sbb
fcomp
adc
aam
mov
repnz
dec
aaa
call
push
cmps
pop
fs
dec
add
mov
mov
lahf
sbb
dec
inc
call
ins
cmp
push
xchg
outs
repz
mov
cdq
in
xchg
outs
fdivr
cmps
(bad)
pusha
out
xchg
ins
pushf
push
test
test
pop
mov
jno
mov
pop
cmps
push
xor
xchg
fs
not
mov
test
xchg
out
call
fcmovnbe
(bad)
data16
ja
or
pop
jmp
jl
and
adc
pop
fld
imul
pop
dec
aam
je
xlat
pop
xor
scas
sub
xchg
daa
aas
ja
pushf
and
push
push
(bad)
mov
mov
ins
lods
inc
arpl
inc
cmp
(bad)
call
jmp
stc
push
sbb
mov
or
pop
mov
mov
daa
add
pop
ret
cmp
std
imul
iret
call
repnz
lods
mov
xchg
lock
shl
cmp
xchg
in
sbb
push
out
pop
push
mov
sub
es
bound
and
pop
mov
mov
call
in
cmps
sub
jae
daa
xor
mov
jb
outs
test
neg
fdivp
js
lea
pop
nop
push
(bad)
or
outs
scas
in
xchg
cmps
and
xchg
(bad)
mov
jge
(bad)
sbb
dec
xlat
fwait
sbb
out
pop
repz
scas
dec
popf
push
mov
cmp
mov
and
mov
in
xchg
pop
scas
je
(bad)
fs
call
xchg
mov
jns
out
pop
push
sub
xchg
out
push
ror
xor
push
fucomp
std
push
fnsave
add
imul
ins
sbb
data16
test
lock
retf
dec
mov
add
imul
pop
rcr
push
and
sub
fs
(bad)
(bad)
cld
sbb
rol
fisubr
pop
test
add
xor
push
jae
les
jbe
fsub
add
ss
mov
out
sub
sbb
mov
sub
lods
cmp
dec
or
addr16
nop
iret
icebp
xchg
pop
jp
dec
aas
daa
sbb
ds
out
push
loop
pop
cld
jge
mov
frstor
mov
in
jno
fcomi
or
out
jno
jl
(bad)
loope
push
retf
pushf
mov
and
leave
pop
stos
mov
adc
pushw
inc
enter
frstor
sar
add
xchg
inc
push
mov
cmps
xchg
dec
or
sub
sbb
inc
in
push
daa
sub
sub
or
aam
sbb
sbb
and
push
stc
and
sub
imul
dec
fwait
shl
sbb
or
fucomi
mov
pop
mov
cmps
xchg
cmp
add
call
xchg
test
cmp
push
cmp
jnp
aam
mov
and
jns
movs
mov
stc
aaa
nop
mov
sti
jmp
test
call
adc
xor
out
idiv
fldenv
test
nop
fild
jecxz
imul
sub
push
xchg
test
inc
sub
mov
sub
pop
and
lock
mov
aad
pop
push
cmps
lods
test
fst
in
xchg
scas
cli
cmp
ds
int
jge
sbb
lahf
leave
nop
or
call
out
fs
std
add
pop
dec
pop
xchg
idiv
cld
mov
mul
inc
jb
push
ins
mov
mov
add
adc
dec
arpl
sub
test
adc
(bad)
sar
les
gs
cmc
sti
movs
call
and
scas
imul
test
ja
push
fistp
lods
dec
ss
or
cs
cmovp
and
xchg
xchg
mov
call
cmps
fwait
xchg
dec
std
xor
jle
in
ret
ss
and
push
add
inc
pop
in
pop
frstor
es
cs
rcr
ins
dec
jae
fdivp
cs
not
lods
out
inc
stc
ins
lods
rcr
inc
or
js
jle
js
mov
out
out
cmc
rcr
mov
xchg
cmp
or
add
push
pop
in
xchg
out
sbb
ret
adc
jmp
mov
inc
in
jle
and
inc
je
mov
jno
lea
scas
sub
(bad)
jbe
xchg
mov
jg
mov
mov
push
jb
popf
out
mov
(bad)
mov
scas
sub
inc
cmps
or
in
xor
fild
neg
or
mov
or
or
repz
dec
inc
ficom
push
sub
jne
sbb
pop
push
lahf
(bad)
or
jmp
mov
je
cwde
mov
xchg
lea
sub
in
cld
loopne
bound
pushf
adc
rcl
ss
xchg
push
or
fsubr
xor
cmps
xchg
ret
or
jmp
pop
dec
sbb
xlat
lds
jb
pop
mov
push
mov
out
rol
or
dec
lods
adc
mov
outs
pop
and
jle
and
and
mov
fsubp
push
ins
ins
int
test
pop
lea
popf
imul
and
lods
movs
xchg
fdiv
cdq
ja
out
std
fwait
movs
mov
or
jne
test
dec
sub
call
call
push
dec
daa
jl
pop
inc
dec
(bad)
jl
or
inc
mov
add
stc
adc
jmp
es
add
ins
jno
pop
movs
jp
stos
cmp
mov
push
in
push
fisub
push
push
and
sub
imul
fdivr
mov
add
sub
scas
rol
inc
(bad)
pop
in
xchg
jae
es
inc
ror
js
mov
jnp
and
in
jne
imul
mov
mov
daa
cmp
movs
add
int3
jle
jb
mov
sbb
(bad)
int
inc
cmp
ds
pop
daa
mov
(bad)
jg
pushf
push
mov
pop
and
lods
and
cmp
int
pop
cmovnp
movs
loop
je
popf
push
in
not
inc
test
sub
ja
mov
mov
call
xor
inc
cmp
and
test
push
or
sbb
loop
push
adc
in
xchg
pop
xchg
js
jns
into
ins
cmp
daa
add
xor
xor
or
scas
das
loopne
inc
xchg
mov
ds
jl
sti
sbb
sahf
sbb
mov
cs
and
fnstsw
sbb
inc
pop
add
rcr
xchg
adc
inc
xor
test
sub
data16
mov
cmp
int3
inc
lods
and
inc
sub
pop
inc
stos
ds
test
ja
cwde
cmp
add
sub
pop
dec
mov
ds
repnz
call
int3
fisubr
das
mov
pop
sbb
mov
mov
pop
test
cmp
adc
sbb
in
loop
mov
dec
scas
sbb
add
gs
inc
push
nop
int3
xchg
xor
movs
mov
jecxz
xor
and
jge
add
and
inc
mov
cld
mov
cmps
xor
pop
dec
int
add
(bad)
mov
pop
test
(bad)
cmps
popf
out
jg
call
push
out
sub
lods
jg
outs
dec
test
std
aad
rcr
pop
mov
scas
mov
or
adc
aas
lahf
out
push
call
das
cmp
dec
test
xchg
gs
lds
jns
add
push
sbb
popf
xor
and
lahf
ficom
push
mov
enter
ret
xor
cmps
test
outs
std
adc
sub
dec
mov
fistp
sbb
jg
stos
mov
clc
jl
std
fidivr
in
in
fiadd
cmp
xor
jge
test
mov
(bad)
pop
scas
jo
cmps
test
stos
stc
mov
jae
cmc
add
adc
ds
test
ds
shr
clc
xchg
sub
aad
mov
pop
pop
push
push
xchg
pop
std
pop
sbb
jecxz
stos
xchg
stc
loope
std
fimul
int
mov
hlt
sahf
xor
dec
and
gs
in
enter
test
xchg
pop
movs
bound
cmp
div
pop
in
fscale
add
pop
xor
fs
not
mov
(bad)
pop
add
pushf
jb
movs
mov
movs
repz
xor
shrd
jns
pop
lds
pop
div
es
scas
xchg
add
inc
or
adc
popf
mov
aad
and
fldenv
cmps
mov
sub
xchg
stc
sub
mov
sub
scas
data16
add
aad
push
cmp
sbb
js
push
jecxz
pop
jnp
add
imul
mov
mov
test
cmp
arpl
push
imul
mov
inc
and
and
or
pop
xchg
fst
ror
data16
push
push
jnp
loop
aas
adc
push
cld
fiadd
retf
cmp
cld
sbb
xchg
fidiv
bound
movs
fld
jns
mov
std
xchg
(bad)
lods
jl
js
or
pop
ds
sbb
xor
push
ffreep
jnp
fidivr
push
add
mov
out
ins
out
jne
push
and
fsubr
cmp
mov
cld
mov
mov
gs
neg
(bad)
push
lock
sbb
sbb
adc
sub
xor
call
and
cli
add
repnz
mov
ss
je
and
mov
xor
xchg
(bad)
mov
outs
imul
or
inc
sbb
ret
xchg
push
idiv
or
inc
xlat
int
mov
push
jle
nop
xor
cmps
in
aad
stc
mov
loop
push
push
not
push
xor
ror
into
sub
stc
test
mov
lahf
(bad)
jmp
ror
ins
or
push
jge
dec
or
movs
mov
test
sbb
or
hlt
or
mov
inc
call
rol
xchg
jb
dec
gs
dec
pop
enter
cmps
push
enter
xor
push
int3
adc
scas
ror
mov
push
mov
cld
and
call
out
jle
xchg
addr16
(bad)
aam
into
test
fsubp
mov
data16
movs
push
icebp
add
sub
mov
push
ins
or
sti
(bad)
mov
push
cmp
mov
shr
lea
sti
das
sub
arpl
mov
in
loop
mov
popa
dec
in
mov
jae
inc
jg
jl
fdiv
sub
mov
pop
iret
imul
adc
pop
mov
pop
push
push
lds
cmp
mov
and
mov
sets
jns
enter
dec
inc
sbb
mov
mov
mov
nop
xchg
pop
(bad)
pusha
(bad)
mov
jp
mov
cmp
cld
jno
xchg
adc
and
add
aaa
cmc
mov
gs
dec
int
xor
gs
dec
sar
push
and
test
leave
int3
adc
popa
dec
addr16
mov
xchg
out
cmp
iret
ins
xchg
xchg
xchg
and
out
call
nop
repz
or
lds
cmp
xchg
aas
sbb
mov
in
pushf
jg
push
push
mov
and
shr
lods
xchg
dec
gs
jne
stos
pop
push
cmc
enter
popa
loopne
test
ret
outs
pop
(bad)
cwde
pop
adc
(bad)
xchg
jle
sub
loop
(bad)
mov
dec
and
data16
in
and
pop
out
jmp
pop
inc
fcmovnbe
stos
fs
div
mov
pop
pop
pop
outs
mov
bound
inc
mov
js
mov
cmps
xchg
sbb
or
loop
std
int3
push
(bad)
adc
xor
out
cmps
aad
xchg
std
dec
imul
cmps
mov
pop
cs
pop
movs
sub
jl
(bad)
repnz
out
jo
cmc
mov
ret
pop
dec
and
aaa
cs
imul
xlat
into
scas
mov
jne
ins
cwde
mov
imul
and
xchg
dec
imul
icebp
daa
jnp
inc
in
jecxz
lods
jo
fist
and
xor
std
test
bound
xor
iret
test
cld
outs
mov
xchg
and
test
sahf
add
es
pop
sbb
mov
cmps
jge
fld
pop
push
aaa
dec
ret
pop
mov
(bad)
mov
int
lahf
icebp
dec
(bad)
mov
mov
repz
jnp
jl
ins
mov
dec
inc
sub
clc
mov
movs
loope
lea
pop
mov
aad
jns
out
repz
and
jge
clc
jb
jno
push
mov
pop
push
test
mov
cld
outs
jl
addr16
push
dec
test
aam
ret
xor
jecxz
dec
or
jo
push
sahf
(bad)
lea
add
lods
aas
push
mov
and
push
push
js
push
xor
push
adc
mov
cs
adc
icebp
pop
outs
mov
mov
add
lahf
je
dec
mov
int
pushf
pop
and
push
xchg
sbb
movs
sbb
push
outs
jg
push
aad
and
inc
inc
xor
jno
cmp
mov
popa
pusha
fild
inc
xchg
loope
jge
in
daa
popf
sub
inc
dec
mov
jne
mov
dec
adc
hlt
or
out
cmp
jbe
lds
mov
pop
(bad)
aad
pusha
adc
scas
sbb
int3
mov
pop
mov
call
pushf
scas
jle
jge
call
hlt
xchg
nop
lods
xchg
cwde
sub
cmp
arpl
jne
push
fst
idiv
jb
daa
pop
data16
dec
xchg
movs
aaa
sbb
(bad)
fwait
ins
jne
adc
int3
imul
push
sbb
xchg
mov
je
clc
je
jne
retf
out
push
mov
pusha
in
sbb
rep
sbb
stc
(bad)
stos
(bad)
xchg
push
mov
jg
aas
inc
les
xor
lods
add
das
lods
mov
mov
movs
rcl
movs
or
add
push
push
jge
out
cdq
test
cdq
jmp
call
and
or
cmps
jge
test
bound
shl
dec
ins
jbe
test
repz
(bad)
icebp
ds
dec
sub
push
mov
clc
or
cmps
hlt
cmps
rol
dec
ss
addr16
inc
adc
xchg
js
rol
pop
(bad)
(bad)
les
clc
adc
rcr
pop
push
inc
pop
mov
ja
adc
pop
sub
loope
test
jb
dec
xchg
ret
outs
push
xchg
cmp
jae
or
xchg
sbb
repz
lea
inc
cld
call
jo
out
dec
push
call
xor
xchg
nop
in
sub
fdiv
addr16
and
rcr
lods
leave
aaa
sub
ja
(bad)
shl
call
ss
arpl
adc
jo
retf
or
cmp
not
out
mov
ret
pop
in
adc
cmp
das
mov
cs
pop
add
dec
movsx
(bad)
sti
mov
inc
data16
push
push
hlt
outs
outs
cs
aad
cmp
shl
test
adc
push
jae
mov
jne
sar
call
inc
xchg
xor
xchg
fst
scas
mov
pop
and
xchg
mov
jg
pop
pop
int
rcl
(bad)
mov
std
jb
mov
pop
mov
push
cli
pop
mov
in
sub
test
test
push
test
push
imul
mov
mov
test
push
push
shr
pop
cmps
sub
mulps
xor
xor
popf
es
xor
jbe
cmp
dec
sbb
fimul
or
shr
out
out
rcl
push
mov
stc
sar
sti
sbb
popa
popa
inc
push
fdivr
dec
add
popf
loop
ds
fst
ds
out
xchg
addr16
ret
hlt
mov
mov
lahf
stos
loop
retf
sub
or
xor
xor
or
add
jmp
xlat
ficomp
int3
(bad)
push
cmc
int3
into
fdiv
or
fnstcw
loopne
xchg
in
pop
dec
ud0
xor
cmp
mov
cld
inc
in
lea
and
mov
mov
inc
xor
inc
out
je
stc
cmp
cmps
push
in
pop
cmp
not
icebp
pusha
xor
mov
adc
fldcw
es
cli
xchg
(bad)
adc
jmp
sar
jbe
fisubr
push
and
lods
iret
(bad)
aam
(bad)
xor
dec
jnp
mov
out
call
frstor
in
(bad)
xlat
aaa
mov
bnd
ret
inc
fst
cli
xor
dec
dec
ss
out
mov
inc
iret
push
rcl
mov
mov
test
jb
inc
cdq
daa
mov
xchg
jno
pop
jo
lea
jae
push
or
aaa
fstp
mov
daa
push
sub
aaa
xchg
push
fnsave
xor
out
sub
push
jmp
fdivrp
out
sbb
xor
fwait
pop
jo
popf
fcomp
sub
inc
mov
inc
cmp
xlat
sahf
ds
out
and
add
div
sbb
and
xor
aaa
mov
test
lods
add
fld
add
cs
cmp
sbb
call
movs
enter
ficomp
jecxz
adc
xchg
aaa
cmp
scas
cdq
push
mov
call
jg
cmp
sahf
push
dec
mov
adc
sub
cmp
adc
xor
mov
andnps
ret
inc
and
inc
out
nop
sbb
gs
ds
sub
bound
inc
outs
xchg
mov
sub
adc
xor
mov
mov
pop
pop
and
cld
push
es
mov
daa
xchg
imul
shr
lods
repnz
gs
(bad)
sub
xor
fiadd
call
mov
sbb
cwde
pop
pop
outs
cmp
popf
add
and
xor
ins
(bad)
in
int
ffree
push
xlat
adc
cmps
addr16
sbb
mov
push
(bad)
xchg
jbe
xchg
movs
in
test
bound
push
stos
addr16
pop
jle
push
pop
adc
jle
dec
inc
mov
dec
out
sub
xchg
sub
pop
ror
retf
dec
push
mov
sub
popf
jg
addr16
push
mov
push
sbb
pop
(bad)
cmp
mov
in
in
mov
or
and
cmp
popf
js
jno
adc
shr
(bad)
adc
push
push
xchg
ja
cld
loop
push
into
les
pop
inc
cld
fmul
mov
sbb
sbb
jge
jmp
fwait
retf
call
mov
jl
sbb
cmp
jle
jmp
ss
repz
xor
movntq
imul
call
cmp
or
pop
mov
mov
rol
mov
cld
dec
pop
pop
ins
pop
pusha
cmp
daa
scas
sbb
inc
mov
addr16
jmp
or
mov
neg
inc
xor
imul
(bad)
add
pop
sub
and
es
in
sub
xor
ds
sub
ins
jl
mov
popf
scas
fdiv
or
sub
sbb
sub
mov
cmc
jae
mov
ja
dec
mov
sbb
mov
mov
scas
out
(bad)
xlat
jg
dec
retf
push
bound
mov
je
xor
in
ss
push
mov
enter
sar
and
pop
sbb
rcl
leave
mov
data16
pop
jmp
sub
lock
jbe
lds
fcomip
test
mov
mov
jg
mov
lea
test
movs
in
neg
mov
push
xchg
(bad)
jl
mov
(bad)
clc
fadd
std
and
aaa
(bad)
inc
xchg
mov
jb
push
dec
add
sbb
cmp
arpl
xchg
pop
lods
dec
fsubr
xchg
(bad)
push
cmp
addr16
popf
dec
cwde
push
jg
int
sbb
out
cdq
xchg
fmul
(bad)
leave
sbb
mov
or
dec
xchg
retf
push
ins
jecxz
aas
xor
sub
lods
pop
xor
test
mov
sub
jnp
out
imul
fcmovnbe
daa
xchg
ret
outs
xlat
iret
xor
sub
push
jnp
(bad)
mov
add
xchg
(bad)
xchg
jg
imul
loop
ins
(bad)
cld
loope
and
pop
or
call
aaa
ins
adc
and
mov
aad
sti
mov
add
(bad)
movs
fadd
cwde
jns
in
sbb
and
lock
cmc
lods
test
popf
(bad)
pop
pop
lds
aas
mov
ins
push
xchg
ins
ss
ins
xor
popf
fistp
repnz
jge
cmps
int3
dec
and
and
pop
add
mov
add
test
(bad)
adc
int3
pop
sar
sbb
xlat
jg
jne
in
adc
mov
mov
(bad)
int
cld
cmps
cmp
sbb
out
pop
std
add
and
inc
push
sbb
scas
xchg
inc
cmp
stc
mov
jno
std
lea
imul
daa
lods
xchg
scas
xor
lahf
icebp
fmul
inc
xor
add
xor
pop
and
dec
movs
enter
retf
and
loope
movs
mov
and
xor
(bad)
pop
push
addr16
out
or
xchg
out
push
cmc
mov
(bad)
mov
inc
jbe
jl
adc
pop
jb
les
aam
(bad)
pop
xchg
loopne
jb
icebp
cmps
retf
mov
push
jl
or
ins
in
add
and
sahf
lods
mov
mov
sbb
push
add
imul
push
add
ret
test
and
lds
xchg
in
imul
sub
mov
xchg
out
and
jmp
ja
inc
pushf
out
xchg
or
cmps
(bad)
or
(bad)
dec
dec
nop
out
pop
iret
and
inc
pop
inc
bound
push
addr16
cdq
clc
lahf
inc
mov
test
pop
pop
dec
add
mov
(bad)
add
fldl2e
jne
inc
sub
imul
and
leave
jmp
ins
popa
cmp
mov
fstp
test
das
ss
addr16
fcomp
mul
xor
iret
(bad)
xor
sti
loope
mov
mov
adc
int
outs
inc
int3
adc
dec
sar
mov
sbb
pop
fadd
nop
xor
mov
push
inc
cmp
inc
pop
push
data16
cwde
(bad)
jmp
pcmpeqb
ins
or
or
call
test
iret
aad
sbb
or
xor
xor
repz
xchg
lods
add
jbe
pop
inc
(bad)
std
lock
cmp
ja
test
adc
sar
push
sub
daa
cmps
push
mov
push
add
out
stos
clc
iret
pop
xor
aas
and
retf
or
test
gs
test
enter
mov
cmp
sbb
inc
jp
jmp
in
ins
out
fnsave
popf
ja
inc
add
icebp
push
(bad)
push
(bad)
lds
addr16
inc
iret
add
in
hlt
gs
popf
pop
fwait
mov
aas
cli
cmc
and
mov
iret
and
sbb
leave
inc
out
xor
idiv
mov
sbb
ins
adc
imul
xchg
push
nop
mov
xlat
inc
addr16
and
inc
add
daa
fcom
or
dec
scas
push
or
cs
retf
outs
or
mov
ja
mul
fst
jne
jnp
sub
ror
cmp
imul
sahf
pop
adc
jae
int3
retf
ins
push
idiv
jecxz
mov
push
xchg
mov
jl
bswap
adc
jo
outs
les
dec
xchg
mov
mov
sti
nop
mov
aaa
push
sub
leave
cwde
fwait
pop
pop
dec
cmp
ss
mov
aam
(bad)
cmps
push
mov
push
not
jo
mov
adc
(bad)
xor
dec
loope
das
mov
test
adc
xchg
lock
mov
icebp
pushf
jbe
cmc
xor
and
loopne
mov
cmc
sbb
sbb
pop
jmp
sbb
jae
cmp
ja
jmp
popf
pop
loop
outs
xor
cs
movs
xlat
in
test
mov
add
dec
jecxz
pop
pop
(bad)
retf
idiv
jno
or
mov
hlt
cmp
stos
test
adc
popf
sbb
inc
fld
inc
lods
fidivr
jmp
pop
lahf
sbb
sahf
stos
lods
enter
clc
popf
out
dec
clc
mov
gs
mov
outs
pop
add
daa
xchg
add
in
jns
data16
leave
pop
sbb
fs
clc
push
xor
or
das
jae
cmps
cs
pop
fiadd
ror
xor
test
std
ja
or
adc
adc
jmp
cmp
pop
sub
pop
inc
mov
cmps
xchg
jmp
push
movs
(bad)
xchg
std
call
ffree
jnp
shr
or
fstp
xchg
pop
lods
or
outs
fstp
sub
jmp
inc
mov
and
push
xchg
cmp
arpl
jbe
ins
cmps
movs
sti
cmp
mov
inc
out
push
ins
aas
ins
pop
mov
xchg
in
inc
sar
mov
xchg
(bad)
mov
mov
mov
in
xchg
xchg
enter
push
add
sbb
push
sbb
xlat
jnp
(bad)
mov
int3
mov
add
jne
push
icebp
(bad)
sbb
xlat
and
scas
push
rol
push
xchg
(bad)
sub
push
push
cmp
add
sbb
(bad)
iret
push
xchg
mov
push
mov
jnp
in
adc
and
inc
leave
sbb
dec
sar
mov
xchg
ins
dec
js
cwde
or
xlat
pop
mov
xchg
movs
addr16
pop
fadd
enter
push
mul
enter
jmp
lahf
idiv
data16
adc
sbb
imul
or
push
lahf
pushf
cmps
inc
out
adc
ins
je
gs
mov
loope
mov
mov
mov
in
ja
clc
out
out
cmps
outs
push
jge
or
mov
pop
jns
daa
pop
jmp
movs
stos
pop
jne
fld
(bad)
cwde
vdivsd
sbb
push
xor
jne
jge
push
ins
sbb
rcl
add
in
mov
and
pop
cmp
xchg
or
sbb
pop
loopne
xlat
aas
out
pushf
in
stos
inc
or
jge
outs
xor
sbb
out
jge
mov
sub
mov
inc
jno
add
xchg
loopne
sbb
xor
fnstsw
stc
out
mov
in
or
mov
pop
dec
push
push
jecxz
nop
or
dec
sbb
in
fdivr
jp
aas
ret
xchg
leave
gs
out
cld
cmp
dec
sub
add
in
add
push
sub
add
push
stos
in
div
imul
inc
fdivr
sbb
les
xchg
pop
sub
in
mov
xlat
(bad)
repnz
aaa
push
mul
pusha
test
mov
and
lods
sbb
hlt
mov
ret
sbb
mov
xchg
add
push
mov
or
popa
xchg
pop
leave
mov
clc
cmps
pusha
mov
in
xor
mov
sub
mov
std
adc
and
leave
cmps
mov
(bad)
popf
stc
fild
nop
xchg
nop
or
lock
scas
dec
pop
inc
inc
lahf
cli
push
sub
stos
lods
mov
sbb
test
jo
ja
fmul
int3
test
add
(bad)
push
dec
mov
xchg
movs
and
or
pcmpgtd
retf
cmp
sbb
fcmovu
xor
or
sbb
xor
mov
bound
push
and
or
and
and
cmps
in
adc
and
(bad)
xor
xchg
sar
ins
int3
sbb
mov
and
push
cwde
dec
enter
idiv
int
call
xor
fsubrp
(bad)
pop
add
or
mov
ja
mov
mov
out
lahf
xor
mov
jge
mul
push
sbb
stos
repnz
dec
cmc
out
push
inc
pop
popf
imul
jmp
and
jge
inc
xor
mov
mov
sub
mov
mov
adc
(bad)
push
ss
xchg
test
inc
push
jae
mov
(bad)
sub
popf
adc
sbb
dec
into
shl
leave
mov
push
ins
les
or
mov
aas
pop
mov
in
xor
jns
jg
or
push
in
xchg
mov
mov
jae
or
out
or
rcr
stos
(bad)
lods
pop
pop
ss
ret
cmova
mov
rcl
sub
mov
mov
gs
push
mov
or
aam
jae
mov
stos
mov
sub
adc
outs
(bad)
movs
cmps
mov
xor
xchg
jne
and
xchg
mov
fcomi
mov
aaa
or
xchg
inc
pop
jge
test
push
idiv
sahf
aaa
sub
je
in
aam
in
adc
imul
je
sbb
mov
cmp
repnz
call
int3
push
mov
sbb
ins
mov
cmps
mov
retf
xchg
clc
mov
int
les
fdivp
inc
pop
test
arpl
xor
mov
jecxz
jl
test
mov
out
lea
mov
and
test
xor
mov
sub
xor
repnz
ds
inc
pop
shl
xchg
mov
xchg
les
aad
mov
sahf
movs
cmp
cs
retf
xor
ret
mov
sub
mov
mov
shl
mov
jmp
and
clc
pop
dec
in
dec
paddusb
ins
addr16
mov
movs
cmp
jno
(bad)
fbld
sbb
dec
outs
ins
mov
adc
cli
mov
leave
add
test
sub
push
iret
sub
ins
jmp
mul
mov
or
or
int
mov
mov
call
dec
div
jbe
mov
mul
or
xchg
repz
or
dec
lods
mov
into
cmc
fiadd
push
fwait
movs
and
loope
imul
jp
xlat
dec
mov
adc
and
aam
mov
fcom
xchg
cmps
in
inc
ret
mov
inc
mov
out
inc
(bad)
movs
je
adc
dec
fdiv
cmps
inc
push
rol
mov
out
adc
mov
data16
mov
push
sub
jo
push
jbe
jp
push
mov
stos
adc
xchg
inc
sbb
nop
xchg
pop
in
mov
imul
(bad)
push
(bad)
xchg
sub
ror
cli
test
in
inc
(bad)
int
jg
outs
cld
dec
(bad)
fist
loope
int3
jo
not
push
or
sub
call
rol
push
inc
xchg
in
pop
jle
dec
sub
popf
and
mov
sub
pop
jbe
adc
leave
sub
mov
push
xor
dec
inc
imul
test
ret
add
add
fisttp
int
and
imul
rol
cmp
scas
std
push
stc
inc
jns
js
push
popa
mov
push
adc
mov
mov
dec
adc
sbb
add
add
js
cmps
rdmsr
outs
das
pop
add
popf
loope
jno
xchg
sub
std
xchg
jecxz
jmp
dec
outs
std
test
pop
aas
adc
mov
pop
xchg
adc
lods
movs
aas
iret
out
push
je
sbb
out
xor
adc
pop
xor
outs
neg
outs
xchg
push
test
ret
jae
mov
jp
es
dec
pop
out
jmp
js
test
push
mul
and
out
push
pop
mov
stos
mov
sub
add
sbb
in
mov
std
sub
pop
or
jbe
push
cmp
lock
ja
mov
xchg
and
pop
xchg
idiv
sbb
xchg
pushf
xor
jecxz
daa
mov
dec
scas
inc
loopne
adc
inc
push
and
in
jg
push
lods
sbb
(bad)
and
mov
push
push
jmp
call
je
xor
test
sbb
mov
test
scas
xchg
cmp
xchg
repz
retw
push
int
scas
inc
push
cmps
push
or
es
aaa
add
shl
adc
lea
and
std
sbb
in
xchg
and
neg
pop
repz
cmovb
push
dec
ret
dec
adc
dec
lods
fstp
xor
pop
jbe
scas
add
adc
sub
lds
rcr
ins
mov
ins
fisub
hlt
jl
xchg
(bad)
std
sbb
pop
mov
push
xor
dec
ficom
jmp
or
cld
xchg
out
(bad)
adc
fbld
ins
and
sub
jl
enter
bound
ret
inc
sub
xor
clc
push
xchg
pusha
sub
xor
mov
xchg
push
das
das
fcom
xchg
jmp
popa
xchg
jl
inc
adc
daa
xor
add
cmc
xchg
ja
jp
ss
in
push
retf
dec
fidivr
xchg
or
sub
ins
mov
dec
mov
js
vcvtpd2dq
sub
pop
push
les
jl
xor
dec
pop
pushf
or
daa
(bad)
jbe
pop
mov
mov
lods
ins
out
int3
addr16
sti
jno
repnz
mov
xchg
dec
inc
shl
aas
outs
mov
mov
dec
pop
inc
fistp
xor
test
rcr
add
out
adc
lods
pop
mov
push
inc
adc
jp
mov
js
in
mov
jmp
retf
stos
lods
icebp
es
push
rcl
inc
das
pop
sahf
push
pop
jns
jne
xchg
(bad)
dec
jbe
hlt
jae
aam
xor
mov
(bad)
int
fwait
mov
cld
pop
movs
xor
daa
std
int3
fild
iret
xchg
frstor
dec
pop
xchg
int3
push
ja
in
or
jle
push
sbb
mov
sbb
xor
retf
pop
cs
sub
cmp
sub
inc
xor
jb
fiadd
in
iret
loop
jnp
mov
push
mov
add
addr16
inc
cmp
or
pusha
iret
rcr
jmp
inc
aaa
movs
cmp
ret
lds
xchg
pop
add
mov
mov
pop
xchg
mov
mov
push
inc
ds
pinsrw
int
sbb
jnp
es
imul
scas
sti
xchg
bound
and
je
mov
(bad)
xchg
fcom
and
outs
push
cli
repz
sbb
aaa
add
popf
mov
dec
ins
dec
out
int
jge
fisub
mov
mov
fisttp
test
and
jno
push
dec
pop
cld
mov
lock
inc
cmp
mov
mov
shr
or
pushf
xor
int
sbb
mov
iret
lods
test
mov
cld
mov
cmp
inc
dec
sub
sbb
mov
cmp
popf
lods
popf
ja
or
jecxz
inc
sub
shl
xor
lahf
repnz
xchg
out
ins
adc
enter
fstp
cmp
shl
shl
dec
fistp
cmp
ja
daa
(bad)
in
into
jmp
out
iret
mov
xchg
inc
jnp
outs
mov
popf
xlat
mov
cmp
test
mov
aam
sub
sub
mov
mov
cmps
pop
cdq
pushf
ret
popf
test
out
imul
popa
inc
dec
pop
pop
dec
test
cdq
ins
lods
jecxz
sbb
sub
cmp
popf
pusha
add
xor
xor
adc
xchg
lods
mov
xchg
fsubp
out
inc
pop
xor
jl
and
(bad)
in
xlat
mov
cli
jne
lods
lahf
dec
xchg
and
daa
dec
sub
xor
mov
xor
sbb
ins
or
aaa
arpl
push
in
(bad)
push
test
mov
push
cld
dec
iret
jmp
inc
mov
mov
mov
mov
add
dec
xchg
out
fdiv
and
ds
loopne
push
xor
shl
mov
les
ss
inc
adc
push
jl
jae
ins
cli
or
mov
test
add
out
jmp
or
sbb
daa
fst
inc
mov
pop
inc
xor
lds
mov
scas
aad
fs
or
jecxz
mov
into
fld
mov
sub
xor
mov
fwait
jmp
outs
outs
retf
lea
(bad)
addr16
lods
test
xchg
pop
push
lock
inc
sub
cmp
sub
(bad)
in
in
mov
sbb
mov
or
jg
jae
mov
pop
pop
rol
push
mov
mov
jl
pop
(bad)
xor
cld
js
and
jle
jecxz
lds
adc
inc
sbb
jbe
arpl
jbe
cmp
ror
(bad)
cmp
inc
xchg
fimul
mov
jg
xchg
das
sar
xchg
mov
pop
and
cmp
xchg
scas
jmp
push
(bad)
mov
xor
cmps
sub
out
pop
lea
ret
fadd
xchg
jae
sbb
sbb
das
aad
mov
push
popa
push
lds
pop
das
fistp
outs
xchg
out
jo
imul
jo
inc
hlt
pop
mov
xchg
jl
(bad)
loop
out
jns
xor
stos
dec
mov
pop
iret
jae
add
fbstp
dec
jbe
das
or
repnz
dec
out
out
and
mov
das
out
inc
sbb
test
hlt
out
je
mov
out
pop
lock
jnp
out
adc
inc
aaa
push
jmp
adc
inc
imul
sub
push
mov
fisttp
ja
push
int
mov
(bad)
pop
add
lods
sbb
popf
out
xchg
mov
cmps
lea
(bad)
in
ja
lods
popa
fcmovbe
mov
mov
xlat
nop
out
pop
push
xchg
xchg
xor
mov
test
pop
sub
lods
out
retf
dec
sti
add
call
mov
cmp
mov
sbb
mov
sbb
out
jbe
inc
ret
imul
pop
in
sbb
add
xchg
icebp
dec
popf
mov
cmps
jge
sub
addr16
xchg
add
fnsave
xor
test
push
xor
repz
pop
and
imul
or
sti
lods
add
mov
cmp
push
dec
arpl
xor
cmp
cmp
rol
les
(bad)
pop
std
mov
fs
ficom
add
fild
jo
adc
mov
push
push
adc
xchg
xor
xchg
xor
nop
repnz
pop
daa
in
aad
cld
mov
sbb
sbb
popa
ins
xchg
pop
out
push
stos
jb
and
adc
in
push
loop
loope
addr16
push
jnp
aaa
jmp
or
aas
and
or
jl
dec
sbb
ja
fs
sti
sti
and
xlat
pushf
xchg
cmp
idiv
or
out
(bad)
or
fucomip
out
movs
neg
call
bound
mov
nop
test
ficom
mov
test
jge
mov
ins
adc
outs
mov
fwait
inc
(bad)
sti
cwde
out
adc
stos
ins
in
div
cmp
imul
icebp
jbe
les
push
test
jp
xorps
xchg
add
scas
movs
ja
arpl
inc
mov
add
dec
sub
leave
out
mov
mov
mov
xchg
dec
push
jecxz
in
lods
cmps
mov
mov
xor
fistp
inc
arpl
xchg
ret
addr16
sbb
jae
jno
lds
ds
jmp
in
mov
je
leave
cmp
add
(bad)
ja
sbb
pop
cdq
call
mov
xchg
and
mov
aaa
lods
push
sub
pop
pushf
push
arpl
arpl
lods
jno
push
les
mov
rcl
jae
aaa
(bad)
retf
cmp
and
cmp
jae
aaa
pop
and
sub
xor
push
jmp
jb
popf
xchg
jge
mov
add
and
scas
call
or
iret
mov
ss
xor
outs
scas
inc
xchg
(bad)
ss
sbb
retf
cwde
cmp
adc
ds
adc
scas
push
push
scas
retf
mov
push
add
push
pop
stos
imul
add
cmps
dec
fs
stos
mov
repz
gs
pop
std
jmp
(bad)
gs
ja
adc
ins
pop
test
jmp
jmp
std
push
jp
(bad)
scas
or
jno
and
push
mov
adc
test
mov
mul
mov
cmp
cmp
pop
inc
xor
retf
pusha
enter
rcl
and
scas
je
sbb
nop
mov
adc
jbe
lods
mov
xor
pop
xchg
add
lds
loop
test
xor
clc
jno
imul
in
rol
jne
loope
sar
inc
rol
sbb
jb
and
inc
jg
mov
jmp
imul
out
dec
imul
(bad)
js
sbb
rcl
mov
pop
mov
movs
imul
mov
loope
shl
push
xor
add
arpl
sub
out
xor
rol
bound
xor
sub
xor
inc
test
sub
sub
push
cmp
out
imul
xchg
or
pop
and
cmp
leave
dec
cmps
jns
lods
daa
mov
add
and
jge
(bad)
inc
jge
xor
mov
clc
mov
hlt
cld
jnp
xchg
daa
popf
ja
enter
mov
mov
jecxz
sub
out
dec
jmp
pop
inc
scas
pop
ins
cmps
repnz
mov
pushf
add
inc
es
mov
icebp
jmp
mov
jno
push
lea
imul
(bad)
idiv
movs
lods
loope
pslld
push
cmp
stos
in
jg
mov
and
adc
pop
loopne
jb
inc
add
mov
into
test
test
mov
jp
jge
in
cwde
and
or
rcr
imul
(bad)
dec
jbe
daa
mov
lea
push
mov
in
xchg
or
dec
daa
xchg
repz
imul
pop
stc
xlat
pop
or
and
mov
(bad)
pop
movs
stos
add
leave
nop
ret
es
pop
ss
in
out
jmp
in
stc
fsubr
jmp
sbb
gs
loope
(bad)
jo
mov
leave
jae
ds
call
sar
push
mov
pop
and
mov
cmp
mov
mov
mov
xor
mov
pop
push
adc
cmp
scas
xchg
mov
cmp
pushf
jge
sahf
inc
dec
jle
pusha
not
pop
mov
mov
shl
jp
inc
cmp
popa
ins
cmovnp
jae
daa
lea
cmp
hlt
pop
mov
ror
test
fwait
jbe
ins
push
popf
bound
pop
outs
(bad)
mov
jmp
les
xor
inc
xchg
std
jp
adc
stc
inc
ret
dec
(bad)
mov
call
xor
fwait
out
popf
in
lahf
adc
jo
push
adc
push
adc
enter
aad
(bad)
(bad)
out
mov
call
xchg
inc
inc
mov
cmps
sbb
imul
in
push
mov
pop
loopne
jmp
jmp
pop
test
imul
xor
jb
(bad)
mov
xor
inc
lock
mov
or
fbld
dec
sub
les
sub
rcl
dec
dec
jbe
jnp
adc
pop
test
xchg
sub
int
mov
pop
cmp
mov
xchg
mov
mov
dec
(bad)
xchg
ins
les
out
pushf
test
shl
cdq
sub
and
jle
iret
pop
push
jl
push
sub
shr
push
aaa
in
mov
xchg
sbb
and
mov
mov
shl
idiv
ret
out
in
inc
cs
in
cmp
or
mov
imul
in
pop
push
mov
mov
adc
rcl
inc
sub
pop
push
jecxz
sub
in
leave
mov
mov
mov
pushf
cld
daa
mov
cmps
out
out
fcmovb
pop
repz
test
cmps
inc
lds
sbb
test
mov
rcr
cmps
retf
sub
mov
jp
enter
jecxz
ds
ins
test
dec
push
mov
test
rol
push
fs
push
ja
fs
outs
in
mul
test
(bad)
stc
xchg
xchg
out
popf
rsm
xor
(bad)
div
push
ja
daa
shl
(bad)
sub
outs
dec
mov
retf
ss
sub
inc
cmp
xor
cdq
pop
push
mov
fild
cmp
nop
xchg
lea
aas
push
dec
aam
stc
sub
es
mov
dec
jnp
or
lods
mov
mov
add
clc
push
jae
dec
cmp
sub
dec
add
es
ins
out
fs
add
sbb
cmp
inc
pop
add
in
xlat
in
add
mov
jmp
fwait
cmp
add
push
ret
or
mov
pop
rol
ret
or
cwde
icebp
inc
loope
fst
ins
xchg
dec
test
sub
xchg
lahf
dec
mov
dec
lods
std
(bad)
sahf
into
int
xchg
cli
mov
lods
cmp
or
mov
add
test
mov
and
aaa
jecxz
adc
test
jl
pop
lds
jge
sbb
pusha
mov
pop
repz
call
xlat
out
out
dec
(bad)
or
and
sbb
push
cdq
sub
xor
loope
adc
push
push
mov
dec
or
clc
ds
xchg
mov
(bad)
daa
mov
cdq
(bad)
(bad)
lods
shl
test
push
mov
shl
daa
ret
xor
imul
in
push
add
call
mov
clc
cli
sbb
mov
add
push
adc
mov
je
xchg
pop
(bad)
stos
xchg
popf
inc
push
jmp
mov
or
test
fst
mov
pop
mov
ror
xchg
sar
rcr
mov
sbb
mov
or
push
cmp
imul
mov
xor
int
fst
sub
out
and
shl
mov
(bad)
and
ins
xlat
icebp
int
xchg
pop
pop
dec
and
push
cs
leave
addr16
(bad)
jmp
xor
add
fnstsw
test
or
jle
add
cmp
and
test
push
mov
outs
push
call
dec
ficomp
mov
jno
xchg
hlt
cmps
paddsw
push
dec
xchg
inc
out
ror
cmp
call
dec
xor
mov
lds
add
fnsave
sbb
push
(bad)
mov
mov
and
cmp
xchg
mov
push
js
stos
fcomp
ins
pop
cmp
mov
hlt
mov
rcl
xor
sbb
jae
inc
xor
clc
jbe
dec
pop
jle
std
fadd
sub
std
inc
pop
jbe
jnp
(bad)
mov
mov
cdq
daa
loope
cmp
mov
jl
adc
push
icebp
mov
ss
sub
movs
pop
dec
and
scas
xchg
addr16
int
mov
push
adc
int3
into
test
jmp
and
mov
jl
daa
shl
and
push
xchg
adc
mov
mov
outs
imul
test
push
inc
and
cs
out
inc
addr16
push
int3
ss
fisttp
fwait
test
in
mov
test
mov
inc
shl
sub
lea
adc
jle
adc
sahf
fadd
sbb
sbb
sbb
sub
movs
aad
and
int
mov
fisub
repz
inc
push
ja
mov
xchg
pop
aad
cmc
int
dec
div
es
popf
mov
in
jp
add
push
fcomp
aam
pop
mov
fcomp
sar
xchg
adc
test
rcr
push
dec
pop
mov
fadd
scas
or
imul
and
mov
or
mov
sbb
ins
sub
and
adc
mov
std
test
sbb
fcom
stos
inc
cmp
adc
pop
pop
imul
xchg
lds
cmp
cmp
adc
ja
imul
jns
push
loop
jne
in
shr
mov
mov
push
push
xchg
pop
adc
mov
cld
neg
rol
xchg
test
adc
mov
mov
xor
dec
xchg
out
push
shl
sti
in
xchg
std
add
inc
mov
cmp
sub
xlat
or
idiv
je
jae
add
(bad)
push
cwde
outs
js
cmc
sub
je
leave
mov
rcr
pop
out
mov
xchg
ret
mov
mov
int
jns
into
xchg
adc
popa
jp
pop
fdiv
test
sahf
out
inc
mov
cdq
cmp
and
xor
ins
adc
mov
in
pop
or
mov
push
sbb
pop
and
sbb
cmp
(bad)
mov
sub
lock
sar
jns
mov
inc
or
mov
push
pushf
hlt
ins
jbe
push
jbe
mov
or
hlt
lahf
add
(bad)
cmp
jbe
ins
or
bnd
ficomp
mov
lock
cmp
mov
cs
and
imul
mov
xlat
jbe
cmps
in
jmp
push
cmp
add
sbb
inc
not
into
imul
mov
ds
add
cs
mov
bound
fidivr
pop
cmp
push
add
cmp
test
mov
and
data16
(bad)
push
jp
sub
ds
and
arpl
sub
sub
ffreep
mov
pop
adc
fist
pop
or
aas
inc
aaa
(bad)
mov
jecxz
retf
in
dec
pop
inc
or
in
xchg
enter
push
adc
inc
cmp
lods
inc
idiv
mov
icebp
dec
xor
ins
lods
push
adc
out
(bad)
push
push
iret
mov
mov
loop
aad
add
lea
out
or
mov
pop
pop
popf
inc
addr16
sbb
cmc
sub
test
mov
adc
pop
inc
repz
adc
aaa
iret
out
sbb
push
sub
xor
xchg
mov
or
push
popf
hlt
add
(bad)
push
leave
or
push
(bad)
fnsave
jmp
loopne
out
pushf
xor
dec
cli
jae
mov
sub
popf
sbb
cmp
rcr
(bad)
mov
outs
in
aad
add
out
out
mov
dec
aaa
jmp
push
dec
pop
scas
jmp
addr16
jmp
push
les
and
in
dec
mov
cmps
ror
inc
xor
dec
jno
xchg
push
adc
add
addr16
inc
ret
test
ja
movs
sub
jg
lods
sahf
fnstsw
aas
sub
mov
lea
clc
div
xchg
lock
aas
sbb
pop
packuswb
mov
pop
je
test
pop
mov
mov
les
enter
dec
int
pop
pop
ins
lock
xchg
cdq
adc
push
lahf
jne
(bad)
leave
push
ficomp
daa
or
inc
retf
push
fwait
int3
sbb
jge
pop
jne
imul
popa
ins
xlat
jl
inc
mov
std
and
or
ja
or
add
scas
push
fwait
stc
jae
fsub
add
jl
mov
int3
inc
fild
rcr
sti
loopne
lods
dec
xor
sbb
mov
dec
jb
push
dec
inc
addr16
mov
xor
mov
mov
lea
ficom
dec
std
push
push
inc
fnsave
sbb
or
leave
xchg
rol
push
cmps
dec
xchg
jge
and
leave
mov
jo
dec
fnstsw
jecxz
out
jnp
div
daa
pop
daa
lods
pop
mov
out
pop
int
popa
fild
out
rcr
js
pop
and
rcr
(bad)
push
mov
adc
xor
pop
xor
xor
inc
jmp
jno
int
pop
jmp
in
pop
jmp
(bad)
dec
cmp
mov
ja
xor
push
cmp
popf
xchg
cli
inc
(bad)
mov
lods
popa
pop
jge
inc
movs
aam
add
cmpordps
std
(bad)
movsx
(bad)
push
xor
stos
adc
xlat
repnz
addr16
in
add
cwde
xchg
aaa
mov
sub
push
xor
xchg
popa
and
sub
jno
jl
neg
xchg
fwait
popf
inc
or
pop
fisttp
dec
cmp
retf
daa
cmp
out
mov
mov
mov
outs
inc
cmps
push
out
ja
imul
pop
fnstsw
mov
out
outs
adc
in
push
mov
sahf
xchg
cwde
mov
test
lods
(bad)
sahf
mov
fld
lea
push
iret
cmps
fcmovnbe
mov
retfw
pop
mov
scas
push
cmp
pop
int3
test
ins
in
sub
(bad)
jno
cmp
jo
sbb
(bad)
mov
(bad)
mov
fsubr
adc
cld
cmps
stos
xchg
aad
repz
mov
rcl
rcr
es
mov
pop
cmp
fdivr
dec
mov
dec
sub
int3
fisub
inc
push
xchg
jne
dec
hlt
adc
in
and
mov
cmp
loope
sbb
shl
mov
lahf
stos
(bad)
in
mov
jne
xlat
leave
retf
outs
and
rol
inc
bound
int
adc
add
add
test
pop
out
hlt
xchg
lods
and
dec
xor
push
xchg
repnz
jge
sbb
or
sbb
push
xchg
imul
pop
popf
std
mov
xchg
int
or
out
lea
push
movs
rcl
jb
ror
ror
cmp
pop
dec
fdiv
addr16
stos
rcl
pop
(bad)
jmp
test
xchg
cld
jp
mov
jmp
sbb
js
sbb
mov
jno
dec
adc
sbb
out
rol
sub
sub
push
xor
mov
rcl
pop
daa
movs
add
adc
popf
retf
ror
je
ror
lea
sub
or
lods
sub
ins
retf
dec
data16
popf
xor
push
pop
daa
jmp
mov
push
or
push
mov
xchg
jecxz
cmps
loopne
cdq
(bad)
lahf
mov
inc
or
out
cmps
lods
add
push
cmp
shr
sti
push
and
cmc
mov
dec
cdq
cmp
add
inc
cmp
xchg
adc
sub
cmp
enter
shl
mov
(bad)
jmp
(bad)
iret
xchg
mov
jmp
jge
mov
mov
push
push
icebp
xchg
stc
push
scas
test
push
pop
daa
enter
outs
adc
lods
(bad)
mov
fisttp
es
sbb
jmp
fsub
pop
pop
(bad)
shr
fnstenv
mov
loope
ret
jp
dec
jbe
and
jbe
push
jne
ins
or
fnstcw
es
or
push
ins
mov
push
imul
jno
stos
push
push
sub
(bad)
lods
fisttp
ficomp
sub
stc
fld
jbe
push
fcmovnbe
inc
ret
push
ss
mov
jle
(bad)
cli
icebp
push
add
and
mov
dec
idiv
dec
inc
jmp
mov
shr
mov
sbb
popf
dec
push
dec
imul
push
and
cld
daa
scas
(bad)
mov
mov
daa
mov
or
pop
sbb
sbb
sbb
and
or
mov
rcr
push
adc
mov
push
sar
sahf
int3
push
add
jno
movs
fsub
pop
jo
mov
sti
sub
cld
pop
mov
ja
push
sbb
shl
add
cmp
xchg
xlat
pop
xchg
cmp
dec
sub
mov
inc
sbb
shr
or
cmp
popa
cmp
sbb
shr
out
push
xacquire
push
cmps
int3
mov
(bad)
mov
call
push
cmps
xor
loopne
shr
inc
cmp
movs
pushf
pop
xchg
ss
dec
(bad)
test
sub
mov
inc
inc
or
sub
pop
data16
xchg
(bad)
pop
es
mov
sbb
in
mov
jb
dec
or
dec
shl
push
or
push
ja
sub
jge
pop
jnp
daa
(bad)
jmp
sub
mov
out
cmp
pusha
sbb
lods
loope
or
cmp
and
mov
push
inc
stc
push
sbb
(bad)
data16
sbb
dec
test
jae
cmp
xchg
xchg
cmp
pop
or
add
lea
lods
inc
add
jmp
cli
in
sub
(bad)
sbb
call
int
jnp
sub
test
or
and
and
pushw
shl
dec
je
mov
adc
mov
mov
cmp
mov
(bad)
fstp
pushf
in
sti
mov
adc
push
ins
call
jmp
dec
cmp
inc
stos
sub
lds
js
pop
adc
push
xchg
mov
push
je
rcr
arpl
pop
lods
loope
mov
dec
adc
ret
je
jmp
push
out
mov
dec
sar
loope
lea
and
mov
sbb
pushf
pop
enter
mov
sti
es
jecxz
and
and
(bad)
or
ret
bound
pop
fisttp
call
push
sub
sbb
dec
lods
ss
mov
or
fucom
jl
and
inc
push
jl
arpl
(bad)
push
in
add
bound
mov
sti
xor
addr16
rcl
push
leave
xchg
add
cmps
pop
icebp
cld
daa
lods
dec
mov
lods
cmp
test
mul
jecxz
dec
imul
ja
jl
outs
mul
sti
lods
cs
outs
iret
daa
xchg
div
mov
(bad)
mov
xchg
jp
cdq
and
retf
dec
sbb
mov
scas
rcl
popf
mov
retf
repz
xchg
shr
(bad)
cmp
div
or
mov
fdivr
inc
popa
(bad)
mov
dec
and
cmp
popa
test
jge
lock
stos
pop
clc
std
mov
add
ins
xchg
cs
test
(bad)
in
add
xor
rcr
cmp
sub
lock
sub
xor
sar
and
leave
icebp
mov
(bad)
sbb
push
mov
cmps
jl
dec
xchg
add
outs
sub
aaa
fdivr
movs
mov
div
pop
mov
aas
mov
xchg
xchg
and
sbb
pop
dec
ds
in
sahf
xchg
adc
cmp
push
loop
mov
popa
outs
sub
rol
mov
xchg
inc
pop
xchg
jecxz
and
int
fsub
add
and
aaa
in
fist
cdq
enter
iret
cld
sbb
stos
xor
and
sub
mov
movs
mov
test
pop
sub
cmp
dec
mov
push
rcl
out
mov
(bad)
out
(bad)
xchg
dec
call
jo
push
pop
fld
or
mov
push
mov
jb
movs
dec
test
xor
out
sahf
retf
pop
adc
loop
add
mov
cld
popf
(bad)
ror
sbb
sbb
jns
stos
lea
inc
and
or
inc
inc
cwde
test
mov
sub
push
sbb
fistp
xchg
mov
inc
sbb
dec
cmp
les
pop
test
mov
sub
mov
jp
jmp
pop
neg
jae
leave
add
jno
mov
dec
jmp
pop
cs
jge
(bad)
pushf
fwait
xor
cmp
fidivr
mov
mov
icebp
cwde
shl
imul
cmp
sub
nop
leave
add
sbb
ds
mov
scas
mov
or
fwait
jb
mov
push
(bad)
adc
cmps
mov
inc
(bad)
out
stc
adc
xchg
adc
xchg
cmps
add
cmps
lods
sbb
test
pop
pop
daa
inc
sbb
pop
cmps
jmp
mov
push
inc
push
ins
add
adc
fmul
xlat
in
inc
mov
or
dec
in
cs
ss
and
(bad)
imul
pop
and
push
lods
mov
ja
(bad)
ja
(bad)
repz
test
lock
inc
mov
aam
mov
sbb
stos
push
ret
sar
aam
loopne
scas
mov
ds
jp
scas
mov
push
push
cwde
xor
cmc
push
fdivr
mov
loop
sub
push
push
(bad)
push
ret
sbb
cli
cmp
mov
lock
dec
sub
retf
mov
mov
or
push
iret
push
rcr
daa
lds
call
pusha
cmp
nop
add
or
pop
jbe
inc
call
push
pushf
xchg
cwde
(bad)
fucom
imul
push
inc
je
neg
sub
popf
adc
xchg
aas
out
xchg
outs
and
mov
or
test
add
dec
pop
cmp
test
(bad)
mov
sbb
mov
mov
or
jne
sub
mov
xchg
xor
xor
push
mov
sbb
shl
sbb
dec
bound
push
add
aas
jb
lods
popa
mov
(bad)
cmp
test
mov
cmp
or
je
je
mov
lea
fsub
int
or
ins
push
cmp
dec
xlat
jns
add
sbb
shr
scas
fiadd
nop
les
movnti
push
cdq
pop
mov
push
(bad)
and
stos
icebp
pop
or
xor
push
add
syscall
fcomip
packssdw
mov
push
fstp
xchg
mov
sub
fwait
push
or
or
mov
lds
ins
aas
stos
test
mov
xchg
out
pop
int
dec
addr16
shl
dec
sub
(bad)
lods
das
cmp
pop
push
loop
ficomp
and
pop
retf
(bad)
clc
lods
cmps
pop
(bad)
mov
push
retf
(bad)
inc
or
mov
inc
or
push
cmp
xchg
cmps
mov
sub
int3
test
std
push
or
jmp
stc
add
add
in
(bad)
out
(bad)
neg
imul
fistp
mov
adc
fstp
sub
out
xchg
cs
das
mov
dec
(bad)
push
xchg
repnz
imul
pushf
cmp
lods
xchg
iret
nop
in
pop
int
cmc
stos
int3
mov
mov
jl
lock
xchg
(bad)
inc
lods
mov
sti
shr
je
adc
das
pop
fnsave
push
xchg
cmp
in
fwait
int3
lds
sbb
cmp
mov
sbb
int
dec
call
fs
std
neg
lods
lods
mov
popa
xchg
push
iret
jbe
sbb
jnp
ss
cs
outs
xor
movs
push
jns
fnsave
popa
xor
out
mov
inc
dec
addr16
sbb
fsubr
scas
lods
retf
adc
cs
fwait
arpl
cmp
arpl
stos
in
fst
xchg
aaa
sbb
adc
fimul
push
dec
scas
ror
xchg
sub
je
popa
div
fsub
in
add
dec
(bad)
dec
pop
xor
nop
adc
nop
dec
scas
and
shl
mov
jnp
addr16
pop
ja
call
xchg
leave
imul
shl
adc
or
adc
out
mov
mov
lahf
addr16
cdq
mov
cmp
test
js
lock
push
mov
loopne
push
ficom
cmp
inc
cmps
push
cli
push
add
test
xchg
iret
xchg
call
xchg
clc
push
pop
adc
jae
mov
pop
stc
lock
enter
cmp
mov
addr16
jge
dec
cli
mov
(bad)
pushf
inc
and
inc
fld
jmp
jbe
push
ficom
push
popa
push
push
inc
pop
cmp
ja
setge
and
(bad)
retf
and
cmps
fs
dec
into
mov
mov
cmps
mov
mov
sti
xor
fst
adc
enter
cwde
out
jno
daa
enter
inc
ja
cmovbe
(bad)
pop
popa
test
dec
ja
pop
mov
push
in
xchg
fwait
or
xchg
ror
mov
fbld
lods
daa
js
into
test
out
cwde
push
clc
mov
jle
mov
inc
not
test
xchg
test
jns
lods
ds
call
std
adc
pop
and
mov
shr
and
shr
ret
push
test
stos
scas
push
mov
dec
xor
popf
xchg
xchg
cs
mov
pusha
jmp
adc
xchg
jne
jp
punpckldq
les
pop
les
or
cmps
and
sbb
pop
jb
popa
daa
jmp
or
xchg
test
test
mov
in
xor
push
dec
test
repnz
bound
stc
es
push
dec
lds
popa
out
iret
or
jg
cwde
fnsave
pop
or
in
ret
dec
cmc
add
adc
fistp
int3
adc
mov
mov
sub
jno
mov
push
jno
and
loopne
cmps
shl
push
pop
push
sub
or
mov
push
ins
push
add
loop
pop
adc
or
mov
jecxz
(bad)
int3
ret
dec
lods
clc
bound
xor
sub
or
cwde
sbb
adc
fisttp
outs
xlat
and
mov
ds
mov
addr16
or
out
mov
inc
loope
sahf
jle
xor
ret
add
test
gs
nop
mov
jb
aaa
and
outs
xor
add
inc
std
mov
jle
xchg
cli
aad
sub
bound
jg
(bad)
jp
rcl
push
pop
ins
fldcw
inc
adc
lds
loope
xchg
les
imul
sti
sbb
add
cmps
imul
dec
daa
xlat
push
rcr
cmps
mov
fsubp
push
sub
mov
mov
daa
int3
repnz
(bad)
stos
cli
mov
hlt
inc
inc
adc
ret
test
hlt
gs
inc
popa
ffreep
xor
movs
push
popf
cmps
push
jmp
aad
int3
cmps
int3
xor
iret
xchg
lods
hlt
jbe
inc
xlat
inc
push
(bad)
test
std
xchg
push
aad
push
int
fs
cmp
int3
leave
ins
(bad)
outs
sub
repz
or
mov
push
push
lods
ret
adc
inc
pop
cmp
pop
cli
add
movs
fwait
(bad)
int
std
scas
push
mov
sbb
add
xchg
or
jl
push
(bad)
pop
xchg
pop
aad
xchg
mov
cmp
je
fisubr
pushf
mov
ins
daa
dec
dec
sub
lahf
ins
sub
aam
push
mov
movs
and
jecxz
xchg
rcr
xchg
or
inc
or
push
sbb
mov
imul
int3
(bad)
sub
pop
and
loope
inc
retf
loop
add
call
sti
out
scas
mov
cmps
adc
adc
cli
(bad)
repz
daa
ret
inc
lods
out
std
or
in
je
jno
push
scas
xchg
cmp
cmp
or
fidivr
nop
movs
retf
pusha
inc
es
call
mov
mov
fdivrp
test
(bad)
mov
cdq
popa
xchg
push
jno
mov
loop
dec
jge
mov
imul
lahf
lods
mov
push
push
fidiv
call
js
movs
ds
push
lods
inc
scas
dec
cmc
ret
sbb
test
inc
mov
adc
inc
cmps
test
(bad)
int3
mov
movs
lds
dec
xchg
arpl
enter
pusha
push
mov
sub
mov
ret
xchg
mov
sbb
cwde
push
aaa
test
xlat
sub
xor
inc
jo
lahf
add
mov
cmc
sbb
sub
fiadd
(bad)
cmc
and
pop
xor
cli
mov
repnz
sbb
inc
ds
xor
rol
push
sbb
data16
push
xchg
loopne
das
xlat
popf
xor
mov
jo
(bad)
push
mov
inc
pop
mov
xor
xchg
test
leave
test
dec
test
mov
gs
jb
and
call
aaa
test
mov
(bad)
(bad)
shr
inc
adc
gs
add
int
adc
rcr
push
outs
jp
out
cs
lods
cmp
push
lahf
push
pop
retf
jl
pop
mov
mov
xor
inc
inc
sub
push
mov
retf
sbb
and
cmp
mov
out
jg
mov
pop
sub
mov
and
or
cld
lods
clc
gs
adc
in
test
rol
and
shr
je
jo
hlt
sub
pop
vpmuludq
test
leave
jb
nop
cmp
dec
in
xor
test
mov
lock
pushf
mov
lea
jo
nop
out
or
ins
push
pop
mov
jno
fucomp
and
mov
lods
je
scas
adc
aam
shl
pop
aam
mov
mov
sub
int3
std
cli
cmp
test
sub
lock
adc
inc
loop
add
nop
ins
aam
adc
clc
leave
in
sub
ficom
sbb
in
sub
mov
push
ss
dec
shr
cmp
jo
mov
jns
push
out
mov
sub
jno
adc
sub
(bad)
mov
fucomi
xor
xchg
xchg
sbb
out
mov
sti
xchg
mov
lods
cmp
cmp
inc
leave
pop
out
pusha
or
mov
and
shr
jnp
movs
call
js
push
adc
movs
ins
aam
sbb
es
cmp
jo
xor
cmps
fnsave
push
cmc
xor
fbstp
loopne
cmp
icebp
xchg
sbb
aad
stc
ins
popa
pusha
test
fnstcw
pop
xchg
pop
fidivr
push
sbb
adc
(bad)
sbb
fwait
cld
inc
jns
xor
div
std
add
mov
call
std
push
adc
jb
jns
jg
push
jge
sbb
cmp
or
add
std
mov
icebp
xchg
movs
add
sub
jge
jbe
jmp
jl
out
pop
pop
imul
jo
(bad)
mov
gs
shl
mov
mov
jbe
sub
jge
or
je
outs
xchg
cmp
sahf
into
and
pop
fdecstp
lock
add
xchg
jo
cmp
add
stc
ins
xchg
mov
sti
jo
jge
test
test
cmp
fnsave
jge
neg
sbb
sbb
add
std
test
jne
mov
in
mov
std
adc
inc
mov
in
std
mov
mov
outs
mov
mov
jp
mov
xchg
repz
outs
adc
jp
xchg
(bad)
jmp
xchg
cmp
adc
add
(bad)
mov
int
lock
mov
push
popa
ins
cmc
je
jo
push
nop
stc
xor
fld
jge
jns
vpsubsb
jge
or
jns
mov
sbb
xor
pushf
cmp
jmp
pop
inc
call
popa
ret
mov
test
or
or
inc
mov
test
mov
pop
gs
pop
stos
adc
enter
loop
stos
int
adc
dec
dec
in
xchg
jmp
ret
js
pushf
jno
dec
(bad)
ror
movs
inc
inc
retf
mov
test
mov
dec
sub
or
test
inc
push
push
adc
inc
xor
jmp
test
xor
dec
sub
or
sub
adc
jbe
test
int3
or
inc
test
shr
loop
pop
pop
sub
mul
test
ror
or
lods
xor
sub
imul
or
in
add
or
or
push
pop
popa
(bad)
in
or
sub
gs
in
shr
loope
lods
test
dec
xchg
vsqrtss
push
mov
imul
push
lods
repnz
push
adc
dec
dec
pop
ror
stos
push
int
push
add
pop
test
or
loope
add
stos
inc
sbb
aaa
sub
push
and
inc
mov
dec
inc
or
in
mov
das
dec
or
rol
or
mov
loope
out
rol
into
test
add
and
push
ret
push
sub
retf
pop
imul
sub
mov
movs
xor
add
addr16
xor
ror
xor
cld
cmp
lea
into
pusha
xor
out
loopne
in
shl
push
xor
loopne
mov
ins
shr
repz
jno
subps
and
ins
and
cmp
and
jne
repnz
fldenv
jecxz
mov
mov
and
xor
loopne
mov
aas
movs
and
push
xor
lahf
cmp
lock
outs
movs
adc
jecxz
mov
icebp
mov
and
mov
pop
xchg
jne
hlt
arpl
xor
or
ror
test
cmps
ins
loopne
loopne
out
out
addr16
shl
loopne
ins
adc
les
mov
cmps
sar
in
push
xor
icebp
xor
scas
ret
jmp
and
and
mov
jecxz
adc
jecxz
in
jno
ja
iret
loopne
jmp
jmp
inc
or
mov
jecxz
movs
mov
pusha
mov
pusha
imul
imul
pop
loope
jbe
xor
ret
lahf
inc
pop
outs
pusha
mov
gs
imul
jae
lock
lods
cmc
jne
test
jmp
xor
loop
(bad)
jmp
cmp
pop
mov
mov
pop
adc
(bad)
repnz
jne
inc
pop
lods
inc
sbb
movs
fwait
pop
stos
dec
push
add
test
dec
std
mov
mov
add
or
imul
mov
test
aad
cli
mov
leave
(bad)
cmp
clc
push
in
shl
pop
sub
dec
sbb
lds
into
jg
pop
ja
dec
ins
xchg
sbb
out
or
mov
cmc
fdivr
dec
jne
cmp
into
inc
outs
adc
jmp
outs
call
pop
call
dec
bound
xchg
mov
pusha
pop
pop
das
stos
pop
xchg
push
ss
imul
retf
loope
scas
idiv
inc
sub
dec
jg
cmps
xchg
mov
out
pop
pop
push
or
and
dec
and
aas
out
mov
mov
retf
mov
(bad)
out
or
push
cs
retf
sub
inc
iret
mov
ret
cli
(bad)
pop
add
mov
retf
sbb
inc
stos
cmp
shr
and
out
cmps
jbe
mov
outs
xchg
xlat
bound
xchg
mov
add
outs
icebp
retf
xchg
push
mov
mov
outs
push
mov
xchg
pop
scas
test
push
(bad)
mov
pop
outs
push
pop
or
es
mov
mov
jne
es
inc
mov
or
cmps
sub
mov
inc
daa
mov
out
or
daa
inc
call
into
retf
iret
call
xor
push
inc
mov
mov
adc
jle
jecxz
sbb
and
sub
sti
loopne
xchg
fst
inc
pop
add
retf
stos
jae
push
pop
pop
jbe
movs
sbb
and
adc
mov
retf
jge
fdiv
sar
cmp
retf
sbb
sbb
cmps
lods
rol
loopne
or
sub
movs
xchg
loopne
or
sub
mov
movs
jnp
xlat
pop
xor
sub
cs
call
mov
retf
sbb
test
ret
mov
(bad)
dec
xor
clc
int
ja
inc
mov
jle
mov
sbb
mov
or
cld
pusha
sbb
iret
xchg
ror
jg
push
pop
cld
pusha
sbb
pop
fs
repz
leave
sub
xchg
jge
dec
add
sbb
leave
sub
dec
mov
shl
out
cld
pusha
push
enter
fwait
out
call
rep
xchg
dec
fs
mov
cmp
out
std
lahf
ret
adc
jne
xor
push
into
stos
pop
adc
sti
or
xor
xor
and
das
(bad)
sub
mov
push
mov
xchg
inc
xor
jno
stc
out
out
mov
xchg
or
(bad)
retf
cld
mov
jg
push
mov
xchg
out
xlat
push
pop
mov
and
or
ret
ja
jp
cld
push
repz
push
je
or
or
mov
wrmsr
cmp
mov
mov
xchg
pop
mov
test
mov
xchg
inc
aaa
adc
cmp
xor
je
imul
sbb
mov
sbb
pop
inc
int
setae
mov
xchg
xor
cmps
lods
or
nop
pop
or
rol
js
mov
hlt
bts
and
sub
ss
jnp
pop
out
pop
jle
sub
out
fwait
rep
push
ficomp
push
das
mov
test
mov
stc
mov
imul
jo
int3
or
sub
dec
sub
xchg
clc
repz
lahf
and
jae
add
push
mov
rcl
movs
sti
arpl
sub
stos
sub
mov
rol
or
jmp
xor
sub
mov
fwait
push
fisttp
jae
rcr
or
jmp
mov
inc
push
inc
mov
ins
cdq
or
adc
push
xchg
fwait
mov
test
(bad)
mov
pop
shl
movs
das
(bad)
fsubr
add
sub
mov
xchg
jmp
cmp
lahf
mov
xchg
cdq
repz
out
jae
pop
cs
fucomip
rep
shr
jno
seto
in
or
lods
retf
stc
jmp
clc
stos
xor
or
add
sbb
mov
xchg
retf
xor
mov
jg
lahf
jecxz
iret
fimul
retf
push
inc
imul
jp
fld
stos
data16
stos
imul
outs
and
and
add
in
or
(bad)
jmp
add
sub
add
jmp
popf
or
cmps
sub
test
sub
retf
(bad)
jmp
sbb
jb
scas
imul
hlt
dec
rcr
sub
sub
cmp
mov
push
jo
daa
mov
push
or
mov
je
and
push
pop
cmps
(bad)
shl
xchg
add
iret
mov
mov
(bad)
fisubr
push
ja
inc
es
jae
aaa
xchg
lfence
mov
je
sti
sub
scas
jmp
jnp
mov
es
sti
sbb
stos
neg
mov
cmp
cwde
out
jbe
push
mov
imul
dec
das
cmp
sub
sar
inc
ins
leave
mov
inc
jecxz
jmp
push
dec
call
jmp
imul
mov
inc
stos
jmp
inc
or
imul
jmp
sub
mov
mov
push
mov
push
scas
jmp
sub
inc
imul
sub
(bad)
jmp
jnp
sub
or
dec
or
mov
(bad)
jp
cmp
xchg
test
mov
cs
imul
dec
jmp
add
lahf
(bad)
(bad)
loopne
add
jecxz
imul
add
cs
imul
xchg
sbb
pop
int
xlat
adc
xchg
sbb
pop
xchg
jmp
les
nop
sub
int
pusha
hlt
jg
mov
jo
aam
jle
sar
sti
popa
js
and
pusha
push
sub
pusha
xchg
mov
adc
jo
nop
sub
retf
sbb
sub
test
mov
fdivr
inc
out
pusha
or
rcl
fmul
movs
adc
loopne
sub
push
(bad)
nop
mov
add
pusha
je
mov
adc
inc
or
shl
mov
jo
clc
lock
cwde
and
ret
test
cld
adc
and
inc
jo
push
nop
sub
jmp
jae
stos
and
xor
jo
adc
mov
pusha
xchg
retf
nop
rcl
mov
jg
pusha
mov
mov
lock
mov
inc
push
push
sub
popf
loopne
cmp
xor
inc
adc
xchg
aas
out
out
test
jne
rcr
fs
xchg
aam
movs
dec
sbb
adc
popa
xor
je
mov
icebp
adc
lock
push
les
ror
pop
add
mov
shr
xor
inc
jmp
add
ins
mov
pop
fdiv
(bad)
hlt
test
mov
test
adc
push
outs
pusha
jo
adc
je
xchg
cwde
cmp
xchg
pusha
leave
sbb
rol
inc
nop
xchg
xchg
and
xor
adc
push
xor
mov
mov
test
sbb
in
sti
sar
xor
aad
or
add
jo
inc
js
sti
shr
inc
jns
stos
test
adc
mov
test
inc
pop
adc
rcr
mov
pop
ret
mov
rol
sub
mov
mov
sbb
mov
scas
cli
add
inc
mov
stos
stos
mov
mov
xor
inc
add
fisubr
sti
inc
xor
push
pop
mov
(bad)
ss
rcl
fistp
enter
jne
inc
addr16
sti
pop
pop
inc
mov
pusha
sbb
fst
movs
inc
cmp
add
imul
sti
mov
sbb
mov
pop
sbb
lds
add
fwait
mov
ja
movs
mov
iret
fild
inc
inc
mov
and
sub
sar
and
sub
xchg
scas
mov
icebp
pop
mov
leave
jbe
(bad)
xor
sbb
in
fnstsw
pop
inc
fimul
sbb
dec
inc
(bad)
xchg
sti
xchg
inc
outs
or
jae
xlat
add
cmp
mov
add
pop
jp
dec
mov
clc
add
sbb
jnp
dec
or
sti
push
mov
push
test
jne
enter
push
enter
jle
into
inc
ret
iret
or
dec
outs
and
fidivr
lods
jecxz
ret
push
fld
mov
arpl
ret
mov
div
xor
xor
mov
mov
and
xor
xchg
add
rol
xor
add
jecxz
mov
mov
inc
pop
sub
adc
adc
pop
daa
cmc
popa
push
aas
ins
daa
out
in
(bad)
or
(bad)
cmp
push
stc
push
dec
ret
sub
jbe
adc
push
fcmovne
xchg
into
adc
push
pop
push
inc
push
aaa
sbb
call
outs
sub
jle
dec
sub
cli
(bad)
gs
inc
std
mov
ja
cwde
cdq
cmp
pop
out
and
test
call
stos
dec
lea
mov
cmc
(bad)
cmc
add
mov
cmc
les
xor
inc
jne
jne
mov
mov
mov
data16
out
or
mov
lea
call
mov
imul
mov
jns
movs
cmp
(bad)
ins
push
mov
aaa
jmp
cwde
rcl
inc
push
test
dec
sbb
or
loopne
sub
mov
xor
call
jne
pop
sub
xchg
push
shr
cwde
or
adc
sbb
call
jnp
pop
sbb
call
sti
call
jnp
pop
sbb
call
cmp
pop
sbb
fistp
jnp
pop
sbb
call
dec
pop
pop
ins
ret
sti
ficomp
clc
sbb
or
jae
(bad)
mov
call
pop
outs
in
fucomi
sti
stc
(bad)
mov
ja
sbb
cmc
test
mov
pop
jbe
jg
sbb
out
fcomi
mov
jbe
imul
scas
call
mov
sbb
aam
mov
call
adc
das
ja
fwait
mov
(bad)
div
ja
dec
sbb
aam
jmp
sbb
push
sbb
(bad)
mov
sti
leave
jnp
push
jnp
sbb
call
jmp
in
nop
adc
inc
stos
pop
sbb
mov
dec
pop
push
pushf
xchg
rcr
ret
(bad)
sbb
mov
ds
outs
add
jno
and
push
test
outs
mov
out
push
clc
shr
xor
push
mov
jne
jg
ins
mov
pop
int
in
mov
mov
xchg
je
xor
xor
mov
lock
or
or
lods
cmp
stos
or
cmp
je
jg
fimul
fidivr
js
ins
mov
aam
test
push
mov
pop
cmps
jge
push
aad
xchg
jbe
not
jmp
xor
xor
xchg
xchg
jle
sub
pusha
mov
aaa
cli
jge
push
shr
mov
mov
test
pop
xchg
aas
fistp
(bad)
call
(bad)
(bad)
jge
gs
jne
jle
inc
outs
jge
cld
mov
dec
xor
mov
inc
push
hlt
mov
jbe
xchg
hlt
out
loopne
div
mov
sbb
fidivr
fcmovu
pop
enter
mov
das
loope
add
loope
cmps
das
loope
sub
wrpkru
loope
cmps
das
loope
sub
imul
mov
movs
sub
xor
mov
or
outs
pop
rcl
in
xor
add
lods
or
shr
ins
mov
inc
mov
cmp
addr16
aad
jne
movs
inc
or
in
ror
test
(bad)
jnp
out
test
das
test
add
arpl
shr
sub
push
(bad)
jl
das
mov
setne
jge
or
push
in
sbb
fwait
pop
dec
or
icebp
and
retf
push
sub
mov
scas
(bad)
push
sub
pop
dec
pop
div
out
out
leave
mov
pop
ror
xchg
and
push
mov
pop
sub
pop
popa
jmp
pop
movs
outs
out
pop
dec
xlat
mov
retf
dec
js
and
inc
mov
push
or
movs
mov
cmp
es
inc
popf
cs
mov
sbb
cmp
(bad)
sbb
nop
sbb
stos
mov
test
imul
cmps
mov
fdivr
or
sahf
sbb
in
dec
sbb
dec
sbb
dec
clc
mov
mov
movntps
in
mov
sbb
mov
in
iret
jmp
or
mov
dec
ins
cmp
fwait
out
fcomp
or
fistp
movs
cmps
and
dec
dec
lods
or
les
dec
pop
sbb
cs
call
ins
or
mov
std
(bad)
ins
test
push
inc
or
cs
jmp
dec
(bad)
das
pop
pop
dec
mov
movs
int
lea
or
stc
mov
scas
(bad)
lods
sub
test
in
call
aam
sbb
and
outs
pop
test
test
sub
lea
cmp
pop
mov
sub
add
or
(bad)
enter
(bad)
test
inc
sbb
jns
jmp
popf
or
imul
and
repnz
sub
or
ds
int
out
mov
outs
popf
pop
out
sub
mov
loopne
ss
lahf
loop
sbb
jg
cli
nop
fld
mov
lock
hlt
mov
mov
es
pop
pop
dec
imul
nop
cwde
push
mov
dec
jmp
jl
sbb
xor
outs
in
mov
xchg
and
into
adc
pop
sti
adc
arpl
std
aas
push
retf
jmp
jg
push
jmp
or
bnd
(bad)
out
adc
repz
das
pusha
(bad)
jne
aad
in
shr
push
frstor
addr16
sbb
rcr
mov
fbstp
cmp
fdivr
lea
push
ins
push
(bad)
or
mov
imul
push
imul
(bad)
jb
ficom
nop
into
repz
xchg
scas
loopne
cmc
mov
int
(bad)
push
lods
data16
rcr
dec
out
addr16
loopne
inc
pushf
inc
lock
pop
lock
cmp
pushf
pop
cli
inc
lea
(bad)
in
rcr
or
aas
jb
cli
daa
mov
stos
popa
cmps
sub
ds
cmp
fdiv
(bad)
repnz
out
outs
dec
jb
push
(bad)
mov
sbb
jne
fiadd
jb
icebp
xchg
mov
or
xor
aad
retf
mov
out
daa
jge
pop
aaa
sti
(bad)
or
xlat
mov
arpl
or
imul
mov
ins
das
dec
daa
pop
aaa
lea
cmp
fs
(bad)
mov
mov
das
das
add
inc
add
pushf
jae
sub
and
adc
cmps
out
fdivr
mov
inc
neg
sbb
mov
or
in
int3
cdq
jb
ins
mov
hlt
(bad)
pusha
gs
sub
ins
nop
ds
dec
adc
in
cmc
test
add
push
jmp
inc
dec
adc
mov
and
sub
push
lods
and
in
test
loopne
mov
jecxz
fild
leave
inc
dec
mov
jbe
mov
cmp
ds
stos
mov
aaa
out
dec
out
jbe
imul
mov
mov
push
adc
mov
aad
not
btr
and
push
cli
movs
and
mov
and
jmp
icebp
mov
xor
push
dec
loope
rcr
repz
add
cdq
loop
mov
ins
mov
lock
xchg
in
mov
mov
jg
pop
cmp
xchg
bound
ins
push
push
xor
(bad)
cdq
aam
mov
leave
inc
out
pop
into
pop
repz
cdq
jno
pop
and
push
inc
sar
sub
jno
pop
dec
mov
dec
pop
(bad)
mov
push
sbb
cs
mov
leave
ret
sbb
xor
mov
(bad)
clc
mov
push
push
sbb
mov
inc
cdq
sahf
mov
push
add
popa
shl
cdq
sub
add
mov
setns
jl
aam
inc
addr16
push
cld
and
faddp
push
push
popa
and
sti
dec
in
stos
mov
jo
pop
dec
cmp
xchg
dec
pusha
frstor
imul
xor
popa
xor
scas
and
inc
and
adc
mov
push
sub
stc
es
pop
add
mov
push
shl
ret
hlt
mov
enter
test
les
push
in
adc
mov
into
(bad)
lock
push
sub
sub
daa
push
adc
mov
inc
rcl
jo
imul
loopne
add
out
rcr
add
jns
mov
cmp
pop
into
add
ror
adc
lods
mov
test
gs
and
neg
sub
push
xor
arpl
mov
and
jp
pop
or
add
add
cmp
jg
mov
popa
and
call
dec
loopne
dec
ja
cdq
std
fist
mov
add
cmp
adc
mov
jno
mov
shl
shr
loope
add
push
push
adc
inc
mov
inc
mov
mov
in
xchg
jne
ret
leave
inc
out
mov
or
test
stos
mov
jae
dec
xor
pop
mov
test
fdivp
addr16
mov
inc
and
or
imul
xchg
jnp
lock
xchg
dec
adc
jmp
push
xchg
cdq
cmps
mov
(bad)
mov
inc
cmp
cmps
hlt
jle
jmp
xchg
in
fld
jnp
push
ret
call
jp
mov
jmp
jl
xchg
jne
sub
fistp
fisubr
push
mov
or
pushf
retf
or
call
jp
inc
loop
jnp
xchg
xor
mov
dec
call
nop
jae
lahf
xor
jp
inc
rcl
stc
push
sub
pop
neg
xchg
cmp
jnp
movs
out
aaa
jne
add
cdq
ds
imul
jge
jno
sub
ja
adc
or
idiv
jp
hlt
mov
push
push
int
cmp
jmp
jbe
xchg
sbb
ret
enter
das
dec
push
inc
retfw
mov
int3
shr
or
cmps
sub
ja
pushf
sbb
aad
out
xor
bound
and
lea
mov
or
out
lock
mov
stos
pop
mov
pusha
fadd
sahf
mov
sti
xor
outs
mov
sbb
rcr
in
push
fs
mov
jecxz
nop
push
loopne
cmp
jmp
bound
add
paddsb
and
pusha
mov
adc
mov
push
test
add
loopne
iret
popa
inc
pusha
adc
jb
or
adc
mov
push
add
push
push
sbb
add
add
rol
push
xchg
jmp
repz
and
xchg
(bad)
stos
into
xchg
lahf
nop
and
out
icebp
loopne
xchg
adc
data16
or
out
adc
add
dec
adc
push
sub
xchg
cmp
xor
push
push
sbb
xchg
dec
and
ins
adc
and
mov
inc
add
lock
push
mov
loopne
mov
rcl
rol
hlt
push
and
and
xor
mov
push
mov
xor
mov
rcl
and
adc
pop
repz
pop
push
aaa
jmp
fwait
sub
mov
(bad)
(bad)
fs
aaa
call
sub
mov
pop
mov
adc
cli
mov
dec
mov
xor
sbb
cli
jmp
pushf
es
sbb
and
sbb
retf
inc
imul
sti
and
jg
sti
movs
and
rol
jmp
xlat
stos
in
test
mov
cs
outs
mov
xchg
pop
mov
dec
aad
rcl
aam
cmp
xchg
into
sub
das
cmp
dec
xor
adc
(bad)
aam
test
(bad)
fld
vunpcklps
into
clc
sub
and
fdivr
mov
inc
mov
or
sub
or
cmps
ror
push
hlt
xor
jne
jecxz
sbb
mov
pop
aam
pop
aam
fld
xor
je
imul
into
jne
movs
pop
push
mov
fist
shl
fs
sbb
movs
or
and
push
sub
cmp
loope
movs
ret
xor
or
jnp
retf
mov
stos
jg
push
inc
arpl
push
pop
in
scas
dec
inc
dec
mov
jo
sub
pop
(bad)
repz
sub
and
push
or
pop
sbb
adc
cs
cmps
bound
xor
pop
dec
loopne
add
gs
jl
out
mov
or
aas
sub
retf
mov
xchg
loope
outs
outs
cli
push
or
add
adc
std
pop
xchg
dec
mov
sbb
mov
out
call
(bad)
and
test
(bad)
in
loope
imul
(bad)
inc
cmp
loope
aas
xor
iret
jle
mov
jge
rcl
jmp
cli
dec
cmp
call
in
aaa
or
scas
aas
das
push
cmp
int3
(bad)
or
mov
pop
in
mov
mov
ret
dec
inc
ficomp
hlt
xlat
or
out
dec
jle
out
out
jg
(bad)
mov
pop
pop
dec
pop
pop
jbe
and
enter
mov
mov
cs
lods
int
or
xor
pop
cmc
jmp
push
test
pop
mov
jle
dec
jg
adc
lods
mov
pusha
dec
push
ins
fs
push
fdiv
int3
js
and
jle
mov
sub
sbb
sbb
or
test
push
xor
aam
xchg
mov
jle
outs
or
test
mov
bnd
pop
movs
adc
mov
cmc
jle
ins
std
jle
xchg
call
(bad)
pop
ds
xchg
mov
mov
arpl
mov
or
mov
mov
cmps
fmul
jbe
ja
jle
jle
data16
jl
fisttp
pushf
xchg
popa
cs
dec
aaa
lock
xchg
pop
or
inc
lds
test
mov
js
cmp
mov
mov
fnstsw
or
dec
or
int3
or
cmp
or
cmp
push
leave
cmp
mov
cli
jns
(bad)
mov
in
pop
or
mov
mov
cmp
imul
mov
jns
or
mov
dec
push
jle
xchg
or
jp
dec
stc
in
cmp
leave
push
fdiv
ins
or
retf
dec
das
xchg
dec
int3
sbb
clc
or
pop
pushf
mov
cli
xchg
mov
mov
jle
sub
sub
or
sub
cld
sub
outs
lods
imul
out
(bad)
pushf
cld
ja
jle
cli
add
stc
pushf
jns
sbb
pop
jmp
push
call
call
shl
fbstp
int
paddw
(bad)
fimul
fmul
pop
pop
ins
mov
sbb
cdq
sbb
(bad)
std
sub
sbb
xchg
mov
call
clc
lods
bound
call
jp
push
xchg
lock
cli
mov
ds
cwde
lds
cdq
push
jmp
aam
aad
icebp
dec
into
lods
jno
xor
jae
sub
sbb
add
dec
mov
mov
mov
jg
jecxz
int
sub
dec
int3
dec
ror
dec
push
call
cwde
adc
xor
mov
hlt
sbb
sub
outs
cwde
dec
icebp
cs
fsubr
fisttp
jge
add
adc
clc
jmp
jae
xchg
(bad)
out
add
rcl
cmp
xor
or
data16
and
mov
popf
mov
push
in
lods
jne
lds
mov
out
(bad)
pusha
sbb
mov
rcl
out
mov
push
cmp
pop
xlat
jg
adc
ins
add
fsub
sbb
adc
mov
and
retf
jmp
sub
dec
sub
aaa
add
xor
repnz
push
leave
push
or
and
shr
out
xor
cmp
loope
mov
loope
clc
outs
cmp
ja
jge
xor
jae
shr
sub
cmp
nop
dec
mov
xor
enter
sub
ja
cmp
ret
lahf
xchg
adc
jg
aaa
aaa
das
lds
cmp
out
pop
xor
and
pop
test
jmp
push
stc
shr
sbb
push
mov
call
mov
cmp
loop
xchg
aaa
les
xlat
aam
mov
inc
and
xchg
or
adc
or
lahf
fdiv
xor
pop
cs
push
pop
test
stos
and
out
hlt
push
dec
movs
lea
gs
sti
call
ds
fs
jae
int3
pop
jge
jne
imul
cmp
push
add
inc
push
aaa
pop
int
sub
xchg
mov
dec
imul
or
or
mov
mov
dec
cmovle
dec
or
inc
add
add
out
add
or
push
dec
out
mov
and
add
add
inc
add
jmp
leave
mov
dec
push
dec
outs
or
or
dec
or
jecxz
rol
or
push
mov
(bad)
jecxz
add
or
add
pop
inc
out
lds
add
or
mov
mov
dec
or
or
outs
inc
add
test
test
inc
add
cmp
push
or
mov
mov
dec
push
dec
outs
cmovge
add
loop
add
add
pusha
inc
pop
inc
out
mov
add
or
mov
mov
dec
or
push
dec
movd
in
mov
mov
dec
or
or
loop
ret
inc
add
add
addr16
push
inc
in
sti
mov
outs
push
dec
push
outs
dec
cmovle
mov
idiv
es
pop
push
mov
lods
xor
adc
push
addr16
jnp
shr
(bad)
(bad)
not
jmp
js
cs
and
out
repnz
and
movs
cmp
imul
mov
outs
add
jns
mov
clc
mov
test
nop
pop
mov
fld
mov
daa
ror
jge
sub
aam
push
ret
outs
and
and
adc
jg
push
inc
(bad)
outs
mov
movs
and
xor
cdq
in
xchg
xor
xor
xchg
adc
pop
pop
sub
ins
mov
pop
cmp
mov
imul
cmc
adc
fcmovb
adc
ja
xor
or
loop
js
jle
jns
call
jecxz
pop
sbb
iret
xor
and
enter
push
xchg
add
int3
loopne
sbb
lods
mov
push
scas
or
(bad)
in
imul
and
dec
sbb
mov
mov
jne
fist
pusha
cmp
inc
jp
jae
sbb
addr16
pop
sbb
fidivr
cdq
ja
add
push
adc
add
mov
sbb
and
call
push
xchg
popa
or
mov
(bad)
xchg
out
jmp
push
inc
iret
sub
aad
cmp
mov
mov
out
aaa
jne
cmp
daa
repz
pusha
mov
push
mov
bound
sahf
push
mov
cmp
stc
jecxz
and
xchg
leave
gs
fwait
jecxz
rcl
(bad)
addr16
xor
xor
call
out
jle
sub
imul
sahf
lods
icebp
xor
xchg
inc
shr
in
mov
jns
inc
test
fs
xchg
fidivr
out
pop
fist
lea
test
inc
mov
dec
sub
jo
dec
sti
push
pushf
mov
jge
ins
stos
lahf
icebp
test
mov
shl
xchg
push
push
leave
mov
stos
cmp
dec
xchg
push
mov
mov
fstp
jmp
jle
jns
dec
ror
mov
(bad)
sub
sub
sub
xlat
call
sub
push
mov
rol
cld
test
mov
ja
movs
(bad)
jmp
call
push
xor
pop
xchg
mov
ret
jle
cs
mov
enter
mov
dec
mov
sti
jo
cld
data16
and
and
mov
aam
jmp
and
mov
leave
out
sbb
mov
pop
add
or
or
rcr
pop
vmovhps
inc
pop
or
loop
jnp
adc
clc
call
sub
cld
mov
shl
push
cs
or
aad
xchg
stos
push
mov
shl
xchg
jg
pop
sbb
or
cmp
mov
movs
fcomip
push
mov
in
and
sub
and
inc
sar
js
pop
and
ret
imul
retf
daa
inc
es
jl
pop
sahf
sbb
lods
int
sar
push
add
or
mov
pop
xor
cmp
cmp
inc
(bad)
pop
dec
and
sbb
mov
(bad)
jmp
in
call
sub
xchg
sub
jne
or
retf
shr
call
cmp
and
in
jnp
ja
xlat
mov
(bad)
stc
lea
pop
enter
jle
push
xor
adc
loop
xchg
out
xchg
stc
test
mov
xor
jo
sub
aad
pop
loope
rol
sbb
dec
div
push
retf
rcr
mov
jo
je
sbb
inc
push
aas
dec
popf
fild
mov
jmp
xchg
or
les
inc
punpcklbw
sub
movs
mov
int
mov
dec
outs
icebp
sub
dec
mov
stos
sti
in
sub
xlat
and
adc
mov
sub
nop
and
gs
lods
outs
lods
ret
popf
xlat
ins
ror
cmps
popf
movs
dec
je
data16
leave
(bad)
addr16
pop
cs
in
ret
fwait
shl
mov
push
mov
ror
jl
xor
pop
sub
add
and
int3
xchg
fist
mov
add
ror
sub
(bad)
dec
mov
dec
lea
cmp
jge
mov
add
cmp
mov
jl
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
lea
mov
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pusha
inc
add
add
add
add
push
push
add
push
push
push
push
push
push
push
push
add
push
push
pop
pop
or
or
or
or
int3
int3
int3
int3
mov
mov
push
push
push
call
add
neg
sbb
neg
ret
int3
int3
int3
test
je
mov
and
shl
add
cmp
jne
mov
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
cmp
push
push
jne
mov
mov
cmp
jne
cmp
mov
jne
mov
cmp
jne
mov
mov
mov
mov
mov
sub
sar
sub
jmp
or
push
lea
push
push
call
mov
add
test
mov
jne
push
push
push
call
mov
and
add
cmp
ja
movzx
jmp
mov
shr
shr
and
cmp
jge
mov
cmp
mov
je
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
mov
shr
shl
mov
mov
pop
pop
add
pop
mov
mov
pop
ret
shr
and
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
mov
test
je
mov
shr
mov
pop
pop
add
pop
mov
mov
pop
ret
mov
pop
pop
mov
pop
mov
mov
pop
ret
shr
and
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
mov
jg
inc
add
popa
inc
add
popa
inc
add
bound
lahf
popa
inc
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
cmp
jne
mov
cmp
jne
cmp
jg
mov
cmp
jne
mov
cmp
jne
mov
sub
cmp
jne
mov
cmp
jne
cmp
jne
mov
mov
mov
mov
mov
sub
sar
sub
jmp
or
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
jne
mov
push
shr
push
and
push
call
add
pop
ret
xor
pop
ret
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
mov
mov
cmp
jne
mov
cmp
jne
push
mov
mov
call
mov
cmp
mov
jne
mov
cmp
jne
mov
jmp
xor
mov
push
add
push
lea
push
call
mov
push
push
lea
push
push
push
call
add
pop
mov
pop
xor
call
add
ret
int3
int3
int3
int3
push
mov
mov
test
je
push
mov
add
cmp
je
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
pop
cmp
jg
push
push
call
add
add
mov
push
add
push
push
call
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
lea
push
push
push
call
push
call
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
mov
xor
cmp
mov
jne
mov
mov
mov
or
push
mov
mov
mov
lea
push
push
mov
mov
call
add
pop
pop
mov
lea
pop
pop
ret
mov
mov
cmp
je
jmp
lea
movsx
add
cmp
ja
movzx
jmp
mov
mov
call
jmp
cmp
je
mov
mov
call
mov
jmp
or
mov
jmp
movzx
mov
jmp
cmp
je
mov
lea
push
mov
call
mov
add
jmp
xor
cmp
mov
jne
mov
mov
jmp
mov
mov
add
mov
mov
cmp
jne
mov
pop
pop
pop
pop
ret
dec
gs
add
fs
add
fs
add
gs
add
gs
add
inc
add
add
add
add
add
add
add
add
add
int3
push
push
mov
push
mov
xor
xor
cmp
push
mov
jne
mov
mov
add
add
mov
jmp
mov
test
je
mov
lea
mov
mov
lea
push
push
push
push
call
push
push
mov
call
add
test
je
test
mov
jne
mov
jmp
mov
mov
mov
sub
cmp
jg
push
push
call
add
add
push
push
call
add
test
je
call
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
cmp
jae
lea
cmp
je
add
cmp
jb
mov
push
push
push
push
call
add
pop
pop
pop
pop
ret
sub
lea
push
push
sar
push
call
add
test
je
mov
push
push
push
mov
push
push
push
call
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
mov
mov
cmp
je
cmp
jne
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
lea
push
push
call
add
test
mov
je
mov
mov
push
push
push
call
add
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
cmp
jne
push
mov
push
push
call
add
xor
ret
push
mov
push
push
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
push
mov
push
mov
mov
mov
push
mov
push
push
push
push
call
mov
add
test
jne
test
jbe
mov
push
push
call
add
sub
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
mov
mov
cdq
push
mov
mov
sub
sar
cmp
jl
cmp
jl
mov
push
push
call
add
jmp
lea
cmp
jge
mov
mov
xor
mov
div
push
lea
cmp
pop
ja
mov
mov
imul
imul
mov
push
push
push
push
call
add
mov
pop
pop
pop
ret
push
push
call
add
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmp
je
push
push
mov
lea
cmp
push
ja
lea
push
push
push
push
call
add
jmp
push
call
add
test
mov
mov
jle
mov
xor
mov
rep
mov
xor
cmp
mov
jle
mov
mov
test
je
lea
mov
mov
and
test
mov
mov
mov
mov
jne
mov
mov
mov
add
cmp
mov
jl
mov
mov
add
push
add
push
push
push
call
add
mov
pop
mov
pop
pop
pop
pop
ret
int3
push
mov
lea
cmp
push
jbe
push
call
add
lea
push
push
push
push
call
mov
mov
mov
mov
mov
mov
push
push
lea
and
push
mov
mov
mov
call
mov
mov
mov
mov
sub
and
mov
mov
mov
mov
add
mov
mov
add
cmp
jbe
cmp
jg
add
push
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
mov
mov
shr
add
cmp
mov
mov
mov
jb
movzx
mov
shl
add
mov
shr
add
sub
xor
cmp
jae
mov
mov
mov
mov
mov
sub
and
mov
test
je
jmp
lea
cmp
jne
cmp
mov
lea
jb
mov
cmp
jne
sub
add
add
cmp
jae
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
je
test
mov
mov
jg
or
jmp
mov
xor
test
je
mov
mov
test
jne
push
mov
push
call
add
pop
pop
pop
pop
ret
mov
mov
mov
movzx
movzx
not
and
test
je
pop
pop
xor
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
cmp
jbe
push
call
add
lea
push
push
push
push
call
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
mov
pop
ret
int3
push
mov
mov
mov
add
cmp
jbe
cmp
jb
push
push
push
call
add
mov
push
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
pop
mov
mov
mov
mov
add
pop
ret
int3
int3
push
push
push
mov
xor
lea
mov
mov
lea
lea
mov
add
test
jne
sub
push
push
push
call
or
mov
add
add
add
cmp
mov
jl
pop
pop
pop
ret
int3
int3
push
mov
cmp
jge
push
call
add
test
push
je
mov
mov
push
push
call
add
pop
ret
mov
mov
push
push
call
add
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
push
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
test
je
cmp
jl
cmp
jg
push
call
mov
mov
add
jmp
push
push
call
add
push
mov
push
push
push
call
add
mov
push
push
call
mov
add
pop
pop
xor
call
add
ret
int3
int3
mov
mov
mov
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
mov
push
mov
push
push
push
push
call
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
mov
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
cmp
jne
cmp
je
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
mov
add
cmp
pop
jl
mov
push
push
push
call
add
ret
int3
int3
int3
int3
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
lea
add
test
mov
mov
jbe
mov
movzx
add
mov
mov
pop
ret
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
call
add
test
jne
pop
ret
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
mov
mov
pop
ret
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
call
test
mov
mov
je
mov
movsx
jmp
mov
mov
mov
mov
test
mov
je
lea
mov
sub
cmp
jne
mov
test
jne
mov
mov
push
push
call
add
test
jne
mov
mov
test
mov
mov
je
sub
cmp
jne
mov
test
jne
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
add
cmp
mov
jbe
cmp
jb
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
push
push
call
add
mov
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
mov
mov
mov
mov
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
push
mov
call
add
test
jne
cmp
je
mov
mov
call
test
je
mov
mov
call
nop
mov
push
call
add
test
jne
cmp
jne
mov
mov
mov
mov
add
cmp
mov
jbe
cmp
jb
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
push
push
call
add
mov
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
mov
mov
mov
mov
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
mov
jmp
mov
push
call
add
mov
jmp
push
mov
call
mov
mov
mov
mov
add
test
pop
pop
je
sub
cmp
jne
mov
test
jne
mov
mov
mov
push
push
call
add
test
jne
mov
call
mov
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
push
mov
mov
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
lea
mov
mov
mov
mov
add
cmp
mov
jbe
cmp
jb
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
push
push
call
add
mov
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
mov
mov
mov
mov
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
add
cmp
mov
je
mov
mov
cmp
jne
pop
mov
pop
pop
mov
xor
call
add
ret
mov
or
pop
sub
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
mov
mov
push
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
cmp
jne
mov
call
mov
lea
cmp
ja
movzx
jmp
test
mov
jne
mov
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
push
push
call
mov
push
push
call
add
jmp
mov
call
cmp
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
test
mov
jne
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
add
test
push
je
mov
push
push
jmp
mov
push
push
call
mov
add
push
push
push
push
call
mov
push
push
call
add
jmp
mov
call
cmp
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
push
call
add
mov
call
test
jne
mov
mov
jmp
test
je
push
call
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
mov
jmp
mov
push
call
add
mov
jmp
mov
push
call
add
test
mov
je
mov
mov
mov
mov
lea
sub
sub
push
lea
push
push
call
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
pop
pop
pop
pop
xor
call
add
ret
nop
fbstp
inc
jbe
add
jne
add
jbe
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
push
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
mov
lea
cmp
ja
movzx
jmp
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
push
push
call
mov
push
push
call
add
jmp
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
jmp
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
lea
cmp
mov
ja
movzx
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
push
call
add
mov
call
jmp
push
call
add
test
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
xor
xor
mov
mov
lea
lea
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
add
cmp
mov
jge
push
call
add
test
jne
cmp
jle
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
push
call
add
jmp
mov
push
call
add
mov
cmp
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
mov
mov
mov
mov
mov
sub
push
add
push
push
call
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
ret
mov
mov
mov
pop
pop
pop
pop
xor
call
add
ret
lea
or
inc
add
add
js
add
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
add
or
or
or
add
or
or
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
mov
mov
xor
push
mov
mov
lea
cmp
ja
movzx
jmp
call
jmp
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
call
cmp
mov
mov
jl
push
mov
mov
call
mov
add
mov
jmp
cmp
je
jmp
lea
mov
cmp
je
cmp
je
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
jmp
push
call
add
test
je
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
mov
jmp
mov
push
call
add
mov
jmp
pop
pop
pop
mov
pop
mov
xor
call
add
ret
call
cmp
jl
push
mov
mov
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
cmp
jne
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
xor
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
push
mov
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
push
push
mov
call
mov
add
test
push
je
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
mov
mov
mov
call
neg
pop
sbb
pop
neg
pop
add
pop
mov
xor
call
add
ret
call
add
test
jne
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
test
jne
mov
push
call
add
test
jne
mov
cmp
je
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
ret
mov
push
call
add
mov
mov
pop
pop
pop
pop
mov
xor
call
add
ret
lea
mov
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
push
mov
call
add
test
jne
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
jbe
pop
pop
movzx
pop
add
pop
mov
xor
call
add
ret
mov
pop
pop
mov
pop
pop
xor
mov
call
add
ret
cmp
inc
add
add
inc
add
test
add
jg
add
jge
add
inc
add
inc
add
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
add
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
lea
push
mov
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
push
mov
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
mov
sub
mov
mov
lea
lea
mov
add
test
jne
sub
push
push
push
call
mov
mov
mov
mov
or
add
add
cmp
jl
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
call
add
cmp
jne
mov
mov
shl
or
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
je
sub
je
mov
mov
jmp
mov
mov
jmp
mov
mov
test
je
mov
mov
mov
push
push
call
add
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
fcomp
fnstsw
test
jp
mov
ret
mov
mov
push
add
mov
mov
shl
xor
sub
or
div
pop
mov
shl
add
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
add
cmp
push
ja
jmp
fld
sub
fstp
call
add
pop
pop
ret
mov
mov
shl
mov
pop
sub
and
shl
add
pop
ret
mov
mov
shl
pop
sub
and
shl
add
pop
ret
mov
mov
mov
shl
xor
sub
or
div
pop
mov
shl
add
pop
ret
lea
add
inc
add
inc
add
test
jmp
inc
or
push
mov
jne
or
pop
add
ret
cmp
jne
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
test
jle
cmp
jg
add
pop
add
ret
push
mov
mov
call
mov
push
jmp
lea
lea
push
push
call
add
test
jne
cmp
jne
cmp
jl
mov
cmp
je
mov
test
jne
mov
push
push
call
add
pop
pop
xor
pop
add
ret
mov
sub
pop
sar
add
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
push
mov
push
push
call
mov
add
add
cmp
jge
mov
mov
shl
lea
nop
cmp
jne
add
add
cmp
jl
sub
mov
mov
shl
cmp
jge
mov
mov
shl
lea
jmp
lea
cmp
jne
add
add
cmp
jl
pop
pop
xor
pop
ret
lea
mov
fild
mov
shl
fstp
add
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
shl
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
push
push
mov
push
push
xor
xor
xor
cmp
lea
jle
mov
lea
mov
mov
test
jle
add
mov
cdq
sub
sar
cmp
jle
mov
mov
cmp
je
add
add
mov
cdq
sub
sar
cmp
jl
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
push
push
xor
mov
mov
mov
mov
mov
xor
cmp
mov
jle
mov
cmp
jg
jmp
cmp
jg
mov
mov
mov
sub
shl
add
lea
add
cmp
je
add
add
sub
jne
mov
add
add
add
add
cmp
jle
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
push
mov
shl
push
mov
mov
test
je
mov
shl
mov
sub
add
sub
cmp
je
cmp
jne
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
test
jle
cmp
jg
add
push
call
mov
lea
add
add
mov
jmp
xor
add
add
test
jne
mov
mov
add
mov
pop
pop
mov
pop
ret
mov
mov
add
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
cmp
ja
mov
mov
shl
push
mov
shl
push
push
push
call
add
jmp
push
call
add
mov
cmp
mov
jge
mov
mov
shl
sub
xor
push
mov
mov
add
sub
jne
pop
mov
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
xor
cmp
jne
xor
shl
mov
add
mov
mov
pop
pop
pop
ret
add
push
call
mov
add
add
cmp
jle
mov
push
push
call
add
mov
mov
shl
lea
cmp
ja
mov
mov
shl
push
push
push
push
call
add
jmp
mov
push
call
add
cmp
mov
jle
xor
mov
nop
mov
add
add
sub
mov
mov
mov
jne
shl
add
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
xor
push
push
push
call
mov
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
mov
call
add
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
push
mov
je
mov
mov
shl
push
shl
push
push
push
call
add
mov
mov
push
shl
push
push
push
call
push
push
push
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
lea
cmp
jae
mov
shl
lea
pop
add
ret
fild
fst
fldz
fucomp
fnstsw
test
jp
mov
jmp
mov
mov
push
add
mov
mov
shl
xor
sub
or
div
pop
shl
add
mov
cmp
jne
fcom
fnstsw
test
jnp
mov
test
jne
mov
fstp
pop
add
ret
mov
fstp
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
shl
mov
sub
and
shl
add
mov
cmp
jne
cmp
je
mov
test
jne
mov
ret
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
sub
je
sub
je
sub
jne
mov
pop
add
mov
jmp
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
mov
push
push
call
add
pop
add
ret
mov
push
mov
call
mov
lea
lea
push
push
call
add
test
jne
mov
test
jne
pop
mov
pop
add
ret
mov
pop
pop
add
ret
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
call
add
cmp
mov
jne
mov
test
push
mov
jne
push
jmp
cmp
jne
fld
fld
fucompp
fnstsw
test
jnp
push
push
call
add
push
push
push
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
push
push
call
add
cmp
jne
fild
mov
lea
push
push
fstp
push
mov
call
add
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
add
push
push
mov
call
add
cmp
je
mov
mov
add
cmp
ja
push
push
call
add
cmp
jne
mov
sub
cmp
jbe
push
lea
shr
push
push
call
add
cmp
jne
mov
jmp
mov
push
push
call
add
cmp
je
add
push
push
call
add
cmp
jne
lea
pop
pop
pop
ret
mov
mov
sub
cmp
ja
pop
pop
pop
mov
pop
ret
mov
mov
test
push
jbe
mov
mov
shl
cmp
jne
xor
cmp
jbe
push
lea
shr
mov
shl
cmp
jne
mov
jmp
mov
mov
sub
cmp
ja
pop
mov
pop
ret
cmp
je
pop
mov
jmp
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
movzx
mov
cmp
mov
push
mov
mov
jle
mov
mov
call
mov
mov
push
mov
call
add
cmp
jge
lea
mov
mov
mov
shl
mov
mov
mov
mov
sub
jmp
lea
mov
mov
cmp
lea
je
mov
push
push
call
add
cmp
jne
fild
mov
lea
push
push
fstp
push
mov
call
add
mov
mov
mov
mov
mov
mov
mov
add
add
sub
jne
cmp
ja
mov
mov
push
shl
push
push
push
call
add
mov
jmp
mov
push
call
mov
add
mov
jmp
mov
mov
mov
shl
lea
test
mov
jl
mov
mov
shl
lea
cmp
je
push
push
call
add
cmp
mov
jne
mov
test
jne
push
jmp
cmp
jne
fld
fld
fucompp
fnstsw
test
jnp
push
push
call
add
push
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
sub
sub
test
jge
mov
cmp
je
push
shl
push
push
push
call
add
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
xor
push
mov
push
push
call
add
ret
mov
mov
shl
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
push
call
lea
push
lea
push
mov
mov
call
add
add
cmp
jne
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
test
jle
cmp
jg
add
push
call
lea
add
add
mov
jmp
xor
add
lea
push
lea
call
mov
mov
sub
add
push
push
push
mov
call
add
pop
pop
add
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
mov
call
mov
cmp
jne
cmp
jne
mov
cmp
mov
jbe
add
mov
cmp
je
mov
cmp
ja
add
jmp
test
jne
mov
push
mov
mov
call
push
push
push
call
add
pop
pop
pop
pop
ret
lea
mov
call
cmp
je
cmp
je
mov
cmp
jne
mov
mov
mov
rep
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jl
mov
test
je
test
je
mov
push
push
call
add
pop
pop
mov
pop
pop
ret
int3
int3
int3
sub
push
mov
push
mov
push
push
call
add
cmp
jne
mov
lea
push
push
push
mov
mov
call
add
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movzx
and
sub
cmp
ja
push
mov
mov
jmp
mov
or
test
je
test
je
push
push
call
add
mov
test
je
and
movzx
sub
cmp
jbe
pop
pop
ret
mov
cmp
jl
mov
test
je
push
push
call
add
lea
cmp
jne
or
pop
pop
ret
mov
mov
mov
pop
pop
ret
mov
mov
mov
pop
pop
ret
mov
mov
mov
pop
pop
ret
mov
mov
mov
pop
pop
ret
adc
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
push
push
mov
mov
xor
test
je
mov
test
jne
cmp
je
test
je
mov
jmp
mov
test
je
test
jne
mov
mov
mov
push
push
push
call
add
test
jne
or
mov
jmp
or
mov
mov
mov
mov
test
lea
jne
mov
jmp
mov
mov
mov
mov
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
push
xor
cmp
mov
mov
je
test
je
push
mov
push
call
add
mov
cmp
je
test
jne
mov
mov
push
push
push
call
mov
add
cmp
je
cmp
jne
mov
add
push
push
call
mov
mov
neg
sbb
add
push
neg
push
mov
call
add
neg
sbb
neg
test
mov
jne
test
je
mov
mov
add
or
add
add
add
and
or
mov
mov
mov
mov
mov
test
je
test
je
pop
pop
pop
mov
pop
pop
ret
test
jne
mov
test
je
mov
mov
shl
jmp
lea
mov
sub
add
sub
cmp
jl
mov
test
je
push
push
call
add
test
jne
mov
mov
shl
test
je
mov
shl
lea
mov
sub
add
sub
cmp
jne
cmp
jl
mov
jmp
cmp
jne
cmp
jl
mov
test
je
mov
push
push
call
add
cmp
jne
cmp
jl
mov
test
je
mov
push
push
call
add
test
jne
cmp
jne
cmp
jne
pop
pop
pop
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
je
mov
and
push
xor
cmp
jle
push
xor
jmp
lea
mov
add
cmp
jl
mov
test
je
mov
push
push
call
add
add
add
cmp
jl
pop
xor
cmp
jle
mov
cmp
je
mov
mov
and
add
cmp
jl
xor
cmp
jle
mov
cmp
lea
je
mov
test
je
push
mov
push
call
add
add
cmp
jl
xor
cmp
jle
xor
jmp
lea
mov
cmp
je
mov
lea
mov
mov
mov
and
mov
add
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
push
push
call
add
cmp
push
push
je
xor
cmp
jbe
lea
cmp
jl
mov
test
je
push
push
call
add
movzx
add
add
cmp
jl
pop
pop
ret
mov
test
je
push
push
call
add
xor
cmp
jbe
lea
lea
mov
test
je
push
push
call
add
movzx
add
add
cmp
jl
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jl
mov
test
je
push
mov
push
call
add
mov
mov
cmp
push
mov
push
push
mov
ja
nop
mov
cmp
jae
mov
add
cmp
jbe
mov
cmp
jae
cmp
jl
mov
test
je
mov
push
push
call
add
add
cmp
jb
cmp
ja
xor
mov
add
cmp
jbe
sub
mov
sar
cmp
jg
mov
sub
mov
imul
sar
mov
shr
add
add
add
cmp
jge
cmp
jle
mov
cdq
sub
sar
push
push
call
add
mov
lea
cmp
jge
cmp
jle
cdq
sub
sar
push
push
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
movzx
or
add
cmp
ja
jmp
mov
push
push
mov
call
add
test
je
and
mov
mov
mov
shl
pop
pop
lea
shl
ret
mov
mov
call
cmp
movzx
je
shl
pop
add
pop
ret
pop
lea
pop
ret
mov
mov
mov
push
mov
mov
and
push
mov
call
mov
mov
add
add
pop
lea
shl
pop
lea
pop
ret
mov
push
mov
call
mov
mov
lea
lea
add
add
add
add
add
pop
lea
pop
ret
pop
xor
pop
ret
xor
inc
add
cdq
inc
add
cdq
inc
add
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
push
push
mov
test
mov
je
test
je
mov
shl
jmp
lea
mov
sub
mov
add
sub
cmp
jl
jne
mov
and
jmp
mov
mov
test
jne
cmp
jne
test
je
mov
test
jne
mov
mov
shl
test
je
mov
shl
nop
mov
sub
add
sub
cmp
je
mov
cmp
jl
mov
jne
and
jmp
test
jne
mov
cmp
jl
jne
mov
and
jmp
mov
mov
test
jne
cmp
jne
test
je
cmp
mov
jl
mov
test
jne
mov
test
jne
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
movzx
add
cmp
ja
jmp
push
push
call
add
ret
push
push
call
add
ret
push
push
call
add
ret
push
push
call
add
ret
push
push
call
add
ret
mov
add
mov
push
add
push
push
push
call
add
ret
mov
push
add
push
push
push
call
add
ret
lea
pop
fwait
inc
add
add
fwait
inc
add
inc
add
inc
add
fwait
inc
add
fwait
inc
add
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
movzx
push
push
mov
mov
xor
test
je
lea
mov
mov
sub
test
mov
jbe
cmp
jne
mov
push
lea
push
push
call
add
mov
movzx
xor
test
je
mov
and
and
or
mov
mov
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
call
mov
test
jne
mov
pop
pop
pop
pop
ret
int3
int3
push
mov
mov
mov
cdq
and
add
sar
cmp
jae
cmp
jle
mov
cdq
sub
sar
push
push
call
add
mov
cmp
jbe
push
mov
shr
lea
cmp
ja
mov
push
push
push
push
call
add
mov
pop
mov
pop
ret
push
call
add
mov
mov
pop
pop
ret
int3
int3
int3
int3
push
push
push
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
or
mov
test
mov
je
test
jne
mov
mov
push
push
push
call
add
test
je
mov
push
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
push
add
push
push
call
mov
add
mov
mov
pop
pop
pop
pop
ret
int3
int3
push
mov
mov
cmp
je
mov
call
mov
cmp
jne
pop
ret
push
mov
push
mov
push
push
lea
push
push
mov
call
xor
add
cmp
jle
mov
push
lea
push
push
call
add
add
cmp
jl
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
lea
mov
mov
test
je
test
je
push
push
call
add
add
sub
jne
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
cmp
jl
mov
test
je
push
push
call
add
mov
cmp
jl
mov
test
je
push
push
call
add
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
lea
cmp
je
nop
test
jne
mov
cmp
jl
mov
test
je
push
push
call
add
mov
cmp
jne
pop
pop
ret
int3
int3
int3
int3
int3
push
push
push
push
mov
push
mov
call
xor
cmp
je
mov
call
cmp
jne
mov
mov
mov
test
je
push
push
call
add
push
call
add
cmp
je
jmp
lea
mov
call
cmp
jne
mov
cmp
mov
mov
je
lea
mov
call
cmp
jne
mov
mov
mov
mov
test
je
lea
mov
test
je
test
je
mov
jmp
mov
test
je
test
jne
mov
mov
mov
push
push
push
call
add
test
jne
or
mov
jmp
mov
mov
or
lea
mov
mov
mov
test
mov
jne
mov
jmp
mov
mov
mov
mov
mov
mov
test
jne
mov
test
je
mov
mov
mov
mov
and
and
or
push
push
mov
call
add
cmp
jne
xor
cmp
je
mov
call
add
cmp
jne
mov
push
call
mov
xor
add
sub
sub
lea
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
movzx
cmp
push
ja
jmp
mov
call
pop
pop
xor
pop
ret
cmp
je
pop
pop
mov
pop
jmp
push
call
add
pop
pop
xor
pop
ret
mov
mov
mov
lea
push
push
add
push
mov
call
mov
add
cmp
jl
mov
mov
sub
add
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
add
mov
cmp
jne
push
mov
call
mov
pop
mov
sub
add
pop
pop
mov
pop
ret
xor
cmp
je
call
mov
cmp
jbe
add
mov
pop
pop
mov
pop
ret
mov
mov
pop
pop
xor
pop
ret
mov
ins
mov
inc
add
mov
inc
add
pop
and
push
mov
mov
push
lea
add
jne
mov
mov
sub
add
mov
call
sub
cmp
je
test
jg
cmp
je
mov
cmp
jae
mov
add
pop
mov
pop
pop
ret
mov
add
pop
mov
mov
pop
pop
ret
mov
mul
shr
imul
pop
mov
pop
pop
ret
int3
int3
int3
push
push
mov
mov
cmp
ja
xor
lea
mov
mov
mov
mov
mov
mov
cmp
je
lea
mov
call
cmp
jne
call
cmp
je
mov
call
cmp
jne
mov
mul
shr
imul
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
jne
mov
push
push
call
add
ret
mov
mov
mov
and
and
or
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
and
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
mov
mov
mov
mov
mov
test
jne
cmp
jne
mov
or
mov
cmp
jl
mov
test
je
test
je
push
push
push
call
add
pop
pop
ret
mov
and
and
or
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
shl
add
push
push
push
push
call
mov
push
push
push
call
mov
add
pop
mov
mov
mov
mov
pop
pop
ret
push
mov
push
mov
push
push
lea
push
push
push
push
call
mov
push
push
push
call
mov
add
test
mov
mov
mov
je
lea
sub
sub
test
mov
jne
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
mov
push
push
push
call
lea
add
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
push
mov
push
lea
push
mov
je
mov
mov
cmp
jb
je
cmp
mov
jne
push
push
push
push
call
mov
mov
mov
add
and
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
pop
pop
pop
ret
mov
movzx
movzx
and
not
test
je
pop
xor
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
cmp
je
mov
push
mov
mov
mov
mov
mov
pop
push
push
push
mov
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
push
mov
je
push
mov
push
lea
mov
cmp
jb
mov
mov
movzx
movzx
not
and
test
lea
je
cmp
je
mov
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
call
add
cmp
jne
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
xor
push
push
push
call
mov
push
push
push
call
add
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
mov
mov
push
mov
add
push
add
push
push
push
call
mov
mov
add
push
add
push
push
push
call
mov
mov
push
shl
push
push
push
call
mov
mov
add
push
add
push
push
push
call
mov
lea
mov
add
add
push
add
push
push
push
call
mov
mov
add
push
add
push
push
push
call
push
push
push
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
movzx
je
shl
add
push
push
mov
push
push
call
add
ret
lea
push
push
mov
push
push
call
add
ret
int3
mov
mov
push
push
xor
test
push
jle
mov
mov
mov
lea
mov
cmp
jg
cmp
jge
sub
je
add
add
cmp
jl
pop
pop
xor
pop
ret
lea
mov
pop
pop
add
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
cmp
push
mov
ja
jmp
push
push
push
call
add
mov
mov
add
mov
pop
pop
ret
push
push
jmp
mov
mov
sub
mov
mov
mov
mov
mov
add
mov
pop
pop
ret
push
cmps
inc
add
cmps
inc
add
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
lea
push
mov
lea
push
push
mov
mov
call
add
test
jne
mov
mov
push
push
call
mov
mov
add
mov
pop
mov
pop
ret
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
mov
sub
sar
shl
add
push
mov
mov
test
je
lea
mov
sub
sar
shl
add
mov
mov
test
jne
mov
cmp
ja
nop
mov
sub
sar
shl
add
add
mov
mov
sub
sar
shl
add
mov
mov
sub
sar
shl
add
mov
cmp
jbe
mov
sub
sar
shl
add
pop
mov
ret
int3
int3
push
push
push
mov
mov
push
mov
lea
lea
cmp
ja
mov
mov
shl
push
shl
push
push
push
call
add
jmp
push
call
add
shl
add
mov
pop
mov
mov
mov
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
mov
lea
cmp
ja
mov
lea
add
lea
add
add
add
push
add
add
push
push
push
call
add
jmp
push
call
add
mov
mov
sub
mov
imul
sar
mov
shr
add
lea
lea
lea
mov
lea
pop
mov
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
mov
mov
cmp
mov
jg
add
mov
jmp
add
mov
jmp
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
mov
je
cmp
je
mov
mov
mov
push
mov
push
mov
push
mov
sub
sub
mov
cmp
mov
mov
jne
mov
jmp
sub
mov
mov
imul
sar
mov
shr
add
mov
mov
sub
cmp
jg
mov
cmp
jl
lea
push
jmp
add
push
push
call
add
mov
mov
lea
add
push
mov
push
mov
call
mov
mov
add
add
mov
mov
mov
add
pop
pop
mov
pop
mov
pop
xor
call
add
ret
int3
int3
sub
push
movzx
push
push
mov
xor
cmp
mov
jge
mov
sub
add
mov
mov
mov
add
sub
jne
test
je
mov
mov
mov
sub
cmp
mov
jb
push
call
add
push
push
push
call
mov
add
xor
test
jle
mov
neg
shl
mov
jmp
lea
mov
mov
mov
lea
push
push
push
add
call
mov
add
mov
mov
mov
mov
mov
mov
add
cmp
jl
mov
mov
push
push
push
call
mov
push
push
push
call
fild
mov
add
fstp
mov
mov
shl
mov
sub
test
jle
add
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
jne
test
je
mov
lea
mov
mov
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
call
mov
sub
mov
add
cmp
je
push
push
push
call
add
mov
cmp
jbe
lea
mov
mov
mov
mov
mov
mov
sub
sub
cmp
ja
mov
sub
cmp
jg
mov
cmp
jl
lea
push
jmp
add
push
push
call
add
add
mov
mov
add
mov
mov
mov
mov
pop
mov
pop
ret
sub
push
push
push
push
mov
call
mov
mov
mov
add
cmp
jne
test
je
mov
mov
test
lea
mov
je
push
push
push
call
add
test
jne
mov
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
test
push
je
call
mov
lea
mov
mov
test
mov
mov
mov
mov
mov
mov
je
push
lea
cmp
jae
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
jne
pop
xor
cmp
jle
jmp
lea
sub
mov
add
cmp
jg
mov
pop
mov
pop
add
pop
ret
int3
int3
int3
int3
int3
mov
push
push
mov
mov
mov
lea
nop
mov
add
test
jne
sub
push
push
push
call
mov
mov
mov
sub
mov
add
cmp
jg
mov
cmp
jl
lea
push
push
call
add
add
pop
mov
pop
ret
add
push
push
call
add
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jbe
push
push
call
add
mov
mov
shl
sub
mov
mov
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
call
mov
mov
mov
mov
add
cmp
jb
push
call
add
cmp
mov
je
mov
mov
push
mov
lea
push
push
push
call
mov
mov
movzx
push
push
push
call
xor
add
mov
cmp
mov
jbe
push
lea
nop
push
call
mov
movzx
add
add
add
cmp
jl
mov
pop
mov
mov
mov
mov
sub
mov
cmp
jg
mov
cmp
jl
lea
push
push
call
add
add
pop
pop
pop
ret
add
push
push
call
add
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
push
mov
call
mov
mov
push
push
push
call
mov
add
cmp
mov
mov
jle
mov
sub
mov
imul
sar
mov
shr
lea
cmp
jge
push
push
call
add
xor
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
je
mov
mov
mov
push
add
push
call
mov
mov
mov
cmp
je
push
call
mov
mov
push
call
add
push
call
int3
int3
int3
int3
int3
int3
mov
cmp
jle
push
push
call
add
push
push
call
add
cmp
jle
push
push
call
add
add
mov
ret
int3
int3
int3
mov
cmp
push
push
mov
push
je
mov
call
mov
mov
mov
sub
mov
mov
mov
sub
cmp
mov
jne
push
mov
movzx
mov
shl
cmp
jg
mov
cmp
jg
lea
push
jmp
add
push
push
call
add
mov
add
cmp
jne
movzx
shl
lea
lea
cmp
jbe
mov
jmp
mov
sub
sar
sub
push
mov
call
mov
add
add
mov
mov
cmp
jne
call
jmp
add
mov
mov
mov
mov
movzx
shl
add
mov
mov
mov
mov
xor
mov
mov
mov
cmp
pop
jae
jmp
lea
mov
add
cmp
jb
test
mov
mov
je
add
push
push
push
call
add
add
pop
pop
xor
pop
ret
cmp
jg
mov
cmp
jl
lea
push
jmp
add
push
push
call
add
mov
cmp
jne
call
jmp
add
mov
mov
add
mov
add
mov
mov
mov
mov
add
mov
mov
test
je
push
push
push
call
add
mov
mov
mov
mov
push
call
add
test
jge
pop
pop
mov
pop
ret
mov
shl
sub
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
movzx
cmp
jb
jne
push
push
call
add
mov
mov
push
push
push
call
add
test
jne
push
push
call
add
mov
add
mov
cmp
jb
push
call
add
pop
ret
cmp
jb
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
mov
jne
mov
push
add
push
push
call
add
test
jne
jmp
mov
mov
mov
cmp
je
mov
push
push
call
add
test
je
mov
mov
mov
jmp
mov
mov
mov
sub
mov
imul
sar
mov
shr
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
test
jne
mov
cmp
je
mov
call
pop
ret
movzx
cmp
jb
mov
call
pop
ret
mov
mov
shl
push
sub
push
add
push
push
mov
mov
call
mov
add
test
je
mov
push
push
push
mov
call
mov
mov
add
mov
mov
add
pop
pop
ret
movzx
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
sub
mov
push
push
push
mov
movzx
mov
mov
sub
push
mov
mov
mov
mov
mov
push
push
push
mov
mov
call
mov
add
test
je
mov
add
push
push
call
push
push
push
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
add
cmp
mov
jle
sub
mov
mov
imul
sar
mov
shr
lea
cmp
jge
push
push
call
mov
add
pop
mov
pop
mov
pop
pop
add
ret
mov
pop
mov
pop
mov
pop
pop
add
ret
mov
pop
mov
pop
mov
pop
pop
add
ret
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
sub
mov
mov
push
mov
mov
push
mov
mov
sub
push
push
mov
lea
push
push
push
mov
mov
call
mov
push
mov
mov
push
push
push
call
add
mov
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
push
push
call
add
test
jne
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
call
add
test
je
cmp
je
push
push
push
call
add
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
call
add
test
jne
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
cmp
jne
push
push
call
push
push
call
mov
add
push
push
push
call
add
ret
push
push
push
call
mov
add
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
push
lea
push
push
push
mov
call
add
push
push
mov
call
add
test
je
lea
push
push
push
call
add
push
push
call
add
test
jne
push
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
push
call
add
cmp
jne
push
push
push
call
push
push
push
call
push
push
mov
call
push
push
push
call
add
lea
push
push
push
call
add
test
jne
mov
push
push
jmp
push
push
push
call
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
lea
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
call
add
push
push
push
call
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
push
mov
call
add
push
push
call
add
test
je
push
mov
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
push
push
call
mov
add
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
lea
push
lea
push
push
call
add
push
push
call
add
test
jne
push
push
push
call
add
pop
pop
pop
pop
mov
xor
call
add
ret
add
push
push
call
push
lea
push
push
call
mov
add
test
je
push
push
push
call
push
push
call
push
push
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
sub
mov
xor
mov
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
lea
push
lea
push
push
call
add
push
push
call
add
test
jne
push
push
push
call
add
pop
pop
pop
pop
mov
xor
call
add
ret
lea
push
push
call
push
push
call
push
push
push
call
add
push
push
call
push
lea
push
push
call
push
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
pop
xor
pop
ret
push
push
push
call
add
test
je
push
push
call
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
pop
xor
pop
ret
push
push
push
call
add
test
je
push
push
call
push
push
call
add
pop
mov
pop
ret
push
mov
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
add
cmp
jne
push
mov
mov
mov
push
push
call
mov
add
test
pop
jl
push
push
call
add
push
push
push
call
add
pop
ret
push
call
add
push
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
push
push
push
xor
call
add
test
je
mov
push
push
call
add
test
je
or
push
push
call
add
test
je
or
cmp
jle
or
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
call
push
push
call
push
push
call
add
cmp
je
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
lea
push
push
call
add
test
jg
push
push
call
xor
add
mov
xor
jmp
push
lea
push
push
call
push
push
push
mov
call
push
add
push
push
call
mov
push
mov
call
add
mov
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
mov
mov
push
push
push
push
call
add
pop
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
push
call
add
cmp
jne
push
push
call
add
mov
jmp
mov
push
push
call
push
mov
call
add
test
je
cmp
je
push
push
push
call
add
jmp
call
push
push
call
push
push
call
push
push
call
add
xor
test
je
mov
mov
test
je
mov
add
test
pop
je
mov
add
mov
lea
push
push
call
push
call
push
push
call
mov
add
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
call
add
push
push
call
call
push
lea
push
push
call
add
test
je
push
push
mov
lea
mov
xor
repz
je
lea
lea
mov
add
test
jne
sub
push
push
lea
push
push
call
add
test
jne
push
push
push
push
call
add
test
je
call
add
push
push
push
push
call
add
push
call
call
add
push
push
call
add
push
push
call
call
add
push
push
call
call
push
lea
push
push
call
add
test
jne
pop
pop
xor
pop
mov
xor
call
add
ret
mov
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
mov
push
push
mov
call
add
cmp
jne
push
push
mov
call
add
mov
jmp
mov
mov
mov
lea
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
jmp
xor
cmp
sete
mov
push
call
add
cmp
jne
push
push
jmp
lea
push
push
call
add
test
je
push
push
push
call
add
push
push
push
call
lea
push
push
push
call
add
test
je
add
cmp
jle
cmp
je
lea
push
lea
push
push
call
add
test
jne
mov
sub
mov
jmp
push
push
push
call
lea
push
push
push
call
add
test
je
lea
add
push
lea
push
push
call
add
test
jne
mov
mov
jmp
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
mov
add
test
jle
push
push
push
call
add
mov
cmp
je
mov
push
push
push
call
jmp
mov
mov
cmp
jne
push
push
call
add
jmp
cmp
je
cmp
je
mov
push
lea
push
push
push
call
add
jmp
push
push
push
call
add
push
call
sub
push
push
call
add
lea
push
push
push
call
add
test
jne
push
call
sub
push
push
call
add
mov
pop
pop
pop
pop
xor
mov
call
add
ret
mov
push
push
push
call
add
mov
ret
int3
int3
int3
push
mov
push
push
call
fabs
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
fstp
push
push
call
fld
add
fxch
call
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
fstp
call
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
fstp
call
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
fstp
push
push
call
fld
add
fxch
call
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
lea
push
push
push
call
fstp
call
fstp
fld
add
fstp
push
call
fld
add
fstp
push
call
add
mov
pop
add
ret
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
fstp
push
push
call
fld
add
fxch
call
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
fdiv
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
fmul
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
lea
push
push
push
call
fstp
call
fstp
add
push
call
mov
push
push
call
add
mov
pop
pop
ret
int3
int3
push
mov
push
push
call
add
push
push
push
call
fstp
call
fstp
add
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
push
call
push
push
mov
call
fst
mov
add
cmp
jl
push
fstp
push
call
fld
fcom
add
fnstsw
test
jne
fstp
fst
jmp
fstp
add
cmp
jle
sub
fstp
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
push
call
push
push
mov
call
fst
mov
add
cmp
jl
push
fstp
push
call
fld
fcom
add
fnstsw
test
jp
fstp
fst
jmp
fstp
add
cmp
jle
sub
fstp
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
call
cdq
mov
idiv
mov
push
mov
fild
fdiv
fstp
call
add
sub
je
sub
je
sub
je
push
push
call
add
pop
pop
pop
mov
pop
ret
push
push
call
mov
push
push
mov
call
mov
add
cmp
jle
push
push
push
call
add
sub
add
mov
fild
sub
fmul
fstp
call
fiadd
jmp
push
push
call
add
cmp
mov
jge
push
push
push
call
add
fild
sub
fmul
fstp
call
fadd
jmp
fld
sub
fstp
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
mov
push
push
call
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
fld
add
fstp
push
call
push
push
push
call
fld
add
fstp
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
lea
push
push
push
call
mov
push
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
lea
push
push
push
call
mov
push
push
mov
call
add
test
jge
lea
xor
test
setl
push
mov
push
push
push
sub
and
mov
call
add
test
jge
lea
xor
test
setl
pop
sub
and
cmp
jge
mov
mov
cmp
jle
mov
cmp
jg
sub
add
push
lea
push
push
call
add
pop
pop
mov
pop
pop
ret
push
push
push
call
add
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
lea
push
mov
push
push
call
lea
push
push
mov
call
add
cmp
je
jmp
lea
nop
sub
lea
cmp
jb
lea
push
call
add
mov
mov
mov
mov
add
cmp
jne
sub
lea
push
call
mov
add
pop
pop
mov
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
lea
push
push
push
call
lea
push
push
mov
call
xor
add
cmp
jbe
lea
cmp
jb
lea
push
call
add
movzx
push
call
mov
mov
add
add
add
cmp
jb
lea
push
call
mov
add
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
lea
push
push
push
call
lea
push
push
mov
call
xor
add
cmp
jbe
lea
cmp
jb
lea
push
call
add
movzx
push
call
mov
mov
add
add
add
cmp
jb
lea
push
call
mov
add
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
lea
push
push
push
call
push
push
mov
call
lea
push
push
mov
call
add
test
jle
lea
mov
push
lea
push
push
sub
call
add
test
jg
lea
push
call
mov
add
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
lea
push
push
push
call
mov
push
push
push
mov
call
add
test
jge
lea
mov
xor
test
setl
sub
and
push
push
push
call
add
test
jge
lea
xor
test
setl
sub
and
test
jg
mov
mov
cmp
jbe
mov
cmp
jle
pop
pop
xor
pop
add
ret
mov
sub
add
lea
cmp
jg
push
push
call
add
push
push
push
push
call
add
xor
test
jle
mov
lea
mov
movzx
push
push
call
add
add
cmp
jl
pop
mov
pop
pop
pop
add
ret
int3
sub
mov
xor
mov
push
push
push
mov
push
call
mov
lea
push
push
call
mov
add
cmp
jl
push
mov
push
push
call
mov
movzx
add
cmp
je
push
push
push
call
add
lea
cmp
jb
lea
push
call
add
mov
mov
add
add
cmp
jle
pop
lea
push
call
mov
add
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
push
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
push
call
push
push
call
lea
push
push
call
lea
push
push
push
call
add
test
je
push
push
call
add
lea
push
call
mov
add
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movsx
add
cmp
je
cmp
je
mov
pop
ret
cmp
jne
add
nop
cmp
jne
mov
push
push
call
add
mov
add
cmp
jne
cmp
je
add
cmp
jne
lea
pop
ret
cmp
jne
mov
push
push
call
add
lea
pop
ret
int3
int3
int3
push
push
mov
call
add
add
cmp
ja
movzx
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
xor
test
sete
mov
push
call
add
test
je
mov
pop
ret
xor
test
sete
pop
ret
xor
cmp
sete
pop
ret
nop
(bad)
rol
rcl
inc
add
rol
in
rol
cli
rol
pop
rol
adc
inc
add
rol
rol
cmp
inc
add
inc
add
or
add
or
or
or
add
or
add
or
or
or
int3
push
push
push
mov
cmp
push
mov
jne
mov
add
mov
add
cmp
jae
lea
lea
mov
cmp
jne
movzx
add
mov
add
call
test
jne
mov
jmp
cmp
jne
cmp
jae
movzx
add
add
cmp
jg
movzx
cmp
jg
mov
pop
pop
pop
pop
ret
movzx
cmp
je
add
add
cmp
jb
xor
cmp
pop
pop
sete
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
mov
je
cmp
jne
mov
push
push
call
add
mov
cmp
je
pop
xor
pop
ret
mov
movsx
mov
add
cmp
push
movsx
jae
movsx
cmp
jne
sub
jne
pop
pop
lea
pop
ret
cmp
jne
add
add
cmp
jb
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
xor
cmp
jae
push
mov
mov
cmp
movzx
je
cmp
je
cmp
je
movzx
xor
cmp
sete
mov
jmp
mov
add
push
mov
call
add
jmp
movzx
mov
call
mov
test
je
add
add
cmp
jb
test
pop
jl
mov
add
mov
push
lea
push
push
call
add
test
jne
sub
jns
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
mov
lea
push
mov
push
push
call
add
test
jne
mov
cmp
jae
mov
cmp
movzx
je
cmp
je
cmp
je
movzx
xor
cmp
sete
jmp
lea
push
mov
call
add
jmp
movzx
mov
call
mov
test
je
mov
lea
push
add
push
push
call
add
test
je
pop
pop
pop
pop
ret
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
jl
mov
push
push
call
add
mov
mov
push
mov
mov
push
add
push
mov
call
add
test
pop
jne
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
js
lea
lea
cmp
je
sub
sub
test
jge
mov
push
push
call
add
mov
mov
push
mov
sub
push
push
mov
call
add
test
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
add
push
push
mov
js
cmp
jge
cmp
jne
mov
push
push
call
add
mov
mov
sub
cmp
jb
cmp
mov
push
mov
mov
jb
mov
cmp
jne
sub
add
add
cmp
jae
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
je
test
mov
jg
or
jmp
xor
test
pop
jne
lea
pop
pop
ret
pop
xor
pop
ret
int3
int3
int3
int3
push
push
push
mov
push
mov
lea
movsx
cmp
ja
movzx
jmp
mov
cmp
je
cmp
je
movzx
push
call
add
test
je
movzx
mov
mov
call
mov
test
je
add
jmp
mov
add
cmp
je
mov
push
push
call
add
mov
call
cmp
mov
jne
xor
jmp
mov
lea
movzx
push
mov
call
add
test
jne
movzx
push
mov
call
add
test
jne
xor
pop
pop
pop
pop
ret
mov
lea
mov
call
mov
test
je
add
jmp
cmp
je
mov
mov
call
cmp
mov
mov
jae
mov
cmp
movzx
je
cmp
je
cmp
je
movzx
xor
cmp
sete
mov
jmp
add
push
mov
mov
call
mov
add
jmp
movzx
mov
call
mov
test
je
mov
jmp
xor
movsx
add
cmp
ja
movzx
jmp
test
je
lea
push
lea
push
push
call
add
test
jne
lea
jmp
test
je
add
mov
jmp
cmp
lea
mov
mov
jne
push
add
push
call
add
pop
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
pop
ret
add
mov
mov
push
call
add
pop
pop
pop
pop
ret
pop
mov
pop
pop
pop
ret
mov
xor
cmp
pop
setne
sub
and
pop
pop
pop
ret
push
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
push
push
add
push
push
call
add
pop
pop
pop
pop
ret
push
push
push
mov
call
add
pop
pop
pop
pop
ret
lea
jne
inc
add
inc
add
xlat
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
call
xlat
inc
add
(bad)
inc
add
xlat
inc
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
mov
push
mov
je
cmp
jbe
pop
xor
pop
ret
sub
sub
push
push
jne
pop
xor
pop
pop
pop
ret
lea
mov
mov
movsx
push
push
push
call
add
test
je
add
cmp
lea
mov
mov
jb
lea
mov
cmp
jne
sub
add
add
cmp
jae
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
je
test
mov
jg
or
jmp
xor
test
je
mov
sub
add
mov
jne
pop
pop
pop
xor
pop
ret
pop
pop
pop
add
pop
ret
int3
int3
cmp
jl
test
jne
sub
push
mov
push
push
call
add
ret
mov
push
push
call
add
ret
push
mov
cmp
jne
mov
push
push
call
add
mov
mov
push
push
push
call
add
pop
ret
cmp
jne
mov
sub
mov
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
mov
test
push
jne
test
je
mov
mov
push
push
push
call
add
xor
test
jle
mov
mov
call
add
cmp
jl
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
push
push
lea
push
push
push
call
lea
push
push
push
mov
call
mov
push
push
push
mov
mov
call
add
test
jge
lea
xor
test
setl
sub
and
mov
sub
mov
jns
xor
jmp
cmp
jbe
mov
cmp
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
sub
push
push
mov
add
push
call
add
test
je
mov
sub
lea
push
push
call
mov
add
push
push
call
add
pop
pop
mov
pop
add
ret
mov
cmp
jne
add
mov
mov
jmp
mov
add
add
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
add
test
jne
mov
add
cmp
jae
cmp
jne
mov
jmp
cmp
je
sub
add
push
push
call
sub
push
push
call
push
push
lea
call
add
pop
pop
add
pop
add
ret
push
push
lea
call
add
pop
pop
pop
add
ret
push
call
add
pop
pop
mov
pop
add
ret
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
push
lea
push
push
push
call
push
push
push
mov
call
mov
add
push
push
mov
mov
mov
mov
call
mov
add
add
cmp
ja
mov
mov
push
lea
push
push
mov
call
mov
add
test
jne
add
cmp
jbe
pop
pop
pop
xor
pop
add
ret
mov
sub
cmp
jne
add
push
push
call
push
push
call
mov
add
test
jne
test
je
mov
mov
jmp
mov
mov
mov
push
push
push
call
add
xor
test
jle
lea
mov
mov
lea
call
add
cmp
jl
mov
pop
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
push
call
add
mov
pop
ret
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
push
lea
push
push
push
call
xor
add
cmp
mov
mov
jbe
lea
cmp
je
lea
cmp
jb
push
call
add
mov
mov
mov
add
jmp
movzx
add
push
call
add
test
jne
lea
cmp
jb
push
call
add
mov
mov
mov
add
jmp
mov
cmp
jne
mov
mov
sub
push
push
push
call
add
jmp
mov
movsx
mov
sub
call
push
call
mov
add
add
cmp
jb
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
push
mov
call
add
add
cmp
ja
jmp
mov
push
mov
push
mov
call
add
pop
pop
pop
ret
push
push
call
mov
push
push
mov
call
push
push
push
call
add
jmp
mov
push
mov
xor
call
push
push
call
add
pop
push
push
call
add
test
jne
push
push
call
mov
sub
push
push
push
call
mov
add
push
call
add
pop
pop
pop
ret
push
push
call
add
test
jne
push
push
call
push
push
call
push
push
push
call
add
mov
push
call
add
pop
pop
pop
ret
xchg
fiadd
xchg
fiadd
iret
fiadd
lods
fiadd
sub
mov
xor
mov
push
push
push
push
mov
lea
push
push
push
call
push
push
push
mov
call
push
push
mov
call
mov
add
push
push
push
mov
call
add
cmp
mov
jne
add
mov
jmp
mov
cmp
mov
je
cmp
je
cmp
je
cmp
je
push
push
push
call
add
lea
push
push
call
mov
add
add
cmp
mov
mov
mov
jle
push
lea
push
push
mov
call
mov
add
test
je
add
lea
push
push
lea
call
add
cmp
jbe
mov
jmp
mov
cmp
jae
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
add
cmp
jne
mov
cmp
jl
mov
sub
push
lea
push
push
call
lea
push
call
mov
push
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
push
push
push
lea
push
push
push
call
lea
add
cmp
mov
jb
push
call
add
mov
mov
add
cmp
je
lea
sub
movsx
cmp
ja
movzx
jmp
cmp
jb
push
call
add
mov
mov
add
cmp
jb
push
call
add
mov
mov
mov
jmp
push
push
push
call
add
jmp
push
push
push
call
add
jmp
cmp
jb
push
call
add
mov
mov
mov
add
add
cmp
jne
sub
cmp
pop
pop
jb
push
call
add
mov
mov
add
pop
ret
nop
mov
inc
add
inc
add
loope
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
cmp
push
mov
push
push
mov
mov
je
movsx
push
push
call
add
test
je
add
cmp
jne
mov
sub
cmp
jb
push
push
call
add
movzx
push
call
add
test
je
add
movzx
push
call
add
test
je
add
cmp
jne
movzx
add
push
call
add
test
je
add
movzx
push
call
add
test
je
add
movzx
push
call
add
test
je
push
push
call
add
mov
sub
lea
push
mov
add
push
push
call
add
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
lea
push
mov
push
push
call
mov
lea
mov
push
lea
push
mov
call
add
cmp
jae
cmp
je
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
add
jmp
add
cmp
jne
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
add
jmp
lea
push
mov
add
call
mov
movsx
sub
add
add
cmp
ja
movzx
jmp
push
push
call
call
push
lea
push
lea
push
call
add
jmp
lea
lea
lea
mov
add
test
jne
sub
mov
mov
push
push
mov
mov
call
call
push
lea
push
lea
push
call
add
jmp
lea
lea
nop
mov
add
test
jne
sub
mov
mov
push
push
mov
mov
call
fnstcw
movzx
or
mov
fldcw
fistp
mov
push
fldcw
jmp
push
push
call
fstp
lea
push
lea
push
call
add
jmp
mov
lea
mov
call
jmp
lea
push
push
push
call
lea
push
push
mov
call
add
test
jne
cmp
jb
push
push
call
lea
push
call
jmp
push
lea
push
lea
push
call
add
lea
lea
mov
mov
add
test
jne
sub
push
lea
push
lea
push
call
add
cmp
jb
lea
push
call
add
mov
mov
pop
pop
pop
pop
xor
call
add
ret
movsx
push
push
push
call
add
jmp
nop
inc
in
add
in
add
inc
add
inc
add
inc
add
inc
add
out
add
push
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
push
push
push
push
push
push
push
push
push
add
add
add
add
push
push
push
push
add
add
add
add
int3
int3
int3
push
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
push
call
add
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
call
push
push
push
call
add
call
mov
pop
ret
int3
int3
push
mov
push
push
push
push
call
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
push
push
call
mov
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
push
call
push
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
push
push
call
push
push
push
mov
call
push
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
push
call
push
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
lea
push
call
add
test
jne
push
push
call
add
pop
mov
xor
call
add
ret
lea
push
push
call
mov
add
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
call
mov
fild
mov
sub
fdiv
fstp
push
call
mov
add
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
push
push
push
call
push
push
mov
call
add
test
jg
push
call
add
jmp
push
push
call
add
call
mov
mov
cmp
jne
lea
push
call
add
add
jmp
lea
push
call
add
test
mov
jne
push
call
add
jmp
push
push
mov
mov
mov
xor
repz
jne
push
push
push
call
mov
mov
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
push
push
call
add
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
test
jl
push
push
call
push
push
push
call
add
jmp
lea
push
push
mov
mov
call
mov
add
test
je
cmp
jne
cmp
je
mov
mov
push
add
lea
push
mov
lea
push
push
call
push
lea
push
lea
push
call
add
jmp
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
mov
add
test
jne
lea
push
call
add
pop
pop
mov
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
add
test
jg
push
call
add
jmp
push
push
push
push
call
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
add
mov
jmp
xor
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
add
mov
jmp
xor
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
add
mov
jmp
mov
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
push
add
push
push
mov
call
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
push
add
push
push
mov
call
push
push
call
add
test
jne
or
jmp
push
push
call
add
mov
push
push
call
lea
push
mov
call
add
pop
mov
and
cmp
mov
jne
push
call
add
mov
pop
add
ret
fild
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
fldz
push
push
mov
push
sub
fstp
push
push
call
call
push
push
mov
mov
call
call
push
push
push
push
call
fstp
add
push
call
add
pop
pop
mov
pop
ret
int3
push
mov
push
push
push
push
push
call
push
push
push
push
mov
call
mov
push
push
call
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
call
add
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
call
add
mov
ret
int3
int3
int3
call
mov
push
call
mov
push
push
push
push
call
push
push
push
call
mov
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
push
mov
call
add
test
je
push
push
call
add
test
je
push
push
push
call
add
test
je
cmp
jne
push
push
push
call
add
pop
mov
pop
ret
push
push
push
call
add
pop
mov
pop
ret
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
push
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
mov
mov
push
call
add
xor
cmp
setne
mov
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
call
mov
mov
push
call
add
mov
neg
sbb
add
mov
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
call
push
push
push
call
add
push
push
push
call
add
call
add
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
cmp
jne
push
push
push
call
add
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
call
push
push
push
call
add
push
push
push
call
add
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
add
cmp
je
push
push
call
push
push
push
call
add
push
push
push
call
add
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
mov
add
test
jne
push
push
push
call
add
mov
pop
ret
push
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
push
call
push
push
push
push
mov
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
call
add
test
mov
jne
call
mov
push
call
add
push
call
test
push
je
push
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
push
call
push
push
push
push
mov
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
call
add
test
mov
jne
call
mov
push
call
add
push
call
test
push
je
push
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
mov
push
push
mov
call
push
push
call
add
call
test
mov
jne
call
mov
push
call
push
call
push
push
push
call
push
push
call
add
pop
mov
pop
ret
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
call
add
test
jle
push
push
push
push
call
mov
add
test
je
push
push
push
call
push
mov
push
push
mov
call
push
push
call
mov
push
push
call
add
test
mov
pop
jne
push
push
call
jmp
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
call
add
push
push
push
call
add
pop
push
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
lea
push
push
push
call
add
cmp
jne
fld
mov
sub
fstp
push
call
add
mov
add
ret
xor
add
ret
int3
sub
mov
xor
mov
push
mov
push
lea
push
push
call
lea
push
call
push
mov
push
push
call
add
test
je
mov
lea
lea
mov
add
test
jne
sub
je
cmp
je
add
lea
push
call
push
mov
push
push
call
add
test
jne
lea
push
call
push
push
call
add
xor
cmp
sbb
pop
neg
pop
mov
xor
call
add
ret
mov
lea
lea
push
mov
call
mov
add
pop
pop
xor
mov
call
add
ret
sub
mov
xor
mov
push
mov
push
push
lea
push
push
mov
call
add
mov
lea
push
call
add
cmp
jbe
mov
push
push
push
push
call
add
add
sub
je
cmp
je
lea
push
call
add
test
je
push
push
call
add
test
ja
pop
pop
xor
pop
mov
xor
call
add
ret
mov
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
call
mov
sub
push
mov
call
add
test
jne
push
mov
call
mov
add
mov
add
push
call
add
test
je
call
mov
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
pop
ret
push
add
push
push
call
mov
add
mov
sub
test
je
push
push
call
add
cmp
jne
push
push
call
add
test
jne
push
call
mov
push
push
call
push
push
push
call
xor
add
cmp
setne
mov
jmp
push
mov
call
mov
jmp
push
push
push
call
mov
add
test
je
cmp
je
push
push
push
call
add
movsx
sub
je
sub
je
sub
jne
push
mov
call
mov
jmp
push
mov
call
mov
jmp
push
or
call
mov
add
add
cmp
jne
jmp
push
push
push
call
add
pop
pop
pop
pop
ret
test
jne
push
push
call
push
call
add
pop
mov
sub
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
push
push
call
mov
add
test
jne
mov
push
push
push
call
add
push
mov
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
call
mov
add
test
jne
push
push
call
add
push
call
push
mov
call
add
test
je
call
mov
push
call
push
push
push
call
add
pop
pop
pop
ret
test
je
pop
pop
mov
pop
ret
push
push
call
add
test
je
push
push
call
push
push
call
add
call
pop
pop
xor
pop
ret
int3
int3
push
mov
and
sub
push
push
push
mov
call
add
sub
mov
je
jmp
mov
sub
push
push
mov
call
add
cmp
jne
test
je
push
push
call
fstp
mov
push
push
call
add
test
jg
xor
add
cmp
jne
call
test
mov
je
push
push
call
add
mov
pop
pop
mov
pop
ret
lea
push
push
push
call
add
test
je
mov
mov
push
push
push
push
call
add
cmp
jne
mov
jmp
push
call
push
call
push
push
push
call
push
push
call
add
pop
mov
pop
mov
pop
ret
int3
int3
int3
push
push
mov
push
push
push
call
push
push
call
mov
add
test
jne
mov
push
push
push
call
add
push
mov
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
mov
call
add
pop
pop
ret
int3
int3
push
mov
push
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
push
push
push
push
call
push
push
push
mov
call
mov
push
push
push
call
add
test
pop
je
call
mov
push
call
push
call
push
push
push
call
push
push
call
add
pop
mov
pop
ret
push
call
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
push
push
push
call
push
push
push
mov
call
push
mov
push
push
push
call
add
mov
call
test
mov
jne
push
push
call
add
lea
pop
pop
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
push
push
call
mov
add
test
jne
mov
push
push
push
call
add
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
mov
call
push
push
push
call
push
push
call
push
push
call
add
push
push
push
call
call
mov
push
push
add
call
push
mov
push
push
mov
call
push
push
call
push
push
mov
call
push
push
push
call
push
push
call
add
push
push
call
push
push
push
call
call
mov
push
push
add
call
push
mov
push
push
mov
call
push
push
call
push
push
mov
call
push
push
call
add
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
call
push
push
call
push
push
push
call
add
mov
pop
ret
int3
push
mov
push
push
call
add
test
jg
push
push
push
call
push
call
add
pop
ret
push
push
push
push
push
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
call
add
test
mov
jne
call
mov
push
call
push
push
push
push
call
push
push
push
call
push
push
push
call
add
push
call
push
push
call
push
push
call
push
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
push
push
call
push
push
push
mov
call
mov
add
cmp
jl
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
call
add
test
jne
push
push
call
add
add
cmp
jle
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
call
push
call
push
push
call
add
test
je
mov
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
add
test
jne
push
push
call
push
push
call
add
test
jne
xor
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
fldz
push
mov
fstp
push
push
push
call
push
call
push
push
call
add
test
je
push
push
call
push
push
call
add
cmp
jne
push
push
call
fld
fcomp
add
fnstsw
test
jp
fstp
jmp
fstp
push
push
call
add
test
jne
fld
sub
fstp
push
call
add
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
call
add
mov
pop
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
dec
add
movups
movlpd
movsd
subsd
mulsd
addsd
mulsd
subsd
movsd
mulsd
mulsd
subsd
subsd
addsd
subsd
movapd
pshufd
subsd
addsd
pshufd
addsd
mulsd
addsd
pshufd
divsd
movapd
movapd
movapd
mulpd
movsd
mulpd
mulpd
and
mulsd
mulpd
addpd
movapd
mulsd
mulpd
movapd
mulsd
addpd
pshufd
mulsd
sub
mulpd
addsd
xorpd
pshufd
mulsd
pshufd
addsd
movsd
pinsrw
subsd
addsd
addsd
addsd
subsd
subsd
subsd
subsd
orpd
movlpd
fld
add
ret
add
cmp
jb
movd
psrlq
movd
and
mov
sub
or
cmp
je
movlpd
movd
psrlq
movd
and
sub
sbb
cmp
jge
xorpd
xorpd
mov
pinsrw
mulsd
mov
sub
movlpd
mov
mov
add
mov
add
mov
mov
call
movlpd
add
sub
movlpd
fld
add
ret
movlpd
movlpd
movlpd
addsd
andnpd
orpd
sub
movlpd
fld
add
ret
movlpd
xorpd
addsd
mov
jmp
movlpd
xorpd
sub
movsd
pextrw
and
sub
cmp
jb
addsd
orpd
mulsd
movlpd
fld
add
ret
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
movlpd
movlpd
xorpd
movlpd
movsd
psrlq
movd
movsd
mov
pinsrw
movsd
mov
and
sub
cmp
jae
mulsd
and
subsd
sqrtsd
andpd
and
sub
movlpd
orpd
movapd
movsd
addsd
subsd
mulsd
mulsd
mulsd
movsd
addsd
divsd
movlpd
movlpd
subsd
psrlq
movsd
psllq
mulsd
pshufd
movlpd
mulsd
mulsd
sub
xorpd
mulsd
subpd
mulsd
addsd
mulsd
subsd
pshufd
addsd
subsd
subsd
movlpd
fld
add
ret
sub
cmp
jae
psrlq
psllq
pmovmskb
andnpd
subsd
movsd
mulsd
addsd
orpd
subsd
mulsd
movsd
subsd
sqrtsd
and
shr
neg
movsd
andpd
psllq
pextrw
orpd
movd
pshufd
sub
add
mulsd
mulsd
mulsd
mulsd
subsd
andpd
addsd
subsd
addsd
movlpd
subsd
addsd
movlpd
divsd
movlpd
addpd
movsd
mulsd
mulsd
mulsd
sub
mulsd
mulsd
addsd
pxor
mulsd
addsd
addsd
and
pinsrw
movsd
pshufd
addsd
subsd
addsd
addsd
addsd
xorpd
movlpd
fld
add
ret
add
cmp
jae
unpcklpd
movapd
unpcklpd
movapd
movapd
mulpd
movapd
sub
mulpd
mulpd
mulpd
movsd
mulsd
addpd
mulpd
mulsd
addpd
pshufd
mulpd
pshufd
subsd
pshufd
subsd
subsd
subsd
subsd
subsd
addsd
movlpd
fld
add
ret
sub
cmp
jae
xorpd
andpd
movlpd
movapd
mulsd
movapd
subsd
movapd
pshufd
sqrtsd
mulpd
pshufd
pextrw
mulpd
addpd
movlpd
mulpd
cmpltsd
mulsd
addpd
pshufd
mulsd
andpd
mulpd
andpd
pshufd
subsd
addsd
mulsd
subsd
subsd
mulsd
pshufd
subsd
divsd
sub
addpd
mulpd
pshufd
addsd
and
pinsrw
pshufd
addsd
addsd
addsd
addsd
xorpd
movlpd
fld
add
ret
add
cmp
jb
movd
psrlq
movd
and
mov
sub
or
cmp
je
movlpd
movd
psrlq
movd
and
sub
sbb
cmp
jge
xorpd
xorpd
mov
pinsrw
mulsd
mov
sub
movlpd
mov
mov
add
mov
add
mov
mov
call
movlpd
add
sub
movlpd
fld
add
ret
pextrw
shr
neg
movd
pshufd
movlpd
movlpd
andpd
andpd
addsd
sub
movlpd
fld
add
ret
movlpd
movlpd
addsd
sub
movlpd
fld
add
ret
xorpd
addsd
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
and
fstp
movq
call
leave
ret
movq
unpcklpd
movapd
andpd
comisd
jp
jae
comisd
jae
comisd
jb
movapd
mulpd
movapd
mulpd
movapd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulsd
movapd
shufpd
addsd
mulsd
subsd
movq
fld
ret
comisd
jae
movapd
mulpd
movapd
mulpd
movapd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulsd
movapd
shufpd
addsd
mulsd
subsd
movq
fld
ret
movq
xorpd
comisd
jae
movq
movq
movq
addsd
psrlq
psubd
movd
lea
movq
movq
subsd
mulsd
addsd
divsd
unpcklpd
jmp
mov
movq
movq
divsd
unpcklpd
movq
movq
movapd
mulpd
movapd
mulpd
movapd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulsd
movapd
shufpd
addsd
mulsd
subsd
subsd
subsd
orpd
movq
fld
ret
comisd
jne
fld
ret
comisd
jae
fld
fmul
sub
fstp
fld
add
fadd
ret
fld
fmul
fadd
ret
movq
movq
andpd
ucomisd
jp
mov
shr
fld
fadd
ret
mov
sub
mov
mov
add
mov
mov
mov
call
add
fld
ret
nop
int3
int3
int3
int3
call
xchg
jmp
call
fxch
jmp
fabs
fld1
mov
xor
jmp
mov
fabs
fxch
fabs
fxch
fpatan
or
je
fldpi
fsubp
or
je
fchs
ret
fabs
fld
fld
fld1
fsubp
fxch
fld1
faddp
fmulp
ftst
fstsw
fwait
test
jne
xor
fsqrt
ret
pop
jmp
fstp
fld
ret
fstp
or
je
fstp
fldpi
or
je
fchs
ret
fstp
fldz
or
je
fchs
ret
fstp
jmp
fstp
mov
jmp
call
jmp
push
mov
sub
xor
cmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
push
call
pop
jmp
mov
mov
mov
cmp
jg
je
cmp
jg
je
mov
push
pop
sub
je
dec
je
sub
je
dec
je
sub
je
dec
je
sub
jne
mov
mov
fld
lea
fstp
push
fld
fstp
fld
fstp
call
test
pop
jne
call
mov
jmp
mov
fld
lea
fstp
push
fld
mov
fstp
fld
fstp
call
pop
jmp
mov
mov
jmp
mov
fld
fstp
fld
fstp
fld
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
jmp
sub
je
dec
je
dec
je
dec
je
sub
je
sub
jne
mov
jmp
mov
jmp
mov
fld
fstp
jmp
mov
jmp
mov
jmp
fld1
jmp
mov
mov
jmp
add
cmp
ja
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
fld
fmul
fst
fld
fstp
fld
fstp
lea
fstp
push
mov
call
test
pop
jne
call
mov
fld
fstp
pop
pop
pop
leave
ret
mov
sbb
dec
add
ret
dec
add
ret
dec
add
dec
add
ret
dec
add
ret
push
ret
dec
add
ret
pop
ret
dec
add
dec
add
dec
add
in
push
push
push
push
mov
push
push
call
fld
pop
pop
mov
mov
push
and
cmp
push
fstp
jne
call
test
pop
pop
jle
cmp
jle
cmp
jne
fld
push
push
push
fstp
push
call
add
jmp
push
push
call
fld
pop
pop
jmp
fld
push
fadd
sub
fstp
fld
fstp
push
push
jmp
call
fstp
fld
pop
fcomp
pop
fnstsw
test
jp
push
push
call
fld
pop
pop
jmp
test
jne
fld
push
sub
fstp
fld
fstp
push
push
call
add
pop
pop
leave
ret
push
mov
push
push
push
push
mov
push
push
call
fld
pop
pop
mov
mov
push
and
cmp
push
fstp
jne
call
test
pop
pop
jle
cmp
jle
cmp
jne
fld
push
push
push
fstp
push
call
add
jmp
push
push
call
fld
pop
pop
jmp
fld
push
fadd
sub
fstp
fld
fstp
push
push
jmp
call
fstp
fld
pop
fcomp
pop
fnstsw
test
jp
push
push
call
fld
pop
pop
jmp
test
jne
fld
push
sub
fstp
fld
fstp
push
push
call
add
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
fld
fld
mov
add
jae
xor
test
je
fdivrp
ret
shr
cmp
jne
fdivrp
ret
mov
and
sbb
jecxz
cdq
lahf
sbb
ror
rcl
rcr
cld
ds
js
or
pop
cdq
dec
imul
mov
sahf
out
fnstsw
test
imul
jb
sub
pop
or
and
fnstcw
xchg
jle
arpl
and
fisttp
and
cmps
test
and
clc
or
sub
mov
shl
outs
fisttp
adc
pop
mov
int
mov
iret
xor
mov
pop
mov
pushf
outs
fstp
dec
pop
sub
lahf
out
fdivr
aam
mov
pop
inc
pop
stc
pop
fmul
clc
or
sbb
and
dec
loope
das
in
dec
cwde
aad
push
dec
cwde
or
fcomp
jmp
dec
sub
mov
add
mov
sub
and
cmp
pop
jge
(bad)
xlat
cmc
movs
(bad)
mov
(bad)
(bad)
into
fdivr
mov
pop
pop
push
ins
dec
pop
sub
adc
into
jns
pop
push
push
lock
adc
in
jb
add
xor
mov
in
or
out
pushf
mov
push
fnstenv
fsubr
stc
pop
jmp
das
add
jae
dec
dec
cs
(bad)
(bad)
(bad)
pop
hlt
retf
sub
movs
call
jo
sub
adc
cmp
xor
test
mov
cli
mov
mov
out
js
lea
cmps
jle
sbb
jp
sub
inc
sub
cdq
rcr
ficomp
cli
cmp
outs
dec
out
adc
movs
imul
ins
cmp
das
mov
cli
ja
or
cwde
mov
enter
adc
cld
jge
fucomp
pop
xchg
iret
mov
jle
(bad)
jmp
jo
jmp
and
sbb
out
out
dec
sahf
push
mov
xchg
mov
outs
or
cmp
stos
push
sbb
ret
ret
mov
mov
jmp
mov
and
pop
outs
cwde
stos
cmp
mov
sub
(bad)
dec
outs
dec
cwde
cli
loopne
xor
mov
sub
inc
fdivr
sub
pop
call
pop
sbb
cmp
jg
in
pop
stos
clc
mov
push
mov
leave
jae
mov
and
test
into
mov
int
dec
rol
mov
push
pop
inc
jle
pop
cmp
sub
sbb
lahf
repnz
and
mov
clc
push
add
sub
cmp
pop
into
mov
dec
fimul
mov
into
test
or
clc
sahf
(bad)
mov
mov
(bad)
pop
xchg
xchg
push
(bad)
pop
mov
test
mov
and
retf
fstp
fisttp
mov
jno
jnp
sub
test
cmp
stc
scas
dec
mov
cmp
xchg
iret
add
inc
fcmovnu
mov
adc
xor
push
fild
loopne
mov
pop
pop
mov
sub
dec
nop
xchg
sbb
repnz
xor
loopne
cmp
adc
inc
es
(bad)
jl
jne
call
cdq
mov
sti
mov
sbb
(bad)
popf
call
aad
mov
inc
xchg
lock
test
cmps
adc
das
jl
jns
push
mov
lahf
fbstp
sti
sbb
jmp
add
push
test
pop
xchg
or
out
sbb
in
add
fisub
pop
ficomp
mov
push
pop
das
pop
mov
cdq
push
mov
mov
mov
sub
mov
cmp
(bad)
out
jo
or
ficomp
lock
retf
adc
outs
sbb
out
idiv
xor
adc
(bad)
fmulp
popf
iret
sbb
mov
std
lds
push
or
push
mov
lahf
push
pop
outs
mov
cmps
xor
ss
(bad)
cmps
dec
mov
(bad)
push
std
sbb
out
idiv
mov
sbb
inc
mov
and
enter
mov
out
xor
or
retf
and
cs
jp
int
inc
cmp
inc
mov
xchg
pop
or
pop
cmp
jp
and
imul
std
outs
mov
pop
pop
fwait
xchg
iret
sub
dec
fld
call
cmp
or
push
inc
fs
outs
sub
mov
xchg
lods
mov
mov
cmps
lock
jnp
pop
push
ret
mov
data16
cmp
loop
mov
xchg
pop
lods
jae
dec
popf
(bad)
pop
mov
mov
sub
(bad)
jmp
jg
in
push
(bad)
cmp
(bad)
mov
sbb
icebp
jnp
(bad)
mov
js
dec
fstp
or
push
xchg
cmp
dec
fs
mov
push
dec
cld
pushf
sub
push
int
dec
push
mov
xor
dec
or
hlt
jg
scas
and
add
cmp
out
and
lods
cli
xchg
pusha
xchg
mov
lock
(bad)
fcomp
fcomp
inc
adc
sub
arpl
mov
inc
test
jp
mov
dec
dec
cld
adc
add
mov
or
adc
push
push
mov
inc
lods
push
leave
push
mov
fst
js
clc
dec
pop
scas
jmp
adc
out
or
ret
inc
(bad)
hlt
sub
jmp
push
dec
ss
mov
or
ja
jp
xlat
mov
cmp
dec
loopne
cs
mov
or
cmp
mov
xchg
sub
push
add
lahf
dec
fstp
(bad)
fisubr
cmc
mov
or
aad
ret
daa
jle
or
js
enter
dec
addr16
fisttp
test
cmp
add
dec
fmul
pusha
sub
add
mov
sub
sar
xchg
sbb
ds
scas
out
test
repz
pop
ss
pop
dec
sub
cmp
cmc
xchg
jo
xchg
add
iret
mov
mov
xor
cmp
js
mov
xlat
jmp
out
data16
xchg
jnp
xchg
fdivr
mov
inc
fld
sub
dec
push
popf
(bad)
lahf
mov
sbb
fcomp
inc
nop
outs
leave
enter
dec
sahf
ror
pushf
cmp
clc
mov
cmp
add
ins
adc
jl
sub
adc
arpl
dec
pop
push
or
fistp
test
icebp
faddp
jg
idiv
pushf
fimul
mov
pop
pop
outs
mov
mov
inc
pop
and
pop
js
ja
ins
jle
data16
jg
xchg
pushf
mov
stos
push
repz
in
dec
sub
fimul
je
sbb
mov
mov
xchg
iret
mov
dec
dec
retf
test
movd
sub
ror
or
or
cmp
lods
test
dec
sar
call
iret
sub
test
sbb
add
inc
popf
enter
mov
push
retf
and
sbb
xor
dec
(bad)
outs
adc
div
pop
jmp
adc
mov
mov
or
push
outs
xchg
out
imul
pop
ficom
pop
jge
push
scas
sub
sahf
or
imul
mov
fdiv
cmp
or
dec
cmp
test
lods
pop
lods
add
cld
sti
loop
fcomp
in
leave
icebp
dec
cmp
test
mov
js
pop
das
jo
test
dec
lahf
dec
(bad)
push
add
rcr
ins
test
cmps
sti
inc
fcmovnu
cmp
enter
adc
sub
jp
into
jae
xor
leave
frstor
scas
imul
mov
jp
sub
mov
inc
add
out
sar
fisub
ins
dec
mov
cmc
ins
jns
in
jbe
ja
mov
fidivr
jo
or
call
dec
push
sahf
out
and
in
jmp
leave
div
inc
sbb
jl
dec
or
cwde
mov
jo
pop
gs
adc
sbb
and
push
jo
call
or
add
xchg
sar
mov
mov
add
jle
cli
xchg
xchg
stos
movs
test
sub
out
pop
(bad)
xor
aaa
push
mov
(bad)
jnp
pop
pop
idiv
into
(bad)
xor
mov
jg
int
(bad)
cmp
ret
or
mov
imul
pop
scas
lock
repnz
fmul
int3
sbb
push
jmp
test
(bad)
jnp
dec
shl
pop
test
imul
idiv
sbb
nop
jecxz
out
loopne
mov
add
inc
addr16
rep
cld
(bad)
push
fild
movs
and
fwait
cmp
aam
add
push
and
cmp
sub
push
rol
jns
hlt
push
sbb
dec
inc
iret
std
xlat
fcom
xchg
mov
inc
shr
push
cmps
adc
push
mov
in
sub
lahf
fneni(8087
cwde
fisub
mov
cmp
ret
lds
loop
test
pop
fwait
lahf
jno
ins
or
mov
sbb
cmc
(bad)
retf
(bad)
fcos
dec
mov
mov
sbb
mov
jl
jno
aam
push
jmp
push
and
shl
fisttp
pushf
and
sub
pop
push
test
(bad)
fild
(bad)
rol
into
xchg
test
sub
and
aad
jg
cmc
cwde
ins
mov
ins
dec
fisttp
inc
es
out
test
sbb
xor
and
ror
sar
mov
(bad)
out
jmp
(bad)
xlat
sbb
fdiv
in
cwde
js
add
sub
(bad)
clc
mov
jno
je
das
call
daa
or
mov
mov
mov
cmp
js
mov
shl
cmp
(bad)
mov
mov
lahf
data16
in
call
pop
outs
inc
dec
js
or
pop
(bad)
leave
retf
out
cwde
cmp
pop
stc
or
sbb
sub
rol
push
lea
aaa
test
aad
ret
jg
pop
imul
pop
in
sbb
popf
(bad)
dec
lods
pop
xchg
mov
dec
add
push
sbb
(bad)
mov
mov
jb
cmp
sub
sbb
stos
les
test
cmp
add
test
adc
jne
sti
js
aas
inc
ja
jb
test
cli
inc
ins
fwait
ins
fidiv
push
pop
stos
xchg
cmp
push
test
cmp
test
push
inc
jae
test
aas
je
pop
push
cmp
rcl
jb
mov
enter
adc
and
push
mov
rcr
push
mov
add
or
jmp
sar
mov
cmp
jbe
pushf
mov
ret
jns
sbb
inc
(bad)
icebp
pop
jp
stos
iret
sahf
pop
sub
push
xchg
lea
xor
(bad)
out
mov
cmp
sbb
stos
fcomp
sub
jp
jle
xchg
mov
or
inc
fdivr
retf
xor
and
xchg
popf
xor
dec
pop
dec
fisub
fisubr
mov
mov
hlt
sub
out
fcom
sbb
and
enter
jmp
int3
push
mov
mov
fist
sub
(bad)
xchg
add
push
test
push
loop
iret
pop
push
cli
leave
retf
ds
jmp
xchg
pop
pop
icebp
sub
ins
inc
aad
outs
push
xchg
fstp
mov
movs
adc
fcmovnu
das
outs
js
jg
mov
ret
xor
ins
cmp
push
cmc
adc
fisub
iret
js
mov
scas
or
pop
nop
cs
out
xor
pop
outs
(bad)
vmread
pop
xor
loopne
repz
push
test
ins
pop
mov
jle
or
mov
cmp
push
adc
pop
cmp
aad
add
mov
inc
aas
xchg
jno
sbb
mov
jnp
sbb
sub
pop
mov
out
add
js
aam
addr16
mov
add
add
sti
in
aaa
in
(bad)
ins
ficom
sub
dec
mov
push
shr
add
xlat
lods
popf
push
retf
xchg
lock
sub
pop
jmp
js
gs
push
adc
mov
mov
ret
and
loopne
or
or
mov
sbb
and
cwde
mov
xor
ret
and
xor
movs
dec
jns
jmp
das
aas
adc
xor
sbb
xchg
cs
or
rcl
pop
inc
inc
pop
mov
jp
cmp
daa
scas
jo
mov
movs
add
repnz
dec
and
jmp
dec
popf
push
cs
in
pusha
cdq
retf
(bad)
mov
dec
and
push
das
sbb
mov
scas
nop
push
loopne
clc
xchg
ins
or
dec
inc
push
mov
jae
cmovs
jle
inc
push
ss
test
mov
arpl
mov
inc
daa
setne
and
mov
pop
pop
inc
inc
in
bound
cwde
push
dec
jge
nop
cmp
inc
xchg
popa
xchg
mov
or
mov
pop
movs
arpl
cli
dec
sub
mov
in
push
nop
dec
mov
push
ret
daa
fidivr
pop
push
cli
and
jle
push
nop
jmp
push
adc
mov
dec
jmp
and
pop
lds
outs
dec
je
lea
mov
and
jmp
pushf
pop
out
sbb
rol
push
in
dec
lods
imul
lock
out
xchg
sti
(bad)
clc
lods
jmp
fisubr
(bad)
jge
xchg
pop
and
and
pop
and
shr
das
gs
jmp
call
das
mov
dec
lods
push
aaa
jmp
sbb
adc
out
lea
jecxz
push
jbe
add
popa
inc
sub
mov
test
int3
mov
retf
in
retf
iret
enter
pushf
retf
mov
ja
mov
call
dec
jbe
test
test
inc
jo
and
call
cwde
retf
nop
add
js
sbb
jp
xchg
addr16
cmps
xchg
mov
data16
jns
shl
push
ja
lahf
pop
push
pushf
push
mov
in
and
or
inc
xchg
mov
push
dec
sub
xor
test
cmp
loope
pop
pop
adc
xchg
pop
fdiv
mov
inc
pop
push
jno
enter
add
jg
aas
es
add
dec
push
arpl
fistp
fcom
pushf
pop
inc
scas
jmp
leave
xchg
popa
adc
and
xor
sub
cmp
sub
or
aad
nop
push
lahf
jmp
pop
test
pop
repz
out
call
jg
mov
test
dec
jl
or
sub
call
stc
push
lock
add
mov
loopne
sub
in
scas
ret
cli
stos
dec
inc
or
push
mov
or
in
into
adc
scas
cmps
(bad)
(bad)
push
fwait
cmps
and
pop
leave
movaps
xor
js
sti
jae
push
cmp
adc
mov
fcomp
pop
sbb
scas
ja
addr16
sbb
or
pushf
dec
call
inc
jns
xor
mov
mov
(bad)
sbb
call
cmc
ret
mov
sbb
std
adc
or
fs
js
jmp
loopne
es
push
pop
or
out
mov
addr16
inc
pusha
clc
bndldx
data16
jg
mov
nop
sahf
push
jp
scas
(bad)
pop
outs
dec
or
stos
push
rol
hlt
cmp
dec
cwde
std
cwde
mov
dec
mov
pop
cmp
mov
xchg
xchg
fsub
call
cmp
mov
jg
jne
add
cmp
(bad)
pop
sahf
movs
stc
nop
xchg
sub
inc
stos
scas
dec
jp
dec
lods
push
adc
jmp
pop
retf
fs
ds
setge
sbb
xor
adc
push
scas
inc
(bad)
mov
jns
test
pop
cmp
dec
(bad)
dec
icebp
retf
psubb
mov
pop
inc
mov
dec
xlat
into
push
sub
pop
mov
fnsave
mov
xor
mov
pop
pop
add
sub
sbb
fld
call
icebp
dec
dec
xchg
or
sbb
cmp
or
and
repnz
stos
jnp
sti
mov
mov
add
cmp
jmp
call
sub
mov
call
(bad)
stc
out
ss
out
call
fcomi
or
addr16
test
mov
mov
mov
add
dec
rol
ds
jnp
pop
enter
inc
jl
push
pop
or
mov
inc
dec
xor
pop
rcr
out
mov
fdivrp
dec
push
jge
adc
sub
jbe
pushf
mov
ins
je
or
adc
in
sub
dec
daa
das
or
sti
int3
mov
pop
out
fimul
dec
mov
mov
ds
push
pop
fild
enter
(bad)
dec
mov
sub
mov
xchg
pop
dec
lds
mov
loop
dec
push
mov
lds
cwde
dec
add
mov
ins
neg
cmc
test
les
fnop
fistp
shr
nop
inc
pop
xor
fdiv
xchg
fwait
sahf
mov
and
add
outs
xchg
push
cmps
adc
cli
fisubr
shr
jbe
cmc
test
pushf
cmp
pop
cdq
scas
sbb
inc
mov
(bad)
mov
fist
std
ins
leave
mov
mov
mov
mov
ja
mov
xchg
std
aam
push
rol
push
mov
leave
mov
je
ds
push
clc
inc
push
inc
test
fldcw
mov
push
clc
cmp
stos
adc
(bad)
xor
jns
enter
adc
add
jnp
xlat
aad
mov
pop
jns
or
adc
or
add
cmp
mov
fcom
pop
jl
xchg
jle
cmp
call
xor
lods
and
mov
push
mov
sbb
or
adc
mov
mov
in
int
xchg
cmp
cmp
inc
das
cmp
ins
sub
xor
jle
pop
push
mov
imul
xchg
jmp
lahf
mov
pop
fistp
or
sbb
jle
adc
and
inc
jge
xor
fild
popa
jle
fld
inc
sti
lods
lods
lods
jb
jle
into
fsubr
mov
push
mov
pop
sbb
sub
sbb
das
add
mov
dec
aas
ror
mov
sub
fcomp
mov
out
xor
(bad)
dec
jle
shr
loope
cs
pop
loopne
ins
in
call
out
adc
jp
add
jmp
sub
push
aam
loope
jmp
out
push
cmp
push
inc
out
xchg
js
movs
xchg
aam
clc
pop
repnz
sbb
std
jmp
fidiv
sbb
xchg
test
repnz
sbb
push
mov
fsub
stos
les
loop
repnz
pushf
mov
rcl
cld
pusha
shl
iret
enter
cmp
cmps
icebp
pop
fdiv
ins
pop
addr16
cmp
out
pop
jmp
push
inc
push
(bad)
xchg
scas
pop
push
add
les
(bad)
cmc
fwait
stos
ds
loop
test
xlat
mov
push
retf
jae
inc
cmp
push
(bad)
jnp
popf
push
imul
lock
js
cwde
in
test
enter
xchg
(bad)
or
push
push
inc
je
stc
mov
xor
inc
jns
sti
dec
jle
pop
imul
inc
mov
jge
pop
stos
out
enter
jo
loope
mov
xchg
ins
or
mov
pusha
pop
jo
sahf
ja
mov
out
sub
in
loop
mov
int3
pop
pop
cmp
dec
xchg
js
dec
pop
test
enter
retf
pushf
test
test
inc
xor
stc
push
mov
dec
pop
jmp
mov
sahf
cmp
mov
les
clc
push
push
sub
cmp
xchg
ins
push
pop
imul
cmp
pop
int
hlt
scas
add
into
xor
mov
or
(bad)
pop
aas
dec
adc
dec
es
mov
mov
stc
data16
dec
mov
add
pop
or
pop
sub
pop
mov
jno
into
(bad)
jecxz
(bad)
mov
jno
mov
rcl
sub
add
retf
mov
jo
scas
cdq
mov
mov
scas
jecxz
ins
and
fidivr
cli
clc
pmullw
shl
imul
dec
lock
test
or
movs
pop
enter
xchg
aad
mov
mov
or
adc
out
sbb
mov
push
mov
jb
rcr
neg
and
cmp
aaa
int
imul
pop
sbb
aad
mov
jbe
sbb
in
loope
jno
add
sahf
sub
mov
push
clc
outs
test
mov
test
jb
dec
and
repnz
dec
cli
or
sti
lock
dec
mov
jns
loope
test
sbb
(bad)
rol
dec
adc
push
sub
jge
ficom
(bad)
mov
push
fisubr
movs
icebp
outs
cmp
(bad)
fwait
jb
repnz
mov
ins
shr
test
sub
inc
adc
adc
dec
jb
jo
test
mov
jmp
pop
xlat
dec
jmp
jle
push
inc
mov
dec
add
dec
inc
jno
lds
fist
or
cmp
mov
enter
dec
adc
(bad)
xchg
inc
jle
xchg
cmc
(bad)
sub
sub
and
jge
sbb
dec
out
scas
outs
imul
dec
mov
div
jmp
test
icebp
cmp
imul
inc
out
xchg
scas
sahf
add
rcl
inc
je
(bad)
inc
push
std
and
inc
icebp
sub
pop
movs
mov
inc
sahf
popa
loopne
push
sbb
push
pop
(bad)
and
stc
jmp
cmps
cld
ins
or
mov
popa
je
ds
xor
jmp
call
jo
and
pop
frstor
mov
mov
into
xchg
sub
call
fmul
jnp
adc
push
sbb
jmp
test
push
sub
xchg
push
(bad)
out
jmp
loop
mov
fisub
or
sahf
sbb
fs
lods
pop
ss
cmp
nop
ins
out
jns
ins
fstp
js
jmp
pop
mov
mov
sub
push
pop
push
popa
punpckhbw
arpl
popf
sub
mul
lea
and
sub
shr
xor
(bad)
sbb
shr
pop
dec
test
pop
cdq
stos
push
add
out
xchg
fadd
pop
add
sub
adc
xchg
call
mov
repnz
hlt
or
or
retf
mov
xchg
inc
mov
je
inc
stc
pop
scas
(bad)
popf
les
add
sbb
into
js
xchg
repz
(bad)
(bad)
jl
or
ins
push
int3
mov
pushf
xor
jns
or
jne
mov
movs
lahf
jo
inc
cld
rcl
int
inc
fwait
addr16
jns
fidiv
jg
push
mov
sbb
pop
jo
push
jle
icebp
jmp
sub
or
mov
pop
pushf
dec
pop
fbld
xor
scas
mov
cmc
enter
adc
cmp
adc
das
push
push
cdq
ins
rol
mov
sub
ret
and
sub
mov
push
fidivr
loope
sahf
mov
(bad)
mov
mov
imul
sbb
mov
adc
sbb
sbb
mov
mov
imul
mov
pop
test
jmp
int
fstp
stc
repz
push
enter
jb
mov
jle
add
imul
xchg
adc
pop
mov
cmp
in
inc
adc
and
bound
js
xchg
lds
daa
lods
aas
(bad)
aas
sbb
fdivr
sar
cmp
mul
push
fild
jp
mov
outs
and
fstp
mov
imul
cmps
je
pop
xor
push
scas
popa
pop
outs
dec
mov
aas
inc
(bad)
fcmovbe
push
es
gs
mov
call
pop
xor
stos
dec
mov
fdiv
(bad)
imul
repz
pop
fsubr
push
jecxz
jmp
std
out
test
movs
dec
push
mov
out
aam
cli
xlat
sub
stos
sub
inc
xor
jmp
scas
mov
(bad)
xchg
inc
sti
push
jg
sti
jbe
or
pop
popf
push
cdq
(bad)
mov
mov
out
jl
cld
retf
loopne
and
hlt
cmp
shl
(bad)
pop
sub
ret
mov
inc
pop
mov
and
ds
mov
adc
xor
or
movs
fisttp
jle
stos
mov
test
sub
dec
inc
call
adc
iret
jbe
xor
scas
lods
ja
ret
inc
int3
pop
xor
cs
outs
mov
mov
mov
mov
icebp
ficom
mov
mov
mov
fcomp
loope
sti
sub
mov
adc
and
fsub
mov
jno
pushf
jp
(bad)
sub
fbstp
mov
inc
repnz
inc
adc
neg
ds
imul
pop
mov
pop
mov
ret
ret
inc
dec
aaa
xor
shl
outs
mov
jecxz
ja
loopne
(bad)
out
and
mov
js
ret
xor
mov
jp
cmp
ja
cld
ins
pop
ret
sbb
add
(bad)
cmp
push
mov
jns
mov
enter
mov
out
jle
jmp
jmp
dec
mov
sar
cs
mov
xlat
mov
(bad)
into
jmp
sub
dec
push
or
jne
ins
mov
mov
test
mov
fbld
mov
cmp
dec
dec
ret
jns
cmps
jmp
stos
call
pop
in
(bad)
push
or
mov
(bad)
out
mov
push
mov
push
cmp
enter
scas
lds
(bad)
add
pop
jp
xlat
mov
jg
fwait
fwait
stos
push
or
jmp
scas
arpl
(bad)
ffreep
and
push
cwde
mov
xchg
psubusb
pop
stc
fld
dec
xor
shl
cs
pop
out
data16
or
mov
mov
push
cmc
retf
add
loopne
pusha
mov
jmp
pusha
jle
jle
or
inc
cmp
iret
es
fldenv
stos
or
aam
dec
push
stc
add
or
mul
out
mov
retf
adc
jg
adc
mov
inc
pop
stos
shr
sbb
push
loop
dec
mov
cmp
fstp
sbb
call
add
sbb
retf
dec
pop
sar
inc
jnp
sbb
and
icebp
dec
or
cmps
js
push
mov
or
icebp
lods
sbb
sub
push
out
ret
dec
pushf
push
adc
ins
imul
cmp
add
neg
jmp
inc
pusha
sub
adc
rdmsr
aaa
sub
pop
dec
xor
retf
pop
rcr
jmp
repnz
(bad)
lea
sbb
iret
jne
pop
inc
(bad)
cmp
sbb
js
mov
sub
pop
aaa
js
xlat
test
pushf
xchg
stos
add
enter
out
or
(bad)
iret
or
fst
sbb
in
xchg
cmp
push
in
jge
xchg
ror
xor
in
jns
cdq
loop
es
imul
div
test
retf
pop
add
sub
iret
xchg
xor
and
jnp
mov
movs
popa
sbb
ins
xor
jg
test
ret
sbb
or
adc
scas
or
stos
iret
call
rcl
add
mov
stos
pop
dec
mov
adc
sbb
xchg
push
leave
stos
fcom
sti
movs
std
adc
xor
or
fbstp
(bad)
mov
mov
or
inc
(bad)
dec
pop
cmp
or
call
repz
mov
xor
rep
iret
lahf
inc
pop
and
sbb
in
or
out
vmread
mov
and
popa
fimul
dec
ds
(bad)
jle
mov
sbb
stos
loop
fs
out
mov
sti
push
das
jo
fcmove
ficom
cmp
xor
stos
mov
sti
adc
retf
cmps
rcl
gs
outs
dec
jg
mov
dec
mov
iret
add
or
js
ret
fcmovnbe
ror
push
push
push
push
xor
shl
xchg
jp
push
outs
lea
and
add
or
add
(bad)
lock
xchg
add
cmps
push
mov
in
call
jb
out
addps
dec
outs
clc
push
mov
mov
(bad)
cmp
jnp
aam
jg
or
or
es
icebp
les
sahf
frstor
stc
rcr
add
call
dec
push
movs
gs
fcom
ins
loope
adc
jbe
mov
or
push
ss
retf
adc
js
dec
jmp
fild
dec
mov
mov
xchg
mov
int3
xor
popf
xor
arpl
jp
fwait
inc
push
ja
cmps
jns
jp
jg
jmp
sub
pusha
int3
test
push
std
loope
mov
or
loop
add
scas
sahf
xor
ds
out
push
iret
sbb
lock
sbb
cmp
push
pop
into
add
add
int3
hlt
mov
fimul
ss
adc
enter
inc
adc
mov
mov
xchg
or
pop
cli
adc
jmp
sub
xchg
shl
mov
(bad)
cmp
xchg
adc
scas
pusha
pop
fistp
mov
cmps
repnz
lods
adc
adc
into
cld
outs
sub
aas
jne
inc
aas
sub
dec
out
cdq
clc
inc
pop
cs
jmp
push
stc
faddp
imul
cwde
jmp
sub
xchg
mov
fild
std
sbb
fdivr
stos
rol
cmp
cmp
sahf
into
jp
xor
jmp
nop
fistp
add
sbb
jb
ds
cmps
ds
jle
mov
call
in
push
ds
cmc
adc
dec
add
xchg
ret
jb
push
repz
leave
out
lock
cmps
rcr
cmp
mov
xor
jmp
dec
mov
mov
je
inc
jle
add
lods
xchg
imul
sbb
mov
fld
ffreep
cmp
dec
pop
outs
mov
mov
jl
mov
test
nop
sahf
shl
repz
iret
sub
or
dec
sub
pop
sub
lock
inc
and
inc
inc
cwde
outs
test
add
out
out
cdq
js
data16
pop
mov
adc
adc
leave
faddp
sbb
xchg
push
push
int
std
sbb
sbb
sbb
dec
pop
pop
sub
push
sub
je
mov
dec
adc
cmp
push
mov
pusha
pop
sub
fnstenv
mov
test
out
mov
xlat
adc
or
outs
jle
int
outs
mov
xor
and
cmp
test
(bad)
xor
push
or
dec
or
scas
sub
push
dec
cmps
sbb
aas
cmps
or
push
dec
(bad)
cmp
sbb
rcl
out
xlat
add
ins
pop
int
es
mov
sbb
fcmovnu
inc
ret
add
shr
stos
test
popf
ds
and
fstp
outs
dec
mov
push
inc
repz
inc
mov
sbb
cmp
push
mov
test
add
sbb
dec
test
jmp
dec
test
ret
pushf
daa
test
arpl
out
sub
add
fmul
fst
mov
mov
or
mov
cs
out
sahf
cdq
(bad)
mov
jb
lods
jl
cwde
mov
hlt
xor
retf
xor
out
cld
adc
sbb
(bad)
sahf
xchg
aas
fsub
adc
outs
retf
mov
inc
pop
dec
pop
cmps
mov
push
mov
stos
xchg
and
lods
push
aaa
cmps
idiv
cmc
movs
xchg
push
jl
test
adc
pop
mov
xchg
or
sar
pop
lds
shr
sub
mov
sahf
shl
rcr
daa
cmp
mov
adc
pop
pop
scas
scas
lea
mov
jne
repnz
xchg
or
leave
call
cmp
int3
jne
les
in
jecxz
jg
rol
cmp
or
fcomp
xchg
sbb
push
(bad)
(bad)
stc
loopne
addr16
cld
fnstsw
or
(bad)
jmp
push
je
nop
fs
mov
push
mov
shl
aam
xor
int3
and
pusha
adc
or
xor
inc
push
inc
(bad)
or
outs
sbb
jmp
addr16
(bad)
mov
jno
cmps
sbb
mov
xor
outs
repz
lock
pop
outs
xor
pop
pop
movs
ja
adc
les
imul
outs
mov
(bad)
mov
mov
add
sti
adc
push
cmp
imul
or
sbb
aas
inc
adc
fisubr
adc
stc
inc
mov
cdq
fild
scas
or
adc
rol
out
ins
push
into
lods
repnz
outs
sahf
out
stc
mov
outs
or
test
fs
jns
cmps
jnp
and
sti
imul
push
add
cmp
enter
jp
jp
outs
mov
mov
repnz
leave
stc
mov
push
outs
xor
or
cmp
hlt
push
mov
cdq
mov
xchg
lods
aaa
cmp
dec
or
inc
in
mov
jge
push
pop
adc
fnsave
aas
or
dec
xor
or
enter
xchg
fldenv
mov
into
aaa
jle
js
iret
mov
js
mov
fwait
imul
clc
push
(bad)
xchg
sub
enter
or
push
scas
test
mov
or
pop
mov
das
(bad)
cmp
std
jmp
outs
adc
xchg
lea
cmp
(bad)
data16
mov
sub
cli
popa
dec
cld
rol
fstp
cmc
int
int3
and
cli
cld
cdq
in
sub
mov
mov
and
mov
pop
aas
out
into
std
leave
into
or
dec
outs
in
xor
jg
mov
jne
push
in
inc
mov
inc
sbb
clc
push
add
(bad)
and
push
push
pop
cmp
and
nop
cmovo
pop
xor
hlt
cwde
les
or
sub
hlt
pop
and
dec
dec
jae
test
leave
xor
mov
mov
out
sub
fstp
inc
sub
dec
pushf
js
out
sbb
mov
mov
jmp
fcomp
jb
mov
ins
retf
lea
dec
out
xchg
add
neg
sti
iret
jns
cmp
lods
mov
cmp
mov
adc
hlt
inc
jmp
lea
stc
pop
mov
retf
loopne
sub
xchg
push
push
xchg
sub
mov
popa
fsubr
add
out
aam
jns
iret
ror
sbb
mov
daa
mov
push
gs
out
mov
clc
jae
movs
test
ds
ins
dec
addr16
loopne
not
lods
popa
enter
lods
jp
clc
jmp
mov
push
(bad)
dec
jp
xchg
aaa
or
dec
cmp
retf
sbb
lods
sub
sbb
(bad)
xor
mov
ret
call
sub
shl
retf
or
das
jns
push
lahf
xor
gs
frstor
xchg
xchg
enter
jne
cdq
loope
daa
loopne
mov
fnstenv
aas
mov
ret
mov
fmul
lahf
adc
lock
repz
sub
pusha
cmc
inc
loop
fbld
popf
jae
mov
pop
pop
pop
jns
pop
std
sar
rol
int3
push
icebp
jb
sbb
pushf
xchg
mov
dec
pop
mov
xor
or
or
clc
pop
or
or
loope
cwde
pop
ss
daa
neg
cmps
push
add
pusha
int
cmps
mov
call
and
mov
adc
mov
xchg
xchg
mov
push
dec
cmp
jae
pop
loope
add
aam
in
pop
inc
std
and
add
adc
lahf
cs
sub
push
in
mov
shr
arpl
scas
lds
test
jae
dec
cwde
je
stos
cmp
cmp
iret
fmul
fucomp
mov
sub
aam
cmc
stc
fisub
sbb
mov
loop
(bad)
repnz
and
and
pop
inc
xchg
dec
push
call
pop
cmp
jecxz
loope
hlt
ret
jp
and
sbb
pop
div
sbb
mov
sbb
ret
clc
mov
cmp
dec
push
(bad)
(bad)
and
sub
fnstsw
paddw
out
dec
js
adc
push
ret
pusha
sbb
mov
mov
test
sub
lds
pop
pop
call
add
js
jg
aam
scas
xchg
dec
pop
enter
pop
xchg
adc
adc
sbb
dec
sar
out
pop
mov
mov
sbb
mov
mov
push
out
sub
sti
jns
dec
inc
dec
jle
sar
scas
add
arpl
cmps
rcr
cmp
fiadd
inc
pop
loopne
dec
pop
pop
call
pop
mov
(bad)
ja
call
xchg
or
mov
aad
enter
push
or
sub
jl
xor
sbb
push
push
pusha
imul
retf
imul
daa
or
sbb
(bad)
and
mov
mov
imul
stos
fwait
cmp
je
jle
sbb
push
or
fmulp
and
and
push
dec
jne
jne
dec
xlat
dec
sahf
stos
xchg
pop
stos
xchg
xchg
mov
jb
mov
das
dec
iret
xor
xor
fistp
stos
push
and
add
outs
fdiv
add
aam
ror
ins
rcl
add
dec
gs
lea
pop
mov
pop
fcmovu
sbb
adc
retf
inc
lahf
jns
dec
addr16
les
push
push
pop
xchg
push
or
ficomp
sub
pushf
cmp
dec
pop
mov
int3
iret
jmp
mov
cmp
retf
mov
dec
stc
cwde
loope
cwde
scas
or
fisubr
inc
or
out
lock
mov
call
push
and
xor
into
fmulp
pushf
push
enter
loopne
push
jp
cdq
sub
int
dec
mov
lea
mov
shr
in
jl
jge
pop
cmp
dec
pop
pop
ins
jns
and
(bad)
lods
adc
into
cwde
add
and
sub
and
ret
ja
(bad)
jne
call
push
mov
adc
add
mov
mov
adc
(bad)
call
fsubr
adc
xlat
push
push
jl
pop
aas
push
dec
js
jmp
cmp
fwait
lahf
pop
dec
pop
xor
out
dec
ins
sahf
sbb
pop
xchg
int
jg
xor
imul
adc
mov
lahf
test
fsubr
push
mov
aad
sar
leave
pop
dec
sub
push
lods
into
xchg
popf
add
push
push
jmp
pop
adc
sbb
dec
les
mov
arpl
jge
out
pop
das
or
dec
outs
xchg
dec
or
outs
ins
inc
test
dec
nop
jge
pushf
enter
aas
ins
sti
or
imul
mov
dec
int3
imul
mov
mov
mov
imul
adc
pop
xchg
jmp
push
addr16
aas
fiadd
and
mov
loop
xchg
neg
cmp
fimul
pop
aas
mov
arpl
(bad)
cmc
cmp
sti
(bad)
in
dec
sti
sub
mov
rcr
inc
(bad)
jle
(bad)
ds
nop
xor
sbb
iret
fdivr
test
in
outs
js
(bad)
push
cdq
push
retf
scas
test
inc
fcomp
aas
sub
mov
cmp
loope
mov
movs
sub
mov
dec
in
ins
ins
pand
push
rcr
cmp
call
aaa
add
dec
or
cli
dec
test
jb
out
push
dec
mov
(bad)
(bad)
jg
ja
sub
dec
loopne
mov
fs
outs
pop
mov
dec
daa
xchg
(bad)
jb
pop
in
stc
xchg
sbb
in
cmp
lods
jmp
sub
imul
jno
push
lods
pop
jmp
sahf
pop
or
inc
(bad)
stc
adc
dec
enter
adc
test
sbb
cmp
scas
test
push
ja
outs
fistp
jg
dec
hlt
pusha
jnp
jge
out
jo
retf
pop
pop
push
xlat
pop
push
data16
jbe
shr
jne
or
std
mov
ins
xor
das
inc
or
mov
dec
xor
mov
cmp
inc
lahf
sbb
cmp
ret
push
lods
push
and
imul
mov
(bad)
fxch
mov
push
jb
dec
mov
jmp
data16
test
fwait
adc
retf
xor
adc
mov
dec
push
jle
pop
cmp
pop
xlat
aas
inc
ss
pop
mov
jecxz
fs
bound
and
dec
sub
stos
pop
out
je
cmps
mov
cmps
lods
lock
fscale
lahf
dec
and
cs
inc
xchg
jnp
pop
cmps
mov
outs
push
mov
lods
mov
cmp
fst
loope
sar
sbb
xlat
fs
inc
mov
mov
(bad)
popf
cdq
mov
bound
sub
xchg
shl
mov
xor
pop
cmp
sbb
push
cwde
pop
add
mov
jmp
mov
inc
xchg
inc
std
loopne
mov
cmp
int
addr16
jno
mov
cwde
enter
mul
test
outs
sbb
es
repnz
mov
test
sahf
or
call
jecxz
inc
call
dec
fs
and
ficomp
aad
cdq
push
mov
leave
rcl
push
mov
or
pop
retf
push
gs
pop
hlt
and
adc
sub
sar
sub
(bad)
js
cmps
mov
pop
jecxz
fdiv
popaw
bound
fnop
mov
clc
lahf
das
sbb
ret
cmp
retf
cmp
retf
out
clc
enter
nop
push
jb
sbb
repnz
mov
xor
jmp
in
cwde
cli
mov
sbb
xchg
sub
jnp
xchg
push
dec
jnp
lea
shl
inc
mov
call
test
xor
mov
xchg
scas
out
aam
pusha
dec
or
shl
xor
aas
or
and
sbb
push
pusha
aad
and
mov
add
xchg
mov
lds
dec
js
std
pop
mov
sar
and
push
xor
mov
psubusw
(bad)
or
sti
arpl
fstp
pop
or
pop
pop
mov
push
pop
inc
lods
in
jmp
das
push
add
sahf
mov
popa
sar
and
aas
jns
sbb
repz
jmp
or
int3
mov
cmps
enter
loop
les
sub
scas
pop
mov
jg
push
mov
mov
ins
rcr
adc
clc
int
xor
mov
sahf
retf
outs
jl
jno
imul
sub
push
mov
jno
pusha
cmps
sbb
cdq
push
lods
cdq
push
mov
(bad)
(bad)
inc
mov
in
or
pop
jle
cmp
sar
ss
push
mov
xchg
pushf
add
ret
hlt
outs
jg
in
outs
cmp
cmp
cmp
sbb
inc
shr
cwde
push
jecxz
test
cld
lock
iret
jge
lahf
dec
(bad)
or
or
dec
aaa
cdq
in
(bad)
lods
loope
mov
retf
xchg
push
test
dec
xchg
loop
adc
out
push
jns
cmp
cmps
cwde
call
shl
and
sbb
test
les
sbb
icebp
mov
sahf
fld
(bad)
call
mov
push
adc
clflush
dec
outs
out
cmp
mov
rcl
test
mov
push
jge
or
std
mov
mov
sbb
or
pop
sbb
cmp
rcl
ror
sub
mov
cmp
not
fadd
loopne
lock
test
aas
fisttp
out
in
xor
call
stc
loopne
mov
paddusb
ins
add
sti
or
scas
mov
cs
jecxz
ss
cwde
cmp
pushf
shr
or
push
jnp
cmp
xor
cli
or
mov
into
sbb
push
call
jg
push
push
sbb
cmp
into
ret
and
retf
sub
sbb
add
fcomp
push
cmp
mov
add
add
dec
mov
push
jmp
adc
adc
fmul
pusha
sub
les
in
mov
push
ffreep
jp
sbb
adc
push
jno
cmp
mov
das
outs
rol
outs
mov
xor
rcr
cli
cmp
pop
dec
cwde
in
jns
jo
fst
call
stos
jb
out
mov
inc
push
call
je
sahf
inc
addr16
hlt
mov
sbb
xadd
inc
repnz
dec
scas
fidiv
repz
mov
scas
add
inc
popa
sbb
das
shl
lea
or
std
div
mov
icebp
dec
or
jge
fistp
faddp
dec
sub
jge
loope
fwait
xor
in
xchg
jmp
mov
mov
jmp
jbe
mov
ins
pop
or
pop
mov
fdivr
fmulp
cmp
jle
jo
mov
dec
mov
(bad)
inc
inc
in
push
test
inc
lock
jns
cmp
mov
add
or
mov
or
pop
test
stos
aam
lea
enter
repnz
jmp
dec
pop
das
loop
das
jmp
push
push
lods
dec
in
lds
popf
test
cli
cmp
pop
leave
ret
hlt
rcr
mov
jp
pop
fisttp
enter
push
jp
push
in
push
xchg
loopne
aas
fs
repz
in
add
iret
xchg
enter
ss
sub
hlt
and
jmp
jo
cmp
adc
xchg
in
jp
sbb
imul
mov
fdiv
add
lods
(bad)
scas
das
and
dec
mov
sbb
xchg
and
jmp
rcr
fs
call
psubsw
pop
push
inc
inc
xor
leave
mov
mov
cmc
sar
mov
xchg
mov
jne
sar
jp
dec
xor
clc
pop
inc
call
adc
xor
cmp
iret
mov
lea
push
gs
jne
fnsave
push
neg
mov
sub
cld
cmova
scas
scas
into
ficomp
cmps
fidiv
int
ret
mov
call
pop
test
jns
cmp
mov
scas
lods
jecxz
jg
jg
ds
ins
sbb
outs
cmp
(bad)
cs
loopne
movs
mov
cld
in
sub
and
xchg
adc
das
mov
ins
ins
test
ret
or
(bad)
sar
adc
inc
adc
lahf
out
jle
int3
pop
sti
push
bsr
jmp
or
sbb
pop
or
call
inc
sbb
mov
retf
jmp
ret
push
adc
dec
dec
test
and
fmulp
repnz
mov
fstp
sbb
ins
push
imul
retf
push
pop
and
movs
cs
rcl
push
cmp
mov
push
popf
sbb
dec
ins
pop
jnp
sbb
push
leave
out
or
stc
cmps
(bad)
fisttp
(bad)
cwde
dec
in
mov
inc
pop
add
imul
das
or
retf
lds
dec
(bad)
mov
daa
inc
shl
popa
mov
inc
stc
dec
xchg
pop
inc
sahf
fcomp
sahf
sar
imul
lods
jns
adc
dec
outs
jle
cmp
imul
push
sub
sbb
sbb
push
rcr
xchg
mul
push
xor
pop
jg
pslld
mov
or
jle
pop
loopne
icebp
dec
pop
stos
pushw
in
cmp
pop
dec
loopne
sbb
sub
sub
sub
test
xchg
and
cmp
fbld
push
sub
sub
sbb
int3
xor
mov
pop
call
lock
sbb
push
jle
sbb
sub
push
dec
cwde
adc
ins
dec
iret
mov
mov
jle
clc
push
call
lods
call
mov
iret
ds
inc
enter
ins
in
retf
push
in
sbb
or
loope
cmps
ret
fistp
dec
inc
sub
xchg
xchg
pushf
mov
sahf
sub
cli
and
loope
in
adc
(bad)
out
call
xor
mov
xlat
js
into
enter
test
lods
inc
sub
xlat
jmp
pop
aad
push
mov
in
fimul
(bad)
mov
mov
cld
ds
sbb
pop
mov
ins
scas
mov
xchg
pop
bnd
jp
loopne
sti
aas
ret
or
mov
xor
xor
test
push
pop
daa
cld
test
mov
or
adc
pusha
popf
(bad)
jno
mov
iret
xlat
int3
xchg
js
adc
inc
push
stos
popa
mov
aam
popf
pop
jo
in
jmp
lock
mov
dec
cmp
pop
dec
pop
xchg
call
stos
pop
imul
in
sti
arpl
jp
jg
shr
add
lea
xor
les
iret
jmp
mov
inc
addr16
sbb
retf
(bad)
hlt
or
sbb
xor
mov
push
into
outs
(bad)
cmp
repnz
pusha
cmp
leave
add
repnz
push
jb
mov
dec
jp
xchg
dec
retf
or
push
fwait
cwde
pushf
aas
jmp
cld
int
inc
adc
(bad)
cwde
jns
sub
xchg
or
ss
sub
jns
icebp
dec
sub
mov
push
and
retf
sbb
cmp
dec
push
xor
mov
lods
popa
xor
mov
cmp
jecxz
test
fdiv
inc
push
mov
aaa
cli
pop
pop
xor
dec
clc
push
in
rol
call
dec
clc
xor
mov
nop
jg
call
mov
rcl
dec
mov
ja
xlat
fucom
and
sub
pusha
outs
popa
stos
adc
into
xchg
jmp
xor
adc
(bad)
stc
or
hlt
sbb
dec
imul
mov
ins
data16
call
dec
retf
xor
pop
push
jns
mov
inc
(bad)
sbb
cmp
jle
dec
adc
int
stc
jmp
pop
fcomp
pop
push
clc
or
or
retf
inc
mov
fisubr
or
sbb
nop
inc
push
ins
imul
cmp
dec
mov
or
sbb
pop
push
jb
push
pop
dec
adc
int3
cmp
(bad)
pop
sub
dec
adc
leave
ret
inc
aaa
xlat
sub
cmp
ret
mov
lahf
out
mov
fisttp
mov
sbb
adc
jl
enter
out
cmp
cmp
push
arpl
cmc
cmp
add
imul
jp
iret
push
nop
cmp
sbb
sbb
cmps
sbb
mov
jg
dec
aam
call
mov
inc
lods
mov
push
aad
jb
add
mov
sub
cmc
inc
mov
aam
jecxz
sbb
or
fnstcw
aam
xor
add
pop
fisubr
inc
cld
or
mov
pop
bound
mov
cmp
jmp
pop
and
inc
add
fcomp
push
call
out
mov
and
sub
(bad)
mov
fs
push
jle
mov
dec
inc
sbb
gs
mov
xchg
outs
push
ins
mul
cmp
pop
push
in
out
lea
retf
or
sub
pop
dec
xchg
aaa
pop
data16
shl
or
popf
repz
js
sahf
into
sub
adc
bound
mov
ja
into
ins
(bad)
test
pop
imul
(bad)
xchg
lods
pop
imul
stos
xchg
and
popf
dec
sbb
outs
cs
stos
mov
push
push
push
add
adc
fisubr
cmp
popf
call
das
lea
fld
(bad)
in
or
jmp
push
mov
mov
jns
stc
fisubr
or
dec
cdq
cmp
test
push
xor
cwde
int3
ins
sbb
lahf
add
pop
out
mov
div
clc
dec
or
mov
xor
add
push
retf
int3
pop
adc
jge
xchg
lods
xor
ja
(bad)
fxch
xor
cdq
or
test
daa
jo
cld
and
neg
fcmovne
pop
dec
retf
scas
call
div
pop
push
out
xchg
xor
(bad)
retf
push
fwait
push
and
pop
push
mov
and
ins
push
nop
adc
mov
inc
mov
out
retf
push
or
stos
fimul
sar
or
jl
sbb
sub
imul
xchg
loop
cli
jns
mov
pop
jno
mov
hlt
emms
push
sahf
add
adc
mov
add
hlt
xchg
add
cmovg
and
inc
sbb
inc
xchg
lods
or
mov
ret
jns
push
jb
clc
pushf
sbb
inc
sub
or
dec
cmp
dec
push
or
sub
jmp
xor
or
mov
cmp
das
jmp
int3
inc
aad
stos
cmp
xchg
sbb
(bad)
dec
icebp
icebp
mov
xor
jnp
xchg
std
imul
xchg
jmp
xchg
js
xor
adc
lahf
mov
add
mov
xchg
jmp
or
sub
mov
cmp
mov
(bad)
dec
test
sub
sub
test
mov
and
dec
das
pop
dec
(bad)
xchg
pop
sar
xor
ror
out
cmc
sub
pop
jl
idiv
daa
xchg
dec
imul
add
(bad)
sbb
(bad)
sbb
push
sbb
sbb
ret
sub
mov
mov
sahf
mov
stc
sbb
imul
shl
pop
call
imul
cwde
aaa
sti
jmp
test
dec
cmp
pop
sbb
pushf
in
sbb
ins
jmp
xor
or
cdq
fwait
adc
pop
dec
cmps
lahf
pop
mov
ds
jmp
aam
(bad)
loope
mov
sub
jns
aam
loope
scas
cdq
mov
pushf
mov
mov
inc
mov
outs
dec
(bad)
in
push
shl
ins
dec
add
add
sbb
in
xchg
cmp
push
mov
popa
cmp
push
dec
pop
add
in
adc
cmp
fadd
xchg
jge
cs
fidivr
outs
mov
sub
enter
loope
pop
jecxz
ss
out
push
cmps
push
sub
mov
xchg
mov
pop
retf
call
repnz
std
mov
scas
push
(bad)
mov
xchg
mov
add
push
cwde
fwait
inc
jae
mov
cmp
into
pop
retf
push
dec
bound
xchg
xchg
sbb
xchg
pop
dec
or
xchg
add
sar
in
xchg
push
clc
cmc
repnz
pop
imul
xor
dec
pop
mov
mov
mov
icebp
add
loopne
mov
test
mov
mov
sub
(bad)
ficomp
aas
scas
ret
jg
ud1
cmp
dec
imul
popf
mov
ins
pop
stc
push
(bad)
jo
or
pop
fld
pop
dec
cmc
mov
ins
dec
mov
dec
sub
call
jecxz
ret
aaa
push
or
mov
xchg
rol
fdivr
xchg
lea
cmp
dec
fbstp
push
pop
add
or
int
sub
or
js
and
fsub
fwait
dec
popf
aas
into
(bad)
sbb
jne
mov
mov
sub
push
adc
sub
pop
js
sbb
pop
jno
sbb
sub
push
lds
loope
pushw
mov
mov
pushf
inc
int3
lods
sar
dec
mov
and
adc
std
push
iret
shl
sbb
add
jae
adc
push
dec
std
xchg
mov
push
lods
in
inc
sub
lahf
sub
call
mov
inc
call
imul
scas
pop
mov
mov
xchg
and
jge
cmp
dec
addps
push
stc
mov
mul
cli
js
inc
ficomp
fdiv
cdq
and
or
cs
ins
js
jns
xor
mov
outs
fwait
xchg
cwde
cmps
fst
stc
or
popf
(bad)
mov
sbb
addr16
xor
movs
sub
(bad)
xor
lods
xchg
xchg
mov
mov
adc
(bad)
iret
pop
xchg
and
mov
xchg
sti
adc
pop
sub
dec
sbb
sbb
jmp
dec
inc
iret
dec
(bad)
xor
xlat
cmp
repz
xchg
push
stos
or
dec
and
or
int3
pop
pusha
fstp
imul
arpl
cmp
pop
mov
push
test
aam
fchs
dec
(bad)
fxam
(bad)
add
cli
xchg
sbb
xchg
dec
dec
sar
cs
xchg
mov
mov
mov
aas
enter
retf
mov
ja
and
fisttp
in
mov
imul
cld
adc
mov
xchg
cmps
mov
je
cmp
mov
inc
or
xchg
dec
mov
or
jnp
sbb
les
popf
mov
sahf
xor
mov
jmp
jno
call
fisubr
test
fdivr
pusha
stos
stos
mov
inc
sub
sub
movs
int
sbb
hlt
jl
xor
sub
enter
leave
xlat
sbb
adc
or
iret
push
jno
mov
and
mov
sub
dec
pop
fadd
push
push
fwait
push
or
imul
mov
pusha
sub
out
(bad)
adc
and
xor
pop
repz
mov
mov
iret
cmp
popa
neg
(bad)
fcom
pop
ret
sub
call
(bad)
mov
xor
mov
shr
aaa
lds
and
cmp
mov
shl
stc
outs
mov
inc
adc
jmp
loop
or
nop
pop
pop
ds
dec
retf
fnstsw
xchg
rcl
test
cmc
ss
mov
pop
cmps
imul
mov
or
ficomp
fadd
push
fist
rcl
or
inc
ror
fst
repz
sub
inc
dec
dec
mov
call
and
pop
add
loope
daa
call
fidivr
or
clc
int3
imul
mov
or
mov
out
(bad)
fcomp
jg
sub
pop
(bad)
pop
sbb
jns
out
leave
mov
repnz
inc
stos
mov
aam
std
mov
xlat
mov
dec
push
loope
jl
dec
pop
push
pop
lahf
test
jg
cmp
loope
sar
sbb
or
clc
sbb
and
jmp
sbb
and
jne
cmp
imul
data16
mov
imul
add
out
call
inc
sub
pusha
jg
mov
mov
pop
push
(bad)
aad
(bad)
aas
sbb
pop
push
(bad)
jg
xor
fisubr
dec
adc
(bad)
adc
pop
lds
or
lahf
pop
xor
fdivr
or
or
xor
push
sub
(bad)
jg
dec
xchg
rol
lods
sbb
jmp
cmp
pusha
push
ror
aaa
fs
or
daa
jns
and
test
(bad)
pusha
xlat
loopne
mov
or
mov
cmp
jmp
cmp
lgs
bound
cdq
nop
mov
sbb
inc
inc
out
sbb
jp
stc
jg
(bad)
pop
call
(bad)
pop
push
cmc
(bad)
loop
inc
cs
dec
std
push
dec
leave
sub
clc
cli
or
fidiv
ins
stos
js
outs
int
retf
pop
pushf
(bad)
pop
scas
sbb
mov
mov
(bad)
dec
mov
das
nop
cmps
sub
sbb
leave
jb
jg
or
push
push
(bad)
scas
ins
sub
cld
stos
cdq
sbb
mov
sub
lea
add
imul
sub
pop
dec
push
ror
cmp
imul
popf
push
mov
mov
pusha
aaa
(bad)
enter
dec
sub
and
mov
dec
pop
mov
outs
imul
and
fistp
inc
(bad)
ins
enter
cmp
mov
scas
test
fsub
push
cmove
scas
(bad)
fdivp
mov
pop
xlat
cmp
jno
mov
pop
mov
jle
dec
lahf
(bad)
test
jmp
mov
in
pop
std
mov
les
xchg
mov
pop
pushf
fsubrp
call
cmc
cmp
adc
mov
cmp
scas
jmp
jg
jg
in
iret
mov
add
mov
mov
sbb
cld
sar
push
xchg
(bad)
iret
shr
(bad)
pop
out
or
jb
icebp
add
lahf
pop
(bad)
popa
test
push
ficom
or
test
sbb
ins
jl
fimul
scas
push
pop
lea
push
stc
push
jno
sub
push
lahf
mov
add
cmps
arpl
scas
loopne
enter
inc
(bad)
mov
icebp
cmp
sub
jle
out
cwde
addr16
jb
jmp
test
add
xor
sar
cmp
mov
mov
fcom
or
sub
jle
and
mov
imul
lea
aam
push
enter
jmp
push
aas
push
and
pop
out
mov
cmps
inc
adc
inc
fst
test
xchg
outs
popa
cwde
mov
sbb
aaa
lods
pop
lock
imul
or
call
sar
icebp
xor
push
and
mov
sahf
shr
das
and
mov
lods
fcom
out
clc
inc
sbb
arpl
je
fcomi
push
mov
pop
into
inc
inc
out
stc
call
inc
jns
imul
fstp
jmp
scas
shr
clc
fisubr
and
sub
pop
mov
inc
fldenv
sar
into
rcl
or
fdivr
cli
test
xchg
inc
aas
cmp
push
dec
mov
jnp
xchg
cmps
das
test
ret
dec
mov
mov
cli
xchg
aas
pop
mov
inc
xchg
xor
hlt
jo
pop
jmp
cmp
imul
adc
mov
mov
sub
int
fwait
shr
inc
or
or
ja
push
test
add
test
out
and
dec
cmp
cwde
out
xor
and
outs
jno
pushf
call
rol
fwait
sub
call
or
loopne
push
jge
inc
push
aam
dec
jmp
mov
sbb
mov
rcr
sbb
jge
inc
jnp
cmp
mov
(bad)
xor
dec
mov
in
cmp
and
in
push
ret
push
xchg
push
add
dec
fmul
jecxz
pushf
mov
mov
(bad)
iret
push
ins
jae
sub
push
test
jnp
out
int
lods
daa
jp
mov
sub
or
jns
push
jno
push
mov
cwde
arpl
imul
sub
dec
jle
jge
xor
int3
std
int
lods
outs
push
or
jo
pop
pushf
add
sbb
or
jns
js
or
xchg
push
mov
jg
inc
cmp
cmp
pusha
add
and
js
pop
lock
retf
iret
icebp
pop
iret
aas
inc
jp
retf
pop
jnp
lahf
out
(bad)
in
imul
lock
scas
mov
mov
and
cld
push
test
stos
xor
outs
pop
aaa
int3
xor
push
(bad)
outs
stos
out
stos
jo
sbb
cmp
fcmove
out
jecxz
inc
push
sbb
lods
or
dec
inc
fsubr
iret
test
mov
(bad)
js
iret
sbb
daa
hlt
and
mov
in
paddq
mov
dec
(bad)
(bad)
mov
popa
stc
out
stc
retf
mov
sbb
ss
inc
mov
cmp
stos
mov
or
jge
mov
push
mov
inc
pusha
jmp
sbb
inc
mov
xchg
push
daa
mov
out
inc
stos
dec
add
dec
push
jle
dec
nop
sub
clc
jg
sub
mov
sbb
mov
aas
push
lock
je
(bad)
shl
idiv
icebp
std
pop
xor
dec
push
in
xchg
pop
adc
movaps
dec
cmp
dec
or
sbb
(bad)
pop
sti
pop
movs
mov
(bad)
cmp
int
push
sbb
dec
and
(bad)
sbb
xchg
js
retf
test
dec
sahf
mov
sbb
mov
push
minps
cmp
push
arpl
clc
push
test
out
mov
push
cmp
sar
cmp
aas
pop
call
or
gs
or
sub
mov
mov
outs
cmp
imul
cmp
dec
jmp
out
popf
sub
mov
daa
sub
aaa
push
dec
mov
pushf
pop
je
(bad)
leave
movs
sbb
lods
mov
pop
dec
pop
adc
mov
lds
(bad)
std
mov
mov
mov
add
sbb
mov
enter
sar
cmp
fcom
xchg
ja
pushf
or
into
cmp
mov
imul
sbb
lods
sbb
mov
xor
sbb
js
rol
sbb
cli
icebp
or
adc
sub
mov
imul
and
jl
loopne
out
leave
and
and
pop
lahf
sub
jno
jle
outs
in
sti
daa
popa
and
(bad)
dec
(bad)
xchg
mov
push
lods
pop
lds
scas
pop
add
repnz
dec
mov
out
jmp
jns
sub
fmul
push
mov
mov
bound
out
loop
xchg
xor
leave
cwde
js
fstp
cmovge
inc
adc
ss
pop
ficomp
sahf
mov
push
jmp
arpl
pop
in
cmp
das
cli
jno
pop
mov
mov
cmp
scas
push
stos
iret
(bad)
inc
fimul
push
lea
dec
test
jecxz
xchg
sbb
push
add
cmp
jle
stc
cs
or
jbe
imul
fmul
outs
outs
and
jno
or
sbb
dec
aas
sti
ins
loope
xor
jmp
sbb
lods
stos
std
cld
fucomip
mov
xchg
movs
inc
adc
jge
pop
idiv
push
or
outs
shr
push
gs
ror
mov
push
outs
or
std
mov
jmp
(bad)
adc
sub
(bad)
cmp
fisttp
lods
jo
push
std
mov
es
loop
sub
dec
fwait
outs
call
jp
push
stc
or
xchg
mov
push
cmp
lea
mov
outs
js
xor
push
retf
(bad)
sub
push
pop
pop
rol
jecxz
js
xchg
cmp
(bad)
loop
xchg
(bad)
movs
fst
adc
outs
cmp
jmp
fdiv
push
test
sub
xchg
fisubr
and
ins
or
push
fcmovb
or
jl
push
movs
add
pop
retf
daa
js
pusha
in
xor
or
mov
mov
and
mov
or
mov
imul
dec
or
mov
aas
test
adc
ins
call
push
cmps
and
cs
push
scas
mov
std
out
mov
fyl2xp1
outs
pop
shl
push
inc
jae
or
or
sahf
add
ins
mov
btr
call
add
push
xor
mov
jmp
dec
or
das
mov
xchg
and
iret
je
sbb
mov
enter
xor
cmc
push
cmp
rcr
cwde
mov
call
call
loopne
mov
dec
(bad)
in
or
shr
jo
and
pusha
in
daa
lods
nop/reserved
dec
or
mov
push
rcr
leave
sahf
jge
cli
or
or
cwde
cmp
retf
xor
or
push
scas
(bad)
push
dec
outs
loopne
cmp
dec
pop
pop
outs
imul
fadd
fidiv
sar
fnstsw
sbb
lds
cmp
int
jg
and
shl
or
sub
sub
fadd
sahf
iret
out
dec
pop
inc
gs
mov
shl
sub
sbb
sbb
(bad)
aaa
sub
sbb
addr16
or
cwde
mov
pop
dec
arpl
call
dec
mov
shl
aad
scas
adc
cwde
cmps
cmp
outs
pop
xor
bound
pop
pop
rcr
xchg
add
pop
das
xor
mov
or
add
sub
cli
lods
mov
leave
dec
loope
rcr
inc
test
cmp
out
xchg
repnz
xor
sbb
es
jns
mov
xchg
lods
jp
add
inc
mov
or
jmp
jg
out
adc
mov
mov
inc
cwde
ret
pop
ret
out
mov
out
lds
push
fs
dec
not
mov
dec
dec
dec
paddw
mov
in
daa
push
or
mul
jnp
push
pop
mov
leave
dec
mov
pop
stos
mov
outs
pop
mov
dec
ja
imul
inc
mov
cmp
outs
mov
adc
mov
loop
(bad)
ins
test
test
xchg
xchg
scas
clc
call
ds
cmp
cwde
dec
std
leave
ins
movs
repnz
pop
add
xchg
xchg
cmps
mov
call
and
mov
xchg
sub
dec
inc
or
mov
mov
lods
iret
stc
fidivr
arpl
mov
cdq
outs
sbb
jnp
jecxz
mov
push
pop
sbb
std
dec
hlt
ror
retf
jo
add
(bad)
push
push
ret
les
mov
sbb
jnp
xor
jbe
mov
inc
ss
dec
or
test
sub
mov
pop
mov
idiv
mov
inc
jge
or
sahf
aam
pop
adc
jnp
xor
ror
xor
jae
lahf
scas
fistp
mov
lods
mov
mov
mov
shr
add
push
sub
mov
pop
jmp
sub
jnp
inc
clc
icebp
mov
aaa
push
into
icebp
and
scas
push
aaa
mov
(bad)
mov
lods
sub
jae
jmp
daa
lahf
mov
jg
pushw
push
xor
js
jo
xor
mov
mov
mov
hlt
retf
ret
sbb
js
jmp
or
fs
fxch
in
sub
stos
(bad)
ds
push
sub
jno
mov
adc
das
test
jp
retf
sbb
mov
dec
xchg
and
pop
stos
inc
inc
mov
xchg
dec
(bad)
mov
pusha
fidivr
push
inc
(bad)
adc
mov
int
ret
fcomp
sub
sbb
(bad)
aas
aad
xchg
retf
push
int
arpl
jo
sbb
or
pop
mov
xor
outs
daa
into
pcmpeqd
add
pop
or
sti
xor
mov
sub
shl
inc
cmp
sub
xchg
jg
pop
sbb
mov
sub
icebp
iret
rcr
mov
sbb
mov
iret
js
mov
aas
sbb
mov
lea
dec
das
iret
aas
daa
shr
cmps
jle
push
daa
aam
popa
nop
jbe
outs
mov
cdq
pop
mov
or
sub
call
cmp
lahf
sbb
add
hlt
fwait
sbb
lahf
pop
cmp
fcom
sbb
retf
int3
xor
imul
popf
aas
xor
pop
sub
shl
xor
add
push
adc
sub
cli
mov
shl
sub
xchg
or
sar
adc
das
cmc
jo
(bad)
leave
and
dec
mov
fistp
in
out
retf
inc
data16
pushf
rcl
pop
xchg
xchg
mov
dec
jge
js
jg
mov
pop
out
fdiv
adc
sbb
or
mov
mov
fldcw
not
imul
loope
cmp
adc
xchg
iret
or
psubq
out
ds
push
sbb
out
in
sub
mov
out
ror
dec
mov
fwait
push
push
push
add
jne
mov
test
pop
retf
xor
mov
pop
dec
addr16
popa
iret
and
jmp
push
repz
hlt
sub
xor
inc
test
jg
arpl
lods
scas
jmp
ins
ret
mov
sbb
add
sub
sbb
pop
adc
(bad)
in
scas
push
cmps
cmp
scas
pop
push
xor
add
dec
add
dec
js
pop
cwde
push
mov
mov
jmp
mov
add
stos
popa
js
inc
lea
outs
xchg
es
pusha
push
mov
mov
movs
icebp
test
push
cmp
pop
test
inc
ret
mov
out
dec
jne
(bad)
pop
mov
sbb
in
and
or
inc
fwait
call
jmp
sub
dec
or
inc
das
inc
mov
cmp
pop
jb
addr16
retf
inc
jns
mov
inc
js
cmp
mov
dec
fld
ds
pop
test
push
cs
into
add
cmp
dec
mov
cmp
stos
xchg
or
xchg
stc
mov
imul
imul
mov
test
leave
pop
xor
sti
ins
out
cli
(bad)
xlat
jp
nop
adc
and
(bad)
xchg
nop
mov
sbb
cdq
mov
jmp
pusha
out
loop
or
and
inc
call
clc
push
scas
repnz
cdq
(bad)
popa
std
cwde
or
or
imul
(bad)
les
dec
into
and
into
int
add
mov
sbb
mov
or
jl
clc
sbb
loop
mov
in
xchg
icebp
add
jmp
shl
pop
or
jp
into
(bad)
stos
mov
mov
scas
(bad)
push
mov
std
push
stos
out
cs
out
dec
cmp
leave
cmp
out
fwait
add
mov
add
xchg
pop
jg
pop
sbb
data16
sub
mov
mov
outs
push
shl
das
scas
mov
sar
adc
int
das
into
std
cmp
mov
gs
mov
push
jns
pushf
xchg
and
jmp
sbb
je
or
or
scas
add
adc
nop
leave
inc
adc
test
pushf
movs
xor
cmp
mov
outs
mov
jp
pop
sub
in
and
pop
mov
cmp
call
and
scas
xor
xchg
stos
mov
(bad)
and
cmp
pmaddwd
repz
and
xchg
int
jne
std
aaa
cwde
add
cmp
js
inc
jg
jo
and
sbb
aam
test
cmps
shl
lds
in
leave
(bad)
ja
adc
cli
imul
ja
mov
ror
mov
add
(bad)
sbb
int
pop
jno
push
push
movs
and
test
jb
mov
xor
xchg
mov
enter
stos
(bad)
sub
jp
sub
mov
hlt
mov
loopne
ins
test
or
jle
mov
adc
mov
or
sub
(bad)
(bad)
and
push
test
dec
idiv
call
ins
mov
cmps
adc
xchg
and
sar
pop
sbb
and
icebp
dec
dec
loop
mov
cwde
push
cwde
inc
pop
mov
cmp
ins
in
pop
or
into
pusha
pop
les
scas
(bad)
mov
add
test
jmp
pop
xchg
jbe
(bad)
js
cmp
popa
lock
mov
push
cld
dec
frndint
dec
movs
mov
outs
dec
scas
jnp
adc
sar
dec
addr16
stc
ret
loopne
leave
out
mov
data16
enter
sbb
or
sbb
or
jmp
stos
in
jbe
or
imul
mov
inc
dec
mov
sbb
ficom
dec
test
mov
inc
iret
push
cld
sbb
ins
cwde
sahf
adc
adc
shr
jo
pop
or
stos
mov
out
push
clc
jb
in
jge
mov
les
leave
inc
sub
(bad)
popf
jo
mov
pop
pop
addr16
test
mov
cli
clc
out
call
stc
aas
pop
adc
add
pop
cmp
dec
cmp
mov
jae
cmp
std
dec
pop
mov
retf
sbb
in
xor
ins
int3
data16
sbb
push
mov
enter
adc
push
and
xor
lahf
jo
xor
mov
clc
pop
and
pop
mov
test
push
das
fdiv
pop
cld
add
call
pop
push
fisttp
fmul
pop
aas
push
lock
jnp
add
stos
cmp
ror
and
sub
inc
fwait
lods
std
push
pop
aas
mov
dec
repnz
mov
mov
fldenv
into
inc
jle
cmp
sub
inc
push
push
lahf
mov
in
mov
adc
stc
fsubr
cmp
pop
lock
push
push
dec
push
icebp
push
out
inc
mov
add
sbb
sbb
cld
shl
jmp
pop
push
out
and
inc
fimul
movs
pop
cmps
call
vpsubusb
sbb
sub
arpl
mov
pop
pop
dec
sbb
jo
mov
in
sbb
jns
mov
mov
add
mov
stc
out
sub
dec
js
gs
push
jnp
mov
bsr
dec
sbb
push
xchg
imul
and
sbb
test
fcomp
sub
out
xchg
push
push
push
out
push
ja
xchg
mov
jmp
inc
mov
mov
jo
pusha
xchg
fcom
stos
cmp
sti
cmp
add
shl
mov
(bad)
cwde
dec
test
sti
inc
out
into
adc
(bad)
jmp
test
out
and
jo
lea
sbb
xchg
or
aad
(bad)
mov
xchg
jp
dec
cmps
fdivr
cdq
out
xchg
(bad)
mov
xchg
retf
adc
push
outs
inc
xor
(bad)
outs
sub
lods
mov
add
push
dec
sbb
mov
sbb
out
iret
das
adc
dec
call
or
in
mov
stos
mov
bound
hlt
cmps
or
pop
cmp
inc
aaa
sbb
push
pushf
popa
push
fcmovnb
test
aaa
push
das
sbb
cmp
jecxz
pop
cwde
cmp
scas
xchg
add
pop
test
push
push
sub
ins
mov
(bad)
mov
mov
cmp
sub
mov
pusha
jne
shr
mov
out
jae
jmp
shl
out
outs
xor
aaa
shl
retf
cmp
not
movhps
ins
lods
xor
xlat
lea
jg
mov
or
push
pushf
xchg
jecxz
dec
test
fdivr
das
sbb
js
mov
push
(bad)
dec
scas
es
icebp
cmp
jge
xor
iret
sub
pop
fmul
fild
xor
xor
jnp
not
or
sbb
jge
push
or
(bad)
out
or
mov
popf
jns
outs
xchg
cmp
scas
dec
mov
fwait
ret
push
outs
inc
imul
scas
fwait
jne
mov
mov
xchg
lods
ficomp
xor
xchg
push
std
test
inc
es
imul
push
(bad)
and
test
mov
fstp
hlt
(bad)
in
cmc
loopne
jg
aaa
mov
pop
jl
mov
sub
shl
stos
dec
inc
cld
cwde
xor
sbb
shr
out
mov
jl
test
jnp
loop
outs
test
sti
mov
clc
daa
call
jge
xchg
xor
jo
xor
fsub
imul
xor
lods
ins
dec
(bad)
adc
push
xor
mov
loopne
mov
cmp
push
sahf
(bad)
mov
cwde
push
scas
mov
dec
push
mov
outs
je
adc
push
enter
adc
(bad)
jmp
mov
iret
push
pop
or
leave
pusha
push
jl
or
sub
jp
mov
jl
xor
pop
jb
cmp
stos
les
jge
xor
aaa
in
stos
ds
or
xor
jne
outs
dec
leave
ins
pop
repz
cwde
dec
push
idiv
bnd
adc
pop
push
mov
cmp
pop
and
sbb
in
mov
mov
mov
imul
push
cli
dec
adc
sub
or
test
jo
push
in
das
pop
loop
ja
mov
movs
ja
cmp
test
push
push
scas
inc
mov
fsubr
into
push
sbb
push
je
sti
xor
adc
pop
add
mov
sub
js
dec
dec
jns
sub
retf
jns
dec
repnz
in
inc
mov
call
ja
xchg
ins
sbb
mov
inc
cmps
mov
stos
cs
pop
lock
jle
lock
xor
lea
jbe
outs
ins
xchg
ja
fwait
dec
sub
or
mov
aas
push
cmp
inc
mov
add
xchg
dec
fsubr
jl
adc
mov
or
int
in
aas
xor
aam
jl
ror
inc
jle
dec
cmp
dec
idiv
lock
pop
push
jl
das
lods
or
repnz
icebp
adc
(bad)
popf
mov
retf
sub
fwait
stc
sub
push
xor
pushf
dec
mov
cmp
int3
enter
out
iret
test
mov
or
sub
push
push
mov
adc
xchg
mov
and
sub
sti
add
ds
or
retf
dec
sar
in
mov
sub
icebp
and
cmp
mov
sbb
enter
add
and
retf
inc
fiadd
ins
(bad)
loopne
cmp
lds
sub
int
sbb
mov
(bad)
fldcw
call
dec
iret
cmp
mov
loopne
push
cmp
xchg
aad
jecxz
outs
jae
scas
out
clc
outs
loopne
push
push
mov
mov
dec
into
mov
inc
add
jecxz
jge
ret
inc
or
dec
inc
dec
scas
dec
imul
or
loopne
call
dec
lahf
retf
sub
push
inc
mov
out
pop
arpl
sbb
mov
lahf
push
daa
or
or
and
mov
pop
add
out
sbb
scas
in
outs
sub
push
cld
xor
or
(bad)
push
cvtps2pd
sub
pop
clc
dec
(bad)
mov
or
retf
dec
nop
jns
mov
scas
cmp
fs
mov
rcl
repnz
push
shl
inc
sbb
scas
popa
stc
aas
push
fdiv
dec
sub
in
lock
outs
retf
pop
dec
inc
lods
cmps
dec
(bad)
dec
xchg
cmp
jmp
push
test
or
xchg
cmc
sbb
cmp
xchg
jae
js
inc
dec
dec
pop
fild
(bad)
and
xchg
jmp
adc
adc
cmp
mov
neg
xchg
retf
cwde
pushf
mov
(bad)
call
cli
loopne
sti
or
xor
repz
leave
and
mov
inc
mov
cmp
imul
jge
movs
push
pop
xor
cmp
fisubr
arpl
jg
mov
outs
cmp
lock
or
or
mov
push
cmovp
push
push
pop
movs
movs
movs
pop
out
or
test
into
push
cmp
fbstp
push
mov
jno
cmp
call
out
fidiv
cdq
mov
pop
cmps
cmp
mov
add
pop
test
pushf
fdiv
pop
lea
sub
iret
add
dec
sti
inc
int
pop
pop
mov
mov
push
or
jne
mov
sub
test
mov
add
into
(bad)
cmp
outs
scas
cmc
icebp
or
xor
xchg
push
jle
scas
das
adc
push
fist
cwde
mov
stos
push
or
das
arpl
aam
and
jge
dec
pcmpgtb
in
aaa
loop
pop
idiv
add
sti
enter
pop
gs
nop
mov
cli
test
data16
pop
int
in
push
dec
test
jp
mov
mov
push
out
xor
xchg
adc
sub
jg
retf
fwait
mov
jg
or
(bad)
dec
ret
pop
jecxz
xor
sub
push
(bad)
js
inc
cmp
or
mov
out
int
das
pop
jge
pop
cmp
or
add
xchg
mov
cld
aam
mov
pop
add
mov
push
add
pop
repz
call
pmaddwd
jmp
add
retf
ret
fiadd
sahf
call
shr
into
jecxz
lods
adc
adc
and
ret
cmp
das
leave
push
inc
and
add
mov
retf
mov
adc
mov
mov
cwde
sub
shr
push
mov
push
dec
and
mov
push
sbb
sub
jp
fcom
fmul
sbb
xor
sbb
and
push
add
int3
xchg
push
(bad)
retf
jbe
cwde
aam
inc
aad
fnsave
rcr
aaa
std
push
cmc
in
(bad)
sub
sub
dec
sbb
dec
(bad)
scas
movs
pop
cmp
sbb
stc
jmp
sub
in
adc
push
mov
inc
in
dec
push
mov
mov
xchg
call
mov
jmp
push
es
sbb
adc
sbb
mov
xor
xchg
dec
in
fidiv
cld
fst
cld
mov
fidivr
in
push
mov
lahf
(bad)
mov
enter
repnz
push
dec
mov
dec
jle
sar
inc
imul
push
sbb
xor
ins
dec
push
push
push
pop
mov
cmp
add
sahf
retf
out
fdivr
jbe
retf
clc
dec
out
cld
dec
jle
xlat
cwde
lods
xor
sub
mov
xchg
mov
jle
neg
mov
outs
(bad)
int3
or
dec
clc
add
mov
mov
mov
repz
or
or
sub
mov
shl
sbb
je
int
push
fdivr
out
adc
xchg
xor
popa
pushf
ds
fimul
mov
xchg
aam
cmc
leave
fistp
inc
push
sbb
pop
outs
pop
sbb
nop
pop
outs
adc
adc
stos
test
iret
retf
push
ficom
(bad)
pop
sub
add
xchg
test
ins
xor
and
xor
imul
push
push
add
cmp
mov
jb
cmp
or
mov
test
mov
arpl
pop
std
jecxz
call
mov
js
rcl
repnz
mov
dec
xchg
pop
mov
fbstp
push
mov
adc
adc
inc
sbb
or
and
push
sub
daa
pop
(bad)
mov
xchg
ds
maxps
iret
call
cwde
mov
cdq
bound
stc
inc
cmps
fisttp
sbb
cmp
ins
xchg
outs
loopne
or
cmp
retf
mov
sahf
sub
cmps
test
(bad)
arpl
mov
lock
mov
sbb
shl
ins
mov
out
mov
sti
shl
nop
mov
popa
mov
repnz
or
pop
sbb
mov
nop
fisubr
sbb
imul
fdivr
cmps
lahf
or
popf
lfs
jmp
cli
imul
mov
mov
test
cld
mov
jp
jg
out
xchg
cmp
inc
mov
(bad)
mov
dec
addr16
mov
loope
mov
fstp
loop
imul
sbb
js
push
mov
sub
fwait
dec
mov
fisub
and
dec
mov
sub
or
test
test
pop
call
push
out
jl
sub
mov
and
js
mov
scas
push
ja
je
sub
mov
jecxz
aas
push
sbb
cli
std
aas
stc
pop
aad
cmp
or
ja
cdq
fadd
ds
cmp
pushf
dec
dec
(bad)
sti
popa
fild
dec
mov
jbe
(bad)
push
push
ret
jno
jl
stos
or
pop
(bad)
mov
pop
or
ret
punpckhwd
mov
repnz
outs
push
inc
mov
inc
in
add
iret
clc
fsubr
iret
stc
popf
pop
mov
sbb
pop
mov
mov
pop
jge
stos
outs
(bad)
outs
jo
lea
push
jnp
xlat
jecxz
inc
sub
sub
sub
data16
pop
cmp
iret
jmp
movs
push
cli
pextrw
mov
jge
or
cmp
xor
mov
inc
xlat
sub
jle
in
fisttp
inc
add
mov
repnz
jecxz
add
(bad)
fild
mov
(bad)
mov
(bad)
lahf
add
push
ret
mov
mov
in
pop
jmp
dec
test
ja
mov
pop
(bad)
ja
lods
popf
mov
fisttp
scas
retf
push
(bad)
sti
sbb
jl
stos
add
enter
dec
cmp
and
sub
sub
xchg
sub
inc
scas
mov
mov
(bad)
icebp
test
idiv
mov
sub
or
enter
fdivr
pop
fwait
mov
in
dec
cmc
arpl
ficom
aaa
call
cmp
push
test
mov
cmp
out
or
fwait
outs
inc
nop
test
xor
or
aaa
add
cmp
out
ror
addr16
sub
dec
mov
jo
mov
pop
jmp
es
xchg
leave
je
in
hlt
mov
mov
cmp
out
in
or
das
out
sahf
adc
dec
and
ret
add
mov
paddusw
ja
mov
pop
pop
mov
test
push
call
jg
dec
push
ja
mov
jg
push
adc
mov
les
lahf
stos
jge
ja
call
cmp
int3
imul
cmp
(bad)
mov
jbe
cld
out
jbe
jnp
pop
xchg
cmp
daa
pop
enter
mov
mov
loop
mov
sub
fcom
loopne
or
bound
adc
mov
xchg
ds
adc
scas
and
inc
fsubr
(bad)
sahf
dec
jecxz
inc
adc
imul
mov
lods
cli
scas
add
fucomi
sub
nop
mov
and
adc
inc
int
push
mov
sti
ins
(bad)
jmp
jg
aas
sbb
or
mov
scas
mov
scas
adc
cmp
and
jb
mov
repnz
das
cs
das
dec
adc
push
xlat
mov
dec
aad
(bad)
push
invd
xor
pandn
dec
jge
sbb
mov
clc
cmps
cld
xor
imul
fiadd
test
push
sub
jns
fldenv
iret
outs
adc
cmp
js
pushf
sbb
xor
test
jnp
mov
or
pop
fisttp
xchg
(bad)
mov
cmps
push
lock
dec
push
xlat
outs
pop
scas
aam
outs
int3
out
jae
test
pop
push
test
loopne
fistp
sub
test
mov
mov
mov
sar
imul
cmps
xor
dec
xchg
adc
das
adc
sub
out
in
fs
(bad)
jg
mov
or
mov
pop
inc
aas
in
pop
jecxz
add
pop
(bad)
mov
push
dec
jnp
jne
cbw
pcmpgtw
inc
dec
push
mov
(bad)
xchg
jge
clc
xchg
or
(bad)
ficom
jo
mov
or
fnstcw
pop
push
adc
cdq
fdivr
and
or
push
pop
stos
cld
push
rol
mov
sbb
pop
iret
jle
jp
push
call
jmp
bound
sbb
aad
pusha
stos
cmps
sbb
sbb
retf
and
inc
out
test
ret
mov
inc
outs
or
cmp
mov
sbb
inc
ret
xchg
shr
or
xchg
or
inc
or
scas
dec
xchg
mov
sub
leave
mov
stos
sub
enter
cwde
mov
jo
movs
pushf
push
outs
arpl
cmps
nop
sub
lock
loope
xor
leave
push
cmps
out
mov
xchg
cmp
cwde
pop
inc
call
pop
push
scas
adc
lahf
mov
js
sub
ret
push
dec
push
jge
leave
cmps
aas
daa
aas
ss
(bad)
add
sbb
dec
sar
mov
sub
popf
sub
xor
(bad)
and
sbb
inc
dec
sbb
push
mov
idiv
shl
lods
sbb
das
jo
sahf
jge
loope
jg
sub
ds
fnstcw
int3
dec
dec
jle
dec
clc
mov
and
sbb
cli
out
pop
mov
cdq
popa
push
mov
push
adc
fsubr
xchg
or
movs
fild
out
cmps
push
or
add
mov
inc
sbb
push
ret
jnp
cwde
mov
sar
shl
and
mov
mov
cld
mov
mov
mov
sti
loop
mov
jmp
jnp
xor
pop
ss
jp
(bad)
scas
fst
sub
mov
cmps
mov
or
push
retf
fisttp
sbb
adc
xchg
cmps
loopne
mov
aas
push
sbb
aas
or
sub
mov
pop
fwait
(bad)
in
sub
retf
cmps
leave
aaa
fsubr
sbb
sub
xchg
jge
adc
setge
jmp
sti
mov
mov
mov
(bad)
sbb
addr16
fcom
jmp
inc
call
cmp
movs
leave
mov
dec
mov
data16
fst
and
xchg
aas
jmp
cwde
fldenv
mov
dec
jbe
add
ret
adc
xchg
mov
and
outs
or
sub
lods
sar
push
pop
data16
sar
das
int3
shl
inc
(bad)
inc
retf
sub
mov
aas
int3
in
enter
in
mov
lea
in
mov
call
rcr
dec
pop
inc
cmp
ds
sbb
push
in
mov
popw
cs
pop
pop
repz
jge
mov
std
lahf
mov
aas
std
mov
mov
ds
mov
xchg
out
inc
pop
das
es
das
or
(bad)
out
push
cwde
jb
ds
xlat
pop
pop
mov
inc
shl
or
(bad)
push
ficom
call
pop
shl
xor
nop
daa
xor
cwde
push
cs
pushf
mov
test
sub
scas
and
cmps
nop
push
mov
mov
mov
cld
sbb
push
cmp
xchg
pop
and
jb
push
leave
mov
dec
xor
aam
or
fisttp
in
fadd
dec
sbb
or
jmp
pop
fsub
cmp
inc
imul
fwait
sbb
sbb
pop
cmp
sbb
xchg
shl
inc
jmp
rcl
jbe
pop
pop
lahf
jae
sbb
dec
push
jnp
mov
add
loop
jle
jae
out
mov
cld
(bad)
sti
fdivr
(bad)
sbb
mov
nop
sbb
hlt
jbe
inc
sahf
stos
cwde
iret
cmp
xchg
test
bswap
fmul
sub
dec
push
push
jp
pop
cmps
mov
cmp
mov
and
sub
mul
rcl
xchg
aam
dec
sbb
xchg
cdq
call
jle
sub
fdivr
ret
push
outs
scas
call
fadd
push
stc
(bad)
mov
xor
xchg
out
loop
loop
sbb
popf
fidiv
cs
add
(bad)
lods
fdivr
into
loop
dec
fiadd
imul
push
std
ror
xchg
dec
dec
dec
cs
data16
push
popf
retf
iret
pop
pop
retf
push
and
int
maxps
scas
jp
pop
outs
sahf
push
sbb
mov
ficom
rcr
jns
or
pushf
sbb
inc
(bad)
jecxz
adc
ins
ret
mov
mov
xor
dec
xlat
bound
js
add
idiv
call
fild
sbb
pop
push
pop
sub
pop
fisub
aam
in
push
inc
or
add
adc
mov
jne
pushf
cli
xchg
fisubr
movs
jb
cdq
or
daa
cmps
int3
dec
stc
call
sbb
mov
add
sbb
sar
pop
imul
cdq
or
shl
pop
ror
lods
or
pop
ins
adc
cmp
retf
mov
push
jne
or
mov
lahf
jnp
fcmove
xor
pop
mov
mov
jno
adc
jne
rcr
mov
jno
out
call
add
sbb
mov
xor
push
movs
neg
clc
fwait
out
sahf
test
je
mov
xor
dec
arpl
mov
and
dec
outs
je
pop
add
js
mov
jmp
mov
sbb
hlt
outs
xchg
outs
(bad)
sbb
aad
cmc
dec
daa
lods
test
leave
out
lock
fwait
cmp
or
not
dec
sbb
(bad)
out
aam
out
leave
jmp
adc
fs
stos
mov
mov
dec
adc
inc
mov
sub
mov
jae
lds
and
jbe
sbb
(bad)
push
mov
enter
xchg
ror
xor
pop
cs
cmp
inc
mov
bound
shr
xor
ja
out
fisttp
add
push
daa
jge
and
jg
jp
jmp
inc
fdiv
fisubr
adc
cmp
test
adc
pop
stc
es
jg
movs
fstp
dec
or
into
push
push
xor
dec
mov
mov
cs
cmc
lea
out
aad
fisubr
out
call
aad
adc
test
rol
aaa
push
push
cld
adc
inc
into
xor
lods
popa
call
out
fwait
test
int
js
pushf
jnp
mov
cmp
stos
out
push
add
aam
sub
addr16
fs
and
cs
les
popf
or
mov
repz
lahf
(bad)
sbb
fldenv
in
fsub
adc
call
sub
xor
imul
lahf
fsub
inc
test
pop
lods
mov
mov
fstp
jbe
mov
test
and
es
daa
sub
mov
xor
sar
mov
sbb
int3
ds
scas
jne
fdivr
lods
sbb
push
xor
out
cmp
out
iret
mov
sbb
ds
inc
cmp
jnp
dec
push
clc
jns
mov
jmp
in
mov
or
movs
xor
ins
mov
(bad)
js
call
jmp
mov
and
sub
stos
test
ds
dec
popf
scas
imul
ror
mov
pop
sbb
cmps
jns
mov
xchg
stc
or
pushf
and
mov
in
das
pop
sbb
(bad)
aas
cld
lahf
and
popf
leave
clc
test
dec
cmps
int3
fcomp
sub
pop
ins
jne
jns
jg
loopne
shl
pushf
aas
sub
lahf
push
fwait
push
pop
jae
and
addr16
mov
jge
vphaddudq
out
add
xor
xor
loope
sbb
lods
xchg
sbb
and
xchg
cmp
jg
jne
fsub
and
loopne
std
adc
stc
ret
fs
mov
fidivr
mov
mov
mov
shl
enter
aam
add
and
jno
imul
test
adc
dec
dec
pop
ds
cmp
mov
mov
mov
js
or
push
xchg
jmp
jmp
call
and
xchg
scas
adc
aas
call
inc
mov
gs
push
(bad)
pop
and
mov
jg
sbb
adc
mov
lock
cmp
js
fild
gs
pop
mov
icebp
(bad)
(bad)
clc
lods
shl
daa
pop
aas
jns
rcr
jg
lea
fs
nop
dec
xor
scas
aas
pop
retf
xchg
aas
inc
jl
or
lods
push
push
dec
or
push
jno
out
call
mul
jae
adc
inc
dec
sub
pop
das
outs
mov
jae
xchg
scas
pop
pop
rcr
outs
jns
dec
mov
in
push
leave
repnz
add
xchg
push
lods
sahf
jl
popf
mov
lahf
movs
je
psadbw
das
sub
mov
add
out
js
fmul
lods
(bad)
stos
fcom
push
out
xchg
jnp
dec
and
movs
sub
inc
sub
addr16
mov
in
cmps
aaa
pushf
add
fcomip
stc
mov
outs
pop
jmp
ret
rcr
mov
iret
xchg
cmps
mov
sub
cwde
stc
fcom
pushf
fwait
or
mov
dec
xchg
fbstp
fimul
stc
mov
sub
std
(bad)
dec
mov
cmp
and
int
jmp
lock
data16
xchg
xor
pop
in
mov
sbb
(bad)
clc
adc
(bad)
jmp
mov
and
iret
xor
in
out
sbb
jle
call
enter
test
push
push
enter
out
push
pushf
ret
mov
cmp
pop
mov
rcr
jg
xchg
popf
test
pop
sub
jecxz
push
pop
outs
outs
ins
add
aam
inc
dec
pop
dec
cmc
xor
call
mov
jns
std
fbstp
push
xlat
js
mov
or
cmp
cli
lahf
cmps
and
adc
enter
das
out
push
aaa
mov
pop
(bad)
fsubr
jmp
es
sbb
loop
sub
repz
enter
and
pop
dec
imul
mov
mov
sti
mov
push
retf
js
pop
aaa
js
aas
or
pop
movs
cld
lods
pop
popf
stos
mov
jmp
addr16
fbstp
sbb
imul
sti
fst
inc
mov
int3
mov
dec
retf
dec
cmp
fsubr
dec
inc
nop
enter
aas
cmc
add
inc
stos
test
fdivr
int3
pushf
ja
aas
xchg
sbb
cdq
adc
or
fdiv
add
cmps
mov
sub
mov
(bad)
jmp
sub
add
fwait
pop
jo
movs
pop
dec
fisttp
mov
mov
push
pop
test
pop
daa
dec
popf
cld
mov
jns
ds
mov
out
popf
mov
jae
xor
or
cwde
inc
aas
add
mov
adc
pushf
scas
ss
pop
add
push
fmul
and
mov
in
cmp
pop
xor
mov
jge
mov
lods
xchg
mov
push
popf
test
jo
and
mov
inc
sbb
into
das
pop
or
ficomp
leave
dec
xchg
cdq
retf
dec
mov
cwde
sar
jno
test
mov
xor
adc
nop
cmc
aaa
inc
mov
sbb
popf
xchg
push
cs
cs
cdq
lahf
(bad)
int
cmp
scas
idiv
fcomp
test
mov
cmp
cmp
std
mov
retf
sub
sub
and
js
das
cmp
loope
dec
adc
pmullw
das
pop
out
out
add
push
pushf
lods
mov
cwde
ins
mov
fsubr
stc
jp
pop
lods
cwde
xlat
xor
in
jmp
shr
(bad)
lods
jecxz
sub
or
iret
or
mov
cmp
mov
nop
mov
add
sub
and
(bad)
cmp
(bad)
dec
pop
dec
inc
fld
sub
test
call
xchg
sub
cmp
or
test
pop
xor
jecxz
inc
mov
aam
jle
imul
shr
and
cs
loope
ins
push
xchg
xchg
div
jge
xchg
lods
inc
loopne
mov
sub
das
data16
bound
dec
std
jg
rcl
into
fidivr
add
sbb
cmp
push
dec
inc
cwde
mov
mov
or
aas
add
add
sbb
nop
mov
leave
scas
xchg
mov
pop
fdivr
outs
push
je
push
xor
retf
jp
ror
ins
into
jmp
sub
mov
movs
and
dec
div
fsub
sub
das
jmp
mov
imul
fadd
cld
sbb
pop
mov
test
mov
pop
pop
dec
jp
push
sbb
cmp
xchg
rol
push
lds
jle
adc
rcl
sub
mov
fucomp
pop
pop
mov
ins
les
fs
cmp
mov
hlt
mov
(bad)
jmp
xchg
aad
jmp
push
cmp
dec
cmp
scas
mov
mov
cmp
jns
xchg
mov
fcomp
retf
or
in
jg
retf
pop
jecxz
xchg
or
pushf
or
call
mul
sbb
pushf
sbb
xor
xchg
dec
fwait
lahf
ins
or
jp
les
lock
mov
pop
ins
add
mov
mov
imul
mov
lds
push
jmp
call
xlat
jmp
pop
daa
mov
mov
sbb
mov
inc
inc
add
sub
outs
cmc
mov
mov
jns
out
push
ficomp
mov
loopne
sti
imul
mov
mov
and
fwait
popf
cmp
sbb
jae
cmp
dec
cmp
jge
mov
inc
aaa
add
test
loope
pop
or
nop
inc
(bad)
pop
dec
sar
adc
clc
jp
mov
sub
mov
scas
ins
cwde
jge
mov
bound
dec
sbb
fbstp
xor
or
inc
out
jp
idiv
les
or
inc
rol
cmp
xchg
or
aad
sub
call
scas
jp
dec
jmp
xor
jp
push
and
idiv
push
xchg
pop
gs
int3
mov
mov
call
jg
dec
inc
pusha
push
out
pop
aas
sub
dec
lock
dec
retf
or
les
inc
adc
xchg
jno
pop
movs
cmp
mov
push
rcr
stos
pop
lods
and
hlt
mov
jbe
retf
ficomp
inc
mov
stos
cmpps
jo
(bad)
mov
sub
pop
sbb
sbb
pop
retf
addr16
cmp
retf
inc
cmp
cmp
mov
mov
out
aaa
stos
pop
mov
mov
mov
addr16
mov
call
sub
push
dec
inc
ret
jle
inc
xor
(bad)
mov
call
test
(bad)
out
jg
call
ret
xchg
dec
aaa
mov
inc
jmp
(bad)
jnp
int3
push
fisubr
sti
ins
cmp
mov
ins
pop
cwde
movs
in
and
sar
fiadd
rcr
xor
test
push
mov
jp
shl
out
in
xchg
mov
in
test
jo
push
and
jmp
shr
xchg
fisubr
dec
xlat
and
xor
stc
dec
imul
mov
ins
add
or
pop
jnp
sar
outs
dec
sub
mov
dec
mov
ficomp
imul
push
lahf
xchg
and
sbb
mul
jmp
cld
aad
cdq
movs
cmp
adc
pop
pushf
pop
mov
movs
frstor
adc
retf
dec
jbe
mov
sbb
lock
sbb
shr
mov
mov
mov
call
lahf
push
sbb
jmp
repnz
jge
dec
lods
sub
(bad)
cmp
fdiv
lahf
mov
outs
sub
push
outs
inc
push
popf
pop
cld
sub
int
mov
repz
sub
push
adc
cld
adc
pop
jg
shr
mov
mov
sub
inc
or
dec
enter
iret
hlt
cmps
jae
clc
js
es
push
je
pop
dec
mov
repz
adc
xlat
adc
sbb
cld
jge
dec
adc
jmp
xor
mov
xchg
cmp
sub
cmp
outs
jns
adc
dec
(bad)
fcom
and
call
test
inc
retf
cmp
or
xor
xchg
inc
adc
sub
pop
lods
xor
addr16
cld
push
shl
pop
movs
sub
iret
jecxz
das
pusha
fistp
fwait
sahf
scas
imul
pop
mov
nop
xlat
mov
iret
xor
cmp
daa
mov
(bad)
gs
add
bnd
push
xchg
inc
mov
loop
sbb
jns
iret
jae
or
sbb
adc
out
retf
popf
xchg
and
and
sub
js
test
pusha
imul
test
icebp
mov
popf
es
jne
leave
jl
popa
push
into
(bad)
fcmovnbe
retf
gs
cmp
call
push
mov
mov
cmp
mov
xchg
or
mov
retf
retf
pop
push
ins
clc
(bad)
sar
in
pop
xchg
or
and
dec
jl
enter
push
gs
aam
push
pop
or
pop
imul
shl
ja
xor
push
pop
mov
cs
dec
imul
sub
sbb
pop
sbb
nop
mov
ror
push
js
out
push
out
cmp
sti
dec
fsubr
mov
(bad)
xchg
push
scas
cwde
dec
fmul
sahf
daa
stc
into
xchg
aas
test
mov
pop
jg
pop
pop
cdq
add
xchg
push
or
out
int3
push
inc
push
dec
mov
sbb
cmps
jecxz
add
cli
mov
retf
jge
les
inc
call
or
mov
aas
cwde
stc
dec
fwait
inc
outs
int3
test
cmp
jmp
xrstor
jo
push
push
sub
cmp
jecxz
or
pop
and
leave
mov
or
pop
cmp
jg
lock
adc
pop
aam
in
ror
pop
pop
nop
outs
call
mov
mov
(bad)
sub
cld
adc
sahf
cdq
mov
or
pushf
imul
mov
jp
jp
or
dec
and
(bad)
and
cmc
and
xchg
and
push
add
pop
daa
add
(bad)
data16
mov
jle
jmp
enter
cmps
inc
xchg
dec
xchg
idiv
adc
sti
push
mov
aad
mov
mov
pop
jmp
cmp
outs
adc
xchg
dec
jnp
and
mov
inc
mov
retf
jb
inc
dec
clc
fmul
jle
jl
push
scas
fsub
js
or
ins
mov
popa
out
test
adc
cs
push
jbe
cs
add
clc
mov
and
mov
add
in
movaps
pop
(bad)
mov
lods
push
int3
into
sub
je
jp
or
lahf
or
pushf
cmps
mov
jge
leave
mov
sbb
or
into
add
stos
mov
pop
icebp
sti
mov
retf
cwde
popa
jecxz
sub
dec
test
int3
jg
dec
xor
inc
mov
pop
clc
lea
xor
outs
scas
cmp
sbb
jge
popa
jle
mov
call
outs
adc
shrd
pop
mov
mov
lods
or
leave
pop
xchg
inc
scas
addr16
aas
mov
dec
add
loopne
repz
test
shld
scas
in
fist
loop
fwait
cmc
pop
sub
xor
sub
repnz
dec
(bad)
test
lahf
(bad)
mov
ja
nop
pop
nop
and
clc
mov
loope
xor
fstp
stc
lahf
or
pop
std
pusha
or
pop
jmp
cmc
mov
(bad)
hlt
outs
cmp
scas
mov
inc
xor
scas
test
pop
and
xor
neg
push
daa
cld
sbb
push
inc
int
dec
adc
pop
mov
out
xchg
and
xor
stos
xor
dec
sbb
xchg
mov
popa
test
pushf
sti
outs
sub
test
inc
dec
into
pop
pop
xor
add
adc
call
test
sbb
push
sbb
dec
sub
dec
inc
jg
outs
jg
sbb
retf
scas
lods
xor
ins
mov
add
pop
or
aas
push
ja
out
cmc
pop
adc
leave
inc
cmps
std
jp
mov
(bad)
loopne
jne
shr
test
sub
push
int3
inc
ds
add
pop
stos
xchg
leave
fwait
rcr
in
pop
jecxz
dec
mov
fadd
pop
outs
inc
nop
push
(bad)
sub
add
ja
ins
ficom
aas
jp
retf
add
addr16
mov
clc
sub
push
xchg
mov
jmp
push
clc
lea
dec
sub
std
xlat
lahf
pop
nop
pop
and
dec
mov
fxch
das
sub
and
xor
or
dec
sbb
push
neg
popf
mov
cmp
call
mov
aaa
in
sbb
sbb
cmps
jns
movs
add
push
ins
lods
movs
div
and
cmp
mov
pop
fstp
outs
retf
mov
test
call
cwde
sub
aam
inc
retf
ret
fnstenv
dec
lods
inc
xchg
adc
or
sar
push
dec
pop
test
sbb
add
cmp
test
test
inc
(bad)
mov
dec
(bad)
in
sub
xor
lods
mov
jo
mov
retf
mov
aam
mov
mov
xor
fnstenv
arpl
xor
mov
or
pop
mov
test
mov
das
cmp
and
inc
inc
sub
push
xchg
not
mov
test
pop
int
adc
or
pop
cs
jbe
xchg
dec
xlat
xor
and
lds
mov
test
adc
push
cwde
(bad)
retf
mov
shl
inc
pop
dec
pop
icebp
mov
mov
jle
fist
sbb
imul
(bad)
(bad)
mov
mov
stos
and
cwde
sbb
mov
sbb
popa
fdivr
sahf
jmp
xor
xchg
(bad)
jmp
or
sbb
fwait
loopne
mov
rcr
pusha
inc
ins
outs
pop
or
sub
sbb
push
inc
scas
int
push
mov
push
cdq
call
ja
das
xor
cmp
xor
cmp
(bad)
add
pop
pop
mov
test
shr
shr
inc
mov
pop
sub
cmp
pop
jmp
mov
sbb
fisubr
dec
pop
or
sub
adc
jne
data16
fsubp
xchg
(bad)
cli
enter
aas
leave
dec
test
outs
jne
pop
mov
jno
dec
call
dec
sbb
or
xor
test
mov
fdivr
push
sub
mov
retf
xchg
jp
inc
lods
imul
call
or
pop
sub
ret
jl
cmp
ret
cli
and
fistp
into
fdivr
mov
and
xchg
mov
push
outs
sti
and
dec
pop
push
arpl
or
iret
jp
xchg
mov
mov
pop
sbb
shr
pop
call
and
lods
lahf
call
nop
test
or
dec
jae
sbb
retf
mov
bound
dec
retf
les
call
inc
xor
cmp
imul
(bad)
jmp
lahf
push
dec
retf
sub
mov
inc
movs
pop
mov
test
repz
mov
lahf
cwde
pop
push
mul
mov
cmp
sub
mov
mov
cld
test
xor
or
xchg
arpl
outs
pop
inc
adc
cwde
cmps
mov
out
fmul
jecxz
mov
lds
cdq
mov
and
cdq
orps
pusha
inc
dec
int
pop
pop
ja
and
pop
call
pop
cmp
and
jp
jne
imul
shl
into
in
mov
(bad)
(bad)
sbb
pop
dec
(bad)
push
outs
sti
pop
mov
mov
mov
fistp
add
sbb
xchg
pusha
xchg
les
mov
lods
sbb
adc
retf
add
add
(bad)
call
mov
call
mov
jle
das
or
cmps
sbb
xchg
sbb
ins
and
adc
sti
fdiv
inc
arpl
icebp
imul
xor
imul
jbe
pusha
loope
int
mov
push
jae
loop
and
call
mov
jns
mov
ins
cmp
mov
loopne
imul
or
ret
js
sub
push
inc
xchg
mov
cli
xchg
mov
fadd
leave
xor
mov
cvtps2pi
lahf
(bad)
or
cli
fldln2
sbb
adc
or
pop
push
popf
inc
push
int3
ins
int3
xor
mov
cmp
ficomp
adc
xor
xor
cdq
jle
outs
add
dec
cmps
scas
or
cmps
add
inc
cdq
pop
cmp
dec
pop
xchg
push
push
or
cmp
iret
push
fwait
int
ds
ficom
sti
fimul
icebp
enter
jmp
pop
jb
test
cmp
jp
mov
out
data16
stos
sbb
sub
pop
shr
loope
pop
mov
cmp
add
mov
cmp
pop
cmp
dec
lea
jb
add
mov
cld
or
shr
pop
lea
dec
dec
(bad)
ds
clc
xchg
shr
outs
xchg
mov
movs
jmp
adc
add
sub
jae
lahf
xor
jns
dec
cmps
cwde
pop
push
stc
sub
(bad)
cmp
mov
jg
jp
or
test
(bad)
imul
rol
das
shl
dec
sbb
setg
xchg
mov
jmp
cmps
sub
adc
mov
mov
shl
scas
test
lock
lods
mov
stc
inc
daa
sub
pop
nop
mov
push
mov
shr
dec
mov
mov
mov
arpl
daa
sub
call
and
pop
dec
mov
sub
sub
iret
jns
add
pop
xchg
jns
pop
push
das
jg
dec
jne
fldenv
sub
popf
fxch
mov
fidivr
pop
mov
out
jnp
push
add
cmp
shr
movs
loopne
iret
call
dec
cmp
push
bound
sub
push
mov
pminsw
jbe
mov
cdq
or
mov
mov
dec
and
add
mov
cwde
loop
mov
adc
cmp
cs
or
push
fimul
nop
ins
add
test
mov
shl
mov
imul
xchg
ret
and
adc
or
mov
pop
push
iret
cmps
xor
test
mov
pusha
aas
nop
mov
loope
sti
(bad)
movs
or
push
outs
add
add
sub
lods
sbb
fldcw
outs
mov
mov
pop
or
fsubp
retf
hlt
adc
cmp
cs
dec
and
sbb
dec
gs
jg
fwait
push
cdq
adc
int3
and
cli
or
jno
call
out
fisttp
int
xchg
cs
mov
push
dec
sbb
pop
cwde
mov
fucomip
push
or
in
or
mov
(bad)
cwde
scas
xor
sbb
add
push
mov
ins
adc
call
movs
add
push
loop
mov
adc
xchg
xor
in
out
lds
test
adc
popa
out
dec
jmp
push
xchg
ds
in
dec
int3
in
pop
mov
sub
add
scas
sub
or
clc
cld
and
cmc
imul
mov
jg
call
test
por
mov
dec
(bad)
retf
pop
(bad)
std
cmp
or
sub
push
loop
xor
(bad)
std
ins
jle
fst
sbb
outs
sub
pop
jns
outs
pop
mov
sbb
cdq
mov
xor
and
cmp
dec
dec
dec
outs
inc
das
inc
aad
push
push
push
and
sub
sbb
mov
loope
nop
push
out
inc
mov
mov
pop
lock
mov
and
jbe
push
ltr
mov
inc
lods
scas
xchg
ret
xchg
xchg
sti
jecxz
sub
fxsave
lods
mov
int
std
loop
pushf
xchg
lea
(bad)
not
inc
dec
fcomp
cmps
out
out
jp
sbb
pop
xlat
dec
dec
enter
cwde
out
(bad)
lods
dec
mov
sahf
sbb
sbb
sub
hlt
mov
js
in
out
lods
push
sub
not
ins
pop
nop
inc
fnstcw
mov
addr16
dec
dec
mov
scas
or
in
pop
or
retf
pop
ret
inc
cvtpi2ps
out
mov
add
(bad)
pop
out
inc
xor
mov
dec
adc
(bad)
or
scas
dec
adc
movs
add
inc
loope
ror
cmps
sar
outs
stc
lahf
fimul
cmps
pop
mov
loope
jae
jmp
test
xor
push
int
int
sar
cmp
ror
add
sahf
cmp
rcl
pop
pop
pop
dec
mov
cmps
shr
(bad)
scas
stc
fwait
sub
mov
sbb
jns
das
pop
cmps
call
pop
push
dec
std
cmp
mov
jecxz
data16
icebp
call
mov
leave
mov
pop
scas
jmp
xor
popf
sbb
jp
clc
mov
mov
jmp
pop
sbb
inc
dec
pop
ret
mov
shr
das
popa
xchg
call
jmp
scas
xchg
ins
push
and
push
inc
ja
jmp
cld
inc
push
icebp
lods
jp
call
sbb
cmp
mov
xor
ss
inc
test
dec
cdq
ins
(bad)
xlat
mov
retf
pop
fistp
inc
cmp
jl
and
rol
jbe
mov
dec
jecxz
ror
sbb
test
leave
mov
stos
mov
loopne
jecxz
popf
mov
add
in
dec
ins
shr
push
xor
jp
dec
mov
adc
lods
adc
outs
mov
clc
inc
xchg
ds
in
cmp
inc
cmp
ficom
inc
ja
jp
es
xchg
dec
test
sub
dec
fwait
retf
and
jle
push
out
iret
push
and
retf
lea
pop
xlat
stos
(bad)
(bad)
lods
push
mov
pop
push
pop
cmp
inc
data16
dec
push
dec
rcl
mov
shl
pop
into
cmp
ds
jnp
stos
push
mov
aas
stc
scas
in
fnstenv
sub
add
(bad)
push
dec
mov
mov
stos
mov
icebp
xor
ss
fwait
retf
and
and
pop
sub
addr16
inc
into
mov
sub
inc
call
xchg
gs
clc
bndstx
data16
xor
mov
(bad)
pop
ret
add
leave
cmp
fsubr
xor
cli
rcl
inc
lods
pop
cmp
stc
loope
dec
call
jns
in
test
add
cli
and
scas
outs
cmp
xor
sub
aam
loopne
test
out
dec
cdq
cwde
das
out
repnz
dec
mov
pop
inc
pop
dec
lock
cwde
sbb
push
out
out
pop
aaa
mov
sahf
fldcw
popf
outs
cmps
or
add
push
mov
popf
mov
push
pop
in
mov
adc
and
mov
bound
js
pop
jbe
imul
and
pop
push
sbb
cli
mov
(bad)
add
jae
popa
dec
dec
in
outs
cs
sbb
leave
outs
scas
sbb
lods
bound
mov
pop
adc
xchg
call
adc
out
call
adc
push
add
xor
(bad)
pop
ret
fadd
xchg
or
or
pop
js
add
int3
cmp
iret
outs
(bad)
fsubr
enter
dec
xor
mov
outs
in
pop
cli
fidivr
iret
xor
stos
stos
dec
fs
add
addr16
inc
out
jns
inc
fistp
daa
push
stos
cmps
pop
mov
fisub
enter
daa
sub
dec
cmp
cmp
out
retf
inc
(bad)
ficomp
jnp
push
inc
out
dec
stc
jne
pusha
cs
push
daa
pop
retf
dec
mov
loope
mov
mov
mov
jmp
inc
dec
dec
jo
out
pop
pop
inc
pop
sbb
scas
mov
cmps
dec
stos
rcr
cs
dec
fisubr
sub
sub
mov
outs
xor
stos
sbb
mov
cmp
fnstcw
xor
dec
sub
mov
js
fmul
push
inc
dec
test
mov
mov
pop
into
pop
ror
sahf
sub
mov
jl
jmp
cwde
mov
in
das
fnsave
test
or
add
fwait
jge
iret
cwde
push
jg
mov
cli
fst
sub
dec
mov
jmp
jle
std
mov
out
pop
call
mov
sub
mov
or
dec
xchg
das
pop
js
sbb
(bad)
loope
dec
out
cmps
mov
int
shr
fisubr
aaa
pop
adc
mov
xchg
in
add
jp
dec
dec
xchg
scas
repnz
outs
inc
dec
mov
aas
mov
ins
mov
mov
cmp
mov
mov
pop
sub
out
fwait
sbb
(bad)
cmp
sbb
xor
cmp
add
push
ret
or
pop
int
or
fldcw
sub
mov
xor
mov
outs
mov
dec
add
pop
cmp
pop
fdivr
(bad)
push
xlat
mov
sti
sti
js
rcl
aad
movs
dec
push
cmp
dec
mov
fsubr
mov
sar
xor
stc
loope
(bad)
pop
(bad)
jae
sti
popa
push
das
call
mov
cmp
fdivr
cs
add
and
lahf
jecxz
push
pop
dec
fsubrp
(bad)
ffree
mov
neg
dec
pop
(bad)
xlat
lea
jb
rcr
xchg
inc
and
div
in
or
fcmovu
dec
ins
jp
push
xor
fst
inc
sar
out
pop
ds
sbb
sbb
jg
pop
sub
push
and
lock
add
xor
out
dec
jae
push
pusha
out
cmp
call
push
pop
cmp
das
rol
adc
pop
mov
jl
push
mov
pop
dec
fcomp
sub
jp
lea
dec
sahf
pusha
call
shl
aaa
mov
cwde
dec
lock
pop
sub
xchg
mov
cwde
repz
pop
mov
xor
dec
cmp
in
fbld
xchg
push
mov
mov
inc
shr
xor
or
stc
mov
ja
mov
add
fist
push
loopne
jge
xchg
jmp
mov
(bad)
neg
inc
inc
or
gs
jecxz
imul
mov
stos
enter
jb
add
inc
lea
dec
outs
jl
ss
push
mov
lods
sbb
pop
adc
fisubr
ret
dec
pop
xchg
jbe
clc
cmp
cmp
and
pop
daa
aas
hlt
rcl
pop
retf
je
add
outs
or
pop
jmp
mov
aad
pop
pop
pop
les
out
add
stos
and
jae
mov
and
scas
cmp
pusha
xor
test
sub
cs
xor
mov
dec
in
es
mov
repz
aaa
jns
cwde
outs
adc
push
pop
imul
(bad)
pop
pop
pop
pushf
rcr
mov
sub
pop
mov
sahf
adc
scas
faddp
iret
pop
dec
sbb
push
push
dec
in
jge
jg
jg
mov
aad
ja
and
dec
call
sbb
movs
sbb
test
dec
outs
call
test
ret
mov
out
pop
push
pop
cmps
pop
adc
outs
rcr
inc
push
scas
lea
mov
xchg
outs
lock
xchg
dec
dec
mov
sub
inc
enter
leave
repnz
push
test
(bad)
mov
lock
and
sahf
(bad)
ins
pop
or
cmp
call
cld
dec
lods
(bad)
lock
mov
sbb
add
xor
or
mov
mov
xchg
mov
mov
mov
in
(bad)
in
aaa
popf
div
ins
sub
mov
mov
in
lods
(bad)
dec
fist
clc
inc
inc
fisttp
scas
mov
addr16
or
mov
sbb
out
xchg
stos
adc
jg
aaa
outs
fdivr
or
jmp
mov
into
test
pop
mov
sahf
and
push
pop
sti
test
test
(bad)
fwait
mov
ins
out
mov
fstp
and
mov
xor
pop
cmps
mov
movs
test
mov
aaa
xor
push
mov
inc
fild
imul
jmp
fdivr
sub
pop
mov
pop
pop
ins
mov
inc
xor
cmps
mov
fdiv
ficomp
push
pusha
push
push
shl
jo
xchg
mov
mov
dec
pop
rcr
sbb
xor
adc
lock
pop
lea
out
pop
daa
or
mov
adc
jnp
int3
inc
jmp
jl
mov
or
inc
cmps
out
repz
cmc
cmp
mov
mov
cmp
jge
inc
and
xor
sbb
loope
mov
pop
gs
int3
sti
jl
or
sahf
xchg
retf
cmp
sub
jecxz
or
iret
sub
push
cmp
dec
stos
inc
outs
enter
mov
and
ds
pop
xchg
scas
sbb
stc
sbb
or
push
push
mov
dec
mov
cmp
xlat
out
ds
mov
retf
lock
push
ret
inc
(bad)
dec
inc
pop
push
cdq
iret
mov
pop
ins
scas
retf
add
sub
clc
inc
daa
test
mov
icebp
pusha
sbb
stos
(bad)
fdivrp
call
aas
or
out
cmp
pop
test
sar
add
dec
add
std
inc
add
fwait
out
(bad)
nop
cdq
test
sbb
jnp
cmps
pop
push
nop
mov
and
push
popa
cdq
enter
sub
dec
sub
dec
dec
ins
rol
and
sti
push
push
nop
pop
adc
inc
push
inc
pop
dec
aas
in
adc
xchg
mov
inc
adc
mov
pop
xchg
(bad)
sar
xor
mov
cmp
(bad)
out
cmps
into
xor
inc
mov
xor
outs
jns
pusha
cmp
xchg
or
jg
cmc
ffree
adc
pop
pop
setp
imul
lods
call
xchg
lahf
popf
mov
aaa
shr
or
fwait
js
js
xbeginw
mov
loope
jo
out
popa
sbb
imul
sub
jno
(bad)
jo
icebp
pop
sbb
sahf
cdq
mov
leave
mov
call
dec
inc
ja
fisttp
jle
sar
bnd
(bad)
pop
inc
scas
pop
push
lock
imul
push
sub
push
das
inc
sbb
inc
out
mov
cli
shl
push
xor
rcr
fimul
stc
mov
sub
mov
vmread
scas
retf
add
mov
sbb
dec
fs
stos
pop
(bad)
fnstenv
fs
xlat
shr
(bad)
call
enter
push
inc
and
xor
repz
sub
sub
or
mov
sar
inc
jge
jle
inc
lds
scas
sub
stos
int3
(bad)
sub
repz
mov
ss
sbb
enter
js
mov
stos
xor
shl
jnp
or
mov
into
mov
mov
stos
adc
std
in
sahf
mov
sbb
sub
sbb
mov
mov
lods
jl
mov
scas
inc
mov
les
enter
das
mov
arpl
mov
ja
mov
das
dec
and
jo
ss
test
mov
icebp
sub
xchg
outs
(bad)
mov
fld
loop
jno
jg
add
mov
leave
mov
adc
dec
cmp
mov
(bad)
push
dec
push
push
ss
dec
mov
cld
sub
fdiv
xchg
outs
jmp
cli
push
mov
std
add
cmps
aam
sub
inc
pop
cdq
outs
xor
shl
mov
xchg
lahf
test
imul
in
das
dec
sub
js
in
rcr
nop
push
mov
or
retf
pushf
popa
pop
leave
(bad)
push
fstp
lahf
rol
cmp
xchg
jmp
enter
sbb
pop
or
mov
(bad)
jo
push
lods
xor
popa
pop
jecxz
into
push
pop
hlt
mov
(bad)
xchg
push
adc
pusha
xchg
dec
ja
mov
mov
or
in
rcl
fnstsw
daa
cmps
pop
cli
aaa
lock
xlat
xchg
jo
add
mov
dec
add
ret
cwde
push
(bad)
inc
cmp
es
cmp
stos
dec
fdivr
lock
xchg
in
xchg
popf
cmp
pop
stos
or
fucomip
sar
sub
xlat
cmp
scas
into
mov
xchg
(bad)
fisttp
and
(bad)
mov
mov
sar
test
call
jp
mov
leave
outs
jl
mov
xchg
and
mov
rcl
xor
arpl
out
jl
daa
xchg
add
push
sbb
inc
out
sub
aad
inc
pushf
and
pop
adc
xlat
outs
mov
enter
inc
pushf
inc
and
pop
push
imul
jo
inc
mov
popf
adc
jnp
clc
cwde
jo
or
dec
xchg
mov
or
(bad)
aaa
(bad)
jmp
or
jecxz
sbb
inc
jl
pop
pop
pop
jb
test
popa
popa
pushf
sbb
sbb
sub
pop
clc
mov
push
sub
shl
pop
outs
jmp
push
mov
cdq
or
jmp
mov
jecxz
ja
cmp
jns
mov
xchg
pop
test
les
push
xor
mov
js
mov
call
call
adc
xor
push
mov
xchg
sbb
das
inc
pop
pop
test
jle
inc
jle
(bad)
sbb
dec
gs
adc
sbb
or
cmp
sbb
aaa
outs
add
jnp
push
cmp
or
mov
cmps
and
adc
jmp
in
pushf
pop
test
es
sbb
or
cmp
mov
lahf
js
fist
adc
ror
jg
jg
pusha
shr
or
mov
dec
aas
adc
out
aam
mov
leave
pop
cmp
cmps
pop
loopne
outs
ss
mov
mov
call
ja
mov
and
stc
(bad)
jl
or
addr16
leave
(bad)
(bad)
js
cdq
sbb
cmps
arpl
jl
and
dec
sub
pushf
jno
pop
int
das
sahf
fdivr
inc
mov
adc
mov
(bad)
dec
xchg
aas
ret
int3
neg
dec
pop
and
mov
push
xchg
pop
add
pop
lods
jmp
mov
pop
jle
adc
int3
sbb
(bad)
sbb
add
movs
push
mov
cld
fisubr
cmc
pushf
fsub
stos
pop
jecxz
iret
out
push
sbb
bound
imul
mov
fs
or
jno
enter
arpl
dec
push
in
pop
js
cmp
mov
pop
sbb
sub
in
fbstp
lods
out
retf
leave
test
xor
pop
push
pop
add
sahf
push
or
enter
in
out
add
xlat
push
pop
stos
(bad)
ds
dec
test
cmp
inc
scas
mov
dec
pop
sbb
cmps
cmp
repz
dec
aas
xchg
std
gs
mov
cmps
lods
setbe
mov
jmp
imul
xor
leave
ja
fnsave
mov
cld
scas
inc
xchg
dec
dec
sahf
and
retf
int
movs
int3
ror
adc
(bad)
jne
ret
xchg
cmp
lsl
(bad)
bound
bound
arpl
or
xchg
cmp
pop
push
add
mov
push
mov
stos
data16
dec
xchg
loopne
xor
cmp
push
sbb
das
sbb
inc
in
call
cmps
fild
xlat
mov
mov
(bad)
(bad)
pop
(bad)
fmul
fsub
pop
xchg
out
or
lods
lods
mov
in
hlt
fcomi
test
add
pop
xor
rcr
stos
pusha
fidivr
shl
jmp
out
sbb
in
cwde
imul
aas
das
inc
xchg
and
lds
or
jmp
inc
mov
rol
imul
or
das
ds
imul
jae
popf
mov
jmp
sub
add
pop
nop
retf
popa
enter
jo
xor
add
stc
push
arpl
jb
mov
cmp
push
ss
dec
pop
retf
(bad)
cmp
jmp
jae
lahf
call
xor
movs
aaa
push
sub
iret
dec
sbb
adc
or
cwde
call
sub
mov
mov
pop
outs
call
hlt
popf
mov
cmps
jg
out
(bad)
test
ja
cmps
xchg
aaa
cld
and
adc
sbb
jns
jmp
mov
fcmovne
aas
jmp
movs
or
fs
mov
fcompp
add
jns
mov
pop
cdq
(bad)
neg
movs
or
sbb
xor
xchg
clc
popa
mov
cdq
mov
pop
clc
dec
add
mov
adc
dec
dec
or
xchg
out
xchg
ror
inc
mov
jmp
cs
jg
xchg
icebp
ja
jnp
ss
mov
mov
jmp
aaa
fadd
cwde
mov
or
add
loop
ja
sbb
(bad)
push
sub
mov
push
sbb
cmp
fcomp
pushf
rcl
aas
outs
push
imul
das
mov
jle
mov
imul
sub
mov
pop
in
(bad)
jno
(bad)
(bad)
xor
(bad)
rol
outs
sub
cld
pop
in
cdq
in
mov
pusha
loopne
rol
add
push
push
sub
dec
enter
sub
jns
dec
push
mov
or
fs
push
stos
mov
mov
pop
mov
stc
dec
sti
je
outs
mov
inc
dec
sub
mov
in
jmp
inc
mov
out
pop
jl
cmps
pop
or
ins
bound
mov
ds
or
fnstenv
ins
ds
push
fnstcw
in
sahf
add
dec
mov
sub
pop
jb
jecxz
data16
outs
adc
out
push
sub
lods
pusha
aam
aad
(bad)
rcl
dec
jge
add
into
mov
xlat
jecxz
sub
das
ret
mov
leave
movs
dec
push
das
int
cwde
push
and
fnstcw
dec
dec
inc
mov
dec
and
cdq
inc
popf
retf
mov
pushf
and
in
repz
rcr
out
add
mov
lahf
stc
pop
aam
jns
movs
dec
test
xor
cdq
test
pop
cmp
out
cli
pop
push
add
or
and
stc
sar
mov
sub
inc
sbb
outs
ror
mov
jnp
mov
cld
ficomp
push
daa
add
pop
dec
ins
leave
dec
(bad)
scas
stos
punpcklbw
xor
jp
shr
or
push
sti
mov
ins
cmc
pop
dec
fcomp
mov
aad
std
or
gs
ins
scas
stos
inc
fcom
ds
ins
imul
stos
pop
loope
xchg
ins
cwde
ins
movs
cmp
fst
sbb
ins
jmp
out
inc
jle
mov
scas
dec
xchg
cmps
stos
xor
(bad)
dec
mov
jmp
dec
sbb
mov
pop
pop
lock
nop
cdq
icebp
jbe
mov
jg
gs
stos
or
mov
mov
or
aas
add
out
mov
push
or
mov
add
jmp
cmps
mov
mov
hlt
(bad)
add
xchg
sar
mul
inc
inc
sbb
inc
out
sub
scas
fist
test
sbb
inc
pop
inc
push
pop
test
inc
into
mov
sub
retf
in
and
or
aas
push
inc
mov
fs
cmp
mov
push
pop
scas
shl
cmp
cmps
pop
sbb
inc
and
jmp
lods
ss
mov
mov
and
or
cmp
(bad)
js
or
xor
pop
shl
(bad)
dec
dec
push
jno
cmp
div
(bad)
repz
ficomp
adc
ficomp
arpl
js
cli
or
push
ror
xchg
push
sbb
in
push
and
jp
jae
inc
out
scas
mov
mov
ds
call
in
sbb
(bad)
sub
mov
jle
cmps
inc
mov
ret
push
sub
pop
test
data16
sbb
or
mov
add
ins
or
mov
inc
scas
jo
int
nop
rcr
sar
js
cs
or
mul
hlt
sub
ret
mov
mov
out
xor
(bad)
xor
ds
jne
mov
jno
or
js
test
sar
sbb
(bad)
out
jmp
fldenv
and
jnp
js
pop
pop
sub
pusha
inc
std
push
(bad)
xlat
pop
cmp
fwait
mov
cmp
addr16
or
popa
ret
pop
push
test
sbb
fnstcw
sti
jmp
inc
sar
shr
mov
hlt
jne
cmp
ficom
(bad)
test
push
fistp
repnz
test
test
jle
add
outs
and
lahf
shl
pop
fucomip
cs
or
sbb
lds
addr16
out
add
jmp
xlat
test
sbb
mov
hlt
mov
pop
int
dec
mov
add
adc
sub
(bad)
pop
sub
das
dec
xchg
pop
add
cmp
test
btr
(bad)
mov
mov
inc
sub
in
mov
leave
addr16
jl
ret
(bad)
mov
shr
test
adc
mov
and
sub
dec
dec
test
ins
int
addr16
popf
jb
jmp
adc
add
or
les
add
pop
(bad)
retf
ds
mov
cmps
test
lds
call
xor
inc
xor
xor
cli
pop
sub
fcmove
cmp
(bad)
js
mov
xor
repnz
(bad)
jno
popf
(bad)
sub
mov
test
pop
cmp
in
sbb
cld
std
bound
and
fistp
mov
mov
rcr
in
jp
push
je
mov
dec
sbb
ja
mov
imul
cmp
mov
(bad)
jle
imul
shr
jp
sti
mov
(bad)
test
cmp
into
mov
sub
pop
xchg
sbb
xchg
aam
sub
popa
push
mov
int3
jle
sub
(bad)
test
jns
pop
and
sub
mov
xchg
and
into
scas
push
in
xor
cdq
imul
retf
inc
pop
sbb
aas
leave
jne
test
out
add
movs
aas
or
sub
cld
xor
adc
push
scas
mov
push
fistp
ret
inc
int
mul
loope
sub
or
imul
mov
and
pushf
mov
cmp
call
rcr
out
rcr
scas
cmp
sub
nop
cmp
push
dec
mov
dec
loop
mov
sbb
jle
or
enter
loopne
ficomp
mov
test
cmps
iret
xor
push
sbb
jg
popf
cmp
nop
jns
fwait
ret
xor
dec
pop
outs
dec
cld
call
lods
fcomp
call
in
in
jl
repz
pop
push
sbb
cmp
sbb
stos
sub
lea
test
mov
retf
in
stc
mov
mov
mov
sti
or
dec
mov
inc
leave
jo
mov
jne
inc
push
mov
aas
xchg
data16
das
pop
call
icebp
test
sbb
outs
mov
mov
clc
adc
sbb
jmp
inc
shl
aaa
into
aad
xchg
fwait
popf
mov
mov
dec
call
enter
cwde
stos
adc
es
test
or
leave
call
out
adc
pop
enter
movsx
in
sahf
xchg
jns
adc
jnp
popf
clc
push
outs
repnz
test
loop
jg
xchg
repnz
inc
es
rcr
pop
stos
int
xor
cmp
cdq
push
cld
jmp
cmps
les
mov
push
cwde
xor
cmp
dec
addr16
popf
test
test
push
add
(bad)
rcr
dec
mov
adc
push
inc
mov
mov
imul
add
jo
ins
xchg
xor
lods
cmp
and
xchg
fwait
mov
movs
mov
icebp
cli
xor
loope
jbe
jns
sbb
gs
test
popa
leave
in
sar
scas
fucom
sub
pop
sbb
xchg
pop
dec
loop
xor
aas
test
mov
cdq
js
ret
mov
fimul
mov
and
cs
pop
enter
inc
aaa
loop
aas
fdivp
dec
dec
stos
imul
jp
dec
inc
ins
dec
das
dec
adc
xor
cmp
and
lea
pusha
xchg
jg
adc
stc
lahf
clc
xchg
les
push
cmp
mov
ss
mov
stc
addr16
jns
clc
pop
pop
and
jo
cmp
adc
stos
aas
add
mov
dec
xor
cmp
pushf
jmp
lea
fdiv
int3
or
cs
jl
sbb
sub
jns
mov
retf
(bad)
cli
sbb
jecxz
push
pushf
mov
shl
xor
jnp
jl
mov
gs
or
std
adc
outs
jnp
jp
adc
into
lea
repz
mov
mov
ins
fld
mov
inc
jmp
adc
xor
inc
outs
adc
xor
out
lea
jp
ins
jbe
shl
out
hlt
lods
stos
fwait
cmp
push
data16
pusha
test
sbb
pop
cli
adc
sbb
cmps
xchg
scas
and
fdivp
test
es
call
push
addr16
mov
or
cmp
jge
push
test
sub
xchg
cmps
cmp
or
and
pop
xchg
mov
and
psrad
xor
push
(bad)
pop
cmp
cmp
mov
add
imul
push
outs
and
cmp
fistp
lock
and
(bad)
push
out
ds
cs
xchg
or
sub
adc
mov
and
daa
xor
daa
jg
(bad)
lahf
shr
(bad)
iret
imul
dec
jns
pop
sub
aad
add
inc
popf
pop
std
mov
mov
push
xor
(bad)
mov
std
call
lea
dec
rcl
cwde
sbb
push
das
shr
sub
add
dec
in
jg
cwde
sar
aas
pop
outs
cdq
clc
mov
fst
leave
out
pop
sbb
jp
pusha
in
jp
aad
test
inc
jmp
push
loopne
jns
or
call
popf
lds
cmp
movs
or
mov
mov
popa
fwait
icebp
dec
mov
and
adc
inc
dec
ins
dec
ins
inc
stc
xor
(bad)
push
imul
cdq
sbb
sbb
movs
mov
imul
mov
sbb
lods
shl
fcomp
jge
addps
rcr
jge
adc
lds
hlt
test
cld
(bad)
dec
cli
out
shr
jmp
xor
push
push
dec
or
and
adc
inc
jbe
cmc
pop
enter
dec
mov
inc
jl
loop
in
cli
xor
fistp
jle
sbb
lea
or
shr
or
mov
inc
mov
iret
mov
sbb
ret
out
push
enter
sub
pop
mov
dec
(bad)
push
pop
and
adc
in
(bad)
fst
mov
and
adc
sbb
push
popf
fiadd
sar
jns
(bad)
jno
outs
sub
cli
fnstcw
aad
cld
out
not
or
sahf
cmps
sbb
pop
mov
jp
push
sub
aaa
hlt
xchg
xor
repz
call
push
inc
(bad)
sbb
lods
xor
mov
push
mov
mov
scas
push
movntps
or
fst
std
mov
inc
jp
sbb
cmp
add
cwde
jmp
fcmovnb
push
mov
mov
push
cld
add
test
push
imul
test
push
inc
in
or
mov
fdivr
repnz
pushf
pop
inc
push
or
jmp
jle
inc
js
mov
sub
rcr
jmp
push
pop
xchg
inc
inc
xchg
es
dec
xor
jnp
mov
xor
push
clc
add
xchg
xor
enter
aam
push
ins
adc
xor
mov
sub
cmps
loop
xchg
retf
or
fidiv
gs
movs
jle
and
push
imul
nop
test
push
dec
push
inc
inc
mov
dec
loopne
dec
push
push
xor
jmp
cwde
jbe
dec
je
push
cwde
pop
xchg
cmp
and
mov
ficom
(bad)
int3
mov
scas
(bad)
int
sar
ins
push
sbb
jo
dec
pop
push
cmp
ins
es
dec
ins
bound
sbb
fsubr
fdivrp
sti
mov
gs
adc
ror
ss
jge
frstor
mov
and
push
cli
sub
xchg
or
lods
sbb
sbb
dec
(bad)
in
mov
sahf
mov
into
mov
(bad)
jmp
push
cdq
sbb
rcr
out
xchg
xchg
out
xchg
mov
out
cmp
in
stos
neg
shl
mov
sbb
dec
inc
and
sub
enter
jmp
jmp
loop
mov
pop
push
outs
mov
mov
out
repnz
cmp
xor
cmp
outs
inc
jp
(bad)
das
inc
mov
mov
push
outs
retf
movs
dec
test
dec
stc
jmp
inc
int
cmp
xor
pop
jge
movs
pusha
xlat
and
push
(bad)
nop
mov
retf
loope
push
in
sub
inc
jns
push
sti
pusha
repz
or
inc
pop
out
nop
daa
cld
pop
loop
push
out
in
(bad)
loope
iret
adc
lahf
xchg
enter
rcl
ja
outs
adc
or
out
lock
loopne
in
in
imul
nop
jmp
sub
stos
nop
aas
and
fstp
pop
xor
lods
sbb
loopne
mov
dec
scas
sti
jp
out
fsubr
add
addps
das
xor
loope
fwait
inc
test
sbb
cwde
mov
mov
fcom
jmp
cmc
mov
add
jmp
push
mov
push
jb
outs
mov
aaa
dec
out
mov
cmp
mov
jge
jmp
pop
inc
inc
or
push
jecxz
fistp
out
jp
(bad)
pop
das
dec
arpl
push
scas
aad
test
jge
call
or
jg
iret
sbb
sub
ret
dec
sub
and
mov
movs
dec
arpl
out
hlt
(bad)
xchg
cmp
sbb
xlat
sbb
bound
mov
fdivr
or
adc
enter
enter
call
xor
dec
jne
pop
stos
repz
push
clc
mov
push
sub
or
adc
lahf
sub
pop
dec
(bad)
in
(bad)
cwde
imul
les
pushf
sub
aaa
out
in
sbb
cmp
pop
bound
mov
fnstcw
cdq
cmp
stos
fcomp
or
cdq
sti
mov
into
lahf
jmp
fwait
mov
sbb
or
jl
and
movs
and
test
cwde
ret
xchg
jnp
dec
not
clc
mov
dec
call
les
pop
pop
ins
cmp
add
sub
aam
sub
repz
fild
leave
jg
icebp
inc
mov
jge
(bad)
mov
inc
cmp
and
xchg
ret
push
sbb
(bad)
push
sbb
cmp
fnstcw
cmp
je
ins
dec
fadd
inc
imul
cwde
sahf
mov
mov
aam
cmp
aas
add
rcr
push
cmp
adc
jns
fs
mov
xchg
(bad)
in
fs
and
sbb
dec
pop
jmp
arpl
cmps
dec
(bad)
mov
lods
sahf
mov
sub
pop
xor
push
inc
jae
outs
mov
mov
xchg
retf
test
sub
sub
or
pop
and
call
inc
into
clc
shr
and
sub
ins
data16
sub
xchg
aas
sbb
ret
in
sahf
js
dec
adc
out
retf
sub
pop
cmp
aas
mov
push
jg
iret
mov
xchg
jecxz
lds
sbb
push
icebp
sbb
pop
jbe
or
pop
fs
xchg
lahf
mov
xchg
mov
xor
movs
(bad)
add
push
jns
or
sbb
lahf
js
inc
out
mov
arpl
cmp
test
es
sub
mov
jno
cmps
inc
sub
sti
test
clc
pop
mov
das
add
dec
or
mov
dec
popf
adc
mov
add
int
jno
ins
or
pop
adc
jmp
mov
sti
psubusb
cld
inc
setns
das
mov
cli
and
xlat
ins
fmul
dec
jbe
mov
and
out
lds
or
pop
fild
pop
adc
les
retf
fcmovne
mov
xchg
leave
pop
xor
lods
retf
mov
sbb
mov
push
push
dec
mov
mov
stos
jne
out
ja
add
jge
push
dec
int3
icebp
out
fisttp
ds
mul
nop
pop
sub
sbb
or
dec
(bad)
ins
aam
cwde
gs
repz
cmp
cs
mov
repnz
jne
or
adc
dec
in
push
out
out
scas
cmp
into
out
or
cmp
push
dec
(bad)
fldcw
pop
sbb
push
adc
xor
lahf
imul
jmp
out
retf
or
(bad)
jo
cwde
dec
enter
inc
dec
inc
out
popf
pop
adc
mov
aam
mov
pop
stc
das
inc
js
push
gs
call
(bad)
call
jo
cwde
mov
dec
sbb
push
ds
(bad)
fwait
xchg
fidivr
mov
cs
push
adc
test
enter
pop
int3
enter
lods
xrelease
test
test
push
jle
sub
fcomp
test
popa
mov
xchg
sar
ror
dec
xor
in
jmp
dec
test
mov
and
scas
stos
pop
push
adc
sbb
or
sub
dec
aaa
mov
xor
mov
jmp
push
adc
aas
lds
xor
or
add
cmp
jb
fsubr
call
pushf
push
push
cmc
mov
ja
rol
dec
jbe
add
pop
inc
(bad)
mov
dec
inc
retf
(bad)
ror
cmps
int
pusha
in
aaa
jmp
and
fsubr
mov
mov
iret
mov
fdiv
inc
in
and
add
or
imul
and
(bad)
cs
cmp
mov
sbb
pushf
fisttp
cwde
mov
inc
dec
outs
dec
inc
imul
fwait
aaa
fdivr
xchg
iret
test
mov
sub
(bad)
jo
or
scas
dec
repnz
stos
in
xor
out
mov
fsubr
or
push
cmp
sub
(bad)
lods
xor
jmp
mov
cmp
add
mov
lds
jns
out
popf
push
arpl
push
jge
mov
fisttp
pop
pop
dec
add
jae
mov
lods
push
(bad)
sub
sahf
lods
sub
pop
ds
dec
pop
enter
ds
mov
(bad)
pop
pop
dec
cld
fisub
pop
jp
ja
iret
mov
adc
je
mov
(bad)
dec
clc
pop
stc
retf
add
lods
push
pop
aas
dec
mov
stos
mov
dec
retf
pop
hlt
push
sti
retf
mov
or
push
jo
jb
jae
jne
test
cld
mov
mov
jp
cmp
stos
ss
jecxz
test
mov
(bad)
lock
xor
dec
cmp
xor
jg
adc
outs
or
mov
jge
sar
pop
clc
rcr
and
mov
mov
xchg
lods
inc
ds
mov
adc
pop
aam
in
ror
fstp
cmp
aad
retf
push
xor
mov
or
loopne
cwde
out
cld
pop
loop
or
or
push
xor
movs
jmp
outs
(bad)
sub
mov
les
aam
movs
(bad)
repz
mov
pop
sub
xchg
outs
push
outs
mov
data16
mov
push
(bad)
and
inc
add
mov
enter
xchg
das
imul
inc
fcomp
ss
fidiv
repnz
nop
or
cmp
in
pop
mov
mov
aad
stc
jmp
xor
arpl
mov
hlt
outs
iret
lea
jns
aam
sti
jecxz
shl
add
dec
fnstsw
imul
imul
out
fcmovnu
out
sbb
sbb
(bad)
push
dec
pop
xor
push
sahf
or
ret
jbe
in
(bad)
jnp
push
leave
inc
sbb
pop
inc
pop
and
push
jg
dec
mov
and
gs
sub
fnstenv
dec
xchg
js
dec
inc
aam
movs
outs
or
or
jne
out
adc
das
ss
add
push
arpl
mov
mov
imul
in
in
les
dec
je
fs
pushf
movs
pop
aas
and
dec
pop
xchg
dec
cmp
ret
push
or
repnz
push
iret
nop
ss
mov
repz
sbb
mov
ja
idiv
inc
stos
mov
outs
scas
sbb
mov
data16
mov
mov
std
pop
jge
(bad)
and
adc
cwde
jb
pusha
jmp
repz
sbb
push
enter
scas
je
push
sub
or
clc
sbb
aas
fcomp
or
push
push
mov
(bad)
xchg
(bad)
leave
lahf
pushf
mov
jg
cld
xor
pusha
(bad)
dec
shl
inc
mov
data16
or
addr16
in
cwde
mov
add
mov
pop
daa
mov
pusha
mov
inc
mov
mov
push
(bad)
popa
mov
in
in
xor
scas
(bad)
aas
fdiv
mov
mov
pop
xor
sti
imul
(bad)
fcmovnu
ret
mov
and
psubusb
jno
jb
fld
jmp
cmp
adc
jns
mov
add
(bad)
mov
movs
lea
daa
out
xlat
ret
dec
mov
sbb
cdq
inc
mov
dec
(bad)
mov
lds
or
mov
(bad)
js
stos
cmc
in
lods
jmp
dec
mov
mov
dec
dec
sub
sbb
dec
int
adc
(bad)
mov
push
jbe
cmp
or
dec
sbb
xchg
xchg
or
(bad)
(bad)
hlt
je
xor
fsub
push
sbb
and
mov
loop
in
push
pop
int
sbb
jbe
shr
arpl
push
fwait
neg
rcr
mov
and
add
in
mov
aas
inc
jns
fsub
cmp
retf
push
in
or
mov
jae
dec
(bad)
not
xchg
and
lock
neg
je
mov
inc
sahf
int
hlt
jl
out
push
add
adc
cmp
sub
ror
sub
jge
ret
scas
es
sub
xchg
mov
sub
ret
ins
fistp
inc
sahf
jns
scas
iret
pop
mov
inc
pop
std
dec
mov
cdq
push
call
(bad)
push
jle
or
ja
loopne
lahf
push
pop
pop
sbb
out
(bad)
jmp
inc
(bad)
jns
add
xor
inc
sbb
or
inc
fisubr
dec
sub
push
mov
inc
addr16
inc
movs
and
fwait
ds
stos
or
out
jae
mov
adc
pop
xchg
stos
pop
cdq
out
mov
clc
mov
sub
fcomp
mov
jnp
mov
in
push
imul
in
jmp
sbb
fcmovne
lahf
pop
outs
test
pop
sub
call
ds
inc
push
add
sub
mov
or
sub
(bad)
mov
mov
or
rcr
jle
sar
subps
jle
dec
or
imul
int3
xchg
ja
jg
nop
in
cmp
aaa
cdq
lea
imul
leave
aas
pop
jo
push
push
push
push
xchg
or
or
push
push
cs
jae
cmp
js
popf
or
fdivr
add
les
iret
push
fadd
cmp
pop
out
jg
mov
lods
pop
loop
pop
cld
cdq
lods
cld
in
call
jnp
cmp
mov
call
inc
retf
shr
mov
fisttp
or
sbb
shl
pop
outs
xchg
imul
push
mov
dec
hlt
mov
or
iret
call
(bad)
lock
ja
or
push
cdq
and
inc
test
mov
sub
cmps
add
(bad)
out
pavgw
enter
(bad)
sbb
dec
pop
test
mov
mov
fwait
sbb
mov
mov
femms
push
add
scas
sbb
call
sub
and
out
lahf
push
push
outs
sub
call
sub
xor
iret
push
es
call
out
test
scas
(bad)
cmovs
movsx
adc
xbegin
cmps
push
xchg
fstp
or
jmp
in
mov
mov
dec
and
cmp
pop
mov
int
sub
test
and
(bad)
fadd
shl
fstp
sub
outs
pusha
loope
sub
cmovle
or
leave
mov
pop
retf
aad
fcomp
sub
stos
call
cmp
mov
mov
outs
(bad)
mov
and
leave
dec
pop
jbe
dec
pop
push
add
xchg
iret
cli
pushf
test
aas
mov
cmp
and
(bad)
push
mov
bound
in
out
mov
enter
aaa
sar
fldcw
or
pop
dec
rcl
jnp
pop
cwde
jl
outs
xor
shl
aaa
stc
dec
add
into
cmp
outs
sbb
imul
sbb
xchg
cmp
cwde
fld
aad
test
push
mov
outs
inc
test
cwde
(bad)
mov
mov
mov
mov
(bad)
mov
or
inc
ret
mov
in
lahf
jns
test
add
aas
pop
out
cld
add
sahf
push
lock
and
sbb
icebp
pop
pushf
(bad)
out
test
dec
adc
mov
sbb
out
ins
cdq
sbb
pop
ins
outs
(bad)
sbb
and
cli
jp
ins
sbb
loopne
jle
sbb
js
cmps
cmp
pop
push
sahf
leave
jecxz
mov
test
xchg
je
xor
(bad)
pop
dec
jo
outs
ror
enter
je
leave
cli
lds
fdiv
inc
dec
movs
add
cwde
ret
cwde
aas
xor
movs
(bad)
cdq
cmp
xor
sbb
push
sub
call
mov
stos
mov
pop
lock
aaa
add
and
sbb
in
or
clc
pop
call
lods
push
mov
arpl
jmp
(bad)
sbb
popa
mov
and
je
mov
or
or
movs
sbb
mov
movs
call
js
in
adc
inc
bound
cmp
out
(bad)
into
sbb
mov
xchg
nop
les
dec
inc
leave
jecxz
mov
adc
dec
push
sbb
shl
sti
and
clc
push
(bad)
inc
sbb
dec
or
push
cli
mov
hlt
xchg
je
or
add
adc
and
sbb
out
sbb
jp
js
test
and
sub
cmc
sub
mov
iret
scas
push
mov
xor
xor
cmp
pop
ja
int
xchg
xor
add
out
pop
sub
adc
lds
xor
xor
in
jae
and
sub
mov
xchg
jnp
push
sbb
push
aam
mov
pop
inc
push
xchg
inc
add
mov
xor
cwde
xor
pop
push
aas
rcr
loopne
das
(bad)
test
push
gs
test
push
xchg
clc
loop
int3
leave
jmp
jo
cs
movs
(bad)
xchg
add
mov
adc
push
and
sub
comiss
xor
and
xchg
int
push
cwde
push
les
add
mul
fidiv
rcl
div
sbb
adc
inc
jp
imul
sub
xor
xchg
in
dec
mov
cmp
xor
mov
add
or
sbb
sbb
clc
push
and
and
scas
sahf
mov
sub
fsub
jmp
bound
scas
sub
mov
outs
jb
mov
pusha
movs
repz
movs
ret
aaa
mov
mov
movs
and
call
dec
mov
push
aas
add
daa
aam
sbb
sub
in
outs
in
sar
xchg
test
pop
dec
hlt
ins
test
push
or
cmp
sub
ret
push
push
push
test
call
cmp
push
fild
pop
cwde
ins
clc
and
jg
outs
test
sbb
mov
aas
lahf
lahf
bound
sbb
enter
call
sub
add
pop
fs
push
movs
push
adc
jnp
in
in
call
iret
mov
call
fisub
mov
pop
pop
gs
adc
iret
(bad)
cmc
jmp
mov
repnz
in
push
push
mov
jno
xchg
nop
and
clc
cs
cwde
aas
add
call
arpl
test
cwde
mov
scas
push
push
outs
dec
sbb
out
dec
jns
fcmovnbe
inc
adc
jns
imul
inc
jnp
(bad)
push
cdq
mov
ficomp
rcl
in
cmp
repz
ror
das
inc
cmp
jecxz
dec
cdq
ficomp
in
test
cmp
jle
fs
or
jbe
cwde
cmc
push
and
xor
xchg
cmp
stos
sub
aad
push
or
jecxz
push
sahf
pushf
mov
test
jp
in
fidivr
sub
aas
das
add
into
add
mov
jae
mov
(bad)
xchg
leave
adc
shr
xor
lock
lahf
push
dec
cmp
das
aam
mov
cmp
enter
xchg
ja
sub
out
je
pop
sbb
xor
fnstenv
or
pavgw
adc
xchg
add
scas
loop
pushf
fst
je
(bad)
sti
mov
enter
or
pmaddwd
js
jno
pop
not
lock
push
add
jb
xchg
out
pop
adc
jb
push
push
pop
in
addr16
aad
push
movs
out
lds
pop
aas
inc
jg
lahf
ret
xor
rol
xor
scas
add
outs
push
mov
xchg
xchg
mov
or
add
out
or
ror
jae
dec
add
cmps
movs
(bad)
mov
call
loop
cmp
cmps
and
pop
out
mov
fwait
out
push
adc
mov
add
and
or
fsub
xor
mov
(bad)
inc
retf
jnp
js
scas
hlt
jge
ret
test
gs
(bad)
jne
and
test
dec
xor
pop
add
fmul
push
iret
repnz
cs
pop
into
jg
retf
cli
or
pop
sahf
dec
cdq
pop
mov
(bad)
pop
add
repz
and
jns
adc
and
out
and
shr
push
adc
sub
adc
fist
sub
pop
mov
cdq
mov
dec
js
repz
shr
bound
imul
fimul
movs
lea
int3
fs
sub
cmps
(bad)
(bad)
xor
pop
nop
in
xlat
mov
push
mov
movs
arpl
les
push
jmp
(bad)
adc
xchg
push
fs
repz
fdiv
(bad)
jmp
mulps
jle
pop
test
scas
mov
ror
es
iret
(bad)
adc
cmp
sub
loopne
xor
mov
sbb
mov
out
xchg
fucomi
mov
or
push
xor
arpl
pop
test
stc
mov
add
out
add
or
repnz
cmp
out
pop
jl
pop
dec
dec
mov
ss
inc
add
stc
outs
add
in
push
call
fisttp
fstp
pop
pop
lahf
int
lods
aas
and
xor
ds
inc
pop
jg
push
xor
jnp
test
(bad)
loope
sbb
out
pop
or
retf
cmp
in
jns
cmp
xchg
push
inc
mov
ins
fstp
fwait
int
adc
paddq
fdiv
imul
or
jne
lahf
xchg
push
sub
bound
rcl
add
xor
repnz
jg
shl
cmps
mov
or
mov
dec
sub
js
add
call
adc
scas
dec
mov
inc
adc
sbb
repnz
fbld
xchg
shr
sar
mov
sub
fcom
xor
jmp
sub
call
jbe
push
push
inc
jg
xchg
xor
add
cmp
fsubr
xchg
jle
pop
imul
sbb
push
jbe
mov
inc
push
call
sub
push
and
scas
inc
test
icebp
pop
mov
ret
sbb
std
pop
clc
add
xchg
lea
sahf
arpl
and
fisubr
(bad)
fcmove
xchg
cmp
mov
cwde
scas
sbb
or
jmp
add
fld
fidivr
xor
mov
rep
retf
sbb
sub
mov
pop
cmps
adc
les
push
mov
test
mov
pop
imul
into
xchg
add
sub
scas
pop
cmps
push
test
xchg
and
cmps
xchg
xchg
xor
jns
dec
ret
jp
leave
repz
ror
(bad)
scas
in
cmp
repz
pop
lahf
mov
inc
test
dec
pusha
mov
outs
jl
sbb
jle
sahf
fisttp
push
fld
push
and
ret
mov
add
bound
jmp
push
xchg
adc
add
std
and
and
add
dec
mov
inc
cld
sbb
dec
out
xlat
dec
jbe
test
and
push
pop
sub
js
cmp
outs
iret
jmp
sar
aam
fidivr
mov
jp
mov
mov
xor
lods
inc
test
pop
inc
mov
pop
cmps
or
movs
sbb
sub
sbb
jmp
fst
mov
mov
scas
cwde
dec
mov
push
mov
inc
jecxz
sub
addr16
xor
call
ds
jae
xor
jno
test
clc
mov
push
leave
xchg
call
outs
push
bound
dec
cmps
shr
push
stc
scas
adc
ret
mov
enter
jl
lods
scas
inc
push
inc
ret
aam
lods
sbb
mov
imul
and
sbb
in
pop
and
scas
movs
lock
jno
pop
dec
pushf
xor
(bad)
jg
call
jmp
outs
xchg
mov
dec
xor
xchg
out
mov
outs
lahf
enter
sbb
xor
fsub
xlat
adc
jne
mov
shl
mov
pop
and
push
mov
sbb
jns
les
push
icebp
mov
xchg
pop
jno
push
call
(bad)
rol
test
daa
aas
cli
outs
fdiv
daa
jno
add
cmp
(bad)
outs
in
ins
gs
sbb
dec
cwde
cmp
xor
and
dec
fwait
sti
and
dec
push
lods
lahf
cmps
xor
mov
ret
cmps
fdivrp
or
nop
shl
sub
fisttp
sar
cmp
lahf
mov
test
add
xchg
aaa
sbb
mov
ret
xlat
pop
cmps
scas
fscale
inc
lods
xchg
outs
enter
ss
sbb
mov
rol
xchg
jecxz
movs
(bad)
xor
and
push
pusha
add
inc
push
(bad)
mov
rol
sub
mov
add
aam
mov
fdiv
cmps
(bad)
scas
pop
out
sbb
rcl
loop
xor
je
pop
test
pop
shr
push
adc
(bad)
out
add
push
cwde
das
aas
add
adc
dec
das
jno
mov
push
outs
std
xchg
in
(bad)
sbb
sbb
enter
aas
leave
or
pmulhw
or
shl
mov
les
push
scas
cwde
or
and
sub
or
dec
jmp
mov
inc
int
xchg
adc
and
les
sbb
or
push
out
inc
jle
xor
shr
push
mov
mov
adc
pop
repz
arpl
int3
cld
fiadd
pop
clc
inc
mov
idiv
psubusb
in
and
aas
test
int3
jbe
inc
xchg
sar
loop
leave
mov
pop
fisubr
aad
call
mov
push
outs
mov
aas
mov
repz
sbb
mov
sbb
jnp
mov
sub
neg
movs
jmp
in
jle
cli
fmulp
mov
or
(bad)
fimul
ficomp
add
(bad)
out
mov
stos
sub
push
imul
pop
and
sti
cmp
push
mov
mov
fcom
pop
cld
popf
movs
sub
das
ds
gs
jmp
jns
clc
mov
clc
jmp
repnz
jl
pop
adc
cs
faddp
pop
mov
lahf
dec
movs
push
in
(bad)
into
or
sub
cdq
dec
dec
inc
and
loope
mov
fxch
lods
call
dec
xchg
sbb
adc
cmc
dec
scas
mov
cs
int
mov
stos
pop
jl
cmp
dec
push
xchg
cvtps2pd
xor
fwait
addps
test
int
aas
jp
adc
sbb
push
enter
and
sub
xchg
bound
jmp
adc
(bad)
iret
xor
sahf
bound
iret
sub
mov
(bad)
sahf
retf
mov
jns
fwait
jg
test
jae
std
jg
hlt
fstp
arpl
es
popa
mov
adc
scas
inc
jg
div
xchg
scas
out
call
dec
sahf
cmp
dec
cmps
mov
pop
jnp
pop
cmp
or
fnstsw
jle
ss
pushf
leave
scas
cmp
stc
inc
ret
sbb
sbb
or
outs
adc
or
in
fwait
int
in
in
leave
adc
and
es
ja
jmp
fdiv
mov
mov
iret
adc
dec
mov
push
xchg
pop
mov
fld
addr16
cld
mov
jg
mov
ds
leave
sbb
cmps
xor
outs
fld
das
call
pop
push
ins
sub
mov
lea
aad
mov
jle
lods
mov
shl
add
add
push
add
or
stos
retf
push
push
push
arpl
setb
pop
cs
mov
test
xor
lahf
add
ret
sar
scas
adc
mov
test
fdivr
dec
cmps
clc
fucomip
iret
adc
and
cmp
sub
lea
cmp
cmp
jmp
jae
test
in
(bad)
out
clc
int
add
or
(bad)
pop
cmp
xchg
dec
pusha
clc
mov
jnp
and
and
mov
xchg
add
cmps
cmp
int
cwde
hlt
xchg
int
jp
mov
test
fwait
jno
xor
out
xchg
es
pusha
call
scas
lahf
xchg
and
pop
mov
push
daa
enter
(bad)
push
push
dec
dec
jp
pop
jg
inc
inc
or
push
jmp
clc
push
stos
jae
fldcw
call
push
push
rcr
inc
sub
pop
or
jle
enter
adc
pop
add
adc
or
pop
test
push
into
xlat
mov
dec
xor
movs
xchg
jbe
mov
clc
pop
cmp
stc
pop
arpl
jg
arpl
jbe
lahf
out
mov
sbb
into
pop
pop
push
ret
adc
sbb
(bad)
fisub
pop
pop
sbb
daa
iret
cs
mov
(bad)
cmp
fcomp
cld
pushf
sbb
cmp
out
push
adc
mov
and
sub
popf
xor
adc
shr
xor
or
and
cmp
pop
sahf
xchg
aad
ins
out
test
or
lock
jb
into
sbb
out
mov
jno
cmc
inc
(bad)
mov
test
test
mov
and
js
push
pop
jo
xchg
jmp
fdiv
repnz
pop
xlat
cmps
jmp
cwde
sub
cmps
mov
lea
sbb
inc
pop
cdq
xor
shl
xchg
pop
inc
fisub
inc
lods
push
xchg
(bad)
cmovne
pop
enter
mov
push
sbb
jae
inc
mov
sbb
imul
stc
pop
hlt
jo
scas
push
inc
cmp
dec
push
lea
inc
loopne
pop
mov
dec
enter
enter
ss
inc
lds
xchg
imul
jae
arpl
inc
pusha
imul
sbb
out
lods
clc
in
imul
leave
ins
inc
sahf
mov
mov
sbb
xor
in
rcr
stos
or
xchg
mov
mov
ins
mov
(bad)
out
sub
fbld
das
xor
out
test
aaa
jl
pop
push
inc
rcl
out
movs
ror
iret
adc
rcl
mov
jle
mov
xchg
test
gs
xchg
inc
or
sar
jg
(bad)
outs
fs
dec
outs
mov
gs
ins
jae
or
sbb
dec
nop
enter
cmps
(bad)
pop
jmp
pop
sub
push
jae
push
jg
test
sub
aam
cmp
jle
loop
jecxz
add
mov
cmp
mov
fcom
(bad)
dec
push
popa
(bad)
push
(bad)
out
dec
mov
and
lock
xor
ja
mov
daa
enter
mov
sbb
outs
enter
cmp
add
mov
jle
call
loop
mov
ins
jns
call
leave
aaa
shl
out
dec
mov
mov
out
pusha
lock
xor
push
fwait
sub
or
pop
adc
leave
mov
test
test
pop
out
or
outs
push
sub
lahf
cmp
test
mov
cwde
ja
cld
xchg
or
mov
repz
std
in
psubusb
add
call
js
pop
inc
adc
sub
inc
out
adc
xlat
xor
leave
or
stos
jg
mov
push
lahf
cmps
iret
mov
mov
adc
(bad)
shl
rol
scas
ror
out
adc
add
popf
je
iret
ins
mov
ficom
(bad)
lock
adc
retf
out
cmp
enter
in
jmp
js
fwait
imul
xchg
lahf
push
add
cs
stos
frstor
out
js
pusha
adc
iret
sbb
mov
rcr
dec
imul
sub
fstp
in
js
mov
enter
add
(bad)
push
xchg
sub
lahf
scas
mov
add
enter
(bad)
mov
or
pop
sbb
dec
push
dec
outs
mul
sbb
sbb
jne
out
cdq
mov
mov
iret
pop
lods
fisubr
(bad)
xlat
out
push
mov
outs
dec
jge
sahf
sbb
dec
and
sub
add
pop
iret
sbb
in
sbb
adc
push
dec
dec
sbb
test
(bad)
pop
fdiv
cmc
arpl
sbb
jle
dec
cwde
outs
dec
sbb
add
mov
call
mov
repnz
fild
push
js
lahf
scas
in
inc
push
pop
in
(bad)
test
ins
dec
stc
adc
xchg
or
lods
dec
aas
fcomp
pop
cmp
push
add
mov
push
pop
loopne
pop
adc
shl
mov
adc
push
daa
dec
push
mov
jle
or
(bad)
std
pushf
pop
dec
sub
(bad)
movs
mov
bnd
js
pop
mov
cwde
leave
out
mov
mov
cmc
jp
dec
sub
out
das
xor
retf
and
in
test
dec
mov
cmp
pop
pop
arpl
pop
xlat
dec
sub
jne
jl
fwait
loope
aaa
test
lahf
mov
sub
inc
xchg
shl
mov
(bad)
mov
mov
punpckldq
stos
cmp
sub
dec
pop
jmp
gs
shl
jmp
mov
add
movs
call
out
mov
fstp
push
push
dec
ds
loopne
inc
data16
jmp
ret
fisttp
xchg
(bad)
push
jle
ds
adc
jnp
scas
cs
mov
add
push
mov
push
push
stc
dec
sbb
in
xchg
out
sub
lock
(bad)
popf
sub
fdivr
test
jle
xor
jl
adc
std
mov
mov
jmp
mov
scas
cmp
aas
movs
push
sbb
xchg
jns
mov
nop
mov
std
iret
xor
adc
sahf
and
ror
mov
cmp
jmp
mov
bound
sub
xor
rcl
mov
mov
jle
jae
ss
outs
or
(bad)
(bad)
jl
imul
gs
icebp
jne
into
sub
rcl
(bad)
js
fs
dec
dec
dec
and
fsubr
popf
mov
lahf
(bad)
das
(bad)
pop
movd
and
jnp
add
pop
pop
xchg
add
(bad)
cmp
adc
in
mov
xchg
iret
daa
shl
add
cmps
pop
lock
or
nop
fsub
cdq
pop
rcl
or
ret
nop
in
daa
test
iret
sub
dec
neg
xchg
sbb
into
out
pop
xchg
ret
sbb
add
pop
aad
push
call
dec
adc
mov
test
jmp
(bad)
sbb
faddp
push
outs
pop
adc
mov
pop
sub
lods
jnp
mov
pop
lahf
adc
pop
or
(bad)
sti
ficom
adc
dec
jg
sbb
aaa
fist
mov
jo
aam
mov
fisubr
cmp
sub
aas
ds
fmulp
lods
xor
xchg
ds
mov
ffree
ds
and
ja
dec
outs
imul
sub
mov
sbb
cli
push
and
aad
mov
xlat
sub
ss
and
pop
into
out
pop
xchg
(bad)
out
jmp
cmp
fcomi
xor
(bad)
fistp
(bad)
sub
aad
or
(bad)
xor
fdivrp
cmp
scas
dec
pop
push
cld
inc
aaa
fnstsw
ja
mov
stos
(bad)
pushf
popa
sub
arpl
xor
xchg
push
push
xchg
jp
sbb
inc
addr16
out
mov
dec
sub
aam
xchg
xor
(bad)
aas
jp
pop
or
dec
aas
jle
pop
loop
pushf
sub
mov
fidiv
push
inc
sbb
xchg
mov
inc
inc
pop
mov
(bad)
out
dec
push
sub
ss
ret
fld
sti
bound
ss
pop
inc
dec
cmps
leave
fmul
in
mov
push
sub
(bad)
push
inc
jnp
nop
cmps
out
das
pop
mov
add
(bad)
repz
dec
sub
push
xor
cmps
pop
(bad)
jecxz
(bad)
dec
pop
pop
mov
int
cmps
xchg
mov
arpl
mov
sub
push
cvtps2pi
scas
dec
cmps
xchg
into
mov
mov
ret
shl
sub
outs
scas
(bad)
mov
xchg
inc
rol
int
adc
mov
and
ins
bound
gs
out
jecxz
cmps
sub
mov
loop
test
out
add
push
pop
xchg
fild
and
(bad)
and
add
arpl
or
cmps
loop
sbb
inc
cmps
imul
dec
dec
repz
loopne
dec
ret
sub
arpl
inc
lds
jge
mov
out
scas
push
cdq
or
add
dec
mov
push
dec
nop
xlat
or
adc
(bad)
jecxz
mov
test
xor
ret
out
loop
sub
or
mov
data16
(bad)
cs
bound
das
cmps
ret
dec
ret
stos
mov
out
mov
inc
cmps
lock
jle
xchg
jbe
fidiv
push
xchg
jle
pop
popf
jp
into
popa
jne
(bad)
loop
ja
jp
aaa
xor
pop
adc
scas
ret
(bad)
pop
std
loopne
add
rcl
jmp
ds
adc
cmc
test
sub
retf
mov
add
push
jbe
std
jge
fcmovb
loop
(bad)
aam
or
inc
xor
repnz
repnz
mov
pop
dec
repz
(bad)
ss
mov
inc
add
add
inc
movs
xchg
jmp
inc
lods
jmp
add
xor
inc
jle
jmp
fcmovb
jmp
cmp
jle
cmc
(bad)
(bad)
scas
jae
cmp
bound
push
icebp
mov
fidivr
pop
xor
xchg
lods
or
inc
xor
not
jmp
es
jle
jg
jg
jmp
inc
outs
mov
popf
jb
jle
ds
or
outs
mov
cmc
ins
mov
mov
call
mov
out
adc
int
jle
mov
pop
(bad)
and
dec
je
(bad)
das
inc
es
sub
outs
inc
jle
mov
test
fs
mov
out
fdivp
inc
mov
fcom
mov
out
fisub
outs
xor
repz
ror
cli
out
jg
jle
ins
add
mov
imul
pop
test
mov
aaa
mov
retf
add
(bad)
retf
leave
enter
dec
mov
inc
imul
push
ror
mov
cmp
cwde
retf
add
dec
ret
ins
into
shl
hlt
inc
lds
pop
into
dec
out
fstp
and
dec
cwde
dec
mov
loopne
cmp
pop
jp
dec
mov
sbb
jne
aam
stos
mov
loopne
dec
xchg
enter
ins
adc
fmul
pop
ja
aad
jle
cld
enter
call
or
sbb
mov
adc
or
int
sbb
test
cld
push
sbb
add
mov
retf
mov
lock
xor
bswap
cmovg
fcomp
sahf
stos
xchg
iret
das
or
test
shl
mov
add
cmp
outs
enter
pushf
push
mov
cmp
int
test
pop
ja
fmul
add
mov
ror
fs
dec
or
in
sbb
push
sub
dec
pop
mov
test
iret
pop
cmp
add
jp
sbb
mov
nop
or
add
sub
dec
adc
mov
jne
or
dec
aad
mov
add
rcr
cmp
cld
scas
call
adc
inc
int
cld
cmp
cld
div
pushf
jmp
hlt
xchg
hlt
cwde
cdq
mov
fwait
ror
dec
sbb
dec
dec
(bad)
jl
push
sbb
shr
jl
inc
loop
call
loopne
mov
out
sti
mov
dec
loope
bound
sub
sbb
inc
jns
ins
jge
jmp
mov
cdq
scas
jl
enter
pop
fbld
ins
or
cdq
push
popa
mov
sbb
mov
call
lods
dec
sub
dec
lea
pop
dec
in
inc
sbb
aam
in
movs
mov
jl
mov
jmp
pop
aad
xlat
mov
cmc
imul
fsubr
aad
xor
pusha
dec
inc
imul
movs
push
int
sbb
sub
and
in
sub
pusha
imul
pop
and
push
stos
sub
xor
xchg
sbb
sar
cld
jmp
mov
pop
(bad)
nop
dec
je
test
fsub
jmp
pop
and
pushf
movs
mov
mov
and
adc
mov
movs
retf
cs
pop
rcr
jle
dec
hlt
add
aad
jmp
sbb
in
jge
add
dec
inc
ins
daa
add
pop
push
rol
into
mov
test
pop
push
pushf
push
xchg
jmp
mov
imul
mov
shr
mov
(bad)
loopne
push
add
and
repz
loop
and
fnstcw
bound
lea
jp
aad
ficom
or
pop
out
test
jp
inc
mov
fwait
xchg
push
inc
mov
sbb
repnz
push
push
and
cmp
xlat
mov
push
xchg
cld
or
leave
dec
cli
(bad)
repz
mov
inc
iret
lahf
push
cli
or
sbb
in
repnz
fwait
movs
mov
xchg
push
cli
push
xor
add
sbb
aad
jne
inc
iret
jp
cld
cld
or
dec
cli
xlat
jl
mov
inc
xchg
js
das
repnz
ret
mov
fs
cli
push
mov
sub
out
jp
xor
cmc
movs
jb
jbe
mov
jp
cli
dec
cmp
xor
mov
in
repnz
and
xor
mov
jp
cli
loopne
loop
push
xor
repnz
outs
jp
pop
imul
bnd
cdq
mov
in
jp
jp
jl
cli
addr16
pop
mov
cmp
fs
add
in
mov
mov
xchg
lds
enter
popa
ret
rcr
(bad)
ins
xor
into
ret
int
out
lds
adc
xchg
(bad)
lds
imul
inc
inc
jmp
ins
mov
cmp
dec
data16
fxch
mov
aad
call
and
in
cmp
cmps
lea
mov
jmp
jge
gs
(bad)
cmp
inc
inc
or
adc
movs
or
xchg
jne
leave
int
cmp
add
in
sbb
push
int
hlt
sub
enter
std
leave
in
loope
movs
test
or
pop
or
es
jmp
jge
and
shr
and
jmp
arpl
lods
dec
test
(bad)
sub
adc
pop
test
aad
sbb
loop
sbb
xchg
cdq
adc
jmp
(bad)
ins
sub
add
in
dec
push
movs
lea
(bad)
cmp
cmp
sbb
inc
cmp
imul
bswap
push
add
aas
cmp
xor
jmp
inc
ret
lods
jns
test
xchg
bswap
push
adc
dec
sub
sbb
sub
sub
inc
outs
test
jmp
in
(bad)
ret
out
inc
in
inc
cmp
push
mov
cs
test
push
dec
add
and
into
retf
lds
repz
inc
mov
imul
fldl2t
leave
mov
out
mov
das
push
into
leave
push
push
imul
pop
jnp
gs
add
test
xor
call
(bad)
movs
mov
adc
cwde
retf
inc
xor
pop
daa
push
sub
mov
(bad)
jg
jne
scas
lahf
sti
test
jmp
jmp
sbb
jmp
sar
retf
sub
ja
sahf
sub
fisttp
repz
fist
mov
mov
jg
out
dec
fistp
ror
test
push
mov
cmp
leave
imul
mov
pop
lods
mov
in
push
xor
adc
jg
aaa
push
fild
adc
cmp
or
nop
movs
mov
pop
dec
jns
out
pop
mov
dec
dec
imul
out
and
mov
(bad)
aam
mov
push
outs
pcmpeqb
or
pop
dec
adc
or
aad
in
xchg
xlat
pop
out
ret
xor
fist
mov
pop
pop
(bad)
jg
test
inc
iret
xchg
(bad)
jg
aam
test
arpl
sbb
jb
test
cmp
fld
je
pop
cld
test
inc
neg
xor
pop
mov
pop
(bad)
pop
outs
lahf
fistp
iret
(bad)
pop
xchg
pop
mov
xchg
pop
neg
lahf
aaa
dec
fcmovne
or
aas
sti
pop
pop
xchg
pop
test
xchg
pop
mov
inc
iret
or
outs
lahf
aaa
lahf
pop
(bad)
daa
iret
imul
pop
pop
lahf
ss
push
pop
neg
pop
mov
aas
lahf
pushf
xor
out
sub
add
pop
outs
fsub
jmp
dec
lahf
mov
mov
xchg
(bad)
sbb
out
ficom
(bad)
pop
inc
pop
btr
inc
xchg
xlat
cmp
mov
sbb
inc
aaa
sahf
test
iret
or
push
sti
mov
cs
adc
jg
sbb
rol
movs
fadd
cmp
repnz
es
pop
movs
adc
rcl
jb
jl
mov
xchg
jnp
das
jmp
xor
cld
out
jecxz
xor
dec
lea
(bad)
sub
pop
inc
pop
(bad)
sbb
xor
dec
cld
out
lahf
adc
je
mov
clc
cmp
stos
je
sbb
out
or
mov
sub
mov
out
pop
lds
inc
out
xchg
mov
cdq
aad
mov
xchg
add
or
jecxz
daa
pop
add
add
adc
pop
pusha
sub
cld
aas
std
xchg
adc
fdivr
push
(bad)
xchg
lods
mov
shl
(bad)
adc
mov
adc
je
mov
out
xchg
daa
xchg
adc
cmps
jo
(bad)
cld
mov
sub
(bad)
xor
gs
and
test
out
das
push
lods
js
xor
pushf
xchg
daa
and
cld
out
or
aam
cmps
scas
fadd
scas
xchg
dec
xor
jo
sub
fist
pusha
je
aaa
fmul
rcr
xor
enter
xchg
aaa
pusha
das
add
push
adc
cdq
mov
sub
je
xor
lods
add
mov
je
xchg
sub
dec
daa
dec
repnz
sub
and
data16
iret
je
push
push
pushf
aaa
xchg
xlat
xchg
sahf
xor
lods
out
aad
inc
dec
(bad)
xchg
mov
and
adc
xchg
(bad)
int3
out
das
jnp
mov
aad
mov
(bad)
xor
adc
pushf
dec
jl
aaa
(bad)
imul
pop
test
popa
in
jmp
push
lds
jne
lea
loope
push
ins
and
or
popf
and
or
and
jge
movs
mov
add
inc
imul
or
lods
dec
in
add
adc
add
xchg
shr
leave
sbb
aam
dec
fcom
or
lods
dec
or
movs
jle
adc
or
jecxz
and
inc
and
cdq
dec
ret
bound
sbb
jmp
test
push
sub
adc
jb
sub
mov
jle
loope
mov
push
lods
inc
xchg
sub
jb
lods
pop
cmp
adc
int3
add
xchg
test
mov
data16
add
test
jb
in
mov
cdq
add
test
jb
in
mov
aam
ins
xor
xor
lock
mov
dec
push
xor
retf
shr
push
add
dec
xchg
loopne
int
in
mov
mov
ins
xchg
cmp
loope
or
jge
ins
loop
popf
sub
movs
test
lods
loope
(bad)
xchg
xor
add
std
jmp
int
in
jle
out
mov
in
(bad)
rol
and
hlt
data16
popf
or
add
mov
add
jne
test
inc
jnp
inc
add
lds
test
ja
xor
fucomip
push
push
int
jo
inc
popf
cwde
hlt
(bad)
(bad)
mov
popf
mov
inc
popf
mov
call
lea
outs
push
out
nop
out
cwde
scas
clc
scas
add
scas
lods
mov
(bad)
mov
popf
mov
jne
inc
inc
mov
movs
hlt
sbb
leave
push
je
add
aas
adc
ja
dec
xor
adc
scas
ins
cmps
sub
mov
pop
ss
fcomip
lahf
mov
mov
neg
neg
ss
ss
fcomip
lahf
mov
mov
neg
neg
ss
ss
fcomip
lahf
mov
mov
neg
neg
ss
ss
fcomip
lahf
mov
mov
neg
neg
ss
ss
fcomip
lahf
mov
mov
ss
pop
ss
hlt
fbstp
fbstp
scas
(bad)
jbe
jbe
mov
pop
cmp
or
ror
sub
or
aam
fstp
fist
outs
scas
dec
xor
push
sahf
inc
dec
sbb
(bad)
jns
imul
sub
mov
xor
cmp
xchg
jmp
and
cld
fisttp
iret
jp
sahf
inc
dec
push
pop
and
test
cmp
fstp
mov
push
xlat
test
cmp
(bad)
into
scas
dec
nop
das
fisttp
fistp
xchg
inc
mov
xchg
inc
bnd
xor
adc
lock
nop
pop
mov
xor
push
jge
ins
xchg
arpl
loop
loopne
dec
movs
arpl
in
out
sbb
ret
xor
adc
repz
xchg
inc
scas
out
aas
out
aaa
sbb
outs
sti
pop
mov
in
sbb
add
ins
lahf
or
outs
mov
jle
imul
add
push
lahf
push
mov
mov
cmp
add
mov
or
xchg
dec
out
pop
out
dec
mov
lahf
outs
fisubr
mov
pop
mov
sbb
sub
mov
pop
xchg
popf
pop
cmp
sbb
add
add
in
push
mov
or
sbb
cmp
dec
out
cmp
mov
push
xor
jnp
sub
sbb
mov
dec
xchg
or
and
dec
adc
in
ds
dec
add
add
inc
shl
mov
(bad)
push
pop
add
mov
sar
es
jbe
push
mov
cmp
scas
aam
fs
xor
into
push
xchg
xor
dec
loopne
inc
xchg
out
xor
jnp
repz
scas
data16
shl
and
out
and
lds
pop
mov
sti
add
and
adc
pusha
add
loopne
lock
daa
mov
inc
in
ror
xor
das
test
mov
xor
outs
cmps
outs
(bad)
jb
out
lods
out
and
xor
inc
test
xor
iret
fs
loopne
lods
loopne
and
in
shl
repnz
mov
dec
mov
mov
inc
sbb
loope
jo
jecxz
or
ror
daa
push
std
cmp
inc
xchg
and
inc
rol
inc
rol
add
and
(bad)
mov
push
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
push
mov
(bad)
(bad)
mov
in
int3
ja
push
not
cmps
push
inc
xchg
jmp
mov
mov
(bad)
mov
add
cli
hlt
retf
mov
jecxz
fbstp
test
les
leave
xchg
jmp
fistp
repnz
mov
and
stos
mov
lock
movs
mov
mov
(bad)
mov
mov
(bad)
movs
fdiv
in
retf
xchg
ftst
(bad)
repnz
movs
retf
xchg
ret
push
mov
test
stc
xchg
into
(bad)
out
rcr
icebp
dec
and
lods
mov
out
ret
xor
call
adc
ror
adc
mov
jl
sahf
dec
retf
out
adc
push
push
mov
and
retf
cmp
inc
fiadd
pop
fidiv
(bad)
adc
rcl
(bad)
adc
into
les
pop
cmp
std
xor
jp
mov
or
mov
test
retf
cmp
retf
cmp
pop
fld
inc
mov
ret
cmp
dec
shr
imul
xchg
jg
call
in
inc
mov
pop
stos
in
sbb
pop
les
mov
std
fidiv
enter
or
jns
pop
xchg
das
xchg
pop
rcr
fld
(bad)
pop
mov
jg
(bad)
dec
or
or
xchg
(bad)
sub
or
test
mov
pop
(bad)
loop
shl
jmp
(bad)
int3
ds
stos
add
(bad)
sub
jmp
fist
(bad)
imul
cmp
ret
or
sbb
sti
stc
pop
fwait
pop
mov
fmul
mov
lahf
stos
fcmovnu
sbb
jnp
mov
cld
sub
retf
mov
clc
repz
dec
sti
jns
stc
dec
mov
ficomp
cli
cmp
fs
outs
in
loope
clc
or
dec
adc
fstp
sahf
outs
xlat
popf
aas
iret
pop
or
fsubr
cmps
mov
nop
in
sahf
ss
cmp
pop
mov
scas
adc
adc
cmp
shr
out
pushf
push
lods
int3
cmp
in
dec
mov
jns
pop
fdivr
jp
sbb
or
jmp
outs
test
jns
sub
or
mov
fsubr
mov
mov
sbb
add
pop
cmp
outs
sub
fcomp
shr
out
sub
inc
sbb
pop
loopne
fimul
cmc
push
cmp
clc
jns
sub
cs
push
and
cmp
push
int3
or
lahf
dec
clc
push
ret
jmp
jmp
jbe
test
js
into
cld
mov
jmp
jl
js
outs
mov
js
dec
cmp
sbb
mov
lods
jp
sbb
ins
push
push
imul
(bad)
(bad)
js
mov
pop
dec
clc
call
inc
jmp
imul
sub
clc
js
cld
cmp
imul
mov
jns
ja
clc
or
mov
fwait
mov
or
jp
pushf
int
xlat
mov
(bad)
(bad)
arpl
pop
jg
stc
or
scas
lahf
(bad)
cmp
mov
mov
es
lds
les
mov
aaa
cmp
(bad)
in
mov
in
in
aad
push
add
mov
mov
mov
pusha
and
and
fbstp
add
xor
push
adc
(bad)
mov
fst
nop
nop
jno
pop
cmp
pop
push
cmp
inc
aam
mov
and
xor
out
rol
out
xor
xor
pop
pop
cmp
rol
jo
push
push
loope
(bad)
out
ror
mov
pop
jne
push
jbe
mov
xor
xor
and
add
dec
xor
or
pusha
push
scas
pop
and
and
jae
test
aad
sub
je
xlat
pop
mov
mov
and
and
mov
mov
add
mov
cmp
fld
mov
push
push
(bad)
les
js
pop
fisttp
mov
push
lock
xchg
push
xor
arpl
repnz
jns
xchg
pop
mov
shr
mov
pop
sar
(bad)
out
push
push
mov
daa
fdivr
push
pop
retf
outs
jb
pushf
mov
scas
es
push
and
pop
loopne
mov
jbe
xor
mov
add
adc
sub
cdq
xchg
scas
js
jne
hlt
clc
add
mov
jg
imul
mov
(bad)
ds
add
and
cwde
test
call
pop
push
mov
adc
and
out
test
shr
and
scas
and
call
lods
ss
into
xor
sbb
sub
rcl
ja
xchg
stos
pop
mov
repnz
out
les
mov
jns
jge
mov
jge
xor
repnz
lods
enter
outs
jb
jle
jbe
add
fwait
pop
mov
xor
add
das
cmc
jno
fstp
fisubr
repnz
mov
dec
adc
or
jnp
outs
mov
jns
pop
mov
out
cmp
aad
test
push
and
mov
enter
sub
cmp
mov
adc
cwde
pushf
mov
rcl
dec
cmp
sbb
clc
pop
mov
jbe
push
in
es
cmp
out
retf
cli
xchg
fdivr
push
fdivr
pop
and
clc
js
stos
(bad)
lock
sbb
aas
es
xchg
pop
mov
cs
cmp
sbb
mov
jp
clc
fcomp
std
(bad)
adc
ja
ja
fwait
sub
mov
test
hlt
or
cmps
sbb
popf
pop
out
sar
and
dec
cwde
jle
fdivr
cmp
inc
shr
push
or
cwde
sbb
cmp
nop
ja
(bad)
in
dec
(bad)
retf
jmp
(bad)
js
js
pop
data16
mov
cmp
cmp
push
jne
xchg
mov
loopne
sbb
fs
inc
clc
sti
add
(bad)
cli
cmp
push
fsubr
jb
aas
inc
jmp
push
rcr
jns
cmp
call
dec
scas
cdq
xchg
cli
lds
sbb
add
adc
enter
mov
mov
mov
hlt
in
sbb
call
sbb
in
xchg
lods
stc
test
xchg
(bad)
fld
imul
pop
test
mov
mov
out
sti
cmps
sahf
xchg
dec
cmc
pop
fwait
xor
sbb
cdq
xchg
mov
cmp
sar
fnstenv
sub
mov
cdq
imul
clc
inc
jns
mov
xchg
jns
popw
mov
xchg
out
(bad)
fistp
mov
(bad)
mov
pop
imul
pop
neg
jns
jge
pop
pop
sbb
sub
push
add
cwde
pop
pop
xchg
lods
xchg
jp
push
call
dec
scas
cld
push
jmp
test
out
dec
mov
out
scas
call
sbb
(bad)
push
sub
xchg
outs
(bad)
js
in
call
cwde
mov
or
icebp
mul
mov
mov
dec
pop
inc
mov
movs
fadd
bound
mov
mov
inc
hlt
clc
and
mov
imul
stc
mov
dec
lahf
out
not
cmp
dec
lahf
mov
lea
sub
loop
pop
test
fsub
push
dec
push
test
js
cmps
xchg
jb
movs
push
(bad)
fwait
call
cdq
int3
pop
pusha
cld
gs
aam
and
pop
pop
push
pop
lahf
mov
es
mov
xchg
ja
mov
aaa
sti
jmp
pop
sbb
xchg
push
sub
les
xchg
xchg
imul
jae
ja
cmps
lds
hlt
hlt
ret
popa
sub
in
push
(bad)
xchg
addr16
test
xchg
cmp
xchg
hlt
jp
test
inc
jnp
cdq
or
loope
cwde
fisubr
mov
xlat
test
in
pop
pop
add
mov
xchg
push
movs
hlt
inc
add
jbe
les
cs
xchg
xor
push
push
data16
adc
jmp
adc
adc
stc
dec
mov
xchg
inc
cmc
mov
sbb
mov
adc
pusha
call
pop
sub
inc
sbb
test
ins
mov
push
pop
sbb
mov
mov
cmps
sti
ja
mov
les
cmps
int
movs
repnz
into
xchg
sub
dec
fidivr
xchg
mov
daa
pop
and
push
pop
nop
loope
mov
inc
fild
dec
ins
repz
cmps
adc
inc
add
push
mov
mov
out
movs
xor
iret
shl
ss
stos
inc
adc
in
outs
mov
add
mov
jge
arpl
lods
pop
ins
cmp
lods
inc
fadd
dec
push
xor
addr16
repz
pop
xor
xchg
ror
push
jle
add
cmp
adc
xor
sbb
enter
adc
int3
in
inc
jnp
out
sub
xchg
pusha
add
cmc
sahf
lods
imul
add
fmul
or
(bad)
iret
or
icebp
dec
lea
sub
xchg
stos
dec
por
out
sub
inc
div
arpl
dec
pop
popf
pusha
rol
adc
lods
xor
or
out
mov
xchg
push
sub
mov
dec
xor
adc
pusha
inc
(bad)
sbb
mov
pop
mov
pusha
jno
fild
loope
fistp
jnp
push
aad
mov
not
lea
add
pop
xor
jg
mov
dec
setge
fwait
xchg
test
pop
jmp
lea
dec
mov
(bad)
ja
loope
aam
adc
dec
or
arpl
cdq
add
xor
enter
xlat
pop
in
sahf
cmc
mov
mov
cmp
mov
mov
pop
inc
mov
outs
xor
pop
add
mov
cmp
mov
arpl
add
push
sbb
sub
pushf
mov
inc
call
mov
fwait
mov
call
popf
rol
and
inc
cmps
mov
pop
daa
mov
xor
xchg
sbb
mov
(bad)
xor
dec
push
mov
popa
es
add
ficomp
xchg
or
xchg
pop
js
cmp
xor
xor
xchg
mov
sub
jmp
pop
(bad)
enter
cmps
outs
jg
jb
push
(bad)
neg
test
int3
pop
outs
jle
cli
jg
leave
(bad)
iret
sti
popa
adc
cmc
push
dec
mov
clc
cld
(bad)
fbstp
cmps
sar
mov
in
adc
sub
pop
push
pop
lea
xchg
and
out
and
sub
daa
arpl
mov
dec
push
imul
sub
pop
and
dec
test
test
movs
mov
es
lods
jne
arpl
jmp
mov
shr
repz
cli
(bad)
cld
pop
int
push
test
sub
pusha
icebp
push
xor
pushf
jne
lds
movs
scas
aad
jne
int3
cmp
cwde
aas
xor
js
xchg
mov
push
int3
xor
ficom
cwde
(bad)
cwde
cmp
loop
lahf
adc
xor
cmp
int3
mov
adc
pushf
xor
cwde
sub
les
mov
nop
ret
xchg
mov
inc
pop
mov
mov
fidiv
cwde
xor
out
push
mov
cwde
xchg
mov
mov
cwde
pop
sbb
sub
sub
pop
mov
push
clc
xchg
fnstcw
push
rcr
arpl
and
sahf
jecxz
repz
pop
in
(bad)
mov
in
mov
adc
adc
xor
push
adc
jle
fbld
and
sti
xor
or
jne
ss
in
xor
(bad)
mov
fstp
aad
mov
cwde
xchg
call
jo
adc
push
retf
jbe
xor
or
xchg
pop
or
add
mov
dec
xchg
and
nop
jecxz
pop
mov
ins
inc
movs
lds
mov
les
mov
adc
dec
shl
rol
in
inc
popa
dec
shr
and
and
out
and
dec
jmp
inc
imul
inc
mov
je
loopne
xchg
mov
xlat
inc
xor
jae
push
mov
and
mov
mov
add
add
xchg
and
adc
ja
shl
xlat
adc
neg
xchg
xchg
xor
push
aad
cld
xchg
fsub
push
push
adc
xchg
xor
(bad)
or
in
jae
push
addr16
mov
add
out
mov
repz
jb
xchg
in
pop
stc
push
stc
dec
mov
mov
inc
loopne
in
loope
es
or
cmp
pop
shl
ja
lea
lds
shl
push
call
fldenv
push
cdq
jle
push
mov
mov
test
xor
retf
sub
xor
jg
clc
fcom
mov
stc
mov
jns
adc
shl
out
shl
adc
xchg
cwde
and
or
mov
or
jns
lods
sub
and
xchg
inc
push
iret
popf
fbld
adc
fistp
shl
sub
inc
mov
movs
jmp
cmps
adc
repz
cmp
adc
outs
icebp
mov
and
push
test
movs
dec
and
mov
dec
push
lods
lods
jle
push
mov
or
xchg
mov
sbb
test
outs
call
adc
mov
(bad)
adc
(bad)
mov
idiv
lock
cdq
repnz
push
aaa
inc
xor
out
lds
mov
daa
(bad)
dec
dec
add
lahf
mov
push
or
push
lds
loope
add
data16
sub
scas
cmp
push
out
mov
cmc
sbb
fdiv
pop
mov
add
dec
push
fsub
shr
test
test
dec
mov
xor
jnp
dec
fs
stc
jae
mov
sar
push
dec
scas
or
popf
or
dec
nop
aas
push
retf
bound
inc
adc
mov
pop
push
jmp
outs
into
xchg
aam
xchg
adc
sub
and
(bad)
ins
push
adc
pusha
out
aas
(bad)
jg
jle
ds
cmp
or
jmp
mov
js
aaa
out
add
xor
xor
cmp
cmp
stc
sub
pop
ss
test
xor
sub
cmp
cmp
aaa
pop
mul
dec
(bad)
jg
jl
cmp
cmp
clc
sub
pop
ss
mov
ja
xor
xor
repnz
add
loopne
xor
(bad)
aas
out
aas
ud0
dec
ds
cmp
mov
in
add
and
add
loopne
iret
jg
jle
cmp
sub
or
jmp
cmp
cmp
mul
test
in
test
test
xor
repz
add
loopne
xor
(bad)
aas
out
aas
push
(bad)
dec
cmp
stos
jp
cmp
cmp
stc
sub
or
jmp
js
cmp
ss
mul
cmc
add
je
jae
xor
xor
lock
dec
scas
jmp
mov
jnp
cmp
cmp
fidivr
rcl
mov
jo
xor
sub
cwde
inc
pop
jle
and
cmp
lods
movs
jmp
mov
sbb
jl
cli
scas
push
mov
mov
iret
inc
xor
fdivr
(bad)
fisttp
and
dec
push
jecxz
test
loopne
bsf
mov
ds
push
inc
fistp
add
xchg
loopne
aam
nop
int3
jl
dec
push
sbb
in
pusha
(bad)
jae
jns
xor
invd
inc
push
enter
add
outs
stos
call
scas
pop
pop
mov
test
stc
mov
call
out
pop
outs
mov
js
mov
jo
jl
jb
jmp
add
cmps
and
jnp
gs
mov
imul
scas
fs
pop
fisub
test
cld
add
add
xlat
xor
addr16
pop
movs
or
cmps
cdq
mov
shl
jge
push
out
ss
sbb
data16
mov
iret
adc
bound
mov
mov
dec
je
add
aaa
idiv
xor
adc
add
loopne
jb
xor
jno
test
push
sub
or
pop
int3
jg
stos
shl
fsubr
arpl
push
dec
dec
pushf
cwde
fnsave
mov
dec
icebp
add
clc
das
add
cmp
jge
add
cmps
div
dec
push
test
jmp
pop
or
ror
xchg
mov
sbb
mov
bound
adc
fnstcw
add
arpl
and
cmps
jo
les
(bad)
div
hlt
cwde
clc
and
push
test
outs
sub
test
call
shr
dec
mov
jo
mov
stos
pop
fsub
and
and
inc
push
fist
daa
aam
data16
push
cmp
push
fstp
jb
pop
cwde
out
jge
fcom
daa
ret
xchg
out
pop
out
sbb
shl
adc
add
scas
leave
lahf
addr16
outs
ss
out
cmp
pop
jle
jge
pop
mov
idiv
les
retf
pop
mov
pop
(bad)
and
mov
or
hlt
sbb
or
xchg
inc
xlat
xchg
ret
pop
sub
sbb
pusha
cld
ins
call
loope
js
push
pop
fwait
test
outs
mov
cld
sbb
out
bound
fild
xchg
cmps
aad
inc
js
mov
push
cmp
aam
inc
dec
dec
xor
mov
jmp
jbe
adc
mov
in
mov
movs
xor
call
loopne
(bad)
andps
jno
out
rcr
ss
addr16
dec
das
inc
movs
aad
daa
out
sub
idiv
xor
push
loope
mov
jmp
outs
xor
shl
leave
jmp
adc
icebp
lods
jo
pop
std
and
cdq
mov
rol
(bad)
es
jo
ins
jae
and
xor
push
shl
add
and
aaa
test
dec
mov
shl
mov
adc
clc
shl
outs
(bad)
loope
fidivr
pop
and
mov
in
push
addr16
sub
push
jp
arpl
and
or
sbb
mov
test
aad
call
mov
(bad)
jl
enter
mov
cmp
mov
push
sub
mov
das
lahf
pop
mov
inc
ret
sub
(bad)
add
cwde
cmp
nop
mov
fidiv
cli
out
jg
int3
call
or
jp
fimul
pop
inc
sahf
dec
or
jbe
pop
lea
jns
sti
retf
pop
jg
xchg
in
add
dec
adc
mov
or
(bad)
iret
xchg
(bad)
sti
stos
dec
je
in
(bad)
or
in
xor
xchg
sub
fstp
and
into
retf
fmulp
push
arpl
mov
mov
pop
outs
es
mov
sti
fisttp
clc
cli
jns
scas
sub
or
mov
cmp
pop
pop
mov
jg
push
test
fcmovnb
jns
ds
pop
out
js
push
fiadd
fwait
pop
bound
mov
jns
out
out
jmp
or
pop
leave
dec
data16
xor
in
sbb
(bad)
cld
stos
outs
mov
movs
mov
jnp
jnp
push
outs
jmp
add
and
or
add
pop
add
add
add
mov
add
add
jecxz
add
jecxz
add
add
add
or
(bad)
in
add
or
mov
or
cmp
or
add
add
rcr
or
mov
or
movs
fimul
xchg
fimul
sbb
add
or
push
fimul
inc
fimul
cmp
or
sub
or
sbb
or
or
or
add
or
repnz
(bad)
or
retf
add
fisttp
xchg
fisttp
xchg
or
jl
or
push
or
pop
fisttp
dec
fisttp
xor
or
and
or
or
or
cld
fmul
out
or
fcomp
or
into
fmul
mov
fmul
xchg
fmul
sbb
add
or
pusha
fmul
inc
fmul
xor
or
out
or
sbb
or
or
or
hlt
fisttp
out
or
fcmovu
or
into
fisttp
ret
add
fisttp
cwde
fisttp
mov
or
js
or
(bad)
fisttp
push
fisttp
inc
fisttp
xor
or
and
or
push
fisttp
add
or
lock
(bad)
or
retf
add
or
cwde
fimul
mov
or
jl
or
je
or
(bad)
fimul
repnz
adc
or
push
fmul
and
or
mov
or
xor
or
inc
xlat
or
push
xlat
or
push
xlat
or
xchg
xlat
or
sahf
xlat
or
stos
xlat
or
mov
or
(bad)
xlat
or
push
fisttp
sbb
or
sub
or
inc
fisttp
and
or
fcmovbe
or
call
xlat
or
or
or
sbb
or
sub
or
fmul
dec
fmul
(bad)
fmul
jbe
or
test
or
xchg
fmul
movs
fmul
push
fimul
inc
fimul
xor
or
and
or
push
fimul
cld
(bad)
in
(bad)
rcr
or
rcr
add
or
mov
or
jl
or
ins
(bad)
pop
(bad)
dec
(bad)
cmp
or
(bad)
push
(bad)
or
or
neg
or
call
fmul
enter
mov
or
add
add
mul
or
fsub
or
(bad)
in
add
add
sbb
or
push
in
add
in
add
add
add
in
add
or
lock
add
in
add
or
shl
or
mov
or
sahf
jecxz
add
or
pop
in
add
add
jecxz
add
or
add
add
ds
add
dec
add
scas
dec
add
dec
add
dec
add
mov
add
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
scas
dec
add
dec
add
dec
add
dec
add
scas
dec
add
dec
add
mov
add
mov
add
add
inc
add
inc
add
xchg
inc
add
cdq
dec
add
add
add
add
inc
mov
(bad)
sti
dec
add
add
dec
cmps
xor
add
add
add
add
add
enter
enter
inc
add
jae
popa
add
ins
add
add
add
add
outs
add
bound
ins
add
add
add
imul
outs
add
ins
add
add
add
push
add
add
add
add
push
add
jno
jne
imul
jae
add
add
push
add
arpl
imul
add
add
add
add
push
add
jb
imul
add
add
push
add
and
push
add
jno
jne
add
arpl
add
add
dec
add
add
imul
add
inc
add
jae
popa
add
ins
add
and
push
add
add
add
push
add
jo
jo
outs
add
je
add
add
imul
add
jae
add
add
add
push
add
jo
jo
outs
add
je
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
and
push
add
jo
add
add
add
push
add
jo
jo
outs
add
je
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
jae
add
inc
add
ins
add
popa
add
jns
and
push
add
outs
add
je
and
dec
add
ins
add
add
add
inc
add
ins
add
popa
add
jns
and
dec
add
ins
add
add
add
push
add
outs
add
add
je
add
inc
add
data16
jne
ins
add
add
add
popa
add
add
add
add
jne
jo
jo
outs
add
je
add
add
add
popa
add
add
add
push
add
jno
jne
imul
jae
and
inc
add
add
outs
add
jae
je
jb
popa
add
add
and
push
add
add
je
jae
add
push
add
ins
add
jae
push
add
outs
add
add
jp
add
add
jo
ins
add
jae
push
add
outs
add
add
ins
add
jb
add
add
push
add
ins
add
jae
push
add
outs
add
add
arpl
add
add
jo
ins
add
jae
push
add
add
outs
add
add
push
add
ins
add
jae
push
add
js
je
add
push
add
ins
add
jae
push
add
arpl
imul
add
outs
add
outs
add
add
jo
ins
add
jae
push
add
add
popa
add
add
popa
add
add
outs
add
add
add
add
jne
add
arpl
add
add
add
popa
add
imul
jae
je
add
popa
add
add
add
dec
add
outs
add
data16
jae
je
add
imul
add
inc
add
outs
add
add
add
jo
jo
add
add
add
ins
add
imul
jb
add
add
add
jbe
add
add
je
popa
add
add
add
xor
add
add
jae
arpl
jb
imul
add
add
data16
add
outs
add
outs
add
je
add
add
js
add
arpl
ins
add
popa
add
add
push
add
add
add
aas
add
add
add
je
add
add
ins
add
add
js
je
jb
popa
add
je
add
add
add
outs
add
popa
add
imul
add
add
add
jo
popa
add
imul
add
add
add
jo
ins
add
jae
inc
add
add
outs
add
add
jae
arpl
add
jo
ins
add
jae
inc
add
jb
add
jo
jae
add
add
ins
add
jae
add
add
jo
jae
add
add
jbe
popa
add
add
jp
add
ins
add
outs
add
add
add
dec
add
add
add
bound
outs
add
add
add
add
add
bound
jne
add
add
add
add
add
data16
add
add
add
outs
add
imul
outs
add
add
bound
outs
add
je
add
add
outs
add
jb
add
jae
imul
outs
add
add
add
add
jo
jb
outs
add
add
je
dec
add
ins
add
add
jo
outs
add
add
add
jb
outs
add
add
je
push
add
jb
jae
imul
add
add
jo
jbe
add
add
jb
add
jne
ins
add
add
add
dec
add
inc
add
jae
add
add
add
add
push
add
arpl
imul
add
add
add
add
push
add
popa
add
arpl
push
add
add
add
push
add
ins
add
add
add
push
add
add
data16
data16
ins
add
add
arpl
add
je
add
jo
add
add
ja
imul
jb
imul
add
add
ja
imul
imul
add
jae
jns
jae
ja
outs
add
add
add
add
jae
jns
jae
je
add
add
add
jo
jb
outs
add
jb
popa
add
data16
ins
add
jae
js
cmp
add
outs
add
ins
add
outs
add
add
jb
outs
add
jb
popa
add
data16
ins
add
jae
inc
add
ins
add
outs
add
add
add
jo
jb
outs
add
jb
popa
add
data16
ins
add
jae
js
cmp
add
add
jb
outs
add
jb
popa
add
data16
ins
add
jae
add
add
arpl
outs
add
data16
add
imul
add
add
arpl
ja
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
jae
add
and
ins
add
imul
jne
jae
add
and
ins
add
arpl
popa
add
add
add
jns
jae
and
ins
add
imul
add
jae
jns
jae
and
ins
add
arpl
popa
add
add
add
add
add
add
add
je
outs
add
add
add
add
add
add
je
imul
and
inc
add
ins
add
outs
add
and
push
add
jb
jae
imul
add
je
add
add
add
add
je
imul
and
push
add
jb
jae
imul
add
je
add
add
add
je
imul
and
inc
add
arpl
outs
add
popa
add
add
outs
add
add
add
jae
imul
add
je
and
inc
add
je
popa
add
add
add
add
dec
add
push
add
inc
add
inc
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
ja
popa
add
add
add
ins
add
add
jb
outs
add
add
je
jae
pop
add
add
jae
imul
add
je
and
inc
add
je
popa
add
add
dec
add
push
add
inc
add
inc
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
pop
add
push
add
dec
add
add
add
add
add
add
add
add
outs
add
add
outs
add
add
add
add
outs
add
arpl
add
add
outs
add
add
add
popa
add
add
add
inc
add
add
add
push
add
add
and
ins
outs
arpl
imul
dec
add
dec
add
dec
add
dec
add
dec
add
mov
inc
add
mov
inc
add
aad
add
aad
add
mov
inc
add
inc
add
inc
add
dec
add
and
and
add
mov
inc
add
sbb
inc
add
mov
inc
add
inc
add
mov
inc
add
push
inc
add
inc
add
and
sbb
add
and
inc
add
jae
jo
ins
add
jns
inc
add
jb
outs
add
and
and
inc
add
jb
outs
add
and
pop
add
add
add
jo
ins
add
jns
inc
add
jb
outs
add
dec
add
imul
and
inc
add
jae
jo
ins
add
jns
imul
and
add
jb
outs
add
and
ins
add
jae
jae
popa
add
add
add
add
mov
inc
add
aad
add
inc
inc
add
dec
inc
add
inc
add
dec
add
sub
adc
pusha
ins
inc
add
inc
inc
add
dec
inc
add
inc
add
sub
ror
add
inc
add
inc
inc
add
dec
inc
add
inc
add
mov
inc
add
add
jb
jb
outs
add
add
add
and
add
add
add
ins
add
popa
add
add
add
add
add
ins
add
popa
add
add
outs
add
add
ror
cmp
nop
cs
add
dec
add
cmp
inc
add
add
add
add
aas
inc
add
inc
add
inc
add
inc
inc
add
dec
inc
add
inc
add
dec
add
inc
add
ins
inc
add
inc
inc
add
dec
inc
add
inc
add
add
add
add
add
outs
add
popa
add
add
add
outs
add
imul
outs
add
add
je
add
jo
dec
add
dec
inc
add
inc
add
cmc
inc
add
inc
inc
add
dec
inc
add
inc
add
add
add
add
imul
dec
add
inc
add
imul
and
push
add
popa
add
ins
add
and
je
outs
add
add
imul
and
ins
add
add
ins
add
and
data16
ins
add
and
outs
add
ins
add
add
add
add
inc
add
ins
add
je
add
imul
dec
add
inc
add
imul
and
push
add
add
add
add
js
add
jne
je
add
add
popa
add
ins
add
add
add
add
add
add
pop
add
add
imul
dec
add
and
dec
add
push
add
add
pop
add
push
add
add
add
add
add
dec
add
add
add
add
je
pop
add
jb
add
je
push
add
dec
add
add
add
and
das
add
and
and
and
add
add
inc
add
dec
add
add
imul
and
jae
je
imul
and
add
imul
jae
and
add
add
add
add
ins
add
and
add
ins
add
add
add
add
outs
add
js
imul
ins
add
add
add
dec
add
add
add
add
pop
add
add
imul
cmp
ins
add
jae
je
pop
add
jb
add
je
push
add
ins
add
add
add
add
outs
add
js
imul
bound
popa
add
add
add
popa
add
add
add
jb
jb
outs
add
cmp
and
and
and
dec
add
jae
jae
popa
add
add
add
add
and
add
popa
add
add
add
jb
jb
outs
add
cmp
and
inc
add
arpl
outs
add
outs
add
add
add
add
popa
add
add
add
jb
jb
outs
add
and
imul
and
and
add
popa
add
add
add
jb
jb
outs
add
cmp
and
dec
add
outs
add
add
outs
add
and
add
jb
outs
add
cmp
and
pop
add
add
add
add
add
add
and
add
add
arpl
cmp
and
and
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
imul
jae
push
add
add
jb
outs
add
add
jae
imul
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
outs
add
add
add
outs
add
imul
and
imul
je
popa
add
add
jb
and
bound
add
popa
add
jae
add
add
outs
add
je
popa
add
add
add
popa
add
and
outs
add
je
and
jae
jne
arpl
arpl
add
jae
data16
ins
add
add
add
push
add
outs
add
popa
add
outs
add
add
popa
add
add
add
add
jb
jb
outs
add
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
push
add
imul
and
add
arpl
add
je
imul
jae
and
pop
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
add
add
add
add
add
outs
add
je
popa
add
add
jb
and
jne
jo
outs
add
and
add
imul
pop
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
jb
add
je
imul
and
popa
add
add
add
add
add
outs
add
ins
add
outs
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
jb
add
je
imul
and
outs
add
ja
and
arpl
outs
add
data16
add
jb
popa
add
add
outs
add
add
imul
ja
push
add
outs
add
popa
add
outs
add
add
push
add
and
data16
jb
and
add
imul
imul
and
imul
je
popa
add
add
jb
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
jb
add
je
imul
and
outs
add
ja
and
jo
popa
add
imul
add
add
add
popa
add
popa
add
add
add
add
add
jnp
inc
add
xor
inc
add
add
inc
add
sub
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
add
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
add
add
outs
add
and
arpl
ja
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
data16
inc
add
popa
add
ins
add
inc
add
outs
add
add
ins
add
outs
add
je
popa
add
outs
add
jb
add
add
ja
push
add
outs
add
popa
add
outs
add
add
outs
add
je
inc
add
ins
add
outs
add
inc
add
outs
add
add
ins
add
add
ja
push
add
outs
add
popa
add
outs
add
add
add
add
popa
add
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
add
add
add
add
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
add
add
popa
add
add
add
add
jne
add
je
add
add
jb
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
outs
add
ins
add
outs
add
add
add
add
add
add
and
add
add
add
add
outs
add
je
ja
popa
add
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
jae
je
popa
add
add
jb
add
inc
add
dec
add
add
jae
jne
ins
add
add
add
push
add
push
add
jb
add
add
outs
add
je
popa
add
add
jb
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
dec
add
sub
sub
add
inc
add
inc
add
inc
add
add
add
add
dec
add
dec
add
add
add
add
add
inc
add
dec
add
dec
add
add
inc
add
push
add
push
add
add
add
add
dec
add
add
inc
add
add
add
dec
add
add
dec
add
add
jne
je
add
add
add
add
mov
addr16
add
outs
inc
add
fs
add
jno
add
jno
add
inc
add
jae
add
inc
add
inc
add
addr16
add
fs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
jbe
ins
add
add
add
add
add
add
add
add
and
add
and
add
and
add
add
add
inc
add
add
pop
add
add
inc
add
bound
add
add
or
add
add
add
and
add
and
add
cmp
add
jns
add
add
je
jb
jne
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
popa
add
imul
add
add
add
jo
add
popa
add
add
outs
add
and
je
push
add
popa
add
imul
add
add
add
jae
and
outs
add
add
add
add
outs
add
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
popa
add
imul
add
add
add
jo
add
popa
add
add
outs
add
and
outs
add
and
jo
popa
add
imul
add
add
add
popa
add
and
bound
add
outs
add
add
jo
add
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
add
imul
outs
add
ins
add
jae
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
push
add
jp
add
add
inc
add
imul
popa
add
imul
add
add
add
add
imul
inc
add
imul
jae
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
jb
jb
add
je
inc
add
ins
add
push
add
jae
imul
outs
add
push
add
popa
add
ins
add
and
je
outs
add
add
add
imul
add
outs
add
add
imul
sub
and
add
jb
outs
add
and
and
add
outs
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
push
add
imul
add
inc
add
inc
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
push
add
imul
add
push
add
jae
imul
outs
add
push
add
popa
add
ins
add
and
je
outs
add
add
add
imul
add
outs
add
add
imul
sub
and
add
jb
outs
add
and
and
add
outs
add
sub
and
jo
outs
add
imul
outs
add
cmp
and
and
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
jb
outs
add
inc
add
ins
add
inc
add
imul
add
add
add
add
add
add
add
jb
outs
add
and
je
push
add
imul
sub
and
add
jb
outs
add
and
and
add
outs
add
cmp
and
bound
jns
je
add
and
jb
add
add
add
add
add
add
js
jo
add
je
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
jb
imul
push
add
inc
add
ins
add
add
add
add
inc
add
imul
add
add
add
add
jb
imul
and
je
outs
add
add
imul
and
and
add
add
popa
add
add
and
add
jb
outs
add
and
and
add
outs
add
cmp
and
bound
jns
je
add
and
ja
jb
imul
add
cmp
and
and
add
add
js
jo
add
je
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
outs
add
jo
jb
add
jae
inc
add
add
imul
add
popa
add
ins
add
add
add
add
add
add
outs
add
jo
jb
add
jae
and
add
je
popa
add
add
jb
jb
outs
add
and
and
add
outs
add
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
outs
add
jo
jb
add
jae
inc
add
add
imul
add
popa
add
ins
add
add
add
add
add
outs
add
jo
jb
add
jae
and
je
push
add
outs
add
jne
je
and
data16
ins
add
sub
and
add
jb
outs
add
and
and
add
outs
add
add
and
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
ins
add
jae
add
add
popa
add
imul
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
ins
add
jae
add
popa
add
imul
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
push
add
arpl
imul
add
add
outs
add
imul
outs
add
push
add
add
je
add
add
dec
add
and
push
add
jae
imul
outs
add
and
push
add
jae
outs
add
jb
arpl
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
push
add
arpl
imul
add
add
outs
add
imul
outs
add
add
add
inc
add
imul
add
add
add
add
jo
add
and
jo
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
outs
add
add
add
add
outs
add
add
add
outs
add
add
and
add
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
add
add
add
add
js
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
add
outs
add
jo
jb
add
jae
add
add
add
jns
je
add
and
outs
add
and
and
add
add
inc
add
imul
popa
add
imul
add
add
add
add
js
je
jb
popa
add
je
inc
add
ins
add
add
push
add
add
and
inc
add
outs
add
add
add
add
add
and
add
je
jb
popa
add
je
imul
and
outs
add
add
popa
add
add
outs
add
add
add
add
add
add
popa
add
add
add
add
popa
add
ins
add
add
add
add
add
js
je
jb
popa
add
je
and
jo
jb
outs
add
add
ins
add
and
popa
add
add
add
jae
and
arpl
outs
add
jb
jne
jo
je
add
and
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
js
je
jb
popa
add
je
add
add
add
add
add
je
je
add
jo
je
imul
and
je
outs
add
add
js
je
jb
popa
add
je
and
and
add
push
add
and
imul
and
add
add
add
jns
je
add
and
imul
jae
imul
add
add
add
data16
ins
add
and
and
add
add
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
and
imul
je
push
add
add
popa
add
imul
add
add
add
jne
je
jo
jne
je
inc
add
ins
add
add
add
data16
ins
add
outs
add
ins
add
add
add
and
add
add
imul
outs
add
ins
add
and
arpl
popa
add
and
outs
add
je
and
bound
add
add
jne
ins
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
add
add
jb
jae
cmp
and
dec
add
popa
add
add
and
popa
add
add
add
popa
add
add
outs
add
add
add
add
add
outs
add
add
imul
and
daa
add
add
add
jae
and
outs
add
je
and
popa
add
add
popa
add
add
add
add
add
jb
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
add
add
jb
jae
and
xor
and
cmp
and
and
add
add
add
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
jo
add
add
add
popa
add
imul
add
add
add
add
add
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
jb
add
je
add
add
popa
add
imul
add
add
add
imul
and
and
add
add
add
add
popa
add
ins
add
add
add
add
add
jo
add
and
jo
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
outs
add
add
add
outs
add
add
and
add
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
add
jb
add
add
add
jb
imul
add
add
jb
add
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
jo
add
and
jo
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
outs
add
add
add
add
add
jb
imul
and
ins
add
add
sub
and
data16
ins
add
and
imul
ins
add
jb
imul
add
add
add
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
jo
add
push
add
arpl
imul
add
add
add
add
add
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
sub
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
jo
add
and
imul
jb
add
add
add
add
add
outs
add
add
add
jp
imul
popa
add
imul
add
add
add
add
inc
add
ins
add
and
and
add
add
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
jae
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
cmp
and
push
add
arpl
arpl
add
jae
data16
ins
add
add
add
add
add
add
add
add
add
add
and
jo
popa
add
imul
add
add
add
popa
add
ins
add
add
add
add
add
jo
add
and
and
add
add
popa
add
add
add
outs
add
and
jb
add
add
outs
add
sub
and
add
jb
outs
add
and
and
add
outs
add
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
cmp
and
inc
add
add
outs
add
and
and
add
add
add
add
and
jo
popa
add
imul
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
cmp
and
inc
add
ins
add
outs
add
ins
add
and
and
add
ins
add
add
add
and
add
imul
jae
and
imul
jo
popa
add
imul
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
jb
popa
add
add
imul
add
inc
add
imul
add
add
add
add
add
add
add
and
inc
add
inc
add
add
popa
add
imul
add
and
popa
add
je
add
and
add
popa
add
imul
and
and
add
add
popa
add
imul
add
add
add
outs
add
je
and
ins
add
imul
add
add
add
imul
and
bound
add
add
outs
add
jb
jne
jo
je
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
outs
add
add
imul
cmp
and
push
add
ins
add
jbe
imul
and
daa
add
add
add
jb
outs
add
and
je
push
add
popa
add
imul
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
outs
add
add
imul
add
add
pop
add
add
add
add
add
pop
add
push
add
dec
add
add
push
add
add
add
add
push
add
data16
add
jb
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
add
push
add
outs
add
jb
popa
add
inc
add
ins
add
jae
inc
add
jb
add
inc
add
ins
add
outs
add
inc
add
ins
add
jae
inc
add
jb
add
add
sub
add
inc
add
add
push
add
pop
add
push
add
inc
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
add
add
inc
add
dec
add
push
add
inc
add
pop
add
add
inc
add
add
inc
add
add
inc
add
dec
add
push
add
inc
add
add
inc
add
dec
add
dec
add
pop
add
dec
add
add
add
add
inc
add
dec
add
dec
add
pop
add
dec
add
push
add
push
add
push
add
add
dec
add
dec
add
dec
add
dec
add
push
add
inc
add
add
add
dec
add
dec
add
inc
add
add
dec
add
add
inc
add
add
dec
add
add
dec
add
add
add
inc
add
dec
add
dec
add
pop
add
inc
add
dec
add
push
add
dec
add
add
add
dec
add
dec
add
dec
add
inc
add
inc
add
dec
add
dec
add
add
add
add
dec
add
dec
add
dec
add
push
add
dec
add
dec
add
push
add
push
add
add
add
push
add
inc
add
inc
add
pop
add
dec
add
add
pop
add
dec
add
dec
add
dec
add
cmp
add
add
push
add
inc
add
inc
add
pop
add
dec
add
add
pop
add
dec
add
dec
add
dec
add
add
add
push
add
inc
add
inc
add
pop
add
dec
add
add
pop
add
add
add
add
add
pop
add
push
add
dec
add
cmp
add
add
push
add
inc
add
dec
add
add
dec
add
push
add
inc
add
add
inc
add
add
add
push
add
dec
add
push
add
dec
add
inc
add
dec
add
push
add
add
dec
add
inc
add
push
add
add
inc
add
dec
add
dec
add
pop
add
push
add
inc
add
push
add
add
add
dec
add
push
add
add
pop
add
add
dec
add
dec
add
inc
add
add
dec
add
push
add
push
add
inc
add
add
inc
add
dec
add
add
add
inc
add
dec
add
dec
add
pop
add
inc
add
dec
add
dec
add
add
add
add
inc
add
dec
add
dec
add
pop
add
dec
add
add
add
push
add
push
add
add
dec
add
add
add
push
add
push
add
add
add
add
inc
add
add
push
add
inc
add
push
add
add
push
add
dec
add
push
add
dec
add
inc
add
add
push
add
inc
add
push
add
add
inc
add
dec
add
dec
add
pop
add
add
dec
add
add
inc
add
push
add
inc
add
add
pop
add
add
dec
add
dec
add
dec
add
push
add
add
push
add
push
add
add
add
dec
add
dec
add
dec
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
dec
add
pop
add
push
add
push
add
add
dec
add
add
add
push
add
dec
add
dec
add
push
add
push
add
add
dec
add
push
add
add
dec
add
push
add
dec
add
inc
add
add
inc
add
add
push
add
add
inc
add
dec
add
inc
add
add
add
inc
add
push
add
push
add
push
add
add
inc
add
push
add
push
add
add
add
dec
add
push
add
inc
add
dec
add
add
pop
add
push
add
dec
add
add
dec
add
inc
add
inc
add
dec
add
dec
add
add
add
push
add
push
add
add
dec
add
add
inc
add
push
add
push
add
dec
add
push
add
add
inc
add
inc
add
add
add
add
inc
add
inc
add
push
add
add
add
push
add
push
add
add
add
inc
add
push
add
push
add
push
add
push
add
add
inc
add
push
add
dec
add
dec
add
add
add
push
add
dec
add
add
push
add
add
add
dec
add
push
add
dec
add
add
add
add
push
add
inc
add
inc
add
push
add
add
add
dec
add
add
dec
add
push
add
add
add
add
dec
add
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
inc
add
dec
add
dec
add
xor
xor
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
inc
add
dec
add
dec
add
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
xor
xor
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
add
add
push
add
push
add
add
xor
xor
add
add
push
add
push
add
add
add
push
add
dec
add
add
add
add
and
add
add
add
add
and
add
add
and
or
add
add
and
or
and
add
inc
add
outs
add
ins
add
outs
add
add
outs
add
cmp
cmp
push
add
jb
jae
add
outs
add
ins
add
outs
add
add
outs
add
and
inc
add
data16
jne
ins
add
add
outs
add
ins
add
outs
add
add
add
add
add
add
add
inc
add
ins
add
popa
add
add
add
add
add
add
inc
add
ins
add
popa
add
add
add
add
add
jne
jae
je
outs
add
imul
add
add
outs
add
ins
add
outs
add
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
add
add
cmp
add
inc
add
outs
add
data16
add
jb
popa
add
add
outs
add
imul
cmp
cmp
dec
add
je
add
outs
add
ins
add
add
add
ins
add
add
add
add
add
add
outs
add
and
and
add
add
inc
add
outs
add
imul
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
daa
add
jnp
daa
add
add
outs
add
outs
add
add
add
jne
je
and
outs
add
and
add
add
outs
add
and
daa
add
daa
add
add
outs
add
outs
add
add
add
add
outs
add
add
js
jo
popa
add
jae
imul
and
data16
jb
and
daa
add
add
add
add
add
add
inc
add
outs
add
imul
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
inc
add
arpl
add
add
add
add
popa
add
imul
ins
add
add
jne
ins
add
add
and
outs
add
and
jbe
popa
add
imul
ins
add
and
add
jo
popa
add
jae
imul
jae
sub
and
and
add
add
add
add
add
outs
add
je
popa
add
outs
add
and
popa
add
add
jns
arpl
ins
add
arpl
and
jbe
popa
add
imul
ins
add
add
add
add
inc
add
outs
add
data16
add
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
push
add
jo
ins
add
arpl
add
add
add
add
add
imul
and
daa
add
add
add
add
jnp
jge
add
and
jnp
inc
add
outs
add
data16
add
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
dec
add
imul
outs
add
ins
add
add
je
jb
imul
and
daa
add
add
add
add
add
inc
add
outs
add
imul
jb
popa
add
add
outs
add
imul
cmp
cmp
push
add
je
dec
add
cmp
and
push
add
je
je
imul
and
and
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
push
add
add
inc
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
add
add
inc
add
outs
add
inc
add
ins
add
cmp
and
inc
add
add
imul
and
imul
and
data16
ins
add
and
and
add
dec
add
imul
ins
add
cmp
and
and
add
jae
and
popa
add
and
imul
popa
add
add
add
imul
add
inc
add
outs
add
inc
add
ins
add
cmp
and
dec
add
add
add
add
outs
add
and
data16
ins
add
and
and
add
add
add
add
add
add
outs
add
add
add
add
jb
imul
bound
ins
add
add
add
dec
add
dec
add
add
add
add
dec
add
imul
ins
add
cmp
and
push
add
arpl
je
imul
and
and
add
popa
add
and
imul
add
jae
and
and
add
add
dec
add
imul
ins
add
cmp
cmp
inc
add
je
dec
add
jns
jae
add
inc
add
outs
add
inc
add
ins
add
cmp
and
inc
add
je
and
and
add
add
add
add
add
inc
add
outs
add
inc
add
ins
add
cmp
and
and
add
add
add
jae
and
outs
add
je
and
add
imul
inc
add
dec
add
push
add
push
add
push
add
dec
add
push
add
add
dec
add
inc
add
push
add
push
add
dec
add
add
push
add
inc
add
push
add
inc
add
dec
add
dec
add
add
add
dec
add
imul
ins
add
cmp
cmp
inc
add
je
push
add
ins
add
add
add
add
dec
add
imul
ins
add
cmp
and
push
add
je
and
and
add
add
add
add
add
dec
add
imul
ins
add
cmp
and
inc
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
jb
jb
outs
add
and
and
add
dec
add
imul
ins
add
cmp
cmp
push
add
je
push
add
ins
add
add
add
add
add
add
add
outs
add
add
jae
and
xor
xor
xor
xor
and
push
add
xor
and
jae
jns
jae
je
add
and
imul
outs
add
je
and
arpl
outs
add
jo
popa
add
add
ins
add
and
ja
imul
and
jbe
arpl
jb
add
add
je
pop
add
cmp
add
add
js
add
add
add
inc
add
add
add
add
add
add
jne
jae
je
and
bound
add
add
outs
add
je
popa
add
add
add
add
push
add
jae
je
add
dec
add
data16
cmp
cmp
dec
add
push
add
jae
je
add
dec
add
push
add
je
push
add
add
add
add
je
add
add
imul
add
outs
add
ins
add
add
add
add
add
add
add
dec
add
inc
add
outs
jbe
ins
imul
gs
push
and
gs
je
jb
ins
popa
jo
jae
je
push
and
and
add
dec
add
inc
add
imul
pop
add
add
add
push
add
outs
add
add
xor
xor
add
push
add
outs
add
add
add
add
imul
xor
xor
cmp
pop
add
add
add
add
push
add
outs
add
add
add
add
add
xor
xor
add
add
push
add
outs
add
add
add
add
add
add
imul
imul
popa
add
add
add
push
add
outs
add
imul
popa
add
xor
xor
add
push
add
outs
add
imul
popa
add
add
add
imul
xor
xor
xor
pop
add
add
add
add
push
add
outs
add
add
add
add
add
xor
xor
add
add
push
add
outs
add
add
add
add
add
add
imul
push
add
add
add
add
push
add
outs
add
push
add
xor
xor
add
add
push
add
outs
add
push
add
add
imul
xor
xor
xor
add
and
add
add
jae
push
add
ja
add
push
add
outs
add
add
jae
and
data16
imul
add
and
add
jb
outs
add
and
and
add
push
add
jae
je
add
dec
add
data16
cmp
cmp
inc
add
jns
jae
je
add
dec
add
data16
add
add
imul
gs
xor
add
add
dec
jae
outs
ja
xor
jb
arpl
jae
add
add
add
jb
jae
imul
inc
add
and
data16
imul
add
add
outs
add
imul
and
inc
add
jns
jae
je
add
dec
add
data16
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
jo
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
push
add
ins
add
popa
add
add
add
ins
add
add
outs
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
push
add
add
popa
add
imul
and
je
outs
add
add
outs
add
add
add
add
ins
add
add
outs
add
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
ins
add
popa
add
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
jo
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
dec
add
popa
add
add
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
add
add
add
jb
outs
add
and
and
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
popa
add
add
outs
add
popa
add
add
add
inc
add
add
je
add
jo
add
popa
add
add
outs
add
add
add
add
add
jo
add
popa
add
add
outs
add
add
outs
add
je
dec
add
add
ins
add
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
inc
add
aas
inc
add
sbb
dec
add
pop
inc
add
inc
add
sbb
push
add
ins
add
jae
push
add
push
add
add
add
push
add
ja
popa
add
add
add
add
add
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
and
jo
popa
add
imul
add
add
add
imul
and
ja
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
je
and
ins
add
arpl
popa
add
add
outs
add
add
add
add
and
je
push
add
add
popa
add
and
arpl
popa
add
jae
add
add
jb
outs
add
ins
add
ins
add
inc
add
add
popa
add
add
jb
ins
add
add
add
popa
add
add
and
daa
add
add
and
ja
popa
add
and
add
je
add
je
add
add
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
jb
add
ins
add
outs
add
add
add
add
add
add
jne
imul
add
add
outs
add
ins
add
outs
add
add
add
add
add
jb
add
ins
add
outs
add
add
add
add
add
jae
and
ins
add
jae
jae
imul
and
popa
add
add
popa
add
add
add
add
inc
add
and
imul
popa
add
add
add
add
jo
outs
add
popa
add
jns
and
add
jb
add
je
outs
add
jns
and
ja
popa
add
and
add
je
add
je
add
add
add
popa
add
add
add
add
add
add
add
add
js
imul
jae
cmp
and
and
add
add
jae
inc
add
ins
add
cmp
and
and
add
add
jae
push
add
popa
add
add
ins
add
cmp
and
and
add
outs
add
add
outs
add
popa
add
add
add
outs
add
data16
add
jb
popa
add
add
outs
add
add
imul
and
ja
popa
add
and
jae
jo
add
imul
add
add
outs
add
add
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
and
daa
add
add
add
add
add
ins
add
dec
add
jae
je
popa
add
add
je
imul
inc
add
outs
add
imul
jb
popa
add
add
outs
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
outs
add
add
imul
jae
add
add
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
add
imul
jae
imul
cmp
and
and
add
add
and
dec
add
or
inc
pop
add
and
arpl
outs
add
je
popa
add
outs
add
cmp
or
add
inc
add
outs
add
jb
popa
add
add
add
add
add
je
and
outs
add
and
data16
ins
add
jae
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
push
add
arpl
imul
add
add
add
add
add
add
inc
add
ins
add
popa
add
add
add
add
jbe
add
jb
imul
jae
push
add
je
push
add
data16
add
inc
add
add
add
add
add
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
jbe
add
jb
imul
jae
and
ja
imul
and
inc
add
outs
add
imul
jb
popa
add
add
outs
add
add
add
add
popa
add
add
and
outs
add
add
jb
imul
jae
cmp
and
daa
add
add
add
add
popa
add
imul
add
add
outs
add
popa
add
add
add
jne
je
jo
jne
je
and
data16
ins
add
and
daa
add
add
add
add
add
add
add
js
add
add
push
add
arpl
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
jb
imul
and
push
add
outs
add
add
je
dec
add
ins
add
and
add
jb
cmp
add
add
jb
outs
add
add
je
dec
add
ins
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
jb
imul
and
push
add
outs
add
add
je
push
add
jb
jae
imul
and
add
jb
cmp
add
add
add
jb
outs
add
add
je
push
add
jb
jae
imul
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
outs
add
jns
and
je
push
add
popa
add
add
add
imul
and
je
outs
add
add
add
and
add
jae
je
imul
je
imul
and
data16
ins
add
add
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
add
add
add
add
add
and
add
jae
je
imul
je
imul
and
data16
ins
add
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
je
push
add
popa
add
add
add
outs
add
add
add
je
imul
je
imul
and
data16
ins
add
jae
and
popa
add
add
add
add
and
jae
popa
add
add
add
add
add
add
push
add
arpl
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
jae
add
add
imul
cmp
and
and
add
add
jne
je
jo
jne
je
and
inc
add
ins
add
cmp
and
and
add
popa
add
imul
add
add
outs
add
bound
ins
add
and
je
outs
add
add
imul
and
data16
ins
add
and
and
add
add
popa
add
add
add
add
popa
add
imul
add
add
popa
add
imul
add
add
add
add
add
popa
add
imul
add
add
imul
and
and
add
and
data16
ins
add
outs
add
ins
add
and
arpl
outs
add
data16
add
je
jae
and
ja
imul
and
popa
add
outs
add
add
jb
and
data16
ins
add
and
imul
je
push
add
popa
add
imul
add
add
and
popa
add
add
add
popa
add
and
outs
add
je
and
jo
popa
add
imul
add
add
popa
add
imul
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
push
add
arpl
imul
add
add
add
add
add
add
add
jo
add
imul
and
outs
add
je
jo
jne
je
and
jo
popa
add
imul
add
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
outs
add
popa
add
imul
add
add
popa
add
ins
add
add
add
add
add
jb
add
je
add
add
outs
add
jns
and
outs
add
and
jo
popa
add
imul
add
add
add
add
js
je
jb
popa
add
je
imul
and
jo
popa
add
imul
add
add
add
outs
add
je
add
je
jae
add
add
add
outs
add
popa
add
add
add
js
je
jb
popa
add
je
imul
and
add
jb
add
je
outs
add
jns
and
daa
add
add
add
popa
add
and
jo
jb
outs
add
imul
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
imul
add
outs
add
push
add
je
push
add
je
ins
add
add
add
and
add
add
add
add
imul
add
outs
add
push
add
je
inc
add
jb
add
je
imul
add
add
push
add
jae
imul
add
outs
add
push
add
je
dec
add
js
add
add
push
add
jae
imul
add
outs
add
dec
add
arpl
jb
add
add
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
add
add
outs
add
popa
add
add
add
add
ins
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
add
ins
add
inc
add
jb
add
je
outs
add
jns
cmp
and
dec
add
je
and
add
outs
add
add
and
jae
jo
popa
add
add
add
outs
add
add
outs
add
and
add
imul
and
je
outs
add
add
js
je
jb
popa
add
je
and
je
push
add
add
jne
imul
add
add
imul
jae
add
add
and
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
add
ins
add
inc
add
jb
add
je
outs
add
jns
cmp
and
dec
add
je
and
add
outs
add
add
and
jae
jo
popa
add
add
add
outs
add
add
add
and
add
je
jb
popa
add
je
imul
and
add
imul
and
daa
add
add
add
add
add
js
je
jb
popa
add
je
and
je
push
add
add
jne
imul
add
add
imul
jae
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
bound
outs
add
je
inc
add
add
imul
add
add
add
imul
jb
jns
and
pop
add
dec
add
add
add
add
and
add
add
outs
add
je
ja
popa
add
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
add
add
bound
outs
add
je
add
add
inc
add
dec
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
bound
outs
add
je
inc
add
add
imul
add
add
add
outs
add
je
and
data16
ins
add
pop
add
add
add
add
ins
add
add
outs
add
je
add
add
add
add
data16
jb
arpl
add
jae
imul
outs
add
add
add
add
add
ins
add
popa
add
jae
dec
add
jae
je
popa
add
add
ins
add
jbe
popa
add
add
add
add
add
outs
add
je
ja
popa
add
add
add
ins
add
arpl
imul
pop
add
imul
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
outs
add
je
popa
add
add
jb
add
push
add
data16
add
jb
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
outs
add
je
and
and
add
jae
and
add
outs
add
add
jae
add
add
add
add
outs
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
add
add
add
jne
outs
add
je
imul
and
pop
add
add
add
dec
jae
outs
jb
dec
outs
push
jae
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
add
add
outs
add
and
data16
outs
add
je
imul
and
pop
add
add
add
add
dec
add
jae
push
add
jb
je
dec
add
push
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
je
je
add
jo
je
and
je
outs
add
add
add
add
add
add
jb
popa
add
jns
and
pop
add
add
add
dec
add
dec
add
push
add
push
add
dec
add
add
add
add
add
add
and
data16
jb
jae
je
and
jo
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
outs
add
ins
add
add
add
add
imul
outs
add
jb
add
je
and
outs
add
ins
add
add
and
outs
add
and
jo
popa
add
popa
add
add
add
jae
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
outs
add
je
add
jae
add
add
outs
add
jae
pop
add
js
imul
add
add
arpl
outs
add
data16
add
add
ins
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
cmp
and
push
add
je
inc
add
jb
jb
add
je
inc
add
jb
add
je
outs
add
jns
sub
sub
and
data16
imul
add
add
imul
and
add
jb
outs
add
cmp
and
and
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
cmp
and
jo
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
cmp
and
jo
popa
add
add
add
add
add
add
add
and
add
dec
add
dec
add
inc
add
push
add
add
add
add
ja
popa
add
add
add
outs
add
je
add
add
popa
add
imul
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
jae
add
and
arpl
push
add
and
je
outs
add
add
popa
add
arpl
add
add
add
and
imul
je
popa
add
add
je
imul
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
jae
add
and
arpl
push
add
and
je
outs
add
add
outs
add
je
imul
add
add
add
and
imul
je
popa
add
add
je
imul
add
add
dec
add
popa
add
add
add
outs
add
je
popa
add
add
jb
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
inc
add
and
imul
outs
add
and
ins
add
outs
add
add
and
jae
jne
jo
jo
outs
add
je
add
add
outs
add
add
add
jae
and
jbe
add
jae
imul
and
outs
add
and
push
add
ja
popa
add
add
add
ins
add
jns
add
add
add
add
add
jae
add
add
ins
add
jns
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
outs
add
outs
add
add
add
and
pop
add
add
add
dec
add
push
add
inc
add
inc
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
ja
popa
add
add
add
ins
add
jns
add
add
ins
imul
je
outs
and
add
add
and
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
jae
inc
add
cmp
add
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
add
add
add
add
outs
add
jae
inc
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
outs
add
je
imul
imul
push
add
arpl
imul
add
add
popa
add
popa
add
add
cmp
and
push
add
popa
add
arpl
push
add
add
and
pop
add
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
ins
add
add
add
add
add
outs
add
add
jb
popa
add
add
add
add
and
outs
add
add
popa
add
add
outs
add
add
outs
add
add
add
outs
add
imul
outs
add
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
jo
outs
add
je
cmp
and
inc
add
imul
add
add
add
add
outs
add
add
jb
popa
add
add
add
add
imul
and
je
push
add
add
and
add
jbe
imul
outs
add
add
je
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
jo
outs
add
je
cmp
and
imul
add
jb
popa
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
outs
add
add
add
add
and
ins
add
popa
add
add
outs
add
imul
outs
add
add
je
add
pop
add
dec
add
pop
add
add
add
pop
add
dec
add
pop
add
and
cmp
add
outs
add
je
imul
sub
add
add
add
add
add
add
add
add
add
outs
add
add
add
jo
add
popa
add
add
outs
add
add
add
pop
add
push
add
pop
add
add
and
jne
outs
add
popa
add
imul
add
jb
add
add
add
add
add
add
outs
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
dec
add
add
add
data16
add
add
and
ins
add
popa
add
add
jb
add
ins
add
outs
add
add
add
jae
and
add
jo
je
jns
and
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
cmp
and
daa
add
add
add
jae
and
popa
add
and
jne
outs
add
jne
jo
jo
outs
add
je
add
add
add
imul
jb
jns
and
push
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
cmp
and
add
jb
outs
add
and
je
jb
jns
imul
and
je
outs
add
add
add
add
add
add
imul
jb
jns
and
jbe
popa
add
add
and
and
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
cmp
and
jb
add
imul
jb
jns
and
jbe
popa
add
add
and
daa
add
add
add
add
add
add
jae
and
outs
add
je
and
add
imul
add
add
dec
add
push
add
add
add
dec
add
push
add
add
add
dec
add
add
add
add
outs
add
outs
add
ja
outs
add
add
jb
jb
outs
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jb
outs
add
cmp
and
inc
add
jb
outs
add
and
dec
add
jae
jae
popa
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jb
outs
add
outs
add
cmp
and
and
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
add
add
add
add
outs
add
add
je
imul
and
outs
add
je
and
popa
add
add
outs
add
ins
add
popa
add
and
jbe
popa
add
add
add
add
jb
outs
add
dec
add
add
outs
add
add
outs
add
add
outs
add
add
add
and
jbe
popa
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jae
add
je
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jae
add
je
cmp
and
inc
add
jae
add
je
and
data16
imul
add
add
add
add
add
and
and
push
add
jae
je
outs
add
add
add
add
je
jne
jb
add
and
add
and
add
add
dec
add
jae
je
popa
add
add
add
add
bound
push
add
ins
add
arpl
je
add
add
add
add
add
je
jne
jb
add
je
push
add
add
outs
add
add
add
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
je
popa
add
ins
add
add
add
je
push
add
imul
je
and
jo
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
jae
je
jb
imul
add
add
sub
sub
sub
and
inc
add
add
jne
je
imul
and
and
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
je
inc
add
popa
add
add
add
outs
add
outs
add
add
add
add
add
add
and
jae
add
outs
add
add
add
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
jae
je
jb
imul
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
je
push
add
add
add
add
je
je
imul
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
je
inc
add
add
je
outs
add
add
add
je
je
imul
jae
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
ins
add
jbe
add
ins
add
add
add
add
add
je
je
imul
jae
add
and
and
push
add
jb
jae
imul
and
inc
add
popa
add
add
add
and
add
and
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jb
jae
imul
inc
add
popa
add
add
add
outs
add
outs
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jb
jae
imul
push
add
je
je
imul
jae
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jo
popa
add
add
popa
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
outs
add
je
imul
push
add
je
push
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jbe
add
jae
imul
ins
add
popa
add
add
add
add
popa
add
add
jae
cmp
push
add
jbe
imul
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
push
add
and
popa
add
add
ins
add
outs
add
add
add
add
popa
add
je
imul
and
outs
add
and
and
add
outs
add
and
and
add
add
add
and
jae
add
outs
add
add
add
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
imul
outs
add
popa
add
add
add
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
jne
outs
add
jo
add
popa
add
add
outs
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
imul
and
jb
add
add
outs
add
add
outs
add
add
add
add
add
jo
add
popa
add
add
outs
add
add
popa
add
ins
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
jne
outs
add
jo
add
popa
add
add
outs
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
add
popa
add
ins
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
jne
outs
add
jo
add
popa
add
add
outs
add
add
add
popa
add
ins
add
add
add
add
add
jb
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
add
add
add
outs
add
and
outs
add
add
popa
add
add
outs
add
add
add
add
push
add
add
outs
add
jb
imul
ins
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
dec
add
imul
popa
add
add
add
add
jns
jae
je
add
and
jae
push
add
add
outs
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
push
add
jo
jo
jb
add
jae
imul
and
popa
add
je
outs
add
popa
add
add
and
jb
add
outs
add
je
sub
and
jo
ins
add
popa
add
add
add
add
outs
add
je
and
je
push
add
popa
add
push
add
and
ins
add
outs
add
popa
add
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
inc
add
outs
add
je
imul
and
je
push
add
outs
add
je
popa
add
add
jb
and
add
add
add
add
add
add
jne
imul
add
add
add
outs
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
jae
add
add
outs
add
and
jb
add
jne
ins
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
and
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
jne
outs
add
outs
add
add
add
add
add
dec
add
popa
add
add
add
jne
outs
add
add
outs
add
je
popa
add
add
jb
and
inc
add
je
add
and
push
add
bound
outs
add
je
add
and
and
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
jae
add
add
outs
add
and
jb
add
jne
ins
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
and
add
add
add
add
add
add
outs
add
add
imul
add
add
jo
add
popa
add
add
outs
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
jb
popa
add
jo
add
add
add
and
and
inc
add
ins
add
ins
add
je
add
add
outs
add
add
popa
add
imul
add
add
add
add
outs
add
add
outs
add
and
inc
add
arpl
imul
add
add
jae
cmp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
push
add
outs
add
cmp
and
arpl
popa
add
add
outs
add
and
push
add
add
je
push
add
jno
jne
add
arpl
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
push
add
outs
add
cmp
and
inc
add
add
je
imul
and
push
add
add
imul
bound
push
add
je
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
push
add
outs
add
cmp
and
inc
add
add
add
popa
add
add
add
add
add
push
add
dec
add
and
bound
outs
add
add
add
add
and
jo
popa
add
add
add
outs
add
add
imul
and
jo
popa
add
popa
add
add
add
jae
and
ja
add
add
add
ins
add
je
jns
add
add
je
imul
add
add
imul
add
add
jo
popa
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
jae
and
outs
add
je
and
popa
add
add
jne
jo
jo
jo
outs
add
je
add
add
add
popa
add
add
and
add
data16
jne
ins
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
add
je
add
add
add
add
add
jb
imul
jb
jns
and
dec
add
outs
add
jne
popa
add
add
add
popa
add
add
and
data16
jne
outs
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
add
je
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
add
je
add
add
add
add
add
js
popa
add
je
and
ins
add
je
arpl
push
add
outs
add
and
push
add
jo
jo
outs
add
je
add
add
add
popa
add
add
sub
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
jne
add
je
add
add
jb
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
jne
add
je
add
add
arpl
popa
add
add
add
add
add
jae
and
and
add
add
outs
add
ins
add
jae
push
add
outs
add
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
jne
add
je
add
add
arpl
popa
add
add
add
add
add
jae
and
and
add
add
popa
add
popa
add
add
add
add
add
add
popa
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
jb
add
add
jb
add
add
dec
add
outs
add
jne
popa
add
add
add
add
add
jb
add
add
jb
add
add
dec
add
outs
add
jne
popa
add
add
add
add
inc
add
outs
add
add
ins
add
add
popa
add
add
add
add
imul
add
jo
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
imul
add
dec
add
popa
add
jne
outs
add
je
imul
jae
cmp
and
push
add
arpl
arpl
add
jae
data16
ins
add
add
add
add
imul
add
add
add
and
dec
add
popa
add
add
jne
outs
add
je
imul
jae
add
add
add
je
jb
popa
add
je
imul
pop
add
add
add
add
xor
add
popa
add
je
imul
add
add
ins
add
imul
add
popa
add
arpl
add
add
popa
add
je
dec
add
dec
add
ins
add
add
jbe
add
je
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
push
add
inc
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
popa
add
add
jae
imul
ins
add
popa
add
add
add
add
popa
add
add
jae
add
add
push
add
outs
add
je
imul
push
add
je
push
add
js
jo
popa
add
add
popa
add
add
add
add
add
add
bound
outs
add
je
inc
add
add
add
push
add
jb
jae
imul
push
add
je
je
imul
jae
add
push
add
jb
jae
imul
inc
add
popa
add
add
add
outs
add
outs
add
add
add
add
outs
add
add
ins
add
add
add
add
add
je
je
imul
jae
add
inc
add
je
inc
add
add
je
outs
add
add
add
je
je
imul
jae
add
add
inc
add
je
push
add
add
add
add
je
je
imul
add
add
inc
add
je
inc
add
popa
add
add
add
outs
add
outs
add
add
add
add
add
jae
je
popa
add
add
add
jb
outs
add
add
je
jae
add
add
inc
add
jae
add
je
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
imul
push
add
add
dec
add
inc
add
add
outs
add
add
dec
add
add
jne
add
arpl
add
add
add
imul
push
add
add
add
push
add
outs
add
push
add
add
add
inc
add
jae
popa
add
ins
add
push
add
add
push
add
add
je
push
add
bound
outs
add
je
add
push
add
bound
outs
add
je
inc
add
add
imul
add
imul
inc
add
imul
jae
add
add
push
add
jo
popa
add
imul
add
arpl
imul
add
add
add
add
push
add
jo
popa
add
imul
add
ins
add
jae
push
add
add
js
add
add
push
add
jo
popa
add
imul
add
ins
add
jae
add
dec
add
add
add
popa
add
outs
add
outs
add
add
inc
add
jb
outs
add
add
inc
add
add
push
add
add
add
add
add
add
imul
jb
jns
add
add
inc
add
ins
add
je
add
add
add
outs
add
add
push
add
jbe
add
add
add
outs
add
add
dec
add
jae
push
add
je
je
imul
add
add
inc
add
je
push
add
je
je
imul
inc
add
add
add
add
je
je
imul
add
add
inc
add
dec
add
add
popa
add
add
outs
add
add
outs
add
ins
add
add
add
push
add
ins
add
popa
add
add
add
add
add
add
add
add
ins
add
outs
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
jne
outs
add
arpl
jb
imul
cmp
and
push
add
jb
imul
and
arpl
outs
add
jo
ins
add
je
add
and
jae
je
popa
add
je
imul
and
arpl
ins
add
popa
add
sub
add
add
add
outs
add
je
jae
je
jb
popa
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
jne
outs
add
arpl
jb
imul
cmp
and
push
add
add
popa
add
imul
and
je
outs
add
add
outs
add
je
jae
je
jb
popa
add
and
je
push
add
add
and
jae
arpl
jb
imul
add
inc
add
ins
add
push
add
jb
jae
imul
add
inc
push
push
dec
push
cmp
push
outs
popa
bound
je
and
fs
je
and
jae
jne
arpl
and
jae
jb
jno
imul
and
je
jae
popa
outs
and
ins
jns
and
je
jae
popa
jb
and
popa
imul
inc
js
outs
and
and
jb
gs
outs
outs
imul
popa
and
outs
jb
and
and
je
jo
jb
or
add
add
add
outs
add
inc
add
ins
add
dec
add
data16
pop
add
add
and
add
pop
add
add
add
add
jb
imul
push
jb
outs
jae
popa
je
outs
outs
add
add
and
add
add
add
add
add
add
add
add
outs
jbe
ins
imul
gs
imul
inc
dec
outs
je
jne
jo
jb
gs
js
gs
imul
gs
outs
jb
inc
js
gs
imul
inc
inc
js
gs
imul
dec
add
add
add
inc
add
add
add
add
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
ret
dec
add
inc
add
sbb
inc
add
inc
add
sbb
add
dec
add
inc
add
sbb
loopne
dec
add
sbb
sbb
push
sbb
push
les
test
inc
add
sbb
loopne
dec
add
sbb
sbb
push
sbb
inc
dec
ins
gs
js
gs
imul
inc
dec
add
add
(bad)
inc
add
add
add
inc
dec
add
sbb
fs
add
sbb
inc
add
sbb
push
sbb
clc
les
inc
sbb
inc
add
inc
add
dec
bound
arpl
ror
mov
dec
add
ror
movs
ror
mov
dec
add
dec
add
dec
add
dec
add
add
(bad)
inc
add
jb
push
js
gs
imul
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
dec
add
and
loopne
dec
add
sbb
(bad)
and
push
sbb
inc
dec
popa
jo
je
imul
jb
outs
add
enter
push
das
inc
add
xor
inc
push
je
imul
add
inc
dec
add
add
(bad)
inc
add
add
add
add
dec
add
aaa
inc
add
sbb
inc
add
inc
add
xchg
inc
add
cmp
xchg
xor
mov
xor
inc
add
add
xor
add
xor
jns
inc
add
ss
add
xor
add
aaa
inc
add
(bad)
dec
add
ss
add
sbb
inc
add
sbb
and
add
add
add
add
add
add
add
add
add
add
add
add
arpl
je
outs
outs
and
outs
ja
and
and
je
jne
je
jb
add
pop
jb
ins
pop
jbe
je
outs
ins
jae
jbe
aaa
ins
imul
jo
popa
je
ins
data16
arpl
arpl
ins
gs
je
arpl
add
in
(bad)
dec
add
cmp
inc
add
dec
add
and
aaa
cmp
inc
add
cmp
inc
add
(bad)
dec
add
inc
inc
add
add
outs
inc
add
cmp
pop
cmp
inc
add
xchg
inc
add
cmp
inc
cmp
ins
cmp
push
inc
inc
add
and
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
dec
outs
je
data16
imul
add
jne
jae
add
xor
xor
add
add
add
add
imul
add
je
je
imul
jae
add
add
push
add
add
imul
push
add
add
jae
add
add
ror
movs
add
add
inc
add
add
add
add
add
add
add
inc
add
dec
dec
add
add
add
add
add
add
add
add
inc
loope
add
add
add
inc
add
add
add
(bad)
(bad)
call
loope
add
loope
add
add
repnz
add
add
add
add
loope
add
loope
add
add
add
inc
add
arpl
popa
je
inc
arpl
js
add
add
je
jbe
je
inc
arpl
js
add
ins
gs
jae
inc
arpl
js
add
inc
jb
popa
je
inc
arpl
js
add
add
inc
add
dec
add
dec
add
add
add
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outs
add
add
imul
pop
add
js
jo
ins
add
jb
add
add
dec
add
push
add
outs
add
add
outs
add
add
jbe
add
add
add
push
add
jae
je
jb
imul
push
add
outs
add
add
outs
add
add
add
outs
add
add
je
inc
add
jae
arpl
outs
add
outs
add
arpl
je
add
add
dec
add
push
add
arpl
add
je
inc
add
arpl
jae
dec
add
jae
je
outs
add
jns
add
dec
add
inc
add
add
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outs
add
add
imul
pop
add
add
add
jb
imul
add
add
outs
add
outs
add
add
add
add
add
jb
imul
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outs
add
add
imul
pop
add
outs
add
add
add
add
add
add
outs
add
ins
add
arpl
add
inc
add
jb
add
dec
add
inc
add
arpl
imul
add
je
je
outs
add
add
add
dec
add
inc
add
ins
add
dec
add
jne
add
cwde
enter
dec
inc
add
push
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
dec
inc
add
jg
add
jg
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
push
inc
add
mov
jp
inc
add
mov
scas
dec
inc
add
dec
inc
add
inc
add
inc
add
ss
add
inc
add
add
add
dec
inc
add
cs
add
add
test
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
add
add
outs
add
add
add
add
add
add
add
add
outs
add
je
jb
outs
add
add
popa
add
add
add
add
imul
add
jo
pop
add
add
outs
add
jb
arpl
add
add
popa
add
add
add
add
je
jns
je
ins
inc
gs
jne
je
dec
dec
popa
outs
addr16
add
inc
gs
jae
jb
gs
jne
je
dec
dec
popa
outs
addr16
add
add
and
add
add
add
add
imul
add
mov
add
add
inc
add
add
add
add
dec
add
pop
inc
add
sbb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
push
inc
add
pop
inc
add
pop
inc
add
push
inc
add
add
add
add
add
ins
cmp
das
add
outs
add
add
inc
inc
outs
outs
je
add
inc
inc
imul
add
inc
push
popa
imul
add
inc
push
imul
add
add
ins
imul
add
inc
inc
inc
add
jae
jb
js
gs
imul
gs
jne
arpl
js
gs
imul
dec
add
add
add
inc
add
add
add
inc
dec
add
add
(bad)
inc
add
add
add
inc
dec
add
add
add
inc
add
dec
add
add
add
(bad)
inc
add
add
add
dec
dec
add
dec
add
add
(bad)
inc
add
add
add
dec
dec
add
add
add
inc
add
add
add
dec
dec
add
dec
add
add
add
inc
add
inc
dec
add
dec
add
add
add
inc
add
add
add
dec
add
dec
add
add
add
inc
add
add
add
dec
add
inc
add
fs
add
sbb
inc
add
inc
add
sbb
add
dec
add
pop
inc
add
sbb
inc
add
inc
add
sbb
add
add
push
retf
adc
add
addr16
add
sbb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
add
add
pop
inc
add
add
sbb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
add
add
retf
sbb
push
dec
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
add
add
dec
add
pop
inc
add
dec
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pop
inc
add
push
add
sbb
dec
add
outs
inc
add
dec
add
int3
dec
add
jae
add
int3
dec
add
je
add
int
add
int
add
add
ins
add
je
ins
add
add
add
add
add
add
add
inc
add
outs
add
add
add
add
add
add
add
add
add
int
add
je
add
jle
add
jg
add
inc
add
mov
inc
add
add
add
add
add
add
into
dec
add
jle
add
jg
add
inc
add
mov
inc
add
add
push
push
add
lods
push
dec
add
add
inc
add
add
add
ror
fild
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
jg
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
scas
test
imul
inc
add
add
xchg
mov
mov
jbe
inc
add
inc
imul
(bad)
call
dec
add
add
add
inc
add
add
add
add
dec
add
nop
inc
add
sbb
inc
add
inc
add
xchg
inc
add
cmp
push
xchg
inc
add
mov
mov
lea
cwde
lea
mov
inc
add
mov
add
inc
add
mov
inc
mov
test
inc
add
pop
jb
ins
pop
jbe
je
outs
ins
jae
jbe
aaa
ins
imul
jo
popa
je
ins
data16
arpl
arpl
ins
arpl
gs
add
imul
je
outs
outs
add
adc
adc
add
(bad)
inc
add
add
add
inc
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
dec
add
add
adc
add
add
add
(bad)
(bad)
(bad)
jmp
add
add
gs
add
add
dec
add
add
dec
add
add
add
ror
xlat
jg
add
scas
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
test
inc
add
inc
add
xchg
inc
add
xchg
inc
add
stos
inc
add
inc
add
inc
add
cmps
inc
add
xchg
inc
add
add
sbb
dec
add
xchg
inc
add
add
sbb
inc
dec
cmp
push
gs
gs
jae
dec
popa
outs
popa
addr16
gs
outs
arpl
add
ins
add
arpl
ins
add
add
add
add
add
add
add
add
inc
add
mov
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
cmps
inc
add
cmps
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
mov
add
mov
inc
add
inc
add
inc
add
lods
inc
add
inc
add
scas
inc
add
cmps
inc
add
add
add
test
add
test
inc
add
lahf
inc
add
inc
add
ror
dec
stos
inc
add
scas
inc
add
inc
add
add
retf
add
add
lods
ror
aas
test
inc
add
inc
add
inc
add
retf
movs
retf
movs
retf
jp
inc
add
test
inc
add
retf
mov
cdq
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
cdq
dec
add
add
add
call
add
add
loopne
dec
add
add
add
pushf
dec
add
add
add
add
add
(bad)
(bad)
push
int
adc
adc
fs
add
dec
add
std
(bad)
inc
add
cmp
(bad)
call
add
add
std
(bad)
inc
add
add
std
(bad)
inc
add
add
std
(bad)
dec
add
add
add
add
std
(bad)
inc
add
ss
(bad)
inc
and
xchg
and
stos
add
push
mov
retf
inc
add
adc
xor
sbb
push
add
jae
sbb
into
adc
inc
ja
push
cmp
sbb
into
adc
inc
ja
mov
jae
sbb
into
adc
inc
ja
add
sub
adc
inc
ja
cmp
dec
add
add
fld
pop
leave
inc
add
test
inc
add
add
leave
inc
add
aam
add
inc
add
inc
add
inc
add
retf
movs
retf
(bad)
in
add
retf
mov
aad
add
retf
pushf
in
add
retf
mov
inc
add
inc
add
aad
add
retf
sbb
inc
add
inc
add
(bad)
dec
add
retf
inc
add
xchg
inc
add
xchg
inc
add
test
inc
add
inc
add
jmp
inc
add
jmp
call
add
xchg
inc
add
lock
add
icebp
inc
add
icebp
inc
add
repnz
add
repz
add
int
add
xchg
inc
add
xchg
inc
add
repz
add
hlt
inc
add
inc
add
sub
adc
inc
ja
rol
add
add
inc
or
add
add
add
rol
add
add
inc
xor
jae
sbb
into
adc
inc
ja
add
add
or
dec
add
fld
test
fld
movs
retf
and
inc
add
leave
inc
add
fld
test
inc
add
inc
add
retf
in
fiadd
push
fild
xor
inc
add
fild
repnz
push
loopne
add
inc
add
in
add
add
inc
add
loope
add
inc
add
inc
add
fild
jge
inc
add
add
add
dec
add
jg
add
sbb
loopne
dec
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
mov
inc
add
inc
add
xchg
inc
add
xchg
inc
add
rol
loopne
inc
add
fiadd
cmp
inc
add
les
or
inc
add
lds
lds
add
add
mov
mov
mov
ret
add
enter
enter
fiadd
clc
fiadd
xor
inc
add
inc
add
enter
fild
fild
push
cmovae
inc
fadd
popa
aad
add
rol
sbb
inc
add
mov
and
inc
dec
gs
inc
imul
pop
dec
add
add
add
inc
add
add
add
add
add
sub
add
sbb
inc
add
inc
add
xchg
inc
add
cmp
push
xchg
inc
add
sub
cmp
inc
add
sub
fisubr
inc
add
xor
fld
inc
add
sub
loopne
inc
add
sub
(bad)
sub
cli
sub
jg
inc
add
sub
inc
push
outs
add
add
add
add
(bad)
(bad)
(bad)
inc
data16
push
add
add
add
add
jne
add
add
inc
add
js
inc
add
outs
add
add
ins
add
popa
add
cmp
xor
jae
jne
add
inc
add
js
dec
add
add
jb
popa
add
add
add
add
jne
add
inc
add
js
inc
add
popa
add
add
jb
push
add
add
cmp
xor
jae
jne
add
add
inc
add
js
dec
add
add
outs
add
je
jb
outs
add
add
add
jne
add
inc
add
js
dec
add
add
outs
add
add
outs
add
xor
xor
xor
add
add
fs
add
pop
dec
add
pop
dec
add
add
inc
add
dec
inc
add
add
add
add
add
je
outs
outs
imul
inc
add
je
outs
outs
imul
push
add
jne
inc
imul
gs
arpl
push
add
jne
inc
imul
outs
outs
imul
outs
imul
push
outs
imul
dec
outs
outs
imul
push
arpl
outs
outs
imul
push
imul
add
je
jns
je
ins
dec
gs
imul
push
add
inc
add
xor
xor
add
add
inc
dec
push
push
dec
inc
pop
add
arpl
arpl
push
add
jb
add
je
add
popa
add
arpl
inc
add
imul
inc
add
jne
outs
add
add
arpl
arpl
inc
add
imul
add
add
popa
add
arpl
dec
add
ins
add
add
popa
add
arpl
push
add
ins
add
add
add
add
arpl
arpl
inc
add
jae
arpl
jb
imul
imul
add
add
popa
add
arpl
push
add
ins
add
add
popa
add
arpl
push
add
add
add
add
add
arpl
arpl
dec
add
ins
add
add
popa
add
arpl
dec
add
ins
add
push
add
jo
imul
add
popa
add
arpl
dec
add
jns
bound
outs
add
jb
add
push
add
add
je
add
popa
add
arpl
inc
add
arpl
jne
jae
add
add
popa
add
arpl
push
add
ins
add
arpl
je
imul
add
add
popa
add
arpl
inc
add
data16
jne
ins
add
add
je
imul
add
add
popa
add
arpl
push
add
ins
add
arpl
je
add
popa
add
arpl
dec
add
arpl
popa
add
add
outs
add
add
arpl
arpl
dec
add
jbe
imul
je
add
add
arpl
arpl
dec
add
je
push
add
jae
je
add
add
popa
add
arpl
inc
add
inc
add
data16
jne
ins
add
add
je
imul
add
add
(bad)
(bad)
xor
inc
add
add
inc
inc
add
inc
inc
add
aaa
inc
add
aaa
inc
add
inc
inc
add
inc
add
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
dec
inc
add
add
dec
add
dec
inc
add
dec
inc
add
inc
add
cmp
push
fimul
xor
inc
add
sbb
inc
add
ss
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
jbe
add
jg
add
aaa
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
aas
inc
add
aas
inc
add
imul
push
inc
add
aaa
inc
add
inc
add
xchg
inc
add
jne
add
inc
add
cmp
scas
dec
inc
add
cmp
inc
cmp
push
cmp
bound
inc
add
cmp
lds
inc
add
cmp
pop
cmp
sub
inc
add
inc
add
inc
add
cmp
scas
cmp
sar
inc
add
cmp
sbb
cmp
pop
cmp
ja
inc
add
inc
add
ja
add
bound
jbe
inc
add
inc
add
ds
add
inc
add
inc
add
popf
inc
add
aaa
inc
add
ins
inc
add
ss
add
jbe
add
inc
add
cmp
pop
cmp
and
inc
add
inc
add
aaa
inc
add
xchg
cmp
adc
cmp
jp
mov
inc
nop
xor
and
add
outs
imul
inc
outs
outs
je
outs
ins
jae
add
imul
inc
outs
outs
je
outs
ins
jae
js
add
add
ins
ins
dec
gs
jo
add
add
arpl
outs
arpl
add
dec
add
inc
add
addr16
add
addr16
add
retf
sub
dec
add
addr16
add
addr16
add
addr16
add
pusha
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
popa
inc
add
pusha
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pusha
inc
add
inc
add
pusha
inc
add
pusha
inc
add
inc
add
dec
add
add
add
add
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
adc
add
add
add
rol
add
add
inc
and
xor
xor
aaa
add
add
add
add
add
pop
jb
ins
pop
jbe
je
outs
ins
jae
jbe
aaa
ins
imul
jo
popa
je
ins
data16
arpl
gs
popa
data16
imul
add
pop
add
popa
dec
add
add
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
push
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
popa
inc
add
add
add
add
pop
inc
add
add
add
add
add
push
inc
add
add
add
add
add
bound
and
add
sbb
add
lea
add
add
sub
add
ins
push
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
add
add
add
add
pop
inc
add
add
add
add
add
inc
add
add
add
add
lods
fs
add
add
pop
add
add
push
inc
add
add
add
je
add
add
add
add
add
add
push
add
add
inc
inc
add
add
push
add
add
fs
add
rol
sbb
add
pop
inc
add
add
add
add
add
push
inc
add
outs
add
ins
add
je
jb
ins
add
inc
add
popa
add
dec
add
jae
je
dec
add
add
add
add
ins
fs
popa
jb
gs
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
fs
add
add
dec
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
gs
add
add
call
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
clts
add
add
fs
add
add
add
inc
add
add
add
add
add
push
fimul
add
add
add
add
data16
add
jb
add
add
add
outs
add
je
ja
popa
add
add
add
popa
jo
je
push
outs
push
je
add
add
adc
add
add
(bad)
inc
add
add
add
add
dec
add
lea
repnz
loopne
dec
add
inc
add
je
dec
imul
push
dec
add
add
(bad)
inc
add
add
add
add
fimul
lock
inc
add
sbb
jns
gs
jb
popa
jns
add
fisttp
das
xchg
inc
add
xchg
inc
add
add
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
retf
inc
add
leave
inc
add
inc
add
inc
add
retf
inc
dec
ins
gs
imul
inc
js
gs
imul
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
push
mov
push
or
mov
test
je
or
jmp
test
je
push
call
push
mov
call
push
call
add
test
jge
or
jmp
mov
test
je
push
call
and
pop
mov
and
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
test
je
movzx
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
cmp
jne
call
push
call
push
call
pop
pop
ret
cmp
jne
call
cmp
add
das
or
inc
add
call
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
push
call
pop
ret
push
push
push
push
mov
cmp
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
and
test
je
push
call
pop
jmp
xor
jmp
and
mov
or
pop
pop
pop
pop
ret
push
mov
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
test
je
push
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
push
call
add
cmp
jne
mov
test
je
and
mov
jmp
or
or
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmp
jne
push
call
cmp
pop
je
inc
jmp
cmp
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmp
mov
je
mov
pop
pop
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
push
call
push
call
cmp
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
push
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
call
test
pop
je
mov
test
je
cmp
jne
and
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
and
add
dec
jne
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
pop
pop
jmp
and
push
call
pop
mov
mov
or
jmp
push
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmp
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
push
call
test
pop
je
inc
jmp
cmp
jne
inc
jmp
cmp
jbe
inc
cmp
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmp
je
push
call
cmp
pop
mov
jne
push
call
pop
push
push
call
pop
add
pop
add
cmp
jne
pop
push
call
pop
mov
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
and
mov
push
mov
mov
mov
test
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
test
je
inc
test
je
mov
mov
inc
inc
inc
test
je
mov
mov
inc
jmp
inc
test
je
and
inc
cmp
jne
inc
jmp
inc
test
je
mov
mov
inc
mov
inc
movzx
test
je
inc
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
and
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
jne
inc
inc
jmp
cmp
jne
test
jne
xor
cmp
je
cmp
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
inc
dec
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
cmp
je
test
je
movzx
test
je
mov
inc
inc
inc
mov
mov
inc
jmp
movzx
test
je
inc
inc
inc
inc
jmp
test
je
and
inc
inc
jmp
test
je
and
mov
pop
pop
pop
inc
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
mov
cmp
je
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
lea
push
call
cmp
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
add
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmp
lea
jne
test
mov
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
or
jmp
cmp
jne
or
jmp
or
inc
cmp
jl
push
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
push
call
xor
ret
push
pop
ret
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmp
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
push
call
pop
push
push
push
call
push
call
pop
leave
ret
push
push
push
call
test
mov
jne
ret
and
and
push
mov
mov
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
or
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmp
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmp
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
and
lea
or
mov
jne
mov
inc
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmp
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmp
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
push
push
push
call
cmp
je
add
mov
mov
mov
push
push
lea
push
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
xor
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
or
or
lea
mov
mov
lea
mov
mov
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
and
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
xor
mov
mov
cmp
je
add
inc
cmp
jl
cmp
jb
cmp
ja
mov
ret
mov
mov
ret
cmp
jb
cmp
mov
jbe
mov
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
add
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
and
mov
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
test
lea
je
mov
ret
and
mov
or
ret
mov
cmp
jae
mov
mov
sar
and
mov
test
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
mov
or
ret
push
mov
sub
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
mov
test
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
call
add
mov
add
test
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
inc
mov
cmp
jne
inc
mov
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
mov
mov
jmp
call
mov
jmp
lea
push
push
push
push
push
call
test
je
mov
mov
mov
jmp
call
mov
jmp
push
call
pop
jmp
mov
test
je
mov
cmp
je
mov
mov
jmp
sub
jmp
and
mov
or
pop
pop
pop
leave
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
mov
cmp
je
test
jne
or
add
inc
cmp
jl
pop
ret
call
cmp
je
jmp
ret
push
push
push
call
add
ret
movzx
mov
test
jne
cmp
je
movzx
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmp
mov
rep
stos
mov
jbe
cmp
je
lea
mov
test
je
movzx
movzx
cmp
ja
or
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmp
mov
je
mov
test
je
movzx
movzx
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmp
jne
inc
add
cmp
jb
mov
mov
push
mov
call
lea
mov
movs
movs
pop
mov
movs
jmp
inc
inc
cmp
jne
push
pop
or
inc
cmp
jb
push
call
pop
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
and
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
push
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
mov
test
je
push
push
lea
movzx
movzx
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
push
push
push
lea
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
lea
mov
test
je
or
mov
mov
jmp
test
je
or
mov
jmp
and
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
or
mov
add
mov
jmp
cmp
jb
cmp
ja
or
mov
sub
jmp
and
inc
cmp
jb
pop
leave
ret
cmp
jne
push
call
pop
mov
ret
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
push
call
pop
pop
ret
cmp
ja
push
call
test
pop
jne
cmp
je
push
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
dec
add
dec
add
dec
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
loopne
add
dec
add
dec
add
dec
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
loopne
add
loopne
add
loope
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
dec
add
loope
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
dec
add
dec
add
dec
add
dec
add
add
add
add
dec
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
add
loop
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
push
push
push
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
in
add
in
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
(bad)
in
add
add
add
add
add
add
add
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
dec
add
in
add
in
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
out
add
dec
add
inc
add
ror
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
dec
add
out
add
out
add
out
add
dec
add
dec
add
dec
add
out
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
out
add
dec
add
dec
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
jne
mov
jmp
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
and
lea
mov
jmp
and
mov
or
pop
pop
pop
ret
push
push
mov
push
imul
cmp
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
cmp
ja
push
call
mov
pop
test
jne
push
push
push
call
mov
test
jne
cmp
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
xor
jmp
push
push
push
xor
pop
cmp
jle
mov
mov
test
je
test
je
push
call
cmp
pop
je
inc
cmp
jl
mov
push
call
mov
pop
and
inc
cmp
jl
mov
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
cmp
jle
push
push
call
pop
pop
mov
mov
cmp
jne
push
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
mov
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
xor
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmp
je
inc
mov
dec
test
jne
cmp
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
or
cmp
je
push
push
push
push
push
push
call
cmp
je
push
push
push
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
push
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
