daa
in
dec
(bad)
mov
ret
nop
mov
mov
push
call
mov
pop
sbb
xor
ret
imul
jg
aas
cmp
and
add
dec
call
mov
mov
out
jbe
add
add
xchg
or
repz
out
ret
pop
jl
jge
sti
push
push
mov
mov
in
idiv
(bad)
mov
adc
sub
lea
add
pop
jo
jle
mov
mov
and
mov
mov
xor
pop
pop
or
jl
sbb
imul
jl
dec
mov
and
adc
inc
mov
test
mov
fnsave
mov
mov
icebp
push
outs
outs
fwait
std
push
mov
mov
adc
xchg
inc
xor
test
punpckhdq
push
adc
or
or
pusha
mov
adc
or
jmp
and
push
sbb
mov
jg
or
rcl
pushf
mov
test
je
ja
out
sub
or
sbb
sti
mov
inc
shl
add
mov
loope
push
push
call
or
dec
add
js
mov
adc
pop
dec
aam
test
out
pop
sbb
mov
out
out
push
adc
and
adc
jp
mov
xor
in
push
sti
pop
(bad)
jns
jecxz
lock
jne
or
add
push
jo
jo
ins
popa
sub
jnp
ret
mov
fmul
test
je
(bad)
push
push
push
pop
and
mov
cld
xchg
lock
ins
neg
sbb
and
sbb
push
mov
jl
cld
fdivr
push
mov
mov
fdiv
clc
dec
lea
push
les
das
sbb
ret
adc
shr
idiv
sub
mov
adc
clc
out
sbb
sub
adc
cdq
lods
sbb
push
xor
jnp
push
mov
pop
pop
pop
(bad)
fs
mov
or
pop
pusha
adc
mov
(bad)
dec
push
push
push
cmp
push
je
pop
pop
pop
jle
pop
inc
js
or
clc
mov
adc
sbb
push
mov
mov
pop
and
shl
mov
in
jne
pop
push
adc
cmp
enter
cmp
push
or
scas
fsubr
push
fmul
outs
fnstcw
xor
imul
or
or
pop
dec
outs
mov
push
push
cmp
sbb
or
sub
sub
retf
shr
lods
in
push
movs
mov
and
rep
mov
and
mov
sbb
mov
mov
cld
add
imul
je
push
push
adc
mov
push
push
or
and
int3
mov
pusha
inc
sub
sub
lds
out
ins
ja
or
das
or
cmp
movs
mov
in
retf
nop
jo
dec
adc
leave
mov
pop
(bad)
pop
pop
imul
adc
cmp
pop
add
and
test
xchg
add
cmp
jne
leave
mov
sti
ffreep
jb
test
jle
mov
test
sub
or
into
cmp
lods
xchg
adc
stos
stos
sbb
mov
cmp
in
dec
cld
leave
ds
push
mov
mov
or
rol
test
outs
jnp
aaa
mov
jge
inc
mov
mov
mov
or
cli
cmp
jl
sbb
fld
push
mov
xor
(bad)
dec
cmp
in
sbb
xchg
lea
mov
mov
mov
imul
lock
and
shr
test
enter
pop
cdq
inc
in
inc
mov
dec
and
mov
add
lea
push
in
test
jne
test
je
push
jmp
test
je
fstp
out
in
dec
and
jbe
lea
mov
test
call
inc
add
sbb
inc
call
xchg
ret
add
out
test
dec
popa
mov
add
add
out
jbe
push
ret
(bad)
mov
fs
add
call
inc
push
or
pop
sub
lods
push
(bad)
add
adc
aaa
mov
ins
jae
dec
outs
mov
mov
fbstp
ret
call
add
add
mov
push
pmaxsw
push
push
pusha
mov
sbb
outs
add
or
icebp
movs
xor
cmc
push
mov
arpl
push
hlt
clc
cmc
cmp
outs
mov
cmp
inc
rol
dec
dec
xlat
sub
add
pop
lods
dec
test
or
jge
popa
sbb
ja
mov
and
mov
mov
adc
mov
jmp
jmp
push
or
mov
(bad)
pop
sub
mov
fdivr
xchg
jmp
and
inc
sub
mov
cmp
mov
cmp
scas
add
push
cmp
and
cmp
dec
xor
adc
aaa
(bad)
aas
shr
jo
and
test
scas
and
std
push
fisubr
sbb
adc
xchg
inc
sti
or
test
and
std
add
push
push
jbe
(bad)
and
push
fstp
pop
adc
cmp
sar
int3
ret
add
cld
jb
jmp
mov
push
scas
xlat
mov
xor
sbb
fild
pop
sbb
xchg
sti
das
mov
xchg
pop
sete
or
jne
sub
push
sbb
pop
test
imul
pop
inc
add
sbb
jl
scas
adc
les
push
or
shr
add
call
jbe
out
mov
push
xor
or
push
jnp
gs
scas
mov
dec
and
clc
jl
pop
fwait
or
mov
add
push
cmp
add
push
test
or
in
or
mov
rol
push
mov
int
mov
les
into
mov
or
or
lea
(bad)
imul
mov
xchg
ret
xor
div
mov
push
xor
and
add
mov
mov
out
retf
(bad)
jecxz
mov
adc
fimul
(bad)
out
or
jecxz
cmp
or
sbb
inc
es
mov
ins
fwait
imul
pop
or
xor
aas
adc
sahf
in
test
shl
jl
mov
add
mov
retf
jl
iret
addr16
mov
mov
and
inc
iret
outs
jp
push
mov
xchg
and
ins
fstp
push
test
test
mov
jl
pusha
scas
stc
das
sub
or
inc
sbb
xor
xor
fidiv
pop
imul
das
lahf
cli
jb
xchg
fwait
xchg
jp
or
lock
jns
call
pusha
xor
mov
push
adc
push
sbb
or
in
push
movhps
mov
or
out
mov
ror
lods
sub
ret
lahf
popf
arpl
mov
push
xor
scas
push
(bad)
mov
loopne
push
mov
mov
out
fisttp
out
cmp
jne
ins
add
adc
sbb
add
jne
outs
movs
lods
in
cli
(bad)
daa
push
jge
jbe
push
fnstsw
adc
add
mov
inc
jl
das
bnd
(bad)
loopne
sub
sar
mov
das
cmps
in
sub
imul
xchg
fdivr
or
in
in
call
retf
(bad)
sbb
and
or
dec
hlt
scas
gs
inc
mov
or
pop
sbb
jae
or
rcr
mov
in
mov
mov
ins
fld
inc
add
inc
add
add
fld
inc
pop
dec
or
dec
or
ins
ss
dec
or
or
int
mov
push
adc
push
adc
push
mov
ins
ss
adc
pop
ss
int
sbb
pop
sbb
bound
data16
ins
sbb
data16
ss
int
push
and
and
fldenv
ins
daa
outs
sub
jo
fldcw
jno
jb
jae
je
jne
int
mov
jbe
ja
js
jns
jp
fldcw
xor
xor
fwait
int
cmp
xor
cmp
and
sub
das
lds
add
retf
mov
inc
test
hlt
mov
inc
ret
mov
or
aas
add
(bad)
sbb
fsubr
jns
inc
(bad)
push
push
lods
inc
mov
in
hlt
hlt
adc
mov
pop
or
ss
cmp
jle
stos
mov
mov
aaa
pop
imul
(bad)
jl
lea
or
pop
cs
sub
inc
loopne
add
gs
jecxz
retf
in
mov
out
out
call
cmp
not
dec
mov
push
lea
mov
jp
or
mul
rcl
or
sub
stos
popa
fstp
sub
push
xchg
push
mov
add
push
mov
imul
dec
mov
jp
and
sahf
out
xor
xor
mov
arpl
jo
xor
fnop
in
inc
xor
xor
gs
inc
in
mov
inc
cmp
dec
add
fisub
sub
or
out
sub
mov
push
xchg
lock
xchg
and
(bad)
ficomp
add
inc
push
pop
push
call
sbb
shl
fst
sbb
cmp
add
sbb
call
movs
xor
push
mov
inc
push
pop
call
push
shl
(bad)
shl
add
xchg
or
pop
mov
and
mov
add
leave
push
cmp
in
adc
push
pop
scas
ret
jnp
frstor
adc
inc
cmp
add
push
sbb
div
xchg
(bad)
sub
push
inc
or
adc
pop
pop
sbb
jb
pop
pop
pop
mov
push
push
ja
xlat
xor
bndldx
sbb
and
adc
or
or
sbb
popa
xor
push
test
inc
cmc
loopne
adc
outs
addr16
cmp
repz
ins
and
ins
jecxz
(bad)
sub
inc
and
bt
push
mov
inc
sub
xor
push
mov
add
adc
inc
cmp
jl
pop
pop
nop
out
or
into
(bad)
(bad)
push
mov
push
jo
sbb
sbb
adc
daa
dec
outs
je
dec
iret
out
stc
shl
xlat
adc
mov
mov
cmps
rcr
jb
and
jmp
xor
fld
call
out
leave
adc
mov
inc
xor
int3
cmps
sbb
jmp
in
push
and
mov
sbb
loopne
add
sbb
mov
push
add
mov
xor
xchg
inc
int
repz
and
add
or
cmp
push
das
adc
sub
cli
cli
or
pushf
out
js
cmp
cld
retf
push
add
inc
push
push
jmp
ins
repz
repz
gs
push
gs
cmp
jb
addr16
cmp
idiv
inc
cmp
add
inc
xor
cmp
inc
inc
inc
popa
dec
jge
sahf
inc
fs
inc
inc
scas
or
jo
dec
xchg
sbb
inc
cmp
inc
push
push
ror
lds
sub
mov
cmp
adc
cmp
mov
jo
cs
push
cmp
mov
loope
into
(bad)
jnp
jo
sbb
sbb
xchg
sbb
adc
in
dec
jmp
inc
inc
mov
add
mov
stos
mov
stos
xchg
pop
clc
ins
idiv
ret
jle
xor
pop
dec
cmps
jg
jmp
adc
iret
sub
aas
jle
jmp
test
fimul
cmc
(bad)
sti
inc
jle
pop
lods
pop
pushf
jle
mov
cmp
fisttp
movq
jmp
mov
add
shl
ins
mov
adc
in
aaa
sub
inc
jmp
in
nop
mov
retf
sub
xor
ins
stos
push
adc
push
mov
jo
lahf
sti
push
sahf
jmp
enter
dec
mov
sahf
add
push
push
sbb
adc
pop
and
xchg
xchg
sbb
loopne
popa
and
add
pop
pop
sub
adc
pop
sbb
add
ret
mov
sub
or
mov
add
add
mov
add
test
xor
(bad)
jbe
or
jne
sub
and
enter
push
dec
dec
enter
inc
inc
cmp
enter
xor
sub
enter
and
sbb
enter
adc
or
xchg
out
enter
push
or
xor
push
sbb
stc
jl
sbb
and
push
sub
enter
xor
enter
cmp
inc
dec
enter
dec
push
push
pop
enter
pop
pusha
fs
ins
jo
js
(bad)
enter
or
sahf
push
nop
xchg
cwde
pushf
inc
inc
inc
inc
mov
inc
inc
inc
mov
mov
inc
rol
int3
inc
inc
inc
inc
rcr
fsub
inc
inc
inc
inc
in
in
lock
inc
inc
inc
hlt
clc
cld
cmp
xor
imul
adc
loopne
sbb
ret
and
push
jp
mov
ret
mov
lods
int3
add
sbb
pop
pop
(bad)
das
sbb
xor
sub
aam
stos
dec
push
fstp
mov
or
push
adc
jo
or
mov
sbb
or
out
out
mov
or
mov
mov
push
sbb
inc
or
daa
sahf
mov
(bad)
fcmovne
frstor
or
pushf
push
add
mov
or
add
(bad)
jnp
adc
xor
and
inc
or
repnz
jg
push
cmp
je
cmp
repnz
js
ins
(bad)
aam
dec
movs
in
push
test
out
pop
and
movzx
jmp
sub
jbe
jmp
retf
mov
pop
mov
xchg
call
imul
xor
mov
or
cwde
pop
ins
or
mov
xchg
and
arpl
mov
xlat
jp
js
rol
int3
rcl
and
push
test
dec
(bad)
xor
xlat
(bad)
fmul
js
jmp
jmp
and
mov
cwde
add
adc
inc
mov
jnp
or
or
ret
mov
stc
and
or
mov
inc
stc
mov
push
fisttp
lock
imul
movs
frstor
rcl
mov
loopne
in
stos
push
lock
add
and
inc
or
clc
add
test
aaa
add
shl
or
inc
popa
mov
sub
js
je
popf
loop
add
or
cmp
adc
ins
or
push
ins
cmps
pop
mov
push
mov
inc
jne
add
pop
dec
jge
xchg
push
inc
repz
das
cld
add
add
push
ins
sub
cmps
inc
fild
push
inc
daa
test
add
ds
inc
clc
clc
push
xor
mov
or
hlt
cmp
je
cmp
or
inc
adc
sub
neg
clc
mov
aad
inc
mov
(bad)
dec
loope
pop
mov
or
mov
inc
add
test
push
adc
sar
pop
loopne
les
div
inc
cmp
mov
cmp
jne
cmp
jne
push
jge
sbb
xchg
loop
cmp
das
inc
jmp
add
dec
cmp
cmp
ins
add
sbb
mov
or
fnstsw
adc
sbb
lea
inc
cmp
adc
jbe
fbld
(bad)
cmp
je
add
inc
cmp
adc
fisubr
pop
aad
(bad)
and
add
add
ret
mov
clc
pop
int3
lock
mov
sbb
mov
xor
test
bswap
xchg
or
add
add
out
into
sahf
fst
add
inc
loope
or
shl
jmp
lahf
inc
xchg
sub
pusha
push
add
call
add
cmps
imul
cmps
imul
cmps
imul
call
add
xor
mov
daa
div
jmp
fcom
int3
(bad)
mov
mov
pop
or
and
aam
imul
push
enter
das
nop
adc
jb
and
sub
out
add
add
call
push
dec
inc
inc
imul
jmp
scas
sbb
push
jo
add
sub
xor
(bad)
(bad)
sub
je
imul
dec
rcl
into
enter
add
sub
jo
in
mov
adc
lods
jmp
mov
test
add
popa
addr16
clc
jo
fs
ins
sbb
dec
dec
add
mov
add
inc
add
jmp
push
xor
add
push
cmp
and
push
push
xchg
mov
add
dec
es
xor
push
enter
xor
sti
int3
inc
shl
shr
push
fst
inc
pop
xor
lahf
jmp
nop
and
dec
pop
dec
mov
mov
and
adc
nop
pop
inc
xor
nop
mov
and
xchg
cmps
xor
adc
pusha
sub
je
inc
pop
cld
cld
inc
fcom
or
cmp
adc
aas
fldenv
sub
hlt
mov
imul
(bad)
jg
jne
gs
imul
jns
popa
je
inc
js
jae
jae
dec
outs
sub
je
jb
gs
ins
outs
jae
dec
popa
outs
(bad)
cld
das
jmp
push
gs
fs
imul
outs
push
jb
inc
push
test
xchg
inc
inc
mov
adc
bound
lahf
imul
(bad)
(bad)
jmp
outs
dec
imul
jae
xor
jo
pop
popa
cmp
xor
inc
inc
push
mov
xor
jne
inc
or
dec
sbb
push
inc
xor
arpl
dec
add
cmp
xor
jbe
jae
addr16
push
dec
push
inc
push
push
pop
push
xor
inc
imul
pop
arpl
pop
ja
push
inc
dec
jbe
outs
push
test
bound
arpl
pop
js
dec
jp
cmp
outs
inc
xor
dec
add
jg
jg
pop
xor
gs
outs
dec
js
sbb
push
inc
dec
jae
cmp
(bad)
(bad)
inc
cmp
dec
je
dec
push
push
ss
xor
jb
xor
jp
sub
mov
xor
ins
push
dec
ins
inc
das
push
push
cmp
outs
push
nop
fs
xor
jg
(bad)
call
sub
das
cmp
push
cmp
jno
inc
bound
ins
imul
jmp
cld
outs
xor
jb
inc
inc
jno
inc
inc
inc
inc
xor
push
imul
call
xor
jbe
imul
jb
fs
dec
outs
sub
inc
push
push
pop
std
pop
sti
dec
outs
addr16
push
push
dec
jns
cmp
inc
xor
push
addr16
test
xor
push
test
xor
outs
ss
(bad)
call
addr16
push
push
inc
inc
cmp
push
je
inc
jo
dec
dec
inc
xor
pop
ins
inc
jmp
push
jns
pop
push
cmp
push
jns
bound
gs
ja
cmc
(bad)
jmp
outs
xor
dec
js
xor
ins
dec
pop
jp
xor
push
jb
or
data16
imul
in
cmp
ja
clc
xor
(bad)
jmp
dec
xor
dec
push
inc
dec
xor
pop
jns
imul
imul
cmp
das
bound
dec
cmp
(bad)
(bad)
call
push
popa
ins
dec
dec
inc
inc
push
cmp
sub
ret
push
arpl
xor
dec
inc
dec
dec
jo
ja
inc
jb
dec
pop
ins
add
inc
ss
inc
push
cmp
sub
sbb
cs
pop
mov
outs
addr16
daa
or
imul
jo
pop
lods
cmp
mov
retf
and
in
ins
mov
xlat
adc
xor
daa
ror
mov
add
jbe
xchg
sub
mov
sub
add
jnp
inc
imul
add
shl
inc
push
jmp
mov
fiadd
adc
add
push
add
push
ud0
lock
add
pop
test
and
pop
or
in
test
das
pop
popa
inc
fmul
xor
xlat
and
mov
jbe
stos
aad
or
ret
pop
lock
adc
(bad)
cmovb
and
add
call
mov
sbb
fst
mov
add
add
dec
push
jl
sub
add
xchg
ror
sbb
adc
mov
sub
add
inc
xor
aas
ins
pop
outs
mov
push
add
je
add
add
xchg
dec
add
lahf
pop
add
scas
pop
aas
div
add
push
add
mov
mov
pop
mov
jno
ins
mov
mov
add
pop
add
mov
das
outs
call
adc
or
push
mov
test
popa
mov
adc
mov
sbb
std
stos
imul
scas
jno
inc
mov
bound
sub
gs
mov
ret
adc
push
(bad)
fcmovnb
add
(bad)
ins
add
imul
ret
ins
adc
outs
add
(bad)
jo
leave
add
int3
jno
retf
push
int
mov
mov
adc
jns
adc
pop
shl
repnz
ins
daa
fstp
ror
add
jnp
addr16
(bad)
push
mov
push
sahf
mov
ins
sahf
add
mov
add
xchg
inc
sub
mov
push
fiadd
jbe
mov
fimul
or
daa
adc
pop
retf
retf
(bad)
adc
xchg
sbb
add
aam
add
fistp
outs
mov
lea
and
mov
and
xchg
add
ficom
fcom
ficom
aas
loopne
push
loope
retf
fild
or
sub
loopne
add
loop
out
or
jb
fnsave
or
add
xchg
(bad)
xchg
ins
mov
fucomi
xor
call
ja
call
add
pushf
add
in
push
adc
fwait
jmp
imul
ins
loopne
sub
lahf
add
add
out
mov
mov
hlt
push
repz
pop
clc
test
cli
lods
xchg
in
ins
loope
lock
repnz
imul
mov
add
cli
scas
iret
stc
scas
cli
mov
cld
mov
ficom
add
out
cmps
call
and
(bad)
push
fidiv
xor
stos
das
in
daa
xor
mov
repnz
(bad)
mov
and
repz
inc
aam
push
into
xchg
add
mov
xchg
int
xlat
mov
ja
movs
add
cmp
(bad)
(bad)
jg
jae
jmp
inc
idiv
add
rol
icebp
lds
je
iret
add
sti
fucomi
not
add
mov
fstp
dec
outs
jg
(bad)
add
aad
into
retf
add
loop
add
shl
fild
add
out
add
add
jmp
imul
cmp
sub
adc
push
es
dec
outs
(bad)
fwait
push
dec
pop
sbb
xor
push
pop
pop
sbb
cwde
mov
and
call
and
sbb
ss
bound
mov
add
xor
push
pop
js
xchg
xchg
xor
add
adc
push
pop
pop
jns
xchg
push
adc
mov
add
pop
fnstcw
inc
addr16
bound
push
add
aaa
add
add
repnz
sbb
lods
jp
pop
sub
or
add
call
lods
push
ds
add
inc
or
mov
repnz
(bad)
in
push
push
pop
lahf
push
push
push
push
sbb
add
and
mov
jge
outs
jae
ins
push
push
sub
inc
add
dec
jg
push
add
stos
stos
aaa
sbb
sbb
push
cs
add
add
mov
and
jae
gs
cs
mov
pop
or
inc
push
movs
test
jae
pop
xchg
and
inc
pop
push
inc
cmp
inc
push
mov
das
paddb
lock
add
cmp
rol
add
lock
aam
cmp
add
pop
cmp
outs
int
or
out
push
(bad)
adc
inc
cmp
add
punpckhwd
in
mov
push
add
dec
xchg
dec
in
ret
inc
push
inc
test
push
mov
jbe
call
mov
push
fcmove
or
stos
popa
xor
push
mov
push
mov
push
xchg
scas
xor
mov
or
add
imul
enter
or
pop
bswap
jae
mov
outs
push
retf
ja
inc
(bad)
loope
lock
push
xor
xor
adc
fcmovnb
ins
movs
pop
jle
(bad)
and
repz
cmp
pop
fiadd
mov
xor
daa
sbb
mov
(bad)
(bad)
mov
imul
cmp
fcomp
pop
pop
ss
loopne
jecxz
add
xchg
add
or
sti
add
mov
data16
dec
aaa
mov
fist
in
das
sub
and
loope
add
jns
loope
or
mov
inc
jecxz
pxor
adc
mov
repz
add
repz
aaa
cld
mov
mov
xor
lods
add
cmps
inc
leave
jnp
rol
mov
jecxz
shr
dec
out
inc
jmp
add
jecxz
jmp
call
shr
mov
repz
stc
int3
add
rcl
fidivr
jmp
in
pop
mov
and
repnz
add
or
xlat
outs
or
inc
sub
dec
and
idiv
and
inc
push
push
or
pop
cmp
pop
jg
div
inc
inc
inc
adc
inc
and
adc
xor
iret
call
and
adc
cmp
sbb
adc
pop
repnz
idiv
inc
dec
dec
inc
cmp
push
add
dec
inc
cmp
adc
add
dec
cmp
and
sbb
inc
add
add
cmp
sub
pop
pop
pop
mov
add
pop
rol
add
rol
pop
and
clc
mov
and
aas
inc
cmp
pusha
pusha
dec
and
mov
cdq
call
add
cmps
imul
jmp
and
popf
mov
scas
add
je
adc
das
dec
rcr
xor
sysret
dec
adc
jne
add
mov
sbb
xchg
or
xor
and
add
sub
xor
neg
jnp
pop
pop
daa
das
aaa
ror
cs
fst
ret
or
popf
add
test
add
outs
movs
imul
xchg
push
pop
and
fstp
cmp
sar
xor
add
add
dec
ror
cmp
xor
and
fwait
pop
sysret
adc
adc
fisttp
push
inc
sbb
dec
cmp
outs
cmp
or
or
and
lods
mov
push
imul
lods
xor
je
inc
sub
dec
mov
push
fld
mov
add
add
sar
dec
jmp
repz
out
stos
adc
and
pop
adc
out
sti
pop
fdivr
fldcw
pop
sub
ja
jle
fist
(bad)
shr
aaa
fwait
or
rcl
cmps
jl
ret
stc
add
mov
pop
jo
idiv
fwait
les
pop
jb
fsubr
mov
or
push
push
push
push
inc
mov
call
dec
mov
dec
rcr
std
push
or
data16
rcr
add
or
add
arpl
rcl
movs
inc
push
sub
imul
mov
jle
mov
or
sbb
mov
pop
lods
jne
movs
xchg
mov
sti
fstp
mov
retf
pop
inc
pop
add
mov
(bad)
adc
pop
(bad)
(bad)
jae
adc
inc
(bad)
push
aam
(bad)
and
nop
(bad)
and
adc
dec
mov
mov
or
retf
test
(bad)
push
sti
add
(bad)
test
mov
xchg
outs
mov
fld
inc
jecxz
loope
fnstsw
leave
outs
pop
mov
pop
add
pop
ins
neg
push
mov
inc
or
mov
ret
outs
shufps
retf
push
iret
jle
sbb
test
pop
(bad)
mov
(bad)
jmp
fist
jmp
in
jmp
movs
sbb
jbe
add
push
movs
and
and
movs
aaa
jae
dec
pop
scas
out
pushf
mov
cwde
test
test
mov
out
enter
inc
pop
mov
add
mov
in
retf
mov
dec
les
je
adc
pop
call
and
(bad)
push
pushf
mov
(bad)
xor
mov
daa
fcomp
ret
dec
retf
sub
inc
xchg
iret
dec
push
pop
ja
aas
mov
mov
lods
mov
ret
popf
xor
pop
add
cdq
retf
in
fdivr
retf
jno
retw
outs
mov
pop
add
fs
fs
iret
(bad)
mov
xchg
retf
in
(bad)
jo
jbe
jl
adc
jp
pop
fimul
out
(bad)
fdivr
(bad)
mov
mov
cmp
mov
stc
add
imul
jb
xlat
pop
mov
jnp
call
inc
add
mov
lahf
inc
nop
in
lods
inc
sar
les
sahf
jnp
les
rol
jg
sti
(bad)
inc
fild
les
jb
bswap
ja
in
repnz
adc
jge
test
mov
sti
and
(bad)
daa
loop
sub
xor
stos
out
mov
xchg
outs
(bad)
(bad)
aaa
repz
pop
loope
aas
rol
out
popf
loope
inc
(bad)
mov
fcomp
add
movs
mov
sbb
or
fild
add
enter
jbe
packssdw
(bad)
imul
mov
cmp
pop
inc
pop
mov
push
int
sar
(bad)
cld
cmp
mov
es
sub
mov
(bad)
and
sub
mov
add
ins
or
add
mov
cmps
int
(bad)
jmp
stc
test
dec
add
nop
retf
int
retf
leave
(bad)
fcom
lds
add
and
inc
pop
or
ret
ret
jno
mov
adc
cmp
xlat
jnp
fimul
ror
jecxz
jmp
pop
xor
scas
add
jnp
sbb
out
add
xor
dec
cli
stos
arpl
lods
sub
stos
dec
push
xchg
test
xchg
in
jae
or
adc
iret
xchg
pop
mov
retf
jo
dec
or
mov
cwde
dec
lods
pop
jo
sbb
or
loope
ret
ficom
cmps
sub
sub
ret
xchg
xor
imul
or
adc
ja
out
lods
cmp
test
outs
aaa
shl
out
std
or
sar
into
je
cdq
sbb
add
pop
jae
int3
int
pop
ror
iret
retf
(bad)
ins
xchg
fucomi
lahf
jae
cmp
add
jmp
outs
mov
lock
in
jle
cmps
fist
fist
(bad)
cwde
add
call
jmp
retf
add
ds
add
aad
and
cwde
sub
stc
bnd
(bad)
xchg
shl
js
std
push
sbb
ja
iret
jmp
pop
outs
iret
dec
mov
aaa
add
jb
cmp
loope
xor
shl
(bad)
fimul
out
fist
mov
dec
out
(bad)
and
adc
xchg
add
pop
loop
mov
ret
mov
movs
dec
sbb
repz
cmps
in
mov
fld
jp
dec
aam
pop
fdiv
add
pop
shl
outs
lahf
bound
retf
xlat
test
xor
mov
inc
and
adc
xchg
dec
jae
popa
push
call
call
loope
outs
fist
dec
mov
iret
fwait
pop
and
mov
mov
inc
jnp
push
push
cmp
jmp
cmp
aad
(bad)
jle
jg
xor
pop
(bad)
daa
fistp
sti
jp
xchg
mov
fnstsw
test
sub
and
adc
xor
pop
push
jmp
(bad)
addr16
mov
jae
xchg
sbb
mov
fadd
outs
pop
out
shr
mov
(bad)
mov
cmp
nop
fs
outs
addr16
fadd
mov
sbb
pop
fsubr
(bad)
(bad)
mov
jg
mov
sub
push
adc
sub
dec
das
push
call
add
(bad)
jmp
outs
fstp
(bad)
aam
jecxz
repz
(bad)
das
sbb
sub
adc
mov
ss
mov
cmp
jns
out
mov
or
fadd
(bad)
or
daa
jmp
scas
je
(bad)
out
adc
mov
jno
jp
pop
xchg
ja
push
xchg
jecxz
dec
dec
retf
cs
adc
(bad)
pop
mov
xchg
mov
add
call
push
bound
adc
daa
daa
inc
movs
in
retf
jns
enter
shr
fnstcw
ror
sti
inc
add
xchg
pushf
or
shr
add
mov
mov
xchg
mov
sbb
outs
sbb
sti
sub
fcmovnu
push
add
and
lods
sub
iret
out
ja
mov
jmp
or
mov
(bad)
iret
pinsrw
pop
outs
dec
test
xchg
outs
mov
mov
loopne
stc
mov
lods
jns
mov
sti
jl
les
mov
jns
in
dec
(bad)
lods
mov
scas
dec
pop
inc
add
pop
sbb
pop
xor
jae
pop
lods
imul
mov
add
jmp
loop
(bad)
out
jnp
fisttp
ret
jnp
push
aas
(bad)
mov
ins
outs
gs
mov
idiv
xchg
fs
iret
in
cmc
add
pop
cmp
jmp
iret
test
sti
sbb
mov
mov
jbe
mov
icebp
rol
mov
xchg
scas
push
jg
arpl
mul
das
imul
(bad)
loope
(bad)
jmp
fwait
loope
jmp
dec
or
push
rol
or
rol
inc
pop
sub
data16
jmp
idiv
mov
xchg
ds
jmp
out
repz
repnz
add
xchg
repnz
xlat
fadd
nop
repnz
pop
loopne
hlt
push
icebp
dec
sti
or
stos
mov
dec
(bad)
jge
xchg
dec
outs
arpl
pop
xlat
outs
dec
shl
leave
ror
(bad)
jnp
jmp
add
jecxz
(bad)
mov
sub
daa
xchg
ret
push
and
fild
pop
mov
out
pop
xor
lahf
imul
jne
mov
repnz
or
add
mov
retf
lock
das
ret
cmp
add
push
test
adc
xchg
dec
pop
pcmpeqw
xlat
fcmovnu
(bad)
mov
jnp
call
jnp
mov
scas
jge
sbb
fist
outs
dec
test
lahf
idiv
hlt
add
cdq
lock
fucomip
xchg
out
(bad)
out
mov
int3
jo
ret
jnp
pop
adc
xchg
cli
adc
ret
mov
ja
loope
cmp
push
jnp
aas
mov
in
(bad)
(bad)
xchg
iret
xor
inc
mov
add
xor
jle
mov
jmp
xchg
scas
lahf
cmc
stos
(bad)
in
call
xor
out
add
in
paddsw
scas
jmp
in
(bad)
in
jecxz
dec
add
jb
mov
xchg
dec
cld
push
adc
xchg
jne
fwait
into
in
in
mov
mov
mov
mov
adc
jmp
fmul
and
cli
mov
and
aas
mov
inc
push
pop
hlt
cmps
repz
icebp
xchg
sahf
lock
jmp
scas
out
add
jmp
jmp
jmp
jecxz
cmp
in
add
xchg
dec
cmova
cmp
cmc
add
xchg
outs
ins
fld
pop
push
shr
(bad)
jno
ja
std
movs
and
repz
pusha
rcr
jg
lahf
adc
lgs
or
xchg
adc
(bad)
mov
xchg
in
add
jmp
(bad)
jmp
xor
cmp
out
repz
mov
rol
call
push
jae
shl
(bad)
aaa
add
arpl
mov
or
pop
mov
aaa
xlat
fadd
mov
xchg
cmc
movs
lods
sbb
psubsb
(bad)
mov
xchg
jae
pop
mov
jecxz
not
(bad)
push
inc
adc
adc
xor
pop
retf
mov
mul
or
pop
jmp
mov
mov
mov
fstp
stos
icebp
lahf
out
push
in
mov
in
jmp
dec
ret
xchg
sub
icebp
bound
call
clc
dec
rcl
fmul
std
out
int
cmp
add
fxch
pop
push
popa
sbb
push
inc
mov
push
fnsave
lods
ret
cli
stos
jmp
aam
xor
xchg
fucomip
adc
rol
xchg
imul
retf
jae
out
loop
daa
sti
mov
sbb
add
iret
mov
fcom
mov
mov
mov
sti
lods
xchg
mov
cdq
in
iret
out
outs
lock
sahf
xor
repz
cmc
fwait
jmp
(bad)
jp
jo
sub
jg
jge
adc
popa
adc
aam
sub
cmps
popa
or
ret
pop
out
adc
fucomi
mov
pop
xchg
mov
dec
cmp
and
cmp
jnp
add
xor
ss
lock
mov
cmc
mov
icebp
mov
cmp
repz
cmc
idiv
(bad)
cli
sti
std
jg
cmp
push
xor
mov
pop
aam
lock
(bad)
or
imul
jg
jle
imul
inc
(bad)
call
(bad)
stos
mov
cld
jmp
ror
sahf
test
(bad)
jg
jno
fs
rol
not
aaa
inc
pop
mov
mov
or
hlt
push
cmc
aad
dec
shl
idiv
stc
cli
shl
std
fcmovnbe
jge
pop
mov
imul
adc
dec
mov
mov
add
mov
arpl
idiv
cmps
mov
cli
sti
sti
std
xlat
add
scas
in
mov
popf
aas
sub
mov
ss
ja
mov
cmp
add
cmp
int
cmps
bnd
jle
mov
cmp
pop
call
lea
sub
jg
das
daa
mov
dec
rol
inc
mov
inc
sahf
movs
pop
inc
add
add
pop
rcr
add
cmp
and
pop
jb
retf
mov
(bad)
pop
mov
push
leave
loopne
pop
pop
es
dec
clc
push
pop
(bad)
pusha
and
inc
jg
fist
out
add
loopne
mov
cwde
pop
daa
add
loope
out
xor
clc
cmova
add
sub
(bad)
adc
sbb
and
add
or
enter
add
add
add
or
add
cmps
test
and
add
addr16
add
sbb
add
outs
fdivr
dec
cmp
add
or
mov
inc
xor
add
add
mov
mov
add
stos
dec
add
pop
add
retf
push
dec
pop
sub
push
daa
pop
jge
add
adc
inc
mov
add
push
dec
pop
adc
repz
add
(bad)
(bad)
mov
push
int3
jnp
rol
push
popf
inc
test
mov
dec
add
or
mov
add
mov
test
lock
cld
outs
rcr
add
retf
rol
lock
mov
mov
in
sub
and
mov
push
add
fcmove
into
or
and
mov
arpl
pop
mov
call
int
sbb
xor
out
push
cmp
mov
mov
xchg
pop
enter
scas
cmc
movs
sahf
test
and
jae
push
jo
les
addr16
fist
imul
jae
iret
jl
aam
push
(bad)
xchg
push
fnsave
push
jbe
push
mov
cmc
mov
mov
lods
pop
fcomp
add
dec
call
fwait
add
leave
ins
pop
loopne
inc
add
add
ins
or
jo
stos
mov
push
push
pop
sbb
mov
daa
jecxz
sub
rcr
cmps
mov
out
mov
add
jo
jae
pop
stc
test
xchg
in
xlat
cmp
int
add
out
aam
mov
mov
xor
test
add
dec
in
sbb
mov
loopne
sbb
add
sub
adc
outs
pop
push
add
add
fstp
iret
jbe
and
imul
cs
mov
add
mov
fist
call
pop
idiv
xor
push
fcomip
movs
sar
out
and
aad
jge
dec
adc
aaa
fcmovb
push
call
pop
xchg
pop
(bad)
ja
xchg
add
(bad)
sbb
xchg
pop
mov
xlat
add
xor
lea
test
push
pushf
call
stos
ja
cmp
add
fmulp
add
pop
data16
and
outs
rcr
call
dec
xor
push
add
lahf
adc
mov
xor
sbb
adc
jle
push
(bad)
fild
mov
jae
add
adc
aas
xor
pop
fs
jg
push
das
outs
dec
pop
xchg
mov
cmps
jne
lods
loopne
scas
jmp
js
lahf
out
aaa
ret
fimul
mov
or
mov
fild
(bad)
call
mov
pop
xchg
ja
push
data16
(bad)
mov
out
test
or
out
xchg
loopne
loop
inc
in
cmps
add
(bad)
push
mov
xchg
lods
mov
jo
sub
sti
dec
and
xor
jb
mov
cmp
out
scas
mov
pop
mov
xchg
add
out
adc
mov
jg
loopne
and
mov
xchg
movs
sahf
in
add
mov
das
retf
out
cmp
cdq
ret
mov
push
add
jmp
in
call
clc
jg
in
ret
or
jbe
jo
sub
add
pop
and
xchg
push
mov
pop
dec
jmp
sti
cmc
push
xchg
push
sbb
icebp
sahf
sub
popf
gs
sti
xor
jmp
bound
mov
adc
cmp
lods
cmps
fcmovnb
xchg
xchg
fnstcw
loopne
imul
(bad)
mov
outs
bound
xchg
ror
lds
xor
imul
add
ret
into
mov
(bad)
(bad)
xchg
out
fadd
sar
enter
out
mov
pop
repz
mov
enterw
icebp
mov
(bad)
imul
push
or
ret
mov
sub
add
test
mov
pop
or
mov
stc
fld
fcomp
mov
std
add
(bad)
mov
mov
int3
pop
sbb
mov
lahf
cwde
fiadd
mov
jle
pop
pop
add
xchg
add
sbb
fiadd
xchg
mov
add
ror
xchg
fstp
jmp
lock
loopne
fild
add
adc
add
xchg
jns
test
pop
cld
ins
jb
fxch
aas
(bad)
jg
add
sub
test
add
dec
pusha
or
mov
xchg
stos
add
outs
or
pop
dec
mov
paddsw
add
and
add
jmp
aam
mov
mov
or
mov
mov
mov
inc
xor
retf
add
add
add
push
sbb
sub
or
dec
add
mov
scas
mov
push
aam
push
jmp
mov
(bad)
jmp
cld
push
pushf
dec
fld
pop
sub
lock
stos
xchg
mov
dec
and
popa
sub
cmp
inc
les
outs
add
jb
jmp
hlt
jmp
add
push
(bad)
loope
add
outs
fwait
add
sub
add
(bad)
(bad)
or
call
sub
and
jle
add
sahf
mov
push
lds
pop
cmp
dec
cmc
sub
xchg
xlat
push
xchg
xchg
(bad)
sbb
pop
adc
addr16
inc
loopne
or
xchg
popf
add
mov
mov
inc
pop
add
adc
adc
jmp
mov
(bad)
(bad)
mov
js
xchg
aaa
shl
mov
jne
sbb
clc
cmps
adc
push
add
jo
das
dec
les
adc
pop
or
movs
pusha
sti
test
dec
scas
xlat
adc
jno
dec
fild
pop
xchg
out
pop
sub
mov
test
pop
loop
xor
aas
cmp
add
loop
or
in
fwait
ja
add
add
pop
inc
(bad)
and
or
dec
inc
out
dec
inc
pop
sbb
mov
xor
or
rcl
push
xchg
mov
aas
sub
or
pop
or
sub
aad
dec
mov
pusha
mov
fadd
movs
das
(bad)
daa
(bad)
sbb
or
cmp
add
or
retf
stos
inc
xor
ss
(bad)
push
inc
xchg
add
popa
fist
xor
inc
mov
jecxz
scas
shr
add
loopne
cwde
cld
sti
xchg
add
or
add
push
fstp
ret
(bad)
jmp
neg
call
pusha
and
sbb
dec
movs
mov
fild
pop
call
sbb
push
mov
mov
rcl
push
xchg
pop
push
jle
pusha
(bad)
fwait
(bad)
aas
ins
push
inc
inc
sub
mov
fucomip
pop
pop
pop
ins
sub
ins
cmc
adc
adc
push
repz
icebp
mov
or
stc
add
add
(bad)
jmp
jo
or
mov
cmps
inc
shr
xor
test
xor
pop
retf
mov
jmp
mov
loopne
and
outs
out
arpl
shr
out
cld
mov
add
(bad)
push
into
xchg
(bad)
push
dec
sbb
(bad)
daa
inc
jne
or
mov
mov
adc
call
pusha
test
mov
cmp
retf
sub
adc
daa
div
pushf
hlt
or
arpl
popa
mov
aad
jnp
inc
retf
mov
pop
dec
push
out
paddsw
jne
inc
stos
jmp
jmp
out
ret
jne
add
jecxz
neg
enter
or
mov
jns
pop
adc
test
arpl
pop
mov
pop
lock
repnz
pushf
es
dec
clc
sbb
adc
hlt
mov
mov
or
repnz
(bad)
rol
adc
aad
jbe
mov
adc
add
(bad)
hlt
test
aam
xor
and
xor
loope
ins
mov
adc
add
sub
mov
xor
pop
inc
pop
push
or
add
aaa
jg
push
xchg
sub
cmp
jbe
jb
adc
add
dec
or
pop
(bad)
aas
sub
add
xor
add
add
sbb
adc
stc
gs
sub
or
aaa
cmp
daa
mov
fcomp
add
jne
dec
mov
mov
mov
pop
fmul
repnz
mov
ror
(bad)
in
or
add
or
pop
cld
and
test
xchg
jbe
outs
cdq
mov
add
mov
inc
ret
sub
xchg
jmp
cmp
or
mov
test
adc
add
fist
inc
retf
push
xor
in
jmp
mov
cs
jecxz
or
inc
(bad)
pop
xchg
fisttp
fwait
inc
loop
mov
add
loop
not
push
aad
les
and
in
sti
sbb
daa
call
mov
mov
mov
mov
pop
push
and
or
mov
aam
scas
mov
add
sti
std
or
or
jecxz
call
fmul
mov
sbb
pop
mov
push
fwait
cmp
pop
mov
xchg
xor
cmp
mov
repz
mov
movs
aas
adc
fild
stos
(bad)
xchg
pop
les
jmp
xchg
mov
mov
loopne
repz
mov
add
add
imul
jmp
(bad)
push
or
lods
push
(bad)
mov
push
sbb
out
cmp
iret
xor
lds
xor
les
out
push
shl
fbld
pusha
sub
(bad)
adc
or
popa
scas
push
mov
ja
loope
and
push
(bad)
push
out
sbb
repz
add
rcl
ror
jp
stos
iret
mov
and
shr
adc
xor
or
pop
add
cmp
inc
add
mov
enter
jmp
sar
pop
pop
jae
mov
and
outs
adc
pop
inc
adc
mov
dec
dec
adc
mov
adc
aaa
mov
cmp
and
sbb
test
out
mov
sbb
or
xor
dec
jb
jb
adc
sbb
inc
addr16
bound
and
sub
xor
sbb
add
mov
aas
mov
dec
pop
push
movq
call
mov
nop
add
dec
fnstcw
enter
jbe
das
add
add
jl
adc
and
add
push
mov
pop
mov
xor
add
add
call
add
push
(bad)
outs
jg
pop
fisttp
arpl
xchg
or
loope
ror
add
add
in
cmp
ins
stos
or
int
or
xchg
xchg
test
push
mov
repz
arpl
pop
pop
add
jb
jmp
sbb
add
inc
add
lods
mov
adc
sub
inc
add
data16
or
push
mov
sub
sbb
mov
mov
je
outs
fldpi
outs
pop
daa
jne
daa
xchg
xchg
xchg
clc
xchg
pop
stc
pop
add
cli
add
push
pop
es
sub
sub
add
xor
adc
push
pop
and
addr16
or
add
adc
or
fldcw
das
lds
jmp
int3
or
push
or
gs
in
cdq
or
and
cmps
and
(bad)
aaa
sub
fistp
mov
dec
aaa
and
adc
push
ins
stos
rcl
or
add
int
test
add
popa
jo
ins
ins
outs
arpl
jb
(bad)
div
ins
or
jo
push
jb
je
lea
sbb
or
gs
arpl
fs
jae
cmovl
add
dec
imul
or
jnp
fstp
push
sub
sub
imul
mov
popa
or
push
jg
mul
jno
push
imul
add
jne
push
add
imul
fs
push
push
lds
adc
sub
fnstenv
in
ins
jg
mov
imul
js
push
popa
imul
push
push
outs
inc
dec
popa
jae
inc
jb
sahf
dec
mov
jb
lock
fstp
(bad)
mov
dec
add
das
test
test
ud0
adc
mov
adc
call
das
add
cmp
(bad)
jmp
call
cmc
and
movs
pop
(bad)
out
ins
fist
push
jns
push
sub
inc
inc
add
mov
pop
(bad)
cmp
or
call
leave
cmp
ins
lea
dec
adc
or
and
or
mov
(bad)
jp
nop
add
(bad)
adc
sbb
mov
(bad)
ins
(bad)
jno
mov
mov
pop
mov
ds
fstp
mov
mov
adc
or
mov
inc
inc
push
pop
arpl
ror
cli
add
ins
(bad)
mov
out
inc
adc
scas
adc
inc
pop
gs
pop
push
fnsave
adc
rdmsr
jo
loope
sbb
xchg
wbinvd
pop
ins
lods
pop
cmp
arpl
or
rcr
jo
imul
ins
arpl
push
pop
sub
sbb
sbb
int
jle
loope
jae
arpl
mov
xor
mov
arpl
sub
adc
aas
xor
push
inc
inc
mov
or
inc
pop
pop
sbb
xor
ins
rcr
or
js
push
push
mov
outs
pop
adc
popa
ins
bound
sbb
stos
dec
data16
or
mov
pop
xor
fcomp
push
mov
xchg
dec
std
imul
fild
jns
gs
dec
gs
outs
daa
lods
mov
outs
jne
inc
jo
jne
(bad)
mov
or
popa
addr16
xor
pop
adc
push
out
mov
ja
push
sti
inc
test
dec
add
add
inc
push
xlat
loopne
sidtd
adc
rcl
xor
fwait
cmp
inc
or
add
dec
add
cmp
pop
sbb
ins
or
add
add
pusha
xchg
jmp
push
add
xchg
mov
inc
js
pop
and
pop
cmp
adc
jb
ins
popa
sti
jl
pop
jae
adc
add
sub
fwait
in
adc
pop
daa
inc
fs
imul
shr
sub
daa
push
or
add
jb
adc
ror
in
nop
pop
ja
leave
and
int
dec
in
lock
stc
dec
inc
adc
push
hlt
add
inc
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
