loop
add
jb
mov
repz
daa
mov
mov
xchg
jmp
mov
bsf
push
push
pop
mov
push
mov
cmp
jmp
les
sub
retf
mov
ja
cmp
cmp
cmc
sbb
imul
(bad)
outs
cmp
jb
icebp
xchg
popf
and
out
mov
jle
pop
imul
mov
push
sbb
push
pop
scas
mov
shl
sbb
mov
adc
(bad)
repnz
ds
and
fisttp
ja
cwde
adc
mov
jle
mov
test
push
and
adc
rcl
mov
sub
outs
xor
xor
pop
sub
ret
pop
sbb
and
sbb
lds
push
cmp
xor
jg
push
enter
test
push
call
or
stos
mov
cmc
push
repz
adc
sub
xchg
leave
rcl
dec
stos
lds
sahf
retf
sbb
ins
mov
dec
pop
das
mov
jle
leave
jno
mov
xor
mov
mov
sub
iret
mov
ret
and
mov
stos
adc
les
stos
fisub
daa
aam
mov
xor
nop
cmc
stos
push
out
jmp
pop
daa
pop
mov
shl
and
fnstenv
sub
mov
cmps
stos
xor
dec
pop
xchg
xor
add
inc
(bad)
std
sub
sub
ss
add
push
jb
mov
sbb
jmp
gs
call
push
xor
inc
mov
and
lds
xor
rol
stos
pop
aam
and
xchg
pop
lods
xchg
lods
push
fstp
pop
in
pop
xor
mov
add
mov
inc
mov
arpl
jae
retf
sub
das
mov
mov
sub
sahf
cld
xor
mov
push
in
bound
out
pop
cmp
scas
push
dec
dec
xchg
stos
lahf
les
stos
inc
xchg
cmp
aam
jmp
cmps
jl
call
jge
jns
adc
outs
mov
push
fild
test
mov
sub
cmp
xor
or
push
push
inc
adc
add
aam
xor
cmps
jge
jmp
mov
adc
je
inc
pop
jmp
cdq
xor
test
xor
xchg
adc
xchg
inc
arpl
(bad)
addr16
xor
add
clc
or
aaa
and
mov
loopne
push
mov
sub
mov
push
cld
retf
les
call
adc
push
cld
jmp
jmp
push
adc
pop
inc
clc
jne
movs
ja
jmp
push
pop
dec
push
adc
pop
ins
push
inc
test
xor
add
pop
stos
sub
mov
mov
push
pop
(bad)
push
pop
dec
add
inc
jg
lods
clc
xchg
adc
cmp
push
adc
lods
call
test
js
xor
adc
push
push
pop
lgs
push
cmp
inc
jge
add
aas
or
add
pop
dec
push
pop
dec
movs
test
push
add
adc
inc
push
xchg
sub
daa
fst
(bad)
jb
or
inc
and
cdq
mov
and
adc
cmps
sbb
out
pusha
sbb
psubusw
fnstenv
and
push
mov
psubusw
pusha
lock
mov
sbb
mov
fnstenv
jnp
fnstenv
and
adc
pusha
or
mov
and
call
fist
mul
call
psubusw
and
jno
pusha
sbb
mov
and
cdq
ret
cmps
mov
inc
psubusw
pusha
xchg
movs
push
inc
pop
cdq
cmp
aas
mov
pusha
mov
adc
jmp
sbb
pusha
sbb
mul
push
js
pop
test
gs
mul
pushf
push
pop
cdq
xchg
mov
pusha
lock
dec
lahf
out
and
cdq
pop
cli
pop
dec
push
cmp
aad
clc
mov
inc
fsub
fxch
cmp
jmp
lock
leave
jmp
call
mov
imul
imul
fdivr
jmp
test
jle
jmp
and
outs
mov
xchg
push
adc
jmp
push
dec
dec
push
push
jns
rcr
adc
mov
push
xchg
push
int
div
push
clc
mov
pop
clc
mov
sub
mov
sub
mov
test
out
xor
push
adc
push
loopne
add
cmp
push
dec
in
cmps
jne
jmp
sub
mov
push
push
mov
call
mov
sub
mov
pushf
out
into
adc
mov
test
test
add
clc
mov
inc
push
mov
test
clc
mov
adc
xchg
fisubr
minps
adc
in
aam
or
sbb
jb
pop
push
adc
jmp
push
inc
xchg
inc
add
es
xor
push
inc
stos
sbb
pop
xchg
adc
(bad)
mov
adc
push
push
pop
or
fsubr
dec
or
aad
jl
lods
and
xor
pop
or
add
pop
dec
push
pop
fsub
(bad)
pop
and
dec
push
push
jns
jmp
sbb
pop
sti
xchg
addr16
inc
ja
cmp
jle
pop
sub
add
or
mov
sbb
or
arpl
sbb
xchg
lds
shl
mov
lahf
jl
mov
sbb
jge
add
movs
xor
ins
call
out
iret
pop
jmp
push
mov
mov
xchg
ins
pop
sub
xchg
push
xor
xchg
ss
xchg
mov
loop
pushf
xchg
pop
xchg
ss
clc
std
pop
dec
jns
cmp
jmp
xchg
pop
popf
test
inc
int
jmp
jae
sbb
mov
jno
mov
mov
test
clc
mov
cmp
clc
mov
test
cmp
and
jg
out
jg
out
mov
xor
jmp
push
in
pop
jge
clc
pop
das
push
mov
test
sbb
loopne
stos
mov
test
mov
mov
test
out
stc
je
mov
ret
or
clc
mov
(bad)
movs
(bad)
fbstp
fcmovnb
(bad)
add
mov
lock
rcl
sti
call
mov
inc
mov
ret
ja
or
mov
ret
pop
sub
mov
fcomp
cmp
dec
dec
mov
js
popa
add
fs
ret
hlt
push
aaa
jae
inc
repnz
mov
cli
xor
(bad)
jns
pop
mov
add
dec
cmc
fst
int
pop
stc
cmp
mov
std
mov
sub
out
or
mov
js
popf
or
jmp
test
pop
mov
add
(bad)
mov
pop
pop
inc
stc
mov
xchg
mov
pop
push
jl
lods
inc
ret
inc
sar
pop
retf
jp
dec
clc
cmp
add
aaa
inc
(bad)
add
mov
xchg
(bad)
mov
aad
mov
ret
ja
out
rol
pop
sub
or
mov
sub
push
aas
jbe
dec
les
pop
mov
push
pop
xchg
add
pop
fld
mov
pop
mov
pop
mov
fcmove
sub
sub
movhps
fisttp
xchg
dec
clc
test
pop
cmp
add
adc
jg
cmp
mov
cmp
jmp
push
push
or
mov
repnz
pop
xlat
inc
repnz
sti
sar
xchg
int3
xchg
clc
inc
repnz
test
mov
(bad)
stos
aam
repnz
nop
sbb
stos
aam
repnz
nop
sbb
stos
aam
repnz
nop
sbb
stos
aam
repnz
nop
sbb
stos
aam
repnz
nop
sbb
stos
aam
repnz
nop
sbb
stos
aam
repnz
jne
repnz
aam
mov
pop
jg
and
mov
and
xor
pop
sub
test
or
sub
pop
jns
xlat
out
out
lock
lock
jnp
lock
or
out
lock
mul
mov
cmp
pop
mov
mov
scas
cmps
push
xchg
jmp
repnz
mov
(bad)
fdiv
int3
in
mov
movs
fmulp
mov
xchg
mov
cmp
(bad)
mov
(bad)
fdiv
int3
in
mov
movs
fmulp
mov
add
fcom
out
lods
dec
jmp
call
mov
(bad)
fdiv
(bad)
mov
test
imul
lock
test
sub
or
stos
aam
repnz
mov
icebp
div
sub
out
inc
test
lock
(bad)
mov
(bad)
(bad)
in
test
(bad)
stos
mov
cmp
mov
(bad)
dec
icebp
and
sbb
imul
xchg
and
mov
icebp
out
sub
jo
out
scas
aam
repnz
aaa
cmp
and
cmp
pop
mov
xchg
xchg
aas
sbb
aad
cli
and
or
jmp
aam
sub
cmp
out
sub
cmps
push
inc
(bad)
cmps
xlat
xor
sub
or
and
adc
jmp
mov
xchg
mov
cmp
cmp
scas
or
mov
in
sbb
ror
cmp
jno
jmp
add
mov
jmp
pop
ret
add
dec
push
push
jns
jb
ret
cmp
(bad)
xor
lock
mov
cmp
pop
pop
ret
cmc
(bad)
aam
clc
inc
repnz
lock
xor
stc
inc
repnz
and
inc
test
xor
ret
mov
inc
jmp
jl
jl
scas
inc
ret
out
cli
pop
adc
inc
ret
clc
cmp
mov
pop
cmps
ret
mov
repz
pop
bound
repz
cmp
ds
ret
cmp
sti
dec
in
adc
jmp
sub
ja
rol
pop
icebp
inc
stc
mov
movs
mov
pop
mov
stos
out
cmp
icebp
push
ret
(bad)
add
hlt
pop
jp
call
sbb
dec
cmp
imul
jmp
mov
jb
jb
jns
sub
jns
test
cmp
dec
clc
jns
shr
jmp
pop
xor
push
jge
mov
pop
stos
jns
shr
xor
cld
sub
repnz
jns
mov
clc
cmp
sbb
cmp
add
je
push
and
jno
and
cs
inc
and
ins
jle
fnstenv
stc
popa
mov
xor
jge
call
test
inc
cmp
cmp
retf
leave
mov
jae
mov
js
add
push
push
cmp
ss
push
and
jne
and
mov
mov
mov
push
inc
sub
cli
jmp
jno
and
jno
and
sbb
dec
mov
movs
mov
adc
data16
cmp
mov
mov
jno
cmc
jns
arpl
stc
and
mov
xor
fisubr
jp
mov
xor
stos
sti
push
xor
mov
cli
cli
mov
mov
(bad)
and
mov
push
xor
data16
mov
push
in
jno
and
and
jno
and
imul
cmp
mov
mov
push
and
jno
and
push
and
rcr
rcr
cmp
jno
adc
cmp
or
or
mov
ret
retf
mov
xor
shr
mov
xor
sti
inc
repz
stc
xor
stc
sub
mov
ret
out
cwde
mov
sbb
inc
repz
daa
mov
pop
dec
cmp
test
jp
dec
clc
cmp
cli
pop
ffree
add
ds
aaa
out
(bad)
mov
pop
rol
mov
add
push
cmp
add
scas
sbb
std
mov
sub
and
push
stc
or
mov
sub
aaa
inc
(bad)
(bad)
ret
mov
add
push
(bad)
dec
test
inc
ret
sbb
dec
in
push
cli
sub
inc
jge
mov
sub
aaa
rol
pop
add
aam
cmp
paddsb
ret
push
and
dec
js
dec
out
xor
push
mov
setae
dec
sbb
mov
out
idiv
dec
clc
sub
movs
xchg
imul
aaa
inc
jge
mov
sub
dec
clc
cmp
mov
(bad)
and
les
pop
and
enter
push
mov
cmp
adc
mov
cwde
adc
ret
stc
daa
mov
cwde
adc
aad
xor
jmp
add
rcl
test
aad
or
ror
mov
call
cmp
mov
stc
mov
stc
mov
stc
mov
stc
mov
stc
mov
stc
mov
stc
mov
stc
mov
stc
mov
stc
mov
stc
mov
ret
cmp
in
xchg
adc
loopne
adc
jmp
call
xchg
retf
sbb
ret
jb
mov
jae
add
hlt
xchg
mov
and
jmp
call
xchg
retf
sbb
ret
or
mov
jae
add
hlt
xchg
mov
and
jmp
call
xchg
retf
sbb
ret
sbb
jae
add
hlt
xchg
mov
and
call
stc
lods
adc
mov
int3
imul
stc
out
mov
and
rcl
and
jge
jnp
ret
repnz
rol
stc
out
mov
push
fcom
push
jno
pushf
mov
jno
pushf
mov
fs
bswap
cmp
ret
rol
push
adc
or
jg
stc
mov
adc
cmp
fs
and
add
adc
ret
dec
mov
jnp
cmp
add
mov
add
xchg
lods
adc
xchg
int3
cmp
ret
cmp
jp
ret
or
inc
hlt
dec
jb
jecxz
int3
and
stc
addr16
out
and
add
ins
cmps
call
mov
xor
xchg
(bad)
xchg
jns
(bad)
div
and
xchg
stc
or
popf
mov
sbb
cmp
cwde
add
adc
repnz
and
jmp
shl
(bad)
jecxz
push
jecxz
in
sahf
fld
stc
out
xchg
or
popf
mov
lods
adc
scas
repnz
(bad)
jmp
lds
mov
xchg
not
xchg
jp
or
leave
pushf
mov
jp
adc
cmp
mov
dec
clc
cmp
mov
dec
xchg
inc
ret
add
ret
add
ret
pop
xchg
xchg
mov
inc
int3
mov
add
cmp
pop
dec
mov
js
xor
inc
aad
inc
dec
cmp
jmp
cmp
mov
fwait
cmp
mov
icebp
jmp
mov
add
mov
sub
aaa
inc
jne
mov
sub
dec
and
ret
dec
jns
mov
cmp
xlat
pop
enter
out
dec
add
jne
push
lods
xor
dec
add
mov
cmp
push
ret
test
add
mov
push
pop
cmc
cld
inc
jmp
mov
jecxz
mov
nop
add
sub
(bad)
sbb
dec
mov
jns
push
retf
ds
out
jg
dec
clc
sub
loope
xchg
clc
cmp
cld
dec
out
mov
dec
clc
add
pop
inc
cmp
daa
mov
out
leave
dec
in
pop
sbb
imul
add
xor
std
jno
mov
push
sub
push
ds
scas
push
xor
icebp
sbb
inc
xor
(bad)
ffreep
scas
cmp
mov
pusha
neg
jmp
jae
sti
mov
xor
mov
ins
inc
popa
rol
xlat
xchg
das
fsubr
(bad)
dec
push
pop
jbe
ret
mov
add
jb
sub
pop
jmp
or
jnp
fisttp
addr16
adc
(bad)
xlat
adc
rcl
add
mov
add
mov
add
leave
add
mov
add
mov
add
mov
add
mov
add
fadd
mov
enter
lock
mov
add
mov
add
mov
add
mov
add
mov
add
mov
fld
mov
aad
mov
cmc
dec
out
xchg
adc
mov
rol
cmp
shl
aad
push
stos
mov
retf
int
mov
xchg
push
(bad)
push
loop
aad
lods
outs
shl
gs
jne
outs
xchg
outs
lods
and
dec
xchg
and
push
iret
or
sbb
or
or
or
or
or
frstor
or
movs
push
xchg
mov
ret
add
fmul
mov
aad
lgs
add
or
data16
shl
aad
adc
rcl
add
pop
mov
retf
add
shl
aad
adc
rcl
mov
adc
movs
aad
shl
data16
shl
aad
add
loop
mov
add
test
out
std
push
mov
add
cmp
jns
(bad)
pop
js
js
jnp
jo
jo
push
push
js
xchg
xor
sub
test
jp
dec
xor
into
sub
outs
leave
scas
test
jno
jns
sbb
in
(bad)
cwde
cmp
stc
(bad)
cs
xor
in
sub
add
leave
cmp
(bad)
shr
mov
mov
dec
mov
lock
adc
jns
(bad)
fyl2xp1
xor
xchg
xchg
(bad)
es
xchg
lods
scas
xor
and
xchg
out
(bad)
stos
cmp
jo
scas
sub
add
retf
add
mov
or
stc
sub
cmp
fisubr
test
mov
push
push
enter
mov
jno
jns
sti
fdivr
int
sbb
cmp
(bad)
jo
or
mov
push
pop
icebp
mov
xchg
(bad)
ds
aaa
push
dec
retf
or
push
jl
movs
aaa
or
fdivp
fisubr
gs
lods
scas
in
fadd
lock
lods
scas
inc
cmps
dec
jg
jns
jb
movs
push
jns
add
movs
popf
(bad)
js
inc
xor
push
fbld
push
mov
mov
push
aaa
out
pop
xchg
out
xor
pop
(bad)
fimul
fiadd
inc
jae
jns
pushf
mov
adc
test
sub
push
jge
adc
push
lods
adc
sub
clc
jmp
push
lods
push
jge
pop
xor
out
imul
sub
adc
test
lods
adc
sub
clc
jmp
jbe
xor
jge
dec
clc
clc
jmp
not
pop
xor
in
lods
std
cmps
adc
fwait
lods
xchg
sbb
and
xchg
sbb
test
cmps
jo
ja
xchg
sub
jnp
std
jmp
push
outs
pop
sub
cld
xor
sbb
mov
cld
xor
xchg
stc
xor
in
jo
scas
cmp
fmul
push
or
push
fist
xchg
and
jns
jb
hlt
(bad)
jl
jnp
xchg
movs
fidiv
fsubrp
cmp
xor
call
outs
test
shl
xchg
mov
dec
mov
jo
scas
out
(bad)
aaa
std
jmp
or
mul
dec
inc
push
mov
xor
add
out
pop
xchg
(bad)
and
mov
ffree
pop
(bad)
out
dec
sub
jo
or
aaa
mov
shl
or
push
es
lods
sbb
lea
or
jmp
in
inc
sbb
jns
add
xor
push
add
adc
mov
popa
scas
scas
cmp
and
mov
lods
jle
jns
arpl
mov
xchg
es
into
mul
(bad)
adc
cs
dec
jmp
mov
dec
xchg
sbb
fisub
xor
inc
inc
setnp
jmp
jns
lock
inc
mov
fild
iret
(bad)
in
mov
shl
(bad)
cmp
aad
cs
jmp
dec
rcr
addr16
pop
sar
cmp
fucompp
inc
mov
loop
rcr
addr16
pop
ror
cmp
fidiv
mov
ror
adc
fsub
sub
add
fidiv
pusha
rcr
addr16
rcr
addr16
rcr
addr16
shl
adc
fisub
rol
adc
mov
or
inc
push
fisub
rcr
cmps
inc
or
adc
sub
enter
fisub
mov
or
fidiv
jle
push
ins
xchg
test
or
fisub
sbb
addr16
fisub
fistp
jmp
dec
rcr
addr16
add
scas
inc
(bad)
addr16
rcr
out
inc
les
jno
dec
pop
inc
push
fisub
int3
or
stos
rcr
mov
call
nop
adc
add
daa
rcr
add
cmp
les
dec
inc
sti
pop
addr16
aam
inc
adc
outs
lock
stos
(bad)
fidiv
or
push
popa
inc
hlt
hlt
out
shl
dec
inc
test
nop
add
repz
ror
ins
inc
rcr
mov
jae
addr16
sbb
xchg
cld
pop
addr16
mov
jno
addr16
add
popa
inc
hlt
hlt
out
aam
jae
sbb
iret
and
push
addr16
stc
jbe
mov
pushf
pop
addr16
pop
jmp
ins
pop
sbb
fcom
rcr
cwde
xchg
xchg
cmps
sub
xchg
push
xor
xor
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
or
cs
ret
xchg
xor
fisubr
mov
retf
je
jo
mov
addr16
jb
mov
xor
cmps
push
or
cs
ret
xchg
xor
fidivr
rcr
stc
xor
sbb
outs
daa
or
jo
scas
cmp
movs
xor
nop
push
jno
sahf
imul
(bad)
sahf
mov
xchg
mov
jnp
inc
shl
jo
jnp
pop
fst
(bad)
jae
shr
pop
cmp
jns
mov
add
or
add
mov
jae
movs
mov
mov
unpckhps
xlat
xchg
out
adc
jns
add
dec
fnsave
jb
sub
bound
mov
jns
jo
xchg
es
sahf
sbb
xor
jno
imul
or
out
pop
stos
cmp
pushf
leavew
mov
ret
cmps
pop
imul
fidiv
sub
ror
pop
mov
inc
mov
and
mov
sar
or
lods
sbb
fmul
mov
hlt
cmp
cmps
sub
or
iret
cmps
es
cmp
fdiv
sbb
fimul
inc
(bad)
xor
xlat
xchg
std
daa
and
or
dec
pop
shl
mov
aaa
mov
shr
out
and
fld
jb
in
fist
es
dec
mov
test
push
mov
jmp
dec
push
(bad)
inc
adc
inc
dec
sub
pop
inc
(bad)
loope
dec
call
adc
mov
repnz
adc
pop
jg
push
stc
xor
jnp
mov
add
sub
jns
xor
fdivr
jo
jo
retf
xor
cli
pushf
jne
fiadd
iret
mov
fistp
xchg
xchg
mov
xchg
lahf
scas
jp
lods
sub
ret
or
jae
mov
daa
jb
sub
dec
xor
fcom
mov
iret
into
xor
inc
fldcw
inc
xchg
xor
stos
jnp
fnstcw
sub
stc
xor
aam
retf
add
xchg
(bad)
es
jo
sbb
fdiv
jg
retf
lods
scas
aad
sub
out
or
popf
pop
sbb
lahf
xchg
pop
xor
setns
fadd
xor
stos
fild
adc
mov
test
lods
ret
adc
inc
or
or
mov
mov
ror
stos
cmp
jo
dec
sub
retf
test
pop
dec
aaa
or
xor
rcr
jns
movs
in
sub
lods
fist
iret
scas
pop
jbe
jo
aad
xchg
retf
or
movs
dec
fiadd
sub
aaa
std
psubsw
out
or
jbe
dec
test
pushf
jmp
lods
and
jb
rcr
fisubr
adc
out
out
inc
sbb
ret
ja
inc
sbb
adc
inc
add
test
cdq
(bad)
push
call
inc
retf
mov
call
adc
call
push
stc
xor
jno
hlt
xor
push
sar
jo
jns
jo
jns
jo
jns
jo
adc
retf
jns
jnp
cs
xchg
jns
jo
and
das
retf
jns
cmp
mov
jecxz
jp
push
jns
jo
jns
or
sbb
into
sbb
xor
imul
jns
data16
outs
lock
xor
fldenv
mov
and
jno
jno
jb
jns
jns
jne
jo
in
outs
scas
push
jne
aaa
pop
add
retf
jns
jo
aam
xchg
inc
out
pop
push
ret
call
jecxz
mov
add
std
xchg
xchg
cmp
mov
mov
jo
push
mov
test
and
iret
(bad)
push
bound
test
xor
or
out
ss
add
test
test
dec
test
loop
fdivr
cmps
fmul
jnp
jl
push
jl
out
imul
mov
imul
xor
(bad)
inc
mov
or
pop
add
sar
push
(bad)
xor
mov
ret
jne
iret
ja
jp
adc
pop
aaa
or
fs
mov
mov
xor
out
or
cmp
pop
add
adc
jns
xor
lds
cmp
loope
jmp
mov
mov
fucomi
mov
or
call
mov
or
call
mov
or
call
mov
or
call
mov
or
call
mov
or
call
mov
or
call
mov
or
call
push
iret
xor
mov
jg
or
call
dec
and
xor
pop
call
mov
call
add
or
push
pop
dec
out
mov
lahf
call
mov
outs
in
frstor
repz
add
mov
mov
jge
or
pop
iret
out
inc
cwde
pop
call
in
dec
fst
in
or
mov
pop
dec
cmps
dec
daa
test
push
xchg
mov
add
mov
pop
mov
ins
adc
xor
jl
pop
or
scas
jnp
sbb
lock
jo
outs
stc
cmp
mov
jnp
jns
jo
lock
push
jns
jo
jns
fldenv
jo
jns
jbe
xor
sub
mov
jmp
or
iret
jns
hlt
pop
jns
data16
push
stc
xor
jno
hlt
xor
push
leave
jns
jo
jns
jo
jns
jo
jns
jo
adc
adc
pop
cs
xchg
jns
jo
and
adc
jns
cmp
mov
and
adc
pop
jns
or
adc
sbb
xor
imul
jns
data16
lock
xor
fstp
jo
mov
test
jns
jns
aas
aam
sub
or
mov
bndstx
test
jo
jns
xchg
fcom
arpl
fimul
jb
pop
in
push
pop
mov
xchg
mov
scas
mov
mov
pop
xchg
cwde
test
pop
int3
jns
or
adc
sbb
test
lods
adc
sbb
and
jb
clc
and
push
jns
cmps
fdivr
jnp
rol
call
popf
jno
jns
stos
fdivr
jo
and
lahf
mov
xor
jg
jae
inc
xor
enter
ret
jns
xchg
inc
inc
and
fisub
arpl
sub
lods
scas
adc
jno
ss
push
jg
jns
into
inc
sti
rcpps
adc
mov
mov
push
pop
pop
scas
stos
fisttp
sar
cmovae
mov
push
lock
stc
mov
xchg
mov
stos
cmp
fisubr
into
(bad)
(bad)
xchg
daa
call
aam
out
push
jle
jo
nop
mov
iret
add
call
xchg
(bad)
sbb
jo
sahf
cmp
mov
xchg
loopne
in
fimul
inc
mov
dec
pop
inc
inc
rcr
lds
inc
cs
iret
inc
ficom
in
dec
or
les
sbb
leave
sbb
call
into
dec
adc
dec
mov
mov
mov
(bad)
jmp
sbb
cmps
test
sbb
les
sbb
xor
pop
mov
mov
jo
jns
jo
mov
pusha
iret
cmp
jns
jbe
jo
(bad)
push
jae
lock
jo
scas
and
jo
jns
stc
fsubr
adc
push
lock
ret
mov
fnstcw
push
stc
xor
jnp
cmps
xor
jo
jns
jo
jns
jo
jns
jo
imul
stc
xor
mov
lock
jo
imul
stc
xor
ins
pop
lock
idiv
push
fyl2xp1
xor
jns
mov
cmp
lock
aad
mov
jns
jo
mov
cmp
jns
jo
adc
iret
jns
jb
lods
pop
lock
addr16
fnstcw
cmps
ficomp
xor
jns
cmp
(bad)
mov
xchg
jns
add
add
fiadd
fild
cld
xchg
mov
cmp
sbb
jo
stos
cmp
jb
push
js
jo
or
or
scas
add
lahf
sub
pop
lock
rcpps
fld
fwait
test
jo
setno
jle
cmp
jns
cmps
fsubr
out
fldcw
icebp
xchg
mov
outs
fist
jo
scas
xchg
ja
jo
cmp
jle
and
shl
jo
(bad)
setns
mov
fnstcw
cmps
fmul
cwde
in
out
xor
aad
je
mov
lods
cld
leave
xor
and
adc
or
test
repz
push
xchg
cmps
inc
pop
jnp
add
icebp
cld
xor
or
aaa
mov
shr
xchg
sbb
push
pop
js
mov
es
ror
mov
push
into
(bad)
jno
xchg
test
jae
mov
in
push
xchg
push
sub
ret
jae
je
bnd
sub
add
cld
and
pop
dec
das
cld
adc
or
or
or
jg
pop
aad
in
(bad)
dec
mov
cld
jg
sbb
in
dec
mov
jns
ror
(bad)
pop
mov
add
inc
cs
dec
ret
or
(bad)
cld
dec
inc
cs
ret
or
jg
dec
pop
cs
cdq
dec
mov
cli
add
push
cmp
add
sub
ret
ror
loop
or
push
in
mov
jl
bound
sub
int
add
mov
jl
jo
pop
(bad)
pushf
pop
adc
fnstcw
je
jns
jbe
jns
jo
xchg
pop
stc
xor
repz
repz
fnstcw
cmps
pop
idiv
cmp
jns
data16
and
(bad)
jns
stc
fdivr
mov
std
jns
jo
ins
clc
outs
push
jns
jo
jg
cmp
and
iret
jns
cmp
mov
int
xor
jns
jo
jns
jo
jns
jo
jns
jo
arpl
movs
fdivr
xor
mov
in
or
lods
xor
cld
xor
repnz
sar
jo
call
int3
add
xor
jmp
daa
xor
es
mov
lock
sbb
mov
mov
xchg
pusha
stc
xor
gs
repz
jno
gs
fxch
pop
fst
jo
pusha
iret
(bad)
pusha
daa
jb
pop
(bad)
jns
jnp
push
mov
gs
jo
add
pop
test
data16
push
mov
adc
push
in
pop
es
jbe
enterw
and
jns
jo
outs
jmp
jo
idiv
int3
fdivr
xor
jns
mov
cmc
mov
lock
das
cmp
jle
jle
test
xor
lods
in
xor
lds
mov
stos
and
in
pop
fnstcw
sbb
mov
sbb
xchg
jnp
or
mov
cmps
cmp
lods
or
(bad)
mov
fwait
ins
adc
imul
xchg
arpl
and
pop
stc
xor
stos
imul
addr16
jo
scas
cmp
xor
lods
mov
add
jp
xchg
jne
mov
fwait
mov
pop
(bad)
and
or
ja
adc
retf
out
daa
pop
xor
or
fnstcw
add
mov
mov
(bad)
jmp
or
push
xor
psllq
xchg
mov
lods
jg
jns
sub
(bad)
scas
jg
jns
sbb
push
xchg
add
xor
jo
(bad)
mov
xchg
dec
stc
xor
loopne
test
or
jo
push
xor
scas
add
jb
into
sub
inc
inc
push
add
adc
jo
mov
je
or
and
scas
mov
and
and
mov
aaa
jo
scas
cdq
ja
jp
cld
sub
inc
iret
sub
cmps
cwde
cmc
inc
mov
adc
cmps
scas
or
in
inc
js
iret
rol
dec
scas
scas
ja
sub
leave
sahf
jb
inc
pop
mov
xchg
pop
jns
lods
push
cmp
mov
push
fiadd
mov
rol
iret
jae
pop
imul
cmc
(bad)
sub
inc
mov
(bad)
jmp
cmp
mov
aaa
test
pushf
aaa
test
jmp
jge
xor
test
xlat
aas
test
pushf
mov
mov
loopne
test
pushf
fwait
clc
dec
div
dec
mov
inc
mov
sbb
xchg
cmp
mov
mov
(bad)
mov
aaa
jp
pop
iret
test
push
and
mov
aaa
retf
xor
mov
xchg
test
aaa
push
mov
mov
or
pushf
aaa
xchg
cmp
pushf
aaa
test
mov
sub
lods
and
xchg
mov
aaa
test
mov
add
mov
mov
sbb
and
aas
sbb
sub
pop
call
pushf
aaa
test
push
xchg
sahf
cmp
fdivr
int3
jnp
dec
adc
pushf
xor
lahf
sub
cwde
aaa
mov
out
mov
aaa
test
dec
aaa
push
mov
enter
enter
stos
jnp
pushf
xor
mov
aaa
(bad)
cmp
stos
sbb
push
call
test
sbb
call
and
pop
arpl
test
lahf
leave
test
mov
test
pushf
leave
lods
sbb
pop
xchg
add
ds
popf
aaa
xchg
pushf
pop
mul
and
mov
aaa
sub
pushf
sub
push
dec
ja
and
pop
xor
in
xor
mov
scas
jno
test
test
mov
inc
ss
xor
mov
aaa
xchg
sbb
test
arpl
in
sti
fninit
mov
aaa
dec
mov
sbb
in
(bad)
aam
xor
les
mov
aaa
test
mov
xor
xor
mov
mov
and
mov
aaa
mov
pushf
aaa
test
mov
or
pushf
aaa
or
pushf
aaa
movs
lods
(bad)
fwait
test
cwde
aaa
pop
cmp
and
mov
daa
test
sbb
mov
cwde
mov
mov
sbb
mov
nop
mov
add
stos
ins
mov
add
sbb
sbb
xor
dec
ja
test
enter
fsubr
mov
mov
xor
addr16
aaa
jp
pop
inc
test
frstor
xchg
adc
mov
out
mov
aaa
test
cmp
mov
movs
not
dec
arpl
ret
(bad)
aam
cli
jp
push
and
mov
cdq
xor
mov
loope
inc
ins
push
jns
fld
push
aaa
je
adc
ins
mov
aaa
fdiv
xchg
(bad)
or
sti
test
mov
or
icebp
test
pushf
xchg
mov
mov
fld
pushf
sub
(bad)
adc
sbb
cdq
sbb
pop
mov
(bad)
xor
mov
pushf
std
jl
mov
test
jbe
test
cmp
mov
mov
inc
arpl
mov
mov
pop
test
jle
xchg
cwde
sbb
shl
pushf
leave
test
addr16
sti
jnp
pushf
loope
cmp
pushf
xor
test
mov
dec
mov
call
(bad)
sbb
pushf
mov
aaa
xchg
pushf
aaa
mov
pushf
inc
xchg
mov
jl
(bad)
sbb
mov
test
mov
fld
pushf
sub
clc
popf
sub
xchg
imul
shr
mov
xchg
jge
xor
xchg
out
mov
arpl
dec
test
mov
push
jns
jo
jns
xor
stc
xor
pop
xor
(bad)
retf
daa
jo
ficomp
aaa
test
mov
xor
movs
div
outs
mov
xor
scas
cmp
fcomp
add
xor
sahf
mov
aas
jg
mov
xchg
pusha
push
imul
mov
ins
push
int3
mov
add
xor
fsubr
fnstcw
scas
add
jp
(bad)
iret
(bad)
xchg
pop
ss
push
stos
inc
jno
jns
std
fmul
pop
pop
rcl
sahf
adc
xor
movs
div
push
mov
ins
sbb
or
lods
mov
mov
cmp
es
mov
cmp
jae
mov
lods
scas
sub
stc
mov
int
or
lods
scas
jae
das
mov
mov
or
out
ins
or
pop
pop
mov
ror
bswap
sbb
xchg
out
pop
xchg
add
lea
(bad)
stc
es
add
retf
fisttp
cmovl
scas
stos
loope
sub
xor
cmps
ret
push
xchg
(bad)
scas
daa
(bad)
out
loop
out
mov
scas
(bad)
jo
(bad)
mov
ins
jb
jo
or
out
fidivr
jns
push
stos
cmps
scas
stos
repz
xchg
and
mov
(bad)
cmp
inc
ret
movd
cmps
bound
jmp
pop
into
pop
cli
inc
pop
xchg
pushf
sar
xor
mov
inc
lods
ss
xchg
loope
xchg
loope
xchg
loope
xchg
loope
xchg
sub
lock
inc
outs
jnp
sub
xchg
jo
sub
lock
jb
cmp
test
loope
xchg
and
sub
sub
jo
sub
data16
sub
xchg
or
xlat
or
sti
jg
loope
xchg
pop
fwait
xchg
sub
or
xlat
loope
or
loopne
xchg
xor
jo
sub
movs
xchg
out
xchg
loope
js
icebp
mov
adc
les
xor
sti
ja
loope
ins
cld
push
pop
push
fldenv
add
ja
mov
loope
sub
jecxz
xchg
sbb
imul
sti
lahf
xor
mov
push
mov
or
add
mov
and
sub
add
pop
jnp
fs
add
add
sti
sub
nop
aas
add
xchg
loope
mov
loopne
cmps
pop
aaa
jne
sub
dec
loopne
xchg
xor
shl
(bad)
xlat
loope
sub
test
cs
data16
outs
jno
xor
(bad)
push
xlat
loopne
xchg
sbb
popa
and
sti
lahf
xor
mov
push
mov
test
or
shl
xchg
and
push
mov
in
xchg
loope
xchg
inc
push
sub
push
xchg
or
repnz
nop
xor
dec
aas
stc
add
xchg
pop
cmc
and
call
idiv
lahf
ds
js
push
cmps
jo
arpl
sbb
rol
imul
sti
addr16
jecxz
sbb
pushf
sti
sti
aaa
sub
sti
aas
mov
mov
sbb
xchg
(bad)
jbe
ret
popf
cwde
push
or
pop
(bad)
js
add
out
aas
jnp
bound
pop
(bad)
lods
ret
xchg
sbb
xchg
repz
pop
jnp
fs
add
inc
sub
cmps
nop
(bad)
push
or
jecxz
xchg
aaa
jno
sub
jno
rcr
fwait
ja
retf
xlat
loope
ins
lods
push
fwait
xchg
ror
or
xlat
loope
int3
lods
jmp
test
dec
sub
mov
xchg
out
mov
outs
jnp
jmp
push
sub
outs
mov
jo
sub
xchg
das
stc
lock
jb
cmp
test
jecxz
xchg
sub
ins
xchg
sub
dec
scas
push
xchg
lahf
lock
pop
stc
dec
loope
lea
push
mov
cmps
mov
mov
xchg
push
mov
push
daa
sti
iret
outs
xor
or
ftst
jo
jnp
pop
or
mov
cwde
fistp
pop
imul
xor
xor
repz
ficomp
daa
sti
iret
outs
mov
repnz
mov
in
pop
es
rcr
in
or
jns
sbb
bound
jns
mov
(bad)
jns
jo
xchg
sbb
ins
sbb
rep
mov
lahf
iret
jp
data16
and
ret
into
outs
mov
jo
jns
hlt
fdivr
data16
mov
cwde
fild
es
fld
ss
icebp
inc
fadd
int3
jae
outs
mov
jg
cli
(bad)
xchg
mov
push
mov
add
xchg
pusha
stc
xchg
add
xor
daa
sti
daa
outs
mov
cmp
jo
jns
mov
xor
fwait
xor
add
xor
mov
fdivr
data16
pusha
add
xor
mov
retf
fld
ss
rcl
push
loop
jae
outs
mov
jg
cli
(bad)
xchg
es
inc
into
pop
xor
jo
out
hlt
push
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
data16
loopne
pop
stc
xor
dec
idiv
clc
fnstcw
inc
pop
xchg
jmp
mov
jo
test
loopne
fnstcw
mov
mov
test
loopne
pop
stc
xor
dec
add
cwde
pop
test
loopne
pop
xchg
mov
mov
cmp
outs
jmp
jo
das
mov
clc
fnstcw
ds
stc
xor
out
int3
(bad)
ss
stc
xor
jns
mov
pop
sbb
test
loopne
fyl2xp1
xor
xchg
aas
mov
(bad)
fadd
mov
lahf
xchg
mov
out
retf
(bad)
jno
jns
hlt
fdivr
data16
loopne
pop
stc
xor
scas
pop
mov
clc
fnstcw
stc
pop
xchg
jmp
pop
mov
jo
test
loopne
fnstcw
mov
mov
test
loopne
pop
stc
xor
xor
push
clc
fistp
cwde
pop
test
loopne
pop
xchg
mov
pop
std
cmp
outs
jmp
jo
jb
clc
push
jns
jo
jns
jo
push
cmp
es
hlt
pop
jns
data16
loopne
pop
jp
(bad)
bound
mov
jo
lods
xor
repz
mov
(bad)
es
or
cmp
fyl2xp1
xor
jns
movs
fld
xor
repz
mov
add
lock
loopne
pop
stc
xor
mov
(bad)
daa
jns
xor
xor
jmp
mov
(bad)
fnstcw
mov
xchg
mul
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
outs
jmp
fwait
add
cmp
and
xor
jns
(bad)
fmul
mov
jo
add
pushf
mov
daa
jns
(bad)
fdivr
jo
outs
fisttp
push
jns
jo
jns
inc
(bad)
(bad)
jae
aas
push
cld
fnstcw
sbb
xor
pop
push
in
pop
es
or
mov
stos
xchg
mov
fdiv
mov
stos
popa
in
or
jns
jnp
cmc
mov
cmp
fstp
jnp
cs
xchg
jns
jo
mov
pusha
iret
cmp
jns
jbe
jo
(bad)
push
cdq
xor
jns
fldenv
jo
jns
jbe
xor
stos
push
outs
sti
cwde
sub
loopne
xor
mov
movs
sbb
rep
dec
mov
xchg
mov
arpl
jo
jns
jo
jns
jo
jns
jo
jns
jo
outs
jmp
fwait
add
cmp
and
xor
jns
(bad)
fmul
mov
jo
add
pushf
mov
daa
jns
(bad)
fdivr
jo
outs
fisttp
push
jns
jo
jns
inc
fldcw
sbb
fnstcw
inc
pop
stc
xor
adc
or
mov
jecxz
mov
fdiv
mov
jecxz
in
or
jns
jnp
div
jo
cmp
jnp
cs
xchg
jns
jo
mov
pusha
iret
cmp
jns
jbe
jo
(bad)
push
cdq
xor
jns
fldenv
jo
jns
jbe
xor
stos
push
outs
sti
cwde
sub
loopne
xor
mov
movs
sbb
rep
dec
mov
xchg
mov
arpl
outs
jae
mov
mov
sahf
daa
cmc
ss
cmp
jns
jo
outs
jmp
adc
repnz
mov
sahf
fdiv
lock
addr16
push
fstp
xchg
pop
pop
jns
jo
sahf
aaa
cmc
outs
movs
mov
outs
mov
loopne
jns
in
pop
mov
test
cmp
push
jns
jo
jns
fcmovnu
mov
push
(bad)
rol
dec
jo
(bad)
and
sbb
(bad)
fld
mov
jle
ja
in
cmc
(bad)
into
xchg
and
add
xor
cmp
outs
jmp
jno
jns
jo
std
cmp
outs
jmp
jno
jns
jo
std
cmp
outs
jmp
sti
add
jo
addr16
(bad)
fadd
mov
js
jns
adc
add
call
mov
mov
jns
xchg
fcom
es
test
sti
sbb
or
jo
jns
mov
arpl
sbb
mov
mov
fisub
sub
jo
outs
sti
retf
fnstenv
jo
jns
jo
jns
fcmovbe
mov
mov
jo
or
daa
fnstcw
cli
pop
xchg
cmp
enter
xor
and
fstp
dec
sbb
xor
(bad)
cmp
stc
xor
jns
mov
inc
mov
(bad)
fadd
sbb
xchg
iret
sbb
mov
loope
shl
adc
sub
shl
mov
xor
outs
mov
jno
jns
sahf
sar
mov
fidivr
pushf
fild
into
pop
fst
jo
repnz
cmc
repz
(bad)
popa
fmul
push
lock
jne
fwait
xor
ror
xor
jns
mov
arpl
loopne
into
outs
mov
jbe
jns
adc
int
or
inc
arpl
stc
xor
(bad)
push
xchg
and
leave
repz
xor
mov
hlt
into
jns
arpl
stc
xor
(bad)
push
xchg
and
leave
iret
pop
push
push
mov
sbb
add
call
shl
push
aam
js
jo
xchg
xlat
fsubr
dec
js
jo
or
jno
jns
jl
fcomip
test
push
lock
jne
fwait
xor
ror
xor
outs
sti
retf
fldcw
mov
jge
lock
retf
imul
retf
ja
jns
data16
sbb
shl
push
jp
es
mov
es
jns
jo
mov
hlt
into
jns
fwait
leave
jg
jo
jge
push
xchg
enter
loopne
xor
jbe
js
push
sub
loopne
xor
jbe
js
sub
jo
outs
sti
retf
fldcw
ficomp
aaa
test
sar
cli
pop
xchg
cmp
enter
xor
pusha
and
push
jns
mov
arpl
ja
push
enter
daa
fwait
jae
dec
jo
jge
popf
xor
loopne
xor
jbe
js
mov
es
jbe
js
fsubr
xchg
sub
xor
jbe
js
cld
sub
loopne
xor
jbe
js
sbb
xchg
sbb
xor
jbe
js
cmp
jp
jo
outs
sti
retf
fstp
ficomp
aaa
mov
jns
(bad)
js
jo
ret
mov
fldcw
pusha
fptan
sub
pop
xchg
pop
aam
xor
sahf
daa
in
cli
aaa
mov
outs
(bad)
repnz
iret
xchg
and
aam
xor
std
and
xchg
and
into
jns
jo
or
jo
jns
hlt
fdivr
enterw
add
push
jns
hlt
fdivr
data16
popa
add
into
out
jns
cmp
cs
jnp
jo
jo
push
vmwrite
xchg
sbb
sti
mov
pushf
rol
fisttp
leave
mov
or
mov
mov
fs
stc
cmp
mov
and
fwait
outs
adc
movs
(bad)
shr
dec
neg
stc
xor
inc
xchg
(bad)
es
sbb
scas
scas
jne
cs
mov
ret
pop
sub
inc
in
clts
retf
scas
jg
aam
dec
cmp
stc
xor
sbb
push
jl
hlt
cmp
fidivr
movs
mov
jns
add
push
sbb
mov
stos
sub
psubusw
cmps
mov
mov
inc
sbb
out
lods
mov
les
ret
scas
scas
inc
jbe
jb
inc
sub
jo
xor
jo
int3
fs
scas
scas
add
jo
jne
xor
dec
jns
adc
sbb
test
out
fmul
mov
xchg
std
es
cmp
pop
lods
jle
jns
rol
jae
popaw
pop
cmp
xor
mov
lahf
lods
cmp
ror
aam
dec
mov
fcmovnb
dec
cwde
retf
push
call
mov
cmc
pop
xor
leave
jg
cmps
fstp
imul
dec
pop
lahf
or
jae
fidiv
scas
repnz
mov
push
int
in
(bad)
out
push
sbb
scas
adc
(bad)
sar
cmc
xor
ins
mov
xchg
es
dec
xor
or
jae
ins
stos
iret
pop
mov
arpl
jo
jns
jo
outs
jmp
sti
add
jo
idiv
jo
add
fistp
call
xor
inc
loopne
or
xor
pop
add
jmp
jns
test
cs
jnp
jo
jo
in
js
xchg
cli
aaa
arpl
fist
retf
mov
sbb
inc
add
ins
arpl
ficom
ror
ficomp
std
(bad)
jecxz
mov
neg
dec
push
in
lods
add
in
and
fwait
int
fs
jo
stos
pop
jno
jns
mov
shl
push
js
jo
lock
mov
sub
pushf
xor
pmullw
xchg
out
jp
xor
pop
test
jns
cmps
inc
out
and
fisub
scas
jns
inc
fsincos
leave
mov
mov
dec
std
psubw
push
inc
add
lahf
ss
ss
push
or
mov
ror
gs
stos
jecxz
xchg
lahf
ds
jmp
dec
scas
mov
jmp
jns
test
inc
aas
fnstcw
pop
or
push
nop
mov
aas
icebp
xchg
vpmacsdqh
push
jl
out
jle
scas
jg
sub
jo
inc
pop
dec
lods
jle
jns
fsubr
scas
scas
aas
pop
cs
xchg
std
mov
xchg
es
shl
sahf
cmp
xor
fimul
scas
and
mov
push
aam
rcl
mov
jnp
mov
iret
xchg
pop
push
scas
mov
test
movs
push
sbb
rcl
aam
xchg
movs
jne
or
ds
mov
dec
jge
or
ds
add
loope
fidivr
xchg
pop
mov
(bad)
pop
push
cmps
xchg
fcomp
lods
pusha
pop
pop
scas
xchg
mov
and
jnp
mov
icebp
aaa
das
xchg
cmp
addr16
fistp
cdq
jae
das
xchg
mov
push
ins
movs
adc
jg
pop
push
xchg
push
es
fbstp
mov
arpl
(bad)
out
fstp
int
jns
js
jnp
jo
jo
dec
push
jns
xchg
pop
mov
mov
cs
cdq
scas
or
xor
test
das
jne
xor
pushf
fdiv
into
jno
lods
jp
inc
sub
ror
fild
aas
mov
xchg
(bad)
daa
push
or
js
adc
rdpmc
xor
test
dec
jns
add
test
add
or
sbb
outs
lea
popa
jb
adc
(bad)
out
shl
mov
sahf
repz
lods
scas
test
dec
or
xor
jno
mov
lods
scas
sub
(bad)
es
jno
hlt
cmp
push
pop
and
jnp
adc
and
cmps
xor
scas
lock
(bad)
fldcw
loop
fld
rcr
aas
or
fdiv
or
adc
push
jg
jns
sub
leave
cmps
push
ret
les
sub
xor
stos
fisttp
es
nop
mov
jns
cmp
sub
jb
js
mov
das
cld
iret
jae
call
das
adc
test
sahf
pop
pop
dec
mov
call
out
ret
pushf
push
test
and
arpl
and
shl
pushf
shl
mov
push
xchg
(bad)
cmp
ret
adc
or
stc
xor
xor
jo
jp
jo
jno
jb
jns
jns
repnz
mov
inc
lds
pop
sub
test
inc
or
sbb
adc
adc
fist
cmp
in
(bad)
shr
ss
pop
add
mov
loop
push
jns
cmps
fcomp
cmp
loopne
ret
jae
arpl
jno
jns
pop
fsubr
pop
sahf
enter
cmp
jo
or
outs
fsub
cmps
and
push
jl
hlt
cmp
fdivp
pop
sbb
mov
jns
push
inc
or
hlt
add
out
pop
mov
call
xchg
lock
scas
movs
add
xchg
(bad)
es
leave
lods
scas
sbb
jo
stos
cmp
pop
sbb
mov
rol
cmps
idiv
pop
lock
xor
jp
xor
jle
into
(bad)
bound
lea
push
comiss
push
js
ins
mov
outs
fnstsw
into
pop
push
mov
cmps
lock
test
rol
arpl
lahf
cmps
pushf
test
mov
jl
outs
lods
push
shr
popf
sar
sub
movs
mov
push
inc
rol
pop
cmp
icebp
das
scas
in
add
sbb
add
push
dec
pop
fistp
mov
push
xor
mov
fcmovnu
sbb
sar
jmp
rcl
xchg
push
es
enter
es
push
xchg
outs
stos
(bad)
int3
(bad)
shr
loopne
pop
xchg
addr16
adc
jo
mov
mov
mov
xor
jns
jo
jns
jo
shl
test
fistp
call
xor
(bad)
mov
or
or
jns
jns
adc
scas
jp
xchg
ss
jae
cmp
cmp
mov
fyl2xp1
jns
jb
shr
jns
push
lds
and
iret
or
fwait
push
call
jecxz
es
jbe
jp
jp
js
jo
or
lds
stc
xor
xlat
stos
cmp
shl
inc
nop
neg
std
jp
stos
imul
inc
or
lods
call
stos
or
out
loop
jg
pop
and
addr16
jae
or
and
leave
cmps
sub
cmp
push
jg
jns
mov
mov
scas
add
jo
cmc
push
test
mov
cmps
fimul
inc
pop
pop
jns
add
call
comiss
adc
or
mov
add
push
adc
scas
push
cmp
and
jns
xchg
mov
and
cmp
jg
xor
stos
(bad)
jmp
lods
stos
(bad)
mov
xchg
xchg
es
lahf
xchg
(bad)
pop
scas
jp
(bad)
es
push
xchg
xchg
fidivr
push
or
cmp
and
cmp
shl
cmp
(bad)
popf
std
jge
xor
popf
mov
(bad)
ficom
jno
(bad)
in
repz
xor
fstp
cli
pop
js
js
jnp
jo
jo
pop
vmwrite
xchg
pop
ds
xchg
pushf
(bad)
cmp
add
push
std
sub
jnp
jno
(bad)
add
mov
or
pop
ss
and
popf
loop
adc
shr
out
or
xor
vmwrite
fadd
iret
(bad)
sub
xchg
jae
jns
mov
push
cmp
sahf
scas
or
aaa
jns
iret
fnstenv
ret
jnp
sub
call
aaa
fcomp
out
pop
and
fisub
stc
xor
push
push
push
jne
mov
pusha
xor
scas
dec
add
call
jo
jns
cmps
fnstenv
int
adc
dec
mov
stc
xor
(bad)
jmp
cmps
mov
cmp
fnstcw
push
push
add
mov
or
or
mov
jg
jne
std
mov
(bad)
mov
mov
rol
cli
cmps
sar
jns
stos
cmp
add
xchg
mov
cld
jl
scas
jnp
xor
fwait
leave
pop
push
or
int
fild
loopne
push
sub
cmp
add
ret
stos
mov
mov
or
mov
call
push
imul
sub
call
aas
cmp
outs
retf
leave
push
cmp
xlat
retf
jnp
inc
cmp
daa
mov
xchg
(bad)
into
(bad)
rcr
idiv
outs
jmp
jo
mov
mov
sub
loope
(bad)
jns
jns
shl
jno
sahf
out
fiadd
fbstp
ins
add
and
pop
fimul
xor
jnp
popf
fst
jns
cmp
test
call
pushf
jmp
or
outs
xor
dec
(bad)
shr
mov
jae
arpl
xor
movs
ret
js
jo
jb
fcom
sbb
pop
mov
jecxz
fcom
dec
mov
sbb
and
xchg
cmp
adc
mov
ror
cmp
jecxz
inc
xor
mov
jo
jle
enter
jbe
jo
sub
pushf
dec
iret
push
stc
xor
in
inc
lea
mov
test
aaa
or
mov
inc
scas
lea
or
(bad)
test
adc
and
or
xor
call
jo
add
(bad)
cmp
jns
mov
jns
add
or
mov
mov
(bad)
mul
pop
and
and
test
pop
mov
sahf
dec
mov
cmp
movs
out
test
add
xchg
push
test
and
dec
scas
jp
pop
ss
jae
jmp
and
or
(bad)
fwait
mov
sbb
adc
sbb
jle
lock
jbe
mov
nop
mov
fsub
adc
sbb
xor
jge
jno
out
fwait
(bad)
enter
(bad)
jge
leave
xlat
js
push
aad
fwait
cmp
int
rcr
cmp
fmul
mov
div
mov
test
xor
pusha
cmp
push
movs
shl
xlat
jmp
jmp
or
or
call
add
aad
das
enter
into
dec
mov
push
imul
ja
inc
dec
cs
ror
xor
or
daa
push
mov
sub
pop
je
fwait
and
call
jbe
cwde
shr
xchg
push
jbe
fwait
push
ror
add
and
iret
push
loop
es
arpl
mov
mov
fnstenv
xor
add
xor
jns
jo
jns
jo
ins
xor
ret
mov
mov
jp
xchg
ds
push
test
pcmpeqd
push
jle
jae
loop
jmp
inc
outs
sbb
iret
jle
daa
std
js
adc
ss
jg
jno
mov
sub
jge
and
xor
std
enter
fcmovnb
mov
add
outs
jmp
or
retf
mov
cmp
fnsave
jno
jb
jns
jns
cmp
jo
js
arpl
test
mov
push
ret
or
jns
push
fstp
fiadd
push
loop
test
adc
mov
or
outs
dec
movs
dec
(bad)
shr
stos
xchg
cmps
xor
stos
adc
jns
mov
rol
xor
jge
mov
jb
ret
xor
pop
js
xor
js
jo
inc
loope
scas
scas
or
and
call
xor
scas
out
dec
mov
(bad)
test
ja
scas
scas
or
jp
int3
sub
imul
mov
mov
pop
pop
push
iret
(bad)
es
mov
std
rcl
or
aaa
std
into
or
jecxz
loope
iret
pop
cmp
mov
add
push
sub
rcl
aaa
or
ds
fidiv
sahf
out
inc
push
push
nop
enter
xor
aam
xor
stos
cmp
iret
stos
cmp
inc
push
test
movs
stos
stos
mov
xchg
xchg
or
jns
or
cmp
test
xchg
adc
outs
pop
fist
push
hlt
adc
xchg
out
les
loopne
mov
push
xor
push
fstp
out
mov
div
pop
dec
cld
ror
dec
arpl
movs
cmps
ds
rol
cdq
out
fisttp
out
les
out
dec
push
loopne
push
adc
dec
in
(bad)
dec
push
or
pop
popf
neg
add
mov
sbb
out
pop
lods
push
fdivrp
push
hlt
enter
fs
(bad)
outs
cmps
fcomi
fs
(bad)
outs
mov
mov
dec
test
cdq
out
ffreep
xlat
lock
add
aas
adc
pop
fbld
add
or
xor
add
aaa
popf
or
retf
gs
dec
in
(bad)
dec
push
or
dec
jecxz
push
aaa
jo
xor
hlt
outs
leave
dec
adc
dec
cdq
daa
xlat
xor
or
pop
std
push
in
add
das
pop
std
or
pop
stc
not
pop
std
push
adc
repnz
imul
mov
cld
inc
fimul
call
stos
pop
out
push
sbb
fbstp
data16
push
or
push
je
(bad)
movs
data16
sbb
fmulp
push
test
movs
data16
jge
fidiv
xchg
(bad)
mov
arpl
jo
outs
jmp
jo
lods
shl
test
vprotw
loopne
xor
mov
and
xor
rol
mov
dec
leave
adc
jno
jb
jns
jns
cmp
jno
pushf
and
push
xor
and
pop
cmp
jns
xchg
adc
and
jo
jnp
mov
cmp
jae
jb
xchg
ds
mov
xchg
xor
xor
mov
jmp
(bad)
shr
push
jl
scas
xor
push
ret
scas
jle
jae
cdq
inc
pop
and
cmps
push
add
out
pop
push
sbb
pop
and
jbe
jo
xchg
or
xor
iret
or
test
or
out
das
loop
inc
scas
or
mov
sbb
cmps
pop
jle
jae
cmp
or
or
lods
sbb
and
cmc
(bad)
push
adc
push
push
stc
xor
bound
or
scas
repz
jo
sub
nop
fcmovu
lods
inc
and
or
(bad)
mov
inc
stc
daa
or
cmps
jmp
ins
fld
iret
(bad)
cmps
ficomp
cmp
aam
xor
mov
xchg
add
push
es
mov
call
cmp
jns
xor
pop
xor
xchg
stos
xchg
imul
fist
fbstp
adc
and
mov
rcl
aas
xchg
retf
sub
xchg
jmp
aas
xchg
jmp
aas
xchg
jmp
push
fldl2e
lods
aas
sbb
push
xchg
jmp
fs
push
push
xor
jmp
push
jmp
std
adc
jmp
fsubrp
sub
xchg
jmp
jae
std
sub
adc
cmp
aas
popf
jmp
jmp
jmp
mov
rol
push
cmps
clc
xchg
cmp
sbb
sub
or
aas
inc
in
and
xchg
mov
sub
sbb
mov
jecxz
cmp
lea
aaa
jle
sub
pop
out
shr
xchg
in
es
in
mov
add
shr
mov
ins
daa
cmps
imul
adc
rol
push
sub
xchg
jmp
sahf
imul
adc
rol
push
sub
xchg
jmp
iret
push
rol
mov
sahf
mov
das
xor
cld
and
xchg
push
xlat
iret
push
and
nop
cmc
sub
sahf
jmp
xchg
cmp
xchg
pop
sub
xchg
cmp
push
sbb
rol
push
rcl
adc
ss
jmp
rcr
aaa
xchg
gs
jmp
rol
mov
rcr
adc
rol
push
ss
dec
rol
xchg
adc
lahf
imul
adc
ss
jmp
rcr
clc
sub
test
shr
mov
adc
(bad)
pusha
xchg
or
sub
pop
jmp
xchg
fwait
sbb
out
scas
jmp
adc
xchg
daa
xor
mov
push
sub
lahf
stos
das
aas
xchg
lahf
cld
sub
out
in
shr
mov
in
aam
(bad)
fbld
jbe
in
in
shr
mov
adc
retf
jmp
xchg
adc
rol
xor
rol
push
ss
gs
cld
push
or
shr
xor
xchg
aaa
sub
sahf
ds
push
cld
pop
xchg
dec
sub
sahf
jmp
mov
inc
clc
aas
inc
jmp
xor
jmp
shl
xor
jmp
shl
and
push
cld
pop
xchg
dec
sub
sahf
jmp
gs
cld
pop
xchg
cmp
jmp
inc
adc
aas
xchg
push
and
push
ss
gs
cld
mov
jmp
imul
sar
not
rol
push
cs
xchg
add
in
xor
sub
(bad)
push
mov
mov
rol
(bad)
adc
shr
iret
xor
cmp
inc
xor
rol
push
es
fiadd
sub
push
jmp
jmp
aas
cs
push
rcl
rol
push
movs
shr
ins
and
std
inc
jmp
rol
xor
inc
scas
imul
(bad)
adc
shr
sub
jmp
rcl
sub
add
shr
sahf
popf
adc
sub
sbb
or
and
clc
movs
shr
mov
gs
shr
sahf
adc
shr
cs
in
sub
sub
std
movs
mov
xchg
in
lea
jecxz
shr
pop
int
ins
std
sub
jae
std
mov
push
out
(bad)
out
adc
sub
push
sti
mov
cmp
xchg
or
fisubr
call
ret
cmp
pop
jmp
test
jmp
xor
sub
inc
jmp
xchg
jmp
jbe
in
adc
jmp
adc
jmp
aad
cmp
jp
jmp
push
rcr
jmp
ds
jmp
sar
rol
push
pop
repz
outs
xchg
mov
xchg
int
pop
lahf
cmc
xchg
mov
das
mov
xchg
and
leave
push
imul
adc
xchg
push
jp
and
stc
jns
push
pop
xchg
addr16
mov
adc
sbb
xor
(bad)
ret
shr
xor
dec
dec
out
aas
or
jo
mov
xchg
test
and
xchg
pop
fidivr
xchg
dec
xchg
cli
sahf
les
jo
or
xor
mov
jp
arpl
arpl
or
(bad)
and
sbb
xchg
pop
es
add
push
data16
cli
shl
stos
or
inc
or
cmps
jno
jns
mov
jnp
mov
dec
xor
(bad)
je
and
out
xor
dec
icebp
retf
jp
push
js
jo
dec
push
mov
jo
fs
adc
call
outs
psllw
aaa
std
pop
scas
xor
jo
(bad)
or
mov
ror
xor
ja
inc
add
int3
add
xchg
(bad)
es
pop
push
sar
scas
jo
fdiv
or
mov
fidivr
jns
push
jne
scas
jle
jns
mov
(bad)
(bad)
mov
and
fmul
iret
adc
or
out
cmps
out
xor
lods
or
jno
jns
sbb
sbb
ret
call
mov
es
test
into
(bad)
adc
mov
xchg
mov
jb
push
scas
push
in
and
out
pop
popf
and
cmp
xlat
pop
popf
and
cmp
call
lods
into
shl
int3
xor
lods
into
shl
into
retf
retf
aam
int
scas
int3
call
into
(bad)
jne
into
les
dec
inc
fidiv
inc
dec
jae
pinsrw
add
mov
lahf
test
int
test
das
aad
scas
and
add
(bad)
scas
into
mov
pop
in
lds
cmc
scas
mov
aam
push
aad
fild
cmps
arpl
sub
icebp
scas
enter
inc
inc
arpl
sub
icebp
scas
enter
inc
inc
arpl
into
outs
jle
or
dec
jne
lods
cmp
or
mov
into
ret
or
mov
xor
int3
(bad)
sbb
adc
es
xor
jns
jb
jns
jae
jns
jae
jns
jae
jns
jno
jns
or
mov
jo
jno
jno
jno
jb
jns
jns
call
dec
scas
jnp
cmp
jno
jb
scas
rcr
cmp
inc
jo
jns
in
fldcw
pushf
sbb
rol
sub
ror
mov
inc
es
adc
xchg
aaa
es
or
mov
jo
js
(bad)
push
xchg
pop
daa
stos
jae
aad
inc
sbb
loop
add
xor
mov
repnz
lods
scas
(bad)
mul
inc
jg
lods
or
arpl
adc
cmps
mov
inc
(bad)
cwde
fisub
inc
jge
cmp
jne
std
mov
jp
xor
inc
popf
mov
scas
jmp
ss
mov
scas
adc
jo
jge
mov
and
(bad)
jb
cwde
or
outs
loopne
push
dec
aaa
or
jmp
fdiv
or
sub
bound
in
mov
jo
jno
jno
xchg
into
(bad)
ja
jo
mov
ror
sti
lock
or
out
mov
jb
mov
push
(bad)
shl
xor
int
add
ret
into
sbb
lods
nop
cmp
clc
call
clc
pushf
dec
mov
in
out
in
jle
hlt
xchg
jp
or
inc
cmps
push
clc
push
es
sub
inc
lea
clc
(bad)
es
xor
in
push
out
push
clc
dec
and
mov
adc
xchg
push
shl
test
fiadd
xor
bnd
jo
div
jo
clc
and
jns
(bad)
fsub
jo
jns
sti
fld
xor
gs
cmc
repz
(bad)
fcomp
and
xor
pusha
and
ror
xor
jo
imul
adc
in
(bad)
call
(bad)
es
push
cmc
repz
(bad)
fdivr
es
xor
push
and
retf
fsub
mov
jno
(bad)
adc
iret
pop
xor
jo
mov
cdq
fild
xor
enter
or
push
fnstcw
push
xchg
mov
arpl
jae
push
xor
outs
mov
(bad)
push
xchg
dec
daa
jp
bound
int
shl
cmp
and
imul
imul
iret
(bad)
and
xor
es
(bad)
and
lea
xor
jns
jnp
test
(bad)
jo
jb
(bad)
ret
movs
daa
lods
xor
or
rcr
in
daa
push
jl
es
sbb
jo
jae
lea
xchg
(bad)
sar
jo
arpl
test
and
outs
mov
mov
inc
push
cmc
repz
test
and
jns
mov
movs
sbb
repz
test
and
outs
or
and
and
popa
mov
(bad)
es
hlt
into
jns
data16
add
data16
jno
xchg
(bad)
add
fadd
int
sar
jo
outs
mov
icebp
into
(bad)
leave
(bad)
into
xchg
and
xchg
(bad)
fdiv
lea
xchg
(bad)
xor
jo
jb
lea
xor
jns
jnp
test
(bad)
xor
cmp
and
push
mov
xchg
mov
cdq
fild
data16
test
(bad)
cmp
adc
bound
xor
mov
loopne
daa
jno
data16
es
xchg
dec
jns
xor
mov
(bad)
data16
xchg
xor
xchg
lods
fdivr
xor
mov
cs
jle
in
or
imul
sbb
cld
xor
xchg
je
push
sti
maskmovq
div
mov
xchg
addr16
adc
es
fstp
jnp
test
pop
jns
jo
jmp
fadd
imul
pop
xchg
xor
test
data16
fisttp
mov
jno
jns
jnp
test
(bad)
jo
repnz
outs
mov
fmul
repz
jo
mov
xchg
(bad)
and
int
shl
cmp
and
nop
int
sar
jo
arpl
xchg
fadd
in
or
xchg
cmp
cld
xor
xchg
js
js
jo
jb
lea
xor
jns
jnp
test
vpcomd
xor
leave
push
or
es
jno
jns
jbe
test
(bad)
mov
jb
(bad)
into
xchg
jp
test
(bad)
(bad)
into
xchg
daa
xchg
and
pop
dec
bound
data16
ss
test
pop
outs
mov
mov
adc
ror
test
pop
test
into
pop
fst
jo
outs
sub
and
xchg
(bad)
(bad)
add
into
jnp
jo
scas
and
dec
mov
(bad)
es
hlt
into
jns
data16
xor
xor
pusha
sar
into
cmp
ror
div
jb
jns
cmps
fsubr
pop
retf
js
(bad)
push
xchg
data16
lods
xor
xor
jo
xchg
and
repz
mov
(bad)
es
fiadd
xchg
mov
into
pop
xor
jo
repnz
popa
and
mov
hlt
into
jns
enterw
add
mov
daa
stc
xor
xor
push
xor
scas
cmp
fsubr
xor
in
retf
ds
mov
xchg
out
xor
fild
or
mov
jo
(bad)
pop
fmul
les
stos
dec
mov
scas
jp
std
and
fimul
fwait
ins
pop
out
sbb
sub
xchg
pop
es
push
fcomp
ja
(bad)
pop
xor
jns
cmc
scas
stos
cmp
jb
push
js
jo
lock
pushf
lods
scas
lahf
loop
push
xchg
scas
jle
jae
arpl
jno
jns
inc
fmul
iret
cmps
xor
scas
jo
jns
repz
cmp
ficomp
mov
stos
xchg
bound
mov
sar
aas
pop
scas
mov
hlt
sub
out
ss
(bad)
fldenv
and
fisttp
adc
aaa
cmps
sar
sub
push
jg
jae
xor
loopne
stc
xor
xor
dec
xchg
daa
push
mov
cmps
and
lea
jno
push
jl
(bad)
sub
lods
scas
or
or
inc
fnstsw
jo
or
iret
add
test
lea
xor
push
loopne
test
out
stc
movd
paddusb
out
mov
inc
or
out
add
dec
jmp
call
out
xor
pushf
xor
ins
jmp
out
ins
out
and
out
jmp
mov
xchg
mov
xchg
out
fs
xchg
cmp
enter
aaa
xchg
adc
xchg
ins
cdq
in
mov
inc
out
pushf
push
jne
push
mov
xchg
cmp
jne
cwde
mov
jmp
ins
(bad)
neg
test
enter
jo
jns
fwait
or
cld
xor
mov
and
xor
cmc
fyl2xp1
loopne
or
lods
xor
repz
js
iret
pop
xor
jo
outs
mov
retf
imul
ret
jns
fwait
or
jns
jo
push
and
es
mov
fiadd
into
fwait
or
cld
xor
xor
jo
mov
hlt
into
jns
jo
jns
data16
jo
mov
add
stc
xor
add
xor
adc
jo
scas
cmp
fadd
xor
sub
jb
jp
inc
and
jae
je
mov
jp
lea
pop
enter
jnp
sub
jo
or
xor
add
fisubr
scas
or
xor
call
pop
push
xchg
cmps
mov
or
hlt
jns
cmps
fdivr
jae
in
loop
and
add
pusha
call
push
jns
jmp
ret
jg
jns
mov
loope
inc
les
iret
mov
mov
(bad)
(bad)
outs
and
xor
lock
or
out
pop
hlt
cmp
jo
mov
jne
stc
mov
div
std
push
or
aaa
mov
sar
jo
(bad)
test
scas
scas
inc
loop
mov
(bad)
jns
ficom
dec
lods
add
stos
sub
jns
jne
in
jne
sbb
add
xchg
cmps
es
mov
pop
ins
mov
scas
or
jp
inc
sub
xor
punpckhwd
fadd
dec
push
fimul
cmp
outs
sahf
adc
fimul
inc
mov
pusha
dec
aad
add
shl
scas
retf
sub
mov
and
cmps
push
mov
mov
jmp
jnp
or
jnp
sbb
in
jnp
test
mov
mov
adc
mov
mov
fmul
jg
clc
jae
mov
mov
pop
mov
adc
xchg
out
cli
outs
inc
test
(bad)
pop
adc
dec
push
daa
shl
test
jle
mov
mov
shl
(bad)
mov
xchg
xor
loopne
addr16
scas
add
xchg
repz
push
adc
ret
test
sbb
dec
pop
div
jbe
js
mov
jbe
cmps
push
jg
jae
je
aas
int
and
fistp
hlt
fs
enterw
add
pusha
pop
jmp
aam
je
or
xchg
adc
fcom
push
imul
and
shr
push
bound
push
cmp
(bad)
int3
mov
outs
jmp
lock
cmp
fnstcw
cmps
fiadd
mov
fadd
shl
std
pop
cmp
and
pusha
jns
jb
in
xchg
enter
jg
test
mov
dec
movs
outs
ret
and
(bad)
shr
dec
rcr
stc
xor
inc
retf
scas
scas
push
sub
jae
mov
or
data16
jns
js
or
data16
ficom
xchg
xchg
data16
inc
icebp
in
xor
xor
mov
xor
inc
mov
gs
adc
mov
std
jbe
inc
ja
jo
dec
push
loopne
(bad)
dec
daa
xchg
test
push
sub
mov
push
jl
and
(bad)
test
call
out
lock
xchg
add
jns
jo
push
sub
and
out
iret
xchg
out
lock
or
(bad)
fadd
popf
mov
mov
ror
iret
pop
daa
or
out
jl
jae
fist
leave
add
dec
lock
outs
dec
loop
in
bound
idiv
in
dec
mov
loop
sbb
and
add
dec
adc
loop
xchg
fcomp
clc
sub
inc
xor
popf
mov
fs
bnd
xchg
push
es
and
add
fstp
repnz
js
js
jnp
jo
jo
dec
push
js
and
inc
ret
pop
sbb
int3
or
or
pop
and
push
jp
mov
xlat
lods
(bad)
mov
pushf
cmp
cld
add
ss
sahf
shl
test
adc
iret
cmps
xchg
psubq
dec
rcr
stc
xor
lea
jns
lods
xchg
or
jo
or
jae
jns
mov
sar
shr
inc
punpcklwd
push
xor
or
inc
dec
pop
jns
push
fmul
mov
test
xor
add
out
pop
xchg
mov
ds
xor
out
push
pop
rcl
(bad)
add
mov
sub
cmps
push
jle
jae
popf
inc
ins
and
iret
(bad)
add
pop
dec
sahf
(bad)
stos
cmp
fst
push
and
xor
scas
stos
dec
es
pop
daa
or
out
xor
icebp
nop
lods
or
push
jl
or
(bad)
jnp
cmps
inc
lahf
and
shl
scas
or
sahf
pushfw
jns
fiadd
(bad)
shr
and
pop
and
inc
jg
xchg
ins
dec
arpl
pop
jg
pop
push
daa
xor
or
push
xor
popa
ins
or
pop
sbb
pop
xor
pop
jns
xor
gs
xor
pop
or
push
ins
or
ja
xchg
mov
sbb
pop
and
pop
xor
and
test
xor
jnp
and
xchg
aad
ja
xchg
sub
xchg
jns
sbb
sbb
push
or
and
dec
xor
jno
ins
inc
outs
cmp
ins
outs
push
xor
and
jns
pop
cmp
pop
sbb
or
jne
pop
xor
jecxz
xchg
mov
sbb
jne
pop
xor
sbb
dec
dec
xor
xchg
aad
ja
xchg
sub
xchg
jns
sbb
pop
inc
adc
arpl
dec
xor
jno
ins
inc
outs
cmp
ins
outs
push
xor
and
jns
pop
cmp
jne
gs
adc
ja
ins
dec
dec
xor
add
jns
pop
jno
or
mov
jecxz
xchg
dec
aaa
cmp
jno
std
dec
sbb
imul
(bad)
ins
mov
add
inc
xor
jmp
mov
sub
addr16
xor
mov
cmp
aaa
imul
push
aaa
imul
sub
cmp
and
xor
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
add
cwde
fstp
rcr
js
jnp
jo
jo
addr16
jns
pop
push
pop
retf
add
inc
cmp
or
imul
inc
imul
pushf
pop
clc
fimul
ret
jae
pop
adc
cmp
jbe
jp
cmp
xor
jg
jns
sub
mov
jns
mov
(bad)
cmp
push
and
loopne
cmp
nop
clc
mov
xchg
pop
cmp
sbb
dec
cmc
psubw
push
xor
test
pop
inc
xlat
push
jns
cmps
sar
jns
jo
inc
scas
scas
xchg
add
sti
adc
mov
scas
inc
mov
add
cmps
push
jg
jnp
mov
push
and
iret
(bad)
ja
jo
mov
add
cmps
ret
jae
test
jmp
add
inc
movs
push
call
stos
jbe
or
mul
or
pop
(bad)
mov
add
push
cwde
push
jns
rcr
jnp
cmp
cmps
outs
push
pop
or
scas
cmp
push
add
or
dec
xor
mov
retf
fcom
dec
sub
aas
dec
sbb
iret
dec
sbb
iret
dec
(bad)
xchg
dec
(bad)
xchg
dec
mov
iret
dec
(bad)
xchg
dec
(bad)
xchg
dec
and
iret
dec
(bad)
xchg
dec
(bad)
xchg
dec
rol
das
xchg
popf
fisttp
jne
xchg
popf
fisttp
xchg
dec
push
xchg
dec
(bad)
xchg
dec
(bad)
xchg
dec
(bad)
xchg
dec
(bad)
xchg
dec
(bad)
in
pop
pushf
mov
pop
pushf
mov
dec
pushf
xchg
dec
(bad)
xchg
dec
(bad)
xchg
dec
(bad)
xchg
inc
(bad)
test
push
add
int
and
pop
(bad)
jl
dec
push
xor
cmp
jns
loope
add
retf
std
pop
pop
dec
add
iret
dec
(bad)
xchg
data16
and
nop
push
dec
popf
(bad)
out
dec
(bad)
xchg
dec
push
push
iret
mov
xor
enter
cmps
(bad)
xchg
int
xchg
dec
(bad)
xchg
dec
(bad)
lods
jnp
sub
iret
cdq
cmp
iret
sub
xlat
xchg
cdq
sar
stc
xlat
add
or
ins
dec
dec
js
pop
dec
add
iret
dec
(bad)
xchg
data16
sub
nop
push
iret
dec
(bad)
xchg
in
cmp
xor
aaa
push
push
or
movs
push
(bad)
pop
iret
dec
stc
xchg
fnstenv
pop
ins
dec
dec
inc
pushf
stc
arpl
xchg
add
cld
pop
cmps
rol
dec
(bad)
xchg
dec
movs
xchg
xchg
aas
adc
mov
push
xlat
or
out
(bad)
hlt
jmp
jo
add
xor
fs
aam
repz
iret
ret
cmp
test
dec
(bad)
push
(bad)
dec
xlat
mov
and
push
(bad)
loope
push
mov
sub
mov
push
fsubr
xchg
mov
xchg
mov
in
gs
xchg
ss
pusha
dec
dec
xchg
xchg
dec
movs
popa
xchg
lds
int
xor
dec
pop
in
shr
push
loope
push
ror
leave
ret
leave
mov
(bad)
mov
dec
sbb
or
inc
sbb
iret
dec
(bad)
push
iret
popf
(bad)
xchg
dec
(bad)
adc
add
dec
dec
add
leave
popf
jbe
iret
int
cld
lea
push
sbb
enter
dec
(bad)
int
int
push
(bad)
popf
(bad)
pusha
dec
dec
enter
ja
iret
mov
sub
enter
inc
xlat
pop
iret
dec
xor
xor
lods
dec
dec
mov
xchg
ss
ins
dec
dec
jo
ret
add
sbb
add
add
xchg
ja
jns
cmp
ret
sbb
or
dec
(bad)
xchg
adc
fiadd
dec
add
daa
push
cmps
xchg
inc
lds
retf
add
push
xchg
or
add
sbb
sbb
xchg
dec
push
push
retf
push
xlat
push
mov
fsub
sbb
xchg
dec
push
nop
mov
push
pop
iret
jecxz
lods
push
sub
iret
cdq
cmp
test
push
test
inc
xor
push
test
fimul
mov
int
sub
xlat
and
enter
(bad)
pop
iret
mov
sub
enter
dec
(bad)
xchg
pop
xlat
sub
mov
xlat
pop
iret
aas
cmp
into
fdiv
xor
dec
std
fldcw
push
aas
iret
dec
fld
inc
xor
push
test
ficomp
mov
int
popa
xchg
(bad)
push
iret
popf
push
xchg
dec
(bad)
adc
add
dec
dec
add
leave
popf
jbe
iret
int
cld
push
cmps
rol
enter
cmps
(bad)
xchg
dec
push
int
int
jns
jae
pop
iret
push
stc
or
movs
push
(bad)
pop
iret
dec
stc
xchg
leave
daa
pop
test
xor
scas
dec
dec
jb
lea
push
scas
dec
dec
jp
mov
adc
iret
cmp
or
jecxz
lods
mov
pop
push
loopne
dec
aaa
xchg
pop
and
leave
ret
leave
xor
ins
ror
and
rol
leave
xor
ins
ja
xlat
ins
dec
dec
js
iret
dec
jbe
xor
lods
dec
dec
mov
push
mov
loop
pop
iret
in
cmp
pop
dec
add
les
test
sbb
rcpps
dec
lds
push
sbb
enter
mov
pop
out
cld
jns
(bad)
pop
iret
mov
shl
enter
imul
iret
cmp
in
gs
iret
das
cmp
es
in
dec
(bad)
pop
iret
popf
cmp
or
int
push
ss
xchg
push
es
and
xor
xor
aam
jo
scas
cmp
adc
stos
(bad)
lods
push
popf
scas
and
mov
fsubr
popf
jmp
or
sub
dec
and
add
dec
sahf
lea
dec
(bad)
outs
fistp
(bad)
shr
(bad)
lock
scas
scas
add
xor
(bad)
push
xchg
cmps
es
jns
stos
cmp
sub
jns
(bad)
fsubr
neg
push
daa
xchg
scas
stos
or
jns
add
dec
push
mov
ss
cs
shl
mov
into
hlt
mov
push
jl
cmps
adc
lods
jle
jns
call
sub
and
jb
test
add
pop
jns
pop
imul
xchg
test
jns
gs
shl
push
sub
aaa
mov
shl
mov
push
or
loop
inc
xchg
pop
es
cmp
ss
scas
jmp
ins
js
ret
into
enter
js
jo
push
add
xchg
daa
repz
adc
js
xlat
test
jp
scas
sub
(bad)
scas
stos
sub
es
cmps
es
mov
movs
jns
jmp
stos
mov
pushf
cmp
leave
(bad)
mov
ret
pop
mov
hlt
and
fisttp
idiv
xor
and
fisttp
and
ror
hlt
dec
adc
les
test
je
adc
fnstsw
push
call
jnp
jmp
loop
sbb
int3
xlat
or
jp
jp
out
retf
or
ret
(bad)
out
dec
into
push
test
call
retf
or
or
cld
xlat
adc
outs
cmc
js
in
pop
ror
add
xlat
call
xchg
fimul
and
fimul
and
fimul
and
fimul
and
fimul
and
mov
pminub
inc
ret
pop
pushf
(bad)
fimul
cs
or
and
fstp
movq
(bad)
pop
pop
cmove
fimul
lock
fisub
mov
pop
(bad)
and
and
mov
mov
ja
jp
fadd
mov
pop
fstp
(bad)
and
cmp
inc
xor
cmp
movs
xchg
nop
jne
jo
psubsb
pop
mov
(bad)
aad
ret
pop
mov
stos
xchg
ficomp
ss
(bad)
or
xchg
jmp
pop
aam
and
ret
stos
sbb
int
pop
rol
stos
xchg
(bad)
xchg
fimul
hlt
xchg
(bad)
(bad)
inc
ficom
and
movs
pmuludq
fild
pop
mov
mov
pop
pushf
(bad)
(bad)
movs
xchg
nop
out
hlt
lods
jg
fcom
mov
rdpmc
fisttp
fcom
mov
(bad)
fisttp
fcom
mov
mov
lahf
ret
stos
cwde
fimul
and
lahf
sbb
fisttp
call
xchg
aam
and
jb
jge
ret
push
mov
lahf
ret
stos
cwde
fimul
and
fwait
mov
loopne
and
(bad)
imul
scas
fidivr
sub
pop
cwde
mov
pushf
(bad)
movs
xchg
call
or
push
sbb
xchg
call
je
outs
fmul
and
pop
ret
stos
cwde
retf
sbb
(bad)
and
and
and
fcmovnb
xor
pop
or
sbb
and
fsubp
cmp
xchg
and
fcmovu
pop
xchg
(bad)
into
xchg
or
push
or
call
and
xor
movs
xchg
call
add
push
and
fadd
pusha
xchg
push
and
fisttp
and
aam
jbe
fimul
hlt
in
(bad)
and
cmp
(bad)
jp
and
fimul
ds
push
jno
xchg
or
and
movs
and
pop
cwde
scas
data16
(bad)
and
cmp
mov
xchg
pop
and
mov
pop
sti
movs
xchg
mov
jo
sub
popf
(bad)
cli
movs
xchg
js
in
mov
stc
movs
xchg
pushf
push
(bad)
dec
popf
arpl
hlt
mov
xchg
push
(bad)
(bad)
xor
stc
test
jo
jno
jb
jns
jns
dec
xchg
add
scas
or
cmc
sub
cdq
mov
push
jno
jns
cmc
fdivr
xor
cmp
loopne
iret
pushf
std
jmp
mov
hlt
pop
(bad)
shr
out
push
stos
cmp
fiadd
pusha
push
mov
sar
push
js
jo
adc
stc
xor
or
iret
(bad)
jno
jns
sbb
sub
jns
mov
out
xor
jg
jns
fwait
mov
and
sahf
jbe
mov
push
fistp
adc
push
jns
mov
dec
push
cmps
adc
mov
lea
xor
xor
mov
mov
rcl
inc
mov
or
out
retf
mov
daa
jns
xchg
fmul
ret
mov
xor
iret
(bad)
add
xchg
in
pop
mov
scas
scas
add
repnz
xchg
jne
add
or
out
outs
dec
loope
lods
sbb
and
das
push
xchg
ja
jp
mov
and
scas
xor
and
into
(bad)
pop
daa
retf
or
and
mov
xchg
pop
fild
jle
cmp
(bad)
arpl
or
(bad)
mov
(bad)
ja
lahf
add
cli
arpl
inc
cli
in
je
pop
jecxz
dec
iret
aad
fistp
jecxz
mov
cli
add
add
popf
xchg
ds
imul
(bad)
dec
pop
mov
stc
mov
adc
jns
jo
xchg
(bad)
outs
jmp
or
sbb
fwait
loope
xchg
and
xchg
xor
fisubr
bnd
mov
push
xchg
jl
cld
xor
test
icebp
mov
addr16
fnstcw
cmps
fiadd
xlat
mov
jb
mov
pop
lods
test
jno
jns
mov
arpl
add
sub
adc
jmp
jp
push
iret
(bad)
push
movs
mov
ror
push
jno
jns
sbb
push
push
fiadd
mov
inc
inc
add
shl
xchg
(bad)
or
call
mov
xor
ret
push
scas
iret
cmps
fs
jb
jns
leave
pop
ret
sahf
xchg
(bad)
es
cld
popa
lods
stos
daa
jno
jns
sbb
mov
test
jmp
pop
mov
sbb
idiv
mov
clc
xor
(bad)
xor
xlat
push
push
lods
scas
push
push
and
ror
stos
or
aaa
mov
rol
add
loope
scas
or
sub
cld
retf
xchg
(bad)
sbb
inc
pop
mov
cmps
scas
jmp
es
jo
(bad)
ja
scas
scas
mov
daa
push
dec
fidiv
jo
(bad)
pop
cmps
inc
pop
cmp
retf
(bad)
or
aam
rcl
jns
ret
fstp
out
stos
pushf
add
fild
inc
mov
xor
fimul
les
xor
mov
cmp
mov
mov
mov
int
dec
mov
mov
icebp
xchg
sub
cmp
jns
aas
sub
stos
sub
mov
and
mov
xor
sub
stos
sub
xor
out
sub
sub
stos
mov
out
mul
out
mul
out
mul
out
mul
out
es
outs
div
cs
mov
ins
mul
out
js
imul
imul
loope
ins
js
pop
ins
imul
mov
mul
out
mul
out
mul
out
mul
mov
std
gs
imul
mov
jg
gs
not
in
outs
repz
ins
mul
lods
mov
out
in
not
das
xchg
popf
dec
out
mul
cmc
imul
sbb
pushfw
in
ins
hlt
in
ins
es
in
idiv
dec
fcomp
out
pop
pusha
or
ins
ja
out
mul
xor
jnp
in
ins
loopne
imul
or
pop
xchg
push
inc
not
and
or
stc
jecxz
movntq
out
test
outs
div
imul
in
ins
and
xor
not
xchg
or
mov
pushf
mul
out
and
sti
out
stc
in
ins
mov
jecxz
test
ins
es
outs
test
or
pop
fs
ja
cli
out
in
out
imul
out
in
or
pop
xchg
fisttp
leave
call
jmp
add
imul
das
mov
div
bound
int3
punpckhdq
lea
xor
ja
addr16
cmc
in
jns
in
imul
xor
es
ins
mul
out
div
push
inc
jae
cmc
out
in
xchg
popf
xor
in
test
xchg
fisttp
leave
call
repnz
ins
mul
or
popf
div
sub
mul
loopne
cmc
sbb
out
in
in
outs
ja
xor
in
xchg
adc
ins
not
ins
and
loope
icebp
mov
out
in
in
imul
out
xchg
adc
ins
not
ins
fs
fmul
ret
jg
pavgw
mul
adc
mul
mov
std
popa
xlat
scas
lock
lahf
imul
gs
imul
jo
jecxz
addr16
jno
xchg
icebp
sbb
ja
in
out
in
sbb
mul
mov
repnz
imul
out
and
loope
jbe
ins
lock
jecxz
pavgw
not
fsubr
xor
in
mul
jne
in
xchg
imul
xor
in
imul
xor
in
(bad)
push
in
test
inc
sbb
mov
gs
aas
in
movs
call
out
loope
jmp
imul
loope
ins
and
das
jae
icebp
out
mul
outs
and
loop
imul
ins
lock
push
loop
test
data16
push
sbb
test
adc
xor
in
xchg
fisttp
into
call
repnz
ins
push
sbb
xchg
ins
and
sbb
out
in
xchg
imul
xchg
(bad)
gs
xchg
stos
in
sub
xchg
paddb
in
test
mov
mov
out
imul
pop
adc
mov
lods
xor
repz
jo
jnp
jo
jnp
jo
jnp
jo
jnp
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
xchg
(bad)
es
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
xchg
(bad)
es
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
cmp
cdq
cmp
cdq
cmp
cdq
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
stc
add
lds
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
data16
js
clc
xor
(bad)
fbstp
outs
mov
xor
scas
cmp
xor
add
add
push
(bad)
mov
xchg
pushf
sub
lea
xor
add
xlat
sub
sub
jae
ins
mov
mov
xor
cmp
fidivr
add
pushf
or
jg
jns
stc
inc
mov
pop
retf
js
jo
stos
cmp
jb
push
sub
cs
js
jo
jp
stc
scas
scas
arpl
cs
sahf
data16
mov
aam
out
push
xchg
(bad)
cmp
add
inc
ret
pop
leave
or
out
(bad)
dec
repz
clc
xor
inc
inc
inc
mov
jbe
add
jo
add
(bad)
es
icebp
shl
pop
(bad)
fsubr
loop
fld
iret
(bad)
sbb
xor
jg
jns
ins
clc
inc
scas
scas
inc
mul
jb
lods
scas
jecxz
and
jo
pop
mov
push
jo
sub
sub
add
scas
stos
or
push
and
mov
cs
pop
cmp
bswap
pop
dec
sub
ss
sub
daa
lds
cmc
mov
xor
adc
sub
add
cmp
fwait
pop
aaa
push
dec
aad
dec
cmp
sub
dec
aad
dec
loopne
scas
enter
loop
imul
hlt
retf
out
enter
pushf
cmp
pop
aaa
std
cmp
cmp
(bad)
test
scas
enter
jecxz
aad
in
sub
xor
(bad)
fbld
repnz
stos
call
sbb
sub
out
fisubr
jecxz
adc
std
adc
outs
jmp
jo
lods
mov
(bad)
dec
vprotw
es
arpl
ss
jns
jmp
xor
jo
inc
push
js
adc
cwde
in
xchg
cmp
popf
scas
test
jo
jns
xchg
fsubr
mov
ds
scas
or
jle
or
jmp
sub
es
jo
mov
sub
jns
das
(bad)
scas
pop
(bad)
out
dec
inc
sbb
scas
sbb
aaa
sahf
sbb
lods
scas
inc
push
ss
cli
(bad)
sbb
arpl
stos
jmp
pop
repz
scas
sub
jo
pushf
inc
inc
pslld
cmps
sub
icebp
arpl
jns
pop
pop
cmc
shl
or
stos
pop
lea
adc
push
mov
imul
ins
out
scas
or
fdivr
imul
push
mov
ror
stos
cmp
ds
jl
and
ja
jo
mov
rol
cmp
sub
push
fimul
or
add
cdq
xchg
js
popa
bsr
ja
jp
jp
xchg
(bad)
push
fadd
fadd
sub
les
retf
cmp
adc
stos
xor
mov
mov
inc
lods
xchg
and
daa
inc
add
loope
add
loope
add
loope
add
mov
or
rol
mov
add
mov
rol
hlt
jmp
add
loope
jle
loope
add
sub
iret
loope
add
repz
adc
loope
add
cmp
out
add
popa
iret
or
hlt
rol
in
inc
add
jmp
popa
loope
cmps
jo
inc
add
das
cmps
adc
pop
jmp
cld
sub
push
add
outs
inc
add
imul
add
dec
add
or
xor
dec
int3
or
add
popa
inc
mov
mov
add
jecxz
mov
mov
(bad)
or
jmp
add
loope
jge
loope
push
sbb
mov
(bad)
pop
loope
stc
inc
inc
js
rol
iret
cmp
mov
shl
ror
lock
add
sbb
pop
pop
inc
cld
sub
ins
xchg
in
mov
out
out
or
(bad)
mov
add
loopne
add
shr
xchg
xchg
add
loopne
sub
loopne
adc
inc
(bad)
and
push
inc
add
popa
dec
add
stos
push
mov
inc
add
loope
jns
loopne
add
sbb
jl
dec
add
inc
add
or
add
or
sub
jbe
loope
sbb
fwait
das
add
loope
push
mov
mov
add
loope
jecxz
loopne
inc
movs
loop
add
jmp
add
loope
add
pop
loope
(bad)
sub
inc
adc
xchg
cs
mov
loopne
sbb
add
xor
add
out
push
pop
daa
push
add
xor
jl
dec
add
lods
push
mov
ror
jmp
add
loope
lods
adc
inc
(bad)
cmp
inc
pop
xor
cs
or
in
inc
add
jmp
add
loope
mov
or
add
push
mov
iret
mov
loopne
add
loope
sub
push
inc
sbb
popa
sub
ret
push
test
mov
add
imul
or
mov
loopne
add
inc
cld
pop
xor
cs
mov
loopne
cli
push
outs
inc
add
loope
add
loope
cld
sub
ins
xchg
(bad)
sbb
loope
stc
pop
ins
cs
add
loopne
xlat
pop
or
in
xor
inc
(bad)
pop
xor
pop
or
jmp
scas
or
inc
mov
xor
les
inc
int3
dec
add
cmp
or
inc
dec
sbb
mov
jmp
dec
or
inc
rol
rol
in
pop
add
adc
xchg
xchg
arpl
loopne
shl
rol
in
dec
add
retf
xchg
xchg
xchg
push
sub
std
(bad)
adc
fwait
xor
xchg
xchg
je
loope
rol
in
mov
clc
sbb
jbe
loopne
shl
ret
add
test
mov
clc
xor
xchg
lea
pop
loope
add
lea
pop
mov
add
lahf
inc
add
inc
inc
xor
jecxz
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
inc
mov
cld
js
je
mov
jns
clc
jl
pop
aas
mov
jnp
cld
jle
pop
shr
inc
and
and
add
inc
and
and
add
out
sub
add
add
inc
and
and
add
inc
and
and
add
add
add
inc
and
and
add
inc
and
mov
mov
dec
idiv
mov
pop
cld
mov
mov
push
retf
mov
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
push
mov
nop
mov
jnp
push
cmc
adc
lock
jne
xchg
push
mov
push
cmc
adc
lock
jne
mov
add
es
loope
add
inc
and
and
sbb
mov
bound
arpl
and
add
inc
and
and
lea
mov
out
add
inc
and
and
add
inc
jb
lds
mov
or
mov
push
mov
push
cmc
adc
lock
jne
xchg
dec
mov
std
rol
loop
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
cli
pop
mov
icebp
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
test
xor
add
inc
and
cdq
retf
xor
(bad)
push
outs
xchg
jbe
call
dec
and
and
add
inc
scas
jno
and
pop
cli
aaa
push
repnz
cmp
arpl
and
and
add
inc
fsubr
les
adc
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
not
cmp
and
pop
loope
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
cli
pop
mov
icebp
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
push
ja
out
jge
and
add
inc
mov
mov
mov
icebp
cmp
outs
test
mov
xor
es
cmp
aaa
test
cmps
into
cmps
mov
add
pop
hlt
popa
mov
ror
lea
and
es
loope
add
pusha
mov
and
daa
push
icebp
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
not
cmp
and
pop
loope
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
cli
pop
mov
icebp
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
push
rcr
xchg
xchg
adc
es
mov
arpl
ss
jl
adc
sbb
outs
mov
adc
pop
and
mov
push
daa
push
jg
cmp
xor
push
icebp
pop
pop
hlt
popa
mov
imul
(bad)
and
add
test
push
icebp
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
not
cmp
and
pop
loope
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
cli
pop
mov
icebp
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
push
stc
pop
inc
cwde
dec
scas
cld
nop
jns
add
inc
int3
mov
jp
or
out
hlt
outs
mov
push
repz
pop
lods
or
xor
popa
jno
fs
sub
pop
pop
hlt
popa
mov
aad
stos
cmc
and
cdq
jmp
mov
sbb
sub
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
not
cmp
and
pop
loope
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
cli
pop
mov
icebp
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
sbb
pop
pop
not
mov
adc
xchg
inc
and
push
movs
mov
movs
idiv
popf
pop
hlt
outs
test
sbb
pop
pop
scas
mov
xor
shl
jnp
push
std
sub
pop
pop
imul
xor
shl
and
sub
psraw
imul
mov
sbb
sub
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
not
cmp
and
pop
loope
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
cli
pop
nop
xchg
imul
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
sbb
pop
pop
cli
mov
xor
inc
and
fstp
loope
loope
ret
gs
popa
mov
sbb
pop
pop
lods
mov
xor
shl
jnp
push
std
sub
pop
pop
cld
mov
jp
hlt
fnstsw
inc
and
mov
dec
loopne
jmp
sub
popa
xor
icebp
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
out
aas
loopne
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
push
mov
call
adc
mov
sbb
sub
pop
pop
hlt
outs
mov
sbb
pop
pop
imul
mov
sbb
int
jp
add
mov
cmp
loope
stos
mov
imul
icebp
pop
pop
lods
mov
xor
shl
jnp
push
std
sub
pop
pop
(bad)
xchg
xchg
add
inc
mov
(bad)
retf
sbb
sbb
outs
mov
sbb
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
popa
mov
iret
fisttp
loopne
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
or
les
xchg
mov
inc
inc
imul
mov
sbb
sub
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
dec
mov
scas
and
sar
mov
sub
pop
pop
lods
mov
xor
shl
jnp
push
std
daa
push
call
pop
ss
xchg
mov
push
add
push
pop
and
lods
mov
icebp
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
sbb
pop
pop
(bad)
pop
mov
mov
out
xchg
addr16
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
fwait
scas
xchg
loope
mov
test
sub
adc
mov
sbb
sub
pop
pop
hlt
outs
mov
push
adc
add
out
iret
lea
sub
pop
pop
lods
mov
sub
shl
jnp
push
std
sub
adc
sub
add
add
jbe
sbb
push
icebp
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
popa
mov
push
xlat
sbb
mov
arpl
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
test
lock
add
and
adc
popa
xchg
sbb
pop
pop
hlt
outs
mov
sbb
pop
inc
mov
add
push
sbb
push
and
or
sub
pop
pop
mov
xchg
adc
push
ret
hlt
popa
jge
push
std
and
arpl
popa
in
and
test
push
into
inc
std
mov
enter
mov
sbb
sub
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
popa
mov
jmp
and
pop
mul
arpl
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
outs
sub
or
int3
mov
mov
sbb
sub
pop
pop
hlt
outs
mov
sbb
pop
pop
retf
sbb
pop
out
sub
jl
sbb
pop
mov
xchg
ins
in
mov
dec
mov
sbb
das
sub
psubd
mov
lods
add
popa
sahf
imul
mov
sbb
sub
pop
pop
hlt
outs
mov
push
repz
pop
fadd
mov
aas
js
arpl
mov
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
sbb
xchg
out
pop
jl
pusha
sbb
pop
imul
mov
sbb
sbb
(bad)
pop
test
cmp
or
in
enter
push
and
popa
ret
les
ins
aaa
inc
(bad)
cmp
hlt
imul
pop
iret
popf
fcomp
inc
pop
hlt
popa
imul
hlt
popa
mov
pusha
pop
sti
sub
adc
mov
sbb
and
sbb
ds
xor
test
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
rcr
loope
add
inc
fcomp
lds
cli
sti
addr16
imul
mov
sbb
jmp
in
and
scas
xchg
dec
inc
repnz
sub
or
loope
mov
pushf
ds
jno
inc
mov
dec
inc
push
add
mov
sub
push
(bad)
aad
call
push
call
dec
(bad)
push
repz
pop
add
mov
fsubr
jmp
mov
aas
and
and
cmps
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
dec
test
xor
fs
jae
push
and
and
aaa
xchg
in
(bad)
rcr
xchg
and
mov
cmp
hlt
outs
cdq
repz
std
jmp
xchg
xor
js
addr16
inc
mov
dec
mov
icebp
jg
les
sti
hlt
jecxz
sbb
mov
jmp
fs
pop
push
iret
pop
sub
push
cmp
inc
push
jecxz
sub
push
xlat
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
data16
cmp
jno
mov
aaa
or
cdq
jge
and
add
xchg
aam
push
inc
xor
icebp
minps
pop
xchg
sbb
sbb
or
inc
jne
shl
repnz
aam
xchg
ins
shl
aad
pop
dec
daa
cld
sub
repz
jae
mov
sbb
adc
mov
das
std
mov
mov
and
push
mov
sbb
lds
xor
adc
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
in
jo
loope
shl
stos
mul
mov
sbb
and
movs
stos
(bad)
into
sbb
pop
add
arpl
mov
cdq
into
outs
sar
inc
mov
sbb
sbb
add
data16
pop
test
dec
mov
das
pop
imul
pop
outs
out
(bad)
gs
test
lds
sbb
pop
pop
fcom
mov
add
and
ja
jae
in
imul
shl
neg
test
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
rcl
std
test
add
outs
xor
repz
movs
cmps
outs
std
cmc
ror
ins
fild
inc
push
pop
ins
pop
adc
adc
xchg
ins
jl
outs
aas
fwait
push
add
popa
je
mov
add
arpl
xchg
js
arpl
sub
add
push
jl
shr
xor
shl
xchg
stc
jp
pop
(bad)
mov
mov
loope
icebp
pop
pop
imul
mov
sbb
sub
pop
pop
cli
arpl
(bad)
jle
pcmpgtd
and
arpl
inc
add
loope
add
inc
and
and
add
inc
and
pop
mov
jmp
pop
hlt
outs
mov
sbb
pop
pop
imul
mov
sbb
and
rcl
enter
push
push
std
loope
loopne
xchg
stc
arpl
inc
and
and
add
inc
and
dec
(bad)
in
and
and
add
inc
and
cmps
mov
loope
cmp
and
popa
add
std
fstp
xchg
mov
push
icebp
pop
pop
hlt
outs
xchg
sbb
pop
pop
hlt
mov
(bad)
jbe
push
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
xor
mov
outs
test
sbb
pop
pop
hlt
outs
mov
push
repz
pop
(bad)
push
xchg
das
aam
add
xchg
jns
add
inc
and
and
add
inc
and
dec
(bad)
in
and
and
add
inc
and
and
repz
jg
sbb
cmp
dec
imul
mov
sbb
sub
pop
pop
hlt
outs
mov
sbb
pop
pop
repnz
mov
cmp
jno
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
mov
test
sbb
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
popa
mov
add
cdq
sti
mov
xor
inc
and
and
xchg
adc
sbb
js
out
outs
xor
jae
inc
shl
arpl
sub
xchg
scas
mov
xor
push
add
pop
pop
hlt
popa
mov
sbb
pop
pop
hlt
outs
mov
sbb
pop
push
outs
imul
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
test
sbb
pop
hlt
outs
mov
sbb
pop
pop
imul
mov
sub
or
(bad)
jne
jmp
in
arpl
inc
and
and
add
jl
mov
xchg
cmp
iret
aas
inc
fistp
add
inc
and
popf
pushf
xchg
adc
popa
jae
popa
(bad)
xor
cmp
sbb
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
adc
mov
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
call
xchg
xchg
add
jecxz
cli
pop
mov
pop
push
std
sbb
pop
mov
and
sbb
jnp
mov
add
inc
repz
inc
and
test
cmp
int
inc
fnstsw
jo
xchg
cmp
sar
inc
mov
stc
push
bound
xchg
mov
out
sbb
(bad)
pop
addr16
pop
icebp
pop
or
sbb
pop
mov
pop
push
call
dec
cli
pop
mov
add
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
xchg
pop
lds
arpl
pop
and
inc
mov
add
and
jns
mov
sbb
imul
sub
test
arpl
inc
mov
xchg
push
add
inc
mov
add
inc
mov
or
and
mov
loope
inc
jl
sub
outs
mov
arpl
mov
xchg
popa
(bad)
and
mov
pop
cmp
jae
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
mov
pop
inc
or
pop
loopne
jmp
gs
test
aaa
aas
(bad)
inc
xchg
outs
add
inc
mov
add
inc
mov
add
int
and
pop
jne
cmps
sti
rol
mov
loop
mov
scas
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
mov
mul
or
hlt
jmp
add
sub
retf
mov
mov
(bad)
ds
mov
xor
inc
xchg
outs
add
fnstsw
outs
add
cmp
jl
xchg
outs
add
sub
(bad)
pop
xor
add
jae
adc
jmp
movzx
out
scas
loop
pop
mov
(bad)
arpl
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
fsubp
(bad)
mov
pop
or
sbb
mov
pop
icebp
and
icebp
adc
xor
loopne
cld
pop
mov
inc
repz
out
jl
xchg
ins
jg
fcmovu
out
cmp
add
mov
dec
add
neg
xchg
sbb
addr16
pop
adc
pop
pop
cli
pop
test
adc
adc
pop
cmp
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
pusha
mov
sbb
adc
mov
sbb
sub
pop
pop
imul
scas
jb
inc
neg
xchg
loope
in
fstp
loopne
sub
daa
inc
dec
push
lds
jb
xchg
inc
fst
jnp
cmps
fist
adc
mov
in
mov
push
dec
(bad)
addr16
shr
icebp
repz
imul
mov
sbb
sub
pop
pop
hlt
outs
mov
sbb
adc
jecxz
(bad)
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
xor
in
jns
mov
sbb
daa
push
icebp
pop
pop
hlt
outs
mov
sbb
pop
pop
imul
mov
sbb
cmp
jb
push
add
and
rcr
loope
add
test
inc
xchg
outs
add
xchg
mov
sbb
imul
sbb
mov
retf
xchg
retf
test
sbb
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
sbb
pop
(bad)
mov
sub
arpl
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
mov
arpl
imul
mov
sbb
sub
pop
pop
hlt
outs
mov
sbb
pop
pop
(bad)
mov
repz
pop
cwde
jge
stc
dec
repz
add
inc
and
and
add
mov
xor
dec
jl
mov
xchg
ss
cmc
call
and
pop
pop
add
inc
and
and
outs
icebp
cmp
or
cmp
add
mov
sbb
sub
pop
pop
hlt
outs
mov
sbb
pop
push
shl
xor
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
movs
adc
loopne
repnz
jnp
hlt
outs
xor
hlt
popa
mov
sbb
pop
imul
push
sbb
inc
pop
hlt
pop
xchg
mov
inc
and
and
sbb
cmp
fnstsw
or
(bad)
es
inc
add
inc
and
jmp
mov
or
outs
mov
daa
or
int
sbb
adc
mov
sbb
sub
pop
pop
cli
pop
xchg
pop
push
in
adc
(bad)
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
push
lds
jle
out
pop
adc
sbb
mov
sbb
sub
pop
pop
imul
mov
call
pop
fs
pop
add
adc
rol
inc
repz
inc
and
and
add
inc
and
fisttp
xchg
inc
and
and
add
inc
and
fwait
mov
loope
adc
inc
sti
popa
adc
je
adc
add
sbb
outs
mov
sbb
pop
pop
imul
mov
in
jp
adc
and
and
inc
add
loope
add
inc
and
and
add
inc
and
arpl
loopne
xchg
loopne
jns
outs
xchg
mov
sbb
sub
adc
pushf
mov
cmp
and
inc
cld
xchg
inc
dec
pop
dec
cmp
and
mov
mov
arpl
inc
and
and
add
inc
and
call
arpl
and
and
add
inc
and
xchg
mov
loope
or
adc
stos
addr16
call
xor
fbld
test
pop
dec
mov
sbb
daa
push
icebp
pop
pop
out
scas
mov
mov
mov
outs
(bad)
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
rcl
inc
push
pop
popf
in
pop
pop
xlat
push
mov
je
mov
inc
int3
arpl
aam
push
ins
mov
std
cmp
mov
sbb
out
popf
imul
cmp
xor
add
or
stos
imul
lea
and
repz
pop
xchg
jnp
arpl
addr16
and
inc
or
je
mov
sbb
cmc
loope
pop
jnp
loopne
mov
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
js
push
adc
ror
and
es
loope
dec
jecxz
in
aas
xchg
mov
push
sti
adc
mov
sbb
aas
jecxz
fsub
test
xor
adc
icebp
xchg
push
xlat
xchg
retf
mov
xchg
lahf
mov
or
das
cs
mov
and
cli
gs
mov
sbb
sub
stos
sbb
push
fdivp
test
add
inc
loopne
lds
pop
inc
popf
(bad)
scas
mov
pop
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
mov
idiv
inc
jl
lds
stos
loopne
and
fs
lds
add
mov
sbb
fldcw
push
mov
add
loop
sub
adc
test
dec
and
pop
sbb
and
inc
dec
cli
pop
mov
sbb
repz
imul
sbb
adc
sub
jns
jb
push
and
and
int3
xchg
aas
das
and
es
loope
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
test
or
dec
and
repz
outs
mov
cmp
pop
popa
(bad)
gs
loopne
cmc
xor
repz
ror
cmc
mov
int
mov
adc
ret
mov
jmp
hlt
popa
aas
test
repz
pop
cli
xchg
sbb
pop
pop
imul
mov
loope
cmp
sbb
bound
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
mov
xchg
mov
pop
shr
sbb
adc
mov
sbb
daa
push
repz
pop
ficom
test
adc
sbb
mov
sbb
sbb
int
inc
pop
or
sbb
jns
(bad)
out
imul
or
sbb
add
push
pop
test
imul
mov
sbb
daa
push
icebp
pop
pop
hlt
outs
mov
sbb
pop
jno
push
xchg
and
lods
(bad)
outs
arpl
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
mov
mov
aas
dec
imul
mov
sbb
sub
pop
pop
hlt
outs
mov
push
add
inc
jle
mov
or
mov
dec
xor
mov
sbb
dec
inc
icebp
mov
outs
inc
pusha
fwait
repz
add
xor
inc
jl
xor
gs
sub
pop
pop
hlt
outs
mov
push
repz
pop
cli
pop
mov
mov
inc
outs
xchg
push
icebp
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
xor
pop
loope
pushf
xchg
addr16
iret
and
hlt
outs
xchg
sbb
pop
pop
hlt
outs
mov
sbb
adc
mov
mov
fwait
cli
add
cmc
daa
push
call
push
add
or
adc
jmp
sbb
daa
push
icebp
pop
pop
call
sar
and
lds
popa
daa
push
icebp
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
popa
mov
or
adc
test
fdiv
lahf
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
mov
aad
mov
mul
mov
sbb
sub
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
sbb
adc
jae
inc
cmp
pop
in
jg
hlt
ins
imul
xchg
mov
sbb
sub
pop
push
fmul
and
icebp
add
test
out
jge
mov
sbb
pop
cli
pop
mov
add
stos
stos
push
icebp
adc
mov
sbb
sub
pop
pop
hlt
outs
mov
push
icebp
pop
pop
add
mov
nop
gs
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
push
mov
pushf
mov
jns
sbb
adc
mov
sbb
sub
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
popa
mov
xchg
out
pop
mov
gs
daa
pop
hlt
outs
test
push
in
pop
das
into
cmovs
pop
sti
add
test
(bad)
mov
sbb
pop
pop
hlt
popa
mov
outs
jbe
in
mov
dec
inc
cmp
les
cs
sbb
hlt
outs
xchg
sbb
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
popa
mov
add
cmp
and
pop
loope
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
cli
pop
mov
icebp
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
popa
mov
xchg
(bad)
cmc
inc
cmps
ja
jg
xchg
hlt
outs
mov
push
out
pop
xor
daa
dec
and
pop
leave
gs
test
sbb
pop
imul
scas
jo
call
shl
and
jmp
and
outs
mov
sbb
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
repz
loop
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
cli
pop
mov
icebp
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
sbb
pop
pop
repnz
xchg
mov
les
push
arpl
mov
(bad)
sar
icebp
ret
sub
adc
mov
sbb
sbb
xchg
loope
or
and
pop
fldenv
aad
dec
or
adc
mov
adc
pop
daa
in
mov
mov
loope
movs
cli
xchg
outs
mov
sub
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
not
cmp
and
pop
loope
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
cli
pop
mov
icebp
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
sbb
pop
push
call
add
inc
lods
iret
(bad)
les
xor
aas
pop
cli
arpl
sbb
ins
xor
aas
xchg
and
add
mov
inc
push
inc
xor
add
outs
xchg
(bad)
loope
and
es
loope
imul
mov
sbb
sub
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
not
cmp
and
pop
loope
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
cli
pop
mov
icebp
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
sbb
adc
and
pop
add
inc
and
jmp
xchg
icebp
out
fiadd
xlat
scas
(bad)
push
mov
arpl
and
add
inc
and
push
add
loope
mov
imul
pusha
arpl
and
and
pop
jg
mov
jg
mov
sbb
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
not
cmp
and
pop
loope
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
cli
pop
mov
icebp
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
outs
mov
push
test
out
mov
inc
add
inc
and
jae
add
push
inc
jl
lods
pop
int
xchg
adc
ss
ficom
xchg
push
lods
dec
pop
test
xor
rcl
xchg
bound
aas
jae
outs
pop
xchg
sbb
arpl
and
add
test
sbb
sub
adc
mov
sbb
sub
pop
pop
hlt
outs
mov
not
cmp
and
pop
loope
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
hlt
pop
mov
icebp
pop
pop
hlt
outs
mov
sbb
pop
pop
hlt
popa
mov
or
out
and
es
loope
add
inc
jb
(bad)
cld
mov
test
dec
sub
test
out
add
inc
dec
fdiv
fild
in
add
into
dec
add
adc
icebp
push
aad
(bad)
sub
bound
and
add
lods
into
rcr
jnp
adc
sbb
outs
xchg
sbb
pop
pop
hlt
outs
mov
not
cmp
and
pop
loope
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
push
mov
cwde
or
add
out
add
mov
push
add
out
push
push
mov
pusha
sbb
out
retf
lods
lahf
sbb
xchg
and
add
xchg
out
xchg
ror
call
mov
ficomp
lods
cwde
call
test
sub
icebp
stc
aaa
imul
lods
xchg
sbb
xchg
and
add
inc
mov
lds
cmp
or
push
mov
push
add
out
add
mov
push
pop
jecxz
xlat
ror
loop
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
(bad)
ja
xor
pusha
jno
dec
lods
sbb
and
mov
je
mov
fs
(bad)
jmp
and
and
add
popf
(bad)
cld
inc
cli
(bad)
lahf
mov
lock
sub
clc
mov
das
sub
xor
cld
mov
loop
movs
sub
mov
adc
xchg
mov
and
add
inc
and
inc
jg
loop
popf
push
mov
dec
and
mov
push
dec
and
arpl
and
pop
loope
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
or
lds
mov
in
push
aam
inc
sar
in
push
aam
inc
sar
test
and
and
add
inc
mov
imul
jl
or
mov
push
adc
push
add
jmp
push
rcr
cmps
push
mov
xor
push
and
mov
addr16
and
add
inc
and
and
ret
std
push
aam
inc
sar
in
push
aam
inc
sar
in
and
es
loope
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
std
sbb
xor
push
addr16
or
cmps
imul
fstp
mov
sub
jo
or
loopne
fs
(bad)
cmp
dec
push
cmc
xor
mov
mov
mov
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
shl
stc
and
push
push
jo
pop
clc
jo
jle
sbb
mov
gs
adc
sub
sub
adc
jb
pop
jb
sbb
sti
outs
xchg
or
aam
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
sub
wrmsr
rcl
popa
rcr
mov
sbb
pop
pop
add
sbb
cmps
add
pop
inc
adc
push
adc
mov
pop
mov
adc
out
gs
push
scas
imul
push
test
sbb
pop
mov
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
cmp
sbb
mov
xor
out
pop
pop
cld
jno
inc
sbb
leave
adc
xor
clc
int3
dec
addr16
mov
sbb
push
pop
jo
pop
sbb
in
sub
add
ret
push
dec
retfw
xchg
and
test
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
cmp
(bad)
push
std
jmp
cmp
aaa
ror
jo
cdq
rep
push
xor
mov
ror
mov
and
fldcw
mov
sti
mov
cmp
add
cmc
sub
mov
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
(bad)
jmp
fwait
inc
pop
sub
and
out
xor
sbb
popa
int
cmp
adc
pusha
call
sub
jnp
lds
xor
outs
call
das
fild
cs
adc
arpl
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
fdiv
jbe
pop
sub
sbb
push
lods
loope
mov
jne
push
mov
jge
inc
xor
jecxz
mov
cli
dec
aas
inc
mov
jne
loop
and
addr16
mov
jg
dec
fnstcw
pop
or
jl
bound
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
adc
lds
xor
pop
aad
icebp
ja
dec
aad
pop
lods
ins
adc
mov
push
push
arpl
inc
mov
stos
or
popa
xor
push
fcom
add
lea
push
mov
(bad)
sub
ins
sub
bound
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
je
inc
push
pushf
adc
sub
push
fild
scas
inc
adc
stos
cmp
push
out
pop
scas
dec
jge
and
arpl
int
clc
add
jmp
and
xor
jbe
push
and
pop
scas
inc
adc
iret
or
dec
lods
or
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
arpl
mov
mov
jns
ror
scas
cmp
test
adc
xchg
stos
mov
aas
outs
hlt
mov
(bad)
mov
push
jnp
jo
lock
dec
mov
and
in
pop
sbb
or
shl
dec
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
test
rcr
adc
(bad)
retf
inc
and
and
outs
jmp
add
leave
add
inc
mov
add
test
and
and
jb
pop
aaa
cmc
jmp
(bad)
arpl
into
scas
int3
out
or
mov
jne
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
repnz
popf
loop
push
sub
mov
jae
and
add
inc
and
and
mov
in
or
invd
add
xchg
add
(bad)
retf
and
add
inc
and
and
add
push
sub
dec
push
fs
cld
mov
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
fdiv
js
lea
popf
and
add
inc
(bad)
lds
xor
xor
xchg
cmp
cmp
or
inc
xor
pop
jnp
into
cmps
loopne
mov
and
and
jg
cmp
call
arpl
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
ret
jns
sub
les
jb
or
das
loopne
cmp
sbb
dec
xchg
sub
xchg
fisub
hlt
sbb
mov
pop
scas
fadd
and
imul
cmc
addr16
pop
push
adc
ins
arpl
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
sub
add
cld
mov
sub
xor
repz
movs
call
mov
xor
bound
push
add
push
fadd
xor
xlat
loopne
push
push
mov
xchg
adc
call
add
clc
imul
inc
bound
pop
(bad)
arpl
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
test
sbb
sbb
mov
retf
cdq
(bad)
frstor
arpl
std
test
scas
add
repz
and
outs
sub
fld
ins
sub
outs
mov
retf
jecxz
and
es
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
jb
lds
sub
icebp
outs
or
popa
and
add
inc
bound
pop
(bad)
inc
and
and
add
mov
push
xor
xchg
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
test
nop
fisttp
sbb
add
jmp
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
test
and
and
bound
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
test
cmc
xor
xchg
fsub
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
ins
ss
enter
bound
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
jle
lds
inc
sbb
jg
arpl
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
and
add
inc
and
inc
add
loope
out
mov
add
loope
outs
pop
loope
push
pop
loope
enter
jp
loope
add
loope
add
rol
mov
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
js
loope
add
loope
add
inc
js
in
add
loope
add
loope
add
test
mov
(bad)
out
mov
jmp
push
test
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
jmp
or
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
push
mov
add
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
js
loope
pop
pop
loope
add
inc
js
loope
add
loope
add
inc
js
in
add
loope
add
popa
inc
add
loope
add
loope
add
inc
js
loope
add
loope
add
inc
add
cmp
pop
loope
add
loope
pop
add
dec
add
bound
pop
repz
in
mov
jmp
push
test
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
push
test
in
or
jmp
or
in
push
stos
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
jae
pop
inc
add
jecxz
add
jecxz
add
inc
add
aas
add
loope
add
loope
add
loope
add
inc
jle
loope
add
pushf
inc
js
jecxz
add
loope
add
lahf
inc
add
loope
add
loope
add
inc
js
loope
add
loope
add
inc
add
ret
add
jecxz
add
loope
add
lea
pop
repz
in
mov
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
jmp
cmc
jmp
jmp
out
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jnp
pop
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
add
rol
loope
add
popa
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
mov
pop
neg
aad
mov
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
jecxz
or
imul
or
aam
sahf
jmp
xor
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
clc
push
mov
add
loope
add
loope
add
inc
add
aas
add
loope
add
inc
jl
loope
add
loope
add
inc
add
rol
loope
add
inc
jl
loope
pop
pop
loope
add
popa
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
lea
push
cmc
(bad)
in
test
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
leave
into
or
xchg
push
push
jl
(bad)
xchg
repz
out
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jns
pop
inc
add
loope
add
bound
push
loope
add
loope
add
inc
jl
loope
add
loope
add
loope
add
loope
add
inc
jle
loope
pop
pop
loope
add
lahf
inc
add
loope
add
loope
add
jecxz
add
loope
add
jecxz
add
push
int
add
push
(bad)
in
test
out
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
retf
ror
pop
lahf
or
js
xchg
icebp
repnz
loopne
stos
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
push
mov
add
jecxz
add
bound
push
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
add
lds
pop
loope
add
inc
jl
loope
add
loope
add
cdq
inc
add
loope
add
jecxz
add
loope
add
loope
add
loope
add
loope
add
loope
add
lea
mov
fcmovnu
in
mov
stos
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
leave
into
or
pop
popf
or
test
nop
icebp
repnz
stos
in
or
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
clc
push
mov
add
jecxz
add
jecxz
add
inc
add
rol
loope
add
inc
add
ret
add
jecxz
add
loope
add
loope
add
loope
pop
pop
loope
add
popa
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
jecxz
add
(bad)
push
cmc
fst
out
sub
out
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
leave
retf
pop
lahf
or
mov
xchg
icebp
hlt
jbe
jmp
or
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
clc
push
mov
add
loope
add
loope
add
inc
xchg
loope
add
loope
add
inc
add
rol
jecxz
add
loope
add
loope
add
loope
add
add
outs
inc
mov
loope
add
loope
add
loope
add
loope
add
jecxz
add
loope
add
loope
pop
pop
loope
add
cmc
fcmovnbe
in
and
out
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
int
or
pop
xchg
or
sahf
cld
cwde
repz
jle
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
clc
push
mov
add
loope
add
loope
add
inc
xchg
loope
add
loope
add
loope
add
bound
push
loope
add
loope
add
inc
jl
loope
add
loope
add
cdq
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
jecxz
add
loope
pop
pop
loope
add
icebp
fcmovne
in
mov
stos
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
int
or
pop
xchg
or
sahf
cld
cwde
repz
inc
stos
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
clc
push
mov
add
jecxz
add
loope
add
inc
xchg
loope
add
loope
add
inc
jl
loope
add
loope
add
loope
add
loope
add
inc
add
aas
add
jecxz
add
lahf
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
jecxz
pop
pop
loope
add
repz
in
mov
test
in
or
jmp
in
or
jmp
in
or
jmp
out
or
jmp
or
jmp
or
jmp
or
jmp
or
rcl
or
pusha
lahf
or
pushf
les
jmp
push
test
out
or
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
test
je
add
cmp
pop
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
inc
jl
loope
add
loope
add
popa
inc
add
jecxz
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
pop
pop
loope
add
icebp
(bad)
out
mov
test
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
jmp
out
or
jmp
loopne
cmps
jmp
or
cmps
or
call
in
or
jmp
or
jmp
in
or
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
mov
je
add
cmp
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
inc
jl
loope
add
loope
add
arpl
mov
mov
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
pop
pop
loope
push
mov
mov
aad
mov
test
in
or
jmp
in
or
jmp
in
or
jmp
out
or
out
out
push
scas
jmp
adc
jmp
out
or
jmp
or
rcr
or
xchg
retf
hlt
dec
test
in
or
jmp
or
jmp
or
in
in
or
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
push
mov
mov
inc
add
loope
add
jecxz
add
loope
add
jecxz
add
loope
add
loope
add
loope
add
fs
jl
loope
add
loope
add
arpl
sub
add
jecxz
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
in
(bad)
in
mov
test
in
or
jmp
in
or
jmp
in
or
jmp
in
or
mov
mov
xlat
in
mov
stc
clc
push
mov
call
or
mov
into
pushf
jmp
dec
cmps
out
loopne
mov
repnz
std
clc
push
mov
jmp
nop
and
jae
ss
(bad)
scas
pushf
jmp
in
or
jmp
in
or
jmp
in
or
jmp
out
or
lea
js
xchg
loope
add
loope
add
inc
xchg
loope
add
pusha
inc
add
lds
pop
loope
add
loope
add
inc
add
aas
add
loope
add
popa
inc
add
jecxz
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
pop
pop
loope
add
in
(bad)
in
mov
test
in
or
jmp
in
or
jmp
in
or
jmp
in
or
pop
test
rcr
sti
retf
jb
mov
xor
(bad)
rcr
clc
adc
mov
retf
clc
pop
mov
fnstsw
sub
and
dec
aad
xor
dec
jo
repnz
or
jmp
in
or
jmp
in
or
jmp
out
or
lea
jbe
xchg
loope
add
loope
add
inc
xchg
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
popa
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
jecxz
add
loope
add
loope
add
in
(bad)
in
mov
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
jmp
rol
pop
loope
add
loope
pop
psraw
data16
mov
xor
mov
aad
jne
adc
(bad)
jp
mov
aad
add
jns
inc
jl
loope
pop
pop
loope
add
lods
mov
out
push
stos
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
xchg
xchg
pop
inc
add
jecxz
add
loope
add
inc
xchg
loope
add
loope
add
inc
add
ret
add
loope
add
loope
add
jecxz
add
inc
jl
loope
add
loope
add
popa
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
jecxz
add
loope
add
loope
add
repz
in
mov
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
stos
fmul
js
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
pusha
ins
shr
scas
jmp
adc
jmp
in
or
jmp
in
or
jmp
in
or
jmp
push
mov
add
in
add
jecxz
add
inc
xchg
loope
add
loope
add
inc
add
lds
pop
loope
add
loope
add
loope
add
inc
jl
loope
add
loope
add
lahf
inc
add
loope
add
loope
add
jecxz
add
loope
add
loope
add
loope
add
loope
add
bound
dec
jmp
aad
mov
test
in
or
jmp
in
or
jmp
in
or
jmp
in
or
imul
add
pushf
push
xchg
mov
and
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
out
fucomip
jb
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
xchg
xchg
pop
inc
add
inc
add
aas
add
loope
add
inc
js
loope
add
call
pop
loope
add
loope
add
loope
add
loope
add
loope
add
lahf
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
jmp
xlat
in
mov
in
push
test
loopne
test
in
or
jmp
or
jmp
loopne
test
out
or
jmp
jmp
add
lds
pop
loope
add
loope
add
loope
add
loope
add
jecxz
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
mov
loopne
test
in
or
jmp
or
jmp
in
or
jmp
loopne
cmps
jmp
push
mov
add
jecxz
add
loope
add
inc
jle
loope
add
pushf
inc
add
aas
add
loope
add
inc
add
ret
add
fs
add
aas
add
loope
add
popa
inc
add
jecxz
add
jecxz
add
loope
add
loope
add
loope
add
fs
add
lds
pop
loope
add
out
leave
loop
cmps
jmp
loop
test
out
or
jmp
or
jmp
in
test
in
or
jmp
add
mov
xor
xor
push
loope
add
loope
add
loope
add
jecxz
add
loope
add
loope
add
jecxz
add
loope
add
loope
add
loope
add
inc
jl
loope
add
loope
add
imul
jecxz
int3
stos
icebp
loopne
test
out
push
test
out
or
jmp
in
or
jmp
in
or
jmp
push
mov
xchg
pop
inc
add
inc
jl
jecxz
add
loope
add
inc
add
rol
loope
add
inc
add
ret
add
loope
add
loope
add
loope
add
inc
add
cmp
add
popa
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
out
iret
loop
cmps
jmp
loop
test
loopne
test
out
push
stos
jmp
in
or
jmp
push
cmps
out
or
jmp
push
sbb
sahf
inc
xchg
jmp
add
loope
add
loope
add
jecxz
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
in
jmp
shl
dec
mov
jmp
or
jmp
in
or
jmp
in
or
jmp
add
fwait
lahf
pop
inc
add
inc
add
rol
loope
add
inc
js
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
add
lds
pop
loope
add
inc
jl
loope
add
popa
inc
add
jecxz
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
jmp
mov
jmp
add
out
or
jmp
push
test
out
or
out
loopne
stos
in
or
cmps
push
or
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
test
loope
add
loope
xchg
inc
test
jmp
jmp
push
test
in
or
jmp
in
or
jmp
push
mov
popf
pop
inc
add
in
add
loope
add
inc
jle
loope
add
loope
add
inc
add
cmp
add
inc
add
ret
add
loope
add
loope
add
loope
add
popf
inc
add
loope
add
loope
add
loope
add
loope
add
inc
add
cmp
pop
loope
add
loope
add
loope
add
in
xlat
shr
test
jmp
loopne
stos
out
or
loop
test
out
or
jmp
add
xchg
jle
aam
xchg
xor
jle
loope
add
loope
add
jecxz
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
sahf
inc
jle
loope
add
loope
add
inc
xchg
loope
add
loope
add
mov
div
fisubr
jmp
add
jmp
in
or
jmp
or
cdq
lahf
pop
inc
add
loope
add
loope
add
inc
add
rol
loope
add
inc
add
aas
add
loope
add
inc
add
ret
add
loope
add
inc
jl
loope
add
loope
add
cdq
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
jmp
shl
test
jmp
push
stos
jmp
add
jmp
or
jecxz
or
out
inc
adc
inc
das
mov
add
lds
pop
loope
add
loope
add
loope
add
loope
add
jecxz
add
loope
add
loope
add
loope
add
loope
add
loope
add
pusha
inc
jl
loope
add
loope
add
inc
add
aas
add
loope
add
inc
jle
loope
in
cmc
mov
jmp
out
or
in
or
jmp
or
cdq
fwait
pop
inc
add
jecxz
add
loope
add
inc
add
ret
add
call
pop
loope
add
loope
add
loope
add
inc
jl
loope
add
loope
add
popf
inc
add
loope
add
loope
add
loope
add
pusha
inc
add
aas
add
jecxz
add
loope
add
loope
add
in
int
movs
call
cmp
loope
or
out
out
stos
loope
or
mov
pop
jmp
inc
add
ret
add
jecxz
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
jl
loope
add
loope
add
loope
add
loope
mov
and
in
test
in
push
test
out
or
jmp
push
mov
lahf
pop
inc
add
loope
add
loope
add
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
add
rol
loope
add
inc
jl
loope
add
loope
add
popa
inc
add
loope
add
loope
add
loope
add
sahf
inc
add
cmp
add
loope
add
loope
add
jecxz
int
mov
stos
jmp
ss
out
or
jmp
mov
cmp
jl
loope
pop
pop
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
jecxz
add
inc
add
ret
add
loope
add
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
jl
loope
add
loope
add
jle
lock
add
jmp
clc
push
mov
add
loope
add
loope
add
inc
add
rol
loope
add
loope
add
loope
add
inc
add
aas
add
loope
add
inc
js
loope
add
cdq
inc
add
loope
add
loope
add
jecxz
add
loope
add
loope
add
loope
add
loope
add
loope
add
jecxz
int
mov
test
fdiv
cmps
loope
or
in
scas
add
addr16
jg
add
out
pop
pop
loope
add
inc
add
ret
add
loope
add
loope
add
jecxz
add
loope
add
loope
add
loope
add
jecxz
add
inc
jl
loope
add
loope
add
loope
add
jecxz
add
inc
jl
loope
add
loope
add
inc
add
aas
add
loope
add
inc
jl
loope
add
loope
add
inc
je
loope
adc
clc
stos
out
dec
scas
loope
add
jmp
or
cdq
popf
pop
inc
add
jecxz
add
loope
add
inc
add
rol
loope
add
inc
jl
loope
add
loope
add
inc
add
cmp
pop
loope
add
inc
je
loope
add
jecxz
add
arpl
and
push
jecxz
add
loope
add
loope
add
loope
add
inc
xchg
loope
add
loope
add
loope
add
loope
add
loope
leave
(bad)
xchg
out
adc
loope
or
(bad)
jno
add
in
inc
add
in
add
loope
add
loope
add
jecxz
add
loope
add
loope
add
loope
add
loope
add
loope
add
bound
push
loope
add
loope
add
loope
add
loope
add
inc
jle
loope
add
loope
add
inc
add
aas
add
loope
add
inc
js
loope
add
loope
add
inc
jle
loope
add
loope
fisub
adc
jmp
or
cdq
fwait
pop
inc
add
inc
jle
in
add
loope
add
inc
add
ret
add
loope
add
inc
jl
loope
add
xchg
jl
loope
add
loope
add
inc
js
loope
pop
pop
loope
add
popa
inc
add
loope
add
loope
add
loope
add
jecxz
add
inc
add
ret
add
jecxz
add
loope
add
loope
add
jecxz
int
ficom
in
cmps
out
or
retf
mov
inc
add
jecxz
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
inc
jl
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
inc
js
loope
add
loope
add
inc
add
aas
add
loope
add
inc
jle
loope
add
loope
add
inc
or
cmp
test
add
jmp
or
cdq
popf
pop
inc
add
inc
jle
in
add
loope
add
inc
jle
loope
add
loope
add
inc
jl
loope
add
jns
inc
jl
loope
add
loope
add
inc
js
loope
pop
pop
loope
add
popa
inc
add
loope
add
loope
add
jecxz
add
call
pop
loope
add
loope
add
loope
add
in
int
ficom
out
cmps
out
or
out
ror
dec
jo
outs
cmp
sub
add
retf
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
inc
jl
loope
add
loope
add
loope
add
loope
add
loope
add
bound
push
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
jp
loopne
leave
out
fsub
in
add
jmp
or
lahf
fwait
pop
inc
add
inc
js
loope
add
loope
add
inc
js
loope
add
loope
add
inc
jl
loope
pop
pop
loope
add
inc
jl
loope
add
loope
add
inc
js
loope
add
loope
add
inc
mov
loope
add
loope
add
jecxz
add
call
pop
loope
add
loope
add
loope
add
jecxz
leave
loopne
cwde
out
or
out
cmps
out
or
jmp
add
mov
adc
push
loope
add
loope
add
loope
add
loope
add
loope
add
bound
push
loope
add
loope
add
loope
add
jecxz
add
inc
add
ret
add
loope
add
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
js
loope
add
loope
add
inc
jle
loope
add
jecxz
add
loopne
jmp
dec
cmps
jmp
or
in
or
clc
add
add
loope
add
loope
add
inc
add
rol
loope
add
inc
add
rol
loope
add
loope
add
loope
add
inc
js
in
add
loope
add
inc
test
loope
add
loope
add
loope
add
loope
add
inc
xchg
loope
add
loope
add
loope
add
loope
add
jecxz
leave
in
cwde
out
or
out
or
in
add
cmp
loope
add
loope
add
loope
add
jecxz
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
inc
js
loope
add
loope
add
inc
jle
loope
add
loope
add
inc
jb
loopne
out
cld
cmps
jmp
or
out
or
clc
add
add
jecxz
add
loope
add
inc
jl
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
inc
js
in
add
loope
add
lahf
inc
add
jecxz
add
loope
add
loope
add
loope
add
inc
add
aas
add
loope
add
loope
add
loope
add
in
leave
out
cwde
out
push
test
out
cmps
out
or
in
add
or
inc
mov
jecxz
add
loope
add
loope
add
loope
add
loope
pop
pop
loope
add
loope
add
loope
add
loope
add
pusha
inc
jle
loope
add
loope
add
loope
or
pushf
inc
add
ret
add
loope
add
inc
add
rol
loope
add
inc
jle
loope
add
loope
add
inc
jle
loope
out
not
in
or
in
or
mov
test
push
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
add
rol
loope
add
loope
add
loope
add
inc
jle
loope
add
loope
add
popa
inc
add
loope
add
loope
add
loope
add
jecxz
add
inc
add
cmp
add
jecxz
add
loope
add
out
leave
out
cwde
out
adc
in
or
fadd
test
cld
adc
inc
inc
mov
loope
add
loope
add
loope
add
loope
add
loope
add
loope
sub
cmp
add
cmc
inc
add
loope
add
loope
add
inc
jp
loope
add
loope
add
loope
add
in
pop
sub
add
call
pop
loope
add
inc
jle
loope
add
loope
add
inc
mov
sub
jmp
in
or
jmp
or
stos
movs
pop
inc
add
jecxz
add
loope
add
inc
jl
loope
add
loope
add
inc
add
rol
loope
add
inc
jl
loope
add
loope
add
loope
add
loope
add
lahf
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
bound
add
leave
add
loope
add
out
leave
in
cwde
out
push
test
out
cmps
in
or
rol
cmps
fwait
xchg
add
add
push
loope
add
loope
add
jecxz
add
loope
add
jecxz
and
loope
ja
bound
add
stos
inc
add
loope
add
loope
add
loope
add
loope
add
loope
pop
pop
jecxz
add
push
fld
pop
dec
inc
add
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
add
cmp
xor
stos
repz
push
test
out
or
jmp
or
stos
movs
pop
inc
add
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
jl
loope
add
loope
add
loope
add
loope
add
inc
add
ret
add
jecxz
add
lahf
inc
add
jecxz
add
loope
add
loope
add
jecxz
add
loope
add
loope
add
loope
add
loope
add
out
retf
out
cwde
out
push
stos
jmp
cmp
jecxz
or
jmp
inc
pop
inc
push
xor
push
jmp
inc
add
loope
add
jecxz
add
jecxz
sub
cmps
in
out
sub
fistp
imul
pop
inc
and
add
loope
add
loope
add
loope
add
loope
add
jecxz
mov
ret
jge
cmp
inc
mov
jecxz
add
jg
inc
jl
loope
add
loope
add
in
scas
stos
loope
jmp
inc
stos
out
or
jmp
or
stos
mov
jb
jl
loope
add
loope
add
inc
add
aas
add
loope
add
inc
add
aas
add
loope
add
loope
add
loope
add
inc
add
aas
add
popa
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
jmp
cwde
out
adc
out
or
out
adc
add
push
test
iret
popa
jno
enter
add
pop
in
add
in
in
in
stos
icebp
jmp
add
out
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
jp
fs
in
sub
xor
or
leave
add
jecxz
ss
pusha
push
stos
mov
sub
jmp
push
pop
in
retf
shr
out
ds
out
or
jmp
add
test
xchg
jl
jecxz
add
loope
add
inc
jl
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
jl
loope
add
lahf
inc
add
loope
add
loope
add
loope
add
loope
add
jecxz
add
loope
add
jecxz
add
loope
add
jmp
sahf
in
adc
in
push
stos
out
or
jno
and
in
mov
mov
add
pusha
test
in
jmp
lods
add
mov
test
push
loope
add
loope
add
loope
add
loope
add
loope
add
and
inc
stos
idiv
or
cmps
fimul
sbb
pop
loope
adc
call
enter
enter
mov
aas
in
mov
jo
jmp
add
jmp
in
or
test
jns
inc
jle
jecxz
add
loope
add
inc
jl
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
jl
loope
add
lahf
inc
add
loope
add
loope
add
loope
add
pushf
inc
test
loope
add
loope
add
loope
add
loope
add
out
fcmovnu
out
cmps
test
call
push
test
out
or
jmp
or
out
out
or
jmp
loopne
lods
in
push
add
add
adc
repz
std
repnz
aas
cwde
push
rol
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
adc
mov
mov
out
add
fstp
(bad)
or
test
jmp
in
or
jecxz
or
out
or
jmp
or
test
xchg
add
cmp
pop
loope
add
inc
add
ret
add
loope
add
inc
add
rol
loope
add
inc
jl
loope
add
loope
add
inc
jl
loope
add
loope
add
fwait
inc
add
loope
add
fs
add
mov
test
lds
pop
loope
add
loope
pop
add
push
nop
cmp
(bad)
out
test
in
or
jmp
in
or
jmp
or
jmp
or
jmp
or
pop
lea
test
in
ds
test
(bad)
or
add
bound
push
loope
add
loope
add
loope
add
loope
add
loope
add
loope
push
xchg
mov
adc
in
push
mov
push
push
test
out
push
test
in
or
jmp
out
push
stos
jmp
push
stos
jmp
or
jmp
clc
or
add
inc
jle
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
add
rol
loope
add
inc
xchg
loope
add
loope
add
inc
jl
loope
add
loope
add
lahf
inc
add
loope
add
loope
add
loope
add
loope
add
jecxz
add
loope
add
loope
pop
pop
loope
add
icebp
fstp
out
test
in
or
jmp
out
or
jmp
or
jmp
out
or
jmp
push
movs
(bad)
ficom
mov
out
jmp
jae
push
arpl
add
bound
push
jecxz
add
loope
add
loope
add
loope
add
loope
add
loope
add
jo
out
push
cmps
in
push
stos
in
or
loop
test
out
or
jmp
in
or
jmp
in
or
jmp
clc
push
mov
add
inc
jle
loope
add
loope
add
inc
js
loope
add
loope
add
inc
jle
loope
add
loope
add
loope
add
jecxz
add
inc
add
aas
add
loope
add
inc
add
add
jecxz
add
loope
add
loope
add
jecxz
add
loope
add
loope
add
loope
add
repz
out
stos
test
test
jmp
push
stos
jmp
out
or
jmp
in
or
jmp
or
jmp
in
or
jmp
or
pop
mov
inc
mov
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
mov
repz
or
jmp
out
or
jmp
in
or
jmp
in
or
jmp
in
or
mov
pop
inc
add
inc
add
cmp
pop
loope
add
inc
jl
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
inc
add
rol
loope
add
popa
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
pop
pop
loope
add
icebp
xlat
fldz
cmps
test
test
jmp
push
stos
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
jmp
or
scas
or
add
mov
and
pop
loope
add
loope
pop
pop
loope
add
loope
add
loope
add
(bad)
xchg
stc
cld
fs
out
or
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
add
add
inc
jl
loope
add
loope
add
inc
add
rol
loope
push
jno
inc
jl
loope
add
loope
add
loope
add
bound
push
loope
add
jecxz
add
popa
inc
add
loope
add
loope
add
jecxz
add
pusha
inc
add
lds
pop
loope
add
loope
pop
pop
loope
add
out
fcmovnu
out
test
in
or
jmp
in
or
jmp
in
or
jmp
out
or
jmp
out
or
retf
les
sub
popf
ds
mov
loope
add
fs
add
lds
pop
loope
add
loope
pop
pop
loope
add
loope
add
loope
add
loop
std
clc
fsubr
jmp
or
jmp
out
or
jmp
in
or
jmp
in
or
jmp
clc
push
mov
add
inc
js
loope
add
loope
add
inc
jl
loope
pop
or
xchg
inc
jl
jecxz
add
loope
add
loope
add
loope
add
inc
jl
jecxz
add
loope
add
lahf
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
jecxz
add
loope
add
jecxz
add
repz
out
cmps
test
call
push
stos
jmp
in
or
jmp
in
or
jmp
in
or
jmp
out
or
xchg
mov
pop
adc
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
jmp
inc
push
xchg
pushf
inc
js
loope
std
clc
push
test
out
adc
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
clc
or
add
loope
pop
pop
loope
add
loope
add
call
pop
loope
add
loope
add
jecxz
add
inc
jle
in
add
loope
add
fs
test
in
add
loope
add
loope
add
loope
add
loope
add
jecxz
add
loope
pop
pop
loope
add
icebp
(bad)
out
movs
test
call
push
stos
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
push
dec
adc
jnp
inc
mov
iret
fwait
mov
cmp
push
in
add
loope
add
loope
pop
pop
loope
add
xchg
repnz
pop
ret
inc
push
test
jl
loope
jecxz
js
out
in
or
jmp
in
or
jmp
out
or
jmp
in
or
jmp
or
clc
or
add
loope
pop
pop
loope
add
loope
add
loope
add
inc
je
loope
pop
pop
loope
add
loope
add
loope
add
inc
js
jecxz
add
loope
add
lahf
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
(bad)
xor
shl
loopne
movs
in
or
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
out
or
push
lea
pop
ins
mov
clc
pushf
not
loopne
adc
pop
loope
add
inc
jl
loope
add
loope
add
enter
mov
mov
cmp
jle
iret
sub
repz
cmp
jmp
out
or
jmp
or
jmp
or
jmp
in
or
jmp
clc
add
lods
lods
pop
inc
add
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
jle
in
add
loope
add
inc
jl
loope
add
loope
add
inc
jl
loope
add
loope
add
lahf
inc
add
loope
add
loope
add
loope
add
sahf
inc
xchg
loope
add
loope
add
loope
add
dec
mov
icebp
aad
out
mov
test
out
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
xor
ins
push
(bad)
pop
mov
fucomi
push
mov
call
in
pop
add
inc
add
add
loope
test
pusha
mov
loopne
lods
in
loopne
test
in
(bad)
int3
popf
frstor
in
cmp
jmp
in
or
jmp
or
jmp
in
or
jmp
in
or
jmp
add
add
loope
add
loope
add
inc
add
rol
loope
add
inc
jle
out
add
loope
add
inc
add
aas
add
loope
add
inc
add
aas
add
loope
add
popf
inc
add
jecxz
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
repz
loopne
movs
in
push
test
out
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
jmp
jmp
in
push
stos
jmp
cmp
add
fild
sub
push
loope
add
loope
mov
loopne
test
out
or
loopne
scas
out
adc
jmp
in
or
jmp
out
or
jmp
or
jmp
in
or
jmp
in
or
mov
pop
inc
add
inc
js
loope
add
loope
add
inc
add
aas
add
loope
add
inc
js
in
add
loope
add
inc
jl
loope
add
in
add
inc
jl
loope
add
loope
add
lahf
inc
add
loope
add
jecxz
add
loope
add
pushf
inc
xchg
loope
add
jecxz
add
loope
pop
pop
loope
push
lea
xchg
xor
aad
out
cmps
test
in
adc
jmp
in
or
jmp
in
or
jmp
in
or
jmp
out
or
jmp
in
or
jmp
or
in
inc
adc
add
mov
inc
add
int
mov
dec
test
out
or
jmp
or
jmp
out
or
jmp
in
or
jmp
or
jmp
in
or
jmp
in
or
jmp
or
add
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
js
jecxz
pop
add
call
pop
loope
add
inc
js
jecxz
add
loope
add
lahf
inc
add
loope
add
loope
add
loope
add
loope
add
inc
xchg
loope
add
loope
add
loope
pop
pop
loope
push
mov
nop
xor
aad
loopne
test
in
push
test
in
push
stos
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
jmp
or
jmp
loopne
test
out
or
jmp
or
jnp
xor
xor
jecxz
push
ins
ret
in
test
out
add
jmp
or
in
or
jmp
in
or
jmp
out
or
jmp
or
jmp
in
or
jmp
clc
or
add
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
js
jecxz
add
loope
add
inc
jp
loope
add
loope
add
inc
jle
jecxz
add
loope
add
fs
add
ret
add
loope
add
loope
add
loope
add
inc
xchg
loope
add
loope
add
loope
add
loope
add
icebp
xlat
(bad)
movs
stos
jmp
push
test
in
push
stos
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
xor
dec
or
pop
inc
mov
aad
rcr
lods
out
ds
out
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
add
loope
add
loope
add
inc
jl
loope
add
loope
add
inc
js
jecxz
add
loope
add
inc
js
loope
add
bound
add
cmp
add
cdq
inc
add
loope
add
loope
add
loope
add
loope
add
inc
xchg
loope
add
loope
add
loope
pop
pop
loope
add
repz
fnclex
movs
lods
jmp
adc
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
out
or
(bad)
into
or
jl
add
sub
sub
fsubr
jmp
or
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
in
or
clc
or
add
inc
jp
loope
add
loope
add
inc
js
loope
add
loope
add
inc
jle
jecxz
pop
pop
loope
add
inc
jl
loope
add
loope
add
inc
js
in
pop
pop
loope
add
lahf
inc
add
loope
add
loope
add
loope
add
loope
add
inc
xchg
loope
add
loope
add
loope
add
fs
mov
out
aad
loop
lods
jmp
adc
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
out
or
cmc
call
or
mov
test
out
or
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
clc
or
add
inc
jp
loope
add
loope
add
inc
js
loope
add
loope
add
inc
jle
jecxz
pop
pop
loope
add
inc
jle
loope
add
loope
add
inc
js
jecxz
add
loope
add
xchg
inc
add
loope
add
loope
add
loope
add
call
pop
jecxz
add
loope
add
loope
add
out
aad
loop
test
out
adc
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
fmul
shr
jo
in
push
test
out
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
jmp
or
add
inc
js
loope
add
loope
add
inc
jle
loope
add
loope
add
inc
js
jecxz
add
loope
add
inc
add
aas
add
loope
add
inc
jp
jecxz
add
loope
add
xchg
inc
add
loope
add
loope
add
inc
xchg
loope
add
pushf
inc
add
ret
add
loope
add
loope
pop
pop
loope
add
out
rcl
loop
cmps
jmp
adc
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
in
out
adc
jmp
or
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
out
or
jmp
clc
or
add
inc
jle
loope
pop
pop
loope
add
inc
jle
loope
add
loope
add
inc
jp
jecxz
add
loope
add
inc
jl
loope
add
loope
add
inc
jp
in
pop
pop
loope
add
fwait
inc
add
loope
add
loope
add
loope
add
pushf
inc
add
ret
add
loope
add
loope
pop
pop
jecxz
add
repz
loopne
cmps
jmp
push
test
in
push
stos
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
jmp
or
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
jmp
or
add
inc
jle
loope
pop
pop
loope
add
inc
js
loope
add
loope
add
inc
js
jecxz
add
loope
add
inc
jl
loope
add
loope
add
inc
js
in
add
loope
add
popf
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
in
pop
pop
loope
add
in
rcr
loopne
stos
jmp
adc
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
or
add
inc
jl
loope
pop
pop
jecxz
add
inc
js
jecxz
pop
pop
loope
add
inc
js
jecxz
pop
pop
loope
add
inc
jle
loope
add
loope
add
inc
jle
in
add
loope
add
fwait
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
out
add
sbb
(bad)
mov
test
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
out
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
clc
or
add
inc
jle
loope
add
cwde
inc
jle
in
pop
pop
jecxz
add
inc
js
in
add
jns
inc
jl
loope
add
loope
add
inc
js
in
add
loope
add
cdq
inc
add
loope
add
loope
add
loope
add
jecxz
add
loope
add
jecxz
add
in
or
loope
push
xchg
fnsetpm(287
fsubr
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
in
or
jmp
clc
or
add
inc
jp
loope
add
call
pop
jecxz
add
inc
jle
jecxz
pop
pop
loope
add
jmp
inc
add
inc
jp
jecxz
add
loope
xchg
sbb
inc
add
lea
pop
mov
add
movs
inc
add
mov
inc
add
loope
add
jno
add
loope
add
loope
add
loope
add
loope
push
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
ficomp
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
add
mov
push
aam
mov
sbb
shl
push
aam
mov
sub
mov
dec
push
mov
push
pop
loope
add
inc
push
fs
sub
push
mov
push
mov
add
inc
dec
push
mov
or
dec
test
pop
jo
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
add
mov
push
aam
mov
and
inc
mov
dec
dec
fst
pop
pop
loope
add
inc
dec
push
or
push
mov
push
pop
mov
add
inc
push
pop
mov
pop
pop
loope
add
inc
push
ins
mov
add
inc
dec
push
add
inc
movs
inc
push
(bad)
fst
push
shl
push
add
mov
push
dec
dec
mov
fimul
mov
bound
int
add
push
js
pop
xlat
xchg
cdq
(bad)
cs
add
add
xchg
cdq
mov
sub
test
mov
add
inc
push
ins
adc
push
lods
inc
jb
add
xchg
mov
sahf
jge
cmp
pop
or
in
jl
shl
xor
inc
or
push
ins
fisttp
dec
pop
loope
sub
push
mov
dec
pop
aaa
adc
mov
pop
(bad)
cld
movs
test
mov
add
mov
mov
mov
scas
aad
jle
sub
push
push
mov
push
xlat
nop
xor
call
or
lahf
out
faddp
jo
sbb
mov
add
lods
push
add
mov
inc
push
ins
lods
or
loope
sub
push
mov
xor
sbb
(bad)
cld
sbb
xlat
xchg
sbb
push
test
fsubr
jb
les
inc
bound
mov
dec
dec
std
and
clc
or
xor
mov
or
sbb
adc
shr
sbb
dec
ss
push
ins
lods
or
loope
sub
push
mov
xor
push
mov
dec
pop
sbb
add
inc
fisub
scas
mov
outs
inc
cmp
fstp
(bad)
loope
std
mov
mov
(bad)
loope
std
fcomp
rcl
dec
or
add
inc
dec
push
mov
sbb
shl
sbb
dec
ss
push
ins
lods
or
loope
sub
push
mov
mov
(bad)
push
xor
dec
jno
pop
pop
loope
add
inc
fisub
mov
bound
mov
inc
cmp
test
loopne
std
mov
pop
dec
dec
movs
adc
add
inc
push
outs
mov
add
mov
add
mov
inc
push
ins
lods
or
loope
sub
push
mov
cmp
jl
ja
xor
addr16
sbb
push
mov
fisub
clc
movs
rol
(bad)
icebp
in
mov
aad
js
dec
dec
add
dec
dec
movs
adc
add
inc
push
outs
mov
add
mov
add
mov
inc
push
ins
lods
or
loope
sub
push
mov
xor
in
and
shl
into
in
mov
or
push
test
fisub
pop
jmp
push
jp
stc
dec
adc
push
push
inc
dec
dec
mov
mov
dec
dec
mov
add
inc
push
pop
adc
shl
sbb
dec
ss
push
ins
lods
or
loope
sub
push
mov
xor
in
jl
mov
mov
sub
pop
or
push
test
fsubr
jb
stos
sub
push
clc
stos
mov
dec
push
xchg
sub
hlt
push
cwde
imul
pop
jb
xchg
adc
add
mov
add
mov
inc
push
fs
imul
cmp
adc
lock
test
ror
xor
ins
test
lock
mov
push
mov
retf
clc
push
push
push
and
push
fs
movs
stos
jmp
ss
push
pop
push
out
out
xchg
pop
push
arpl
lods
push
add
mov
inc
push
fs
test
loope
jmp
ds
push
in
js
xchg
dec
xchg
sbb
sbb
jae
sub
cld
in
js
mov
pop
movs
sub
(bad)
fistp
mov
adc
add
jae
sbb
jne
or
push
mov
push
mov
cdq
sbb
shl
sbb
dec
ss
push
ins
mov
popa
pop
loope
add
inc
dec
dec
lods
or
loope
add
inc
push
pop
lods
adc
add
inc
inc
cmp
sub
inc
dec
dec
lods
or
add
sub
out
inc
and
sub
add
inc
dec
dec
mov
adc
inc
lods
inc
xor
test
push
add
mov
inc
push
outs
mov
imul
sub
push
mov
push
outs
mov
add
inc
push
outs
mov
add
inc
cmp
mov
cmp
push
test
push
outs
adc
ror
xor
add
inc
fs
mov
push
pop
loope
add
dec
xchg
inc
mov
or
sar
sbb
dec
ss
push
outs
mov
imul
sub
push
mov
push
outs
mov
add
inc
push
adc
je
cwde
mov
mul
add
inc
push
outs
mov
add
cmp
add
pusha
mov
(bad)
hlt
and
and
cmp
leave
add
pusha
push
adc
shr
sbb
dec
ss
push
outs
mov
imul
sub
push
mov
push
outs
mov
add
outs
das
dec
pop
leave
fisubr
leave
jmp
xchg
add
inc
push
ins
mov
dec
pop
loope
mov
mov
imul
mov
fnstcw
jnp
leave
sbb
shl
sbb
dec
ss
push
ins
mov
imul
sub
push
mov
push
outs
mov
or
movs
movs
jmp
cmp
and
add
inc
fs
mov
dec
loope
fbstp
shl
pop
loope
add
inc
fs
mov
arpl
loope
ds
test
and
aad
add
mov
add
mov
inc
push
ins
mov
imul
sub
push
mov
push
outs
mov
dec
pop
loope
enter
pop
or
aaa
push
inc
push
bound
imul
sub
outs
mov
xor
test
leave
inc
stos
jno
popfw
adc
add
inc
push
mov
imul
cmp
or
add
mov
sbb
dec
ss
push
ins
mov
imul
sub
push
mov
ins
dec
mov
lahf
loope
out
fstp
jmp
inc
fs
and
inc
fwait
dec
js
in
xor
jle
clc
inc
push
outs
mov
arpl
loope
add
inc
sbb
pushf
inc
repz
sub
or
rcl
push
add
mov
inc
push
ins
mov
imul
and
outs
mov
cli
xlat
mov
lods
in
dec
test
xchg
(bad)
push
xor
test
inc
and
mov
sub
push
xchg
pop
pusha
movs
ins
push
sbb
dec
sbb
xchg
or
loope
add
inc
fs
mov
dec
pop
loopne
sub
leave
sbb
mov
pop
mov
inc
push
ins
mov
arpl
loope
add
xor
mov
pop
mov
adc
cmp
data16
(bad)
std
mov
push
cmp
pop
(bad)
push
cwde
xor
es
sti
fdivp
aas
pop
mov
jge
scas
sub
enter
push
push
add
mov
inc
pop
data16
arpl
inc
mov
lea
or
push
mov
ins
mov
push
pop
jmp
fcomp
leave
xchg
jle
ficomp
mov
pop
cmp
pop
mov
pop
loope
fcmovu
cmp
ror
push
cdq
aam
adc
mov
popf
jo
dec
int3
jp
loop
ins
xor
dec
push
add
mov
inc
bound
ss
test
fcmovb
cdq
bound
pop
pop
loope
add
xchg
mov
sbb
popfw
pop
cdq
adc
push
mov
outs
sbb
psraw
jnp
pushf
(bad)
daa
jecxz
xor
add
jae
inc
ins
dec
mov
xchg
test
sbb
push
leave
pop
mov
and
pop
mov
inc
in
fldcw
xchg
test
sbb
outs
lods
daa
push
pop
loope
pop
push
mov
retf
push
(bad)
in
push
pop
in
sub
push
mov
ins
dec
mov
aad
movs
sub
mov
push
leave
cli
xlat
pop
pop
sahf
(bad)
dec
jne
loop
mov
repnz
sar
push
add
mov
inc
outs
jae
mov
imul
add
inc
bound
jnp
loope
xchg
sub
ss
out
popa
rol
mov
jnp
loope
push
outs
stos
inc
in
fnstenv
cmc
mul
ror
mov
mov
div
bnd
adc
ss
and
shl
aaa
xor
xchg
or
ins
and
pop
mov
(bad)
push
pusha
test
pop
dec
push
addr16
adc
push
xchg
push
mov
adc
loopne
call
aam
push
push
aaa
fwait
bound
pop
mov
cmp
mov
enter
ror
jnp
cmp
and
aaa
adc
rol
sbb
xor
xchg
or
xchg
add
push
mov
pop
int3
clc
mov
leave
fs
pop
sbb
loope
add
inc
sbb
pushf
rol
xor
mov
pop
push
sub
in
dec
arpl
loopne
mov
outs
mov
add
fld
or
and
jb
dec
aaa
adc
rol
sbb
dec
ss
aam
mov
ja
add
adc
mov
pop
leave
mov
inc
dec
push
cmp
popa
test
push
outs
mov
popa
pop
loope
add
mov
xabort
test
xor
mov
out
push
pop
pop
movntps
push
mov
add
fst
cmp
jle
fidiv
fxch
(bad)
stos
jmp
fwait
xor
push
pusha
xor
or
mov
add
mov
inc
bound
imul
addr16
pop
pop
adc
add
inc
fs
mov
addr16
mov
cmp
idiv
es
jle
out
jle
clc
inc
jbe
lods
sbb
loope
cmp
outs
mov
dec
push
jbe
test
data16
into
dec
rcl
push
add
mov
inc
bound
cs
std
call
aas
adc
add
inc
add
mov
ins
mov
std
and
mov
lods
jnp
cmp
xor
outs
pop
int3
clc
xchg
stc
mov
pop
xor
test
imul
std
test
and
pop
push
xor
shr
sbb
pop
ss
push
mov
push
inc
push
outs
lods
sbb
loope
adc
mov
xor
add
mov
mov
cmp
or
out
fist
pop
jb
popa
sbb
push
mov
mov
inc
movs
xchg
inc
cmps
inc
jle
fidiv
test
(bad)
(bad)
loopne
xlat
popf
pop
or
add
mov
sbb
pop
ss
jle
test
bound
adc
pop
xchg
adc
pop
ins
out
test
or
popf
ret
fidivr
test
movs
jmp
cdq
cmp
or
add
xchg
cmp
push
not
inc
repz
sub
lea
not
xchg
test
sbb
push
mov
add
mov
add
mov
pop
push
xchg
test
add
inc
bound
mov
cmp
sbb
loope
add
xchg
je
xchg
les
cmp
or
add
inc
fs
mov
adc
popa
xchg
push
mov
push
pop
loope
add
inc
push
ins
adc
shl
sbb
xor
xchg
jb
dec
inc
and
push
mov
xchg
clc
in
push
pop
push
lods
adc
push
jno
ret
xchg
cs
aaa
fwait
sbb
in
sub
push
adc
push
xchg
outs
mov
add
inc
push
outs
mov
add
inc
push
outs
mov
add
mov
add
mov
pop
jb
test
pop
ins
sbb
push
add
mov
pop
loope
cmp
inc
push
outs
sbb
sub
xchg
jne
inc
adc
bound
shr
jae
dec
add
add
inc
push
outs
mov
add
inc
push
outs
mov
add
inc
push
outs
mov
add
mov
add
mov
inc
mov
test
adc
rcl
xchg
pop
sbb
pop
loope
add
inc
push
outs
mov
add
fcomp
lods
or
jg
xchg
dec
mov
push
add
mov
add
inc
push
outs
mov
add
inc
push
outs
mov
add
mov
add
mov
inc
cmp
mov
sbb
push
adc
mov
ins
pop
mov
inc
push
outs
mov
pop
pop
loope
adc
mov
add
mov
loopne
aaa
push
cmp
or
adc
mov
push
outs
adc
push
outs
mov
add
inc
push
outs
mov
add
mov
add
mov
inc
pop
and
pop
loope
dec
imul
imul
jnp
jns
add
inc
push
bound
and
pushf
pop
jbe
xchg
das
dec
pop
loope
add
inc
sbb
mov
stos
inc
push
outs
adc
push
outs
mov
add
inc
push
outs
mov
add
mov
add
mov
inc
push
outs
and
pop
loope
dec
push
ja
cmp
pop
fnstenv
inc
stos
jno
test
loope
and
jg
leave
cmp
dec
movs
imul
pop
stos
inc
push
outs
adc
push
outs
mov
add
inc
push
outs
mov
add
mov
add
mov
inc
push
adc
xchg
mov
xor
sbb
nop
inc
fwait
jl
nop
ret
stc
cmp
pushf
inc
cmps
inc
add
shl
loope
inc
movs
xchg
and
int3
push
cmp
pop
test
push
outs
adc
push
outs
mov
add
inc
push
outs
mov
add
mov
add
mov
inc
push
outs
and
pop
loope
push
sub
aad
pop
imul
inc
inc
(bad)
inc
dec
lods
jge
nop
jge
xchg
inc
movs
aam
push
mov
push
xchg
jne
xchg
inc
movs
lock
xor
pop
stos
inc
push
outs
adc
push
outs
mov
add
inc
push
outs
mov
add
mov
add
mov
inc
push
outs
and
pop
loope
pop
pop
(bad)
jmp
push
(bad)
std
xchg
xor
push
mov
sbb
add
mov
sbb
add
mov
sub
push
mov
push
outs
mov
add
inc
push
outs
mov
add
inc
push
outs
mov
add
mov
add
mov
inc
push
outs
adc
dec
sbb
xchg
scas
fdivr
add
push
fs
adc
add
inc
push
adc
push
mov
push
adc
push
mov
push
outs
mov
add
inc
push
outs
mov
add
inc
push
outs
mov
add
mov
add
mov
jae
xchg
jno
xchg
xor
xchg
test
jg
ret
cmp
jne
arpl
daa
xchg
xor
xchg
xchg
jno
xchg
xor
xchg
xchg
jno
xchg
xor
xchg
xchg
jno
xchg
xor
xchg
xchg
jno
xchg
xor
xchg
xchg
jno
xchg
xor
xchg
pop
mov
inc
add
loope
outs
pop
loope
push
pop
loope
and
loope
dec
pop
loope
add
loope
add
rol
and
add
loope
add
loope
add
loope
add
loope
aam
loope
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
mov
cli
aaa
adc
sub
jne
test
in
xor
shl
jp
sti
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
mov
cli
xor
(bad)
jne
test
out
xor
sar
sbb
shl
push
aam
mov
mov
xor
ret
(bad)
jne
xchg
lock
push
enter
jg
mov
cli
cmp
enter
jg
mov
cli
cmp
enter
jg
mov
std
push
aam
mov
nop
js
(bad)
cmp
enter
jg
mov
cli
cmp
enter
jg
mov
cli
cmp
enter
adc
push
sbb
mov
test
out
xor
and
mov
cmp
pop
xor
push
sbb
cmp
xor
jne
test
in
xor
shl
js
call
pop
mov
sbb
sbb
das
push
lds
xor
xor
les
dec
(bad)
jne
xchg
lock
push
enter
jno
test
out
xor
(bad)
and
ja
test
in
xor
into
daa
push
iret
jno
nop
jp
std
push
push
enter
jno
test
out
xor
les
dec
(bad)
jne
mov
cmp
pop
das
xchg
pop
adc
sbb
sbb
cmp
xor
jae
test
in
xor
shl
js
call
pop
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
nop
js
(bad)
aaa
push
ret
mov
cmc
sbb
in
test
test
fs
adc
clc
mov
mov
ins
or
and
jg
sbb
shl
push
aam
mov
sbb
shl
push
push
(bad)
mov
cli
outs
jmp
dec
test
fs
adc
clc
mov
inc
mov
sbb
das
inc
mov
loope
and
mov
sub
or
push
dec
ret
ja
cli
outs
std
loope
clc
mov
mov
push
mov
lea
aam
xor
jp
cli
xor
mov
(bad)
imul
sbb
clc
mov
mov
push
rcr
jg
nop
jp
cld
xor
scas
arpl
and
stos
dec
mov
popa
test
push
into
and
jg
mov
das
lock
cmps
stos
gs
(bad)
add
in
test
test
aam
xor
jg
test
out
sub
stos
gs
(bad)
lods
inc
stos
scas
arpl
daa
add
out
rol
cdq
pushf
pop
mov
and
mov
dec
ret
ja
mov
xor
lods
popa
(bad)
out
out
and
scas
inc
mov
popa
xor
add
pop
pop
iret
jno
mov
xor
mov
test
(bad)
add
call
ins
test
pop
das
xchg
pop
adc
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
sbb
mov
xor
sub
mov
xor
jo
sbb
outs
dec
shr
cdq
mov
dec
fiadd
xor
mov
sbb
cmp
pop
xor
push
sbb
cmp
ret
lods
arpl
retf
js
and
test
mov
dec
and
push
pusha
xchg
mov
popf
mov
dec
cmp
mov
sar
stos
sahf
jbe
fwait
lods
pop
ds
sub
lds
retf
not
pop
repz
and
sub
adc
enter
push
stos
cwde
aam
sti
xchg
pop
adc
nop
jp
cld
int
add
addr16
shr
sbb
adc
(bad)
and
dec
adc
adc
fidiv
and
ror
fdivr
sahf
js
jge
dec
mov
mov
fist
rdpmc
or
fdivr
js
pop
jmp
lods
xor
mov
rol
sbb
fidivr
cmp
dec
jmp
and
mov
jb
enter
jb
cmp
std
clc
or
in
or
mov
ds
cmp
addr16
cdq
push
mov
lea
fsubr
in
dec
mov
cdq
jo
jb
fdiv
cmc
push
pop
pop
int3
xchg
inc
jge
repnz
fmul
mov
push
add
adc
xor
pop
adc
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
shl
push
aam
mov
sbb
sbb
das
mov
outs
xchg
loope
retf
cmp
repz
xchg
adc
std
clc
push
mov
lds
ins
call
cmp
mov
loope
les
mov
push
(bad)
and
sbb
pop
ss
stos
daa
lea
xchg
mov
std
clc
push
repnz
push
dec
imul
xchg
mov
loope
and
xchg
test
clc
or
std
clc
push
mov
int
add
in
mov
add
jmp
std
clc
push
mov
std
clc
push
mov
xchg
jmp
pop
pop
xchg
pop
adc
sbb
sbb
das
stc
test
clc
push
mov
std
clc
push
mov
xlat
rcr
out
mov
movhps
jbe
std
clc
movs
mov
(bad)
mov
retf
jl
cmp
dec
sub
sub
out
jo
add
std
clc
push
mov
loope
push
loopne
outs
cs
in
push
adc
mov
cdq
pushf
pop
mov
mov
ins
mov
std
ret
mov
retf
fisub
cmp
mov
clc
xor
jmp
push
retf
jp
std
clc
push
mov
std
clc
push
mov
addr16
call
jp
jmp
adc
xlat
rcr
push
and
push
in
in
nop
hlt
movs
nop
push
or
xor
std
clc
push
mov
jno
push
xor
daa
xchg
pop
adc
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
shl
push
aam
mov
mov
das
in
pop
(bad)
xchg
pop
adc
fsub
clc
push
mov
cmp
inc
xchg
pop
adc
push
shl
push
aam
mov
sbb
sbb
cmp
fidiv
rcr
xchg
iret
pop
cmp
cmpps
sar
mov
sti
sub
popf
pop
xor
std
clc
push
mov
(bad)
push
shl
push
aam
mov
inc
int
fsub
jmp
push
mov
std
clc
push
xchg
sbb
das
mul
pop
in
out
cld
clc
push
mov
std
clc
push
mov
inc
or
sbb
shl
push
aam
mov
sbb
shl
push
push
enter
imul
std
clc
push
mov
std
in
mov
enter
ins
cdq
fistp
xor
std
clc
mov
mov
aad
ins
xchg
pop
adc
sbb
adc
xor
jmp
jmp
std
clc
push
mov
aad
push
pop
int
cmc
stos
mov
popf
ja
add
mov
mov
out
loopne
pop
(bad)
mov
aam
mov
nop
js
(bad)
xor
and
std
clc
clc
mov
std
clc
push
mov
std
clc
push
mov
mov
aas
cmp
cld
clc
idiv
std
rcr
aad
push
xchg
pop
adc
sbb
pop
ss
sbb
sub
mov
std
clc
or
std
in
mov
jg
mov
(bad)
aad
inc
xchg
pop
adc
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
shl
push
aam
mov
stc
push
lods
inc
out
mov
clc
push
mov
out
loopne
jo
rol
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
cmps
mov
test
push
lds
mov
repz
std
clc
and
repz
push
shl
push
aam
mov
xor
mov
clc
sbb
std
clc
push
mov
or
pop
sbb
shl
push
aam
mov
mov
repz
std
clc
cmp
ret
pop
adc
push
shl
push
aam
mov
sbb
shl
push
aam
mov
stc
jp
adc
std
clc
push
mov
adc
mov
scas
arpl
mov
std
clc
push
cwde
int
add
pop
mov
sbb
shl
push
or
mov
mov
std
clc
push
mov
std
dec
push
adc
jmp
int
cmc
cli
outs
(bad)
sbb
std
clc
adc
repz
push
shl
push
aam
mov
sbb
sbb
das
sar
mov
std
clc
push
mov
std
lods
push
sub
retf
mov
xchg
out
jo
add
std
clc
push
mov
aam
pop
xchg
pop
adc
sbb
shl
push
adc
mov
test
clc
or
std
clc
push
mov
std
jbe
dec
aad
mov
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
shl
push
sbb
mov
fistp
cmp
call
clc
add
std
clc
push
mov
or
pop
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
mov
cli
leave
int3
les
into
jae
push
sub
jbe
inc
mov
std
clc
push
mov
sar
sbb
shl
push
aam
mov
mov
repz
std
clc
call
clc
push
xchg
pop
adc
sbb
shl
push
aam
mov
mov
cmc
and
std
clc
retf
clc
push
mov
pop
adc
push
shl
push
aam
mov
sbb
shl
push
aam
mov
in
mov
aam
clc
inc
mov
std
push
push
call
xchg
push
inc
clc
xchg
mov
std
clc
push
out
cdq
sbb
cmp
pop
xor
push
shl
push
adc
mov
cli
mov
and
std
clc
push
mov
std
rcr
push
aam
mov
jmp
jmp
retf
out
out
pop
mov
std
clc
push
mov
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
or
mov
mov
std
clc
push
mov
std
push
push
call
xchg
pop
cmc
stc
mov
mov
std
sbb
cmp
pop
das
xchg
pop
adc
sbb
shl
push
sbb
mov
and
call
clc
push
mov
aam
sti
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
sbb
cmp
xor
mov
clc
push
mov
std
clc
push
mov
pop
adc
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
pop
ss
adc
sub
dec
shl
frstor
mov
dec
mov
std
clc
push
mov
retf
jae
sbb
shl
push
aam
mov
mov
cmc
and
std
clc
retf
clc
push
mov
pop
adc
sbb
shl
push
aam
mov
mov
cmc
and
std
clc
retf
clc
push
mov
pop
adc
push
shl
push
aam
mov
sbb
shl
push
aam
mov
in
mov
aam
clc
inc
mov
std
push
push
call
xchg
in
clc
push
mov
std
clc
push
xchg
iret
adc
pop
adc
sbb
shl
push
push
into
mov
or
clc
cmp
clc
push
mov
push
enter
imul
std
clc
xchg
mov
std
in
mov
pop
cmp
push
shl
push
aam
mov
sbb
shl
push
adc
mov
cli
mov
and
std
clc
push
mov
std
sub
rcl
add
or
clc
xchg
std
clc
push
mov
sbb
or
sbb
shl
push
sbb
mov
mov
stc
cli
mov
std
clc
push
mov
aam
sti
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
adc
sub
lods
clc
and
std
clc
push
mov
aad
ins
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
adc
mov
xchg
iret
idiv
daa
mov
clc
pushf
mov
std
clc
push
sbb
add
mov
hlt
cmp
pop
xor
jbe
cmc
and
std
clc
retf
clc
push
mov
pop
adc
sbb
shl
push
aam
mov
mov
cmc
and
std
clc
retf
clc
push
mov
pop
adc
push
shl
push
aam
mov
sbb
shl
push
aam
mov
in
mov
aam
clc
inc
mov
std
push
push
call
xchg
sar
inc
mov
std
clc
push
mov
push
int3
call
push
shl
push
push
into
mov
or
clc
cmp
clc
push
mov
adc
mov
or
push
mov
std
call
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
adc
mov
ss
push
std
clc
push
mov
std
rcr
push
push
enter
imul
mov
std
pushf
push
es
arpl
jge
sbb
shl
push
sbb
mov
mov
stc
cli
mov
std
clc
push
mov
aam
sti
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
mov
cli
sub
inc
cs
mov
std
clc
push
lods
in
adc
aam
add
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
sbb
mov
(bad)
imul
push
sub
mov
std
clc
push
mov
jmp
or
xor
enter
adc
and
std
clc
retf
clc
push
mov
pop
adc
sbb
shl
push
aam
mov
mov
cmc
and
std
clc
retf
clc
push
mov
pop
adc
push
shl
push
aam
mov
sbb
shl
push
aam
mov
in
mov
aam
clc
inc
mov
std
push
push
call
fwait
push
stc
mov
std
clc
push
mov
std
jmp
lds
mov
std
push
push
into
mov
or
clc
cmp
clc
push
mov
adc
mov
jo
clc
scas
mov
std
clc
push
mov
aam
std
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
push
int3
mov
or
clc
xchg
std
clc
push
mov
aam
mov
call
push
mov
std
clc
push
mov
shl
jp
sti
push
sbb
mov
mov
stc
cli
mov
std
clc
push
mov
aam
sti
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
mov
repz
std
clc
push
std
clc
push
mov
std
clc
push
cmp
jge
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
cmps
mov
(bad)
(bad)
test
clc
push
mov
std
clc
push
stos
in
or
add
test
out
and
std
clc
retf
clc
push
mov
pop
adc
sbb
shl
push
aam
mov
mov
cmc
and
std
clc
retf
clc
push
mov
pop
adc
push
shl
push
aam
mov
sbb
shl
push
aam
mov
in
mov
aam
clc
inc
mov
std
push
push
call
cmc
xor
hlt
std
clc
and
std
clc
push
mov
add
pop
cld
ins
adc
sub
sub
cmp
clc
push
mov
or
mov
ss
push
std
clc
push
mov
std
rcr
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
adc
mov
or
clc
xchg
std
clc
push
mov
aam
mov
test
out
je
clc
mov
mov
std
clc
push
and
adc
imul
sbb
adc
and
mov
stc
cli
mov
std
clc
push
mov
aam
sti
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
xor
sbb
std
clc
mov
mov
std
clc
push
mov
rcr
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
xchg
lock
out
push
retf
jae
xor
jo
std
clc
push
mov
std
clc
push
mov
lds
pop
pop
pusha
dec
inc
mov
std
clc
push
mov
pop
adc
sbb
shl
push
aam
mov
mov
cmc
and
std
clc
retf
clc
push
mov
pop
adc
push
shl
push
aam
mov
sbb
shl
push
aam
mov
in
mov
aam
clc
inc
mov
std
push
push
call
cmc
mov
cld
int
je
mov
std
clc
push
mov
std
clc
push
sub
fs
daa
mov
sub
cmp
clc
push
mov
or
mov
loop
clc
push
mov
std
clc
push
mov
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
sbb
mov
dec
(bad)
into
mov
std
clc
push
mov
aam
mov
nop
js
(bad)
xor
jmp
clc
push
mov
std
clc
push
jmp
pop
stos
mov
std
clc
push
mov
std
push
push
call
cmc
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
int
cmc
imul
sbb
call
clc
add
std
clc
push
mov
fcmovne
push
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
nop
jp
cld
cmp
jmp
pop
adc
jp
cld
jmp
popf
add
lahf
call
or
dec
hlt
popa
retf
bound
mov
std
clc
push
mov
pop
adc
sbb
shl
push
aam
mov
mov
cmc
and
std
clc
retf
clc
push
mov
pop
adc
push
shl
push
aam
mov
sbb
shl
push
aam
mov
in
mov
aam
clc
inc
mov
std
push
push
call
cmc
sbb
shl
push
push
enter
mov
cwde
(bad)
ret
std
clc
push
mov
ins
push
or
clc
cmp
clc
push
mov
adc
mov
in
clc
push
mov
std
clc
push
lods
in
adc
pop
mov
sbb
shl
push
aam
mov
sbb
shl
push
adc
mov
mov
stc
cli
mov
std
clc
push
mov
aam
mov
sbb
shl
push
push
(bad)
mov
jl
mov
push
shl
mov
repz
mov
std
clc
push
mov
aam
sti
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
retf
jae
in
adc
cmp
clc
push
mov
std
clc
push
fdivr
push
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
sbb
cmp
fdiv
and
fwait
clc
pop
mov
std
clc
push
mov
std
clc
push
xchg
pop
adc
sbb
shl
push
aam
mov
mov
cmc
and
std
clc
retf
clc
push
mov
pop
adc
push
shl
push
aam
mov
sbb
shl
push
aam
mov
in
mov
aam
clc
inc
mov
std
push
push
call
cmc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sahf
mov
inc
leave
mov
push
nop
leave
clc
ss
std
clc
push
mov
push
into
mov
int3
jns
jle
std
clc
push
mov
std
sbb
cmp
pop
xor
push
shl
push
aam
mov
sbb
shl
push
push
int3
mov
inc
fyl2xp1
retf
clc
push
mov
std
rcr
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
mov
scas
cwde
test
mov
in
or
std
clc
push
mov
std
push
push
call
cmc
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
(bad)
jne
out
addr16
std
clc
cmps
mov
std
clc
push
mov
inc
or
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
(bad)
ins
xchg
in
std
clc
pushf
mov
std
clc
push
mov
pop
adc
sbb
shl
push
aam
mov
mov
cmc
and
std
clc
retf
clc
push
mov
pop
adc
push
shl
push
aam
mov
sbb
shl
push
aam
mov
jecxz
mov
aam
clc
inc
mov
std
push
push
call
cmc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
sbb
cmp
mov
mov
std
clc
push
mov
std
rcr
push
sbb
mov
or
clc
xchg
std
clc
push
mov
aam
add
push
shl
push
aam
mov
sbb
shl
push
adc
mov
or
clc
cmp
clc
push
mov
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
sbb
cmp
ret
and
clc
push
mov
std
clc
push
mov
aam
sti
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
shl
pop
mov
aam
clc
inc
mov
std
clc
push
mov
pop
fcomp
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
mov
cmp
pop
das
xchg
pop
adc
sbb
shl
push
aam
mov
mov
repz
aam
mov
std
clc
push
mov
pop
adc
sbb
shl
push
aam
mov
mov
cmc
and
std
clc
retf
clc
push
mov
pop
adc
push
shl
push
aam
mov
sbb
shl
push
aam
mov
fistp
cmp
std
clc
inc
mov
std
push
push
call
cmc
sbb
sbb
das
pop
int
xchg
sbb
shl
push
aam
mov
sbb
shl
push
adc
mov
xchg
leave
clc
cmp
std
clc
push
mov
sbb
mov
dec
jecxz
aam
std
clc
push
mov
std
dec
push
xchg
aam
not
push
shl
push
aam
mov
sbb
shl
push
adc
mov
push
sub
cmp
clc
push
mov
aam
mov
sbb
sbb
das
pop
iret
jno
nop
js
call
pop
mov
sbb
shl
push
adc
mov
ss
push
std
clc
push
mov
std
push
push
call
cmc
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
ret
ja
fstp
ss
std
clc
pop
mov
std
clc
push
mov
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
sbb
cmp
into
xor
push
adc
pop
sar
sbb
shl
push
aam
mov
mov
cmc
and
std
clc
retf
clc
push
mov
pop
adc
sbb
shl
push
aam
mov
mov
cmc
and
std
clc
retf
clc
push
mov
pop
adc
push
shl
push
aam
mov
sbb
shl
push
aam
mov
fistp
xor
std
clc
push
mov
std
push
push
call
cmc
mov
repz
mov
sbb
cmp
pop
xor
push
shl
push
adc
mov
push
inc
clc
xchg
mov
std
clc
push
mov
aam
mov
cmp
mov
std
xchg
push
adc
(bad)
xchg
xchg
pop
adc
push
aam
mov
sbb
shl
push
or
mov
retf
jp
std
clc
push
mov
std
rcr
push
aam
mov
mov
sub
mov
xchg
pop
xor
push
shl
push
sbb
mov
dec
(bad)
into
mov
std
clc
push
mov
aam
sti
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
ret
ja
fistp
xor
std
clc
push
mov
std
clc
push
mov
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
pop
ss
(bad)
mov
mov
cmp
scas
push
iret
jno
sbb
shl
push
aam
mov
mov
repz
std
clc
retf
clc
push
mov
pop
adc
sbb
shl
push
aam
mov
mov
cmc
and
std
clc
retf
clc
push
mov
iret
jno
sbb
shl
push
aam
mov
sbb
shl
push
push
enter
imul
std
clc
push
mov
std
push
push
call
cmc
stc
push
idiv
dec
sub
dec
rcl
fdiv
aam
sub
sbb
shl
push
adc
mov
or
clc
cmp
clc
push
mov
aam
mov
cld
ins
xchg
loop
std
clc
pushf
mov
std
call
or
push
shl
push
aam
mov
sbb
sbb
das
xchg
call
mov
std
clc
push
mov
aam
mov
(bad)
ins
fxam
pop
adc
inc
sub
and
mov
aam
sub
push
shl
push
sbb
mov
mov
stc
cli
mov
std
clc
push
mov
aam
sti
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
ret
ja
fstp
ss
std
clc
push
mov
std
clc
push
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
adc
aaa
div
mov
std
clc
push
push
and
sar
push
aam
mov
test
in
and
inc
mov
std
clc
push
mov
pop
adc
sbb
shl
push
aam
mov
mov
repz
dec
mov
std
clc
push
mov
adc
pop
nop
jp
std
push
aam
mov
sbb
shl
push
adc
mov
or
clc
push
mov
aam
std
push
iret
jno
repz
adc
cld
clc
cld
mov
std
push
push
scas
aam
(bad)
xchg
pop
adc
sbb
shl
push
push
ret
cmps
addr16
push
sub
cmp
clc
push
mov
aam
mov
mov
shr
es
std
clc
push
mov
leave
jno
sbb
shl
push
aam
mov
nop
jp
cld
xor
mov
cmp
std
clc
push
mov
aam
mov
cli
outs
or
cmp
std
clc
push
mov
pop
enter
adc
push
adc
mov
scas
ret
mov
std
clc
push
mov
aam
std
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
shl
pop
stc
cmp
std
clc
push
mov
std
clc
push
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
sbb
cmp
mov
mov
std
clc
push
pushf
xlat
retf
jbe
repnz
pop
xor
jno
imul
sbb
cwde
mov
std
clc
cwde
mov
loope
push
xchg
pop
adc
sbb
shl
push
sbb
mov
sti
outs
fistp
sbb
std
clc
enter
push
mov
test
adc
aaa
push
(bad)
sub
mov
cld
xor
sahf
pop
mov
clc
lods
mov
std
clc
push
lods
in
adc
pop
mov
(bad)
ins
imul
mov
std
enter
into
and
jge
sbb
adc
aaa
clc
mov
xchg
cwde
pop
mov
jnp
jp
std
clc
push
mov
int
add
pop
mov
nop
js
(bad)
xor
std
clc
loopne
std
clc
push
mov
icebp
mov
test
in
aaa
sbb
sub
jae
sub
rcr
mov
mov
std
clc
push
mov
aam
mov
test
in
mov
clc
sbb
std
clc
push
mov
pop
ficomp
pop
sar
sbb
pop
ss
add
push
sub
cmp
clc
push
mov
aam
add
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
(bad)
jne
in
jmp
cmps
std
clc
or
std
clc
push
mov
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
adc
mov
stos
in
push
mov
std
clc
push
pop
in
movs
das
push
mov
(bad)
jecxz
repz
int
clc
and
std
clc
push
mov
pop
adc
push
push
enter
jne
icebp
fst
sbb
std
clc
sub
(bad)
push
scas
jmp
add
das
or
pop
dec
ret
ja
sti
outs
neg
daa
fisub
mov
mov
std
clc
push
sub
shr
aam
mov
mov
fucomip
in
add
std
clc
push
mov
mov
icebp
in
fsub
mov
mov
std
clc
push
sub
shr
aam
mov
sbb
sbb
cmp
into
xor
xor
mov
std
clc
push
lods
jmp
cmc
sti
daa
hlt
mov
mov
popa
mov
(bad)
fild
mov
std
clc
push
mov
std
clc
push
mov
aam
mov
mov
cli
das
enter
std
clc
push
mov
mov
inc
mov
std
in
out
push
mov
leave
clc
cmp
std
clc
push
hlt
popf
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
retf
jae
out
data16
aam
clc
inc
mov
std
clc
push
mov
int
pop
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
mov
std
clc
and
in
push
mov
stos
test
clc
pop
mov
std
call
pop
adc
sbb
shl
push
sbb
mov
jp
fmul
mov
std
clc
push
mov
out
mov
and
dec
sbb
popf
or
sbb
dec
and
lods
jmp
clc
push
mov
(bad)
push
shl
push
aam
mov
sbb
pop
ss
ss
sub
mov
in
in
push
adc
clc
pop
in
data16
and
cli
dec
mov
clc
push
mov
jns
push
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
push
xlat
out
mov
clc
cmp
std
nop
push
and
sub
outs
add
pop
add
clc
xor
jmp
mov
aam
clc
inc
mov
std
rcr
push
aam
mov
sbb
sbb
das
in
fwait
xchg
clc
push
mov
push
xor
cmp
sbb
dec
stc
test
clc
push
mov
mov
push
movs
nop
ror
push
aam
mov
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
int
cmc
stc
outs
outs
sbb
std
clc
lods
mov
std
clc
push
mov
sbb
pop
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
sbb
mov
mov
sti
push
aam
mov
nop
js
(bad)
aaa
push
ins
call
mov
std
clc
push
mov
mov
and
push
and
rcr
push
aam
mov
sbb
shl
push
aam
mov
sbb
sbb
cmp
adc
fidivr
and
mov
push
sbb
mov
cld
out
push
adc
mov
xor
fcmovne
push
repnz
call
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
sbb
mov
jl
mov
(bad)
rol
jle
std
clc
push
mov
std
clc
push
mov
xchg
mov
pop
adc
push
shl
push
aam
mov
sbb
shl
push
aam
mov
nop
js
(bad)
aaa
pop
cs
mov
mov
xor
std
clc
push
lods
in
adc
adc
fisttp
add
std
clc
inc
mov
std
rcr
push
sbb
mov
test
in
xor
and
push
aad
lods
adc
mov
mov
loopne
mov
std
clc
push
xchg
(bad)
mov
repnz
mov
xor
xchg
jne
test
in
xor
int3
and
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
xor
in
cld
clc
add
std
clc
push
mov
std
clc
push
cmp
push
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
adc
mov
test
in
cmp
pop
das
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
in
mov
aam
clc
inc
mov
std
sbb
cmp
(bad)
xor
(bad)
in
and
lods
inc
inc
mov
sar
push
aam
mov
mov
cli
cmp
pop
xor
push
pop
ss
cmps
addr16
(bad)
add
cli
mov
push
leave
jno
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
mov
sub
mov
push
mov
std
clc
push
lock
test
nop
jp
std
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
push
ret
mov
xchg
je
push
sbb
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
in
mov
aam
clc
inc
mov
std
sbb
cmp
mov
(bad)
loop
mov
aam
mov
je
or
lea
(bad)
mov
test
in
xor
pop
adc
xor
cdq
and
mov
mov
aam
scas
inc
(bad)
jne
jbe
push
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
nop
js
(bad)
xor
and
std
clc
push
mov
std
clc
push
pushf
mov
rcl
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
sbb
das
test
cdq
push
pop
call
cmc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
in
mov
aam
clc
inc
mov
std
sbb
cmp
mov
pop
repz
mov
std
clc
push
and
sbb
adc
xor
fs
je
(bad)
mov
sbb
(bad)
xor
popf
and
std
clc
push
mov
mov
push
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
sbb
das
cmc
movs
nop
mov
std
clc
push
mov
xor
pop
das
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
or
xor
scas
and
mov
aam
pop
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
in
mov
aam
clc
inc
mov
std
sbb
cmp
mov
pop
repz
mov
std
clc
push
and
push
push
stos
mov
xchg
(bad)
stos
jne
mov
imul
(bad)
popf
and
std
clc
push
mov
mov
push
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
shl
push
adc
mov
mov
std
clc
push
mov
out
or
sbb
cmp
push
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
mov
sub
lahf
push
loope
jp
mov
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
in
mov
aam
clc
inc
mov
std
sbb
cmp
mov
pop
repz
mov
std
clc
push
and
lock
popf
push
ja
hlt
mov
mov
ror
push
xchg
mov
clc
das
(bad)
popf
pop
mov
std
clc
push
mov
mov
push
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
shl
push
sbb
mov
push
stc
mov
std
clc
push
mov
std
mov
or
into
lea
push
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
(bad)
ins
frstpm(287
pop
adc
inc
mov
std
rcr
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
jecxz
mov
aam
clc
inc
mov
std
sbb
cmp
mov
pop
repz
mov
std
clc
push
push
xor
xor
mov
std
clc
push
mov
std
clc
push
xor
pop
mov
std
clc
push
mov
mov
push
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
shl
push
aam
mov
xor
and
clc
pusha
mov
std
clc
push
mov
retf
jae
nop
js
call
pop
mov
sbb
shl
push
aam
mov
sbb
shl
push
push
(bad)
mov
jmp
aam
dec
mov
std
rcr
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
sbb
mov
fstp
ss
clc
inc
mov
std
sbb
cmp
mov
pop
repz
mov
std
clc
push
and
cli
addr16
std
clc
push
mov
std
clc
push
mov
std
push
push
stos
(bad)
popf
sar
clc
push
mov
mov
push
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
shl
push
aam
mov
nop
jp
cld
xor
clc
xchg
out
out
push
data16
test
out
cmp
pop
das
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
sbb
das
test
push
sub
clc
xchg
mov
int
add
pop
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
adc
mov
xlat
push
jmp
cmps
std
clc
or
std
sbb
cmp
mov
pop
repz
mov
std
clc
push
and
adc
test
ss
xor
and
call
or
cmp
jl
(bad)
popf
out
mov
std
clc
push
mov
mov
push
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
shl
push
aam
mov
sbb
sbb
cmp
into
xor
aaa
add
std
clc
push
lods
jmp
push
push
out
mov
pop
iret
jno
nop
js
call
(bad)
mov
test
out
sub
xchg
pop
xor
std
clc
push
mov
lahf
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
mov
hlt
xor
mov
xchg
sahf
pop
mov
stc
les
std
clc
push
mov
clc
mov
pop
repz
mov
std
clc
push
and
shr
push
enter
ja
fadd
clc
push
or
les
sbb
(bad)
xor
popf
and
std
clc
push
mov
mov
push
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
lods
cmps
mov
dec
mov
std
xchg
or
lds
cld
ins
add
das
add
(bad)
out
in
and
int
cmc
movs
nop
jo
std
clc
push
mov
std
clc
push
repnz
shl
xchg
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
xor
sub
scas
push
addr16
rol
std
clc
push
mov
std
sbb
cmp
mov
(bad)
mov
std
clc
push
mov
cmp
imul
mov
mov
sub
lock
xchg
pop
adc
push
or
xor
scas
and
mov
std
clc
push
test
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
pop
ss
dec
adc
lods
pushf
ss
out
in
push
(bad)
jge
add
leave
stc
iret
aas
in
stos
and
in
movs
and
clc
pusha
mov
int
add
mov
jmp
jge
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
mov
hlt
adc
ret
std
clc
push
mov
std
clc
push
mov
jmp
adc
retf
adc
xchg
mov
std
clc
push
mov
aas
shr
aam
mov
sbb
shl
push
aam
mov
sbb
sbb
das
mov
std
clc
push
mov
mov
push
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sahf
mov
dec
cmps
mov
xor
push
mov
std
clc
push
test
push
jle
or
ret
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
aam
loope
pop
adc
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
shl
push
aam
mov
sbb
pop
aaa
inc
add
loope
add
stos
inc
sbb
jmp
(bad)
pop
loope
cmp
push
inc
sbb
inc
add
inc
mov
add
jmp
add
loope
or
in
inc
add
loope
imul
retf
mov
add
in
pop
add
or
inc
cld
sub
ins
xchg
fisttp
mov
push
add
inc
add
jecxz
dec
pop
neg
pop
sub
add
dec
ror
inc
add
loope
pop
iret
loope
add
inc
mov
push
pop
xchg
test
add
hlt
fst
xchg
rol
cmc
push
rcr
or
add
outs
inc
push
gs
dec
rcl
pusha
or
popf
dec
out
add
popa
mov
add
ror
pop
adc
setl
lea
jle
mov
xchg
jae
gs
xor
pop
es
mov
arpl
jo
jns
jo
jns
jo
jns
jo
jns
sbb
stos
mov
out
jp
push
jns
jo
jns
sub
stos
mov
div
push
mov
pop
stos
mov
lahf
jns
jo
add
pushf
mov
daa
jns
(bad)
fdivr
jo
outs
pop
dec
fsincos
xor
arpl
sbb
xor
aad
je
es
jnp
xchg
vprotw
jns
lock
jnp
jne
jo
xchg
cmp
cld
xor
mov
rcr
into
pop
fst
jo
add
cmp
jb
daa
push
jns
jo
jns
mov
nop
jns
jo
jg
jns
idiv
ss
xor
jns
cmps
fdiv
xor
lock
ficom
repnz
fsincos
xor
aas
loop
mov
jecxz
jo
test
jae
and
xor
cld
xor
ret
adc
es
fidiv
fwait
or
fnstcw
cmps
fcmovu
ins
ja
jnp
dec
fmul
add
xor
mov
xchg
into
mov
xchg
movs
sub
lods
or
movs
and
xchg
mov
adc
mov
clc
jb
data16
rol
jo
mov
jo
or
out
ret
or
retf
pop
(bad)
out
popa
or
mov
ror
add
sbb
punpckhdq
jno
hlt
out
and
(bad)
xor
aaa
adc
add
(bad)
sub
mov
ror
ss
mov
and
xchg
jne
std
mov
jns
jo
push
xor
scas
adc
(bad)
or
mov
jns
jg
sti
xor
rcl
aaa
push
xlat
(bad)
cmps
sbb
jmp
xchg
jns
jno
stos
cmp
jo
lock
inc
or
movs
xor
fwait
or
fld
xor
mov
and
daa
test
sti
gs
add
xchg
(bad)
add
neg
or
inc
lods
or
jb
jns
imul
retf
xchg
(bad)
fisubr
pop
and
shl
into
sahf
xor
fisttp
(bad)
mov
addr16
bound
es
icebp
ins
jmp
in
pushf
fs
outs
mov
jnp
es
clc
mov
in
pushf
fs
outs
mov
jnp
fdiv
pushf
pusha
imul
ins
lock
push
xor
dec
mov
js
mov
js
push
imul
xor
jno
jae
xor
aam
dec
pop
js
mov
mov
cli
xor
mov
xchg
test
jl
mov
pop
call
add
sbb
scas
xor
call
cmp
or
and
test
xor
mov
jno
aas
mov
js
movs
cli
push
mov
js
mov
xor
xor
ins
fs
(bad)
mov
js
mov
enter
and
push
jb
addr16
xchg
mov
push
jb
gs
pop
dec
leave
xchg
xchg
xchg
push
and
sti
retf
stc
shl
test
ficomp
repnz
cmp
fnstcw
cmps
fidiv
or
fdivr
ret
cld
pop
add
push
icebp
sub
xchg
call
pushf
(bad)
and
mov
dec
sub
jb
(bad)
sub
and
fbstp
mov
sahf
cmp
nop
cs
sub
(bad)
pop
loop
jo
jg
jnp
in
iret
and
jae
pop
inc
sbb
je
xor
push
sbb
pop
test
or
fild
xchg
jo
push
mov
shl
jmp
adc
jo
sysexit
cmp
and
lds
cs
mov
xlat
js
push
push
cmp
adc
stos
push
jne
push
mov
jg
jns
xchg
test
scas
and
jp
fisubr
scas
test
push
scas
pop
pop
shr
xor
emms
scas
fmul
iret
(bad)
call
xor
popa
add
mov
xchg
add
push
jl
hlt
cmp
cmp
jmp
movs
or
inc
(bad)
xchg
xchg
pop
es
in
repz
loop
jmp
(bad)
scas
imul
pushf
push
loope
test
push
jge
bsf
push
pop
cmc
out
pop
sbb
mov
imul
aad
fstp
jns
icebp
push
cmp
mov
inc
mov
xlat
mov
fstp
push
lahf
mov
cmp
xchg
adc
fcomp
sbb
pop
loopne
iret
xchg
lahf
scas
loop
fidivr
fldcw
push
jnp
cwde
mov
sbb
rcl
loopne
fist
push
inc
mov
(bad)
cmp
push
adc
or
pop
mov
mov
out
cmp
sbb
icebp
loope
push
push
es
mov
sbb
mov
inc
sbb
fld
sbb
or
xchg
xor
mov
loopne
daa
aaa
lahf
xchg
pop
sbb
mov
adc
ret
addr16
mov
sbb
cmp
or
pop
mov
sbb
aam
div
cs
xor
xchg
xchg
aas
cdq
or
pop
sbb
mov
fcomp
cmp
hlt
adc
push
aam
pop
jae
xchg
push
rcl
adc
outs
ss
push
jae
popf
gs
fcomp
push
cmc
xchg
push
jno
cwde
xchg
stc
iret
mov
aaa
cmp
xor
mov
mov
add
xchg
push
xchg
cmc
xor
xlat
scas
jle
pop
mov
adc
mov
adc
sbb
mov
lahf
mov
adc
stos
cdq
push
pop
mov
mov
push
xchg
leave
xor
xlat
scas
jle
pop
mov
adc
mov
push
int3
push
inc
repnz
cmp
fidiv
mov
mov
mov
inc
and
cmp
ret
neg
fimul
into
fnstcw
repnz
lods
aam
adc
sbb
mov
repnz
fistp
fld
adc
xchg
hlt
retf
rcr
mov
leave
sbb
cmp
fdiv
sbb
or
xchg
test
(bad)
in
mov
stos
push
add
pop
sbb
mov
push
add
ret
adc
mov
pop
sbb
rol
adc
adc
rcl
xor
call
fwait
bts
fldcw
mov
mov
jnp
into
or
mov
ins
leave
int3
fbstp
and
fcomp
cmp
loop
inc
lock
xor
mov
sbb
ss
sbb
xlat
popf
iret
sbb
cdq
pop
inc
es
mov
fstp
adc
repnz
cld
sbb
dec
retf
xor
fdivr
jge
sahf
inc
and
cmp
movs
ja
cmp
outs
adc
ret
mov
sbb
sar
mov
pop
xchg
test
inc
test
outs
adc
fisub
mov
sbb
push
inc
loop
xor
popf
jne
rcl
push
cld
push
rcl
loopne
fist
push
cmps
push
in
push
ror
loopne
fist
push
inc
mov
idiv
fstp
adc
sbb
pop
ins
fld
out
js
xchg
adc
jne
repnz
pop
cmp
retf
rcl
cmp
push
dec
mov
leave
aam
mov
sbb
mov
push
xchg
pop
mov
int3
aam
mov
sbb
mov
add
sbb
mul
imul
pop
inc
es
cmps
popf
add
pop
cmps
mov
sahf
adc
cmp
jle
lahf
add
push
inc
sahf
mov
cmp
int3
(bad)
loop
(bad)
nop
pop
daa
mov
bound
jns
jg
les
(bad)
int
sahf
mov
call
loopne
fld
jns
jnp
cmp
sti
xor
cmp
xor
loop
jo
scas
cmp
fsub
xor
adc
mov
mov
xchg
mov
pushf
xor
dec
push
jns
jb
mov
pop
outs
(bad)
xor
sub
jae
cmp
xchg
and
xor
fdiv
mov
pop
js
ret
mov
mov
xor
push
mov
pop
xchg
xor
mov
sub
jns
sbb
jo
or
inc
(bad)
jmp
ret
jle
mov
push
scas
lahf
or
pop
push
push
je
scas
shl
jo
fwait
or
fisub
mov
shl
retf
mov
jo
scas
pop
mov
cmc
add
jmp
jbe
cld
mov
aas
ja
jo
sti
or
ret
jnp
and
and
clc
inc
mov
iret
(bad)
jbe
js
push
jns
call
iret
mov
xor
(bad)
lods
scas
imul
adc
std
mov
pushf
mov
ret
xchg
(bad)
add
test
stc
inc
xchg
ja
jo
das
or
cs
xchg
(bad)
mov
jp
in
daa
cmps
xor
cld
push
push
ds
dec
cmps
and
or
inc
cmc
or
inc
cmc
or
inc
cmc
or
inc
cmc
popa
and
out
pop
dec
ja
push
inc
mov
push
xor
out
les
ja
push
inc
pop
add
jnp
(bad)
inc
ja
push
cmp
outs
ret
pop
or
inc
cmc
sbb
push
hlt
clc
xor
lahf
fadd
inc
cmc
or
inc
cmc
or
daa
cmc
sbb
(bad)
xor
and
hlt
or
popf
pop
xchg
cs
out
std
and
fsub
(bad)
fistp
cmps
jne
sub
ja
push
inc
mov
push
and
fxtract
std
mov
fsubrp
push
inc
jge
xor
mov
pop
mov
js
(bad)
push
loop
xor
(bad)
sbb
mov
adc
push
inc
jge
shr
or
sub
push
inc
jge
sub
es
inc
sub
xor
or
or
pushf
push
jnp
aam
jne
ror
or
inc
dec
dec
cmc
test
mov
adc
(bad)
xchg
hlt
ret
loope
(bad)
inc
cmc
sbb
scas
sbb
stos
hlt
mov
inc
adc
xor
(bad)
cmc
test
inc
and
cmc
pop
dec
or
push
inc
mov
push
push
inc
lds
xchg
movs
xchg
or
inc
dec
sub
or
push
or
iret
push
les
loopne
pop
test
addr16
mov
adc
jo
shl
test
fild
loopne
pop
test
ja
js
ins
sub
fidiv
test
daa
mov
arpl
or
sub
jb
jns
jns
dec
and
popf
pushf
mov
add
push
mov
jo
jnp
popf
fcom
or
jp
dec
and
popf
test
mov
dec
mov
test
cmps
call
xor
lock
jo
repnz
sbb
mov
mov
jno
jns
in
fdivr
xor
xchg
jae
pop
out
xor
cs
js
jo
fadd
(bad)
cmpps
jnp
jno
jns
add
cmp
sahf
adc
jecxz
fld
cmp
fidiv
cmps
push
jle
jns
and
or
fs
js
movs
push
sub
add
xor
mov
std
push
pcmpeqw
rol
movs
scas
scas
adc
(bad)
es
cmp
sub
sub
mov
rol
jl
scas
stos
inc
mov
xchg
mov
daa
mov
outs
fistp
out
std
daa
pop
ret
pop
scas
scas
jmp
test
jne
std
mov
push
add
ret
jae
stos
mov
dec
sub
int
es
dec
es
pop
daa
cmp
into
dec
add
int
jo
int
daa
sub
into
jl
xchg
daa
or
ret
es
sub
int
es
mov
es
loopne
jne
dec
out
mov
test
ror
xor
(bad)
es
dec
dec
xchg
out
xchg
adc
lock
xchg
into
retf
xchg
retf
pop
mov
(bad)
outs
mov
cld
retf
mov
clc
push
lea
loopne
adc
inc
and
int
aam
int
es
sbb
sbb
push
daa
int
into
sub
xor
mov
cmp
movs
daa
pop
out
pushf
xchg
dec
js
cmp
leave
or
es
(bad)
xlat
(bad)
out
sub
dec
mov
dec
repnz
dec
repnz
dec
repnz
movs
pop
out
or
(bad)
mov
addr16
cli
adc
mov
dec
cmps
mov
dec
es
dec
neg
cwde
es
iret
pushf
es
int3
or
movs
pop
in
or
inc
mov
repnz
jle
or
into
div
mov
(bad)
out
xlat
push
int
push
mov
dec
mul
xlat
(bad)
mov
sub
dec
mov
dec
repnz
dec
repnz
dec
repnz
movs
pop
out
or
xchg
daa
rcr
es
add
es
rol
mov
dec
es
mov
xor
mov
dec
movs
mov
pop
es
(bad)
dec
out
mov
dec
daa
ret
scas
pusha
dec
dec
xchg
cmps
xor
dec
dec
sahf
popa
fstp
lods
popa
mov
add
data16
int
into
lahf
int
adc
mov
jmp
int
iret
jno
mov
push
and
pusha
pop
fidivr
xchg
push
xlat
fcomip
or
daa
mov
arpl
jo
jns
data16
jo
sbb
lea
jle
jno
gs
xor
mov
mov
add
sbb
mov
cs
jnp
jo
jo
mov
js
(bad)
sti
bound
add
call
fimul
mov
xor
or
inc
push
into
fs
jae
mov
jo
or
sbb
or
cmp
outs
jecxz
or
shr
and
jns
mov
sar
push
js
jo
lock
inc
scas
stos
(bad)
sub
sti
xor
xchg
xchg
(bad)
mov
or
jno
jns
movs
fnstcw
scas
or
maskmovq
test
mov
cmps
fs
out
or
jge
dec
and
mov
xor
scas
mov
jp
cmp
jb
loope
inc
dec
pop
shl
jg
aaa
fldcw
retf
movs
xor
xchg
sahf
dec
jne
inc
mov
or
mov
fdivr
add
mov
pop
stos
cmp
ficomp
fild
or
mov
es
inc
mov
iret
cmps
sbb
out
jns
mov
hlt
cmp
fisub
dec
cmp
test
lods
jle
jns
js
(bad)
xor
clc
pushf
or
push
sub
jp
cmp
clc
or
ds
or
aas
sbb
mov
jbe
jg
js
xor
aas
sub
mov
jmp
int
stc
mov
clc
or
aas
jp
cdq
int3
push
pusha
xor
ds
xor
or
fsubrp
push
and
jge
loope
push
loopne
sub
ja
sar
jle
repz
bound
clc
sbb
sub
or
ds
(bad)
jp
aaa
int3
clc
or
aas
xor
xor
cmp
stc
mov
out
inc
in
ds
xor
adc
mov
cli
loope
ds
loope
out
sub
xchg
aas
pop
test
ret
xor
cli
call
sahf
repnz
les
aas
mov
aas
test
sar
lods
mov
test
lahf
stc
jns
inc
pop
test
retf
jns
xor
pop
mov
xor
jg
es
in
pop
test
loopne
fld
jae
push
(bad)
gs
cdq
fnstcw
cmps
fcmovu
add
or
xor
mov
jp
jge
inc
shl
pushf
pop
adc
js
xchg
int3
fild
in
push
fnstsw
or
pop
outs
dec
cld
pop
(bad)
shr
cs
js
jo
shl
and
stos
pop
jno
jns
add
gs
cmp
and
jecxz
dec
push
push
scas
test
jo
es
repnz
or
(bad)
test
add
inc
xchg
fcomp
ret
js
jo
test
pop
scas
push
cmp
sub
cmp
xor
xor
fbld
ja
jo
enter
sbb
imul
jp
aam
out
fld
lock
lods
stos
ror
(bad)
dec
rol
cmp
fimul
mov
inc
xor
inc
xor
shr
pushf
jne
ret
mov
xchg
(bad)
push
hlt
cmp
outs
jns
pop
pop
mov
cmps
sub
pop
jecxz
mov
sti
xor
mov
adc
es
jo
push
into
(bad)
jnp
or
jno
(bad)
pop
cmc
lods
or
dec
fld
retf
cmps
push
push
inc
lock
jbe
pop
sub
jo
sub
in
fild
lds
outs
pop
addr16
dec
pop
addr16
dec
pop
addr16
dec
dec
or
dec
fsub
mov
xor
inc
pop
addr16
dec
dec
cmp
dec
fsub
mov
lahf
ret
add
fsub
mov
or
scas
mov
and
pop
addr16
dec
xor
pop
pop
mov
int
xchg
add
test
test
test
lock
cli
ret
fucomip
enter
(bad)
mov
mov
mov
xchg
mov
push
loope
js
stos
and
mov
test
dec
sub
dec
pop
jge
dec
lods
cwde
mov
ret
sahf
xchg
mov
push
movs
jl
mov
in
inc
inc
addr16
cmp
push
addr16
dec
push
sahf
mov
movs
pusha
shl
addr16
gs
ins
mov
mov
sti
lahf
pop
mov
dec
xchg
xor
addr16
gs
inc
test
test
dec
cmps
lahf
ret
lahf
mov
dec
movs
dec
xor
bound
sub
inc
dec
pop
mov
dec
pop
addr16
dec
mov
dec
movs
mov
mov
cdq
stos
retf
mov
mov
mov
mov
jge
call
cmp
gs
addr16
lahf
jno
push
retf
cmps
lahf
ret
lahf
mov
dec
movs
dec
xor
bound
arpl
mov
inc
dec
pop
mov
dec
pop
mov
fwait
mov
mov
movs
mov
sahf
lea
mov
xor
inc
pop
addr16
dec
dec
scas
or
jns
pop
pop
addr16
dec
shr
dec
push
dec
mov
int
mov
dec
inc
ins
inc
xchg
inc
dec
adc
(bad)
mov
jnp
pop
pop
popa
cmp
mov
jae
dec
mov
inc
loope
clc
mov
mov
addr16
push
addr16
jg
ins
aad
fsub
mov
cmp
dec
fsub
mov
ret
xchg
ret
or
adc
das
int3
repnz
daa
mov
arpl
data16
icebp
add
movs
shr
loopne
pop
test
ja
js
ins
sub
fidiv
test
daa
mov
arpl
leave
jo
jno
jb
jns
jns
out
jo
or
ins
lods
jp
mov
mov
inc
mov
popf
inc
lods
test
jno
jns
xchg
fadd
in
mov
pushf
dec
retf
inc
jmp
test
xchg
or
dec
or
jp
iret
cmps
imul
mov
shl
popf
push
xor
jl
xor
stos
scas
das
mov
loope
xor
stos
cmp
mov
rol
xor
es
push
mov
jo
sub
(bad)
push
xchg
add
and
jnp
test
jo
push
iret
(bad)
jecxz
mov
mov
or
out
(bad)
hlt
adc
and
cld
lods
scas
stc
ja
jo
inc
sub
iret
mov
scas
aaa
ja
jp
mov
and
mov
shr
loop
and
(bad)
jno
jne
dec
mov
xchg
(bad)
jbe
and
lods
or
das
jns
pop
(bad)
rol
xchg
(bad)
adc
or
aaa
std
mov
dec
or
daa
stos
into
(bad)
int3
mov
jae
xor
in
or
lods
jp
add
push
add
jns
add
jns
add
jns
add
jns
push
clc
and
pop
dec
(bad)
stc
stos
add
jns
push
enter
xchg
imul
sti
jmp
cwde
sbb
pop
add
mov
(bad)
xchg
jns
int3
xor
mov
add
and
ja
add
jns
add
jns
add
jns
add
jns
add
jmp
mov
sub
xchg
sar
movs
mov
loopne
movs
mov
inc
xchg
repz
fcom
mov
loopne
shl
xchg
cdq
mov
loopne
mov
pop
xchg
mov
hlt
xchg
mov
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
rcl
jns
add
jns
das
out
pop
add
repnz
push
ins
xchg
dec
aad
xchg
pop
sti
inc
sbb
test
mov
sti
xor
mov
xchg
jno
add
jb
rep
xchg
popa
xchg
add
push
and
push
jns
xchg
mov
rep
xchg
loop
ins
sbb
jl
not
mov
pop
xchg
jns
add
xor
rep
xchg
cli
mov
test
mov
js
add
mul
add
cwde
loopne
sti
ins
js
add
arpl
pop
cwde
fcomp
ins
bound
xchg
cli
stos
push
cwde
shl
mov
xchg
jns
push
cwde
clc
mov
das
xchg
inc
test
cmps
fdivr
test
mov
jns
das
out
pop
add
repnz
add
jns
rcl
xchg
sub
jns
out
imul
dec
sbb
jns
add
jns
int
imul
or
ins
sti
stos
push
xchg
jns
rol
jns
add
lock
xchg
sti
jmp
call
jnp
adc
dec
add
test
sub
inc
test
add
out
add
sbb
push
das
xchg
add
jae
stc
adc
push
or
and
ins
ds
stc
adc
ror
jge
jo
in
lea
outs
sti
retf
daa
js
jo
shl
test
fstp
fldenv
sub
xchg
movs
das
test
loopne
pop
test
ja
js
push
test
sbb
jle
mov
xlat
arpl
mov
fisub
test
repz
addr16
fnstcw
cmps
fisubr
and
jnp
add
mov
test
rdpmc
dec
(bad)
les
adc
xor
mov
xchg
inc
pop
mov
mov
or
addr16
push
sbb
clc
xlat
sbb
push
jb
jo
or
mov
jo
js
jo
add
xlat
lods
scas
dec
jbe
jp
fisubr
mov
scas
scas
mov
jo
ret
or
shl
int3
xor
add
jb
jo
mov
ins
scas
scas
icebp
ja
jb
cwde
sub
ss
push
andnps
popf
(bad)
iret
(bad)
jno
jns
jmp
mov
mov
jmp
out
ret
(bad)
mov
sbb
movs
mov
stos
stos
out
pop
xchg
and
sub
es
ss
push
cmovae
ror
xchg
ror
into
(bad)
dec
test
mov
mov
xor
gs
scas
(bad)
jo
daa
or
iret
pop
push
jno
pop
mov
xchg
out
aas
rol
lods
push
pop
mov
idiv
stos
mov
ret
jo
push
dec
jle
inc
adc
ds
mov
cmp
add
stos
mov
leave
push
dec
(bad)
mov
pop
aas
leave
clc
cmp
add
pushf
pop
dec
push
dec
mov
aas
xor
ss
(bad)
or
pop
leave
hlt
retf
push
dec
(bad)
mov
dec
inc
(bad)
ds
mov
enter
cmp
pop
cmp
push
out
adc
adc
adc
sahf
lods
and
mov
nop
je
sahf
lods
and
cmp
fcomp
es
adc
adc
or
or
dec
xor
mov
sub
loopne
push
enter
(bad)
in
pop
leave
repnz
push
adc
push
adc
xor
jbe
mov
xchg
and
push
out
sub
push
in
sbb
lods
xor
mov
and
xchg
(bad)
pop
rcl
push
leave
(bad)
sbb
ror
and
mov
mov
es
call
leave
shr
and
lods
mov
pop
mov
jp
pushf
xchg
sub
xor
sub
mov
sbb
mov
xor
call
add
dec
ss
mov
and
mov
sbb
mov
enter
rcr
push
stos
jmp
sub
aad
jb
aad
stc
ss
mov
mov
leave
push
(bad)
jmp
dec
retf
hlt
retf
push
dec
(bad)
sbb
cmp
loop
fs
sbb
call
leave
push
mov
repnz
in
jmp
pop
mov
repz
pop
leave
xchg
iret
pop
add
xlat
fucomip
jmp
push
inc
jle
push
dec
mov
(bad)
jmp
push
inc
jle
dec
ret
mov
aas
ficom
push
dec
icebp
or
(bad)
sbb
push
inc
imul
mov
ss
add
sar
leave
test
mov
inc
jno
push
dec
jle
fiadd
(bad)
aad
push
leave
push
dec
dec
stos
and
(bad)
aad
(bad)
add
test
dec
push
pushf
div
jg
dec
ror
mov
inc
stc
leave
push
mov
in
je
cld
loop
fs
test
jp
push
pushf
div
jg
dec
ror
mov
inc
stc
leave
push
mov
in
je
cld
loop
fs
or
pop
retf
cs
jg
dec
ror
mov
inc
stc
leave
push
mov
in
je
cld
loop
fs
or
pop
retf
cs
jg
dec
ror
mov
inc
stc
leave
push
mov
into
leave
stos
arpl
loopne
dec
and
or
hlt
mov
dec
js
aam
les
leave
or
pop
fs
push
mov
(bad)
cmp
test
mov
dec
sub
hlt
mov
dec
js
aam
out
inc
dec
or
pop
fs
push
mov
(bad)
cmp
test
mov
dec
sub
hlt
mov
dec
js
aam
xchg
inc
dec
or
pop
fs
push
mov
(bad)
cmp
test
mov
dec
sub
hlt
mov
dec
js
aam
mov
leave
test
lds
aam
movs
dec
(bad)
repz
xor
(bad)
aad
or
inc
pushf
cli
imul
dec
sub
jg
pop
dec
push
pushf
rcr
mov
dec
or
stos
arpl
in
dec
mov
push
mov
mov
push
dec
repnz
xor
dec
push
sahf
ror
das
mov
repnz
xor
dec
push
pushf
rcr
push
inc
dec
or
stos
arpl
in
dec
mov
push
mov
mov
push
dec
repnz
xor
dec
push
sahf
ror
das
mov
repnz
xor
dec
push
dec
sar
pop
leave
test
dec
inc
dec
push
dec
mov
fsub
push
mov
dec
push
pop
std
inc
mov
cwde
add
xlat
dec
fmulp
hlt
mov
mov
movs
dec
inc
inc
dec
loopne
or
pop
retf
cs
and
push
mov
dec
push
pushf
(bad)
sbb
inc
dec
or
jg
pop
dec
push
dec
ror
dec
inc
bswap
push
dec
dec
ret
in
or
sbb
and
push
mov
(bad)
sbb
inc
dec
or
jg
pop
dec
push
dec
ror
dec
inc
bswap
push
dec
mov
test
sub
pushf
imul
arpl
in
dec
mov
push
push
clc
ficom
neg
xlat
dec
sub
hlt
mov
mov
movs
dec
(bad)
and
stos
mov
loop
mov
add
push
dec
(bad)
shr
mov
loop
fs
xor
jnp
retf
mov
add
sub
retf
adc
or
mov
xor
dec
push
cwde
rol
xlat
dec
or
stos
arpl
in
dec
repnz
clc
sbb
js
cld
loop
fs
fiadd
(bad)
aad
fs
push
dec
cld
(bad)
int3
sub
push
inc
cld
leave
mov
dec
cs
pop
fdivr
dec
push
dec
cmc
(bad)
mov
mov
push
pop
mov
add
hlt
retf
push
dec
(bad)
fistp
inc
out
leave
push
dec
inc
mov
ret
jno
push
dec
add
sbb
pop
dec
ss
push
dec
inc
stos
mov
cmp
add
stos
mov
and
cld
and
sahf
fdiv
add
pop
cli
cdq
push
push
call
dec
push
sub
sbb
pop
inc
dec
cwde
stc
cmp
retf
mov
xchg
push
fbld
repz
loope
and
xor
rep
rol
daa
push
cmp
es
mov
arpl
jo
outs
jmp
or
jb
jo
cmp
jns
jb
jge
repz
cmp
xor
ror
xor
inc
pushf
stc
jbe
mov
fs
retf
add
and
aas
arpl
mov
xchg
push
push
(bad)
(bad)
scas
mov
mov
sub
enter
je
adc
push
and
add
gs
out
pop
and
movs
minps
loopne
xor
jo
jno
stos
cmp
fisub
cmp
repnz
or
out
cmc
mov
outs
fbld
jo
stos
mov
fadd
sar
jge
repz
and
jns
(bad)
fadd
neg
or
inc
cmp
or
ja
jo
or
jl
rcr
pop
push
xchg
jbe
or
idiv
xchg
jo
jns
xchg
(bad)
repz
pop
mov
cmc
sti
xor
mov
hlt
cmp
es
sahf
mov
aaa
or
push
add
xor
inc
movs
push
rol
add
xor
sahf
pop
test
xchg
daa
inc
iret
adc
scas
xor
aad
mov
scas
jmp
es
(bad)
loopne
mov
lods
scas
mov
and
call
xor
pop
cmps
stos
add
es
jecxz
inc
iret
(bad)
jb
pop
ins
fisttp
aas
lea
jnp
fcom
lds
std
sbb
cmp
pop
je
nop
pop
movs
mov
jl
jg
sbb
test
adc
mov
rcr
je
add
jne
xchg
jne
pop
jae
je
add
bound
xchg
je
pop
jmp
pusha
mov
popa
cmc
inc
adc
mov
into
jns
jo
jns
data16
mov
fidivr
call
xor
add
cs
jnp
jo
add
push
pop
jns
js
jnp
jo
jo
dec
vmread
and
add
loopne
dec
xor
jp
xlat
sub
xor
loopne
xchg
xchg
xor
mov
jbe
mov
test
cmps
int3
add
inc
popf
pop
dec
into
add
(bad)
xor
jg
jae
jae
jno
jns
inc
fldcw
enter
jo
scas
scas
fldenv
mov
rcl
sub
xchg
sub
pop
cwde
scas
scas
xchg
mov
jge
in
scas
scas
inc
sub
popf
mov
(bad)
mov
and
jno
dec
and
jo
or
out
jecxz
xor
lea
repz
into
(bad)
cld
outs
sub
rol
std
sub
or
out
fisubr
mov
addr16
jo
scas
push
add
and
ret
mov
sbb
mov
cmc
add
inc
cmp
in
js
jo
add
movs
lods
push
pop
push
es
adc
es
ret
push
adc
ja
jo
dec
or
cmp
jo
in
xchg
into
mov
dec
fisubr
push
ss
mov
sub
rol
test
add
xchg
js
scas
push
pop
arpl
cmp
cdq
aaa
div
pop
cmp
ss
inc
fdivr
and
je
movs
cmp
sahf
(bad)
mov
jbe
int
div
(bad)
ret
xor
xor
ret
sbb
xor
je
xor
ret
sbb
xor
je
xor
cmp
mov
inc
mov
loop
sub
pop
neg
mov
ss
dec
mov
jne
scas
mov
pushf
sub
jbe
repz
ss
(bad)
mov
mov
int3
sahf
and
(bad)
enter
mov
ds
and
mov
leave
cmp
jg
and
mov
leave
cmp
jg
and
mov
leave
cmp
jg
and
mov
push
cmp
mov
sub
js
gs
pusha
and
jns
es
js
das
xor
dec
and
(bad)
lods
ss
and
cmp
enter
mov
ds
and
mov
leave
cmp
jg
and
mov
leave
cmp
jg
and
mov
leave
cmp
jg
and
mov
push
cmp
mov
sub
js
gs
pusha
and
jns
es
js
das
cmp
cmp
jo
movs
cmp
nop
repz
jbe
int
div
add
mov
sub
sub
ret
sbb
xor
je
xor
ret
sbb
xor
je
xor
cmp
mov
inc
mov
int3
xor
cmp
mov
push
mov
ss
dec
mov
jne
scas
mov
call
and
iret
mov
xchg
aas
xlat
enterw
mov
jmp
das
jl
outs
and
adc
and
pop
jl
and
jbe
cmp
in
ja
and
xor
mov
iret
(bad)
(bad)
pop
daa
mov
arpl
jo
jns
jo
jns
jo
outs
jmp
jo
fistp
push
jns
(bad)
(bad)
push
dec
pop
es
xor
arpl
mov
fldcw
retf
outs
pop
xor
popa
adc
ds
mov
jns
pop
or
jb
outs
push
jns
jo
jns
dec
fld
sbb
xor
jns
ss
xchg
push
add
jns
jo
push
xor
lds
push
adc
dec
push
fnstcw
call
out
fxch
es
arpl
jo
jg
push
fstp
lock
hlt
into
jns
jae
jns
jbe
pop
fisubr
out
mov
std
adc
movs
or
scas
dec
int3
pop
outs
sti
retf
outs
pop
xor
outs
push
in
xor
pop
es
lock
iret
es
arpl
dec
jb
jns
cwde
fld
xor
fcomp
fnstcw
jo
xchg
push
fsub
and
repnz
cmp
and
daa
xchg
push
icebp
xchg
sub
xor
jo
iret
es
arpl
sub
pop
xor
jb
(bad)
retf
or
pop
mov
add
jo
jno
jb
jns
jns
jecxz
jno
pushf
fistp
push
test
jae
pop
or
and
jae
push
jne
test
inc
imul
les
push
pushf
fs
jp
jne
mov
or
jae
jp
xchg
addr16
xor
sub
retf
sbb
fadd
xor
pop
jns
outs
pop
adc
cmps
call
xor
pop
mov
xor
mov
xor
cmc
mov
add
(bad)
xor
or
add
int3
arpl
jmp
test
scas
dec
ja
jp
shr
scas
lods
add
popa
(bad)
jne
std
mov
js
daa
aad
iret
(bad)
mov
xchg
jo
outs
xor
cwde
je
scas
scas
sti
ja
jp
dec
sub
push
sub
scas
push
ja
jo
ror
xchg
retf
jo
push
sub
shr
imul
mov
xchg
mov
sar
xor
mov
and
pop
xor
mov
out
xchg
ss
ret
xor
les
into
cmp
jg
jae
jg
sub
cmp
or
(bad)
jg
jae
add
mov
(bad)
jg
popa
mov
addr16
imul
jae
fwait
scas
lods
sbb
dec
mov
mov
xchg
dec
mov
inc
mov
and
jno
pop
fwait
gs
cdq
jno
aaa
aas
dec
lods
adc
jae
pop
mov
scas
xor
mov
jae
and
jge
mov
mov
jge
mov
mov
fwait
mov
scas
jno
sub
mov
gs
mov
mov
repz
mov
addr16
mov
aas
gs
xor
mov
xor
mov
xor
mov
mov
mov
aas
jno
and
fwait
inc
popf
sub
mov
cdq
and
jno
dec
mov
inc
xor
mov
inc
mov
xor
mov
shl
repz
mov
gs
and
imul
xor
mov
jg
mov
xlat
jno
mov
mov
out
xor
xchg
jne
cmp
gs
cmp
aas
jge
cmp
dec
loope
xchg
out
stos
daa
lods
gs
pop
mov
lahf
sub
mov
inc
mov
ins
fldcw
mov
adc
out
xor
mov
out
mov
mov
scas
xor
fldcw
mov
arpl
imul
mov
(bad)
fstp
sub
arpl
sub
xor
mov
jne
mov
mov
inc
fwait
sub
lea
daa
mov
imul
and
(bad)
sbb
arpl
and
out
mov
and
dec
das
dec
mov
inc
test
sbb
inc
xchg
mov
mov
ja
mov
mov
mov
mov
out
cdq
pop
mov
xor
cdq
imul
sbb
out
xchg
mov
mov
dec
xchg
adc
aas
dec
lods
mov
mov
out
xor
mov
stos
and
jns
daa
mov
xor
lods
dec
stos
mov
mov
test
pop
cmps
xor
mov
lods
adc
addr16
sbb
jno
and
fwait
inc
mov
xor
mov
mov
pop
aas
jae
sub
mov
out
pop
sti
out
mov
adc
out
xor
mov
out
mov
mov
scas
xor
mov
inc
xor
mov
pop
xchg
mov
aas
jge
daa
lods
jno
mov
xchg
jg
mov
mov
jge
pop
stc
sub
mov
cmps
inc
mov
mov
scas
cmp
xchg
jge
xor
mov
jns
pop
mov
imul
aas
out
mov
das
mov
scas
xor
xchg
dec
lahf
xor
and
and
dec
xchg
adc
xchg
gs
daa
aas
jge
mov
mov
jns
pop
mov
xor
mov
jns
sbb
jno
or
and
dec
mov
inc
xor
mov
jne
or
lahf
inc
lods
adc
jae
cmp
inc
cdq
sbb
out
xchg
cmp
xchg
out
xor
lods
dec
mov
pop
scas
inc
xor
mov
mov
mov
inc
xchg
mov
xchg
jno
sbb
inc
mov
xor
mov
imul
xchg
aas
(bad)
lods
sbb
jge
or
cmps
repz
xor
mov
xchg
cmp
xchg
jne
cmp
mov
imul
daa
aas
pop
mov
test
out
mov
mov
xor
scas
arpl
xor
jae
and
inc
mov
adc
dec
xor
lods
inc
stos
mov
cdq
gs
xor
fwait
out
and
fwait
dec
mov
adc
jge
daa
cmps
inc
mov
aas
out
lods
sbb
ins
xor
mov
out
xor
mov
imul
sbb
jge
and
out
xor
mov
mov
mov
dec
xor
lods
idiv
and
inc
mov
mov
mov
out
mov
cdq
fistp
mov
jae
ins
test
pop
or
jns
sub
mov
cdq
jge
cmp
mov
scas
mov
mov
dec
cmp
mov
jae
mov
xchg
jno
sbb
inc
mov
and
jno
and
jno
mov
mov
jns
sub
mov
inc
mov
cmp
xchg
jne
and
sar
mov
cdq
imul
sbb
gs
cmp
jge
mov
mov
stos
daa
mov
inc
mov
mov
mov
cmp
jge
mov
sub
(bad)
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
mov
mov
xor
movs
dec
scas
pop
aas
gs
mov
cmps
jge
xor
xchg
out
xchg
mov
cdq
dec
mov
mov
xchg
imul
mov
out
xchg
and
mov
add
pop
stc
sub
pop
stc
sub
mov
mov
popf
cmp
mov
dec
scas
daa
lods
jno
mov
mov
fwait
mov
mov
das
ins
mov
inc
fwait
mov
mov
fwait
sub
cdq
jae
and
inc
mov
mov
xor
repz
aas
jge
pop
xchg
xor
and
gs
sbb
jno
aaa
aas
ins
lods
and
lods
mov
in
jg
xor
int
cdq
sbb
jno
aaa
mov
mov
xor
mov
mov
mov
lods
sub
lahf
xor
mov
ins
das
mov
mov
fwait
sbb
jae
xor
mov
xor
addr16
and
out
xchg
sub
pop
ins
das
lahf
pop
(bad)
gs
iret
xor
iret
icebp
dec
aas
psraw
and
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
xchg
sub
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
xchg
sub
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
lods
adc
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jno
jg
jae
jg
lods
adc
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
lods
adc
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
lods
adc
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
lods
adc
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
dec
jae
mov
scas
mov
mov
jae
pop
stc
sub
gs
sub
scas
xor
mov
inc
lods
pop
mov
mov
jecxz
fwait
adc
dec
scas
and
imul
and
inc
xor
mov
jae
mov
test
out
sub
and
push
scas
mov
xor
ja
daa
aas
jge
mov
mov
mov
mov
movs
jno
pop
cdq
gs
sbb
addr16
mov
lods
jne
mov
ja
and
out
mov
mov
gs
mov
fwait
ins
icebp
push
in
jae
std
dec
jmp
xchg
aas
retf
lods
and
addr16
fwait
out
mov
aaa
mov
gs
cmp
inc
adc
movs
aas
iret
mov
xchg
ins
mov
and
and
and
out
mov
jg
gs
mov
mov
mov
sub
pop
sbb
mov
fwait
adc
out
mov
pop
fwait
out
mov
adc
fwait
jg
cmp
jae
sub
xchg
retf
mov
aas
repz
xchg
cmc
xchg
and
inc
pop
cmp
inc
stos
fbstp
fwait
mov
aas
ins
mov
xor
aas
sbb
mov
mov
lea
xor
mov
jno
daa
mov
mov
and
out
fwait
mov
lods
arpl
gs
ja
or
cmc
neg
lods
out
mov
mov
gs
cmp
jge
mov
pop
out
jmp
xor
gs
pop
scas
jno
sbb
dec
xor
xchg
jge
and
repz
jnp
mov
fwait
cmp
cdq
out
xchg
or
mov
arpl
xchg
and
int
and
jge
xor
and
out
mov
fwait
xor
pop
imul
mov
popa
mov
cmp
jge
cmps
aas
pop
sub
adc
aas
ja
sbb
mov
in
jge
xchg
sbb
mul
xchg
out
movs
xor
aas
or
sbb
gs
lods
inc
xor
jae
jmp
xor
mov
xor
lods
ja
mov
daa
ins
jmp
aas
out
lods
and
out
fwait
cmps
aas
dec
xor
shl
pop
mov
mov
jns
div
pop
lods
dec
fwait
mov
mov
ja
mov
mov
xor
inc
xor
imul
sub
xchg
pop
mov
dec
jmp
mov
cmps
gs
cmps
aas
out
test
adc
cmps
out
lods
adc
aas
jae
ja
sub
addr16
mov
jae
retf
mov
sbb
idiv
mov
lea
jns
div
mov
fwait
gs
aas
sub
lods
daa
mov
popa
cmp
test
out
mov
aas
gs
cdq
aaa
xor
idiv
mov
or
out
mov
sbb
xor
aas
gs
xor
xlat
mov
mov
mov
mov
jge
mov
sbb
aad
mov
dec
mov
aas
inc
mov
pop
fwait
out
mov
das
mov
fistp
mov
imul
xlat
jae
sub
mov
ins
lods
and
out
adc
and
mov
das
aas
jge
sbb
gs
xlat
jno
aaa
mov
xor
aas
retf
mov
sub
out
imul
mov
mov
jae
pop
jmp
adc
cmp
jge
xor
xchg
repz
lods
icebp
fwait
sbb
addr16
jmp
mov
xor
ja
and
jae
movs
aas
xor
xchg
adc
ja
xor
mov
ja
mov
mov
jae
pop
or
xor
jno
pop
mov
jno
mov
imul
scas
mov
popa
cmps
xor
addr16
xor
scas
jge
pop
mov
inc
jmp
mov
addr16
sub
gs
sub
mov
cmp
mov
xor
idiv
fwait
aas
out
sti
jge
(bad)
and
inc
mov
and
mov
(bad)
addr16
pop
mov
dec
test
and
inc
sbb
xchg
and
cmp
inc
xor
mov
jae
mov
rol
scas
cmp
inc
and
xchg
test
pop
lods
jns
cdq
xor
das
gs
fxch
mov
aaa
aas
jno
sbb
out
(bad)
lods
test
xor
lods
std
scas
sub
das
gs
std
(bad)
mov
fwait
ja
mov
fxch
xchg
sub
inc
and
mov
imul
and
inc
cmp
mov
inc
and
ror
mov
mov
dec
adc
lods
aas
mov
aas
arpl
lods
jns
xlat
and
jno
cmp
imul
xchg
mov
icebp
push
in
mov
xchg
out
lods
sub
and
and
stc
mov
xchg
sub
lods
sub
test
repz
xchg
icebp
lods
sub
movs
cmc
test
jmp
icebp
imul
mov
out
jmp
sub
mov
ins
xchg
mov
imul
out
test
mov
mov
jge
mov
scas
jae
daa
mov
imul
cmp
gs
add
sbb
retf
xor
repz
cmp
imul
jmp
ins
mov
cmp
jno
and
repz
cdq
mov
lods
and
jno
daa
aas
ins
mov
and
jno
gs
sub
mov
lods
jno
jmp
jae
fwait
aas
fistp
mov
cmc
add
and
inc
icebp
jnp
out
cmc
cmp
gs
popf
adc
repz
lods
jae
cmp
movs
repz
mov
jge
and
ins
test
fwait
adc
xor
fst
adc
out
mov
xor
lods
pop
aas
jg
and
mov
out
lods
sub
in
addr16
pop
mov
lea
retf
mov
lahf
cmp
and
lods
and
jno
xor
imul
lahf
jg
mov
lods
gs
lods
inc
das
cmp
jne
mov
aas
jno
daa
cmps
xor
fwait
mov
fwait
imul
sub
in
addr16
mov
mov
and
out
xor
out
int
aaa
lods
ins
xor
jae
xor
fwait
out
xor
inc
cdq
sbb
ins
idiv
mov
xor
ins
xor
in
retf
xchg
pop
mov
imul
sub
in
sub
fwait
jno
daa
aas
gs
lods
call
and
dec
jmp
xor
aas
ins
cdq
cmp
dec
xchg
and
jno
and
ins
lods
adc
aas
jg
sub
mov
pop
cdq
sbb
xor
neg
pop
mov
inc
pop
fwait
pop
out
xor
mov
inc
mov
and
jge
jne
jae
pop
mov
jge
and
ins
sar
out
adc
aas
ret
xchg
aas
int
and
addr16
pop
lahf
jg
mov
mov
imul
jmp
mov
lods
sub
xchg
out
lods
sub
in
sub
mov
jge
adc
gs
fwait
pop
mov
stos
xor
aas
ins
mov
sbb
jae
mov
xchg
inc
jmp
xor
fnsave
outs
sbb
xor
imul
adc
inc
scas
sbb
ins
mov
movs
jae
and
mov
jg
arpl
sub
and
and
in
mov
lods
sub
mov
jg
mov
(bad)
out
imul
mov
out
mov
in
jge
xchg
aas
ret
fwait
xor
cdq
out
shr
mov
xchg
mov
mov
lods
and
xor
sub
popf
fld
xor
imul
pop
lahf
jg
mov
mov
imul
in
mov
pop
mov
imul
and
jno
gs
sub
xor
pop
mov
lods
inc
xor
jae
sbb
ins
pop
fwait
sbb
cmc
das
mov
mov
mov
mov
inc
xchg
movs
jecxz
mov
mov
fwait
jno
daa
daa
rcl
aas
imul
imul
pop
mov
imul
jmp
mov
scas
mov
cdq
jne
cmps
aas
dec
lods
and
dec
imul
mov
out
sub
fwait
jno
daa
aas
gs
xor
imul
adc
out
mov
mov
cmps
inc
cdq
sbb
jae
pop
xchg
mov
mov
and
jne
mov
lods
ins
mov
pop
mov
jno
cmp
mov
ins
fisttp
mov
addr16
sbb
ins
sbb
mov
jno
sbb
adc
jnp
shr
out
cdq
sbb
jae
(bad)
adc
out
mov
mov
xchg
ins
jmp
xchg
cmc
mov
mov
jae
cmps
aas
ins
cmc
mov
sbb
pop
in
pop
cdq
and
ins
stos
and
gs
mov
push
mov
imul
or
adc
inc
stos
pop
mov
das
and
inc
adc
aas
out
lods
or
xchg
ja
jne
gs
xor
fnsave
mov
mov
imul
cdq
ins
cmc
and
arpl
movs
aas
iret
adc
mov
aad
and
xor
div
sbb
inc
mul
sbb
out
and
adc
pop
lahf
gs
mov
mov
and
pop
mov
jno
sbb
ins
lods
and
imul
xor
out
mov
mov
jno
jnp
dec
mov
lods
inc
xor
jae
jmp
xor
xor
and
rcr
pop
frstor
sbb
mov
sbb
gs
mov
jno
mov
scas
imul
sbb
lods
ins
mov
(bad)
popa
mov
movs
repz
cmp
xchg
inc
mov
cmp
repz
mov
cmp
mov
scas
cmp
aas
gs
sub
aas
jge
jnp
cmc
mov
lods
inc
xor
jae
jmp
xor
xchg
pop
aas
gs
and
xor
div
sbb
inc
cmc
in
sub
pop
push
and
mov
gs
and
jns
mov
aas
dec
cdq
cmp
rdpmc
jnp
cmc
mov
lods
inc
xor
jae
jmp
xor
mov
popf
gs
mov
mov
and
sbb
ja
popf
and
and
aas
mov
scas
cmp
out
fwait
pop
mov
inc
out
mov
imul
push
scas
mov
jnp
gs
aas
dec
cdq
cmp
rdpmc
jne
jecxz
sbb
mov
outs
mov
pop
mov
aas
gs
cmp
loope
xor
xor
popf
shl
imul
cmps
gs
popf
gs
mov
mov
and
sbb
ja
popf
and
and
cdq
mov
scas
mov
mov
jge
mov
mov
inc
xor
xchg
ins
jmp
mov
jae
jmp
std
xchg
cmp
xor
pop
mov
pop
fwait
xor
fwait
cmp
mov
inc
xor
popf
jge
mov
aas
leave
mov
and
jge
adc
adc
xchg
aas
retf
lods
adc
mov
xchg
and
jno
and
ins
xchg
pop
aas
and
sub
inc
scas
cmp
frstor
outs
sbb
rdpmc
jns
shl
xchg
mov
mov
inc
mov
cmp
jge
cmp
jne
and
inc
scas
mov
mov
mov
mov
sub
sti
inc
fwait
cmp
jge
das
mov
mov
mov
addr16
adc
lds
mov
mov
jge
xor
mov
jae
jns
out
pop
push
aas
cmp
fwait
gs
pop
xchg
mov
scas
sbb
ins
mov
movs
jae
and
icebp
rcl
aas
imul
mov
xor
int
jmp
xor
mov
mov
mov
out
xchg
aaa
lods
ins
xchg
xor
mov
mov
jns
out
adc
and
cdq
sti
retf
fwait
cmp
jge
mov
xchg
jg
aaa
aas
jno
sbb
out
stos
cmp
sbb
xchg
gs
pop
lahf
sbb
ret
xlat
push
loope
sti
mov
cmc
or
pop
out
not
push
loope
sti
mov
daa
sub
mov
mov
cdq
imul
cdq
jge
cmp
mov
repz
imul
jmp
ins
xchg
pop
aas
lods
cmp
cmps
inc
mov
aas
jno
pop
mov
jno
gs
adc
and
jge
cmp
shl
sbb
ja
in
sub
arpl
or
addr16
loope
aas
sub
dec
retf
punpckhwd
pop
sub
jmp
pop
aas
sbb
xor
not
fwait
out
out
addr16
mov
xor
gs
pop
xchg
mov
popf
adc
repz
mov
sbb
movs
sbb
sbb
xchg
gs
jmp
mov
jmp
cmc
or
jns
pand
xor
std
mov
popa
aad
xor
or
push
in
sub
pop
xor
lahf
pop
mov
sbb
jmp
iret
stc
ja
mov
stc
jne
or
ins
fucomi
in
jae
or
aad
jecxz
int
xor
xor
jecxz
jmp
daa
xor
jnp
out
pop
lahf
pop
mov
add
gs
mov
pop
mov
aas
sub
frstpm(287
imul
fwait
and
retf
addr16
adc
int
mov
rol
push
mov
jge
pop
lea
xor
out
stos
cmp
dec
aad
cdq
mov
scas
cmp
xchg
mov
mov
jge
mov
mov
ja
mov
fwait
gs
pop
gs
sbb
sbb
ins
xor
pop
imul
mov
inc
cdq
pop
lods
ja
sbb
jno
in
imul
daa
xchg
dec
mov
cmp
mov
cmp
daa
jno
imul
or
cdq
gs
jmp
mov
xor
ins
mov
lods
inc
xor
jae
sub
sbb
int
cmp
sti
gs
aaa
aas
ja
xor
jae
jns
cmp
adc
inc
mov
pop
mov
jno
in
imul
jmp
inc
fwait
pop
or
adc
inc
mov
mov
lods
adc
ja
and
adc
scas
mov
in
scas
cmp
jno
mov
imul
cdq
daa
int
cmp
gs
fld
mov
jmp
(bad)
out
jmp
gs
sbb
dec
mov
in
jns
pop
lahf
jg
mov
mov
dec
sub
lods
jno
sub
jno
mov
sbb
mov
fwait
jae
adc
neg
or
xchg
mov
sti
xor
fwait
gs
in
ins
sbb
lods
dec
mov
std
jae
mov
fwait
out
scas
pop
mov
mov
mov
inc
popf
adc
repz
pop
fwait
gs
mov
gs
std
sbb
pop
mov
and
aas
jae
cmp
lea
xor
mov
addr16
popf
pop
mov
aad
gs
(bad)
fwait
mov
xor
imul
xchg
icebp
out
adc
out
xor
div
jns
mov
daa
mov
inc
xor
xchg
add
sub
mov
out
addr16
sbb
iret
lahf
xor
mov
inc
mov
push
lods
neg
cmps
aas
jge
cmps
aas
sub
in
addr16
adc
inc
mov
sub
dec
das
cmp
jne
xor
das
xchg
and
gs
mov
jno
daa
lods
aas
mov
aas
arpl
cmp
inc
imul
mov
out
jmp
mov
ins
mov
aas
out
cdq
sbb
pop
stos
or
fwait
dec
xchg
das
aas
jge
cmp
fld
mov
jmp
movs
out
xchg
sbb
out
lods
sub
in
mov
and
gs
and
ja
jmp
xor
scas
xor
jge
adc
lahf
inc
xchg
cmp
ins
mov
and
jno
mov
fwait
jae
mov
xchg
jge
in
gs
sbb
pop
stos
or
fwait
dec
xchg
das
aas
jge
cmp
nop
mov
stos
xor
out
or
cmps
aas
ins
aad
sti
xor
mov
clc
sub
sub
gs
mov
mov
dec
popf
adc
repz
pop
mov
das
cmp
jne
in
jne
(bad)
ud0
popf
sbb
pop
xchg
sbb
imul
xchg
mov
mov
cdq
jge
cmp
inc
mov
cmp
jne
xor
mov
mov
popf
pop
out
xor
aas
(bad)
pop
and
addr16
mov
jae
sbb
idiv
mov
jmp
and
xor
sbb
xchg
and
shl
mov
cmp
lods
inc
mov
lods
inc
mov
cmp
jne
adc
mov
cmc
dec
gs
xchg
adc
mov
mov
and
and
mov
jae
xchg
pop
int
xchg
adc
rcl
imul
cmp
mov
jno
jg
imul
cmp
jne
adc
xlat
imul
mov
inc
sub
jmp
icebp
add
in
cmc
in
adc
lds
movs
sbb
sbb
imul
mov
aas
inc
lods
daa
mov
jmp
mov
addr16
mov
inc
stos
aaa
and
and
mov
ins
mov
mov
adc
(bad)
sbb
movs
mov
xor
sbb
das
xchg
pandn
in
fstp
xchg
aas
fst
pop
mov
ins
mov
aaa
aas
jno
sbb
mov
adc
mov
aad
xchg
out
xchg
das
lods
jno
adc
inc
xchg
cmp
lods
jno
and
mov
lods
aas
lds
xchg
and
iret
scas
adc
int
xchg
and
iret
addr16
pop
mov
outs
mov
xchg
or
mov
fwait
cmps
aas
gs
sub
adc
addr16
mov
pop
mov
xchg
aaa
daa
jno
and
ins
addr16
mov
aaa
mov
div
xchg
ror
imul
lods
mov
fwait
cmp
mov
cmp
inc
mov
movs
repz
mov
daa
or
adc
xchg
dec
mov
lods
das
mov
xchg
jae
das
and
and
cmps
mov
mov
(bad)
pop
int
xchg
pop
iret
sub
imul
push
fwait
mov
xor
mov
jge
in
jno
jmp
mov
cmp
xchg
out
lods
sub
cmps
dec
mov
cmps
jno
pop
mov
jno
and
mov
cmp
xchg
lods
sub
fwait
mov
xor
mov
jge
in
jno
outs
lods
mov
push
stc
inc
addr16
lods
mov
pop
mov
repz
mov
daa
lea
xchg
cmp
xchg
dec
lods
and
mov
sbb
jae
and
repz
mov
sub
mov
xchg
in
gs
adc
inc
lods
sub
mov
xchg
mov
imul
lods
mov
pop
mov
jne
adc
inc
mov
and
xchg
repz
mov
sbb
out
xor
jno
sbb
mov
cdq
mov
mov
lods
jno
mov
imul
out
movs
xor
imul
adc
inc
mov
mov
fwait
cmp
imul
sti
mov
mov
gs
sub
mov
jns
in
mov
sub
or
and
jae
and
mov
pop
fwait
and
mov
setg
lods
sub
movs
repz
mov
sub
mov
cmp
cmp
arpl
jns
mov
jnp
jge
in
dec
lods
sub
mov
mov
movs
repz
mov
and
jae
jmp
mov
xor
imul
stc
jno
xor
lods
mov
das
cmp
jne
and
jno
xor
imul
in
imul
jge
inc
xor
aas
retf
stos
and
dec
lods
and
ja
dec
aas
out
adc
(bad)
lods
and
fistp
xchg
and
retf
sbb
and
inc
scas
cmp
arpl
jns
mov
pop
mov
or
xchg
jne
mov
fwait
jno
mov
imul
lahf
dec
xchg
pop
push
sub
and
and
imul
jns
sub
cmp
mov
repz
mov
setg
lods
sub
(bad)
mov
xor
lods
dec
das
cmp
jne
pop
mov
dec
xchg
sbb
dec
scas
mov
imul
mov
jge
jmp
inc
mov
mov
imul
lods
mov
adc
imul
popf
imul
jg
mov
and
mov
or
mov
jno
in
mov
push
xlat
cmp
fwait
mov
test
mov
pop
sti
sub
in
jge
pop
mov
ins
scas
mov
test
mov
pop
xchg
sub
sub
cdq
jge
cmp
inc
mov
mov
inc
test
pop
xchg
mov
sub
jge
jns
jge
in
jge
sub
xchg
jns
sub
and
movs
in
inc
cdq
pop
lahf
dec
xchg
pop
push
sub
xchg
jns
sub
and
movs
in
inc
addr16
scas
mov
push
mov
dec
mov
imul
aas
retf
mov
sub
out
imul
in
gs
adc
inc
lods
sub
mov
dec
cdq
sub
imul
mov
imul
test
dec
das
cmp
jne
push
mov
out
imul
mov
dec
popf
push
mov
sub
sbb
jge
xor
icebp
fwait
and
sti
mov
mov
movs
repz
mov
daa
or
and
inc
mov
xchg
das
xchg
imul
mov
sbb
pop
int
(bad)
adc
addr16
mov
sub
mov
jno
jnp
mov
sub
mov
repz
imul
xchg
imul
cmp
jge
and
mov
and
jae
jmp
inc
popf
mov
cmps
jno
pop
and
and
imul
xlat
mov
aaa
mov
icebp
adc
cmps
inc
mov
imul
mov
addr16
sbb
ja
and
mov
jge
daa
lahf
jg
sbb
das
mov
pop
fwait
inc
stos
sub
movs
repz
scas
mov
xor
sbb
out
adc
pop
retf
addr16
loope
mul
(bad)
out
pop
popf
sbb
retf
xchg
daa
mov
aad
xchg
out
xchg
xor
mov
mov
pop
shr
addr16
mov
pop
sti
and
in
jge
pop
mov
jno
or
gs
jmp
xchg
mov
sub
stc
lds
mov
mov
imul
mov
inc
fild
out
adc
jge
iret
fwait
sbb
ja
xor
mov
jno
and
imul
mov
jge
pop
xchg
dec
xor
pop
das
in
addr16
sbb
gs
pop
fwait
inc
stos
sub
mov
jge
cmp
jne
pop
mov
jne
sbb
mov
mov
jne
sbb
gs
jmp
mov
xchg
pop
gs
and
gs
cmp
jne
in
mov
sbb
sub
scas
jns
aaa
mov
ja
xor
imul
xor
mov
daa
mov
arpl
jmp
inc
jmp
mov
ins
mov
lods
inc
xchg
in
jae
cmp
ja
sub
mov
jne
push
lods
mov
mov
mov
addr16
ud1
mov
mov
xchg
push
fldenv
ud1
mov
mov
xchg
push
jmp
out
mov
mov
xchg
jge
gs
sbb
ja
ud1
mov
mov
xchg
arpl
inc
stos
cmp
(bad)
addr16
imul
pop
lods
jae
cmp
mov
jg
push
scas
gs
mov
lods
dec
cmc
and
jae
sub
aas
out
xor
mov
arpl
xor
cmps
out
scas
xor
movs
dec
scas
pop
aas
sbb
gs
xchg
jno
pop
mov
pop
mov
jmp
rcl
adc
cdq
imul
and
jae
and
mov
mov
mov
jae
mov
xlat
jae
in
xor
scas
sbb
xor
scas
jno
cmp
cdq
xor
mov
and
out
lods
pop
lea
in
std
lods
mov
xchg
jno
pop
scas
xor
mov
xchg
xor
pop
cmp
mov
dec
icebp
push
in
lods
pop
mov
xor
scas
jae
cmp
dec
lods
and
jge
cmp
inc
mov
in
inc
ins
mov
and
fwait
out
mov
mov
lahf
out
xchg
mov
mov
xor
fwait
inc
and
mov
inc
xchg
xor
mov
xor
aas
jae
pop
mov
jno
daa
cmps
inc
fwait
mov
mov
inc
xor
xchg
dec
fwait
sub
mov
gs
aas
dec
scas
pop
mov
scas
xor
mov
inc
xor
repz
and
out
mov
aaa
fwait
ins
xchg
sbb
gs
mov
imul
cmp
aas
ja
aaa
aas
ins
stos
sub
fnstcw
sbb
out
popf
mov
mov
cmp
xor
xchg
out
xor
cmps
jne
aaa
mov
mov
pop
xchg
jmp
mov
lahf
jae
sbb
jno
cmp
xchg
gs
sbb
jno
sbb
inc
mov
cmp
dec
mov
mov
and
mov
dec
mov
xor
lahf
pop
mov
cmp
pop
stos
sub
cmps
gs
aas
jge
pop
mov
mov
sub
rep
and
out
xchg
pop
mov
xchg
mov
lahf
dec
mov
mov
xchg
jg
sbb
inc
mov
mov
mov
mov
xchg
out
scas
pop
lods
gs
mov
scas
jno
sbb
imul
and
ins
xchg
mov
lods
aaa
xor
mov
out
xor
dec
mov
lods
inc
xor
mov
ja
daa
mov
imul
cmp
and
xor
jae
sub
jge
mov
fwait
jne
mov
mov
dec
scas
pop
mov
xor
scas
dec
xor
mov
dec
mov
cmps
inc
fwait
mov
gs
sbb
inc
movs
xor
aas
out
sbb
lods
jae
and
cmps
jae
mov
mov
xchg
xor
lods
dec
mov
aaa
aas
ins
stos
sub
mov
out
xor
addr16
cmp
mov
cmp
sub
fnstcw
xor
(bad)
out
das
mov
aas
ins
cdq
sbb
out
xor
dec
mov
lods
inc
xor
mov
ja
sbb
arpl
mov
mov
xchg
and
jge
jmp
mov
xor
popa
cmc
and
jae
xor
mov
ja
pop
mov
mov
xor
mov
out
test
mov
fwait
jae
das
mov
mov
xchg
out
lods
sub
mov
mov
cmp
jge
xor
mov
pop
cmp
jmp
mov
test
cmp
aas
jno
pop
stc
sub
and
inc
mov
xchg
pop
lods
sub
mov
arpl
mov
aas
out
xor
xchg
out
lods
sub
mov
addr16
xchg
rep
sub
and
mov
and
dec
fwait
sub
aas
jae
xor
xchg
rep
sub
and
mov
xor
mov
xchg
pop
mov
dec
addr16
xchg
rep
sub
and
mov
adc
sar
mov
jno
xor
xchg
rep
sub
and
mov
cmp
mov
popa
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
jg
jae
add
inc
jl
adc
jl
adc
push
jnp
jle
and
and
(bad)
jge
imul
push
jae
gs
mov
jg
jae
popa
stos
out
jg
gs
scas
enter
push
xor
jns
xor
leave
or
test
stc
popa
das
cs
jg
jne
movs
scas
repnz
jge
jns
jge
jae
je
mov
sub
mov
js
cmp
sub
adc
cld
pop
jae
jns
or
out
jae
imul
pop
mov
jns
jmpw
jge
jg
hlt
stos
jle
jae
fs
jge
jg
out
call
jg
fisttp
out
ja
jle
jae
inc
scas
mov
sub
lea
mov
adc
add
inc
jno
jg
cdq
pop
retf
scas
arpl
inc
or
inc
lds
aaa
scas
ins
je
scas
sbb
push
jae
jbe
mov
je
scas
sbb
push
jae
jbe
dec
loopne
out
xchg
in
iret
repnz
jge
cmp
hlt
scas
cmps
jmp
sub
and
add
jp
repz
std
test
sti
jg
cdq
icebp
repz
cmp
and
sub
mov
stos
pop
stc
std
and
call
call
jle
jae
test
lods
ins
cmc
mov
imul
push
jae
jne
jge
jg
clc
xlat
imul
mov
icebp
(bad)
mov
jl
scas
jae
imul
jae
imul
jae
imul
dec
lods
ins
sti
xor
jae
or
jae
or
jae
or
jae
jns
(bad)
(bad)
aad
loope
scas
jno
jg
or
test
jmp
xchg
(bad)
jg
jne
xchg
scas
repnz
jg
ins
jno
inc
jge
jg
jae
jg
(bad)
(bad)
jg
jne
xchg
scas
repnz
inc
jge
jg
jae
jg
xchg
stc
add
jle
jg
cdq
sub
lahf
hlt
(bad)
aad
adc
jno
jae
jg
jae
aam
or
je
jae
xchg
das
jne
xchg
sub
(bad)
jg
add
fs
cdq
hlt
inc
imul
sar
in
dec
jg
jg
cmps
repz
std
hlt
test
jae
icebp
scas
int
(bad)
movs
jno
jg
movs
jmp
ja
jg
std
hlt
shr
jae
sub
ins
je
scas
sbb
push
jae
jbe
mov
je
scas
sbb
push
jae
jbe
dec
loopne
out
xchg
in
iret
repnz
jge
cmp
hlt
scas
cmps
jmp
sub
and
add
jp
repz
std
cld
cs
jg
pop
jne
mov
ja
jg
sbb
mov
jno
jg
or
mov
jno
jg
icebp
sbb
fxch
sbb
(bad)
push
jno
jae
xchg
das
jne
int
repnz
jg
aad
je
jge
jg
jae
jg
sbb
push
jae
jbe
jae
hlt
out
xchg
cmc
div
(bad)
jge
cmp
js
jae
hlt
scas
mov
mov
adc
adc
jge
jg
jp
daa
lods
jae
popa
lods
add
jg
clc
cmps
fidiv
das
sar
test
cmc
scas
repnz
jns
jmpw
jge
jg
test
loope
inc
jno
pop
scas
jae
imul
dec
lods
xchg
inc
or
xchg
push
or
pushf
pop
icebp
adc
repnz
movs
jae
jg
lea
mov
sub
adc
jge
jg
jp
scas
lods
jae
popa
test
add
jp
inc
test
lahf
xor
div
scas
jo
jg
clc
(bad)
je
scas
lea
addps
sub
jg
lock
imul
jae
imul
jmp
loope
(bad)
aad
jo
scas
jae
or
pushf
dec
or
xchg
push
or
pushf
pop
icebp
adc
repnz
movs
jno
jg
lea
mov
sub
adc
jge
jg
jp
scas
lods
jae
popa
test
add
jp
inc
test
lahf
xor
div
scas
jo
jg
clc
(bad)
je
scas
lea
addps
sub
jg
lock
jmp
jg
idiv
lods
jae
adc
jge
jg
(bad)
fidivr
jmp
jg
cld
cmps
jl
jae
std
scas
int
sti
dec
lds
ror
je
jle
jg
jae
jg
sbb
push
jae
jbe
jae
hlt
out
xchg
cmc
div
(bad)
jge
cmp
js
jae
hlt
scas
mov
mov
adc
adc
jge
jg
jp
daa
lods
jae
popa
lods
add
jg
clc
cmps
fidiv
das
sar
test
cmc
scas
repnz
jge
cld
cld
jg
gs
scas
repnz
jge
sbb
jg
gs
in
scas
repnz
jge
push
cld
jg
gs
scas
repnz
jge
sub
jg
add
jnp
adc
inc
nop
add
hlt
int
repnz
jns
jae
sub
ins
je
scas
sbb
push
jae
jbe
mov
je
scas
sbb
push
jae
jbe
dec
loopne
out
xchg
in
iret
repnz
jge
cmp
hlt
scas
cmps
jmp
sub
and
add
jp
repz
std
cld
cs
jg
pop
jne
mov
jbe
jg
sbb
mov
jo
jg
or
mov
jo
jg
icebp
sbb
not
gs
sbb
int
jne
cwde
xchg
cmp
cmc
push
repnz
jge
fdivr
jg
gs
scas
repnz
jge
cmp
jg
gs
in
scas
repnz
jge
push
cld
jg
gs
scas
repnz
jge
sub
jg
add
jnp
addr16
inc
nop
pop
std
hlt
int
repnz
jae
scas
scas
adc
jne
push
jae
jbe
jae
hlt
out
xchg
cmc
div
(bad)
jge
cmp
js
jae
hlt
scas
mov
mov
adc
adc
jge
jg
jp
daa
lods
jae
popa
lods
add
jg
clc
cmps
fidiv
das
sar
test
xchg
scas
repnz
jg
stc
jmp
jg
lock
lods
jae
push
scas
jge
jg
imul
js
jae
adc
jge
jg
(bad)
fidivr
jmp
jg
cld
cmps
jl
jae
std
scas
push
mov
dec
imul
add
add
stc
icebp
(bad)
mov
jl
scas
pop
jne
mov
je
jg
sbb
mov
jb
jg
or
mov
jb
jg
icebp
sbb
fincstp
adc
fxch
sbb
fxch
adc
or
test
call
mov
(bad)
jg
addr16
rol
scas
sahf
and
or
jno
jae
cld
cs
jg
pop
jne
mov
je
jg
sbb
mov
gs
adc
(bad)
jns
xchg
mov
and
sti
dec
inc
mov
inc
pop
mov
dec
push
stc
add
jle
jg
cdq
jmp
lods
inc
jl
adc
lods
cmp
popf
push
repnz
jge
jns
jge
jae
fs
jge
jg
lock
lods
jae
push
scas
jge
jg
not
jl
jae
adc
jge
jg
(bad)
jmp
jne
sbb
not
leave
fxch
sbb
fxch
adc
fnstcw
jb
jae
jg
jae
adc
jge
jg
jp
jg
clc
cmps
xor
div
scas
je
jg
clc
xchg
xor
div
scas
ins
je
xchg
sbb
push
jae
jbe
sub
jg
ins
je
scas
jae
hlt
jnp
add
idiv
imul
pop
jne
mov
jno
jg
sbb
mov
gs
mov
push
mov
and
mov
dec
lds
ror
je
jle
jg
jae
jg
sbb
push
jae
jbe
jae
hlt
out
xchg
cmc
div
(bad)
jge
cmp
js
jae
hlt
scas
mov
mov
adc
adc
jge
jg
jp
daa
lods
jae
popa
lods
add
jg
clc
cmps
fidiv
das
sar
test
scas
ja
jg
jns
jne
jae
hlt
scas
gs
push
xchg
mov
gs
pop
repnz
jge
xor
jg
gs
scas
repnz
jge
push
clc
jg
gs
in
scas
repnz
jge
sub
jg
gs
scas
repnz
jge
out
jg
add
jnp
test
test
out
repnz
jg
pop
stc
add
jle
jg
cdq
jecxz
scas
cmp
and
jg
gs
lods
repnz
jns
jmpw
jge
jg
test
loope
inc
jno
pop
scas
jae
imul
dec
lods
xchg
(bad)
or
xchg
xlat
or
pushf
fistp
(bad)
(bad)
aad
adc
and
cld
imul
jl
scas
pop
jne
mov
jno
jg
sbb
mov
jo
jg
or
mov
jo
jg
icebp
sbb
not
dec
fxch
sbb
int
pop
(bad)
push
jno
jae
xchg
das
push
xor
push
std
cld
cs
jg
pop
jne
mov
jo
jg
sbb
mov
jo
jg
or
mov
jo
jg
icebp
sbb
not
dec
fxch
sbb
int
pop
(bad)
push
jno
jae
xchg
das
push
xor
push
std
cld
cs
jg
pop
jne
mov
ja
jg
sbb
mov
jo
jg
or
mov
jo
jg
icebp
sbb
not
dec
fxch
sbb
int
pop
(bad)
push
jno
jae
xchg
das
push
xor
push
std
cld
cs
jg
pop
jne
mov
jbe
jg
sbb
mov
jo
jg
or
mov
jo
jg
icebp
sbb
not
dec
fxch
sbb
int
pop
(bad)
push
jno
jae
xchg
das
push
xor
push
std
cld
cs
jg
pop
jne
mov
jne
jg
sbb
mov
jo
jg
or
mov
jo
jg
icebp
sbb
not
dec
fxch
sbb
int
pop
(bad)
push
jno
jae
xchg
das
push
xor
or
xchg
das
gs
pslld
jge
cmp
jg
gs
scas
repnz
jge
mov
xchg
in
scas
repnz
jge
push
cld
jg
gs
scas
repnz
jge
sub
jg
add
jnp
xchg
add
inc
nop
xchg
ror
jge
je
mov
and
in
lods
repnz
jns
pop
jmp
jg
imul
jge
jae
adc
jge
jg
(bad)
jb
test
icebp
(bad)
aad
jo
scas
icebp
sbb
not
dec
fxch
sbb
int
pop
(bad)
push
jno
jae
xchg
das
jne
int
repnz
jg
jae
fs
jge
jg
lock
jle
jae
push
scas
jge
jg
idiv
adc
jge
jg
(bad)
cmps
jge
jae
add
jge
jg
cld
push
lods
jae
std
scas
cmp
ret
inc
dec
mov
dec
inc
stc
add
jge
jg
cdq
fistp
shl
aad
adc
and
cli
imul
jl
scas
jae
imul
jmp
loope
inc
jno
cld
scas
jae
imul
dec
lods
xchg
cmps
or
xchg
mov
adc
(bad)
aad
adc
jb
jae
xchg
das
push
xor
js
jno
jae
imul
jne
push
scas
pop
jne
mov
je
jg
sbb
mov
jb
jg
or
mov
jb
jg
icebp
sbb
fxch
sbb
int
dec
(bad)
dec
jb
jae
xchg
das
jne
ror
jge
je
mov
and
in
lods
repnz
jge
fs
jg
gs
scas
repnz
jge
mov
xchg
in
scas
repnz
jns
int3
jmp
jg
cld
sbb
test
pushf
iret
or
xchg
xlat
or
pushf
fistp
shl
aad
adc
and
cld
jns
xchg
repnz
aad
loope
scas
jb
jg
push
std
cld
cs
jg
pop
jne
mov
jo
jg
sbb
mov
gs
mov
push
mov
and
mov
dec
xor
ror
add
jle
jg
cdq
fistp
mov
adc
and
cld
imul
jl
scas
pop
jne
mov
jno
jg
sbb
mov
gs
mov
push
mov
and
mov
dec
xor
ror
add
jle
jg
cdq
fistp
mov
adc
and
cld
jg
cmp
adc
adc
jno
jae
xchg
das
push
aad
repnz
jns
or
scas
jae
xchg
das
push
shl
js
and
(bad)
jg
cmp
adc
adc
jg
cmps
inc
test
add
push
popa
add
cmps
inc
test
add
push
jno
jg
cmps
inc
test
sub
push
lahf
sar
test
scas
jno
jg
imul
cmp
aam
psadbw
jge
imul
push
jae
jne
jb
jg
js
cmp
scas
adc
outs
and
jns
push
aas
fwait
push
jne
pop
call
stc
stos
add
jp
outs
(bad)
aam
or
push
xor
xchg
scas
gs
pop
mov
ds
adc
aam
jne
pop
(bad)
xchg
jmp
sub
dec
xchg
push
jne
pop
cmps
adc
lahf
fwait
push
jne
pop
mov
push
cmp
pop
stc
popf
mov
pop
cmps
inc
inc
pop
jp
repz
je
jae
jne
jg
jg
fcomp
outs
mov
jae
sbb
imul
inc
das
pop
jae
mov
xor
inc
jg
jg
lahf
repz
lea
scas
pop
mov
jle
jae
jns
jo
xor
adc
add
jg
jg
cdq
shr
cs
push
das
pop
jp
push
js
jae
jae
jg
jae
hlt
scas
jne
pusha
mov
add
mov
in
scas
rol
xchg
das
(bad)
aam
mov
js
jg
js
dec
mov
pop
sub
je
scas
lea
movs
inc
sar
test
outs
retf
push
lahf
jle
lea
movs
pop
sar
test
outs
sub
lea
movs
pop
sar
test
mov
repnz
mov
jae
adc
jge
jg
jp
jg
lea
mov
xor
out
cmps
jmp
scas
repnz
imul
std
jg
aad
sub
idiv
add
je
jg
lea
mov
xor
out
cmps
jmp
scas
repnz
imul
std
jg
aad
sub
idiv
add
jno
jg
lea
mov
sub
das
jp
(bad)
(bad)
repnz
test
(bad)
jge
cmp
jl
jae
sub
jo
jg
cmps
jmp
sbb
pop
rol
adc
js
jg
pop
mov
int3
sub
jne
push
jae
jbe
fwait
dec
and
jne
aaa
scas
les
dec
xor
cld
jg
pop
sub
idiv
add
je
jg
lea
mov
jne
dec
jnp
(bad)
fld
repnz
test
(bad)
jns
cmp
popa
cmps
sub
adc
jge
jg
jp
scas
lods
jae
popa
test
add
jp
jg
clc
lahf
xor
div
scas
jo
jg
clc
(bad)
sbb
bound
push
into
jae
or
pop
jp
jmp
dec
jb
jae
popa
das
sbb
jg
mov
adc
jge
jg
jp
aas
lods
jae
popa
test
add
jp
adc
add
jp
daa
lods
jae
popa
lods
adc
adc
jge
jg
jp
jmp
jae
popa
lods
add
mov
mov
es
jg
lea
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
adc
push
fdivp
outs
int
lahf
sbb
(bad)
call
lock
fistp
jae
hlt
sub
add
js
jg
pop
retf
push
push
jae
jmp
push
jge
(bad)
sbb
pop
mov
js
jg
pop
xchg
push
push
jae
jmp
jl
mov
mov
js
jg
pop
mov
jae
jmp
mov
sbb
push
mov
js
jg
pop
mov
jae
jmp
movs
jge
(bad)
sbb
mov
pop
xchg
push
push
jae
adc
jge
jg
jp
in
lea
mov
shr
jnp
(bad)
fld
repnz
test
mov
je
inc
jl
dec
(bad)
aam
push
idiv
ins
and
and
aam
scas
idiv
sbb
bound
or
(bad)
aam
scas
idiv
sbb
bound
or
(bad)
aam
scas
idiv
or
ins
scas
pop
jae
push
jae
add
or
jg
ins
repz
or
jg
jns
(bad)
fdiv
mov
cmps
fild
mov
jae
mov
jg
sar
scas
jae
push
sub
xor
add
jno
lock
fild
xchg
retf
cmp
add
mov
gs
cld
lds
push
scas
lock
arpl
repz
cdq
push
fs
cmp
xchg
jg
jae
ss
jo
jg
movs
hlt
or
lea
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
adc
adc
jge
jg
jp
repz
sbb
cld
bound
pop
iret
cwde
cmps
shl
lock
lds
dec
add
cmc
aaa
repnz
jns
cmp
popa
cmps
sub
adc
jge
jg
jp
scas
lods
jae
popa
test
add
jp
inc
test
lahf
xor
div
scas
jo
jg
clc
(bad)
je
scas
lea
mov
lea
scas
pop
mov
add
jle
jg
ins
cmc
push
scas
jae
jns
cdq
repnz
aad
loope
scas
jb
jg
js
dec
mov
pop
sub
je
scas
lea
movs
inc
sar
test
outs
jns
lahf
push
lea
movs
pop
sar
test
outs
scas
jb
mov
xchg
lahf
push
repnz
test
(bad)
jns
cmp
jno
jae
jbe
out
jg
lds
int
and
pop
sub
idiv
add
jp
jg
imul
fistp
jae
hlt
sub
add
js
jg
pop
retf
push
push
jae
jmp
movs
jge
(bad)
sbb
mov
pop
xchg
push
push
jae
jmp
jb
mov
mov
js
jg
pop
mov
jae
adc
jge
jg
jp
jne
lea
mov
jae
stos
scas
mov
pop
fild
jae
push
das
pop
jp
repz
scas
adc
cli
test
popf
scas
lock
fistp
jae
hlt
sub
add
js
jg
pop
retf
push
push
jae
jmp
movs
jge
(bad)
sbb
mov
pop
xchg
push
push
jae
jmp
mov
sbb
push
mov
js
jg
pop
mov
jae
adc
jge
jg
jp
push
test
repnz
jns
cmp
xchg
jnp
(bad)
fld
repnz
test
(bad)
jns
cmp
iret
cmps
sbb
push
jae
jbe
dec
out
xlat
push
xor
pop
fild
jae
push
das
pop
jp
repz
push
jae
jbe
sar
jg
ret
add
jge
jg
jp
repz
jge
jg
rol
adc
js
jg
pop
mov
adc
jge
jg
jp
push
test
repnz
jns
cmp
cmps
fldcw
mov
xchg
inc
test
mov
repnz
mov
jge
jg
jp
push
test
repnz
jns
cmp
leave
cmps
cmp
aad
lock
(bad)
repnz
test
icebp
inc
jne
aaa
scas
ret
add
jge
jg
jp
mov
sbb
jg
rol
adc
js
jg
pop
mov
adc
jge
jg
jp
push
test
repnz
jge
cmp
jle
jae
stos
scas
mov
pop
fild
jae
push
das
pop
jp
repz
push
jae
jbe
pop
dec
and
jno
aaa
scas
jb
jg
cmps
daa
scas
sbb
jg
rol
adc
js
jg
pop
mov
adc
jge
jg
jp
push
test
repnz
jge
cmp
stos
scas
mov
pop
fild
jae
push
das
pop
jp
repz
push
jae
jbe
pop
dec
and
jno
aaa
scas
jb
jg
cmps
xchg
scas
sbb
jg
rol
adc
js
jg
pop
mov
adc
jge
jg
jp
push
test
repnz
jge
cmp
cmps
jae
stos
scas
mov
pop
fild
jae
push
das
pop
jp
repz
push
jae
jbe
pop
loope
out
xchg
cmc
div
(bad)
jge
cmp
js
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
adc
push
fdivp
outs
push
mov
xchg
jnp
sub
jg
xchg
lahf
scas
repnz
test
mov
repnz
mov
jge
jg
jp
imul
jno
jae
jbe
xchg
(bad)
jg
lds
dec
scas
aaa
sar
jg
pop
sub
idiv
add
jbe
jg
lea
mov
jae
stos
scas
mov
pop
fild
jae
push
das
pop
jp
repz
push
jae
jbe
pop
dec
and
jno
aaa
scas
jb
jg
cmps
xchg
scas
sbb
jg
rol
adc
js
jg
pop
mov
adc
jge
jg
jp
push
test
repnz
jge
cmp
jge
jae
stos
scas
mov
pop
fild
jae
push
das
pop
jp
repz
push
jae
jbe
pop
dec
and
jno
aaa
scas
jno
jg
cmps
sub
xchg
rol
adc
js
jg
pop
mov
adc
jge
jg
jp
lods
jae
iret
scas
sbb
push
jae
jbe
inc
std
jg
lds
scas
addr16
jg
pop
sub
idiv
add
ret
add
jge
jg
jp
dec
lods
jae
leave
lods
jge
push
jp
(bad)
fld
repnz
test
(bad)
jns
cmp
popa
cmps
sub
adc
jge
jg
jp
imul
adc
jge
jg
jp
sbb
adc
adc
jge
jg
jp
jmp
jae
popa
lods
add
mov
mov
sub
inc
mov
add
js
jg
pop
push
push
push
jae
jmp
jb
mov
mov
lea
movs
pop
sar
test
(bad)
jge
cmp
cmps
jae
sub
jno
jg
cmps
out
scas
sbb
jg
rol
adc
js
jg
pop
mov
jmp
mov
sbb
push
mov
js
jg
pop
mov
jae
jmp
adc
(bad)
sbb
adc
js
jg
pop
xchg
push
push
jae
je
js
jg
jns
jae
jae
xchg
push
jmp
jg
lea
mov
jae
sub
jno
jg
xlat
das
xchg
sbb
(bad)
fldenv
repnz
test
mov
jns
mov
loope
scas
jb
jg
or
test
jmp
je
jg
lea
mov
jae
sub
jb
jg
mov
sub
jae
adc
jle
jg
sub
jg
mov
pop
fild
jae
push
das
pop
jp
sub
jne
push
jae
jbe
mov
jg
ret
add
jge
jg
jp
imul
jb
jg
jae
adc
jle
jg
sub
jg
mov
pop
fild
jae
push
das
pop
jp
sub
push
jno
jae
popa
das
cld
cmc
jg
lea
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
adc
push
fdivp
outs
das
inc
lahf
jb
(bad)
lods
jg
lea
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
adc
push
fdivp
outs
pop
adc
push
jg
xchg
cmc
scas
repnz
jge
cmp
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
adc
push
fdivp
outs
das
inc
lahf
jb
ds
jg
lea
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
adc
push
fdivp
outs
ror
data16
fisubr
cmc
scas
repnz
jge
cmp
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
adc
push
aad
(bad)
in
outs
scas
cmp
mov
repnz
pop
js
dec
mov
pop
sub
je
scas
lea
movs
inc
sar
test
outs
pop
adc
push
push
repnz
test
outs
push
mov
lahf
push
repnz
test
shr
stc
add
jge
jg
fwait
in
jns
int
(bad)
aad
adc
jno
jae
jbe
xlat
cld
jg
ret
add
jge
jg
jp
pop
lods
jae
leave
scas
jns
xchg
jnp
(bad)
(bad)
repnz
test
icebp
(bad)
aad
adc
jno
jae
jbe
jecxz
jg
ret
add
jge
jg
jp
pop
lods
jae
leave
scas
jge
xchg
(bad)
(bad)
repnz
test
mov
je
inc
jl
ins
(bad)
aam
push
idiv
ins
and
and
aam
scas
idiv
sbb
bound
or
(bad)
aam
scas
idiv
sbb
bound
or
(bad)
aam
scas
idiv
jns
int
(bad)
aad
loope
scas
jb
jg
sbb
push
jae
jbe
sub
jg
ret
add
jge
jg
jp
(bad)
lods
jae
leave
scas
aaa
das
jns
lock
(bad)
repnz
test
(bad)
jge
cmp
sub
jb
jg
cmps
mov
jg
rol
adc
js
jg
pop
mov
adc
jge
jg
jp
daa
lods
jae
iret
lods
sbb
push
jae
jbe
jnp
jg
lds
xor
aad
sub
idiv
lods
xor
aaa
or
test
std
popa
das
inc
(bad)
jg
lea
mov
jae
sub
jb
jg
cmps
(bad)
scas
sbb
jg
rol
adc
js
jg
pop
mov
adc
jge
jg
jp
daa
lods
jae
iret
lods
sbb
push
jae
jbe
xchg
(bad)
jg
lds
dec
scas
addr16
jg
pop
sub
idiv
add
jno
jg
lea
mov
jae
stos
scas
mov
pop
fild
jae
push
das
pop
jp
repz
jg
jne
shr
add
jp
daa
lods
jae
iret
lods
sbb
push
jae
jbe
retf
(bad)
jg
lds
dec
scas
cmc
frndint
jg
pop
sub
idiv
test
jns
(bad)
jns
mov
adc
jge
jg
jp
daa
lods
jae
iret
lods
sbb
push
jae
jbe
retf
(bad)
jg
lds
and
aad
sub
idiv
add
jno
jg
lea
mov
jae
stos
scas
mov
pop
fild
jae
push
das
pop
jp
repz
scas
adc
cli
test
xor
cdq
pop
fwait
push
push
jae
hlt
sub
add
js
jg
pop
retf
push
push
jae
jmp
inc
jl
(bad)
sbb
mov
js
jg
pop
xchg
push
push
jae
jmp
mov
sbb
push
mov
js
jg
pop
mov
jae
adc
jge
jg
jp
leave
lods
jae
iret
lods
sbb
push
jae
jbe
(bad)
std
jg
lds
jae
aaa
fdivr
jg
pop
sub
idiv
add
out
jg
jne
int
repnz
jge
jns
jge
jae
je
inc
jl
dec
(bad)
aam
push
idiv
ins
and
and
aam
scas
idiv
sbb
bound
or
(bad)
aam
scas
idiv
sbb
bound
or
(bad)
aam
scas
idiv
add
ret
add
jge
jg
jp
jns
cmps
loope
sbb
jl
popa
rol
adc
js
jg
pop
mov
adc
jge
jg
jp
imul
jle
and
jae
popa
test
add
jp
shr
icebp
inc
jne
aaa
scas
ins
je
dec
repz
or
out
pop
sub
add
mov
jl
adc
pop
je
jae
push
das
pop
jp
add
jne
push
jae
jbe
addr16
out
xchg
cmc
div
(bad)
jge
cmp
cmps
jae
hlt
scas
mov
mov
adc
adc
jge
jg
jp
pop
lods
jae
popa
lods
add
mov
mov
sub
inc
jns
jg
lahf
mov
jg
xchg
lahf
scas
repnz
test
mov
mov
jae
jns
shl
aad
loope
scas
pusha
(bad)
jg
or
popa
das
jbe
jg
imul
fistp
jae
hlt
sub
add
js
jg
pop
retf
push
push
jae
jmp
movs
jge
(bad)
sbb
mov
pop
xchg
push
push
jae
jmp
mov
sbb
push
mov
js
jg
pop
mov
jae
add
jle
jg
ins
cmc
jmp
icebp
inc
jne
aaa
scas
ins
je
mov
jae
jbe
repz
jg
ins
je
scas
sbb
push
jae
jbe
pop
loope
out
xchg
in
iret
repnz
jge
cmp
jl
jae
hlt
scas
adc
push
fdivp
outs
push
mov
xchg
jnp
das
(bad)
jae
scas
lods
adc
sbb
je
jae
push
das
pop
jp
add
jne
push
jae
jbe
out
jg
ins
je
scas
sbb
push
jae
jbe
jae
jg
ins
je
scas
sbb
push
jae
jbe
pop
loope
out
xchg
in
iret
repnz
jge
cmp
jl
jae
hlt
scas
adc
push
fdivp
outs
push
mov
xchg
jnp
das
popf
div
scas
lods
pop
jl
dec
sbb
je
jae
push
das
pop
jp
add
clc
jg
jno
mov
bnd
scas
cld
(bad)
jg
lea
mov
sub
adc
jge
jg
jp
jmp
sbb
adc
jge
jg
jp
sbb
loope
inc
jno
aaa
scas
jo
jg
clc
(bad)
sbb
bound
pop
iret
cwde
cmps
shl
mov
add
pop
push
push
push
jae
adc
jge
jg
jp
jmp
jae
popa
lods
sub
adc
jge
jg
jp
jg
jae
popa
stos
sbb
adc
jge
jg
jp
sbb
loope
inc
jno
aaa
scas
jo
jg
clc
(bad)
sbb
bound
pop
iret
cwde
cmps
shl
lock
lds
jmp
push
or
jle
jae
mov
sbb
push
jae
jbe
addr16
out
xchg
cmc
div
(bad)
jge
cmp
cmps
jae
hlt
scas
mov
mov
adc
adc
jge
jg
jp
pop
lods
jae
popa
lods
add
mov
mov
sub
inc
jb
jg
lds
lahf
scas
repnz
test
std
add
jle
jg
jb
jg
jns
jle
jae
adc
jge
jg
jp
imul
icebp
inc
jno
aaa
scas
jno
jg
clc
xchg
xor
div
scas
ins
je
retf
jno
jae
jbe
push
cld
jg
ins
je
scas
repz
or
out
pop
sub
add
mov
das
xchg
scas
lock
lds
inc
lds
aaa
scas
jno
jg
clc
cmps
xor
div
scas
jbe
jg
clc
xchg
xor
div
scas
ins
je
retf
jno
jae
jbe
push
cld
jg
ins
je
scas
repz
or
out
pop
sub
add
mov
jl
jnp
pop
je
jae
push
das
pop
jp
add
cld
jg
jne
mov
bnd
jns
jle
jae
adc
jge
jg
jp
imul
icebp
inc
jno
aaa
scas
jno
jg
clc
xchg
xor
div
scas
ins
je
retf
jno
jae
jbe
push
cld
jg
ins
je
scas
repz
or
out
pop
sub
add
mov
das
imul
hlt
inc
(bad)
aam
scas
idiv
add
jno
jg
clc
cmps
xor
div
scas
jbe
jg
clc
xchg
xor
div
scas
ins
je
retf
jno
jae
jbe
push
cld
jg
ins
je
scas
repz
or
out
pop
sub
add
mov
das
xor
xchg
hlt
inc
(bad)
aam
scas
idiv
lods
xor
adc
xor
jle
jae
jne
jb
jg
sbb
push
jae
jbe
addr16
out
xchg
cmc
div
(bad)
jge
cmp
cmps
jae
hlt
scas
mov
mov
adc
adc
jge
jg
jp
pop
lods
jae
popa
lods
add
mov
mov
sub
inc
mov
add
pop
push
push
push
jae
adc
jge
jg
jp
jmp
jae
popa
lods
sub
adc
jge
jg
jp
jg
jae
popa
stos
sbb
adc
jge
jg
jp
sbb
loope
inc
jno
aaa
scas
jo
jg
clc
(bad)
sbb
bound
pop
iret
cwde
cmps
shl
mov
add
pop
push
push
push
jae
push
js
jb
jae
jg
jae
xchg
scas
mov
cmp
idiv
jns
mov
loope
scas
jno
jg
js
dec
mov
pop
sub
je
scas
lea
movs
inc
sar
test
outs
jns
lahf
push
lea
movs
pop
sar
test
outs
push
mov
lahf
push
repnz
test
(bad)
jns
cmp
popa
cmps
sub
adc
jge
jg
jp
jmp
sbb
adc
jge
jg
jp
sbb
loope
inc
jno
aaa
scas
jo
jg
clc
(bad)
sbb
bound
pop
iret
cwde
cmps
shl
mov
add
pop
push
push
push
jae
adc
jge
jg
jp
jmp
jae
popa
lods
sub
adc
jge
jg
jp
jg
jae
popa
stos
sbb
adc
jge
jg
jp
sbb
loope
inc
jno
aaa
scas
jo
jg
clc
(bad)
sbb
bound
pop
iret
cwde
cmps
shl
mov
add
pop
push
push
push
jae
xchg
sub
adc
push
scas
pop
jp
retf
clc
scas
fidivr
jae
push
das
pop
jp
fwait
repz
test
mov
pop
sub
jmp
jae
push
das
pop
jp
ret
repz
or
out
pop
sub
add
push
sbb
je
jae
push
das
pop
jp
fistp
jne
push
jae
jbe
addr16
and
jne
aaa
scas
lds
jae
popf
mov
jg
pop
sub
idiv
add
or
xchg
das
imul
fistp
jae
hlt
sub
add
js
jg
pop
retf
push
push
jae
jmp
movs
jge
(bad)
sbb
mov
pop
xchg
push
push
jae
jmp
mov
sbb
push
mov
js
jg
pop
mov
jae
in
js
dec
mov
pop
sub
je
scas
lea
movs
inc
sar
test
outs
jns
lahf
push
lea
movs
pop
sar
test
outs
push
mov
lahf
push
repnz
test
(bad)
jns
cmp
cmps
sub
adc
jge
jg
jp
daa
lods
jae
popa
lods
sbb
adc
jge
jg
jp
imul
icebp
inc
jne
aaa
scas
ins
je
retf
or
out
pop
sub
add
mov
adc
xchg
jnp
sub
mov
lahf
scas
repnz
test
std
add
jle
jg
jb
jg
inc
sub
cwde
cmps
shl
lock
lds
jmp
dec
bnd
mov
cmps
fbld
sub
inc
mov
add
pop
push
push
push
jae
in
sub
xor
xchg
das
cmps
fbld
sub
inc
mov
add
pop
push
push
push
jae
xor
or
jle
jae
dec
scas
push
in
jnp
sub
inc
mov
jg
xchg
lahf
scas
repnz
test
mov
add
jle
jg
cdq
popa
lods
xchg
retf
cld
movs
rol
push
scas
pop
jp
retf
clc
scas
fidivr
jae
push
das
pop
jp
fwait
repz
test
mov
pop
sub
jmp
jae
push
das
pop
jp
ret
repz
or
out
pop
sub
add
push
sbb
je
jae
push
das
pop
jp
fucomi
in
jns
jl
cmc
(bad)
aam
push
idiv
ins
and
and
aam
scas
idiv
sbb
bound
or
(bad)
aam
scas
idiv
sbb
bound
or
(bad)
aam
scas
idiv
jns
xchg
repnz
aad
adc
jno
jae
jbe
outs
std
jg
ins
je
scas
sbb
push
jae
jbe
fwait
cld
jg
ins
je
scas
sbb
push
jae
jbe
addr16
out
xchg
in
iret
repnz
jns
cmp
jmp
jl
(bad)
sbb
push
mov
stc
icebp
inc
jne
aaa
scas
ins
je
mov
jae
jbe
fwait
cld
jg
ins
je
scas
sbb
push
jae
jbe
addr16
out
xchg
in
iret
repnz
jns
cmp
jmp
jl
(bad)
sbb
push
mov
sub
inc
mov
add
pop
push
push
push
jae
xchg
sub
lods
adc
loope
dec
jb
jae
popa
das
rcr
movs
imul
fistp
jae
hlt
sub
add
js
jg
pop
retf
push
push
jae
jmp
movs
jge
(bad)
sbb
mov
pop
xchg
push
push
jae
jmp
mov
sbb
push
mov
js
jg
pop
mov
jae
xchg
sub
jns
mov
loope
scas
pusha
(bad)
jg
js
cmp
sub
fs
sbb
jns
cmp
adc
inc
outs
lock
xor
(bad)
fistp
jae
hlt
sub
add
js
jg
pop
retf
push
push
jae
jmp
movs
jge
(bad)
sbb
mov
pop
xchg
push
push
jae
jmp
mov
sbb
push
mov
js
jg
pop
mov
jae
in
js
dec
mov
pop
sub
je
scas
lea
movs
inc
sar
test
outs
jns
lahf
push
lea
movs
pop
sar
test
outs
push
mov
lahf
push
repnz
test
add
pop
add
jge
jg
jp
imul
icebp
inc
jno
aaa
scas
jno
jg
clc
xchg
xor
xchg
aaa
scas
clc
lahf
xor
xchg
scas
clc
(bad)
sbb
bound
pop
iret
cwde
cmps
shl
js
jg
pop
push
push
push
jae
xchg
sub
mov
test
inc
jg
inc
mov
jg
cdq
icebp
or
jo
jg
jae
jne
mov
and
dec
mov
pop
sub
je
scas
lea
movs
inc
sar
test
outs
jns
lahf
push
lea
movs
pop
sar
test
outs
push
mov
lahf
push
repnz
test
inc
scas
lock
inc
jge
jg
jp
out
lods
jae
popa
scas
sub
adc
jge
jg
jp
scas
lods
jae
popa
test
add
jp
imul
icebp
inc
jno
aaa
scas
jo
jg
clc
(bad)
sbb
bound
pop
iret
cwde
cmps
shl
mov
add
pop
push
push
push
jae
shr
jae
jg
dec
popf
cld
aad
loope
scas
jb
jg
sbb
push
jae
jbe
jecxz
jg
ins
je
scas
sbb
push
jae
jbe
fwait
cld
jg
ins
je
scas
sbb
push
jae
jbe
addr16
out
xchg
in
iret
repnz
jge
cmp
jl
jae
hlt
scas
adc
push
fdivp
outs
push
mov
xchg
jnp
das
movs
div
scas
scas
aaa
jl
pop
sbb
je
jae
push
das
pop
jp
add
jne
push
jae
jbe
aas
sti
jg
ins
je
scas
sbb
push
jae
jbe
xlat
stc
jg
ins
je
scas
sbb
push
jae
jbe
addr16
out
xchg
in
iret
repnz
jge
cmp
jl
jae
hlt
scas
adc
push
fdivp
outs
push
mov
xchg
jnp
sub
jg
xchg
lahf
scas
repnz
test
inc
adc
cdq
xor
lds
aaa
scas
jb
jg
clc
cmps
xor
div
scas
jo
jg
clc
xchg
xor
div
scas
ins
je
mov
jae
jbe
push
cld
jg
ins
je
scas
repz
or
out
pop
sub
add
mov
jl
sbb
pop
je
jae
push
das
pop
jp
add
jg
jae
inc
scas
lock
jnp
jns
jle
jae
adc
jge
jg
jp
out
lods
jae
popa
scas
sub
adc
jge
jg
jp
xchg
lods
jae
popa
lods
sbb
adc
jge
jg
jp
imul
icebp
inc
jno
aaa
scas
jo
jg
clc
(bad)
sbb
bound
pop
iret
cwde
cmps
shl
mov
add
pop
push
push
push
jae
adc
jge
jg
jp
xor
sub
adc
jge
jg
jp
fld
sbb
adc
jge
jg
jp
jae
clc
lahf
xor
div
scas
jo
jg
clc
(bad)
sbb
bound
pop
iret
cwde
cmps
shl
mov
add
pop
push
push
push
jae
adc
jae
jg
dec
popf
cld
aad
adc
jno
jae
jbe
jecxz
jg
ins
je
scas
sbb
push
jae
jbe
fwait
cld
jg
ins
je
scas
sbb
push
jae
jbe
addr16
out
xchg
in
iret
repnz
jge
cmp
jl
jae
hlt
scas
adc
push
fdivp
outs
push
mov
xchg
jnp
das
(bad)
jae
scas
lods
and
sbb
je
jae
push
das
pop
jp
add
cmc
jg
jae
inc
scas
lock
mov
jle
and
jae
popa
scas
sub
adc
jge
jg
jp
xchg
lods
jae
popa
lods
sbb
adc
jge
jg
jp
imul
icebp
inc
jno
aaa
scas
jo
jg
clc
(bad)
sbb
bound
pop
iret
cwde
cmps
shl
mov
add
pop
push
push
push
jae
fisubr
jae
jg
dec
popf
cld
aad
adc
jno
jae
jbe
jecxz
jg
ins
je
scas
sbb
push
jae
jbe
fwait
cld
jg
ins
je
scas
sbb
push
jae
jbe
addr16
out
xchg
in
iret
repnz
jge
cmp
jl
jae
hlt
scas
adc
push
fdivp
outs
push
mov
xchg
jnp
das
pop
div
scas
lods
daa
jl
sti
sbb
je
jae
push
das
pop
jp
add
test
lock
mov
jle
and
jae
popa
scas
sub
adc
jge
jg
jp
xchg
lods
jae
popa
lods
sbb
adc
jge
jg
jp
imul
icebp
inc
jno
aaa
scas
jo
jg
clc
(bad)
sbb
bound
pop
iret
cwde
cmps
shl
mov
add
pop
push
push
push
jae
mov
test
popf
cld
aad
adc
jno
jae
jbe
jecxz
jg
ins
je
scas
sbb
push
jae
jbe
fwait
cld
jg
ins
je
scas
sbb
push
jae
jbe
addr16
out
xchg
in
iret
repnz
jge
cmp
jl
jae
hlt
scas
adc
push
fdivp
outs
push
mov
xchg
jnp
sub
test
xchg
lahf
scas
repnz
test
inc
adc
cdq
sub
inc
jno
aaa
scas
jb
jg
clc
cmps
xor
div
scas
jo
jg
clc
xchg
xor
div
scas
ins
je
mov
jae
jbe
push
cld
jg
ins
je
scas
repz
or
out
pop
sub
add
mov
das
test
xchg
hlt
inc
(bad)
aam
scas
idiv
lods
xor
mov
rcr
lea
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
adc
adc
jge
jg
jp
pop
lods
jae
popa
lods
add
mov
mov
sub
inc
mov
add
pop
push
push
push
jae
inc
sub
jg
dec
popf
cld
aad
adc
jno
jae
jbe
jecxz
jg
ins
je
scas
sbb
push
jae
jbe
fwait
cld
jg
ins
je
scas
sbb
push
jae
jbe
addr16
out
xchg
in
iret
repnz
jge
cmp
jl
jae
hlt
scas
adc
push
fdivp
outs
push
mov
xchg
jnp
das
shl
jae
scas
scas
sub
sbb
je
jae
push
das
pop
jp
add
sti
jg
jae
inc
scas
lock
mov
jle
and
jae
popa
scas
sub
adc
jge
jg
jp
xchg
lods
jae
popa
lods
sbb
adc
jge
jg
jp
imul
icebp
inc
jno
aaa
scas
jo
jg
clc
(bad)
sbb
bound
pop
iret
cwde
cmps
shl
lock
lds
jmp
aad
rcr
lea
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
adc
adc
jge
jg
jp
pop
lods
jae
popa
lods
add
mov
mov
sub
inc
mov
add
pop
push
push
push
jae
loop
jae
jg
dec
popf
cld
aad
adc
jno
jae
jbe
jecxz
jg
ins
je
scas
sbb
push
jae
jbe
fwait
cld
jg
ins
je
scas
sbb
push
jae
jbe
addr16
out
xchg
in
iret
repnz
jge
cmp
jl
jae
hlt
scas
adc
push
fdivp
outs
push
mov
xchg
jnp
das
dec
div
scas
scas
sub
pop
je
jae
push
das
pop
jp
add
(bad)
jg
jae
inc
scas
lock
mov
jle
and
jae
popa
scas
sub
adc
jge
jg
jp
xchg
lods
jae
popa
lods
sbb
adc
jge
jg
jp
imul
icebp
inc
jno
aaa
scas
jo
jg
clc
(bad)
sbb
bound
pop
iret
cwde
cmps
shl
mov
add
pop
push
push
push
jae
movs
sub
rcr
lea
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
adc
adc
jge
jg
jp
pop
lods
jae
popa
lods
add
mov
mov
sub
inc
jb
jg
add
lahf
scas
repnz
test
mov
jb
jae
jge
mov
(bad)
jg
ins
cmc
scas
scas
jae
lods
xchg
retf
cld
movs
rol
push
scas
pop
jp
retf
clc
scas
fidivr
jae
push
das
pop
jp
fwait
repz
test
mov
pop
sub
jmp
jae
push
das
pop
jp
ret
repz
or
out
pop
sub
add
push
sbb
je
jae
push
das
pop
jp
fistp
jne
push
jae
jbe
addr16
out
xchg
cmc
div
(bad)
jge
cmp
hlt
scas
mov
mov
adc
adc
jge
jg
jp
inc
test
sbb
cld
bound
add
xor
push
in
jnp
sub
lea
movs
(bad)
cli
test
(bad)
jge
cmp
cmps
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
adc
adc
jge
jg
jp
pop
lods
jae
popa
lods
add
mov
mov
sub
inc
jb
jg
lahf
mov
lahf
scas
repnz
test
(bad)
jns
cmp
popa
cmps
sub
adc
jge
jg
jp
daa
lods
jae
popa
lods
sbb
adc
jge
jg
jp
out
lods
jae
popa
scas
adc
adc
jge
jg
jp
mov
jae
popa
scas
add
mov
mov
lock
mov
pop
je
jae
push
das
pop
jp
add
jne
push
jae
jbe
jecxz
jg
ins
je
scas
sbb
push
jae
jbe
mov
je
scas
sbb
push
jae
jbe
jecxz
jg
ins
je
scas
sbb
push
jae
jbe
push
cld
jg
ins
je
scas
repz
or
out
pop
sub
add
sar
cmps
fbld
sub
inc
jo
jg
lea
movs
(bad)
cli
test
mov
bound
jae
jns
mov
loope
scas
jo
jg
js
dec
mov
pop
sub
je
scas
lea
movs
inc
sar
test
outs
jns
lahf
push
lea
movs
pop
sar
test
outs
push
mov
lahf
push
repnz
test
(bad)
jns
cmp
popa
cmps
sub
adc
jge
jg
jp
daa
lods
jae
popa
lods
sbb
adc
jge
jg
jp
imul
icebp
inc
jne
aaa
scas
ins
je
xchg
repz
or
out
pop
sub
add
mov
gs
sub
inc
fld
adc
js
jg
pop
push
push
push
jae
adc
jge
jg
jp
out
lods
jae
popa
scas
sub
adc
jge
jg
jp
scas
lods
jae
popa
test
add
jp
imul
icebp
inc
jno
aaa
scas
jo
jg
clc
(bad)
sbb
bound
pop
iret
cwde
cmps
shl
mov
add
pop
push
push
push
jae
adc
jge
jg
jp
imul
icebp
inc
jno
aaa
scas
jno
jg
clc
xchg
xor
div
scas
jb
jg
clc
lahf
xor
div
scas
jb
jg
clc
(bad)
sbb
bound
add
dec
jl
ja
in
jnp
sub
lea
movs
(bad)
cli
test
(bad)
jge
cmp
cmps
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
adc
push
fdivp
outs
push
mov
inc
mov
sub
cwde
cmps
shl
fld
adc
js
jg
pop
push
push
push
jae
xchg
sub
lods
xor
popf
or
jle
jae
jne
jno
jg
js
dec
mov
pop
sub
je
scas
lea
movs
inc
sar
test
outs
jns
lahf
push
lea
movs
pop
sar
test
outs
push
mov
lahf
push
repnz
test
(bad)
jns
cmp
popa
cmps
sub
adc
jge
jg
jp
daa
lods
jae
popa
lods
sbb
adc
jge
jg
jp
imul
icebp
inc
jne
aaa
scas
ins
je
xchg
repz
or
out
pop
sub
add
mov
gs
sub
inc
fld
adc
js
jg
pop
push
push
push
jae
adc
jge
jg
jp
out
lods
jae
popa
scas
sub
adc
jge
jg
jp
scas
lods
jae
popa
test
add
jp
imul
icebp
inc
jno
aaa
scas
jo
jg
clc
(bad)
sbb
bound
pop
iret
cwde
cmps
shl
mov
add
pop
push
push
push
jae
xchg
sub
lods
xor
jne
sbb
sub
je
scas
lea
movs
inc
sar
test
outs
jns
lahf
push
lea
movs
pop
sar
test
outs
push
mov
lahf
push
repnz
test
(bad)
jns
cmp
popa
cmps
sub
adc
jge
jg
jp
daa
lods
jae
popa
lods
sbb
adc
jge
jg
jp
imul
icebp
inc
jne
aaa
scas
ins
je
xchg
repz
or
out
pop
sub
add
mov
gs
sub
inc
fld
adc
js
jg
pop
push
push
push
jae
xchg
sub
adc
push
scas
pop
jp
retf
clc
scas
fidivr
jae
push
das
pop
jp
fwait
repz
test
mov
pop
sub
jmp
jae
push
das
pop
jp
ret
repz
or
out
pop
sub
add
push
sbb
je
jae
push
das
pop
jp
fistp
jne
push
jae
jbe
jecxz
jg
ins
je
scas
sbb
push
jae
jbe
mov
je
scas
sbb
push
jae
jbe
addr16
out
xchg
in
iret
repnz
jge
cmp
jl
jae
hlt
scas
adc
push
fdivp
outs
push
mov
xchg
jnp
das
jge
jae
scas
scas
xor
sbb
je
jae
push
das
pop
jp
add
sar
test
stc
add
jle
jg
ins
cmc
push
cmps
jae
sub
ins
je
mov
jae
jbe
mov
je
scas
sbb
push
jae
jbe
addr16
out
xchg
in
iret
repnz
jge
cmp
jl
jae
hlt
scas
adc
push
fdivp
outs
push
mov
dec
mov
pop
sub
je
scas
lea
movs
inc
sar
test
outs
jns
lahf
push
lea
movs
pop
sar
test
outs
push
mov
lahf
push
repnz
test
push
stos
inc
mov
add
pop
push
push
push
jae
xchg
sub
add
ins
je
scas
sbb
push
jae
jbe
mov
je
scas
sbb
push
jae
jbe
push
cld
jg
ins
je
scas
sbb
push
jae
jbe
sub
jg
ins
je
scas
repz
repnz
mov
pop
sub
lock
xchg
jge
jg
js
dec
mov
pop
sub
je
scas
lea
movs
inc
sar
test
outs
and
jo
lea
movs
pop
sar
test
outs
xlat
or
lahf
push
repnz
test
(bad)
jns
cmp
popa
cmps
sub
adc
jge
jg
jp
mov
clc
xchg
xor
div
scas
jo
jg
clc
lahf
xor
div
scas
jo
jg
clc
(bad)
sbb
bound
xor
mov
das
aas
jp
inc
lds
inc
lds
aaa
scas
ins
je
adc
jne
push
jae
jbe
inc
std
jg
ins
je
scas
sbb
push
jae
jbe
push
cld
jg
ins
je
scas
sbb
push
jae
jbe
sub
jg
ins
je
scas
repz
jle
mov
pop
sub
(bad)
stos
scas
imul
add
jg
sbb
je
jae
push
das
pop
jp
add
jne
push
jae
jbe
inc
std
jg
ins
je
scas
sbb
push
jae
jbe
idiv
jg
ins
je
scas
sbb
push
jae
jbe
push
cld
jg
ins
je
scas
sbb
push
jae
jbe
sub
jg
ins
je
scas
repz
jle
mov
pop
sub
(bad)
stos
scas
imul
add
out
sbb
je
jae
push
das
pop
jp
add
jne
push
jae
jbe
idiv
jg
ins
je
scas
sbb
push
jae
jbe
pop
sti
jg
ins
je
scas
sbb
push
jae
jbe
push
cld
jg
ins
je
scas
sbb
push
jae
jbe
sub
jg
ins
je
scas
repz
jle
mov
pop
sub
(bad)
stos
scas
imul
add
int
pop
je
jae
push
das
pop
jp
add
jne
push
jae
jbe
pop
sti
jg
ins
je
scas
sbb
push
jae
jbe
(bad)
jg
ins
je
scas
sbb
push
jae
jbe
push
cld
jg
ins
je
scas
sbb
push
jae
jbe
sub
jg
ins
je
scas
repz
jle
mov
pop
sub
(bad)
stos
scas
imul
add
aad
pop
je
jae
push
das
pop
jp
add
jne
push
jae
jbe
(bad)
jg
ins
je
scas
sbb
push
jae
jbe
cmp
je
scas
sbb
push
jae
jbe
push
cld
jg
ins
je
scas
sbb
push
jae
jbe
sub
jg
ins
je
scas
repz
jle
mov
pop
sub
(bad)
stos
scas
imul
add
xor
jae
push
das
pop
jp
add
adc
xchg
das
lea
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
adc
push
fdivp
outs
scas
jb
jle
cmp
xchg
jnp
sub
fcmovne
cld
jg
xchg
lahf
scas
repnz
test
mov
add
jle
jg
ins
cmc
add
stc
icebp
inc
jne
aaa
scas
ins
je
scas
sbb
push
jae
jbe
mov
xchg
in
(bad)
repnz
jge
cmp
jl
jae
hlt
scas
mov
mov
jae
hlt
scas
adc
push
fdivp
outs
jns
lahf
push
out
jg
imul
fistp
jae
hlt
sub
add
js
jg
pop
retf
push
push
jae
jmp
movs
jge
(bad)
sbb
mov
pop
xchg
push
push
jae
jmp
mov
sbb
push
mov
js
jg
pop
mov
jae
xor
mov
das
aas
jp
inc
lds
inc
inc
pop
jp
jmp
stc
jg
jne
int
repnz
jge
jns
jle
jae
adc
jge
jg
jp
shr
icebp
inc
jno
aaa
scas
jno
jg
clc
xchg
xor
div
scas
jo
jg
clc
lahf
xor
div
scas
jo
jg
clc
(bad)
sbb
bound
xchg
jae
gs
sub
cld
movs
rol
push
scas
pop
jp
retf
clc
scas
fidivr
jae
push
das
pop
jp
fwait
repz
test
mov
pop
sub
jmp
jae
push
das
pop
jp
ret
repz
or
out
pop
sub
add
push
sbb
je
jae
push
das
pop
jp
fstp
in
jnp
sub
(bad)
cld
jg
xchg
lahf
scas
repnz
test
mov
nop
sub
jns
shl
aad
loope
scas
jb
jg
sbb
push
jae
jbe
inc
std
jg
ins
je
scas
sbb
push
jae
jbe
idiv
jg
ins
je
scas
sbb
push
jae
jbe
push
cld
jg
ins
je
scas
sbb
push
jae
jbe
sub
jg
ins
je
scas
repz
test
mov
pop
sub
jmp
js
dec
mov
pop
sub
je
scas
lea
movs
inc
sar
test
outs
jns
lahf
push
lea
movs
pop
sar
test
outs
push
mov
lahf
push
repnz
test
push
stos
inc
mov
add
pop
push
push
push
jae
xchg
sub
lods
xor
jecxz
dec
jb
jae
popa
das
cli
(bad)
jg
lea
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
mov
mov
jae
hlt
scas
adc
push
fdivp
outs
jns
lahf
push
(bad)
std
jg
imul
fistp
jae
hlt
sub
add
js
jg
pop
retf
push
push
jae
jmp
movs
jge
(bad)
sbb
mov
pop
xchg
push
push
jae
jmp
mov
sbb
push
mov
js
jg
pop
mov
jae
xor
mov
das
sbb
cwde
xchg
hlt
inc
(bad)
aam
scas
idiv
add
fdivr
jg
jne
int
repnz
jns
jle
jae
adc
jge
jg
jp
shr
add
jp
xor
sbb
adc
jge
jg
jp
pop
lods
jae
popa
lods
adc
adc
jge
jg
jp
daa
lods
jae
popa
lods
add
mov
mov
jae
xchg
scas
mov
cmp
idiv
sub
cld
movs
rol
push
scas
pop
jp
retf
clc
scas
fidivr
jae
push
das
pop
jp
fwait
repz
test
mov
pop
sub
jmp
jae
push
das
pop
jp
ret
repz
or
out
pop
sub
add
push
sbb
je
jae
push
das
pop
jp
fstp
in
jnp
sub
jmp
xchg
lahf
scas
repnz
test
mov
hlt
sub
add
idiv
sbb
pop
stos
push
push
jae
hlt
sub
fidiv
jae
push
das
pop
jp
sbb
sar
test
sub
js
sub
jae
jg
jae
mov
arpl
popa
out
(bad)
jg
jne
jbe
std
hlt
data16
mov
jl
jae
test
mov
cli
mov
test
add
push
mov
js
push
adc
adc
jg
mov
jo
push
push
jl
jne
repz
adc
jg
jns
pop
int3
jae
jne
push
jl
rol
cmp
pop
push
jae
sbb
outs
mov
jo
imul
fadd
lea
(bad)
(bad)
daa
mov
hlt
into
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
data16
popa
add
mov
aam
int3
(bad)
sahf
mov
call
xor
dec
cmp
xor
addr16
fnstcw
cmps
fiadd
dec
sar
popa
fmul
add
push
mov
inc
outs
leave
add
call
jnp
mov
adc
jno
pop
leave
jae
xor
sub
or
data16
jae
outs
mov
mov
mov
xor
rcl
adc
jo
jg
jns
test
push
jns
push
fmul
push
sub
xor
sar
stos
mov
mov
pop
into
call
dec
cmp
xor
or
out
xlat
loop
call
iret
(bad)
es
les
push
cmp
and
ret
jae
xchg
inc
addr16
enter
jecxz
sti
or
paddw
push
(bad)
fwait
movs
sbb
mov
push
lds
jo
pop
xchg
scas
scas
scas
push
and
jo
lods
sbb
sub
iret
(bad)
adc
aaa
mov
ror
into
(bad)
add
(bad)
cmps
sub
jecxz
daa
jns
call
xchg
pop
xchg
pop
cmp
xor
rol
shl
jo
push
xchg
(bad)
xor
mov
mov
rcr
xor
push
inc
cmp
data16
data16
data16
data16
mov
ins
jo
xor
dec
cmp
sub
mov
sub
mov
cmp
dec
push
data16
sbb
pop
jl
xchg
test
or
repnz
mov
jo
stos
mov
int3
cmp
xor
cmp
mov
clc
cmp
mov
in
cmp
data16
mov
jb
dec
mov
stos
cmp
mov
mov
cmp
jb
dec
mov
adc
cmp
jmp
push
data16
jge
mov
sbb
gs
dec
pusha
cmp
in
ret
pusha
(bad)
out
pusha
shl
data16
mov
out
pop
mov
jbe
inc
push
push
dec
sbb
dec
push
mov
sub
mov
cwde
adc
mov
push
dec
and
dec
ins
cwde
push
sar
mov
addr16
data16
cmp
dec
and
test
call
mov
mov
jmp
adc
stos
mov
mov
jmp
xchg
xor
cmp
test
data16
push
mov
arpl
mov
jl
out
int
pop
dec
ins
mov
dec
mov
dec
mov
jl
cmp
cmp
cmp
jmp
cwde
adc
mov
adc
dec
push
data16
dec
mov
dec
mov
leave
cli
mov
popf
mov
data16
cmp
xchg
and
int
pop
dec
ins
mov
dec
mov
dec
mov
jl
cmp
cmp
mov
jmp
mov
jmp
mov
adc
leave
ins
cwde
adc
mov
adc
cmps
mov
loop
mov
cdq
lds
inc
adc
cmps
mov
loop
mov
cdq
lds
pushf
data16
data16
data16
je
sbb
ins
int
data16
je
or
cs
imul
xor
mov
data16
ror
mov
data16
scas
sub
mov
or
jmp
and
int
(bad)
sar
stos
sub
ins
mov
inc
mov
data16
push
div
dec
ins
mov
popf
mov
sbb
cmp
xchg
out
dec
jmp
dec
mov
cmp
xor
popf
mov
sbb
cmp
mov
cmp
dec
mov
mov
sub
mov
dec
mov
js
dec
je
cmp
outs
clc
ret
xor
cmp
mov
test
cmp
mov
loop
pop
test
pusha
inc
adc
jmp
loop
mov
data16
cmp
(bad)
cwde
adc
xchg
cmp
les
push
dec
mul
jmp
cwde
push
repz
stos
adc
xchg
pusha
inc
mov
les
push
push
dec
jp
(bad)
out
mov
cdq
lods
cwde
xchg
pop
mov
int
fwait
inc
call
cmp
data16
sub
mov
movs
mov
mov
mov
dec
mov
data16
pusha
mov
mov
data16
cmp
dec
bound
cmp
test
jmp
push
aaa
leave
mov
jl
mov
es
mov
xor
mov
pop
xor
mov
inc
loop
popf
mov
into
pop
pop
loope
stc
std
xor
inc
jns
pop
or
mov
hlt
into
jns
jo
jns
jo
jns
jo
jns
(bad)
int3
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jae
push
sub
mov
addr16
fnstcw
cmps
fisubr
stos
ror
jg
fld
les
push
jmp
fisttp
(bad)
mov
xor
or
inc
(bad)
sbb
mov
fild
in
jns
and
iret
adc
jne
ja
cdq
lds
push
test
jno
jbe
hlt
movs
psubusw
fmul
xor
fldcw
mov
jo
in
arpl
jp
jo
btc
imul
jno
jns
pop
fcom
ss
push
jg
jns
mov
inc
push
jns
add
fld
stos
scas
jne
fdivr
and
or
leave
pop
and
add
test
test
cmp
sub
fisttp
std
xor
sbb
(bad)
inc
daa
adc
and
mov
xchg
and
sub
rol
sub
lods
vmwrite
jbe
jo
std
or
pop
int
mov
stos
in
iret
add
xchg
(bad)
es
push
cmp
and
inc
pushf
sub
jae
(bad)
mov
aas
push
or
adc
mov
js
add
rcl
pop
fcom
test
repz
ror
retf
push
or
push
mov
sub
cs
call
cld
ins
sub
les
ror
into
retf
dec
sub
mov
(bad)
fist
retf
push
ins
sub
add
das
push
fcom
push
push
shl
test
faddp
mov
adc
mov
adc
leave
jo
jno
jb
jns
jns
(bad)
mov
inc
push
add
push
pop
mov
ss
lods
jnp
or
inc
into
mov
mov
push
fld
and
mov
inc
popf
bndstx
test
cmps
(bad)
jg
jae
leave
inc
or
add
cmps
jno
jns
stos
fldcw
xor
es
push
or
aaa
mov
shl
popf
lods
stos
aaa
jno
jns
cmps
fsubr
mov
fst
int
sub
lods
jns
(bad)
dec
jg
std
xor
(bad)
push
(bad)
mov
adc
lar
jo
fmulp
jo
call
add
mov
push
jg
jns
fsub
xchg
lods
scas
popa
jbe
jb
add
ins
leave
jle
scas
jge
es
(bad)
es
pop
loop
scas
sub
and
jecxz
sbb
cmps
ja
jo
sahf
sub
sbb
mov
sbb
fiadd
int
fisttp
jae
loop
push
ds
or
invd
cwde
xchg
fwait
sbb
fwait
jb
cmp
sbb
cmps
imul
jo
pop
in
ret
pop
lahf
sahf
arpl
cmc
sbb
xchg
fst
lahf
dec
mov
cmc
sub
in
adc
cmc
sbb
jns
adc
aam
cmc
bound
or
bswap
jmp
pop
repz
ret
adc
es
faddp
mov
adc
mov
fcmovne
add
jno
jb
jns
jns
hlt
hlt
jno
inc
mov
lods
jp
mov
push
(bad)
jae
jl
push
aas
test
jo
jns
xchg
fadd
jno
sahf
fistp
xor
push
pushf
push
mov
inc
enter
or
fwait
jl
xchg
cmc
and
or
jecxz
mov
jl
mov
jbe
hlt
movs
ud0
fcom
xor
or
fnstcw
mov
jne
sar
inc
mov
or
mov
jo
into
add
(bad)
xor
scas
stos
add
xchg
(bad)
mov
scas
sub
cmps
push
jmp
icebp
fcomp
shr
jns
or
push
pop
fidiv
jmp
cmp
xor
not
rcl
mov
scas
jns
and
retf
bound
lods
scas
lods
or
test
lock
jns
or
jo
jns
dec
(bad)
into
pop
push
sub
and
ja
jo
mov
rol
mov
pop
aam
jo
rol
mov
scas
jp
fldcw
pop
pop
inc
repnz
stos
je
retf
and
and
jns
in
retf
rcr
xchg
mov
aad
dec
xchg
jns
xchg
xlat
mov
lods
pop
jns
jge
or
mov
dec
dec
xchg
push
lods
cmc
popa
mov
and
imul
popa
scas
(bad)
iret
inc
dec
cmps
adc
lods
cmc
popa
sbb
add
jmp
hlt
(bad)
lods
xchg
push
outs
sti
retf
sbb
ficomp
mov
into
jns
jb
in
hlt
mov
cmp
fnstcw
cmps
(bad)
or
ror
xor
mov
mov
movs
add
and
iret
mov
cmc
pushf
mov
fild
enter
enter
xchg
dec
lea
pop
pop
out
pop
ins
cmp
jo
inc
or
xor
push
add
lods
idiv
in
sub
xor
push
adc
xor
or
out
inc
push
imul
scas
mov
(bad)
es
out
mov
jg
jns
dec
lods
fisubr
jns
inc
pop
jp
cmps
push
jg
jae
fild
mov
cmps
(bad)
inc
mov
jns
jo
fiadd
push
faddp
add
js
jo
in
adc
lods
scas
sub
mov
sbb
lods
sbb
es
push
fwait
jns
dec
pop
scas
sbb
adc
cmps
lock
xchg
cmps
out
jmp
fimul
push
jl
mov
hlt
scas
hlt
out
es
cmp
jo
push
xchg
(bad)
cmp
(bad)
into
lods
scas
adc
adc
or
or
sti
ins
xchg
pop
es
jb
fimul
js
pop
push
or
dec
shl
sti
mov
push
adc
pop
movs
or
lock
adc
loope
rcr
ror
jg
pop
and
add
xor
nop
arpl
lds
(bad)
xor
nop
cdq
sbb
call
and
add
scas
fs
jbe
(bad)
mov
retf
xor
pop
mov
dec
push
sar
xor
push
jo
scas
cmp
fcomp
xor
dec
sub
jp
inc
and
add
jo
movs
xchg
add
into
mov
arpl
test
pop
or
sub
inc
mov
test
mov
jne
mov
rol
inc
shl
enter
xor
mov
out
scas
sbb
and
inc
test
nop
js
jo
mov
mov
scas
xchg
pop
ss
push
scas
mov
jo
jns
dec
(bad)
or
idiv
es
push
std
xor
lock
aad
scas
sbb
dec
push
mov
cmp
mov
jecxz
push
jns
cmps
fdivr
inc
xchg
push
jmp
pop
aam
add
fstp
push
jge
scas
mov
sub
jo
xchg
(bad)
ja
test
sti
js
out
mov
jno
adc
into
pop
push
sbb
es
jge
iret
std
daa
sub
das
or
xchg
lods
stos
xchg
mov
xchg
jo
stc
std
jno
dec
iret
(bad)
loop
and
into
push
cmps
fcomp
out
pusha
sahf
pop
jo
mov
mov
ret
pop
mov
lds
ret
mov
pop
gs
out
gs
into
pop
movnti
pop
jecxz
mov
mov
shl
inc
add
jcxz
pop
adc
inc
mov
shr
inc
add
popf
loope
frstor
imul
dec
sbb
pop
mov
dec
inc
add
nop
movs
add
mov
add
lahf
mov
fnstcw
inc
add
xor
and
jecxz
xchg
push
es
test
jmp
push
add
jo
jns
jo
jns
jo
jns
jo
adc
pop
retf
jns
jnp
cs
xchg
jns
jo
and
pop
retf
jns
cmp
mov
add
pop
push
jns
jo
jns
or
dec
mov
jne
into
sbb
xor
imul
jns
data16
dec
call
repnz
xor
inc
xor
scas
cmp
fcom
xor
mov
jnp
scas
jnp
inc
fld
mov
lds
xlat
scas
or
xor
cmp
cs
lods
add
jp
js
(bad)
inc
popa
inc
scas
scas
jge
and
jo
retf
lods
jle
jns
jle
jo
add
inc
(bad)
pop
xchg
cmps
es
leave
push
xchg
cmps
es
jae
fwait
out
and
cmp
jo
mov
stos
cmp
fidiv
cmp
retf
(bad)
sub
int3
adc
or
aaa
std
pop
scas
and
mov
ffree
rol
jns
jo
push
shr
scas
pop
add
xor
xor
jns
movs
pop
jns
inc
xor
add
scas
push
cmp
and
lods
and
sbb
pop
fadd
loop
mov
sbb
(bad)
jns
in
mov
pop
push
xor
scas
scas
xor
and
inc
stc
cvtdq2ps
jae
sub
pop
aas
push
mov
add
push
sbb
ficom
mov
xchg
pop
repnz
movs
inc
not
mov
push
imul
xchg
out
adc
inc
mov
and
pushf
mov
ficom
movs
js
push
mov
xchg
mov
js
xchg
cmc
outs
cmps
ins
fisubr
push
setae
xchg
hlt
push
mov
xchg
nop
xchg
cdq
xchg
mov
dec
pop
mov
fimul
mov
cs
jno
push
test
daa
loopne
(bad)
ficom
jle
push
sbb
pop
ficomp
mov
cs
cld
js
xchg
pop
push
fst
mov
mov
xchg
fiadd
xchg
pop
xchg
pop
push
push
adc
inc
and
fcom
push
adc
inc
and
ins
out
arpl
sbb
xchg
jge
ficom
add
xchg
repz
xor
mov
ficom
add
xchg
repz
ss
pop
xchg
and
and
inc
mov
xchg
pop
xchg
and
xchg
cmc
pop
cmps
ins
ficom
scas
push
xchg
pop
xchg
jo
es
movs
js
push
mov
or
push
fimul
mov
push
repnz
mov
mov
push
and
cmc
pop
mov
pop
adc
xchg
stc
xor
jns
data16
and
(bad)
jns
stc
fdivr
mov
xor
jo
ins
clc
outs
push
jns
jo
jg
cmp
and
pop
iret
jns
cmp
mov
add
ficomp
jns
call
loopne
fld
mov
adc
dec
lock
xor
jmp
or
jo
scas
cmp
fsub
xor
lock
lahf
test
or
sar
jo
mov
jmp
mov
adc
jnp
mov
sbb
push
mov
loop
ja
jo
mov
std
retf
cmps
sar
jns
mov
push
xchg
cmps
es
mov
jo
sub
inc
scas
test
jo
jns
int
call
cmp
and
jns
sahf
rcr
scas
cmp
jo
repz
xchg
add
movs
packsswb
(bad)
fld
cmps
rcr
cld
in
js
push
push
pop
mov
mov
scas
push
jo
sbb
pop
jns
pop
(bad)
mov
add
ds
scas
scas
push
ja
jo
cmp
mov
pushf
jno
scas
gs
dec
mov
in
jmp
mov
aaa
and
sub
rol
jmp
xchg
or
fisubr
into
(bad)
jno
jns
fstp
mov
add
mov
xlat
mov
or
mov
out
pushf
jo
cld
(bad)
scas
loop
or
push
stc
fcomi
aaa
jns
and
stc
and
(bad)
jns
jg
mov
jne
out
imul
jge
lods
cmp
sub
je
push
pushf
push
push
jge
and
and
bound
jns
add
stc
pop
jns
js
jnp
jo
jo
xchg
push
jns
xchg
jmp
shr
xchg
xor
jle
xor
jnp
pop
fld
push
(bad)
rcr
inc
adc
ins
sub
adc
add
mov
mov
into
or
push
jl
hlt
cmp
mov
inc
shl
and
or
sahf
lods
idiv
(bad)
daa
std
xor
in
pushf
xor
mov
mov
ret
jns
inc
and
jecxz
lods
scas
fcomi
sub
adc
js
std
or
or
call
jo
jns
add
fidivr
jo
jp
jo
scas
ins
add
mov
popf
ins
cwde
xchg
stc
pop
mov
mov
setae
icebp
xchg
aad
(bad)
cmps
(bad)
jmp
clc
push
ja
pop
adc
push
mov
mov
fiadd
xor
or
aaa
mov
ror
aas
mov
push
xchg
or
(bad)
lods
into
(bad)
into
es
popf
frstor
rol
pushf
jns
fisttp
and
movs
mov
(bad)
mov
repnz
cs
jge
adc
cmpxchg
nop
add
(bad)
popa
retf
imul
jne
(bad)
pop
sub
cli
and
xor
iret
pop
outs
sti
retf
and
ficomp
aaa
test
leave
std
xor
loopne
xor
add
jo
scas
cmp
xchg
rol
lods
jp
mov
pop
mov
pshufw
inc
retf
fldcw
loopne
adc
lods
add
and
retf
pop
xor
or
in
fld
stc
push
sub
inc
add
scas
leave
cmps
fdivr
inc
or
add
xor
mov
push
shr
inc
mov
es
(bad)
jp
jecxz
es
cmps
fdivr
jns
daa
inc
mov
sbb
cmps
in
jle
jns
cmps
dec
xchg
push
std
xor
cs
jno
bound
lahf
sub
xor
loop
iret
(bad)
es
pop
in
or
fldcw
push
xchg
jbe
jo
out
std
xor
xor
retf
inc
cmc
lahf
scas
scas
pop
(bad)
and
hlt
rcl
test
ja
jp
jp
xchg
(bad)
jl
ins
(bad)
pop
and
pop
xchg
ja
jo
sbb
into
cmps
les
test
adc
xchg
aaa
std
push
stos
out
mov
xchg
xchg
es
cmps
mov
je
lods
jp
and
or
loop
aas
push
mov
and
or
test
fwait
out
xchg
and
gs
outs
ret
fwait
nop
xchg
and
dec
dec
scas
cmovle
or
inc
lahf
add
test
in
out
aaa
or
fild
push
add
loope
out
jmp
add
mov
js
call
inc
outs
xchg
push
repnz
mov
adc
es
fild
dec
dec
fstp
aas
pop
js
js
jnp
jo
jo
sbb
jns
xchg
sbb
pop
cmp
add
xchg
xchg
cmp
std
mov
daa
jns
xchg
fcom
mov
cmps
sub
ret
cmp
scas
scas
add
xor
adc
retf
pop
mov
jo
or
inc
imul
push
or
stos
cmp
(bad)
out
sub
dec
and
std
xor
or
retf
push
pop
leave
adc
jg
jns
mov
jns
ror
xor
push
sub
push
xchg
mov
fidiv
mov
mov
jo
mov
mov
or
out
push
xchg
or
rcr
xchg
(bad)
mov
psraw
add
pop
jns
jo
mov
pop
scas
scas
xor
sbb
push
mov
adc
cmc
out
aam
cs
scas
aas
ja
jo
pop
or
les
jb
push
xchg
(bad)
xor
aas
xchg
lods
scas
das
add
xchg
(bad)
es
retf
mov
xchg
(bad)
or
cmp
jo
test
push
std
scas
scas
xor
es
dec
scas
stos
jle
es
xchg
dec
jge
scas
idiv
push
es
xor
loop
xor
rcl
push
mov
sub
xor
sbb
sbb
fst
(bad)
mov
cwde
adc
push
cwde
les
push
dec
movs
in
mov
xor
cwde
sub
xchg
cmps
push
jle
inc
pop
or
adc
xchg
cdq
cmp
xchg
addr16
pop
mov
mov
data16
and
bound
jns
add
dec
fstp
pushf
pop
jns
js
jnp
jo
jo
jbe
jns
xchg
call
or
pushf
sbb
test
xor
or
xor
out
ret
mov
mov
mov
stos
daa
jb
jns
cmps
fmul
fnstenv
mov
ret
scas
jno
jns
sbb
hlt
add
call
out
scas
scas
fbstp
jo
into
sub
inc
ja
in
shl
stos
inc
mov
fdivr
jo
stos
cmp
out
rcr
out
pop
paddsw
push
test
xchg
dec
retf
or
dec
push
(bad)
xor
or
cmc
pcmpeqb
inc
scas
or
push
jl
test
scas
scas
stos
pop
cs
out
mov
stos
dec
or
(bad)
push
daa
mov
(bad)
jp
xor
dec
xchg
es
xor
mov
aaa
or
sub
es
and
xchg
add
sbb
mov
clc
scas
scas
sbb
cmp
push
or
jecxz
mov
iret
cmps
jb
xor
stos
cmp
jo
dec
inc
sub
out
dec
xchg
pushf
ja
fist
fidiv
jmp
daa
lea
enter
rol
sub
adc
push
adc
push
lock
xchg
push
scas
into
and
push
in
jbe
shl
fmul
in
jbe
pusha
dec
xchg
stc
dec
jmp
cmp
ins
test
pop
pop
adc
and
bound
jns
add
xor
jns
and
js
jnp
jo
jo
int
jns
xchg
dec
test
mov
sahf
imul
mov
xchg
lods
and
sahf
loope
fisttp
(bad)
mov
jno
lds
div
inc
xor
dec
lods
add
jp
nop
retf
(bad)
push
shl
or
sub
sar
add
ds
lea
and
ins
lods
scas
ins
imul
jg
jae
out
or
aaa
into
cmps
outs
cmc
inc
mov
into
or
xchg
push
(bad)
out
xor
xor
or
inc
jne
xchg
(bad)
cmps
(bad)
jg
jae
aas
inc
shl
add
neg
sub
scas
scas
popf
pop
ss
sbb
xor
mul
pop
js
pop
dec
jns
cmps
fmul
jns
dec
xchg
push
jl
scas
or
mov
dec
jns
std
xor
shl
(bad)
and
mov
loope
or
sti
pop
mov
jge
xor
mov
(bad)
jno
jne
icebp
mov
scas
sti
mov
sub
cmp
fimul
cmp
mov
cmp
fisub
mov
or
out
into
nop
fsub
push
cmp
sub
cmp
outs
jmp
fadd
in
push
fild
(bad)
jae
mov
inc
aas
or
adc
xchg
xor
or
inc
xor
das
mov
xor
icebp
add
movs
dec
and
mov
pop
dec
dec
inc
push
or
add
inc
out
or
rol
mov
inc
loopne
adc
daa
sti
stc
outs
sti
retf
and
ficomp
aaa
test
mov
daa
push
jns
jo
jns
stos
fldcw
mov
push
jns
mov
inc
jns
movs
aad
mov
jns
jo
mov
cmp
jns
jo
xchg
call
lock
jns
sti
fld
mov
sti
daa
bound
pusha
jns
cdq
popf
jp
aaa
and
jns
mov
cdq
sub
xor
sub
sub
into
fwait
and
aaa
and
jns
mov
xchg
das
sti
xor
mov
mov
loopne
cmp
mov
jbe
jae
jno
jns
jnp
or
fwait
ror
cdq
cmp
mov
jo
jns
jo
jb
add
jns
add
jns
cmc
pop
aas
std
add
jns
jnp
or
xor
test
aaa
and
or
inc
hlt
popf
mov
xor
stos
test
adc
loopne
fnstcw
mov
mov
mov
cld
fnstcw
sbb
mov
mov
mov
dec
fld
(bad)
(bad)
and
pop
or
jg
jno
ja
xor
test
adc
std
xor
sbb
iret
cs
xchg
pop
and
ss
jg
jne
outs
lock
xchg
mov
(bad)
jg
rcr
inc
jmp
iret
(bad)
es
loope
xor
cmp
pushf
stc
xor
jns
data16
and
(bad)
jns
stc
fdivr
xor
scas
and
jo
jns
stc
fsubr
mov
into
mov
pop
call
iret
addr16
mov
adc
jo
shl
test
fidivr
hlt
mov
cmp
fnstcw
cmps
(bad)
mov
ror
ins
or
test
sbb
mov
mov
(bad)
jno
jns
xchg
fmul
(bad)
lods
or
pop
and
fmulp
add
(bad)
xchg
sub
addr16
pop
inc
xor
jns
jl
cld
int3
dec
lods
scas
popf
(bad)
and
jp
ror
add
movs
jns
push
fsubr
xchg
ss
lods
inc
cmp
push
enter
push
enter
arpl
jns
jbe
jo
or
xchg
stos
jg
movs
jns
jge
xsavec
sbb
inc
and
jns
lods
pop
sbb
and
ret
inc
inc
not
add
jp
jo
es
dec
lods
scas
inc
mov
cmp
jp
movs
or
(bad)
fadd
mov
push
jb
push
xchg
(bad)
cld
scas
stos
ror
hlt
cmp
loopne
inc
movs
mov
xor
add
push
push
xchg
jns
fiadd
lods
jle
jns
fld
and
enter
mov
inc
stos
xchg
into
jae
ficomp
pop
and
mov
pop
adc
sub
sub
test
jg
mov
mov
neg
xchg
hlt
pop
inc
xchg
int3
pop
pusha
xchg
sub
mov
sub
mov
sub
mov
sub
mov
mov
xchg
hlt
pop
push
into
pop
inc
xchg
lock
dec
xchg
sub
sub
mov
mov
mov
mov
sub
xchg
xchg
pop
mov
mov
xchg
sub
mov
xchg
mov
mov
mov
lock
inc
xchg
sub
pop
mov
pop
mov
cmp
pop
sahf
adc
xchg
mov
sub
sbb
aas
cwde
xchg
fistp
mov
and
pop
or
aaa
pop
mov
xor
cmp
or
xchg
cld
mov
mov
sub
ret
xchg
sub
inc
sub
pop
jnp
inc
mov
(bad)
jecxz
pop
mov
and
xchg
adc
sub
sbb
lods
pop
jnp
inc
test
addr16
jecxz
pop
mov
daa
mov
mov
xchg
adc
sub
aam
lods
pop
jnp
inc
add
aas
pop
mov
cmp
cdq
adc
sub
pop
lds
imul
test
mov
push
jnp
aad
cmc
inc
das
pop
mov
push
jmp
cmps
fstp
stos
loope
nop
xor
ds
xchg
adc
xchg
dec
push
or
scas
pop
pop
fwait
sbb
in
xchg
cli
push
or
push
jae
scas
pop
cli
adc
(bad)
pop
pop
adc
mov
mov
arpl
ja
jo
or
sub
jmp
jns
jns
adc
jno
sbb
mov
inc
popf
xchg
call
test
or
inc
pop
icebp
sbb
add
fdivr
cmp
xchg
dec
mov
sbb
mov
scas
lea
mov
inc
arpl
jo
cmp
iret
(bad)
mul
sub
scas
or
xchg
ss
fwait
daa
hlt
popa
hlt
movs
scas
sti
add
js
jo
jbe
jo
jg
jns
pushf
or
add
mov
stos
scas
pop
jbe
jo
ds
push
jne
inc
cs
cmps
and
cmp
pop
std
xor
sahf
xor
fadd
(bad)
hlt
movs
scas
and
(bad)
jmp
aam
out
add
add
inc
lods
cmp
imul
movs
sbb
pop
pop
loopne
add
out
lahf
dec
aad
scas
jle
jae
mov
mov
sahf
xchg
(bad)
outs
mov
mov
add
jle
jns
add
lds
xchg
test
mov
mov
scas
push
add
and
jbe
lods
push
shl
xor
pop
retf
inc
dec
es
and
bound
jb
pop
xor
mov
xor
jno
fcmovnu
jbe
pop
(bad)
addr16
mov
xor
jne
cmp
je
push
sbb
cmps
or
jle
and
fcomp
xchg
cmps
xchg
push
and
stos
mov
mov
hlt
into
jns
enterw
add
mov
arpl
fnsave
jno
jb
jns
jns
pop
sbb
pushf
sbb
xchg
pusha
push
add
xchg
sbb
loopne
aad
ins
push
xor
or
inc
jge
out
rol
pushf
xor
xor
push
stc
inc
jp
data16
add
inc
jo
jns
mov
sar
and
push
fs
ja
jp
mov
push
stos
jno
sar
(bad)
fadd
or
add
adc
mov
push
sub
jo
cs
lods
scas
(bad)
adc
jg
jns
(bad)
scas
xchg
mov
or
js
ficom
mov
sub
pcmpeqb
mov
jle
jns
(bad)
xchg
shr
ret
arpl
rol
xchg
popf
fsubr
(bad)
or
or
jno
jns
lahf
fldcw
iret
(bad)
cmp
mov
mov
and
mov
ror
out
xor
test
and
push
add
enter
pop
xchg
daa
std
xor
cmp
scas
stos
mov
es
mov
fimul
xchg
jo
out
xor
and
sbb
and
jo
test
fcomp
iret
xor
mov
or
repz
fs
dec
mov
std
and
outs
jmp
jb
test
mov
addr16
fnstcw
cmps
fisubr
mov
jnp
mov
aam
mov
xchg
push
inc
leave
lods
push
pop
xchg
xchg
or
xor
pop
sahf
push
out
fild
es
sbb
fist
sub
int3
in
shr
inc
jge
mov
ja
jo
pop
or
cmps
enter
aam
mov
nop
jb
push
js
jo
dec
xor
sbb
fdiv
dec
jecxz
std
xor
ror
div
sbb
scas
scas
leave
add
js
jo
push
mov
mov
clc
mov
push
jg
jns
cmp
lods
scas
scas
or
mov
xor
(bad)
sub
out
es
lahf
add
push
jb
es
jns
cmc
pop
jns
jmp
xchg
or
jo
jns
sti
fcomp
or
sub
(bad)
and
(bad)
push
es
mov
(bad)
jae
jae
mov
xchg
daa
inc
cmps
nop
scas
in
ja
jo
mov
rol
dec
les
out
clc
mov
outs
ffreep
into
pop
or
fisub
test
cmps
inc
xchg
mov
loop
loop
jbe
rol
add
dec
fiadd
cld
lea
ins
pop
cs
and
js
cmps
repnz
out
jb
fstp
add
dec
rol
mov
clc
pop
xchg
dec
ror
jb
jmp
pop
lea
out
push
adc
pop
sbb
or
cmp
push
fs
pop
and
dec
cmp
push
(bad)
mov
add
push
into
(bad)
bound
data16
and
jo
outs
jmp
sub
jns
fs
js
js
jnp
jo
jo
pop
vmwrite
xchg
xchg
or
xor
stos
mov
xchg
(bad)
push
xchg
dec
idiv
scas
test
jo
jns
mov
dec
(bad)
cmps
loop
jp
lods
sub
into
jae
mov
loop
jp
xchg
sub
int
icebp
sbb
retf
mov
and
mov
sbb
test
lods
or
psubusw
xor
scas
loope
(bad)
add
sbb
nop
cmps
fimul
iret
(bad)
push
xchg
push
daa
hlt
cmp
fisub
inc
add
jns
cmps
fmul
push
jl
or
jae
scas
repz
cmp
ins
hlt
movs
scas
lods
ja
jo
mov
or
or
rcr
dec
retf
lods
scas
xchg
mul
je
into
lods
scas
cdq
adc
scas
xchg
jbe
jo
repnz
inc
(bad)
fbld
sub
sub
in
pop
js
lea
xchg
(bad)
jbe
jo
jno
mov
mov
or
out
or
aam
xchg
inc
mov
and
adc
scas
mov
lea
mov
xor
outs
iret
push
lea
pop
mov
pop
xchg
test
adc
inc
jg
fist
mov
fstp
jg
mov
outs
loopne
mov
jae
popf
bound
adc
ret
mov
sbb
es
fild
xchg
pop
js
js
jnp
jo
jo
pop
vmwrite
xchg
jb
daa
(bad)
shl
adc
sub
das
dec
jns
add
(bad)
adc
mov
xchg
adc
push
test
cmp
or
push
psubusw
cmp
xor
lea
(bad)
or
daa
mov
or
or
(bad)
adc
jns
jbe
jo
push
or
xor
mov
test
jns
cmps
fimul
pop
or
inc
daa
out
addr16
adc
or
out
fwait
stos
cmp
jo
mov
jo
xlat
fbstp
push
out
scas
or
jp
aam
(bad)
push
push
sar
mov
dec
out
pop
test
add
inc
cmps
fidivr
jns
push
inc
aas
push
jns
add
dec
xchg
idiv
lods
stos
ror
add
sar
jns
sub
inc
jo
js
cmps
push
hlt
inc
(bad)
shl
ret
jecxz
sub
push
fs
adc
jns
std
mov
out
dec
jne
std
mov
jns
mov
sbb
cmp
add
daa
xchg
jae
iret
pop
inc
mov
pop
dec
repz
mov
mov
mov
dec
lea
jae
and
std
stos
cdq
or
dec
popf
pop
imul
sbb
mov
dec
popf
or
and
std
stos
popf
mov
inc
dec
mov
cdq
scas
jge
std
stos
xchg
pop
mov
dec
popf
and
inc
and
(bad)
mov
and
sub
jle
movs
push
mov
out
lds
inc
or
mov
push
jge
mov
pop
jl
pop
push
popf
aas
add
push
xlat
mov
cmps
(bad)
bnd
and
ss
mov
mov
mov
cmps
out
xchg
sub
mov
stc
sar
mov
imul
push
mov
lds
mov
arpl
dec
jnp
xor
dec
test
int
dec
jge
pop
popa
test
dec
dec
pop
outs
fnsave
xchg
or
dec
jl
cmps
(bad)
bnd
and
mov
mov
mov
xchg
cmp
add
mov
das
scas
dec
jl
dec
dec
or
cmps
int
ret
sub
ja
dec
push
jnp
pop
mov
(bad)
sub
repz
lds
adc
(bad)
stc
fwait
and
adc
stc
cmp
sbb
(bad)
lods
pop
adc
into
ret
adc
es
sbb
xor
mov
and
jo
scas
cmp
fnstcw
push
xchg
sbb
xchg
out
mov
and
jae
pop
daa
xor
test
jno
jns
xchg
fsubr
sbb
pushf
dec
dec
fild
cdq
(bad)
loop
aaa
mov
or
(bad)
and
sub
mov
scas
add
es
jo
nop
adc
scas
scas
push
jbe
jo
or
or
cli
pop
xchg
out
xor
loopne
std
xor
mov
out
push
mov
jg
jns
dec
pop
jl
scas
xchg
ja
jo
or
or
iret
(bad)
es
int
sub
scas
shl
jp
fisubr
fcmovbe
cmps
lods
scas
xor
retf
cli
fiadd
fwait
jbe
jo
fisttp
cmp
ja
jb
push
sub
dec
cdq
push
std
xor
fld
inc
cdq
mov
jo
fist
fldcw
scas
mov
dec
scas
xor
movs
js
jo
cmps
sbb
das
or
out
test
and
out
push
or
adc
inc
mov
mov
and
scas
or
inc
aas
outs
movs
xor
ss
(bad)
push
push
push
loope
repz
lds
pop
add
dec
mov
jle
mov
and
les
jge
shl
les
jge
inc
sub
jae
sub
das
js
sub
jb
sub
sbb
dec
dec
jb
sub
xchg
or
test
lea
mov
clc
jns
data16
add
xor
xor
ret
shr
xor
pop
sbb
cmp
test
sub
les
retf
fsubr
jle
add
dec
enter
and
and
les
movs
mov
repz
xchg
stos
and
hlt
movs
btr
test
adc
cmp
fisub
lea
xor
jg
jns
stos
cmp
pop
jns
sbb
mov
mov
jnp
stc
mov
mov
xchg
xchg
vpmacssdqh
jecxz
fidivr
cmps
fcomp
cmp
fmul
xor
push
mov
xchg
test
or
inc
sub
xor
in
xor
xor
mov
mov
xchg
movs
pop
fcmovu
mov
pop
xchg
(bad)
cmp
xor
inc
mov
in
ret
cmps
pop
inc
arpl
pop
into
in
test
or
out
in
stos
cmp
fidivr
cmp
cld
js
fcmovnb
rcpps
dec
(bad)
jecxz
xchg
xchg
add
add
and
test
pop
scas
sbb
es
lahf
adc
into
(bad)
jns
ficomp
movs
or
out
mov
mov
or
ret
jae
neg
call
lods
sub
in
stos
mov
in
stos
imul
adc
and
adc
mov
enter
cs
xchg
imul
add
outs
push
push
ds
xchg
popa
jns
or
iret
(bad)
push
pop
mov
clc
jns
data16
sbb
std
xor
xor
in
jo
scas
cmp
fsub
xor
mov
jle
jnp
imul
ret
push
scas
fidivr
test
jno
jns
xchg
fsub
push
mov
js
xchg
ret
sahf
mov
sbb
outs
popf
xor
mov
stos
add
jns
sbb
sahf
add
xchg
push
lea
jae
pop
and
jno
jns
sub
mov
jecxz
mov
xor
lods
stos
mov
aaa
jns
(bad)
fadd
pop
pop
aam
jecxz
and
add
in
pop
sahf
pop
add
psrad
add
jo
stos
cmp
fwait
jns
aad
js
pop
push
scas
fist
mov
jmp
jecxz
xchg
js
jo
jbe
jno
std
xor
movs
jns
aas
fst
iret
cmps
xchg
jle
jns
xor
and
neg
ret
xchg
scas
scas
addr16
sub
cmp
pop
sbb
sub
pop
js
lds
iret
mov
cld
js
fisubr
popf
cmp
and
mov
dec
out
jno
fmul
(bad)
jae
imul
in
pop
mov
std
dec
(bad)
inc
ror
adc
mov
inc
pop
mov
mov
stos
mov
xchg
lods
rol
fild
or
xor
sbb
mov
arpl
(bad)
adc
pop
test
hlt
test
adc
cmp
(bad)
xor
sbb
sbb
dec
jmp
dec
jne
jo
xor
in
sbb
mov
stc
shl
test
fstp
call
xor
jo
ds
js
lds
or
jae
xor
arpl
mov
mov
xor
outs
lea
sub
cld
aaa
mov
fisub
or
or
fmul
mov
outs
xchg
jp
imul
lods
test
jno
jns
mov
sbb
lods
scas
inc
add
js
jo
bnd
scas
push
in
sub
mov
mov
scas
inc
cmps
jle
pop
in
mov
mov
add
inc
(bad)
pop
xchg
cmps
es
jns
stos
cmp
jbe
and
fimul
mov
push
sbb
fsubr
dec
test
xchg
aam
fidivr
jns
mov
mov
or
aas
test
out
or
cmp
cs
mov
add
cmp
sbb
add
jns
jo
js
mov
rol
xor
(bad)
iret
jae
sar
mov
or
mov
pop
fidiv
or
jno
in
xlat
outs
push
xchg
xor
stos
(bad)
jae
xlat
push
push
rcl
jns
mov
dec
jo
xlat
add
push
sbb
add
pop
shr
cwde
pop
test
cmp
retf
daa
jo
ficomp
xor
cmp
mov
xchg
(bad)
xchg
jb
mov
xchg
(bad)
in
js
fwait
pop
pop
test
cmp
fdivr
mov
push
popa
mov
xchg
(bad)
bound
iret
(bad)
mov
mov
imul
(bad)
(bad)
cmp
xchg
mov
jns
push
mov
xchg
(bad)
mov
xchg
sar
xchg
jnp
or
sub
jnp
or
clc
mov
outs
(bad)
xor
jg
(bad)
fdiv
jb
jns
sbb
or
mov
xchg
jnp
or
pusha
jb
mov
xchg
mov
push
add
es
jp
enter
retf
(bad)
mov
dec
inc
es
and
retf
pop
sahf
jns
daa
jb
mov
xchg
(bad)
mov
pop
inc
es
(bad)
and
retf
(bad)
mov
pop
fwait
xchg
jnp
or
pusha
or
repnz
jns
jo
jno
jno
jns
dec
fadd
adc
jns
js
js
jo
loop
push
iret
pop
cs
js
jo
arpl
inc
sbb
retf
mov
popa
mov
xchg
or
or
call
xchg
cmp
arpl
leave
sbb
retf
(bad)
mov
pop
cmp
xchg
shl
push
ror
imul
pop
xchg
mov
sub
fisttp
into
sbb
or
call
test
loopne
fnstcw
mov
stc
dec
mov
(bad)
fnstcw
push
pop
stc
xor
mov
jb
fnstcw
addr16
test
cmps
retf
push
icebp
adc
mov
xchg
sbb
or
call
mov
add
es
(bad)
mov
jge
xchg
jnp
or
call
xchg
jnp
or
mov
daa
mov
arpl
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
fnsave
add
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
fcomp
jecxz
rcr
jns
jo
jns
jo
outs
jmp
jmp
cmc
cmp
retf
push
push
xor
fldenv
or
loope
mov
mov
jle
jno
pop
loopne
xor
mov
inc
mov
hlt
into
jns
or
or
jo
ret
jg
fwait
jno
jb
jns
jns
or
jno
or
xor
xchg
cli
push
int3
mov
movs
sahf
leave
xor
call
sahf
sub
push
outs
and
jno
jns
cdq
fld
xor
xor
jo
xchg
pop
inc
scas
jle
jns
add
and
stos
pop
jno
jns
xlat
fnstcw
push
fsub
xor
jg
jns
enter
jle
jns
mov
scas
stos
cmp
jns
pop
fadd
pop
jno
jns
mov
adc
cmps
nop
hlt
inc
sbb
ror
iret
add
(bad)
sbb
inc
scas
push
cmp
sub
jns
inc
xor
jle
jnp
cmp
imul
sbb
es
out
inc
call
and
push
pop
mov
jg
int3
and
push
hlt
or
mov
sar
mov
fsubr
mov
sbb
ja
jo
dec
sub
dec
pop
daa
std
xor
push
cmp
leave
cmps
mov
aad
mov
call
xlat
fwait
sub
pop
fild
das
mov
add
mov
add
mov
add
mov
push
mov
mov
pop
inc
lock
cmp
mov
add
mov
out
hlt
retf
jle
mov
add
mov
adc
add
sahf
retf
jns
or
add
xor
and
inc
push
push
jecxz
fxch
cmp
inc
jne
mov
add
dec
retf
mov
lahf
fstp
pop
add
movs
jo
clc
pop
mov
sub
or
add
sbb
les
add
mov
jle
cmp
sbb
movs
push
xor
cld
rcr
jo
mov
adc
add
mov
jmp
das
call
retf
jbe
mov
or
retf
cmp
js
call
shl
cld
les
add
ja
mov
retf
sahf
fst
movs
pop
retf
clc
test
and
jo
dec
shl
cld
les
lods
aad
sbb
les
mov
pop
aad
das
mov
jbe
mov
add
mov
retf
mov
add
arpl
cld
add
and
cs
add
arpl
cld
add
sub
das
mov
sar
inc
je
sbb
movs
test
add
cmp
jecxz
sbb
mov
cmp
or
sub
add
test
inc
inc
push
call
and
cld
rcr
test
(bad)
clc
pop
mov
cmp
sahf
and
cmp
add
das
mov
mov
mov
push
pop
adc
retf
lahf
shr
cmp
and
aam
xor
push
sahf
retf
adc
cmp
fst
sub
xor
cmp
or
or
xchg
ds
fst
sub
add
pop
inc
adc
les
mov
mov
mov
push
cs
dec
or
xor
fwait
popf
(bad)
sub
popfw
sub
cmp
fcom
sbb
pop
or
adc
mov
add
fimul
test
bound
adc
and
inc
add
inc
retf
add
into
cdq
aaa
bound
fild
mov
cmp
adc
xchg
add
mov
add
and
or
das
pop
retf
retf
xor
retf
sahf
int
push
or
adc
das
mov
add
pushf
retf
mov
shr
retf
xor
stos
mov
jo
mov
popa
dec
adc
stos
mov
or
or
mov
inc
xlat
ja
inc
data16
xor
call
xor
loopne
pop
test
addr16
ret
adc
xor
(bad)
xor
fnstcw
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
add
pand
jnp
jns
js
jnp
jo
jo
sti
push
js
xchg
jbe
sti
test
lahf
and
loopne
or
jb
hlt
fiadd
aad
and
les
mov
retf
(bad)
fild
into
outs
(bad)
fcomp
jno
jns
jbe
jp
sub
aad
scas
sbb
jo
push
ins
imul
jns
sub
outs
inc
xor
xchg
inc
aam
jecxz
sbb
xor
jo
popa
or
and
pop
(bad)
aaa
jno
jns
mov
ror
cmp
clc
mov
push
push
lods
scas
pop
neg
or
push
and
push
sub
iret
cmps
btr
mov
sub
scas
push
cmp
mov
cmp
fisubr
sahf
xchg
adc
cvtpi2ps
jns
pop
aaa
or
add
cmp
mov
ins
inc
in
(bad)
enter
xor
outs
dec
jp
stos
mov
add
add
sahf
pop
sbb
(bad)
add
xchg
(bad)
es
jnp
push
mov
iret
jb
jo
pop
inc
adc
mov
jb
hlt
sbb
push
cmc
shl
lds
movs
stc
in
cmps
repz
inc
or
ret
into
adc
dec
inc
add
mov
sahf
pop
push
mov
lods
or
into
add
retf
dec
inc
push
mov
(bad)
inc
or
dec
inc
outs
mov
inc
mov
into
xchg
in
mov
inc
mov
dec
inc
cmp
mov
retf
xchg
mov
into
inc
mov
into
mov
cmps
repz
mov
scas
inc
pop
gs
inc
mov
jp
jae
mov
gs
daa
or
push
inc
mov
in
lea
into
add
mov
inc
pop
dec
movs
in
mov
into
xchg
repnz
dec
inc
sbb
mov
or
into
inc
repz
push
cld
mov
xor
jb
dec
inc
call
dec
xchg
xor
ss
out
mov
dec
or
inc
add
mov
jb
push
xor
xchg
push
adc
xor
jns
(bad)
fsubr
shl
mov
sub
cld
xor
mov
jmp
lods
xor
jns
and
or
xor
mov
xor
neg
aad
stc
jg
es
dec
es
xchg
pop
push
aam
call
iret
call
push
sar
sar
iret
lock
iret
stos
xchg
(bad)
jp
xchg
sar
cwde
into
sahf
daa
xchg
ss
inc
aaa
call
fidivr
(bad)
js
scas
imul
push
xor
std
and
ja
jo
sti
add
or
cld
mov
retf
and
jno
jno
jb
jns
jns
dec
mov
lods
push
sti
call
sahf
lahf
mov
xor
or
xor
xchg
fs
int3
xchg
mov
stos
mov
add
xchg
(bad)
es
test
and
push
jo
stos
add
cmc
fcom
int3
add
jns
jo
test
lods
stos
xor
jl
fidiv
jo
or
out
stos
mov
mov
pextrw
mov
and
add
xor
mov
xor
adc
jg
aam
loop
inc
jns
or
(bad)
mov
sub
or
scas
scas
div
jo
pop
sub
mov
scas
pop
jbe
jp
sub
(bad)
xor
mov
iret
cwde
xchg
and
sub
mov
ss
push
or
mov
rol
retf
push
jns
push
fdiv
cmp
fisubr
lea
mov
retf
and
jno
mov
fwait
scas
test
(bad)
jne
sub
iret
(bad)
mov
sbb
sub
(bad)
outs
fistp
into
(bad)
ror
rep
mov
pop
and
idiv
sub
mov
xchg
rcr
sub
xchg
and
jp
xchg
sub
into
add
sahf
pop
or
stos
add
clc
frstor
jne
aaa
inc
nop
jnp
enter
fcomp
jle
enter
inc
in
inc
xor
xchg
push
or
test
call
loopne
stc
and
jecxz
fst
xchg
pop
inc
sbb
or
sub
pop
xchg
test
sbb
enter
and
jecxz
fst
xchg
pop
into
xchg
add
ins
pop
inc
and
push
cld
enter
and
test
lock
xor
(bad)
push
push
cld
enter
and
test
lock
xor
shr
push
cld
enter
and
or
sbb
or
mov
mov
shl
xchg
mov
dec
lahf
test
std
mov
dec
lahf
test
ret
scas
enter
dec
lahf
test
(bad)
jb
xor
retf
ret
iret
push
and
sti
retf
stc
dec
xor
jns
jo
jns
jo
jns
jo
jns
jb
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
add
fstp
xor
js
jnp
jo
jo
pop
push
jns
xchg
out
nop
mov
jge
fiadd
mov
ins
ficom
and
or
fstp
in
jae
cs
outs
ds
imul
pop
xor
in
mov
or
jp
ret
jae
test
les
xchg
call
fld
xor
inc
jns
out
fnstcw
add
jmp
cmp
ficomp
mov
jo
cmp
jo
xor
xchg
lods
test
out
daa
adc
pop
sub
jno
jne
mov
movs
unpckhps
xchg
out
scas
pushf
push
jl
jl
test
cmp
cld
lods
scas
jg
and
push
jg
jnp
jecxz
stc
and
adc
push
xlat
(bad)
int3
js
std
push
rdpmc
je
mov
jno
stos
cmp
jo
mov
jmp
es
out
jbe
inc
(bad)
nop
add
xor
xor
std
push
scas
pop
add
dec
hlt
out
pop
mov
and
mov
idiv
(bad)
xor
jne
xchg
lods
xchg
lods
xchg
lods
xchg
lods
xchg
lods
xchg
lods
xchg
lods
xchg
inc
inc
push
(bad)
jnp
ins
adc
fnstcw
pop
in
ret
push
push
daa
and
popa
aaa
or
lock
aas
sbb
mov
lods
xchg
(bad)
or
adc
or
es
xor
xchg
(bad)
xor
xchg
(bad)
daa
xchg
(bad)
or
sub
and
ds
lods
xchg
(bad)
lods
xchg
lods
and
xor
adc
shr
push
movs
pop
jge
lods
cmp
(bad)
and
fs
cmp
call
xor
mov
inc
sub
and
inc
stc
dec
xor
jns
scas
(bad)
jg
xor
or
add
outs
(bad)
sub
pop
mov
cmp
fs
add
das
xchg
lods
push
mov
cmps
push
retf
daa
dec
inc
sub
inc
jge
aam
lods
push
mov
lods
xchg
push
lods
add
sub
mov
jge
mov
(bad)
and
mov
xchg
cmp
test
mov
shr
(bad)
and
add
lds
jp
mov
out
xchg
inc
lods
push
mov
lods
xchg
push
lods
add
sub
mov
lods
(bad)
mov
or
add
lods
xchg
xchg
test
mov
xchg
or
fs
int
mov
lods
cmps
mov
jns
dec
(bad)
sbb
ds
lods
push
xor
lods
out
pop
jge
xchg
(bad)
lods
push
mov
xchg
popf
cmp
xchg
jge
aam
lods
push
mov
lods
xchg
push
lods
add
sub
mov
sub
xchg
xchg
test
mov
cmps
or
fs
int
mov
lods
cmps
mov
jns
dec
(bad)
sbb
ds
lods
push
mov
lods
xchg
xchg
or
or
sub
sahf
cmp
xchg
out
or
pop
(bad)
sub
sahf
cmp
xchg
add
jge
cmp
lods
push
dec
inc
sub
xor
lods
push
clc
(bad)
sub
mov
(bad)
retf
cmp
lods
test
push
in
fcom
sub
mov
loope
xor
jge
xsaves
xchg
add
push
in
test
xchg
xchg
jge
pop
lods
or
mov
dec
(bad)
fnstcw
lods
jge
test
lods
push
mov
cmps
inc
cmp
inc
lods
loope
mov
shr
add
lods
dec
mov
retf
mov
xchg
add
shr
mov
lods
xchg
and
cmp
movs
pop
mov
lods
or
fwait
sub
rol
mov
xchg
mov
sub
cmps
shl
mov
stos
cli
mov
test
mov
and
inc
inc
lea
mov
fwait
and
cmp
icebp
xchg
and
mov
aaa
sub
xchg
jns
dec
ficomp
scas
xor
jmp
ds
lods
push
xor
lods
out
pop
jns
pusha
(bad)
push
lods
add
sub
mov
mov
pop
aas
sub
xor
lods
popa
std
(bad)
(bad)
lods
shr
mov
xlat
pop
dec
dec
or
xchg
cmp
lods
xchg
iret
inc
daa
add
dec
into
mov
mov
mov
push
xor
lods
out
pop
jge
mov
mov
xchg
jge
aam
lods
push
mov
lods
xchg
push
lods
add
sub
mov
mov
sar
sub
xor
lods
popa
std
(bad)
cmps
aaa
cmp
jecxz
inc
lods
popf
mov
ja
pushf
lods
xor
jae
popf
shr
ins
inc
mov
and
mov
mov
into
or
and
aas
sub
mov
in
mov
mov
ja
fwait
mov
sar
sub
xor
lods
popa
std
(bad)
cmps
aaa
cmp
jecxz
inc
lods
popf
mov
ja
movs
lods
xor
jae
movs
shr
ins
inc
mov
and
mov
mov
into
or
and
sub
mov
in
mov
mov
ja
fwait
cmps
jmp
call
or
movs
lods
in
inc
and
mov
cmps
dec
aas
movs
lods
push
mov
xor
add
pop
adc
es
jo
jns
jo
add
and
js
jnp
jo
jo
cmp
jns
xchg
mov
xor
ret
jp
repz
int3
add
push
loop
das
lods
test
jno
jns
xchg
fdivr
popf
data16
pop
stos
int
jae
into
or
cmp
mov
pop
das
jp
in
retf
(bad)
rol
push
(bad)
int3
mov
lea
push
jno
jns
mov
shl
jno
jns
jne
sbb
cmps
test
mov
xchg
std
imul
jo
mov
jbe
jp
xchg
sub
sbb
scas
ja
aam
xor
sbb
fadd
push
jns
and
loope
xchg
pop
es
push
xchg
ss
push
lsl
mov
mov
rol
ror
psllq
mov
cmp
xor
mov
out
lar
xchg
lea
xchg
jns
push
fcomp
mov
cmp
gs
out
adc
sub
xchg
pop
daa
scas
xor
jo
adc
mov
movs
clc
xor
call
pop
xchg
ja
jb
push
xchg
(bad)
outs
ss
adc
mov
rcr
(bad)
pop
mov
mov
lods
or
and
mov
mov
cmc
pop
xchg
sbb
outs
jno
daa
loop
or
xchg
jno
daa
(bad)
cmc
ret
xchg
cmc
or
xchg
and
popf
iret
and
mov
xchg
xchg
and
push
into
or
outs
jo
popf
inc
mov
ret
xchg
shr
cmc
mov
jmp
test
fs
ret
xchg
jmp
xchg
pop
xchg
cmc
pop
xchg
pop
xchg
add
xchg
(bad)
pop
shl
cmc
pop
xchg
cmc
add
xchg
push
sbb
cmc
cdq
mov
outs
xchg
xchg
cmc
pop
xchg
dec
sbb
sahf
pop
xchg
cmc
pop
xchg
jl
outs
jno
xchg
cmc
pop
sahf
add
call
xchg
or
test
and
hlt
pop
xchg
sbb
add
push
sub
outs
xor
clc
cli
clc
cwde
bnd
adc
sub
add
pushf
outs
cdq
lea
inc
push
ret
lahf
outs
scas
add
jmp
jno
test
mov
mov
pop
popf
iret
and
mov
xchg
xchg
pop
push
into
or
outs
jo
popf
inc
cdq
lea
inc
push
ret
cmps
outs
push
push
xchg
jno
test
mov
mov
pop
popf
iret
and
mov
xchg
xchg
push
into
or
outs
jo
popf
inc
cdq
lea
inc
push
ret
xchg
outs
mov
xchg
jno
test
mov
mov
pop
popf
iret
and
mov
xchg
xchg
or
outs
jo
popf
inc
cdq
lea
inc
push
ret
xchg
outs
inc
xchg
jno
test
mov
mov
pop
popf
iret
and
mov
xchg
xchg
and
push
into
or
outs
jo
cdq
inc
xchg
xchg
lock
push
clc
pusha
or
push
repz
outs
fmulp
scas
xchg
cmc
ror
(bad)
pop
shl
cmc
adc
dec
outs
in
cdq
daa
cmc
pop
xchg
mov
sbb
lods
jno
test
cmc
pop
push
outs
cmp
pop
xchg
pop
xchg
imul
pop
shr
xor
idiv
xchg
outs
jg
xchg
or
mov
xchg
or
outs
jo
or
add
ins
pop
out
outs
jmp
in
pop
pop
fs
sbb
in
jno
add
jge
or
nop
jno
push
div
(bad)
adc
(bad)
mov
dec
sar
std
xor
pushf
xor
fdiv
jo
scas
cmp
fcom
(bad)
out
pushf
inc
add
fs
mov
bound
and
jns
sub
lock
sub
push
jmp
sub
xor
sub
test
add
sub
cs
hlt
retf
(bad)
fidivr
or
iret
(bad)
fadd
xor
push
test
mov
js
jo
stos
cmp
dec
stos
cmp
fidivr
mov
xor
add
inc
leave
pop
dec
retf
push
sbb
mov
and
ss
mov
push
jo
jne
fmul
cmps
xor
shl
or
cmps
pop
and
dec
pop
push
inc
adc
jo
scas
push
add
test
out
push
jns
out
pop
jns
mov
dec
jns
jo
outs
or
sub
es
mov
dec
mov
adc
cmp
fild
mov
mov
enter
sub
add
xor
jp
movs
lods
jle
jns
jbe
or
sub
rol
push
mov
push
sub
out
jl
fidiv
sub
xor
shl
les
jp
mov
imul
xlat
pusha
fwait
and
dec
xchg
das
inc
cdq
sub
sbb
jmp
in
dec
xchg
adc
es
or
inc
or
lahf
inc
adc
cdq
cmp
(bad)
dec
inc
or
dec
cmp
(bad)
retf
inc
or
ret
cmp
rol
lds
and
dec
push
add
dec
or
mov
push
faddp
mov
cli
(bad)
pusha
xchg
and
dec
inc
icebp
inc
mov
push
aaa
mov
or
inc
aam
(bad)
jno
sbb
or
mov
int
lods
popf
dec
hlt
(bad)
pop
int
lods
mov
out
into
inc
pop
in
dec
inc
or
inc
jle
(bad)
sub
dec
inc
or
dec
inc
or
dec
inc
or
dec
inc
or
and
test
inc
sbb
or
adc
test
inc
call
std
test
inc
dec
xchg
out
ret
or
dec
inc
or
pop
or
cmovnp
(bad)
stc
in
lods
lahf
inc
faddp
lahf
inc
faddp
lahf
inc
or
inc
adc
(bad)
and
cmp
pop
inc
and
cmp
or
int
pop
lahf
dec
or
inc
adc
(bad)
and
cmp
pop
inc
and
cmp
and
ret
shl
cld
(bad)
dec
xchg
or
xchg
or
dec
xchg
or
dec
xchg
or
xor
ror
inc
mov
add
iret
inc
fmul
sbb
iret
inc
hlt
dec
xlat
ins
(bad)
in
popf
or
mov
mov
dec
inc
or
pop
mov
sbb
dec
inc
or
ret
rol
dec
dec
inc
or
xchg
pop
(bad)
push
dec
or
dec
inc
or
add
dec
call
in
test
inc
dec
inc
hlt
adc
out
test
xchg
fwait
cmp
or
inc
pop
add
dec
inc
or
jmp
(bad)
lock
lods
frstor
outs
(bad)
in
mov
cli
(bad)
pusha
jmp
cmp
add
inc
sti
mov
dec
scas
add
dec
inc
or
pop
inc
jno
sbb
or
mov
int
lods
popf
dec
hlt
(bad)
jns
mov
inc
imul
dec
inc
sti
(bad)
mov
inc
or
mov
inc
or
popf
data16
dec
inc
or
dec
inc
or
dec
inc
or
dec
inc
sbb
mov
dec
inc
(bad)
retf
inc
or
stos
loope
popf
pop
or
(bad)
iret
inc
test
loope
int
inc
or
mov
out
(bad)
iret
inc
cmps
outs
mov
or
dec
inc
ret
inc
or
dec
push
popa
(bad)
in
ret
or
xor
ror
inc
mov
and
iret
inc
fmul
cmp
iret
inc
fimul
ins
push
(bad)
into
inc
or
dec
scas
adc
dec
xchg
or
imul
adc
imul
dec
xchg
or
dec
cmp
sti
inc
mov
inc
faddp
jmp
and
addr16
dec
inc
jno
sbb
or
mov
int
lods
popf
dec
hlt
(bad)
imul
jbe
into
inc
(bad)
inc
inc
or
fwait
and
dec
xchg
nop
inc
iret
inc
fidiv
mov
xchg
or
dec
xchg
or
dec
xchg
or
dec
inc
jno
sbb
or
mov
int
lods
popf
dec
hlt
(bad)
pop
int
lods
mov
xchg
(bad)
into
inc
fsubr
lds
retf
inc
or
add
cmovo
(bad)
add
leave
add
in
ret
or
dec
inc
or
pop
(bad)
adc
dec
inc
or
dec
into
inc
(bad)
adc
inc
inc
in
ret
or
mov
(bad)
(bad)
into
inc
(bad)
dec
inc
or
pusha
fwait
and
dec
xchg
in
mov
test
jmp
mov
add
(bad)
jno
mov
sub
(bad)
iret
inc
push
int
or
(bad)
mov
sbb
data16
iret
(bad)
jbe
daa
mov
arpl
ja
pusha
xor
add
mov
repz
jno
jno
jb
jns
jns
pop
lods
jno
fisub
lods
jp
in
ss
jae
ret
ds
mov
js
mov
sub
xchg
inc
add
mov
sub
or
jae
repnz
mov
(bad)
ins
cmp
lods
idiv
pop
sub
xor
jae
xor
out
push
jl
out
js
scas
or
fdiv
mov
ror
jo
stos
dec
jno
jns
das
fsub
xor
or
aaa
adc
pop
ficom
(bad)
mov
psraw
mov
sub
adc
sbb
fsub
push
xchg
add
call
call
mov
xchg
adc
mov
scas
xor
es
pop
scas
jle
jns
sbb
mov
sar
pop
pop
hlt
cmp
add
fisub
or
mov
jne
test
xchg
or
jno
jns
loope
xchg
mul
les
pcmpgtw
add
and
xchg
imul
fimul
push
or
test
add
rcr
pop
test
adc
add
sbb
xchg
push
jo
or
push
jo
push
sub
pop
scas
xor
cmps
test
test
test
mov
add
pop
push
scas
sbb
jp
pop
(bad)
jl
inc
test
iret
fst
pop
add
pusha
pop
shr
sbb
mov
lahf
xor
in
xchg
xor
xchg
scas
or
jnp
sar
movs
dec
pop
test
loope
add
sbb
scas
in
clc
test
pop
ins
mov
icebp
mov
sahf
and
add
jl
in
je
xor
outs
pop
in
sub
sbb
test
pop
lods
sub
test
push
in
or
mov
sbb
fistp
add
lahf
push
out
mov
bnd
in
pop
add
pop
push
fist
pop
xchg
push
es
hlt
into
jns
jo
jns
data16
popa
add
push
hlt
(bad)
fld
mov
push
cmp
shl
xor
jns
imul
dec
sub
retf
push
jns
jo
jns
fld
xor
jns
mov
cmp
push
sub
fidiv
test
daa
mov
arpl
jo
outs
mov
jo
jnp
test
std
xor
ja
xor
fidiv
jo
scas
cmp
fcom
xor
sahf
shl
mov
xor
clc
add
pop
fidivr
sbb
fdiv
call
aas
and
retf
add
aas
push
stc
gs
or
sub
arpl
jbe
jo
adc
fdivrp
fiadd
fbld
xor
stos
pop
jno
jns
add
mov
jo
add
inc
fwait
pop
inc
int3
pop
adc
mov
mov
rcl
push
push
sar
mov
jo
inc
fcom
les
jmp
mov
or
inc
jb
fist
pop
ds
jns
mov
lods
sbb
das
sbb
cmps
ss
inc
(bad)
pop
test
cmps
pop
or
addr16
fsubr
les
pop
shr
and
xor
stos
cmp
fisub
jo
cwde
into
(bad)
mov
or
jae
sbb
imul
cmp
es
retf
push
fmul
mov
xor
(bad)
push
es
xchg
and
bound
stos
jae
sub
xchg
and
rol
sub
test
pusha
add
add
pusha
add
add
jb
add
add
mov
pusha
add
add
add
adc
out
push
test
add
add
int3
int
test
add
add
pusha
add
add
add
adc
aad
cmp
outs
dec
add
pop
(bad)
mov
jl
bound
add
fwait
adc
add
lahf
cli
sub
ret
data16
iret
out
or
ret
pusha
add
adc
fs
cli
adc
outs
dec
add
pop
(bad)
mov
jl
fs
add
fwait
adc
push
shl
icebp
test
rcl
pop
int
ret
mov
test
pusha
adc
cmp
push
xlat
mov
jmp
add
push
rcr
add
ret
data16
iret
mov
aam
sbb
push
ret
data16
inc
pusha
add
add
or
out
sub
int3
out
push
adc
add
add
jo
push
in
mov
cmp
adc
and
cmp
inc
pop
pop
lds
or
ret
pusha
aad
or
cwde
adc
and
cmp
rol
sub
add
aad
sub
pop
jecxz
in
inc
xchg
add
in
mov
xchg
loop
clc
in
ins
add
in
(bad)
pusha
add
add
jbe
call
pop
sub
in
(bad)
pusha
add
add
jbe
jmp
add
jmp
mov
jecxz
add
add
out
and
adc
mov
adc
jbe
test
retf
sbb
adc
mov
push
ret
jbe
test
out
sbb
push
xor
adc
and
cmp
enter
jp
add
pusha
jmp
push
ret
pusha
add
rcl
sbb
inc
adc
push
pusha
add
add
ins
add
retf
(bad)
out
(bad)
mov
mov
add
bound
add
add
fstp
add
call
ret
pusha
add
or
mov
add
pusha
add
add
mov
fsubr
inc
push
mov
mov
add
mov
shl
adc
out
add
cmp
push
(bad)
jmp
pop
pop
and
fisttp
mov
ret
jbe
test
fistp
adc
mov
mov
cli
rcl
adc
ret
pusha
jmp
adc
pusha
rol
dec
addr16
or
rcr
test
mov
add
sahf
cli
(bad)
cmp
(bad)
(bad)
loope
mov
aam
in
hlt
mov
jbe
test
pusha
add
jbe
js
pop
adc
mov
lock
in
push
rcl
add
jbe
add
push
rcr
lds
bnd
ret
call
ret
pusha
adc
(bad)
stos
enter
rcl
sbb
inc
out
cli
adc
xor
dec
in
loop
rol
ret
jbe
add
outs
lods
sbb
pusha
add
rol
cli
adc
jle
dec
in
loop
jo
push
aam
sbb
mov
data16
add
mov
or
pop
push
fstp
and
sbb
gs
or
pusha
rol
lds
jg
sub
add
out
add
ret
pusha
add
rcl
aaa
test
shl
aad
dec
add
jle
adc
pusha
add
push
enter
ret
bound
add
imul
mov
mov
add
push
ret
data16
jno
add
add
pusha
add
rcl
mov
push
add
fadd
nop
add
(bad)
add
test
add
rol
ins
test
push
retf
stc
jns
stc
pop
or
add
mov
adc
jo
jns
jo
jns
jo
jns
jo
shl
test
or
xor
inc
add
retf
fstp
mov
and
jo
jo
mov
js
xchg
ret
xor
jns
lods
or
outs
sub
inc
sub
out
pop
fcom
les
cmp
xchg
pop
inc
aaa
outs
ret
xchg
inc
mov
scas
jmp
es
lea
retf
jo
mov
addr16
cmps
cli
jg
jnp
pop
inc
icebp
and
sbb
or
jns
stos
div
ss
je
stos
pop
jno
jns
sbb
mov
leave
jne
xchg
mov
sbb
mov
inc
shl
mov
out
and
mov
movs
paddw
(bad)
mov
lods
idiv
mov
std
xor
xor
jo
js
lahf
setbe
jno
jns
jno
sub
mov
jns
gs
mov
cmp
daa
push
inc
(bad)
push
xchg
cmps
inc
neg
xchg
mov
dec
mov
into
(bad)
jae
fucom
mov
or
mov
sar
push
fcom
jmp
mov
and
xor
add
xor
sub
inc
in
neg
sub
stc
stc
sbb
aad
sbb
xor
ret
or
mov
xchg
aaa
sub
sub
inc
and
inc
mov
mov
xchg
aaa
jae
enter
ret
aaa
dec
jns
mov
and
aaa
idiv
mov
leave
and
aaa
inc
jle
enter
mov
test
adc
add
and
jns
jo
jns
data16
popa
add
enter
xor
fmul
cs
std
push
aam
mov
xlat
(bad)
fadd
xor
fldcw
into
fld
xor
imul
pop
jns
movs
fldcw
loopne
pop
or
or
sub
fidiv
test
mov
and
hlt
mov
addr16
fnstcw
cmps
ficomp
inc
sar
dec
fst
push
xor
js
fisttp
jl
rcr
xchg
jns
add
pop
dec
test
push
scas
push
in
mov
xchg
dec
mov
xor
inc
adc
add
shl
cs
adc
xor
jmp
jno
rol
jo
jns
mov
ror
cmp
push
jns
sub
fbld
or
mov
push
mov
aaa
or
mov
fisubr
inc
or
jp
xor
jecxz
xor
jno
cmc
cmc
scas
jle
jns
in
out
and
xchg
or
mov
iret
(bad)
push
es
sbb
inc
cmps
ins
cmc
inc
sub
add
jne
xor
scas
ja
and
sahf
pop
jne
push
mov
jo
or
mov
add
mov
sbb
push
push
or
cmps
cmp
jmp
mov
mov
data16
mov
jns
adc
aaa
mov
xor
nop
and
sub
sbb
fisttp
(bad)
(bad)
retf
enter
inc
push
sbb
cmp
rcr
mov
mov
jae
dec
mov
mov
mov
jmp
mov
mov
xchg
aaa
test
fsubr
int3
mov
pop
adc
sbb
loop
or
fwait
data16
or
std
xor
sbb
push
(bad)
xor
scas
cmp
fmul
xor
dec
fild
and
inc
inc
push
lahf
retf
mov
fistp
or
shl
pop
retf
pop
loopne
mov
scas
jnp
in
retf
int
iret
loope
out
lods
jae
sbb
xchg
inc
and
cmp
and
xor
hlt
cmp
fidiv
xor
(bad)
mov
jo
mul
jns
test
jo
jns
mov
inc
(bad)
cmps
enter
in
mov
xor
std
fdivr
jns
fdivrp
xchg
scas
scas
in
mov
cmp
jae
sub
inc
mov
fmul
add
jns
das
fdivr
ret
ja
jo
lds
jnp
cmps
mov
iret
(bad)
cli
xchg
daa
or
not
into
dec
mov
std
xor
sbb
lahf
xor
loop
outs
or
cmp
fild
ret
jae
arpl
fwait
es
add
cdq
ror
or
jnp
gs
and
hlt
movs
scas
ins
add
add
imul
stos
cmp
aam
mov
mov
mov
push
add
sahf
pcmpeqb
mov
mov
mov
nop
adc
jnp
push
out
lods
loope
out
lods
loope
out
lods
loope
test
jmp
sub
and
out
push
stos
push
sub
daa
shr
mov
popf
sub
cli
sub
sahf
cld
lods
loope
out
out
cmp
push
push
mov
mov
push
push
pushf
stos
jmp
sub
loope
out
jns
js
jge
push
out
loope
test
pushf
clc
adc
test
shr
inc
sbb
mov
loope
or
add
jecxz
out
lods
neg
in
loope
out
lods
push
inc
sub
loope
out
sub
cmp
call
gs
call
and
stos
push
sub
daa
shr
mov
or
fldcw
adc
push
gs
mov
push
lock
gs
mov
xchg
push
sbb
push
ds
add
clc
lods
xchg
push
es
cmp
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
data16
jns
jae
push
or
mov
(bad)
jbe
xor
repz
fcmovnu
or
or
jo
mov
hlt
into
jns
or
mov
jo
stc
jb
cmp
jb
jns
jns
jnp
jno
pushf
fcmovnu
fimul
rol
in
mov
add
iret
ret
js
jo
sbb
in
cs
pop
mov
stos
mov
(bad)
xor
daa
pop
cs
sbb
(bad)
data16
mov
jb
mov
pop
jns
jno
xor
bswap
rcr
mov
jne
jns
loop
ss
lods
jle
jae
arpl
lods
(bad)
cmps
dec
inc
(bad)
int3
test
mov
js
cmp
jns
neg
(bad)
cmps
movs
scas
stos
or
(bad)
fadd
mov
out
inc
cmp
fwait
shl
cs
js
jo
dec
popf
pop
lods
scas
cdq
ja
jo
jecxz
jg
cmps
lock
lods
mov
inc
mov
mov
aad
std
xor
inc
xor
loopne
into
(bad)
add
jnp
jo
mov
xor
mov
jo
je
sub
jb
repnz
aaa
mov
ror
and
rcl
into
(bad)
jo
mov
xor
mov
scas
jle
jns
xchg
test
or
icebp
xor
inc
into
(bad)
push
daa
push
(bad)
jae
push
or
sbb
push
xor
xchg
sub
ds
pop
es
jnp
stc
leave
jnp
stc
leave
jnp
stc
leave
jnp
clc
jno
mov
clc
dec
jnp
scas
leave
jnp
clc
popa
mov
mov
dec
jnp
xor
mov
repz
jnp
stc
or
mov
dec
jnp
xor
leave
jnp
stc
cmp
leave
ins
dec
stc
add
es
inc
and
leave
jnp
clc
shr
jae
pop
xchg
loop
or
jge
jnp
sti
inc
lock
leave
jnp
sti
xor
das
sahf
sti
es
jnp
sti
add
ss
xlat
jo
xor
jnp
clc
sar
repz
jnp
stc
pop
outs
out
stc
ret
out
jge
clc
fbld
mov
jns
mov
clc
dec
jnp
xor
stos
push
adc
jnp
adc
sbb
ret
ja
(bad)
jl
gs
adc
in
fwait
leave
sbb
ret
cmps
in
fwait
leave
stos
addr16
test
add
cmps
xchg
jge
sub
mov
mov
outs
fwait
mov
mov
hlt
into
jns
data16
add
xor
adc
loop
jo
scas
cmp
inc
push
loopne
or
jp
jns
xor
and
mov
jnp
add
cli
das
xor
add
cmps
sub
das
jp
daa
retf
pop
add
jo
xadd
fwait
dec
dec
inc
scas
jle
jns
mov
ret
jnp
xchg
outs
iret
mov
inc
scas
push
movs
bswap
dec
fld
xor
fsub
scas
movs
scas
stos
xchg
jno
jns
imul
sysexit
stos
fld
popf
lods
or
rcr
iret
cmps
es
jno
jns
mov
ror
xor
push
mov
jns
loopne
sub
jp
jle
and
(bad)
retf
add
jl
inc
mov
fimul
adc
mov
push
lods
jg
jns
or
fadd
sub
rol
mov
jo
add
jno
fsubr
pushf
lods
scas
and
(bad)
es
(bad)
mov
xchg
es
mov
jp
pop
and
data16
call
out
sub
or
fimul
xchg
mov
test
xchg
div
cmps
scas
div
cmps
scas
div
cmps
scas
popf
mov
lods
sub
xor
mov
es
sub
mov
cmps
sub
icebp
fisubr
ds
int
div
cmps
scas
in
cmps
data16
mov
jl
and
loopne
mov
div
push
mov
fisttp
cmps
sub
mov
in
xor
mov
div
mov
daa
fs
movs
hlt
xor
scas
std
xor
scas
loopne
fsub
jb
mov
je
and
lock
xor
jb
movs
jle
loope
inc
div
jbe
aas
retf
std
shr
not
ins
sub
das
les
not
sub
mov
mov
lds
mul
ins
sub
into
loope
cmp
(bad)
jle
adc
daa
jo
ficomp
xor
iret
stos
mov
stos
jns
jno
jno
jb
jns
jns
nop
push
das
sahf
or
xchg
lock
pop
fiadd
iret
pop
xor
xor
or
xor
mov
test
add
and
sbb
shr
inc
psubusb
leave
cmps
mov
inc
pop
fdivr
mov
imul
adc
(bad)
push
jl
loopne
or
and
rcr
mov
cdq
jne
std
mov
xchg
or
xchg
jns
dec
fnstenv
ja
jo
imul
xorps
jge
out
(bad)
mov
jmp
sbb
cmp
jb
sub
les
std
push
paddusw
hlt
stos
cmp
inc
scas
jno
cmp
sahf
fimul
mov
xchg
ret
or
hlt
shr
xor
fld
iret
adc
sysret
xchg
aad
mov
(bad)
sub
xchg
sub
or
jo
jns
jno
outs
in
movs
unpckhps
(bad)
iret
mov
sbb
jns
inc
xchg
xchg
es
jo
add
xchg
cld
ret
rol
mov
push
fs
mov
in
fs
mov
xor
push
aas
leave
outs
in
fs
lock
dec
outs
in
fs
mov
push
dec
shr
aaa
mov
push
mov
aas
push
popa
arpl
out
pop
in
call
fs
jb
je
movs
arpl
push
jmp
push
lods
leave
mov
xlat
mov
xor
sbb
mov
xchg
leave
aas
push
push
and
xchg
fwait
loopne
sbb
dec
mov
jo
stos
mov
in
push
mov
and
in
sub
adc
daa
jo
ficomp
aaa
test
stc
std
xor
xor
retf
shr
xor
add
push
and
xchg
pop
(bad)
xchg
inc
aaa
xchg
cmps
retf
mov
fwait
pushf
mov
fist
ret
mov
xlat
mov
in
jae
cld
jbe
add
pop
sub
(bad)
push
xor
or
(bad)
fadd
mov
adc
mov
inc
sar
xor
push
jmp
add
sub
xor
jp
xor
(bad)
inc
lods
stos
cmp
jns
mov
sar
jo
es
gs
jns
push
ficom
inc
aad
(bad)
retf
adc
mov
jae
mov
(bad)
cmps
mov
and
cmps
ins
or
jo
jns
(bad)
or
out
pop
add
(bad)
jae
mov
das
pop
mov
cmp
sub
sbb
cmps
ret
jns
arpl
mov
xchg
sub
sub
push
scas
cmc
not
hlt
cmp
fidiv
rol
in
ret
jmp
sub
into
(bad)
jns
js
or
test
mov
mov
stos
out
and
leave
add
ins
sahf
xchg
xchg
fiadd
mov
pop
scas
mov
pop
scas
mov
pop
scas
mov
pop
les
xor
add
fdivr
or
push
scas
mov
pop
hlt
div
dec
scas
sahf
mov
fisub
jmp
pop
je
jmp
lock
mov
pop
mov
mov
pop
and
cmps
lea
mov
ja
pop
xchg
push
jae
cmc
pop
fwait
inc
(bad)
mov
dec
sahf
(bad)
fdiv
ins
mov
fmul
push
pop
cmp
out
dec
scas
imul
inc
fwait
add
push
pop
adc
pusha
loope
stos
pop
movs
dec
push
lea
pop
test
sahf
in
mov
call
push
jae
mov
mov
call
mov
stos
call
fmul
icebp
dec
scas
jb
rcl
mov
ficom
lea
mov
mov
push
push
fwait
inc
mov
and
addr16
lods
mov
pop
jns
addr16
in
imul
inc
mov
dec
scas
mov
pop
test
pop
movs
push
xor
scas
mov
fsubr
xchg
xchg
scas
mov
pop
out
mov
jbe
jmp
dec
scas
mov
into
inc
cwde
cmp
mov
and
xchg
mov
ds
or
gs
push
int
xchg
pop
sub
mov
jg
ss
xchg
push
es
hlt
into
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
data16
push
add
push
lods
fstp
mov
js
js
jnp
jo
jo
fimul
js
xchg
mov
lods
ret
fiadd
into
mov
jg
and
xchg
inc
ret
xor
jp
das
es
ror
inc
mov
and
or
cmps
mov
xor
jo
test
inc
cdq
fmul
lds
shl
jo
stos
aad
fnstcw
or
adc
add
cli
push
rep
scas
add
sub
iret
(bad)
es
sub
repz
xchg
out
scas
scas
sub
cmps
mov
das
fcomp
lods
scas
mov
jo
sub
ja
jo
imul
jg
jns
loop
or
or
fisubr
xchg
stc
sbb
fisubr
or
mov
and
out
scas
push
xchg
sahf
sub
inc
adc
jbe
inc
dec
in
hlt
rol
lahf
mov
xchg
and
and
shl
clc
lods
scas
or
or
lods
add
sub
das
pcmpgtw
cmps
fs
inc
cdq
test
retf
rdtsc
out
jmp
jns
jbe
jo
push
or
popa
popf
scas
jmp
adc
cmp
fidiv
neg
jp
cmc
sub
les
ds
push
inc
aad
push
dec
(bad)
xlat
out
mov
xchg
xor
inc
dec
mov
movs
inc
sub
sub
arpl
mov
and
jle
rol
mov
adc
mov
xchg
(bad)
mov
push
mov
cmp
xchg
lds
mov
or
jle
push
cmp
add
cmp
mov
mov
xchg
mov
inc
pop
aam
rol
mov
retf
dec
pusha
stos
inc
mov
inc
pop
out
push
lds
cmovne
push
push
movs
inc
cmp
pop
cmp
fwait
cmp
jle
adc
mov
stos
gs
nop
(bad)
push
xchg
inc
mov
mov
inc
mov
xchg
fldz
add
imul
mov
xchg
mov
xchg
mov
xchg
inc
shl
out
inc
xchg
dec
cmp
mov
mov
inc
(bad)
xchg
imul
cmp
mov
pop
pushf
mov
xchg
iret
push
push
outs
ret
stos
xchg
inc
sar
in
push
rcl
scas
aad
imul
adc
mov
mov
stos
sub
fs
not
outs
mov
push
retf
dec
pusha
addr16
call
ror
dec
mov
inc
mov
mov
dec
add
add
inc
mov
jbe
ror
push
pushf
outs
and
(bad)
xchg
mov
sbb
inc
mov
or
(bad)
push
xor
jg
into
push
jg
cmp
je
mov
inc
sbb
or
pop
pop
or
mov
fwait
inc
and
jg
add
inc
pop
gs
xchg
push
and
retf
stc
dec
xor
jns
fcmovu
mov
fldz
enter
daa
jp
cwde
sub
xor
cmp
fidiv
jo
scas
cmp
fdiv
push
test
(bad)
int3
pushf
mov
mov
jo
ret
jae
loop
dec
cmp
xchg
loope
pushf
jns
jb
lods
mov
aas
jnp
iret
fnstenv
pop
push
dec
sbb
lods
add
sbb
nop
das
jp
ds
(bad)
data16
jo
or
icebp
(bad)
xor
setns
fadd
xor
sub
outs
fild
jo
setnp
(bad)
iret
(bad)
sub
xchg
inc
pop
(bad)
xor
xchg
or
out
cmp
sahf
mov
push
stos
ss
push
psubsw
ror
inc
pop
mov
jo
fist
cmps
push
jg
jns
mov
mov
push
push
icebp
push
mov
dec
push
out
xor
psllq
mov
cmp
or
mov
mov
(bad)
shl
xor
cmps
inc
out
pop
stos
cmp
ja
std
mov
and
jmp
jnp
popf
mov
xor
dec
lock
scas
sub
sub
xchg
mov
stos
mov
xchg
(bad)
loop
mov
scas
scas
or
mov
xchg
mov
rol
std
(bad)
mov
cdq
fcom
(bad)
cdq
or
(bad)
cdq
or
(bad)
cdq
or
popf
repnz
or
test
(bad)
cdq
mov
popf
ret
or
sbb
add
lods
adc
jno
adc
push
mov
cdq
hlt
adc
or
(bad)
cdq
inc
add
pop
or
jo
sub
adc
fild
imul
(bad)
into
or
add
jo
in
jo
lock
into
cmps
sbb
adc
popa
or
sub
rol
(bad)
fwait
pop
adc
push
ret
cdq
adc
mov
or
add
lods
adc
xchg
adc
ror
dec
add
adc
cdq
pushf
imul
jae
ret
push
adc
or
jo
mov
outs
sar
or
sbb
or
push
gs
enter
(bad)
into
(bad)
mov
arpl
or
(bad)
cmps
test
stc
pop
jns
jns
or
je
xor
outs
jmp
jbe
mov
or
fadd
adc
sbb
outs
sti
retf
daa
push
(bad)
mov
cmp
fnstcw
cmps
fcmovb
inc
jns
or
xor
mov
xlat
int
out
mov
daa
mov
dec
scas
jp
out
and
inc
sahf
data16
mov
or
call
in
lods
sbb
and
adc
fidivr
xor
jg
jae
and
mov
stos
cmp
jo
mov
lods
scas
scas
neg
hlt
cmp
mov
(bad)
or
sub
add
scas
out
adc
xchg
aad
mov
test
movs
jecxz
push
jns
push
fcom
les
stos
scas
xor
fcomp
fcomi
movs
psrlq
(bad)
cmps
push
inc
push
mov
cmps
jbe
iret
(bad)
pop
xchg
daa
inc
inc
or
sub
or
fadd
xor
fdivr
jno
sub
mov
shl
mov
xchg
daa
jno
mov
jp
cmp
or
mov
sar
mov
xchg
pop
es
test
aad
and
xor
mov
ds
pop
pop
fdivr
sub
jns
sub
jns
sub
jns
sub
xchg
fld
jb
sub
pop
jl
jns
sub
xchg
fnstenv
xor
mov
jns
sub
add
icebp
fisub
adc
fdivr
sub
outs
sub
pop
movs
fdivr
sub
out
pop
sub
(bad)
jl
aas
sbb
sub
cli
ficom
push
mov
jns
sub
js
shl
xchg
dec
cmp
mov
push
xchg
pop
xor
or
adc
pop
jns
loop
std
pop
jle
mov
mov
pop
(bad)
mov
aad
jp
cli
fiadd
pop
sub
jns
sub
and
pop
xor
jg
sub
dec
lea
and
pop
cli
fiadd
jmp
xchg
aad
xchg
aad
xchg
cli
or
(bad)
aam
sub
daa
xchg
jle
jns
cld
fdivr
sub
jns
sub
jns
sub
imul
aaa
std
pop
and
xor
movs
fdivr
stos
fsubr
sub
std
pop
aam
jg
cmp
not
aaa
std
pop
cmp
jns
sub
xchg
scas
mov
pop
aam
mov
sub
jns
pusha
into
adc
pop
jns
lds
lock
hlt
push
sub
jg
scas
sbb
and
jns
mov
loopne
cmp
pand
cld
imul
jns
mov
fcomp
fsubr
sub
jns
mov
je
jmp
retf
das
shr
cmps
scas
push
sub
imul
fisubr
(bad)
into
hlt
inc
cmp
sub
outs
shl
xchg
pop
pop
push
pop
dec
cmp
outs
loop
scas
push
sub
dec
dec
cmp
fisubr
(bad)
into
hlt
sbb
sub
outs
shl
js
sub
mov
mov
pop
sub
fdivr
sub
mov
lea
sbb
jmp
push
fcomp
fsubr
sub
pand
fdivr
rcl
jb
popa
pop
jns
jl
jns
sub
jns
xor
jg
sub
not
aaa
std
pop
cmp
jns
sub
mov
std
fdivr
and
lock
add
scas
aaa
std
pop
sub
outs
mov
fdivr
scas
or
mov
fsubr
rol
fdivr
mov
fdivr
or
jns
sub
jns
sub
jns
sub
adc
pop
jns
fst
jns
sub
and
pop
jns
frndint
mov
pusha
push
jb
sub
fcomp
jns
sub
mov
push
je
mov
inc
adc
sub
jns
sub
sbb
push
std
pop
rcr
pop
pop
xor
sub
pop
jae
fsubr
mov
inc
or
fild
daa
scas
push
aam
xor
movs
fdivr
stos
fsubr
sub
mov
arpl
jns
and
lock
sub
imul
fdivr
sub
addr16
fdivr
sub
dec
sub
into
xor
pop
jns
fldlg2
mov
push
ficom
pop
cli
or
cli
sub
not
rcr
jns
retf
jl
fdivr
sub
jns
sub
jns
sub
jns
sub
not
(bad)
stc
pop
pusha
fdivr
sub
imul
sub
pop
clc
rcr
pop
scas
fdivr
pop
mov
xchg
xchg
jns
sub
xor
fdivr
sub
mov
inc
into
push
mov
pop
jns
mov
bound
pop
and
scas
pop
sub
push
dec
shl
or
outs
xchg
sub
mov
arpl
jns
and
lock
sub
mov
fcomp
jns
sub
addr16
fdivr
sub
dec
sub
into
xor
fnstcw
mov
push
ficom
pop
cli
or
daa
not
rcr
jns
retf
push
sub
xor
movs
fdivr
stos
fsubr
sub
mov
arpl
jns
and
lock
sub
test
pop
jns
(bad)
fdivr
sub
addr16
fdivr
sub
dec
sub
into
xor
mov
xchg
jg
pop
xchg
pop
cli
or
sub
not
rcr
jns
retf
mov
sub
xchg
sti
push
jb
aam
jns
rcl
inc
pop
mov
jns
ror
fldenv
mov
jns
(bad)
sub
xchg
fldcw
and
xchg
push
mov
arpl
fadd
and
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
jns
jo
outs
jmp
or
mov
daa
jno
jb
jns
jns
pop
aad
retf
pushf
mov
xchg
inc
icebp
adc
fidiv
dec
pop
push
aas
test
jno
jns
pop
fsubr
retf
jae
mov
test
xlat
push
and
sbb
les
xlat
add
iret
dec
xor
jae
inc
mov
mov
sub
inc
or
mov
cs
js
jo
mov
aam
(bad)
mov
xchg
jbe
jo
mov
fadd
(bad)
jno
scas
out
neg
je
xchg
scas
stos
or
jns
pop
fdivr
push
fmul
mov
push
leave
mov
jbe
jp
push
js
jo
push
aaa
mov
sar
jo
pop
add
ss
jge
stos
scas
jns
fcom
ss
mov
adc
mov
mov
call
loope
push
xchg
pop
es
jo
inc
inc
jnp
loop
adc
adc
xor
sub
cmp
cs
rcr
(bad)
jns
and
and
int3
mul
xor
and
push
sbb
inc
inc
mov
push
or
inc
jbe
cs
and
repnz
and
(bad)
mov
cmp
(bad)
mov
cmp
(bad)
mov
cmp
aam
mov
pop
call
and
mov
lds
and
aad
cdq
mov
and
iret
jl
mov
inc
sbb
jmp
out
cmp
(bad)
mov
cmp
dec
and
(bad)
cmovae
cmp
sub
pop
adc
mov
xor
fild
sub
and
inc
fisttp
into
mov
rcl
mov
iret
stos
inc
retf
pop
sub
jmp
out
cmp
sub
pop
mov
push
add
sbb
addr16
adc
(bad)
and
xor
std
ja
mov
cmp
cmp
lods
and
inc
sbb
cmp
and
sub
pop
add
aas
sub
dec
aad
xor
ins
movs
(bad)
mov
xor
xchg
das
cmp
(bad)
and
cmc
(bad)
mov
ret
(bad)
dec
adc
in
jne
mov
(bad)
jno
into
mov
mov
into
mov
in
cmp
cmp
(bad)
and
and
cmp
cmp
(bad)
mov
test
mov
fisub
test
and
inc
stos
pop
das
pop
mov
rcr
ss
inc
out
mov
push
es
test
jmp
jo
jnp
call
and
xor
push
xor
scas
cmp
jo
push
lahf
ss
push
aaa
and
ins
xchg
xor
jnp
mov
pop
inc
mov
add
xor
or
ss
addr16
jae
pop
mov
std
push
or
out
mov
iret
(bad)
mov
or
lahf
cmp
ss
and
stos
cmp
(bad)
pop
sahf
mov
xor
movs
scas
stos
add
sbb
lea
push
inc
pop
jns
stos
sbb
js
jo
mov
mov
scas
inc
add
xor
lahf
je
xor
scas
lea
fldcw
inc
out
enter
jo
or
jb
pop
cli
les
shl
icebp
ja
jo
stos
sub
fcmovbe
sub
jns
and
iret
jmp
sub
cmps
ror
jne
int
loop
fld
retf
int3
(bad)
sub
mov
pop
jns
add
mov
iret
(bad)
pop
fmul
(bad)
pop
es
add
xchg
add
jo
out
mov
jp
xchg
sub
outs
and
cmp
jns
add
and
dec
addr16
ss
addr16
ss
addr16
ss
addr16
ss
addr16
ss
addr16
ss
addr16
ss
addr16
ss
addr16
ss
addr16
ss
inc
ss
addr16
jmp
addr16
(bad)
ss
fdiv
inc
shl
ss
addr16
addr16
xlat
addr16
(bad)
ss
fdiv
inc
int
cwde
pop
mov
mov
mov
sub
jno
mov
lds
ss
in
ss
aad
call
and
cdq
jle
ss
fist
les
in
ret
cmp
popf
out
sub
out
inc
inc
ss
addr16
sbb
(bad)
mov
mov
push
dec
addr16
pop
pop
addr16
pop
int3
addr16
enter
mov
jge
push
dec
loop
xchg
mov
inc
sbb
addr16
cmp
pop
ins
(bad)
cwde
or
pop
ins
(bad)
cwde
add
dec
addr16
xor
stos
pop
pop
addr16
ss
mov
push
dec
addr16
pop
pop
addr16
pop
int3
addr16
enter
mov
jge
mov
mov
inc
sbb
addr16
cmp
pop
ins
(bad)
cwde
or
pop
ins
(bad)
cwde
add
addr16
xor
gs
pop
pop
addr16
ss
mov
ss
addr16
ss
xchg
ss
addr16
sbb
fwait
xchg
ss
mov
loop
cdq
inc
bound
push
inc
ds
leave
mov
mov
addr16
addr16
leave
mov
mov
leave
mov
mov
inc
pop
addr16
int
cwde
jmp
leave
scas
sub
jge
addr16
sub
push
inc
leave
mov
mov
leave
mov
mov
(bad)
dec
lea
(bad)
ss
addr16
xor
mov
lahf
jp
mov
popa
inc
xor
ret
push
dec
addr16
loop
jmp
inc
xor
ror
cwde
add
jne
xor
bound
dec
xchg
int
xchg
(bad)
push
fnsave
jecxz
xchg
mov
inc
ss
addr16
sbb
popf
imul
pop
addr16
sbb
addr16
(bad)
lock
out
and
cs
leave
mov
mov
cli
pop
inc
ins
mov
jmp
xor
data16
mov
enter
enter
dec
data16
mov
inc
ss
addr16
sbb
popf
les
xchg
ss
addr16
pop
pop
addr16
outs
pusha
addr16
loop
jge
lods
mov
dec
inc
pop
int3
addr16
ror
cli
enter
mov
mov
enter
mov
cdq
inc
dec
arpl
push
rcl
les
dec
mov
loop
mov
loop
mov
enter
mov
cdq
inc
stos
arpl
push
dec
addr16
ss
call
dec
in
xchg
inc
sub
add
dec
push
inc
inc
dec
add
dec
out
lahf
inc
leave
push
pushf
mov
sbb
pop
daa
mov
bound
clc
add
xor
fbstp
xor
scas
cmp
or
jb
push
add
or
loope
xchg
mov
xor
(bad)
aad
scas
jp
or
mov
cmp
mov
sub
das
jp
pop
retf
(bad)
out
out
in
push
cld
xor
fidivr
xor
jmp
sbb
into
push
fisub
mov
pop
ss
push
or
mov
ror
cs
lods
(bad)
aaa
std
and
jns
mov
cmp
pop
mov
dec
stos
les
mov
xor
fbstp
rol
push
pop
enter
xor
push
dec
mov
sar
lahf
loop
or
push
neg
add
cmovl
adc
dec
imul
stos
(bad)
mov
xchg
daa
test
adc
scas
jmp
jo
les
fwait
lods
scas
gs
jo
push
push
(bad)
outs
pop
and
jbe
cmp
es
(bad)
cmp
cmp
xchg
lea
mov
xor
push
jp
pop
retf
sub
jae
loopne
call
sub
dec
add
mov
dec
sbb
jg
cmp
add
ret
cwde
hlt
jg
xchg
int3
jno
xchg
hlt
das
sub
mov
xchg
fistp
icebp
pop
aad
out
xchg
sub
jp
cs
xchg
and
dec
mov
adc
pop
fist
or
xchg
xor
sub
inc
and
sbb
sub
ret
adc
mov
xchg
leave
(bad)
sub
pop
add
(bad)
ret
adc
outs
clc
jmp
leave
inc
and
inc
sub
sbb
sub
in
sub
jg
ret
xchg
dec
das
sbb
mov
sub
mov
cld
stc
rep
xchg
aaa
push
mov
stc
pop
lods
xchg
aaa
push
test
inc
pop
lods
xchg
out
pop
xchg
xlat
push
dec
popf
jnp
lods
xchg
stos
pop
ins
lahf
dec
push
dec
popf
or
xchg
sbb
push
dec
sbb
push
mov
adc
std
and
add
jp
jns
adc
jns
js
jnp
jo
jo
loop
js
sub
add
push
pushf
test
jns
jb
jb
sahf
cmp
xlat
cdq
daa
mov
retf
out
cmp
xlat
shl
sub
or
dec
jl
(bad)
jae
push
mov
add
test
xchg
or
out
scas
sbb
inc
lods
push
cmp
cs
(bad)
es
xor
or
mov
loope
ins
(bad)
aad
out
arpl
cmp
sub
jae
imul
sar
mov
int
lods
scas
sti
or
jae
iret
(bad)
mov
xchg
out
loop
cmp
psubusb
xor
lods
mov
mov
or
push
mov
dec
xor
stos
ret
mov
xchg
(bad)
lock
std
push
shrd
rol
lods
idiv
xchg
cld
xor
(bad)
xor
(bad)
in
or
cmp
or
stmxcsr
cmp
and
mov
push
mov
push
cmp
xchg
out
cmps
mov
call
out
rcl
ja
jo
and
in
jg
jns
mov
outs
fistp
pop
scas
xor
es
test
lods
stos
push
mov
xchg
xchg
es
sub
scas
push
add
jae
call
rcr
jne
xchg
ja
rcr
pop
es
push
sbb
lahf
or
and
pop
push
pop
xchg
pop
mov
clc
inc
ds
mov
addr16
fnstcw
cmps
(bad)
daa
dec
ror
xor
mov
movs
pushf
fild
xor
mov
push
pop
scas
or
in
and
ret
or
cmp
xchg
jae
outs
mov
sahf
scas
sbb
and
popa
xchg
push
xor
inc
(bad)
fbld
(bad)
aam
cmc
movs
or
(bad)
fadd
xor
mov
mov
mov
mov
add
js
jo
adc
mov
packsswb
out
shl
cmp
jmp
les
shl
jmp
mov
mov
shr
int
mov
test
js
jnp
ja
jo
(bad)
jo
inc
or
pop
cmps
fidivr
jnp
arpl
mov
xchg
es
cmps
adc
jns
je
sbb
jns
cmps
fmul
out
les
neg
and
mov
mov
(bad)
call
loop
cmp
fidivr
sub
mov
rol
lds
sub
jns
cli
es
cld
ins
sbb
xor
(bad)
(bad)
cmp
shl
xchg
or
inc
sub
(bad)
call
(bad)
mov
sbb
in
xchg
mov
stos
add
(bad)
mov
mov
sbb
es
aas
sti
mov
sbb
jle
inc
aas
jg
cmc
xor
mov
aad
and
shl
repnz
jecxz
call
dec
sbb
xor
enter
adc
xor
scas
cmp
outs
int3
pop
sbb
and
xchg
lahf
ret
jo
jnp
(bad)
fldcw
leave
pop
lock
cli
lods
or
and
xor
(bad)
cmp
mov
add
sbb
mov
(bad)
(bad)
scas
jmp
mov
or
mov
(bad)
scas
scas
ins
push
and
xor
mov
and
pop
inc
and
jbe
jo
fisttp
and
movs
setnp
fdiv
inc
(bad)
push
xchg
cmps
es
jae
jl
inc
cmps
or
lds
jo
imul
aam
std
scas
scas
pop
jbe
jp
data16
imul
jne
sbb
jo
or
ret
cmps
xor
ss
sub
imul
push
pop
stos
mov
jo
mov
es
inc
sub
fadd
ja
lods
idiv
adc
call
adc
inc
aaa
psubsw
cmps
les
stos
cld
xchg
xchg
push
cmp
(bad)
fisttp
xor
mov
outs
add
mov
cmps
aaa
xor
aas
(bad)
in
mov
popf
push
mov
mov
in
mov
lahf
cld
sub
cld
mov
or
mov
jmp
xor
add
push
repnz
push
xor
or
out
and
aad
xchg
(bad)
or
fsub
out
test
mov
shl
out
lahf
out
pop
sti
div
sub
out
and
idiv
mov
mov
out
and
push
fisubr
and
push
out
and
icebp
xchg
mov
push
aam
ja
mul
sub
mov
movs
and
iret
rcr
daa
(bad)
mov
fstp
outs
dec
popf
in
(bad)
mov
mov
push
fsub
jne
aam
cmp
mov
pop
inc
aaa
fwait
xor
xor
inc
aaa
fwait
xor
and
cdq
cld
lods
pop
mov
movs
or
mov
imul
cmps
sub
mov
inc
out
xchg
in
mov
fldlg2
in
aaa
xchg
jmp
std
dec
and
mov
in
out
xchg
call
lods
pop
mov
movs
or
mov
popa
popf
jmp
(bad)
xor
and
mov
sar
or
xor
or
test
(bad)
(bad)
mov
xchg
xor
aam
aas
xchg
fsubr
mov
test
mov
xor
or
push
or
les
sub
mov
rcr
and
xchg
shl
sbb
aad
mov
pop
popf
out
add
mov
out
and
aad
test
test
in
out
popf
inc
or
fadd
sub
mov
shr
shl
or
mov
imul
dec
and
mov
in
movs
jae
out
movs
inc
xchg
mov
mov
mov
mov
cmps
add
(bad)
cld
mov
mov
and
mov
in
movs
jae
out
movs
ins
xchg
mov
cmps
add
(bad)
cld
mov
mov
and
mov
sar
or
xor
cmp
mov
jecxz
cmps
inc
out
(bad)
shl
mov
(bad)
xor
(bad)
jecxz
mov
in
out
(bad)
inc
ins
test
mov
xchg
call
popf
shl
and
mov
mov
fldlg2
div
xchg
loop
popa
xchg
jmp
(bad)
repnz
pop
fucom
mov
xchg
(bad)
lods
pop
mov
mov
out
popf
aam
xor
in
and
xchg
shl
and
(bad)
cld
outs
imul
(bad)
in
out
popf
idiv
dec
fucomi
mov
cmp
(bad)
mov
repz
pop
mov
mov
xor
repnz
aaa
mov
mov
aad
out
xchg
inc
and
stc
xchg
popf
or
out
movs
ins
test
mov
and
mov
fsubr
mov
jmp
xor
xacquire
popf
mov
mov
xchg
out
mov
mov
idiv
mov
mov
stc
(bad)
test
imul
cld
idiv
mov
mov
(bad)
jecxz
mov
dec
aas
(bad)
(bad)
lods
daa
mov
test
push
(bad)
mov
mov
mov
xchg
(bad)
lods
pop
mov
and
inc
pop
mov
test
fnsave
and
mov
(bad)
mov
(bad)
test
xchg
xor
and
mov
in
and
xchg
repnz
push
xor
jae
fdiv
setge
in
popf
out
shr
test
pop
stc
call
mov
repz
jae
fsubr
daa
popf
mov
xor
jmp
stc
fsubr
sub
mov
mov
shl
xchg
mov
mov
push
xor
and
mov
repnz
lds
sbb
lds
mov
(bad)
xor
mov
mov
ins
lahf
lods
mov
push
cmps
test
dec
mov
(bad)
cmp
(bad)
jmp
rcl
in
out
mov
mov
or
mov
mov
xchg
call
lahf
ins
mov
fsub
xor
scas
movs
or
xor
or
call
movs
jne
ror
addr16
ror
jne
ror
out
cdq
call
cmps
sub
mov
(bad)
mov
mov
(bad)
sub
mov
jmp
xor
out
daa
(bad)
mov
stc
(bad)
pop
mov
aas
aad
sar
xchg
movs
xor
movs
or
xor
and
mov
call
cmps
xor
mov
lods
or
(bad)
outs
popa
mov
xchg
xchg
mov
idiv
or
fsubr
out
cmps
out
aaa
(bad)
test
and
mov
stc
fcmove
or
jmp
cmc
dec
out
xchg
call
mov
xchg
mov
mov
icebp
out
cmc
and
mov
mov
cmp
mov
out
mov
outs
imul
jmp
lahf
mov
sub
mov
in
out
mov
xchg
call
mov
mov
xor
pop
xchg
shr
or
(bad)
cmps
jge
jmp
push
imul
xor
out
pop
xchg
cld
std
sub
les
jge
jmp
cmps
(bad)
mov
xchg
movs
sub
fsub
sub
(bad)
mov
(bad)
out
mov
fsub
sub
mov
test
sar
jmp
pop
(bad)
lock
test
movs
sub
repnz
popf
inc
pop
lds
and
(bad)
lock
popa
xchg
fdiv
sub
xor
or
test
icebp
mov
add
mov
xchg
fsubr
out
mov
(bad)
jecxz
mov
out
and
xchg
inc
aaa
adc
(bad)
and
cmps
jmp
sar
out
mov
out
xor
in
xchg
shr
mov
cmp
mov
repnz
popf
fcomp
or
xor
and
mov
mov
mov
addr16
(bad)
mov
jns
(bad)
in
popf
xor
and
cdq
div
inc
popf
nop
movs
and
mov
shl
movs
pop
push
shl
and
aad
mov
mov
outs
jno
(bad)
mov
mov
lods
xor
cli
movs
or
test
icebp
repnz
inc
test
movs
or
xor
pop
stc
rol
cmp
xchg
in
mov
rcl
test
daa
(bad)
(bad)
outs
dec
(bad)
test
icebp
repnz
imul
repnz
dec
mov
leave
and
mov
xchg
mov
fsub
add
repnz
imul
rol
out
popf
in
mov
aad
xchg
aad
xchg
xchg
xchg
mov
and
xchg
(bad)
mov
sub
mov
or
xor
aaa
lahf
lock
or
xor
and
mov
out
movs
out
xchg
fdiv
xor
xor
xor
repnz
and
mov
movs
sub
fsub
sub
jmp
popf
mov
pop
icebp
rol
and
xchg
jmp
push
xor
cmp
mov
test
out
popf
inc
xor
cs
push
mov
cmc
inc
mov
std
out
push
outs
icebp
stos
mov
out
pop
xor
out
push
ds
dec
xor
in
push
repnz
sub
gs
jmp
sub
pop
xor
test
and
out
mov
imul
dec
test
push
xor
add
pop
xor
jb
dec
test
push
xor
add
pop
xor
xchg
ror
sti
push
xor
add
pop
xor
mov
dec
test
push
xor
add
pop
xor
rcl
dec
test
push
xor
add
pop
xor
repnz
sti
push
xor
add
pop
xor
(bad)
rcr
jnp
adc
xchg
in
and
out
mov
jbe
sti
cli
xor
adc
push
inc
outs
jge
jge
push
xor
out
mov
jge
movs
sub
push
retf
nop
pusha
test
jnp
pop
xor
out
push
mov
outs
sbb
outs
icebp
loope
adc
outs
lea
jl
pop
push
gs
push
mov
aas
inc
ficom
push
in
(bad)
push
xchg
push
es
xchg
sub
dec
sub
pop
sbb
xor
fistp
sub
movs
add
xor
xchg
sub
jmp
mov
sub
jne
sub
fwait
add
xor
or
xor
sub
xor
leave
call
(bad)
(bad)
cs
xor
das
xor
xor
cdq
sub
xor
popf
adc
xor
fldenv
sub
sbb
sub
cmps
mov
xor
arpl
das
xor
dec
push
sub
aaa
xchg
sub
xor
rcr
aaa
jmp
les
xor
adc
adc
xor
popa
sbb
sub
popa
adc
xor
aas
xchg
sub
cmp
sub
test
cs
repz
sub
fstp
sub
leave
push
ss
mov
aaa
xor
aad
xor
mov
in
xor
pop
jmp
xchg
xor
retf
pop
in
xor
imul
xor
jnp
in
xor
or
(bad)
xor
(bad)
sub
xor
cmp
xor
inc
(bad)
in
xor
cmp
xor
mov
add
in
xor
xlat
sub
xor
mov
jmp
test
(bad)
xor
rol
xor
or
xor
adc
xchg
cdq
push
xor
lock
xor
push
xor
cmp
push
scas
push
xor
jmp
xor
xchg
push
xor
xchg
push
xor
push
push
xor
mov
inc
xor
inc
xor
sbb
mov
inc
xor
movs
inc
xor
rol
loope
inc
xor
pop
inc
xor
mov
inc
xor
mov
and
dec
xor
imul
ret
out
xor
xor
xor
xor
xor
xor
out
xor
push
xor
xor
aaa
xor
shl
xor
jo
shl
test
fild
loopne
pop
or
mov
jg
mov
addr16
fnstcw
cmps
ficom
ja
fcom
xor
int3
mov
mov
jo
jns
xchg
fadd
lea
pushf
or
(bad)
xor
and
fidivr
jp
jnp
pop
into
or
xchg
retf
mov
and
mov
pusha
(bad)
movsx
inc
jmp
(bad)
adc
stos
mov
aad
inc
(bad)
fsubr
inc
mov
call
ja
inc
fcmovnu
mov
les
stos
scas
xor
fdivr
dec
or
call
rol
jecxz
mov
or
lock
rol
cmp
mov
jo
fwait
into
jo
jl
jo
scas
inc
add
push
cmp
inc
sub
push
scas
or
dec
mov
out
jb
pushf
lods
scas
ja
sub
jp
xchg
(bad)
(bad)
lods
scas
xor
push
xchg
(bad)
adc
push
mov
inc
(bad)
es
add
call
out
cmps
(bad)
inc
out
test
cmps
sub
ret
jae
arpl
mov
ja
jo
dec
push
hlt
cmp
jo
stos
or
iret
(bad)
sbb
or
fild
sahf
xor
scas
das
scas
pop
xchg
mov
inc
mov
out
icebp
rcr
shl
sbb
or
adc
imul
cmc
shl
shl
sbb
fcom
icebp
shl
bt
or
shl
inc
icebp
das
bound
fisubr
dec
mov
shr
inc
cmp
fucomi
into
add
out
into
add
out
into
sbb
in
inc
icebp
pop
bound
and
shl
xchg
(bad)
push
imul
icebp
shl
fcomp
push
and
mul
call
inc
icebp
add
sar
call
arpl
fisub
icebp
add
icebp
rol
mov
icebp
iret
sbb
or
call
push
or
adc
neg
and
adc
shl
mul
test
out
mov
jno
xor
push
jp
pop
inc
cmc
shr
jp
(bad)
into
shl
inc
pop
bound
pop
push
pusha
inc
rcl
imul
(bad)
je
out
fld
test
in
inc
icebp
ret
bound
pop
push
ret
icebp
popa
inc
jecxz
arpl
jmp
popa
inc
jecxz
arpl
push
inc
out
add
int
ja
add
test
and
inc
push
pop
rol
shl
jp
ret
ffreep
inc
out
arpl
pop
sbb
xlat
cmp
push
push
test
push
jbe
outs
enter
push
jecxz
in
jbe
jae
jmp
shl
push
dec
clc
mov
inc
jmp
mov
and
mov
icebp
das
add
mov
push
clc
mov
inc
jmp
mov
(bad)
mov
sub
(bad)
in
rcr
scas
sub
mov
push
clc
mov
inc
jmp
mov
(bad)
mov
icebp
das
sbb
icebp
das
dec
mov
fcom
push
push
bound
xor
out
int3
ror
inc
and
inc
icebp
push
imul
(bad)
jo
out
mov
arpl
retf
jp
int3
inc
cmc
xlat
arpl
jp
scas
dec
xchg
imul
bound
xor
int3
movs
and
pushf
dec
icebp
rcl
inc
in
arpl
jne
mov
add
cs
shr
inc
jg
arpl
xor
shl
icebp
cmps
bound
clc
shl
inc
(bad)
shl
icebp
cmps
bound
clc
shl
inc
out
arpl
mov
loop
cmps
aam
icebp
shl
stc
shl
inc
icebp
(bad)
bound
push
cs
mov
icebp
cmps
push
icebp
shl
stc
shl
inc
icebp
(bad)
bound
push
cs
mov
icebp
gs
gs
dec
arpl
gs
arpl
add
cdq
retf
jne
inc
mov
arpl
rcr
inc
daa
cld
arpl
sbb
in
inc
icebp
shl
icebp
rcr
inc
dec
arpl
out
sar
xchg
out
call
cmp
shl
and
icebp
pop
fs
jp
dec
retf
out
xor
icebp
rcl
cmp
shl
and
out
add
inc
icebp
shl
inc
icebp
outs
gs
jle
rol
clc
shl
rcl
mov
jnp
out
into
add
sbb
in
xor
shr
and
adc
pop
jmp
xor
(bad)
shl
icebp
cmps
bound
not
mov
loopne
arpl
push
xchg
jmp
loop
cmps
aam
icebp
shl
hlt
shl
inc
icebp
(bad)
bound
push
cs
mov
icebp
gs
xchg
repz
mov
jle
push
lods
out
call
cmp
shl
and
arpl
pop
fs
jp
dec
retf
out
xor
icebp
rcl
cmp
shl
and
inc
icebp
pop
mov
outs
into
add
jbe
mov
arpl
shl
hlt
(bad)
adc
out
into
sbb
jbe
call
mov
xchg
arpl
add
icebp
rol
fs
jecxz
jnp
retf
sub
sbb
jae
loopne
gs
pop
jmp
cs
scas
popf
inc
out
pop
out
or
sbb
jne
add
(bad)
xlat
loop
clc
sub
sub
ss
sbb
cwde
pushfw
fcomp
or
icebp
(bad)
bound
adc
or
loope
jmp
icebp
pop
bound
icebp
pop
bound
xchg
push
bound
pop
jb
loope
jmp
icebp
xlat
bound
mov
cdq
jae
sbb
inc
mov
call
rcr
inc
icebp
ror
jmp
iret
jmp
ja
add
lock
inc
pop
bound
leave
xlat
or
add
or
jl
xchg
add
push
fsubr
test
addps
imul
sub
cmp
inc
js
ins
scas
mov
je
test
into
arpl
push
mov
xor
shl
inc
pop
bound
push
jae
pop
cmp
inc
jecxz
arpl
test
popa
inc
out
arpl
dec
retf
ret
je
sbb
icebp
ret
cmp
out
out
push
jl
stos
mov
or
mov
sub
inc
icebp
xlat
cmp
neg
push
push
jae
or
test
jle
sbb
xlat
cmp
neg
inc
or
jae
leave
aaa
je
xchg
mov
push
jp
in
mov
je
test
jns
out
rcl
jge
pop
leave
xchg
jp
fild
cmp
jl
sbb
(bad)
ins
jne
pop
jmp
enter
std
loop
jmp
retf
popa
inc
neg
xor
jae
out
arpl
(bad)
bound
ret
bound
jl
sbb
ret
ins
(bad)
out
out
inc
jle
sbb
xlat
ins
push
neg
inc
jle
jae
icebp
xlat
js
test
inc
icebp
(bad)
dec
test
sub
inc
sbb
jae
(bad)
inc
inc
icebp
mov
xor
lock
idiv
push
sbb
mov
jp
bound
loop
fld
and
sbb
adc
mov
je
cmc
shr
aaa
push
aad
inc
out
arpl
int
ror
out
inc
add
inc
icebp
sub
out
mov
ret
in
add
jbe
lds
xchg
push
jl
push
push
je
push
ds
jmp
xlat
in
add
mov
repz
mov
pop
jnp
jecxz
addr16
inc
jle
jne
clc
xlat
fs
gs
call
push
cmp
jo
jnp
and
pushf
cli
inc
ins
xlat
mov
cmp
popf
pop
jno
push
nop
dec
out
mov
jmp
imul
rol
in
hlt
gs
jl
pop
jbe
xor
mov
add
das
dec
jge
mov
daa
hlt
imul
xchg
jns
div
push
aam
test
in
dec
enter
xchg
jle
push
inc
sbb
gs
cld
mov
aam
out
inc
jl
outs
stc
mov
dec
inc
push
inc
arpl
cld
ja
int3
xlat
out
dec
mov
cs
fistp
pop
jge
outs
xor
bound
pop
inc
out
inc
je
ja
jo
jecxz
mov
push
pop
cdq
imul
jae
push
cmps
jb
icebp
shr
mul
test
push
push
jecxz
mov
pop
out
dec
out
sub
dec
sub
loop
(bad)
cs
push
mov
inc
jl
outs
xor
loope
cwde
cdq
(bad)
jno
jl
imul
inc
add
push
pop
je
loop
add
icebp
sbb
jne
mov
enter
sbb
shl
sbb
test
mov
arpl
mov
popf
ficom
sti
xor
icebp
mov
leave
rcl
cmp
mov
icebp
add
(bad)
in
pop
loope
stc
cld
xor
es
hlt
into
jns
jo
jns
or
xchg
jb
or
xor
and
mov
jmp
div
jno
jb
jns
jns
lock
jo
pushf
ja
fimul
cmp
(bad)
(bad)
stc
and
loope
push
jns
jb
mov
jnp
jp
repz
inc
add
jl
(bad)
or
int3
or
outs
into
push
cmps
jae
cdq
mov
sbb
pop
sub
cmp
mov
adc
jle
jns
stos
fnstenv
das
mov
inc
pop
inc
iret
cmps
je
rcl
xchg
jo
fdiv
jno
out
(bad)
loop
hlt
cmc
fild
sbb
jno
push
sar
xchg
fdivr
xor
pushf
retf
movs
pop
inc
(bad)
pinsrw
bound
sti
ret
scas
scas
mov
xchg
jno
hlt
cmp
jo
das
or
int3
cmps
inc
jg
jns
call
mov
or
(bad)
(bad)
iret
cmps
cmp
pop
jae
mov
xchg
daa
push
xor
cmps
pusha
cwde
jecxz
stos
mov
xchg
es
mov
push
jo
push
xchg
pop
into
(bad)
jnp
inc
out
and
xor
out
push
pop
fild
mov
inc
js
inc
addr16
or
in
and
fcomp
mov
cmp
inc
push
xchg
(bad)
stos
cs
out
push
mov
push
push
outs
into
push
daa
lea
dec
mov
sbb
dec
fyl2xp1
jbe
dec
add
lahf
ret
pop
into
fldcw
out
into
push
aad
pop
or
cld
sub
fs
call
push
outs
sbb
cs
das
retf
shr
cmps
jge
jle
leave
mov
mov
int
pop
out
aas
add
mov
pop
fldenv
sbb
push
lods
outs
fdivr
cmps
daa
outs
stos
inc
ret
add
imul
xchg
out
js
push
test
jbe
stc
or
mov
dec
xchg
aad
mov
xchg
test
popa
enter
(bad)
mov
and
loopne
loope
mov
dec
mov
push
sbb
and
jo
js
mov
in
dec
sub
mov
lds
aaa
mov
push
jne
imul
and
sub
jo
sbb
or
jno
in
loop
mov
lahf
(bad)
mov
and
loopne
loope
mov
inc
dec
mov
push
sbb
and
jo
call
xchg
(bad)
in
dec
sub
mov
lds
aaa
mov
in
cdq
imul
and
sub
jo
sbb
or
pop
iret
fst
loop
mov
lahf
(bad)
mov
and
loopne
loope
mov
es
mov
push
sbb
and
jo
lods
mov
pop
in
dec
sub
mov
lds
aaa
mov
popa
mov
imul
and
sub
jo
sbb
or
dec
out
(bad)
loop
mov
lahf
(bad)
mov
and
loopne
loope
mov
push
dec
mov
push
sbb
and
jo
ror
push
in
dec
sub
mov
lds
aaa
mov
fisub
push
jecxz
and
sub
loope
sub
or
and
loop
loop
mov
popf
(bad)
mov
and
loopne
loope
mov
pop
dec
mov
push
sbb
and
jbe
ins
mov
sbb
dec
adc
cli
fcos
mov
lds
aaa
mov
inc
arpl
inc
enter
(bad)
mov
and
loopne
shl
dec
(bad)
sbb
gs
push
jns
adc
(bad)
das
in
dec
sbb
mov
lds
pop
mov
add
imul
and
sub
jbe
sbb
or
cdq
imul
mov
(bad)
mov
and
loopne
rol
lods
lea
cmp
push
sbb
dec
push
jns
adc
vpcmov
dec
sbb
mov
lds
pop
mov
aad
mov
in
ror
and
sub
jbe
sbb
or
inc
jp
jge
mov
(bad)
mov
and
loopne
rol
dec
(bad)
sbb
gs
push
jns
adc
mov
dec
sbb
mov
lds
pop
mov
retf
sar
in
ror
and
sub
jbe
sbb
or
neg
mov
mov
aad
shr
cli
lods
imul
and
or
mov
mov
out
(bad)
mov
ja
dec
mov
ss
lea
push
sbb
jne
xor
mov
inc
enter
test
pop
shl
jae
imul
and
or
mov
enter
dec
sbb
mov
aad
mov
push
dec
lea
push
sbb
jne
xor
inc
rcr
mov
mov
aad
shl
cmp
(bad)
or
or
(bad)
mov
(bad)
and
or
adc
mov
in
dec
das
mov
mov
cmc
add
jle
or
push
sbb
jno
mov
mov
mov
aad
shl
imul
or
or
adc
mov
in
dec
das
(bad)
(bad)
mov
push
cmc
les
jle
mov
push
sbb
sbb
jo
inc
dec
scas
xchg
add
out
ret
or
jns
imul
ret
mov
mov
test
inc
mov
push
dec
lea
push
sbb
sbb
sahf
xchg
leave
mov
in
dec
and
mov
mov
jge
lods
push
ret
or
jns
imul
ret
mov
mov
test
hlt
mov
ds
lea
push
sbb
sbb
lahf
gs
mov
in
dec
and
mov
mov
xor
push
ret
or
jns
imul
ret
mov
mov
test
es
pop
dec
lea
push
sbb
sbb
lahf
repnz
dec
and
mov
mov
xor
dec
out
ret
or
jns
imul
ret
mov
mov
test
js
rcr
cmp
sbb
or
adc
sahf
mov
dec
and
mov
lock
fmulp
fist
imul
int
icebp
lods
imul
fs
or
repnz
adc
or
sub
jmp
ins
jecxz
mov
cmps
jmp
fsubp
lahf
xor
test
lea
cmps
xchg
push
es
jb
or
mov
and
jo
shl
test
fstp
jbe
jge
cmc
or
xor
and
jmp
pop
jno
jb
jns
jns
movs
daa
jo
sahf
aaa
cwde
ficom
cmp
or
sub
leave
mov
xchg
dec
(bad)
ins
lods
or
ins
and
inc
and
xchg
xor
inc
movs
pop
mov
ins
xchg
lea
or
add
inc
fcomp
xor
repnz
ror
in
sar
push
fdivr
mov
sbb
xor
stos
push
jno
jns
sbb
sub
sar
push
fdivr
lea
xor
jp
mov
jb
jo
inc
fst
xor
or
inc
(bad)
push
xchg
add
jae
xor
cmc
inc
add
fcmovne
jecxz
and
mov
sar
sub
adc
cld
xor
mov
inc
xor
xor
or
jecxz
test
mov
add
sub
scas
mov
jle
jns
push
dec
xchg
push
cld
xor
mov
test
jo
jo
cmp
xchg
test
mov
jne
mov
outs
push
cmp
inc
not
jge
cmp
add
inc
(bad)
into
(bad)
retf
es
add
push
(bad)
scas
add
xor
call
sbb
test
repz
xor
xlat
mov
sub
jl
and
jg
pop
int
in
int
popf
shl
xor
in
out
inc
jnp
fcmove
or
int3
ins
inc
and
inc
or
fcmovne
cmp
xor
int3
xor
add
or
jnp
push
(bad)
loopne
out
inc
dec
int3
sub
popf
retf
loope
add
inc
push
int3
and
dec
ins
icebp
leave
scas
xor
retf
jb
(bad)
lds
or
or
sbb
xlat
fisubr
dec
or
or
xor
and
pop
aam
int
in
rcr
jno
int3
ins
fisub
inc
inc
and
cmp
or
sbb
xor
cmp
int
movs
test
fcmovbe
or
jnp
mov
xor
push
out
cmp
int
hlt
test
fcmovu
or
int
adc
int
rcl
xchg
fiadd
add
rcr
retf
js
fcmovnbe
lahf
push
(bad)
and
pop
or
adc
rcr
sbb
xor
fisttp
lods
sub
popf
retf
jno
add
popf
popf
int3
arpl
jl
and
or
shl
(bad)
dec
movs
and
sbb
inc
and
inc
(bad)
(bad)
push
add
(bad)
cmp
and
xor
sbb
jl
fidiv
push
jne
xor
loopne
out
(bad)
fcmove
and
ror
and
sub
fisub
xor
int
sbb
pop
int
shl
push
out
cmps
xor
ror
cdq
xor
jl
jnp
call
pushf
mov
jne
and
jne
xor
out
xor
xchg
loopne
and
cmp
xor
cld
xchg
fiadd
int3
xor
jl
fcmove
sbb
and
sbb
shl
xor
jl
fxch
dec
xor
popa
dec
xor
dec
ins
shl
movs
ins
(bad)
and
cmps
dec
int
xor
and
cmp
mov
ins
xor
dec
xor
xchg
ins
fisub
(bad)
fcmove
xchg
into
dec
and
(bad)
mov
and
int3
or
jae
xor
xor
xor
ror
test
xlat
mov
xor
jl
and
retf
xor
and
int
xor
xor
es
jl
icebp
icebp
scas
xor
fisttp
xchg
sub
popf
retf
imul
mov
xor
jl
fiadd
or
(bad)
fxch
dec
xor
cld
ins
inc
and
lods
xchg
fcmovbe
and
inc
jmp
rol
ins
fsub
fsub
push
(bad)
mov
and
add
push
fcmove
and
or
and
add
mov
and
xor
pop
ror
fmul
(bad)
(bad)
int
xor
leave
(bad)
call
and
int
xor
int
int3
and
jl
jnp
(bad)
xor
in
(bad)
and
and
out
xor
push
in
(bad)
jp
and
xlat
test
xor
jl
and
sub
jl
jle
push
out
inc
mov
fcmove
sbb
fimul
inc
fld
movs
push
aad
fbstp
add
inc
cmps
add
inc
fcmovne
cmp
int
int3
and
jl
jnp
shl
jno
xlat
mov
ins
xor
dec
sub
mov
aaa
xor
out
ins
and
pushf
ins
xor
xor
imul
(bad)
and
and
xor
xor
jl
mov
ins
xor
dec
sub
or
push
int3
sub
int
int3
int3
inc
mov
inc
fcmove
clc
int3
xor
jl
ss
int3
mov
out
xor
test
(bad)
jl
(bad)
fwait
xor
xor
popa
and
push
cmp
int
loopne
int3
outs
aaa
and
imul
mov
dec
(bad)
xchg
add
es
out
inc
mov
retf
and
fcomip
cdq
test
fiadd
dec
mov
xchg
pop
fiadd
ror
iret
aad
fisubr
sbb
cmp
add
xor
sbb
push
sub
xor
clc
jns
dec
pop
or
in
ret
adc
jo
jnp
nop
frndint
xor
mov
fidiv
jo
scas
cmp
adc
jb
adc
and
leave
jae
call
sub
xchg
fadd
inc
test
xor
fnstenv
int3
jae
mov
push
das
pop
cs
mov
(bad)
push
es
xchg
lock
popa
cmc
inc
addr16
xor
stos
stos
cmp
or
mov
xor
scas
jne
fcomp
mov
xor
aas
scas
scas
or
mov
sbb
jno
pop
xor
inc
fnstcw
iret
(bad)
es
jg
push
or
mov
ret
scas
add
jp
inc
sub
int
xor
jo
jl
imul
jo
dec
push
scas
into
ja
jo
pop
or
cmp
fxch
xchg
mov
out
and
sar
test
gs
loopne
ss
stos
ror
cmps
sahf
mov
stos
xchg
mov
xchg
es
xor
fsubr
inc
scas
scas
adc
cmps
shr
out
daa
mov
xchg
scas
scas
aas
mul
push
mov
outs
das
(bad)
jecxz
sub
cs
xchg
(bad)
aam
into
(bad)
int
xchg
xchg
movs
test
or
dec
data16
mov
xor
call
(bad)
xchg
pop
cmp
cmc
pop
jp
and
cmp
fcomp
lea
pop
dec
pop
jno
cmp
lock
cmc
call
pop
hlt
fidivr
pusha
mov
inc
mov
pop
dec
xchg
add
int3
mov
xchg
sar
lds
sub
mov
mov
adc
aaa
mov
fdivr
cmc
js
cmp
dec
shl
adc
cmp
or
aas
mov
gs
pop
pop
or
cmp
push
(bad)
stc
and
jg
or
jns
xchg
push
cs
xor
jns
data16
jns
add
mov
cld
xor
xchg
add
adc
pop
js
js
jnp
jo
jo
int
js
xchg
mov
not
shr
inc
aad
mov
mov
popf
pushf
pop
pminub
fwait
bound
xchg
xchg
lea
sub
or
or
test
data16
(bad)
pop
xchg
mov
mov
cmp
dec
js
pop
aam
xor
fcom
fsubr
scas
push
pop
in
jns
jl
pop
cmp
scas
pop
jbe
jo
aas
or
mov
jns
mov
jo
sub
ja
test
inc
push
fcom
xor
cli
cs
lods
sbb
sub
mov
jae
pop
inc
jnp
test
pop
pop
jbe
mov
cmp
btr
add
js
jo
and
lods
stos
out
mov
xchg
and
outs
cmps
sar
inc
sti
fdiv
add
jp
jo
sbb
lods
scas
and
cmps
into
(bad)
jns
and
or
cmp
es
jmp
data16
pop
stc
jnp
retf
outs
hlt
cmp
fimul
mov
xchg
pop
scas
add
cli
xor
mov
outs
jo
inc
out
lods
jp
cmp
or
xor
or
cmp
or
or
or
or
or
or
or
or
in
or
or
mov
or
or
fsub
fcomp
fsub
fcomp
mov
or
repnz
loop
mov
xchg
out
repz
push
fisttp
in
pop
test
in
loopne
xor
mov
pusha
add
or
or
fsubr
fcomp
repnz
jns
in
xor
dec
push
lea
or
or
xor
or
lods
sbb
adc
pusha
and
or
or
pop
leave
xor
mov
dec
push
push
clc
and
or
mov
dec
jo
aaa
in
push
or
or
pop
repz
mov
adc
test
imul
push
retf
jns
in
xchg
sbb
sbb
aaa
and
data16
lahf
jmp
or
or
or
js
repnz
push
lahf
jmp
or
or
or
js
repnz
push
lahf
jmp
or
or
imul
mov
sbb
fwait
xchg
lods
std
or
out
push
gs
or
or
inc
adc
mov
les
or
or
push
sbb
imul
daa
icebp
or
imul
daa
dec
or
imul
daa
dec
or
repz
jne
xor
repnz
mov
in
jne
xor
repnz
mov
mov
movs
jne
xor
repnz
mov
mov
movs
xchg
hlt
xor
enter
leave
or
pusha
add
test
add
or
push
add
or
push
add
gs
or
dec
neg
into
(bad)
ficomp
mov
cld
xor
pop
mov
hlt
into
jns
data16
sti
add
retf
leave
sti
mul
dec
enterw
add
xchg
fdivr
dec
mov
mov
xor
or
jo
scas
cmp
fdivr
dec
inc
fisttp
mov
stos
lahf
jo
hlt
xor
shrd
test
xchg
shr
hlt
sahf
and
inc
fnstenv
jecxz
mov
data16
sbb
jae
sub
(bad)
mov
push
mov
mov
scas
xor
out
jb
sbb
retf
js
sub
sub
out
pcmpeqw
out
xchg
cld
xor
mov
cmps
jno
xchg
(bad)
push
es
out
test
fdiv
jo
packuswb
jns
(bad)
push
add
leave
jo
(bad)
mov
rcl
inc
lahf
and
ret
jnp
lds
and
les
pushf
xchg
or
or
loope
enter
ins
ret
js
jo
xchg
xor
scas
aaa
pop
sub
(bad)
out
mov
cmp
mov
inc
rcr
cmps
hlt
jle
jns
mov
jecxz
sub
xchg
xchg
push
xrstor
xor
xchg
mov
scas
or
cmp
xor
movs
addr16
jno
pop
daa
pop
inc
ja
fild
push
pop
push
pop
push
mov
jle
inc
test
push
inc
inc
in
pop
(bad)
mov
cmps
pop
(bad)
mov
shl
mov
cmp
xor
push
pop
ret
pop
jl
imul
or
cmps
pop
mov
mov
cmp
xor
push
stos
push
pop
cmp
xor
push
stos
push
ja
fist
dec
(bad)
mov
mov
rol
mov
inc
movs
sbb
or
jbe
sbb
movs
test
and
rcl
xor
mov
lahf
jb
mov
jae
mov
call
sub
dec
inc
mov
call
inc
test
sti
mov
push
mov
xchg
mov
mov
test
mov
pop
cmp
xor
push
mov
inc
ja
fild
pop
daa
movs
inc
pop
jl
imul
test
pop
mov
jno
test
pop
(bad)
mov
dec
pop
and
xor
push
and
xchg
mov
iret
rcr
xchg
push
lds
outs
push
xor
jns
jo
jns
fcmovu
mov
mov
jmp
and
jno
jb
jns
jns
sub
jo
pushf
push
push
fisttp
inc
xchg
xchg
xor
(bad)
pushf
shl
fiadd
xor
cmc
(bad)
jno
dec
jns
scas
jp
xor
movs
xchg
lods
mov
add
loopne
mov
jp
ret
mov
fwait
xor
cld
js
jo
sub
jo
jg
jae
popf
loop
xor
cmps
fsubr
or
cli
add
xor
jo
jg
jns
mov
sti
adc
jg
jns
hlt
fwait
fwait
lods
scas
std
jbe
jo
repz
int
ja
jo
jns
jns
add
jo
xor
stos
or
out
or
daa
sub
adc
scas
scas
test
jo
jb
add
sub
out
leave
hlt
std
sub
lods
sbb
in
xchg
jae
dec
mov
push
mov
into
(bad)
jns
mov
mov
stos
xchg
es
mov
leave
and
xor
out
iret
cmps
es
jecxz
mov
retf
mov
sub
sbb
cmp
div
jbe
lds
push
(bad)
xor
and
retf
test
imul
sbb
jns
or
mov
loopne
shl
int3
mov
scas
loop
mov
loope
mov
xor
pop
in
or
mul
nop
shl
sbb
and
sbb
hlt
neg
mov
hlt
loopne
addr16
loopne
mov
fstp
jb
cdq
rcl
popf
mov
loopne
push
in
repnz
ficomp
mov
mov
mov
sbb
dec
xchg
jg
xchg
jmp
and
jg
and
cwde
dec
or
stos
jmp
daa
jo
jb
cmp
lds
fnstcw
cmps
(bad)
push
int
punpckhwd
push
lods
sahf
sub
cmc
mov
js
jo
jmp
fld
int
loop
mov
jmp
retf
jp
jo
inc
fstp
xor
push
loop
push
jns
cmps
fdivr
jae
arpl
(bad)
jns
imul
xor
fdivr
add
xlat
cmc
pop
or
sub
fdiv
cmp
or
jns
stos
cmp
outs
and
repnz
add
pop
cs
sbb
cmps
pop
or
(bad)
push
xchg
daa
call
popf
add
enter
stos
scas
push
or
pop
mov
ds
push
cmp
lds
fst
iret
mov
add
fstp
out
mov
or
(bad)
stos
mov
in
xchg
jecxz
enter
push
ins
ret
inc
pop
mov
or
out
mov
xor
add
xor
sbb
into
(bad)
push
daa
test
mov
cmp
sti
and
push
jns
mov
jmp
cs
leave
pop
out
adc
mov
mov
cld
int3
xchg
cmps
mov
jmp
xchg
add
adc
and
push
mov
add
mul
jns
jo
pop
mov
fnstcw
jo
and
jo
add
pushf
fbld
dec
imul
pop
jge
mov
popa
xchg
push
jbe
mov
imul
data16
jne
mov
xchg
push
jns
ret
and
leave
in
sbb
push
jne
mov
push
shl
sub
fdivr
and
mov
pop
and
jb
mov
mov
pop
inc
mov
pusha
and
outs
(bad)
mov
cmc
sbb
pop
jle
mov
bound
xor
ja
mov
ins
(bad)
mov
clc
push
ds
pop
jl
ret
cs
je
mov
data16
popa
(bad)
cmps
xbegin
cmps
retf
xor
xchg
mov
outs
xchg
mov
add
inc
arpl
pop
and
loop
and
into
icebp
adc
pop
and
js
mov
push
lods
(bad)
cmp
mov
inc
arpl
pop
jnp
(bad)
jmp
frndint
and
mov
push
je
mov
js
mov
ins
lea
bound
xor
test
out
push
xor
jp
mov
push
push
dec
outs
xchg
mov
sti
and
mov
pop
jl
ret
and
mov
mov
jo
mov
bound
xor
jp
shl
es
outs
xchg
mov
popa
xchg
push
jns
mov
bound
es
imul
mov
ins
lea
pop
and
jno
mov
jb
mov
mov
push
cmp
and
jp
mov
jb
mov
sti
and
mov
pop
mov
dec
imul
push
jp
mov
imul
mov
cld
and
mov
push
jp
mov
jb
mov
push
lods
shl
adc
pop
jns
mov
mov
push
adc
pop
xchg
push
jbe
mov
bound
cmp
lods
int3
repnz
(bad)
in
sub
out
and
mov
pop
mov
pop
and
jne
mov
ins
lea
push
je
mov
imul
mov
jo
mov
push
adc
pop
jge
shl
es
ins
(bad)
mov
sti
sbb
pop
and
fyl2x
adc
push
mov
pop
and
jne
mov
jo
mov
cld
sbb
mov
pop
jge
ret
out
sub
outs
xchg
mov
sti
and
xchg
push
jbe
mov
hlt
pop
cmp
mov
push
jb
mov
(bad)
and
mov
pop
jg
(bad)
xor
xchg
mov
cli
sbb
(bad)
jmp
cwde
mov
pop
xchg
pop
jl
mov
cli
sbb
leave
in
adc
mov
pop
jle
(bad)
jmp
fild
and
mov
xchg
push
js
mov
pushf
or
cmc
pop
mov
pop
into
pop
pop
and
push
in
or
push
jne
mov
ins
nop
mov
cld
sbb
pop
and
je
mov
pop
jnp
mov
push
mov
stc
push
cmp
ret
sub
mov
mov
popa
test
pop
jg
(bad)
sub
xchg
mov
ja
mov
ins
(bad)
mov
sti
and
mov
repz
ss
jl
mov
pusha
and
outs
(bad)
jl
xchg
pop
fwait
es
sbb
jb
sbb
push
sbb
jb
sbb
jb
sbb
jo
sbb
jno
sbb
jo
sbb
jne
sbb
jne
sbb
jno
sbb
jno
sbb
jno
sbb
pop
repz
pop
repz
jno
sbb
jno
sbb
movs
je
out
inc
mov
pushf
xchg
js
lods
je
(bad)
fs
mov
mov
(bad)
fs
nop
test
out
mov
(bad)
jl
mov
push
test
push
mov
(bad)
jl
loopne
fs
(bad)
push
mov
sar
int3
call
sahf
and
fadd
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
add
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
loopne
or
fadd
sbb
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fsub
sbb
enter
call
mov
or
fmul
or
fmul
or
fadd
or
rol
sbb
fmul
or
mov
or
push
out
dec
test
pushf
xchg
js
movs
inc
jo
jl
test
pushf
mov
lods
je
(bad)
fs
or
mov
je
mov
push
je
push
(bad)
je
test
fs
test
test
push
mov
(bad)
jl
nop
out
movs
test
mov
into
fs
lock
or
ror
and
cwde
mov
cmp
fmul
add
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
lock
fcomp
adc
ror
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
add
fmul
or
fmul
or
fmul
or
fmul
sbb
fmul
or
fmul
or
fmul
or
fmul
or
fadd
sbb
fmul
add
test
or
pusha
ss
sbb
je
mov
es
dec
test
lods
xchg
js
mov
ins
mov
pushf
mov
test
fs
mov
pushf
mov
mov
je
test
test
(bad)
je
test
mov
(bad)
jl
mov
inc
dec
cwde
mov
cmp
nop
(bad)
and
mov
adc
lock
xor
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
enter
fmul
or
ror
cmp
fmul
or
fmul
or
fmul
or
fmul
or
fsub
and
fmul
or
fmul
or
fmul
or
lock
fmul
or
fmul
or
fmul
or
fadd
sbb
ror
add
rcr
or
fadd
add
sbb
and
push
je
pop
ds
push
(bad)
je
test
lods
pushf
js
mov
inc
test
lods
mov
pushf
ins
push
(bad)
fs
test
out
pushf
test
test
(bad)
jl
mov
test
idiv
div
(bad)
fs
test
mov
mov
(bad)
jl
lock
inc
movs
nop
sahf
or
cwde
(bad)
jl
loopne
push
int3
call
mov
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fadd
or
fmul
add
call
mov
enter
ror
sbb
rcr
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
ror
or
rol
or
fmul
add
ror
or
pop
inc
add
adc
sub
push
mov
ss
fs
dec
les
mov
movs
fs
(bad)
jl
mov
lods
xchg
js
mov
fs
test
(bad)
fs
pushf
xchg
push
test
push
test
(bad)
fs
mov
push
je
dec
push
mov
jl
cwde
(bad)
je
nop
into
fs
lock
call
div
into
dec
lods
loopne
dec
hlt
fadd
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
ror
in
cmps
adc
ror
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
rcr
or
fmul
or
fmul
or
fmul
or
fmul
add
ror
or
mov
outs
in
sub
push
mov
inc
aam
pusha
inc
in
push
pusha
test
ss
inc
mov
movs
xchg
dec
push
test
fs
cs
xchg
js
lods
je
(bad)
je
mov
pushf
mov
pop
(bad)
fs
test
test
(bad)
fs
test
push
pushf
nop
mul
push
je
mov
push
test
cmps
xor
enter
and
pushf
pop
(bad)
adc
mov
je
nop
(bad)
je
loopne
cmp
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fadd
or
fmul
or
fmul
or
fmul
or
fmul
add
ror
or
rcl
in
fmul
add
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
ror
or
fmul
or
fmul
or
fmul
add
fadd
or
fmul
add
pusha
data16
xor
je
pop
inc
les
(bad)
je
test
lods
xchg
js
movs
dec
pusha
div
movs
xchg
js
lods
inc
js
jl
mov
movs
push
jo
mov
mov
je
out
fs
test
out
mov
into
push
xchg
nop
(bad)
push
lods
test
jl
mov
(bad)
je
mov
fs
loopne
fs
mov
fsubr
mov
call
push
test
mov
xor
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
ror
or
fmul
or
fmul
or
fmul
or
enter
lock
fmul
or
ror
in
mov
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
mov
data16
cmp
je
mov
push
aam
cmp
je
test
mov
pusha
ss
pusha
push
test
mov
push
sbb
mov
movs
pushf
jo
lods
dec
js
je
mov
push
lods
dec
js
je
test
pushf
xchg
pop
test
push
je
mov
(bad)
inc
mov
mov
(bad)
fs
test
mov
(bad)
jl
loopne
dec
aam
(bad)
cmp
mov
dec
pushf
test
and
xor
lods
mov
mov
xchg
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
enter
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
enter
fcomp
adc
call
mov
fmul
or
fmul
or
fmul
or
fmul
or
fmul
add
fmul
or
fmul
or
fmul
or
fmul
or
fadd
or
fmul
or
fmul
or
fadd
or
fmul
or
adc
mov
ds
pusha
data16
xor
jl
mov
outs
in
xor
pushf
cmp
ss
pushf
jo
int3
dec
push
es
jo
movs
push
jo
mov
mov
je
div
push
mov
into
push
movs
nop
out
mov
(bad)
push
mov
out
pushf
xor
mov
(bad)
push
pushf
xor
mov
add
movs
loopne
push
in
enter
ror
int3
mov
(bad)
dec
ins
test
test
mov
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
rcr
or
fadd
sbb
ror
or
fadd
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
add
fmul
or
fadd
or
fmul
or
fmul
or
fmul
or
fmul
add
add
mov
pop
push
les
cmp
jl
push
push
les
scas
add
in
dec
inc
aam
adc
pop
sbb
pushf
and
ds
pusha
es
je
lods
pushf
jo
pushf
inc
js
mov
pushf
mov
mov
je
test
test
out
mov
(bad)
inc
pushf
mov
jl
mov
mov
(bad)
lods
add
mov
loopne
push
int3
call
sahf
and
fsub
adc
lock
shl
dec
movs
pop
push
jl
js
push
je
(bad)
mov
mov
fmul
or
fmul
or
rol
or
fmul
or
fmul
or
fadd
or
fmul
or
lock
fmul
add
fmul
or
rcr
or
fmul
add
fmul
jl
rcr
or
fmul
add
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
add
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
adc
jl
mov
xchg
and
adc
ss
ins
pusha
jbe
sub
pop
pushf
cld
jns
aam
adc
and
lods
sub
inc
les
int3
and
push
lods
push
push
ss
pusha
ss
inc
mov
cs
inc
dec
push
mov
movs
xchg
push
test
push
mov
(bad)
jl
test
test
(bad)
lods
mov
lods
or
mov
out
movs
nop
cmps
inc
mov
(bad)
push
lods
test
fs
test
dec
lods
call
into
inc
lods
nop
cmps
sbb
sub
pushf
dec
lods
mov
sahf
xor
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fcom
adc
ror
and
enter
ror
in
xchg
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
add
jne
xor
aam
dec
les
loopne
mov
mov
cmps
and
in
jns
int3
push
add
mov
pusha
inc
les
les
movs
pop
jo
int3
dec
pusha
ss
jo
lods
dec
js
mov
push
push
pushf
ins
push
movs
fs
lods
je
push
je
pop
push
lods
fs
test
jl
mov
je
mov
(bad)
push
lods
and
mov
idiv
(bad)
je
nop
mov
mov
(bad)
je
mov
lods
lods
js
test
inc
lods
lock
fs
test
dec
fs
(bad)
and
cwde
out
fsubr
mov
in
enter
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
ror
add
fmul
or
fcomp
adc
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
cmp
popf
or
pop
pushf
pushf
push
data16
cmp
jne
mov
mov
(bad)
ins
add
das
lods
int3
jno
aam
add
mov
popa
push
in
pop
adc
sub
ds
push
adc
and
lods
pop
jo
mov
push
push
test
lods
pushf
push
push
test
test
movs
ins
push
(bad)
je
mov
test
into
inc
aam
out
xchg
pop
(bad)
xor
loopne
push
cld
nop
(bad)
dec
movs
cwde
xchg
adc
fsub
cmp
cwde
sahf
add
sar
hlt
xor
movs
fcom
jl
loopne
xor
ror
in
sahf
and
ror
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
add
loopne
or
fmul
or
fmul
or
fmul
or
fadd
add
fmul
or
fadd
or
fmul
or
ror
in
xchg
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
add
enter
fmul
or
fmul
or
fmul
or
fmul
or
sub
mov
sub
and
lds
pop
test
cld
dec
xor
gs
das
movs
movs
jno
in
add
mov
inc
sbb
and
lods
pop
push
dec
int3
pop
push
push
pushf
fs
ds
inc
mov
push
lods
xchg
push
out
je
div
push
lods
pushf
js
test
mov
push
int3
and
cmps
cmc
sbb
jg
(bad)
stc
fbld
ins
xor
ins
or
or
push
or
or
fidivr
xchg
add
inc
jl
jle
and
aas
jmp
mov
xlat
add
sbb
out
pop
fmul
sbb
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
enter
fmul
or
fadd
or
fmul
or
fmul
or
rcr
or
fcomp
adc
ror
in
cmps
add
ror
add
fmul
or
fcomp
adc
fmul
or
fmul
or
fmul
add
fmul
or
fmul
or
fmul
or
ror
or
push
jle
jne
mul
test
test
out
jge
mov
jle
dec
and
jne
push
dec
int3
dec
add
(bad)
movs
push
mov
ins
mov
xchg
in
mov
das
popf
dec
or
or
fcom
dec
call
mov
push
sahf
out
aad
out
rcr
and
ds
mov
mov
shr
dec
dec
mov
int3
mov
icebp
inc
out
inc
sbb
jno
jg
adc
dec
mov
push
popa
leave
sub
sbb
and
cmp
inc
cs
loope
pop
add
mov
scas
mov
sub
sbb
aaa
fucomi
push
xchg
adc
ds
(bad)
cld
ror
in
xchg
mov
fmul
or
fmul
or
fmul
or
shl
in
fmul
add
fmul
or
enter
enter
fdiv
cmp
ror
add
call
mov
fmul
or
fmul
sbb
rcr
or
fmul
or
ror
or
enter
enter
fmul
or
fmul
or
fmul
or
fmul
or
test
push
jge
jo
ror
scas
push
jmp
jle
pcmpeqb
cmp
jne
cmps
and
aas
pop
pop
xor
repz
and
out
fcmovne
jb
enter
sbb
inc
and
jo
xor
sti
and
loope
sbb
pop
dec
gs
sub
xchg
cli
adc
jo
and
adc
(bad)
cmp
cmp
sbb
outs
mov
sub
jns
sbb
adc
pop
daa
mov
sbb
dec
ret
fist
jno
xor
leave
xor
xchg
xchg
daa
jno
sbb
add
and
repz
mov
adc
pop
fist
push
push
jecxz
aaa
inc
repnz
xor
cmp
mov
mov
mov
dec
dec
out
pushf
lock
xchg
and
enter
ror
in
mov
fmul
or
fadd
or
fcom
sbb
enter
fcomp
add
enter
fmul
add
fmul
or
fmul
or
fmul
or
fmul
or
rcl
in
mov
fmul
or
fmul
add
fmul
or
dec
out
push
fwait
add
outs
inc
call
mov
adc
imul
repz
and
daa
pop
ja
(bad)
jnp
jne
dec
and
pop
xchg
jp
arpl
jb
nop
and
test
(bad)
js
sbb
repz
jb
stc
and
fwait
loop
adc
xchg
retf
sbb
mov
repz
xor
xor
jno
mov
(bad)
xor
pop
jno
dec
daa
adc
sbb
jno
adc
jno
sbb
jno
sbb
jno
sbb
jno
sbb
jno
sbb
jno
sbb
jno
sbb
jno
sbb
jno
sbb
jno
sbb
jno
sbb
jno
adc
jno
sbb
rcr
or
inc
sti
mov
pop
mov
dec
(bad)
popa
sti
sbb
or
and
mov
addr16
imul
or
jnp
gs
imul
push
push
adc
lds
and
xor
je
out
cld
ror
in
sahf
or
ror
add
rcr
or
fcomp
sbb
enter
fcomp
adc
enter
fadd
sbb
fmul
or
fmul
or
fmul
or
ror
or
fmul
or
fmul
or
ror
or
add
add
fadd
int3
popf
cmp
dec
cs
out
xchg
rcl
sti
sub
and
(bad)
sub
repz
xor
mov
jb
and
stc
sbb
imul
push
jae
cli
es
or
iret
nop
sub
(bad)
jo
jp
adc
addr16
div
cmp
mov
sbb
stos
pop
daa
jno
sbb
inc
rcr
inc
jno
pop
daa
jno
sbb
jns
sbb
jno
or
jno
sbb
jno
sbb
jno
or
jno
sbb
inc
rcr
aaa
jno
or
jno
sbb
sub
xor
jno
sbb
popa
jecxz
psllw
pop
xor
or
jnp
jg
repz
daa
xor
sbb
xchg
xor
jnp
or
dec
sub
pop
jns
or
or
cmp
push
mov
push
fmul
push
xor
jb
jae
rcr
std
xchg
movs
in
adc
xchg
mov
mov
in
into
xor
xor
aam
cmps
inc
in
mov
fmul
or
fmul
or
fmul
or
fmul
or
ror
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
cmp
or
mov
pop
test
jns
fadd
mov
push
or
xchg
xchg
out
aas
adc
repz
or
mul
sbb
push
mov
fwait
push
jo
mov
mov
fwait
pop
sahf
jno
jae
adc
shl
repz
daa
or
sbb
jecxz
das
jno
xor
or
jg
sti
mov
aaa
mov
mov
sbb
(bad)
pop
div
retf
inc
daa
inc
xchg
dec
scas
xor
addr16
sbb
or
jae
inc
jecxz
inc
xchg
pop
sar
retf
call
repnz
cmps
pop
sub
xchg
push
cmps
inc
mov
mov
sbb
mov
and
jmp
sub
lock
test
cmp
jecxz
xchg
in
idiv
push
jge
out
inc
lods
mov
ret
cld
jbe
pop
sbb
mov
mov
(bad)
cli
add
imul
pop
std
cmps
jb
es
icebp
mov
lods
adc
jns
std
xchg
mov
fistp
test
fild
xor
gs
mov
pop
jge
sub
sub
sbb
cdq
inc
in
imul
and
push
mov
inc
les
(bad)
push
dec
cwde
push
movs
fsubr
mov
je
(bad)
jge
cwde
ja
mov
push
int3
lods
adc
push
pop
mov
ins
in
bound
ss
ret
retf
rcl
jno
pop
daa
fldenv
and
ret
jns
bound
dec
ficomp
div
imul
sbb
jmp
jno
imul
sub
pop
enter
jno
jae
sub
sbb
or
addr16
mov
jg
sub
pop
test
mov
xlat
loope
xchg
addr16
adc
test
jnp
div
mov
cmps
test
xor
jnp
inc
adc
retf
repnz
fimul
xchg
sbb
cmp
mov
push
mov
cwde
ret
jmp
pop
(bad)
call
cdq
cli
out
stos
cmp
lds
stc
push
jnp
push
sbb
sti
pop
add
mov
lock
int3
sahf
scas
mov
das
(bad)
cld
cmp
and
aas
cdq
repnz
jle
ins
adc
inc
sub
or
mov
xchg
fisttp
pop
xchg
ss
xlat
jge
mov
ins
aad
mov
std
jmp
jle
adc
clc
ja
cld
xor
sub
inc
in
adc
mov
pop
add
adc
dec
mov
sbb
sub
ins
mov
pop
popf
lea
jne
adc
jge
push
pop
fst
fldenv
mov
les
loopne
(bad)
mov
push
les
jns
(bad)
adc
loope
sbb
ret
arpl
jno
sbb
mov
and
aaa
leave
push
or
retf
cmp
jno
sbb
dec
jecxz
psllw
daa
jno
sbb
push
repz
repz
daa
jno
sbb
popa
shl
pop
jno
sbb
jns
sbb
jns
xor
jno
sbb
jno
sbb
dec
repz
push
repz
addr16
and
lahf
xor
sub
stc
stos
pop
daa
xor
retf
rcl
out
arpl
sbb
mov
rol
cdq
out
and
push
movs
fsubr
neg
mov
inc
call
mov
stos
lds
adc
and
pusha
jmp
mov
sub
shr
neg
hlt
push
sub
call
lock
lods
mov
jnp
fist
ror
fwait
dec
(bad)
fbld
pop
cs
cmc
retf
inc
mov
in
cwde
cmps
std
add
push
in
shl
fcomp
jl
js
inc
pop
push
dec
lods
push
and
std
popf
mov
xor
mov
test
mov
push
shl
pop
pusha
mov
fs
mov
fmul
or
fmul
or
fmul
or
fadd
or
movs
icebp
inc
(bad)
std
adc
paddusb
dec
int3
cmp
loope
mov
mov
dec
jae
jo
shr
stc
shl
add
ret
xchg
xchg
ret
dec
add
jno
adc
jno
or
dec
stos
xor
jno
sbb
xor
mov
dec
mov
retf
retf
addr16
rcr
mov
stos
or
xor
and
pop
mov
mulps
xor
xor
mov
fldcw
pop
dec
cmp
repz
jmp
push
iret
sub
stc
cmps
lock
mov
mov
(bad)
call
xor
push
cmp
mov
push
cmp
push
jae
mov
and
jns
outs
inc
retf
pusha
cmp
pop
rol
push
call
mov
lock
lea
jno
sti
dec
dec
mov
mov
fmul
or
pop
push
cld
fsub
mov
dec
lods
dec
mov
mov
push
cdq
fsub
in
int3
xchg
xchg
and
mov
fmul
or
ror
or
fmul
or
fadd
or
cwde
xchg
rol
mov
lods
sub
ss
cld
xor
cld
pop
pop
push
aam
mov
je
ror
or
call
out
mov
mov
lods
or
(bad)
movs
dec
cmp
mov
test
out
aas
xor
fnstsw
ins
fimul
f2xm1
and
sar
inc
push
xor
cli
out
fpatan
jmp
xchg
arpl
cs
leave
cmp
lahf
adc
mov
dec
ret
shl
inc
adc
sti
mov
data16
rcl
cmp
push
inc
or
mov
push
call
inc
mov
mov
stc
xchg
jno
mov
sub
inc
rol
xchg
adc
popf
adc
inc
enter
jae
inc
ins
and
sub
adc
pop
adc
jmp
arpl
mov
rcl
or
arpl
mov
xchg
enter
push
std
retf
sub
mov
inc
cmc
mov
adc
or
shl
sub
jns
(bad)
xor
in
mov
fmul
or
fmul
or
fdivr
adc
mov
dec
pushf
mov
add
or
push
push
pushf
inc
mov
mov
fsubr
xchg
fmul
add
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
enter
fcom
and
sub
test
ficom
mov
push
aam
cmp
push
das
cwde
xchg
dec
mov
pop
jbe
mov
lea
cli
mov
mov
retf
sti
mov
out
mov
repz
mov
and
call
rol
push
jo
sar
inc
rcr
(bad)
shr
mov
(bad)
sub
adc
sbb
or
sub
jbe
push
mov
loopne
arpl
jmp
jno
mov
mov
adc
add
jmp
dec
jae
add
mov
iret
cmps
xchg
loopne
cmp
popa
mov
das
shl
mov
retf
sub
sar
repnz
arpl
xchg
sub
fadd
or
xor
jno
mov
lahf
pop
add
sbb
fbstp
fild
and
jno
mov
inc
retf
jecxz
jecxz
jmp
cmp
xor
call
inc
mov
enter
inc
rol
add
fmul
or
fmul
or
fmul
or
enter
fmul
or
fmul
or
fmul
or
fcomp
sbb
fmul
or
enter
fmul
sbb
lock
xor
mov
(bad)
fs
test
pushf
mov
push
(bad)
fs
loopne
mov
loopne
fs
fmul
or
fmul
or
adc
add
movs
icebp
push
les
cwde
iret
inc
mov
ins
in
movs
push
jbe
xlat
mov
sti
jp
or
sbb
enter
mov
mov
add
jnp
mov
jae
dec
mov
push
jmp
jb
cmps
call
repz
scas
or
lahf
dec
retf
retf
inc
mov
lahf
(bad)
arpl
test
leave
retf
scas
xor
add
pop
xbegin
jecxz
inc
xor
movhps
test
jo
iret
mov
enter
xor
iret
fwait
pop
fwait
popf
std
repz
and
jae
retf
jecxz
jns
ja
mov
add
add
popa
mov
jno
pop
adc
cmp
adc
add
repz
dec
inc
das
mov
pop
and
adc
xchg
dec
adc
sub
lods
dec
dec
test
fimul
or
fmul
or
fmul
add
fmul
or
fadd
sbb
enter
fmul
add
fmul
or
fadd
or
fmul
or
ror
sbb
lock
lods
xor
xchg
pop
test
pushf
adc
xchg
mov
push
mov
adc
loopne
fld
mov
xchg
push
aam
add
pop
pop
sub
mov
cld
mov
jbe
(bad)
in
cmp
rol
push
sahf
fadd
xchg
pop
cdq
jne
mov
pop
call
rol
adc
retf
mov
sub
retf
sbb
repz
sbb
and
cmc
and
mov
adc
inc
cmp
js
or
sti
popa
in
popa
shl
mov
and
push
lahf
fsub
bound
adc
mov
or
(bad)
adc
xor
pop
sbb
outs
mov
jecxz
pop
cmp
mov
xor
lods
mov
test
lahf
sub
inc
mov
sbb
(bad)
mov
mov
mov
xchg
(bad)
aad
rcr
inc
sbb
xor
sbb
cmp
or
jg
xchg
pop
sbb
sbb
call
test
xor
(bad)
in
mov
mov
fmul
or
fcomp
sbb
ror
or
enter
ror
in
xchg
sbb
enter
fmul
or
fmul
or
fmul
or
fmul
or
fmul
adc
fmul
or
fdiv
inc
push
adc
je
add
jge
icebp
aam
sahf
cmp
sbb
lea
mov
addr16
inc
les
and
mov
inc
aam
jnp
pop
pop
push
mov
scas
sub
aaa
sbb
movs
push
aas
xchg
nop
pop
(bad)
jne
stos
xchg
jb
fbld
daa
sbb
add
repz
and
jg
(bad)
in
cmp
jb
into
and
fimul
cmps
and
imul
mov
jbe
addr16
jae
xor
sahf
(bad)
push
mov
stc
mov
mov
out
lds
test
in
call
(bad)
int3
stos
lock
std
out
mov
retf
sub
sbb
xchg
repz
add
inc
test
js
cs
stc
inc
mov
ja
not
popa
adc
inc
mov
xor
imul
pop
jle
sbb
in
jnp
pop
cdq
adc
cpuid
aaa
dec
in
in
fdivr
jne
mov
movntq
out
mov
fmul
or
fmul
or
fmul
or
fmul
add
ror
in
xchg
add
enter
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
cwde
(bad)
cmp
add
inc
aam
xchg
in
cmp
mov
inc
les
(bad)
ins
daa
mov
ja
mov
xchg
pop
ja
hlt
sbb
sar
ja
mov
test
clc
jge
mov
hlt
dec
in
sbb
movs
out
leave
adc
lods
repnz
loope
in
mov
pop
(bad)
and
repz
and
fisub
dec
and
jp
jne
push
mov
sahf
inc
push
pushf
clc
imul
ret
mov
push
(bad)
sbb
aam
dec
mov
scas
and
xchg
sbb
jne
and
cmps
mov
arpl
dec
mov
int3
dec
add
jmp
scas
add
in
adc
lea
out
loop
add
icebp
(bad)
das
xchg
pop
mov
adc
repnz
jo
pop
sbb
add
push
ret
dec
xor
shl
and
inc
push
xlat
inc
out
retf
sub
call
neg
add
fnstenv
inc
cmp
fmul
or
fmul
or
fmul
or
fcomp
sbb
ror
in
sahf
sbb
enter
fmul
add
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
sbb
pop
ss
adc
out
movs
(bad)
(bad)
mov
test
not
out
ins
daa
mov
inc
aam
imul
scas
and
sub
and
and
xchg
lock
fdivr
push
aad
loopne
test
mov
aas
dec
sub
sbb
mov
mov
sub
pop
push
jbe
jbe
(bad)
sahf
adc
add
xor
xchg
cmc
ins
and
or
adc
lds
int
lods
inc
mov
adc
mov
mov
test
test
sub
fild
jne
scas
and
jbe
push
ret
mul
push
pop
iret
sub
sti
push
inc
repz
jl
imul
push
inc
sbb
daa
mov
fidivr
aam
jmp
jp
adc
xchg
jmp
mov
fild
sbb
fbstp
jmp
pop
xchg
js
xchg
mov
in
mov
fmul
or
fmul
add
ror
or
fadd
or
fmul
add
ror
or
rcr
or
fmul
or
ror
add
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
loopne
or
mov
mov
lds
mov
dec
int3
and
mov
push
aam
arpl
gs
test
jo
and
dec
adc
mov
sbb
shl
sbb
hlt
test
stos
scas
cmc
scas
and
scas
in
mov
push
sbb
dec
movs
jmp
xor
in
jne
das
in
jno
or
into
adc
addr16
push
jge
mov
xchg
outs
(bad)
into
repnz
movs
sub
aam
mov
int3
lea
dec
dec
clc
xlat
push
adc
lods
mov
call
jle
mov
dec
xor
ins
leave
jmp
sbb
xor
cmp
inc
adc
mov
hlt
dec
fidiv
rcr
xchg
ss
das
das
mov
mov
xchg
push
fisttp
les
jb
idiv
xchg
mov
xchg
dec
xor
push
mov
out
imul
add
ins
adc
in
mov
fmul
or
rcr
or
fmul
add
ror
or
fadd
or
fmul
add
ror
or
fmul
or
fmul
add
ror
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
movs
inc
cmp
pop
daa
mov
scas
mov
dec
mov
jnp
ins
out
jno
push
sbb
ins
out
and
mov
mov
je
add
push
call
mov
pop
aad
xchg
(bad)
or
les
int
bnd
lods
dec
jbe
mov
std
loop
mov
sub
adc
ds
movs
push
mov
jl
sahf
adc
cmps
in
call
ds
xchg
push
mov
push
mov
jl
push
aam
add
jne
mov
jl
mov
les
lea
ret
xor
ds
outs
and
cmps
lods
fs
jl
call
mov
cld
cmp
mov
dec
inc
mov
mov
xchg
in
mov
gs
pop
pop
inc
test
mov
mov
repz
jecxz
(bad)
(bad)
dec
fidiv
push
cmp
addr16
fmul
shl
and
pop
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fcom
and
fmul
or
fmul
or
fadd
sbb
fmul
or
fadd
or
fmul
or
fmul
or
fadd
or
fmul
or
movs
jno
mov
push
mov
mov
sub
and
test
mov
sbb
mov
fwait
es
mov
out
call
push
rol
mov
mov
pushf
jmp
das
outs
mov
stos
adc
mov
fistp
bound
push
dec
ss
jbe
cli
cld
lods
sub
(bad)
xchg
es
sar
outs
std
add
push
mov
jle
shr
push
xchg
add
div
inc
in
cmp
adc
mov
pop
mov
into
push
cmp
movs
fadd
ds
mov
cmp
call
(bad)
fs
sahf
adc
rcr
or
fdivr
xor
mov
outs
lods
in
mov
add
in
fwait
out
out
div
jmp
jne
xchg
and
fst
(bad)
adc
xor
dec
add
enter
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fcomp
adc
ror
in
xchg
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
sbb
or
mov
arpl
ins
daa
mov
inc
mov
das
pop
inc
mov
sbb
movs
cmps
ror
inc
cld
aad
mov
ja
mov
pushf
movs
arpl
dec
aam
cmp
cmp
mov
retf
jmp
in
dec
pop
jne
or
pop
push
icebp
cld
into
xor
stos
outs
fst
xor
ins
(bad)
dec
xchg
inc
ror
std
call
push
loope
dec
int
sbb
push
xchg
jle
ins
xchg
lds
cld
popf
ins
push
xchg
jbe
xor
adc
cmp
or
jb
push
cmps
adc
fisubr
jl
adc
and
mov
or
ss
mov
in
pushf
mov
(bad)
mov
mov
fadd
or
fdivr
xor
loopne
jge
cmp
outs
mul
xor
jb
cmp
test
mov
js
in
xchg
dec
idiv
mov
mov
mov
fmul
or
fmul
or
fmul
add
enter
ror
in
mov
fmul
or
fmul
or
fadd
sbb
fmul
or
fmul
or
fmul
or
enter
fmul
add
xchg
jmp
out
pop
mov
dec
mov
sbb
jge
loopne
call
mov
push
std
lahf
ror
(bad)
mov
out
push
push
mov
xchg
mov
xor
dec
daa
mov
xor
xor
in
rcr
repnz
fstp
or
mov
jb
push
outs
fld
sahf
dec
sub
dec
std
mov
aad
xor
jge
jb
cs
xchg
fld
inc
xor
jge
test
loope
mov
repnz
xchg
iret
push
push
stc
movs
mov
call
xchg
shr
push
popf
sub
inc
stc
or
int
pop
xchg
out
sub
jle
adc
push
fiadd
push
xor
mov
mov
jno
and
cmp
xor
pusha
(bad)
pushf
pushf
call
mov
fmul
or
inc
std
and
jae
das
and
jbe
lods
pop
outs
scas
sub
out
push
or
movs
in
mov
fmul
or
fmul
or
fadd
or
fadd
sbb
ror
in
mov
fmul
or
fmul
or
fmul
add
fmul
or
fadd
or
fmul
or
ror
or
sbb
or
jl
push
in
gs
xchg
cmp
nop
je
inc
aam
sbb
jge
mov
adc
into
sub
mov
arpl
push
pop
sub
test
int3
dec
sbb
push
pop
mov
dec
les
daa
xor
jl
int
ins
cli
aas
fst
or
xchg
adc
mov
push
fidiv
push
xor
mov
fsub
or
stos
pop
in
xor
xchg
into
stos
daa
add
jne
pop
sub
outs
xor
test
or
add
jmp
cmc
call
fidivr
dec
adc
call
fstp
movs
sahf
adc
dec
outs
(bad)
sahf
adc
dec
ss
aam
lods
call
xchg
jns
fisttp
mov
movs
jns
popf
push
jno
ins
test
add
imul
pop
ficom
and
les
data16
xchg
push
push
in
mov
fmul
or
fmul
or
enter
fadd
sbb
ror
or
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
ror
or
fmul
or
fmul
add
je
push
aam
add
popf
cmp
mov
fstp
jge
test
and
(bad)
jge
test
adc
(bad)
jge
test
call
push
jne
test
das
pushf
sub
std
sti
aas
ins
loopne
jge
ins
sub
(bad)
adc
xchg
or
mov
mov
iret
es
aam
lods
adc
sub
ins
or
sub
popf
push
popa
jbe
mov
stos
inc
(bad)
pop
sbb
or
mov
lds
fld
lea
addr16
xor
test
int3
fsubrp
retf
mov
rcl
or
mov
push
cmp
mov
xchg
dec
outs
xor
mov
paddb
dec
int3
ins
add
mov
sbb
icebp
(bad)
movs
call
adc
es
mov
movs
push
sub
(bad)
push
mov
aaa
adc
pop
push
cmp
push
inc
in
fmul
or
fmul
or
fadd
or
fmul
add
enter
fmul
or
fmul
or
fmul
or
fmul
add
ror
or
fmul
or
fmul
or
fmul
or
adc
add
ins
push
dec
les
push
js
test
test
push
xlat
pusha
pushf
mov
les
mov
inc
(bad)
int
div
mov
inc
int3
cmc
add
jne
mov
push
aam
rcl
ins
mulps
jge
inc
vmovss
adc
xchg
adc
call
or
adc
sub
ins
lds
(bad)
mov
(bad)
ss
adc
dec
in
in
movs
jge
cmps
xchg
aad
pop
and
xchg
push
jg
outs
sub
hlt
std
test
push
aad
mov
hlt
in
mov
outs
fst
scas
jne
jns
mov
std
fcomp
push
dec
sub
xchg
sbb
(bad)
push
xchg
into
push
neg
adc
push
out
cmp
out
add
fstp
popf
cdq
(bad)
pushf
sbb
out
or
jmp
ss
xor
movs
in
pop
data16
jo
in
aam
mov
fmul
or
fmul
or
ror
or
fadd
or
fmul
add
fmul
or
fadd
or
fmul
or
ror
or
fadd
or
fmul
or
ror
or
pusha
test
pop
xor
mov
xor
mov
test
pop
xchg
xchg
xor
test
and
out
pop
mov
out
leave
xor
test
pop
xchg
cmp
gs
ins
inc
xchg
pop
scas
xor
repnz
vmovss
adc
into
adc
call
add
adc
or
xor
loop
in
jns
lds
dec
sub
adc
push
xor
sbb
and
cmc
dec
(bad)
out
cmps
test
out
aad
push
push
lds
adc
movs
mov
scas
movs
dec
dec
test
rcl
pushf
aam
outs
cmp
stc
lods
(bad)
add
loop
or
pushf
mov
inc
fdiv
mov
cmp
dec
mov
dec
dec
xchg
xchg
mov
into
gs
xor
test
dec
fs
mov
push
sbb
push
jbe
popf
cmp
mov
mov
fmul
or
fmul
or
fmul
or
ror
or
rcr
or
fmul
or
fmul
or
fadd
or
fmul
or
ror
or
enter
ror
or
sbb
sbb
je
xor
push
out
pushf
xchg
xor
mov
inc
mov
xor
mov
and
out
push
mov
pop
xchg
and
sbb
test
lock
sub
and
leave
les
jno
and
into
adc
(bad)
or
mov
mov
pop
xchg
add
call
add
shl
fnsave
rcl
into
xor
int3
stc
out
dec
mov
xchg
cmc
mov
xchg
in
pop
aad
clc
xchg
jne
mov
ss
cmp
pop
push
mov
sub
sub
xchg
in
adc
je
loopne
jge
or
or
add
mov
sub
inc
shl
and
out
xor
and
test
mov
jl
adc
test
popa
push
jl
jo
std
push
call
bsf
into
in
fmul
or
fmul
or
fmul
or
fmul
or
enter
enter
fmul
add
fmul
or
fadd
or
fmul
or
ror
adc
fadd
or
fadd
sbb
je
xor
mov
push
test
out
push
ins
xor
test
mov
pushf
jmp
div
test
sub
push
test
xchg
cmp
(bad)
gs
test
out
xchg
xor
jge
icebp
je
cmp
jmp
or
mov
out
leave
and
or
ret
lds
aad
stc
je
xchg
jmp
iret
push
jne
pop
and
mov
pop
std
pop
pusha
out
push
test
mov
add
adc
add
ins
mov
jle
aam
xchg
aad
loope
fs
cwde
mov
xor
mov
xchg
int
add
int
cdq
das
xchg
in
test
mov
mov
sub
xchg
mov
loopne
inc
pop
shl
xchg
test
xchg
out
mov
idiv
js
mov
or
cs
sub
xchg
sub
es
lds
and
in
shl
lods
shl
in
mov
fmul
or
fmul
or
ror
or
enter
lock
fmul
add
fmul
or
fmul
or
fmul
add
enter
fadd
sbb
enter
fadd
sbb
je
dec
int3
lods
fs
test
dec
xlat
inc
ins
or
and
push
pushf
stc
xor
lds
and
dec
int3
sbb
mov
dec
int3
cmp
mov
fist
push
fild
mov
(bad)
aaa
into
or
or
in
mov
out
aad
add
pop
jge
outs
pop
xchg
xchg
inc
sub
pushfw
test
daa
pop
push
rol
test
sbb
es
shr
gs
jmp
pop
mov
gs
adc
lea
xchg
je
ss
mov
xchg
aam
call
xor
rol
cmp
add
sbb
adc
sbb
pop
cmps
adc
and
fsubr
cs
dec
data16
test
in
movs
mov
cmc
mov
push
cs
in
imul
lods
pushf
fcomp
or
fmul
or
fmul
or
rcr
or
fmul
add
lock
fmul
or
ror
add
fmul
or
fmul
or
fmul
or
fmul
or
fmul
or
je
dec
int3
lods
adc
lods
sub
xor
int3
lds
test
push
lahf
sub
(bad)
jge
test
dec
(bad)
gs
test
fistp
out
pop
mov
iret
xchg
popa
dec
int3
push
add
gs
mov
(bad)
daa
into
add
loop
std
fimul
mul
std
ret
(bad)
out
push
xchg
std
or
cwde
xlat
inc
pop
sbb
jge
cmp
fstp
mov
das
sbb
push
cmp
popf
sar
and
fcomp
or
js
in
sub
(bad)
stc
mov
mov
xchg
mov
or
push
mov
fs
test
xor
pop
sbb
push
outs
popf
push
call
xchg
test
xchg
mul
push
add
mov
push
pop
in
out
fbld
movs
xor
dec
jl
add
add
lods
cmp
jbe
dec
clc
xchg
std
fsub
push
mov
dec
jle
cld
loopne
cld
in
mov
fadd
or
fadd
sbb
ror
in
xchg
enter
fmul
or
ror
or
fmul
or
fadd
sbb
ror
or
fadd
or
fmul
add
je
dec
int3
cmc
sbb
test
addr16
sub
or
mov
dec
mov
sbb
jne
test
mov
pop
sbb
jge
mov
inc
les
idiv
mov
inc
les
idiv
dec
cmp
or
jmp
add
jmp
cmp
jmp
fsubr
outs
mov
mov
jns
movs
lods
js
adc
enter
test
xor
inc
cmp
popf
adc
and
fsubr
or
dec
jle
inc
rol
jl
fcom
add
std
shl
sbb
adc
inc
cld
or
mov
sub
es
mov
pop
xor
int
scas
add
cmc
repnz
or
or
ins
test
fs
jbe
dec
add
sub
aad
xchg
rol
pop
push
push
aam
xor
sbb
lods
lds
mov
add
int3
fmul
or
ror
or
enter
enter
fadd
sbb
ror
or
fadd
or
fmul
add
fmul
or
fadd
or
fmul
or
fmul
or
adc
or
ins
sub
or
push
xlat
ins
cmp
and
test
mov
imul
scas
xchg
jns
int3
inc
arpl
gs
test
xchg
mov
(bad)
gs
mov
ja
mov
mul
pop
cmp
in
movs
jge
jmp
cmp
jmp
add
jmp
mov
inc
movs
call
push
add
test
dec
aam
out
in
dec
mov
xchg
dec
xor
ins
mov
mov
dec
jbe
ins
xor
push
push
push
and
lock
jne
push
cs
add
push
in
or
xchg
push
pmuludq
inc
aam
xor
sbb
movs
sbb
out
fisttp
jg
int3
cdq
xchg
in
test
int3
jne
adc
cmp
jo
mov
jne
mov
scas
adc
fcomp
cmps
cmp
cld
and
movs
or
jle
inc
sub
cmp
into
mov
mov
fcomp
adc
ror
in
xchg
ror
or
rcr
or
fmul
add
enter
fmul
add
ror
or
fmul
or
fmul
or
xchg
sbb
push
sbb
gs
test
mov
popf
arpl
gs
mov
ja
test
(bad)
ins
pop
mov
xor
gs
mov
xor
push
pop
mov
cmp
push
pop
mov
mov
fst
or
cmps
cmp
jmp
cmp
jmp
test
in
sbb
cmp
int
ss
cwde
mov
or
mov
adc
sub
loope
and
enter
add
sbb
xchg
std
cmp
inc
dec
xchg
data16
js
in
pushf
xor
pop
xor
int
or
mov
dec
data16
inc
xor
ins
pop
ss
sbb
jno
adc
adc
dec
pop
lods
adc
loope
xchg
cld
cwde
mov
dec
mov
xor
sbb
fdivr
push
jl
sbb
gs
dec
push
les
out
sub
mov
les
shr
adc
enter
fcomp
adc
ror
in
xchg
adc
ror
or
fadd
or
fmul
add
ror
in
sahf
sbb
ror
or
fadd
or
fmul
add
xchg
jno
les
out
daa
mov
dec
mov
arpl
jge
mov
pop
out
push
mov
cmp
ins
pop
mov
dec
int3
lods
sbb
ins
daa
mov
xor
ins
pop
mov
mov
(bad)
or
mov
popa
aam
sub
or
sahf
xor
mov
pop
call
out
in
adc
push
(bad)
adc
push
in
loopne
pushf
in
data16
mov
(bad)
adc
jge
pop
adc
call
xchg
push
cmp
dec
xchg
cmp
ins
mov
inc
in
mov
pushf
mov
cmp
lock
fst
push
xchg
aam
push
mov
push
jl
js
in
push
clc
scas
in
add
push
jle
int
daa
add
add
cmps
in
cwde
cmps
sbb
mov
vmptrld
xlat
out
mov
(bad)
jge
test
push
xchg
sub
xor
sbb
mov
dec
mov
popa
mov
push
lock
gs
inc
loopne
pushf
in
mov
fmul
or
fmul
add
lock
rcr
adc
ror
or
rol
or
fmul
add
ror
or
fmul
or
fmul
add
ins
jns
aam
add
test
mov
ins
in
xor
dec
aaa
iret
ins
jns
in
pop
add
popf
pop
dec
aas
mov
inc
push
aam
add
test
push
imul
in
popf
cmp
test
push
test
das
test
jg
test
pop
in
(bad)
or
mov
popa
in
xor
into
adc
into
xor
cli
pop
in
jne
scas
aad
xor
test
inc
inc
mov
and
push
int3
hlt
loopne
je
fdivr
test
pop
ins
(bad)
adc
jne
cvttps2pi
(bad)
aam
lock
push
and
jns
cmc
popf
add
pushf
test
xor
test
je
fmul
and
loopne
inc
lds
(bad)
shld
in
loopne
aam
push
cs
js
test
imul
mov
(bad)
scas
sub
sar
sbb
retf
out
jp
lea
mov
push
les
(bad)
jne
test
jbe
xchg
ins
aam
cmp
jne
mov
ins
in
add
jne
mov
das
(bad)
cld
push
inc
hlt
pushf
push
cmps
inc
aam
xchg
dec
in
mov
fmul
add
lock
enter
lock
sbb
fadd
sbb
fmul
or
fadd
or
fadd
sbb
fmul
or
cmp
add
je
gs
add
inc
jg
je
gs
cmp
popf
cmovs
xlat
je
gs
cmc
cmp
xchg
cmovo
jl
push
in
cmp
test
dec
dec
iret
je
ins
in
pop
add
popf
pop
push
daa
cmps
je
ins
in
and
push
aaa
mov
popa
add
sub
add
mov
into
or
fidivr
adc
gs
dec
pop
hlt
cld
rcr
std
adc
push
push
mov
lock
jle
test
inc
push
movs
or
adc
ror
in
mov
or
jns
xor
mov
call
mov
test
inc
int
inc
daa
lds
mul
loopne
jl
jo
push
je
mul
add
test
sub
aam
fmul
push
call
adc
ins
pop
dec
pop
scas
inc
imul
aas
dec
out
(bad)
ins
loope
aam
add
test
push
inc
push
je
ins
in
xchg
sbb
popf
push
loopne
or
mov
into
dec
cmp
mov
(bad)
lds
(bad)
aam
ror
hlt
lock
enter
enter
lock
or
fadd
sbb
fmul
or
fmul
or
fadd
sbb
ror
or
sub
or
dec
cmp
or
push
ins
xor
mov
dec
mov
cld
xchg
xor
lods
adc
pusha
push
mov
movs
or
push
(bad)
xchg
adc
and
cld
mov
es
push
and
add
cmps
cmp
cmp
mov
push
(bad)
add
out
cmp
push
jle
or
or
in
push
lock
inc
jo
dec
sub
test
lock
jl
fdivr
mov
add
add
ror
in
mov
test
and
pop
jle
lea
push
add
test
cmp
fcom
add
fsub
mov
daa
push
lds
mov
mov
(bad)
dec
cld
cwde
mov
inc
dec
cwde
movs
fcomp
pushf
inc
js
dec
mov
xchg
fld
fcom
cmp
inc
and
cmp
lods
vmread
dec
cmp
add
push
jp
aad
lds
jo
pop
dec
add
xor
mov
cmp
std
jp
pop
inc
and
movs
aam
inc
movs
jne
(bad)
gs
loopne
gs
neg
jo
mov
test
xor
enter
lock
rcr
and
enter
fadd
add
enter
fcomp
and
call
mov
sar
add
xor
and
mov
xor
sub
lds
adc
sub
jae
adc
adc
sub
jp
cmp
push
(bad)
in
xchg
sub
lods
sbb
das
mov
inc
and
mov
sub
jmp
in
fiadd
dec
into
or
dec
cmps
push
fild
aaa
push
or
stos
push
mov
in
rcr
les
jle
and
(bad)
fs
inc
in
sahf
fs
data16
cdq
push
dec
ficom
lahf
push
fdivr
mov
in
mov
pop
dec
dec
mov
adc
pushf
test
xor
fmul
or
lock
sbb
cmp
mov
jne
ss
cwde
mov
fs
call
push
jl
pusha
(bad)
fs
lock
adc
fimul
(bad)
fcmovu
pop
inc
mov
ds
sub
(bad)
cld
lds
mov
xor
jp
jne
inc
lds
add
cmp
jb
int
outs
in
or
clc
sub
(bad)
in
cmp
lds
js
pop
jl
push
(bad)
cmc
cmp
lods
pop
sub
cld
mov
dec
int3
cmp
push
test
dec
aam
push
cmps
dec
int3
sar
fmul
cmps
adc
enter
ror
cld
call
mov
lods
loopne
cmp
and
xor
xor
jnp
movs
and
mov
hlt
mov
pop
lds
adc
hlt
int
inc
lds
adc
xor
jae
std
xor
xchg
and
in
sub
mov
cld
cmc
and
xchg
sbb
stos
cmc
mov
push
aad
fnstcw
inc
aam
and
cmp
add
stos
push
xchg
in
push
aas
add
movs
mov
ds
sub
jl
call
cmps
fs
push
or
cdq
push
dec
ficom
xchg
les
mov
in
mov
pop
cs
aad
outs
adc
cmp
pushf
mov
mov
mov
mov
dec
xor
xor
mov
(bad)
popf
aad
inc
call
push
jl
jo
inc
inc
push
inc
lods
xor
fmul
popf
and
sar
jecxz
push
outs
js
xor
(bad)
in
xor
fld
push
(bad)
in
gs
lds
or
nop
xor
jp
in
sub
out
adc
jae
xchg
sub
div
dec
add
sub
jns
cdq
jae
in
sub
das
ror
push
aad
mov
or
sub
data16
ins
xor
gs
mov
lods
mov
dec
add
push
push
in
xchg
cmp
int3
cwde
xchg
shl
dec
int3
loopne
or
shl
dec
add
inc
sar
in
cmp
adc
sub
imul
xor
das
mov
ins
adc
pop
cdq
dec
test
lods
cmp
xor
aam
adc
imul
mov
aam
cmp
fistp
jmp
addr16
stc
pushf
out
in
mov
(bad)
fbstp
jg
add
push
jbe
in
mov
es
stc
pop
sub
in
jmp
out
in
call
push
or
mov
ficom
scas
cs
cdq
iret
movs
ins
shl
inc
push
push
fs
dec
xchg
cmp
xchg
pop
cmps
xor
fmul
or
push
xchg
push
xor
adc
sub
cs
aad
push
sub
fs
xor
nop
cs
movs
dec
push
lods
pop
push
dec
int3
aam
scas
cmps
dec
mov
(bad)
and
push
or
pop
add
mov
push
dec
push
dec
add
lds
push
arpl
lods
cmp
neg
push
arpl
ins
cmp
jns
xchg
xor
(bad)
pop
xor
jnp
lea
(bad)
pop
cmp
jae
aad
outs
aad
add
hlt
add
jo
add
int
movs
add
pop
ins
inc
dec
aam
arpl
jge
cwde
pop
dec
mov
jbe
xor
std
add
out
test
data16
cmp
push
add
push
in
lods
push
push
aad
adc
les
add
les
or
sub
xor
inc
sbb
pop
test
push
sbb
aaa
test
push
sbb
aaa
shl
int3
or
sub
adc
push
cmps
out
xor
or
jno
push
add
push
(bad)
sub
int3
mov
out
hlt
loopne
push
in
inc
or
mov
scas
es
jmp
mov
in
mov
push
test
in
adc
pushf
pop
sahf
xor
fmul
or
jo
jne
jns
lods
lods
sbb
and
sahf
push
movs
xor
inc
fld
(bad)
jbe
sbb
inc
pop
nop
push
mov
or
into
mov
fst
imul
sub
pop
dec
xchg
xor
cmc
gs
push
dec
das
shl
add
inc
lahf
icebp
inc
mov
inc
mov
push
xor
in
push
(bad)
or
xor
push
(bad)
push
inc
les
add
xor
imul
add
pop
xor
fnstsw
jo
jno
icebp
push
aam
add
mov
cmp
push
in
movs
cmp
jg
inc
dec
push
and
inc
out
mov
gs
lods
sub
jg
cmp
dec
les
add
jb
dec
dec
int3
lea
inc
aad
add
les
or
push
stc
xor
lods
push
pop
aad
adc
mov
push
pop
lds
or
mov
inc
lds
or
mov
hlt
pop
aad
cmp
cmp
stos
xchg
cmps
mov
jg
add
imul
xor
jno
sub
movs
test
(bad)
lods
cld
nop
into
jl
fadd
int
jg
ficom
xchg
sbb
mov
sar
adc
pop
push
dec
in
imul
cmp
fmul
or
adc
sub
sbb
inc
jo
dec
movs
or
cmp
sub
call
cs
sbb
(bad)
addr16
inc
(bad)
jmp
inc
mov
xor
xor
popf
gs
inc
icebp
xor
jo
pop
sub
xor
or
adc
inc
mov
push
outs
aad
or
mov
mov
int3
lea
pop
frstor
add
push
xor
dec
int3
aad
push
(bad)
cmp
dec
cmp
xor
std
pop
frstor
add
int3
int
inc
frstor
adc
sub
xor
push
dec
int3
inc
gs
call
cmc
adc
(bad)
xor
mov
fs
pop
push
cmp
push
cmp
jo
and
mov
push
jo
push
jmp
movs
push
jo
pop
dec
xchg
cmp
jo
and
mov
push
jo
or
mov
xlat
add
xor
mov
mov
jg
xor
sbb
push
inc
sar
xor
push
data16
sbb
aam
(bad)
mov
int3
add
in
es
mov
in
imul
je
ror
sbb
xchg
xchg
add
xchg
mov
cmp
fmul
or
and
xor
sbb
lods
cwde
sahf
sbb
test
dec
and
out
std
adc
icebp
out
pushf
pusha
es
js
push
push
retf
outs
push
aas
(bad)
dec
and
mov
movs
dec
jo
leave
dec
pop
cmp
js
imul
movs
push
jo
imul
mov
sub
xor
or
xchg
xor
dec
mov
push
pop
frstor
add
inc
cmp
inc
les
push
in
and
cmps
jb
rol
push
outs
aad
add
int3
std
pop
lds
add
mov
sbb
das
rcl
jne
lds
adc
mov
xor
xchg
sbb
mov
mov
inc
inc
pop
retf
sbb
inc
push
xchg
jl
and
inc
jg
jl
sub
inc
aas
bound
movs
inc
jbe
popf
inc
inc
aas
stos
jl
sub
inc
out
jl
and
js
mov
movs
pop
lds
iret
or
xor
repnz
xchg
mov
outs
mov
sbb
push
xor
inc
les
scas
in
dec
iret
les
pushf
int3
add
in
test
outs
movs
into
jno
push
add
mov
je
ror
or
cmps
in
popf
cmp
movs
loopne
adc
fmul
or
loope
les
pusha
inc
adc
rcl
push
ins
sub
add
loope
test
test
pushf
xchg
add
dec
and
scas
push
out
jl
sub
inc
xchg
pop
inc
rcr
sbb
js
adc
movs
cmc
jle
lods
dec
jo
adc
lods
ins
outs
inc
lods
dec
push
and
push
and
push
xor
push
dec
mov
pop
pop
fstp
xlat
mov
xor
cmp
adc
push
les
or
sar
inc
int3
lds
push
aad
or
sub
xor
push
dec
int3
ins
push
push
lds
ja
ins
and
test
dec
ja
jl
cmp
inc
ja
jl
and
inc
ja
inc
and
mov
pop
jo
repz
and
sbb
jo
repz
and
mov
lods
pop
jo
repz
and
cmp
cmp
xor
ret
mov
inc
pop
sub
jno
ins
xchg
cmp
inc
adc
inc
aam
rcl
mov
cwde
push
pushf
cld
or
in
(bad)
or
mov
out
inc
outs
adc
fs
call
push
and
pusha
mov
xchg
adc
fadd
mov
fadd
or
cmp
lods
js
hlt
in
mov
xchg
js
jne
add
mov
xchg
mov
xchg
inc
movs
movs
sub
(bad)
jp
or
xor
adc
push
aam
pop
mov
cmp
ja
adc
inc
les
add
add
inc
les
fdiv
and
sbb
sub
adc
inc
int3
sbb
sub
adc
dec
aam
pop
jle
and
ja
or
dec
int3
sbb
xor
or
inc
les
cmp
or
inc
les
sub
adc
popa
in
aaa
data16
add
ja
adc
imul
cmp
ja
add
inc
aam
push
data16
cmp
jb
mov
push
in
fwait
push
ja
je
icebp
je
pop
push
test
ja
je
add
dec
ja
je
or
dec
ja
jl
or
push
ja
ins
and
je
pop
neg
je
or
dec
ja
jl
and
cmp
inc
sub
ret
mov
inc
es
jno
gs
cmp
sub
(bad)
push
adc
dec
aam
loopne
in
fdiv
push
lods
aam
(bad)
lods
in
mov
mov
mov
into
fs
enter
call
push
and
jo
in
sbb
aam
mov
fcomp
or
mov
inc
jl
mov
(bad)
or
mov
lods
lods
sbb
mov
and
outs
jne
ror
int
sbb
adc
or
xor
shl
and
push
pop
mov
and
ja
cmp
xor
sbb
add
cmp
sub
or
cmp
and
or
push
and
lods
sbb
adc
dec
and
lods
sbb
adc
sub
and
or
xor
and
cmp
cmp
dec
mov
pop
outs
in
pop
cmp
or
inc
les
cmp
add
inc
les
cmp
int3
ffree
(bad)
out
sti
xchg
jne
lods
and
inc
retf
xchg
jne
lods
and
dec
fld
fnstenv
mov
and
dec
pop
lahf
out
mov
jne
test
jmp
cmp
and
gs
lahf
iret
inc
mov
jne
movs
and
pop
pop
out
pop
enter
push
cdq
lods
adc
cmps
fnstenv
xor
imul
jge
sub
push
add
dec
int3
pop
cwde
(bad)
in
aam
(bad)
movs
pop
cwde
push
mov
in
cmps
or
mov
or
xor
fs
into
pushf
in
xchg
call
scas
aad
adc
int3
ror
add
fmul
in
xchg
xchg
dec
pop
hlt
nop
mov
in
mov
ins
call
mov
in
shr
jbe
cwde
cmc
and
mov
mov
jne
frstor
stc
jne
xchg
repz
and
push
pop
mov
jne
in
and
ins
pop
scas
lahf
pop
xchg
leave
jne
std
and
gs
dec
mov
imul
repz
add
fwait
leave
jne
cmc
and
gs
inc
(bad)
dec
fwait
jmp
stc
jge
cmps
lahf
pop
fwait
shl
and
gs
cmps
xchg
pop
or
repz
and
ins
pop
mov
pop
mov
jne
adc
mov
je
adc
(bad)
push
out
mov
je
sub
out
into
fistp
je
sub
daa
jbe
sbb
jne
or
jns
pop
daa
jle
sbb
jne
adc
xor
sbb
jne
adc
xor
jmp
jb
std
and
sub
sti
shl
and
sub
sti
xor
sub
retf
leave
inc
mov
sbb
sub
enter
sub
xor
movs
into
xor
push
cmp
jns
test
sub
push
cmp
inc
mov
loopne
in
movs
mov
push
movs
aam
(bad)
test
fmul
adc
add
mov
je
into
test
lock
sar
sub
mov
lea
dec
push
in
fmul
adc
fmul
hlt
mov
dec
cmp
call
into
or
enter
adc
mov
xchg
and
jb
arpl
cmp
mov
stos
rcl
(bad)
push
out
add
stos
cmp
lahf
aaa
iret
mov
dec
mov
xchg
lahf
aaa
mov
popa
std
jnp
stos
rcl
mov
fnsave
or
mov
fnstsw
mov
push
fild
dec
loope
ja
pop
xlat
mov
dec
jmp
fild
stos
loope
xchg
mov
iret
mov
std
imul
gs
mov
iret
mov
std
jnp
dec
jmp
iret
sub
push
dec
rcl
mov
add
ins
addr16
ds
dec
xor
getsec
cmps
or
ret
dec
and
pop
aas
ds
pop
and
pop
das
pop
iret
or
repz
xor
aaa
das
ss
sbb
and
jns
addr16
ds
dec
fwait
jns
(bad)
daa
es
sbb
xor
xchg
cmc
fcomip
jg
ror
and
xor
adc
(bad)
iret
(bad)
cmp
jns
jge
xor
fs
inc
mov
aam
(bad)
movs
push
cwde
movs
aam
(bad)
lods
in
mov
clc
pop
or
adc
(bad)
je
rol
in
call
(bad)
sbb
push
ss
in
sahf
or
fsub
add
inc
daa
sub
add
fdiv
mov
mov
cwde
(bad)
cmps
fcmovnu
xchg
test
js
cli
dec
or
cmps
jmp
adc
jmp
add
(bad)
test
ja
das
scas
jmp
adc
sbb
jae
not
pop
sbb
inc
pushf
mov
push
ja
pop
lds
xor
test
xchg
jo
cmps
es
(bad)
sbb
pop
ins
xor
cs
(bad)
sbb
dec
mov
xchg
push
xchg
push
sbb
cld
(bad)
cs
(bad)
adc
push
pop
jo
outs
(bad)
ja
pushf
sti
xor
sub
sub
in
das
cs
pop
jne
dec
mov
cld
dec
daa
ss
pop
push
jns
addr16
dec
iret
sbb
mov
arpl
pop
das
dec
mov
sbb
hlt
jmp
push
cmps
sbb
mov
sub
cmps
sbb
loop
or
out
rcl
dec
jbe
cmp
xor
inc
hlt
cmp
sub
fs
ss
clc
ffreep
mov
nop
movs
int3
mov
movs
in
mov
and
or
cld
icebp
iret
pushf
je
(bad)
pushf
in
sahf
push
cld
enter
sbb
mov
in
cmps
or
fadd
or
dec
pop
adc
xor
int3
mov
fsub
es
gs
aaa
cmp
xchg
jno
stos
push
jnp
sub
jmp
adc
cli
inc
sbb
sub
jmp
adc
cli
inc
lds
scas
inc
scas
ret
adc
std
pop
jg
inc
add
cmc
pop
pop
xchg
inc
lds
adc
cli
pop
movs
dec
gs
jg
jge
nop
sub
jmp
add
jmp
add
mov
jmp
add
jmp
add
or
stos
shl
outs
aaa
ds
pop
rol
mov
push
xor
iret
jmp
xchg
xor
hlt
aas
(bad)
das
xchg
jns
ret
test
addr16
xstore-rng
cmps
ret
cmp
test
outs
es
scas
jmp
cmc
out
neg
ffreep
rcr
sub
sub
dec
hlt
xor
xor
push
cmp
es
inc
call
(bad)
int3
and
es
in
mov
cmp
or
aam
mov
ins
lock
in
mov
(bad)
or
adc
mov
dec
es
fdiv
mov
nop
mov
aam
xor
in
mov
mov
mov
mov
or
xchg
je
pop
aad
pop
jno
add
sub
ret
inc
inc
mov
scas
jmp
sub
retf
dec
ins
ret
nop
sub
retf
dec
inc
ret
enter
pop
xchg
sar
rol
test
cmps
(bad)
das
scas
jmp
add
ret
jb
add
jmp
adc
cli
push
mov
add
ret
cmp
nop
adc
cli
pop
int
ins
pause
adc
cli
push
fld
xchg
add
push
lds
ins
xchg
jo
mov
imul
scas
cli
imul
xchg
daa
cmps
retf
call
daa
cmps
retf
dec
dec
mov
xchg
outs
adc
cmp
cmc
mov
daa
xchg
jno
dec
inc
fwait
test
xlat
(bad)
imul
test
test
jg
idiv
cmp
(bad)
(bad)
mov
sub
dec
mov
popf
sub
fs
push
int3
inc
lock
pushf
jno
aam
cwde
es
in
mov
sbb
pop
(bad)
je
(bad)
pushf
in
mov
fcom
or
sbb
mov
push
push
je
fmul
or
fmul
or
cdq
div
rol
sub
mov
xchg
xchg
stos
pop
(bad)
out
das
mov
inc
sub
scas
rol
icebp
jge
mov
xchg
retf
adc
test
push
das
xchg
retf
sbb
mov
xchg
rol
icebp
adc
xlat
mov
inc
test
not
pop
xchg
push
fld
sti
adc
inc
int
ins
fwait
nop
adc
cli
push
movs
cmp
nop
adc
cli
pop
mov
adc
cli
push
xchg
adc
test
(bad)
inc
xchg
push
jne
and
jg
push
movs
adc
test
inc
ja
gs
adc
retf
sbb
mov
xchg
rol
loope
cmp
scas
fld
loope
cmp
xchg
rol
jmp
aas
cmc
seta
test
jnp
out
pop
outs
sar
and
mov
xchg
shl
sub
sar
jg
test
fisubr
sub
jns
test
sub
jl
call
xlat
test
in
nop
movs
int3
nop
(bad)
movs
in
mov
push
inc
cmp
fs
in
mov
(bad)
or
pusha
out
mov
pop
push
test
fdiv
test
pop
dec
icebp
out
add
ds
in
mov
repz
js
ret
push
ret
mov
xchg
leave
pop
xor
cmp
jmp
sbb
(bad)
repnz
retf
test
pop
std
pop
xchg
leave
push
jge
ins
sub
pop
pop
gs
jmp
data16
ins
pop
xlat
imul
test
aad
(bad)
sub
adc
pop
lods
adc
nop
adc
jmp
add
(bad)
ja
gs
test
idiv
pop
xchg
pop
xchg
or
test
das
(bad)
shl
sub
shr
sub
ret
adc
stos
sub
leave
jns
stc
inc
fstp
scas
sar
sbb
mov
xchg
retf
sbb
mov
scas
sar
or
mov
pop
in
scas
rol
jmp
out
das
xchg
retf
or
mov
scas
fnstenv
jmp
pop
test
scas
sbb
mov
sub
dec
into
mov
jl
inc
in
jns
jne
shl
and
push
mov
clc
mov
ins
jno
in
and
es
in
mov
push
data16
dec
daa
cmc
movs
xor
push
in
fadd
or
jo
mov
cld
shl
test
push
mov
idiv
in
mov
fadd
cmp
dec
ficomp
jo
sar
mov
xchg
loope
leave
lea
mov
(bad)
shl
out
aas
sar
mov
das
cmc
test
dec
in
div
pop
add
rol
mov
push
ins
inc
or
cmc
pop
mov
in
jecxz
hlt
xlat
aad
pop
jmp
sti
jo
(bad)
(bad)
emms
jmp
add
jmp
adc
jmp
adc
stc
pop
xchg
loop
sub
jg
mov
nop
add
shl
adc
retf
and
test
mov
jns
push
mov
das
scas
jmp
add
cli
jns
jb
and
ret
dec
inc
ret
mov
scas
ret
sub
mov
scas
leave
jns
icebp
dec
(bad)
cmps
sbb
je
cmc
jb
mov
je
dec
in
xor
clc
iret
popf
cmp
(bad)
fs
push
int3
sub
in
sub
es
nop
into
mov
in
dec
sbb
inc
pop
aad
mov
out
in
mov
(bad)
or
jo
mov
cld
sar
test
out
and
mov
je
fs
pop
shr
psrlw
mov
ja
test
ja
test
outs
cmc
out
fstp
cdq
xchg
stos
mov
fnstenv
lea
(bad)
jg
mov
adc
mov
push
or
(bad)
lea
mov
mov
jo
cmps
(bad)
pop
ja
push
in
cmp
hlt
(bad)
es
(bad)
adc
jb
mov
push
(bad)
sbb
jo
cmps
es
jg
pop
lds
xchg
jo
cmps
(bad)
jg
gs
jo
(bad)
(bad)
div
pop
lods
sub
fist
jmp
retf
adc
imul
pop
es
jmp
add
sbb
ret
add
jns
mov
aaa
(bad)
aas
mov
inc
dec
adc
jns
stos
inc
push
nop
adc
cli
jns
push
fwait
mov
scas
jmp
add
push
lds
fistp
cmp
and
fs
push
mov
pushf
adc
aam
cwde
cs
cld
cwde
mov
in
mov
cmp
les
jg
xchg
dec
cmps
in
xchg
call
mov
into
or
dec
mov
pop
hlt
fdivr
mov
xchg
jbe
lods
mov
movs
in
pop
in
pop
mov
mov
pop
xchg
mov
(bad)
repz
dec
dec
popf
and
pushf
out
outs
fnstcw
mov
cmps
in
jg
mov
mov
jg
test
sbb
out
fisttp
xor
jg
sbb
adc
cld
push
es
xchg
push
cmp
hlt
push
cs
(bad)
adc
ret
js
push
es
xchg
push
cmp
hlt
inc
cs
(bad)
adc
mov
hlt
mov
pop
mov
add
(bad)
ja
ins
jmp
hlt
cmps
(bad)
jg
xchg
mov
mov
push
jno
mov
push
jno
(bad)
das
es
dec
sub
pop
es
jmp
cmc
daa
(bad)
daa
cmps
cli
jno
ret
add
jno
retf
nop
add
cli
jno
mov
pop
test
outs
out
dec
cmps
ret
nop
cmc
or
sar
int3
sub
and
jl
loopne
mov
push
out
add
cs
hlt
cwde
mov
or
nop
es
imul
pushf
call
mov
(bad)
or
dec
xchg
mov
int3
enter
fcom
add
dec
mov
mov
movs
cmps
in
int
cmps
in
(bad)
mov
mov
dec
fistp
xchg
and
pushf
fild
xchg
sub
dec
cmps
in
jmp
mov
xchg
sub
cli
inc
add
add
pop
inc
jne
lahf
sub
iret
fistp
and
jnp
data16
ja
or
cmp
hlt
das
es
xchg
inc
cmp
cld
push
es
xchg
push
sbb
hlt
addr16
xchg
pop
or
hlt
cmps
test
ret
adc
push
xchg
adc
nop
sub
jmp
adc
sbb
nop
add
adc
mov
outs
das
ds
pop
jnp
cld
xchg
ds
push
shl
pop
cs
pop
and
mov
dec
mov
das
cmps
cli
inc
lds
fwait
mov
scas
retf
and
mov
mov
in
adc
and
mov
popf
shl
jl
loopne
int3
fdivr
lods
mov
aam
nop
es
cwde
mov
in
sahf
or
cwde
cs
adc
inc
mov
fs
je
rol
cmp
les
mov
ins
ror
test
(bad)
or
jmp
mov
xchg
mov
ja
mov
mov
ja
mov
nop
sub
cli
push
mov
add
jmp
add
cs
jmp
hlt
push
es
xchg
and
ret
ror
mov
sub
inc
mov
lahf
arpl
inc
mov
(bad)
mov
emms
cli
mov
xchg
adc
jmp
cmp
addr16
test
add
test
xchg
adc
stc
test
xchg
adc
stc
test
xchg
adc
jmp
xor
jg
popa
int
push
jecxz
hlt
xlat
das
cs
sbb
and
hlt
(bad)
daa
es
dec
jnp
adc
cli
jns
mov
nop
adc
rcl
dec
arpl
(bad)
shr
and
shr
mov
(bad)
rcl
je
in
into
lods
popf
sub
pushf
inc
push
mov
jne
shl
or
cs
mov
test
cld
nop
into
(bad)
in
cmps
or
nop
ds
mov
xchg
cld
mov
(bad)
jl
call
dec
push
jbe
lods
jo
hlt
fdiv
mov
mov
pusha
xchg
dec
retf
pop
jo
jp
fwait
test
lahf
(bad)
daa
scas
cli
jno
call
push
scas
jmp
adc
cli
jns
mov
dec
nop
add
jmp
cmc
mov
pop
movs
inc
pushf
repz
(bad)
test
daa
jae
xchg
pop
inc
jge
dec
pop
jge
pop
ret
out
stc
test
stos
sub
stc
mov
xchg
sub
stc
mov
test
daa
(bad)
stc
mov
mov
adc
jg
test
adc
test
jo
iret
(bad)
idiv
mov
xor
(bad)
div
test
jo
jmp
cs
push
or
add
jmp
add
test
fwait
add
push
jne
ins
ret
nop
sub
leave
pop
gs
ins
cmp
pop
jns
adc
test
pop
(bad)
aas
mov
pop
(bad)
cmps
xlat
pop
mov
inc
(bad)
sar
cmc
jb
movs
popf
xor
je
jns
xor
sbb
out
adc
cs
adc
movs
mov
ss
add
in
out
dec
cmp
sub
pop
movs
jl
lahf
hlt
lods
rcl
in
loopne
inc
in
fdivr
or
push
data16
xchg
pusha
cs
movs
loopne
or
enter
mov
xchg
xor
and
cli
jno
dec
inc
fwait
nop
adc
jmp
adc
sbb
cmp
div
mov
adc
std
mul
test
xchg
adc
stc
mov
leave
xchg
adc
or
ins
mov
dec
iret
inc
inc
push
fist
xor
scas
stc
mov
jns
arpl
addr16
xor
pop
aad
jg
test
loope
sub
jg
mov
add
mov
js
(bad)
div
mov
pusha
cld
xchg
div
pop
aad
pushf
mov
mov
push
ja
mov
js
xlat
(bad)
daa
ja
imul
outs
(bad)
das
xchg
cli
jns
bound
adc
js
cli
push
(bad)
iret
daa
ss
pop
repz
dec
sbb
scas
cli
popa
push
xchg
and
das
push
fucomip
add
hlt
jg
pop
(bad)
sbb
fstp
fisubr
add
es
jns
xor
cld
jmp
ds
and
cld
loope
pushf
test
(bad)
in
fmul
or
loopne
pushf
pop
cwde
out
xor
rcl
cld
mov
inc
in
fmul
or
mov
cs
call
aaa
sahf
das
mov
mov
daa
in
pop
leave
pop
ins
jno
xor
xchg
mov
jmp
pop
std
jg
mov
xchg
cmc
pop
std
emms
adc
jae
pop
(bad)
stc
mov
xchg
adc
shl
adc
sbb
jnp
ja
push
sub
mov
mov
in
push
aam
jnp
out
sub
push
xor
cld
mov
mov
jo
(bad)
es
jmp
jmp
hlt
(bad)
test
push
jo
lahf
es
xchg
pop
or
hlt
outs
test
mov
idiv
mov
js
mov
xchg
jg
mov
xor
jmp
xor
add
daa
pop
fistp
add
hlt
inc
daa
pop
fistp
add
cmc
xlat
(bad)
dec
(bad)
sbb
pop
ret
xchg
add
ret
retf
nop
sub
jmp
adc
ficomp
aad
test
and
jb
mov
add
das
jl
imul
popf
int3
cdq
call
mov
mov
xor
jl
test
into
cld
in
(bad)
or
cmp
push
call
cmps
sub
rcl
movs
js
inc
hlt
fdiv
or
test
in
push
push
aam
nop
data16
sub
sbb
ja
test
push
std
out
stc
xchg
in
int3
ret
jae
jmp
fnstsw
lea
adc
cli
push
popf
or
adc
pop
xchg
adc
add
push
xchg
sbb
nop
adc
sbb
pop
mov
and
push
mov
fadd
mov
aam
arpl
push
xor
not
mov
popf
ret
jo
jmp
(bad)
or
lods
cmp
push
xor
xchg
rcl
div
pop
sub
cld
pop
cs
(bad)
adc
retf
jns
pop
ss
xchg
or
cli
ins
shl
push
push
xchg
inc
jne
ins
shl
out
xchg
pop
lods
jnp
inc
jno
pop
daa
push
xlat
sbb
xor
hlt
daa
daa
dec
fucomip
or
jnp
fwait
jno
cmps
daa
dec
mov
popa
test
pop
sub
iret
cli
imul
mov
jge
test
xlat
(bad)
pop
scas
ret
adc
test
(bad)
(bad)
pop
xchg
fidiv
or
jb
mov
in
jmp
out
cmp
cld
cdq
out
sbb
ds
test
int3
inc
push
push
je
mov
cld
in
(bad)
or
nop
push
lods
je
scas
test
enter
adc
int3
ror
in
pop
data16
aam
mul
fmul
pusha
fmul
xchg
in
stos
xchg
xlat
mov
in
aad
inc
sbb
arpl
push
xor
idiv
push
xchg
add
jle
mov
and
and
aad
fs
push
xchg
pop
aad
fs
hlt
jmp
div
pop
lds
popf
jmp
add
cs
(bad)
adc
push
mov
stos
shl
mov
mov
ja
mov
jo
cmps
(bad)
test
inc
test
add
inc
xor
(bad)
mov
push
xchg
mov
js
pop
cs
or
and
in
aas
cmps
add
mov
in
xchg
cs
add
and
in
fbld
pop
xchg
jmp
aad
xor
(bad)
pop
iret
jmp
lea
and
(bad)
aas
iret
cli
popa
push
loop
or
mov
dec
jnp
adc
jmp
add
cli
inc
lds
mov
scas
ret
sbb
test
div
pop
xchg
shl
adc
jb
mov
aam
das
mov
jne
xlat
jne
mov
mov
xchg
ds
pop
push
mov
pop
push
cmp
mov
jl
pop
idiv
in
(bad)
or
lock
lods
je
scas
gs
shl
and
lock
add
dec
xchg
movs
leave
fdiv
pusha
int3
jb
js
movs
scas
ds
in
sub
nop
adc
jmp
add
xor
push
out
pushf
bound
mov
fimul
pop
xchg
aam
and
call
pop
or
cld
(bad)
es
(bad)
adc
stos
jl
jo
das
cs
adc
rol
cld
iret
das
cmps
or
cmp
lds
data16
enter
imul
jmp
iret
mov
mov
dec
js
pop
dec
aaa
cmps
add
jne
push
or
out
fsub
sub
lods
add
div
mov
add
push
outs
add
push
dec
hlt
mov
(bad)
aaa
or
arpl
aam
aas
ds
dec
inc
imul
add
jnp
pop
imul
jmp
mov
adc
(bad)
aaa
mov
popa
pop
repnz
or
mov
inc
pop
adc
jns
xchg
inc
pop
nop
adc
jmp
adc
jmp
adc
ret
jb
mov
daa
scas
rol
sbb
and
push
lds
cmps
jne
ror
les
std
jne
xlat
jne
mov
mov
cs
fcom
movs
lods
cwde
ds
mov
pop
movs
dec
push
cld
in
into
or
lock
je
xchg
gs
or
pushf
movs
js
add
fdivr
or
add
aad
jmp
inc
jns
jbe
add
movs
imul
es
scas
sbb
xor
hlt
xchg
daa
fild
and
icebp
in
push
in
push
cmp
(bad)
cmp
or
aam
push
in
sub
mov
mov
es
pusha
aad
pop
inc
jns
xchg
ds
push
jns
xlat
das
ss
pusha
adc
in
xchg
pop
mov
mov
pop
sar
pop
fninit
(bad)
pop
stos
sub
sub
das
sub
mov
ror
fucomp
jne
daa
add
jg
cmp
pop
cmp
in
sub
in
addr16
cs
add
imul
ss
add
jnp
and
pop
aas
ss
push
push
aam
aas
es
cmp
ret
inc
jnp
in
inc
(bad)
aaa
scas
cli
imul
daa
(bad)
aaa
mov
push
jnp
adc
cli
jns
xchg
push
push
nop
adc
cli
jno
ret
adc
jno
rcr
test
push
(bad)
aas
iret
ret
mov
push
(bad)
aaa
mov
and
(bad)
pop
iret
ret
xor
cmp
jp
lds
scas
jge
and
jl
jo
aad
lock
gs
mov
mov
loope
in
js
pushf
movs
loopne
sbb
push
jbe
fstp
add
fdiv
mov
gs
fcom
add
fdivr
xor
in
(bad)
mov
xor
adc
sub
int3
mov
pop
es
xchg
or
sbb
jns
pop
aaa
jle
or
jne
sbb
jno
pop
daa
outs
not
pusha
dec
repz
jns
pop
das
out
or
jne
or
jns
addr16
push
fisttp
mov
imul
cmp
out
add
inc
pop
sub
xor
cmps
or
or
in
jecxz
in
es
pop
stc
fild
mov
mov
(bad)
sub
xchg
xchg
and
xlat
(bad)
mov
sbb
scas
mov
test
ror
das
sub
aaa
or
mov
and
pop
das
pop
mov
or
and
popa
in
pop
ss
add
repz
imul
cmp
repz
and
pop
aas
ds
dec
add
aam
(bad)
dec
mov
and
xlat
dec
iret
sti
sbb
add
jmp
movs
sub
hlt
mov
or
arpl
xlat
push
fistp
or
cmc
inc
daa
outs
out
sti
cmp
add
sbb
gs
and
pop
daa
jle
sti
stc
jb
dec
fld
mov
sub
mov
mov
push
sbb
pcmpeqb
jmp
test
scas
adc
in
mov
pushf
loopne
mov
jge
cmp
(bad)
aam
push
dec
inc
jo
inc
out
loop
push
mov
add
ins
scas
cmp
or
and
in
push
dec
cmp
xchg
mov
sbb
sahf
sbb
and
cld
and
cld
sbb
sahf
sbb
enter
and
sbb
jbe
or
jne
sbb
popa
cld
pop
aaa
push
xlat
cmp
in
stc
hlt
jmp
in
add
out
aas
mov
xor
aad
add
inc
lods
mov
call
rol
(bad)
stc
imul
aam
fistp
(bad)
xchg
dec
xchg
or
cmps
mov
pop
aas
mov
jae
push
data16
ja
xor
xor
popa
in
aas
pop
fild
or
xor
imul
or
jne
and
push
les
pop
ss
pusha
jne
pop
and
pop
aas
ss
push
or
int
es
jmp
jne
cmc
and
adc
daa
sahf
sbb
and
sbb
jno
pop
daa
sahf
lock
jb
adc
jns
sbb
sahf
sbb
enter
and
pop
das
jbe
sbb
jb
cmc
and
add
das
sahf
sbb
enter
and
cmc
sbb
xchg
adc
enter
and
hlt
sbb
xchg
adc
loopne
repz
jp
std
and
fs
scas
lds
out
pop
adc
pop
je
loope
adc
jo
pushf
xchg
test
and
pusha
mov
aad
test
or
call
xchg
jmp
cmps
int3
aam
push
sbb
push
hlt
iret
and
mov
retf
out
push
dec
adc
or
in
daa
outs
out
cmp
cld
and
hlt
sbb
sahf
adc
shl
and
cld
sbb
jbe
adc
jne
hlt
and
cld
sbb
sahf
sbb
and
sbb
jns
pop
das
jbe
or
jne
cmp
popa
in
aaa
push
iret
add
xor
bound
cmp
jle
jb
les
jne
outs
pop
mov
sub
and
iret
pop
idiv
es
sbb
xchg
push
call
loopne
mov
call
cmp
jne
cmp
popa
in
pop
pop
pop
xlat
cmp
jne
xor
imul
or
jne
add
imul
sub
jne
and
xor
pop
aaa
dec
iret
inc
jno
ret
add
sbb
jb
int
jno
sbb
scas
sub
clc
jb
int3
and
cld
sbb
mov
repz
and
cld
sbb
cmps
and
lock
aam
jns
sbb
mov
adc
jb
fsub
hlt
sbb
(bad)
xor
nop
jb
lods
and
hlt
sbb
mov
sbb
jno
sbb
(bad)
xor
nop
jb
lods
and
sub
popf
sub
fs
jle
ins
clc
xlat
and
movs
xchg
cs
dec
cs
dec
push
push
ins
in
fsub
jl
cmp
or
mov
inc
shl
ds
aam
mov
retf
cmp
bound
pushf
and
sbb
(bad)
sbb
loopne
repz
hlt
sbb
cmps
and
call
jno
sbb
scas
sub
lock
cld
and
cld
sbb
scas
adc
shl
and
cld
sbb
xchg
sub
enter
and
hlt
sbb
sahf
sbb
enter
and
pop
das
sahf
lock
jb
and
push
in
xor
in
lock
int3
out
dec
imul
sbb
jae
pop
adc
cwde
xchg
jb
mov
cmc
(bad)
lock
xchg
pop
sti
ret
inc
sub
cli
xchg
cmps
daa
jmp
pusha
mov
aad
adc
jne
add
imul
add
jne
cmp
imul
add
jne
xor
imul
push
or
push
adc
in
dec
cld
xchg
test
aaa
sub
sbb
jno
sbb
out
push
sbb
jns
sbb
(bad)
pop
or
jno
sbb
(bad)
push
mov
daa
(bad)
push
sbb
jno
sbb
ficomp
xor
and
cld
sbb
(bad)
pop
sbb
jno
sbb
ficomp
mov
test
adc
and
jl
test
mov
add
pcmpgtb
test
les
inc
xchg
pusha
into
jge
mov
xchg
or
loopne
mov
outs
mov
xchg
push
pushf
js
jge
cmp
adc
add
cmp
nop
jb
mov
daa
mov
repz
and
in
das
scas
and
lock
int3
and
hlt
sbb
mov
repz
cld
sbb
cmps
sub
clc
jb
cld
and
cld
sbb
scas
adc
shl
and
cld
sbb
xchg
adc
enter
and
cld
pop
aaa
jbe
or
jne
hlt
and
in
das
xchg
lock
jne
inc
and
aas
cmps
sub
jne
cmp
mov
rol
popf
leave
dec
adc
or
in
pop
xor
stc
addr16
retf
pop
pop
mov
mov
ja
or
sbb
pop
aas
data16
cmp
jne
add
imul
add
jne
cmp
xor
pop
pop
dec
xlat
cmp
repnz
cmp
or
mov
out
add
popf
adc
test
repz
and
hlt
sbb
pop
mov
test
repz
cld
sbb
out
sbb
jno
sbb
out
sbb
jno
sbb
(bad)
pusha
sbb
jb
aam
cmp
sbb
xor
sbb
add
gs
sub
and
jl
mov
lods
ins
clc
out
cmc
add
(bad)
movs
test
(bad)
in
pusha
xchg
inc
lods
jo
push
fstp
xor
fsub
jl
adc
and
ds
xchg
mov
jmp
das
out
and
loopne
rep
and
hlt
sbb
mov
sbb
jb
aam
jns
sbb
cmps
and
call
jno
sbb
mov
repz
and
cld
sbb
cmps
and
call
jns
sbb
scas
sub
clc
jb
les
cld
sbb
xchg
sub
clc
jb
cld
and
cld
pop
aaa
jle
add
jne
inc
fstp
and
add
pusha
cld
push
ss
ja
pusha
and
sub
fs
mov
jae
repnz
add
mov
pop
xchg
mov
jbe
xor
repz
outs
scas
imul
popa
inc
cli
pop
mov
hlt
pop
aas
jle
add
jne
add
imul
add
jne
cmp
mov
jg
in
mov
cmp
push
pop
fistp
(bad)
hlt
jle
cli
(bad)
cld
out
das
push
jo
pop
jb
fs
hlt
sbb
push
mov
push
jb
fs
hlt
sbb
dec
ins
and
hlt
sbb
dec
gs
add
xlat
(bad)
js
test
jno
sbb
(bad)
adc
mov
repz
and
cmc
sbb
out
jmp
jb
test
add
sbb
mov
inc
sbb
xchg
cmp
jl
add
clc
xlat
in
lock
jl
mov
into
adc
sbb
inc
fcomp
cld
aam
cmps
add
cwde
cs
pushf
cld
icebp
mov
pop
ret
jb
leave
fstp
sbb
(bad)
pusha
adc
jno
sbb
mov
sbb
jb
aam
jno
sbb
mov
repz
jno
sbb
mov
adc
jb
aam
jns
sbb
mov
repz
jns
sbb
cmps
and
lock
aam
jns
sbb
scas
sub
lock
les
hlt
sbb
jle
push
mov
repnz
cmp
sbb
mov
pop
inc
test
int3
data16
(bad)
or
cli
mov
test
add
inc
sbb
repz
jg
ret
aam
out
adc
jg
push
and
mov
push
div
imul
outs
add
jne
add
push
aam
aas
out
and
jne
adc
add
movs
div
xor
mov
and
cld
pop
das
push
loopne
dec
jb
je
jno
sbb
push
cwde
sbb
repz
jno
sbb
push
sbb
jb
ins
and
hlt
sbb
push
sbb
jb
ins
and
add
sbb
repz
and
hlt
sbb
out
inc
jmp
jb
xchg
and
add
jmp
jb
lea
add
sbb
mov
(bad)
ds
sub
fs
or
shl
mov
jbe
int
out
inc
push
push
fmul
aam
loopne
add
nop
ds
dec
clc
mov
dec
mov
jno
sbb
(bad)
pop
jmp
jb
mov
jns
sbb
mov
jb
lods
and
cld
sbb
fidiv
sbb
jno
sbb
mov
and
hlt
sbb
mov
adc
jb
fsub
cld
sbb
cmps
cmp
lock
les
in
sbb
cmps
cmp
lock
les
hlt
sbb
mov
repz
or
inc
sbb
lods
out
jbe
adc
jb
cmp
and
or
cli
popa
adc
xor
bound
repnz
sbb
xlat
mov
and
pop
mov
adc
dec
mov
or
dec
mov
dec
sbb
imul
jae
mov
mov
out
pop
je
test
pusha
in
pop
aas
sahf
clc
cmp
jne
add
imul
sbb
repz
and
add
sbb
repz
jno
sbb
push
nop
adc
repz
jno
sbb
pop
cwde
jmp
jb
jne
add
ins
and
add
jmp
jb
mov
hlt
sbb
out
sbb
add
jge
mov
xlat
aaa
push
in
clc
iret
or
pop
mov
movs
xchg
xor
test
jbe
fstp
xor
dec
cmps
cmp
nop
ss
jo
mov
adc
and
lahf
(bad)
(bad)
jl
inc
adc
xchg
pop
or
sbb
out
push
mov
xlat
mov
and
cld
sbb
fidiv
sbb
jno
sbb
fbstp
sbb
jno
sbb
(bad)
xor
loopne
rep
and
hlt
sbb
mov
repz
and
in
das
cmps
cmp
lock
les
cld
sbb
scas
and
lock
int3
and
cld
sbb
push
pop
mov
and
cmps
lock
jb
les
hlt
sbb
ins
pop
mov
movs
fstp
js
outs
call
cmps
js
xchg
sbb
adc
mov
and
xchg
movs
xor
in
(bad)
call
cmp
icebp
iret
and
mov
add
jb
sbb
imul
add
jne
jl
cmp
jmp
jb
pop
and
add
jmp
jb
inc
and
cmc
sbb
cs
jmp
jb
je
jno
sbb
daa
cwde
jmp
jb
jge
add
je
jno
sbb
push
cwde
sbb
rep
and
add
jmp
jb
ins
and
adc
sbb
repz
mov
pop
aas
es
add
out
add
data16
add
int3
cdq
iret
pushf
add
mov
ds
test
and
cwde
test
into
sbb
push
dec
cwde
and
or
test
repz
add
jmp
jb
mov
cmc
sbb
jbe
sbb
jne
adc
jno
sbb
cmps
adc
loopne
repz
jno
sbb
fiadd
nop
jb
lods
and
cld
sbb
mov
jb
lods
and
hlt
sbb
(bad)
xor
nop
jb
aam
jns
sbb
mov
repz
and
cld
pop
das
jbe
adc
jb
cld
and
cld
sbb
and
bound
es
(bad)
jg
cmp
jb
int3
and
in
pop
sahf
sub
jnp
icebp
bound
adc
and
jg
(bad)
xchg
rol
sbb
(bad)
hlt
sub
push
sbb
push
fcomip
sti
mov
inc
lea
popf
inc
sub
in
outs
adc
or
cmp
mov
test
pop
data16
add
jne
or
imul
adc
jne
push
shr
enter
repz
xlat
daa
enter
repz
and
adc
jmp
jb
dec
and
add
jmp
jb
dec
and
add
jmp
jb
jge
xchg
add
jmp
jb
inc
and
adc
jmp
jb
jge
add
jge
leave
add
xchg
adc
sub
out
cmp
xchg
sub
pushf
or
push
int3
mov
mov
push
movs
pushf
add
lods
cwde
cs
test
loop
call
daa
push
mov
pop
jb
xchg
and
add
jmp
jb
xchg
and
add
sbb
jb
cmp
jns
pop
das
scas
clc
adc
jb
cld
and
cld
sbb
mov
adc
jb
aam
jns
sbb
fiadd
mov
mov
jno
sbb
mov
jb
lods
and
hlt
sbb
mov
adc
jb
int3
and
hlt
pop
aaa
fistp
enter
and
in
outs
mov
fwait
jmp
(bad)
push
jb
sub
test
call
cdq
fwait
mov
movaps
inc
ret
pop
stos
add
enter
sbb
inc
bnd
pop
aaa
add
gs
shr
push
in
ja
ror
(bad)
call
or
xor
pop
aas
out
xor
cmp
jno
pop
das
outs
out
sti
popa
gs
sar
sti
sbb
sub
dec
sti
sbb
pop
and
adc
sti
popa
jb
and
(bad)
daa
mov
popa
jb
and
(bad)
aaa
mov
popa
jb
dec
and
adc
jmp
jb
inc
and
add
sti
jns
repz
and
adc
sti
inc
jb
dec
and
adc
(bad)
pusha
dec
ins
sub
into
fs
test
movs
jne
mov
movs
mov
mov
mov
mov
les
lods
fs
dec
xor
add
stc
cmps
jge
or
xlat
pop
test
push
jb
ins
and
adc
sti
pop
jb
gs
add
mov
repz
and
adc
jmp
jb
les
hlt
sbb
(bad)
xor
mov
fsub
cld
sbb
out
pop
jmp
jb
mov
jno
sbb
(bad)
pop
sbb
jns
sbb
mov
adc
jb
fsub
hlt
sbb
jbe
sbb
jb
aam
jno
sbb
mov
dec
clc
jb
iret
inc
enter
repnz
mov
pop
pop
mov
pop
ja
shl
mov
jno
or
ds
or
loope
and
jmp
dec
push
aas
nop
aas
jge
push
sub
call
lea
or
pop
xchg
adc
test
mov
sbb
xor
push
les
aaa
jle
or
jne
and
mov
(bad)
imul
paddd
ret
or
xor
inc
ret
adc
sub
(bad)
dec
enter
repz
(bad)
dec
mov
sbb
sub
dec
sti
popa
jb
and
(bad)
daa
mov
inc
and
adc
ret
jns
repz
and
adc
jmp
jb
inc
and
adc
cwde
sbb
cmp
into
jl
mov
cmps
adc
movs
xchg
dec
and
add
fs
out
and
push
mov
clc
cmps
lods
mov
xchg
mov
lods
jb
and
std
sbb
pop
cwde
jmp
jb
jne
xchg
adc
jmp
jb
jne
jns
sbb
punpcklbw
push
jb
gs
add
ret
push
jb
xchg
and
add
ret
test
adc
mov
xor
jmp
jb
mov
add
lods
and
add
sbb
jb
lods
and
add
daa
mov
jb
or
jmp
sar
mov
xor
sub
movs
jae
mov
mov
jp
ret
int3
call
push
fcom
fld
xor
push
pop
inc
mov
pop
mov
or
sbb
(bad)
aas
push
pop
test
loop
pop
xchg
sub
adc
jmp
pop
cmc
push
inc
ret
add
cmp
call
retf
add
cmp
inc
retf
or
sub
inc
ret
adc
and
inc
ret
adc
and
xlat
xlat
test
shl
and
sbb
sahf
adc
add
or
jno
sbb
daa
push
sti
jno
repz
and
add
cdq
sbb
fs
into
jl
test
movs
popf
and
lods
mov
add
push
sbb
inc
pop
cwde
cs
ds
imul
adc
dec
and
adc
sti
jns
repz
xchg
adc
jmp
jb
jge
xchg
adc
sti
dec
jb
jge
add
xchg
and
cmc
sbb
jo
xchg
and
adc
jmp
jb
mov
xlat
scas
cmp
and
add
jns
pop
das
inc
cwde
lods
jp
xor
pop
cmp
xchg
or
xor
adc
mov
cmp
dec
jo
test
mov
adc
adc
pop
scas
pusha
fwait
and
push
and
push
cmp
pop
js
add
das
adc
and
fild
cmps
stc
or
xchg
sub
xchg
call
repnz
mov
sbb
mov
test
scas
add
dec
rcl
pop
aaa
or
daa
push
jmp
fmul
cmp
cmp
not
sar
jb
cmp
out
outs
ror
add
xor
out
push
ror
or
sub
not
retf
or
xor
call
shr
jb
adc
jno
sbb
sahf
adc
push
xchg
in
jmp
inc
jmp
jb
pop
and
sub
jb
dec
push
sub
into
push
sub
inc
movs
mov
jbe
int3
cdq
das
lods
movs
mov
and
add
or
push
push
int3
in
call
inc
xor
mov
popa
jb
dec
and
adc
sti
jns
repz
and
adc
sti
jno
repz
and
adc
jmp
jb
jge
add
jne
adc
gs
add
jmp
jb
lea
add
aas
push
daa
cmp
int
sbb
push
les
adc
(bad)
and
dec
int3
into
imul
sub
ins
bnd
jmp
scas
mov
fsub
std
adc
rcl
shl
mov
cmp
mov
push
adc
cld
add
nop
outs
out
dec
stc
jb
mov
push
push
push
or
cmp
fwait
pop
and
pop
cmp
jge
xchg
cwde
(bad)
daa
in
daa
fidivr
lds
or
jp
push
mov
movs
stos
dec
mov
pop
mov
int
out
push
mov
mov
inc
(bad)
addr16
shr
jb
adc
out
clc
(bad)
jb
adc
out
call
add
not
rol
jb
xor
not
retf
add
cmp
not
sti
jno
repz
jmp
mov
icebp
jb
mov
inc
ror
jb
xor
mov
clc
push
rcl
fs
inc
mov
cmp
je
mov
in
xor
push
or
mov
sub
sbb
dec
fadd
popa
jb
dec
and
sub
sti
jno
repz
and
adc
sti
jno
repz
and
add
sti
inc
jb
jne
xchg
add
sti
dec
jb
jge
xchg
sub
jmp
jb
ins
and
add
(bad)
out
push
sti
mov
repz
add
adc
inc
les
(bad)
jle
push
jl
ins
add
mov
inc
dec
dec
push
inc
mov
or
jne
mov
(bad)
jg
cmp
repnz
stos
adc
mov
stos
ret
mov
pop
and
jno
out
scas
call
mov
in
mov
dec
mov
dec
jmp
ds
adc
xor
push
jne
and
and
adc
adc
hlt
pop
add
jl
movs
inc
lds
test
ror
xchg
pushf
(bad)
jb
in
mov
lock
jb
adc
out
clc
shr
jb
sbb
out
clc
fstp
jb
add
not
retf
add
add
out
outs
rcl
cmp
add
out
inc
rol
jns
repz
not
sar
jb
cmp
mov
clc
dec
lock
pop
adc
inc
add
inc
mov
xor
jl
push
xchg
in
cmp
inc
movs
bound
rcl
int
pop
and
sub
ret
sbb
pop
and
sub
ret
popa
jb
pop
and
sub
ret
jns
repz
and
adc
sti
jns
repz
add
jge
sub
jne
xchg
adc
sbb
jb
add
jns
pop
xlat
mov
repz
xor
xchg
ss
cwde
in
movs
mov
cmps
ss
enter
add
push
sbb
push
aas
and
sbb
scas
push
fisub
shl
sbb
jmp
add
je
repnz
add
ss
lahf
push
pop
and
mov
xchg
push
inc
retf
and
repz
cmp
sti
adc
outs
jo
cli
out
add
sub
test
pop
in
cmc
fidivr
dec
movs
pop
adc
jae
in
and
(bad)
jae
in
mov
sbb
jae
in
leave
cmp
fld
jb
adc
out
jg
retf
sub
adc
out
outs
call
adc
out
jg
sar
jb
add
not
retf
add
xor
scas
inc
call
dec
jo
dec
or
push
int3
shl
mov
jno
std
popf
cmp
mov
xor
jle
xor
adc
mov
sar
jb
sub
dec
ret
sbb
and
dec
retf
sbb
pop
and
sub
sti
jno
repz
and
sub
ret
jns
repz
xchg
adc
sti
jns
repz
xchg
adc
jmp
jb
aam
jns
sbb
pop
pop
or
sti
fs
inc
cld
mov
fmul
ret
cmp
xor
xchg
in
add
adc
es
pusha
mov
std
sbb
mov
repz
and
push
sbb
ror
and
jno
or
jo
cmp
dec
mov
mov
xchg
jecxz
and
add
and
popa
test
inc
xor
shl
sbb
dec
mov
pop
cmp
pminub
pop
adc
hlt
lea
or
int3
push
push
cdq
xchg
cmc
and
xchg
mov
and
pop
mov
and
(bad)
jae
in
leave
xor
(bad)
jb
adc
out
lock
jb
adc
out
lock
jb
adc
out
jg
retf
cmp
cmp
mov
jmp
or
mov
xlat
adc
sbb
data16
mov
jne
mov
and
sbb
jb
xor
inc
retf
or
xor
(bad)
dec
fadd
sbb
and
dec
ret
sbb
and
(bad)
daa
mov
popa
jb
dec
and
sub
ret
jno
repz
and
sub
sti
jns
repz
and
adc
sti
inc
jb
jge
xchg
sub
sbb
jb
xchg
and
adc
dec
add
outs
xor
add
in
push
test
add
cmp
cmps
add
add
div
ret
cmp
int
sar
sbb
inc
mov
sbb
mov
jno
repz
pop
iret
stos
loopne
and
inc
xor
pop
cmp
stos
stos
out
cwde
dec
loop
repz
or
push
xchg
shl
stos
test
cmp
or
popf
call
div
xor
xchg
lahf
push
mov
jae
std
and
lahf
adc
and
xchg
mov
jae
in
and
lahf
add
and
xchg
fcmovnbe
jae
in
mov
sbb
jae
in
mov
sbb
jae
in
leave
xor
fld
jb
adc
mov
stc
adc
(bad)
movs
or
push
int3
xchg
sub
jl
dec
out
mov
int
jno
and
sbb
cmp
add
not
sar
jb
add
inc
ret
adc
sub
neg
retf
or
sub
dec
retf
sbb
and
push
mov
popa
jb
dec
and
sub
sti
jns
repz
and
adc
sti
jns
repz
and
adc
sti
inc
jb
inc
and
adc
jmp
jne
and
sub
sub
cmp
jbe
stos
push
int3
push
add
out
stc
mov
rep
and
add
or
icebp
ss
lods
sub
jge
dec
mov
jb
ret
and
dec
jo
xchg
inc
xor
in
xor
imul
pop
sahf
pop
out
xchg
lods
push
icebp
sbb
enter
xor
loopne
jl
loop
gs
scas
xor
cmovnp
imul
mov
sbb
pop
and
int
rcl
(bad)
xchg
adc
and
xchg
adc
and
lahf
sbb
and
lahf
sbb
and
pop
mov
and
vphaddubw
in
and
(bad)
jb
sbb
mov
icebp
jmp
lods
lock
push
out
in
pop
jbe
ins
ror
int3
mov
lahf
fistp
std
push
lahf
push
jp
sbb
jg
fld
jb
adc
out
clc
sar
jb
add
out
push
rcl
add
cmp
neg
retf
add
xor
inc
retf
adc
sub
(bad)
dec
mov
sbb
pop
and
sub
sti
popa
jb
dec
and
sub
ret
jno
repz
and
adc
sti
inc
jb
inc
and
adc
ret
sbb
jne
sub
dec
ret
xchg
std
sbb
xchg
cmp
mov
repz
jno
sbb
lahf
mov
int
inc
jecxz
mov
mov
and
(bad)
repnz
ret
mov
push
dec
lods
retf
dec
rol
das
mov
hlt
jo
mov
xor
jno
sti
add
push
or
mov
dec
loopne
pop
hlt
call
fs
fist
(bad)
push
cmp
add
sbb
inc
test
repz
rcl
xchg
repz
rcl
(bad)
xchg
and
and
lahf
adc
and
xchg
sbb
and
xchg
mov
jae
in
and
xchg
mov
jae
in
and
ja
mov
jae
in
and
iret
or
jo
je
mov
daa
cmp
xchg
mov
aad
in
mov
sbb
jg
fld
jb
adc
out
clc
mov
and
cmp
sar
jb
add
out
push
rcl
cmp
cmp
neg
retf
or
sub
neg
sti
adc
sub
push
rol
jb
pop
and
adc
ret
popa
jb
pop
and
sub
sti
jns
repz
and
sub
ret
jns
repz
and
adc
retf
sbb
inc
and
and
sti
inc
jb
ins
and
add
jmp
jb
es
mov
inc
xchg
jmp
sbb
stos
pop
repnz
inc
test
pop
mov
and
ins
nop
arpl
addr16
inc
jp
or
dec
or
fldenv
sub
and
mov
sbb
mov
push
and
enter
aaa
and
jne
lds
cmps
and
lods
sub
(bad)
push
mov
jae
aad
rcl
mov
jae
int
rcl
mov
jae
aad
rcl
xchg
repz
and
cmps
adc
and
xchg
adc
and
lahf
adc
and
lahf
sbb
and
mov
mov
mov
lods
or
dec
int
add
lods
shl
push
and
ja
mov
and
xor
(bad)
jb
sbb
out
jg
mov
and
xor
sar
jb
add
out
push
call
xor
not
retf
or
sub
inc
sti
sbb
and
push
enter
repz
push
enter
repz
and
sub
ret
popa
jb
dec
and
sub
ret
jno
repz
and
adc
sti
dec
jb
jne
adc
mov
inc
pop
daa
jae
jmp
mov
lahf
jmp
pop
sbb
cli
inc
xchg
or
push
stos
imul
pop
call
push
lock
rcl
mov
ror
rcl
popa
scas
pushf
push
clc
aas
or
cmps
(bad)
xchg
pusha
adc
and
sbb
and
sbb
push
scas
mov
ror
and
mov
sub
repz
jmp
cmp
and
cmps
cmp
and
cmps
and
and
xchg
sbb
and
lahf
sbb
and
lahf
adc
and
mov
fwait
add
jle
rcr
gs
aaa
inc
daa
test
icebp
jae
sbb
(bad)
pop
mov
and
dec
sbb
ja
mov
and
ja
mov
and
xor
fstp
jb
add
out
outs
clc
sar
jb
cmp
neg
retf
or
xor
inc
ret
adc
sub
dec
retf
adc
sub
test
sub
push
mov
popa
jb
pop
and
and
sti
jno
repz
and
adc
sti
inc
jb
jge
test
nop
sti
dec
jb
jge
jns
sbb
push
cwde
add
adc
out
imul
dec
jnp
sbb
dec
icebp
aas
shl
es
dec
push
and
icebp
mov
outs
mov
les
pop
mov
xlat
shrd
in
outs
das
cmps
fadd
call
jns
sbb
scas
adc
mov
mov
xor
sbb
jae
movs
and
iret
dec
and
rep
and
mov
mov
jae
aad
jmp
xor
and
cmps
cmp
and
cmps
and
and
xchg
and
and
xchg
and
and
mov
jae
sbb
jge
call
into
stos
in
(bad)
mov
and
lahf
sbb
and
pop
mov
and
xchg
mov
jb
sbb
out
lock
and
dec
sbb
jg
sar
jb
cmp
out
outs
clc
retf
add
cmp
neg
retf
or
xor
neg
retf
or
xor
out
pop
ror
jb
sub
test
pop
and
sub
ret
popa
jb
dec
and
sub
sti
jns
repz
and
sub
sti
dec
jb
jne
test
cwde
jmp
jb
ins
and
hlt
sbb
cwde
add
neg
out
out
jnp
sbb
xor
jecxz
inc
repnz
mov
stc
mov
pusha
shl
not
cmps
out
iret
sar
out
jbe
xchg
repz
sbb
comiss
repz
popa
cld
sbb
jae
lods
and
mov
and
mov
sub
repz
loope
sbb
jae
aad
jmp
cmp
and
mov
repz
shr
mov
jae
aad
shr
mov
jae
int
jmp
and
jb
add
cmp
daa
gs
inc
sbb
jae
cmc
and
lahf
sbb
and
lahf
adc
and
(bad)
sbb
and
ja
mov
and
xor
fld
jb
add
out
push
call
add
not
rol
jb
cmp
not
rol
jb
xor
neg
retf
or
sub
dec
ret
adc
and
dec
ret
popa
jb
and
jmp
enter
repz
and
sub
sti
inc
jb
jge
test
nop
sti
dec
jb
ins
and
adc
sub
repz
jae
pop
int
lock
sub
jno
sbb
sti
repz
or
cmovno
bound
cli
gs
(bad)
nop
(bad)
cmp
xchg
rcl
in
push
loopne
fstp
pop
pop
dec
scas
add
jne
int3
and
cld
sbb
jae
lods
and
mov
and
iret
dec
mov
loope
sbb
jae
frstor
mov
mov
jae
movs
and
mov
sub
repz
mov
and
repz
mov
repz
loope
sbb
jae
aad
repnz
inc
xor
iret
jecxz
xor
xchg
repz
and
xchg
adc
and
lahf
adc
and
lahf
add
and
pop
mov
and
dec
sbb
jb
sbb
out
lock
jb
adc
out
outs
call
add
out
call
cmp
out
pop
ror
or
xor
neg
ret
adc
xor
test
and
push
enter
repz
and
adc
sti
inc
jb
jge
test
test
dec
jb
jne
xchg
adc
and
repz
or
and
mov
mov
mov
sub
cmps
push
mov
es
repnz
test
ss
(bad)
sbb
sbb
loop
mov
sar
cli
cmps
jns
sbb
jmp
xchg
mov
repz
imul
sub
in
cmps
(bad)
fstp
and
mov
and
mov
and
(bad)
dec
mov
stc
jge
mov
inc
mov
stc
sbb
jae
frstor
iret
dec
mov
jae
movs
and
iret
inc
mov
jae
frstor
mov
xchg
icebp
jae
inc
arpl
and
push
movs
pop
ror
ins
sbb
jae
int
shr
(bad)
xchg
and
and
lahf
adc
and
lahf
sbb
and
xchg
mov
jae
in
and
(bad)
jae
in
and
jg
(bad)
jb
sbb
out
clc
sar
jb
add
out
clc
sar
jb
add
not
retf
add
cmp
out
push
ror
or
xor
out
pop
fmul
or
sub
test
dec
and
adc
sti
jns
repz
mov
mov
jne
adc
xchg
and
stos
out
nop
jns
pop
add
dec
and
shl
aas
(bad)
dec
sbb
(bad)
adc
sar
mov
ret
repnz
jmp
loope
gs
icebp
rol
push
repnz
fs
lock
jae
bound
into
jnp
and
fwait
mov
test
fistp
mov
lods
and
mov
and
(bad)
pop
xchg
xchg
jae
lods
and
(bad)
dec
xchg
xchg
jae
lods
and
mov
and
iret
dec
mov
stc
jge
mov
inc
xchg
loope
repz
iret
xor
loope
repz
mov
mov
mov
and
mov
repz
jmp
and
and
xchg
and
and
xchg
adc
and
lahf
sbb
and
vphaddubw
in
leave
dec
sbb
jae
sbb
out
lock
jb
add
out
call
add
out
outs
call
cmp
out
push
rcl
add
sub
out
pop
fmul
or
sub
neg
ret
sbb
pop
and
sub
sti
jno
repz
and
sub
sti
inc
jb
jge
adc
dec
and
mov
push
cwde
mov
add
or
outs
enter
or
repz
jae
cmps
sub
cmc
or
pushf
mov
enter
stos
fisttp
adc
xor
sti
repz
aad
mov
adc
sbb
dec
out
sub
jae
test
out
popa
imul
jne
push
fild
mov
mov
icebp
jne
cmps
(bad)
pop
fwait
mov
mov
icebp
test
cmps
fild
mov
mov
icebp
jne
scas
(bad)
pop
fwait
mov
lods
and
mov
and
mov
and
mov
icebp
push
or
dec
sbb
jae
aad
loope
sbb
jae
aad
loope
sbb
jae
aad
jmp
cmp
and
xchg
and
and
lahf
sbb
and
xchg
mov
jae
in
and
xchg
mov
jae
in
leave
dec
sbb
(bad)
icebp
mov
and
xor
fld
jb
adc
out
clc
fld
jb
add
out
outs
rcl
cmp
xor
out
push
fmul
or
sub
neg
retf
or
sub
dec
retf
adc
pop
and
sub
ret
jns
repz
and
sub
sti
jns
repz
and
add
mov
add
sub
fsub
and
jg
out
and
adc
mov
div
push
mov
cmp
icebp
jmp
jae
mov
rol
jae
lea
out
popa
jnp
jae
lea
out
imul
icebp
test
push
out
pop
imul
test
push
out
pop
fwait
mov
mov
sbb
fwait
mov
mov
icebp
jge
cmps
(bad)
pop
mov
add
push
(bad)
pop
fwait
xchg
jae
movs
and
and
and
scas
iret
inc
mov
jae
frstor
mov
and
repz
loope
sbb
jae
aad
rcl
mov
jae
aad
loope
sbb
jae
int
shr
lahf
lahf
adc
and
lahf
sbb
and
pop
mov
jae
sbb
lahf
(bad)
jae
sbb
out
lock
and
xor
mov
and
xor
sar
jb
add
out
push
rcl
cmp
cmp
neg
retf
or
xor
jmp
fmul
mov
test
mov
jno
repz
and
sub
sti
jns
repz
and
sub
out
mov
cmp
aaa
aam
ja
scas
sub
adc
gs
bound
jnp
adc
cmp
sub
fisttp
pop
outs
mov
movs
sub
jns
add
mov
rcl
jg
jno
mov
repz
and
jmp
mov
repz
and
out
inc
mov
repz
out
jnp
jae
test
out
imul
adc
fwait
mov
test
fild
mov
mov
icebp
jge
dec
fistp
mov
gs
cmp
fwait
test
iret
inc
xchg
cdq
jae
movs
and
iret
xor
and
iret
xor
and
mov
sub
repz
loope
sbb
jae
std
and
cmps
adc
and
lahf
adc
and
xchg
mov
jae
in
fstp
pop
repz
leave
pop
sbb
jb
sbb
out
lock
jb
adc
out
clc
fstp
jb
add
out
clc
fstp
jb
add
out
push
ror
add
xor
(bad)
pop
fcomp
or
test
fs
dec
fadd
popa
jb
pop
and
sub
retf
jns
repz
stc
add
repz
repz
sub
sbb
jo
scas
gs
pop
stc
cs
test
adc
arpl
push
sbb
jne
and
(bad)
mov
or
popa
sub
mov
pop
ja
and
jae
popf
and
(bad)
jns
test
adc
inc
mov
repz
out
jnp
jae
lea
out
imul
popf
sbb
popa
jae
jae
test
out
popa
imul
test
push
fistp
test
icebp
push
inc
mov
mov
rep
and
mov
and
(bad)
dec
xchg
xchg
jae
movs
and
iret
inc
xchg
loope
rep
and
mov
mov
jae
frstor
cmps
cmp
and
cmps
and
and
xchg
and
and
lahf
adc
and
xchg
mov
jae
in
and
(bad)
jae
in
mov
sbb
jb
in
and
jg
fld
jb
adc
out
outs
clc
sar
jb
add
out
call
xor
xlat
pop
enter
repz
int
pop
cmp
jb
ins
and
in
sbb
out
cmp
mov
or
pop
push
repz
mov
test
imul
and
or
and
mov
xor
jmp
sahf
daa
jo
test
cmovl
pop
dec
and
outs
psllw
jae
gs
jns
popf
and
(bad)
jns
mov
repz
and
jmp
test
adc
jnp
jae
lea
out
imul
adc
jae
jae
mov
add
jae
jae
add
cmps
out
inc
imul
test
cmps
(bad)
pop
fwait
xchg
jae
lods
and
iret
dec
xchg
xchg
jae
lods
and
iret
dec
xchg
cdq
jae
movs
and
mov
mov
jae
frstor
mov
repz
mov
repz
jmp
and
and
xchg
adc
and
lahf
add
and
pop
(bad)
jb
in
mov
sbb
jb
in
leave
dec
sbb
ja
fld
jb
adc
out
clc
fstp
jb
add
out
outs
call
cmp
das
(bad)
mov
mov
and
mov
(bad)
jns
sub
test
aaa
das
fistp
jb
pop
and
adc
out
inc
retf
mov
jb
cmp
dec
addr16
sbb
js
cmp
nop
stos
and
scas
inc
xor
ret
pop
and
xchg
(bad)
in
mov
add
dec
jl
les
add
pop
and
push
rcr
pop
mov
jae
gs
jns
ins
and
div
mov
sub
dec
mov
sub
inc
test
sub
jnp
jae
lea
out
jnp
jae
lea
out
jae
jae
xchg
and
out
imul
sbb
imul
jne
cmps
fistp
xchg
jae
mov
add
fwait
xchg
jae
lods
and
iret
inc
xchg
cdq
jae
movs
and
iret
dec
mov
jae
aad
loope
sbb
jae
int
loope
sbb
jae
int
shr
(bad)
xchg
adc
and
lahf
sbb
and
lahf
sbb
and
vphaddubw
in
leave
dec
sbb
jg
mov
and
xor
sar
jb
adc
out
outs
clc
sar
jb
adc
das
(bad)
mov
inc
and
cmpxchg8b
(bad)
enter
push
add
(bad)
loopne
call
xor
(bad)
jmp
sbb
mov
mov
int
das
jge
loopne
repnz
iret
mov
test
cli
es
push
inc
outs
xlat
stc
test
gs
inc
aad
cmp
jle
dec
adc
pop
push
push
push
jae
gs
pop
mov
jae
ins
and
jno
popf
and
push
mov
and
inc
mov
and
inc
test
sub
jnp
jae
lea
out
popa
jnp
jae
test
out
popa
imul
test
dec
out
popa
jnp
jae
test
fistp
mov
mov
stc
jne
scas
mov
and
mov
and
iret
dec
xchg
loope
repz
mov
repz
loope
sbb
jae
int
jmp
and
and
lahf
adc
and
xchg
sbb
and
xchg
mov
jae
in
and
ja
mov
and
dec
sbb
jb
adc
out
outs
lock
jb
adc
daa
out
add
jb
jge
imul
mov
loop
mov
sbb
aaa
xchg
repz
stc
fwait
or
jmp
dec
dec
mov
adc
jo
add
popa
fadd
jge
stos
cmp
repnz
mov
out
jecxz
enter
jo
sahf
lahf
ss
je
gs
movs
jbe
iret
(bad)
dec
clc
xchg
(bad)
or
movs
jo
or
popa
xor
repz
inc
lds
pop
pop
test
jne
cmp
push
pop
jae
ins
and
jno
gs
jns
popf
and
div
test
sub
jnp
jae
xchg
and
out
jnp
jae
lea
out
jae
jae
lea
out
jnp
jae
test
out
imul
add
jae
jae
mov
icebp
popf
sbb
pop
imul
jge
cmps
iret
inc
fwait
xchg
jae
lods
and
mov
mov
jae
aad
loope
sbb
jae
aad
jmp
and
and
xchg
adc
and
lahf
sbb
and
xchg
mov
jae
in
fstp
lahf
pop
mov
and
xor
mov
jae
in
leave
dec
sbb
ja
fld
jb
adc
(bad)
xlat
shr
and
pop
and
xor
arpl
jne
pop
fwait
add
cmps
cmps
call
adc
mov
mov
xchg
xchg
ret
clc
sar
push
xor
sbb
ins
jg
(bad)
retf
je
xchg
das
out
or
xchg
mov
pop
mov
in
call
mov
pop
cmps
sbb
and
das
imul
and
das
test
jne
inc
fstp
outs
pop
cdq
sub
rep
and
pop
adc
cmp
dec
pop
jae
gs
div
mov
sub
inc
test
sub
jnp
jae
lea
out
jnp
jae
lea
out
popa
jnp
jae
test
out
jnp
jae
test
out
imul
add
fwait
mov
lods
and
mov
and
iret
inc
mov
jae
frstor
mov
repz
loope
sbb
jae
int
jmp
adc
and
xchg
and
and
lahf
sbb
and
xchg
mov
jae
in
leave
dec
sbb
jae
in
fstp
lahf
ja
mov
and
xor
sti
xor
pop
pop
daa
fild
and
push
jae
add
sbb
jg
data16
stos
mov
test
jecxz
fiadd
or
add
ja
push
jb
mov
mov
mov
sbb
cmp
out
fnsave
sub
fcom
lods
fsub
mov
in
sbb
xor
inc
jno
jns
repz
and
das
cdq
xor
repz
and
pop
cdq
sub
repz
inc
lds
outs
pop
cdq
push
dec
jae
jne
cmp
push
push
jae
ins
and
pop
adc
and
dec
mov
and
inc
mov
sub
inc
test
sub
inc
test
adc
jnp
jae
lea
out
imul
add
fwait
mov
mov
add
push
mov
and
(bad)
pop
mov
stc
jge
mov
xor
and
cmps
cmp
and
cmps
cmp
and
xchg
adc
and
lahf
adc
and
xchg
mov
jae
in
and
pop
mov
and
(bad)
jae
sbb
out
or
dec
jb
test
add
ret
xchg
jne
xchg
and
push
pop
dec
push
cs
add
es
clc
fisubr
dec
(bad)
jns
fild
xor
sub
cli
mov
retf
cmp
js
sub
mov
adc
bnd
and
mov
mov
pop
add
inc
mov
jb
adc
push
daa
imul
and
daa
test
dec
and
das
cdq
xor
repz
and
das
cdq
sub
rep
and
pop
cdq
push
dec
jae
jne
cmp
dec
pop
jae
ins
and
test
sbb
mov
jae
gs
div
mov
sub
inc
test
adc
jnp
jae
lea
out
imul
sbb
jae
jae
test
fistp
mov
lods
and
(bad)
pop
xchg
xchg
jae
lods
and
iret
dec
fwait
cdq
jae
movs
and
mov
repz
loope
sbb
jae
int
jmp
and
and
xchg
adc
and
lahf
sbb
and
xchg
mov
jae
in
and
xchg
mov
jae
in
(bad)
pop
repz
and
add
test
fist
ds
pop
jns
in
cdq
imul
or
adc
pop
cmp
jp
ret
enter
fisubr
adc
dec
mov
jnp
and
pop
(bad)
rcr
cli
rep
xor
pop
sbb
lahf
shl
jb
mov
jno
pop
aas
aaa
stc
or
repz
and
daa
mov
dec
and
das
test
jne
pop
fstp
pop
das
test
jne
inc
fstp
pop
pop
cdq
xor
repz
inc
lds
outs
pop
cdq
push
push
jae
ins
and
jns
gs
jns
popf
and
jns
popf
and
push
test
sub
inc
mov
repz
out
jnp
jae
test
out
imul
sbb
imul
popf
sbb
jae
movs
and
iret
dec
fwait
cdq
jae
movs
and
mov
mov
jae
frstor
mov
repz
loope
sbb
jae
std
and
lahf
adc
and
lahf
adc
and
xchg
mov
and
xchg
mov
jae
in
and
(bad)
jb
dec
and
cmp
jmp
jne
int
inc
cmps
data16
mov
adc
jns
fimul
std
mov
cmp
or
push
int
not
jmp
(bad)
pop
mov
cmp
adc
cmc
pop
ja
movs
push
or
rcl
and
jb
and
xchg
sub
cld
and
mov
aaa
aaa
test
push
and
aas
mov
push
and
das
mov
inc
and
pop
test
inc
and
pop
test
jne
cmp
sbb
pop
cdq
push
dec
jae
ins
and
pop
cdq
push
push
jae
jne
cmp
dec
pop
jae
gs
jns
gs
div
mov
and
inc
test
sub
jnp
jae
lea
out
jnp
jae
test
out
imul
sbb
imul
jne
scas
mov
and
iret
dec
xchg
cdq
jae
frstor
mov
mov
jae
aad
loope
sbb
jae
int
jmp
and
and
xchg
adc
and
lahf
sbb
and
lahf
sbb
and
xchg
mov
and
push
int
loopne
inc
in
call
jge
inc
mov
xor
test
mov
fwait
sbb
mov
xlat
push
jl
xor
sub
adc
test
mov
xor
mov
pshufw
jb
inc
and
in
sbb
fs
sub
(bad)
sti
ins
add
jmp
pop
and
aaa
mov
imul
sbb
aas
mov
jno
repz
and
das
mov
inc
and
das
test
inc
and
pop
mov
jne
inc
fstp
outs
pop
test
ins
and
pop
adc
and
dec
mov
and
dec
mov
and
inc
mov
adc
inc
test
adc
jnp
jae
test
out
imul
sbb
imul
test
cmps
mov
and
(bad)
dec
fwait
cdq
jae
movs
and
mov
repz
loope
sbb
jae
aad
jmp
and
and
xchg
adc
and
lahf
sbb
and
lahf
sbb
and
xchg
mov
jae
in
fstp
(bad)
push
sbb
and
xor
sub
pop
pop
mov
cdq
pop
xor
or
jb
push
fmul
scas
mov
repz
jne
outs
jmp
pop
jb
add
xchg
cmc
sbb
dec
call
pop
and
sub
xor
jge
push
and
and
or
jae
and
aaa
aaa
leave
or
repz
and
aas
leave
add
repz
and
daa
mov
push
and
daa
test
inc
and
das
mov
inc
and
das
cdq
sub
repz
inc
fstp
pop
pop
cdq
push
dec
jae
ins
and
pop
or
cmp
dec
pop
jae
gs
(bad)
dec
mov
sub
inc
mov
sub
jnp
jae
lea
out
jae
jae
test
out
popa
jae
jae
mov
add
imul
test
cmps
iret
inc
mov
stc
jge
cmps
iret
dec
fwait
cdq
jae
frstor
mov
mov
jae
aad
loope
sbb
jae
int
jmp
and
and
xchg
adc
and
xchg
adc
and
xchg
mov
jae
in
and
lahf
add
and
aaa
add
xor
lods
and
pop
sbb
aaa
lock
and
sub
fwait
cmp
push
add
out
(bad)
not
stos
popa
fcomp
das
mov
repz
test
and
push
mov
lea
sub
jecxz
jae
es
dec
leave
add
repz
and
aaa
mov
popa
jae
push
and
aas
mov
inc
and
aas
test
inc
and
das
test
inc
and
das
cdq
xor
repz
pop
fstp
sysret
cdq
sub
repz
cmp
sbb
cdq
push
push
jae
ins
and
pop
adc
cmp
dec
mov
and
dec
mov
sub
inc
test
adc
jae
jae
test
out
imul
icebp
test
cmps
(bad)
pop
imul
popf
sbb
pop
mov
icebp
jne
cmps
(bad)
dec
imul
jne
scas
mov
xchg
loope
repz
loope
sbb
jae
int
jmp
and
and
cmps
adc
and
xchg
sbb
and
xchg
mov
and
xchg
mov
jae
in
and
xchg
mov
jae
in
and
ja
fld
jb
cmp
daa
cs
icebp
int3
xor
jmp
das
xchg
arpl
sbb
pop
sub
or
sub
test
and
div
enter
repz
and
adc
jmp
jae
cs
dec
leave
or
repz
and
aaa
mov
popa
jae
pop
and
aas
mov
imul
sbb
aas
mov
dec
and
daa
mov
inc
and
das
mov
inc
and
pop
test
jne
cmp
sbb
pop
cdq
push
dec
jae
ins
and
pop
adc
cmp
dec
mov
and
dec
mov
sub
inc
test
adc
jnp
jae
lea
out
popa
jae
jae
mov
add
jae
jae
lods
and
(bad)
pop
xchg
cdq
jae
movs
and
(bad)
dec
fwait
xchg
jae
movs
and
iret
dec
xchg
loope
repz
mov
repz
shl
mov
cmp
and
cmps
and
and
xchg
adc
and
xchg
adc
and
xchg
mov
jae
in
and
xchg
mov
and
dec
sbb
jg
shr
jb
adc
out
outs
clc
mov
gs
ret
out
dec
aaa
or
jne
pop
and
test
or
xor
inc
ret
sbb
pop
and
and
ret
jno
repz
and
sub
jmp
jae
ds
inc
shl
jae
cs
dec
shr
jae
es
dec
leave
add
repz
and
aaa
mov
push
and
aas
mov
dec
and
daa
mov
inc
and
pop
test
jne
pop
fstp
nop
jne
cmp
sbb
cdq
push
push
jae
ins
and
jno
ins
and
pop
or
and
inc
mov
sub
inc
test
adc
jnp
jae
lea
out
pop
jae
jae
mov
add
imul
test
push
mov
and
iret
inc
xchg
cdq
jae
movs
and
mov
xchg
loope
repz
shl
mov
jae
aad
loope
sbb
jae
aad
jmp
and
and
xchg
adc
and
lahf
sbb
and
(bad)
jae
sbb
(bad)
ja
mov
and
xor
retf
pop
jb
out
jmp
pop
xchg
dec
bndldx
mov
call
cmp
not
retf
adc
and
test
and
xlat
push
mov
cs
inc
shr
jae
cs
inc
shl
jae
and
das
aaa
mov
sbb
pop
and
dec
mov
popa
jae
pop
and
aas
mov
push
and
daa
mov
dec
and
das
test
dec
and
das
test
inc
and
pop
cdq
sub
rep
and
pop
cdq
push
push
jae
ins
and
jno
ins
and
jns
gs
div
mov
adc
jnp
jae
lea
out
imul
add
jae
jae
lods
and
mov
and
mov
and
mov
xchg
loope
repz
loope
sbb
jae
aad
loope
sbb
jae
aad
loope
sbb
jae
int
jmp
and
and
lahf
sbb
and
xchg
mov
jae
in
fstp
lahf
ja
mov
and
dec
sbb
ja
mov
and
adc
sar
jb
add
out
push
call
cmp
out
push
rcl
or
xor
test
pop
and
sub
repz
ds
push
shr
add
cs
inc
shr
jae
cs
dec
shl
jae
es
aaa
leave
add
repz
and
aas
leave
add
repz
and
aas
mov
dec
and
daa
mov
dec
and
daa
mov
jne
pop
fstp
comiss
inc
and
pop
cdq
push
dec
jae
ins
and
setns
jae
gs
jns
popf
and
div
pop
jae
popf
and
out
jnp
jae
xchg
and
out
imul
sbb
jae
jae
mov
add
imul
test
push
fild
xchg
jae
movs
and
iret
dec
xchg
loope
repz
iret
dec
mov
jae
frstor
mov
mov
jae
frstor
mov
repz
jmp
and
and
lahf
adc
and
lahf
sbb
and
(bad)
sbb
and
dec
sbb
jb
sbb
ja
pop
fwait
pop
jb
sbb
out
call
cmp
out
push
rcr
add
xor
test
and
mul
cmp
push
and
ins
jmp
push
and
push
shr
adc
cs
dec
leave
jmp
jae
es
aaa
leave
adc
jae
and
aaa
aaa
leave
add
repz
and
aas
mov
push
and
daa
mov
push
and
das
mov
jne
pop
fstp
pop
das
cdq
xor
repz
inc
lds
pop
pop
cdq
sub
repz
inc
mov
push
pop
jae
ins
and
jns
gs
test
sbb
jno
test
adc
jnp
jae
test
out
imul
add
imul
test
dec
fild
mov
lods
and
iret
dec
fwait
cdq
jae
movs
and
iret
dec
mov
jae
movs
and
mov
mov
jae
frstor
mov
repz
jmp
and
and
xchg
and
and
xchg
adc
and
xchg
mov
and
(bad)
jb
sbb
out
lock
and
xor
rol
jb
add
not
retf
or
sub
out
pop
ror
jb
and
mul
xor
push
and
fs
push
and
ins
jmp
cs
inc
shl
jae
cs
inc
shl
jae
es
dec
leave
or
jae
pop
and
aaa
mov
sbb
pop
and
aas
mov
push
and
daa
mov
inc
and
das
cdq
cmp
repz
and
pop
test
jne
inc
lds
pop
pop
cdq
sub
rep
and
pop
cdq
dec
pop
jae
ins
and
jno
popf
and
test
sbb
jns
test
adc
jnp
jae
mov
sbb
imul
test
push
fild
xchg
jae
lods
and
mov
and
iret
dec
xchg
cdq
jae
movs
and
iret
dec
mov
loope
sbb
jae
aad
loope
sbb
jae
int
jmp
and
and
xchg
adc
and
lahf
sbb
and
(bad)
jb
sbb
lahf
(bad)
icebp
(bad)
jb
adc
out
clc
fstp
jb
adc
out
push
call
xor
xlat
mov
sbb
jb
lods
and
add
daa
jno
ins
and
push
mov
mov
add
add
add
sub
sub
add
add
add
add
add
sub
add
add
sub
add
sub
sub
add
sub
add
sub
add
sub
add
add
add
sub
sub
sub
sub
add
add
add
add
mov
mov
mov
sub
sub
add
sub
sub
add
sub
sub
sub
add
add
add
sub
sub
sub
add
sub
sub
add
add
sub
add
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
mov
mov
mov
add
sub
add
sub
sub
sub
add
add
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
add
add
add
sub
sub
sub
sub
add
add
sub
mov
mov
mov
add
sub
sub
sub
sub
add
sub
add
add
sub
sub
sub
sub
add
sub
sub
add
add
sub
add
sub
add
add
sub
sub
sub
add
add
sub
add
sub
add
sub
add
sub
sub
sub
sub
sub
add
add
sub
sub
sub
add
add
sub
sub
sub
add
add
sub
sub
sub
mov
mov
mov
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
add
add
sub
add
add
add
sub
add
sub
add
sub
sub
add
sub
add
add
add
sub
add
add
sub
add
sub
add
sub
sub
add
sub
add
add
sub
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
sub
sub
add
sub
sub
add
mov
mov
mov
add
sub
add
sub
sub
sub
add
add
sub
add
add
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
add
sub
sub
mov
mov
mov
add
sub
sub
add
sub
add
sub
add
add
sub
add
sub
add
add
sub
add
sub
sub
add
sub
add
sub
sub
sub
add
add
sub
sub
add
add
add
sub
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
sub
add
sub
sub
add
sub
sub
sub
mov
mov
mov
add
add
sub
add
add
add
sub
add
sub
add
add
add
add
add
mov
mov
mov
sub
sub
sub
sub
add
sub
add
sub
sub
add
add
sub
add
sub
add
sub
sub
add
add
sub
add
add
add
add
add
add
sub
add
sub
add
add
add
add
sub
sub
sub
add
add
add
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
add
add
sub
add
sub
add
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
add
add
add
add
sub
sub
add
mov
mov
mov
sub
add
add
sub
add
sub
add
sub
add
add
sub
sub
sub
sub
add
add
add
add
sub
add
add
sub
sub
add
add
sub
sub
sub
add
sub
mov
mov
mov
add
add
add
sub
add
sub
add
add
add
sub
add
sub
sub
sub
sub
add
add
sub
add
add
sub
add
sub
sub
add
sub
add
sub
add
sub
add
sub
sub
add
sub
sub
sub
add
sub
add
sub
sub
sub
add
sub
sub
add
sub
mov
mov
mov
add
add
sub
sub
add
add
sub
add
add
add
sub
add
add
add
sub
sub
add
sub
sub
add
sub
sub
add
sub
add
sub
sub
add
add
sub
sub
sub
sub
sub
sub
add
add
add
mov
mov
mov
add
sub
add
sub
add
sub
sub
sub
sub
add
sub
add
add
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
add
add
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
add
add
sub
add
sub
sub
add
add
sub
add
sub
sub
add
add
add
sub
add
sub
mov
mov
mov
sub
add
sub
add
sub
sub
sub
sub
add
add
sub
add
sub
sub
add
sub
add
sub
add
sub
add
sub
sub
sub
sub
add
sub
add
sub
sub
add
sub
add
add
sub
add
add
sub
add
sub
add
sub
sub
add
sub
add
sub
sub
add
add
sub
sub
sub
sub
mov
mov
mov
add
add
sub
sub
sub
add
add
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
add
sub
sub
sub
add
sub
sub
sub
add
sub
add
add
add
sub
sub
sub
sub
sub
add
add
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
add
sub
sub
add
add
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
sub
sub
sub
sub
add
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
add
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
add
add
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
add
sub
sub
sub
sub
sub
sub
sub
add
add
add
add
sub
sub
add
add
add
add
sub
add
add
add
sub
add
sub
sub
add
add
sub
sub
add
add
sub
add
sub
sub
sub
sub
add
sub
sub
add
sub
add
sub
add
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
sub
add
sub
add
sub
add
add
add
sub
sub
add
add
add
sub
add
add
sub
add
add
add
add
sub
add
add
sub
sub
sub
add
sub
mov
mov
mov
add
sub
sub
sub
sub
add
add
sub
add
add
sub
sub
sub
sub
add
sub
sub
add
sub
add
add
add
add
add
sub
sub
sub
add
sub
sub
add
sub
add
add
sub
sub
sub
sub
sub
sub
add
add
add
sub
sub
add
sub
sub
sub
sub
mov
mov
mov
sub
add
sub
add
add
sub
sub
sub
add
sub
add
add
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
add
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
add
sub
add
sub
sub
sub
sub
mov
mov
mov
sub
sub
add
sub
add
sub
sub
sub
add
add
sub
add
add
add
sub
sub
sub
add
add
add
add
add
add
add
add
sub
sub
sub
add
add
add
sub
sub
sub
sub
add
add
add
add
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
add
sub
add
add
sub
add
sub
sub
sub
sub
add
add
sub
sub
add
sub
sub
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
sub
sub
sub
add
add
sub
sub
sub
add
sub
add
sub
sub
sub
mov
mov
mov
add
add
sub
add
sub
sub
sub
sub
sub
add
sub
sub
add
add
sub
sub
sub
add
sub
sub
add
add
sub
add
sub
add
sub
add
add
sub
add
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
add
sub
add
sub
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
sub
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
sub
add
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
sub
sub
add
add
add
add
add
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
add
add
sub
sub
sub
sub
add
add
add
add
sub
sub
sub
mov
mov
mov
sub
add
add
sub
sub
sub
add
sub
add
sub
sub
sub
add
add
add
add
add
sub
add
add
sub
add
sub
sub
add
sub
add
add
sub
sub
add
sub
sub
sub
add
sub
sub
add
sub
add
add
add
add
add
mov
mov
mov
add
add
sub
sub
sub
sub
sub
sub
sub
sub
add
add
sub
add
add
sub
sub
add
sub
sub
add
add
sub
add
add
sub
sub
add
sub
add
sub
sub
sub
add
mov
mov
mov
sub
add
sub
add
sub
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
add
add
add
add
add
sub
sub
sub
add
add
sub
sub
sub
sub
sub
add
sub
sub
add
add
sub
add
sub
sub
sub
sub
sub
add
add
add
add
sub
sub
add
add
mov
mov
mov
sub
add
sub
add
add
add
sub
sub
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
add
add
add
add
add
sub
sub
sub
mov
mov
mov
add
sub
sub
sub
sub
sub
add
sub
add
add
add
sub
add
sub
mov
mov
mov
add
sub
sub
sub
sub
sub
add
sub
add
add
sub
add
sub
add
add
add
add
sub
sub
sub
mov
mov
mov
add
sub
add
sub
add
add
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
add
add
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
add
add
sub
sub
mov
mov
mov
sub
add
add
sub
sub
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
sub
add
sub
sub
add
sub
mov
mov
mov
sub
add
add
add
sub
add
add
add
mov
mov
mov
sub
sub
add
sub
add
sub
sub
sub
sub
add
sub
sub
add
add
sub
add
add
sub
add
add
sub
sub
sub
add
sub
add
sub
sub
sub
add
add
add
add
add
sub
sub
add
sub
add
add
add
sub
add
sub
mov
mov
mov
sub
sub
add
sub
sub
add
sub
sub
add
add
add
sub
add
add
add
sub
mov
mov
mov
add
add
sub
sub
add
add
sub
add
sub
sub
add
sub
add
sub
sub
sub
add
sub
sub
sub
sub
add
add
sub
sub
sub
add
sub
mov
mov
mov
add
sub
add
add
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
sub
sub
add
sub
sub
sub
add
sub
sub
add
add
sub
add
sub
sub
add
add
sub
sub
add
add
add
add
add
add
add
sub
add
sub
add
add
add
add
sub
add
add
mov
mov
mov
add
sub
sub
add
sub
sub
sub
add
add
add
sub
sub
sub
sub
sub
add
add
sub
sub
add
sub
add
add
add
sub
add
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
mov
mov
mov
add
sub
sub
add
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
add
sub
add
add
add
add
add
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
add
sub
sub
add
add
sub
sub
add
sub
sub
sub
sub
sub
add
add
add
sub
add
mov
mov
mov
sub
add
add
sub
sub
sub
add
add
sub
sub
add
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
sub
add
add
sub
add
sub
add
sub
sub
add
sub
sub
mov
mov
mov
add
sub
add
add
sub
sub
sub
sub
add
sub
sub
sub
add
sub
sub
add
add
sub
sub
add
add
add
add
sub
sub
sub
add
sub
add
sub
sub
add
sub
add
add
add
add
sub
mov
mov
mov
sub
sub
add
sub
add
add
add
sub
add
add
add
add
sub
add
sub
sub
sub
sub
add
add
sub
sub
add
add
add
sub
sub
add
add
add
mov
mov
mov
sub
sub
add
add
add
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
sub
mov
mov
mov
add
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
add
add
sub
add
sub
add
sub
sub
sub
add
sub
add
sub
add
sub
add
sub
sub
add
add
sub
add
sub
add
add
add
sub
add
sub
sub
add
add
sub
add
mov
mov
mov
add
add
add
sub
sub
add
sub
sub
add
add
add
sub
sub
sub
sub
add
sub
add
add
add
add
add
add
add
add
add
sub
add
add
sub
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
add
sub
sub
add
sub
mov
mov
mov
add
add
sub
add
add
add
sub
sub
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
add
add
add
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
add
add
sub
sub
add
sub
sub
add
sub
sub
add
sub
sub
sub
add
add
sub
add
add
sub
add
sub
sub
sub
add
sub
add
sub
add
add
sub
sub
add
add
sub
add
add
sub
add
mov
mov
mov
add
sub
sub
add
add
add
sub
add
add
sub
add
add
sub
sub
sub
add
sub
add
add
add
add
add
mov
mov
mov
add
sub
sub
add
sub
add
add
sub
sub
add
sub
sub
add
sub
add
add
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
mov
mov
mov
sub
add
sub
sub
add
add
add
add
add
sub
add
sub
sub
sub
sub
sub
sub
sub
add
add
sub
add
sub
sub
sub
sub
add
add
add
add
add
sub
sub
sub
add
sub
sub
sub
sub
sub
add
add
add
sub
add
sub
mov
mov
mov
sub
sub
add
sub
add
add
add
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
add
sub
add
sub
mov
mov
mov
sub
sub
add
add
sub
add
sub
add
sub
sub
sub
sub
sub
add
add
sub
add
sub
add
add
sub
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
add
add
sub
sub
add
add
add
add
sub
sub
add
sub
add
add
sub
sub
add
add
sub
sub
sub
sub
sub
add
sub
mov
mov
mov
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
add
add
add
sub
add
add
add
add
add
sub
sub
add
add
add
sub
sub
add
sub
sub
sub
add
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
mov
mov
mov
add
sub
add
sub
sub
sub
sub
sub
add
sub
add
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
add
add
sub
sub
sub
add
sub
add
sub
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
add
add
sub
add
add
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
add
add
sub
sub
add
sub
sub
add
add
sub
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
add
add
sub
sub
add
sub
add
mov
mov
mov
add
add
sub
add
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
add
sub
add
add
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
add
add
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
mov
mov
mov
add
sub
sub
sub
add
sub
add
add
add
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
add
add
sub
sub
sub
sub
sub
add
sub
add
sub
add
add
sub
sub
sub
sub
add
sub
add
add
sub
sub
sub
sub
add
sub
sub
add
add
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
sub
add
add
sub
sub
sub
sub
sub
mov
mov
mov
sub
add
add
add
sub
sub
sub
add
sub
add
sub
add
mov
mov
mov
sub
add
sub
add
sub
add
add
sub
sub
sub
sub
sub
sub
sub
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
add
add
add
sub
sub
sub
sub
add
sub
add
add
add
sub
add
add
add
sub
sub
sub
sub
mov
mov
mov
add
add
add
sub
sub
sub
add
sub
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
add
add
sub
add
add
sub
add
sub
sub
sub
sub
mov
mov
mov
add
add
sub
sub
add
sub
add
add
sub
add
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
add
add
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
add
sub
sub
sub
add
add
sub
sub
add
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
add
sub
add
add
sub
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
mov
mov
mov
sub
add
sub
sub
sub
add
add
sub
sub
add
add
sub
sub
add
add
sub
sub
sub
sub
add
sub
add
sub
add
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
add
add
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
add
sub
sub
sub
add
add
add
add
sub
add
sub
sub
add
add
add
sub
sub
sub
add
add
add
add
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
mov
mov
mov
add
add
add
add
sub
sub
sub
add
sub
add
sub
add
add
add
sub
add
mov
mov
mov
add
sub
add
sub
sub
add
add
sub
add
sub
add
add
add
sub
sub
add
sub
add
add
sub
sub
sub
sub
add
sub
add
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
add
sub
add
sub
mov
mov
mov
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
add
sub
sub
add
add
sub
add
sub
add
add
add
add
sub
sub
mov
mov
mov
sub
sub
add
add
sub
sub
add
sub
sub
sub
sub
add
sub
add
sub
add
sub
add
sub
sub
add
sub
sub
add
sub
sub
add
sub
add
sub
sub
sub
mov
mov
mov
add
add
add
sub
sub
add
sub
sub
add
sub
sub
sub
add
add
sub
sub
add
sub
add
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
add
add
add
add
add
add
sub
sub
sub
add
sub
add
sub
sub
sub
add
sub
sub
sub
add
mov
mov
mov
sub
sub
add
add
sub
sub
sub
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
sub
sub
add
sub
add
add
add
sub
sub
add
sub
add
add
sub
add
sub
add
sub
mov
mov
mov
add
add
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
mov
mov
mov
sub
sub
add
sub
add
sub
sub
add
sub
add
sub
add
sub
sub
sub
add
sub
sub
add
sub
add
add
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
mov
mov
mov
add
add
add
add
sub
add
sub
add
add
add
sub
add
sub
add
add
sub
add
add
add
add
mov
mov
mov
sub
sub
add
sub
sub
sub
add
sub
mov
mov
mov
add
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
add
add
sub
sub
mov
mov
mov
sub
add
add
add
sub
sub
add
sub
add
sub
add
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
add
add
sub
sub
sub
add
sub
sub
sub
sub
add
add
add
add
sub
sub
sub
sub
sub
add
sub
sub
add
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
mov
mov
mov
add
sub
add
sub
add
sub
add
add
add
sub
sub
sub
add
sub
sub
sub
add
add
add
sub
sub
sub
sub
sub
add
sub
sub
add
add
add
add
sub
sub
sub
sub
sub
add
add
add
sub
mov
mov
mov
sub
sub
sub
add
add
add
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
mov
mov
mov
add
sub
sub
add
sub
add
add
sub
sub
add
sub
add
sub
sub
sub
sub
add
sub
sub
add
sub
add
add
sub
add
add
add
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
add
sub
sub
sub
sub
sub
sub
add
add
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
add
add
sub
add
sub
add
sub
add
add
sub
sub
sub
sub
sub
sub
add
sub
add
sub
mov
mov
mov
sub
add
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
sub
add
add
add
add
sub
sub
sub
sub
sub
mov
mov
mov
add
add
add
sub
sub
add
sub
sub
sub
add
add
add
sub
sub
sub
add
sub
add
sub
sub
sub
add
sub
sub
sub
sub
add
add
sub
sub
add
add
sub
add
sub
sub
add
sub
sub
add
sub
sub
sub
add
sub
add
mov
mov
mov
add
sub
sub
sub
sub
add
add
add
sub
sub
add
add
sub
add
sub
sub
sub
sub
add
add
add
sub
sub
add
add
sub
sub
sub
sub
add
sub
add
mov
mov
mov
sub
add
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
add
sub
add
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
add
add
add
sub
sub
sub
sub
add
sub
sub
add
add
sub
sub
mov
mov
mov
add
sub
add
sub
add
add
sub
sub
sub
sub
add
add
sub
sub
add
sub
sub
sub
add
add
add
sub
add
add
add
add
add
sub
add
sub
sub
sub
sub
sub
add
add
sub
add
add
sub
add
sub
add
sub
mov
mov
mov
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
add
add
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
add
sub
sub
add
sub
add
add
sub
sub
mov
mov
mov
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
sub
add
sub
add
sub
sub
add
add
sub
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
add
sub
sub
sub
sub
sub
add
sub
sub
add
add
add
sub
add
sub
sub
add
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
sub
add
sub
add
sub
add
sub
add
sub
sub
add
add
sub
sub
sub
sub
add
sub
add
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
mov
mov
mov
sub
sub
sub
add
add
add
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
add
add
sub
sub
sub
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
sub
sub
sub
sub
add
sub
add
sub
sub
add
add
add
sub
add
sub
sub
sub
add
mov
mov
mov
add
add
sub
add
add
sub
add
add
sub
sub
sub
sub
add
add
mov
mov
mov
add
add
add
sub
sub
add
sub
sub
sub
add
add
add
sub
sub
add
sub
add
sub
sub
sub
add
add
add
add
sub
add
sub
sub
add
sub
add
sub
sub
add
sub
add
sub
add
add
add
sub
sub
sub
add
sub
sub
sub
add
mov
mov
mov
add
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
add
sub
add
sub
add
add
sub
add
add
sub
add
sub
add
add
sub
add
sub
sub
mov
mov
mov
add
add
add
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
add
add
sub
add
add
add
sub
mov
mov
mov
add
add
add
sub
add
sub
add
add
add
add
mov
mov
mov
sub
add
sub
add
mov
mov
mov
add
sub
sub
sub
add
sub
sub
add
sub
sub
add
add
add
sub
sub
add
add
sub
mov
mov
mov
sub
sub
add
sub
add
add
sub
add
sub
add
add
sub
sub
sub
sub
add
mov
mov
mov
add
add
add
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
add
add
sub
sub
add
add
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
add
sub
sub
add
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
add
sub
sub
sub
add
add
add
sub
add
sub
add
sub
sub
add
sub
sub
sub
add
add
sub
add
add
add
add
add
add
add
sub
sub
sub
sub
add
add
sub
sub
add
sub
add
add
add
add
sub
sub
sub
add
sub
add
add
sub
add
sub
sub
add
sub
sub
sub
add
mov
mov
mov
sub
sub
add
sub
sub
sub
add
sub
sub
add
add
add
sub
add
sub
sub
add
sub
sub
sub
add
sub
add
sub
add
sub
mov
mov
mov
sub
sub
sub
add
add
add
sub
add
mov
mov
mov
sub
sub
sub
add
sub
sub
sub
add
mov
mov
mov
sub
sub
sub
add
add
sub
add
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
add
add
add
sub
sub
sub
mov
mov
mov
add
add
sub
sub
add
add
add
add
mov
mov
mov
add
add
add
add
add
add
sub
sub
add
add
sub
add
add
sub
add
add
sub
add
add
add
add
add
mov
mov
mov
sub
sub
sub
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
add
sub
sub
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
add
add
add
sub
sub
add
sub
add
add
sub
add
add
add
add
add
sub
mov
mov
mov
add
add
sub
add
sub
add
sub
sub
sub
add
sub
add
add
sub
add
add
sub
sub
sub
sub
sub
sub
add
add
add
add
add
sub
sub
sub
sub
sub
sub
add
mov
mov
mov
sub
sub
sub
add
sub
sub
sub
add
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
add
add
add
add
add
add
sub
sub
add
mov
mov
mov
add
sub
add
add
add
add
sub
sub
sub
add
add
add
add
sub
sub
add
add
sub
sub
add
add
sub
sub
add
sub
sub
sub
add
sub
add
mov
mov
mov
sub
add
add
sub
sub
add
add
sub
sub
add
add
add
add
sub
sub
sub
add
sub
sub
sub
add
add
sub
add
sub
add
sub
sub
add
sub
sub
sub
sub
sub
add
add
sub
sub
mov
mov
mov
add
add
add
add
sub
sub
add
sub
add
add
sub
sub
sub
sub
sub
add
sub
add
add
add
sub
add
sub
sub
sub
sub
sub
add
sub
add
add
sub
sub
add
sub
add
add
add
sub
add
add
sub
sub
sub
sub
add
sub
add
add
sub
sub
sub
sub
sub
add
add
sub
sub
sub
add
sub
add
mov
mov
mov
sub
sub
sub
add
add
sub
add
sub
sub
sub
sub
add
add
add
add
sub
sub
sub
add
sub
add
add
sub
sub
add
add
add
sub
sub
sub
sub
add
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
add
add
add
add
sub
sub
add
add
sub
add
add
add
sub
sub
sub
sub
mov
mov
mov
sub
add
add
add
sub
sub
add
add
add
add
sub
sub
sub
add
add
add
add
sub
add
add
add
sub
add
add
sub
add
add
add
sub
add
sub
sub
add
add
sub
add
add
add
add
add
add
sub
sub
sub
sub
add
mov
mov
mov
sub
sub
sub
add
add
sub
add
sub
mov
mov
mov
add
sub
sub
add
add
sub
add
add
sub
sub
sub
add
add
sub
add
add
sub
sub
sub
add
add
add
sub
add
sub
add
sub
sub
sub
add
sub
sub
add
sub
add
add
mov
mov
mov
sub
add
sub
add
sub
sub
add
add
sub
add
add
sub
add
sub
add
sub
add
add
add
add
add
sub
add
sub
sub
sub
add
add
add
sub
add
add
add
sub
add
add
add
sub
sub
sub
sub
sub
add
sub
sub
add
add
add
sub
sub
add
add
add
sub
sub
add
sub
sub
add
sub
sub
add
mov
mov
mov
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
add
sub
add
sub
add
add
sub
sub
add
sub
sub
sub
sub
sub
sub
add
add
sub
sub
add
add
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
add
sub
add
add
add
add
sub
sub
sub
add
sub
sub
sub
add
sub
add
add
sub
sub
sub
add
sub
sub
sub
add
sub
mov
mov
mov
add
sub
sub
add
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
add
add
add
add
sub
sub
add
add
sub
add
sub
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
sub
sub
add
add
mov
mov
mov
sub
sub
sub
add
mov
mov
mov
add
sub
sub
add
sub
add
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
add
sub
add
add
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
add
sub
add
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
sub
sub
sub
mov
mov
mov
add
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
add
add
sub
add
sub
add
add
add
sub
mov
mov
mov
sub
sub
add
sub
sub
sub
sub
sub
sub
add
sub
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
mov
mov
mov
sub
sub
add
sub
sub
add
sub
sub
add
add
add
add
sub
sub
add
sub
sub
sub
add
sub
sub
add
add
sub
mov
mov
mov
add
add
add
sub
sub
sub
sub
sub
sub
add
add
sub
add
sub
add
sub
mov
mov
mov
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
add
add
sub
sub
sub
sub
sub
add
sub
sub
add
add
sub
add
sub
sub
sub
add
sub
sub
sub
sub
mov
mov
mov
add
sub
sub
sub
add
add
add
add
add
add
sub
add
sub
add
sub
sub
sub
sub
sub
add
add
sub
add
sub
sub
sub
add
sub
sub
add
add
add
sub
add
add
sub
add
add
add
add
sub
add
add
sub
sub
sub
sub
add
add
sub
sub
sub
add
sub
add
sub
add
sub
mov
mov
mov
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
add
add
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
sub
add
add
add
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
add
add
sub
sub
add
add
sub
sub
sub
add
sub
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
add
sub
sub
sub
add
add
add
sub
sub
add
add
add
sub
mov
mov
mov
sub
add
sub
sub
sub
add
add
add
sub
sub
sub
add
sub
sub
sub
add
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
sub
add
sub
sub
sub
add
sub
sub
add
add
sub
add
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
add
add
sub
add
add
add
add
sub
sub
add
add
sub
sub
sub
sub
sub
add
add
sub
sub
add
mov
mov
mov
add
add
sub
sub
sub
add
sub
add
add
sub
sub
add
sub
add
sub
sub
add
add
sub
sub
sub
sub
add
sub
sub
sub
add
sub
add
sub
sub
sub
sub
add
sub
add
add
sub
add
sub
sub
add
sub
sub
mov
mov
sub
add
sub
sub
add
sub
add
sub
sub
sub
add
sub
add
add
sub
sub
sub
add
sub
sub
sub
add
sub
add
add
sub
call
ret
