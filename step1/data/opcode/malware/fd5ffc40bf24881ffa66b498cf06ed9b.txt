(bad)
adc
adc
mov
bound
ret
jns
cmp
inc
fld
and
inc
pop
jecxz
shr
push
inc
loopne
(bad)
sti
fcmovu
enter
and
and
xchg
in
lods
pop
inc
pusha
test
je
into
arpl
pop
(bad)
xchg
ficomp
mov
dec
imul
(bad)
xor
dec
push
pop
and
stos
mov
mov
add
rol
add
daa
push
inc
xlat
lea
dec
sbb
dec
pushf
mov
push
push
movs
mov
das
xor
mov
dec
int
pusha
inc
das
iret
or
mov
dec
movs
pop
sti
out
ins
lock
retf
mov
sbb
and
fwait
outs
cli
mov
call
shl
cwde
loop
jo
ins
sbb
int
push
fwait
out
or
inc
add
adc
outs
stc
jno
jne
sbb
push
cmps
push
(bad)
xlat
mov
scas
fnstsw
hlt
or
js
std
mul
pop
out
xor
pop
enter
jo
cwde
sbb
push
push
movs
data16
xlat
add
jo
lahf
jne
mov
cmps
mov
shl
cmp
pop
addr16
sub
mov
mov
sbb
leave
or
nop
loop
sub
stos
or
js
mov
inc
mov
mov
add
mov
cmp
test
jmp
adc
test
or
dec
lods
ins
cwde
sti
into
lods
inc
out
cmc
call
retf
dec
mov
cmps
stc
ret
inc
dec
aad
jle
or
popw
in
lds
mul
mov
loop
pop
out
(bad)
or
mov
cs
adc
int3
sub
(bad)
pusha
push
jge
ret
add
cmc
sub
and
adc
xchg
cs
mov
sbb
addr16
fdivr
scas
pop
push
dec
and
ret
push
mov
xchg
test
push
repnz
pop
ss
out
rcl
jecxz
ins
dec
test
stc
dec
pushf
pushf
dec
int
(bad)
aaa
lds
jg
xchg
xor
push
int
lock
jno
jge
jecxz
out
pop
ins
or
out
sub
dec
stc
pop
mov
and
in
lods
cmp
test
and
mov
pushf
mov
jmp
mov
cwde
pushf
dec
xchg
cmc
pop
and
jp
and
repz
pop
cmp
nop
inc
sbb
daa
out
jp
sub
adc
(bad)
(bad)
stos
or
jle
or
adc
leave
fadd
(bad)
dec
imul
inc
(bad)
jmp
int
mov
sahf
pop
aad
ficomp
(bad)
mov
adc
pop
dec
mov
cmp
sbb
jbe
push
retf
mov
test
sbb
push
inc
and
push
fs
out
cmp
es
movs
mov
add
nop
movs
shl
imul
outs
push
pop
test
ss
dec
jns
inc
dec
xor
inc
outs
mov
pusha
mov
lock
sub
sub
in
push
and
call
xor
inc
dec
aas
jmp
mov
jne
xchg
push
xchg
popf
xor
or
je
push
sub
xlat
jbe
clc
imul
loopne
cmps
pop
test
pop
dec
mov
rol
retf
jns
jg
or
pop
inc
ins
(bad)
pop
aad
jns
jo
xchg
mov
jle
pop
cli
loopne
push
dec
not
mov
push
xchg
inc
outs
pop
jno
lea
cs
iret
aas
xchg
xor
mov
mov
test
xchg
sub
inc
leave
aas
pushf
inc
daa
pop
out
or
into
in
stos
jmp
sbb
push
cmp
push
popa
das
pop
loop
gs
adc
(bad)
xor
jg
aaa
neg
(bad)
scas
retf
ja
pop
mov
jmp
inc
xor
jmp
cmp
mov
call
add
jg
sahf
mov
lahf
push
adc
jns
aaa
mov
in
adc
(bad)
xor
sbb
and
mov
mov
pop
jnp
popa
shl
cdq
pushf
and
repz
in
pop
pop
lods
xor
test
mov
scas
(bad)
adc
xor
sbb
and
adc
inc
and
lds
push
mov
test
cmp
imul
mov
or
xor
pop
jmp
cmps
int
adc
popf
jmp
pop
dec
aad
sub
sbb
test
test
xchg
adc
icebp
xchg
xchg
fcomi
dec
pop
dec
aam
cmps
fidivr
jmp
dec
pushf
xchg
xchg
scas
in
cmps
sbb
cmp
jb
outs
push
and
inc
lds
in
sti
cmp
fcmovnb
rol
adc
lods
pop
adc
xlat
inc
dec
ret
popa
dec
dec
dec
or
inc
dec
mov
xor
cvtdq2ps
inc
ret
in
dec
imul
fadd
jp
mov
mov
add
add
rcr
sub
add
out
retf
xchg
push
or
sub
adc
dec
mov
xchg
push
jno
sub
mov
js
popa
adc
loopne
jmp
mov
(bad)
popa
adc
cli
lock
mov
dec
push
dec
pop
clc
xchg
add
jnp
lea
ss
pop
add
jge
daa
das
sbb
ficomp
and
add
add
into
sti
cmp
and
jae
(bad)
mov
jl
rsm
daa
lea
jge
fcomp
pop
icebp
mov
(bad)
inc
jle
(bad)
test
cwde
div
mov
clc
mov
xchg
mov
mov
inc
call
push
test
pusha
cmp
push
jl
imul
cmp
sbb
cdq
sub
push
xchg
dec
cli
(bad)
dec
rcr
add
or
paddsw
xchg
inc
mov
adc
xchg
nop
into
pop
pushf
ja
out
mov
out
mov
xchg
jnp
mov
add
addr16
aas
mov
movhlps
xchg
dec
loope
push
pop
lock
sti
clc
xor
sbb
mov
lahf
jb
or
pop
mov
mov
out
cmp
mov
ins
mov
cli
pop
ret
mov
(bad)
lods
push
cwde
popa
fs
pop
dec
lods
lahf
std
dec
cdq
ds
mov
movs
dec
sti
jo
pop
xor
test
dec
dec
push
pop
je
js
mov
mov
jno
sbb
push
dec
(bad)
cmp
fistp
mov
cmp
fld
and
bound
(bad)
jle
push
add
(bad)
push
push
mov
jno
(bad)
push
sbb
bnd
(bad)
xchg
scas
addr16
or
test
mov
dec
(bad)
cdq
xor
imul
and
sub
pop
jmp
mov
inc
cmp
sbb
arpl
loope
xchg
cwde
xchg
xor
stc
fmul
lea
jle
and
mov
jne
outs
jg
(bad)
jnp
loopne
adc
rol
jnp
sbb
xchg
ret
outs
stc
jg
push
sti
test
test
pop
xchg
fstp
in
enter
push
js
mov
push
mov
cmp
mov
sub
cmps
dec
jne
jns
and
repz
int
mov
and
ja
(bad)
scas
push
inc
out
inc
jns
or
jecxz
adc
repz
mov
mov
xchg
or
mov
ja
nop
dec
inc
sbb
scas
dec
push
pop
cmp
(bad)
cmp
fwait
out
(bad)
es
jp
sbb
ficomp
test
add
in
sbb
and
xchg
or
xlat
sbb
inc
arpl
out
lods
jb
inc
cmp
jecxz
xor
push
jmp
xchg
mov
push
psrad
aam
cmp
xlat
js
xor
lock
sub
and
(bad)
xor
push
in
pop
xor
mov
(bad)
cmp
xchg
dec
enter
mov
mov
dec
adc
push
push
and
xchg
and
dec
aas
outs
cwde
gs
jecxz
ss
je
xchg
xchg
push
cmp
lods
retf
dec
nop
cdq
pop
daa
jae
std
mov
jge
(bad)
cmp
add
cwde
ror
fisubr
mov
pop
test
stos
push
sbb
pop
movs
gs
add
retf
int
cwde
push
cli
in
xor
or
lods
arpl
dec
sahf
jecxz
dec
icebp
clc
sahf
jb
repnz
stos
push
stos
inc
in
out
cmps
jmp
ret
enter
adc
jp
aas
stos
in
(bad)
mov
adc
push
ds
data16
out
movs
leave
fld
and
lods
jns
sbb
add
or
pusha
(bad)
neg
xor
or
sahf
cs
outs
jg
xor
dec
ins
dec
leave
push
mov
push
pop
cmp
aam
mov
call
pushf
mov
popa
inc
push
xchg
pop
mov
jb
inc
push
ins
add
movs
pop
and
pop
sub
stos
addr16
sub
clc
sbb
outs
test
cvtps2pd
retf
push
pop
add
pop
pop
cmp
es
inc
push
pop
loopne
mov
cmp
das
nop
jne
mov
mov
adc
xor
add
xchg
jno
cli
fimul
clc
shl
fwait
test
jmp
jne
sub
or
out
das
pop
pop
out
ret
lds
in
ret
push
mov
int
jg
lds
jae
push
inc
mov
test
sub
cli
(bad)
push
test
scas
add
jae
mov
mov
pop
pop
push
inc
inc
inc
ins
loop
out
mov
push
xor
aas
inc
inc
fmul
out
aaa
push
or
xor
fidiv
ret
xlat
scas
jl
mov
xchg
xchg
sub
(bad)
lea
xchg
adc
not
adc
js
cli
neg
out
cli
mov
inc
sar
sub
cmp
fldcw
in
xchg
lods
and
out
leave
push
push
dec
cmc
xlat
out
jle
jnp
jl
adc
inc
push
outs
or
fwait
add
or
outs
or
sbb
jg
pop
test
push
shr
ds
adc
cmps
std
and
repnz
xchg
in
jle
add
jnp
pusha
test
es
pop
cwde
mov
xor
rol
pop
sti
mov
stos
or
rcl
test
jmp
cmc
outs
sub
sub
icebp
mov
cmp
lock
rcr
add
add
iret
shl
adc
sbb
sti
cli
jmp
mov
add
jmp
mov
jecxz
cld
jae
enter
addr16
inc
mov
adc
lahf
lock
inc
sbb
add
icebp
xlat
and
push
push
sbb
scas
pop
iret
xchg
adc
and
xchg
out
cld
sub
mov
nop
dec
dec
aas
xchg
mov
cld
(bad)
in
dec
(bad)
repz
movs
retf
dec
and
lods
sbb
das
mov
xlat
pushf
or
out
pop
enter
dec
ds
std
iret
jo
test
cmp
repz
rcl
cmp
jnp
lea
sub
adc
mov
ins
stos
xor
in
int3
mov
mov
ror
je
fwait
jns
jno
hlt
pop
pop
jg
lods
push
sub
xchg
or
pop
scas
mov
sub
jae
xor
fadd
mov
lods
cmc
adc
cmp
cmps
imul
and
adc
into
pushf
rol
sub
adc
or
lods
cmps
sub
add
jne
add
xor
add
push
mov
es
sub
xor
in
xchg
pop
js
clc
das
arpl
addr16
add
cwde
imul
fnstenv
into
inc
test
push
les
sbb
dec
cmps
jecxz
addr16
sbb
test
jecxz
xchg
sar
dec
xchg
mov
sbb
lock
mov
pop
test
cld
and
outs
fst
gs
bound
jecxz
jp
cmp
or
or
pushf
adc
fadd
add
sbb
push
(bad)
jmp
(bad)
call
stos
rol
jo
push
dec
imul
sbb
mov
gs
xchg
jne
or
lock
mov
dec
paddusb
add
cld
cmp
ret
out
cmp
dec
ret
inc
dec
pushw
and
jecxz
and
xchg
adc
sub
xchg
sbb
jmp
cmp
pop
jno
mov
jmp
lods
icebp
inc
and
xchg
jmp
out
adc
(bad)
mov
jo
lods
retf
cmp
addr16
xor
dec
sbb
mov
push
lahf
push
mov
cmp
in
ret
dec
xchg
push
imul
jmp
or
push
out
fidiv
mov
inc
mov
add
adc
push
aad
jnp
outs
push
push
xbegin
std
add
dec
push
outs
fcomp
repnz
stc
and
sub
ficom
inc
mov
xor
lods
fmul
pushf
dec
loope
and
popf
int
mov
cmp
or
aaa
jecxz
in
scas
pop
push
cmp
popf
inc
cmp
stc
xlat
in
dec
shl
(bad)
popf
sub
add
arpl
js
push
mov
pop
in
mov
xor
loope
push
cmp
adc
jb
fild
fwait
push
inc
imul
int
dec
je
mov
and
icebp
push
mov
sbb
xor
ss
jge
scas
push
sub
cmps
in
and
inc
cmp
mov
cdq
(bad)
(bad)
cmp
sbb
aaa
shl
and
or
inc
mov
cmp
test
mov
fimul
sbb
ret
adc
add
sub
fmul
and
retf
sti
(bad)
aam
loopne
inc
cmc
je
xor
dec
fucomip
push
retf
clc
aas
xchg
push
mov
into
xchg
lods
and
sar
popa
push
cmp
mov
shl
shl
fbstp
ins
sbb
jns
jg
push
hlt
push
push
sub
pop
pop
jge
sbb
or
je
jns
cmp
sbb
adc
jmp
call
cmc
jmp
std
call
shl
stos
add
xchg
sbb
sub
ror
xor
das
or
imul
out
mov
mov
es
popf
xchg
mov
jnp
enter
mov
in
push
cmps
in
cmp
(bad)
in
push
push
pop
mov
xchg
cmp
and
aas
push
in
loopne
mov
int3
lock
mov
inc
push
mov
loop
mov
sbb
icebp
pop
add
out
add
jp
inc
sar
pop
mov
add
or
fidivr
push
in
jmp
push
sti
shr
icebp
mov
js
push
gs
popf
xchg
iret
push
ror
sbb
lea
and
dec
xchg
aaa
mov
aam
das
sar
mov
adc
xor
gs
ss
daa
or
(bad)
outs
sbb
add
lods
mul
push
aaa
push
test
test
into
mov
(bad)
rcl
mov
repz
xor
adc
(bad)
xlat
mov
mov
aad
aaa
mov
or
mov
push
stos
punpcklwd
or
cs
ffree
inc
stc
mov
cwde
std
loop
repnz
xor
sbb
or
cmp
pop
sub
dec
jge
or
lds
aad
mov
dec
mov
xor
arpl
push
adc
cmps
inc
sub
sub
add
inc
pcmpeqb
cmp
repnz
ds
mov
fidiv
sahf
mov
stos
fs
stc
fld
sbb
fld
add
ret
or
adc
or
mov
hlt
adc
pop
push
out
loope
movs
sub
loopne
mov
push
stos
add
addr16
xchg
sub
add
test
lock
adc
mov
enter
cmp
jbe
fisub
push
push
movs
ins
shl
push
or
sbb
ret
xor
mov
jnp
sub
sub
ret
loope
or
xchg
mov
lea
push
xchg
cmp
iret
sub
dec
scas
repz
(bad)
pop
pop
test
dec
mov
inc
pop
lods
out
xor
mov
shl
mov
es
or
addr16
mov
retf
mov
stc
jecxz
into
push
xchg
test
fmul
pusha
into
dec
sub
adc
jae
punpckhbw
in
cmps
shr
mov
xchg
sar
mov
inc
test
sub
mov
iret
cmp
add
jmp
call
fild
dec
and
or
cdq
push
int3
js
push
cmp
pop
adc
dec
xor
stc
push
mov
mov
and
mov
stc
cmp
mov
and
xchg
inc
int3
icebp
enter
pop
and
jmp
call
and
sub
pop
adc
dec
inc
mov
pop
std
je
dec
xchg
dec
cwde
int
aaa
xchg
fcmovbe
jns
add
aas
mov
fdiv
jge
sbb
outs
push
movs
sbb
es
or
cs
push
lock
xor
sbb
fs
add
retf
fld
scas
pop
aaa
fldenv
pop
add
xchg
add
cmp
ins
pop
mov
pop
mov
lock
cmp
add
xchg
in
jne
into
sbb
fist
rcl
outs
inc
or
(bad)
in
gs
xor
sbb
sbb
jbe
xor
pop
inc
xchg
int
loope
dec
xor
retf
inc
mov
cdq
and
es
push
les
mov
inc
sar
(bad)
std
mov
ss
lods
sub
aam
push
add
sti
(bad)
into
fimul
sbb
les
mov
xchg
mov
sbb
mov
pop
daa
jmp
stc
xor
inc
cmp
fwait
pop
dec
dec
(bad)
jnp
sahf
jno
xchg
in
push
jbe
sub
xlat
rep
mov
pusha
retf
addr16
mov
jnp
nop
aad
fisttp
dec
dec
stos
fnstcw
adc
mov
pop
and
mov
push
loope
inc
mov
cli
jl
fcmovne
fnsave
sub
ds
xor
cdq
cmp
jp
ins
pop
mov
shr
mov
cmp
push
icebp
inc
neg
and
in
aaa
adc
xchg
clc
mov
xchg
rcr
retf
lds
mul
into
inc
mov
iret
ror
pop
call
nop
dec
xchg
retf
pop
ins
mov
xchg
mov
xchg
pop
iret
clc
jb
aas
inc
ret
imul
jo
adc
mov
jno
xchg
(bad)
lea
or
add
cmps
jg
out
loope
adc
lods
push
pop
ret
ret
push
xchg
xrelease
je
xor
push
test
imul
mov
sbb
sbb
bound
dec
xlat
jl
in
jmp
js
cli
not
xchg
jo
pop
mov
scas
pushf
jmp
jne
inc
fisttp
std
pop
adc
cwde
(bad)
cmp
jmp
imul
icebp
mov
cmp
mov
jbe
int3
aas
jp
popa
outs
inc
push
add
cdq
xor
lods
xchg
out
xchg
(bad)
and
add
adc
inc
and
push
mov
test
imul
jb
xor
data16
sbb
scas
fs
mov
fdiv
and
push
(bad)
cmps
or
sbb
adc
aad
pop
jl
(bad)
fist
test
cld
mov
ror
in
lea
mov
cs
cld
mov
int
ret
adc
dec
dec
vmwrite
shr
scas
shr
pop
(bad)
cmc
pop
imul
jg
sbb
pop
jp
mov
xchg
adc
sar
mov
sahf
cmp
sahf
jno
push
mov
adc
xor
push
lods
test
lods
and
mov
pop
shl
xor
imul
mov
fnsave
add
jno
in
jge
ret
in
das
sub
addr16
test
iret
add
aaa
and
cmc
hlt
js
les
pop
push
daa
cwde
and
pop
(bad)
sbb
stc
loop
movs
pop
adc
sti
mov
pop
rol
adc
fst
lods
add
test
retf
lds
inc
ja
jge
gs
repnz
hlt
push
jle
xchg
add
outs
rol
mov
adc
fs
pop
add
sbb
mov
or
ja
inc
pop
push
push
mov
out
mov
ror
lahf
sbb
inc
out
in
ss
fwait
or
mov
imul
jmp
inc
push
cdq
stc
js
pop
(bad)
fisubr
sub
dec
pop
inc
test
inc
xchg
jecxz
adc
pushf
push
xchg
stos
mov
pop
xor
push
jmp
mov
pop
pop
in
mov
mov
fst
pop
pop
call
sub
cs
mov
and
out
pop
jecxz
pop
add
or
xchg
pop
or
push
ins
cmps
sbb
mov
imul
in
jae
lods
mov
cvtpi2ps
test
xor
cmp
lock
call
pop
push
ins
call
in
repz
ror
inc
addr16
imul
mov
(bad)
jp
lea
stos
std
dec
inc
daa
test
std
push
mov
outs
pop
loopne
mov
xchg
repnz
xchg
nop
ds
int
sub
js
xchg
mov
mov
ss
sbb
push
ins
std
fst
xchg
aam
add
mov
test
movs
out
dec
xor
or
sbb
movs
shl
jp
inc
sti
or
pop
js
xchg
push
jl
or
jmp
and
xchg
stos
shl
ins
lahf
test
loopne
aaa
add
loope
loop
jecxz
add
lods
push
xchg
ror
fist
aad
adc
xchg
sbb
in
inc
jge
das
xchg
hlt
sahf
mov
out
out
test
mov
inc
(bad)
xor
and
mov
es
stos
mov
push
mov
test
or
jae
call
retf
jg
mov
cmp
sbb
add
inc
iret
inc
imul
outs
and
jmp
pop
cmps
push
(bad)
mov
pop
xchg
std
mov
sar
sti
xchg
test
clc
(bad)
je
pop
mov
or
inc
mov
jmp
sub
push
push
int3
pop
add
mov
jae
dec
arpl
das
cmps
push
mov
adc
int
push
cmps
and
test
inc
imul
in
mov
push
lahf
push
out
cli
ret
mov
sub
daa
pushf
fwait
inc
aad
xchg
std
das
aas
adc
push
(bad)
cld
sahf
cwde
dec
cmp
cmp
jmp
popa
pop
mov
pop
jmp
mov
adc
movs
sahf
mov
ds
dec
nop
shl
lea
mov
mov
adc
repz
push
stos
fistp
hlt
jle
xor
mov
imul
sbb
fs
sbb
add
sub
nop
xchg
sar
js
jne
push
mov
outs
or
stos
inc
jno
sub
mov
push
sub
jae
out
cmovp
or
jge
mov
jo
mov
int
cmc
out
pusha
cmp
dec
call
lods
sbb
pop
fwait
bound
pop
xor
mov
lock
repz
dec
xchg
ja
outs
ret
mov
jmp
sbb
push
and
mov
bound
(bad)
enter
fs
stc
outs
frstor
sub
push
jmp
inc
fdivr
enter
or
hlt
lock
push
mov
ds
in
pop
pop
inc
jnp
mov
mov
scas
call
sbb
mov
add
mov
add
push
jne
jmp
inc
lods
jae
in
mov
mov
and
mov
push
add
loop
test
stos
ret
lock
jl
rcl
jne
fdivr
or
std
push
ret
outs
aas
leave
mov
in
stos
mov
lahf
and
test
retf
xor
adc
mov
cmp
fwait
adc
aas
xchg
scas
jl
sbb
arpl
sub
pop
mov
or
or
pusha
loopne
jnp
mov
mov
add
ffreep
jle
imul
or
cmp
sbb
add
jnp
in
xor
fnsave
mov
push
add
out
cmps
xchg
jge
ss
push
sub
imul
cmp
ret
mov
hlt
sti
mov
je
dec
mov
mov
mov
into
call
sbb
aam
mov
in
mov
leave
loop
xchg
stos
imul
inc
mov
shr
std
js
add
cmp
repz
sahf
mov
sbb
sbb
or
es
mov
(bad)
mov
mov
mul
mov
popa
shr
jl
dec
ja
add
movs
cmp
lds
dec
stc
jae
xor
div
loop
int3
adc
ror
in
popf
jmp
pop
into
ror
bound
fdiv
outs
sub
sar
(bad)
in
sub
dec
dec
inc
scas
and
add
push
push
mov
fnstsw
jbe
test
jo
ins
aad
(bad)
cmp
(bad)
mov
cmp
cmp
in
in
retf
ror
pushf
xor
jno
and
addr16
sub
sahf
xchg
movs
cmp
xchg
lea
repnz
sar
inc
stos
in
pop
call
arpl
stos
arpl
int3
adc
mov
adc
cmps
scas
cmp
push
lods
(bad)
mov
aaa
repnz
jmp
test
jmp
jmp
adc
pop
cmc
stos
adc
push
das
sti
push
jle
and
int
mov
push
scas
outs
cs
pop
outs
jle
add
pop
push
cdq
xchg
sbb
jns
movs
imul
push
push
or
xchg
clc
lock
pop
inc
fdivr
and
lods
sbb
mov
jge
cwde
rcr
inc
(bad)
lods
fsubr
out
outs
mov
stos
sbb
leave
lea
cmc
and
xchg
mov
out
mov
aas
mov
adc
and
pop
std
lahf
mov
mov
(bad)
or
pop
lahf
cmc
in
pop
(bad)
sub
mov
jno
(bad)
cdq
pushf
ror
xchg
cmp
shl
pop
sbb
stos
mov
inc
in
into
mov
das
outs
sbb
cmp
mov
cwde
scas
int
mov
inc
ja
test
xchg
mov
fst
and
mov
push
repz
xchg
push
loopne
jg
and
test
int
cs
fdivr
ins
sub
jnp
mov
call
stos
sbb
je
add
enter
cmp
retf
mov
mov
sbb
lea
push
clc
test
aam
lods
inc
pop
jl
mov
add
jae
repz
or
stc
shr
push
cmc
pop
int
jnp
xchg
loop
int3
cmp
and
or
push
sbb
push
mov
movzx
xor
lds
fisttp
cmp
je
movs
outs
mov
add
jle
cwde
repnz
xchg
xchg
fmul
aaa
rcl
out
push
call
cmps
jl
(bad)
pushf
popf
or
inc
in
xchg
in
xchg
bound
mov
jns
pop
repz
dec
(bad)
jp
lds
mov
jg
out
scas
pop
xchg
ret
mov
and
cmps
mov
inc
test
dec
ror
sbb
movs
and
jns
(bad)
test
fadd
xor
retf
int
daa
mov
(bad)
xor
mov
ins
pop
call
shr
add
fisttp
hlt
xchg
pop
add
call
push
das
aaa
clc
popf
jo
outs
fwait
mov
push
enter
xchg
pop
aaa
je
jbe
xchg
fdivr
mov
lock
shl
out
loop
cld
lods
out
mov
xor
inc
shl
or
xchg
inc
les
sub
jo
jecxz
sub
in
stos
addr16
jae
(bad)
pusha
pop
not
aam
adc
jb
jbe
pop
dec
push
movs
push
xlat
sahf
or
inc
xchg
ret
and
lock
nop
cmp
sahf
sbb
xor
shl
adc
nop
mov
jns
je
dec
out
out
test
fwait
int3
jmp
push
in
xor
imul
lods
in
fs
sbb
fwait
mov
mov
xchg
cdq
scas
jmp
gs
or
cmp
xchg
jbe
(bad)
into
ins
clc
in
ficom
scas
mov
sub
mov
push
mov
je
bound
in
leave
cmc
push
into
fisub
std
cmc
repnz
jle
es
imul
sbb
xor
call
(bad)
mov
popa
jle
rcl
xchg
inc
stos
cmp
je
das
adc
push
int
fxch
jle
xor
out
add
jmp
scas
mov
cwde
das
xor
imul
neg
aam
xchg
xor
jge
sub
or
enter
nop
jg
mov
dec
test
lods
xchg
in
mov
pop
fst
dec
icebp
into
xchg
sub
mov
gs
loopne
xchg
cdq
popa
sub
sbb
push
imul
enter
mov
push
mov
mov
adc
frstor
mov
sbb
xchg
lds
push
mov
rcr
and
mov
mov
out
adc
jb
or
jmp
pop
sbb
scas
nop
loop
ins
mov
outs
mov
out
out
xor
dec
pop
pusha
jno
dec
inc
pop
push
inc
retf
and
jecxz
pop
jmp
cld
and
loope
sbb
addr16
mov
(bad)
pop
inc
lods
test
das
cmp
daa
jmp
sub
fadd
daa
aas
ss
jne
pushf
jecxz
xchg
mov
mov
icebp
pop
cmps
lahf
inc
adc
push
std
mov
inc
adc
and
out
push
cwde
inc
xchg
inc
test
rcr
jmp
xchg
ficomp
mov
inc
call
or
xchg
push
cmp
jp
call
loop
sbb
fdiv
jb
aad
fsub
movs
add
adc
mov
xlat
dec
inc
outs
lar
xor
push
add
ins
xlat
mov
inc
xchg
mov
xchg
outs
ins
inc
mov
fiadd
adc
sub
jmp
mov
ror
out
lock
pop
push
inc
add
out
push
push
fnstsw
call
fiadd
and
scas
imul
ins
mov
adc
mov
pushf
inc
mov
popa
enter
ins
mov
call
int
mov
icebp
fwait
push
pop
sti
cmp
push
sbb
jecxz
sti
or
adc
test
std
mov
sahf
push
mov
cmp
push
jbe
xor
push
push
jge
push
imul
test
clc
sbb
shr
mov
push
push
scas
pop
inc
xchg
push
ds
out
pop
mov
loop
add
call
bnd
sub
mov
inc
out
loopne
push
test
xor
add
loop
add
jle
call
push
push
enter
dec
aad
push
inc
dec
push
xor
sub
in
lods
cmp
ins
out
adc
adc
(bad)
mov
pop
pop
sti
fdivr
jg
pop
shl
cmp
push
xor
loope
lods
cmp
ja
in
pop
push
repnz
adc
xor
leave
arpl
add
mov
neg
inc
iret
dec
test
xchg
(bad)
mov
scas
aas
dec
ins
inc
int3
push
loopne
mov
iret
retf
jecxz
das
mov
mov
movs
mov
inc
cli
enter
(bad)
mov
sahf
inc
outs
cmp
jb
ins
repz
enter
aad
add
pop
frstor
dec
lods
(bad)
push
lods
js
pusha
adc
pop
mov
daa
clc
imul
and
(bad)
jno
fs
xor
xor
and
hlt
adc
cli
pusha
mov
test
stc
mov
mov
dec
in
jne
add
adc
fsub
jle
push
std
ins
pop
or
int3
jg
and
and
sahf
mov
repz
xchg
ret
sbb
xchg
and
nop
lahf
xor
stos
std
call
loope
cmps
fiadd
push
mov
add
hlt
stos
dec
jg
inc
inc
pop
pop
into
push
lds
jmp
shl
icebp
adc
fild
push
mov
out
mov
inc
jge
jbe
dec
jp
test
adc
inc
sbb
jb
js
outs
push
fstp
push
adc
lods
xchg
fist
cmps
scas
pop
sbb
aaa
push
popa
sub
xor
stos
lock
push
pop
fidivr
dec
dec
mov
add
fs
and
iret
sub
and
sbb
loopne
sub
fwait
aam
loopne
stos
adc
cdq
fwait
call
jg
lock
sub
push
fs
and
cmp
in
fnstsw
add
pop
sub
or
std
or
lahf
jmp
lds
adc
mov
(bad)
scas
gs
ds
je
call
inc
aaa
icebp
sbb
movs
pop
dec
movs
and
mov
mov
mov
cwde
hlt
not
movs
idiv
sub
mov
dec
and
pushf
dec
add
out
popa
add
mov
add
mov
inc
xor
lods
std
adc
pop
xlat
push
adc
(bad)
(bad)
ja
dec
call
add
inc
mov
jns
pop
or
outs
dec
imul
sub
lods
and
adc
pushf
add
or
pushf
movs
dec
and
mov
dec
stc
push
leave
pop
clc
cmp
add
std
push
push
sbb
push
jo
pop
cli
(bad)
iret
mov
or
retf
ins
icebp
enter
aam
mov
pop
clc
call
and
cmp
ret
mov
pop
cmp
neg
ret
and
fdivr
cwde
mov
and
jbe
out
pop
cli
mov
imul
add
sub
pop
out
add
daa
fstp
test
enter
je
popa
mov
ins
xor
push
movs
loop
jle
mov
pop
sbb
in
sub
out
sub
jmp
mov
dec
pop
xor
ret
in
(bad)
shr
cmc
xchg
pop
pop
mov
jns
ins
out
js
das
enter
push
push
mov
add
fnstsw
int
loop
xchg
clc
movs
int3
fbstp
pop
movs
jp
cwde
icebp
movs
movs
pop
sbb
adc
imul
jle
jmp
ret
aam
(bad)
arpl
jo
stc
fisttp
(bad)
cmp
xchg
scas
ss
jp
out
test
push
pop
and
lahf
mov
dec
retf
mov
xor
in
ds
inc
jmp
and
pop
dec
sbb
jg
mov
or
sbb
sub
inc
lds
loope
sti
sub
sub
inc
push
cld
mov
fcomp
or
daa
add
rol
xor
pop
xchg
and
sub
jno
cmp
jae
sub
fst
add
fisttp
add
(bad)
or
sub
jbe
lea
xchg
xor
retf
popa
jle
jle
adc
mov
sbb
bswap
add
dec
lea
pop
outs
(bad)
pop
mov
dec
sti
fs
repz
xor
imul
xor
call
cdq
shr
and
punpckhwd
cwde
je
les
jae
out
push
popf
xchg
adc
push
setns
push
mov
cmp
clc
dec
push
and
fxch
inc
mov
call
cld
dec
mov
mov
mov
mov
pop
xlat
jo
rcr
or
xor
mov
fs
ss
lahf
hlt
ja
inc
mov
xlat
clc
mov
sbb
xor
sbb
pop
in
imul
loopne
fmul
lahf
sub
mov
xchg
in
and
sbb
imul
pop
inc
pop
ss
sbb
in
sbb
adc
xor
push
mov
sub
add
in
pop
add
mov
inc
aad
jb
push
xor
cmc
call
adc
in
mov
mov
ret
fidivr
jne
or
test
js
jbe
cmc
dec
mov
adc
mov
inc
ins
mov
push
shl
in
push
aaa
mov
les
ds
sbb
xlat
push
push
cld
pop
jae
push
dec
outs
or
push
jmp
jno
clc
mov
test
jnp
pop
mov
jmp
pop
xchg
(bad)
mov
(bad)
sub
jle
lods
rcl
adc
pop
movs
push
icebp
aam
in
jmp
or
loopne
aas
sbb
stos
cwde
pop
push
nop
adc
cmp
xchg
sti
retf
xor
ss
in
xor
movs
mov
push
mov
retf
sub
sub
in
cmps
std
jmp
sub
mov
adc
push
push
xchg
xor
pop
fistp
or
and
int
sub
mov
in
into
aaa
push
das
inc
mov
xor
jo
mov
imul
dec
dec
jbe
bound
jne
adc
in
adc
mov
jno
mov
push
sbb
repnz
popf
sbb
add
gs
mov
in
es
jmp
or
or
pop
cmp
sub
sti
push
in
(bad)
leave
dec
jb
xor
and
inc
xchg
inc
sub
loop
je
mov
into
inc
jge
aam
mov
popa
cmp
mov
pop
loope
inc
ftst
call
ins
sub
stos
stos
fisttp
inc
enter
stc
shr
fcomip
adc
mov
es
push
mov
js
stos
ss
lds
push
sahf
cmp
adc
mov
leave
inc
or
push
push
imul
push
push
xor
mov
cmp
jecxz
xor
or
shr
dec
mov
xchg
xchg
jmp
addr16
fisttp
dec
pop
retf
jge
les
mov
or
xchg
loop
in
outs
gs
cmp
test
clc
or
push
add
sbb
mov
ror
int3
rcr
push
xchg
retf
cmp
clc
(bad)
mov
push
jecxz
loopne
push
push
xchg
aad
jge
add
and
mov
test
cmc
lahf
in
fmul
sbb
scas
and
xor
or
(bad)
jb
in
or
aam
adc
push
cs
push
iret
mov
fs
(bad)
adc
mov
xchg
mov
sahf
rcr
jecxz
adc
add
inc
dec
push
(bad)
rcr
mov
(bad)
mov
mov
fwait
inc
fs
inc
or
jnp
sbb
cdq
neg
sub
add
movs
jp
jmp
xchg
(bad)
imul
mov
jne
mov
out
imul
mov
fld
sub
adc
mov
mov
test
push
jmp
inc
pop
aaa
or
dec
xchg
ret
pand
stos
jne
adc
ja
fs
(bad)
inc
push
dec
ss
mov
aad
jmp
inc
sub
or
out
daa
retf
ror
jb
jno
xor
js
jnp
rol
push
push
es
inc
shl
push
mov
ins
mov
and
sub
popf
jp
adc
test
lock
push
out
jecxz
in
(bad)
fsubr
jmp
jmp
xchg
pop
pop
movs
and
mov
aam
out
mov
ret
pushf
and
loop
add
or
pop
push
cmp
cmp
and
xlat
icebp
add
push
(bad)
cli
sbb
dec
sbb
fld
dec
cmp
mov
in
cmp
std
fist
dec
iret
stos
aas
cmp
mov
mov
jle
(bad)
cmp
enter
call
call
test
rcl
pop
add
mov
jbe
loopne
jmp
sub
dec
push
neg
cs
fdivr
dec
jge
(bad)
lods
xor
ret
sub
sbb
fnstcw
inc
inc
out
fwait
pop
jge
imul
jp
fmul
push
je
(bad)
add
cmp
mov
cmps
xor
lods
clc
rcl
sbb
sub
fst
sbb
mov
popa
jmp
fmul
stos
sbb
sub
dec
xchg
(bad)
jbe
and
xchg
push
hlt
sub
sub
ror
sub
lds
repnz
jp
imul
jl
xchg
imul
mov
dec
pop
ud1
mov
xchg
gs
gs
pop
js
mov
push
inc
fadd
mov
fld
mov
out
sub
test
adc
lock
enter
aad
cmp
xor
xor
int
sbb
fmul
push
pop
(bad)
jmp
pop
fistp
push
cmp
outs
mov
rcr
xchg
adc
je
inc
gs
repnz
cdq
dec
inc
fst
mov
ins
leave
out
add
mov
or
cmp
retf
sbb
mov
mov
add
and
aam
or
add
add
pop
dec
sahf
jmp
retf
sub
add
push
push
call
jle
sbb
aam
jp
ins
xchg
adc
pop
rcr
repz
je
xchg
jae
mov
xchg
push
sbb
pusha
cmps
mov
sahf
repz
mov
sahf
jb
popf
mov
lea
test
xchg
pop
mov
xchg
and
dec
mov
mov
lods
and
sub
in
popa
pop
dec
mov
jmp
call
icebp
lahf
push
movs
xchg
ficom
pusha
sbb
pop
cmp
jne
cmp
cli
in
cdq
mov
dec
(bad)
jmp
sub
pop
cmp
push
cld
mov
mov
lods
pop
jae
(bad)
femms
mov
arpl
das
dec
sbb
dec
in
push
(bad)
mov
dec
out
mov
out
adc
lahf
iret
and
loop
push
push
ret
pop
cmp
jns
adc
mov
xlat
jne
ficomp
mov
movs
sbb
movs
lahf
or
(bad)
push
(bad)
add
adc
add
lods
push
push
inc
aam
inc
cmp
out
pop
pusha
push
pop
jecxz
hlt
inc
in
mov
mov
fs
loopne
retf
stos
(bad)
jmp
aaa
fild
pop
bswap
cmp
cmps
sub
icebp
mov
je
rol
mov
xchg
gs
push
fst
lods
adc
mov
sbb
cli
(bad)
aas
call
push
int
jg
imul
stc
or
mov
lds
jb
pushf
xchg
and
add
sub
mov
and
inc
jne
pusha
jge
ficomp
cmp
scas
mov
aam
xor
(bad)
mov
cwde
call
sbb
jmp
cld
mov
(bad)
jge
jl
ret
cmp
jmp
stc
xor
jo
(bad)
pop
cmp
mov
jno
or
mov
sbb
call
mov
mov
(bad)
imul
mov
mov
mov
sub
push
aad
xlat
add
mov
inc
mov
shl
repz
jg
fwait
cmps
jae
fwait
imul
xchg
mov
leave
iret
jl
loopne
or
dec
xor
mov
and
mov
in
pop
aad
xlat
mov
inc
push
add
outs
mov
repz
lds
mov
repz
aad
cmc
aad
xchg
bound
std
fmul
scas
psubsw
push
(bad)
dec
cwde
pop
clc
cwde
pop
ret
(bad)
movzx
cmp
sub
rol
ret
cmps
stos
and
dec
mov
pop
les
clc
cmp
xor
arpl
leave
out
adc
pop
push
and
mov
out
cmp
pop
test
in
stos
mov
cmp
loop
bound
push
and
data16
mov
pop
sub
out
jmp
jmp
and
test
xor
push
xchg
call
mov
adc
std
(bad)
aas
cs
rcr
mov
data16
das
push
or
fmul
and
pop
icebp
and
sbb
lock
push
push
adc
ins
cwde
push
not
jo
into
xor
mov
out
or
add
pop
dec
xlat
repz
xchg
repnz
mov
cmps
jno
jl
dec
jecxz
clc
jge
into
add
rol
retf
mov
sub
sub
test
scas
push
and
ss
(bad)
clc
dec
add
cdq
test
movs
xchg
lahf
(bad)
or
cmc
lds
outs
jmp
scas
in
sub
movs
dec
rcl
shl
push
sbb
jp
ins
or
stos
ficom
fmul
sti
pusha
call
bound
outs
mov
lock
add
fild
shl
inc
cmc
mov
mov
lds
loopne
clc
loop
mov
jo
out
adc
shl
fnsave
push
lea
or
dec
mov
xor
add
imul
or
aas
push
mov
mov
add
into
ret
int
sbb
sub
inc
pop
adc
cli
cmp
ins
in
mov
mov
xchg
sbb
or
hlt
es
fcomp
or
dec
stos
jge
in
(bad)
cmc
mov
shl
ret
and
mul
add
ret
jne
lea
mov
js
fld
mov
mov
pop
cmps
push
mov
or
loope
pusha
aam
daa
icebp
mov
shl
push
inc
sti
xchg
movs
xchg
mov
movs
loope
ret
and
repz
sbb
and
cmp
(bad)
jb
mov
mov
cdq
xor
xchg
ss
jns
sub
enter
(bad)
xchg
cmp
nop
sub
push
add
retf
rcl
cmp
sbb
xor
xchg
push
iret
push
pop
loope
setle
enter
cmps
xor
test
idiv
mov
ss
das
shl
mov
lods
repnz
icebp
movs
xor
ss
iret
scas
cmc
push
xchg
xor
lods
in
xchg
sbb
neg
and
add
hlt
aam
pop
ror
out
pop
push
out
add
xchg
int
pusha
test
inc
les
shl
xor
ror
mov
sbb
sub
(bad)
mov
(bad)
mov
rcr
and
ins
ret
jp
xchg
scas
push
pop
push
ins
mov
mov
neg
repnz
pop
push
jmp
inc
push
popf
pop
xchg
and
cmps
xchg
cmp
cmp
rcl
ret
xchg
jbe
add
xchg
fwait
inc
fistp
pop
mov
sbb
xor
hlt
sub
ret
arpl
lds
cwde
push
add
cli
mov
cmp
js
cmp
sar
idiv
xor
(bad)
mov
(bad)
icebp
sub
mov
cmp
sub
dec
jmp
nop
stos
or
scas
dec
ins
ins
mov
sbb
mov
(bad)
out
jbe
add
clc
inc
cmp
loop
sbb
pop
mov
adc
dec
(bad)
and
cmps
xchg
mov
lods
dec
inc
jbe
dec
xchg
mov
iret
bound
push
js
jb
loopne
mov
test
adc
ins
inc
add
shl
and
cwde
aaa
call
adc
dec
or
xchg
mov
pop
cmps
mov
push
mov
mov
jae
cmp
icebp
ins
loope
push
inc
sub
xlat
or
data16
add
mov
outs
cld
or
push
or
imul
xchg
jo
jae
mov
add
icebp
adc
fisttp
jge
pop
dec
sbb
add
repnz
loope
ins
repnz
(bad)
and
jg
xchg
xchg
pop
lods
pop
push
gs
or
xchg
mov
out
push
(bad)
out
ja
outs
addr16
inc
sub
das
xchg
sbb
cmc
mov
stos
pop
shl
outs
or
mov
mov
push
repz
jecxz
out
jnp
jge
xchg
add
xor
icebp
push
out
add
sbb
pop
pop
pop
xchg
jbe
std
xor
push
add
sub
paddsb
xor
sub
es
jmp
or
mov
out
and
dec
sbb
aas
mul
imul
dec
iret
cmps
sbb
rol
fwait
mov
cdq
cmp
stc
xbegin
mov
enter
jae
not
sbb
sub
les
clc
repnz
push
xchg
xchg
dec
and
mov
jge
int
sub
jmp
fidivr
popf
int3
cmps
ds
call
call
sbb
psrld
fdiv
je
jns
add
movs
xor
nop
xor
xchg
fld1
fstp
mov
addr16
mov
jp
jmp
adc
test
(bad)
mov
das
adc
rol
in
nop
test
sbb
shl
jns
dec
sbb
lock
fidivr
outs
sub
or
mov
cmp
or
mov
enter
add
pop
test
stc
inc
dec
es
dec
data16
sub
loope
and
bound
dec
aaa
pop
aad
fs
add
jbe
out
outs
xor
jb
sub
mov
and
js
dec
lods
ror
scas
stos
fdivp
int3
(bad)
stos
push
or
cmps
mov
ins
fwait
in
or
shl
push
push
jge
push
(bad)
stc
jbe
lea
cli
inc
loop
fst
pop
dec
xor
cmp
or
psrlw
sbb
pop
nop
dec
loopne
xor
cwde
hlt
and
(bad)
loopne
icebp
(bad)
or
int
ss
dec
test
rcl
dec
popa
jo
xor
add
outs
or
test
jl
cmp
mov
and
aaa
xchg
fs
push
inc
jle
(bad)
aam
sbb
jp
fbstp
cli
leave
sti
cmp
adc
cwde
ins
mov
out
mov
ins
sub
rcr
inc
in
nop
cld
imul
adc
fwait
mov
ficom
inc
inc
aas
in
out
imul
jmp
mov
mov
inc
ret
xchg
push
sub
xor
sub
ret
(bad)
in
stc
mov
jge
fmul
(bad)
popa
ds
mov
out
(bad)
mov
xchg
int3
dec
and
dec
xor
sub
wrmsr
mov
xor
pop
add
cmp
aam
or
(bad)
call
cmp
(bad)
sbb
sbb
stos
mov
mov
(bad)
jno
fiadd
xor
jnp
adc
cli
dec
mov
jge
ds
mov
(bad)
retf
outs
push
sahf
or
imul
push
push
jbe
xor
xor
xchg
adc
fsub
mov
not
iret
jge
(bad)
movs
out
jl
ror
jmp
mov
in
xor
jp
scas
xchg
aam
cli
test
push
or
push
mov
jge
lods
mov
data16
mov
(bad)
push
ss
pop
and
stc
(bad)
imul
leave
mov
jo
or
push
les
int
lock
(bad)
test
ins
jns
fdiv
aaa
aam
jge
dec
test
enter
xor
push
pop
nop
pop
add
and
push
sbb
retf
sbb
out
sahf
adc
shl
cmp
loop
push
and
scas
inc
mov
ins
out
pop
mov
neg
xchg
lods
pop
or
xor
pop
mov
fst
add
cmc
test
sub
adc
inc
iret
rcl
mov
test
sub
and
mov
loope
pop
mov
mov
fcomp
push
jge
cli
stc
rcl
dec
push
test
arpl
out
add
dec
push
add
push
imul
(bad)
and
js
xchg
mov
mov
out
mov
push
jg
mov
sub
sbb
out
daa
push
adc
pop
clc
xchg
jmp
ins
mov
cmp
lock
aam
xor
enter
outs
je
adc
in
imul
in
mov
stc
or
inc
ins
loope
sub
in
inc
sub
cmps
inc
into
aam
lock
jnp
lods
icebp
jo
sahf
cmp
pop
push
inc
scas
stos
mov
push
fisub
mov
adc
fwait
mov
aad
mov
inc
jp
cmp
inc
mov
enter
inc
or
jb
shl
ins
dec
pop
jecxz
ret
pop
mov
sub
movs
adc
mov
fdivr
inc
fld
jmp
les
and
or
jns
dec
fistp
xchg
movs
inc
and
and
lds
cmc
nop
jnp
cmp
push
repnz
jg
add
pop
inc
arpl
jb
mov
jp
dec
xchg
rcl
aas
inc
clc
push
mov
or
nop
inc
in
loopne
push
mov
retf
add
hlt
sbb
mov
add
pop
out
clc
aas
mov
out
pop
mov
aad
stos
or
dec
retf
in
fdiv
add
mov
test
aam
push
inc
adc
ret
cld
cs
jo
inc
push
add
jo
mov
xchg
and
sub
into
cmp
jne
mov
fld
ss
loopne
inc
icebp
hlt
addr16
sbb
cmp
enter
mov
enter
inc
test
xchg
in
mov
fimul
pop
repz
mov
mov
sbb
cvtps2pd
push
push
repz
repnz
inc
jecxz
ja
jbe
jl
mov
push
fistp
jmp
call
loope
lahf
fcomi
out
sub
fnstenv
sahf
mov
retf
dec
push
in
and
wrmsr
or
pop
xor
cdq
jecxz
fs
push
mov
wrmsr
pop
jo
test
mov
jnp
cmp
push
fnstsw
mov
in
and
pop
mov
and
push
ins
leave
mov
xchg
lock
push
add
loopne
loope
sub
sbb
int3
inc
mov
xchg
addr16
jne
xchg
sub
adc
push
push
ret
and
mov
adc
push
mov
push
pop
adc
scas
push
mov
clc
xor
cmp
pop
and
stos
cs
mov
sub
iret
mov
arpl
loop
movs
mov
rcr
sbb
in
fadd
pop
and
lods
arpl
push
add
dec
xor
push
test
xor
adc
hlt
sub
mov
shl
imul
dec
arpl
test
in
aad
mov
in
mov
xor
adc
(bad)
push
out
pop
pop
call
mov
jmp
test
pop
cmp
punpcklwd
sbb
mov
fisub
or
jecxz
fdiv
push
push
push
(bad)
retf
pop
loope
cmp
add
dec
shl
xchg
fwait
jmp
xchg
push
add
cmp
lods
adc
test
sub
nop
stos
adc
adc
jl
stos
cmp
and
sub
mov
cli
imul
pop
inc
sub
push
(bad)
sahf
push
cmp
int3
pop
enter
cmp
in
and
adc
cdq
leave
nop
sahf
and
idiv
add
pop
jne
sub
out
popa
jl
sub
enter
(bad)
fld
jge
cmp
push
(bad)
mov
cld
dec
inc
popa
sub
js
push
sub
dec
sahf
and
ficomp
jp
push
bound
pop
sub
das
jnp
cmp
cmp
fsubrp
xor
cmps
ret
mov
imul
fdivr
xlat
pop
cdq
data16
mov
push
lea
int
and
movs
stos
cmps
pop
sbb
hlt
mov
das
retf
or
stc
dec
out
cmps
sbb
popf
add
std
test
jo
daa
add
rol
adc
or
outs
movs
call
je
push
jb
mov
xchg
and
iret
lods
imul
adc
mov
sub
pop
mov
iret
retf
jns
xchg
mov
jbe
xchg
jecxz
mov
popf
arpl
out
pop
shr
mov
out
jp
sti
cld
(bad)
std
xor
jmp
ins
cmp
xor
shl
jns
or
sysret
ficom
ss
pusha
pop
loop
fsub
lds
sbb
sub
inc
out
mov
in
fist
inc
and
push
daa
jnp
ficomp
sub
ror
(bad)
mov
cdq
adc
dec
(bad)
outs
les
jp
popf
clc
adc
je
push
mov
adc
pop
pop
push
xchg
aam
ins
adc
test
inc
push
xor
pop
jnp
ins
bound
jmp
mov
adc
lock
jge
jmp
sti
out
xchg
pop
xor
adc
mov
sbb
dec
sbb
neg
test
pop
jl
add
inc
mov
mov
mov
iret
mov
jae
mul
sub
in
out
mov
jmp
add
pop
out
outs
shr
jnp
or
daa
or
loopne
or
fstp
cmps
mov
jb
sub
fs
mov
cli
nop
push
push
inc
ss
dec
ror
mov
sbb
cli
scas
out
cli
cs
mov
push
leave
data16
or
add
aam
sub
pushw
lock
shl
cmps
test
js
mov
out
imul
jnp
lea
inc
xrelease
mov
imul
push
outs
xchg
lahf
fxch
sbb
mov
imul
jg
dec
and
jae
int3
pop
adc
stos
pop
daa
scas
cdq
mov
push
ins
or
cdq
sbb
or
push
mov
call
ret
dec
popa
sbb
cs
pusha
cld
pop
es
xor
push
fucomp
xlat
jnp
xchg
cmp
repnz
js
(bad)
test
outs
mov
jae
push
cmp
loopne
fiadd
and
and
pop
fcmovnb
lar
std
icebp
sub
int
jnp
inc
add
jne
lds
aas
cs
push
sbb
push
in
sub
mov
int3
sahf
push
mov
xor
fdiv
or
clc
inc
aas
xor
mov
call
scas
(bad)
mov
pusha
pop
inc
jp
cmp
jp
ins
mov
mov
test
daa
xor
and
call
inc
inc
pop
fstp
das
test
movs
cmp
pushf
add
dec
fidiv
mov
icebp
cmc
mov
sub
leave
mov
test
in
xchg
arpl
inc
mov
rcr
mov
dec
std
add
fcmovu
(bad)
push
jl
mov
jbe
pusha
xchg
xlat
fild
cld
pop
jo
dec
mov
scas
leave
enter
mov
cmp
std
clc
int
mov
je
stos
jmp
dec
cmp
pop
sti
scas
outs
cmp
out
mov
mov
add
js
xor
mov
arpl
repz
ja
call
in
push
daa
add
mov
ds
popa
jno
in
cmps
cmp
test
add
popa
cmc
es
add
xor
test
fwait
and
inc
daa
cmps
or
pop
cmp
adc
jbe
pop
cwde
xchg
mul
(bad)
push
sahf
add
test
loope
push
(bad)
scas
and
movs
div
retf
cmp
mov
jge
jmp
loop
(bad)
jnp
pop
retf
pop
repnz
outs
invd
fs
aam
mov
cmp
push
frstor
aam
mov
cmps
aas
call
xor
mov
xchg
jns
test
popf
es
pop
mov
mov
mov
clc
sbb
push
sti
loope
jp
adc
outs
inc
push
xor
or
and
es
and
pop
cmps
mov
aas
jg
sub
ret
jo
mov
cs
cmp
jmp
pop
fistp
inc
repnz
jp
fsubr
(bad)
mov
sbb
stos
cmp
cmp
lea
adc
xor
addr16
mov
adc
add
in
mov
sbb
mov
or
dec
jmp
mov
cdq
and
jmp
cmps
inc
mov
jo
ret
add
mov
mov
out
cmp
fild
in
cdq
inc
(bad)
mov
xchg
add
xor
enter
push
repz
mov
cmp
push
iret
xchg
iret
mov
dec
(bad)
leave
cmp
xchg
fwait
pop
mov
(bad)
into
cdq
les
mul
pop
jnp
call
out
jno
pushf
call
adc
add
cmps
mov
cmps
pop
push
pop
test
adc
and
lock
lea
or
sub
inc
push
or
hlt
sub
sahf
stos
mov
mov
inc
scas
js
xchg
sbb
data16
push
fist
and
loopne
(bad)
mov
dec
clc
addr16
push
mov
and
test
xlat
shr
enter
or
ins
nop
bound
dec
jge
ror
aas
pop
lods
lahf
int
adc
shl
test
ja
jmp
clc
rcr
loopne
mov
and
mov
xchg
in
and
nop
rcr
jns
add
add
lahf
xor
dec
cmps
aad
call
mov
lods
xlat
sbb
jmp
and
sbb
test
cmps
pop
fdiv
push
(bad)
test
xchg
out
inc
je
and
mov
fcomp
mov
sub
jp
jg
adc
xchg
iret
mov
add
lods
int3
shl
add
pop
cwde
xor
push
or
mov
sub
add
stos
add
push
push
pop
and
mov
and
sub
loope
add
rcr
daa
pop
xor
sbb
mov
mov
mov
hlt
mov
jmp
push
rol
fiadd
jecxz
int
mov
sub
and
xor
mov
or
push
cmps
inc
iret
js
mov
rol
mov
ror
pushf
jnp
inc
and
rcl
call
in
dec
mov
mov
es
add
and
and
mov
or
dec
sub
jl
mov
loope
push
xchg
and
ja
dec
adc
sub
setae
retf
or
xor
adc
cmp
inc
popa
rcr
fwait
adc
mov
dec
sbb
jo
xchg
aaa
jne
mov
mov
int
xchg
cmp
push
and
leave
lods
sub
pushf
pusha
mov
jl
push
sub
iret
nop
mov
xchg
loope
les
push
shl
mov
mov
or
lahf
aad
mov
out
sub
loopne
cmp
arpl
cmps
mov
adc
mov
imul
jae
pop
stc
add
scas
mov
aam
lea
jb
std
push
pop
inc
imul
dec
fidivr
mov
xchg
mov
pop
daa
dec
sub
or
cmp
add
sub
push
retf
pop
dec
sbb
out
lahf
xlat
icebp
inc
sub
jae
lock
xor
cmp
inc
cdq
mov
lahf
pop
sub
outs
fs
dec
and
push
pop
inc
mov
push
outs
cmp
les
fsubr
in
xor
addr16
stos
push
outs
enter
in
push
test
not
loope
out
pop
or
xor
(bad)
sbb
jnp
movs
retf
sub
fwait
jecxz
jae
sbb
test
xchg
push
jp
jl
xchg
xchg
retf
in
xchg
mul
in
sbb
inc
icebp
add
mov
push
xchg
loop
test
mov
jg
jbe
mov
jnp
cld
outs
gs
fld
xlat
scas
fiadd
add
cli
cdq
imul
mov
mov
cmc
cli
ins
or
xor
in
cmps
cld
(bad)
out
test
sub
out
add
repz
nop
fcomip
pop
sub
inc
xor
aas
ret
mov
mov
mov
scas
pusha
fwait
push
and
add
xchg
mov
sti
les
fwait
cwde
es
retf
jl
sbb
retf
outs
lea
adc
stc
adc
inc
jo
fisubr
jo
or
lea
mov
fwait
js
adc
scas
xor
add
xor
mov
test
jg
inc
sbb
adc
stc
xchg
cmp
xchg
or
int
sub
xor
mov
scas
popf
push
scas
gs
push
mov
shr
pop
je
inc
pop
jb
cmc
sbb
repz
fs
push
in
int
mov
bound
iret
iret
pop
jle
cmc
ins
shl
sbb
xor
movs
inc
dec
je
loop
loope
adc
aad
add
inc
aaa
call
ss
mov
retf
mov
adc
push
in
(bad)
test
sub
jmp
push
inc
pop
or
cld
shl
test
mov
push
cmp
icebp
xchg
mov
jne
cwde
xchg
sbb
dec
mov
bound
in
push
retf
mov
inc
lods
and
xor
stos
mov
pop
iret
das
imul
add
je
and
dec
mov
test
sbb
add
cdq
or
call
fsubr
xor
add
inc
push
aas
enter
pop
retf
cmp
cmp
jmp
inc
movs
je
sbb
bound
sub
xor
and
jbe
call
fs
mov
inc
idiv
xor
bound
xchg
adc
cmps
push
daa
shl
lods
sub
mov
call
jle
xchg
jl
loop
mov
fld
(bad)
jge
(bad)
xor
outs
cmp
xor
ins
sti
and
pop
jmp
(bad)
sbb
pop
jle
pop
or
xchg
add
outs
repnz
aaa
jnp
xor
fdiv
retf
jae
repz
lods
mov
push
mov
push
sub
cmp
push
pop
sbb
lea
daa
xchg
adc
or
lahf
fwait
sub
or
pop
mov
or
dec
cmps
mov
mov
shr
mov
and
mov
(bad)
xchg
adc
int
inc
adc
mov
stos
ficomp
jmp
rol
clc
(bad)
outs
mov
outs
jns
retf
mov
ret
jb
xor
sahf
enter
push
mov
dec
sbb
aas
iret
pop
test
stc
mov
mov
pop
and
nop
inc
or
mov
fs
add
gs
call
(bad)
rol
repnz
rcl
dec
out
lahf
cmp
lea
retf
mov
inc
mov
xchg
sar
mov
adc
and
adc
ficom
lds
ss
jbe
repnz
xchg
test
out
idiv
(bad)
movs
int
lods
inc
mov
ror
lock
movs
add
inc
adc
inc
stos
push
test
push
push
pusha
jge
and
pop
loope
jmp
push
test
mov
mov
mov
push
pop
out
xchg
fisubr
inc
lods
jb
test
stos
ins
mov
pop
inc
call
mov
inc
mov
pop
mov
sub
or
xor
add
ret
xchg
cld
pop
dec
mov
scas
cs
sbb
sub
jae
mov
lea
outs
mov
pusha
jb
pop
movs
stc
fwait
call
fcomp
xor
xor
gs
dec
int3
adc
pop
adc
add
stos
push
out
in
aad
xchg
pop
sub
and
adc
xor
inc
cmp
scas
sub
pushf
in
mov
cmp
popa
dec
movs
fcom
cmp
popa
inc
pop
xor
aam
inc
in
xchg
xchg
add
stos
test
dec
pop
fwait
inc
into
push
xlat
sub
and
jle
fild
jae
into
sbb
add
push
popf
retf
not
sbb
jg
fimul
xor
sub
jo
fmul
jmp
in
or
aaa
pop
pop
sub
sti
pop
iret
mov
push
add
(bad)
mov
into
shl
pusha
in
fisubr
mov
nop
pop
lock
je
(bad)
jmp
lock
sti
imul
mov
pop
fldcw
gs
movs
cmc
mov
out
cmc
or
shr
jp
dec
xchg
movs
aas
mul
add
push
mov
pushf
cmp
loope
popf
loopne
(bad)
in
mov
lods
add
add
outs
dec
dec
xor
ins
dec
fadd
loopne
inc
mov
xor
xor
mov
pop
cmp
daa
js
pop
adc
or
call
jg
add
dec
pop
add
in
pop
pop
ins
stc
cmc
or
lea
sub
lods
and
ja
dec
movs
vcmpsd
dec
rcr
dec
lock
pushf
cmp
pushf
pop
mov
iret
(bad)
xor
mov
popa
mov
repz
and
fs
dec
xor
cmps
pop
imul
and
leave
nop
outs
or
call
pop
fimul
test
fmulp
push
out
push
scas
jmp
shl
int
repnz
inc
pop
or
mov
push
jmp
dec
mov
retf
pop
test
movs
cmp
sahf
cli
xchg
sbb
sub
jo
add
pop
xchg
fild
in
daa
popa
adc
cmp
add
into
scas
(bad)
mov
pushf
rcr
or
dec
int
push
sub
jnp
movs
in
mul
push
mov
pop
add
test
sbb
jecxz
shl
pop
xor
mov
push
push
sbb
inc
adc
dec
pop
inc
add
daa
xor
jmp
jge
pop
pop
mov
pop
pop
sar
mov
mov
enter
gs
in
mov
jmp
cmp
push
imul
xchg
mov
pop
iret
adc
pusha
jmp
cmp
cdq
in
in
jmp
out
shl
int
push
push
mov
mov
pop
and
ja
and
or
or
(bad)
sub
outs
pop
pop
retf
add
inc
je
cmp
cmps
add
and
iret
loopne
ret
retf
cmp
mov
(bad)
call
retf
jae
jmp
adc
rcl
rcr
lock
ss
jo
neg
mov
add
iret
dec
jno
std
xchg
aad
jmp
sub
lahf
pop
shl
sbb
mov
retf
push
in
mov
lods
dec
push
cmps
rol
test
mov
mov
movs
ss
push
mov
cmc
adc
aad
adc
ja
sub
sbb
mov
xchg
mov
push
fsubp
pop
ds
sbb
push
out
in
adc
neg
jecxz
jg
push
lods
mov
mov
xor
(bad)
les
ds
sub
fcom
movs
sub
in
aas
xor
push
xlat
sbb
or
and
outs
xchg
in
sbb
mov
sub
jg
cmp
xchg
adc
dec
lods
popa
fistp
dec
xchg
mov
hlt
loop
ins
jns
(bad)
dec
add
mov
inc
sbb
aaa
dec
jecxz
sbb
ins
dec
add
outs
frstor
pop
add
adc
mov
mov
aam
(bad)
std
cmp
(bad)
(bad)
call
sub
xor
call
add
xor
jl
or
outs
push
mov
mov
and
loop
test
cmp
mov
retf
stc
mov
adc
mov
push
cmc
test
lods
or
dec
pop
fwait
cs
jecxz
push
jnp
div
mov
clc
clc
les
fidivr
loopne
xchg
mov
arpl
sbb
sub
sub
test
add
pop
loopne
xor
push
mov
inc
mov
pop
mov
movs
adc
(bad)
jl
jnp
mov
ret
std
imul
push
cmp
mov
(bad)
stos
in
bndldx
mov
and
and
cmps
stos
rcr
jmp
adc
outs
mov
jbe
imul
xchg
mov
in
test
adc
test
pop
xchg
xor
jp
repz
xor
xchg
jnp
rol
in
xchg
retf
js
imul
popf
cmp
leave
cli
aas
call
imul
mov
movs
rcl
mov
push
cmp
sahf
out
icebp
test
dec
mov
repnz
jl
push
loope
fdivrp
add
loope
cmps
cmp
and
not
repnz
mov
push
ss
push
dec
jnp
xlat
mov
push
fistp
repnz
mov
add
les
adc
jno
push
(bad)
(bad)
pop
movs
push
add
mov
jnp
or
inc
add
jbe
push
and
icebp
mov
pop
add
or
cmp
stc
mov
mov
sub
mov
cmp
lock
sub
ficom
inc
add
(bad)
shl
push
enter
or
jae
and
or
cmp
push
ins
movs
or
adc
add
ret
(bad)
jnp
popa
pusha
retf
inc
shl
(bad)
cmps
call
push
shl
mov
mov
jns
or
or
test
sbb
ret
xchg
shl
fiadd
ficomp
ret
shr
popf
shr
xchg
ret
pop
push
test
cmps
mov
xchg
pop
inc
lods
add
mov
mov
mov
sub
inc
ds
ja
adc
mov
nop
gs
sub
pop
cmp
lds
mov
rcr
into
test
test
rcr
mov
mov
adc
out
lea
ds
enter
mov
dec
fiadd
imul
xchg
scas
dec
into
xor
movs
mov
rcr
fs
pop
out
jmp
mov
es
mov
mov
pop
les
cmp
out
push
inc
fisubr
cmp
repz
mov
sub
cmp
push
pop
in
pushf
into
aaa
cmp
mov
xchg
mov
cmp
jp
nop
stos
adc
pop
and
xchg
adc
rcr
inc
pop
xchg
outs
inc
arpl
mov
jae
out
push
xor
lock
dec
fs
cld
xor
sbb
inc
shl
dec
(bad)
jmp
dec
jns
test
(bad)
push
mul
test
(bad)
xchg
xchg
in
pop
jns
dec
xor
jbe
mov
cmp
and
inc
mov
sub
mov
dec
out
push
repnz
add
inc
addr16
out
test
sbb
pop
inc
adc
fdiv
outs
popf
cmp
adc
pop
push
dec
inc
cmp
fldcw
sbb
push
daa
or
pushf
or
mov
mov
mov
mov
push
into
or
xchg
and
movs
out
add
sub
movs
pop
cmps
sti
push
mov
rol
fxch
gs
mov
test
repnz
xchg
mov
fistp
bound
sbb
mov
inc
test
iret
das
das
fcom
sar
aaa
test
mov
arpl
stos
outs
inc
fistp
std
xchg
scas
call
(bad)
mov
imul
mov
mov
sub
les
dec
aad
movs
jne
adc
lods
arpl
nop
xor
je
pop
ret
adc
lea
imul
mov
lea
cs
mov
clc
push
fist
mov
jg
jo
call
or
push
and
adc
push
dec
sbb
and
fwait
or
dec
cld
push
repz
neg
pusha
test
cmp
and
push
mov
xchg
cmp
imul
mov
ins
cdq
xchg
mov
mov
mov
adc
out
and
sub
fs
lods
or
jae
cmps
xchg
cld
sbb
fcom
pop
sbb
cmc
pop
addr16
out
ret
xchg
arpl
or
dec
adc
mov
or
imul
leave
retf
ret
mov
dec
stc
lock
mov
or
adc
mov
sahf
gs
inc
sbb
sub
inc
arpl
pop
cmp
dec
leave
inc
jecxz
stos
and
cmp
int
adc
lea
movs
(bad)
jmp
icebp
dec
imul
int3
(bad)
gs
loopne
mov
stos
lods
fcomp
je
cmp
(bad)
sub
cmps
add
dec
cmp
mov
out
shr
ins
or
popa
scas
(bad)
cmp
jle
jle
movs
nop
jl
imul
jns
xchg
jle
pop
push
jo
adc
xchg
test
out
pop
scas
xchg
mov
loopne
xchg
mov
xchg
inc
ret
inc
bound
das
fisubr
fld
adc
sub
jno
and
cs
jge
cmp
push
jp
jne
pusha
push
push
je
dec
jns
mov
add
pushf
push
fsubr
hlt
jmp
sar
cmp
cmp
xchg
and
loopne
int3
lock
imul
xor
fcomip
push
sub
push
inc
shr
mov
inc
cli
cmp
xor
cmp
fimul
lods
cmps
ret
pop
ss
mov
shl
mov
retf
adc
xchg
fnstenv
out
add
int3
adc
loopne
or
das
jnp
sbb
out
adc
test
mov
jl
nop
sub
test
aas
xor
dec
pop
mov
in
and
xor
inc
pushf
jmp
rol
jbe
jae
sahf
sbb
repnz
(bad)
fs
push
add
mov
inc
mov
ret
mov
sahf
xchg
jle
jmp
(bad)
fdivr
sbb
adc
dec
or
inc
mov
loope
das
mov
or
int3
imul
adc
mov
inc
xchg
xor
int
sub
dec
inc
xchg
cmp
add
cmc
imul
popa
add
sbb
pop
dec
mov
cmp
or
inc
rcr
cmps
jnp
xor
mov
repz
pop
adc
jno
mov
push
das
daa
xor
cmp
je
jns
test
ins
sbb
xor
dec
sbb
sbb
push
xchg
ins
ds
jb
push
mov
sub
pop
std
add
sub
cwde
cmp
add
dec
and
sbb
or
loope
jb
icebp
retf
mov
dec
in
xchg
xchg
ins
bound
xor
adc
pop
ffree
nop
fwait
rcl
fstp
xchg
lea
cmp
sbb
adc
iret
mov
push
sbb
or
(bad)
add
cwde
jmp
imul
jle
sahf
xor
add
and
pushf
push
pop
sub
pop
ret
std
cmps
add
push
mov
lahf
repz
out
adc
shr
in
iret
and
xor
fmul
or
xchg
fistp
mov
fnstenv
push
clc
sahf
or
push
jbe
mov
div
nop
jb
sti
int
out
sub
out
fild
aas
xchg
sbb
mov
push
push
jp
dec
adc
mov
push
dec
lahf
nop
inc
pop
loope
and
or
add
ficomp
imul
mov
rcl
(bad)
movs
rcl
scas
mov
jb
jmp
xor
sbb
gs
mov
(bad)
lods
or
imul
int3
rol
ins
mov
jb
xchg
out
lods
adc
or
loop
sub
and
(bad)
dec
mov
add
cmps
dec
and
(bad)
in
add
sbb
(bad)
jae
je
push
cs
sbb
cwde
daa
fwait
adc
addr16
in
in
mov
cdq
mov
leave
in
pop
sbb
sbb
retf
add
stos
in
xor
xor
(bad)
fdiv
out
mov
sub
cwde
js
push
shl
lds
ds
lods
pop
dec
add
push
jmp
cmc
cld
lods
outs
cwde
in
ret
aam
test
adc
and
mov
(bad)
add
push
cmps
push
or
hlt
cli
xchg
sbb
loopne
out
mov
sti
(bad)
call
les
mov
outs
and
inc
jne
ja
push
inc
stos
fldpi
ret
data16
pop
push
arpl
fucom
sbb
xchg
or
outs
iret
jb
call
fisttp
pop
cld
sbb
jecxz
mov
pusha
push
mov
pushf
push
in
fild
sub
dec
not
or
pop
add
push
hlt
pop
adc
or
je
and
xchg
data16
lahf
inc
adc
(bad)
mov
in
inc
add
daa
cmp
add
test
sbb
jae
movs
mov
pop
mov
ja
jmp
out
add
pop
or
dec
stos
mov
lahf
jmp
fwait
aas
cmps
mov
push
xor
dec
div
or
inc
mov
stos
mov
std
jo
icebp
jb
fwait
leave
ja
add
pusha
int3
mov
sti
call
hlt
xchg
imul
jb
or
or
mov
adc
pop
mov
fwait
cwde
xchg
or
and
cmc
fistp
xchg
cs
movs
dec
sub
imul
xor
sbb
and
pop
jb
sti
mov
add
ds
fwait
or
sbb
loopne
in
inc
(bad)
and
popa
scas
fcomp
push
mov
icebp
sub
cmp
test
pop
mov
loope
loop
stc
inc
cmp
xchg
dec
pop
call
es
jge
push
call
xor
sub
adc
pop
dec
into
leave
or
add
and
ins
add
cs
or
jo
dec
jbe
add
fs
cmp
cmp
pop
arpl
cmps
xor
lahf
std
(bad)
pop
scas
(bad)
sub
out
fstp
lods
or
cwde
lods
fcomp
dec
pusha
mov
ficom
add
mov
lds
mov
adc
inc
(bad)
push
and
out
mov
mov
retf
cmp
jb
shl
frstor
jno
push
cmp
repnz
data16
aam
or
rol
test
test
popf
test
arpl
and
icebp
push
int3
mov
inc
les
cmp
(bad)
sbb
sub
push
sti
sub
push
jno
into
test
xchg
sbb
shr
jbe
aad
xchg
push
xchg
dec
movs
adc
xchg
jae
setnp
jnp
mov
ins
in
cld
test
(bad)
adc
cs
sub
push
jecxz
movs
push
pop
call
ret
jg
imul
dec
add
pop
(bad)
xchg
std
xlat
dec
in
pop
int3
pop
aam
inc
das
mov
loope
sub
aam
lea
or
mov
add
ja
sub
(bad)
pop
outs
push
not
sbb
push
add
xchg
stc
jno
jmp
mov
mov
fstp
and
or
rol
cmps
adc
and
jns
xor
jge
push
sub
mov
pop
jns
shl
and
cmovno
mov
mov
scas
xchg
sub
jmp
push
js
shr
xlat
or
int3
es
xchg
bnd
mov
cmp
mov
and
adc
push
clc
fcomp
mov
ret
pop
loope
cmp
and
(bad)
fnstsw
daa
xlat
push
pop
adc
dec
ins
test
fcom
cmps
shr
pop
in
shl
jb
xlat
ins
push
loope
mov
ins
push
or
fs
std
std
mov
nop
mov
jmp
pop
call
leave
sub
sahf
jne
dec
or
loop
cmp
mov
mov
pop
pop
ins
mov
pop
mov
inc
pop
mov
push
cmp
imul
cld
call
push
push
(bad)
jnp
pop
dec
in
mov
fwait
xor
jns
inc
jne
shl
test
sti
jle
movs
jge
loopne
call
popa
loopne
mov
inc
cwde
imul
xchg
sub
pop
xchg
sub
fist
out
and
adc
mov
stc
out
mov
into
ret
cld
mov
ds
std
add
stc
repz
inc
mov
jbe
and
jecxz
add
sub
add
mov
imul
retf
adc
push
xchg
or
add
fnstenv
fcmovu
mov
jbe
mov
daa
adc
pop
xlat
sbb
dec
fwait
fs
popf
(bad)
mov
call
jbe
test
pop
xchg
xchg
mov
movhps
push
or
dec
lods
jmp
(bad)
push
jg
push
sub
out
popf
mov
fcomp
or
ffreep
pop
fwait
pop
adc
cwde
clc
adc
cmp
in
arpl
push
lods
scas
cmp
dec
pop
push
push
call
inc
inc
das
test
out
jmp
adc
xchg
mov
sub
cmp
les
and
jnp
repz
jo
mov
pop
xchg
add
js
pop
ficom
int
arpl
shr
mov
sub
adc
xor
xor
mov
sub
stos
xor
inc
fdivr
push
or
adc
ja
dec
xchg
arpl
shl
ds
dec
into
pop
lea
adc
das
(bad)
xchg
sbb
mov
xchg
sbb
shl
and
cli
jecxz
out
movs
inc
add
ret
mov
js
adc
and
adc
cwde
xchg
jl
pop
adc
(bad)
xchg
outs
das
mov
xchg
mov
jnp
add
hlt
push
jne
addr16
movs
jne
mov
push
jp
cmp
js
call
inc
mov
clc
adc
mov
inc
daa
cmps
daa
pusha
mov
sar
push
cmp
hlt
das
dec
rcr
fbstp
fistp
dec
imul
out
adc
dec
pusha
in
pusha
jl
mov
xchg
sub
mov
jp
jne
mov
xor
fisub
out
or
mov
sub
pushf
mov
in
mov
or
push
test
inc
inc
js
jb
add
lea
clc
and
ins
mov
add
mov
jb
inc
xchg
je
shr
jge
adc
call
out
xchg
add
lock
(bad)
push
push
xchg
je
pop
mov
movs
mov
mov
adc
cwde
inc
scas
outs
sbb
adc
arpl
fistp
cli
cld
(bad)
sub
bound
test
jle
mov
pop
adc
xchg
push
in
mov
add
(bad)
jmp
sahf
push
stos
ins
test
pusha
(bad)
cmp
and
push
jp
xchg
push
mov
in
xchg
sbb
sbb
mov
xor
lea
jecxz
or
mov
cld
or
out
shl
xchg
xchg
xchg
shl
mov
ret
rcl
mov
sbb
adc
es
cli
or
fucomip
nop
and
loopne
psraw
ins
mov
cmp
dec
rol
call
sub
mov
pushf
xchg
int3
imul
es
aad
jae
loopne
std
pop
les
xchg
sbb
xchg
adc
shl
sub
gs
and
call
adc
mov
sahf
out
pop
imul
inc
daa
xchg
dec
lods
lods
pusha
jno
push
mov
inc
xchg
sahf
out
inc
arpl
stc
xchg
into
mov
loopne
aaa
add
mov
lea
jbe
sbb
(bad)
in
je
jo
in
test
adc
sub
sub
push
mov
pop
rcl
mov
popf
mov
or
jmp
rol
fcmovbe
test
test
ret
lods
rcl
jb
jno
pop
bound
lods
(bad)
lea
pop
cmp
movs
adc
out
pop
push
fdiv
sub
imul
call
and
mov
mov
dec
cld
jg
call
and
arpl
je
sub
outs
add
mov
aam
lods
pop
push
xor
push
out
or
retf
jb
lods
jmp
and
shl
outs
(bad)
shl
iret
mov
movs
add
ins
lahf
call
sub
or
dec
push
enter
cmp
cmc
inc
cmp
ret
(bad)
fbstp
das
jge
sar
dec
cmp
mov
aad
jb
jb
rcr
(bad)
loope
mov
jnp
xchg
cmp
dec
jmp
mov
inc
xlat
fimul
ds
shl
push
xor
adc
(bad)
push
xor
out
mov
pop
jg
dec
push
lods
pop
mov
scas
mov
stos
leave
and
add
and
jge
adc
push
out
aaa
push
movs
and
cmps
xchg
mov
sub
jl
iret
xchg
ret
or
xlat
pushf
and
cmps
imul
imul
ins
lahf
into
aad
sbb
int
sub
cmps
popa
push
pop
xchg
(bad)
inc
cdq
ja
sub
call
js
pop
(bad)
sahf
scas
push
jne
and
mov
imul
icebp
pop
mov
sub
lock
lods
retf
mov
les
stc
adc
int3
retf
inc
aas
div
je
retf
push
mov
inc
adc
clc
(bad)
repnz
pop
xor
adc
xor
cmp
imul
dec
test
xor
mov
inc
das
xor
cdq
cmp
xchg
push
mov
gs
and
mov
adc
dec
jge
cmps
add
mov
lahf
or
sub
mov
cli
or
sar
call
mov
cmps
aam
vpunpckhbw
inc
rcr
test
inc
aaa
mov
sub
movs
xchg
leave
mov
xchg
repnz
out
es
push
mov
movs
push
push
out
inc
dec
out
mov
or
bound
sbb
add
sub
sbb
xchg
outs
in
fsubr
out
clc
shl
push
mov
lea
and
not
sbb
inc
inc
sti
mov
push
and
ret
mov
imul
fs
mov
xor
cmp
imul
and
xor
fstp
sub
adc
rcl
pop
lss
and
add
xchg
cmp
xor
and
in
fld
pop
or
or
pop
mov
pop
movs
dec
sub
js
ins
ja
dec
and
je
mov
inc
test
scas
cmp
lock
ror
dec
mov
sahf
push
inc
mov
fstp
mov
or
sub
or
out
inc
inc
addr16
retf
daa
pop
scas
mov
xchg
push
inc
jge
sub
lds
jmp
(bad)
cld
ins
stc
fistp
push
rcr
jbe
or
pop
pop
mov
cli
rol
push
sub
js
mov
inc
idiv
int
mov
aad
retf
jns
sub
jae
xor
sbb
sub
loope
cmp
pop
push
scas
and
mov
push
fild
jl
push
fstp
sub
xchg
mov
sahf
(bad)
and
dec
ret
dec
lods
in
add
into
int
xor
mov
mov
(bad)
rcr
ror
sub
or
cld
inc
dec
call
cmp
xchg
das
sbb
ins
loope
mov
inc
adc
push
jbe
mov
xchg
add
ja
(bad)
movs
enter
and
out
adc
popf
sbb
or
mov
loop
push
dec
dec
push
rol
int3
add
push
and
rol
aad
imul
mov
jl
daa
or
fwait
xor
jbe
(bad)
push
push
pop
cdq
loopne
xor
cld
fcomp
mov
pusha
arpl
add
mov
jg
xor
jmp
xchg
dec
mov
or
jnp
dec
xor
or
cwde
call
mov
mov
push
lahf
aam
xchg
imul
repnz
adc
sub
pop
(bad)
call
mov
jle
push
retf
push
xlat
int
mov
jg
and
jnp
fadd
repnz
xor
jne
in
jne
cmp
mov
jmp
jmp
mov
imul
out
div
iret
call
pop
sbb
bound
or
adc
cmps
bound
mov
inc
repz
push
mov
clc
daa
mov
fucomip
and
add
add
or
dec
cmps
pop
ds
mov
xchg
ss
push
add
add
retf
xchg
aaa
xchg
jno
loopne
(bad)
xchg
cmp
inc
jmp
xchg
or
sbb
and
mov
call
ror
out
pop
sbb
ins
push
xchg
inc
inc
or
mov
mov
test
test
add
loope
pop
sub
cmp
mov
mov
lock
dec
shl
mov
cmp
rcl
dec
stos
(bad)
mov
out
in
int
neg
iret
push
retf
push
mov
pop
cmp
push
jmp
in
cdq
clc
retf
push
and
add
addr16
xchg
sti
cmp
jmp
jno
out
hlt
into
shr
cmc
(bad)
imul
in
std
mov
pop
iret
mov
xchg
fild
rcr
pop
cmp
add
sub
cmp
stos
clc
xor
jb
push
inc
and
movs
mov
mov
jp
or
or
lahf
push
xchg
in
mov
jle
pop
ret
fisubr
adc
(bad)
aam
sbb
outs
test
int3
(bad)
mov
test
jl
inc
and
mov
push
dec
arpl
outs
mov
fcmovnb
or
ins
adc
push
or
lods
or
mov
pop
mov
xor
iret
cs
out
mov
jae
jnp
add
int
(bad)
adc
shl
xor
jge
mov
push
inc
outs
dec
lods
iret
and
lods
in
mov
ret
xor
adc
push
(bad)
jmp
rcl
inc
xor
inc
nop
shl
lock
scas
aam
pop
test
sub
xor
and
jne
shl
add
mov
iret
adc
int
sub
imul
je
mov
push
and
neg
std
mov
jne
mov
dec
xchg
bound
mov
jp
xor
mov
jp
cmp
data16
pop
mov
into
loopne
leave
xor
add
jae
dec
movs
add
mov
loop
jg
popf
mov
sub
das
mov
lahf
in
loope
fsub
fsub
or
ficom
pop
inc
cmps
fstp
dec
add
push
loop
es
dec
pop
or
inc
neg
popf
inc
in
lds
jo
xor
pop
mov
push
xor
scas
cli
jmp
add
int3
adc
jl
pop
sbb
call
out
cmp
test
rcl
mov
xlat
pushf
cmps
stc
pop
mov
in
cwde
mov
mov
ficom
xchg
ficom
jp
icebp
xchg
pop
out
lock
int
lods
mov
inc
shl
xchg
adc
int
ret
push
pop
in
cmps
sti
(bad)
movs
icebp
test
mov
pushf
sub
push
repz
inc
sub
mov
jecxz
xchg
jb
rep
adc
mov
jl
push
sub
les
xlat
dec
das
or
outs
es
jnp
(bad)
lea
inc
jb
pop
stos
movs
cwde
mov
xchg
fld
(bad)
cld
inc
shr
xor
sbb
in
and
xor
push
popf
fwait
lea
cmp
int
fistp
fwait
sbb
sub
adc
sbb
adc
je
xchg
ror
scas
(bad)
lock
xlat
jecxz
sbb
retf
and
test
lea
icebp
cwde
xchg
cmp
test
mov
cli
aad
sbb
cmp
outs
pop
sahf
mov
sahf
jb
jmp
imul
nop
xchg
jecxz
or
les
call
out
popa
cli
into
inc
xchg
push
in
or
inc
pop
mov
sbb
pop
and
fnclex
cmp
push
aaa
inc
pusha
lods
inc
mov
ss
push
jl
sub
pop
fiadd
jle
sub
jne
jmp
outs
inc
xlat
nop
clc
and
shr
std
sub
dec
mov
int3
mov
imul
push
xchg
push
fdivr
push
popf
mov
pop
repnz
data16
ficomp
push
pop
mov
jmp
jb
or
bswap
cmp
or
adc
cmp
mov
hlt
movs
fadd
jg
xor
xchg
es
jmp
xchg
add
movq
push
mov
pusha
nop
jb
ss
loopne
xor
mov
dec
lods
jnp
js
pop
sar
arpl
aad
fisubr
inc
imul
jmp
fstp
ins
test
add
and
aaa
mov
xor
add
pop
push
rcr
out
mov
int3
sbb
mov
out
inc
es
outs
mov
inc
sbb
xor
or
adc
adc
pop
or
cwde
add
leave
xor
inc
loop
push
or
push
dec
inc
pop
mov
xchg
mov
xlat
mov
int3
mov
and
popf
and
mov
cmps
fild
add
ss
jg
pop
push
mov
push
jg
pop
dec
xor
inc
sub
rcr
mov
mov
push
dec
jg
sbb
push
cmp
setbe
sub
xchg
fisub
jecxz
mov
js
mov
or
ret
xor
fs
lahf
adc
(bad)
pop
jg
imul
out
rcl
leave
test
jno
test
(bad)
xor
jmp
xchg
push
popa
inc
test
stos
jns
cmp
fistp
xor
call
cmc
in
imul
push
cmps
rcr
and
mov
sub
mov
mov
scas
movs
loopne
and
aad
shl
fild
loopne
cmp
dec
ins
fistp
add
mov
mov
jmp
xchg
bound
xor
movs
out
lea
mov
sub
xor
je
mov
add
mov
mov
call
cmp
outs
daa
add
fs
push
retf
(bad)
pop
or
scas
xchg
fldenv
sbb
or
xor
inc
fs
and
jg
inc
push
test
(bad)
jecxz
movs
or
jp
add
inc
pop
sahf
push
mov
sub
mov
jmp
out
outs
sahf
jbe
fld
adc
push
test
cwde
dec
popf
in
push
xchg
shl
cmp
xchg
(bad)
mov
sbb
sub
outs
mov
adc
sbb
lahf
push
cmp
dec
push
and
lock
push
(bad)
es
mov
loope
ds
and
sbb
xchg
jle
mov
ret
fs
adc
cmps
cmp
mov
movs
mov
adc
neg
imul
sub
or
bound
pop
int
xor
adc
ds
push
xchg
daa
jl
sbb
xlat
shl
inc
cdq
dec
cmps
jmp
movs
sub
jge
adc
add
xor
js
xor
aaa
hlt
jp
sbb
dec
or
push
mov
mov
add
xor
cmp
outs
adc
jmp
adc
xchg
(bad)
out
adc
cdq
rol
inc
xor
push
(bad)
pushf
cmp
adc
mov
dec
shr
jne
lahf
and
cmp
xor
repz
push
fwait
cmp
shl
cmps
mov
add
mov
add
ds
into
xor
les
jbe
in
and
in
cmps
jbe
das
jmp
pop
jnp
bound
retf
bound
fcomp
movs
fmul
lock
scas
add
fnsave
mov
mov
pop
jg
jns
adc
mov
repz
inc
leave
into
cmc
test
and
and
leave
push
or
sbb
ss
in
or
xchg
ss
mov
mov
mov
push
cmp
dec
cdq
mov
adc
mov
push
pop
lahf
jle
ja
jge
push
cmp
(bad)
dec
movs
jle
cmp
cmps
push
mov
push
pop
mov
fcomp
adc
mov
push
les
pop
cs
push
xchg
int3
out
xchg
sahf
outs
enter
xchg
mov
lea
mov
(bad)
outs
mov
inc
ret
inc
addr16
and
adc
adc
jmp
push
in
push
xchg
in
and
push
jp
iret
inc
pop
sbb
jmp
dec
ffree
iret
and
jmp
mov
cdq
pusha
sbb
push
sub
dec
or
push
add
jmp
jmp
(bad)
mov
vmovlpd
fwait
xor
fs
dec
hlt
mov
jp
pop
sbb
mov
mov
ret
push
cmp
pop
pop
inc
xchg
sbb
adc
mov
sbb
push
xor
lds
ins
mov
fadd
pop
jo
inc
mov
and
icebp
idiv
fldenv
outs
and
jnp
div
adc
push
mov
sub
sqrtps
dec
or
loop
mov
stos
fidivr
mov
cli
add
sub
ins
outs
cmp
ret
add
ret
stc
fiadd
enter
adc
push
pop
pop
push
jmp
dec
dec
xchg
and
pop
mov
fldcw
out
pop
in
sti
xchg
popf
int
or
mov
sbb
jae
or
outs
cmps
sbb
xchg
icebp
push
pop
sbb
pop
pusha
inc
inc
stos
or
mov
dec
daa
push
das
or
adc
test
xor
mov
inc
xor
push
add
jae
in
fld
sbb
rcl
add
loope
cli
sub
mov
aam
mov
jns
ror
mov
xchg
cmp
xchg
fidivr
outs
fs
fwait
test
jnp
mov
sub
popf
push
out
in
jl
jmp
retf
ja
xchg
mov
jp
pop
repnz
outs
ror
ds
stos
scas
test
test
push
and
aas
sbb
or
jno
mov
test
cmp
test
into
xchg
inc
ss
cmp
iret
daa
adc
shl
leave
cwde
add
mov
adc
push
dec
xchg
adc
jae
aaa
cdq
jg
bound
mov
fucom
inc
push
retf
mov
jne
popa
mov
outs
push
jge
pop
scas
ins
retf
mov
sahf
pop
add
sbb
dec
cs
pop
cmp
jnp
sub
push
cmp
retf
xchg
int
add
(bad)
dec
popf
mov
mov
jecxz
xlat
sbb
ret
adc
fs
call
mov
retf
push
mov
addr16
mov
fwait
clc
scas
out
and
push
pop
pop
jo
add
(bad)
stc
jnp
jnp
cld
mov
stos
je
sbb
(bad)
adc
cli
imul
lods
push
jp
aad
fstp
xor
popf
(bad)
sub
mov
in
or
nop
pop
push
jnp
dec
pop
ret
inc
ror
in
dec
and
outs
cmp
push
imul
outs
ins
fmul
outs
stos
fmul
mov
cmp
out
arpl
test
mov
out
mov
pop
data16
pop
shr
rcl
fsubr
clc
cmp
mov
jno
in
ins
stc
in
(bad)
movs
cli
push
(bad)
jge
(bad)
lea
rcr
sub
les
jnp
push
push
pusha
add
xchg
push
sub
cdq
lods
adc
fldcw
add
dec
dec
cmps
sub
call
enter
call
iret
or
inc
inc
pushf
add
scas
fdiv
mov
adc
add
daa
ja
mov
lahf
hlt
shr
mov
inc
sahf
jmp
xor
xchg
mov
scas
pop
adc
jge
mov
xor
scas
ror
dec
xor
ja
hlt
ins
mov
sbb
mov
pop
cmps
adc
mov
(bad)
adc
sbb
sub
shl
jns
out
dec
(bad)
mov
test
adc
sbb
pop
add
jp
retfw
sbb
pop
inc
outs
mov
pushf
add
xchg
hlt
repnz
fs
mov
scas
mov
mov
test
add
jecxz
aad
pop
pop
js
sub
aad
iret
(bad)
dec
xchg
mov
add
sar
faddp
add
push
data16
pop
adc
add
loopne
loop
sbb
push
fadd
aaa
in
les
inc
in
popf
sbb
mov
and
rol
xchg
jo
dec
lods
inc
(bad)
jno
mov
daa
mov
clc
inc
mov
jmp
das
lods
out
lahf
mov
mov
aaa
mov
(bad)
mov
jg
rcr
xor
xchg
ror
shr
adc
adc
xor
sub
std
pop
popf
dec
lods
pop
js
dec
sbb
loopne
cmp
mul
push
jae
rcr
pusha
push
add
xlat
pop
sbb
addr16
mov
retf
push
and
jge
iret
mov
pop
scas
rol
xchg
dec
test
sbb
aas
adc
push
xchg
test
mov
inc
or
leave
ja
jnp
hlt
ror
dec
in
les
dec
dec
popa
mov
retf
lods
int
shl
shl
cmp
jp
add
pop
or
cli
xchg
sbb
std
cwde
addr16
call
push
je
add
push
das
mov
xor
pop
pushf
add
pop
sbb
adc
scas
(bad)
jmp
cmp
xor
adc
push
jae
sbb
dec
fcom
(bad)
sbb
xchg
jno
inc
dec
push
cmp
(bad)
ret
dec
stos
cld
cmp
jg
pop
adc
sar
push
pop
jecxz
loop
add
xchg
mov
xor
pop
add
(bad)
or
inc
pushw
in
cs
leave
inc
sub
adc
xor
into
mov
xchg
or
or
xchg
dec
xor
push
mov
push
jp
jge
mov
pop
fistp
mov
pop
arpl
movs
jne
call
sbb
ins
fimul
aad
lahf
movs
mov
pop
xor
mov
cmp
ds
xor
push
dec
(bad)
fmul
push
pop
in
push
mov
xchg
call
hlt
or
pop
inc
jl
and
sub
sbb
xlat
test
fimul
cwde
in
or
mov
lea
data16
xchg
cmc
xlat
adc
xchg
dec
ficomp
inc
sbb
add
jb
dec
push
add
lahf
sub
cwde
jle
xchg
fidivr
push
and
gs
push
cmp
div
loopne
jne
sbb
js
inc
jno
repnz
push
and
and
js
inc
popa
daa
aas
push
and
hlt
mov
dec
sti
sub
sar
pop
jmp
cmp
stos
(bad)
bound
scas
(bad)
jecxz
push
mov
or
lods
add
(bad)
sbb
cmova
stos
sbb
fwait
xchg
or
push
mov
xor
aam
inc
xor
jle
mov
pop
jae
mov
rcr
add
add
and
jne
xchg
and
sbb
test
pop
in
cmp
repnz
pop
mov
push
(bad)
mov
rcr
cmp
mov
icebp
dec
adc
xor
mov
or
jne
je
jnp
mov
outs
in
or
sub
lods
adc
sbb
retf
sbb
int
jb
shr
jb
out
sub
adc
jb
imul
inc
in
add
adc
(bad)
hlt
hlt
fldcw
push
xchg
cmps
popa
push
js
pop
lds
pop
je
cmp
add
jo
stos
jo
retf
inc
dec
jge
outs
movs
sar
sbb
cmc
daa
xchg
sub
cmp
call
sbb
sub
inc
jnp
xchg
pop
shl
fwait
call
xor
and
push
mov
pop
mov
mov
sub
dec
and
cmp
push
sbb
aaa
adc
sub
xor
cmp
mov
sub
sbb
jl
add
sahf
xor
popf
arpl
mov
repz
jbe
(bad)
pop
imul
pop
add
das
mov
mov
cmp
sub
pushf
(bad)
fldcw
retf
adc
cmp
pop
retf
sub
imul
push
gs
push
mov
sbb
inc
dec
sub
sub
adc
jbe
ds
push
pop
xlat
push
cmp
inc
mov
popa
cmp
add
outs
cmps
pop
cmp
ret
shl
ins
call
pop
(bad)
out
xor
and
scas
or
xor
sub
sub
into
adc
sub
loope
or
inc
ss
fst
sbb
mov
pop
xchg
xchg
adc
xchg
imul
(bad)
in
mov
nop
in
push
add
push
enter
hlt
int
dec
test
pusha
je
inc
sahf
adc
call
or
leave
ret
and
lds
sbb
xor
(bad)
aad
dec
and
pop
adc
ror
and
jbe
pusha
mov
imul
mov
inc
aaa
lock
imul
cmp
imul
iret
adc
loopne
lock
clc
or
loope
bound
ja
in
or
(bad)
daa
xchg
ficomp
xchg
mov
je
jmp
fsubr
push
pop
sbb
push
test
icebp
cmp
pop
cld
loope
jecxz
movs
mov
dec
inc
push
jo
scas
sbb
adc
sub
mov
repz
in
sub
xor
es
or
call
sti
lea
mov
cmp
adc
cdq
cmc
xlat
outs
arpl
and
fstp
mov
pop
cwde
jmp
pop
jbe
jnp
jp
enter
leave
sar
lods
push
mov
data16
cmps
mov
mov
push
xor
retf
sub
mov
je
fst
repnz
pop
aaa
mov
fldl2e
inc
cmps
mov
stos
movs
and
xlat
xlat
push
cmp
das
fadd
sbb
adc
(bad)
ins
push
out
sub
fcom
xchg
pop
call
lds
jne
fisttp
push
and
mov
lahf
jp
and
xor
jge
or
mov
or
(bad)
sysret
in
(bad)
jl
enter
aas
push
and
ret
clc
mov
fisubr
or
mov
add
fs
(bad)
shr
das
push
aaa
and
dec
add
ret
outs
push
outs
fwait
(bad)
aad
or
ss
daa
or
int3
cmp
or
xchg
(bad)
shl
and
add
xchg
loop
inc
loope
(bad)
xchg
call
leave
and
leave
stc
jle
(bad)
push
adc
das
test
push
rcl
add
into
push
add
sub
sbb
pop
mov
push
jp
cmovs
adc
test
sbb
sbb
add
ins
mov
retf
pushf
dec
(bad)
(bad)
adc
popf
dec
jmp
dec
dec
or
xor
mov
inc
mov
aam
xlat
or
fdivr
mov
jno
adc
stc
jg
in
ins
jns
xchg
fidivr
outs
cld
adc
cdq
xor
jo
aaa
push
(bad)
(bad)
push
cwde
jle
dec
pop
cmp
mov
iret
not
fucomip
stos
into
jle
push
sbb
mov
add
aam
and
test
lock
mov
and
outs
out
and
xchg
pop
mov
stos
jo
xchg
or
sar
stos
dec
pop
sub
icebp
retf
icebp
fwait
cmp
push
stos
and
inc
add
jmp
arpl
xlat
int
push
fadd
sub
pop
or
inc
dec
int
les
daa
shl
and
mov
jl
pop
xchg
push
mov
adc
mov
mov
add
pop
add
gs
mov
xchg
or
or
ss
xchg
push
sbb
imul
loopne
test
aaa
dec
pushf
jmp
push
add
test
push
push
retf
jecxz
inc
cwde
lahf
add
or
out
pop
jns
pop
in
inc
js
jmp
pop
xor
sbb
ret
lea
xor
std
mov
fwait
mov
mov
ret
adc
idiv
out
mov
aam
mov
xor
test
in
cmp
ds
test
sub
cwde
rcl
or
fs
pop
leave
mov
dec
js
ins
sbb
dec
test
fisub
int3
xchg
ja
jno
mov
stos
mov
sub
repnz
sbb
test
mov
js
mov
int
aas
dec
add
xchg
imul
sbb
dec
jp
cmp
sub
fwait
xchg
pop
cmps
lock
jge
test
inc
stc
test
call
or
cmp
or
and
fbld
enter
jecxz
push
movs
(bad)
sbb
nop
and
cmc
jne
das
pop
jmp
sbb
add
mov
and
xor
add
mov
pop
jp
xchg
sub
jge
cmps
xchg
sahf
sahf
and
popf
xor
pop
inc
hlt
cmp
pop
test
fldenv
jb
stos
push
ror
cmp
scas
sbb
push
leavew
jne
leave
sub
cmp
imul
pop
out
mov
das
mov
(bad)
jp
jmp
sti
retf
loope
xchg
lsl
mov
pop
lods
hlt
and
and
xor
pushf
xchg
adc
stos
int3
sub
xchg
mov
jg
call
fistp
inc
inc
mov
ds
ja
push
addr16
in
and
(bad)
jae
dec
mov
sub
jmp
test
mov
clc
(bad)
inc
out
jl
test
push
mov
push
jmp
arpl
je
jmp
push
mov
add
jns
lods
rcr
mov
xchg
lea
add
ins
and
iret
clc
xlat
xlat
mov
cmp
arpl
fcom
into
jne
pop
lds
mov
leave
xchg
in
cs
mov
sahf
call
repz
clc
inc
cld
dec
scas
popa
out
stos
xchg
rol
lock
call
cmp
or
imul
dec
and
movs
lods
je
mov
jne
cmp
ds
movs
test
pop
jmp
mov
xor
xchg
dec
inc
xor
ds
stos
adc
arpl
dec
xchg
movs
mov
pop
stos
xchg
adc
cld
push
push
inc
xor
(bad)
(bad)
push
scas
and
sar
lahf
imul
cmp
push
mov
aas
push
sub
xchg
pop
ss
div
mov
sbb
xor
cmp
inc
push
fldenv
inc
test
mov
shl
ds
xor
jle
bound
cs
jo
push
inc
jbe
add
sub
push
and
pop
mov
or
xor
int3
les
stc
stos
xor
push
dec
jnp
int
adc
push
mov
fisub
inc
nop
xlat
fsubr
push
gs
imul
out
(bad)
jmp
xchg
xchg
imul
mov
movs
mov
lods
pop
stos
stos
mov
and
fist
xchg
push
xor
ffreep
imul
sahf
mov
xor
adc
and
pusha
fst
mov
fnsave
sti
arpl
pop
ret
ret
jg
inc
mov
xchg
xchg
in
jne
(bad)
or
pushf
pop
and
ror
test
mov
lds
jmp
outs
rep
aam
out
push
xchg
out
addr16
sub
dec
mov
jp
pop
jbe
mov
sbb
xor
pop
mov
cmp
dec
and
adc
aaa
mov
ja
dec
pop
repz
push
cmp
div
aad
inc
xchg
imul
mov
(bad)
jge
push
and
push
stos
push
or
jne
stc
mov
jns
push
xchg
xor
push
cmp
sbb
or
ins
in
pop
ds
xor
ss
(bad)
movs
add
fadd
jmp
jo
push
mov
sbb
rol
rcr
ins
ins
out
pop
ja
fs
dec
sbb
push
popf
cmc
sbb
je
outs
addr16
mov
clc
mov
pop
(bad)
mov
mov
sbb
fcomp
cdq
test
popf
ret
fcmovnb
cmps
popa
mov
sbb
dec
pop
xor
sbb
mov
adc
sbb
adc
imul
add
cmp
retf
lods
popa
lahf
clc
cli
mov
mov
or
xor
fadd
(bad)
pop
cld
test
je
xchg
jmp
cwde
sub
cmps
pop
add
scas
adc
ficom
dec
mov
sbb
neg
xor
jle
mov
add
scas
cmc
nop
cmp
es
call
inc
iret
xchg
xchg
not
retf
daa
jnp
jecxz
sti
fcom
mov
or
je
aad
sbb
popa
mov
adc
push
ins
out
call
add
mov
call
sub
adc
adc
jmp
sub
mov
call
mov
xor
ficom
aas
push
int
enter
scas
stos
scas
xchg
fsubr
inc
loope
jmp
push
(bad)
cmp
daa
sub
mov
movs
xchg
loope
(bad)
sti
inc
push
sub
add
and
and
adc
scas
dec
rcl
mov
add
pop
clc
jae
xchg
mov
mov
icebp
clc
rcr
jg
popa
out
sbb
mov
sub
inc
xor
adc
loope
jmp
imul
out
or
xchg
test
pop
jl
xchg
call
(bad)
out
push
inc
push
popa
stos
xchg
cmc
xchg
scas
xlat
pop
shr
mov
jns
mov
fcmovnb
bound
and
mov
fisub
movs
inc
push
jmp
dec
xchg
fs
pop
(bad)
jo
cmp
pusha
daa
inc
rcl
mov
aad
cmc
jle
in
push
cld
shl
pop
enter
xor
add
inc
jo
inc
fcmovne
sbb
icebp
mov
(bad)
fs
dec
out
adc
push
and
sti
push
mov
push
movs
mov
sub
in
inc
cmp
loop
mov
sbb
xchg
or
cmps
or
add
sub
mov
loop
sbb
cmp
out
enter
fdivr
inc
fs
inc
jp
test
mov
ss
(bad)
shr
in
stc
or
xor
loope
out
and
daa
test
add
imul
sbb
mul
std
push
loopne
(bad)
sub
sub
ins
pop
jo
adc
out
sti
push
nop
push
neg
xor
push
ins
ss
sbb
shl
jl
mov
aaa
add
ss
push
data16
jp
jmp
arpl
jno
sahf
jle
sbb
inc
xor
repnz
sbb
(bad)
jmp
repz
push
and
jp
nop
jne
retf
inc
jbe
les
push
lods
shl
mov
or
leave
sub
or
je
xor
rcl
sahf
sbb
mov
ja
jae
pushf
dec
(bad)
(bad)
jecxz
push
(bad)
daa
out
ret
inc
rol
add
in
jp
(bad)
mov
xchg
inc
cdq
cmp
dec
out
dec
out
cmc
pushf
outs
ss
jbe
push
xlat
test
mov
adc
mov
int3
or
int3
lea
mov
gs
mov
ret
in
xchg
ds
test
mov
loop
ja
fucom
cmp
xchg
imul
(bad)
call
rol
(bad)
movs
lahf
sbb
pop
jns
mov
inc
sbb
and
popf
mov
clc
and
mov
in
push
in
dec
movs
aaa
dec
jl
inc
aam
mov
outs
inc
inc
out
out
xor
mov
add
xchg
mov
cmp
in
pop
and
fimul
xor
les
out
fwait
icebp
(bad)
jp
mov
minps
jl
sbb
(bad)
cmps
inc
and
mov
push
push
sti
test
hlt
jecxz
into
push
xchg
stos
bound
dec
leave
pop
xchg
mov
xor
pushf
xor
icebp
int3
repz
ret
fmulp
dec
in
fs
ror
in
push
push
xchg
dec
cli
data16
dec
inc
aam
pusha
push
adc
js
mov
xchg
(bad)
out
lds
mov
or
into
dec
in
js
out
and
push
add
in
popf
mov
push
xchg
icebp
push
adc
sbb
lods
adc
lds
mov
add
ins
js
mov
std
movs
mov
and
mov
mul
rcr
cmps
mov
movs
inc
cmp
add
xchg
xchg
push
jmp
cs
sbb
push
push
and
pop
xchg
adc
dec
shl
mov
sbb
pusha
ins
je
fst
xor
sub
test
ret
xor
and
in
xor
ins
push
mov
mov
fnsave
push
mov
xchg
sub
and
fld
enter
fmul
or
jno
mov
pop
mov
pusha
mov
sub
scas
mov
jmp
bound
cmp
dec
clc
add
inc
inc
sti
pop
hlt
cs
pop
lds
push
cmc
push
movs
mov
les
push
pop
sbb
or
cmp
xor
lods
arpl
popa
iret
mov
jae
xchg
lahf
pushf
repz
xlat
xchg
and
icebp
movs
repnz
or
sub
mov
aam
sar
pop
xor
xchg
mov
(bad)
mov
fsubr
(bad)
pusha
sbb
je
mov
sbb
pop
mov
push
fadd
imul
or
dec
scas
call
jge
xor
sub
jmp
jg
es
into
fs
cmps
leave
inc
adc
sbb
mov
scas
inc
call
dec
movs
jg
inc
mov
mov
add
fistp
mov
imul
mov
repz
retf
push
xor
xor
adc
push
push
out
mov
pop
pop
call
pop
cmp
sbb
or
cmp
sub
bound
addr16
jmp
jmp
xor
daa
or
ficom
je
arpl
xlat
aaa
inc
dec
jmp
mov
test
retf
jmp
pusha
inc
dec
fs
scas
fs
xor
xor
xchg
stos
sub
jp
cwde
imul
sub
or
dec
std
loope
cmp
test
ret
mov
add
lea
movs
mov
cld
das
mov
pop
mov
cwde
jge
into
sub
mov
xor
jg
jg
push
mov
mov
imul
xor
xchg
mov
jne
mov
in
sar
add
sub
pushf
and
jne
hlt
pushf
pushf
(bad)
imul
aas
aaa
adc
popa
ja
add
dec
lds
into
sub
mov
cmp
rcl
push
out
or
mov
je
pop
pushf
cld
enter
sti
or
out
scas
mov
stc
cmps
jmp
popf
push
and
dec
sti
cmp
out
inc
push
xlat
cs
add
retf
out
std
fwait
pop
cwde
dec
in
sbb
lea
pop
jmp
cld
cmp
mov
ins
in
fdivr
fs
pop
cmp
mul
arpl
xor
and
pop
xchg
imul
out
sub
adc
jnp
ret
inc
data16
xchg
cmp
xchg
jno
cli
jecxz
mov
paddq
aad
call
test
mov
pop
sbb
aam
ja
add
jp
sub
jecxz
sbb
and
mov
ins
or
and
loop
adc
repz
(bad)
leave
pusha
clc
sub
jo
inc
and
mov
out
sbb
pop
push
iret
test
enter
xor
sbb
outs
cmp
jge
mov
call
xchg
rol
push
sub
mov
in
pop
enter
jg
and
xchg
mov
xchg
hlt
pop
xlat
cmps
and
pushf
es
sahf
jns
(bad)
enter
shl
cmp
cmc
xchg
pusha
mov
test
xchg
xor
mov
and
pop
pop
gs
call
pop
jno
mov
fdivr
in
in
aam
or
aaa
daa
inc
js
in
movs
xchg
push
icebp
sub
adc
sbb
mov
cmp
jecxz
and
cmps
sub
scas
xchg
inc
sbb
sahf
retf
rol
mov
ret
cmc
leave
fcom
ds
xchg
daa
sbb
push
mov
mov
ds
push
stc
stc
mov
in
push
mov
cwde
in
retf
rsqrtps
dec
fmul
push
sahf
outs
in
or
imul
dec
inc
gs
mov
pop
cli
and
(bad)
sbb
(bad)
test
addr16
xchg
fnstsw
xor
xor
cmp
out
mov
sub
adc
cdq
out
jo
jg
cmps
hlt
cmps
push
mov
jg
mov
inc
das
(bad)
jmp
(bad)
cmp
mov
dec
clc
xor
dec
mov
rol
cmp
retf
out
scas
mov
jp
leave
data16
ret
adc
sub
pop
mov
clflush
sub
xchg
(bad)
sub
ja
jle
pusha
jp
movs
ds
push
xor
iret
rcl
loope
rcl
mov
inc
pop
mov
hlt
jmp
add
mov
dec
scas
js
outs
mov
cwde
mov
aam
imul
fld
mov
mov
es
out
jecxz
(bad)
xor
ins
mov
je
jns
cmps
mov
dec
or
jp
pop
les
dec
cmp
fwait
push
xchg
(bad)
aam
mov
inc
aaa
jmp
ins
and
js
push
mov
rcr
fnstenv
(bad)
push
retf
cmp
push
mov
mov
sbb
push
icebp
(bad)
or
mov
addr16
ss
outs
xor
repz
into
pusha
mov
pop
adc
ficomp
lds
inc
push
outs
pop
aam
dec
mov
dec
mov
and
push
jmp
inc
inc
loop
(bad)
repz
sbb
adc
test
sub
ja
xchg
mov
and
shl
sub
add
fisub
adc
xor
and
inc
sub
jmp
mov
sbb
jge
jge
leave
sbb
xchg
jnp
mov
add
hlt
mov
sub
cmps
push
or
ins
dec
dec
cmp
fnstcw
or
cmc
mov
mov
pop
adc
adc
pop
call
fs
aad
inc
lock
push
mov
push
arpl
push
sub
inc
xchg
and
mov
(bad)
in
mov
cmps
and
out
cmps
cmp
sbb
push
and
bound
(bad)
pop
mov
icebp
pop
mov
and
das
in
shl
fimul
xchg
fisubr
jl
mov
pop
sbb
and
mov
ja
aam
xor
cmps
scas
(bad)
sbb
(bad)
jg
outs
pushf
mov
(bad)
mov
test
jne
mov
mov
push
inc
mov
loopne
pop
add
lods
mov
and
jnp
hlt
sub
inc
push
push
mov
into
in
mov
inc
jb
jg
push
rcr
jg
pop
bound
jmp
or
mov
(bad)
sbb
jmp
dec
cmp
mov
xchg
fstp
xor
push
iret
out
gs
pop
mov
jecxz
fsub
repz
shl
enter
mov
mov
inc
mov
stc
inc
pop
mov
adc
push
cwde
jo
iret
stc
ja
sub
shr
adc
cmps
xchg
test
add
not
out
pusha
fcom
(bad)
das
cdq
xchg
and
sbb
pop
or
or
adc
mov
test
stos
adc
scas
jno
adc
cmc
xchg
cld
add
mov
and
mov
add
retf
popf
(bad)
fstp
aam
cdq
sub
popf
pop
aas
sub
adc
jb
retf
xor
dec
(bad)
jne
mov
retf
mov
inc
push
out
mov
stc
sub
mov
daa
adc
sub
sub
repz
push
mov
adc
mov
shl
cli
enter
retf
in
jne
dec
mov
js
xor
rcr
fdiv
push
push
pop
test
fsub
mov
jmp
imul
sub
test
mov
test
cmp
in
div
inc
icebp
mov
mov
leave
xchg
dec
scas
pop
dec
cmc
pusha
aaa
call
sub
fsub
addr16
inc
inc
popa
mov
out
add
mov
mov
jg
xor
mov
mov
push
adc
js
jne
(bad)
fisub
movs
mov
das
cmp
stos
rol
loopne
test
nop
in
xchg
cmc
jmp
dec
cmp
dec
ret
dec
fwait
cs
je
sub
inc
mov
mul
mov
lock
fwait
test
dec
ins
mov
lahf
jnp
iret
and
bound
jae
pusha
jp
fst
ss
dec
push
and
(bad)
cmp
and
mov
pop
in
ret
ds
fwait
xchg
retf
jg
pop
les
push
xchg
addr16
or
vpsubq
addr16
adc
add
xor
dec
push
xchg
sub
pop
mov
and
jle
sbb
dec
adc
pop
cmp
lea
or
gs
in
dec
pop
sub
mov
ds
retf
cmp
lea
jns
sub
das
data16
aam
test
call
movs
push
mov
sub
jb
test
inc
and
fstp
ss
in
out
fwait
ins
xchg
ret
xchg
add
push
pop
scas
fs
iret
(bad)
xchg
jb
adc
repz
int3
arpl
push
test
daa
je
mov
movs
and
cs
inc
cmp
test
xor
mov
cwde
cmp
xor
sub
inc
jbe
bound
dec
(bad)
xchg
xchg
(bad)
sbb
xchg
(bad)
xchg
stos
dec
cmc
fucomp
xchg
xor
push
cmp
add
xchg
sti
cdq
adc
inc
mov
jge
inc
cmp
inc
xchg
sub
repnz
mov
sub
sub
test
mov
sub
lods
mov
xor
cmp
sub
add
gs
pop
push
push
xchg
add
cld
(bad)
jmp
sti
cmps
stos
jmp
cmp
fidivr
sub
and
fisub
(bad)
imul
pop
lahf
out
xchg
xchg
dec
pop
ret
or
sbb
sub
mov
(bad)
mov
aas
ret
cmp
jo
jmp
iret
lods
jl
sbb
mov
sub
jmp
mov
push
inc
jl
stc
sbb
cmc
jp
sahf
mov
add
mov
idiv
xchg
push
pop
addr16
cli
aaa
mov
and
test
out
push
in
stc
xchg
ins
jbe
ins
ret
xchg
add
lea
out
sub
inc
and
les
fsub
loopne
sahf
mov
push
sbb
cmp
(bad)
pop
test
(bad)
dec
or
jne
push
das
or
add
cld
jae
add
aam
dec
cmc
push
retf
push
pop
mov
xchg
sbb
pop
add
pop
pop
leave
clc
popa
sub
xor
adc
dec
jne
sti
jbe
scas
inc
out
cld
adc
xor
mov
fiadd
sub
xchg
mov
mov
and
and
cld
xor
push
jmp
or
stos
bound
mov
test
std
mov
cmp
rcr
fidiv
dec
mov
imul
xchg
sahf
movs
xor
sbb
xor
push
pop
add
mov
stos
adc
xchg
out
mov
mov
out
js
sub
scas
lahf
leave
ror
cmp
pop
clc
cmp
mov
mov
stos
test
add
mov
and
pop
dec
test
dec
mov
mov
sbb
mov
push
pusha
lods
add
gs
jmp
cdq
sub
inc
ds
mov
mov
sbb
fucomip
mov
xchg
shl
push
mov
fsubr
out
sub
mov
loop
fdivr
jnp
dec
or
jb
xchg
shl
out
dec
inc
push
mov
pop
push
jl
pop
inc
cmp
aas
hlt
lods
mov
daa
loopne
cmp
mov
pop
lods
gs
add
or
mov
push
ret
push
or
gs
xor
jle
test
call
add
lods
cmc
jmp
jl
mov
mov
fcmovu
and
xchg
lods
div
addr16
mov
xor
loopne
mov
sub
xor
push
xchg
push
adc
and
sbb
outs
test
dec
enter
push
push
push
aaa
push
xchg
(bad)
rcr
inc
or
aam
xchg
cmps
movs
jp
jmp
dec
xor
jecxz
cld
add
xchg
adc
mov
sbb
xchg
jle
and
fwait
dec
or
loopne
adc
sbb
sahf
ret
ret
les
shr
push
mov
inc
push
std
daa
fadd
fnstcw
mov
repz
stos
aaa
dec
xchg
call
fdivr
mov
in
lea
arpl
leave
xchg
pop
cmp
lods
mov
sahf
jo
or
lods
addr16
jp
(bad)
mov
xlat
mov
ins
repnz
nop
popf
(bad)
sub
arpl
pusha
(bad)
stos
lock
ret
inc
pop
ret
mov
fmul
repz
or
ins
push
dec
cmps
adc
in
ror
mov
and
arpl
lods
mov
dec
call
in
loope
lds
lahf
sbb
or
dec
cmc
inc
jge
and
(bad)
dec
jge
or
int3
es
cmp
aas
dec
mov
push
sbb
adc
popa
shr
lock
cdq
pusha
cmp
mov
arpl
rcr
push
or
or
cmp
int3
int
xchg
xor
sub
sbb
pop
stos
push
inc
ins
rcr
test
jge
inc
stos
imul
ins
pop
data16
jns
ja
pop
dec
push
enter
mov
ret
sbb
cmps
iret
sbb
jno
(bad)
push
aas
int
rcr
pop
cmps
ins
out
call
adc
sbb
mov
sub
sbb
mov
jmp
call
out
cmp
ds
retf
int3
jnp
shl
or
push
mov
shl
mov
out
mov
mov
xor
loopne
jl
cmp
hlt
shr
cmp
xchg
adc
and
or
add
or
cmp
inc
and
mov
je
stos
pop
ins
xor
imul
aas
xor
loope
fwait
pop
adc
dec
bound
cmps
pop
push
jo
push
cmc
dec
and
test
xchg
pop
cli
push
mov
cmp
pop
scas
adc
mov
xchg
jp
mov
mov
xchg
fistp
adc
mov
(bad)
test
cmps
shl
xor
and
js
push
xchg
(bad)
jge
push
mov
bound
mul
or
xor
dec
mov
dec
loop
in
outs
xchg
cmp
add
add
xchg
test
adc
and
mov
jge
mov
sub
aaa
push
ins
sbb
dec
into
mov
ret
xchg
into
push
bswap
mov
imul
out
mov
es
add
retf
fs
rol
cmp
dec
mov
xchg
dec
and
push
sahf
mov
pop
mov
push
les
shl
inc
inc
and
xchg
pushf
sbb
dec
(bad)
jnp
cwde
mul
pop
pop
xor
add
(bad)
cmp
jb
cmp
fidivr
or
adc
inc
in
xchg
in
ds
push
push
xchg
jle
sbb
loopne
ja
push
pusha
mov
or
test
in
add
adc
pop
push
jmp
push
mov
jecxz
fs
retf
mov
inc
lods
int3
pop
lods
repz
inc
adc
sub
int
ror
cvtdq2ps
mov
pusha
pop
add
add
lds
aad
inc
sar
pop
jmp
push
pop
sbb
or
aad
jp
or
or
mov
sub
sti
ss
sub
leave
or
stos
sbb
xor
cmp
notrack
xor
jp
dec
cld
pop
push
xchg
ret
outs
shl
add
scas
shr
sar
mov
add
adc
pop
stc
xchg
cmp
std
popf
or
pop
xchg
dec
out
or
sub
je
push
(bad)
std
mov
int3
not
cwde
mov
mov
xchg
pop
push
xor
pop
mov
inc
cdq
out
xchg
dec
pop
test
adc
push
sbb
and
push
stos
mov
cwde
retf
shl
or
mov
mov
xlat
popf
dec
(bad)
mov
or
pop
add
sub
arpl
mov
and
jns
dec
(bad)
or
aas
sub
inc
cmp
and
fisubr
retf
jbe
mov
movs
shl
adc
dec
cmp
ret
jg
push
imul
mov
dec
dec
loop
ror
dec
xor
(bad)
out
test
test
inc
(bad)
pushf
xchg
gs
mov
inc
dec
mov
mov
idiv
xchg
cs
mov
ds
fisub
mov
gs
mov
sbb
mov
pop
pop
ret
ins
cmps
test
mov
jbe
mov
xor
bound
adc
and
lods
ror
(bad)
js
inc
(bad)
lods
pop
(bad)
pop
jne
or
xor
pop
sbb
mov
push
sbb
xor
fs
sub
pop
mov
pop
sbb
dec
add
add
cmc
jge
xchg
in
cmp
outs
xchg
ja
sar
jae
cld
and
inc
in
cmp
jo
add
icebp
pop
xchg
dec
jmp
stos
jne
jmp
jecxz
inc
mov
repz
addr16
ficomp
out
fiadd
ins
push
dec
xor
mov
and
inc
mov
pop
push
out
rol
sub
fisttp
addr16
inc
mov
in
adc
cs
adc
cmp
test
mov
je
les
mov
mov
sbb
movs
push
add
int3
fucomi
retf
push
(bad)
hlt
pop
add
adc
jne
jle
scas
jno
mov
test
gs
lock
out
cmps
ins
mov
mov
cmp
out
test
sbb
mov
jl
rcl
outs
jg
out
mov
xor
out
mov
retf
xchg
xchg
imul
cs
repnz
adc
pop
or
(bad)
and
enter
jp
dec
sub
in
repnz
push
sbb
push
and
and
pop
xor
(bad)
fwait
cmps
sbb
xchg
fistp
add
sub
or
xor
or
mov
xchg
or
jl
ror
fwait
aam
cli
movs
or
mov
in
(bad)
xchg
fnsave
mov
mov
jns
xchg
pop
push
in
mov
mov
(bad)
(bad)
mov
pop
sbb
jmp
nop
rcr
das
movs
mov
ja
pusha
adc
and
inc
mov
cmc
or
sub
int
jg
inc
das
lock
aas
in
inc
call
jecxz
jl
inc
sbb
retf
outs
cmp
cli
cdq
cdq
rep
in
cmp
(bad)
xchg
nop
pop
cli
mov
sub
dec
jno
out
je
je
xchg
dec
xchg
inc
into
das
mov
mov
fnstsw
std
xchg
lock
outs
or
xor
jge
pop
stc
aad
bound
pop
pop
mov
push
xchg
add
adc
xor
xor
jmp
add
xchg
push
jbe
mov
push
popf
(bad)
aaa
gs
jp
jno
je
inc
dec
xchg
cmp
das
add
sar
mov
add
lods
push
xor
mov
push
ins
sub
xlat
(bad)
bound
imul
jl
fimul
in
jg
leave
mov
xchg
repnz
fiadd
scas
arpl
cmp
jecxz
jp
ss
cmps
sub
mov
pop
inc
inc
mov
jp
cld
pusha
push
ins
mov
lods
push
ds
mov
add
mov
(bad)
jbe
jmp
not
mov
fdiv
repnz
and
xchg
aas
sub
arpl
mov
xor
mov
dec
test
shl
cmp
std
inc
scas
pop
les
data16
fisub
ss
xor
mov
push
jb
mov
xchg
int3
arpl
repnz
push
test
mov
pop
jp
jmp
rcr
movs
pop
xor
aad
dec
scas
(bad)
jns
mov
rol
add
sub
loopne
cmp
mov
ins
stos
(bad)
mov
cs
cli
jmp
hlt
jp
popf
lds
gs
and
(bad)
mov
xchg
mov
adc
adc
mov
mov
fisubr
dec
fild
mov
mov
sbb
add
inc
call
movs
gs
mov
shl
dec
cs
out
scas
nop
mov
jle
pusha
outs
js
cli
or
out
fsubr
mov
repz
xor
xor
pusha
ja
push
retf
nop
in
test
movs
mov
jl
and
dec
test
cmp
dec
cmp
push
cld
ja
in
jbe
jecxz
inc
mov
loop
mov
cmp
out
adc
jnp
sbb
shl
ss
retf
jmp
cmc
push
add
mov
rcl
outs
sub
daa
xchg
fadd
dec
out
iret
inc
xor
les
xchg
hlt
addr16
shl
test
imul
(bad)
mov
test
test
nop
dec
inc
xchg
jb
push
xchg
cdq
int3
push
int3
fwait
or
imul
sub
and
hlt
mov
scas
leave
nop
nop
dec
mov
and
jne
add
xor
xchg
(bad)
or
std
cmps
(bad)
adc
mov
nop
(bad)
ret
jl
iret
adc
ins
pusha
cs
push
retf
xchg
rol
ror
mov
mov
pop
push
mov
test
push
ins
std
ins
(bad)
sbb
ins
push
fisubr
sar
fld
add
in
inc
dec
test
sub
xor
pop
stc
xor
rcr
xchg
(bad)
mov
int
mov
jmp
in
movs
ret
mov
cmps
in
nop
cdq
mov
ins
sahf
inc
pop
add
pop
jl
mov
sub
aam
and
imul
call
test
test
xor
adc
ficom
stc
sbb
int
in
sub
pop
xor
dec
mov
(bad)
jmp
lods
(bad)
addr16
mov
sub
nop
lods
cmp
mov
xchg
mov
cmp
jo
pusha
push
(bad)
out
dec
call
mov
mov
(bad)
dec
sahf
pop
lods
sbb
inc
and
jo
or
adc
out
jmp
jge
xchg
xor
daa
in
shl
pop
aam
in
fadd
cs
jp
loop
cmps
push
ror
jg
inc
stos
jbe
(bad)
(bad)
mov
test
lds
arpl
cmps
add
xor
fcomp
push
call
and
pop
adc
(bad)
leave
push
repnz
(bad)
push
rcl
ret
jecxz
or
sub
push
add
sbb
lds
rol
jae
and
adc
pop
(bad)
inc
into
pushf
mov
out
jo
int
gs
xchg
scas
cld
sub
fcom
daa
(bad)
leave
cmp
xchg
and
jecxz
mov
push
js
std
mov
nop
(bad)
(bad)
fdiv
inc
dec
mov
popf
pop
sbb
mov
mov
test
pop
jns
ins
sub
jnp
imul
call
add
cdq
stos
cmp
jge
jns
push
xchg
scas
(bad)
jg
sar
fmul
add
dec
mov
mov
mov
not
jne
shl
(bad)
retf
sub
mov
inc
jp
pushf
fs
mov
aam
stos
lea
scas
repz
(bad)
sub
xchg
adc
call
cmp
xchg
push
xlat
mov
arpl
out
test
inc
std
or
xchg
in
out
leave
scas
pop
out
cs
sahf
mov
fs
mov
jmp
dec
jmp
mov
call
movs
inc
cmp
es
and
mov
cmps
xchg
aam
cmp
dec
sub
cmp
sbb
retf
popf
mov
add
pop
lds
imul
fsub
mov
mov
lock
cmp
lods
pop
and
std
cmp
xor
pop
cmps
sar
pop
aam
in
test
popf
xchg
call
cmp
push
mov
shl
cmp
in
aad
jmp
nop
jp
hlt
mov
inc
inc
lds
iret
jns
popa
stos
aad
mov
test
xchg
pop
jae
enter
mov
jo
add
pop
test
sub
xchg
sahf
into
pop
add
mov
jp
pop
jnp
std
jmp
push
or
cwde
popa
sub
aas
outs
adc
mov
pusha
es
pop
mov
sub
pop
popa
dec
inc
nop
cmp
out
fs
add
jmp
sbb
xor
rcr
movs
(bad)
leave
cmp
shl
sub
ja
in
in
or
xchg
aad
mov
xlat
xchg
outs
sub
or
xchg
pop
mov
(bad)
and
fcom
and
push
xlat
outs
sub
or
(bad)
mov
jl
add
or
scas
push
push
aad
hlt
je
ds
neg
cmps
adc
jg
dec
dec
mov
mov
xchg
hlt
ret
hlt
xor
dec
retf
outs
retf
stos
call
(bad)
dec
std
cmp
dec
xchg
pop
push
sub
xchg
stc
mov
pop
lods
ret
in
test
dec
inc
dec
ds
push
xchg
gs
push
sub
leave
jmp
aaa
fild
lahf
frstor
or
lods
mov
int3
inc
sbb
pop
dec
test
xor
add
dec
in
and
pop
inc
add
mov
dec
not
and
loopne
stc
retf
xor
popf
enter
or
out
retf
es
push
and
push
xchg
ins
push
xor
add
std
lea
jmp
cmps
and
aam
imul
pop
test
adc
cmp
out
mov
mov
dec
neg
dec
xor
(bad)
sbb
or
inc
(bad)
rcr
adc
adc
pushw
jl
mov
dec
les
push
lock
sub
imul
daa
sub
fisub
mov
lods
cmps
(bad)
outs
movs
movs
iret
sar
ror
mov
fstp
dec
cmp
mov
cmp
lods
cmp
outs
cmp
out
xor
dec
sbb
mov
push
push
or
push
cmp
les
or
nop
add
xor
lods
div
sbb
mov
dec
push
icebp
dec
cmp
pop
retf
stos
stc
aam
mov
shl
push
jno
adc
(bad)
stos
enter
push
inc
fcomp
inc
sub
sbb
sti
jo
mov
mov
rcr
mov
fimul
mov
sub
mov
iret
and
in
xchg
ins
cmp
or
or
mov
sti
adc
adc
js
enter
std
adc
xchg
mov
mov
sub
sub
in
or
xchg
mov
stc
add
xor
fucomp
ds
sbb
jne
mov
sti
mov
xor
iret
repz
push
rcl
add
pushf
in
mov
sbb
mov
push
es
test
xchg
out
mov
loop
mov
jl
fnstenv
out
shr
pop
mov
mov
call
outs
(bad)
push
test
mov
ficomp
repz
js
mov
adc
inc
sub
mov
iret
sub
sbb
mov
and
neg
cmps
out
(bad)
mov
imul
arpl
not
cmp
les
xor
or
xor
in
nop
ins
pop
mov
cmp
inc
sub
mov
pop
sbb
ficom
inc
popf
cmps
sahf
mov
and
retf
pusha
sub
jbe
mov
and
mul
fist
inc
sti
mov
mov
cmp
inc
mov
or
add
call
inc
outs
and
xor
sbb
cmp
and
inc
jge
clc
ins
sbb
xchg
cli
mov
add
loop
mov
outs
add
shl
(bad)
call
inc
mov
add
(bad)
out
adc
mov
test
scas
jb
adc
retf
(bad)
mov
pop
movd
lahf
leave
inc
test
jmp
dec
in
lock
imul
out
(bad)
out
jmp
jns
push
cdq
pop
inc
sbb
dec
or
cs
fld
test
(bad)
mov
sub
mov
or
jmp
enter
int
ret
sub
aaa
xor
jae
and
sub
je
stos
add
mov
test
jmp
adc
add
jb
mov
lods
mov
xor
nop
mov
mov
push
aaa
int
test
mov
repnz
fidiv
mov
pop
jp
dec
mov
cld
fsub
mov
scas
cmp
in
cwde
add
mov
cmp
mov
mov
mov
enter
jns
push
or
pushf
jo
ss
stos
jnp
ins
mov
pop
stos
jnp
adc
mov
ds
stos
push
(bad)
outs
popa
fsub
mov
(bad)
lock
push
jo
jg
cdq
add
pop
popf
inc
mov
test
stc
and
push
mov
or
mov
out
mul
ret
inc
mov
cmp
fwait
das
mov
sub
xchg
cmp
jge
pusha
sbb
cmp
ins
xchg
or
sub
(bad)
fwait
hlt
lock
imul
ja
leave
or
in
scas
jo
cld
fdiv
mov
push
and
dec
push
loop
xor
les
shl
pop
test
(bad)
fsub
dec
and
add
rcr
cld
pop
out
sbb
pop
pop
sub
outs
push
enter
aam
inc
lods
out
add
cmp
test
out
cmps
stos
cwde
pop
cmp
outs
cmp
(bad)
mul
in
adc
and
lock
lea
xor
shr
pop
mov
mov
xor
sub
movs
pop
sub
lahf
add
shl
jns
jg
mov
aad
retf
outs
adc
inc
cmp
shl
inc
mov
jge
retf
lods
cmp
ins
call
adc
xor
adc
inc
test
mov
mov
push
sbb
dec
push
scas
dec
loop
sbb
fisub
pop
xor
stc
int
push
lea
mov
xor
movs
add
dec
push
rcr
push
stos
xchg
jge
in
cs
movs
clc
cmp
in
push
mov
and
pop
and
fwait
jno
inc
and
push
(bad)
sti
outs
pop
dec
ins
inc
push
xchg
mov
jae
dec
mov
jmp
test
push
xchg
jl
pusha
mov
sbb
ss
sbb
fsubr
cmps
mul
adc
add
push
movs
push
pop
jb
lds
hlt
mov
icebp
adc
push
sub
inc
int3
or
je
ret
pop
adc
repz
sbb
dec
aas
popf
leave
aas
hlt
sbb
aas
test
mov
(bad)
mov
aam
loope
and
shl
loope
fmul
cmc
pop
outs
jmp
imul
mov
jp
push
gs
adc
mov
adc
mov
or
xor
sbb
mov
push
sbb
and
scas
ret
in
in
sub
mov
div
das
jmp
or
cmps
retf
imul
sar
sbb
repnz
stos
push
aad
loope
push
call
mov
jmp
popf
repz
bound
not
pop
jb
add
lods
outs
rcl
mov
inc
das
cdq
clc
dec
mov
inc
jno
cwde
push
in
jo
inc
dec
adc
cmp
rcr
out
iret
fidivr
cli
and
or
push
aas
pop
mul
mov
ror
push
(bad)
mov
mov
xchg
aam
dec
mov
int3
and
mov
retf
adc
rol
mov
jae
leave
mov
(bad)
and
jo
mov
mov
mov
test
add
jmp
out
in
mov
mov
adc
cmc
enter
retf
into
pop
and
aad
ja
in
imul
cs
or
ja
push
mov
push
adc
adc
cdq
nop
adc
in
dec
pop
jb
retf
cmps
das
movs
outs
fmul
loop
jne
pop
dec
sub
mov
enter
jnp
xchg
hlt
pop
(bad)
enter
ins
ficom
mov
sar
add
xchg
outs
push
icebp
inc
daa
mov
mov
in
nop
stos
and
out
cld
xchg
sbb
and
ja
jmp
sub
rsqrtps
add
and
fdivr
rol
or
mov
inc
pop
mov
les
movs
and
out
xor
cli
add
sar
stc
jae
cmc
jg
jmp
imul
in
and
in
add
in
fimul
pop
test
adc
cwde
cmp
jb
xchg
nop
push
sub
gs
xor
jb
adc
ins
mov
movs
jbe
mov
in
jne
xchg
shl
xor
push
mov
mov
or
stos
inc
adc
pop
add
inc
sti
push
sti
ins
(bad)
bound
adc
outs
leave
mov
arpl
ins
pop
sub
sub
sbb
push
fwait
inc
pop
sub
loope
test
loopne
pop
mov
in
ret
aas
ja
shr
mov
dec
cmp
rcl
mov
aam
jae
ret
(bad)
xchg
cmps
es
(bad)
cwde
mov
aaa
fxch
mov
push
or
mov
xchg
mov
sbb
ins
shl
lods
xchg
xchg
add
(bad)
adc
push
frstor
push
mov
sbb
push
lock
fs
in
out
jmp
sub
int
add
stos
mov
pop
shl
rcr
mov
outs
aam
cmc
jbe
sbb
lods
xor
or
mov
jmp
jmp
push
or
stos
lea
fwait
mov
imul
bnd
aam
and
push
rcl
fild
out
ins
ret
mov
out
pop
inc
or
add
sub
test
mov
scas
sbb
and
xchg
test
or
fild
shl
movs
rol
mov
sub
sub
daa
les
int3
mov
ds
sbb
xor
jbe
jbe
mov
std
int3
fisttp
fstp
jbe
xchg
fnstenv
jns
mov
shl
pop
dec
outs
mov
mov
xor
add
int3
sub
(bad)
jne
(bad)
ins
jne
xor
cmp
cmps
adc
lock
push
adc
in
scas
mov
jne
aam
and
mov
ins
sbb
into
in
loop
test
gs
mov
das
rol
mov
sbb
push
mov
(bad)
rep
cmp
adc
sub
test
movs
dec
xchg
enter
xchg
mov
sahf
pop
aad
hlt
ss
jl
adc
pop
in
cdq
(bad)
cmp
mov
idiv
xor
or
push
push
push
and
and
xchg
icebp
mov
loope
xchg
fisttp
imul
(bad)
cmp
sub
sbb
xchg
adc
mov
sbb
imul
cwde
jp
add
adc
aas
rcr
leave
mov
(bad)
cmp
dec
stos
push
(bad)
mov
imul
add
fnstenv
mov
push
lock
mov
out
jecxz
adc
mov
mov
mov
rol
dec
or
push
iret
es
popa
xor
cmps
jae
sbb
adc
inc
pop
push
mov
sbb
jns
pusha
or
mov
cmp
mov
aad
cdq
movs
scas
jge
push
add
rcl
fcmovne
push
mov
leave
jae
xchg
scas
pop
xchg
hlt
mov
sub
mov
inc
jl
or
shl
sub
xchg
push
ja
dec
in
stos
cmp
fisttp
mov
mov
clc
retf
xchg
retf
xchg
and
push
pop
lahf
and
mov
sub
dec
mov
data16
or
inc
rcl
dec
sbb
loope
cmp
add
mov
sti
dec
xchg
fst
pop
lock
mov
add
inc
and
fbstp
and
test
push
mov
inc
fwait
repz
or
data16
ror
or
jmp
data16
mov
jp
pop
mov
std
imul
xor
dec
ins
adc
gs
repz
cmc
dec
in
(bad)
stc
ret
push
out
lock
jb
(bad)
fcom
lock
fidiv
aas
mov
sbb
push
in
jb
enter
cmp
cmp
pop
xchg
in
xchg
adc
mov
aad
mov
push
xor
adc
jae
cmp
push
icebp
icebp
gs
push
or
mov
dec
push
jbe
pop
leave
pop
ja
pushf
adc
(bad)
push
push
or
je
das
loop
rcl
outs
dec
mov
in
(bad)
adc
jns
add
(bad)
pushf
dec
fdiv
ins
mov
rcr
addr16
push
push
clc
nop
daa
xor
sbb
mov
retf
jmp
add
out
push
lods
stos
int
sub
cmps
xchg
(bad)
out
mov
mov
ret
fcmove
mov
cmp
in
jno
je
int
iret
add
cmp
sbb
sti
(bad)
cmp
sub
jno
jns
loope
in
in
fcomip
jns
xchg
and
push
jno
cmp
mov
imul
loopne
in
inc
(bad)
mov
int3
mov
in
xchg
pop
fcmovnb
sbb
and
jbe
xchg
inc
mov
pop
neg
fldenv
mov
push
test
push
jnp
jmp
ret
pop
repz
popa
dec
movs
cld
xor
daa
jmp
mov
test
lea
rcl
bswap
ja
jl
sbb
clc
dec
retf
test
mov
in
fldenv
pushf
xchg
inc
xor
test
xor
inc
fwait
cmps
cmp
push
arpl
inc
add
jmp
xchg
stc
pop
cld
scas
mov
jb
je
repz
jnp
xor
out
sbb
outs
xchg
mov
and
sub
(bad)
lahf
cld
xchg
mov
dec
mov
dec
test
adc
mov
add
je
dec
(bad)
fstp
aam
imul
mov
mov
outs
inc
retf
fcomp
cmp
mov
sub
bound
mov
clc
pop
int3
stos
xor
pop
cmp
popf
fnstsw
mov
mov
xchg
(bad)
test
dec
and
cmp
call
xchg
into
sub
aad
mov
mov
jmp
pop
or
or
inc
mov
(bad)
in
(bad)
push
call
lock
sub
mov
sub
into
imul
call
cld
(bad)
in
add
ret
aam
(bad)
(bad)
sbb
xchg
out
mov
idiv
test
fs
test
push
or
xor
cdq
retf
sbb
xchg
jne
inc
and
hlt
jns
mov
adc
(bad)
and
sahf
rcl
in
ss
ret
xchg
sub
mov
or
retf
mov
adc
jno
dec
(bad)
push
push
cmp
sti
ds
pop
js
ret
pop
dec
lock
cwde
dec
retf
frstor
xchg
jmp
jge
je
pushf
jno
or
ds
les
xchg
in
and
sub
scas
(bad)
es
xchg
(bad)
icebp
mov
mov
jno
jnp
mov
cld
add
and
jno
sub
outs
jbe
dec
xchg
xor
lock
mov
sub
jb
dec
inc
push
inc
jb
or
(bad)
cmc
xor
mov
ds
xor
jecxz
jne
and
ds
mov
retf
xchg
and
int3
adc
push
outs
cdq
jb
mov
mov
mov
ja
mov
push
jp
lods
jae
pop
fild
popf
xor
loopne
test
loop
ret
sbb
push
xchg
fs
out
pop
movs
in
push
push
xchg
addr16
cmp
nop
pop
out
retf
scas
cmp
fnsave
cwde
xchg
or
test
ins
inc
loop
sub
adc
jmp
jp
mov
(bad)
push
dec
idiv
inc
dec
xor
push
ins
add
push
or
cmp
mov
lock
aad
ja
jae
xchg
mov
cwde
loopne
inc
sbb
(bad)
int
inc
inc
sbb
sbb
mov
cmp
shl
retf
fmul
sbb
add
addr16
pop
sub
out
test
out
pop
and
js
ficom
xor
js
jecxz
rcr
mov
adc
mov
dec
sub
inc
shr
mov
or
mov
(bad)
lods
bound
inc
outs
pop
mov
(bad)
popa
fcmovnbe
aaa
xor
jge
addr16
cmp
adc
pop
out
mov
inc
popa
mov
xchg
jae
push
cmp
or
sbb
lahf
rol
pop
out
aaa
test
nop
(bad)
mov
add
(bad)
xlat
imul
in
dec
inc
or
jp
out
and
sub
rcr
sti
pushf
retf
adc
(bad)
pushf
int
aaa
push
jo
test
loop
sbb
sbb
int
cmp
dec
retf
ret
add
jb
scas
or
or
sbb
adc
fdiv
cmp
(bad)
jae
ins
cwde
cmc
stc
mov
push
cld
(bad)
ja
dec
clc
sar
xchg
push
int3
cld
and
dec
cwde
cwde
in
lds
or
dec
lds
(bad)
jb
jg
in
sti
push
mov
cdq
dec
push
or
xor
mov
jmp
xchg
scas
fidiv
imul
arpl
(bad)
call
push
add
mov
ret
nop
dec
adc
adc
jno
and
sub
push
(bad)
push
aas
push
cmc
ret
sbb
jb
xchg
cwde
dec
lods
repnz
shl
mov
mov
mov
dec
dec
je
pop
mov
fld
xchg
mov
les
pop
xchg
adc
push
sbb
ja
mov
test
cmc
sub
psubusw
loop
nop
in
add
xor
fldenv
xchg
xchg
lea
fld
cld
xor
std
xor
or
pop
iret
into
enter
push
(bad)
mov
jp
cmp
dec
xchg
repnz
or
gs
shufps
mov
cli
inc
sbb
shl
clc
das
mov
sti
xor
pop
add
sbb
adc
(bad)
fiadd
fld
mov
inc
sar
in
ror
test
arpl
cld
test
repnz
pop
adc
xor
dec
out
push
out
pop
pop
add
test
ds
cdq
inc
leave
or
mov
adc
jmp
test
and
xchg
daa
mov
mov
dec
mov
pop
dec
jp
add
fnstenv
xchg
inc
movs
add
or
scas
dec
fs
and
xor
popa
mov
jb
nop
mov
dec
inc
mov
ret
sbb
icebp
out
sub
mov
js
js
push
mov
jae
loop
jg
(bad)
scas
test
inc
mov
popf
pop
pop
repnz
jno
xchg
pop
(bad)
je
xor
dec
add
jg
fidiv
push
push
das
aam
mov
and
out
inc
popa
(bad)
pop
daa
sbb
cmp
(bad)
mov
jo
rol
cmps
jns
sbb
jg
and
adc
les
in
mov
fisub
into
shl
mov
stos
lods
jmp
sub
les
mov
xor
pusha
push
cmovg
mov
adc
sbb
loope
addr16
push
adc
fistp
out
movs
inc
je
mov
xchg
fild
mov
btc
sub
outs
push
pusha
pop
add
sti
push
retf
cmp
pushf
sbb
dec
mul
enter
dec
outs
dec
jle
mov
push
shl
mov
fdiv
jmp
push
mov
fld
cmc
pop
cmc
add
cmp
test
dec
dec
xlat
movs
cmp
fsub
mov
push
xor
rol
cmp
adc
or
push
fldcw
mov
or
cmp
cmp
mov
scas
es
xlat
retf
mov
stc
mov
clc
mov
mov
out
jp
stc
mov
retf
pop
inc
in
stos
cdq
je
pop
clc
sbb
stc
jns
and
sti
pop
bound
dec
out
push
xchg
xchg
and
test
dec
fcomp
mov
(bad)
inc
fist
mov
aas
dec
(bad)
mov
mov
(bad)
cmp
xor
bsf
fild
xor
mov
imul
xor
xor
mov
push
jne
hlt
cmp
mov
jmp
test
stc
aas
xchg
add
pop
cmps
sub
or
cwde
or
std
push
pop
movs
ja
call
mov
int
xchg
xchg
push
sbb
stos
add
mov
mov
lds
mov
xchg
cmp
cld
push
cmps
(bad)
or
sub
(bad)
push
mov
push
xchg
cmp
xchg
mov
push
mov
adc
lds
push
ins
adc
(bad)
pop
dec
test
cwde
pop
jo
stos
or
in
repnz
inc
cld
movs
pusha
mov
jmp
jae
xor
nop
and
xor
xor
mov
js
or
mov
mov
mov
mov
sbb
loope
(bad)
pop
inc
lock
push
lea
mov
pop
fiadd
and
sbb
popa
pushf
cmp
pop
sti
inc
in
retf
mov
repz
push
das
push
mov
add
mov
sbb
pop
repz
lea
cmp
jge
mov
inc
xor
sub
repz
adc
out
iret
fsubr
mov
outs
cwde
idiv
pop
pop
cmp
js
loop
ins
dec
sahf
jmp
imul
mov
xor
ficom
push
mov
not
je
inc
jo
push
jecxz
repnz
out
jnp
(bad)
neg
std
movs
pop
loop
sub
add
pop
fldcw
cmc
or
(bad)
xchg
test
(bad)
push
mov
xchg
or
sbb
jns
(bad)
cwde
pop
push
or
loopne
push
cmp
sti
addr16
es
dec
and
jl
mov
and
in
out
fisttp
stos
pop
adc
sub
jmp
cmp
pop
cdq
pop
and
ins
sbb
aam
cmp
cmp
arpl
imul
adc
test
cmc
sti
shr
mov
sbb
add
popf
push
xor
pop
int3
pop
shr
cmp
(bad)
jo
sub
mov
aad
aam
dec
retf
(bad)
fldcw
loopne
xor
push
dec
pop
adc
shl
test
retf
mov
jle
fistp
int
clc
add
jl
jo
bound
add
pop
push
mov
cwde
fist
arpl
ror
mov
popa
or
push
enter
std
fwait
add
jnp
iret
jp
jle
mov
mov
test
outs
cmc
and
fild
aaa
call
push
jecxz
push
mov
std
fisub
imul
stc
arpl
mov
mov
inc
outs
ret
repnz
push
out
shl
loop
lock
mov
loope
repnz
scas
loopne
mov
sbb
and
lods
out
push
mov
ja
in
into
repnz
push
push
jo
jmp
add
inc
inc
pop
xchg
adc
or
jg
icebp
mov
xor
mov
mov
cmp
and
add
scas
sar
enter
sbb
mov
jmp
xchg
outs
jns
jp
xchg
int3
mov
or
jo
(bad)
push
jbe
xchg
mov
loope
add
stc
xchg
push
xor
dec
(bad)
mov
fs
add
add
add
dec
mov
cmp
xchg
and
nop
dec
call
pop
jb
mov
pop
add
imul
mov
mov
jg
ffree
out
xor
jne
jo
inc
push
pop
adc
push
cmp
pop
shl
add
lock
mov
out
fs
jns
out
xor
mov
rcl
xchg
jo
sub
and
fbstp
nop
test
jno
dec
sbb
iret
mov
mov
daa
sub
jmp
and
fdivr
pop
and
aad
outs
bound
xor
cmp
xchg
or
icebp
mov
xchg
dec
sub
jmp
int
in
call
mov
dec
test
or
mov
retf
aad
jle
aas
daa
mov
adc
xor
mov
leave
xor
mov
das
push
neg
aas
test
(bad)
fisubr
sbb
inc
imul
xchg
int3
xchg
movs
xchg
inc
add
xor
ins
int
push
addr16
lds
sub
jg
lods
popf
test
mov
call
out
ja
hlt
mov
lahf
pop
dec
add
pushf
adc
cmc
aas
push
bound
imul
sahf
clc
sbb
pop
mov
adc
(bad)
pop
mov
ins
xchg
cld
sbb
xchg
enter
sub
fwait
sub
test
hlt
cmc
aam
clc
lock
push
pusha
cwde
and
jg
(bad)
out
(bad)
dec
xor
xchg
dec
pop
lahf
jle
clc
inc
add
dec
sar
mov
add
push
movups
aaa
jle
repnz
gs
push
xor
jmp
mov
aad
fidiv
mov
sub
mov
dec
mov
es
retf
and
inc
mov
repz
shr
inc
push
ins
outs
rcr
mov
cs
loop
stc
push
imul
test
jno
movs
imul
std
pop
cmp
inc
or
cli
sbb
(bad)
fsubp
fsub
dec
lock
test
jb
ss
jge
push
sub
jbe
sub
xchg
and
mov
cli
leave
pusha
(bad)
movs
mov
(bad)
add
push
sti
xchg
ss
jns
inc
aaa
jle
pop
sub
pusha
rcl
mov
xchg
ret
xchg
and
out
(bad)
retf
mov
scas
push
sti
push
adc
gs
cmps
sub
ror
pop
xchg
and
and
xor
rcl
mov
test
ret
xlat
sbb
inc
or
das
or
xchg
mov
xor
aaa
inc
cmc
and
popa
mov
or
test
add
loope
pop
mov
adc
scas
mov
add
sbb
sub
stc
fild
movhlps
lea
xchg
sbb
push
in
in
cmp
daa
or
int
mov
inc
jo
mov
cmp
mov
jb
mov
push
cwde
scas
rcl
mov
imul
jle
dec
jo
cmp
pop
add
adc
sub
mov
mov
sub
or
lahf
ss
movs
lahf
div
jb
loope
push
dec
jp
push
jno
out
jae
clc
in
sbb
xchg
mov
push
rcr
not
cmps
jmp
adc
mov
push
(bad)
xor
inc
mov
fldenv
fstp
sbb
cmc
or
pop
jae
sbb
or
mov
lea
add
iret
mov
xchg
jge
(bad)
int
sar
jno
stos
dec
aaa
mov
daa
cmc
jne
pusha
xlat
dec
dec
cmp
sbb
push
xchg
mov
mov
jmp
test
xor
sub
pop
xchg
fmulp
inc
es
xchg
xchg
mov
out
sbb
out
test
dec
lods
mov
fcomip
cmps
ret
push
or
sub
cs
cmps
pop
loop
dec
fisttp
lahf
inc
xor
xchg
push
xor
das
add
inc
inc
dec
xchg
jecxz
loop
ret
or
fstp
shl
and
cmp
dec
sti
push
mov
jns
sbb
mov
push
int
cmps
retf
xchg
inc
clc
lods
lock
push
xor
out
or
(bad)
in
and
push
mov
aaa
fsubr
aam
add
xchg
jae
push
cmps
adc
inc
lock
jmp
mov
lds
xchg
push
add
xchg
mov
popf
jp
ror
inc
and
outs
pop
mov
ins
sbb
push
xchg
jge
(bad)
(bad)
cmp
dec
sub
pop
aas
retf
jnp
fnsave
jb
cmps
xchg
mov
fwait
push
push
movs
outs
adc
mov
cmp
mov
in
arpl
inc
sub
cmps
mov
pusha
jecxz
jecxz
xchg
sbb
shr
cmp
mov
pop
or
or
clc
and
sbb
in
int
push
or
mov
or
aam
dec
inc
clc
push
ins
movs
test
jae
mov
je
ja
push
cmp
mov
ins
adc
or
xchg
nop
pop
mov
lds
sbb
jmp
adc
mov
addr16
aaa
cli
adc
jo
cmps
ins
mov
nop
std
adc
movs
xor
cmp
cli
push
mov
jb
cmps
lea
mov
clc
loop
mov
out
sub
jp
and
add
sbb
mov
icebp
inc
aad
aam
push
out
rep
test
push
push
add
adc
add
sub
push
sti
push
movs
adc
les
aaa
push
adc
mov
sbb
sub
sbb
rol
imul
and
jl
dec
or
arpl
addr16
stos
pop
ret
int
or
xchg
mov
leave
scas
nop
mov
aaa
lock
and
lea
je
jbe
jne
jnp
repz
lahf
test
add
mov
ins
xor
xor
cmc
ds
mov
pushf
repnz
push
or
ficomp
and
leave
aad
fld
rcl
out
test
mov
pop
push
lods
aas
test
inc
push
aad
cmp
shl
fild
in
js
dec
xor
jp
jg
jae
mov
retf
ss
push
movs
into
outs
cmp
test
inc
bound
sbb
(bad)
retfw
jg
push
jle
retf
fadd
stos
scas
loopne
(bad)
sub
cmp
pop
adc
sar
je
cmp
jnp
mov
sbb
inc
mov
js
pop
xor
add
sbb
xor
add
mov
cmp
enter
sbb
xor
mov
cld
adc
ja
cmp
loope
ins
cdq
jp
pop
push
in
mov
adc
inc
ja
ret
icebp
xor
rol
mov
test
push
inc
sbb
fmul
ds
xor
lahf
enter
mov
xor
pop
cli
pusha
xor
adc
and
mov
mov
mov
out
mov
outs
ds
jne
rcr
mov
jo
jbe
out
jmp
dec
ds
adc
inc
mov
mov
ja
xchg
out
add
das
cmc
xor
sar
test
test
test
xchg
es
mov
stos
das
or
fstp
ja
dec
mov
xchg
xchg
jp
sahf
cmp
mov
int
or
mov
sbb
popf
fdiv
cmp
mov
mov
push
fcomp
fcom
mov
jae
sbb
mov
daa
popa
pop
lock
ficom
xor
or
jns
cmp
jmp
pop
retf
and
loopne
call
add
retf
mov
mov
adc
xor
aad
sbb
dec
fstp
stc
arpl
push
sbb
or
int3
inc
aam
xchg
aas
in
adc
movs
or
push
shl
jae
iret
jl
xchg
repz
mov
pop
lods
addr16
xchg
mov
cmp
sub
sbb
sbb
push
add
imul
cld
or
int3
jns
sub
and
mov
fidiv
jo
pushf
pop
push
in
mov
adc
cmp
repz
inc
jae
(bad)
dec
mov
push
mov
call
push
or
ins
mov
jmp
jle
sar
xchg
scas
xor
adc
adc
xchg
iret
fincstp
inc
sbb
nop
pop
fisttp
es
aaa
fnstsw
adc
mov
cwde
stos
adc
ss
or
cdq
inc
fs
cmp
and
das
inc
addr16
pop
sub
aaa
and
shr
aam
cmp
sbb
cvtps2pd
outs
xor
iret
cwde
mov
fs
lahf
adc
not
retf
dec
cld
xor
xlat
cs
lea
jne
cmp
push
push
jno
adc
pop
add
xchg
push
or
push
sub
add
cmp
imul
in
adc
push
movs
jns
test
test
je
and
mov
ss
mov
sbb
adc
(bad)
je
jmp
mov
push
test
xchg
in
(bad)
pop
loopne
mov
mov
push
mov
dec
enter
cld
xor
lahf
out
mov
xchg
push
xchg
sbb
test
js
and
pop
push
mov
das
fisubr
lea
xchg
fisubr
inc
mov
std
(bad)
outs
lea
bound
pop
pop
push
push
fidivr
sbb
retf
test
repnz
adc
iret
dec
inc
lds
cmp
fisub
in
adc
pop
mov
int
rcr
retf
fadd
adc
movs
mov
cmp
add
test
xlat
adc
pop
loope
mov
popa
sub
or
sbb
xor
pop
adc
repnz
xchg
in
jp
outs
sahf
add
sub
adc
inc
sub
das
push
dec
shl
xor
aaa
jbe
add
jne
pop
scas
outs
in
adc
je
les
jg
jae
jae
nop
push
jno
popf
div
ds
aam
std
push
or
cmps
xor
in
das
sbb
or
icebp
mov
fdiv
sbb
retf
adc
mov
cs
data16
dec
cmp
into
rol
pusha
in
mov
jbe
bound
mov
cs
unpcklps
sub
sub
mov
aas
cmps
adc
test
sbb
dec
cmp
daa
xor
jp
cmc
in
shl
popf
(bad)
jge
mov
jmp
pop
cld
das
jns
dec
lods
inc
add
fidiv
mov
lods
js
neg
mov
jecxz
out
pop
retf
xor
jp
dec
and
mov
xor
nop
(bad)
jl
imul
adc
popa
shr
dec
rol
mov
push
jmp
mov
outs
cmp
lods
mov
sub
adc
lods
sub
cmps
jecxz
in
inc
push
shr
xor
and
aad
dec
mov
sub
daa
cmps
add
outs
(bad)
outs
aaa
sub
xor
or
xor
mov
push
xchg
into
fsqrt
call
sbb
loop
out
aad
add
jmp
(bad)
out
test
jnp
pushf
cmp
or
xchg
arpl
push
cmc
xor
out
sbb
sahf
fwait
test
and
daa
hlt
inc
fdiv
pop
mov
pop
stc
dec
movs
fmul
dec
jo
cld
addr16
ss
es
pop
cmp
pop
mov
xchg
(bad)
int
add
push
outs
push
mov
fcmovnbe
sahf
add
xlat
das
pop
mov
or
pop
bound
retf
jge
popa
shl
add
lods
test
imul
mov
push
xor
stc
or
sub
enter
test
scas
and
sbb
mov
add
sub
fimul
inc
out
dec
jge
push
ret
push
ja
cld
loope
test
or
addr16
mov
mov
or
or
mov
add
xchg
and
push
cmps
or
cmps
enter
jp
jge
clc
cld
ds
sti
add
or
dec
pop
in
jnp
mov
xchg
(bad)
fninit
xchg
xchg
inc
pop
(bad)
aaa
mov
push
sti
sar
push
lock
mov
mov
mov
xor
push
test
add
sub
cmps
mov
aaa
aaa
mov
pusha
jmp
mov
movs
loop
data16
out
and
mov
dec
mov
push
xchg
push
ds
(bad)
(bad)
pushf
xchg
lds
mov
pop
dec
inc
popf
enter
int3
test
in
retf
fndisi(8087
cmps
and
mov
or
cmps
ins
xor
(bad)
(bad)
enter
mov
mov
(bad)
adc
mov
xchg
jg
test
loope
xlat
in
inc
in
rcl
and
jnp
sub
cld
pop
jnp
mov
shl
fstp
call
or
and
stos
mov
fnstcw
cwde
xchg
dec
jmp
or
(bad)
jmp
dec
push
pop
xchg
ror
and
(bad)
icebp
cmp
mov
or
imul
jbe
outs
cmp
dec
xor
xchg
nop
add
daa
cli
repz
imul
sub
(bad)
or
or
mov
pop
and
clc
lock
adc
das
push
je
dec
dec
push
in
add
cmps
mov
add
pop
mov
repz
repz
ss
cli
mov
push
mov
in
retf
fld
movs
rol
cmp
scas
dec
jg
and
inc
shl
xor
dec
repnz
outs
mov
pushf
test
cmp
mov
cwde
mov
jg
enter
sub
mov
in
(bad)
jp
dec
and
int
(bad)
xor
mov
bswap
push
test
push
iret
sub
add
xor
jle
cmp
rcr
bound
int3
mov
inc
jae
int
adc
cwde
mov
call
fwait
mov
mov
push
imul
je
in
retf
push
dec
mov
in
sbb
mov
lock
pop
pop
stc
int3
scas
mov
push
inc
pop
rol
sbb
shr
pop
lds
jns
mov
mov
cmp
hlt
test
fisub
mov
aad
xchg
push
mov
add
movs
in
mov
pushw
jnp
sub
mov
int3
(bad)
lds
add
cmp
pop
repnz
addr16
or
(bad)
jno
add
sbb
repnz
(bad)
add
lods
movs
xlat
aaa
scas
pop
pushf
pop
hlt
fimul
ret
cmps
cld
push
add
ja
aas
sbb
lea
inc
mov
stc
clc
xchg
rol
repnz
div
sahf
test
mov
mov
sub
cmc
xchg
cmc
jecxz
mov
sbb
fcom
retf
lahf
mov
int3
inc
jecxz
sub
dec
fwait
into
jnp
loopne
cmp
add
fisubr
jae
outs
jecxz
arpl
jnp
jp
loop
js
jmp
dec
das
or
cmps
loope
add
jae
not
or
popf
fiadd
and
jg
in
loop
jns
cdq
mov
mov
jne
push
or
and
inc
sub
mul
adc
jo
in
jno
dec
mov
div
xchg
leave
xchg
stos
xchg
sti
int3
jecxz
cmps
jbe
sbb
jp
jecxz
add
pop
in
sahf
xor
jmp
dec
js
loopne
js
leave
add
jbe
sbb
repz
fs
pop
fcmovnu
repnz
popa
pop
sbb
test
mov
loop
mov
xchg
pushf
fidivr
add
dec
inc
sbb
stc
xor
scas
mov
cmp
test
cmp
inc
les
and
xchg
xchg
pop
clc
mov
inc
pop
mov
xchg
lods
push
add
ins
jp
adc
mov
xor
xchg
enter
mov
lods
(bad)
pop
sahf
inc
ins
aam
sbb
into
xor
shl
mov
mov
outs
fnstsw
outs
push
push
shr
mov
pop
sub
mov
mov
cmc
sbb
stos
pop
mov
mov
dec
cmp
xor
in
fs
xor
and
mov
stc
sub
ins
pop
je
adc
adc
mov
jne
sbb
popf
outs
pop
aad
pop
push
adc
sub
or
leave
cld
mov
outs
rol
push
add
sbb
mov
cli
in
out
inc
inc
es
outs
dec
icebp
add
mov
xor
cmp
and
push
aam
or
shl
mov
sbb
ffreep
xchg
test
fistp
mov
cmp
hlt
jge
mov
dec
les
add
ret
sbb
mov
in
int
adc
imul
mov
xor
addr16
rol
jo
scas
jp
jmp
mov
hlt
add
xchg
(bad)
enter
jmp
push
stos
imul
or
push
add
cmc
and
dec
xor
lahf
xor
mov
push
sub
stc
mov
aaa
test
lock
jp
mov
in
jmp
imul
push
test
lahf
sub
adc
push
mov
outs
test
jo
jp
lods
fdivr
sti
call
xor
jne
push
jo
and
add
inc
xchg
jae
inc
jb
jle
pop
add
xchg
into
shr
fisttp
mov
cmps
cmp
dec
sahf
pop
xchg
movs
sub
cli
dec
mov
push
ds
(bad)
or
pop
mov
cli
pop
sbb
(bad)
mov
imul
jg
and
xchg
pop
cmp
xor
pop
(bad)
and
pusha
into
mov
scas
dec
dec
mov
in
test
xchg
movs
std
sub
mov
mov
ds
dec
mov
and
fdivrp
mov
push
popf
(bad)
out
push
jmp
lods
addr16
or
aad
int
add
cdq
pop
out
div
scas
dec
sbb
dec
dec
test
pop
aad
(bad)
popf
pop
jl
jge
xor
mov
fstp
pop
pop
xchg
pop
enter
mov
jno
cwde
shl
adc
imul
jb
mov
pop
sbb
out
and
push
cmps
ss
push
jp
mov
pop
nop
test
or
sar
test
and
sar
inc
out
push
ins
xor
pop
pop
stos
jecxz
jle
dec
pop
ja
cmp
loopne
ret
stos
retf
lock
dec
xor
sar
and
mov
out
stc
out
xor
inc
mov
inc
frstor
imul
xor
shr
and
mov
jb
xor
jmp
sbb
test
sbb
call
dec
sbb
dec
scas
sar
xor
(bad)
stos
popa
jp
rcr
clc
mov
pop
rcl
pop
pop
push
adc
cmp
scas
add
pop
enter
add
call
cmc
hlt
lods
jns
test
dec
je
sub
adc
xchg
fist
loop
jns
push
inc
jns
mov
jmp
call
push
mov
dec
pop
dec
mov
push
call
addr16
jecxz
xor
pop
cld
jge
fwait
xchg
pop
sub
jb
fimul
(bad)
sti
adc
aaa
dec
dec
call
and
punpckhwd
sbb
xlat
call
add
xchg
mov
mov
xor
xchg
sub
ja
jbe
push
call
dec
xlat
retf
sub
cmp
adc
sub
test
out
rcr
rol
inc
pop
stos
jmp
jle
sub
dec
inc
bound
(bad)
mov
or
and
addr16
int3
ins
bound
or
gs
adc
call
mov
push
leave
repnz
cmp
pop
stos
cwde
adc
aam
jbe
inc
xchg
jg
ins
and
cmps
push
xor
push
sub
lahf
push
sub
lock
cmps
jmp
ror
out
imul
pop
mov
movs
dec
enter
test
xchg
ds
or
sub
inc
cdq
jl
dec
adc
push
adc
dec
adc
or
fsubr
stos
sbb
jb
mov
sti
arpl
scas
adc
jbe
adc
xor
add
scas
enter
dec
fs
pushf
dec
jl
ja
mov
mov
and
jecxz
push
add
clc
lea
lds
or
sbb
aas
sahf
pop
icebp
add
jecxz
popf
adc
adc
ss
outs
test
xchg
mov
movs
mov
dec
loop
repz
inc
xor
mov
pop
fild
in
in
push
imul
fisubr
mov
outs
test
mov
mov
cmps
test
sbb
push
loop
push
fcom
add
jno
jb
jno
sub
movs
push
push
or
mov
mov
not
call
(bad)
inc
xchg
cmps
inc
cmp
mov
sti
cmp
cmp
pop
(bad)
ds
arpl
xchg
fist
cmp
pop
mov
mov
ja
xchg
lods
xor
pop
mov
mov
js
movs
lock
jl
sub
adc
cmp
jg
sti
pop
cmp
into
mov
inc
out
stc
jne
jne
and
inc
push
sub
pusha
icebp
stos
nop
les
mov
jmp
(bad)
mov
mov
std
stc
ret
push
sbb
pop
xor
mov
lock
push
push
into
pusha
shrd
adc
mov
jecxz
adc
neg
sub
pop
cld
sti
add
fidivr
in
int3
mov
fbstp
sub
push
push
shl
data16
cmps
xor
push
cmp
cmp
pop
(bad)
dec
in
mov
je
xchg
xchg
fdivr
sti
icebp
pop
pushf
movs
push
or
movs
fcom
and
loop
xor
sbb
push
push
(bad)
or
xchg
inc
dec
adc
lock
jecxz
leave
mov
leave
jbe
repz
ins
xchg
out
inc
das
mov
(bad)
repnz
or
fldenv
repnz
sti
lods
pop
sbb
lods
(bad)
xchg
dec
cmp
jbe
and
test
mov
mov
leave
mov
retf
dec
cmp
cmp
pop
jae
retf
mov
adc
xor
inc
imul
mov
xchg
call
dec
in
cs
movs
jp
add
movs
fs
xor
add
outs
(bad)
fidivr
leave
(bad)
mov
xchg
out
xor
pop
mov
mov
mov
cli
mov
lods
fimul
(bad)
out
loopne
and
and
xor
dec
(bad)
push
cmp
sbb
or
(bad)
in
adc
xchg
xor
xchg
cwde
pushf
sahf
pop
pop
es
cmp
ret
shl
pop
xchg
jle
(bad)
cdq
out
aad
into
mov
rol
enter
mov
push
je
dec
cmps
fild
jae
push
fidivr
or
sbb
es
add
fld
cmp
add
test
loopne
mov
push
jp
dec
xchg
std
and
jl
xchg
enter
pushf
stos
jno
cmp
mov
ret
call
inc
out
sub
and
and
xchg
mov
aam
scas
sub
dec
dec
dec
jl
mov
stos
jae
shr
fmul
and
push
or
cmp
cld
pop
cdq
cmp
repnz
pop
(bad)
fscale
fcom
dec
in
iret
jno
mov
imul
out
jmp
mov
inc
fnsave
movs
mov
das
fistp
dec
cwde
cld
dec
or
or
pop
mov
retf
lds
push
in
jmp
lods
mov
dec
inc
mov
mov
test
cmps
xchg
ret
out
ret
out
gs
bound
xlat
cwde
aam
mov
test
pushf
jmp
ja
cmp
xchg
in
test
(bad)
pop
pop
cmp
cmp
mov
xor
stc
jl
sub
jns
mov
cmp
pop
pop
mov
outs
fcmove
sub
pop
xor
fs
add
mov
pusha
in
cmp
push
es
jge
or
jmp
rcr
test
(bad)
cld
mov
ja
sahf
cmp
or
loope
dec
dec
mov
jl
inc
pop
call
jb
pop
and
dec
adc
pop
mov
out
aam
jp
fisttp
repnz
rol
pop
stos
gs
stos
imul
es
add
mov
int
pop
mov
cs
pop
xchg
push
push
push
cmp
add
test
pop
jmp
or
and
cmps
xlat
add
xchg
hlt
xor
pusha
sbb
add
push
(bad)
pushf
or
xchg
pop
sbb
mov
rol
jbe
sti
jg
arpl
fisubr
or
cmc
dec
dec
aas
mov
jmp
dec
cmc
ds
xlat
mov
mov
jecxz
les
fldcw
mov
xor
call
sbb
sub
outs
sbb
dec
dec
sti
sbb
xchg
inc
test
lods
aaa
inc
add
loope
scas
jns
mov
mov
mov
xchg
xor
test
ins
idiv
mov
lock
xor
or
fist
push
(bad)
sub
in
xchg
pop
jno
fidiv
sbb
mov
push
mov
sar
and
fiadd
retf
arpl
test
sahf
sti
fmul
retf
jno
xchg
cmp
icebp
xor
repz
and
jo
fwait
inc
sub
dec
punpckhwd
jp
xor
cmp
and
push
ds
into
lea
sbb
inc
repnz
fcomip
push
loopne
call
in
pop
pop
xor
sbb
ret
popf
in
adc
fxam
ins
scas
add
lock
and
fsubr
mul
mov
shl
shl
mov
pusha
inc
jne
and
sbb
inc
retf
test
fidiv
cs
or
fstp
xchg
pop
mov
inc
shl
call
mov
jge
aaa
xchg
or
(bad)
imul
pop
xchg
scas
dec
jno
lods
push
add
leave
out
in
test
in
inc
or
lds
and
adc
pop
inc
ds
jne
mov
jl
cli
jp
add
jb
pop
cmp
ds
push
and
into
push
sub
int3
call
fcomp
xchg
mov
or
xor
jge
jle
push
cmp
ja
jo
push
mov
push
adc
dec
dec
mov
push
push
enter
dec
pop
stos
call
jne
jle
xchg
xor
ja
xlat
pop
stc
and
cmp
enter
sti
sbb
movs
xlat
jne
mov
sub
or
das
es
and
jb
stos
sti
adc
adc
jno
pop
mov
cmp
movs
(bad)
xlat
cmc
adc
mov
or
arpl
sbb
and
stc
xlat
or
imul
scas
xchg
(bad)
pop
mul
sub
mov
test
js
and
imul
daa
ds
dec
jg
popa
pop
hlt
movs
into
(bad)
dec
mov
loope
sub
mov
pop
cmp
(bad)
fidivr
pop
jl
mov
mov
mov
push
or
and
movs
sub
bnd
pop
rcl
dec
test
retf
mov
les
call
push
bound
pop
mov
xor
ins
or
outs
mov
test
add
mov
or
dec
and
inc
loope
sti
adc
ja
mov
add
scas
(bad)
sbb
push
jecxz
push
mov
adc
mov
jecxz
xchg
ss
cmp
out
pusha
popa
rcr
inc
fnsave
jl
icebp
gs
xrelease
and
pop
cmp
push
add
dec
or
pop
rcr
and
push
or
push
push
inc
popa
sub
jecxz
xchg
scas
and
arpl
xchg
mov
push
fwait
jno
in
jno
ficomp
adc
jmp
push
bound
push
cmp
cs
cmp
outs
jmp
pop
mov
retf
inc
xchg
add
mov
hlt
sub
hlt
je
bound
adc
movs
scas
jo
fdivr
sub
xchg
ror
lock
cmp
inc
loope
ins
ficomp
mov
sub
test
test
(bad)
adc
imul
(bad)
out
lahf
aaa
mov
in
or
inc
adc
and
inc
int3
test
adc
test
call
jge
ds
xchg
fisub
mov
fbstp
cmp
cs
jle
pop
mov
jmp
cdq
or
icebp
movs
pop
sahf
and
repnz
aas
jb
out
fwait
xchg
pop
mov
mov
xchg
cmp
jo
fmul
xor
sub
aam
fld
inc
xlat
imul
mov
je
or
mov
add
fidiv
ins
es
mov
ret
movd
jl
push
mov
xacquire
loopne
xor
xchg
jg
jle
ss
mov
mov
pop
and
mov
repnz
mov
mov
aad
adc
dec
jne
jl
(bad)
dec
test
inc
(bad)
pushf
xchg
pop
add
ins
(bad)
out
push
pop
jb
xchg
xchg
bound
lods
shl
adc
cmp
adc
inc
sbb
out
outs
xchg
pop
(bad)
cmps
ds
ret
daa
stos
lahf
out
jae
push
adc
out
push
repz
add
ds
mov
stos
shl
fistp
out
lods
jo
and
dec
inc
scas
or
scas
stos
call
ss
loope
cmp
ret
(bad)
cmp
xchg
imul
sti
fiadd
mov
pusha
cmp
and
cdq
dec
mov
lods
cmp
mov
xor
rcr
loope
scas
sub
cmps
push
mov
dec
js
movs
and
pop
mov
dec
ins
imul
mov
pop
call
leave
iret
clc
das
into
das
sub
(bad)
or
mov
imul
pop
sbb
div
daa
arpl
(bad)
jecxz
hlt
retf
hlt
push
(bad)
loope
mov
jae
inc
aad
push
repz
inc
mov
ret
cmp
cwde
mov
jl
out
pop
xchg
mov
aas
push
cmp
xchg
sub
push
add
rcl
mov
dec
test
sub
fcmovne
inc
test
outs
sbb
lods
or
clc
retf
je
inc
push
or
daa
mul
push
push
fwait
sbb
add
adc
(bad)
out
fs
in
outs
xor
jnp
mov
mov
mov
es
or
sbb
mov
sub
mov
pop
jmp
mov
jmp
mov
jnp
jno
xchg
mov
ss
sub
pushf
scas
pop
cmps
mov
scas
sub
or
aas
dec
test
scas
sbb
push
scas
pop
ins
and
push
hlt
rol
push
push
mov
push
and
mov
adc
nop
lods
cmp
jmp
cmp
xor
pop
ret
jnp
xchg
sbb
(bad)
int3
inc
shr
popf
xor
test
push
cli
xchg
push
add
popa
lods
mov
clc
jns
scas
aad
adc
xchg
fwait
outs
adc
dec
bound
test
or
jmp
sub
pusha
ja
test
call
dec
or
xchg
and
pop
dec
and
mov
lock
cmp
inc
sbb
repnz
sub
pop
lods
inc
cmps
mov
dec
xchg
gs
cld
scas
icebp
lahf
sub
stos
ja
add
jne
pop
and
outs
mov
out
push
mov
mov
cmp
(bad)
fnstcw
std
int
mov
cmp
jg
sub
mov
mov
push
sub
rol
xchg
scas
and
fild
sub
cdq
mov
dec
jmp
mov
das
fwait
cmps
sbb
ret
cmps
fstp
push
mov
inc
not
pop
shl
mov
dec
xor
and
daa
mov
push
and
push
mov
lock
ret
mov
das
aad
mov
jmp
adc
add
dec
fdiv
mov
push
loop
(bad)
(bad)
shl
stc
iret
jmp
jae
mov
add
sbb
push
inc
jmp
addr16
bound
ds
xor
loopne
pusha
mov
fimul
dec
pop
cmc
or
jmp
pop
lds
push
sub
into
ret
aam
out
sahf
(bad)
xchg
mov
dec
hlt
test
or
rcr
jle
(bad)
aas
mov
jl
pop
xchg
repnz
aas
int3
cmp
cmc
jno
pushf
test
lahf
pop
push
outs
sti
loopne
inc
lea
pusha
addr16
xor
pop
nop
clc
fstp
outs
sub
xchg
push
inc
test
xchg
gs
dec
push
xchg
retf
mov
in
imul
cdq
dec
repnz
lods
mov
push
shl
push
adc
lods
jp
mov
scas
pop
mov
xchg
je
add
sub
sahf
adc
cmp
sub
jle
dec
push
fdiv
jge
sbb
fcompp
cmps
adc
adc
add
inc
cmp
adc
sahf
ins
clc
dec
test
lahf
sbb
aad
aas
jmp
(bad)
and
xor
sbb
fcom
inc
das
iret
mov
xchg
call
jge
or
or
lds
mov
psllw
mul
or
sar
call
mov
lea
frstor
int
cmp
iret
cwde
mov
fs
xor
cwde
das
lahf
inc
or
jno
ret
sbb
fadd
lock
vandnps
rcr
popa
out
out
fidivr
std
sub
pusha
pusha
inc
fldcw
fstp
enter
inc
cmc
xchg
data16
mov
mov
fcmovnu
(bad)
mov
inc
xchg
cmc
fcom
sub
stc
leave
(bad)
js
shl
add
mov
ja
cmp
sub
mov
and
xlat
js
or
outs
push
imul
dec
sbb
scas
outs
dec
ror
jnp
pop
fs
call
dec
pop
and
daa
shl
xchg
mov
test
addr16
inc
sub
push
imul
scas
jge
mov
std
xor
jnp
ja
push
jecxz
xchg
sbb
int3
fnsave
pop
clc
pop
inc
mov
mov
mov
loop
shl
inc
lea
adc
jle
pushf
lahf
xor
xor
sub
xor
sbb
fcom
fcmovnbe
push
adc
adc
lods
or
or
mov
push
lods
mov
or
jmp
xor
xor
in
pop
cmp
fwait
arpl
push
frstor
fcom
cdq
push
pop
je
jbe
dec
xchg
pusha
inc
cmps
dec
or
mov
and
and
mov
xchg
push
and
cli
jmp
sbb
mov
mov
add
test
pop
mov
xchg
xchg
retf
(bad)
cmp
out
mov
inc
pop
pop
add
(bad)
ja
xor
inc
mov
jle
jae
sbb
pop
les
mov
or
push
adc
ins
dec
inc
cmp
push
inc
pop
push
sbb
mov
in
test
dec
xor
test
mov
popa
loope
xchg
sub
(bad)
pop
jae
xor
mov
add
test
mov
adc
sahf
mov
or
push
or
adc
push
inc
adc
aad
stc
xchg
mov
mov
ret
mov
int3
dec
dec
cmp
mov
in
mov
aad
pop
jmp
or
inc
mov
add
(bad)
pushf
jae
inc
rol
mov
pop
test
scas
jo
mov
mov
adc
test
jno
fidivr
cdq
xor
movs
pop
jo
or
ins
add
test
mov
ins
into
arpl
aad
add
js
sub
sbb
sub
xor
xchg
imul
dec
add
xor
pop
fwait
xchg
mov
arpl
xor
daa
stos
sub
or
(bad)
popa
add
inc
rol
ja
mov
xlat
adc
stos
imul
loope
stos
retf
mov
loop
mov
xchg
jne
mov
(bad)
add
out
imul
fist
dec
pop
outs
aas
fwait
dec
xchg
and
jnp
sbb
sbb
das
scas
mov
pop
dec
fcmovnb
mov
mov
dec
sahf
push
int
pop
xor
and
inc
xor
movs
mov
jae
mov
push
out
xor
call
pop
cmp
lds
mov
mov
sub
mov
mov
test
shl
dec
je
push
cmp
inc
push
mov
add
push
test
into
mov
jp
add
data16
clc
popf
imul
mov
inc
ficom
mov
sbb
push
enter
mov
cwde
sbb
arpl
inc
mov
hlt
test
js
sub
dec
add
mov
push
mov
pop
xor
pop
adc
stc
fwait
inc
mov
mov
jne
pushf
loope
pop
push
punpckhwd
fist
in
xchg
mov
mov
mov
and
aad
mov
dec
jmp
sbb
aaa
fiadd
mov
(bad)
cmp
out
mov
inc
inc
and
stos
inc
jge
iret
scas
adc
(bad)
xchg
fisub
xchg
dec
add
inc
shl
push
test
bound
and
adc
push
cli
je
lds
mov
das
dec
(bad)
cmc
repz
int3
dec
sbb
and
fist
mov
sub
dec
cwde
jl
push
into
dec
jle
push
xchg
dec
sbb
mov
pop
mov
mov
leave
je
rep
push
or
stos
dec
add
xchg
stos
mov
sbb
lock
mov
jo
xchg
shl
xor
nop
push
call
pop
xlat
imul
cmp
dec
pushf
loopne
and
push
mov
rcl
js
ret
jecxz
mov
pop
jecxz
dec
test
in
fidivr
pop
cld
ficom
lea
test
movs
jmp
(bad)
add
or
mov
and
cmp
xchg
call
loop
sbb
jl
mov
div
dec
ficomp
(bad)
sar
stos
mov
ret
int
adc
and
mov
or
dec
adc
ds
retf
lds
repnz
in
adc
scas
cld
(bad)
sbb
jae
pop
ds
dec
mov
fcomp
adc
(bad)
sbb
loopne
sub
sbb
sar
add
mov
push
out
fmulp
dec
push
shr
jle
scas
sti
loopne
jo
retf
mov
jl
popa
sbb
jb
aas
xchg
xchg
jge
scas
sahf
sbb
(bad)
je
jge
mov
fistp
fucom
into
loop
jnp
int3
scas
outs
jno
mov
sti
adc
mul
pop
iret
lock
xor
in
out
ss
out
xchg
cdq
das
test
les
push
imul
out
test
ds
and
push
pop
pop
ss
fbstp
(bad)
movs
shr
leave
mov
sahf
aad
(bad)
inc
push
into
mov
lds
sahf
or
fsqrt
pop
sub
pusha
dec
mov
stos
rol
dec
cmps
xchg
lds
cdq
cs
stos
push
and
aaa
fldl2t
mov
pop
adc
mov
loop
call
fisub
or
mov
hlt
in
ins
push
lods
aaa
cmp
and
sbb
xchg
cld
(bad)
js
pushf
mov
ficomp
or
in
inc
add
jmp
lock
stos
sbb
push
and
loop
adc
mov
jno
sbb
xor
dec
aam
ins
or
inc
jl
or
and
mov
xor
jmp
ja
sub
inc
retf
push
dec
sbb
add
mov
pop
mov
jle
cmp
(bad)
sub
mov
inc
sbb
sub
push
xlat
movs
cmp
dec
jl
loop
pop
in
retf
dec
sbb
mov
clc
cmp
loop
mov
push
jae
loop
lock
dec
mov
ss
pop
popf
fcmovbe
push
dec
cmp
xchg
mov
jno
xor
cli
jae
push
jo
push
mov
inc
sbb
and
jge
or
in
mov
movs
xor
shl
mov
mov
icebp
pop
aad
dec
add
xor
mov
mov
js
mov
inc
xchg
daa
outs
fcom
pop
fscale
or
pop
test
push
inc
int
ds
or
push
loop
(bad)
out
sub
and
push
mov
sar
mov
jmp
sahf
cs
(bad)
sub
push
call
fist
push
xor
arpl
push
mov
sbb
inc
add
xor
adc
and
fsubr
in
push
call
movs
and
in
fstp
adc
add
or
lahf
sti
mov
mov
mov
and
mov
test
adc
mov
ds
je
pop
retf
cmps
and
xor
push
pop
mov
sub
pop
in
jge
and
hlt
sbb
jo
and
stos
sub
(bad)
push
scas
and
loope
jnp
mov
pop
push
inc
adc
pop
mov
in
mov
(bad)
xchg
push
dec
push
scas
sub
es
pop
lahf
leave
(bad)
mov
adc
fcom
push
sahf
adc
jbe
and
sub
outs
ficomp
retf
aam
mov
push
data16
stos
or
dec
retf
mov
cmp
pop
jecxz
push
movs
cmp
and
mov
sbb
stos
retf
js
jle
(bad)
xor
neg
xor
sub
xchg
sub
push
xor
push
div
xchg
inc
in
ret
repz
push
lea
mov
popf
adc
xchg
leave
hlt
cdq
inc
sahf
xchg
push
push
(bad)
jp
push
or
mov
xchg
sbb
xor
cmp
mov
jbe
and
xchg
(bad)
icebp
fidiv
xchg
and
dec
add
jecxz
int3
jnp
cmp
add
cld
or
mov
xchg
jmp
(bad)
xchg
je
nop
xchg
ror
inc
dec
arpl
arpl
not
fnsave
pop
jmp
cmp
push
mov
lea
sub
mov
xchg
xchg
cld
icebp
out
(bad)
mov
jo
test
mov
outs
out
mov
lds
mov
dec
pop
mov
les
jo
pop
je
add
or
fnstenv
in
jl
(bad)
jb
xchg
jae
cld
gs
scas
xor
(bad)
mov
repnz
mov
jb
into
jle
in
pop
stc
sub
mov
mov
es
pop
jno
int
pusha
sbb
jg
xlat
mov
adc
cmp
lds
pop
retf
cmp
enter
stos
push
sub
mov
hlt
cli
xchg
scas
repnz
mov
push
call
hlt
push
xor
mov
jmp
mov
mov
leave
ins
and
mov
(bad)
pop
sub
and
or
push
mov
es
push
push
fs
out
shr
ins
repnz
inc
(bad)
call
jg
adc
in
adc
sub
xlat
jg
movs
jae
in
mov
stos
lock
gs
inc
ins
inc
dec
sbb
in
xchg
pop
xchg
sub
mov
lea
in
jb
sbb
jno
mov
sub
nop
inc
out
ins
(bad)
or
inc
cmp
cmp
push
call
jmp
sbb
or
test
lods
mov
mov
add
fnstsw
test
in
mov
lea
push
adc
(bad)
test
mov
dec
loope
cmp
in
mov
pop
cmp
and
in
adc
cmp
mov
add
jbe
mov
repnz
movs
test
sbb
fbld
ins
mov
mov
(bad)
push
xchg
pop
fimul
(bad)
sbb
hlt
jmp
pop
call
adc
loop
clc
popf
push
jmp
fsub
lods
iret
pusha
(bad)
adc
and
in
imul
dec
sti
adc
or
sub
xchg
popa
pop
out
dec
inc
loope
dec
les
dec
mov
jnp
in
into
push
ins
fidiv
adc
loopne
jl
fwait
inc
add
mov
dec
loopne
and
adc
jns
les
xor
dec
sbb
xlat
and
cmps
je
sub
out
fdivrp
jmp
cmc
sbb
and
inc
rcr
shr
add
adc
dec
or
add
fdiv
inc
pop
in
clc
retf
mov
dec
pop
in
xchg
fwait
mov
add
ins
out
test
fdivr
and
ret
pop
jecxz
addr16
cmp
pop
cli
div
std
lods
xor
sbb
aad
fistp
enter
xchg
aam
les
shr
jns
das
push
dec
div
push
gs
enter
rol
adc
jb
sub
bound
daa
mov
cmp
inc
push
shr
retf
or
pop
sub
xchg
aas
popa
out
sub
mul
add
inc
adc
cwde
les
scas
loop
mov
adc
bound
mov
or
sti
mov
fld
icebp
mov
mov
(bad)
pop
in
jle
and
mov
and
(bad)
loop
adc
add
dec
push
dec
mov
int3
jmp
hlt
jecxz
mov
aaa
aaa
cmp
inc
pop
mov
aad
jbe
hlt
push
xor
or
test
fcos
ins
mov
dec
sbb
mov
jns
sub
mov
xlat
ret
push
loop
hlt
repz
sbb
dec
fisubr
fidiv
das
adc
xor
mov
xchg
ins
cmp
into
daa
inc
jmp
adc
mov
and
mov
mov
pop
fidiv
(bad)
ss
and
aas
sbb
in
cdq
dec
loop
jnp
cmc
cmp
jmp
dec
dec
mov
fs
(bad)
in
pushf
sub
repz
out
outs
ins
jmp
sub
mov
xchg
xchg
cmp
das
and
inc
nop
call
and
dec
gs
pop
cmc
jecxz
dec
add
fwait
pop
jle
out
jge
dec
xchg
pop
cmp
loopne
cld
cli
lds
or
xchg
icebp
pusha
push
pop
and
pushf
pop
shl
les
inc
vcvtsi2ss
sub
and
iret
push
out
test
es
fild
xchg
bound
add
call
adc
and
std
cmps
sahf
and
jae
(bad)
int
dec
aas
sub
inc
jmp
add
adc
or
mov
pusha
ins
pop
sbb
xchg
fs
add
xchg
inc
jecxz
sub
cmp
mov
retf
bound
adc
jmp
mov
stos
inc
and
scas
jp
clc
mov
push
gs
adc
call
cld
jo
mov
xchg
pop
or
pop
clc
mov
xor
nop
(bad)
push
hlt
sub
movs
loop
mov
cld
cwde
cli
dec
pop
popa
stc
jae
push
fidivr
push
call
lds
push
cmps
call
add
mov
jae
inc
mov
cmp
ret
fwait
je
dec
cmp
test
jg
hlt
cs
neg
push
inc
mov
cs
aam
jno
daa
jp
pop
pop
xchg
outs
jo
es
fyl2x
cli
mov
icebp
pushf
outs
ret
aaa
lahf
and
iret
sub
and
pop
cmps
add
sub
adc
mov
xchg
mov
loop
mov
mov
pop
and
mov
pop
arpl
pop
add
retf
push
inc
mov
aaa
in
and
int3
and
jp
sbb
pushf
aas
pop
xchg
(bad)
mov
add
nop
movs
push
push
pop
inc
xchg
cs
push
mov
push
mov
cmp
sub
shl
jb
rol
and
jge
cmps
and
cs
test
popf
stc
or
hlt
sar
xchg
sbb
xor
jae
test
aaa
lods
cmp
mov
pop
iret
jno
jecxz
lds
jne
push
or
addr16
loope
sbb
(bad)
cwde
or
sub
ja
push
jnp
xor
test
mov
inc
sbb
sub
fbld
jl
push
nop
movs
push
(bad)
daa
mov
mov
ss
es
jb
adc
test
mov
or
icebp
sub
and
and
clc
data16
js
data16
jge
dec
loop
call
pop
push
ret
(bad)
push
sti
cmps
jne
xchg
sub
in
test
ds
jne
mov
outs
xchg
mov
cwde
mov
mov
jle
xchg
call
repz
shl
lods
jb
mov
push
pop
aas
aaa
loope
jmp
es
call
inc
jmp
jae
movs
pop
cmps
inc
cmp
sub
mov
sbb
imul
mov
lea
jno
lea
pop
adc
pop
jo
pop
cmp
addr16
cld
enter
xchg
inc
mov
sbb
mov
jbe
mov
push
cmps
inc
mov
das
stos
jge
mov
adc
mov
xchg
rcr
out
push
or
dec
cdq
test
in
push
push
mov
pop
ins
add
push
test
xor
test
enter
cmp
jge
push
or
mov
ret
cmps
add
dec
(bad)
jno
inc
xchg
int3
popf
xchg
mov
jbe
mov
movs
add
fisub
std
in
mov
nop
pop
adc
mov
pop
sbb
cmps
outs
arpl
fisub
push
in
das
or
iret
dec
aad
(bad)
es
mov
xchg
dec
push
xor
adc
inc
or
fs
adc
or
sub
cmps
dec
outs
lar
test
xor
adc
add
xor
lods
pusha
fwait
mov
mov
shr
jge
lds
and
mov
iret
aam
enter
push
adc
jg
add
sub
nop
into
je
fcom
test
sti
movs
xchg
jmp
in
jo
ins
xor
fwait
or
push
add
mov
fs
pop
mov
sub
and
mov
pop
sbb
dec
or
jae
mov
sub
sub
pop
mov
dec
aas
add
enter
hlt
mov
xlat
mov
popa
div
add
into
xor
mov
xchg
jg
add
aam
movs
xor
adc
std
sub
jmp
mov
adc
or
cmp
jmp
or
das
call
es
popf
sub
in
xor
jmp
push
int3
push
cmp
sub
mov
xchg
scas
enter
(bad)
es
inc
xor
mov
jl
jns
xchg
outs
mov
inc
inc
dec
add
out
and
mov
sets
js
cmp
ret
or
mov
out
jno
(bad)
cld
push
sbb
out
cmp
in
inc
inc
sub
enter
test
mov
xchg
inc
adc
jb
mov
adc
bound
mov
ret
outs
push
xlat
(bad)
push
jp
adc
mov
jp
loope
mov
enter
mov
push
sbb
inc
jle
retf
add
enter
xlat
mov
push
fistp
and
call
imul
ss
dec
add
jno
lods
mov
jo
dec
outs
cmp
xchg
ss
and
add
push
mov
inc
pop
int
in
popa
dec
mov
ins
jae
mov
call
in
jle
stos
repnz
pop
loopne
pushf
aam
call
icebp
cmp
inc
add
add
mov
imul
daa
in
aam
pop
mov
lock
stos
dec
iret
xchg
jne
arpl
loopne
cld
xchg
inc
cmp
jnp
cdq
mov
lods
pop
xchg
enter
dec
cmp
mov
and
std
in
scas
call
rol
icebp
and
movs
or
and
mov
push
cmp
sbb
les
daa
jp
cmp
fdivr
pop
pop
jmp
push
test
push
xchg
mov
and
push
and
cmps
push
or
pop
out
add
jbe
clc
lahf
sbb
jecxz
jo
sub
jle
xchg
inc
xor
div
in
add
inc
enter
or
pop
hlt
push
cmps
test
ror
push
and
(bad)
movs
pop
xchg
mov
shl
jmp
loop
aam
jecxz
sub
fnstcw
or
jmp
je
daa
mov
lock
mov
jne
fldcw
mov
sar
inc
and
(bad)
jmp
jo
adc
inc
cmps
add
into
sbb
sbb
and
push
repnz
push
cld
movs
xchg
imul
add
or
push
das
mov
sub
outs
test
xchg
lahf
neg
push
shl
or
push
movs
lea
lahf
mul
pop
xor
or
push
sub
aam
repnz
shr
lahf
fidiv
int3
(bad)
retf
je
in
sub
xor
inc
dec
ins
pusha
sub
out
pusha
inc
ret
xchg
or
out
cs
mov
jae
push
mov
ret
sub
pop
rcl
adc
int3
js
les
icebp
(bad)
xchg
dec
or
mov
and
mov
mov
xchg
dec
pop
(bad)
ds
mov
mov
movs
not
fistp
jbe
mov
mov
or
cmps
(bad)
enter
ret
dec
aaa
mov
xor
outs
sar
cwde
sbb
mov
inc
(bad)
cmp
scas
loop
sub
loope
push
jmp
mov
test
nop
push
test
mov
les
popf
inc
pop
scas
aam
js
mov
cmps
mov
add
mov
mov
test
call
mov
dec
mov
clc
xchg
jae
sar
rcr
pushf
dec
outs
or
mov
rcr
cmp
xchg
mov
and
int
(bad)
aad
or
push
dec
jne
nop
and
push
and
or
xor
lock
pop
mov
pop
out
out
lds
lods
scas
push
inc
sub
pop
push
inc
lock
pop
push
js
push
jnp
out
add
mov
push
ja
mov
shr
cmp
push
xor
out
push
arpl
and
sbb
dec
mov
xor
scas
js
sar
outs
adc
jp
pop
dec
sub
adc
adc
and
push
enter
inc
movs
jnp
mov
lahf
xchg
shr
call
jmp
cmp
fisub
xor
test
jge
data16
adc
fdiv
test
mov
pop
jbe
xlat
jns
mov
push
fimul
les
cli
mov
fwait
xchg
xchg
sub
jne
fadd
mov
cmp
inc
push
mov
rcl
jecxz
stc
fadd
mov
int3
mov
inc
pop
mov
lods
mov
scas
sub
repz
fwait
pop
je
ret
adc
aaa
push
jg
repnz
push
pop
int3
sar
add
jmp
xchg
mov
pop
dec
mov
and
mov
ins
inc
mov
stc
push
movs
cmps
psllw
cmovae
or
adc
push
in
jne
add
sti
cmps
fwait
hlt
add
fsub
sub
sub
shl
sub
aaa
pop
in
das
adc
repnz
jge
dec
dec
and
pop
enter
cmp
mov
jne
push
scas
jnp
dec
push
aam
xchg
mov
jb
in
pusha
mov
cmp
or
push
cmps
rcr
jecxz
into
pop
sub
sar
mov
ins
pop
add
sbb
pop
mov
push
pop
inc
jno
cmc
add
jmp
cmp
cmp
retf
xchg
rcr
test
mov
cmps
sub
and
adc
popf
jne
lahf
xor
ins
aad
sbb
fsubr
aas
push
sahf
jae
mov
test
(bad)
jae
mov
popa
xor
lahf
mov
cmp
fisttp
mov
test
jecxz
jge
dec
int
addr16
or
lods
sbb
fistp
test
mov
mov
xchg
pop
bound
push
ror
xchg
push
in
iret
sahf
or
sub
jbe
jmp
aad
fild
call
cmp
pop
popa
ret
mov
cmp
mov
jbe
xchg
sbb
xchg
scas
push
ret
scas
xor
stc
rep
xchg
pop
mov
out
out
xchg
(bad)
addr16
out
dec
sub
gs
mov
call
cmc
or
mov
paddusb
sbb
push
xchg
inc
adc
icebp
daa
into
push
pop
mov
fistp
sub
test
xchg
xor
sbb
push
dec
push
retf
popa
jnp
ret
stos
and
jmp
inc
fcomp
adc
test
pop
je
outs
ds
xchg
mov
add
in
vmwrite
adc
repz
or
inc
int
jo
mov
pusha
fistp
dec
inc
xchg
mov
pop
ror
xchg
jnp
jg
addr16
push
inc
mov
push
fimul
xchg
push
outs
nop
adc
call
mov
stos
repnz
cmp
inc
mov
loop
js
mov
rcl
add
and
test
int
add
cs
add
cli
cwde
leave
and
mov
sbb
push
adc
and
out
jb
shr
rol
scas
xchg
jle
dec
pushf
les
icebp
cmps
leave
xor
cli
or
jle
and
rol
arpl
aad
int3
fsubr
mov
xchg
push
fcmovnu
jne
sbb
jbe
aaa
xchg
xchg
push
xchg
push
int
sar
add
pop
pusha
in
ja
xchg
push
push
jg
ja
jo
retf
cmp
xchg
inc
popa
and
mov
sti
sbb
addr16
xor
sbb
or
jo
test
xchg
dec
jl
in
inc
pop
mov
pusha
scas
enter
inc
inc
fnstsw
cwde
in
in
cld
or
inc
call
lods
bound
inc
std
mov
iret
fxch
ja
xor
neg
mov
and
scas
inc
jmp
inc
imul
sub
dec
push
(bad)
cli
pusha
xlat
mov
stos
dec
mov
pop
popf
ja
ins
leave
mov
sub
dec
dec
sahf
nop
out
les
jge
dec
pushf
mov
jns
dec
push
in
enter
leave
scas
pop
add
sbb
in
cld
cwde
dec
pop
or
add
aad
inc
mov
xlat
gs
imul
inc
jecxz
out
es
rol
imul
call
ret
loope
(bad)
sahf
in
pop
xor
aaa
cmp
and
sub
cs
jb
mov
es
sub
loope
fnstcw
push
mov
push
xor
xor
and
popf
and
sbb
xor
mov
lahf
dec
xchg
adc
sbb
inc
nop
mov
xor
lock
iret
fnstcw
cmp
repnz
fst
or
jle
call
push
sahf
ins
xor
mov
push
jo
dec
xor
nop
repnz
jge
push
cmp
adc
lock
fs
xor
mov
gs
cwde
movs
jo
nop
shl
int3
xor
inc
and
pusha
and
inc
in
push
sbb
fidivr
(bad)
ja
and
bound
dec
inc
sahf
aaa
mov
xchg
fdivr
inc
jmp
push
retf
adc
test
xchg
push
dec
mov
jne
jle
sub
icebp
jecxz
xor
pop
jns
dec
mov
or
out
ret
push
jp
cs
mov
bound
cmp
sti
inc
call
ja
xchg
jge
into
mov
rol
lahf
cmp
rcr
jnp
dec
adc
repnz
in
sti
leave
sbb
loopne
fcomip
pop
cmp
les
mov
adc
ins
std
cmp
adc
and
mov
dec
fisub
fiadd
xor
cmp
int
xor
outs
xchg
cmp
adc
pop
(bad)
mov
push
pop
jmp
sbb
inc
jle
dec
mov
in
stos
push
ins
or
jnp
enter
mov
cs
cmp
xchg
xor
or
jmp
xchg
xor
pop
aaa
inc
xor
jns
mov
popa
jp
arpl
mov
cli
imul
adc
imul
call
cli
mov
xchg
in
jecxz
push
fimul
cmps
outs
push
inc
jecxz
cwde
stos
push
and
gs
jbe
retf
bound
jns
xor
outs
test
ins
clc
repnz
cli
mov
or
inc
(bad)
scas
bound
mov
cmp
retf
mov
cld
pusha
cmc
lds
mov
sahf
dec
sub
std
inc
xchg
push
cmps
sbb
(bad)
push
enter
loop
mov
int
dec
pop
mov
xlat
dec
or
out
ror
sbb
(bad)
sub
(bad)
ja
aaa
mov
jae
cdq
sar
stos
mov
cmp
lds
xor
xor
sub
mov
(bad)
ror
push
and
inc
sub
retf
cmp
stc
xchg
jmp
jns
into
leave
push
fstp
rcr
dec
adc
das
xchg
mov
sti
add
and
js
test
xor
out
jnp
std
out
pushf
lea
test
cmc
and
out
xor
add
push
(bad)
mov
push
fs
push
jg
push
mov
cld
nop
int
je
das
daa
enter
adc
call
cld
ret
mov
jne
imul
out
inc
xchg
pop
ins
leave
mov
mov
push
sbb
addr16
push
repz
ret
jle
or
fcomp
mov
mov
push
pop
iret
je
popa
pop
mov
call
lods
retf
pop
mov
out
leave
mov
adc
test
pop
lock
cmp
mov
sub
push
or
sbb
push
jnp
sbb
in
pop
into
enter
cmp
inc
popa
adc
fnstsw
jnp
add
cs
ror
jmp
adc
dec
xchg
test
arpl
jg
or
add
rcl
xor
mov
or
call
xchg
mov
cld
push
test
(bad)
hlt
dec
je
iret
mov
loop
(bad)
call
jl
iret
sbb
inc
repz
inc
loope
push
push
mov
mov
ret
xor
fist
adc
inc
jg
mov
sub
ins
xor
mov
xchg
mov
retf
jg
sbb
sbb
push
rcl
in
rcr
outs
cmp
pusha
out
popf
loop
or
xchg
cmp
int3
jl
retf
ret
fisub
push
jge
mov
call
popf
dec
dec
iret
fsub
movs
push
shr
sub
out
aam
ds
icebp
gs
add
pop
arpl
cmp
movs
scas
cmp
ja
sub
jns
pop
jmp
sub
fincstp
jbe
pop
push
jb
mov
out
jle
mov
jl
mov
popa
mov
add
jmp
pop
daa
out
rcl
or
sub
retf
loopne
mov
fisttp
push
xor
rcr
cdq
outs
(bad)
enter
add
cmp
mov
mov
mov
mov
inc
dec
jne
xor
sub
popf
ds
cmps
ins
jbe
pop
sub
adc
test
push
xor
in
arpl
retf
pop
xchg
(bad)
pop
lds
lea
fcmovb
mov
sar
in
movs
inc
stos
bndldx
pop
or
outs
test
dec
shl
dec
pop
pop
aaa
sbb
ror
mov
add
sub
loopne
xor
xor
jp
adc
int3
mov
cs
sti
pop
rol
pop
sub
fmul
ds
mov
adc
dec
cmp
adc
les
sub
xor
pop
movs
add
hlt
mov
cmp
jp
push
cmp
ins
xchg
fistp
(bad)
repz
cmp
adc
popf
pushf
js
aam
push
mov
stc
inc
in
lods
stc
xchg
cmp
out
cs
xchg
and
push
mov
pop
xor
lahf
xchg
adc
ret
push
jb
lods
loope
sbb
sub
bswap
es
mov
(bad)
xchg
inc
icebp
add
sahf
aaa
jmp
adc
fwait
and
xchg
inc
sbb
(bad)
imul
inc
adc
add
and
mov
mov
retf
dec
dec
mov
pop
sub
or
imul
lock
mul
inc
stos
add
xor
loop
ja
cmc
inc
repz
daa
aaa
cmc
retf
(bad)
retf
leave
sub
pusha
mov
je
lahf
ror
sbb
jbe
loopne
mov
push
mov
dec
int3
xchg
call
adc
enter
dec
mov
shr
out
dec
out
(bad)
int3
int
inc
fisubr
xchg
sbb
mov
inc
xor
addr16
dec
mov
sar
(bad)
sar
icebp
je
pop
leave
hlt
jne
jle
test
lods
and
test
mov
add
call
push
adc
push
mov
adc
(bad)
cdq
xor
mov
(bad)
stc
call
into
les
loopne
inc
dec
mov
adc
ss
or
inc
or
fistp
xor
push
adc
jmp
cmp
int
mov
mov
ror
mov
fisttp
lods
xor
xchg
sub
or
arpl
adc
and
dec
loop
test
jmp
push
mov
push
dec
ja
dec
sub
neg
sbb
inc
push
or
pusha
inc
(bad)
into
pusha
fist
es
xor
(bad)
and
movs
icebp
xor
mov
jbe
cs
or
pop
es
push
and
mov
jle
rcr
je
xor
ret
clc
loope
loop
add
jge
call
mov
mov
in
(bad)
adc
xor
mov
inc
push
and
sbb
push
cmps
xchg
xchg
push
cmc
xchg
or
ja
mov
(bad)
push
int
push
or
cmp
sub
cwde
xor
fist
ret
adc
and
pushf
jmp
imul
cli
push
cmps
outs
div
jle
xchg
push
mov
add
pop
sti
sub
add
lods
sub
xchg
loop
test
outs
add
pop
and
imul
jmp
fs
sbb
aas
xchg
outs
xchg
or
out
pop
and
ss
sub
mov
out
xchg
(bad)
fdivp
imul
pop
mov
push
ins
into
loopne
in
and
mov
shl
imul
ret
popw
jno
push
cmps
add
jg
popf
mov
mov
push
sti
cli
mov
mov
ss
xor
out
xor
lds
mov
dec
test
lods
fs
xchg
adc
jno
movs
test
push
cmp
push
je
cmp
adc
and
and
dec
jbe
pop
and
fs
rcl
mov
inc
xchg
jbe
mov
std
dec
pop
sbb
jmp
nop
pop
sbb
xchg
call
push
inc
cmp
add
sub
stos
frstor
shrd
int
jno
aad
mov
and
movs
pop
sub
add
jg
sub
dec
mov
or
repz
ins
cs
jbe
lea
rcr
add
jns
fcmovne
(bad)
or
jp
sub
push
mov
adc
pop
loope
out
repnz
(bad)
dec
out
in
lods
xchg
push
jnp
mov
mov
mov
inc
(bad)
cmp
xlat
dec
jae
push
loop
mov
dec
loop
imul
push
jmp
enter
xchg
sbb
mov
mov
sti
loop
jg
jle
adc
(bad)
daa
imul
inc
dec
ins
mov
imul
cmps
add
nop
xor
jbe
pop
mov
aaa
mov
int3
add
xor
in
es
mov
adc
dec
repnz
int
mov
mov
mov
aaa
imul
mov
fist
out
rol
scas
xor
pop
or
xor
loope
imul
(bad)
sub
jg
or
out
jbe
add
and
cwde
or
cmp
invd
movs
cmp
push
mov
xchg
dec
stc
ja
call
enter
imul
pushf
sbb
nop
int
(bad)
movs
adc
mov
and
or
cli
sub
inc
and
mov
inc
mov
add
or
pop
xchg
adc
sub
loope
into
mov
push
or
aas
sub
push
ins
or
xchg
sbb
icebp
pop
mov
outs
inc
cmp
fcmove
(bad)
mov
inc
adc
adc
imul
fild
sub
icebp
mov
inc
mov
xor
scas
test
enter
jmp
int
nop
in
loope
shr
push
repz
les
repz
adc
mov
and
out
sti
cwde
xor
movs
movs
lods
mov
(bad)
lods
mov
xchg
pop
inc
repz
inc
outs
out
sbb
bound
or
jo
pop
cmp
pop
jae
clts
loop
dec
movs
jns
adc
test
mov
and
mov
into
jmp
lahf
shl
sub
pushf
in
ficom
sub
cdq
jne
xchg
mov
jbe
inc
cld
mov
in
shl
fdivp
lods
mov
loope
jbe
sbb
cmp
mov
ffreep
enter
sar
mov
xchg
out
xchg
ficom
and
stc
es
jmp
cmpxchg
std
jecxz
(bad)
dec
aam
dec
repz
and
dec
in
xor
push
clc
mov
or
adc
pushf
icebp
sub
fadd
mov
out
jl
ins
je
dec
sqrtps
fidiv
push
in
sbb
popf
dec
mov
fistp
mov
or
(bad)
loope
add
aaa
faddp
dec
mov
cmps
popf
das
in
push
xor
mov
test
std
push
mov
mov
test
cmp
xchg
fs
jp
dec
push
(bad)
mov
inc
mov
adc
ins
xor
sar
mov
xor
mov
inc
fstp
(bad)
in
fmul
push
xor
out
inc
push
adc
(bad)
in
dec
jmp
xor
loop
adc
mov
je
rol
cs
mov
ret
sub
daa
sbb
test
sub
out
fbstp
cli
retf
int3
iret
cmp
in
push
call
int
xlat
mov
shl
and
pop
cli
jl
jge
and
test
push
sbb
mov
jmp
imul
push
sub
in
mov
add
adc
fs
aaa
aad
inc
ins
mov
bound
outs
sahf
pop
sbb
mov
lods
adc
outs
mov
mov
mov
push
popa
ins
sahf
sub
mov
pop
mov
test
test
(bad)
and
and
mov
push
int
jmp
add
pusha
bound
mov
inc
in
je
jns
cmps
cmp
push
mov
xlat
imul
(bad)
and
xchg
aas
mov
mov
xchg
jne
xchg
pop
mov
cld
fbstp
pop
mov
cmps
fbld
and
xchg
pop
bound
int3
push
mov
mov
xor
pop
xor
scas
icebp
sbb
mov
cdq
jmp
jmp
out
test
int
mov
into
push
cmp
add
add
out
and
inc
xchg
inc
and
test
inc
fmul
xor
push
jle
movs
cmp
mov
lds
xchg
ror
sar
popa
mov
jb
mov
sub
sbb
pop
sub
mov
or
loop
movs
sub
push
adc
mov
test
jnp
inc
or
push
in
sub
out
mov
push
sub
cli
mov
lahf
(bad)
mov
add
mov
cmp
mov
imul
xor
and
or
xor
or
add
stc
and
test
(bad)
movs
xchg
mov
inc
rcl
jp
adc
int
adc
jo
iret
aaa
xor
dec
xchg
xchg
mov
movs
and
or
pop
xchg
aaa
pushf
addr16
int3
sub
xor
test
pop
stos
push
sub
cmps
hlt
pop
das
dec
es
fnstenv
pop
lock
mov
push
pushf
(bad)
and
or
sub
and
(bad)
test
es
cmp
into
add
enter
add
adc
jae
in
mov
movs
popf
daa
stos
xchg
shr
dec
out
(bad)
scas
jno
xchg
inc
push
je
(bad)
fst
daa
xchg
cmc
push
xor
std
jo
or
or
sahf
xor
es
sahf
loopne
fiadd
dec
sahf
jecxz
xchg
fisub
mov
xor
mov
movaps
mov
dec
ds
inc
into
(bad)
in
or
(bad)
add
fwait
and
test
mov
push
into
aad
test
cwde
mov
icebp
lods
xchg
ss
cmc
fisubr
mov
cld
leave
ins
push
jg
out
jmp
adc
ja
mov
shr
pusha
jns
mov
xor
cmp
sbb
rcl
sbb
inc
pop
scas
data16
rcr
fcmovnbe
push
dec
mov
mov
xchg
push
test
pushf
(bad)
es
test
add
sbb
cli
in
ins
(bad)
jmp
into
push
pop
push
xor
xchg
cmp
xlat
dec
and
cmc
or
jae
adc
and
(bad)
push
ficomp
test
pop
push
(bad)
add
push
sub
faddp
adc
add
jmp
sti
pop
sub
stos
inc
rol
pop
gs
lods
test
int
sub
mul
(bad)
jbe
pop
jl
(bad)
(bad)
cld
or
xor
into
inc
xchg
in
mul
cs
ins
test
sub
mov
ret
loop
imul
test
pop
sbb
mov
push
sub
std
and
xor
in
adc
cmp
in
test
push
bound
daa
aad
lock
or
sti
dec
add
cs
loope
push
ds
mov
inc
stos
clc
sbb
pop
pop
mov
mov
push
sbb
(bad)
scas
cli
cmp
add
or
mov
jmp
ret
fbld
shl
push
xor
jae
jae
(bad)
das
pop
ss
mov
loop
and
shl
mov
stos
xor
push
ins
out
jbe
popf
and
(bad)
push
stos
ss
outs
mov
and
int
xchg
(bad)
push
dec
sbb
in
mov
add
jb
xchg
mov
dec
push
push
push
nop
(bad)
cld
jb
and
int
push
cmp
pushf
and
rcr
add
xor
add
jo
jmp
rep
cmp
ret
bnd
mov
xor
out
jg
popf
mov
and
fld
or
das
out
push
fisub
pop
sub
xchg
clc
out
fs
xchg
lahf
or
adc
cs
pop
outs
adc
cld
bound
push
jmp
xchg
xchg
call
call
adc
mov
es
dec
(bad)
jns
cmps
pop
and
mov
or
cli
sub
push
push
xchg
fwait
mov
cli
jecxz
in
fbld
mov
out
jno
push
or
ss
push
xchg
enter
imul
or
loop
adc
sbb
test
lea
mov
mov
mov
repz
loopne
mov
jle
add
outs
(bad)
std
clc
dec
repz
idiv
loope
add
daa
pop
int
in
retw
pop
adc
jo
cmp
rol
push
je
pop
dec
cmps
sub
loope
clc
(bad)
rol
shl
sub
or
push
outs
inc
in
sub
test
cmp
(bad)
fbstp
div
sub
test
or
xlat
pop
sbb
dec
int3
mov
pop
mov
sbb
(bad)
loope
cdq
out
jae
call
mov
sbb
add
loop
cmp
mov
push
and
xor
sub
lods
sub
aaa
out
fisttp
imul
popf
iret
enter
mov
mov
push
mov
mov
mov
imul
ret
outs
and
mov
pop
outs
mov
sahf
mov
jg
jbe
dec
sbb
gs
test
mov
sbb
jmp
outs
mov
mov
mov
fs
or
adc
(bad)
jo
loop
push
sti
mov
lock
jae
aas
xor
mov
cli
in
mov
fidivr
lock
imul
inc
loope
mov
inc
xchg
bswap
ja
pushf
jb
push
(bad)
std
leave
fs
idiv
pusha
retf
ficomp
pop
inc
push
sbb
sub
dec
jb
mov
mov
scas
fstp
unpcklps
test
dec
push
mov
xchg
mov
or
ret
hlt
sub
jno
(bad)
dec
mov
inc
or
(bad)
adc
lea
inc
ins
in
mov
dec
mov
hlt
ret
push
inc
cmps
test
stos
int
test
aam
mov
scas
push
xchg
xor
pusha
(bad)
pop
stos
mov
jl
rcl
imul
(bad)
pop
test
test
xor
adc
xor
scas
adc
sub
pop
cmp
xchg
xchg
outs
sbb
xchg
mov
retf
rcr
push
movs
addr16
push
push
gs
push
dec
(bad)
inc
and
bnd
inc
sbb
sbb
cmps
and
mov
cmp
pop
adc
daa
cmp
mov
aas
adc
dec
stos
loop
das
clc
in
in
jecxz
push
push
arpl
adc
sar
cmp
adc
mov
in
cmp
pop
mov
retf
shl
bound
leave
(bad)
loope
pop
fwait
xchg
fisttp
add
movs
movs
out
mov
pop
push
or
out
shr
adc
mov
mov
add
and
add
or
mov
xchg
pop
xor
push
mov
test
bound
popa
shr
jns
imul
pop
std
lods
inc
(bad)
ja
jge
test
in
cdq
fcom
nop
mov
movs
cwde
nop
xor
push
cwde
mov
arpl
sub
dec
fwait
(bad)
rol
jmp
sbb
dec
scas
mov
stos
or
cmc
aam
test
pop
mov
sbb
jns
pop
mov
add
lods
pop
jp
mov
test
push
xor
and
popa
ins
repnz
and
fstp
sbb
aam
addr16
sub
add
jmp
xchg
jne
es
jg
adc
es
pop
pop
ds
jmp
loope
cmps
iret
loop
ins
call
jmp
add
pop
int
out
imul
or
aam
mov
mov
pop
mov
into
sub
mov
sbb
ss
sahf
(bad)
(bad)
mov
sahf
rol
rcl
sti
or
addr16
mov
rcr
xchg
adc
mov
mov
aas
inc
or
xchg
mov
jb
inc
xor
cmps
xchg
sub
jmp
imul
popf
cld
jbe
mov
jo
mov
pop
pop
test
lds
sub
add
lock
loopne
div
(bad)
mul
mov
sub
mov
xchg
jns
dec
add
and
retf
push
xor
jo
mov
inc
mov
add
scas
dec
gs
mov
mov
ret
in
scas
xor
inc
(bad)
mov
push
mov
xlat
mov
jo
push
fist
repnz
mov
mov
mov
add
arpl
shl
mov
or
mov
aam
sub
dec
cmc
lock
xchg
out
jno
fdiv
pop
mov
inc
and
cmp
pop
clc
xchg
repz
bound
pop
repz
fdiv
sbb
test
push
cs
stos
pop
scas
outs
int
dec
les
mov
cmp
ss
ins
sbb
test
cld
repnz
int3
js
xchg
push
mov
mov
mov
(bad)
dec
sub
ds
and
mov
or
sbb
jmp
std
aaa
popa
xchg
xchg
popf
fxam
dec
mov
js
sub
or
lods
in
dec
adc
xor
sbb
outs
mov
cmc
jnp
stc
or
rcr
inc
cmp
pop
retf
adc
xchg
jbe
ins
or
fnstsw
jl
inc
fidiv
pop
xor
xchg
cmp
sbb
pop
mov
popf
sahf
repnz
test
mov
bound
fwait
(bad)
pop
mov
mov
cmps
hlt
or
inc
push
ds
ds
xchg
adc
or
xor
(bad)
push
call
lds
jnp
out
sbb
enter
adc
cmp
test
pop
jecxz
inc
js
lahf
stc
xchg
and
xor
fisub
adc
popa
fidiv
sahf
ins
pop
pop
aaa
push
xchg
pop
arpl
in
cmp
icebp
(bad)
fcmovbe
pop
cwde
push
jle
sub
leave
pop
lahf
retfw
mov
out
enter
adc
cdq
sahf
imul
cmp
imul
cmps
xchg
outs
sbb
nop
fwait
mov
(bad)
leave
mov
outs
or
cs
loope
(bad)
sar
dec
push
pop
(bad)
pop
dec
aas
sbb
or
sbb
cs
jb
lahf
xor
mov
mov
xor
jae
push
out
mov
mov
mov
daa
div
push
mov
outs
dec
jmp
add
aaa
jb
jno
cmp
std
or
sbb
jb
cmp
mov
js
loope
inc
xchg
push
in
stos
jb
sbb
jne
jns
dec
mov
fldcw
mov
or
sahf
(bad)
in
push
push
xor
test
mov
test
mov
ins
jl
fwait
pop
add
and
or
cmp
xchg
ret
cwde
popf
jns
inc
xchg
mov
adc
in
sbb
(bad)
jmp
mov
stos
sahf
push
cmps
cmp
in
cmp
sti
sbb
cmp
and
dec
aas
push
retf
and
int3
loope
jmp
xor
mov
adc
fs
pop
push
push
xchg
lods
mov
adc
xchg
ret
push
dec
test
in
dec
mov
out
xchg
jns
ss
push
mov
sbb
shr
arpl
shr
int
les
xor
rol
mov
nop
cmp
retf
repnz
cmp
push
add
call
or
mov
into
mov
nop
cmova
sbb
ja
loopne
jnp
sbb
sub
adc
retf
das
out
and
repnz
xor
push
push
and
icebp
jo
dec
stc
call
add
movs
fs
in
js
imul
sub
inc
cdq
ds
xlat
pop
ret
jle
out
fdiv
pop
pusha
in
aam
sub
shl
pop
js
imul
pop
mov
mov
and
arpl
(bad)
loop
pop
call
(bad)
popa
ins
loop
dec
test
sahf
stos
pop
mov
leave
xchg
repz
pop
mov
mov
inc
jge
std
xor
mov
sbb
ins
aaa
addr16
mov
test
mov
stc
jmp
out
or
loope
out
inc
add
fnstenv
loope
repz
mov
fimul
fstp
movs
or
out
pop
lds
scas
and
icebp
dec
jge
xchg
xor
sbb
or
nop
aas
xlat
jo
adc
jo
mov
int
es
movs
pop
sub
sahf
push
scas
std
adc
or
inc
in
lock
stos
(bad)
xchg
mov
cmp
xchg
and
out
inc
mov
and
and
ret
popf
rol
sub
sub
fmul
jle
add
loop
xor
(bad)
lods
and
mov
xchg
push
test
xor
repnz
or
cmp
jnp
imul
rol
mov
out
outs
cld
add
xor
or
and
call
lods
mov
icebp
jnp
(bad)
jl
out
jbe
xchg
pop
and
cmp
inc
push
jg
xor
adc
mov
mov
mov
dec
imul
dec
and
mov
icebp
add
loopne
inc
(bad)
dec
aaa
jo
cmp
or
mov
pop
imul
jge
clc
lods
or
and
push
pop
cmp
adc
and
gs
adc
dec
xor
pop
or
dec
mov
dec
pop
xchg
sub
jge
push
fistp
jmp
test
sbb
jbe
xor
pop
jmp
mov
dec
push
xchg
cmp
xchg
in
lods
and
xchg
and
inc
jmp
xor
jns
cwde
mov
jns
pushf
pop
mov
mov
mov
repnz
mov
push
(bad)
pusha
cs
imul
or
xor
push
add
int3
mov
pop
test
mov
pop
cmc
jns
push
imul
push
push
retf
cmp
rcl
cmp
jns
add
stos
dec
xor
jl
mov
dec
inc
add
adc
xor
sub
aas
adc
mov
out
or
or
jnp
cmps
push
jb
cmp
xchg
outs
pop
test
sti
mov
jl
es
xchg
sub
inc
sub
mov
add
mov
outs
adc
cmc
imul
mov
inc
stc
pusha
inc
retf
daa
nop
ds
lods
jo
jmp
loop
sar
div
pop
adc
dec
fld
inc
sbb
mov
std
cmp
xlat
pop
mov
pop
mov
or
stc
aaa
push
jne
(bad)
xor
xor
and
xchg
sub
gs
das
pop
sub
mov
je
ss
xchg
repz
jb
inc
adc
lods
sbb
clc
push
xchg
cmp
mov
push
dec
ja
cmc
push
out
and
(bad)
hlt
mov
ret
or
outs
fiadd
loop
push
and
std
leave
pop
mov
leave
mov
mov
(bad)
xchg
int3
inc
std
mov
invd
xchg
push
pop
sbb
or
into
imul
not
push
and
clc
movs
dec
hlt
(bad)
jp
and
dec
jmp
or
(bad)
adc
push
(bad)
mov
sub
ja
or
fstp
pop
sbb
push
jg
xor
push
jp
adc
out
pop
ins
add
out
neg
ret
daa
addr16
xchg
icebp
adc
por
sbb
pop
inc
icebp
fisubr
jg
sbb
mov
repnz
mov
mov
lods
pop
stos
clc
pop
(bad)
fdiv
loop
inc
add
popa
sbb
pusha
mov
cmps
adc
mov
dec
cmp
sbb
nop
jmp
loope
inc
cmps
ins
jg
iret
fidiv
mov
adc
add
arpl
xchg
movs
pusha
mov
jle
dec
mov
jecxz
cmp
or
mov
mov
cmps
push
inc
mov
pop
pop
mov
sbb
cs
nop
stc
push
dec
ins
call
(bad)
gs
lahf
pop
jl
or
push
out
(bad)
out
mov
cld
push
std
pusha
fcom
or
loope
mov
jg
jb
jnp
jle
inc
push
retf
inc
stos
sub
shr
and
mov
loop
and
pop
inc
push
das
test
stc
movs
xchg
bound
pop
rcl
stos
lahf
ret
mov
sbb
lods
fstp
fcmovnbe
in
sbb
mov
test
mov
xchg
leave
stos
add
cmp
pop
xchg
ret
in
pop
mov
outs
pop
cmp
rol
rcr
bound
jge
aad
shr
pop
jb
sub
cmps
push
lea
test
dec
pop
retf
out
inc
jl
dec
fsubr
pop
xor
pop
jl
xlat
sbb
not
idiv
jle
lods
adc
xor
jns
std
in
bound
outs
lods
or
fiadd
call
jno
lock
or
cmps
jo
adc
hlt
push
das
aaa
aad
and
mov
pushf
mov
les
fmulp
js
outs
mov
lock
or
out
nop
push
inc
loope
mov
jmp
mov
rol
out
lds
jo
mov
leave
ins
stc
stc
xchg
xchg
sub
out
and
inc
mov
push
jmp
int3
call
mov
(bad)
xor
jmp
jb
inc
imul
fs
push
ins
retf
dec
fisttp
push
nop
dec
xor
fs
inc
pop
and
mov
xor
mov
rcr
push
daa
mov
adc
push
xchg
(bad)
xor
(bad)
pop
cli
ins
fisubr
jb
hlt
out
int
test
jno
jl
push
and
mov
aad
jbe
movs
call
loope
mov
loopne
ins
daa
cli
add
fcomp
outs
in
pushf
(bad)
adc
adc
ret
and
pop
or
adc
cmp
sbb
and
add
xor
repnz
mov
jne
mov
inc
ss
xchg
enter
icebp
ins
out
xchg
push
and
adc
inc
pop
add
sub
enter
pop
xchg
push
test
aam
mov
sbb
sub
or
adc
xor
mov
sub
mov
cli
leave
fdivrp
mov
mov
je
dec
lock
push
loope
(bad)
and
in
inc
inc
test
push
sbb
rcr
pop
(bad)
(bad)
xlat
mov
push
sub
lds
pusha
popf
daa
aam
lahf
mov
repz
iret
mov
jns
or
fst
cmp
xchg
scas
enter
out
push
jmp
lods
cmp
scas
mov
out
int
pcmpeqd
ret
outs
daa
fisub
fs
mov
aaa
jo
movs
or
mov
dec
push
jmp
ja
sub
imul
pop
inc
xchg
jne
xchg
jge
mov
das
std
xchg
stos
inc
pushf
push
sub
ret
rcl
xchg
(bad)
jecxz
push
test
or
jg
sub
punpckhdq
cmp
iret
aam
sbb
retf
xchg
xchg
cmc
fwait
xor
ror
sahf
or
shl
mov
icebp
xchg
lock
jmp
outs
push
or
ins
add
cmp
test
lods
mov
mov
sti
fild
shl
in
bound
mov
xchg
retf
(bad)
fndisi(8087
adc
add
nop
scas
ja
pop
mov
pop
stos
jmp
in
retf
cmp
(bad)
outs
adc
popf
add
test
xchg
popa
xchg
rcr
rcr
xlat
xor
add
mov
jae
sahf
cmp
xchg
cmp
dec
push
cwde
leave
add
mov
or
jbe
ins
xchg
aad
std
or
leave
adc
rol
(bad)
push
aas
sbb
xchg
mov
test
jecxz
es
mov
sub
sbb
cmp
mov
xchg
push
lahf
or
dec
push
test
dec
and
cwde
call
and
(bad)
inc
xchg
(bad)
inc
pop
gs
les
mov
xchg
retf
push
add
in
es
es
pop
push
dec
sar
cdq
push
and
mov
or
ss
sahf
jo
mov
xchg
scas
fiadd
pusha
adc
cmp
pop
jge
jb
fs
repz
sub
aam
dec
mov
push
cdq
ficom
cmp
inc
jmp
mov
fisub
sub
pop
rcr
lea
in
sbb
out
ins
xor
xlat
jns
repnz
fsub
lods
inc
inc
mov
mov
mov
pusha
xchg
fmul
(bad)
les
sbb
rcr
daa
stc
cmp
and
outs
mov
adc
adc
push
into
inc
pop
arpl
arpl
jbe
sub
in
enter
adc
and
into
dec
inc
aad
int3
jp
pushf
(bad)
(bad)
outs
mov
add
out
leave
in
ror
and
in
out
mov
push
(bad)
lock
push
push
dec
(bad)
in
and
outs
or
xchg
scas
jge
dec
clc
pop
pop
mov
and
fnstenv
jmp
pop
cmc
rcr
test
jecxz
mov
mov
sbb
xor
dec
inc
or
adc
shl
dec
cmp
xchg
inc
mov
mov
push
js
rcl
push
xor
ret
mov
in
or
test
mov
int3
inc
xor
mov
ret
push
push
add
xchg
arpl
js
jb
out
pop
movs
jg
and
ins
call
aam
loope
xchg
or
jbe
jae
shl
fdivr
xor
fs
push
inc
or
fdivp
cwde
jmp
push
mul
das
push
add
loope
sbb
mov
mov
ins
jno
lods
mov
xchg
stos
or
and
adc
bound
test
and
xor
cwde
mov
jb
mov
in
xchg
cmp
mov
fldz
xchg
cmp
or
jo
shl
(bad)
cmps
sub
xchg
mov
mov
sub
push
cmp
in
aad
loopne
mov
cmp
in
es
retf
data16
and
mov
cs
push
dec
xchg
repnz
add
pop
mov
xor
movs
std
and
aad
and
int
pop
add
lock
dec
into
xchg
push
mov
xchg
and
jo
inc
stos
fwait
dec
fst
imul
into
pop
mov
add
movs
outs
pop
dec
dec
jge
ds
lods
adc
pop
sub
jbe
pop
lods
scas
add
ror
std
iret
and
pop
mov
pop
cmps
cmp
mov
scas
dec
lahf
rol
into
daa
loope
xor
std
pop
adc
lock
aaa
cs
inc
jns
retf
(bad)
mov
xlat
sbb
addr16
xlat
rol
push
hlt
dec
(bad)
scas
fst
stc
scas
cmp
hlt
mov
inc
mov
mov
or
or
cli
imul
ins
or
ins
les
adc
mov
in
dec
xor
xchg
cmps
sub
adc
mov
(bad)
xchg
mov
retf
unpcklps
cdq
nop
iret
fs
jo
out
neg
jbe
icebp
lock
jle
inc
pop
xlat
arpl
mov
mov
loop
ret
arpl
sahf
(bad)
mov
icebp
mov
popa
lahf
mov
ret
inc
push
dec
xchg
les
mov
imul
jbe
mov
and
fisub
dec
jl
std
nop
in
mov
retf
repz
inc
xor
jbe
popf
cmps
fadd
cmps
lods
sar
sbb
or
retf
and
cmps
add
mov
dec
retf
dec
mov
into
jbe
push
arpl
mov
dec
(bad)
add
int
scas
lods
arpl
fcmovne
ins
into
mov
and
loope
fst
sub
add
xor
mov
jl
inc
jb
fild
xor
pushf
mov
rcr
or
cmps
ss
iret
mov
inc
(bad)
jge
shr
ret
sub
popw
inc
pop
add
sti
mov
lds
cmp
lahf
cli
int
(bad)
(bad)
jno
fwait
ret
in
cwde
inc
pusha
push
cdq
adc
in
mov
ins
and
or
jae
pop
pushf
xchg
pop
mov
sbb
sbb
and
ret
cld
fdiv
jl
push
ds
mov
pop
aas
stos
push
cli
mov
cmp
jo
test
sub
fs
dec
fist
xor
mov
adc
int
retf
cmp
mov
or
dec
cmps
jl
dec
dec
inc
mov
fld
ins
fistp
fld
loop
cdq
icebp
cmc
mov
adc
mov
adc
imul
repnz
scas
xor
pop
ds
cmps
xchg
mov
jne
mov
aas
cmp
movs
es
mov
xor
mov
imul
lods
cmp
cwde
jb
out
icebp
jae
push
cmp
xchg
dec
leave
syscall
loope
jmp
and
rcr
or
int3
loope
jle
repz
fs
int3
xchg
push
loope
cli
pop
push
movs
out
push
stc
pop
cwde
outs
cmp
outs
cdq
ja
inc
lods
inc
sub
je
rol
ins
call
jl
and
rcl
(bad)
retf
jle
enter
cs
mov
aad
lock
aad
stos
xor
inc
das
mov
call
call
mov
imul
neg
dec
dec
shl
xchg
mov
leave
movs
jl
aad
sub
int
ror
mov
aaa
test
rcl
(bad)
xchg
pop
cli
movs
out
bound
fnstenv
add
push
jae
sti
fs
loope
aas
or
mov
push
add
cdq
ficomp
rcl
push
xchg
cmp
das
pop
xlat
push
repz
pusha
and
shl
ret
mov
popa
mov
mov
psubb
cmp
xchg
add
cmp
dec
push
pop
cs
jns
ror
adc
adc
cdq
ss
fmul
mov
mov
(bad)
push
aad
js
pop
mov
mov
xor
xor
mov
lea
mov
sbb
stos
inc
icebp
mov
xchg
jl
sbb
test
mov
cmp
or
out
fsubr
icebp
push
or
and
and
loop
sbb
fmul
or
fist
push
out
outs
stos
pop
cs
dec
mov
movs
push
sub
ins
ror
mov
cdq
add
fsubrp
dec
sub
mov
fiadd
push
fs
inc
aam
push
ins
repz
push
push
addr16
xor
jg
in
pop
dec
inc
icebp
xlat
mov
cmp
jmp
xchg
mov
add
mov
test
xor
stos
or
fadd
fsubr
call
pop
jg
sub
or
mov
not
pop
push
dec
sub
jmp
and
(bad)
repz
(bad)
mov
(bad)
and
enter
inc
pusha
call
mov
mov
cmc
fcmovbe
adc
mov
sbb
fcom
lds
add
push
stos
inc
sahf
dec
pop
stos
mov
adc
enter
inc
icebp
or
cli
pushf
ret
call
fs
in
popa
into
test
jl
pop
outs
mov
cmp
sub
movs
sti
jmp
sub
mov
ins
outs
xchg
sbb
test
cmp
and
sbb
dec
out
inc
ficom
pop
ins
stos
sbb
out
push
mov
(bad)
or
pop
ror
sar
leave
(bad)
xlat
push
stos
adc
mov
pushf
dec
add
dec
inc
out
retf
sbb
pop
fisttp
xor
xor
or
int3
cmps
xchg
fistp
sti
loopne
inc
cmp
(bad)
sbb
xchg
cwde
mov
pop
or
out
popa
xchg
clc
lea
sub
test
aam
ffree
sbb
loope
dec
push
push
out
inc
pop
shl
xchg
add
jb
test
pop
jecxz
jmp
mov
jo
jecxz
test
xor
push
dec
loop
adc
jne
cwde
imul
and
sbb
cmps
outs
dec
aam
arpl
out
add
iret
mov
mov
and
mov
push
and
fdivr
inc
adc
sub
out
inc
outs
or
(bad)
iret
sti
(bad)
in
hlt
stos
icebp
push
push
xchg
cmp
xor
fidivr
dec
push
daa
cmps
into
push
pop
add
jmp
inc
ins
rol
dec
mov
xchg
mov
inc
adc
test
and
test
and
or
sahf
addr16
push
mov
retf
pop
pop
dec
lods
ret
jmp
mov
(bad)
fcom
icebp
fistp
mov
mov
push
mov
jge
push
test
inc
xor
and
nop
mov
cmc
mov
fs
(bad)
adc
sahf
sbb
inc
cmp
jo
mov
fmul
or
jecxz
mov
xor
in
dec
jo
cmc
push
mov
fild
psrld
je
sub
pop
jg
repnz
jmp
and
rol
out
(bad)
(bad)
aam
aam
fwait
mov
mov
push
mov
rcr
sbb
mov
pop
xchg
sub
cmps
pop
outs
inc
cld
test
sub
and
stos
cmp
sub
mov
jns
push
dec
mov
cld
dec
popf
rcl
jmp
add
adc
dec
je
icebp
movs
mov
and
lock
inc
fwait
(bad)
fnsave
aam
jp
fistp
sbb
adc
mov
lea
sub
jge
sbb
(bad)
sub
aad
mov
stos
xor
push
aaa
cmp
adc
enter
retf
outs
js
mov
loope
rcl
jmp
sbb
je
std
push
test
mov
hlt
push
inc
retf
mov
cli
in
retf
mov
sbb
inc
xchg
sbb
call
pop
inc
je
fwait
xchg
push
cdq
bound
cli
xchg
sub
jecxz
stc
adc
(bad)
xor
ins
pop
jp
adc
fs
mov
in
mov
movs
sbb
daa
ins
lea
xor
jl
xchg
addr16
push
int3
xchg
fldenv
cli
xchg
jns
add
mov
into
lods
and
in
fild
dec
pop
bound
in
(bad)
ret
or
jns
aad
outs
xor
push
cli
jg
add
arpl
xor
and
mov
push
out
sti
mov
push
push
sub
test
cmp
(bad)
jo
sub
adc
les
push
xchg
mov
ss
xchg
(bad)
aaa
lock
dec
clc
ret
sub
ss
or
jb
sub
imul
in
es
pop
adc
mov
push
xor
lds
cmp
nop
jns
repnz
fadd
ins
(bad)
das
inc
in
add
in
fdiv
mov
call
pop
push
jmp
push
mov
or
sti
mov
mov
maskmovq
test
fldenv
sub
lods
or
jmp
xor
sbb
sbb
movs
nop
ins
pop
ds
push
aas
retf
jnp
and
daa
and
sub
iret
xchg
(bad)
jne
xchg
or
mov
jae
or
xor
jl
pop
pop
xchg
dec
in
sub
data16
cmc
stos
cmp
push
adc
mov
out
pusha
pop
mov
test
data16
xchg
cmps
add
jg
retf
inc
sar
in
inc
and
and
dec
mov
xor
fs
div
cmc
out
loop
bound
pop
sahf
fsubr
dec
in
outs
mov
imul
ret
inc
mov
jle
popa
xchg
xchg
sbb
in
and
es
add
fstp
pushf
adc
js
scas
pop
iret
imul
dec
fs
ins
dec
xchg
pop
pop
arpl
xchg
fucomp
daa
sub
mov
test
ins
push
mov
scas
or
xor
cmp
xchg
aad
int3
xor
dec
pop
ror
cld
or
stos
xor
adc
and
and
adc
push
ds
popa
std
xor
pop
cs
loopne
sub
(bad)
lahf
jb
imul
stc
(bad)
es
fild
test
pop
pop
shl
xor
rcr
push
movs
outs
xchg
dec
mov
adc
das
mov
cmp
xchg
cli
ins
ror
xchg
scas
fdiv
and
and
dec
fist
and
adc
in
lock
mov
fs
cwde
retf
cdq
rcr
dec
sub
mov
inc
std
jmp
iret
movs
ret
and
push
mov
dec
stc
aaa
push
ins
jp
(bad)
dec
outs
dec
ss
ins
mov
add
adc
sbb
mov
mov
loope
xor
add
fist
inc
mov
pop
aas
jne
adc
jnp
mov
lods
jge
jae
adc
xor
sub
dec
jmp
jecxz
mov
fadd
es
sbb
out
btr
sbb
xchg
sbb
cwde
or
iret
(bad)
imul
cli
scas
and
cs
sbb
and
stos
sub
ds
stos
cmc
cdq
mov
lods
pop
add
xor
or
or
sub
sbb
stc
scas
pop
pop
pop
hlt
xor
jmp
and
fsubr
dec
cmp
movs
js
jb
sbb
cli
test
pop
mov
fucomip
cmp
jp
leave
cmps
sub
test
cwde
sahf
or
mov
pushf
add
push
and
and
jnp
dec
xlat
cwde
xchg
(bad)
jnp
ins
fst
mov
adc
cld
push
jmp
push
dec
repz
outs
ds
jnp
mov
movs
lods
hlt
and
dec
dec
or
sti
push
ror
mov
cmp
aam
push
mov
adc
das
scas
adc
mov
les
fidiv
imul
push
call
out
push
loop
adc
test
les
sub
mov
js
leave
sar
fsubr
icebp
xor
cmp
inc
fs
(bad)
fisub
cdq
cmp
add
sbb
cmps
cmp
mov
rcl
xor
mov
(bad)
and
dec
dec
jg
cmp
mov
test
jge
dec
seta
sbb
push
mov
jbe
adc
adc
fs
hlt
and
div
mov
jns
or
mov
jo
cmp
int
cmps
push
popa
test
aad
icebp
push
out
aad
push
lods
xor
retf
jmp
stc
and
das
mov
pop
push
lock
repnz
shl
inc
test
repnz
add
push
add
dec
aam
retf
sbb
test
in
sbb
push
rcl
out
jp
bound
stc
imul
pop
push
mov
pop
xor
jae
stc
neg
adc
pop
fs
jmp
xor
jbe
inc
test
call
jp
dec
mov
jbe
in
push
inc
rol
inc
mov
cmp
es
cdq
mul
stos
aam
xor
xchg
fdivr
inc
cmp
cmp
push
fsub
pop
xor
in
pop
popa
retf
xor
jle
push
ja
sahf
bound
fs
mov
inc
in
aaa
cmc
mov
add
repz
inc
pop
(bad)
jge
jmp
adc
inc
xor
lahf
(bad)
dec
into
jno
adc
mov
inc
aas
icebp
repnz
sar
xlat
out
sub
jle
pop
cmp
mov
jnp
inc
sub
push
dec
popa
and
fs
push
push
sub
into
in
repnz
es
or
in
pop
movs
scas
aaa
sub
stos
stc
inc
movs
pop
test
arpl
push
sub
fwait
pop
add
cmp
mov
fild
xor
enter
out
out
loopne
das
sbb
inc
xor
dec
sub
mov
xor
es
inc
enter
retf
pop
dec
sbb
inc
shr
out
push
jg
adc
jo
(bad)
lock
and
cdq
int
mov
cmp
pop
in
jae
leave
mov
pop
sbb
and
inc
sbb
add
and
adc
pop
psrlq
test
pop
mov
sahf
xor
stos
mov
in
sub
sub
stos
fs
dec
scas
mov
mov
mov
hlt
retf
jne
rol
dec
je
movs
sub
lock
pop
dec
ds
frstor
std
arpl
and
fisubr
and
and
xor
cmps
xchg
or
mov
stos
pop
cmp
mov
test
repz
sbb
cmp
int3
lds
xchg
pop
dec
test
mov
scas
cmp
mov
or
sbb
jnp
mov
pop
in
adc
stos
jl
ret
stos
dec
mov
inc
cmps
xchg
jae
clc
cmp
dec
sub
aas
ins
mov
movs
mov
daa
xchg
xchg
mov
cmp
popf
inc
or
dec
addr16
cmp
xchg
jbe
test
adc
icebp
cmp
dec
loopne
or
fwait
dec
cwde
test
test
aam
mov
addr16
push
cld
xor
jo
push
inc
xor
std
adc
and
dec
aam
pop
aas
call
repz
add
mov
jecxz
sti
add
lock
lea
hlt
xchg
or
jbe
pusha
clc
xchg
out
lods
(bad)
mov
nop
(bad)
repnz
cmc
xchg
stos
pop
fwait
cmps
jge
and
mov
add
(bad)
arpl
test
cmps
inc
pushf
out
call
add
push
int
xor
into
lea
inc
test
jecxz
(bad)
cmp
mov
xchg
xchg
and
sahf
inc
hlt
retf
(bad)
and
sbb
pop
in
ins
into
pop
adc
outs
adc
adc
xchg
ret
push
sub
(bad)
(bad)
rol
fstp
lock
cmc
and
xchg
lds
out
lea
jge
and
mov
fdiv
or
fisttp
pushf
retf
out
sbb
xchg
aas
and
mov
fs
or
fld
cmp
xchg
pop
not
fs
mov
lahf
push
test
mov
mov
and
adc
jle
cmp
and
iret
xor
push
cmp
mov
(bad)
aam
pop
ret
dec
pop
push
sbb
aad
sbb
or
test
loope
mov
sbb
(bad)
cmps
sbb
rcr
stos
cdq
xchg
dec
mov
sub
shl
push
cmps
jno
pop
sbb
inc
dec
mov
rcr
pop
push
dec
mov
xchg
or
dec
jno
and
leave
imul
shl
(bad)
call
jle
mov
lahf
outs
lods
or
push
cmp
jecxz
xor
loopne
sub
pusha
dec
dec
sub
cmps
or
(bad)
ss
call
ss
icebp
je
sbb
(bad)
loop
push
out
nop
dec
adc
jns
scas
jle
jo
ja
xchg
cmp
int3
xchg
fistp
mov
mov
pop
pop
jno
int
inc
inc
cmp
mov
add
xchg
sub
and
bound
fnstenv
mov
into
or
or
and
jmp
mov
mov
pusha
mov
cmps
and
je
inc
popa
inc
cli
in
fcomi
dec
(bad)
jae
dec
jg
jecxz
mov
arpl
stos
adc
arpl
ja
inc
sbb
xchg
push
mov
inc
(bad)
sbb
rcr
(bad)
daa
adc
scas
popa
dec
stos
in
jbe
loope
shrd
and
jmp
pop
outs
mov
sbb
cmp
stos
and
sub
mov
das
std
loopne
cmp
fdiv
xor
icebp
out
ror
lea
inc
daa
cmp
xor
dec
add
sbb
dec
outs
mov
popf
mov
cmp
add
das
mov
lods
inc
fdiv
in
dec
test
cmp
mov
jae
inc
mov
stos
cmps
or
xchg
cwde
add
(bad)
or
adc
pop
and
es
mov
fs
dec
pcmpgtb
test
cmp
sbb
jle
adc
mov
xchg
sete
outs
jmp
sub
addr16
loopne
popf
mov
jecxz
aad
pusha
imul
stos
xor
push
pusha
push
test
xor
pop
jb
mov
cmp
lds
jg
jbe
or
cmc
cli
jmp
cdq
mov
sbb
icebp
fwait
scas
push
push
cmp
shr
sub
loop
xchg
push
ins
cmp
mov
lea
or
neg
or
mov
cwde
adc
in
xlat
lods
sti
push
aam
stc
sti
sti
lds
dec
pop
push
ja
loop
xchg
sar
aam
lods
pushf
jmp
xchg
or
jns
xor
xorps
sti
mov
inc
cmps
jnp
and
mov
add
mov
mov
add
fdivr
cwde
jne
ror
mov
inc
and
ret
cs
jge
cs
loop
jmp
and
adc
push
jmp
adc
adc
fdivp
inc
xor
jne
cmp
mov
xchg
jnp
das
gs
retf
inc
not
jmp
pop
ss
popa
inc
push
int3
daa
dec
inc
sbb
sbb
sbb
push
inc
inc
pop
(bad)
jle
sub
sbb
sub
in
sub
enter
mov
aas
inc
fcmovnbe
cmp
test
or
or
mov
lock
adc
in
popa
(bad)
pop
xchg
xchg
xchg
leave
or
repz
bound
jmp
and
int
iret
inc
dec
and
add
test
call
push
inc
add
dec
ins
push
addr16
sar
push
pop
fld
and
mov
lock
retf
dec
jle
mov
add
dec
pop
xchg
iret
jp
ja
or
je
out
xor
mov
mov
jbe
sbb
loope
fldcw
in
fild
mov
retf
xor
popa
pop
xlat
sar
xchg
loop
(bad)
hlt
lds
dec
lahf
in
cwde
mov
pop
mov
shl
mov
pushf
push
lock
inc
jge
out
inc
push
movs
sub
or
xchg
sub
into
pop
or
scas
mov
test
div
ss
lods
cmp
adc
std
imul
mov
ret
pop
aas
inc
push
xor
pop
retf
fbld
outs
movs
xchg
cld
and
or
pop
or
jecxz
pop
cmp
or
mov
jne
mov
in
mov
cld
mov
cmc
call
enter
stos
pop
sbb
in
fst
out
call
(bad)
mov
sbb
mov
sbb
push
cmp
sbb
pop
adc
aam
or
pop
push
rol
pop
sub
fsubr
sbb
cmp
ror
outs
test
aam
cmps
sub
mov
aaa
or
dec
xchg
sbb
adc
sub
inc
cmp
test
pop
inc
mov
cdq
(bad)
xchg
adc
arpl
pop
cmp
cmp
mov
fisttp
ret
mov
mov
xlat
pusha
in
and
sub
ds
shl
(bad)
mov
pusha
call
or
dec
xor
(bad)
or
push
cmps
pop
xor
fldenv
add
cmp
jp
ins
jae
adc
and
jne
test
(bad)
mov
mov
cmc
movs
int
push
or
mov
cs
repz
cmp
jle
mov
cmp
aam
push
xchg
pop
mov
cmps
push
adc
or
stos
mov
out
push
ret
scas
push
adc
push
mov
mov
xor
pop
hlt
jmp
and
(bad)
cmp
sub
ror
cvttps2pi
and
push
cmp
inc
mov
retf
movs
int
jmp
in
fadd
movs
out
dec
iret
jg
push
xor
dec
mov
test
int
adc
add
call
pop
mov
xchg
loopne
push
(bad)
cmovp
into
rol
out
icebp
cmc
mov
sub
cmp
scas
stos
jne
mov
mov
lds
rol
sbb
out
jmp
(bad)
cld
push
pop
test
(bad)
in
daa
ss
(bad)
fs
pop
fs
sub
jge
jge
mov
or
mov
mov
push
fs
pop
mov
adc
int3
clc
mul
mov
push
sahf
mov
stos
xor
sub
call
movs
inc
arpl
call
or
dec
jle
das
hlt
mov
inc
in
mov
stos
mov
das
bound
shr
mov
imul
hlt
je
les
jae
add
jmp
fs
imul
push
lock
sbb
sbb
cmp
push
ret
(bad)
xor
sub
xchg
cdq
inc
jmp
dec
ret
ja
jo
in
inc
lea
xchg
dec
jb
gs
xchg
shl
in
out
(bad)
ret
in
mov
pop
or
pop
mov
adc
inc
jno
mov
inc
enter
je
outs
repnz
fwait
repz
sti
cmp
jge
retf
and
fidivr
sub
movs
mov
dec
clc
adc
jmp
pop
in
inc
cs
jno
ins
mov
xor
pop
xchg
es
out
jbe
push
xchg
or
xor
movs
and
jmp
call
mov
out
mov
mov
imul
xor
mov
addr16
adc
gs
jge
adc
test
sti
push
rol
in
addr16
add
(bad)
cwde
in
dec
ds
out
outs
hlt
push
cwde
sahf
mov
push
inc
aam
jo
hlt
mov
push
pusha
jne
dec
cs
es
rol
call
xor
dec
icebp
mov
test
sub
add
jb
fist
movs
sub
jno
scas
inc
call
sbb
pushf
(bad)
std
pusha
in
(bad)
jg
jp
ds
ja
in
sub
pop
cmc
xchg
int3
pop
inc
popf
push
xor
in
push
pusha
jp
(bad)
jo
add
pop
or
es
jno
mov
xchg
es
rcr
ss
mov
mov
and
test
cwde
adc
test
dec
cmp
sbb
xor
repnz
and
or
pusha
fild
bound
into
test
dec
pop
test
(bad)
adc
loope
loop
dec
cmp
jmp
arpl
sub
int
jg
cmp
or
iret
lock
(bad)
call
xor
cmc
int3
cmps
mov
loopne
and
sub
xor
cmp
mov
mov
push
jae
sbb
std
mov
iret
add
xchg
mov
mov
test
repnz
jno
test
and
jl
pop
xor
pop
jo
jmp
test
cmps
mov
mov
mov
jle
xor
sahf
or
sti
or
nop
cmp
and
fwait
stos
push
hlt
mov
jbe
aam
or
push
inc
mov
or
(bad)
cmp
int
mov
daa
adc
add
sbb
mov
inc
es
into
je
dec
aas
mov
pop
call
pop
pop
jbe
cwde
in
sbb
loope
inc
das
inc
xor
add
mov
sub
cli
or
sbb
push
or
mov
push
pop
sbb
or
fiadd
stos
add
out
lods
nop
sbb
lea
mov
stc
test
pop
pop
aam
add
out
add
inc
add
in
sbb
ins
nop
iret
loopne
jmp
repz
fptan
pop
and
fistp
and
or
outs
push
aas
aas
cs
or
mov
inc
mov
jnp
bound
sar
arpl
inc
ror
lahf
mov
sbb
arpl
mov
or
pop
sub
(bad)
or
addr16
lds
data16
jmp
call
cmp
sbb
sbb
cwde
cmps
addr16
inc
gs
or
push
mov
add
add
sbb
mov
je
(bad)
nop
fist
inc
imul
xor
mov
sbb
inc
push
xor
pop
xchg
inc
pop
mov
mov
add
jl
mov
and
adc
icebp
cmp
push
push
(bad)
jbe
inc
daa
in
ins
sub
inc
sub
out
loope
int3
fs
shr
imul
or
inc
mov
mov
xor
out
sbb
popf
lock
retf
push
mov
retf
jae
mov
add
push
retf
fmul
retf
call
test
mov
loopne
call
add
mov
push
adc
ss
dec
enter
mov
hlt
jne
pop
lock
adc
iret
imul
or
sbb
jns
cmc
push
xor
clc
(bad)
push
mov
jl
pushf
call
push
les
mov
and
mov
dec
jo
push
das
(bad)
xlat
ror
xlat
mov
(bad)
cmp
mov
retf
xor
pop
(bad)
retf
imul
mov
pop
xor
(bad)
push
movs
dec
(bad)
xchg
cmp
out
lods
lds
or
leave
pusha
dec
mov
call
bsf
adc
sbb
sub
cmp
or
out
dec
fist
pop
xchg
jb
fdiv
sbb
cdq
movs
push
inc
jecxz
mov
pop
pop
inc
and
jbe
and
xchg
xor
jl
jo
test
and
(bad)
cmc
and
add
mov
mov
test
std
push
xchg
ins
inc
xchg
mov
out
xchg
push
in
xor
and
xchg
clc
inc
in
rcl
repnz
ins
imul
jno
inc
rcr
mov
fs
pop
xchg
add
sti
cld
imul
test
push
adc
call
pop
jb
test
jp
cmp
sub
xchg
cdq
sub
ret
jge
dec
leave
dec
loop
retf
push
xor
inc
adc
xchg
pushf
repnz
lds
push
mul
mov
sbb
add
in
or
into
lods
xchg
loop
into
push
cmp
cld
or
rol
pusha
imul
cmp
jns
and
mov
jp
rcr
jo
scas
xchg
xor
sub
sub
inc
fsubr
pop
dec
push
push
inc
fistp
cmps
lahf
loopne
dec
jg
mov
mov
push
test
ins
add
push
jge
enter
(bad)
arpl
jbe
(bad)
adc
cdq
iret
dec
inc
outs
cmp
dec
sbb
dec
out
and
mov
daa
inc
outs
inc
inc
sub
retf
rcl
push
aaa
mov
pop
test
sbb
ret
dec
call
outs
aas
ins
jmp
shl
jbe
outs
or
add
into
jge
clc
mov
pop
aas
dec
xchg
jp
push
call
invd
sbb
or
ret
ret
pop
hlt
loope
or
sub
jae
xchg
ret
gs
movs
dec
stc
dec
in
popf
adc
(bad)
pop
pop
pop
pop
pop
ds
push
cs
test
imul
movs
xchg
call
jg
xchg
xor
mov
daa
int3
jo
cdq
mov
jbe
adc
add
aam
nop
xor
lds
adc
shl
hlt
rcr
push
sub
or
or
addr16
or
cmps
out
and
push
inc
push
cmp
call
je
or
jl
cmps
cmc
xchg
pop
sar
push
sbb
lods
(bad)
out
retf
mov
mov
sub
(bad)
scas
movs
jae
push
bnd
inc
rol
xor
outs
neg
or
test
div
mov
mov
imul
test
or
retf
jmp
inc
cmps
or
add
pop
push
icebp
popf
in
adc
fcmovbe
fistp
cmps
mov
sub
sub
das
fisubr
in
xor
add
xchg
call
sub
pushf
fs
dec
nop
fmul
sub
inc
cmp
loope
cmp
lods
pop
cmps
dec
push
jmp
or
cmp
dec
mov
out
cwde
and
inc
dec
cmps
jmp
pop
repnz
iret
sbb
or
dec
(bad)
jle
(bad)
rcr
ret
cs
add
jne
std
sar
dec
cli
mov
inc
mov
(bad)
mov
and
fidiv
or
pop
dec
mov
int3
stos
and
lahf
jmp
sbb
gs
(bad)
or
or
dec
mov
cmps
(bad)
dec
xor
pushf
mov
stos
nop
add
int
adc
sbb
repz
aad
jecxz
pop
in
js
subps
test
jne
mov
sub
inc
mov
jle
xchg
sbb
dec
mov
(bad)
xor
(bad)
push
mov
stos
adc
es
call
dec
jo
inc
mov
icebp
or
imul
(bad)
or
neg
jg
into
jne
or
cmp
fstp
call
sbb
repz
jb
sbb
hlt
fist
or
mov
lods
dec
dec
push
pop
loope
add
mov
dec
add
pop
nop
data16
in
call
repz
rcl
stos
inc
pop
sub
mov
mov
xchg
mov
lods
sahf
loope
loopne
fnop
inc
cwde
mov
shl
jns
lds
call
mov
in
mov
fnstenv
jbe
mov
xor
and
dec
xor
sub
jp
repnz
retf
push
jo
sub
imul
mov
cmc
int
adc
jnp
or
add
xor
inc
adc
pop
cmc
popa
mov
cmp
inc
mov
test
loopne
inc
cmps
mov
mov
es
pusha
pop
inc
add
push
aas
add
in
jp
mov
bound
out
mov
sbb
shr
popa
cmp
xor
xor
test
mov
fsubr
repz
outs
dec
and
push
or
or
js
ror
cmp
ins
add
shl
jge
mov
icebp
mov
stos
imul
cmp
sub
js
dec
mov
lock
cmps
std
je
sahf
mov
mov
push
lea
xchg
mov
rcr
push
js
arpl
repz
neg
enter
push
mov
cdq
xor
dec
and
ret
call
or
sbb
cwde
pop
fmul
dec
jno
out
sti
mov
scas
mov
jb
fadd
dec
jne
xor
div
cmp
xlat
jg
adc
mul
stos
xchg
push
pop
(bad)
int
pop
push
pop
fisubr
or
fsubr
sahf
loop
mov
or
cmp
test
mov
idiv
sub
jmp
(bad)
jp
xor
sbb
dec
xchg
and
inc
jl
jge
test
mov
cli
(bad)
test
jp
jl
jge
mov
(bad)
clc
push
ins
dec
mov
(bad)
std
pop
ss
in
test
neg
ret
movs
test
fcom
sub
int3
xor
cmc
pushw
sti
mov
add
push
ror
imul
cdq
mov
jle
nop
pop
mov
inc
(bad)
or
cmp
sti
and
and
push
repnz
jb
sub
cmp
ins
or
(bad)
mov
loop
adc
push
jmp
neg
fistp
and
outs
cvtdq2ps
shl
in
push
in
sub
rcl
or
aam
mov
(bad)
clc
mov
adc
fsubr
inc
jl
std
jp
jbe
mov
xchg
jno
jecxz
mov
inc
pop
adc
test
sub
repz
sub
rol
adc
retf
shr
jecxz
imul
lea
mov
into
add
sti
loop
push
mov
outs
je
jp
js
mov
pushf
iret
mov
fwait
sub
test
sahf
sbb
jecxz
jmp
xchg
ds
stc
adc
imul
(bad)
cld
push
nop
inc
nop
and
push
dec
(bad)
pop
cmp
push
pop
call
xchg
shr
jmp
test
jo
xor
xor
aad
push
dec
outs
(bad)
cmc
pushf
push
scas
xor
add
mov
push
jmp
lds
aad
cld
sbb
xor
and
jo
test
in
xlat
in
sti
fnsave
dec
scas
enter
push
movs
cmp
mov
ret
jle
call
test
movs
mov
mov
cli
ins
addr16
scas
xchg
(bad)
nop
sbb
ins
daa
xlat
repz
stos
mov
lea
xor
fsub
shl
inc
jmp
or
sbb
or
gs
dec
leave
pop
jno
not
cmp
int
(bad)
xor
xchg
or
nop
jle
inc
popa
pop
ret
ds
fdiv
es
pop
and
sbb
mov
nop
or
mov
sub
(bad)
aaa
stos
mov
dec
inc
jno
popf
fimul
(bad)
and
ror
jo
mov
lock
hlt
sbb
ds
inc
test
and
mov
mov
stos
xchg
shl
out
add
adc
repnz
repz
inc
or
das
scas
cs
mov
das
iret
movs
pusha
outs
inc
popf
dec
lock
jecxz
pop
xchg
adc
data16
pop
mov
or
pop
jb
xor
cmp
xchg
push
outs
lods
(bad)
and
mov
pop
test
pusha
sbb
fidivr
out
and
sub
push
jge
fcomi
dec
jb
xlat
pop
retf
xchg
jne
rcl
cmp
mov
and
test
mov
cmps
cmc
jae
or
mul
mov
xchg
pop
imul
cmp
mov
arpl
sbb
cmp
xor
mov
mov
push
xor
out
sbb
add
mov
xor
jecxz
pop
or
ja
nop
imul
pop
mov
lock
cli
adc
in
repnz
mov
(bad)
fucomi
dec
ss
or
sbb
rol
inc
and
rcl
fstp
push
xchg
and
xor
or
(bad)
or
sbb
fcmovne
sbb
out
push
push
aas
jb
cmp
in
cwde
and
ret
ds
fimul
pop
jo
push
pop
push
in
pop
shl
cli
sbb
cmp
xor
cmp
cmps
daa
cmps
popf
xchg
imul
dec
xchg
fistp
add
rcl
ins
push
out
ins
test
mov
mov
test
stc
and
stos
imul
add
mov
call
mov
cmps
adc
pusha
mov
mov
rcl
jp
imul
lods
mul
adc
outs
ret
addr16
or
push
cli
and
aad
mov
cmp
aaa
fneni(8087
lock
cmp
int3
repnz
js
jnp
aaa
xchg
daa
pusha
pop
mov
and
mov
mov
cld
xlat
test
in
je
sub
mov
pop
mov
mov
lahf
inc
rcr
xchg
lock
pusha
xchg
sub
jecxz
dec
add
mov
xchg
or
cmps
cmp
pushf
div
sahf
ret
test
in
fidivr
sti
jbe
mov
(bad)
aaa
aaa
jno
pop
inc
push
xlat
push
mov
xor
fidiv
js
subps
or
(bad)
pop
xor
dec
push
test
aad
lods
dec
xor
mov
and
inc
ja
mov
jo
xchg
pop
xchg
add
dec
push
mov
adc
sub
rcl
or
pop
(bad)
xor
inc
test
je
push
sbb
(bad)
cwde
jge
rcr
adc
jmp
lahf
(bad)
sar
sub
(bad)
adc
shr
icebp
dec
je
stc
pop
jg
xor
das
and
jae
inc
loope
dec
or
inc
sti
les
test
jge
lock
gs
stc
dec
jbe
clc
dec
lods
in
xchg
mov
xchg
mov
pop
out
dec
or
mov
nop
in
sbb
ror
mov
inc
enter
pop
and
mov
test
xchg
adc
aas
scas
xchg
xor
mov
test
and
shr
std
and
icebp
imul
out
push
into
add
mov
mov
mov
pop
cs
sub
inc
xchg
push
sub
jmp
jl
xor
out
mov
fcmovnbe
adc
int3
int
mov
sbb
add
ja
out
ins
jnp
inc
loop
adc
and
xchg
and
pop
adc
imul
pop
mov
in
cld
mov
call
loop
mov
sub
into
add
xlat
push
mov
jmp
cdq
jo
out
pop
xor
sbb
inc
fidivr
out
mov
(bad)
inc
fcom
xor
jp
dec
call
fsubr
in
ins
hlt
rcl
es
iret
int3
or
cmp
dec
dec
inc
cwde
bound
pop
inc
sar
pop
mov
outs
xlat
sub
jb
mov
sbb
push
(bad)
lods
jnp
cs
pushf
repz
imul
fnstenv
(bad)
dec
mov
cmp
out
cld
mov
pop
fcom
jmp
paddsb
scas
loop
inc
scas
sub
dec
jo
push
dec
(bad)
stc
repnz
adc
push
xchg
(bad)
data16
outs
pop
mov
add
fist
(bad)
ror
pop
(bad)
scas
adc
and
out
daa
rcr
jne
rcr
fwait
fs
cmp
push
xor
btr
mov
inc
aas
xchg
and
sbb
xor
mov
fdivr
test
leave
out
jge
sbb
in
js
vcvtdq2ps
sahf
or
shl
bound
add
sbb
ja
ja
mov
mov
dec
cmp
jne
shr
clc
mov
clc
xchg
mov
sub
dec
cmc
call
pop
repnz
jb
jne
pop
jnp
adc
popa
sbb
xchg
sbb
cmp
cwde
repz
xchg
aam
stos
ss
cmp
jbe
sub
shl
jp
dec
and
test
and
scas
ins
pop
mov
vcvttss2si
inc
mov
and
jno
xchg
push
xor
ja
mov
fwait
inc
pop
or
(bad)
leave
and
sub
clc
daa
sub
mov
outs
jae
xor
mov
mov
xchg
push
cmp
cwde
push
sub
or
dec
xchg
fld
push
and
add
mov
xchg
(bad)
mov
sahf
ret
loope
add
arpl
mov
xor
mov
lahf
push
xchg
push
jle
imul
jae
test
mov
sub
jg
cs
fstp
xchg
adc
jo
movs
(bad)
in
adc
mov
dec
xchg
mov
pop
push
mov
imul
shl
nop
sbb
lock
loope
jecxz
jge
hlt
sti
adc
ins
pop
push
aad
repnz
fwait
imul
pusha
sbb
or
rol
data16
or
xchg
sbb
mov
mov
in
(bad)
test
push
cmp
aad
or
adc
cmp
mov
mov
dec
inc
push
retf
dec
push
or
jb
dec
mov
mov
or
(bad)
or
inc
pushf
out
add
mov
loope
dec
cmp
in
cmp
cmps
idiv
das
int3
into
jnp
cmps
ficomp
dec
inc
mov
int3
pop
aaa
ret
test
stos
dec
stos
ror
pop
pop
cld
(bad)
outs
lods
sbb
or
and
mov
(bad)
adc
test
fsubrp
fdivr
xchg
sub
pop
push
pop
xor
jge
nop
pop
mov
aaa
(bad)
lahf
xchg
(bad)
dec
sahf
retf
inc
imul
or
fst
movs
lods
pop
mov
loop
jnp
pop
jbe
std
js
fdivp
add
pop
clc
pop
repz
dec
pop
pop
test
test
mov
lock
mov
xor
push
mov
aas
(bad)
and
push
(bad)
cld
stc
movs
xchg
fstp
dec
lods
popf
adc
mov
int
imul
push
mov
test
shl
pinsrw
rcr
jecxz
repz
jge
jo
clc
in
imul
scas
jmp
cmp
icebp
test
jo
(bad)
mov
les
nop
fs
out
retf
and
xchg
xchg
push
ss
pop
dec
push
mov
retf
hlt
(bad)
ss
xchg
jmp
outs
js
dec
dec
jo
sbb
inc
push
cli
sbb
cwde
out
cld
or
shl
dec
fst
adc
add
les
leave
popf
ret
add
mov
sbb
or
and
add
jno
cmp
int
sbb
mov
mov
push
inc
lods
repnz
mov
ins
bound
ret
ret
pop
xor
push
xchg
lds
ins
sbb
test
add
stc
ret
loope
(bad)
adc
xor
push
mov
xor
fadd
xor
mov
fsubr
push
arpl
pop
psraw
stos
sbb
shl
ror
fs
cmp
xor
or
mov
sub
cli
jns
mov
sub
js
pop
xor
mul
xchg
pop
pop
data16
cdq
jo
repnz
pop
cmp
fsincos
push
cmp
dec
inc
mov
dec
cmp
pop
dec
sub
adc
xchg
inc
sub
ss
loop
imul
jle
cmp
jno
test
or
pusha
add
cmp
aas
fnstsw
dec
(bad)
int
mov
fnsave
gs
leave
add
xor
or
out
push
jp
outs
push
cli
jb
inc
out
lahf
mov
arpl
xor
dec
or
adc
test
cmc
shl
and
and
mov
push
sbb
or
sar
cmp
and
stos
sub
and
mov
pop
lods
rcr
jp
mov
pop
lea
mov
movs
sti
mov
mov
or
sub
pop
and
adc
push
arpl
mov
(bad)
enter
push
sbb
call
push
fs
(bad)
pop
mov
adc
xchg
inc
call
xor
dec
ret
stos
cmp
in
adc
addr16
popf
sbb
xchg
jecxz
lds
xor
mov
pop
loop
cmp
xchg
push
cmp
fimul
retf
jae
jp
shl
mov
xchg
pusha
adc
lock
in
stc
dec
adc
rcr
not
cmp
mov
or
aaa
imul
cmc
pop
repz
test
mov
adc
or
push
aad
inc
fadd
inc
add
dec
mov
sub
stos
out
sbb
outs
call
inc
lods
sbb
dec
es
lods
cmc
aas
dec
jmp
mov
mov
xor
mov
jp
mov
fsubr
pop
pop
mov
push
pop
icebp
mov
jno
push
or
or
add
ror
add
cmp
sub
jp
mov
retf
das
call
dec
aas
shl
mov
sub
outs
mov
inc
aad
addr16
xor
add
xchg
adc
(bad)
cmp
add
in
mov
xchg
push
pushaw
inc
lods
cmc
jmp
jbe
adc
jbe
mov
lods
popf
clc
pop
mov
jnp
movs
test
add
and
loope
cmp
pop
push
mov
cwde
mov
int
into
in
(bad)
out
dec
in
aam
and
cld
sub
setge
xchg
inc
sub
into
aaa
out
xlat
jnp
mov
mov
push
popf
jo
cmps
sub
push
dec
adc
or
movs
idiv
add
sbb
sub
movs
jmp
repnz
xchg
mov
int3
(bad)
mov
push
pop
xchg
cmp
mov
out
stos
or
mov
xchg
test
push
ins
dec
push
pusha
cmp
in
fst
outs
push
lods
xor
mov
mov
xor
imul
jmp
adc
adc
jno
scas
pop
fwait
dec
pop
or
mov
mov
sbb
repz
inc
xor
fnstenv
fs
(bad)
loope
out
sub
leave
fstp
jmp
jns
popf
stos
jae
push
jne
jae
mov
out
add
imul
jne
mov
cmp
nop
mov
push
add
cli
inc
dec
rol
(bad)
jno
push
das
mov
adc
pushf
test
pop
mov
jne
mov
mov
push
rcr
ret
data16
or
(bad)
cwde
sbb
test
aam
stc
pop
or
jbe
dec
ud1
fcomp
arpl
cmp
jo
and
inc
add
shl
and
inc
sar
scas
daa
xor
das
push
ret
adc
scas
dec
sar
cmp
xor
adc
mov
call
jmp
xor
leave
push
jo
push
dec
ja
push
loopne
or
add
xor
je
or
js
pop
fidiv
int3
jp
clc
dec
push
mov
lea
mov
jae
jmp
cmc
and
aas
jecxz
inc
push
inc
icebp
rol
cli
sahf
pop
add
xchg
mov
pop
dec
test
mov
pop
adc
inc
ins
sbb
jb
push
fsub
hlt
mov
add
shr
xchg
mov
outs
scas
dec
cmps
test
inc
and
jae
pop
bound
int
lock
leave
fstp
or
and
(bad)
mov
pop
inc
mov
(bad)
shl
dec
loope
pop
pop
mov
leave
push
mov
xor
adc
outs
call
add
sti
xadd
xor
outs
inc
popa
jmp
ret
stos
js
sbb
sub
cmp
fbstp
out
imul
jmp
inc
mov
push
test
pop
(bad)
bound
lods
lahf
stos
jae
int
test
xlat
cmp
mov
call
int
shl
add
shl
jl
mov
test
sub
lods
test
pusha
js
dec
jbe
add
je
and
pusha
push
lock
sbb
jmp
(bad)
scas
sbb
jmp
and
stos
imul
mov
lahf
xchg
xchg
and
cli
mov
cmp
inc
push
cs
repz
imul
pop
cli
into
ficom
loop
icebp
repnz
or
xor
jmp
cmp
fst
dec
aas
cmps
cmps
das
shr
dec
lahf
jno
pop
js
lea
sbb
mov
stos
jo
adc
mov
mov
fcomp
or
shl
cwde
cs
or
adc
cdq
mov
jle
xchg
jb
add
scas
call
sbb
pop
movs
cmp
(bad)
sti
ret
mov
and
test
mov
fs
pop
cmp
in
repz
fisttp
aaa
pop
icebp
popa
mov
shld
dec
push
mov
mov
push
pop
pop
into
pop
dec
adc
out
mov
pop
cmp
cmps
stos
je
jg
test
xor
push
in
cdq
cmp
clc
aad
movs
js
xor
xchg
sahf
jecxz
sahf
and
aam
jl
inc
pop
xor
aaa
outs
leave
xor
out
sbb
sub
jg
adc
lds
pop
(bad)
call
or
outs
movs
fisubr
imul
xchg
fld
pop
sahf
imul
in
mov
mov
aam
cmp
out
push
imul
sar
sub
sub
mov
lock
inc
or
sbb
pop
je
sub
ja
mov
push
loop
fisubr
jp
mov
add
mov
outs
rol
out
jle
gs
inc
jo
cmp
scas
cmp
stos
out
mov
push
pop
push
jmp
lock
mov
mov
xor
jnp
out
cmp
xchg
and
rcl
cmp
sub
inc
imul
pop
cmps
jns
enter
ret
lods
nop
rcr
cmc
inc
sub
sti
fisub
dec
sbb
mov
mov
fcmovbe
imul
out
pop
sbb
(bad)
push
(bad)
repz
add
fst
daa
push
je
add
cmp
lock
sub
test
xlat
dec
call
jg
and
sti
leave
push
out
lods
mov
daa
nop
mov
push
fsub
cld
mov
ds
adc
and
mov
(bad)
fcom
inc
rcl
pop
lahf
nop
sahf
cmp
cwde
xor
add
jmp
enter
outs
xor
ret
xchg
cld
adc
add
call
cs
call
ins
sub
addr16
xchg
enter
mov
push
outs
ins
mov
pop
test
pop
imul
add
xor
ins
fldcw
rcl
fs
cmp
adc
pushf
test
and
cs
pop
ret
(bad)
push
cmc
shl
nop
pop
adc
mov
inc
pop
fstp
cmps
xchg
stc
mov
nop
sub
lds
inc
movs
out
int
add
adc
(bad)
std
out
aad
cmps
and
js
dec
jg
test
jge
ss
test
pop
pop
hlt
outs
out
or
imul
push
jle
inc
add
(bad)
jl
sbb
fild
mov
nop
and
fidivr
out
inc
adc
adc
sti
push
repnz
addr16
sbb
rcr
call
mov
xor
in
loopne
xchg
dec
mov
add
xor
inc
bound
cs
add
push
xchg
imul
inc
mov
pusha
loope
stc
lds
xor
sar
retf
ss
movs
ret
stos
pushf
scas
cmp
dec
je
adc
fidivr
loop
xor
cmp
(bad)
in
fst
in
adc
mov
stos
push
push
into
aam
aaa
cmps
fidiv
push
pop
inc
int
jl
pop
mov
dec
fwait
jp
and
sub
dec
call
stos
retf
xor
enter
dec
pop
xchg
and
rcr
loope
push
dec
cwde
adc
int
cmps
or
jns
inc
scas
sub
dec
sbb
cld
aam
inc
pop
adc
jmp
movs
mov
cmp
mov
push
push
add
jecxz
mov
fimul
pushf
mov
push
pop
or
adc
add
cwde
lock
sbb
in
add
(bad)
test
lods
(bad)
pop
lock
pop
sub
int3
retf
out
inc
out
pop
adc
or
xor
sub
sub
fmul
jo
call
jmp
(bad)
dec
sbb
arpl
ret
inc
push
jb
mov
adc
pop
jne
add
mov
in
mov
cmps
sub
push
dec
cmp
mov
pop
mov
mov
jae
lods
retf
dec
fld
lahf
push
or
dec
in
jo
fimul
outs
jns
fistp
xor
xchg
sbb
imul
(bad)
dec
fwait
out
ficom
adc
rcl
leave
lahf
arpl
and
dec
test
jo
add
lods
sti
(bad)
(bad)
iret
jns
add
cmp
cwde
fisttp
pop
add
call
movs
jp
data16
sub
iret
push
enter
mov
and
popf
add
sbb
xor
dec
ja
into
pop
pushf
jmp
xlat
sub
jno
je
ja
mov
repnz
jge
sub
sbb
mov
xchg
popa
mul
loopne
add
and
mov
push
jp
stos
push
mov
mov
js
xchg
add
fidivr
xchg
xchg
cmps
shl
pop
jmp
repz
cmp
mov
xor
xchg
dec
xor
lea
pop
sar
jmp
jno
ds
movs
mov
mov
out
adc
fs
xor
cli
push
(bad)
test
jne
mov
movs
pop
ficom
adc
(bad)
fidiv
je
mov
mov
or
mov
xor
lods
out
mov
push
or
xchg
fs
std
jle
xor
sbb
dec
inc
retf
loope
lock
inc
mov
stmxcsr
xor
and
xchg
push
cld
push
or
lods
lods
ror
(bad)
lea
mov
(bad)
fmul
sub
fnstsw
ficomp
test
fiadd
add
into
pushf
sti
inc
dec
and
xchg
jecxz
je
or
pop
push
xchg
nop
repnz
(bad)
xchg
push
out
push
out
cmp
jmp
jbe
and
cli
out
call
dec
jp
sub
(bad)
std
cmp
mov
rcr
enter
inc
push
mov
rcl
loope
ret
push
jae
mov
mov
in
sbb
xchg
neg
dec
or
sbb
aaa
jae
in
pop
lahf
repz
inc
cmp
cmps
dec
imul
adc
rcr
mov
push
jae
mov
mov
mov
push
test
add
dec
xchg
cmp
adc
mov
lea
pushf
and
in
scas
ins
out
and
lock
jl
cmp
int3
in
loope
xor
cs
enter
mov
mul
leave
ja
lock
fwait
add
jl
retf
dec
pop
sbb
adc
aam
cmp
dec
cdq
mov
cmps
push
inc
adc
sar
xlat
sub
xchg
dec
outs
pop
aas
(bad)
and
and
and
lahf
dec
mov
inc
int3
sub
mov
jae
mov
outs
pop
inc
(bad)
cs
push
mov
sbb
shr
xchg
loopne
jmp
mov
icebp
xchg
aam
xchg
mov
mov
xor
retf
adc
ror
jmp
mov
pop
jl
mov
push
mov
sbb
mov
imul
test
dec
jns
das
or
shl
popf
xor
cdq
inc
or
inc
dec
hlt
sbb
repz
test
push
adc
out
pusha
stc
test
inc
int3
cwde
xchg
(bad)
pusha
sbb
cmp
cmps
dec
cmps
pop
(bad)
push
and
jns
xchg
cmps
sbb
les
push
loope
(bad)
int3
outs
jmp
ret
or
or
shl
mov
pop
push
cdq
sbb
mov
retf
aaa
mov
push
in
aaa
out
(bad)
xlat
mov
or
shl
rcr
cmp
push
(bad)
movs
movs
push
aam
push
cmp
pop
clc
sub
cmp
mov
lock
adc
or
outs
push
test
jl
push
(bad)
out
data16
scas
inc
fimul
mov
sub
and
jne
sbb
xchg
lock
dec
xchg
mov
sti
mov
in
adc
xor
push
sar
aas
mov
ret
push
nop
sbb
in
pop
sbb
pop
cld
out
mov
push
clc
pop
mov
xchg
and
and
mov
enter
and
movs
clc
add
cmc
jp
mov
xchg
scas
sbb
mov
push
int3
aaa
mov
inc
pop
inc
dec
fucomip
nop
xor
lods
ja
push
cdq
add
in
stos
push
xor
in
out
mov
movs
xor
add
lock
dec
mov
ins
icebp
dec
shl
jecxz
jne
ret
or
sub
adc
fst
jmp
movs
jo
or
pop
fsubr
ffreep
popf
xchg
fcom
pop
(bad)
pusha
movs
jae
sub
jmp
ins
cmp
ror
nop
inc
dec
cmovo
mov
inc
cmp
inc
ror
mov
lods
jmp
test
mov
push
dec
sub
sti
push
dec
retf
imul
(bad)
test
lock
hlt
sbb
xor
mov
xchg
sbb
jb
ins
xchg
or
pop
mov
daa
pop
sbb
and
sbb
test
fadd
xor
xchg
cli
fcom
xchg
popa
sahf
aad
mov
in
add
pop
pop
dec
mov
mov
mov
pop
arpl
fadd
push
mov
push
retf
xchg
push
sbb
mov
pushf
mov
addr16
push
mov
into
xchg
mov
mov
add
sub
aas
dec
mov
sub
sub
sub
outs
pop
adc
and
xchg
in
and
jns
add
and
ficomp
jmp
and
jge
sub
aas
jmp
adc
mov
push
imul
test
call
(bad)
test
push
arpl
mov
out
fnstcw
mov
in
fistp
push
call
lods
out
rep
jne
mov
(bad)
(bad)
mov
retf
mov
rcr
cmp
sub
pop
ret
pop
retf
mul
test
outs
int
sbb
cmp
mov
jns
push
fcom
and
mov
push
push
dec
push
jmp
hlt
cs
xchg
ret
imul
ret
adc
(bad)
adc
or
xor
(bad)
mov
sub
fild
sti
xor
in
out
addr16
mov
cli
shr
xor
push
inc
push
test
fidiv
ret
sub
shl
push
(bad)
ins
and
shl
or
mov
data16
test
add
(bad)
aad
lods
fbstp
les
xchg
mov
pop
or
or
mov
mov
push
push
or
test
jmp
xchg
adc
ret
jns
mov
push
(bad)
aad
and
and
mov
jns
jo
and
and
scas
xchg
sub
lock
mov
loopne
adc
mov
jns
mov
jbe
cmp
or
test
or
jg
push
fbld
pop
jmp
push
sar
adc
dec
push
cmp
outs
xlat
pop
in
mov
mov
sub
mov
xchg
jb
movs
mov
jae
fdiv
loopne
sub
fwait
jg
sub
leave
inc
xlat
push
push
push
sub
mov
pop
or
in
call
lea
bound
loopne
fisubr
mov
data16
pop
pop
cdq
lock
xchg
xchg
imul
jge
int
jbe
push
imul
mov
stos
or
adc
fild
push
loop
mov
arpl
cmp
xor
fcom
popf
xlat
mov
jns
dec
sbb
push
lock
fnstsw
test
pop
mov
in
mov
test
daa
test
pop
aas
mov
cdq
xor
adc
sti
or
rcl
and
test
adc
clc
cld
sub
pop
pusha
mov
fcmovbe
xchg
sbb
cld
xor
cmp
add
hlt
or
push
(bad)
mov
repnz
fimul
mov
jp
jmp
xchg
ror
sub
jno
inc
or
push
out
repnz
aam
arpl
imul
xor
or
(bad)
ret
shr
add
inc
and
mul
and
jae
stos
les
and
add
js
pop
add
pop
xchg
mov
out
fisttp
push
sub
pop
or
in
cwde
(bad)
push
leave
fcomp
or
mov
aad
jae
jno
lods
fcom
xchg
(bad)
jle
out
fs
and
xchg
jecxz
adc
out
cmps
repz
inc
inc
jmp
or
stos
cmp
nop
cmps
test
xor
inc
cwde
add
repnz
sti
cwde
mov
pop
pop
cmps
pop
xchg
mov
push
mov
sub
addr16
sar
mov
jp
les
cmp
call
xchg
add
mov
stc
in
aam
adc
sbb
mov
adc
cmps
cmp
fisub
inc
shl
add
(bad)
mov
aas
icebp
call
mov
test
mov
push
inc
jecxz
cmp
jmp
or
xor
mov
out
mov
aas
cmp
popa
sti
popf
mov
nop
jne
(bad)
mov
shr
aas
dec
fcom
jecxz
cmp
imul
push
sahf
push
xchg
dec
mov
dec
int3
inc
sti
xchg
jmp
and
gs
js
cs
sub
dec
inc
popf
push
into
stos
mov
loop
adc
jg
and
mov
pushf
(bad)
push
sbb
outs
js
or
imul
mov
sahf
lahf
jp
mov
xchg
mov
mov
sub
int
jbe
mov
in
sbb
sub
jecxz
xchg
int3
xchg
xchg
cmp
retf
push
mov
pushf
loope
(bad)
xchg
or
pop
pusha
or
fs
rcr
or
mov
jnp
push
pop
sub
es
mov
xchg
dec
cmp
mov
push
es
add
add
scas
leave
lods
pop
ins
sub
(bad)
(bad)
jle
mov
mov
sbb
jmp
inc
mov
jle
ret
add
add
dec
push
adc
jne
add
int
or
inc
adc
xchg
icebp
inc
sub
cmp
xchg
(bad)
add
pop
cmp
fbstp
shr
pop
sbb
sub
push
dec
int
dec
ja
mov
jge
in
mov
and
xor
mov
(bad)
add
hlt
scas
pop
inc
mov
jmp
xor
rol
test
jle
adc
mov
sub
out
ret
test
xchg
fbstp
cmp
push
(bad)
out
call
sbb
repnz
add
sahf
dec
in
cs
push
sub
popf
loopne
xor
scas
loope
xchg
and
and
loope
pop
cmp
fwait
dec
or
jne
fwait
pop
out
scas
xchg
push
(bad)
daa
leave
je
cmp
jmp
cmp
xor
dec
add
sub
leave
outs
in
pop
pop
imul
fwait
ss
sbb
in
int
sub
inc
nop
xchg
sub
xchg
mov
aaa
ror
sbb
cmc
sub
in
and
mov
or
inc
mov
pop
mov
hlt
std
hlt
adc
das
mov
aaa
imul
iret
mov
xchg
shl
xor
xor
jg
pop
and
mov
push
jns
or
xchg
dec
mov
inc
loop
sbb
sub
pop
jae
mov
shl
pop
jmp
ret
icebp
inc
inc
dec
xlat
leave
fnstenv
(bad)
test
in
mov
add
fdiv
enter
retf
repz
sbb
loopne
inc
popa
or
jge
dec
fidivr
jno
leave
stos
std
inc
jg
cmps
inc
out
adc
or
shl
int
in
adc
jle
bound
cld
inc
or
ja
scas
mov
ins
cmps
repz
ins
popa
mov
dec
push
(bad)
ror
mov
test
fsubp
adc
adc
xor
mov
jno
sub
(bad)
mov
out
ja
and
cmp
xor
cmp
outs
add
in
sub
adc
jns
loopne
and
and
sti
(bad)
push
mov
call
lea
jp
lahf
out
shr
in
xor
mov
clc
dec
inc
mov
stc
loopne
sti
icebp
lea
or
cs
iret
and
adc
mov
xchg
sahf
sbb
xor
and
jno
and
int
cwde
movs
push
ror
sahf
mov
cmp
cli
in
push
test
jg
ror
jecxz
dec
inc
sub
adc
aam
addr16
pop
pop
xor
sar
sbb
sbb
and
xchg
push
mov
xor
mov
and
dec
jno
dec
(bad)
retf
pop
or
sbb
cli
or
es
pop
inc
repz
neg
leave
push
leave
fldcw
cmp
push
lahf
push
mov
push
out
mov
sub
pop
dec
lea
xchg
xchg
(bad)
mov
scas
scas
pop
pop
push
push
or
xor
je
inc
test
mov
dec
outs
sbb
xor
rol
fld
sbb
in
jg
std
and
aas
js
sbb
fimul
cdq
mov
nop
out
and
sti
(bad)
out
xchg
int
lods
mov
dec
xchg
or
arpl
jg
xor
out
pushf
push
stc
and
in
sbb
jmp
inc
fcmovb
xor
dec
xchg
sub
and
loop
lea
pop
mov
cmp
xor
jecxz
push
pushf
arpl
lods
retfw
pop
adc
aad
sub
icebp
mov
cmp
sub
stos
cmp
repnz
cdq
std
(bad)
inc
inc
push
xor
leave
xchg
dec
vpackssdw
jo
scas
call
jp
inc
popa
test
call
pop
pop
js
add
and
retf
outs
std
or
test
ja
cmc
retf
ins
fadd
fcom
test
cmp
pusha
add
movs
cmp
inc
daa
addr16
pop
loopne
mov
fcom
mov
jle
rol
add
cmp
(bad)
int3
cld
dec
cld
xor
and
mov
stc
aas
dec
mov
mov
or
jge
mov
add
cdq
pop
add
jmp
jmp
mov
out
repz
dec
neg
loopne
mov
or
call
xor
adc
test
ss
inc
inc
jmp
cmp
(bad)
mov
call
mov
cmp
xor
rcr
inc
pop
or
mov
test
jnp
jge
out
aaa
jmp
mov
shrd
mov
lock
jnp
aas
repz
cmp
cs
imul
jecxz
stos
sbb
sub
xchg
pop
ja
in
mov
xor
adc
ja
clc
in
sub
rcl
xor
aad
lods
add
and
ds
sub
out
push
fnstenv
(bad)
pushf
aam
jge
sub
outs
pop
pop
(bad)
dec
lods
out
pop
inc
mov
ret
sub
adc
push
mov
adc
enter
cmc
sbb
mov
adc
arpl
push
in
inc
imul
repnz
and
lea
adc
mov
call
pusha
xchg
imul
es
mov
push
xchg
inc
gs
hlt
dec
cmp
lods
(bad)
aad
shl
shl
sbb
sub
and
mov
dec
ja
mov
inc
mov
inc
(bad)
outs
jecxz
pop
push
lea
test
pop
into
or
jns
movs
jae
stc
mov
movs
ds
outs
jle
sub
leave
xchg
xchg
adc
outs
or
icebp
out
sbb
outs
stos
in
int
cmp
cmp
in
sub
mov
repnz
div
mov
ror
lea
xlat
gs
mov
jbe
(bad)
fdivr
cwde
jo
(bad)
lods
cmc
or
iret
je
push
shr
pushf
mov
mov
xchg
and
ret
stos
loop
dec
jge
ins
mov
xor
and
adc
sub
std
sbb
or
mov
outs
add
lds
push
adc
and
hlt
jne
mov
xchg
dec
bound
sar
sbb
sub
push
cdq
mov
push
pop
movs
aad
shl
adc
int3
loop
fidiv
sar
ror
xor
sub
mov
int
mov
fs
inc
dec
repz
and
sti
ds
in
ror
and
xchg
push
mov
(bad)
sub
mov
clc
test
add
fwait
xchg
adc
hlt
sub
or
(bad)
mov
rcl
gs
mov
lds
imul
pop
gs
imul
imul
or
cmp
xor
mov
inc
add
inc
mov
mov
add
inc
icebp
jnp
jno
in
mov
les
jno
daa
pusha
and
dec
lods
pop
mov
ss
mov
mov
lds
jge
mov
leave
cmp
jmp
push
mov
inc
ret
std
fdiv
test
test
pop
lea
push
fstp
pop
jmp
ins
retf
movs
sub
add
mov
shl
enter
cmc
push
pop
ror
sbb
sbb
add
sbb
pop
aam
mov
in
xchg
pop
(bad)
fs
push
sub
xor
add
(bad)
adc
dec
sbb
rcl
dec
fisubr
or
fpatan
inc
in
push
push
mov
lahf
mov
retf
pop
pop
lahf
scas
rol
iret
scas
retf
pushf
dec
(bad)
cdq
push
dec
fwait
and
jae
aam
movhps
pop
inc
or
hlt
add
ror
mov
data16
push
cld
mov
mov
js
xor
push
bound
sbb
dec
aam
pop
sahf
les
sbb
lds
xchg
sub
int3
pop
dec
mov
data16
jl
inc
jns
jb
sub
sub
mov
mov
mov
sar
jp
mov
or
and
scas
or
js
cmp
pop
push
bswap
data16
inc
out
rol
pop
retf
es
neg
scas
js
xchg
cdq
test
enter
lahf
add
sub
mov
dec
mov
clc
push
xchg
adc
mov
mov
int3
adc
dec
xchg
jg
jo
mov
loopne
sub
(bad)
arpl
mov
mov
mov
mov
xor
aam
jmp
nop
cmovle
push
aas
add
pop
mov
pushf
mov
sbb
in
ds
adc
enter
xchg
sub
xchg
shl
add
aas
push
addr16
pop
(bad)
xor
xchg
and
pop
jae
and
mov
jecxz
lahf
adc
fisub
into
int3
loope
cmp
call
push
ret
sbb
movs
push
cld
mul
scas
test
data16
repz
xchg
add
nop
xchg
lahf
and
add
xchg
in
xchg
aam
mov
in
fistp
test
xlat
ficom
add
das
bound
imul
imul
mov
cld
dec
addr16
mov
xchg
fmul
jmp
xor
jno
and
lock
shr
sbb
les
aam
mov
add
sahf
ret
jno
neg
sti
ja
add
fdivr
addr16
out
add
pop
and
xor
or
jae
sub
mov
sbb
sub
adc
leave
jle
jmp
repnz
int
std
mov
push
mov
push
fdivr
mov
or
loope
clc
xor
ss
imul
out
ret
cmp
mov
out
addr16
xchg
leave
mov
scas
mov
xchg
jbe
or
cld
out
test
clc
inc
rcl
fidiv
sar
mov
adc
or
and
xchg
es
and
push
xor
lods
xchg
call
mov
mov
xchg
imul
leave
adc
adc
jmp
mov
inc
xlat
leave
cmc
repnz
or
jecxz
cld
pop
shr
cmp
aaa
cwde
out
mov
clc
mov
jmp
adc
lock
add
sbb
movs
xor
cmp
out
jle
rcl
or
and
add
xchg
pavgw
ret
scas
nop
cmp
push
stc
cmps
and
aas
xchg
sub
mov
iret
mov
adc
int3
inc
clc
inc
push
pusha
dec
add
fisubr
enter
mov
test
out
mov
cli
or
add
shr
setne
in
pop
xchg
(bad)
dec
xlat
sub
arpl
outs
arpl
dec
imul
ror
call
adc
aaa
mov
mov
pop
enter
cmp
jmp
shl
push
js
in
hlt
addr16
jb
mov
cmps
inc
mov
ja
in
inc
mov
mov
ss
aam
rcr
imul
pop
in
mov
xor
in
ret
repnz
push
arpl
mov
jns
push
loope
and
adc
inc
mov
sbb
xchg
push
jno
and
in
xor
jnp
add
or
inc
pop
movlps
stos
sbb
lods
loopne
cmp
retf
or
fisubr
mov
sti
adc
dec
or
loopne
and
int
movs
mov
mov
inc
inc
iret
out
push
ins
fcomp
mov
sbb
ds
push
out
arpl
xor
aam
stc
pop
nop
xor
in
scas
jmp
push
cli
sub
aaa
add
gs
jae
xchg
jnp
xchg
call
into
out
loopne
xor
xor
data16
sbb
aas
ja
imul
js
call
loope
and
sbb
lock
pop
movs
fist
xlat
add
inc
sbb
pushf
rcl
xor
push
mov
jo
mov
xor
pop
mov
movs
ror
lahf
sbb
pop
lock
mov
fsub
aas
xchg
stos
inc
or
pop
push
aas
sbb
cmp
push
pop
sbb
pop
jg
add
out
mov
mov
cmps
push
jge
sahf
dec
xchg
mov
jl
stc
cdq
fimul
dec
pop
mov
call
add
sbb
imul
mov
inc
fwait
mov
mov
ret
jne
xchg
sbb
push
mov
jg
icebp
or
cld
lods
fnstsw
test
sbb
test
fld
mov
push
lods
dec
aam
or
inc
jno
mov
ja
jp
mov
movs
aam
sub
cld
mov
(bad)
mov
out
dec
call
xchg
push
aad
test
push
mov
(bad)
or
shl
test
inc
sub
sub
sbb
pop
push
stc
jl
adc
or
jns
in
pop
mov
pushf
and
repz
fcmovnbe
sub
mov
pusha
out
mov
add
add
adc
cmps
mov
push
dec
test
xchg
dec
loopne
push
scas
mov
xchg
sub
sub
cli
cli
xor
xchg
cld
cs
stos
xchg
stc
fiadd
sub
add
push
adc
stos
mov
nop
test
les
test
add
pusha
pop
fwait
shr
mov
add
inc
pusha
and
not
in
xchg
jmp
pop
mov
lahf
pop
adc
adc
push
sahf
outs
repz
xor
fpatan
sub
(bad)
lock
push
ret
mov
xor
js
sbb
in
imul
mov
mov
shl
xor
cwde
int
rcr
and
pushf
jmp
dec
sbb
fdivr
cmp
pop
mov
pop
cmp
cmp
icebp
sbb
mov
and
sub
and
stos
cld
cmp
std
or
dec
cld
and
cmc
xchg
(bad)
cld
(bad)
scas
fisttp
or
fild
dec
inc
sub
mov
add
movs
push
es
int3
jb
sub
rcr
xor
inc
xor
dec
push
sti
push
sub
mov
in
add
xchg
or
or
sub
push
dec
pop
loope
mov
ja
and
add
fcom
(bad)
jecxz
into
xchg
xor
mov
mov
adc
mov
mov
push
dec
dec
xchg
and
sbb
dec
fcomp
mov
xlat
xor
rcr
and
xchg
adc
aaa
(bad)
retf
loopne
and
mov
sbb
push
out
adc
mov
sub
cli
mov
iret
jmp
or
sub
and
inc
in
loopne
jae
fist
or
test
(bad)
into
lods
out
and
sbb
xchg
scas
xchg
fcomi
stos
push
pop
dec
ror
sbb
repz
inc
mov
fwait
push
mov
lea
pop
mov
jne
pop
and
pop
xor
or
rcr
in
mov
push
and
dec
and
std
lods
or
mov
and
scas
aad
xchg
jmp
add
les
loop
test
jmp
rol
es
xor
cdq
movs
lods
or
ret
jnp
cmp
xchg
(bad)
sbb
cli
retf
loopne
retf
push
pushf
jl
icebp
and
arpl
mov
or
push
sbb
sub
repnz
hlt
mov
add
daa
(bad)
and
push
sub
xor
jmp
sub
dec
data16
jne
adc
adc
jno
push
icebp
jne
mov
(bad)
dec
cmps
ins
and
daa
out
test
mov
xor
mov
adc
loop
cmc
test
push
cmc
cmp
dec
sahf
mov
and
pop
sahf
sub
int
jnp
fistp
cmp
aaa
xchg
loopne
cs
dec
mov
es
dec
sub
lods
sub
test
lahf
mov
mul
inc
inc
dec
sar
ss
pop
fst
jl
xlat
xchg
mov
push
int
add
or
inc
(bad)
(bad)
repz
inc
mov
paddsb
dec
adc
(bad)
push
outs
lods
xchg
push
adc
test
push
mov
daa
push
rcl
dec
jmp
pop
add
ret
rol
xor
fisttp
outs
pop
dec
jmp
adc
pushf
(bad)
sbb
sub
rcr
in
jae
adc
icebp
inc
out
movs
test
cmps
pop
mov
jo
add
xchg
ds
xor
adc
mov
daa
sbb
or
fs
sbb
pusha
mov
cwde
dec
call
jns
out
cmp
test
pop
popa
clc
add
inc
add
push
ss
fwait
cld
or
push
sub
adc
cmp
sahf
mov
test
lods
dec
jp
sbb
enter
xchg
int
movs
out
pop
add
pop
je
or
clc
cmp
sbb
sbb
mov
cmp
test
(bad)
sub
sbb
repz
aad
clc
int
mov
in
push
xchg
jnp
xlat
movd
leave
pop
into
inc
loope
iret
arpl
inc
push
sub
add
add
shl
push
test
mov
pop
icebp
jne
fst
popw
inc
jecxz
in
or
ret
fmul
movs
retf
pop
dec
add
cmps
(bad)
fldcw
jb
mov
xor
shl
xchg
dec
test
out
into
bound
add
in
out
out
cwde
mov
das
sti
fcom
mov
and
int3
cmp
outs
inc
add
les
mov
nop
push
pop
add
nop
xchg
mov
push
inc
lods
mov
mov
lods
repnz
adc
inc
sub
scas
outs
mov
jo
int3
adc
and
jb
retf
push
jecxz
mov
xor
mov
inc
into
fisttp
(bad)
mov
mov
fsub
or
rcr
into
sbb
sbb
daa
aaa
jmp
(bad)
cli
mov
xchg
cmp
fcom
sub
inc
dec
or
imul
jl
inc
mov
inc
sahf
in
mov
cmp
mov
(bad)
cmp
outs
inc
or
add
(bad)
ds
xchg
in
inc
jp
xchg
dec
add
retf
sub
gs
lods
push
mov
loop
rcl
clc
and
xchg
adc
or
xor
sub
mov
daa
xchg
addr16
aam
neg
lods
jo
sahf
arpl
pop
mov
mov
in
xchg
pop
ror
out
rcr
retf
iret
jo
ficomp
int
jp
xchg
or
xchg
or
in
and
sbb
or
(bad)
sub
std
jne
mov
jbe
or
sub
xor
mov
sbb
fs
and
loopne
push
sub
mov
xor
std
and
jb
popa
pop
push
xor
cmp
lds
mov
sbb
ret
(bad)
cdq
xchg
cli
pop
lea
adc
adc
sub
neg
stos
fisub
cmps
int
ds
jmp
stos
jnp
retf
jle
push
fcmovnb
jle
jp
scas
popf
jge
push
adc
cmp
sub
sub
ins
or
into
and
(bad)
mov
inc
sti
movs
dec
add
sub
(bad)
imul
jmp
add
(bad)
add
or
xor
mov
pushf
int
dec
push
mov
repnz
inc
in
inc
ins
jl
rol
jno
sub
inc
outs
mov
xchg
call
dec
imul
xchg
cmp
pop
pop
sbb
pop
and
jmp
cmp
repz
hlt
test
imul
mov
push
dec
stos
retf
and
or
std
pop
inc
in
imul
mov
push
(bad)
leave
(bad)
push
inc
cdq
xor
cld
neg
push
sbb
push
dec
scas
xor
js
dec
cmp
and
imul
push
hlt
sbb
popa
test
call
mov
xchg
add
retf
and
sub
xchg
stos
or
inc
shl
sbb
jmp
stos
lea
jne
pop
aaa
inc
add
repz
xor
aas
out
out
icebp
pop
and
or
cs
into
inc
stc
dec
xor
xor
push
ret
xchg
jmp
dec
push
xchg
sub
fwait
cmp
add
ja
adc
stos
sbb
scas
test
fist
lock
dec
push
iret
mov
not
push
retf
cmp
in
sub
pop
push
dec
xchg
jl
hlt
cmp
mov
loop
cmp
xchg
mov
(bad)
mov
jo
aas
out
mov
out
in
call
push
xchg
and
mov
cmc
pop
sub
mov
cld
mov
daa
cmp
jl
jecxz
add
aas
rcl
jmp
cld
fmul
sti
sbb
sub
repz
inc
aad
mov
(bad)
adc
pop
mov
cmp
lds
jno
js
stos
sub
push
sbb
cmps
pusha
inc
fnstsw
xor
lods
pop
call
mov
cmp
push
lock
mov
add
mov
int
adc
sti
clc
loopne
jg
aaa
jo
les
add
sbb
adc
das
mov
xor
adc
fadd
add
inc
add
sub
cmp
jns
jg
sub
cmc
out
cli
gs
jecxz
or
mov
sub
push
push
sub
stc
lea
mov
push
(bad)
mov
cmps
mov
jb
fmul
jno
dec
cld
push
cmp
test
imul
sbb
rcl
loopne
jbe
lea
leave
idiv
push
mov
fldz
mov
cli
hlt
add
fs
sub
lods
call
stos
jecxz
movs
test
sub
jmp
adc
cmps
imul
pop
and
push
inc
mul
(bad)
cmp
data16
arpl
push
xor
cmp
retf
sbb
test
test
inc
push
push
in
and
stc
dec
aaa
push
mov
cs
and
xchg
loope
enter
mov
lock
jb
xor
hlt
inc
js
and
pop
push
cs
dec
or
ret
mov
inc
and
jae
out
sbb
fadd
scas
push
sti
aam
dec
fs
cld
xlat
pop
add
(bad)
or
nop
call
inc
and
jl
sub
aaa
fs
(bad)
push
inc
jae
aas
mov
shr
mov
lahf
add
outs
xor
shl
dec
push
mov
push
or
inc
into
add
sbb
sub
adc
jns
mov
aaa
mov
pop
int
shl
mov
je
cdq
loopne
lods
iret
jne
cdq
(bad)
mov
stos
sahf
shl
push
test
loop
data16
xchg
add
in
ds
outs
shr
aad
dec
clc
sar
cmp
inc
ja
or
fcom
imul
mov
and
cdq
mov
scas
ror
mov
dec
sub
pop
mov
out
push
cdq
ret
in
adc
xor
dec
cmp
cmps
cmp
push
vmovq
aam
mov
sub
pop
jbe
sbb
mov
pop
(bad)
sub
mov
(bad)
mov
adc
in
std
ret
mul
cld
iret
and
sahf
mov
cmovns
pop
xlat
ret
pushf
sub
div
xor
lds
push
jmp
dec
inc
cmp
dec
fiadd
(bad)
stc
cmp
fwait
adc
xchg
dec
cs
inc
ror
or
cs
cs
rcl
pop
mov
add
or
xor
leave
outs
cwde
or
loopne
adc
sbb
icebp
enter
ja
dec
and
pop
pop
push
cmps
inc
add
adc
xor
sar
pop
popf
jecxz
aas
inc
jg
mov
jp
std
imul
and
in
fs
xchg
lods
cmc
movs
and
iret
push
(bad)
ins
cmps
inc
push
dec
mov
xchg
je
or
mov
jno
stc
ins
out
pop
lods
sti
push
retf
or
daa
retf
mov
enter
addr16
je
lahf
test
add
rcl
lods
xchg
enter
sahf
push
aas
(bad)
push
add
sti
call
add
pusha
cmp
out
stos
pop
fsub
call
loope
push
mov
ss
ins
push
fmul
iret
popa
outs
nop
xchg
arpl
out
rol
out
les
dec
shr
xadd
sahf
mov
ja
lods
push
aaa
push
ret
test
push
mov
adc
retf
jge
dec
scas
test
mov
aas
xchg
inc
test
sub
jnp
popa
(bad)
hlt
xchg
ret
jae
fisub
ins
(bad)
jge
adc
mov
nop
test
(bad)
aad
mov
inc
adc
push
iret
(bad)
xor
shr
mov
xchg
push
jecxz
or
cld
jns
cs
hlt
das
adc
or
sbb
out
inc
into
repz
scas
scas
and
(bad)
mov
mov
xlat
mov
and
arpl
(bad)
push
or
push
test
cmps
div
cmc
fimul
(bad)
(bad)
ror
ss
nop
add
xchg
in
dec
adc
jb
xor
popa
lods
test
les
xchg
xchg
aas
mov
rcl
fist
xchg
and
add
das
or
popa
dec
mov
ret
(bad)
cmp
nop
mov
ficom
jnp
icebp
sub
lds
jbe
cmp
outs
mov
imul
aaa
pushf
xchg
cmp
clc
push
lea
inc
mov
cmp
aas
add
outs
sub
fadd
or
add
xchg
and
inc
mov
jp
xor
ss
shl
pop
add
add
pop
je
out
adc
inc
cmps
retf
(bad)
xor
pop
adc
mov
out
(bad)
and
out
sbb
nop
psllq
push
in
scas
(bad)
into
mov
rep
dec
push
scas
mov
jmp
push
adc
sub
fs
repz
push
dec
inc
add
outs
or
sbb
jbe
or
in
mov
push
lock
mov
or
cli
stos
mov
cmp
je
mov
lock
mov
pop
sub
ss
xor
bnd
sub
push
daa
lahf
mov
cmp
and
xchg
and
outs
imul
sbb
ins
xor
lock
popf
(bad)
xor
add
stos
mov
mov
jno
mov
add
fs
aaa
scas
mov
iret
cli
push
int
js
add
adc
daa
pop
sub
movs
xchg
inc
jne
pop
ins
jo
jl
sbb
push
(bad)
aad
dec
fisub
(bad)
sbb
mov
loop
lds
jmp
mov
xor
test
shl
jp
test
xor
and
mov
(bad)
mov
sar
mov
inc
lahf
sbb
push
dec
(bad)
in
pop
ja
add
push
dec
int3
ins
mov
jge
xchg
call
lods
ret
aam
pop
pop
cmp
and
cmp
stc
shl
cdq
call
mov
push
jge
xor
xor
out
sbb
xchg
enter
sahf
or
lea
aas
cdq
inc
cmp
das
loopne
mov
or
ret
ror
inc
test
push
popf
jg
std
retf
or
fs
nop
pop
outs
inc
pop
shl
fmul
jl
xor
or
loope
push
lock
mov
mov
stos
mov
not
cmp
xchg
xor
lock
add
mov
cmp
adc
loopne
pusha
pop
and
mov
fdiv
bnd
bound
mov
mov
push
sub
lock
fdivr
das
xor
or
pop
hlt
ja
and
dec
enter
enter
jecxz
mov
in
int3
xor
std
adc
sahf
jns
push
mov
adc
in
neg
pop
dec
sbb
mov
in
icebp
int
fadd
add
sbb
cmp
xor
cli
das
jl
dec
jb
mov
dec
sub
mov
fimul
(bad)
fbld
leave
xor
test
push
aas
xchg
sahf
cli
les
je
mov
sbb
jbe
loope
push
dec
cmp
lods
out
je
in
aas
gs
in
leave
loope
push
aad
jge
cmp
adc
lods
aad
mov
xchg
shl
mov
sbb
jle
lods
jne
mov
test
jp
stc
ss
rol
and
cmp
push
retf
push
ss
aaa
mov
rcl
and
test
xlat
xchg
cmp
fimul
retf
cmp
xchg
push
push
rol
xor
push
fs
movs
cmp
sub
push
iret
ffree
mov
inc
outs
out
test
xor
scas
fidivr
nop
jmp
adc
popa
sbb
push
push
add
ret
add
sbb
pop
jb
mov
adc
add
adc
push
pop
fdivp
inc
in
mov
xor
push
gs
mov
sub
mov
loope
jo
mov
call
dec
dec
(bad)
and
in
jg
push
xor
pop
(bad)
jle
push
dec
sub
ret
out
jmp
pop
push
jp
pop
push
ja
std
cwde
mov
pop
lds
sahf
fild
inc
xor
jmp
fdivr
sub
xor
jge
std
out
popw
les
sbb
jns
loope
hlt
or
dec
mov
test
push
xor
mov
push
(bad)
loopne
addr16
jmp
sbb
outs
or
(bad)
pushf
sbb
mov
mov
fbstp
(bad)
mov
ja
jae
popa
inc
sbb
cmp
jmp
and
add
push
in
xchg
pop
cmp
call
mov
lahf
add
add
movs
repz
nop
and
jg
sub
rcr
cwde
dec
jg
push
jo
push
ss
mov
(bad)
add
jl
das
scas
(bad)
pushf
inc
sbb
mov
loope
popf
push
jno
lods
push
cmp
ins
xor
mov
bound
clc
xor
ins
or
or
add
mov
mov
inc
scas
leave
adc
xor
scas
mov
mov
or
xchg
jg
sbb
dec
call
ror
paddq
test
push
in
ja
mov
or
dec
jb
xchg
xor
jmp
jnp
push
push
or
push
and
xor
sbb
fldenv
bnd
mov
xchg
adc
ror
retf
movs
shr
cmp
or
in
sbb
shr
push
mov
pop
or
pop
adc
movs
dec
mov
push
cmp
dec
dec
sub
inc
push
int3
mov
movs
and
stc
pushf
push
shl
pop
xor
pop
js
sbb
or
inc
dec
xchg
pop
int3
out
inc
jge
xchg
popf
retf
cmp
xor
in
push
cmp
inc
xor
fiadd
in
in
lods
add
add
push
jp
mov
cmp
inc
jo
leave
or
mov
repz
(bad)
fs
jmp
xchg
jmp
mov
push
or
sub
lock
add
pop
mov
fldenv
iret
cmps
dec
inc
jmp
sub
and
sub
hlt
neg
test
sti
pop
in
lahf
xchg
xor
repz
sahf
cmp
jp
mov
sub
jmp
inc
cld
cmp
(bad)
test
les
mov
ret
adc
or
mov
xchg
dec
sbb
stc
mov
je
inc
aam
aaa
cmp
and
adc
ret
and
sub
jmp
mov
fs
mov
out
dec
hlt
mov
mov
test
leave
ficomp
repz
test
and
mov
xchg
idiv
cmp
jp
mov
fsubrp
xor
or
mov
retf
push
idiv
mov
jp
test
out
mov
outs
fcom
out
movs
shl
ror
retf
jge
cmc
aam
ins
pop
jge
inc
jge
sbb
sbb
aam
loope
push
jmp
sub
push
test
in
ret
dec
mov
dec
dec
push
jmp
pop
scas
dec
scas
test
lock
mov
(bad)
cld
(bad)
repnz
arpl
int
into
fistp
sub
dec
cmp
add
movs
add
bound
xor
and
mov
jp
and
fist
push
inc
jmp
mov
fcmove
dec
cs
repz
mov
or
jnp
pop
loope
jge
aad
fbstp
sub
out
fcomp
adc
jno
sar
jge
loop
sbb
mov
pusha
loop
xchg
ret
or
inc
jo
ins
daa
pop
add
fidiv
scas
aam
hlt
sub
ret
add
add
test
ret
stc
jecxz
repz
iret
fist
inc
inc
xor
add
xchg
inc
jno
sbb
lds
adc
aaa
clc
xchg
pop
ss
shl
das
mov
stos
ins
mov
dec
xor
cli
adc
add
or
or
rcl
fsubrp
test
and
data16
cmp
push
xchg
adc
mov
or
dec
mov
mov
sbb
popa
fisubr
push
lahf
nop
cld
mov
sbb
in
dec
dec
stos
lods
dec
xchg
or
mov
fcomp
sub
lods
push
ror
out
pop
xor
pop
lods
jle
(bad)
sar
push
sbb
push
xlat
sbb
movs
outs
retf
out
sbb
dec
jbe
inc
inc
lahf
push
arpl
pusha
add
(bad)
leave
rcr
pop
push
(bad)
in
aam
push
imul
not
ret
daa
add
and
hlt
ins
or
inc
sbb
cli
xchg
pop
(bad)
and
stos
adc
test
(bad)
push
test
cmp
arpl
push
xchg
mov
repz
cdq
push
retf
sub
dec
xor
pop
call
xchg
or
cmp
fsubr
retf
and
and
xchg
ret
and
add
dec
(bad)
fild
jne
call
leave
ror
scas
mov
xchg
push
pusha
mov
adc
add
(bad)
pop
dec
mov
imul
pushf
sbb
mov
fwait
test
jp
ret
aas
push
cld
xor
fisttp
movs
push
sbb
clc
call
jnp
pop
movs
adc
(bad)
arpl
cdq
xchg
shr
jmp
mov
fsub
shl
jl
mov
inc
es
push
mov
imul
mov
sub
sub
jb
fsubr
es
mov
ret
lahf
pop
xor
add
int
leave
stos
les
ret
test
or
and
mov
mov
shl
int3
fadd
mov
push
fs
daa
in
or
or
out
fisubr
adc
dec
sub
idiv
and
jp
jns
or
mov
jg
jp
mov
mov
add
int
imul
cmp
test
(bad)
jb
and
add
dec
add
retf
push
jle
sub
sub
mov
jo
jge
mov
loope
mov
add
xor
bound
nop
mov
cmp
test
push
mov
push
add
scas
out
pusha
aam
xor
xchg
xchg
call
psrld
and
jb
cmp
adc
push
std
push
mov
mov
call
leave
mov
mov
pop
add
add
pop
call
sbb
mul
push
and
jne
dec
xor
scas
dec
cmp
sbb
mov
xchg
gs
retf
movs
lock
xor
neg
data16
int
rol
sbb
pop
test
outs
mov
sahf
movs
push
jmp
imul
push
inc
dec
jno
das
setge
(bad)
mov
in
ins
sti
push
out
mov
cmp
int3
outs
rol
(bad)
not
lods
pop
pop
push
(bad)
in
mov
out
(bad)
fst
scas
push
push
inc
sbb
mov
idiv
adc
pop
aam
or
test
(bad)
mov
xor
retf
retf
cmps
int
outs
repnz
imul
popa
ds
es
push
int
cld
sub
push
xchg
mov
imul
pop
aas
jg
in
add
int3
lods
in
leave
or
jne
call
push
cld
aas
mov
adc
fdivp
fsub
div
call
jmp
aas
jge
clc
das
repnz
fnsave
add
dec
out
scas
push
test
mov
cdq
adc
std
sub
adc
xor
(bad)
adc
dec
push
pop
jmp
push
mov
cmp
jmp
(bad)
cmp
mov
popa
in
aad
dec
lea
mov
xor
push
shr
dec
int
ret
cmp
or
jle
data16
mov
xor
pop
mov
xor
inc
popa
adc
test
cmp
mov
cli
hlt
(bad)
into
and
fdiv
xor
jns
xlat
in
enter
in
ss
mov
popa
ret
xor
mov
out
inc
cmps
scas
outs
jmp
mov
fnstenv
mov
stc
outs
ss
pop
cli
pop
sbb
stc
or
pop
cmp
or
xor
popa
fwait
xchg
fisubr
popf
inc
add
bnd
imul
call
std
scas
push
sub
dec
out
iret
xor
test
push
aam
outs
nop
xchg
popf
aas
push
(bad)
xlat
dec
rol
repz
int3
jmp
(bad)
mov
mov
and
sahf
les
sub
push
loop
shl
mov
fwait
addr16
test
inc
push
out
mov
jecxz
ds
cmp
out
push
lods
mov
daa
sar
in
les
xor
jle
enter
xchg
imul
sub
cmp
dec
shr
aad
lahf
or
scas
ins
test
int
adc
sahf
pop
dec
div
cmp
jns
push
shl
nop
(bad)
sbb
in
pop
es
adc
rcr
add
inc
cld
push
xor
cmp
xor
shl
gs
xchg
and
cmps
jae
lock
jbe
bound
and
jecxz
jns
sub
fst
test
retf
cmps
ds
or
jecxz
or
(bad)
push
(bad)
int3
out
dec
and
xchg
xchg
imul
and
or
scas
inc
test
xchg
mov
sub
jno
push
sbb
retf
rcl
and
xchg
push
mov
jp
daa
xchg
mov
cmps
cmp
lahf
mov
pop
push
mov
xor
fistp
test
xor
cwde
and
fs
stc
jmp
pop
test
scas
and
in
or
sub
cmp
add
or
dec
mov
fdivrp
call
std
push
lock
repnz
cdq
cmp
call
pop
out
pop
repnz
xchg
mov
fimul
pop
sub
or
mov
mov
cs
mov
push
add
in
mov
(bad)
jb
and
iret
loop
add
(bad)
xchg
jmp
dec
gs
cmp
fisub
cmp
dec
hlt
ins
sub
pop
int
test
mov
mov
test
aam
lahf
gs
(bad)
icebp
cdq
add
das
and
sub
dec
push
and
push
push
cli
es
jp
arpl
push
xor
ret
rcr
into
cmp
jmp
stc
hlt
pop
xor
pop
cmp
cmc
fwait
pop
inc
out
or
mov
sbb
pushf
pop
jno
adc
repz
cs
jmp
stos
ja
mov
sub
pop
iret
jb
loop
aas
mov
mov
mov
out
mov
enter
fcomp
pop
dec
leave
xchg
rcl
inc
mov
fcomi
rol
pushf
push
loop
fdiv
popa
scas
es
enter
adc
ret
jno
sahf
mov
fmul
imul
gs
dec
xor
in
jns
inc
xchg
pop
adc
push
jg
cmc
sub
cmp
xor
dec
pop
xor
imul
push
repz
dec
add
cmp
fild
inc
jns
xchg
nop
push
jg
daa
cmp
push
mov
test
pop
xchg
shl
pop
pop
mov
scas
or
retf
push
pop
loope
cmc
not
xlat
icebp
sbb
inc
inc
lock
push
sub
pop
call
icebp
fldcw
adc
pop
and
lea
add
add
fcomip
int
adc
add
hlt
dec
rol
dec
add
jae
rcl
retf
xchg
dec
or
jmp
cwde
scas
scas
test
mov
js
xor
xchg
push
xchg
add
loopne
and
jb
sub
int
cmp
or
or
into
mov
xor
jecxz
xchg
cld
in
dec
dec
xchg
(bad)
and
xchg
push
adc
mov
mul
and
cmps
ds
test
(bad)
test
sub
jae
adc
cli
sar
ret
dec
adc
fild
jl
lods
imul
call
or
pop
mov
dec
dec
adc
sbb
sbb
fdiv
(bad)
(bad)
das
bound
lahf
inc
mov
inc
mov
fwait
mov
cwde
enter
mov
and
mov
fidivr
cmp
sbb
pushf
sub
adc
sbb
mov
jp
pushf
or
xor
repz
add
cmps
sub
add
xor
mov
iret
jb
xor
or
shl
imul
adc
add
int
loope
retf
cmp
loop
push
movs
(bad)
repz
pop
rep
mov
mov
inc
lock
js
mov
in
repz
movs
dec
dec
lahf
xlat
not
push
push
mov
shl
or
mov
cwde
out
jnp
xor
sbb
aam
hlt
or
xor
(bad)
cld
icebp
fs
cmp
hlt
loope
out
enter
out
xor
xchg
jmp
mov
mov
add
nop
cwde
add
dec
data16
fldcw
or
movs
and
adc
in
loop
cmp
cmp
std
add
ret
xchg
std
jl
cmp
push
adc
fsubr
dec
je
lock
in
cmp
dec
inc
cmps
dec
shl
aaa
fwait
mov
mov
aas
arpl
pushf
fwait
sbb
cld
xor
add
mov
rcl
aad
or
push
sub
mov
sub
xor
push
call
inc
push
jmp
imul
mov
icebp
shr
dec
out
mov
sub
jb
inc
cmp
sar
inc
or
aad
jbe
pop
lea
mov
clc
pushf
addr16
mov
mov
aad
jnp
dec
mov
sub
ds
jae
shr
jns
imul
scas
mov
pop
xchg
jne
clc
imul
rcl
loop
dec
push
(bad)
jae
push
mov
les
sub
or
js
in
and
dec
lock
stos
inc
sti
test
jmp
push
hlt
aad
sbb
xchg
dec
in
les
push
add
push
add
mov
aam
mov
or
and
dec
retf
jne
jl
out
repnz
lahf
jle
push
mov
cmp
ret
sbb
sbb
popf
fild
sbb
test
stos
dec
das
ret
xlat
jmp
xchg
scas
stc
jmp
jns
(bad)
test
iret
(bad)
push
dec
push
scas
mov
es
and
cmp
retf
cmp
cdq
cmps
inc
push
dec
aas
retf
inc
adc
xchg
aaa
(bad)
xchg
clc
mov
fldz
lds
add
mov
jae
inc
mov
dec
inc
or
ror
jb
das
adc
pop
xchg
retf
daa
repz
pop
cmp
test
dec
sub
sub
scas
add
sub
(bad)
pop
jno
sub
dec
out
jne
das
dec
cmps
ss
pop
sub
adc
test
mov
jl
cmpps
sub
std
out
sub
xlat
inc
in
loop
(bad)
sub
imul
test
mov
vcvtsi2sd
rol
or
mov
int
and
xchg
push
mov
ret
sub
(bad)
es
xchg
les
retf
inc
test
add
cmp
jg
das
sahf
stos
or
iret
mov
sbb
aad
fld
mov
out
(bad)
jg
pop
in
sub
lea
pop
push
rol
cmp
mul
sar
inc
push
sub
push
rcl
xlat
mov
(bad)
scas
mov
dec
mov
jb
push
fadd
and
sbb
(bad)
loopne
pusha
add
jo
test
in
mov
or
pop
cmp
mov
cld
pop
jb
fist
neg
mov
std
ja
add
je
cld
test
jmp
fbstp
jmp
cmp
int3
jl
push
nop
inc
xchg
sti
sti
ss
cmp
out
pop
sbb
test
enter
loope
xchg
jle
js
push
xor
jbe
into
(bad)
add
jmp
mov
sbb
dec
repz
loop
nop
push
mov
jno
das
and
push
sub
fisub
sbb
xchg
push
mov
fsub
xor
gs
mov
les
(bad)
or
push
clc
pop
adc
cmp
mov
dec
mov
div
xor
mov
sbb
ins
ins
push
inc
into
inc
mov
dec
test
mov
push
or
lods
je
pop
js
addr16
adc
retf
and
aam
push
imul
jl
push
aas
jmp
mov
pop
xchg
ss
cld
xchg
jge
or
call
push
add
add
fld
stos
pop
mov
ds
fisub
pop
ud1
push
loopne
mov
inc
movs
imul
and
pop
mov
out
gs
adc
cmps
pop
sahf
gs
(bad)
adc
sub
add
xor
ror
fdivr
xchg
ins
cld
inc
mov
or
shr
leave
pop
sub
mov
inc
jb
xor
and
and
movs
inc
mov
adc
cdq
shl
jmp
mov
popa
or
or
inc
lock
mov
or
repz
mov
mov
xor
xor
add
cwde
pop
imul
lods
ret
xor
add
hlt
xchg
repz
sbb
push
push
xchg
aas
stc
mov
xchg
xchg
xchg
mov
fwait
in
jge
xor
cmp
mov
neg
cli
fnsave
mov
push
in
push
mov
imul
cld
scas
sbb
jno
lea
mov
dec
jns
jecxz
mov
sbb
sar
shl
mov
jo
icebp
and
aam
mov
dec
add
outs
push
(bad)
jae
cld
inc
mov
xor
rcl
stos
lds
jge
jp
pop
push
xchg
jns
adc
cmp
cwde
xor
mov
ret
mov
imul
mov
shl
or
stc
dec
mov
jmp
or
mov
nop
test
out
sbb
or
jmp
mov
les
dec
(bad)
dec
out
and
loopne
add
cwde
popa
fs
fsubr
sbb
pop
and
xor
mov
sbb
cmp
imul
mov
add
mov
pop
xchg
movs
cmp
in
xchg
cmp
(bad)
jns
movs
mov
sbb
xchg
add
lods
xor
pop
ds
inc
xlat
out
pop
pop
pop
jbe
jb
fbld
cdq
mov
into
mov
xor
sub
or
pusha
test
lods
mov
das
pop
inc
inc
lods
loopne
sbb
test
pop
dec
push
add
cwde
fs
xor
mov
test
mov
add
xor
aam
adc
daa
adc
adc
push
fst
jle
shl
std
dec
enter
jno
pop
iret
dec
pop
xor
cs
pop
out
lahf
(bad)
popa
xchg
daa
inc
ret
sbb
xchg
std
sbb
push
cmp
lock
out
pop
inc
inc
or
in
dec
and
fist
push
mov
cmp
fsub
and
daa
mov
stos
cmp
jge
movs
cdq
xchg
sahf
aam
sbb
jbe
test
adc
adc
xor
mov
movs
aad
mov
daa
icebp
pop
adc
data16
mov
xor
and
mov
cmp
add
imul
lods
lea
and
js
adc
jmp
and
push
in
aam
xchg
mov
pcmpgtw
fisttp
into
sbb
lahf
inc
mov
push
unpckhps
fild
cwde
mov
cmps
sbb
push
adc
lods
in
ja
bound
pop
dec
mov
jbe
pop
cli
and
cmp
dec
mov
inc
(bad)
or
sub
sbb
add
in
call
pop
push
lea
in
mov
xchg
in
xchg
shl
ins
mov
xor
push
dec
js
mov
xchg
mov
mov
mov
mov
sbb
mov
push
cwde
in
xchg
xlat
ins
sbb
inc
push
(bad)
mov
pop
mov
lods
xchg
add
aaa
enter
lods
sbb
add
call
movs
push
fcomp
out
es
loopne
mov
or
xor
xor
repz
cmp
push
bound
pop
clc
ins
es
cmp
(bad)
(bad)
imul
xor
sbb
inc
fidiv
cmp
in
mov
ret
lahf
xor
lock
leave
aaa
mov
dec
loop
clc
loope
pop
pop
adc
jmp
inc
cmp
jbe
bound
shl
loopne
xor
sub
retf
jo
ror
cdq
adc
mov
scas
sub
xchg
lahf
xor
fdivr
iret
cmp
or
fidiv
aad
out
icebp
inc
movs
adc
add
retf
sub
cld
jecxz
lods
call
je
pop
xchg
push
rol
jbe
mov
movs
or
mov
xchg
dec
add
mov
and
test
int3
adc
jno
sbb
mov
fdivr
cmps
ret
jne
shl
cli
sti
jbe
mov
stc
push
cdq
cli
out
push
les
cmp
cli
or
mov
sub
ss
mov
mov
sub
add
cwde
or
sti
lahf
mov
xor
pop
js
inc
outs
sub
(bad)
inc
dec
js
xor
jg
pop
sub
inc
dec
cs
pop
scas
in
mov
sbb
lock
xor
stos
jmp
not
dec
cmps
test
nop
cmp
sbb
sbb
gs
std
cwde
call
in
scas
call
cdq
add
scas
sahf
jb
jg
in
and
cmc
lds
inc
sbb
scas
movs
and
pop
movs
clc
rcr
lds
rcr
sub
sbb
mov
adc
lods
ret
stos
das
jb
sbb
lea
mov
repnz
and
(bad)
ins
sbb
sti
and
es
sub
mov
into
loopne
loope
shr
call
mov
and
fmul
outs
cmp
jle
or
lds
sub
outs
or
addr16
daa
ror
add
xor
push
shr
lods
mov
xor
(bad)
leave
dec
leave
adc
sbb
pushf
sub
jo
ins
push
mov
adc
mov
test
popa
fisttp
clc
nop
adc
shr
cmp
into
jnp
or
sbb
enter
add
pop
ss
imul
cwde
scas
add
pop
mov
mov
mov
and
inc
out
adc
retf
xor
pop
fadd
push
adc
shl
pop
xchg
test
dec
cs
inc
loope
sub
sub
xor
repz
or
and
pop
fiadd
cmp
out
cmp
mov
or
mov
inc
mov
jl
jbe
ja
retf
jmp
add
in
lods
(bad)
push
jnp
sub
adc
repnz
dec
sbb
adc
xchg
or
(bad)
clc
repz
dec
cli
shl
in
repnz
test
(bad)
mov
jg
imul
(bad)
std
adc
je
les
lods
sbb
fnstenv
pop
sub
daa
push
adc
dec
repnz
out
or
neg
jge
popa
call
enter
push
es
loope
fnsave
scas
xchg
inc
je
popf
push
stos
addr16
mov
push
out
jl
xchg
xchg
or
jmp
in
fucom
ja
jmp
xor
mov
cwde
pop
xchg
scas
stos
out
fist
daa
mov
mov
xor
repnz
inc
out
punpckhdq
dec
push
in
sub
and
inc
lahf
sub
push
xchg
inc
push
loope
and
sbb
mov
jns
neg
mov
push
clc
das
push
cmp
mov
xor
(bad)
pop
and
mov
mov
lock
sbb
out
sub
cmps
push
je
pop
mov
(bad)
dec
jmp
jmp
loope
and
leave
mov
sti
sbb
inc
mov
ret
mov
lods
imul
pop
repz
cmp
add
int
mov
pop
mov
or
bound
sbb
bound
jo
ds
xchg
(bad)
rcl
call
mov
push
pop
jl
scas
sbb
inc
or
add
pop
(bad)
cmps
mov
hlt
cmp
mov
sbb
ins
jle
dec
xor
mov
jecxz
sbb
das
mov
ins
xchg
or
push
movs
test
scas
xor
popf
mov
push
shr
fdiv
add
mov
xor
jne
enter
jecxz
adc
push
outs
xchg
or
sti
fwait
inc
cli
stc
ins
pop
jno
push
outs
fidivr
cmp
add
or
dec
cdq
sub
jmp
push
fwait
adc
adc
into
mov
xchg
push
jae
jp
imul
(bad)
clc
mov
je
lea
cmps
add
cs
mov
mov
ins
daa
aam
xchg
or
mov
out
lock
sbb
jno
mov
ja
jb
sub
jecxz
(bad)
mov
mov
push
jmp
sti
and
fstp
leave
jno
daa
dec
dec
not
and
dec
push
loop
std
mov
pop
adc
dec
jns
add
pop
int
pop
mov
enter
(bad)
gs
loope
jbe
(bad)
movs
fdiv
jmp
dec
movs
add
stos
(bad)
lock
sbb
call
add
cmps
jp
push
scas
cmp
lock
add
mov
in
pop
lods
xor
int
cli
dec
mov
mov
rcr
fld
lods
dec
inc
lea
lods
fadd
rol
inc
dec
adc
mov
mov
ins
push
jns
push
xchg
dec
xchg
in
int3
in
xor
mov
push
sub
mov
adc
inc
xchg
arpl
cli
fmul
dec
jae
(bad)
xchg
jo
or
pusha
inc
add
sub
leave
mov
cli
shl
pop
or
shr
add
lahf
nop
div
xchg
js
repnz
xchg
mov
dec
and
mov
loop
and
xchg
push
mov
pop
mov
inc
sti
ror
aaa
jmp
into
cmps
jecxz
shr
fs
cdq
adc
test
push
sti
scas
push
retf
lds
call
nop
fisttp
test
xlat
fwait
loop
and
test
cld
cmc
mov
test
mov
loope
jnp
arpl
and
lods
inc
mov
push
mov
dec
and
lds
cmp
mov
ins
shr
add
ret
cmp
fistp
pop
push
push
dec
and
mov
dec
pop
mov
jno
lods
dec
adc
repnz
cmps
or
or
retf
xchg
(bad)
out
lods
(bad)
dec
iret
and
pop
xor
jae
sub
clc
inc
mov
mov
mov
mov
and
loopne
jo
pop
int3
jp
cmps
pop
icebp
out
and
pop
mov
inc
pop
(bad)
jmp
jb
sbb
push
jmp
jg
test
mov
sub
and
mov
jno
sbb
in
mov
call
(bad)
jmp
into
sbb
adc
mov
push
aas
mov
xor
and
pop
aas
out
popf
ss
xchg
lahf
mov
mov
sub
sub
jbe
js
xchg
mov
mov
xchg
jmp
fs
shl
cld
(bad)
test
mov
xchg
pushf
dec
pop
xor
cmp
mov
lods
in
sbb
xchg
fst
fisttp
inc
fcmovnu
and
scas
add
arpl
mov
cmp
retf
mov
cmps
mov
or
mov
xlat
jb
scas
or
(bad)
sub
or
xor
add
out
add
pop
stc
jmp
popa
push
es
inc
ins
or
cli
mov
in
or
xor
nop
inc
and
test
mov
cmps
retf
cld
mov
test
mov
mov
jle
sar
mov
rcr
adc
iret
popf
xchg
sub
fcomp
inc
xor
sub
xchg
je
lds
pop
xor
jo
pop
enter
mov
mov
or
inc
xor
lea
dec
sub
jo
jo
and
push
mov
repnz
fwait
arpl
xor
mov
pop
jo
add
xor
or
(bad)
fcomp
cmc
imul
push
pusha
push
ds
inc
dec
enter
test
cli
add
in
(bad)
or
stc
adc
jno
daa
xor
fs
lock
pop
(bad)
adc
sbb
pop
outs
add
fidivr
xbegin
push
dec
imul
cmps
std
sbb
aaa
in
mov
jmp
loope
jno
sbb
mov
and
jle
and
enter
iret
sub
cmp
xchg
pushf
xchg
mov
sub
pushf
jbe
sub
jns
test
adc
xchg
xor
sub
jecxz
inc
cmps
push
aas
fcmovnu
fcom
mov
rol
(bad)
mov
jecxz
daa
pop
repnz
mov
mov
xchg
cmp
jmp
nop
fld
xor
push
jle
rol
xchg
mov
popf
or
es
push
sub
outs
(bad)
sub
adc
cli
mov
retf
pop
clc
leave
je
dec
inc
push
repz
sbb
or
mov
jmp
das
sbb
in
ins
je
fisttp
int3
cmps
adc
jg
adc
mov
rol
sbb
inc
pop
rcr
add
mov
sub
out
retf
aam
call
loopne
adc
push
adc
pop
out
js
enter
(bad)
ret
adc
or
jae
ret
sti
popf
fmul
mov
dec
je
adc
cmps
pop
imul
je
lods
dec
ins
push
dec
test
xchg
or
ss
stos
dec
int3
dec
push
ror
sar
lock
in
(bad)
(bad)
ror
fild
jp
adc
div
xor
fcmove
hlt
sub
cld
lahf
cld
jl
and
fisub
mov
lea
cmps
ret
xchg
ins
dec
pop
jmp
jae
movs
inc
push
iret
js
mov
xor
pop
mov
ins
jmp
sbb
jns
push
mov
inc
pop
and
jmp
idiv
inc
hlt
xor
xchg
mov
sti
push
sub
inc
mov
xchg
push
lods
clc
loopne
jg
int
mov
retf
cld
(bad)
test
movs
and
or
mov
frstor
dec
daa
sub
xor
inc
jns
ror
xchg
inc
fdiv
cmp
inc
push
(bad)
sub
xchg
mov
lea
mov
leave
pushf
aaa
les
test
leave
les
int3
pop
fwait
movs
dec
xor
push
out
fcomp
in
xor
rol
push
xor
mov
pop
mov
and
xor
jecxz
sti
push
into
jae
in
(bad)
scas
enterw
mov
pop
mov
retf
mov
mov
not
push
cmp
cwde
sbb
out
dec
sbb
or
cmp
test
loope
adc
cmp
gs
mov
(bad)
ins
add
mov
js
sub
push
shl
or
xchg
sub
int
jbe
test
and
mov
imul
push
pop
xor
fild
push
jb
mov
jno
outs
xor
inc
mov
add
jne
out
aaa
das
push
adc
jmp
push
std
ins
adc
mov
add
dec
(bad)
popa
mov
adc
xor
jl
mov
mov
in
cmp
test
ins
adc
clc
aas
mov
pop
jp
rol
jne
aas
into
(bad)
lock
es
jg
mov
jmp
retf
and
mov
or
mov
dec
inc
xchg
pop
adc
xor
add
jmp
out
cmc
test
repnz
jne
or
(bad)
mov
and
push
mov
fistp
sbb
out
push
push
push
jns
in
push
mov
sub
mov
add
outs
jge
cli
icebp
cld
or
in
dec
cmp
sbb
jno
retf
arpl
adc
push
lahf
mov
mov
stos
jge
test
ret
cmp
outs
mul
sub
pop
repnz
shl
cwde
jmp
adc
sbb
arpl
lahf
push
cmps
sbb
xlat
pop
push
sbb
xlat
addr16
xor
into
addr16
or
mov
dec
mov
js
cmp
test
loop
iret
enter
sub
adc
adc
and
pop
mov
inc
mov
shl
mov
pop
dec
inc
push
push
(bad)
aad
inc
mov
inc
mov
clc
rol
jmp
aam
std
pop
cld
mov
xchg
ins
rol
and
cmc
cmp
aas
aad
iret
xchg
dec
xor
enter
jge
daa
cdq
and
daa
in
mov
ins
out
das
and
sub
adc
(bad)
fisttp
push
mov
(bad)
into
mov
xor
bound
pop
sti
mov
cs
jmp
inc
ror
stc
inc
out
sub
xor
and
inc
push
test
outs
sub
mov
mov
iret
mov
sbb
hlt
imul
mov
es
xlat
ss
cld
adc
(bad)
mov
arpl
rol
mov
add
add
js
aad
stc
xchg
in
sub
fidivr
aaa
(bad)
mov
jno
push
ror
adc
jl
sahf
mov
mov
retf
push
repnz
mov
mov
shl
ficom
aaa
pop
pushf
mov
test
pushf
jge
scas
push
hlt
sbb
ja
(bad)
outs
mov
stos
mov
cwde
xlat
xchg
stos
mul
stos
jecxz
ror
loopne
push
pop
rol
jp
adc
mov
gs
xor
retf
sub
div
(bad)
xchg
sub
lods
std
js
dec
sar
cmp
or
aaa
(bad)
nop
push
inc
add
dec
mov
pop
int
cmp
xchg
call
push
pop
shl
push
pop
je
call
push
or
push
push
inc
sti
pop
aas
add
adc
sbb
scas
sti
test
mov
lods
adc
jge
push
sbb
in
enter
loope
push
shl
jl
push
sbb
sub
sbb
adc
cld
sbb
leave
push
sbb
push
jmp
or
dec
xchg
push
dec
call
outs
pop
popf
mov
(bad)
mov
pop
imul
fbld
test
adc
inc
or
loope
clc
push
jbe
cmp
in
in
xor
out
fisub
jbe
add
pop
fcomp
lods
dec
ds
adc
jle
sub
ins
gs
sahf
sbb
or
(bad)
icebp
rcr
or
jmp
mov
mov
adc
cmp
inc
pop
lock
ins
push
xchg
int3
mov
ret
movs
mov
mov
add
mov
cmp
gs
dec
cwde
mov
adc
mov
in
and
idiv
jae
xchg
dec
sbb
sub
loope
xchg
icebp
sub
outs
adc
cmp
cdq
jno
jge
stos
push
hlt
cmp
(bad)
pop
inc
out
int
dec
mov
fistp
popa
out
es
pop
(bad)
enter
jb
aam
mov
cmp
repnz
stos
inc
call
sbb
aam
rol
dec
and
jge
(bad)
icebp
sbb
test
inc
jb
cli
in
ins
shl
scas
icebp
test
cmp
adc
xchg
dec
jge
jle
sar
mov
jmp
jmp
mov
xchg
cwde
les
and
mov
stos
aad
xor
dec
cmp
jb
jl
movs
inc
cmp
jnp
cmp
fld
(bad)
(bad)
mov
pop
loop
dec
mov
aam
in
fstp
addr16
sub
test
sbb
in
jnp
lods
call
mov
rol
enter
mov
cmp
das
lods
vpaddusb
dec
(bad)
dec
xchg
ffreep
shl
movs
cdq
idiv
jns
mov
es
test
adc
add
and
xor
jno
xor
outs
xchg
dec
inc
popf
lock
inc
xor
add
mov
mov
mov
mov
jne
sti
in
(bad)
popw
add
push
lock
imul
and
sbb
inc
pusha
mov
pop
clc
jmp
fnsave
add
jge
stos
ja
rcr
and
or
arpl
cwde
mov
fld
sbb
movs
ja
call
out
sbb
lahf
jne
push
push
mov
rol
push
mov
call
add
addr16
dec
shr
imul
cmp
repz
sbb
lods
ficom
mov
ret
dec
retf
imul
jo
mov
fstp
or
adc
xor
jmp
dec
inc
cld
or
inc
jle
jle
retf
dec
bound
push
out
sbb
inc
mov
aam
xor
gs
inc
sti
push
sahf
in
pop
dec
mov
cmp
jns
das
popa
fadd
test
out
mov
dec
sti
loopne
retf
addr16
mov
mov
cs
or
cmp
jp
call
(bad)
cmp
clc
sub
sbb
mov
mov
jmp
pop
sub
shr
sub
jbe
pop
vmread
mov
iret
pop
shl
jl
jo
mov
retf
jbe
xor
fstp
jne
in
mov
mov
fidiv
stos
pop
loopne
adc
or
pop
(bad)
mov
call
(bad)
(bad)
push
lods
pop
xchg
pop
bound
das
mov
enter
sbb
sub
xlat
add
xor
mov
in
retf
sbb
mov
inc
dec
mov
xlat
pop
inc
mov
das
pop
push
pop
out
pushf
push
and
imul
mov
adc
sbb
leave
rol
xor
rep
int
dec
add
in
inc
inc
lods
sbb
pop
dec
nop
rol
repnz
mov
enter
(bad)
leave
inc
mov
inc
sar
test
sahf
fist
and
jecxz
inc
out
or
cmp
test
(bad)
imul
sbb
mov
jb
pusha
lahf
dec
pop
sbb
test
lea
inc
xchg
mov
or
mov
pusha
sbb
push
and
fsub
or
add
push
out
dec
dec
mov
in
aam
mov
or
or
and
cmp
je
dec
fcomp
adc
sub
aas
or
sbb
inc
dec
daa
jns
cmp
int
cdq
mov
mov
adc
imul
nop
dec
dec
add
clc
pushf
test
xor
popf
sahf
cs
adc
push
stos
lock
mov
popa
pop
ret
scas
jmp
jl
ins
call
test
inc
lds
int
jb
lods
outs
and
add
or
jle
xor
xor
loopne
fisub
cwde
cmps
out
cmp
imul
jp
cmp
mov
pop
inc
popa
pop
pushf
lods
sbb
call
das
add
jnp
jg
jne
mov
add
loopne
xor
jl
dec
ins
xchg
rcr
add
cmp
xchg
pop
sub
xor
or
cmp
cmp
or
push
mov
fnstenv
in
sahf
ret
ins
pop
fs
cmp
mov
(bad)
retf
add
dec
mov
scas
outs
inc
jmp
stos
or
dec
aam
es
jp
mov
lahf
pop
sbb
in
mov
shl
(bad)
aas
or
jmp
jmp
stc
in
xor
and
lock
sbb
das
dec
loopne
dec
je
aaa
adc
outs
cmp
ja
sar
cli
in
outs
daa
xchg
sub
adc
pop
jns
shl
out
mov
jae
or
stc
cmp
nop
aad
jg
(bad)
out
lods
cmp
js
shrd
ds
xor
out
sbb
jecxz
dec
add
lods
sbb
or
clc
add
or
ins
adc
xor
nop
out
stc
arpl
adc
ror
mov
jp
add
pop
push
xchg
stc
rcr
sub
mov
retf
push
jl
mov
xchg
or
or
or
dec
add
jl
inc
stc
jecxz
repnz
sbb
loopne
jp
jne
push
movs
pop
xor
(bad)
adc
aaa
dec
aas
push
int3
popf
mov
jnp
leave
xchg
out
(bad)
inc
scas
and
fcom
repz
jmp
sub
(bad)
dec
iret
cmp
or
jmp
stos
into
cli
mov
xchg
pop
push
ret
mov
inc
mov
or
xchg
mov
xor
fs
aam
adc
cwde
imul
push
sti
add
movs
xchg
push
adc
cli
jle
push
jle
and
push
jno
mov
into
jp
loop
add
movs
dec
jae
xor
outs
hlt
dec
stc
test
pushf
(bad)
retf
cld
add
mov
cmp
movs
stc
mov
std
aam
aas
arpl
retf
dec
out
iret
out
out
shl
jg
cmp
or
cld
dec
mov
ss
pop
into
shl
test
jns
call
daa
cmc
xchg
cmc
in
(bad)
sub
outs
add
jne
fcom
fwait
nop
jg
mov
pop
jne
xor
sub
mov
add
(bad)
(bad)
push
movs
outs
mov
mov
sbb
out
addr16
dec
aaa
and
les
ja
mov
fidiv
stos
std
push
arpl
push
stos
inc
push
(bad)
jecxz
ds
pop
scas
sub
ins
call
pop
aad
hlt
sub
mov
and
dec
and
dec
ins
sub
fimul
repz
sbb
adc
jno
sub
cmp
rcl
sub
(bad)
fld
mov
outs
ficomp
jbe
int
cs
scas
or
sbb
movs
scas
mul
js
jle
jno
stc
repnz
popa
pop
add
es
jae
cwde
in
lods
sbb
test
out
cmps
add
fild
ins
mov
frndint
add
inc
(bad)
ja
js
cs
jbe
adc
fst
xor
cmps
ds
es
dec
imul
jmp
push
lods
outs
in
loopne
loope
sub
icebp
test
xchg
cdq
sar
mov
cli
imul
pcmpeqb
popa
loope
mov
push
out
push
fs
cwde
shl
push
cld
ret
gs
imul
fidiv
movs
retf
adc
in
sbb
mov
scas
pop
mov
adc
cs
fdivr
xor
mov
adc
loopne
loope
mov
dec
jle
punpckhbw
jb
pop
push
sub
sti
into
jno
dec
mov
mov
into
cld
inc
bound
fistp
cmp
sar
in
pop
mov
clc
repz
add
push
dec
shl
ins
or
ror
jl
movs
push
in
xor
push
inc
addr16
not
dec
imul
mov
pop
cdq
lods
rcl
or
mov
xor
xlat
jmp
mul
mov
or
mov
push
add
xchg
xor
xor
jb
or
call
cmp
pop
imul
cmp
into
call
jg
(bad)
rcr
pop
mov
(bad)
xor
pop
inc
or
xlat
(bad)
pop
xchg
pop
bound
das
mov
std
dec
push
gs
arpl
call
jae
jge
inc
or
xor
dec
mov
iret
inc
sub
add
cmps
and
push
dec
xchg
push
jg
pop
jl
xchg
jecxz
pop
jge
fs
push
jns
not
jae
addr16
dec
into
xor
jae
rcr
int
pushf
lahf
push
and
adc
aam
xor
or
xchg
push
ins
add
and
test
call
sti
in
jbe
sub
and
in
sub
add
mov
ficomp
push
xchg
mov
jmp
jmp
addr16
dec
aaa
fisub
and
cmp
inc
dec
loop
adc
(bad)
das
lock
bound
sysret
mov
xor
xor
pusha
retf
jae
add
cmp
jne
mov
xlat
sub
jl
fsubp
jl
cwde
or
sbb
mov
inc
xor
cmp
xchg
mov
stos
jp
or
test
jmp
xchg
xchg
push
xchg
xchg
adc
pop
mov
jg
cmp
es
cmps
into
cmps
add
fst
std
out
jae
jp
sub
lsl
push
aas
sbb
aaa
inc
sub
xor
int3
dec
jp
jmp
into
inc
mov
sbb
(bad)
sub
push
dec
jae
fld
mov
stos
inc
in
mov
(bad)
sbb
cdq
cmp
cmp
cld
xchg
retf
scas
icebp
mov
ror
or
icebp
ror
pop
and
dec
cdq
(bad)
mov
inc
sub
enter
stc
fwait
or
shl
push
xor
adc
mov
xchg
not
push
(bad)
sbb
xchg
mov
mov
push
aad
mov
pop
add
mov
sub
mov
adc
and
xor
es
pop
sbb
mov
cmps
inc
(bad)
out
inc
pop
sahf
ret
(bad)
std
retf
jne
pop
jecxz
mov
mov
repz
mov
dec
sti
mov
push
cs
jo
mov
sbb
xor
int3
xor
sahf
jg
and
and
test
jecxz
add
bound
mov
jae
ss
add
inc
jns
sub
inc
xlat
repz
cmps
jle
test
ficom
int3
cmp
clc
in
or
mov
mov
or
push
lea
push
push
fidivr
aad
(bad)
fimul
jle
repz
add
mov
push
int3
scas
rol
js
lahf
push
stos
stos
sub
lods
popfw
cmp
test
pop
outs
aas
adc
aaa
cmp
lods
jno
fidivr
push
cwde
or
add
daa
nop
sbb
cmp
loop
jb
mov
in
ss
retf
sub
xor
jle
dec
xor
or
or
jb
jg
in
mov
loop
sbb
mov
in
jp
sub
daa
ja
mov
inc
les
dec
add
mov
jne
mov
hlt
xor
cmps
sbb
pop
loope
enter
adc
mov
sbb
enter
mov
mov
or
cld
std
inc
mov
cmc
pop
jne
outs
daa
mov
adc
sbb
or
jnp
mov
adc
test
ror
into
mov
out
cmp
push
mov
imul
mov
in
push
or
dec
jbe
pop
pop
sub
cmp
lahf
sub
and
and
call
repnz
int
ds
or
or
and
(bad)
mov
adc
not
adc
and
out
pop
pop
imul
and
retf
arpl
mov
or
mov
adc
mov
push
jnp
inc
out
cmp
cmp
in
jo
test
mov
mov
add
mov
xor
pop
push
pop
iret
outs
(bad)
idiv
fdiv
dec
test
lods
push
movs
cld
aas
inc
mov
jo
sub
lea
mov
add
xchg
sbb
enter
scas
dec
xchg
dec
and
add
push
xchg
mov
idiv
or
ror
(bad)
cmp
push
jp
(bad)
call
ss
inc
mov
mov
leave
add
inc
(bad)
aad
test
out
int
ds
push
xor
fcmovbe
jne
add
imul
xchg
jmp
pop
imul
pop
ins
cwde
sbb
sbb
add
mov
cmp
mov
(bad)
cmp
sub
mov
icebp
inc
repz
repnz
outs
add
aas
pop
jno
inc
sub
or
(bad)
out
inc
shl
popa
mov
sub
mov
rcr
lea
lods
add
leave
(bad)
mov
inc
(bad)
dec
ret
popa
inc
repnz
pop
or
jg
aad
adc
push
or
test
dec
leave
in
push
pop
ret
inc
fmul
mov
jge
dec
es
test
ins
inc
shl
and
shr
jecxz
xchg
jns
jge
sub
popf
inc
in
outs
fnsave
sar
gs
push
je
es
mov
je
test
call
jge
sub
(bad)
cmp
or
jge
loop
add
daa
cmp
repz
(bad)
(bad)
ins
cmp
adc
out
push
mov
xchg
frstor
mov
int
xlat
mov
dec
pop
inc
aam
sti
inc
add
ins
cmp
call
xchg
or
fcom
call
adc
movs
iret
sub
adc
hlt
enter
sbb
retf
loope
jmp
in
movs
inc
loopne
push
lea
push
dec
cmps
lods
adc
lds
jg
xchg
mov
pop
xchg
sbb
ins
(bad)
pop
loop
jo
loope
push
idiv
leave
cmp
xor
popf
leave
sbb
sbb
sbb
stos
int
lds
mov
inc
ins
inc
jo
lods
push
popa
add
jg
add
cdq
add
fwait
ja
and
jne
dec
jb
nop
inc
mov
mov
mov
jge
sahf
retf
mov
ins
mov
and
dec
lea
mov
ins
leave
xor
in
fst
sbb
jl
xchg
jnp
mov
aaa
fisubr
inc
jp
leave
arpl
add
es
pop
mov
into
inc
mov
pop
push
pop
je
jmp
mov
jg
sbb
scas
loope
inc
aam
in
outs
mov
data16
push
mov
adc
push
out
inc
cs
ins
jnp
jecxz
bts
pop
inc
and
js
pop
mov
sahf
xchg
fnsave
lds
dec
(bad)
xchg
jle
inc
xchg
shr
adc
scas
das
xchg
nop
or
adc
retf
inc
into
ins
xor
stos
mov
icebp
es
clc
jo
in
(bad)
jo
test
mov
aas
scas
mov
mov
and
jb
sub
rol
test
ins
or
cmp
dec
pop
loop
ins
ret
inc
or
jmp
pop
imul
repz
das
xchg
xchg
mov
xchg
aas
js
aas
pop
add
and
xor
mov
retf
(bad)
cmp
adc
jle
add
pop
dec
and
icebp
or
pop
push
xlat
movs
add
dec
jge
xor
jecxz
push
mov
push
cmp
pop
pop
shr
jl
aam
xor
pusha
push
add
add
fstp
jg
push
mov
cli
inc
lods
jmp
or
adc
loope
les
inc
mov
das
xor
fnstcw
addr16
(bad)
inc
outs
imul
shl
imul
fs
fwait
(bad)
std
xor
inc
cmc
scas
and
push
lds
popa
ss
adc
(bad)
mov
mov
or
xchg
test
sbb
xor
or
pmulhuw
cmps
(bad)
addr16
jb
movs
arpl
mov
test
out
test
into
mov
call
arpl
or
pop
imul
push
jb
test
push
xlat
and
push
sti
jge
mov
add
leave
cmp
lea
js
enter
or
pop
outs
pusha
into
test
push
retf
cmp
and
inc
fisttp
and
sbb
sub
push
mov
aaa
pop
neg
loope
sbb
adc
lds
and
lds
std
xchg
mov
lds
repz
xlat
or
pop
push
out
jg
aad
jo
loopne
pusha
jbe
jns
lds
stc
adc
jg
jnp
pop
mov
push
loop
mov
(bad)
jmp
pop
cmps
push
mov
rol
cmps
or
jl
hlt
test
mov
std
fidivr
add
xor
retf
inc
pop
loope
xor
les
mov
dec
cmp
xor
cmc
cmp
and
xchg
jae
clc
mov
ds
push
xor
movs
(bad)
fisub
lea
add
and
dec
cmc
add
imul
imul
jae
mov
loop
fidivr
cmp
out
into
pop
mov
mov
icebp
loopne
jno
xchg
ficomp
jmp
push
test
push
mov
cwde
xor
sbb
xor
inc
sub
(bad)
shl
pop
mov
mov
pop
mov
lahf
jo
jmp
arpl
fmul
mov
aas
and
stc
stc
scas
mov
or
mov
cdq
movs
xor
cwde
mov
xor
cli
in
push
push
test
mov
mov
push
sbb
aad
sbb
mov
or
add
pop
lods
and
div
xchg
sbb
loop
and
fist
and
mov
out
das
pop
push
add
test
shl
push
add
dec
jne
mov
mov
rcr
call
jmp
ss
ficom
lods
cdq
out
dec
xchg
cmps
popf
arpl
mov
or
jle
enter
fimul
jo
ins
call
loopne
push
inc
scas
shr
xchg
mov
mov
imul
je
(bad)
out
fwait
mov
mov
cli
inc
test
hlt
inc
mov
mov
sbb
mov
aad
fist
mov
mov
adc
sub
mov
jbe
pop
enter
and
sbb
pop
push
cmps
mov
jecxz
and
sbb
jo
(bad)
jmp
xlat
and
inc
adc
dec
lods
fs
enter
mov
jo
mov
jbe
xchg
icebp
je
or
lea
inc
push
mov
ins
mov
pop
imul
ret
sbb
xchg
inc
mov
mov
rcl
push
mov
fild
sti
mov
jno
adc
clc
or
push
(bad)
inc
push
or
mov
es
daa
jecxz
cmp
enter
jmp
adc
inc
jb
adc
icebp
out
(bad)
sub
arpl
jo
shl
cmp
push
jb
xchg
xchg
push
mov
shl
cmp
and
cmp
fxtract
and
outs
or
push
test
retf
sti
pusha
ins
popa
cdq
inc
dec
add
sub
fs
(bad)
mov
pusha
jge
data16
dec
mov
(bad)
ret
push
add
jns
test
mov
clc
std
mov
push
mov
es
das
arpl
xchg
inc
add
rcl
xlat
int
test
sbb
arpl
xor
mov
stos
std
add
retf
pop
sbb
popf
add
mov
mov
das
mov
shld
sbb
aad
cmps
pushf
leave
xor
and
sar
neg
cmp
mov
in
lods
or
ret
clc
or
call
dec
inc
enter
jno
sahf
pop
adc
das
jl
cmc
add
out
nop
shl
in
pop
push
sbb
fnstcw
or
push
in
in
dec
mov
(bad)
stc
mov
cmp
into
add
push
shl
mov
out
repz
pop
nop
mov
inc
sbb
mov
push
xchg
xchg
xor
dec
or
scas
(bad)
cld
addr16
aaa
add
mov
dec
repnz
ja
jl
shr
adc
retf
cli
cdq
add
ja
stos
push
pop
jae
push
dec
dec
add
and
xchg
retf
or
dec
xchg
rol
(bad)
cld
adc
scas
inc
ins
lods
mov
iret
or
push
push
ror
mov
or
std
mov
or
js
popa
cmp
test
(bad)
adc
adc
aad
dec
jno
xor
(bad)
and
pop
mov
push
add
add
fwait
dec
mov
xor
mov
aaa
sbb
mov
push
xor
imul
add
in
aaa
push
enter
in
push
test
adc
xor
pop
shl
sbb
mov
pop
outs
je
xor
inc
mov
not
push
mov
imul
stos
mov
sub
add
fstp
jge
out
push
dec
es
(bad)
jmp
cmp
jl
cmps
neg
adc
ja
repz
fwait
call
sbb
xlat
mov
fs
mov
iret
jo
push
std
adc
loopne
mov
movs
cmp
rcr
mov
and
pushf
or
dec
push
fcom
fbld
sbb
js
dec
retf
adc
dec
xchg
adc
xor
and
fs
jno
mov
loop
cmp
add
adc
sub
sbb
pop
not
push
je
retf
fadd
add
xor
test
push
dec
in
mov
sub
ins
fs
dec
imul
or
push
fcmovnb
xchg
fs
fld
enter
mov
call
xchg
in
aas
std
sbb
ins
mov
icebp
gs
or
and
in
(bad)
lahf
xchg
leave
xchg
mov
xchg
mov
cmp
add
cs
mov
ja
jmp
cmp
sub
mov
mov
(bad)
push
mov
push
mov
(bad)
idiv
mov
inc
xchg
cs
in
rcr
xor
add
int3
int3
pop
(bad)
scas
adc
das
les
inc
sub
pop
xchg
inc
aas
xor
cmp
test
sbb
xlat
out
dec
movs
sti
ins
ffree
or
into
test
(bad)
repnz
(bad)
sahf
mov
ret
jns
dec
cmp
test
mov
ret
mov
add
cld
sub
adc
jmp
scas
jbe
imul
pop
cmc
and
adc
jmp
fadd
fiadd
or
ja
jecxz
or
jmp
das
adc
out
dec
daa
inc
push
jno
loope
mov
into
mov
push
in
sub
mov
shr
into
or
lods
push
and
mov
mov
fsubr
rcr
mov
movs
xchg
mov
inc
sbb
rcr
ret
fwait
test
sahf
daa
xor
arpl
xor
dec
add
lea
push
sahf
or
push
jbe
push
fwait
or
fxam
movs
jb
push
loopne
pop
jb
sbb
add
xor
lock
inc
add
lea
in
mov
inc
clc
popf
adc
sbb
cmp
test
out
and
xor
inc
and
sub
sub
aad
rcr
dec
std
(bad)
push
stos
div
or
or
sub
pushf
xchg
push
pop
adc
ds
mov
add
mov
jo
inc
leave
aas
hlt
ror
jbe
repnz
add
imul
sub
sar
in
xchg
pop
out
daa
cmps
cdq
(bad)
cmp
add
mov
jl
bound
mov
jne
pop
inc
loopne
aam
mov
xchg
push
xor
push
push
sbb
jns
in
pop
add
std
popa
push
push
inc
pop
div
and
pop
cmps
stc
fdiv
jmp
aas
shl
div
loope
xor
fisttp
lods
mov
retf
jg
add
in
je
jl
push
mov
ret
mov
pushf
xor
xchg
mov
mov
scas
call
in
cmps
jns
jg
fdivrp
inc
sbb
jbe
cmps
push
mov
test
cmp
push
sub
jl
cmp
add
pop
iret
mov
mov
test
inc
iret
fistp
out
jge
jbe
pop
push
adc
adc
add
and
mov
jb
mov
pop
pop
pop
mov
in
dec
and
out
jecxz
loop
cli
mov
fwait
or
(bad)
out
addr16
jg
inc
lods
jnp
jbe
mov
addr16
push
in
js
jbe
fld
(bad)
mov
jmp
dec
cmps
idiv
(bad)
pop
clc
test
call
cmp
or
cdq
cs
jns
jmp
sar
xchg
adc
sar
and
fisub
fcom
test
ja
repnz
fdivr
mov
mov
dec
popf
xchg
xor
dec
loope
jae
sub
push
mov
(bad)
imul
stc
popf
popf
mov
mov
push
stos
sub
addr16
pop
add
popf
in
imul
xchg
mov
inc
jns
stos
aas
mov
cmps
mov
repz
xlat
pop
mov
jns
cdq
or
je
pop
push
cwde
call
loope
enter
mov
sbb
and
icebp
cmp
scas
out
arpl
ret
add
sub
xchg
sti
dec
outs
loope
or
out
fs
test
test
aam
or
jge
mov
das
mov
ins
popf
mov
repnz
sbb
leave
cmp
xor
aad
jne
sub
js
xchg
push
jnp
aam
inc
push
jmp
pop
cmc
stos
jle
or
aaa
mov
cmp
mov
xchg
imul
mov
mov
jae
inc
out
retf
fdivr
in
(bad)
dec
or
or
clc
adc
scas
mov
retf
test
and
add
scas
push
mov
aam
loope
test
mov
loopne
inc
inc
inc
cmp
scas
sti
xor
(bad)
bound
nop
sbb
imul
pop
inc
fld
stos
cmp
jl
in
mov
mov
hlt
ss
outs
cmc
dec
mov
cmps
mov
stos
int
or
pusha
out
daa
cdq
test
jle
mov
out
leave
cwde
mov
je
mov
or
jbe
daa
mov
pop
jnp
or
xor
mov
mov
pop
sti
adc
popa
mov
(bad)
div
scas
cmps
out
aam
dec
inc
push
out
xchg
and
and
sti
lods
test
lods
push
push
test
push
int
out
and
pop
dec
cmp
xor
fcomp
jno
aaa
dec
in
sti
je
push
lock
inc
pop
paddb
movs
call
loopne
xor
adc
stos
and
lods
fst
or
jno
dec
imul
sbb
xchg
(bad)
mul
jp
jo
adc
ds
push
pop
push
xor
inc
adc
mov
mov
ja
adc
xchg
ins
jbe
dec
cmc
cli
cmp
ds
push
push
fist
add
int3
or
cmp
(bad)
xchg
sbb
and
push
bound
jb
adc
sub
sbb
lock
popa
jbe
and
cld
jbe
dec
in
and
(bad)
lds
retf
(bad)
in
or
mov
das
xor
inc
call
fisub
mov
jmp
paddw
bound
xchg
es
cmp
jmp
cmp
movs
mov
cmps
mov
jne
mov
inc
mov
or
rcr
mov
fistp
in
fsub
jno
mov
inc
mov
sub
inc
push
sbb
fsub
push
inc
dec
mov
iret
adc
mov
mov
lods
push
mov
into
std
test
ficom
in
mov
into
pop
and
mov
and
jge
jae
jne
fucom
repnz
sets
test
lahf
mov
(bad)
out
vorps
mov
mov
sub
push
pop
xchg
stos
mov
jne
xchg
cmps
aaa
and
nop
in
sbb
xor
pop
sub
mov
mov
outs
mov
inc
push
imul
and
ins
in
push
bound
fs
dec
adc
sbb
inc
xlat
cmp
call
rcr
ja
sbb
mov
fwait
lods
and
adc
(bad)
std
pop
jl
dec
inc
add
aaa
into
adc
push
into
sbb
inc
jb
jecxz
sub
cmp
mov
push
push
inc
pop
mov
fsub
sub
pop
mov
mov
cmp
inc
xchg
js
mov
mov
xor
mov
sub
sbb
xchg
inc
gs
std
xchg
popa
sbb
xor
xchg
retf
movs
sbb
int
mov
jp
dec
sbb
pop
bnd
scas
mov
in
inc
movs
fwait
and
xchg
iret
mov
dec
js
mov
enter
add
sub
jne
or
imul
ja
mov
nop
lods
inc
mov
or
mov
sub
int3
fwait
jecxz
jmp
pop
xchg
sbb
ja
xchg
cmp
and
jbe
pop
or
mov
mov
(bad)
cmp
or
mov
push
loop
cwde
xchg
sub
push
repz
xor
xchg
cmp
sub
adc
fs
push
in
mov
xchg
pushf
inc
mov
sbb
pop
out
loopne
dec
jne
xchg
imul
or
enter
add
call
pop
jg
or
clc
push
adc
(bad)
jb
std
sbb
jo
fwait
inc
stc
leave
pop
inc
in
leave
pushw
jb
aam
nop
pop
jae
pop
ficomp
dec
mov
sub
fcom
std
enter
imul
push
ror
inc
in
xor
aas
lods
nop
stc
jg
xor
ret
jne
xchg
push
retf
cmp
adc
test
fwait
(bad)
out
dec
push
out
out
icebp
mov
fidiv
dec
push
adc
inc
scas
xchg
rol
outs
(bad)
rol
out
jecxz
jl
ret
stc
(bad)
outs
sar
xor
xchg
mov
pop
cdq
xchg
stos
mov
cdq
xlat
xor
inc
jbe
ins
and
jbe
addr16
ficomp
mov
xor
adc
ss
xor
jmp
cmp
lea
(bad)
xor
push
jmp
push
in
into
inc
ds
and
inc
call
lods
pop
mov
imul
pop
std
call
push
push
movs
cmps
push
mov
and
lea
fs
pop
daa
ds
test
outs
mov
dec
xchg
std
add
and
dec
sub
mov
in
pop
in
mov
push
aaa
out
pop
nop
mov
bnd
shr
std
xchg
hlt
jnp
mov
mov
sub
push
inc
cmp
and
jecxz
push
(bad)
mov
sub
mov
shl
inc
xchg
stc
xchg
cld
aas
dec
pop
xchg
idiv
xchg
mov
lds
or
js
les
scas
lds
test
xor
clc
mov
dec
push
xchg
in
into
mov
aaa
mov
push
jnp
add
in
cmp
push
push
xchg
cmp
je
hlt
sahf
jle
outs
fstp
inc
sub
je
sbb
rcr
jmp
fidivr
dec
mov
jge
push
shl
mov
push
xor
jbe
cmps
mov
stos
jns
xor
(bad)
cmps
mov
in
xor
dec
adc
jecxz
push
shr
sahf
xlat
movs
jecxz
ret
lahf
xor
fs
mov
push
aad
mov
xor
ja
scas
inc
pop
push
inc
add
add
sbb
jmp
mov
cdq
gs
adc
push
adc
mov
ret
add
mov
movs
cmps
in
xchg
and
sbb
mov
pop
mov
inc
repz
cmps
mov
add
fdivr
sub
sbb
add
out
je
test
div
ja
and
fidivr
push
pop
in
mov
inc
jmp
sbb
xor
iret
call
test
retf
popa
lea
inc
cmp
icebp
cli
push
push
dec
sahf
mov
in
or
sti
call
and
arpl
fsub
dec
sub
in
push
inc
dec
icebp
sbb
add
inc
sbb
(bad)
out
(bad)
mov
inc
push
test
dec
int3
fcom
retw
inc
xor
lods
fwait
(bad)
sub
mov
in
jecxz
inc
inc
jecxz
(bad)
cmp
fstp
inc
xor
xor
and
int
fiadd
leave
inc
sbb
inc
ror
adc
div
sbb
inc
cmp
imul
jne
jbe
test
jno
or
retf
jg
test
or
mov
mov
icebp
push
and
cmps
retf
sti
cmps
adc
stc
sbb
data16
cmp
call
shl
imul
cld
mov
jle
push
scas
hlt
(bad)
call
cdq
cmp
xchg
push
aad
rcr
out
nop
dec
in
dec
loopne
mov
cld
mov
int
out
mov
sbb
(bad)
sbb
xor
imul
push
enter
test
jbe
jmp
les
fsubr
rcr
jecxz
jg
retf
inc
sub
js
push
xchg
sar
(bad)
mov
inc
pop
movs
(bad)
pop
mov
dec
fsub
sbb
test
cli
inc
(bad)
loopne
mov
fadd
hlt
outs
test
bound
popf
adc
retf
lock
adc
add
mov
adc
scas
xor
dec
rcr
jne
sub
push
jmp
push
(bad)
stc
js
push
pop
imul
out
jno
shl
inc
rcl
mov
mov
mov
pushf
mov
or
sbb
out
sbb
scas
ins
cmps
pop
and
jg
jmp
jmp
mov
pusha
push
jne
ss
fstp
dec
adc
push
inc
bound
inc
push
mov
xor
jmp
out
sub
xchg
retfw
sahf
sub
movs
(bad)
scas
mov
sbb
rcl
dec
sub
pusha
mov
push
ds
add
sbb
sbb
sub
inc
std
das
xor
inc
dec
sbb
adc
imul
pop
daa
jns
sbb
in
fdiv
inc
stc
pop
cmp
inc
mov
push
mov
jae
dec
pop
sbb
xor
aam
mov
sub
jle
jbe
in
sub
mov
out
cld
loope
data16
push
ret
(bad)
mov
dec
setne
out
sti
jne
or
inc
outs
outs
pop
pop
(bad)
mov
and
jl
sbb
in
inc
stos
push
and
pop
push
dec
movs
mov
jno
int3
loope
ds
rcr
xchg
fwait
jmp
imul
xor
xchg
mov
jns
in
mov
pop
cmp
xchg
loope
xchg
pop
clc
or
and
(bad)
loope
and
jo
xchg
cmp
std
pop
(bad)
sub
jmp
sti
inc
pop
vmovntpd
xchg
movs
out
mov
jns
adc
sbb
push
jg
(bad)
enter
sbb
mov
or
push
rcl
dec
or
mov
sahf
ins
pusha
in
loopne
jge
push
sub
and
push
mov
xor
sub
sub
ror
daa
enter
clc
stc
xor
sub
and
push
test
and
jle
rol
xchg
iret
pop
jne
(bad)
ja
and
cmp
loopne
pop
xchg
loopne
mov
dec
sub
mov
cdq
fadd
xor
clc
fdiv
or
loop
or
jp
pop
xchg
cmp
fld
push
inc
(bad)
adc
and
pop
fbstp
xchg
jp
inc
sub
xor
xchg
dec
(bad)
(bad)
push
mov
cmp
cmps
cmp
push
int
push
dec
jmp
(bad)
gs
mov
icebp
imul
sub
push
lds
cmp
in
je
enter
and
out
je
(bad)
or
adc
mov
jns
test
repnz
lods
push
cmp
imul
mov
test
xchg
jno
sub
fwait
cdq
mov
mul
les
jg
or
mov
or
sub
mov
pop
int
arpl
mov
and
call
jns
push
mov
outs
dec
jp
mov
adc
dec
sub
repnz
lods
adc
sbb
movs
jo
xchg
add
dec
scas
add
in
dec
fsubr
pushf
retf
hlt
add
cmps
mov
mov
push
aas
mov
sbb
pop
stos
inc
data16
and
mov
(bad)
jmp
inc
out
add
(bad)
jne
(bad)
mov
sbb
loop
xchg
retf
outs
sbb
popa
inc
test
imul
ss
stc
cmp
inc
stc
ror
adc
adc
mov
mov
js
call
ss
aad
dec
pop
inc
stos
xor
(bad)
aad
mov
add
xor
cs
jle
jno
pop
data16
rol
inc
xchg
pop
cmp
loopne
jmp
int
in
jmp
push
mov
cmp
mov
pop
enter
xor
jns
pop
retf
jge
call
jge
cwde
imul
mov
pop
add
frstor
out
(bad)
add
int
xor
mov
into
pop
add
and
and
jmp
pop
xchg
outs
xchg
sti
sub
rcr
stc
popf
(bad)
in
push
push
test
push
sbb
add
repz
inc
and
loopne
jae
adc
test
(bad)
aam
mov
leave
xchg
push
repz
lock
xchg
lds
xchg
hlt
popa
inc
sub
adc
and
leave
mov
(bad)
les
sbb
adc
mov
mov
xor
add
jmp
mov
fild
adc
aas
jmp
dec
jno
adc
leave
sbb
pop
test
sbb
daa
ja
cmps
jle
xor
inc
sahf
leave
xchg
push
mov
inc
sar
iret
mov
rcr
xor
pop
idiv
cmp
mov
xchg
aaa
icebp
sbb
inc
add
loop
inc
popa
int3
push
mov
and
cs
cmp
popf
jne
sub
iret
gs
mov
std
push
dec
inc
sahf
and
fidivr
fsub
xor
in
mov
jle
push
sub
fs
adc
xlat
inc
and
mov
xor
pop
fisub
rol
dec
push
cdq
add
sbb
push
(bad)
dec
jge
ret
imul
jge
or
sbb
stos
fstp
popa
ret
xchg
sbb
mov
inc
popf
adc
jge
cmc
jg
push
mov
add
pop
retf
mov
jns
mov
imul
ins
cmp
and
(bad)
add
adc
pop
jno
or
dec
data16
xor
and
or
add
int3
pushf
mov
push
xchg
shl
in
xor
jae
push
pop
push
repz
lds
and
push
and
push
shl
ret
cmc
or
ret
mov
fbld
fsubrp
add
jge
sbb
sar
out
test
or
test
jae
inc
jmp
pop
test
rcl
sar
jbe
in
enter
or
adc
mov
imul
outs
repnz
enter
stc
and
push
leave
add
pop
fs
mov
loope
jbe
fwait
adc
into
out
call
add
lods
(bad)
ds
test
(bad)
pop
pop
fwait
xchg
xor
adc
cmp
and
ficomp
lock
adc
repnz
sbb
cmps
test
addr16
pop
cld
xor
pushf
fnstsw
je
aaa
sbb
bound
sbb
xchg
xor
or
int
leave
add
int3
xchg
gs
jae
mov
push
or
add
movs
stc
and
add
jl
fs
jecxz
(bad)
push
cmp
mov
and
cmps
dec
enter
xchg
jg
xor
mov
pop
xchg
xor
jno
jmp
cli
or
in
and
push
in
xchg
and
or
imul
iret
mov
add
popf
data16
test
xor
and
mov
xchg
imul
lock
es
pop
inc
(bad)
aas
adc
ficomp
retf
dec
and
or
shr
add
test
mov
xchg
test
ret
hlt
ja
pusha
movs
push
xor
aam
fiadd
inc
sub
dec
aaa
adc
cwde
outs
lea
(bad)
adc
mov
in
(bad)
sub
iret
mov
jb
xchg
dec
sub
sbb
push
mov
adc
dec
dec
add
iret
sahf
push
movs
inc
mov
inc
sbb
sti
sbb
cmp
out
lods
fs
ins
and
stc
test
sbb
sub
test
mov
imul
mov
sbb
cmp
callw
mov
jno
cmp
mov
xor
pop
lock
out
arpl
ror
lock
mov
and
cwde
add
fdivr
push
inc
outs
xor
mov
cmp
push
dec
mov
inc
int3
pop
mov
out
fidivr
in
pop
ins
sub
fidivr
movs
(bad)
loop
pop
xchg
in
enter
in
addr16
inc
add
jge
xlat
push
xchg
ret
push
fbstp
mov
jae
xor
sahf
add
fldcw
repz
mov
mov
inc
shl
push
or
sbb
jo
cmps
or
adc
sahf
cld
mov
jo
(bad)
repz
jnp
(bad)
inc
dec
jp
pop
and
mov
push
test
and
mov
cs
dec
push
minps
pushf
xor
mov
ins
inc
lods
sub
out
or
mov
jg
xchg
cmp
stos
inc
push
cmp
xchg
je
int
cmp
mov
aad
mov
mov
cmp
push
stos
test
(bad)
pusha
jmp
addr16
or
fld
xchg
cmp
imul
push
mov
ret
call
pop
add
adc
jmp
push
ja
(bad)
icebp
pop
mov
xchg
int
sti
xor
leave
clc
lods
popf
inc
cs
sbb
scas
inc
or
jecxz
pushf
inc
push
(bad)
xchg
sub
fimul
loopne
adc
loope
pushf
xor
cmp
test
ins
fisub
sbb
sbb
add
test
aam
sub
enter
mov
add
movs
adc
push
sub
jnp
dec
inc
scas
push
mov
call
jbe
sbb
and
sub
mov
(bad)
mov
arpl
je
or
inc
ret
xchg
add
mov
rcl
(bad)
add
jns
mov
ss
jmp
and
push
imul
int
jmp
jo
or
xchg
mov
mov
mov
aam
mov
into
stos
mov
pop
js
cwde
dec
or
sbb
xor
imul
or
call
call
lods
xor
bound
(bad)
ret
push
sbb
out
or
push
mov
(bad)
mov
jnp
fist
jne
sub
xchg
out
adc
jbe
ret
mov
add
dec
jmp
mov
cld
or
sti
pusha
push
loop
cli
sbb
add
fmul
inc
inc
xlat
stc
jb
ins
sbb
and
into
fnstsw
in
mov
add
ins
cmp
jp
loop
sahf
int3
pop
retf
cmp
adc
fsub
test
dec
stc
push
retf
inc
inc
mov
and
jno
mov
leave
dec
shr
sbb
dec
rep
adc
(bad)
cli
rcr
in
test
mov
retf
jne
jbe
and
test
sub
cmp
add
cmp
mov
outs
pusha
or
dec
cmp
and
lds
mul
ret
add
mov
ret
data16
pop
xor
fs
xchg
ins
loop
jmp
scas
aad
ds
add
retf
pop
addr16
cmps
mov
or
scas
add
ins
sbb
dec
das
and
sub
popa
mov
repnz
mov
fs
ins
ret
arpl
xchg
nop
or
push
or
xchg
pop
cmova
and
aaa
xchg
jns
int3
fild
jmp
xchg
add
add
int
loopne
lock
inc
mov
sub
or
jno
pop
add
icebp
(bad)
jmp
push
pop
fwait
sub
xchg
aaa
jle
mov
xor
ss
cs
inc
pop
sar
cmps
or
xor
nop
rcr
pushf
and
test
test
ins
and
icebp
scas
mov
xchg
(bad)
in
pop
dec
pop
popa
push
mov
rcr
call
pop
repz
sahf
inc
jo
mov
sbb
jno
adc
jge
mov
inc
lea
jnp
push
sbb
adc
inc
ins
xchg
add
jb
cmp
movs
push
or
sbb
xor
adc
jle
jae
stos
mov
jne
jae
int3
jle
or
sub
push
push
cmps
fild
sub
sbb
nop
cmp
lahf
fwait
pusha
iret
cwde
mov
xchg
nop
aam
rol
ficom
(bad)
out
scas
sbb
(bad)
lods
mov
std
ja
push
sub
jbe
adc
xchg
xlat
dec
lds
jecxz
(bad)
lds
pushf
mov
lss
xor
mov
adc
mov
sbb
movs
stos
jmp
push
test
sti
dec
inc
test
sbb
sbb
lahf
pop
ja
dec
cmp
pop
sub
or
unpcklps
cli
test
xor
jno
jae
jno
inc
sti
dec
ins
pop
xchg
cmp
push
stos
cs
push
jnp
mov
push
jmp
int
loop
arpl
cwde
das
pop
and
add
push
int3
mov
sub
push
iret
inc
pop
dec
das
into
dec
(bad)
adc
or
mov
idiv
mov
mov
fisttp
je
clc
adc
mov
lock
pop
mov
movs
pushf
or
aad
fisubr
daa
mov
jns
test
iret
pop
dec
xor
out
out
adc
inc
jns
xchg
sub
sub
mov
cmp
dec
rol
xor
push
mov
sbb
xor
js
repz
ss
repz
add
add
dec
outs
push
jge
mov
sub
fdivr
sbb
mov
or
loope
lahf
repz
xor
test
adc
dec
shr
jmp
(bad)
(bad)
enter
out
xchg
loopne
dec
fwait
adc
xor
cmp
sti
and
(bad)
arpl
jmp
ins
dec
aas
sbb
add
xor
cmp
fs
jmp
mov
pop
in
in
ins
outs
xchg
es
sbb
push
adc
adc
and
pop
cmp
inc
jmp
loop
and
mov
outs
push
sub
push
adc
mov
gs
mov
push
rol
int3
test
fmul
dec
adc
mov
dec
xchg
stos
or
sub
xchg
(bad)
xchg
cmp
lahf
leave
sahf
xchg
pop
sbb
call
jno
jecxz
cmc
mov
nop
aam
(bad)
cmp
mov
add
out
push
dec
fcmovnu
add
xchg
lds
fcomp
pop
(bad)
stos
movs
in
mov
mov
jbe
bound
sbb
and
leave
out
push
add
pop
hlt
jle
sahf
sbb
stos
sub
mov
inc
out
(bad)
fdiv
(bad)
jnp
in
push
imul
dec
ss
(bad)
xchg
(bad)
imul
out
jae
xor
mov
cmp
mov
mov
xchg
fwait
ja
jbe
leave
add
es
test
push
dec
xchg
stos
cmp
mov
pop
aaa
xor
pop
inc
pop
dec
mov
adc
add
xchg
xor
mov
in
xchg
mov
(bad)
mov
xlat
add
xchg
pop
push
push
fstp
dec
add
mov
and
add
sbb
mov
mov
dec
mov
ds
bound
adc
xchg
jmp
mov
mov
out
mov
mov
jns
and
gs
inc
jne
mov
mov
mov
loopne
jecxz
pop
mov
icebp
xlat
or
jmp
jb
and
and
retf
ror
jmp
sahf
add
out
js
dec
xlat
imul
jmp
sub
mov
push
je
gs
sub
xchg
scas
icebp
aam
int
lods
jne
jl
inc
or
std
call
out
test
jle
scas
push
cmp
adc
repz
pop
sbb
and
jne
jne
ror
fadd
je
fbstp
add
dec
test
inc
shl
pop
adc
retf
aam
adc
or
into
stos
shl
sbb
scas
sbb
xchg
pop
mov
ins
retf
push
in
push
mov
jns
adc
mov
mov
sub
imul
dec
sbb
cmp
movs
inc
xchg
mul
adc
inc
inc
jns
mov
jns
jle
inc
push
sub
pop
in
sbb
pusha
nop
aad
fdivr
scas
js
jecxz
ret
add
ror
out
dec
xchg
(bad)
sub
icebp
sbb
mov
sbb
pushf
or
jns
sar
push
repnz
add
icebp
(bad)
ins
inc
and
fwait
call
mov
sub
inc
mov
cmp
jb
(bad)
mul
test
sbb
cdq
add
xchg
xchg
std
dec
jns
iret
inc
scas
adc
(bad)
jl
aas
xchg
sar
xor
arpl
not
or
idiv
adc
mov
dec
mov
xor
push
sbb
stos
ret
mov
clc
jmp
(bad)
fisubr
mov
fidivr
xchg
adc
scas
hlt
ins
mov
dec
sub
xchg
mov
sub
jns
cs
or
push
mov
mov
emms
es
xchg
dec
jmp
fs
mov
mov
test
outs
jecxz
lods
push
call
ins
sub
dec
push
repnz
movs
xchg
popa
inc
sbb
ret
les
(bad)
test
mov
mov
pop
mov
movs
cmps
fwait
dec
outs
xchg
ror
xor
test
in
push
test
xchg
shl
imul
mov
dec
jbe
das
inc
jo
and
pop
and
mov
mov
sub
test
or
pusha
mov
mov
movs
cld
inc
fldenv
mov
ins
sahf
mov
jmp
or
ficom
mov
in
test
dec
sbb
push
mov
ret
clc
aaa
xchg
mov
mov
adc
mov
loop
mov
inc
hlt
add
jl
mov
gs
repz
ja
and
sbb
push
sbb
loop
mov
xchg
xchg
cs
prefetcht0
cmp
mov
jle
je
(bad)
jnp
retf
iret
and
std
xor
into
aas
push
push
call
or
scas
add
xchg
or
mov
push
jp
xor
xor
mov
mov
scas
retf
ffree
or
fisttp
rol
mov
inc
inc
xchg
aaa
dec
data16
add
in
dec
cmp
and
mov
not
lea
shr
push
in
hlt
loop
mov
dec
pop
xor
les
push
gs
fistp
test
inc
or
xor
js
and
push
or
adc
xor
imul
ss
or
xchg
mov
pop
scas
sbb
inc
imul
xchg
and
stos
dec
stc
dec
push
jne
loop
rcl
mov
and
adc
mov
jle
imul
(bad)
aaa
enter
scas
mov
lahf
mov
clc
xor
jge
cmp
push
out
std
push
lds
pop
loopne
xchg
rcr
push
test
jmp
leave
(bad)
movs
mov
jb
add
retf
dec
nop
int3
mov
in
jns
push
in
hlt
mov
nop
mov
icebp
call
outs
xor
inc
or
mov
mov
mov
cmp
data16
inc
call
test
and
int
push
lods
clc
(bad)
into
mov
jmp
outs
popf
outs
sahf
sbb
mov
lods
repz
pop
inc
push
adc
out
inc
add
jmp
sbb
xchg
jmp
imul
pushf
(bad)
iret
xor
inc
fucompp
jno
pop
fs
repz
add
fmul
sbb
sub
arpl
out
ins
mov
outs
mul
mov
popa
mov
out
std
(bad)
repnz
sti
mov
js
shr
sub
mov
inc
pop
aad
in
test
in
out
fucomi
jo
pushf
ret
jne
and
and
dec
mov
sbb
test
or
mov
gs
int
inc
loopne
xor
sub
popa
xchg
xor
daa
xchg
jb
in
dec
nop
pop
mov
loopne
ficomp
imul
fs
xchg
xchg
add
sbb
sub
mov
pop
mov
push
sti
and
rcl
rol
push
adc
fist
add
fidivr
sbb
cmp
inc
in
jns
mov
loope
bound
fcom
xor
out
dec
push
enter
outs
pop
test
cmp
push
fst
pop
xchg
xor
cmp
add
mov
mov
leave
inc
jp
jg
das
sub
shl
retf
sbb
in
mov
or
sar
fnstsw
mov
fmul
xlat
cmp
out
repz
adc
push
imul
scas
add
add
mov
pop
dec
aam
imul
mov
xor
fiadd
je
push
pop
and
rcr
mov
xchg
ficomp
xor
sub
mov
int
sbb
int3
jp
cmp
popf
inc
neg
xor
and
fdivp
movs
std
inc
dec
xchg
mov
xchg
xrelease
mov
jge
xchg
mov
xchg
add
test
mov
mov
and
mov
pusha
cwde
ss
sbb
nop
sbb
in
cmp
out
imul
sbb
or
push
push
fwait
scas
jmp
and
iret
mov
fidivr
xchg
and
pop
sbb
pusha
nop
xor
fist
in
(bad)
mov
adc
cmp
xchg
inc
(bad)
cmc
outs
cmp
sbb
dec
fild
or
adc
sbb
cmp
push
js
rol
rol
mov
inc
out
repz
jno
(bad)
mov
xor
inc
jno
pop
pop
test
mov
mov
pop
cmp
ins
mov
repz
movs
leave
cli
jne
jl
dec
push
push
icebp
jp
mov
sub
lock
mov
ret
add
adc
test
test
jmp
push
icebp
outs
cmc
mov
lods
popf
imul
and
jmp
lahf
nop
and
xchg
jmp
jne
aas
cmps
push
test
inc
pop
cmp
and
xchg
xor
pop
cs
inc
push
fadd
mov
call
fisubr
inc
or
hlt
daa
xchg
(bad)
addr16
xor
call
xor
js
loope
adc
add
sbb
cwde
xchg
add
(bad)
adc
push
(bad)
fdiv
(bad)
lock
lods
(bad)
popa
pop
retf
push
jno
mov
sbb
sub
cmp
and
(bad)
in
lahf
repz
push
pop
bound
retf
dec
stos
jl
(bad)
mov
sub
lods
gs
scas
jb
loope
pop
cmp
mov
inc
std
fist
ja
js
iret
test
hlt
mov
pop
scas
mov
cmp
push
xor
pop
mov
pop
xor
test
shl
fldz
cmp
jns
jmp
mov
xor
int
xchg
and
xchg
sti
xlat
mov
jae
or
pop
inc
icebp
int3
mov
jbe
ds
jmp
mov
dec
in
jb
push
scas
adc
dec
mov
aas
sbb
mov
lock
or
xor
jg
xor
or
xchg
clc
stos
sahf
mov
lahf
iret
fs
fs
out
add
jns
(bad)
cmp
and
mov
popa
sub
loope
mov
es
or
mov
sbb
inc
jecxz
iret
or
aaa
in
mov
(bad)
rol
std
jmp
retf
sbb
pusha
test
sti
fisubr
inc
mov
fabs
adc
pop
dec
daa
(bad)
sub
dec
mov
mov
push
jne
iret
hlt
(bad)
aam
arpl
or
sub
cwde
icebp
jmp
sahf
xor
add
(bad)
aad
and
inc
push
mov
in
jl
pop
dec
mov
aaa
inc
out
sbb
repnz
or
xchg
add
fist
lods
push
mov
rcl
sbb
outs
iret
dec
les
in
popa
jno
xchg
and
mov
sbb
aad
cmp
adc
fcomp
std
jb
dec
sub
(bad)
neg
and
clc
jp
sbb
fmul
into
and
push
xchg
call
pop
jecxz
and
imul
or
cmp
cmp
cmp
cld
sbb
jmp
ret
or
xchg
mov
and
loop
out
dec
dec
mov
pop
pop
xchg
sar
jge
test
lods
gs
fcomip
rcl
sub
mov
scas
fimul
cwde
outs
mov
or
in
jecxz
icebp
jle
into
dec
pop
(bad)
icebp
ds
xchg
xchg
int3
dec
cmps
xor
aam
test
inc
stc
test
sahf
inc
push
push
pop
xor
add
ins
inc
or
sti
xchg
das
sub
add
xor
test
test
mov
jmp
adc
inc
jmp
dec
mov
dec
pushf
push
mov
fcomp
mov
fst
out
xchg
popa
add
(bad)
jge
gs
mov
popa
add
enter
and
push
mov
(bad)
jge
pop
js
bound
pushf
in
nop
sbb
mov
push
cs
test
dec
adc
xlat
mov
(bad)
and
cmp
add
jmp
rcl
aad
inc
js
cmps
jo
jmp
adc
cs
adc
sahf
pop
dec
sub
xor
cld
lods
pop
cmp
inc
pusha
rcr
aam
sub
ficomp
xchg
and
bound
mov
outs
lahf
dec
inc
out
ss
mov
xor
pop
pop
sub
dec
idiv
xor
xchg
ficom
xlat
clc
test
(bad)
out
jnp
ds
pop
inc
mov
(bad)
pop
mov
mov
xor
out
and
cmp
lods
add
jmp
mov
clc
adc
xchg
inc
mov
rcl
mov
jbe
mov
cmp
into
lock
or
cmp
leave
les
push
fld
mov
stos
jo
mov
pop
adc
out
shr
mov
inc
pop
sub
daa
push
xor
sub
mov
aam
jg
push
adc
jmp
xor
(bad)
sub
imul
add
fistp
clc
inc
dec
adc
cmp
or
test
mov
scas
es
jbe
xchg
in
ins
jmp
loopne
loope
inc
jns
fstp
mov
sub
(bad)
sub
pop
cmps
scas
sahf
and
jo
addr16
pop
jle
jge
sbb
lahf
xor
sub
xchg
pushf
jnp
pop
pop
xchg
ret
inc
mov
jmp
lods
lahf
pop
push
mov
(bad)
push
fsub
lds
inc
sub
and
ss
mov
out
mov
inc
(bad)
std
or
inc
sbb
mov
jno
jb
cmc
add
mov
ds
jno
rol
adc
fiadd
lahf
mov
pop
mov
sbb
das
std
inc
sub
fmul
daa
jnp
jmp
dec
jnp
repz
xchg
jo
fadd
into
pop
popa
push
jne
hlt
(bad)
rcl
ficom
mov
sbb
movs
movs
and
stc
and
push
rcr
mov
inc
dec
jne
sbb
retf
movs
lock
lea
test
jno
stos
leave
cld
shl
xchg
icebp
jmp
xchg
or
jp
and
cmp
fbstp
dec
xchg
and
push
jo
xchg
xchg
test
cmp
inc
bound
dec
test
retf
loopne
data16
ds
mov
xor
push
mov
add
mov
xchg
(bad)
(bad)
xchg
and
mov
js
sbb
gs
iret
scas
add
repz
es
cmc
test
inc
sub
fsubr
jecxz
das
ret
sbb
movs
xor
arpl
mov
jbe
inc
and
pop
jg
(bad)
sar
dec
pusha
retf
sub
pusha
outs
into
jl
mov
out
and
mov
outs
xchg
jmp
pop
popa
int
inc
mov
push
jl
call
lahf
dec
in
or
sbb
push
stos
cwde
lock
stos
ins
ficom
into
sbb
mov
jo
outs
cmps
mov
ret
jns
fisttp
shl
data16
aaa
int
les
div
outs
in
fiadd
call
sbb
mov
call
lahf
(bad)
test
lods
xchg
xchg
popa
aad
sbb
mov
pop
mov
fisttp
mov
movs
cmp
sub
das
mov
xchg
mov
add
cmp
(bad)
push
adc
dec
outs
push
inc
inc
xchg
fidivr
sbb
(bad)
in
xor
lods
cld
stc
loop
cmp
fs
cmp
mov
(bad)
xchg
push
aam
mov
and
in
outs
fs
pop
cmp
jmp
neg
leave
mov
jne
retf
push
sbb
dec
ror
add
(bad)
jmp
mov
ins
cmp
push
shr
mov
xchg
add
or
enter
jno
std
sbb
test
in
(bad)
aad
lods
jbe
inc
nop
popa
push
pop
jp
ins
test
dec
arpl
jae
ins
js
xchg
iret
adc
lds
test
je
stos
mov
call
push
rcl
inc
inc
cmp
xor
out
sub
arpl
sti
sub
in
sub
stos
xchg
or
mov
test
scas
cmps
and
mov
push
mov
push
and
xlat
pop
and
xor
pusha
das
inc
dec
loope
cmp
xor
mov
xor
jecxz
pop
ret
dec
loope
pusha
mov
fdecstp
loope
xchg
pushf
mov
pop
cld
jl
je
aad
ret
mov
loop
icebp
mov
mov
inc
xor
shl
pop
push
xor
push
mov
jge
dec
push
inc
dec
pushw
xlat
(bad)
stc
in
lahf
iret
mov
jmp
movs
xchg
push
add
mov
scas
sti
pop
xor
shl
stos
mov
cli
jmp
jbe
mov
pop
dec
cmp
shl
xchg
pop
dec
retf
outs
push
dec
sub
sbb
mov
dec
jno
add
jmp
enter
(bad)
loopne
inc
push
data16
xor
ret
aaa
or
(bad)
jae
fdivr
and
or
lods
add
jecxz
mov
jb
scas
push
lock
pop
push
out
pushf
inc
jnp
and
push
adc
inc
sub
jge
push
les
xor
jne
mov
and
data16
mov
ds
or
mov
mov
xchg
les
cmp
mov
(bad)
hlt
dec
sar
dec
outs
cdq
cmps
xlat
mov
mov
ret
loope
dec
add
mov
dec
inc
test
sub
les
fadd
jg
pop
jo
stos
test
shl
jle
aam
into
fdivr
imul
leave
jno
popa
pop
inc
lock
mov
mov
pop
aaa
sub
aaa
sbb
sbb
cwde
push
sub
xchg
stc
and
ds
test
jle
sti
icebp
repnz
hlt
dec
sahf
(bad)
xor
xchg
adc
(bad)
popa
(bad)
daa
ins
iret
repnz
fbstp
sbb
inc
adc
arpl
push
or
jns
xor
ss
and
mov
jmp
xchg
add
mov
popf
jp
aad
jbe
cwde
inc
xor
cmps
jnp
int3
mov
nop
std
out
adc
pop
cmp
std
sub
cmp
mov
sti
pop
or
cmps
fcmovbe
sub
pop
adc
lods
sahf
jmp
mov
mov
cld
pop
adc
fiadd
cmp
(bad)
(bad)
cmp
cmp
fmul
dec
aad
(bad)
cs
stos
dec
mov
push
into
mov
scas
arpl
jp
mov
adc
dec
dec
add
jle
sahf
xor
stos
push
mov
das
mov
stc
arpl
ss
xor
mov
ror
push
(bad)
adc
aaa
out
(bad)
jg
or
scas
mov
dec
cmp
enter
push
fnstenv
mov
jecxz
add
popf
and
pop
popf
lea
cmp
mov
das
gs
imul
ins
push
fistp
mov
jp
push
out
imul
ins
sub
test
retf
mov
in
push
add
cmp
test
das
sub
imul
push
test
test
cmc
add
add
xchg
ds
int
fcmovnbe
push
fadd
mov
cdq
xchg
popf
mov
loop
push
arpl
fbld
lds
daa
sub
ins
cdq
test
sub
dec
call
mov
fld
add
jle
cmc
pushf
pop
(bad)
or
(bad)
and
shl
cld
ds
sbb
dec
stc
add
pop
inc
pushf
jecxz
popf
(bad)
adc
pop
or
(bad)
jbe
mov
mov
or
aam
xchg
sbb
pop
push
xchg
lahf
mov
fnstsw
or
mov
cmp
jmp
sub
(bad)
pop
xchg
mov
or
test
mov
inc
loop
xor
xchg
test
inc
shr
pop
mov
or
hlt
enter
jo
lods
inc
sub
or
ficom
retf
sbb
leave
nop
jl
in
or
ror
mov
fiadd
shl
outs
shl
sbb
mov
xlat
push
push
(bad)
push
nop
dec
jno
dec
push
or
and
shl
in
mul
mov
stos
sbb
jo
xchg
xlat
cdq
fcomp
(bad)
popa
loop
icebp
(bad)
test
(bad)
icebp
stos
push
faddp
aas
xchg
cmp
mov
in
sbb
cld
push
mov
stos
std
push
push
gs
xchg
sub
cmp
xchg
xor
jnp
repz
pop
mov
outs
sahf
in
or
ins
add
inc
xchg
shr
loopne
pop
pushf
int
jecxz
lahf
aas
std
movs
and
and
xchg
pop
mov
dec
jmp
push
in
adc
imul
gs
push
inc
scas
push
adc
mov
out
xchg
fs
inc
jb
cmp
cmp
inc
sbb
add
pop
movs
inc
jg
(bad)
xchg
inc
mov
in
ss
inc
shr
fcom
ins
test
push
or
outs
inc
iret
or
fsin
psubb
or
pminsw
mov
mov
(bad)
(bad)
sub
rcr
mov
sub
cmp
scas
inc
cdq
call
stos
daa
retf
cmp
mov
mov
(bad)
mul
dec
jns
dec
sub
inc
inc
mov
sbb
inc
jg
mov
(bad)
jge
mov
mov
adc
mov
mov
jmp
fist
cwde
ret
popf
pop
mov
jecxz
mov
sub
and
loop
mov
sbb
arpl
sub
mov
(bad)
mov
scas
jne
sbb
sbb
inc
lds
jno
push
add
mov
jns
enter
mov
adc
fidivr
scas
hlt
pop
enter
lds
sub
iret
cmp
ffreep
js
in
es
jae
je
pop
imul
xor
xor
inc
jl
cmps
scas
fcom
or
xor
jle
out
in
iret
dec
inc
sbb
iret
push
and
call
xchg
lods
xor
sub
sub
ficom
or
leave
dec
(bad)
(bad)
repz
test
pop
in
pusha
ss
or
jecxz
and
movs
data16
mov
(bad)
pushf
and
sbb
sbb
stos
cwde
sbb
mov
ret
push
pop
inc
ret
dec
pop
xor
pusha
and
sbb
stc
jbe
test
mov
xor
rol
inc
jae
retf
fsub
nop
outs
mov
addr16
fld
sub
jae
aas
fbld
stos
mov
popa
cmps
cmps
movs
out
xor
cwde
pushf
movs
ja
mov
pop
xor
sbb
test
add
inc
jp
pop
or
mov
fld
push
xchg
mov
dec
mov
inc
mov
or
in
out
add
add
outs
dec
pop
or
lea
pop
cs
jne
or
outs
data16
pop
test
pop
test
push
fs
and
dec
cdq
push
push
push
stc
xchg
int3
push
ret
jnp
sub
jle
push
mov
push
imul
not
loopne
frstor
stc
push
jmp
push
xchg
(bad)
icebp
shl
and
xor
dec
movs
aad
or
ss
sbb
xchg
adc
stos
adc
pusha
ja
(bad)
out
sbb
mov
not
xchg
pop
sti
push
jmp
pop
rcr
mov
add
sti
inc
dec
fild
jge
sub
push
retf
xchg
pop
add
push
arpl
stos
jmp
loope
pop
retf
inc
mov
push
outs
xchg
push
pop
pop
mov
scas
mov
mov
xor
pop
mov
mov
jo
hlt
sbb
pop
mov
push
clc
sub
sub
jnp
cmp
sub
(bad)
or
loopne
sub
fistp
inc
loop
lods
add
ds
jno
jmp
imul
dec
cld
cli
scas
not
cdq
movs
sub
stos
pop
sar
jno
int
iret
ins
pop
stos
mov
int
or
mov
hlt
out
(bad)
mov
cmps
div
lds
rcr
lahf
inc
repnz
leave
je
cmc
cmps
out
(bad)
add
mov
or
rcl
cmp
mov
fst
xor
lock
jo
mov
cmc
mov
imul
or
jae
fisttp
in
cmp
xchg
mov
into
popf
mov
mov
mov
mov
and
push
xchg
sbb
fs
mov
dec
pop
jb
pop
mov
and
test
fnstsw
mov
mov
adc
aam
mov
lock
jle
call
adc
mov
push
jge
pushf
dec
mov
sbb
out
cmp
pop
mov
fdiv
pop
call
cli
aam
leave
or
bnd
fs
cwde
aaa
push
out
sub
int
add
jg
stos
mov
pop
adc
cmp
aas
hlt
or
shl
lock
test
mov
retf
push
dec
xor
mov
and
xchg
lods
(bad)
inc
repnz
xor
ret
movs
stos
imul
(bad)
pop
lahf
jb
(bad)
std
jg
in
out
xchg
inc
xchg
add
lods
cmp
mov
push
ficomp
cmp
pop
jg
xchg
xor
mov
jmp
and
movs
cmc
(bad)
clc
movs
sbb
push
xchg
out
dec
dec
jge
add
or
(bad)
sbb
into
mov
outs
ds
mov
int
xor
xchg
and
xchg
push
retf
mov
or
ret
xchg
pop
call
(bad)
(bad)
fcom
dec
add
adc
nop
dec
test
js
aad
aad
shl
repz
popa
jmp
push
pop
hlt
out
dec
js
stos
mov
pop
pop
imul
cli
fnsave
mov
mov
push
jb
pop
or
sti
push
in
mov
push
data16
mov
jmp
loope
lahf
or
loop
push
xlat
mov
push
icebp
cdq
ret
dec
es
arpl
pushf
shr
pop
out
cmp
cwde
bound
and
mov
cmp
movs
mov
scas
js
hlt
xor
in
mov
mov
cmp
pop
data16
mov
fisttp
cli
inc
sbb
ret
ja
leave
scas
mov
jp
dec
fwait
mov
cld
sbb
movs
aad
xor
popa
scas
jl
(bad)
hlt
xchg
fs
rcl
mov
cmp
shl
mov
sbb
mov
je
(bad)
or
fmul
mov
mov
mov
adc
mov
jo
test
loop
cwde
cmp
inc
mov
mov
stos
test
dec
mov
dec
std
repz
int3
inc
jo
fist
nop
cdq
cmc
xor
sub
fstp
xchg
push
cmp
out
repnz
add
jl
xor
xchg
mov
xchg
push
test
adc
sar
pop
add
jmp
or
cld
sub
jmp
xor
bnd
in
stos
nop
imul
lods
cmp
pop
stc
sub
call
push
or
jle
test
mov
into
add
pop
imul
jge
xor
ficomp
and
call
mov
sub
push
mov
inc
neg
outs
ins
ret
mov
mov
or
xlat
pop
and
and
std
aam
in
popa
jmp
call
popa
int
ror
fwait
ins
sbb
inc
iret
mov
ror
sub
imul
test
mov
out
ret
or
sbb
xlat
xor
jl
add
jp
mov
xchg
push
js
xchg
ds
stos
cmc
push
lds
mov
iret
outs
add
cmp
movs
xchg
jl
repnz
ds
popf
xor
aaa
jae
shl
ret
push
loope
add
lods
call
(bad)
pop
sbb
add
adc
mov
call
gs
popf
clc
mov
sub
imul
xchg
inc
fst
(bad)
repnz
in
xor
push
cwde
arpl
add
aam
popa
jecxz
xor
add
lea
cmp
nop
xchg
arpl
inc
call
add
cmps
inc
mov
mov
lock
inc
dec
int3
fsub
push
push
push
mov
call
int3
or
mov
push
sbb
xchg
out
add
lods
into
mov
dec
or
shl
sti
push
pusha
es
push
sub
jmp
std
mov
js
push
icebp
retf
dec
mov
pop
adc
jp
cmp
sub
xlat
std
cld
pop
js
cmp
je
outs
lock
xor
out
cmp
hlt
paddw
(bad)
lods
(bad)
dec
inc
dec
jno
cmps
adc
test
aaa
dec
out
std
jecxz
fs
gs
dec
mov
xor
test
addr16
mov
xchg
div
dec
push
jae
outs
push
inc
fisubr
pop
adc
pusha
mov
fcmovne
jae
mov
push
in
test
jl
adc
js
shl
pop
nop
out
(bad)
retf
jb
aas
and
push
(bad)
jl
ret
stc
fsubr
aas
lock
mov
lds
pop
int3
clc
test
mov
ds
jne
push
ror
cmp
push
leave
sbb
fidiv
cmp
les
not
pop
sbb
int
cld
sub
aas
hlt
sti
dec
xor
fist
and
xchg
fild
or
aaa
mov
repnz
adc
ss
dec
dec
stos
inc
add
scas
loop
clc
mov
lods
(bad)
fdivr
sub
pop
mov
(bad)
push
mov
push
es
mov
mov
imul
(bad)
push
push
xor
jo
sub
pop
and
sbb
pop
pop
mov
outs
leave
push
push
inc
or
pop
cmps
(bad)
fidivr
inc
shr
or
aas
in
push
call
sub
daa
or
ja
inc
sub
or
fst
cmp
add
pop
test
stos
cmps
retf
not
mov
adc
repnz
retf
jl
xor
xchg
mov
or
rol
cmp
outs
adc
cmp
sub
aaa
out
loop
jns
cmp
iret
adc
shr
fcmovnbe
daa
sub
add
adc
aad
int
inc
mov
lea
ret
imul
in
imul
outs
jnp
repz
dec
js
mov
inc
sub
pop
shr
inc
fcomi
es
xor
cld
inc
jmp
movs
clc
dec
neg
xor
xor
xor
int3
pop
(bad)
int
mov
or
mov
lds
sub
std
int3
push
push
mov
xor
aas
test
inc
pop
aas
lock
push
popfw
pop
pop
iret
pop
fsubr
cwde
ret
pop
repz
outs
lods
sti
mov
aas
xor
dec
repz
mov
daa
cmps
mov
push
movs
pop
fst
sub
cmc
mov
es
cmps
push
cmps
add
out
push
jmp
adc
or
test
popf
scas
xor
retf
pop
inc
pop
mov
je
fidiv
popa
sbb
cmp
and
inc
or
and
pop
leave
dec
push
pop
sub
idiv
add
mov
(bad)
or
lock
push
loope
mov
rcr
sub
jo
xchg
inc
pop
hlt
push
ss
mov
xor
pop
push
adc
mov
cli
ret
cs
add
(bad)
(bad)
call
inc
lds
and
push
xor
mov
lds
rep
in
add
push
retf
push
or
mov
cs
pushf
out
sbb
or
cmps
cwde
jo
or
pop
push
pop
pop
das
not
gs
inc
jp
cld
jle
jl
mov
or
ret
cmps
gs
call
call
jnp
inc
or
arpl
jb
mov
xchg
(bad)
stc
push
mov
enter
aaa
or
jecxz
jno
mov
icebp
es
and
cmc
ret
clc
(bad)
pop
dec
adc
sub
pop
or
add
shr
fst
xchg
xor
(bad)
imul
inc
ret
jg
add
sbb
cmps
push
cmp
iret
cmp
push
pop
jb
mov
(bad)
xchg
sub
mov
ds
jne
ins
call
lea
pop
dec
movs
and
or
mov
daa
jnp
das
ficom
pop
sahf
inc
mov
ins
sahf
das
ret
ins
adc
inc
mov
mov
jg
out
(bad)
jge
push
push
add
in
shr
loopne
nop
xchg
lods
fstp
xor
das
lahf
sub
sub
mov
outs
sti
add
and
or
jmp
mov
and
push
mov
aas
sbb
push
push
(bad)
(bad)
(bad)
pop
lea
xchg
aam
pop
aas
outs
and
jge
call
loope
shl
cs
data16
(bad)
inc
daa
out
push
movs
sbb
pop
pop
outs
xchg
pusha
push
and
ficomp
rcr
cmp
lahf
bound
jl
cmps
push
mov
shl
or
dec
gs
jmp
pop
fadd
ds
neg
stos
sub
retf
repnz
scas
sub
fldcw
mov
mov
out
das
and
mov
dec
ret
pushf
scas
mov
push
sub
call
push
sbb
fild
out
ja
out
cmc
xor
jmp
addr16
xchg
inc
lahf
je
mov
aas
dec
lods
stc
mov
arpl
inc
xchg
mov
mov
inc
xchg
push
push
je
push
in
jle
pop
paddusw
dec
leave
outs
push
mov
out
xor
push
or
xchg
push
push
int3
push
fucomi
push
mov
mov
ins
in
std
and
(bad)
daa
in
cmp
lock
push
sti
mov
sbb
in
cmp
je
adc
push
out
mov
jge
aam
test
inc
movs
sub
dec
cmp
sbb
fwait
xchg
sub
and
xor
and
(bad)
push
sti
add
bound
loopne
fst
lds
gs
leave
xchg
mov
into
cmp
push
adc
jb
outs
or
sbb
lods
ja
push
jp
adc
mov
icebp
inc
call
adc
in
pop
mov
stos
xchg
and
scas
ret
retf
xor
push
test
fistp
stc
pop
adc
jmp
add
or
jnp
mov
mov
fxch
or
sbb
jbe
or
xor
mov
aas
or
dec
imul
(bad)
sbb
dec
jp
ja
cmp
xor
je
popa
dec
test
cmp
jo
(bad)
sbb
fwait
push
pop
popa
jne
pop
lods
mov
add
(bad)
dec
loope
aaa
xlat
outs
inc
mov
push
daa
test
std
or
ror
or
push
daa
dec
adc
stc
fisttp
int3
jmp
pop
(bad)
addr16
cld
enter
mov
xor
in
xor
or
bound
or
pushf
mov
xchg
inc
scas
and
inc
mov
rol
imul
mov
cs
cmc
mov
pop
adc
(bad)
mov
fadd
mov
(bad)
cmp
fs
lock
mov
cmps
jmp
adc
imul
fwait
add
in
mov
jg
jmp
pop
test
push
mov
mov
push
and
sub
imul
daa
add
or
or
stos
dec
(bad)
sub
sbb
pop
shl
movsx
aam
cli
je
inc
hlt
outs
fsubp
into
inc
xor
jle
fild
in
repz
pop
nop
lods
push
xchg
mov
scas
(bad)
retf
pushf
adc
sbb
in
rep
jo
clc
xor
mov
xchg
jae
fwait
cmc
gs
push
movs
add
mov
mov
xchg
fild
cs
inc
ror
cmp
inc
ror
adc
mov
and
or
ss
pusha
sti
mov
in
mov
jecxz
mov
cwde
mov
mov
ret
jge
popa
dec
adc
jns
pop
nop
test
hlt
call
ror
sbb
inc
sub
xchg
dec
inc
and
cmp
int3
js
lock
adc
les
sub
in
push
push
in
in
pop
shr
and
rol
cmp
nop
pop
mov
cwde
sub
(bad)
imul
into
xchg
dec
pop
cmps
adc
dec
xchg
ja
dec
inc
xor
jmp
aad
fcom
shl
in
pop
or
jle
pop
jnp
ffreep
add
sub
pop
retf
mov
movs
popf
je
xchg
pop
sbb
pop
sub
mov
popa
xchg
push
push
test
jmp
shl
cmp
sub
push
fcomp
jnp
in
mov
repz
fnstcw
mov
xchg
inc
mov
cld
jg
inc
outs
test
add
outs
pusha
mov
int
rol
mov
add
xor
add
scas
xchg
xor
dec
mov
sub
push
push
pop
adc
adc
(bad)
rcl
dec
xchg
ret
xchg
push
cmp
aas
sbb
sub
ins
mov
dec
pop
inc
ret
or
jne
pop
fsub
pop
aaa
in
or
test
xchg
retf
mov
arpl
shl
or
sub
jmp
sub
add
aaa
sbb
push
pop
or
and
ja
ins
adc
inc
inc
and
adc
jno
push
int
in
test
inc
retf
scas
ja
xchg
cmp
push
dec
imul
les
sti
bound
scas
dec
add
fild
jge
mov
scas
push
dec
into
(bad)
adc
rcl
or
mov
sbb
jle
stc
add
inc
and
test
lock
(bad)
or
push
(bad)
mov
(bad)
jmp
in
xor
int
inc
repnz
xchg
fmul
out
dec
(bad)
gs
mov
(bad)
popf
push
out
out
push
jp
sub
mov
xlat
scas
sub
pushf
mov
jb
(bad)
jle
push
mov
mov
adc
cmps
stos
mov
push
add
mov
adc
out
inc
mov
sub
in
pop
icebp
push
pop
scas
inc
or
(bad)
scas
inc
icebp
xor
movs
daa
jge
movs
cmc
cmp
pop
push
aad
push
jl
xchg
xlat
xor
in
mov
jle
rcl
push
jnp
fdiv
(bad)
aas
(bad)
bound
aaa
xchg
mov
xor
mov
outs
sub
and
lods
out
or
repnz
lods
pop
adc
bound
sub
xchg
pop
adc
popa
ficomp
idiv
jmp
and
cmp
iret
sub
pop
lods
sbb
ins
pop
imul
push
es
(bad)
aaa
daa
aas
xor
lahf
add
add
(bad)
call
test
loope
add
mov
mov
les
push
mul
fadd
jmp
xor
jmp
fiadd
mov
xchg
cs
repz
and
call
(bad)
jle
addr16
test
xchg
jne
aad
fld
cmp
mov
dec
jg
(bad)
pop
xchg
xchg
mov
pop
inc
add
dec
add
pop
mov
jp
push
cwde
movs
or
cs
in
dec
(bad)
pop
inc
mov
pop
out
es
inc
movs
(bad)
mov
or
repnz
sbb
lea
lods
inc
cli
push
dec
ss
cmc
push
push
(bad)
fld
addr16
dec
sbb
inc
std
out
and
aad
cmp
mov
div
jp
outs
mov
aas
adc
xor
adc
mov
sahf
inc
test
sub
js
pop
test
movs
test
jne
xchg
cmps
repz
sbb
aam
dec
in
mov
and
ficomp
sub
(bad)
cmp
add
push
shl
mov
imul
cwde
push
scas
in
xchg
sub
fist
lods
push
(bad)
popa
loopne
mov
cmps
fcomp
inc
stc
test
mov
mov
xchg
mov
cmps
sub
dec
ror
rsm
xchg
mov
pop
out
inc
pop
pushf
cld
mov
push
inc
mov
jle
outs
sbb
adc
xor
ds
lds
loope
xchg
dec
outs
retf
adc
imul
nop
ins
cld
cmps
sbb
cmps
inc
pop
push
cmp
pop
push
xchg
cmp
cmp
and
mov
add
bound
dec
add
enter
fwait
not
add
test
fsubr
inc
(bad)
and
fnstcw
jnp
rcr
aas
dec
test
aad
xchg
iret
mov
push
mov
dec
cs
mov
clc
cmc
outs
adc
xchg
call
sub
jb
sub
mov
and
pusha
inc
push
mov
pop
mov
in
cli
sbb
ss
mov
mov
outs
outs
stos
cdq
popa
stos
out
add
adc
cmp
cmps
aaa
xchg
fidiv
inc
(bad)
sub
test
les
(bad)
and
mov
cld
popa
pop
out
push
mov
xchg
pop
fnsave
dec
push
mov
pop
xchg
xor
mov
call
xor
mov
iret
call
cmps
jns
mov
and
fiadd
cmps
sbb
mov
ins
cmps
test
test
jno
call
shl
cmp
std
pmullw
sbb
hlt
jmp
cli
inc
out
and
shr
jg
fmul
dec
adc
daa
inc
in
pop
jmp
inc
jecxz
jne
dec
call
dec
push
std
sbb
adc
add
and
nop
sub
pushf
add
aam
clc
sbb
xrelease
mov
sbb
ret
add
sbb
mov
jns
mov
mov
fnstsw
cld
cmp
ins
hlt
adc
popf
sub
(bad)
xchg
ret
mov
push
pop
jne
aam
jo
xlat
mov
in
jbe
mov
pop
in
ret
je
dec
shl
push
pop
mov
ins
pop
dec
sbb
pop
int3
(bad)
jae
add
xchg
dec
mov
stos
lods
daa
xor
mov
in
loope
stc
fsincos
sub
pop
xor
shl
call
and
sub
push
fbld
leave
aad
jecxz
cdq
inc
xchg
cmp
popa
push
(bad)
arpl
cli
ins
popa
sti
and
ins
xor
mov
std
or
enter
test
fadd
fisttp
retf
stos
sbb
dec
sbb
es
pop
pop
into
int3
and
push
xchg
or
imul
and
repz
mov
jno
lods
push
cmc
fstp
jl
mov
imul
xor
stc
push
mov
(bad)
mov
mov
mov
add
ins
in
cmp
push
xchg
sar
lods
mov
ror
inc
stos
ja
mov
push
inc
in
mov
outs
xchg
push
pop
in
cmps
stos
dec
in
push
outs
(bad)
mov
pop
ins
dec
push
pop
imul
mov
add
jp
inc
adc
sub
loope
jmp
test
add
mov
xchg
ret
inc
outs
shr
adc
repnz
inc
arpl
cmp
jae
fmul
out
cmps
inc
xor
adc
push
sahf
lds
xor
stos
xor
jns
inc
and
stos
lea
loop
cdq
xor
mov
loop
pop
test
sar
mov
(bad)
loope
dec
add
in
retf
jns
and
or
stos
jmp
adc
push
sahf
dec
into
sbb
fidiv
cmps
je
add
stos
sahf
mov
sub
lods
push
inc
sub
jne
dec
inc
cmp
xchg
outs
jnp
pop
jp
add
popa
or
pop
jae
arpl
adc
lahf
pop
(bad)
or
pop
loope
ds
and
xchg
cmp
(bad)
lods
adc
fwait
(bad)
(bad)
sbb
push
out
jge
add
xchg
aam
cmps
add
mov
fild
sbb
lahf
mov
ss
xor
xchg
in
jb
and
arpl
xlat
mov
sahf
rcr
mov
push
and
sub
fucomip
mov
addr16
adc
out
js
test
int
clc
jp
icebp
imul
push
cmps
(bad)
push
sbb
jle
adc
fst
lods
movs
mov
push
inc
push
or
push
cld
jge
and
push
ins
scas
(bad)
jmp
mov
(bad)
stos
mov
sub
adc
lds
and
outs
dec
mov
icebp
or
mov
and
xlat
in
sbb
xchg
mov
adc
mov
inc
pop
imul
add
mov
cdq
xchg
mov
add
test
data16
fcomp
jecxz
aaa
sub
mov
stos
cmps
mov
stos
and
inc
xor
inc
hlt
aaa
ins
jns
xchg
test
inc
cmp
into
lods
jnp
xchg
sbb
xlat
inc
jno
cmp
xchg
pop
loopne
test
cmp
pop
inc
call
test
test
xchg
scas
ss
pop
mov
pop
mov
dec
sar
clc
sbb
push
in
mov
ins
out
add
ret
sbb
mov
add
test
xchg
ja
mov
movs
jecxz
cmc
xchg
jbe
fs
cmp
add
mov
sahf
push
inc
jae
pop
push
push
pop
cmp
pop
add
jbe
dec
adc
ins
mov
adc
add
adc
inc
cmp
icebp
lahf
jb
xchg
sbb
ja
push
xchg
aaa
dec
jo
lea
push
enter
xchg
in
xchg
push
jae
cld
mov
call
or
cdq
sbb
fisttp
loopne
mov
cmp
dec
mov
and
push
rol
gs
jge
mov
call
scas
xchg
ds
in
and
mov
add
cmp
push
leave
sub
cmc
loop
fiadd
xor
stos
pop
mov
jge
mov
ret
loope
jp
into
cmp
push
loopne
mov
jmp
std
push
and
mov
xchg
pop
and
cwde
cmp
xchg
aas
imul
cmp
pop
imul
mov
lock
mov
or
ins
mov
div
add
imul
lods
and
mov
mov
(bad)
jp
sub
daa
xlat
dec
mov
mov
jl
mov
pop
(bad)
push
xchg
lea
cmps
mov
xor
fwait
mov
fwait
pop
popf
mov
xchg
ja
lahf
lea
mov
and
xchg
pop
sub
and
in
adc
scas
in
mov
jecxz
aas
pop
jge
mov
(bad)
aaa
push
push
adc
imul
call
xor
aas
add
adc
ss
mov
sub
mov
lods
ins
pop
or
rol
jl
xor
gs
scas
inc
in
xchg
jne
xlat
sti
outs
retf
and
sbb
mov
sahf
xor
mov
daa
lds
clc
jge
jbe
push
mov
xor
sub
es
in
leave
cmp
pusha
inc
mov
test
cmp
jae
sub
cmp
test
cmovg
std
sbb
mov
pop
div
mov
pop
outs
bound
inc
dec
jbe
dec
in
xchg
dec
sub
sbb
inc
inc
retf
jnp
dec
mov
dec
xor
test
mov
je
inc
(bad)
aam
sbb
sub
imul
scas
xchg
mov
mov
(bad)
pop
pop
retf
stc
js
loop
lea
inc
add
imul
call
(bad)
adc
mov
arpl
sub
in
mov
xor
jmp
call
push
stc
inc
call
nop
lods
push
adc
jbe
xor
xchg
ror
out
std
scas
and
inc
pop
fs
add
push
movs
jno
fld
out
pop
and
sub
in
xor
cmp
cld
ror
mov
rol
dec
hlt
inc
mov
retf
jbe
sub
(bad)
jb
pop
adc
je
shl
xchg
std
ja
(bad)
stos
cmp
int
aaa
jnp
mov
stc
ror
add
xchg
inc
pop
mov
xchg
xor
scas
and
xor
and
mov
sub
ror
rol
sbb
in
clc
aaa
(bad)
leave
leave
in
inc
cld
clc
xchg
inc
mov
sub
push
and
repnz
stc
ja
icebp
dec
out
adc
aad
mov
and
pop
xor
into
es
pop
iret
rcl
adc
pop
in
and
add
or
jo
fcom
out
inc
inc
push
cwde
add
or
inc
clc
adc
xor
sbb
jmp
scas
movs
sub
test
xchg
aas
loope
mov
inc
rcl
pushf
push
inc
push
popa
mov
(bad)
lock
cmp
or
pop
jmp
fbstp
jo
mov
nop
cs
jnp
jle
je
pop
movs
xchg
adc
icebp
ins
or
xchg
or
jo
fnsave
jae
add
test
mov
push
pop
imul
pop
jge
jbe
inc
sbb
xchg
stos
jmp
or
dec
xchg
add
outs
or
mov
push
gs
dec
loope
into
cmps
int3
push
and
retf
pop
cld
mov
xor
lods
jno
or
adc
cmp
ins
push
stc
sub
fs
popf
pop
pop
into
sub
jae
cli
int
ds
(bad)
addr16
sub
aad
fwait
cwde
enter
jecxz
repnz
inc
add
pop
push
dec
test
loope
mov
mov
mov
rcr
and
fs
fcomp
aaa
push
inc
mov
aad
push
mov
inc
test
fidiv
xchg
push
std
call
cs
add
mov
lods
fistp
int
loope
aam
dec
jmp
es
add
stc
sbb
xlat
fild
mov
enter
call
mov
pop
xlat
repz
jno
pop
mov
(bad)
sbb
mov
lods
sub
mov
dec
sbb
xchg
pop
iret
mov
and
in
mov
or
pop
shr
stos
mov
adc
mov
lahf
pop
cmp
stos
jmp
add
nop
sbb
lods
push
add
xor
push
push
fs
fldcw
jo
jge
cmp
pop
fild
fild
cmps
out
jo
clc
xchg
das
aaa
mov
jmp
fist
leave
push
cmc
jbe
mov
add
adc
dec
loop
xchg
sub
adc
int3
arpl
sub
fdiv
add
xor
or
jno
mov
pop
leave
mov
add
or
out
imul
push
ds
mov
retf
rcl
retf
xchg
lock
add
sub
out
mov
mov
ror
sbb
fcom
inc
inc
mov
cmc
jecxz
add
test
adc
test
cmp
rcr
leave
bound
fcom
push
xchg
std
mov
dec
sub
test
data16
aas
out
inc
and
jmp
fwait
pop
arpl
out
fwait
fwait
loope
js
scas
jp
push
pop
push
sub
sbb
sub
sub
cmp
ret
or
pop
mov
dec
and
mov
cmp
cmps
add
pop
mov
test
jb
or
aad
sbb
cmps
jge
add
pop
test
lock
test
mov
into
rcl
movs
sbb
mov
jecxz
test
xchg
lods
(bad)
enter
fist
ficom
jo
cld
sahf
mov
adc
inc
dec
dec
cmp
test
adc
cmp
jge
movs
adc
mov
jge
dec
and
jnp
data16
jnp
xor
ss
daa
xlat
mov
popa
xor
stos
div
imul
mov
das
jns
mov
xchg
cmp
int3
movs
leave
enter
push
popa
inc
jno
bound
mov
leave
imul
outs
sbb
fdiv
leave
jecxz
inc
js
adc
(bad)
xchg
pop
push
pop
jbe
test
xchg
pop
fwait
push
out
inc
pusha
xor
dec
sub
sub
xor
mov
mov
add
push
push
ror
pusha
push
inc
pop
xlat
or
push
push
and
loope
movs
rol
call
mov
pop
pop
and
mov
ds
dec
rcr
or
aam
cmp
or
out
imul
into
and
ds
ja
xchg
xor
xchg
(bad)
dec
pop
or
loop
test
or
xor
add
inc
and
ret
inc
(bad)
jmp
add
xchg
sub
imul
in
out
add
addr16
xor
cmp
jmp
and
sub
sbb
jbe
and
ins
mov
ficom
xchg
stos
adc
mov
pushf
jmp
je
add
lock
idiv
and
nop
cmp
push
inc
cli
(bad)
stc
cdq
call
sbb
pop
add
ror
add
adc
bound
imul
adc
addr16
cmp
push
xchg
lahf
push
out
fs
pop
cmc
inc
adc
dec
jmp
mov
das
jmp
ds
jnp
jl
mov
nop
fadd
cmp
inc
add
inc
xlat
sub
or
mov
add
popa
ins
cdq
lock
faddp
in
js
mov
xchg
xchg
leave
mov
mov
push
dec
dec
es
pusha
dec
mov
mov
jbe
sbb
bswap
mov
xchg
gs
cmp
fucomip
ja
pop
mov
jle
add
sahf
jge
outs
or
arpl
jo
cmp
sbb
mov
cmp
adc
cmps
adc
fistp
mov
xor
stos
add
and
das
div
push
movs
scas
dec
retf
mov
ss
jge
daa
sbb
sahf
stos
ficomp
mov
retf
mov
xor
pop
cmp
xor
mov
pop
and
ins
xor
jl
cmp
aam
inc
lahf
ja
(bad)
test
xchg
les
jns
xchg
(bad)
sbb
push
mov
jle
pop
jmp
push
lods
mov
jns
inc
popa
push
mov
in
cmp
or
(bad)
push
rcr
in
in
(bad)
ins
int
or
sbb
jo
je
mov
xchg
adc
inc
loope
mov
loopne
jno
sti
xor
out
xchg
loope
fcomp
lock
mov
inc
xchg
sub
inc
xchg
cmps
test
mov
out
leave
aam
cld
mov
add
les
push
xchg
test
mov
sub
sub
cwde
ins
mov
lds
aad
lods
in
and
iret
pop
xor
out
or
cdq
sbb
stos
fs
outs
rcl
adc
push
shl
fucomip
ss
mov
aas
inc
fiadd
xlat
daa
mov
xor
mov
imul
sti
mov
sub
xchg
or
shr
jno
hlt
test
xor
test
cli
imul
add
dec
mov
inc
in
pop
mov
cmps
lock
fist
or
mov
rol
jmp
mov
inc
(bad)
sbb
jae
xchg
fbld
jno
out
fisttp
sahf
jecxz
mov
fiadd
out
daa
fbld
out
dec
test
dec
pushf
in
int3
mov
xchg
cwde
and
push
(bad)
leave
mov
aas
adc
call
mov
add
jb
push
stos
mov
pop
push
inc
rcr
push
sti
icebp
jbe
xor
loopne
sub
adc
in
out
or
jo
dec
iret
mov
mov
retf
and
adc
push
es
mov
arpl
push
sbb
repnz
pop
sub
cmc
pop
add
xor
adc
push
mov
mov
es
inc
jmp
xor
in
js
(bad)
xchg
xchg
mov
or
and
xchg
mov
ss
pop
push
sbb
pop
les
(bad)
ss
add
mov
pop
push
mov
mov
aaa
test
mov
repnz
out
movs
outs
cmp
call
dec
imul
ret
ins
cmps
and
int
sbb
jg
sub
arpl
lods
loop
pop
hlt
add
jmp
dec
(bad)
jp
popf
mov
pop
add
icebp
cmp
ss
mov
lods
sbb
(bad)
jno
pusha
xor
pop
jecxz
imul
mov
dec
jb
jb
es
gs
mov
push
adc
dec
xor
add
std
pop
bound
jnp
mov
fild
sti
and
xlat
mov
leave
sahf
fmul
lea
adc
(bad)
rcr
mov
sub
dec
add
pop
xchg
shl
jmp
mov
dec
cmp
pop
out
int3
nop
into
lahf
mov
xchg
sub
push
pop
pushf
cmp
xor
push
std
mov
fidivr
sub
add
inc
lods
nop
inc
push
xor
mov
push
mul
adc
fwait
nop
jmp
cmp
retf
adc
fsubp
ror
jnp
fdivr
and
pop
pop
aaa
mov
scas
fistp
pop
push
retf
cmps
sbb
cmp
jmp
ss
mov
xor
test
(bad)
es
xor
mov
or
std
loopne
jno
and
or
jge
and
pop
adc
cmp
and
xchg
out
fwait
add
in
jne
fdivr
arpl
rcl
mov
fld
and
pop
and
push
xchg
mov
sub
int
repnz
(bad)
push
loopne
mov
push
repnz
scas
mov
mov
(bad)
movs
adc
fnstcw
jmp
leave
mov
sbb
pop
js
mov
jmp
int
jae
fisttp
les
into
pop
pop
mov
ret
call
pop
mov
mov
xchg
xchg
dec
sbb
add
push
fimul
mov
call
sub
sub
pop
mov
inc
loopne
fiadd
pop
iret
lahf
fdivr
lods
pop
in
inc
lahf
cvtps2pd
dec
lods
or
dec
movs
aad
test
push
dec
mov
xor
test
pushf
push
xor
inc
push
sub
psubusb
dec
inc
loop
pusha
mov
pop
test
jge
in
mov
js
fs
xor
fbld
inc
jmp
shr
jbe
fistp
jne
test
out
jmp
mov
add
adc
(bad)
push
ret
in
xor
xor
push
mov
jle
aaa
ret
pand
pop
iret
push
mov
retf
push
xchg
sbb
cli
mov
push
mov
jmp
jge
scas
xor
cmp
bnd
inc
mov
xchg
fild
mov
mov
lahf
dec
sahf
cmp
inc
mov
and
sub
mov
add
fdivr
xor
sbb
loopne
out
arpl
cmp
out
stc
sbb
pop
sti
mov
jo
test
shl
fdiv
fisubr
mov
xor
fld
fild
add
jecxz
or
xchg
lahf
pop
cli
popf
fidivr
and
mov
ins
test
icebp
mov
mov
sub
dec
jo
clc
mov
pop
into
stos
aam
fsubr
cmps
icebp
sub
ins
in
stos
xchg
sub
pop
cli
pop
xchg
gs
mov
add
xchg
push
pop
out
pop
and
(bad)
(bad)
push
xchg
cmp
sbb
pop
pop
fdivr
sbb
fiadd
sub
ins
pop
test
sbb
cmp
scas
inc
test
outs
mov
je
mov
sub
dec
pop
xor
inc
loop
mov
mov
mul
aaa
pop
shl
mov
(bad)
lods
jmp
mov
test
mov
ret
inc
fdiv
mov
cld
cmps
jmp
xor
pop
fadd
jae
jnp
mov
inc
xor
aad
push
dec
sbb
inc
adc
jae
mov
cmps
dec
inc
test
sbb
rcr
loope
dec
call
outs
mov
mov
sub
inc
out
repz
sub
mov
inc
ja
cmp
or
adc
loopne
scas
movs
iret
loope
rcr
add
in
sahf
adc
arpl
or
inc
nop
jnp
dec
(bad)
mov
sub
sub
shr
or
cdq
dec
mov
pop
sub
mov
fcmovne
xchg
out
ds
cs
add
jecxz
xor
fs
test
popa
add
fistp
mov
cmps
fidivr
outs
jmp
popa
retw
jge
pop
mov
(bad)
xor
repnz
jle
idiv
xchg
mov
stc
push
adc
pop
inc
mov
fstp
cmc
imul
popa
adc
xchg
xchg
cwde
adc
pop
jne
mov
fisubr
cmc
movs
mov
inc
daa
pop
frstor
aas
call
inc
cmp
jns
lock
mov
xchg
xor
hlt
retf
imul
repz
(bad)
es
aam
push
imul
xor
fs
jl
clc
mov
xor
or
push
add
or
jecxz
push
cmps
adc
out
imul
and
cmp
add
mov
mov
scas
icebp
gs
and
std
fnstsw
loopne
push
jmp
(bad)
ja
xor
out
pop
cdq
vsqrtps
xor
xlat
xchg
mov
sbb
imul
add
dec
inc
dec
stos
jmp
jb
dec
pop
or
in
ss
cld
add
call
and
xchg
retf
pop
xchg
push
js
xchg
mov
inc
nop
xor
pop
outs
pushf
jge
sbb
and
adc
push
push
bound
pop
cmps
sub
not
jle
shl
ja
xchg
pop
push
cld
dec
or
add
ja
jl
adc
dec
mov
push
fidiv
push
rcr
or
jg
lea
sub
push
popa
arpl
dec
je
inc
ins
aaa
(bad)
jns
add
jg
xchg
lahf
mul
mov
dec
inc
jae
fsubp
mov
or
fsub
dec
rol
or
ja
dec
push
push
test
xor
pop
ja
or
mov
mov
popf
pusha
(bad)
ins
mov
sbb
cmp
xor
jb
or
test
pushf
jp
and
scas
jle
repnz
ficomp
mov
and
cdq
push
repz
mov
adc
ror
cmp
into
or
dec
mov
xor
jp
ins
std
inc
or
xchg
xchg
shl
aaa
stc
sar
ficomp
cmps
popa
and
sbb
imul
jns
aam
dec
sub
sub
imul
movs
sub
aas
push
pop
std
adc
jmp
cs
jmp
xchg
movs
jg
cmps
xchg
dec
jle
push
(bad)
pop
inc
int3
push
ja
or
fiadd
dec
sbb
xor
lock
cmp
add
dec
ss
jle
imul
(bad)
xchg
pop
lea
xchg
(bad)
call
mov
and
popf
sbb
test
imul
jle
(bad)
addr16
outs
loop
ss
out
mov
cmp
xchg
sub
adc
std
pop
sbb
ins
hlt
sbb
pop
push
aaa
aam
loopne
add
addr16
cmp
(bad)
xor
push
xor
pusha
sti
jmp
fimul
and
lahf
jl
das
aam
cmps
inc
stc
push
sar
ret
inc
cmp
mov
mov
mov
mov
sar
out
mov
sub
imul
mov
mov
sbb
cli
jb
xor
xchg
and
mov
jbe
mov
repnz
repz
or
dec
sahf
cld
loop
sbb
movlps
ficomp
jb
pusha
(bad)
out
cmp
outs
cmp
dec
mov
int3
iretw
or
mov
dec
adc
mov
fwait
scas
dec
jl
cld
es
dec
add
sbb
sub
ret
and
cmp
pop
std
lds
ins
rol
rcl
xchg
xchg
in
pusha
pop
imul
inc
xchg
adc
int
sbb
test
mov
mov
and
popa
push
outs
and
sbb
mov
mov
jge
sbb
outs
mov
out
jae
es
adc
jo
fwait
and
mov
pop
mov
ret
push
punpckhwd
mov
mov
aam
ror
retf
or
sub
inc
add
mov
sub
pop
mov
xor
adc
jns
dec
aad
jl
repnz
push
dec
sub
fwait
das
push
dec
sti
les
adc
xchg
pushf
cmp
ds
test
dec
fiadd
pop
pop
mov
arpl
scas
or
mov
adc
clc
mov
scas
pop
mov
adc
and
cld
jno
call
dec
jmp
outs
pop
inc
cmp
stc
sbb
ja
mov
xchg
xor
clc
add
ins
jno
imul
aad
sbb
pop
xchg
or
ja
int3
and
xchg
lea
(bad)
loop
sahf
bound
jns
fmul
aas
dec
mov
in
push
push
jmp
cli
add
push
mov
cmps
cmp
(bad)
rcl
and
mov
pop
popf
push
clc
stc
rcl
ins
cmp
mov
mov
inc
pop
mov
jo
jp
or
sar
jae
cs
(bad)
sahf
out
out
adc
sbb
test
leavew
mov
daa
out
das
sub
mov
dec
mov
ds
xchg
jg
and
pop
add
das
cmp
push
ret
int
in
jbe
cmp
sahf
sbb
cmps
movs
(bad)
mov
or
sub
jge
popf
jl
pop
call
push
js
mov
loope
jmp
scas
je
sbb
stc
jle
repz
dec
lods
cmp
imul
pop
and
retf
mov
dec
dec
push
and
mov
in
sar
sub
push
xchg
xor
sbb
mov
jno
fwait
mov
xor
adc
sbb
aad
xor
pop
das
jb
mov
sub
in
stc
call
and
push
into
mov
(bad)
clc
xchg
jle
push
mov
fldenv
std
sub
gs
or
push
shl
(bad)
repnz
add
push
mov
fcom
xchg
call
mov
adc
add
(bad)
sbb
sbb
stos
dec
mov
jnp
mov
nop
adc
jmp
fwait
pushf
dec
leave
lahf
dec
imul
pop
cmp
cld
ds
mov
mov
or
mov
sub
dec
fistp
jecxz
or
cmp
sub
data16
lea
sub
cmp
in
ds
inc
pop
(bad)
jg
cmp
in
lea
std
ret
jno
retf
mov
cmps
shl
ss
out
fwait
mov
cmp
js
rep
scas
imul
add
les
xor
icebp
fisubr
in
cmps
cmp
and
push
mov
pop
push
shr
jno
(bad)
jg
and
stc
fist
pop
and
dec
out
fdiv
xor
dec
xor
xlat
neg
sbb
loope
xchg
dec
out
dec
pusha
not
pushf
mov
enter
rol
xor
pop
ins
std
xor
scas
lock
add
or
cmp
ret
retf
push
out
fstp
shl
mov
cdq
clc
loope
xchg
movs
xchg
xchg
js
xor
inc
inc
jb
fcomi
fist
push
push
mov
mov
pop
push
jb
sti
loop
dec
cs
xchg
loope
push
mov
add
jns
mov
xor
test
pop
pop
adc
push
test
xor
push
cmps
dec
sub
test
adc
ss
inc
mov
stos
daa
enter
(bad)
test
shl
inc
xor
jne
std
arpl
loop
dec
cmp
push
jae
scas
push
inc
xor
sahf
loop
(bad)
sub
repnz
pop
adc
xchg
into
retf
sub
adc
test
pop
mov
lods
dec
cmp
ss
mov
loope
shl
push
scas
pop
lea
mov
xchg
ss
dec
sub
jmp
jecxz
clc
sbb
adc
int3
test
and
in
push
iret
adc
shl
jmp
xchg
int3
sbb
mov
call
cmp
jns
sbb
cmp
pop
pop
sbb
imul
xchg
xor
aad
or
jo
(bad)
inc
ficom
adc
cmp
sub
sbb
add
add
int
cmp
xor
push
mov
aaa
adc
xchg
xchg
loop
aam
cmps
aaa
inc
das
adc
inc
pop
xchg
mov
(bad)
cmp
cmp
mov
add
nop
int
inc
mov
xlat
sub
push
mov
xchg
in
out
mov
xchg
ds
cld
mov
cmpxchg8b
(bad)
int
cmp
cmp
es
and
lock
mov
jl
dec
jno
call
daa
mov
adc
lea
fld
add
test
or
leave
aas
imul
or
add
adc
xlat
dec
ins
lock
mov
dec
push
arpl
jge
icebp
mov
add
cmc
(bad)
out
cli
fsub
gs
pop
out
aas
inc
inc
out
jmp
or
int
(bad)
cdq
shl
xlat
xchg
jle
fiadd
dec
fdivr
ret
mov
lock
or
popa
pop
call
cmp
mov
outs
neg
mov
in
sar
xor
push
mov
dec
(bad)
mov
adc
loopne
repnz
mov
mov
sbb
jle
inc
loop
outs
jecxz
ja
movs
add
xchg
or
xlat
jbe
enter
push
leave
add
ret
or
daa
sub
in
inc
inc
adc
sbb
pop
into
sbb
dec
addr16
(bad)
out
clc
repz
xchg
dec
cmp
sbb
push
jmp
(bad)
jmp
stc
mov
(bad)
pusha
js
in
pop
cmps
das
(bad)
fdiv
lods
bound
(bad)
jecxz
cs
movs
in
xchg
xor
repnz
add
rcl
rol
fcomp
loop
xchg
fisttp
mov
test
mov
iret
xchg
pop
mov
call
dec
and
mov
xchg
and
aas
inc
add
sub
nop
and
mov
int3
imul
xor
push
addr16
js
add
dec
fimul
bound
hlt
xor
pop
test
int3
dec
sbb
test
sub
pop
xor
mov
retf
push
retf
enter
jmp
cmp
repz
mov
inc
sbb
dec
lahf
dec
jmp
stc
xchg
mov
in
(bad)
inc
pop
(bad)
ss
xor
je
cli
ins
cmc
xchg
mov
stos
sbb
out
push
xchg
xor
popf
jl
sbb
(bad)
jmp
jnp
push
and
iret
pop
rol
jg
xchg
xor
fcomi
sbb
and
maxps
push
add
push
retf
jae
and
stos
jmp
cli
mov
call
mov
mov
dec
sub
outs
push
mov
out
xchg
cmp
xlat
outs
mov
cwde
xchg
mov
(bad)
push
adc
scas
cli
xchg
out
sbb
jnp
inc
fadd
ds
fcom
aam
std
mov
push
ror
push
xchg
out
jns
mov
xlat
call
dec
inc
loop
jnp
cmp
xchg
pushf
add
mov
mov
jnp
test
icebp
mov
mov
push
neg
movs
add
or
fimul
out
or
cs
push
pop
gs
scas
pop
cmp
addr16
adc
test
int3
and
and
dec
pop
pop
or
mov
mov
pop
jge
outs
add
aam
xchg
push
mov
outs
jne
mov
ss
or
jle
xchg
push
rcr
xchg
and
sar
inc
scas
aas
fcom
fdiv
jmp
cli
dec
jmp
xchg
sbb
rcl
pop
dec
xchg
ins
sahf
dec
ret
and
shl
or
jge
repz
mov
and
popf
mov
sbb
xchg
ret
outs
psllw
xchg
addr16
and
pop
movs
fisttp
cmc
xchg
inc
mov
enter
sbb
pop
lods
xchg
cld
stos
retf
ret
js
ins
lods
rcl
cmps
ins
xchg
loopne
int3
scas
das
jl
dec
cdq
nop
push
(bad)
mov
push
or
jge
mov
xor
lods
add
mov
jo
clc
xor
and
pop
sub
ficom
jecxz
cmp
(bad)
lods
push
push
inc
jg
push
int3
add
dec
ins
mov
ror
mov
pop
xchg
and
inc
adc
in
sub
add
and
mov
push
xchg
jl
pusha
jne
(bad)
xlat
fwait
mov
pop
inc
lods
js
mov
test
test
or
mov
or
push
ds
fs
push
fwait
icebp
daa
mov
inc
out
enter
push
daa
xor
cmp
xchg
inc
in
out
shr
ret
inc
xor
pusha
je
mov
(bad)
mov
sub
cdq
mov
mov
dec
xchg
ror
imul
cli
mov
fidivr
and
xlat
imul
mov
retf
sub
pop
or
jbe
call
adc
pusha
push
outs
or
test
mov
es
adc
ds
push
sub
out
jb
mov
cmc
movs
mov
mov
cli
out
push
(bad)
(bad)
push
scas
xchg
xchg
sbb
push
or
add
jle
jmp
bndstx
ins
jge
sar
sbb
stos
dec
lea
xchg
inc
enter
(bad)
or
dec
js
(bad)
mov
jns
add
mov
adc
inc
test
fcom
xor
pop
add
xchg
out
inc
sahf
addr16
js
xchg
sub
cmps
jmp
ss
xchg
fsubr
je
jo
cdq
ds
mov
xchg
mov
icebp
inc
mov
data16
push
adc
sbb
idiv
out
stos
inc
xchg
leave
cld
daa
xchg
arpl
lods
cdq
mov
call
icebp
cmp
scas
and
(bad)
iret
xchg
xor
stos
jbe
dec
dec
cdq
sub
fiadd
ins
xbegin
fwait
cmp
and
repz
sbb
and
pop
sbb
rcr
js
jmp
mov
shr
pop
sbb
jnp
or
pushf
mov
add
pop
mov
fdiv
ja
or
test
push
jno
mov
jbe
adc
mov
xchg
pop
mov
inc
push
sub
pop
push
fwait
iret
jnp
jnp
pop
or
sub
pop
inc
pop
test
xchg
xor
and
dec
adc
mov
sub
lods
fstp
mov
cmp
adc
jecxz
push
mov
sbb
jae
outs
test
outs
(bad)
popf
and
mov
push
dec
push
push
adc
pop
or
cmp
shl
repz
js
pop
ja
xor
push
call
adc
addr16
rcr
add
test
xor
sar
cmp
icebp
int3
into
mov
arpl
xchg
cwde
mov
lea
mov
loope
or
clc
ja
enter
fwait
sbb
(bad)
in
and
xor
(bad)
mov
cmc
retf
loopne
out
add
mov
adc
cli
mov
fadd
mov
add
and
loop
imul
sub
jne
cwde
addr16
xchg
mov
inc
call
jg
jg
jo
cmc
sub
shl
or
jne
sar
xchg
push
pop
lahf
sub
inc
sbb
push
fstp
aaa
pushf
dec
lahf
jns
adc
or
jns
lods
xor
dec
loop
pop
stc
mov
mov
cld
out
xchg
(bad)
sahf
cmps
and
imul
shr
mov
lahf
test
into
push
cmp
sahf
or
xchg
sub
push
mov
add
cdq
jmp
popf
in
stc
pushw
sar
xchg
push
jl
fadd
sub
add
out
int
call
fldenv
sbb
(bad)
jmp
xor
out
add
call
lods
jl
and
push
fild
jg
jnp
sbb
pop
gs
jo
xchg
nop
fwait
mov
dec
movs
pop
sti
or
and
mov
inc
pop
fisubr
add
adc
sub
and
(bad)
mov
mov
ds
fcom
das
adc
aam
dec
in
push
push
call
in
mov
adc
mov
rol
push
push
dec
jle
sub
mov
mov
mov
idiv
stos
jecxz
or
inc
ins
(bad)
rcr
es
push
ins
cwde
push
enter
xor
add
pop
pop
sbb
sub
xchg
fdivr
adc
push
dec
lock
loop
stos
bound
into
sbb
lds
retf
or
popf
pop
push
mov
popa
jo
mov
pop
adc
cmp
bound
or
je
cmp
(bad)
loope
fild
icebp
movs
xor
arpl
sbb
inc
cmps
jae
outs
rcl
add
and
mov
call
movs
out
int3
hlt
retf
mov
scas
popf
daa
ja
dec
dec
sti
out
adc
jno
mov
out
cmp
js
pop
add
pop
adc
cmp
sbb
popf
adc
add
mov
outs
adc
mov
cwde
add
push
call
scas
or
(bad)
outs
mov
mov
movs
ret
stos
cs
lea
pusha
rcl
aaa
mov
sahf
mov
adc
clc
jmp
dec
es
scas
lock
in
mov
cmps
sbb
push
pop
xor
xchg
hlt
dec
xor
pop
lods
mov
fwait
mov
pop
lea
add
sbb
leave
or
add
push
push
push
add
dec
gs
int3
(bad)
leave
loope
dec
sti
cmp
push
or
jns
pusha
adc
jb
arpl
int3
es
xor
sbb
sub
xchg
arpl
add
push
int3
mov
push
lock
push
fisub
jne
(bad)
pop
fldcw
loop
retf
and
push
retf
outs
xlat
std
repz
xor
cmps
cmps
or
loopne
mov
popa
or
gs
push
xor
xchg
loope
lea
pusha
push
fnstsw
adc
call
cs
popw
gs
add
add
cmp
and
ds
lahf
test
jmp
add
fs
int3
inc
pop
inc
pop
inc
mov
sbb
dec
sbb
iret
imul
icebp
test
imul
mov
mov
ins
adc
push
call
popf
and
adc
rol
adc
ins
xor
or
jne
jmp
fidiv
arpl
stos
fisubr
mov
adc
into
scas
stos
sub
push
out
sahf
pop
inc
fsubr
cmc
or
jno
dec
aad
push
and
les
and
(bad)
rep
call
sub
push
sub
mov
leave
into
test
jno
std
and
sti
fucom
outs
xchg
bound
mov
aad
jg
push
xchg
repz
adc
jnp
popa
add
sub
add
test
pop
xor
jo
sbb
jmp
inc
retf
cmp
repnz
js
adc
adc
fwait
leave
xchg
call
lahf
stos
cmps
xchg
loope
xchg
adc
repnz
add
rol
out
xor
loopne
pop
push
sub
hlt
leave
mov
or
cmp
pop
mov
rcl
xlat
jmp
jg
jl
dec
xchg
adc
mov
shl
add
and
mov
jb
push
test
pop
jae
xor
cmp
rol
jo
stos
add
hlt
jae
inc
lods
xchg
gs
xor
div
clc
add
les
icebp
xchg
imul
mov
xor
(bad)
pop
pop
pop
arpl
mov
pushf
retf
mov
fwait
mov
hlt
mov
mov
push
scas
out
sahf
and
call
cmps
es
add
inc
(bad)
jb
btr
clc
or
mov
mov
mov
pop
icebp
and
dec
jmp
inc
loopne
(bad)
pop
adc
pop
popf
pop
cdq
mov
(bad)
xor
(bad)
cwde
dec
idiv
push
lods
jl
sub
mov
xchg
jb
call
cmp
jmp
cmp
(bad)
imul
push
mov
push
xor
imul
or
mov
not
lea
pop
inc
js
(bad)
cmp
shr
lds
xor
mov
fsub
cmp
add
or
xor
mov
jbe
sbb
lea
lods
xchg
inc
shl
or
dec
mov
scas
push
push
inc
popf
xor
pop
pop
push
aaa
push
mov
add
pop
imul
adc
rcr
int3
outs
jb
cmp
inc
arpl
dec
out
in
xchg
inc
fld
test
or
jmp
nop
sub
push
mov
repz
dec
arpl
inc
test
scas
mov
add
imul
xor
and
aad
dec
daa
mov
jne
xchg
repnz
cmp
mov
cwde
popa
daa
icebp
pop
cs
sbb
rcl
cli
div
test
sbb
inc
sbb
int3
add
mov
ret
jl
std
add
sbb
xor
lods
inc
test
mul
shl
addr16
call
xchg
loop
popa
retf
ficomp
shl
xchg
enter
pushf
and
retf
ret
xor
xchg
jns
iret
adc
inc
push
outs
adc
jno
sub
mov
jle
lea
aaa
or
xchg
dec
xor
xchg
out
cdq
rcr
(bad)
jb
sub
adc
xor
pop
(bad)
cmp
push
cmc
into
jecxz
sbb
movs
fistp
addr16
xlat
lea
js
push
jae
sti
sbb
cmp
inc
stos
pop
xchg
sub
repnz
sbb
xchg
loope
call
mov
stos
pop
mov
mov
gs
cmc
xor
mov
imul
dec
paddusw
pop
and
outs
sub
mov
xor
adc
cmp
dec
jge
retf
ds
adc
or
inc
mov
loope
sar
js
mov
push
mov
mov
aaa
sbb
(bad)
clc
push
shl
iret
jb
pusha
scas
bound
xchg
xchg
shl
xchg
aad
lock
push
loopne
ret
mov
mov
je
adc
out
ins
sbb
jbe
test
xor
cmp
sub
and
clc
xor
xor
int3
xchg
or
lea
bound
add
cmp
daa
jp
dec
jns
(bad)
in
call
adc
fidivr
(bad)
sub
or
sti
mov
sbb
repz
es
test
dec
xchg
call
dec
movs
hlt
shl
jp
aam
pop
sub
push
sbb
jmp
or
aaa
mov
push
push
mov
add
scas
push
xchg
stc
sbb
xchg
xchg
add
cmps
imul
dec
(bad)
jp
out
push
adc
shl
dec
test
jge
cmp
loope
cmps
test
rol
push
test
push
xchg
or
or
popa
add
and
add
lods
inc
mov
clc
and
cwde
out
mov
les
cmps
(bad)
cs
ret
or
sbb
add
adc
jge
imul
adc
mov
mov
cmp
inc
fbstp
mov
xchg
dec
mov
add
add
out
dec
lea
and
aam
xchg
mov
and
add
fistp
sub
push
repz
mov
push
imul
fld
in
and
dec
xor
cdq
out
fld
ins
and
sub
xchg
dec
mov
xchg
repz
inc
pop
js
repnz
aaa
or
imul
popf
adc
xchg
push
jae
in
imul
xchg
fsubr
frstor
test
cmp
dec
test
int
in
push
imul
pop
(bad)
aad
cmp
stc
int
mov
and
int
out
cmps
gs
push
mov
mov
popf
js
dec
test
movs
inc
pop
pop
jge
xchg
mov
jmp
jns
fwait
dec
xchg
sub
jbe
loopne
stos
pop
and
movs
neg
(bad)
cld
mov
pop
adc
je
jnp
push
(bad)
pop
jp
jl
pop
dec
(bad)
sub
pop
mov
push
addr16
jnp
dec
mov
or
ror
mov
pop
mov
out
xchg
jne
push
jmp
sbb
and
cmp
push
scas
nop
cmc
lods
mov
mov
mov
xor
arpl
mov
mov
enter
cmp
dec
cli
sbb
mov
les
add
(bad)
lock
fdiv
add
inc
mov
mov
loop
out
ret
pop
aas
push
daa
outs
pusha
ds
or
sub
sub
daa
ins
hlt
les
dec
jae
fcmovnbe
sub
mov
cmp
pop
sub
mov
mov
cmp
sbb
xchg
adc
popa
cmp
and
ffree
jns
daa
fild
ret
enter
test
leave
fistp
mov
pop
and
sahf
sub
ret
or
cdq
inc
adc
ins
adc
out
cmp
lea
(bad)
fs
xchg
jecxz
ins
xchg
push
sub
jb
popf
sub
inc
sahf
sub
mov
test
sub
mov
inc
cs
out
in
test
dec
xchg
push
mov
mov
cmps
into
cwde
outs
movs
sar
mov
out
rcl
jmp
cmp
inc
push
xchg
or
mov
dec
(bad)
sub
adc
jo
shr
ja
jno
mov
sbb
adc
jne
dec
pop
fbstp
jle
call
sub
and
xor
inc
jae
sub
addr16
sbb
cmc
pop
mov
xchg
add
xlat
sbb
cwde
rcr
dec
loop
rcl
adc
std
(bad)
mov
scas
xchg
pusha
jmp
mov
inc
and
popf
mov
pop
call
inc
jge
dec
shr
cmp
cmp
adc
adc
loopne
pop
xor
inc
pop
sti
les
inc
jl
or
es
mul
jl
lock
arpl
sub
in
lea
cs
es
or
pop
daa
mov
mov
(bad)
push
and
mov
imul
dec
std
and
cmps
xor
gs
jo
sbb
clc
add
scas
fs
shl
xchg
aas
add
xchg
pop
sbb
push
add
bound
or
adc
(bad)
ficomp
popa
mov
xor
mov
cmp
mov
xor
hlt
in
and
dec
call
mov
mov
(bad)
fmul
xchg
mov
dec
adc
popa
add
scas
fs
pop
cmp
cmps
std
and
mov
mov
mov
or
fadd
out
gs
push
sbb
jl
cmps
sub
or
movs
xchg
into
movs
mov
call
repnz
mov
jbe
jo
out
sub
mov
test
fsub
lea
sub
dec
fdivr
sub
mul
(bad)
in
fimul
ret
pop
xchg
cmp
popa
int
call
jno
cs
mov
das
inc
jnp
jmp
inc
inc
ja
xor
sar
call
mov
fidiv
outs
jg
je
mov
fdiv
(bad)
mov
mov
xchg
fcomp
jle
lahf
sahf
mov
or
adc
cmp
test
xor
inc
mov
mov
mov
inc
sub
xlat
adc
das
fucom
pop
nop
sahf
mov
aaa
pop
add
xchg
mov
pushf
sbb
jno
mul
mov
dec
in
ret
pop
sub
or
jae
jecxz
xchg
mov
popa
pop
dec
mov
(bad)
xchg
popa
scas
gs
jmp
xchg
retf
sub
imul
adc
cdq
dec
rol
adc
addr16
dec
test
jp
mov
sahf
(bad)
cwde
inc
cld
add
call
into
add
cwde
cmp
adc
das
ja
inc
ja
in
sahf
cmp
lea
xchg
repz
inc
jge
push
fwait
jb
mov
add
cmp
lock
adc
dec
mov
and
mov
add
neg
sahf
sbb
pop
sub
mov
into
dec
mov
and
inc
jle
jb
stc
and
or
and
jle
adc
in
hlt
cmp
repz
cdq
ds
lahf
jno
push
addr16
pop
and
call
ins
(bad)
sti
mov
push
xchg
or
inc
sub
scas
xor
mov
repz
and
xchg
mov
add
frstor
ror
imul
cmp
push
pop
loopne
cld
lea
(bad)
jmp
sub
imul
out
push
cdq
inc
pop
and
sahf
xchg
cmps
pop
pop
mov
add
mov
sbb
dec
adc
push
and
mov
and
xchg
adc
shl
ret
movs
xor
xor
sahf
scas
push
sbb
adc
pop
ss
in
or
mov
lods
push
hlt
outs
imul
mov
xlat
(bad)
js
fld
popa
or
mov
sbb
push
mov
inc
sbb
add
inc
pop
xor
int
xlat
in
movs
iret
pop
sub
pop
sti
call
fild
outs
and
test
push
mov
or
or
inc
lea
call
cmp
pushf
pand
adc
cmp
jle
hlt
push
stos
jmp
jbe
push
test
data16
mov
cmp
mov
lock
push
test
in
mov
lods
pop
or
js
jbe
out
call
loope
rcl
sar
mov
add
js
fst
xchg
add
cmps
pop
int
pop
popf
xor
xor
cs
in
int3
jns
pop
xor
ins
pop
stos
mov
jns
sub
in
push
ss
or
shr
cmps
sub
adc
call
gs
sbb
cmp
xchg
fs
sub
and
in
pop
ja
or
daa
jmp
mov
sti
push
in
sbb
mov
ins
mov
fucomip
jg
fnstcw
jno
and
test
or
loop
sar
(bad)
sbb
out
loopne
cmps
mov
call
push
int3
loope
mov
imul
test
xor
je
push
dec
jmp
in
movs
mov
lds
out
push
int3
dec
in
sub
sub
sbb
sbb
xor
mov
xor
lahf
int
xchg
not
addr16
inc
(bad)
out
jge
imul
std
dec
in
or
into
mov
test
pop
addr16
mul
sbb
fisttp
xchg
pop
rcl
addr16
xchg
pop
dec
loop
pushf
mov
mov
lods
aaa
inc
(bad)
jne
movs
lods
(bad)
add
and
inc
hlt
arpl
sahf
daa
inc
aad
in
inc
adc
jo
and
mov
xchg
dec
popf
movs
stos
dec
sbb
cs
ret
out
cmp
fistp
adc
fistp
nop
dec
add
pop
(bad)
cmp
test
jne
pushf
scas
shr
inc
daa
push
out
out
pop
dec
inc
inc
movs
sti
test
jnp
or
cmp
xchg
ins
mov
pop
int3
loope
cmps
dec
sti
outs
fist
cmp
repz
shl
sahf
and
cwde
ja
cdq
or
cmp
clc
jl
cmp
cmp
sbb
arpl
stos
pop
lea
(bad)
sub
(bad)
outs
out
cmps
fiadd
add
pop
ins
or
retf
xchg
jmp
adc
inc
push
fisub
mov
stos
xchg
push
jmp
out
sti
jb
test
rcl
add
dec
mov
in
xchg
dec
movs
scas
xor
mov
test
imul
out
cmp
push
mov
test
mov
or
les
addr16
cwde
out
cld
enter
sub
add
sub
or
sbb
pushf
jge
pusha
or
cmp
or
mov
and
sahf
fsub
cli
sub
in
sbb
nop
mov
pop
cmp
cmp
mov
mov
iret
mov
cs
mov
xchg
pop
jae
sbb
cli
mov
jg
leave
push
sub
shr
retf
sbb
add
inc
mov
ss
loop
adc
out
stos
sar
sbb
cmp
or
rcl
nop
inc
aad
jecxz
fstp
adc
pop
fs
out
mov
jno
fist
lock
repnz
mov
push
xor
das
imul
ins
jg
ja
add
xchg
mov
aas
addr16
adc
sbb
cmp
inc
nop
mov
call
shl
into
xchg
xchg
lods
or
(bad)
test
ds
or
pop
jb
jle
ror
adc
data16
(bad)
icebp
ficom
inc
fild
clc
push
inc
mov
cmc
cmp
jae
cmps
mov
xchg
daa
mov
mov
sub
leave
dec
xchg
pop
sbb
aaa
popf
mov
jl
mov
out
imul
add
xchg
popf
jecxz
pop
cmps
sbb
xor
sbb
ins
xchg
or
rcl
mov
retf
mov
or
sub
push
jo
mov
adc
dec
dec
popf
jge
inc
xchg
sbb
push
dec
mov
mov
shl
push
cmps
jle
push
mov
cdq
or
sbb
test
pop
in
pop
lea
add
push
xor
and
retf
in
movzx
jmp
push
jmp
and
or
xchg
es
out
push
mov
jecxz
imul
sbb
(bad)
fist
out
stos
outs
lods
mov
mov
ja
pop
ror
sbb
popf
mov
(bad)
jmp
and
xchg
sub
(bad)
(bad)
loop
call
mov
mov
pop
xchg
cmp
(bad)
cmp
xchg
rcr
std
idiv
or
out
xor
mov
retf
movs
or
push
or
dec
push
inc
sub
popf
int
and
iret
cmp
fwait
aad
mov
and
mov
aad
jp
sbb
mov
mov
dec
enter
xchg
mov
cmp
dec
data16
je
int3
push
int
iret
adc
lods
add
and
mov
ins
mov
mov
dec
loopne
pop
xchg
lds
or
iret
adc
adc
sbb
int3
jb
push
cmp
push
movs
xor
push
ret
sub
out
cmps
fsubr
pop
pop
lock
push
cs
fld
lahf
ss
hlt
push
or
sbb
mov
xor
ins
pop
lea
pop
dec
adc
scas
fidiv
leave
push
hlt
xor
mov
jp
lea
mov
xor
jb
dec
das
ja
sbb
or
jnp
pop
call
pop
loop
les
popa
mov
call
pop
add
mov
adc
jge
mov
shr
cli
cmc
out
(bad)
jp
jmp
cmp
cmp
adc
cmps
dec
mov
xchg
pop
xchg
sub
ficomp
fcomp
mov
sbb
je
xchg
pop
mov
push
sub
xor
sti
pop
adc
sub
(bad)
retf
not
clc
aas
xchg
shl
add
adc
dec
fwait
test
mov
dec
xchg
rcr
jbe
icebp
jne
mov
push
mov
pop
jnp
out
adc
inc
mov
dec
xchg
shl
xor
mov
rol
xor
jecxz
mov
test
mov
int
adc
cmc
mov
rcr
es
adc
mov
and
mov
mov
movs
push
dec
xor
mov
xor
dec
mov
stos
push
outs
loopne
push
dec
pop
and
daa
xor
rcr
mov
pop
into
(bad)
xor
mul
ror
jmp
inc
mov
fsub
test
jp
frstor
hlt
xchg
pop
call
retf
repz
(bad)
xor
fwait
ret
inc
push
push
or
pushf
xor
imul
jl
ins
loopne
pop
sbb
data16
push
dec
arpl
mov
cli
retf
ja
dec
adc
aaa
jns
adc
je
add
dec
ret
in
and
xor
mov
push
aas
aam
adc
sti
push
jecxz
cmps
int3
stc
mov
inc
sbb
mov
fcmovnu
icebp
adc
shl
js
mov
sub
outs
mov
repz
mov
jo
push
lock
jp
push
rol
mov
push
push
lods
imul
add
stos
(bad)
sbb
pop
and
(bad)
in
pop
sub
(bad)
or
es
xor
add
lods
popf
loopne
fucomi
sub
call
or
es
sahf
in
and
cmps
sbb
cmps
movzx
sahf
jmp
xsavec
(bad)
push
inc
ss
pusha
mov
jg
jae
xchg
aam
cmc
inc
test
imul
loop
(bad)
in
sub
jg
mov
xchg
mov
add
out
sbb
cmp
add
leave
popf
jbe
jp
and
xchg
inc
stos
or
icebp
push
in
repz
rcr
fxch
into
mov
mov
imul
ins
sahf
inc
pop
std
clc
mov
mov
sti
pusha
imul
cmc
(bad)
mov
inc
fisub
mov
test
test
call
mov
mov
cmps
aaa
test
popa
loopne
xchg
fst
xor
sub
daa
jl
lods
(bad)
(bad)
sub
mov
or
cs
mov
loop
inc
sbb
ins
pop
stos
or
pop
jmp
mov
pusha
and
inc
jg
add
push
mov
mov
adc
leave
call
lock
pusha
push
cmp
repnz
xchg
popa
addr16
xchg
sbb
mov
push
icebp
xor
stc
cmp
nop
dec
and
sbb
push
mov
mov
gs
std
push
adc
mov
mov
sbb
fist
mov
mov
dec
in
(bad)
js
icebp
aaa
ds
pop
mov
lahf
pop
push
and
sti
adc
fnstcw
test
cmps
bound
adc
das
loop
jecxz
movs
fwait
pusha
(bad)
fisttp
leave
add
push
sbb
sbb
leave
add
es
or
sbb
adc
pop
mov
sub
push
cmp
mov
or
loop
jp
pop
stc
leave
shr
rcl
xor
or
scas
sar
lods
ds
jg
in
fs
mov
aaa
sahf
push
and
(bad)
mov
bound
cmp
stos
xor
pop
pop
shr
leave
cmps
mov
and
ins
es
cmp
mov
xchg
shl
add
dec
inc
xchg
das
(bad)
shl
mov
inc
mov
(bad)
cmp
inc
ja
into
popa
hlt
sub
scas
add
and
in
and
in
jmp
add
mov
sbb
in
and
and
inc
fst
fmul
pop
idiv
xor
fld
int
cmp
pop
ss
clc
mov
jge
xor
in
jle
jae
mov
xor
sub
jne
in
jae
add
call
leave
cmps
fdivr
lahf
and
fsub
xor
mov
jno
daa
ins
jae
push
fistp
jb
(bad)
aam
push
jbe
shr
jecxz
pop
dec
and
in
sub
mov
add
and
adc
inc
imul
cmp
pop
mov
hlt
jle
ins
jbe
mov
cmp
and
in
out
cwde
movs
dec
bound
mov
test
pop
scas
xchg
mov
shl
aam
cmps
hlt
(bad)
xor
(bad)
jmp
or
xchg
and
jns
jne
fwait
mov
ja
movs
scas
int3
mov
or
je
inc
div
push
mov
xchg
and
pusha
pop
or
adc
cmc
push
mov
xor
ss
shr
nop
sar
xchg
js
jae
js
mov
push
cmp
call
loopne
inc
jp
mov
aas
push
in
and
sbb
ja
ds
add
cmp
adc
stos
das
xchg
jae
mov
push
dec
fbstp
mov
das
dec
icebp
cmp
(bad)
mov
adc
pop
dec
mov
mov
jg
sahf
(bad)
out
ins
inc
or
and
cmp
inc
add
dec
cmp
in
cli
leave
and
mov
stos
jmp
inc
stc
sti
stos
sub
lods
nop
xchg
add
jge
ficom
pmaxub
push
loop
cmps
mov
or
mov
ds
sbb
dec
test
ret
ja
stc
int
xchg
sub
es
enter
icebp
retf
mov
test
or
in
or
pushf
jo
stos
push
mov
and
ja
arpl
add
or
fdivr
jb
or
popf
jmp
inc
popf
sbb
enter
fs
push
push
ins
inc
sub
adc
(bad)
int3
cld
dec
pop
or
jl
lds
aad
and
mov
mov
(bad)
ror
mov
or
inc
es
out
add
cmp
or
in
int3
test
sbb
sbb
repz
lahf
xor
pop
mov
pop
xor
addr16
pop
or
inc
dec
cmp
nop
ret
add
or
mov
xor
ret
test
mov
push
xchg
or
mov
push
push
out
loop
mov
xchg
sbb
xchg
or
jne
rcr
(bad)
adc
sub
cld
mov
cs
push
and
add
or
int
in
xor
sub
cdq
cmp
cmp
das
cld
mov
(bad)
xor
push
mov
jmp
cmp
pop
cmp
adc
xchg
sub
call
pop
sahf
add
push
pop
(bad)
fdivr
mov
ret
sub
out
xor
dec
gs
dec
or
sahf
loope
sti
clc
xor
aam
leave
jl
xchg
and
mov
cmp
dec
sbb
fsub
or
addr16
fsubr
call
mul
test
rcl
push
mov
inc
out
(bad)
mov
and
data16
neg
fcomp
cmp
mov
call
push
xchg
dec
push
xchg
inc
pop
ud2
fstp
out
dec
leave
mov
or
lods
hlt
jne
aas
jmp
(bad)
stc
or
jle
push
rcr
push
xchg
stos
xchg
ret
cmp
mov
es
(bad)
outs
aad
pop
dec
mov
in
xchg
xor
push
aas
or
retf
repz
nop
jb
push
dec
sub
ins
adc
scas
sub
add
or
out
pop
pop
or
sub
dec
mov
lea
int3
ja
in
sbb
dec
mov
stos
rol
mov
fistp
push
lea
fs
push
stos
pop
(bad)
loope
cmc
mov
cli
xor
xor
aaa
fcom
mov
or
mov
ret
cld
daa
(bad)
fnstenv
movs
cld
inc
mov
out
stc
and
push
push
mov
mov
and
ret
repnz
push
xor
push
mov
into
test
pop
clc
xchg
pop
cwde
jge
and
pop
test
fimul
inc
ficomp
push
add
aam
in
jmp
aam
shl
xchg
shr
jmp
stc
cmp
xchg
out
push
mov
jmp
je
cmp
sub
outs
cwde
jmp
sub
pop
or
dec
adc
cmc
push
fbld
stos
stc
push
rcl
dec
sbb
adc
bound
lods
pop
add
xor
aam
out
(bad)
test
xor
cmp
imul
cmp
xor
push
nop
cs
call
push
jge
dec
ds
cmp
test
sbb
dec
int3
or
shr
jmp
movs
hlt
ret
iret
jno
sub
jmp
xor
xlat
sti
adc
mov
out
std
leave
stos
int
jb
or
sub
popf
push
jp
cmp
loope
(bad)
xchg
movs
stc
fs
mov
(bad)
xlat
xor
loope
dec
in
dec
movs
nop
pop
mov
pop
pushf
mov
mov
mov
rcl
movs
adc
mov
out
es
adc
shr
sbb
push
in
ins
call
dec
mov
rcl
adc
daa
adc
das
ins
and
shl
mov
pop
xchg
(bad)
fmul
nop
(bad)
pop
push
add
xchg
add
xlat
jecxz
stos
xchg
cmp
adc
ins
xchg
adc
jge
cmp
out
test
pusha
cmp
xchg
scas
mov
out
cmps
and
adc
data16
mov
mov
outs
test
or
mov
pop
test
jae
movs
adc
lods
jne
fisub
jbe
cld
inc
adc
xor
add
mov
cmps
push
je
mov
mov
cmps
stos
dec
mov
add
repnz
scas
or
push
push
pop
jmp
cs
stos
xchg
push
cmp
xor
adc
add
mov
clc
push
and
sar
rcl
add
stc
sub
bound
cmp
retf
shl
jl
xor
sahf
cmp
jns
and
or
mov
add
fsub
lock
xchg
nop
xor
mov
push
fisubr
cwde
iret
mov
test
dec
fidiv
sub
lock
mov
dec
mov
mov
add
arpl
repz
sar
or
ins
ror
int3
stos
enter
xor
(bad)
and
or
sar
lock
push
push
stos
mov
cmp
js
mov
and
call
jecxz
push
xlat
ret
pop
cmp
sti
push
scas
jecxz
cli
loop
outs
inc
ds
stos
inc
fwait
inc
add
xchg
push
add
(bad)
adc
setge
test
sub
mov
push
pushf
out
and
sub
arpl
jae
sub
push
mov
loopne
call
jns
xchg
das
retf
jns
mov
cmp
icebp
and
out
in
cwde
inc
xchg
mov
push
sbb
mov
icebp
pop
dec
cmp
xchg
jmp
cld
inc
loopne
xlat
(bad)
jp
pop
enter
fist
arpl
pop
(bad)
jge
out
mov
xor
sub
mov
adc
js
sbb
push
fs
daa
mov
in
out
scas
push
aad
push
or
or
cmp
sbb
adc
xor
adc
mov
push
or
cwde
(bad)
sbb
jo
push
rcr
and
je
(bad)
push
fcom
inc
imul
arpl
jbe
xchg
jb
daa
(bad)
pop
xchg
or
inc
js
dec
and
add
jg
test
jmp
mov
leave
mov
rol
pop
xchg
xor
call
ja
sar
cmc
push
out
fst
mov
push
add
add
aam
outs
pop
cmps
xchg
nop
mov
add
out
jl
paddd
in
int
mov
pop
push
and
jg
les
dec
hlt
cli
lea
sbb
je
xchg
mov
cdq
sub
fst
sbb
mov
cmps
fwait
cli
jge
xlat
enter
int
bound
mov
repnz
jmp
push
jne
scas
enter
cli
push
inc
rep
fstp
movs
lahf
add
neg
dec
or
lock
add
into
mov
adc
xchg
mov
loope
push
jns
(bad)
mov
jp
imul
(bad)
jle
retf
dec
leave
mov
add
push
fbstp
xor
mov
bound
push
test
dec
out
pop
int
pop
sbb
sti
xor
imul
sbb
and
mov
push
pushf
retf
mov
pusha
outs
push
das
cmps
mov
xchg
stos
bound
test
je
adc
push
in
pop
jecxz
inc
call
dec
push
out
pop
scas
rol
ds
mov
mov
retf
std
add
sbb
je
mov
mov
mov
sbb
inc
mov
jmp
add
cmp
jl
pop
xor
nop
push
lea
rcr
leave
fstp
and
fadd
movs
cld
ins
cmc
and
or
pushw
and
int3
(bad)
mov
push
cmp
out
fwait
cdq
jae
adc
(bad)
sub
arpl
adc
enter
xchg
in
outs
mov
in
jp
push
out
xchg
shl
mov
xchg
xor
lods
sbb
pop
cmp
xor
jno
scas
add
bound
les
lock
xchg
cli
fwait
scas
mov
outs
movs
mov
mov
shl
lods
mov
fnstsw
xchg
mov
pop
mov
xchg
xchg
dec
sar
pop
push
daa
outs
sub
aaa
xchg
pop
and
aad
in
outs
icebp
scas
mov
popf
aaa
aas
js
mov
ss
mov
enter
ror
cli
cmp
dec
mov
loop
cdq
mov
cdq
je
adc
cdq
in
sar
jmp
out
mov
fmul
imul
push
lods
jb
mov
dec
xor
mov
mov
lods
stc
idiv
iret
fld
out
cmp
adc
ror
cmp
shr
les
xchg
push
lock
and
aam
and
das
cmp
aad
retf
stos
out
lods
cmp
jp
bound
mov
sti
inc
sbb
addr16
iret
xchg
xor
pop
xor
pop
xor
jge
or
cmp
pop
jg
mov
mov
iret
inc
and
mov
fbstp
nop
loopne
sub
outs
stos
out
jne
mov
in
(bad)
fsub
ret
scas
lds
ret
inc
xor
push
inc
push
aas
xchg
les
or
retf
push
aas
jb
out
cmp
cmp
fisttp
xchg
js
cld
or
dec
sub
dec
popa
jae
jmp
mov
push
xor
adc
pusha
cdq
push
mov
push
out
dec
xchg
jno
mov
repz
lahf
mov
xchg
(bad)
imul
outs
pop
mov
lods
xchg
pop
adc
int3
retf
mov
inc
xchg
hlt
cmps
pop
fwait
ss
mov
mov
mov
or
and
(bad)
cmp
stos
gs
into
xor
or
xor
ja
mov
sbb
or
ja
push
push
mov
pop
aad
arpl
jmp
call
in
cmp
ss
or
test
sub
cs
inc
push
sub
pop
loope
aam
xchg
rcl
je
int
ds
adc
dec
mov
shl
inc
rep
dec
movs
mov
sub
repz
retf
and
outs
test
mov
ins
repnz
cdq
mov
mov
(bad)
cmp
es
stc
(bad)
fadd
movs
add
clc
lock
loope
xchg
adc
mov
lods
lods
xchg
popa
call
xor
stos
in
aaa
in
mov
inc
xchg
(bad)
or
inc
shl
mov
xchg
adc
loope
ror
xor
stc
movs
jecxz
dec
stos
std
in
xor
adc
jb
dec
dec
or
jns
sub
sub
push
bound
sub
adc
mov
out
lods
sbb
bound
sub
inc
jmp
inc
mov
and
sub
pop
add
lock
arpl
mov
push
ret
xor
jp
pop
scas
cld
lahf
call
sub
jl
jo
daa
sar
aam
push
retf
mov
adc
mov
jg
sbb
push
(bad)
stos
push
bound
pushf
scas
das
mov
xor
mov
and
mov
and
loope
dec
popa
jmp
dec
clc
mov
cmp
cmp
call
and
add
xor
xor
pusha
int
add
mov
mov
add
sbb
xchg
stc
dec
push
lods
mov
and
inc
jae
pop
neg
jl
ret
mov
mov
sbb
jne
dec
inc
ins
repnz
aaa
sbb
pop
xor
dec
mov
addr16
jnp
inc
xor
push
repz
loope
mov
jle
push
stc
xor
popf
jmp
pop
xchg
or
out
leave
fild
cmp
aaa
mov
jnp
pusha
test
jl
out
and
data16
fidiv
js
dec
dec
dec
sub
repz
jp
retf
sbb
sub
dec
dec
jecxz
cmps
fs
ja
add
imul
push
mov
scas
test
pop
mov
jne
push
addr16
iret
mov
push
stos
stc
(bad)
ds
jae
jns
mov
sti
adc
sbb
sub
rcr
ror
pop
dec
fisttp
adc
xchg
add
xchg
jmp
inc
mov
mov
test
lock
inc
mov
cmps
outs
jg
lahf
xchg
pop
lods
fmul
mov
pop
sub
cmps
pop
pop
ret
sbb
cwde
les
cmp
xor
js
push
cmps
bound
test
sbb
sub
push
dec
adc
arpl
in
jns
mov
sub
(bad)
xchg
dec
pop
mov
or
mov
and
mov
das
push
add
test
(bad)
ja
bound
mov
or
aas
jae
sub
mov
and
lahf
aas
das
and
push
sbb
popa
sbb
cmp
stc
imul
enter
push
aas
and
mov
mov
adc
lods
imul
pop
inc
sbb
pandn
dec
jmp
mov
push
aas
in
repz
jl
pop
adc
dec
pop
sbb
scas
inc
cwde
cmp
xor
mov
pop
fisttp
push
clc
mov
pop
push
mov
sbb
ins
add
jo
loopne
push
jae
or
mov
and
(bad)
daa
mov
in
icebp
and
gs
inc
inc
mov
cmp
paddusb
add
sub
or
std
stc
xchg
dec
push
sub
mov
inc
mov
sahf
aam
fistp
dec
ins
or
inc
ins
(bad)
pop
cmp
or
ja
dec
imul
add
cmp
jg
cmp
sub
adc
jae
(bad)
nop
stos
dec
lods
adc
sub
jge
and
or
fcom
cmp
xor
inc
outs
test
mov
adc
mov
xchg
sti
and
stos
retf
pop
and
ja
test
mov
(bad)
(bad)
je
xchg
mov
xchg
ds
push
popa
pop
xchg
in
aaa
ja
mov
add
pushf
cwde
js
push
xchg
dec
(bad)
push
jae
push
or
mov
movs
cwde
retf
mov
out
cmp
mov
out
jle
dec
xor
mov
cmp
mov
imul
dec
retf
pop
inc
icebp
pop
dec
scas
retf
push
add
arpl
push
cmp
pop
sbb
lods
and
jl
dec
xor
mov
mov
push
mov
enter
push
or
adc
mov
pop
data16
fdiv
and
(bad)
fdiv
retf
ins
jmp
jg
and
out
xchg
dec
mov
idiv
xor
xchg
mov
not
dec
jle
add
and
mov
jno
or
icebp
dec
test
fiadd
jp
and
inc
out
push
mov
aad
xchg
cwde
stos
or
sbb
pop
push
loopne
jp
xchg
sti
sub
xor
sbb
dec
and
mov
stos
xchg
int3
push
inc
daa
pop
aam
out
jmp
xor
jmp
pop
test
sbb
dec
mov
fsubp
test
data16
lock
movs
mov
or
shl
xchg
dec
(bad)
xchg
stc
mov
xchg
nop
and
nop
mov
push
and
fbstp
and
push
sbb
fcmovu
pop
and
iret
outs
adc
scas
inc
mov
xor
retfw
add
pop
jns
jns
or
adc
adc
mov
les
popf
jae
cld
out
inc
fsubr
fs
or
cmps
out
cmovnp
dec
not
movs
sbb
or
mov
inc
xchg
fstp
mov
test
or
cmp
cmc
jne
adc
sti
push
adc
scas
xor
imul
cmp
outs
dec
punpckhbw
dec
cmp
or
fdivr
mov
and
sbb
ret
mov
sub
out
push
mov
push
addr16
ret
sbb
adc
arpl
rcr
loop
xchg
push
cmp
or
cld
outs
(bad)
mov
and
mov
add
movs
cmc
sbb
inc
pop
out
js
xchg
xchg
out
cmp
mov
sub
ror
(bad)
mov
pushf
sub
mov
(bad)
sbb
jp
(bad)
push
cmp
jns
enter
xchg
pop
adc
sub
aam
adc
push
sub
lahf
pop
dec
xor
in
pop
in
sub
xor
outs
outs
fdivr
jb
out
mov
adc
mov
add
leave
jnp
xor
sar
cmp
pop
dec
sbb
mov
shl
cmp
mov
pop
leave
add
mov
inc
das
cli
or
inc
or
cmp
scas
xlat
push
mov
mov
test
ins
cmc
les
retf
movs
call
push
in
imul
push
dec
jg
dec
xchg
(bad)
out
cmp
leave
push
dec
dec
ja
mov
jg
stc
dec
or
inc
ror
dec
dec
jge
mov
xlat
(bad)
btr
lods
push
cdq
sub
addr16
inc
dec
jecxz
fwait
shl
lahf
jo
add
fwait
gs
stos
out
enter
push
mov
push
(bad)
in
fidiv
sbb
xchg
and
adc
cmp
xchg
jle
pop
cmp
lods
jne
mov
and
cmp
push
rol
cmps
xchg
movs
cmp
sbb
daa
in
dec
jg
in
xchg
mov
lods
cmp
sbb
push
dec
jae
jbe
xor
and
xchg
(bad)
fstp
push
lods
or
lahf
stos
sbb
mov
jg
pop
sti
xchg
in
inc
in
test
dec
sbb
xor
popf
outs
mov
les
ins
cmp
jnp
popf
out
les
add
mov
call
fidiv
sbb
pop
inc
add
push
enter
rcr
inc
cmps
adc
sub
nop
ins
icebp
int
adc
jmp
xchg
dec
jb
aas
loopne
data16
repnz
je
cmp
add
mov
aas
pop
shl
lahf
ret
xchg
int3
lods
sti
dec
lock
push
xchg
sub
int3
mov
adc
daa
in
sub
ins
mov
xchg
xor
fcom
popa
loope
inc
mov
test
fsub
sub
ret
pop
push
inc
jnp
push
iret
add
lods
pushf
dec
pop
fst
mov
pop
mov
pop
imul
sbb
movs
mov
hlt
in
jge
sbb
or
cmp
mov
scas
or
mov
pop
jle
cmp
or
push
inc
les
mov
push
cdq
xor
and
xchg
repz
test
in
aam
add
mov
push
xchg
and
scas
push
ret
les
int3
inc
(bad)
mov
pop
sbb
sub
leave
xchg
nop
sbb
dec
sbb
jmp
out
or
loope
retf
add
inc
inc
imul
sahf
pop
or
clc
ins
ins
add
mov
inc
popf
ins
aas
jle
push
clc
imul
add
push
and
sahf
mov
ins
out
ret
xchg
dec
push
je
adc
adc
jo
and
push
pop
sbb
clc
pop
sub
out
adc
jg
adc
inc
stos
and
imul
xchg
xor
cmps
cmp
scas
inc
push
loop
int3
int
aad
cmp
or
adc
or
retf
inc
pop
arpl
std
xchg
aas
inc
push
pushf
ins
mov
xchg
adc
and
leave
aam
dec
imul
rcr
mov
ds
adc
lods
sub
test
lahf
in
into
mov
jo
jae
adc
arpl
in
fisttp
mov
(bad)
fwait
inc
je
sbb
sbb
xor
push
repz
test
xchg
mov
out
adc
mov
mov
mov
add
dec
pushf
or
test
shr
jb
mov
repz
cdq
das
lods
xor
pop
and
mov
cmp
pop
push
sbb
test
mov
mov
(bad)
shr
lock
fsub
or
jnp
into
(bad)
mov
xor
mov
add
xor
ja
xchg
je
aas
inc
xchg
mov
out
sahf
xchg
push
js
xchg
inc
retf
lock
std
dec
inc
sahf
jl
pop
sbb
in
cmp
retf
xlat
adc
or
mov
mov
shr
in
mov
adc
cmps
hlt
jmp
test
dec
jl
xchg
outs
mov
scas
cmp
popa
pop
ret
ds
cld
fwait
repnz
jns
jl
sbb
js
sub
mov
(bad)
jmp
push
adc
pop
pushf
mov
(bad)
out
xchg
ins
js
push
jmp
ss
cmp
addr16
cmp
sub
xchg
mov
lock
pop
stc
jo
and
inc
jne
or
add
mov
int
lea
aaa
pop
out
sub
dec
adc
pop
dec
retf
shl
sar
add
cmp
mov
leave
clc
sub
std
popf
cld
xor
clc
js
test
into
pop
add
mov
ret
ins
popf
push
adc
inc
mov
cmp
inc
sbb
pop
int3
idiv
in
mov
jb
outs
jl
test
outs
ret
scas
daa
xchg
mov
aad
daa
sbb
sti
imul
add
adc
mov
enter
cmc
jmp
pushf
das
mov
push
add
lock
std
add
adc
cli
push
or
push
aad
inc
jo
jecxz
xor
sub
mov
mov
rcl
pop
xor
xchg
sub
adc
test
jle
sub
test
lods
jmp
in
jns
push
movs
push
mov
retf
mov
cmp
shl
sbb
out
and
lods
push
or
js
into
(bad)
push
and
addr16
aam
mov
jg
xchg
and
jo
retf
mov
es
test
mov
push
and
(bad)
mov
lahf
push
cmps
cmp
test
dec
and
aas
call
retf
jno
inc
push
lock
jne
dec
sbb
inc
retf
ror
stos
xchg
xchg
xchg
fild
mov
and
pop
outs
pop
clc
jp
pop
adc
lea
loop
(bad)
xor
xor
enter
cmps
bound
fcomip
mov
lahf
das
mov
sub
and
scas
loop
sbb
mov
fld
cli
jg
lds
scas
test
in
(bad)
push
sub
or
sbb
paddsb
stc
cdq
fnstsw
jbe
aaa
xor
mov
nop
cli
inc
rol
inc
push
js
mov
push
and
xchg
pop
xchg
pop
sub
(bad)
pop
les
adc
dec
sub
fmul
add
mov
add
sbb
stc
cmp
shr
sbb
scas
push
repz
mov
in
mov
adc
clc
adc
(bad)
das
shl
cmps
test
dec
cmp
lock
inc
mov
daa
test
enter
ss
dec
cmp
(bad)
add
ja
or
sbb
fisub
adc
ins
push
xor
sbb
popf
stos
push
in
mov
or
push
fcomp
lods
leave
rcl
push
xchg
jl
dec
jp
clc
push
ret
test
cmps
es
mov
pop
mov
aaa
jecxz
es
inc
rol
js
lea
sub
das
push
jl
xlat
sub
cwde
xchg
push
test
aaa
imul
adc
icebp
shr
(bad)
out
mov
cli
sbb
jle
repnz
pop
bound
fs
lock
lods
loope
jne
xchg
js
movs
test
imul
call
shl
or
inc
ins
shr
call
pop
mov
mov
test
retf
test
sti
jle
push
icebp
inc
test
out
fistp
xor
jp
xor
dec
cwde
mov
push
mov
sub
test
loope
xor
sar
cmp
ds
sub
push
mov
jb
mov
xchg
or
sub
add
push
mov
adc
adc
add
mov
je
bound
stos
mov
inc
sbb
stos
cmps
call
loopne
mov
mov
cdq
add
mul
jns
mov
pop
pop
sbb
and
stc
div
mov
inc
imul
call
dec
pop
sub
add
jae
xchg
xchg
loope
jmp
push
fmul
dec
retf
sub
inc
aas
pop
or
jno
xor
mov
mov
cmp
inc
fnsave
jb
jmp
add
adc
mov
int3
xchg
(bad)
xor
enter
mov
jg
cmps
xchg
scas
pop
lods
not
in
call
jmp
bound
aam
adc
ins
(bad)
(bad)
mov
sbb
sub
fidiv
pusha
mov
dec
leave
jo
pop
nop
aam
cmp
push
cmp
push
or
iret
push
mov
xchg
jecxz
xor
push
loopne
nop
imul
cmps
sar
push
daa
sbb
cmp
mov
xor
jb
std
or
pop
int3
enter
scas
rcr
punpckldq
pand
mov
jb
test
cmp
xor
loopne
push
ror
movd
dec
or
popf
dec
rcr
inc
cwde
mov
jmp
and
inc
fidiv
dec
hlt
adc
sub
and
dec
lds
pop
ficom
and
iret
dec
xchg
push
push
fucom
adc
into
aaa
inc
(bad)
scas
loope
loop
mov
in
mov
scas
bound
(bad)
mov
je
dec
fwait
rcr
mov
daa
sbb
and
mov
ja
arpl
jle
push
xchg
int3
(bad)
arpl
mov
inc
adc
enter
dec
or
int3
ficomp
mov
xchg
mov
sahf
sub
btc
pop
call
enter
mov
imul
enter
adc
dec
or
dec
xchg
in
adc
sub
push
or
mov
call
inc
push
pop
test
nop
push
fstp
pushf
stos
fadd
adc
xor
into
cmp
(bad)
aas
dec
jae
push
mul
inc
jle
dec
popa
repnz
iret
push
in
int3
adc
push
or
pop
aad
stos
or
jl
push
jl
ss
std
clc
ret
xor
push
daa
test
es
adc
repnz
and
add
test
mov
js
mov
push
data16
jae
add
jno
mov
cmps
scas
in
cs
pop
mov
int
mov
add
mov
xor
jecxz
xor
cmp
mov
and
mov
jg
mov
rcr
idiv
sbb
jg
dec
daa
inc
int3
jle
push
inc
aaa
stos
das
pop
aad
xchg
sbb
sbb
cmp
pop
adc
mov
dec
lds
(bad)
repz
pop
dec
mov
mov
dec
sub
mov
inc
(bad)
adc
pop
(bad)
test
sbb
mov
xor
push
mov
stos
sahf
xlat
(bad)
jns
pop
bound
pushf
repnz
inc
push
push
arpl
push
sub
cmp
popa
jo
sub
xchg
push
clc
cs
fdivrp
shr
or
mov
imul
gs
mov
stc
rcr
adc
and
jne
mov
jae
mov
xor
push
push
sub
js
mov
jle
inc
scas
sub
fiadd
xchg
xor
mov
leave
inc
pop
call
xchg
cmp
jno
jae
sub
cli
pushf
js
fidivr
pop
mov
mov
push
dec
in
shl
(bad)
test
out
add
out
add
lods
rcl
inc
adc
cmp
sbb
in
jle
mov
jle
and
mov
call
cli
sbb
arpl
and
add
sahf
cs
aaa
inc
xchg
ins
hlt
push
ret
ja
xchg
stos
(bad)
mov
inc
(bad)
fisubr
sub
std
clc
fwait
in
in
or
(bad)
adc
pop
jbe
je
jmp
xor
stos
and
(bad)
rcl
jg
fcomp
lods
nop
xlat
lock
cli
stos
(bad)
je
loopne
cmp
out
into
mov
add
je
sub
cmp
mov
push
jb
xchg
sub
(bad)
dec
xor
fsubr
mov
mov
inc
sub
push
pop
push
xor
fwait
pop
stc
lds
test
test
push
mov
jo
xchg
pop
cmp
mov
ins
jnp
and
aad
adc
mov
mov
add
cmp
test
xchg
popa
jle
dec
(bad)
sbb
sbb
xchg
jecxz
mov
call
inc
les
inc
dec
gs
arpl
xchg
jbe
loop
push
dec
push
aad
lock
sbb
repz
xchg
mov
sub
mov
sub
pop
imul
add
dec
pop
gs
jg
or
adc
pop
xchg
sbb
jnp
fwait
loope
scas
jb
add
cmc
mov
cmp
pop
xchg
sbb
pop
hlt
and
sub
or
inc
fnsetpm(287
push
jmp
jne
mov
and
fwait
dec
(bad)
aad
jg
retf
mov
add
daa
fiadd
lahf
inc
lods
rcr
and
mov
add
add
inc
push
pop
mov
stos
call
pop
sub
xchg
mov
in
add
std
xchg
jge
pop
mov
jae
dec
inc
out
aaa
mov
test
push
dec
rcr
add
push
dec
xchg
mov
pop
push
jo
je
pop
jle
mov
cmp
fbld
mov
jb
or
js
or
dec
xlat
pusha
sub
and
aas
ret
jle
push
in
xchg
mov
out
pop
pusha
sti
adc
lods
fisub
mov
and
or
xor
xchg
mov
cld
mov
les
jb
(bad)
fld
in
jl
fnstsw
outs
and
imul
cdq
sbb
retf
push
xchg
xchg
xlat
adc
hlt
push
repnz
push
bound
sar
sbb
pushf
and
daa
pop
adc
mov
cwd
fs
(bad)
sbb
add
jecxz
lods
les
mov
push
enter
add
add
xchg
mov
mov
xchg
add
or
dec
sub
shl
mov
xor
pop
inc
pop
mov
xchg
pop
inc
and
icebp
dec
xchg
xchg
test
adc
sub
inc
retf
inc
xchg
retf
inc
and
es
fist
or
pop
sub
xchg
jecxz
aas
pop
test
shl
lock
xor
and
push
dec
push
(bad)
and
add
add
test
repz
fst
in
ror
je
lock
adc
dec
loop
and
pop
lods
adc
and
loopne
test
shl
add
jmp
xchg
jmp
mov
or
(bad)
retf
movs
dec
push
add
mov
aas
inc
lahf
push
cwde
rcl
mov
and
out
inc
mov
add
xchg
mov
in
lods
sub
xchg
in
leave
das
imul
cmp
lea
jl
into
push
dec
jno
and
cmp
xor
js
test
push
inc
enter
stos
xor
int
dec
pushf
or
(bad)
pop
dec
mov
les
std
adc
mul
mul
xchg
inc
add
in
idiv
pop
outs
mov
jnp
hlt
ret
dec
into
xchg
out
mov
out
repz
cmp
mov
mov
mov
in
leave
rcr
retf
adc
nop
mov
shl
fistp
xlat
mov
and
lods
loopne
xor
(bad)
mov
repnz
dec
cmp
push
outs
xlat
mov
mov
and
in
je
or
mov
adc
xchg
fisttp
pop
je
mul
sar
push
fsqrt
cmc
push
out
or
xor
sahf
xor
cdq
adc
jecxz
mov
cli
and
fstp
test
cmp
and
jge
daa
das
cmps
test
ja
mov
or
(bad)
call
les
adc
sbb
out
imul
cwde
dec
push
aas
jecxz
cmp
or
mov
popf
adc
test
adc
ds
sbb
cmp
fdiv
push
outs
addr16
sub
nop
sahf
sub
pop
in
mul
and
outs
test
aaa
inc
mov
add
mov
jno
add
dec
or
leave
xchg
cmp
std
dec
xor
lods
xchg
je
adc
hlt
(bad)
jmp
mov
xor
cwde
out
mov
mov
add
iret
imul
stos
int
das
fdivr
ss
hlt
jo
sbb
test
call
jmp
add
adc
fs
fsub
cmp
gs
fst
sub
or
test
test
out
fild
ss
dec
mov
mov
out
dec
call
push
sbb
ret
adc
cs
mov
inc
cmp
sbb
add
ds
ret
stos
adc
pop
call
cmp
xchg
inc
xchg
sbb
enter
(bad)
lock
sub
xor
add
leave
int3
cmp
mov
or
cmps
cli
and
or
sbb
add
add
(bad)
sahf
sub
pop
xchg
sti
sbb
dec
ret
lea
ja
xor
jae
out
das
or
and
cld
xor
das
test
xchg
dec
rcl
out
and
mov
push
pop
adc
inc
test
test
cmp
ss
dec
sbb
fwait
ins
push
js
inc
xor
pusha
jg
mov
fcomp
out
xor
(bad)
push
add
and
cmp
sar
(bad)
ficom
pop
bound
adc
aas
inc
iret
mov
pop
inc
call
sub
fstp
mov
inc
adc
adc
lock
ret
rcr
imul
mov
dec
add
in
pop
cmp
mov
pop
(bad)
xlat
(bad)
mov
and
daa
jmp
lea
aam
arpl
xor
jge
push
pop
sahf
pop
jbe
out
push
mov
and
test
fadd
pushf
or
outs
sub
fnstsw
inc
fnstcw
inc
sub
push
test
xchg
pop
jg
push
in
test
stos
and
adc
jmp
dec
jmp
and
xor
addr16
imul
lock
sub
jbe
loope
mov
sti
sar
leave
not
fbld
pop
sub
pusha
add
mov
sbb
rcr
sbb
and
inc
xchg
mov
inc
(bad)
rsqrtps
sub
or
ja
pop
test
adc
dec
rcr
pop
js
outs
les
mov
imul
inc
test
jb
mov
pop
pushf
mov
(bad)
mov
fnstenv
push
mov
shl
dec
dec
add
es
les
xchg
inc
(bad)
fdiv
out
sbb
cld
call
jae
dec
cmp
fadd
mov
loop
fldcw
std
test
sub
(bad)
in
cmp
push
xchg
mov
neg
(bad)
xor
adc
or
cmc
mov
(bad)
adc
add
ds
dec
shr
jae
fst
mov
lods
or
dec
cld
sahf
jle
imul
(bad)
jl
or
push
mov
jns
pop
and
and
and
loope
call
cmp
pushf
inc
bound
push
(bad)
cmp
adc
nop
nop
adc
out
jp
sub
(bad)
addr16
mov
xor
xchg
push
popa
dec
dec
loop
inc
pop
popa
inc
inc
jecxz
ret
jmp
es
out
loope
call
fnstcw
fsubr
jle
loop
inc
iret
shl
xor
repz
dec
(bad)
fisttp
mov
add
pop
loop
(bad)
fisttp
jmp
pop
push
mov
jno
sub
(bad)
rcl
fwait
aad
or
cmps
addr16
icebp
fldenv
adc
and
out
outs
pop
test
sti
call
outs
loope
(bad)
and
mov
aam
sbb
es
ds
aad
add
lods
dec
pop
xchg
aad
inc
jp
lods
inc
xchg
(bad)
in
retf
dec
pop
or
mov
mov
les
sbb
popa
add
push
jl
pop
push
dec
cmp
pushf
push
pop
inc
out
neg
jnp
ret
push
xlat
icebp
aad
fwait
xor
sub
xchg
mov
mov
imul
sbb
in
iret
jl
cmps
inc
cli
xor
inc
int3
xor
adc
out
cmp
es
pop
push
lods
xchg
imul
xchg
xor
into
scas
dec
mov
fmul
ins
xor
call
stos
retf
xor
movs
push
fmul
inc
pop
inc
ss
test
fimul
inc
jecxz
add
mov
je
fnsave
cmp
movs
nop
adc
cmp
jmp
sub
loope
repz
xchg
fsub
xchg
push
inc
ins
jg
xchg
inc
sub
into
or
rcr
sub
neg
and
and
(bad)
cmp
jne
or
ins
xchg
adc
push
xchg
jo
push
jmp
mov
clc
mov
retf
fs
add
xor
jns
bound
rol
push
out
cmp
xchg
mov
mov
sub
loopne
ds
les
push
das
lods
test
out
ret
sub
das
jmp
outs
pop
push
dec
jmp
loop
sti
loop
fs
dec
pop
xor
xchg
cmp
bound
pop
cmp
stos
ds
jecxz
push
jo
or
cdq
add
int3
mov
lods
inc
movs
int
cmps
hlt
push
xor
jb
cmp
sbb
les
jnp
or
push
pop
out
jne
je
jbe
mov
mov
dec
inc
(bad)
pop
scas
sar
shl
sbb
prefetchwt1
xor
inc
or
inc
call
jne
jb
(bad)
out
addr16
fsub
imul
mov
adc
mov
cmc
cwde
push
pop
js
mov
add
shl
xor
ins
push
cwde
out
call
xchg
test
lock
pop
xor
push
dec
and
fmul
push
lods
xchg
cmp
xor
and
adc
xor
in
and
mov
bswap
xor
pusha
lock
sbb
jle
je
arpl
jp
cmc
mov
mov
pop
lock
sub
xchg
ja
nop
mov
pop
fstp
mov
jle
pminsw
mul
arpl
inc
pop
xor
add
mov
loopne
fistp
or
xor
adc
ret
or
jge
xor
fs
xchg
out
xor
push
into
(bad)
scas
pop
bound
dec
test
sub
pop
divps
jne
cmp
push
ins
les
test
mov
xor
fcom
loope
call
fxch
xlat
lahf
xchg
mov
idiv
pop
icebp
retf
add
xlat
sbb
mov
xchg
div
and
cmp
push
jmp
arpl
xor
movs
test
jns
outs
jmp
and
das
mov
ret
int3
ret
sbb
ins
mov
retf
and
push
push
mov
sbb
mov
fldenv
stos
push
mov
push
repz
push
int3
push
in
pop
lods
lock
push
icebp
addr16
or
imul
(bad)
pop
movs
xlat
aam
mov
inc
aas
cwde
je
adc
add
sub
pop
fldcw
lea
jae
call
inc
cmp
mov
popa
add
test
xchg
dec
mov
jl
push
fwait
xchg
(bad)
jns
mov
(bad)
rcr
xor
shl
and
add
and
and
add
dec
or
jg
inc
xchg
dec
daa
push
in
mov
aam
repz
popa
pop
xor
sbb
(bad)
mov
add
(bad)
lahf
pop
aam
idiv
mov
mov
lahf
test
data16
sub
push
cmp
push
push
mov
xchg
adc
iret
and
push
adc
mov
jmp
jmp
inc
outs
mov
pop
xchg
mov
and
retf
inc
jmp
adc
push
adc
mov
add
sub
jecxz
leave
mov
push
inc
ins
adc
test
mov
adc
adc
in
and
mul
clc
xor
mov
xlat
arpl
rcr
push
sbb
sub
cmp
jp
std
xor
hlt
xchg
mov
js
pop
fs
cmp
mov
sbb
loop
in
mov
icebp
loopne
into
cmp
mov
mov
scas
inc
call
mov
mov
mov
push
ins
aas
fsub
jge
daa
xor
push
(bad)
stos
stc
push
dec
mov
or
lods
xchg
jmp
aaa
hlt
pop
das
mov
int
dec
in
out
retf
and
imul
add
mov
pop
aaa
cmp
add
mov
daa
inc
int3
arpl
xor
pop
dec
les
and
repnz
pop
in
clc
xlat
cdq
push
(bad)
adc
and
mov
or
aas
xor
call
enter
outs
or
int
jo
movs
push
and
jbe
js
push
or
sbb
push
outs
movs
xchg
ret
or
addr16
addr16
lods
and
dec
push
jne
fs
scas
inc
add
jmp
pop
stc
fadd
aas
out
jmp
loopne
push
retf
test
jae
jecxz
cmc
int
je
into
mov
xor
lods
mov
(bad)
jmp
inc
fimul
jns
enter
div
lods
lahf
mov
jb
xor
push
dec
add
or
jmp
pop
mov
out
movs
pop
outs
mov
test
ja
lock
add
xchg
or
stc
mov
jae
xlat
jmp
jmp
(bad)
ins
dec
adc
aaa
lea
mov
cmp
adc
outs
gs
movs
add
mov
xchg
retf
mov
mov
shl
fmul
jmp
mov
jle
mov
add
imul
adc
pop
xor
mov
jnp
fist
jo
jae
test
xchg
or
add
and
js
cmc
push
scas
loop
inc
fiadd
stc
ins
lea
aas
dec
dec
paddd
scas
shr
pop
push
push
loop
(bad)
mov
fnstenv
xor
add
gs
cmp
dec
fistp
in
hlt
adc
cmps
outs
mov
pop
sbb
cwde
das
cs
out
jbe
mov
test
add
cdq
dec
push
jp
sub
dec
(bad)
out
stc
mov
mov
dec
in
jns
ret
cmp
movs
rol
cld
push
dec
scas
jmp
jg
and
and
(bad)
xor
sbb
sti
mov
pop
pop
idiv
mov
dec
xlat
addr16
add
fild
sbb
dec
sar
repz
cmp
ins
in
pop
ja
cdq
std
jmp
lods
dec
or
loope
sbb
mov
out
mov
xor
test
push
cdq
sbb
push
fstp
cmps
dec
and
inc
and
cld
jle
jnp
lods
cmp
mov
clc
loope
mov
push
jb
and
adc
jmp
add
mov
addr16
popf
xchg
dec
(bad)
cld
mov
add
popa
mov
or
sahf
pushf
xchg
mov
iret
ret
out
ja
jecxz
adc
inc
mov
icebp
cmp
xchg
(bad)
loope
fwait
das
pop
shr
cmc
push
rcr
cwde
rol
stos
sbb
mov
shr
cdq
mov
jae
xor
dec
test
jge
cs
popa
pop
(bad)
in
inc
mov
das
mov
adc
pop
int
mov
or
jmp
ss
in
popf
(bad)
(bad)
movs
jge
mov
mov
xor
out
ds
mov
loope
or
mov
adc
cld
pushf
xchg
outs
xchg
inc
or
cmp
sahf
stos
scas
or
and
nop
lods
dec
ja
scas
iret
mov
jmp
ins
mov
fild
inc
dec
add
push
shl
stos
pop
addr16
mov
pusha
repz
enter
mov
stos
ss
js
mov
sbb
out
test
mov
jp
int
int3
(bad)
test
xor
mov
fs
pusha
cdq
jmp
ret
cmc
(bad)
retf
loop
sub
in
call
push
pop
(bad)
lods
xor
sbb
xchg
mov
add
adc
pop
pop
push
adc
xor
(bad)
out
mov
pop
aad
cli
mov
sahf
pop
or
pop
push
fsubp
(bad)
es
xchg
xchg
lahf
cdq
iret
loop
adc
addr16
sub
jnp
adc
jne
cmp
out
cmp
sbb
hlt
mov
pop
mov
stos
sub
mov
inc
loope
std
sar
test
dec
jg
movs
and
loopne
push
pop
div
push
icebp
mov
or
loopne
jno
sahf
fmul
std
mov
adc
cli
xchg
leave
mov
pop
push
rcr
mov
adc
inc
or
mov
inc
fcom
sub
dec
shl
push
sbb
popf
pop
mov
(bad)
fnstsw
dec
popa
adc
mov
and
hlt
enter
inc
(bad)
div
hlt
(bad)
jecxz
or
mov
(bad)
inc
and
mov
ds
adc
popf
jns
xchg
and
push
and
mov
add
xchg
xchg
sub
test
pop
psubsb
push
adc
sbb
out
test
call
push
push
xchg
xchg
test
or
jbe
sti
add
cmp
push
add
add
mov
clc
sub
and
mov
mov
lea
xchg
idiv
lea
push
int
fld
xor
rcl
sub
jns
aas
gs
lahf
add
outs
test
dec
popf
nop
loop
xor
adc
pop
in
leave
adc
ins
cwde
cmp
push
sbb
push
ret
mov
jns
sub
(bad)
cli
clc
push
sbb
dec
loope
and
fsub
lds
mov
and
(bad)
fisub
push
push
mov
adc
cs
sbb
dec
(bad)
ins
cmp
jmp
in
jnp
push
and
push
and
js
xor
pop
inc
add
(bad)
(bad)
cmp
or
jge
popa
arpl
mov
ja
in
pop
and
jl
jp
jo
movs
call
movs
mov
test
xor
cwde
mov
jae
and
fsub
sub
in
adc
push
add
mov
adc
and
shr
sub
mov
dec
mov
fisttp
int
push
cdq
aam
mov
int
jb
mov
mov
scas
jmp
sub
cwde
jecxz
ficomp
pusha
loopne
in
in
mov
loop
sbb
xor
int
(bad)
(bad)
fsub
mov
dec
repnz
aad
inc
sub
fcomp
arpl
add
sbb
sbb
out
push
mov
ret
mov
or
loop
mov
and
add
das
std
int
jnp
scas
repz
in
xchg
dec
cld
xchg
push
lock
jo
clc
inc
inc
xor
sub
(bad)
out
cmp
data16
push
jg
clc
popa
xchg
mov
or
into
shl
movs
movs
push
mov
das
pusha
jmp
out
or
dec
movs
pushf
mov
adc
ins
mov
cli
mov
push
or
dec
pop
inc
push
icebp
cmp
xchg
daa
add
cmp
loop
aas
xor
ja
ja
out
in
and
(bad)
sub
cmc
lods
movs
sahf
add
push
stc
xchg
aad
inc
xor
pop
in
pop
mov
xlat
mov
lea
nop
xchg
and
in
push
je
lock
fwait
cs
in
mov
mov
(bad)
xchg
jle
fxch
dec
jns
adc
cmc
mov
pop
dec
add
mov
loopne
test
adc
fucom
fs
ret
cmps
xor
and
cmp
int3
js
das
loop
xor
xchg
sbb
pop
or
add
cmps
ds
test
xchg
mov
in
cmp
or
jae
loopne
inc
in
int
cdq
push
loopne
or
xor
mov
stos
sbb
cmp
dec
sub
lea
adc
and
leave
pop
rcl
lahf
test
lss
lods
push
add
(bad)
test
sub
lock
scas
jnp
in
imul
pushf
lea
sbb
and
out
mov
jnp
or
jle
aad
fsubrp
mov
jns
pusha
jns
mov
and
xchg
inc
dec
pushf
lahf
pop
loop
pusha
repz
lea
mov
fdiv
or
aad
loope
retf
xor
push
jns
loop
or
cmps
(bad)
ja
xchg
jmp
mov
into
daa
and
outs
sbb
ja
in
push
jae
repz
fmulp
inc
and
popf
add
clc
pop
or
cld
sbb
(bad)
sub
adc
or
test
fisubr
or
fstp
sub
ror
mov
mov
retf
lea
in
cli
loope
mov
pop
shl
loopne
aas
mov
push
lods
out
add
xchg
ret
stos
rcr
pop
jp
cmps
add
jb
pop
inc
adc
imul
push
pop
repz
rol
mov
shl
jge
add
jnp
and
mov
dec
pop
jmp
push
mov
in
into
es
cs
add
inc
inc
call
sub
xor
fs
adc
ss
fmul
sbb
clc
int
outs
lock
fmul
mov
iret
jb
sbb
push
ss
or
cmp
jp
jmp
retf
call
stos
inc
pop
call
adc
movs
fidivr
aad
mov
jae
into
xor
adc
mov
pause
in
inc
and
rcl
dec
cmps
adc
dec
pop
jbe
daa
jle
sub
cmp
das
cmp
ss
push
and
pop
jae
pop
lods
pop
dec
cmp
jbe
sbb
cmp
pop
sbb
push
stos
into
outs
fwait
pop
or
xchg
dec
js
lahf
xor
ss
push
jbe
test
xor
and
stc
ins
cmp
push
add
aas
(bad)
retf
ins
or
add
pop
jo
inc
mov
cmc
aas
movs
enter
adc
pop
jne
ror
out
xchg
cdq
movs
fimul
adc
fstp
addr16
adc
inc
iret
cmp
scas
loopne
mov
pusha
in
nop
pop
jl
repz
xor
mov
data16
xchg
outs
iret
cmp
and
xor
shl
or
mov
mov
cmp
stc
(bad)
outs
mov
mov
jns
ret
fld
shr
sub
xchg
jge
cld
fwait
sbb
into
mov
or
int3
xchg
xchg
push
pop
pop
xchg
dec
push
lahf
jnp
inc
daa
jo
(bad)
xchg
fwait
les
addr16
rcr
ja
stos
icebp
mov
in
stos
test
xor
jg
xchg
and
out
lods
stos
or
and
test
js
aaa
adc
test
sub
xchg
loope
jmp
iret
ret
add
retf
xlat
mov
xchg
(bad)
outs
jo
imul
sub
sbb
adc
pop
notrack
dec
jmp
lods
or
mov
das
aad
stc
jl
xor
repz
pshufw
adc
dec
(bad)
jo
adc
add
mov
xor
lock
add
out
repnz
aaa
icebp
push
loope
popf
or
jg
sbb
stos
loopne
xchg
retf
sub
lock
xchg
aaa
nop
sti
std
pop
push
mov
inc
test
add
sub
and
add
dec
iret
xor
nop
mov
xchg
mov
jecxz
fsubr
out
daa
xor
sub
ins
adc
std
push
mov
push
repz
add
dec
imul
loop
cdq
ret
scas
pop
sub
fdiv
fcmovnu
adc
or
(bad)
aad
and
dec
rcr
sti
jle
add
xor
jmp
mov
clc
xlat
push
ret
mov
dec
pop
mov
call
fistp
jmp
mov
inc
mov
jns
cmp
aad
mov
leave
fmulp
mov
xchg
xor
call
shr
and
xor
jle
inc
scas
inc
sbb
push
std
inc
loop
rcl
aaa
mov
pushf
xor
push
inc
push
sbb
pop
or
dec
cmps
bound
jg
in
icebp
repz
lahf
pop
out
test
scas
scas
fnstenv
sub
rcr
mov
ret
adc
ds
adc
or
jo
test
lods
in
pop
xor
hlt
ror
or
shr
adc
outs
scas
shr
outs
mov
ins
xchg
sti
jns
(bad)
cmp
call
sub
fadd
mov
mov
jecxz
sub
in
adc
fwait
xchg
repnz
mov
in
mov
cmps
imul
outs
push
add
mov
dec
push
add
adc
dec
dec
pushf
pop
xchg
movs
test
mov
jg
mov
or
test
sbb
cmp
sbb
fistp
pop
and
or
ins
(bad)
iret
ror
or
mov
cdq
push
pop
stc
mov
aam
xor
and
in
or
jbe
xchg
and
mov
xor
aam
hlt
jbe
cmova
mov
sahf
inc
mov
push
cmp
stc
push
aad
pop
pop
push
pop
jmp
inc
cmp
add
or
mov
push
sub
adc
add
and
dec
aas
fcmovne
inc
data16
(bad)
jp
jne
gs
(bad)
aad
push
outs
mov
or
aad
pop
sbb
out
stc
mov
xor
dec
mov
movs
enter
push
add
into
mov
addr16
outs
sub
retf
scas
out
imul
mov
push
inc
push
pop
dec
mov
(bad)
shr
lahf
inc
mov
ins
inc
xor
jmp
mov
ret
xchg
push
jne
call
gs
mul
call
sub
stos
ja
retf
ret
xor
mov
mov
vpsubusw
xchg
lea
jne
jmp
pop
cs
pop
ins
lock
add
mov
(bad)
or
adc
xor
lock
jmp
int3
add
cwde
inc
inc
imul
(bad)
jne
cmps
fwait
lea
loopne
shl
ret
push
int
lock
outs
mov
in
xor
nop
outs
mov
cmps
inc
xchg
sbb
pop
inc
cmc
bound
add
test
pop
inc
test
xor
inc
inc
lds
dec
ror
ss
out
test
xchg
inc
jmp
push
push
xchg
icebp
fstp
(bad)
in
call
xchg
das
ret
or
lock
jb
out
mul
in
jno
loopne
clc
stos
mov
rcr
xchg
pop
ret
dec
daa
pop
jle
cmp
inc
lods
inc
xor
sbb
jo
mov
inc
retf
cmp
cmp
xlat
and
inc
mov
dec
stos
test
mov
and
nop
(bad)
sbb
ja
sub
push
fild
es
call
mov
les
inc
repz
mov
leave
inc
adc
dec
movs
cli
aam
mov
je
mov
(bad)
aam
inc
jmp
popf
cmps
jl
fcmovne
xchg
fist
push
stos
sbb
fs
movs
pop
pop
in
jbe
ins
addr16
cmp
jecxz
mov
and
movs
sub
or
pop
call
ss
add
dec
in
or
out
jge
add
mov
adc
repz
sbb
sahf
mov
pop
std
pop
ds
stc
and
or
fisub
fsqrt
shl
aad
inc
out
rcl
shr
mov
cmps
imul
sbb
mov
xchg
sub
pop
or
or
cli
mov
adc
mov
aam
adc
cmp
fisubr
mov
into
sub
pushf
cmp
dec
mov
daa
pop
in
out
out
sub
mov
jno
pop
les
add
pop
ja
in
xchg
pop
cmc
and
outs
cwde
in
in
pop
push
fist
mov
aaa
(bad)
mov
inc
rol
in
xor
inc
arpl
in
cmps
dec
sbb
mov
sti
arpl
cmp
adc
mov
or
sbb
fdivr
cmp
mov
xchg
inc
xor
push
and
jbe
push
scas
lock
out
xor
scas
(bad)
xor
cwde
int
mov
xchg
adc
int3
inc
pop
xor
ja
jecxz
imul
cld
pop
cwde
xor
xor
sub
scas
psubsw
int
imul
daa
(bad)
push
push
fs
sub
mov
jns
ret
mov
mov
loop
fist
iret
mov
mov
pop
hlt
xor
add
sar
adc
popf
fsub
ins
adc
lahf
das
loopne
(bad)
movs
or
jns
sub
pop
jecxz
arpl
loop
xchg
pop
outs
push
inc
cli
push
test
cdq
shrd
sub
fucom
cmp
inc
test
jnp
popf
icebp
ja
mov
mov
out
int
int
je
cmp
mov
and
in
out
out
mov
(bad)
shl
shl
out
(bad)
arpl
jbe
pusha
sub
lods
dec
daa
rol
scas
out
imul
int
mov
add
or
in
test
cmc
sub
cmp
lock
inc
fisttp
inc
mov
ja
and
mov
dec
push
loope
repnz
or
mov
xlat
mov
jmp
cmp
sub
int3
int
imul
or
cwde
pop
mov
jmp
push
xor
ret
in
aas
mov
pop
mov
out
mov
jne
ja
daa
bound
and
mov
loopne
out
cmp
leave
in
mov
jle
out
adc
shl
mov
adc
push
inc
daa
stos
adc
bound
sar
les
xor
sub
cmp
inc
cs
cmps
dec
std
cmp
cmp
loopne
repz
sbb
sub
outs
clc
test
(bad)
je
retf
lock
inc
jnp
call
jl
xchg
icebp
das
cmps
test
mov
sub
sbb
and
mov
push
in
adc
mov
pop
mov
cwde
add
ret
bound
add
jecxz
inc
dec
xor
addr16
sub
xlat
mov
or
ins
shl
data16
jle
pop
sub
mov
push
enter
mov
sub
sbb
add
(bad)
stc
push
mov
push
ds
push
xor
retf
enter
or
and
pop
xor
ins
test
in
cwde
xlat
xchg
test
xor
mov
inc
xchg
pusha
int
push
add
add
das
dec
cmp
jne
push
push
les
pop
mov
leave
inc
and
sti
add
push
(bad)
int
push
jae
int3
jle
push
ret
std
jne
push
outs
mov
pop
enter
fisttp
adc
in
scas
sub
sahf
jmp
mov
cmp
sbb
or
sub
mov
lock
jo
dec
pushf
loop
fist
cld
in
mov
pop
ffreep
iret
mov
mov
out
rcr
ins
je
mov
mov
es
sbb
out
mov
stc
inc
push
inc
cmp
sub
sbb
movs
movs
in
sub
and
int
imul
sbb
add
pop
jae
test
popf
inc
and
cmp
sbb
lods
(bad)
daa
gs
inc
or
rcl
sti
xchg
and
iret
pop
cmp
cmp
add
mov
lock
mov
(bad)
aad
xor
and
ret
xlat
mov
das
push
mov
pop
fdivr
jg
push
adc
cmp
aam
fcomp
stos
add
int3
lock
outs
inc
pop
mov
(bad)
movs
out
push
lock
cdq
nop
out
inc
ds
jg
mov
xchg
loopne
cmp
inc
rol
jp
in
adc
push
inc
mov
dec
mov
add
dec
inc
cmp
inc
cmc
dec
inc
popf
mov
xchg
cs
(bad)
cld
out
add
stos
outs
cmp
mov
out
cmp
ins
shl
cdq
outs
ins
aaa
push
out
mov
mov
push
fwait
repz
push
fcom
retf
shl
or
dec
(bad)
xlat
ror
(bad)
dec
scas
fpatan
inc
movs
xlat
xor
inc
out
loope
jmp
std
std
xchg
push
int
sbb
outs
xchg
int3
out
pop
cmp
mov
daa
jo
test
push
retf
stos
adc
sbb
push
in
sub
mov
pop
push
mov
jno
in
dec
cmp
in
shr
pop
adc
pusha
hlt
shl
push
jns
lods
push
in
gs
ja
out
stc
inc
pop
iret
pop
pop
cmc
ds
(bad)
adc
(bad)
mov
ja
test
iret
cmp
int3
mov
neg
mov
adc
rcr
clc
cmp
imul
mov
ret
push
add
sar
(bad)
pushf
in
adc
outs
mov
jno
sti
xor
pop
add
pop
ja
stc
ror
push
test
out
or
iret
add
push
xchg
mov
or
push
ret
mov
sub
int
push
sub
sub
ja
mov
inc
sub
ret
xlat
fst
adc
repz
adc
push
nop
push
cld
ret
jae
xchg
jno
dec
adc
arpl
fmul
repz
test
(bad)
test
movs
imul
mov
sbb
mov
pop
add
push
lahf
pop
adc
and
cli
je
fsub
pop
jecxz
pop
fdiv
jbe
test
mov
mov
or
jb
jnp
ins
icebp
and
xor
mov
mov
inc
call
xchg
cmc
mov
test
or
and
popf
xor
aaa
cs
jg
xchg
scas
std
jns
sbb
aaa
inc
mov
leave
fisub
(bad)
push
lods
pop
fist
xchg
jp
retf
dec
pop
mov
call
ror
je
lods
or
xchg
loopne
pushf
push
js
test
fucomi
sub
mov
xchg
daa
mov
push
adc
cmp
ret
push
xor
dec
jmp
pop
and
dec
xchg
aam
jecxz
push
mov
mov
sub
xchg
sub
push
push
div
in
xor
or
push
xor
and
and
cmp
push
sub
ror
push
sbb
test
xor
jmp
shl
mov
inc
test
cmp
enter
mov
push
jbe
cmp
mov
jae
fdivp
cmps
out
in
push
sub
nop
dec
mov
sbb
xor
jo
sbb
outs
repnz
scas
retf
daa
sbb
mov
xlat
scas
adc
es
in
and
sbb
cmp
jle
movs
in
adc
inc
push
ret
lods
sahf
or
inc
lods
test
aaa
repz
leave
retf
sbb
stos
stos
in
push
jp
cmp
adc
inc
les
add
sbb
rcr
hlt
pop
repz
sar
mov
xor
(bad)
aas
clc
fdivr
pop
and
dec
dec
rol
out
jne
pop
sub
mov
add
jle
bnd
sbb
lods
gs
out
or
push
inc
mov
or
fld
pop
fnstcw
sub
test
mov
fwait
pop
(bad)
ins
add
sub
add
dec
mov
dec
mov
xchg
jmp
xchg
repnz
call
sub
xchg
lock
pop
retf
mov
clc
fwait
leave
push
(bad)
and
mov
pusha
pop
ins
scas
rcr
fld
cmp
imul
stos
mov
cmp
and
sub
xchg
dec
rep
dec
jl
sub
mov
sbb
mov
jb
mov
xchg
adc
(bad)
mov
(bad)
sub
mov
add
fnsave
dec
cmp
lods
and
scas
in
push
pop
cmps
dec
adc
dec
adc
leave
adc
gs
retf
mov
nop
imul
sbb
xor
mov
loop
inc
packuswb
test
dec
not
or
mov
xchg
sbb
fild
mov
xor
ins
push
pop
inc
enter
adc
mov
jp
cmp
cmp
and
retf
ins
repnz
pop
jne
jmp
outs
(bad)
scas
mov
test
push
and
ins
fs
add
xchg
xor
xor
pop
aam
sti
jne
sub
ss
not
sub
in
cmp
pop
imul
pop
xchg
movs
cs
sub
jbe
or
jl
pop
add
ins
(bad)
sub
sub
imul
and
sar
fs
sbb
scas
stos
(bad)
cmp
das
popf
in
xlat
outs
cmp
sub
pop
xor
rcr
(bad)
jo
das
shr
int
fidivr
jnp
and
aas
sub
mov
sar
lock
jge
jl
(bad)
scas
scas
jo
jmp
mov
shl
jns
add
ja
aas
mov
dec
xor
out
rol
mov
sub
mov
mov
pop
mov
push
in
je
add
scas
loopne
loopne
faddp
test
pop
mov
jnp
xor
cmp
scas
push
pop
cwde
(bad)
icebp
(bad)
loopne
adc
loop
dec
pop
mov
mov
aaa
jecxz
fldcw
mov
inc
ss
jmp
inc
mov
loopne
mov
dec
js
add
test
or
lods
sar
mov
(bad)
fdivr
and
fdiv
sti
and
push
es
jmp
sbb
cli
repnz
cli
(bad)
stos
stos
inc
sar
jbe
rcl
into
push
daa
xchg
fwait
out
aas
jne
sbb
jmp
pop
mov
fadd
push
add
in
or
jmp
ins
outs
fidiv
cld
push
out
sahf
pop
push
xor
cmp
dec
pop
add
add
push
push
inc
inc
adc
in
out
add
jle
les
repz
dec
aad
repz
mov
sar
sbb
mov
jae
fcom
shl
(bad)
div
pmullw
rol
mov
adc
ins
adc
(bad)
mov
push
jae
ret
fistp
ret
mov
cmp
cld
popa
ss
jmp
ret
stc
mov
xchg
pop
stos
or
and
ret
loop
cdq
(bad)
outs
movs
adc
loopne
retf
retf
pusha
jmp
cmps
cmp
and
rdtsc
jp
imul
ds
push
sub
mov
mov
(bad)
mov
or
push
pop
push
xchg
jle
data16
inc
xlat
std
test
cmp
rcr
push
or
sbb
test
imul
or
in
pop
adc
test
enter
call
pop
stc
retf
sar
pop
pop
(bad)
fmul
mov
mov
pop
pop
cmps
scas
int
inc
out
imul
push
movs
mov
sahf
sub
add
add
and
inc
jmp
sti
xchg
jl
out
pop
pop
jmp
adc
mov
ja
adc
mov
lods
mov
iret
mov
or
adc
and
jle
stos
adc
mov
mov
lds
jbe
push
mov
ins
push
cmps
ss
sub
push
adc
loop
ret
es
into
paddusb
sbb
inc
sahf
out
out
or
pop
inc
xchg
add
clc
lahf
dec
push
fbstp
pop
mov
aad
inc
mov
shl
sbb
inc
scas
pop
in
jne
out
cs
js
inc
out
mov
xlat
cs
in
pop
jmp
sbb
push
into
test
lods
inc
and
lods
xchg
sub
inc
test
jno
jb
or
pushf
jns
aaa
scas
adc
enter
scas
in
add
outs
cmp
fldenv
retf
push
bound
mov
outs
and
loopne
or
sub
dec
xlat
outs
pop
aam
jl
test
lock
or
les
dec
int3
mov
add
aam
or
mov
push
adc
fild
xchg
aad
popf
xor
sbb
adc
loope
popa
je
add
or
mov
dec
fiadd
aad
sbb
pop
(bad)
fadd
sub
push
sub
jg
add
push
add
sub
in
pop
inc
cld
pop
push
sub
push
(bad)
push
xor
int
mov
out
ror
loop
jg
lods
fninit
or
pop
hlt
pop
jns
pop
jecxz
scas
(bad)
adc
adc
retf
xchg
pop
dec
lock
lea
sbb
test
loop
cmp
sbb
push
pop
adc
pusha
(bad)
test
shl
pop
ja
jb
add
and
ret
loope
mov
sub
xchg
daa
movs
(bad)
arpl
outs
cmp
scas
pop
pop
sub
dec
repz
pusha
jmp
mov
aaa
or
daa
push
int
xor
sbb
rcl
lods
test
test
fisttp
scas
shl
sbb
bsr
stc
int
sti
pop
cmps
outs
inc
shl
inc
out
add
pop
jbe
or
pop
add
add
mov
mov
xchg
jno
test
mov
sbb
ficom
sub
sub
je
pop
add
cmc
test
mov
imul
aad
ds
rcr
jge
das
xchg
jle
stos
adc
adc
push
(bad)
lock
stos
adc
adc
sti
xor
loopne
fdiv
fbld
push
adc
adc
fdivr
call
mov
idiv
cmp
pop
outs
fmul
cmp
adc
adc
add
mov
rep
sbb
cmps
cmp
(bad)
retf
pop
push
stos
pop
aaa
dec
and
sub
sub
ffreep
pop
push
dec
ror
fcom
and
push
mov
leave
bswap
cmc
enter
ja
jne
and
(bad)
ret
test
or
mov
mov
cmp
dec
or
or
xchg
mov
stos
cmp
jge
sbb
mov
fcom
test
dec
std
xor
pop
(bad)
aam
loop
jg
push
or
xor
push
sbb
cmp
sbb
xchg
mov
jbe
mov
dec
movs
cwde
mov
mov
sub
lock
retf
mov
mov
in
in
push
push
data16
dec
in
mov
in
(bad)
out
mul
xor
hlt
sub
retf
lods
cld
xchg
scas
mov
sti
xchg
push
ret
adc
es
ror
ret
idiv
pop
mov
pop
adc
and
loope
sub
sar
dec
jecxz
jge
or
mov
adc
dec
xchg
xor
inc
sahf
(bad)
fist
ret
push
pop
mov
pop
loop
and
stos
xchg
shl
pop
cmp
sbb
pop
(bad)
lods
fisttp
dec
push
xchg
shl
or
jmp
add
or
imul
add
loopne
xchg
push
push
out
mov
test
mov
cmp
test
(bad)
pause
nop
cmc
push
imul
out
jmp
cwde
inc
jno
jecxz
aaa
jbe
gs
fwait
std
mov
adc
jg
and
out
lds
jle
out
cmp
in
outs
add
pop
inc
aas
imul
jne
imul
sbb
push
jb
sub
and
cmps
xor
ret
cmp
sbb
add
cmp
dec
sar
cmp
js
pop
arpl
movs
add
pop
mov
mov
hlt
sti
jmp
pop
mov
push
mov
jge
cmp
das
cmp
or
jno
xor
cmp
or
(bad)
out
cli
lds
in
dec
clc
lds
ret
ins
scas
cmc
inc
(bad)
sub
sub
and
mov
pushf
pushf
out
cmps
daa
cmp
rol
(bad)
ins
sub
mov
add
dec
aaa
xor
clc
mov
cs
imul
push
cdq
out
adc
movs
jnp
push
(bad)
icebp
pop
cmps
push
cmps
aaa
cmp
in
mov
or
push
cmp
ss
fadd
je
daa
scas
sbb
aas
inc
ret
dec
or
fisubr
inc
lods
nop
in
or
push
xchg
dec
push
push
pop
mul
jge
push
jg
mov
das
std
mov
bswap
ss
outs
inc
test
xchg
pop
jmp
jle
or
inc
cli
test
addr16
das
loopne
xor
mov
dec
sbb
scas
nop
cld
daa
ins
les
mov
loope
mov
shr
imul
or
fsubr
mov
pop
xlat
fmul
cmp
adc
test
jp
add
pop
lds
add
dec
test
lea
int3
outs
adc
repz
pop
sub
mov
xchg
mov
sub
mov
mov
push
mov
pop
add
sbb
sahf
xchg
push
xlat
xor
xor
jl
in
push
pop
fnstsw
mov
inc
adc
and
fstp
add
not
dec
xor
sub
movs
cwde
out
mov
test
rcr
mov
add
pop
xor
loop
inc
in
cmps
jae
xchg
fdiv
fsubrp
push
add
push
pop
inc
push
jb
pop
xchg
and
stos
jne
(bad)
mov
mov
pop
ss
xchg
hlt
mov
(bad)
leave
jae
pop
stos
test
mov
pop
pop
mov
pop
push
jmp
inc
leave
cmp
ss
sub
sbb
aam
enter
jmp
mov
hlt
ss
xchg
sub
mov
push
das
movs
or
pushf
cmp
xor
cli
sar
rcr
mov
xchg
sub
cld
jae
inc
movs
dec
shl
cs
xor
adc
outs
cmps
cdq
test
mov
jg
dec
ret
push
mov
push
xchg
shr
mov
push
jg
or
and
adc
int3
arpl
dec
fisttp
mov
lock
add
push
inc
mov
pop
pusha
mov
mov
pop
pop
push
and
mov
xor
xchg
inc
loopne
add
enter
jno
lods
push
push
pop
lods
les
popa
ret
inc
aam
pop
gs
jecxz
pushf
lock
push
aaa
data16
adc
mov
(bad)
mov
add
sub
pop
xor
ret
fwait
mov
jno
push
cmp
scas
dec
fidivr
or
mov
push
icebp
push
imul
mov
hlt
mov
pusha
push
loop
ss
cmp
inc
in
test
(bad)
test
cmp
xor
shl
movs
aam
repz
and
(bad)
arpl
mov
(bad)
jge
(bad)
xchg
adc
pop
jl
idiv
cs
xor
jp
mov
leave
jmp
jp
sbb
cmp
dec
shl
shl
jle
and
adc
or
retf
sub
mov
test
adc
ds
(bad)
rcl
sahf
mov
jne
cmp
in
jno
sahf
sub
sbb
pop
into
jno
cmp
push
mov
jl
clc
and
pop
jl
loopne
push
ret
xchg
lahf
xchg
jge
aam
jecxz
push
scas
push
test
mov
test
mov
sub
faddp
int
cmp
(bad)
bnd
add
push
mov
ror
xchg
xor
adc
or
ror
repz
sbb
cmp
pop
xchg
mov
or
cmps
sbb
loopne
mov
ja
and
outs
sbb
pop
push
das
repnz
adc
push
jg
gs
push
sub
inc
popa
cld
jne
pop
movs
cli
gs
dec
sbb
rcl
mov
adc
adc
(bad)
out
lock
xchg
fisubr
mov
push
retf
xchg
sbb
call
sbb
jnp
es
mov
loope
mov
sahf
repz
adc
sar
out
sbb
push
ficomp
jb
popa
pushf
jmp
fadd
mov
pop
(bad)
aam
mov
jo
into
sub
mov
ss
ja
xchg
push
iret
retf
xor
es
mov
cmp
sar
or
push
lea
and
inc
push
dec
or
das
mov
xor
pop
xor
add
mov
jae
pusha
jb
popf
imul
add
out
inc
outs
or
(bad)
push
movs
add
(bad)
mov
retf
dec
dec
add
lods
cmps
cmp
sub
mov
jmp
not
add
stos
movs
xor
loope
std
test
inc
pusha
ss
add
pop
push
mov
xchg
xchg
mov
pop
adc
jg
push
cwde
ret
ins
addr16
ja
jb
inc
pushf
mov
cmp
push
push
and
pop
(bad)
jmp
pop
call
xor
ret
add
clc
int3
jle
out
adc
add
aas
ror
push
add
cwde
adc
push
sti
sub
adc
mov
pushf
and
pop
inc
cmp
aas
hlt
scas
cmp
mov
mov
movs
sbb
jmp
jp
add
mov
call
daa
add
xor
mov
jns
xor
das
mov
repz
dec
sub
nop
lea
jmp
das
loope
pop
call
xchg
pop
(bad)
mov
jp
jbe
jecxz
ja
xor
ret
popf
mov
fcmovu
mov
jmp
lods
retf
jmp
rol
ss
pop
sbb
mov
rcr
sbb
(bad)
loop
cld
add
loop
ins
cdq
jne
fiadd
push
mov
jmp
dec
dec
bound
push
xchg
out
jbe
mov
sub
cmc
sahf
mov
je
out
loop
inc
(bad)
dec
adc
js
test
imul
ja
jo
add
test
rcl
jp
inc
sar
mov
cmc
ss
jmp
jmp
out
sub
xchg
fwait
xor
call
jb
pusha
xchg
ins
xchg
int
mov
stos
bound
adc
push
clc
push
int3
in
xlat
(bad)
pusha
ror
sub
adc
pop
add
stos
jno
dec
cmp
mov
or
inc
inc
jecxz
adc
cwde
js
gs
cmps
push
or
add
lods
xchg
add
mov
add
ror
les
lahf
leave
in
test
push
and
outs
xchg
retf
sub
adc
(bad)
loop
jne
pusha
xchg
test
xchg
mov
(bad)
pop
stos
xchg
nop
jns
or
(bad)
jne
adc
scas
mov
and
hlt
push
je
ror
adc
xor
aam
ret
jle
out
mov
out
in
(bad)
imul
pop
fisub
add
pop
mov
sahf
fcomp
fwait
sbb
mov
fst
or
adc
push
sbb
and
arpl
in
add
cs
in
repz
gs
adc
or
movs
arpl
sbb
xor
rol
push
cmp
dec
dec
mov
mov
or
push
(bad)
xor
adc
fbld
dec
(bad)
aad
enter
jmp
mov
ja
mov
cmp
sbb
jecxz
inc
fiadd
sub
jae
leave
xor
xor
or
push
ret
inc
xchg
push
dec
xchg
and
stos
mov
movs
or
sahf
mov
clc
(bad)
test
xchg
dec
sbb
cmps
ja
mov
cmp
fwait
enter
fwait
pop
jge
js
into
retf
jne
cmps
and
and
(bad)
sbb
xchg
xor
cmp
mov
jmp
js
mov
stos
popf
dec
xor
popf
shr
add
test
ret
xlat
outs
jmp
jecxz
bound
pop
sbb
jg
adc
and
xchg
das
mov
lahf
cmp
inc
lods
xor
xchg
dec
jno
stos
push
stc
sahf
aaa
scas
add
xchg
mov
rol
test
(bad)
aad
sti
jo
sub
into
add
cmps
lods
fisttp
movs
ja
fadd
jmp
cmp
mov
mov
out
fst
and
dec
popf
push
xchg
mov
ret
pusha
mov
push
sbb
xchg
push
sub
into
and
sbb
xchg
test
jns
jmp
pop
pop
jne
mov
and
dec
and
sar
mov
xor
xor
add
iret
sbb
or
and
sub
push
ret
rcr
jns
adc
outs
out
inc
push
imul
lds
mov
cli
xor
inc
(bad)
stos
dec
bound
cwde
mov
call
lea
jmp
push
push
jp
jmp
push
pop
add
mov
jne
movs
outs
jae
in
xchg
call
jecxz
push
fld
mov
bound
push
(bad)
push
es
mov
ret
push
and
xchg
sbb
mov
mov
sub
sub
fst
jp
aaa
jo
rcr
js
xor
fcomp
call
into
pop
mov
cmp
mov
xchg
bound
mov
push
out
js
mov
mov
jl
cmp
push
pop
or
cli
pop
cmc
arpl
push
addr16
scas
out
xor
push
mov
imul
mov
and
jb
mov
gs
jecxz
aaa
inc
dec
mov
loop
adc
popa
cmp
push
mov
enter
xor
sub
xchg
cmp
and
aas
popf
xchg
imul
push
lahf
cli
loop
cmp
jg
mov
mov
push
dec
push
leave
nop
pop
dec
sti
cs
arpl
stc
pop
xor
cmp
neg
dec
add
arpl
std
clc
push
retf
cmc
mov
sahf
add
inc
adc
retf
ror
mov
push
adc
retf
xor
adc
xchg
sub
les
mov
and
stc
aaa
jl
dec
jmp
inc
ja
pop
mov
dec
sub
mov
rcl
sub
imul
jg
dec
dec
out
aad
in
pop
retf
xchg
imul
sahf
xor
mov
lock
test
and
movs
arpl
push
mov
jecxz
xchg
add
aad
cdq
icebp
pop
mov
repz
in
jae
mov
inc
push
adc
jmp
cld
mov
in
outs
retf
sub
jge
mov
mov
push
adc
cmps
clc
out
add
cmps
jle
add
test
(bad)
pop
loope
es
inc
adc
and
add
cmps
push
xor
je
cmc
addr16
das
dec
nop
popa
fcmovnb
cmp
scas
loop
js
mov
movs
xchg
cwde
xor
pop
or
cld
loope
or
xor
jbe
rcr
pop
mov
jno
nop
movs
cmp
in
push
retf
add
js
cs
mov
movs
dec
adc
mov
fldln2
fidiv
xor
int
mov
dec
jb
(bad)
out
sub
cmp
aam
xchg
adc
ret
dec
xchg
inc
or
bound
jp
int
loopne
xchg
cdq
aam
add
push
loop
xor
ret
push
inc
adc
out
dec
push
jmp
(bad)
js
addr16
arpl
aaa
hlt
sub
shl
stc
dec
adc
inc
cmc
out
jmpw
mov
xor
adc
and
lods
sub
xor
jb
retf
rcl
pop
cmp
xor
jg
dec
inc
aas
xchg
sti
test
push
in
(bad)
cmc
shl
push
cmps
out
mov
rcl
push
xchg
sti
push
ss
mov
(bad)
icebp
inc
bound
aaa
cli
imul
rol
adc
mov
adc
cmp
mov
std
cmp
inc
dec
repnz
shl
add
push
(bad)
jle
lods
adc
cwde
leave
mov
pop
pop
xchg
sbb
into
or
ret
sub
jno
shr
or
adc
ins
(bad)
mov
adc
mov
mov
inc
loope
lods
push
(bad)
sti
push
leave
in
xor
push
xor
xchg
daa
idiv
mov
pop
sub
jne
retf
cmp
addr16
cld
jne
sbb
sahf
xchg
mov
div
fsub
inc
shl
loope
pop
mov
retf
sbb
pop
pmulhuw
jae
sub
hlt
out
mov
mov
pop
mov
out
inc
and
lods
or
xor
movs
mov
dec
pop
cld
add
xchg
data16
xchg
pop
lods
sub
mov
je
xchg
stos
adc
xchg
sbb
and
int
and
inc
and
mov
mov
scas
test
jmp
sub
or
fwait
test
sub
in
outs
jge
fsubr
arpl
and
add
jge
or
sbb
cmps
idiv
and
leave
adc
dec
scas
loopne
xor
ins
mov
mov
je
in
xor
lods
sbb
mov
pop
into
xchg
push
jo
and
lods
and
mov
mov
mov
jle
sbb
cmp
jmp
outs
(bad)
mov
mov
stos
add
xchg
ret
data16
mov
cld
test
ret
jbe
mov
ds
inc
in
push
outs
sbb
jo
mov
mov
cmps
xlat
stos
dec
lock
dec
addr16
jne
cmp
mov
test
lock
cmps
push
imul
cmp
jmp
mov
or
inc
rcr
movs
retf
out
mov
jg
xchg
cmp
cmp
cs
retf
shl
or
test
fimul
mov
adc
dec
inc
lahf
cdq
popa
loop
push
sbb
cld
popa
fsubrp
idiv
inc
and
mov
or
dec
pop
push
pushf
or
jb
cwde
jg
iret
inc
cmp
xchg
pop
ins
inc
sbb
mov
sti
jle
pop
mov
out
stos
jp
(bad)
fld
add
and
sub
out
push
add
test
sub
aam
and
inc
mov
add
daa
fdivr
pop
lods
and
add
sub
and
cli
cwde
or
adc
mul
jle
push
fbstp
sub
in
ror
or
inc
cdq
hlt
mov
mov
not
push
cwde
xchg
out
mov
push
mov
sbb
jnp
popf
in
sub
fiadd
retf
int3
push
xchg
add
arpl
inc
data16
push
jns
sbb
or
test
inc
es
nop
loopne
sbb
push
pop
call
pop
cs
movs
popa
(bad)
xchg
sbb
mov
mov
cmp
adc
lock
mov
add
sbb
sub
scas
jmp
rol
stos
inc
jb
scas
repnz
test
mov
popa
fld
inc
jmp
call
imul
mov
lahf
mov
fwait
and
clc
lods
adc
mov
in
out
aad
scas
(bad)
sub
jp
and
adc
adc
stos
dec
pop
mov
(bad)
fcmovnu
cmp
cmp
fnstsw
ins
in
cmp
mov
dec
adc
test
jle
add
dec
mov
arpl
outs
or
int3
(bad)
pushf
xchg
add
push
imul
mov
mov
ja
ret
cmp
inc
jp
mov
xor
mov
sub
adc
pop
retf
push
das
test
ss
xor
out
aaa
pop
je
jp
inc
xor
jo
imul
enter
xor
inc
mov
adc
dec
push
lods
lock
xchg
call
pop
leave
aas
fdivr
cmc
lock
fld
dec
mov
loop
mov
scas
addr16
cmp
xor
inc
movs
dec
std
fisubr
outs
adc
mov
and
push
imul
ss
xchg
mov
int3
int3
out
imul
jo
and
mov
retf
pop
stc
jbe
dec
or
add
mov
pusha
lds
xor
mov
push
in
out
sti
xchg
cs
repnz
(bad)
fld
mov
dec
sub
cmps
push
(bad)
push
xchg
daa
popf
stc
jp
sub
push
cld
movs
inc
outs
add
mov
fst
push
inc
dec
outs
mov
into
dec
pop
mov
inc
stc
sub
(bad)
movs
mov
leave
bound
dec
sbb
mov
mov
movs
iret
xchg
jl
add
pop
push
mov
jne
inc
dec
pop
push
dec
and
cmp
adc
mov
or
scas
out
jbe
push
mov
xlat
pop
daa
call
jnp
sub
ja
jmp
(bad)
fld
sub
repz
scas
addr16
push
leave
sbb
ffreep
xor
int
in
and
jmp
movsx
xchg
mov
not
mov
or
mov
neg
jl
add
scas
push
add
movs
push
xchg
arpl
push
jo
fidivr
fld
push
jle
sar
push
xchg
fptan
adc
mov
mov
cmp
mov
outs
jbe
nop
add
ds
xchg
dec
mov
test
or
fs
cli
dec
push
movs
and
dec
mov
imul
push
dec
not
sti
fdivr
inc
mov
dec
adc
xchg
pop
dec
mov
aam
push
fistp
ja
addr16
mov
sub
rol
popf
ss
nop
mov
jl
xor
mov
(bad)
sti
into
out
out
sbb
push
sub
cmp
pop
dec
jmp
jno
xchg
std
add
ja
jle
add
stos
mov
sub
or
xchg
gs
sub
arpl
push
or
fsub
test
frstor
inc
stos
test
shl
jp
pop
sbb
ret
jg
out
adc
cld
cwde
sbb
loope
push
clts
dec
adc
mov
loop
mov
psadbw
adc
jmp
loopne
jnp
xchg
ror
mov
outs
ds
aam
pop
fadd
das
mov
adc
pop
pop
xor
les
cmp
add
add
test
rol
add
jge
pop
shl
xor
rcl
in
pop
sahf
mov
or
sti
cmp
xor
push
sub
mov
popa
sub
add
add
or
jns
pop
xchg
push
mov
pushf
hlt
out
lds
js
setns
ret
sbb
mov
jae
or
mov
fcmovnbe
loope
mov
pop
ins
cmp
xchg
je
popf
mov
(bad)
mov
or
not
xchg
pop
leave
sti
pop
nop
pop
fst
daa
ret
cmps
mov
jbe
pusha
push
outs
and
xrelease
mov
retf
or
in
pop
and
fdivr
mov
mov
or
jmp
jmp
addr16
add
xor
pop
dec
or
jne
aaa
xchg
call
fst
lahf
jo
js
xor
xchg
aaa
lea
add
jno
imul
and
das
ja
dec
gs
pop
inc
adc
add
mov
jle
cwde
dec
cmp
ret
(bad)
adc
xchg
mov
movs
popf
cmp
and
test
ret
das
add
jmp
lahf
cmp
mov
mov
mov
fwait
push
or
js
push
sub
fidivr
call
sub
pop
test
inc
mov
xchg
mov
outs
jle
or
mov
mul
stos
push
pop
(bad)
sbb
push
mov
jae
fadd
xor
mov
iret
aad
(bad)
loop
jno
and
push
rcl
int
fucomip
adc
loope
push
jae
pop
call
push
cs
rol
pop
loop
push
mov
je
mov
jmp
leave
xor
jmp
bound
pop
lock
inc
mov
fild
popa
hlt
retf
mov
int
cdq
fdivr
jmp
mov
pop
adc
cmp
adc
cmps
pop
inc
popf
inc
ret
fld
push
mov
lahf
movs
repz
pop
scas
push
add
pop
mov
outs
or
mov
cmp
jnp
jo
repnz
dec
test
jbe
mov
xchg
rdrand
sub
inc
mov
ins
sub
loope
jno
inc
fiadd
fcmovb
pop
cmp
cmp
or
xchg
ficom
mov
loope
scas
xchg
(bad)
cmp
or
add
jmp
cli
push
cmp
aam
imul
mov
retf
dec
inc
and
in
ss
clc
mov
cli
mov
push
add
leave
and
shr
stc
mov
cmp
mov
inc
inc
lods
jno
mov
lea
mov
jecxz
push
loopne
je
mov
cmc
lahf
dec
lds
movs
inc
jle
mov
ss
ins
icebp
pop
out
xlat
aam
push
in
arpl
scas
cmps
(bad)
mov
sbb
aad
inc
cmp
nop
nop
div
lods
sbb
xchg
jo
(bad)
jmp
call
push
push
push
movs
xor
mov
mov
fxch
(bad)
daa
stos
or
xor
dec
dec
inc
and
lea
cmps
cmp
xor
stos
mov
mov
mov
lods
leave
(bad)
lds
adc
cdq
pop
aas
or
inc
jg
push
ficomp
and
add
sub
and
jp
mov
call
(bad)
xchg
or
in
les
xlat
pushf
jne
inc
xor
pusha
imul
jp
adc
xchg
mov
adc
mov
stos
xchg
push
mov
cmp
dec
cmp
loopne
mov
jo
ds
cmp
sbb
cmp
arpl
shr
push
retf
ins
ja
and
inc
mov
pop
xchg
fidivr
stos
lock
int3
cmp
mov
mov
jo
mov
dec
es
je
jle
sbb
or
push
mov
jnp
je
nop
gs
jmp
cmp
cmps
fs
repnz
mov
add
jno
in
add
cmps
outs
adc
sbb
shl
jle
mov
cmps
sahf
gs
test
adc
popf
inc
jno
repnz
inc
inc
jne
aas
push
jecxz
mov
and
push
mov
jo
loope
fdivr
aam
outs
mov
gs
inc
fmulp
out
ss
xchg
sahf
mov
inc
dec
pop
inc
xor
mov
inc
push
pop
retf
jne
pop
inc
rol
retf
out
xchg
dec
in
ins
call
dec
jno
sahf
sub
cld
cli
cs
cmp
cmp
not
fiadd
xchg
cmp
adc
stc
test
xor
ins
jns
xchg
inc
je
sbb
adc
stc
cs
(bad)
jge
addr16
cmp
retf
retf
mov
fs
dec
aad
adc
pushw
xor
and
ror
fimul
cld
xchg
(bad)
sub
int3
cmp
sub
movs
movs
adc
cmp
jb
jnp
stos
xchg
jle
(bad)
jle
lods
or
xor
retf
dec
fcmovbe
inc
test
ja
xchg
dec
and
mov
push
ins
add
loopne
jecxz
cdq
daa
sub
push
das
xor
ds
(bad)
pop
push
sub
sub
adc
fstp
(bad)
and
mov
(bad)
cmp
das
repnz
dec
mov
and
fdiv
xor
mov
fmul
add
scas
sbb
and
inc
adc
popa
cs
and
not
jg
add
(bad)
cmp
fadd
cmps
jo
(bad)
mov
pop
xor
scas
cmp
pop
or
adc
and
fsubr
icebp
push
dec
sbb
test
adc
cdq
and
test
out
je
add
add
rcl
push
xor
popf
xchg
es
addr16
xor
inc
inc
xor
in
jae
push
dec
and
pop
into
dec
jb
test
ds
jmp
mov
mov
and
mov
push
arpl
ds
xchg
inc
inc
ja
sub
xchg
mov
mov
fild
xor
pop
jbe
shl
pop
lods
mov
cmp
cmp
cmp
gs
inc
fdiv
shl
lods
mov
xchg
ret
pop
mov
in
and
pop
aaa
mov
push
imul
stc
sbb
nop
pop
retf
(bad)
cld
pop
and
pop
sbb
push
and
lea
inc
ins
mov
bound
push
movs
les
mov
pop
jo
sahf
mov
cs
or
(bad)
out
out
ds
(bad)
jmp
icebp
lahf
inc
aas
inc
sbb
jne
enter
(bad)
int
xchg
mov
mov
xor
cwde
out
jbe
bound
cmc
xor
jle
enter
adc
jmp
call
lahf
mov
je
pop
mov
mov
outs
int3
stos
jmp
in
xchg
sub
add
cmp
pop
cld
add
shr
pop
or
adc
pop
inc
cli
xchg
lds
push
shl
jbe
jge
lahf
push
pop
in
pop
add
mov
(bad)
xor
jns
(bad)
fdiv
mov
sbb
adc
test
sub
test
(bad)
ja
pop
mov
and
lds
sbb
popf
repz
ja
push
lods
inc
cmps
inc
lods
cmps
push
outs
add
mov
std
jl
clc
jp
out
dec
adc
and
sbb
in
or
les
sbb
mov
xor
ins
daa
in
jecxz
dec
movs
jg
nop
or
xor
sub
scas
rcl
sar
pop
fmul
scas
push
lods
sub
and
jae
cwde
jno
pop
cmp
dec
fadd
out
enter
sbb
ja
add
xchg
inc
cmp
xor
ja
pop
dec
cmps
cmp
push
sbb
dec
push
adc
retf
push
jp
mov
into
pop
pop
lods
pop
das
mov
sbb
sub
(bad)
cld
mov
dec
push
xchg
push
lds
vshufps
jge
xor
sub
jmp
pop
mov
or
(bad)
loope
lahf
test
in
push
inc
add
mov
inc
pop
fsin
cmp
mov
inc
ret
sub
(bad)
mov
xor
mov
and
out
je
sub
lds
scas
scas
sub
or
or
int
mov
mov
cmp
fcmovu
pop
dec
out
adc
sar
repnz
jbe
popa
or
inc
(bad)
mov
jnp
push
std
mov
icebp
int3
cmp
sbb
xchg
mov
xchg
ret
sub
int3
push
loopne
or
(bad)
lahf
sar
not
retf
cs
stc
cmps
test
push
scas
or
sbb
imul
and
inc
mov
and
and
and
aam
or
movs
or
rcr
aas
lahf
pop
xchg
push
push
mov
inc
jb
dec
add
dec
push
cmp
mov
cmp
out
inc
adc
and
imul
lods
xor
cmp
and
sub
(bad)
ds
dec
pop
jp
retf
xchg
out
ins
in
xlat
imul
pop
cmps
push
and
dec
and
stos
pop
fcom
pop
and
sbb
jecxz
jb
stos
test
adc
and
push
jbe
jl
ja
into
pop
mov
repz
cs
jb
add
fcom
add
popf
ins
cdq
pusha
push
mov
inc
imul
ret
xchg
scas
aam
dec
jge
inc
lahf
push
jmp
int
je
jp
scas
mov
into
fwait
push
jns
fidivr
pop
pop
sbb
fimul
or
(bad)
sbb
xchg
cs
cmps
loopne
ja
gs
lods
push
xchg
mov
sbb
xor
push
sahf
mov
mov
lahf
xor
inc
mov
retf
int3
scas
loop
push
lds
enter
pop
shl
dec
pop
jne
(bad)
jmp
fcmovnb
iret
icebp
push
xchg
dec
sub
dec
call
cmp
inc
xor
push
inc
lods
jl
imul
in
test
mov
pop
rol
fimul
div
cmc
adc
mov
(bad)
cmps
jl
jl
mov
fs
sub
out
jle
in
cwde
xlat
lock
loope
xor
cmp
scas
jnp
or
or
cmp
cmp
fimul
outs
pusha
(bad)
aad
lock
sahf
xor
je
(bad)
pop
(bad)
fistp
iret
xchg
xchg
call
les
xchg
ins
pop
in
push
dec
ret
lahf
mov
aaa
add
loope
jp
sbb
jmp
repz
aaa
jle
inc
retf
mov
aaa
xchg
push
add
sub
mov
sbb
ss
jnp
shl
(bad)
push
mov
and
cmps
loop
outs
mov
dec
mov
je
(bad)
mov
stos
or
adc
icebp
in
scas
out
add
add
push
nop
add
(bad)
lock
imul
mov
ret
xchg
and
dec
mov
or
sbb
cmps
cmp
in
add
mov
cmps
clc
xchg
inc
movs
arpl
lahf
pop
addr16
jge
add
stc
lds
lods
mov
mov
dec
push
retf
ret
(bad)
into
jb
cmp
ins
aam
add
lahf
mov
jle
dec
dec
ror
rcl
add
push
sbb
(bad)
lds
and
jp
mov
cmp
stos
push
mov
mov
inc
call
xchg
mov
or
fst
xor
cld
pop
pop
dec
lds
into
out
mov
push
push
jbe
pop
enter
cmp
rcl
inc
dec
(bad)
int
mov
jb
mov
in
or
rol
shl
mov
mov
test
int
jmp
mov
es
and
dec
sub
xchg
push
xlat
mov
mov
pop
jo
gs
lea
add
push
shr
movs
sbb
adc
xor
ret
xchg
xchg
out
sub
jecxz
cmp
enter
cmc
xor
jmp
pop
inc
shr
sub
mov
mov
pop
mov
cmp
pop
cmp
xchg
cmps
inc
cdq
iret
repz
pop
mov
cmp
dec
sahf
pop
push
pshufw
push
les
ret
mov
add
push
push
mov
cmps
in
stc
loopne
daa
lds
jge
cli
daa
lahf
iret
and
fnstsw
sbb
xchg
mov
movs
inc
mov
fisub
rcl
and
push
fcom
inc
out
xor
aaa
xchg
xlat
mov
mov
fmulp
xchg
jge
and
xchg
dec
test
and
add
jmp
ins
inc
or
(bad)
in
mov
fwait
scas
mov
sub
dec
imul
out
je
dec
pop
jmp
pop
push
and
and
jne
rcr
jno
cli
pusha
cmp
das
cwde
in
mov
mov
jg
push
xchg
mov
into
jno
or
inc
inc
mov
pop
push
push
clc
jo
gs
pop
(bad)
fistp
cs
and
movntps
sbb
pop
(bad)
shl
dec
mov
mov
test
in
test
mov
inc
dec
push
rol
fdivr
add
add
jp
mov
dec
ret
mov
test
cmps
pop
rcl
dec
retf
jo
shl
and
mov
add
jbe
ins
pop
mov
sbb
add
repnz
cdq
push
cmp
pop
sub
ficom
mov
mov
jmp
jns
test
push
mov
sahf
cmp
and
pop
mov
add
mov
popa
ins
or
add
add
call
pushf
int
xor
mov
sbb
mov
mov
mov
sub
test
xor
pusha
leave
js
fmul
jmp
sub
(bad)
int3
pop
cdq
cmp
mov
retf
daa
push
ins
mov
dec
adc
cs
jae
test
cmps
sbb
icebp
inc
cs
or
and
xchg
fadd
cli
pop
aaa
cmp
mov
push
clc
aaa
adc
loope
and
and
mov
in
test
adc
pop
inc
jmp
jmp
in
icebp
popf
sbb
mov
or
fsubr
cmps
xchg
stos
call
ja
cs
ins
mov
jb
movs
xor
jmp
sub
into
jg
popa
fldcw
retf
inc
xchg
jmp
(bad)
jle
xchg
mov
pop
js
cwde
data16
push
je
in
mov
(bad)
xchg
sub
mov
jno
xlat
and
adc
hlt
rcl
sbb
pushf
xor
and
cmp
fdiv
ror
add
pop
ss
xor
stos
scas
mov
data16
mov
mov
sbb
cwde
retf
adc
pop
sub
sub
jae
or
cli
sbb
aad
cmps
test
cmp
aas
(bad)
xchg
jp
jno
(bad)
cdq
rcl
push
jo
jp
mov
repnz
test
jno
cmp
mov
fisubr
xor
mov
sub
dec
shr
pushf
test
push
shl
pop
fldenv
or
lahf
xchg
jecxz
lea
ret
cmps
add
sub
retf
es
out
outs
adc
cmp
pop
enter
mov
dec
iret
mov
sub
jmp
push
adc
int
xchg
xchg
je
jle
(bad)
pop
scas
push
(bad)
test
pop
stos
sbb
mov
push
push
fmul
call
mov
fcom
jb
sbb
sar
sub
jecxz
xchg
cmc
dec
xchg
xor
and
(bad)
int3
jb
aad
movs
xor
mov
add
and
cmp
push
popaw
test
stos
loop
ficom
push
jne
mov
add
into
cdq
jns
(bad)
shr
mov
das
shl
addr16
jmp
mov
push
rol
out
xor
arpl
inc
(bad)
call
hlt
fbstp
ins
loopne
pop
retf
add
pusha
sti
push
xor
(bad)
hlt
push
dec
dec
or
pusha
mov
mov
or
xchg
jg
sbb
add
neg
retf
mov
mov
dec
jae
fidiv
jmp
pop
into
cmp
lock
jp
enter
dec
add
xchg
add
ins
and
mov
rcl
sub
loopne
mov
mov
pop
xor
sbb
fwait
aaa
adc
sbb
(bad)
cmp
clc
pop
inc
cdq
jne
push
inc
mov
lods
xchg
mov
push
popa
outs
jne
sub
int3
jmp
or
out
jmp
sbb
lahf
or
sbb
jl
repz
ret
push
lea
sar
scas
mov
jb
cmc
in
retf
mov
xchg
jmp
mov
fnstenv
popf
repz
fcomp
out
mov
push
js
add
call
in
jae
in
sub
push
dec
push
push
std
cli
out
gs
movs
push
test
mov
mov
mov
mov
push
fadd
ret
fst
inc
xchg
mov
cdq
sub
pop
nop
pushw
push
(bad)
daa
mov
arpl
xchg
scas
rol
out
pop
or
pop
adc
ins
rcl
fldcw
cwde
jmp
fisttp
jecxz
dec
jo
stos
or
arpl
jp
in
aad
nop
inc
shl
xor
pop
sahf
int3
mov
inc
inc
into
add
imul
pop
adc
icebp
inc
dec
and
dec
pop
leave
jecxz
cdq
mov
fs
push
call
cmp
add
xchg
push
push
daa
fnstenv
lods
add
or
sbb
cmp
push
lods
cld
push
or
test
les
jns
mov
(bad)
dec
pop
xor
jo
sti
je
popf
shl
aam
xor
push
clc
stos
(bad)
adc
lods
mov
fisttp
xor
jp
int
sub
adc
js
cld
mov
(bad)
lods
cmp
push
(bad)
or
fwait
sub
icebp
jle
out
(bad)
loopne
jnp
mov
icebp
mov
shl
push
rcl
(bad)
xchg
ret
icebp
shl
mov
dec
pop
xchg
fnstsw
push
add
jnp
pop
jae
jle
xor
in
cmps
jo
add
jge
sub
icebp
lock
rcr
sahf
loopne
test
cwde
mov
outs
push
mov
adc
in
(bad)
cli
xchg
xchg
rol
adc
cld
push
iret
out
mov
popf
xor
mov
xchg
jne
xchg
jns
or
adc
(bad)
in
call
(bad)
mov
push
xchg
xchg
mov
popa
and
pop
and
xor
and
push
jae
test
ins
fwait
push
test
sbb
xchg
push
push
aad
push
ss
in
mov
outs
iret
sbb
sub
cmp
lods
inc
mov
test
or
sub
and
xor
dec
jno
fldpi
ds
mov
(bad)
stos
hlt
mov
pop
outs
cwde
xchg
jno
stos
push
xchg
or
jp
add
retf
xor
or
imul
mov
pusha
adc
popf
hlt
push
jl
mov
loope
fistp
imul
popf
mov
sbb
loope
pop
adc
pop
and
mov
test
in
sub
fsubr
pop
mov
push
stos
pop
fucomi
shr
cmps
xor
jecxz
idiv
mov
in
adc
test
cld
or
sbb
jle
test
jbe
cwde
in
ins
outs
add
ja
sub
cmp
inc
sub
mov
or
inc
mov
xor
and
lock
cmp
push
aad
pop
inc
mov
dec
pop
adc
adc
cwde
lods
arpl
std
adc
shr
mov
mov
adc
cmp
in
inc
shr
jg
test
lds
jo
xchg
lahf
and
mov
or
neg
or
jecxz
sub
mov
into
add
mov
call
dec
pop
leave
pop
popa
repnz
add
xor
jecxz
push
test
cmps
not
pop
inc
pop
mov
(bad)
sbb
mov
ret
cmc
dec
ffree
jmp
and
pop
add
mov
repz
cs
or
sub
jno
bnd
sub
stos
xchg
fcomp
nop
test
popa
xchg
adc
cmp
and
jo
push
fadd
inc
je
mov
bsr
clc
xchg
push
sub
daa
in
inc
add
ror
add
xor
push
(bad)
stc
clc
data16
mov
pop
or
push
mov
adc
sub
pop
add
sbb
inc
push
das
or
sbb
or
sahf
fld
mov
inc
in
fstp
or
sar
repz
(bad)
adc
lods
mov
sbb
sahf
iret
xor
cwde
jmp
cmp
adc
(bad)
mov
out
add
mov
mov
mov
out
sbb
daa
iret
or
jne
jae
xor
adc
jmp
sub
pushf
xor
push
addr16
cdq
test
enter
sub
xchg
sar
out
das
xchg
dec
popa
xchg
out
push
xchg
adc
push
pop
inc
xchg
(bad)
or
cld
jo
scas
mov
test
sahf
scas
jmp
fisubr
sbb
add
das
div
int3
sbb
ins
dec
jp
add
add
(bad)
(bad)
shl
imul
cwde
bound
cmp
hlt
pop
pop
mov
pop
mov
dec
fmulp
inc
out
or
xchg
push
push
inc
out
or
stc
mov
fld
xor
cmp
aaa
xor
repz
(bad)
mov
push
outs
xchg
jmp
adc
add
jmp
ss
stc
or
loope
sub
mov
lock
and
nop
push
cld
jmp
xor
shl
dec
pop
aas
jne
fisubr
sbb
enter
and
and
mov
aaa
dec
mov
out
(bad)
cld
in
pop
jmp
aaa
retf
jle
ror
or
jp
xor
push
in
ss
xor
bound
iret
push
jns
and
adc
xchg
std
loope
push
sub
xor
mov
mov
sub
idiv
mov
mov
jo
jnp
dec
(bad)
(bad)
bound
xchg
xor
jmp
dec
fs
mov
out
or
xor
inc
(bad)
push
pushf
jbe
lock
lock
imul
jecxz
xchg
aam
sub
jmp
pusha
pop
and
inc
and
iret
inc
dec
mov
mov
jo
cmp
bsf
inc
je
lock
sbb
(bad)
neg
sub
adc
std
sub
pop
outs
pop
dec
not
pop
test
sar
xchg
sbb
rol
call
adc
js
es
cld
cld
fsubr
nop
xchg
mov
dec
cmp
cli
cmps
into
bound
push
cld
sbb
xor
rol
or
addr16
bound
jl
sub
dec
test
sub
inc
or
cli
retf
les
stos
fisub
jae
cdq
shr
adc
inc
mov
clc
push
push
cmp
mov
ja
jg
sbb
vpshufhw
pop
pop
loopne
dec
jmp
mov
fwait
dec
pop
out
sbb
jmp
cwde
jp
jmp
daa
in
sub
xor
ror
xchg
xor
mov
push
jmp
sub
lahf
push
dec
xchg
ins
je
imul
iret
sahf
into
out
(bad)
pusha
jno
out
xchg
lock
imul
jl
pop
push
mov
inc
jg
and
cmp
cdq
ins
inc
jo
cvtdq2ps
(bad)
sbb
lds
sbb
pop
enter
test
lods
jns
pop
sub
jmp
sub
jbe
push
stc
xor
mov
mov
repz
mov
jg
dec
add
and
enter
js
mov
clc
(bad)
icebp
pop
out
cld
sbb
mov
push
int
xchg
loop
or
xchg
nop
adc
fimul
nop
and
adc
xchg
push
test
mov
adc
das
(bad)
sbb
sub
fucomip
inc
inc
mov
xchg
fcom
mov
cmp
in
pop
loope
pop
adc
hlt
ins
cmp
push
push
jb
inc
mov
sbb
sub
cmps
dec
fdivr
jp
add
cmp
mov
data16
jb
add
aad
push
mov
int
ret
leave
loop
cmps
outs
and
pop
adc
pop
and
xchg
sbb
cmp
lahf
out
clc
or
jl
ror
sub
fidiv
add
xor
mov
mov
cdq
mov
into
fisttp
ins
jmp
mov
mov
cmp
(bad)
mov
mov
pop
xchg
scas
cld
dec
sub
int3
cmp
pop
loopne
aad
jg
push
mov
loopne
jne
test
sar
xchg
jecxz
inc
dec
push
daa
les
sahf
ror
in
xchg
mov
lea
push
iret
(bad)
cld
in
fistp
xchg
outs
call
or
and
jmp
jmp
jne
sub
jns
aam
stos
scas
xchg
out
push
nop
add
stos
adc
ins
fidiv
sbb
stos
mov
mov
jmp
mov
sbb
imul
or
ins
lods
dec
fmul
lahf
sbb
xchg
jae
imul
xor
outs
sahf
adc
pop
lods
push
jnp
mov
shl
pop
inc
mov
jg
xchg
jp
sub
mov
das
xchg
xor
je
inc
std
push
and
xor
push
out
jne
or
jecxz
mov
mov
sbb
mov
or
in
or
fs
nop
daa
or
jmp
or
push
push
test
dec
adc
aaa
pop
mov
xor
and
pop
and
mov
push
out
jnp
shr
sub
adc
icebp
test
lods
cwde
(bad)
pushf
and
sbb
sti
mov
add
movs
mov
jmp
aaa
lock
push
dec
(bad)
call
nop
push
pusha
int
fwait
icebp
sbb
(bad)
in
jmp
(bad)
dec
sub
pop
and
adc
jo
cmp
xlat
mov
sbb
(bad)
mov
fnsave
pop
pop
mov
jnp
mov
cld
ins
push
mov
nop
mov
movs
add
sar
loope
lock
rcr
(bad)
std
adc
mov
je
jnp
inc
movs
mov
inc
or
in
or
or
js
jmp
cwde
stc
jb
movs
adc
xchg
mov
test
das
(bad)
in
jmp
jbe
cmps
addr16
(bad)
sbb
cli
jg
icebp
sbb
mov
xlat
push
adc
mov
test
adc
sbb
mov
call
sub
push
jle
(bad)
loope
in
inc
or
test
aam
xor
stc
stos
mov
loop
push
pop
cmp
addr16
or
test
mov
add
xchg
mov
popf
call
fs
lods
call
xchg
fdiv
in
das
or
ds
mov
mov
movs
into
shl
pop
clc
lods
and
(bad)
xlat
stos
dec
cwde
cmp
cli
data16
dec
mov
loop
inc
lds
in
cld
sub
inc
stos
fiadd
xor
cld
fcomp
and
clc
dec
dec
push
stc
popa
imul
sub
lea
cli
pop
push
in
dec
inc
cmps
je
adc
jp
inc
std
pop
hlt
(bad)
jnp
cld
aaa
ins
add
sti
test
movs
dec
mov
pop
cmps
cs
jp
cmp
xor
pusha
int
in
inc
push
leave
or
fucomip
sti
lods
mov
lods
js
inc
sub
add
jb
add
call
cmp
inc
push
sub
dec
ins
ins
shr
and
add
(bad)
push
jmp
add
dec
(bad)
ficom
add
addr16
cmc
push
cmp
(bad)
mov
sbb
aas
cmp
jmp
jne
fldcw
push
jo
mov
retf
cmp
ss
jle
jno
nop
pop
mov
cli
sbb
retf
punpcklbw
pop
sahf
pusha
jp
mov
cmp
wbinvd
data16
pusha
sar
(bad)
in
cs
lock
push
add
and
mul
in
mov
cmp
jmp
cmp
or
dec
sti
add
mov
adc
mov
mov
addr16
hlt
jmp
adc
cdq
sahf
cmp
loopne
loop
lds
mov
gs
pushf
jmp
loop
fsub
adc
pop
int
mov
xor
xchg
outs
lods
fcomp
fnstsw
sbb
lock
sbb
popf
pusha
hlt
scas
xlat
scas
sub
and
ret
cli
pop
sahf
cs
fndisi(8087
sbb
popf
retf
out
push
movs
call
dec
test
in
daa
out
jl
jl
add
sbb
jg
lea
and
clc
in
push
jbe
or
out
js
sub
or
idiv
(bad)
scas
cmp
sbb
pop
dec
ret
int3
test
retf
iret
add
xor
pushf
mov
sbb
pop
aad
push
in
pop
mov
inc
ror
imul
and
inc
les
lahf
inc
inc
xor
mov
popf
out
mov
mov
add
jmp
lock
jl
cmc
push
lock
inc
and
in
idiv
push
fs
jl
push
inc
mov
loope
lods
cmp
and
fcom
nop
(bad)
mov
sbb
cwde
loop
mov
mov
or
jo
into
out
mov
outs
(bad)
int
or
leave
pop
adc
jno
dec
sub
cmp
sbb
popf
jne
jmp
mov
fisttp
xlat
sahf
jns
pop
test
div
xlat
imul
or
fsubr
ins
je
sub
gs
ret
fadd
stos
pop
retf
mov
test
cmp
popf
cmp
ret
mov
int3
fadd
stos
je
and
or
cmps
mov
mov
int3
test
push
les
add
popa
jmp
out
cld
mov
push
lock
test
sub
inc
ins
lea
stos
(bad)
pushf
mov
inc
mov
sub
scas
push
out
scas
inc
mov
and
or
popf
ins
or
scas
add
mov
dec
fmul
addr16
arpl
shl
shl
push
mov
stos
xchg
xor
gs
sbb
in
jmp
fwait
(bad)
(bad)
sbb
sub
add
add
push
xor
or
xchg
dec
xchg
jmp
inc
std
idiv
cmps
fdiv
xor
xor
sub
cmps
or
(bad)
fs
cmp
sbb
inc
xchg
loope
icebp
aad
shr
mov
movs
out
pushf
push
ficomp
les
dec
inc
inc
add
cmovge
shl
(bad)
sbb
dec
pop
out
jmp
xchg
xchg
std
jne
pop
xor
cmp
mov
test
retf
xchg
mov
mov
pop
xlat
arpl
addr16
jbe
test
out
sbb
mov
mov
rcr
retf
and
icebp
pop
retf
outs
cli
sbb
sbb
adc
pop
xor
popa
pop
repz
pop
sbb
outs
test
mov
jne
jp
cmp
imul
in
jge
cdq
mov
sbb
pusha
es
mov
mov
(bad)
retf
sbb
push
imul
sbb
pop
pop
ficomp
mov
push
add
jle
or
(bad)
adc
jne
hlt
aad
pop
push
sbb
jg
ja
fs
jns
cmp
xchg
in
aam
repz
cs
out
dec
jg
xchg
pop
addr16
mov
xchg
mov
dec
hlt
into
mov
push
int3
add
sub
int3
xchg
icebp
xchg
dec
sbb
add
outs
movs
call
in
inc
and
not
les
cmp
sub
jo
test
cmp
fld
sbb
or
dec
push
mov
into
sub
inc
jne
or
add
mov
aaa
inc
lods
sbb
mov
mov
and
addr16
lods
hlt
fcmovnb
fsubr
data16
ret
pusha
cld
sbb
fs
mov
loop
mov
movs
ret
mov
(bad)
sub
jae
test
inc
adc
test
lds
lds
jne
pop
jle
sti
retf
xor
ret
inc
loop
xchg
xchg
inc
jne
retf
mov
jg
lds
mov
cdq
and
mov
loopne
sti
ins
fmul
cld
mov
xchg
or
or
inc
call
fnsave
or
sub
gs
pop
enter
test
push
xchg
dec
loope
daa
push
mov
push
aam
jp
dec
cmp
mov
(bad)
xor
pop
and
lods
scas
aaa
lahf
mov
add
in
inc
test
sbb
loop
cmp
xlat
cmc
addr16
data16
mov
xor
mov
sbb
xchg
inc
std
mov
addr16
pop
ror
mov
or
jb
test
inc
dec
cmp
mov
push
lock
adc
outs
scas
add
lods
scas
test
iret
pop
jbe
scas
pop
inc
jg
cmp
pop
ficom
mov
mov
push
fs
inc
inc
xchg
cmps
push
dec
pop
aas
push
lods
pop
or
in
jg
or
(bad)
popf
sub
jnp
ret
mov
call
bound
and
daa
sbb
push
jmp
movs
mov
bound
sub
mov
mov
inc
mov
and
mov
or
lahf
add
loopne
aam
call
cmp
fst
dec
xchg
sbb
fcmovnb
outs
ret
fadd
jg
dec
icebp
and
and
test
jp
pop
or
xor
test
test
call
test
int
or
sbb
inc
jge
arpl
cmp
ds
mov
push
and
fwait
mov
cmp
inc
adc
mov
sbb
pop
jecxz
(bad)
(bad)
ret
pusha
mov
push
add
loope
movs
ret
sbb
xchg
xchg
bound
push
icebp
push
jp
fbld
inc
ss
add
fs
idiv
sub
sahf
in
push
loopne
adc
add
ror
push
std
jmp
aam
pop
lock
pop
add
jl
outs
in
push
cwde
jno
cmc
push
push
sahf
adc
popf
xor
and
mov
jle
and
push
add
jl
int
jno
shl
gs
cmp
mov
and
push
fs
sbb
and
je
fist
mov
cmps
sub
pop
fnstsw
cmp
out
push
lods
ret
leave
retf
dec
or
mov
cmc
jns
jmp
or
mov
ss
and
into
cmp
sbb
loop
push
dec
mov
mov
aad
mov
sar
sbb
(bad)
aad
xor
mov
or
xchg
dec
call
pop
pushf
add
(bad)
jp
repnz
xchg
sbb
pop
(bad)
cli
stc
push
add
aas
out
leave
inc
scas
add
xchg
ins
enter
loop
and
into
jnp
mov
jp
pop
(bad)
(bad)
fnclex
cmp
cmp
and
and
jno
adc
mov
mov
cmp
xchg
or
(bad)
leave
sub
les
xchg
das
xchg
push
fild
mov
ins
dec
scas
call
and
jmp
test
in
aad
enter
jne
rcl
test
xchg
mov
shr
xchg
xchg
adc
(bad)
sub
scas
or
lods
xchg
and
inc
push
adc
push
(bad)
rcl
sub
lock
loop
dec
in
aam
adc
shl
rol
fwait
lock
mov
(bad)
ret
fidivr
js
mov
jle
int
ja
popf
mov
mov
mov
loopne
cmp
push
jne
cmps
(bad)
push
push
xor
popf
or
ficom
nop
xchg
pop
adc
xchg
jbe
mov
mov
js
inc
scas
int3
and
in
mov
shl
repnz
shl
scas
ins
mov
ja
xchg
imul
or
jno
icebp
fcom
or
lea
repnz
adc
cmp
inc
mov
dec
dec
pop
arpl
push
shr
mov
clc
bound
mov
addr16
out
fstp
dec
daa
outs
sub
fcom
inc
js
xchg
(bad)
int
ds
mov
dec
sbb
or
mov
pop
les
jg
mov
pop
cmp
sbb
sbb
fisttp
cli
movs
pop
das
mov
loope
dec
dec
scas
js
inc
push
inc
pop
aaa
pop
push
loopne
push
mov
rol
shl
arpl
mov
jle
(bad)
out
sbb
pop
sbb
retf
popa
jge
aaa
mov
repz
loop
call
and
mov
ret
idiv
add
jbe
test
push
arpl
fstp
pop
enter
movs
in
in
imul
mov
out
jg
inc
test
inc
cwde
push
xchg
mov
adc
add
xchg
pop
ja
gs
ret
jecxz
xchg
(bad)
popf
test
mov
mov
sbb
sub
push
outs
adc
cmp
jb
jl
out
adc
adc
jmp
pop
add
or
jle
or
mov
sti
push
shl
pop
hlt
cmp
and
mov
cmps
mov
js
aam
adc
loope
call
cmps
cmp
std
out
mov
js
xor
sbb
jb
mov
mov
pushf
xchg
mov
jmp
and
iret
inc
mov
stos
push
inc
fist
imul
retf
rcr
xor
stos
call
lea
push
jns
inc
mov
enter
fnstsw
out
sbb
fidivr
or
jmp
mov
xor
inc
lods
cmp
mov
inc
outs
inc
push
loope
xchg
add
sbb
rol
xchg
adc
mov
ror
neg
ins
cli
lahf
arpl
les
dec
jne
cmps
push
mov
push
adc
jg
mov
adc
out
xor
sub
and
aam
out
scas
nop
out
mov
lds
jecxz
mov
rcl
imul
pusha
movs
jbe
test
pop
test
push
mov
rol
mov
daa
(bad)
sub
push
push
or
out
push
sbb
jle
add
dec
pusha
out
in
test
xrelease
xchg
neg
jmp
mov
xchg
push
xchg
jbe
fst
loopne
test
fmul
gs
and
mov
sub
mov
jl
or
mov
outs
sbb
sahf
xor
mov
scas
ds
xor
xchg
stos
js
jle
pop
stos
inc
pusha
or
(bad)
aaa
in
fist
scas
fimul
xor
dec
leave
xor
js
sahf
arpl
je
pop
sub
fimul
iret
and
mov
fistp
add
push
push
pop
das
test
inc
dec
cdq
outs
pop
sub
int
mov
test
adc
adc
sbb
movs
sbb
sub
pop
push
sbb
bnd
adc
outs
(bad)
push
sbb
mov
cmp
xchg
setl
js
jno
out
std
pop
push
fcomp
enter
fcom
outs
or
pop
repz
sbb
in
stos
rcl
cmp
retf
cld
push
dec
cmps
sub
bound
adc
cli
in
push
scas
xor
sub
mov
mov
pop
jle
mov
outs
jl
retf
test
out
ss
aas
pop
sbb
sbb
(bad)
out
call
mov
xchg
push
cmps
sbb
or
ja
add
cmp
sahf
mov
xchg
pusha
jmp
mov
retf
lods
retw
mov
cmp
push
jge
addr16
add
fnstsw
clc
in
and
bound
cmps
cdq
cmps
push
push
out
or
shl
and
pop
and
sbb
fimul
sub
or
es
jp
cdq
adc
xor
cdq
mul
push
mov
mov
jmp
xchg
aam
add
jge
dec
add
mov
sbb
adc
sbb
xchg
ins
sub
fwait
and
call
add
arpl
jo
mov
in
mov
jb
add
pop
jmp
in
push
cli
out
aam
in
jg
xchg
mov
hlt
stos
fwait
aad
jmp
js
(bad)
sub
js
test
and
ins
push
jns
sahf
jl
rol
outs
xor
test
(bad)
rol
imul
jno
or
fnsave
cmps
std
jg
shl
in
add
int3
retf
mov
cmps
inc
stc
inc
cmp
in
jbe
cwde
retf
xchg
fadd
xchg
cmp
add
adc
inc
pop
call
clc
sub
pop
(bad)
and
sbb
push
cwde
ficomp
mov
xchg
pop
sub
adc
or
cmp
add
xor
arpl
jg
push
fwait
jmp
inc
xor
and
(bad)
xor
mov
int3
fwait
jmp
call
sti
cli
inc
mov
in
xor
sbb
scas
aaa
adc
jmp
iret
xchg
jecxz
out
pop
ss
pushf
and
loopne
outs
aaa
pop
cmp
pop
loop
stos
mov
dec
xor
mov
jo
les
mov
nop
pop
fadd
(bad)
dec
or
fimul
mov
daa
pusha
xor
sbb
test
fadd
xchg
pop
scas
add
jb
xchg
or
repnz
jge
out
sub
fwait
adc
daa
cmp
mov
or
mov
mov
imul
cmc
inc
bound
lods
aaa
and
xchg
in
mov
mov
and
jge
push
xchg
aam
call
shl
xchg
test
push
int3
daa
xor
repnz
and
and
lock
in
call
test
add
mov
fnop
dec
inc
scas
push
cmps
fcmove
mov
mov
int3
sbb
mov
bound
xchg
sar
sbb
push
push
sti
lea
cwde
jo
mov
lock
adc
adc
push
jecxz
xor
fcom
sub
aas
call
call
scas
movs
inc
inc
or
test
call
sar
icebp
jne
sbb
ret
mov
mov
sahf
xchg
lods
into
sub
pop
mov
jg
xor
cmp
sub
jns
hlt
pushf
test
dec
sbb
mov
adc
push
fcomp
sub
inc
cdq
push
pop
dec
xchg
pop
(bad)
(bad)
iret
in
cmp
mov
pop
xchg
sbb
pop
push
pop
stos
jmp
inc
adc
or
cld
inc
bound
cmc
inc
(bad)
int3
imul
stos
enter
sar
mov
pop
sub
into
aad
call
sub
cmp
ss
mov
dec
enter
in
xor
lods
cdq
in
outs
into
lods
and
jnp
inc
pop
mov
fsub
mov
or
imul
push
push
pop
xchg
mov
mov
add
pop
fs
cs
and
xor
add
ss
dec
adc
in
sbb
jl
dec
mov
or
(bad)
jmp
fld
cmc
xchg
rcl
movs
adc
ins
retf
xchg
pop
adc
mov
fistp
arpl
sub
cmp
pop
hlt
in
mov
push
sbb
mov
clc
sub
adc
test
stos
scas
rcl
imul
jmp
sub
jecxz
cli
arpl
add
mov
pop
iret
mov
loop
loopne
not
es
iret
inc
repnz
imul
fisub
in
repnz
mov
xor
frstor
movs
fcomi
cwde
pop
stos
into
aaa
push
and
sbb
pop
or
mov
test
add
ret
movs
mov
test
or
xor
jecxz
mov
das
mov
rcl
cmps
je
add
push
call
outs
out
adc
push
sbb
push
loop
(bad)
mov
pop
mov
dec
retf
sub
dec
dec
lahf
add
push
dec
rcl
outs
in
clc
pop
popf
movs
and
mov
daa
dec
stos
jmp
leave
and
sbb
sbb
mov
mov
push
sub
inc
mov
cwde
sbb
(bad)
ins
adc
xor
arpl
(bad)
fnstsw
cwde
fsub
popa
xchg
retf
out
jno
xor
lahf
jmp
jnp
sub
push
iret
xchg
pop
jbe
call
clc
push
xor
inc
jg
dec
dec
int3
mov
test
mov
cwde
imul
outs
or
stos
fbstp
xchg
sbb
ss
dec
cmp
mov
mov
int
or
stc
data16
adc
in
cmp
(bad)
mov
sub
mov
ins
sub
and
loope
mov
pop
adc
cld
add
std
push
push
inc
stos
jmp
sahf
lods
aas
in
mov
das
xlat
mov
mov
push
sar
push
mov
xchg
rcl
push
or
jecxz
dec
adc
jmp
mov
lods
jecxz
fdivr
fild
pushf
outs
cdq
rol
call
popf
jne
(bad)
sub
mov
les
push
jg
xor
jo
dec
adc
pusha
in
idiv
data16
add
mov
jle
dec
sbb
mov
int3
cld
mov
inc
inc
jb
fdivr
push
sbb
and
mov
fldenv
ins
inc
cli
cmp
inc
std
int
rcr
and
les
cmp
test
sbb
adc
loope
push
movs
mov
movs
sti
shr
sbb
mov
sbb
xchg
jbe
mov
and
and
daa
dec
pop
not
adc
pop
call
sub
mov
xchg
and
lahf
ror
std
sbb
je
aaa
scas
xor
inc
das
adc
addr16
inc
stos
sub
or
in
xor
cmps
pop
xchg
ins
faddp
shr
cmps
mov
fcmovnbe
dec
add
cmp
jmp
sbb
xor
push
mov
and
je
in
imul
and
ret
jle
mov
mov
lahf
fcom
add
call
xor
out
sbb
mov
jecxz
xchg
and
outs
ret
mov
jo
add
mul
adc
mov
ins
xchg
movs
cmp
mov
fst
daa
jno
push
xor
mov
sub
dec
daa
add
movs
cwde
loopne
cld
ret
pop
repz
call
push
mov
fldcw
(bad)
or
inc
mov
cdq
(bad)
pop
pop
gs
enter
sub
shr
mov
sub
mov
cmps
or
jecxz
jg
nop
sub
inc
lods
outs
fcom
rcl
into
and
rol
aas
adc
push
push
sbb
popf
outs
out
jbe
mov
mov
and
retf
jo
jae
ins
daa
(bad)
enter
xchg
mov
sub
xchg
xor
cmp
out
inc
in
ret
dec
inc
sbb
add
fiadd
jns
jae
jne
pop
movd
lock
(bad)
pop
pop
sahf
fcomp
dec
mov
lahf
lods
cdq
mov
mov
test
outs
lahf
dec
std
jno
loopne
mov
mov
mov
ret
or
rcr
in
mov
pop
sahf
(bad)
(bad)
xchg
push
das
xor
pusha
cwde
(bad)
arpl
dec
shl
retf
add
xor
fbstp
inc
pop
aaa
fucomip
sub
push
and
and
imul
or
mov
in
repnz
retf
mov
and
rcl
xor
mov
lods
stos
cmps
dec
aam
jmp
stc
stos
push
mov
push
lods
mov
pushf
xor
outs
(bad)
pop
enter
rcr
dec
fwait
aad
jb
xchg
out
mov
xchg
dec
push
inc
push
push
sub
fwait
rol
fldcw
fisub
cmp
stos
nop
xchg
sub
inc
mov
mov
and
sbb
fistp
mov
jecxz
je
stos
or
fist
clc
sub
mov
nop
data16
int
test
ret
inc
xor
inc
movs
sub
sub
inc
mov
stos
jp
dec
mov
mov
jmp
stos
shl
stos
jb
mov
pop
nop
pusha
add
mov
test
out
inc
shl
adc
test
dec
dec
sbb
fnsave
fs
imul
jl
xchg
mov
jl
inc
mov
addr16
fnstcw
jecxz
cmp
or
fidivr
cmp
in
inc
icebp
mov
into
enter
fisub
inc
inc
jns
inc
jbe
repz
adc
inc
jnp
sub
xlat
add
sbb
mov
adc
push
and
or
fadd
jnp
push
push
scas
in
es
mov
mov
jl
mov
fcmovbe
sub
cmp
or
mov
clc
mov
repz
sti
movs
out
(bad)
sub
or
mov
sbb
stos
std
add
div
es
pop
jecxz
movs
mov
lods
mov
bound
dec
sub
loop
aas
fnstcw
outs
cdq
(bad)
cmc
xlat
jecxz
dec
push
pop
rol
jnp
sub
hlt
or
bound
xor
nop
fdivr
push
jle
js
ror
retf
pop
stc
inc
pop
or
sub
lods
jb
int
xchg
jl
loop
hlt
call
push
xor
ins
xor
fwait
and
mov
ins
cwde
mov
in
mov
push
sahf
ret
test
push
mov
sub
xor
or
fisubr
jl
mov
add
push
icebp
push
neg
adc
loopne
sub
mov
bound
mov
(bad)
cs
mov
or
fs
neg
cmp
fst
loope
and
adc
cwde
and
mov
mov
mov
sar
xchg
aaa
xor
or
frstor
or
mov
pushf
rol
inc
neg
(bad)
jle
sub
adc
xchg
or
xor
xlat
outs
xchg
jmp
push
cmp
sub
and
xchg
ins
hlt
push
jae
and
dec
push
cmc
icebp
and
loope
dec
xor
test
outs
pop
cwde
sar
cs
mov
imul
xor
inc
or
mov
or
into
out
ror
movs
sub
sub
les
stos
mov
sub
jns
imul
idiv
jo
imul
mov
mov
or
aad
enter
bound
push
jns
(bad)
sbb
jae
jle
inc
mov
ret
jbe
sar
cmp
xor
dec
cs
push
fmul
fwait
(bad)
test
sub
nop
xor
movs
retf
arpl
mov
cld
jno
inc
cmc
test
mov
cmp
sbb
or
or
xor
stc
inc
add
jmp
scas
push
or
std
or
cmp
xor
shl
cmp
clc
(bad)
jl
enter
aam
shr
mov
sbb
cdq
cmc
in
loope
retf
fist
arpl
xchg
mov
ret
or
leave
out
cmp
sar
cmp
rcr
in
jecxz
push
xlat
jae
test
jne
push
adc
repnz
xchg
xchg
ficomp
mov
mov
retf
lock
sub
mov
call
xor
aam
out
arpl
in
movs
les
out
mov
xchg
xlat
sub
push
mov
mov
ins
xchg
xor
bound
lock
ret
xor
stc
inc
(bad)
xor
cmps
mov
push
sub
gs
xchg
sub
mov
movs
clc
fwait
inc
mov
stos
xor
mov
pop
jb
xor
xor
fisttp
add
cli
test
mov
push
fimul
xor
js
push
sbb
inc
mov
rcr
jne
xchg
and
loopne
iret
pop
mov
or
imul
push
pop
mov
and
cs
out
inc
aaa
cmps
dec
jnp
mov
imul
jo
or
jo
call
mov
jg
jb
cmp
mov
pushf
mov
das
xchg
iret
stos
jnp
int
sub
jecxz
ret
mov
movs
mul
cmc
dec
(bad)
push
sub
mov
int3
push
pushf
je
adc
(bad)
mov
lods
daa
test
jmp
push
pop
push
pop
(bad)
jbe
dec
es
cli
adc
dec
loope
push
inc
xchg
rcr
push
in
mov
jl
fcomp
out
mov
aad
pusha
pop
lods
gs
add
out
xlat
retf
push
fistp
xchg
inc
repnz
mov
scas
inc
jl
push
push
ds
jle
mov
inc
leave
sub
das
pusha
loope
in
dec
pushf
popa
xchg
test
int3
cwde
rcl
lods
cmp
hlt
sbb
lahf
push
xor
movups
std
sub
stc
pop
xlat
call
pop
outs
mov
lods
cwde
lahf
jno
pop
mov
sbb
xor
add
jo
pop
dec
and
mov
mov
xchg
call
inc
test
lds
ficomp
stos
fbstp
push
aaa
or
call
add
dec
inc
or
cmp
repnz
jne
mov
xchg
sbb
test
xlat
ret
xchg
daa
xchg
sub
test
(bad)
and
call
cmp
shr
ss
xchg
rol
rcl
hlt
adc
dec
xchg
ror
inc
icebp
nop
data16
mul
nop
call
sbb
lahf
cmp
xor
xor
cs
pop
dec
repz
mov
ss
std
push
xchg
ds
xchg
retf
inc
dec
add
mov
sub
jno
jb
sbb
adc
out
sbb
dec
int
lock
push
jg
pop
mov
loop
stos
cs
aam
inc
clc
cmp
mov
lods
(bad)
cli
xlat
push
xchg
aas
js
and
xchg
cwde
loop
dec
or
mov
fist
sbb
jno
add
les
or
jmp
std
(bad)
imul
push
cmp
aam
jmp
call
iret
cmp
push
ss
retf
add
cmps
add
ins
xor
jge
cs
fst
out
jb
mov
or
retf
fidiv
hlt
mov
dec
mov
pop
aaa
jp
es
leave
sub
test
fs
add
je
fsub
sub
nop
mov
push
sbb
lods
shl
(bad)
ffree
sti
sub
jge
mov
int3
add
fisub
adc
sbb
gs
xor
hlt
and
cmp
push
cmp
pop
(bad)
xor
shl
mov
mov
mov
cwde
jb
sar
pop
mov
pusha
mov
jbe
xchg
stc
add
push
and
jp
mov
push
mov
cmps
pop
ins
and
cmp
aam
cmp
icebp
push
dec
xchg
in
test
popa
pop
movs
cmp
add
jmp
inc
ds
scas
ss
imul
sahf
dec
hlt
shr
jnp
jmp
in
and
rcl
jg
out
jmp
sti
cmp
bound
pop
lock
adc
xor
pop
mov
lahf
outs
enter
inc
push
mov
les
jbe
scas
mov
add
mov
cdq
mov
mov
add
add
pop
mov
dec
push
lea
adc
fnstenv
sahf
in
out
or
daa
(bad)
mov
(bad)
mov
fisub
and
jecxz
pop
retf
out
(bad)
stos
and
sbb
or
ins
outs
fwait
rcr
popf
jl
adc
in
jge
retf
pushf
pop
xor
stos
stos
pop
ds
cmc
jae
add
sbb
mov
xor
popa
rcr
scas
cmp
test
pushf
and
(bad)
call
stos
or
fcmovb
adc
inc
scas
push
jo
adc
jnp
out
ja
mov
imul
je
mov
xchg
int3
out
scas
mov
pop
lods
pop
repz
mov
das
jle
ret
out
cdq
xchg
rcr
rcl
jae
pop
jg
mov
fist
mov
xchg
pushf
lahf
ja
jmp
stos
mov
icebp
jb
sti
pop
cli
fs
mov
(bad)
lds
mov
dec
das
jne
std
mov
stos
adc
jnp
call
push
mul
sbb
add
fldcw
jne
pusha
mov
lds
mov
(bad)
pop
data16
das
and
dec
mov
mov
cld
mov
jno
add
push
ins
mov
pop
and
scas
mov
push
das
inc
ret
fcomp
outs
dec
sbb
int3
mov
mov
mov
test
inc
and
ins
jbe
(bad)
retf
add
fwait
rol
mov
mov
pop
icebp
mov
xchg
add
inc
movs
jmp
je
cmp
fsubr
sahf
mov
imul
loopne
mov
jb
jns
inc
cmp
inc
mov
cmp
dec
jne
mov
aad
push
sbb
mov
outs
add
in
fcmovne
add
bswap
lds
out
movs
mov
out
or
je
(bad)
cli
push
ds
sbb
jnp
or
add
and
jge
cmovp
inc
gs
cs
or
stos
in
test
gs
and
test
xor
or
es
ds
mov
out
out
jp
sbb
nop
cwde
(bad)
test
in
in
mov
xor
loop
js
mov
imul
nop
movs
clc
(bad)
or
sub
sub
lds
dec
sbb
es
and
clc
pop
sub
cmp
fcomp
or
cmp
dec
(bad)
into
stos
pop
je
pop
outs
repz
aaa
mov
jb
sar
aam
xchg
fnsave
sub
jnp
mov
out
mov
jp
add
add
leave
pop
cmps
les
sbb
inc
jb
inc
call
aaa
(bad)
mov
push
adc
add
sub
(bad)
mov
ja
or
ja
jae
(bad)
sub
mov
cmp
dec
int3
(bad)
xor
cmp
es
stc
mov
mov
jl
bound
mov
pop
xor
stc
outs
sbb
adc
out
mov
add
inc
fwait
test
inc
inc
mov
adc
cmovb
loope
scas
movs
dec
or
adc
sbb
bound
and
mov
fwait
mov
push
test
fimul
mov
out
loop
mov
mov
jns
sub
sub
dec
dec
push
dec
push
shl
retf
pop
mov
inc
lock
jge
out
jb
call
mov
fidiv
fstp
mov
lahf
rcl
mov
jl
(bad)
(bad)
out
add
jmp
outs
icebp
loopne
xor
dec
adc
es
(bad)
jge
loop
sub
loopne
push
cdq
out
les
xchg
ret
jne
inc
pop
adc
and
jbe
cmc
ss
xchg
pusha
inc
in
in
scas
aad
outs
mov
add
jmp
retf
or
clc
jge
pop
and
out
cmp
xor
mov
cmc
out
loop
adc
mov
push
or
pop
and
sbb
je
or
loop
out
add
sub
rcl
xchg
addr16
fidiv
dec
pop
mov
imul
sub
scas
pop
dec
js
add
out
mov
mov
(bad)
fst
movs
nop
das
nop
add
push
loop
nop
xor
push
int
scas
jnp
xchg
sahf
and
loope
mov
cmps
jl
cmp
aas
inc
xor
sbb
mov
int3
fdivr
popa
call
mov
ja
pop
cs
inc
mov
mov
jle
in
jns
jl
mov
jecxz
mov
or
movs
add
ds
inc
xor
popf
cs
cld
icebp
outs
rcr
ret
mov
std
inc
mov
fnstsw
xor
sub
scas
retf
and
sbb
lods
lds
or
sbb
cmp
leave
gs
test
fwait
jne
push
ds
movs
sbb
push
jae
jno
test
leave
push
or
adc
add
jge
dec
mov
fldln2
jnp
pop
or
and
bound
push
cs
es
mov
cmp
ret
adc
xchg
push
mov
jnp
inc
neg
jae
repz
mov
gs
inc
out
rcl
pop
mov
stc
or
out
popa
js
imul
push
and
mov
fisubr
lea
mov
push
outs
stc
inc
into
hlt
fldenv
xchg
test
dec
retf
inc
rcr
test
jbe
sub
sub
gs
icebp
fwait
test
out
cmp
mov
mov
sti
shl
adc
icebp
xor
add
sbb
xchg
sbb
push
call
mov
inc
mov
inc
shr
inc
add
xlat
pop
addr16
dec
jecxz
in
sbb
pusha
es
arpl
xchg
mov
aaa
pop
push
loope
not
cmp
sar
pop
adc
enter
mov
mov
sahf
xchg
icebp
push
and
mov
jbe
mov
mov
adc
fdivr
pop
stos
add
loope
sahf
aam
push
daa
push
leave
cld
jge
inc
mov
sub
arpl
fadd
dec
lods
push
xor
imul
mov
xchg
ins
push
lock
cli
mov
pop
(bad)
push
aad
xor
cmp
in
jmp
jmp
mov
xchg
enter
sub
push
repz
fsub
dec
ret
pop
je
lock
inc
sahf
adc
adc
enter
retf
add
rcr
loop
pop
fnstsw
xor
cdq
inc
xchg
adc
cmp
lods
imul
clc
cs
add
outs
bound
sub
mov
sub
dec
pusha
rcl
call
xchg
enter
test
pop
pusha
dec
mov
pop
dec
scas
fsubr
neg
add
test
out
fucomp
sub
loopne
and
cmp
jl
adc
aas
and
inc
push
loopne
jmp
mov
and
movs
call
lods
lods
dec
cmp
std
call
shl
jle
push
test
adc
cs
xchg
cmp
lock
mov
gs
repnz
add
and
or
iret
and
mov
or
jae
sub
and
outs
xor
jae
fdiv
inc
cmp
xchg
dec
imul
jge
mov
cmp
out
xchg
push
mov
(bad)
loope
leave
popf
xor
xchg
sbb
movs
mov
mov
outs
add
push
jns
mov
inc
ja
mov
lahf
shr
out
cmp
lahf
neg
inc
mov
repz
cmp
cdq
xchg
cmp
jl
adc
add
mov
cli
mov
jge
aas
lea
mov
sub
js
jmp
cmp
(bad)
retf
push
test
lahf
clc
or
jo
aas
cmps
fild
jo
sbb
bound
ds
cmp
popf
adc
dec
inc
pop
leave
cmp
cwde
aad
push
push
out
out
xchg
sub
sub
pop
xor
jae
sub
popa
retf
fstp
xchg
xchg
mov
in
cld
loope
dec
cmp
or
xor
rcr
movs
jmp
rcr
inc
mov
out
leave
add
scas
outs
sbb
xchg
xchg
dec
inc
(bad)
or
aad
test
jl
cmp
lock
out
mov
dec
data16
add
sbb
mov
xlat
sub
pop
rol
ja
mov
mov
cwde
or
in
in
xor
mov
or
cmc
stos
xchg
ss
cmp
call
adc
pop
outs
dec
cmp
dec
nop
adc
mov
call
sbb
inc
test
cmp
(bad)
stc
mov
push
pop
mov
icebp
cwde
imul
ja
mov
mov
fsubr
lea
push
mov
or
mov
push
push
in
loopne
pop
sbb
inc
test
scas
test
sbb
rcl
xchg
jecxz
(bad)
xchg
sub
xchg
xchg
je
jge
(bad)
jl
(bad)
lock
xchg
mov
aam
mov
(bad)
in
jb
je
in
mov
ror
enter
adc
mov
test
test
(bad)
adc
xor
lods
inc
dec
aam
jno
fbld
jne
xchg
fucomip
in
shr
(bad)
rol
push
mov
and
shl
sbb
sub
adc
enter
inc
sti
mov
mov
adc
dec
pop
push
dec
ficomp
mov
jle
retf
shr
lods
movs
sar
mov
mov
ret
push
ja
stc
xchg
in
dec
sub
xchg
jmp
lahf
sub
dec
mov
cmp
xor
jmp
popa
iret
push
push
jmp
adc
(bad)
gs
shl
div
sbb
cmp
mov
jno
lods
sub
mov
jnp
mov
and
out
adc
mov
pop
and
push
add
rcl
cmp
xor
dec
cld
push
aad
out
loopne
test
mov
into
push
test
int
mov
arpl
sbb
push
add
xlat
xchg
in
pop
aas
adc
out
div
imul
mov
je
aad
inc
dec
inc
dec
gs
rol
push
fs
test
fsubr
mov
mov
add
dec
sbb
outs
or
mov
aad
mov
and
jmp
jecxz
mov
jmp
add
idiv
daa
push
inc
les
es
cmp
push
mov
(bad)
or
and
mov
out
push
push
inc
(bad)
xchg
mov
shr
and
sbb
sub
ud1
adc
add
enter
sti
out
ja
cmc
xor
mov
sbb
ins
jns
sub
lds
xor
lahf
call
push
push
movs
not
lahf
xchg
arpl
int
fs
adc
sub
lock
(bad)
add
out
ins
ret
and
bndldx
jbe
ret
inc
push
imul
bound
imul
pop
and
pop
popa
stos
xchg
into
sub
inc
jae
bnd
out
cmp
icebp
iret
sahf
gs
sbb
(bad)
std
imul
pop
cdq
sbb
(bad)
rol
test
pop
out
jb
or
outs
jle
push
mov
or
add
add
out
dec
lea
daa
jnp
test
add
xor
jb
xor
fstp
clc
lahf
loope
daa
loope
cld
push
push
xchg
outs
sahf
mov
stos
mov
cmovl
stc
or
mov
imul
jmp
ret
sti
and
(bad)
push
repnz
shr
fcom
loop
call
add
aam
jp
jl
adc
pop
lods
jns
sub
xchg
test
xor
lea
jnp
cmps
adc
and
dec
mov
jno
out
(bad)
adc
adc
mov
ds
cwde
push
cmps
retf
ds
lods
xchg
adc
xchg
cmp
ds
scas
cwde
mov
cmp
lock
mov
loope
jne
lock
cwde
and
gs
mov
popf
xchg
ret
push
pop
xchg
xchg
cmp
mov
nop
jecxz
shl
jg
inc
mov
std
mov
push
add
mov
ret
imul
fstp
movs
xchg
push
or
mov
cs
mov
das
mov
mov
pop
lods
push
xor
jle
jl
out
mov
push
ins
add
sti
call
je
sbb
sar
and
(bad)
(bad)
sub
test
cmp
push
inc
movs
push
jne
adc
mov
add
in
rep
xchg
int3
std
xor
inc
mov
scas
inc
rol
addr16
loopne
pusha
cmp
and
pmulhuw
popa
sti
pop
sub
or
sti
das
jbe
add
lds
imul
cdq
push
jmp
out
hlt
adc
out
stos
jne
xchg
adc
scas
and
mov
cmp
cmp
repnz
pop
int3
sub
ja
sub
cmc
addr16
adc
mov
mov
ss
cmp
gs
fwait
in
es
push
pop
jl
(bad)
aaa
and
loop
int3
(bad)
push
pop
retf
jbe
jp
lods
int3
dec
fwait
(bad)
movs
dec
movs
ror
add
cli
neg
neg
add
stos
shr
ret
ins
ja
hlt
rcr
shl
std
mov
xchg
sbb
mov
ins
sbb
stos
dec
jmp
xor
push
pop
mov
loopne
cld
pop
(bad)
call
inc
data16
or
mov
pusha
adc
repnz
loop
loope
bound
mov
pop
mov
(bad)
add
cmp
enter
fild
ds
jne
xchg
fnstcw
cdq
std
dec
(bad)
(bad)
icebp
adc
mov
loope
xor
sbb
into
rcl
test
clc
and
push
mov
imul
fs
mov
dec
sub
outs
xor
(bad)
mov
and
mov
or
xchg
mov
and
stos
push
and
ins
mov
fs
int
inc
cmc
dec
out
jmp
arpl
xchg
inc
jae
mov
cdq
js
arpl
mov
shl
sub
add
pop
loopne
mov
loope
mov
pushf
mov
pushf
xchg
rol
sub
jecxz
dec
sub
push
xchg
pop
fstp
jg
fstp
rol
pop
push
push
ret
icebp
mov
or
retf
push
retf
or
repz
mov
movs
inc
clc
push
cmp
in
sub
dec
test
dec
xor
ficomp
pop
adc
add
inc
push
sbb
out
dec
loopne
pop
mov
jmp
push
imul
arpl
paddusw
fstp
lods
mov
imul
add
adc
mov
cwde
not
sysenter
stos
jle
cmp
mov
addr16
imul
push
mov
sub
and
mov
mov
call
ret
xchg
scas
jge
nop
jns
mov
enter
div
test
movs
fcom
stos
xchg
aas
sbb
mov
in
sbb
out
mov
cs
dec
data16
lock
pop
inc
hlt
sbb
out
adc
out
je
or
scas
mov
cmp
inc
push
dec
inc
out
jne
push
ins
ss
push
pop
aaa
sub
jg
ret
dec
mov
pop
mov
sbb
in
repz
ins
in
add
push
test
mov
ins
(bad)
int3
fbstp
int
pusha
cmp
jbe
outs
test
lods
jae
xor
mov
dec
es
dec
scas
and
mov
dec
mov
ds
fdivr
movs
jo
psubsb
les
jno
jo
test
dec
jmp
xchg
jmp
push
mov
retf
dec
jmp
jl
std
xchg
cs
cs
push
push
not
mov
hlt
jmp
inc
jg
(bad)
mov
sahf
cmp
idiv
std
pop
jne
or
add
ds
jmp
or
jmp
push
rcr
xchg
in
adc
les
and
mov
mov
xchg
movs
or
ins
jae
mov
xor
jg
sub
adc
lea
xor
mov
adc
sbb
mov
or
pop
cmp
call
neg
mov
and
loopne
xor
outs
test
xchg
xchg
push
imul
outs
(bad)
cli
cmp
call
cli
hlt
pop
aaa
sahf
loope
inc
xlat
push
mov
sbb
jg
push
mov
jo
add
dec
mov
mov
cmp
repnz
movs
lods
push
xchg
xchg
in
js
(bad)
rcr
inc
(bad)
(bad)
shl
sbb
or
hlt
dec
ss
xor
dec
(bad)
sub
sub
test
xchg
dec
push
cmp
shl
and
pop
cdq
int3
push
adc
lods
adc
push
mov
cmps
inc
xor
and
add
lods
sbb
inc
jg
ja
mov
adc
inc
scas
jno
aas
cmp
scas
sbb
imul
outs
mov
xor
sahf
rol
sub
sar
cs
xchg
mov
dec
imul
xor
add
jns
sbb
xchg
adc
cmps
mov
pop
add
sbb
mov
cmp
dec
cld
xor
or
cmc
pop
and
pop
cmp
out
xchg
inc
inc
cmp
les
inc
imul
sbb
fld
cmp
rol
arpl
inc
in
(bad)
mov
aad
jg
sub
mov
cmp
or
ss
into
fstp
jle
sub
bnd
add
lock
fnstcw
cmps
call
cmc
xchg
rsm
add
pop
mov
pop
and
lds
jo
cmp
add
xor
out
fistp
lahf
repnz
retf
rol
imul
ja
je
in
push
dec
cs
cmps
nop
or
rcr
xchg
jmp
jecxz
nop
nop
push
sub
mov
fwait
popf
in
popf
mov
imul
xchg
mov
and
inc
sahf
jns
mov
leave
outs
stos
cld
or
lock
inc
outs
retf
push
ret
retf
js
in
xor
das
mov
mov
jnp
add
add
and
mov
fwait
jmp
dec
popa
scas
mov
jo
mov
pop
retf
(bad)
mov
movs
and
lds
stos
pop
push
stos
jnp
hlt
jns
(bad)
xor
adc
mov
shl
mov
cmp
jecxz
push
or
jle
rol
mov
je
(bad)
mov
push
push
mov
in
jmp
or
cdq
push
push
movs
xchg
(bad)
rcl
add
xchg
or
push
cli
inc
enter
xchg
pop
jge
(bad)
mov
rcr
pop
jmp
jp
scas
add
mov
jmp
inc
adc
mov
dec
jmp
add
adc
out
das
or
stos
(bad)
mov
das
ret
pop
push
pop
movs
add
inc
xor
outs
push
jne
test
in
ret
fst
mov
xchg
and
inc
shl
clc
pop
div
clc
pop
std
and
mov
xor
add
push
loope
lds
pop
push
or
jbe
rcl
retf
xor
jge
or
daa
adc
mov
lea
out
mov
sub
loopne
movs
clc
xlat
call
sbb
jge
outs
pushf
add
xor
and
lea
inc
mov
pop
cmp
sbb
lahf
(bad)
loopne
lock
jne
mov
jmp
mov
cmc
stc
mov
out
test
inc
mov
xchg
mov
sahf
icebp
pop
jnp
(bad)
es
outs
push
test
and
stos
cli
sahf
mov
(bad)
cli
shl
arpl
cmp
ret
mov
dec
imul
out
dec
data16
mov
jnp
sbb
inc
fmul
mov
test
aas
push
outs
dec
dec
cmp
mov
inc
and
lods
xor
dec
mov
rcl
lods
mov
fbld
and
hlt
xchg
(bad)
and
push
movs
add
ret
adc
jnp
jecxz
add
sub
add
xchg
(bad)
imul
sahf
stc
(bad)
call
pop
mov
into
inc
push
inc
inc
out
xor
jo
sbb
dec
lods
push
dec
outs
fimul
pop
cli
jns
or
dec
ins
in
test
fnstsw
test
jae
fstp
xchg
inc
fisubr
xor
fwait
push
out
test
leave
pop
and
clc
int
out
gs
data16
push
sbb
push
std
adc
sub
imul
inc
xor
and
dec
fucomip
movs
mov
add
outs
adc
aad
int3
ins
mov
ja
test
ror
repnz
sub
cmp
sbb
jnp
lea
gs
cmp
add
stc
add
out
and
pop
cdq
sbb
pop
and
jp
add
hlt
lea
mov
retf
test
mov
and
aas
cmp
push
jl
sub
pop
push
lods
pop
pusha
test
loop
ror
xchg
jne
cdq
popa
ins
(bad)
out
jmp
jmp
hlt
pop
lods
ds
jne
xor
mov
pop
xor
aaa
push
cwde
xor
dec
or
test
sub
xor
loope
daa
add
lock
pop
sub
sub
sbb
and
pusha
add
test
mov
sbb
addr16
out
or
cmc
sub
sub
mov
mov
cmp
cmp
mov
das
arpl
add
sub
icebp
push
sar
cmps
inc
imul
inc
xor
add
push
stc
test
and
shl
jmp
mov
pop
pop
xor
ins
repz
sub
arpl
mov
push
setnp
add
je
jno
into
xor
fisub
stc
sub
out
por
sbb
adc
retf
es
mov
cmps
fistp
push
cld
imul
push
ins
and
and
(bad)
fs
and
adc
xchg
inc
pop
cmp
sub
mov
movs
pop
xchg
mov
add
(bad)
rcr
ret
cmp
loope
lea
fwait
push
loopne
pop
xor
clc
mov
ins
into
mov
sub
ss
enter
sub
inc
stc
sbb
rcr
loop
fwait
(bad)
mov
fwait
lock
add
outs
jne
test
retf
sub
mov
lds
xchg
add
aad
mov
test
mov
or
hlt
ja
dec
add
jbe
rcl
in
jo
data16
add
sbb
push
popa
mov
mov
mov
loop
outs
cmp
retf
test
xchg
test
mov
rcr
push
push
shl
or
js
or
inc
in
lds
mov
leave
push
jmp
test
jmp
cmps
xchg
mov
push
mov
jge
mov
push
js
loope
out
call
imul
push
mov
cmp
cdq
cdq
jno
loope
ret
or
jno
pop
and
out
pop
xchg
aas
mov
jnp
test
in
sub
dec
pop
sub
pop
icebp
leave
inc
outs
addr16
es
jno
sbb
inc
adc
or
jmp
les
xchg
lock
lds
adc
sbb
cld
sub
inc
xchg
mov
out
arpl
cwde
mov
adc
cmp
mov
shl
ins
adc
repz
push
data16
mov
or
stos
inc
sbb
repnz
push
mul
cmp
add
push
add
stos
inc
pushf
hlt
xchg
mov
mov
adc
sub
rol
mov
adc
les
outs
arpl
jmp
mul
ss
and
sbb
pusha
iret
pop
mov
aaa
daa
fsub
ins
mov
fmul
mov
or
adc
aam
fucomip
cwde
cld
sbb
push
test
shr
fstp
mov
bound
mov
data16
add
jp
hlt
xlat
lods
cmp
das
mov
pop
call
xor
cli
mov
mov
cmp
sti
jbe
imul
icebp
mov
addr16
mov
add
pop
cmp
loopne
adc
push
adc
mov
scas
sub
je
xor
sub
inc
push
xor
(bad)
push
retf
jnp
mov
sahf
and
jb
ja
mov
mov
inc
sub
(bad)
rol
mov
inc
mov
lods
sub
push
iret
push
ins
idiv
adc
dec
dec
ds
mov
loopne
adc
pop
mov
and
jns
sahf
adc
inc
mov
mov
jne
cmp
inc
push
mov
add
sar
cmc
shl
iret
in
gs
and
lods
in
add
add
fstp
aad
ja
bound
movs
pop
or
jmp
lods
pop
jecxz
clc
push
jnp
(bad)
jle
lods
in
rcl
mov
jbe
loop
cmc
or
push
sbb
xchg
jo
mov
sti
jmp
adc
adc
fidiv
mov
daa
int3
sbb
xchg
dec
mov
icebp
cs
add
sub
pop
dec
push
lahf
or
cwde
inc
dec
shl
pop
or
sub
dec
dec
push
and
clc
adc
mov
jo
and
mov
or
sbb
xchg
repz
das
dec
outs
xlat
push
mov
jp
push
sbb
adc
xor
push
js
cmp
ds
mov
mov
(bad)
loop
xor
cwde
nop
fiadd
in
xor
xor
jnp
into
push
jmp
jb
lahf
or
mov
fnstcw
push
push
push
ficom
arpl
fcmovbe
stc
(bad)
ds
add
lahf
daa
imul
inc
jl
sub
sbb
add
xchg
daa
xchg
dec
mov
fld
add
xchg
and
pop
jp
pop
adc
or
and
data16
pop
ret
jl
inc
pusha
jmp
jo
and
das
and
jmp
sbb
pop
or
imul
xchg
es
cmp
dec
sub
repnz
dec
cmp
ds
inc
inc
pop
xchg
lock
push
pop
mov
xchg
les
ja
ins
sbb
dec
in
mov
inc
fnsave
adc
push
cmp
(bad)
imul
gs
jb
cmp
in
into
sbb
das
and
xor
or
sbb
push
daa
sub
and
mov
sbb
dec
rcr
xor
mov
adc
push
lods
xchg
mov
stos
dec
adc
lds
mov
arpl
xor
movs
cld
and
inc
inc
add
sahf
mov
or
mov
dec
jle
arpl
fdivp
nop
dec
sbb
jnp
pop
mov
xchg
loope
sub
fldenv
call
pushf
jno
inc
sti
xor
test
(bad)
(bad)
jae
push
jle
jmp
jae
call
aad
push
push
push
cdq
push
outs
cmp
push
movs
mov
iret
dec
mov
in
fadd
adc
mov
mov
imul
(bad)
ins
pop
(bad)
add
mov
repz
div
sar
ins
xchg
mov
lock
push
sbb
mov
loopne
fcmovnu
shl
cmp
pushf
daa
sti
xchg
jae
adc
popf
jmp
sbb
mov
fucomip
repz
push
jp
xchg
pop
es
ret
inc
cs
retf
out
mov
xchg
fsub
fimul
and
loopne
sub
sub
movs
mov
pop
sbb
sbb
push
mov
add
jmp
dec
jno
aam
mov
inc
xor
and
cmps
scas
fs
hlt
adc
inc
jns
inc
aas
(bad)
pop
mov
out
test
cmp
cli
mov
clc
ss
adc
cmp
pushf
push
test
sbb
(bad)
and
sbb
fist
xor
int
and
sbb
and
pop
fcomp
movs
adc
sbb
pop
or
cld
ret
setne
push
push
cmp
stos
or
dec
repz
outs
push
xor
rol
mov
stc
lahf
setbe
dec
cmp
mov
adc
imul
inc
push
mov
dec
pop
imul
aaa
lahf
jns
jmp
enter
cli
pop
pusha
sahf
push
push
xor
jle
jecxz
push
fwait
pop
mov
fwait
nop
xchg
std
mov
cmps
(bad)
cmp
(bad)
jo
js
ss
xlat
bound
mov
fisubr
popa
adc
push
leave
mov
inc
add
aas
fidiv
jbe
xchg
ins
or
lea
or
test
punpckhwd
(bad)
in
push
int3
or
dec
pop
push
stos
inc
jle
pop
sub
sub
adc
cmc
jne
in
xor
ret
push
ins
movs
cmps
xchg
loop
lods
in
add
or
mov
das
xor
push
(bad)
mov
ins
jno
ins
sub
or
nop
mov
push
leave
in
mov
cmp
xor
jl
clc
mov
add
stos
dec
leave
mov
js
fistp
ins
jne
push
push
adc
dec
push
mov
sbb
rcr
ficomp
lock
and
jb
jmp
jmp
dec
ja
(bad)
pop
adc
shr
mov
enter
jae
xchg
iret
in
ret
xchg
std
fild
inc
pop
jns
in
inc
pop
jo
in
mov
outs
cmp
push
sub
push
jne
mov
xor
jmp
push
add
je
push
and
mov
stc
es
cwde
enter
inc
cmp
test
test
or
xchg
and
ja
repnz
add
cdq
sbb
xchg
jnp
xchg
pusha
push
inc
and
(bad)
out
(bad)
hlt
xor
or
out
jae
icebp
or
mov
scas
jne
loopne
shl
mov
xchg
rcr
sub
in
rcl
mov
les
(bad)
adc
jmp
and
cmc
xchg
or
xchg
dec
or
out
es
cdq
xchg
bound
or
fbld
nop
in
lea
scas
sbb
clc
ret
(bad)
ins
push
test
mov
mov
jmp
loop
cmc
push
es
aaa
mov
iret
adc
frstor
pop
stos
xor
inc
mov
scas
ins
dec
(bad)
jle
(bad)
cli
out
pop
into
jns
lahf
lods
gs
mov
mov
ficom
jmp
(bad)
int
adc
mov
ret
lock
fcomp
xor
ret
aaa
xor
or
pop
inc
jmp
bswap
xlat
mov
lahf
das
push
cmp
sbb
push
fidivr
push
xchg
shr
sbb
sub
out
mov
or
inc
jl
mov
add
(bad)
jns
ds
xor
add
rol
mov
dec
les
popa
in
or
xor
pop
sbb
loope
jecxz
push
cli
pop
(bad)
popa
daa
cmp
jns
jb
stc
in
int3
mov
imul
ds
xchg
add
je
test
adc
push
push
jae
mov
and
jle
imul
(bad)
dec
lock
dec
push
mov
xor
aaa
xchg
jnp
sub
push
mov
inc
dec
or
mov
jb
adc
jle
xor
sub
ss
sub
inc
in
cdq
sbb
xchg
and
loope
rol
data16
and
mov
imul
ret
jmp
imul
push
stc
lods
cs
mov
xchg
icebp
aam
sub
and
xchg
sub
cmp
mov
hlt
iret
push
inc
cdq
jae
pushf
add
es
inc
pusha
test
dec
les
sbb
loopne
xor
push
push
jno
fucom
inc
(bad)
pop
pop
push
ror
push
xor
inc
jmp
loope
xlat
push
mov
enter
test
pop
hlt
sub
cmp
sbb
mov
xchg
jg
dec
dec
add
jge
sub
cdq
aas
add
pop
sub
outs
mov
push
(bad)
mov
add
call
repnz
jg
and
movs
stc
in
inc
jecxz
or
bswap
dec
aam
dec
aaa
jbe
inc
shl
xchg
or
adc
ret
pusha
in
jg
xlat
int
inc
mov
pop
test
call
sub
loopne
test
nop
adc
mov
mov
push
inc
dec
lea
in
imul
test
movs
mov
hlt
push
xchg
mov
dec
dec
push
inc
(bad)
mov
pop
stos
push
add
int
inc
sbb
and
(bad)
test
inc
and
ret
push
(bad)
push
push
push
or
lahf
xchg
aad
xor
mov
fdivr
scas
adc
popf
add
out
(bad)
aam
mov
push
aaa
fst
aaa
xor
pop
std
imul
mov
in
push
sub
test
inc
push
jge
test
fwait
pop
xor
adc
sub
es
je
mov
inc
add
pop
dec
mov
cmp
(bad)
cwde
ja
xchg
aas
nop
mov
fbstp
inc
sbb
dec
sub
jae
cs
outs
inc
or
in
into
pop
xchg
pusha
clc
xchg
and
loopne
push
jae
retf
jns
scas
sbb
jbe
jno
xor
cmp
cmps
or
and
push
dec
fld
jne
test
and
mov
jg
scas
push
pop
hlt
cmp
in
jg
scas
xor
xor
dec
push
add
pop
mov
fsubr
movs
lahf
and
xchg
push
mov
(bad)
sahf
test
scas
repz
sbb
popa
mov
lods
out
pop
sbb
in
sub
and
mov
xor
(bad)
cmc
dec
mov
dec
rol
inc
xor
rcr
jb
xchg
xchg
and
add
xchg
push
cmp
xor
dec
mov
push
fld
inc
jnp
sti
clc
jl
lods
imul
inc
pusha
cmps
adc
push
lods
ss
enter
iret
pop
gs
sbb
rcl
push
xor
loope
aad
rol
or
cmp
mov
jb
pop
daa
ror
std
and
std
push
jnp
daa
cdq
imul
jb
mov
and
or
int
mov
scas
(bad)
cs
test
mov
call
add
adc
add
cmp
cmp
adc
and
pop
and
push
push
jmp
inc
cmp
dec
test
jne
pop
push
imul
and
mov
retf
ins
loopne
jg
fisubr
or
mov
mov
in
and
sbb
add
mov
mov
sbb
mov
pop
push
xor
jo
and
shl
and
lahf
mov
out
mov
sub
push
pop
pop
imul
adc
cld
push
iret
push
lds
inc
mov
adc
pop
loope
sub
repnz
fwait
lock
pop
into
icebp
out
inc
and
retf
ds
ror
sbb
cmp
xchg
jl
repnz
xchg
pop
adc
dec
cmp
mov
repz
int
xor
ret
push
popf
adc
sahf
retf
add
jae
mov
rcr
jge
inc
sub
in
pop
addr16
cdq
cdq
fs
ret
mov
call
jno
push
bound
inc
jl
(bad)
fwait
neg
mov
inc
lods
mov
hlt
scas
jnp
(bad)
ins
dec
xchg
add
dec
pop
cmps
jmp
repnz
imul
in
inc
dec
push
jg
lods
xor
xchg
push
aam
scas
mov
rol
add
mov
add
xchg
xchg
ds
push
ins
sbb
neg
jo
push
mov
mov
push
sub
outs
mov
mov
xor
es
cmp
(bad)
pushf
cmc
(bad)
loopne
cmp
imul
mov
test
jle
ror
aad
push
push
mov
push
dec
aas
pop
mov
hlt
pop
gs
std
test
bound
icebp
enter
popf
fnstsw
push
mov
ret
mov
retf
gs
out
out
add
mov
cmp
or
ficomp
nop
pop
sbb
fstp
stc
fnstenv
or
das
gs
mov
inc
inc
mov
jnp
inc
or
clc
mov
fdiv
xchg
xchg
sub
cmps
adc
sbb
pushf
push
mov
mov
adc
push
pop
push
nop
and
retf
(bad)
jmp
in
push
jno
dec
adc
sub
hlt
xchg
ja
pop
sbb
adc
mov
ds
lahf
fnsave
inc
mov
aas
lods
mov
sbb
jno
add
dec
out
arpl
jne
hlt
dec
jmp
fild
sbb
mul
(bad)
and
inc
lahf
jmp
and
mov
clc
sub
jo
pop
or
mov
inc
jg
or
mov
xor
dec
xchg
loope
mov
mov
es
sub
les
mov
dec
lea
xchg
daa
pushf
out
test
mov
repnz
fidiv
xchg
sti
ret
sub
jae
mov
icebp
push
cmp
cmp
stos
popa
mov
inc
push
jecxz
push
and
push
in
cmps
out
fstp
push
in
fwait
push
adc
lods
ret
cmovnp
std
jmp
aaa
pop
outs
aas
scas
push
retf
aad
add
cmps
sti
adc
mov
(bad)
mov
nop
pop
std
dec
ror
(bad)
fist
sti
mov
and
(bad)
sbb
std
or
xlat
call
sbb
ds
cmps
loop
call
xchg
push
jne
push
mov
cmp
cli
sbb
add
js
push
sti
pop
stos
mov
inc
bound
xlat
(bad)
fmul
lods
arpl
das
and
dec
sahf
pop
outs
cmp
pop
pop
ins
mov
lods
pop
mov
(bad)
outs
sub
cmp
dec
jge
adc
sahf
mov
aas
(bad)
pop
lea
add
imul
mov
mov
push
push
stos
mov
push
shl
xor
xor
jae
sbb
pop
test
xchg
out
mov
adc
mov
cmp
jle
movs
rcl
or
inc
iret
sub
jl
xor
cs
in
xchg
rcl
add
fldenv
push
mov
(bad)
xor
push
pop
mov
ins
(bad)
jle
xchg
dec
mov
out
rcr
cmp
inc
mov
fsubr
dec
and
push
mov
(bad)
push
adc
push
fadd
stos
sbb
and
xchg
aas
ret
dec
jecxz
je
push
adc
inc
pop
nop
xchg
les
mov
fcmovnb
ja
and
cwde
push
pop
pop
dec
imul
rcl
xchg
pop
in
pop
push
xchg
dec
cmp
pop
pop
jb
cmp
sbb
mov
jg
(bad)
scas
cmp
int
aam
popa
sbb
fistp
mov
stos
adc
setp
xchg
(bad)
ficom
dec
shl
(bad)
mov
fcom
or
dec
sub
ins
js
loope
jmp
push
imul
mov
retf
ins
or
sbb
and
jo
ds
xor
jg
cmp
xchg
cmp
stos
jmp
retf
jbe
ins
outs
aad
test
mov
and
(bad)
(bad)
jns
and
mov
or
loop
sub
mov
popa
pop
dec
ja
or
sub
dec
mov
cmps
repz
hlt
cmp
aas
or
out
ins
jge
std
pop
iret
dec
repz
jmp
adc
(bad)
dec
cmps
or
inc
data16
retf
xchg
jnp
push
jne
call
shl
pop
loopne
mov
repz
jno
sahf
dec
xor
inc
adc
sub
daa
fdiv
ja
test
or
adc
push
leave
out
js
gs
xor
cmc
rcl
ja
dec
pop
mov
les
sbb
repz
in
shr
mov
jmp
ss
fcmovnb
into
inc
sub
xlat
nop
icebp
arpl
sub
push
(bad)
cli
jl
xor
sub
ja
test
cmp
ret
out
nop
call
in
sub
pop
jmp
push
dec
inc
pop
ret
dec
imul
lahf
dec
sbb
jae
ret
push
sbb
mov
int3
test
mov
ja
add
dec
cld
xor
sbb
mov
pushw
push
adc
mov
dec
aas
aaa
jp
cs
sub
out
cmp
cmp
mov
popa
or
cld
xchg
mov
mov
pop
sbb
jecxz
xor
mov
jo
adc
aaa
mov
ss
pop
cmp
mov
pop
push
test
ins
lods
mov
push
adc
adc
jl
jg
jle
and
sbb
aaa
cmc
cwde
fistp
mov
in
or
aas
jg
ds
clc
xor
mov
add
cmp
dec
xor
neg
and
jmp
push
dec
inc
out
fdivr
cmp
imul
call
push
nop
in
adc
xor
test
adc
mov
imul
adc
(bad)
xor
int
push
inc
add
inc
popf
nop
dec
imul
cmps
xchg
mov
js
mov
movs
loop
adc
in
pop
push
inc
mov
cwde
pop
jmp
or
xor
push
cmp
(bad)
add
cmps
xchg
dec
aam
leave
mov
test
jmp
cmp
ss
outs
xor
xor
iret
movaps
jg
mov
rcl
push
test
sub
fcomi
ss
add
and
lock
xlat
pop
ret
xor
jecxz
paddusb
(bad)
std
mov
dec
xor
push
sub
xor
lahf
int3
push
fisttp
add
lods
call
jne
mov
cmp
xor
aaa
outs
sbb
jmp
jo
xchg
pop
fadd
jbe
dec
sub
out
ja
movhps
mov
les
jae
sub
or
test
push
popa
add
adc
pop
pop
dec
test
push
sub
fs
mov
add
imul
pusha
cmps
mov
shl
mov
sar
scas
movs
cmp
fadd
mov
xlat
mov
inc
push
add
shl
push
mov
ins
int
and
movs
and
in
test
mov
loop
in
das
daa
js
lods
pusha
jmp
pop
ret
test
xor
mov
lahf
mov
mov
arpl
xlat
sbb
mov
fstp
mov
addr16
fld
(bad)
cmp
jge
cwde
leave
jle
adc
stos
push
push
lods
adc
fiadd
in
jl
mov
hlt
xchg
aad
fisub
jmp
sbb
jmp
shr
loop
mov
iret
pop
inc
jmp
and
fidivr
sbb
iret
push
ss
bound
es
test
repz
or
(bad)
mov
mov
inc
push
push
pop
mov
mov
mov
push
mov
sbb
pop
mov
aam
ficomp
and
dec
and
pop
stc
xor
fbld
fstp
add
pop
pop
push
jns
xlat
les
pop
add
and
mov
or
xchg
jl
add
pop
mov
jo
or
fistp
and
mov
xlat
jne
cwde
gs
test
arpl
cwde
in
test
mov
fnsave
add
bound
and
or
cld
push
hlt
mov
pop
add
xchg
sub
sub
mov
sbb
fs
xchg
test
push
test
xor
mov
iret
xor
call
adc
fild
and
mov
fnstsw
mov
pop
mov
inc
adc
or
jmp
push
int3
push
pcmpgtw
push
bound
pop
les
and
paddusb
push
mov
mov
adc
push
adc
faddp
and
outs
test
stc
add
pop
popf
(bad)
(bad)
xchg
std
xor
out
sbb
push
adc
mul
sub
pop
cmp
push
push
mov
jp
xchg
stos
adc
cmp
std
inc
int3
pop
adc
jns
adc
enter
pop
cmps
mov
fmul
(bad)
in
mov
jb
push
or
ror
mov
lea
and
and
ret
jg
sbb
xchg
mov
js
je
jo
pop
xor
pop
cmp
(bad)
imul
out
cmp
and
xor
jns
xchg
cmp
(bad)
je
nop
xor
push
imul
mov
retf
pop
pop
ror
mul
sub
sub
add
jo
xchg
cli
mov
cwde
xchg
jae
daa
jecxz
into
sbb
mov
in
lods
loop
sub
iret
pop
out
idiv
or
dec
cmp
or
xchg
mov
jmp
mov
stos
xchg
adc
jmp
sub
cdq
add
xchg
es
dec
add
lahf
aas
ins
ror
jl
enter
out
cmp
outs
popf
mov
jne
cmp
or
sar
push
repnz
push
push
inc
pusha
int3
aaa
adc
add
mov
ins
xor
sbb
repnz
jg
repnz
add
lods
out
xor
(bad)
data16
jle
(bad)
nop
les
movs
test
inc
mov
fcomip
mov
iret
mov
jp
mov
sub
iret
sti
dec
sbb
cmp
mov
add
adc
ja
call
js
push
cmp
mov
ja
xor
lock
dec
mov
aam
sbb
out
cmp
dec
inc
jl
jo
jae
xor
mov
or
and
xor
ror
jge
jl
pop
xchg
hlt
mov
jne
sub
ficomp
inc
push
fiadd
jbe
mov
cmp
shl
hlt
sbb
mov
inc
xor
sub
cwde
cmp
mov
lea
repz
movs
push
jle
pushf
pop
sbb
jbe
xor
int
xchg
fistp
xchg
sub
mov
sahf
push
ins
cmp
rcr
sti
cmp
sub
frstor
in
xchg
jae
add
push
js
add
lock
mov
pusha
jbe
test
fcom
push
push
mov
in
test
sbb
or
jmp
cmc
xchg
dec
push
in
xor
pop
mov
cli
fs
cmp
jle
fcom
shl
xchg
stos
neg
xor
repz
pop
(bad)
cmp
dec
ds
outs
pushf
test
push
cmps
mov
inc
pop
and
dec
adc
inc
cmc
jecxz
mov
outs
xchg
jnp
adc
stc
sub
clc
ins
xchg
nop
mov
jmp
mov
xchg
iret
add
xchg
scas
cmc
cmp
push
jno
fs
jmp
cli
ret
cwde
pop
repnz
or
xchg
loopne
ror
loopne
mov
(bad)
jno
leave
mov
or
xchg
std
mov
pop
jo
sbb
lahf
sbb
stc
sar
pop
aas
mov
sub
or
jno
out
pop
mov
sbb
out
or
xor
and
pop
out
call
loop
jmp
mov
jg
xchg
dec
mov
ficomp
inc
sti
adc
jb
xchg
cmp
ins
out
add
ror
push
pushf
mov
sub
les
mov
inc
mov
sti
shl
arpl
sbb
movs
in
cmp
cmc
std
mov
xchg
out
or
add
pop
arpl
aam
or
push
inc
cmp
mov
dec
lock
dec
mov
adc
and
es
sbb
aam
out
cmc
out
pop
mov
cmp
cld
jne
push
add
jmp
cmp
(bad)
mov
div
xchg
outs
pop
jmp
in
xor
and
pop
rol
and
sub
sbb
out
sti
sub
icebp
xchg
mov
in
retf
and
iret
scas
(bad)
pop
mov
rol
xchg
sbb
mov
sub
sti
imul
(bad)
into
xor
mov
cmp
int3
jno
add
mov
xor
inc
mov
pop
pop
iret
shr
jl
cld
push
inc
gs
mov
in
shr
pop
jbe
pop
fisubr
jmp
jecxz
push
cmp
popf
(bad)
push
(bad)
ss
mov
pop
iret
pop
int
leave
in
shrd
popf
dec
cli
sub
in
sub
adc
push
jae
neg
or
lds
jmp
jecxz
sub
popa
jne
ss
into
cmp
and
mov
pop
mov
pop
iret
push
repz
mov
inc
int
not
inc
jbe
lea
mov
mul
mov
push
test
rcl
shl
xchg
repz
pop
daa
sub
stc
pop
ds
popa
push
data16
and
popa
sahf
push
mov
test
inc
iret
push
add
cs
mov
jns
jecxz
repz
inc
dec
jp
dec
and
inc
imul
dec
inc
cmp
mov
sahf
push
pusha
push
sbb
pop
mov
jno
data16
(bad)
out
fadd
adc
pop
push
jmp
jmp
movs
cmp
in
outs
enter
ja
scas
pop
call
fwait
xor
loope
mov
adc
int3
push
popf
mov
push
cwde
jle
or
push
and
push
cwde
movs
cmp
addr16
jg
and
jo
and
or
loop
mov
pop
mov
push
pushf
fsubr
int
sub
test
cli
je
adc
cdq
dec
dec
scas
or
xchg
dec
pop
in
xor
push
dec
ins
adc
pop
jge
daa
iret
call
add
rol
and
ja
test
dec
int
pop
or
cmp
xor
adc
ficomp
bound
sbb
adc
mul
sub
(bad)
in
test
shl
add
fisubr
call
jecxz
mov
add
jl
pop
adc
sub
or
pop
into
cwde
add
mov
jg
cmps
movs
scas
mov
mov
fs
ror
or
int3
test
out
ror
repz
imul
out
mov
rcr
cmp
out
jge
ret
xor
xchg
xchg
sti
imul
jp
adc
in
retf
and
mov
mov
jae
fiadd
sar
out
es
dec
mov
test
push
pushf
push
(bad)
cmps
xor
cdq
xchg
push
sub
data16
pop
psubsb
ficomp
add
cmp
in
xor
dec
mov
xlat
stos
pusha
retf
rol
test
cmc
cmp
ror
or
jge
test
nop
jae
scas
xlat
sub
add
scas
stc
ror
loop
out
loope
push
ror
sbb
or
jbe
jno
pushf
pop
jg
in
inc
mov
int3
data16
popf
stos
jbe
ds
add
sub
sub
or
cli
cmp
rol
ud1
xchg
cmps
sbb
inc
xchg
add
or
mov
jmp
(bad)
jb
xchg
outs
inc
lods
or
(bad)
outs
mov
icebp
dec
or
xor
rol
jno
or
adc
sbb
push
adc
xchg
cdq
xchg
pop
dec
ret
adc
(bad)
push
inc
stos
and
ins
out
sbb
jmp
push
inc
jo
cs
addr16
mov
mov
push
push
js
push
lahf
sub
pop
push
mov
fldenv
fcomp
test
add
test
je
das
or
and
mov
fs
ret
cmp
mov
pop
xor
(bad)
mov
pop
inc
mov
push
xchg
or
dec
pop
rol
scas
push
sbb
shl
loopne
inc
pop
adc
aaa
dec
mov
ret
ss
cli
mov
mov
in
mov
dec
sub
cld
movs
sbb
mov
or
in
into
pop
or
loopne
inc
dec
push
adc
adc
sub
ret
xchg
adc
mov
repnz
cs
pop
push
mov
cmp
rcr
mov
xchg
xor
jg
push
pop
pop
call
or
daa
xchg
arpl
lods
cmp
ror
sub
mov
adc
int3
mov
mov
cmp
pop
cmps
cmc
sbb
imul
push
ror
mov
addr16
inc
xchg
jno
pushf
(bad)
nop
pop
shr
jnp
add
push
rcr
rol
out
stos
cmc
ja
and
in
into
outs
out
add
jbe
mov
or
popa
(bad)
in
aas
jb
data16
add
jnp
xor
lds
movs
nop
mov
sub
xor
cmps
and
push
ficomp
inc
ret
xchg
enter
xor
repnz
pusha
in
mov
pop
test
sbb
cs
loope
add
and
mov
arpl
sub
add
dec
(bad)
mov
push
sar
shr
out
xlat
add
mov
repz
movs
dec
daa
cmps
jg
imul
jnp
ret
mov
mov
das
xchg
dec
sbb
fidivr
fdiv
jo
ins
dec
mov
sub
cmps
cmps
dec
push
inc
and
sub
add
cmps
fdivr
gs
inc
leave
bound
jge
loope
sahf
jmp
push
jae
inc
test
stc
aaa
rcl
pop
popa
std
ffree
ds
test
mov
test
pop
cmps
popf
jmp
cmp
jo
xor
push
es
sbb
popa
or
mov
(bad)
xor
add
div
or
call
es
retf
clc
and
adc
inc
mov
adc
sub
pop
in
ror
rcr
lods
retf
mov
inc
mov
dec
lods
adc
mov
xchg
jae
push
mov
ins
iret
and
fild
push
sbb
mov
cdq
and
jne
sbb
test
js
les
lahf
stos
xor
pop
sub
mov
mov
int3
test
add
scas
pop
mov
leave
scas
jg
push
cli
pop
inc
dec
(bad)
add
xchg
cli
enter
pop
and
jl
and
cmp
rol
mov
daa
out
mov
xor
retf
jns
adc
bound
stc
(bad)
les
cmp
clc
jnp
push
rol
das
in
pop
aad
retf
call
xchg
std
or
scas
push
or
jle
out
sbb
test
sub
mov
clc
mov
lock
pop
test
sbb
pop
jge
lods
pop
cmp
jecxz
es
cmc
in
inc
les
cmp
mov
dec
adc
or
cld
es
and
in
icebp
stos
lods
inc
or
add
arpl
sbb
jp
sub
fwait
push
push
fwait
add
gs
dec
out
xchg
pusha
pop
mov
loop
dec
jno
fidiv
adc
mov
clc
mov
adc
and
xchg
jnp
dec
mov
int
and
lock
fistp
cwde
jb
jmp
mov
xor
jno
push
test
xchg
out
inc
in
out
mov
jl
repz
das
lea
cmp
mov
loope
or
xchg
retf
mov
xor
or
int
pop
retf
ret
jbe
iret
dec
cmp
dec
popf
xchg
xor
retf
pop
sti
sub
push
lahf
mov
dec
fcom
loope
mov
xchg
dec
(bad)
cmp
out
int3
xlat
jge
xchg
hlt
repz
(bad)
je
jb
inc
test
and
jp
inc
push
ins
test
retf
xor
loop
arpl
and
mov
das
arpl
pop
or
xchg
pop
cmp
xor
xor
fld
add
ficom
or
and
fs
call
jbe
pop
add
xor
cdq
mov
test
into
aaa
xchg
enter
push
push
lds
jns
jns
lahf
cld
fcom
adc
aas
loope
pop
add
pusha
sub
sub
je
shl
xor
stos
dec
mov
hlt
das
jno
mov
cmp
jecxz
ja
push
xchg
inc
or
fsubr
mov
std
(bad)
ja
and
xor
or
adc
push
cmp
dec
mov
stos
les
dec
xchg
inc
bound
movs
movs
push
push
cwde
xor
ds
retf
es
lahf
or
dec
push
dec
out
xor
jmp
xchg
jns
loop
mov
sti
jae
adc
leave
leave
fisttp
jg
fwait
leave
ja
mov
cwde
lock
in
jp
mov
mov
pusha
scas
in
in
arpl
pop
imul
push
shl
jmp
and
std
stos
dec
inc
test
test
out
cmp
jb
lahf
mov
inc
jecxz
das
mov
mov
dec
jo
mov
cmp
(bad)
and
pop
add
bswap
int
dec
jg
sti
cmp
out
or
add
pusha
or
outs
sub
dec
ss
nop
pop
imul
mov
mov
or
cmp
push
mov
test
in
ins
pop
retf
call
lahf
inc
add
sub
inc
cmp
ins
lods
jbe
(bad)
pop
dec
scas
push
adc
lock
jbe
and
loope
push
xchg
push
xor
push
inc
adc
xor
icebp
out
hlt
pop
pop
inc
lahf
xlat
retf
dec
push
inc
mov
dec
rep
dec
test
ss
inc
sbb
(bad)
cmc
sbb
fs
in
mov
test
gs
or
inc
in
sar
and
jmp
xor
adc
inc
fwait
push
xchg
pusha
sub
cmc
les
sbb
lods
daa
pop
stos
stc
out
jmp
jg
adc
mov
push
aas
test
mov
jbe
pop
stos
mov
mov
je
pusha
ins
sti
out
fistp
enter
ficomp
(bad)
push
stos
aad
fwait
dec
out
clc
ds
(bad)
and
jnp
cmp
pusha
pop
idiv
test
out
lds
(bad)
leave
add
fisubr
stos
les
mov
clc
cmp
retf
(bad)
mov
push
fwait
mov
rcr
jle
call
xchg
pop
fnsave
cmp
in
cmp
pop
stc
jmp
ss
sbb
sbb
call
(bad)
cwde
stos
jb
cmps
and
inc
cmp
inc
xchg
mov
dec
leave
mov
inc
cmp
(bad)
repnz
loopne
and
xlat
mov
in
imul
ins
pop
cmp
fsubr
inc
or
push
fdiv
stos
mov
jb
or
aaa
call
fnstsw
mov
sub
rcl
sahf
and
push
and
dec
add
in
jns
shl
dec
in
sti
pop
retf
xchg
outs
add
and
stc
inc
jnp
pop
inc
popf
pop
stc
scas
mov
daa
mov
aam
mul
and
add
pushf
outs
xor
cmp
stc
pop
dec
and
aas
and
jecxz
push
aas
rol
pop
xlat
(bad)
test
mov
adc
movs
push
iret
test
call
or
aam
test
push
mov
stos
pop
repnz
dec
aaa
mov
sbb
cmps
inc
mov
test
xor
inc
and
ins
fist
outs
push
xchg
outs
jne
xchg
xor
jns
fdivr
mov
jl
mov
retf
mul
outs
loope
sub
or
jo
(bad)
mov
cmp
fnstcw
ds
movups
repz
int
in
aaa
sbb
inc
loope
les
and
aaa
mov
loop
out
dec
jno
xor
cmp
fmul
ds
test
mov
retf
(bad)
cld
test
imul
mov
fs
outs
sub
xchg
in
push
dec
xor
or
mov
xor
xor
not
add
es
mov
add
cmc
repnz
xchg
addr16
dec
test
dec
(bad)
int3
xchg
sub
or
(bad)
xor
outs
lods
ja
inc
rcr
push
mov
jno
mov
leave
pop
jbe
sti
out
sbb
pop
(bad)
cld
xchg
xchg
test
outs
fwait
mov
xchg
cmp
dec
pop
pop
add
jns
popf
jae
dec
sbb
jge
mov
test
adc
retf
hlt
jge
xchg
add
outs
mov
sbb
daa
fidivr
xor
mov
sub
xor
loop
add
retf
sbb
stos
sti
jmp
push
mov
xchg
das
dec
xchg
(bad)
js
cmp
jmp
xor
enter
mov
int3
add
pop
cmp
push
cmps
pop
loopne
(bad)
repnz
mov
es
cmc
dec
pop
iret
inc
mov
test
repz
add
or
mov
push
push
xchg
and
rcl
mov
outs
cmp
inc
aas
mov
in
add
xchg
fsubp
dec
xlat
lea
sub
retf
dec
retf
mov
sub
sub
jnp
jecxz
and
or
jmp
xor
xor
push
add
or
mul
push
and
test
(bad)
xchg
cmp
loop
jmp
int3
repnz
stos
xchg
leave
add
push
ret
add
inc
push
push
adc
movs
aad
popf
xor
(bad)
sub
adc
xor
inc
jmp
pop
push
jae
xor
mov
pop
jle
cli
mov
push
dec
cmp
mov
fmul
out
outs
xchg
xchg
movs
pop
hlt
shl
push
push
fisub
dec
pop
jns
cmp
xchg
sbb
stos
sub
jb
lahf
fldenv
rcl
inc
pop
sub
(bad)
rcl
pop
push
inc
scas
add
mov
ins
fwait
not
pusha
pop
mov
pop
inc
jo
mov
loopne
cwde
pusha
and
xlat
popf
in
loope
clc
repz
imul
jmp
jmp
jnp
or
inc
sti
adc
inc
in
cli
das
pusha
fsub
push
adc
pushf
adc
mov
inc
adc
mov
sub
cmps
fbld
test
adc
push
stc
xchg
mov
jmp
lock
xor
sub
das
push
fcom
fild
jmp
leave
cmps
xor
enter
fs
jecxz
dec
xchg
xor
mov
pop
mov
xor
aaa
sar
neg
rcl
cwde
es
in
(bad)
lods
mov
int3
mov
jno
pop
xchg
popf
cli
imul
push
inc
mov
add
ss
jns
push
bound
out
adc
jo
push
ja
mov
push
push
cmp
dec
inc
stos
ror
call
fnstsw
sbb
dec
xchg
dec
sbb
mov
ins
lea
push
in
pop
call
pop
adc
mov
shl
push
dec
int3
xor
pop
adc
inc
sub
inc
lods
xchg
div
jge
add
repz
(bad)
adc
xor
xchg
in
mov
loope
or
mov
and
ror
and
sbb
cmp
pop
jmp
pop
mov
jbe
push
push
pop
out
sub
dec
test
cmp
xchg
jle
dec
ins
test
outs
gs
inc
movs
mov
sbb
les
add
and
lds
mov
adc
mov
sub
sbb
xor
or
mov
adc
out
movs
mov
pusha
sub
js
dec
xchg
test
hlt
pop
jne
outs
das
jle
and
mov
ror
scas
and
dec
sub
mov
or
mov
test
adc
xor
aas
sti
dec
mov
mov
pop
leave
stos
xchg
pop
cmp
cdq
das
clc
inc
sahf
push
xchg
push
dec
jmp
fdivr
aaa
iret
rol
sbb
cmps
retf
or
xchg
xchg
dec
mov
pop
imul
jl
js
xor
adc
jl
div
push
jmp
int
ja
fsub
jmp
inc
addr16
rcl
daa
adc
jg
fld
fwait
sti
inc
into
ja
into
cmp
pop
enter
(bad)
icebp
data16
xchg
jge
fisubr
xor
aas
retf
fcom
xor
loopne
xor
hlt
cld
sti
xchg
cli
push
sbb
popa
shl
outs
dec
mov
cmp
loopne
xchg
xchg
push
inc
into
adc
jmp
ins
inc
or
int
iret
std
pop
add
(bad)
sub
cmp
inc
jbe
xchg
loopne
push
push
mov
(bad)
or
inc
inc
add
xor
xor
popf
ss
ss
ror
mov
in
out
jns
push
test
arpl
cmp
fiadd
cmp
inc
(bad)
imul
inc
push
mov
mov
fstp
push
xlat
pushw
or
adc
mov
out
std
cmc
push
xchg
shr
lahf
mov
xchg
jg
call
jae
daa
int
dec
adc
xchg
xchg
or
les
je
call
mov
inc
loope
mov
jmp
ret
hlt
jae
dec
imul
mov
sbb
out
jmp
movs
das
dec
push
dec
add
dec
push
arpl
mov
int
sti
xchg
and
or
les
push
inc
imul
nop
add
pop
test
lock
sub
hlt
inc
(bad)
add
frstpm(287
dec
jmp
push
in
xor
ja
scas
icebp
repnz
cmps
(bad)
sti
xchg
das
xchg
imul
xchg
rcl
push
pop
out
cmp
fisub
inc
mov
(bad)
gs
xchg
addr16
jo
pop
dec
daa
lea
and
or
popf
jp
or
iret
pushf
sbb
lods
rcr
dec
mov
add
inc
xor
loopne
sbb
nop
inc
data16
mov
into
sub
jecxz
retf
shr
pop
mov
adc
pop
sti
xchg
pop
mov
and
loop
fdivr
setl
clc
(bad)
(bad)
jo
push
xor
xlat
cdq
popa
scas
push
pop
ss
and
and
sbb
ja
hlt
daa
out
pop
cmps
push
xlat
jg
pushf
sub
sub
inc
mov
movs
cmp
push
xor
cdq
pop
cmp
adc
mov
out
iret
mov
sub
push
xchg
xor
adc
xor
and
lahf
mov
popf
sub
pop
cld
in
loop
out
inc
(bad)
push
out
mov
cmp
sbb
shl
adc
lock
mov
xchg
mov
xor
nop
fs
pop
inc
add
inc
cld
adc
pushf
test
scas
dec
test
rcl
clc
aaa
xchg
sbb
ins
mov
jno
cld
rol
xor
jp
cs
clc
rol
in
or
gs
(bad)
jg
call
arpl
test
mov
add
fs
leave
push
int
xchg
test
hlt
aas
iret
sub
ins
sti
and
jnp
jl
mov
into
loope
cmp
inc
cmp
lods
pop
adc
pop
mov
jle
pop
call
in
or
pop
(bad)
cmps
call
popa
das
push
add
mov
cmps
dec
fdiv
pusha
mov
push
js
mov
mov
pop
scas
mov
sahf
and
sbb
xchg
std
imul
hlt
fistp
stc
mov
push
push
aam
or
jmp
shr
xchg
jns
xor
xchg
pop
sub
jp
out
cmp
adc
cmc
aad
ret
loopne
mov
sbb
sub
pushf
pop
cmp
xor
cmpxchg
dec
pop
sub
fisubr
ja
pop
sub
clc
mov
(bad)
repnz
das
ret
push
ss
and
pop
shr
push
repz
jmp
cli
pop
pop
out
fldcw
mov
lock
rcl
xchg
fs
mov
mov
fdiv
cld
add
stc
cmp
push
or
out
push
(bad)
cld
(bad)
and
mov
or
rcr
cmps
enter
sbb
jbe
xchg
and
sub
movs
mov
js
mov
aam
lea
daa
in
add
test
jg
lahf
sub
fisubr
leave
out
pop
xchg
sbb
dec
jb
mov
mov
das
jne
and
xor
cwde
sbb
js
mov
mov
lds
inc
xchg
inc
xor
xchg
cs
sar
cld
sub
in
outs
mov
pop
mov
(bad)
iret
inc
push
pop
lahf
sub
mov
cmp
dec
pop
lea
inc
xlat
and
out
repnz
test
daa
pop
in
push
jecxz
push
sbb
ja
sar
shl
cld
cmps
fist
xchg
cmc
and
xchg
fdiv
test
xor
fldcw
test
sbb
int3
jbe
stc
jns
ret
adc
outs
jbe
xchg
jl
push
xchg
fimul
or
clc
(bad)
stos
lea
lock
add
icebp
mov
shl
and
dec
fwait
rol
lods
push
arpl
lods
sbb
out
mov
or
mov
sbb
fimul
pop
xchg
pop
ja
pop
rcr
outs
mov
ret
push
xchg
sub
mov
sub
pop
int
jg
xchg
je
int3
test
and
dec
ins
push
mov
jle
fistp
sub
xor
xchg
shl
push
(bad)
mov
dec
cmp
jl
lods
(bad)
stc
sub
mov
or
mov
lea
imul
jp
inc
shl
leave
mov
rcr
xor
ret
add
addr16
mov
test
je
loopne
scas
sub
xchg
push
call
ja
jg
(bad)
cmp
test
daa
pop
cli
ins
xor
and
imul
add
inc
jmp
call
(bad)
or
sbb
push
push
lahf
cmp
pop
dec
icebp
sar
adc
jl
nop
lea
push
jbe
sub
adc
mov
inc
(bad)
sub
and
push
sbb
mov
or
dec
fdivr
fdivr
clc
push
pop
cmp
js
(bad)
fcom
add
cmp
dec
ins
xor
pushf
mov
cdq
int
sub
mov
out
adc
jnp
shl
cmp
mov
mov
test
inc
inc
popf
pushf
add
fstp
or
mov
lds
adc
push
or
out
repnz
cdq
xor
xor
cld
movs
ret
ret
sub
sbb
sub
das
pop
mov
(bad)
out
fdivp
or
sbb
call
loop
push
cmps
inc
daa
outs
push
inc
push
sahf
cmp
cwde
ins
lds
aaa
dec
dec
mov
pop
ja
inc
ins
rol
popa
aad
dec
fcomp
retf
xchg
dec
mov
clc
add
sahf
jns
std
or
fild
sub
aam
add
lahf
mov
xlat
add
inc
sbb
sub
shl
or
and
or
add
ret
mov
out
ja
jmp
cmps
dec
cmps
daa
xchg
in
pop
mov
xchg
push
fsub
sti
out
je
in
jns
mov
sbb
jmp
pop
stc
push
adc
pop
xor
sbb
(bad)
jne
jp
es
stos
int3
pop
psubusb
out
out
jbe
leave
ret
in
xchg
mov
into
pop
das
jmp
jecxz
pop
iret
fimul
push
fst
sub
aad
daa
ja
and
xor
movs
enter
lea
mov
jnp
lahf
xchg
add
mov
mov
out
movs
sub
jmp
pushf
into
ja
stos
add
(bad)
mov
sar
idiv
sbb
pop
adc
xor
lods
cdq
xchg
ret
mov
movs
rol
inc
cmps
call
icebp
lahf
popf
push
inc
scas
(bad)
dec
imul
push
nop
jb
dec
jb
rcr
xchg
push
cmp
xor
test
movs
adc
mov
and
aaa
movs
scas
retf
aaa
rcr
inc
adc
jecxz
shl
xor
int
dec
hlt
cmp
mov
sub
mov
int3
outs
out
mov
jmp
(bad)
mov
cmp
mov
sub
dec
xchg
aas
add
mov
repnz
aas
pop
xchg
push
loopne
adc
dec
jg
outs
cwde
out
ins
and
push
pop
movs
es
dec
mov
stos
pop
push
and
retf
pusha
xlat
and
adc
loope
inc
push
mov
stos
inc
jne
jnp
mov
and
test
ds
cmc
sbb
inc
inc
lea
fidiv
jmp
mov
aad
xor
aad
pop
adc
les
mov
xor
mov
hlt
sub
xchg
mov
push
pusha
adc
and
jns
mov
inc
add
bound
and
stc
pop
clc
push
dec
adc
cwde
pusha
(bad)
out
sub
int
and
inc
push
sti
sahf
xacquire
inc
add
push
dec
dec
mov
(bad)
test
xchg
mov
jle
or
dec
xor
ins
bnd
fisttp
loope
dec
imul
xor
mov
and
stos
jo
xchg
iret
jae
xchg
or
pop
xchg
pop
dec
(bad)
fst
cdq
xor
dec
not
fmul
inc
xor
mov
push
cdq
retf
call
shr
in
cld
xor
push
mov
in
ja
dec
hlt
mov
sub
cli
sbb
pusha
xchg
dec
movlps
push
icebp
xchg
cvtdq2ps
loop
das
les
add
xchg
jb
jle
push
dec
fmul
(bad)
xlat
add
cmp
push
sub
cmp
lods
mov
push
sub
into
mov
mov
jg
out
(bad)
mov
jb
dec
push
outs
shr
inc
aad
jb
push
cli
inc
jge
mov
mov
stc
mov
addr16
fisubr
inc
mov
stos
or
cmc
mov
xchg
(bad)
cmp
adc
adc
mov
jle
jge
mov
popa
clc
fist
int3
mov
mov
jmp
nop
inc
ret
(bad)
into
adc
int
fadd
push
cmps
and
push
add
add
not
push
cmp
pop
(bad)
or
rol
cdq
aad
sahf
mov
mov
cmc
dec
fisttp
adc
or
inc
jle
cld
retf
xor
ds
or
and
repz
cs
pop
sbb
aaa
mov
ja
aam
fwait
cli
test
and
outs
shr
dec
jmp
cmp
cmc
(bad)
icebp
jns
popa
cmp
stos
mov
(bad)
int
or
cmp
sar
xor
cli
fwait
test
test
sub
test
or
cmc
mov
jmp
push
(bad)
loope
or
sti
fs
dec
popa
clc
fstp
test
je
jne
jnp
or
mov
push
cmc
lods
ficom
lods
shr
icebp
xchg
ja
sub
ror
pusha
inc
jae
imul
cmpxchg
mov
mov
loope
jecxz
fs
push
mov
sbb
cmp
cld
inc
retf
xchg
mov
ins
cmp
push
add
xor
xchg
out
dec
aaa
in
pop
cdq
(bad)
int3
mov
push
cmp
mov
rol
push
bound
pop
stos
push
jns
call
aad
sbb
idiv
pop
lock
pushf
and
pop
sar
imul
fidivr
mov
xchg
push
mov
or
sub
int
or
inc
call
pusha
leave
out
in
ret
call
or
fsubr
cmp
jnp
push
jns
clc
add
mov
pop
jg
and
mov
cmp
mov
lahf
loope
dec
in
fwait
(bad)
sbb
loope
mov
rcr
outs
loopne
xchg
sahf
fs
pusha
pop
enter
leave
dec
imul
lock
js
(bad)
mov
adc
arpl
leave
mov
imul
adc
pop
stc
stos
int
fild
sub
jecxz
loopne
lock
cmp
shr
cmp
push
xchg
(bad)
lea
cwde
fdivr
stos
lea
fwait
sub
xchg
lds
push
jl
les
in
cmp
dec
shr
adc
cmp
dec
daa
xlat
push
mov
add
in
imul
rcl
cli
mov
add
aas
inc
mov
into
dec
sti
ds
outs
jns
icebp
adc
retf
dec
push
jnp
mov
test
repnz
xchg
push
test
xor
repz
mov
call
mov
sub
xchg
jbe
jecxz
ror
iret
imul
in
xchg
daa
cs
(bad)
(bad)
dec
and
or
in
push
cmp
out
aas
push
xor
cmp
or
es
jne
enter
pop
bnd
xor
movs
dec
lahf
popa
add
adc
outs
lahf
and
pop
mov
cmp
add
cdq
xlat
sub
xor
jge
ins
(bad)
ret
or
rcr
cmp
sub
imul
and
or
(bad)
mov
pop
adc
pop
mov
mov
mov
ret
ret
fs
loopne
xchg
pop
and
rcl
cmp
out
(bad)
rcr
sbb
popf
fadd
scas
idiv
ins
sub
sbb
xchg
ins
packsswb
jmp
add
pop
mov
ins
jns
fimul
pop
inc
arpl
or
cmp
jmp
and
out
xchg
cmp
push
sahf
sbb
jecxz
sbb
push
jle
and
or
dec
mov
xchg
mov
(bad)
repz
aaa
sbb
or
mov
inc
addr16
adc
into
ins
and
xchg
cs
xchg
adc
fimul
sub
pop
pop
pop
xchg
retf
repnz
(bad)
sahf
imul
or
(bad)
(bad)
xchg
sub
or
sbb
xchg
sub
adc
pop
push
das
jo
and
inc
jno
imul
mov
aaa
enter
stos
(bad)
adc
pop
or
fidiv
addr16
push
adc
dec
add
xor
xchg
outs
cmp
or
adc
hlt
xchg
lahf
movs
cmps
lea
inc
xchg
cdq
daa
pop
aad
mov
imul
jae
adc
in
ja
out
retf
data16
popf
inc
nop
aad
out
jp
enter
test
sar
test
dec
cli
jp
mov
pop
ja
pop
cmovge
out
push
mov
shr
js
xchg
les
xchg
or
pop
sub
js
dec
and
mov
mov
out
adc
aas
xor
add
or
test
loop
scas
inc
xchg
int3
add
cmp
jmp
cdq
xchg
or
outs
mov
daa
mov
test
cmp
cli
rcr
pop
pop
pop
adc
idiv
xlat
jecxz
fidivr
pop
pop
into
les
sar
jae
inc
in
imul
dec
stc
push
neg
les
addr16
es
mov
add
daa
pushf
and
mov
add
mov
xchg
stc
mov
mov
into
or
and
out
or
call
shl
idiv
add
add
iret
hlt
rcr
sub
add
dec
bound
mov
adc
inc
jne
ins
int3
or
aas
aas
outs
mov
dec
jbe
sub
out
mov
cs
add
dec
mov
stos
hlt
xchg
dec
fdivr
mov
push
daa
test
or
data16
mov
cs
adc
push
ret
push
mov
jmp
aaa
pop
in
jo
push
loope
clc
out
or
add
ins
push
mov
stos
nop
mov
sbb
ins
test
sbb
push
jmp
cmps
dec
push
push
add
jg
pop
int3
shr
clc
out
jecxz
repnz
jbe
jg
add
std
lods
jns
or
pop
cmp
shl
mov
xor
dec
jnp
fstp
rcl
sub
xchg
sar
popa
dec
cmp
inc
push
out
xchg
and
mov
adc
cmp
pop
imul
or
es
inc
push
dec
leave
xchg
sub
sbb
sub
ja
and
xchg
adc
jno
repnz
sahf
icebp
pop
fnstenv
mov
mov
shr
xchg
and
clc
std
cld
cmps
mov
fld
out
lods
out
repz
push
std
xor
push
mov
push
call
xor
lock
mov
dec
int
lds
push
test
js
rcr
xchg
push
cwde
movs
xchg
inc
push
leave
fcom
jo
inc
push
cwde
lods
pop
es
test
or
jns
push
xchg
mov
in
dec
(bad)
scas
ss
ret
adc
mov
xor
mov
mov
lea
(bad)
popa
jmp
jnp
js
inc
cmc
aaa
ss
loope
inc
leave
mov
scas
retf
jnp
adc
sub
and
pop
add
xor
mov
imul
dec
push
xchg
(bad)
dec
adc
retf
les
aaa
in
retf
or
sub
and
mov
jle
mov
iret
fidiv
xchg
fnop
icebp
stos
in
fstp
mov
fisttp
add
stc
mov
fmul
into
scas
cmp
cwde
mov
out
pop
leave
push
dec
sbb
aad
mov
xlat
xor
mov
shl
jle
adc
out
lahf
call
xor
cmp
fs
movs
jno
outs
stos
out
lea
imul
push
enter
std
dec
add
inc
add
test
mov
inc
jp
aad
inc
fwait
mov
arpl
mov
lahf
test
xchg
pop
arpl
pop
(bad)
loopne
in
ja
rol
ret
jmp
aad
call
cdq
jmp
scas
and
out
pop
cmp
adc
mov
imul
adc
mov
into
fs
and
sbb
aas
and
into
and
mov
ins
mov
ror
mov
cmc
jmp
sub
pop
out
hlt
ret
jg
xchg
xchg
mov
outs
mov
pop
nop
sahf
mov
popa
jecxz
in
jno
ret
mov
(bad)
test
fs
jb
mov
inc
pop
mov
push
cmp
repnz
jecxz
push
xchg
fdivr
cmc
loopne
xchg
jnp
(bad)
mov
sub
mov
dec
jg
xchg
aam
push
mov
ficom
sub
in
in
arpl
add
fwait
jb
and
les
inc
(bad)
and
sbb
and
outs
std
hlt
sub
jmp
int3
xchg
loop
mov
cmp
repnz
pop
clc
aas
inc
pop
pop
dec
xchg
xor
inc
aad
pusha
cmp
lods
movs
jecxz
mov
xchg
pop
jns
aam
sub
pop
cmc
mov
fidiv
push
call
or
sbb
or
jl
out
push
shl
push
cld
jmp
adc
cdq
pop
rcr
cmps
jo
mov
mov
js
loope
pop
push
aad
sbb
not
cld
cs
lea
sbb
jne
ret
mov
add
ret
dec
stos
pop
jle
push
ror
test
(bad)
ins
fs
imul
xor
bound
xor
jae
sub
popa
je
or
(bad)
or
test
xchg
inc
ja
movs
inc
movs
push
sub
sbb
adc
test
int
outs
sbb
(bad)
not
or
hlt
fwait
push
cmps
mov
xchg
cmps
ja
or
or
sub
xchg
aas
sbb
pop
xor
aam
pop
jno
mov
imul
xchg
pop
mov
mov
xor
add
adc
sbb
add
sbb
adc
retf
jp
pop
sub
test
sub
je
mov
mov
mov
inc
jp
mov
loopne
push
(bad)
bound
push
and
pusha
push
bnd
mov
pusha
and
or
dec
loopne
sbb
(bad)
xchg
and
fld
movs
jb
push
and
dec
clc
(bad)
pop
pop
mov
in
test
(bad)
hlt
int3
enter
cmp
push
cmp
mov
mov
mov
cs
(bad)
inc
inc
mov
daa
movs
stos
aaa
int
sub
dec
inc
in
push
cwde
jmp
scas
lods
mov
push
push
jg
stos
lods
(bad)
sbb
dec
mov
mov
sub
lea
test
mov
add
sub
(bad)
stos
aad
xor
xor
or
cmp
and
das
addr16
and
push
rcr
and
xchg
cmps
adc
sub
pop
call
jmp
cdq
(bad)
xchg
into
out
pop
push
or
sti
jp
outs
pop
stc
je
mov
stos
sbb
pop
adc
mov
movs
data16
xchg
cli
mov
sub
pushf
neg
outs
call
rcl
or
inc
popa
push
shl
lock
cmp
add
mov
mov
repz
ins
inc
shl
xor
mov
sbb
stos
out
and
cdq
loope
mov
jecxz
stos
retf
inc
stc
fadd
(bad)
jnp
adc
(bad)
pop
popf
lock
sahf
or
or
and
sbb
or
mov
and
pusha
and
pop
scas
ficom
mov
xor
mov
pop
in
cmps
(bad)
inc
or
out
push
int
jg
test
mov
sub
retf
add
in
inc
lea
gs
je
(bad)
mov
std
sub
push
dec
hlt
mov
adc
ins
and
add
mov
int
sub
mov
sub
cmps
inc
add
adc
pusha
xchg
pop
mov
mov
dec
out
or
mov
je
pop
sbb
cmp
mov
jecxz
dec
aas
xchg
les
cwde
jg
xor
or
push
pop
xchg
shl
mov
adc
repz
sbb
xchg
push
cmps
xchg
mov
or
mov
data16
mov
or
push
pop
int3
test
sti
xchg
xchg
cmp
push
cvtps2pd
mov
das
or
jmp
cmp
outs
clc
scas
and
jb
(bad)
shl
dec
sub
in
xor
jecxz
inc
add
jge
add
mov
cmp
xchg
fist
pop
div
fidivr
dec
imul
(bad)
xor
sbb
fcomp
(bad)
rcr
jae
repz
mov
test
dec
mov
pop
xor
call
cmc
call
dec
int
sbb
sar
test
fild
fs
pushf
aam
into
test
movs
ret
imul
cmp
mov
fwait
jo
sub
adc
xchg
daa
cmps
dec
cmp
bound
daa
pop
into
mov
xchg
jbe
jne
sahf
adc
nop
dec
(bad)
fst
mov
push
mov
push
cli
sbb
leave
inc
shl
aam
jae
dec
xchg
popa
sub
gs
xchg
xchg
jge
jp
sbb
daa
addr16
and
push
ins
ret
inc
dec
dec
inc
std
cmp
mov
push
leave
idiv
adc
mov
aas
(bad)
and
xchg
push
ret
in
push
and
data16
pusha
jl
push
pop
push
mov
xchg
adc
dec
ds
aam
retf
fs
push
in
lea
retf
test
push
clc
cmp
inc
add
lds
and
(bad)
jnp
mov
retf
lods
cmp
js
nop
inc
lods
outs
aaa
test
sub
test
fst
mul
mov
mov
in
(bad)
sar
fcomp
xchg
imul
int
adc
mov
mov
sbb
inc
mov
adc
int3
add
jmp
cmc
mov
mov
aam
out
mov
lods
clc
sub
addr16
pop
scas
jae
scas
outs
push
cmp
mov
pop
xor
xor
mov
fwait
repz
test
(bad)
addr16
in
add
xor
sbb
mov
pop
or
xor
lods
add
ins
inc
xlat
add
push
xchg
data16
or
push
sub
fbstp
out
popa
cmp
clc
scas
push
test
shr
push
pop
inc
sbb
mov
loopne
lea
jecxz
add
inc
mov
xchg
push
and
inc
xor
ja
mov
jo
push
jo
das
add
mov
push
push
test
pop
mov
icebp
pop
mov
movs
inc
loopne
mov
lahf
imul
not
pusha
mov
xchg
retf
ins
pop
push
dec
mov
sbb
fwait
cld
mov
mov
aad
jo
imul
add
enter
push
(bad)
das
shr
jbe
xor
cld
push
icebp
(bad)
push
movs
push
xchg
mov
mov
loope
fwait
mov
rcl
and
mov
sub
adc
jns
adc
imul
cmp
fldenv
aam
call
pop
xor
iret
push
mov
dec
sbb
jne
or
sbb
xchg
add
cmps
jns
cmps
push
sub
ins
shr
mov
pushfw
adc
je
test
movs
mov
imul
std
add
sub
pusha
out
cmp
mov
lds
scas
or
sbb
sub
sbb
fwait
push
into
mov
pop
into
or
movs
mov
lock
inc
clc
xchg
sub
push
xor
ins
and
adc
mov
out
push
cmp
sbb
fsubr
cld
shr
push
adc
mov
gs
dec
or
arpl
lea
cld
out
and
cmp
pop
mov
push
dec
lods
nop
loopne
mov
cs
mov
jge
mov
gs
cmp
lock
adc
fnclex
push
and
in
push
xchg
mov
jbe
sub
push
cmp
inc
ret
or
jo
push
xchg
pop
mov
xchg
jecxz
mov
icebp
mov
sahf
jmp
adc
repz
cs
or
pop
add
adc
cmp
or
cmp
adc
int
es
call
cmp
inc
xlat
(bad)
or
loopne
pop
je
pop
je
xchg
mov
jg
xlat
jmp
mov
cmp
aad
mov
(bad)
lock
mov
push
ret
div
js
and
aam
sub
(bad)
adc
xchg
daa
ficomp
add
or
push
mov
mov
pop
cdq
cli
and
scas
mov
cmps
xchg
shl
dec
pop
sahf
add
cmp
xchg
sub
(bad)
xchg
addr16
shr
outs
ss
sti
pop
lahf
and
ins
call
sub
sub
arpl
xor
js
in
push
ins
mov
mov
loope
xchg
cmp
loop
pop
cmp
fstp
cmps
add
repnz
jl
sub
imul
sub
sbb
adc
je
push
in
xor
pop
mov
lock
mov
(bad)
in
loopne
inc
jmp
shl
sub
fsubr
dec
(bad)
lock
sbb
and
sub
dec
test
cmp
stos
enter
mov
in
or
adc
jbe
xchg
mov
sbb
je
mov
push
xchg
and
sbb
mov
lods
lahf
xchg
sbb
sbb
or
int3
sahf
bound
mov
inc
pop
lods
add
cmc
icebp
push
jmp
sbb
xor
adc
adc
out
sub
pop
inc
js
retf
jne
adc
and
fwait
jmp
imul
or
fsubr
aaa
in
jno
iret
repz
fdivrp
inc
xor
pop
out
dec
in
std
and
xor
mov
mov
push
inc
inc
out
sub
iret
sti
mov
push
jno
inc
mov
in
lods
cmp
adc
adc
movs
out
jb
mov
outs
sub
outs
aas
inc
pushf
pop
xor
xchg
ds
loope
mov
xor
aaa
stos
leave
mov
es
out
push
fstp
mov
dec
jp
add
in
stos
cmp
retf
popa
mul
imul
lock
lahf
pop
out
and
jmp
lock
sbb
scas
pop
adc
mov
sub
and
fbstp
cs
push
jle
out
mov
stc
shl
ret
test
inc
mov
shl
ret
push
adc
shr
pop
jno
mov
into
xlat
mov
fist
ret
outs
sbb
arpl
pop
mov
ficom
loope
jg
lds
jb
or
lahf
add
mov
sub
cld
jmp
mov
mul
push
(bad)
jmp
loope
jmp
das
add
dec
add
std
mov
sub
ret
scas
cs
jg
push
in
adc
shr
std
inc
dec
or
sub
jle
mov
jmp
cmp
sbb
(bad)
cmps
mov
and
xchg
push
and
jno
xchg
fimul
scas
idiv
mov
cld
inc
mov
add
int3
xchg
cmp
test
pop
shl
jmp
mov
sub
scas
cld
cmp
mov
sti
lods
adc
sar
sub
iret
adc
ret
xor
pop
lock
out
mov
push
cmp
std
in
jae
lahf
(bad)
push
call
pop
call
ins
fidivr
movs
aaa
test
mov
inc
ror
adc
pop
popa
test
aad
jge
repz
sub
xchg
mov
mov
jp
imul
pop
xor
cld
aam
jno
and
arpl
sub
popa
fild
imul
popf
dec
or
mov
sub
ss
xchg
inc
sub
fist
push
jle
and
arpl
mov
or
cmps
mov
scas
shl
add
xor
popa
mov
cs
lock
mov
ret
adc
retf
cmp
mov
xor
adc
jg
or
gs
retf
push
(bad)
inc
mov
std
leave
xchg
popa
push
bound
xor
test
jge
adc
push
adc
shl
aad
mov
fs
lods
push
(bad)
mov
push
ins
sbb
pop
sbb
xchg
pushf
fcom
rol
shl
or
out
xor
ror
rcr
test
inc
loope
mov
scas
mov
inc
sub
mov
or
gs
jb
xchg
jecxz
movs
dec
xlat
bound
hlt
mov
repz
(bad)
not
mov
outs
jmp
repz
cmp
pop
pop
or
sub
or
xor
xlat
adc
and
push
add
dec
add
ja
ret
mov
push
dec
xor
(bad)
sub
sar
inc
addr16
sub
xlat
stos
cli
int3
jae
test
lock
nop
and
pop
adc
xchg
sub
or
das
mov
and
loopne
xchg
(bad)
ror
sbb
or
xchg
(bad)
xlat
sbb
mov
daa
retf
jl
dec
xlat
adc
push
mov
cs
adc
cmp
or
inc
xchg
cmp
scas
xchg
jp
(bad)
and
and
in
repnz
(bad)
jne
jnp
data16
mov
je
inc
xchg
clc
jl
add
cmp
sbb
into
ret
out
inc
pop
and
aad
pusha
add
jle
inc
jge
jno
popf
sub
sar
dec
xor
dec
jbe
retf
adc
ficomp
push
xchg
jmp
fwait
adc
add
xchg
(bad)
dec
mov
push
cmp
xlat
into
pop
ins
cmp
pop
mov
or
jl
test
aad
add
enter
pop
ins
mov
xchg
mov
pop
dec
push
loop
sbb
push
test
adc
cs
and
sub
bound
mov
jmp
leave
inc
sub
mov
pop
push
into
ja
or
fndisi(8087
sbb
sub
enter
inc
xor
es
(bad)
jne
cmp
ins
ds
push
ret
das
dec
xchg
jbe
div
inc
mov
mov
push
aam
inc
xlat
shl
mov
aam
ins
and
cdq
jae
mov
ret
lock
and
repz
push
shr
test
push
add
sbb
movs
push
pop
lea
test
stc
std
jmp
mov
adc
push
jecxz
mov
clc
aas
jge
rol
fcom
retf
cli
mov
mov
cld
jmp
and
jmp
push
jno
xor
mov
jo
add
mov
cmp
or
addr16
aaa
xchg
jp
push
jno
xchg
popf
xchg
adc
dec
mov
enter
or
pop
xchg
pushf
or
cld
xchg
dec
cmp
in
div
neg
sbb
scas
repnz
inc
fisttp
test
lahf
cmp
setne
lds
add
mov
mov
mov
test
popa
cli
in
push
ret
adc
test
xchg
cmp
mov
int3
cmp
dec
xchg
mov
adc
sbb
imul
data16
(bad)
imul
cs
sub
out
sbb
sahf
cmp
cmp
adc
retf
xor
xor
sub
jmp
jge
add
cmps
push
jne
lods
jmp
into
pop
jno
adc
aas
les
pop
cmp
mov
rcl
mov
mov
sbb
mov
int
movs
sbb
xchg
jg
adc
dec
mov
out
icebp
fwait
or
jg
xor
(bad)
shl
xchg
daa
add
leave
stos
jp
test
and
lds
mov
xchg
inc
xchg
fs
mov
mov
push
push
imul
test
sbb
int
dec
cmps
mov
xchg
(bad)
lods
push
push
pop
cwde
sub
sub
xchg
push
sbb
inc
fs
mov
push
aas
popa
mov
pop
mov
repnz
jb
rsm
(bad)
push
add
xchg
xor
retf
out
xor
int3
dec
add
mov
pop
clc
sbb
ficom
loopne
dec
xor
add
jle
fidiv
dec
xor
pop
jo
movs
mov
pop
sub
cmp
aad
dec
dec
mov
add
pandn
pop
or
or
push
and
xor
aad
add
xchg
mov
das
aas
shl
ficom
jmp
cmp
xchg
int3
gs
inc
mov
in
cld
dec
mov
(bad)
mov
adc
cmp
mov
scas
retf
std
hlt
into
inc
cwde
add
ss
push
and
adc
jo
or
cmp
and
sub
jge
and
xor
popf
(bad)
loop
pusha
jmp
(bad)
xchg
ss
jnp
std
lea
adc
xlat
mov
inc
pop
lods
and
adc
fild
in
mov
arpl
pop
push
jo
pop
retf
cmp
aaa
inc
fimul
mov
lds
out
mov
call
inc
cmp
out
enter
dec
rcr
sub
stos
jnp
dec
xchg
xor
outs
mov
bound
and
jmp
adc
out
ror
push
fldenv
inc
dec
rcpps
add
fimul
xor
out
adc
xchg
sahf
jnp
fadd
gs
inc
rcr
mov
push
add
xor
(bad)
lock
inc
mov
jle
int
pop
je
ret
inc
pop
popf
movs
xor
xor
outs
sbb
mov
mov
add
fidiv
jne
jge
icebp
jl
jne
aas
(bad)
jae
dec
cwde
add
arpl
adc
sti
out
cmp
xchg
add
dec
mov
cmp
pushf
cdq
push
shr
pop
inc
cld
dec
push
mov
das
popf
xchg
xor
iret
lods
mov
cmp
jnp
add
mov
xor
loopne
add
cmp
push
sub
adc
jns
sbb
or
inc
pop
inc
hlt
scas
mov
and
mov
sbb
xchg
movs
bound
jmp
fwait
scas
dec
out
cmps
push
mov
ja
cmps
outs
loopne
adc
loopne
ins
pop
dec
movs
mov
fs
jge
dec
inc
or
jp
das
adc
mov
imul
sbb
scas
mov
cmp
ja
pop
add
add
es
xchg
mov
clc
jno
lods
push
mov
and
gs
cmp
add
scas
mov
nop
cmc
icebp
cmp
cmp
xor
dec
push
std
pop
xchg
pop
fld
neg
sub
push
and
aaa
imul
jmp
shr
jmp
jbe
cmps
leave
sub
xor
cmp
dec
xor
mov
push
inc
xor
std
push
jne
stos
clc
pop
pop
mov
inc
mov
jle
mov
lahf
push
jl
mov
cmc
mov
mov
shr
jecxz
adc
mov
in
mov
xchg
hlt
inc
or
imul
mov
imul
push
out
and
movs
push
add
pop
cld
stos
call
sbb
fisub
inc
fs
adc
xchg
pushf
adc
push
movs
jne
das
pop
push
arpl
sub
sub
mov
data16
push
ins
ins
in
icebp
sbb
std
jle
sub
and
cdq
fcomip
clc
out
pop
jnp
outs
mov
call
retf
inc
outs
leave
(bad)
loope
in
cwde
je
sbb
shl
cld
aaa
xchg
jl
ficom
js
and
cmp
dec
jns
dec
or
jmp
out
(bad)
xor
popa
lods
mov
stos
movs
xchg
cmp
js
bound
sub
(bad)
enter
xor
movs
pop
pop
(bad)
shr
dec
int3
push
pop
pop
push
jle
cmp
cmp
mov
aad
test
push
jecxz
das
imul
cmp
popf
(bad)
xchg
int
pop
fadd
add
dec
pop
imul
aam
gs
call
adc
loop
and
(bad)
mov
mov
cmp
and
iret
push
hlt
fisttp
cmc
outs
int
cmp
das
mov
jl
mov
cmp
sub
mov
or
dec
sub
jg
xchg
pop
out
adc
fimul
dec
jg
cmp
addr16
jl
mov
stc
xor
bound
cmps
loop
in
dec
mov
fstp
pop
xchg
push
jg
mov
pusha
and
inc
cmps
pop
adc
adc
cdq
mov
push
mov
add
cld
push
loop
test
inc
addr16
dec
or
or
add
jns
pushf
cmp
xor
and
xor
adc
lea
cmp
outs
jb
daa
mul
push
cs
cmp
cli
or
fisubr
mov
int
xor
lahf
sub
push
int3
test
movs
and
scas
jno
stc
js
mov
add
xor
bound
jb
mov
cs
call
enter
imul
dec
dec
xchg
jne
(bad)
popf
enter
fnstcw
and
cmp
mov
sub
fdivr
pop
ja
pop
mov
clc
mov
sbb
ss
push
mov
shr
or
mov
or
push
(bad)
ds
sar
ret
mov
call
and
push
cld
sti
push
loope
sub
nop
adc
enter
cmp
in
mov
addr16
lea
jb
mov
push
mov
mov
in
mov
(bad)
out
mov
call
mov
xor
test
loope
dec
pminub
pop
or
sbb
dec
xchg
cmp
popa
lods
aas
push
test
movs
dec
push
xchg
int
in
into
pop
cmp
mov
addr16
inc
add
int
xchg
xchg
push
les
loop
adc
mov
jecxz
int
sub
and
cs
push
mov
out
movs
inc
stos
and
sub
or
pusha
aas
das
or
pop
fstp
xchg
mov
jp
stos
fisttp
stos
fist
test
iret
stos
and
inc
mov
mov
je
adc
mov
mov
add
imul
mov
and
(bad)
lods
push
push
jno
jp
jno
xchg
sub
lds
mov
sti
inc
cdq
mov
xor
mov
sbb
imul
adc
mov
rcl
push
div
in
sahf
adc
lods
fs
xchg
push
dec
push
fstp
ss
cmp
hlt
(bad)
push
out
add
mov
dec
inc
stc
and
stos
mov
sub
imul
rcr
or
xor
retf
sub
fsub
push
ret
shl
mov
test
ins
(bad)
and
sub
int
adc
in
aas
sub
movs
or
jmp
pop
dec
outs
mov
push
cs
mov
int
test
and
sub
rcl
not
ins
lahf
and
sub
aad
arpl
popa
and
rcr
test
lahf
xor
(bad)
call
push
imul
(bad)
mov
in
jle
dec
dec
add
and
xchg
and
dec
aad
mov
xor
push
pop
adc
jge
scas
jnp
ficom
lahf
cmp
inc
ja
shl
jne
pop
popf
call
mov
popf
push
push
pop
cmps
not
test
jp
jge
shr
test
add
cdq
pop
(bad)
imul
mov
dec
push
call
mov
inc
push
xor
psllw
adc
shl
pop
mov
pop
(bad)
cmp
add
js
xor
out
pop
mov
scas
dec
ins
retf
sahf
aas
push
or
pusha
or
push
enter
push
or
push
ret
cmp
iret
pop
neg
add
out
dec
or
xor
in
xchg
add
push
rol
cmps
sbb
jle
dec
and
fwait
int
stc
shr
mov
add
xchg
push
leave
jp
jp
lods
dec
bound
into
push
jl
mov
push
addr16
pop
dec
mov
adc
retf
and
xchg
sub
test
ins
jge
fwait
ja
rol
(bad)
xchg
ins
mov
xor
mov
call
lock
mov
or
imul
xor
add
pop
and
(bad)
cmp
mov
test
dec
dec
ins
jbe
dec
outs
lods
cmp
repz
mov
pop
sti
mov
enter
adc
cs
mov
repz
xchg
pop
mov
test
inc
das
sub
nop
cmp
xor
push
test
stc
cmp
pop
mov
jg
xlat
in
sub
fs
sub
retf
scas
push
add
sbb
imul
int
bound
push
aad
cmp
jecxz
jno
mov
ins
cmp
aad
mov
inc
repnz
(bad)
pop
fsub
cmp
ja
outs
(bad)
std
mov
cli
jb
retf
jl
mov
mov
pop
loop
mov
mov
sbb
rcr
sbb
add
push
push
push
imul
leave
xlat
stos
dec
sbb
xchg
dec
mov
dec
mov
cmp
push
and
stc
adc
jns
mov
test
sub
dec
dec
pop
sub
add
push
push
ins
xchg
or
loopne
dec
adc
sbb
adc
mov
test
and
and
jbe
mov
jge
mov
outs
inc
xchg
push
out
mov
mov
ret
jp
add
loope
(bad)
xchg
mov
(bad)
ds
scas
xchg
sub
sbb
or
out
in
cmps
out
mov
and
cmc
inc
jne
(bad)
out
mov
ret
xor
loope
aam
or
std
xor
movs
(bad)
scas
fld
or
pop
mov
mov
out
(bad)
js
mov
or
xchg
aas
lea
leave
cld
(bad)
lds
mov
test
sti
js
stos
out
js
mov
es
pop
jb
xchg
ja
add
push
daa
(bad)
test
jg
inc
in
sbb
pop
sub
sbb
cmp
pop
pop
cmp
add
adc
jns
sti
popa
aaa
mov
push
fisttp
lea
jp
call
mov
adc
cmp
in
mov
aas
adc
lea
adc
hlt
sub
jb
dec
pop
sub
inc
ficom
mov
sub
je
iret
jns
aas
ret
and
inc
sbb
or
push
fsubp
inc
mov
retf
shl
bound
data16
inc
aad
push
pop
mov
dec
je
scas
xor
fsubr
aad
mov
ss
pushf
lahf
mov
mov
test
xor
std
dec
xchg
or
jmp
push
mov
xor
js
sbb
mov
movs
aam
xchg
retf
xchg
loopne
sub
xchg
cmc
dec
pop
and
xor
not
pop
cmp
adc
loope
mov
arpl
in
mov
push
pop
outs
fild
dec
mov
xor
jecxz
cmc
mov
cwde
or
bound
sbb
call
movs
and
lds
(bad)
das
mov
lods
cmc
outs
rol
jne
dec
xor
clc
mov
hlt
loop
cmps
push
call
cmp
or
test
(bad)
or
add
test
mov
pop
mov
lahf
lahf
sub
cdq
call
xlat
jnp
ret
stos
sbb
xor
ret
dec
and
ret
pop
push
or
out
js
xor
and
outs
retf
mov
rcl
xchg
sbb
jbe
into
aaa
xor
and
push
and
push
push
push
jae
push
aas
fwait
push
sub
and
push
fs
repz
lods
add
idiv
cmp
inc
mov
lock
fnstcw
cwde
adc
mov
mov
popf
ret
shl
cld
mov
dec
(bad)
pop
sub
xor
hlt
mov
adc
pushf
cdq
xlat
outs
addr16
call
xor
cmc
popf
stc
push
mov
les
repz
mov
mov
sahf
pusha
push
sar
mov
sbb
je
sub
adc
xor
das
ins
bound
mov
xor
rcl
enter
cwde
mov
push
arpl
push
je
and
outs
mov
push
mov
xlat
sub
hlt
cmp
xor
pop
push
scas
sub
ret
dec
aaa
stos
iret
outs
in
mov
ret
xor
cmp
xchg
mov
in
push
fsubr
in
mov
ficom
lods
push
push
cmp
add
pop
or
push
repz
xor
jl
and
add
adc
cmc
rcl
popa
repnz
(bad)
int
sbb
jg
aad
popf
outs
or
aam
mov
jle
lods
std
inc
in
pushf
movs
mov
jge
mov
mov
and
clc
or
mov
push
adc
or
adc
shl
rcl
and
xchg
pop
test
test
cmc
xor
xchg
xchg
sbb
fcmovnb
cmp
lods
not
cdq
mov
(bad)
cmp
add
pop
xchg
outs
sub
xchg
xchg
scas
mov
loope
and
(bad)
push
ret
aad
xor
gs
gs
pop
sbb
leave
xchg
cmp
push
dec
xor
adc
mov
nop
sbb
sbb
dec
mov
and
mov
out
cmps
popa
xchg
cwde
imul
xor
inc
js
pop
jo
jbe
xchg
mov
and
fst
cmp
lock
or
jl
movs
inc
sub
xor
imul
test
adc
xor
(bad)
push
push
or
push
aad
imul
out
(bad)
pop
hlt
jno
inc
jb
je
stc
mov
int3
jbe
repz
(bad)
adc
jne
sub
mov
and
sub
mov
aad
pop
cmp
ds
lds
test
les
fcmovb
rcr
div
(bad)
xchg
nop
popa
sub
movs
(bad)
mov
pop
pusha
test
data16
mov
shr
jbe
fistp
push
fldenv
cmps
call
mov
retf
push
in
pusha
and
lods
(bad)
push
dec
xlat
xor
or
sbb
xor
xchg
jecxz
into
loop
jae
dec
imul
push
test
sub
pop
data16
sub
icebp
shl
jnp
test
ret
lods
hlt
popf
mov
mov
je
xor
mov
fcom
(bad)
cmp
mov
xchg
jnp
push
xor
dec
xrstors
xor
icebp
jns
outs
mov
test
pop
stos
push
add
sbb
or
mov
idiv
dec
lods
in
dec
xor
outs
pop
repz
ss
or
pop
aad
into
pop
and
daa
mov
ja
popa
xsavec
add
gs
jne
push
mov
mov
das
ins
inc
xor
aad
push
add
out
shl
push
ins
sbb
dec
(bad)
outs
rcl
mov
jae
(bad)
xchg
xchg
retf
(bad)
cmp
in
(bad)
mov
push
or
aaa
dec
rol
dec
and
(bad)
cmp
push
dec
inc
mov
pop
and
inc
jp
sub
adc
sub
and
repz
mov
and
dec
ret
popf
xor
aad
test
lds
lods
mov
arpl
xor
imul
push
fdivr
xor
jg
retf
retf
push
in
les
dec
scas
fwait
lds
(bad)
push
and
mov
mov
clc
pop
pop
rol
fsubr
mov
mov
add
fldenv
pop
in
cbw
push
push
inc
mov
sub
xchg
(bad)
clc
ins
aas
xchg
ins
imul
aam
mov
cli
push
jecxz
mov
jmp
inc
cmp
sbb
mov
sbb
adc
push
xor
mov
and
cmp
pop
and
test
jge
dec
in
sbb
pop
mov
cmp
mov
in
sbb
fst
mov
loop
or
and
movs
mov
daa
out
mov
repz
pop
aas
mov
outs
mov
jae
jns
dec
pop
pop
cmp
hlt
mov
mov
xor
out
xchg
fistp
ret
lahf
and
mov
cwde
fisttp
icebp
clc
sbb
sub
loop
xor
push
mov
int
test
cmps
aas
sar
ds
sbb
in
push
push
pop
(bad)
stos
add
loopne
inc
je
in
cmp
adc
clc
bound
pop
repnz
mov
call
mov
aad
fcomi
hlt
jae
test
(bad)
aas
int
push
retw
mov
outs
sub
jnp
mov
ret
into
stc
pushf
icebp
cld
mov
sbb
mov
xchg
xlat
arpl
mov
retf
and
jmp
std
aas
or
lods
out
cmp
iret
clc
push
fnstsw
cmp
stos
inc
(bad)
sbb
dec
mov
sbb
sahf
retf
(bad)
pop
dec
aaa
loop
sbb
push
out
int
pop
push
cs
xor
je
stos
push
out
stos
(bad)
jnp
push
pusha
push
jne
xor
rcr
dec
retf
jae
xchg
push
cli
(bad)
fnstsw
cdq
and
sub
xchg
sbb
or
add
sub
loope
loopne
fxch
inc
sub
mov
adc
cmp
stos
mov
bound
fs
aad
jne
cmc
(bad)
inc
xchg
test
adc
call
xchg
test
icebp
jp
scas
mov
inc
mov
xor
clc
retf
pop
push
fwait
xchg
inc
lock
jle
mov
mov
inc
add
popa
das
xchg
sbb
stos
dec
jg
lahf
daa
sub
int3
retf
mov
ja
xchg
cld
ins
lods
(bad)
aam
dec
dec
iret
loopne
inc
ja
popf
xor
ret
loope
jmp
add
jecxz
int3
jecxz
jp
push
xor
xor
mov
push
ret
pop
retf
cmp
inc
stos
adc
mov
xor
shr
jno
xor
jmp
jno
fld
clc
add
cmp
lods
(bad)
mov
div
dec
dec
and
cdq
adc
cld
mov
push
jbe
fiadd
jp
sbb
test
push
sbb
test
inc
not
pusha
imul
xchg
mov
ja
mov
mov
cmp
cmp
(bad)
xchg
mov
mov
enter
int
into
loopne
je
(bad)
repz
push
dec
fdivr
fcmovb
adc
sbb
jo
mov
call
aaa
leave
fild
or
jmp
ror
xchg
lds
out
jg
iret
xchg
call
cmp
or
dec
xlat
inc
xchg
push
in
sti
dec
test
out
fld
fisub
imul
je
push
pusha
imul
and
cmp
movs
iret
aas
cmps
jb
cmp
xchg
icebp
cmp
stos
or
dec
scas
loop
xchg
mov
imul
sub
add
mov
dec
jnp
sub
imul
xor
inc
and
loope
data16
mov
pop
pop
xchg
add
adc
jbe
imul
sti
sub
jns
into
mov
mov
mov
rcr
fild
xchg
cmps
jmp
cmps
jl
fcmove
sbb
in
cmp
fadd
addr16
(bad)
out
das
jmp
push
mov
jae
jge
xor
mov
push
xor
in
xchg
ror
ficom
mov
dec
aad
popf
jle
shl
inc
inc
jbe
rcr
aad
mov
mov
sahf
js
sub
inc
cmp
(bad)
fs
mov
xor
aaa
pushf
loopne
push
jp
fidivr
mov
ret
mov
movs
cmp
fst
xor
ins
or
xor
in
mov
int
mov
mov
push
push
daa
lods
mov
ss
push
push
out
sub
mov
dec
adc
(bad)
jo
loop
fucomip
push
aas
mov
adc
cmp
loope
push
jmp
dec
xchg
pop
dec
out
sbb
aaa
mov
mov
in
pop
mov
xor
xor
pop
les
outs
sbb
retf
mov
dec
or
addr16
push
sbb
or
call
cmp
or
jmp
and
imul
aam
push
push
cli
add
mov
xchg
repz
cmps
adc
pop
(bad)
aad
push
or
mov
inc
mov
loop
mov
das
jno
inc
inc
mov
test
or
mov
mov
inc
rol
sbb
pop
xchg
enter
sbb
xchg
test
in
add
mov
sti
jmp
stos
sub
jne
or
and
dec
sub
jmp
and
mov
pop
jb
fmul
out
sub
pop
test
repz
cmp
cdq
pop
sub
mov
jl
mov
(bad)
jp
ins
xchg
aas
and
or
inc
jo
daa
jge
cmps
jnp
test
ins
mov
call
push
sbb
mov
mov
inc
cmp
sbb
(bad)
cs
cmc
push
ficomp
fild
push
cmc
and
ins
pop
(bad)
fld
and
inc
fs
jnp
lock
cwde
add
xor
scas
pop
sar
sbb
pop
sub
add
popf
shr
ss
fadd
jnp
jp
bound
dec
(bad)
fistp
in
mov
inc
aam
repnz
call
or
call
pop
pop
and
inc
cwde
or
adc
add
mov
mov
add
cmps
jg
jno
not
mov
mov
sub
imul
jp
mov
ja
jae
xor
sub
dec
jnp
xor
mov
add
sbb
mov
mov
jmp
std
sub
jnp
xor
or
cmp
dec
adc
mov
add
outs
pushf
loopne
jns
mov
dec
std
sub
sub
stos
aas
aad
loopne
cwde
pushf
sub
ja
retf
xor
cmc
ins
adc
jl
inc
cmc
stos
cmp
mov
(bad)
shr
in
jae
hlt
call
jle
out
retf
jno
outs
stos
cmps
or
lods
lock
clc
data16
ficomp
push
lods
into
gs
and
push
jbe
mov
mov
jno
xchg
jae
test
cwde
stos
daa
movs
and
or
or
adc
jae
std
mov
add
mov
fld
xchg
xlat
ds
into
adc
mov
pop
nop
scas
ds
pop
enter
and
mov
rcr
or
mov
lea
push
lods
mov
mov
imul
dec
popf
icebp
fdivr
das
mov
mov
and
lds
daa
imul
mov
movs
xor
add
sbb
jo
cs
dec
jmp
cmp
push
push
xor
sbb
push
not
int3
jl
in
ja
fadd
in
sub
lea
ret
and
mov
jbe
out
lea
mov
mov
mov
int3
cmp
enter
imul
sbb
rcr
mov
ret
mov
icebp
fwait
sub
cwde
out
(bad)
dec
push
cmp
add
push
or
cmp
call
int
call
mov
jge
dec
xchg
add
mov
shr
push
cs
je
jge
adc
pop
rol
jns
stc
out
and
sub
dec
lahf
pop
mov
mov
sub
jge
fistp
enter
inc
jo
adc
and
fs
dec
add
jp
jb
push
push
dec
iret
stos
movs
stc
and
xor
adc
mov
sub
inc
mov
pop
out
sub
movs
into
fidivr
mov
sbb
dec
pop
call
das
stos
pop
iret
push
xadd
stos
movs
cs
pop
ror
call
mov
das
mov
and
cmc
and
pop
mov
int
sti
pop
or
ret
loope
mov
sahf
frstpm(287
mov
std
movs
xor
mov
push
mov
ss
pop
clc
repnz
cld
out
mov
outs
and
mov
push
or
out
vunpckhpd
pop
cmc
aaa
es
cmps
or
retf
cmp
jne
xchg
ins
pop
(bad)
(bad)
outs
xchg
(bad)
mov
jg
pop
jmp
or
sbb
adc
inc
pop
dec
sar
push
mov
mov
mov
or
mov
xor
pop
lds
pop
gs
retf
dec
data16
cli
xor
mov
das
dec
adc
adc
push
pop
push
daa
adc
ret
sub
jle
jae
inc
sub
pusha
loop
push
dec
push
mov
mov
inc
fdiv
cmp
out
jnp
loop
popf
fldcw
stos
aam
jae
dec
add
or
xchg
lock
xchg
pop
sub
cmp
icebp
shl
bound
cdq
hlt
rcr
popf
jae
outs
push
sbb
jp
pop
pop
jns
push
aad
mul
sub
add
xchg
mov
pop
fsubr
jno
ins
loope
or
sub
jmp
ficom
int
fwait
xor
cmp
rcr
dec
inc
rcl
scas
(bad)
jmp
ins
inc
xor
pushf
data16
movs
das
pusha
nop
push
cli
cmc
test
add
dec
stos
cmp
mov
les
fistp
cwde
mov
into
sbb
cwde
mov
cwde
cmp
pop
or
and
fwait
stos
es
sti
in
mov
sub
and
ficomp
mov
lahf
pop
loope
cmc
jo
jnp
pop
push
add
add
inc
test
icebp
mov
inc
xor
in
scas
imul
mov
cmp
cmp
xchg
hlt
adc
mov
nop
sub
jl
aaa
pop
xor
xor
or
call
dec
and
test
jo
jno
dec
ds
cmp
sbb
jge
and
dec
aam
or
jnp
aad
popa
lock
leave
add
(bad)
jmp
das
cwde
jb
data16
or
jl
cmp
inc
jg
lock
cmp
sbb
xchg
test
mov
stos
ja
dec
push
and
sub
in
mov
mov
mov
retf
mov
mov
dec
cmps
(bad)
test
fisttp
retf
movs
int3
ret
ins
dec
inc
push
add
mov
xor
aas
outs
cmp
leave
and
xchg
iret
(bad)
fsub
push
and
cmp
pop
push
mov
movs
retf
out
add
jmp
jp
pop
mov
mov
mov
dec
dec
sar
mov
iret
mov
mov
pop
mov
jg
dec
push
fwait
test
push
loop
(bad)
in
ror
sbb
or
ror
or
es
xor
aam
dec
push
nop
fcmovnbe
pop
pushf
retf
lods
stos
mov
jmp
ds
jb
jge
int
sbb
adc
push
inc
and
mov
inc
fdivr
inc
pop
push
rcr
fld
xchg
add
ror
pop
test
fisttp
adc
lds
xchg
lods
pop
and
outs
popa
pop
jle
arpl
and
inc
xor
pop
(bad)
dec
inc
call
jecxz
jmp
sbb
pop
push
mov
loop
call
cmp
mov
sub
int3
gs
adc
dec
out
mov
icebp
push
scas
das
(bad)
(bad)
outs
sbb
shl
inc
test
xor
lods
add
sbb
xchg
xor
jmp
dec
jne
les
loop
jbe
fbstp
xchg
jae
adc
add
xchg
jns
and
lods
xchg
mov
pop
sbb
aad
xchg
pushf
xchg
ret
sub
(bad)
dec
ins
xor
jl
jg
sbb
push
or
sti
enter
aad
add
inc
test
enter
aaa
ins
xor
(bad)
(bad)
stos
scas
pop
push
push
cmps
popa
mov
test
aad
or
dec
or
cdq
fistp
xor
scas
pop
fst
add
cmc
movs
and
ins
push
mov
fidivr
lds
test
int
fcmovu
and
add
and
hlt
(bad)
or
jle
xor
(bad)
and
lods
push
xor
push
cmps
mov
mov
or
inc
out
or
xchg
fdiv
or
in
inc
inc
inc
ins
lods
push
rcr
jmp
arpl
xchg
ins
mov
pop
pop
lea
add
xchg
in
movs
imul
lock
add
pop
loopne
add
sbb
or
inc
cmp
mov
test
mov
cmp
cmps
cmp
push
je
fsubr
gs
and
clts
cs
sbb
std
mov
jmp
cs
dec
(bad)
push
push
inc
sahf
dec
outs
jns
rcr
lock
dec
addr16
xchg
push
push
out
int
test
jecxz
cld
pop
mov
jmp
xchg
rcr
outs
dec
xlat
or
repz
clc
cwde
push
sub
mov
or
aas
fsubr
ds
out
or
inc
(bad)
js
and
mov
nop
imul
jb
jae
lea
ret
sub
dec
push
and
pop
mov
dec
ja
and
dec
mov
mov
hlt
fwait
cmp
les
aaa
jbe
cmp
add
lahf
xor
inc
pop
sar
mov
xor
cmp
sbb
mov
inc
pop
imul
xor
in
jg
adc
sub
stos
or
push
inc
inc
cmp
push
ror
mov
mov
lods
xchg
jge
(bad)
xor
std
mul
cdq
pop
movs
cmp
fadd
dec
in
sti
mov
inc
aas
lock
leave
jbe
cmp
cmps
repnz
xchg
push
cmp
(bad)
int
xchg
call
xchg
addr16
cld
jmp
xor
inc
clc
mov
icebp
out
push
inc
stc
adc
xchg
les
or
inc
cs
cwde
fst
mov
cmp
jp
or
fnsave
adc
dec
fimul
xor
pop
sub
xchg
repnz
add
repz
iret
mov
sub
mov
sub
mov
lock
push
push
movs
loope
out
xchg
(bad)
lds
sub
push
fmul
push
cdq
sbb
stos
and
add
rol
sbb
aam
dec
sbb
fimul
in
imul
jg
clc
dec
retf
data16
mov
sub
mov
sub
in
test
inc
aad
cdq
cmp
test
icebp
push
cs
push
jno
movs
mov
sub
xchg
dec
cmps
in
popf
das
pop
or
cwde
cmp
pop
shl
(bad)
xchg
or
jp
and
xor
jb
mov
xor
rcl
inc
cwde
out
mov
mov
or
cmp
imul
stc
lds
pop
mov
mov
dec
leave
xor
retf
mov
xchg
adc
pop
out
and
add
test
jne
and
sbb
frstor
jbe
dec
mov
or
out
xor
inc
clc
lds
jp
xchg
inc
jge
test
out
push
mov
dec
movs
xchg
retf
pop
js
movs
xor
data16
add
xlat
out
and
push
imul
into
xchg
inc
xchg
iret
pusha
xchg
push
out
mov
fiadd
pop
mov
mov
sar
push
gs
je
loope
mov
add
adc
dec
jle
sub
fsub
adc
mov
mov
push
in
daa
out
add
xchg
or
retf
lods
pop
loope
push
sbb
(bad)
or
outs
mov
jge
pop
push
test
xchg
push
xlat
bound
cmp
xor
into
imul
mov
sub
test
xor
lods
and
sbb
fld
jnp
pop
je
mov
pop
in
sbb
sti
retf
jo
rcl
and
daa
dec
push
(bad)
retf
cmc
dec
adc
outs
pop
div
dec
sub
mov
mov
jae
ds
push
cmps
mov
aaa
dec
fwait
stos
(bad)
mov
(bad)
mov
cmp
and
sar
mov
mov
out
popf
xchg
fwait
sbb
int3
aas
shr
or
mov
inc
test
repnz
xor
das
jnp
dec
mov
jne
pop
cli
push
mov
jne
pop
push
and
inc
daa
(bad)
sbb
push
iret
dec
std
xchg
ret
rcr
loopne
adc
cmp
cmp
adc
jb
sbb
hlt
test
retf
xlat
add
xor
jecxz
or
push
mov
jp
jns
(bad)
xlat
popf
mov
sbb
adc
addr16
adc
ret
rol
pop
sbb
fisttp
jb
imul
adc
jmp
jmp
into
popf
cdq
pop
and
push
mov
jmp
xlat
mov
imul
jmp
push
loopne
mov
mov
sbb
mov
bt
pop
lea
loop
cwde
out
pusha
sbb
xchg
mov
fistp
dec
or
adc
stos
cli
xor
mov
pop
sub
jns
fwait
test
retf
int3
loope
dec
lods
cmp
enter
fadd
and
daa
ret
push
mov
pop
leave
push
xchg
push
std
or
add
push
mov
xlat
fwait
pop
leave
(bad)
sbb
pop
adc
or
or
mov
jge
test
cmp
test
call
lea
pop
lahf
aad
push
icebp
ins
nop
popa
dec
add
(bad)
jmp
adc
inc
jbe
dec
outs
dec
push
out
push
inc
not
and
dec
xchg
adc
(bad)
mov
mov
sbb
shl
mov
mov
push
and
dec
mov
inc
mov
cmp
scas
mov
fidiv
out
mov
lds
or
mov
jo
pop
adc
(bad)
loop
push
mov
fnstenv
inc
lods
jmp
lea
mov
lahf
fstp
add
mov
sub
adc
jbe
mov
push
jo
(bad)
jae
xor
lods
pop
push
mov
mov
das
arpl
pusha
ror
jp
pop
pop
mov
push
pop
cmp
xlat
add
adc
mov
call
and
dec
sti
arpl
es
mov
and
inc
loop
sbb
dec
adc
add
mov
pop
mov
(bad)
mov
pop
xor
add
push
xor
je
sbb
push
icebp
or
or
retf
aas
cmps
aaa
nop
mov
jae
mov
ror
sbb
dec
addr16
jle
xor
xchg
or
lock
sub
jmp
push
xor
in
popf
push
out
xor
rcr
jmp
jne
cmp
icebp
adc
push
jno
push
(bad)
ret
rcl
and
fwait
xor
bound
mov
(bad)
(bad)
sbb
push
mov
push
xchg
adc
out
ds
movs
lock
sub
cmp
lahf
push
lock
std
movs
mov
aad
arpl
mov
cmp
cli
ret
imul
enter
cmps
dec
add
fnstenv
pop
ret
cs
add
xor
fcomp
fidiv
(bad)
fs
inc
xor
mov
xor
test
enter
add
adc
jmp
mov
sbb
fsubr
jb
loop
xchg
add
mov
stc
int3
pop
push
repz
add
pop
in
fcmovbe
rcl
aam
jbe
aad
int3
xchg
jl
out
jnp
fmul
mov
push
add
sub
leave
jmp
jmp
dec
jno
repnz
mov
jo
pop
and
jge
sar
(bad)
clc
xchg
mov
mov
cmc
or
push
add
ds
lock
push
push
(bad)
sbb
das
cmc
stc
jno
xor
fisttp
test
cli
adc
jo
(bad)
cmps
xchg
mov
mov
jnp
pop
xchg
imul
int3
std
cli
sbb
rol
scas
xor
dec
sub
js
pop
sar
das
jmp
mov
and
pop
(bad)
xor
xchg
cmp
movs
ficom
or
retf
je
xlat
and
inc
loop
jo
mov
fwait
jbe
lods
cld
xchg
pop
xor
mov
pop
fst
fucomi
adc
dec
adc
lea
iret
sbb
ins
mov
sbb
fcmovnu
lods
add
sub
add
enter
dec
hlt
mov
out
test
jecxz
outs
push
dec
dec
retf
(bad)
fbstp
data16
inc
sbb
(bad)
into
xchg
push
lods
inc
or
mov
arpl
in
aaa
cs
cmp
cld
pop
or
hlt
dec
push
mov
cmp
movs
scas
stos
call
cmp
enter
and
xchg
push
mov
xchg
cmps
lds
jo
and
stos
cmp
fld
dec
call
rol
(bad)
mov
mov
out
int
add
mov
aas
mov
push
ret
and
push
cmp
bound
push
jnp
mov
dec
das
jnp
and
inc
jmp
test
aaa
push
test
btc
or
xchg
xor
test
ins
xchg
cli
pop
outs
jmp
aam
out
pop
xor
add
mov
mov
mov
sub
push
inc
sub
pusha
push
int
aam
sbb
aam
cld
mov
xchg
out
es
cmp
ret
arpl
mov
sub
test
es
mov
mov
invd
sahf
cmp
rcr
mov
xchg
jecxz
pop
retf
dec
pusha
loop
(bad)
xor
adc
mov
inc
mov
mov
out
jg
sub
daa
xor
push
cmp
mov
mov
je
leave
shl
pop
out
mov
cs
mov
call
and
(bad)
aam
enter
cmp
add
out
sbb
loope
sbb
pop
adc
fsubr
and
retf
dec
fdiv
add
xchg
adc
outs
mov
js
jge
pop
loop
scas
sbb
popf
test
test
push
xor
xor
adc
pop
dec
aam
dec
mov
cmps
and
int3
idiv
fwait
inc
push
in
inc
push
je
fwait
clc
clc
fs
xchg
ror
loop
xchg
(bad)
or
pop
cld
inc
mov
and
lods
lds
cmps
data16
fistp
mov
jnp
test
push
scas
add
add
rcr
adc
xchg
mov
xlat
movs
mov
adc
mov
mov
cmc
xor
dec
movs
dec
push
rol
pop
cmp
add
pop
or
loopne
mov
push
pop
adc
cmps
mov
xor
xchg
pusha
fdivr
xor
dec
jg
jl
lock
fistp
jg
xor
sub
mov
hlt
and
cli
jbe
imul
pop
iret
fimul
xor
jno
mov
addr16
xchg
sti
jle
xor
test
popf
fcomp
lds
lahf
pop
xor
push
xchg
enter
mov
jp
sbb
fs
sbb
sbb
add
fstp
xor
sbb
add
test
in
fwait
push
enter
ss
xchg
mov
mov
sbb
pusha
xor
ds
test
jno
mov
mov
popa
fdiv
push
fs
pop
shl
ins
jp
cmp
push
jecxz
sahf
cli
call
sub
dec
pop
pop
ss
sbb
rcr
push
je
mov
dec
sbb
aas
fisubr
(bad)
shl
adc
dec
mov
jbe
jns
je
(bad)
aad
arpl
pop
xchg
cmps
jge
jb
fs
shl
shl
call
inc
inc
test
iret
pop
into
jae
lock
dec
inc
mov
inc
pushf
leave
cmps
sbb
sbb
or
sub
jno
scas
lods
setl
mov
stos
out
and
jno
jno
fcmovnb
aad
outs
xchg
adc
or
iret
in
mov
nop
jge
xchg
sub
ss
jo
rcr
int
clc
into
les
sbb
push
shl
(bad)
and
mov
mov
aaa
stos
stos
stos
xchg
scas
mov
mov
js
movs
mov
(bad)
aam
lods
jge
outs
push
sub
mov
xchg
pop
inc
into
shl
mov
sub
dec
arpl
aad
(bad)
xor
mov
fist
pop
push
sub
dec
mov
call
cmp
add
push
ds
inc
pusha
pop
inc
adc
adc
xor
mov
cmc
add
aas
cwde
jmp
(bad)
js
ins
mov
popf
and
push
cwde
outs
add
jb
outs
xor
mov
leave
pop
dec
dec
xchg
pop
pop
xlat
sub
cmc
enter
or
jl
lds
data16
popa
dec
xlat
xchg
xchg
fwait
mov
xor
sub
ret
movs
and
inc
pop
fistp
in
cmp
aaa
bound
pop
dec
pusha
mov
in
adc
add
mov
cli
(bad)
add
add
retf
xor
out
nop
jb
dec
gs
test
mov
ss
pop
ret
jp
cld
dec
pop
inc
push
scas
call
xor
and
movs
add
adc
sbb
push
(bad)
stc
in
cmp
mov
sub
(bad)
daa
sahf
add
lock
call
hlt
loopne
out
popf
xchg
ret
les
xchg
xor
inc
xchg
fdiv
loop
jmp
je
daa
lds
add
loopne
xor
inc
push
pop
or
sub
out
adc
mov
inc
push
not
or
(bad)
push
stos
ja
stc
or
add
xor
fidivr
add
push
out
push
rcl
jmp
dec
cmps
(bad)
(bad)
mov
scas
mov
and
aaa
nop
in
sub
aas
pop
fild
les
adc
jmp
jne
sbb
and
ins
jb
add
or
sbb
mov
pop
cmp
and
hlt
(bad)
mov
and
aam
scas
xor
test
retf
fldcw
iret
test
sub
jb
adc
xchg
fwait
cwde
mov
jne
js
pusha
into
jge
adc
mov
addr16
daa
shl
cmp
pop
cmps
inc
cli
adc
mov
jns
dec
push
addr16
xchg
cld
xlat
cmc
mov
repnz
jle
jne
sub
xchg
inc
mov
xchg
retf
mov
jecxz
imul
mov
xchg
fwait
retf
adc
inc
cmp
js
sub
sbb
cmps
mov
sbb
fld
xchg
jmp
fwait
pop
repnz
repnz
jne
ds
sbb
xchg
add
mov
je
xchg
loope
(bad)
or
daa
or
out
fs
dec
jecxz
xlat
adc
scas
lahf
xchg
sbb
lea
pop
int
jne
ja
stos
jecxz
push
out
sahf
mov
add
repnz
mov
in
xchg
hlt
mov
xor
mov
xor
mov
daa
shl
mov
push
xchg
and
cdq
(bad)
neg
and
in
and
lea
jecxz
mov
fild
lock
xchg
sbb
xchg
daa
test
stc
mov
call
fldcw
cmp
dec
js
sbb
xchg
dec
dec
xchg
cmp
mov
mov
pop
int3
stos
(bad)
adc
retf
xchg
into
sbb
inc
pop
movs
jg
cmps
hlt
mov
xor
push
mov
sti
pushf
lods
mov
jle
xor
(bad)
xor
(bad)
pop
push
mov
and
sbb
sbb
mov
mov
cmp
or
mov
stos
push
inc
ret
sub
pop
cmps
(bad)
js
call
cmps
push
mov
xor
push
adc
imul
in
or
sub
fcmovnb
dec
jns
aas
mov
dec
out
(bad)
mov
das
xchg
ds
imul
xchg
ja
xchg
and
repz
in
lea
dec
sub
aam
and
aaa
jl
call
sti
sub
xlat
sar
repnz
scas
mov
mov
add
movs
aaa
test
adc
shl
jp
sub
mov
test
mov
scas
or
iret
fsub
add
inc
hlt
mov
sbb
mov
sub
cmp
ficom
cmp
retf
loopne
and
fs
xor
into
dec
mov
xchg
cmp
add
add
jb
clc
test
pop
pop
and
int3
push
pop
arpl
cmps
pop
and
pop
mov
mov
xor
adc
mov
stos
ret
out
or
pushf
jecxz
add
jecxz
dec
xor
neg
ret
mov
sti
cmp
and
imul
pop
mov
mov
adc
mov
clc
and
pop
xor
test
xor
dec
imul
fmul
mov
dec
mov
adc
imul
js
sub
inc
(bad)
xor
adc
rcl
pop
loop
adc
mov
or
mov
push
mov
loop
or
and
les
call
cmp
mov
pop
fldenv
lods
(bad)
pop
ss
dec
xchg
loope
je
shr
jl
(bad)
arpl
pop
inc
pushf
in
dec
mov
jl
xchg
cmp
pop
call
retf
(bad)
sub
enter
mov
loop
enter
pop
inc
or
inc
jbe
xchg
cvtps2pd
loopne
jmp
pop
adc
push
fidivr
fst
stos
cld
sar
test
repz
inc
mov
mov
add
dec
inc
mov
mov
ins
ds
push
sub
aam
push
(bad)
call
xchg
jmp
adc
bound
and
cmp
mov
and
imul
fstp
jg
push
cmp
xor
(bad)
mov
or
retf
or
not
retf
cld
mov
pushf
lahf
xchg
and
test
inc
fcmovne
pusha
pop
xchg
and
imul
push
fisttp
xchg
cmp
mov
mov
es
test
div
inc
inc
mov
call
xlat
outs
mov
cmp
shr
retf
retf
pop
xlat
mov
and
mov
jnp
ficom
(bad)
popa
das
ins
in
dec
shl
stos
bound
push
mov
(bad)
push
sbb
movs
fsub
dec
in
loopne
repz
or
retf
test
jg
mov
and
xchg
mov
inc
(bad)
loopne
xor
dec
icebp
jmp
arpl
dec
inc
mov
rcl
push
sub
mov
jmp
sbb
or
enter
addr16
mov
pop
push
movs
inc
enter
lods
sub
pop
push
lods
mov
push
mov
push
ret
or
xchg
fstp
loopne
jg
jae
or
lahf
into
xchg
inc
je
push
out
push
cwde
pop
mov
mov
inc
xchg
hlt
xor
cld
mov
and
in
add
call
out
xchg
pop
ins
push
cmp
sahf
cs
test
push
pop
push
jmp
mov
jmp
jae
fiadd
jnp
out
push
xchg
es
popf
mov
jnp
pop
adc
mov
shl
and
sbb
push
adc
cs
lods
cwde
inc
jns
ss
adc
retf
es
xchg
dec
add
add
out
outs
sbb
push
sti
stos
stos
ja
cld
in
xor
aam
mov
cmp
and
dec
xchg
mov
fild
and
push
pushf
jmp
scas
pop
mov
dec
jmp
add
ficom
mov
xchg
xor
shl
mov
int3
adc
inc
add
mov
or
test
adc
sbb
xor
mov
out
cdq
push
mov
sahf
movs
mov
clc
adc
pushf
or
js
enter
dec
sbb
adc
hlt
fldcw
mov
push
pop
aaa
test
frstor
sbb
gs
shr
inc
mov
sub
test
sar
dec
icebp
in
push
inc
(bad)
or
shl
jae
xchg
xchg
(bad)
fst
jle
jecxz
mov
inc
xchg
ror
pop
sbb
sbb
clc
je
jmp
pop
sub
out
cmps
out
or
call
scas
adc
push
mov
mov
retf
jl
adc
(bad)
mov
movs
imul
shl
sbb
cmp
or
fiadd
push
cmp
xchg
cmps
cwde
retf
lahf
clc
retf
cmp
loopne
cmc
adc
jle
in
movs
das
adc
inc
cdq
cli
ss
inc
sub
jl
cs
pop
stos
or
out
mov
push
ja
add
cmp
inc
sti
inc
sbb
ja
mov
add
inc
les
fadd
pop
jg
imul
mov
arpl
cmp
xor
xor
js
sbb
xor
loope
out
sub
movs
ins
cmp
js
lods
inc
lds
dec
push
jns
inc
inc
cmp
pop
in
gs
jno
retf
jmp
xchg
sti
mov
mov
imul
outs
push
mov
imul
pop
pop
mov
push
adc
xor
or
iret
mov
mov
dec
nop
int3
aad
icebp
clc
push
pop
ror
xor
mov
mov
(bad)
fld
or
ret
push
adc
rep
mov
mov
and
inc
imul
retf
mov
out
out
pop
inc
adc
sub
int
inc
hlt
dec
sbb
out
in
sbb
jb
pushf
psubb
in
sbb
lods
mov
in
fisubr
or
gs
das
sbb
add
mov
inc
dec
inc
test
(bad)
xchg
mov
ror
xor
out
lods
mov
pop
sbb
pop
aaa
mov
in
xchg
mov
jae
fs
mov
repz
(bad)
leave
dec
sbb
or
outs
fdiv
adc
scas
outs
outs
in
xchg
add
cmp
mov
int
mov
dec
(bad)
lods
imul
xor
inc
and
lods
xor
mov
xlat
pcmpgtd
or
mov
or
push
loop
cmps
push
dec
jo
fisttp
xchg
jge
mov
jb
sahf
jno
repz
sub
(bad)
inc
jnp
fidivr
into
daa
inc
test
and
xor
pop
push
dec
mov
pop
fsubr
and
jae
popa
jl
cmp
inc
arpl
daa
sbb
(bad)
xchg
or
movs
movs
jns
add
sti
test
sub
push
jmp
mov
push
sub
mov
(bad)
loop
das
inc
and
jmp
cmp
xchg
loopne
nop
popf
jo
arpl
adc
pop
sub
retf
fs
sbb
(bad)
adc
mov
sub
sub
clc
adc
jae
push
mov
add
inc
mov
in
adc
push
cli
xor
sbb
jmp
(bad)
jns
dec
xor
or
ret
fs
ror
pop
aam
stc
mov
test
mov
push
stc
rcr
iret
xor
adc
jbe
stos
xchg
and
ret
cs
mov
gs
aad
mov
in
dec
add
test
jl
inc
in
add
clc
ret
sub
mov
xor
inc
and
jle
mov
mov
cs
scas
mov
and
data16
loopne
shl
push
rcr
cwde
(bad)
jae
xchg
mov
clc
retf
mov
in
inc
add
pop
scas
pop
xchg
cmc
sub
adc
dec
mov
or
xor
pusha
xchg
ficom
jae
inc
sub
cmp
ds
test
sbb
popf
xchg
outs
xor
test
stos
mov
cmps
cmp
push
jge
retf
addr16
mov
scas
ror
jg
pusha
xor
add
add
jo
pushf
call
cmp
in
mov
inc
mov
dec
mov
daa
js
sbb
int3
cmc
mov
addr16
xchg
in
mov
xchg
push
sbb
mov
inc
sub
dec
ror
jl
je
jne
mov
dec
push
jno
sub
mov
pop
bound
call
mov
xor
add
jns
mov
push
es
loopne
mov
test
sub
pop
add
test
jmp
rol
(bad)
cmp
ror
mov
(bad)
pop
mov
xchg
pop
fsubr
fild
out
data16
call
xor
and
in
push
mov
daa
bound
daa
mov
xor
scas
ret
or
mov
jb
lahf
sub
mov
sbb
mov
loop
jbe
aaa
mov
out
jle
jae
fwait
leave
aam
mov
addr16
enter
sub
cmovs
shl
fcomp
fst
cdq
jle
mov
ret
cli
sahf
and
cmc
sub
jo
repz
call
lods
mov
movs
mov
sub
cdq
in
sbb
les
sbb
and
add
mov
dec
call
movs
add
jecxz
jmp
test
lods
jno
aad
dec
ins
addr16
and
sub
mov
lea
scas
sub
cmp
inc
mov
xor
adc
mov
in
stos
dec
inc
jl
shr
in
jg
inc
pop
push
jle
inc
and
xchg
inc
(bad)
fmul
xchg
push
jmp
cmc
cld
mov
shl
add
rol
cmp
mov
neg
pop
push
rcr
xor
sub
lods
and
and
int3
mov
aam
add
jae
addr16
inc
jns
jnp
out
jp
div
mov
mov
and
pushf
cmps
push
fdivrp
nop
lods
imul
sbb
xlat
popa
and
jae
rcr
inc
mov
(bad)
push
clc
lahf
(bad)
scas
jae
xor
xlat
imul
rcl
mov
mov
repz
jp
(bad)
mov
pop
pop
xchg
ds
push
stos
movs
ror
dec
mov
in
ficom
adc
jns
mov
pop
dec
iret
jae
leave
gs
mov
sbb
loopne
push
and
cmp
dec
push
add
(bad)
repz
fs
jb
jle
nop
sbb
inc
js
sub
test
ficomp
enter
mov
mov
sahf
xor
push
outs
xlat
mov
aas
rcr
or
and
pop
inc
dec
mov
std
mov
in
imul
aaa
(bad)
xor
xchg
push
xchg
mov
dec
pop
dec
xor
mov
xchg
xchg
xchg
or
pop
dec
popa
mov
ds
adc
int3
cmps
cmc
cmovne
mov
push
in
mov
inc
cmp
mov
repz
mov
in
pop
mov
sub
in
xchg
xchg
and
adc
mov
loopne
shl
ds
ins
fist
cmp
daa
cmp
sar
imul
xor
xchg
xchg
jae
sbb
hlt
fcomp
shl
popf
add
ins
cmp
sub
(bad)
icebp
mov
repnz
inc
addr16
and
(bad)
mov
mov
push
dec
movs
stos
jmp
dec
add
rol
jnp
jmp
stos
out
pop
out
ins
push
xchg
ins
call
in
xor
and
call
dec
fisubr
sbb
es
fs
dec
movs
leave
push
arpl
enter
mov
xor
loope
xchg
je
les
ja
xchg
pop
inc
adc
movlps
xor
fcomp
mov
mov
dec
jb
jb
mov
movs
test
mov
aaa
rcr
mov
int3
cmp
lds
in
dec
outs
dec
fimul
inc
fiadd
cmp
stos
or
jbe
cmp
cli
test
mov
inc
cmove
fcmovne
mov
jb
ins
inc
mov
pop
mov
leave
fild
scas
pop
aaa
mov
popa
mov
cmp
xor
pushf
jo
sbb
xor
jecxz
mov
pop
ret
sti
ret
adc
movs
xor
dec
aas
adc
mul
mov
jle
icebp
mov
mov
dec
adc
xchg
xchg
hlt
fwait
mov
mov
mov
mov
xor
adc
mov
outs
or
movs
mov
adc
hlt
imul
fistp
retf
add
pop
xor
aas
push
cmp
mov
push
enter
ret
inc
fdivr
pushf
lods
xchg
jecxz
hlt
xor
(bad)
sub
jg
outs
sbb
adc
cli
inc
ds
mov
jg
and
push
loope
jp
pop
pop
or
and
arpl
ret
jns
push
gs
xchg
and
mov
ins
addr16
pop
iret
retf
and
xchg
pop
sub
xor
movs
clc
inc
mov
pusha
(bad)
ficom
retf
push
cmp
call
jl
js
or
or
sbb
popf
fst
and
fcom
add
aad
inc
xchg
mov
mov
pop
and
iret
push
clc
and
or
jmp
mov
es
sub
xor
loop
out
pop
test
lock
outs
or
rcr
xor
mov
loopne
outs
sbb
fidivr
xchg
dec
cmp
xor
mov
repz
add
mov
sub
jmp
out
sub
mov
pop
pop
jecxz
and
adc
cwde
mov
fldcw
in
or
add
enter
pop
xor
(bad)
cmp
add
pop
rcl
enter
(bad)
pop
loope
daa
std
adc
pushf
xor
cwde
(bad)
xlat
xor
inc
scas
mov
push
aad
or
movs
cmps
xor
(bad)
or
and
mov
sub
mov
pop
mov
pop
aas
ror
js
jbe
and
fsubrp
test
popa
sub
dec
jae
or
sub
pop
in
popf
xor
add
mov
cmp
pop
push
jecxz
neg
mov
jne
repz
xchg
sub
daa
retf
push
xchg
fdivr
ss
xchg
dec
mov
loop
mov
jo
inc
mov
inc
daa
out
add
js
mov
das
cmp
lods
inc
xchg
loopne
sbb
add
or
and
out
std
hlt
sub
push
xchg
aam
popa
imul
daa
scas
push
into
mov
popf
pop
mov
sbb
es
aad
cmp
and
in
sub
addr16
jmpw
jl
lds
mov
pusha
pop
mov
dec
jl
iret
dec
cmp
in
movs
sub
push
jle
jae
pop
out
jnp
out
dec
lock
repnz
xor
(bad)
ins
in
sub
repz
jo
jg
in
add
es
sar
fcomp
lock
pop
mov
das
jbe
pop
pusha
das
movs
dec
adc
mov
sub
add
adc
xor
mov
add
sar
sbb
scas
fisub
xchg
inc
inc
call
or
xor
movs
pop
add
sbb
add
sub
mov
test
test
sub
fwait
retf
in
in
cmps
mov
adc
sbb
cwde
enter
fs
or
pop
iret
into
hlt
add
out
push
and
(bad)
lods
fcom
ror
push
jge
call
sub
push
sbb
jne
xor
add
repz
xor
jmp
fdivr
repnz
cs
lods
ins
fidiv
lock
stos
add
mov
sbb
in
cld
fs
cmp
mov
int
jmp
mov
xchg
inc
out
xchg
pop
cmp
in
int
mov
outs
out
retf
pop
push
shr
dec
cmp
hlt
push
test
jnp
dec
das
call
lods
pop
lahf
or
dec
inc
es
into
mov
mov
(bad)
mov
jmp
mov
shl
cmp
div
mov
adc
outs
mov
ja
mov
mov
jmp
cmp
test
cmp
jp
push
sub
push
pop
into
aam
xchg
pop
adc
retf
repz
loope
or
ficomp
ds
mov
retf
and
dec
or
push
add
mov
lods
iret
adc
and
cs
and
shl
dec
xor
cwde
(bad)
xchg
std
test
(bad)
mov
addr16
jnp
pop
cmc
stos
cmps
mov
sbb
mov
adc
sbb
ins
lahf
inc
and
aam
inc
mov
inc
scas
popf
cwde
out
fcom
mov
dec
jg
(bad)
fmul
and
mov
daa
adc
inc
xchg
inc
not
lea
sub
push
cmp
out
leave
sti
ret
add
(bad)
mov
mov
ins
loopne
dec
pop
pop
ss
push
mov
stos
cmp
mov
cmp
mov
pop
mov
jp
dec
xchg
jb
xchg
and
inc
dec
cs
pop
sbb
sar
arpl
es
add
inc
jl
mov
dec
sbb
xchg
xchg
push
xchg
test
push
mov
push
ins
sub
scas
mov
(bad)
or
pop
lea
loop
xor
aaa
test
outs
mov
(bad)
mov
mov
xor
jmp
hlt
xor
test
rcr
mov
xchg
mov
out
ins
push
repz
popf
ror
sub
test
add
aas
cmp
xchg
push
mov
mov
push
push
xor
jmp
cmp
mov
jmp
inc
mov
cmp
pusha
je
and
jmp
into
xor
scas
arpl
xor
jge
push
imul
sbb
dec
(bad)
adc
out
fimul
cmp
dec
cmps
push
jne
xchg
repz
lods
push
sbb
jecxz
sub
rol
pop
pop
inc
inc
and
push
sub
das
xor
out
in
add
or
mov
xor
jp
stc
dec
adc
mov
in
xor
(bad)
inc
sbb
cmp
pop
inc
push
jl
adc
push
and
mov
mov
out
in
cmp
fimul
jmp
mov
ja
popa
loop
jnp
test
xor
cmp
mov
mov
fst
push
xor
xchg
cmp
xor
stc
mov
lahf
cmps
mov
cdq
mov
(bad)
or
mov
push
jg
(bad)
xor
or
sahf
dec
sbb
ss
ss
push
dec
mov
dec
xchg
int3
add
mov
jne
push
dec
inc
pop
xor
int
call
add
xor
and
inc
mov
pop
sar
pushf
sub
mov
in
ds
pop
jge
pop
sub
scas
movs
rcr
cmp
mov
rol
cmp
mov
pop
xchg
dec
into
outs
push
jp
or
ja
nop
push
mov
sbb
push
jmp
ins
popa
sar
movs
xchg
lds
jo
loope
clc
lea
cmp
inc
dec
movs
xchg
push
bound
out
cmc
mov
lods
ret
into
xlat
js
xchg
mov
cmc
push
ficom
or
jbe
retf
jno
jnp
outs
or
in
add
das
stos
ja
rcr
stos
iret
xchg
lds
push
scas
js
inc
pop
ss
push
pusha
clc
jo
push
(bad)
loope
hlt
jnp
in
mov
dec
int
or
loope
sub
call
fisttp
xchg
dec
lock
out
stc
xchg
ja
xchg
pop
imul
fwait
cdq
dec
mov
or
fcomp
and
jle
mov
movs
inc
jae
out
dec
push
mov
cdq
add
push
jmp
iret
dec
lock
pop
mov
fistp
ins
xor
jns
mov
outs
mov
mov
mov
pushf
outs
outs
adc
pop
jl
rcl
cmp
xor
add
arpl
lods
inc
xor
retf
inc
adc
pop
jbe
push
fcmovnu
repnz
xchg
shl
jl
(bad)
rol
cli
mov
jns
or
cmp
push
adc
sbb
or
shr
mov
cmp
xor
ret
faddp
cmps
pop
jae
push
loope
lea
inc
cwde
mov
aam
pop
retf
stos
stos
add
mul
dec
iret
popf
stos
loopne
sub
xor
jmp
stc
sub
xchg
je
xchg
xor
cmps
scas
or
in
cmp
jb
iret
jb
ins
rol
adc
mov
add
inc
call
and
iret
jo
dec
mov
inc
jle
sbb
push
pop
jo
push
sahf
ffreep
mov
and
sub
lods
cmp
es
js
mov
mov
xchg
or
out
mov
and
inc
xchg
cmp
pcmpeqw
push
pop
out
adc
mov
dec
add
adc
clc
loope
loop
sbb
mov
bound
cmp
sbb
jmp
mov
sub
dec
(bad)
je
jns
jmp
lock
or
sar
push
rcl
pop
pop
dec
jl
add
nop
mov
imul
leave
jne
(bad)
mov
js
jns
lahf
pusha
stos
sbb
push
xchg
pop
pop
cdq
and
pushf
push
dec
jno
and
add
adc
xchg
aas
inc
int3
pop
sub
(bad)
cmp
out
push
ins
cmp
(bad)
aad
cmp
inc
or
js
addr16
out
in
out
je
sbb
lahf
pushf
les
call
aas
outs
push
fdiv
add
xor
mov
xor
lock
or
inc
push
pop
dec
inc
pop
add
arpl
rcr
js
fs
(bad)
stc
or
out
retf
rcl
and
mov
pop
fnsave
xchg
dec
push
loop
loopne
aas
push
ins
add
dec
ss
sub
jge
jbe
dec
loop
(bad)
push
stos
mov
push
je
cmp
frstor
push
or
pop
ffreep
sub
jmp
enter
jecxz
mov
popf
das
repz
push
imul
jg
pushf
mov
mov
or
stos
bound
mov
mov
mov
and
jbe
mov
rcl
xor
movs
pop
mov
adc
cmp
cmp
fwait
in
imul
loopne
repz
cmp
inc
sahf
loope
pusha
mov
repz
and
jno
clc
ja
js
ret
aam
push
(bad)
sar
fimul
sbb
xlat
imul
outs
adc
jns
xchg
repnz
lods
cmp
inc
push
das
rcl
xchg
aaa
mov
data16
add
retf
adc
cwde
jecxz
lods
(bad)
in
lea
and
add
(bad)
or
mov
push
jecxz
std
pop
outs
pop
add
scas
imul
fisubr
add
aas
int
mov
xor
ret
inc
sbb
stc
div
mov
push
dec
add
inc
out
sub
jmp
popf
out
mov
dec
xchg
pop
lea
stc
and
fadd
arpl
loope
sub
cmp
jl
xchg
or
test
popf
mov
adc
push
in
int
movs
imul
pop
cmc
or
or
inc
out
sub
retf
inc
jae
mul
repz
icebp
mov
in
test
pop
pop
or
scas
test
fldcw
in
cdq
add
jne
loopne
pop
shr
imul
popa
stos
cli
jo
xor
leave
rcr
push
aas
and
cld
outs
or
popa
inc
dec
les
aas
inc
dec
cdq
inc
aas
sub
int3
mov
mov
cdq
(bad)
fidivr
inc
adc
cli
pop
ret
in
dec
push
sbb
xor
jb
dec
fist
rol
fistp
dec
imul
fisub
std
dec
jbe
outs
jbe
mov
xchg
(bad)
retf
into
loop
xchg
push
sbb
icebp
pop
scas
jp
pusha
mov
push
sub
int3
test
dec
(bad)
inc
stos
loop
push
xor
lods
push
adc
mov
inc
xchg
push
xor
test
jne
(bad)
pop
fild
inc
add
push
stos
ret
vrsqrtss
test
dec
ins
loope
pusha
movs
dec
mov
in
cmc
mov
cli
xchg
fwait
adc
mul
std
jnp
fwait
shrd
outs
pushf
mov
push
psadbw
jno
cmp
pop
pop
test
sti
add
mov
outs
mov
mov
jle
arpl
sub
mov
inc
cmc
leave
(bad)
ds
addr16
pop
jg
cmp
shr
mov
imul
arpl
enter
push
push
mov
in
sub
jmp
ins
jge
clc
xor
rcr
adc
xlat
nop
rcl
jmp
shl
push
shl
cdq
mov
lods
punpcklbw
(bad)
xchg
sub
sbb
jmp
sbb
inc
inc
es
inc
clc
retf
mov
scas
or
aas
push
jge
hlt
rol
test
call
mov
test
fidiv
mov
fidiv
sub
pop
jo
push
push
scas
xchg
cmove
add
hlt
mov
adc
cmp
iret
inc
pop
out
adc
mov
out
adc
jge
mov
in
fsubrp
push
test
aas
pop
out
pop
daa
mov
sysret
imul
xchg
dec
sbb
ficomp
ins
mov
outs
dec
fistp
cmp
je
or
dec
pop
jbe
lds
jae
ret
dec
in
mov
dec
gs
fst
movs
jmp
and
jl
adc
inc
out
dec
pop
or
adc
sahf
xchg
jbe
or
mov
aad
adc
js
push
push
nop
mov
inc
fistp
mov
pushf
ss
xchg
lods
outs
call
movs
enter
fldz
rol
mov
cld
jbe
(bad)
iret
cmps
pop
pop
and
in
dec
jl
cmp
sub
jle
xchg
sysret
cmps
or
out
ins
pop
jge
shl
mov
jmp
in
ret
(bad)
cs
fnstcw
sbb
cmps
clc
cmp
jl
jp
outs
in
push
mov
stos
iret
aas
xchg
mov
mov
ss
lock
dec
xchg
sbb
hlt
add
sbb
push
not
adc
mov
or
push
xor
sete
bound
push
scas
daa
xor
pop
cmp
je
clc
mov
addr16
mov
repz
pop
enter
shr
and
call
and
jns
retf
and
call
ds
mov
aam
or
aas
int3
inc
inc
shl
push
lahf
not
xor
jns
cmc
fimul
out
or
out
cmp
popa
add
inc
ins
jle
hlt
cmp
mov
mov
or
mov
test
inc
inc
push
lahf
mov
xchg
ret
out
push
xchg
sub
pop
cmp
dec
aaa
pop
mov
mov
mov
rcr
and
inc
hlt
xor
add
mov
pop
aam
inc
or
mov
mov
push
and
inc
cmps
inc
xchg
mov
push
fidiv
mov
imul
inc
jne
jae
outs
sub
(bad)
sbb
xchg
mov
sub
fidivr
imul
jbe
fcmovbe
mov
cmp
mov
push
es
or
lahf
push
jno
and
xchg
jl
cmp
lahf
das
(bad)
cmp
out
clc
lock
ret
ins
and
aam
mov
push
and
aas
sbb
sbb
xor
arpl
push
outs
cmp
imul
push
stos
das
shr
pop
mov
ret
pop
imul
jp
bound
pop
es
add
mov
mov
cmps
add
push
(bad)
fld
outs
jae
cld
push
mov
retf
lods
retf
xchg
sbb
test
xchg
and
sub
xchg
mov
rol
ins
push
xor
pusha
pusha
sbb
repz
sti
or
add
(bad)
mov
popa
push
mov
in
out
fnstenv
icebp
popa
es
sub
ret
call
cli
aam
dec
push
fistp
xor
or
dec
cmp
or
mov
cs
mov
mov
sub
js
jmp
fcmove
in
sbb
or
mov
in
sub
mov
nop
mov
nop
dec
ror
push
dec
aam
xchg
ficomp
ins
lock
dec
js
cmp
pop
jno
mov
xchg
push
adc
repnz
mov
push
inc
cs
mov
lea
rcl
mov
daa
and
jle
repz
xor
dec
mov
retf
iret
push
jmp
jnp
pop
add
adc
int3
int3
dec
popf
mov
scas
sub
cli
inc
clc
push
or
push
xchg
dec
push
dec
xor
test
mov
neg
push
jle
jmp
fisubr
add
sti
cmps
jae
addr16
dec
outs
sbb
fs
and
cli
adc
test
mov
loop
cmc
lea
cdq
sub
adc
jp
into
hlt
mov
scas
imul
lds
inc
cmp
add
movs
sbb
mov
xor
sahf
fidivr
jno
(bad)
mov
sub
in
arpl
fistp
jo
hlt
jb
outs
ins
inc
lock
aam
mov
mov
retf
stos
rol
mov
pushf
aas
popf
ja
scas
pop
or
dec
and
jb
ds
xchg
mov
fistp
push
cmp
mov
idiv
data16
cmp
cdq
adc
sub
sbb
movs
cdq
push
sti
dec
push
cdq
sbb
and
and
into
and
or
jno
mov
add
jbe
loopne
or
jmp
add
push
push
cs
and
mov
dec
mov
adc
sbb
je
stc
cmc
and
and
int3
das
fild
pop
xor
(bad)
pusha
stos
mov
dec
jmp
add
mov
xchg
xor
loop
sub
mov
inc
push
xor
push
dec
movs
mov
mov
jge
add
lahf
in
fisub
push
jecxz
mov
iret
xchg
(bad)
out
cmps
rol
xlat
mov
aam
pop
cdq
call
test
fmul
mov
scas
lds
xor
add
shl
push
mov
repnz
icebp
sbb
add
push
dec
xchg
mov
fdiv
sbb
and
mov
or
lods
and
push
ficom
dec
(bad)
or
jbe
xchg
sub
and
and
in
push
mov
add
test
aaa
jns
ret
add
and
call
jmp
xchg
outs
lea
fld
sbb
cld
sbb
(bad)
jno
les
or
out
shl
add
jb
pop
or
shl
ret
mov
pusha
idiv
aam
bound
pause
test
pushf
xlat
loope
mov
xchg
and
push
xor
and
jne
call
push
add
sbb
mov
pop
xchg
aad
mov
sbb
cli
(bad)
cmp
xor
retf
cwde
cmp
xor
and
jp
mov
pop
xor
add
imul
aaa
inc
sbb
fs
scas
bound
push
inc
int3
popf
in
gs
dec
mov
sbb
mov
call
mov
dec
xchg
ja
sub
sub
push
fisttp
shl
cmp
js
fstp
das
and
rol
in
mov
sbb
or
sub
mov
mov
or
push
inc
jb
(bad)
cmp
imul
jno
movs
jl
add
fimul
dec
mov
fist
cmp
jle
cmp
cmp
mov
jle
js
rcl
or
fcmovnbe
mov
int3
add
dec
into
ret
or
add
icebp
leave
and
push
xchg
mov
popa
mov
or
dec
retf
pop
test
push
test
jle
popf
retf
cld
retf
gs
sbb
loopne
test
daa
or
in
push
adc
adc
mov
pop
imul
mov
(bad)
pop
add
xor
dec
cmps
fcmovnu
mov
and
jl
sub
je
out
cmp
jns
cmp
iret
adc
add
scas
cmp
lods
les
je
mov
bound
xchg
mov
dec
jmp
test
or
fsubr
xchg
cmps
mov
addr16
mov
mov
stos
imul
mov
and
push
add
mov
stc
sub
dec
sub
movs
in
lds
mov
cmp
daa
mov
gs
xor
mov
ja
jbe
cmp
call
mov
aas
int
push
xchg
je
add
dec
push
mov
or
sub
loop
inc
test
mov
sub
pop
test
mov
inc
fs
jg
sbb
pop
mov
in
push
dec
adc
shr
mov
push
add
inc
movs
mov
inc
cmp
sahf
test
jmp
outs
outs
and
push
jmp
cmps
test
add
(bad)
push
dec
push
vmovupd
call
mov
cmps
push
scas
xor
fisub
sub
pop
(bad)
hlt
xor
xchg
or
jl
mov
or
inc
stos
dec
xor
jge
jmp
or
test
jb
cmp
push
push
stos
xchg
sbb
pushf
and
inc
out
fdivr
ss
hlt
movs
adc
(bad)
rcl
mov
popa
add
or
fild
repnz
add
rcr
jl
daa
mov
out
inc
push
mov
and
sub
push
inc
mov
cwde
(bad)
push
ja
aaa
inc
cs
add
cs
or
cmp
scas
pop
mov
jle
retf
inc
lea
xor
push
cmp
xchg
pop
int
adc
pop
les
es
daa
pop
cmp
or
outs
retf
pop
mov
push
(bad)
jle
pusha
dec
imul
sar
ins
add
dec
aad
push
fwait
dec
mov
int
push
fisubr
cmp
aad
mov
and
out
cmp
or
push
adc
sbb
imul
push
sar
arpl
jb
sub
stc
out
cmp
es
popa
aad
pop
iret
xor
lea
adc
stos
imul
mov
pop
shl
inc
mov
and
stc
dec
jmp
sub
dec
imul
inc
adc
push
xchg
dec
sbb
imul
add
das
int3
scas
jp
call
dec
movs
jecxz
ret
fimul
scas
into
jp
mov
xor
push
mov
jb
push
pop
cld
push
ficomp
jno
imul
imul
xchg
test
sbb
js
fstp
or
mov
or
jnp
ins
(bad)
mov
inc
scas
adc
push
jnp
enter
aas
mov
out
cli
mov
dec
pop
or
mov
jb
enter
(bad)
lods
arpl
pop
adc
cmps
pop
dec
dec
xlat
push
sar
outs
div
jge
test
or
sbb
jmp
stc
xchg
xor
mov
ds
ror
push
sbb
dec
push
mov
push
shr
cwde
cmp
ret
sbb
popf
cs
ds
pop
(bad)
pop
je
sti
xchg
sbb
sti
(bad)
sbb
fisub
data16
push
cmp
fisubr
adc
pushf
shr
popa
pop
push
in
arpl
pop
push
cmp
pushf
mov
in
adc
mov
dec
push
test
sbb
cli
inc
xor
mov
mov
jl
inc
jb
in
imul
cmp
mov
inc
scas
addr16
ja
push
call
stos
mov
pop
das
enter
neg
(bad)
shl
pop
das
enter
xor
cdq
fwait
cdq
pusha
sbb
scas
movs
sbb
ss
xlat
adc
std
ins
in
mov
xor
sahf
xor
mov
add
jno
cmps
jp
call
or
or
and
xchg
mov
sub
in
cdq
adc
mov
leave
xor
xor
les
jp
cmps
or
push
jmp
fild
or
xchg
dec
inc
or
test
mov
stos
sub
fs
cmp
pop
or
stc
add
push
mov
icebp
xchg
dec
xchg
jae
out
test
ds
inc
push
pop
fcmove
and
push
cli
fild
test
ror
mov
test
gs
mov
ret
mov
(bad)
xchg
sbb
xchg
mov
add
xor
pop
dec
xchg
es
mov
jmp
into
shl
out
sub
mov
ins
or
ret
adc
adc
xchg
fstp
scas
pop
stos
dec
pop
xor
add
ror
mov
fst
outs
xchg
pop
adc
pop
add
and
and
sbb
jge
dec
(bad)
push
cs
xor
and
fwait
sti
xor
fmul
sbb
sbb
jp
jmp
jne
icebp
pop
xor
out
test
shl
repnz
adc
xchg
cmp
mov
loopne
push
movs
push
retf
es
retf
scas
(bad)
sti
jecxz
dec
jle
push
or
loopne
mov
ffree
jnp
(bad)
sbb
stos
cli
shr
call
jmp
and
mov
gs
repnz
and
dec
sub
sub
cmp
ret
repnz
(bad)
dec
out
imul
clc
call
arpl
int
mov
xor
addr16
(bad)
cmp
add
sub
mov
jmp
aaa
jecxz
out
pop
pop
pop
mov
iret
(bad)
lahf
fstp
xchg
jne
add
and
in
and
mul
cs
into
inc
xchg
into
pop
jecxz
push
repz
mov
js
and
das
bound
mov
mov
not
cmc
mov
mov
movs
mov
jne
dec
lods
inc
jmp
cmp
fnsave
lods
mov
dec
mov
mov
movs
and
scas
mov
mov
ffreep
inc
add
fistp
inc
test
jecxz
adc
daa
outs
std
sub
div
jg
loopne
xchg
push
test
int3
and
popf
jno
pusha
xchg
dec
leave
ds
mov
cmp
sub
mov
cld
mov
cs
retf
cld
or
push
aad
cmc
mov
push
dec
jecxz
xor
xchg
or
sbb
xchg
scas
test
xor
and
shl
add
jecxz
sbb
cmp
and
inc
ret
mov
cwde
mov
mov
add
fisttp
ror
add
mov
cmp
lahf
or
xor
or
int
neg
xor
pop
call
adc
mov
outs
inc
repz
loope
jp
xlat
cmp
inc
sbb
jne
in
cmps
and
fdiv
inc
nop
pushf
mov
inc
retf
or
(bad)
mov
or
cmp
xchg
jmp
push
ficomp
sub
and
mov
xchg
cmps
cmp
inc
(bad)
mov
mov
jg
in
stc
das
(bad)
cmps
jmp
mov
clc
xor
test
mov
ret
into
js
cdq
dec
lods
xlat
xchg
cmp
fs
shl
xor
xor
push
ins
dec
push
xchg
and
mov
clc
out
pop
aaa
sub
ret
mov
xchg
lods
jp
cs
aaa
ins
gs
mov
fisttp
fisttp
das
into
lods
inc
xchg
enter
and
mov
aad
push
pop
icebp
mov
ret
imul
mov
cmp
jae
dec
mov
and
xor
dec
popf
xchg
xchg
xor
and
sub
in
ins
or
adc
jp
and
jle
xchg
mov
xor
cwde
mov
xor
push
jns
out
or
push
mov
iret
add
lea
xchg
and
retf
ins
jbe
xor
aas
pusha
daa
leave
sti
xchg
fidiv
test
(bad)
repz
arpl
daa
lock
out
mov
fstp
das
cmc
or
xchg
jmp
add
sub
cmps
pop
xor
das
push
fstp
dec
xchg
lahf
mov
imul
test
push
or
fist
mov
sti
xchg
mov
add
xor
int3
pop
scas
test
fsub
inc
xchg
(bad)
cmps
enter
popf
imul
xor
cmp
add
push
mov
and
outs
(bad)
pop
pop
test
ret
scas
mov
sub
and
sbb
push
sbb
lods
push
add
mov
dec
jecxz
addr16
sbb
in
inc
addr16
aam
(bad)
pop
mov
cmp
loope
jecxz
xor
jp
arpl
add
test
movs
stos
lods
ficom
sbb
cwde
and
mov
push
loop
mov
pop
dec
in
mov
mov
push
(bad)
aad
push
cld
jle
xor
pop
movs
ss
dec
pop
(bad)
fneni(8087
mov
inc
jmp
mov
test
xchg
cmp
lock
pop
push
push
dec
iret
cmp
aam
pop
stc
mov
adc
bound
dec
fwait
lea
aad
sub
jo
mov
jne
cld
or
mov
bound
shl
add
ja
sbb
popf
rcl
push
push
in
xchg
dec
and
cmc
cmp
or
das
lods
push
push
or
mov
ins
dec
fcom
test
mov
mov
jnp
or
mov
mov
es
push
jp
pop
sbb
push
outs
test
retf
leave
mov
sbb
pop
fcom
aad
inc
cmp
pop
out
jg
mov
xchg
or
dec
inc
inc
scas
adc
push
dec
push
pop
push
stc
dec
pop
adc
push
cmp
stc
out
xor
add
sub
push
mov
es
or
cmps
(bad)
pop
cmp
scas
jae
push
jae
inc
mov
test
mov
mov
call
push
add
cmp
mov
mov
jo
dec
popa
sbb
jg
sub
inc
sti
push
push
push
retf
fld
or
push
idiv
cs
pop
xlat
sub
loope
mov
mov
xchg
daa
icebp
movs
mov
xor
ins
fld
cmps
cmps
mov
(bad)
mov
mov
das
int
cmp
gs
aaa
clc
dec
push
into
fs
push
pop
sahf
daa
jmp
shl
xchg
in
inc
pop
push
aad
(bad)
mov
jmp
push
jb
bound
mov
(bad)
mov
and
pushf
xchg
inc
adc
xor
pop
lahf
xchg
push
test
pushf
data16
aad
retf
neg
outs
je
lahf
dec
popf
mov
in
nop
mov
push
and
mov
cmp
lea
mov
mov
mov
inc
mov
push
sbb
fs
cmp
xlat
and
mov
pop
addr16
cwde
mov
add
pop
lfs
cmps
cmp
sub
nop
or
shl
push
test
pop
mov
ins
inc
xchg
jmp
mov
imul
fcom
xor
mov
(bad)
not
sbb
ret
jge
loop
sbb
out
jnp
movs
xchg
mov
sbb
sub
shl
pop
mov
int3
and
xor
cmps
sub
add
imul
iret
inc
popa
shl
imul
xchg
iret
(bad)
push
ss
mov
lods
pop
inc
xchg
sar
sbb
cmp
ds
pop
cmp
gs
pop
in
ins
and
push
xchg
fidivr
mov
shr
mov
arpl
inc
and
aam
test
pop
adc
jmp
push
pop
loope
ins
retf
xor
and
push
int
call
leave
bound
dec
mov
mov
cwde
sub
and
dec
xor
jle
mov
jp
test
enter
cmp
mov
jno
push
xchg
mov
mov
movs
mov
xchg
test
ret
es
nop
inc
cdq
pushf
enter
bound
aas
cmp
push
pop
ins
je
rcl
push
stos
cmp
xchg
scas
fnstcw
imul
and
push
push
div
and
rcr
mov
in
mov
pop
sub
imul
sub
jb
fisttp
test
mov
mov
push
jb
hlt
xchg
das
(bad)
call
int3
ds
std
push
es
jnp
cmp
push
push
nop
rcl
mov
add
test
cmp
sub
sar
lahf
jmp
mov
ins
out
je
cmc
test
lds
push
jmp
cmp
lods
push
clc
imul
shl
pop
push
loop
xchg
cwde
sbb
cmps
add
cmps
ret
idiv
adc
jo
sbb
out
and
call
or
pop
xchg
xchg
and
sub
cmps
cmp
aam
cwde
cmp
int
push
test
scas
aad
ror
xchg
dec
mov
jge
inc
imul
xor
pop
mov
xor
fsubr
cmps
test
movs
xchg
stc
xchg
inc
jnp
dec
cmp
and
xor
out
push
ret
jg
or
jns
mov
rcr
mov
adc
cmp
xor
das
jl
adc
outs
sbb
mov
inc
(bad)
mov
retf
hlt
push
adc
out
pop
ret
jmp
test
adc
ffreep
pop
lods
outs
(bad)
pushf
into
inc
and
(bad)
adc
call
sbb
add
pop
jnp
ins
xlat
xor
push
addr16
push
fwait
cmc
ret
add
in
jno
jecxz
clc
movs
add
mov
(bad)
cli
repnz
inc
mov
stos
inc
inc
mov
cs
or
mov
pop
movs
sub
mov
repnz
std
add
xchg
jae
and
outs
fbstp
sbb
fwait
add
dec
xor
sti
lea
call
adc
cmp
loopne
adc
clc
sub
test
pop
popa
dec
jb
test
adc
xor
mov
fs
inc
imul
or
call
stos
or
fdivrp
mov
lea
into
dec
retf
push
sbb
adc
dec
jae
fstp
loope
pop
(bad)
push
push
push
adc
xchg
mov
pop
or
xor
jmp
lahf
loopne
mov
or
loopne
xor
call
outs
mov
lds
cli
or
das
rcr
push
stos
push
sub
cmps
adc
xor
inc
xchg
and
and
sahf
imul
mov
into
push
imul
pop
cmp
outs
sub
cdq
popf
test
mov
imul
js
(bad)
xchg
inc
les
xor
ins
sub
ret
(bad)
cmp
clc
(bad)
mov
ins
add
mov
sahf
leave
test
xchg
xchg
push
shr
clc
mov
lahf
dec
dec
out
retf
jae
loop
mov
jmp
popf
inc
or
ss
xor
pop
das
es
dec
mov
leave
loopne
mov
mov
call
fild
jp
jl
adc
mov
outs
inc
adc
and
arpl
cwde
add
and
sub
ja
(bad)
fldenv
and
cmp
stos
inc
fist
cmp
cmp
mov
adc
cmps
add
lea
xor
push
(bad)
(bad)
mov
fcomp
mov
adc
push
mov
inc
xor
in
sbb
dec
aaa
and
out
jecxz
sbb
fwait
inc
jl
mov
add
(bad)
push
call
ds
test
not
xor
pop
xchg
in
push
bnd
pop
mov
mov
pushf
inc
cwde
mov
push
fs
(bad)
jno
pop
rcl
loopne
stos
ds
iret
push
bound
mov
dec
movd
dec
or
out
stc
out
push
xchg
or
in
shr
idiv
sahf
dec
add
xor
add
mov
mov
test
shl
(bad)
jae
push
fcom
leave
sbb
push
pop
sbb
fisttp
rcr
imul
jne
and
add
adc
iret
gs
and
in
or
or
jmp
xchg
add
push
popf
dec
jecxz
mov
adc
das
jnp
mov
pop
les
arpl
(bad)
fcomp
call
sub
stos
adc
pop
mov
enter
ds
or
dec
cmp
ss
(bad)
lods
pop
adc
retf
push
loope
push
sub
adc
lds
mov
adc
and
jl
mov
jns
push
dec
aam
adc
add
js
rcr
sti
loopne
add
mov
push
jl
push
xchg
ja
push
mov
fcomi
and
test
dec
and
mov
test
leave
retf
aad
xor
pop
out
add
daa
xchg
jbe
xchg
(bad)
bound
out
dec
pop
add
test
xchg
push
inc
(bad)
imul
in
out
das
call
and
retf
mov
imul
xchg
or
push
retf
mov
jmp
call
bound
mov
sbb
movs
sub
or
pop
in
jge
fstp
rol
and
cmp
and
sar
xchg
lock
xor
aam
lods
sbb
fist
pop
cmp
add
aaa
mov
mov
lds
and
dec
adc
sbb
inc
fwait
ror
daa
les
jp
(bad)
retf
jmp
pop
adc
xchg
(bad)
or
lea
xchg
icebp
jb
xchg
sub
mov
pop
sub
out
xchg
sahf
or
push
loop
out
lods
imul
mov
mov
and
pop
(bad)
int
(bad)
out
test
les
cs
test
sub
xchg
lock
pop
push
xor
xor
sbb
out
xchg
ins
repz
loop
(bad)
in
and
mov
popf
(bad)
cmp
icebp
loope
mov
mov
xchg
adc
xchg
stos
cmp
jae
movs
xchg
xchg
sub
rcr
es
push
rcl
ret
adc
and
sbb
mov
mov
push
jbe
retf
jle
mov
frndint
pop
pop
aam
jle
cmp
xchg
leave
das
xchg
jg
pop
mov
int3
dec
test
and
xchg
(bad)
jo
cs
stos
add
dec
outs
push
jp
jbe
movs
xchg
xor
adc
retf
add
(bad)
dec
imul
bound
adc
into
scas
outs
aad
push
add
and
icebp
push
or
push
jge
sbb
push
inc
pop
les
into
mov
aam
(bad)
outs
push
add
add
and
ret
test
mov
ret
jno
xchg
not
inc
or
and
xchg
shl
test
fild
bound
popa
and
loopne
loope
jno
popa
ja
sbb
jne
es
sti
hlt
jo
and
cmp
jb
jae
dec
popf
xchg
loope
fbld
mov
ins
mov
mov
dec
or
ret
push
push
adc
imul
iret
ins
fsub
pusha
inc
out
sbb
pop
test
or
inc
nop
push
jo
jo
pusha
adc
rol
push
sbb
cmp
popf
pop
push
fld
xlat
pushf
(bad)
pop
dec
int
(bad)
out
pop
xlat
sti
sti
xor
addr16
xor
mov
push
sbb
aam
mov
repnz
iret
xor
aam
aad
mov
iret
in
xchg
retf
aaa
adc
std
lahf
fistp
mov
fwait
aaa
arpl
mov
test
into
xchg
jne
xchg
(bad)
in
(bad)
cmc
cmps
int3
push
cwde
push
cmp
dec
sbb
xchg
pusha
inc
repnz
sbb
mov
push
mov
aam
and
push
pushf
add
(bad)
dec
ja
dec
pop
loope
add
or
fistp
mov
cmp
ins
dec
cmp
fmul
jns
mov
mov
inc
adc
push
loope
push
mov
loop
jbe
popa
dec
mov
es
inc
dec
push
pop
clc
in
aaa
enter
fist
cs
repz
ds
push
sub
outs
nop
mov
pop
mov
lods
test
mov
(bad)
pusha
or
sub
fwait
movs
cdq
jne
inc
pop
jmp
sub
cmps
in
xor
push
repnz
jg
jmp
and
push
pusha
je
xor
jo
jne
aad
add
loope
mov
hlt
cmp
xor
jp
gs
data16
xchg
add
(bad)
jmp
jmp
sbb
inc
mov
lods
fwait
shl
cmp
js
add
pop
xor
fisub
bnd
sbb
sar
cmp
es
adc
mov
shr
popa
stc
jge
mov
(bad)
ficom
adc
mov
or
arpl
cmc
imul
aas
test
rcl
mov
repz
and
push
iret
inc
pop
pop
inc
in
mov
fstp
or
dec
pusha
mov
cs
adc
sti
push
imul
adc
or
dec
push
test
add
aam
pushf
movs
or
or
std
imul
mov
pop
ret
xor
pop
or
xchg
popf
add
xchg
pop
daa
add
test
cmc
jne
mov
stos
mov
and
aaa
mov
sbb
test
or
push
icebp
adc
arpl
adc
sub
leave
std
ror
iret
or
mov
mov
mov
nop
fisub
pop
pusha
daa
push
jp
mov
das
mov
jnp
sbb
in
div
pop
in
imul
add
adc
add
bt
js
popa
in
stc
and
mov
fs
push
pop
inc
inc
in
inc
inc
aaa
call
dec
adc
out
dec
sub
arpl
nop
cld
call
adc
frstor
mov
mov
or
fldcw
loope
fmul
and
cmp
push
stos
rcl
inc
lahf
adc
ins
stos
jae
push
xchg
sti
in
imul
in
fcomip
movs
pop
div
xor
xchg
jns
add
ret
test
addr16
test
cmp
jp
int
rcr
mov
adc
or
mov
daa
inc
xor
dec
jle
test
pop
mov
push
xchg
pop
and
xor
push
jno
add
cdq
sti
cmp
inc
pushf
mov
add
repz
inc
scas
and
mov
add
add
xchg
hlt
and
cmp
and
fs
sbb
ins
mov
mov
lods
fs
mov
and
aad
and
in
out
xor
cmp
cwde
lods
mov
xor
stos
loop
sbb
and
(bad)
gs
and
das
nop
mov
imul
les
push
push
xchg
ret
add
push
mov
and
repz
mov
or
out
cmps
jle
popf
adc
xchg
fbstp
icebp
mov
mov
jge
adc
sub
jbe
dec
cmp
adc
push
lods
mov
jnp
push
sub
sub
xchg
mov
lods
add
mov
retf
popf
sub
adc
dec
push
loope
mov
inc
xor
ret
out
mov
aam
mov
stos
and
(bad)
lds
jmp
or
addr16
and
lahf
push
adc
rcl
jl
mov
ins
jge
xor
lods
push
mov
or
call
jno
push
cmp
shl
gs
fbstp
and
xchg
pop
(bad)
lock
cmp
arpl
adc
out
dec
and
sahf
push
cmp
call
jb
ds
add
arpl
(bad)
repz
mov
sbb
adc
adc
pop
xor
out
(bad)
pop
jbe
jge
addr16
cld
adc
mov
jp
es
pop
mov
pop
xor
push
inc
mov
mov
push
push
push
pop
sub
push
mov
cmp
jb
push
test
or
xor
sub
pusha
inc
loope
pop
adc
bound
or
lock
sahf
xchg
xchg
retf
mov
call
scas
and
outs
push
and
aad
pop
ins
aam
xlat
movs
sbb
sbb
cs
xchg
fld
or
adc
rol
cmps
sub
and
fistp
stos
xchg
sbb
in
dec
xchg
sti
lock
div
bound
test
push
pop
arpl
push
std
pusha
repz
jl
int
frstor
call
fld
sub
test
xlat
pop
or
(bad)
popf
shr
mov
jmp
and
iret
add
dec
xor
lea
push
mov
mov
push
daa
sahf
js
jl
arpl
add
cli
sub
call
add
xor
stos
cwde
imul
stc
and
or
movs
xor
arpl
bound
sbb
jmp
add
cmp
mov
jo
vpsrad
xchg
mov
jmp
adc
lods
aad
psubw
jmp
adc
mov
pop
cmp
add
push
ret
repnz
ins
mov
or
sbb
jp
pop
inc
sub
cmp
sbb
loop
dec
outs
(bad)
mov
clc
add
cmps
mov
(bad)
jbe
cvtps2pi
cld
pop
sub
mov
xor
setl
test
loopne
mov
hlt
cmp
shl
dec
dec
pusha
push
cmps
sub
enter
ja
xchg
sub
shl
xchg
aaa
imul
sub
mov
pop
mov
or
or
jmp
outs
aam
(bad)
fisub
jge
into
sub
ret
lods
mov
leave
dec
mul
pop
daa
mov
not
lods
imul
aas
mov
jo
pop
and
xor
cmp
xchg
sbb
iret
add
push
mov
xor
fwait
cmp
imul
test
out
push
jbe
pop
(bad)
lock
xchg
fisub
fnstcw
dec
repz
punpckhwd
arpl
dec
add
and
dec
xchg
lahf
xor
jg
out
ret
push
sti
sbb
int
movs
(bad)
outs
cmp
pop
es
dec
ss
out
pop
jns
cmp
(bad)
(bad)
mov
jno
push
pusha
push
mov
repz
lahf
add
aad
pushf
ds
mov
icebp
jp
je
jno
les
clc
dec
add
dec
daa
stos
out
mov
mov
inc
cmc
test
cmp
jge
mov
mov
cmp
inc
ds
test
hlt
jno
mov
push
adc
clc
cmp
inc
jl
ficomp
jne
jno
or
jno
xchg
cmp
xor
rcl
xchg
imul
jb
lods
aam
popa
cld
push
push
lahf
ins
loopne
add
cmp
adc
adc
and
and
xchg
pop
into
adc
out
or
sub
ss
inc
add
adc
dec
xor
enter
je
adc
add
add
movs
add
or
stc
sub
test
sbb
lahf
mov
out
scas
xor
test
clc
cmp
add
inc
or
jnp
adc
xchg
jb
lods
test
ret
dec
cmp
sub
mov
pushf
retf
or
push
jmp
xor
inc
cmp
jge
mov
not
movs
push
fbstp
ja
pusha
sahf
pop
and
outs
mov
outs
sbb
scas
pop
push
jle
out
jne
out
mov
call
adc
jmp
push
and
std
xor
pushf
imul
je
jbe
cmp
cld
lock
fcomp
push
ror
in
mov
mov
add
mov
cmps
or
out
nop
cmp
mov
push
pop
mov
or
xchg
cmp
mov
call
and
pop
pop
call
push
cld
inc
in
xchg
inc
lods
icebp
mov
jmp
inc
jnp
scas
retf
jnp
push
sbb
mov
mov
ins
call
sub
(bad)
jl
aaa
cmp
std
in
mov
cmp
sub
popa
(bad)
or
sti
fnstcw
push
sbb
cmc
or
add
adc
push
dec
(bad)
jmp
sub
lahf
es
or
inc
rol
mov
lods
or
push
int
mov
add
call
imul
movs
cmps
jge
pop
int
sbb
cmp
int3
dec
xor
mov
sub
jne
movs
nop
out
push
je
rcr
div
xchg
jmp
daa
sahf
lods
clc
call
cmp
hlt
es
rcl
xchg
loopne
mov
fdiv
xchg
retf
mov
cmp
out
outs
xchg
test
les
push
fcomp
shl
loop
cmp
ins
jb
cdq
sti
push
cld
sub
inc
dec
pop
jg
fwait
ret
inc
scas
push
push
adc
push
xor
scas
(bad)
jge
xchg
mov
out
cs
int
jns
ins
leave
dec
les
rcl
xchg
pop
pop
adc
mov
into
fwait
xchg
cmps
jg
pop
or
int3
(bad)
mov
jmp
sbb
dec
add
stos
push
rol
dec
mov
lods
pop
jmp
data16
and
jae
inc
clts
xor
and
xchg
aaa
and
mov
movs
jl
loopne
jns
or
mov
cli
test
xchg
sbb
js
xchg
mov
push
test
cmp
adc
cmps
or
cmp
test
pop
mov
cmc
jmp
push
xchg
adc
out
aam
cmps
int3
cmp
xor
clc
rcr
sub
push
pop
(bad)
pop
mov
cmc
aam
xchg
push
loop
cmp
cld
das
adc
das
leave
sbb
ins
mov
mov
inc
rcl
jmp
loope
push
mov
jae
call
cmp
rcr
(bad)
sub
inc
shl
aam
jmp
xchg
shl
test
xchg
das
jbe
jbe
mov
xchg
add
sbb
xor
clc
ret
jp
mov
push
gs
aas
das
rcl
(bad)
xchg
sbb
sbb
sbb
push
cmp
les
ins
pop
jns
dec
pop
div
(bad)
outs
xor
mov
in
mul
loopne
lods
loopne
mov
push
jl
pop
fld
mov
ret
lock
icebp
in
push
push
mov
xor
cmps
push
je
mov
cmp
ret
pop
es
fnstenv
mov
adc
mov
add
or
inc
movs
gs
dec
dec
sub
or
inc
xor
cdq
imul
lods
pushf
mov
xchg
or
adc
fmul
mov
or
dec
cmps
scas
lods
dec
pop
inc
mov
pop
loope
je
sub
xor
(bad)
mov
push
jmp
add
(bad)
(bad)
cmp
push
xchg
sbb
stos
retf
inc
or
jno
loopne
call
cli
adc
xor
ss
sbb
xchg
imul
retf
pop
or
icebp
retf
out
call
ins
or
add
jl
movs
repz
js
add
imul
nop
cmp
scas
jg
daa
mov
mov
pop
inc
leave
add
pop
cmps
sti
(bad)
sti
push
ds
add
push
mov
std
cmp
cmp
adc
lods
out
cmc
or
inc
mov
mov
cmp
rcl
push
inc
push
push
dec
inc
fcomp
rcr
test
scas
(bad)
jge
pushf
or
shr
mov
sub
or
fstp
movs
mov
test
leave
test
je
jb
or
adc
cmps
arpl
repnz
mov
or
mov
xor
and
jl
scas
pop
lds
cld
fcmovnb
stos
sbb
imul
test
add
xlat
scas
cmps
lods
xchg
aas
(bad)
xlat
sbb
mov
xor
mov
xor
shr
cmp
lods
push
adc
mov
lock
in
and
in
call
cmps
in
lahf
fldcw
mov
(bad)
dec
aad
add
mov
and
ins
scas
mov
xlat
(bad)
sub
xor
(bad)
cmp
push
cld
mov
in
ror
or
mov
ins
retf
movs
or
mov
add
and
not
cld
loope
add
xchg
call
xor
loop
or
fisub
pop
push
nop
add
fwait
pop
dec
pop
scas
sbb
adc
sub
push
js
xor
dec
nop
xchg
add
mov
dec
sub
std
iret
pop
mov
inc
enter
push
cmp
lahf
xor
and
cmp
loope
jl
sub
iret
xor
mov
mov
scas
loope
les
pop
cmp
cwde
inc
dec
or
adc
movs
xchg
pop
inc
and
fdivr
jecxz
push
adc
mov
pushf
xchg
xchg
push
or
mul
pop
ss
mov
test
pop
movs
repz
mov
xchg
jmp
push
pusha
sbb
cmps
js
jne
mov
dec
pop
mov
jae
mov
jg
push
dec
clc
sub
xchg
fldlg2
cdq
in
in
xor
lock
(bad)
fadd
sub
out
sar
sbb
dec
das
test
cmp
fneni(8087
pop
cmp
dec
mov
stc
(bad)
mov
adc
in
push
cmp
and
pop
adc
sbb
add
or
fidivr
jle
mov
jecxz
mov
jb
daa
loopne
push
mov
mov
sub
jnp
and
gs
sub
cld
lods
nop
pop
lds
add
idiv
ja
mov
jg
push
jecxz
mov
clc
int3
call
imul
sub
mov
jo
mov
and
mov
and
xor
inc
and
sti
rol
xchg
mov
(bad)
out
inc
in
dec
outs
(bad)
fstp
dec
mov
test
shl
adc
jp
cmps
lds
cmp
into
into
movs
in
adc
adc
ficom
push
int
lods
fstp
aad
mov
fiadd
call
jge
sbb
adc
imul
and
ins
neg
adc
sub
jl
xchg
ss
pop
pop
pushf
or
xchg
(bad)
jle
cwde
adc
push
enter
xchg
jbe
pop
gs
mov
movs
ss
(bad)
movs
mov
sub
or
cmp
or
add
cmp
ret
cwde
enter
mov
shl
pop
mov
push
xchg
test
cmc
sti
mov
push
cmc
arpl
and
sub
adc
jp
jmp
cli
cmp
dec
pop
shl
xchg
imul
cmc
xchg
jbe
mov
inc
pop
push
popf
mov
call
or
aas
arpl
lods
inc
scas
jecxz
idiv
sub
inc
daa
add
jg
(bad)
sar
sbb
or
ja
call
popf
es
inc
mul
mov
pop
shl
loop
movs
dec
loop
sbb
inc
dec
test
mov
mov
adc
loopne
mov
xchg
xchg
iret
mov
pop
xchg
xor
cmc
pushf
hlt
aam
or
fdiv
pop
test
cmps
push
aad
adc
push
mov
int3
sub
stc
jl
xchg
int
mov
enter
inc
pop
scas
sbb
sub
(bad)
sub
inc
rcr
ret
test
scas
pop
pop
cmp
rcl
sub
sub
ror
int
rol
out
imul
pop
cmps
cwde
les
pop
retf
and
js
daa
xchg
lods
and
bound
leave
cmp
sbb
scas
jp
dec
test
fs
cs
ss
jno
cmp
mov
fwait
jg
cmp
shl
in
rcl
inc
test
daa
loop
push
xchg
mov
mov
inc
ins
xor
(bad)
popf
shl
dec
xchg
sub
xor
mov
push
shl
addr16
arpl
cdq
and
push
lods
jne
imul
sahf
jl
out
ret
jl
mov
push
mov
fsubr
movs
sub
xchg
int3
movs
scas
cld
mov
mov
fwait
mov
sti
icebp
pop
out
pop
and
adc
xlat
or
not
ss
inc
mov
movs
xor
mov
std
mov
or
loopne
in
jb
xchg
hlt
aaa
mov
shl
int
in
vcvttss2si
and
retf
inc
jle
xchg
nop
rol
sub
and
xchg
test
inc
outs
adc
mov
cs
in
mov
stos
add
adc
push
and
stos
or
sbb
xor
addr16
xchg
loopne
int
pop
in
mov
pop
sbb
xchg
jne
and
mov
inc
add
sub
sub
mov
pop
shl
mov
lods
pop
in
bound
fiadd
fsub
out
std
in
xor
ds
add
fmul
popf
dec
sbb
clc
fisub
sub
shr
and
fwait
cdq
xchg
leave
out
mov
pop
mov
ss
add
adc
push
jae
push
adc
push
div
std
push
pushf
retf
mov
fsub
jecxz
pop
je
add
push
adc
and
repz
cld
mov
mov
retf
push
mov
inc
add
retf
mov
push
dec
call
mov
lods
xor
and
rcr
mov
(bad)
cmp
or
push
fwait
movs
mov
or
or
push
(bad)
pop
jmp
xchg
sbb
push
scas
imul
fimul
sbb
in
sub
xor
pusha
mov
and
pop
sub
mov
cmps
pop
bound
bound
mov
mov
adc
ret
push
push
stos
or
mov
xchg
pushf
xor
sub
test
dec
sbb
xchg
stc
jl
arpl
in
outs
cmp
and
and
push
fist
mov
dec
xor
or
shl
dec
ja
cs
imul
mov
xchg
cmp
pop
dec
ins
adc
(bad)
rcr
pop
cmc
sar
adc
inc
test
inc
jmp
imul
call
enter
xchg
push
int3
fs
imul
sbb
data16
retf
jg
jns
sbb
lods
add
jae
ds
shr
mov
jb
js
dec
fiadd
scas
stc
add
test
jl
ja
cld
add
pop
scas
test
pop
xlat
(bad)
adc
push
pushf
pop
adc
mov
f2xm1
(bad)
pop
ins
dec
xchg
stos
mov
push
pop
inc
pop
out
sub
pop
mov
add
mov
mov
cwde
call
in
stc
jne
push
adc
scas
test
arpl
dec
dec
inc
xor
and
or
int
sub
mov
mov
daa
retf
inc
loope
aas
fisttp
mov
ds
inc
inc
mov
fsubrp
test
retf
mov
inc
push
arpl
sbb
jae
mov
cmp
sub
push
mov
daa
push
mov
jge
jecxz
adc
and
add
pop
jo
pop
or
jmp
add
outs
stc
(bad)
fsub
cmp
inc
(bad)
fsub
pop
movs
rol
adc
xor
nop
wbinvd
mov
jp
add
mov
adc
jno
mov
sbb
enter
mov
fiadd
mov
mov
push
add
or
stos
imul
out
add
dec
push
(bad)
push
les
xor
push
xlat
sbb
imul
and
cmp
addr16
inc
inc
inc
(bad)
call
ret
ins
mov
ret
es
xchg
(bad)
mov
cdq
cmp
cmps
call
inc
mov
test
test
stos
leave
fstp
inc
ret
add
ficom
cwde
or
loopne
shl
cli
rcl
call
sbb
xchg
lahf
lahf
(bad)
cdq
in
(bad)
scas
cmps
in
js
add
arpl
out
rcl
lock
imul
iret
int3
cmp
aam
mov
int3
pusha
iret
sub
xor
and
cmc
sub
inc
mov
add
lods
pop
dec
jmp
lods
scas
cmc
adc
call
out
cs
jg
aad
xchg
es
in
sbb
and
scas
or
push
cdq
sbb
test
(bad)
leave
sti
movs
sbb
push
es
out
clc
sbb
adc
pushf
stc
vmulss
xchg
fmul
gs
cmps
loopne
mov
lock
retf
inc
fstp
sbb
aas
ss
(bad)
(bad)
mov
aas
sbb
scas
dec
rcr
shr
(bad)
mov
and
(bad)
or
mov
fcmovu
repnz
std
mov
cmp
jecxz
dec
jmp
fwait
iret
je
fwait
retf
lods
inc
inc
bound
loop
mov
fcom
or
xor
cmps
add
sbb
out
movs
add
or
int3
cmp
test
je
jecxz
cmp
aad
daa
mov
adc
cmps
fistp
je
aad
or
retf
sbb
lock
adc
jmp
fdiv
les
inc
inc
loop
inc
push
cmp
sbb
out
ins
ja
ficom
mul
sbb
pop
aam
dec
push
pop
es
sub
pop
and
sub
xchg
cmp
sbb
rcr
jmp
or
sti
sbb
adc
shr
push
stc
ins
push
cmp
icebp
pop
int3
loop
dec
cmps
xchg
inc
enter
mov
ret
add
push
sahf
jb
inc
mov
xchg
or
cmps
ins
push
adc
adc
sti
outs
or
jmp
add
(bad)
arpl
str
sbb
retf
aas
push
sar
cld
or
fs
and
dec
test
stos
fs
in
cmp
pop
lds
aam
call
dec
push
mov
movs
mov
test
adc
xchg
fs
leave
pusha
xor
jno
dec
jne
les
push
aas
cmps
aas
popf
sub
sar
sar
lds
add
mov
pop
xchg
mov
cld
xchg
sub
cmps
fnstenv
rcr
xor
sbb
jmp
jne
xchg
mov
ins
mov
ror
ror
mov
aas
dec
sub
and
lods
add
in
xchg
sbb
pop
mov
mov
mov
pop
in
mov
pop
ret
repnz
add
cli
jecxz
and
fwait
popa
ret
fcmovu
(bad)
mov
rcr
int
xor
dec
(bad)
es
(bad)
mov
lahf
mov
sub
adc
xchg
push
jno
pop
push
sbb
aaa
dec
movs
retf
pop
mov
and
sar
fadd
pushf
or
jns
neg
adc
mov
retf
cmp
aam
retf
adc
adc
cmp
outs
add
mov
leave
cmp
out
movs
sub
jae
xor
mov
dec
(bad)
jmp
arpl
dec
inc
mov
push
dec
xlat
adc
xor
pop
or
mov
push
jns
mov
popf
mov
int
arpl
aad
sub
stos
(bad)
loop
inc
mov
cmp
add
push
mov
mov
jns
pop
lea
fs
sar
lds
lahf
xchg
cmp
sti
stc
jg
fs
ins
push
pop
cmp
ins
into
xor
mov
idiv
inc
mov
shl
std
retf
pusha
cmp
sub
adc
(bad)
cmp
enter
inc
rol
and
fisub
iret
aam
ja
jne
push
aaa
sbb
out
cmps
cs
retf
sbb
(bad)
mov
(bad)
(bad)
out
xor
fwait
push
vpcmpgtw
in
fldenv
loop
mov
push
repnz
and
jl
and
imul
sbb
test
dec
pop
nop
daa
jno
mov
sub
je
outs
(bad)
mov
cmp
xor
mov
jnp
dec
ret
(bad)
arpl
pop
call
push
add
ja
retf
xor
fisub
outs
push
sub
jno
and
jp
pop
or
jmp
inc
cdq
mov
test
pop
mov
nop
jmp
lds
and
fwait
in
fs
or
sahf
inc
dec
mov
lahf
ins
mov
pop
lods
in
scas
scas
pop
mov
sub
pushf
inc
cmp
mov
xor
aad
xchg
aas
sub
mov
mov
sbb
adc
xchg
fnstenv
dec
xor
xor
fdivr
jecxz
sbb
mov
test
jp
dec
jo
test
pop
mov
mov
in
(bad)
repz
add
popa
(bad)
int3
jne
sbb
(bad)
push
fst
mov
inc
xlat
int
cmp
rcr
cmp
mov
mov
test
mov
inc
add
das
sub
sub
xchg
icebp
jo
mov
add
pusha
sub
(bad)
mov
in
ss
pop
xlat
loop
jmp
ficomp
fs
dec
jb
adc
add
cmp
str
cwde
setnp
or
aaa
call
mov
lods
fmul
imul
push
out
push
adc
test
enter
shr
push
(bad)
fcmovbe
call
inc
adc
fiadd
pop
ret
sub
sbb
in
loopne
inc
cmp
(bad)
cmp
iret
xor
mov
xchg
mov
mov
dec
test
mov
push
cli
(bad)
gs
sub
xlat
jmp
pusha
sub
fbld
movs
jnp
scas
arpl
ds
jb
sub
xchg
push
stos
les
test
mov
pop
mov
cmp
aad
pop
(bad)
inc
xor
popa
adc
jb
mov
test
push
jo
repnz
les
and
xor
inc
sbb
call
and
sub
daa
loopne
(bad)
fwait
test
xchg
stos
cmp
or
fcom
dec
(bad)
hlt
pop
mov
lods
inc
inc
pop
mov
lahf
add
mov
ret
das
ds
dec
xchg
cwde
xchg
jnp
mov
mov
int
retf
fst
mov
cmp
scas
pop
and
jnp
jb
lds
cs
cmp
lods
mov
sbb
enter
inc
arpl
mov
lods
dec
dec
arpl
jge
sbb
clc
or
leave
push
out
mov
jmp
jge
xor
ret
mov
(bad)
les
ins
mov
xor
shr
aad
inc
movs
test
mov
push
inc
xor
add
mov
ins
xchg
nop
std
jp
pusha
mov
fucom
inc
inc
push
pop
adc
stc
push
dec
test
mov
retf
ins
hlt
fist
daa
adc
jb
mov
jmp
add
sbb
inc
fmul
stc
and
in
dec
mov
jne
push
push
lock
and
inc
outs
xchg
cmp
ss
sub
xchg
in
xor
or
and
push
adc
xchg
xor
xor
xchg
repnz
ins
or
cmps
fild
jp
mov
jge
les
dec
test
xchg
iret
out
pushf
dec
cmp
sbb
imul
in
sub
pop
add
dec
xchg
inc
sub
js
ins
sub
test
aas
add
mov
stos
jp
cmps
adc
lds
fwait
hlt
pop
mov
(bad)
stc
rcr
lahf
push
cmp
in
sbb
pusha
out
jns
dec
add
cmp
cmp
aas
xchg
jbe
call
imul
push
adc
pushf
adc
popf
std
scas
loopne
or
call
or
adc
adc
popa
cmp
mov
cmp
sub
mov
fs
add
jge
in
lahf
sar
mov
ret
mov
into
and
pop
rcr
xchg
loopne
or
dec
push
and
mov
fucomi
mov
pop
std
jbe
dec
push
push
xor
loop
shr
mov
dec
mov
pop
and
fucomip
inc
(bad)
repz
test
pusha
pop
loopne
(bad)
arpl
pop
lea
sub
push
pop
hlt
lock
xor
out
xchg
pop
push
inc
aad
jg
mov
fs
mov
xchg
jmp
mov
addr16
jae
neg
cmps
test
inc
cmp
call
jmp
adc
sbb
(bad)
mov
pop
ror
adc
jae
aad
pop
and
mov
sbb
and
addr16
enter
leave
jmp
test
cmc
mov
add
or
scas
inc
or
fwait
(bad)
out
imul
enter
mov
xor
mov
pop
icebp
or
mov
push
aas
imul
add
out
aad
push
sub
pop
fs
and
repz
jecxz
mov
gs
out
hlt
loope
inc
mov
xchg
dec
leave
cs
adc
stos
fs
loop
icebp
jecxz
xor
loope
adc
pop
int3
rcr
xchg
popf
idiv
jmp
clc
clc
int
imul
adc
je
xlat
bound
mov
lods
aas
fstp
pop
jne
adc
ss
lea
in
nop
push
jle
adc
xor
in
pop
cdq
add
mov
mov
nop
cmc
loope
ds
mov
mov
or
push
add
fcmovnbe
mov
aas
nop
call
aam
nop
push
cmp
xchg
dec
or
in
dec
test
nop
(bad)
fbstp
loope
stos
stos
iret
sbb
xchg
add
push
neg
inc
jo
jne
sub
aad
and
pop
ss
push
ja
pusha
pop
pop
add
leave
dec
jp
sub
out
sahf
ror
cdq
mov
rcr
out
dec
sbb
popa
ffreep
jmp
test
mov
cli
repnz
aam
scas
pop
sahf
jp
adc
sbb
cmp
das
sbb
sub
push
ror
push
cmps
add
fcomp
cmp
and
mov
ds
push
cli
in
xchg
fst
dec
jg
xor
les
jae
cdq
jge
fidiv
mov
adc
retf
mov
jb
pop
aas
mov
test
std
retf
xor
pop
ja
fisttp
jnp
adc
pop
add
inc
mov
add
mov
rcl
sbb
iret
fwait
push
push
out
lock
and
pop
pop
lea
cld
or
jmp
outs
pop
push
inc
dec
nop
(bad)
lock
mov
xor
out
retf
add
pop
(bad)
inc
in
fstp
aad
iret
push
inc
xlat
aaa
fbstp
rcl
imul
ficom
pop
push
mov
dec
mov
jl
or
xor
xchg
push
inc
into
(bad)
add
sub
dec
sti
sbb
test
leave
adc
ins
je
xchg
xchg
jp
or
idiv
dec
push
(bad)
aaa
mov
push
push
loope
in
sub
imul
cmp
div
mov
add
ja
mov
jmp
jmp
es
xchg
xor
rcr
(bad)
out
xor
sbb
sub
dec
pushf
xchg
outs
std
add
out
rcl
nop
frstor
js
and
stos
fcomp
shl
push
cmp
std
mov
dec
and
mov
sbb
stos
stc
adc
jge
adc
popf
clc
test
je
inc
ret
push
xor
inc
popa
cmc
pop
sub
retf
dec
sub
out
ror
scas
cmps
(bad)
imul
sub
ins
dec
aaa
in
and
sbb
push
mov
les
dec
mov
jns
je
adc
shr
sbb
mov
outs
lock
add
fwait
or
addr16
les
js
dec
cmp
sbb
add
cmps
push
sbb
mov
push
jp
push
das
push
cmps
mov
adc
lock
xchg
fwait
inc
ret
jmp
fsub
cmp
add
call
hlt
sbb
push
shr
mov
in
popa
xchg
cld
pusha
mov
dec
dec
mov
xor
xor
jmp
mov
fild
add
and
lea
mov
mov
ins
int
sbb
xchg
(bad)
mov
movs
inc
je
lods
mov
mov
ja
and
jge
pop
ret
push
inc
add
push
sti
dec
xor
mov
pop
das
xchg
frstor
int3
scas
fwait
mov
lods
inc
mov
pop
mov
mov
daa
and
jmp
mov
inc
outs
je
out
push
and
push
add
xchg
addr16
aas
gs
not
push
ins
jmp
dec
sti
pop
into
mov
jecxz
arpl
icebp
xor
stos
ficom
mov
mov
and
push
mov
mov
lea
xor
and
mov
push
mov
push
daa
push
aaa
lods
loope
popa
push
jmp
pushf
inc
push
jge
fcomp
jl
retf
sar
mov
aas
lods
das
xor
add
pusha
(bad)
pop
popf
les
push
dec
pop
jne
mov
mov
xor
xor
xchg
sub
jo
shl
in
mov
retf
push
fwait
adc
mov
cmp
add
je
mov
inc
(bad)
test
xchg
sbb
cmps
inc
stos
cmp
cmp
jp
das
out
fwait
jno
retf
shl
dec
push
stc
rcl
push
stos
sar
jmp
or
retf
pop
lahf
pop
mov
or
add
cmc
aad
cmps
pop
pop
fimul
je
adc
repnz
fsubr
loope
push
repz
xchg
aas
xchg
pop
pop
retf
enter
je
push
and
push
xor
(bad)
cld
mov
mov
inc
nop
fstp
inc
push
adc
leave
or
bound
xchg
ret
cmp
loopne
stos
fnstenv
mov
and
push
xchg
push
retf
and
retf
or
fsub
cli
in
enter
lds
movs
dec
ret
fwait
cmp
fbstp
cmps
scas
push
jns
in
add
xchg
sub
adc
retf
iret
aaa
dec
push
sbb
(bad)
out
mov
or
movs
sub
and
int
out
sbb
jecxz
sub
movs
xchg
loop
or
lea
test
mov
add
out
add
imul
sub
and
mov
or
sub
pushf
leave
rcr
inc
mov
(bad)
jp
xchg
out
inc
(bad)
retf
dec
dec
xor
jns
inc
jbe
div
sub
adc
sbb
dec
xor
movs
sub
inc
xor
xor
jnp
inc
cmps
ja
ja
outs
push
inc
mov
retf
push
dec
out
jbe
out
mov
add
rcl
pop
jo
pop
jmp
int3
dec
lea
popa
mov
or
and
dec
mov
icebp
movs
mov
mov
inc
xlat
(bad)
xchg
ds
movs
and
scas
mov
xchg
test
inc
mov
js
jo
and
sbb
out
cmp
imul
adc
mov
sbb
ins
mov
cs
and
or
sbb
gs
push
rol
outs
jbe
(bad)
sub
btr
mov
stc
mov
stos
mov
mov
sbb
(bad)
push
xchg
xor
(bad)
jne
mov
jb
wrmsr
mov
mov
loop
into
fist
and
sti
test
sbb
add
adc
adc
dec
mov
dec
and
ror
cmp
mov
push
push
add
sbb
mov
rcr
jg
mov
add
stc
jge
(bad)
movs
daa
outs
xchg
jnp
mov
ror
xor
or
icebp
sar
cdq
pop
scas
mov
sbb
mov
jecxz
and
dec
mov
pop
enter
std
(bad)
not
inc
lock
add
movs
push
loopne
xlat
sbb
inc
dec
cld
dec
dec
lods
stc
jbe
int
xlat
push
sbb
pop
addr16
inc
ss
sbb
in
add
fadd
mov
pop
test
mov
std
in
icebp
jp
jo
imul
mov
mov
and
push
push
push
xor
dec
ficom
cmp
lds
inc
sub
loope
cmp
mov
xchg
sub
bnd
fldenv
lds
jecxz
inc
pusha
mov
or
imul
jl
push
cmovno
mov
pop
fs
adc
out
int
lds
inc
fidiv
cs
xor
loope
ret
loop
or
sar
mov
lods
jp
imul
push
int3
jo
cmp
inc
xchg
inc
xchg
mov
daa
aaa
lock
mov
arpl
data16
inc
jmp
xor
repnz
jno
mov
or
or
repnz
aam
sbb
retf
addr16
nop
imul
mov
mov
mov
push
jmp
xchg
clc
sub
push
lds
bound
xlat
repnz
call
(bad)
adc
sbb
xchg
pop
shl
or
call
cmc
mov
fwait
xchg
and
into
scas
in
add
mov
lds
lea
jle
cli
jno
mov
lds
outs
aas
push
cwde
(bad)
retf
add
jne
femms
mov
mov
rcr
sar
(bad)
fisttp
mov
push
add
xor
scas
repnz
mov
add
ret
neg
retf
cmps
mov
dec
mov
mov
dec
xchg
and
cmp
lahf
loop
adc
push
adc
fidivr
cmp
adc
ja
loope
inc
jnp
pop
cmp
cmp
shl
ror
cmps
lds
add
pop
mov
dec
inc
jl
mov
and
xchg
add
push
ins
rcr
sub
scas
fdivr
paddsw
sar
xchg
out
rol
stos
xchg
pop
mov
dec
sbb
pop
push
pop
xor
add
loop
pop
fwait
gs
push
neg
inc
dec
ins
retf
jns
dec
sar
(bad)
shr
ins
inc
rcr
lock
mov
dec
adc
adc
add
adc
push
jno
int
jbe
fadd
cmp
ret
jnp
mov
xlat
ror
enter
out
les
(bad)
mov
in
adc
dec
push
stc
cwde
sub
fldcw
adc
and
push
dec
mov
das
cmp
shr
or
mov
mov
or
add
and
mov
fsubr
ret
aaa
sbb
push
adc
mov
xlat
sub
add
push
stc
pop
(bad)
pushf
stc
and
cmp
dec
add
cs
mov
push
ds
movs
mov
and
mov
test
neg
std
add
jp
sbb
lock
jb
stos
pop
shr
(bad)
in
push
dec
popf
sbb
daa
into
pop
jmp
add
bound
adc
iret
lods
out
mov
clc
or
add
push
xchg
fbstp
pushf
jmp
jns
das
mov
push
mov
mov
stos
frstor
cwde
stc
(bad)
(bad)
push
or
pop
repz
out
sti
iret
pusha
shl
(bad)
in
pop
or
mov
pop
sub
jmp
gs
out
nop
jbe
adc
pop
xor
pop
add
stc
push
fwait
jo
adc
scas
mov
pop
lods
popf
shr
shl
aam
js
mov
push
jno
jecxz
(bad)
jmp
xlat
mov
mov
ins
cmp
mov
cmp
in
das
cmps
hlt
iret
test
push
dec
addr16
and
xor
push
and
push
or
inc
xor
retf
dec
dec
mov
cmps
ds
sub
sbb
push
mov
fldenv
mov
adc
iret
arpl
aas
gs
mov
in
nop
arpl
pusha
lds
(bad)
xor
sti
repz
dec
cld
fprem
cmp
jo
mov
cld
pop
pop
push
inc
mov
sbb
jge
fild
sti
(bad)
cmovno
fsub
lds
ins
mov
mov
movs
xor
movs
dec
cmp
mov
mov
inc
pop
cwde
out
mov
push
loope
inc
es
inc
rcr
jmp
shl
mov
dec
adc
ret
xor
jmp
int
inc
ret
(bad)
cmp
xchg
scas
mul
adc
leave
(bad)
call
xchg
inc
(bad)
bound
lahf
(bad)
fstp
enter
inc
xor
jge
lods
hlt
pop
fdiv
es
push
pop
cmc
pop
mov
push
xor
(bad)
(bad)
in
sbb
outs
dec
cmp
jmp
dec
fidiv
push
pushf
xchg
iret
aad
pop
mov
mul
or
in
and
jb
and
fidivr
xor
jp
neg
xor
and
dec
add
jg
test
fistp
xchg
dec
mov
jmp
sbb
push
mov
js
xchg
jae
mov
popa
xor
je
popf
cdq
cs
test
outs
sbb
nop
dec
ret
add
test
aaa
jle
adc
leave
xor
outs
jbe
sbb
mov
xchg
(bad)
stos
xchg
bound
xchg
or
push
dec
mov
cmp
cdq
retf
mov
inc
and
movs
rcr
jne
cmps
(bad)
push
(bad)
fld
test
mov
scas
add
rcl
ret
push
outs
iret
fadd
sbb
lods
mov
outs
test
add
mov
ret
mov
div
out
js
pop
adc
scas
cmp
mov
pop
fild
xchg
jmp
sbb
sub
loop
fldenv
push
popa
cmovge
or
push
test
bound
mov
sbb
dec
sbb
std
ins
addr16
inc
xchg
fucomip
mov
cmc
mov
sub
and
mov
add
or
sub
loopne
mov
fistp
sub
mov
popa
push
push
adc
ins
jp
dec
and
jp
or
outs
jle
or
inc
mov
inc
push
pop
jnp
add
jae
ficomp
arpl
test
test
repnz
dec
jp
and
mov
jl
aas
or
aad
adc
rcl
enter
mov
cmp
inc
or
outs
jno
cmp
aad
addr16
leave
mov
mov
xchg
sbb
mov
xor
adc
or
jmp
and
test
add
repz
mov
retf
mov
(bad)
call
adc
push
pushf
sub
xchg
inc
sti
jmp
mov
(bad)
std
push
mov
and
in
xchg
dec
push
ja
mov
imul
mov
sbb
addr16
add
adc
inc
out
pop
fild
or
sub
jb
push
(bad)
loop
sbb
pusha
pop
push
stc
jmp
ficomp
imul
xor
sub
pop
jno
clc
retf
rol
mov
cmp
add
dec
add
adc
das
xchg
shl
cmc
dec
mov
fist
pop
and
ins
add
sub
pop
and
adc
shl
ret
adc
add
sbb
push
ins
xchg
dec
repnz
mov
jnp
fmul
test
xchg
xor
stc
and
add
sahf
rcl
lods
lock
jb
push
pop
ficom
fisub
cmp
push
dec
jae
call
clc
sar
jnp
mov
aad
lods
mov
adc
or
mov
dec
mov
or
test
fcmovne
push
mov
test
sub
adc
popa
rcl
mov
jns
popa
and
(bad)
into
aas
arpl
cmc
inc
popa
stc
dec
popa
and
add
shl
xchg
push
stc
or
inc
mov
inc
adc
and
dec
outs
push
mov
rcr
mov
fdivr
xlat
mov
jge
jl
iret
ret
jno
ret
shl
ror
in
dec
mov
in
jns
fidiv
scas
sub
jp
pushf
dec
lea
test
pop
lea
dec
aam
jl
sub
adc
mov
fs
cmps
and
pop
jns
clc
mov
retf
shr
add
out
(bad)
push
cmp
iret
test
repz
das
pop
in
outs
sahf
jmp
sbb
or
mov
cmp
mov
test
repz
push
cmp
loopne
imul
(bad)
adc
push
loope
sub
mov
or
mov
loop
addr16
inc
jae
in
push
loope
pop
add
mov
shl
xchg
in
pop
mov
clc
or
popf
call
add
inc
call
scas
aas
dec
and
xchg
es
and
fadd
mov
mov
and
xchg
fisttp
cmp
push
and
mov
daa
(bad)
cwde
inc
push
clc
xchg
cmp
xor
dec
ficom
jb
inc
inc
imul
xchg
and
test
std
cli
out
mov
push
dec
or
aam
xchg
cwde
out
add
sar
jg
nop
jg
pop
cmps
hlt
movs
out
int
xchg
push
cmp
push
cld
into
inc
xor
out
jl
mov
or
not
cs
add
ins
inc
xchg
cmps
push
xor
div
rcr
xor
ret
fdivr
arpl
mov
xor
dec
push
jne
(bad)
adc
xchg
cli
xchg
push
sub
ins
push
sub
or
rol
and
mov
adc
scas
pushf
je
mov
xlat
xor
mov
sbb
adc
mov
and
out
jo
lock
in
ss
std
iret
adc
cs
scas
xor
(bad)
icebp
aaa
ins
mov
mov
mov
inc
sbb
(bad)
jne
outs
stos
mov
add
jmp
or
mov
sub
and
test
dec
dec
mov
shl
mov
lods
dec
imul
sahf
pop
push
cmps
inc
int3
sbb
mov
xor
out
inc
add
mov
rcl
mov
pusha
xchg
pop
pop
mov
cmp
inc
stos
pusha
mov
test
iret
lods
push
loopne
in
popa
cmp
sbb
div
mov
scas
sub
packsswb
mov
inc
mul
inc
int
adc
and
xchg
lea
aas
push
rcr
les
cmp
pop
mov
out
adc
sub
jno
dec
push
repnz
xchg
push
add
push
push
aam
or
stos
test
in
inc
clc
ret
aam
retf
or
or
test
shl
(bad)
dec
sub
mov
or
ins
aam
add
or
imul
and
fnsave
aam
outs
and
add
out
pop
jmp
aad
popf
mov
mov
jge
pop
mov
sbb
ficomp
imul
and
fs
fiadd
inc
div
add
arpl
in
or
xchg
fldenv
jne
push
push
dec
movs
cwde
and
int3
push
out
add
sub
mov
rcl
inc
dec
xchg
jl
lock
aad
push
sti
ins
push
push
cmp
cmps
adc
push
lods
inc
or
mov
test
es
stc
cmp
mov
jmp
inc
fdivr
stos
inc
dec
pop
push
es
stos
mov
outs
push
aaa
sub
jle
aas
bound
mov
popa
ret
or
push
cmps
cld
pop
mov
mul
movs
pop
ret
(bad)
jle
loop
inc
mov
push
push
inc
or
pop
loope
das
scas
retf
xor
retf
into
aaa
mov
(bad)
and
and
mov
test
test
fs
xchg
jne
mov
fcomp
in
inc
cld
std
xor
loopne
cmp
cmp
cmp
inc
sub
mov
ss
int
adc
sub
xor
fmul
movs
shl
(bad)
data16
loope
js
popf
arpl
(bad)
jbe
dec
inc
push
inc
fisubr
in
xor
push
in
hlt
push
adc
add
cmp
test
mov
cmc
aas
mov
shl
(bad)
or
push
cmc
clc
fwait
cmp
ror
scas
xchg
pop
call
or
repnz
sub
jl
cli
cmc
xlat
sbb
mov
and
push
call
test
sbb
lea
xor
push
inc
repz
inc
mov
sub
push
lods
ret
and
cmp
retf
adc
sbb
rcr
mov
xchg
sbb
sti
std
mov
(bad)
sbb
int
xor
sar
mov
fst
mov
pop
adc
push
daa
sbb
push
popf
fld1
adc
sti
pop
scas
not
imul
fdivrp
js
pop
retf
push
jl
sbb
test
adc
mov
sbb
bswap
adc
mov
jmp
fldenv
call
cld
daa
sbb
and
repnz
xchg
gs
jl
sub
inc
hlt
pop
inc
and
daa
jo
pop
dec
mov
add
mov
or
sub
out
stc
mov
push
cmp
push
int3
loope
fiadd
jle
and
cmp
adc
or
fcmovbe
gs
add
ins
leave
jge
(bad)
pop
fcmovnbe
repz
xor
addr16
xchg
mov
sbb
ret
xchg
fsub
std
rcl
movs
(bad)
sbb
fiadd
mov
sbb
(bad)
xchg
mov
rcl
in
call
add
and
mov
neg
cmps
inc
inc
push
cmps
adc
ins
outs
(bad)
and
push
jbe
(bad)
cdq
sbb
xlat
pop
movs
out
cmp
pop
xor
in
push
jae
mov
fld
(bad)
(bad)
data16
sub
push
popa
add
sbb
ds
call
icebp
or
mov
lahf
in
out
sti
sbb
(bad)
shl
std
add
fld
shl
mov
mov
add
jge
neg
cmps
cmp
mov
ins
ret
cwde
cmp
ret
and
outs
aad
(bad)
adc
fs
push
inc
push
cmp
ret
push
cmc
adc
aas
push
mov
mov
adc
shl
mov
inc
rcl
sahf
je
sub
std
jge
cmps
dec
repz
mov
xchg
pusha
in
pop
or
popf
enter
mov
sar
(bad)
(bad)
(bad)
mov
rcr
movs
or
adc
xchg
fsubp
enter
inc
ret
fisubr
cli
fcomp
mov
push
dec
adc
jns
jl
int3
add
or
movs
inc
stos
push
test
ss
sti
inc
int3
xor
aaa
nop
xchg
stc
mov
iret
push
ss
jnp
pop
daa
sbb
gs
pop
sub
lods
or
gs
retf
pop
out
xor
jmp
lock
sub
loopne
fucomip
pop
arpl
int
push
mov
call
rol
pop
int3
rcr
shl
sbb
dec
mul
pop
(bad)
cld
inc
cmp
xchg
ins
inc
das
push
loopne
aas
aad
xchg
push
test
pop
lahf
pop
dec
pop
loope
add
call
cmp
outs
aam
xor
shr
sbb
push
jns
loop
fstp
push
in
xchg
xor
cmp
repnz
daa
mov
jne
jbe
jmp
dec
sbb
adc
dec
jo
(bad)
fisub
jmp
(bad)
call
xor
mov
pop
or
aad
push
mov
das
cmp
aam
and
dec
ret
xor
fdiv
inc
dec
es
jo
xor
jle
call
(bad)
pushf
sti
retf
call
or
stos
jae
xor
cmp
inc
inc
mov
sbb
fcom
dec
popf
inc
push
adc
loopne
js
or
add
mov
movs
inc
out
scas
(bad)
jnp
or
xchg
cwde
mov
jae
arpl
jg
and
fst
or
fcmovbe
std
mov
sbb
out
cmp
push
xchg
les
ret
bnd
push
jbe
retf
rcl
inc
jge
lods
shr
lods
sahf
or
mov
cdq
cwde
and
push
xchg
push
sbb
jg
and
ror
cld
cwde
(bad)
mov
repz
mov
add
pop
add
les
test
mov
call
jb
in
outs
xor
popf
inc
neg
aad
lods
xchg
test
mov
test
mov
in
fcomp
sahf
lods
adc
sub
inc
mov
inc
rcl
(bad)
push
sbb
cmp
lds
test
js
imul
sbb
push
push
hlt
lods
jl
ret
dec
out
jnp
xchg
(bad)
inc
lods
adc
aad
shl
inc
repz
mov
xlat
test
cmp
sbb
adc
in
push
cmps
fbld
inc
add
mov
jg
in
jbe
(bad)
(bad)
or
(bad)
dec
jle
call
cmps
push
adc
inc
jecxz
xchg
in
mov
ret
cmp
dec
adc
fcmovnu
push
sub
retf
test
and
jg
loopne
mov
sti
outs
xor
daa
mov
stos
push
enter
daa
inc
xchg
mov
xchg
out
sub
(bad)
shr
xor
aam
arpl
pushf
adc
push
push
out
mov
loope
aad
xchg
das
daa
cmp
mov
sub
pop
daa
in
imul
out
jecxz
mov
arpl
arpl
sahf
nop
cmc
push
mov
fisub
sti
add
scas
xchg
mov
sub
fisubr
aas
sbb
repnz
pusha
sbb
stos
es
mov
cmp
jae
mov
(bad)
xchg
mov
or
ins
nop
ja
cmp
nop
lods
adc
int
jb
test
xor
dec
lahf
adc
xchg
inc
jb
and
ja
jns
out
cmp
jne
int
shl
mov
lds
mov
jbe
stos
jne
cdq
add
add
imul
iret
inc
xor
test
dec
dec
aaa
aaa
and
pop
add
dec
(bad)
aas
ins
cli
mov
mov
cmc
and
pop
rcl
stos
adc
xchg
inc
mov
fnstcw
cdq
mov
adc
mov
cmp
push
adc
or
mov
inc
not
adc
in
loopne
popa
cmps
mov
(bad)
sar
xor
bound
adc
jecxz
adc
iret
add
ss
cld
mov
mov
cmp
cmc
lea
xor
sbb
push
shl
dec
mov
lock
hlt
sahf
daa
cdq
out
jbe
dec
daa
pop
imul
mov
clc
jle
or
xchg
addr16
ds
fucomip
enter
adc
jno
arpl
arpl
sar
inc
or
mov
int3
push
loopne
add
push
scas
pop
or
jle
pop
jne
push
pop
or
or
push
retf
cmps
imul
ror
xor
call
add
xchg
xlat
push
pop
lods
jne
mov
xchg
leave
lods
and
cmp
cmps
psubusw
cmps
jecxz
rcl
movs
mov
mov
and
aam
push
jmp
icebp
sub
out
or
lods
ins
fcmovnu
adc
sub
adc
jns
(bad)
push
shl
mov
loope
outs
call
mov
ins
loop
aam
test
mov
cmps
mov
cmps
jl
std
cmp
ret
mov
fcomp
lahf
add
add
cmps
(bad)
sub
sub
xchg
and
shl
stos
jae
(bad)
fsubrp
add
inc
mov
mov
fnstsw
xchg
xchg
neg
jo
pusha
jmp
jmp
and
ficom
mov
aas
neg
lea
or
cmps
xchg
add
fild
pushw
shl
mov
or
test
dec
mov
loope
adc
and
dec
jmp
sbb
cmp
mul
inc
outs
(bad)
push
out
mov
add
inc
retf
out
stos
inc
retf
cmps
fs
std
test
pop
dec
int
dec
lock
pushf
mov
pop
or
sbb
dec
(bad)
mov
movs
or
cdq
pop
mov
mov
adc
aas
jmp
sahf
cmp
push
inc
fcom
shl
mov
scas
xchg
lock
imul
jo
mov
sub
jmp
add
fs
bound
adc
dec
cmp
and
fs
pop
adc
(bad)
and
jl
cs
ja
outs
mov
adc
ins
push
and
mov
mov
cmp
div
add
dec
cmps
dec
mov
lea
pushf
scas
scas
shr
sub
jb
inc
pop
enter
dec
ins
out
mov
ret
imul
repnz
xor
or
xchg
dec
mov
ins
and
fld
in
ss
test
mov
call
je
jo
dec
pop
mov
add
rcl
call
adc
cmp
cmp
retf
xchg
ss
xchg
mov
and
loope
jmp
push
mov
movs
stos
fwait
stos
idiv
mov
fs
test
(bad)
sub
xchg
int3
(bad)
cmp
fwait
push
push
bound
stos
sti
push
inc
xlat
inc
loop
imul
or
arpl
rol
jmp
mov
js
jne
std
or
jno
lea
cmp
outs
cs
aaa
jmp
dec
mov
fs
inc
or
or
scas
pop
jbe
push
xor
and
call
mov
xor
loopne
out
dec
bsf
cmp
dec
ins
addr16
adc
imul
xchg
pusha
sub
sahf
lods
cmp
jne
scas
dec
xchg
test
cmp
jbe
arpl
xor
xor
push
pop
xor
sbb
or
ret
xor
inc
push
jns
sub
xchg
sub
mov
cmp
jbe
xrelease
scas
stos
cs
mov
lahf
xor
jns
mov
inc
cli
pop
inc
lods
ins
in
jns
shl
xor
adc
xchg
es
sub
les
scas
mov
rcl
call
sbb
stc
sbb
in
push
ds
and
icebp
sub
or
es
mov
out
dec
jge
arpl
jmp
mov
sbb
and
out
pushf
push
inc
lods
fucomip
jnp
fimul
cs
pusha
xor
aad
stc
aas
shr
test
pop
pushf
aad
scas
test
rep
mov
mov
mov
ret
cmc
pop
xor
and
out
lahf
mov
mov
adc
mov
fbstp
xlat
mov
fst
leave
mov
cmp
mov
icebp
sbb
push
inc
fs
and
es
sbb
mov
lds
pop
jg
dec
(bad)
lods
aas
or
sahf
xlat
push
jl
mov
sbb
push
out
xchg
jecxz
xchg
enter
int
int3
push
scas
xor
push
mov
adc
and
jp
dec
mov
rcl
pop
pop
mov
out
stc
stc
add
aaa
out
inc
xor
push
push
rcl
fsubr
sub
or
xor
sbb
dec
xchg
jo
ret
mov
push
and
out
fucomi
fstp
xor
(bad)
xor
out
mov
add
cli
inc
enter
jl
add
(bad)
cmp
jp
ficom
loope
cmp
pusha
jp
mov
xor
dec
sub
xor
sub
arpl
mov
push
shr
xor
cmps
pop
(bad)
cmps
ror
or
(bad)
pushf
cmp
movd
or
mov
xor
or
mov
add
dec
mov
out
call
or
cmp
mov
cld
ds
(bad)
push
mov
dec
and
(bad)
iret
add
add
add
test
out
pop
jp
jno
sbb
cmp
imul
mov
inc
shl
aam
dec
daa
pop
add
enter
jmp
loope
scas
inc
inc
repz
inc
sbb
mov
mov
ins
xor
jle
retf
jmp
cmp
(bad)
xor
mov
xchg
push
out
jle
xchg
mov
mov
pop
(bad)
mov
(bad)
arpl
aam
(bad)
fisub
retf
adc
pop
(bad)
jmp
xor
cmp
adc
jl
test
(bad)
xchg
xchg
aaa
aas
dec
lods
mov
xchg
int
mov
stos
push
stos
js
and
pop
adc
iret
mov
adc
js
scas
jno
cmp
jp
fs
add
sbb
call
ret
out
out
mov
or
sub
movs
add
shl
mov
xor
sbb
dec
adc
inc
xchg
dec
inc
mov
movs
loope
xchg
mov
mov
clc
jg
and
cmp
mov
test
dec
and
mov
sbb
repnz
pop
pop
add
shl
hlt
hlt
push
fmul
fdiv
add
jno
or
loopne
xchg
mov
(bad)
fistp
out
ins
retf
sub
popa
fistp
sbb
(bad)
loop
sahf
(bad)
loope
dec
and
mov
(bad)
and
stc
sbb
xchg
test
mov
xor
hlt
retf
xchg
sub
retf
or
push
or
jge
clc
nop
cmp
mov
jmp
aad
add
call
xchg
or
movs
jae
in
inc
mov
xchg
xor
add
scas
mov
lods
fidiv
cmp
dec
sbb
loop
and
imul
(bad)
jecxz
xchg
xor
jp
(bad)
rol
loopne
pop
push
aam
xchg
lods
inc
mov
sti
popa
sbb
jae
je
push
pop
jnp
cs
std
test
std
addr16
out
jnp
sti
xor
push
xlat
xchg
xchg
lods
inc
loop
sub
idiv
and
popf
dec
fs
in
sub
out
adc
into
jne
sar
loop
mov
and
pop
mov
mov
and
and
mov
add
mov
push
shr
test
pop
imul
pusha
aam
fsubr
sub
pop
inc
xchg
call
pop
ss
into
sub
mov
inc
jae
push
pop
push
shr
mov
and
pop
mov
inc
rol
jb
mov
out
cwde
stos
pop
sub
and
cmps
jae
fmul
dec
mov
cld
test
dec
sbb
retf
das
popf
push
rcl
or
je
rol
mov
mov
js
xchg
in
mov
lods
mov
fwait
or
push
retf
sub
pop
jbe
xlat
jge
push
dec
out
(bad)
je
(bad)
neg
ins
inc
cwde
ja
cmp
push
pop
lods
rol
cmps
retf
pop
test
cmp
retf
pusha
loop
jne
addr16
or
xchg
enter
call
pop
cld
retf
fisubr
cmp
aas
mov
pop
hlt
xchg
cs
inc
mov
lea
jnp
mov
add
and
xchg
mov
push
xor
lahf
add
push
(bad)
icebp
ftst
retf
test
clc
sbb
mov
cmp
shr
cmp
pop
dec
or
push
loopne
jae
push
sub
adc
jb
call
mov
xchg
sahf
jmp
shl
ss
or
cmp
dec
sub
fxch
clc
lahf
add
xchg
stc
dec
push
gs
call
pop
push
adc
dec
jo
jg
rcr
shl
out
js
mov
imul
pop
mov
shr
(bad)
mov
ins
cwde
int
leave
mov
das
jb
mov
cmp
bound
pushf
mov
or
pop
cs
gs
pop
jle
pop
mov
ins
push
outs
sbb
sbb
dec
inc
test
ins
lods
cmp
mov
not
xchg
pop
inc
cs
add
lods
loopne
cdq
cmp
push
push
leave
jbe
and
xchg
das
lods
xor
dec
cmp
ins
dec
addr16
inc
aad
outs
mov
inc
xchg
movs
sar
dec
popa
aas
and
dec
ret
mov
sbb
or
jbe
xchg
xchg
mov
ret
mov
lock
jno
mov
sub
mov
ret
fnop
pop
mov
ficomp
test
push
loope
and
or
cmp
mov
and
sub
int3
ins
(bad)
shr
mov
push
iret
jmp
and
adc
push
(bad)
js
fscale
cs
mov
push
cli
jae
popf
mov
jmp
gs
push
(bad)
js
cs
jbe
push
mov
cli
push
je
out
cmps
fcmovnbe
or
in
jae
outs
movs
out
inc
lods
mov
jo
popa
mov
and
jo
mov
push
xchg
(bad)
mov
repnz
ror
pop
ror
daa
and
frstor
out
pop
fnstenv
xor
fiadd
daa
mov
adc
test
jo
out
inc
out
mov
sahf
stos
cmp
(bad)
test
ds
mov
jge
push
sub
dec
stos
shr
sub
test
xchg
repz
call
pop
push
mov
mov
rcr
xor
mov
pop
sbb
xor
xchg
add
fistp
push
sub
inc
jne
mov
popa
push
(bad)
mov
jmp
xor
push
popa
mov
gs
popa
or
sahf
cmp
pop
mov
je
icebp
add
and
mov
xchg
rcl
push
or
rol
loope
dec
out
add
fld
pop
inc
sub
mov
repnz
sahf
add
xchg
xchg
std
mov
add
sbb
not
cli
call
adc
vprotq
xchg
mov
ja
and
xchg
ficomp
fist
mov
(bad)
in
push
bnd
test
or
repnz
jle
jp
dec
rcl
ret
cmps
xchg
mov
pop
add
xchg
mov
out
aaa
mov
imul
cwde
lods
and
mov
inc
(bad)
and
std
call
test
enter
repnz
iret
jge
sub
in
pusha
fwait
icebp
in
int
ins
data16
pop
test
sbb
xchg
jle
hlt
and
sbb
lds
pop
cmc
call
mov
or
outs
std
sbb
(bad)
cmp
xor
js
movs
xchg
outs
fstp
mov
lods
xchg
ds
mov
stos
mov
aad
push
cmp
pop
movs
js
mul
cmp
push
or
mov
leave
xlat
shr
shr
cdq
ds
mov
inc
fdivp
pop
lds
jg
movs
enter
hlt
jg
xchg
daa
shr
add
jbe
ret
inc
mov
shl
mov
sbb
(bad)
test
xor
cdq
adc
or
sub
xchg
pxor
or
sub
in
mov
cld
test
and
sub
mov
jo
mov
dec
pop
cdq
test
in
xlat
inc
pop
js
inc
dec
fcomp
dec
sub
test
jns
xchg
sti
inc
adc
xor
scas
adc
and
add
shl
inc
sub
or
mov
jmp
dec
inc
push
add
rcr
mov
and
dec
imul
scas
repz
adc
jge
test
inc
mov
jo
ds
rcr
(bad)
inc
fwait
mov
xchg
ror
cmc
sub
retf
hlt
out
movs
inc
movs
push
or
mov
arpl
sub
not
nop
aam
push
popf
mov
jo
jb
sbb
fcomp
dec
mov
mov
call
ja
inc
dec
pop
into
je
xchg
pop
sub
adc
mov
or
fbld
stos
and
ja
sbb
cmp
or
stos
call
iret
fcomp
loop
leave
sbb
xchg
dec
jge
pop
jno
cmp
loop
mov
push
jp
clc
pusha
ins
ja
mov
inc
or
cs
je
ja
test
lock
jg
mov
lahf
mov
sbb
fcomp
in
faddp
iret
jg
in
les
sbb
sub
iret
ret
pusha
inc
sub
jo
mov
loopne
bound
jnp
mov
xchg
mov
arpl
pop
cmps
xor
push
or
in
mov
aam
ret
rep
mov
pop
out
popa
sbb
mov
or
xchg
mov
jecxz
and
pop
rol
dec
mov
push
dec
dec
mov
mov
jge
and
dec
popa
(bad)
jnp
sbb
test
jns
mov
aas
jb
or
inc
imul
neg
outs
int
inc
mov
adc
inc
push
movs
ret
push
out
cmp
pop
sub
scas
mov
xchg
int
fnsave
(bad)
xchg
mov
iret
rcr
cmp
push
add
add
into
or
test
xor
sbb
mov
mov
lds
mov
fmul
mov
ror
jno
push
sbb
mov
imul
pop
sbb
mul
stos
push
les
rol
lods
push
gs
inc
inc
jl
iret
sar
test
(bad)
out
repnz
xlat
push
push
push
jmp
dec
fnstcw
mov
movs
or
xchg
mov
mov
xchg
sar
or
and
sub
mov
es
shl
fsubr
movs
imul
(bad)
mov
sbb
lahf
lods
xor
push
add
(bad)
pop
push
loope
dec
sbb
xor
cld
jle
(bad)
rcr
jecxz
add
lahf
lock
inc
test
cmp
xchg
mov
in
in
push
sub
mov
cmps
std
or
mov
sbb
mov
mov
inc
out
pop
in
pop
xor
mov
ss
rcl
jb
test
int3
stos
dec
(bad)
popa
sub
xchg
pop
into
jg
imul
sub
cdq
cmp
test
ins
mov
mov
xor
mov
loopne
xchg
sar
enter
inc
aaa
or
xchg
xor
shr
out
and
add
shl
mov
xor
dec
fisttp
clc
cmp
add
mov
cmp
frstor
xchg
inc
sub
call
int3
retf
sbb
sbb
call
mov
ins
imul
mov
inc
xchg
jecxz
pop
push
xchg
xchg
bsf
or
mov
(bad)
or
out
xchg
add
sub
inc
pop
dec
out
mov
inc
repnz
dec
jge
dec
xchg
and
loope
inc
pop
push
jno
out
fild
mov
inc
iret
daa
ficomp
inc
scas
sbb
mov
sbb
cmp
xor
pushf
lods
mov
fist
inc
lods
test
push
push
icebp
div
dec
cmp
inc
inc
add
and
fist
adc
imul
(bad)
out
shl
sub
mov
add
xlat
arpl
xor
sub
xchg
cli
in
stos
scas
sbb
adc
call
mov
lea
xor
call
push
and
add
add
jo
jbe
xor
mov
stc
mov
xchg
aaa
xchg
and
call
mov
cmc
arpl
test
mov
stos
xor
fsubr
mov
mov
sub
xor
pop
cmp
mov
mov
ins
pop
(bad)
pop
out
xchg
xlat
xchg
fnstcw
test
call
and
ja
pop
mov
lahf
xchg
or
and
mov
fisttp
dec
sub
stc
and
stos
jmp
(bad)
outs
mov
sub
mov
mov
lods
iret
mov
ficomp
cmp
push
push
cmp
aas
int3
sbb
jecxz
div
fmulp
add
push
sub
cmps
js
jmp
shl
sbb
stos
into
xor
inc
int
add
and
jecxz
das
sub
pop
add
leave
les
cmc
stos
dec
fistp
push
sub
repnz
push
adc
call
sub
test
xchg
loope
les
sub
aad
inc
push
and
fwait
movs
daa
xor
cli
out
sub
fistp
popa
fwait
mov
pop
neg
fld
nop
cmps
or
call
inc
iret
dec
jns
sti
mov
inc
ja
mov
adc
enter
mov
in
xor
mov
retf
sub
xor
(bad)
sti
fnstsw
jg
loop
push
dec
mov
adc
aas
int3
sub
(bad)
cli
fs
popa
mov
in
xchg
loope
ss
xor
jo
add
sub
mov
mov
fld
lahf
adc
js
and
add
xor
xor
stos
xor
push
add
or
out
pusha
mov
pushf
sub
cmp
imul
(bad)
or
jge
fs
jmp
loope
jmp
push
adc
outs
dec
xchg
aaa
cmc
mov
add
arpl
fwait
shl
(bad)
nop
pushf
inc
popa
mov
pop
repnz
ret
cmp
mov
pop
mov
fisub
js
pusha
lds
mov
out
xchg
sub
push
push
imul
das
mov
outs
imul
out
add
push
xchg
ins
ds
mov
in
not
inc
stos
pop
(bad)
aaa
out
into
rcr
jp
(bad)
lea
lods
data16
stos
out
stos
xor
std
sub
rol
cmp
jle
jnp
pop
shl
(bad)
cmp
dec
shl
mov
outs
out
rol
lahf
jle
lahf
lods
lock
pop
xchg
call
mov
je
push
les
mov
mov
xor
in
push
loop
or
dec
dec
ret
mov
test
lods
int
int3
test
(bad)
jmp
(bad)
rcl
pusha
pop
jg
gs
arpl
sub
aad
mov
imul
in
out
(bad)
inc
test
push
loope
sub
ds
fs
lea
inc
movs
stos
or
or
xchg
push
jge
sbb
(bad)
adc
ror
push
adc
dec
out
jns
(bad)
mov
mul
xor
inc
mov
out
in
pusha
xor
sbb
fidiv
rcr
js
(bad)
cmp
(bad)
retf
cmps
add
retf
icebp
fs
aad
push
ds
mov
mov
loope
mov
ins
ret
adc
ds
xchg
jmp
sti
xor
mov
rcr
sbb
popf
push
(bad)
jo
lahf
retf
cmps
rcr
mov
inc
imul
test
int
neg
nop
outs
adc
(bad)
and
lock
mov
in
pcmpeqw
retf
js
ror
dec
(bad)
xor
pop
mov
cli
add
cmps
push
repnz
pop
mov
jns
xlat
sar
mov
sub
and
fs
leave
daa
cmps
and
sti
adc
dec
ficomp
adc
out
test
mov
adc
mov
jmp
adc
pushf
xor
and
je
je
xchg
push
sub
xchg
xor
push
jle
or
int
sbb
fnclex
fild
cdq
retf
pop
mov
ds
cdq
jae
mov
xor
call
xchg
out
jbe
adc
loope
in
inc
add
shr
adc
cmps
jmp
mov
pop
ffree
popf
and
pop
retf
sahf
dec
jae
jno
es
movs
fstp
push
jns
sahf
stos
xchg
repz
aas
imul
aam
cs
cmp
jbe
jnp
add
mov
push
or
pop
or
push
(bad)
sbb
push
push
pop
or
add
std
xchg
mov
sub
or
aaa
ins
sahf
js
inc
lahf
mov
stos
xor
push
adc
push
add
push
mov
mov
lea
lods
mov
ja
pop
stc
inc
int3
pop
ret
mov
fidiv
xor
stos
xor
adc
ror
loope
mov
call
dec
jge
xor
push
adc
jo
pop
retf
fistp
test
das
inc
cmp
push
and
aaa
int
mov
xlat
pop
iret
dec
retf
and
push
mov
and
movs
sub
push
cs
shl
mov
aam
repz
dec
inc
in
mov
inc
sbb
or
push
cmp
xor
mov
sub
inc
icebp
pop
lds
jo
jo
lock
or
pop
push
(bad)
dec
loop
lock
(bad)
(bad)
xlat
je
movs
jge
stos
cmp
and
jne
cmps
cmps
rcr
ficom
or
or
inc
pslld
in
ja
lods
and
and
add
(bad)
cmc
loope
xchg
pop
add
sbb
push
rcl
xchg
adc
imul
mov
dec
xchg
jae
xchg
inc
xor
xchg
test
nop
and
dec
adc
repz
mov
cld
sub
sbb
jnp
clc
mov
mov
call
pop
mov
add
pop
push
in
xchg
stos
addr16
adc
ror
loopne
dec
xor
push
add
mov
aaa
int3
addr16
(bad)
cli
mov
je
mov
push
mov
outs
call
repnz
sub
(bad)
mov
arpl
movs
rcr
xchg
dec
sbb
add
bound
sbb
popa
mov
les
(bad)
jbe
fs
les
cs
ret
jae
scas
dec
das
(bad)
jne
mov
mov
fdiv
out
mov
add
(bad)
xchg
sub
ret
cwde
fsub
ins
jg
pop
leave
push
jle
or
in
jmp
mov
outs
cli
pop
cld
push
imul
call
push
xor
pop
aaa
lds
sbb
cwde
mov
out
mov
movs
adc
or
fwait
aas
sbb
cmc
lea
inc
mov
xchg
cmp
mov
xchg
enter
pop
or
xor
xor
xor
movs
(bad)
aad
sub
scas
inc
xor
add
lahf
xchg
add
fadd
or
ror
mov
test
pop
inc
pusha
adc
sub
and
stos
push
and
das
jl
or
scas
test
push
sub
mov
ja
retf
out
add
(bad)
cmc
fist
xchg
clc
xchg
inc
(bad)
popf
mov
in
cs
pop
pop
stos
outs
and
sti
add
fimul
jle
cwde
xchg
mul
or
mov
mov
xchg
and
out
ret
retf
aam
dec
jmp
jo
inc
pop
retf
stos
mov
adc
pop
xor
sub
shl
test
retf
add
imul
mov
cld
dec
ret
movs
into
mov
push
arpl
nop
pop
repz
lods
jge
cmp
and
shl
ficom
pop
adc
mov
out
inc
sub
(bad)
in
sbb
pop
repz
addr16
sahf
or
lea
inc
add
xchg
jns
rcl
cmps
fs
cmovp
fdiv
jne
scas
sbb
pusha
sub
jo
fisttp
and
pop
scas
jl
cld
or
cmp
push
es
int
push
adc
xchg
rcr
jmp
push
pop
mov
scas
and
push
int
jnp
in
rcl
nop
xlat
(bad)
add
push
call
pusha
aam
push
mov
push
and
sbb
mov
inc
cwde
in
pop
cs
cmp
mov
fs
push
xchg
xlat
jl
leave
ja
enter
out
inc
ja
jle
cmc
jns
cmc
fdivr
jp
ror
dec
sbb
dec
dec
lahf
icebp
jg
add
xchg
call
popf
and
sub
push
sahf
jmp
pop
inc
jae
mov
in
test
nop
jge
add
mov
pop
shr
jl
daa
adc
scas
pop
mov
test
test
push
pop
or
sub
inc
aas
dec
cs
xor
mov
push
dec
ds
aam
or
and
jmp
add
in
inc
mov
(bad)
gs
mov
in
and
in
gs
mov
fisttp
inc
mov
lea
ins
mov
js
bound
cs
dec
jl
or
(bad)
mov
popf
jae
push
mov
repz
outs
in
sbb
dec
and
fcom
pop
mov
jmp
pop
fcmovu
call
push
mov
pop
mov
in
ins
in
cmp
push
mov
test
arpl
add
mov
push
cmp
in
int
stos
dec
cmp
jns
stos
ins
loop
push
ret
xor
mov
and
xchg
sub
push
std
pop
movs
sbb
int
dec
add
ret
xchg
mov
mov
daa
xlat
or
push
aaa
and
mov
add
and
cwde
adc
call
shl
rcr
out
cmp
push
imul
pop
pop
push
mov
or
dec
pop
xchg
repz
push
outs
pop
(bad)
sub
xor
inc
add
leave
push
push
ja
adc
jae
(bad)
push
inc
test
scas
or
test
dec
sub
pop
cdq
stos
xchg
popa
addr16
mov
sub
xor
push
jl
sbb
pusha
mov
mov
sbb
rcl
jae
push
cmp
xchg
outs
cmp
ficomp
dec
xchg
js
popf
ss
int
pop
inc
cmps
mov
dec
retf
sbb
dec
idiv
outs
or
out
sub
vpackuswb
ins
pop
jg
cwde
cmp
cli
mov
mov
outs
push
dec
into
mov
out
(bad)
or
test
aas
sub
test
push
push
xor
add
cmp
xchg
sub
mov
add
push
mov
fistp
out
inc
shl
and
cli
outs
inc
mov
sbb
jp
and
test
sbb
outs
adc
mov
scas
dec
add
cmp
push
lahf
xchg
add
add
sbb
es
neg
cwde
lods
daa
or
mov
xchg
jnp
inc
in
mov
add
cwde
sub
dec
push
scas
dec
cmp
adc
pop
shl
rol
jmp
rol
mov
sub
jnp
mov
repz
jae
push
xchg
dec
mov
test
inc
add
push
enter
ror
in
(bad)
pop
fidivr
aad
ret
sti
js
or
rol
lahf
sbb
inc
sbb
push
jne
out
cs
add
out
(bad)
shl
sti
aad
push
in
add
ret
dec
inc
mov
test
adc
dec
cmp
pop
jmp
cmc
jb
int3
lahf
pushf
div
arpl
inc
sub
xor
sti
aam
mov
xor
xor
in
push
dec
dec
xchg
or
data16
sub
push
jge
js
hlt
cmp
imul
mov
test
inc
and
std
das
sub
std
rcr
cdq
scas
mov
or
loope
mov
jnp
out
push
push
mov
dec
adc
(bad)
in
cld
shr
sub
aaa
cmps
xchg
pop
mov
xchg
sti
(bad)
mov
jl
aam
sub
(bad)
cmp
add
movs
(bad)
std
icebp
dec
jmp
icebp
std
xchg
xchg
mov
mov
mov
ins
in
in
jbe
mov
mov
mov
mov
adc
aaa
out
mov
das
add
cmps
fld
xchg
adc
mov
nop
sub
jge
dec
pop
mov
pop
mov
add
add
std
pushf
shr
enter
gs
jbe
test
pop
push
loop
or
add
fadd
arpl
in
jns
out
pop
jne
jb
(bad)
pop
cmp
(bad)
shl
lods
push
repz
sbb
ficomp
fwait
shl
fdiv
mov
int
rol
icebp
loop
mov
cmp
jae
pop
int
icebp
or
and
shr
xlat
push
mov
cmp
or
push
aad
and
enter
lock
mov
popf
inc
ret
(bad)
std
loope
fwait
bt
pushf
push
cwde
adc
ret
sub
div
cmp
enter
scas
call
cmps
pop
inc
test
mul
dec
pop
mov
loop
lea
ror
arpl
aas
xlat
sbb
daa
jecxz
push
sahf
in
mov
xchg
jnp
outs
and
mov
sbb
fwait
pop
lds
mov
out
pop
dec
cmps
sbb
pop
dec
shr
jle
dec
imul
jmp
mov
add
bound
sahf
ss
lock
jl
fdivrp
into
sub
xchg
dec
add
shl
pushf
aas
out
cdq
sti
mov
int
xor
call
mov
(bad)
fisubr
sar
add
pop
pop
adc
jae
adc
fwait
mov
ds
das
fistp
dec
stc
es
loop
push
rcr
popf
push
xchg
mov
ins
jg
ja
ficom
out
cmp
jne
dec
test
jbe
fst
stc
adc
retf
jae
mov
and
inc
je
xlat
cdq
or
push
aaa
push
in
hlt
fs
sub
sub
(bad)
test
push
lfence
dec
adc
xor
mov
(bad)
and
mov
ds
loop
mov
jge
inc
sbb
push
les
add
outs
nop
inc
mov
add
xchg
add
xor
cli
mov
jmp
pop
add
shl
jmp
cmp
jmp
hlt
es
cmp
lods
cmps
sbb
scas
and
imul
mov
outs
pop
and
mov
lods
jne
dec
lea
daa
ftst
and
jbe
out
into
aas
sahf
mov
dec
sahf
dec
or
mov
xor
fistp
icebp
stc
xchg
arpl
ins
ret
dec
fiadd
ins
inc
call
adc
pop
out
pop
sub
add
mov
jp
or
lock
xor
out
in
aad
imul
cmps
retf
or
mov
nop
cmp
ins
xchg
imul
shl
fild
mov
adc
popa
push
push
ror
out
jmp
add
mov
push
out
imul
ror
shr
or
sub
or
adc
std
jb
inc
push
push
sub
xchg
push
mov
cld
(bad)
stos
or
push
fwait
xchg
inc
pop
repz
enter
fdivr
repnz
lahf
pop
xor
or
push
jb
mov
mov
add
int
lods
jle
mov
or
data16
scas
xchg
aaa
dec
mov
sub
out
xchg
xchg
mov
(bad)
lods
or
xchg
aas
adc
leave
sub
movs
cdq
sbb
inc
adc
pop
ins
sti
add
in
dec
sbb
push
pop
sub
lea
push
pusha
push
jae
aam
mov
lock
mov
test
cmp
xor
inc
or
add
retf
std
in
not
inc
pop
cmp
shr
xchg
shl
cmp
sbb
pop
(bad)
or
dec
push
fwait
mov
sbb
mov
sub
arpl
movs
ror
fidiv
jmp
test
icebp
out
je
test
inc
dec
push
sbb
inc
sub
adc
cmp
iret
cmp
add
in
or
test
xor
sbb
mov
jbe
sbb
sbb
lea
cmp
fwait
mov
pop
sub
adc
jmp
xchg
out
mov
pushf
sbb
(bad)
jnp
nop
sar
enter
out
fbld
iret
xor
sub
mov
adc
fdiv
in
pop
xor
sbb
push
fnstsw
cmp
popf
fld
int
mov
inc
or
loopne
cld
bound
pop
mov
js
xor
clc
loopne
retf
(bad)
jp
int3
pop
fs
(bad)
jp
enter
jp
scas
jns
inc
jmp
fcomi
test
sub
jmp
shr
adc
movs
add
xor
ds
xor
cli
sti
xchg
xlat
push
jbe
add
stos
aaa
cmp
lods
out
push
adc
jg
xlat
sub
mov
inc
or
ja
cmps
fadd
mov
movs
test
mov
fstp
mov
push
aas
mov
dec
call
(bad)
jb
mov
movs
sar
dec
xor
xor
cli
push
mov
nop
mov
nop
retf
mov
cli
dec
sbb
repnz
cmc
xor
sti
imul
cmp
test
fnsave
popf
cs
loopne
ds
pop
dec
dec
jne
mov
pop
fld
not
xchg
popa
aas
xor
(bad)
push
das
inc
mov
push
and
mov
pop
inc
rcr
pushf
pop
pusha
repnz
icebp
sbb
push
popa
imul
xor
retf
pop
cmps
cwde
sbb
ret
sbb
sahf
lods
or
sub
sub
ss
pop
jns
mov
xlat
mov
and
mov
push
inc
jmp
jmp
in
pop
jae
dec
sub
xor
pop
push
and
aam
inc
push
sbb
lahf
dec
neg
in
pop
xchg
lahf
dec
rep
sub
push
pop
outs
fwait
pop
mov
push
(bad)
scas
sar
push
fadd
daa
imul
scas
lds
ja
mov
cmp
(bad)
jmp
imul
ins
aaa
xchg
cmp
adc
ficomp
leave
rol
daa
push
sti
sbb
jnp
(bad)
loop
fwait
or
adc
ficomp
cli
sub
push
mov
mov
inc
mov
fisub
mov
(bad)
sbb
je
pushf
jmp
in
mov
lahf
in
bound
adc
js
sbb
mov
jge
shl
loope
mov
xchg
xchg
mov
jbe
jo
xor
cli
add
jmp
mov
adc
fdivp
adc
pop
aas
inc
into
retf
mov
pop
push
dec
iret
aas
or
xchg
out
push
xor
adc
jb
jns
push
inc
je
clc
cmp
inc
aas
jo
daa
cmp
loope
std
nop
mov
inc
lods
arpl
cmps
movs
sbb
and
(bad)
into
stc
mov
rcl
add
push
fdiv
bswap
(bad)
ds
pop
pop
out
mov
mov
aaa
movs
inc
push
push
test
clc
push
push
scas
mov
std
mov
jl
rcl
mov
xor
push
pop
push
adc
or
push
aad
and
cmps
push
les
repz
or
mov
mov
xchg
dec
or
add
jo
pop
sub
aam
mov
pushf
mov
jmp
dec
add
(bad)
(bad)
push
(bad)
sub
inc
xchg
loopne
addr16
std
inc
jb
das
fiadd
mov
jg
cmc
add
pop
cmps
loope
mov
mov
(bad)
mov
dec
bnd
add
retf
cmp
mov
imul
inc
and
ret
nop
push
aaa
mov
scas
stc
leave
jp
adc
mov
mov
repnz
retf
pop
cmp
jno
popa
cmp
jo
adc
daa
mov
out
shr
or
(bad)
jmp
rol
in
int
jae
gs
xlat
in
cld
daa
adc
push
daa
and
sbb
stos
ret
cdq
inc
sbb
add
sbb
xchg
jmp
inc
pop
push
fild
cmc
sub
jae
add
adc
mov
repz
ins
cmp
popf
mov
cmps
or
shl
sbb
and
hlt
inc
add
in
je
inc
fwait
dec
mov
mov
shl
movs
pop
jl
sbb
jecxz
cmp
retf
jecxz
movs
iret
sbb
sbb
outs
add
push
jae
test
clc
ss
add
mov
sub
jecxz
gs
adc
xchg
dec
jl
call
out
mov
std
mov
mov
adc
or
mov
inc
ja
test
repz
push
ins
cwde
fsub
xor
sub
inc
aad
sti
pop
call
push
and
cli
imul
out
jno
xor
adc
add
retf
shr
mov
je
rcl
fbstp
xchg
sbb
popf
out
xchg
frstor
sbb
mov
out
fcmove
(bad)
pop
ins
mov
int3
dec
(bad)
xchg
rcl
pop
pop
xchg
es
or
pop
add
mov
dec
jmp
dec
or
push
sbb
shr
fisttp
cmp
pop
jo
mov
mov
mov
in
fisttp
adc
mov
mov
ja
call
jne
ret
fwait
pop
pop
call
pop
jg
repz
dec
push
aas
mov
adc
mov
push
jno
mov
sub
movs
pop
jne
inc
les
neg
dec
xlat
xor
popf
jae
xchg
push
mov
dec
xchg
push
out
in
cmp
(bad)
lea
rcr
adc
aas
add
cmp
push
push
lods
enter
bound
rcl
and
mov
dec
cmp
xchg
mov
leave
mov
and
loopne
cmp
into
aaa
arpl
repnz
dec
push
shl
jbe
gs
sub
mov
icebp
sbb
mov
pop
dec
popa
das
jns
fiadd
jb
mov
or
xchg
pushf
cmps
fwait
aas
es
mov
imul
into
sbb
out
mov
ret
call
cmps
cmps
xlat
enter
ss
xchg
loope
inc
cmps
(bad)
fcomp
mov
movs
jecxz
stos
ror
lock
(bad)
fiadd
push
test
aaa
dec
or
mov
out
inc
or
inc
retf
jb
pop
or
dec
jge
sbb
lea
cli
and
pop
call
in
mov
or
fs
or
adc
(bad)
rol
jp
adc
mov
cmc
pop
enter
daa
stos
adc
loopne
push
test
clc
xor
fidivr
push
xchg
fimul
mov
lock
adc
sahf
sbb
js
jae
adc
(bad)
daa
(bad)
and
dec
mov
sub
(bad)
and
pop
jb
xlat
cmp
ret
add
add
or
or
sbb
dec
inc
test
repz
mov
sahf
cmp
rcr
(bad)
test
cld
add
idiv
mov
test
jbe
xchg
mov
out
sub
cli
test
leave
jmp
cmp
jmp
pop
mov
and
pop
cmc
cmps
(bad)
sar
xchg
jbe
jbe
jecxz
mov
imul
dec
add
mov
data16
mov
inc
xor
mov
loope
mov
or
pop
popf
cwde
popa
jmp
aaa
inc
xchg
fist
dec
aaa
repnz
nop
add
push
pop
dec
inc
pusha
add
daa
hlt
and
js
(bad)
jmp
in
pop
inc
pushf
xchg
dec
test
shr
loope
loopne
stos
and
sbb
data16
popa
mov
shl
push
add
js
push
dec
in
fimul
xchg
adc
pusha
hlt
lods
stos
and
cdq
inc
test
xchg
daa
mov
mov
sub
test
add
cmp
push
cmp
mov
jnp
rcl
inc
xchg
ins
adc
into
xor
and
icebp
adc
ret
mov
fist
inc
pop
jmp
inc
aad
and
(bad)
shl
xchg
mov
add
xor
into
adc
sti
hlt
inc
and
pop
xor
(bad)
xor
imul
loopne
out
sbb
(bad)
mov
add
mov
mov
mov
jb
adc
(bad)
repnz
adc
jmp
inc
sbb
sbb
jns
and
cli
xchg
fwait
push
rol
xchg
ins
or
xor
sbb
scas
adc
mov
jnp
aam
sbb
mov
lds
xchg
pop
xor
fst
push
xor
movs
xchg
dec
in
cmp
push
(bad)
adc
jl
pop
add
scas
cmp
cli
outs
dec
ficom
jp
inc
add
dec
pop
or
sub
cmp
inc
mov
push
in
mov
loope
mov
cmp
mov
jmp
retf
iret
icebp
xchg
mov
(bad)
push
adc
inc
xchg
outs
fs
sahf
and
dec
sub
sar
push
vmread
out
and
mov
sbb
fild
mov
loop
cmp
addr16
or
les
lods
mov
xchg
repz
outs
pop
fs
mov
in
add
js
pop
outs
jmp
cmp
jge
pop
ins
shr
push
pop
jo
push
scas
and
fs
or
hlt
xor
dec
and
movs
stos
sbb
mov
xchg
push
pop
cli
jo
dec
mov
push
dec
dec
xchg
imul
mov
rol
cmp
cwde
pop
jo
jnp
cwde
sbb
sbb
and
gs
enter
inc
rcr
push
(bad)
ss
sbb
scas
jne
rol
loop
jg
cmp
cmps
or
ss
push
jg
fs
(bad)
xchg
inc
mov
(bad)
ja
pop
jp
in
fcomi
cmc
jl
dec
je
sub
test
xchg
mov
push
das
dec
mov
lds
push
mov
xchg
(bad)
push
add
dec
shr
cwde
les
pop
jp
mov
xchg
sub
jo
cmps
out
mov
jae
sub
adc
sbb
or
jno
cdq
neg
cmp
out
hlt
outs
mov
ins
cmp
std
test
mov
or
arpl
mov
mov
adc
sub
ret
ret
fild
test
mov
sbb
pop
fist
imul
pop
(bad)
call
xor
loopne
sbb
adc
stos
mov
or
mov
pop
jmp
pop
nop
aaa
or
hlt
mov
sbb
cmp
out
jne
jg
inc
neg
xor
ret
clc
lds
retf
xchg
call
sbb
adc
add
xor
ror
test
fadd
daa
das
icebp
xchg
mov
sbb
mov
ror
mov
fiadd
mov
leave
cmp
sbb
adc
out
adc
or
xchg
or
cmc
and
fs
repz
lods
lock
shl
nop
fimul
(bad)
fucom
add
push
lock
xchg
pusha
neg
sahf
xchg
sbb
push
test
push
test
xor
outs
push
pop
mov
ret
push
std
mov
sahf
ret
mov
icebp
addr16
fisubr
into
jmp
and
and
pop
ret
jecxz
bound
mov
sbb
jl
cbw
loop
fwait
mov
jb
retf
cmp
into
mov
enter
(bad)
jecxz
mov
test
ret
push
stos
clc
repnz
enter
stos
fsub
pop
arpl
int
movs
jl
aas
xor
scas
jecxz
aas
(bad)
mov
(bad)
aam
ins
in
iret
(bad)
pushf
mov
pusha
mov
in
fdivr
adc
sbb
sub
nop
movs
push
les
(bad)
retf
add
add
nop
mov
call
jle
pop
jmp
(bad)
xor
inc
sub
lock
je
mov
rcl
cli
aad
fiadd
adc
or
fwait
push
rol
and
xor
aam
push
rcr
test
into
cmp
mov
sahf
adc
std
cmc
pop
lahf
adc
inc
shr
leave
cwde
add
ror
xchg
(bad)
stos
jae
xor
lods
push
outs
push
iret
adc
int3
and
inc
imul
mov
inc
mov
dec
mov
push
pop
inc
xchg
sub
mov
xor
das
nop
sbb
mov
in
mov
outs
mov
fcomp
or
(bad)
in
jmp
lahf
pop
mov
ss
inc
popf
movs
movs
jge
sub
(bad)
push
pushf
les
sahf
popf
adc
add
int3
dec
pop
(bad)
mov
adc
aaa
mov
jnp
or
mov
pop
addr16
movs
call
and
std
mov
and
xchg
inc
data16
sbb
inc
out
arpl
fsubr
and
or
bound
xchg
add
out
pop
push
cli
pushf
mov
call
rcl
loop
pop
sub
fs
push
ss
ret
mov
mov
push
add
add
inc
test
inc
inc
mov
in
dec
mov
into
shl
scas
jbe
add
pop
(bad)
int
or
mov
push
inc
cmp
add
xchg
push
popa
shl
and
cmps
or
je
call
loope
(bad)
out
cld
add
cmp
mov
sahf
shl
mov
bound
sahf
(bad)
mov
xchg
outs
mov
mov
sub
inc
jecxz
mov
bound
hlt
fimul
mov
add
mov
or
stc
ret
or
js
xor
ds
adc
les
mov
mov
push
sub
or
xlat
dec
adc
push
imul
cmps
and
(bad)
lahf
jmp
add
xchg
xchg
out
stos
ror
ja
mov
xchg
mov
nop
je
xchg
cld
mov
cmp
sub
mov
ins
in
aam
and
pop
ds
repz
mov
bound
jle
adc
pop
xor
leave
fs
mov
push
retf
ins
(bad)
loopne
sub
push
adc
sub
popa
pop
enter
stos
inc
mov
das
leave
mov
clc
sbb
arpl
add
aaa
mov
js
popf
scas
dec
dec
adc
dec
fcomp
mov
test
gs
retf
push
(bad)
jecxz
mov
hlt
out
xchg
xor
and
int
call
bound
scas
xor
xor
sti
xchg
cmc
dec
cld
jmp
out
push
in
test
or
dec
jnp
and
scas
mov
cmp
mov
mov
(bad)
xchg
add
xchg
jnp
in
and
mov
pop
nop
adc
or
jl
push
cmc
cdq
loope
xchg
sbb
ja
push
out
mov
cmp
fidivr
pop
mov
rcr
jl
fcomp
jne
into
mov
sub
lds
test
pop
xor
cmp
add
call
pushf
jae
mov
pushf
xchg
(bad)
rcr
dec
ins
jge
iret
ss
jmp
cmps
or
mov
push
cdq
lea
lahf
dec
mov
xchg
iret
lock
jns
jecxz
or
fmul
outs
js
pop
lods
push
retf
leave
dec
sbb
gs
dec
adc
pop
add
lock
fisubr
cmp
adc
mov
pop
jl
lods
std
and
test
inc
fimul
int3
ja
loop
pushf
repz
je
add
enter
into
pop
add
(bad)
mov
hlt
mov
jo
das
add
std
nop
jns
aad
xchg
xor
mov
add
es
(bad)
xor
dec
xchg
xor
jae
out
clc
sub
xchg
jp
push
outs
jmp
push
les
ds
sti
jg
push
add
sbb
mov
in
imul
repz
dec
mov
fisub
loop
cmp
dec
inc
pop
pop
and
pop
and
loope
std
aaa
aad
jmp
fild
sub
clc
jmp
cli
test
sbb
cmp
in
inc
adc
xchg
(bad)
lea
jb
test
mov
sub
cmp
fwait
rcr
les
cmp
xchg
rcl
popf
mov
adc
fs
mov
les
fist
sub
jmp
jbe
push
jo
adc
ins
mov
les
pop
movs
repz
fdivr
test
sub
fdiv
mov
xor
jmp
aam
xchg
xor
test
shr
jo
or
xchg
int3
fdiv
mov
cmc
push
xor
cs
dec
outs
pop
mov
adc
add
xchg
fsub
mov
sub
inc
xor
call
int3
loope
pop
imul
aam
mov
mov
leave
adc
sbb
cwde
xor
test
in
test
mov
dec
test
shl
scas
es
xor
pop
or
add
pop
sbb
pop
enter
pop
pop
jbe
inc
sub
ja
iret
xor
push
ds
sbb
cmp
adc
push
and
adc
aaa
mov
adc
add
xchg
stos
mov
repnz
mov
popf
ret
inc
or
fistp
push
jmp
stos
std
fisubr
pop
mov
daa
xor
inc
mov
stos
pop
pop
lods
sub
jbe
cmps
icebp
adc
jmp
push
call
gs
sub
shl
pop
out
pop
mov
ror
in
(bad)
lahf
in
adc
mov
xlat
mov
sub
arpl
pop
jae
pop
xor
ja
movs
lds
(bad)
adc
inc
test
imul
mov
stc
dec
cli
scas
jbe
mov
retf
outs
or
mov
mov
daa
(bad)
popa
dec
mov
mov
rol
adc
sar
push
(bad)
stos
lods
mov
add
ret
xor
xchg
cmp
xchg
jns
add
cdq
dec
push
out
jns
lods
mov
loop
push
push
test
or
push
or
jg
test
push
mov
dec
sbb
mov
loopne
or
push
jle
mov
dec
hlt
add
outs
ficom
sahf
mov
sar
cmp
cs
cld
push
sbb
ins
stos
loopne
adc
ins
push
fwait
pusha
(bad)
int3
inc
jmp
dec
push
pop
pop
sub
mov
jnp
push
sbb
into
nop
push
lods
xor
cmp
or
test
test
cmc
in
fucom
jns
sti
adc
dec
mov
xchg
scas
jge
enter
leave
push
jns
cs
stos
jno
dec
ja
pop
xor
pushf
bswap
mov
into
stos
ror
mov
mov
mov
mov
jmp
push
ins
(bad)
in
div
add
xor
sbb
cmp
stc
ret
lods
pop
pop
mov
xchg
mov
test
fsub
das
dec
adc
sbb
aam
cmps
mov
repz
pop
push
stos
lock
sub
mov
in
repnz
cdq
mov
into
div
outs
(bad)
or
pushf
repz
in
pop
lahf
out
pop
rcr
jae
sbb
in
or
inc
mov
jne
adc
cmp
cmps
pop
adc
mov
jle
dec
loop
jne
ja
mov
push
mov
jle
xlat
loop
xor
cmp
pop
pop
mov
pop
adc
xchg
(bad)
in
(bad)
popf
(bad)
xchg
dec
mov
add
adc
add
xchg
std
mov
in
test
movs
ins
jecxz
adc
xor
js
push
pop
and
xor
mov
pop
fs
or
test
and
dec
not
(bad)
jbe
(bad)
call
fiadd
pushf
fidivr
and
lods
je
mov
les
je
dec
test
adc
das
stc
mov
add
xor
bound
or
aaa
dec
fdivr
rcl
cld
in
push
test
lock
mov
lds
loop
mov
loope
jns
push
adc
outs
out
(bad)
or
dec
xor
push
push
jno
mov
mov
push
das
xchg
sub
mov
outs
jecxz
pusha
mov
inc
out
out
stos
sbb
or
jb
es
fldcw
and
mov
fld
ret
neg
xchg
lea
dec
mov
xor
and
push
fsubr
cdq
mov
xor
mov
shl
not
daa
cmps
jmp
retf
pop
mov
pop
(bad)
jle
cmps
(bad)
push
mov
(bad)
pop
lock
out
mov
jg
push
imul
inc
clc
sub
inc
mov
ja
or
lods
shl
inc
leave
mov
cmp
and
pop
test
out
jmp
and
sub
rol
cmp
cmp
pop
cld
mov
sub
jge
sar
adc
add
jae
shl
test
cmp
imul
sub
mov
call
dec
jae
mov
sbb
dec
jge
fiadd
bound
inc
lods
and
int
push
and
outs
mov
sti
daa
jl
mov
gs
push
jecxz
mov
xchg
mov
sti
aam
inc
or
inc
pusha
xlat
or
mov
jne
mov
adc
dec
mov
inc
jb
inc
cmp
jp
adc
and
push
push
jne
mov
sbb
addr16
push
xchg
mov
xchg
dec
jne
pushf
lea
or
in
pop
add
das
nop
test
imul
xchg
and
and
xor
inc
mov
repnz
jne
mov
pop
shl
or
les
lods
jnp
jbe
js
cmp
pop
mov
push
enter
out
lods
jo
jle
fucom
push
sbb
arpl
rol
(bad)
cmp
inc
stos
pop
fisub
pop
cmp
push
sub
or
mov
push
xor
scas
mov
push
sub
xchg
(bad)
or
add
jb
jmp
and
mov
dec
cdq
outs
push
xchg
cmc
sub
ret
inc
call
mov
mov
fsubr
jp
loope
and
call
push
inc
loopne
cmp
cdq
je
dec
loop
sbb
aas
jns
jg
mov
imul
sbb
pop
xor
inc
or
scas
repz
call
movs
addr16
prefetch
sub
pop
adc
aas
gs
dec
nop
out
addr16
mov
push
sbb
gs
push
add
cmps
popa
std
xchg
mov
push
fimul
add
inc
and
imul
bound
jecxz
idiv
mov
adc
ja
stc
clc
mov
pop
retf
mov
icebp
push
sub
test
or
sub
(bad)
in
iret
repnz
popa
je
xchg
gs
inc
mov
adc
stos
mov
cmp
xlat
ja
push
push
jo
mov
xchg
ins
adc
aam
push
js
mov
pop
(bad)
scas
ds
(bad)
mov
mov
mov
lea
push
sub
nop
mov
in
jo
daa
das
sub
out
or
add
and
dec
lahf
sbb
push
scas
push
pop
psadbw
and
popa
push
mov
inc
push
push
rcl
inc
sbb
int3
in
(bad)
pop
test
movs
add
jne
(bad)
sub
pop
inc
add
fwait
(bad)
dec
cmp
fwait
sub
hlt
sub
pop
sbb
pusha
and
hlt
pop
sbb
xchg
add
rol
mov
pop
test
mov
xchg
ja
cmp
les
rep
aaa
stc
jmp
xor
mov
sub
pop
pop
mov
mov
pop
ins
mov
ss
ret
ficom
mov
jg
sbb
cmps
test
push
dec
xchg
fucomp
jnp
xchg
xchg
cs
popa
(bad)
popa
jecxz
adc
xor
mov
sub
aam
dec
xchg
mov
(bad)
(bad)
sub
inc
mov
popa
xchg
mov
xor
(bad)
mov
cli
or
repz
jecxz
mov
mov
jno
call
sahf
xchg
mov
mov
loope
xchg
scas
xchg
aam
mov
pop
mov
test
mov
loopne
jns
adc
jle
(bad)
aam
mov
jbe
push
mov
mov
iret
fld
pop
pop
(bad)
mov
sub
leave
lods
popa
jle
mov
xchg
ja
add
pusha
dec
imul
mov
sbb
add
push
imul
sbb
int3
pop
mov
fild
inc
xlat
ja
mov
and
jae
shl
add
mov
xchg
xchg
jl
xor
pop
fist
jmp
cwde
mov
pushf
pop
iret
test
jns
jg
leave
xor
repnz
lahf
pop
pop
dec
enter
data16
pop
push
lods
int3
in
out
mov
js
or
sbb
je
mov
repnz
(bad)
scas
mov
cmp
inc
movs
push
jne
push
mov
pop
and
dec
and
retf
leave
adc
clc
fsubr
xor
sbb
pushf
shl
pushf
js
jmp
icebp
push
mov
ins
addr16
jle
pusha
jnp
sti
fist
dec
xchg
sub
pop
dec
mov
cdq
mov
pop
repnz
lock
jmp
scas
adc
xor
or
xor
imul
sbb
and
ficom
fcmovnb
xor
mov
in
mov
mov
and
imul
lahf
sbb
mov
popa
pop
cmp
add
pop
test
cmps
jge
(bad)
call
adc
stc
mov
mov
lods
cld
push
lds
lea
jp
adc
rcr
adc
xor
pushf
iret
fmul
xchg
mov
and
icebp
cmps
mov
xor
xor
mov
and
mov
lfs
push
sub
jnp
and
inc
adc
cs
jecxz
pop
cmp
xor
mov
and
jl
shl
lds
imul
xchg
shl
mov
movs
xchg
xor
(bad)
mov
nop
xor
out
test
push
xor
stos
xor
add
pop
xchg
repnz
cmp
add
sbb
ins
push
lock
movs
rol
mov
dec
lods
es
dec
inc
xchg
das
sub
lds
dec
mov
mov
jbe
stc
xchg
movs
int
fisub
mov
push
test
inc
test
cmp
daa
lods
iret
xchg
data16
jae
icebp
bound
fisttp
xor
jb
loop
loope
ret
imul
cli
cwde
loopne
push
push
sub
push
aam
adc
fisubr
movs
pop
js
dec
xchg
dec
loopne
int3
xor
fwait
sbb
lahf
adc
addr16
jge
mov
cmp
call
inc
and
pop
add
mov
popa
sub
ins
(bad)
mov
aad
pop
sar
mov
jmp
sbb
lods
ror
call
fs
int
cmp
(bad)
and
in
arpl
loope
cmps
cld
es
addr16
bound
and
and
in
push
push
retf
repnz
push
pusha
sbb
mov
sub
and
das
xchg
jbe
and
fwait
pop
cmc
aas
mov
xchg
inc
dec
pop
dec
sbb
daa
adc
jl
jne
pop
mov
sbb
push
adc
repz
cdq
or
in
mov
and
xchg
enter
pop
or
and
repnz
mov
movs
pop
cwde
mov
and
fwait
adc
mov
in
adc
(bad)
mov
cld
cli
jle
dec
test
push
mov
adc
les
fwait
movs
ret
int
hlt
popa
ja
fdivr
test
sbb
dec
push
stos
cmp
test
xchg
jns
pop
cmp
(bad)
jg
iret
cmps
shl
hlt
cld
inc
lea
xchg
dec
std
sub
je
in
addr16
das
out
mov
lds
xlat
sbb
imul
dec
sar
sub
shr
xchg
xchg
or
sbb
dec
mov
lahf
mov
push
leave
cs
fnstsw
ficom
leave
mov
jno
out
adc
mov
jae
loopne
cld
or
add
movs
(bad)
mov
mov
xor
jecxz
lea
test
dec
pushf
fld
out
cmps
sub
fucomip
mov
call
cmp
xchg
stos
jae
mov
cmp
inc
fidivr
nop
ja
nop
dec
sub
push
jbe
push
or
(bad)
push
mov
push
pop
mov
cmp
pop
mov
gs
pushf
cmp
xchg
mov
push
fwait
popa
xchg
test
pop
lods
mov
sub
lock
mov
(bad)
jmp
jg
xchg
or
das
jno
cmps
ror
pop
sub
mov
and
iret
out
fstp
jmp
fsub
aaa
mov
pop
adc
adc
pop
sub
adc
cs
into
repnz
mov
stos
aam
cmp
pop
fcom
aas
lods
xor
aad
mov
mov
inc
das
xchg
mov
inc
adc
mov
jle
mov
push
mov
je
in
sbb
ins
fisttp
sub
mov
push
mov
inc
jbe
data16
and
push
push
push
xchg
adc
fcomp
mov
push
mov
mov
js
ret
pop
test
jae
nop
xchg
xchg
out
inc
mov
ja
fnstsw
or
cmps
(bad)
(bad)
(bad)
clc
out
cdq
or
ret
mov
sbb
sbb
xchg
mov
les
stos
shl
out
in
out
fld
(bad)
jp
or
pusha
jg
jne
push
push
dec
(bad)
(bad)
je
sbb
add
out
loop
push
xchg
mov
cs
adc
lock
outs
imul
std
cmps
sub
cli
pushf
repnz
sbb
les
lahf
mov
adc
push
xor
sbb
retf
fdiv
push
mov
imul
enter
adc
sub
(bad)
shl
adc
(bad)
cli
sahf
and
push
mov
out
call
in
(bad)
cmps
stos
add
movs
xchg
pusha
enter
push
xchg
push
stos
lds
pop
add
pushf
dec
and
out
sub
push
jecxz
loop
pop
dec
into
add
mov
fnstcw
fdivr
repnz
loope
mov
neg
cs
xchg
sbb
sbb
(bad)
inc
mov
lock
mov
aam
in
sub
cmps
pop
paddsw
push
xor
sub
mov
inc
dec
retf
push
pop
pop
mov
popa
jp
fs
and
scas
inc
idiv
pop
xor
lods
mov
clc
push
lods
inc
imul
je
inc
fs
jnp
push
pop
adc
sub
inc
pop
push
out
xor
gs
adc
sahf
test
sbb
sbb
xchg
xchg
das
nop
and
fs
mov
xor
sub
data16
fdivr
mov
or
test
retf
xchg
mov
movs
jle
(bad)
sti
aad
cmp
les
inc
lods
push
dec
xor
pop
adc
(bad)
loop
mov
fidiv
(bad)
pop
adc
pop
mov
add
mov
or
adc
adc
test
mul
shl
push
jecxz
cmp
(bad)
mov
fwait
xor
and
les
xchg
push
aas
out
adc
call
add
pop
xchg
rol
adc
cmp
rcr
sub
js
xlat
(bad)
xor
push
mov
fwait
mov
popa
pop
lahf
adc
pop
jnp
jo
add
mov
mov
mov
pop
leave
mov
fld
jbe
adc
je
and
xchg
shr
cmp
sub
pusha
push
in
mov
(bad)
lods
sbb
xlat
addr16
inc
es
repnz
mov
mov
push
xchg
stc
sahf
in
test
adc
shr
cld
cmp
sar
lahf
aas
mov
mov
xor
xchg
mov
(bad)
addr16
movs
cmp
and
push
in
mov
fbstp
pop
add
adc
mov
xchg
std
jecxz
mov
in
or
mov
jno
stc
loop
gs
inc
sbb
dec
push
mov
jmp
xchg
call
dec
daa
cmp
jge
or
pop
mov
cli
nop
sbb
pop
pop
(bad)
jmp
bt
sbb
pop
dec
or
push
lods
outs
shl
cmp
dec
outs
enter
xor
sbb
cmp
mov
aam
jbe
jbe
and
cmp
pop
pushf
xor
pusha
pop
jne
mov
scas
mov
aas
test
cmp
dec
inc
xor
ins
ret
mov
aam
(bad)
mov
sbb
sahf
in
cli
push
out
(bad)
lea
mov
dec
mov
pop
xor
pushf
nop
inc
mov
sahf
cmp
out
push
mov
mov
and
fisubr
add
and
inc
sbb
push
call
cli
les
xchg
mov
daa
sbb
popf
mov
dec
add
cmp
xchg
mov
outs
test
imul
pop
sbb
test
sahf
fucomp
mov
movaps
sbb
fistp
mov
adc
in
mov
jp
inc
retf
and
loopne
pushf
aam
jmp
fdiv
pop
gs
sub
jb
cmp
enter
rcr
inc
sbb
push
mov
pop
mov
push
adc
mov
es
mov
push
sbb
jg
cmp
(bad)
adc
sahf
pop
sbb
test
leave
out
pop
fs
xor
xchg
mov
loop
in
cmp
out
inc
fdivr
inc
stos
lods
xor
or
adc
add
sbb
out
out
loope
push
xchg
inc
mov
jne
xlat
xchg
in
adc
or
adc
arpl
popf
mov
sub
adc
mov
(bad)
div
xor
imul
inc
mov
fstp
cli
jmp
aad
leave
sbb
xchg
lock
xchg
call
arpl
or
inc
lods
mov
jl
or
mov
cmp
pop
add
cmp
loope
or
test
cmps
inc
aas
inc
jbe
and
pop
jmp
jg
cmp
add
and
cli
pop
mov
or
sub
pusha
dec
push
xchg
push
jmp
cmps
(bad)
push
sbb
pop
jnp
ins
ds
jo
rcr
cmp
push
imul
(bad)
xor
sub
(bad)
cli
xchg
mov
mov
sahf
cmp
fwait
lock
add
cmp
cli
or
imul
aam
adc
stos
mov
mov
dec
xor
popa
shr
ja
pop
xor
jmp
ret
inc
jnp
pop
sbb
mov
push
sub
jp
inc
fdivr
fcmovbe
jle
mov
adc
xchg
(bad)
ficomp
mov
adc
(bad)
mov
jae
xor
movs
dec
stos
pushf
xlat
push
and
outs
neg
push
jae
outs
stc
fld
cmp
mov
adc
mov
push
aam
dec
pop
xchg
pusha
inc
es
cmps
jmp
stos
or
lahf
push
jae
in
dec
adc
mov
dec
push
mov
inc
int3
movs
push
sbb
jmp
adc
das
mov
mov
rcr
out
addr16
clc
pop
mov
outs
shl
enter
or
dec
leave
aad
mov
imul
jmp
pop
pop
movs
int3
(bad)
jne
and
out
scas
(bad)
ins
(bad)
in
add
movs
(bad)
mov
bound
rol
shr
jns
inc
xor
mov
add
xor
sbb
push
rol
in
push
xchg
test
pop
ds
mov
in
cdq
sahf
add
out
push
and
xlat
adc
shr
push
xor
aas
leave
shl
mov
cli
test
popf
pushf
(bad)
cmc
push
mov
cmp
inc
push
retf
in
sar
mov
xchg
pop
les
leave
out
jae
imul
scas
push
arpl
pop
mov
out
dec
in
sahf
adc
cmps
loopne
js
mul
fisub
cli
sbb
xchg
xchg
pop
jge
ret
je
dec
call
cmp
dec
or
popf
and
js
jb
loope
rol
in
xor
or
imul
push
out
mov
xchg
pop
mov
jnp
mov
into
sti
cld
sahf
es
les
into
sbb
pop
push
leave
fcomp
out
jno
push
xchg
sbb
adc
fs
in
mov
adc
mov
div
sbb
out
repnz
xchg
mov
dec
(bad)
fadd
jge
sub
ror
xchg
inc
shr
cmp
sub
adc
call
gs
mov
pop
jo
fst
inc
movs
ret
fstp
pushf
adc
mov
jnp
(bad)
lods
lock
xchg
xor
leave
mov
fdiv
xchg
jmp
ret
test
lods
data16
mov
aas
xlat
sbb
mov
imul
(bad)
mov
aaa
and
mov
inc
(bad)
adc
jge
(bad)
(bad)
shl
xor
stos
push
pop
dec
cmps
dec
jmp
mov
rcr
lock
inc
and
and
mov
scas
(bad)
int
not
fwait
and
repz
xchg
lock
test
clc
dec
rcl
push
fst
pop
xor
mov
test
es
push
aad
imul
dec
mov
jge
call
add
rcr
xchg
loope
xor
push
adc
cli
sbb
fcomp
rcl
jge
aad
(bad)
call
jno
add
leave
xchg
es
sbb
test
arpl
retf
inc
cmp
add
adc
bound
rol
pushf
inc
shl
and
les
(bad)
out
jge
shl
fld
xchg
sbb
push
in
inc
cld
dec
fisttp
aam
xchg
dec
aas
mov
hlt
jmp
in
jg
pop
int3
sbb
jmp
icebp
xchg
and
jmp
jnp
mov
outs
ins
repnz
retf
inc
push
adc
shl
fwait
test
pop
jno
repnz
cli
inc
in
daa
add
imul
and
sub
fcomp
into
shl
push
mov
(bad)
cwde
inc
adc
or
sbb
jg
dec
add
add
stos
push
mov
shl
and
inc
xor
out
pop
stos
and
loope
inc
xchg
inc
dec
and
xlat
cmp
outs
push
xchg
fcomi
adc
adc
in
ss
out
movs
out
(bad)
outs
sub
adc
jns
out
cmp
adc
xlat
cmc
dec
mov
les
movs
out
and
dec
jnp
(bad)
jmp
inc
dec
mov
es
jg
imul
mov
push
test
sbb
iret
add
push
mov
out
out
mov
cmc
and
add
push
rcr
imul
lahf
pop
loopne
bound
push
mov
push
pop
pushf
dec
and
xchg
pop
mov
imul
div
test
jbe
loop
fld
and
jb
daa
das
imul
dec
clc
sub
test
adc
push
mov
outs
test
ja
jb
push
neg
cmp
dec
cmps
out
sbb
stos
daa
mov
je
jmp
fidivr
push
mov
pop
sbb
cmc
retf
inc
cmp
pushf
pushf
adc
fbld
loope
mov
cmp
pop
push
movs
jp
je
enter
sti
mov
mov
dec
dec
jmp
lods
sub
cwde
xchg
ins
bound
jge
xlat
cld
xchg
cmc
ins
cmp
(bad)
cmp
adc
mov
and
and
sub
xchg
jge
loop
sub
clc
xchg
jge
retf
ja
or
dec
mov
jmp
ret
hlt
push
xchg
jne
xchg
xchg
mov
push
adc
scas
push
in
mov
hlt
push
ins
xchg
int3
in
int3
pop
xchg
leave
mov
ins
lock
push
sub
out
sahf
pusha
out
inc
ret
sub
add
sar
add
into
aam
imul
aam
cmc
mov
shl
ins
shl
shl
pop
addr16
xchg
cdq
xor
test
xchg
push
ins
out
jb
(bad)
sub
jno
push
nop
popf
mov
cmps
mov
icebp
fcom
cmps
dec
scas
lods
movs
push
inc
(bad)
pop
xlat
out
cmp
and
sbb
lods
scas
xchg
sbb
pop
push
data16
and
fs
inc
or
pop
xor
out
(bad)
cmp
sti
les
mov
mov
jnp
xor
scas
mov
dec
xor
test
cs
and
sbb
ins
ja
adc
pop
mov
push
jae
mov
call
inc
je
popf
cmps
arpl
(bad)
pop
sub
out
sahf
inc
xor
mov
pop
clc
jne
mov
fcom
es
pop
add
in
sub
(bad)
repz
ins
(bad)
and
jbe
mov
sub
sub
push
pop
jnp
jb
mov
push
movs
mov
mov
jmp
scas
and
inc
lahf
jmp
movs
out
xor
push
dec
outs
push
add
xor
push
add
stos
cmps
xlat
push
xor
xchg
inc
push
test
add
jecxz
int
into
mov
mov
sahf
addr16
out
jo
in
pop
(bad)
arpl
popa
add
or
data16
dec
out
or
scas
jne
test
rcl
mov
(bad)
or
jmp
pop
lods
out
jnp
jmp
movs
push
jo
mov
add
push
call
pop
sbb
lahf
ds
or
xchg
stc
stc
ret
test
stos
mov
fs
cli
repz
out
in
stc
cmps
movs
pop
lds
mov
jmp
inc
lods
or
lea
xlat
xor
into
and
int3
inc
cmps
call
mov
(bad)
sub
(bad)
fiadd
xchg
mov
lsl
js
imul
lea
sti
pop
or
mov
sub
mov
int3
xchg
inc
in
jnp
sbb
pushf
mov
cmc
xor
mov
test
add
test
add
adc
ins
mov
cmp
lods
movs
test
mov
push
mov
inc
sub
(bad)
outs
clc
sbb
es
ror
cli
ror
ins
mov
popf
mov
adc
or
cdq
push
sar
and
or
sti
mov
dec
mov
mov
or
ret
push
xchg
leave
cmps
push
loopne
inc
les
repnz
aas
pop
dec
inc
ret
push
cmp
cwde
cmps
rcr
rcr
popa
cs
cld
mov
jnp
and
pop
jle
jl
(bad)
cmp
enter
mov
sbb
push
cmp
jb
scas
jne
mov
movs
pop
fcomp
in
xor
stos
mov
sbb
shl
std
icebp
mov
sub
cmp
outs
(bad)
cli
out
nop
leave
leave
es
inc
pop
dec
out
or
mov
outs
mov
out
and
cmp
aam
pop
push
jne
inc
scas
inc
cld
jne
fldcw
push
pop
sub
das
add
fidiv
add
loope
add
das
sbb
fcmovbe
aam
jmp
mov
fnstcw
mov
mov
dec
xor
or
push
push
sbb
or
hlt
mov
cmp
pop
(bad)
bound
mov
or
jle
icebp
fldcw
cmp
cs
js
dec
or
push
mov
mov
cli
fwait
push
jnp
call
add
pusha
mov
xor
pop
mov
ins
ss
dec
adc
inc
push
int3
mov
call
and
fcos
fistp
mov
adc
ret
and
sar
repz
movs
push
xchg
paddsw
fwait
mov
inc
inc
sub
aad
dec
unpcklps
inc
xor
imul
movs
stos
cli
add
shl
out
mov
jnp
mov
mov
fld
pop
outs
popf
loopne
mov
nop
mov
push
out
fsubr
stos
sahf
dec
repz
pop
scas
pop
sub
cmp
jo
and
xchg
mov
enter
(bad)
or
mov
lahf
ret
jle
jmp
mov
movs
push
adc
sbb
sbb
jb
movs
in
leave
xchg
xor
xor
sub
pop
or
lock
add
add
xchg
mov
pop
fild
xchg
jb
push
xor
inc
cli
mov
cwde
mov
or
jmp
mov
cmps
cwde
or
les
ret
pop
mov
cwde
push
mov
sbb
push
shr
xchg
retf
xor
fiadd
lahf
mov
mov
les
mov
push
sub
adc
mov
and
lahf
adc
fdiv
mov
mov
imul
fwait
div
xor
cmp
xchg
call
jno
mov
push
cmp
or
inc
arpl
add
push
inc
mov
aad
std
neg
out
in
push
dec
call
fcmove
cli
cmp
out
lea
retf
iret
test
xchg
aas
inc
int3
in
mov
xchg
jle
daa
inc
push
stos
mov
movs
les
mov
out
inc
movs
jp
and
and
movs
pop
dec
cli
ror
loope
fst
mov
inc
ret
or
dec
pop
movs
jnp
adc
scas
jnp
xchg
dec
adc
mul
xor
adc
mov
add
scas
sub
or
lods
add
jae
xchg
xor
bound
or
(bad)
sub
mov
rcl
adc
add
aaa
sbb
dec
mov
cmp
xor
shl
mov
inc
push
xchg
dec
mov
(bad)
iret
mov
and
dec
xor
pop
neg
outs
push
inc
inc
push
scas
add
out
stc
(bad)
iret
rol
aaa
dec
sub
(bad)
sub
dec
jne
mov
test
and
sub
icebp
in
mov
and
mov
or
and
pop
je
pop
das
sti
pop
jmp
pop
push
inc
or
jle
in
cmps
jmp
xchg
sbb
xchg
fld
push
push
(bad)
xlat
iret
lods
dec
push
mov
dec
hlt
lock
into
and
pop
movs
lea
mov
(bad)
adc
mov
inc
mov
int
ret
inc
(bad)
pop
stos
cmp
mov
out
add
inc
int3
push
jb
and
xor
ds
ret
(bad)
not
ja
fisub
pop
movs
jg
outs
mov
xlat
mov
jnp
call
daa
lahf
sbb
out
mov
cmps
popa
mov
fcomp
mov
mov
mov
sub
mov
cmp
je
ja
repnz
fst
push
cmp
pop
das
in
imul
mov
push
das
nop
int3
sbb
push
mov
dec
pop
xchg
mov
outs
stos
into
cmp
pop
dec
jmp
test
inc
retf
xor
ss
cmp
aam
push
jno
les
jbe
addps
push
std
xor
neg
scas
jmp
pop
and
adc
push
enter
out
out
das
mov
adc
mov
pop
cmc
or
push
add
mov
fsubrp
mov
sbb
adc
out
dec
std
into
(bad)
es
xchg
mov
sub
cmp
sbb
jo
test
mov
xchg
push
dec
icebp
mov
ror
mul
mov
adc
adc
push
jnp
test
(bad)
cmp
enter
sub
es
sti
mov
sbb
jbe
popf
sbb
adc
jne
es
fucom
mov
pusha
(bad)
jl
js
popa
sub
imul
mov
adc
mov
aas
xlat
jmp
in
sahf
mul
mov
jmp
mov
inc
inc
pop
rol
pop
fdiv
sbb
pop
jbe
adc
popa
mov
inc
and
inc
jbe
or
test
sub
je
test
mov
mov
mul
stc
mov
jno
mov
mov
fs
cmps
dec
aas
stc
idiv
sti
xor
jge
cmp
jne
jecxz
mov
push
push
call
xor
out
or
jmp
into
or
inc
lahf
in
push
mov
dec
add
sub
pop
or
or
inc
je
jne
das
push
(bad)
les
xchg
fistp
ss
adc
pop
and
jbe
cwde
mov
cmp
ror
int3
(bad)
stos
xor
mov
dec
call
sbb
icebp
adc
(bad)
(bad)
(bad)
cld
and
loop
scas
scas
jg
neg
inc
in
jge
sub
sti
addr16
adc
icebp
iret
xchg
shr
inc
popf
(bad)
mul
pcmpeqb
je
or
dec
ins
adc
pop
xchg
aas
(bad)
jns
dec
div
mov
sbb
mov
or
pushf
loope
outs
out
imul
adc
xor
lods
ud1
push
sub
adc
arpl
jecxz
push
jae
std
jno
or
sub
and
sbb
imul
dec
es
clc
imul
sbb
mov
cmp
(bad)
rcl
bound
fwait
outs
push
pushf
push
test
mov
push
iret
in
mov
pop
outs
add
xchg
sub
fwait
pop
mov
jle
test
ins
pop
cmc
dec
in
daa
xchg
cmp
aaa
ins
gs
into
fcomp
pop
sub
test
sbb
mov
push
mov
sbb
aad
jae
enter
int3
add
inc
jl
push
sbb
mov
enter
test
out
fucom
fidivr
loop
in
xchg
xchg
enter
aad
arpl
lds
cmp
mov
mov
push
js
adc
sbb
and
inc
and
stos
lods
call
cs
xchg
add
mov
pop
sub
push
mov
(bad)
jno
pop
add
adc
lods
test
hlt
xchg
loopne
push
push
dec
sar
ret
pop
or
retf
inc
or
fpatan
sub
mov
pop
mov
fisubr
ficomp
mov
xor
mov
mov
xchg
movs
test
add
popf
inc
fnstcw
(bad)
add
retf
inc
cmp
and
sahf
mov
int
(bad)
mov
and
and
cwde
pop
pop
cmps
loop
and
mov
adc
cmps
fistp
push
xchg
push
ins
xor
push
inc
and
mov
push
sar
adc
fdiv
rcl
inc
mov
jecxz
mov
das
and
sub
mov
fwait
jl
xchg
adc
cmp
repz
dec
inc
out
sbb
jnp
(bad)
adc
ins
gs
ins
into
mov
enter
jp
mov
mov
dec
jns
hlt
outs
or
push
dec
imul
fcomp
inc
sbb
iret
jmp
jge
push
pop
(bad)
cmc
mov
mov
rol
cmc
xor
shr
and
retf
sub
jmp
pop
outs
mov
retf
cmp
hlt
mov
js
xor
add
movs
pushf
out
test
movs
mov
inc
mov
pop
cmps
out
and
jl
(bad)
in
or
jge
and
outs
and
sub
(bad)
dec
add
stos
mov
enter
jmp
cld
dec
jl
mov
mov
push
test
cld
add
sbb
pop
lods
and
sub
xchg
or
push
scas
mov
add
out
push
adc
sub
and
ret
jp
xchg
mov
movs
stos
icebp
ret
test
mov
enter
xor
test
fldcw
outs
je
cmp
movs
xchg
mov
test
jne
into
inc
sub
js
inc
xor
xor
xor
(bad)
jp
out
imul
adc
lea
dec
clc
int3
dec
cmp
push
sub
clc
out
inc
jp
mov
xor
call
leave
or
scas
dec
cwde
sub
add
sub
movs
mov
cmp
shl
scas
inc
mov
scas
jno
xchg
and
or
add
add
imul
ret
sbb
dec
mov
mov
jmp
sti
mov
jns
adc
fidivr
push
sbb
dec
test
hlt
jns
shl
out
in
mov
push
in
xchg
vzeroupper
sbb
inc
outs
test
stos
sahf
and
mov
dec
pop
pop
jmp
dec
pop
cmp
mov
mov
and
addr16
or
retf
imul
loope
xchg
cmp
dec
ficomp
stc
lea
mov
out
inc
repz
ss
lea
jl
ret
jecxz
inc
xchg
(bad)
inc
ins
retf
fadd
add
iret
xchg
fisubr
jae
mov
out
push
es
inc
mov
pop
jle
fs
sub
add
data16
pop
repz
call
sahf
std
movs
(bad)
push
pop
sbb
loope
outs
push
pop
jbe
iret
cwde
pusha
fdivr
jae
and
cwde
addr16
jecxz
stc
sub
pop
xor
push
and
sbb
gs
cld
push
or
scas
mov
mov
imul
xchg
movs
adc
retf
push
pop
sub
cmp
mov
adc
movs
mov
iret
jmp
daa
inc
adc
and
mov
scas
push
jle
in
aam
in
ins
xchg
fs
pushf
sbb
call
aad
addr16
pop
cli
repz
fs
addr16
aaa
sbb
and
mov
in
push
jp
(bad)
cmps
xchg
leave
sub
out
fst
movs
sub
jl
dec
data16
mov
sbb
ins
movs
cmc
mov
jns
pop
mov
xchg
add
(bad)
test
rol
cwde
sbb
js
mov
fsub
popw
adc
shr
stos
adc
pop
pushf
or
loop
aad
cdq
xchg
fwait
outs
mov
cmp
mov
mov
lods
shl
sub
loopne
cmp
dec
out
lahf
and
lahf
shl
pop
call
mov
inc
idiv
xchg
and
icebp
add
push
inc
push
sbb
loop
mov
popa
and
bound
daa
in
jno
or
adc
push
mov
and
int3
retf
fcom
and
xor
push
sub
lea
dec
out
xchg
fistp
test
xor
sub
or
les
sbb
or
mov
inc
fwait
and
sar
sub
xchg
pop
or
call
mov
ret
mov
jbe
stc
ss
scas
cmp
push
adc
ins
mov
jb
add
cli
loop
push
and
mov
mov
jg
mov
mov
dec
mov
or
add
cs
mov
xor
sbb
or
cmp
jbe
jge
aas
push
sti
xor
mov
xor
push
call
repz
cmps
sub
int3
or
xor
add
cmp
aaa
rol
fsubr
in
mov
(bad)
mov
lahf
mov
sbb
mov
sub
loope
loope
out
mov
stos
test
mov
and
aam
shl
jle
add
jns
mov
xor
rol
cmps
sbb
push
xor
push
inc
movs
stos
xor
out
push
jno
jmp
into
out
xchg
pop
and
outs
jnp
ins
inc
push
rol
jecxz
mov
push
push
pop
sub
mov
(bad)
sub
fucomip
dec
(bad)
or
jb
push
cmps
es
add
ret
xor
sbb
stos
in
or
pop
mov
xor
test
ja
pop
out
sub
jp
cld
sbb
xor
sub
test
addr16
mov
rol
into
in
iret
(bad)
outs
and
fild
mov
mov
add
call
clc
cmp
ud1
xchg
dec
and
ja
call
mov
into
fwait
sub
xor
jle
and
or
add
mov
mov
cmp
ficomp
shr
inc
gs
xchg
lahf
sub
test
cmps
adc
xchg
dec
mov
(bad)
mov
cmps
xchg
dec
push
or
(bad)
pop
lea
daa
ret
fs
inc
mov
sub
and
setns
push
xor
cmps
jnp
mov
ins
test
and
idiv
(bad)
call
into
jns
jnp
jp
das
out
inc
pop
jge
retf
mov
mov
pop
push
(bad)
aad
shl
pop
cmp
push
or
mov
jg
sbb
cli
xor
hlt
jp
es
jbe
mov
fdivrp
fimul
mov
out
ins
ds
repz
fsub
sahf
cwde
jmp
dec
sahf
cwde
push
adc
sbb
pusha
xor
scas
dec
ins
jmp
aam
pop
cmp
jecxz
and
dec
inc
movs
out
adc
movs
movs
cmp
push
imul
gs
imul
dec
cmp
ret
js
inc
sar
mov
pop
jb
cmp
cmps
fcmovnu
sbb
jns
jle
in
xchg
int
pushf
jno
call
push
inc
or
jmp
dec
inc
call
repz
int
into
mov
add
inc
adc
sbb
push
mov
dec
test
xchg
les
es
mov
xchg
movs
js
dec
(bad)
mov
into
push
jnp
add
fistp
or
sbb
retf
pop
pop
retf
and
retf
jl
push
mov
cli
sub
xlat
cdq
mov
sbb
pop
jns
xor
push
retf
jg
lahf
retf
idiv
call
and
inc
(bad)
add
xor
mov
or
push
data16
mov
push
lds
das
jne
or
xor
in
ss
mov
dec
mov
mov
mov
fcomp
jge
xor
pusha
adc
and
dec
ror
ins
sub
je
les
jg
jo
repz
popa
dec
cmp
fmul
mov
push
retf
call
inc
scas
loopne
jno
ins
xchg
fcmovb
nop
jl
aaa
cmc
inc
jbe
push
shr
jbe
push
scas
mov
sysexit
push
cmp
pop
outs
stc
hlt
icebp
rcl
addr16
jnp
test
xchg
mov
(bad)
popa
in
outs
mov
push
test
jecxz
scas
mov
push
push
or
xchg
sbb
mov
js
push
(bad)
data16
or
jne
out
mov
xor
inc
jmp
mov
stc
dec
pop
mov
and
jne
mov
shl
cmp
fnsave
test
repnz
sub
clc
stc
aas
push
sub
mov
and
pop
cmp
sbb
vmovapd
(bad)
imul
test
lock
test
pusha
cmp
jae
sti
jg
jae
add
hlt
sub
loop
iret
mov
cmc
lods
and
sub
pop
cld
inc
in
pop
add
push
xchg
(bad)
pop
enter
jae
aam
inc
inc
jo
jae
jmp
add
cmps
mov
nop
pop
and
mov
push
(bad)
xor
dec
pop
ins
add
mov
clc
in
xchg
jns
ins
dec
gs
jge
enter
inc
into
xor
xor
xor
test
int3
je
pop
ja
mov
js
enter
hlt
sar
sbb
test
pop
fbstp
pop
mov
fisubr
stos
lea
imul
fsubr
out
xchg
int3
sub
jp
lods
in
shl
mov
fcom
jmp
cwde
(bad)
loopne
adc
jbe
jge
xor
jmp
pop
mov
jbe
and
mov
nop
xor
xor
arpl
mov
sbb
in
stos
jge
shl
iret
cmps
mov
jmp
test
dec
mov
mov
xor
fcom
out
or
or
call
push
in
hlt
or
sub
mov
jno
mov
xchg
xor
loopne
push
add
jb
jecxz
rol
jmp
push
adc
repz
push
repnz
ins
xlat
mov
xchg
add
pop
inc
add
sahf
arpl
je
in
pop
xchg
mov
sub
inc
xor
movs
cmp
int3
loope
icebp
jmp
mov
jbe
sahf
mov
mov
jne
jns
ret
lea
xor
inc
dec
adc
xchg
mov
xor
pop
aad
adc
lock
rcl
data16
mov
fild
rol
add
jge
and
scas
sub
data16
daa
xor
test
and
xor
mov
mov
(bad)
jb
add
mov
cmps
mov
sub
pop
pop
lds
fdivr
mov
xchg
mov
sti
sub
dec
leave
pop
rcl
(bad)
cld
add
or
jl
fnstcw
les
sahf
in
ins
(bad)
add
ret
sbb
dec
popf
xor
mov
cmp
sti
add
or
scas
or
popa
dec
sub
mov
pusha
push
mov
sar
lods
adc
fdiv
xor
inc
out
xor
mov
iret
push
push
lea
iret
mov
and
and
mov
popf
pop
dec
push
scas
jb
imul
hlt
inc
in
cli
scas
dec
sbb
ins
mov
add
sub
sbb
nop
int3
je
or
scas
mov
adc
xchg
jl
pop
mov
sub
adc
push
mov
jge
mov
out
imul
aaa
cli
cmp
push
out
loope
(bad)
xchg
pushf
xchg
cld
dec
popa
jnp
sti
pop
scas
mov
mov
pop
bound
or
out
jbe
mov
mov
sbb
mov
adc
loope
cmp
jo
mov
ins
rol
and
ret
jecxz
cmp
dec
movs
jp
inc
das
jne
popa
push
(bad)
and
mov
adc
rcl
lea
mov
(bad)
mov
xchg
inc
and
xor
mov
push
mov
add
ins
into
sub
rcr
pop
jmp
jae
dec
in
scas
dec
jno
lea
mov
js
(bad)
scas
push
mov
cmp
xchg
(bad)
jns
push
ret
xchg
std
cdq
xlat
jmp
outs
xor
sbb
pop
sub
jns
xchg
add
dec
(bad)
xor
or
ss
jle
pop
sbb
fldcw
into
sub
imul
fcom
and
(bad)
test
xchg
lods
fs
mov
or
bound
mov
xor
(bad)
mov
mov
jge
dec
loopne
nop
das
jae
xchg
push
fisttp
call
(bad)
sti
mov
loope
dec
mov
mov
xor
out
push
mov
mov
jno
sbb
idiv
mov
add
mov
xor
mov
ins
xlat
pop
jo
lds
pusha
sub
xor
fs
sub
mov
mov
jg
ds
lea
pushf
pop
push
cli
enter
loopne
sbb
(bad)
ret
js
stos
add
sbb
dec
aam
loopne
in
dec
sbb
ret
retf
ins
jge
cmp
stos
pop
daa
and
and
dec
inc
inc
icebp
(bad)
popf
jp
push
push
jns
jae
add
dec
push
and
mov
in
mov
xchg
pop
cli
iret
retf
(bad)
aam
sub
shr
pause
or
loope
mov
je
aam
cmc
cmps
out
dec
push
test
add
scas
dec
xchg
out
jp
pop
inc
jmp
pop
cdq
jns
inc
das
aas
sub
inc
aad
sub
repz
js
retf
mov
cmp
sub
outs
dec
push
loope
and
sar
mov
aad
stos
inc
push
fcomp
setp
adc
inc
xor
fwait
btr
and
(bad)
lock
mov
xchg
shr
sbb
push
enter
das
sub
push
add
repz
pop
adc
inc
mov
adc
mov
push
pop
push
adc
mov
dec
(bad)
push
es
pop
push
pop
cmp
scas
data16
(bad)
jno
jg
sbb
mov
adc
nop
test
call
adc
shl
pop
mov
repnz
fnsave
scas
mov
cmps
popa
imul
(bad)
aaa
adc
bound
pusha
mov
ret
js
pop
mov
push
add
call
pop
inc
cwde
pop
mov
jecxz
scas
push
dec
push
outs
scas
lahf
or
dec
outs
mov
adc
ror
retf
dec
pop
inc
inc
or
sbb
imul
mov
movs
test
ins
jp
adc
jns
mov
fs
push
aaa
fisub
cmp
xor
xchg
shld
fdiv
ins
add
aad
mov
pop
mov
jns
add
inc
scas
xor
jnp
das
jmp
out
pop
ret
lea
fimul
bound
out
mov
mov
jmp
xor
scas
in
shl
ffree
fucom
jmp
mov
pop
into
pop
js
idiv
push
jmp
aas
sahf
xchg
(bad)
in
int
or
add
mov
imul
jns
enter
or
xor
test
ins
xor
mov
sbb
pop
std
stos
jge
adc
in
(bad)
jns
cdq
mov
push
inc
jg
(bad)
sbb
test
push
push
repz
xchg
mov
pop
sbb
mov
push
or
out
fs
jg
jmp
ja
xor
out
add
add
clc
fsub
xchg
xchg
adc
xchg
inc
sub
(bad)
mov
sahf
pop
(bad)
(bad)
outs
push
(bad)
sbb
or
rol
outs
outs
icebp
jmp
add
push
jmp
sub
cmps
cmps
cmps
dec
icebp
push
call
repnz
push
sti
mov
add
ins
shr
psllw
int
jmp
and
mov
repnz
out
ins
xchg
bound
sbb
movs
jne
iret
fucomp
mov
outs
test
lods
retf
stc
aam
(bad)
adc
aas
jge
mov
popa
and
and
fild
fsubr
pop
cmp
fst
stos
and
and
repz
loop
sahf
imul
cs
retf
inc
leave
and
sub
outs
pop
lods
jne
dec
xor
dec
das
movs
jmp
pop
loope
cmp
hlt
xchg
in
rol
sbb
add
daa
and
jl
pop
(bad)
lods
aad
jle
outs
cmp
mov
scas
mov
sbb
xlat
pop
ror
mov
sbb
jns
stos
mov
les
ja
in
in
ja
shr
jmp
pusha
mov
loope
stos
(bad)
mov
test
sti
stos
mov
push
and
push
add
or
push
inc
cwde
sbb
(bad)
cmp
daa
mov
(bad)
daa
mov
(bad)
xchg
sbb
mov
leave
pop
sahf
test
fimul
pop
xchg
cmc
cmp
fistp
and
ds
call
cdq
and
inc
mov
inc
xchg
mov
sub
adc
mov
lods
ret
xlat
inc
ja
and
cmps
aaa
or
jmp
pop
stos
das
test
mov
mov
push
lea
xor
jp
jge
test
mov
mov
ds
enter
adc
mov
ss
and
in
retf
sbb
adc
and
mov
mov
rol
(bad)
outs
push
(bad)
stos
jae
lahf
inc
das
out
les
enter
in
bound
lds
push
cmp
scas
xchg
xlat
xor
and
add
sahf
pop
sar
sbb
and
mov
pop
inc
aas
ds
call
jnp
(bad)
popf
js
outs
ins
leave
jb
shl
sbb
mov
retf
or
cmp
cmp
mov
mov
call
and
or
add
sbb
jecxz
(bad)
ins
int
retf
sub
jbe
bound
xor
mov
mov
outs
sti
pop
bound
dec
sub
loopne
pop
pop
push
inc
scas
icebp
mov
mov
loope
outs
sar
imul
or
push
outs
and
popa
mov
ins
add
sbb
je
pop
adc
jb
mov
push
iret
lods
call
cmps
ret
mov
je
hlt
add
sahf
in
or
in
inc
(bad)
(bad)
imul
xchg
loopne
mov
cmp
(bad)
jle
fwait
cmp
adc
push
shr
pop
inc
daa
aad
ins
mov
jo
xor
rcl
es
call
iret
jb
sub
and
pop
out
adc
icebp
or
xor
test
push
push
imul
xor
hlt
cmps
arpl
leave
shl
daa
xchg
pop
lds
mov
clc
mov
xchg
sbb
vandnps
sbb
xchg
addr16
adc
jl
imul
inc
push
or
mov
dec
das
jns
dec
jp
es
mov
push
(bad)
lock
rol
mov
inc
stos
pop
push
and
jmp
jae
and
and
adc
imul
adc
mov
jg
addr16
frstpm(287
adc
add
fwait
adc
out
pop
jns
lahf
pusha
fcom
(bad)
push
lods
add
aas
cmp
sar
inc
mov
test
jbe
imul
cmp
cld
cmp
sbb
jb
jmp
mov
nop
(bad)
mov
std
jne
add
stos
xchg
jmp
mov
lea
sub
ins
push
pop
test
aas
fsubr
mov
lahf
cmp
sub
aam
push
mov
sub
sub
aad
fcomip
jb
mov
jne
mov
cli
mov
call
mov
je
add
inc
push
pop
xor
jge
sbb
das
push
mov
hlt
lock
movs
jle
jno
test
push
inc
clc
cwde
test
pop
ins
or
mov
xor
stos
sub
ret
jmp
mov
data16
xchg
sbb
or
(bad)
mov
mov
out
in
in
mov
mov
push
xchg
sahf
cmp
dec
test
inc
mov
retf
loope
scas
dec
sub
fwait
daa
push
xchg
rol
sub
mov
jbe
not
pop
inc
or
leave
sbb
shr
mov
movs
jecxz
scas
jecxz
pop
out
je
jnp
and
imul
sti
popf
dec
mov
in
pop
in
mov
mov
xor
pop
xor
jmp
or
sub
jge
mov
sbb
dec
idiv
push
scas
and
cmp
bound
xchg
mov
cdq
les
mov
dec
push
call
and
or
or
sub
jecxz
pop
test
jae
pop
rol
jns
sub
shl
lahf
das
fwait
inc
add
mov
bound
inc
pop
mov
lock
pop
(bad)
test
xor
iret
dec
lahf
dec
cli
popa
sbb
or
dec
jno
test
jno
pushf
or
(bad)
xchg
mov
push
popf
shr
aaa
cmp
aad
imul
or
pop
(bad)
div
outs
xchg
shl
and
rcr
push
sar
xor
test
mov
sub
sbb
(bad)
fdiv
lods
and
cmp
push
out
cmp
dec
sub
outs
xor
das
sahf
es
in
and
loop
cwde
mov
mov
jle
adc
sti
mov
adc
aam
(bad)
push
fs
jle
inc
mov
push
push
jno
loop
es
call
xchg
push
mov
and
or
popf
fnstsw
imul
mov
add
outs
movs
xor
rol
mov
sbb
icebp
and
fs
push
adc
das
imul
sahf
loop
pop
push
adc
adc
mov
dec
jge
fst
stos
pop
jno
pop
shl
mov
mov
sbb
add
pop
shl
pop
xor
lock
jbe
mov
mov
push
add
jnp
aaa
cmp
popa
sbb
fld
lods
and
add
pushf
jle
adc
dec
push
sub
fldenv
xor
gs
stc
or
sub
ficomp
inc
(bad)
xlat
pop
cmp
ret
push
xchg
js
inc
or
sbb
mov
jmp
retf
lahf
mov
lods
pop
(bad)
mov
in
hlt
lahf
stc
sbb
mov
pop
push
mov
add
call
jae
inc
loope
repnz
dec
pop
sub
ins
push
push
cld
stos
push
mov
movs
lods
arpl
cli
sbb
or
bound
cmp
aaa
add
mov
movs
xchg
mov
dec
mov
sub
add
jne
cdq
jle
iret
cmp
mov
dec
cld
fprem
jae
inc
inc
jns
xchg
sbb
and
mov
jg
pop
push
and
xchg
inc
stc
jg
jb
les
lds
popf
inc
cmps
retf
and
movs
inc
mov
jge
cmps
or
sbb
jmp
daa
(bad)
icebp
cmp
in
movs
jo
mov
jb
movs
in
mov
push
dec
xlat
data16
jne
inc
pop
lahf
sub
xlat
sub
push
sar
(bad)
mov
scas
sub
or
test
sub
sub
xchg
ins
xchg
mov
into
jmp
mov
outs
dec
inc
jle
out
pop
jns
xor
call
inc
jbe
pusha
jmp
pop
jo
sti
pop
inc
pushf
mov
movs
shl
(bad)
cmps
mov
or
movs
or
push
jp
pushf
data16
and
mov
fst
aaa
loope
retf
push
mov
jbe
mov
add
sbb
pop
fmul
loope
mov
dec
adc
loop
retf
int
xor
rol
mov
cs
sub
push
dec
dec
aad
das
sar
outs
mov
pusha
xor
inc
or
and
jnp
mov
pushf
dec
aas
xor
pop
mov
jb
dec
or
int3
xlat
mov
sbb
and
push
xor
imul
cmc
dec
in
iret
mov
cmp
adc
pop
dec
add
sahf
mov
enter
cli
push
sbb
jmp
test
mov
inc
inc
pop
mov
or
ins
in
cmp
rcr
popa
push
pop
sbb
adc
pop
jbe
rol
stc
xchg
jl
sub
js
ffree
or
mov
and
das
fs
dec
and
sub
add
repz
daa
and
lods
sar
push
mov
(bad)
out
pop
xchg
sahf
std
inc
add
xchg
aas
mov
sbb
inc
push
imul
push
out
stc
pop
xchg
pop
ss
sbb
in
push
scas
push
xchg
add
xchg
mov
add
mov
cmc
je
mov
repnz
and
mov
in
adc
push
daa
add
sbb
jne
mov
pop
dec
dec
xor
adc
ror
and
mov
or
xchg
sub
sbb
sbb
mov
clc
sub
or
test
lods
sub
aad
mov
cli
popf
aaa
push
push
pop
fisub
sbb
push
push
adc
or
xor
mov
rol
mov
loope
fcomi
cdq
outs
push
mov
or
xchg
pop
test
xchg
aaa
mov
add
rcr
pop
and
xchg
inc
mov
mov
cdq
jp
movs
sub
pusha
aas
jmp
jle
cmp
stc
aas
stc
inc
ja
fucom
mov
lahf
mov
push
jp
(bad)
fistp
enter
and
mov
or
std
mov
jns
cld
sub
cld
(bad)
shr
lds
mov
sub
repz
popa
movs
rcl
in
(bad)
icebp
movs
jne
dec
push
es
xchg
imul
into
dec
sbb
jecxz
scas
ja
jmp
ss
push
push
in
rcl
mov
in
xchg
fs
out
sar
adc
in
jmp
or
add
icebp
mov
movs
movs
add
ficom
pop
icebp
pushf
stos
fstp
shl
stc
mov
sbb
jbe
jp
push
inc
dec
pop
fdivr
aam
(bad)
cld
jne
call
xor
hlt
stos
mov
or
push
xchg
inc
and
xchg
dec
jle
jae
jle
pusha
add
hlt
scas
leave
and
jl
cmps
add
push
inc
add
leave
adc
cmp
mov
lea
pop
test
sar
xchg
out
cmp
fcom
xor
sbb
mov
push
repz
paddw
and
cli
or
mov
(bad)
jmp
xlat
mov
out
jle
hlt
test
daa
sub
fcmove
cmp
lahf
xor
xchg
dec
jge
je
xchg
rcl
mov
retf
repnz
repnz
imul
scas
dec
pop
data16
sub
mov
dec
outs
pop
pop
lahf
jp
sub
or
pop
adc
popa
test
(bad)
sub
fs
(bad)
fidivr
pushf
fist
(bad)
in
push
mov
cmp
pushf
dec
int
jmp
test
ss
mov
push
cmp
movs
int
dec
(bad)
inc
add
hlt
or
adc
jno
ins
call
ror
jl
into
les
mov
pop
dec
inc
es
sbb
lahf
xchg
push
mov
xor
int
test
mov
sbb
inc
sub
cs
xchg
xor
dec
loop
imul
fmul
fdivr
inc
mov
cwde
push
imul
aas
xchg
sbb
in
add
fwait
sbb
xchg
int
inc
push
mov
int3
mov
jmp
in
xor
in
mov
rcr
mov
and
mov
and
sbb
repz
dec
mov
(bad)
rep
stos
ret
pop
cld
scas
add
xor
sbb
adc
test
stos
push
in
cmc
hlt
dec
cmp
mov
xchg
popa
adc
adc
or
or
sub
inc
pop
call
sub
xor
sbb
push
jmp
adc
mov
inc
arpl
leave
cmps
xor
sub
dec
fwait
retf
inc
aad
dec
pop
adc
imul
xor
test
inc
cdq
clc
fadd
inc
or
popf
jne
cmps
mov
mov
rcr
and
sbb
cmc
gs
call
std
and
and
sar
ss
nop
int3
inc
cmp
movs
inc
mov
mov
sbb
in
sahf
ins
hlt
neg
and
imul
sbb
repnz
shr
and
inc
fist
(bad)
sub
adc
ficomp
je
cmps
push
xor
mov
out
addr16
push
mov
call
imul
jbe
jno
test
cli
daa
std
sbb
fdiv
xor
test
xchg
retf
lock
jp
dec
movs
js
(bad)
lock
push
push
mov
out
imul
fcomp
lea
daa
push
mov
or
mov
leave
neg
push
push
out
pop
rcl
pop
ss
adc
push
xchg
mov
pop
enter
cmp
xchg
push
cmps
mov
fdivr
loopne
adc
cdq
jl
dec
jl
and
push
les
lods
xchg
or
sti
add
add
outs
mov
(bad)
xor
sti
add
mov
sub
adc
test
cmp
lods
push
fldcw
inc
je
push
lods
lods
inc
daa
dec
mov
jae
mov
leave
das
cmc
fucomp
inc
pusha
sbb
popf
leave
or
sub
mov
cwde
call
mov
adc
lahf
sbb
inc
movs
repnz
push
cdq
lea
add
dec
inc
mov
inc
add
retf
(bad)
popa
js
inc
and
xor
cmc
popa
repz
mov
pop
pop
dec
jle
dec
xor
or
add
push
cdq
cmp
and
ret
mov
add
fisub
pusha
retf
xor
outs
cmp
push
ins
or
test
fwait
push
imul
cmps
or
xchg
sbb
lock
cmc
out
mov
hlt
out
inc
test
mov
fstp
sub
add
sub
sbb
pop
adc
pop
retf
xchg
jb
xor
pop
pushf
mov
mov
imul
cmp
dec
mov
sbb
push
jg
pop
outs
lods
ins
or
call
imul
imul
ss
call
add
mov
jmp
jg
std
out
pop
sti
lahf
ret
or
je
push
cmp
dec
lahf
inc
fwait
imul
jmp
fidivr
fld
push
adc
push
in
(bad)
and
pop
ror
in
cmp
mov
popa
test
dec
ror
in
js
sub
lods
mov
jo
popa
push
xor
inc
fdiv
adc
sbb
mov
hlt
sub
das
loop
xchg
sar
stc
xchg
das
lea
and
je
jns
or
pushf
adc
mov
jmp
jae
fwait
arpl
retf
xchg
cmp
sbb
(bad)
icebp
(bad)
cmps
pop
stos
xor
xchg
push
sub
js
mov
push
(bad)
retf
mov
dec
push
sub
retf
cli
push
out
aaa
lods
fisubr
rcr
jmp
lea
rcl
retf
and
outs
push
and
inc
enter
fdivrp
outs
cmc
idiv
inc
jmp
and
add
xor
ss
mov
popa
sbb
xchg
js
inc
je
sub
fidivr
cwde
xchg
pop
adc
daa
dec
outs
inc
mov
push
cwde
lahf
lock
push
add
inc
inc
push
sbb
loopne
cmps
ins
(bad)
add
fistp
cmp
pop
mov
xchg
cmp
(bad)
mov
js
xor
adc
pop
repnz
test
sbb
push
leave
sbb
inc
ja
fisubr
sub
jmp
mov
push
cmps
sub
sub
push
mov
leave
dec
icebp
gs
pusha
jbe
fs
loop
mov
and
xchg
inc
push
mov
shr
xor
fmul
push
out
in
out
dec
inc
in
lods
xor
mov
lahf
icebp
iret
mov
inc
inc
sahf
sbb
scas
add
out
pop
stos
icebp
cmp
cmc
mov
and
push
inc
cmp
add
jno
lods
fnstcw
ss
shr
and
jb
das
mov
add
xchg
test
mov
sahf
or
(bad)
mov
clc
add
stos
push
or
mov
mov
cmps
xchg
shl
cmp
loopne
adc
jp
mov
in
and
cmp
scas
shr
inc
jl
cdq
and
lahf
mov
jno
mov
pop
cmp
out
jne
dec
aam
(bad)
xor
lahf
into
mov
shl
sbb
aad
sub
xchg
and
js
dec
xchg
ds
sti
push
in
xchg
xor
(bad)
shr
jno
out
push
fisttp
rcl
cmp
dec
inc
sub
sbb
jg
ss
lods
push
addr16
dec
mov
or
push
cmps
jg
sub
xor
sub
inc
sub
cmc
push
and
lds
sar
movs
mov
sti
fsubr
imul
aaa
iret
in
rol
jno
pop
and
add
iret
in
add
mov
sub
imul
inc
mov
push
mov
(bad)
scas
and
mov
add
retf
fmul
into
in
scas
sub
xor
push
jne
fmul
cdq
stc
adc
fimul
sub
shl
sti
dec
push
add
sub
hlt
ss
icebp
and
fs
jae
loope
mov
inc
jmp
aam
sbb
mov
lds
in
pop
cmp
jecxz
jmp
mov
into
adc
in
lock
sub
sub
imul
sub
(bad)
fidivr
jmp
dec
mov
test
mov
(bad)
jae
test
adc
jecxz
mov
jp
mov
jb
and
jbe
ds
cmp
daa
add
mov
pop
js
cmp
jl
or
imul
sbb
movs
mov
cmp
fldenv
mov
nop
mov
or
int
push
adc
imul
idiv
inc
sub
cdq
inc
cmps
popf
shl
xor
mov
ret
test
(bad)
xchg
sub
xchg
inc
pop
lahf
cmp
repz
sahf
cld
or
adc
idiv
cmps
cmp
mov
pop
in
pop
push
mov
cs
and
adc
test
fs
pop
fcom
mov
dec
cli
push
xor
push
and
sub
ins
daa
xchg
test
arpl
pop
mov
push
mov
ins
or
inc
dec
dec
mov
inc
jl
loop
jno
shr
inc
pushf
ins
mov
mov
test
xlat
sub
or
mov
xchg
mov
retf
inc
loop
mov
(bad)
popf
cmps
mov
adc
stos
outs
aas
clc
fcomi
push
and
pop
add
mov
adc
mov
sub
repz
sbb
lahf
int
sbb
dec
lea
imul
(bad)
dec
cli
mov
int3
popf
push
push
adc
sub
inc
fld
cmp
popa
stos
imul
push
jnp
call
sbb
test
xchg
jecxz
mov
call
cmp
mov
or
mov
mov
bound
cmp
xchg
addr16
sar
xchg
and
xor
scas
inc
dec
push
pop
addr16
ins
xor
shld
mov
movs
sub
mov
cmc
call
jg
mov
jo
sub
mov
shl
sub
xlat
out
ret
out
xchg
jecxz
scas
cmp
mov
test
push
clc
ss
outs
push
inc
loope
sub
jo
pop
aad
inc
fisub
popa
loop
je
jg
sar
(bad)
movs
mov
ja
mov
jns
js
xchg
mov
loop
icebp
xor
inc
retf
sbb
out
pop
movs
sub
dec
jne
adc
clc
inc
enter
pop
ret
push
cmps
dec
pushw
push
xor
outs
jb
cmps
retf
sbb
int3
mov
xlat
retf
sbb
out
dec
in
or
jnp
inc
rcl
sub
and
add
pop
or
lods
dec
fisttp
ins
(bad)
(bad)
fwait
cli
sti
mov
(bad)
sub
sub
dec
(bad)
fucom
imul
jbe
adc
and
js
or
inc
push
and
or
dec
in
dec
mov
xor
push
enter
sub
xor
mov
pop
je
ins
or
mov
gs
movs
pop
adc
mov
movs
sub
sub
xchg
pusha
cs
retf
lea
dec
mov
iret
stos
sub
mov
(bad)
enter
ret
std
clc
cmps
(bad)
fwait
loopne
ret
outs
push
daa
jl
inc
sbb
sbb
ret
push
mov
ja
fs
jle
aam
xchg
int
cmc
test
mov
rcl
push
fcomp
and
out
sub
loopne
pop
mov
dec
mov
mov
fsubrp
xor
and
pop
addr16
stc
jb
imul
fnsave
fsubr
xchg
rol
cwde
js
lds
out
xchg
inc
in
adc
add
int
or
mov
sbb
jno
mov
mov
cmp
mov
xchg
loope
mov
cmp
xchg
ins
xchg
mov
mov
popf
mov
fs
fldenv
(bad)
out
popf
xor
in
mov
neg
push
sar
xlat
xor
mov
rcl
add
ins
mov
pop
xlat
cmp
daa
sar
sar
jl
jo
ficomp
sub
add
push
pop
out
sahf
pop
aas
cmps
inc
pushw
sbb
add
jb
aaa
adc
ror
call
push
xchg
ret
shr
mov
out
mov
dec
retf
inc
or
retf
(bad)
cmc
fcom
and
inc
mov
je
mov
jle
sbb
pushf
rcr
or
cmps
pop
cld
inc
add
movs
xchg
mov
stos
mov
test
repnz
fucomip
shl
es
pushf
in
jae
gs
int3
dec
xchg
fimul
add
sub
mov
inc
(bad)
fisttp
pushf
in
repz
jl
mov
mov
pop
mov
mov
out
xor
loop
mov
mov
mov
data16
push
cmp
jge
test
fld
rcr
push
pop
call
fdivr
daa
sti
inc
jle
xchg
test
sbb
cmp
int3
inc
sbb
nop
jnp
(bad)
and
pop
shl
add
loop
or
push
dec
xor
jl
mov
cld
sub
fcomp
xor
iret
adc
(bad)
fdiv
lock
test
push
xchg
stos
or
push
and
push
aam
adc
fstp
jno
aaa
leave
jg
add
xor
fild
icebp
push
or
sub
icebp
int
add
rcl
cdq
call
mul
fsubr
popa
and
or
fs
test
sti
dec
mov
bound
jg
and
adc
gs
sub
jne
jle
ins
cmp
adc
sub
inc
jae
jae
out
loopne
fimul
adc
pop
push
add
jo
iret
fstp
ds
movs
jns
arpl
push
retf
(bad)
loope
std
jnp
pushf
dec
inc
test
enter
rcr
and
sub
xor
into
dec
mov
int3
inc
(bad)
std
dec
in
sub
pop
repz
in
push
jge
loopne
mov
leave
pop
jg
test
outs
xchg
int
pusha
jnp
sbb
int
add
sbb
lea
in
xchg
pop
fmul
pop
aaa
sahf
popf
sub
sbb
pusha
jnp
xchg
cwde
lds
xchg
fmul
movs
into
ins
retf
je
jne
jns
pusha
outs
push
jnp
mov
add
sbb
lock
adc
dec
pop
xchg
and
jg
push
je
inc
mov
in
fwait
xor
adc
cmp
xor
mov
mov
adc
lods
mov
mov
push
cmp
bound
cs
ja
sub
mov
mov
sti
ret
pop
pop
out
outs
lahf
icebp
sub
inc
lock
pop
loope
test
dec
inc
mov
cs
mov
mov
cmp
xor
stos
div
outs
jge
(bad)
mov
jecxz
adc
and
or
add
into
sub
aam
xor
movs
lods
add
or
(bad)
cmps
test
out
inc
sbb
xchg
and
das
push
adc
mov
cdq
push
mov
xor
dec
(bad)
xchg
xchg
sub
int
adc
push
scas
loop
xchg
inc
xchg
lahf
repz
test
xor
pop
(bad)
repz
pop
(bad)
jmp
call
push
clc
sub
ins
sub
ja
inc
sbb
xchg
xchg
add
add
dec
inc
rcl
dec
and
push
jns
(bad)
cld
xlat
mov
push
ja
sub
pop
jp
jbe
add
data16
dec
sbb
arpl
sahf
div
cmp
bound
jg
dec
rol
imul
test
mov
ins
sub
icebp
mov
inc
movs
pop
sbb
jmp
fmul
mov
scas
pop
or
fst
stos
push
push
(bad)
out
xor
adc
loope
xor
add
mov
or
pop
mov
cmp
jae
pop
(bad)
and
(bad)
stc
xor
xchg
or
out
scas
fnstsw
cmp
stos
dec
mov
xchg
xor
popa
add
popa
loop
jnp
stos
fld
test
push
mov
dec
xor
ja
imul
stc
mov
retf
mov
cmps
enter
mov
retf
inc
sbb
out
retf
test
xchg
dec
into
out
mov
dec
popa
pop
imul
lods
fadd
jae
mov
sti
mov
xlat
ja
push
adc
dec
push
mov
pop
loop
pushf
dec
add
movs
(bad)
not
sbb
(bad)
(bad)
daa
push
clc
rcl
pop
and
sahf
nop
push
clc
pop
adc
lods
sbb
adc
jecxz
sbb
jmp
xchg
sbb
inc
mov
pop
mov
pop
mov
sbb
pop
das
lock
push
mov
imul
or
lds
popf
(bad)
stc
mov
inc
dec
lahf
loop
aas
shl
sub
push
xor
fdivr
cwde
mov
ficom
jne
ins
push
shr
lea
leave
iret
sbb
lahf
mov
adc
xor
push
fdiv
hlt
mov
sub
lahf
lahf
lds
addr16
clc
lahf
mov
jle
and
or
call
mov
xchg
bound
cdq
jno
aaa
cld
(bad)
fstp
mov
out
mov
mov
leave
jbe
daa
inc
mov
push
das
div
adc
mov
(bad)
cld
(bad)
in
fld
jo
and
daa
mov
push
add
gs
es
jl
and
jo
fs
and
push
sub
jno
cli
out
add
call
mov
cmp
add
ins
pop
pop
outs
aad
mov
lods
mov
push
dec
out
rol
push
jge
fwait
aaa
xchg
xor
push
and
sub
mov
or
or
js
xchg
and
mul
mov
add
in
and
cdq
sbb
inc
mov
push
retf
popf
jmp
xor
shr
js
dec
std
js
xchg
adc
int3
and
mov
xchg
shl
ds
test
int3
pop
xor
gs
sub
xor
mov
sahf
adc
push
dec
test
scas
xor
mov
push
ds
iret
sbb
mov
xor
xchg
ror
xchg
add
mov
add
pop
fstp
add
punpcklwd
cmps
sti
movs
push
lods
pusha
or
stc
scas
or
pop
push
enter
loop
ds
xor
movs
dec
movs
xor
nop
jle
ret
not
xchg
mov
test
push
push
cmp
repz
fistp
cmp
jb
cmc
push
mov
repz
outs
dec
pop
aam
in
ins
mov
inc
int
sub
pop
mov
pop
test
nop
popf
sub
out
add
inc
movs
or
sub
sbb
test
test
ret
scas
mov
call
push
mov
outs
adc
or
or
scas
ffreep
popa
mov
clc
pop
mov
pop
inc
call
or
inc
cmp
pop
lods
sti
repnz
out
mov
je
xchg
addr16
(bad)
cmp
daa
adc
enter
pop
inc
je
add
push
xor
xchg
mov
or
fdivp
dec
loopne
movs
pop
mov
rcr
movs
sbb
and
(bad)
sub
mov
xlat
pushf
daa
cmp
mov
test
sbb
not
das
fnstcw
add
xchg
and
jl
push
and
push
jecxz
inc
cs
jecxz
outs
mov
cmps
lea
mov
shr
or
cmp
je
loop
mul
faddp
and
cmp
(bad)
fcom
ret
push
aaa
pop
dec
fbld
jl
sahf
add
xor
out
imul
xlat
retf
lock
adc
cwde
hlt
(bad)
imul
mov
movs
jg
div
icebp
mov
pop
mov
mov
cmp
jp
inc
lock
in
add
mov
(bad)
std
nop
call
or
adc
stos
pop
add
inc
jecxz
inc
add
outs
je
fild
add
jnp
push
push
and
xchg
mov
ror
fnstenv
mov
pop
sbb
dec
pop
jne
gs
jns
xchg
push
loopne
outs
dec
stc
xor
push
dec
(bad)
popa
xor
xchg
int3
(bad)
loope
cmps
fild
outs
int
pop
and
test
stc
neg
movs
scas
aas
lea
ss
inc
xchg
pusha
(bad)
imul
push
or
sbb
rcl
sbb
shr
mov
xor
pop
sbb
or
out
xor
dec
mov
or
out
dec
call
fld
mov
mov
and
xchg
out
sbb
push
clc
xor
js
jge
int
popa
je
cmps
sti
icebp
mov
out
sub
test
mov
aaa
les
shl
push
into
enter
idiv
add
cwde
inc
pop
outs
push
in
cmc
les
mov
mov
outs
add
lock
jmp
in
push
daa
adc
dec
ja
jg
sbb
fistp
fisttp
or
ret
mov
ins
push
or
jo
mov
push
jno
dec
or
jns
(bad)
retf
mov
cmc
sub
adc
ins
es
pop
cdq
scas
cs
sbb
mov
sub
xor
pop
ds
dec
test
call
jmp
mov
out
lods
inc
stos
sub
jo
ins
ss
test
lods
adc
dec
dec
xchg
dec
push
or
inc
lods
daa
pop
dec
xor
jbe
loop
icebp
inc
pop
sahf
push
push
xchg
xor
mov
push
jecxz
rcr
adc
mov
shr
xchg
out
aas
js
sub
bound
jb
xchg
aaa
add
(bad)
std
mov
cmp
pop
mov
or
push
xor
pop
adc
add
icebp
imul
das
dec
adc
pushf
mov
mov
pop
cli
adc
xchg
arpl
outs
jl
push
gs
lods
pop
shl
ds
imul
mov
dec
or
shl
inc
sub
bound
push
pop
xchg
sub
adc
inc
jae
lds
mov
xchg
xlat
popf
mov
cwde
(bad)
jmp
ds
mov
sbb
jns
in
push
mov
mov
rcl
xchg
cwde
sbb
xor
sbb
cmp
push
addr16
xchg
or
jge
sar
xor
jmp
mov
movzx
hlt
retf
sub
inc
push
adc
sahf
cmp
movs
xchg
push
lods
or
nop
movs
lahf
xchg
int
adc
shl
cmp
xchg
fild
jecxz
les
jmp
aas
add
pop
shufps
ja
scas
int3
rcl
mov
and
std
inc
jmp
std
dec
das
in
cmps
movhps
scas
ror
xchg
mov
pop
ins
scas
ins
call
jmp
mov
rcr
or
ja
sahf
push
dec
pop
call
repnz
int3
ins
inc
std
js
movs
mov
ja
and
fs
nop
mov
mov
adc
gs
sbb
loopne
cwde
ret
add
add
shr
call
outs
fnstsw
hlt
cld
psllw
scas
std
add
inc
push
outs
popf
nop
daa
idiv
outs
inc
cmp
xor
or
dec
inc
fdivr
push
push
jbe
sbb
lods
out
(bad)
push
adc
adc
mov
mov
clc
int3
icebp
ds
enter
sub
imul
cmps
outs
jmp
cmp
sub
xor
lock
fnsave
stos
push
leave
push
(bad)
int
(bad)
arpl
bound
xor
inc
push
push
and
js
(bad)
push
outs
sub
jns
stc
je
test
jne
dec
(bad)
movs
cmp
inc
jmp
mov
adc
(bad)
dec
add
in
fstp
pop
add
add
sub
fild
add
jge
mov
inc
inc
pop
mov
cmp
xor
int
ds
mov
jp
jne
cmps
push
jo
xchg
xchg
sahf
cwde
and
test
xlat
hlt
imul
dec
imul
scas
ret
out
xchg
xor
mov
sar
push
out
or
jmp
in
das
sahf
inc
push
push
outs
les
out
mov
retf
jno
aaa
cmp
test
fwait
enter
xchg
jnp
rol
mov
mov
push
std
loopne
scas
mov
add
outs
lods
push
je
mov
aaa
data16
jecxz
and
(bad)
rcl
(bad)
shr
push
ins
fidiv
adc
xor
inc
jp
jp
mov
pop
sub
sbb
and
adc
enter
imul
popf
mov
pop
gs
shl
retf
cld
fbld
mov
imul
fs
popf
mov
mov
fdiv
xchg
mov
ins
pop
sti
je
jne
add
cmp
pop
push
inc
xor
cdq
pop
xor
jecxz
sub
imul
mov
and
div
cli
dec
repz
in
jge
daa
shr
out
and
les
lods
jne
xchg
mov
xor
fst
cmp
(bad)
test
xchg
inc
mov
mov
int
aad
les
jp
fmul
ss
fcomip
sub
std
sti
pop
mov
addr16
ins
in
sbb
xor
mov
add
fidiv
test
loopne
and
int3
leave
jmp
loope
jno
in
pushf
outs
sar
(bad)
dec
sti
ss
push
stos
shl
push
shl
pop
inc
sbb
ins
add
lock
cmp
outs
cmp
ss
(bad)
jg
jno
xchg
mov
ss
out
push
lods
imul
cs
aas
jne
pushf
shl
mov
or
mov
fwait
fwait
mov
mov
fisubr
sub
je
push
dec
or
fincstp
int3
fisttp
jns
daa
and
sbb
in
adc
pop
jb
pop
mov
in
add
setp
push
aaa
cdq
jle
and
cmc
and
cld
jo
fld
mov
bnd
ret
add
cmc
pusha
adc
xchg
jno
shl
xor
aaa
mov
or
call
scas
pop
jae
popf
les
sub
sbb
jmp
cli
push
leave
pop
and
push
and
pop
jle
call
imul
rcl
ins
fidiv
sub
sbb
fimul
(bad)
bswap
test
stos
arpl
sub
inc
push
inc
iret
data16
add
mov
jl
in
inc
hlt
jae
sbb
mov
data16
pusha
mov
scas
les
data16
movs
mov
cmp
test
or
dec
mov
push
jmp
lahf
retf
inc
mov
out
push
call
xor
inc
add
dec
mov
fucomp
pop
inc
xor
and
ror
pop
xchg
int
xchg
inc
in
xor
aad
retf
inc
sub
test
sub
xchg
out
add
shl
pushf
mov
jbe
loopne
sub
lods
pop
adc
clc
scas
enter
sub
iret
mov
arpl
pop
push
scas
gs
pop
xor
push
jnp
ret
test
dec
or
cmps
daa
mov
call
(bad)
and
xchg
xchg
jno
or
jl
pop
test
imul
mov
lock
pop
xchg
jno
je
inc
lods
enter
mov
add
lahf
mov
rol
lock
jne
or
call
retf
out
jae
into
xchg
dec
out
aam
ins
inc
fstp
push
rcl
jp
cmp
inc
mov
xor
sub
int3
stos
out
fiadd
jbe
sahf
sbb
mov
sbb
imul
outs
mov
add
scas
xchg
pop
scas
ins
jnp
(bad)
out
cld
retf
jmp
adc
xchg
aam
shl
inc
adc
sub
adc
pop
mov
push
cdq
shl
loope
xchg
sar
sub
daa
xlat
inc
mov
xchg
out
fadd
(bad)
imul
arpl
pop
repz
pushf
xchg
ret
lea
outs
mov
es
inc
repz
mov
adc
cmp
clc
div
stc
jno
xor
jb
clc
push
pusha
aad
iret
pop
icebp
inc
xchg
xchg
fs
xlat
xchg
jns
sbb
and
call
inc
adc
mov
adc
sub
test
jg
xlat
sub
movs
dec
(bad)
fsub
std
fsubr
and
jp
cmp
or
push
adc
or
rol
and
cmp
fdivrp
enter
mov
adc
sub
sub
(bad)
fwait
out
sub
push
push
sub
mov
dec
in
sub
inc
inc
sub
jae
sbb
jecxz
or
push
push
dec
les
cld
sbb
and
gs
add
lock
addr16
gs
stc
mov
pop
gs
fnstcw
lahf
repnz
cli
fwait
enter
hlt
aas
xchg
sub
xchg
jl
outs
push
jg
retf
dec
cmps
cwde
lods
mov
loope
lods
sahf
(bad)
out
jo
xchg
xchg
popa
and
push
inc
inc
enter
popf
lahf
mov
xor
mov
jb
cmc
jne
cld
mov
pop
mov
stc
ret
in
aas
aas
cmp
je
lea
mov
cmp
cmp
and
repz
daa
cmps
xchg
mov
(bad)
xor
dec
fcom
(bad)
into
fst
scas
add
pop
pop
xchg
adc
dec
fwait
out
xchg
sbb
mov
xor
retf
mov
dec
in
mov
retf
fild
push
mov
add
or
jle
or
add
add
mov
lds
jne
jl
aam
cwde
jb
nop
sbb
mov
pop
mov
inc
mov
jnp
jae
scas
jmp
repz
and
pusha
test
xchg
ds
jns
ds
or
js
push
push
add
mov
xchg
mov
push
inc
xchg
in
jne
call
sub
add
mov
xor
stc
inc
iret
jo
retf
add
jle
clc
and
push
xchg
add
xor
int
dec
mov
in
mov
stos
fld
xchg
inc
cmp
into
push
ret
aad
ins
das
push
dec
push
mov
cmp
jne
out
fcom
adc
pop
xchg
(bad)
(bad)
mov
jb
scas
mov
push
jecxz
leave
inc
dec
scas
dec
pop
mov
cli
mov
movs
mov
and
mov
adc
lds
xor
mov
int
fiadd
(bad)
imul
add
cmp
bound
mov
idiv
sbb
and
call
sbb
mov
inc
test
lahf
xor
(bad)
jnp
nop
sub
js
cwde
xchg
sti
rcl
call
xchg
aam
xchg
inc
shl
enter
push
ret
loope
xchg
cmps
aad
inc
stc
inc
push
dec
fsubr
add
dec
fiadd
outs
enter
push
mov
jp
stc
in
fwait
and
push
mov
(bad)
lahf
js
mul
nop/reserved
iret
pop
cmp
cmps
stos
fsub
repz
(bad)
(bad)
pop
push
mov
fadd
pop
pusha
cmps
jbe
mov
xchg
inc
sbb
shr
jbe
into
lods
push
push
pop
sub
repz
and
xchg
push
jae
dec
mov
in
cdq
ret
push
js
dec
daa
cmp
test
push
pushf
out
xchg
mov
mov
adc
adc
inc
push
pop
xor
test
sbb
adc
pop
stos
or
shl
js
cwde
int3
(bad)
cmp
mov
test
movs
iret
jmp
inc
cmp
clc
xor
cmp
jecxz
sub
sub
popf
jecxz
sub
push
test
(bad)
jmp
(bad)
jmp
es
adc
out
call
pop
hlt
inc
das
inc
sahf
jb
test
mov
out
int
pop
jge
cli
cmc
sbb
rol
fadd
push
mov
ret
or
js
inc
xchg
pop
into
out
jl
into
loope
not
(bad)
into
xor
push
inc
clc
mov
rcl
ins
jnp
cs
arpl
jo
inc
lea
in
addr16
mov
adc
adc
pop
push
mov
push
and
aaa
(bad)
push
scas
fnstsw
push
std
mov
dec
imul
retf
jae
add
add
cdq
into
xchg
jmp
sub
rcr
repz
cmp
mov
and
cmps
not
std
and
cmp
mov
xchg
jge
div
aaa
clc
xchg
add
push
mov
aad
mov
ins
loope
pop
fdivr
jmp
push
mov
push
les
pop
mov
xchg
ret
shl
xor
dec
mov
or
dec
cmp
cmps
icebp
adc
xchg
pop
popf
ret
pop
and
push
cmp
mov
mov
(bad)
leave
xlat
mov
lahf
jne
add
dec
arpl
mov
int3
pop
data16
push
inc
xor
imul
push
jbe
mov
pop
push
mov
shl
inc
add
xchg
outs
mov
mov
(bad)
push
int
fst
jno
rol
out
pop
xchg
stos
and
and
mov
ret
adc
and
iret
mov
sahf
scas
mov
sbb
je
ja
adc
dec
int3
ret
cmp
dec
movs
into
into
mov
lahf
push
sub
push
les
call
(bad)
pop
add
jo
jl
retf
sahf
push
sbb
cli
ins
inc
sub
inc
sti
or
(bad)
ficomp
xchg
push
adc
das
inc
ret
cmp
aad
aad
xor
jae
xchg
mov
ja
scas
lds
enter
or
mov
jno
ja
pusha
xchg
(bad)
rol
out
fwait
mov
jnp
call
inc
loope
lods
nop
aam
fdivr
loope
xor
pop
mov
sahf
adc
mov
push
in
adc
add
xchg
cwde
inc
movs
into
data16
pop
jge
xchg
das
jnp
iret
ins
jp
cli
mov
mov
and
imul
bnd
retf
arpl
test
lahf
dec
mov
cdq
jl
addr16
pop
mov
mov
cs
cmps
(bad)
fistp
sub
stos
pop
add
cmp
pop
std
jp
push
pusha
xor
add
retf
in
stos
sub
popa
lahf
sub
aad
cdq
ins
adc
cld
jp
rol
out
dec
cmps
fiadd
and
cmps
add
or
popf
pop
add
lea
cmc
add
js
jmp
hlt
push
xchg
cdq
bound
or
jge
jp
add
add
arpl
test
mov
loop
mov
rol
nop
aaa
xchg
leave
push
sub
mov
jae
shl
jbe
out
jecxz
mov
dec
stos
mov
mov
shl
dec
pop
cmp
in
push
dec
sub
xchg
mov
dec
adc
fimul
call
inc
dec
in
add
fild
mov
sbb
dec
cdq
nop
icebp
stos
push
(bad)
aad
out
lahf
mov
ins
ins
or
pop
sbb
pop
cmp
ds
mov
sahf
dec
jmp
into
xchg
dec
and
inc
sbb
lds
mov
inc
jae
hlt
xor
lods
test
jmp
xor
ja
stos
lds
cwde
int3
push
stc
call
sbb
nop
cmp
push
aad
mov
push
dec
in
add
call
xchg
sub
nop
iret
push
push
or
mov
or
daa
push
pop
fldcw
and
and
and
pushf
pop
nop
xor
lds
jnp
jge
stos
int3
jl
adc
(bad)
cmp
xchg
aas
mov
clc
arpl
dec
(bad)
or
push
add
sub
pop
ret
neg
vsubsd
(bad)
ja
xchg
mov
inc
jmp
repnz
sub
jno
mov
inc
test
and
cmp
ins
fidivr
jle
ret
mul
push
dec
or
fwait
pop
imul
test
scas
out
stos
xor
jb
out
xor
jge
retf
pop
shr
mov
pop
push
xor
inc
mov
jo
out
sbb
mov
cmp
or
xchg
pop
and
pushf
sti
(bad)
cmp
adc
or
push
or
xchg
jbe
push
mov
fisttp
jge
ins
ins
sti
or
mov
push
hlt
push
loope
mov
loop
push
inc
jmp
ficomp
adc
sub
or
outs
faddp
lds
ret
jmp
out
mov
icebp
xor
inc
or
js
mov
or
and
mov
cmp
into
aaa
call
iret
mov
retf
jnp
xchg
xor
fdiv
cmp
ret
imul
ins
div
outs
and
cli
jg
push
shl
lar
fldenv
inc
inc
xchg
rcr
jp
push
les
movs
iret
sbb
push
mov
jecxz
outs
es
fs
xlat
sbb
bound
repz
movs
mov
or
ja
xor
test
das
(bad)
xchg
mov
pop
(bad)
push
pop
xchg
cmps
mov
mov
jp
repnz
xor
inc
retf
jle
stos
inc
iret
in
adc
movs
xchg
aad
sbb
mov
sub
mov
xchg
aaa
add
xchg
pop
jno
aad
inc
xchg
add
cmp
(bad)
shl
pmaxsw
out
fst
sub
mov
aam
cmc
repnz
shl
jae
sub
jge
add
dec
dec
aaa
ror
mov
mov
or
jl
add
mov
fadd
mov
mov
and
inc
sbb
sub
pop
neg
jle
enter
int3
dec
mov
and
pop
fsub
loopne
mov
jne
adc
cmps
call
int3
adc
mov
mov
test
mov
fidivr
xor
ins
pop
bound
fstp
push
test
fidiv
dec
sbb
mov
pusha
ret
sbb
xor
mov
xor
add
int
bound
(bad)
leave
mov
push
xchg
and
loop
cli
jg
sti
pop
mov
mov
sar
push
loopne
jecxz
cli
cdq
mov
mov
add
adc
nop
xchg
or
movs
repnz
cmp
mov
inc
jp
cmp
push
stc
fwait
mov
loop
inc
push
repz
mov
std
adc
or
ds
pop
out
dec
push
sbb
sti
jo
loop
cmps
gs
jnp
cmp
or
xlat
xchg
ret
jmp
dec
sbb
adc
scas
mov
mov
ja
pop
mov
or
and
xor
fidiv
mov
cmp
out
jecxz
or
fst
xor
inc
ficom
iret
out
(bad)
mov
xchg
jbe
ins
pop
mov
push
aam
or
dec
or
mov
mov
ss
in
cmp
mov
js
fmul
movs
clc
mov
jmp
lock
mov
data16
inc
dec
pop
xchg
loop
fs
sar
loope
inc
icebp
lods
popf
xchg
lods
dec
cmps
mov
dec
push
not
push
inc
aam
jo
pop
retf
(bad)
call
sar
pop
sbb
test
sbb
das
xchg
shr
out
fs
cmp
aam
mov
pop
test
push
rcr
cmp
xchg
xor
mov
dec
xor
icebp
dec
pop
inc
xchg
mov
mov
icebp
mov
mov
int3
scas
xchg
fcomp
jg
mov
xchg
jae
cs
mov
data16
jnp
pop
adc
enter
popf
mov
shl
pop
push
inc
sbb
cdq
icebp
lea
pop
test
dec
popf
and
ret
or
lea
pop
and
test
add
call
pop
xchg
pushf
fisttp
adc
inc
adc
neg
xchg
cmp
push
(bad)
fsubr
(bad)
or
(bad)
or
dec
arpl
je
aas
stc
stc
(bad)
js
aaa
gs
imul
inc
mov
out
pop
adc
je
mov
jg
sahf
dec
imul
cwde
movs
or
inc
push
repz
adc
repz
data16
test
mov
adc
rcl
stos
movs
adc
inc
adc
out
jp
fwait
lahf
jns
jbe
loop
int
cmp
pop
mul
mul
ror
mov
adc
mov
movs
inc
mov
shl
pop
in
or
sub
sub
dec
stc
stc
adc
pop
(bad)
test
popf
and
add
xchg
js
add
jl
xor
rcr
mov
fmul
(bad)
push
push
jb
mov
daa
mov
cmc
(bad)
jg
pop
adc
add
aas
xor
ss
retf
leave
sub
out
or
add
sub
mov
repnz
dec
xor
bnd
push
shl
mov
imul
lods
push
shl
mov
adc
je
cli
push
int
cmp
or
sub
stos
shl
test
mov
mov
mov
iret
gs
jae
fst
xchg
push
jp
cmps
cmp
nop
mov
sub
rol
cli
add
dec
cmp
mov
sbb
aad
jmp
mov
cli
jp
inc
sbb
out
push
aad
pop
jp
xchg
xor
fild
and
xor
jno
and
scas
leave
nop
adc
jns
sbb
xchg
mov
mov
mov
and
jmp
int3
leave
mov
inc
or
fwait
psraw
pop
xchg
push
sub
fnsetpm(287
ins
aam
sbb
pop
mov
int3
(bad)
repnz
mov
add
sub
xchg
arpl
inc
jno
sbb
data16
hlt
mov
inc
mov
and
and
fld
mov
xor
mov
int
mov
loop
or
mov
mov
xor
cmp
mov
not
sub
adc
xor
push
cmp
(bad)
push
xor
dec
mov
mov
sbb
test
mov
and
jmp
pop
sbb
xchg
dec
cli
clc
mov
retf
test
fild
fnstcw
iret
sub
sbb
or
(bad)
cli
leave
add
cmp
ror
out
jmp
mov
ficom
retf
sar
and
or
std
xchg
mov
xlat
mov
repz
mov
dec
shr
jle
or
cmp
xchg
addr16
daa
mov
loope
xchg
jle
data16
(bad)
jnp
jmp
test
fild
inc
ret
dec
cmp
movs
mov
sti
test
mov
lds
inc
test
adc
sbb
sub
xchg
cmp
das
cli
(bad)
cmp
sbb
jge
pop
(bad)
out
hlt
pushf
push
adc
into
in
(bad)
adc
jl
jnp
gs
int3
scas
mov
loop
int3
jmp
adc
mov
pusha
test
fldenv
in
(bad)
(bad)
xchg
mov
fild
xchg
sub
jns
pop
mov
inc
adc
sbb
call
mov
scas
gs
adc
ds
div
enter
test
xor
jbe
icebp
xor
sub
loop
(bad)
and
lods
dec
jb
dec
cmp
scas
retf
mov
bnd
test
sahf
gs
xchg
push
or
mov
push
xchg
imul
nop
or
in
pop
int
xchg
push
xchg
lea
retf
repnz
dec
pop
ins
sbb
cld
push
mov
in
and
cli
add
cmp
xor
popa
jecxz
sbb
sbb
jae
in
cmp
test
jns
or
pop
mov
mov
and
or
ret
fwait
adc
mov
inc
xchg
sbb
add
add
fist
fmulp
ror
cmc
dec
stos
mov
or
xor
adc
add
addr16
or
es
(bad)
xchg
mov
or
dec
jg
mov
xor
xor
js
nop
adc
adc
push
imul
xlat
retf
cmps
(bad)
std
mov
in
inc
fwait
movs
inc
mov
ins
or
xor
jo
xchg
cwde
push
int
data16
rol
loope
loop
push
lods
das
jmp
mov
rol
fwait
push
xor
xor
mov
call
adc
mov
and
adc
cli
addr16
mov
xchg
or
adc
push
xchg
fist
mov
pop
in
mov
(bad)
aad
and
jle
mov
out
jns
out
retf
sub
(bad)
adc
cmps
ja
in
inc
outs
xor
jl
pop
and
arpl
out
dec
xor
lds
pop
es
out
mov
out
ret
stc
cmp
xor
std
stos
pop
test
xchg
test
mov
in
xchg
inc
mov
outs
mov
test
inc
mov
aaa
sub
retf
add
xor
jb
int3
and
loopne
mov
scas
mov
(bad)
jp
sbb
nop
aas
jns
jb
sbb
jo
jo
fnsave
addr16
call
cs
iret
xchg
mov
sar
lock
xchg
add
lods
adc
pop
inc
inc
push
(bad)
leave
lock
push
push
pop
pop
inc
loop
out
inc
adc
ds
mov
into
imul
cmc
jle
sar
lods
add
pop
clc
lods
mov
jmp
xchg
mov
adc
js
cmp
or
adc
cvtps2pi
not
pop
xor
(bad)
jmp
xor
bsf
push
call
shr
loopne
dec
inc
pusha
lock
repz
test
mov
dec
add
sbb
mov
ss
pop
sahf
ret
out
dec
sbb
sbb
repnz
ror
push
rcl
inc
push
add
aam
inc
out
lods
ffree
mov
aaa
aad
fst
shr
push
fld
stos
adc
jo
or
pop
xchg
dec
lock
sbb
pop
ret
jecxz
aas
push
inc
cmps
or
idiv
hlt
jge
in
jle
les
adc
jns
jl
dec
push
mov
adc
daa
cmovl
cmp
push
das
ins
jge
sbb
mov
jae
jmp
gs
popf
dec
cld
xor
iret
push
inc
sub
pop
ja
mul
repz
test
imul
not
mov
adc
or
pop
lods
fsub
dec
(bad)
jle
pop
adc
lds
iret
jno
les
sbb
mov
imul
ss
pushf
test
add
cwde
pop
in
enter
adc
inc
jne
mov
add
lds
mov
cs
mov
out
sbb
mov
inc
jo
test
(bad)
cmc
pop
pop
(bad)
bound
fs
aam
outs
jg
mov
mov
sbb
xor
lods
daa
aam
add
cmc
mov
cmp
fisub
ins
fstp
mov
mov
xor
adc
mov
mov
inc
mov
loope
ja
fistp
cmc
aas
mov
test
pop
lods
xor
mov
push
mov
mov
rol
dec
inc
outs
popf
into
jno
in
pop
test
cmp
mov
jmp
or
outs
xor
es
out
icebp
sub
xchg
lods
pop
xchg
add
pop
push
xchg
test
sub
lods
inc
mov
retf
shl
sub
and
mov
cmp
or
ret
cmp
ret
icebp
xor
dec
adc
fst
xor
mov
ror
ret
push
cdq
add
sbb
jae
cmps
fst
jne
stos
pop
je
and
mov
ret
mov
ins
clc
outs
movs
aam
add
paddusw
xchg
jne
xchg
add
mov
pop
fist
mov
sub
or
loopne
ds
xor
mov
jmp
push
mov
out
(bad)
adc
dec
and
adc
mov
xlat
xchg
(bad)
sbb
cs
loope
and
xor
cmp
iret
push
rol
sar
pop
(bad)
lds
in
lock
fcomip
aam
mov
(bad)
sub
setno
cmp
and
xor
jbe
mov
pop
test
add
sub
not
xchg
inc
pushf
stos
xchg
les
sub
cmp
cmp
out
xchg
sti
xchg
jge
(bad)
jno
out
out
ret
push
fwait
inc
cmp
movs
sbb
fdiv
push
cmps
cld
adc
cmps
test
fistp
mov
sbb
xor
fst
enter
xchg
jnp
fnsave
push
mov
int
(bad)
test
mov
and
test
sub
dec
cmp
jo
lds
xchg
mov
jne
daa
repz
jno
in
icebp
outs
retf
pop
mov
lods
or
addr16
xchg
pop
loopne
aad
pop
outs
adc
pop
stos
mov
xchg
lods
fwait
int3
cmps
jp
and
test
sahf
pushf
cmp
call
mov
pop
addr16
shr
adc
adc
stc
sub
mov
dec
or
push
mov
mov
sub
inc
mov
ss
mov
xlat
cmps
hlt
idiv
and
(bad)
dec
scas
leave
jmp
xlat
test
xchg
add
mov
push
cdq
fsub
call
jno
xor
je
repnz
jmp
jmp
sub
test
xlat
xchg
aam
mov
ss
mov
jl
shl
inc
retf
xchg
aas
ret
sar
outs
or
add
clc
repnz
inc
pop
call
test
mov
xlat
push
mov
cmp
inc
mov
pop
cld
je
enter
cs
je
out
jecxz
bound
lods
(bad)
ds
mov
fisubr
pop
xchg
lods
fbld
sub
aaa
neg
sub
adc
pusha
push
cmc
adc
or
cdq
and
jp
mov
rcl
test
out
aaa
mov
jo
cdq
enter
inc
xor
push
ins
add
adc
fldcw
unpcklps
sub
mov
loopne
mov
in
movs
cmp
jae
mov
call
(bad)
fild
and
dec
pushf
in
in
sbb
add
push
stos
inc
mov
mov
mov
sub
push
ret
in
dec
cmps
inc
add
bound
pop
in
mov
loop
div
cmp
es
(bad)
xchg
jae
xor
add
adc
sub
loopne
mov
xchg
mov
jb
fld
cmc
sub
je
test
push
xor
int
push
jns
ja
data16
mov
pusha
cli
outs
add
sub
push
iret
push
sbb
mov
xchg
fdiv
and
add
jge
adc
repz
fs
aas
stos
stc
inc
repnz
int3
sti
cdq
xor
mov
inc
adc
(bad)
mov
std
mov
cmps
shr
jmp
sub
jp
shr
mov
push
call
push
mov
mov
shl
or
push
mov
repz
xchg
add
repnz
jns
div
test
int3
push
aad
mov
lds
pop
ret
sbb
inc
push
jmp
adc
arpl
mov
xchg
cmp
stos
test
fxch
push
fnstenv
enter
and
xchg
inc
ret
scas
js
outs
mov
inc
shr
jno
adc
push
xor
cmp
dec
(bad)
out
xchg
(bad)
mov
pop
aam
ins
in
add
call
add
xchg
aam
jmp
lods
xor
(bad)
jge
add
loopne
adc
jbe
push
out
jp
ja
aas
push
test
outs
xor
push
push
stos
mov
adc
stc
movs
idiv
or
push
leave
jbe
call
cmps
int
inc
sar
stc
inc
std
outs
in
jmp
sbb
fdiv
(bad)
ds
or
outs
int
(bad)
mov
not
jnp
test
jmp
cmps
dec
je
movs
fs
inc
pusha
aad
ret
fsubr
es
jg
lods
ret
das
cmp
xchg
mov
jne
mov
sub
push
imul
enter
mov
retf
sub
popa
ficom
lahf
out
ret
fs
add
mov
iret
loop
aam
cmps
call
es
mov
sub
sub
mov
fsubr
shl
test
js
and
mov
fisttp
mov
mov
pusha
int
or
pop
stos
adc
adc
push
ror
ficom
out
pop
sub
cmc
dec
pop
add
mov
mov
mov
mov
cdq
ss
jno
jmp
mov
daa
bound
xchg
pop
push
in
call
jmp
(bad)
mov
push
inc
cli
jmp
iret
scas
fwait
mov
pushf
in
inc
or
shl
sub
cmp
dec
scas
jp
mov
cmps
scas
enter
sub
js
adc
(bad)
repnz
mov
cdq
sub
sbb
jle
xchg
int
mov
imul
movs
sub
aas
sub
scas
pushf
xor
fwait
pusha
lock
dec
sbb
out
(bad)
imul
lock
cmp
dec
popf
sub
push
dec
stos
stc
jecxz
add
fimul
push
mov
loopne
cmps
jmp
sbb
out
add
loopne
push
pushf
push
fscale
in
retf
pop
mov
scas
in
mov
call
jne
imul
in
push
inc
clc
loop
fbld
(bad)
aad
cli
xor
add
stos
ins
xchg
mov
cwde
xor
out
mov
ins
clc
inc
inc
pop
mul
cmp
lods
add
into
stos
mov
and
or
aaa
(bad)
mov
mov
pop
fcom
cld
mov
xor
ret
jb
and
xor
adc
sbb
and
xchg
aam
arpl
mov
inc
xchg
test
dec
mov
xor
cmc
ret
mov
mov
sub
cs
jmp
inc
mov
call
cmps
pop
imul
mov
dec
stos
xor
sub
xchg
out
gs
or
mov
es
push
and
aaa
jl
and
ja
dec
or
pop
in
add
and
in
jae
sahf
bswap
mov
test
sbb
ja
or
adc
sbb
jecxz
or
mov
call
push
pop
dec
push
cmp
out
mov
aaa
call
adc
sahf
cmp
scas
ins
cmp
daa
lds
add
cmp
test
mov
sar
enter
stc
in
xor
xor
sbb
push
pop
(bad)
mov
mov
repz
mov
push
push
inc
out
rcr
fcomi
cmps
pop
sbb
test
clc
fstp
call
and
sbb
lock
mov
xchg
or
cli
js
shr
aas
and
psrlw
xor
fstp
push
lock
retf
mov
loop
pop
sbb
(bad)
js
add
mov
push
sar
push
dec
aas
sbb
lea
inc
xor
test
jge
cmp
add
call
pop
addr16
adc
into
cmp
(bad)
sub
mov
push
pop
xor
je
sbb
inc
lods
mov
retf
mov
aam
popf
(bad)
clc
jo
(bad)
js
das
pop
sub
add
in
jns
lds
push
pop
ins
dec
mov
fucomip
nop
pop
int3
(bad)
mov
xor
adc
xor
aad
rcr
dec
lock
hlt
or
push
(bad)
mov
loopne
jnp
mov
(bad)
push
in
mov
icebp
daa
repnz
shl
sub
xor
and
std
scas
xor
pop
mov
cmp
mov
cmps
or
outs
nop
mov
mov
ins
sub
xchg
sbb
(bad)
mov
adc
das
test
fidivr
leave
movs
pop
pop
imul
call
mov
or
popf
push
shl
pop
stos
inc
call
and
jge
(bad)
stos
xchg
call
test
loop
xor
push
sbb
cld
pop
pushf
adc
pop
fadd
pop
and
scas
test
cmp
call
scas
enter
sub
in
fldenv
call
add
inc
int3
sahf
dec
pop
je
std
pusha
scas
sbb
mov
sbb
movs
push
movs
and
retf
xchg
imul
iret
test
push
inc
and
inc
or
xchg
mov
ins
ficomp
xchg
idiv
std
jo
aad
inc
mov
sub
out
pop
adc
pushf
fst
clc
add
in
xchg
pushf
xchg
dec
xor
test
lods
loope
loopne
xor
lods
mov
mov
xchg
adc
jge
xchg
or
adc
mov
mov
sahf
mov
fsubr
xor
pushf
fidiv
mov
dec
xchg
lahf
stos
xor
mov
inc
jno
rcl
add
fs
sbb
(bad)
mov
or
fld
jbe
adc
jb
loopne
retf
leave
in
and
pop
pop
ret
and
repnz
cwde
(bad)
or
push
sub
and
mov
dec
dec
dec
xchg
nop
and
xchg
sbb
clc
sahf
aad
mov
xor
hlt
scas
add
pop
loopne
push
and
jmp
xchg
jb
out
loopne
adc
rcr
cmc
rcl
int3
retf
xlat
cli
cmp
xchg
fstp
cmp
in
sub
movs
push
and
add
sti
xchg
sub
dec
popa
jmp
xor
xchg
mov
leave
fsubr
(bad)
push
mov
scas
sub
data16
enter
(bad)
cmp
mov
int3
dec
dec
lods
clc
dec
jmp
xor
fwait
es
or
push
adc
mov
mov
or
mov
push
out
stc
hlt
adc
jle
mov
out
pop
ret
xlat
xchg
cmp
jns
add
inc
popa
in
mov
out
mov
sbb
pusha
or
mov
std
dec
add
jbe
mov
sub
loop
popf
fdiv
daa
xchg
add
sahf
or
fwait
int3
xchg
inc
jbe
jnp
lock
add
sbb
cdq
pop
jp
scas
inc
test
adc
out
add
rcr
arpl
hlt
stos
sbb
dec
dec
lock
mov
cld
pop
ret
ret
xor
cmp
cdq
dec
dec
and
pop
sbb
popa
call
std
push
jmp
xchg
cmps
mov
sub
sub
xchg
xlat
or
aas
lock
int
push
test
pop
add
ss
icebp
(bad)
push
inc
out
enter
ret
and
fs
stos
popa
xchg
cmp
repnz
mov
lods
adc
arpl
cmps
adc
popa
sbb
or
dec
mov
addr16
or
inc
loopne
hlt
out
pusha
(bad)
mov
scas
cmp
test
daa
hlt
movs
std
sbb
repz
inc
and
adc
jns
or
jo
adc
cmp
push
out
push
test
mov
dec
gs
fwait
adc
addr16
sbb
mov
mov
xchg
arpl
dec
retf
loope
cdq
les
and
pop
push
fidivr
mov
sub
xor
adc
cmp
mov
loope
and
adc
mov
or
mov
mov
imul
stc
(bad)
xlat
cs
cmp
jo
xlat
mov
mov
inc
mov
retf
pop
repnz
je
adc
ins
mov
aad
lahf
sbb
mov
stos
inc
push
or
jb
pusha
mov
popf
ds
xchg
ficomp
and
cmp
push
dec
inc
add
add
cs
adc
push
clc
fincstp
loop
adc
jo
adc
loop
icebp
in
cmp
fidivr
push
push
xchg
add
sbb
sbb
inc
cmp
imul
les
daa
clc
xchg
(bad)
fbld
xor
test
and
sub
js
pop
stc
sar
rcl
mov
mov
stos
pop
push
or
outs
in
add
jne
or
jnp
inc
icebp
(bad)
pushf
jg
outs
mov
xor
sbb
add
int3
adc
clc
pusha
les
push
stos
loop
dec
xchg
mov
ins
mov
hlt
aad
jae
aam
xchg
out
lods
or
mov
jnp
jg
cmp
push
cmp
pop
movs
inc
mov
(bad)
jp
lods
test
stc
movs
jmp
pushf
fnstcw
mov
cmp
jb
out
or
inc
cmovo
popa
adc
arpl
aam
pushf
sbb
jb
mov
outs
mov
rcl
dec
or
ficomp
(bad)
ficomp
fisub
or
cmp
icebp
stos
idiv
je
shl
pop
cli
call
sbb
cmc
out
cwde
hlt
pop
daa
xchg
mov
add
imul
loopne
mov
lds
adc
dec
sub
neg
fstp
push
inc
inc
aam
mov
aam
aaa
push
sub
aaa
mov
pop
inc
icebp
adc
mov
aad
fwait
in
inc
mov
sbb
aas
data16
mov
sub
fcmovnb
movs
fsub
push
pop
ret
adc
or
shr
sub
(bad)
push
fisubr
lock
jns
cmp
or
jns
jmp
pop
cmps
sub
out
dec
rcr
test
push
call
dec
in
dec
popa
mov
pop
push
in
shr
(bad)
pop
add
pop
jmp
add
dec
nop
pop
cmp
ficomp
push
xchg
imul
xchg
stc
jmp
xor
bound
aad
xor
pop
fst
push
pusha
ins
sbb
pushf
xor
and
into
aas
ins
push
cld
inc
(bad)
popa
mov
push
add
pop
mov
mov
jg
inc
ret
aas
xchg
(bad)
mov
aaa
lock
inc
mov
sub
cmp
push
and
mov
push
icebp
sbb
adc
add
or
xor
add
mov
in
shr
sbb
pop
adc
retf
lock
sbb
iret
lock
add
int
pop
scas
cmp
mov
mov
out
cmp
outs
adc
jnp
outs
adc
das
nop
inc
jae
fadd
leave
aas
test
ror
in
addr16
loopne
add
(bad)
fist
mov
mov
dec
xor
movs
xor
pop
xor
retf
pop
test
iret
sub
pop
loopne
loopne
sbb
in
mov
sub
dec
adc
(bad)
sub
mov
mov
gs
adc
addr16
aam
push
cli
cld
fs
int
adc
call
fwait
pop
push
inc
and
xor
lods
inc
add
cli
jmp
push
sbb
or
push
dec
xchg
aad
or
stc
push
mov
adc
add
jge
movs
pop
xchg
ret
cld
ror
jne
(bad)
imul
outs
mov
sbb
retf
cmp
js
mov
loopne
mov
sbb
jb
stos
add
call
adc
shl
out
test
sub
and
retf
sahf
mov
rcl
(bad)
and
icebp
mov
shr
dec
xchg
in
mov
out
pop
pop
ss
or
jmp
xor
xchg
fwait
retf
pushf
inc
(bad)
adc
std
(bad)
cmp
aam
out
ror
xor
fist
je
sbb
leave
lahf
mov
sbb
mov
cmp
dec
test
fist
aas
inc
daa
daa
sbb
int3
push
mov
xor
(bad)
pushf
xchg
sar
dec
retf
mov
or
fisubr
jnp
mov
cdq
inc
std
lea
stos
or
dec
(bad)
into
scas
outs
cs
je
mov
retf
pop
pop
push
or
(bad)
sti
or
ror
mov
cld
repnz
jecxz
jl
or
xchg
jp
icebp
xchg
enter
int3
lods
and
es
cmp
in
lock
bound
jl
pop
ffreep
std
adc
adc
icebp
test
add
inc
pop
or
mov
in
pop
xor
arpl
dec
rcl
lds
add
push
in
(bad)
cmps
lock
test
inc
fcomp
add
in
icebp
hlt
icebp
mov
cmp
mov
jge
ror
mov
popa
mov
and
mov
sub
fs
inc
cmp
mov
popa
popa
pop
cs
jle
nop
lods
call
sub
push
jmp
mov
icebp
sub
movs
mov
cs
push
imul
jae
dec
cmp
adc
pop
cmps
and
ret
in
not
push
adc
sbb
mov
dec
popf
xor
shr
xor
sub
cmp
cld
push
inc
dec
jno
cdq
dec
inc
sahf
dec
clc
fstp
retf
sub
icebp
push
adc
mov
fs
add
jns
call
or
test
mov
mov
dec
push
addr16
pushf
cli
xlat
pop
sub
imul
mov
rol
jnp
in
sti
dec
test
dec
fs
sbb
mov
in
rcl
in
lods
mov
scas
cdq
js
cs
pop
and
pop
xor
je
aaa
adc
xor
sbb
imul
test
ja
jb
xchg
loop
repnz
cmp
ja
test
aad
push
jg
xchg
add
outs
and
or
sbb
daa
dec
hlt
or
dec
retf
jecxz
test
mov
retf
test
int3
jle
fild
fcomip
push
jbe
pop
(bad)
out
xor
(bad)
add
lock
adc
xor
pop
mov
jbe
jp
jo
add
mov
sub
mov
repz
push
push
test
mov
pop
xor
fisub
fwait
ins
mov
cmp
imul
imul
pop
jle
test
push
lods
xor
or
rol
repz
push
sub
push
outs
add
enter
and
cdq
pop
pop
imul
and
xchg
inc
sbb
adc
loope
cmp
aas
mov
xor
dec
dec
xor
jge
cmps
in
arpl
jg
pusha
in
int
push
mov
xchg
es
out
add
push
add
test
sub
xor
daa
(bad)
or
jns
adc
push
pop
sub
cmc
out
xchg
or
icebp
in
dec
adc
div
les
xchg
inc
cmc
or
dec
mov
mov
repnz
popf
cdq
xchg
aad
ins
inc
xor
adc
xor
cmps
fbld
pushf
aaa
gs
mov
test
sub
push
lahf
outs
adc
mov
inc
outs
inc
sub
imul
retf
outs
and
and
fild
xor
sub
ds
popa
(bad)
xchg
cmp
inc
cmps
add
and
jl
dec
sbb
das
out
loope
imul
mov
lds
mov
and
scas
sub
adc
sub
shl
sub
out
jle
fdivr
popa
call
popa
into
mov
inc
cmp
mov
mov
sahf
push
out
push
sbb
scas
push
push
out
ins
lods
push
sbb
cdq
cmp
popf
hlt
jg
cli
nop
sbb
clc
shl
dec
test
cmp
retf
xchg
stc
or
jecxz
jl
jmp
fnstenv
scas
inc
pop
nop
and
cld
or
in
and
xchg
outs
ins
adc
jecxz
mov
lahf
out
pop
(bad)
in
mov
out
adc
mov
aad
inc
icebp
mov
jo
pop
std
dec
sbb
fwait
hlt
dec
pop
(bad)
sub
cmp
shl
loopne
cdq
sbb
jnp
dec
jle
shr
aam
xchg
or
jl
dec
or
movs
inc
test
test
arpl
test
cmp
test
dec
xor
aaa
aas
pop
lods
aaa
test
cli
sub
outs
stos
and
aas
stos
xchg
xchg
jns
adc
add
popf
jge
jg
inc
jno
push
in
loope
lods
pop
(bad)
into
mov
push
xor
lea
sbb
popa
shl
retf
cs
sbb
lods
add
mov
xchg
mov
xchg
push
xchg
pop
sbb
mov
pop
stos
movs
cwde
push
xor
and
jl
sbb
loopne
mov
imul
je
add
cmps
(bad)
ins
imul
adc
pop
ins
jp
fcom
sub
hlt
cmp
fiadd
xor
pop
pxor
or
fisubr
shl
(bad)
int
nop
lock
outs
es
push
add
in
cmp
mov
ror
push
cmp
call
mov
xor
icebp
ret
mov
add
gs
ins
jo
fs
dec
xchg
sar
dec
sbb
(bad)
leave
fxch
mov
fs
repz
mov
push
hlt
pop
xor
fnstenv
pop
loopne
adc
or
sub
or
(bad)
cmp
sbb
leave
adc
dec
mov
push
mov
pop
enter
cwde
hlt
call
out
dec
adc
(bad)
sub
shr
xor
cwde
(bad)
jns
(bad)
mov
or
sbb
adc
repz
ret
aas
mov
shl
(bad)
in
ret
jne
cdq
das
jo
xor
repnz
fldcw
mov
retf
lea
push
out
inc
mov
enter
xlat
inc
lods
pop
jns
fnstcw
xchg
push
or
repz
aam
mov
mov
shr
jl
aam
dec
mov
cmp
outs
cmc
cmc
sbb
imul
sbb
jbe
mov
cmp
jmp
fstp
sub
aam
add
ret
or
retf
dec
cmp
test
push
inc
sbb
add
xchg
push
ds
xchg
cli
in
dec
xchg
sub
loopne
pop
push
push
push
shr
pop
(bad)
cmc
push
xchg
xchg
in
dec
push
push
xchg
xchg
mov
cdq
mov
out
in
je
xor
push
int
retf
test
rcr
(bad)
rol
or
shl
cmp
outs
stos
jns
pop
adc
mov
xor
in
cmp
mov
loopne
adc
test
push
mov
pop
cs
sub
mov
imul
dec
jg
or
mov
xor
loope
ins
add
pusha
cmp
add
enter
inc
(bad)
adc
arpl
cli
sub
(bad)
int3
jbe
inc
or
pop
xchg
rcl
sbb
lock
sahf
inc
xchg
sbb
and
jno
retf
movs
add
mov
sbb
lods
dec
retf
jp
popa
mov
add
mov
cmp
ins
jmp
sbb
adc
fisttp
mov
dec
cmps
daa
xchg
pushf
adc
jb
mov
adc
lock
stc
ss
dec
stc
mov
loopne
scas
or
dec
push
or
pop
sbb
repz
out
pushf
jns
jmp
add
fdivr
push
sbb
sub
sbb
call
cdq
jns
xchg
pop
inc
pusha
loop
jle
out
and
push
push
cmp
push
xor
push
push
imul
add
push
pushf
push
daa
push
pop
dec
stc
add
pushw
mov
adc
ja
xchg
daa
pop
aaa
dec
jmp
add
push
xchg
sub
imul
sbb
repnz
std
mov
and
inc
mov
retf
or
xchg
push
add
pop
fwait
xor
inc
(bad)
mov
js
mov
mov
ret
(bad)
cmp
daa
je
jno
call
push
push
fild
lock
test
mov
int3
or
xchg
lock
sub
and
or
cli
mov
lock
pop
inc
out
push
jo
add
and
test
sub
jmp
int3
data16
mov
pop
jbe
adc
je
cmp
mov
test
out
jg
shr
xchg
mov
test
cmp
es
inc
xchg
out
cmp
(bad)
cmc
push
fcomip
sub
and
push
sbb
mov
pop
mov
loop
inc
pop
add
fscale
movs
cmps
test
xchg
(bad)
dec
cmp
ins
push
jp
mov
add
scas
scas
movs
movs
cmc
inc
cmp
mov
pop
sbb
cmp
push
icebp
mov
sbb
jl
popf
dec
mov
ss
xchg
and
mov
cwde
pop
jno
jae
arpl
xor
(bad)
loopne
retf
jmp
adc
jno
aam
sub
or
mov
jmp
and
mov
and
test
loopne
stos
mov
cmc
repz
imul
sbb
popf
add
sub
jmp
sbb
pop
popf
jp
jmp
cmp
das
add
mov
inc
inc
adc
jl
mov
xchg
clc
call
mul
ins
loopne
push
push
mov
sub
mul
mov
leave
add
fptan
ss
pop
lahf
fst
add
stc
push
jno
outs
div
xchg
shl
add
sbb
sub
call
inc
retf
iret
stc
cmp
push
inc
shr
jg
and
movs
push
shr
es
pop
jg
(bad)
cld
(bad)
(bad)
fs
dec
cmp
test
adc
loope
or
cli
test
dec
jmp
mov
fdivr
sti
push
pop
mov
add
cdq
mov
mov
sahf
mov
add
push
push
lea
pop
jb
jb
xchg
in
jne
mov
dec
cld
cdq
(bad)
or
aas
lds
rcl
lahf
dec
and
xchg
push
ret
test
dec
in
ret
xchg
push
cmc
ins
mov
jnp
dec
inc
sub
push
outs
dec
into
pop
inc
cmps
aaa
ret
jno
dec
ror
xor
pushf
fbstp
movs
movs
sbb
pop
ins
inc
or
cmp
cli
lds
mov
fisub
dec
and
adc
jne
div
(bad)
(bad)
and
dec
jno
call
adc
aad
leave
cmp
push
pop
into
movs
test
xchg
gs
jo
fmul
mov
inc
adc
sbb
jle
xchg
mov
lods
add
push
fnstcw
lods
in
imul
ja
mov
push
movs
int3
mov
pop
mov
mov
mov
(bad)
js
pop
shl
retf
bound
xor
xor
jae
inc
ret
adc
int3
cmovno
clc
outs
pop
bound
lock
pusha
sub
adc
nop
cmp
jecxz
cmp
mov
sahf
mov
scas
scas
jb
xchg
(bad)
push
rcr
jl
aam
push
jl
pop
jmp
mov
rol
arpl
jae
mov
packsswb
jmp
xor
push
and
push
cli
add
std
hlt
sbb
fsubr
frstor
lea
jb
aaa
call
mov
push
stos
mov
pusha
mov
adc
adc
fsubr
jne
dec
cmp
mov
xchg
mov
cmp
mov
sub
xor
push
xchg
retf
mov
out
add
jnp
xlat
iret
jb
or
cmp
jge
cld
(bad)
int3
pop
jns
and
(bad)
fimul
aaa
es
imul
f2xm1
mul
in
pop
mov
sbb
xor
mov
xor
fdiv
(bad)
ins
or
mov
popa
cmp
jb
xor
xor
inc
enter
cmp
neg
pop
jbe
cmp
cld
pop
call
retf
into
in
cmp
and
pop
xchg
fisubr
xchg
je
frstor
ins
fdiv
int3
nop
lods
fcomp
inc
ja
jle
lds
das
inc
mov
cmp
and
fisttp
test
mov
cs
pop
(bad)
in
ror
xchg
add
pushf
xor
xor
test
sub
fwait
sbb
out
push
mov
test
inc
and
sbb
pop
mov
jmp
push
repz
sbb
imul
cli
xor
mov
mov
jp
push
(bad)
sub
inc
fs
ins
or
sar
in
sub
inc
push
adc
mov
(bad)
sub
add
pop
movs
xor
mov
popa
add
or
arpl
fist
sbb
or
cwde
pop
out
pop
inc
xchg
test
movs
pop
(bad)
mov
loope
sub
sti
(bad)
movs
enter
xlat
imul
outs
xor
push
lea
add
adc
out
repz
shl
cmp
push
mov
test
xchg
push
mov
sbb
dec
rcl
inc
out
adc
and
je
jmp
mov
test
dec
arpl
popf
stos
sbb
jecxz
pop
repz
jae
andps
mov
arpl
pop
or
(bad)
push
xor
cli
push
jb
sub
cmps
jmp
xor
out
cld
push
inc
sub
clc
mov
shl
daa
neg
jae
xchg
js
fld
jge
cmc
mov
mov
jo
imul
pop
mov
jmp
push
xor
mov
loopne
jne
pop
pop
or
cmc
int
push
xchg
xchg
pop
int
lahf
mov
cmp
sub
mov
xchg
data16
jle
add
repz
mov
cmps
add
out
inc
hlt
ficom
and
push
inc
xchg
xchg
push
retf
pop
into
lar
idiv
rcr
adc
shl
mov
pop
cmp
mov
ds
jo
fmulp
fiadd
call
cmc
test
push
in
lods
outs
jmp
ret
inc
mov
cs
inc
xor
into
adc
test
out
jnp
pop
sbb
cmps
arpl
sub
pop
aas
es
pop
mov
lahf
mov
stos
outs
adc
mov
dec
inc
aad
add
aam
sar
(bad)
imul
std
int
cmps
push
or
adc
mov
leave
sub
pop
jge
xchg
loope
aas
mov
or
inc
cmp
clc
stos
movs
dec
icebp
adc
or
mov
fucom
add
add
inc
sub
and
cmp
dec
xor
adc
jg
and
(bad)
imul
stc
outs
push
sbb
aaa
push
xor
sbb
mov
retf
sbb
mov
jns
push
cmp
mov
push
sbb
push
inc
(bad)
aaa
imul
mov
fld
push
sbb
imul
inc
push
loopne
in
adc
mov
sbb
push
cwde
cmps
adc
add
cmc
(bad)
mov
sub
cmps
stos
mov
inc
dec
mov
mov
pop
aas
nop
and
fnstcw
push
das
xlat
jne
leave
xor
daa
xchg
in
xchg
fbstp
addr16
(bad)
je
int3
cmp
(bad)
jg
xchg
dec
cmp
(bad)
sbb
(bad)
(bad)
rcl
cmc
sbb
sub
repz
sbb
icebp
ja
repz
push
adc
cld
xchg
jb
loope
out
scas
shl
xor
mov
pop
dec
mov
mov
dec
mov
int
imul
pop
add
xor
fisubr
xlat
sbb
dec
pushf
sbb
test
jg
dec
in
pop
inc
mov
xor
sub
xchg
and
mov
repz
rcr
add
icebp
mov
pop
call
(bad)
outs
das
sub
cmp
(bad)
cs
dec
shl
push
ins
lahf
es
(bad)
test
sbb
dec
sub
cmc
mov
or
test
inc
mov
loope
xchg
pop
test
mov
(bad)
not
test
cmp
bound
(bad)
sub
jae
mov
mov
sub
inc
mov
push
sahf
lods
in
mov
daa
and
imul
sbb
inc
push
dec
jne
xor
in
adc
call
mov
mov
mov
jae
and
mov
or
loopne
mov
into
sub
xchg
or
xchg
sbb
or
pmaxub
inc
jge
iret
int3
scas
inc
mov
sub
lock
std
shr
pop
pop
lods
gs
loopne
int3
leave
xor
in
loopne
adc
popa
ins
dec
neg
mov
aas
shl
cmp
das
mov
leave
adc
pop
in
push
or
cmp
std
xor
inc
push
lods
pop
fimul
imul
mov
cmp
pop
mov
push
sti
add
movs
cmp
jl
jb
inc
xchg
loop
add
inc
adc
das
(bad)
movs
icebp
imul
(bad)
nop
pop
or
loope
cmps
push
and
push
xor
mov
fidiv
fimul
pushf
cwde
repz
xor
and
imul
gs
(bad)
dec
cmp
cmps
pop
or
fnstsw
in
imul
pop
mov
inc
jg
cmp
ja
adc
and
aad
inc
sbb
mov
imul
scas
push
dec
cmps
fistp
enter
pop
sub
fst
iret
repnz
push
mov
mov
jne
dec
fbld
mov
mov
jo
nop
pop
ds
lock
jmp
sbb
jle
fiadd
cmp
pusha
cmp
inc
dec
push
int3
sbb
mov
mov
dec
out
ss
icebp
mov
sub
jle
mov
xchg
bound
or
inc
ds
setnp
aaa
rol
or
adc
repnz
fldenv
lahf
(bad)
out
adc
sub
jg
sbb
data16
lock
and
jmp
ja
lods
movs
test
gs
jbe
loop
inc
jb
pop
push
nop
jmp
xchg
pushw
lods
sbb
(bad)
mov
xor
lock
xor
or
cmp
push
mov
xor
adc
mov
jp
sbb
jbe
call
jo
jge
je
jo
mov
pop
gs
das
mov
sub
jmp
out
sbb
ja
pop
xchg
cmp
jecxz
sub
ins
cmp
sbb
rcr
sub
cmp
test
fld
sub
push
pop
xchg
xchg
and
cmp
and
ffree
cmp
ss
scas
test
mov
mov
push
ja
lods
add
sbb
jae
mov
jmp
pusha
push
sub
stc
cdq
sbb
cmp
cdq
clc
in
sub
pusha
push
lods
mov
ins
mov
push
cmp
shl
ss
pmulhw
in
out
adc
add
add
adc
clc
push
aaa
inc
push
imul
push
hlt
bound
or
sub
out
scas
icebp
ffree
mov
movs
sar
rol
leave
test
dec
iret
xor
into
and
aad
loop
sbb
dec
jmp
das
add
ins
mov
xchg
push
daa
loopne
imul
dec
repnz
ror
out
adc
mov
(bad)
jns
push
in
retf
pushf
popf
xchg
test
xchg
outs
mov
pop
ss
pop
pop
mov
xchg
mov
push
lea
imul
pop
out
cmp
xor
popa
lods
ja
sti
loope
outs
and
sar
mov
gs
ja
mov
cmp
mov
push
mov
jnp
inc
cdq
mov
mov
daa
mov
das
jl
es
sbb
fist
in
push
jno
out
out
fisubr
nop
xor
jns
fwait
or
(bad)
mov
rol
(bad)
cmp
xor
push
cwde
addr16
and
mov
mov
mul
mov
or
inc
lock
repz
mov
mov
sub
int3
and
and
push
les
popa
cld
mov
out
es
shl
adc
out
mov
movs
lahf
mov
mov
push
repz
push
(bad)
ret
mov
push
sbb
jge
mov
jno
arpl
repnz
jo
pop
bound
xchg
push
test
into
shl
sub
xor
jecxz
or
int
dec
outs
mov
std
mov
mov
jmp
jmp
mov
lods
inc
dec
add
lahf
sbb
movs
and
call
add
push
lds
bound
and
(bad)
push
jns
jmp
stc
mov
retf
in
aas
jo
or
mov
push
call
lods
cld
(bad)
mov
or
or
in
out
sub
loopne
jnp
pop
cmp
push
(bad)
or
pop
push
popa
test
in
sbb
call
aas
shl
jle
enter
mov
or
and
sub
sub
push
in
bound
in
arpl
outs
aas
aad
xor
and
adc
sahf
and
mov
retf
iret
hlt
jg
xchg
push
std
xchg
pop
(bad)
or
cwde
ins
std
shl
push
mov
sub
sbb
loopne
arpl
fistp
dec
fs
pop
mov
scas
ins
imul
ss
push
out
pop
xchg
jne
fisttp
and
addr16
push
inc
lahf
(bad)
test
or
mov
(bad)
dec
(bad)
xor
xor
add
loope
push
fld
mov
aam
push
and
ss
dec
sbb
repnz
movs
ficom
jmp
inc
cld
xor
mov
scas
lock
and
dec
dec
jecxz
adc
push
(bad)
or
mov
in
adc
popf
inc
pop
fld
aad
sahf
jbe
clc
push
add
mov
sti
push
pop
mov
add
sub
adc
or
(bad)
cmp
or
ins
repz
int
adc
pop
jo
mov
rol
jg
add
nop
ins
pop
loop
adc
xlat
sbb
mov
iret
and
cld
cmp
ror
sbb
rol
pushf
std
mov
adc
rcr
ret
icebp
sar
or
and
hlt
adc
ret
ds
push
rcr
pop
pushf
not
xchg
neg
mul
ror
(bad)
shr
mov
mov
push
dec
cmps
(bad)
lahf
imul
js
sbb
stos
push
or
mov
sub
push
retf
mov
outs
nop
je
dec
scas
mov
mov
jo
mov
fsubr
add
jo
sub
mov
mov
in
pop
lods
xchg
out
(bad)
push
call
sub
scas
push
xchg
dec
shr
test
mov
jl
cs
add
xor
xor
pop
inc
pop
or
imul
lock
push
jg
and
mov
xchg
cmp
je
ror
jae
push
ror
stc
dec
sub
ror
dec
outs
jle
mov
in
and
les
test
int
adc
inc
ret
inc
adc
es
mov
and
adc
push
xchg
and
sbb
add
cli
push
mov
jp
nop
and
and
shr
outs
repz
mov
stos
out
add
out
fiadd
sahf
iret
les
nop
pop
sbb
in
in
mov
pop
mov
leave
jmp
mov
into
cs
je
pushf
jo
pop
adc
sub
add
jae
xchg
xor
in
pop
pop
jg
shr
add
sub
jle
jns
clc
stos
mov
dec
pushw
add
jmp
int
or
add
scas
sahf
pop
lods
mov
ss
jmp
stos
jnp
mov
mov
cli
les
outs
jb
mov
ja
stc
push
js
cmp
movs
fmul
in
in
pop
dec
jns
cmps
leave
bound
and
or
cmp
movs
aam
jnp
mov
jbe
movs
call
push
xlat
popa
jne
ins
retf
mov
fstp
(bad)
clc
sbb
pop
int
popf
test
cdq
in
in
in
push
xchg
ja
push
dec
into
mov
mov
out
cwde
sub
mov
dec
inc
popa
pop
dec
or
jno
and
push
cdq
inc
xchg
sbb
inc
add
in
cmps
fwait
lea
in
sub
mov
(bad)
imul
rcr
mov
mov
push
dec
mov
lahf
repnz
mov
mov
dec
int3
leave
aam
test
pop
add
adc
rcl
cmc
into
dec
out
inc
cld
cmp
mov
pop
out
xchg
push
cmps
add
cld
or
aad
sbb
arpl
jnp
pop
(bad)
or
push
push
jae
aaa
sub
inc
push
ja
call
push
jns
pusha
sub
fsubr
mov
je
jmp
int
cmp
push
sbb
xor
sbb
nop
mov
(bad)
lods
dec
out
stc
add
push
(bad)
xor
pop
or
mov
pop
imul
cdq
mov
sbb
jb
and
dec
jbe
push
fild
out
xor
xor
int3
test
lahf
mov
jbe
push
lds
(bad)
mov
xchg
cs
inc
ds
enter
jecxz
pushf
fmul
call
sub
scas
add
mov
js
lds
xor
mov
out
sub
push
bound
cli
add
adc
mov
enter
stc
popa
iret
sub
pop
repnz
sub
pop
jmp
cdq
mov
(bad)
mov
iret
fwait
mov
mov
xor
xor
shr
add
fnstenv
xlat
(bad)
and
sbb
xchg
stos
jb
cmp
jmp
pop
dec
pop
cmp
adc
sbb
inc
lods
daa
in
(bad)
mov
(bad)
retf
xor
jmp
sub
sar
dec
rcr
aad
bnd
inc
addr16
cmp
leave
inc
inc
inc
push
mov
mov
lds
neg
push
dec
mov
sbb
ins
hlt
rcl
xchg
jge
mov
ja
mov
sbb
sbb
fidiv
push
cmp
in
adc
add
dec
(bad)
push
imul
movs
movs
popf
and
jne
ds
dec
mov
xor
fsubrp
add
in
pop
jb
push
inc
js
or
ins
pop
mov
mov
clc
add
inc
(bad)
xchg
cdq
adc
fsubrp
neg
fistp
rcr
not
out
sub
sbb
fsubr
push
(bad)
stc
jl
sbb
xor
mov
cmp
jg
mov
ins
in
add
jae
test
xor
aad
push
cdq
pusha
retf
cmp
sar
push
push
movs
sbb
int3
jmp
mov
cmp
xchg
dec
ins
aam
cmovs
jno
sbb
ret
add
aaa
add
mov
adc
loopne
mov
cdq
loopne
aad
mov
xchg
ret
shl
gs
push
dec
cmp
jo
ret
out
sbb
mov
cmp
inc
mov
jne
sbb
test
cs
stos
jno
mov
and
push
sar
retf
cmp
ret
and
dec
adc
and
test
loop
pop
pop
and
add
pusha
mov
dec
stos
imul
ss
or
fbstp
repz
mov
push
mov
pop
dec
cmp
sti
dec
retf
in
aad
scas
push
cmp
test
xor
and
push
and
sub
outs
cmovl
xchg
out
sub
aas
stos
adc
repnz
mov
pop
pop
xchg
push
adc
jecxz
aad
enter
stos
mov
mov
dec
stos
push
sbb
xchg
push
xchg
inc
in
xchg
xor
xchg
adc
mov
sbb
loop
cmp
push
jbe
mov
mov
cmc
(bad)
das
mov
js
dec
fucomp
sbb
xchg
lods
mov
push
cld
jmp
out
xor
std
int3
mov
out
dec
dec
pop
call
inc
stc
mov
enter
ret
imul
in
push
(bad)
xchg
dec
mov
mov
(bad)
call
pop
pop
mov
push
popf
push
push
jp
scas
daa
xchg
mul
sbb
fnstenv
pop
rcr
mov
scas
pop
jmp
test
enter
data16
sub
cmp
sbb
sub
mov
dec
out
mov
rcl
cmp
mov
rcl
into
adc
jne
mov
fld
pop
lds
je
in
outs
mov
fsubr
push
jnp
cmps
push
adc
mov
les
nop
jns
push
jp
out
sbb
xlat
add
or
cmp
inc
xor
inc
adc
and
retf
shr
mov
icebp
cwde
push
mov
jmp
push
pop
sti
sahf
gs
mov
jl
xor
add
push
mov
fs
push
aam
jmp
mov
adc
mov
adc
aaa
cmp
mov
in
inc
adc
fbstp
mov
in
add
out
adc
inc
adc
mov
xlat
xchg
and
(bad)
stc
retf
or
sub
data16
out
repnz
inc
sub
or
sbb
and
mov
(bad)
push
ja
sbb
mov
enter
icebp
movs
dec
xlat
dec
mov
mov
pop
int
jne
fistp
enter
lods
and
cmp
add
dec
addr16
rcl
or
cmp
push
sbb
jle
cmc
cmc
aad
popa
scas
movs
enter
mov
mov
call
mov
pop
mov
push
es
xor
sub
outs
push
bound
sbb
add
(bad)
loop
hlt
inc
loop
dec
in
icebp
xor
fstp
cmp
push
adc
push
push
jne
jg
inc
mov
je
ins
jbe
jno
outs
in
ss
sahf
icebp
dec
imul
int
test
cmp
outs
pop
xor
adc
cli
outs
daa
sub
loope
push
push
fwait
adc
inc
stos
jne
repz
xlat
les
jmp
dec
pushf
dec
addr16
jbe
dec
inc
xor
mov
mov
pop
fst
imul
adc
or
fild
leave
xor
clc
jecxz
mov
and
fsubr
repz
jp
mov
je
pop
ins
jg
xchg
push
jae
inc
and
or
aaa
cmp
int
cmp
adc
jae
loopne
mov
cmp
fs
icebp
mov
int3
(bad)
sub
out
xor
cmp
add
push
stos
lds
dec
cld
mov
pusha
lea
mov
icebp
cmp
xor
inc
div
jo
sbb
outs
fbstp
dec
lds
not
test
pop
leave
(bad)
jmp
adc
push
inc
movs
mov
mov
ja
(bad)
in
sub
push
cmc
push
xor
inc
cmps
sbb
cmc
sbb
push
lods
jno
hlt
leave
xchg
rol
icebp
and
add
pop
xchg
adc
bnd
push
aad
fild
jge
aam
or
mov
stc
pop
xchg
and
inc
and
or
das
fisubr
icebp
call
jae
or
add
in
jmp
test
jmp
mov
mov
out
cmp
rcr
mov
or
outs
add
mov
ss
or
mov
shl
xor
scas
movs
cli
(bad)
(bad)
ins
stos
loope
and
shl
fadd
test
call
mov
add
and
fimul
mov
xchg
leave
ret
nop
rol
sahf
push
xor
xor
add
add
shr
popf
xchg
jg
test
ret
xor
bound
rcr
sbb
adc
inc
xor
dec
xor
jb
and
mov
sub
add
ror
push
jb
and
adc
addr16
add
dec
inc
call
fild
mov
and
mov
adc
inc
sub
enter
test
sub
mov
adc
jns
mov
mov
xchg
push
ret
and
lock
jmp
cmp
int
xor
push
pop
clc
or
mov
aad
inc
add
and
xor
movs
popa
jp
clc
movs
push
(bad)
into
div
sbb
and
jae
out
in
(bad)
mov
rcl
jmp
sub
(bad)
jae
leave
add
push
lods
lea
or
cmp
and
test
dec
mov
pop
or
iret
inc
in
lds
stc
ror
mov
adc
adc
das
push
test
xor
mov
mov
mov
push
ret
inc
int3
mov
push
mov
hlt
inc
pop
push
sbb
xchg
mov
push
push
sub
hlt
jp
pushf
pop
js
enter
mov
pop
idiv
cmc
leave
sub
and
pop
pop
loope
sbb
sahf
and
sub
push
fistp
jle
into
call
cmp
aam
pop
sub
fs
pop
in
mov
push
or
stc
cmp
clc
and
ror
or
pop
outs
or
xchg
mov
pop
pop
mov
hlt
xchg
mov
fmul
pop
outs
jo
lods
je
push
popa
mov
popa
or
sub
out
dec
rcpps
shl
pop
mov
xor
xchg
(bad)
pop
sub
repz
mov
jmp
(bad)
cdq
imul
mov
cdq
rol
rol
or
mov
add
mov
push
jge
aam
icebp
push
mul
mov
and
jb
imul
sbb
aaa
push
adc
mov
xor
xchg
cli
add
dec
nop
mov
ins
mov
fcomi
sub
test
xlat
mov
or
mov
pop
sub
je
sahf
xchg
and
out
mov
pop
push
push
xor
sbb
or
stos
shl
pop
fs
arpl
xchg
jp
fwait
pop
xchg
add
aaa
sub
ss
fidiv
fnstsw
inc
push
imul
cmp
pop
add
in
xor
gs
mov
mov
sub
call
ins
cwde
pusha
aad
jmp
lods
fadd
dec
jnp
sub
shr
xor
jb
pop
mov
jle
cmp
and
call
idiv
jmp
test
jns
inc
lea
out
mov
mov
jb
fcomp
xor
hlt
ror
pushf
dec
dec
fisttp
cmp
sbb
cdq
mov
fidiv
sbb
in
inc
cs
or
mov
aad
mov
mov
shl
mov
call
sub
xor
jne
cmp
adc
inc
xchg
cdq
(bad)
scas
loope
add
sbb
dec
cwde
and
(bad)
dec
pop
adc
mov
xor
inc
push
fnsave
jns
add
xchg
adc
adc
retf
pop
mov
and
and
sub
lods
pop
pop
pusha
mov
pop
daa
mov
mov
sar
int
sub
and
pop
ja
adc
jo
mov
loope
mov
mov
or
sub
or
adc
cld
lods
popf
jmp
mov
(bad)
aad
call
xchg
jmp
jg
jo
imul
sar
rcl
inc
mov
inc
loopne
imul
rcr
add
(bad)
inc
cmps
stos
pop
ror
mov
adc
call
or
test
ins
jecxz
dec
and
outs
mov
test
in
push
sub
ins
cmp
mov
adc
cmp
in
aad
jns
movs
stos
cmps
cli
jle
mov
jecxz
cli
inc
fs
push
in
test
mov
jge
ss
jb
enter
xor
dec
arpl
lea
dec
sbb
fdivr
std
xchg
stc
imul
dec
jl
scas
ja
cmp
repz
jbe
(bad)
sar
inc
lock
push
push
fwait
jmp
mov
inc
repnz
sbb
inc
xchg
add
push
int3
ds
xchg
sti
sub
sub
jge
adc
sbb
enter
inc
xor
xor
outs
movs
sbb
sbb
push
inc
jmp
nop
sub
mov
movs
jns
cmp
xchg
push
in
(bad)
sub
sub
and
ficomp
xor
cwde
mov
loope
sti
sbb
call
frstor
cs
or
rcr
and
addr16
popa
sbb
adc
ret
div
cld
in
lods
out
adc
cwde
inc
add
test
mov
and
int3
shl
ss
outs
inc
es
adc
xchg
sar
stos
adc
rol
mov
into
stos
mov
push
pop
scas
mov
daa
aas
cdq
jge
cmp
push
jne
push
rcr
push
jbe
push
mov
dec
xchg
mov
mov
test
mov
sub
cmp
mov
pop
push
ficomp
sub
pop
xlat
xchg
icebp
jmp
ds
xor
sub
pop
pop
(bad)
push
xlat
jp
push
(bad)
lea
sahf
je
push
pop
push
shl
pusha
into
inc
and
inc
ins
cmc
scas
ja
outs
pop
xor
xchg
repz
adc
das
loop
cmp
jl
mov
mov
ins
(bad)
push
xchg
adc
push
outs
cld
(bad)
in
mov
movs
inc
cmps
rol
cmps
retf
mov
jle
dec
les
ret
inc
dec
test
mov
mov
cmp
(bad)
test
int3
sbb
sar
pop
cdq
jno
addr16
mov
mov
sbb
xchg
fiadd
into
div
lock
cmp
or
cmp
sbb
jmp
cmp
jp
jge
cmp
call
jne
js
outs
std
sahf
mov
in
aaa
retf
adc
retf
or
fwait
aam
add
repnz
xor
popa
or
jnp
inc
cmp
fiadd
jmp
dec
mov
jl
icebp
push
push
and
and
fmul
mov
mov
in
adc
add
int
call
pop
mov
mov
fidiv
jae
inc
pop
js
add
in
in
in
retf
sbb
je
pusha
js
sub
mov
scas
stc
sub
mov
add
aam
repnz
push
lock
sub
xlat
and
ins
daa
or
mov
mov
pop
iret
lds
push
in
inc
movs
mov
sub
xor
pusha
jbe
int3
or
in
xchg
arpl
lock
aam
(bad)
fdiv
jno
in
adc
call
adc
int
repz
ss
push
retf
sub
pop
mov
xchg
in
jns
fs
repz
cmps
or
push
pop
mov
cmps
sub
mov
loope
sahf
add
fist
xchg
or
jbe
mov
jne
push
or
pop
movs
sar
add
inc
test
pop
fwait
leave
cmp
mov
mov
(bad)
js
xchg
aas
mov
int
retf
movs
push
int3
into
ss
mov
repnz
sub
outs
xchg
dec
lahf
xchg
outs
or
dec
(bad)
jmp
inc
add
and
test
test
rcr
sub
lahf
in
pop
inc
xor
in
out
fwait
ja
cdq
into
(bad)
repnz
aaa
stos
mov
sbb
popa
ret
mov
add
dec
imul
(bad)
std
xchg
push
mov
lahf
jp
bound
mov
mov
stos
xor
xchg
sub
arpl
retf
mul
sub
xor
(bad)
aas
icebp
popf
mov
rcr
retf
jmp
adc
jae
lea
popa
popf
daa
mov
sub
sbb
mov
adc
ins
shl
push
leave
mov
sub
push
je
xor
cwde
imul
mov
jo
dec
add
dec
dec
ret
dec
aam
test
int3
ficomp
or
ins
push
lea
ja
pusha
in
cdq
mov
sub
into
xor
adc
inc
lfs
inc
fsub
fnstsw
sub
push
pop
pop
daa
xor
nop
shr
push
jb
aad
cmps
mov
aaa
push
icebp
adc
je
mov
fist
ja
pop
fisttp
fs
mov
test
test
ja
adc
push
jne
bound
out
inc
dec
and
inc
ins
ins
xchg
cmp
es
gs
xchg
(bad)
cmp
popa
repz
popa
jg
pop
jmp
inc
dec
in
mov
sub
push
rcl
mov
add
pop
ror
ins
dec
cdq
mov
xchg
(bad)
sub
bswap
inc
xchg
fidivr
jg
push
and
push
fucomip
adc
jnp
mov
(bad)
call
pop
test
mov
or
add
stos
jge
or
and
inc
xor
scas
popf
rcr
sbb
aad
mov
and
add
pop
cs
or
fist
and
sbb
ret
cmc
lds
push
outs
jne
sbb
inc
cwde
test
sahf
pop
pop
mov
inc
xor
mov
repz
pop
lahf
ss
(bad)
enter
mul
faddp
inc
(bad)
push
mov
mov
enter
jb
fdecstp
and
push
adc
fsubr
movs
sbb
jg
pop
iret
ds
pop
dec
and
add
inc
adc
sahf
outs
aam
das
xor
xor
call
mov
sub
scas
clc
imul
call
mov
mov
fisttp
adc
out
and
fbstp
dec
enter
dec
stc
mov
add
fnsave
out
push
bound
loopne
inc
test
test
cdq
jbe
shl
popa
pop
inc
ficomp
pop
sbb
mov
in
scas
lods
rol
jle
sbb
adc
leave
enter
mov
mov
cmp
ficomp
aad
mov
test
ja
movs
xchg
aas
cmc
xchg
(bad)
cld
aad
imul
shl
mov
fld
int
push
pop
xor
push
pop
ins
sbb
dec
aam
test
jl
xor
add
add
cmp
jg
sbb
jg
mov
movs
sar
mul
mov
and
lods
jae
xchg
call
test
in
mov
push
ins
xlat
inc
xlat
push
xchg
xor
pop
shl
xor
pusha
dec
(bad)
int3
sub
inc
pop
std
dec
push
xlat
sub
ficomp
push
sub
std
adc
stos
pop
shl
call
push
mov
(bad)
mov
call
xchg
cli
push
xor
mov
lahf
loope
or
push
(bad)
movs
mov
loop
icebp
mov
test
inc
stc
adc
push
in
mov
jmp
hlt
js
inc
mov
inc
rcr
add
sub
xor
repnz
mov
js
mov
adc
adc
push
pop
(bad)
fdivr
xchg
icebp
sub
dec
and
dec
les
cmps
adc
or
pop
es
jne
loope
sbb
cld
pusha
push
fidivr
(bad)
jnp
push
dec
sbb
adc
int
push
test
jb
out
loop
cmps
mov
xor
loope
je
int3
sbb
cmp
adc
sub
sub
lahf
enter
bound
pop
xchg
or
mov
pop
arpl
aam
xor
stos
jmp
add
add
push
xchg
ja
stos
sbb
jnp
xchg
dec
retf
retf
lods
or
stc
mov
cmp
ds
jb
lock
enter
repz
push
cmps
add
add
push
ss
adc
fs
je
sub
int3
mov
(bad)
add
and
ds
cmp
int
push
pop
push
xor
dec
(bad)
ret
in
loope
ror
cmps
mov
push
(bad)
add
sbb
movs
xchg
push
fistp
sub
iret
pop
cmp
jge
jp
ja
mul
push
daa
cmps
sahf
mov
ret
fcomp
stos
mov
mov
or
push
inc
pusha
in
ror
leave
in
sbb
push
retf
fdivr
push
xchg
je
ds
and
arpl
repz
or
arpl
in
(bad)
adc
in
outs
test
push
mov
ins
or
das
daa
dec
sub
cmps
or
adc
test
dec
inc
jge
mov
push
and
mov
jmp
mov
fsubr
imul
pop
jb
mov
movs
rol
add
mov
and
adc
test
cmp
stos
stos
mov
dec
lods
bound
add
fist
jmp
movs
arpl
jne
mov
mov
jmp
sub
adc
pusha
jl
jg
dec
push
fsub
retf
mov
repz
and
jp
and
lods
xacquire
mov
sbb
cmp
ds
imul
push
enter
stos
add
inc
repz
pushf
add
sub
cmps
xor
div
cmps
mov
pop
mov
inc
aam
iret
push
cmp
dec
neg
jl
inc
test
test
mov
add
dec
scas
ja
fs
cmp
jecxz
adc
and
int3
out
mov
mov
mov
mov
icebp
sbb
bnd
clc
cld
gs
cmp
and
xchg
(bad)
sub
in
jns
adc
(bad)
xchg
jae
outs
hlt
xor
jmp
addr16
add
dec
adc
loope
xchg
cmps
and
imul
or
nop
add
mov
or
(bad)
add
lods
jbe
mov
sbb
into
(bad)
adc
cdq
call
out
enter
sbb
les
inc
stc
pop
je
das
mov
mov
push
or
pop
je
gs
push
or
adc
pop
lahf
arpl
push
call
popa
or
sub
popf
mov
xor
cwde
pop
fld
shl
in
inc
mov
pop
mov
repnz
hlt
xchg
popa
mov
inc
sbb
rcr
xchg
sub
sahf
hlt
aam
sahf
movs
sbb
imul
retf
sahf
dec
test
loop
movs
aas
jnp
jno
mov
pop
push
mov
in
lea
mov
sub
call
pop
cmp
jl
inc
mov
stc
inc
mov
hlt
loope
fmul
loopne
sub
jo
int3
lods
pop
shl
xor
fsqrt
cmp
and
out
mov
jge
ret
dec
cwde
neg
jg
(bad)
xchg
fwait
imul
aas
mov
lea
call
add
nop
ret
fwait
jmp
cwde
shl
test
inc
jmp
popf
sub
mov
repnz
push
call
mov
subps
mov
and
add
pop
fwait
push
jmp
(bad)
out
repz
add
cmp
inc
js
and
mov
retf
rcl
fistp
push
cmc
dec
or
inc
jecxz
sti
cmp
adc
mov
hlt
popa
mov
cmp
jge
(bad)
mov
in
push
and
mov
jne
test
enter
jne
popf
and
add
dec
movs
leave
mov
repz
inc
popa
pop
jecxz
loopne
ret
jo
cwde
mov
xchg
ins
dec
out
les
add
jnp
ins
in
dec
nop
loopne
mov
mov
jmp
(bad)
adc
lods
mov
test
ficom
popf
aaa
(bad)
inc
lods
mov
mov
and
mov
inc
mov
enter
push
shl
add
jae
sub
es
and
repz
rcl
xchg
loope
rcl
imul
mov
aad
lods
push
dec
add
gs
cmps
ds
es
mov
push
sahf
icebp
jmp
mov
pop
pop
call
in
and
xchg
cmp
out
cdq
pop
lods
(bad)
dec
dec
mul
fstp
jecxz
retf
jmp
out
sub
xchg
icebp
inc
lea
nop
xlat
mov
mov
outs
inc
xchg
loopne
or
jp
rol
in
push
ja
sbb
call
cmp
retf
mov
stos
xlat
leave
jne
mov
(bad)
loopne
in
cmp
xor
popf
push
loope
movs
cli
push
test
dec
daa
stos
jmp
gs
mov
jnp
mov
adc
adc
adc
arpl
cwde
out
pop
jmp
adc
jge
(bad)
out
mov
(bad)
mov
or
pop
test
push
fwait
push
cmp
pusha
fild
adc
test
aam
jnp
mov
call
cmp
xchg
nop
mov
mov
jno
or
add
out
xchg
loope
xor
dec
cmps
or
mov
loop
xlat
out
shr
cdq
or
repnz
dec
pop
mov
fs
jo
push
(bad)
imul
(bad)
ja
or
lea
mov
mov
retf
(bad)
jmp
cld
add
jnp
sbb
jle
(bad)
push
icebp
mov
icebp
out
sbb
dec
pop
cli
mov
call
retf
or
cmps
(bad)
sbb
mov
inc
and
inc
and
dec
mov
push
mov
mov
cmc
repnz
cwde
call
sti
cmp
xor
in
mov
pushf
cwde
adc
stos
out
mov
sbb
jmp
inc
repnz
retf
or
shl
clc
imul
push
ret
ds
popa
push
dec
stc
dec
lds
(bad)
mov
sti
(bad)
cmp
iret
cmps
repz
in
add
and
pop
retf
ficomp
sub
retf
cmc
ret
stos
mov
(bad)
out
scas
aaa
cmp
retf
sub
clc
data16
mov
or
call
push
push
and
sahf
push
xor
mov
int3
bound
cs
in
ret
cli
test
push
add
ret
or
retf
inc
(bad)
inc
ficomp
adc
mov
mov
retf
imul
pop
jns
mov
xchg
sub
test
mov
mov
mov
jo
push
imul
push
mov
dec
dec
push
add
push
aam
fdiv
(bad)
scas
cdq
mov
pusha
inc
lahf
stc
(bad)
cwde
push
dec
pop
and
mov
sbb
mov
jo
dec
push
mov
or
stos
jge
imul
push
push
addr16
loop
sub
dec
xchg
pop
jecxz
push
cmp
iret
ret
repnz
cli
pop
cmps
rcr
mov
add
aaa
sub
ins
mov
(bad)
out
mov
ficom
lds
call
movs
sti
xchg
cmp
mov
xchg
or
gs
mov
lahf
pop
adc
push
mov
bound
repz
in
pop
shr
or
xor
sub
mov
mov
cmp
retf
hlt
and
dec
push
rol
ret
addr16
sbb
jbe
jbe
or
sub
jmp
pusha
aas
imul
pop
out
push
and
jge
clc
iret
div
(bad)
(bad)
out
sbb
out
xlat
ins
cmp
out
les
pop
aaa
mov
(bad)
sti
cmp
mov
cmp
data16
inc
aam
mov
push
push
test
int3
jne
pop
or
loope
pusha
mov
pop
sub
mov
scas
ror
mov
es
lock
mov
idiv
mov
sub
pop
ret
xor
push
and
cwde
xchg
clc
stos
es
cmp
inc
icebp
and
cmp
xchg
(bad)
test
inc
push
or
nop
ja
imul
sbb
test
or
in
push
jnp
cs
jb
repnz
mov
rcl
(bad)
lock
inc
push
rol
mov
jae
aad
lods
jb
xchg
nop
stos
and
xor
xor
leave
popf
sub
dec
inc
sbb
dec
mov
xlat
jp
push
mov
adc
popf
mov
sar
jne
jp
push
(bad)
adc
out
xor
int
push
ins
shl
mul
loope
mov
inc
fistp
out
add
mov
mov
cmp
xchg
cmp
sbb
(bad)
jae
xchg
ret
(bad)
in
out
pop
add
push
outs
les
movs
jle
es
imul
pusha
(bad)
imul
mov
popf
out
or
pop
jmp
fmul
pushf
xchg
rol
cdq
in
cmp
idiv
sub
xchg
(bad)
cmp
mov
data16
sbb
(bad)
sbb
ja
sti
xchg
out
push
in
stc
(bad)
xchg
xchg
ds
cmp
out
jg
cmp
jmp
icebp
hlt
lods
sub
push
mov
xchg
loopne
xlat
(bad)
cmp
mov
add
pop
push
rol
fidiv
jb
and
mov
test
xchg
pop
xchg
inc
xor
add
adc
inc
repz
pushf
sbb
mov
xor
sub
and
in
stos
mov
out
xor
fsubr
fs
pop
mov
mov
(bad)
jns
mov
mov
shl
fs
je
iret
push
arpl
or
jl
jae
mov
mov
lahf
cmp
push
push
mov
out
jnp
mov
sub
cs
enter
jecxz
sbb
pop
cmp
inc
pop
fiadd
jne
call
add
outs
or
stos
pop
movs
cmc
dec
loope
mov
arpl
aam
rcr
sbb
pop
int
idiv
in
fbld
fild
pushf
dec
ficom
in
mov
not
mov
sub
mov
cld
in
loopne
xchg
arpl
sbb
inc
add
xchg
pop
mov
sub
push
jmp
mov
dec
dec
or
mov
push
stos
mov
out
(bad)
je
jne
movs
repz
xchg
jg
call
hlt
shl
cmc
stos
sti
or
jmp
push
mov
ins
leave
jg
pop
(bad)
sbb
clc
cwde
fsub
test
stos
out
fdivr
sub
adc
gs
jecxz
adc
xor
mov
cmp
pop
std
add
les
pop
sbb
cmp
inc
ret
mov
loopne
aad
push
paddd
lock
(bad)
not
push
pop
nop
std
xchg
fs
pop
pop
daa
test
push
sbb
sti
and
ret
pop
je
mov
mov
nop
cld
les
rol
pop
stos
std
xchg
(bad)
ds
and
and
dec
pop
mov
imul
cmp
mov
in
aad
or
imul
mov
add
lds
fnsave
test
cmp
sbb
mov
inc
bound
scas
fsub
ret
aas
pop
in
into
xchg
mov
in
les
and
mov
not
imul
dec
test
sbb
mov
fwait
repnz
fimul
xchg
inc
scas
xor
(bad)
js
fild
xchg
dec
mov
mov
aaa
bound
fisub
aas
neg
add
cld
pop
fld
xor
(bad)
jl
jg
int3
push
hlt
jns
(bad)
cld
xor
pop
retf
jnp
cwde
pop
cmp
and
in
pop
xchg
dec
mov
jo
fs
xchg
fldenv
mov
repz
or
pop
mov
adc
or
xchg
inc
je
or
dec
mov
cmps
add
xor
loope
stc
scas
push
jbe
cmp
pop
pop
sub
fisttp
jmp
out
xchg
in
push
or
sub
xchg
aas
arpl
into
in
mov
int3
arpl
pop
retf
and
inc
dec
pop
popa
rcl
mov
xchg
xor
(bad)
repnz
sbb
push
cmps
mov
cmp
xchg
call
loop
out
inc
push
add
push
pop
lahf
add
addr16
push
add
or
jl
inc
xchg
xlat
test
imul
push
stos
mov
push
inc
cmp
fwait
shl
push
sub
into
jmp
in
sbb
pop
mov
mov
lds
fldenv
push
sbb
pop
aad
sbb
adc
jle
xchg
aad
sahf
mov
adc
sub
leave
mov
pop
pop
add
fdivr
fwait
jmp
gs
call
hlt
xor
fcomp
jmp
cwde
push
jbe
and
mov
daa
xchg
lahf
dec
xor
mov
in
lock
lahf
neg
das
(bad)
mov
stos
fnsave
test
and
sbb
and
bound
mov
aas
mov
call
cmp
push
shl
lea
cs
in
aad
and
jne
sti
jmp
pop
cmp
fwait
mov
(bad)
fucomip
ins
jge
adc
fild
scas
in
fbstp
enter
pop
call
rep
sbb
lds
cdq
leave
call
mov
sub
sbb
jmp
out
inc
das
(bad)
rol
adc
lock
adc
dec
lea
or
cmps
pop
mov
jns
jmp
xchg
icebp
inc
pop
push
xlat
sbb
enter
mov
cmps
mov
pop
and
dec
cmp
sbb
icebp
jbe
mov
xchg
push
adc
mov
cmp
mov
lds
mov
test
ds
dec
aam
clc
sti
dec
int3
mov
dec
add
cs
adc
out
adc
arpl
mov
test
cmp
hlt
mov
mov
pop
or
aam
dec
retf
xor
cwde
aas
mov
mov
enter
cwde
test
std
rol
sbb
inc
push
adc
push
repz
jle
out
dec
scas
je
push
dec
or
shr
xor
push
icebp
push
out
test
jecxz
(bad)
push
movs
add
mul
(bad)
adc
dec
mov
jbe
inc
adc
and
iret
adc
pop
inc
mov
adc
mov
and
dec
mov
inc
mov
xchg
call
cmps
int3
outs
sbb
pop
sbb
cs
lock
add
(bad)
ds
scas
sbb
sbb
mov
fsub
ret
add
jbe
(bad)
js
add
pushf
stc
frstor
and
xchg
push
mov
pop
jle
in
xor
cmps
in
popa
test
out
test
sahf
push
inc
arpl
lea
sub
mov
push
cmp
xchg
enter
sbb
inc
jae
add
adc
loop
mov
jb
pop
pop
outs
retf
out
jle
xchg
adc
sbb
ins
sbb
lods
cwde
xor
push
stos
arpl
adc
in
cdq
add
or
mov
mov
xor
fnstcw
cmp
leave
in
int
imul
inc
div
jg
jae
int
js
mov
mov
xchg
(bad)
dec
cli
fidiv
jg
arpl
and
in
xor
cmp
adc
fs
ficom
mov
adc
ror
int3
sub
mov
xchg
call
aaa
shl
push
and
add
cmp
daa
cmp
dec
dec
push
(bad)
dec
pop
sbb
sbb
pushf
outs
mov
movs
sbb
arpl
stc
push
in
or
mov
cs
sub
dec
jge
sti
mov
push
aam
cmc
movs
mov
cmp
ja
icebp
cmp
iret
les
jns
sub
mov
cwde
arpl
xor
sbb
adc
popf
int
and
(bad)
in
in
dec
sub
arpl
neg
sub
lods
sbb
push
rcl
pushf
sub
inc
ja
ret
ins
int
sahf
lods
out
push
add
or
ror
mov
adc
les
jp
dec
(bad)
xchg
sbb
and
add
sbb
bound
stc
or
jge
ds
jle
jmp
(bad)
ds
inc
cld
add
sub
daa
mov
(bad)
cmp
leave
xchg
mov
xor
jbe
loopne
jns
inc
cmp
add
clc
stos
pop
fucomip
jae
dec
cli
cdq
shl
jb
xor
leave
icebp
(bad)
lock
repnz
and
stos
pushf
call
lock
xor
jns
xor
mov
rol
fst
call
pusha
jle
sar
or
lds
mov
repz
in
stos
or
jmp
mov
jecxz
cmp
inc
push
sbb
bound
dec
loope
fisubr
jmp
leave
int3
push
retf
jl
imul
and
add
mov
jns
test
or
push
push
cdq
dec
and
mov
cmps
fs
adc
cmp
repnz
repnz
lds
(bad)
xor
jg
pop
fwait
out
add
xor
mov
or
lods
pushf
sub
mov
arpl
in
rcr
es
sbb
sbb
push
xor
fwait
rcr
dec
or
aas
es
sbb
adc
cdq
push
adc
cmc
test
jg
loopne
pop
leave
out
mov
xchg
lea
aad
add
icebp
mov
jecxz
sub
push
add
xlat
cmp
popa
lods
fsubp
pop
sti
hlt
sub
fwait
clc
fwait
xor
cmp
push
ins
pop
xor
sbb
xchg
adc
ds
sahf
and
xchg
and
dec
xor
sti
mov
sbb
and
test
stos
xchg
cmps
inc
in
cwde
mov
pop
sar
lea
xchg
rep
pop
fwait
pop
and
xchg
mov
xchg
xor
out
bnd
icebp
nop
icebp
int3
xchg
fnstsw
push
call
enter
jl
add
pushf
inc
(bad)
js
push
add
push
(bad)
fxam
jmp
push
jge
add
xchg
not
fucom
add
outs
popf
jl
(bad)
push
sub
cld
enter
in
test
ins
pop
push
cwde
int
dec
adc
cvtps2pi
(bad)
push
aad
sbb
retf
icebp
jmp
push
pop
sub
retf
sub
xchg
add
ror
or
and
jmp
jl
sub
or
fcom
xor
pop
ja
or
sti
inc
jne
(bad)
xchg
test
cwde
in
daa
sub
cmp
leave
xchg
test
mov
cmps
xchg
pop
pop
jge
(bad)
xchg
fwait
cmp
and
or
or
repnz
fimul
dec
mov
fst
push
inc
bound
call
popw
xchg
sbb
cdq
pop
push
enter
xor
xor
retf
mov
or
mov
xchg
(bad)
aad
cli
and
aam
stos
jg
push
add
les
sub
mov
sahf
cmp
xchg
ins
scas
inc
xchg
(bad)
adc
div
ins
and
into
repnz
pushf
mov
adc
pop
mov
xchg
and
lods
and
jecxz
out
test
ins
or
int
aam
dec
imul
aad
ret
ja
sub
scas
test
sbb
inc
cmp
add
fstp
pop
icebp
mul
and
loop
hlt
aaa
xor
jbe
push
fild
fs
retf
lods
test
sbb
pop
sar
mov
jmp
(bad)
mov
aaa
mov
leave
mov
sub
mov
pop
call
es
jl
lods
data16
mov
frstor
push
and
les
xlat
jecxz
and
mov
sub
sahf
xchg
or
push
data16
cmp
sbb
imul
adc
int3
aaa
xchg
enter
aaa
inc
mov
mov
(bad)
fstp
(bad)
adc
into
stos
push
push
cmp
stos
cmps
repz
sbb
jo
aaa
pop
cmp
inc
repz
adc
dec
xlat
pop
stos
inc
sub
aas
inc
test
fisttp
fs
(bad)
or
inc
jns
jecxz
lods
sbb
inc
xchg
add
(bad)
rcl
sub
mov
jg
ins
call
outs
push
in
sbb
mov
inc
sbb
adc
cmp
fcom
sbb
ins
mov
push
xchg
dec
mov
shl
mov
mov
pop
inc
mov
adc
xor
cdq
mov
setle
xchg
lds
xchg
cmp
pop
push
xchg
mov
xor
jmp
ss
pop
in
repnz
dec
pop
cmp
or
scas
jno
movs
cmps
xchg
jne
mov
push
test
pop
xor
lds
ss
loopne
and
jg
mov
call
sbb
(bad)
jmp
adc
(bad)
push
pop
mov
sbb
mov
xor
or
sbb
or
xor
sub
pop
cli
in
push
adc
adc
mov
sub
shl
lahf
inc
ss
mov
aad
sub
jnp
jae
cwde
rcl
int3
dec
lods
icebp
dec
pop
xchg
(bad)
jmp
mov
push
test
lods
mov
xor
mov
lea
jae
(bad)
rcl
lods
dec
repz
test
das
mov
jl
hlt
cmp
mov
sbb
dec
lods
push
inc
sbb
or
ret
sbb
or
mov
mov
jne
in
dec
mov
jp
data16
push
sbb
ja
dec
outs
enter
pop
jbe
scas
inc
dec
jo
(bad)
mov
inc
(bad)
cwde
add
pop
movs
xchg
mov
gs
cmp
adc
bound
cld
inc
clc
mov
gs
das
add
sub
adc
jnp
sub
inc
push
xchg
push
and
and
push
pusha
pop
xor
dec
into
int3
or
inc
test
push
gs
js
dec
mov
repnz
(bad)
pusha
(bad)
push
mov
adc
call
push
sar
ret
jp
jmp
out
adc
ror
pop
push
cmps
jae
aaa
enter
sub
mov
xchg
mov
mov
call
fwait
mov
repz
mov
pop
jo
fld
and
outs
daa
push
daa
mov
enter
xor
shl
adc
cwde
lods
les
mov
push
pusha
clc
xor
fld
loop
inc
mov
jecxz
ds
ins
jnp
push
inc
jecxz
push
push
sbb
mov
cmps
lahf
test
pop
(bad)
movs
and
loop
push
xchg
add
mov
mov
sbb
xchg
push
xor
(bad)
sahf
dec
in
(bad)
jecxz
adc
aaa
mov
imul
into
stc
repnz
mov
mov
(bad)
mov
outs
pop
retf
ret
cmp
out
add
loop
sbb
loopne
(bad)
leave
leave
sti
and
ret
xchg
stos
sub
movs
xchg
cs
arpl
call
ins
add
mov
sbb
stc
dec
into
or
xchg
xchg
je
and
rcl
xchg
cmp
es
or
int
jmp
inc
(bad)
in
push
fcomp
(bad)
outs
pop
fild
sbb
inc
mov
adc
shr
loope
jae
adc
pop
pop
xchg
xchg
fdivrp
int
adc
bound
out
xchg
retf
outs
cmps
pop
push
lahf
lock
popa
mov
pop
retf
add
pop
loop
xor
sbb
adc
xor
pop
out
cmp
mov
dec
dec
pop
xlat
jmp
bound
push
out
fmul
sub
int3
adc
mov
dec
sti
inc
dec
sbb
sahf
mov
aas
and
and
mov
inc
or
jmp
out
call
inc
popf
pop
fisttp
xlat
mov
or
outs
shl
mov
dec
fsubp
push
je
mov
pop
mov
mov
mov
fcomp
in
cmp
dec
(bad)
cmp
cmps
xor
mov
or
mov
lds
push
push
loope
lods
aad
mov
js
loopne
shl
mov
sahf
sub
and
fdivr
test
aad
(bad)
pop
repz
mov
push
out
(bad)
mov
or
popf
arpl
cmp
clc
cmps
(bad)
in
cdq
std
add
arpl
jns
adc
adc
xor
pop
mov
dec
add
mov
fstp
adc
dec
dec
js
cdq
jmp
adc
push
shl
pop
fiadd
push
push
sbb
xchg
dec
retf
push
sub
jb
out
pop
paddw
push
push
mov
std
icebp
ja
and
sar
sti
out
mov
jno
outs
pop
inc
aad
push
jno
pusha
ja
push
(bad)
push
je
or
xor
mov
sti
int3
mov
sbb
mov
dec
mov
xchg
addr16
shl
and
fwait
and
adc
mov
aaa
aam
mov
xor
inc
add
inc
push
adc
push
ret
sti
(bad)
fist
sub
fst
rcl
imul
mov
or
ror
sub
loopne
xor
mov
retf
cmps
xchg
pop
xchg
mov
pusha
sahf
sub
out
push
cli
pop
inc
pop
(bad)
nop
lahf
lea
push
xor
jge
jecxz
ss
dec
(bad)
adc
test
jp
mov
popf
jns
loop
mov
pusha
lock
jge
pop
cmp
sub
push
lods
int3
iret
pop
xlat
shl
xlat
cwde
cmp
xor
push
xlat
cmc
stos
ins
xor
mov
test
test
cmp
fld
inc
or
out
mov
lds
lods
adc
jmp
ret
add
lds
sahf
sbb
dec
or
or
cmps
push
mov
jnp
dec
jmp
int3
clc
(bad)
lods
test
rcl
lahf
out
pop
push
or
in
lock
fld
push
inc
dec
(bad)
(bad)
cmp
cmp
movs
adc
ret
into
and
and
popf
ds
or
inc
test
add
xor
cmps
ss
jmp
jbe
dec
jnp
pop
dec
test
out
fwait
aad
cmp
push
fidivr
push
(bad)
in
mov
and
or
addr16
pop
mov
pop
push
loopne
loop
inc
shr
sahf
dec
dec
test
sbb
rcr
inc
loopne
mov
fdiv
pop
test
push
inc
inc
std
dec
mov
or
sub
adc
sub
movs
jno
mov
shr
loopne
push
mov
repz
mov
cmp
dec
adc
cs
in
xchg
and
push
adc
jnp
retf
push
in
and
into
outs
adc
pop
les
dec
xchg
jo
sub
mov
adc
stos
sbb
xlat
out
fisttp
ss
pusha
xchg
movs
aad
aam
or
retf
jne
jmp
out
fcomi
(bad)
and
je
lods
adc
popa
xlat
cmp
inc
jg
outs
jno
inc
push
mov
imul
and
lods
xor
cmp
or
sbb
sti
xchg
inc
mov
ja
mov
lea
jmp
outs
sbb
scas
adc
fmul
sahf
pop
int3
xchg
cwde
push
sahf
cmc
jmp
outs
enter
xor
and
pop
jno
movs
mov
popa
repz
or
inc
mov
mov
sqrtps
ret
adc
xor
lock
repz
ja
mov
aam
and
test
pop
add
ret
test
xlat
xor
push
test
adc
jnp
xor
ins
rol
add
loope
les
jmp
call
int3
jecxz
fnsave
sub
jns
or
push
and
sbb
ins
sar
mov
push
pop
dec
imul
dec
cmp
mov
fsub
cwde
cli
mov
xchg
imul
and
push
stc
mov
xchg
push
push
dec
jp
in
test
repz
ror
pop
(bad)
pop
jo
or
mov
stos
cmps
xchg
pop
je
mov
cmp
add
sbb
test
xor
pop
sbb
fdivr
pop
mov
popf
aad
add
rcr
dec
adc
cmps
mov
pop
iret
sub
test
repnz
jne
repnz
dec
xchg
rcl
pushf
push
jg
sub
and
add
mov
in
imul
out
sbb
xchg
in
pop
stos
fs
sbb
lea
xor
shr
pusha
mov
test
imul
pop
adc
aad
jnp
leave
sbb
jnp
mov
into
es
jbe
test
jnp
ss
cmp
push
shl
push
mov
pop
cmp
es
mov
xchg
sub
repnz
(bad)
dec
sbb
shr
mov
mov
sbb
test
lea
and
shl
sub
(bad)
call
(bad)
mov
adc
cli
adc
shl
(bad)
fld
xchg
mov
mov
test
pop
scas
bnd
call
pop
not
push
arpl
cld
shr
icebp
dec
push
cli
add
xor
mov
dec
mov
and
inc
mov
xor
or
or
not
xchg
pushf
jns
ins
aad
add
in
sub
es
dec
add
push
mov
shl
adc
lahf
adc
les
and
xor
mov
mov
cdq
cmp
dec
mov
lods
push
ret
inc
xchg
nop
in
push
mov
inc
mov
lods
cmp
movs
xchg
into
in
cld
jb
sub
jb
sub
mov
push
pop
xlat
out
cs
mov
xchg
loope
sar
mov
dec
mov
sub
arpl
mov
mov
jmp
sbb
and
mov
cmc
dec
aas
ror
cmp
fdivr
jno
inc
dec
gs
test
adc
xor
aam
stos
(bad)
shl
popf
repz
mov
lods
(bad)
(bad)
call
jl
xor
xchg
sti
sbb
mov
cld
out
inc
retf
cmp
adc
lock
repz
loopne
add
addr16
pop
cmp
lods
test
shl
or
(bad)
pop
dec
mov
jbe
and
or
aam
imul
out
xchg
test
push
dec
ins
leave
test
fdivr
and
hlt
mov
jb
xchg
xchg
dec
lods
dec
push
(bad)
xchg
sub
lock
popf
in
(bad)
dec
mov
pop
ds
sahf
pop
xchg
sub
and
pusha
mov
and
mov
push
and
xchg
jae
dec
xchg
imul
mov
ss
pop
push
xchg
dec
aad
or
mov
xchg
or
pop
repnz
adc
cmp
cli
in
cmp
shl
push
stos
pop
(bad)
mov
(bad)
dec
dec
mov
call
dec
mov
cmp
sub
ret
sub
ins
daa
pushf
xchg
xor
hlt
fnsave
outs
mov
add
xchg
adc
pop
jne
dec
jns
sbb
mov
mov
dec
mov
jmp
iret
mov
mov
aas
rcr
iret
xchg
adc
in
lea
leave
ins
lods
push
jmp
push
sti
xchg
fs
jle
retf
repz
dec
fistp
hlt
xchg
inc
add
cs
mov
cli
or
mov
ins
inc
dec
sub
into
mov
xor
mov
inc
push
mov
test
std
mov
loop
retf
das
sar
push
retf
push
sbb
popw
test
in
sbb
xor
fst
sar
or
xchg
out
and
jno
cmp
movs
jno
cmps
outs
ja
pop
jecxz
fcomip
xchg
pop
(bad)
cmp
bound
mov
inc
js
int
fs
inc
clc
cld
sub
addr16
pop
dec
xor
push
inc
stos
xchg
pusha
test
push
dec
pop
jno
lahf
cmp
in
test
lds
xor
push
jecxz
xor
stos
(bad)
loope
pop
pop
pop
inc
outs
lods
mov
movs
xchg
loop
inc
mov
bound
in
jge
push
(bad)
cli
movs
mov
int
mov
push
jecxz
stc
sub
je
inc
xchg
pop
pop
mov
movs
pop
push
dec
mov
ja
das
push
pop
daa
pop
pop
cdq
test
and
xor
(bad)
rol
or
in
pusha
cmp
scas
ins
push
mov
mov
push
push
cmp
and
test
shl
cdq
(bad)
(bad)
cmp
xchg
and
leave
inc
dec
aam
mov
xchg
jne
inc
movs
es
or
cmp
cs
ins
push
dec
sub
daa
jp
inc
push
dec
or
mov
aaa
push
cli
lea
sub
shl
or
stos
add
popf
mov
jo
(bad)
sub
stc
mov
xor
cwde
dec
stc
xor
inc
mov
jmp
jne
jge
hlt
jmp
out
shr
mov
jnp
(bad)
mov
jl
and
cdq
das
mov
imul
or
or
or
and
test
push
add
xchg
pop
inc
pop
(bad)
xchg
xchg
push
xchg
sbb
sub
cmp
movs
jl
add
fsub
(bad)
xor
jne
push
imul
fnstsw
or
xlat
rcr
ins
rcr
imul
dec
(bad)
int3
xchg
inc
dec
loopne
in
leave
and
lds
pushf
push
imul
js
and
push
and
dec
lods
mov
cwde
sub
ds
pop
mov
cmp
push
jne
add
push
dec
leave
jle
inc
sti
mov
fdiv
mov
xchg
int
cmps
lock
push
fnstsw
test
inc
retf
mov
push
adc
ret
adc
sbb
mov
daa
fidiv
data16
cmp
sar
test
push
sbb
repz
inc
sub
lahf
fidiv
daa
mov
dec
adc
mov
ins
sub
nop
mov
test
ins
les
mov
jnp
mov
test
cmps
stc
lock
call
and
jge
mov
call
pusha
dec
outs
fidiv
ja
or
mov
jp
test
int
cmps
cmp
dec
stos
cwde
adc
xor
xchg
xor
push
vpmacsdd
test
in
je
scas
fwait
test
or
data16
std
mov
cld
xor
outs
mov
mov
jmp
adc
or
imul
nop
cmp
stos
arpl
xchg
test
fmulp
lock
inc
sub
daa
dec
dec
add
into
xor
out
mov
jmp
add
add
into
adc
adc
xchg
and
(bad)
das
hlt
cld
push
or
dec
lahf
push
iret
or
sahf
mov
cmc
pop
scas
xchg
or
call
and
dec
push
shl
adc
in
out
rep
mov
mov
xchg
pop
call
movs
dec
xlat
(bad)
cmp
mov
es
leave
stos
or
aam
or
cdq
push
mov
or
rcr
adc
push
mov
ins
dec
jmp
test
dec
mov
sub
and
inc
les
jns
imul
in
fcomip
fucom
mov
mov
adc
xchg
addr16
mov
inc
pop
idiv
and
adc
add
test
sub
xor
test
sbb
les
add
addr16
ins
xlat
sbb
nop
shl
fistp
mov
xchg
pop
int3
or
mov
sar
push
mov
sub
inc
out
lds
bound
std
pop
jb
and
sti
call
imul
out
sbb
and
xor
outs
adc
mov
mov
inc
arpl
mov
dec
repnz
and
out
inc
xchg
or
dec
addr16
mov
dec
repz
retf
jns
jb
(bad)
cmp
push
xchg
mov
adc
dec
loop
rol
pop
ret
mov
lds
mov
xor
xor
push
push
test
add
xlat
fistp
inc
pop
xor
mov
pop
ins
loop
xchg
(bad)
out
repz
push
out
adc
pop
mov
in
outs
cld
jp
cmp
clc
and
push
lds
cmps
repnz
(bad)
repnz
push
adc
cmp
pop
lea
mov
mov
lahf
add
stc
in
xchg
ret
(bad)
les
xor
sub
dec
out
adc
xchg
iret
cmp
(bad)
or
ins
jmp
inc
sub
mov
jg
dec
mov
stos
test
ficom
or
nop
call
(bad)
test
inc
push
clc
in
push
and
sub
sti
sub
and
push
cmp
xor
push
fimul
xor
popa
pop
into
(bad)
ret
test
mov
add
lods
in
pop
xchg
mov
int
jb
in
lods
jbe
lods
mov
arpl
movs
(bad)
dec
cmp
pop
jmp
and
inc
jle
test
dec
xchg
add
add
pusha
pop
mov
pop
xor
lds
ror
sub
add
ficomp
jbe
hlt
xor
pop
mov
push
cmp
mov
mov
dec
aaa
jae
mov
pushf
outs
inc
or
icebp
loop
test
fcmovne
jae
pop
jmp
es
gs
inc
enter
aad
popf
mov
retf
or
push
outs
pop
or
call
sar
jns
mov
cmp
jbe
adc
into
xor
lds
dec
push
pop
push
jge
mov
jb
or
ror
sub
xchg
mov
adc
mov
push
test
ss
test
xchg
xchg
cmps
ja
adc
inc
rdpmc
jecxz
addr16
je
jmp
or
sbb
es
fidivr
adc
lds
iret
and
repnz
outs
cmp
adc
jmp
add
jnp
shl
and
pop
add
lods
push
fdivrp
mov
aam
fmul
mov
mov
imul
xchg
test
cli
xchg
pop
ret
mov
mov
les
dec
sbb
add
push
push
mov
or
dec
(bad)
call
add
test
cld
mov
cmc
stos
fdivr
and
outs
(bad)
data16
or
gs
mov
shl
cmp
sahf
fbstp
(bad)
into
mov
outs
mov
test
mov
xchg
xlat
retf
ds
or
push
jo
xor
add
in
cmp
stos
jl
arpl
jmp
fild
lock
dec
fcomp
or
ins
bound
add
jmp
pop
gs
loop
gs
faddp
push
lock
sti
mov
push
ins
outs
fiadd
push
xchg
xor
rcl
rol
cli
retf
sub
inc
scas
jle
(bad)
jno
dec
rcr
inc
(bad)
xor
cdq
aaa
shr
test
(bad)
sub
out
popa
movs
sub
les
pop
leave
mov
push
popf
and
push
aas
arpl
daa
mov
mov
jge
into
and
addr16
cvtpi2ps
sub
mov
repnz
mov
mov
fisubr
pushf
xor
or
or
mov
pop
mov
jns
shl
or
aaa
scas
js
jo
popf
and
dec
xlat
into
mov
fbld
(bad)
div
cmps
cmp
jae
(bad)
mov
imul
mov
arpl
cwde
pop
mov
cmp
test
mov
or
mov
jne
sub
ret
ret
fcom
dec
fld
popf
aad
(bad)
leave
sub
outs
cwde
mov
(bad)
scas
jbe
inc
shl
cmp
inc
add
scas
pop
(bad)
mov
(bad)
lods
(bad)
pop
sti
arpl
lea
das
(bad)
adc
cmp
xchg
out
mov
mov
lds
call
mov
sub
adc
add
dec
cmp
ins
jmp
sub
ja
outs
sti
jg
jle
add
pushf
std
pop
inc
and
mov
add
mov
rcr
stos
stos
shl
imul
sbb
push
cmc
mov
enter
lahf
mov
jl
mov
movs
inc
mov
mov
mov
or
call
push
dec
mov
ret
dec
inc
addr16
and
in
mov
scas
dec
ret
(bad)
cmp
pop
in
cmc
xchg
xchg
sub
pop
inc
pushf
scas
pop
mov
(bad)
ja
sahf
ret
(bad)
enter
mov
stos
ret
jecxz
sahf
and
mov
cwde
adc
sti
test
jb
not
mov
das
sbb
mov
or
inc
xor
imul
inc
out
mov
rol
mov
inc
mov
dec
sbb
xchg
(bad)
gs
aas
ja
adc
mov
sbb
inc
pop
imul
mov
(bad)
ja
in
dec
out
out
out
pop
dec
mov
and
push
mov
ror
add
jmp
out
xor
adc
xor
stos
shl
inc
mov
stc
or
jae
es
rol
push
cdq
mov
mov
rcl
call
scas
mov
inc
dec
adc
test
xchg
test
jns
mov
jns
data16
gs
movs
hlt
add
es
pop
ja
add
sbb
je
mov
lock
aaa
fsub
scas
jo
ret
mov
mov
push
jl
mov
sbb
iret
pop
imul
and
mov
outs
loope
jge
or
cld
sub
sar
les
dec
mov
push
lods
push
fnstenv
inc
repnz
rcr
mov
test
aad
sbb
and
(bad)
out
xchg
jne
loope
pop
or
jae
aas
(bad)
pop
xor
mov
idiv
sahf
call
inc
inc
leave
mov
sub
stos
pop
pop
imul
sub
(bad)
jnp
push
mov
in
mov
lock
into
mov
cwde
fisttp
stos
lds
popf
cmps
sbb
aas
xchg
mov
dec
adc
leave
jo
repz
shr
in
mov
pop
lods
and
rol
sub
repz
inc
aas
push
push
outs
sbb
mov
sahf
add
cmp
jns
test
(bad)
retf
xchg
inc
cmp
jae
in
fs
cmps
pop
inc
pushf
scas
mov
push
xchg
das
push
mov
std
lods
inc
icebp
mov
into
pop
push
push
mov
mov
movs
retf
cmp
test
iret
in
jb
std
cmp
adc
stos
loop
nop
or
dec
xchg
sbb
int3
xor
ror
cmc
mov
mov
sti
jmp
lds
jg
push
add
int
(bad)
lods
or
mov
sub
sub
stc
cs
icebp
pop
aad
in
das
dec
push
daa
pop
fdivr
xchg
push
mov
call
icebp
mov
cld
stc
mov
retf
cli
jne
jmp
pop
cmp
cmp
push
push
fidiv
mov
push
add
clc
adc
cdq
ds
inc
adc
sub
jbe
cmp
sbb
enter
in
xchg
pop
mov
in
push
hlt
cmp
aad
mov
pop
aaa
les
int3
xchg
mov
int
push
or
mov
dec
dec
fwait
dec
jbe
stos
das
xchg
lds
adc
dec
mov
in
adc
or
or
ja
push
xor
arpl
ins
retf
xor
lldt
fwait
lods
jle
loope
pop
scas
dec
les
repnz
loopne
out
inc
sub
adc
in
jns
mov
(bad)
sar
jb
int3
sbb
retf
out
int3
loope
mov
add
in
mov
or
sbb
aas
loop
jns
out
add
sub
test
adc
jle
pop
popa
out
loope
sar
mov
xor
mov
dec
aas
retf
pop
loope
std
stos
sar
mov
int3
mov
mov
gs
push
and
cmp
push
mov
xchg
pop
aad
outs
scas
retf
imul
je
or
pop
stos
jecxz
mov
push
shl
push
sti
shl
ficomp
mov
mov
femms
mov
int
js
out
stos
cmp
in
push
mov
das
mov
xchg
push
scas
pop
clc
adc
into
sub
rcl
mov
int3
js
push
sub
mov
xchg
jmp
pusha
push
xchg
sub
mov
cmp
clc
adc
inc
dec
and
cmc
hlt
xchg
cmp
xchg
push
aas
call
jp
or
dec
sahf
adc
iret
jae
scas
cmc
sti
jle
cdq
lock
(bad)
test
cmp
jmp
xchg
jb
or
sub
scas
xchg
lds
pop
(bad)
lock
mov
jae
and
repnz
sahf
stc
and
je
jmp
pop
pop
and
nop
sub
std
xchg
sar
jp
leave
xchg
ret
adc
(bad)
xlat
xlat
int
jns
cmp
dec
imul
push
arpl
inc
ret
push
sub
leave
ins
mov
adc
xchg
xchg
fidiv
jl
jns
inc
push
popa
test
or
push
into
jno
and
mov
inc
and
gs
mov
dec
add
jmp
(bad)
jae
in
dec
adc
test
pop
or
sub
repnz
enter
xchg
xchg
es
jnp
lock
and
daa
xchg
lahf
mov
daa
xchg
fistp
mov
ins
add
fsubr
jne
cmc
push
int
mov
cld
aad
mov
loop
outs
jmp
jno
fnstsw
imul
enter
icebp
push
fisttp
sbb
test
nop
sub
dec
shl
lock
es
in
stos
mov
xlat
push
movs
packsswb
push
sbb
scas
cwde
xchg
inc
repz
push
arpl
push
in
cld
push
sbb
xor
adc
nop
pop
enter
sub
and
in
xor
xor
adc
pushf
mov
sbb
(bad)
jnp
jp
mov
jmp
outs
out
jnp
push
cmc
(bad)
sti
sbb
jmp
pop
inc
xor
add
mov
mov
into
test
adc
sti
outs
cmps
and
inc
jmp
pop
imul
mov
je
push
cdq
jle
or
loop
xchg
adc
daa
pop
pusha
icebp
and
and
les
dec
(bad)
std
pop
dec
xchg
add
popa
or
mov
lods
xor
bnd
pop
inc
cld
in
cmps
mov
cmc
pop
and
loope
sbb
cmps
div
je
pop
cmps
mov
das
mov
ret
sbb
push
cmc
gs
loopne
(bad)
(bad)
dec
mov
add
int3
cli
cmp
adc
into
jmp
mov
sub
in
xchg
lahf
popa
ss
les
push
aad
cmp
mov
mov
leave
mov
cdq
out
out
(bad)
mov
test
les
mov
xchg
fdivr
fst
(bad)
icebp
mov
pop
mov
ins
jb
mov
mov
xchg
mov
iret
dec
lds
hlt
xchg
mov
movs
stos
mov
jle
movs
jbe
inc
sbb
lahf
dec
test
(bad)
adc
in
or
es
inc
repnz
std
iret
fiadd
call
mov
daa
sbb
jb
(bad)
in
aaa
lahf
(bad)
mov
adc
xchg
dec
fsubr
mov
pop
or
add
xor
mov
out
repz
jo
hlt
out
adc
mov
pop
sbb
fwait
pop
mov
add
fisttp
or
inc
out
rcl
hlt
inc
mov
mov
test
call
cmp
mov
and
cmp
ss
cmp
jb
hlt
pusha
or
inc
jmp
cmp
push
dec
test
imul
pop
add
or
push
fs
inc
pop
lea
mov
mov
shld
daa
shl
xor
xchg
out
mov
adc
out
add
retf
dec
loop
in
jle
jle
(bad)
mov
shl
aaa
push
or
mov
out
lods
or
pusha
xor
jl
lods
mov
dec
jno
sbb
cmp
mov
inc
or
aad
sbb
mov
xor
clc
jmp
ins
and
add
enter
sub
cdq
pop
jge
dec
cli
jmp
push
jno
xor
push
idiv
ja
adc
cmp
pop
mov
(bad)
dec
aaa
(bad)
loopne
xor
call
jl
aam
pop
fld
movs
mov
shr
aaa
xchg
jbe
mov
sbb
adc
cmps
pushf
add
mov
repnz
sub
push
sahf
jge
mov
retf
cmp
or
inc
push
mov
ja
hlt
std
mov
std
dec
lahf
pushf
ret
ss
ret
ins
scas
xor
mov
adc
inc
leave
ret
mov
es
mov
nop
and
scas
sub
push
sub
daa
test
add
outs
lds
fmul
stos
outs
fcomp
clc
daa
retf
(bad)
ja
mov
and
shr
test
mov
mov
jne
jo
fwait
xor
cmovs
cmp
ins
in
jae
faddp
lahf
cmp
add
adc
iret
shl
lods
xchg
imul
mov
and
push
vpminsw
and
aas
out
ins
cmc
aad
aas
maxps
outs
cdq
add
cmp
repz
or
xchg
jge
and
sbb
fild
xor
adc
into
jae
dec
mov
adc
add
xor
adc
add
xchg
sbb
enter
push
movzx
add
dec
jns
cld
sub
cdq
es
add
sub
jmp
(bad)
imul
or
sub
out
leave
jns
jmp
pcmpeqd
call
out
mov
punpckldq
ds
sahf
ficomp
sbb
jne
ficomp
mov
pop
in
mov
push
mov
jns
pop
sub
push
mov
dec
jne
pop
sbb
adc
sub
xchg
test
dec
push
lahf
mov
and
cli
cmp
and
or
pop
mov
lods
and
adc
pop
pop
inc
test
mov
push
(bad)
push
rol
mov
and
xchg
fcom
shl
out
jae
test
cmp
inc
sbb
mov
mov
mov
mov
xor
jbe
or
sahf
lahf
cmps
sub
call
xchg
loop
sbb
mov
mov
sbb
sti
push
dec
loop
mov
int
inc
in
call
xchg
rol
xor
push
bound
(bad)
xor
xchg
ror
jno
jecxz
gs
sub
jl
mov
xchg
and
adc
sbb
ret
fmul
int
scas
mov
pop
inc
and
movs
repz
jmp
xchg
xor
cld
out
loop
sbb
cmp
or
outs
mov
retf
sub
adc
mov
sbb
in
sar
fs
inc
push
rcr
sar
sahf
mov
mov
arpl
(bad)
pop
outs
mov
dec
xchg
ret
sub
adc
mov
cmp
xor
fnstsw
sub
pusha
rol
pop
jmp
fcomp
pop
pop
pusha
sub
ds
or
pusha
shl
les
cmp
pop
dec
enter
inc
mov
popf
shl
inc
clc
std
mov
dec
call
mov
push
sahf
inc
enter
add
retf
mov
pop
sub
push
adc
iret
scas
mov
xchg
in
test
popf
mov
cmp
retf
xchg
cld
dec
fnstcw
popa
cld
std
xchg
mov
int
mov
jle
jge
sbb
call
mov
inc
fldenv
and
into
mov
cmp
(bad)
cmp
cmp
mov
jg
jp
jmp
mov
int3
out
add
jne
aaa
cmc
aas
ins
movs
mov
popa
hlt
out
cmp
inc
and
scas
sub
jbe
nop
xor
jge
(bad)
call
int
test
pop
jg
es
dec
(bad)
fcom
outs
pop
fiadd
mov
jg
loopne
mov
fmul
clc
enter
cwde
push
ficomp
sub
push
jo
or
xor
jp
je
xchg
int
fidivr
mov
pcmpeqw
ret
out
ror
mov
sbb
add
cdq
mov
fwait
pop
push
hlt
jno
xchg
cmps
outs
fmul
loope
(bad)
mov
sbb
mov
int3
cmp
in
or
mov
mov
or
inc
pop
sub
or
xchg
jns
xor
imul
sbb
ror
imul
cmp
mov
gs
mov
pop
loop
sub
jae
sbb
pop
daa
daa
cmc
ds
sbb
push
add
dec
ins
ret
mov
mov
jl
mov
retf
jecxz
cwde
cmp
stos
cmp
enter
mov
daa
cli
push
aas
or
aaa
jbe
data16
and
gs
mov
cmp
and
loope
scas
sub
jbe
dec
ror
dec
loope
mov
sub
mov
mov
jo
add
and
mov
pushf
lods
xor
addr16
in
data16
mov
xor
pop
(bad)
lods
pop
pusha
jo
das
mov
shl
cs
and
test
ds
cmp
cli
cmp
nop
inc
pop
je
pushf
mov
hlt
inc
and
rcl
pcmpeqb
test
sbb
jmp
push
retf
stc
mov
imul
call
(bad)
(bad)
mov
cmp
adc
es
mov
fidivr
or
sub
and
xor
adc
retf
inc
xchg
push
cli
push
jns
data16
sub
inc
mov
jl
imul
mov
popf
out
adc
mov
jne
mov
adc
daa
xor
inc
fisub
cld
inc
stos
sbb
jp
retf
adc
push
mov
dec
dec
xchg
sbb
dec
adc
ins
cli
loope
xchg
push
or
pop
aaa
adc
lods
mov
gs
jge
test
jp
push
and
lods
sub
mov
or
mov
mov
ja
and
ins
rcr
sar
and
call
xlat
aad
ret
popa
shr
add
xor
outs
add
dec
pop
jmp
jno
and
inc
dec
leave
jle
nop
mov
test
mov
daa
shl
mov
sbb
sar
inc
mov
adc
and
dec
lahf
mov
pop
xchg
jmp
cld
sbb
jecxz
mov
xchg
mov
push
std
test
inc
sar
pop
movs
inc
test
mov
pop
inc
ins
movs
xchg
fsubr
jno
sbb
xchg
lea
cmc
mov
mov
add
inc
mov
pop
ins
test
mov
(bad)
sar
imul
jae
(bad)
cmp
adc
push
push
push
imul
rcl
stos
out
mov
popf
test
dec
cmps
int
dec
mov
ficom
sub
jl
std
imul
sub
repz
sbb
aas
pop
xor
sbb
sub
mov
aam
pop
mov
and
push
and
add
dec
cmp
mov
inc
fs
xor
loop
and
test
movs
sub
lock
mov
clc
(bad)
daa
inc
adc
(bad)
test
inc
sbb
mov
bound
in
lahf
adc
mov
les
sbb
xchg
lock
ds
push
(bad)
fiadd
popf
xlat
(bad)
mov
loopne
(bad)
xor
cdq
mov
inc
pop
add
inc
fisubr
or
mov
int
rsqrtps
cmp
ds
daa
sub
add
jg
sub
imul
call
inc
cs
scas
fabs
push
xchg
(bad)
nop
sbb
xchg
out
(bad)
ficomp
mov
xchg
push
clc
bound
std
mov
jmp
add
jne
jecxz
repnz
ror
fimul
add
cmc
cmp
adc
stos
sub
pushf
mov
sub
adc
in
pop
lahf
aaa
repz
add
shr
mov
pop
repnz
out
call
mov
mov
mov
shl
xchg
sub
xchg
xchg
cmps
mov
(bad)
repnz
leave
mov
dec
cmp
mov
push
arpl
fistp
sbb
out
aam
mov
cs
mov
(bad)
xor
xlat
xor
sub
out
mov
push
test
arpl
xchg
loop
in
out
out
xor
(bad)
cmp
dec
ins
jle
xor
fild
iret
mov
xor
iret
ror
shr
test
pusha
push
and
mov
int
in
sahf
lods
push
rdtsc
cmp
and
test
and
data16
push
inc
mov
test
les
shld
dec
push
dec
sbb
je
sti
mov
jns
or
add
xor
outs
bndldx
ret
jo
arpl
stos
(bad)
in
jge
cwde
mov
pop
jnp
xchg
dec
adc
mov
or
jnp
dec
xchg
pop
sub
cmp
repz
fstp
mov
sbb
push
mov
mov
add
push
stos
mov
xor
sub
add
mov
sub
push
call
mov
arpl
lahf
sahf
out
cdq
push
fidiv
pop
push
push
enter
pop
jns
movs
mov
push
outs
test
mov
jle
ficom
mov
mov
or
or
xchg
push
pop
hlt
adc
arpl
lea
and
jnp
(bad)
mov
jp
mov
mov
add
popf
sbb
retf
jns
sbb
and
mov
mov
add
pop
inc
xor
pop
je
in
shr
test
mov
mov
leave
push
jbe
xchg
jae
mov
inc
fs
or
pop
arpl
sar
sbb
stc
rcl
xchg
and
cli
sbb
adc
in
repnz
iret
cmp
ins
std
pop
mov
and
dec
inc
adc
stos
or
pop
push
(bad)
je
cwde
arpl
mov
xchg
cwde
add
stc
icebp
pop
loopne
pop
mov
or
mov
inc
mov
jo
cdq
mov
shl
add
push
jmp
xor
lahf
jg
bound
mov
dec
pop
or
outs
xor
shl
iret
imul
jl
das
(bad)
push
fsubrp
sub
cmp
xor
and
leave
and
sbb
js
int3
fsubrp
scas
adc
push
stos
shr
sbb
cmp
icebp
mov
sub
jmp
jo
mov
outs
repz
jno
or
fidiv
dec
adc
jnp
scas
or
mov
sub
jmp
sub
sar
mov
hlt
dec
pop
scas
fisttp
call
fdivr
mov
cmp
add
ja
clc
mov
stos
inc
sub
inc
popa
xor
inc
out
fmul
fsub
xor
inc
push
pop
dec
xchg
ret
lea
(bad)
test
push
push
das
lock
fadd
jae
push
cmps
(bad)
fwait
outs
inc
fst
push
sub
push
push
ret
out
ss
test
outs
sub
push
ret
fdivr
sub
loope
pop
pop
push
add
xchg
fiadd
mov
dec
sbb
xchg
dec
dec
add
enter
cmp
data16
mov
add
mov
ins
add
jecxz
cmp
and
stos
pop
ss
(bad)
fld
dec
sbb
pop
mov
(bad)
aam
pop
jno
mov
icebp
cmp
(bad)
jle
ja
js
pop
mov
push
jnp
jmp
cs
daa
lea
sbb
mov
gs
or
mov
add
and
push
lock
iret
cmc
cli
addr16
push
jl
mov
ds
xor
ja
xchg
loop
mov
imul
mov
inc
faddp
adc
sub
mov
sti
(bad)
jp
jno
pusha
jae
jo
ds
mov
jg
test
(bad)
pop
test
mov
mov
pop
fistp
sbb
add
out
out
scas
ror
adc
jno
mov
adc
pop
push
pop
jnp
(bad)
pop
inc
cmps
ret
or
outs
gs
dec
xlat
lea
cmps
sbb
fadd
ret
test
mov
pop
ret
lds
add
push
mov
dec
adc
(bad)
push
mov
setb
stos
imul
jecxz
dec
out
movs
cwde
xor
cmp
mov
cmp
push
ret
add
mov
dec
xor
inc
mov
leave
add
fsub
das
repz
sub
xchg
sbb
and
sbb
sbb
rol
stos
add
jb
mov
ror
div
cmp
(bad)
icebp
add
loope
(bad)
stos
add
cdq
aad
dec
data16
fisub
pusha
pop
(bad)
mov
xor
pop
arpl
cli
add
push
xor
push
ja
fsubr
xor
cmp
mov
arpl
gs
leave
jle
add
repnz
sti
add
or
inc
je
test
pop
mov
arpl
lahf
(bad)
xchg
push
ins
repnz
fucom
jno
mov
inc
call
mov
in
jge
sahf
push
jno
stos
jb
cmps
ins
je
mov
cmp
cmp
mov
push
cmp
sbb
cmps
push
rcr
in
xor
(bad)
aaa
cdq
rcl
stc
cmp
xchg
xor
push
test
cmp
or
cs
test
push
sahf
mov
mul
scas
and
jmp
(bad)
pop
cmps
jl
mov
mov
jno
cli
jnp
into
call
jmp
int3
add
movs
lahf
dec
xor
fiadd
or
sub
push
dec
int
call
jg
adc
lods
dec
js
pop
fisttp
outs
push
mov
(bad)
fcmovb
cmps
xchg
mov
ds
or
push
pop
dec
fld
mov
repnz
or
dec
cmc
pcmpeqb
fcomp
scas
les
pop
sub
fs
xor
aas
inc
lods
mov
fnstenv
push
lahf
pop
clc
les
nop
bound
repz
leave
rol
(bad)
aam
xchg
cmps
enter
movs
mov
data16
mov
xor
sbb
push
das
add
(bad)
fist
and
in
call
xor
inc
retf
ret
push
mov
es
add
stos
dec
inc
dec
loopne
cmps
call
add
xchg
test
pop
leave
mov
hlt
mov
or
sub
lods
add
and
sub
nop
ror
cli
push
mov
jno
mov
stc
frstor
dec
mov
mov
lock
push
stos
and
push
xchg
mov
idiv
jecxz
call
cli
mov
pop
sar
jo
stos
(bad)
repz
mov
out
fwait
adc
jno
fwait
in
sbb
mov
pop
fsub
data16
mov
push
test
hlt
and
and
push
add
xchg
fldcw
clc
adc
xchg
js
enter
mov
retf
pop
pop
xor
sbb
aas
inc
xor
iret
xchg
jo
sub
push
test
ror
call
aaa
inc
xchg
in
xchg
int3
aad
je
mov
xchg
mov
jp
int3
cmp
shl
loopne
push
or
xor
and
pop
fld
retfw
popf
popa
dec
xor
je
push
fadd
fisub
mov
mov
push
mov
and
xor
sbb
and
push
jecxz
test
or
pcmpgtw
mov
and
push
scas
(bad)
sub
in
popf
pop
dec
in
fcomp
into
jmp
push
retf
sub
dec
call
sbb
into
xchg
stos
cmp
sub
test
sub
dec
cmc
arpl
add
test
mov
pop
jp
lea
add
cmp
mov
lds
cmp
cwde
daa
sbb
xor
mov
fs
out
mov
add
aad
pop
inc
idiv
cmp
(bad)
and
jle
push
retf
jae
sbb
and
(bad)
sbb
imul
ret
stc
in
lea
movs
pop
stos
pop
fcmovbe
push
xchg
sbb
call
inc
movs
imul
test
jg
loopne
dec
push
fisttp
or
jecxz
xchg
mov
pop
popf
shr
out
out
cmp
cmp
pop
add
and
mov
scas
mov
int
outs
(bad)
das
inc
add
fstp
mov
(bad)
aas
sub
adc
repz
(bad)
mov
sub
jno
mov
mov
ins
adc
test
jns
pop
mov
adc
call
mov
test
leave
enter
fstp
mov
add
sub
or
or
mov
inc
jmp
inc
imul
hlt
sub
pop
adc
add
lods
cmps
lods
xchg
or
xchg
dec
ins
or
sub
sub
push
mov
or
mov
mov
movs
lea
mov
dec
push
test
xchg
and
outs
mov
mov
popa
popf
xchg
pusha
shl
push
(bad)
rol
pop
push
push
xor
call
xchg
xchg
mov
fcmove
cmp
pop
mov
mov
ret
out
mov
mov
ret
cli
jns
sub
push
and
cs
(bad)
movs
inc
sub
(bad)
fnstsw
mov
sbb
jmp
stos
push
rcl
xor
adc
(bad)
push
push
(bad)
leave
test
add
mov
cmp
xor
or
int
add
mov
ins
and
gs
loopne
mov
retf
jo
lods
pop
sahf
jnp
sti
pop
(bad)
xor
cmp
mov
test
mov
out
xor
loope
cs
shl
dec
(bad)
rcr
jle
in
jmp
js
cdq
push
pop
add
mov
ss
ins
cmc
js
mov
in
pop
jle
pushf
fdiv
push
mov
jp
call
sbb
pop
and
cdq
mov
mov
int
pop
push
sub
jo
movs
and
inc
dec
fist
pop
push
and
jecxz
jo
add
or
xor
dec
mov
mov
push
(bad)
jp
shl
inc
mov
loope
push
xor
arpl
mov
mov
les
lock
mov
cwde
test
xor
or
in
out
inc
jle
adc
mov
cmp
out
scas
imul
lea
shl
cmc
stos
push
lahf
sub
cmc
mov
sbb
sub
iret
jmp
mov
jge
lods
push
cmp
int
push
mov
and
cld
jecxz
mov
mov
inc
dec
adc
inc
lock
xchg
icebp
imul
and
into
jmp
rcl
jl
ror
clc
cmp
xchg
jmp
add
cdq
js
cdq
sahf
shl
daa
mov
cmp
addr16
mov
iret
nop
push
not
fadd
ds
or
pusha
add
inc
mov
pusha
call
xchg
sbb
aas
ins
push
cmps
mov
pusha
imul
sti
pop
int3
mov
fs
mov
rcl
adc
cmc
ds
inc
pop
ror
sbb
sub
adc
rcr
push
mov
cwde
in
sub
or
test
test
int
clc
wrmsr
(bad)
rcr
push
test
int
push
fistp
adc
or
ds
mov
jne
mov
clc
mov
movs
adc
jmp
jecxz
rcr
pop
adc
fmul
rcr
fs
std
cs
inc
and
iret
mov
push
jp
pop
dec
xor
lock
shl
pop
test
push
mov
or
fwait
mov
pop
and
or
mov
in
cmps
adc
scas
js
push
dec
inc
inc
cmp
pop
scas
inc
adc
sbb
in
pop
mov
push
push
into
cli
bound
mov
inc
sbb
(bad)
push
ins
mov
inc
lock
gs
cmp
push
push
inc
jecxz
mov
fs
fdivrp
dec
jmp
mov
or
add
sbb
xor
test
bound
cmp
jle
retf
loop
mov
xor
and
sbb
leave
mov
jnp
repnz
clc
xor
xchg
clc
icebp
push
imul
mov
cmp
stos
and
lea
push
jecxz
jmp
mov
leave
cld
loopne
fistp
mov
cmp
or
xor
js
pop
inc
add
inc
dec
(bad)
push
in
or
arpl
or
rol
ds
cmp
jg
dec
leave
push
(bad)
stc
mov
je
not
xor
movs
or
test
adc
and
xchg
xlat
sahf
in
mov
mov
pop
dec
dec
or
pop
popa
push
pop
ror
outs
xchg
fldcw
pop
and
pop
cmp
popf
dec
call
daa
add
push
(bad)
(bad)
addr16
cs
or
jle
dec
adc
test
into
fild
out
xor
iret
lds
cld
fstp
dec
in
imul
inc
cmc
ret
mov
cmps
test
hlt
stos
aas
pop
mov
hlt
fs
jmp
jecxz
movs
dec
movs
jnp
pop
xchg
ret
cmp
in
call
mov
dec
add
mov
rcr
imul
out
jecxz
push
jb
sbb
lahf
(bad)
xchg
mov
mov
jno
cmp
jecxz
(bad)
(bad)
mov
les
ja
ja
xchg
shr
mov
not
adc
repz
sti
enter
(bad)
mov
sbb
inc
adc
sub
push
test
inc
inc
loope
mov
or
cmc
xchg
cli
out
and
pusha
add
jne
sub
pop
mov
mov
mov
scas
(bad)
lahf
imul
hlt
or
push
xchg
sub
sbb
push
loop
imul
aam
movs
dec
push
cmp
into
in
loopne
mov
ds
lahf
mov
add
scas
and
xchg
loope
sbb
push
pop
cdq
sub
push
jo
sub
movs
mov
pop
push
and
xchg
arpl
data16
sub
and
pop
jmp
or
cmp
stos
scas
lock
adc
xor
iret
add
jg
sbb
and
mov
cmc
fdivr
adc
mov
ins
cmps
jo
sbb
(bad)
cli
sti
and
jl
mov
and
ucomiss
push
and
fwait
arpl
inc
rol
mov
(bad)
push
mov
cmp
stos
and
or
push
mov
retf
loop
pop
iret
mov
and
inc
sub
mov
ins
mov
or
mov
pop
dec
hlt
xchg
sub
push
and
cmp
sbb
or
rcr
push
ds
and
mov
(bad)
and
(bad)
mov
pop
lods
int
push
ror
test
jb
lods
sub
lock
cmp
daa
jmp
sub
or
or
inc
push
and
or
scas
mov
push
inc
jbe
rcr
lea
push
xchg
adc
js
push
cmc
fucomi
inc
fmul
inc
in
aas
sbb
jge
mov
sbb
and
fild
mov
push
cwde
sbb
(bad)
cld
adc
sub
les
ror
jae
push
mov
mov
test
loope
cli
mov
fwait
push
xchg
xchg
inc
dec
add
outs
out
jl
ja
ret
lods
je
lock
test
fs
ret
ja
jmp
loope
mov
cld
jl
pop
pop
nop
fisub
mov
std
jge
adc
movs
pop
sub
pushf
adc
mov
retf
xchg
cdq
pop
jb
imul
inc
pushf
jno
mov
push
push
jl
fistp
int
sbb
dec
dec
inc
dec
adc
or
out
dec
clc
sbb
xor
dec
pop
int3
sbb
lods
fdivr
cmp
cmp
scas
icebp
push
pop
fnstenv
pop
sahf
ret
in
sub
in
mov
xor
or
in
cwde
hlt
pop
xor
push
add
cdq
dec
sub
cs
fsub
inc
ins
movs
sti
dec
inc
lods
out
pop
mov
ins
jne
xor
mov
imul
xor
xor
and
test
stc
retf
shl
add
test
pop
fs
mov
out
retf
cmps
gs
(bad)
in
mov
cmp
xchg
mov
mov
out
jmp
and
in
bound
add
movs
dec
inc
in
hlt
out
add
push
ins
cld
mov
neg
cmp
mov
inc
cli
(bad)
pop
push
jmp
xor
aam
jp
in
dec
sub
mov
mov
cwde
out
push
ds
(bad)
add
mov
mov
nop
fwait
xor
or
ret
ins
push
and
int3
dec
shr
mov
neg
and
push
ja
sahf
inc
movs
retf
inc
jo
ret
pop
ss
push
inc
dec
ret
js
push
outs
jmp
jmp
outs
int3
shr
adc
pop
jb
leave
xor
or
repnz
mov
mov
cmp
call
pop
jmp
imul
pushf
sbb
enter
jp
push
jb
imul
push
fistp
out
or
mov
dec
adc
mov
push
mov
movs
inc
out
ds
jne
shl
mov
cmp
out
loopne
jle
jg
and
pusha
shl
cmp
in
fbstp
jle
dec
pop
fdiv
push
xchg
jp
cmp
sub
pop
jmp
pop
daa
jp
mov
jne
sub
sti
pop
dec
ss
mov
ss
(bad)
jo
jmp
stc
pop
or
sub
outs
push
in
add
jmp
stos
pop
pop
dec
imul
mov
mov
popf
xor
inc
mov
out
xor
out
lds
cmp
add
sbb
xchg
mov
dec
pop
mov
push
retf
mov
mov
or
cmp
gs
in
jns
fs
dec
push
xchg
ror
mov
jno
inc
popa
lods
repnz
repz
push
sub
mov
in
push
imul
(bad)
mov
lahf
push
ja
xchg
xor
mov
mov
adc
call
call
mov
sub
cmp
mov
mov
cdq
fs
jne
push
stos
dec
neg
cmp
bound
movs
jg
scas
cmp
test
inc
scas
inc
pop
test
pop
push
add
xchg
jno
ds
xor
daa
lea
push
retf
int
data16
js
pop
or
pop
scas
sub
jno
sbb
jne
push
sbb
sahf
and
movs
fbstp
mov
call
jno
xchg
iret
iret
enter
mov
lahf
aam
mov
aas
or
mov
bound
dec
cmp
xor
out
lahf
mov
or
lea
adc
adc
or
dec
outs
mov
outs
jb
and
cwde
mov
inc
nop
pop
lods
cli
das
das
icebp
sti
test
jmp
(bad)
push
fisub
and
clc
xor
jecxz
test
mov
dec
das
jmp
mov
xor
sbb
sbb
cmp
ror
cmp
ret
pushf
adc
lahf
cld
fcom
xor
dec
dec
fdivr
push
aad
ins
xlat
adc
sbb
sub
ins
sahf
lea
fstp
aas
ds
and
xor
add
mov
fnstcw
popf
push
pop
inc
or
mov
scas
and
fcomp
pop
pop
xchg
mov
sbb
fwait
in
popa
inc
mov
and
mov
and
int3
hlt
mov
dec
pop
adc
(bad)
ret
jl
adc
mov
dec
ins
mov
frstor
cdq
leave
or
mov
inc
aaa
test
mov
xchg
clc
and
imul
cdq
jmp
psrlw
push
test
pop
add
mov
in
in
push
mov
xchg
pop
ret
int
lahf
jmp
into
xchg
aad
sub
in
mov
cmp
imul
mov
push
iret
dec
jge
jae
mov
ror
cmps
daa
cs
aam
adc
jle
lods
in
retf
arpl
cmp
jge
ja
jecxz
xchg
lea
cld
pushf
add
in
sbb
adc
pop
mov
or
out
mov
pop
cwde
and
sbb
push
sbb
cs
pushf
fiadd
sbb
test
jge
in
repz
jo
test
fcom
and
int
out
xchg
imul
push
inc
sbb
call
add
push
jno
into
and
inc
movs
sbb
addr16
add
mov
jg
inc
sbb
mov
cmp
nop
test
leave
xchg
ror
je
adc
inc
cmc
sub
mov
inc
jne
out
jns
movs
mov
leave
retf
in
dec
cli
mov
movs
sbb
or
inc
int3
pop
movs
ja
pop
repz
xor
outs
and
popf
out
outs
sbb
shl
stos
retf
inc
imul
out
repz
mov
mov
bound
int3
xor
fdivr
sbb
jl
cmp
aad
xchg
gs
hlt
leave
outs
push
adc
cmp
stos
pop
push
dec
xor
ins
cld
mov
repnz
daa
jge
fwait
retf
cmp
das
mov
jge
(bad)
frndint
stos
xchg
mov
cmps
clc
pop
sub
dec
shr
push
sub
aaa
push
std
cmp
or
xor
or
jmp
cmps
cmps
lahf
dec
dec
add
cdq
pop
dec
inc
or
sbb
mov
int3
sbb
ret
add
scas
cmps
sbb
inc
xor
inc
adc
fs
jle
jnp
loope
adc
lods
clc
xchg
xor
xchg
jmp
pop
mov
call
idiv
aam
mov
in
int
div
sub
inc
jo
cld
retf
xor
mov
mov
lahf
inc
adc
int3
dec
dec
mov
pop
mov
cmp
lods
xchg
popa
xor
leave
mov
repz
(bad)
push
or
push
lds
add
fsub
inc
or
aaa
xor
cmps
jns
jns
jle
pop
jns
lds
movs
mov
loopne
cmp
rcl
or
mov
int
fwait
hlt
ins
outs
pop
or
xor
daa
sub
lods
pop
cmps
cmp
sub
fdiv
xchg
test
aaa
out
sbb
stos
test
int3
and
and
loop
nop
fsubr
adc
fst
xor
dec
xchg
push
mov
sbb
add
(bad)
mov
loop
sbb
cmp
xchg
into
adc
iret
mov
arpl
sahf
gs
or
in
jmp
popa
clc
iret
jmp
pop
(bad)
scas
test
imul
dec
test
repnz
test
sub
scas
shr
pop
imul
call
test
cli
push
jle
or
sahf
mov
jg
xchg
dec
test
xchg
xor
push
sbb
inc
ss
sbb
sbb
stos
cmp
int3
push
mov
inc
pushf
sbb
pop
ja
add
and
and
or
pop
pop
popa
sub
add
(bad)
ds
and
xchg
ret
jnp
daa
imul
inc
stos
sbb
rcr
mul
dec
outs
hlt
mov
cdq
mov
xchg
fidiv
imul
lock
add
add
int
mov
or
adc
xchg
sbb
loopne
test
sub
and
inc
jg
daa
sub
jno
cmp
mov
mov
pop
pop
and
aaa
lahf
inc
(bad)
repz
dec
loopne
push
fisttp
and
and
into
scas
mov
(bad)
push
rcl
mov
jnp
(bad)
fsub
mov
scas
mov
push
jmp
loope
icebp
test
ror
iret
movs
repz
xor
pop
jmp
into
pop
or
jge
jmp
je
xchg
ja
cmp
in
shr
sub
invd
xchg
and
and
inc
jbe
push
fidiv
pop
das
jbe
jno
ss
movs
(bad)
ret
or
add
lock
fst
fnstsw
mov
mov
mov
adc
rol
iret
(bad)
lock
mov
ins
retf
fisubr
xchg
stc
scas
xchg
xor
push
cmp
out
jae
ja
inc
test
mov
sub
pop
mov
fst
pusha
jae
or
push
je
sbb
and
movs
sbb
data16
(bad)
aaa
adc
sub
int
fcmovbe
add
inc
mov
xchg
mov
dec
retf
lea
mov
mov
sbb
addr16
dec
ror
pop
out
(bad)
fistp
sbb
add
push
jmp
or
repnz
dec
xor
adc
push
in
loope
in
std
dec
ficomp
test
int
and
xlat
bts
fistp
popa
mov
setne
xchg
xchg
xor
dec
lock
ds
out
cmc
mov
mov
push
pop
repnz
cwde
mov
or
iret
mov
not
out
ret
les
bound
sub
cld
inc
imul
jmp
test
cwde
xchg
xchg
loopne
jno
pop
xlat
outs
cmps
aas
(bad)
xchg
ja
sub
adc
adc
jns
outs
aad
call
mov
mov
lea
inc
mov
adc
rol
jle
(bad)
leave
shl
push
xchg
dec
fwait
mov
addr16
test
lock
mov
das
sbb
add
js
(bad)
add
pop
ins
enter
sbb
push
xchg
jmp
or
das
ret
xlat
std
xchg
es
xor
mov
jg
jo
stos
add
inc
loope
cmp
test
(bad)
scas
xor
fwait
enter
cmp
push
inc
sbb
mov
rol
mov
shr
cmp
or
cmps
aad
(bad)
xor
push
sbb
jle
sbb
push
dec
ins
mov
mov
sbb
lods
sbb
dec
imul
je
push
jge
leave
int
imul
add
aaa
fs
enter
and
fisubr
repz
mov
jp
jp
cmp
dec
jmp
mov
xchg
cmp
test
stc
and
movs
jne
add
jo
pop
aas
stos
(bad)
fist
xor
jg
mov
push
aas
gs
les
or
inc
idiv
jno
cwde
leave
popf
(bad)
mov
out
mov
sbb
data16
inc
xchg
sub
outs
into
out
cmp
outs
pop
(bad)
mov
and
fcom
mov
cmps
das
or
stos
sub
mov
cwde
sub
sbb
push
pop
and
mov
pop
jbe
repnz
xchg
into
and
pusha
adc
scas
pop
outs
ret
scas
mov
adc
test
add
mov
fistp
xchg
pop
loope
out
mov
mov
stos
sub
push
loop
dec
adc
dec
test
loopne
lods
retf
push
mov
movs
iret
lods
jne
sub
call
jns
inc
jp
daa
pop
dec
gs
inc
pop
jb
ficom
sub
(bad)
call
push
test
push
lock
dec
nop
pop
push
shl
cmp
mov
push
and
or
cmp
cli
cwde
mov
and
adc
or
ret
mov
pop
mov
sahf
(bad)
jns
pop
add
pop
stos
adc
dec
les
push
mov
fistp
sti
hlt
xchg
ret
adc
bswap
popf
add
stos
loope
cmp
lea
aaa
jbe
scas
push
ds
les
push
test
fwait
adc
xchg
movs
add
out
inc
sbb
ror
mov
push
add
ret
cs
jnp
popf
or
ja
(bad)
std
sbb
add
mov
mov
push
add
cmp
std
adc
imul
sub
and
xor
div
loop
mov
inc
fldcw
fs
push
inc
ss
test
mov
push
mov
or
xchg
dec
int
pusha
pop
repz
xchg
arpl
xchg
jnp
pop
mov
movs
lods
sub
push
fsubr
cmps
jecxz
daa
test
ss
pop
outs
test
loope
mov
xchg
mov
pmaxsw
mov
es
repz
ret
dec
push
js
dec
out
(bad)
lahf
add
sbb
ret
cdq
in
mov
addr16
adc
out
xchg
or
outs
enter
(bad)
pop
sbb
jns
ins
fmul
ret
inc
ret
inc
ret
lods
mov
push
(bad)
(bad)
mov
ss
aas
sbb
xlat
sbb
es
and
dec
sub
and
or
jl
movs
add
xlat
dec
pop
sahf
pop
(bad)
lock
cmp
push
ret
push
inc
jno
and
jle
dec
retf
sahf
mov
pop
iret
inc
ret
and
shr
adc
lods
fidivr
push
mov
std
jnp
sub
adc
jnp
pop
add
mov
into
sub
xor
push
adc
sbb
push
mov
mov
pusha
sub
jecxz
retf
stos
mov
and
inc
xor
les
and
and
cli
dec
(bad)
sub
cmc
jmp
unpckhps
ret
add
mov
push
pop
rcl
xlat
mov
jb
cmps
stc
cdq
add
dec
sub
shr
fwait
jl
jmp
cs
js
sub
inc
das
add
dec
pop
ror
pop
and
mov
jne
popa
or
fsubr
retf
sub
addr16
inc
adc
sar
inc
dec
out
call
repz
pushf
test
cmp
jno
adc
inc
mov
mov
mov
bndcn
out
pop
leave
add
mov
jmp
inc
shl
xor
adc
ret
mov
mov
push
ret
stc
sbb
lods
and
mov
jb
aaa
int3
inc
jmp
aam
dec
arpl
push
(bad)
xor
pop
mov
mov
dec
mov
shl
pop
sub
adc
add
shl
rcr
retf
push
mov
jo
in
dec
call
mov
mov
pusha
cmp
mov
pop
cmps
lods
movs
mov
push
icebp
sub
test
lock
mov
mov
fisttp
jl
dec
test
daa
xchg
(bad)
sub
xor
add
jae
mov
into
aaa
loop
movs
dec
scas
or
rol
out
fbstp
sub
mov
add
int3
sub
mov
cmp
test
jp
or
inc
cmc
inc
and
mov
bound
adc
sub
mov
das
sub
(bad)
mov
or
sti
xchg
mov
das
inc
movs
fcomp
or
xor
retf
jb
data16
out
pop
aam
std
es
mov
cwde
cmc
jmp
cmp
out
add
in
pop
mov
fsub
retf
dec
xlat
pop
push
aam
xchg
pushf
sahf
ja
dec
out
sub
pop
xchg
in
adc
fistp
outs
mov
or
or
pop
(bad)
cmps
sbb
jnp
enter
out
mov
rcl
sub
xor
mov
test
cmp
pop
sbb
into
xlat
pop
dec
daa
mov
sub
dec
cmp
neg
out
lods
jmpw
mov
and
lea
lods
and
mov
shl
lds
cmp
mov
cmps
jmp
outs
mov
in
push
ds
xor
inc
or
retf
inc
pop
test
lahf
pop
sahf
pushf
mov
fisubr
shl
xor
lods
and
inc
xchg
fstp
rcr
pop
pusha
mov
mov
push
shl
test
scas
inc
mov
cli
stos
push
fidiv
sar
xor
test
popf
adc
aaa
sbb
pop
aam
jae
mov
movs
enter
fidiv
or
test
stos
mov
mov
mov
pop
dec
popf
sub
loope
cwde
cmps
test
sbb
imul
cmp
or
sahf
movs
pop
jns
mov
lock
fbld
call
add
fdiv
jae
push
mov
push
idiv
clc
cld
cmp
and
add
inc
xor
sahf
(bad)
mov
clc
in
xor
push
sub
paddq
imul
sbb
nop
xchg
stos
out
mov
leave
add
aas
cmps
aaa
jnp
sbb
repz
in
test
jne
hlt
retf
jmp
adc
cmc
inc
or
imul
inc
push
fdivp
or
jp
arpl
push
in
ficomp
jnp
shl
pop
push
or
add
aam
ds
aam
pop
push
lea
ret
hlt
or
xchg
cmp
sbb
pop
jae
or
rcl
cmp
mov
sub
lahf
pusha
push
mov
cli
mov
out
imul
cmp
jno
jo
inc
test
test
iret
pop
ds
mov
dec
push
int3
icebp
or
xchg
aas
sbb
mov
sub
das
(bad)
int
clc
popa
jp
test
mov
sbb
adc
(bad)
aas
(bad)
jns
pop
mov
cmps
mov
dec
scas
or
jno
jmp
scas
jo
fcomp
adc
push
fwait
ror
dec
adc
dec
inc
jnp
out
mov
in
jo
mov
js
jmp
xchg
push
jnp
pavgb
shl
or
sbb
and
loop
push
mov
push
mov
cmps
call
xchg
mov
(bad)
xlat
xor
cmp
adc
dec
inc
inc
int3
cmps
ja
push
out
lds
pop
into
popf
mov
ins
das
and
push
mov
adc
push
imul
gs
dec
sbb
push
pop
xchg
fcmovnb
leave
dec
add
jp
mov
mov
popa
jb
push
fwait
lods
mov
push
add
outs
mov
jmp
xchg
scas
in
dec
xchg
add
inc
xor
mov
push
inc
into
inc
test
jle
retf
pop
inc
movs
pop
je
sar
retf
mov
int
int
mov
lea
nop
pop
test
adc
into
(bad)
or
movs
(bad)
xlat
into
jge
lods
mov
ja
mov
(bad)
test
pop
(bad)
sti
push
pop
mov
shl
cdq
push
sti
adc
cld
rcl
inc
xlat
shl
cld
cli
aam
fwait
out
xchg
sbb
outs
push
sbb
mov
ja
(bad)
sbb
adc
xor
ja
rol
push
mov
lea
(bad)
push
push
jmp
scas
clc
dec
in
mov
push
fstp
jp
shl
pushf
push
cdq
retf
xchg
or
xor
ds
dec
lock
int
and
xchg
inc
out
jae
mov
cdq
jb
pop
mov
cli
jecxz
mov
dec
add
sub
pushf
int
jle
mov
pop
push
movs
xor
xchg
and
push
push
movs
aas
repnz
dec
addr16
xchg
jl
sub
push
jmp
push
mov
push
mul
or
cmp
aam
jae
dec
xchg
stos
fisubr
lock
add
aas
inc
icebp
out
in
push
stos
sbb
xchg
pop
iret
xor
and
pop
add
in
lahf
fstp
rcl
cmp
jmp
pop
loop
rol
je
sbb
call
fbstp
xchg
shl
mov
and
repz
mov
xor
push
movsx
fcmove
xor
fmulp
js
mov
int
xchg
inc
mov
mov
sub
cmps
fldcw
cmps
xchg
ins
jo
jle
ins
mov
lods
jnp
enter
add
mov
imul
xchg
scas
call
enter
push
arpl
mov
sbb
test
stos
dec
jb
loop
bound
push
or
jmp
sub
push
dec
cmp
inc
mov
inc
xchg
xor
xchg
pop
cmps
xchg
mov
sahf
xchg
inc
inc
leave
inc
test
cmp
sbb
or
cwde
jmp
pop
dec
mov
inc
rcl
out
pop
pop
jmp
es
inc
stos
cwde
(bad)
mov
test
cld
cmp
mov
and
ins
pop
inc
popf
ss
jmp
mov
movs
mov
ret
jo
xlat
pop
cmc
test
inc
pushf
xlat
push
retf
aad
xchg
inc
iret
std
inc
ins
mov
or
test
mov
hlt
adc
push
dec
pop
push
inc
adc
jns
mov
out
(bad)
or
mov
xchg
iret
add
jne
fsub
and
ins
and
(bad)
or
pop
aaa
icebp
int
sub
jg
lds
in
movs
popa
push
mov
ins
adc
cld
jle
shl
fidivr
jb
sbb
shl
bound
sub
xor
ins
and
in
popa
add
ror
ss
icebp
pop
cmps
sub
rcl
xchg
loope
and
shl
mov
shl
pop
jp
push
cwde
lock
pusha
pushf
jl
int3
dec
push
stos
adc
jne
sahf
pop
push
push
mov
repz
or
ja
jecxz
dec
cmp
ret
pop
fs
pop
inc
jle
add
fmul
xor
push
jp
cdq
aas
iret
(bad)
retf
xchg
les
mov
(bad)
lods
icebp
shl
lock
push
mov
cmp
ret
xlat
pop
ins
rcr
fs
retf
pop
leave
into
jno
cld
(bad)
call
jle
mov
add
scas
lea
cmp
ficom
fst
add
mov
xor
je
aas
mov
xchg
ret
mov
cmp
fisttp
cdq
lock
je
ins
mov
es
aad
xor
cmp
shl
das
jo
add
nop
fstp
imul
sub
push
lods
mov
outs
push
mov
adc
add
inc
push
(bad)
mul
push
add
pop
arpl
sub
add
mov
test
test
cs
mov
aas
je
movs
addr16
into
sar
add
repnz
imul
inc
jge
ds
mov
mov
xor
js
movs
mov
adc
ins
xchg
or
push
cld
fisub
div
outs
and
xchg
sbb
or
mov
cmp
cmc
inc
xor
outs
stc
stos
mov
cwde
cmp
fcom
add
xor
jne
mov
std
dec
cmps
push
push
out
push
mov
call
scas
fist
test
rcr
xchg
movs
mov
fstp
fld
jg
imul
sahf
(bad)
cmp
stos
jb
mov
add
imul
jae
add
dec
daa
xor
das
int
jl
mov
cdq
retf
dec
pop
inc
xor
mov
mov
pop
jle
stos
and
cmp
bound
mov
in
sbb
not
mov
inc
nop
sub
pop
ret
inc
dec
and
push
sbb
dec
cmp
(bad)
xchg
faddp
icebp
test
mov
jle
pop
sbb
in
jo
out
pop
js
mov
mov
sbb
in
jno
mov
mov
jmp
rcl
add
jb
or
lea
sbb
pop
push
mov
xchg
and
add
sbb
pusha
xchg
inc
loop
sbb
mov
loopne
rcl
mov
mov
pop
inc
pop
mov
mov
inc
push
mov
xor
arpl
lock
fld
cmps
es
cmp
adc
bound
inc
add
jmp
es
pop
sub
in
sub
xchg
jg
repnz
add
scas
and
mov
mov
les
ins
nop
daa
jmp
rcr
mov
ror
shl
mov
mov
mov
sbb
mov
pop
sbb
cmp
xor
or
adc
mov
pavgb
imul
jl
cmc
adc
les
in
sub
mov
aaa
shr
in
jb
iret
lds
xchg
push
mov
pop
push
xchg
pop
js
sbb
jg
adc
sbb
lahf
gs
cmps
repnz
jo
popa
test
cmc
push
sti
lods
push
dec
lea
mov
mov
xchg
xchg
repz
dec
add
mov
adc
inc
aas
popf
xchg
mov
das
or
inc
and
test
adc
xchg
push
loopne
gs
mov
repnz
mov
xchg
mov
pop
dec
pop
scas
add
add
lods
mov
push
xchg
xchg
cmp
cmp
mov
pop
lea
mov
addr16
jnp
cmp
icebp
int
add
or
(bad)
out
lahf
cmp
popa
mov
mov
xchg
jbe
or
sbb
mov
mov
inc
lods
ror
js
jbe
cs
push
mov
xor
or
mov
dec
xchg
rcr
rcr
dec
sbb
dec
jge
shl
sbb
jl
out
xor
rol
sub
xor
test
cs
mov
and
pop
xor
cmps
jecxz
in
mov
rol
pop
jne
mov
jbe
push
fisub
pop
ror
cs
(bad)
std
std
sbb
jmp
out
mov
js
adc
cmc
xor
ror
in
das
adc
lods
cli
mov
or
cld
clc
xchg
pusha
lods
pop
aad
push
sbb
ja
retf
pop
fist
sub
pop
(bad)
in
push
jl
(bad)
push
(bad)
stos
mov
cmp
ja
fsub
jge
dec
pop
inc
push
mov
outs
stos
pop
adc
adc
adc
fcmovne
mov
nop
aas
xchg
dec
cmp
xchg
sub
add
repz
or
(bad)
outs
sbb
rcl
repz
inc
mov
je
fs
xor
lods
cmp
mov
dec
iret
mov
call
cmp
repz
sbb
les
cmp
cmp
test
gs
ret
push
loop
mov
mov
fs
cs
mov
(bad)
imul
dec
ins
inc
movs
dec
pusha
outs
(bad)
and
bound
and
pop
mov
in
mov
mov
mov
rol
adc
and
xor
sti
nop
mov
gs
xor
out
mov
add
ficomp
cmp
sub
call
rcl
arpl
(bad)
and
xor
lock
mov
aaa
jle
dec
cli
sub
cli
ds
jmp
push
pop
mov
stos
push
add
adc
sti
push
xor
mov
xor
sub
or
fnsave
mov
mov
mov
call
inc
dec
das
mov
repnz
cmps
enter
pusha
arpl
imul
adc
repnz
cmp
or
repz
dec
out
loop
ret
mov
sub
das
jg
into
inc
and
jo
in
mov
je
mov
sti
and
cli
xchg
mov
jge
mov
out
and
jl
movs
rcr
or
ret
in
jns
and
dec
dec
ds
aaa
mov
xchg
or
inc
or
ret
dec
xchg
(bad)
jmp
shl
cmp
jnp
jb
xchg
dec
inc
adc
mov
std
mov
or
mov
rol
push
and
or
xor
and
push
fadd
mov
add
xchg
outs
adc
leave
mov
jns
ror
inc
clc
cmp
push
mov
sub
mov
cmps
sbb
test
shl
push
mov
xor
mov
push
cmp
shl
or
shl
repz
inc
shl
xchg
pop
scas
sub
scas
pop
sbb
shr
retf
push
cdq
pop
fdivr
mov
(bad)
or
or
mov
ja
bound
fdivr
icebp
idiv
jp
mov
and
repz
adc
mov
call
push
cmps
jecxz
lods
movs
mov
call
dec
mov
cmc
out
cmp
and
xchg
dec
repnz
pop
push
xor
movs
xchg
pop
repnz
xor
mov
fcmovnb
sub
pop
inc
sub
xchg
xchg
mov
xlat
into
jne
aad
arpl
std
fstp
jge
int3
mov
add
or
and
das
mov
imul
add
dec
imul
or
in
adc
iret
mov
adc
sub
pop
sbb
and
mov
push
push
popa
cmc
in
stos
dec
dec
lods
cmp
retf
hlt
dec
sub
xor
je
push
push
mov
cmps
cwde
(bad)
dec
jg
xchg
jmp
push
adc
and
repz
loop
fnsave
add
loopne
fimul
shr
retf
scas
cmp
inc
jecxz
(bad)
mov
test
adc
popa
pop
out
mov
cmps
inc
push
in
mov
sbb
jecxz
cmps
ja
test
xchg
arpl
dec
push
mov
test
mov
dec
repnz
mov
stc
dec
mov
push
mov
cmp
push
xor
mov
dec
mov
push
and
push
add
inc
cwde
iret
in
movs
mov
jbe
adc
cmc
xor
je
add
push
add
push
and
popa
rcr
inc
popa
xchg
ret
jl
in
sub
dec
sbb
jge
arpl
repnz
push
mov
(bad)
shl
arpl
mov
mov
cmp
or
(bad)
xlat
mov
dec
cmps
xor
das
sbb
pop
(bad)
(bad)
fistp
ins
lock
ds
or
div
add
in
or
cs
fs
out
sbb
mov
dec
outs
push
and
cmps
xor
jge
aas
inc
dec
mov
nop
loop
cdq
pop
mov
jno
jbe
iret
in
shr
out
or
push
dec
add
cmc
aad
mov
xor
sub
call
shr
inc
test
popa
aas
(bad)
cmp
ss
lahf
mov
xchg
arpl
daa
pop
dec
push
popf
scas
jae
jb
push
(bad)
mov
movs
pop
dec
lods
mov
sbb
js
gs
and
(bad)
jmp
cli
or
stos
sar
daa
(bad)
das
test
popa
and
ret
(bad)
xchg
cld
jmp
pop
pushf
xchg
push
push
stos
test
jecxz
xchg
jecxz
test
div
sub
pop
cmp
leave
or
outs
repnz
mov
or
lahf
jns
pushf
arpl
mov
xchg
adc
fst
imul
push
or
daa
test
in
ret
and
and
ss
pop
mov
push
iret
loop
sbb
mov
loop
popa
dec
aam
stos
add
addr16
xchg
adc
out
xor
mov
(bad)
pop
mov
stos
and
inc
sbb
adc
inc
adc
int3
push
sbb
fild
sbb
push
sub
and
dec
ja
dec
sub
fdivr
stc
imul
push
rcr
idiv
jge
push
popa
pusha
cmp
das
adc
cli
in
mov
cmovbe
adc
sbb
mov
sub
lahf
not
push
xchg
xchg
xchg
pop
das
mov
mov
repnz
inc
or
mov
dec
or
push
icebp
rcr
adc
xchg
jnp
sub
or
jae
test
dec
push
inc
push
xlat
enter
xchg
pop
or
jae
or
cmp
inc
cmp
(bad)
test
xchg
loope
cmc
jae
fmul
aad
in
xchg
fiadd
(bad)
and
sub
inc
xor
or
scas
or
cmps
sbb
or
push
jns
and
aaa
pusha
jb
(bad)
js
cmps
mul
pusha
and
jo
paddq
mov
test
mov
loope
push
mov
repnz
dec
bound
pop
stos
cmps
mov
xlat
fbstp
inc
pop
sbb
fldcw
(bad)
pop
std
hlt
push
jl
stc
add
or
dec
ins
test
adc
mov
sub
mov
int
adc
cmp
push
mov
pop
cdq
movs
test
dec
push
stos
ret
mov
out
jge
enter
cmp
dec
push
xlat
jno
jge
out
jbe
pushf
xchg
rcr
cli
repnz
js
in
add
jb
mul
mov
into
js
jge
xchg
xchg
outs
stos
ins
mov
pushf
adc
xchg
cmp
fxch
or
xchg
(bad)
inc
mov
push
jo
repz
addr16
test
movs
xlat
mov
mov
stos
cmp
js
jg
lock
cmps
ret
push
jne
aam
or
dec
cmp
push
dec
sub
xor
out
xchg
div
sar
lods
fcmovnb
out
pop
test
fwait
enter
dec
sar
lea
sti
lods
mov
fiadd
or
and
and
dec
(bad)
jmp
inc
shl
not
jmp
push
leave
dec
cmp
xor
mov
pop
(bad)
mov
out
ins
fadd
popf
jge
addr16
mov
out
pop
and
aaa
aaa
jl
enter
ja
shl
mov
mov
sub
or
and
sar
dec
jg
ss
pop
jg
cmp
dec
push
loope
dec
jecxz
fsubr
xor
ret
xchg
scas
push
cmp
push
inc
inc
ret
xchg
inc
mov
cmps
call
pop
add
enter
sub
les
shr
js
pop
fcomp
push
cmc
and
es
xor
pop
iret
inc
test
rol
push
add
sub
adc
and
ja
mov
add
inc
cld
stos
or
fadd
repz
pop
push
inc
das
add
call
jb
add
sub
sub
dec
mov
and
fs
fiadd
dec
mov
adc
add
jp
pop
inc
add
imul
test
dec
add
fcomip
or
mov
jnp
ins
dec
rol
xor
xor
cmp
push
xlat
repz
adc
push
leave
jecxz
pusha
add
mov
mov
dec
call
repnz
dec
cdq
rol
mov
test
cmc
or
fdiv
inc
out
xor
stos
retf
jmp
cli
(bad)
adc
jecxz
cmp
daa
pop
cmps
aas
mov
xor
nop
out
xchg
dec
pop
mov
sub
cld
or
mov
outs
cld
test
mov
dec
sub
mov
push
sbb
xor
jl
add
add
in
gs
dec
aaa
sbb
adc
cs
aam
(bad)
mov
lock
call
out
cs
fsub
push
sti
push
adc
popa
enter
bound
mov
mov
icebp
mov
(bad)
lea
clc
call
sub
dec
fstp
adc
dec
scas
add
mov
add
push
(bad)
mov
jecxz
adc
add
jo
push
add
cmp
cmp
cmp
push
sub
out
pop
push
test
jae
or
push
mov
test
sub
fisttp
or
jg
add
fidivr
loop
cmp
pop
sub
push
sbb
pop
out
inc
ret
(bad)
cmps
inc
aaa
jb
hlt
cmp
icebp
mov
test
pushf
cmp
add
add
(bad)
fadd
adc
(bad)
jmp
test
sub
jp
mov
cli
dec
fistp
jb
cli
pop
sti
jno
dec
adc
lds
icebp
test
mov
outs
sub
shl
test
jns
mov
ja
test
fadd
mov
test
xchg
jecxz
(bad)
in
sub
int3
outs
mov
mov
repz
shl
aad
mov
loope
shl
fincstp
xor
push
or
or
jl
jne
adc
arpl
sbb
and
mov
dec
clc
sub
sbb
in
mov
or
xor
fmul
adc
inc
xchg
sub
add
(bad)
ds
fucomp
or
jnp
pop
pop
ror
gs
mov
sbb
pusha
ror
pop
dec
mov
push
push
mov
jb
cmc
pop
movs
or
push
mov
dec
aad
xchg
bound
jo
fnstenv
push
push
xchg
mov
fcomp
call
mov
mov
mov
data16
jbe
inc
aad
cli
mov
ret
pop
mov
adc
or
mov
fidiv
lea
xor
pop
xchg
fnstsw
mov
inc
popa
pop
or
mov
cmp
icebp
test
out
xchg
ret
daa
adc
sbb
outs
mov
cmps
lahf
test
adc
inc
sbb
ja
mov
cmp
mov
rcr
push
stc
emms
cli
jno
stc
push
jns
mov
and
es
data16
jg
dec
xchg
retf
dec
add
(bad)
rol
in
sub
dec
(bad)
std
lahf
cld
outs
(bad)
xchg
mov
jbe
add
ret
jo
fwait
or
push
inc
mov
loopne
xor
add
push
push
mov
mov
push
jns
mov
inc
call
pusha
ret
out
pop
ins
outs
mov
pop
cdq
leave
dec
shr
pop
mov
mov
repnz
aaa
inc
fnsave
xchg
out
aad
in
add
sub
mov
call
outs
lods
pop
mov
fstp
push
in
retf
push
repz
icebp
jns
xchg
ja
xchg
arpl
int3
sbb
add
call
data16
mov
inc
aam
inc
aad
jnp
fcmovu
int
xchg
adc
xor
xchg
div
lds
lds
inc
sar
add
sub
pushf
nop
inc
hlt
adc
cmp
sbb
sbb
adc
int3
clc
jns
rep
stos
rcr
test
rol
xor
jmp
movs
or
(bad)
cld
push
outs
cdq
rol
sub
popf
scas
push
mov
xor
mov
jmp
test
xchg
xlat
jb
outs
neg
cs
leave
inc
push
sub
mov
mov
cmp
loope
inc
adc
xchg
(bad)
aas
sub
movs
je
cmps
jmp
add
bound
adc
xor
cld
push
aad
pop
and
shl
xchg
std
(bad)
out
sbb
arpl
out
adc
bound
jp
dec
mov
jbe
ficom
push
or
xchg
sbb
cmp
lods
aas
push
popa
test
xchg
call
pop
inc
sub
fild
and
gs
out
repnz
je
pop
repnz
mov
add
mov
or
pushf
sub
inc
mov
mov
outs
stos
dec
sub
xchg
popw
mov
jg
(bad)
sbb
cmc
jge
call
fucomi
xor
arpl
rcr
stos
mov
push
sub
xchg
(bad)
test
mov
adc
std
push
sbb
(bad)
das
cmps
nop
mov
ja
xor
add
add
in
sub
outs
sti
lahf
jo
test
test
or
push
icebp
inc
sub
jo
ja
or
dec
add
(bad)
bound
xchg
mov
push
adc
fst
cmp
mov
aaa
pushf
xor
sbb
inc
or
adc
xchg
push
xchg
inc
or
fldenv
in
adc
ror
or
push
(bad)
pop
or
lea
adc
mov
pop
aam
aas
pop
ins
pushf
cmp
xchg
push
arpl
mov
jb
sub
pushf
jns
call
xchg
mov
inc
outs
inc
scas
cmp
mov
pop
(bad)
fdivr
xchg
push
and
push
mov
pop
call
dec
jp
rcl
mov
jge
gs
jo
mov
jp
in
loopne
out
adc
fisubr
and
std
add
shr
mov
inc
push
popf
ror
jg
ret
fwait
ret
inc
xor
sub
inc
ret
call
shr
push
cmp
ja
mov
or
xor
push
or
lods
mov
in
jo
adc
mov
cmc
jmp
test
pop
dec
mov
les
nop
lods
adc
jne
stos
fimul
and
pop
icebp
push
stc
mov
xor
test
xchg
sar
in
mov
add
lods
outs
xor
movs
aas
cdq
jmp
jmp
cmc
mov
inc
pusha
call
std
dec
rcl
int3
dec
iret
push
add
repnz
pop
or
scas
imul
cmp
pop
push
mov
dec
stos
stos
xlat
xor
push
or
pop
int3
jmp
jl
enter
pushf
les
sbb
and
popf
jecxz
xchg
mov
mov
ss
add
(bad)
xor
nop
adc
pop
outs
pop
xchg
mov
sub
lods
mov
xor
inc
cmp
or
ficomp
out
enter
add
jl
popa
adc
std
sbb
retf
popa
push
mov
fxch
sbb
jb
push
mov
sub
movs
pop
adc
fcmovb
adc
xchg
stos
cwde
lock
fadd
push
arpl
jg
sbb
mov
int3
scas
call
xchg
cmp
out
ror
sbb
in
pop
addr16
dec
popf
movs
mov
add
movs
data16
push
jno
mov
scas
dec
test
lea
rcr
xchg
jne
add
call
out
adc
jp
xchg
adc
imul
or
cmp
stos
stc
ins
sub
sbb
cld
sbb
xor
movs
jge
dec
into
xchg
imul
lods
scas
test
inc
rol
int
cmp
mov
(bad)
rcl
mov
jge
call
jg
or
inc
(bad)
sahf
dec
pop
add
inc
mov
jmp
xor
bound
and
mov
xchg
xchg
mov
sub
call
enter
std
fcmove
jmp
jg
loope
out
rol
sti
inc
mov
sub
or
push
add
and
out
adc
cs
sub
ja
hlt
xor
mov
pop
bound
call
outs
pop
lods
scas
and
push
jae
mov
(bad)
mov
shl
adc
dec
loopne
sub
div
rcr
aad
pop
imul
xchg
aaa
mov
push
mov
push
int
adc
das
push
out
and
pop
mov
repz
imul
pop
cmp
or
push
inc
ficom
xor
cdq
xchg
lods
loope
jnp
shl
(bad)
test
(bad)
test
push
cld
jge
scas
sub
call
and
add
and
adc
gs
mov
cmp
mov
inc
mov
(bad)
cmps
mov
mov
pop
jno
jmp
imul
hlt
and
sub
xor
pop
push
sbb
fwait
das
pop
mov
mov
cs
(bad)
dec
ds
mov
mov
int
shr
xchg
retf
inc
dec
and
inc
mov
cmp
enter
add
jp
mov
(bad)
(bad)
xlat
xchg
shl
xchg
sahf
fisttp
adc
call
fstp
mov
lods
(bad)
push
pop
pusha
inc
xchg
ss
jne
out
imul
sub
add
adc
rcr
stos
scas
fisttp
ret
pop
ins
lahf
jp
cmp
jb
lea
in
cmp
xchg
mov
sub
push
dec
out
fwait
push
test
add
mov
dec
int
cmps
inc
cmp
cmps
fnsave
retf
out
cmp
add
popa
(bad)
xchg
iret
je
(bad)
pusha
adc
cdq
icebp
or
dec
or
push
dec
(bad)
push
loopne
btr
dec
mov
pop
(bad)
jle
cmc
outs
pusha
add
mov
or
push
add
sub
push
frstor
loopne
pop
jae
das
dec
retf
jo
adc
ss
inc
jmp
or
xor
leave
xchg
mov
or
push
cs
fstp
push
loope
fs
sbb
push
(bad)
jle
fdiv
sbb
stos
cdq
(bad)
add
imul
mov
pusha
cmp
sti
sub
mov
dec
pop
adc
stos
movs
adc
cmp
stc
push
cli
jle
retf
or
cmp
xchg
push
test
push
cmp
ror
fcmovb
out
test
mov
stos
(bad)
lods
jmp
test
cld
test
jp
pop
or
mov
data16
cmp
les
imul
je
mov
adc
mov
out
call
mov
fs
sub
add
pusha
aam
sbb
fmul
mov
cdq
xchg
popf
idiv
adc
pop
sbb
in
push
mov
xlat
add
aas
test
mov
dec
or
aaa
mov
sub
jno
and
repz
add
fwait
push
stc
add
fidiv
ret
stc
sbb
push
pop
aas
sub
retf
xchg
xchg
(bad)
mov
ds
sahf
out
push
sbb
jge
xor
or
xchg
and
or
push
xor
jecxz
pop
leave
mov
sub
in
push
jo
mov
and
cld
jno
in
ret
lea
jl
jbe
cmp
into
lea
mov
xchg
(bad)
cmps
xor
pop
lods
cmp
xor
cmp
movs
scas
pop
jbe
rcl
cmp
out
push
push
push
cmp
inc
mov
adc
cmp
ss
xchg
bound
je
adc
fwait
sbb
and
push
xchg
lea
imul
popf
es
xor
mov
cmp
in
das
(bad)
pop
fidiv
loop
cmps
push
xchg
xchg
jo
call
mov
mov
sahf
xchg
xchg
mov
sbb
popw
movs
dec
sub
mov
mov
jge
jmp
mov
scas
xlat
cmp
popa
popf
push
inc
jmp
(bad)
pop
xchg
outs
dec
sbb
stos
test
(bad)
outs
das
pop
aam
mov
pop
mov
out
pushf
cmc
dec
add
int3
call
jbe
shr
lods
mov
sub
pop
sbb
aas
add
cmp
pop
test
(bad)
add
cmps
rol
aas
sti
mov
mov
pop
mov
es
sub
in
out
add
mov
push
push
es
ss
int
push
sahf
jae
mov
lock
add
fldcw
int3
xor
(bad)
nop
pop
mov
xlat
sbb
in
sbb
inc
sbb
ins
adc
aaa
mov
aam
out
lods
add
std
mov
or
xchg
fadd
test
(bad)
pusha
xor
fmul
mov
mov
cmc
inc
inc
ret
jge
push
sbb
fld
retf
push
addr16
mov
(bad)
icebp
ins
sub
rcr
push
(bad)
cmp
dec
shl
lods
sbb
shl
(bad)
pop
arpl
pop
nop
push
xchg
mov
xchg
shl
push
sti
dec
xchg
inc
jo
adc
in
enter
mov
inc
xor
pushf
loope
neg
icebp
pop
mov
xchg
mov
call
sub
(bad)
fs
jns
xor
jnp
test
xor
xor
xchg
out
mov
jl
push
addr16
mov
rol
and
mov
inc
pop
nop
dec
or
sub
sbb
repnz
xchg
scas
(bad)
call
mov
xor
or
cmp
and
and
out
icebp
xchg
lahf
scas
mov
ins
and
mov
nop
in
mov
cmc
jg
or
mov
test
loop
call
xor
push
retf
mov
sub
pop
push
pop
push
pop
mov
pop
test
dec
scas
jbe
dec
repz
ins
xor
push
inc
cmp
xchg
std
xlat
cdq
mov
rcr
push
inc
es
jp
bnd
enter
fmul
(bad)
iret
jbe
rcl
pop
retf
adc
push
imul
pop
push
divps
fnstcw
(bad)
jmp
add
fidivr
jo
cmp
pop
pusha
addr16
iret
es
add
cmp
sub
sti
out
mov
retf
aas
sub
mov
mov
movs
outs
sub
fs
sahf
fcmovnb
mov
ja
jne
nop
mov
push
pop
sub
fldenv
xchg
fimul
mov
clc
shl
scas
adc
repz
sbb
push
mov
mov
(bad)
repnz
fstp
in
cs
ffree
fdivr
push
inc
mov
fucomip
fdiv
lods
jge
mov
pop
or
out
sbb
inc
call
hlt
(bad)
into
ins
cmp
jp
and
pusha
or
adc
push
cmp
leave
dec
ret
xchg
out
in
push
and
xchg
ja
nop
not
call
mov
and
scas
dec
inc
fild
and
xchg
into
mov
xchg
(bad)
or
inc
aad
cld
popf
dec
lods
jns
dec
leave
outs
(bad)
sub
add
xlat
mov
or
jmp
je
xor
fcomp
sar
lods
cmp
or
jne
daa
xor
ja
adc
pop
cmps
jle
(bad)
mov
in
enter
out
mov
pop
or
mov
mov
retf
push
popa
lods
(bad)
(bad)
xchg
cmp
rcl
pop
jg
stos
loope
aas
mov
sub
push
dec
ja
retf
adc
mov
xor
jae
movs
jmp
xchg
aam
dec
add
jb
(bad)
(bad)
jns
mov
xchg
mov
push
bound
lea
fwait
and
lahf
inc
leave
pusha
je
retf
dec
xlat
aad
mov
jb
sbb
sbb
xlat
js
stos
mov
retf
movs
shl
inc
icebp
in
jmp
jge
jge
add
sti
jae
ret
mov
stc
cmp
pusha
nop
stos
jl
pop
jns
adc
(bad)
sub
fcomp
out
sbb
inc
adc
pop
je
mov
clc
lea
mov
mov
push
fadd
xchg
push
out
pop
inc
test
in
add
in
xor
test
add
daa
sub
push
dec
lods
mov
jge
xor
adc
into
pop
jnp
std
xchg
imul
xchg
fld
push
mov
test
adc
mov
push
icebp
push
icebp
mov
add
(bad)
inc
xchg
imul
aaa
in
xchg
mov
dec
mov
cli
xlat
mov
sub
push
jbe
or
pop
cdq
mov
fcom
iret
xchg
ja
mov
add
lods
adc
add
jecxz
dec
mov
shr
test
stos
ret
movs
cmp
xchg
rcl
std
clc
enter
(bad)
rol
shr
ret
mov
xchg
repz
ja
jo
stc
pop
ror
dec
mov
(bad)
jmp
rol
(bad)
(bad)
mov
xor
fdivrp
outs
mov
das
mov
pop
sbb
ja
sti
sbb
ja
pusha
xor
repnz
cmp
data16
sub
or
push
add
xor
xchg
and
lods
test
mov
stc
jmp
pushf
xchg
aaa
pushf
out
and
lods
adc
ficom
test
les
add
adc
rcl
enter
sbb
dec
xor
mov
push
mov
ss
out
push
and
xor
lea
sar
sbb
cmp
test
jbe
clc
adc
fwait
leave
aad
jb
arpl
int3
sar
es
aaa
sbb
(bad)
inc
push
(bad)
adc
sbb
es
add
fidiv
in
xor
mov
inc
fs
push
or
jecxz
leave
in
pushf
and
test
or
and
sub
add
push
out
push
test
xor
cmp
cdq
jp
movs
mov
sub
pusha
test
outs
mov
jne
out
adc
mov
pop
repz
push
or
cmc
outs
and
pop
cli
scas
xchg
les
fist
sub
js
es
cmps
data16
(bad)
push
rol
jl
jge
(bad)
xchg
addr16
retf
(bad)
mov
ja
cmps
(bad)
psllw
jne
adc
rcr
shr
xor
es
add
mov
stos
or
mov
repz
and
pop
and
push
jle
pop
ja
in
pop
xlat
shl
not
nop
ret
jge
imul
bound
pusha
jno
popa
push
(bad)
mov
scas
nop
js
fcomp
adc
adc
or
into
mov
inc
inc
pop
adc
push
cli
mov
mov
clc
stos
cmp
xor
cmp
cli
clc
cmp
mov
clc
push
xchg
push
add
shl
push
fisttp
pushf
stos
shr
ror
xlat
js
loope
add
(bad)
jo
addr16
(bad)
jnp
sub
dec
mov
outs
or
sbb
fsub
cld
shr
in
adc
mov
loope
sahf
int
iret
popa
push
and
hlt
popf
xor
jecxz
and
or
inc
and
out
xchg
mov
out
adc
inc
sub
add
retf
adc
mov
xor
ss
daa
rcl
aaa
xor
(bad)
test
popf
inc
test
xlat
push
xor
xor
pushf
inc
cmps
test
cmp
adc
fwait
sar
pusha
cli
jmp
pop
sub
out
mov
cmc
fcomp
cwde
pop
xor
icebp
push
stos
sub
(bad)
jae
mov
pop
or
ror
stc
out
hlt
pop
mov
mov
nop
push
add
push
ror
rcl
push
sbb
mov
push
pop
xchg
jnp
pop
mov
jmp
jmp
mov
in
loope
xor
adc
es
add
cs
pop
push
jb
mov
iret
mov
sahf
xor
mul
pop
push
cmp
dec
rep
adc
idiv
inc
sbb
push
inc
int
inc
mov
scas
xchg
loope
ds
cmp
pop
pusha
(bad)
jmp
jmp
pop
mov
mov
movs
adc
and
aas
or
out
in
sub
push
push
clc
mov
jns
(bad)
push
fld
in
dec
mov
jmp
jnp
fcmovu
inc
push
push
mov
xchg
sub
retf
adc
dec
pop
scas
cmp
xchg
push
jne
sub
jno
dec
pop
dec
cld
cmp
adc
push
lods
cmc
ds
fnstcw
and
inc
or
(bad)
lock
pop
(bad)
repnz
movs
int3
push
retf
xchg
mov
or
ds
pop
mov
mov
les
dec
into
int3
sbb
movs
sub
pop
movs
or
fdiv
in
xchg
ja
pop
mov
lds
lods
dec
sbb
leave
mov
ret
frstor
jae
arpl
push
xchg
repnz
xlat
ja
xor
push
lds
or
lea
(bad)
jae
and
and
outs
jge
lds
pushf
stos
mov
pop
push
fwait
daa
fimul
inc
mov
xor
sbb
test
sbb
push
dec
(bad)
lock
sub
sbb
xchg
push
push
out
jge
lea
pop
jmp
fisttp
aaa
(bad)
and
pop
inc
adc
jl
test
mov
mov
movs
cdq
mov
push
retf
jno
xor
pushf
scas
(bad)
xlat
std
(bad)
and
add
xor
aam
adc
cwde
jmp
inc
imul
pop
add
int3
sub
adc
test
dec
js
cld
pop
aad
adc
lods
je
fdivr
fdivr
jle
mov
clc
sub
xor
cli
sub
add
jb
adc
(bad)
jnp
mov
sti
int
inc
or
js
rcl
aas
loop
push
cs
and
inc
push
fwait
xlat
call
pop
mov
or
mov
mov
call
add
int
in
push
ficomp
mov
mov
cmps
push
ja
cmp
add
jge
mov
xor
inc
enter
xchg
movs
loopne
push
gs
adc
and
rol
push
fnsave
add
not
retf
dec
cmp
add
imul
or
shl
jne
mov
dec
dec
sub
sub
cmp
and
fidiv
xor
mov
dec
dec
fld
mov
pop
xor
sbb
adc
sahf
jecxz
cmps
mov
dec
cmp
inc
aam
and
fldenv
sub
repnz
mov
scas
std
mov
sbb
mov
mov
jp
jg
scas
sahf
push
ja
cmp
push
loop
or
fsub
imul
addr16
(bad)
je
ja
and
add
sti
mov
push
push
dec
stos
push
fldlg2
jne
rol
imul
xor
or
cmp
mov
xchg
mov
ror
xchg
in
outs
fwait
add
fsub
shr
out
jnp
loop
mov
push
(bad)
test
adc
ins
xor
daa
jle
pop
test
inc
fistp
adc
mov
push
sub
fimul
popa
pop
fmul
les
dec
(bad)
(bad)
pop
(bad)
mov
xchg
xchg
mov
pop
sbb
call
aam
imul
movs
enter
push
bound
mov
jle
jge
pop
pop
xor
jp
paddusb
cmc
inc
jecxz
add
pusha
mov
mov
add
je
in
fcom
push
ret
call
add
pop
movs
inc
cmps
mov
inc
push
arpl
mov
repz
loopne
jg
lahf
xchg
hlt
push
dec
ja
imul
cmp
xchg
or
stos
imul
lds
mov
xor
imul
js
gs
cwde
push
scas
adc
cmp
repnz
mov
outs
ret
or
pop
cmps
or
and
inc
and
repnz
adc
jl
sub
pop
xchg
sbb
xor
cs
jmp
inc
pop
mov
mov
push
mov
push
(bad)
out
cmps
sub
shr
fld
or
and
fldenv
add
cmps
adc
mov
xchg
mov
lsl
mov
dec
push
or
call
loopne
dec
inc
xlat
ja
ret
retf
dec
aad
imul
mov
sti
mov
push
scas
inc
inc
fwait
sbb
lea
rol
sahf
push
test
ss
pop
and
dec
leave
clc
inc
xchg
sbb
loop
inc
cmp
adc
mov
je
add
mov
adc
cs
inc
mov
jecxz
lods
mov
dec
in
xchg
inc
repnz
inc
xlat
push
inc
push
(bad)
inc
xor
mov
mov
mov
es
in
ret
adc
jl
loope
jns
aam
test
fsubr
(bad)
mov
into
push
add
gs
mov
or
dec
ret
or
dec
pop
pop
call
cmp
jp
mov
mov
jmp
es
sub
push
mov
mov
ins
and
or
jno
sub
inc
jl
shl
xchg
mov
add
xchg
push
outs
int3
mov
push
sbb
or
arpl
mov
mov
pop
adc
push
(bad)
repnz
or
xor
sbb
mov
int3
retf
enter
movs
or
out
pop
jo
push
xchg
and
out
cmp
call
xchg
xchg
xchg
rcl
mov
out
sahf
cld
or
fisub
push
mov
outs
mov
test
fsubrp
mov
cld
dec
and
sahf
mov
shl
cmc
push
repz
cdq
lods
scas
jo
aam
lock
mov
iret
(bad)
je
jne
push
sahf
xor
call
jmp
sbb
mov
stc
imul
xchg
mov
jo
mov
sbb
sbb
loope
std
push
and
inc
pop
in
mov
lock
jb
sub
jb
xchg
and
mov
ret
jmp
aaa
pushf
ja
xchg
in
or
scas
mov
cwde
push
je
add
call
test
es
fidiv
xchg
cs
mov
popf
lods
mov
adc
xchg
inc
add
add
ffree
cmps
call
jecxz
aam
imul
imul
je
xor
sub
or
or
dec
mov
fld
clc
dec
imul
in
xchg
ds
xchg
adc
hlt
ror
cli
and
mov
mov
pop
stos
loopne
ja
lods
cdq
and
in
in
stos
jge
in
mov
sbb
xor
cld
and
sbb
xchg
adc
inc
test
nop
xchg
(bad)
push
aam
lods
sbb
ror
add
dec
mov
dec
inc
xchg
(bad)
cmp
call
lock
shl
push
ins
clc
shl
fisubr
call
jo
imul
cmp
jo
adc
pop
clc
test
inc
cmp
or
inc
xor
jecxz
or
cmp
sbb
ror
add
les
push
arpl
xor
je
and
movs
in
ins
add
fmul
dec
hlt
jns
mov
fcmovbe
xchg
rcr
clc
inc
push
ins
jle
adc
xor
cs
cmps
lahf
mov
sbb
sbb
dec
fdivr
xchg
xlat
ss
xor
cmc
cld
ror
ins
test
cmps
rcr
je
and
fidiv
out
pop
dec
shr
or
sub
(bad)
aad
ret
movs
adc
adc
dec
jle
xchg
cmps
and
rcl
bound
sub
or
cmp
mul
cld
ret
es
int3
scas
or
outs
pusha
aaa
mov
adc
nop
adc
or
js
movs
xchg
cwde
nop
or
mov
pop
test
test
inc
or
test
fcmove
add
sbb
mov
dec
test
xor
dec
sub
lods
add
or
xchg
jo
nop
stos
cmc
cwde
fimul
(bad)
ror
cwde
inc
repnz
aad
mov
nop
sbb
inc
pusha
jp
in
mov
jo
dec
fwait
add
push
rcr
rcl
jo
imul
inc
sbb
push
mov
and
imul
mov
mov
clc
frstor
movs
nop
loop
popa
(bad)
in
cmp
adc
push
push
push
add
into
retf
sbb
jae
fstp
popf
mov
or
push
xlat
int3
js
xor
push
or
sbb
jmp
pop
enter
daa
cmps
jno
mov
neg
sub
ins
sbb
pop
or
movs
inc
inc
xchg
adc
xor
jg
ds
and
dec
outs
icebp
mov
dec
mov
xchg
in
mov
dec
mov
das
push
fs
pop
xchg
clc
jl
push
pop
sbb
lea
stos
inc
jl
xor
into
xchg
(bad)
xchg
or
mov
mov
(bad)
cmp
sbb
mov
push
mov
xor
pop
mov
aam
(bad)
(bad)
mov
and
push
loope
daa
sbb
repnz
pop
adc
xchg
pop
xor
shl
retf
cwde
add
pop
pop
retf
push
adc
pop
jb
jo
movs
jae
sub
push
and
lahf
adc
add
arpl
into
xor
mov
xchg
test
pop
outs
cmc
jmp
pop
inc
jo
icebp
loop
lods
aad
jb
add
inc
(bad)
push
dec
and
mov
sub
or
stc
pop
(bad)
shl
add
adc
test
xor
(bad)
fnsave
inc
js
pop
jg
dec
xor
mov
mov
scas
xchg
idiv
adc
add
arpl
test
pop
cmp
push
gs
mov
bound
xor
jge
push
mov
out
sahf
xchg
xchg
push
fisub
adc
pop
mov
adc
(bad)
std
hlt
les
mov
xchg
test
inc
inc
sub
xchg
dec
inc
fstp
jmp
jno
cwde
inc
test
outs
gs
cmp
mov
pop
xor
jbe
or
jbe
dec
(bad)
fmul
adc
ror
push
stc
pop
fild
fsubr
sub
mov
(bad)
cli
xor
in
sub
out
movs
jnp
(bad)
cmp
pop
dec
lea
and
in
jecxz
xor
addr16
add
add
add
cmp
dec
push
jnp
jg
add
mov
mov
xchg
and
je
lahf
jmp
mov
popf
outs
fwait
xor
inc
idiv
cmps
fwait
jne
and
cmps
xchg
sti
push
leave
popa
adc
jmp
scas
movs
push
fmul
mov
xchg
es
or
dec
retf
fsubr
stos
or
mov
jmp
(bad)
pop
xchg
imul
fwait
mov
cmp
sbb
fucomp
(bad)
mov
cmp
adc
sub
xor
pop
sbb
fdivr
or
add
push
cli
push
dec
fcom
fidiv
std
xchg
mov
jns
dec
cmp
xlat
shr
int3
push
push
ins
popa
and
aaa
add
xor
cmp
lds
dec
(bad)
rol
loope
inc
test
jns
out
imul
sub
lds
hlt
xchg
fst
fnstcw
cmp
in
or
pop
jae
mov
mov
in
add
mov
cmp
lea
in
or
pop
jne
test
rcr
call
mov
ret
sbb
fnstcw
or
mov
movs
push
jae
cmps
mov
aam
call
inc
ret
jnp
(bad)
ficom
call
cmp
ins
loope
pop
(bad)
inc
shl
dec
scas
pop
dec
leave
dec
mov
push
das
lahf
out
inc
sbb
rol
lock
or
int
repnz
add
imul
jnp
outs
div
mov
out
and
sub
push
jmp
not
xor
or
xchg
pop
mov
pop
adc
cdq
dec
push
sub
into
mov
inc
sbb
jns
mov
out
dec
jb
aaa
pushf
inc
pop
xor
dec
repz
pop
ror
pop
jo
mov
dec
hlt
add
inc
xor
ins
popa
mov
scas
dec
sub
sub
inc
adc
stos
or
addr16
movs
xor
sub
xchg
nop
push
xor
jmp
mov
mov
dec
fsub
adc
aad
dec
jmp
and
aas
push
in
inc
je
mov
icebp
cmp
jae
shl
dec
inc
ror
std
sbb
popa
aas
cmp
adc
out
push
sbb
push
or
push
js
push
inc
mov
xor
ficom
fcomp
fist
mov
out
cwde
sub
pop
add
test
cwde
add
int3
call
mov
mov
and
inc
ins
mov
add
shl
mov
loop
jo
jl
push
jge
mov
adc
mov
mov
pusha
dec
dec
jmp
and
mov
ins
dec
inc
out
ret
mov
movs
jmp
pop
jge
int
mov
loope
xor
inc
fdiv
enter
xchg
cld
leave
out
cmp
mov
sti
clc
fdiv
and
push
adc
add
das
jmp
xchg
cmp
xor
shl
push
stos
enter
in
call
inc
(bad)
mul
fst
add
test
add
mov
dec
sub
xchg
mov
jp
aaa
sbb
ror
inc
out
and
cmp
int3
add
(bad)
loope
inc
dec
push
inc
out
dec
and
dec
push
cmps
sbb
jae
and
retf
or
mov
lods
xchg
pushf
shl
cwde
imul
and
cmp
pop
movs
adc
ss
jge
ds
add
jae
or
jmp
mov
xor
push
mov
add
add
not
sub
(bad)
sar
pop
arpl
inc
test
loope
cmps
repz
faddp
nop
fisub
test
popa
mov
(bad)
mov
adc
xchg
push
push
push
dec
pop
jae
in
and
fist
mov
add
pop
popa
aaa
stos
pop
inc
shl
ins
pushf
jp
dec
add
fistp
lea
xchg
or
xor
jnp
iret
xor
mov
push
sbb
and
pop
repnz
jmp
ror
cli
jmp
test
xchg
cdq
pop
aam
ja
xchg
mov
push
lods
add
js
test
jmp
jp
lock
add
inc
xor
mov
lock
or
pop
xchg
or
gs
cmp
and
adc
addr16
xlat
sub
out
pushf
stos
jge
adc
cmp
fmul
xor
mov
jmp
shl
pop
sub
icebp
dec
fadd
call
bnd
push
or
fwait
enter
and
dec
test
out
ja
mov
xlat
lds
nop
les
mov
sub
mov
fmul
and
push
cli
sbb
mov
loopne
push
jle
adc
or
mov
nop
jmp
jb
repnz
or
xchg
dec
xlat
push
enter
sub
inc
xor
lock
call
stos
mov
inc
adc
pop
and
cmp
cmps
retf
adc
pop
push
add
in
es
call
mov
pop
hlt
push
dec
loopne
call
inc
sti
cmp
clc
jmp
sbb
loopne
xchg
add
mov
call
in
sbb
(bad)
cmps
mov
in
or
sahf
or
adc
mov
test
sub
or
jo
(bad)
push
(bad)
not
xchg
leave
sub
(bad)
and
pop
adc
pop
cmps
adc
cdq
enter
daa
cmc
mov
mov
nop
sbb
into
dec
mov
(bad)
cwde
add
dec
scas
pop
mov
pop
pushf
imul
(bad)
xchg
adc
bound
push
cmc
inc
inc
mov
scas
(bad)
stos
or
mov
aaa
adc
cdq
add
cmp
sahf
cwde
sbb
outs
xchg
inc
test
call
aam
fimul
outs
inc
mov
test
inc
push
mov
lea
sbb
in
(bad)
lock
std
xchg
mov
mov
and
push
add
or
in
or
stos
sti
outs
into
inc
and
bound
ror
jle
imul
loopne
int
jmp
mov
ror
push
imul
(bad)
mov
pushf
(bad)
pop
xchg
mov
or
lea
cmp
adc
es
push
(bad)
es
jo
jae
imul
gs
(bad)
lahf
push
ss
dec
mov
cmp
mov
sbb
adc
scas
inc
aas
ins
inc
add
add
xchg
test
outs
out
cmc
bound
imul
inc
ret
sti
xchg
push
js
pop
les
pop
rcl
call
leave
mov
xchg
test
leave
fstp
xchg
mov
shl
mov
jnp
push
sub
mov
cmp
jb
nop
aas
jns
xor
in
sbb
iret
test
test
cmps
cmp
ins
test
or
dec
inc
in
mov
sbb
dec
xchg
aad
gs
mov
mov
jne
ins
jmp
xor
mov
push
adc
cld
xlat
xchg
push
mov
mov
mov
or
shl
sbb
movs
lods
pop
add
cwde
mov
pop
mov
in
push
sub
add
mov
push
(bad)
es
pop
push
mov
push
mov
repz
in
mov
in
sbb
pop
push
stos
loopne
shl
test
les
xchg
sbb
mul
and
push
icebp
push
ins
push
cmp
cmp
sbb
test
dec
sbb
and
retf
add
or
rep
dec
jno
cmp
in
mov
out
add
out
cs
add
or
(bad)
std
scas
lods
retf
scas
fldenv
and
les
(bad)
test
adc
xor
mov
shl
ins
jnp
ins
mov
mov
fst
cli
mov
frstor
push
sbb
cmp
inc
repz
daa
loopne
loop
cmc
adc
imul
xor
push
lea
jns
in
les
or
popf
push
movs
cwde
cmps
lock
add
int3
push
loop
cwde
ins
dec
pop
add
xor
je
jnp
push
dec
std
mov
pop
sub
leave
jge
or
sub
test
(bad)
jns
leave
loopne
nop
pop
shl
xor
aas
mov
add
sbb
jge
outs
push
fdivr
jne
add
add
jle
iret
fldz
inc
push
cwde
or
and
sbb
shl
mov
lods
pusha
popa
jg
cmps
pop
push
mov
push
inc
adc
mov
mov
cmps
into
das
mov
sbb
lock
xchg
daa
mov
add
fdiv
fldenv
push
ins
dec
sub
(bad)
pop
fld
daa
mov
jmp
sbb
adc
push
retf
add
push
call
or
jne
mov
push
xor
cmp
xchg
int
push
adc
xlat
dec
aad
popa
loope
aam
push
shr
scas
pop
shl
mov
mov
icebp
jmp
popa
mov
jp
(bad)
leave
and
loope
icebp
outs
rol
push
and
inc
ins
es
or
sahf
je
cmp
mov
mov
dec
mov
loop
xchg
pop
pusha
add
add
adc
cmp
arpl
xchg
push
mov
mov
into
aad
stos
aad
add
dec
jmp
xor
cli
sbb
sbb
iret
jnp
test
fs
mov
push
sub
dec
jae
imul
pop
push
arpl
push
repnz
jle
ret
sub
dec
out
mov
pop
and
sub
mov
in
sbb
mov
ja
xchg
push
call
push
stos
pushf
pop
xchg
mov
in
adc
cwde
bound
mov
or
popf
xchg
jne
loopne
scas
pop
movups
push
loop
push
xor
(bad)
retw
jno
dec
fild
scas
sub
push
popf
fs
jbe
push
dec
cmp
and
fwait
add
sub
pop
rcr
sar
pop
out
cmp
(bad)
pop
mov
ret
fwait
mov
aad
fcomp
lds
xchg
jmp
leave
pop
sbb
fwait
or
cmp
dec
inc
outs
cs
pop
xor
loope
mov
push
cwde
test
ins
sub
test
and
cld
push
pop
call
and
movs
sahf
les
inc
xchg
ja
pop
inc
out
dec
sti
imul
adc
sbb
movs
fsub
test
scas
sub
xchg
pop
ins
dec
fisttp
test
jnp
pop
test
jae
jae
and
dec
cmp
stc
pop
call
rol
(bad)
cs
and
inc
push
jb
sub
retf
cli
call
loopne
adc
xor
scas
out
loopne
push
outs
mov
mov
add
imul
sbb
jecxz
or
aaa
test
mov
cmp
push
cli
popf
mov
aam
xchg
inc
jg
ds
lods
cwde
out
pop
push
pop
daa
cmp
lahf
push
shr
inc
dec
mov
int
xor
lock
cmps
ds
ficomp
add
pop
adc
xor
gs
lock
mov
dec
jne
and
mov
movs
fsubr
inc
cdq
sub
cli
xchg
js
pop
or
pusha
call
ja
inc
xchg
xor
mov
or
mov
dec
mov
or
jp
int
jb
cli
sub
adc
mov
loopne
mov
pop
cmp
aad
mov
es
fld
jp
in
fcom
lahf
jae
jnp
mov
popa
dec
pop
mov
push
sar
lods
pusha
outs
imul
lahf
movs
(bad)
fmul
sub
xchg
popf
and
mov
nop
dec
xor
lods
add
cwde
xchg
movs
xlat
(bad)
adc
jp
sbb
dec
cdq
cmp
or
add
mov
push
lea
shl
mov
sub
inc
mov
xor
movs
sbb
test
add
push
xor
push
add
aam
add
sbb
cli
in
test
sub
pusha
arpl
inc
mov
jge
mov
aas
add
jle
add
and
loopne
cmp
sbb
jge
rol
(bad)
fnstcw
sub
(bad)
xor
pusha
xor
lods
xchg
mov
pop
ret
sub
mov
imul
dec
and
push
xchg
enter
mov
xor
xor
adc
mov
inc
inc
pop
or
inc
and
outs
cmp
push
dec
popf
fcmovbe
adc
add
popa
mov
movs
sbb
ret
sub
test
dec
(bad)
cmps
je
jo
test
stc
mov
push
xchg
sub
inc
push
lock
cmps
or
out
aaa
dec
outs
and
bound
and
inc
cmp
mov
mov
das
inc
mov
jbe
leave
in
sbb
in
cdq
outs
xchg
scas
push
xor
popa
pop
cld
ja
cdq
mov
jnp
pop
and
mov
cmp
sti
das
std
xor
inc
xor
fstp
jns
mov
sbb
ja
cmp
adc
push
xor
fst
push
fstp
ss
cs
ins
push
sbb
cmp
jecxz
mov
xchg
fdivr
jmp
mov
(bad)
stc
or
pop
in
dec
adc
leave
ja
adc
mov
(bad)
cld
inc
push
scas
ins
mov
je
sub
cdq
inc
out
fprem1
fdivr
aas
jbe
es
mov
add
mov
sbb
pop
ja
mul
fcom
test
sbb
cmp
sub
mov
mov
daa
and
pop
mov
cwde
adc
push
mov
stos
fdiv
daa
xchg
fs
adc
push
rcr
ss
mov
add
push
inc
xchg
adc
mov
jg
add
sub
fld
cmp
dec
loope
lods
sahf
pop
sbb
loop
aam
fnstenv
pop
daa
in
js
jbe
pop
retf
sbb
jmp
ss
js
mov
lock
or
arpl
sti
sti
aaa
call
arpl
push
test
in
idiv
pop
mov
cs
imul
fdiv
sti
mov
adc
pusha
sbb
clc
out
aas
fld
ins
imul
(bad)
jae
dec
pop
or
mov
loop
push
sar
pusha
test
pop
or
lahf
pop
(bad)
pop
outs
out
sub
dec
sub
push
bound
adc
les
nop
fdivr
loop
call
out
(bad)
push
fcom
inc
add
shr
pop
data16
ins
jg
cmps
and
xchg
inc
push
jmp
adc
mov
test
mov
fsubr
hlt
sar
pop
sub
mov
xor
xor
push
sbb
inc
aas
or
stc
clc
in
push
inc
push
iret
stos
mov
popf
push
int3
hlt
dec
ds
cmp
mov
mov
adc
jmp
dec
mov
push
jns
vpaddb
cli
push
sub
fs
aad
fs
inc
retf
cmps
jmp
xchg
int
sbb
push
xor
aad
jb
pushf
mov
retf
leave
imul
jmp
push
popf
xchg
mov
out
sbb
cld
xor
and
xor
sbb
cmps
and
xor
push
repnz
mov
enter
scas
cmp
mov
scas
jmp
ret
pop
cmp
push
sub
push
dec
nop
out
cmp
jle
int
in
stos
add
gs
mov
loope
mov
imul
add
nop
pop
pushf
xor
pop
push
fs
sub
dec
fs
adc
mov
xor
pop
sub
and
or
cmps
cmp
dec
fistp
stos
adc
pop
jmp
dec
out
jge
mov
cwde
jge
cmp
sub
scas
lds
pop
mov
aam
stc
push
push
outs
mov
xchg
enter
rcl
aaa
imul
and
xchg
jne
js
lock
movs
call
stc
and
scas
outs
sub
sub
xor
adc
add
int
pop
push
push
call
or
ds
fcmovne
pop
repnz
iret
adc
dec
jle
pop
ficomp
pop
sub
push
add
jp
adc
xchg
aas
push
addr16
mov
mov
retf
ins
out
(bad)
jmp
sbb
int
pop
popa
add
bound
mov
jo
inc
dec
adc
adc
inc
fwait
sbb
sub
fs
repz
fmul
and
xchg
fsub
jl
sbb
dec
adc
in
rcl
(bad)
cli
das
sub
mov
loope
dec
ja
dec
sbb
movs
lea
pop
mov
cmp
aaa
pop
cwde
jmp
pop
jl
inc
bound
aas
dec
sahf
iret
mov
add
mov
loopne
jae
xchg
sub
inc
(bad)
push
mov
ret
sub
pop
gs
les
das
mov
xchg
(bad)
add
pop
xor
pop
mov
xchg
(bad)
(bad)
mov
and
push
push
addr16
sbb
cdq
std
xor
mov
out
mov
outs
std
lds
push
stc
xor
cdq
(bad)
mov
repnz
out
inc
sub
inc
ror
test
int3
push
rol
fs
retf
lock
xor
js
and
xor
in
or
popf
add
sbb
lods
push
and
mov
add
mov
push
fdivr
data16
ret
xchg
add
adc
xchg
into
dec
push
pop
movs
xor
pop
pop
xor
or
mov
fisub
sahf
jnp
jbe
mov
inc
es
inc
push
dec
(bad)
aas
xchg
ret
aas
mov
dec
mov
loope
push
mov
pop
sub
dec
xlat
fld
mov
nop
sub
mov
mov
(bad)
jae
and
in
mov
pop
push
into
lahf
out
mov
mov
bound
xchg
or
mov
retf
es
imul
xchg
pop
aad
lds
mov
sbb
js
test
jge
xchg
lock
iret
bound
push
daa
cmc
xchg
mov
sub
sbb
int3
mov
xchg
pop
mov
mov
int
inc
arpl
leave
ja
aam
cmp
push
repz
jmp
icebp
lods
push
jle
jg
push
or
sbb
inc
or
adc
adc
mov
in
das
mov
mov
fcom
and
aaa
dec
out
repnz
(bad)
mov
inc
addr16
popa
out
dec
into
in
xor
cmp
cmp
fild
push
imul
inc
rol
fimul
jnp
adc
out
bnd
retf
mov
or
sbb
and
stc
(bad)
out
pop
fdivr
jmp
and
inc
clc
(bad)
pop
shl
inc
mov
mov
cld
mov
inc
daa
clc
and
xchg
mov
dec
cmp
add
ds
mov
out
test
stos
jmp
inc
xor
out
sub
sub
mov
cmp
xor
aas
popf
dec
mov
lods
pop
sub
jno
dec
push
jb
mov
sbb
clc
dec
push
and
retf
mov
outs
dec
fisubr
movs
dec
(bad)
lock
xchg
call
adc
mov
cmps
jb
call
jmp
mov
adc
adc
cmps
jae
or
outs
xchg
int
shl
jne
psubb
std
dec
into
scas
(bad)
dec
push
jns
cmp
cmp
sub
sar
mov
loop
push
or
fbld
dec
(bad)
sbb
ror
int
push
sub
pop
sbb
aad
(bad)
push
mov
aaa
ins
repz
push
cmp
jne
es
in
or
dec
xchg
push
cmp
cmp
dec
scas
mov
jo
nop
bound
test
mov
and
pop
retf
push
popf
pop
adc
mov
std
xchg
or
out
or
add
and
jge
adc
push
jno
enter
push
aam
sub
jo
(bad)
mov
dec
iret
sub
pop
add
mov
push
push
adc
test
cwde
ja
or
and
loope
xor
push
je
lods
or
pusha
mov
mov
adc
(bad)
sbb
xor
mov
ret
xchg
and
xchg
pop
mov
xchg
(bad)
adc
gs
icebp
nop
mov
dec
mov
adc
daa
outs
xchg
rol
or
fadd
repz
push
lahf
stos
xor
outs
inc
sbb
dec
add
daa
or
cmp
and
add
push
sahf
dec
xchg
out
(bad)
fcmovnb
pop
stc
xor
adc
xor
arpl
fsubr
pusha
sbb
mov
jne
cmps
imul
jnp
scas
adc
add
and
repnz
movs
enter
mov
dec
es
cwde
pushf
inc
mov
lds
cmc
sub
push
inc
cld
and
sti
jae
add
daa
adc
out
xor
js
div
mov
aas
mov
cld
mov
jg
jmp
sbb
pop
scas
shl
cmp
les
jmp
stc
fwait
outs
jle
xor
in
mov
xlat
ss
jno
pusha
mov
shl
mov
cmp
jmp
sbb
sti
cdq
inc
je
jbe
fnstenv
pop
fwait
xchg
into
mov
idiv
add
pop
fdivr
xchg
(bad)
fst
out
mov
ins
movs
inc
mov
test
add
and
adc
in
idiv
fisub
mov
xchg
cmp
lock
int3
scas
out
loop
mov
pop
ds
sti
daa
mov
inc
nop
and
push
cmps
ins
pusha
or
dec
push
out
icebp
pop
shl
stos
sbb
sub
xchg
ds
dec
cli
call
clc
ret
icebp
mov
xor
int
dec
xchg
dec
movs
jmp
aam
imul
lods
push
enter
cmp
pop
mov
(bad)
ins
sub
push
hlt
movs
lock
adc
cmp
jp
mov
jbe
test
cmps
in
mov
idiv
cmp
jmp
hlt
xlat
jo
imul
pop
mov
cli
xor
dec
std
(bad)
and
add
lock
jo
fcomp
das
mov
inc
adc
xchg
mov
jae
xor
dec
add
sbb
sahf
int3
mov
js
stos
out
jmp
shrd
shl
add
mov
mov
mov
mov
movs
loope
int
ins
mov
stos
and
div
fcomp
(bad)
or
push
xlat
sub
dec
mov
or
aaa
fs
xchg
jbe
std
int3
test
xchg
inc
sub
dec
mov
jp
nop
push
xor
sub
or
popf
out
cmps
enter
jo
aad
jmp
clc
addr16
push
movs
pop
fistp
hlt
inc
xor
mov
mov
fsubr
repnz
jg
repnz
call
cli
test
adc
es
xor
add
adc
pop
mov
in
ja
loope
xlat
out
push
jp
lods
mov
cmp
inc
cmp
data16
mov
inc
xchg
push
jp
inc
mov
inc
mov
add
int
fcom
add
repnz
scas
int
dec
mov
sub
movs
mov
int
mov
inc
or
outs
adc
dec
or
sbb
xchg
mov
stc
adc
repz
pushf
mov
push
(bad)
adc
in
or
daa
push
cmp
mov
add
jnp
lds
dec
mov
ja
sub
push
sub
pop
out
popf
xor
nop
pop
(bad)
jne
xlat
mov
sbb
div
lods
and
push
lds
mov
and
test
mov
cwde
and
cmps
mov
mov
out
out
outs
in
mov
dec
lods
add
mov
mov
lahf
push
into
icebp
stos
sbb
test
movzx
xor
loop
fs
mov
xor
add
ss
xchg
(bad)
stos
or
push
mov
xchg
rol
add
sbb
jae
out
iret
jmp
add
shl
js
cmc
mov
adc
shl
sar
inc
pusha
mov
jge
push
inc
lock
cs
enter
test
mov
adc
add
imul
lds
cmps
cwde
std
jnp
cmp
add
dec
add
ins
mov
adc
add
cmp
jno
cmps
adc
std
je
pop
push
inc
jne
popa
push
mov
add
ror
sub
mov
ret
cmp
inc
(bad)
ins
jnp
sahf
call
int
mov
rcl
into
(bad)
sti
gs
cmp
jb
xor
jp
dec
adc
jb
shl
fcom
mov
repnz
fistp
adc
jbe
pop
inc
mov
repz
inc
test
jno
cmps
arpl
cdq
xchg
daa
or
inc
(bad)
mov
popa
int3
lock
popa
(bad)
mov
mov
mov
cmp
pop
idiv
(bad)
rcr
sbb
out
jo
and
cmps
add
xchg
(bad)
push
mov
mov
arpl
jecxz
xchg
jp
popa
lods
mov
mov
fdivrp
pop
ficomp
mov
mov
in
sub
push
clc
cld
pop
mov
lods
pop
push
in
fidiv
dec
lea
out
sub
aaa
jmp
xor
movs
retf
jmp
loopne
in
shr
adc
dec
rol
pop
jp
cmp
mov
outs
ins
inc
sub
pop
or
jo
retf
into
and
data16
in
jno
fld
int3
mov
cs
pop
lods
mov
inc
mov
mov
sysenter
mov
outs
inc
rol
sbb
stc
test
cwde
gs
shl
jmp
in
cld
je
stos
pop
retf
fisubr
mov
xchg
imul
add
push
int3
int
adc
cwde
add
or
jo
adc
inc
add
mov
and
imul
clc
ret
es
ss
cdq
sub
dec
pop
call
add
ss
jg
and
or
mov
xchg
jo
push
adc
push
cmp
(bad)
jmp
bound
pop
cmp
imul
jae
inc
sar
pop
ss
je
ror
dec
(bad)
nop
inc
xor
adc
sbb
into
add
test
rcr
rol
or
hlt
mov
mov
dec
push
cld
das
add
scas
pushf
into
loopne
xor
xchg
sub
cmc
lea
dec
rol
cmp
add
mov
sti
and
lock
cld
mov
dec
or
dec
fisubr
push
sub
dec
jmp
fiadd
scas
mov
es
shl
movs
jmp
mov
fidivr
inc
or
sbb
sti
in
pop
les
pop
inc
mov
inc
call
outs
and
bound
mov
(bad)
movs
cmc
inc
add
shl
adc
test
dec
icebp
ret
add
push
sahf
mov
test
sbb
test
inc
jmp
les
sbb
pop
cmp
pop
sbb
jp
push
sbb
imul
scas
loopne
ins
repnz
cmp
add
and
push
jno
retf
jle
push
cmc
jns
and
mov
push
aad
xchg
add
adc
mov
xlat
iret
add
ja
movs
in
nop
and
lahf
adc
out
sar
jo
and
repz
fild
push
cdq
push
mov
cwde
ret
pop
hlt
jae
push
adc
and
or
sti
adc
dec
in
ss
push
shl
cmps
add
stos
fmul
sub
neg
pop
xchg
mov
pushf
push
es
imul
call
mov
outs
and
push
hlt
cmps
shl
and
push
pop
mov
test
dec
push
sahf
and
push
cmp
outs
jno
add
(bad)
fnstsw
aam
dec
inc
inc
jmp
adc
fadd
add
div
test
mov
aaa
fisttp
cmps
push
push
and
in
mov
test
adc
data16
movs
xchg
dec
int3
mov
loop
push
lahf
cmp
aad
gs
xchg
xchg
jge
pop
movs
aad
int3
jo
or
pop
dec
mov
pop
jno
fistp
fs
adc
ds
adc
(bad)
loop
mov
fldenv
mov
dec
shl
test
mov
(bad)
addr16
out
inc
popa
or
gs
sar
mov
pop
imul
mov
ret
arpl
mov
(bad)
xor
int
stos
push
cmps
sub
fidivr
mov
cmp
or
mov
sub
imul
shr
lds
xchg
mov
adc
mov
jmp
aam
(bad)
dec
call
shl
cmp
js
stos
mov
jle
into
mov
add
sahf
je
popa
stos
(bad)
dec
mov
mov
(bad)
js
repz
out
out
repz
xchg
and
rcr
scas
push
add
inc
(bad)
push
or
test
popf
dec
adc
dec
inc
aam
inc
push
mov
cmps
sbb
(bad)
mov
push
out
sbb
jle
jns
push
rcr
ins
add
adc
add
test
xor
aam
popa
into
sbb
ror
xor
fbld
cmp
push
imul
mov
mov
inc
imul
fninit
loopne
addr16
sbb
movs
and
or
in
fmul
call
jmp
push
adc
test
sub
imul
movs
imul
enter
cs
mov
pop
mov
in
stc
push
movs
loop
adc
xchg
ror
and
jmp
js
outs
aad
adc
mov
jno
loope
sub
and
cli
dec
and
js
add
stos
xchg
xchg
dec
or
je
xchg
sti
push
popa
(bad)
imul
push
xchg
adc
das
adc
pusha
fild
sub
cdq
adc
cmp
mov
fist
or
fnstenv
mov
nop
stos
sbb
rol
push
inc
ret
inc
cmp
and
retf
lods
aam
cmp
sub
fsubr
xor
push
setae
and
sbb
or
cli
leave
mov
xchg
mov
inc
adc
fdiv
add
push
jne
(bad)
frstor
cli
pop
sar
je
mov
(bad)
xchg
jno
ret
js
arpl
or
ds
sbb
fcomp
retf
push
fs
iret
jne
js
(bad)
not
fistp
cs
aaa
push
cdq
sahf
push
wbinvd
dec
inc
mov
loope
ins
push
mov
push
lahf
std
imul
push
mov
xor
fmul
imul
dec
(bad)
or
daa
test
mov
dec
sbb
jno
inc
cmc
cmp
xchg
xor
pop
pop
xchg
call
xchg
jge
sar
sub
jl
mov
dec
lea
push
or
sbb
ja
jns
into
or
sbb
adc
data16
sub
mov
cmc
push
clc
aam
fild
fisubr
in
cwde
aam
push
lock
mov
jl
adc
(bad)
or
and
scas
aam
idiv
repnz
xor
ret
jo
lahf
retf
dec
aad
fs
loope
imul
xchg
push
sbb
nop
rcr
dec
stc
dec
loop
aaa
(bad)
call
xchg
cmps
movs
mov
or
arpl
xor
out
mov
cmps
inc
out
add
and
dec
cmp
cli
es
mov
repnz
push
mov
pushaw
dec
adc
out
retf
fwait
xor
imul
adc
jae
cmp
pop
shr
lea
and
xor
push
cmp
pop
push
shr
in
add
leave
(bad)
xchg
int3
mov
pusha
xor
sbb
push
popf
into
test
dec
js
rcr
sar
cld
cmp
jnp
or
jg
xchg
mov
imul
retf
lds
aaa
adc
sbb
mov
scas
es
bound
test
mov
mov
not
push
pop
pop
retf
scas
(bad)
loop
cmp
jae
ret
addr16
add
(bad)
jmp
sub
push
mov
push
test
retf
inc
push
(bad)
fdiv
cmp
je
mov
imul
push
cli
sbb
ss
cld
outs
ins
into
jl
inc
sub
adc
mov
cmp
ja
push
dec
pushf
int3
lods
xchg
xchg
xchg
mov
(bad)
sti
fsub
push
mov
or
xchg
or
rol
cdq
ss
sbb
pop
or
outs
dec
js
pop
std
pop
fs
push
cld
add
mov
js
push
sahf
cmp
dec
ins
sub
and
out
xchg
ins
test
mov
xchg
ret
mov
xchg
adc
movs
lds
sub
repnz
xor
movs
xchg
or
and
std
in
jmp
aas
js
jbe
mov
push
xchg
inc
xor
dec
inc
pop
cli
scas
aas
fwait
mov
jp
pushf
sbb
mov
pop
mov
int
fld
les
xor
inc
ss
shl
and
mov
in
int
push
hlt
test
xchg
ja
push
jl
xchg
mov
aad
jmp
cmp
pop
jno
jbe
mov
jne
arpl
jecxz
js
xchg
cld
sbb
and
and
or
add
xor
jbe
aas
mov
fidivr
adc
sahf
ins
std
jns
inc
je
or
test
(bad)
test
mov
out
in
imul
mov
mul
sub
ins
mov
aam
inc
fisttp
sti
sub
out
lds
sbb
test
das
mov
jb
stos
loope
push
cmp
imul
data16
sahf
push
in
bound
or
xchg
lods
icebp
and
xor
add
mov
jge
jge
imul
push
jns
sub
dec
pop
loopne
shl
ins
mov
out
push
or
cld
add
clc
test
sbb
lock
adc
aas
out
cmp
xchg
xchg
retf
sti
lahf
mov
lods
scas
push
jnp
enter
xor
or
xor
out
dec
xor
push
jne
enter
push
or
movs
loopne
inc
rcl
dec
or
push
lahf
outs
xchg
test
idiv
jmp
push
sub
jb
mov
sti
cmc
mov
sub
xor
pop
pop
sub
cmp
xchg
aas
not
add
out
test
(bad)
clc
aas
hlt
ret
ret
push
sub
cmp
ds
nop
jbe
xchg
ss
cmc
mov
jb
loope
addr16
xor
sar
adc
or
jge
call
int
mov
add
lods
xchg
fnstcw
gs
xchg
fwait
repnz
mov
adc
repnz
lods
xor
and
out
and
lds
jl
adc
sar
mov
or
int3
jb
fild
jb
mov
fcmovnb
mov
cmp
inc
(bad)
das
jecxz
xor
(bad)
mov
mov
jmp
cli
fyl2x
add
(bad)
test
fisub
mov
inc
push
sar
mov
pop
popa
(bad)
rol
loopne
rol
popf
test
add
call
imul
or
in
jmp
pop
(bad)
(bad)
test
cmc
cmp
or
adc
push
jge
sbb
fwait
dec
ins
cmp
sub
xchg
mov
cmp
sbb
fwait
mov
jb
(bad)
mov
add
movs
xchg
dec
xchg
xor
gs
adc
movs
xchg
addr16
outs
leave
icebp
das
sahf
clc
out
push
es
out
sub
std
dec
cmp
ins
cdq
and
iret
xchg
out
data16
jb
imul
cmp
mov
pop
xlat
inc
imul
jb
inc
mov
xchg
aaa
mov
mov
or
retf
ja
or
bound
out
scas
jo
xor
stos
cmp
jmp
mov
jle
jns
enter
adc
push
leave
adc
sar
push
push
pop
mov
(bad)
push
jo
inc
popf
cmovno
adc
addr16
shl
gs
je
inc
cmp
sbb
ins
or
mov
test
test
xor
dec
mov
dec
(bad)
xlat
call
cdq
stos
push
jne
iret
push
leave
mov
sbb
call
cmp
sub
out
pusha
out
or
scas
inc
(bad)
push
call
cwde
push
jae
sub
add
sbb
cmp
xor
sub
(bad)
lahf
or
neg
jg
hlt
pop
jns
neg
or
data16
mov
cs
rcr
jnp
popa
ret
(bad)
mov
mov
pop
adc
sti
sbb
cmp
add
xchg
cdq
push
aam
cld
popa
sub
pop
int
adc
xchg
out
test
sub
inc
outs
shl
(bad)
xor
xchg
jnp
outs
fadd
iret
adc
jb
sub
inc
(bad)
pushf
lock
iret
cwde
sub
sbb
arpl
and
mov
icebp
icebp
clc
xlat
fcomp
jno
xor
and
shl
ficomp
test
ret
jbe
jge
clc
jnp
mov
int3
xor
fs
cmc
dec
and
jb
adc
jmp
inc
dec
inc
push
jmp
test
and
inc
push
aas
mov
xchg
scas
jno
mov
adc
mov
jmp
rol
cmp
cmp
inc
inc
js
rcr
repnz
mov
pop
xor
and
test
push
je
repnz
inc
aam
add
lahf
lods
sbb
dec
scas
mov
xlat
ins
in
pop
addr16
xchg
or
into
jmp
cmp
push
cmps
jo
dec
jmp
push
ror
cmps
mov
daa
retf
fadd
es
sub
mov
add
sub
cwde
sub
and
xchg
fist
pop
mov
pop
ss
mov
cdq
mov
xchg
push
movs
mov
mov
mov
mov
loope
lahf
push
fsubr
in
clc
dec
sub
pop
shl
pavgw
dec
sbb
(bad)
stos
in
(bad)
jecxz
cmp
sub
mov
aad
or
push
ret
pop
and
pop
pop
mov
aaa
enter
dec
ror
loop
cmp
adc
dec
test
lods
pop
lock
dec
and
dec
call
mov
sbb
adc
cmc
lock
bound
and
dec
gs
inc
test
adc
leave
pusha
xlat
ds
jmp
jmp
fstp
jl
jg
xor
add
inc
push
stc
(bad)
push
sahf
popf
aad
or
mov
push
push
shl
iret
sub
xchg
jecxz
or
test
loope
sub
aad
dec
bndldx
fnstcw
nop
mov
xchg
daa
lds
mov
push
cmp
push
ja
add
sub
mov
bound
jno
fcomp
loopne
mov
and
lea
cmps
add
mov
mov
xchg
sbb
inc
pop
inc
jnp
cmp
outs
mov
mov
push
inc
xor
cmp
xchg
push
add
(bad)
pushf
(bad)
aam
pop
ret
mov
lods
sahf
in
and
leave
xchg
push
add
mov
adc
js
iret
or
jmp
ja
jg
and
pop
out
push
(bad)
pop
loope
jp
nop
retf
addps
dec
dec
jge
push
shr
mov
jb
inc
dec
arpl
imul
sti
iret
push
popa
mov
cmps
clc
adc
enter
dec
dec
adc
dec
rol
std
dec
add
cmp
push
xchg
xor
das
mov
jmp
arpl
xchg
dec
xchg
bnd
mov
ret
jmp
push
fadd
fdiv
xchg
shl
inc
stos
test
dec
scas
mov
(bad)
mov
jb
cs
cmps
and
in
sub
loopne
adc
mov
outs
sbb
pop
sbb
adc
push
lods
leave
retf
in
ins
pop
rcl
push
mov
es
sahf
cmp
or
ret
push
sbb
jmp
mov
sub
cld
cmps
adc
jns
xor
adc
(bad)
rcr
adc
adc
pop
mov
jnp
push
or
add
and
stc
popa
xor
xchg
push
test
aaa
call
jns
inc
(bad)
movs
inc
test
(bad)
popa
clc
fxam
add
push
scas
aam
or
jae
ja
and
and
jmp
sub
xchg
jge
hlt
push
pop
es
and
xchg
jge
and
or
stos
addr16
cmps
(bad)
out
jl
mov
sub
(bad)
push
rcr
adc
jle
push
and
(bad)
cwde
repz
pop
into
xor
test
xor
xor
test
jo
inc
loopne
xor
gs
stos
jnp
pop
add
icebp
dec
pop
and
xchg
xchg
stos
dec
jmp
xchg
mov
pop
int3
nop
fiadd
push
sbb
fwait
lods
dec
adc
xchg
xor
or
ficomp
push
das
lahf
cdq
lds
ds
xlat
addr16
movs
test
xchg
loope
into
inc
repz
mov
jae
sbb
lock
xchg
or
popf
mov
mov
rcr
int3
jg
pop
in
cmp
mov
(bad)
adc
test
stc
xchg
enter
mov
mov
pop
cli
lods
int
iret
push
or
inc
or
xchg
mov
shl
adc
(bad)
sub
sub
and
fcom
adc
pop
adc
pop
cs
sti
getsec
mov
(bad)
lea
mov
js
outs
bound
jae
rol
aad
ret
jno
pop
imul
and
fcomp
arpl
jmp
test
js
cmp
(bad)
push
sbb
add
jg
out
mov
dec
cmps
jmp
pop
mov
das
cwde
addr16
aaa
and
push
cmc
or
xchg
sbb
jecxz
add
retf
push
adc
ret
and
stc
out
mov
imul
xchg
fdivrp
jg
into
jbe
sbb
loope
xor
retf
sbb
push
inc
cmp
mov
out
in
xchg
int3
jo
push
sub
shl
ret
pop
inc
es
dec
adc
mov
mov
fild
add
repnz
int
retf
pop
jmp
pop
cmps
mov
call
pop
popf
in
add
retf
pop
pop
mov
arpl
inc
sbb
mov
imul
in
pop
adc
repnz
sbb
retf
jg
sub
jecxz
inc
xlat
xor
pop
les
push
add
jns
sbb
popf
or
cli
dec
sbb
pop
dec
push
cmp
movs
mov
xor
cmc
fdivr
stos
out
test
cli
mov
mov
cmp
xchg
fadd
test
push
out
dec
(bad)
mov
or
dec
in
das
fild
es
mov
and
sub
fidivr
pusha
stc
cmps
sub
test
cmc
cdq
xor
cmps
mov
pop
adc
outs
leave
cld
cmp
mov
dec
sub
ret
pop
pop
test
stos
test
mov
stc
gs
jmp
stos
outs
test
jnp
push
popa
jae
or
xchg
fild
es
fldenv
mov
ror
fidivr
mov
push
cmp
shl
std
out
dec
adc
fxch
or
test
pushf
movs
int3
gs
pop
cwde
(bad)
and
mov
call
ins
push
push
adc
inc
pslld
dec
xchg
mov
(bad)
retf
adc
ins
jl
mov
ja
pop
fisttp
adc
mov
aam
iret
mov
xor
aam
cmp
lods
imul
movs
in
xor
jp
leave
xchg
nop
dec
xchg
into
scas
xor
fdiv
xor
mov
ins
and
cmp
out
in
jecxz
(bad)
jno
fdiv
pop
mov
inc
jb
daa
cwde
push
mov
pop
jmp
xor
addr16
(bad)
mov
dec
pop
imul
mov
mov
xor
repz
outs
cmp
out
and
jmp
or
or
out
psubsw
jae
fwait
call
inc
push
push
and
mov
loope
jle
not
add
ret
pop
lock
jno
adc
xor
lea
pop
fadd
jg
xor
mov
xchg
add
nop
dec
in
cmp
gs
cs
cmp
scas
or
inc
pusha
adc
jg
inc
retf
aam
jno
sub
std
mov
add
ss
pushf
xlat
xchg
or
push
sbb
repnz
xor
test
mov
in
dec
adc
mov
arpl
(bad)
mov
xchg
jp
inc
jl
cmp
aaa
test
(bad)
in
fisttp
stos
ss
in
cmc
push
std
and
pop
inc
sbb
test
lods
pop
das
adc
lods
jecxz
mov
or
test
popf
xchg
mov
dec
xchg
sub
data16
int
cmc
adc
xchg
rcr
adc
xchg
int
call
cld
sbb
fucomi
mov
inc
mov
stc
jnp
(bad)
mov
add
dec
adc
rdmsr
shl
int
jae
and
ret
aaa
in
hlt
mov
ins
dec
gs
jns
push
cli
xchg
aaa
daa
aad
mov
enter
jmp
xor
push
gs
dec
daa
sub
out
adc
and
movs
pop
clc
mov
mov
dec
pushf
jae
call
retf
lea
fist
pop
rcr
adc
shr
pop
loop
outs
sbb
cmp
idiv
out
push
bts
fwait
jno
outs
out
sub
mov
mov
pop
mov
xor
mov
pop
mov
lds
xor
mov
sub
jb
add
mov
fadd
cld
or
mov
fs
aas
and
popf
fwait
outs
nop
dec
and
movs
inc
aad
sbb
enter
xchg
iret
mov
call
ss
sbb
adc
cmp
pop
sbb
repnz
pop
lahf
cmovle
icebp
in
sbb
xor
std
call
push
gs
addr16
mov
add
push
cmp
ja
ret
sub
cmp
jp
sbb
pushf
pop
jge
pop
push
(bad)
aad
test
in
xor
dec
lods
jmp
mov
adc
test
inc
dec
jmp
add
xchg
xchg
aam
dec
and
lds
outs
mov
jmp
shl
es
jle
add
dec
das
stos
fsincos
(bad)
and
inc
in
dec
jo
push
icebp
xchg
int
in
xor
sub
cmp
cmps
inc
cmp
idiv
js
(bad)
sti
test
retf
xor
ror
lea
jo
xchg
jg
imul
cs
mov
adc
sbb
mov
scas
and
mov
int
sahf
stos
fstp
dec
test
inc
cdq
adc
push
mov
fwait
lods
out
int3
ds
scas
in
int
push
add
push
push
(bad)
mov
mov
jnp
daa
fiadd
and
movs
add
sub
les
cmp
cmp
ret
jmp
add
and
add
ja
mov
clc
imul
xchg
je
dec
mov
outs
inc
les
or
jg
jae
mov
adc
aas
pop
mov
mov
rcr
stos
dec
mov
mov
retf
outs
xor
sub
pusha
fdivr
cmp
push
sar
das
dec
mov
pop
sub
das
das
pop
cld
out
push
jne
push
scas
gs
outs
(bad)
out
leave
dec
inc
sar
loop
push
shl
jnp
mov
stos
or
in
ds
call
bound
xor
scas
outs
movs
test
mov
cld
das
or
cmp
sti
shr
adc
xor
imul
inc
xlat
pop
enter
jno
lock
or
and
mov
ret
cli
not
std
hlt
sahf
test
add
add
xchg
sub
xchg
lea
sub
daa
and
mov
xor
ds
ret
pop
(bad)
pop
loope
mov
inc
mov
gs
arpl
fucomip
loopne
dec
shl
inc
sbb
push
test
lock
jae
daa
and
cmp
fcom
sbb
sbb
push
leave
in
aaa
jge
pop
repnz
ins
or
lods
inc
mov
scas
push
and
dec
call
loopne
inc
jns
xor
hlt
mov
xor
popf
pop
call
or
pop
scas
cmp
(bad)
out
and
out
leave
xchg
xchg
nop
add
ret
cmc
pop
mov
push
lahf
adc
sub
push
jnp
sbb
lahf
arpl
fwait
outs
pusha
in
and
mov
scas
daa
jmp
dec
mov
jno
add
pop
mov
jno
movs
sbb
inc
adc
cmp
in
addr16
or
cli
cli
pushf
imul
out
(bad)
aad
(bad)
mov
pushf
ins
dec
mov
shl
push
loopne
(bad)
mov
imul
ja
sbb
lock
xor
cmp
xchg
or
repz
cmp
push
ja
and
in
push
inc
ins
xor
rcr
test
or
loope
ss
repz
dec
mov
not
cmp
aaa
dec
cmps
lods
retf
jmp
outs
sub
out
and
xchg
cmp
aam
cmp
gs
jle
mov
retf
int3
and
clc
imul
xchg
push
mov
adc
aaa
pop
inc
pop
ret
fdiv
in
cmc
fnstcw
jecxz
pop
ds
dec
mov
sti
out
mov
mov
cmp
movs
mov
test
iret
xchg
jmp
add
lea
(bad)
outs
imul
mov
ins
jae
push
cmp
and
pop
inc
out
or
and
adc
ror
jmp
and
cmp
stc
not
repnz
jmp
xor
push
call
shl
jb
dec
and
sbb
add
push
js
cmp
jns
in
xor
(bad)
in
retf
add
sbb
pop
inc
call
and
pop
pop
cmps
sar
xor
addr16
jmp
fld
add
(bad)
inc
shl
mov
in
jmp
xchg
jecxz
mov
sub
imul
jl
pop
sti
in
cs
or
add
inc
mov
cmp
clc
or
cli
push
xchg
inc
xchg
mov
sbb
mov
stos
cld
cmp
cmp
aam
call
xor
aad
mov
and
cli
adc
or
pop
rol
inc
xchg
(bad)
jne
mov
iret
popf
stc
mov
mov
test
mov
pop
fs
ds
push
mov
test
test
pop
inc
push
dec
icebp
xchg
dec
or
pop
jns
subps
and
push
push
sar
sub
pop
sbb
scas
jb
in
rol
mov
adc
xor
sete
loope
fiadd
dec
sbb
fst
dec
lods
sbb
ror
and
dec
lods
movs
xor
mov
sub
shr
mov
push
addr16
sti
sub
xchg
xor
mov
mov
mov
xchg
repnz
jecxz
in
loop
mov
mov
push
ja
pmaxsw
out
push
(bad)
lahf
out
pop
mov
xor
inc
in
les
jmp
(bad)
xlat
cmps
jge
(bad)
xchg
dec
sar
push
inc
jne
popa
dec
inc
rol
mov
sbb
std
fwait
xchg
and
lock
ins
outs
adc
sbb
ror
xchg
imul
push
js
adc
xor
into
(bad)
dec
inc
ss
or
popa
daa
daa
fcmovnbe
bound
int
popf
push
jmp
inc
jnp
test
push
and
mov
out
mov
inc
leave
jl
inc
in
ins
lds
cmp
jb
mov
(bad)
rcl
fistp
push
or
not
fild
aas
ss
cli
mov
cmc
sti
jg
push
fwait
xchg
int
jb
lock
lds
or
dec
or
popf
mov
mov
adc
mov
mov
aas
das
cld
pop
sbb
pushf
movs
rol
jo
cmp
sub
outs
nop
mov
hlt
imul
icebp
adc
out
xor
out
push
das
gs
je
add
inc
test
(bad)
repz
pop
daa
sbb
add
fcomp
xor
(bad)
xor
jecxz
adc
sub
popf
jmp
push
cmovg
dec
jmp
jmp
(bad)
int3
dec
pop
xor
mov
imul
retf
es
push
push
imul
test
adc
push
xor
xlat
jg
jbe
retf
outs
xchg
cmc
cmp
icebp
mov
cmp
adc
inc
sbb
adc
sub
jecxz
fdiv
mov
sahf
retf
xchg
enter
in
pusha
cmc
int3
fnsave
inc
jp
xchg
and
jns
loop
or
mov
and
pop
jns
pop
mov
jo
push
leave
mov
std
imul
stos
and
mov
mov
push
adc
jecxz
sar
loopne
out
mov
punpckhwd
xlat
pop
push
sub
mov
dec
fptan
jp
push
loop
out
xor
iret
in
int
out
call
push
jmp
nop
push
fist
xchg
xchg
shl
mov
sub
adc
or
jns
cmp
mov
(bad)
(bad)
out
pop
or
adc
jno
aad
stos
lods
add
ja
dec
in
rol
mov
jae
sbb
cmp
jmp
fwait
jecxz
test
icebp
fst
lods
mov
sbb
push
fidivr
push
push
movs
xchg
mov
pusha
inc
add
add
or
inc
or
cmp
mov
lahf
(bad)
in
xor
imul
pop
mov
jp
retf
push
inc
bound
mov
add
adc
out
or
mov
cmp
repz
xchg
and
jl
std
and
ins
jmp
xchg
stos
pusha
aas
icebp
jnp
adc
xlat
mov
cld
push
mov
sub
fcom
jge
cmp
neg
iret
in
mov
mov
inc
cmc
mov
mov
clc
sbb
inc
push
test
leave
push
fild
mov
loope
gs
dec
mov
(bad)
xchg
aam
mov
sub
sahf
lea
repz
mov
sub
(bad)
sbb
movs
sbb
dec
and
add
pop
sbb
sub
xchg
xor
lods
jmp
jmp
xchg
ins
ins
cmp
out
test
xchg
sahf
xor
stos
mov
mov
push
ins
js
ins
rcr
add
push
not
inc
sub
out
inc
xchg
mov
outs
jae
xchg
dec
mov
add
cs
mov
retf
mov
push
jp
scas
fs
fadd
jnp
fnstsw
in
sar
icebp
cmp
shl
test
push
imul
sub
cmps
daa
cmp
nop
lods
outs
jnp
int
jmp
pop
cdq
adc
loopne
imul
pop
cmp
lds
xor
(bad)
mov
mov
mov
ret
aam
out
xchg
jae
xchg
sub
icebp
xchg
mov
and
aaa
inc
inc
ficomp
(bad)
mov
mov
into
push
aad
pop
jl
sbb
or
(bad)
and
sbb
and
xchg
loop
sub
aam
popf
out
jnp
daa
or
outs
cmp
stc
fsub
cmp
clc
out
pop
inc
icebp
leave
rol
mov
movs
loopne
hlt
jmp
sahf
mov
ret
or
adc
push
sub
push
sub
jge
test
xchg
int
int3
je
fadd
test
push
cmp
cmp
inc
pop
mov
mov
mov
cmps
xchg
inc
cld
cmp
xor
shl
clc
bound
push
jge
pop
test
pop
fsubr
pop
xor
jl
mov
jmp
out
adc
imul
cmp
and
enter
in
movs
call
add
in
movs
in
push
push
std
pop
repnz
ja
movs
mov
fiadd
fmulp
mov
pminsw
ss
test
mov
xchg
adc
push
leave
clc
aaa
adc
ins
mov
lods
pop
dec
mov
cld
rol
fist
jb
mov
mov
sbb
in
jmp
jne
cmp
ins
push
imul
scas
jbe
(bad)
cli
xor
fild
and
inc
cdq
test
sub
xor
pop
arpl
mov
nop
pop
xchg
mov
lea
push
jmp
add
mov
(bad)
scas
dec
out
in
stos
cmp
jg
fwait
cmp
pop
arpl
pop
retf
movs
push
mov
push
mov
ja
cmps
out
push
mov
aas
divps
sbb
jle
iret
outs
call
scas
aad
int3
xor
adc
mov
or
adc
or
xchg
fwait
loopne
sahf
dec
or
clc
inc
xor
mov
pop
push
ins
sar
push
and
inc
test
rol
es
(bad)
in
add
popf
cmp
out
and
fmulp
popf
rcl
add
jecxz
gs
fldenv
call
xlat
xchg
fldcw
pop
push
sbb
xor
pop
ds
cmc
adc
rcl
loope
add
or
pop
adc
jecxz
adc
or
dec
cmps
loopne
sub
pusha
add
cld
jae
cwde
into
dec
sti
js
mov
sub
and
add
xor
and
mov
cmp
outs
xor
gs
imul
(bad)
mov
mov
js
add
adc
inc
add
mov
dec
jb
call
(bad)
popa
in
mov
stos
movs
lock
push
sub
push
aad
iret
mov
test
je
pop
xchg
in
jmp
xchg
aad
movs
(bad)
and
or
push
or
adc
(bad)
xchg
(bad)
jmp
or
imul
imul
mov
dec
cld
addr16
pusha
cmp
fisub
popa
test
push
jge
adc
inc
push
and
and
addr16
les
cmp
imul
push
cmp
add
ss
stos
push
xchg
xor
loopne
sbb
jns
jns
inc
test
mov
sahf
push
ins
adc
movs
sub
mov
xor
aam
mov
xor
lds
(bad)
jmp
popf
sub
add
pushf
pop
mov
adc
aam
mov
push
pop
lahf
mov
push
repnz
div
push
jb
push
in
push
fmulp
addr16
mov
out
dec
aaa
push
aam
adc
cmp
fistp
imul
cmp
xchg
lea
sti
arpl
jnp
mov
dec
rcr
test
inc
and
fprem
and
scas
inc
shr
imul
mov
sbb
sub
adc
in
(bad)
sahf
sub
push
repz
cdq
stos
inc
bound
ja
(bad)
lods
dec
xlat
xchg
dec
push
adc
out
sbb
push
in
jp
mov
inc
dec
je
pop
js
push
cmp
ret
call
shr
xchg
(bad)
adc
push
and
in
adc
popa
push
sbb
call
pusha
rcr
or
pusha
cmp
gs
mov
(bad)
dec
cs
fs
adc
xchg
(bad)
fld
hlt
test
test
xchg
cmp
jne
pop
scas
inc
xlat
int
dec
push
xor
inc
dec
jg
ja
push
add
xchg
sbb
ins
iret
mov
js
mov
jmp
mov
scas
in
jne
call
jae
mov
push
call
jecxz
and
push
and
cmps
push
shl
into
icebp
jbe
push
shl
loope
leave
imul
in
xor
sbb
lods
ja
clc
clc
(bad)
loopne
cmps
xchg
stc
adc
mov
and
push
dec
push
test
imul
cli
push
test
loopne
ret
jb
jmp
push
mov
jbe
out
xchg
je
push
cmp
mov
pushf
pop
sub
cmps
inc
mov
add
cmp
outs
mov
ins
pop
adc
dec
or
add
(bad)
aad
int3
sbb
push
pop
fnstcw
outs
popf
adc
cmp
aam
jmp
jle
repnz
repnz
mov
rcl
xchg
adc
add
push
push
hlt
ror
fld
fstp
jo
dec
inc
or
or
in
arpl
es
push
test
lea
jle
sub
and
cmp
test
in
push
sbb
lea
fstp
jmp
ja
(bad)
punpckhwd
sbb
rol
or
push
push
dec
movs
leave
rcl
mov
fld
fcom
xchg
shl
clc
mov
pop
cmp
xchg
test
pop
shr
mov
test
gs
pop
retf
popa
jle
and
mov
inc
mov
xrelease
fcomp
mov
lds
dec
retf
lock
test
ret
cmps
fisttp
add
pop
pop
fisubr
cmp
into
hlt
jmp
std
hlt
jae
and
push
adc
mov
mov
sub
mov
xchg
cdq
(bad)
out
outs
sbb
gs
mov
cmp
fld
xchg
aaa
scas
imul
mov
sbb
jne
lahf
loop
adc
sub
mov
(bad)
dec
or
jmp
and
pop
add
std
cld
movs
arpl
inc
test
adc
imul
push
shl
dec
mov
xor
xor
sbb
(bad)
gs
xor
add
or
test
xchg
pop
(bad)
push
mov
retf
mov
or
das
push
inc
sub
pop
or
nop
cmp
aas
mov
shr
movs
pop
outs
add
aas
jne
xor
jmp
adc
or
mov
imul
dec
(bad)
jmp
jmp
lock
frstor
jecxz
xchg
xor
cmps
push
clts
xchg
cmp
outs
js
or
stos
aad
jne
leave
xchg
in
(bad)
jne
sbb
stos
add
leave
clc
mov
pop
jo
cmp
lods
jp
scas
xchg
rcl
ret
sub
xchg
push
push
test
(bad)
cmc
and
mov
repz
loope
sahf
nop
outs
dec
sbb
pop
cmp
jno
dec
mov
adc
dec
xor
leave
ror
loopne
fistp
fisubr
jge
and
inc
pop
cmp
enter
les
movs
nop
sub
pop
cdq
les
sub
retf
fmul
pop
pop
mov
cmp
repz
xchg
and
test
xor
sahf
out
cmps
ds
or
cmp
fst
dec
pop
cmp
out
das
add
in
pop
mov
pop
dec
pop
pop
das
gs
add
push
inc
fstp
inc
ficom
add
jp
sbb
mov
jo
push
mov
mov
loopne
dec
pop
je
push
xchg
jmp
popf
push
sub
test
imul
neg
add
fsubr
cmc
jns
icebp
pop
xor
jnp
(bad)
push
adc
dec
ud0
push
(bad)
js
jl
nop
in
ficomp
mov
cwde
and
fcomp
ret
cmp
or
sbb
mov
in
pop
inc
(bad)
(bad)
pop
test
mov
sub
cmc
pushf
jge
push
xchg
loope
mov
(bad)
and
jb
call
les
jle
jno
cmp
add
or
xchg
inc
inc
xchg
daa
push
nop
je
mov
loopne
mov
pop
adc
dec
addr16
ds
inc
or
cmp
adc
push
int3
lods
pop
mov
xor
pop
adc
jbe
jl
and
scas
test
dec
or
push
js
mov
out
sti
push
leave
retf
add
popa
dec
popa
repz
ins
cmp
xor
add
scas
push
or
cli
add
pop
sub
xchg
jbe
(bad)
or
mov
xor
mov
jo
test
jno
ds
mov
les
sbb
(bad)
mov
mov
(bad)
or
jbe
dec
mov
xor
pop
mov
stc
mov
xchg
in
adc
(bad)
xchg
fnstsw
cmp
(bad)
cdq
cmp
pxor
mov
xlat
jbe
(bad)
shl
ja
pop
xchg
pushf
icebp
sub
inc
inc
push
repnz
add
arpl
adc
fsubr
inc
mov
neg
xchg
ss
mov
cmp
cmps
inc
pop
pushf
shl
or
xchg
and
arpl
cdq
xor
scas
pop
pop
add
add
shl
shl
rcr
out
push
and
mov
pop
data16
or
pop
aas
retf
mov
jnp
ins
inc
mov
or
popf
dec
xchg
mov
fst
add
adc
pop
inc
xchg
xchg
mov
stos
fnstenv
cwde
cmps
cmp
cmc
fidivr
test
or
(bad)
jmp
jno
test
pop
adc
ror
mov
inc
out
mov
out
jl
push
pop
mov
test
fmul
(bad)
nop
mov
ss
fild
(bad)
clc
xor
sub
adc
add
add
and
push
push
sub
push
cmp
das
out
call
jp
inc
mov
aad
jl
push
add
mov
dec
in
inc
mov
sbb
data16
jmp
movs
or
dec
loopne
inc
jl
in
mov
sbb
ror
div
xchg
jno
fimul
(bad)
mov
movs
or
out
lods
dec
cmp
sub
jmp
mov
fldenv
cwde
adc
(bad)
dec
(bad)
loopne
mov
lds
shl
and
retf
in
ja
inc
inc
sub
imul
bnd
mov
sub
les
or
xchg
cld
xchg
xchg
in
stc
bound
jecxz
ror
test
sbb
pop
dec
test
scas
dec
dec
add
movs
shr
mov
ins
retf
lods
mov
pop
and
fcomip
into
or
pusha
xchg
or
jge
xor
pop
inc
outs
push
jecxz
fdivr
lock
jnp
ror
bsf
clc
inc
xor
jmp
sbb
xchg
and
xchg
pop
icebp
sub
daa
lahf
in
(bad)
push
iret
movs
jecxz
retf
dec
out
push
jg
ds
test
push
sbb
enter
dec
adc
pop
cmc
and
(bad)
shl
div
fwait
sub
and
in
mov
xor
inc
xchg
jp
push
data16
mov
repnz
pop
jns
mov
cmp
sbb
repz
cdq
hlt
call
shl
sub
add
adc
js
pop
pop
hlt
fidiv
ins
push
and
sub
sbb
mov
mov
rcl
shl
mov
out
pop
jp
out
aaa
lods
adc
and
mov
clc
push
add
dec
mov
adc
mov
and
sbb
lods
ss
push
jl
fild
add
add
daa
(bad)
mov
(bad)
js
cmps
inc
cmp
cs
mov
test
rcr
pop
(bad)
jecxz
cmp
fidivr
jno
push
pop
(bad)
inc
movs
xor
push
loop
retf
and
mov
pusha
cmps
lock
ins
bound
xchg
stos
push
(bad)
scas
sbb
outs
cmp
xchg
or
hlt
cwde
shl
retf
ins
dec
aas
jge
sti
adc
xor
sti
test
add
ds
in
gs
sbb
neg
enter
xor
xor
add
inc
sub
push
retf
or
sti
test
dec
daa
ret
leave
cld
rol
xchg
sbb
pop
xchg
xchg
mov
pop
jle
inc
mov
popf
xchg
out
fidivr
push
xchg
pop
test
jl
adc
mov
jne
sbb
sub
xlat
ds
out
jno
pop
push
cld
pop
lea
mov
test
mov
loope
mov
mov
mov
sub
sbb
(bad)
sbb
and
jo
cld
dec
aaa
inc
icebp
xchg
retf
ds
cwde
xchg
jmp
fstp
out
not
mov
and
jmp
adc
cmps
enter
iret
mov
leave
scas
xchg
nop
and
xor
mov
mov
in
pop
cmp
mov
cwde
sahf
mov
mov
cmp
call
rol
rcr
test
int
push
pusha
ror
lods
call
hlt
int
mov
mov
arpl
and
sbb
and
dec
jne
dec
xchg
xchg
sub
mov
sub
(bad)
shr
(bad)
test
inc
scas
nop
mov
lahf
std
sahf
sbb
mov
sub
mov
data16
ja
xor
xlat
inc
cmp
cmps
xor
jne
inc
add
dec
sbb
pop
dec
mov
inc
gs
fcomp
xchg
iret
out
adc
hlt
pop
repz
jmp
fiadd
adc
pop
fcomp
(bad)
test
inc
cld
mov
mov
mov
das
out
rcr
mov
jge
pop
in
scas
repz
jae
popf
dec
adc
inc
push
or
dec
jle
loopne
call
test
ins
lods
push
or
jecxz
in
std
inc
ret
cmp
movs
(bad)
sbb
mov
xor
stos
or
mov
cmps
cmp
or
push
jne
jg
pop
nop
cli
cwde
dec
hlt
int
fadd
xchg
jge
and
inc
push
jle
xchg
aad
lods
jno
add
dec
js
aas
repz
jbe
(bad)
xor
dec
xchg
cdq
stc
or
or
jecxz
fidiv
(bad)
fimul
fld
and
neg
test
dec
inc
inc
std
pop
jmp
jno
mov
lock
cs
fs
sahf
or
ret
sub
mov
sti
daa
push
inc
out
imul
add
test
in
sbb
cs
idiv
cmc
inc
outs
call
icebp
call
push
inc
test
pusha
rep
adc
or
stc
mov
and
imul
outs
push
dec
push
cmps
iret
stos
xor
add
pop
cmps
mov
sbb
adc
push
in
push
pop
adc
les
and
cmp
inc
repz
xor
mov
jae
jo
inc
jno
std
scas
cwde
ja
dec
je
jmp
sub
les
adc
(bad)
imul
test
jmp
and
cdq
hlt
jg
fist
adc
cdq
frstor
jmp
pushf
sub
inc
pop
mov
cmc
or
cmp
xlat
mov
cmps
jle
retf
mov
mov
outs
mov
pop
mov
sbb
int3
or
lock
cmps
mov
popa
nop
add
rol
(bad)
mov
mov
xor
stc
mov
imul
sti
add
sub
jg
ret
or
in
cli
stos
and
das
dec
popa
jne
lea
scas
mov
pop
bound
mov
inc
outs
leave
sar
add
pop
(bad)
pop
pop
push
adc
push
push
jae
sub
inc
movs
rcr
jo
int
cmp
mov
enter
iret
rol
cmps
sbb
mov
jmp
es
xchg
(bad)
sbb
xor
and
dec
xchg
mov
je
mov
push
mov
push
jo
adc
and
ja
mov
retf
inc
mov
retf
shl
aam
fs
mov
push
xor
push
mov
adc
(bad)
sub
retf
pop
xor
jle
aam
xchg
pop
xchg
out
inc
cmp
mov
sbb
ror
outs
imul
stc
sbb
push
aam
adc
imul
adc
sbb
ficomp
aas
sbb
repz
cmp
or
add
nop
hlt
pop
sti
and
pusha
jmp
push
pop
fild
and
loopne
enter
push
sub
fs
xchg
mov
fwait
jl
push
imul
xchg
push
push
repz
or
(bad)
xor
nop
push
mov
fsubr
mov
mov
addr16
ss
mov
call
dec
ret
int3
(bad)
dec
mov
out
cmc
adc
mov
in
arpl
cli
inc
aaa
xor
pop
addr16
shr
iret
aam
out
push
scas
loope
mov
mov
xchg
nop
add
loop
cwde
shl
pop
imul
xchg
mov
movzx
jo
repz
lds
inc
mov
fiadd
das
cmp
cmp
cmp
out
pop
sub
dec
ins
cmp
rol
ret
das
mov
fs
movs
rcr
push
ret
mov
loop
popa
sub
mov
xchg
mov
in
inc
dec
jae
stos
out
out
xchg
nop
loopne
cs
push
mov
mov
cli
(bad)
icebp
fnstcw
sahf
in
adc
ficom
into
cmp
cli
jecxz
je
xor
popf
jns
pop
inc
pop
imul
sbb
xor
movs
jecxz
and
dec
pop
imul
enter
addr16
outs
add
or
mov
dec
(bad)
movs
out
imul
dec
jmp
jne
(bad)
js
aaa
enter
jge
mov
jbe
pop
mov
mov
outs
test
sub
(bad)
test
fisttp
dec
push
xchg
int3
jl
push
mov
mov
popa
retf
adc
ins
les
adc
loop
xchg
cli
xchg
aas
imul
cmp
inc
mov
pop
sbb
or
push
icebp
ins
mov
or
ja
fs
cwde
xor
add
arpl
frstor
sub
mov
adc
mov
mov
es
mov
(bad)
pop
or
add
rol
push
dec
jns
aas
xchg
mov
jmp
or
les
push
push
das
pusha
rcl
hlt
mov
(bad)
cli
div
xchg
adc
sahf
add
imul
into
cmc
int3
sub
mov
pusha
cmp
mov
jecxz
jo
push
addr16
ret
retf
sub
loop
imul
cmp
lock
test
aas
inc
repnz
iret
jmp
or
cmp
div
shl
sbb
ds
cmp
mov
mov
daa
gs
out
xchg
fidiv
pop
push
iret
mov
leave
div
ss
xor
pop
dec
fucomi
pop
and
ret
movs
clc
dec
loopne
push
out
and
out
jbe
mov
dec
pop
cmps
pusha
xchg
inc
push
pop
jns
jp
jge
std
test
dec
in
sti
nop
lock
das
lock
out
cmp
jbe
add
sub
add
ins
dec
and
scas
bound
stos
and
mov
sub
mov
imul
scas
push
popf
retf
std
mov
nop
and
push
ret
sbb
cmp
stc
mov
icebp
es
rcl
pop
popf
mov
into
cmp
xchg
call
mov
fsubp
jle
inc
test
imul
xchg
jne
pop
ds
ror
arpl
push
out
add
sub
push
pop
inc
int3
dec
in
js
mov
xor
jmp
xchg
pop
dec
nop
iret
or
sub
push
cmps
dec
icebp
mov
aad
or
loope
pop
mov
jae
scas
(bad)
cmp
or
out
jl
bound
fisttp
mov
movs
mov
sub
mov
(bad)
mov
test
xor
dec
pop
jno
mov
aad
lahf
fadd
mov
test
sbb
leave
inc
stc
xchg
mov
ror
pop
test
sub
in
sbb
sub
fwait
push
adc
pop
add
push
mov
dec
shl
jae
xchg
imul
xor
or
std
mov
cmp
pop
push
push
cs
cmp
cmp
mov
inc
cmc
(bad)
push
in
jne
retf
jns
test
xchg
pusha
xchg
lds
cmp
pop
cs
add
(bad)
fild
pop
popa
retf
dec
add
(bad)
enter
dec
xchg
movs
push
popa
movs
mov
js
cs
aaa
(bad)
hlt
sbb
(bad)
adc
adc
mov
push
xchg
mul
mov
cmp
and
sar
jns
mov
(bad)
rcl
leave
maxps
retf
out
sahf
imul
js
mov
out
jno
mov
mov
mov
fdiv
cdq
bound
stos
mov
std
cmc
fwait
mov
movs
inc
jge
enter
jae
mov
rcr
lods
rcl
mov
scas
add
mov
and
(bad)
lds
dec
lods
push
add
sub
or
cmp
movs
adc
cmp
mov
sbb
call
mov
xchg
cmp
leave
mov
fcomp
mov
cdq
in
lock
out
push
popa
or
mov
imul
fwait
dec
dec
repnz
in
out
push
jmp
leave
sbb
add
call
mov
in
and
jmp
jmp
lea
js
rcr
das
mov
(bad)
cdq
aaa
pop
enter
xor
retf
jo
or
into
adc
pop
scas
or
mov
pop
xchg
outs
push
sti
icebp
jbe
push
mov
nop
xchg
lods
popf
outs
and
das
in
clc
dec
mov
xor
cdq
dec
ja
push
mov
inc
cs
movs
inc
test
jbe
(bad)
dec
adc
add
sti
inc
hlt
push
lods
fld
push
or
push
jns
mov
mov
stc
(bad)
neg
div
dec
call
inc
aam
sbb
sahf
mov
adc
sbb
enter
pop
out
das
and
shr
jg
outs
push
push
adc
clc
stos
out
fwait
xor
sub
push
jbe
push
mov
fstp
aam
in
fild
mov
adc
stos
movs
mov
xor
or
sbb
cld
add
mov
test
dec
stos
mov
daa
jmp
jp
pop
and
repz
dec
loopne
or
scas
(bad)
lea
adc
lds
lods
icebp
and
sar
pop
mov
add
das
cmp
jle
icebp
les
mov
fisub
cmc
(bad)
(bad)
scas
jl
aam
cld
fwait
xor
inc
sub
ret
xchg
xor
pop
mov
in
dec
call
bound
mul
leave
lods
iret
loopne
test
mov
jbe
adc
jge
xchg
push
xchg
add
mov
and
(bad)
mov
mov
jp
scas
push
das
push
jo
sbb
push
mov
or
(bad)
adc
shl
lods
or
jb
repz
lods
loope
loopne
inc
cmp
push
fcomp
dec
das
inc
mov
jge
push
std
iret
add
mov
mov
arpl
sub
call
pop
test
and
in
stos
(bad)
mov
pop
js
fsubr
fld
ja
or
sar
push
stc
dec
jge
test
scas
jl
mov
addr16
mov
pop
xor
mov
push
and
out
adc
mov
adc
cwde
sub
js
sahf
pop
sti
sub
mov
pop
setle
xor
rol
xchg
das
cld
fs
popf
inc
pop
lds
inc
ins
(bad)
mul
sub
in
mov
pusha
or
xor
int
sbb
sub
call
je
mul
add
mov
sbb
gs
loop
int
inc
cmps
inc
nop
loop
loop
in
fldcw
aad
outs
xor
or
mov
mov
cli
adc
fcmovbe
pop
inc
ja
cmp
test
jnp
or
aaa
xchg
(bad)
adc
xchg
adc
mov
arpl
jecxz
cli
mov
int
mov
dec
pop
sub
jl
imul
dec
arpl
clc
imul
das
cmp
adc
int
mov
(bad)
in
cmp
mov
icebp
fs
in
and
retf
retf
sbb
add
sar
adc
cmp
ror
mov
mov
outs
dec
fwait
pop
xor
mov
mov
xchg
int
cmps
or
jle
pop
dec
ficom
loop
sub
pop
lahf
out
sbb
adc
mov
jnp
call
push
jmp
push
push
xchg
cdq
add
mov
cmp
retf
mov
sub
push
xor
ins
or
aam
repz
or
sub
xchg
and
rcl
retf
lea
jmp
or
test
leave
adc
cmp
call
btr
ret
mov
sbb
ss
add
arpl
add
or
dec
lods
jp
(bad)
ss
push
xlat
pop
mov
pop
loopne
sbb
sti
sbb
rcr
int
dec
lods
hlt
shl
lea
sbb
mov
jmp
sbb
outs
std
call
push
aad
les
icebp
jmp
adc
and
cmps
xchg
mov
push
sub
addr16
ret
push
mov
iret
fst
popf
adc
lods
pop
(bad)
sbb
mov
add
or
mov
mov
das
sbb
cmp
icebp
aam
inc
rol
js
cmps
iret
xor
or
add
pop
shl
mov
fist
not
or
cmp
dec
cmp
iret
mov
mov
mov
lds
mov
pop
loope
or
das
cmps
sub
cs
xchg
dec
push
cs
mov
lods
ja
fwait
out
iret
pop
sub
cmp
sbb
scas
push
xor
mov
dec
push
pop
push
sbb
call
add
cmp
cmps
adc
dec
test
call
jnp
fwait
stos
into
sub
jl
dec
sbb
rcr
sbb
pop
pushf
jl
scas
imul
pmuludq
(bad)
mov
jns
or
mov
shl
or
mov
jno
adc
nop
ret
int
xchg
xchg
shl
popa
sbb
repnz
adc
mov
dec
lods
in
int
cmp
mov
cmp
push
and
xor
dec
retf
dec
jp
mov
not
cdq
inc
mov
sub
daa
push
enter
adc
mov
inc
sbb
stc
sbb
lahf
xor
cmc
(bad)
sbb
push
lock
or
aaa
xchg
lock
sbb
std
inc
ret
std
push
cwde
stos
cmp
in
mov
fwait
jo
adc
jb
(bad)
jne
lock
(bad)
int
cmp
mov
inc
fsubr
fld
jl
inc
loope
xor
icebp
mov
sti
push
inc
mov
call
aad
lods
and
cwde
cmps
ret
jmp
and
or
test
push
in
jo
inc
mov
stos
xchg
mov
neg
mov
sti
jae
mov
repz
adc
mov
int
mov
mov
xchg
sbb
dec
fist
scas
jp
retf
mov
dec
cmps
push
cmc
mov
outs
(bad)
arpl
adc
cwde
js
push
in
mov
and
imul
(bad)
sbb
test
clc
cmp
ins
pop
scas
push
push
cdq
es
jne
mov
add
jg
and
das
and
sbb
pusha
popf
test
les
add
outs
mov
popa
(bad)
je
daa
fwait
(bad)
(bad)
shl
mov
retf
cli
push
jmp
je
popf
(bad)
nop
aad
mov
fld
sbb
jbe
jnp
add
(bad)
cmp
xchg
jne
adc
(bad)
scas
and
cmp
cmp
and
out
mov
addr16
clc
mov
std
not
fidiv
enter
fld
ins
push
bound
(bad)
pop
cld
retf
jb
jno
push
pop
ins
pop
mov
or
jns
test
mov
cld
jnp
das
pop
add
ins
xchg
and
push
in
sti
call
rcr
fisttp
xchg
cmp
fwait
cmovle
cs
(bad)
dec
idiv
out
out
loope
cmp
pop
int3
add
inc
cli
xchg
(bad)
call
repnz
push
es
jb
mov
cs
push
pop
fisttp
adc
adc
shr
jae
push
mov
sbb
ret
pop
rcl
loope
test
sahf
ja
ins
mov
inc
cmp
jo
out
cmc
call
xchg
xor
fwait
out
cmp
xchg
stc
cs
jmp
or
rcl
fistp
xor
pop
xor
into
dec
call
sub
push
inc
cmp
xchg
pop
arpl
daa
(bad)
sahf
(bad)
ror
inc
stc
push
imul
pusha
je
xor
push
cld
inc
adc
xlat
adc
nop
sub
jnp
xchg
shr
jmp
test
or
mov
dec
mov
inc
out
cmp
adc
pop
mov
call
repnz
add
fimul
jge
or
inc
xlat
pop
cmc
push
dec
xor
into
in
xor
mov
or
fadd
and
xlat
aaa
pop
sti
fisubr
jns
loopne
xchg
push
push
sti
loop
mov
test
pop
mov
fdivr
adc
jb
rcr
retf
jbe
(bad)
into
adc
or
aaa
cmp
test
cmp
inc
inc
add
and
inc
add
mov
lods
push
push
das
mov
mov
add
mov
cdq
outs
inc
cmp
sub
mov
xchg
dec
sahf
cdq
jo
push
xchg
shr
in
xchg
push
(bad)
fstp
push
loop
adc
or
add
add
mov
imul
dec
out
mov
xchg
clc
push
adc
fisttp
in
add
and
sbb
ss
sub
push
pop
mov
hlt
cmc
push
inc
popf
add
jmp
xchg
or
xchg
cmp
pushf
and
pusha
push
push
les
inc
sub
aaa
cmp
mov
mov
arpl
sub
inc
jle
pop
or
inc
out
(bad)
out
xchg
adc
adc
push
xchg
inc
push
lahf
in
mov
lods
pop
inc
(bad)
(bad)
aam
jl
jne
and
leave
jb
and
jno
and
imul
ret
inc
dec
fwait
rcr
pop
cmp
pop
add
mov
sbb
in
shr
ins
jne
sbb
cmps
jp
xor
or
mov
push
sub
imul
jg
dec
push
mov
loope
ret
push
int
fimul
sbb
or
loopne
cmp
stc
adc
adc
fwait
dec
rcl
enter
xchg
movs
mov
fdiv
ficomp
jg
popf
dec
mov
mov
les
or
(bad)
out
or
fwait
inc
jns
jns
lea
push
push
add
and
cld
sahf
rol
mov
aas
imul
push
or
mov
add
movs
stos
inc
stos
pop
pusha
mov
or
(bad)
scas
pop
scas
loopne
jno
cmp
or
add
leave
je
ret
test
inc
jmp
(bad)
jp
into
add
mov
aam
out
out
arpl
mov
loope
in
(bad)
xchg
sub
js
and
mov
jecxz
xchg
dec
repnz
cli
pop
push
stos
sbb
lea
push
repz
lahf
test
fs
ins
jp
mov
dec
in
xchg
lods
call
ror
stos
add
rcl
scas
sub
gs
pop
jg
sbb
push
pop
(bad)
push
ins
sbb
outs
sahf
mov
dec
adc
jns
and
inc
rol
(bad)
bound
outs
sbb
call
or
(bad)
xchg
jmp
mov
ss
or
dec
sub
movs
popf
cmp
pushf
(bad)
mov
imul
ds
mov
push
in
push
jbe
mov
adc
imul
xlat
sbb
in
inc
mov
mov
in
adc
call
repz
in
dec
and
adc
pop
cmp
nop
add
jae
push
test
mov
dec
(bad)
std
dec
cmc
movs
and
sub
es
mov
dec
xor
retf
xchg
pop
pusha
outs
xor
stc
stc
ror
dec
pmovmskb
and
jbe
in
ror
xchg
nop
jl
jmp
shl
pop
push
in
icebp
ss
in
cmp
iret
cmc
xor
inc
scas
(bad)
cmp
push
xchg
cmp
(bad)
xor
sbb
mov
ja
pop
mov
cmp
dec
push
dec
retf
imul
and
leave
mov
pop
pop
inc
cmps
add
push
(bad)
std
test
sbb
dec
gs
pushf
aaa
jo
mov
adc
and
stos
inc
mov
popf
pushf
sti
dec
fiadd
inc
in
int3
push
leave
xor
ficomp
addr16
adc
loope
in
daa
int3
cmp
pop
call
movs
inc
mov
push
ja
(bad)
fsubr
imul
adc
sbb
ss
or
int
jb
cli
int
and
cmp
lods
je
mov
je
xor
fcomp
or
out
ret
inc
or
and
test
cmps
push
xor
push
lods
add
push
scas
adc
jmp
mov
stos
add
and
mov
repnz
(bad)
repz
fldcw
mov
pop
es
es
fmul
lock
cmps
push
or
cmp
dec
ror
stos
stos
shl
inc
cs
cmp
sbb
in
cmp
and
icebp
xchg
popf
fistp
push
call
(bad)
and
test
test
mov
add
scas
add
cdq
or
cmps
mov
adc
or
cmp
xchg
cld
ret
(bad)
ss
mov
xor
pusha
add
sbb
(bad)
fistp
les
dec
sub
push
neg
icebp
gs
mov
jp
bound
aaa
sbb
dec
fistp
call
xor
mov
aam
mov
aas
movs
pop
stos
not
pop
xor
lods
leave
mov
sbb
xor
mov
mov
(bad)
(bad)
pop
jbe
(bad)
sub
sub
cmp
lahf
mov
or
xor
test
in
jge
pop
sbb
mov
arpl
add
xor
in
mov
push
daa
rcr
mov
cld
imul
mov
mov
in
cmps
(bad)
sbb
(bad)
xchg
jnp
imul
jb
cmp
out
push
scas
mov
dec
add
mov
vmovdqa
xor
add
adc
jns
xlat
inc
and
jmp
cwde
push
mov
lds
fcomp
push
in
push
in
sbb
xchg
adc
mov
loope
cli
js
xchg
scas
push
gs
or
(bad)
in
icebp
sbb
adc
dec
sti
das
mov
cli
xor
and
xor
rol
cmc
sub
dec
fistp
(bad)
retf
leave
xor
add
ficom
xchg
sbb
pop
clc
(bad)
je
xor
std
jp
xchg
mov
inc
shl
push
xor
mov
mov
ret
test
cmp
gs
iret
into
test
imul
lds
fidivr
lea
cmp
mov
xor
lahf
imul
dec
push
mov
adc
push
fnsave
mov
xchg
adc
mov
je
xchg
pusha
sbb
mov
jmp
imul
fldenv
mov
cmp
loop
test
or
leave
add
mov
sub
dec
jnp
addr16
sub
imul
add
test
cdq
jle
ret
fs
hlt
adc
cmps
idiv
xchg
ins
aad
push
rcr
push
and
lock
dec
fadd
ficomp
mov
pop
fild
adc
or
int
int
test
outs
sbb
fld
in
out
sbb
loopne
push
jmp
or
mov
(bad)
xlat
xor
loop
inc
shl
mov
retf
fadd
jae
xor
xor
fs
mov
into
lods
mov
arpl
fwait
shl
(bad)
(bad)
les
inc
(bad)
repz
daa
jno
fst
outs
dec
sub
sub
outs
(bad)
lods
out
adc
pop
(bad)
(bad)
push
dec
bound
jp
(bad)
in
mov
neg
inc
lahf
mov
ins
pop
scas
fs
adc
mov
push
clc
sahf
add
sbb
jecxz
gs
rcl
fidiv
xor
shr
in
shl
and
out
outs
add
cmp
imul
or
and
and
xchg
xlat
mov
fistp
retf
loop
lods
sbb
shl
iret
mov
pushf
sbb
pop
pop
push
sub
add
cmp
ja
sbb
loopne
xchg
inc
push
outs
ret
xchg
inc
push
xchg
cmps
mov
in
(bad)
test
add
jbe
ret
loopne
fimul
adc
inc
bound
int3
js
adc
mov
xchg
out
and
mov
dec
aad
mov
pop
add
inc
enter
add
push
mov
sub
or
or
xor
call
(bad)
fdivr
adc
les
out
cmc
and
xlat
jp
cmp
xor
fcmove
mov
dec
int
sub
fnstenv
test
imul
test
fimul
daa
data16
sbb
inc
push
mov
sub
xchg
arpl
les
xchg
and
(bad)
ficomp
mov
adc
mov
mov
adc
pop
cmp
scas
retf
jbe
jle
mov
push
outs
xchg
stc
popf
test
or
cmp
cdq
mov
cmp
dec
in
sub
inc
xor
cld
ins
cmp
(bad)
cli
test
cmps
inc
pop
cmp
mov
pop
and
aas
mov
and
mov
jne
imul
and
dec
push
repz
and
inc
mov
xchg
imul
sbb
jle
mov
push
sti
mov
cmp
int
push
adc
popa
adc
cmp
jmp
mov
arpl
les
push
cmps
inc
sahf
xchg
add
jb
fwait
gs
dec
ds
and
xchg
push
daa
sub
add
jle
dec
xchg
rcr
mov
dec
pop
test
pop
sbb
adc
aas
bound
xchg
adc
and
and
rcl
sbb
add
daa
fimul
dec
xor
sbb
xchg
xor
aaa
dec
mov
cmps
jne
stos
lods
adc
movs
mov
ret
mov
sub
dec
add
and
jmp
cmp
sbb
and
xor
lahf
arpl
nop
mov
les
jb
fdivp
inc
and
mov
xchg
cmp
daa
push
mov
fisub
and
sub
dec
add
nop
push
and
push
aam
or
sbb
inc
jb
or
loop
or
jmp
lods
rol
jbe
ss
jnp
adc
sbb
pushaw
sbb
inc
cmp
add
add
lahf
or
shl
imul
bound
jae
out
push
jns
cs
push
clc
pushf
adc
cmp
inc
icebp
or
pop
sub
scas
xor
cmp
or
jecxz
xchg
pop
call
adc
cdq
xchg
sbb
jl
and
in
rcr
in
cmp
gs
sbb
sub
pushf
cmp
fisttp
test
pop
mov
ret
xchg
ds
dec
gs
popf
cmp
dec
stc
adc
jo
inc
int3
arpl
sub
(bad)
mov
push
jle
xor
adc
jg
stos
xchg
xchg
jl
ja
fcomi
mov
add
shl
stos
inc
mov
push
das
or
add
rcr
push
adc
dec
dec
out
pop
in
lods
push
stos
sbb
cdq
bound
in
jmp
leave
repz
pop
adc
jb
shl
or
xchg
cmp
or
xchg
inc
stos
xchg
sub
and
mov
fwait
test
ins
mov
xchg
cmp
(bad)
popa
iret
ins
jnp
cmp
add
ror
jle
cwde
jecxz
inc
cli
mul
xor
test
jp
fmulp
ds
cmp
jge
and
mov
mov
push
rcr
aad
xrelease
movs
mov
and
adc
das
stc
ins
stos
popf
mov
adc
inc
out
and
xor
mov
les
sub
das
pop
loope
jge
cmp
add
sub
add
or
stos
inc
outs
add
fdivr
pop
mov
dec
dec
sti
cmc
cdq
scas
jmp
xchg
push
mov
dec
aad
test
lock
jo
sub
fmul
inc
mov
sub
push
scas
imul
pop
int
cld
fisttp
std
or
out
push
push
cmovne
je
push
add
leave
mov
push
push
xchg
inc
jmp
loop
sti
xor
in
pop
in
mov
lds
ror
fbstp
imul
nop
imul
ss
and
xchg
push
lods
sbb
out
inc
shl
pop
xchg
and
cmc
or
fiadd
mov
or
xor
mov
mov
cmp
iret
mov
mov
cmps
pop
adc
movs
sub
popf
push
xor
adc
jmp
into
sbb
jle
mov
je
mov
dec
cmp
adc
sbb
sbb
xchg
push
xlat
cmovp
dec
mov
lock
aam
in
mul
adc
fmulp
ja
fsubr
add
mov
pop
int3
sti
jno
mov
sub
or
sub
in
dec
je
pop
and
jbe
jae
dec
jg
push
xor
test
stos
ror
(bad)
out
sbb
ret
imul
cwde
sub
je
sub
add
cwde
lds
mov
mov
inc
mov
sti
sub
das
jge
inc
push
inc
mov
and
or
loope
and
addr16
loopne
adc
pop
mov
push
mov
pop
das
sti
cmp
fadd
xchg
aas
mov
inc
enter
fadd
mov
mov
(bad)
cmps
jl
dec
jno
jge
hlt
pop
xchg
jno
clc
les
mov
aas
lea
es
lahf
push
out
ins
loope
loope
jne
mov
in
push
test
mov
cmp
add
fild
jno
or
(bad)
xchg
imul
inc
sub
ret
inc
call
(bad)
repz
dec
cmps
inc
popa
push
and
and
into
or
lds
adc
adc
js
in
scas
bound
and
jecxz
das
sub
pop
push
rcl
fwait
pop
test
pushf
pusha
lds
or
fs
push
xchg
daa
aam
inc
add
xchg
jo
jae
inc
xor
add
adc
ret
mov
or
push
mov
jo
inc
lds
nop
in
in
inc
dec
inc
cld
jecxz
loope
adc
cs
daa
ins
mov
aaa
arpl
dec
cmc
mov
adc
inc
pop
lods
cwde
repz
cli
mov
cmps
jge
or
outs
fs
adc
(bad)
dec
in
dec
jl
cs
pusha
shl
ins
ja
popa
loope
sbb
dec
mov
and
rcl
jbe
xchg
aad
cmp
sub
cdq
cmp
std
icebp
cmps
adc
icebp
push
sub
pop
retf
dec
repz
push
or
mov
scas
mov
pop
sbb
add
in
mov
cmp
rcr
ret
mov
cmp
scas
fst
loop
fwait
cld
ds
cmp
dec
pmulhw
mov
ret
dec
outs
mov
and
(bad)
in
ds
sbb
test
retf
push
jmp
rcr
stos
mov
scas
or
push
push
sar
push
pop
mov
leave
imul
xor
mov
js
xchg
xchg
loopne
or
jl
pop
out
mov
push
mov
sbb
popa
push
jbe
adc
(bad)
leave
pop
sub
jmp
mov
pop
(bad)
imul
ret
mov
not
les
pop
and
sbb
jmp
mov
xchg
in
cmp
in
pop
mov
inc
jmp
inc
mov
mov
aas
in
in
ja
dec
inc
std
aaa
cmps
dec
xchg
outs
and
or
inc
gs
mov
xor
or
push
mov
adc
pop
push
sub
pop
shl
sbb
das
mov
inc
cli
and
das
getsec
jns
aas
fimul
mov
sbb
sbb
xchg
jo
cs
xchg
sub
lds
in
pop
sar
fst
mov
and
jb
xlat
test
dec
lods
(bad)
in
rcl
jae
(bad)
aas
inc
hlt
jmp
sbb
ja
scas
in
mov
push
pop
gs
(bad)
cmps
jmp
test
repz
or
test
lds
pushf
sub
cld
stos
push
sub
rcl
jl
loop
adc
sti
sbb
(bad)
mov
push
add
add
inc
sar
mov
ret
or
mov
or
add
(bad)
neg
mov
inc
pop
mov
std
pusha
call
out
(bad)
test
adc
aaa
mov
mov
arpl
lods
push
xchg
mov
jbe
inc
retf
in
sbb
aas
xchg
icebp
xchg
xchg
jb
pop
repnz
mov
push
pop
xchg
lods
lea
or
mov
mov
or
rol
dec
xor
fcmovnb
(bad)
xchg
into
add
sub
mov
and
pop
mov
cmp
fdivr
jns
cwde
or
popf
nop
cmp
pop
fist
call
lea
dec
mov
mov
das
(bad)
dec
dec
adc
mov
aam
jo
push
out
rol
jb
xor
test
sub
xor
mov
mov
mov
jl
outs
sbb
lds
mov
rcr
enter
in
cld
sbb
fisubr
push
lea
lahf
fdivr
out
pop
fbld
pop
inc
js
shl
rcr
cmp
dec
xor
add
stos
inc
push
mov
dec
cmps
cmps
pop
mov
xor
ins
ins
fxch
xlat
das
sbb
daa
jmp
sbb
fld
xchg
sbb
in
sbb
mov
cwde
jge
bound
ret
adc
pop
cmps
(bad)
stos
jecxz
push
dec
inc
outs
and
xor
inc
std
dec
call
cmp
ins
sub
sbb
sub
icebp
mov
add
movs
xchg
ret
xchg
jo
mov
jo
xchg
or
mov
cli
push
inc
mov
popf
cmp
push
push
inc
and
mov
jg
jne
add
jl
or
imul
test
inc
retf
sub
aad
xlat
xchg
fwait
out
jae
xor
or
pop
shl
jp
scas
or
xchg
and
lea
push
outs
nop
rcl
push
shl
mov
fs
out
xchg
loope
sub
adc
mov
aam
adc
push
sti
je
cld
inc
je
cld
int
or
inc
push
jnp
mov
ds
fstp
jmp
data16
and
lods
dec
mov
jbe
xchg
mov
shl
jmp
push
mov
je
imul
pop
daa
mov
xor
ret
ror
repz
fwait
and
mov
jmp
pop
jne
sbb
sub
xchg
pop
loop
and
rcr
(bad)
int
sub
dec
test
fsub
enter
mov
pop
push
nop
cmp
or
push
push
mov
adc
add
out
or
sub
movs
pop
mov
pop
sbb
call
xor
shl
out
(bad)
dec
lods
inc
(bad)
pop
xchg
mov
push
sbb
mov
dec
or
out
jl
mov
sahf
aas
test
fcomip
inc
and
je
inc
mov
das
retf
rcl
mov
sar
add
or
fisttp
dec
xor
imul
cmp
or
js
jmp
cmp
sub
mov
fisub
les
push
enter
scas
jo
fst
and
xchg
sub
or
mov
ds
xchg
call
jge
cmp
sbb
and
call
jge
loopne
cmc
call
cmp
ins
sub
push
ror
pop
unpckhps
(bad)
out
test
mov
ret
xor
icebp
adc
jmp
or
ins
lods
inc
shl
mov
stc
sub
cmp
arpl
sbb
xchg
sbb
iret
cs
xor
jmp
push
and
push
outs
add
mov
xchg
or
pop
add
fs
cmp
add
mov
jae
mov
repz
jg
adc
push
and
lods
mov
sub
je
lods
sbb
out
je
mov
lock
clc
aas
jle
test
jmp
mov
(bad)
loope
pop
mov
mov
lods
mov
pop
cli
jg
cmp
clc
in
fbld
out
call
test
repz
fsubr
in
mov
aad
pop
cmp
retf
adc
pop
cdq
xor
sahf
stos
or
sub
out
pusha
js
movs
scas
sar
adc
or
push
mov
(bad)
adc
cmp
mov
cs
inc
xor
jmp
cmp
dec
shl
(bad)
mov
jno
cdq
daa
push
pop
shl
inc
scas
jp
or
sub
sar
xchg
lea
loop
aaa
inc
ins
in
adc
je
bound
cld
mov
pop
pop
xchg
xchg
ror
push
out
adc
push
inc
test
inc
push
cmps
mov
push
xlat
(bad)
call
clc
cmp
pop
jl
adc
jns
add
sbb
or
and
add
(bad)
jno
xor
cmps
ficom
test
cmp
mov
inc
pushf
not
dec
js
clc
cmp
rcl
push
dec
test
ja
pop
adc
mov
xchg
(bad)
ficom
push
loop
jmp
add
xor
icebp
jmp
jg
fild
in
imul
js
pop
call
push
push
add
pop
imul
sbb
fist
xor
dec
inc
adc
push
imul
xor
add
jg
shl
sti
imul
addr16
mov
push
shl
mov
in
sub
mov
and
iret
int3
cld
mov
cmc
bound
cmps
add
pop
pusha
scas
cmps
and
xchg
(bad)
call
aad
test
push
push
shl
xchg
jge
cld
clc
jnp
pop
fucomp
and
cdq
test
cmp
xchg
addr16
das
adc
mov
sbb
mov
inc
test
sbb
inc
packuswb
hlt
jmp
inc
mov
mov
push
in
inc
pop
repnz
adc
int3
fiadd
ror
rol
jmp
inc
xchg
adc
lahf
outs
popa
mov
fnstcw
in
shr
jmp
jns
xchg
mov
push
repnz
and
sub
push
in
imul
and
jmp
mov
dec
sar
out
(bad)
hlt
mov
out
fsubr
int3
das
addr16
pop
ins
add
stos
push
push
inc
adc
pop
and
cmc
cmps
into
mov
cmova
arpl
dec
mov
fwait
popf
dec
fisub
or
ds
std
fisttp
call
stos
mov
dec
dec
inc
cmp
int
sbb
fdiv
(bad)
ins
imul
jle
ins
retf
adc
mov
pop
push
aam
imul
cs
jb
test
push
or
cmc
fsub
push
or
imul
cmp
int
(bad)
inc
add
pop
ja
jnp
sub
(bad)
sub
(bad)
nop
pop
shl
nop
rcr
sbb
jo
xor
cmp
arpl
inc
int3
jp
je
clc
dec
push
ret
nop
sub
mov
movs
iret
int3
mov
pop
out
loope
cmp
pop
cmp
into
loope
sbb
xchg
cmp
cmps
leave
adc
fwait
mov
or
rcr
fyl2x
pushaw
imul
push
es
or
mov
xchg
sbb
mov
mov
mov
jae
fidiv
xor
mov
or
sub
es
loop
pop
cmps
xchg
pop
movs
outs
retf
jnp
(bad)
pop
xlat
sub
lock
retf
div
jo
cmp
pop
adc
dec
aaa
in
adc
call
shl
cmp
jns
sbb
fmul
cdq
daa
jbe
mul
xchg
sub
inc
rcl
neg
add
and
add
mov
cs
mov
gs
jbe
mov
inc
push
push
dec
push
lahf
mov
loop
jp
jl
hlt
rcl
ret
dec
pop
mov
sbb
adc
gs
pop
cmps
xor
and
xor
outs
shr
fidiv
cmp
jl
xor
pop
or
adc
es
mov
dec
gs
neg
nop
(bad)
mov
aas
push
mov
arpl
mov
(bad)
xlat
call
jnp
mov
xor
enter
mov
push
dec
fcom
imul
dec
mov
sbb
mov
cmps
rcr
mov
scas
xchg
dec
iret
cwde
int3
je
inc
sub
adc
jge
stos
(bad)
int
loope
add
icebp
cdq
xchg
cmps
in
push
sub
popa
retf
stc
lods
adc
and
push
mov
mov
imul
enter
aaa
js
pop
call
inc
add
jmp
stc
dec
dec
pop
jmp
int
lea
or
mov
hlt
cmp
or
fwait
cmps
scas
sub
and
scas
cmps
cmp
xor
inc
mov
aaa
jae
clc
sub
push
xor
shr
or
popf
shr
jmp
std
dec
pop
xor
xor
outs
dec
sub
cmp
xchg
pop
not
mov
not
cdq
cmp
jnp
cmp
pop
sub
mov
sub
loopne
movs
stos
and
loopne
ret
ins
js
sbb
sub
sbb
(bad)
cmp
shr
repnz
addr16
jg
test
lea
not
jecxz
jecxz
shl
aam
jle
sbb
cmc
inc
push
xchg
mov
sbb
sbb
push
repnz
(bad)
repz
inc
push
shl
mov
sbb
ins
popa
movs
loop
loope
call
iret
lds
test
or
ss
sub
movs
shl
jmp
mov
int
add
sub
dec
push
lods
lds
jo
mov
mov
cmp
ficomp
xor
inc
imul
or
inc
mov
sub
imul
cld
inc
stos
repnz
sbb
jmp
lds
dec
icebp
out
add
cld
push
scas
je
out
dec
mov
ds
cmp
xchg
(bad)
mov
xchg
leave
pop
jnp
or
xor
in
pop
pop
and
(bad)
mov
stc
pop
jne
out
inc
shl
sub
jbe
cli
fwait
mov
dec
add
push
mov
int3
aaa
push
push
mov
inc
dec
push
(bad)
dec
and
dec
mov
and
dec
fstp
adc
cmps
int
hlt
jns
gs
and
sub
jo
pop
fistp
jle
cdq
movs
dec
out
xchg
jg
add
adc
ror
sub
jmp
mov
adc
jl
adc
inc
pop
xchg
jp
dec
jle
bound
cmp
jns
mov
xchg
data16
pop
and
lea
dec
jmp
(bad)
in
add
cmp
push
mov
xor
addr16
vmwrite
pop
cmps
and
push
dec
arpl
movs
mov
aam
ret
sti
loopne
sub
fwait
cmps
(bad)
mov
and
jb
jmp
cdq
inc
jo
xlat
jge
add
ins
pop
cmc
fcmovne
inc
imul
xor
inc
retf
rcl
add
xchg
jne
aaa
mov
pop
ret
lods
pop
pop
mov
mov
ja
cmp
push
cmp
cld
fist
xchg
jl
stos
lock
retf
fmul
mov
int
push
add
mov
mov
rol
inc
loope
or
cmp
stc
inc
gs
mov
jo
mov
out
xchg
push
sbb
sub
jno
push
adc
and
push
jb
(bad)
sbb
loop
pop
cmps
or
idiv
dec
or
pop
retf
push
ss
xchg
cdq
add
and
pop
cdq
inc
add
fist
mov
out
inc
sub
jbe
je
xchg
repnz
out
or
call
loop
jmp
dec
in
mov
inc
jl
stos
and
dec
add
xchg
stc
cs
pop
or
adc
inc
repz
test
repz
imul
rol
ins
jne
in
cs
(bad)
and
add
imul
adc
push
fwait
shl
xor
int3
arpl
ins
or
or
dec
xchg
inc
ds
ret
mov
ror
iret
(bad)
lds
sbb
inc
data16
dec
push
push
lock
xor
outs
mov
hlt
outs
or
imul
lds
xor
cmp
mov
sbb
mov
les
test
movs
pop
sub
adc
and
test
push
mov
retf
aas
int3
rol
cs
adc
add
sbb
out
lock
pop
retf
inc
sbb
push
mov
pop
sbb
retf
or
mov
dec
sbb
lahf
popf
movs
mov
dec
mov
shl
or
imul
fwait
add
pop
loop
xchg
inc
aas
sbb
push
push
cmp
std
cmps
aad
pop
mov
dec
pushf
sub
xlat
xchg
mov
dec
idiv
mov
in
cmp
rcr
lds
les
inc
jbe
xor
enter
pop
mov
sbb
pop
push
fcom
aaa
mov
popa
mov
jns
into
dec
movs
loop
mov
mov
pusha
cmp
fcomp
ins
xchg
mov
mov
and
mov
mov
ja
gs
test
mov
inc
mov
sbb
movntq
out
add
mov
enter
in
movs
xor
sbb
and
add
cli
pop
(bad)
jmp
pushf
adc
xchg
ret
mov
pop
mov
ins
ret
and
inc
or
enter
cmp
test
sub
clc
test
mov
xchg
inc
push
int
push
jne
cmp
mov
(bad)
push
(bad)
push
jae
sar
cli
ja
inc
shr
nop
call
adc
mov
lahf
pop
adc
inc
sbb
mov
out
fwait
repz
icebp
cdq
fbld
sub
push
mov
xchg
fdiv
inc
pop
clc
out
or
mov
iret
jp
in
xor
movs
pop
and
int
add
ror
push
dec
sbb
mov
and
rcr
mov
sub
ins
popf
xor
pop
(bad)
adc
fst
pop
push
mov
adc
test
cmp
call
clc
aas
xchg
or
mov
(bad)
xor
ss
jge
mov
push
mov
in
(bad)
and
xchg
jno
jecxz
std
popa
lahf
call
retf
sbb
pop
sti
push
mov
sbb
push
int
mov
test
dec
add
sub
(bad)
mov
mov
mov
cld
ret
in
sub
mov
sub
and
cmps
cwde
scas
ins
fisubr
sub
cmp
push
mov
mov
mov
cs
sbb
pop
stos
mov
test
xor
jb
(bad)
jmp
xchg
jg
call
(bad)
and
inc
xchg
dec
lahf
xchg
jecxz
xchg
imul
push
push
dec
inc
pop
stos
push
push
outs
jge
iret
movs
or
mov
mov
loope
dec
lock
xchg
mov
into
mov
mov
pop
popa
ss
mov
lock
push
stos
std
push
dec
mov
mov
pusha
cwde
test
pop
shl
push
mov
jnp
data16
adc
stos
(bad)
mov
popf
movs
pop
mov
cmp
xchg
or
fwait
sub
lahf
leave
cmp
sbb
pusha
pushf
pushf
pop
je
xor
push
mov
lds
add
push
or
adc
sub
iret
pop
scas
or
push
pop
mov
stos
mov
popf
int
call
mov
cmps
retf
xchg
sti
loopne
test
mov
mov
int
and
int
ror
sub
jne
daa
cmc
movs
mov
or
outs
mov
out
xchg
dec
pop
lahf
test
clc
dec
sahf
mov
mov
dec
pushf
loopne
daa
sub
inc
xor
cwde
inc
mov
push
add
out
ja
cld
or
mov
sub
adc
jb
enter
jne
mov
dec
pop
cli
jo
repz
sahf
and
and
mov
addr16
push
aad
inc
(bad)
cmps
gs
dec
pop
jp
pop
add
(bad)
int3
mov
cmp
xor
xchg
add
fist
loop
ss
cmp
leave
xor
sub
test
add
mov
mov
inc
ins
and
ins
jp
fisub
idiv
std
mov
push
fsubr
jmp
and
mov
and
inc
sbb
inc
les
mov
sbb
aad
inc
dec
dec
adc
mov
mov
push
imul
out
pop
enter
aaa
bndstx
jl
add
mov
jmp
mov
mov
fdivr
pop
adc
call
bound
neg
cld
(bad)
in
xchg
in
mov
mov
push
or
xchg
mov
sbb
movs
pop
(bad)
call
adc
leave
rcl
pop
jb
or
outs
out
or
ss
jnp
inc
mov
(bad)
and
xor
stos
add
add
retf
cmp
frstor
fldenv
push
lock
fisubr
sub
out
sub
cmp
fcom
or
add
movs
neg
cwde
call
fnstenv
cs
xchg
or
pop
jecxz
sbb
xchg
clc
mov
(bad)
xor
outs
sahf
icebp
adc
xchg
loopne
pushf
xor
retf
mov
call
icebp
sub
fnstsw
push
adc
add
das
int3
frstor
xchg
mov
fcom
sahf
retf
cmp
lods
mov
int
inc
adc
jae
inc
push
add
mov
xchg
std
sbb
mov
or
sub
pusha
loopne
sub
cmp
out
in
outs
aam
push
rcl
test
mov
inc
jbe
push
scas
lds
inc
aas
mov
xor
cmps
push
and
iret
or
jp
cmp
cld
sub
and
xor
add
mov
push
mov
ret
loop
cmp
pop
add
repnz
jmp
aam
push
(bad)
jb
sbb
sbb
mov
or
jno
xchg
sbb
xor
repz
scas
scas
mov
imul
clc
repnz
mov
mov
cwde
xchg
aaa
ss
stos
dec
xchg
call
jno
push
aaa
cmps
outs
test
xor
pop
cmp
jg
mov
jb
mov
stos
push
push
mov
jp
and
sub
(bad)
cwde
in
and
sahf
je
mov
sbb
push
inc
js
shl
cmc
daa
sbb
div
repz
push
scas
sub
mov
fnstenv
xchg
dec
inc
and
push
or
mov
mov
mov
ja
stc
and
sub
das
outs
retf
mov
jge
push
stc
cs
sub
icebp
ss
add
mov
xchg
cmp
mov
jl
sbb
lock
iret
add
sub
aam
icebp
sbb
mov
hlt
mov
dec
sbb
mov
and
dec
stos
(bad)
sbb
or
jo
retf
loopne
lea
gs
mov
xchg
and
mov
adc
sub
inc
sub
push
mov
xor
div
jmp
jmp
cdq
aad
mov
jmp
dec
inc
fist
push
outs
int
(bad)
pop
mov
mov
outs
iret
push
xlat
fs
leave
pop
push
or
jns
adc
fidivr
ficomp
xor
push
addr16
mov
popa
mov
sub
(bad)
stc
js
loopne
or
or
xchg
and
stos
sbb
xchg
mov
xchg
pop
(bad)
jmp
inc
push
jno
addr16
add
mov
lods
cmp
out
div
push
cmp
inc
sbb
xchg
std
fild
or
jns
xchg
xchg
add
popf
jmp
and
loopne
shl
jp
inc
fs
and
(bad)
in
push
sub
rep
shr
mov
dec
mov
pop
sub
lods
cmp
mov
int3
sub
out
inc
sbb
out
inc
pushf
xchg
mov
outs
repz
or
mov
scas
xor
mov
push
adc
or
push
xchg
(bad)
out
add
or
popa
cmc
mov
jle
xor
scas
pop
lahf
jg
dec
sbb
mov
movs
push
clc
inc
xor
xchg
dec
mov
xor
(bad)
cmp
mov
data16
cmp
std
push
je
clc
xchg
pop
call
jg
push
fist
loopne
daa
xchg
xchg
scas
jo
js
(bad)
xor
(bad)
inc
inc
test
and
sub
pop
in
xor
jbe
inc
sti
adc
iret
cmc
dec
fwait
js
cmp
mov
aad
mov
push
pop
sub
arpl
ror
ins
cmp
jb
ins
adc
sub
jp
loop
and
mov
outs
sbb
and
mov
dec
mov
or
pop
dec
int
movs
dec
stos
xor
mov
fcomp
(bad)
jne
mov
inc
pop
outs
movs
sbb
fwait
xchg
pop
sub
in
mov
pushf
mov
add
shl
les
xchg
mov
bound
cwde
fisub
xlat
call
push
and
fistp
cdq
loop
mov
mov
mov
rol
and
sti
jmp
fild
adc
icebp
pop
mov
dec
aam
push
mov
and
and
aaa
sbb
sub
pop
popa
lock
mov
dec
sbb
push
or
inc
js
xor
xchg
sub
loope
fst
ins
fs
add
mov
cmp
mov
div
adc
(bad)
jmp
loopne
mov
daa
paddb
sti
adc
push
jo
dec
fidivr
loopne
sbb
int3
mov
xor
pop
sbb
cmp
cmps
inc
fld
ins
push
push
out
jecxz
adc
lahf
sbb
sbb
cdq
test
push
and
mov
dec
sbb
outs
pop
jae
out
lods
jp
adc
adc
xchg
popa
inc
test
aam
push
sub
in
imul
aad
in
fld
push
mov
les
fisub
fs
scas
add
xor
pop
mov
and
push
dec
daa
dec
das
cmp
loopne
pop
mov
push
enter
or
dec
cmp
cwde
and
pop
push
dec
mov
or
xor
ror
adc
cwde
es
dec
js
sub
es
mov
xchg
aam
(bad)
sbb
inc
pop
out
loop
dec
pop
loopne
push
sbb
fnstsw
fstp
imul
pop
adc
jp
push
fild
dec
out
push
iret
jb
sbb
clc
call
out
into
pop
sar
xchg
cmp
sbb
push
push
das
xlat
es
int3
adc
sub
dec
pop
mov
jb
cmp
enter
xchg
cmp
pop
xor
into
adc
mov
lahf
cmps
and
aaa
cs
jbe
xchg
dec
jg
in
pushf
movntps
mov
sar
pop
lock
in
jecxz
mov
or
mov
test
or
cmps
mul
sub
mov
out
jmp
mov
xchg
ss
xor
jg
in
jg
jne
add
dec
retf
jp
sub
mov
jmp
mov
sbb
les
lea
jp
imul
mov
xor
cli
or
pop
cmp
push
dec
push
in
dec
outs
aas
data16
mov
and
aam
dec
test
div
xor
fcmove
lods
cmps
or
xor
int
je
test
pop
jb
es
jbe
mov
out
imul
mov
imul
mov
pop
jp
cdq
mov
int3
ficom
leave
mov
cdq
inc
mov
xchg
sar
or
mov
pop
gs
mov
pop
dec
fdivr
sub
inc
test
cmc
aam
add
adc
jno
mov
cmps
fstp
jo
enter
sub
nop
inc
clc
movs
sub
test
and
dec
loop
out
out
jmp
sbb
push
dec
inc
xchg
cmp
movs
mov
ret
and
data16
sbb
or
mov
or
(bad)
dec
add
sub
jmp
xchg
push
pop
int3
sbb
mov
(bad)
int3
je
(bad)
cmps
arpl
test
in
pop
push
add
fld
in
cmp
mov
ret
sbb
push
fdiv
mov
mov
test
fdiv
pusha
outs
dec
mov
sahf
repz
enter
enter
daa
and
fld
xor
mov
fadd
ret
inc
or
adc
jl
js
mov
data16
js
xchg
push
icebp
scas
or
sbb
push
jnp
mov
adc
jl
popa
sub
xchg
ret
xor
push
jecxz
lock
push
mov
mov
or
(bad)
fild
addr16
cmp
sub
std
mov
mov
push
jge
pop
fnstenv
mov
in
jb
add
(bad)
repz
(bad)
cwde
fcomp
xchg
mov
paddq
and
imul
push
addr16
pop
lahf
and
jmp
stos
mov
daa
add
add
loop
(bad)
lea
inc
mov
or
imul
mov
cld
scas
bound
popf
addr16
mov
rcl
mov
sbb
rol
es
(bad)
js
test
fbld
xor
or
pushf
sbb
jo
int3
repz
ins
neg
mov
jle
fs
xor
push
aaa
sbb
push
cmp
dec
test
mov
push
adc
ds
mov
and
ret
mov
in
clc
and
push
and
dec
sub
pop
fisttp
outs
call
mov
rcl
jmp
clc
adc
retf
cmps
scas
mov
add
mov
pop
fisttp
sahf
ret
dec
fldenv
js
xchg
dec
push
and
adc
shl
or
add
in
outs
ins
shr
ins
stos
imul
into
pop
jge
jae
outs
push
sub
mov
repnz
pop
int
cmps
sti
mov
inc
iret
out
(bad)
test
sti
lock
adc
ret
cmp
xor
or
mov
nop
pop
cmp
inc
mov
add
xchg
cmp
or
mov
in
outs
aam
sbb
push
and
jmp
outs
pop
shr
enter
cli
xchg
iret
jmp
pop
or
adc
inc
repnz
call
and
xchg
retf
ss
mov
cmp
repnz
(bad)
hlt
(bad)
ror
repnz
xor
lahf
mov
xor
sar
outs
sbb
outs
inc
sar
out
pop
cmp
out
cmp
push
int3
mov
fcomp
je
call
cld
and
lahf
inc
addr16
test
in
push
scas
xadd
rol
inc
xchg
scas
das
es
cwde
sub
jbe
(bad)
hlt
xlat
mov
push
addr16
in
fimul
xchg
sub
pop
js
jg
les
enter
sub
mov
aaa
lock
inc
nop
fidiv
je
in
int3
add
mov
jae
outs
jge
gs
mov
sahf
xlat
frstor
lahf
sub
leave
sub
push
movs
pusha
sbb
in
jge
(bad)
fcomp
test
ret
clc
or
shr
mov
mov
or
pop
xchg
test
pop
cld
xchg
and
in
mov
xor
stc
adc
add
loope
sbb
mov
nop
xchg
sub
dec
ja
mov
out
cs
int
ins
stos
cmc
mov
xchg
imul
xchg
mov
push
push
scas
and
cmc
push
shr
cmp
or
dec
sub
cmps
aad
and
mov
jecxz
shl
or
ret
jmp
jno
out
fist
mov
jae
scas
xchg
dec
jmp
ins
jle
ret
mov
cmp
push
mov
push
add
pusha
daa
xor
cdq
xchg
cdq
inc
jmp
(bad)
jae
sub
loope
in
adc
jecxz
jns
mov
sub
imul
and
jnp
xor
je
sub
das
shr
xor
pop
dec
mov
cmp
mov
repnz
ret
pop
cmc
clc
sbb
push
fisubr
mov
(bad)
lahf
add
or
adc
dec
jnp
add
or
xchg
jl
cmps
mov
icebp
sbb
dec
mov
clc
out
inc
dec
ret
and
pop
inc
jmp
jp
fnsave
mov
jnp
out
mov
jno
ins
fwait
leave
fstp
fnstenv
mov
push
fdiv
retf
(bad)
jae
mov
(bad)
push
jmp
push
cs
in
cmp
push
add
lock
stos
sbb
inc
inc
push
stc
mov
sbb
fnstcw
fwait
push
ins
(bad)
adc
xchg
loope
js
cmp
jno
dec
xchg
add
daa
jbe
stos
pop
iret
scas
push
mov
popa
(bad)
and
push
mov
leave
cmp
dec
and
cmp
int
dec
xor
(bad)
(bad)
cmp
bound
nop
jmp
adc
jne
inc
addr16
cmp
jmp
inc
test
sub
sub
mov
sbb
xor
cwde
sub
test
jns
cli
loopne
aam
fadd
pop
dec
and
mov
repz
dec
dec
sub
mov
jnp
pop
cmp
sub
mov
jb
lahf
(bad)
in
retf
fwait
stos
test
scas
and
lods
pop
in
std
adc
je
cmps
mov
fstp
jns
jbe
jb
and
pop
mov
pop
jae
jge
push
in
pop
mov
movs
and
pop
jnp
cmp
add
and
pop
(bad)
mov
xlat
mov
mov
and
jmp
scas
es
sti
mov
pushf
and
xor
and
sar
push
jmp
test
pop
xor
pop
sub
fwait
sbb
stc
and
cmp
shr
mov
lods
test
mov
sahf
mov
aaa
mov
mov
jo
or
lds
jl
mov
xchg
daa
sub
or
addr16
jl
test
adc
(bad)
out
dec
jo
pop
jmp
xchg
imul
or
popf
cmp
mov
mov
(bad)
mov
inc
lea
xchg
rol
xchg
loop
lock
outs
lock
sub
adc
repz
fcomp
mov
sbb
js
xor
add
lods
mov
sbb
add
js
mov
dec
jae
lods
sahf
or
aaa
pusha
adc
or
xlat
fstp
in
fisubr
retf
sbb
mov
xor
fdivr
sub
mov
imul
mov
lods
sub
lods
sub
mov
leave
loopne
adc
xchg
and
or
adc
in
push
cmp
scas
pop
icebp
out
mov
lahf
add
add
mov
push
adc
(bad)
das
add
ret
outs
inc
jp
stc
dec
mov
xchg
test
inc
mov
int
mov
xchg
fistp
jo
addr16
fiadd
push
adc
jmp
adc
nop
xchg
dec
lods
jmp
and
out
jl
fbld
push
xor
dec
cmp
sub
arpl
xlat
shr
lea
out
fld
das
and
jecxz
mov
mov
call
lea
into
jno
leave
lods
jo
scas
repz
or
dec
jb
cdq
xchg
push
int
sub
lods
mov
(bad)
sahf
pop
add
jb
dec
inc
test
pop
push
dec
mov
or
or
pushf
not
retf
popa
sub
xor
lds
test
push
outs
fsubp
and
pop
js
fadd
dec
ins
push
sbb
pop
nop
dec
clc
(bad)
mov
repz
dec
xor
je
dec
mov
push
daa
xchg
pusha
adc
adc
aam
fild
sub
ss
mov
rcr
out
mov
sub
mov
mov
adc
inc
stos
xchg
in
aas
and
test
or
popa
mov
push
retf
ins
inc
fcom
pop
aaa
sti
shr
mov
xchg
(bad)
xor
dec
lds
ret
add
lods
mov
leave
or
pop
mov
inc
sar
jb
xchg
enter
xlat
pop
fisttp
or
and
inc
mov
call
ror
data16
gs
mov
mov
test
pop
(bad)
dec
shr
jl
shl
and
test
jmp
aas
lods
inc
xor
sbb
cwde
cmp
scas
stos
jns
pop
mov
or
xlat
mov
inc
rcl
xor
or
jmp
push
adc
and
xor
adc
and
test
call
sub
cmp
sub
mov
inc
loop
xchg
push
(bad)
mov
rcr
xchg
stc
mov
(bad)
in
pop
iret
xchg
std
das
call
out
jl
xchg
mov
out
push
push
pop
test
mov
push
iret
popa
stos
push
outs
mov
xchg
fisub
xchg
sar
sahf
test
cdq
je
xor
or
imul
mov
add
test
xor
xlat
out
or
icebp
and
xlat
jbe
cld
repz
aas
cmc
adc
pop
cdq
je
(bad)
jecxz
jmp
vpshrdvd
pusha
ja
mov
add
xor
(bad)
jns
inc
sub
cmp
cmp
sub
mov
xor
push
rcr
rol
sbb
xor
(bad)
loope
xchg
shl
movs
stc
data16
inc
fs
sub
test
cmp
ficom
mov
mov
pop
out
push
adc
push
push
jae
cmpxchg
jne
sahf
cmp
pop
and
or
xor
clc
lock
cdq
mov
dec
mov
repz
div
hlt
push
push
push
and
cli
sbb
sbb
call
aad
jge
nop
test
xor
(bad)
loop
add
in
ret
loope
mov
cmp
fst
push
test
cmps
adc
aad
xchg
sub
fadd
xchg
cmps
mov
into
rol
pcmpgtb
sti
aas
push
cwde
ror
sahf
icebp
clc
or
cli
(bad)
adc
and
push
jp
cli
(bad)
repnz
call
shl
and
test
jne
mov
(bad)
and
sbb
adc
mov
xchg
or
cmp
sub
(bad)
fistp
lahf
nop
sub
cld
pop
adc
and
push
scas
fdivr
pushw
or
outs
dec
sbb
std
and
jns
mov
leave
loopne
gs
mov
ins
mov
fmul
mov
inc
pop
inc
ficomp
mov
cmps
cmc
mov
cmps
pop
xchg
imul
cmp
dec
push
pop
repz
mov
inc
cmp
adc
cmp
pushw
add
pusha
iret
retf
jmp
fstp
mov
push
dec
lea
inc
mov
jmp
int3
ins
rcl
(bad)
xlat
repz
adc
inc
add
aad
test
cmp
sbb
cwde
push
pop
out
fild
mov
iret
jg
fistp
fwait
out
push
mov
aam
retf
xchg
mov
addr16
loop
add
and
daa
mov
sub
mov
movs
sbb
(bad)
adc
dec
in
or
jmp
ja
fld
sub
pop
int3
pop
xor
jp
gs
fnsave
mov
cli
and
clc
mov
sub
and
aam
xchg
je
mov
(bad)
jbe
arpl
inc
in
repz
inc
call
fs
into
mov
cli
aad
pop
dec
rcl
aad
xchg
(bad)
neg
or
js
das
adc
jg
outs
push
pop
ss
sbb
aaa
inc
lock
cwde
and
cmp
jne
mov
push
std
or
mov
push
xchg
push
(bad)
xor
outs
(bad)
push
retf
or
(bad)
xchg
push
(bad)
mov
out
or
jno
icebp
std
cmp
xlat
inc
bound
adc
dec
jmp
pop
pop
or
inc
popf
and
(bad)
mov
rol
cmp
(bad)
inc
mov
add
retf
loopne
shl
test
and
push
aam
lds
add
sbb
mov
mov
ja
mov
lods
int
es
into
sub
inc
mov
mov
add
jne
mov
pop
pop
xchg
fs
adc
das
add
pop
jg
push
cmp
dec
js
add
dec
(bad)
aad
call
cmp
push
cmc
push
push
sub
mov
adc
dec
jp
jle
pusha
seto
mov
and
sub
std
inc
sbb
mov
popf
adc
daa
pushf
retf
addr16
ins
(bad)
mov
pushf
ins
into
test
push
and
jno
int3
scas
jmp
in
cld
mov
mov
dec
loopne
bound
sbb
sub
std
out
dec
out
mov
dec
neg
mov
mov
in
pop
cmps
pop
add
cwde
adc
arpl
shl
push
push
adc
jp
cmp
cmps
loop
jbe
and
xchg
inc
dec
mov
push
jecxz
shl
xor
push
stc
enter
std
mov
das
stos
pop
adc
repnz
mov
pop
stc
cdq
add
sahf
sub
push
iret
sahf
sub
int3
or
jmp
imul
pop
lock
pop
fwait
cli
cmps
pop
cmps
xlat
xor
push
xchg
jb
cdq
loopne
or
pop
mov
mov
int
jg
call
cld
call
outs
add
push
test
xor
or
sahf
jbe
jecxz
in
pop
in
push
outs
clc
inc
aam
rol
loope
add
xor
repnz
mov
dec
rcr
std
add
push
xchg
push
cld
sar
pop
mov
fild
or
mov
data16
add
pop
mov
outs
ret
sbb
mov
aad
cli
pusha
mov
outs
xchg
add
pop
add
mov
mov
clc
das
cmp
adc
and
fst
adc
mov
aaa
pop
cmp
mov
sbb
rcl
out
dec
popa
xchg
je
push
xchg
ds
or
gs
js
in
cmps
mov
call
mov
outs
pop
icebp
jl
shr
cmc
or
cmp
dec
inc
fstp
dec
dec
adc
cwde
pusha
dec
sti
shl
loop
les
in
(bad)
push
cmp
stc
test
mov
outs
dec
inc
push
fs
sub
or
clc
or
lds
push
vldmxcsr
test
adc
or
adc
psubw
xor
and
mov
test
xor
les
jb
imul
mov
pop
sub
call
sti
inc
ret
mov
scas
cli
xor
mov
mov
cs
shl
ins
jge
aad
mov
cs
pop
int3
ins
xchg
lea
inc
push
jno
scas
jmp
xor
and
movs
fisub
jae
cmp
dec
adc
adc
test
pop
push
and
cmp
rcl
mov
sbb
add
jge
jle
dec
mov
sub
add
add
inc
in
aad
push
xor
jg
cld
inc
out
mov
dec
les
fmul
sbb
mov
ret
sub
(bad)
fbld
enter
xchg
cmp
adc
xor
(bad)
and
sbb
mov
and
retf
jnp
inc
outs
mov
nop
inc
icebp
jmp
test
inc
scas
jecxz
ftst
jle
cmp
and
dec
ja
mov
neg
jp
je
imul
jmp
(bad)
je
and
mov
iret
jmp
add
push
or
ret
mov
movs
cs
mov
sbb
adc
xor
jge
clc
cs
jo
pop
test
call
fisubr
das
sar
sub
out
movs
mov
mov
push
and
xchg
lahf
xor
fucomi
fild
dec
mov
add
rol
jne
loop
rcr
xor
push
push
mov
enter
aad
fiadd
hlt
cmp
cmp
cmp
je
or
(bad)
and
icebp
pop
mov
mov
or
or
repnz
clc
dec
push
cmp
dec
or
cmps
cli
pop
scas
sub
pusha
dec
xchg
cmps
loop
out
add
leave
(bad)
mov
dec
push
jp
cs
cmp
cmp
cmp
(bad)
pop
mov
and
sbb
dec
cmp
mov
jmp
stos
fcmovbe
ja
inc
out
cmp
cmp
stos
xor
ret
push
adc
clc
test
mov
push
aaa
movs
mov
and
and
push
fadd
test
cmp
adc
xor
stc
bound
jle
rcl
ret
mov
loope
scas
mov
or
adc
jl
pop
xor
in
adc
pop
jge
xchg
push
ins
mov
xchg
bound
mov
cmp
stc
pop
or
pop
(bad)
hlt
mov
or
sahf
push
inc
rcr
popa
ins
cmp
ins
das
pop
in
scas
pop
add
or
sbb
pop
sbb
stc
mov
xlat
or
ins
mov
sub
push
mov
aad
sbb
das
(bad)
jo
cmps
adc
hlt
stos
aas
retf
cmp
add
dec
pop
push
or
(bad)
dec
scas
jno
retf
and
fsubr
jns
lods
shr
mov
sbb
or
mov
movs
xchg
lock
in
not
xor
dec
xor
push
mov
rcl
mov
loope
call
pop
aas
and
mov
es
stc
mov
ret
fld
jo
xor
adc
mov
cmp
outs
das
xor
mov
(bad)
pusha
fld
jae
add
into
mov
mov
push
pop
popf
stos
dec
adc
rol
rcl
in
sbb
mov
jae
fmul
lods
push
cmp
jb
jno
ja
imul
or
sub
popa
test
neg
lock
lea
ins
rep
fnsave
xchg
cmc
jne
je
mov
cs
fisub
leave
or
xchg
inc
push
xchg
adc
aad
mov
cli
ins
aam
gs
stos
aaa
xchg
xchg
or
fcom
movs
js
fmul
sub
xchg
mov
cmp
loopne
ror
ja
dec
rol
mov
inc
lods
sub
in
loope
jnp
aam
push
aaa
stc
outs
inc
call
lods
dec
jmp
adc
mov
or
scas
add
sbb
out
je
out
into
div
xchg
outs
adc
or
jae
mov
test
lds
test
cmps
cli
in
es
aam
push
xchg
lods
shr
test
inc
push
or
sub
adc
ja
popa
xor
sbb
jge
mov
xchg
je
shl
jmp
jp
and
push
jg
lock
dec
xchg
cmp
xor
stc
imul
cmp
(bad)
aas
(bad)
mov
test
ja
xor
cwde
cli
or
and
jl
adc
jns
int3
stc
out
retf
add
cwde
or
sbb
cmp
dec
xor
fld
lods
mov
lods
gs
add
xchg
cli
dec
add
out
nop
or
call
cmp
xor
(bad)
xchg
xchg
xor
mov
xor
adc
mov
out
repnz
je
scas
xchg
xchg
dec
or
and
popf
xor
cmp
mov
je
pop
xlat
ds
fwait
je
cmp
fimul
stc
test
add
out
shl
pop
inc
sbb
xchg
sbb
cmp
pop
jb
cmc
scas
inc
jo
sbb
mov
(bad)
cld
cli
dec
sbb
aam
shr
sbb
jl
fcos
and
sub
mov
mov
mov
jl
idiv
xor
push
pop
mov
sub
lea
fcom
fbld
push
movs
pop
sub
out
clc
inc
rol
sub
mov
mov
jecxz
xor
jne
or
xchg
shl
and
xchg
cld
add
jge
sar
inc
push
mov
dec
idiv
mov
movs
jo
pop
dec
cmp
mov
jp
jmp
add
cmp
movs
push
rcl
test
(bad)
nop
or
rcr
imul
icebp
hlt
xchg
push
cmp
fwait
pop
jg
retf
sub
adc
test
xchg
fucomp
fidiv
dec
int
iret
xchg
ret
jmp
icebp
or
cmps
in
mov
mov
dec
es
mov
dec
inc
bound
gs
push
cmps
mov
leave
cdq
fwait
mov
jmp
push
icebp
mov
or
inc
test
lods
cmps
test
and
cdq
mov
fcomp
std
sbb
adc
fnstcw
ficom
fstp
sub
push
test
ss
sbb
pop
mov
add
cmp
xchg
jmp
push
jae
out
push
(bad)
cmp
adc
add
aaa
xchg
mul
sub
sub
add
test
test
clc
and
cli
push
xchg
lock
fcomp
call
or
fwait
pop
dec
ja
int
fistp
into
and
dec
addr16
or
cwde
or
push
pop
dec
sbb
retf
inc
dec
fnsave
loopne
mov
sub
mov
scas
inc
add
mov
cmp
sub
call
and
cmp
scas
and
daa
cdq
int3
aad
cmp
and
ins
test
pop
xor
fistp
mov
mov
adc
cmp
cmp
inc
inc
dec
pop
aaa
and
test
and
xchg
push
scas
out
cwde
push
push
xor
mov
pop
push
sub
adc
mov
mov
ds
ins
xchg
(bad)
push
mov
adc
fdivr
shl
fldcw
popa
mov
pop
fdivr
mov
adc
push
scas
xor
in
stc
dec
mov
cmc
enter
loopne
adc
cmp
stos
fwait
ss
xchg
frstor
or
jns
cwde
inc
pop
inc
inc
pop
jae
ret
loope
lahf
test
push
lods
and
rcr
pusha
les
sbb
stos
and
pop
or
sub
loop
add
or
cdq
mov
fcom
push
push
icebp
aaa
push
push
inc
push
jp
es
out
or
ret
xchg
jecxz
pop
pop
jle
xchg
ret
and
xor
dec
leave
mov
pop
xchg
popf
mov
push
dec
fldenv
arpl
jo
out
mov
gs
(bad)
dec
add
cmp
fisttp
sbb
inc
adc
xchg
mov
mov
jnp
mov
je
test
cmp
daa
sub
inc
pop
adc
adc
test
scas
inc
pop
test
int3
pop
push
hlt
rol
dec
mov
pop
iret
mov
ds
jnp
imul
fnstcw
les
jle
aad
rcr
les
ja
popa
aaa
jmp
xchg
cmps
or
(bad)
cmp
rol
xor
inc
push
popf
inc
std
ud0
inc
dec
push
mov
(bad)
sub
jnp
test
inc
ret
sub
mov
call
push
js
push
sub
jo
lahf
arpl
nop
pop
dec
jmp
mov
nop
ss
xchg
fist
xchg
cmp
(bad)
retf
sub
call
out
pushf
dec
push
punpckldq
jl
xchg
or
ss
mov
pop
fisub
mov
dec
cwde
arpl
scas
(bad)
mov
and
xchg
push
push
inc
data16
xchg
cmc
neg
dec
jp
jo
xchg
(bad)
test
inc
inc
iret
call
nop
jne
or
xor
adc
dec
push
mov
cmps
mov
ins
pop
and
or
ret
fwait
push
or
retf
sahf
dec
push
scas
ror
mov
or
dec
add
nop
mov
mov
push
shl
addr16
data16
ins
jbe
push
sbb
jmp
scas
(bad)
punpcklwd
jmp
xchg
sti
call
mov
adc
cmps
add
add
lock
lods
inc
shr
push
ret
arpl
loop
mov
(bad)
add
jg
cmps
test
lods
mov
rol
cdq
mov
sbb
inc
or
call
dec
push
jbe
shr
out
cmp
adc
mov
or
mov
inc
jno
or
lea
mov
out
jae
xor
neg
aad
movs
cmp
push
sbb
xor
mov
inc
retf
jbe
inc
mov
mov
mov
push
xor
jecxz
jae
jg
sbb
out
loop
sub
hlt
call
daa
mov
int
and
adc
loop
pushf
xor
pop
lea
mov
popf
jge
pop
in
iret
ret
xchg
mov
sbb
adc
inc
gs
xchg
sti
ins
mov
sub
mov
or
push
and
inc
push
loope
lods
lods
jmp
aad
mov
out
sbb
mov
mov
mov
mov
sahf
push
jmp
mov
push
cs
add
inc
imul
sub
mov
jle
lahf
out
stc
scas
mov
jmp
ja
push
ret
add
xchg
out
aam
xchg
js
bound
xchg
mov
stos
scas
je
inc
mov
xor
add
push
shl
(bad)
rep
push
bound
mov
cmp
aam
xor
pop
push
stos
inc
ja
fnstcw
loop
mov
adc
sub
pop
ja
add
ss
xchg
mov
push
les
data16
dec
adc
daa
pop
ret
test
lea
mov
iret
xor
test
cmp
(bad)
hlt
sub
xchg
jae
test
sbb
cmp
stos
cld
repz
movs
jg
enter
cmp
iret
xor
out
xor
push
fbld
or
movs
test
aad
jl
fsubp
icebp
push
in
mov
jg
aas
pop
ret
leave
mov
cld
xchg
push
maxps
or
add
sub
aam
jle
mov
xor
mov
pop
or
pop
mov
jl
pop
sbb
imul
cmp
popa
in
std
xor
fs
add
out
test
mov
pop
cmp
sbb
mov
int3
retf
sbb
jle
mov
icebp
mov
mov
movs
ret
out
cmp
xchg
into
scas
mov
dec
mov
daa
retf
pop
(bad)
fdiv
jbe
movs
mov
stc
jecxz
(bad)
in
mov
adc
unpckhps
pop
cld
push
rcr
push
or
xor
mov
cmp
leave
pop
add
push
jb
sub
jmp
adc
aam
and
add
scas
out
fdivr
xchg
call
pop
pushf
lea
mov
lea
into
jmp
adc
dec
ror
ret
mov
rcr
push
or
jl
pusha
inc
sbb
xor
push
mov
sbb
shl
iret
ja
jno
cmp
mov
lock
fwait
add
fidivr
xchg
adc
xor
pop
mov
inc
aad
pushf
sti
mov
jg
(bad)
pop
jnp
cmp
fwait
xchg
in
(bad)
icebp
xor
cmp
push
xor
push
lahf
sub
sub
and
jge
ret
gs
dec
jmp
fst
cli
lea
push
test
jge
mov
ss
sahf
ja
data16
dec
pop
call
pop
xchg
pushf
dec
jp
int3
fisttp
jmp
jl
add
loopne
xlat
fs
xchg
cmp
push
sub
cmp
pop
stc
leave
xchg
and
mov
pop
push
add
stc
and
int
or
bound
movs
push
pop
and
push
aaa
dec
imul
inc
mov
aam
int
push
add
js
aam
adc
cmps
inc
cmp
lahf
in
or
or
gs
xchg
test
jb
or
in
sbb
shr
sbb
outs
mov
imul
int3
stos
jge
add
xchg
(bad)
sub
xchg
mov
ds
jb
and
jo
jbe
or
inc
into
cs
jne
or
std
ins
aam
loopne
test
cld
gs
cmp
pop
jbe
imul
es
movs
out
add
shr
sub
xchg
cmc
out
ret
mov
sub
fdiv
sub
repnz
inc
lods
aaa
sub
bound
into
adc
mov
cdq
push
pop
cmc
scas
fnstcw
es
in
sbb
es
pop
mov
dec
adc
jnp
push
fs
push
mov
in
imul
mov
sbb
cs
jae
add
imul
push
dec
jecxz
movs
not
lods
push
xor
xor
sbb
inc
lods
xchg
rcr
push
retf
stos
clc
shl
jmp
lods
data16
dec
push
and
lock
or
xchg
dec
add
in
movs
pop
dec
lock
jno
mov
ins
pop
xor
xor
xchg
retf
leave
xchg
aad
gs
cmp
clc
arpl
stos
stos
and
push
mov
sub
mov
push
xor
push
sbb
push
nop
mov
neg
cdq
data16
push
xchg
ds
leave
push
or
(bad)
jmp
inc
(bad)
or
stc
add
xchg
and
mov
gs
jae
dec
leave
cmp
inc
push
mov
shl
inc
sub
cdq
in
aad
aas
sbb
stos
or
js
or
xchg
fnstenv
xchg
lds
sbb
and
xor
es
lock
dec
xchg
sar
mov
cli
xor
jb
inc
jge
push
rol
fcomi
jae
sahf
xchg
jb
call
in
lahf
add
jge
jle
std
mov
cmp
repz
or
(bad)
(bad)
mov
test
pop
ret
mov
stc
pcmpgtw
xchg
(bad)
int3
sar
imul
aam
or
js
test
and
div
dec
mov
mov
ror
mov
xlat
cmp
adc
xchg
jnp
daa
adc
jle
adc
cmp
add
sar
inc
(bad)
rcl
fld
mov
enter
rcr
mov
lods
pop
xchg
adc
fisttp
xlat
adc
icebp
cmp
aas
cli
push
and
dec
xchg
aaa
std
and
jmp
mov
repz
add
lods
int3
xchg
push
test
inc
dec
shr
and
xchg
push
repnz
inc
fist
scas
lock
add
pop
imul
jmp
fwait
ins
jbe
mov
push
or
and
fwait
es
sub
(bad)
(bad)
ss
cli
push
jge
xor
repz
retf
jg
cmp
call
or
aad
rcl
mov
and
nop
bnd
lods
sbb
je
cs
and
add
es
pop
cmp
xchg
adc
add
shr
icebp
ret
addr16
movs
xchg
sub
mov
add
xchg
in
imul
movs
into
xor
jae
push
pop
iret
mov
mov
mov
push
add
imul
jo
jnp
mov
push
sbb
rcl
hlt
(bad)
push
xchg
pop
xor
jp
adc
push
cmp
inc
ss
shl
cld
xchg
jp
jecxz
xor
push
mov
in
rol
lods
aam
shl
js
pop
and
sub
adc
or
(bad)
jmp
int
cmp
xchg
outs
(bad)
in
int
push
sbb
add
cmc
pusha
adc
daa
mov
cmp
or
xchg
jbe
pop
addr16
sub
cli
sub
dec
pushf
lods
(bad)
jmp
and
in
aaa
pop
push
adc
pusha
xor
call
cld
retf
std
mov
pop
hlt
mov
add
mov
push
loopne
adc
lock
jl
movs
test
xor
xor
xor
jne
clc
mov
out
fdiv
sub
dec
jl
inc
mov
pop
mov
cmp
addr16
popa
jmp
loope
inc
js
lea
add
pop
sub
fidivr
cmp
pushf
stos
xchg
jmp
jo
pusha
movs
jb
and
cmp
repz
mov
mov
mov
mov
adc
inc
fs
jg
xchg
aaa
add
retf
cmps
stc
out
jno
push
cmps
mov
aaa
outs
in
mov
inc
jl
xchg
lds
sub
sub
scas
mov
mov
sub
jp
imul
add
hlt
fwait
xchg
cmps
xor
imul
lock
loop
out
imul
or
xchg
fild
int3
cmp
ss
jl
sbb
out
dec
push
xchg
loop
and
jle
sbb
fild
vmovd
pop
mov
aad
mov
fst
mov
add
jle
jecxz
out
out
sub
(bad)
rcr
add
cs
jns
add
ficom
out
xor
sub
mov
and
or
loop
retf
aaa
push
push
push
data16
mov
mov
mov
jecxz
mov
jge
bound
scas
mov
pusha
xor
add
in
scas
jnp
push
mov
shl
and
sbb
js
ja
push
xchg
imul
mov
dec
fs
enter
icebp
jnp
xor
in
sbb
cmp
inc
sahf
es
cmp
adc
stos
inc
pop
xor
pop
mov
adc
inc
push
adc
test
mov
adc
sbb
inc
call
mov
in
xchg
or
jno
xor
pop
xchg
cmp
jno
loope
sahf
inc
lods
ja
xchg
bound
and
movs
and
ja
inc
dec
dec
add
push
cwde
adc
enter
fsub
int
xor
jecxz
jmp
out
xchg
fild
in
call
pop
sbb
cli
mov
and
pushf
mov
pop
addr16
call
add
add
sti
xchg
push
ins
add
sub
mov
pop
mov
pop
push
cld
push
scas
fisttp
mov
xor
cmps
mov
mov
and
mov
fwait
cmp
js
clc
xchg
nop
push
sub
inc
aaa
jno
jp
andnps
mov
xor
sbb
sbb
jb
mov
mov
nop
in
mov
lds
sar
cmps
dec
dec
stos
add
fs
leave
mov
push
(bad)
int
lock
mov
xchg
and
je
mov
mov
xlat
xchg
sahf
daa
cmp
and
add
jle
div
mov
mov
adc
stos
inc
call
repnz
not
dec
je
je
hlt
jo
pop
cmc
lods
xchg
push
fistp
dec
pop
mov
out
iret
xchg
repnz
or
pop
int
mov
lock
in
test
stc
add
push
inc
lahf
icebp
fnstenv
push
out
imul
sub
ret
or
mov
pop
mov
(bad)
dec
popf
cmp
pop
cmp
adc
movs
fwait
adc
repz
pop
imul
or
pop
clc
cli
shl
cmp
mov
mov
fst
dec
mov
xchg
or
dec
dec
adc
adc
jecxz
sub
(bad)
rcl
or
jp
lods
pusha
lods
xor
test
cmp
add
and
nop
adc
movs
sbb
and
jg
(bad)
or
inc
stc
mov
mov
xor
jmp
or
rcr
push
cmp
jl
es
aad
test
bound
jg
xchg
mov
pushf
(bad)
rcl
pop
or
inc
mov
lea
ror
out
cmp
xor
mov
push
mov
inc
sbb
ins
test
jne
fcom
repnz
jge
mov
push
lahf
pop
loop
push
pop
push
ret
imul
sbb
pop
or
stos
out
shl
int
out
das
test
bound
ds
movs
call
(bad)
ins
inc
inc
inc
pop
add
add
div
(bad)
jno
and
add
xor
test
and
std
mov
or
push
add
sar
mov
pop
mov
adc
fstp
fs
mov
push
sub
pop
popa
test
add
stos
add
mov
adc
add
ds
lods
cmp
push
cmp
into
push
pushf
jecxz
loopne
push
xchg
pop
arpl
and
ror
mov
xchg
outs
dec
jne
xor
jge
cmp
cdq
sar
xchg
inc
clc
test
daa
cmp
jb
retf
pop
shl
push
xlat
dec
ret
pusha
ror
dec
inc
sbb
sbb
push
mov
jmp
repnz
jl
outs
into
pop
jo
out
aad
sub
ret
push
add
sub
sub
cli
mov
lds
inc
cmp
jo
jno
mov
fs
fcomi
sub
mov
lock
js
push
and
xor
pop
mov
loop
test
fcomp
and
or
jb
adc
push
pusha
fldcw
int3
loopne
lods
movs
in
fwait
or
and
cmp
mov
cmp
mov
mov
dec
inc
mov
pusha
cdq
arpl
sar
popa
stos
fmul
outs
pop
jmp
pushf
call
pop
sub
das
cwde
imul
or
push
jb
je
jno
push
ret
sbb
test
jp
adc
test
cld
adc
mov
xchg
es
popa
push
test
push
pop
in
push
call
adc
xchg
mov
lods
inc
mov
xlat
cld
pop
cdq
mov
rcl
imul
mov
sub
mov
fiadd
xor
lds
popa
(bad)
jmp
pop
dec
push
mov
cld
test
mov
pushf
movs
xchg
mov
xchg
mov
add
in
push
loopne
xchg
or
or
(bad)
lds
pop
std
daa
repnz
mov
jnp
or
cdq
push
test
mov
sub
mov
cmps
mov
xchg
push
outs
inc
push
fld
rcl
mov
cs
xor
xor
in
je
aas
in
mov
xchg
cmp
dec
jno
aaa
cmps
mov
fwait
shl
jecxz
cmp
mov
cmp
test
mov
cmps
and
xchg
vpshaq
inc
jo
ins
jo
pop
fcom
xchg
adc
inc
xchg
stos
cmp
pop
inc
or
dec
pop
out
inc
mov
jne
aas
popa
xchg
and
movs
out
cmps
xchg
cli
pushf
mov
and
adc
add
ss
mov
gs
nop
adc
or
(bad)
mov
mov
(bad)
loopne
dec
fisubr
xor
idiv
xlat
pop
hlt
cmp
into
adc
cdq
rol
mov
xchg
enter
(bad)
in
outs
or
test
lock
mov
retf
retf
xchg
shr
rcl
mov
pop
mov
fsubr
fnstenv
rol
sub
or
cmp
(bad)
mov
mov
fyl2xp1
sbb
jns
push
xchg
xor
jae
mov
mov
ss
mov
push
fcom
add
push
adc
mov
and
mov
nop
pop
imul
add
mov
mov
add
mov
int3
call
mov
icebp
test
(bad)
scas
out
call
add
out
and
mov
mov
adc
or
lods
test
xchg
aad
(bad)
xchg
out
or
mov
loop
sub
sar
jl
xor
sbb
mov
or
(bad)
or
jmp
sub
cdq
scas
pop
push
jae
lods
es
pop
mov
arpl
loopne
cmp
daa
push
sub
int
aaa
jp
fisttp
push
sahf
mov
stos
push
addr16
cmp
mov
adc
iret
dec
(bad)
outs
cmp
pushf
cdq
jns
stos
out
cmp
inc
call
mov
cli
mov
leave
and
ret
retf
adc
pop
and
mov
int3
or
or
push
test
add
ret
mov
mov
scas
lods
(bad)
push
test
div
add
push
sti
cwde
push
std
popf
and
or
ficom
push
and
aaa
push
ficom
dec
push
cs
push
ror
xchg
movs
jbe
std
xor
jl
daa
in
and
inc
pop
add
xchg
std
mov
xor
mov
pop
loopne
inc
icebp
fisub
dec
pop
xor
sub
add
and
push
xor
dec
xchg
add
push
out
cmp
xchg
je
mul
enter
test
jmp
mov
loope
rcr
inc
ins
sahf
mov
lds
sti
mov
sbb
std
or
and
int
push
ror
jmp
or
inc
sbb
hlt
rol
adc
sbb
int3
aaa
lods
pop
pop
sub
xlat
xor
and
hlt
adc
arpl
std
or
inc
jmp
sub
out
dec
cmp
inc
dec
mov
enter
inc
(bad)
fld
cmp
adc
pop
xor
ja
mov
data16
adc
adc
mov
(bad)
je
cmp
jbe
test
mov
movs
les
sbb
mov
in
call
les
mov
ror
xchg
xchg
data16
(bad)
fdiv
mov
mov
xor
xchg
sbb
leave
jmp
std
loope
pusha
push
(bad)
cmp
not
mov
lds
fisubr
jno
jmp
push
xchg
mov
repnz
inc
sub
add
xchg
xor
(bad)
xor
and
xor
cmp
mov
mov
outs
test
cdq
and
idiv
or
pop
add
sub
or
dec
cmp
jns
or
std
mov
scas
retf
shr
xchg
stos
rol
(bad)
mov
add
jne
sti
jmp
or
push
jo
sbb
movs
push
mov
test
adc
add
and
pusha
cmp
ins
inc
pushf
or
jmp
and
xlat
adc
jp
pop
xor
ins
inc
retf
mov
mov
(bad)
xchg
sub
pop
push
fwait
jo
loopne
inc
loope
test
jp
pop
pop
sub
mov
sar
je
fnop
btr
(bad)
retf
jae
retf
fisub
mov
data16
mov
mov
push
adc
pusha
ffreep
ss
gs
bound
push
int3
(bad)
arpl
in
push
nop
sbb
xor
mov
nop
das
cmps
inc
xor
in
test
cmps
pop
cmp
sbb
fild
xor
adc
xor
cdq
jmp
or
xchg
sub
cmps
loopne
adc
push
cmp
mov
pop
cs
mov
outs
enter
and
jp
retf
pop
push
xchg
movs
add
mov
dec
cmp
dec
add
pushf
out
ss
imul
inc
xacquire
jmp
xor
fimul
pushf
cld
(bad)
fstp
cmps
jecxz
outs
aad
pop
aas
xchg
cs
int
or
or
movs
and
das
mov
mov
dec
movs
sub
mov
(bad)
fimul
call
cmp
mov
xor
and
sbb
shl
or
sahf
ds
sbb
add
out
je
mov
lea
leave
dec
and
lahf
loop
int3
imul
test
mov
dec
mov
jne
inc
sub
fistp
xchg
sbb
cmc
into
popa
or
mov
jle
mov
mov
add
jecxz
loope
rol
inc
cmp
leave
cmp
jbe
add
sti
push
into
in
adc
push
mov
stc
cmp
cmp
push
adc
push
imul
pop
mov
sub
std
mov
retf
gs
xchg
dec
leave
ins
push
mov
xchg
pop
cdq
adc
hlt
mov
aas
retf
outs
enter
dec
dec
aam
js
push
jo
push
loope
sbb
or
xor
push
std
xchg
ss
retf
sub
add
cmp
push
adc
push
xchg
pop
outs
cmps
popa
add
xchg
rol
iret
push
ja
(bad)
mov
ins
and
fisubr
jnp
push
cld
mov
(bad)
call
adc
cmp
lea
push
mov
pop
xor
inc
adc
xor
adc
pop
clc
jp
in
cld
and
push
mov
jo
push
mov
mov
sub
rcl
in
push
inc
jns
mov
mov
shl
dec
pop
mov
jae
loopne
in
outs
cwde
jne
cs
sbb
pop
fdivr
test
sbb
add
inc
pusha
dec
mov
jno
pop
jmp
fcmovne
aad
mov
shr
lods
and
sbb
mov
sub
inc
lea
out
out
push
cdq
sbb
push
fist
fstp
mov
adc
ror
xor
xchg
pop
xchg
push
(bad)
ins
sbb
ins
xchg
mov
xor
pop
pushf
or
mov
dec
pusha
hlt
in
xor
popf
mov
inc
test
retf
push
or
push
inc
sub
pop
shl
outs
xchg
ja
cli
loop
push
push
outs
adc
bound
test
add
and
gs
loopne
pop
daa
into
sbb
(bad)
in
mov
fwait
or
add
rcr
pop
cwde
retf
jle
in
fidiv
adc
jecxz
xchg
push
loopne
mov
daa
pop
fstp
add
data16
inc
mov
es
sub
and
je
cmps
mov
bnd
push
mov
or
in
mov
and
mov
cdq
loop
dec
aas
pop
pop
sub
stos
retf
fnsave
xchg
cdq
dec
and
xchg
or
and
jmp
mul
fadd
dec
out
push
call
std
aad
jb
movs
add
push
cmc
scas
push
mov
mov
push
sbb
prefetch
jmp
inc
add
xchg
rol
mov
push
mov
mov
(bad)
cdq
cmps
jle
fldcw
shl
jo
ss
sbb
pusha
jo
aad
nop
cmps
out
xor
pop
dec
loopne
pop
jb
xchg
push
adc
loop
(bad)
xor
mov
mov
les
lods
lods
pop
xchg
and
shl
fbld
ds
gs
fcom
sub
jae
xchg
(bad)
call
pop
imul
sub
inc
outs
test
mov
enter
or
pop
mov
adc
mov
mov
sti
(bad)
push
mov
dec
out
fmul
outs
sahf
sbb
jb
mov
sbb
idiv
xchg
ss
or
inc
cmp
jbe
test
and
ret
fistp
movs
mov
push
cwde
or
popa
ins
push
scas
add
leave
shl
sbb
push
mov
ins
xchg
jae
push
cli
xor
(bad)
mov
jmp
xchg
mov
push
popf
xor
lock
jmp
loop
addr16
aas
adc
cmp
dec
ret
mov
and
fst
add
xor
imul
test
sub
jmp
call
mov
mov
in
mov
push
(bad)
push
scas
scas
leave
jnp
add
mov
pop
adc
xor
cwde
fidiv
and
sub
add
inc
push
push
lahf
or
nop
sar
sbb
pop
aam
aas
mov
mov
pop
jp
aam
sub
add
sub
fcomip
add
pop
mov
retf
icebp
icebp
outs
cmp
retf
and
(bad)
sbb
xchg
out
sbb
in
(bad)
xchg
sub
dec
(bad)
fiadd
fisttp
fwait
arpl
sti
or
push
jnp
shl
shl
sub
cmp
(bad)
call
mov
push
push
mov
mov
inc
and
xor
mov
setge
ss
leave
push
mov
jmp
cli
in
jb
dec
mov
rol
push
and
push
fst
call
sbb
add
mov
or
lds
inc
mov
sbb
pop
test
mov
and
cmp
dec
(bad)
cmps
retf
jge
bound
xchg
push
stos
loop
adc
inc
sahf
pop
arpl
pop
jae
xor
aas
lea
xor
push
add
cli
cmp
aaa
pop
push
mov
jno
inc
add
push
jmp
ds
out
mov
imul
leave
adc
(bad)
pop
mov
push
and
mov
mov
pop
mov
mov
int
shr
xchg
jb
push
mov
cwde
inc
adc
add
mov
hlt
dec
jae
fs
not
test
sub
mov
xchg
idiv
adc
inc
adc
add
inc
add
cmp
add
bound
ret
adc
inc
fld
inc
sub
jp
push
rcr
xchg
inc
push
push
adc
xchg
mov
retf
mov
or
out
push
cmp
ror
icebp
cmp
mov
ficomp
scas
push
or
retw
adc
cdq
inc
mov
mov
push
mov
es
push
call
shr
(bad)
cmps
inc
cmps
(bad)
call
arpl
mul
adc
mov
push
xor
sub
sbb
mov
stc
xchg
stos
mov
xchg
inc
retf
pop
add
jecxz
sub
mov
int3
ds
xchg
sub
pop
loopne
sub
xchg
xchg
mov
sub
xchg
mov
out
popa
rcl
dec
rcl
ret
mov
div
mov
lds
int
mov
lods
(bad)
or
mov
jne
mov
in
adc
and
mov
mov
and
or
das
dec
aaa
cdq
pop
retf
push
mov
adc
mov
fsub
mov
mov
imul
xchg
cmp
xchg
aad
jno
test
loopne
enter
gs
out
pop
and
(bad)
jne
or
sub
test
sbb
mov
lds
ret
or
hlt
mov
pop
hlt
stos
inc
repnz
out
inc
not
mov
sbb
cmps
or
xchg
aaa
sbb
popf
aad
push
xlat
int3
daa
(bad)
fs
and
adc
sti
in
(bad)
and
cmp
je
ret
pop
mov
loope
daa
sti
push
cs
(bad)
mov
dec
ret
fdivr
push
jmp
sub
mov
and
imul
in
or
(bad)
cli
icebp
add
push
push
fiadd
sub
(bad)
out
(bad)
mov
push
or
mov
sub
mov
jne
adc
and
dec
ja
jl
aam
leave
pop
sbb
inc
and
aaa
and
imul
inc
push
mov
(bad)
not
mov
arpl
inc
pop
(bad)
lods
out
jno
bts
cmps
imul
and
sub
das
sbb
das
test
shl
es
adc
stc
adc
sbb
add
inc
or
jl
mov
retf
sbb
mov
or
adc
and
mov
dec
(bad)
outs
mov
nop
mov
in
shl
or
into
mov
push
sbb
push
sbb
jle
pusha
in
mov
inc
(bad)
cmps
mov
push
(bad)
sub
aam
xchg
in
jne
call
(bad)
retf
shr
mov
sub
mov
cld
rcl
fmul
add
push
jmp
lahf
mov
lods
fs
iret
push
push
int
jbe
xchg
mov
(bad)
std
iret
xchg
or
(bad)
push
xchg
lds
call
(bad)
ja
push
pop
retf
mov
test
mov
rol
or
mov
adc
add
iret
push
std
or
xchg
and
dec
imul
dec
js
mov
fnstsw
test
aas
lahf
and
loope
and
addr16
dec
xchg
mov
cmp
in
sub
cli
mov
or
push
loope
out
shl
mov
cli
mov
idiv
les
mov
push
add
xchg
xor
repnz
add
dec
fdivr
ds
inc
ret
movs
or
retf
or
push
movs
(bad)
jnp
pop
cmps
cld
fldlg2
(bad)
iret
lods
mov
je
js
push
icebp
movs
add
jmp
adc
les
xor
jns
fwait
mov
leave
adc
xchg
jno
fnstsw
sub
retf
sbb
sbb
es
add
sti
in
jb
in
mov
ins
loope
iret
jg
rcr
sub
add
pop
xchg
sar
das
loop
mov
mov
sti
pop
lds
jns
adc
mov
pop
adc
or
cmp
mov
inc
inc
stc
jmp
(bad)
rsm
adc
test
push
mov
mov
jns
pop
jmp
dec
pop
mov
in
scas
mov
push
es
adc
nop
mov
stc
push
xchg
mov
mov
inc
sbb
lock
dec
(bad)
movs
push
fcomp
int
jb
mov
pop
call
inc
mov
in
fsub
jo
stos
adc
adc
cs
in
loop
jle
dec
adc
fsub
pushf
mov
push
jl
xlat
scas
dec
adc
iret
mov
xchg
cmps
(bad)
xchg
jp
ror
mov
(bad)
mov
dec
xchg
add
gs
enter
adc
pop
pushf
gs
jle
push
jg
lods
and
add
mov
pop
ja
(bad)
outs
out
adc
cmp
xchg
js
pop
retf
sub
inc
sbb
les
jge
jmp
pop
das
push
xchg
ss
inc
jl
push
scas
and
pusha
inc
dec
mov
xor
scas
fild
push
ret
cwde
int3
aas
push
jp
loope
ins
adc
jno
lds
sbb
ins
pop
pop
inc
xchg
adc
in
movs
xchg
sbb
stc
push
dec
adc
ficomp
in
jb
jb
outs
bound
mov
add
pop
push
scas
pop
test
or
lds
jle
or
scas
mov
jbe
ss
cmps
push
(bad)
std
sbb
jae
sub
loopne
mov
jns
and
out
sub
clc
dec
aam
arpl
lods
mov
jo
rcr
dec
retf
je
xchg
jle
sbb
imul
push
push
adc
(bad)
cld
popa
int3
jmp
mov
sbb
sbb
and
cmp
pop
and
aad
pop
mov
xchg
push
(bad)
and
xor
cmp
sub
aad
nop
jg
shl
mov
mov
adc
mov
push
jp
loop
jl
in
lods
inc
rcl
stos
hlt
in
fwait
xor
loopne
push
push
outs
sti
pusha
and
bound
pop
lock
js
mov
sub
jl
push
xor
pop
or
sbb
inc
(bad)
sub
mov
xchg
push
test
clc
push
in
inc
test
mov
mov
call
cwde
xchg
inc
or
(bad)
sub
enter
ja
mov
cld
test
mov
out
sar
xchg
cmp
outs
mov
rol
push
xchg
aam
mov
cli
outs
js
sahf
inc
jg
push
popa
mov
aas
aad
sbb
mul
aad
sti
inc
cld
jae
sar
out
popa
icebp
or
call
daa
out
int3
ret
mov
les
outs
sub
nop
leave
aas
ins
neg
mov
in
cmp
pusha
mov
fmul
cmp
inc
push
in
retf
sbb
ins
cli
les
pop
jl
push
loope
push
xchg
adc
fwait
jae
sub
std
in
hlt
adc
in
push
aad
jno
xchg
sub
sub
imul
pop
jp
dec
aam
mov
xor
mov
push
fcomip
inc
xlat
icebp
enter
ins
dec
imul
xchg
es
xor
(bad)
test
sar
and
jne
add
bound
jno
xchg
das
xor
push
sbb
stos
mov
xor
add
(bad)
adc
add
es
inc
pop
xchg
or
in
cmp
push
xor
fldenv
in
aas
in
or
test
fwait
lods
jmp
xor
std
cmp
adc
dec
xor
add
pop
in
xchg
js
pop
xlat
pop
add
movs
sbb
not
jns
idiv
jl
aaa
mov
(bad)
dec
call
sahf
mov
sbb
sub
sub
xor
jge
sbb
mov
loopne
or
icebp
dec
je
loop
in
pop
mov
push
xchg
push
xor
push
xorps
mov
ds
daa
adc
gs
loope
das
inc
lahf
fsub
mov
push
pop
loop
lahf
bound
ret
imul
iret
(bad)
xor
xor
xor
xchg
pop
pop
cmp
mov
sbb
cmp
test
jo
push
out
in
or
mov
mov
xor
fsub
in
(bad)
mov
test
lea
cmp
fld
retf
dec
mov
pop
xchg
int3
mov
out
push
xchg
xchg
std
stos
lock
xchg
std
mov
xchg
hlt
popf
and
cld
mov
mov
jle
loop
(bad)
(bad)
push
cwde
lds
dec
pop
push
scas
jecxz
dec
dec
jmp
(bad)
xchg
cmp
pop
call
and
push
xchg
loop
mov
popf
jmp
jnp
shr
dec
mov
add
dec
call
xchg
popa
sub
iret
rcr
test
std
arpl
mov
arpl
pop
das
push
mov
ins
in
ins
inc
nop
dec
outs
adc
or
mov
ret
dec
test
push
xchg
xchg
push
lods
pop
push
and
(bad)
jo
sub
xchg
sar
in
pushf
sti
jnp
adc
retf
inc
retf
dec
cmp
cmps
add
add
lods
adc
cmp
adc
aas
fadd
add
and
into
adc
stos
and
mov
sbb
sbb
xor
jmp
push
nop
test
xchg
in
rcr
dec
into
(bad)
jge
xor
mov
push
mov
mov
sbb
fcomp
ret
shr
fild
sub
mov
int
adc
xor
pop
jno
mov
jp
(bad)
xor
add
gs
mov
xchg
shl
(bad)
lods
fdiv
push
xchg
je
jnp
(bad)
cmp
sub
sbb
icebp
sub
inc
(bad)
jecxz
mov
inc
das
pusha
cwde
mov
xor
sbb
aam
ja
fistp
jns
pop
cwde
fcomp
cld
mul
or
out
in
enter
ror
daa
xchg
add
xchg
ins
pop
mov
popa
xor
je
lods
cmps
aas
dec
mov
dec
in
add
xchg
or
sbb
jmp
clc
jg
sub
dec
iret
ins
fcmovu
(bad)
lods
jge
je
cmp
leave
jmp
in
adc
xchg
mov
mov
adc
popa
mov
call
ret
rcl
mov
mov
push
sbb
mov
dec
push
and
sub
jmp
scas
jno
dec
pop
jmp
ins
sbb
push
out
sub
stos
push
pop
aam
in
sti
push
jo
mov
adc
jbe
fmul
es
mov
in
bound
push
jb
mov
shl
mov
aaa
pop
jae
aad
add
das
adc
or
ins
cmp
and
outs
es
fisubr
mov
sbb
push
loope
rcr
xchg
and
scas
and
xor
mov
(bad)
mov
outs
jl
xor
pop
and
test
cmp
mov
inc
inc
or
add
push
movs
loope
mov
dec
sbb
xor
sub
dec
jno
(bad)
or
iret
push
repz
dec
jmp
xor
movs
pop
rcl
fcomp
xchg
test
mov
push
cmp
pop
jmp
sbb
cmp
mov
js
and
daa
shr
iret
retf
jnp
shl
aaa
int3
push
cmc
or
dec
jno
(bad)
cmp
push
aaa
dec
test
sub
xchg
fsubr
sbb
icebp
pop
push
sub
jle
stos
stos
dec
inc
mov
call
mov
test
mov
mov
mov
aad
pop
add
sub
outs
(bad)
repnz
xor
idiv
adc
out
mov
xchg
dec
pmuludq
enter
sub
cmp
mov
sub
leave
cmc
add
push
push
xor
cmps
clc
fsub
movs
pop
adc
loope
sbb
xor
adc
add
or
and
mov
(bad)
fchs
push
fldenv
jne
push
mov
(bad)
jns
jae
xor
mov
mov
lods
loop
sub
jmp
sbb
inc
adc
inc
test
sub
adc
mov
mov
mov
pop
retf
inc
gs
xchg
cli
jne
repnz
mov
mov
test
xchg
jb
aad
call
mov
scas
cmp
sbb
cmovnp
pop
mov
(bad)
pop
mov
cli
mov
mov
lock
shl
or
pop
popf
fld
mov
(bad)
aam
aad
(bad)
pop
icebp
add
cmc
clc
clc
loope
dec
push
enter
adc
(bad)
aaa
push
test
cwde
sub
lahf
xchg
sbb
sub
inc
and
lods
push
aaa
test
mov
ficom
and
mov
daa
xor
aas
add
popf
loop
sbb
stc
out
daa
push
cmc
ror
xchg
mov
not
loope
sub
enter
adc
cmp
push
repz
push
xor
out
add
add
(bad)
jp
jmp
imul
dec
fidivr
stos
add
enter
mov
aas
mov
enter
(bad)
xchg
pop
jmp
(bad)
out
aad
cdq
inc
pop
dec
ror
adc
repnz
add
dec
stos
cmps
push
dec
push
or
leave
hlt
xor
xchg
jl
add
dec
jb
add
or
pop
popa
(bad)
jl
add
enter
fstp
push
push
pushf
inc
dec
leave
jecxz
sub
add
fisub
and
jnp
ret
stos
jge
and
in
pop
push
pushf
xor
mov
jmp
and
pop
xor
js
fsub
or
push
mov
xor
icebp
aam
xchg
into
movs
mov
outs
std
xor
pop
mov
mov
imul
int
xchg
lds
popa
adc
movs
jmp
daa
movs
pop
mov
sub
iret
dec
pop
(bad)
jmp
and
int3
push
push
addr16
jno
idiv
js
and
add
xchg
or
jmp
or
xor
xchg
mov
and
push
je
int
push
outs
lahf
shr
xchg
inc
add
adc
rcl
pop
cmp
in
pop
adc
xchg
cmps
les
jmp
and
fcos
clc
out
shl
inc
dec
mov
enter
lds
test
mov
xor
js
leave
int
jg
mov
jmp
xor
push
jno
ret
xor
jge
and
dec
outs
push
push
cmps
les
mov
sar
and
(bad)
into
mov
push
cmp
push
jmp
push
pop
dec
mov
sar
das
xchg
jle
push
sub
mov
fwait
mov
mov
inc
dec
and
out
mov
or
ins
jl
and
push
xchg
mov
imul
and
aaa
sbb
and
dec
ret
std
or
retf
stc
sub
fcmovnu
pop
dec
lods
js
outs
dec
aaa
jecxz
out
or
xchg
push
rep
add
sbb
fcomip
fisttp
xor
in
out
gs
movs
mov
aam
shl
push
ds
out
jmp
repz
inc
scas
aas
loopne
in
mov
cmp
mov
xchg
in
or
cmp
and
xor
fldln2
int
or
adc
jnp
mov
mov
(bad)
cmp
and
enter
pop
mov
cmps
cwde
mov
mov
retf
push
cld
pop
neg
aas
outs
loope
cli
mov
push
(bad)
pop
lods
iret
adc
cmp
stos
mov
or
jbe
adc
ret
adc
call
out
xchg
jnp
out
sub
xor
sbb
and
fsub
mov
mov
add
inc
adc
jns
nop
mov
fwait
int
sbb
faddp
retf
mov
in
fnsave
jl
dec
sbb
sub
hlt
jmp
ds
lods
imul
test
loop
mov
sbb
jns
ror
lea
ror
mov
jns
and
push
sahf
mov
stc
jne
dec
inc
pusha
jp
mov
paddsb
clc
pop
out
push
fist
pop
cmps
call
ror
dec
test
jb
fcom
inc
and
sti
sahf
test
out
fisub
repnz
jmp
or
mov
dec
ret
mov
mov
lods
mov
call
lea
rcr
mov
push
sbb
fidivr
dec
add
mov
ins
add
rol
das
and
popa
retf
repnz
outs
and
xor
enter
jmp
mov
daa
jg
pushf
mov
(bad)
into
cmc
xor
test
cmp
popa
sti
test
imul
jne
aad
mov
test
aam
push
dec
mov
ret
enter
bound
je
pop
jg
imul
je
push
popf
mov
pop
in
ret
iret
mov
push
cmc
mov
repnz
cdq
loope
out
retf
fnsave
jns
add
inc
mov
cmp
inc
sbb
mov
retf
stos
mov
loop
out
out
out
push
lods
retf
adc
push
cmp
dec
ja
adc
mov
push
sub
pop
mov
dec
rcr
cwde
jbe
pop
ret
dec
adc
dec
mov
xchg
pop
dec
mov
das
adc
cs
push
inc
ret
in
fst
sub
mov
and
js
lock
and
scas
cmp
fs
jp
repnz
fnstenv
jg
data16
jge
and
adc
mov
mov
sub
adc
push
mov
jo
cld
sbb
jle
les
push
push
lods
ret
pop
fdiv
mov
ds
pop
imul
inc
xor
sub
xor
scas
lea
mov
push
fmul
pop
and
je
mov
int3
dec
adc
cmps
mov
outs
das
pop
int3
scas
mov
stc
sbb
pop
outs
mov
pop
add
call
xor
inc
call
stos
mov
mov
xor
cmp
add
cmp
jns
les
xchg
sub
popf
sub
inc
pop
mov
xor
dec
out
push
pop
out
aas
inc
pusha
fsubp
xchg
fdiv
sar
xor
push
cdq
mov
dec
in
mov
jl
cli
cmp
in
sbb
lea
lea
mov
sub
rcr
mov
aad
pop
xchg
fucomi
xchg
jp
nop
mov
and
sbb
fnstenv
ja
(bad)
lock
sub
enter
mov
cmp
mov
jb
arpl
pop
inc
sub
dec
cwde
aam
add
lea
push
mov
(bad)
shl
repz
push
hlt
adc
push
xchg
retf
hlt
xchg
loop
sbb
sbb
jmp
das
cmc
xor
das
sub
inc
fiadd
xor
shl
xchg
gs
test
pop
lods
sbb
jae
stos
stos
sbb
xor
call
or
push
add
xor
cli
pushf
sbb
daa
mov
xchg
jmp
lahf
add
int
or
inc
push
out
rol
ret
sahf
cmp
jp
(bad)
out
jge
(bad)
sbb
test
pop
or
je
dec
sub
daa
fwait
dec
out
(bad)
(bad)
stos
ins
mov
daa
addr16
js
neg
jns
add
cmp
mov
test
rol
sbb
add
gs
adc
(bad)
mov
jmp
test
cmp
or
out
or
jmp
fst
popf
mov
or
in
inc
and
xchg
bound
pop
movs
fwait
int3
pop
mov
cli
inc
jmp
sub
lea
xlat
sub
mov
icebp
push
mov
test
jnp
(bad)
sub
imul
mov
cmp
xchg
push
call
out
sbb
sti
leave
jp
mov
les
test
push
xor
jmp
jno
retf
sbb
pop
jmp
mov
jl
xchg
out
xchg
movs
in
xor
sbb
fiadd
mov
test
mov
sbb
lods
popa
mov
xchg
inc
out
pushf
lds
cdq
call
lea
iret
data16
aas
or
js
retf
ja
js
in
into
cmp
ja
pop
sbb
pop
inc
mov
sbb
sbb
jae
cld
or
dec
jge
jbe
pop
adc
adc
mov
cmc
dec
cmp
shl
(bad)
xchg
cmps
cdq
cli
gs
inc
stos
mov
lods
sahf
push
repnz
mov
pop
scas
ja
data16
or
mov
or
ds
xor
adc
js
mov
push
inc
out
fs
xchg
loop
movs
push
add
stos
lods
cwde
movs
int
icebp
imul
repnz
xchg
xchg
jecxz
gs
jne
movs
int
fld
xor
fwait
lock
dec
gs
mov
outs
mov
cmp
shr
jge
mov
(bad)
scas
or
adc
sbb
jo
jae
fwait
loope
scas
mov
adc
ja
cmp
test
mov
sub
call
sbb
sbb
mov
pop
test
pop
jae
mov
push
mov
ss
push
jnp
mov
ss
retf
push
push
pop
xor
fwait
leave
arpl
xchg
mov
inc
clc
adc
lds
shl
ins
(bad)
retf
push
leave
mov
lea
(bad)
inc
int3
clc
call
cld
push
mov
push
dec
inc
out
movs
mov
jmp
(bad)
mov
jge
call
mov
fadd
out
mov
pop
outs
je
jb
push
fwait
(bad)
dec
jmp
push
imul
push
daa
imul
cmps
jne
dec
neg
scas
cmp
hlt
jnp
sbb
fdiv
stos
sbb
cli
movd
repnz
in
and
dec
mov
mov
dec
mov
cs
dec
cdq
into
pop
addr16
ret
or
mov
mov
push
sar
nop
fisub
push
xchg
loop
adc
fwait
mov
pop
dec
leave
jne
jecxz
popa
push
inc
outs
mov
aam
data16
pop
push
fisttp
push
test
loop
out
jmp
je
sub
mov
popf
iret
retf
popf
jecxz
mov
mov
push
daa
(bad)
stos
aas
sub
retf
adc
loopne
mov
xor
mov
pusha
stc
xchg
jnp
mov
dec
sahf
mov
cli
dec
pop
arpl
inc
les
push
pop
cmp
sbb
lea
icebp
push
call
retf
ja
lods
mov
adc
and
outs
gs
stc
das
mov
xchg
push
mov
scas
push
sti
adc
mov
nop
iret
push
pushf
mov
mov
outs
idiv
sbb
jmp
or
add
jae
repz
mov
xchg
mov
not
lea
xor
in
push
and
or
dec
push
nop
push
and
fdiv
retf
mov
dec
mov
retf
(bad)
aas
add
adc
mov
lea
or
mov
adc
imul
mov
sub
ds
popa
push
test
call
jne
mov
(bad)
pop
mov
bound
sbb
call
aad
mov
icebp
mov
push
xchg
cmc
fist
sub
pusha
and
test
adc
push
stc
ss
xor
dec
rol
mov
jne
or
push
xchg
push
retf
mov
aaa
xlat
test
ss
int
ins
add
pop
pop
jb
nop
xchg
loop
test
cli
mov
cmp
mov
cmc
mov
xor
pop
popa
retf
jno
scas
stc
adc
dec
in
pop
mov
cmps
in
cdq
outs
or
sub
int3
ja
shl
and
or
test
dec
cli
clc
ds
fcom
fstp
adc
mov
push
inc
sbb
scas
sbb
jmp
test
jg
jnp
push
loopne
cs
mov
add
fistp
push
push
shl
outs
dec
loope
xor
pop
cdq
(bad)
loopne
jnp
mov
stos
xchg
adc
inc
cmp
push
adc
pushf
pusha
add
mov
jmp
sbb
int3
jmp
add
mov
inc
mov
mov
lds
sti
push
push
ins
push
stos
jb
add
pop
ret
xor
aaa
inc
add
repz
xchg
out
push
inc
(bad)
pop
mov
mov
push
mov
call
jmp
push
mov
(bad)
sbb
lahf
xor
add
cmp
movs
(bad)
hlt
lock
pop
bound
std
push
daa
jne
pop
or
cmp
movs
jle
and
add
int3
out
fcom
js
xor
and
pop
dec
mov
fdecstp
je
sti
jb
outs
cmp
xchg
xchg
stos
and
outs
add
cmp
sbb
add
xchg
dec
sbb
dec
jge
jecxz
ins
sbb
pop
das
bswap
enter
pusha
or
bound
js
push
inc
cs
stos
inc
fisub
stos
xchg
movs
leave
adc
scas
jecxz
mov
push
into
rcr
or
fwait
or
xor
arpl
leave
sub
pop
aam
mov
inc
xor
sub
and
inc
mov
lds
mov
aaa
xor
jnp
icebp
jmp
outs
mov
loopne
xchg
mov
mov
jp
mov
test
sbb
pop
(bad)
es
inc
mov
mov
xchg
cmp
inc
loop
and
push
jmp
mov
mov
ss
jmp
idiv
mov
into
xor
sub
jp
nop
inc
push
enter
outs
cmp
dec
add
retf
clc
and
push
xchg
push
mov
imul
inc
lahf
lea
loope
inc
nop
cmps
bound
mov
(bad)
aad
gs
mov
and
and
inc
movs
(bad)
repz
ret
daa
mov
fst
sbb
push
and
mov
xor
jmp
in
test
mov
fiadd
int3
mov
stos
ret
cmc
cmp
pop
popa
and
dec
adc
popf
mov
dec
pop
iret
mov
xor
(bad)
cld
add
pusha
pop
sbb
xor
jae
dec
gs
mov
cmp
lahf
icebp
fsub
dec
addr16
pop
inc
out
imul
mov
enter
jg
int
(bad)
ficomp
xor
sub
push
into
sti
xor
dec
xchg
mov
stos
or
xor
imul
jae
jnp
sub
sahf
sbb
fld
mov
fnstcw
push
iret
mov
jbe
rcr
(bad)
lods
jbe
ja
sar
stc
in
inc
pop
(bad)
(bad)
shr
scas
add
fldcw
je
sbb
rcr
sub
sbb
in
sub
sti
sbb
pusha
mov
fsub
sbb
push
outs
cmp
ss
inc
ins
xor
and
ins
xchg
sub
dec
mov
cdq
jl
popf
adc
(bad)
fimul
mov
xchg
gs
in
fdivp
popa
in
sub
pop
push
dec
mov
mov
jmp
inc
xor
lods
sbb
ficomp
jo
ja
fstp
inc
lds
mov
mov
ds
sbb
inc
aaa
mov
pop
int3
movs
call
lock
div
adc
add
pop
loope
out
cmps
sar
cmc
daa
fs
popf
sub
aad
ret
aas
xor
sbb
rcr
push
pop
fucomp
sbb
xchg
out
adc
cmp
inc
mov
cmp
sub
int
or
inc
mov
and
lock
fld
jnp
aad
movs
cmp
es
xchg
push
mov
jp
sti
dec
dec
ret
lods
scas
aad
xchg
dec
cdq
pop
and
inc
into
sub
xchg
aas
dec
scas
icebp
rcr
popf
out
pop
mov
rol
mov
repnz
test
ins
or
data16
ficom
leave
aad
cmp
adc
and
xor
pop
pop
int
inc
jno
in
(bad)
outs
inc
dec
pop
jge
outs
data16
cmp
scas
mov
(bad)
cdq
jo
push
and
in
(bad)
stc
sahf
or
sub
fwait
push
std
sub
(bad)
fcomp
push
arpl
pop
pop
(bad)
hlt
out
retf
add
sub
adc
dec
mov
sbb
pop
jecxz
xor
in
cmp
in
fs
xor
jecxz
cmp
loopne
pop
icebp
push
mov
or
push
xchg
mov
ror
cmps
ins
push
and
xor
out
mov
dec
rcl
pop
loop
and
push
out
xchg
or
sub
cmp
xor
icebp
shl
and
jns
mov
xchg
cmp
jns
pop
aaa
std
(bad)
jmp
stc
dec
nop
sar
lods
popa
call
fsubr
jo
adc
call
stos
cmps
mov
pop
lea
popa
xchg
dec
in
push
lods
and
pop
imul
pop
push
jne
in
push
add
or
mov
mov
cmp
jle
fs
jns
and
mov
scas
out
pop
push
or
inc
push
and
xchg
into
scas
ror
add
cmp
daa
fdiv
push
add
jmp
or
jge
hlt
scas
(bad)
in
and
cmp
pop
jmp
mov
stos
adc
mov
pop
sbb
or
and
popf
out
mov
icebp
mov
pop
xchg
fisub
cli
push
and
std
jle
in
out
add
cmc
or
stos
hlt
lahf
leave
cmp
daa
mov
push
pop
add
cmp
push
or
ret
jnp
imul
cmp
in
sahf
call
sar
clc
mov
lods
sbb
cmp
cmps
mov
push
out
das
arpl
scas
bound
mov
cdq
(bad)
dec
bound
(bad)
push
inc
xchg
xor
icebp
cli
or
adc
in
loope
mov
cs
push
loop
lods
cs
push
xchg
jl
xchg
sub
jmp
test
(bad)
js
ins
cmp
lock
jno
pop
and
mov
xor
or
inc
pop
int3
cmp
aaa
push
fmul
sbb
jg
sbb
rol
sub
cmp
outs
retf
cli
fdivp
push
jecxz
dec
jg
adc
mov
out
aas
cmp
jb
mov
pop
xchg
dec
lahf
fucom
jo
daa
ret
cwde
aas
mov
cmps
test
fild
xchg
stc
adc
les
js
ret
fidiv
xor
iret
sub
xor
movs
movs
and
sub
pop
and
or
shl
inc
xchg
pop
popa
out
pushf
mov
push
pop
and
sti
popa
lods
xchg
test
push
ins
les
(bad)
popa
js
cmp
push
pop
and
std
jge
out
retf
aaa
aas
pushf
rol
mov
jnp
add
in
or
jmp
mov
sub
lahf
mov
mov
test
addr16
jo
lahf
addr16
inc
jl
(bad)
out
dec
out
push
sub
sub
cld
and
jle
in
sbb
loopne
push
xor
add
mov
loop
dec
push
mov
push
pusha
leave
mov
shl
jmp
cli
sub
out
shl
sub
loopne
je
cmp
ins
inc
adc
mov
jecxz
mov
jg
mov
(bad)
outs
mov
xchg
into
outs
cdq
pop
jb
lods
inc
dec
aam
dec
sti
hlt
xor
dec
(bad)
out
mov
cli
cmp
sbb
add
dec
data16
pop
mov
ins
shl
adc
retf
xchg
fwait
add
mov
pop
mov
adc
mov
les
fidivr
cli
or
loope
push
jns
int3
(bad)
adc
aam
in
sbb
iret
mov
loope
les
cmps
jb
and
adc
mov
movs
out
sbb
inc
xchg
lods
dec
loope
sub
mov
xlat
pop
in
ss
repnz
fdivr
outs
inc
and
xchg
add
add
inc
and
repz
sti
inc
(bad)
cmps
pop
cli
popf
mov
mov
fs
pop
pop
mov
stc
push
jmp
xlat
jno
daa
pop
leave
lods
arpl
out
(bad)
mov
cmps
xchg
xor
sub
pop
xchg
(bad)
repnz
push
add
(bad)
aam
pop
aam
add
pop
add
test
mov
rcr
dec
inc
call
xor
pop
lds
stos
xlat
jne
mov
jno
dec
sbb
fild
xor
inc
jmp
and
repz
and
daa
add
mov
scas
fisubr
lahf
add
mov
dec
pushf
(bad)
cmps
loopne
scas
sub
in
or
stos
xchg
aas
sub
pop
stos
push
cmp
mov
cmp
xchg
add
int3
inc
sub
mov
movs
stc
xchg
dec
push
dec
sahf
shr
loope
pushf
sub
dec
mov
sbb
movs
pop
sbb
xor
push
pusha
dec
outs
aas
add
es
or
or
adc
retf
(bad)
fsubr
shl
cs
xchg
sbb
out
add
das
jl
test
sti
mov
sbb
inc
jle
gs
stc
and
les
cs
dec
addr16
jae
(bad)
sub
out
mov
xor
or
pop
and
and
hlt
call
aas
(bad)
test
xchg
add
xchg
sbb
cs
ins
scas
loopne
js
mov
bound
or
in
mov
jl
or
xor
cmp
test
icebp
(bad)
jmp
inc
adc
fcom
jle
in
xor
movs
push
icebp
and
pop
inc
xor
loop
pop
fimul
rol
xchg
cmp
sbb
dec
es
add
stos
add
mov
icebp
and
aaa
mov
repnz
lock
out
inc
je
inc
les
icebp
div
push
into
push
fiadd
jge
dec
push
pop
dec
call
push
ret
mov
popf
cs
clc
dec
cdq
mov
mov
xchg
add
out
scas
inc
lea
mov
outs
fs
test
cli
mov
add
or
sahf
test
xchg
ret
sub
pop
adc
idiv
int
sti
xchg
inc
stc
add
jno
xor
mov
movs
aaa
mov
lock
and
(bad)
loopne
sti
(bad)
(bad)
push
push
cmp
out
test
sbb
cmps
or
movs
sti
call
clc
mov
xor
mov
imul
cmps
pop
js
adc
push
xor
dec
addr16
call
daa
mov
scas
jae
adc
leave
fcomp
outs
stc
jnp
cmp
fmul
push
mov
popa
popa
addr16
xchg
pop
cdq
pop
clc
(bad)
sbb
add
ja
mov
test
mov
cdq
mov
and
mov
push
out
xor
jp
push
enter
cmp
outs
in
adc
mov
cmp
pop
mov
and
add
jno
test
stos
test
xchg
adc
pop
mov
and
pop
test
xchg
iret
pop
sbb
jbe
mov
test
cmp
(bad)
lods
jb
inc
sbb
or
lock
xlat
or
ins
or
jl
add
or
push
retf
xchg
xor
out
sub
call
sbb
mov
sbb
jmp
movs
pop
cmp
aam
or
(bad)
out
(bad)
movs
lahf
mov
adc
call
cwde
loop
cdq
movs
push
xor
arpl
dec
int
js
and
pop
mov
add
cmp
pop
ret
test
nop
push
dec
adc
(bad)
cmps
clc
das
leave
mov
jbe
mov
add
xchg
adc
leave
add
imul
cmc
sbb
adc
xchg
cmc
out
add
mov
pop
and
inc
push
cld
mov
ja
dec
xchg
inc
gs
sub
stc
retf
(bad)
cmc
cmp
int3
xor
loope
ins
or
loope
mov
dec
push
loope
inc
pop
dec
test
adc
les
fmul
inc
cli
cmp
jns
div
fdivr
repz
jb
xchg
pusha
pop
ror
rcl
pop
xor
mov
les
je
dec
lahf
in
xor
mul
or
inc
xchg
je
popf
jnp
fs
sub
add
data16
pop
adc
or
out
sti
les
packsswb
jecxz
jbe
jg
aad
xor
add
mov
and
and
push
scas
inc
fstp
(bad)
push
push
pop
sahf
dec
arpl
xchg
les
shl
push
lahf
sub
rol
xchg
push
sbb
sbb
cmps
mov
push
out
retf
jbe
lods
int
and
jae
mov
cmp
(bad)
subps
shl
repnz
out
sub
push
shl
add
xlat
popa
cmp
(bad)
pushf
mov
inc
mov
xchg
push
push
sar
jmp
mov
or
pop
neg
or
add
fidivr
inc
(bad)
aas
sbb
out
sahf
add
je
mov
rep
les
xchg
pop
and
(bad)
stc
mov
imul
std
inc
dec
dec
aad
fs
adc
outs
sbb
push
xor
mov
pop
jo
retf
inc
dec
lds
ret
mov
jb
dec
cmp
addr16
lods
loop
outs
in
(bad)
dec
inc
xor
(bad)
loopne
cmps
push
lock
sub
lock
sbb
and
shl
push
test
xor
xchg
in
(bad)
add
adc
and
outs
mov
inc
ret
and
and
add
ins
pop
and
test
ds
sahf
loop
mov
les
scas
pushf
call
push
int
lock
loope
inc
xchg
cmp
test
jo
in
push
in
int
cmc
retf
inc
in
xor
imul
(bad)
xlat
xor
aam
ins
aam
mov
pop
adc
push
loope
stc
je
ja
out
cs
popa
ins
sbb
jmp
aaa
ins
jo
fs
mov
dec
adc
loope
or
loop
mov
dec
pop
fdivr
lods
mov
sub
ins
dec
xchg
lea
push
jle
dec
cwde
xchg
cmps
dec
and
ror
sbb
and
bound
hlt
je
xchg
adc
ret
dec
mov
shr
int3
xchg
cs
cmc
push
pop
adc
inc
jmp
push
or
pusha
call
popa
sub
fidiv
sub
mov
add
xchg
test
or
xchg
mov
lods
pop
xor
ret
dec
scas
sbb
jmp
cmp
iret
call
repz
pop
push
fnstsw
inc
into
sbb
sti
dec
imul
dec
pop
fld
pop
call
test
or
mov
jbe
jg
or
jns
dec
test
jae
loopne
jno
adc
in
mov
cmp
xor
outs
lea
xchg
jmp
scas
enter
pop
push
aas
imul
xor
addr16
jne
fsub
loopne
cmps
adc
aaa
mov
jmp
aaa
pop
mov
xchg
(bad)
lock
lahf
xchg
(bad)
fstp
mov
addr16
or
jg
iret
(bad)
js
aas
mov
add
test
es
push
push
in
dec
mov
jae
call
daa
aaa
pushf
test
jecxz
std
imul
int
push
mov
push
sbb
pop
call
xchg
adc
bound
je
mov
pop
jne
xor
lods
pop
ret
inc
fmul
ins
pop
cmc
xor
xchg
mov
lds
mov
mov
sub
or
fldenv
adc
div
jmp
jecxz
lods
or
dec
into
das
sar
jnp
lock
retf
mov
or
sbb
aas
sbb
sbb
(bad)
iret
xor
ret
dec
shl
js
jmp
ss
pushf
movs
in
test
xchg
dec
outs
add
pop
sub
xor
shl
push
xchg
push
test
xchg
xchg
ds
sbb
cdq
in
stos
fdiv
mov
ins
xchg
fs
scas
aam
xchg
in
mov
adc
fnstsw
xchg
xlat
mov
fild
out
out
push
add
aas
neg
cmc
fist
neg
ds
add
jle
in
int
mov
push
cmp
jbe
jp
or
adc
(bad)
mov
dec
xchg
pop
xchg
retf
nop
push
into
aam
jecxz
int
icebp
movs
adc
test
fst
(bad)
jb
jb
dec
outs
fistp
mov
pushf
jbe
mov
sbb
xor
and
sbb
adc
push
fsub
hlt
xchg
push
mov
fwait
push
scas
bound
mov
repz
lahf
add
je
ins
iret
fmulp
fadd
dec
adc
rol
ja
out
lods
sbb
jmp
lods
push
xor
dec
xchg
lods
add
sti
jl
sbb
mov
dec
mov
inc
mov
lea
pop
repnz
int3
xor
ror
mov
add
icebp
stc
fistp
cld
or
ja
add
loope
mov
pop
xchg
and
fwait
xchg
jmp
inc
and
xor
popa
sub
mov
cmova
js
retf
aam
mov
pop
sub
xchg
push
repnz
jmp
(bad)
test
jg
outs
cmp
xor
jo
sub
jp
xor
xor
jno
inc
push
lock
add
cmp
cmp
fdivr
adc
imul
lea
cmp
call
lods
stos
mov
mov
cmp
dec
rcr
xor
mov
scas
ins
movs
sti
add
fcmovnb
lds
mov
call
mov
mov
in
mov
ret
loopne
jno
rcr
fcmovne
mov
mov
aas
push
mov
xchg
cmp
jmp
push
mov
call
jo
push
ins
sbb
shl
push
dec
in
jge
pop
cmps
fsub
cmps
out
add
cld
fadd
scas
xor
mov
popa
pop
adc
add
push
in
inc
jl
sub
movs
and
ja
adc
add
jo
mov
dec
int3
in
push
mov
and
push
pop
jg
addr16
(bad)
faddp
jle
sahf
loopne
jbe
test
clc
loopne
mov
jne
call
fdiv
(bad)
xchg
mov
fisubr
mov
fisttp
mov
out
repz
mov
xchg
test
xchg
pop
gs
mov
mov
mov
jge
add
in
ret
fs
xchg
pop
pusha
enter
in
xor
mov
push
fld
xor
mov
and
das
mov
mov
pop
cmp
mov
push
xor
mov
inc
and
scas
sbb
fadd
fiadd
sbb
lahf
ds
xor
mov
jecxz
dec
jo
jno
push
ret
xchg
mov
lock
fistp
pop
cli
dec
lds
daa
test
mov
xchg
icebp
and
pop
xor
add
mov
and
loop
jmp
xlat
sti
stos
and
cdq
rol
fcmovnu
scas
xchg
pop
jb
cmc
leave
popa
out
outs
retf
rol
add
adc
fwait
pushf
xor
jbe
cmp
shr
in
jmp
xor
cwde
sbb
jne
movs
mov
imul
imul
add
sbb
or
mov
sbb
ret
or
add
push
xchg
pop
stc
jge
pop
test
aad
push
jbe
inc
imul
mov
out
gs
mov
cmp
loop
add
out
popa
jg
xchg
mov
pop
push
jbe
cmps
test
inc
bound
mov
mov
loopne
(bad)
in
loope
cmp
xchg
jp
push
hlt
test
mov
adc
add
add
pop
aaa
call
mov
pop
retf
pop
add
test
xchg
pushf
cmp
sub
mov
bound
inc
cld
xchg
stc
adc
movq
mov
in
into
push
out
inc
xchg
test
mov
stos
pop
out
push
enter
popf
jo
jne
icebp
push
or
cmp
(bad)
(bad)
xchg
add
(bad)
jae
in
outs
push
xor
lods
pop
fisubr
sub
ror
push
aad
arpl
das
jg
into
inc
inc
vcvttps2dq
dec
pop
iret
or
sbb
int3
push
scas
sahf
clc
mov
not
xchg
xchg
fidivr
inc
scas
lds
or
mov
data16
lock
lock
mov
or
out
mov
shr
fldcw
mov
and
ja
push
repz
sbb
lods
stos
gs
mov
mov
(bad)
sbb
imul
cs
push
or
jo
push
dec
xor
pop
add
fwait
lahf
inc
inc
inc
shl
mov
push
inc
fcmovb
push
sbb
fisttp
jmp
inc
pop
jne
mov
fld
sub
imul
push
ss
scas
push
inc
(bad)
sub
dec
push
pop
(bad)
dec
xchg
push
xor
stc
xchg
sub
cdq
xor
mov
sbb
sahf
xchg
sub
xor
cmp
sub
mov
xor
and
mov
fst
arpl
jecxz
sbb
sub
xor
jno
bound
inc
jnp
dec
mov
stos
jmp
inc
xchg
xor
add
pop
add
push
dec
push
pop
aas
xchg
fwait
push
mov
fld
stos
jae
rcl
aad
jl
jl
mov
pop
adc
and
rcr
push
mov
addr16
xor
out
push
add
sbb
push
dec
jbe
out
repnz
out
mov
push
mov
xchg
mov
pop
dec
daa
ret
inc
add
pop
dec
(bad)
bound
call
gs
ds
or
int3
xor
inc
mov
(bad)
mov
add
mov
jne
jnp
cld
jns
sub
push
das
daa
cld
pop
movs
sub
mov
jg
xor
fmul
iret
loop
xchg
jmp
lods
cmps
ja
sbb
in
xchg
mov
loopne
push
inc
retf
ss
and
sbb
cmp
inc
movs
iret
stos
xchg
loopne
mov
dec
movs
(bad)
mov
push
(bad)
(bad)
cs
xor
cld
in
ret
sub
je
sbb
dec
push
aas
cmp
sub
mov
ja
shl
mov
inc
mov
pop
gs
mov
jb
scas
ror
sbb
sbb
lea
loop
push
call
mov
in
xchg
cmc
es
sahf
xchg
add
aaa
mov
je
or
push
pop
fstp
and
idiv
out
(bad)
lock
cmp
movs
std
pusha
mov
cmp
adc
xchg
mov
cmp
(bad)
aas
mov
pop
jo
arpl
add
das
les
xchg
idiv
cdq
mov
cwde
push
mov
ins
xchg
push
aam
push
jnp
imul
ss
mov
inc
test
push
lock
in
push
bound
adc
pop
xchg
call
gs
test
rcl
xchg
lahf
out
sub
in
mov
inc
int3
es
scas
xor
inc
pop
mul
lods
xlat
push
fst
out
js
xor
out
mov
jno
pop
sbb
sub
stos
fdivr
push
scas
in
fistp
aam
retf
pop
xor
xchg
xor
xor
push
jbe
adc
jo
cmp
daa
sub
out
jecxz
push
adc
dec
sbb
movs
out
inc
inc
iret
repz
sbb
or
movs
mov
je
mov
in
sbb
push
les
ss
movs
adc
fs
cmp
cmps
push
(bad)
mov
ja
rcr
mov
(bad)
cld
push
add
xchg
gs
and
imul
xchg
mov
lods
xchg
test
xor
pop
and
adc
and
cmp
ror
fistp
out
aas
test
nop
jge
xchg
pop
or
push
pop
push
cmp
mov
xor
jge
xlat
sbb
xchg
cli
(bad)
call
or
sub
inc
aam
adc
xor
lds
into
mov
popa
dec
push
xor
push
cmp
mov
repz
dec
loop
repz
jmp
fidiv
je
retf
sbb
mov
xor
mov
xor
andnps
jl
mov
jns
test
xor
loop
loopne
nop
xchg
mov
mov
daa
push
int3
inc
imul
xchg
mov
scas
adc
test
jecxz
lods
mov
dec
push
and
sub
popa
mov
adc
out
adc
mov
rcr
xchg
fstp
mov
dec
nop
mov
addr16
push
mov
jnp
jmp
xchg
xchg
push
and
out
call
ja
lahf
pop
(bad)
push
mov
cmp
xchg
shr
test
sub
arpl
in
les
jl
movs
stos
sbb
xchg
repz
in
ret
inc
add
pop
add
jne
mov
xchg
dec
or
jb
mov
aad
imul
pop
mov
push
push
mov
sahf
pavgw
ja
popf
outs
outs
push
sar
and
jle
mov
cwde
loop
push
add
and
jmp
mov
xchg
movs
inc
jecxz
cmps
pop
sbb
push
xchg
rcl
add
lock
test
js
arpl
inc
sbb
lea
fdiv
jg
call
int3
pop
movs
cmp
std
jmp
jbe
out
loope
mov
cmp
inc
cld
or
jmp
jg
push
or
jmp
inc
xchg
cmp
push
ret
xchg
leave
loopne
sbb
dec
ret
and
sub
fsubr
add
dec
push
sub
movs
bound
mov
aaa
ret
jbe
or
mov
mov
retf
cli
mov
sti
sbb
cmps
pop
pop
push
push
fistp
ficomp
outs
push
mov
push
sub
ror
xchg
(bad)
hlt
mov
push
xor
stc
sub
imul
push
xor
inc
or
fcomp
adc
xor
dec
std
scas
sub
std
out
mov
dec
add
in
rol
in
xchg
movs
test
test
mov
cs
(bad)
es
xor
std
pop
add
pusha
dec
dec
lods
or
xor
and
push
aas
(bad)
retf
(bad)
cld
cmps
loope
dec
daa
(bad)
mov
(bad)
add
push
aaa
mov
jl
popa
cmp
ret
adc
je
mov
ins
adc
push
adc
cli
ins
aam
add
sub
imul
mov
ficomp
cmc
ins
add
dec
cli
mov
icebp
cmp
loope
(bad)
xor
in
pop
add
imul
shr
adc
mov
test
mov
ror
addr16
outs
lods
fsubr
loope
test
pusha
pop
gs
jl
out
sar
popf
fstp
mov
sbb
mov
add
push
cmp
shr
push
out
mov
mov
sbb
stos
lock
cmps
aad
lahf
dec
push
inc
xor
in
sub
pop
or
fsub
xor
pushf
rol
jns
cmp
arpl
clc
cmp
leave
jecxz
fimul
pop
int
jecxz
cmp
fs
inc
push
pop
adc
mov
xchg
xchg
aam
mov
aad
mov
mov
jl
in
mov
test
pop
jne
cmp
in
ins
ins
and
dec
sub
fwait
push
xchg
popa
retf
push
pop
je
loopne
sbb
stos
pop
ja
sbb
out
aam
sub
out
call
out
aas
sub
aam
dec
dec
imul
rol
inc
mov
jnp
sbb
rol
aas
adc
cmp
movs
jmp
inc
mov
mov
punpcklbw
inc
mov
xor
mov
pop
mov
rol
xchg
jns
cli
mov
jae
loope
icebp
or
dec
(bad)
or
adc
ret
jne
pop
test
push
movs
lods
push
imul
ffreep
loopne
sbb
push
sbb
adc
mov
shr
jb
imul
sar
or
cdq
sub
(bad)
xchg
fs
sbb
dec
arpl
inc
ret
ja
scas
xchg
or
mov
clc
push
jg
out
shl
xlat
sub
shr
jnp
and
loopne
mov
push
fld
jge
enter
mov
push
mov
push
jnp
imul
daa
fisubr
cmp
push
into
cwde
inc
or
dec
inc
jg
mov
mov
pop
in
hlt
aam
sbb
jbe
inc
sub
je
and
adc
mov
retf
adc
icebp
pop
pop
jnp
or
push
movs
or
push
cmc
stos
dec
adc
and
sub
cmp
pusha
inc
xchg
addr16
jp
cwde
adc
and
jns
push
dec
arpl
mov
xchg
sbb
lods
test
dec
mov
ret
or
cmps
cmps
xchg
jl
cmp
mov
fwait
je
jnp
inc
fist
push
push
sti
jns
jb
cdq
dec
sbb
retf
les
out
pop
fsincos
jno
mov
hlt
push
xchg
movs
dec
cmp
movs
mov
push
bnd
xor
ins
xor
test
sub
sbb
mov
imul
sbb
add
mov
push
lock
pop
adc
mov
push
icebp
jge
jne
adc
and
xor
jno
mov
call
and
(bad)
and
lock
inc
or
in
cs
pop
push
add
test
push
jmp
and
and
retf
lea
ja
(bad)
xchg
mov
sub
sbb
mov
in
dec
loope
jnp
out
jp
retf
and
xchg
retf
and
and
test
cmp
mov
sub
aas
ds
iret
ror
(bad)
iret
sub
repz
outs
ins
jae
scas
ja
lahf
ins
add
fldenv
lds
adc
jecxz
pop
pop
xor
int3
mov
fnstsw
xchg
adc
pop
cmp
and
dec
cmp
xor
inc
xlat
test
movs
in
lods
bound
psubb
pop
test
mov
retf
popf
ins
mov
outs
(bad)
(bad)
push
or
mov
inc
dec
xor
mov
mov
mov
movs
fsubr
out
popf
cdq
pop
out
je
fild
jge
not
sbb
mov
pop
mov
inc
and
(bad)
cmps
mov
call
movq
jbe
call
jmp
cmp
js
ret
ds
push
aam
adc
(bad)
pop
push
pop
ret
fwait
push
dec
(bad)
outs
data16
sbb
sub
out
popf
pop
jle
in
or
aaa
cmps
jmp
jne
neg
cmp
mov
inc
ror
jbe
push
or
imul
loope
cld
mov
sub
adc
mov
fwait
mov
adc
mov
or
sbb
and
icebp
ins
test
dec
aam
push
fwait
mov
add
sbb
mov
mov
sar
stos
nop
sub
xchg
push
mov
retf
ds
or
jne
lock
retf
mov
in
mov
movs
dec
div
stc
inc
cmove
dec
fistp
icebp
mov
xchg
clc
and
icebp
out
int
xchg
imul
sahf
or
loopne
and
mov
out
clc
pop
mov
mov
mov
adc
retf
unpckhps
add
and
mov
jo
mov
mov
or
dec
adc
repnz
retf
dec
add
sub
xor
dec
mov
test
outs
mov
pop
pushf
daa
push
sbb
adc
shr
scas
inc
jle
rol
dec
adc
mov
push
fcos
fsubrp
xchg
int3
fist
outs
and
sub
push
mov
inc
xor
or
push
sub
push
jmp
xchg
pop
(bad)
(bad)
jbe
mov
push
inc
pop
mov
sub
das
cmp
sbb
xchg
in
cmp
jne
ficom
add
ss
aad
adc
dec
push
mov
data16
push
je
ficomp
jl
and
outs
inc
jle
test
es
inc
test
ins
inc
mov
sbb
xor
xchg
inc
dec
xchg
lods
mov
mov
fidiv
jle
sub
jno
sbb
ror
push
in
je
xchg
pop
adc
push
and
sbb
inc
inc
call
outs
jno
mov
hlt
mov
jne
mov
dec
loope
mov
fld
push
pop
jmp
mov
ins
or
sub
or
sub
fs
xor
cld
iret
sti
mov
adc
imul
xor
push
out
inc
mov
les
mov
mov
stos
push
scas
mov
dec
jo
(bad)
jo
push
movs
pop
xchg
xor
(bad)
mov
add
inc
adc
ret
xchg
fld
dec
adc
cld
mov
mov
jae
test
mov
(bad)
jl
mov
mov
ds
ror
mov
gs
pop
xchg
and
cmp
out
je
fidiv
daa
jns
call
ja
jno
xlat
sbb
mov
mov
inc
cmp
test
mov
js
js
cmp
jmp
cmps
add
hlt
lahf
pusha
dec
scas
inc
mov
jns
add
je
pop
sbb
adc
fsubr
mov
(bad)
aam
aad
add
fisub
adc
sti
jg
dec
mov
lods
xor
lahf
add
xor
repz
adc
addr16
or
jmp
neg
jle
xchg
mov
push
jp
push
les
mov
push
jae
inc
or
push
xchg
repz
enter
jg
mov
cmps
inc
scas
and
sbb
xchg
pop
pop
fimul
shl
stos
out
je
cmp
xchg
cmp
push
jns
xor
out
loopne
jmp
push
fistp
push
inc
(bad)
scas
std
idiv
data16
sub
sti
dec
nop/reserved
out
adc
jns
mov
je
jnp
(bad)
cmp
jmp
sbb
mov
jns
xor
outs
pop
mov
gs
sahf
or
in
or
jnp
push
div
fisub
adc
arpl
sbb
sub
aam
push
test
sbb
(bad)
mov
xlat
loop
xchg
loop
es
call
pop
cmp
jmp
test
mov
mov
out
scas
mov
ret
xchg
mov
pop
mov
fstp
mov
cs
adc
fadd
push
in
icebp
jae
ret
mov
cmp
test
lods
imul
jge
mov
stos
popf
lods
cmps
div
fnsave
movs
loop
out
test
add
sbb
mov
(bad)
lods
push
xchg
mov
rol
mov
sbb
ss
(bad)
je
cmps
xchg
aam
pop
mov
cmp
lds
ja
mov
jbe
push
mov
repnz
ins
push
js
sti
jno
sub
icebp
cs
jno
test
and
ret
inc
(bad)
mov
nop
xchg
lea
mov
inc
xor
fst
int3
sar
push
mov
cmp
push
movs
sti
xor
xor
les
pop
mov
add
dec
ret
in
xchg
xchg
mov
and
mov
outs
loop
jp
fisttp
xchg
jnp
lahf
xor
sbb
inc
fsub
sbb
and
cmc
pushf
or
pop
xchg
cdq
arpl
loope
outs
mov
int
nop
mov
cli
into
leave
jle
inc
add
cwde
xchg
adc
dec
add
loopne
jge
dec
push
dec
les
pusha
gs
mov
inc
mov
imul
gs
mov
lahf
neg
sbb
add
arpl
push
lock
push
fdiv
pop
call
sub
sbb
mov
mov
mul
lahf
int3
cwde
xchg
and
movs
push
lods
dec
mov
cld
(bad)
sahf
or
push
loope
rol
cmc
(bad)
mov
(bad)
ins
pop
hlt
scas
fdiv
cmp
jle
gs
sar
xchg
inc
out
(bad)
and
mov
ror
mov
or
mov
jmp
sbb
rcl
mov
xor
xor
icebp
leave
cmps
jecxz
ret
jnp
mov
fnstsw
dec
movs
mov
repz
jecxz
fbld
push
out
xor
mov
loop
pop
push
add
pushf
add
jae
push
das
or
stc
rol
mov
sub
aaa
iret
sbb
push
les
leave
ret
mov
cs
mov
rcl
mov
pop
cmp
lock
inc
pusha
and
adc
jnp
retf
jecxz
scas
lds
mov
(bad)
jp
cdq
int
adc
iret
jnp
cmp
fbld
pop
sbb
jmp
test
jno
cld
push
jecxz
mov
cmc
call
add
div
add
sbb
shl
pop
or
mov
stos
in
xchg
add
cli
xchg
push
push
call
and
or
popa
imul
mov
stos
adc
mov
jmp
cmps
je
ins
sbb
js
popa
imul
fcomp
inc
std
mov
jns
ins
test
jns
xchg
pop
jbe
loop
inc
mov
test
retf
pusha
retf
popf
or
or
pop
dec
cld
mov
or
addr16
push
dec
std
aam
push
rcl
xchg
jo
xor
sti
push
or
dec
not
push
or
push
pop
fwait
pop
mov
scas
retf
xchg
dec
mov
pusha
xchg
and
dec
outs
inc
xchg
test
(bad)
test
xor
jne
or
in
icebp
cmp
imul
and
nop
jmp
pop
(bad)
in
bound
mov
sbb
pop
adc
fcmovnb
loopne
idiv
retf
ds
neg
ret
xchg
fbld
push
sub
(bad)
pop
int3
mov
rcr
xor
int
xlat
or
aad
mov
mov
or
sub
pop
sbb
cmp
xor
add
cmc
sub
sar
(bad)
(bad)
(bad)
mov
movs
jecxz
pextrw
mov
xchg
mov
(bad)
cmp
ror
and
add
and
jp
jbe
mov
in
mov
shr
fisttp
ficomp
sti
sbb
xchg
(bad)
pop
repz
sti
rol
mul
jne
inc
sbb
add
cdq
or
movs
and
sbb
xchg
inc
mov
fcmovnb
int
into
pop
pop
aam
ror
sbb
(bad)
shl
xor
pusha
sbb
movs
push
fidiv
popa
or
sbb
push
sbb
or
or
pop
inc
and
push
dec
imul
and
loope
lahf
fwait
sub
mov
adc
jnp
cmp
loope
repnz
daa
popa
repnz
pop
repnz
movs
data16
ds
mov
test
mov
push
adc
mov
jns
lahf
xlat
fisub
add
adc
jo
sub
retf
mov
jecxz
or
shl
jge
cld
push
jg
stos
adc
inc
xor
add
mov
ss
adc
adc
data16
sub
pop
(bad)
js
sbb
push
or
mov
rcl
inc
or
into
push
ret
call
(bad)
jg
(bad)
test
xchg
fcomp
xchg
cmp
fldpi
cmp
pusha
repnz
retf
cmp
pop
mov
movs
jl
les
xchg
out
xor
sbb
sbb
fadd
dec
fs
or
mov
dec
sbb
mov
jp
jb
jae
movs
or
nop
fld
jle
sbb
pop
mov
enter
add
or
aam
or
jmp
sub
jmp
mov
(bad)
pop
jae
sbb
arpl
aam
ins
dec
std
int3
lahf
ja
jbe
cli
and
pop
das
jp
jg
loopne
aas
arpl
outs
cli
xor
mov
jmp
cmp
mov
scas
in
bound
mov
adc
fnsave
idiv
mov
adc
xlat
jno
mov
pushf
scas
push
jmp
pusha
popa
rcr
sbb
movs
scas
out
dec
sbb
sbb
int
call
jmp
ja
test
retf
mov
sub
call
fstp
adc
lods
inc
call
cld
pop
adc
cmp
pop
xchg
push
stc
inc
aad
add
adc
push
xchg
mov
jge
pushf
mov
bound
jle
dec
inc
clc
sub
stos
push
cwde
add
dec
mov
in
xor
jae
jbe
sti
sahf
cli
inc
in
bound
mov
push
mov
out
pop
mov
out
mov
test
pop
mov
in
es
cmp
jbe
pop
out
mov
outs
cmc
mov
lea
jae
jge
xchg
cs
or
xchg
mov
cwde
push
sub
pop
pop
inc
aaa
dec
sar
aad
int
jp
adc
or
inc
data16
int
and
xchg
js
pop
pop
loopne
fmul
jae
iret
pop
(bad)
sbb
jmp
sar
add
bound
xchg
rcr
xchg
dec
cmp
adc
int3
sbb
pop
mov
inc
addr16
cmp
xor
cs
ds
cmp
inc
sub
(bad)
push
mov
cdq
pop
and
adc
inc
loope
loopne
pop
jmp
sub
mov
sbb
jnp
test
rcr
das
mov
jb
sub
retf
(bad)
aas
(bad)
dec
jne
loope
aas
pop
ret
fcmovnbe
fwait
sub
adc
adc
imul
push
lahf
jbe
mov
pop
xor
nop
imul
ins
mov
inc
mov
jae
push
sbb
inc
add
xchg
jmp
push
pop
push
mov
dec
out
jbe
and
pop
retf
jp
adc
or
lea
cmc
daa
retf
mov
sub
mul
jmp
jecxz
dec
mov
push
repnz
jns
or
inc
xchg
fs
xchg
mov
sub
scas
inc
ds
test
movs
lock
xchg
int
cmp
test
test
mov
sysret
out
repz
sar
cmp
mov
and
inc
sti
inc
xor
daa
bound
shl
push
outs
arpl
mov
mov
(bad)
jl
push
pop
push
repz
stos
test
cmps
hlt
jecxz
pushf
sbb
movs
jns
div
mov
and
in
push
add
(bad)
retf
mov
cmp
lds
dec
jb
dec
cmp
out
cdq
mov
out
adc
or
add
add
or
adc
test
out
in
in
sbb
cmp
mov
movs
and
in
xor
loop
adc
icebp
mov
adc
or
push
fldcw
and
and
jle
push
leave
cs
inc
sbb
test
loopne
popf
jp
inc
xchg
in
in
cmp
mov
sub
call
clc
jo
xchg
(bad)
mov
ins
std
jmp
imul
and
adc
retf
pop
dec
sbb
inc
fwait
inc
jno
std
xor
cdq
add
test
sub
inc
arpl
dec
scas
stc
jl
fs
jg
bound
xchg
pusha
xchg
aaa
lock
lea
gs
xchg
in
sub
xchg
pushf
xor
jbe
gs
and
ins
mov
mov
inc
aad
sub
ja
mov
push
pushf
fisub
out
push
or
inc
pop
ins
pop
push
lock
cmp
aaa
sbb
je
pop
dec
add
mov
push
sbb
inc
push
aam
dec
mov
mov
out
add
adc
out
enter
test
pop
icebp
mov
bswap
xor
push
aaa
retf
arpl
xor
inc
mov
or
lods
dec
int
es
in
and
inc
push
and
fadd
(bad)
stos
dec
sub
dec
push
jge
pop
jne
pop
sub
(bad)
pop
push
repz
nop
mov
ins
adc
das
and
lahf
in
mov
fwait
inc
lods
retf
cwde
enter
add
sbb
bound
cmp
adc
jmp
mov
add
call
sbb
jbe
and
push
int3
enter
xchg
iret
cmp
mov
sbb
ret
sbb
stc
scas
jb
sub
addr16
push
mov
ret
mov
pop
mov
xor
cmp
jb
inc
test
mov
cld
add
lock
outs
mov
push
fnstsw
jmp
loopne
adc
scas
inc
mov
js
jno
sbb
imul
js
jo
pop
sbb
inc
ins
test
bound
shl
jae
pop
lea
aas
fcomip
mov
xchg
arpl
pop
or
mov
cwde
xchg
push
or
fcom
idiv
add
push
jge
push
lock
push
fild
pusha
sbb
inc
mov
dec
repz
mov
push
xor
push
loop
icebp
adc
sbb
cld
push
shl
fs
sub
mov
fisttp
mov
hlt
addr16
cwde
aaa
xchg
xor
pop
jp
(bad)
dec
fmul
mov
sub
lea
xor
add
and
jg
push
fiadd
xor
add
cmc
cmps
mov
add
mov
push
dec
(bad)
in
in
bound
sti
sub
out
or
ds
mov
inc
imul
add
repnz
add
out
rcl
dec
(bad)
fistp
jb
adc
pop
mov
dec
ja
call
cmp
ja
add
aad
inc
ss
cli
call
ja
adc
fdivr
jmp
fcomp
je
push
sbb
leave
xor
jle
sub
pop
not
adc
pop
mov
(bad)
jbe
iret
sub
mov
xchg
xor
push
and
std
ds
cs
sbb
ja
jg
not
test
scas
add
jmp
sbb
and
mov
cdq
xchg
dec
ret
in
rcl
(bad)
ror
or
jbe
mov
gs
dec
jg
cmc
jne
and
cmp
push
addr16
fstp
loopne
or
xchg
sbb
push
je
daa
dec
xchg
sbb
rcr
in
ja
les
mov
inc
jnp
popf
dec
sbb
shr
and
mov
dec
jle
sub
pop
mov
sbb
xchg
int3
push
ins
xchg
jae
inc
push
inc
push
imul
cmp
dec
in
ret
or
cmp
push
faddp
das
sbb
or
sbb
mov
rcl
(bad)
inc
sahf
sti
cmp
pop
lods
cs
adc
fisubr
mov
add
inc
int
xchg
call
jmp
mov
dec
jns
jg
test
cmp
jb
cmp
push
add
or
ja
cli
mov
outs
inc
xchg
aas
sbb
(bad)
push
xchg
add
pusha
ror
in
arpl
inc
jmp
pusha
test
iret
outs
idiv
push
or
xchg
xchg
push
cmp
cmps
in
fdiv
dec
ins
sub
jns
lods
icebp
retf
mov
pusha
outs
adc
or
sbb
test
mov
mov
pop
dec
je
scas
mov
test
and
xchg
mov
adc
adc
cmp
sub
or
or
mov
mov
mov
cld
push
cmp
dec
xor
jmp
mov
ror
and
xchg
(bad)
inc
adc
dec
test
xlat
mov
mov
jno
and
mov
fwait
jno
je
inc
stc
cmps
pop
lods
in
fcmovbe
pop
(bad)
cld
ja
mov
pop
test
pop
fwait
jb
jo
loope
mov
xor
fmulp
idiv
mov
sbb
mov
jne
mov
jns
xchg
sahf
cmps
push
lods
leave
mov
std
loope
mov
icebp
rcr
pop
or
add
ret
xchg
sbb
mov
or
push
mov
sbb
cmp
xchg
fcom
xor
std
stos
ficom
int3
les
in
cmps
out
or
and
push
mov
push
xor
mov
jbe
inc
jb
(bad)
and
sar
pop
cmp
mov
hlt
fild
sbb
fadd
xor
test
pushf
test
aaa
(bad)
sbb
fnstenv
aad
in
sbb
and
jp
pop
into
xor
pop
jne
loope
mov
add
mov
pop
aam
push
in
addr16
sub
mov
cmps
sub
fcom
xchg
cs
aad
mov
fdiv
clc
lods
mov
pop
pushf
sbb
xor
loope
fadd
xor
test
push
outs
push
xchg
ret
mov
cmc
movs
push
dec
push
nop
ins
or
add
mov
xchg
push
adc
fwait
push
retf
js
mov
pop
movs
fimul
outs
jecxz
xor
dec
scas
imul
and
push
xchg
(bad)
scas
imul
mov
js
and
std
test
and
inc
pop
fimul
rol
aaa
out
push
jp
stos
lahf
jge
jl
sbb
in
inc
jo
mov
sbb
jo
and
jge
repnz
in
pop
in
sub
repnz
stos
jecxz
lods
dec
scas
mov
push
push
pop
xlat
sbb
cli
mov
dec
mov
jp
add
(bad)
cli
movs
and
jns
xor
lea
sti
imul
sub
push
js
jl
or
test
and
sbb
arpl
stc
aam
cmps
outs
popf
lods
and
mov
cdq
in
add
outs
ror
xchg
jo
loop
cwde
fwait
pop
adc
in
jecxz
popa
out
arpl
sub
rcr
ret
hlt
xor
sbb
hlt
add
push
scas
out
dec
cmp
shr
lds
inc
outs
add
add
mov
popa
sub
adc
shr
and
lds
mov
mov
not
sbb
sub
or
jg
leave
fnstsw
xor
data16
adc
lods
jmp
xchg
sbb
out
add
call
adc
mov
jns
cld
out
int
hlt
inc
ins
inc
lods
sbb
leave
fsub
cdq
ins
daa
push
jmp
pop
fiadd
(bad)
xor
int3
inc
mov
sbb
xor
inc
xor
add
mov
loopne
sbb
rcl
ss
(bad)
dec
lods
cli
and
mov
stos
aaa
dec
adc
adc
in
fst
inc
pop
push
sbb
add
jo
call
je
(bad)
jecxz
adc
(bad)
into
aaa
shl
dec
rcl
out
test
mov
call
adc
loopne
sbb
fwait
push
jg
sahf
gs
lods
jbe
ror
int3
sub
stos
imul
xlat
sub
jne
inc
cmp
cmp
ffreep
push
not
xor
sbb
lea
add
(bad)
and
fadd
scas
in
daa
mov
xor
cld
sub
jl
test
bound
sbb
pushw
jae
fsubr
dec
(bad)
xchg
cmp
aad
inc
jae
out
sub
lea
mov
imul
scas
jle
into
cld
inc
pop
dec
pop
dec
xor
jo
jnp
popf
vunpcklpd
mov
ins
les
fcomp
jo
mov
out
push
xchg
scas
mov
mov
pop
cs
lea
xchg
cld
(bad)
jmp
lea
shr
call
fisttp
dec
mov
push
in
dec
pop
xlat
jle
ret
xchg
xor
fnsetpm(287
mov
rcr
iret
push
shr
loopne
inc
lds
inc
iret
call
stos
jp
inc
aaa
ins
or
aas
mov
pop
mov
mov
adc
addr16
jno
les
pop
pop
stc
cmp
xor
cmp
mov
cmc
add
mov
adc
cs
jmp
fwait
rep
(bad)
stc
inc
rcl
out
cmc
dec
test
aad
cld
sub
pop
sbb
mov
pushf
shl
push
push
cmp
dec
scas
sub
mov
pop
sub
call
and
mov
mov
jnp
sub
fld
ret
or
(bad)
bound
dec
scas
(bad)
push
adc
jecxz
ins
cmc
xchg
mov
sub
push
mov
stc
mov
or
test
pop
mov
or
(bad)
sbb
dec
mov
jnp
pop
mov
dec
(bad)
mov
jnp
cmp
imul
xchg
lods
sub
inc
sti
mov
fadd
das
mov
add
xchg
push
and
push
cmps
lock
sbb
adc
xchg
sbb
cld
enter
lock
outs
out
xchg
push
(bad)
sub
ret
ret
loop
idiv
mov
push
das
adc
xchg
call
cmps
fwait
lahf
call
mov
mov
(bad)
int3
pop
test
cdq
add
(bad)
jno
and
sub
cmp
je
cmp
sbb
in
cmp
push
adc
mov
pop
mov
mov
imul
push
mov
inc
out
aas
push
jae
lock
and
dec
cld
fsqrt
sub
xchg
iret
adc
sahf
enter
iretw
cmp
xor
and
shl
or
xor
scas
jmp
push
inc
ret
mov
xchg
xlat
inc
into
in
out
cmp
jecxz
lods
adc
mov
xchg
sub
icebp
jae
pop
xchg
sub
mov
sub
fisttp
in
pop
push
ss
ret
(bad)
shr
mov
mov
mov
jmp
xchg
mov
adc
mov
xlat
inc
jo
cmp
in
call
cli
inc
in
lahf
ss
in
jae
out
addr16
push
movs
pusha
inc
xchg
(bad)
nop
adc
smsw
test
or
scas
pusha
adc
leave
xchg
cmp
pmulhw
cmp
mov
in
es
xchg
mov
dec
mov
push
xor
pop
push
test
iret
adc
pusha
mov
xor
jne
jb
mov
int3
pop
and
mov
jae
clc
test
mov
shl
and
popf
dec
pop
cmc
pop
sbb
ror
pop
push
ret
ins
dec
lods
call
xor
pushf
call
adc
xchg
push
xor
push
cmc
leave
mov
test
es
mov
cmps
mov
pop
add
sub
(bad)
adc
pop
jb
imul
xor
sbb
xor
popa
push
rcl
fnstsw
movs
ins
adc
mov
pop
dec
das
sbb
ret
add
inc
mov
sbb
push
push
jae
xlat
cli
jmp
test
pop
fnsave
test
test
jbe
jae
xor
mov
ja
(bad)
push
sbb
mov
sahf
inc
(bad)
push
and
mov
mov
test
or
and
push
sbb
data16
mov
xchg
adc
sub
push
sub
or
fsubrp
pushw
xor
and
shr
jb
out
mov
cdq
inc
push
mov
xchg
jle
movs
xor
imul
mov
dec
pusha
mov
mov
test
fwait
pop
retf
imul
adc
cmp
inc
iret
sub
dec
bnd
adc
in
mov
pop
cmp
push
jl
pop
loopne
pop
pop
pop
pop
es
lahf
mov
push
push
dec
xchg
inc
out
add
fs
(bad)
mov
and
xchg
cdq
rcl
xchg
xor
out
(bad)
ficom
ror
lods
(bad)
int
loope
lods
jmp
clc
shr
jecxz
sbb
aam
push
push
ret
outs
or
adc
add
jno
mov
dec
test
ja
mov
dec
pop
cmp
arpl
in
mov
mov
adc
pop
scas
loope
scas
icebp
mov
adc
les
xor
xor
ins
fsub
lods
dec
ror
and
sub
leave
sbb
and
(bad)
jl
shr
addr16
fimul
push
ror
enter
gs
je
and
es
lods
mov
aam
retf
rol
pop
mov
into
cmps
data16
xor
and
test
daa
adc
rcl
lea
fbstp
mov
lahf
pop
shr
xor
xor
shl
mov
lock
dec
fcom
mov
loope
or
push
dec
mov
push
pop
imul
mov
xchg
jge
mov
std
fstp
leave
mov
xchg
dec
repz
mov
or
mov
mov
hlt
jecxz
inc
pop
fbld
icebp
cli
jb
loopne
scas
sbb
inc
and
fucomp
fld
xor
inc
mov
loope
mov
in
stos
and
pop
loope
ja
imul
mov
out
dec
pop
fdivr
(bad)
retf
dec
cmps
ins
or
lock
fwait
je
les
leave
cmp
leave
jp
dec
inc
out
fxam
cmp
sbb
and
aam
push
or
sbb
minps
sub
test
pop
cmp
pop
inc
hlt
ret
cld
jmp
add
pop
mov
mov
cmp
mov
std
add
daa
test
push
sbb
test
stc
dec
popf
movs
js
sub
mov
call
pop
shl
mov
dec
mov
add
fistp
adc
adc
xchg
dec
mov
jb
lahf
pop
test
mov
xchg
arpl
sub
ret
pop
pop
(bad)
xchg
out
fbld
(bad)
cmp
pop
lahf
retf
pop
xor
retf
and
inc
pop
icebp
add
sbb
dec
cdq
inc
in
pop
gs
push
cld
mov
xor
xchg
dec
mov
mov
ret
je
adc
push
pop
dec
das
lea
jecxz
mov
(bad)
out
pop
imul
addr16
sub
push
cld
mov
sub
xor
outs
ins
or
cmp
cmps
ja
dec
sub
stos
call
loop
scas
(bad)
jmp
sub
int
call
jne
and
(bad)
daa
lds
idiv
cmp
mov
xor
mov
retf
jmp
push
xor
jg
fild
cld
fs
pushf
cdq
jbe
mov
fdiv
push
and
adc
sub
inc
mov
xor
jmp
jae
sbb
jmp
stos
nop
shl
jno
repz
cmc
mov
inc
and
inc
into
sbb
mov
jecxz
sub
sub
aad
in
mov
xor
retf
pop
inc
mov
mov
(bad)
cwde
je
push
adc
add
push
leave
xor
sub
shl
in
(bad)
xchg
xchg
push
adc
mov
push
sbb
xchg
pop
mov
ret
(bad)
sbb
fs
mov
or
mov
fimul
cmp
(bad)
in
fstp
mov
loop
js
xor
rcr
mov
(bad)
rcl
cmps
pop
add
sbb
mov
inc
sub
sahf
xor
mov
xor
lods
mov
stc
pop
fadd
loope
push
jae
sub
add
stc
int3
jg
mov
aaa
aas
loopne
cmps
ja
dec
(bad)
icebp
fisttp
out
or
mov
mul
and
pop
pop
call
stos
jl
push
mov
int3
cli
pop
jbe
out
sub
retf
or
pop
sub
and
out
mov
into
fist
sub
shl
shl
mov
(bad)
rcl
les
dec
mov
(bad)
into
jmp
sar
sbb
sbb
push
inc
inc
imul
add
and
int
xor
les
jl
inc
and
push
ja
push
retf
arpl
ror
div
inc
cmp
ins
out
mov
sub
(bad)
xlat
addr16
push
sbb
adc
mov
jle
imul
push
inc
pop
scas
sub
in
add
fmulp
mov
jnp
xchg
loopne
mov
in
push
fldcw
gs
shr
mov
adc
out
adc
es
out
xchg
mov
xchg
push
jns
in
xchg
aaa
push
sbb
jnp
sti
pop
cmp
loope
jge
fstp
push
in
retf
or
pop
rol
(bad)
and
sub
jns
aaa
fbld
push
pop
adc
sub
out
sub
inc
mov
and
mov
arpl
push
sbb
cmps
inc
push
mov
ja
sbb
ret
sub
xor
xchg
leave
and
fimul
xchg
jmp
ret
pusha
(bad)
repz
dec
sar
sub
icebp
dec
fs
mov
cld
xor
jno
clc
into
mov
inc
add
inc
inc
push
and
cmp
inc
loope
aam
movs
rep
std
dec
(bad)
add
cmps
aas
xlat
push
lea
in
call
adc
and
outs
scas
cmp
or
push
in
leave
xacquire
mov
pop
jb
test
jno
pop
dec
xor
sub
mov
sub
push
aad
jl
xchg
imul
cmp
push
cmp
sub
mov
popf
nop
push
add
clc
aam
dec
mov
push
push
push
xlat
or
pop
xor
sub
mov
cmp
stc
lods
xchg
adc
mov
adc
sbb
loopne
leave
cmp
ins
mov
out
ins
pop
test
or
adc
xchg
mov
shl
push
icebp
jae
neg
mov
mov
push
push
cmc
mov
(bad)
mov
lods
cld
push
shl
or
xchg
add
and
jge
pop
ds
stos
leave
or
sti
sub
mov
lea
int3
mov
lods
push
mov
mov
push
enter
out
repnz
or
bound
lds
inc
push
sub
push
cmp
and
mov
mov
repnz
mov
inc
inc
jne
xchg
or
xor
ret
pop
push
aam
call
cmp
in
jae
add
mul
cmp
and
cmp
pop
inc
push
xchg
shl
sbb
shr
and
fadd
(bad)
cld
jmp
or
sub
sbb
fisubr
iret
push
jp
push
inc
jle
sbb
in
xor
fadd
adc
pop
mov
jb
dec
(bad)
sbb
push
push
sub
test
icebp
and
mov
jne
jno
repz
xor
jo
mov
mov
cmp
cmc
dec
xchg
xor
sbb
sbb
jb
jl
pop
jp
popf
lock
pop
jnp
inc
das
imul
add
fwait
in
and
test
icebp
and
inc
cdq
cli
xor
(bad)
cmps
movs
aas
arpl
sub
push
retf
out
ficom
adc
js
pop
lds
jmp
push
les
push
out
cmp
je
fimul
mov
sti
or
mov
dec
out
mov
push
leave
push
cdq
movs
xlat
popa
pop
(bad)
jne
jne
inc
and
mov
ss
(bad)
xchg
iret
add
sub
pushf
xchg
push
lahf
jmp
cli
mov
sbb
arpl
push
pop
push
(bad)
push
imul
gs
ret
ja
aam
das
push
add
xchg
ret
mov
xchg
fnstsw
rcr
or
jmp
ss
jae
sub
sti
sbb
test
test
inc
xor
repnz
aad
xor
fs
retf
hlt
cld
and
xchg
sar
outs
or
pop
adc
popf
fsubrp
lods
rcr
das
test
or
push
rcl
hlt
stc
jmp
xchg
push
pop
test
pop
jbe
stos
push
lea
adc
inc
test
mov
test
pushf
cmp
adc
sbb
test
std
sub
jbe
and
out
cmp
scas
jbe
pop
ins
mov
fstp
xor
in
push
jbe
push
mov
sbb
cli
call
in
stos
gs
dec
sub
adc
push
(bad)
arpl
movs
repnz
jecxz
cmp
(bad)
je
rol
mov
inc
pushf
adc
shr
pop
je
out
add
mov
xlat
bound
sub
pop
mov
stos
fiadd
lea
lods
xor
mov
sbb
sar
sub
cmp
xchg
daa
outs
push
adc
adc
out
arpl
jle
jl
xor
push
in
test
add
bound
loopne
out
test
lods
dec
ret
pop
rol
and
add
leave
repz
repnz
xchg
pusha
int3
popf
jae
dec
cmp
pop
add
push
bound
push
(bad)
data16
test
fwait
jo
out
push
cmp
int3
imul
pop
mov
or
out
addr16
xchg
adc
hlt
out
fst
leave
mov
and
dec
pop
pop
ins
push
outs
ss
daa
cmps
pushf
jnp
or
adc
call
aas
ja
pop
aas
sub
lahf
push
mov
adc
daa
je
xor
mov
pop
ins
dec
or
add
inc
pop
iret
shl
pop
rep
bound
mov
cdq
aad
sbb
fwait
mov
mov
mov
inc
inc
jl
(bad)
aaa
les
mov
push
cmp
cmps
stc
jle
mov
jne
loopne
sub
dec
mov
push
int
outs
dec
cmc
(bad)
or
dec
dec
mov
adc
jle
shr
push
ret
inc
icebp
mov
lods
movs
ja
push
imul
mov
fs
mov
cmp
ss
(bad)
push
add
fbstp
pop
ret
pop
jl
call
adc
js
pop
adc
inc
mov
xor
imul
fs
loop
mov
dec
push
adc
gs
lahf
adc
mov
pop
mov
ss
sub
push
cli
jmp
movs
xchg
push
cmp
bnd
jmp
mov
ins
test
lods
iret
sbb
push
mov
scas
add
aas
inc
or
fstp
popa
jno
add
pop
sbb
cwde
xchg
iret
shl
and
xchg
mov
sbb
jns
in
lods
pop
xchg
sbb
das
or
imul
adc
xor
sub
xchg
jae
ss
call
xchg
retf
pop
sbb
loop
mov
pop
mov
ja
xor
jb
sar
movs
pop
jp
xchg
add
out
pop
loope
mov
imul
dec
scas
je
pusha
popf
fimul
jl
es
or
cwde
inc
imul
cli
cmp
jbe
adc
jg
or
orps
in
jae
je
int3
push
out
push
sub
cli
jb
movs
fwait
jg
jbe
sub
adc
arpl
jne
jmp
push
jge
addr16
cdq
nop
imul
mov
je
push
sar
into
scas
or
or
cmp
pop
and
inc
or
sub
clc
cmp
icebp
mov
jae
inc
ret
dec
pop
aaa
sbb
pop
dec
sub
and
mov
ins
aaa
push
or
sbb
rol
adc
call
push
loop
inc
ja
add
ja
xchg
adc
icebp
xchg
data16
pop
iret
out
push
cs
mov
out
(bad)
repnz
fs
leave
in
das
mov
(bad)
pop
xchg
aaa
push
mov
push
in
mov
cmps
lea
cdq
in
inc
dec
jbe
ret
out
aas
into
scas
sub
aam
rcl
cwde
fwait
push
fld
fs
not
xchg
retf
not
jecxz
add
clc
dec
lahf
dec
mov
out
inc
mov
xchg
add
cs
pop
or
mov
popf
ficom
dec
sbb
push
cdq
pop
movs
loope
add
arpl
jp
xor
addr16
or
fcomp
popa
pop
jge
pop
call
mov
sar
rep
adc
dec
push
scas
movs
hlt
es
(bad)
sbb
in
push
hlt
inc
sahf
mov
and
js
jnp
pop
call
inc
pop
test
mov
neg
push
cwde
sbb
shr
retf
mov
ss
mov
inc
and
in
mov
xchg
xchg
cmps
hlt
leave
dec
cmps
or
hlt
leave
sub
push
ret
cmp
test
jle
in
ins
jo
xchg
es
push
iret
call
aaa
aas
or
pop
or
dec
mov
and
repz
gs
sbb
sbb
xchg
ret
std
lahf
xchg
mov
mov
jno
xchg
cmp
inc
mov
shl
add
inc
sbb
and
xchg
ss
mov
xchg
mov
mov
dec
jae
push
cmp
inc
shl
pop
cmp
mov
cmp
jbe
jl
test
jns
daa
pop
call
lea
retf
loop
fistp
daa
retf
push
stos
sbb
out
mov
ds
retf
mov
push
add
in
pushf
jb
push
in
mov
fsubr
xor
xor
dec
jno
jp
cmp
sbb
shl
sub
fwait
mov
js
test
(bad)
popa
jbe
sbb
aas
es
dec
loop
fimul
aas
push
sbb
jge
rcl
mov
clc
mov
adc
repnz
ss
xchg
mov
xchg
mov
out
mov
mov
xchg
sub
in
sbb
cdq
test
xor
fs
jmp
mov
mov
cmp
xor
leave
hlt
xchg
mov
push
test
test
stos
icebp
jge
shl
shr
js
mov
xor
xchg
retf
scas
shl
test
cdq
test
add
jge
stos
xchg
sbb
test
and
dec
mov
fisttp
cmp
sub
xchg
xor
dec
xor
out
cmc
xchg
imul
movs
sub
cs
imul
push
mov
mov
push
cld
sbb
adc
retf
xor
sbb
dec
or
push
sbb
xor
inc
sahf
jne
ss
into
sub
xor
fidiv
fadd
enter
imul
out
and
daa
xchg
rol
or
dec
xor
mov
shl
xor
iret
lahf
dec
sbb
jno
jb
das
mov
inc
xor
iret
jno
inc
(bad)
aad
movs
cmps
dec
scas
inc
sahf
loop
enter
mov
push
outs
push
mov
push
scas
retf
daa
jp
mov
and
jne
mov
ficomp
add
and
pop
cmp
pop
cmp
mov
cmp
aaa
adc
push
xchg
jl
lahf
loopne
and
add
cdq
int
cmp
push
fist
ds
push
test
and
es
mov
adc
add
push
jo
ins
cmp
push
push
iret
jbe
xchg
sub
inc
inc
test
sahf
(bad)
and
cmp
lock
aaa
add
in
scas
sti
inc
dec
test
adc
sub
lock
ret
adc
into
and
popa
or
movs
xor
pushf
fisubr
jb
retf
push
mov
sub
mov
push
aad
stos
out
daa
outs
mul
inc
movs
loope
jle
sub
pop
push
xor
movs
and
cli
fcmovnbe
and
xlat
pushf
in
push
call
fmul
jge
jmp
lahf
pop
mov
cdq
or
repz
jecxz
mov
push
jl
call
dec
xlat
mov
push
sub
xchg
mov
pop
out
or
repnz
pop
sbb
sahf
repz
ret
ss
movs
stc
and
jg
add
mov
pop
xor
cli
stos
cmp
lods
loope
pop
and
sbb
(bad)
scas
mov
pop
adc
(bad)
iret
xchg
mov
stos
sbb
pushf
out
jecxz
xor
push
fisub
mov
aaa
xchg
movs
xor
xor
idiv
arpl
pop
jae
fs
adc
mov
dec
sbb
outs
sub
and
push
mov
sbb
cdq
jae
mov
in
nop
stos
out
fstp
ret
sub
jno
fisub
mov
pop
xchg
faddp
gs
push
jle
popa
jb
aam
pop
retf
stos
jmp
movs
mov
das
out
push
sub
aaa
mov
cwde
jb
cld
mov
dec
into
loope
(bad)
dec
js
ficomp
jnp
push
jno
shl
dec
pop
adc
sub
fsub
jo
xchg
inc
push
int3
and
lahf
fwait
push
ret
lds
jmp
or
cwde
shr
aaa
jecxz
xchg
pop
xchg
pop
arpl
sahf
lahf
je
call
push
ret
push
ja
ins
test
lahf
icebp
jge
inc
div
mov
adc
das
mov
cmp
cmp
push
ins
int
(bad)
aaa
and
push
mov
movs
mov
mov
scas
repz
cmp
paddd
test
daa
ds
and
and
jns
call
and
cmp
lea
rcr
inc
adc
push
into
cmp
sub
or
pop
test
or
push
hlt
mov
xor
mov
add
inc
mov
lods
and
pop
push
inc
inc
pop
aas
lods
pop
lds
push
lods
stc
push
inc
cmc
sar
ret
mov
dec
loopne
mov
icebp
jecxz
dec
mov
push
call
inc
and
add
mov
cs
je
jae
pushf
aad
xor
repz
outs
inc
sbb
stc
mov
retf
jo
jge
test
aaa
call
mov
mov
in
scas
sbb
mov
lock
stos
add
xchg
aad
push
cmp
cmp
std
aas
and
out
dec
bound
mov
add
mov
xor
adc
pop
mov
imul
cmp
stos
test
pop
jmp
dec
xor
test
outs
stos
push
pop
pusha
cmps
xchg
test
(bad)
sti
in
ret
push
xor
push
push
sub
sti
pop
icebp
mov
mov
in
xor
jnp
xchg
movs
scas
pop
fstp
jmp
and
mov
adc
inc
ins
jo
cmp
mov
ja
cmp
mov
xor
mov
(bad)
sahf
xor
out
aaa
cmp
pop
mov
pop
mov
dec
pushf
inc
jmp
push
xchg
dec
lock
dec
xchg
sub
and
jo
cmps
add
mov
mov
jbe
fsubr
test
daa
loope
es
les
or
outs
dec
dec
cwde
into
ins
xchg
ret
cdq
sub
mul
addr16
out
loope
sgdtd
add
and
scas
pop
shr
and
int
pop
jmp
push
sub
(bad)
mov
or
div
sub
push
xchg
and
jns
loopne
jmp
dec
dec
dec
jo
hlt
cdq
pop
adc
sahf
jge
push
mov
xchg
mov
pop
jbe
jne
lock
jbe
dec
fbstp
scas
das
scas
ds
jno
and
aam
inc
fmul
cwde
repz
fs
out
jbe
sbb
jae
push
cmp
add
test
adc
xchg
sub
adc
pop
imul
stc
sub
sahf
jns
shr
pop
es
inc
aaa
push
sti
xchg
loop
fs
pusha
call
lock
mov
lods
add
div
or
ret
pop
push
aad
pop
inc
inc
sbb
fidivr
icebp
fistp
mov
add
div
out
inc
ror
inc
sar
or
mov
mov
mov
dec
ret
push
add
xor
and
fwait
int3
aad
or
shr
or
or
mov
aad
ins
mov
dec
ret
movs
psignw
call
sub
inc
or
cmp
retf
push
call
cmp
popf
in
sub
fist
lea
cdq
jp
(bad)
imul
xchg
(bad)
jg
dec
sar
js
cmp
call
or
inc
jp
cli
not
pop
stos
aaa
repz
lods
(bad)
push
mov
push
jecxz
(bad)
adc
mov
les
icebp
mov
or
and
fidivr
call
sub
test
cmp
dec
stos
data16
pop
xor
and
ins
fs
cld
xor
xchg
fs
aam
mov
jge
sub
cli
dec
jge
mov
inc
scas
repz
mov
or
xchg
inc
xor
xchg
cmp
dec
les
xchg
aam
mov
int3
and
bts
push
call
test
adc
(bad)
mov
dec
scas
pop
movs
(bad)
xchg
mov
ins
inc
imul
and
mov
push
js
(bad)
push
push
inc
popa
hlt
add
das
and
stos
(bad)
jle
add
and
lods
arpl
sahf
dec
xchg
cmps
pop
jg
(bad)
and
lods
pop
sahf
jle
xchg
push
pushf
dec
or
xor
or
sub
loope
retf
push
or
pop
pop
and
loop
cmp
push
add
jecxz
mov
mov
fcomp
inc
and
push
pusha
mov
and
cmps
jmp
or
lds
jb
fidiv
xchg
mov
mov
add
out
out
inc
scas
adc
aaa
sbb
pop
jo
mov
loop
test
pop
daa
push
jmp
jge
nop
cld
cmp
fidiv
shl
and
leave
movs
ins
or
sbb
nop
pushf
test
jmp
mov
xor
loopne
cmps
test
pop
pop
stos
out
retf
imul
dec
sub
aas
mov
fistp
xchg
or
adc
xchg
or
xchg
cld
sahf
in
push
outs
bound
rcl
and
movs
jb
mov
pop
cld
repnz
rcr
nop
imul
lds
mov
test
imul
test
cmp
sti
ret
ss
repnz
xor
jp
mov
fist
in
push
stos
sbb
out
mul
cld
ror
xchg
pop
inc
mov
mov
pushf
adc
and
mov
mov
pop
in
ficomp
das
cmps
add
or
std
cmp
jae
jbe
mov
pop
(bad)
adc
repnz
pushw
cmp
mov
lea
pop
jl
xchg
(bad)
dec
jl
ss
xchg
mov
xchg
push
add
inc
sbb
in
mov
movs
and
push
mov
dec
xor
loopne
aas
fist
sub
mov
shl
pushf
movs
sti
xchg
nop
push
icebp
sahf
push
gs
mov
mov
imul
sbb
sbb
in
adc
jl
enter
mov
or
push
dec
sbb
push
pop
iret
mov
xchg
cld
mov
lods
xchg
or
fs
lods
jb
mov
scas
mov
je
scas
call
mov
ja
mov
add
int3
cmps
xchg
xor
rol
mov
jmp
mov
lea
mov
dec
inc
sub
push
xchg
jo
inc
sbb
fwait
cmp
mov
inc
adc
pop
dec
push
in
popf
pop
add
and
es
rcr
add
rol
xchg
push
inc
add
push
das
bound
jb
dec
mov
inc
jmp
imul
push
inc
inc
pop
jnp
xor
repz
add
icebp
icebp
mov
mov
shr
es
(bad)
push
push
in
les
jle
pop
mov
fprem1
sahf
push
dec
test
mov
cmp
je
loopne
mov
enter
ins
inc
daa
call
mov
loope
dec
(bad)
sub
data16
dec
and
dec
movs
dec
jp
xor
das
inc
mov
fadd
int
inc
leave
pop
jle
cli
or
ss
mul
test
dec
jno
ficomp
in
addr16
or
mov
jmp
add
adc
jns
gs
jb
sbb
inc
imul
ins
daa
jno
xor
scas
adc
stc
adc
jle
subps
hlt
(bad)
loope
xchg
and
shl
fsubr
xor
inc
inc
mov
call
adc
dec
ins
arpl
push
jp
scas
icebp
xchg
fsubrp
in
jns
clc
mov
cmps
out
jno
lea
sbb
dec
mov
rol
mov
(bad)
retf
aam
xchg
pushf
and
outs
je
dec
mov
or
and
dec
test
in
add
(bad)
sbb
lock
call
(bad)
sub
(bad)
or
repnz
xor
mov
aas
push
retf
stos
(bad)
adc
mov
scas
jmp
int3
push
or
sbb
cmp
in
test
xchg
dec
test
adc
lahf
sub
sub
sbb
pop
pop
addr16
or
test
adc
popf
out
lods
cli
mov
ret
mov
and
sbb
jno
dec
lods
dec
add
imul
sahf
pop
cmp
shl
or
and
push
jmp
sbb
aas
cmp
mov
mov
push
ja
jmp
loope
mov
add
sbb
xor
cmp
fsubr
addr16
imul
and
pusha
add
cli
inc
cmp
mov
aad
xor
lods
pop
push
jmp
fwait
in
add
push
push
repz
sub
nop
movs
scas
mov
mov
jge
dec
test
mov
shl
aad
inc
dec
js
cli
es
imul
adc
mov
push
in
test
popa
xchg
retf
shl
jp
in
pop
push
inc
es
inc
psubw
mov
xchg
sbb
and
add
mov
cmp
daa
movhps
jmp
pop
xchg
cli
aam
out
jo
mov
dec
mov
inc
gs
jge
jge
cdq
pop
ss
pop
scas
sbb
or
ins
ror
dec
aaa
xchg
repz
inc
test
sub
ret
popa
sbb
test
add
pusha
xchg
pop
call
and
dec
fs
mov
fst
test
sti
call
jmp
rcr
pop
inc
add
pushf
push
mov
cmp
inc
and
pop
jecxz
and
ror
gs
push
mov
clc
xchg
push
lods
vrsqrtss
stos
retf
imul
mov
(bad)
push
xchg
xchg
xor
sbb
jne
loope
xor
aas
cmp
jb
push
aas
outs
push
mov
scas
sar
lods
dec
push
test
(bad)
sub
(bad)
cmp
dec
xchg
adc
mov
dec
adc
or
push
or
aad
nop
push
mov
adc
lods
pop
or
or
sub
sbb
jo
jae
jb
mov
adc
ror
xor
movs
jnp
imul
sbb
xchg
aam
fwait
test
add
adc
sub
repz
jecxz
test
inc
xchg
pop
mov
cmps
xor
or
mov
aaa
stos
push
outs
cs
mov
sbb
jp
sub
pop
fidivr
jmp
inc
dec
xchg
xchg
enter
loopne
sbb
jne
nop
xchg
push
xor
into
mov
xchg
test
mov
mov
sbb
rcl
xchg
and
sahf
inc
push
clc
in
pushf
mov
repz
cmp
cmps
pop
call
adc
xchg
in
and
jb
sbb
cmp
and
push
jno
sbb
lds
iret
rol
jecxz
sar
shl
enter
in
adc
sbb
int
idiv
xchg
xchg
push
dec
loop
push
jne
fs
ss
sbb
cdq
into
cmps
inc
push
inc
retf
mov
cmp
or
adc
fwait
shl
ds
cmp
pop
jle
mov
cmp
out
dec
jo
adc
pop
add
xchg
retf
add
mov
ret
enter
xchg
les
lds
mov
rcl
sbb
xchg
das
(bad)
popf
and
jb
xor
(bad)
imul
mov
xor
(bad)
adc
mov
sbb
add
xor
xchg
pop
jnp
mov
call
mov
fild
inc
jmp
mov
pop
js
dec
(bad)
sbb
leave
cwde
mov
push
ss
jns
not
inc
imul
dec
clc
retf
(bad)
fcomp
test
cmp
push
jne
dec
(bad)
jbe
sub
out
movs
out
push
push
cmp
sub
mov
xor
cdq
sbb
retf
int
or
aaa
mov
xor
pop
das
arpl
jno
call
aaa
loope
push
mov
fsub
sbb
ret
inc
mov
push
adc
arpl
jns
out
dec
inc
add
arpl
retf
test
mov
and
leave
xchg
and
mov
fs
pop
adc
scas
retf
add
cmp
scas
loop
adc
sbb
aas
cmps
push
ja
sahf
(bad)
inc
xor
popf
cli
(bad)
cld
icebp
cli
movs
pusha
adc
and
mov
jnp
pop
and
jnp
sub
cwde
mov
(bad)
push
mov
shl
xor
(bad)
jl
icebp
je
jmp
sub
xor
xchg
call
adc
mov
pushf
sub
xchg
mov
out
inc
adc
jmp
rol
xacquire
mul
hlt
and
mov
jge
fsub
loop
push
(bad)
fcom
xor
sar
loope
lock
mov
jb
or
ror
mov
inc
jle
sahf
xchg
mov
sahf
cmp
dec
xor
in
cmps
mov
ins
and
push
icebp
add
daa
or
les
lock
int
fst
dec
jle
sub
xor
test
mov
xchg
sub
jmp
mov
movs
cli
pop
jl
push
imul
(bad)
(bad)
rcl
cwde
mov
push
pusha
push
ja
jecxz
and
jns
pop
rep
stos
or
ds
sbb
jmp
xchg
in
jl
add
out
cmp
rol
fld
outs
add
pop
pop
cdq
ucomiss
je
sbb
push
cmp
in
ret
fist
sahf
sub
and
cmc
dec
(bad)
cmc
repz
push
push
cmp
xchg
mov
adc
mov
std
in
jmp
es
mov
jo
cmps
in
data16
and
push
out
movs
fsubr
push
mov
or
shl
jbe
rcl
les
or
or
out
fwait
pop
or
lock
and
pop
sti
clc
xchg
mov
dec
dec
shl
sbb
pop
adc
mov
daa
iret
ret
jmp
bound
ds
imul
mov
rol
shr
std
ins
popa
jecxz
outs
mov
or
pop
(bad)
inc
inc
inc
ja
popa
add
scas
inc
test
xor
push
dec
test
jmp
mov
fild
scas
pop
daa
sub
mov
and
fild
mov
and
sbb
push
jno
dec
sti
dec
movs
in
inc
adc
pusha
adc
mov
inc
lds
cmp
les
push
pop
xchg
(bad)
xor
mov
add
mov
je
mov
xor
push
repnz
test
xchg
jo
repnz
xchg
mov
jns
rcl
or
inc
jns
ret
(bad)
cmc
rcr
jns
gs
or
mov
lods
movs
mov
imul
and
xchg
cwde
mov
jns
jo
sub
adc
vmwrite
les
ins
add
sbb
arpl
out
push
lods
mov
ficom
xor
gs
sbb
sbb
gs
retf
jo
(bad)
push
and
sbb
xlat
cmp
movs
mov
add
xchg
inc
fld
jo
arpl
shr
and
cli
jne
outs
push
and
sar
adc
add
pop
pop
pop
ins
out
jne
xor
xchg
and
iret
and
sti
loopne
adc
mov
cmc
pop
mov
push
not
adc
sahf
mov
or
sti
pop
mov
imul
test
lods
sbb
sbb
push
lahf
jle
shl
push
mov
into
sbb
arpl
and
xchg
xor
imul
jo
and
leave
movs
pusha
add
leave
add
jecxz
pop
push
or
adc
bound
cmp
xchg
sahf
ja
fistp
sti
lods
pop
and
jmp
icebp
popf
adc
inc
syscall
aas
std
jne
lea
ficomp
xor
ds
xor
test
bound
jno
push
iret
pop
jnp
sub
inc
add
lods
idiv
mov
push
or
idiv
rcl
xor
dec
mov
data16
jae
and
dec
and
leave
pop
adc
jo
dec
fmul
or
push
jg
xor
cs
popf
push
cwde
pop
int
and
retf
inc
mov
mov
in
sbb
sub
xchg
adc
pop
cmp
jno
(bad)
and
sub
mov
hlt
test
add
movs
int3
pusha
and
or
mov
fst
mov
std
popf
pop
cwde
ins
jge
and
fidivr
fcmovnu
inc
jmp
ja
xchg
rcl
enter
lods
vmwrite
mov
dec
repz
lahf
in
pop
sub
shl
push
and
retf
(bad)
xchg
mov
pushf
sahf
sub
pop
and
lods
mov
in
dec
sbb
lods
push
shl
push
mov
ja
imul
mov
jecxz
xchg
add
in
ins
ret
aam
mov
dec
xor
jo
mov
std
rol
mov
and
stc
fdiv
sahf
pop
jp
add
jmp
mul
pop
and
pop
mov
cmp
mov
cmps
push
shl
jnp
adc
adc
jne
sub
jp
inc
dec
add
imul
lods
fidiv
gs
jno
addr16
cmp
das
xchg
push
popa
mov
xor
mov
cmp
scas
push
aad
in
mov
pusha
inc
clc
mov
inc
jnp
sahf
push
push
fist
and
fisub
pop
pop
int3
jl
ficomp
ins
adc
cwde
fwait
xchg
sub
dec
jns
cmp
cld
cdq
mov
out
retf
mov
hlt
or
and
jno
and
ficomp
je
push
pop
mov
cmc
addr16
push
sub
jmp
rcr
push
in
xchg
mov
cmp
jnp
pop
mov
mov
push
rol
jo
sbb
xchg
test
mov
adc
jno
jge
ins
dec
mov
jne
fld
ss
jno
lea
stc
inc
fld
jno
test
ret
cmp
test
adc
gs
push
dec
mov
movups
aaa
and
pop
popa
cmp
call
dec
ret
movs
and
scas
stc
push
daa
jne
jmp
and
std
dec
in
xchg
jmp
add
and
mov
(bad)
fisttp
jae
mov
mov
in
sbb
pop
pusha
int3
fldenv
stos
mov
(bad)
xchg
or
mov
lds
popa
in
ins
sbb
stos
or
xor
xchg
arpl
or
cmp
jecxz
push
repz
lods
or
test
xchg
out
loopne
xchg
xchg
nop
pop
lods
nop
push
pop
pop
in
push
mov
fsubr
sub
fs
adc
mov
cmp
pop
cmp
or
and
dec
test
xor
je
test
cld
js
xor
mov
test
ins
xchg
pop
fsubp
adc
cdq
sar
imul
pop
dec
jno
(bad)
aaa
not
pushf
inc
add
test
out
das
inc
repz
cld
in
(bad)
in
aad
pop
repnz
xor
ret
dec
mov
or
mov
sbb
fadd
jl
scas
pushf
mov
lahf
adc
rol
jp
jmp
int3
push
mov
xchg
push
inc
mov
pop
and
xor
scas
sbb
jb
fidiv
pop
mov
clc
les
or
ror
push
xor
mov
and
push
(bad)
ficomp
inc
jne
cmps
leave
or
cmps
xor
in
mov
push
push
push
jae
cmp
or
retf
inc
xchg
fmul
int3
leave
mov
xchg
add
xor
pop
stc
xchg
inc
daa
sar
push
sar
rep
(bad)
gs
cmp
add
out
jp
xchg
mov
jno
adc
dec
pusha
xor
fsub
cmp
fdivp
out
xor
pop
push
gs
std
test
xchg
scas
out
jmp
cmp
or
pusha
xchg
mov
jne
out
out
jmp
xlat
and
and
push
pop
movs
(bad)
mov
sub
movs
rcr
sbb
leave
ds
jg
add
jmp
pop
addr16
mov
lods
dec
jle
jle
js
loop
xor
mov
loopne
cmp
inc
cmp
mov
sbb
pop
inc
sahf
inc
fbstp
dec
stc
dec
ret
push
aas
(bad)
sub
ret
ds
and
xlat
pop
xor
adc
pop
enter
cmp
sub
nop
imul
sahf
sbb
mov
retf
sub
pop
call
xchg
mov
call
and
push
call
or
rcl
push
sbb
mov
cmp
push
jmp
sbb
mov
mov
outs
test
dec
push
mov
cld
call
and
xor
inc
hlt
add
mov
data16
pop
jecxz
int3
bound
arpl
jo
mov
jbe
jmp
jb
repz
sbb
mov
xor
push
rcr
adc
xchg
mov
(bad)
cmp
push
jo
xchg
outs
xchg
ja
imul
stc
jo
mov
jge
shr
ins
sbb
sub
mov
inc
(bad)
xchg
inc
sbb
cmp
pop
out
mov
pop
pop
mov
mov
xor
mov
cmp
and
(bad)
test
dec
es
jo
inc
cmps
mov
dec
xor
mov
mov
repnz
daa
fisubr
sbb
js
xchg
scas
jl
xchg
mov
fiadd
mov
(bad)
xlat
and
and
pop
(bad)
es
xor
pop
ret
inc
cmp
out
pushf
imul
retf
cmp
fs
or
mov
push
test
add
add
pop
dec
out
sbb
pop
test
push
(bad)
outs
ins
pop
jns
(bad)
jb
cli
and
add
pop
int3
aaa
pop
add
loopne
pop
pop
stos
rol
pushf
lahf
jo
xor
mov
imul
call
xor
repz
pushf
mov
lock
push
movs
in
cs
je
(bad)
mov
leave
scas
add
cli
sub
pop
cmps
xor
in
and
lods
push
cmp
hlt
retf
dec
movs
push
cmps
scas
or
test
mov
(bad)
add
xor
mov
mov
mov
(bad)
pop
inc
mov
mov
push
or
in
pop
cmp
mov
cmp
imul
loope
mov
push
(bad)
imul
dec
nop
sbb
loopne
adc
in
sbb
sar
push
dec
push
sbb
cmp
push
mov
inc
pushf
xlat
dec
push
xchg
in
jns
repz
mov
push
push
or
scas
jmp
test
mov
inc
pop
dec
(bad)
pop
jae
sub
enter
cdq
data16
pop
xchg
fist
sbb
pop
mov
movs
and
jl
ret
in
jns
ins
pop
and
xchg
sbb
dec
add
adc
imul
in
arpl
shr
sub
enter
sub
femms
(bad)
jae
push
adc
into
push
stc
pop
cs
cmps
inc
sub
mov
add
sub
fwait
mov
pusha
dec
jbe
xchg
ins
inc
inc
mov
data16
dec
inc
or
or
mov
adc
and
ffree
xor
mov
xor
sbb
sub
lahf
jno
outs
iret
es
stc
retf
and
xchg
ret
(bad)
adc
gs
psubusw
imul
pop
cdq
add
bound
ins
dec
je
(bad)
mov
cli
add
sub
add
jne
popa
(bad)
das
lods
dec
xchg
rcr
cs
mov
fld
mov
ss
loope
mov
mov
lods
inc
push
inc
fsub
lahf
add
pop
adc
dec
lods
test
push
rcl
js
leave
data16
sub
xchg
cmp
addr16
enter
stos
mov
jmp
clc
shl
inc
mov
push
into
sub
add
(bad)
out
dec
lods
mov
cmps
xchg
in
cmps
push
(bad)
mov
sub
loop
sub
xlat
xabort
jae
xlat
jl
mov
sub
lock
mov
mov
cld
lahf
add
mov
repnz
scas
mov
jnp
mov
lods
add
push
jo
aas
cmp
cmp
or
mov
int
jmp
cdq
mov
or
mov
add
in
repz
inc
loope
mov
test
dec
push
push
in
clc
pop
shr
push
div
inc
and
sub
mov
dec
jg
xchg
push
pop
dec
xor
xlat
retf
movs
cmps
sbb
arpl
sbb
mov
icebp
jo
sub
xor
int
sti
(bad)
xor
dec
add
ret
xchg
push
jo
out
adc
jno
push
sbb
sti
call
call
sub
pop
jl
push
dec
inc
fiadd
dec
aaa
cmp
ins
in
outs
shr
or
xor
iret
adc
das
pop
es
push
mov
cmps
cmp
inc
dec
or
mov
or
loope
int3
sbb
ret
xchg
dec
sub
aas
fbld
movs
pop
retf
cmp
jnp
mov
and
inc
pop
outs
inc
mov
test
xchg
mov
push
sbb
pop
cmp
or
mov
ficomp
pop
test
lods
aaa
dec
mov
lods
add
loope
shl
pushf
cmp
xor
pop
ins
jp
mov
sbb
dec
cmp
cmp
sbb
mov
cmp
mov
pushf
cmp
sbb
(bad)
js
fwait
and
imul
jge
xor
inc
aad
xor
xor
cdq
add
xor
pop
jp
rcl
pop
or
nop
dec
arpl
jae
xchg
sti
mov
push
pusha
add
adc
mov
mov
jge
jmp
int3
imul
sti
push
hlt
jge
addr16
js
les
mov
mov
outs
xchg
out
xor
xchg
pushf
cmp
pop
mov
cdq
xor
jns
jbe
xchg
ss
jmp
fcomp
rcl
mov
mov
adc
loopne
cld
outs
pop
fcom
pop
js
cmp
and
out
cmps
repnz
loope
shl
sub
xor
js
cmp
adc
sub
xor
test
into
(bad)
fsub
inc
shl
outs
nop
mov
xor
push
push
mov
lahf
cmp
sub
ret
pop
mov
sti
out
or
mov
pop
ds
cmp
inc
sub
ins
shl
mov
data16
std
inc
adc
pop
dec
imul
fcom
in
inc
je
sub
add
sub
nop
movs
xor
(bad)
cmp
mov
ins
ds
test
jne
pop
xor
retf
fchs
and
sbb
addr16
xor
inc
sar
out
mov
dec
xor
aaa
mov
pop
or
jb
popa
xchg
push
cmp
movs
fist
sub
sub
ss
(bad)
shr
shr
inc
retf
movs
popf
ret
(bad)
sbb
lods
mov
fld
mov
inc
pop
pop
iret
or
cs
dec
or
loope
sub
loopne
lods
or
cwde
enter
xchg
into
leave
es
mov
clc
and
sbb
or
xchg
(bad)
cli
sahf
movlps
je
aas
das
mov
ror
jns
js
xor
or
push
(bad)
cmps
mov
enter
dec
cmps
das
icebp
cs
loopne
or
aaa
in
push
sub
jg
out
movs
sbb
and
push
hlt
xchg
and
xchg
adc
cmc
pop
jno
mov
call
cmp
and
cmp
outs
fidiv
retf
push
add
imul
sub
in
and
nop
and
push
pop
inc
inc
sbb
mov
aaa
repz
or
fisub
pop
daa
jne
out
es
sub
loop
out
cmps
test
mov
stc
imul
and
jnp
mov
cwde
loop
push
mov
mov
inc
mov
je
xchg
fnstcw
mov
out
(bad)
jg
mov
sahf
jae
pop
mov
and
lods
adc
test
push
ja
or
hlt
loop
dec
out
cmp
xor
mov
inc
dec
cmp
rcl
sbb
pusha
inc
in
mov
and
cmovbe
pop
cwde
mov
xor
pop
jle
cmp
cmp
jb
ins
imul
push
mov
inc
les
sub
int3
mov
mov
and
call
jmp
push
ins
cmc
fld
movs
popf
add
sub
jae
popf
push
xor
xor
ss
inc
or
loope
cmp
call
push
or
fwait
sub
(bad)
pop
repnz
lds
push
rcr
adc
add
in
and
mov
adc
lea
lods
jl
int3
aaa
retf
xor
sub
sbb
add
jp
gs
test
arpl
cmc
xchg
retf
pop
retf
jge
lods
fs
in
jo
in
inc
pop
in
jbe
jl
call
sbb
dec
into
pop
and
push
sti
dec
and
movs
out
xor
data16
push
lds
ds
push
push
push
aaa
adc
iret
es
xchg
pop
repnz
mov
xor
out
inc
test
mov
addr16
iret
dec
fmul
pusha
inc
es
adc
sbb
jmp
mov
pop
out
int
enter
sub
jne
pop
les
jge
fild
sbb
add
pop
ret
cwde
fld
sahf
mov
je
mov
lods
and
mov
inc
aam
xchg
bound
inc
cmp
test
pop
jmp
test
push
gs
cli
sbb
push
xor
or
inc
sbb
pop
cmp
mov
cmp
mov
mov
aas
jb
ret
dec
jbe
imul
lea
adc
push
mov
inc
or
call
add
pop
add
sub
xchg
and
sbb
hlt
xlat
pop
div
in
add
push
cmp
jb
scas
mov
jle
cmp
int
fwait
lahf
fnstenv
sbb
mov
cmps
lds
xor
sub
dec
cmps
lahf
jmp
aas
stos
sahf
xor
cmps
xchg
shr
pop
add
ins
jne
inc
aas
adc
add
sbb
loop
in
je
fst
(bad)
pop
mov
fist
in
jl
mov
jg
hlt
or
or
pusha
inc
cmps
jecxz
cmc
add
gs
and
mov
add
lea
mov
pop
adc
xor
cmp
cmp
sti
jnp
push
sub
mov
adc
lahf
pop
fmul
xor
inc
pop
jbe
add
inc
imul
mov
les
mov
int3
jg
inc
out
dec
or
imul
outs
jne
xor
cmp
aad
sti
test
repz
jbe
jp
cmp
pop
cmps
sub
int
std
xchg
out
mov
in
ss
or
imul
fiadd
xlat
shr
and
dec
enter
mov
cwde
and
jo
cmp
es
clc
pop
mov
xor
adc
je
popa
or
aam
fimul
mov
(bad)
js
leave
sbb
jmp
mov
sub
nop
mov
mov
xchg
sub
out
repz
mov
scas
sbb
aam
in
xor
ins
std
push
das
sub
cmps
sub
bswap
xlat
push
jecxz
and
pop
inc
xor
cwde
pop
pop
add
lods
jg
sub
dec
xchg
push
stc
dec
gs
aad
lods
mov
add
shl
adc
push
pop
mov
xchg
push
test
scas
out
jp
hlt
pop
rol
int
ret
popf
sub
ds
sahf
pop
dec
gs
sub
mov
std
mov
outs
cmp
sbb
jb
mov
jb
mov
adc
jge
mov
loop
ss
or
ret
dec
hlt
jmp
sti
cdq
adc
std
aad
push
rol
pop
test
ret
in
ins
mov
pop
lods
pop
xchg
cmp
stc
inc
inc
stos
call
cmp
cmp
xchg
int
call
outs
mov
jp
or
jns
push
pop
fwait
add
mov
mov
pop
pushf
cli
and
cmp
cdq
jno
inc
cwde
push
adc
push
popa
inc
cmp
dec
or
xlat
out
jmp
nop
mov
fwait
mov
fidivr
pusha
pop
sub
test
sar
out
cld
xchg
sbb
mov
xchg
mov
jge
xchg
sahf
jg
and
stos
mov
ffreep
sub
fcom
iret
nop
ins
add
mov
xor
call
enter
shl
inc
hlt
gs
mov
jmp
movs
int3
xchg
mov
push
push
mov
pop
xor
and
ins
sbb
push
inc
mov
icebp
lea
xor
pop
aaa
das
(bad)
or
(bad)
aad
dec
retf
mov
xchg
cmps
push
pusha
xor
add
mov
std
shr
dec
repnz
cld
push
mov
mov
nop
lock
mov
mov
jb
pop
fistp
mov
mov
xor
ss
in
xchg
in
scas
mov
clc
ins
adc
pushf
dec
and
sbb
and
pop
sahf
jae
aas
daa
movs
mov
movs
push
push
das
xchg
daa
stc
jp
and
jmp
cmp
pop
xchg
stos
sub
xor
je
or
cmp
outs
pushf
mov
rol
mov
adc
test
mov
push
inc
fisubr
or
rol
cld
in
sub
mov
aam
retf
mov
fist
hlt
nop
push
xchg
stos
cli
sahf
retf
mov
sahf
mov
out
lods
xchg
and
dec
test
xchg
sbb
push
dec
pop
and
push
xor
js
fisub
imul
push
xchg
and
push
movs
adc
adc
and
mov
adc
imul
push
addr16
inc
lds
bound
ins
mov
es
fmul
xor
push
arpl
scas
rol
loop
mov
mov
xchg
push
stos
and
or
ds
mov
into
retf
jmp
add
jnp
sqrtps
ret
fmul
dec
les
pop
ss
fnstsw
fmulp
mov
pop
mov
and
in
inc
cmp
imul
dec
and
jae
(bad)
and
bound
mov
and
mov
loopne
jecxz
ror
ins
retf
jae
retf
adc
mov
sbb
mov
jnp
shl
call
cli
icebp
sbb
xor
scas
js
test
stc
add
xchg
cmp
push
out
in
fadd
pmaxsw
lock
mov
push
xor
iret
ins
mov
inc
sti
loopne
mov
sbb
addr16
xor
or
shl
cmp
jae
cmp
(bad)
adc
je
lea
xor
push
dec
mov
gs
xor
xchg
pop
das
in
xor
cmp
xor
pop
test
scas
jl
mov
cs
jmp
mov
pusha
add
fimul
add
xor
inc
push
cdq
test
mov
or
pop
xchg
xchg
(bad)
mov
push
push
mov
pop
sub
or
and
xchg
sub
mov
jns
mov
mov
jb
gs
aaa
imul
mov
cli
sbb
aam
adc
xor
jb
xor
sti
(bad)
sub
inc
and
int
add
test
leave
(bad)
sub
add
out
adc
push
leave
jp
cmp
pop
push
mov
loopne
push
cli
sti
lock
inc
push
cmps
push
cmp
stos
cmps
sub
repnz
xchg
ret
cmp
mov
in
push
sub
je
xor
mov
mov
jne
adc
lods
or
mov
sub
fwait
ins
movs
xchg
lods
and
xlat
dec
stc
fstp
cmp
jmp
add
cmp
dec
inc
mov
mov
sub
push
jmp
ins
aam
stos
pop
adc
mov
in
jne
sbb
cmps
dec
into
adc
in
fadd
out
xor
ds
iret
sbb
loopne
mov
je
pop
lea
test
xchg
sbb
cmp
aad
adc
pop
pop
ins
ds
jge
mov
jnp
mov
cwde
add
xor
mov
ret
cdq
and
push
push
pusha
test
daa
cmps
xor
les
mov
sti
dec
fstp
mov
lock
call
jmp
aaa
mov
push
cmps
ret
sub
pop
xchg
xlat
sub
and
mov
aas
inc
arpl
jg
or
xor
mov
and
pop
xchg
pop
ret
xrelease
mov
add
sbb
inc
jo
cmps
mov
(bad)
js
scas
mov
pop
data16
es
inc
movs
mov
adc
inc
dec
jecxz
xchg
bound
cmp
js
mov
aas
adc
dec
scas
dec
or
mov
aaa
mov
cmp
jmp
out
or
enter
fld
ficom
fadd
imul
add
lds
cld
fsub
shl
pop
and
pop
push
leave
arpl
jno
sub
sbb
rol
and
call
jl
jg
add
push
cmps
cwde
mov
cli
push
add
out
jns
xchg
dec
and
scas
ret
iret
out
inc
ret
jns
xor
push
out
ss
mov
loope
adc
cmps
pop
and
in
mov
xor
cmp
dec
aaa
shl
xchg
retf
push
sbb
pop
push
mov
leave
sbb
pop
shl
dec
push
movs
test
outs
inc
add
or
test
inc
add
mov
call
(bad)
xor
jmp
pop
or
cmps
addr16
call
jns
cdq
das
cmp
or
and
inc
fldcw
mov
ds
or
jns
ins
loopne
shl
sbb
dec
dec
mov
and
push
dec
dec
xchg
jecxz
icebp
rcr
retf
sub
aam
call
lock
xchg
mov
pop
inc
outs
lahf
adc
mov
adc
adc
call
push
inc
dec
sbb
inc
test
mov
adc
mov
ins
pop
lahf
or
push
js
loope
inc
mov
test
inc
sbb
lods
leave
out
(bad)
mov
jg
mov
hlt
xchg
in
loopne
pop
push
cmp
jns
pusha
adc
add
mov
add
scas
imul
push
inc
lods
pop
sar
shr
jo
jbe
mov
and
mov
adc
adc
or
clc
mov
xlat
xchg
push
and
imul
mov
jb
fidiv
or
fcom
rcr
dec
ret
inc
push
and
imul
cs
out
dec
aas
pop
mov
es
cmc
leave
push
iret
rcl
push
or
xchg
int3
cmps
movs
jae
test
jp
rcl
push
(bad)
into
daa
mov
or
or
fcom
jno
shl
fadd
stos
add
addr16
fild
xchg
in
sbb
ins
clc
inc
pop
mov
into
es
sbb
mov
mov
xchg
jl
std
push
mov
push
cmp
and
sar
(bad)
dec
xchg
mov
mov
int
sub
(bad)
out
or
test
sub
(bad)
mov
mov
das
(bad)
retf
xchg
shl
mov
arpl
push
pop
inc
or
inc
and
pop
fcom
add
loopne
dec
retf
shl
xor
xor
out
popf
pop
adc
sbb
ins
add
movs
nop
dec
add
rcl
es
pop
dec
dec
imul
jl
in
into
fild
fs
mov
mov
jb
mov
imul
xor
mov
lods
xchg
out
dec
rcr
bound
jmp
jl
int
pop
arpl
pushf
ja
mov
adc
out
push
push
or
icebp
jle
jecxz
sbb
movs
(bad)
sub
mov
xchg
iret
or
outs
mov
mov
mov
mov
aam
cs
pop
jns
inc
cli
jns
ficom
mov
in
bound
mov
out
loopne
pop
pop
mov
push
(bad)
in
enter
and
push
jge
aam
pop
test
fst
jl
mov
loop
cmp
ret
xchg
movs
loopne
gs
div
into
mov
mov
adc
stc
dec
(bad)
aad
mov
retf
cld
mov
mov
xchg
jg
or
mov
xor
mov
dec
pop
lahf
and
xchg
cs
mov
dec
adc
repz
fdivr
fmul
scas
(bad)
xlat
adc
mov
pop
ds
sbb
inc
(bad)
inc
push
in
rol
out
dec
pop
jmp
xchg
fcom
nop
mov
hlt
dec
stos
retf
mov
mov
enter
fldenv
stos
es
mov
push
lods
xor
daa
cmp
popa
repz
test
hlt
enter
je
out
inc
jecxz
dec
lods
repz
and
popf
arpl
mov
push
jle
mul
out
shld
out
cmp
(bad)
jg
push
add
xor
add
or
pushf
ror
inc
retf
push
sub
sbb
jmp
scas
lods
xchg
shl
lods
cmp
xchg
pushf
(bad)
movs
or
push
popa
sub
loope
rcr
bound
icebp
sub
clc
jle
icebp
ret
sub
cli
push
test
jns
in
mov
cmp
push
inc
xchg
retf
es
inc
mov
cli
and
pop
mov
xchg
pop
mov
push
jge
xchg
cmp
jmp
addr16
test
pop
call
addr16
int
push
add
stc
and
add
in
xchg
dec
iret
sbb
mov
mov
cmp
dec
mov
add
sbb
mov
xchg
hlt
nop
cmp
xchg
ret
sti
fldcw
or
sbb
ret
push
sub
adc
or
mov
hlt
and
sub
mov
loop
outs
popf
lods
mov
jb
pop
pop
dec
add
mov
adc
in
xchg
imul
stos
jae
aaa
movs
cmc
test
iret
xor
push
dec
cmc
out
inc
adc
sub
ret
inc
lea
and
mov
push
daa
jl
dec
adc
shl
cmp
test
mov
test
jb
sbb
dec
loop
cld
jns
sub
mov
jmp
dec
mov
push
sub
add
(bad)
enter
inc
dec
xchg
sbb
adc
pusha
pop
pop
fmul
imul
or
icebp
jno
xor
jnp
int
jo
xchg
ret
pop
xor
mov
inc
movlhps
in
inc
jae
push
scas
fmul
out
repnz
or
mov
hlt
cmp
es
inc
xor
out
loopne
mov
and
adc
jmp
adc
pop
cmp
adc
cld
or
test
ds
or
imul
inc
inc
xor
ret
and
daa
loop
lods
out
add
mov
xchg
je
sar
call
shl
daa
es
mov
cmp
inc
sbb
ins
enter
jmp
es
call
pop
mov
xor
sbb
call
xor
and
retf
mov
cmp
mov
stc
sahf
mov
sbb
dec
movzx
jl
sahf
mov
ret
clc
xchg
mov
xchg
xor
jbe
test
stc
xor
xchg
mov
ficomp
pop
mov
test
sbb
mov
pop
push
ret
jl
cs
dec
mov
hlt
jmp
(bad)
or
sub
ja
addr16
sbb
scas
scas
loope
add
jmp
nop
add
(bad)
push
push
enter
daa
mov
push
add
stos
mov
stos
sub
lods
bound
xchg
and
mov
(bad)
mov
and
push
xchg
sbb
cwde
sub
push
dec
addr16
jmp
pop
les
add
adc
ret
mov
cli
aas
shl
enter
sub
in
outs
(bad)
mov
or
ins
cmp
jnp
push
push
lahf
call
or
lods
and
bnd
inc
ret
repnz
push
ror
leave
mov
jns
sti
movs
cmps
cmps
mov
mov
cwde
addr16
xchg
xor
repnz
jnp
cmp
inc
pop
(bad)
xchg
pop
push
cmps
add
fwait
(bad)
push
gs
jnp
push
inc
push
jnp
sub
mov
cdq
test
pop
and
inc
push
(bad)
xchg
sub
or
in
imul
xchg
cwde
jle
inc
or
adc
dec
test
jb
dec
jmp
jge
or
idiv
retf
xor
xchg
jecxz
add
pop
sbb
iret
inc
shl
mov
call
les
adc
icebp
shl
gs
cmp
inc
cli
or
sub
add
sbb
retf
add
aas
and
ins
popa
cmps
adc
lods
xor
jb
(bad)
lods
outs
adc
out
xor
or
(bad)
in
nop
xchg
pop
pop
addr16
mov
jae
jne
add
mov
and
mov
outs
scas
ret
repnz
push
std
push
adc
sti
cld
adc
inc
push
jle
stos
xor
loopne
data16
mov
sub
loopne
pop
pop
aaa
push
icebp
mov
mov
cs
jmp
xor
out
mov
push
ja
and
mov
xor
stos
jmp
push
push
cli
push
mov
out
sbb
repz
faddp
jmp
shl
adc
arpl
jae
icebp
sahf
ror
mov
cmp
std
sub
out
test
pop
loope
push
pop
cmp
out
cmp
mov
push
mov
xor
fwait
xchg
pop
retf
cld
cwde
pop
rcr
xor
aaa
sub
add
xor
sub
mov
stc
xchg
pop
iret
jecxz
xor
or
std
mov
aas
adc
mov
jno
movs
ss
out
or
jle
mov
shr
loop
call
push
scas
inc
aam
push
pop
sbb
ins
je
hlt
dec
inc
inc
sub
aad
je
mov
outs
xchg
lahf
cmp
adc
push
inc
mov
adc
test
mov
xor
scas
xor
and
jecxz
mov
movs
(bad)
pop
addr16
xor
jbe
rol
das
pop
pop
sbb
enter
cmps
sbb
dec
and
push
push
add
xchg
jg
sub
nop
clc
push
icebp
repz
pop
sbb
arpl
mov
mov
inc
and
loop
cmp
pusha
sub
dec
pop
mov
push
cmp
sbb
shl
mov
inc
cmc
or
pop
mov
xchg
lods
(bad)
loopne
hlt
mov
cmp
inc
mov
retf
jbe
dec
imul
or
push
mov
lahf
daa
retf
pop
sahf
ds
add
push
retf
pop
sbb
cld
pushf
jmp
cmp
lods
mov
jo
add
sub
mov
cmp
sbb
mov
cmp
fmul
dec
and
inc
dec
(bad)
out
mov
pop
test
sub
pop
inc
xchg
arpl
jne
xchg
mov
into
aam
jno
xor
push
inc
or
cwde
aam
pop
inc
push
jo
icebp
les
jp
push
popf
std
adc
pop
inc
xor
fiadd
mov
jecxz
jnp
push
and
fbld
ret
sbb
push
or
loopne
or
lods
fld
pop
xor
mov
clc
ja
dec
jecxz
add
pop
sbb
idiv
leave
xchg
push
sbb
or
xor
push
jae
inc
icebp
repnz
or
jmp
add
jae
xor
pop
sbb
neg
int
mov
jmp
cmp
movs
cmp
and
xchg
jl
cmp
test
das
(bad)
iret
mov
aas
iret
mov
xchg
shl
jno
pop
aad
cwde
push
adc
imul
ja
adc
loopne
dec
sbb
iret
cmp
dec
jo
shl
loop
(bad)
cmps
cmp
jno
jno
movs
xor
cmp
dec
or
jecxz
cs
push
sar
lods
and
or
pop
sbb
cmp
popa
mov
adc
dec
xchg
cmp
push
fiadd
adc
arpl
addr16
sub
shr
pop
lea
xchg
adc
lds
repz
lea
jp
sbb
stos
and
loopne
push
or
lods
(bad)
test
fistp
fadd
push
es
jecxz
scas
(bad)
xor
or
cli
cmp
inc
sub
pop
or
daa
push
sub
xor
addr16
nop
int
dec
inc
enter
or
retf
(bad)
fadd
add
(bad)
mov
ins
or
lds
ror
xchg
sbb
ds
rcr
repnz
lods
aam
xchg
pushf
inc
je
dec
mov
push
mov
mov
mov
in
gs
and
icebp
popf
push
stc
xor
cmc
sub
cmp
mul
int3
push
jns
push
scas
cdq
sti
dec
out
push
iret
popf
test
fst
mov
push
mov
lock
inc
adc
(bad)
cmp
aam
idiv
cmc
cmp
iret
xor
add
call
aas
inc
cmp
jl
inc
xchg
push
adc
sub
mov
dec
pop
sub
inc
jns
mov
ret
je
cs
fstp
inc
jno
jmp
rcl
rcr
ins
dec
sahf
imul
dec
sbb
iret
cmovle
add
cmp
push
mov
out
call
adc
cmp
(bad)
pusha
sti
or
sar
shl
idiv
xchg
and
outs
data16
imul
out
pop
repz
int3
sub
fimul
mov
fwait
push
push
xchg
scas
jb
jbe
dec
push
jle
std
aam
xor
scas
gs
sbb
and
xor
lea
retf
fisttp
sar
(bad)
ficomp
jb
imul
bound
fwait
outs
mov
addr16
jl
dec
adc
inc
inc
jb
xor
and
or
sti
addr16
in
out
mov
out
jmp
cmp
enter
adc
(bad)
jns
jns
js
mov
mov
inc
cwde
shl
or
movs
test
xchg
mov
add
mov
inc
cdq
test
lds
pushf
pusha
movs
adc
mov
cmp
or
fld
cdq
loope
cld
call
jne
js
test
push
or
arpl
push
inc
adc
out
(bad)
(bad)
ds
inc
pusha
xor
pop
lods
fs
leave
or
cmp
push
jmp
xchg
js
inc
add
jg
lahf
or
dec
and
bound
sub
xor
std
xor
push
das
in
adc
sub
cmp
jmp
cwde
stos
test
fwait
jg
loope
shl
(bad)
fnsave
jns
push
in
mov
jnp
xor
ss
mov
pop
adc
dec
lock
pop
and
outs
(bad)
jmp
imul
fisubr
xor
js
jb
into
mov
sub
sbb
js
aad
add
push
add
iret
pop
test
mov
popa
pop
jbe
jmp
outs
cdq
test
data16
(bad)
scas
xor
int3
ficomp
(bad)
ror
mov
(bad)
es
call
jnp
sbb
sahf
popa
mov
xor
lds
dec
add
mov
jle
push
ja
loope
or
or
xor
fdiv
dec
mov
cmp
add
xchg
jl
mov
imul
imul
and
sbb
ret
adc
sbb
add
mov
inc
adc
xlat
inc
sti
retf
jno
loope
adc
aaa
enter
jne
(bad)
jne
adc
push
sub
aaa
add
repz
inc
dec
stc
pop
rcr
pop
jnp
ret
fs
test
inc
fwait
mov
loop
fwait
test
fadd
pop
ret
mov
dec
xor
jns
pop
in
cld
jp
push
pop
jne
or
mov
mov
inc
out
mov
pop
inc
pop
out
push
mov
call
and
shl
mov
push
push
mov
xchg
mov
dec
and
push
out
dec
xchg
jb
sub
mov
iret
dec
arpl
int3
mov
pushf
add
mov
leave
or
aas
xor
jae
sub
in
cld
in
push
and
out
adc
lock
rcl
int
sbb
lea
cs
jmp
sub
repz
adc
mov
cmp
xor
pop
and
add
sub
xchg
xchg
das
push
daa
xlat
pusha
cmp
leave
loopne
pop
lods
or
test
bound
cwde
mov
test
xchg
popa
pop
or
test
test
loop
je
xor
repz
mul
or
sub
js
xchg
cli
in
pop
loope
mov
pop
icebp
xor
out
sbb
(bad)
int
sub
adc
aaa
jg
push
(bad)
push
mov
add
scas
sbb
mov
mov
push
xchg
in
cmps
aad
ds
dec
push
jae
cmps
push
loopne
mov
ins
inc
xor
std
fld
cli
clc
mov
popf
adc
notrack
bound
leave
xchg
in
xor
sbb
shr
mov
jge
das
and
es
call
xchg
lock
cmp
test
adc
xor
(bad)
std
add
push
call
mov
retf
cwde
leave
mov
or
ja
sub
sub
(bad)
sub
gs
jmp
dec
pop
jg
pop
nop
jmp
dec
addr16
add
cmc
sahf
scas
gs
jnp
lahf
fimul
aas
sbb
fwait
add
cdq
push
mov
dec
in
inc
mov
out
mov
js
mov
(bad)
mov
cmp
mov
retf
ins
cwde
mov
xchg
xchg
inc
sub
pushaw
adc
dec
cmp
xchg
(bad)
in
pop
mov
jno
enter
pop
popa
inc
das
stos
das
movs
cmc
dec
loopne
dec
xor
push
mov
fadd
push
sti
jge
jno
jb
pop
sub
fbstp
popf
mov
add
pop
pop
jl
mov
push
sub
sub
lock
rol
and
stos
xor
dec
nop
addr16
xadd
repz
sbb
sti
(bad)
loop
jp
std
(bad)
pushf
and
cmp
out
or
jmp
push
fs
jmp
popa
mov
pop
loop
dec
mov
sbb
cmps
sub
inc
xchg
jecxz
ret
pop
jmp
mov
jns
mov
bound
jns
and
sub
mov
daa
mov
hlt
push
push
mov
adc
mov
and
xchg
movs
ja
cmp
pop
xchg
lods
ins
adc
loopne
mov
and
mov
pop
jmp
inc
in
sbb
fisubr
fisttp
lahf
mov
jmp
hlt
aad
jbe
jns
fisttp
jnp
mov
dec
adc
es
mov
and
cwde
add
pop
pop
pop
repz
pop
and
mov
jge
xor
dec
les
push
mov
cmc
mov
or
push
push
popa
std
or
sub
mov
cmp
gs
xor
adc
xchg
sub
rcr
fmul
jp
and
rcl
cmp
sub
(bad)
xchg
pop
sub
cmp
stc
movs
lds
cmp
shr
sbb
stc
mov
les
sbb
xchg
or
mov
pop
ficom
xchg
cmovp
add
jmp
jp
pusha
jnp
scas
js
mov
mov
inc
icebp
push
push
pop
and
pop
lea
clc
jo
mov
xor
push
pop
pop
jg
jns
in
push
(bad)
out
pop
jae
stos
repnz
mov
in
sbb
jmp
cmps
jle
push
dec
dec
(bad)
test
pop
pop
fcomp
add
mov
cmp
retf
ss
daa
inc
gs
xor
cmps
or
jo
dec
cld
sti
jmp
mov
mov
sbb
popf
mov
gs
hlt
lahf
in
mov
add
mov
mov
xchg
js
and
movs
and
retf
dec
nop
mov
das
adc
jmp
inc
movs
mov
push
inc
mov
mov
rcr
fidiv
test
loop
adc
arpl
dec
ret
fwait
push
mov
dec
enter
adc
repnz
lods
test
add
addr16
ja
xchg
add
adc
call
cmp
dec
or
push
pop
add
sbb
adc
inc
mov
mov
shl
hlt
jae
or
sbb
aad
mov
rcl
and
or
mov
xor
jae
repz
sti
push
jno
stos
(bad)
ret
imul
inc
ss
jne
cmp
fisub
push
sbb
add
xchg
cs
test
pop
lods
jmp
addr16
movs
ficomp
in
fwait
push
sahf
mov
dec
leave
addr16
mov
clc
je
cld
cdq
sub
repnz
fxam
jecxz
jg
push
test
sbb
dec
fdivr
shl
das
sub
xchg
push
mov
cwde
push
clc
(bad)
repnz
jne
jnp
dec
shr
mov
out
bnd
cli
test
neg
or
stos
aam
in
jno
xor
neg
cdq
(bad)
repnz
jecxz
popf
inc
fs
stos
and
cmp
jcxz
adc
and
je
in
mov
lock
hlt
pop
mov
mov
mov
out
jecxz
popa
popf
outs
fisubr
ds
jg
mov
jmp
aaa
add
js
add
loopne
hlt
fldcw
cld
(bad)
fld
aad
mov
dec
stos
or
cmc
scas
pop
dec
ficomp
xor
add
test
stc
xor
or
sbb
cmp
mov
addr16
aam
(bad)
sbb
pop
jl
(bad)
loope
std
(bad)
mov
cmp
std
cmps
call
push
cmc
clc
pop
js
mov
lea
(bad)
in
and
push
inc
inc
sbb
mov
shl
les
ja
xchg
mov
xor
lahf
jecxz
(bad)
and
arpl
aad
push
and
cmp
loopne
push
xor
popf
scas
cli
sbb
(bad)
cs
popf
jmp
enter
inc
mov
pop
rol
int3
gs
pop
dec
xor
loope
cmp
or
adc
stos
fild
mov
cmps
cmps
jmp
pop
xor
xchg
or
std
and
jg
int
inc
inc
test
cmp
xor
dec
mov
xchg
rcr
inc
loopne
pop
add
jge
(bad)
cmp
loope
mov
test
mov
(bad)
inc
pop
inc
mov
(bad)
mov
jl
sub
sub
(bad)
enter
int
adc
dec
adc
mov
shl
pusha
pop
loopne
xchg
lds
mov
cmp
mov
iret
add
pusha
js
cld
jbe
mov
cs
mov
in
loopne
ds
dec
jnp
push
pop
lods
xchg
and
(bad)
fld
pop
push
cmp
jecxz
fs
mov
stos
or
sbb
clc
push
lds
ret
sbb
xchg
popf
(bad)
cmp
idiv
cld
fsub
retw
pop
xchg
and
jmp
cmp
or
jecxz
leave
repz
push
gs
jns
in
dec
dec
and
push
hlt
sub
pop
push
clc
push
pop
xchg
sbb
pop
adc
mov
stos
mov
jne
enter
dec
cmp
stos
pop
leave
push
sub
cmc
lods
cmps
mov
(bad)
fwait
(bad)
cmc
and
jnp
and
mov
mov
int
or
int3
jo
sub
jbe
pop
jmp
mov
cmc
ret
pop
xor
mov
xchg
loop
aaa
add
scas
repnz
mov
push
and
outs
push
test
in
(bad)
stc
daa
push
je
xchg
push
aam
les
imul
sbb
adc
cmp
rcl
jb
pop
cmp
and
mov
xchg
leave
mov
mov
pop
or
stos
jg
jnp
retf
in
jmp
daa
xchg
shl
cmp
in
and
jmp
ficomp
inc
xchg
jb
scas
mov
out
shr
aad
push
jg
push
adc
rol
mov
pop
call
cwde
push
adc
hlt
sar
call
cmps
fld
dec
dec
push
mov
stos
cmp
push
ins
dec
sub
leave
cmp
sti
push
mov
add
ja
and
mov
xlat
adc
(bad)
popa
xchg
js
mov
lods
or
and
or
iret
fnstcw
mov
sub
nop
inc
retf
jge
hlt
out
daa
inc
cmp
ins
pop
xchg
fs
jbe
mov
jb
cmc
repz
cmps
or
out
mov
aad
(bad)
push
iret
xchg
mov
je
adc
fdiv
mov
cmp
mov
mov
adc
sub
call
mov
adc
sti
or
mov
enter
fucomip
cmp
in
ror
inc
aaa
mov
outs
jecxz
pop
jmp
jp
sbb
cld
adc
adc
dec
xor
call
stos
inc
mov
into
out
movs
nop
adc
hlt
iret
mov
adc
imul
shl
mov
bound
ins
rcl
xchg
call
nop
mov
ins
ss
js
push
cli
or
inc
sahf
push
push
mov
jecxz
push
mov
in
sar
dec
jp
je
mov
mov
sbb
add
jg
xchg
ret
mov
cdq
cmp
xor
je
mov
arpl
dec
rcl
or
retf
(bad)
push
test
mov
jnp
xlat
cwde
lahf
jo
push
xor
jge
push
repz
xchg
fnstenv
movs
pop
adc
loope
lds
and
xor
in
jae
sub
jne
sbb
pop
test
sbb
imul
add
inc
jbe
repz
aas
int3
arpl
inc
retf
sub
pop
lds
in
ret
std
inc
pop
out
add
out
or
xor
pop
jg
int
fldcw
retf
js
adc
shl
ss
sub
push
dec
in
repnz
sub
retf
daa
dec
stc
push
inc
cmp
repnz
sbb
fsub
sbb
(bad)
je
movs
in
cs
fbstp
mov
loopne
jecxz
cmp
inc
imul
xor
popa
push
imul
xchg
cli
outs
mov
or
push
shr
outs
jo
aas
rcl
inc
test
cmp
push
mov
inc
scas
mov
lock
fs
adc
xchg
cmp
push
mov
sbb
xor
or
sbb
(bad)
not
test
enter
pusha
ds
imul
inc
or
xlat
push
(bad)
std
(bad)
or
cdq
mov
add
aaa
add
(bad)
inc
mov
xchg
cmp
xor
mov
jne
inc
push
data16
sbb
retf
nop
fnsave
xlat
jae
fcomip
jg
or
push
mov
leave
cwde
outs
xor
ficom
mov
fisub
retf
in
adc
jl
dec
push
and
mov
sahf
mov
pop
out
gs
cld
loope
int
xor
xchg
lahf
test
in
(bad)
in
ret
lods
dec
jmp
pop
hlt
and
xchg
jmp
ins
push
in
adc
mov
and
mov
call
je
pushf
mov
mov
pop
or
dec
mov
in
icebp
inc
dec
out
(bad)
sbb
test
mov
lds
xchg
mov
and
pushf
addr16
mov
add
(bad)
clc
sub
mov
xchg
jg
fbstp
jmp
mov
add
cld
pop
fwait
test
sbb
pop
(bad)
jle
hlt
pop
push
rol
pop
add
out
cwde
xor
call
std
inc
dec
rcl
sti
jne
sub
push
leave
ret
mov
or
retf
cmp
js
into
sbb
ret
lock
mov
movs
cmp
ins
dec
sub
xor
add
jmp
enter
sahf
inc
or
aam
xor
stos
push
xchg
mov
sahf
or
retf
fadd
fldenv
push
dec
fsub
jl
mov
xor
push
push
lods
cmp
mov
sbb
lahf
add
push
xor
into
retf
sbb
ins
lea
aas
adc
mov
dec
out
push
je
in
push
sub
push
fsub
int
xchg
xor
jnp
sahf
adc
xor
dec
sbb
add
outs
adc
loopne
jmp
ret
(bad)
clc
cmp
fsub
cmp
test
movs
loopne
xor
lock
dec
inc
pop
pop
jp
arpl
cli
mov
leave
xchg
mov
dec
fistp
sub
ret
out
fldcw
jge
sub
or
cmps
lahf
inc
mov
outs
jle
inc
xor
jns
inc
mov
sbb
ins
or
js
fcom
mov
lods
out
mov
xor
and
gs
pop
mov
pop
or
outs
iret
pushf
or
ins
jb
sub
shl
repz
hlt
lds
inc
xchg
(bad)
ret
pop
ret
arpl
push
or
push
in
sub
movs
imul
gs
inc
sbb
xor
mov
jle
adc
jb
xlat
cmp
dec
push
bnd
inc
dec
push
fsub
xor
(bad)
sbb
arpl
(bad)
cdq
xchg
aas
retf
fadd
(bad)
adc
mov
bound
jo
adc
test
rcl
in
(bad)
iret
sbb
add
pop
ins
xchg
adc
sbb
jmp
pop
inc
pop
adc
stos
cmp
cmps
pop
pusha
mov
or
loope
inc
xchg
cmp
cmp
and
xchg
inc
shl
out
sahf
pop
jmp
out
inc
mov
cwde
ror
adc
iret
int
fild
ds
xor
movs
fs
bound
retf
movs
sahf
test
in
mov
stc
xlat
repnz
cmp
stos
sub
call
xor
in
pop
cs
mov
repz
mov
add
fs
xor
jns
xchg
sub
iret
jp
cli
cmc
stos
mov
fnstenv
mov
mov
shl
adc
out
or
retf
or
rcl
leave
loope
cld
call
fwait
scas
icebp
mov
stos
imul
inc
adc
(bad)
cmc
push
int3
cmp
aas
and
imul
ds
mov
xchg
in
sahf
and
lods
(bad)
aas
pop
test
je
test
mov
push
inc
(bad)
push
mov
das
adc
or
gs
in
cmp
cmc
add
sbb
popf
(bad)
in
pop
mov
xchg
and
ins
pop
mov
retf
cmp
cwde
adc
push
fwait
push
jmp
jne
adc
adc
push
jno
cmps
mov
(bad)
loopne
jae
add
xor
je
xor
xor
pusha
jno
mov
push
inc
lahf
or
fisttp
jecxz
pop
push
out
cmp
stos
test
mov
cmps
stos
xchg
pop
icebp
push
xchg
std
call
or
xchg
nop
jnp
and
test
jo
ja
mov
fldcw
test
icebp
call
inc
popa
push
fadd
push
test
call
mov
lods
loopne
hlt
cmps
mov
or
mov
stc
movs
stos
adc
jle
retf
pop
xchg
into
leave
cs
ss
jmp
sbb
fadd
push
mov
faddp
mov
pop
xor
mov
(bad)
les
dec
mov
nop
add
popf
lock
cmps
pop
jl
xchg
add
mov
cmc
leave
data16
adc
inc
jp
pop
out
fwait
mov
mov
xchg
das
pop
adc
add
jge
sahf
sub
imul
movs
mov
in
push
cmp
scas
sbb
fxtract
mul
lds
dec
gs
pop
jmp
fucomip
fisttp
jae
lods
cli
je
je
xchg
(bad)
scas
inc
mov
fs
nop
shl
pop
out
jp
mov
jle
push
(bad)
fst
sar
fild
(bad)
std
jmp
push
mov
jne
movs
mov
leave
dec
jecxz
stos
mov
add
sbb
inc
mov
shl
and
mov
rcr
aad
and
(bad)
mov
add
sbb
pop
sub
inc
(bad)
into
jge
ror
add
or
test
loope
pushf
call
and
stos
xchg
jecxz
fimul
leave
inc
jg
shr
ja
or
mov
rcr
or
inc
in
or
test
retf
inc
jb
mov
inc
call
jne
fldenv
mov
mov
jmp
and
or
mov
retf
and
adc
add
mov
jmp
cmp
sbb
push
je
ins
or
movs
mov
pop
inc
in
jp
rol
in
sub
mov
ja
add
jae
cdq
sub
lods
cmc
out
jo
jg
shl
add
mov
cli
ss
(bad)
xor
xlat
xor
dec
hlt
(bad)
fld
inc
sub
xchg
cli
xor
and
lods
addr16
call
fidivr
jo
push
addr16
and
xlat
retf
fldcw
int3
mov
fld
mov
fisubr
leave
iret
fnstenv
mov
les
ins
rcl
pop
scas
cli
lods
dec
mov
in
and
cmps
(bad)
(bad)
dec
(bad)
clc
push
test
push
jmp
daa
rol
add
mov
or
xchg
and
scas
sahf
and
or
ret
cmp
adc
xor
mov
(bad)
std
jl
and
jb
mulps
adc
mov
outs
in
mov
scas
fwait
sbb
cdq
mov
mov
or
dec
outs
cmps
lods
enter
and
mov
aaa
sahf
push
test
and
int3
sub
cmps
cmps
loopne
frstor
sti
loop
pop
cmp
lahf
outs
icebp
sar
push
stos
xchg
aam
xchg
jne
ins
mov
mov
mov
add
and
cmps
call
and
sub
xchg
mov
cmp
cli
ror
in
jmp
and
add
icebp
(bad)
hlt
add
sar
jp
test
pop
fdiv
xor
mov
adc
pusha
sbb
inc
mov
loopne
sahf
fsubr
jne
test
je
sti
iret
enter
shr
sbb
push
cmp
into
rol
cmps
xor
es
(bad)
cli
dec
sub
out
outs
(bad)
inc
sbb
ficom
sbb
test
pop
mov
idiv
add
cmp
aam
sub
inc
(bad)
jmp
shl
mov
jecxz
iret
pop
xchg
mov
mov
add
dec
sbb
imul
ret
xchg
cwde
jns
jmp
mov
mov
push
in
movs
xor
push
mov
mov
fwait
jmp
jnp
inc
xor
aaa
out
mov
push
jge
cmp
pop
shl
inc
fsubr
enter
cmp
push
imul
mov
movs
inc
loopne
mov
ins
mov
adc
jbe
ja
inc
add
(bad)
dec
jo
(bad)
adc
xor
cmps
fmul
js
lea
pop
js
cdq
sbb
jecxz
in
rcl
inc
popf
cmp
mov
cs
aad
out
(bad)
rcr
lahf
cmp
mov
ins
adc
movs
mov
adc
fwait
jbe
sti
setnp
popa
outs
mov
pop
(bad)
sub
fadd
je
mov
add
test
in
xlat
cmp
enter
xor
(bad)
aad
mov
mov
jnp
mov
mov
add
cmp
cwde
push
jp
cmp
push
in
xchg
mov
int3
push
add
and
out
xchg
push
ja
inc
cmp
jp
in
movs
in
fs
fstp
call
imul
jmp
mov
add
cmp
repz
mov
cmc
rol
pushf
push
jns
and
adc
aad
out
out
push
pop
xchg
scas
mov
mov
scas
ficomp
dec
add
sbb
addr16
add
and
rcr
mov
retf
sub
cmp
and
addr16
stos
add
sub
ins
(bad)
data16
cmc
mov
sbb
ins
retf
pop
xchg
aad
nop
xor
nop
or
test
adc
ins
pop
(bad)
out
cwde
mov
dec
add
sbb
adc
add
dec
pop
sbb
(bad)
jmp
pop
(bad)
(bad)
lock
mov
in
push
scas
mov
mov
mov
xor
dec
push
mov
xchg
jns
inc
xchg
int
rol
fistp
je
mov
lock
xor
pop
cli
push
retf
sub
sub
call
pop
cmps
add
outs
push
retf
xor
aaa
and
nop
clc
(bad)
jne
push
inc
push
push
jmp
scas
icebp
stos
pop
ins
inc
fs
repnz
aaa
cmp
fdiv
mov
sub
lods
mov
shl
outs
pop
aas
fsubr
xchg
sub
aaa
call
jmp
xor
sub
loope
(bad)
lds
add
addr16
push
pop
imul
imul
xor
fcom
imul
jp
pop
loop
in
pusha
call
pop
add
test
cs
imul
daa
cmp
adc
repz
dec
xchg
fcom
dec
(bad)
loopne
into
inc
out
adc
rcl
push
imul
dec
movs
lock
xchg
xchg
and
mov
jnp
inc
mov
pop
xchg
cdq
faddp
cld
imul
es
push
shl
ins
pop
dec
cmp
jns
dec
fstp
xor
in
sub
cld
or
in
mov
push
xor
adc
movs
pop
rol
test
push
pop
cwde
scas
adc
outs
xor
jg
sbb
jno
cmp
pop
adc
sub
lods
addr16
test
jmp
inc
test
ret
psubsb
fbld
mov
(bad)
dec
sub
jnp
push
mov
mov
bndstx
xlat
or
mov
or
or
fist
mov
dec
adc
mov
pop
xchg
cmp
cdq
mov
sbb
adc
xchg
das
mov
shr
pop
aam
data16
std
enter
shr
mov
jecxz
push
fild
movs
push
int
xor
int
add
cmp
cmp
pop
add
sbb
push
sub
jbe
aaa
jno
mov
cdq
adc
push
(bad)
or
push
or
or
mov
popf
sti
out
rol
sbb
mov
dec
retf
es
dec
jle
test
imul
mov
sub
jbe
(bad)
out
xchg
jo
push
jo
sub
jne
xchg
jmp
pop
dec
xor
out
adc
fwait
sti
or
push
push
pop
add
invd
inc
cmp
js
leave
and
dec
mov
push
dec
addr16
cmp
aam
(bad)
rcl
mov
ja
and
aaa
xor
gs
and
fist
cmps
jp
sub
push
xor
or
jno
push
or
out
push
enter
stc
leave
(bad)
sbb
fdivr
stos
jle
and
push
adc
adc
mov
psrlw
inc
pop
pop
and
call
loopne
mov
fwait
xor
mov
dec
push
inc
pop
adc
outs
fucomip
das
jmp
xor
push
rcr
scas
adc
push
cs
dec
inc
clc
xchg
push
enter
xor
jmp
ret
or
int
int3
push
add
add
and
pop
mov
jno
dec
cdq
mov
cmp
gs
sbb
fistp
out
cmp
sbb
(bad)
or
pop
(bad)
sti
inc
sti
repz
adc
or
int
daa
hlt
cli
xchg
addr16
pop
inc
stos
pop
or
leave
(bad)
sub
pop
add
rol
out
scas
jb
fisubr
sub
xchg
repnz
sti
(bad)
or
mov
jno
aad
ret
mov
push
pop
rol
mov
sub
mov
adc
sbb
add
dec
shr
ret
hlt
test
js
sbb
cwde
push
dec
inc
hlt
mov
jge
push
jl
in
add
sahf
scas
in
out
rol
lds
retf
fsubr
outs
mov
aad
es
leave
repnz
mov
stc
ret
call
mov
es
pop
or
sub
icebp
mov
sub
fs
repnz
(bad)
jne
ffree
dec
adc
and
jp
pop
rcr
push
pop
fs
dec
inc
pop
cs
mov
bound
aam
and
(bad)
outs
jp
push
add
test
mov
ret
dec
jg
sub
rol
repnz
sahf
inc
jne
aad
retf
mov
jecxz
xor
mov
mov
add
mov
mov
fwait
and
popa
fnstenv
xchg
inc
inc
in
push
loop
sbb
push
daa
retf
fst
fsubr
fist
cmp
(bad)
es
popa
arpl
in
sbb
out
mov
mov
jmp
dec
inc
out
add
and
fs
or
sub
xlat
(bad)
stc
fmul
leave
jg
icebp
ss
sub
aas
xor
fisttp
fnstsw
xor
mov
in
mov
pushf
mov
pusha
arpl
xor
ss
push
nop
retf
cmp
push
mov
pushf
cmp
jns
cld
dec
mov
test
leave
push
mov
sar
jae
jb
or
pop
sub
push
test
out
and
xchg
stos
or
call
cli
in
mov
sbb
mov
and
pop
mov
jmp
adc
cdq
mov
inc
sub
sub
jns
sub
fwait
jo
pop
xlat
cmp
pop
mov
ffreep
push
push
add
loope
cmps
inc
popa
clc
adc
jp
or
retf
outs
mov
push
jle
mov
adc
aaa
inc
xchg
neg
mov
jmp
leave
(bad)
sbb
inc
popf
sbb
movs
in
xchg
jle
clc
cmp
pop
sti
xchg
jnp
es
(bad)
push
xchg
aaa
ror
(bad)
outs
pop
mov
daa
cmps
lods
int
xor
mov
cmp
lods
sti
test
mov
sub
mov
inc
enter
retf
ret
push
daa
adc
daa
lods
(bad)
sbb
xchg
dec
xor
mov
stc
pusha
and
popf
jecxz
popf
aaa
test
in
pop
(bad)
sub
int
es
xlat
mov
dec
sub
adc
cmps
adc
xor
dec
add
pop
pop
scas
not
movs
les
in
inc
xchg
repz
push
gs
imul
imul
mov
jmp
adc
cs
mov
mov
ror
push
mov
cdq
xor
lock
mov
aas
enter
xor
pop
sbb
aas
add
xor
(bad)
adc
in
push
ins
ss
ret
jmp
std
fwait
addr16
mov
dec
push
xor
jle
mov
inc
push
nop
hlt
ret
xor
pop
sahf
movs
push
idiv
push
fimul
xor
mov
cmc
loop
je
and
push
(bad)
int3
leave
pusha
xchg
sub
pop
mov
leave
test
sub
or
adc
fcom
add
cwde
adc
cdq
jnp
xor
movntps
inc
arpl
jg
cmp
jle
dec
sahf
jecxz
jl
inc
cmps
cmps
jb
pusha
das
mov
jmp
mov
rcl
movs
in
clc
retf
sbb
ficomp
push
pop
je
ja
add
outs
aas
push
aaa
and
add
sar
sar
leave
mov
mov
scas
mov
add
xor
(bad)
cmp
add
pop
out
lock
xchg
popa
mov
stos
mul
mov
ret
and
cs
dec
es
dec
in
shl
aad
lahf
shr
xor
adc
add
xor
test
inc
jge
imul
stc
mov
mov
fs
js
cld
jl
push
mov
inc
sar
inc
mov
or
mov
mov
add
idiv
fadd
mov
adc
dec
pop
jl
aad
cmps
outs
mov
push
add
inc
cmps
movs
outs
mov
fs
mov
arpl
ror
ins
jl
ja
icebp
cmps
xchg
jmp
sbb
call
fistp
lahf
ret
int
mov
daa
stos
mov
xchg
mov
jmp
xchg
in
scas
mov
ins
sub
cmps
mov
jae
push
test
mov
jge
repz
test
xor
std
call
mov
movs
adc
dec
jbe
or
outs
xchg
pop
mov
push
ds
pop
mov
iret
add
jno
sub
dec
add
xor
fldenv
push
bound
shl
mov
int3
mov
in
lods
cmp
and
sub
mov
out
je
inc
hlt
lods
or
or
shl
imul
pop
mov
int3
sbb
movs
xlat
jns
pop
pop
mov
es
shl
test
movs
aaa
div
sbb
add
stos
mov
pusha
sbb
fnstcw
mov
std
or
sub
repnz
retf
test
dec
test
sub
jle
out
xor
stos
outs
sub
daa
xor
inc
test
stc
mov
push
pushf
stc
or
ds
and
dec
xchg
retf
(bad)
xchg
mov
mov
ret
jns
xlat
xor
das
sub
pop
jnp
sub
or
sub
popf
lahf
dec
dec
rol
enter
jb
push
sbb
rol
jl
test
ror
clc
lods
arpl
xchg
neg
pop
mov
mov
into
mov
sbb
cwde
pop
xchg
mov
ds
scas
popf
das
push
call
mov
mov
jecxz
push
loop
jbe
sahf
mov
cld
jmp
iret
stc
lods
ret
jg
lods
pop
shl
pop
lock
imul
test
dec
into
stos
aaa
stos
es
mov
div
stc
retf
mov
mov
xchg
lods
adc
push
fst
(bad)
cmp
sar
nop
sbb
rol
mov
cmps
arpl
adc
jecxz
enter
xchg
hlt
mov
test
add
(bad)
sbb
dec
movs
push
aaa
je
adc
sub
in
mov
sbb
pop
push
les
add
ror
mov
add
mov
sub
dec
mov
out
fs
shl
cmp
retf
stos
jmp
add
stos
mov
adc
jnp
xchg
xchg
arpl
aad
xchg
shr
mov
daa
pop
dec
sahf
test
(bad)
cwde
push
inc
and
sub
mov
(bad)
xchg
iret
out
ret
pop
hlt
pop
sub
les
mov
add
fmul
dec
add
mov
hlt
push
pushf
dec
dec
add
aam
stc
fld
aad
adc
ret
(bad)
cmp
mov
stos
ret
inc
xchg
rol
ror
sub
stos
sub
mov
imul
aaa
and
ficom
shr
lea
sbb
or
pop
stos
pop
and
push
add
inc
cmp
add
dec
stos
stos
fdiv
mov
mov
mov
cmp
fwait
jno
std
push
fst
sahf
xchg
mov
push
adc
outs
pop
inc
or
jge
mov
xchg
mov
push
inc
iret
push
and
leave
mov
fs
mov
mov
in
loope
cli
adc
mov
data16
adc
in
out
mov
(bad)
retf
xchg
bound
pop
data16
clc
jl
adc
sbb
mov
arpl
mov
repnz
add
inc
cmc
into
lods
icebp
shr
dec
in
cli
movs
cmp
retf
jmp
(bad)
jns
test
jb
pop
xchg
repnz
pop
xlat
inc
cmp
sbb
add
mov
fistp
pop
lods
fs
sbb
mov
dec
cmp
es
xlat
push
dec
ret
lods
aad
js
xchg
inc
inc
push
(bad)
and
icebp
mov
sbb
aad
ret
ds
push
cmp
jbe
mov
push
mov
leave
mov
aam
dec
sub
xchg
jnp
jae
test
cdq
jno
iret
push
lods
push
ret
jl
stc
fsubr
sar
push
in
aam
leave
je
pop
cdq
test
in
test
and
push
ins
push
mov
out
adc
daa
loope
loopne
ret
repnz
sbb
jbe
ret
shr
mov
xor
aad
jle
push
inc
mov
or
mov
push
and
mov
xor
mov
mov
imul
push
xchg
add
sbb
push
mov
mov
adc
mov
sar
unpcklps
sub
test
hlt
jmp
push
and
ins
pushf
jl
add
out
push
les
xor
add
mov
movs
adc
test
inc
pop
fcmovb
es
dec
adc
mov
mov
dec
or
push
jns
jo
push
das
pop
shl
test
mov
inc
lods
and
fcmovnbe
inc
loop
rol
shl
adc
leave
sbb
and
adc
inc
(bad)
sub
inc
inc
pop
push
xor
je
sbb
mov
ins
retf
ret
test
xchg
mov
repz
adc
aad
out
(bad)
jle
arpl
rol
sub
cld
push
mov
cmp
jecxz
push
jecxz
enter
inc
jbe
mov
sub
add
dec
add
ss
aam
push
or
jle
es
movs
iret
and
stc
dec
mov
inc
enter
int3
add
sbb
shl
cmc
jns
retf
pop
retf
repz
mov
jecxz
lds
loope
test
femms
push
or
(bad)
mov
loopne
retf
loop
call
cmp
pop
xchg
xor
xchg
(bad)
sahf
push
cmp
pushf
push
inc
inc
int
cmc
clc
push
out
cmps
ror
jmp
loop
jae
mov
mov
aad
int3
push
sbb
mov
clc
scas
test
shr
xchg
and
xchg
sub
push
mov
(bad)
daa
sti
sbb
aad
mov
stos
outs
xchg
dec
sbb
mov
dec
inc
jns
xchg
outs
mov
nop
pop
xor
mov
test
dec
push
rcr
jp
jmp
in
enter
and
mov
inc
pop
call
imul
mov
sub
add
bound
cdq
xchg
outs
mov
dec
cmp
inc
cwde
iret
pop
push
inc
sahf
test
cmp
lods
jle
xor
(bad)
mov
inc
popaw
cs
(bad)
push
inc
out
cmps
dec
cmc
cmp
cld
cld
frstor
inc
cmps
scas
inc
inc
xor
mov
jno
mov
lods
nop
inc
sti
adc
mov
push
bnd
mov
mov
xchg
imul
ds
or
push
or
arpl
cmp
xchg
sar
rcr
mov
js
in
cdq
sbb
push
jecxz
push
lea
cld
fdivr
jp
dec
push
icebp
mov
xor
int
cmp
jmp
inc
sbb
jle
xchg
add
shl
mov
call
lar
pop
xchg
jb
mov
push
int
aam
jbe
loop
xor
bound
nop
push
pop
call
sar
test
sub
hlt
clc
and
loop
sbb
push
jbe
sbb
dec
push
pushf
adc
jae
cmps
outs
or
sbb
push
out
xor
loope
cmp
xor
xor
fstp
dec
iret
jo
in
cs
shl
or
mov
lahf
out
sahf
mov
add
mov
stos
arpl
ss
mov
or
jnp
pop
movs
iret
inc
xchg
dec
mov
xor
adc
ds
cmp
in
push
add
xchg
out
pop
mov
test
retf
mov
hlt
imul
retf
mul
mov
adc
and
cli
jp
and
sub
jne
loopne
push
ds
and
imul
mov
lea
or
popa
popa
ins
outs
in
out
push
into
xchg
mov
pop
popa
ins
into
sub
jb
es
xor
push
push
fs
test
sti
push
pusha
pop
(bad)
push
lods
xchg
test
imul
lea
(bad)
adc
mov
test
mov
xor
loopne
test
cmp
mov
xchg
fild
dec
out
stos
pop
scas
ds
movs
test
xchg
mov
into
aas
(bad)
ja
cmp
in
cld
fwait
neg
xchg
mov
sub
inc
aas
leave
jl
mov
push
fild
ds
in
adc
fcom
cli
fimul
frstor
jge
xor
mov
push
cli
xor
push
add
pop
ret
jmp
lock
leave
retf
sbb
out
imul
and
jp
mov
inc
popf
loop
loope
xor
lods
out
adc
dec
adc
push
int
cs
cmp
out
and
out
jl
sti
outs
sahf
push
fdiv
xchg
jmp
dec
ins
lods
inc
aam
repnz
std
mov
sbb
fucomi
cmp
aam
aaa
adc
xchg
loope
ret
dec
sbb
retf
sub
inc
popa
sub
jmp
sbb
call
sar
pop
cli
cmps
(bad)
xor
pmulhuw
mov
dec
out
ret
mov
mov
inc
xor
mov
out
inc
add
les
jbe
sbb
lds
int3
add
adc
cmp
cld
mov
sub
test
push
jno
test
xchg
fwait
jns
mov
mov
push
push
in
mov
xchg
pop
jl
push
into
add
adc
adc
scas
dec
icebp
sub
mov
add
test
mov
push
cmps
dec
jae
lods
or
into
xor
popa
adc
mov
sub
movs
rol
add
cwde
jmp
mov
xchg
add
or
in
cli
loop
jnp
ss
lock
add
pop
adc
push
ror
jns
dec
imul
pop
shl
fcomp
pop
xlat
push
jmp
jo
mov
cmp
(bad)
xchg
add
sbb
repnz
inc
fld
sbb
cmp
je
aas
cmc
mov
int3
ficomp
ret
movs
lds
xchg
repnz
push
mov
cdq
bound
jmp
cmp
lods
adc
cmp
inc
in
mov
jnp
stos
aas
or
aas
enter
retf
out
xchg
add
pop
(bad)
mov
das
leave
xor
(bad)
enter
pop
leave
dec
xchg
test
adc
xchg
jbe
sub
dec
ins
xor
mov
popf
or
mov
test
call
rcr
pop
(bad)
dec
pop
mov
sub
hlt
faddp
call
sub
jmp
fimul
sub
push
mov
or
add
fisttp
mov
push
in
hlt
inc
shr
pop
xchg
cdq
std
(bad)
or
in
mov
cld
push
sbb
jnp
dec
ins
cld
cld
cmp
or
jns
add
dec
sub
xor
fs
inc
icebp
sub
stos
xor
sbb
mov
leave
out
lahf
pop
or
arpl
jmp
push
jbe
scas
mov
loopne
das
aas
ja
out
movs
xchg
fldenv
movs
jae
cmp
push
xor
jecxz
add
add
rcl
into
cmp
xchg
push
pushf
addr16
addr16
push
jns
aaa
jns
jo
and
and
pop
push
mov
push
adc
xchg
leave
rcr
jne
jp
data16
push
pop
or
shl
sbb
stos
retf
sbb
outs
cld
dec
fidiv
jae
dec
mov
ins
test
aad
xchg
sub
cld
push
ja
call
ins
mov
aam
mov
cmp
repz
dec
fs
lods
jg
inc
ja
mov
ja
inc
(bad)
add
in
dec
cld
aad
mov
push
push
inc
and
(bad)
cmps
test
cmp
jg
cwde
sub
sbb
mov
dec
sar
mov
or
and
push
ret
dec
in
lahf
retf
int3
inc
pop
lds
xchg
stc
daa
xlat
(bad)
pop
adc
pushf
shl
fidivr
nop
lahf
pop
mov
int3
lahf
sbb
jl
or
xor
sti
cwde
aam
mov
inc
jmp
pop
lahf
lahf
and
sbb
pop
cld
or
cld
sahf
cs
mov
ficomp
pusha
lea
inc
sub
les
push
out
push
add
popf
mov
jle
push
adc
inc
scas
pop
call
mov
daa
and
imul
pop
and
push
imul
push
cmc
test
pop
imul
push
pop
sbb
add
mov
mov
cli
jmp
mov
and
mov
cmp
mov
sub
hlt
aam
mov
imul
clc
ins
xchg
mov
sbb
mov
lock
mov
shl
sub
fwait
aad
call
xchg
xor
pop
scas
aas
jmp
rcr
outs
iret
hlt
mov
jp
pusha
adc
push
cmp
pop
adc
fchs
pop
cwde
fisttp
xchg
push
ja
retf
retf
adc
out
jne
(bad)
bound
inc
pop
push
mov
ins
dec
pop
lds
inc
jne
cmp
scas
hlt
aas
test
loop
(bad)
sahf
out
jnp
gs
in
mov
xor
pop
mov
and
jg
dec
aad
fbstp
stos
adc
adc
jg
idiv
fcomp
add
add
(bad)
imul
add
jle
sahf
xchg
call
mov
jecxz
mov
lods
inc
cmp
loope
jnp
mov
push
add
mov
cmp
mov
mov
jl
pop
or
mov
movs
or
aam
loopne
and
jno
aad
cmc
mov
ror
jmp
shr
and
repnz
xchg
jg
pop
leavew
xor
dec
mov
stos
(bad)
dec
test
xlat
mov
jno
imul
outs
icebp
aas
fistp
adc
call
mov
mov
clc
(bad)
leave
push
push
mov
xor
std
inc
lea
push
inc
stos
outs
pop
ins
push
mov
cmp
pop
gs
xor
push
xor
movs
dec
jecxz
inc
jae
stos
ror
fidiv
or
adc
add
ds
in
jmp
sub
jmp
scas
mov
push
jb
mov
ret
sbb
adc
ss
inc
clc
es
imul
ficom
jae
cmp
mov
fs
jecxz
cmp
sbb
xor
scas
push
lds
cmp
setl
xchg
fwait
jo
mov
adc
cmp
pop
movs
cmp
arpl
call
test
or
std
repnz
stos
mov
sbb
mov
scas
xor
jb
(bad)
pusha
cmps
fiadd
stos
jg
inc
and
dec
daa
sub
lods
jb
out
mov
mov
mov
outs
dec
jp
push
icebp
push
js
je
scas
cwde
inc
and
push
js
js
jmp
cli
iret
test
pop
mov
and
sub
repnz
cmps
aaa
sub
pop
sub
or
or
dec
jecxz
movs
test
xor
sub
scas
hlt
mov
movs
cmps
repz
jns
inc
retf
xchg
popf
xrelease
inc
in
sub
push
mov
push
dec
aaa
ficomp
mov
push
cmps
rol
cmps
test
mov
inc
imul
js
(bad)
repnz
jmp
pop
test
dec
mov
jne
adc
jns
mov
fimul
dec
and
mov
push
inc
out
push
inc
pusha
iret
ins
push
mov
(bad)
call
call
jns
fild
(bad)
cmp
xchg
lock
dec
push
adc
push
fxam
aas
outs
test
xchg
das
dec
inc
dec
and
sub
mov
mov
xchg
or
jno
xchg
(bad)
mov
xchg
lea
std
data16
ja
test
(bad)
sub
clc
xchg
inc
repz
push
(bad)
and
and
sbb
push
mov
retf
iret
cmp
mov
int
or
ror
ret
jae
daa
mov
jecxz
sti
push
pop
test
lds
lock
jg
inc
aas
icebp
mov
add
pop
push
xor
jl
(bad)
fld
push
sbb
je
sbb
hlt
ja
imul
or
cmps
ins
push
dec
lods
jle
or
scas
adc
iret
push
and
out
adc
mov
xor
pop
test
mul
movs
pop
sti
xchg
out
fiadd
ret
das
das
outs
fs
jae
nop
mov
jecxz
sahf
retf
pop
push
fdiv
mov
dec
or
outs
popf
adc
jl
movs
adc
or
shl
jl
xor
fdiv
popa
jb
inc
dec
loopne
mov
test
xor
iret
loope
cmp
in
ja
sbb
enter
(bad)
adc
enter
push
sti
out
push
xchg
(bad)
pop
sub
jno
add
ins
aam
mov
fwait
mov
lods
xchg
push
pop
stc
push
inc
inc
cmp
out
mov
scas
jnp
lods
pop
fldl2e
mov
and
js
pushf
sbb
mov
jmp
js
jmp
rol
xor
or
pop
xchg
mov
or
mov
mov
jmp
adc
mov
or
lea
xchg
nop
cwde
or
sbb
jo
jns
rcr
pop
ror
pop
loop
sub
mov
cmp
adc
jne
fs
xchg
pop
xor
sar
mov
inc
ffreep
pop
shl
cdq
in
jo
mov
mov
adc
xor
mov
sbb
lock
push
add
pop
cmp
enter
es
dec
cli
lahf
aad
pop
jl
cmps
fwait
sti
ja
jmp
inc
jge
xchg
out
shr
(bad)
into
fst
loopne
mov
outs
xchg
scas
shr
add
call
adc
cli
sbb
push
or
imul
mov
push
fistp
cdq
dec
fdivrp
(bad)
pushf
sub
mov
fidiv
fwait
sti
dec
imul
dec
mov
xlat
cmp
sbb
lods
js
xor
sbb
xchg
add
push
or
movs
jns
pop
jnp
cli
call
inc
jnp
test
lock
pop
lock
call
or
jmp
ret
pop
int3
xchg
add
hlt
mov
dec
xchg
mov
and
mov
inc
sub
ja
cld
jp
push
pop
fs
fs
rcr
(bad)
stc
dec
jmp
ret
mov
or
enter
test
inc
fcomp
imul
push
je
jne
call
repnz
fstp
sub
sub
cld
lock
mov
in
sar
add
sahf
xor
or
ins
call
xchg
out
je
ss
div
fwait
out
jb
jne
ja
out
push
sub
btr
test
cmc
popf
jp
adc
or
jmp
icebp
or
add
sbb
(bad)
repnz
(bad)
jae
stos
push
fld
movs
scas
mov
adc
(bad)
cld
dec
sub
in
mov
cwde
mov
cli
inc
cmp
sahf
jns
retf
pop
add
movs
mov
push
mov
pop
pushf
icebp
ja
int
(bad)
(bad)
iret
cmps
mov
loop
mov
fldl2t
dec
fdivr
ret
and
mov
pop
mov
jmp
sti
cmps
(bad)
aam
push
cmp
shl
xchg
loopne
sbb
mov
push
mov
cli
mov
je
movs
out
mov
adc
xor
fdivr
mov
xor
ret
(bad)
inc
call
mov
jo
ins
xchg
or
not
or
hlt
rcl
jl
movs
pusha
(bad)
dec
mov
mov
shl
dec
mov
mov
sbb
or
(bad)
cs
stos
pop
cmc
pop
push
mov
sbb
nop
in
mov
mov
cs
mov
fsub
adc
add
out
push
aas
mov
xchg
(bad)
test
dec
adc
les
xchg
cli
jae
mov
in
dec
pop
movs
xchg
nop
inc
rol
mov
mov
inc
pop
xchg
(bad)
mov
xor
and
(bad)
test
mov
xchg
mov
fbstp
scas
lods
jl
imul
sti
sub
clc
cmp
ret
jo
call
sbb
sahf
xor
cwde
sti
adc
lahf
push
and
std
ds
aam
shl
fmul
cmp
mov
dec
lahf
shl
inc
jle
fs
in
dec
or
cmp
inc
std
shr
je
xor
ss
cmp
pop
cmp
xchg
xor
bound
jns
loope
mov
aam
outs
inc
loopne
lods
mov
xlat
mov
loopne
fcom
dec
xchg
stos
dec
repz
in
dec
lds
and
in
inc
sbb
stc
pop
test
or
sub
aaa
add
fwait
jb
pop
mov
loopne
mov
mov
mov
sbb
mov
mov
(bad)
xchg
and
mov
iret
push
fscale
pop
adc
jmp
cmp
mov
ins
(bad)
rol
out
adc
aaa
push
or
cmps
dec
pop
inc
aas
pop
sub
or
push
adc
mov
or
rol
dec
loop
inc
mov
pop
in
xchg
dec
mov
ror
(bad)
jb
pop
sbb
stos
iret
ret
jg
rcr
das
xor
addr16
lahf
call
xchg
fndisi(8087
repnz
and
xchg
jg
jmp
lods
add
mov
sti
cmp
hlt
repz
ss
xchg
mov
lods
nop
fadd
jmp
sub
sub
pop
add
push
inc
sub
xor
xchg
scas
sbb
dec
and
push
clc
add
and
push
jge
pop
xchg
inc
gs
pop
add
jnp
hlt
mov
(bad)
stc
push
(bad)
xor
popa
pop
ja
xchg
xor
pop
mov
lock
int
pop
jl
aaa
push
icebp
stos
nop
mov
pop
pop
(bad)
push
cdq
enter
jl
jmp
mov
pushf
imul
mov
outs
shl
in
cwde
lods
pop
mov
and
imul
leave
push
repz
je
imul
push
dec
mov
data16
mov
mov
out
sub
mov
out
jns
fst
jns
add
sub
aad
push
das
lods
mov
test
(bad)
cld
sbb
inc
xchg
add
push
jb
inc
jl
scas
mov
mov
test
data16
sar
int3
aad
stc
outs
cmp
stc
ret
lods
and
fimul
jne
outs
push
mov
dec
mov
mov
pop
jl
dec
add
scas
pusha
sahf
in
and
xlat
je
xor
(bad)
ins
int
xchg
lds
scas
inc
(bad)
repz
sar
arpl
adc
repnz
push
dec
add
(bad)
cli
pop
leave
adc
retf
jo
sbb
cwde
in
adc
cmp
rcr
mov
(bad)
loop
dec
sahf
mov
arpl
or
hlt
or
repz
das
push
jnp
or
ror
mov
repz
sbb
mov
dec
daa
cwde
hlt
cli
shr
sub
stos
jmp
aam
xor
sub
mov
fucomi
jl
ret
xor
and
outs
lods
push
sub
and
mov
mov
lahf
mov
push
sbb
lock
in
inc
fmulp
div
xor
jne
test
ins
mov
or
push
ss
xchg
add
pop
out
mov
(bad)
xchg
jo
call
sbb
pushf
push
sbb
add
xchg
pop
cmp
xchg
jp
push
fnsave
in
cmp
sbb
push
mov
inc
out
call
ss
es
and
data16
pop
or
and
sbb
(bad)
aam
jmp
fbld
repz
es
ins
xor
(bad)
out
repz
jmp
loopne
jp
dec
sub
dec
icebp
cmps
inc
cmp
or
mov
inc
xchg
lock
ja
xor
or
loopne
adc
gs
dec
fisubr
mov
jnp
pop
repnz
(bad)
gs
adc
or
and
stc
jo
push
jp
xchg
sahf
shr
fs
sub
cli
lea
xlat
dec
add
jecxz
jl
jmp
push
sbb
xchg
mov
aam
mov
adc
(bad)
xor
or
test
fwait
pop
fcmovbe
cmp
int
pusha
mov
jmp
pop
push
ja
test
adc
sar
rol
out
movs
js
aas
and
fwait
bound
mov
sub
xor
rol
fistp
xor
adc
icebp
pop
adc
outs
aad
hlt
add
inc
pop
add
sbb
cs
jne
imul
mov
dec
pop
jmp
mov
repz
mov
mov
or
jns
xchg
not
jmp
mov
in
add
mov
sub
movs
adc
inc
in
jge
mov
repnz
xor
or
cwde
lock
aam
add
cli
add
pop
(bad)
mov
xchg
addr16
je
(bad)
cld
jbe
stc
clc
or
and
fimul
jmp
shr
enter
test
movs
lock
pop
mov
cmp
or
inc
sbb
mov
out
add
aaa
inc
fxch
inc
not
dec
pop
cmps
mov
and
sbb
shr
lds
push
push
push
jge
shr
fwait
pop
sbb
dec
xor
addr16
cli
or
cs
aaa
dec
jp
mov
or
fisttp
movs
mov
fistp
mov
adc
mov
mov
sub
and
xor
(bad)
pop
adc
inc
(bad)
cmp
pop
push
leave
xchg
xor
add
mov
shl
push
test
imul
xchg
xor
adc
ins
rol
jle
dec
pop
dec
dec
jle
gs
sbb
es
in
shl
or
mov
in
dec
xchg
sbb
cmp
mov
adc
loopne
mov
dec
sbb
add
test
sub
mov
div
jle
test
dec
les
idiv
xchg
sbb
sbb
and
pop
sub
pop
or
ror
jns
xchg
jle
sbb
enter
or
int3
in
shl
mov
jecxz
es
fwait
add
pusha
outs
clc
xchg
and
inc
movs
stos
repz
(bad)
xchg
pop
jl
shr
sbb
mov
jg
hlt
or
add
pop
mov
adc
mov
add
inc
(bad)
pushf
cs
mov
mov
mov
ss
push
jae
(bad)
in
test
loopne
xchg
gs
jmp
mov
xor
sbb
cmp
pop
in
mov
mov
mov
jnp
leave
pop
sbb
mov
std
imul
ret
mov
xchg
cs
xlat
dec
daa
jnp
pop
fisub
in
xchg
js
ftst
jbe
and
pop
movs
ret
ss
xchg
es
movs
and
cmps
ror
xchg
bound
and
sub
xor
add
cmc
pop
out
push
xchg
sbb
dec
xchg
in
xchg
aaa
cmc
add
xchg
js
movs
je
mov
inc
dec
or
call
in
scas
ja
or
je
pop
jmp
fwait
mov
in
mov
ds
adc
fcomp
repz
fs
push
jo
push
cld
fdivr
jge
aaa
repz
jmp
jae
add
xchg
jmp
pop
dec
call
sti
test
rol
(bad)
scas
outs
jmp
inc
outs
mov
fbstp
bound
call
in
das
lods
or
loopne
jb
js
cwde
inc
cmp
adc
jmp
xor
push
(bad)
lock
adc
mov
dec
sahf
dec
ffree
mov
push
push
mov
fstp
cmp
xor
imul
pusha
jns
pop
dec
sbb
dec
enter
aaa
test
sbb
lods
daa
rol
sbb
fwait
pop
outs
(bad)
inc
xchg
imul
(bad)
mov
dec
fiadd
pop
iret
in
cdq
pop
mov
mov
jns
stos
xor
xchg
cmp
inc
(bad)
jg
mov
mov
or
mov
test
sbb
push
das
ds
movs
or
mov
dec
xchg
jns
test
inc
(bad)
dec
js
arpl
call
push
add
int
dec
in
adc
shl
push
fisub
mov
mov
adc
dec
stc
repnz
test
pop
nop
push
clc
lods
sub
jge
cmp
xor
push
(bad)
cmp
mov
cmp
mov
jg
mov
imul
popf
and
push
dec
enter
daa
test
xchg
sbb
mov
(bad)
mov
push
fisubr
out
retf
or
add
adc
add
add
jmp
cmp
mov
adc
bound
mov
jmp
mov
in
(bad)
stc
retf
into
dec
add
or
(bad)
(bad)
in
fimul
and
ins
cmp
jge
(bad)
(bad)
pushf
(bad)
dec
adc
add
(bad)
xor
jo
bnd
or
scas
gs
mov
and
mov
imul
pusha
dec
or
nop
or
pop
pop
pushf
or
pop
or
inc
mov
icebp
aam
fisub
jo
sbb
call
xchg
jmp
sahf
jo
lahf
jns
mov
retf
add
adc
xchg
loope
add
lock
mov
jg
cmc
push
les
out
movs
ja
pop
stos
or
add
xchg
sbb
fnsave
jbe
push
and
xchg
jl
pusha
aad
mov
sti
jl
xchg
outs
mov
loop
mov
jmp
dec
sbb
fdivr
xchg
aas
je
jmp
mov
inc
xchg
daa
mov
and
dec
jnp
out
cmps
and
dec
xchg
jge
or
bound
std
test
add
jne
bound
out
mov
les
and
push
shl
and
adc
xor
(bad)
out
in
sahf
fisttp
mov
ds
xor
xor
inc
pop
repnz
inc
cmps
adc
cwde
dec
ret
mov
test
es
or
leave
add
stos
cmp
sub
(bad)
in
mov
push
shufps
cmps
ja
mov
cdq
shr
sbb
daa
jge
jno
jbe
add
lahf
sub
pop
xor
or
mov
psubusw
xchg
jo
sar
sbb
ins
inc
cmp
xor
xchg
sub
xor
out
mov
dec
lods
jbe
sub
arpl
inc
mov
cld
xchg
hlt
or
push
test
es
inc
cmp
and
mov
ins
in
aas
mov
int3
adc
jno
ret
inc
repz
nop
sbb
push
or
push
mov
loope
(bad)
(bad)
xchg
push
cs
retf
enter
daa
push
leave
outs
ss
fcmove
out
cwde
mov
push
inc
fs
inc
fdivr
mov
aaa
jmp
jmp
mov
stos
int
cmovno
fisub
mov
push
mov
icebp
xchg
fadd
(bad)
mov
daa
scas
test
mov
jbe
adc
bound
in
or
or
out
ret
pop
stos
cli
push
cmp
push
retf
stc
lods
test
jno
jmp
adc
cmp
mov
lahf
in
inc
pop
cmps
and
(bad)
in
(bad)
sub
call
loope
xchg
cmp
mov
in
(bad)
loop
lds
fwait
push
push
and
ds
stc
stos
and
jo
mov
jb
retf
int3
bnd
(bad)
stc
lea
mov
gs
xor
cli
je
mov
sub
ret
scas
push
add
push
adc
out
fnstenv
add
adc
out
leave
call
add
addr16
sbb
mov
retf
xor
ja
dec
jl
xchg
mov
aam
mov
mov
les
pop
jmp
ret
div
hlt
lock
xor
mov
mov
fist
mov
pop
mov
fsub
shl
or
add
mov
data16
icebp
movs
inc
shl
inc
mov
and
loop
add
das
pop
xchg
out
sub
out
sahf
loopne
xchg
pop
sbb
mov
or
push
sub
sbb
test
ret
in
cli
inc
and
push
ins
nop
sahf
movs
fisubr
je
fistp
test
mov
out
xchg
or
test
and
in
xchg
inc
psadbw
fldenv
iret
aaa
jle
jae
mov
inc
fdivr
inc
test
push
push
cld
jp
sti
imul
push
ret
(bad)
cmp
lea
xor
push
push
call
jno
mov
(bad)
xchg
pop
test
jo
call
or
cmc
add
loopne
sub
cld
pop
fistp
pop
mov
call
mov
xchg
pop
retf
fdivr
pop
pop
mov
sbb
retf
adc
xor
mov
pop
mov
push
inc
ins
js
int3
push
loope
pop
in
sub
scas
(bad)
mov
imul
test
push
adc
sub
push
push
xchg
push
mov
push
jno
xchg
sub
mov
push
pop
push
pop
sub
jge
rol
xor
xchg
xchg
loopne
mov
pushf
pop
in
(bad)
mov
pop
outs
repz
arpl
xchg
aaa
cmp
mov
dec
lods
out
pop
das
jl
mov
ret
jnp
cmps
mov
adc
shr
push
adc
cdq
clc
sbb
fwait
mov
jmp
adc
aas
jno
add
and
add
or
shl
jbe
mov
dec
sub
cmp
shl
lea
int3
repnz
pop
xor
lods
loope
fcom
fistp
xchg
int3
(bad)
mov
ror
pop
or
dec
jne
pop
or
outs
lock
sub
mov
sbb
and
sti
pop
aas
stos
cmp
cmps
(bad)
imul
retf
mov
cld
or
movs
loopne
mov
arpl
into
pop
pop
rep
movs
adc
pushf
jae
enter
fsub
sbb
mov
sbb
ins
pop
fwait
repz
or
or
rol
dec
pop
movs
arpl
pop
pop
fstp
aaa
movs
dec
js
sub
mov
xchg
repz
pop
lods
push
mov
and
pop
icebp
mov
in
sahf
(bad)
inc
push
das
ins
imul
xchg
pop
pop
iret
sahf
jae
call
dec
hlt
(bad)
inc
leave
sar
adc
mov
(bad)
in
(bad)
(bad)
rol
pop
push
pop
cmp
inc
outs
das
sbb
push
mov
mov
out
arpl
clc
or
ins
rol
pop
mov
sbb
jp
ret
jecxz
sbb
jo
neg
scas
scas
(bad)
es
sub
xchg
sbb
cmp
jle
mov
adc
xor
inc
aad
xor
in
mov
jmp
add
mov
pop
or
mov
ss
sbb
jae
jns
mov
cmp
in
or
adc
lock
into
out
in
inc
rol
lods
test
jo
call
cmp
mov
movs
xor
fidivr
xchg
popf
add
aad
pop
je
cwde
mov
mov
ret
pop
mov
lea
jo
std
pop
cmps
sbb
sub
mov
test
aad
cmp
dec
lock
push
pop
pop
aad
ins
add
adc
cmc
ss
cmp
es
imul
add
pop
faddp
push
lea
sub
and
loop
loopne
mov
jmp
sub
adc
fstp
out
xchg
retf
inc
jns
xchg
jns
stc
xlat
xor
jmp
sub
outs
mov
test
outs
fistp
dec
xor
leave
(bad)
fdivrp
cmp
xchg
mov
je
cmps
push
sub
and
jle
xchg
xor
adc
outs
mov
dec
pop
lock
pop
push
retf
dec
push
or
sub
inc
xchg
jp
scas
cmc
cmc
and
cli
in
xlat
pop
inc
push
ror
pop
jg
mov
sahf
fdiv
mov
mov
gs
test
cmp
cwde
xchg
pop
ja
pop
inc
mov
or
movs
gs
cmp
mov
int3
in
scas
out
or
push
cwde
mov
jnp
in
adc
pop
lods
and
int3
stos
pusha
jo
mov
sbb
sub
xchg
arpl
xlat
inc
into
pop
sbb
jns
enter
jne
push
jb
pop
out
aam
jno
inc
xor
lods
push
jns
mov
xor
loopne
std
add
pop
imul
mov
xlat
mov
push
ins
fmul
add
in
push
pop
push
jl
xchg
mov
jp
(bad)
movs
inc
out
xor
cmp
push
cwde
sbb
outs
lahf
dec
repz
inc
and
add
popf
repz
in
loope
lods
in
dec
js
or
popf
lods
jnp
inc
push
pop
adc
inc
add
loopne
in
loop
push
xchg
pop
xor
cwde
into
jae
pop
stos
push
in
mov
mov
mov
mov
mul
shl
and
mov
and
pushf
stos
pop
xchg
stos
(bad)
fimul
mov
dec
cmp
loopne
add
test
hlt
adc
or
into
out
rol
push
cwde
cli
or
push
dec
fwait
call
(bad)
pop
add
mov
aam
xlat
data16
cmp
jno
jno
xchg
or
or
mov
loopne
sub
cmc
mov
(bad)
aad
fisub
test
mov
push
xchg
mov
jbe
push
jnp
test
pop
popa
mov
pop
bound
les
out
cmp
mov
jecxz
add
(bad)
jecxz
or
sub
mov
dec
dec
fsub
dec
mov
repz
fstp
(bad)
adc
repz
test
cld
jecxz
jo
push
sub
mov
out
sbb
push
fwait
mov
les
push
push
jp
clc
or
xor
shr
xor
xor
inc
push
jae
ja
pop
in
adc
popf
ret
xchg
push
sahf
cmp
sbb
and
inc
cmp
inc
dec
fbstp
jb
and
fcmovu
pop
jmp
dec
mov
xchg
sub
cmp
scas
mov
sub
sti
out
mov
rol
call
push
pop
lock
xlat
sbb
mov
dec
jae
fld
or
in
mov
daa
inc
ud0
hlt
xchg
inc
adc
imul
and
pop
jbe
arpl
in
mov
xor
xor
inc
int3
lds
stos
retf
ins
adc
cmp
cmp
adc
jg
dec
push
in
enter
dec
loopne
call
test
imul
(bad)
pop
(bad)
(bad)
(bad)
pusha
frstor
shl
sub
aad
and
jl
add
jp
movs
or
mov
shr
loop
sbb
mov
pusha
cmovnp
adc
retf
xor
jae
inc
(bad)
xchg
mov
and
mov
loop
pop
ins
mov
xchg
inc
mov
(bad)
mov
pop
push
lods
outs
sbb
mov
inc
scas
scas
mov
clc
jge
push
push
fwait
cmp
push
int
cli
adc
shr
pushw
xchg
jo
cli
push
scas
clc
xchg
lds
sar
scas
call
popa
cmp
mov
xchg
stos
pop
jb
xlat
pop
leave
das
adc
pop
sub
aaa
popa
jmp
imul
mov
jo
mov
cdq
mul
fs
addr16
dec
jne
sub
cli
mov
sub
js
cmps
mov
das
(bad)
pushf
inc
out
lods
retf
(bad)
dec
push
add
bound
mov
adc
loopne
mov
mov
iret
or
test
cmps
pop
jb
adc
mov
inc
imul
xchg
loop
ret
xchg
add
mov
(bad)
je
mov
aad
jge
pop
jge
pushf
sbb
mov
jg
sub
inc
mov
jge
mov
bound
outs
sub
add
lock
pop
pop
mov
cdq
jl
jge
mov
(bad)
call
and
dec
aaa
adc
in
cdq
sbb
iret
aaa
xlat
dec
mov
in
inc
ja
push
mov
clc
adc
mov
(bad)
add
sbb
(bad)
call
xchg
push
fsubp
bswap
and
in
icebp
add
arpl
mov
add
inc
fimul
iret
cmp
jo
mov
ins
xor
jmp
outs
fbld
xchg
and
popf
sbb
movs
pop
pop
jnp
outs
sbb
sar
(bad)
sar
push
(bad)
(bad)
adc
cmps
cwde
das
clc
sbb
jge
dec
test
mov
sbb
pushf
dec
mov
pusha
je
call
pop
aaa
iret
popf
dec
pop
mov
push
dec
mov
cmp
mov
add
inc
clc
cmps
push
pop
cmps
ror
rcl
shl
xor
lea
cmps
fist
add
xadd
cs
xchg
pop
adc
and
ffree
aaa
sub
in
xlat
pop
cmp
loop
bound
popf
cmp
sub
je
pushf
add
sub
xchg
push
outs
stos
icebp
stos
fidiv
(bad)
mov
mov
aaa
jp
add
shr
adc
movs
call
and
loope
(bad)
rol
mov
iret
push
add
in
aas
jnp
mov
pop
jl
addr16
js
inc
add
cmp
inc
std
inc
and
add
mov
je
cld
mov
push
push
(bad)
cdq
mov
mov
push
mov
retf
lock
and
and
lods
jb
dec
cdq
inc
jge
mov
sbb
js
jmp
lea
jle
das
lea
mov
enter
loopne
test
push
jb
shl
mov
mov
int3
outs
add
in
cmp
jns
sub
in
jge
and
fwait
loop
fdiv
ins
out
xlat
fiadd
pop
lods
lds
adc
jne
jbe
add
sti
iret
jmp
mov
imul
push
sbb
pop
in
bsr
jp
push
out
ss
push
sub
mov
add
or
push
pop
cwde
jmp
int
popa
enter
dec
in
fisub
pop
add
frstor
cmc
les
jae
sub
add
popf
mov
and
sbb
ds
mov
dec
fucomp
std
call
jo
push
stc
jge
in
xchg
dec
fisub
xchg
frstor
cmp
addr16
into
aaa
xor
mov
add
scas
dec
loopne
sub
push
lds
push
test
dec
cs
dec
dec
sti
adc
pushf
leave
stos
movs
pop
sbb
jge
xchg
dec
xor
xchg
mov
dec
adc
outs
mov
inc
iret
and
push
xchg
ins
ss
push
dec
push
mov
mov
sub
inc
in
and
add
lods
push
push
retf
out
cld
hlt
sub
(bad)
mov
push
sub
pop
jae
fild
cld
cld
push
(bad)
cs
inc
sbb
xor
or
fst
call
bound
push
xchg
push
bound
sub
fdivp
js
push
pop
cmc
adc
sbb
push
(bad)
adc
mov
dec
mov
dec
xchg
or
std
jp
addr16
pxor
call
add
cmp
push
scas
clc
mov
mul
lahf
enter
fcom
loope
popa
int3
xor
movs
xchg
das
cmp
das
jae
sar
and
and
jmp
nop
push
pop
add
retf
into
mov
adc
and
push
(bad)
jae
jns
sbb
imul
mov
cmc
sbb
pop
dec
dec
inc
pop
bound
mov
cmp
push
scas
outs
mov
xchg
and
icebp
imul
pop
aas
mov
mov
and
sub
inc
mov
fdiv
fs
lods
aad
out
popf
push
jp
repz
and
add
mov
repz
push
ret
add
or
cmps
sbb
int3
adc
sub
aad
daa
mov
mov
add
imul
xchg
and
mov
jmp
sahf
lods
mov
(bad)
jo
dec
les
loop
push
pop
repz
inc
add
mov
sub
int
imul
push
(bad)
or
aaa
and
outs
rcr
lea
test
or
mov
inc
inc
shr
mov
aas
loopne
rcl
fnstcw
and
jge
retf
repz
sub
fcomp
gs
or
lock
add
(bad)
test
movs
xor
loop
push
js
lods
adc
jae
ss
stos
xor
sar
inc
pop
xchg
push
ins
daa
sub
xchg
or
out
mov
inc
cli
mov
jb
cmps
or
stos
adc
(bad)
push
dec
xchg
push
dec
fisubr
ds
dec
popa
mov
inc
inc
addr16
in
push
jle
sub
pop
mov
lods
and
les
in
rol
ret
call
push
(bad)
fisttp
jmp
call
sti
mov
push
gs
outs
inc
cmp
(bad)
fadd
and
or
and
ins
or
and
jmp
pop
hlt
lahf
std
adc
adc
ds
mov
loop
fsubr
jle
cdq
hlt
arpl
and
cmp
jae
pop
mov
jl
inc
or
push
mov
ss
je
jmp
(bad)
pop
int3
mov
bswap
mov
retf
fs
inc
jl
and
stos
ins
es
(bad)
cmp
retf
movs
push
leave
lock
adc
xchg
sub
fstp
scas
xor
mov
and
outs
adc
ss
mov
aaa
not
xor
dec
jb
or
inc
mov
pop
(bad)
je
gs
xchg
cli
out
or
jae
jecxz
rol
stc
mov
cmp
push
push
or
ret
ss
into
add
mov
cmps
inc
loop
loopne
cmp
call
lds
jo
xchg
mov
mov
lock
addr16
mov
stc
jmp
dec
rcl
mov
in
push
das
and
(bad)
out
ins
xor
ffreep
xor
mov
mov
mov
mov
scas
pop
mov
xchg
out
std
add
stos
data16
scas
adc
mov
sbb
xor
mov
imul
and
call
lea
push
xchg
pop
mov
xor
pop
ror
xor
mov
push
add
sbb
jns
inc
xchg
ins
pop
adc
jo
pop
sub
xchg
into
aas
in
cmp
or
adc
shl
fldenv
xor
hlt
sub
cdq
fs
pop
mov
repz
cmp
std
ret
test
jo
(bad)
xchg
dec
mov
enter
movs
push
jno
rol
pop
int
bound
mov
jle
jb
cmc
jae
ss
out
or
loop
mov
in
push
sbb
sti
xchg
out
sub
sbb
add
retf
fimul
or
add
test
push
out
out
lock
push
retf
in
fdiv
mov
cmp
fwait
jle
xchg
mov
push
not
outs
xor
add
outs
mov
jmp
call
fisttp
data16
imul
cmps
retf
dec
sub
jno
adc
cli
test
pop
test
dec
mov
mov
arpl
in
mov
xchg
xchg
clc
rcr
vshufps
dec
xchg
add
enter
push
out
or
cmp
(bad)
and
xchg
sub
pop
xor
sub
rcr
pop
ins
inc
gs
jecxz
inc
aam
cmp
and
dec
loopne
sbb
in
pop
stos
xchg
clc
jle
repz
mov
call
sub
pop
out
test
and
and
xlat
and
add
data16
fcom
adc
push
xchg
daa
out
dec
jl
mov
in
add
push
(bad)
in
cld
rol
dec
push
push
imul
or
jmp
out
xor
cli
mov
mov
loope
adc
dec
cmps
stos
jbe
sbb
and
stos
js
fldcw
repz
imul
push
mov
cmp
aaa
sbb
inc
push
out
xor
push
jg
sar
cwde
pop
repz
cmc
lods
(bad)
jg
pop
push
push
rol
pop
test
cwde
push
nop
and
cli
inc
or
mov
mov
jl
adc
sub
dec
add
adc
sbb
mov
jp
xchg
dec
cmps
shr
dec
sbb
ja
pop
jge
mov
push
xor
repnz
ins
jge
pop
outs
lahf
cmp
ret
int3
xchg
fiadd
inc
mov
xlat
je
sbb
aaa
and
jb
lods
mov
stos
jmp
adc
(bad)
mov
rol
lock
movs
test
(bad)
mov
stos
mov
lods
mov
bound
mov
and
jl
inc
in
nop
inc
popa
mov
(bad)
rcr
dec
lods
xchg
sub
sub
aad
scas
pop
sub
shr
cmp
imul
ins
mov
loope
pop
xor
push
inc
pop
dec
mov
out
lods
rcl
pop
xchg
cmp
mov
je
fdivr
mov
es
fsub
push
test
jmp
cmps
or
mov
sar
jmp
(bad)
push
(bad)
mov
cmovnp
sub
les
inc
mov
loop
push
mov
in
or
test
addr16
gs
rol
and
frstor
dec
mov
fisttp
sub
jle
cmp
add
jge
jmp
popf
dec
cmp
shl
sub
movs
mov
pop
mov
xor
xchg
sub
mov
xchg
inc
rcl
push
lods
cmp
xor
test
dec
test
popf
cmp
std
loopne
lds
stc
mov
(bad)
cmp
imul
cwde
dec
cdq
scas
shr
dec
das
pop
test
lock
xchg
adc
jle
pop
aad
push
ret
mov
lahf
int
(bad)
xchg
(bad)
push
sub
add
les
xor
nop
dec
sub
sub
sbb
sbb
imul
ficom
xchg
lahf
pop
in
push
dec
add
xor
inc
pop
cdq
cli
repz
outs
cmps
add
cmp
in
xor
and
xchg
or
pop
fdiv
outs
repz
fcmovb
test
push
cmp
add
dec
stos
scas
sbb
inc
pop
lea
pop
mov
popa
test
add
mov
push
or
cmc
mov
inc
push
inc
cmp
dec
mov
mov
repz
jbe
mov
cwde
rcl
in
int
xchg
ds
gs
pop
jge
dec
inc
jp
repnz
dec
sahf
mov
dec
cmp
and
aam
aam
inc
pop
mov
dec
sbb
ds
cmp
inc
movs
xlat
jge
repnz
test
inc
pop
das
fdiv
mov
retf
xchg
popa
(bad)
sub
mov
jecxz
(bad)
in
pop
div
cmps
frndint
xchg
xor
jbe
mov
mov
or
clc
loopne
pop
ror
push
push
push
rcr
dec
cmp
loopne
movs
jmp
mov
lods
fisub
fistp
lods
mov
xchg
mov
loop
dec
cwde
and
(bad)
in
mov
jecxz
aam
mov
sbb
hlt
cmp
sbb
je
sar
push
arpl
call
ds
mov
sbb
sub
sbb
retf
stos
or
call
mov
mov
mov
or
ffree
cmp
(bad)
fwait
mov
mov
pop
push
sub
cmp
nop
loop
loopne
fsub
test
dec
lea
cwde
gs
out
mov
lods
fisttp
int3
not
fidiv
jle
pushf
push
sub
push
mov
mov
or
push
push
loopne
mov
cwde
fstp
mov
sub
jmp
push
outs
pushf
test
outs
pushf
shr
xor
scas
stc
ret
test
add
sub
pop
jno
(bad)
gs
adc
mov
hlt
pop
out
add
pop
enter
cwde
sbb
inc
lock
not
add
(bad)
jns
sub
and
shr
aam
mov
fisub
cdq
inc
or
lds
jmp
arpl
gs
aad
cmp
dec
call
dec
loopne
hlt
xchg
arpl
push
scas
lahf
pop
(bad)
mov
out
xchg
popf
lods
xlat
daa
fisttp
into
jmp
cli
cmp
xchg
pushf
adc
sub
popa
aam
lods
rcr
test
xchg
loop
test
stos
add
retf
jge
fmul
push
fstp
loope
test
ins
mov
and
sub
nop
dec
rcl
stc
dec
mov
jo
lods
test
pop
push
imul
out
cwde
jl
sti
mov
lds
or
aaa
pop
retf
xchg
cmps
and
and
dec
enter
mov
pop
int
pop
and
imul
movs
sbb
add
mov
jmp
iret
(bad)
pop
inc
daa
pushf
dec
xchg
sbb
or
fcom
cmp
test
cmp
or
sbb
mov
dec
push
test
dec
jae
dec
jb
repz
jno
clc
mov
test
mov
xchg
imul
shl
and
test
jle
push
mov
div
xchg
pop
xchg
jmp
sbb
pop
add
jle
xchg
pop
and
push
ja
in
adc
sub
cld
scas
sub
xor
ins
adc
cmp
xchg
cmp
xor
rol
xor
mov
sbb
scas
or
inc
dec
pop
jno
jnp
retf
or
out
dec
mov
inc
clc
int3
ffree
aaa
dec
cmp
push
mov
and
sub
pop
mov
sar
popa
sahf
bswap
lods
jmp
mov
ja
xor
and
pusha
xor
shr
add
inc
test
rol
fisttp
cld
test
sti
xor
sbb
jne
jmp
add
lods
cli
daa
pop
and
addr16
mov
popa
push
mov
mov
jmp
(bad)
icebp
iret
adc
mov
adc
rol
dec
test
xchg
outs
aam
shr
adc
leave
push
les
fcomp
mov
mov
push
mov
adc
cli
fwait
ja
iret
cmp
sti
hlt
sar
push
xlat
add
push
mov
out
cmps
rcl
fidivr
push
(bad)
div
lods
pop
lods
jmp
imul
pop
sub
pop
mov
push
jns
xor
out
push
inc
dec
xlat
(bad)
ss
and
int3
ss
in
or
test
xchg
lods
sahf
jnp
dec
sbb
push
std
sbb
int
and
jne
jns
mov
stos
push
call
test
bound
pushf
add
dec
test
add
pop
jmp
test
mov
(bad)
outs
jne
fcom
push
aam
jae
das
push
push
out
mov
scas
inc
sbb
outs
sbb
call
sbb
push
ret
sar
jmp
loop
mov
in
dec
rep
call
dec
add
cmp
mov
mov
repz
sahf
pop
xchg
sub
ret
pop
repnz
lock
jp
jmp
std
nop
pushf
cmc
(bad)
pop
sahf
fstp
popa
fild
imul
lock
inc
xchg
popf
cmp
mov
ins
cdq
imul
loope
jmp
into
fbld
leave
xchg
push
adc
(bad)
xor
pop
adc
push
inc
test
movs
pop
and
ret
pop
aaa
or
inc
xchg
fidivr
cli
aad
stos
jo
aaa
push
leave
aaa
adc
mov
mov
push
or
cmp
cs
push
jnp
xor
xchg
add
jge
and
cs
jns
cmp
cli
inc
rcr
inc
imul
scas
movs
jb
fmul
xchg
adc
push
jae
cld
ja
add
pusha
outs
shr
ret
adc
jge
loopne
inc
mov
xchg
outs
addr16
repnz
cmps
daa
mul
xchg
ret
xor
shr
dec
sub
ins
xor
pusha
mov
mov
outs
out
push
shr
fiadd
outs
ss
dec
add
jo
inc
push
or
xchg
arpl
xlat
ins
ds
iret
sbb
push
push
rcl
push
xor
div
inc
inc
ins
test
dec
add
es
and
pop
mov
push
or
cmp
mov
sbb
sbb
out
jae
fnsave
lahf
mov
mov
and
clc
adc
loopne
mov
shr
mov
stc
fisttp
dec
popa
inc
call
pop
sub
push
dec
in
push
sahf
xchg
bound
jno
sbb
repz
sbb
pop
cmp
retf
jle
jns
sbb
ror
loopne
ja
lds
pop
popf
cmp
stc
sar
cld
xor
xchg
sbb
nop
adc
pop
mov
in
lock
cmps
out
ret
out
sbb
push
sub
xchg
aam
cmp
inc
loope
jp
mov
adc
call
xor
outs
call
arpl
neg
and
sbb
or
push
mov
je
xchg
(bad)
sahf
mov
jae
cmps
or
mov
or
js
mov
mov
fadd
in
push
mov
jecxz
sbb
dec
cmp
and
cmp
imul
in
xor
xor
pop
pop
sub
cdq
xor
test
lea
mov
sub
or
bound
jl
jb
ins
movs
mov
fdivr
test
out
push
push
ret
int3
mov
dec
mov
mov
mov
ins
lds
cmps
sub
aaa
ja
sub
jno
pushf
pop
lahf
jmp
sub
or
sub
ss
test
cmp
call
jmp
ret
into
clc
jg
jge
pop
sub
inc
mov
dec
cmps
enter
cmp
adc
inc
cmp
and
push
(bad)
rcr
stos
pop
push
mov
adc
sub
jmp
or
out
mov
sub
mov
add
mov
sbb
adc
shr
mov
sub
sub
into
sub
aaa
repnz
jo
push
lock
fdivr
int
sahf
test
xor
mov
loopne
add
push
fwait
cli
pop
push
std
es
or
push
and
add
dec
and
inc
jl
sahf
stc
xor
hlt
and
cdq
hlt
mov
sub
pop
mov
pushf
sub
ret
mov
sbb
clc
leave
std
jbe
add
test
test
adc
push
jp
stos
out
push
pop
out
sub
pop
inc
ffreep
movs
adc
xchg
adc
leave
pop
xor
test
out
fidiv
aam
retf
add
sub
aad
repz
mov
mov
dec
dec
dec
pop
mov
js
pop
push
sbb
ffreep
xor
fstp
pop
dec
adc
inc
jns
unpcklps
nop
mov
and
mov
retf
cmp
inc
xor
jl
es
adc
retf
gs
mov
sub
push
sub
sbb
xchg
ins
test
ror
addr16
fchs
and
and
fistp
push
cmc
add
jecxz
cmps
push
(bad)
push
mov
jo
(bad)
loop
test
in
aad
std
lahf
inc
add
or
adc
lods
push
or
(bad)
mov
scas
int
es
pop
add
adc
data16
ins
int
xor
adc
inc
sbb
rcr
arpl
add
daa
cmps
popf
in
(bad)
jecxz
in
mov
pop
cs
test
mov
dec
clc
cmp
ins
stos
or
sti
sbb
jns
pop
stos
loopne
xor
dec
mov
or
xor
les
and
jl
scas
mov
pop
out
or
(bad)
add
mov
mov
xchg
mov
sub
sbb
hlt
addr16
(bad)
out
fs
popf
sbb
sub
cmp
jecxz
ss
lods
xor
sbb
jecxz
mov
rol
xchg
xor
jg
fistp
cmp
addr16
popf
mov
mov
and
shr
mov
pop
sar
mov
es
push
sbb
or
jb
mov
push
mov
jno
mov
pop
sbb
ins
(bad)
mov
mov
lea
dec
lahf
aas
xor
cld
add
icebp
std
das
adc
mov
sti
int3
pop
lahf
mov
add
cmps
int3
fiadd
test
outs
cmp
rol
fs
and
cdq
fwait
sbb
scas
pop
inc
(bad)
fbld
sahf
mov
sbb
arpl
inc
outs
inc
aas
cmps
mov
jg
dec
jmp
inc
and
sbb
aam
into
pop
dec
pop
mov
jns
imul
fiadd
and
mov
mov
inc
fs
adc
inc
jp
gs
test
xor
in
ror
mov
iret
test
cmp
jno
sbb
push
aam
add
bound
pushf
xor
pop
jns
pop
cmp
dec
pop
test
jecxz
imul
xchg
scas
sbb
jmp
cmp
sub
add
inc
(bad)
out
cdq
test
xor
fist
mov
mov
mov
hlt
fst
test
fisubr
cmps
or
mov
add
(bad)
mov
test
sub
sbb
sub
pop
push
cmp
cs
xchg
int3
pop
sub
push
out
sahf
jg
call
mov
(bad)
xchg
(bad)
adc
mov
ret
inc
shr
movs
ds
xor
test
les
je
cmp
je
imul
ja
retf
out
xor
sqrtps
dec
pop
mov
cs
lods
(bad)
fwait
and
mov
cwde
pop
(bad)
pop
jo
mov
mov
add
jns
mov
mov
ja
aam
adc
jmp
push
pop
mov
aaa
dec
add
dec
ds
push
or
call
(bad)
mov
mov
xor
loopne
les
mov
ins
pop
or
sbb
ss
retf
push
out
scas
rcr
iret
or
add
cdq
lods
mov
add
or
cmp
fadd
push
push
push
push
lock
jmp
xor
sbb
cli
rcr
mov
inc
and
int3
adc
inc
sub
test
clc
pop
popf
mov
pop
call
jp
dec
adc
scas
dec
and
cs
cmc
xchg
pop
xlat
mov
jne
je
cmp
es
sti
xchg
jp
in
adc
test
mov
sbb
stos
test
xchg
and
fstp
pop
dec
cld
cmp
push
mov
adc
dec
mov
jno
imul
retf
cmps
hlt
push
xchg
mov
adc
push
or
sbb
dec
sar
sbb
xchg
xor
fld
lods
mov
fwait
jg
xchg
jb
(bad)
fdivr
(bad)
je
or
movs
push
jg
mov
out
pop
sbb
ret
mov
inc
aam
outs
and
pop
cmps
icebp
das
dec
mov
out
inc
cmps
in
xchg
or
inc
xlat
call
push
pop
pop
or
jne
mov
inc
enter
pushf
jge
(bad)
movs
push
add
lds
in
int
(bad)
repnz
sub
popf
movs
pop
push
loopne
push
xchg
daa
push
xor
mov
int
jnp
mov
repz
mov
add
pop
jmp
or
not
ss
add
jp
enter
push
shl
imul
pop
nop
push
push
fs
movs
cmp
add
mov
ficomp
popa
and
add
and
sbb
sub
pop
push
fadd
push
popf
div
jno
adc
and
repz
lds
jns
pop
push
(bad)
iret
sbb
in
pop
cld
cmps
dec
pop
rol
fsubr
(bad)
mov
test
jle
mov
lahf
pop
sbb
adc
xor
and
addr16
mov
fstp
sbb
fdiv
jl
cmps
adc
repz
out
movs
movs
push
pop
sbb
sub
push
jle
mov
sbb
sub
cwde
je
mov
in
mov
and
mov
clc
xor
jl
mov
call
jg
xchg
in
inc
push
mov
sub
add
add
mov
fwait
push
sub
ins
ror
scas
shl
cmp
ja
popa
call
fcmovbe
jb
movs
adc
sub
js
adc
ret
ss
hlt
sub
test
lock
les
push
sbb
shl
(bad)
bound
mov
rep
adc
cmp
movs
jbe
lods
push
inc
jmp
cmc
pop
es
fmul
in
fs
xor
cmp
popf
dec
cs
movs
(bad)
push
sbb
jp
adc
popa
bound
rol
bound
mul
add
rcr
or
sub
mov
dec
mov
outs
or
enter
(bad)
pop
xchg
outs
push
int3
movs
cmp
aas
or
adc
dec
jmp
adc
adc
pop
ins
sbb
xor
shl
sub
xchg
stos
add
or
loopne
les
mov
pop
xor
neg
sub
test
inc
push
daa
sbb
popa
dec
lea
push
jecxz
jae
in
(bad)
push
inc
(bad)
fidiv
(bad)
push
mov
mov
ja
inc
push
lods
cld
(bad)
mov
gs
mov
sar
ds
xlat
lahf
pop
jnp
or
out
sahf
or
sbb
out
xchg
shl
add
scas
mov
add
into
add
and
and
les
repnz
cmp
inc
inc
fwait
fwait
sbb
pop
aas
ffreep
push
sbb
push
mov
push
cmps
dec
pop
mov
sub
mov
and
xchg
std
fst
dec
pop
jmp
xor
jmp
dec
mov
scas
lea
push
addr16
cmp
adc
xor
inc
dec
cmc
das
es
(bad)
pusha
push
push
test
fdivr
adc
jmp
aas
add
imul
jbe
jno
jns
jl
xor
pushf
pushf
(bad)
call
fsubr
sbb
scas
out
push
pusha
jns
mov
adc
and
addr16
mov
inc
hlt
jne
xchg
jne
push
mov
jmp
dec
fs
in
xor
and
xor
sbb
ja
sub
dec
dec
cli
call
test
fmul
shl
jne
pushf
dec
jne
leave
cld
fild
xchg
cmps
sbb
iret
cs
ds
out
repz
out
jecxz
movs
push
sahf
das
into
sub
push
nop
add
hlt
mov
push
data16
pop
cmc
pop
lods
int
es
ds
dec
hlt
jmp
xor
mov
repz
lea
push
sbb
sbb
gs
sbb
retf
xchg
aad
cs
or
push
xchg
cmp
push
xor
push
in
call
xchg
lds
dec
in
scas
pusha
jo
xlat
out
adc
aam
inc
cmp
dec
(bad)
gs
pop
mov
sbb
(bad)
ins
call
dec
inc
jne
div
xor
xchg
mov
mov
jl
lods
mov
pop
adc
adc
jmp
cli
xor
in
ins
push
out
jmp
in
mov
xchg
mov
push
mov
dec
sahf
cmp
mov
or
es
add
scas
rcl
mov
adc
mov
fdivrp
push
add
fistp
and
dec
jmp
and
mov
mov
jbe
inc
lods
inc
mov
push
aam
inc
fbstp
(bad)
ins
fwait
dec
jne
add
fldenv
pop
jbe
addr16
xlat
push
repnz
dec
or
icebp
xchg
push
(bad)
aad
and
icebp
jae
or
xor
xlat
mov
idiv
add
mov
fistp
and
and
xor
mov
jmp
scas
sbb
xor
jl
push
dec
sbb
push
(bad)
aam
add
jae
lods
xchg
test
add
or
adc
rep
cld
push
daa
or
outs
push
mov
ins
fld
mov
scas
or
and
jno
dec
sbb
mov
add
jge
push
shl
xchg
outs
push
jae
ins
dec
xor
push
xor
mov
rol
pop
mov
mov
add
aad
mov
or
fnsave
mov
adc
sub
pushf
les
mov
xchg
out
add
sub
or
iret
or
pop
sub
stos
pop
aam
pop
xor
mov
xchg
(bad)
or
jecxz
out
(bad)
and
pop
inc
loope
(bad)
jb
or
xchg
repnz
xor
sti
cmp
movs
div
cdq
call
je
add
imul
sub
push
(bad)
xor
adc
or
jmp
mov
mov
jno
sqrtps
cmp
push
loope
xchg
popf
or
lea
cmc
xor
in
xlat
test
pop
dec
in
push
cmp
(bad)
lock
fdivrp
dec
dec
mov
imul
xor
test
push
ja
test
popa
mov
jp
out
push
and
and
mov
mov
pop
xchg
(bad)
sahf
adc
jbe
push
add
scas
push
ret
stos
scas
inc
pop
mov
clc
lahf
adc
mov
mov
loope
dec
iret
inc
ficomp
rol
bound
call
inc
popa
pop
add
cmc
cdq
pusha
xor
lds
xlat
nop
xchg
push
repnz
in
adc
xlat
hlt
xchg
xor
mov
pop
push
clc
mov
cdq
jns
iret
stos
loop
int
xchg
(bad)
in
dec
inc
pcmpgtb
dec
jp
inc
outs
adc
sbb
(bad)
and
shr
xlat
test
mov
push
xchg
jmp
xor
mov
push
ja
cmp
jne
(bad)
pop
xchg
sub
cli
mov
shr
push
or
js
push
or
aad
fmul
mov
mov
jmp
out
mov
outs
(bad)
std
xlat
frstor
xor
cmp
shr
ins
xor
ins
in
retf
jg
xchg
test
retf
push
cmp
jne
popa
xor
jg
sub
fldcw
xor
dec
pusha
push
xchg
rol
mov
adc
dec
fs
arpl
mov
jns
add
and
loope
rep
xchg
add
cmp
leave
mov
in
and
push
(bad)
xor
xchg
inc
pushf
ret
mov
int
stos
jae
jnp
dec
cld
sub
sbb
dec
add
daa
xchg
cdq
test
dec
jo
inc
stc
adc
ja
sub
push
or
retf
cs
mov
into
imul
sub
inc
jns
sub
sub
xor
out
sub
lds
xor
dec
shr
mov
int3
jb
out
or
stos
movs
jne
xor
cmp
mov
inc
mov
xchg
xor
(bad)
mov
aam
nop
cdq
hlt
ret
push
fiadd
scas
sahf
jg
sub
dec
push
pop
or
push
pop
(bad)
and
xchg
test
movs
sbb
sub
in
movs
pop
inc
shr
not
mov
xchg
aaa
push
imul
fwait
xchg
shl
push
sub
sub
repz
cmps
(bad)
mov
loop
push
pop
js
pop
inc
lahf
(bad)
popf
jg
sbb
jb
ins
inc
je
outs
popf
repz
cmp
js
sbb
out
mov
fist
xchg
ret
adc
jno
inc
mov
popa
push
outs
lods
test
shl
adc
aam
dec
inc
mov
je
test
xchg
sar
mov
(bad)
outs
in
push
(bad)
ja
sub
inc
ins
retf
cld
jl
gs
sar
cmp
push
jge
das
mov
mov
(bad)
arpl
adc
das
cld
jmp
into
sub
mov
mov
fist
xchg
stos
xchg
sbb
push
mov
sti
jns
and
add
xor
mov
push
add
js
add
lds
pop
call
ret
int
lods
and
mov
add
xchg
repnz
push
lds
pop
inc
inc
test
(bad)
inc
adc
and
arpl
popa
or
ret
cmps
(bad)
call
mov
shl
neg
bound
cdq
push
jecxz
mov
ret
aaa
inc
xor
xchg
ins
xchg
loopne
dec
dec
sbb
out
sub
ds
js
push
mov
inc
pop
gs
fwait
dec
pop
adc
cmp
in
mov
mov
mov
aaa
ins
imul
enter
popf
loop
repz
inc
adc
(bad)
es
adc
jl
gs
rol
jo
pop
pop
mov
xor
fmul
dec
sbb
aam
or
jmp
out
arpl
call
sbb
pop
loope
cs
sub
push
pushf
aad
scas
mov
push
mov
mov
neg
cmp
out
and
push
movs
xor
int3
fwait
or
xor
or
and
jge
clc
xor
(bad)
sar
test
out
jge
jo
jmp
pop
dec
mov
ins
sub
std
and
pop
push
sub
xchg
js
imul
mov
cmp
mov
cmp
sub
cmps
repz
sti
jb
dec
pop
repz
nop
xchg
(bad)
cdq
pop
jae
sbb
fucomp
add
aaa
xchg
test
icebp
or
fxch
pop
jge
adc
popf
mov
push
shl
inc
dec
scas
stc
pop
push
ss
repnz
or
retf
loop
gs
push
retf
ins
mov
ds
dec
and
dec
pop
rcr
jp
mov
adc
daa
dec
adc
ror
data16
outs
xor
call
or
loopne
xor
popa
clc
mov
sbb
outs
(bad)
cmp
loop
lods
popa
adc
out
sahf
xor
pop
or
push
add
cmp
outs
imul
out
adc
xchg
xor
jns
dec
xchg
loope
dec
shr
(bad)
xchg
hlt
call
xchg
out
or
and
stos
dec
pop
mov
xchg
jo
xchg
xchg
jo
sub
mov
xchg
sub
popa
jmp
jmp
shl
fwait
out
lods
call
ret
mov
hlt
retf
in
daa
nop
mov
int3
xor
and
inc
xor
popf
mov
fsubr
lea
ret
fild
pop
cmp
jbe
addr16
pop
push
jmp
mov
push
bound
inc
mov
mov
jge
std
outs
cmp
jle
mov
aad
add
mov
dec
stc
and
sub
clc
pop
jge
int
push
add
jo
stos
call
(bad)
mov
shl
mov
in
(bad)
jbe
nop
out
add
sub
dec
jl
bound
test
gs
xlat
dec
out
repnz
sbb
ficomp
mov
mov
or
xor
add
mov
jg
push
mov
mov
(bad)
shl
dec
scas
fs
shl
push
stos
or
retf
pop
pop
sbb
dec
inc
jecxz
add
ss
dec
call
sbb
pop
mov
pusha
jb
pushf
or
dec
jl
xchg
cmp
push
movs
jmp
push
ins
lock
jg
shr
dec
(bad)
enter
inc
push
enter
sbb
jne
adc
cld
leave
stos
es
mov
mov
(bad)
sbb
add
xor
push
add
les
push
xchg
in
(bad)
jo
jg
cs
mov
call
stc
xor
and
and
push
stos
adc
or
xor
adc
in
js
sbb
out
outs
xor
mov
pop
fldcw
dec
fidiv
dec
bound
inc
pop
dec
mov
adc
xor
xor
adc
sub
cmp
push
jbe
inc
xlat
fsub
push
in
push
push
cmp
(bad)
add
inc
xor
xor
fisubr
sbb
cdq
and
xchg
mov
or
add
sahf
int
lock
data16
pop
ret
and
les
adc
aas
mov
scas
jne
mov
dec
fisttp
enter
mov
nop
sbb
and
cld
enter
jmp
test
into
push
psrlw
int3
lods
or
pop
loop
clc
inc
or
ret
mov
pushf
sub
dec
inc
in
loop
fstp
out
inc
mul
jmp
mov
or
fwait
ins
outs
jp
dec
add
or
imul
fs
xor
pop
cmp
dec
jmp
pop
jl
cs
cmp
mov
cmps
mov
nop
es
push
(bad)
icebp
into
mov
add
pop
in
xchg
jecxz
aad
jbe
adc
push
fstp
jb
mov
jb
adc
loop
(bad)
push
call
dec
xchg
imul
fabs
aam
test
push
fdivr
clc
repz
sub
stos
in
sbb
xchg
loope
xlat
push
sub
xor
jo
jge
xchg
idiv
bound
shl
xchg
arpl
ins
out
in
mov
rol
ror
mov
mov
in
add
inc
pop
push
push
cmc
loopne
ss
or
call
mov
cld
loopne
std
sub
enter
dec
stos
movs
shr
outs
(bad)
jbe
fstp
leave
pop
push
xchg
pusha
xor
and
inc
aaa
cld
mov
xchg
cmps
or
and
ror
(bad)
jmp
or
fs
jns
xor
sbb
test
mov
test
mov
leave
xchg
jmp
or
js
js
test
pop
xor
sti
pop
icebp
in
sub
iret
inc
loope
or
cmovns
pop
and
jae
in
mov
mov
mov
iret
test
mov
scas
adc
les
outs
xchg
xchg
push
add
adc
adc
arpl
cmp
sbb
retf
mov
leave
mov
sbb
adc
mov
xor
clc
xlat
out
lahf
fsub
inc
imul
sub
jl
lea
xchg
push
fisttp
sub
sti
cmp
ja
and
jge
cli
sbb
push
jne
into
mov
xor
dec
je
add
mov
jecxz
inc
adc
in
scas
mov
in
inc
sti
sub
push
popf
and
and
or
pop
sub
pusha
lods
and
pop
aad
rcl
dec
sub
sbb
test
(bad)
mov
retf
hlt
adc
mov
(bad)
scas
cli
adc
stos
test
xchg
jns
pop
aad
imul
push
into
inc
xor
inc
and
test
push
mov
push
and
mov
xor
enter
in
and
retf
jbe
inc
ret
mov
ins
add
dec
(bad)
sahf
dec
cmp
inc
and
mov
xor
sub
cmp
sbb
xchg
pop
sub
ror
pop
mov
add
sbb
sbb
stc
mov
fsubr
mov
mov
mov
daa
jb
arpl
mov
jmp
sub
clc
add
mov
jg
jo
imul
in
data16
xchg
fild
call
or
pop
cmovge
xor
mov
adc
jge
sub
adc
pop
add
or
mov
or
mov
jmp
jo
and
loope
gs
icebp
adc
jl
in
cmp
mov
in
dec
iret
lods
sbb
sar
sub
enter
inc
sahf
out
sbb
or
push
sbb
mov
sar
dec
jnp
iret
sbb
sti
push
imul
mov
popa
cmps
mov
clc
jecxz
push
cmps
push
push
hlt
outs
call
xchg
sbb
clc
jno
clc
es
mov
ins
cs
je
stc
sub
pop
push
sbb
pop
fstp
jb
dec
or
xor
cmp
mov
xchg
pushf
fprem
ja
dec
and
mov
cmp
jnp
(bad)
push
cwde
and
ror
jle
ret
int
fs
ins
aad
xchg
sub
nop
fwait
sub
popa
mov
out
push
mov
push
push
xchg
push
inc
dec
or
arpl
popa
jg
xor
push
mov
adc
aas
xchg
xchg
xor
jmp
cmp
sbb
adc
stos
jg
xor
xchg
adc
dec
sbb
daa
and
hlt
push
jle
pop
mov
jae
mov
scas
cmp
pop
mov
mov
add
mov
pop
outs
mov
push
aad
stc
mov
sub
cmp
in
loopne
and
add
jno
mov
sub
jle
xchg
in
add
movs
ret
in
jns
jae
xchg
xchg
psubusw
daa
inc
dec
mov
(bad)
aad
push
rol
pop
lock
sbb
push
dec
sahf
cmps
mov
add
mov
aas
aam
dec
movs
cld
add
push
sub
push
outs
adc
dec
add
mov
daa
ins
sub
jle
mov
inc
sbb
sti
or
jp
add
xchg
pop
pushf
stos
xchg
nop
loope
pushf
xor
push
xchg
xor
mov
out
jo
retf
xor
jp
enter
push
xlat
dec
jmp
popa
cmc
stc
inc
sahf
jns
loop
das
lahf
xor
addr16
dec
jnp
mov
loop
xor
imul
xchg
retf
pop
repz
jmp
fcmove
mov
pop
(bad)
jb
add
lea
xor
pop
fild
test
add
dec
sub
nop
pop
inc
fs
sbb
mov
or
pop
jo
and
fwait
loopne
int
mov
pop
pop
and
xchg
test
jl
add
add
sbb
sbb
into
jg
jecxz
mov
adc
mov
xor
and
cmps
mov
ins
xchg
mov
cmp
ss
stc
push
ja
fs
hlt
lods
cmp
inc
in
adc
mov
popa
jg
test
pop
scas
scas
xchg
adc
adc
cdq
stos
inc
mov
xor
push
mov
cs
push
es
jle
repz
jp
cmp
jno
adc
add
and
sbb
jne
jmp
pop
stos
mov
sub
lock
call
push
jnp
(bad)
ins
ins
arpl
dec
shl
and
imul
mov
cli
cmp
in
arpl
mov
test
rol
mov
mov
cmp
jl
sub
fdivr
mov
xor
inc
push
mov
sub
in
sti
jo
or
std
add
push
xlat
(bad)
inc
and
movs
das
je
dec
mov
fldcw
js
xchg
cmp
(bad)
pop
or
icebp
loopne
fild
out
rcl
imul
push
ficomp
add
jno
pop
gs
sti
iret
mov
pop
dec
ret
or
sbb
sub
shl
xlat
or
lock
mov
js
mov
inc
pop
and
or
fwait
mov
inc
into
retf
adc
jo
aaa
mov
push
sub
gs
push
hlt
(bad)
xor
pop
jg
scas
push
out
adc
mov
lahf
ja
add
ins
cmp
mov
cwde
sbb
pop
push
std
jmp
pop
xchg
cld
lods
jns
and
(bad)
(bad)
xchg
push
jb
cmp
mov
sbb
inc
inc
nop
mov
cwde
cmps
enter
(bad)
xor
out
cli
stos
imul
scas
push
adc
xchg
jae
ffreep
lahf
xchg
adc
mov
jl
jl
test
sbb
lods
mov
adc
jg
sar
retf
sbb
cld
cdq
pop
shr
push
cmp
pop
and
and
dec
pop
test
jl
(bad)
xchg
sbb
push
popa
ins
pop
mov
sbb
sahf
xor
cmp
adc
(bad)
mov
or
fwait
dec
xchg
stos
outs
jl
js
idiv
inc
inc
pop
lods
xchg
sbb
out
pop
ficomp
(bad)
push
dec
shl
push
repnz
fist
push
out
jae
mov
xor
mov
push
jb
xchg
inc
fcom
outs
fadd
inc
mov
aam
cwde
jmp
xchg
mov
pop
test
push
push
gs
sub
add
cmp
mov
aas
repz
fwait
and
mov
adc
and
lahf
adc
cmps
ret
jg
xchg
jmp
iret
loopne
retf
je
stc
xchg
push
cmc
push
(bad)
fsubr
fst
(bad)
in
ds
mov
mov
imul
outs
cdq
fidivr
sahf
fcom
jnp
add
test
mov
and
sub
test
jle
dec
and
mov
sbb
repnz
sub
and
pushf
into
arpl
aam
push
cmc
arpl
sub
dec
jne
add
lahf
and
lods
jb
daa
imul
dec
icebp
(bad)
push
adc
pop
aam
xchg
xor
fidivr
test
call
repz
mov
inc
sub
push
xor
inc
test
loope
mov
xchg
cmps
cmp
movs
jns
enter
imul
adc
sti
push
out
sub
sahf
jecxz
clc
pop
(bad)
dec
and
inc
cmp
sub
mov
cmp
bound
aas
(bad)
xor
addr16
fcomp
xchg
push
mov
outs
loope
mov
mov
xor
push
inc
ja
dec
shr
sbb
or
jmp
adc
xchg
fmul
movs
cmp
sahf
je
xor
jo
adc
iret
in
hlt
popa
cmp
cmp
adc
add
lea
inc
inc
leave
hlt
dec
push
jno
push
adc
aas
add
mov
call
jbe
jle
mov
mov
push
pop
cmc
movs
cmps
dec
push
cdq
dec
jo
cmp
imul
pop
mov
imul
scas
ins
dec
fdivr
call
shl
jl
jl
xchg
test
ss
jge
mov
inc
or
int
retf
pop
cmp
sbb
arpl
mov
push
dec
mov
push
aam
dec
or
cld
fsubr
pop
fst
gs
push
scas
xor
pop
cdq
out
fwait
mov
cmp
push
dec
adc
cmp
leave
aas
mov
je
fmul
fadd
pop
mov
leave
loop
dec
(bad)
gs
int
psubsb
or
jg
sbb
sbb
inc
sbb
mov
sbb
adc
or
into
adc
leave
mov
addr16
adc
sub
in
sbb
fcmovb
fisubr
lds
mov
pushf
or
cli
icebp
retf
pop
pop
dec
pop
stc
xor
int3
clc
in
dec
cmp
into
jb
add
pop
mov
fisub
(bad)
dec
gs
or
mov
xor
fld
test
arpl
xchg
std
jae
iret
add
mov
lods
sub
mov
test
jnp
jmp
mov
add
adc
mov
mov
aad
loopne
retf
out
shr
lock
sti
and
sbb
fucomip
stc
push
fwait
sahf
repnz
and
lock
pop
cmp
push
lods
pusha
ss
test
push
lea
xor
or
adc
mov
push
sub
jae
out
sbb
rcl
mov
clc
cmp
dec
mov
outs
xchg
shr
mov
or
pop
mov
push
je
add
add
cmp
dec
fdiv
push
cmc
cli
adc
pop
je
fisttp
add
cwde
ror
dec
call
cmps
jbe
cmp
inc
call
lea
repz
inc
xor
hlt
adc
out
fidivr
icebp
int
push
aam
retf
push
idiv
(bad)
jae
xchg
sub
jae
cmp
push
sbb
fmul
ins
mov
sti
repnz
(bad)
or
jns
je
mov
mov
mov
push
sub
xchg
adc
push
mov
lods
iret
or
and
ret
and
in
mov
cwde
sub
shr
shr
(bad)
pop
push
loope
pop
je
inc
or
and
or
sbb
inc
mov
mov
xchg
(bad)
push
adc
mov
or
or
(bad)
in
dec
cmps
add
fld
aas
mov
aas
mov
cdq
arpl
pop
sbb
push
sub
mov
mov
ror
mov
call
dec
std
fwait
mov
jle
sahf
(bad)
mov
or
test
std
inc
or
imul
xor
test
stos
movzx
retf
and
mul
out
push
sar
dec
stos
mov
sbb
xchg
mov
stc
pop
or
jae
xchg
out
cdq
aas
dec
cmp
rcr
ss
js
bnd
jecxz
adc
repz
test
xor
cdq
(bad)
stc
test
or
aam
add
sub
or
lods
push
ret
call
push
mov
push
sub
js
xor
xor
inc
aad
test
mov
(bad)
loope
je
cmps
int
adc
shl
pusha
fbstp
cmp
sub
add
or
inc
ficomp
pop
lods
arpl
jecxz
cs
stos
shl
popf
dec
mov
gs
xor
mov
ja
cmp
or
xor
xor
test
pop
mov
fmulp
dec
(bad)
mov
push
cmc
test
add
shr
out
adc
inc
lahf
xchg
xchg
lea
xchg
mov
jb
and
sbb
xlat
inc
sahf
(bad)
mov
mov
leave
arpl
imul
sbb
rcl
pop
pop
imul
push
fdivr
sub
ins
rcr
lods
hlt
jbe
jae
or
(bad)
jmp
and
test
mov
sub
loop
stos
mov
sub
mov
and
ret
fcmovb
ins
jmp
fneni(8087
test
xchg
xor
repnz
rcl
cwde
add
push
cld
leave
fcmove
retf
lds
dec
movs
int
int
mov
adc
mov
sub
sbb
movs
mov
cs
or
fwait
pop
test
or
scas
pop
aaa
mov
mov
cs
jo
pop
lahf
imul
inc
test
mov
sub
or
imul
push
lock
dec
retf
xchg
xor
jo
(bad)
xlat
sbb
push
sbb
pusha
outs
mov
push
pop
outs
sbb
xor
jae
or
dec
lock
sbb
les
sbb
das
(bad)
in
mov
push
shr
stos
sti
movs
dec
add
xor
ficomp
jl
cmps
mov
pop
push
sbb
or
fcmovbe
dec
sub
ja
and
mov
pop
(bad)
mov
rol
mov
adc
call
fild
mov
sbb
hlt
mov
movlpd
fs
xchg
xor
out
pop
fild
mov
xchg
pop
addr16
ficomp
mov
(bad)
xchg
test
inc
adc
daa
mov
shl
int3
imul
cmp
fdivr
inc
sub
(bad)
push
mov
js
inc
cmps
pop
cmp
jns
popf
and
xchg
xchg
inc
adc
stos
fs
jne
adc
paddd
mov
xchg
jmp
or
in
or
pop
out
xchg
jmp
in
aaa
cs
imul
jmp
std
lahf
loop
neg
mov
inc
sbb
add
sub
es
xor
(bad)
mov
mov
push
retf
sbb
pushf
js
mov
retf
mov
outs
loopne
add
xchg
cdq
cs
jg
ins
push
test
xor
daa
stc
xlat
pop
xchg
lods
add
mov
es
das
push
test
mov
or
jp
xchg
lock
nop
into
test
bound
dec
rcr
sbb
mov
ficomp
jo
in
inc
clc
popf
leave
mov
in
ror
mov
pop
push
push
sub
or
sub
xchg
add
push
(bad)
pop
xchg
mov
imul
jno
je
and
lock
jge
xor
(bad)
and
mov
dec
bound
mov
retf
cdq
aaa
data16
aam
aam
repnz
js
dec
fldenv
clc
inc
movs
cmps
xchg
and
sbb
in
cmp
daa
nop
cmp
sbb
into
cdq
pop
inc
in
aad
gs
ret
mov
outs
xchg
add
inc
stc
call
adc
pop
adc
add
popf
jae
imul
sub
fisub
outs
sbb
shl
cmp
xchg
retf
pusha
fisubr
cli
jl
adc
aas
push
stos
les
push
(bad)
out
(bad)
in
add
shl
es
jno
add
or
int
outs
outs
scas
pop
sub
pop
mov
ds
test
mov
push
jle
popf
push
out
adc
sub
inc
mov
(bad)
sub
dec
xor
je
movs
iret
imul
les
or
mov
mov
jo
mov
push
xlat
in
aaa
dec
call
sbb
(bad)
iret
mov
push
in
ja
cwde
das
aam
xor
mov
test
in
test
(bad)
stc
sbb
loop
pop
add
sbb
mov
cmp
js
loopne
pop
xor
std
enter
popf
xor
xor
mov
retf
shl
push
pop
fistp
xchg
inc
xchg
pop
outs
retf
push
pop
cmp
ret
shl
fwait
inc
jnp
(bad)
ss
pop
pop
ja
mov
loope
cmp
inc
movs
pop
jg
cwde
push
arpl
push
adc
add
addr16
sub
or
sahf
bound
out
mov
jo
cli
outs
fst
sbb
outs
gs
into
xlat
std
jae
sub
add
test
loope
dec
xchg
movs
ds
inc
mov
push
test
outs
mov
pop
add
xlat
inc
xor
rcl
clc
cs
clc
mov
and
cli
repnz
sbb
imul
add
popf
xchg
dec
fidiv
jl
inc
pop
gs
sub
ret
test
jns
mov
pop
lods
ror
(bad)
sar
lods
idiv
hlt
das
add
adc
retf
adc
pushf
dec
xchg
inc
inc
xlat
shl
scas
dec
xchg
mov
fistp
xchg
dec
addr16
pop
mov
mov
popf
inc
mov
imul
jl
inc
mov
adc
pop
pop
add
jo
stos
cld
jecxz
add
add
stc
popf
jae
jne
push
scas
and
jbe
inc
xor
loop
leave
ret
xchg
int3
dec
jb
sar
ds
out
cwde
loopne
loop
or
and
mov
adc
or
hlt
push
out
mov
mov
(bad)
outs
not
pushfw
pushf
daa
xchg
daa
cli
daa
(bad)
lods
pop
mov
js
dec
pop
idiv
or
sub
je
push
xor
mov
idiv
ret
popa
jns
add
mov
mov
xchg
(bad)
push
nop
rcl
mov
mov
inc
xchg
push
adc
mov
sub
std
fcos
adc
push
push
lods
push
mov
jne
and
sbb
xchg
(bad)
lahf
mov
(bad)
jmp
lds
cmps
int
lods
scas
xchg
inc
shl
rcl
ret
and
pop
idiv
lods
in
fwait
xor
xchg
popa
xchg
cmc
retf
and
adc
and
int3
fst
adc
dec
cmp
(bad)
adc
outs
mov
sub
test
sub
dec
mov
push
cmps
and
imul
dec
jmp
inc
aad
mul
add
mov
or
inc
adc
cmp
xor
daa
adc
and
fnop
cmp
pop
fwait
je
repnz
mov
cmp
mov
xchg
or
mov
ficom
xchg
pop
ds
repz
sub
mov
je
test
loopne
adc
inc
pushf
in
sahf
in
pop
cmc
pop
lock
jp
inc
dec
push
call
mov
and
popa
imul
cmp
jl
push
(bad)
inc
add
mov
mov
lea
inc
push
rcr
es
jl
fistp
cld
dec
shl
push
in
sahf
retf
mov
xchg
jnp
push
pusha
sar
jecxz
push
int
xchg
sub
jbe
ss
mov
mov
cmp
sbb
jp
mov
jg
inc
pop
out
add
std
xchg
not
ror
call
in
fdiv
jmp
(bad)
repz
nop
dec
dec
or
pop
mov
jo
or
mov
pop
fst
push
hlt
test
inc
mov
sub
push
sbb
sub
ret
leave
vpavgw
dec
movs
jnp
pop
movs
xor
ret
adc
ss
in
cmps
inc
ja
mov
cmp
push
xor
sbb
pop
mov
pushf
lods
shl
xor
inc
mov
jge
pop
leave
fistp
cli
xor
xor
mov
xchg
ins
lds
and
push
lock
dec
add
xchg
fxtract
cld
cmp
fld
(bad)
xchg
jl
mov
xor
inc
dec
and
mov
xchg
jnp
mov
cmps
(bad)
xlat
cmps
jnp
add
or
out
rcl
pop
scas
mov
aaa
jl
xchg
test
xor
fsubr
mov
ss
sub
xchg
mov
or
push
mov
and
xchg
sbb
inc
cli
rcl
sti
xlat
xchg
dec
(bad)
scas
inc
cmp
test
ds
in
jmp
cld
inc
lds
cmp
mov
shl
es
push
pop
gs
leave
pop
(bad)
out
repnz
mov
pop
mov
aas
sub
clc
aam
adc
pop
enter
out
mov
xor
gs
xchg
sub
(bad)
dec
xchg
dec
test
cmp
je
xor
jne
jnp
jecxz
bound
cdq
sub
mov
fdivr
mov
shl
out
xchg
mov
mov
pusha
shr
and
inc
(bad)
(bad)
cmp
pop
mov
jns
bound
fiadd
jmp
dec
(bad)
out
hlt
out
cmp
js
pop
into
pop
repz
xchg
inc
xchg
rcr
mov
retf
or
mov
fld
push
adc
retf
in
dec
fidivr
repz
xchg
inc
push
mov
loop
call
jge
sub
sti
in
mov
std
xor
mov
cmp
js
movs
gs
mov
xchg
ror
icebp
jecxz
mov
test
cmps
cmp
sbb
inc
pop
imul
imul
int3
and
mov
sahf
sub
movs
imul
lock
ds
inc
mov
(bad)
mov
movs
add
lea
inc
into
jge
or
(bad)
cmp
mov
(bad)
jmp
sub
in
(bad)
jb
sub
cmc
push
cmp
ret
hlt
js
jmp
sub
data16
in
jle
cld
push
jo
mov
push
bound
mov
call
ret
push
inc
jp
mov
add
mov
cmp
push
or
fld
adc
(bad)
cwde
cmp
out
pop
push
scas
pop
(bad)
lock
add
movs
fst
xchg
mov
jmp
pop
call
and
in
mul
add
mov
cmp
inc
sahf
stc
loopne
bnd
sti
cmp
into
pushf
scas
fs
in
inc
or
dec
idiv
mov
mov
push
push
mov
ss
test
cs
mov
out
test
repz
push
popa
add
shl
push
xchg
jb
dec
and
fstp
sahf
pop
test
js
inc
iret
mov
adc
jp
sbb
in
adc
loop
pop
mov
jnp
retf
lock
jle
xabort
sbb
call
cs
adc
imul
out
mov
inc
mov
cmp
xor
jg
out
jmp
ret
stos
imul
mov
pop
push
sub
add
cs
cs
add
mov
cmps
cwde
dec
repz
(bad)
push
in
dec
addr16
out
fwait
jb
dec
xchg
pop
dec
xchg
xchg
add
xchg
jo
add
pusha
rcr
sbb
push
push
pusha
ins
addr16
out
scas
xor
sahf
adc
pop
shl
loope
out
lahf
and
adc
aas
fs
push
xchg
push
dec
add
cmp
mov
add
scas
out
dec
rcl
icebp
add
jl
mov
std
pushf
dec
sub
rcr
call
mov
shl
je
std
out
sbb
fwait
dec
mov
retf
or
cwde
shl
mov
ds
arpl
into
add
test
repz
adc
sub
inc
xchg
aaa
push
adc
aad
bound
jae
ficom
dec
nop
into
mov
add
imul
jnp
or
cmp
push
test
dec
pop
xor
jge
add
repz
pop
hlt
jmp
into
and
outs
jb
mov
pushfw
loope
dec
push
icebp
jne
repz
add
mov
and
loop
aas
fldln2
movs
shr
sbb
fimul
fidivr
mov
inc
and
pop
dec
int3
rcr
xor
stos
or
add
pop
mov
push
sbb
fmulp
add
(bad)
lea
pop
inc
mov
xchg
popf
in
cwde
ret
cmps
sub
push
in
add
sbb
push
or
test
icebp
stc
xor
xchg
fsubr
xor
call
and
jne
jle
mov
cmp
push
sub
xor
xlat
adc
push
jg
out
stos
es
and
xor
lods
fiadd
repz
jl
sbb
push
or
lahf
mov
test
bound
popf
jo
fcmovnbe
fnstcw
sub
inc
cmp
in
ficomp
jmp
(bad)
fs
mov
sbb
cmp
repnz
pop
mov
push
in
enter
or
js
xor
xor
sub
lahf
ss
push
and
in
repnz
inc
mov
pushf
mov
(bad)
aad
ret
aas
jae
repz
mov
je
inc
xchg
sar
dec
cmp
dec
jecxz
jecxz
cmp
sbb
pusha
add
xchg
mov
out
cmp
pusha
add
mov
enter
test
dec
and
mov
nop
cmps
shr
cdq
popf
jo
pop
pop
cs
xchg
push
call
ds
enter
cmp
inc
pop
imul
mov
outs
cmp
into
cli
jp
mov
jle
not
jl
inc
retf
cmps
hlt
and
push
in
dec
inc
scas
push
mov
shl
in
mov
xor
daa
jnp
xor
pop
fstp
movs
add
(bad)
jg
in
lods
mov
cli
ds
pop
fsubr
or
xor
cmps
pusha
mov
and
or
xchg
mov
das
lods
outs
pop
lahf
adc
addr16
jno
mov
ds
imul
inc
into
jge
cmc
imul
and
aad
xlat
mov
mov
push
pusha
(bad)
xchg
jl
mov
add
cwde
xchg
and
dec
mov
dec
retf
repz
(bad)
mov
fs
mov
shr
movs
jbe
xchg
inc
pop
cmp
cmp
mov
in
jge
fadd
fidivr
fldenv
sub
mov
mov
(bad)
and
jmp
repnz
ins
popa
jp
pop
idiv
pop
stos
and
lods
mov
push
jle
(bad)
in
das
push
pushf
cwde
data16
(bad)
mov
rcr
jne
and
out
data16
fnsave
cmp
pop
cmp
push
outs
push
mov
outs
fs
sbb
(bad)
das
pop
pop
mov
stc
fisttp
imul
js
ret
cs
fwait
test
add
int3
mov
sub
jbe
cmp
ror
pop
xchg
push
mov
inc
push
xchg
stos
loop
lock
jmp
inc
mov
rcl
inc
xor
ret
mov
pushf
cli
cs
jnp
dec
push
and
mov
fist
mov
sbb
push
aam
add
pusha
jnp
repnz
aam
sbb
adc
adc
mov
xor
fstp
xor
sub
data16
jae
lock
cld
add
inc
dec
cmps
repnz
fimul
mov
aas
push
push
(bad)
movs
mov
push
retf
or
jns
sub
xor
add
sbb
gs
or
inc
cmp
leave
xor
add
adc
sbb
out
jns
xchg
jmp
clc
mov
pop
nop
sub
and
cmps
retf
or
dec
xor
and
adc
jne
sub
mov
jmpw
dec
pop
cli
cmc
retf
mov
mov
dec
lods
mov
pop
xchg
sbb
sbb
pusha
jns
cld
add
stc
dec
mov
ss
fiadd
inc
jo
push
ins
xor
mov
test
mov
pop
sub
push
popa
mov
int3
outs
push
mov
push
lods
add
push
jnp
(bad)
mov
mov
aad
cmp
shl
adc
outs
icebp
or
imul
xor
mov
ficom
call
retf
mov
jg
leave
and
gs
mov
mov
pop
jmp
pusha
cmp
sbb
cmp
mov
fst
dec
loope
xor
stc
cmc
jns
sub
call
cmp
std
pushf
std
add
xor
ret
mov
pop
cmp
outs
aad
or
jg
outs
push
lock
das
movs
icebp
dec
out
imul
gs
dec
xor
pop
pop
mov
cmc
and
ficomp
outs
adc
sbb
sbb
jae
sbb
ret
mov
out
lock
imul
out
sub
loope
jmp
adc
test
add
sbb
stos
gs
fist
outs
arpl
push
inc
push
je
cmp
jae
and
pop
inc
xchg
xchg
mov
add
add
dec
rcl
push
lea
adc
fwait
sbb
leave
mov
enter
add
cmp
mov
push
add
pushf
scas
in
inc
pop
test
imul
jl
push
mov
sbb
ins
ja
jno
jl
in
ds
mov
xchg
hlt
cmp
sbb
aam
popa
addr16
inc
xor
sub
in
and
and
and
or
js
xor
aad
mov
test
mov
fild
sti
sti
scas
mov
or
xchg
or
call
imul
fcmovu
xchg
fs
loop
dec
push
sub
std
frstor
into
fldcw
ss
cmp
retf
push
sub
jmp
movs
push
mov
test
adc
inc
inc
fistp
mov
and
xor
(bad)
xor
repz
sub
cli
jge
das
sbb
sub
dec
pop
xchg
je
mov
popf
sti
mov
pusha
and
popa
scas
push
jne
push
arpl
(bad)
in
test
icebp
cmp
push
arpl
mov
inc
ins
pop
pop
sub
outs
xor
lds
loop
sbb
ret
jmp
pcmpgtw
icebp
jno
push
imul
(bad)
retf
mov
aas
sahf
mov
cmps
pop
add
xchg
cli
push
xor
mov
push
mov
or
xchg
inc
mov
ins
add
mov
ror
jle
outs
(bad)
mov
mov
sbb
mov
mov
mov
scas
(bad)
icebp
data16
xor
stos
and
retf
scas
mov
int3
mov
mov
sub
sub
out
mul
dec
in
ss
sbb
mov
fild
fmul
xchg
ret
lahf
ret
cmp
test
nop
(bad)
repnz
fdivr
leave
cmc
xchg
jne
daa
repz
bound
cmc
add
dec
adc
popf
das
mov
std
pusha
rcr
add
mov
cmp
call
push
gs
retf
dec
cdq
jecxz
jne
lods
xchg
dec
mov
jg
imul
ss
lahf
or
and
rcl
(bad)
scas
sub
jo
pop
mov
stc
gs
cli
adc
ret
jge
fild
mov
ss
jnp
mov
xchg
movs
into
je
daa
imul
cmc
ret
sub
inc
dec
xor
add
inc
adc
dec
xor
repnz
ins
ins
rol
jecxz
in
aaa
arpl
in
cmc
xchg
or
add
dec
out
adc
sbb
cmc
mov
lock
sub
inc
scas
add
std
aad
arpl
push
dec
jmp
es
or
pop
mov
imul
jge
cmc
xlat
mov
adc
xchg
je
jae
jmp
sub
jge
and
nop
dec
mov
cld
loop
push
in
popa
dec
into
xchg
test
fcomp
xchg
lods
sub
jnp
iret
dec
jbe
adc
cli
(bad)
jmp
xchg
lods
add
into
xor
ins
int
jmp
repz
push
cld
dec
jmp
outs
shl
js
nop
inc
call
add
ins
cmp
popf
cmovno
pusha
in
fwait
loopne
in
(bad)
and
(bad)
aas
push
cmp
push
(bad)
in
push
mov
jecxz
lds
movs
sub
sub
cmc
pop
int3
jb
jo
adc
push
aaa
mov
cmp
mov
sti
push
out
fisubr
movs
gs
call
mov
mov
pop
and
push
xor
inc
lds
lods
xchg
push
jns
lock
iret
movs
jge
pop
mov
int
pop
cmp
xchg
sbb
ins
sbb
sub
push
jp
add
std
sbb
push
pop
xchg
imul
add
xchg
pop
mov
stc
and
xchg
mov
loopne
push
push
pop
aas
jbe
out
sub
or
pop
ror
sub
sbb
jno
(bad)
jmp
push
aaa
xor
jp
or
dec
xchg
jno
popf
dec
loope
imul
rol
aaa
fidivr
adc
add
or
das
jnp
xchg
jb
dec
sbb
mov
repz
or
movs
xor
fstp
xor
inc
xchg
push
gs
mov
cmps
add
pusha
lods
adc
push
mov
cmp
jp
push
pop
and
shl
push
and
out
test
push
pop
sub
(bad)
in
mov
sub
inc
dec
or
cmp
ins
ins
mov
jo
and
mov
mov
mov
and
lock
push
(bad)
sbb
call
sbb
(bad)
xchg
lods
mov
pop
mov
imul
jl
mov
xchg
inc
sbb
(bad)
pop
pop
sar
inc
xchg
mov
dec
fmul
(bad)
leave
ja
and
mov
stos
icebp
jae
mov
push
or
das
scas
movs
fdiv
jae
adc
jno
xchg
inc
call
in
mov
xchg
mov
(bad)
daa
cmp
aaa
stos
loope
push
lea
pop
xchg
ja
ins
mov
sbb
call
repnz
cmp
gs
inc
mov
push
inc
mov
icebp
(bad)
test
pop
mov
mov
imul
add
adc
cwde
in
ja
inc
(bad)
push
(bad)
mov
mul
std
std
add
add
cwde
cld
add
jl
lds
fcomip
retf
xchg
mov
hlt
outs
mov
(bad)
(bad)
pop
push
test
mov
retf
stos
dec
xchg
(bad)
fstp
sub
jns
xchg
(bad)
xchg
fwait
cwde
sbb
out
nop
sub
mov
sbb
(bad)
jne
ret
mov
jl
fwait
mov
cdq
popf
and
mov
or
sahf
adc
and
cld
dec
(bad)
not
and
shl
dec
fnstsw
cmp
loop
dec
loope
fwait
imul
mov
call
mov
jae
ror
cmp
icebp
mov
mov
lea
int3
jb
lock
mov
mov
add
leave
in
jns
mov
mov
mov
dec
in
pop
aaa
aas
(bad)
and
xor
les
mov
and
xchg
push
mov
mov
and
inc
jne
ret
div
mov
(bad)
fiadd
aam
mov
sar
and
fstp
cli
cmp
fs
and
ja
adc
scas
movs
mov
and
jno
movs
sub
sahf
mov
pusha
cmp
mov
hlt
sub
rcr
push
inc
sub
sbb
scas
call
jne
fld
push
out
sbb
mov
and
int
and
dec
adc
add
push
arpl
test
jae
cmp
dec
(bad)
lahf
jmp
xlat
or
and
sbb
rcr
shl
cmps
mov
jmp
pop
or
sbb
dec
pop
sub
cdq
dec
nop
xchg
jne
retf
jge
aaa
mov
jbe
(bad)
xchg
sti
cli
push
ja
mov
or
or
push
mov
xchg
mov
aas
dec
jg
cdq
xchg
clc
cmc
sub
jle
mov
push
sbb
add
mov
push
sbb
inc
cmp
sahf
cmp
inc
push
nop
mov
push
aas
xor
bound
lock
mov
ficom
dec
dec
mov
adc
mov
mov
js
add
xor
sbb
sub
stos
mul
and
push
aaa
and
fwait
add
(bad)
fs
pushf
dec
jae
ss
mov
retf
scas
push
fild
aad
test
add
pop
fistp
sbb
scas
in
dec
cdq
inc
call
movs
in
popa
xchg
adc
ins
jns
sbb
jle
fcom
xor
inc
adc
adc
fisub
cdq
push
xlat
mov
popa
xlat
into
pop
stos
(bad)
adc
cld
ja
addr16
(bad)
sub
nop
xor
fstp
movs
mov
mov
loope
xor
xchg
pop
jmp
or
in
jle
or
retf
jmp
retf
pusha
in
cmp
add
mov
popf
cmp
clc
cmc
lods
mov
movs
add
and
and
mov
ret
cs
push
nop
mov
push
add
xor
push
push
pop
stos
or
and
lahf
xchg
fild
pop
mov
jge
jmp
fprem
in
push
ret
jg
and
sub
scas
or
sub
xchg
lea
(bad)
iret
mov
imul
out
mov
ror
dec
xor
test
js
outs
(bad)
(bad)
fnstenv
mov
out
jbe
inc
xlat
rcr
ffree
icebp
jle
lods
and
pop
sbb
or
rep
push
ret
addr16
stos
pop
mov
cmp
mov
cld
pop
aaa
sub
jmp
aaa
ror
rol
ret
popa
pop
call
fcomp
cmp
inc
xor
pusha
lock
(bad)
bound
push
xor
mov
into
or
sub
into
scas
sbb
mov
adc
or
mov
sub
xchg
pop
dec
jmp
jo
push
pop
les
in
and
ficom
push
dec
js
mov
mov
mov
inc
ss
out
and
inc
push
aas
xor
xchg
test
or
test
jno
retf
icebp
sub
dec
sub
push
dec
ds
cmp
mov
aad
pop
stos
es
xor
adc
mov
jne
hlt
xchg
fmul
xchg
sbb
xchg
ret
xchg
or
mov
sub
cmp
es
(bad)
sub
push
sti
arpl
pop
jmp
mov
adc
sti
shl
popf
jnp
add
aam
adc
mov
cmp
ins
mov
(bad)
dec
inc
mov
enter
repz
rol
mov
cmp
bound
cmp
arpl
fmul
fmul
xor
dec
xchg
xchg
jne
or
pushf
das
pop
inc
sub
int3
retf
fisub
pop
sbb
(bad)
out
mov
pushf
lods
dec
cmp
(bad)
mov
mov
test
push
xchg
push
inc
(bad)
je
loope
out
out
inc
mov
fs
stc
xchg
push
push
inc
cmc
dec
mov
retf
inc
cmp
and
inc
enter
call
(bad)
(bad)
sbb
inc
test
les
push
xlat
fist
mov
jae
or
les
mov
or
and
sbb
xor
push
lahf
or
mov
ja
in
je
mov
dec
vpaddw
mov
xchg
adc
(bad)
push
adc
paddw
jae
lahf
adc
xchg
mov
ret
(bad)
mov
add
cmp
xchg
les
mov
addr16
in
jge
sbb
mov
or
cmp
adc
xor
arpl
and
gs
je
dec
lods
xchg
movs
lock
xor
ja
fldenv
xchg
pop
jnp
or
loop
inc
sub
std
sub
cmps
fcomp
repz
sbb
pop
add
dec
outs
jb
sbb
mov
xor
call
cmp
ins
pop
mov
arpl
inc
jns
push
mov
sbb
dec
and
mov
pop
(bad)
cdq
and
ins
or
add
xchg
repz
xor
inc
xchg
mov
pushf
ins
cmps
test
psllw
add
sub
pop
das
push
int
movs
jmp
sub
not
hlt
pop
mov
sub
add
add
pushf
xor
cmp
retf
outs
mov
cwde
and
jmp
cli
popf
bound
sub
stos
div
push
fnstcw
cdq
icebp
mov
mov
outs
repnz
pop
sbb
imul
xchg
cmp
xchg
jae
pop
retf
popw
xchg
mov
imul
adc
scas
jbe
fdiv
cdq
jl
or
and
dec
fld
add
dec
dec
jns
xchg
ss
and
inc
cmp
dec
mov
jnp
or
scas
inc
xchg
add
test
inc
xor
test
mov
push
jb
ins
xor
cwde
mov
(bad)
fcmove
push
jmp
cmp
push
jecxz
arpl
loopne
pop
mov
leave
push
jmp
inc
popf
xor
add
push
jnp
push
adc
fwait
outs
test
popa
jb
mov
repz
push
sub
lods
jmp
in
jno
cwde
pushf
(bad)
loopne
inc
sub
retf
in
int3
shr
mov
sbb
and
sahf
xchg
pop
or
mov
fmul
xchg
mov
push
aad
nop
imul
test
sbb
(bad)
mov
lahf
xor
mov
inc
ins
mov
sbb
outs
xor
cmp
inc
jns
push
daa
inc
mov
ins
and
jmp
mov
loope
cmps
and
mov
jbe
mul
(bad)
adc
mov
out
rol
ss
mov
mov
fidiv
movs
xchg
int3
out
mov
scas
adc
adc
jmp
shr
stos
mov
push
and
test
inc
les
icebp
rol
jno
mov
cdq
dec
loopne
test
call
adc
mov
mov
pusha
mov
cmc
mov
sub
je
mov
adc
xor
dec
mov
jb
mov
adc
cmp
aaa
iret
and
lods
stos
dec
cld
add
les
and
jne
daa
sub
pop
loop
mov
sbb
retf
inc
cdq
add
jmp
int
xchg
leave
ins
retf
push
inc
jbe
jmp
loop
pushf
push
xor
mov
pop
adc
dec
loop
xor
jp
cmp
push
jb
ins
dec
dec
ss
xchg
imul
sahf
mov
push
ja
je
int
loope
pusha
push
inc
cmp
cmps
mov
sbb
sar
or
imul
call
not
aad
sti
push
push
test
xchg
add
inc
call
mov
inc
mov
rcl
xchg
rcl
in
rcl
pushf
sub
inc
sahf
fs
dec
mov
or
push
gs
(bad)
mov
jbe
aaa
jno
push
sub
movq
movs
adc
sbb
test
imul
xor
mov
add
fcmovnb
call
test
xlat
pushf
lds
mov
pop
sbb
je
repnz
pop
stos
hlt
(bad)
jns
mov
aas
push
fwait
inc
addr16
std
fistp
mov
pushf
mov
sbb
pop
js
push
or
fldz
inc
pop
adc
pop
or
pop
imul
jp
mov
(bad)
cld
jnp
arpl
fstp
outs
call
sub
les
or
ret
xchg
jl
pop
outs
jo
cmp
inc
mov
xor
imul
pop
lds
push
add
mov
or
bound
add
adc
pop
(bad)
sbb
out
lock
comiss
lea
push
sub
jl
xor
ret
nop
lods
out
mov
ret
pushw
pop
sub
cwde
loopne
push
add
or
sti
xor
push
rol
jl
fs
mul
and
sub
das
jmp
jnp
pop
mov
push
xor
clc
cld
push
and
stos
xor
add
and
lods
clc
sub
mov
sti
pop
xor
cmp
adc
in
push
test
(bad)
mov
xchg
out
int3
mov
call
jp
pop
jmp
adc
(bad)
pop
fmul
sbb
ja
les
mov
mov
mov
(bad)
mov
mov
cmps
(bad)
stos
xor
aaa
rol
jne
inc
jmp
rol
fdiv
in
popa
sub
push
ja
movs
add
out
je
das
lods
imul
inc
aam
jmp
or
xchg
sub
adc
out
imul
mov
aas
mov
sub
pop
lds
push
fs
seto
jne
xchg
xchg
cmps
xchg
lea
and
aas
pop
ins
(bad)
inc
dec
mov
rcl
adc
push
ins
mov
js
mov
ins
outs
pusha
cmc
sbb
adc
cmp
mov
test
ds
fist
out
pop
loop
cmp
add
or
mov
js
push
cmps
inc
cmps
out
retf
std
add
in
mov
sti
sub
rcl
push
icebp
loopne
and
aad
sbb
pushf
inc
out
es
mov
cmp
daa
fxrstor
and
sub
aaa
leave
and
jnp
shr
retf
mov
xchg
push
jl
repnz
ret
sub
call
mov
pushf
push
mov
sub
nop
das
sti
ds
nop
jmp
xor
jl
imul
sub
int3
loope
xor
sti
fistp
mov
inc
xchg
jnp
pop
lea
test
inc
stc
jecxz
sub
and
add
inc
pop
out
xchg
mov
out
mov
rol
ffree
inc
or
pop
inc
ja
stos
mov
rcl
sub
xchg
sbb
xchg
fcomp
mov
out
ja
daa
pop
fistp
outs
xchg
jmp
test
repz
mov
or
inc
cmc
mov
xor
jo
xchg
fisub
(bad)
lods
pop
mov
adc
inc
aam
std
pop
ret
cld
mov
adc
mov
jecxz
fidiv
jmp
xor
and
xchg
xor
mov
pop
inc
hlt
repz
xor
adc
loope
mov
add
sbb
hlt
int3
xchg
push
cmps
mov
mov
icebp
mov
jmp
ficomp
sub
sbb
push
shr
or
mov
cdq
es
cmp
mov
mov
pop
les
jne
(bad)
leave
pop
dec
shl
lahf
sub
icebp
les
ds
mov
cmps
fdivr
in
jne
add
pop
in
sbb
mov
add
cmp
xor
gs
push
shr
stc
push
dec
mov
sub
repz
loope
adc
test
push
nop
xchg
daa
or
int
retf
pop
ins
clc
push
int3
jle
mov
pop
aad
out
sub
adc
pop
sub
sti
iret
jmp
xchg
pop
xchg
push
jne
mov
mov
mov
arpl
dec
mov
or
inc
jbe
sti
and
std
xor
mov
and
in
neg
call
cmc
mov
or
loop
jb
popf
inc
jle
mov
stos
(bad)
add
jmp
sahf
sbb
shl
mov
cmp
(bad)
int3
cmp
mov
jo
or
xchg
jae
sub
out
mov
leave
fsubr
les
fld
test
and
add
shl
dec
movs
lock
aad
mov
dec
dec
xchg
mov
ret
xchg
movs
xchg
scas
fwait
dec
push
inc
add
fisub
ds
and
(bad)
fisttp
fsubr
call
push
sbb
sub
mov
pop
ja
fadd
dec
mov
mov
push
or
inc
ja
imul
xchg
jmp
cmps
cs
std
and
mov
jg
mov
xlat
adc
aas
rcr
and
mov
popa
pusha
(bad)
pop
test
lea
hlt
lahf
pop
sub
or
es
sub
mov
jno
jo
pop
jp
movs
stos
test
mov
add
push
fdivr
sbb
lea
sbb
mov
mov
adc
push
aas
lods
fs
int
xchg
push
jmp
pop
bound
(bad)
fnstsw
xor
jp
leave
add
test
popa
fiadd
mov
ins
into
sub
mov
mov
fild
jmp
add
sub
dec
addr16
shl
and
out
cmc
and
icebp
or
mov
mov
sbb
mov
repz
cmc
sti
dec
dec
je
xor
add
jl
and
push
inc
pop
(bad)
adc
(bad)
int3
mov
mov
int3
mov
sbb
call
mov
clc
enter
leave
sbb
lods
test
mov
gs
mov
xchg
shr
dec
sti
ss
and
push
cmp
outs
ficomp
push
mov
pop
adc
xor
aam
mov
and
fs
jae
nop
fisubr
cmp
int3
push
xor
dec
sub
ja
(bad)
fcomp
jp
pushf
out
jmp
cmp
ror
ds
fisttp
test
int3
(bad)
xlat
leave
sub
and
sbb
mov
stos
lods
add
dec
push
js
(bad)
xchg
js
fdivr
outs
cli
ror
imul
icebp
sbb
idiv
and
sub
sub
call
pop
and
cmp
les
mov
rcr
sar
pop
idiv
sbb
(bad)
stc
aas
pop
jnp
outs
mov
enter
repz
and
jecxz
cmc
xor
jns
mov
adc
test
jnp
ja
ror
stos
fwait
mov
add
gs
dec
cmps
retf
jg
int
adc
jb
jnp
test
add
movs
adc
adc
dec
mov
(bad)
fcomp
jnp
add
adc
cmp
std
test
jmp
test
das
inc
sbb
rcr
xchg
outs
jb
lea
fdivp
mov
mov
pop
sbb
fs
es
ins
std
int
sti
lods
mov
jae
jae
inc
ficom
ss
sbb
add
pop
sbb
daa
out
test
cdq
or
pop
add
jb
pop
sub
popa
xchg
jecxz
inc
add
xor
push
mov
xor
adc
div
shl
add
(bad)
xor
call
xchg
cmp
int
les
mov
out
mov
mov
ins
dec
cli
pop
and
pusha
outs
mov
push
and
add
jp
outs
(bad)
retf
ret
mov
jecxz
pop
dec
push
inc
cmps
(bad)
jo
in
fcmovnu
pop
jo
jmp
cmp
xchg
adc
cld
xchg
jno
rcl
mov
xor
call
imul
xor
xor
lds
repnz
mov
xor
fsub
add
lods
add
js
push
push
clc
outs
cmp
ss
pop
jns
out
jb
shr
test
push
ins
cs
and
icebp
xchg
inc
or
and
xchg
sub
jmp
mov
inc
cmp
ss
stc
and
dec
xor
popf
in
in
jle
lock
loop
mov
hlt
mov
pop
pop
call
push
mov
stc
pop
sbb
outs
sbb
fsubr
pusha
and
sti
xchg
push
cmc
sub
and
stos
xor
push
or
mov
and
mov
jp
test
retf
ror
outs
sbb
adc
dec
pop
loop
xchg
and
in
sub
je
mov
mov
mov
pop
cli
movs
pushf
xchg
and
sbb
xor
call
rol
jle
cli
mov
je
jle
daa
push
xchg
xlat
in
jmp
loop
push
dec
mov
and
popa
lahf
inc
add
mov
call
sub
into
(bad)
std
aas
test
dec
cmps
sub
(bad)
mov
retf
jne
xchg
and
xchg
test
pop
jge
jo
xor
jbe
fisub
push
mov
les
outs
fstp
push
sub
push
pop
in
pop
add
mov
and
mov
(bad)
out
int3
jne
inc
icebp
cmp
std
mov
cmps
inc
pop
rcr
ja
push
enter
xchg
(bad)
(bad)
sbb
das
pop
movs
repnz
xor
sar
adc
ficomp
call
add
jno
shl
pushf
sbb
scas
aam
repz
mov
mov
fwait
push
fcomp
les
mov
inc
adc
mov
pusha
fmul
lods
mov
inc
(bad)
cmp
int3
mov
push
popa
loop
sub
inc
push
dec
adc
stos
xchg
hlt
xor
xchg
ins
push
or
or
dec
daa
aad
in
bound
popf
mov
shl
mov
sbb
scas
sbb
sbb
dec
fmul
mov
cmp
mov
call
sar
dec
sub
rcl
xor
test
das
and
jmp
arpl
jle
pop
or
jl
shl
sbb
sub
or
call
xor
aas
clc
xchg
xor
or
jbe
add
mov
jmp
leave
cmps
into
scas
mov
xor
fst
mov
add
push
adc
dec
daa
jp
push
retf
sar
jne
sbb
nop
push
call
leave
dec
xchg
inc
sub
retf
in
enter
mov
pop
ins
popf
rcr
cdq
aad
adc
loopne
jne
inc
mov
add
inc
add
(bad)
xchg
xor
dec
mov
add
jmp
(bad)
inc
inc
or
scas
test
mov
stos
xchg
cmp
dec
push
int
test
shr
or
retf
cmp
ds
lea
adc
fwait
loope
cmps
outs
popf
xor
outs
popa
mov
fwait
mov
mov
movs
push
xchg
and
cmp
xchg
pop
shl
or
shl
stc
int3
xor
jl
cs
push
jb
inc
ret
cdq
fs
inc
cmc
jp
(bad)
in
xor
jmp
mov
out
retf
mov
sub
xor
mov
mov
loop
or
cmps
sub
adc
out
xlat
das
inc
fsubr
jae
push
gs
jmp
and
jb
add
xor
neg
jnp
mov
and
(bad)
xor
sti
push
push
adc
sahf
jbe
pop
dec
mov
sbb
stos
in
jmp
test
or
outs
cwde
ds
xchg
shl
lahf
aad
call
jmp
out
add
xchg
shl
dec
dec
out
sahf
aas
sbb
cmp
pushf
jno
push
jmp
rcr
xor
test
jbe
dec
cmp
and
mov
cmp
lahf
mov
inc
adc
pop
mul
addr16
cmps
outs
pcmpgtb
mov
push
lods
cli
pop
stos
and
repnz
inc
adc
push
xor
ret
mov
imul
xor
stc
push
adc
movs
fst
lods
add
addr16
adc
mov
adc
add
arpl
aaa
mov
xor
lods
mov
loope
xor
mov
pop
sbb
push
aaa
push
in
sti
mov
xchg
int3
hlt
fidivr
leave
call
jnp
call
push
cmp
mov
shl
(bad)
aad
out
fimul
cmc
mov
daa
mov
sub
clc
ror
add
dec
in
jmp
movs
pop
adc
test
mov
push
jne
mov
pop
sub
fstp
push
js
add
or
stos
ficom
nop
mov
xchg
cmp
imul
retf
fidiv
jo
jecxz
mov
mov
pushf
inc
xchg
cmc
popf
adc
js
sub
pop
mov
rcl
jmp
pusha
mov
inc
mov
fld
shl
jne
pop
dec
lahf
jmp
int3
fidiv
cmps
(bad)
push
lahf
sti
sbb
cmp
dec
xchg
xor
fwait
movs
dec
dec
in
rcl
xchg
push
dec
sbb
push
in
rol
(bad)
pushf
int
or
loop
(bad)
inc
pop
jns
jno
test
jo
js
mov
mov
cwde
jo
and
jge
test
aad
adc
das
sub
fisttp
push
hlt
pop
xlat
test
and
in
jo
xchg
jne
scas
ret
xor
jge
mov
xor
mov
mov
sub
pusha
mov
push
and
out
movs
jb
outs
movs
add
mov
loopne
aaa
adc
enter
icebp
mov
xor
(bad)
jg
hlt
jae
mov
mov
push
jno
mov
cmp
xor
loop
xor
and
pop
rcl
jnp
sub
mov
push
cmp
jmp
lods
ins
outs
adc
je
fucomp
scas
repnz
test
mov
in
mov
and
jl
cwde
in
sahf
(bad)
xlat
cmp
pusha
and
pop
mov
cmp
loop
cmc
cmp
icebp
cmp
div
adc
aam
jns
xchg
scas
push
cwde
jle
mov
test
jmp
add
(bad)
and
ins
or
(bad)
mov
fdiv
mov
shl
sar
jae
xchg
add
mov
sbb
mov
lds
test
mov
adc
into
dec
fwait
mov
pop
mov
jnp
imul
mov
xor
xchg
xchg
hlt
push
dec
aad
dec
retf
push
mov
jne
aam
rcl
ins
scas
sahf
in
enter
inc
shr
xchg
pop
jmp
loopne
mov
pop
movs
mov
cmp
icebp
movs
leave
gs
out
push
lods
call
test
mov
enter
scas
dec
mov
or
mov
or
push
xchg
dec
mov
cmps
inc
pop
cmps
or
inc
(bad)
cmps
in
loopne
lahf
in
mov
ss
fnstsw
jp
call
inc
mov
fcomp
cwde
shr
pop
push
cmp
mov
inc
stos
test
fs
aas
sbb
gs
mov
push
push
pop
mov
pop
ror
(bad)
pop
jo
push
in
in
test
rol
rcpps
fst
ins
jbe
leave
push
mov
shl
mov
out
push
push
sub
es
jle
inc
xor
sub
push
(bad)
std
push
cmp
inc
fdivr
imul
cmp
or
add
mov
push
int3
inc
push
xor
call
jp
repz
pusha
sbb
or
sbb
fimul
iret
hlt
dec
push
fwait
jae
cmp
mov
in
push
loopne
outs
and
xchg
jle
sub
daa
xor
mov
push
xchg
or
mov
bnd
sti
rcl
xor
hlt
(bad)
dec
or
loopne
stos
inc
sub
frstor
sbb
ret
pop
cmp
pop
test
jo
jne
sahf
mov
and
xor
add
ret
(bad)
mov
jae
rol
cwde
inc
pop
out
jge
mov
in
and
or
loopne
scas
and
outs
retf
cmp
jge
nop
xchg
ret
mov
sub
xor
(bad)
and
xor
movs
test
cld
loopne
sub
fmul
mov
or
adc
movs
and
jbe
xchg
xchg
aad
push
pop
mov
dec
leave
push
test
(bad)
xor
jnp
cmovne
cmp
add
repnz
sub
mov
pop
cmps
stos
retf
inc
cmc
cmpps
add
dec
and
xor
lea
push
sbb
enter
or
pop
sbb
mov
ret
(bad)
adc
pop
loope
mov
test
imul
mov
lods
and
int
jge
gs
mov
inc
lds
ss
fisub
adc
sub
add
cmp
into
test
mov
inc
in
push
pop
scas
sub
fdiv
mov
mov
rol
xchg
out
xchg
loop
(bad)
call
jp
imul
ret
retf
mov
nop
shl
stc
(bad)
aaa
or
mov
jo
adc
pop
pushf
std
movs
mov
fnsave
xchg
or
mov
ja
mov
jg
push
mov
adc
mov
fisttp
popa
xchg
or
and
pop
outs
jne
imul
jbe
xor
in
pop
stos
js
xor
dec
mov
pop
repz
outs
pusha
or
inc
pushf
and
dec
push
mov
cli
das
pop
mov
adc
enter
mov
xor
xor
mov
mov
aam
cmp
adc
cwde
jmp
popa
je
ror
jge
shl
ins
xor
sbb
cmp
inc
xadd
push
jae
fild
jns
inc
mov
gs
inc
fist
rcr
pusha
adc
or
xor
in
sbb
imul
hlt
sbb
(bad)
in
call
jmp
or
xchg
not
dec
jnp
xlat
cli
js
jo
stos
and
push
int
mov
cdq
popf
cmps
mov
mov
lods
test
push
(bad)
in
mov
xor
lock
sub
pop
aaa
inc
xchg
es
sbb
xchg
fcomp
xor
les
adc
je
call
mov
imul
inc
push
(bad)
adc
arpl
xchg
pop
ja
inc
pop
or
xchg
jp
test
out
cld
inc
ss
aam
popf
fld
into
or
nop
jno
jge
mov
inc
or
lock
adc
movs
sahf
ins
fdiv
inc
loopne
mov
jnp
imul
mov
and
test
movs
in
int3
out
adc
sbb
out
jo
fsub
in
adc
stos
and
add
mov
sub
rol
pop
mov
xor
nop
xchg
mov
aaa
ficomp
pusha
cmp
mov
lahf
lods
mov
inc
sub
retf
aas
nop
es
int3
fwait
sbb
jne
push
or
outs
sbb
popf
in
int
test
movs
inc
sar
bound
les
cmp
mov
mov
pop
mov
movs
lds
dec
push
inc
add
outs
pushf
mov
cmps
loope
inc
ret
pop
movs
mov
cdq
push
inc
inc
(bad)
fcmovnbe
jo
popf
neg
or
out
or
lea
mov
push
adc
aas
push
mov
lods
leave
stos
and
aam
lods
push
sub
inc
mov
add
sub
ins
out
push
or
popa
inc
add
cld
cli
into
add
add
aad
mov
inc
das
xchg
(bad)
aad
jne
and
div
add
out
pop
nop
dec
test
in
pop
jge
jns
outs
in
inc
adc
nop
push
jg
mov
aaa
pop
outs
xchg
add
add
les
aad
jnp
sub
ss
shr
stc
bound
inc
movs
mov
call
js
iret
push
(bad)
push
xor
aam
ss
ss
sub
cmp
add
add
dec
pop
pop
out
jle
xor
fwait
ror
inc
pusha
mov
mov
icebp
adc
sbb
in
mov
(bad)
ja
pcmpeqw
cwde
mov
cli
adc
imul
push
js
aam
mov
mov
stos
sub
adc
add
pop
dec
xchg
out
test
(bad)
into
inc
movs
mov
loop
or
clc
or
out
imul
sbb
mov
adc
mov
mov
idiv
out
cdq
cmps
sbb
xchg
xchg
push
mov
not
mov
mov
cld
pslld
and
fcomp
icebp
retf
inc
gs
les
cld
pusha
daa
into
jo
bound
xchg
das
cmp
out
jbe
and
call
popf
dec
in
loopne
cwde
add
test
aam
or
ror
push
stc
in
jns
cmp
xor
or
mov
lahf
mov
mov
fucom
lea
retf
mov
fsubr
jns
cmp
stos
aam
fisubr
mov
ret
addr16
sbb
add
shr
repnz
sbb
jmp
loopne
into
xlat
cwde
lods
dec
and
cmps
sub
addr16
mov
cld
xchg
neg
int
and
call
leave
shl
xchg
xchg
jge
out
xor
(bad)
mov
jle
push
popa
add
sbb
pushf
add
add
adc
push
sbb
jae
adc
add
jnp
push
je
sbb
pop
shl
and
ja
cwde
cld
mov
into
out
jbe
dec
iret
mov
mov
dec
push
xchg
mov
and
enter
scas
sbb
mov
in
inc
xchg
lods
ret
and
mov
retf
aam
and
adc
push
imul
iret
adc
sub
add
mov
push
xchg
(bad)
popf
loop
loopne
mov
inc
fistp
ins
pop
(bad)
pop
dec
sbb
add
and
add
je
or
sub
xchg
add
stc
pop
mov
repz
sbb
and
mov
fisttp
icebp
ficomp
push
jne
mov
cmp
dec
(bad)
into
xchg
je
pop
js
sbb
xor
fwait
enter
pop
jge
fdiv
out
lods
in
xor
mov
arpl
cdq
rol
sub
dec
sub
cmp
jo
lods
add
push
test
pop
retf
cli
mov
iret
div
ror
adc
xor
adc
out
pop
ins
inc
mov
pop
xor
xlat
fwait
xor
mov
es
dec
push
sbb
clc
mov
inc
imul
lods
sbb
mov
aad
sbb
mov
fld
sahf
and
das
or
lock
mov
mov
sub
(bad)
mov
in
inc
push
test
mov
pop
retf
mov
test
cli
outs
pop
xor
pop
(bad)
jno
lahf
inc
call
pop
or
(bad)
(bad)
test
adc
push
lods
adc
mov
nop
adc
fsub
movs
repnz
jno
sbb
inc
push
mov
xchg
and
das
cmp
fsub
lods
out
mov
xchg
lock
cmp
add
xor
add
(bad)
loop
pushf
push
repnz
cld
xor
xchg
mov
fldcw
outs
add
sbb
inc
mov
push
adc
push
iret
sub
enter
dec
jne
std
fild
pop
add
push
or
test
mov
sub
jno
fisttp
int3
hlt
mov
fldcw
push
pop
icebp
mov
and
retf
dec
pextrw
add
in
dec
dec
jmp
xor
loopne
dec
leave
push
test
jmp
gs
sar
lods
loope
outs
std
pop
and
sub
mov
cmps
inc
push
pop
xor
pop
fcomi
mov
push
and
ficom
mov
adc
(bad)
jle
cs
and
in
aas
cwde
inc
call
mov
xchg
lahf
ins
pusha
mov
mov
pusha
ins
jne
ins
cld
dec
push
mov
inc
repz
aad
mov
jecxz
fnstenv
dec
jns
lock
ret
xchg
into
mov
js
in
jnp
and
xchg
dec
pop
rol
jae
mov
sbb
adc
push
lods
std
stc
xchg
pop
push
mov
out
dec
cmp
clc
popa
add
mov
pop
(bad)
iret
cvtps2pd
add
add
xor
sbb
mov
dec
scas
jle
(bad)
push
movs
ret
adc
retf
jmp
xor
and
movs
nop
addr16
test
and
cmp
call
ja
sbb
jl
cmp
popa
cmp
sub
inc
jno
sbb
sub
xlat
xchg
vcomisd
mov
fild
inc
and
out
sar
cs
int3
jmp
cmp
push
adc
std
es
call
fcmovne
sub
mov
jle
mov
push
(bad)
mov
pop
sbb
fwait
jg
loop
ja
pop
repz
add
dec
lahf
int3
call
lahf
lahf
pop
rcl
sbb
rol
xor
fisubr
xchg
sub
scas
dec
ss
ror
sub
xchg
fwait
mov
fwait
cld
js
std
sub
fsubr
mov
sub
adc
call
mov
mov
mov
adc
lahf
test
jb
cld
hlt
inc
fxtract
jb
imul
mov
icebp
pop
es
js
scas
and
ffree
dec
jbe
jno
ins
mov
add
loope
xor
push
adc
jo
stos
out
fsub
(bad)
daa
imul
adc
in
sub
add
pushf
inc
inc
fidiv
cmp
mov
sub
test
push
push
fidivr
mov
xchg
pop
aas
inc
add
mov
(bad)
push
adc
icebp
and
dec
aad
(bad)
adc
and
call
(bad)
ror
xor
in
shl
out
enter
dec
adc
in
push
jecxz
test
push
cmp
lods
out
dec
in
mov
sar
call
xor
daa
imul
or
and
dec
pop
jns
mov
or
mov
cmp
xchg
push
aas
cs
cmp
jp
popf
aas
call
mov
out
das
pop
jnp
ss
mov
(bad)
retf
call
inc
jl
xor
popf
stos
(bad)
mov
dec
sbb
sub
fstp
jnp
push
mov
adc
jae
rep
push
hlt
test
pop
add
sbb
push
pop
jecxz
in
adc
pop
ds
les
pop
xchg
ret
and
idiv
xor
out
repnz
imul
jnp
adc
push
pop
and
into
fnstcw
call
sub
stc
sbb
scas
push
popa
sbb
xor
outs
fsub
ret
add
or
cmp
push
push
xchg
and
xlat
cdq
mov
xlat
pusha
sbb
or
sbb
push
or
xchg
in
aam
cmps
mov
into
jbe
ja
pop
(bad)
jp
mov
xchg
adc
sbb
mov
mov
pop
sbb
out
in
xor
xchg
out
setb
pop
js
or
xor
or
dec
pop
push
sbb
mov
(bad)
mov
mov
in
call
jno
sub
into
mov
repz
dec
jnp
push
sub
fisttp
cmps
and
xor
fimul
out
mov
test
sbb
cs
and
test
mov
sbb
add
loopne
int
pop
in
fwait
inc
stos
in
test
xchg
pop
or
retf
adc
fdiv
sbb
loopne
gs
das
sub
xor
pushf
sbb
ret
call
push
mov
fist
inc
imul
jg
jnp
je
cmp
lea
rcl
outs
mov
and
or
out
(bad)
push
pop
mov
jnp
test
inc
pop
pop
jae
push
call
and
lahf
das
mov
dec
mov
add
in
ret
xor
stos
add
xor
mov
and
test
push
inc
adc
cmp
fwait
push
and
js
movs
test
hlt
and
jo
repnz
add
mov
clc
leave
cmp
sbb
mov
xor
dec
push
mov
cmp
nop
and
popf
(bad)
jnp
addr16
sbb
test
inc
xor
adc
(bad)
stos
dec
xchg
add
gs
sbb
jno
dec
cmp
in
or
mov
jge
scas
inc
sub
dec
(bad)
stc
dec
rcl
les
fbld
jbe
in
popf
in
mov
mov
jge
inc
push
and
sar
cmp
inc
mov
fild
push
mov
lea
mov
cwde
jo
ins
sub
out
mov
shl
loopne
nop
cs
sbb
xor
or
popa
adc
pop
push
lds
jmp
aas
int3
ins
cmc
mov
arpl
loope
cmps
sub
fistp
pop
pop
aam
sbb
ret
fiadd
sub
push
push
rol
inc
in
mov
outs
sbb
mov
arpl
and
test
pop
sbb
xor
aam
nop
movs
mov
jnp
or
out
dec
test
sti
sar
repnz
shl
mov
pop
retf
xchg
jns
mov
add
scas
add
mov
test
out
inc
sbb
mov
leave
xlat
mov
and
xlat
aam
(bad)
sub
cs
sub
outs
sub
out
or
mov
mov
ins
pop
sub
pushf
or
retf
push
nop
test
aas
sbb
push
mov
clc
call
or
adc
aam
xlat
push
jp
or
aaa
test
inc
dec
push
or
je
jne
rol
inc
(bad)
fldenv
jmp
fs
arpl
nop
push
shl
mov
repz
mov
out
in
or
push
or
ret
mov
je
addr16
lods
sbb
pmulhuw
adc
xor
inc
mov
and
jge
lea
add
aam
cld
(bad)
dec
ins
fidiv
cld
xor
daa
rcr
push
and
shl
outs
aad
jmp
xchg
(bad)
cdq
(bad)
push
imul
jno
push
jg
inc
dec
cmc
jmp
and
xchg
mov
je
jmp
xor
shl
sub
(bad)
mov
cdq
xchg
push
or
std
mov
aas
popa
adc
int
mov
dec
jne
test
enter
push
push
outs
call
sar
and
nop
test
(bad)
jae
sahf
cmp
xchg
stos
cmp
das
jnp
mov
xchg
hlt
fdivr
cmp
dec
sbb
shl
arpl
xchg
jo
cmp
repz
xor
lods
or
int
mov
mov
mov
out
jnp
jmp
jno
cmc
loope
mov
lahf
out
loop
xor
out
mov
sti
cmps
popa
das
cmps
push
outs
lock
out
xor
sub
cmp
rol
loope
cmps
mov
into
int3
mov
pop
jb
lea
ins
mov
enter
mov
fdivrp
inc
arpl
jb
xchg
xlat
jg
sar
mov
test
mov
adc
inc
or
bound
imul
mov
xchg
cmp
jl
dec
das
xchg
sbb
push
out
loop
and
(bad)
cs
das
in
dec
out
pop
sbb
and
cli
dec
(bad)
mov
repnz
jnp
sbb
stc
sub
in
and
add
mov
and
sti
adc
out
movs
lahf
(bad)
mov
xchg
rcr
int3
sub
pop
(bad)
xchg
in
ja
add
jmp
inc
pop
into
cmc
out
cli
ret
scas
into
call
push
sub
xor
jecxz
xor
or
mov
call
in
add
sbb
mov
dec
sbb
and
rcl
inc
sbb
scas
pop
mov
xchg
adc
push
push
add
dec
(bad)
loopne
mov
xchg
and
fadd
je
fistp
jmp
mov
mov
int3
adc
xchg
ret
inc
mov
cli
mov
cmp
mov
mov
retf
xor
adc
and
adc
add
jbe
ret
dec
pop
rcr
pop
xchg
or
inc
xchg
push
fsub
inc
in
sbb
lock
sbb
jmp
mov
dec
lods
call
cwde
rcr
push
mov
push
xor
aam
pop
or
fistp
in
popf
pop
or
pop
aaa
mov
adc
mul
mov
mov
pop
xchg
cmps
mov
add
mov
ins
mov
adc
icebp
out
movs
mov
jae
test
jle
retf
and
jp
pusha
xchg
popf
pushf
pop
cmp
cwde
repz
ficom
sbb
mov
(bad)
int3
add
xor
push
cmp
sub
push
cmps
push
psubusb
push
les
enter
lea
sar
adc
inc
cmps
adc
inc
mov
int
xor
sbb
into
int
mov
adc
sbb
mov
pop
sub
mov
jnp
aam
(bad)
xchg
mov
and
mov
call
out
mov
int
cmp
cmps
movs
sahf
into
xor
jns
cmp
xor
dec
div
mov
mov
(bad)
push
aam
add
lds
mov
test
mov
aaa
xchg
dec
sti
stc
(bad)
stos
jb
(bad)
cmp
jecxz
add
lahf
test
sbb
jns
and
pop
cwde
sbb
pushf
inc
sbb
mov
js
mov
sti
sbb
cs
inc
dec
aas
jne
retf
pushf
stc
js
loope
or
or
mov
or
xchg
mov
cmps
jg
jo
xchg
popa
xor
and
in
mov
and
clc
mov
inc
mov
mov
fsub
adc
dec
bound
add
xlat
pop
sbb
dec
xor
loopne
outs
push
or
out
mov
mov
ror
fsubp
mov
and
in
aas
in
xor
or
ds
xchg
in
jae
mov
pop
jne
and
inc
jbe
clc
add
adc
pop
and
mov
add
mov
xchg
mov
xchg
pop
jmp
sub
ds
xor
push
pop
aaa
mov
lods
in
push
or
repz
cmp
dec
rol
lods
inc
imul
fld
bound
stos
pop
pop
jb
not
push
or
sub
sbb
push
mov
into
repnz
and
mov
jp
push
mov
push
mov
cmp
add
in
fdiv
retf
in
jmp
mov
cmp
ficomp
in
bound
inc
(bad)
btc
les
retf
sub
sbb
sub
out
rcl
pop
ror
iret
add
out
jno
push
retf
pop
inc
xor
retf
popa
mov
outs
ficom
imul
retf
push
inc
jae
mov
or
ins
mov
aam
cmp
mov
int3
push
pop
sti
sti
fwait
sahf
in
out
sub
bound
push
xchg
push
push
loop
cmp
mov
ins
sbb
adc
das
dec
daa
pop
xchg
inc
test
and
inc
fdivr
leave
sbb
(bad)
daa
retf
add
push
(bad)
push
mov
lea
fadd
jecxz
shr
repz
nop
pop
cwde
and
jg
outs
xchg
fldpi
inc
ficomp
or
xchg
fist
int
sub
(bad)
icebp
inc
fdiv
inc
mov
daa
imul
push
push
and
add
push
jnp
rcl
popa
inc
push
cli
add
lea
mov
iret
retf
mov
pop
cmp
ja
icebp
add
pop
inc
icebp
dec
cs
bound
dec
sar
pusha
sbb
mov
and
(bad)
fdiv
fmul
cmp
mov
cmc
hlt
cmp
pop
ja
nop
mov
scas
jg
test
jmp
or
push
int
loope
xlat
cli
shr
call
not
mov
outs
les
mov
es
shl
and
pop
dec
ror
call
popf
cmp
inc
sbb
mov
sub
fwait
mov
fs
mov
in
js
mov
movs
bound
test
fild
aaa
inc
xlat
or
mov
in
stc
xchg
icebp
neg
icebp
fist
cmc
sti
out
push
jmp
mov
mov
sti
dec
mov
add
xchg
jl
adc
test
mov
cmp
adc
in
inc
mov
push
les
and
xor
loopne
(bad)
sbb
mov
loope
(bad)
out
stos
xlat
movs
imul
clc
out
movs
or
ins
sub
nop
outs
movs
in
mov
jle
cmp
in
ret
or
dec
jo
push
sbb
ja
cmps
dec
inc
call
(bad)
into
cmps
xchg
pop
outs
lock
jg
and
std
and
jl
mov
xchg
das
pop
mov
and
dec
push
scas
fmul
pop
or
sub
(bad)
mov
or
jle
push
push
int
mov
pop
sub
loop
and
mov
repnz
lock
lods
hlt
xchg
cdq
dec
and
or
ins
in
stos
fdivr
mov
fwait
test
ins
fmulp
inc
je
cmc
cdq
jns
cmp
mov
dec
dec
cmp
xor
ds
push
out
loope
dec
mov
pushf
mov
stos
(bad)
add
pop
ins
cmp
jbe
jae
(bad)
les
fs
inc
call
jmp
jmp
mov
stos
adc
aas
or
pop
(bad)
pop
imul
(bad)
scas
xchg
dec
jae
xchg
jo
test
out
fcmovnbe
shl
leave
rcl
or
call
inc
push
xchg
add
cwde
xchg
imul
loop
ja
xchg
fucomip
push
ss
popa
cdq
rcr
popf
imul
lock
in
lds
lea
addr16
bnd
mov
adc
mov
push
fistp
and
cmp
dec
push
sti
jae
xlat
stos
add
push
das
test
jle
and
movs
imul
sar
and
push
sub
sub
icebp
or
(bad)
cld
cmps
push
push
mov
sbb
daa
jle
ret
xor
sub
sbb
mov
mov
mov
and
(bad)
aaa
ret
pop
sti
fwait
inc
and
mov
jnp
xor
enter
iret
jp
aaa
mov
pop
xchg
push
adc
jmp
mov
cmp
pop
and
jge
sar
mov
jns
cmp
jmp
jge
cmps
xchg
movs
pop
jmp
cli
dec
dec
sti
aaa
fs
xchg
adc
imul
add
inc
fsubr
aaa
cs
push
xor
cli
movs
jmp
mov
push
into
push
push
jp
lods
xor
pop
ins
adc
into
stc
retf
cld
ret
add
jl
add
or
scas
sub
pop
pusha
xor
das
test
aas
lods
mov
inc
cmp
fnstcw
mov
pop
icebp
mov
js
xor
inc
sti
adc
cmps
cmps
push
jle
xchg
mov
out
js
add
fild
pop
inc
hlt
mov
jg
mov
scas
mov
ret
push
or
xor
idiv
xor
call
addr16
add
ja
arpl
mov
clc
into
call
arpl
mov
(bad)
add
jns
mov
call
js
xchg
mov
sahf
mov
fnstcw
xor
scas
xchg
sbb
push
xor
mov
jmp
dec
xchg
aad
xchg
lahf
xchg
xor
push
daa
mov
mov
sahf
pushf
enter
and
(bad)
int3
and
or
ret
lods
daa
pop
push
cmps
jno
jl
push
cdq
mov
jl
xchg
pop
fnstcw
inc
js
sahf
jg
repnz
sub
cmp
mov
jmp
add
and
fimul
push
inc
cmc
mov
xor
stos
jb
cli
pop
nop
hlt
mov
push
jmp
xor
icebp
pop
push
mov
popa
adc
push
into
cld
ds
shl
and
nop
jbe
and
js
and
add
dec
call
icebp
pushf
and
out
sub
and
aaa
xchg
fdiv
lods
dec
or
js
sub
xor
lods
fmul
mov
inc
je
add
dec
inc
or
jmp
pop
mov
cmp
ret
ret
mov
icebp
push
push
js
test
add
mov
pop
iret
fwait
sbb
movs
push
fsubr
pop
arpl
sbb
loope
lock
pushf
mov
mov
daa
inc
cli
and
pushf
mov
out
outs
cmp
jo
mov
imul
clc
pop
repz
movs
(bad)
loop
dec
mov
and
icebp
loope
je
or
jp
inc
enter
xchg
rcl
cs
mov
fsub
(bad)
ds
push
in
out
xor
and
cwde
sub
mov
xchg
inc
shl
mov
sub
add
clc
push
add
fild
and
mov
retf
xchg
or
ds
test
sahf
or
shl
mov
(bad)
out
add
mov
pop
push
add
lods
repnz
or
ficom
push
lock
and
inc
cmp
push
jecxz
xor
out
fs
fcomi
ins
es
(bad)
retf
ds
fwait
sub
dec
or
sub
fwait
sub
pop
mov
mov
adc
fisttp
mov
mov
lds
pop
ins
pusha
clc
test
xchg
jge
jmp
aaa
fadd
cmp
mov
pushf
push
stos
popa
lea
mov
test
sub
xor
outs
das
addr16
cmp
in
imul
mov
fisub
test
pop
int3
sbb
jg
dec
pop
sbb
arpl
in
inc
lock
into
sbb
stos
ret
test
ficom
jns
(bad)
pop
and
repnz
add
lods
int3
ins
and
or
add
push
push
pushf
imul
jnp
dec
mov
mov
rol
mov
mov
pop
lock
inc
ret
loope
and
stos
fcmovbe
dec
ins
ret
jae
xchg
mov
movs
retf
sar
sbb
inc
mov
cmps
xor
pop
cmp
cmp
or
xchg
or
sbb
cmp
rcl
sti
sub
rol
sar
icebp
hlt
aaa
mov
jecxz
addr16
outs
sbb
scas
nop
jp
dec
(bad)
repz
das
add
fisttp
dec
push
and
cmp
or
adc
pop
fwait
or
cwde
mov
cli
ss
sbb
jae
push
add
jne
(bad)
push
adc
mov
cmovle
pop
dec
adc
push
sbb
mov
fmul
into
xchg
enter
ins
fistp
enter
pop
xor
inc
mov
mov
outs
mov
pop
inc
fcomp
add
mov
out
jge
push
sub
lds
adc
and
data16
jmp
cmp
cmps
mov
stos
push
ins
mov
or
in
js
jge
test
fstp
mov
aas
das
call
inc
fadd
ja
add
test
mov
inc
and
or
sub
xchg
dec
cmp
ficom
sbb
retf
repnz
and
stos
repnz
or
xchg
adc
ror
lahf
repz
inc
fdiv
sub
sahf
mov
(bad)
arpl
mov
and
shl
jmp
or
clc
pop
aad
jmp
jmp
stc
sub
dec
in
inc
in
call
mov
pop
es
jae
push
(bad)
xor
mov
push
mov
les
inc
leave
mov
add
adc
inc
jne
rcr
pop
mov
lods
in
sbb
push
and
dec
pop
adc
cs
(bad)
movs
push
fld
daa
outs
call
cs
cmps
push
push
dec
outs
add
into
xor
xchg
dec
sahf
lds
push
imul
lds
jl
scas
jo
sub
sub
push
add
(bad)
inc
fcmovu
out
repnz
xor
jns
jbe
push
or
fs
sbb
xor
and
mov
out
clc
adc
inc
ror
inc
mov
(bad)
sbb
outs
movs
dec
push
pushf
outs
stos
lock
call
std
fstp
je
mov
aaa
cmp
pop
daa
mov
test
(bad)
xor
repnz
movs
ficomp
push
push
and
cmps
inc
mov
xchg
push
xor
ret
out
jb
movs
mov
repz
iret
adc
cdq
shl
sub
int3
jmp
sahf
cmp
nop
icebp
test
fwait
lock
pop
add
loop
test
ins
sahf
inc
add
ins
fisubr
push
ret
das
iret
xacquire
and
xlat
push
in
adc
cmp
cmp
enter
push
add
imul
jmp
retf
add
pop
test
adc
stos
cli
xchg
int3
ret
ss
test
cmc
hlt
dec
call
jmp
fidiv
cmp
into
mov
sub
iret
les
xchg
ins
add
sub
adc
les
scas
or
xchg
stos
rcl
sub
mov
pop
jg
cdq
hlt
repz
rcpps
inc
jno
rcr
pop
add
nop
in
xor
xor
repnz
jle
sub
push
push
test
mov
mov
ss
stos
dec
add
mov
inc
ds
inc
or
cmp
dec
push
xchg
push
xchg
movs
pop
and
inc
xor
cli
push
aad
imul
jle
les
push
add
jb
ficomp
mov
arpl
mov
fbstp
jb
call
adc
xchg
call
jmp
and
(bad)
xchg
cmp
and
inc
into
and
fidivr
nop
cmp
scas
shr
lods
jecxz
xchg
push
sub
std
pushf
push
xor
aaa
(bad)
xor
clc
stos
sar
ret
inc
push
in
lods
push
arpl
sub
add
icebp
(bad)
ror
inc
inc
hlt
adc
xchg
ins
movs
fidiv
daa
retf
xchg
iret
push
mov
xor
addr16
inc
adc
out
mov
cmp
ins
les
nop
pop
imul
fistp
fisub
adc
(bad)
push
mov
(bad)
aam
nop
inc
push
call
mov
or
leave
sub
(bad)
mov
test
call
outs
or
mov
pushf
jge
jp
push
out
dec
(bad)
dec
dec
in
test
sbb
mov
cmp
shl
sar
jnp
jo
fisttp
fs
or
pop
dec
sub
add
mov
xchg
push
jns
sbb
mov
test
fstp
or
ror
xchg
dec
dec
test
fldcw
add
outs
jo
sbb
jb
out
hlt
(bad)
adc
push
jo
xchg
jno
(bad)
loop
cwde
rcr
je
(bad)
(bad)
into
hlt
adc
div
jnp
or
dec
mov
mov
xchg
aam
sbb
popf
mov
gs
scas
mov
das
repz
bound
add
cdq
dec
outs
inc
dec
out
xchg
imul
pop
daa
pop
pop
push
cwde
outs
push
adc
push
lods
dec
jbe
sar
and
push
adc
push
xchg
fwait
adc
sbb
das
gs
mov
sbb
pop
loopne
loopne
sti
add
lea
loopne
cwde
jo
std
addr16
mov
pop
or
in
(bad)
lea
ds
shl
aam
jecxz
adc
arpl
jl
push
test
ret
test
jo
add
and
lock
push
add
mov
scas
mov
or
(bad)
pop
das
fimul
and
jbe
dec
not
xlat
clc
sti
dec
cmp
imul
inc
dec
loopne
inc
call
jbe
cmp
jecxz
loopne
mov
sub
(bad)
sbb
cmp
aas
inc
adc
test
(bad)
pusha
add
jmp
cmp
sti
dec
out
sub
(bad)
lahf
inc
mov
mov
prefetchnta
iret
dec
push
push
xor
pushf
push
neg
or
and
ret
adc
hlt
in
cmp
adc
jp
scas
dec
(bad)
retf
movs
mov
jp
test
xchg
or
mov
sub
pop
ja
cli
test
cmp
xor
nop
mov
jb
inc
test
dec
inc
jnp
jns
cmps
ds
cmp
aam
xchg
out
xchg
pop
repz
mov
jmp
adc
iret
lds
mov
call
xor
test
sub
das
arpl
xor
cmp
pushf
mov
dec
add
stc
push
dec
cld
ret
loop
push
fdiv
sub
mov
pop
mov
ds
addr16
fldcw
push
loope
loope
imul
adc
and
push
xor
jl
es
xchg
sbb
jle
jg
test
adc
cmp
mov
jle
test
fdivr
mov
xor
push
xor
sub
and
push
pop
xor
outs
pop
mov
es
dec
xchg
test
adc
xchg
inc
lods
js
cmp
nop
sti
sbb
call
pop
or
cmps
mov
mov
add
and
in
mov
ins
(bad)
in
int3
xor
and
sbb
xchg
or
arpl
gs
aam
xor
jecxz
pop
adc
loope
sbb
adc
push
lods
cmps
ins
jmp
test
in
arpl
xor
and
(bad)
push
lods
jmp
push
mov
aas
pop
repnz
xchg
jo
sbb
xor
sub
loopne
ds
je
add
in
and
pop
jo
dec
xchg
call
in
add
loop
pop
xchg
add
dec
mov
pop
test
stc
dec
cmp
out
(bad)
mov
shl
jge
sti
mov
icebp
pop
cmp
or
(bad)
cs
outs
pop
loope
mov
cld
or
daa
nop
and
xchg
dec
xchg
call
mov
mov
out
sub
nop
adc
adc
fiadd
(bad)
inc
test
jae
and
cmp
mov
int
stos
out
push
int
sbb
movs
cmp
pop
bound
xor
outs
shl
ficomp
inc
fwait
cmp
pop
aaa
in
pop
adc
mov
mov
cmp
jge
clc
data16
push
int
jp
mov
scas
mov
pop
add
lods
xchg
push
dec
xchg
ins
jns
enter
retf
mov
add
enter
call
mov
mov
hlt
adc
pop
out
and
fiadd
std
push
adc
movs
aaa
mov
dec
mov
sub
aas
std
ficom
dec
add
add
lods
sbb
iret
add
or
pop
sub
outs
mov
scas
and
icebp
xchg
enter
sbb
div
dec
jp
stos
sbb
sti
aas
in
push
(bad)
mov
pop
mov
aas
xchg
cmp
push
dec
out
add
dec
stc
xchg
cmp
imul
lea
mov
movs
xor
lea
push
sub
sub
push
retf
retf
xchg
inc
sbb
into
xor
adc
sub
call
mov
(bad)
sub
fs
mov
(bad)
in
sub
mov
sbb
mov
int
shl
add
xchg
daa
sbb
out
seta
movs
es
mov
jnp
add
pop
jns
shl
sub
dec
call
adc
dec
xchg
lods
mov
and
popf
cmp
adc
mov
sbb
fisubr
xor
dec
push
retf
mov
sbb
mov
xor
imul
jae
mov
stos
xor
cmps
add
adc
fmul
xchg
sub
cmps
cwde
in
mov
inc
push
xchg
push
call
jb
xchg
mov
(bad)
repnz
sbb
popf
and
push
push
movs
cwde
xchg
dec
and
fdiv
jecxz
je
es
sbb
jmp
daa
sub
cmp
(bad)
ds
idiv
ins
je
sahf
js
(bad)
cmp
pop
call
ret
inc
xlat
inc
pop
(bad)
dec
add
test
push
sub
mov
rol
out
loopne
mov
mov
jae
(bad)
sub
sub
mov
sub
fmul
cmp
lock
pop
ret
addr16
fcom
mov
retf
add
addr16
jge
mov
ss
push
dec
mov
neg
sar
add
cli
adc
sub
inc
mov
imul
mov
retf
cmp
adc
inc
push
in
push
cmc
stos
push
dec
jle
xor
mov
mov
sub
lods
clc
inc
jecxz
in
div
out
lods
mov
sub
push
test
push
adc
cs
outs
push
cmps
mov
jl
iret
mov
div
add
test
dec
adc
shl
popa
test
aaa
stos
jae
mov
jp
mov
sbb
mov
push
ds
movs
pop
pop
sbb
add
call
aam
add
adc
pop
jge
cmc
push
cmp
hlt
sbb
xchg
pusha
and
jo
std
mov
imul
push
lahf
inc
xor
xor
xchg
out
rol
xor
jmp
xchg
sub
lock
adc
fcomp
pop
aaa
lods
in
scas
xor
and
and
dec
sbb
outs
stc
sub
call
int3
call
add
mov
sti
and
mov
jg
ficomp
jge
mov
popf
sbb
sbb
hlt
hlt
pushf
pop
inc
cmp
icebp
jecxz
fmul
call
or
mov
mov
jecxz
imul
scas
mov
mov
call
inc
pop
stos
add
jle
test
and
(bad)
inc
inc
in
jmp
(bad)
shl
mul
fs
mov
and
clc
sbb
and
add
mov
mov
push
pushf
xchg
push
gs
sbb
in
xchg
and
das
mov
xchg
loope
fistp
fcom
add
push
mov
neg
jmp
fisttp
out
les
fiadd
(bad)
push
jne
push
in
sti
and
sbb
xor
cmps
xor
into
das
sbb
dec
sbb
lods
xchg
add
rcr
(bad)
(bad)
mov
jl
ins
pusha
cld
mov
sbb
adc
inc
dec
xlat
jb
dec
cs
inc
xchg
add
push
sbb
dec
(bad)
aaa
div
pop
sbb
sub
das
ret
mov
sahf
jb
xchg
jle
in
mov
sub
cmp
and
adc
sbb
fcom
cmc
ror
xor
std
xchg
and
jmp
sbb
fdiv
out
mov
shl
daa
add
rol
and
sbb
jns
pop
push
xchg
jmp
aam
xchg
jo
test
adc
xor
sbb
sub
mov
repz
jge
pop
pop
cld
sbb
loop
adc
sbb
dec
(bad)
bound
mov
push
jge
adc
xchg
inc
mov
addr16
push
cdq
dec
shr
push
popf
rol
fdiv
fld
xchg
test
xor
inc
sub
retf
adc
jl
push
xchg
ins
aaa
mov
cmp
stos
test
rcl
in
and
or
loope
inc
neg
movs
pop
mov
ins
movs
mov
test
loopne
in
lods
push
(bad)
in
and
fst
add
ins
scas
xor
sbb
loopne
popf
lahf
pop
xchg
int3
ss
pop
hlt
(bad)
out
sbb
mov
push
mov
xor
mov
mov
js
cmp
xor
pop
int3
inc
cmps
outs
cmps
fldenv
popa
sbb
mov
and
dec
repz
call
cs
pop
inc
int
leave
xor
lahf
push
mov
sbb
xchg
stos
in
dec
push
or
mov
push
jg
ds
xor
and
mov
jne
movs
iret
test
lock
ins
pop
into
mov
ins
call
mov
repz
les
xchg
sub
cmp
test
jmp
mov
ret
rcl
add
xchg
sbb
or
adc
dec
imul
mov
stos
xor
pop
xchg
std
xlat
shl
push
or
jl
bound
jmp
mov
pushf
inc
sbb
add
rcl
mov
sub
jae
movs
retw
push
mov
cwde
pop
jae
jno
outs
push
push
inc
adc
neg
daa
iret
dec
pop
sub
mov
and
ret
(bad)
xor
stc
ins
add
fs
rol
fidiv
ficomp
sbb
adc
ror
add
out
in
adc
call
test
mov
inc
ins
mov
mov
sbb
push
shr
push
add
enter
bound
(bad)
movs
rol
mov
loop
enter
sahf
and
daa
ins
or
fs
ss
jb
jbe
movs
test
retf
fisubr
shl
push
adc
mov
xchg
retf
add
add
mov
inc
ret
icebp
aaa
xchg
add
xor
repz
mov
inc
outs
pop
cmps
stos
push
(bad)
sbb
adc
neg
std
shr
inc
cmp
or
xchg
inc
xchg
add
or
inc
in
(bad)
inc
rcr
dec
clc
dec
clc
lds
jmp
mov
jno
out
cdq
popa
dec
push
add
mov
sbb
js
cwde
pop
out
pushf
mov
fcom
int3
push
add
push
mul
test
cmp
push
sub
loop
sbb
add
les
jae
div
sub
cmp
imul
adc
sub
pop
pop
or
adc
mov
into
jae
addr16
inc
adc
aad
hlt
rcl
sahf
cmp
int3
clc
adc
ds
ja
cwde
popa
aad
add
inc
mov
adc
fisttp
xchg
xor
xor
sbb
pushf
out
or
mov
jns
jbe
outs
pop
imul
cmp
rcr
xchg
jo
pop
jecxz
push
pop
inc
cs
mov
xchg
xor
jecxz
cmp
sub
imul
and
movs
call
mov
xor
hlt
arpl
sub
mov
push
retf
and
jmp
shl
orps
call
fcomi
adc
cmp
enter
jno
daa
imul
arpl
out
and
jnp
dec
popa
sbb
push
mov
mov
cmp
xchg
loopne
aas
cli
sbb
fld
fprem1
fabs
je
xor
stos
pop
xchg
push
(bad)
out
bound
into
enter
(bad)
lods
push
mov
popa
(bad)
fild
add
or
repnz
dec
outs
jnp
aad
dec
sub
stc
sahf
adc
push
cmpxchg
and
pop
jno
inc
fmul
push
cdq
cmovo
sub
dec
jl
push
dec
xchg
mov
inc
mov
xor
and
rcl
pop
out
fcom
sub
fidiv
ror
in
daa
mov
jl
fst
(bad)
cmps
pop
int3
out
rcl
sub
sti
call
dec
cwde
cmp
jno
adc
dec
push
mov
push
retf
jg
lea
mov
and
xor
sub
movs
jno
xlat
arpl
repnz
jl
and
lds
xchg
mov
or
or
xchg
or
fdiv
inc
dec
pusha
jno
sbb
dec
dec
cmps
jg
xchg
xlat
adc
and
pop
ret
pop
adc
outs
call
pop
sbb
jae
(bad)
(bad)
or
cmc
lahf
cmp
or
cld
sub
mov
jne
enter
out
or
enter
outs
mov
cmp
outs
mov
pop
adc
loopne
shl
cmp
sbb
sbb
or
mov
mov
jp
cmp
cdq
and
cmp
les
cwde
push
das
loop
aam
leave
sbb
dec
ss
in
not
pop
pop
aam
inc
test
js
int3
pop
pusha
(bad)
push
lea
pop
mov
sbb
fdivp
and
sahf
lds
inc
aaa
aam
push
sti
fldcw
mov
dec
push
outs
mov
pop
stos
retf
je
jmp
neg
or
jl
retf
and
popa
fld
cmp
mov
inc
jb
sbb
add
aas
popa
jne
sbb
add
js
xchg
out
in
push
or
ins
jns
push
pop
push
fwait
ret
sbb
pop
adc
add
popf
iret
shr
mov
add
xor
bound
lods
dec
nop
in
in
leave
dec
popa
int3
sbb
movs
nop
pop
leave
push
sub
cmp
mov
fistp
and
retf
push
adc
ficomp
xchg
mov
adc
arpl
scas
sbb
sbb
mov
cmps
push
aaa
gs
add
jb
cmp
arpl
mov
cmps
jne
xchg
data16
movs
pop
sub
push
test
pop
into
pop
sub
add
xor
lds
xchg
cmps
xchg
int
cmp
sahf
loopne
push
stos
cmp
sbb
sub
div
lahf
sub
inc
jp
pop
ror
mov
jl
or
sti
dec
dec
in
in
(bad)
xor
aaa
loope
movs
fiadd
mov
aad
loop
scas
push
and
or
out
and
sahf
jg
xor
dec
xor
or
inc
mov
ins
gs
sub
shr
fnstcw
push
dec
mov
cld
mov
push
out
sub
in
jge
in
cmp
repz
popa
mov
popa
call
xchg
fiadd
pop
fist
fcmove
mov
fisub
dec
pushf
sub
shl
test
test
and
dec
add
push
lock
cli
enter
ret
lea
cmp
xchg
std
sbb
adc
fld
enter
jg
es
jge
mov
inc
push
sub
pusha
sub
sub
cs
adc
cs
push
mov
(bad)
mov
and
jmp
push
pop
test
fld
mov
mov
xchg
sbb
test
dec
mov
sahf
pop
repz
mov
ror
addr16
mov
data16
or
sbb
mov
pushf
adc
pusha
fcom
inc
mov
push
inc
std
jmp
pop
iret
add
or
stc
cdq
add
push
aaa
ja
mov
(bad)
stos
cmp
add
(bad)
sbb
push
lahf
outs
dec
jp
sbb
outs
dec
add
xchg
cld
push
mov
jae
mov
bound
pop
pop
aaa
lods
sbb
pop
dec
push
xor
pop
loopne
cmp
mov
out
fmulp
mov
add
aas
sub
mov
pop
pop
ins
push
cmps
(bad)
pop
loope
sub
aad
adc
or
mov
pmullw
rol
mov
or
add
in
jo
mov
loopne
outs
lods
xchg
nop
mov
repnz
pop
xchg
xchg
pop
cli
mov
call
add
xor
mov
js
cli
xchg
in
push
add
inc
rcl
and
jno
inc
aam
(bad)
scas
addr16
xchg
not
fisub
movs
jmp
(bad)
sub
and
cdq
sbb
inc
pop
(bad)
mov
cld
out
pop
data16
(bad)
(bad)
aad
fadd
or
push
and
pop
cwde
pushf
xchg
inc
sub
movd
xchg
sbb
push
arpl
icebp
cmc
mov
dec
jg
push
sbb
icebp
icebp
mov
mov
xor
xchg
out
(bad)
movs
popf
push
mov
push
pop
cli
push
adc
clc
lods
into
arpl
sbb
jmp
clc
aas
and
jge
add
push
call
sbb
movs
(bad)
sub
ret
retf
and
or
add
imul
inc
fs
pop
jns
jb
inc
or
dec
xor
mov
xchg
out
out
lods
fcom
mov
loopne
adc
jle
movntps
or
sbb
and
pop
mov
lods
test
lods
sbb
jae
rcl
sub
jg
loop
sbb
or
or
sub
loope
call
pop
(bad)
add
or
push
fs
loopne
mov
mov
fiadd
inc
fcomp
ret
ror
and
adc
in
popf
add
int3
xchg
scas
mov
fnsave
addr16
movs
ins
mov
and
popa
dec
jbe
xbegin
xchg
mov
out
or
jg
jmp
popf
ret
mov
pop
lods
ror
sub
xchg
mov
mov
out
je
cmps
cld
adc
cli
arpl
inc
xor
(bad)
add
outs
clc
push
sub
xchg
stc
rcr
jno
pop
mov
adc
or
push
jecxz
(bad)
stc
add
sbb
call
add
jl
test
sub
xor
lea
add
mov
xor
push
and
mov
sbb
div
xchg
loop
inc
jns
aad
inc
cli
dec
ret
cmps
dec
xor
and
mov
sbb
pushf
repnz
mov
pop
sub
in
cmp
scas
and
add
xor
mov
pop
sbb
cmp
mov
jg
lds
dec
mov
clc
jb
stc
fcmovu
fild
mov
pop
xchg
pop
dec
jecxz
ins
stos
mov
cmps
add
cmp
jmp
xchg
xchg
jp
mov
push
push
pop
(bad)
scas
xor
sbb
test
mov
mov
sahf
add
out
push
imul
add
fdivr
aaa
fwait
into
outs
jmp
or
pop
or
fmul
xor
cmc
xchg
imul
cmps
add
cmps
dec
inc
mov
xchg
popa
add
inc
scas
pop
lods
pop
mov
mov
enter
inc
int
add
sub
gs
lea
fild
pop
lock
addr16
xchg
(bad)
add
and
(bad)
adc
pop
mov
lds
retf
push
mov
test
add
scas
fsub
imul
add
or
in
ret
arpl
jb
and
sbb
inc
loop
(bad)
xor
jnp
or
aaa
aaa
(bad)
rol
add
push
cwde
cmp
call
pop
dec
out
push
xor
dec
fnstsw
adc
ficomp
cld
pop
mov
jbe
fbstp
and
or
call
lea
push
mov
mov
cmp
pop
mov
jmp
out
(bad)
jmp
in
hlt
inc
cmp
cmp
mov
aaa
or
(bad)
in
inc
pop
sub
je
push
cs
sub
test
ds
mov
rcl
pop
mov
mov
scas
call
outs
cmp
sbb
jecxz
dec
inc
push
adc
cmps
rcl
or
retf
loope
lods
dec
pushf
push
enter
fsub
xchg
ss
mov
mov
repz
dec
jle
shl
stos
ds
(bad)
popf
pop
ror
mov
push
dec
jecxz
mov
push
adc
aas
sbb
test
inc
or
aaa
and
(bad)
fwait
mov
mov
sbb
out
imul
add
jno
enter
daa
push
adc
nop
jbe
lock
jg
or
push
adc
mov
jmp
sub
xor
leave
aad
pop
(bad)
fld
jbe
movs
addr16
and
movs
lds
(bad)
pop
and
push
mov
and
retf
ins
mov
popf
sub
fdivr
pushf
pop
cmc
(bad)
dec
mov
lahf
push
aas
lds
jb
(bad)
fwait
inc
add
add
aad
sbb
mov
jae
jne
mov
dec
jmp
cld
in
arpl
mov
mov
shl
test
or
out
pop
dec
or
dec
repnz
retf
pop
outs
stc
dec
jnp
push
push
sub
cmp
ds
mov
fs
fisttp
stc
stos
mov
scas
(bad)
imul
jmp
in
push
fsub
mov
adc
and
lahf
(bad)
(bad)
pop
sub
pop
pop
dec
cmp
arpl
mov
xor
and
sub
and
inc
mov
mov
jbe
and
lods
or
cmp
cwde
mov
mov
dec
jle
add
and
es
pop
ds
mov
mov
fucom
scas
mov
jmp
mov
jbe
mov
shl
fcom
retf
push
lock
mov
push
gs
dec
ins
pop
xchg
add
xor
jmp
dec
dec
rcl
dec
push
stc
mov
mov
fiadd
jmp
int3
jmp
fnstenv
(bad)
mov
daa
or
xor
mov
adc
mov
ins
dec
lods
and
in
jno
cmp
inc
pop
push
dec
ret
pop
xor
adc
lahf
ins
popa
in
retf
in
std
adc
mov
dec
jp
rcl
push
aam
xor
loop
out
shr
jae
xor
std
adc
push
call
dec
inc
mov
inc
xor
mov
xor
imul
add
push
pop
js
dec
sti
stos
in
add
jl
sbb
adc
xchg
sbb
inc
pop
add
mov
add
push
push
(bad)
(bad)
push
mov
pop
or
jb
bound
neg
lods
mov
mov
mov
jmp
loope
(bad)
lds
in
jge
adc
fcomp
fnstenv
fs
cwde
mov
setno
mov
jb
mov
xchg
adc
xor
retf
mov
lds
push
push
pushf
xor
xchg
jne
retf
inc
movs
xor
xchg
or
jns
pop
mov
push
push
imul
xor
lods
sbb
inc
shl
dec
aad
and
lahf
aad
mov
ins
mov
sahf
ss
(bad)
cld
enter
gs
das
outs
rcl
sub
add
loope
rcl
(bad)
cld
dec
lods
enter
loop
outs
psrlq
add
push
push
add
aaa
in
inc
mov
test
pop
ret
mov
push
hlt
arpl
jl
xor
jge
arpl
into
dec
xor
cs
push
push
lahf
test
pop
push
sub
mov
mov
xchg
retf
push
push
(bad)
pop
cwde
or
xchg
jmp
sbb
mov
imul
or
xchg
lds
popf
mov
jno
bound
jo
jbe
outs
push
xchg
loope
scas
sub
inc
cpuid
and
je
mov
loopne
jecxz
scas
ins
mov
cmp
xor
mov
in
cli
aad
or
(bad)
push
js
scas
dec
call
fisttp
lock
inc
lds
mov
sub
outs
mov
cdq
mov
adc
stos
fnsave
daa
pop
pop
dec
mov
cmps
xor
jne
out
repnz
leave
xchg
and
jle
imul
(bad)
cmp
cld
or
dec
cwde
sbb
scas
aam
mov
ja
call
pop
mov
xchg
stc
iret
jle
add
pop
sub
test
push
and
sub
mov
sub
(bad)
sar
adc
pop
cmp
add
jmp
mov
mov
mov
outs
pop
lock
sub
sbb
ins
sbb
iret
sti
pop
retf
inc
mov
cmps
cmp
xchg
cmp
push
mov
ins
mov
pusha
(bad)
mov
addr16
mov
je
pop
icebp
enter
dec
fiadd
inc
dec
(bad)
pop
sub
cmp
push
aaa
jnp
pop
or
cs
sub
mov
shr
lods
outs
cmp
and
add
inc
and
sbb
popf
push
enter
push
mov
out
and
dec
je
fldl2e
dec
sti
rol
mov
add
push
pop
stc
xor
data16
dec
(bad)
mov
sbb
outs
out
fisttp
jae
enter
xor
(bad)
xor
loopne
xchg
pop
pop
imul
or
mov
outs
test
fwait
arpl
jge
adc
add
mov
(bad)
shr
cmp
repz
xchg
cmc
mov
call
rol
mov
sub
sbb
fisttp
mov
(bad)
mov
cmp
sub
xchg
pop
cmp
sahf
mov
mov
xor
inc
or
jle
cmp
pop
or
in
pop
pop
push
pop
loopne
push
mov
fs
mov
xchg
jp
sub
sub
loop
neg
shr
xor
test
scas
mov
add
jmp
sbb
imul
sbb
push
pop
and
ror
mov
xchg
cmp
mov
(bad)
rcr
icebp
jb
xchg
mov
pop
daa
push
jge
retf
sysenter
repnz
push
cwde
sub
adc
in
add
add
ss
xchg
test
shl
jb
add
stc
adc
aam
xchg
(bad)
out
in
repz
push
rol
inc
mov
es
ficom
jae
call
cwde
sbb
retf
aad
xchg
pop
fwait
jb
outs
pop
fwait
push
xor
cli
outs
pop
xchg
cmps
(bad)
ja
jmp
lock
and
sbb
add
(bad)
inc
dec
(bad)
enter
int
repz
xchg
or
sar
mov
or
xchg
int
repnz
das
sub
pop
lea
ds
lds
sub
add
mov
add
jecxz
inc
in
int
lahf
cmp
arpl
out
sbb
xor
fadd
inc
aaa
aam
les
and
int3
test
mov
fwait
loopne
add
iret
aaa
sub
out
xor
test
test
loope
jne
adc
adc
fidivr
mov
xchg
pop
add
or
dec
popa
(bad)
mov
lahf
out
mov
(bad)
fisub
ror
rcr
pop
adc
cld
scas
sub
xchg
test
mov
jp
and
outs
inc
(bad)
test
ret
push
push
pop
xor
xchg
jmp
add
mov
daa
popf
sbb
dec
cdq
(bad)
pop
js
mov
jne
sbb
(bad)
pop
sti
test
sahf
repz
fistp
push
fistp
jmp
data16
pop
inc
push
cli
fisub
dec
dec
test
xchg
out
mov
cmp
mov
xchg
xchg
adc
cld
inc
lds
gs
adc
inc
xor
jnp
push
loope
mov
leave
test
push
pop
inc
iret
mov
pop
dec
cmp
test
mov
inc
inc
or
test
mov
(bad)
cli
mov
xchg
ins
cmp
add
and
aad
scas
inc
mov
fiadd
xchg
imul
cmp
sub
jge
xor
enter
cmps
pop
rcl
out
and
xchg
clc
mov
jmp
ja
div
adc
mov
xchg
movsx
push
jecxz
icebp
out
int3
popa
and
(bad)
xor
mov
dec
lods
sbb
int3
mov
cdq
mov
jae
out
push
test
idiv
std
clc
mov
aaa
push
sar
inc
stos
xor
and
jae
or
lahf
adc
inc
push
bound
xor
inc
xor
(bad)
lock
sbb
into
mov
jp
rcr
dec
(bad)
sbb
popf
iret
and
add
jbe
mov
pop
outs
push
(bad)
sysexit
fstp
ret
pop
pop
or
and
sub
clc
rol
dec
mov
adc
pop
xor
push
ja
rcr
add
or
cmps
jnp
mov
addr16
add
cmp
test
adc
jns
push
xor
int3
cld
inc
nop
js
movs
scas
add
outs
xor
and
in
adc
cmc
pushf
es
add
outs
lock
xchg
aas
mov
and
ror
mov
xor
scas
icebp
jle
outs
push
jecxz
pop
push
pop
add
add
rcl
not
cmp
mov
retf
ins
mov
jge
add
mov
test
or
jbe
mov
xchg
jg
sub
rcr
or
or
inc
ror
lea
adc
aad
sub
inc
add
movs
ss
dec
jle
outs
jnp
push
mov
mov
xchg
repz
call
lds
test
jbe
inc
js
iret
std
adc
sbb
out
xlat
icebp
add
add
lds
or
adc
xchg
cmp
js
(bad)
cmc
xchg
and
in
mov
stos
fucomi
or
and
je
rcr
and
pop
call
mov
arpl
call
mov
xchg
or
inc
cwde
jmp
(bad)
repz
out
sahf
and
mov
jmp
pop
into
and
push
icebp
sub
mul
xchg
xchg
inc
dec
(bad)
adc
sub
mov
ret
jo
and
int3
ins
add
ficomp
and
jg
in
inc
stos
loope
cmp
loope
dec
sar
xchg
fadd
cmp
cld
xor
cmp
ss
std
iret
aad
and
pusha
pop
mul
xor
and
ret
sbb
sub
ret
push
pop
test
jg
(bad)
and
shl
cmp
mov
xor
outs
cdq
in
xlat
in
xchg
sahf
test
or
retf
add
and
jbe
pusha
aam
in
push
cdq
push
aas
mov
fdivr
lock
call
inc
or
cmps
inc
pop
fdivrp
rol
adc
push
mov
cwde
dec
in
and
aas
retf
add
dec
mov
xchg
push
or
call
mov
or
xor
xchg
add
pop
push
mov
mov
nop
pop
shl
sub
sbb
push
mov
jecxz
push
jno
add
fldenv
and
jmp
in
dec
push
or
add
stos
pop
ficomp
mov
dec
sbb
dec
mov
mov
cmp
sbb
cmp
test
repnz
leave
add
test
jmp
inc
bswap
jo
fldenv
ja
hlt
rol
dec
fwait
rol
inc
inc
(bad)
dec
push
adc
sub
fmul
fwait
loope
pop
dec
sbb
lods
fld
cdq
jle
mov
lds
stos
int
in
mov
pop
out
rol
and
xchg
mov
jmp
push
adc
cmp
(bad)
cli
hlt
sub
test
and
pop
aam
cmc
dec
adc
lahf
jno
mov
mov
inc
pop
dec
xchg
push
cmps
sahf
mov
xor
inc
adc
stos
mov
fwait
call
sub
sti
xchg
push
sbb
test
lods
xor
or
or
add
mov
movs
mov
ret
js
or
mov
sub
jb
stos
dec
mov
push
mov
dec
sub
pop
jo
cmp
loopne
inc
and
ins
dec
xor
inc
sti
pop
sub
dec
xchg
or
pop
push
mov
and
aam
mov
sbb
femms
jmp
lahf
jmp
push
pop
stc
enter
test
push
cld
push
push
and
adc
in
push
clc
push
or
std
dec
cmps
xchg
cld
sub
js
sbb
mov
mov
add
pop
into
inc
popa
(bad)
pop
neg
js
pop
mov
jle
fwait
xor
mov
pop
pushf
inc
mov
add
mov
lods
jns
icebp
mov
cmp
cs
push
aaa
frstor
dec
or
inc
in
lahf
pop
mov
cmp
fsubr
movs
inc
mov
mov
xor
gs
and
cdq
jge
js
mov
retf
mov
xor
loope
jmp
(bad)
push
out
(bad)
(bad)
push
push
es
mov
aad
sbb
lock
and
mov
push
cdq
or
pop
loop
out
jmp
mov
adc
cmp
in
adc
inc
sub
(bad)
fucomp
cmp
jo
ja
ret
push
xor
lahf
(bad)
(bad)
pop
jae
(bad)
mov
mov
push
fld
in
in
ins
xor
sub
lods
in
enter
sahf
add
fistp
js
daa
(bad)
cmc
jl
popa
(bad)
pop
fs
icebp
sbb
jmp
xchg
daa
mov
sti
jnp
adc
or
cmp
xor
dec
add
push
push
mov
mov
sti
xor
hlt
les
lods
stos
out
add
jns
pop
test
sbb
data16
ins
adc
jne
scas
add
outs
xchg
jns
push
or
out
repnz
aam
out
repnz
aad
pop
aam
push
sbb
setp
xor
inc
psadbw
(bad)
cmp
mov
jb
sub
xor
jmp
repz
fdiv
push
mov
movs
push
jl
ret
retf
push
popf
out
mov
daa
dec
hlt
jmp
inc
sub
cmc
fnstsw
out
jno
mov
cdq
sbb
add
mov
jp
pop
sbb
fwait
mov
fdiv
scas
fist
mov
ins
retf
fucomi
ds
mov
cmp
mov
ins
test
pushf
mov
mov
mov
pop
push
movs
cli
adc
in
cs
xor
mov
imul
mov
pop
sub
or
cwde
fmul
ja
(bad)
dec
enter
arpl
inc
or
sbb
je
mov
clc
jmp
aaa
adc
in
mov
dec
dec
cmps
imul
xchg
(bad)
int
cmp
scas
push
cmps
pop
(bad)
movs
mov
mov
push
ficom
out
sub
int3
cmp
in
jp
jno
(bad)
imul
dec
div
test
int
and
sub
push
dec
aam
lea
and
in
xchg
fcomp
push
mov
push
popf
ja
shl
das
add
and
test
int3
aam
push
and
dec
aam
sub
push
xchg
mov
cs
push
add
aas
retf
(bad)
jmp
leave
out
frstor
xchg
sbb
cli
(bad)
call
jmp
pop
jae
sub
std
mov
outs
xchg
dec
mov
pop
push
mov
stos
pop
jne
(bad)
std
sub
fldenv
sahf
fmul
ins
addr16
arpl
xchg
adc
leave
mov
cmp
inc
sbb
and
or
aam
adc
adc
cs
imul
jmp
in
and
mov
daa
add
sub
mov
mov
inc
inc
loop
jmp
js
sbb
sahf
mov
in
fisttp
add
dec
(bad)
imul
mov
jle
inc
push
ret
rcl
cmp
jbe
hlt
and
mov
add
inc
add
repz
push
pop
in
mov
test
or
mov
jecxz
xchg
clc
ret
(bad)
lock
dec
jae
(bad)
jg
xchg
and
mov
aas
xor
lock
or
push
and
cmp
sub
sbb
fwait
int3
dec
dec
daa
push
test
or
out
pop
movs
add
das
push
repz
mov
xchg
push
outs
inc
jge
and
in
cmps
cmp
or
sbb
daa
fisub
movs
add
push
cmps
outs
push
ror
pop
jle
adc
hlt
add
dec
stos
pmaxsw
xchg
pop
jno
aas
pop
scas
gs
lds
(bad)
xchg
xchg
adc
outs
stos
shl
mov
mov
into
cmp
loop
sub
dec
push
pop
mov
leave
push
or
mov
or
adc
(bad)
retf
pop
mov
add
pop
adc
cmc
inc
mov
in
nop
pop
cdq
arpl
xchg
add
pop
push
(bad)
in
das
fild
sbb
pop
dec
sahf
fdiv
inc
addr16
cmp
jo
lock
lods
fsub
cmp
inc
sub
dec
pop
lods
mov
(bad)
mov
cmp
add
add
aas
xor
jb
les
scas
xor
std
out
push
sub
push
cmp
mov
out
idiv
iret
es
sub
cdq
jno
and
dec
or
or
jl
js
inc
retf
xlat
addr16
pusha
xchg
in
lahf
in
push
and
mov
dec
cmp
out
fucomip
xchg
sub
stos
sbb
fstp
dec
cmc
leave
into
cmps
push
and
js
dec
push
mov
(bad)
xor
aaa
fucomp
cwde
mov
jg
int
arpl
jbe
dec
cld
sbb
in
out
ror
movs
fwait
std
ds
add
xor
or
inc
clc
fwait
add
sahf
(bad)
xchg
sbb
jle
push
ficomp
js
sub
gs
lea
pop
mov
iret
mov
sub
(bad)
aad
js
jbe
dec
mov
jb
enter
cmp
push
ja
inc
cmps
test
in
and
jl
scas
jns
and
rcl
dec
bound
or
jmp
adc
mov
aas
icebp
cmc
aam
xchg
loopne
mov
icebp
cmc
sti
frstpm(287
(bad)
js
push
push
adc
scas
cmp
es
call
mov
shr
jmp
add
fistp
sbb
push
mov
out
mov
in
ja
push
ss
lods
pusha
jl
fwait
jmp
adc
cmps
xor
inc
mov
xchg
jmp
mov
sbb
ins
stos
cmp
sub
sub
add
adc
rcr
cs
shr
sti
push
jmp
jl
daa
push
clc
aas
or
jae
pop
pusha
retf
add
inc
xchg
jecxz
ficom
cs
push
pusha
dec
cwde
fstp
or
fadd
mov
loope
cmp
fbld
add
dec
dec
ds
and
push
xchg
sbb
sub
jnp
xor
push
push
jg
or
rcl
in
out
inc
push
les
adc
adc
fsub
jns
ret
and
pop
fbstp
ds
mov
test
and
inc
fsub
jmp
hlt
retf
popf
out
adc
fild
(bad)
mov
dec
xor
jnp
xchg
cld
popa
iret
arpl
mov
test
popf
sbb
push
push
in
mov
adc
icebp
call
jne
push
fild
sbb
cmp
int
cmps
pop
cmps
xchg
sbb
test
or
push
dec
rcl
(bad)
data16
ins
mov
repnz
ja
jne
push
jnp
pop
xchg
mov
xchg
inc
dec
stc
stos
outs
stos
pop
mov
add
aad
hlt
inc
cwde
inc
mov
mov
mov
xchg
mov
xchg
cmp
jne
xchg
cmp
push
dec
mov
lahf
adc
jb
cdq
or
das
test
mov
fld
arpl
add
adc
jbe
scas
xchg
sbb
in
xchg
dec
ret
stc
cmps
cmps
push
jp
not
dec
or
xchg
push
lea
mov
cmc
fsubp
in
adc
adc
cmp
jmp
mov
fiadd
xchg
cmp
sbb
lods
sbb
pop
rcl
call
xor
mov
inc
cmpxchg
push
repz
and
out
lods
mov
sub
shl
mov
movs
inc
fidivr
lock
mov
push
xlat
and
mov
loopne
popa
pop
cdq
mov
fcmovbe
push
loopne
(bad)
int3
scas
lds
jbe
push
jno
adc
mov
and
shr
cmp
and
inc
ror
(bad)
jmp
inc
xchg
mov
pop
aad
stos
mov
out
sub
jge
mov
sbb
xor
pushf
push
xchg
sub
push
cmps
xor
mov
shl
jl
and
push
jmp
cmc
xchg
leave
loopne
outs
loop
mov
mov
mov
popa
cdq
pop
js
jg
out
rol
aas
dec
repz
scas
pop
daa
add
mov
rol
test
fdivr
add
stos
js
cmp
pop
jecxz
test
mov
add
xor
es
fcmovnb
enter
fwait
sub
sti
loop
mov
inc
rol
sub
stc
mov
ja
int
mov
pop
ret
jns
mov
mov
lea
jne
ret
dec
pop
dec
mov
fist
out
mov
inc
les
mov
cmp
dec
nop
inc
push
ins
mov
inc
push
xor
loopne
dec
popf
fsubr
das
fimul
push
and
cmp
(bad)
inc
cli
fisub
aam
push
dec
sbb
mov
es
fnstenv
cld
cmp
ss
adc
addr16
out
mov
dec
mov
xor
not
(bad)
addr16
stos
push
dec
add
adc
outs
hlt
cmp
and
clc
push
cmp
xchg
mov
dec
je
push
dec
inc
xchg
xsavec
je
cdq
jl
sub
sub
gs
in
jbe
push
lahf
in
fcmovb
sub
sti
lahf
dec
ins
adc
jmp
(bad)
xchg
test
test
cmp
push
(bad)
cmp
in
sub
test
jecxz
sub
aad
clc
mov
in
mov
imul
mov
push
dec
push
outs
sbb
push
in
jecxz
mov
mov
stc
pop
sub
and
sahf
xor
jl
retf
fbstp
mov
cmc
ds
pop
test
aad
stos
sub
mov
gs
mov
jl
outs
clc
out
icebp
pop
mov
les
mov
jl
inc
pop
mov
jnp
or
std
or
fs
std
mov
loope
mov
aad
fadd
call
mov
mov
test
ins
out
fisub
in
add
test
scas
lea
pop
fdiv
fsub
aas
pop
sbb
inc
jmp
data16
dec
enter
enter
(bad)
jge
mov
mov
pusha
ret
scas
pushf
mov
adc
xchg
xchg
std
or
mov
xor
hlt
or
int
mov
jecxz
and
pop
jl
mov
and
jp
mov
(bad)
fdiv
das
daa
mov
push
push
pop
sub
jp
pop
add
or
movs
sahf
mov
loopne
add
daa
cld
(bad)
fidiv
mov
jne
mov
(bad)
(bad)
(bad)
cmp
cmp
aaa
test
in
adc
mov
sub
pop
adc
sub
sub
cmps
mov
(bad)
bound
(bad)
iret
pop
int3
std
xor
or
out
jecxz
jl
les
gs
das
mov
jbe
pop
test
xchg
aad
out
push
aaa
loopne
inc
ret
fbstp
jecxz
pop
xlat
hlt
push
lods
add
sbb
cmp
add
inc
je
jge
loope
and
dec
test
adc
mov
mov
xchg
xor
jnp
or
aaa
sbb
dec
inc
mov
aaa
pop
jle
xor
dec
add
adc
cmp
push
cmp
stc
xor
and
jecxz
add
loopne
pop
clc
sub
loope
and
xor
mov
sbb
data16
adc
clc
xchg
fild
mov
jmp
addr16
adc
sub
stc
in
xlat
sub
imul
inc
sbb
inc
ficomp
jmp
aam
cmp
push
xor
cmps
gs
cmp
push
out
aad
sahf
jns
retf
shl
ror
lods
and
lock
daa
in
std
retf
sar
imul
bound
pushf
and
add
add
pop
xchg
adc
retf
cmp
push
int3
and
(bad)
push
retf
ss
cdq
push
xor
add
into
fimul
fs
test
jmp
out
mov
mov
ret
in
test
and
in
push
lods
(bad)
add
dec
bound
xor
out
ror
pop
(bad)
inc
test
retf
jns
mov
inc
jg
in
inc
out
clc
stos
pushf
sti
dec
outs
fmul
ret
push
(bad)
inc
cmp
dec
and
mov
stos
ds
xchg
cmp
push
call
jmp
popf
mov
sahf
test
adc
adc
dec
jmp
dec
movs
in
xor
lea
cmp
mov
pushf
fcomp
sbb
ins
retf
inc
repnz
in
and
std
jne
hlt
jle
jmp
shl
push
repnz
not
or
sbb
adc
sahf
fbld
push
mov
add
mov
das
adc
adc
xor
push
pop
jns
dec
(bad)
push
inc
aam
aaa
push
sbb
loop
jg
out
pop
ds
std
or
sbb
lods
cmps
add
call
sbb
pop
jnp
inc
and
push
cli
arpl
stos
mov
mov
daa
sbb
mov
sbb
out
adc
(bad)
in
jno
adc
ss
mov
enter
cwde
mov
or
fnstenv
inc
(bad)
cdq
lea
(bad)
icebp
lea
ja
popf
cmp
and
push
add
mul
mov
push
ds
aad
mov
stos
fsubr
jp
(bad)
mov
stos
call
and
cmp
or
call
xchg
jnp
inc
add
leave
and
xor
mov
jno
ins
daa
sub
xor
cdq
add
mov
pop
adc
mov
stc
fwait
mov
push
cld
xor
ficomp
xchg
dec
out
fidivr
sti
mov
out
scas
jne
pop
retf
shl
les
bound
aaa
lods
push
shl
xchg
pop
or
or
sub
(bad)
inc
mov
jp
ret
mov
test
inc
dec
pop
aad
inc
mov
cmp
fdivr
cmp
stos
and
jle
push
jecxz
(bad)
adc
jb
sub
pop
mov
fistp
pop
jnp
or
jno
into
jmp
add
cmc
hlt
nop
push
push
adc
push
adc
mov
fs
pop
pop
xor
hlt
dec
mov
mov
push
push
jmp
loop
cmc
mov
pop
(bad)
mov
ss
push
push
cmp
push
rcr
hlt
pop
cld
mov
dec
js
sbb
out
arpl
icebp
cwde
inc
pop
mov
aam
movs
test
xor
mov
mov
jl
jo
fadd
and
add
add
push
mov
xor
inc
cld
sbb
je
(bad)
imul
add
repnz
jno
mov
pop
cmp
cmps
ds
cmp
mov
xchg
xchg
lods
fisub
aas
div
ss
outs
call
jno
add
repnz
jmp
xchg
aam
jbe
and
popa
or
adc
call
ins
gs
out
les
ret
cmps
add
lahf
xor
lods
mov
inc
ficomp
jne
mov
xor
jb
xchg
adc
mov
or
cmp
push
loope
mov
jae
sbb
pop
add
call
movs
imul
fimul
inc
jb
lock
scas
sti
mov
or
push
retf
aad
ret
push
call
js
je
cwde
mov
pop
dec
test
icebp
loopne
push
aam
fs
int
push
cmp
jmp
jo
fisub
call
inc
xor
inc
loop
jns
(bad)
mov
sub
push
xchg
mov
ins
lods
repz
jb
int3
sub
mov
jge
test
fist
je
dec
dec
sub
not
imul
in
fs
sbb
clc
xchg
dec
push
and
in
(bad)
iret
call
adc
dec
clc
int3
movs
popf
paddd
popa
xchg
stos
xor
imul
mov
int
adc
inc
jne
in
cmps
inc
jns
pop
je
test
stos
retf
adc
int
sub
mov
jecxz
mov
ffreep
cli
pushf
xchg
add
and
and
leave
aam
test
or
sbb
xchg
jecxz
push
js
pop
je
or
sub
sbb
or
mov
sbb
jns
mov
jno
sbb
or
adc
outs
jne
sar
inc
mov
rcr
adc
jb
lahf
imul
ret
adc
in
xchg
dec
push
lock
mov
cmp
sbb
mov
(bad)
ret
pop
aad
inc
scas
inc
fs
mov
test
sbb
cmc
jo
cmp
or
mov
sti
call
add
sub
into
mov
popf
mov
dec
cdq
imul
mov
aad
mov
in
dec
test
dec
adc
imul
pop
push
cld
ins
call
add
mov
dec
dec
push
inc
addr16
sub
xor
dec
mov
ss
cdq
pop
movs
xor
cmp
cwde
sbb
push
in
mov
pop
nop
adc
cs
cmps
in
add
jbe
jns
dec
(bad)
cmp
cmp
cmp
add
nop
cmp
or
cmp
loope
and
xlat
jne
mov
cmp
jo
cmp
inc
inc
inc
retf
push
adc
les
mov
les
inc
clc
unpcklps
cmp
pusha
daa
cmps
jecxz
test
jae
lea
mov
stos
add
adc
and
loopne
mov
xchg
(bad)
inc
inc
test
fiadd
push
mov
subps
retf
test
loopne
lahf
out
dec
pusha
(bad)
icebp
leave
jns
mov
add
mov
inc
pop
push
cmp
inc
cwde
out
lahf
sub
push
pop
push
or
out
sub
push
push
std
stos
cmp
movs
imul
loope
movs
adc
or
out
rcr
mov
mov
rol
dec
pop
mul
mov
jle
cmp
sbb
call
daa
fsubr
call
push
test
push
sub
sbb
test
daa
xor
mov
cmp
fsub
mov
xchg
push
sbb
jge
dec
push
pop
sub
cmps
cdq
push
and
(bad)
jns
sbb
nop
and
mov
ror
out
bound
sub
and
xchg
push
popa
inc
add
loope
js
push
jl
ja
mov
or
push
pop
pop
inc
div
mov
cmp
pushf
pop
lods
push
add
rol
adc
mov
xchg
push
adc
and
dec
jge
xor
dec
sub
push
ins
inc
cdq
or
push
mov
in
(bad)
popa
int
out
jmp
and
fisubr
jnp
das
sub
sbb
in
sbb
movs
rol
inc
mov
and
sub
cld
repz
retf
dec
ins
loope
pushf
add
xor
ds
sub
loopne
sgdtd
mov
inc
fcmovne
sbb
in
cmps
or
adc
jp
xor
add
lods
cmc
sti
bswap
dec
inc
movs
aam
inc
int
dec
jl
mov
(bad)
pop
push
(bad)
mov
call
inc
inc
or
rol
outs
cwde
cmp
icebp
popa
lock
fwait
hlt
in
sub
ret
imul
loop
pop
adc
pushf
imul
jno
mov
sbb
cmps
xchg
cwde
mov
pushf
or
xor
cli
jb
lds
pop
mov
in
jne
retf
dec
xchg
cmps
adc
cmps
aas
sbb
jb
cmp
std
xchg
into
aaa
test
rcr
xchg
mov
icebp
pop
fsubr
(bad)
mov
jge
cli
in
retf
mov
sti
and
and
mov
xchg
out
xor
mov
push
stc
xchg
movs
fwait
cwde
call
mov
jbe
xor
or
add
ret
mov
inc
xor
aaa
and
and
adc
xor
repnz
ss
dec
xchg
bound
and
mov
ins
ins
clc
enter
sbb
sub
shr
xchg
push
scas
and
and
stos
(bad)
jmp
or
cmp
ficom
rcl
sbb
cld
add
aam
ins
xor
mov
cld
push
shl
cwde
mov
mov
sbb
sbb
xchg
dec
xchg
cmps
imul
outs
sub
mov
movs
inc
pop
or
test
arpl
fs
leave
fwait
mov
arpl
push
mov
adc
push
mov
xor
jg
dec
xor
add
xor
mov
mov
outs
mov
leave
enter
cmp
mov
and
loope
mov
xor
push
add
hlt
cmp
cwde
pop
imul
add
jle
ins
jge
sti
sub
out
mov
mov
out
popa
sub
daa
rcl
xchg
hlt
retf
pop
push
push
rcl
pop
test
jo
and
test
add
and
call
vpmaxub
jle
call
inc
ret
loop
jae
mov
and
cmp
jg
push
jns
mov
ja
stos
xchg
mov
test
ss
cdq
pusha
mov
shr
inc
lea
jmp
mov
sub
xchg
ret
ret
dec
mov
push
pop
pop
jno
add
add
cli
(bad)
push
fmul
scas
xchg
inc
push
in
mov
sti
fild
sbb
retf
ret
call
sbb
dec
cdq
out
xchg
outs
jle
sbb
hlt
jmp
mov
fnstcw
jns
sub
mov
fs
dec
outs
jmp
push
push
lock
mov
cmp
jb
adc
mov
or
jne
sbb
mov
(bad)
movs
jo
(bad)
ret
mov
cmp
and
loopne
cmp
jecxz
lock
test
fimul
push
jae
scas
cmp
std
or
or
in
jnp
mov
and
push
dec
mov
mov
dec
movs
inc
cmp
jb
xchg
pop
imul
cmovne
aad
sbb
mov
mov
mov
push
repz
arpl
enter
fimul
sub
in
add
xor
pop
sub
jecxz
xor
addr16
mov
mov
(bad)
inc
cli
out
mov
xor
scas
and
repnz
cs
pusha
ret
xor
fwait
jo
sbb
jecxz
in
add
jg
sti
mov
dec
cmp
std
push
stc
cs
ins
push
stc
pop
xchg
inc
and
shl
xchg
jne
fs
ds
or
gs
stc
mov
popa
xor
sahf
or
inc
cmc
jecxz
and
jg
push
mov
xchg
fwait
pop
or
xor
sbb
jg
(bad)
mov
mov
xchg
xchg
or
(bad)
lods
and
ja
cmp
sbb
mov
sti
retf
add
or
cmc
test
sub
push
(bad)
jmp
cmp
pushf
mov
test
idiv
add
mov
inc
(bad)
pop
aad
jae
inc
mov
repz
jno
sub
pop
cmp
pop
inc
sti
cwde
inc
retf
ins
sbb
mov
stos
sbb
push
jo
fchs
arpl
arpl
push
push
(bad)
call
mov
lahf
mov
dec
xor
cmp
jae
pop
push
sbb
mov
je
cs
in
shl
pushf
sahf
shr
inc
in
cmp
and
push
loopne
adc
retf
shl
push
xchg
sbb
sub
sub
rcl
xor
jae
(bad)
adc
mov
mov
retf
mov
pop
mov
jmp
rcr
jbe
cmps
movs
mov
sbb
cld
or
lods
in
sub
cmc
out
mov
xchg
push
mov
addr16
xchg
fist
jne
in
or
sbb
sar
in
ja
mov
call
cmp
sbb
mov
data16
push
repnz
push
sub
pop
mov
add
xchg
loop
(bad)
shl
movs
call
in
pop
pop
jo
fbstp
fimul
cs
add
or
into
push
mov
and
pop
sub
jns
xor
sub
jl
cli
mov
jg
jmp
loopne
xor
jo
sbb
jnp
mul
sub
mov
xor
or
jge
xor
into
(bad)
(bad)
fucom
mov
sub
test
ins
not
arpl
mov
cmp
push
repnz
sub
dec
sbb
inc
push
js
out
push
imul
test
mov
mov
jge
loop
jbe
and
imul
js
push
xchg
xchg
repnz
jne
lods
fidiv
mov
je
retf
mov
(bad)
jnp
cmp
adc
aad
mov
shl
dec
ror
xor
fwait
sub
cmps
jnp
ins
mov
and
js
fmul
pop
pop
ds
and
pop
jae
mov
mov
mov
lods
adc
push
pop
mov
sbb
lea
icebp
mov
jp
adc
and
arpl
lock
adc
dec
adc
jecxz
mov
jb
cmp
mov
xchg
xchg
movs
sub
pushfw
retf
fdivr
xor
dec
mov
mov
inc
out
mov
xor
shr
mov
jo
push
and
pop
xchg
ffreep
adc
push
out
fldcw
push
add
sti
popf
xor
or
sahf
or
jp
scas
mov
sub
(bad)
mov
sahf
mov
neg
lods
inc
outs
mov
inc
movs
xchg
sbb
fild
cmp
add
(bad)
cmp
movs
jg
mov
out
fmul
popa
loope
add
movs
mov
ret
dec
mov
mov
daa
out
addr16
mov
cli
mov
or
ins
inc
sbb
popf
mov
mov
int
test
int
mov
ins
shl
aam
bound
sbb
enter
out
or
pop
xchg
add
bnd
adc
out
loopne
inc
jl
ja
ja
xchg
adc
push
jb
int
ins
mov
cwde
mov
jae
cmps
mov
jmp
adc
ror
and
mov
xor
sbb
mov
imul
push
ret
arpl
jecxz
inc
xchg
sar
xor
push
int
jge
add
lea
sbb
mov
test
daa
(bad)
mov
and
sub
xchg
jnp
jecxz
ja
inc
mov
pop
and
sub
mov
cld
jb
dec
jns
lods
push
mov
ins
sbb
pop
sub
inc
(bad)
fst
aad
test
push
(bad)
sub
jmp
push
fldenv
(bad)
shl
sbb
sbb
out
repz
repnz
add
loop
or
ins
add
add
xor
mov
xlat
or
jg
movs
in
lock
sub
fwait
cmp
xchg
cmp
out
pop
cmps
xor
aad
outs
int3
mov
mov
xor
lahf
mov
xchg
stc
ror
cmps
nop
popa
inc
jl
xchg
fwait
retf
mov
out
cmp
add
or
div
mov
test
jne
dec
dec
pop
cmp
xchg
sub
mov
inc
daa
out
pop
pop
push
pop
aaa
mov
pop
mov
rcr
sub
test
std
push
or
lods
dec
push
jmp
cmp
xchg
sbb
and
xor
mov
dec
cli
fs
(bad)
loope
or
mov
fld
mov
out
mov
or
xchg
shl
pop
lds
xchg
mov
ins
repnz
out
and
lods
or
das
mov
mov
pop
xlat
dec
adc
icebp
aam
xchg
cli
mov
pop
mov
popf
dec
sub
out
mov
bound
imul
and
push
mov
mov
jb
mov
xor
pusha
fnstsw
cmp
cmps
pmulhw
outs
(bad)
nop
sahf
into
fdivr
mov
or
and
sbb
sub
push
cmps
mov
push
fcomp
fnstsw
dec
or
mov
pop
sub
addr16
cmps
jl
mov
call
jge
js
push
pop
push
enter
xchg
cmp
ins
dec
clc
int
cli
hlt
pop
outs
sbb
mov
scas
sub
adc
out
adc
mov
adc
fnstenv
iret
dec
cli
in
cmc
xchg
inc
mov
and
mov
push
int3
mov
arpl
mov
aaa
loope
xor
cmc
push
rol
imul
xchg
mov
push
adc
mov
sub
cli
and
fwait
add
fs
movs
outs
push
jg
adc
jl
jae
cmp
mov
into
cld
mov
mov
pusha
mov
iret
addr16
lds
push
mov
mov
cli
sub
add
sub
mov
test
std
and
add
scas
xor
xchg
adc
jg
or
inc
mov
inc
push
jo
test
hlt
rcl
in
scas
out
(bad)
rol
dec
jns
push
mov
and
cdq
jne
retf
scas
loopne
cmc
repz
inc
mov
mov
pop
xor
pop
out
and
jl
enter
in
cmps
fistp
pop
imul
mov
arpl
jmp
popa
sub
mov
iret
pop
les
leave
jmp
inc
fsub
inc
pop
dec
imul
mov
sub
adc
aam
gs
loope
ret
push
jl
in
ins
jle
push
sub
cs
cli
mov
and
adc
sbb
or
out
rcr
scas
std
jb
pop
xchg
sahf
fsub
ins
ins
sti
cmp
sti
in
add
or
in
sbb
cwde
test
and
mov
ja
retf
cmps
addr16
or
popa
dec
pop
jnp
pop
mov
aaa
rcl
lods
mov
cmp
js
mov
jbe
sub
xchg
inc
sub
ret
push
pop
mov
sbb
sti
mov
imul
leave
repnz
std
(bad)
push
fnstcw
jmp
test
(bad)
pop
adc
lahf
sbb
xchg
or
popf
(bad)
jmp
vpackssdw
xchg
cmc
pop
(bad)
std
ror
xchg
adc
pop
mov
hlt
inc
and
fwait
adc
out
push
inc
or
dec
aad
sub
adc
jne
out
les
jne
test
inc
fist
ror
div
cs
jbe
(bad)
ds
nop
inc
rcr
mov
xlat
aam
cdq
push
push
sub
fld
test
lds
xlat
ret
inc
mov
cmps
arpl
aam
push
pushf
ins
dec
adc
adc
iret
loope
mov
inc
out
inc
pop
in
mov
jne
bound
or
cwde
xchg
test
push
sub
and
mov
push
cmps
cmc
test
cmp
je
sub
mov
dec
addr16
cmp
fld
in
cld
dec
cmp
mov
loopne
mov
cmp
test
xor
loope
add
jle
sub
into
sub
mov
and
sub
(bad)
aad
shr
jae
and
push
adc
cmp
pop
fstp
mov
and
imul
inc
push
inc
sub
push
mov
ss
lahf
mov
mov
movs
or
pop
lds
ss
loopne
das
lods
cld
xor
jg
lods
pop
mov
add
aaa
xor
cmps
hlt
xor
xchg
aaa
clc
outs
xor
nop
xor
dec
pop
ficom
and
push
es
or
jbe
jno
shl
ficomp
cmps
ja
jp
shl
pop
(bad)
adc
xchg
out
pushf
inc
ins
add
push
imul
add
retf
mov
repz
adc
sbb
sbb
ss
pushf
es
add
aas
ins
into
ins
mov
xchg
stc
lahf
mov
add
test
out
adc
add
into
jl
jl
xor
test
or
pop
(bad)
out
test
mov
in
pop
jno
add
xor
xor
push
cmps
clc
loopne
nop
or
in
pop
stos
or
or
je
sub
mov
(bad)
push
mov
cmp
std
xor
loop
mov
out
daa
dec
ret
imul
jle
test
push
out
mov
les
or
xlat
sbb
call
adc
cmps
ret
ins
mov
sahf
sub
loope
sbb
adc
cmp
and
mov
ins
cmps
pop
push
rcl
pop
jae
mov
popa
js
push
jge
cmc
call
mov
or
ret
adc
in
mov
mov
push
test
xor
pop
and
or
clc
add
rcr
ret
iret
popaw
fiadd
mov
pop
retf
imul
sbb
std
aaa
cdq
xchg
into
shr
in
pop
mov
mov
loop
jle
mov
in
or
sahf
lds
jecxz
shl
dec
enter
xchg
imul
cmp
push
loop
fadd
fld
push
fisubr
jo
jmp
pandn
rol
aam
dec
lds
push
xor
and
pop
add
cmp
push
inc
nop
ss
outs
jne
cmp
test
dec
jno
cmp
scas
loop
leave
loopne
out
sub
out
ror
popf
xchg
cdq
mov
test
adc
jno
fwait
std
jo
mov
(bad)
mov
scas
lock
push
pushf
out
and
mov
sti
mov
dec
aad
arpl
test
push
pop
mov
jns
xor
iret
repnz
dec
jns
fs
shl
mov
xchg
jecxz
mov
push
imul
push
retf
scas
push
outs
ss
pop
js
sahf
call
and
or
dec
xchg
fnclex
gs
push
mov
pop
or
rol
arpl
dec
push
mov
aam
mov
ins
xchg
dec
mov
mov
sbb
push
jl
out
ret
in
and
pop
test
mov
xlat
push
ret
sahf
test
mov
popa
div
xchg
pop
cmc
lods
pop
pop
fwait
inc
shr
mov
stos
sbb
jge
sbb
xor
pop
mov
dec
mov
adc
jne
jmp
adc
xchg
scas
loop
jbe
xchg
mov
iret
(bad)
mov
or
jnp
cli
pop
int3
arpl
xlat
sub
pop
push
mov
in
fidivr
pop
not
xchg
sbb
pushf
cwde
stc
or
mov
(bad)
mov
je
cmps
or
add
pop
xchg
xchg
adc
cwde
xor
loop
add
xor
jl
rcr
inc
sbb
stc
or
push
jp
stos
daa
aad
cmp
mov
inc
mov
xor
jle
ins
jb
xchg
sbb
lsl
int3
xor
push
(bad)
cmc
lahf
mov
dec
xlat
stc
cli
mov
loope
or
je
and
dec
call
sub
data16
jmp
(bad)
mov
add
shl
retf
pusha
mov
pop
pop
and
add
mov
das
mov
loop
cmp
jmp
int
out
mov
pusha
popf
outs
(bad)
jl
lods
push
mov
shl
out
movs
pop
ror
xchg
or
fstp
pop
lods
sbb
xor
pop
(bad)
cli
out
gs
add
xor
ins
lock
dec
ss
push
mov
and
int
outs
mov
jp
sti
pop
mov
ret
jno
cmp
js
fdiv
daa
sbb
cmps
out
loop
xor
adc
push
xchg
mov
push
cmp
(bad)
call
or
or
jmp
xlat
xchg
xchg
pop
cmp
movs
or
out
jno
inc
cmp
imul
push
pop
lea
jg
je
or
push
sub
(bad)
pop
call
xchg
mov
aaa
push
retf
shl
ins
in
leave
dec
mov
or
ja
sub
jmp
mov
sbb
or
add
arpl
mov
loopne
int
or
sahf
fwait
retf
(bad)
push
loope
adc
sub
stos
aaa
addr16
shr
bound
mov
jmp
fdivr
outs
ss
pop
pop
outs
inc
mov
mul
cmp
sub
pop
(bad)
sbb
out
out
test
popf
mov
push
push
sub
rol
loope
push
out
xchg
push
(bad)
fldenv
jns
retf
fsubr
lock
sbb
pop
out
mov
(bad)
xor
mov
(bad)
or
inc
dec
mov
fcom
or
sar
(bad)
mov
sub
push
jecxz
mov
xchg
leave
adc
cld
and
xor
mov
sub
xchg
inc
xor
sbb
(bad)
dec
int3
lea
shl
sbb
daa
pop
rcr
leave
shl
mov
int3
std
gs
sub
adc
push
xchg
mov
arpl
xor
addr16
adc
jne
xchg
cmp
sbb
outs
movs
sbb
frstor
mov
scas
imul
lea
pushfw
cli
add
mov
fdivr
dec
adc
retf
push
scas
pop
repz
xlat
adc
pop
cmp
push
jno
jae
xor
mov
jno
test
or
sbb
pop
ins
jmp
clc
and
out
ja
loopne
jge
mov
cmps
ret
jnp
jnp
and
xchg
(bad)
jmp
mov
call
push
leave
enter
leave
push
lds
jbe
xor
ds
retf
push
sbb
in
aas
cmp
mov
push
sub
stos
mov
dec
xchg
mov
aam
lock
test
call
or
ins
pusha
dec
push
or
inc
test
cmps
(bad)
cli
adc
jmp
pop
pusha
retf
mov
and
repnz
into
ds
enter
xlat
jge
and
pushf
jmp
das
mov
scas
mov
fsubr
mov
push
pop
dec
ss
fdivr
sub
mov
mov
cmps
fwait
scas
(bad)
cmp
or
cli
pop
inc
sub
jbe
mov
xor
sub
dec
lds
inc
fsub
cld
or
lock
movs
and
jp
into
mov
xchg
stc
push
inc
out
dec
js
(bad)
jmp
mov
call
or
in
xchg
test
loopne
dec
push
retf
mov
or
cmp
int3
jge
fstp
adc
and
mov
les
shr
outs
rol
cwde
cmp
or
pop
leave
sub
inc
mov
mov
idiv
pop
repnz
push
enter
ret
popa
sbb
cmp
in
mov
sub
xchg
not
call
push
mov
dec
aad
fdivr
mov
imul
sub
or
iret
es
sub
jmp
fnsave
leave
cwde
rcr
or
mov
(bad)
dec
sti
(bad)
cmps
mov
sti
pop
loopne
lds
popa
and
xchg
and
movs
xor
in
jecxz
div
mov
outs
pusha
ret
adc
int
in
xor
daa
js
mov
jl
inc
aas
pushf
mov
es
enter
fstp
mov
pop
mov
scas
push
mov
movs
pop
ins
push
xchg
(bad)
sti
stc
lea
daa
or
xor
xor
shl
in
xor
dec
ss
sub
inc
mov
test
fldenv
cmp
nop
sti
ss
add
in
pop
mov
push
mov
pop
sbb
inc
or
xchg
loope
scas
inc
xchg
dec
lods
cmp
int
out
add
dec
dec
inc
aam
retf
mov
fadd
pushf
das
ja
(bad)
pop
shl
jo
adc
ret
fild
mov
sub
fldenv
dec
call
imul
or
aam
inc
jno
in
inc
test
cmp
sbb
xor
push
mov
adc
test
int
data16
movs
les
sbb
adc
mov
call
cli
xchg
cmps
lods
ja
js
stos
pop
jo
push
outs
sub
xchg
push
test
cdq
fdiv
push
out
xor
sahf
es
jmp
lods
addr16
jnp
jecxz
test
test
inc
in
xchg
lea
jns
mov
fnstsw
dec
and
clc
pop
test
jle
outs
mov
adc
popa
jmp
mov
rcr
fcom
cmp
mul
xor
std
lock
mov
enter
mov
lahf
stc
pop
shl
in
jge
leave
shl
or
lahf
and
call
cmc
jle
jge
(bad)
mov
or
nop
fwait
xchg
adc
lea
adc
(bad)
outs
jno
das
sub
jbe
arpl
jecxz
ret
inc
loop
lea
cdq
and
add
jecxz
inc
aaa
mov
wbinvd
shr
add
or
(bad)
push
xor
pusha
adc
jmp
cdq
pop
mov
cmp
cmp
mov
test
js
cdq
xchg
leave
jecxz
shl
outs
ins
ins
xchg
fwait
cmp
cdq
add
jp
mov
cmc
inc
shr
sahf
pop
dec
mov
sub
(bad)
inc
push
(bad)
outs
adc
dec
std
(bad)
jmp
in
(bad)
repz
xor
xchg
call
ret
bound
mov
stc
shl
or
out
lods
dec
xchg
in
int
xor
adc
sub
into
mov
das
mov
jg
dec
mov
hlt
xlat
movs
aas
stc
inc
cs
add
jb
movs
das
lahf
jne
ins
add
jno
xchg
(bad)
outs
sbb
call
popf
jp
rcr
out
inc
jecxz
xor
(bad)
mov
retf
inc
push
outs
lahf
mov
sbb
dec
cmp
outs
not
and
add
ins
cmc
test
shl
call
loope
ja
xchg
jb
cmp
cmp
inc
enter
mov
popa
rcr
xor
fwait
shl
cmp
xchg
xchg
lahf
mov
mov
dec
xchg
test
loop
jle
ja
repnz
or
call
inc
mov
inc
push
fs
push
cmp
xor
mov
loopne
push
mov
int
adc
or
in
aam
sub
(bad)
(bad)
add
rcr
loope
out
inc
sub
push
ins
pop
sbb
loope
push
sub
in
xor
inc
cmp
push
aaa
mov
test
dec
jmp
loop
test
(bad)
jae
jl
push
iret
jge
int
les
sub
mov
out
or
mov
pop
push
xchg
cdq
adc
outs
stos
(bad)
test
cmps
inc
(bad)
or
push
jmp
pop
dec
add
neg
or
in
xor
bound
(bad)
adc
xchg
or
mov
(bad)
dec
inc
iret
fbld
inc
fdiv
mov
pop
and
shl
fwait
push
cmps
push
dec
and
les
fs
jnp
add
push
mov
push
lods
idiv
popf
xlat
cmc
push
fnstcw
nop
adc
or
sbb
repnz
or
mov
fimul
and
stos
pop
jmp
push
sub
aaa
es
cmp
retf
nop
push
mov
aad
pop
xor
leave
push
popf
sti
adc
lods
cmp
test
xchg
dec
mov
mov
mov
xchg
(bad)
push
jns
sub
adc
pop
pushw
jg
rcl
mov
sub
adc
js
xchg
lods
popf
adc
xchg
xchg
retf
inc
inc
mov
or
outs
addr16
dec
and
imul
adc
movs
fs
mov
cmps
xlat
loop
xchg
ror
mov
or
int
inc
cmps
pop
xor
ss
mov
(bad)
xor
dec
jae
jp
or
out
inc
test
test
ficom
push
cmp
mov
xchg
mov
faddp
(bad)
jmp
frstor
scas
adc
push
es
(bad)
ror
fidivr
ror
mov
call
cs
cmp
push
cmp
movs
add
mov
mov
imul
lds
pushf
mov
xor
and
push
mov
nop
cwde
sub
daa
jne
mov
ins
add
mov
mov
dec
add
xor
push
adc
and
retf
dec
data16
loopne
ret
mov
cmps
and
xchg
and
sbb
push
add
out
in
add
mov
mov
popa
adc
mov
mov
pop
sub
loope
sub
lea
gs
mov
adc
xlat
out
fistp
jbe
data16
stc
fild
jnp
cwde
mov
inc
out
push
cli
retf
icebp
fstp
add
xor
repz
push
mov
test
mov
das
mov
mov
ss
bound
jp
dec
xchg
imul
sbb
inc
push
popa
hlt
popa
lock
(bad)
aad
xor
(bad)
sub
sahf
xchg
and
xchg
sub
jns
cmp
hlt
out
in
cld
lea
scas
aad
inc
cmps
mov
add
ret
in
pop
and
mov
jmp
xor
jbe
jb
cmp
jmp
clc
jge
and
mov
xor
mov
jge
push
out
pop
mov
sub
jno
call
push
je
and
push
int
pushf
dec
mov
mov
xor
lock
push
cmps
dec
dec
mov
mov
sbb
fs
mov
test
popf
or
push
cmp
pusha
dec
lds
(bad)
mov
(bad)
lea
sub
fidiv
cmps
loop
es
jae
mov
mov
jno
in
cmc
aaa
retf
push
lods
jns
mov
mov
scas
push
jmp
mov
and
dec
test
dec
mov
in
iret
sbb
lods
(bad)
(bad)
xchg
and
push
mov
stc
add
push
popa
mov
mov
(bad)
fucomi
enter
add
xlat
mov
dec
ss
jae
(bad)
cwde
arpl
clc
mov
jle
pusha
xchg
retf
push
mov
mov
add
cmp
pop
adc
inc
push
add
mov
repnz
xchg
scas
cmps
iret
sbb
and
add
iret
push
jo
ja
or
adc
(bad)
fmul
xchg
xchg
jecxz
inc
push
push
in
(bad)
and
inc
jae
mov
push
sub
es
out
push
cmps
sub
sub
fild
fs
shl
ret
push
mov
js
repnz
in
jno
jo
ss
and
xchg
pop
dec
jo
pop
scas
mov
xor
add
stos
imul
xor
test
out
xlat
std
(bad)
into
cmps
mov
aaa
add
sub
pop
and
cwde
neg
int
mov
retf
dec
ret
pop
adc
dec
sbb
add
ss
mov
push
push
cli
sahf
pushf
into
mov
sbb
dec
repnz
mul
and
xchg
add
imul
or
push
mov
loope
mov
sub
ds
mov
pop
out
mov
cmc
cmps
mov
cmps
sub
shl
dec
pop
mov
pop
bound
add
jp
mov
push
jae
loop
dec
cs
push
fld
pop
aas
push
mov
xchg
and
inc
jl
arpl
xchg
mov
lds
out
mov
fild
ror
jae
xchg
mov
ins
inc
dec
aam
rcr
mov
repz
test
and
nop
add
mov
or
xchg
repz
bound
push
and
or
cmp
dec
test
int
(bad)
dec
in
and
jae
pop
xchg
cmps
jb
(bad)
pushf
xchg
push
jnp
scas
lahf
movs
jo
bnd
jbe
mov
mov
mov
sbb
sub
test
ror
sahf
(bad)
(bad)
pop
cmp
std
mov
outs
outs
pop
pop
cmp
xchg
jmp
xchg
jecxz
dec
adc
xor
movs
outs
jl
call
retf
inc
xchg
mov
jl
push
mov
dec
pop
mov
popf
mov
mov
ret
bnd
mov
mov
pop
out
dec
inc
fadd
sbb
cmc
jo
dec
cmp
mov
stos
mov
cmp
hlt
push
xor
outs
jmp
cmp
sbb
daa
in
dec
mov
jmp
ins
aaa
push
or
pop
push
cdq
stc
jnp
cmp
inc
test
adc
jno
shr
cwde
scas
fwait
das
sbb
sub
data16
aaa
aam
jge
mov
xchg
shr
xchg
cmp
add
jns
call
push
mov
fs
call
fstp
mul
jae
or
cmp
pop
inc
rol
arpl
add
and
jmp
pop
ret
add
mov
and
rcl
sbb
push
adc
pop
xor
pop
sub
sbb
sbb
add
mov
(bad)
lock
mov
push
fnstenv
test
dec
gs
or
pop
pop
adc
aad
cld
mov
int
jnp
sar
inc
and
push
mov
cmp
push
xor
sahf
rcr
fwait
inc
sbb
sub
pop
xchg
jl
push
scas
imul
inc
mov
jb
inc
lods
test
pop
vpmulhw
loop
dec
fnstsw
(bad)
xchg
jnp
scas
outs
add
jle
arpl
gs
add
sbb
aad
ficom
sahf
retf
mov
cmp
in
cmp
(bad)
pop
call
jp
pop
stos
or
js
lods
test
pop
and
or
and
pop
mov
and
neg
push
cdq
enter
lods
xlat
hlt
sahf
(bad)
dec
jg
bound
and
stc
pop
jnp
or
xchg
shl
xor
jl
sbb
sub
and
push
jnp
out
sbb
jae
pushf
and
sbb
push
or
fs
adc
not
jne
sbb
loope
push
sbb
jecxz
popa
js
retf
mov
push
ins
jg
test
test
xchg
sahf
cmp
or
mov
div
push
push
outs
out
fimul
jle
mov
jnp
aaa
jle
push
push
popa
sub
(bad)
cmp
dec
pop
push
pusha
lahf
or
scas
mov
sbb
fs
fld
sbb
jl
pop
dec
adc
adc
pushf
push
and
jmp
pop
xchg
je
repz
dec
push
push
aas
cmp
inc
je
mov
xchg
dec
popf
fs
aam
mov
inc
add
xchg
mov
xchg
ins
sub
pop
bound
ins
test
aam
pop
cmps
mov
movs
cmc
mov
adc
ds
out
dec
movs
cwde
rcr
cmp
gs
sbb
jno
adc
rcl
mov
inc
jle
scas
lock
add
fldenv
dec
scas
pop
dec
loope
ins
xchg
xchg
mov
psadbw
cmps
outs
das
fcomp
mov
xchg
loop
sbb
test
mov
ret
jmp
int
gs
xchg
jnp
ja
test
mov
add
fdivr
test
bound
loop
fs
lock
hlt
pop
out
xchg
or
mov
(bad)
retf
sti
repnz
cmp
pop
add
add
push
(bad)
pop
mov
xchg
xor
xchg
rcl
xchg
dec
mov
xchg
sahf
adc
pop
sahf
fs
mov
dec
fwait
iret
fistp
add
lock
fild
aam
test
sub
adc
test
call
adc
outs
pop
sbb
pop
(bad)
movs
mov
and
lods
cmp
jecxz
xchg
jg
addr16
mov
in
adc
dec
and
wrmsr
in
sbb
out
cmp
rcl
popf
retf
sahf
stos
cmp
les
sub
sub
(bad)
mov
push
stos
xor
jno
mov
pop
cmc
inc
js
pop
mov
(bad)
cld
dec
xor
jne
jle
(bad)
xor
push
xchg
retf
xchg
mov
(bad)
mov
cmp
mov
dec
pop
mov
and
mov
sbb
jp
inc
fnsave
sub
(bad)
stc
lods
push
mov
and
ds
dec
push
xchg
cld
(bad)
(bad)
mov
pusha
lea
jl
aad
mov
aad
mov
movhps
dec
(bad)
lea
push
or
addr16
jae
and
(bad)
sbb
out
(bad)
xchg
cdq
adc
repz
jg
outs
lea
data16
loopne
push
cmc
jnp
push
mov
dec
mov
push
in
pusha
mov
leave
or
or
sbb
mov
xchg
mov
xchg
sbb
dec
push
movs
mov
in
xchg
jge
aaa
clc
jmp
aad
push
xchg
dec
xchg
mov
(bad)
mov
sti
fcomp
mov
fwait
adc
jmp
inc
add
(bad)
sahf
(bad)
xchg
imul
dec
outs
rcr
out
add
fldl2e
mov
xchg
lahf
xor
in
and
sar
retf
out
arpl
imul
mov
dec
dec
xor
xor
inc
rcr
sbb
cdq
sbb
sbb
ins
mov
sbb
in
jno
aad
jnp
adc
arpl
stos
push
cs
daa
retf
xchg
ins
pop
xor
cmc
mov
and
xchg
stc
pop
stos
adc
sub
jmp
pusha
aam
xchg
xlat
jge
lods
xchg
popf
fstp
arpl
stos
test
les
jne
cmp
inc
enter
retf
out
push
push
cmp
aam
mov
jmp
aam
fild
push
mov
pop
ss
test
loop
push
jecxz
(bad)
fdivr
mov
cmp
and
xlat
fisubr
int
add
sbb
jl
jecxz
test
adc
xchg
out
push
enter
inc
(bad)
jno
dec
mov
push
cmp
add
fsubr
out
daa
add
mov
imul
push
aaa
cmp
and
and
xor
add
add
dec
jae
pop
mov
scas
cmp
xor
sbb
jp
jge
and
adc
ja
sbb
popa
dec
mov
and
mov
inc
dec
jbe
inc
ja
mov
sub
loope
enter
into
jle
mov
nop
out
mov
shr
sti
into
lods
cmp
jp
pop
jg
dec
test
jnp
cmp
dec
ins
pushf
lods
sub
aad
sbb
mov
(bad)
hlt
lahf
lea
test
int3
leave
sub
mov
pop
pop
fidivr
out
push
jno
cli
sahf
sbb
aaa
inc
test
and
outs
aad
mov
popa
pop
test
idiv
push
mov
adc
(bad)
adc
inc
call
adc
loopne
lahf
popa
test
adc
jno
sub
loope
repz
or
pop
in
(bad)
stc
dec
inc
lea
or
or
inc
sub
cmp
popf
add
setnp
frstor
push
pop
push
pop
pop
neg
test
je
test
inc
hlt
icebp
fwait
push
fs
push
sub
ja
and
call
int
js
out
js
aaa
inc
and
ret
and
aas
rcr
adc
jno
sbb
je
push
mov
sbb
mov
jb
loopne
mov
pop
aaa
pop
(bad)
push
adc
xchg
mov
cmp
and
out
shl
jg
push
xlat
or
out
jnp
mov
xlat
jbe
and
mov
mov
pop
pusha
inc
cli
dec
clc
mov
push
aas
sbb
xor
xchg
nop
cmp
sbb
mov
push
sbb
mov
pop
push
daa
(bad)
popa
ds
in
mov
mov
sub
loopne
xchg
mov
pushf
xor
scas
inc
cmp
out
std
cld
in
adc
out
push
inc
(bad)
aad
fld
cmp
xor
movs
sbb
cmps
add
adc
sub
cmp
mov
mov
ds
mov
inc
(bad)
mov
inc
cmc
inc
push
mov
pop
xchg
call
xchg
inc
push
(bad)
adc
and
jne
dec
adc
es
pop
(bad)
mov
add
pop
das
pop
add
pop
outs
adc
mov
dec
mov
(bad)
das
sahf
retf
mov
fstp
xchg
cs
cmc
test
dec
cli
stc
lahf
push
or
and
stc
pop
or
loop
adc
add
mov
repz
lods
jp
sbb
and
cli
fs
test
push
inc
pop
push
push
or
(bad)
push
aaa
fmulp
sbb
fdiv
out
sahf
jl
jno
mov
mov
sub
nop
jle
inc
inc
mov
sbb
enter
mov
cmp
xchg
jmp
sbb
lods
mov
mov
push
sahf
jmp
ret
cmp
inc
imul
or
mov
mov
push
(bad)
push
push
repz
into
push
dec
ficom
mov
push
addr16
test
inc
mov
mov
inc
jae
inc
ins
or
sahf
cmps
and
mov
pushf
add
sub
adc
pop
pop
sbb
cmps
mov
sar
sbb
pop
pop
push
pop
leave
push
xor
out
pushf
sbb
stos
push
mov
cmc
mov
sub
mov
mov
xor
dec
mov
fisttp
sub
pop
push
cld
push
jb
arpl
sahf
arpl
ss
xor
mov
mov
enter
pop
cdq
adc
sbb
mov
mov
dec
mov
jmp
jbe
fucomi
and
xchg
mov
jecxz
in
pop
rol
xchg
inc
push
add
mov
jne
mov
aaa
xor
and
pop
outs
lea
jo
sbb
sub
sbb
fnstenv
mov
xchg
sub
cmp
in
daa
repnz
xchg
mov
mov
push
push
fcom
inc
dec
mov
mov
popf
sbb
pusha
sbb
adc
mov
sar
lahf
xor
jno
sub
rol
xor
jns
fdivr
mov
sub
inc
mov
iret
inc
cdq
das
pop
xor
daa
sbb
out
pop
sub
add
cdq
sub
into
test
clc
arpl
bound
data16
add
fstp
sbb
aad
cmp
xchg
fs
outs
aam
lds
dec
inc
cmp
icebp
mov
sbb
and
jnp
mov
inc
xchg
lea
inc
(bad)
mov
int3
test
cld
and
inc
jle
fcom
jne
das
mov
mov
hlt
sbb
mov
push
jp
push
xlat
jmp
or
je
mov
aas
not
jbe
push
scas
aad
aam
cmps
xchg
pusha
sub
sbb
cmp
into
cmps
call
inc
repz
mov
rcl
mul
sub
inc
sar
addr16
pushf
adc
(bad)
jb
sub
cli
mov
sub
leave
and
out
movs
les
fst
push
adc
pop
call
out
dec
stos
ins
dec
js
aam
repnz
inc
cmp
pop
push
cdq
repnz
outs
adc
xor
dec
xchg
enter
adc
push
(bad)
inc
sub
ficom
(bad)
(bad)
cdq
sub
mov
scas
in
dec
(bad)
cmc
or
cmp
fstp
sti
js
cmp
stc
sbb
dec
mov
mov
cld
cli
jecxz
mov
inc
push
fistp
mov
adc
retf
call
fild
fmul
(bad)
push
cmp
push
jo
dec
retf
div
push
into
and
stos
inc
repnz
pushf
inc
ja
fiadd
test
adc
xchg
xchg
pop
inc
sub
adc
rol
(bad)
push
mov
leave
stc
and
sti
bound
stc
or
mov
mov
xor
sahf
js
pop
scas
mov
mov
or
fiadd
jp
test
out
mov
ret
in
push
and
xchg
and
pop
stc
call
pusha
mov
(bad)
es
jnp
rol
push
lods
pusha
jbe
out
div
lods
outs
mov
push
add
cmp
push
push
loopne
(bad)
pop
mov
xchg
pop
or
add
jmp
mov
fbstp
cld
xor
pop
mov
push
adc
scas
inc
rol
push
add
inc
aam
lock
repnz
scas
les
or
jg
lds
jmp
push
push
pop
and
inc
pop
out
repnz
mov
adc
leave
(bad)
jmp
jns
ins
int3
xchg
dec
mov
mov
ja
xchg
xor
(bad)
sahf
jmp
stos
sbb
(bad)
jecxz
cwde
sbb
(bad)
sbb
pusha
push
test
cmps
in
dec
cmps
fistp
pop
jle
arpl
xor
fsub
xor
cdq
inc
into
sub
mov
or
adc
imul
jmp
retf
arpl
fsubr
xchg
mov
jb
cmc
ror
je
call
out
test
pop
stos
dec
(bad)
fld
cmps
pushf
cmp
out
popa
sbb
ins
mov
mov
dec
movs
jmp
or
out
sbb
dec
data16
pop
(bad)
pop
adc
xor
in
or
dec
shr
xor
push
mov
(bad)
js
xchg
inc
add
mov
sub
dec
add
(bad)
movs
cmps
push
cmc
cwde
mov
int3
push
pop
sar
cmp
lods
into
xchg
pop
gs
mov
rcr
push
mov
mov
popf
or
xor
cmp
adc
clc
cld
adc
ret
gs
jg
push
imul
xor
fist
outs
adc
cli
add
cmc
and
mov
mov
mov
sub
cmp
aam
inc
add
lods
ret
cmps
cmp
ja
xchg
ss
lock
ret
mov
sbb
cmp
outs
test
daa
or
or
pop
add
test
xchg
data16
add
pop
add
mov
in
dec
dec
or
sub
stc
adc
movs
enter
jp
and
dec
fimul
cwde
jmp
xchg
int
sub
mov
mov
fnstenv
inc
loopne
adc
push
xor
adc
push
or
mov
mov
inc
sbb
or
jae
mov
jnp
(bad)
fadd
dec
ins
(bad)
ss
imul
and
push
adc
in
stos
xchg
adc
mov
imul
cmp
fiadd
inc
pop
xchg
div
fcomp
data16
mov
pop
out
dec
sub
inc
ret
fsubr
std
sub
sbb
adc
xor
pop
cmc
test
xlat
mov
push
loope
jl
push
jge
cmp
out
imul
xor
idiv
ins
sbb
dec
and
push
out
punpckldq
inc
mov
addr16
repnz
xor
sbb
cmp
dec
add
pusha
xchg
retf
mov
lahf
dec
cmp
sbb
inc
and
stos
add
test
pop
test
jg
inc
mov
mov
jle
mov
cmp
cmp
call
or
retf
add
repnz
inc
xchg
xor
loop
push
sub
push
fld
mov
sbb
jne
cmps
mov
out
or
jne
mov
push
fld
mov
jbe
dec
jp
aam
xchg
rcr
mov
test
cmc
(bad)
push
(bad)
ror
call
push
pop
push
popf
jmp
mov
cmps
pop
ds
or
call
pushf
outs
test
scas
mov
inc
(bad)
icebp
mov
(bad)
in
rol
mov
xor
lock
call
stos
inc
mov
lahf
xchg
mov
jo
push
shl
jmp
aam
inc
cmp
ja
jno
inc
xor
cmps
je
xor
mov
mov
lahf
out
outs
retf
and
jo
or
xchg
xchg
repnz
ja
test
cmp
loopne
(bad)
inc
loopne
(bad)
inc
jnp
ins
in
xlat
mov
push
dec
add
or
jge
adc
fs
mov
mov
jp
mov
push
(bad)
pop
iret
(bad)
popa
dec
mov
sbb
push
mov
jge
out
sti
push
nop
stos
dec
mov
cwde
jae
jl
fiadd
xor
mov
ficomp
cmp
xchg
int3
mov
jo
lock
iret
movs
fistp
push
sub
out
mov
mov
cmps
jle
mov
jae
rol
in
cs
inc
stos
lds
in
lods
and
cld
gs
inc
inc
test
mov
add
lahf
sub
bound
in
xchg
xor
pop
and
fsubp
sbb
xor
mov
lds
inc
jp
sbb
aas
mov
mov
jae
icebp
out
jae
out
lea
arpl
sbb
ror
push
lods
xchg
icebp
iret
mov
mov
imul
fcmovb
data16
stos
jns
pop
popa
push
dec
push
loopne
push
push
enter
hlt
in
pop
push
fwait
lds
fbstp
inc
cmc
cmps
pop
xchg
mov
into
(bad)
pop
xor
rol
mov
js
pop
push
aam
test
mov
clc
scas
adc
adc
sbb
dec
sub
adc
xchg
nop
pop
shl
dec
movs
or
sbb
sahf
and
aaa
call
daa
dec
je
ret
mov
cmp
and
sub
jmp
ins
and
or
cld
cmp
dec
inc
call
sub
and
pop
xchg
add
jae
mov
(bad)
pop
and
mov
push
and
iret
(bad)
xchg
mov
mov
push
dec
cmps
cwde
cmp
scas
mov
(bad)
fidivr
jbe
mov
cli
mov
sahf
cdq
push
(bad)
in
std
ins
xor
sar
nop
inc
fstp
and
cmp
sbb
pop
addr16
xor
ret
push
mov
add
int3
mov
int
mov
push
ss
in
mov
or
stc
cmp
dec
(bad)
stc
mov
psubusb
sbb
nop
dec
cmp
jmp
sahf
stos
push
cmp
mov
and
mov
or
enter
imul
leave
dec
cwde
xchg
outs
adc
fsub
(bad)
xchg
es
mov
nop
mov
test
dec
jae
js
sub
(bad)
jo
add
sahf
pop
sar
mov
fs
mov
scas
cli
or
pop
inc
pop
push
jno
add
push
mov
and
scas
enter
pop
out
inc
sti
add
inc
pushf
lock
cmp
fiadd
mov
test
fwait
dec
push
mov
(bad)
xor
ins
leave
jno
fs
movs
loope
call
aaa
inc
sbb
ror
lods
jecxz
xchg
dec
fmul
cld
mov
jl
cli
or
int3
imul
les
pop
cmp
push
mov
jne
icebp
das
loop
pop
xchg
xor
lods
test
add
xchg
cmp
shl
xor
int
addr16
inc
cmp
test
sub
jne
lods
mov
dec
xchg
push
or
adc
pop
jl
lds
xor
adc
ss
pop
cmp
rcl
clc
mov
pop
cmp
push
nop
add
pop
xchg
aas
es
mov
pop
push
dec
pop
jmp
lds
aam
dec
pop
dec
pusha
sub
add
(bad)
mov
js
cmp
mov
mov
dec
cmc
imul
jae
xchg
test
sub
jae
mov
jo
cmp
and
mov
dec
mov
(bad)
add
test
or
cwde
xor
pop
xchg
mov
scas
cdq
mov
mov
mov
out
enter
cmp
repz
lea
dec
sub
cmp
or
out
adc
push
or
mov
aad
xor
(bad)
cmps
lahf
repz
or
ins
push
sbb
push
std
inc
cmp
int3
cli
fcom
xchg
test
xchg
xchg
das
jge
pop
push
sub
jg
out
stos
test
adc
and
popa
xor
xor
lock
and
repnz
dec
adc
and
loope
mov
or
and
or
push
sbb
mov
das
leave
or
jns
xchg
jne
inc
jge
in
add
xor
jne
xchg
(bad)
les
jle
xchg
lea
jae
cmp
jns
xchg
mov
bound
nop
and
mov
and
(bad)
sbb
cmp
(bad)
lods
sti
idiv
dec
cld
pop
dec
ins
cmc
dec
push
hlt
movs
jb
and
int
or
addr16
vmovhps
dec
(bad)
or
mul
popf
mov
call
ret
xor
pop
iret
ret
adc
in
mov
inc
mov
ds
aaa
shl
push
inc
cmp
cmp
jg
mov
inc
stos
out
inc
gs
jmp
cwde
dec
fistp
outs
mov
mov
lock
xchg
mov
adc
cmp
or
and
xchg
sbb
push
xchg
xchg
int3
xchg
shl
push
xchg
movs
sub
cmps
mov
fbstp
lock
jg
div
mov
ss
cmp
imul
call
or
fs
jg
pop
push
push
int
pop
bound
pop
push
mov
xor
inc
rcr
mov
mov
(bad)
dec
les
aaa
jmp
fldcw
and
test
clts
xchg
dec
stos
sub
cmp
xor
sti
inc
cmc
fcomp
and
mov
sbb
je
adc
aad
mov
fmul
daa
mov
xor
lock
inc
stc
pop
test
mov
shr
sub
jb
iret
mov
cmp
fwait
sar
lea
(bad)
div
(bad)
fwait
(bad)
cmp
out
movs
gs
jle
add
mov
int
stc
retf
dec
jns
outs
arpl
jns
jno
mov
mov
xchg
push
enter
jmp
cwde
xor
pop
mov
and
sar
(bad)
ds
test
sub
sar
sub
shl
dec
inc
leave
lea
jmp
daa
pop
(bad)
retf
xor
rcr
daa
mov
lea
pop
jge
stc
and
jno
retf
mov
sub
jmp
mov
fld
push
adc
(bad)
jp
ins
into
nop
frstor
shl
in
imul
or
sub
arpl
add
xchg
mov
inc
(bad)
mov
pusha
in
popa
pop
adc
xor
jg
fmul
iret
mov
cli
push
add
adc
dec
int
mov
xchg
into
pop
sbb
mov
pop
ja
shr
icebp
xor
xor
(bad)
sar
xchg
sete
loope
je
and
ret
hlt
(bad)
push
in
mov
neg
lods
sub
(bad)
test
outs
scas
xchg
rcl
scas
inc
call
sbb
push
data16
outs
loopne
sub
enter
pop
in
pop
aaa
or
enter
repnz
jl
and
sbb
or
jp
xor
data16
out
jno
push
and
xchg
test
mov
ss
xor
xchg
adc
in
mov
fprem
cmp
adc
ja
cld
je
fstp
lock
js
push
adc
pop
outs
jb
mov
cmp
shr
add
mov
or
add
ret
icebp
mov
std
jg
mov
in
ja
mov
rol
addr16
fstp
dec
mov
mov
jg
repz
int
xor
push
in
mov
shr
es
xchg
mov
mov
bound
mov
std
pop
dec
out
jnp
pop
clc
ficom
xchg
and
pop
rol
add
mov
jo
out
nop
mov
test
mov
xor
lock
jp
(bad)
jns
cmp
neg
mov
(bad)
fsub
addr16
and
data16
xchg
add
mov
daa
pop
adc
lods
and
mov
and
sub
test
adc
pop
pop
mov
pop
cmps
xor
(bad)
stos
mov
test
sbb
jbe
mov
js
and
xlat
adc
or
int3
js
loopne
mov
add
lock
mov
mov
outs
arpl
shl
cmps
les
add
mov
cmp
xor
push
mov
rcl
clc
sbb
fbstp
lods
outs
cmp
sbb
pop
shl
mov
jnp
mov
jno
enter
pop
jmp
ret
cs
mov
jmp
popw
xchg
push
js
bound
pushf
lods
push
and
adc
clc
sub
in
aam
jnp
fsubr
cli
nop
push
mov
imul
inc
in
pop
scas
ja
mov
stos
xor
pop
jno
in
and
sbb
mov
add
mov
ret
int3
and
push
dec
adc
mov
in
mov
xlat
jmp
jb
push
or
mov
push
test
scas
out
adc
cmp
adc
jge
out
push
mov
(bad)
jae
neg
aad
in
push
xchg
sbb
rcr
fcomip
jmp
gs
dec
aas
das
out
mov
mov
cmp
movs
xor
jno
inc
stc
jge
hlt
mov
jb
jae
mov
jo
jle
mov
xor
test
js
pop
jno
loope
ret
push
(bad)
jmp
in
sbb
lock
push
jmp
icebp
inc
or
add
popa
jae
mov
mov
sti
xchg
sbb
fs
out
bound
xor
das
xchg
mov
out
mov
mov
and
ins
cmp
mov
sub
sti
ret
bound
mov
popf
fucom
mov
in
ins
mov
cmp
sub
dec
call
sbb
call
addr16
sub
mov
fld
xor
jne
adc
fcmovbe
mov
aaa
dec
jmp
out
xchg
loopne
rol
jns
ins
mov
sub
je
fidiv
inc
arpl
(bad)
pop
cmp
jnp
popa
mov
mov
or
jbe
jge
mov
sub
sbb
jge
test
call
add
jnp
jnp
cli
int
push
xor
fidiv
lods
stos
adc
adc
add
jns
shl
addr16
add
retf
addr16
pop
add
xchg
stos
jl
add
cli
ds
xlat
into
leave
mov
repnz
scas
ins
or
retf
xor
cld
cmp
push
cmps
inc
sti
not
dec
dec
(bad)
fwait
lea
out
stos
lods
cmp
inc
sahf
xchg
mov
push
test
cmc
or
push
mov
or
ror
cs
mov
push
mov
add
mov
xor
mov
aaa
shl
jp
cmp
outs
inc
mov
push
jl
sbb
(bad)
sbb
xchg
sub
and
or
dec
sbb
pop
add
hlt
fistp
(bad)
stc
pop
mov
dec
enter
pop
add
and
xor
stos
mov
jnp
push
faddp
push
xor
test
sub
mov
movs
and
sbb
mov
rol
cwde
sub
fxam
mov
out
cmp
mov
outs
pop
sbb
movs
nop
retf
adc
stos
aas
test
mov
mov
mov
iret
push
dec
pop
loopne
xchg
fidiv
lea
fwait
call
icebp
sbb
rcr
ret
lock
and
cwde
mov
sbb
out
enter
xor
sub
data16
sub
aaa
dec
adc
dec
push
lods
iret
rcl
aas
pop
inc
adc
fsubr
fmul
xor
mov
aas
mov
xchg
mov
jb
call
xor
adc
sti
cmp
rcl
sub
mov
sbb
(bad)
lds
sbb
pushf
add
iret
or
cmps
lock
clc
les
int3
push
arpl
sub
pusha
inc
xor
lods
mov
sahf
pop
add
or
mov
bound
dec
fimul
inc
or
xchg
arpl
jno
mov
inc
pop
(bad)
and
out
mov
in
shl
cdq
sub
neg
into
dec
(bad)
jns
idiv
and
outs
mov
xor
push
int
xor
in
mov
or
cmps
loope
leave
pop
add
mov
or
jmp
jnp
push
xor
jo
xchg
push
stc
stos
dec
mov
dec
es
pop
push
cmp
and
jmp
adc
pop
into
shl
(bad)
pop
cs
pushf
test
push
or
push
mov
call
mov
out
push
xor
adc
xchg
imul
pmuludq
fidiv
mov
fwait
mov
int
ss
jbe
xchg
mov
int
dec
cs
sbb
xchg
cwde
outs
push
clc
sub
clc
neg
jb
fsubr
scas
in
scas
daa
sub
mov
imul
aad
add
sub
add
and
and
int3
stos
mov
pop
sbb
and
aam
xchg
mov
pop
mov
in
or
(bad)
(bad)
idiv
add
movs
loopne
fisubr
mov
leave
fdiv
jae
sub
pop
dec
les
dec
mov
cmp
test
push
fdivr
adc
mov
sub
fidivr
or
imul
sub
fisttp
int3
in
pop
adc
add
stc
and
adc
jae
shl
jno
ret
pushf
cmps
add
push
mov
fdivrp
in
sub
sbb
nop
imul
push
push
push
stos
imul
nop
ror
fimul
inc
xchg
inc
mov
daa
push
mov
jne
dec
jb
cmp
pop
bound
(bad)
jl
imul
imul
in
lods
push
add
mov
(bad)
scas
or
adc
sub
cmp
pop
rcl
mov
fwait
lds
div
lods
int3
xchg
xchg
scas
xchg
(bad)
movs
popf
pushf
(bad)
clc
retf
stc
add
lea
add
sbb
cwde
imul
rol
sbb
xchg
cmp
movs
into
test
aad
frndint
jmp
retf
cmp
(bad)
js
push
adc
xchg
push
dec
rcr
jo
dec
call
jl
jmp
inc
mov
push
into
dec
outs
and
push
fstp
popf
fisttp
jg
mov
test
mov
mov
and
aad
not
push
mov
xchg
mov
lahf
xchg
dec
pusha
std
pushf
repz
ja
ins
outs
jb
retf
xor
jnp
jp
sbb
sahf
lea
sar
into
jge
popf
pop
mov
dec
inc
retf
push
call
jg
push
sbb
inc
pop
inc
add
jbe
pushf
add
cmp
mov
scas
add
add
cmp
cwde
sbb
push
test
mov
push
cmp
inc
or
push
mov
lock
and
je
pop
mov
dec
div
ss
int3
fs
(bad)
repnz
dec
enter
outs
push
btc
add
xor
out
js
pusha
loop
(bad)
lods
imul
ins
inc
stos
push
adc
mov
xchg
jne
and
ja
(bad)
data16
sar
into
xchg
add
xchg
leave
pop
std
arpl
jne
dec
aam
fimul
mov
mov
xor
mov
xchg
jno
pusha
inc
je
out
rcl
cmps
cld
hlt
mov
push
or
xchg
mov
sub
jo
test
adc
pusha
ds
mov
test
in
ss
aad
sub
xchg
jns
addr16
ds
movs
adc
dec
ret
mov
popa
inc
shr
lds
or
mov
cs
and
and
jle
jno
cs
std
mov
xchg
daa
call
nop
fwait
pop
mov
sti
int3
cmc
jge
xor
cwde
fidiv
movs
popa
ds
ja
daa
pop
in
mov
mov
xchg
movs
fadd
dec
mov
jns
stc
bound
enter
add
cmp
fidivr
or
jecxz
mov
push
jno
out
mov
cmp
das
mov
jo
add
je
xchg
imul
xlat
xchg
mov
out
xlat
imul
rcr
sub
push
or
(bad)
rcl
jge
xor
push
in
lea
push
xchg
push
inc
jno
add
xor
inc
movs
fisubr
inc
outs
stos
jl
pop
sub
ret
cmp
dec
add
cmc
mov
test
(bad)
fcom
inc
dec
in
ss
ror
sub
retf
loopne
mov
lock
test
ret
dec
in
xor
cwde
mov
loopne
sbb
cmp
fmul
push
cmp
push
pop
stos
xchg
mov
pop
loop
call
xchg
push
fiadd
jns
sbb
inc
mov
mov
dec
cmp
aad
stos
cmc
cmp
adc
fwait
cwde
loop
add
les
out
sbb
push
jbe
repz
xor
pusha
dec
dec
lock
fistp
or
add
rol
aaa
add
add
iret
mov
xchg
iret
sbb
cli
out
push
fistp
xchg
adc
push
and
shl
jo
rol
in
jmp
test
repz
mov
jmp
dec
outs
daa
rol
jns
ds
popf
jmp
mov
or
js
or
aaa
pop
xor
imul
(bad)
mov
in
mov
sub
pop
or
rol
mov
inc
cmp
aad
mov
xor
jg
cmp
sub
sbb
(bad)
xchg
cmps
fimul
jl
and
sbb
call
jbe
jp
cs
push
pop
mov
mov
iret
mov
adc
lds
(bad)
adc
hlt
nop
lock
lods
shl
sbb
(bad)
and
ror
cmp
aad
test
test
cmp
popf
jecxz
adc
clc
sub
or
in
jne
les
push
push
xchg
js
sub
mov
xor
int3
add
retf
jge
outs
sti
pop
repz
jge
pop
aaa
sbb
mov
sub
push
push
inc
sub
hlt
xor
cmc
jno
fwait
in
xchg
or
sbb
mov
scas
pushf
push
jae
jmp
push
sahf
sbb
push
add
xchg
sbb
not
xlat
jae
scas
iret
rcl
xor
sahf
push
mov
sbb
inc
dec
or
sbb
mov
cmps
stos
loopne
out
popf
pusha
es
call
sti
enter
push
nop
jb
jmp
xchg
aas
add
ss
jp
das
movs
jnp
sub
jbe
sbb
adc
and
cli
xchg
neg
and
stos
imul
jo
cs
(bad)
arpl
movs
leave
dec
inc
jle
pop
mov
push
test
cmp
push
sub
iret
mov
scas
nop
adc
jp
xchg
out
xor
dec
dec
xor
add
jae
clc
es
mov
out
fdiv
addr16
inc
inc
out
fisttp
xlat
bound
gs
sub
(bad)
mov
into
sbb
pop
lea
pop
jnp
inc
and
dec
dec
ja
fsubr
or
stos
pusha
mov
and
bound
jne
clc
(bad)
cmp
mov
dec
pop
and
adc
sbb
mov
in
retf
xor
fidiv
sub
stc
push
(bad)
cmp
lahf
pop
retf
xor
popa
hlt
fsubr
cwde
lods
xchg
push
push
clc
push
xchg
xor
imul
cmp
test
jp
outs
mov
outs
jae
inc
add
icebp
(bad)
mov
mov
call
shl
jge
repz
mov
shr
mov
mov
(bad)
fmul
arpl
gs
jne
or
push
in
fcom
test
fld
pop
out
sbb
(bad)
adc
push
call
outs
cmp
pop
out
mov
idiv
(bad)
popf
aaa
mov
(bad)
stc
movs
pop
rsm
add
stos
and
push
repz
xor
and
add
and
out
retf
mov
adc
jnp
lods
daa
leave
mov
aam
mov
mov
pop
jp
dec
pop
pop
xchg
lahf
mov
adc
mov
(bad)
arpl
inc
push
mov
dec
je
mov
jmp
lds
gs
and
inc
pop
mov
inc
call
in
dec
pop
dec
cli
in
cmp
ins
jae
out
sbb
jle
jl
(bad)
pop
or
jg
pop
or
dec
ins
sub
into
test
adc
scas
ret
jmp
test
mov
mov
fisub
dec
in
mov
ds
mov
(bad)
clc
clc
mov
mov
cmc
into
mov
shr
and
xlat
jle
stos
stos
adc
icebp
outs
xchg
mov
and
mov
rcl
push
adc
ja
ins
jo
dec
dec
adc
mov
xor
(bad)
aam
rcl
les
retf
cli
cld
xor
sbb
mov
mov
imul
std
jo
cdq
pop
lock
mov
xchg
ins
cmp
sub
in
and
fnstsw
and
add
in
xchg
lock
dec
js
sbb
std
leave
mov
ins
dec
push
retf
outs
imul
cmp
(bad)
stc
ja
imul
sub
xchg
nop
cmp
mov
test
loope
jl
rcl
cwde
pop
cmp
or
mov
loope
push
cmc
or
mov
or
push
pop
retf
(bad)
jmp
arpl
ficomp
icebp
sbb
icebp
retf
daa
call
or
(bad)
rep
sbb
out
sub
push
and
inc
sbb
dec
cmp
cli
pushf
mov
lods
outs
and
es
fisub
das
cmp
cmps
les
lock
or
out
cmp
xor
(bad)
(bad)
fisttp
mov
cmp
into
jae
movs
add
cmp
mov
or
xchg
shr
fisttp
loopne
in
inc
in
jecxz
test
xlat
(bad)
clc
les
adc
imul
jp
mov
mov
jecxz
dec
mov
lock
and
mov
mov
in
mov
imul
add
xchg
(bad)
data16
push
pop
mov
jge
jae
push
in
ja
mov
cmp
inc
ficomp
sbb
lods
les
dec
jbe
and
jmp
pop
in
jbe
mov
fbstp
mov
sbb
inc
cdq
icebp
and
mov
ss
sub
inc
pop
sbb
lods
movs
ffreep
dec
inc
sub
or
push
xchg
mov
and
outs
or
popa
or
movs
stos
loop
mov
add
jae
adc
test
inc
je
xchg
repnz
sbb
ins
daa
hlt
sar
test
inc
pop
cli
cmc
aas
inc
push
sar
rcr
xor
js
jne
jmp
dec
mov
dec
jno
shr
add
outs
iret
sbb
push
cmps
lods
pusha
lods
and
sbb
push
mov
mov
movs
pop
adc
movs
pop
out
sbb
add
adc
pop
pop
jle
ret
push
xor
inc
ja
stos
jecxz
(bad)
retf
or
(bad)
xlat
push
push
arpl
es
dec
fadd
fistp
leave
xchg
aas
push
(bad)
stc
scas
pop
test
jne
inc
dec
aas
lds
shl
sbb
lahf
jae
mov
lods
stos
enter
xor
inc
js
std
(bad)
sti
adc
sub
je
leave
inc
icebp
stos
push
nop
in
cmp
add
fadd
loop
xlat
inc
adc
xor
imul
das
test
adc
adc
xor
inc
cmp
test
xchg
(bad)
or
sub
jnp
sub
push
rol
push
(bad)
adc
out
push
fcmovnu
daa
add
loopne
rol
ret
ds
jns
xor
push
dec
popa
push
aad
mov
imul
pop
pop
or
(bad)
jnp
scas
pop
add
bound
int3
call
ret
adc
mov
into
jmp
fnsave
scas
adc
mov
daa
lods
sub
out
fisubr
push
mov
fnstenv
lds
(bad)
out
scas
(bad)
inc
jl
fistp
fiadd
push
mov
mov
jo
mov
lahf
or
bound
aaa
add
movs
adc
mov
lahf
dec
bnd
mov
(bad)
mov
xchg
mov
mov
fnstenv
mov
xor
mov
shr
pop
cmp
ja
out
outs
cmp
dec
outs
ins
icebp
shl
idiv
xor
int
sub
test
dec
int
pop
ja
ficomp
mov
rcr
movs
cmp
lods
mov
test
and
lods
and
(bad)
call
mov
xchg
lods
mov
fld
sbb
inc
dec
lea
pop
dec
adc
les
stos
push
dec
gs
rep
add
das
addr16
add
in
xchg
test
dec
add
cmp
adc
enter
addr16
pop
rcl
cmp
cmc
movs
jp
movs
bound
cmp
inc
mov
push
test
or
cmp
pop
rol
mov
sti
and
rcr
cmp
pop
inc
push
xchg
or
cmp
mov
aad
dec
das
pusha
dec
and
mov
xchg
ins
loope
stos
std
sub
retf
adc
pop
loop
or
test
movs
stos
nop
mov
rcr
iret
inc
jmp
or
sbb
mov
xchg
mov
dec
and
aam
add
sbb
icebp
jo
sub
pop
ret
and
or
adc
xchg
js
(bad)
sbb
stc
sbb
jecxz
and
inc
and
sub
sub
lods
jbe
mov
sub
adc
jae
mov
mov
xchg
fidiv
xchg
int3
xchg
mov
xchg
movs
inc
mov
jp
add
and
pop
or
push
mov
call
jnp
push
call
and
jae
mov
sub
test
test
(bad)
sar
or
pop
mov
sub
jbe
and
jno
jg
and
scas
adc
mov
into
gs
mov
dec
add
pop
jns
sti
fbld
test
pop
(bad)
inc
icebp
stc
push
fs
or
pop
cmp
retf
dec
or
out
jle
stos
hlt
cdq
adc
adc
inc
cwde
dec
inc
lds
fistp
aas
sbb
mov
into
lods
fwait
jne
jle
iret
mov
pop
and
cmp
sahf
mov
xchg
pop
cmc
out
out
imul
ret
jmp
ins
retf
jp
push
sbb
out
std
jp
stos
sbb
idiv
cmp
f2xm1
(bad)
test
shl
test
shl
sub
aad
out
sub
(bad)
pop
ins
push
arpl
ror
leave
ins
inc
aad
std
push
mov
push
inc
nop
aaa
sbb
hlt
sbb
sub
pop
sar
test
jmp
and
outs
push
pop
mov
dec
add
cmc
sub
lods
popa
cmc
inc
adc
call
retf
out
inc
xchg
cmp
push
pop
mov
inc
add
stc
in
nop
aas
pop
test
pop
clc
iret
lods
push
out
pop
jl
ret
push
ja
idiv
inc
cwde
bnd
cli
sbb
xchg
mov
aam
shl
pop
shl
cdq
sbb
xchg
enter
call
movs
mov
sbb
fwait
adc
(bad)
cmc
popa
add
fwait
xchg
inc
and
retf
mov
add
xchg
out
jl
popf
stc
js
fcmove
adc
mov
jl
es
popf
push
push
cmps
arpl
push
mov
call
test
pop
movs
sbb
dec
mov
std
xlat
adc
cmp
pop
stos
jg
das
xchg
(bad)
in
ins
adc
lock
scas
popa
mov
push
jns
dec
imul
mov
cmp
arpl
lock
repnz
lods
mov
nop
scas
add
syscall
lock
mov
add
or
jmp
dec
sbb
loope
cmps
pop
inc
xchg
pop
sub
into
sub
pop
pusha
fwait
inc
sbb
cs
cld
cmps
out
xor
or
inc
sbb
lock
stc
outs
pop
jle
mov
xchg
jl
sbb
mov
inc
cmc
cs
adc
push
and
jmp
push
mov
aad
in
and
fs
mov
sub
popf
mov
mov
imul
jmp
mov
test
and
xor
fisttp
and
push
jge
xlat
test
clc
imul
scas
pop
pop
jns
cmc
sub
jmp
or
add
jne
push
adc
fstp
rcr
inc
imul
xchg
push
call
push
mov
cld
xor
xchg
sahf
retf
in
in
and
inc
repnz
jb
mov
stos
jmp
mov
es
(bad)
std
jo
cmps
lock
or
shl
loope
out
inc
in
aaa
loopne
in
pop
rol
sar
int3
fisttp
pop
push
and
sar
(bad)
adc
test
ret
pop
jb
js
addr16
imul
or
cmp
push
into
inc
mov
mov
int
mov
and
push
inc
lods
jnp
retf
loopne
cmp
adc
pop
cmp
cmps
push
out
sub
push
into
jno
jmp
xchg
or
sub
mov
push
repz
sar
(bad)
pop
call
movs
ror
adc
mov
call
test
dec
push
pop
and
and
sbb
push
sub
mov
inc
xor
sub
add
pop
push
adc
adc
jbe
pop
add
scas
dec
movs
(bad)
jg
sub
int3
lods
lock
js
push
fwait
and
in
in
xchg
(bad)
(bad)
cli
and
inc
xor
dec
jae
in
xor
stos
sub
mov
loopne
(bad)
mov
sbb
sbb
add
add
dec
rcr
cmp
sbb
add
cmps
ins
int
std
fistp
adc
xchg
in
lods
out
jge
sbb
je
xor
sbb
adc
mov
jp
(bad)
jg
iret
shl
sub
mov
sub
xlat
popa
ror
push
sub
jb
add
pop
jae
jno
mov
sub
retf
imul
fisttp
mov
sub
test
sahf
xchg
mov
pop
stos
push
mov
push
or
sub
aas
adc
leave
nop
fisub
lods
arpl
sub
pusha
repz
stos
jnp
push
dec
add
inc
sbb
push
add
mov
in
jl
adc
data16
shl
rcr
scas
jg
inc
ins
neg
mov
stos
sar
add
fist
mov
xchg
adc
or
add
(bad)
fstp
mov
jl
jne
mov
cmc
retf
pop
jmp
inc
mov
les
mov
(bad)
jmp
adc
shl
jp
daa
cmp
dec
ds
aam
(bad)
pop
test
popf
jno
mov
mov
xor
inc
push
lods
das
adc
ret
sbb
aas
dec
test
jno
mov
and
popa
pop
lods
xlat
jp
aaa
sub
dec
arpl
aad
fwait
mov
test
cmc
sbb
lods
fcomip
push
adc
hlt
shl
mov
mov
shl
dec
xor
adc
hlt
push
loop
add
adc
inc
scas
(bad)
rol
sub
xor
jno
lds
test
inc
jns
scas
cmp
(bad)
scas
pop
add
jne
aad
push
dec
and
adc
pop
je
adc
pop
fadd
mov
test
push
dec
push
out
jge
retf
(bad)
fs
sub
aad
xchg
gs
jg
pop
pop
rol
cs
movs
mov
ficomp
xchg
cmp
pop
jmp
mov
ins
retf
push
sbb
jmp
adc
rcr
mov
test
pop
rcl
lahf
leave
or
xor
inc
int
out
mov
pop
or
(bad)
pop
mov
cmp
xchg
mov
mov
xchg
ds
mov
xor
jp
xor
ds
xchg
or
cmp
clc
adc
dec
jmp
loopne
hlt
mov
mov
stos
xchg
sub
xchg
les
mov
sbb
pusha
cmps
jmp
cmp
fs
push
add
repnz
pop
jne
sbb
ficomp
inc
dec
ret
test
or
pop
test
push
je
aas
scas
daa
ds
xchg
outs
xchg
ja
cld
in
jp
push
dec
jmp
cmps
jo
push
sbb
pop
dec
cmp
xchg
das
dec
sub
stos
nop
mov
addr16
cwde
sar
xchg
iret
movs
xchg
nop
mov
fwait
lock
out
pop
dec
ja
dec
int3
retf
scas
repz
mov
es
mov
in
pop
add
mov
mov
push
jp
stos
ficomp
addr16
pop
ins
jecxz
shl
mov
int3
fnstenv
ret
xor
call
mov
je
inc
bnd
and
std
(bad)
mov
cmps
lea
inc
xchg
fidivr
adc
push
jns
loop
push
jecxz
or
shr
xor
mov
test
int
adc
in
mov
ins
loopne
mov
out
dec
cmp
add
inc
aaa
jae
rcr
test
sbb
push
jnp
adc
mov
(bad)
cli
cmp
mov
add
xchg
cmp
scas
cdq
and
jno
dec
jae
mov
ins
mov
push
les
inc
js
add
ror
ret
xchg
ret
or
xchg
push
dec
popf
sar
dec
js
mov
(bad)
jne
xchg
sbb
xor
cmc
jno
out
inc
lods
sbb
sub
jo
stos
fwait
mov
fbstp
xchg
cmc
aad
pop
pop
dec
jg
retf
mov
lods
stos
sahf
jne
sub
sub
add
mov
or
addr16
sbb
mov
das
js
adc
shl
int
repz
cmp
call
jns
aam
pop
lds
aas
dec
mov
mov
jle
add
outs
push
fdivr
fldenv
add
mov
xor
aad
iret
inc
sub
sub
and
scas
pop
mov
pop
ficomp
inc
jo
icebp
jbe
mov
enter
and
out
inc
jp
retf
or
pusha
sbb
test
retf
nop
repz
cld
(bad)
movs
fwait
xor
ins
push
sub
dec
xchg
cmps
repz
inc
mov
push
sti
jge
lods
repnz
cmp
popa
jg
adc
data16
ins
icebp
adc
out
pop
mov
pop
ror
push
push
(bad)
fld
loope
mov
dec
add
pushw
(bad)
pop
and
xor
sbb
jo
push
je
sbb
xchg
aas
(bad)
jge
test
sbb
repz
mov
popf
mov
push
repz
sbb
fstp
pop
rcr
pop
stc
or
mov
call
(bad)
lea
into
adc
sub
adc
retf
push
pop
sahf
push
sbb
movs
cmp
mov
scas
or
pop
cmps
in
xchg
out
pushf
sbb
in
mov
into
sbb
jne
out
push
jno
les
sahf
sub
mov
sub
jnp
out
clc
inc
xor
sbb
daa
(bad)
pop
aam
shl
or
mov
xor
fadd
mov
fcmovb
push
aam
fwait
mov
bound
pop
push
std
mov
mov
cdq
sbb
aam
call
retf
lock
stos
mov
shl
dec
inc
leave
mov
aam
imul
jg
push
sbb
dec
xchg
test
mov
and
je
cmps
out
mov
iret
(bad)
push
xchg
scas
dec
jns
pop
add
xor
ficom
push
jae
lods
scas
mov
pop
jl
push
jne
adc
sbb
clc
mov
and
mov
pop
shl
dec
pop
adc
es
int3
inc
add
pop
mov
mov
xchg
stos
push
and
dec
retf
sahf
addr16
xchg
push
xchg
mov
and
mov
bound
lea
or
and
mov
fs
aaa
add
fsubr
dec
fdiv
and
adc
out
pop
adc
jnp
clc
push
cmp
imul
sbb
sub
mov
and
imul
xchg
es
jbe
mov
in
fisubr
mul
jecxz
add
inc
adc
add
or
icebp
aad
and
xor
frstor
retf
cmp
jnp
jmp
scas
outs
inc
out
jno
xchg
pop
test
jbe
jns
jmp
popa
div
inc
data16
pop
into
sbb
mov
adc
sbb
jecxz
je
js
and
pop
mov
ja
ins
mov
movs
popa
(bad)
dec
das
pop
xor
call
out
(bad)
loope
ss
nop
fwait
test
pushf
std
aas
pop
pusha
popf
ins
mov
mov
int3
xor
fbld
test
sub
mov
adc
addr16
cmp
jbe
dec
or
mov
imul
pusha
pop
xchg
scas
add
inc
and
mov
cdq
fiadd
in
int3
push
movs
sbb
das
into
mov
jle
fidivr
(bad)
nop/reserved
jecxz
pop
test
ja
mov
pop
inc
aaa
mov
jmp
movs
daa
dec
rcl
mov
sbb
(bad)
retf
outs
jge
test
mov
push
fist
imul
mov
adc
push
lgs
test
mov
rcl
sti
mov
jmp
jnp
xchg
or
sahf
sub
ins
push
mov
shl
dec
and
xor
sbb
mov
into
std
jp
dec
jb
inc
ins
test
stos
jb
loop
mov
bound
rol
add
test
cs
and
and
mov
jmp
int
jae
dec
jl
xchg
cmp
mov
(bad)
retf
xor
jno
popa
add
jne
loop
hlt
(bad)
scas
cmps
test
sbb
leave
fmul
jle
mov
in
xchg
test
ret
(bad)
cmc
mov
cdq
adc
out
iret
das
rcr
ins
pop
lock
mov
sbb
call
mov
leave
and
test
shl
cmp
jle
and
cmp
inc
and
stc
or
scas
int
test
dec
cmps
iret
jge
dec
add
outs
addr16
push
xor
sub
pop
sar
(bad)
push
ret
and
jne
push
mov
xchg
cmp
dec
and
mov
adc
mov
ds
xlat
and
stos
scas
ss
out
lock
(bad)
lods
mov
repz
xchg
push
leave
mov
inc
mov
mov
push
jmp
iret
mov
mov
movs
mov
shl
sbb
mov
pop
mov
lods
(bad)
jmp
sti
ja
mov
sbb
sbb
push
push
lods
(bad)
jnp
aam
mov
mov
test
mov
mov
aad
sti
daa
cwde
ja
dec
lahf
in
jno
xchg
adc
(bad)
mov
mov
mov
popa
fcmovu
into
fidiv
add
dec
dec
shr
mov
popa
in
movs
mov
ins
test
xor
popa
pop
out
cmp
fwait
xor
add
cmps
pop
movs
fimul
pop
add
jbe
adc
enter
mov
mov
icebp
mov
push
nop
in
enter
mov
out
sbb
lds
xor
shr
dec
popa
cmp
or
ret
int
inc
cmc
out
dec
cwde
mov
jb
jmp
out
inc
minps
add
scas
xlat
sbb
fisub
les
push
mul
xchg
in
mov
inc
sub
mov
test
ficom
std
test
pop
xor
cdq
daa
mov
jno
mov
call
push
hlt
pop
ins
fmul
cmps
fsubr
sti
sub
sub
pop
sub
inc
ss
adc
adc
cmp
lea
hlt
outs
xor
(bad)
je
fucomi
mov
cmp
lods
mov
add
adc
jne
js
pop
add
addr16
in
pop
loop
jns
dec
aaa
das
xchg
(bad)
adc
retf
into
inc
push
pop
xor
dec
pop
dec
fnsave
sub
jns
push
sub
or
sar
call
add
sahf
(bad)
stos
push
mov
sahf
mov
pop
push
xchg
fild
and
call
sti
jle
inc
cmp
inc
jle
adc
mov
jg
mov
dec
arpl
or
movs
aad
pop
add
sub
ins
aad
iret
pop
ret
(bad)
and
mov
shl
fs
sahf
dec
sbb
xor
pop
cwde
push
pop
mov
and
lods
std
test
inc
sbb
and
sub
dec
jae
test
aas
inc
xor
pop
lds
jmp
push
lods
xchg
sub
sub
shr
jbe
jle
mov
lock
mov
popa
sbb
jg
jl
pop
pop
aas
pop
test
or
retf
pop
frstor
inc
aaa
cmp
jle
push
imul
cmc
cmp
adc
stos
(bad)
ror
in
or
push
in
or
sub
(bad)
jo
push
pop
out
add
shl
pop
pop
dec
xchg
jl
es
(bad)
sbb
xor
sbb
jmp
hlt
add
inc
test
dec
(bad)
cmps
jo
cmp
xor
adc
out
jmp
mov
movs
es
push
mov
mov
(bad)
push
sub
inc
inc
pop
fxch
sbb
ss
arpl
ror
(bad)
daa
sub
stos
ret
imul
daa
mov
push
test
shl
push
pop
out
cmps
ret
ss
pop
cmp
mov
adc
lahf
push
stos
mov
xor
cmp
mov
fmul
add
push
int3
xor
cli
into
pop
addr16
mov
jg
mov
sub
sub
jns
or
cmps
adc
hlt
shl
mov
xlat
sub
aam
pushf
jmp
fsubr
adc
pop
dec
scas
dec
xor
ror
loopne
adc
test
rcl
jle
cmp
fild
out
or
pop
cmp
(bad)
push
jp
mul
test
sti
popf
mul
sub
mov
push
cmp
retf
(bad)
test
cmp
pop
sbb
js
push
mov
mov
out
icebp
mov
push
jmp
arpl
jmp
into
inc
cmp
xchg
xor
pushf
cld
mov
sbb
outs
fcmove
mov
lds
sbb
mov
int
loop
push
cld
jmp
mov
mov
fadd
nop
push
js
movs
and
inc
es
sub
jmp
push
dec
mov
dec
cmps
cs
mov
data16
cmp
push
bound
dec
cmc
sbb
cmp
xchg
test
dec
fwait
cmps
leave
stos
nop
and
in
cmc
out
test
js
dec
imul
in
xor
sub
loopne
mov
icebp
jmp
iret
je
and
dec
in
out
into
push
jbe
fmul
int
pop
mov
and
mov
mov
addr16
mov
inc
pop
fbstp
dec
lods
ffreep
cmps
andps
nop
int3
pop
cmps
movs
mov
aas
xchg
fs
in
mov
ror
push
cld
test
les
jmp
jmp
xchg
int
lods
sub
mov
push
lock
cmps
cdq
pusha
sbb
sub
in
mov
and
sub
pop
mov
add
mov
in
mov
mov
add
pop
mov
jo
outs
adc
in
test
push
and
out
adc
inc
dec
xchg
out
int3
(bad)
jmp
imul
shl
mov
imul
pusha
sub
(bad)
push
mov
mov
clc
lea
adc
sbb
add
rcr
or
ffreep
sbb
iret
(bad)
aaa
out
xchg
mov
cwde
movs
icebp
stos
daa
or
or
jb
sbb
iret
push
or
ja
lea
das
inc
clc
mov
pop
xchg
(bad)
sub
or
lods
gs
popa
out
push
mov
jno
call
and
(bad)
dec
add
hlt
jle
push
cmp
lods
pusha
dec
fimul
imul
sbb
cmp
cwde
mov
loop
arpl
and
popa
cmp
cmc
bound
fisttp
push
push
mov
fwait
jno
mov
ss
fstp
or
loope
jae
fadd
and
sar
pusha
cmc
(bad)
pop
test
aaa
mov
push
xchg
sbb
xor
nop
push
neg
outs
fcom
pop
sbb
popf
push
pop
(bad)
jnp
enter
and
push
sub
and
adc
xchg
les
sub
cld
movs
jo
add
(bad)
jae
jp
xchg
push
leave
pop
sahf
xor
mov
inc
(bad)
dec
enter
leave
pop
in
je
loopne
js
loope
sti
push
addr16
rcr
aad
repz
mov
xchg
sbb
int3
repnz
sub
jmp
jl
push
lahf
ds
jp
outs
adc
int
and
hlt
jns
retf
cmp
ins
pop
add
xor
xchg
pusha
and
and
push
mov
mov
cmp
fsubr
inc
stos
mov
aam
lahf
stos
jnp
(bad)
xchg
and
call
push
and
xchg
in
ins
push
mov
pusha
in
jmp
out
jg
fwait
jge
mov
fbld
add
inc
inc
cs
imul
out
jns
jmp
fs
push
xchg
xchg
lahf
nop
or
dec
jge
sub
dec
pop
push
add
jp
adc
push
pop
sahf
push
sar
movs
push
add
ret
int
adc
frndint
out
mov
cmps
xor
test
mov
cwde
mov
in
add
cmp
xor
and
pusha
mov
stos
es
push
scas
leave
mov
ins
inc
daa
fadd
jle
lds
inc
push
mov
mov
mov
in
cli
sahf
dec
ins
shl
inc
rcr
movs
fldenv
sub
adc
lahf
jl
mov
and
das
or
dec
xchg
nop
popa
(bad)
cli
and
outs
pop
push
test
repnz
push
jo
add
div
xor
jl
add
add
sbb
push
retf
(bad)
clc
ins
sub
fwait
sub
add
out
(bad)
adc
adc
sbb
es
je
popf
ror
in
pop
adc
dec
inc
mov
xor
shl
sub
push
mov
inc
add
(bad)
cmc
div
jmp
aad
ds
mov
fcomp
xchg
repz
es
fisttp
nop
sub
push
repz
xchg
lods
sub
mov
push
call
pop
inc
pop
jnp
push
adc
in
mov
and
inc
jne
jle
int
cmp
nop
sub
sahf
lahf
xchg
jmp
cmps
mov
adc
ret
inc
mov
mov
sub
and
pusha
icebp
vpmulhuw
jl
imul
inc
aaa
cmp
mov
mov
test
into
mov
inc
pop
and
stc
or
test
inc
fsincos
sbb
fcmovu
popf
mov
aam
or
dec
es
pop
sub
ins
setb
(bad)
cmc
jmp
xchg
dec
cdq
mov
mov
cmc
cmps
(bad)
pop
icebp
cdq
or
cmc
xchg
adc
sub
sbb
lea
push
mov
jp
pop
xor
pop
in
shr
ja
sub
cmp
stc
adc
popf
jnp
pop
and
mov
xchg
cli
sahf
cmp
test
xor
mov
or
(bad)
jecxz
in
add
inc
daa
xor
out
sahf
popf
mov
test
loop
or
out
cwde
call
cs
cmp
lea
inc
ror
imul
push
or
sbb
(bad)
sub
dec
fcomp
xor
push
or
and
outs
dec
cmp
add
add
in
dec
mov
pushf
jecxz
out
add
aaa
jnp
cmp
inc
cmps
mov
push
pop
jb
ret
sbb
pusha
mov
jb
ret
fst
push
movs
mov
movs
mov
sbb
dec
scas
push
fidiv
sbb
cs
push
in
inc
shl
and
cmp
sub
mov
jbe
pop
int
stos
mov
inc
xchg
mov
jmp
inc
ret
mov
cmp
xchg
mov
fld
inc
ss
add
adc
mov
in
out
push
(bad)
rcr
and
xor
sub
pop
dec
stos
ret
adc
mov
hlt
xchg
sbb
or
fld
ds
add
and
xchg
loop
aad
dec
cmc
fimul
movs
data16
cmps
push
nop
add
fidiv
std
shl
adc
pop
(bad)
bound
mov
test
xor
std
or
(bad)
sti
push
imul
enter
xchg
add
bound
and
or
cmps
loope
push
in
add
lock
shl
add
out
cmp
shl
or
aam
fcomp
fnsave
mov
jno
or
mov
mov
loope
add
push
xor
or
pop
dec
aaa
cmps
lea
push
ss
leave
arpl
adc
xchg
mov
xchg
adc
pop
xchg
pop
pop
inc
out
js
lock
push
inc
sub
pop
cmps
mov
mov
loop
les
adc
int3
mov
icebp
in
jno
or
into
cwde
mov
push
add
sub
es
rol
jmp
and
sub
iret
adc
or
out
cmp
cmps
or
pop
in
pop
aam
data16
repz
mov
into
push
enter
mov
outs
dec
mov
lds
mov
dec
pop
cmps
sar
xchg
and
push
xor
push
jmp
icebp
jae
nop
inc
imul
cdq
into
xor
or
add
pushf
sub
out
(bad)
aas
les
mov
fdivp
sub
es
cli
movs
push
shl
(bad)
or
sar
mov
int
cwde
fs
fidivr
sbb
fwait
retf
loope
pusha
push
sub
in
test
xor
mov
das
out
push
mov
mov
dec
mov
push
mov
cmp
xor
fadd
fdivr
dec
pop
push
inc
js
outs
aam
push
dec
jmp
sbb
add
xchg
or
in
and
test
fcmovnbe
popa
mov
(bad)
out
jge
cmc
jne
mov
neg
cmp
fs
ficomp
bound
add
std
mov
faddp
inc
fcom
push
pop
dec
movs
inc
std
push
mov
xor
fadd
movs
(bad)
xchg
in
lock
arpl
neg
in
push
aaa
outs
adc
jle
les
inc
mov
sub
mov
call
dec
add
inc
inc
in
ficomp
lahf
rol
dec
mov
dec
xchg
scas
sbb
(bad)
mov
adc
jmp
push
pop
ins
shl
or
inc
(bad)
xor
addr16
sbb
std
pop
ror
jle
(bad)
push
fisub
pop
dec
jle
xchg
xchg
add
ds
scas
jbe
pop
inc
(bad)
out
cmp
mov
bound
cmp
rcl
add
xchg
cld
adc
enter
je
xchg
int
jne
sbb
std
sbb
and
jl
xlat
es
xchg
pop
test
dec
(bad)
daa
xor
sub
test
sahf
repnz
or
xchg
xlat
jl
and
int
(bad)
adc
(bad)
js
mov
mov
cmps
nop
pop
cmc
test
mov
sub
(bad)
in
movs
dec
inc
mov
loop
xor
mov
pop
ins
adc
jle
js
and
cmp
pop
dec
repnz
out
out
pop
inc
mov
push
jmp
push
popa
int
inc
and
adc
push
sub
mov
neg
mov
aad
mov
push
into
sub
sbb
mov
cmp
fidiv
fst
pop
fcom
retf
add
cmps
mov
into
add
xor
fstp
xchg
xor
fs
add
or
retf
inc
and
lods
pop
xchg
adc
stos
idiv
and
popf
add
adc
(bad)
sub
cmp
(bad)
gs
ficomp
add
(bad)
mov
popf
das
gs
or
fld
cmp
xchg
jb
mov
mov
and
lods
rcr
test
lds
retf
adc
lock
inc
sbb
call
xor
push
std
hlt
mov
std
clc
jl
jbe
into
inc
repnz
sub
je
mov
call
dec
lock
fisttp
call
push
or
xchg
cmp
mov
pop
jmp
jnp
add
and
gs
test
sbb
and
retf
mov
ja
jmp
push
pushf
scas
mov
jmp
adc
mul
fwait
into
aas
test
enter
cdq
xchg
addr16
out
mov
mov
dec
mov
inc
push
cdq
inc
xor
xor
mov
inc
or
dec
push
add
shl
pop
into
(bad)
cld
mov
adc
call
lahf
es
pop
ret
not
js
cmp
mov
imul
add
adc
push
test
mov
cwde
mov
movs
dec
dec
loopne
loopne
inc
mov
xchg
mov
scas
in
mov
add
cmp
sub
cdq
cs
dec
retf
ins
scas
bound
lods
sub
and
jno
jo
ins
xlat
hlt
int3
push
xchg
popf
or
adc
mov
repnz
adc
pop
add
pop
mov
mov
sbb
or
clc
out
cmp
pop
outs
inc
arpl
mov
xchg
inc
xchg
(bad)
and
sub
cmp
cmp
and
inc
sar
mov
fdiv
retf
dec
inc
xchg
jge
rcr
test
mov
fiadd
cmc
lods
xchg
mov
das
pop
int
cmp
popf
cwde
jns
retf
ins
les
pusha
enter
int3
das
stc
dec
nop
inc
xchg
push
scas
cs
sar
bound
xchg
mov
into
outs
fidivr
dec
cmp
pop
pop
mov
jns
rcl
lds
adc
mov
pusha
adc
cmp
add
lahf
enter
fdiv
xchg
sub
repz
xchg
add
ins
or
clc
pusha
and
push
ror
nop
push
(bad)
int
lds
pop
popa
lfs
inc
rcr
js
inc
pop
(bad)
cmp
mov
pop
and
mov
stos
jmp
xchg
sar
ja
fwait
les
scas
adc
xor
jl
jne
jno
ret
cmps
push
rcl
mov
push
dec
adc
leave
cld
pop
mov
scas
push
cmc
sub
iret
hlt
lods
push
add
xor
sub
lahf
inc
scas
dec
ret
cli
mov
add
xor
jge
scas
aas
lods
icebp
jp
xor
jle
(bad)
fisubr
fmul
jne
jnp
push
lods
push
pop
push
mov
push
mov
bound
cmp
mov
pop
retf
(bad)
add
cmp
dec
inc
out
std
clc
fwait
pop
jle
leave
jl
inc
cmp
(bad)
xor
cwde
pop
sub
mov
repz
or
push
loop
push
inc
and
adc
out
cwde
jmp
sbb
pop
ins
and
adc
sbb
jmp
jg
not
xchg
and
or
imul
scas
pop
jge
cmp
mov
test
sahf
jne
shl
loopne
or
sub
mov
mov
shr
lahf
add
pop
or
outs
push
fs
mov
inc
scas
inc
icebp
out
jae
lods
dec
add
cmps
xchg
push
mov
jmp
inc
aas
jge
fs
pusha
xor
aaa
ds
push
inc
push
dec
xor
retf
stc
test
ds
add
push
es
jne
stos
dec
in
mov
mov
add
mov
push
fs
jg
pop
dec
sbb
shl
mov
test
in
scas
ins
dec
add
imul
push
clc
xchg
mov
jecxz
push
(bad)
in
mov
stos
fcomp
clc
sar
push
scas
(bad)
in
ds
mov
das
jge
push
arpl
in
xlat
mov
(bad)
lahf
fs
pop
lea
xchg
cmps
aas
add
sub
jnp
stos
iret
jge
iret
je
mov
fnsave
call
pop
push
mov
rol
in
mul
cmps
xchg
or
sbb
inc
jbe
mov
out
cmps
xor
mov
lds
or
or
xor
jle
sbb
mov
pop
js
mov
push
push
pcmpgtw
xlat
mov
xchg
inc
in
mov
cmp
adc
add
shl
inc
and
retf
lahf
sub
arpl
outs
cmc
retf
pop
(bad)
ins
sub
fmul
and
stos
pop
lock
test
call
pop
dec
and
(bad)
aam
mov
fdivr
std
cmp
std
pop
cmp
add
imul
jo
aad
jg
scas
out
je
cmp
sub
test
retf
pop
bound
nop
cmp
adc
xor
shl
imul
or
mov
leave
pop
frstor
jb
lds
popf
shl
dec
cmp
mov
and
sahf
jnp
pop
push
dec
stos
add
cmp
mov
xor
inc
cmp
cmp
jno
pop
rcr
push
xchg
jne
test
sbb
jg
xchg
sub
inc
call
aas
xchg
loopne
pop
lods
pop
sub
movs
cld
into
out
mov
out
loop
cmp
test
inc
push
mov
std
add
or
out
lock
pop
aas
adc
sub
and
jge
shr
scas
add
aaa
adc
jg
xor
mov
xor
ror
mov
pop
ins
movs
xor
cmps
dec
dec
arpl
add
dec
push
stos
aam
movs
loope
and
xchg
stos
xchg
xor
imul
cmps
lahf
ja
adc
(bad)
cli
adc
mov
mov
jmp
out
inc
mov
pop
jmp
jns
xchg
mov
sbb
mov
dec
ss
xchg
rcr
inc
int
dec
test
repz
jae
rol
inc
adc
sbb
iret
adc
or
pop
daa
movs
jbe
xor
addr16
mov
out
pushf
xor
popw
mov
or
pop
and
ins
pop
fstp
adc
inc
js
jno
or
icebp
out
mov
xor
sbb
ret
mov
sahf
movs
add
add
icebp
jecxz
fwait
es
repz
sub
pop
pop
lds
mov
push
xchg
jae
pop
nop
mov
arpl
loopne
xor
xor
mov
jo
out
addr16
jp
push
daa
mov
lock
cmp
mov
xor
pop
icebp
jne
and
addr16
inc
data16
popf
mov
into
or
icebp
fsub
cwde
in
adc
stos
rcr
mov
into
call
xchg
shl
pop
pop
mov
scas
add
mov
add
xor
push
adc
push
lods
pop
out
or
repnz
int3
push
inc
xor
xor
cmp
adc
cs
add
or
retf
fdivr
push
add
test
les
les
mov
lahf
mov
jno
xchg
dec
jecxz
inc
mov
dec
mov
jmp
imul
retf
xor
or
add
pop
sbb
popa
pop
fnsave
xchg
ja
out
retf
pop
aam
sub
mov
pop
inc
cs
mov
mov
ret
push
push
shl
jl
mov
outs
in
in
das
push
je
cmps
mov
sbb
call
dec
ror
add
sub
imul
or
out
out
jmp
mov
xlat
jmp
cmps
mov
pop
js
mov
and
and
popa
adc
pusha
add
sahf
jo
sbb
adc
cmp
movs
rcr
jmp
mov
in
xchg
popf
lods
shr
iret
xor
mov
push
push
adc
sbb
fisttp
cmp
mov
inc
mov
mov
sbb
mov
fiadd
loope
retf
es
(bad)
mov
xor
ret
ins
sub
aam
daa
fld
inc
add
push
and
xor
xchg
or
xor
sbb
mov
mov
push
(bad)
jmp
fstp
in
mov
dec
inc
xchg
push
sahf
rcr
dec
fstp
jb
ret
sbb
dec
lea
adc
sbb
int3
push
adc
not
cs
or
inc
mov
out
xchg
pop
mov
or
nop
outs
sub
ins
gs
jo
aaa
and
or
sub
stos
(bad)
shl
mov
into
retf
inc
and
fneni(8087
inc
mov
aad
cli
mov
div
adc
inc
out
iret
inc
push
imul
jo
dec
inc
test
scas
or
out
into
adc
cs
mov
(bad)
aad
xchg
out
test
cdq
xor
jg
pop
ja
stos
shr
add
fist
ins
mov
mov
pop
dec
jae
xchg
jb
ins
sub
sti
data16
rcl
test
pop
mov
push
ret
addr16
icebp
push
push
add
sub
shl
(bad)
cli
push
push
ja
mov
cmp
movs
retf
adc
leave
cmp
ret
add
pop
push
mov
add
int
stos
adc
pop
jnp
mov
and
push
add
call
xlat
(bad)
call
push
or
push
jb
popa
pop
das
dec
lea
mov
adc
push
inc
(bad)
mov
in
adc
jb
ret
sbb
dec
ficomp
sbb
ret
mov
dec
or
dec
or
adc
or
push
fnstcw
les
pop
inc
ja
scas
int
dec
stos
fs
cmp
mov
sub
div
adc
cmp
das
jnp
nop
mov
inc
mov
adc
pusha
and
aad
pop
mov
pop
mov
jge
pop
imul
push
push
std
cmp
hlt
ins
loopne
pop
and
sub
cs
xchg
hlt
jmp
psubusw
xchg
fwait
stc
inc
outs
ret
cmp
mov
imul
xchg
pop
sub
push
pop
add
xchg
mov
out
in
inc
or
sbb
mov
sti
scas
dec
sbb
mov
adc
mov
mov
lods
out
outs
iret
bound
mov
xchg
cmps
iret
in
push
cmc
in
sbb
popf
ret
cmp
jbe
dec
into
lods
outs
lods
pop
jmp
mov
xchg
add
or
adc
repnz
add
inc
imul
xor
xchg
mov
sahf
pop
xor
or
shr
sahf
mov
or
nop
mov
or
and
add
popa
sti
lods
loop
repz
pusha
or
js
cmp
(bad)
pop
dec
mov
cmp
repz
mov
sahf
sbb
ficomp
hlt
pop
or
cmp
mov
sti
pop
aaa
cs
ss
push
(bad)
sbb
sub
lock
cmp
test
adc
pop
sub
out
xchg
retf
sub
sbb
cmps
xor
pushf
push
inc
sahf
add
jnp
mov
push
sbb
inc
sub
dec
or
xchg
in
xchg
in
daa
jmp
jg
ds
fnstenv
cmp
pop
and
stos
mov
ja
inc
mov
fucomip
adc
push
mov
pop
mov
mov
dec
adc
sub
add
pop
push
sub
outs
jb
iret
sti
movs
sub
push
test
loop
pusha
(bad)
imul
push
cmps
adc
xchg
scas
retf
xchg
std
int
add
or
das
and
mov
sar
push
sub
pop
stc
loope
mov
ss
sub
call
mov
inc
repnz
xchg
jno
inc
cdq
call
mov
jnp
ins
arpl
inc
sub
mov
(bad)
call
xor
mov
mov
repz
sbb
push
mov
test
adc
out
test
add
sub
ins
imul
into
and
lock
(bad)
mov
dec
inc
das
xchg
lea
mov
mov
push
cmp
push
out
mov
fmul
inc
out
aaa
dec
ret
mov
xor
ja
daa
push
add
jmp
xchg
push
mov
daa
lods
out
scas
(bad)
or
cmp
dec
push
jecxz
shl
rcr
sti
pop
add
popf
push
enter
std
popa
mov
nop
enter
sbb
xchg
test
mov
mov
sub
popa
sbb
push
clc
mov
aaa
pop
movs
push
mov
jns
lods
push
xor
enter
clc
mov
aam
enter
repz
cmp
(bad)
sbb
xchg
(bad)
je
hlt
xchg
and
test
popa
jmp
stos
fnstsw
cmp
mov
mov
in
les
bound
inc
sub
lods
outs
dec
loope
data16
xlat
int
int3
in
test
mov
(bad)
sbb
mov
inc
jo
into
out
xlat
fild
lods
or
imul
ror
mov
mov
outs
inc
cmps
enter
jmp
(bad)
call
out
sbb
dec
cmp
pminub
push
mov
clc
int
jbe
jg
fcomp
loope
mov
sbb
inc
in
mov
push
cmp
mov
fmul
pop
cmp
test
jl
clc
mov
cmp
and
xchg
add
lahf
xor
push
pop
inc
(bad)
scas
xor
or
dec
fs
pop
sbb
inc
push
rol
jae
cmp
ins
fdiv
sub
xchg
ins
or
jmp
xchg
xor
mov
repz
cmp
cmps
mul
mov
(bad)
nop
movs
dec
mov
ficomp
sbb
gs
inc
arpl
addr16
xor
cdq
and
mov
mov
lods
leave
stos
icebp
mov
push
adc
daa
mov
(bad)
out
inc
pushf
jmp
jmp
das
dec
pop
and
xchg
out
push
repnz
mov
int
ja
mov
fcom
popa
and
xchg
ret
ins
push
dec
pop
cld
add
push
adc
inc
jne
out
sbb
(bad)
xor
inc
rcr
lds
(bad)
fcomp
(bad)
hlt
lock
jmp
fcomp
fs
push
imul
or
dec
mov
mov
fs
xchg
ror
jmp
cmps
add
movs
movs
push
mov
fnstcw
or
stc
div
gs
stc
xchg
cmp
jge
sub
push
xchg
push
idiv
(bad)
out
enter
pusha
imul
repz
lea
xor
pop
inc
movs
mov
cmp
pop
ret
cwde
or
xchg
jl
and
xor
mov
and
cmp
adc
and
pop
dec
aas
cdq
cld
adc
arpl
inc
into
stos
(bad)
test
mov
add
ror
mov
add
addr16
lds
jb
imul
jg
jmp
adc
cmps
into
aad
(bad)
out
pop
popa
adc
in
pop
int
(bad)
div
push
mov
or
ret
push
mov
adc
cwde
mov
adc
mov
fstp
retf
fidiv
mov
jbe
test
jle
in
inc
cmps
in
dec
add
or
cli
pop
ins
pop
jnp
ja
das
fs
mov
mov
sbb
inc
ss
inc
pop
mov
in
(bad)
adc
fsub
movs
jae
out
out
push
jmp
sub
mov
sbb
mov
xor
icebp
xor
mov
scas
fs
leave
fsub
ret
dec
(bad)
lahf
sbb
push
vpcmpgtd
ja
rcr
stos
bound
(bad)
or
retf
(bad)
pop
mov
jb
aas
in
and
mov
xchg
cmp
out
jge
push
not
fucomp
rcl
in
add
xchg
iret
jo
adc
(bad)
push
adc
pop
inc
sub
cmps
(bad)
add
cs
mov
pop
mov
fidiv
xor
pop
cmp
rcr
ins
(bad)
in
xor
add
inc
inc
in
dec
pop
sub
es
mov
fistp
xchg
pop
(bad)
ret
and
movs
(bad)
jae
jns
xchg
pop
out
pop
push
cwde
push
retf
push
adc
mov
pusha
pop
out
push
mov
dec
inc
out
mov
(bad)
repnz
jle
push
aam
cmps
jg
add
dec
pop
adc
cmp
sub
ds
call
push
jg
mov
enter
daa
shl
arpl
movs
test
and
mov
dec
rcl
aaa
dec
add
(bad)
cmp
cmp
xor
lods
push
rcr
imul
or
mov
sbb
jmp
clc
popf
inc
mov
jb
xchg
cmp
lock
xor
stos
and
movs
push
jl
mov
cmp
aas
inc
mov
mov
mov
or
ss
ficomp
ss
stos
retw
lock
jmp
or
test
mov
cdq
rcr
aad
fcomp
cli
cmp
test
in
push
cmp
sbb
imul
pop
inc
test
(bad)
dec
fwait
push
popf
xor
dec
sbb
sbb
sti
je
fs
push
mov
jge
push
pop
sbb
inc
outs
dec
sti
and
jl
loopne
push
jno
inc
sti
loopne
shr
xchg
clc
fisttp
bound
inc
dec
xchg
imul
mov
dec
mov
rol
out
dec
icebp
push
pop
(bad)
xor
and
sbb
hlt
sbb
xchg
stos
and
mov
daa
cli
mov
sbb
fsub
cmp
cmp
cmovb
push
aas
or
std
sbb
mov
cmps
cmp
add
inc
sahf
(bad)
add
aad
loop
cmp
je
jb
je
in
out
aas
jbe
fdivr
pmaxub
mov
inc
push
pminsw
mov
mov
push
mov
arpl
and
and
(bad)
call
jb
gs
in
cld
stos
xchg
or
inc
stc
imul
loope
dec
mov
(bad)
leave
sub
dec
mov
adc
mov
(bad)
aaa
std
stos
push
xor
pop
push
ret
sub
les
fist
adc
push
adc
jmp
sahf
and
sub
iret
mov
inc
lea
jnp
retf
xor
scas
cmp
nop
leave
xor
(bad)
xor
test
adc
dec
fsub
fxch
das
das
or
loopne
jmp
cmp
push
imul
jb
mov
cdq
mov
out
test
xor
xchg
data16
addr16
inc
jg
pop
add
stos
sub
loop
mov
loope
inc
or
pop
and
jo
fmul
addr16
fimul
xlat
es
sbb
sbb
in
adc
adc
push
sbb
div
sub
sub
adc
pop
xor
mov
add
enter
pop
cmp
(bad)
fisttp
imul
bound
or
mov
retf
(bad)
dec
mov
jo
leave
out
pop
push
call
pop
retf
push
out
cmc
xchg
mov
jecxz
(bad)
loopne
lahf
cwde
push
clc
(bad)
mov
jne
mov
xor
add
cmp
adc
lock
mov
loope
(bad)
pop
dec
leave
addr16
fist
mov
pusha
(bad)
fisttp
adc
or
jb
popa
loopne
daa
or
fiadd
mov
adc
gs
aas
mov
jns
cmp
sbb
mov
or
sbb
jecxz
xchg
mov
loope
imul
jb
rol
or
iret
inc
mov
jl
cmp
inc
imul
movs
lods
mov
sti
mov
sbb
inc
pop
int
test
mov
fcomi
adc
bnd
pop
lea
mov
jb
arpl
das
add
mov
mov
xchg
sbb
stos
mov
mov
mov
ror
popa
loop
in
cmp
sub
lea
add
sub
and
push
je
inc
pushf
aaa
data16
stos
movs
cmp
xor
dec
jecxz
ss
in
xor
movs
lahf
aas
or
int
out
cmp
xor
push
jecxz
and
push
mov
mov
mov
in
sub
xor
shr
shl
fsub
jb
repz
out
and
pop
inc
adc
(bad)
int
pop
mov
xor
jbe
jbe
stc
sub
xchg
mov
movs
iret
add
or
(bad)
in
scas
sbb
std
mov
pop
inc
sahf
push
mov
stos
shr
dec
xchg
cmp
adc
fcmovnb
xor
inc
cwde
test
(bad)
jmp
xchg
call
jns
retf
jle
mov
add
(bad)
dec
(bad)
cmp
out
cmps
daa
and
jo
dec
cmp
push
cmps
pop
add
and
push
pop
ds
mov
test
adc
jne
sbb
jnp
cli
mov
xchg
(bad)
gs
outs
shl
aad
pushf
cmps
into
sub
push
hlt
aas
mov
push
push
ss
push
cmp
push
movs
pop
sub
jnp
pusha
fs
adc
jmp
jbe
add
in
mov
mov
retf
jne
adc
pop
leave
xchg
mov
pop
jbe
or
ins
adc
fisttp
xchg
adc
add
daa
mov
imul
dec
aaa
pop
cmp
jb
sub
xor
push
int3
mov
mov
xchg
or
iret
gs
push
pop
mov
frstor
inc
in
(bad)
inc
std
add
pusha
dec
imul
adc
push
add
adc
xchg
pop
push
repz
outs
jge
aaa
push
push
pop
jo
(bad)
mov
(bad)
sti
lods
push
adc
sub
mov
outs
cs
xor
add
pop
xchg
and
push
stc
jb
mov
ficom
ficomp
sbb
sub
dec
inc
push
mov
mov
push
dec
retf
cmp
dec
cs
repz
icebp
cmp
hlt
daa
lods
jae
cld
push
sub
jae
push
push
mov
js
mov
aam
jnp
fidivr
fdiv
xchg
inc
ins
rcl
push
stos
test
or
inc
sahf
lea
cs
mov
std
popf
cmps
mov
rol
pusha
jnp
mov
or
ins
jecxz
adc
loope
fmul
sub
(bad)
iret
test
mov
ficomp
aas
fiadd
mov
dec
sti
ins
sbb
das
or
sub
(bad)
fucom
or
sbb
mov
adc
sub
cmp
nop
in
enter
(bad)
cli
or
dec
mov
lods
cmp
adc
or
jmp
sbb
jnp
jno
cmovge
push
mov
loop
sbb
jge
int
mov
mov
data16
loope
sbb
imul
and
mov
sbb
xchg
outs
mov
jne
jns
sti
and
mov
fisttp
dec
or
push
mov
dec
cmp
xchg
jb
stos
add
imul
xor
sti
xchg
mov
dec
shr
fiadd
lahf
xchg
fwait
stos
call
xor
movs
add
cld
sbb
out
sub
xor
xor
push
mov
sbb
data16
pop
jge
out
or
add
jmp
mov
inc
call
aad
js
push
mov
ins
fmul
push
mov
(bad)
scas
ja
mov
rcl
movs
adc
or
and
cmp
in
aas
or
cmps
push
mov
and
ss
repnz
pop
add
(bad)
icebp
fsubr
sahf
ret
inc
shr
psrad
mov
or
cmp
pop
data16
push
inc
jmp
mov
jmp
int
push
retf
push
cmp
or
in
push
in
jg
(bad)
jo
(bad)
inc
jno
rol
and
ins
retf
xor
inc
lock
loope
je
dec
ror
dec
imul
(bad)
fcomp
or
xor
adc
outs
dec
retf
sub
ret
stos
push
mov
push
inc
push
(bad)
aaa
nop
push
mov
xor
repz
mov
out
ret
std
inc
adc
fmulp
out
retf
xchg
test
mov
mov
dec
inc
icebp
int3
and
pusha
mov
out
shl
sar
adc
and
xor
mov
xchg
dec
mov
test
clc
sub
pusha
push
push
add
mov
fcomip
adc
dec
in
jmp
jbe
loope
out
fistp
and
cmp
out
add
or
or
jmp
lods
mov
cmp
inc
adc
mov
push
sub
out
pop
push
jne
and
jl
push
or
jl
out
outs
aam
xor
nop
push
mov
cwde
loopne
add
xchg
xchg
pop
add
cmp
pop
call
dec
jns
add
stos
popa
or
and
pop
aad
sub
cld
dec
outs
add
call
cmp
sbb
icebp
push
ds
pop
retf
mov
sahf
jnp
push
add
lahf
repz
hlt
mov
cwde
ja
(bad)
and
sub
mov
daa
xor
in
and
fisubr
shl
loopne
mov
dec
idiv
adc
jmp
in
push
imul
call
mov
push
mov
(bad)
pop
mov
xor
dec
jbe
dec
and
repz
sbb
add
loope
gs
push
das
aaa
mov
sub
addr16
dec
sub
xchg
je
clc
nop
pop
mov
mov
dec
ins
pop
(bad)
jb
cs
push
icebp
or
sbb
pop
dec
outs
sbb
mov
mov
or
fisub
dec
fdiv
sbb
int3
sbb
or
out
popa
pop
hlt
retf
loopne
jge
xchg
icebp
jne
xchg
push
mov
(bad)
fldcw
and
ja
into
retf
cmp
inc
xchg
movs
stc
out
or
jns
sub
std
popa
call
mov
inc
or
daa
enter
add
push
test
cld
dec
imul
nop
ins
adc
je
out
lea
cmp
xor
xor
dec
adc
gs
aas
imul
cld
sub
or
popa
in
adc
scas
push
outs
mov
sbb
pop
push
ret
mov
pop
sbb
or
push
mov
cmp
add
mov
icebp
fnstcw
rol
bound
adc
pusha
in
mov
call
mov
push
push
pop
mov
push
xchg
(bad)
ds
mov
movs
(bad)
out
fldenv
mov
aas
sbb
shl
adc
inc
out
popa
addr16
push
int
mov
xchg
cmp
dec
jae
adc
std
dec
rcl
pop
xchg
pushf
mov
stos
adc
hlt
jg
jecxz
and
sahf
mov
out
mov
dec
mov
retf
nop
xor
mov
fscale
int
movs
and
hlt
pandn
push
and
jl
add
sbb
scas
arpl
movs
xor
dec
addr16
xchg
adc
out
add
xchg
das
aad
dec
stc
