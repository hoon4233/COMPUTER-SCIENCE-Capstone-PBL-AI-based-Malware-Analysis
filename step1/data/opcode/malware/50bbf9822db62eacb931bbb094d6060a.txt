fcomp
add
jne
add
repz
add
add
sub
dec
gs
dec
mov
pop
cld
test
xchg
pop
les
pop
mov
test
mov
sbb
sbb
xchg
inc
hlt
push
aad
stos
inc
cmps
mov
cs
pop
loopne
daa
aad
cmps
pop
xchg
mov
test
fnstenv
pusha
xchg
ror
cli
push
inc
push
sti
ja
loope
jb
sbb
mov
cld
pop
adc
in
mov
scas
add
movs
neg
mov
push
popa
hlt
pop
xchg
xchg
mov
mov
into
push
or
jg
lods
stos
stc
adc
jmp
hlt
jge
clc
cld
xor
xchg
jne
sbb
add
jle
movs
hlt
repz
dec
mov
stos
(bad)
and
pop
sub
xchg
aas
fdivr
xchg
scas
jo
pop
into
xor
fs
pop
or
mov
mov
jnp
fwait
dec
stos
push
test
xor
fwait
jnp
iret
aam
cmp
sub
pop
sbb
mov
xchg
(bad)
cdq
ret
mov
iret
sub
push
pop
push
push
fs
xchg
adc
inc
mov
xor
lock
outs
retf
ss
add
push
leave
into
je
xor
sub
cdq
nop
cwde
mov
outs
pop
lods
xchg
push
xchg
mov
xchg
pop
jbe
add
xor
xor
cmp
or
pop
jnp
in
cmp
push
pop
in
imul
aam
jp
inc
lds
cmc
mov
ins
lahf
add
mov
ror
addr16
js
inc
mov
fild
pop
shl
sub
xchg
cli
enter
fcomp
shl
loope
call
xor
mov
sbb
test
jp
data16
sbb
iret
push
and
add
bound
mov
js
xor
mov
mov
stos
push
sub
daa
xor
movs
and
dec
xrelease
xor
sub
loope
push
mov
sbb
inc
in
cmc
adc
icebp
aam
push
out
jle
test
loopne
dec
mov
sub
or
adc
sbb
add
mov
leave
sbb
cli
clc
add
rcl
pop
das
(bad)
and
stos
sbb
jmp
addr16
lods
push
loop
xchg
fdivr
mov
(bad)
xlat
cli
outs
xor
fsubr
dec
jne
scas
xor
hlt
jne
enter
scas
dec
leave
inc
jecxz
inc
mov
push
add
movs
sbb
jmp
ins
(bad)
out
mov
adc
dec
jg
inc
daa
js
xchg
add
repnz
jg
aad
dec
mov
int
adc
cmps
les
cmp
fimul
not
xlat
ja
icebp
push
es
stos
or
scas
lahf
pop
out
sub
ss
sbb
lods
mov
sti
idiv
hlt
push
aad
xchg
xchg
test
mov
mov
out
ins
out
jns
mov
out
lahf
fisttp
push
loope
jo
sahf
xchg
lods
mov
loop
push
add
rcr
inc
je
jl
xchg
pop
mov
jno
push
stos
(bad)
and
call
(bad)
lock
push
inc
cmp
gs
cmp
push
mov
mov
(bad)
leave
add
fbstp
pop
sahf
or
dec
cmp
cli
jns
repnz
ins
pusha
stos
xacquire
dec
mov
fdiv
jmp
mov
inc
xchg
mov
int
mov
or
stos
sbb
push
lods
ja
pop
jp
aaa
and
popa
dec
int3
cmp
adc
repnz
lahf
enter
jle
mov
push
popa
inc
jae
je
bound
jno
popa
push
gs
pop
popf
add
xchg
or
and
add
cwde
xor
mov
pop
stos
test
in
fist
test
mov
push
cwde
arpl
scas
test
mov
daa
inc
pop
jg
sbb
cld
xchg
(bad)
bound
jae
mov
shl
jp
inc
push
mov
xchg
jge
dec
inc
in
sbb
jmp
jmp
ds
dec
mov
aam
fld
in
dec
aaa
cmp
jmp
pop
sub
and
pop
and
pusha
ja
pop
mul
xor
push
cmp
outs
mov
btr
mov
mov
movs
xchg
inc
mov
sbb
cs
push
sbb
lods
cmp
mov
fwait
inc
js
mov
test
scas
adc
mov
loopne
int3
push
pop
in
rcl
std
mov
stc
aad
test
enter
xchg
idiv
mov
and
jge
into
jecxz
sub
in
add
and
dec
sbb
stc
jmp
imul
mov
push
xor
jmp
mov
pop
mov
pop
and
shr
js
(bad)
pop
scas
fnstsw
xor
ss
test
mov
test
mov
sbb
mov
imul
dec
mov
imul
dec
sbb
lods
jmp
xchg
mov
mov
mov
cdq
call
mov
push
call
push
add
inc
(bad)
pusha
pushf
mov
shl
(bad)
fstp
out
or
xor
sbb
pop
dec
sub
rol
cmp
idiv
add
sbb
dec
sub
repnz
jnp
sub
es
cmp
ror
or
mov
xor
aaa
lahf
dec
lds
xchg
dec
jnp
push
fstp
retf
nop
ins
into
xor
and
mov
fwait
lea
sti
sbb
call
(bad)
add
ds
mov
push
add
cmp
fwait
xor
inc
cmp
imul
push
shr
adc
shr
stc
jl
jns
fnsave
mov
clc
ret
ins
and
inc
call
popf
ja
test
xor
add
xchg
push
in
in
xchg
(bad)
cmp
xchg
cmp
mov
lahf
cmc
(bad)
fs
mov
ins
les
or
jns
and
cmp
or
clc
mov
adc
and
xlat
mov
stos
or
test
push
mov
test
mov
dec
les
or
mov
jle
push
lods
dec
mov
idiv
mov
out
xor
aam
out
sub
adc
cld
out
and
mov
stos
pusha
test
pop
mov
pop
movs
pop
int
mov
pop
xor
add
or
daa
imul
push
push
sub
mov
and
cmp
xor
repnz
jmp
mov
es
dec
shr
pop
aas
fdiv
adc
ror
jne
dec
cmps
add
hlt
shr
fs
sahf
imul
xor
xchg
or
bound
pop
or
and
cwde
dec
push
cmp
push
scas
hlt
mov
sub
inc
adc
and
mov
shl
nop
in
xor
adc
outs
push
loopne
xor
(bad)
mov
div
je
mov
xchg
sbb
jl
mov
jo
push
adc
aad
mov
cmp
scas
popa
push
fbld
xor
and
sub
xor
mov
ja
outs
ret
enter
xor
mov
arpl
fsub
popa
daa
arpl
into
test
push
lods
mov
ss
outs
ret
les
sahf
data16
scas
imul
fidivr
and
in
cmps
sti
jnp
aam
mov
cmps
shr
and
jl
jne
(bad)
call
mov
mov
push
fs
sbb
xor
in
dec
call
sub
dec
jmp
(bad)
into
inc
adc
inc
(bad)
sbb
mov
push
cmp
xor
pop
push
cwde
adc
mov
pop
mov
xchg
mov
ins
mov
adc
dec
shr
inc
xchg
mov
sub
movs
jnp
ins
outs
test
xchg
addr16
aad
pop
and
dec
std
repnz
add
push
cmp
leave
inc
stc
es
test
add
pop
cmp
push
push
cmp
jge
cmp
out
mov
outs
ja
clc
fistp
arpl
cwde
jle
xor
sahf
test
movs
aas
or
inc
out
dec
jmp
dec
movs
out
pop
and
mov
imul
sub
xchg
jmp
outs
popa
clc
ds
popa
pop
jg
pop
adc
ret
jb
jl
add
in
mov
aaa
cmps
nop
xlat
mov
mov
movs
cmc
fwait
cmp
add
mov
mov
cmp
inc
daa
mov
xchg
fsub
dec
mov
dec
xchg
jns
jbe
jmp
sub
push
jle
jns
(bad)
inc
and
xor
mov
ret
mov
retf
jae
arpl
lock
mov
repz
ret
mov
fwait
ret
cmp
lds
sti
iret
stos
inc
nop
test
push
jp
jnp
jbe
aam
sbb
(bad)
xlat
shl
retf
xor
daa
inc
xor
xor
or
repnz
out
icebp
push
cmp
js
fiadd
sbb
adc
(bad)
les
pop
inc
push
in
push
rcr
in
push
fist
pop
inc
pushf
push
clc
dec
pop
(bad)
jb
ror
nop
ret
jecxz
cs
push
ret
lods
ret
fld
lods
adc
adc
dec
sbb
and
adc
movs
pop
xlat
fwait
mov
iret
pusha
add
lods
std
sub
sbb
loop
popf
hlt
in
xchg
fs
add
outs
fist
popa
repnz
cmp
add
pop
fiadd
sbb
xchg
xchg
ins
ins
ror
(bad)
enter
fdiv
and
ret
fadd
shr
mov
ins
mov
pop
outs
ds
stos
movs
inc
pop
sub
xchg
add
ret
dec
inc
movs
mov
fisttp
jge
lods
pop
inc
sub
pop
or
into
mov
push
xchg
movs
add
sub
mov
pusha
jo
jo
or
fdiv
dec
cmp
pop
sti
dec
sub
and
mov
loope
dec
and
in
mul
cmps
movs
mov
cmc
pusha
jmp
loope
call
popf
xchg
jne
xchg
mov
sub
(bad)
les
sub
pop
push
shl
aad
jne
mov
lea
adc
xor
jnp
jb
std
mov
stos
xcrypt-cbc
cmps
push
push
cmc
and
pop
stos
jo
dec
sub
daa
and
std
loop
ret
push
fnstsw
nop
push
aam
(bad)
pop
push
lds
add
dec
xor
addr16
adc
jne
mov
xor
pop
jecxz
imul
adc
xor
cmp
push
jae
dec
inc
(bad)
xchg
dec
cld
stos
in
leave
xchg
or
(bad)
add
test
movs
int
cmp
ins
or
popa
mov
pop
fsub
ins
fnstsw
out
repz
mov
imul
inc
in
jbe
mov
xor
add
nop
dec
hlt
int3
and
out
(bad)
loop
test
mov
lods
inc
jmp
scas
bound
scas
dec
inc
jnp
(bad)
or
jl
and
ins
fwait
jb
xchg
imul
jb
stc
xor
inc
xchg
add
xchg
dec
push
je
sub
jg
jle
xor
sbb
bound
loope
imul
xor
jo
or
call
jnp
jle
cmp
bound
xchg
sbb
stc
sub
inc
adc
int
repz
cmp
aas
adc
lds
pusha
out
movs
cmp
add
test
sbb
and
jns
or
stc
push
fild
mov
push
lahf
push
mov
cmp
mov
fild
aas
pop
retf
aam
data16
jl
or
push
inc
out
(bad)
in
mov
in
inc
cmp
xchg
xchg
sub
in
clc
cld
xor
fist
aas
mov
stos
pop
ror
xor
sub
adc
mov
ss
aam
and
repnz
test
fldcw
ja
in
ins
and
adc
jmp
outs
popa
(bad)
mov
sub
lahf
mov
bound
jl
pop
mov
stc
add
das
jne
pop
enter
sti
mov
clc
xchg
imul
je
xor
mov
jns
pop
ins
mov
repz
mov
ja
movs
and
imul
fs
dec
fs
daa
bound
fcomp
xor
shl
add
add
xchg
xlat
push
rcl
inc
inc
loop
(bad)
stc
idiv
cmp
add
and
mov
mov
pop
scas
lds
loop
add
pop
adc
inc
push
es
daa
aad
fcom
mov
retf
push
nop
push
or
aad
cwde
loop
xchg
or
sbb
push
out
into
sub
pop
inc
push
or
mov
iret
adc
cmp
lods
mov
pushf
adc
mov
adc
adc
dec
fisttp
hlt
neg
popa
or
in
scas
pop
scas
xor
pop
test
ja
stc
sti
jmp
scas
sbb
shr
bound
bound
xor
adc
sbb
dec
in
xchg
(bad)
aas
jg
cld
cmp
fsubrp
mov
sbb
pop
movs
cmp
or
aaa
jl
retf
xchg
mov
inc
inc
and
mov
movs
sti
cld
push
aad
cs
sete
retf
test
xor
jnp
dec
je
push
add
xor
test
sub
pop
push
jno
loopne
dec
test
shl
fwait
cld
xchg
mov
ds
and
mov
popf
cmps
call
push
ins
loop
mov
mov
aaa
outs
int3
adc
test
sub
lock
int3
cmc
out
int
and
push
push
mov
das
mov
div
push
loop
inc
cwde
jnp
push
test
outs
sbb
dec
mov
push
fs
or
mov
push
icebp
sub
stos
xchg
outs
inc
xchg
scas
int3
xor
jp
shr
int3
mov
fsubr
shr
and
mov
in
int3
cmp
jae
cmp
or
fst
jg
loope
mov
sbb
jl
mov
sub
icebp
aas
fs
adc
push
mov
ret
dec
out
mov
sar
in
mov
sub
mov
xchg
ins
sti
out
jne
sbb
int
push
pusha
(bad)
push
and
dec
jb
stc
dec
push
xor
repz
push
in
in
xchg
add
and
mov
push
frstor
ss
gs
sbb
pop
loopne
nop
jne
in
inc
push
inc
stos
push
sub
fsubr
les
int3
sub
movs
pusha
xor
push
stos
xlat
clc
pop
pop
dec
pop
push
xor
add
into
xor
and
push
push
std
aas
into
lods
nop
ret
jp
shr
jl
imul
fistp
and
mov
leave
push
(bad)
adc
push
addr16
adc
jecxz
leave
sub
int3
cmp
cmp
outs
inc
cmps
outs
(bad)
loop
out
mov
pop
(bad)
mov
neg
or
(bad)
(bad)
test
(bad)
mov
mov
(bad)
aam
push
je
inc
retf
xchg
ins
or
push
lea
push
or
retf
retf
int
jnp
in
inc
inc
int3
repnz
push
loopne
mov
das
js
aas
in
(bad)
movs
cmp
or
jae
inc
xor
inc
fisub
inc
mov
js
stos
sbb
arpl
das
in
ins
mov
dec
loope
lahf
push
mov
retf
(bad)
xchg
fs
nop
test
and
dec
push
(bad)
stos
push
xchg
adc
push
inc
push
aad
dec
jmp
(bad)
stc
sbb
hlt
add
cmp
out
mov
movs
inc
loope
pop
cmp
sti
adc
adc
outs
sbb
pop
int
push
pop
xchg
add
test
push
adc
sar
popf
mov
popa
cmp
pop
test
(bad)
cmp
pop
dec
fld
cmp
pop
xor
shr
std
fwait
jl
mov
mul
ret
ds
mov
ins
stos
ret
jecxz
add
adc
pop
outs
or
popa
scas
and
je
adc
push
aaa
pop
push
or
inc
jno
into
push
(bad)
fwait
or
(bad)
sub
scas
imul
shr
stos
push
lds
pop
and
inc
ret
cmp
aaa
mov
push
xor
mov
js
rcr
mov
adc
mov
outs
jecxz
cmp
std
lds
daa
fsubr
idiv
mov
mov
adc
sub
lods
data16
mov
int3
mov
repz
shl
xchg
or
add
cmp
fcom
hlt
xor
sbb
int
and
retf
mov
popa
adc
jecxz
mov
test
inc
daa
lea
mov
arpl
pusha
leave
mov
into
push
pop
mov
and
outs
or
cli
jecxz
rcr
dec
bound
lahf
lods
sar
jl
into
aaa
(bad)
leave
and
das
xchg
into
cmp
dec
or
movs
cld
loope
push
or
adc
mov
or
pop
into
pop
sbb
mov
mov
jg
and
(bad)
mov
pop
dec
jae
int3
adc
jge
mov
xchg
and
pop
push
clc
pusha
retf
lods
addr16
add
gs
pusha
sahf
sub
jle
repz
sub
jnp
imul
mov
mov
lock
test
inc
push
push
pop
and
cmc
or
inc
add
cmps
es
pop
clc
mov
out
aas
je
shr
(bad)
fist
add
(bad)
rcr
ja
mov
mov
je
retf
in
fisub
fnstenv
dec
push
aaa
in
cmp
xor
sub
jmp
daa
sub
sub
push
dec
mov
rcr
test
sti
sbb
hlt
push
adc
fldcw
pop
mov
outs
repz
fdivr
fisttp
test
or
sahf
jb
pop
cmps
je
test
mov
jbe
cwde
and
or
enter
mov
jae
push
xchg
xor
adc
loop
dec
cmp
lock
imul
aad
enter
mov
push
mov
fnstenv
xor
aad
or
xchg
pushf
(bad)
icebp
sahf
pusha
in
inc
imul
adc
add
fistp
mov
pop
push
add
aaa
imul
inc
sub
into
cdq
push
push
dec
arpl
xchg
movs
lods
pop
hlt
jp
(bad)
ss
sub
sbb
or
inc
mov
cmp
fcmovnbe
sahf
ins
sub
jmp
adc
ret
test
rcr
aaa
out
jg
fs
add
sbb
movs
pop
leave
(bad)
mov
int3
(bad)
dec
test
push
repnz
jne
inc
ins
or
and
retf
dec
adc
(bad)
out
(bad)
pop
mov
dec
cmp
shr
push
es
int3
icebp
(bad)
lods
loop
pop
push
sub
dec
cmp
jno
add
out
fdiv
adc
and
mov
sbb
imul
push
fst
mov
clc
sbb
xchg
jnp
push
jne
das
and
mov
(bad)
test
test
(bad)
mov
stc
daa
push
cli
sar
sar
lods
je
inc
fs
fcomp
push
mov
sbb
ds
les
inc
fisub
mov
mov
or
inc
sbb
cmc
test
std
push
mov
call
pop
je
jmp
loope
pop
cmp
imul
in
fbld
mov
jmp
in
cwde
mov
cld
pop
push
mov
jnp
pop
ret
cmps
in
(bad)
lock
dec
fiadd
and
mov
push
stos
xchg
cld
mov
inc
xor
imul
push
movs
add
out
or
movs
repz
add
mov
cdq
push
jle
jne
arpl
adc
or
push
ficom
push
addr16
push
push
mov
sti
add
xchg
test
hlt
and
mov
repnz
push
daa
mov
mov
pop
out
movs
enter
xchg
jnp
(bad)
je
inc
jns
adc
jns
retf
pop
and
push
fucomip
ins
sbb
push
stc
jg
sub
adc
xchg
hlt
aad
sbb
dec
pop
idiv
lods
pusha
outs
jmp
sbb
sub
imul
pop
or
scas
cmp
fisub
jmp
pusha
das
outs
jns
push
lds
push
or
call
adc
cmc
stos
mov
call
cwde
test
inc
inc
ret
push
aam
pop
sbb
test
inc
mov
das
inc
mov
jecxz
outs
test
aam
clc
mov
fimul
fmul
mov
sub
sub
int
push
scas
aad
scas
aad
repz
(bad)
in
cmp
mov
add
fwait
bound
das
push
sbb
dec
je
xor
cmp
or
add
call
int3
retf
test
pop
out
dec
call
es
fldcw
jae
and
or
or
mov
adc
out
stc
xor
rep
dec
add
xchg
cwde
xchg
rol
xchg
pop
cmp
stos
hlt
mov
xchg
mov
and
dec
neg
fs
arpl
retf
cmc
test
les
pushf
enter
xlat
mov
inc
out
push
add
pusha
push
fisttp
and
mov
xchg
scas
leave
imul
push
mov
sbb
jl
aaa
pop
repnz
aaa
add
out
xor
sar
xor
inc
js
pop
imul
aas
jb
sbb
jmp
aad
cmps
mov
jmp
xor
jecxz
mov
pop
xor
add
stos
adc
add
jmp
add
push
xor
jnp
cmc
push
ins
adc
sub
jo
bound
dec
pop
lds
repz
sbb
cwde
fwait
shl
push
xchg
jp
push
inc
and
mov
xchg
lock
xor
repz
push
xchg
arpl
ss
inc
daa
push
adc
fwait
je
xchg
mov
and
push
test
sbb
cli
mov
mov
stc
retf
jb
repz
lods
pop
push
dec
cmp
icebp
lahf
cli
mov
mov
inc
push
inc
pop
mov
add
xchg
dec
add
xchg
xchg
pop
out
outs
cli
ror
mov
clc
jb
aas
inc
mov
(bad)
leave
mov
pop
ins
mov
or
ds
outs
(bad)
mov
fist
xchg
stos
push
scas
pop
mov
and
test
pushf
pop
dec
mov
sbb
or
push
xor
sub
arpl
out
ret
sub
mov
jg
sub
push
xchg
jl
jge
cmp
mov
sub
(bad)
and
or
das
fwait
inc
cmp
loopne
add
cmps
pushf
and
cmps
add
(bad)
and
jo
sbb
dec
clc
in
fs
(bad)
mov
push
dec
sub
lods
push
es
test
jg
dec
jp
and
pop
xchg
adc
aas
xchg
sbb
push
cmp
outs
xor
mov
out
ja
cwde
ins
xchg
jno
xor
sub
mov
rol
xchg
bound
aaa
sub
retf
or
lahf
or
mov
mov
sbb
cwde
or
(bad)
xor
ret
adc
(bad)
push
pusha
fcom
dec
mov
add
xor
and
dec
inc
dec
push
fld
mov
jle
scas
xchg
fidivr
(bad)
fisub
or
xchg
and
push
das
mov
sahf
xor
xor
icebp
and
sub
lods
xor
mov
jns
xchg
mov
outs
stos
aad
icebp
jne
mov
lock
test
pop
dec
sub
dec
shr
dec
cmc
mov
fsubr
jp
sbb
aas
cli
stc
mov
jmp
fisubr
(bad)
out
stc
aas
sbb
dec
sub
jmp
cwde
xor
adc
or
outs
adc
sub
pusha
fdiv
sbb
jno
sti
in
xchg
inc
xor
sub
out
sbb
push
jne
adc
popa
inc
sar
(bad)
adc
cmp
push
xor
into
mov
sbb
addr16
inc
jno
repnz
pusha
adc
or
adc
or
and
leave
daa
jg
add
adc
scas
add
cwde
xor
pop
inc
or
lds
sub
or
push
inc
and
(bad)
mov
add
cmps
or
aam
(bad)
or
outs
xor
retf
inc
add
call
movs
ds
sbb
and
mov
inc
adc
sub
iret
mov
push
jno
scas
fiadd
jmp
in
inc
jmp
test
out
ret
int
fnstenv
mov
jnp
cmp
ja
mov
or
and
or
(bad)
or
rol
stos
loop
dec
xchg
jno
ja
int3
retf
xchg
xchg
js
stos
adc
shr
push
jno
mov
jae
mov
jbe
inc
cmps
add
mov
add
mov
mov
retf
shl
pop
fisttp
sti
(bad)
hlt
cld
jne
call
and
fs
or
(bad)
sti
dec
jb
out
cmp
stc
aad
push
push
fnsave
stc
and
int
mov
dec
inc
test
inc
mov
push
mov
int3
inc
xchg
out
mov
mov
test
shl
fwait
lods
not
pop
cs
repz
retf
mov
pusha
scas
xchg
je
jp
popf
fcomp
sub
mov
daa
sbb
push
and
cmp
cmp
out
add
pop
movs
ret
xchg
dec
lods
xchg
add
cli
pop
mov
jnp
je
cmp
mov
add
leave
mov
retf
outs
ficom
retf
mov
loopne
sbb
inc
das
mov
addr16
(bad)
or
mov
out
retf
cmp
mov
xlat
movs
or
dec
xor
sbb
and
sub
push
aam
jge
pop
cld
pop
add
icebp
(bad)
cmps
stc
sbb
int3
inc
adc
and
jne
jl
retf
dec
lahf
mov
jg
jp
movs
sti
rol
sbb
pop
rcl
inc
pop
and
fmul
sti
jl
push
add
push
mov
pusha
imul
sub
test
mov
aas
iret
mov
mov
iret
lods
push
sbb
shl
ret
int3
loop
push
(bad)
xlat
jle
jl
mov
jbe
sbb
enter
stos
repz
std
outs
mov
mov
dec
jl
fs
call
bound
dec
xchg
fdivr
loop
add
push
cmp
repnz
push
popf
mov
mov
fistp
mov
shl
cmp
pop
not
mov
in
mov
sti
or
scas
xor
lea
addr16
into
push
outs
mov
push
xlat
xor
dec
ss
jns
repnz
mov
call
inc
sub
push
stos
shl
jne
cmps
mov
sbb
adc
mov
lock
mov
jle
enter
mov
shr
out
pop
gs
pusha
inc
push
cmp
push
add
mov
dec
std
test
out
inc
rol
iret
sbb
push
jmp
call
dec
mov
int3
sbb
popf
popa
movs
push
into
aam
cmp
jl
jmp
cmp
dec
fild
jbe
or
cmc
shl
(bad)
push
loop
mov
dec
xor
xor
(bad)
shl
xchg
push
jbe
sbb
stos
aaa
stos
mov
sub
inc
inc
xor
mov
ficom
shl
lods
loope
and
xchg
call
cs
fimul
pop
add
ret
cmp
iret
xchg
inc
push
and
fdiv
test
xor
mov
adc
mov
fcomi
pop
mov
jo
push
ror
ss
fwait
jmp
stc
rol
shl
ficom
xor
push
push
pushf
out
nop
daa
fs
sub
push
pop
and
add
and
call
inc
jnp
stos
enter
int3
or
lea
gs
inc
out
enter
push
cli
cmp
xlat
mov
popa
sti
jbe
inc
or
mov
movs
mov
xchg
and
mov
ss
ss
loopne
inc
icebp
fld
cli
pushf
inc
push
ja
test
out
add
dec
or
xchg
je
addr16
loope
or
inc
mov
aas
sub
clc
fisub
sbb
aad
sub
sub
out
test
lods
test
jb
aad
hlt
clc
ins
rol
mov
pop
rep
jmp
xchg
mov
push
dec
arpl
sahf
lods
aas
jg
dec
imul
mov
call
movs
adc
lds
pop
popf
mov
mov
inc
sub
cmp
pop
add
mov
pop
enter
mov
pushf
inc
sub
mov
popf
adc
cmp
cmp
jmp
mov
xchg
and
popa
fbstp
xchg
cmp
clc
push
push
repnz
loop
repnz
sar
sub
and
cwde
jle
lea
push
jno
push
cmp
sbb
xchg
dec
(bad)
jg
mov
adc
jno
out
and
xchg
fild
xchg
bnd
in
mov
pop
sti
bound
into
xor
dec
xchg
(bad)
jecxz
mov
(bad)
add
dec
stc
inc
gs
ds
es
inc
popf
(bad)
adc
mov
jmp
add
jno
push
push
jo
push
mov
std
retf
int
mov
push
push
push
retf
hlt
loop
test
jp
sar
xchg
or
push
in
mov
test
stc
cwde
inc
mov
aaa
pop
js
push
jl
inc
and
or
xchg
jecxz
inc
mov
cmps
and
out
push
mov
retf
adc
js
mov
xchg
es
mov
pop
into
in
clc
jae
cmps
xchg
jbe
and
pop
jne
mov
scas
push
xor
push
xchg
in
mov
outs
push
adc
out
outs
xor
adc
xor
ss
cmps
jno
movs
sub
int
mov
inc
push
enter
cdq
jmp
push
popa
scas
call
js
xchg
dec
(bad)
imul
pop
fsubr
pop
(bad)
aam
scas
xchg
cld
daa
xor
retf
and
pop
and
lods
(bad)
aad
in
push
outs
pop
sub
cli
stos
mov
mov
lods
jge
lock
outs
sub
scas
mov
or
fisub
js
out
dec
xor
xor
in
inc
test
cmps
sbb
mov
in
outs
fs
iret
sahf
mov
retf
lods
out
inc
cli
cs
push
sti
mov
movs
lock
or
inc
inc
data16
mov
pop
jp
shl
push
sub
push
stos
xchg
xchg
jl
push
sbb
pop
pop
dec
stc
sbb
cmp
or
movs
sbb
push
pop
mov
iret
nop
(bad)
xor
sbb
mul
pushf
shr
xchg
push
mov
add
sub
cld
pop
mov
pop
fwait
or
inc
out
fwait
enter
js
out
(bad)
mov
mov
cmp
push
data16
ja
sti
and
fild
inc
add
mov
sbb
or
jle
pop
adc
add
gs
fadd
mov
cmp
push
add
cld
hlt
mov
mov
or
mov
arpl
lock
sbb
inc
or
in
cmps
mov
xor
push
pop
lahf
test
inc
dec
lods
sbb
xchg
adc
ja
outs
inc
push
xchg
jl
push
xchg
push
in
pop
push
fsub
rcl
inc
pop
mov
lds
enter
mov
cmps
aas
pop
sar
das
fnstsw
aam
in
cmc
or
arpl
retf
mov
(bad)
sti
jl
jne
test
sub
inc
xor
or
jo
dec
lock
pop
pop
and
push
in
sub
in
(bad)
push
movs
add
and
mov
imul
cmps
neg
nop
mov
pop
push
inc
mov
mov
push
popa
out
loop
(bad)
lahf
lea
cmp
push
cld
lods
(bad)
push
rcr
or
cmp
inc
cmp
jp
sahf
cld
ss
mov
mov
and
xchg
aas
test
cli
jmp
stc
cmp
pop
int
sbb
(bad)
shl
lods
jg
sub
pop
ds
fadd
add
xchg
push
call
mov
lods
cmps
ret
loop
(bad)
mov
and
or
cld
js
pushf
lods
push
jbe
scas
aad
mov
retf
jp
je
push
iret
push
leave
jo
mov
stos
pop
xchg
mov
pop
repz
test
dec
mov
(bad)
in
inc
inc
ret
jo
xchg
adc
fnsave
or
mov
push
and
cs
mov
(bad)
jo
pop
mov
sbb
mov
cdq
cli
rol
adc
add
sub
es
dec
cmps
fdivr
mov
jmp
mov
imul
xchg
mov
fild
or
dec
nop
das
jl
push
add
repz
mov
sub
in
daa
sbb
cmps
dec
sar
cmp
cmp
fcmove
fld
mov
lds
mov
sub
and
sub
mov
mov
mov
pop
(bad)
push
mov
xchg
sar
daa
idiv
test
sbb
das
aam
js
(bad)
jns
adc
call
fist
call
div
xchg
mov
jl
add
out
mov
mov
and
sti
xchg
jmp
add
imul
bound
pop
jmp
sub
fsub
push
jo
inc
test
loope
(bad)
jo
daa
out
shl
jmp
retf
loopne
(bad)
repnz
mov
jge
mov
cli
sub
rcr
jle
(bad)
pusha
retf
jl
shl
dec
iret
mov
scas
inc
push
movs
daa
mov
xchg
je
inc
and
in
push
and
call
sbb
std
sbb
xchg
ret
cdq
push
cmc
mov
mov
add
popf
fwait
push
adc
cmp
sbb
pop
jg
in
and
pop
pop
cmp
ins
sahf
inc
fsubr
add
push
imul
add
into
xor
hlt
xchg
sub
push
mov
mov
fld
scas
push
or
and
xchg
pop
xor
cmc
jmp
das
or
shl
sar
or
mov
cmp
fwait
cmp
stc
mov
cmp
das
jmp
(bad)
mov
jg
pop
daa
xchg
jne
cmps
imul
mov
jmp
mov
data16
das
push
xor
sbb
xchg
in
cmp
inc
cwde
int
or
and
stos
xchg
cmp
retf
xchg
push
mov
adc
cmp
adc
lds
test
mov
pusha
or
bound
fadd
cmp
stc
popa
in
push
imul
add
mov
cs
(bad)
push
cmp
fwait
add
sbb
movs
jbe
sub
push
xor
in
ret
scas
mov
xchg
out
cmp
clc
or
or
outs
mov
repnz
clc
mov
jp
dec
les
repz
cli
fcomp
xor
clc
into
popa
test
loop
mov
imul
cmps
(bad)
out
ja
or
aaa
loopne
aaa
out
gs
xchg
jmp
xchg
mov
mov
sbb
imul
cmp
push
jmp
dec
pop
sahf
call
mov
and
jnp
pop
test
adc
xor
into
add
jno
scas
mov
mov
and
mov
aad
popf
in
aas
(bad)
repz
cmc
pop
or
or
aad
adc
sti
inc
sbb
dec
pop
ret
xor
and
in
fs
cmps
(bad)
fcomp
das
repz
std
and
sub
xor
or
adc
add
rol
xor
xchg
xor
sub
movs
push
xchg
fdiv
movs
mov
mov
sahf
movs
call
je
fsub
dec
repnz
in
dec
leave
in
stos
cli
push
lea
inc
inc
pop
mov
dec
test
in
test
outs
popf
sub
push
jns
scas
scas
mov
and
inc
pop
imul
(bad)
push
cld
int
and
call
xor
retf
fisttp
adc
test
pop
fisubr
mov
or
mov
gs
dec
test
stos
repnz
dec
fs
movs
pop
call
push
pop
pusha
leave
pop
stos
int3
call
mov
add
xchg
sub
sahf
pusha
jb
or
sub
xchg
cdq
mov
add
pop
sti
outs
(bad)
jne
idiv
int3
fcomp
sbb
pop
imul
and
add
stc
push
cmps
fidivr
enter
pop
jecxz
cdq
fcomp
inc
rol
adc
cmp
out
in
xor
lea
mov
mov
out
push
aam
imul
test
retf
js
sbb
dec
jecxz
mov
fs
dec
fmul
stc
(bad)
add
xchg
jl
jle
retf
sti
hlt
gs
xlat
push
xchg
das
lock
fbstp
and
sbb
stos
sbb
test
js
or
sbb
test
or
cmp
pop
sti
add
jns
fucomp
inc
pop
ins
xchg
mov
cmp
int
sub
sub
jmp
es
pop
dec
and
sahf
xchg
cmps
dec
popa
jne
xor
(bad)
mov
fcomp
ret
(bad)
sahf
mov
(bad)
inc
inc
push
in
fld
jp
(bad)
lds
ins
sub
mov
rol
sbb
js
mov
das
test
nop
sub
loopne
jge
out
dec
test
or
jp
or
push
pop
cmp
sti
cdq
adc
mov
dec
aad
pop
push
pop
mov
mov
mov
jg
jo
xor
jns
pop
xchg
or
mov
xchg
loop
(bad)
mov
mov
js
jp
mov
in
imul
sbb
stos
scas
add
shl
xchg
sub
mov
inc
sbb
cld
jb
outs
xchg
js
or
mov
(bad)
jno
xchg
adc
xchg
ret
mov
pop
pusha
adc
push
in
lea
sbb
cmp
cli
mov
cmp
pop
cmp
fwait
cmp
xchg
xchg
xchg
xchg
jnp
jp
adc
retf
ret
out
bound
mov
mov
hlt
adc
or
mov
adc
(bad)
mov
pop
aas
jmp
out
fimul
dec
and
movs
xor
sahf
outs
or
fdiv
and
adc
rol
sbb
mov
pop
lea
es
bound
inc
sbb
jmp
push
(bad)
xor
inc
rcr
mov
(bad)
xchg
mov
xchg
nop
mov
sbb
jne
out
(bad)
xor
stc
popa
test
ins
imul
inc
ja
mov
mov
(bad)
xor
or
out
and
lea
xor
or
sub
bound
pushf
jle
jmp
push
fcom
mov
push
jmp
fucomp
cmp
xchg
rcl
(bad)
push
cmp
add
fdivrp
retf
mov
imul
fcomp
jp
inc
jo
mov
and
aam
in
retf
or
into
cdq
les
mov
jg
dec
lods
inc
int
jecxz
into
pop
cmc
stos
dec
pushf
sti
lods
inc
mov
pop
mov
mov
(bad)
ret
pop
add
lds
mov
push
les
xor
(bad)
jo
loope
in
call
cmp
sub
xchg
shl
push
repz
pop
mov
fsubr
and
sub
xchg
loop
mov
dec
pop
(bad)
data16
xlat
stos
retf
in
fstp
(bad)
fsubrp
jle
cld
adc
(bad)
ficomp
mov
inc
mov
push
imul
movs
sar
and
xor
sub
int3
or
pop
jmp
loopne
rol
sub
xlat
cmp
(bad)
mov
pop
repz
add
cli
les
xchg
mov
scas
ret
sub
mov
xchg
aad
inc
jbe
dec
dec
fst
mov
aas
call
jp
lods
xchg
jecxz
movs
sbb
xor
rol
pop
lahf
fisubr
xchg
dec
dec
or
add
cmp
pop
cmc
int3
jge
sbb
in
(bad)
pop
inc
mov
mov
add
xchg
rol
cmps
aas
sahf
scas
outs
jo
cmp
add
mov
repz
imul
lahf
call
fwait
sbb
sbb
lods
ss
jnp
xchg
jb
fdivrp
add
add
pop
std
push
sar
push
cdq
pop
jp
icebp
and
push
push
nop
call
in
pop
pop
or
mov
in
jl
loopne
push
idiv
dec
cld
pop
xchg
or
repnz
jp
lds
sti
xor
cdq
xor
sub
dec
jo
or
sbb
cdq
sbb
push
shr
nop
stos
sub
inc
test
jb
cld
ffree
push
cwde
aam
gs
mov
mov
pop
sbb
sub
xchg
sub
or
mov
pop
or
adc
cmp
sub
inc
fstp
or
in
call
jnp
aam
cli
pop
out
and
mov
dec
sbb
hlt
and
outs
push
das
sbb
push
fisubr
ja
rcl
out
xor
popf
dec
or
sahf
in
xchg
imul
pop
jno
ja
xlat
in
cmp
mov
dec
jbe
retf
inc
(bad)
fidivr
(bad)
loopne
pop
scas
dec
add
pop
lods
xchg
loop
not
mov
inc
les
fstp
inc
push
test
mov
fisttp
pushf
sti
rcr
cs
sbb
aam
jns
jae
xlat
jnp
lods
adc
push
and
add
(bad)
pop
xor
rcr
(bad)
push
add
xor
push
cmp
push
cld
hlt
das
pop
cmp
fidivr
aaa
or
sub
cmp
mov
std
add
test
xchg
test
fucomp
lods
sbb
bound
push
dec
fwait
xchg
pop
iret
enter
out
inc
push
mov
cmp
ret
cmp
test
mov
cmp
jne
mov
xchg
xor
jb
push
rcr
aam
xor
cmps
push
hlt
xchg
jae
scas
jnp
loop
cwde
call
icebp
xlat
ficomp
sub
adc
test
aad
and
sub
stos
arpl
xchg
dec
lods
mov
or
adc
mov
push
call
(bad)
cwde
fldenv
push
dec
mov
cwde
mov
xchg
mov
iret
push
push
pop
push
fisttp
mov
daa
cli
xchg
out
mov
shl
sub
mov
and
out
ds
mov
dec
ss
movs
add
lock
xchg
dec
sti
test
jo
mov
rcr
add
loopne
retf
inc
sbb
pop
(bad)
jb
mov
pop
les
popa
inc
cmp
loop
mov
xor
in
lock
adc
ss
adc
adc
push
pop
cmps
pop
dec
cmp
test
bound
or
nop
ja
imul
mov
jns
fsubp
inc
cli
idiv
cmp
jne
sbb
out
cli
sahf
push
in
mov
dec
sbb
or
adc
jecxz
sti
addr16
out
mov
popa
loope
xor
cmp
sbb
push
stos
(bad)
push
dec
mov
(bad)
add
sbb
push
add
out
mov
adc
rcr
and
add
fs
test
(bad)
jmp
hlt
inc
xchg
dec
mov
pop
add
add
pop
mov
pushf
xor
mov
sub
imul
les
fisttp
aaa
push
gs
and
ja
pop
mov
xchg
or
out
jecxz
dec
(bad)
jb
add
push
sbb
aam
int
scas
bound
xor
pop
cmp
jl
out
sub
jmp
dec
add
movs
mov
loope
mov
fnstsw
sub
and
ror
mov
push
test
(bad)
jl
retf
hlt
mov
ss
sti
stos
jmp
je
cmps
and
sub
jne
adc
pop
(bad)
cmp
enter
push
stos
fidiv
mov
pop
jmp
lods
pusha
ficomp
loopne
and
mov
mov
sbb
xor
xor
cdq
push
cs
inc
stos
push
leave
cmps
jne
out
push
daa
adc
into
pop
pusha
push
inc
pop
mov
sub
add
pop
arpl
sub
imul
pop
icebp
sbb
stos
dec
mov
(bad)
fisttp
mov
cld
shr
iret
test
dec
ss
or
sbb
jge
lods
test
lock
jl
loop
pop
shl
dec
out
retf
nop
pop
push
xor
jp
xlat
aad
and
aam
(bad)
inc
data16
sub
sbb
jns
add
pushf
mov
inc
jmp
jbe
xchg
add
mov
mul
mov
ja
clc
in
xor
dec
xor
dec
scas
cs
shr
adc
rol
lea
loop
aaa
mov
jns
leave
imul
mov
fidiv
enter
repnz
test
or
cmp
mov
mov
repnz
sbb
fsub
dec
xchg
mov
ret
fs
pop
outs
pop
movs
loop
add
adc
xor
jne
dec
stos
mov
xchg
inc
enter
in
xor
lods
outs
test
lea
fstp
shr
out
mov
push
sub
mov
inc
cld
(bad)
push
cmp
adc
mov
xor
int
lahf
out
cmp
sub
mov
mov
aaa
je
jb
gs
and
retf
daa
push
mov
hlt
or
add
mov
movs
push
daa
stos
inc
mov
push
clc
xor
and
loop
test
sbb
loopne
xlat
xchg
mov
xchg
imul
sbb
(bad)
xor
scas
fild
xchg
sahf
sar
aaa
add
jle
pop
xor
in
stc
push
call
pop
push
cmp
imul
test
or
sub
bts
sub
es
jle
vunpckhps
arpl
imul
xor
inc
lods
cmp
xor
add
jb
jns
adc
jns
in
std
dec
and
shr
in
xchg
xchg
xchg
or
mov
retf
icebp
dec
mov
xlat
and
div
rol
cmp
fisubr
push
push
jl
inc
xchg
xchg
cmp
arpl
sub
ins
sub
int3
push
imul
jns
inc
push
push
xchg
sub
not
ret
mov
hlt
not
push
ins
sub
xchg
outs
push
xchg
and
add
adc
into
adc
push
or
pop
lock
and
or
jnp
jnp
mov
leave
movs
jae
adc
out
fimul
(bad)
push
dec
add
xchg
or
mov
cmps
jnp
icebp
ficom
sub
popa
mov
les
jp
inc
jnp
jecxz
push
ins
and
mov
push
pop
xchg
jne
lahf
mov
or
(bad)
repz
jp
cdq
ja
mov
retf
mov
inc
push
and
inc
in
mov
repz
push
dec
repz
nop
push
stc
imul
pop
loop
xlat
dec
sub
retf
mov
call
sbb
mov
adc
call
stos
out
dec
(bad)
xor
jl
test
adc
movs
jge
dec
mov
jmp
mov
les
stos
inc
mov
push
adc
int3
outs
repz
jb
mov
xchg
mov
std
cmps
mov
inc
cld
pop
arpl
or
ja
and
sbb
clc
push
mov
dec
xchg
mov
or
pop
pop
xor
cld
pop
mov
movs
(bad)
out
popa
push
lods
or
cmps
jecxz
in
push
push
jp
sbb
dec
fs
mov
popw
dec
shr
pusha
inc
pop
push
aam
rcl
sahf
les
mov
push
cmp
mov
in
cwde
sbb
call
push
cmp
pop
or
add
sub
cld
jnp
sbb
mov
leave
jecxz
sbb
cli
test
cmp
test
(bad)
or
mov
xor
test
ins
test
xchg
movs
adc
jge
push
jg
ja
cmp
or
lea
lahf
jne
out
add
(bad)
push
sar
cld
mov
mov
or
cli
and
jnp
jbe
movs
pop
cmp
cmps
lock
pop
jo
mov
mov
addr16
je
push
mov
sar
sti
sbb
stos
jbe
mov
clc
and
add
jbe
ss
ja
std
mov
cmp
stc
rcr
fmul
xor
out
jecxz
stos
cmp
movs
xor
cli
lods
sbb
push
mov
dec
gs
test
push
dec
sub
and
pop
ret
sbb
mov
mov
dec
and
mul
cmp
mov
ds
push
stc
jns
arpl
out
xchg
lock
fst
jecxz
test
push
jmp
mov
out
xor
jae
lahf
sbb
jecxz
scas
ins
fistp
retf
in
jl
js
adc
mov
stos
daa
fisubr
add
cdq
inc
sahf
popf
pop
stos
icebp
test
dec
icebp
popf
mov
gs
adc
mov
popf
sbb
lea
and
pop
out
or
mov
jne
mov
mov
aad
adc
ret
stos
jns
pushf
push
retf
sbb
(bad)
rcr
stos
mov
pop
test
adc
pusha
fwait
dec
sub
pop
jmp
nop
inc
sbb
add
pushf
or
(bad)
data16
int3
and
xchg
dec
mov
or
pop
sub
loopne
jnp
(bad)
cmp
jno
mov
push
mov
movs
xor
adc
test
fdivr
stos
jo
jo
in
stos
xchg
mov
jle
cmp
popf
fs
test
adc
lahf
sub
adc
pop
bound
add
lds
pop
push
fist
(bad)
dec
lea
not
fnstcw
bound
fdivr
mov
ror
(bad)
inc
jp
ret
test
bound
adc
das
push
pop
dec
ror
sub
mov
push
xor
jae
loop
add
cmp
mov
push
sub
fstp
ror
test
cwde
adc
loopne
cmps
arpl
jae
sar
inc
and
(bad)
push
fistp
fld
push
mov
imul
xor
jae
mov
scas
adc
xchg
push
(bad)
arpl
and
jmp
outs
out
dec
adc
ins
inc
in
cmps
stos
je
and
or
cmp
fwait
cmp
push
adc
(bad)
and
imul
sbb
mov
sbb
xchg
pushf
inc
cmp
xor
imul
xor
mov
in
out
scas
sub
jp
xchg
sub
(bad)
xor
test
outs
mov
xor
loope
aaa
xlat
hlt
aad
(bad)
aad
imul
mov
jbe
and
shr
fnsave
or
and
call
sbb
mov
ror
xor
dec
fbstp
mov
jmp
and
sar
jbe
ins
or
push
cmc
adc
push
ret
mov
sbb
das
mov
xor
(bad)
repz
pop
pop
jmp
in
lock
(bad)
(bad)
aaa
(bad)
mov
cmp
push
jge
mov
repnz
and
(bad)
xchg
out
stc
fidiv
push
or
imul
int3
push
dec
test
inc
aaa
out
mov
adc
mov
xchg
pop
shl
pop
enter
jg
fninit
(bad)
sub
sbb
je
jbe
mov
mov
lahf
pop
pop
outs
sbb
inc
add
jnp
jae
xchg
enter
cmp
mov
(bad)
push
xchg
mov
ja
enter
aaa
pop
or
out
adc
shl
int
mov
mov
ret
fisub
push
in
(bad)
dec
add
inc
out
in
mov
and
sbb
stos
xchg
xchg
add
ror
mov
inc
enter
leave
dec
es
sub
sub
and
and
or
sti
ins
in
sar
jecxz
inc
call
pop
aad
cs
movs
sub
sub
mov
push
daa
adc
dec
in
ret
cld
inc
call
jbe
inc
pop
loop
sbb
cdq
fwait
in
addr16
add
popf
and
inc
lock
and
and
jecxz
xlat
xor
push
mov
scas
mov
enter
into
jae
or
fcom
data16
test
aas
loop
fidivr
dec
popf
adc
xor
mov
fwait
cmp
test
xor
sbb
enter
repz
sub
add
mov
pop
dec
pop
mul
out
outs
inc
sbb
loopne
ds
push
mov
mov
sbb
dec
ins
enter
xor
adc
jecxz
test
movs
popf
add
dec
cdq
pop
mov
mov
shl
jle
xchg
lods
int3
ror
nop
loop
mov
sub
cwde
and
jne
xchg
xor
add
daa
ins
add
jmp
xchg
shl
test
ins
data16
cmc
in
pop
test
movs
and
shl
sub
inc
nop
adc
jge
inc
hlt
imul
fwait
addr16
imul
lock
sar
clc
je
push
add
rcl
inc
push
jnp
cmps
(bad)
mov
jg
and
arpl
cmp
loop
adc
cdq
or
in
or
shr
stos
sub
ret
sahf
and
sub
mov
rcr
je
jb
jmp
mov
dec
outs
arpl
cmp
enter
adc
repz
cmc
inc
pop
push
mov
nop
jge
jge
repz
ror
mov
xlat
retf
int3
dec
inc
dec
pop
push
leave
jbe
jns
add
hlt
aas
jne
out
call
inc
rcr
mul
aad
pop
pop
(bad)
push
mov
dec
mov
aad
adc
inc
in
data16
lahf
iret
enter
ret
call
dec
cmp
cmp
test
sub
js
stos
xchg
retf
push
or
sahf
movs
inc
loop
mov
test
out
aaa
sbb
loop
jno
cmps
test
fxch
cmps
sbb
push
pop
inc
stc
dec
sbb
mov
push
pop
call
test
jmp
test
nop
sahf
fcom
aas
stc
sbb
gs
sbb
outs
cmp
jge
loope
in
in
addr16
lock
mov
push
cmp
int3
xor
(bad)
out
mov
or
and
rol
jecxz
and
sbb
call
xor
(bad)
xchg
cmps
or
stos
and
mov
rcl
push
stos
add
call
pop
xchg
push
leave
mov
cdq
add
xor
mov
scas
pop
inc
sbb
mov
idiv
cmp
cmp
and
pop
sbb
lods
sti
ins
call
outs
shl
pop
mov
(bad)
nop
fcom
aas
sub
xor
jge
fst
xchg
punpckhbw
test
mov
cmp
dec
and
mov
lds
push
jnp
and
dec
sahf
out
mov
dec
ins
mov
addr16
outs
and
fild
in
sub
dec
div
sbb
jnp
and
addr16
cmp
mov
mov
dec
cmc
fst
mov
push
xchg
adc
pop
mov
jmp
and
jns
in
pushf
mov
dec
mov
or
stos
aam
pop
dec
pop
(bad)
jg
push
mov
push
add
ins
sar
jmp
fisubr
cmps
xchg
mov
sbb
jmp
fdiv
sub
loope
popa
fist
hlt
mov
and
mov
ret
daa
js
sub
jle
ins
call
cmp
iret
fsubr
je
inc
jp
or
cmp
ins
xchg
outs
scas
ins
cmp
push
aas
cdq
dec
rcl
or
jmp
mov
mov
and
ins
add
fild
or
inc
jns
cmp
cmc
sub
cmp
jg
arpl
shl
adc
test
cs
or
mov
mov
or
stos
inc
cli
cld
jmp
out
inc
xchg
(bad)
test
push
arpl
cs
pop
arpl
into
add
(bad)
jmp
dec
ja
mov
fsubr
(bad)
jo
jl
clc
psubq
push
cdq
jmp
mov
adc
(bad)
jl
mov
and
fwait
and
mov
gs
(bad)
mov
add
or
pop
or
repz
adc
jle
imul
ins
xor
pop
aam
test
fst
adc
shld
mov
out
popa
fcmovbe
out
push
(bad)
enter
arpl
ret
jne
stos
mov
cmps
fld
cmp
call
inc
add
adc
les
push
icebp
test
and
test
sub
stc
les
push
push
xchg
mov
fist
pushf
xchg
mov
xor
push
in
std
jne
xchg
or
xor
jecxz
out
push
jecxz
and
je
mov
(bad)
aas
and
pop
ret
test
in
jb
pusha
cs
adc
(bad)
pusha
fcom
cwde
fcom
dec
mov
sub
shl
js
push
add
clc
out
out
jno
xor
xor
mov
pusha
inc
imul
repnz
jge
in
mov
cmps
mov
mov
in
jne
cmp
xor
sbb
fs
pop
gs
leave
push
adc
xor
call
lods
and
aad
sub
dec
fist
mov
and
leave
pusha
xchg
cmp
xor
xchg
push
stos
out
xchg
push
addr16
xor
adc
sbb
sub
xor
push
inc
xchg
mov
sub
inc
inc
dec
pushf
shl
pushf
mov
pop
xor
jl
mov
cld
cmps
jb
sub
std
sub
sub
out
jl
sbb
push
add
dec
mov
fwait
sbb
cmp
mov
mov
push
(bad)
hlt
mov
retf
mov
fimul
adc
daa
mov
pop
lds
xchg
out
fbld
adc
hlt
lds
aam
ficom
imul
pushf
push
imul
add
cdq
push
fild
popa
inc
xor
(bad)
mov
pop
(bad)
js
jne
movs
sub
xor
jb
ret
push
dec
js
je
inc
mov
loope
ret
scas
gs
sbb
js
test
scas
and
jbe
in
jbe
mov
jl
sub
add
loope
or
mov
movs
outs
lds
loope
cmc
push
sub
push
push
mov
xor
in
pop
lahf
cs
pop
xchg
or
test
xchg
arpl
popf
mov
or
push
mov
and
lds
sbb
stos
push
sbb
adc
push
loop
sbb
adc
aas
dec
pushf
dec
scas
mov
(bad)
cmp
inc
jmp
fistp
jb
cmp
mov
add
out
test
pop
inc
xor
test
adc
fist
xchg
pop
sub
in
shl
inc
sbb
mov
(bad)
loope
jne
pop
xlat
mov
outs
mov
xchg
scas
out
js
or
(bad)
inc
icebp
adc
pop
arpl
or
ja
ret
xchg
or
lahf
adc
sub
fwait
jo
sti
out
daa
shr
leave
lea
in
jbe
adc
xor
pushf
imul
sub
xor
pop
nop
mov
mov
adc
fisub
fild
loop
aas
or
sub
xlat
jge
pop
sbb
ret
sub
imul
lock
cmps
ret
push
or
inc
inc
pushf
jg
ss
inc
fwait
loopne
int3
xor
neg
dec
sbb
fbld
jb
mov
sub
adc
xor
aad
and
int3
sub
jmp
pushf
imul
arpl
adc
movs
mov
enter
into
xchg
(bad)
ss
push
pop
out
fild
pop
stc
test
pand
cvtdq2ps
cs
adc
sahf
scas
pop
sti
sub
mov
das
lods
int
push
data16
jae
pop
in
aam
sub
cwde
mov
mov
ins
test
(bad)
out
fs
sub
pop
fistp
mov
mov
rcr
aas
push
or
fiadd
pop
add
push
add
mov
inc
inc
mov
enter
int
inc
mov
cs
pusha
out
fist
repnz
jecxz
push
es
lock
cmp
push
daa
cmp
sbb
retf
mov
repnz
(bad)
imul
jle
clc
sub
(bad)
fdiv
loopne
test
loop
or
in
lods
sbb
adc
retf
push
mov
mov
int
fld
stc
repz
movs
dec
xchg
or
push
jp
std
jle
mov
sahf
add
pop
cli
fdiv
add
shr
adc
and
or
mov
xor
mov
lds
xchg
nop
aaa
nop
xor
and
and
test
sbb
add
pushf
adc
mov
dec
dec
or
in
push
lods
push
jecxz
lods
jle
dec
hlt
jmp
xor
sub
xor
cmc
mov
loopne
(bad)
adc
sbb
ins
mov
clc
aam
shr
jbe
pop
out
(bad)
fisttp
and
mov
out
dec
fistp
cwde
movzx
xchg
out
call
pop
arpl
out
push
mov
sbb
xchg
pop
outs
mov
int3
xchg
(bad)
into
xchg
sbb
pop
mov
cmps
test
(bad)
mov
loopne
sub
xchg
and
test
xlat
pop
test
das
and
push
push
icebp
xchg
rol
fdivr
stos
fld
pop
rcl
ret
mov
dec
jp
sub
push
sub
or
jle
sub
xor
(bad)
mov
retf
and
jne
test
mov
jb
daa
inc
cmp
cmp
ds
sub
xchg
or
cmc
inc
mov
dec
ret
jo
les
daa
mov
cmps
out
mov
jl
mov
inc
sbb
(bad)
jne
jno
lods
cmovns
inc
mov
and
cli
fbstp
inc
arpl
jmp
loop
push
adc
jbe
loop
imul
out
jae
test
(bad)
or
dec
xchg
lods
aas
mov
movs
das
ss
out
pusha
or
repz
enter
jp
lea
and
xchg
mov
and
das
call
inc
cmp
fcom
addr16
repz
sbb
jno
rep
int
les
loope
cwde
popa
sub
mov
adc
pop
aad
cs
jecxz
int
sub
cmp
fbstp
mov
pop
pop
sub
leave
call
(bad)
vpacksswb
lods
aaa
sub
xchg
out
adc
inc
jge
icebp
test
cmp
sbb
std
out
pop
popf
and
bound
xchg
push
dec
inc
ficom
popa
out
inc
or
and
jp
xchg
add
and
cdq
in
jnp
jmp
or
sbb
mov
dec
(bad)
add
retf
mov
popa
and
cmp
jl
push
push
inc
(bad)
iret
xor
jno
inc
or
xchg
je
rol
add
rol
dec
and
fild
or
mov
mov
cmp
cmp
and
imul
jno
and
mov
cmp
and
mov
fs
cmp
pop
xchg
sub
mov
or
mov
dec
dec
add
aad
xchg
mov
mov
xor
retf
xchg
push
(bad)
ins
ins
xlat
movs
jge
sahf
sub
es
and
push
pop
iret
test
out
push
shr
inc
and
fstp
fmul
pop
push
inc
clc
jg
mov
(bad)
loop
cdq
inc
lods
xchg
in
fsub
mov
lock
rcr
push
repz
ss
aam
sub
data16
rcl
adc
cli
dec
in
popa
mov
sbb
push
push
fwait
jp
ret
pushf
pushf
test
adc
pop
cli
push
mov
cmps
sbb
call
pushf
jmp
jmp
call
or
pop
(bad)
fwait
shl
imul
movs
sbb
out
jne
cmps
movs
jbe
(bad)
adc
lods
adc
fidiv
or
icebp
outs
daa
data16
cs
popa
add
pusha
enter
fcmovnbe
inc
stos
inc
dec
adc
push
sbb
cmp
(bad)
fild
pushf
pop
sbb
jo
push
aas
leave
mov
jne
push
xchg
cmc
lods
test
sbb
icebp
mov
ror
dec
jge
lods
rcl
ja
gs
pop
cmp
les
icebp
stos
sbb
sub
js
dec
aad
cmp
add
xchg
mov
sbb
inc
repnz
xor
and
mov
or
fimul
test
xchg
mov
mov
push
sbb
xchg
loope
ss
(bad)
fnsave
xor
inc
das
sbb
(bad)
dec
in
jmp
mov
pusha
jb
mov
lea
dec
jno
sub
cmps
mov
fcomp
fld
sub
(bad)
ins
adc
sbb
adc
sub
sahf
stos
fs
mov
data16
xchg
movs
ficomp
enter
dec
rcl
cmps
out
xchg
xchg
fs
push
shl
(bad)
add
xor
inc
out
popa
jp
adc
adc
inc
data16
fisubr
and
sbb
push
or
sub
lahf
popa
aam
push
xor
lds
lods
retf
mov
mov
cmps
push
fist
add
dec
loopne
or
fs
stos
lock
test
xor
add
lds
xchg
push
stos
fwait
stc
jecxz
ret
and
or
mov
mov
mov
inc
les
pop
xchg
dec
jne
test
push
or
repz
lods
lahf
jno
fstp
mov
mov
into
and
js
clc
leave
and
bound
mov
jmp
jno
xchg
call
add
pop
das
pop
fs
loope
fwait
sbb
pop
jge
jns
mov
icebp
int3
ss
dec
das
test
ss
mov
inc
or
sub
mov
mov
mov
add
fld
mov
movs
sub
pop
fwait
pop
push
iret
cwde
sub
push
mov
test
fisttp
mov
std
aam
retf
adc
pop
fdivr
mov
fst
push
ins
lods
fldcw
out
jnp
push
or
loope
into
fdiv
mov
ins
out
dec
or
(bad)
cmp
mov
pusha
dec
dec
push
push
outs
sbb
shl
push
mov
loope
movs
int3
xor
sbb
adc
fisttp
out
fcomp
imul
jmp
repz
inc
pop
mov
jns
push
int
mov
data16
movs
(bad)
inc
xchg
or
scas
fidivr
rcr
test
hlt
xchg
add
(bad)
out
shr
dec
not
out
cdq
mov
shr
stos
(bad)
push
arpl
repz
mov
pop
loop
sbb
cmp
(bad)
xchg
xor
dec
dec
(bad)
jp
into
dec
or
pop
jmp
xlat
pusha
push
cld
(bad)
mov
jb
test
jmp
es
sub
(bad)
aas
cli
nop
push
test
dec
das
ins
jp
iret
jle
and
cmc
jmp
mov
in
bound
mov
cmp
scas
enter
inc
xor
xchg
or
pop
lea
sub
push
pop
xchg
cmp
pop
into
jecxz
dec
cmp
push
inc
xor
repz
ins
aaa
test
add
iret
test
test
cmc
sub
es
inc
outs
cld
mov
push
dec
mov
push
push
jge
jle
pop
ret
and
retf
nop
icebp
jae
xchg
outs
sub
push
(bad)
push
mov
stos
movs
fwait
sahf
imul
cmp
ins
outs
mov
repz
lods
(bad)
xor
xchg
mov
imul
not
in
and
pop
pop
xor
mov
push
inc
ret
call
cmp
and
xchg
xor
not
and
rcl
mov
jns
ret
imul
jne
mov
cmp
mov
xor
in
xor
fwait
cmp
and
stc
xchg
fwait
in
and
icebp
fcom
sar
sbb
enter
call
test
(bad)
std
pop
mov
popf
mul
scas
cli
push
xor
jmp
jp
(bad)
sar
pop
mov
mov
xchg
adc
aam
(bad)
jo
fstp
jecxz
sub
out
dec
push
and
mov
and
daa
adc
dec
scas
dec
dec
test
pop
dec
dec
inc
push
jle
daa
stos
inc
xchg
imul
xlat
mov
cwde
ja
test
mov
ret
mov
mov
(bad)
not
out
adc
push
popa
es
adc
push
inc
movs
dec
dec
ds
mov
lods
add
and
jo
push
pushf
mov
xor
xchg
popf
mov
das
dec
ins
mov
jg
in
or
pushf
in
push
movs
(bad)
cmp
test
and
fiadd
add
and
dec
shr
xor
mov
loop
test
sub
ja
and
mov
fbld
mov
adc
or
push
scas
xchg
aas
cdq
ins
pop
ins
jle
popf
pushf
movs
or
cmp
jl
jge
mov
gs
or
and
outs
mov
sar
cmc
in
inc
sahf
jno
dec
xchg
test
not
ror
imul
jmp
mov
cs
dec
adc
test
addr16
outs
mov
mov
xchg
push
mov
inc
mov
call
xor
xlat
xchg
(bad)
cmp
xor
loop
jno
push
or
or
pop
sti
push
cwde
jno
or
adc
shr
dec
dec
jl
pop
movs
cwde
scas
sahf
pushf
xor
sar
sub
sti
pushf
sbb
sub
inc
xor
sar
cmc
shr
dec
jno
xchg
pop
ja
push
mov
jo
or
xchg
std
jmp
adc
sub
repz
xor
mov
mov
or
daa
data16
sub
leave
add
push
sub
sbb
cmp
mov
sub
lahf
xchg
nop
cmp
outs
cmp
cmp
xchg
mov
or
enter
movs
inc
dec
popa
jmp
stos
mov
or
add
pop
pop
outs
mov
stc
clc
dec
loop
mov
push
arpl
fidivr
mov
jno
fstp
adc
popa
pop
sbb
out
pop
jo
xchg
or
dec
call
adc
ins
shl
mov
pop
cs
xchg
xor
pop
out
arpl
scas
arpl
(bad)
lock
repz
xchg
dec
jecxz
test
jmp
jne
xor
inc
leave
sub
lea
dec
call
push
add
aam
mov
popa
push
cmps
imul
mov
jmp
(bad)
pushf
pop
popa
ins
ret
cmp
ret
(bad)
push
fsub
in
cmps
dec
mov
inc
and
adc
loopne
(bad)
out
jl
retf
inc
je
out
cmp
jmp
fbstp
scas
sub
xor
iret
mov
(bad)
(bad)
inc
lods
jp
rcr
int
and
pop
inc
rol
xchg
adc
clc
dec
call
jb
dec
push
icebp
cmp
and
or
es
enter
pop
cdq
pop
imul
loope
(bad)
leave
inc
push
lods
cwde
xchg
mov
or
shl
loopne
sub
pop
call
fdivrp
lods
in
cld
int3
xchg
aaa
les
stos
push
rcr
shl
jmp
or
retf
in
xchg
das
push
or
std
ins
scas
sbb
int
xchg
out
xor
retf
pop
xchg
and
gs
adc
cmp
mov
jp
shr
inc
xor
xor
mov
mov
jmp
ins
addr16
or
cmp
inc
push
(bad)
xchg
inc
imul
(bad)
lea
dec
xchg
icebp
mov
(bad)
fld
push
jns
inc
jns
sub
push
(bad)
pop
fsubrp
mov
mov
nop
mov
mov
sbb
je
add
aas
jmp
xor
aam
shr
cs
fsubr
hlt
aas
sub
clc
mov
and
stos
addr16
daa
mov
mov
jp
icebp
sub
arpl
and
add
push
and
scas
repz
ja
ins
out
jmp
test
mov
into
shl
adc
push
mov
pusha
pop
push
xchg
jg
or
nop
sbb
inc
in
and
icebp
mov
jb
int
fst
ds
cmps
mov
or
push
mov
jbe
xor
and
lea
mov
es
jns
neg
push
out
mov
pop
add
das
cwde
sub
aas
sub
inc
sub
and
dec
inc
mov
adc
je
enter
sbb
pushf
es
push
mov
pop
push
dec
jmp
jae
mov
pop
call
cmp
ins
push
push
dec
jmp
in
jbe
sub
pusha
sub
mov
cmp
inc
push
stos
clc
test
call
dec
jecxz
xchg
icebp
push
(bad)
xor
sub
mov
retf
inc
push
out
stos
inc
xchg
in
adc
mov
inc
ins
cmps
cmps
pop
jmp
out
dec
cmps
mov
(bad)
mov
mov
and
scas
sub
mov
xchg
int3
std
cmp
pop
jns
(bad)
fiadd
sahf
inc
or
sub
add
cmps
xor
sub
(bad)
sbb
int3
aas
cmp
repnz
xchg
add
push
in
sub
mov
das
std
add
jl
pop
inc
ret
imul
mov
jmp
pop
xor
dec
iret
clc
jmp
xchg
xor
fistp
test
cmc
and
inc
(bad)
stos
jae
push
out
(bad)
fiadd
cwde
mov
rol
or
inc
imul
pop
pop
pop
or
in
test
lods
and
push
pop
push
fwait
inc
push
nop
adc
jmp
pop
inc
sub
push
xchg
xchg
jo
cmps
or
rcr
mov
mov
nop
inc
mov
cwde
in
xchg
cmp
cs
outs
addr16
lods
push
and
fwait
hlt
cmp
nop
adc
and
movs
mov
add
mov
pop
pusha
(bad)
fdiv
inc
ins
inc
sbb
jmp
scas
cmps
repz
mov
sub
jne
hlt
retf
xor
xor
call
mov
int3
dec
fstp
popaw
mov
pop
jl
fsubr
push
daa
das
sbb
inc
enter
loop
and
cmps
push
mov
loop
pop
or
icebp
lahf
jne
xor
jge
push
sbb
or
not
xor
or
cmp
mov
out
fwait
pusha
inc
jg
shl
daa
cld
inc
inc
inc
pop
pop
mov
out
call
scas
fs
retf
loope
shl
es
mov
xchg
in
mov
ret
out
test
jmp
repnz
sub
(bad)
xor
div
movs
jne
pop
cmp
jmp
(bad)
and
push
in
push
imul
push
mov
ret
jg
lahf
loopne
iret
hlt
jns
fstp
into
mov
fwait
std
inc
sahf
iret
and
add
pop
push
test
hlt
(bad)
loope
test
dec
cmp
(bad)
dec
pop
ret
fdivp
hlt
fadd
or
nop
and
leave
(bad)
pop
retf
adc
and
hlt
sub
dec
jle
(bad)
mov
sub
push
inc
pop
pop
jl
add
popa
mov
pusha
retf
cmp
dec
sahf
pop
or
ror
xor
or
enter
push
push
fwait
push
mov
enter
xchg
fld
xor
aad
or
sbb
int
imul
fistp
mov
push
je
stos
out
loopne
gs
clc
pop
xor
in
lods
(bad)
cdq
and
or
push
(bad)
test
and
mov
test
mov
and
call
popa
jle
repz
pop
bound
mov
ds
xlat
xor
pop
xor
je
mov
je
rcr
mov
jmp
mov
pop
jecxz
add
call
inc
push
lahf
push
dec
bound
pop
ror
sub
jecxz
or
sub
mov
mov
and
pop
xchg
mov
cmp
sub
add
fadd
mov
jns
dec
pop
sbb
fldenv
jbe
sahf
test
in
and
(bad)
repnz
jno
ja
pop
cli
cwde
jbe
int3
xor
pop
icebp
mov
and
sbb
mov
add
pop
jne
dec
mov
(bad)
in
ins
fdiv
cmp
fild
mov
cwde
jo
cmp
or
popa
popf
stos
jmp
fistp
pop
ret
lods
push
add
jno
pop
inc
dec
mov
push
pop
jecxz
dec
test
pop
lds
mov
push
adc
mov
in
xor
jp
loop
cmp
xor
jle
or
ja
cwde
fwait
mov
adc
cmp
xor
mov
mov
pop
mov
gs
outs
xor
fld
mov
hlt
ds
(bad)
xchg
push
sar
lahf
retf
(bad)
rol
stc
into
jne
in
retf
sub
inc
mov
loopne
aaa
cmp
and
retf
jg
push
xchg
jbe
pop
inc
icebp
inc
xchg
iret
xchg
adc
pop
adc
jl
xchg
adc
sbb
lods
dec
xor
hlt
inc
add
stc
scas
jg
enter
cs
xchg
out
mov
dec
mov
push
vmovntps
mov
jge
out
cmp
cmp
imul
add
out
ins
xchg
ds
jmp
cmps
mov
jecxz
retf
fild
scas
fucomp
mov
int3
adc
pop
xchg
sub
ja
pop
leave
bound
jmp
retf
sti
pop
dec
js
pop
clc
xor
ret
retf
dec
scas
scas
sti
in
and
scas
push
stos
jnp
mov
mov
fstp
or
jb
out
pop
daa
mov
hlt
mov
call
cld
mov
neg
shl
push
add
fs
retf
js
or
ss
and
jo
cdq
sahf
mov
mov
adc
ret
sar
shl
fwait
int3
or
into
repnz
mov
jl
hlt
cmps
pop
ins
sbb
lods
shl
add
pop
rcr
mov
fiadd
adc
cwde
(bad)
jb
add
aad
dec
cmp
inc
cmp
push
scas
in
inc
mov
aas
sbb
fwait
je
enter
nop
dec
mov
fisubr
mov
or
jmp
les
in
imul
mov
xchg
cmp
jecxz
push
imul
shl
fst
jns
scas
lock
fidivr
mov
es
fimul
push
stc
or
clc
cvttps2pi
cmp
neg
(bad)
pushf
inc
into
xchg
mov
mov
ret
sub
ror
push
mov
mov
inc
jb
add
jle
jne
sub
fs
pop
add
push
cmp
daa
movs
loope
ins
mov
mov
sub
add
mov
mov
(bad)
adc
rcl
int3
popa
lds
cmp
inc
leave
je
repnz
movs
jmp
ins
sahf
nop
ficom
cmp
or
add
mov
inc
pop
shr
std
mov
sbb
mov
mov
or
xor
lock
iret
mov
mov
(bad)
xlat
mov
jmp
test
xchg
lock
test
retf
cwde
(bad)
out
daa
mov
loop
je
xor
xchg
adc
jnp
lds
jnp
repnz
into
cmps
and
imul
fwait
inc
pop
nop
add
jmp
call
fistp
shr
jnp
popf
add
enter
jmp
pop
dec
popf
or
add
fdiv
push
sub
out
jae
imul
idiv
icebp
and
add
cdq
pop
cdq
enter
loopne
dec
ins
push
dec
sbb
mov
loopne
dec
imul
(bad)
iret
mov
jl
sbb
mov
jp
xor
mov
mov
or
xchg
(bad)
and
mov
jns
rol
gs
(bad)
pop
outs
ins
pop
mov
lock
test
hlt
jae
push
sbb
sbb
stos
push
mov
push
fs
fs
fiadd
or
add
and
adc
cmp
arpl
mov
adc
pop
pop
sbb
addr16
shl
les
imul
cmp
xchg
aad
push
imul
jno
frstor
and
pop
test
pushf
cli
pop
or
jp
mov
outs
mov
fst
fst
xor
out
xchg
jp
iret
retf
jns
cs
pop
xor
loopne
jg
iret
xchg
mov
mov
jns
and
inc
push
sub
lahf
dec
mov
mov
mov
inc
cmp
je
ins
inc
leave
push
icebp
pop
aam
imul
sbb
call
sub
sbb
mov
aad
retf
mov
loopne
xlat
push
daa
dec
in
xor
mov
mov
mov
retf
push
in
sub
jae
hlt
cs
cmp
in
mov
adc
frstor
shl
or
push
xlat
hlt
xchg
rcr
in
ror
dec
or
inc
add
push
adc
push
cmp
jbe
sub
or
fcom
inc
push
and
out
iret
(bad)
pop
test
mov
xor
sub
pop
and
imul
cmp
push
mov
(bad)
and
das
into
lods
or
ss
add
dec
jnp
fs
push
or
inc
call
xor
(bad)
outs
dec
push
mov
jmp
xor
sbb
pop
pop
fsubp
js
icebp
mov
jle
cmp
ins
rcl
sbb
xlat
arpl
and
sbb
mov
xchg
inc
stc
int3
mov
mov
jo
leave
adc
add
pop
fist
out
stos
xor
cmp
inc
in
xor
sbb
or
sbb
(bad)
jge
adc
sub
fisub
jl
sub
inc
inc
dec
jecxz
inc
pop
in
sub
jge
sub
cmp
iret
cmp
clc
xchg
fist
iret
mov
fld
cld
fisttp
jge
mov
neg
imul
sub
add
cmp
pop
mov
fimul
data16
pop
xor
cmp
enter
push
lods
(bad)
popa
aas
retf
dec
cmps
repnz
xor
lds
mov
push
cmps
xlat
pop
scas
lds
push
sub
xchg
shr
bound
nop
and
fcmovbe
clc
pop
or
movs
rcr
or
fs
mov
out
dec
addr16
mov
add
je
jle
and
imul
fsub
imul
gs
shr
addr16
jo
sub
mov
xchg
loope
pop
cmp
mov
and
add
or
fidivr
sbb
pop
mov
les
cmp
xchg
inc
fmul
dec
jae
fisubr
sbb
fsubr
retf
pop
xlat
pop
lahf
adc
and
sbb
add
mov
(bad)
adc
das
pop
and
pop
or
lahf
shr
icebp
out
(bad)
shl
loop
inc
in
dec
lods
loope
inc
mov
inc
push
mov
pop
inc
pop
int
sub
nop
outs
xor
arpl
arpl
out
push
push
in
mov
imul
aam
jb
int3
in
push
mov
rol
out
inc
pushf
out
mov
call
es
lahf
inc
loop
cld
push
mov
pop
push
jecxz
cmp
imul
cwde
sub
test
inc
push
mov
sub
aaa
cli
push
xchg
rcr
cmp
xor
sbb
cli
fs
lea
push
fisubr
rcl
sbb
test
jae
push
inc
iret
xor
mov
pop
in
pushf
hlt
pop
idiv
pop
adc
lock
fmul
sbb
mov
push
jl
jmp
repz
dec
jecxz
dec
leave
mov
jl
or
xor
ds
retf
shl
lock
inc
je
sar
mov
nop
ret
mov
push
xor
jno
sti
sub
jecxz
push
xor
or
sbb
ja
into
sbb
and
cmp
add
dec
fisubr
aad
ins
fld
mov
jmp
addr16
sbb
mov
xor
ror
mov
je
stc
and
push
sahf
loope
xchg
outs
or
mov
lock
imul
mov
add
jmp
xor
pop
cmp
dec
xor
mov
shr
gs
std
push
mov
jo
or
in
out
add
xchg
inc
xchg
and
jecxz
mov
push
nop
mov
popf
sbb
fnstenv
xchg
aam
dec
adc
inc
pop
xchg
inc
int
cmp
jg
ss
stc
mov
fist
xchg
out
cld
std
popa
adc
dec
repnz
xor
push
jmp
inc
mov
jb
xchg
cmp
out
jns
xchg
pop
es
lds
and
or
push
push
add
mov
adc
cmps
nop
ss
(bad)
leave
mov
loope
jne
mov
(bad)
pushf
pop
(bad)
cmp
fisttp
jl
xor
or
mov
or
fcmovbe
(bad)
mov
xor
sbb
(bad)
push
inc
push
out
ins
cmp
adc
dec
cmp
ins
jl
lods
ret
lods
xor
jae
push
scas
stos
cmp
xchg
outs
inc
inc
cwde
call
sub
sub
push
sbb
rol
jp
jg
cmps
fwait
mov
(bad)
imul
or
pop
out
into
jo
jmp
sbb
aas
or
xor
xchg
sbb
and
test
retf
data16
mov
imul
dec
sub
mov
or
arpl
(bad)
(bad)
loopne
das
adc
gs
iret
cmp
push
shl
cmp
(bad)
jns
and
pusha
in
mov
std
inc
dec
rol
push
mov
das
xchg
mov
outs
outs
lahf
mov
sub
lods
fnsave
jnp
add
in
in
mov
movs
pop
popa
fcomp
mov
or
aas
imul
xor
adc
pop
cmp
out
fst
frstor
mov
inc
or
clc
pop
inc
outs
cmp
lea
xor
or
add
fstp
test
jge
and
and
(bad)
jbe
retf
add
mov
(bad)
ficom
adc
pop
(bad)
jle
mov
push
clc
pop
jle
sbb
ds
or
enter
cli
stc
inc
or
sar
fdivr
mov
out
leave
mov
sbb
cwde
setp
jbe
mov
pop
stc
je
cmps
inc
sub
or
cmp
or
push
dec
pop
data16
inc
mov
in
pop
test
add
jne
and
outs
dec
cwde
cmp
call
push
imul
fmul
adc
pop
addr16
jne
inc
mov
(bad)
mov
mov
sbb
jno
pop
out
mov
mov
cs
and
mov
cs
dec
icebp
sbb
ja
scas
push
adc
pop
dec
pop
repz
int3
mov
jmp
mov
sbb
dec
aaa
sub
dec
add
xchg
mov
test
fcomip
xor
pop
cmps
loop
ins
popf
ins
out
inc
movs
mov
inc
sar
mov
imul
int
rol
in
pushf
out
ins
scas
cmp
fstp
mov
jmp
sbb
cdq
xchg
cmp
aam
cmps
sub
out
(bad)
mov
sbb
inc
add
push
aad
mov
(bad)
jbe
sbb
mov
test
inc
and
sub
mov
int3
cmp
xor
xlat
cmps
and
add
int3
or
sbb
push
cmc
xor
cmp
enter
fmul
and
pop
popf
or
dec
mov
inc
mov
pop
jnp
and
out
clc
test
cmp
push
je
ret
push
jmp
jae
rol
je
loope
(bad)
jnp
pop
pop
repnz
cmps
xor
test
into
subps
dec
mov
outs
(bad)
(bad)
lods
stos
in
push
xchg
cmp
ja
icebp
mov
shr
lds
lods
das
popa
cwde
mov
call
fstp
cmc
mov
mov
push
test
adc
sub
sbb
add
jns
inc
and
shr
movd
stos
call
(bad)
fsubr
mov
mov
mov
sub
cli
adc
cmp
fwait
aas
push
loop
pusha
inc
mov
xchg
add
out
sti
mov
pop
loop
add
idiv
inc
inc
les
cmp
dec
pop
mul
pusha
retf
pop
(bad)
sbb
scas
repz
push
push
das
sub
out
in
mov
inc
imul
cdq
iret
or
shr
out
pop
dec
stos
jle
es
sub
inc
std
push
push
xor
push
cmp
jg
pop
int
mov
push
rol
xchg
neg
rcr
sbb
bound
add
inc
or
ja
rol
icebp
stc
cmp
mul
cmp
pop
popf
fist
daa
fwait
pushf
pop
mov
mov
jmp
js
arpl
mov
sub
mov
(bad)
stc
pusha
movs
std
test
adc
jmp
mov
shl
outs
inc
xchg
mov
push
sahf
jne
cmps
fst
adc
jp
fucomp
repnz
dec
sahf
mov
adc
cmp
mov
mov
pop
push
(bad)
cmps
retf
lods
xchg
or
fld
movs
cmp
call
in
test
ss
pushf
adc
bound
push
je
xchg
leave
lods
hlt
and
jbe
(bad)
jne
les
push
mov
pop
enter
pop
adc
mov
adc
mov
outs
add
xchg
scas
mov
arpl
pop
sub
adc
sub
pop
rcl
in
dec
jp
add
loope
push
xchg
lds
lock
push
fcomp
not
jl
xchg
mov
add
(bad)
fs
cmp
sahf
pop
in
nop
js
mov
sbb
jo
enter
fild
push
inc
sysenter
mov
adc
mov
jno
and
cs
lds
jmp
inc
fdiv
xchg
jecxz
mov
cdq
mov
pop
retf
test
mov
sbb
shr
daa
and
repnz
jmp
add
stos
out
ror
fisttp
jae
in
addr16
movs
enter
mov
out
(bad)
scas
sbb
movs
stos
add
loopne
ficomp
pop
push
push
mov
mov
stc
xchg
lock
aas
xor
lods
out
jecxz
out
xchg
test
dec
mov
inc
xchg
mov
dec
repnz
xor
pusha
movs
cs
xor
sub
pusha
push
test
nop
mov
test
xchg
imul
sub
jge
shr
jecxz
(bad)
fld
jp
or
sbb
mov
xchg
mov
(bad)
stos
shl
xchg
cmp
lods
test
push
daa
dec
test
cld
xchg
jmp
sbb
inc
in
das
sbb
jne
lods
jo
out
pop
dec
mov
lea
scas
lock
mov
imul
pop
clc
jbe
je
inc
jge
sbb
out
or
adc
mov
mov
test
cmp
mov
les
or
xchg
push
jecxz
rcr
aas
xchg
xchg
mov
mov
fisubr
sar
inc
dec
mov
dec
and
fwait
in
fild
fsubr
xchg
mov
out
xchg
xchg
(bad)
pop
rcl
inc
shl
and
push
test
push
jge
sub
(bad)
outs
(bad)
int3
stos
sahf
rol
xor
fistp
pop
inc
or
ds
cwde
jp
(bad)
pop
jb
cmp
sub
call
cmc
clc
add
(bad)
(bad)
push
retf
retf
fwait
(bad)
push
adc
mov
test
(bad)
pop
rcl
je
and
out
lock
add
or
mov
aas
sbb
das
jno
push
add
scas
sbb
push
(bad)
push
enter
jmp
and
adc
vmulss
fisttp
mov
cmp
cld
bound
jp
fwait
test
bound
(bad)
sub
ret
dec
push
cmp
fidivr
dec
call
dec
xor
test
int3
lds
or
xor
not
xchg
gs
cs
mov
pop
xchg
jbe
js
push
ret
or
lea
fidivr
adc
or
xchg
xrelease
rcl
aad
cmps
test
cwde
sbb
dec
call
cdq
or
xor
ror
stos
pusha
and
sbb
xlat
mov
push
cmp
jns
dec
and
push
int
or
and
leave
jge
dec
repnz
xlat
sub
jne
mov
push
jno
aam
mov
sbb
data16
inc
lods
pop
rcr
jl
sub
into
dec
and
(bad)
jecxz
mov
xor
adc
inc
(bad)
(bad)
jge
clc
data16
ins
pop
loop
or
cdq
mov
fwait
stos
mov
or
cdq
call
mov
pop
add
int3
sub
test
ja
jmp
jmp
jp
fiadd
repz
adc
xchg
les
lods
nop
push
addr16
mov
cmc
jmp
out
push
sbb
and
cs
dec
cmp
xor
xor
shr
stos
popf
mov
xchg
leave
lea
mov
fcom
sbb
push
xchg
xchg
sahf
call
pop
push
cli
add
sbb
pop
gs
xchg
mov
hlt
test
test
xchg
jno
sub
adc
fist
xchg
lods
push
mov
xchg
dec
push
or
pop
sbb
test
xchg
jae
pop
in
mov
call
enter
mov
(bad)
and
or
(bad)
xchg
push
xor
mov
int3
mov
push
jg
cli
mov
repz
imul
mov
mov
movs
sub
in
out
cmc
inc
mov
sub
fucomi
xchg
push
sti
jecxz
out
adc
lea
ret
cwde
sub
inc
and
(bad)
pop
push
mov
jle
mov
les
push
movs
mov
lahf
bound
cmp
jno
mov
ret
aad
ins
movs
loope
(bad)
mov
or
mov
jge
cmps
push
mov
repz
xor
and
mov
adc
cld
(bad)
mov
jbe
dec
mov
xchg
popa
ss
or
test
mov
pop
imul
test
xor
cmp
jmp
fs
cmp
mov
lds
(bad)
jbe
add
fistp
mov
and
pop
or
ficom
dec
mov
rol
inc
inc
and
pop
cld
push
idiv
pop
out
sub
sbb
daa
cmp
(bad)
xor
jmp
pop
(bad)
mov
jge
inc
dec
movs
sub
aas
pop
popf
pop
adc
add
outs
adc
cmp
mov
dec
and
pop
xor
jae
lea
scas
scas
cmps
mov
ror
adc
mov
cmp
add
mov
or
shrd
cs
push
dec
ror
popf
popf
dec
sub
mov
fwait
sub
es
push
lahf
neg
cli
lds
lods
ror
push
sbb
sbb
ja
inc
lea
cmp
dec
inc
out
cmp
pop
or
mov
pop
lock
jl
cmp
jg
push
cmova
loop
jne
lods
cs
xor
xchg
and
push
sbb
daa
or
push
mov
dec
pop
pop
aam
hlt
push
mov
cmp
icebp
pushf
push
jno
fwait
and
sahf
sub
or
popf
pop
test
hlt
cmps
ja
mov
cli
push
test
pop
push
inc
out
outs
sti
rcl
push
scas
cmp
inc
jb
xchg
scas
sbb
not
fxch
retf
rol
add
test
test
in
adc
mov
call
sahf
add
repnz
jmp
out
out
cmp
mov
cmp
adc
xchg
or
jne
and
sbb
call
bound
inc
cld
xor
sbb
mov
loop
mov
sbb
aam
sub
lea
hlt
movs
(bad)
ja
mov
mov
cmp
das
add
out
cdq
mov
adc
(bad)
and
adc
mov
das
outs
ins
nop
and
push
fldenv
and
or
jp
(bad)
fldcw
xchg
mov
dec
push
or
mov
sbb
xchg
ss
stos
push
cdq
ins
dec
mov
pushf
dec
mov
xor
test
and
add
add
sub
imul
jge
sbb
outs
(bad)
cmc
sahf
mov
call
xor
ret
add
fimul
inc
mov
sbb
popa
adc
out
sbb
imul
(bad)
popa
sub
test
dec
shl
push
adc
in
mov
pop
aad
(bad)
movs
push
lahf
scas
sbb
dec
xrelease
and
stos
popf
call
jns
xchg
adc
mov
cld
les
fld
int3
loopne
(bad)
ins
test
sar
stc
sbb
mov
xchg
scas
imul
out
lahf
aam
dec
into
cld
jns
xchg
adc
in
mov
dec
jb
inc
ja
xor
xchg
pop
into
aas
repnz
cmps
xor
and
out
push
mov
adc
xchg
adc
jmp
jecxz
fist
jg
jo
jns
xchg
popf
jmp
lods
popa
cmp
ror
and
xchg
sub
xchg
fimul
and
xchg
fcomp
and
iret
in
sub
ficom
push
inc
mov
(bad)
sbb
jnp
outs
dec
xchg
movs
outs
out
loopne
pop
out
jns
add
jge
push
adc
data16
rol
mov
ret
stos
or
and
cmp
cli
jp
adc
xchg
movs
aad
test
xor
pop
and
push
add
sub
je
sbb
jnp
cmp
mov
jo
cmp
mov
sbb
fcom
xor
adc
or
xor
xchg
int
movs
in
into
lock
sbb
iret
sbb
xchg
enter
push
mov
loope
popa
cwde
and
in
jno
push
vmread
(bad)
pop
jg
out
jae
(bad)
jg
xchg
aam
cmp
sbb
or
pop
mov
mov
(bad)
mov
pop
aam
ss
mov
cmp
xor
into
mov
aad
and
jge
sti
out
sbb
pop
and
jo
(bad)
js
cwde
inc
fidivr
ja
pop
in
pop
xlat
jecxz
nop
jmp
jnp
fdivp
xchg
jo
cmps
(bad)
sbb
loope
sti
das
or
daa
xor
lahf
imul
push
dec
or
clc
pop
fnsave
popf
xchg
das
outs
mov
std
cmps
sahf
cmp
inc
addr16
xchg
cs
mov
cld
mov
push
sar
sub
mov
mov
and
out
or
add
sbb
pop
fnstsw
leave
(bad)
call
push
lock
aas
out
iret
add
jnp
sub
out
push
adc
popf
call
mov
(bad)
mov
add
and
add
mov
pop
mov
leave
pop
inc
shl
retf
rcl
fisubr
add
(bad)
popa
xchg
xor
jno
mov
cmp
pusha
loop
loopne
cmp
imul
inc
das
push
gs
and
ror
or
jno
fistp
inc
pop
sbb
fwait
fwait
xchg
icebp
push
inc
lods
adc
shl
mov
call
leave
xor
call
stos
xchg
mov
mov
mov
mov
inc
push
out
fstp
fdivr
adc
fld
mov
int
leave
cwde
jmp
xchg
repz
pop
outs
dec
ins
push
mov
pushf
sbb
xor
inc
(bad)
lock
and
xor
xchg
(bad)
push
dec
adc
test
mov
ds
stc
test
fnstcw
cwde
lods
js
pop
push
or
ret
pop
lds
imul
inc
(bad)
icebp
jbe
and
(bad)
fs
aaa
mov
jge
repnz
push
retf
das
sbb
in
mov
mov
mov
cmp
out
xor
adc
cdq
add
push
or
dec
or
mov
add
jae
pop
push
not
das
je
sbb
fistp
stos
adc
xchg
jmp
sub
xchg
clc
pop
sub
mov
add
movs
(bad)
jl
add
adc
cli
mov
shr
push
ds
lds
pushf
xor
jo
and
into
jb
xor
mov
mov
xlat
stc
cmp
jle
lods
mov
cs
int3
(bad)
fisttp
sbb
mov
ror
or
cmp
cld
les
loope
ret
jne
mov
jne
(bad)
nop
and
mov
pop
imul
aaa
test
in
inc
adc
cmps
dec
es
dec
sbb
push
fldenv
adc
jno
(bad)
imul
xchg
lahf
dec
or
in
scas
out
xor
mov
int
mov
xlat
jmp
inc
jns
adc
retf
iretw
jbe
xor
and
arpl
iret
addr16
jne
inc
and
out
xchg
mov
cmp
mov
and
and
aam
movs
data16
mov
add
lea
cmp
or
push
stc
(bad)
loope
dec
or
or
mov
fidivr
fs
jns
gs
stos
cmp
pop
and
xor
cmp
push
sub
cld
cmp
jecxz
add
mov
fidivr
jnp
lahf
test
lods
sti
enter
xor
enter
mov
push
jns
in
jo
ins
or
sub
cmp
icebp
mov
pushf
and
push
dec
aas
push
pop
jg
add
push
sbb
dec
hlt
sbb
pop
sub
sub
jmp
stos
dec
xchg
sub
jg
int3
movs
and
cwde
xchg
shr
out
outs
push
pop
add
cmp
mov
cmp
out
(bad)
aam
pusha
jbe
std
ret
sub
test
dec
add
ret
call
repz
movs
test
ret
adc
imul
or
xchg
fdiv
pop
add
fwait
stos
push
sbb
push
scas
dec
jne
jnp
or
add
into
sbb
pop
fnstsw
xchg
pop
mov
inc
push
cmp
(bad)
cmps
lea
cli
int3
scas
jo
mov
mov
(bad)
aam
fucomp
pop
shl
xor
xchg
and
xchg
cmp
mov
fstp
and
out
shl
int
or
lock
jno
pop
pop
xlat
mov
mov
or
daa
sbb
aas
xchg
cmp
in
xchg
xchg
add
fs
mov
pop
fisubr
xor
data16
movs
aad
xchg
je
or
pop
push
btr
mov
add
aam
adc
mov
push
mov
dec
pusha
pushf
sub
stos
sbb
(bad)
rep
(bad)
in
call
stos
pop
adc
test
inc
and
movs
inc
jp
jl
out
test
rol
stos
ror
pop
(bad)
iret
mov
mov
movs
mov
inc
pop
mov
xchg
sbb
bound
mov
sar
cs
std
sub
push
sub
in
aaa
pop
sub
rcl
fsubr
dec
fs
aam
pop
aam
push
int3
adc
mov
cld
ja
add
sahf
push
mov
pop
test
fwait
push
mov
jnp
jp
sbb
jl
popf
xchg
ins
jne
xchg
lahf
fcompp
mov
jg
test
add
clc
inc
cwde
(bad)
fadd
dec
jp
push
mov
aad
out
adc
mov
adc
dec
test
fadd
sub
pop
inc
cs
add
call
push
push
push
jns
jg
xchg
cmp
es
in
bound
cmp
div
adc
(bad)
or
push
ins
push
pop
out
xchg
pop
sbb
jp
fldlg2
push
xchg
pop
outs
adc
inc
mov
cmp
int3
ret
cmc
inc
rcl
push
sub
sub
cmp
push
mov
iret
xchg
aas
xchg
leave
pop
jno
and
jecxz
sub
test
push
imul
mov
inc
inc
std
lods
sbb
nop
cwde
test
das
(bad)
push
xchg
fbld
stos
push
aam
jp
xor
mov
movs
inc
pusha
xor
cmp
jle
not
cmp
mov
adc
push
ja
hlt
dec
popf
cmps
add
or
inc
xor
or
pop
xchg
rol
add
sar
pop
add
sbb
adc
popf
ffree
ficom
add
data16
adc
sti
cmp
out
test
fisubr
cdq
fisubr
sbb
fidiv
jecxz
(bad)
mov
xchg
ss
inc
xlat
int3
sub
fnstsw
xor
xchg
aaa
and
jno
aad
lea
pop
add
jle
pop
adc
pop
sbb
retf
cmp
and
mov
jmp
mov
xchg
mov
mov
popf
stc
les
out
test
ja
ins
jno
fadd
inc
xchg
and
cli
or
mov
jae
mov
pop
sar
fsubr
fld
jmp
icebp
sbb
dec
add
jge
mov
shl
mov
loop
pop
jnp
ss
mov
push
mov
std
cmp
mov
fild
loop
sbb
adc
or
sti
repnz
xchg
fldenv
jns
je
push
ret
jecxz
or
out
and
xor
sgdtd
mov
outs
call
xchg
mov
and
test
xchg
fistp
or
or
dec
jecxz
jl
and
aaa
cmove
hlt
dec
popf
fisubr
mov
mov
xor
add
icebp
xor
(bad)
and
mov
push
pop
push
pop
xchg
loope
push
adc
and
loope
in
iret
pop
xor
xchg
lea
shr
ret
pop
cmpxchg
rcr
(bad)
sub
cld
jl
push
xlat
cli
cmp
dec
outs
xchg
jp
test
mov
jmp
or
in
pop
xor
pop
data16
iret
cmp
adc
out
cmp
adc
sub
scas
push
shl
mov
scas
and
pop
jp
mov
cwde
dec
adc
ja
xchg
aas
out
sbb
add
test
sbb
adc
inc
fdiv
call
xchg
or
leave
enter
lods
add
sub
xor
retf
bound
arpl
cmp
mov
push
fxch
push
shl
rcl
jmp
inc
xor
push
fistp
inc
jnp
les
pop
mov
pushf
sub
or
pop
xor
fadd
addr16
cmp
jne
jl
mov
fld
popf
mov
pop
mov
mov
or
cmp
push
cld
movs
call
es
imul
(bad)
cwde
sbb
fldenv
or
sahf
and
nop
mov
(bad)
movs
(bad)
fwait
pop
jne
arpl
ret
int3
aam
add
mov
dec
mov
mov
fisubr
mov
mov
dec
sbb
icebp
pop
rcr
pop
ret
push
leave
int
xchg
mov
fs
xor
enter
lods
inc
xchg
inc
test
xor
in
jae
adc
(bad)
mov
push
xchg
mov
retf
xchg
ins
or
rcr
sub
and
adc
dec
jne
in
jg
enter
inc
fist
movs
xchg
push
popa
fstp
jnp
aam
mov
mov
ds
test
cmp
mov
mov
jp
mov
cwde
fcom
adc
push
jae
push
jb
into
(bad)
cmp
push
inc
aam
xchg
push
xor
mov
fistp
pop
push
popa
pop
jne
pop
lea
popa
inc
fst
std
ss
aad
test
and
xlat
sbb
dec
or
add
imul
fiadd
sti
add
xlat
stos
xchg
jle
mov
cmps
xor
call
cmp
add
sub
cmp
std
push
add
shr
dec
push
mov
cmp
or
cmc
or
dec
in
das
not
movs
mov
mov
cmp
test
(bad)
into
inc
mov
pop
das
sub
or
leave
lods
push
loop
pop
retf
fnsave
jmp
sar
push
leave
hlt
xchg
sub
mov
mov
idiv
nop
retf
mov
outs
ret
inc
icebp
(bad)
test
jmp
pop
mov
push
retf
movs
xchg
in
cmp
xchg
iret
pop
push
jne
shl
ret
rcr
repnz
pop
pop
add
jl
imul
cmp
add
mov
or
repz
mov
in
pop
repz
mov
mov
test
mov
push
add
inc
sbb
(bad)
movs
loopne
sub
mov
or
mov
or
mov
ret
sbb
push
das
push
jecxz
push
mov
mov
dec
imul
push
daa
lock
and
sbb
xor
ss
jecxz
aam
jl
dec
fisub
imul
imul
les
in
xchg
call
pop
fistp
movs
jne
les
and
inc
push
daa
add
outs
sub
pop
jle
rol
push
sub
xor
enter
xchg
push
jbe
cmp
inc
sbb
fisttp
xor
in
push
es
lock
int3
fst
jmp
out
xchg
in
outs
out
shr
sti
pop
jp
dec
add
adc
ficomp
popa
fmul
cld
fwait
xor
mov
add
sbb
imul
mov
ret
icebp
dec
xlat
fsub
out
shl
or
sti
add
sub
sahf
dec
je
add
mov
mov
icebp
mov
lods
pop
fs
mov
loopne
sbb
pop
leave
iret
push
popa
lds
iret
jmp
xor
popf
pop
sbb
shl
cmp
lahf
mov
push
jp
cld
lods
pop
rcl
rol
loopne
cmp
das
jmp
jns
or
fstp
push
lods
push
imul
enter
add
out
dec
data16
icebp
cld
jmp
pop
add
pushf
pusha
(bad)
aam
lds
test
dec
icebp
xchg
icebp
out
pop
test
das
mov
mov
out
push
xor
jge
adc
mov
(bad)
or
sahf
mov
xor
test
xor
(bad)
aam
cmps
es
or
test
fsubr
dec
mov
(bad)
add
sub
popf
push
inc
sbb
gs
retf
int3
sbb
ins
retf
loope
jl
in
mov
into
jmp
pop
shl
push
das
jle
fwait
xchg
lods
pop
inc
lock
lahf
(bad)
aaa
xchg
fimul
loope
movs
jmp
imul
add
outs
outs
inc
add
xchg
adc
int
clc
mov
icebp
dec
bound
inc
repz
mov
cmp
iret
pop
popf
pop
sar
adc
pop
dec
sbb
retf
arpl
xchg
and
mov
push
or
pop
repnz
(bad)
loopne
or
sbb
mov
mov
out
xor
pop
xor
xor
dec
push
(bad)
jl
fistp
inc
test
push
lods
in
mov
fisttp
(bad)
and
jp
jo
loope
push
outs
jmp
dec
sbb
cmps
dec
jmp
mov
sub
cmps
fdivrp
xchg
shl
stos
mov
(bad)
sti
inc
neg
cmp
mov
retf
stos
jg
jno
push
jle
adc
xchg
push
scas
jne
xor
outs
jne
shr
retf
mov
adc
inc
inc
sub
clc
mul
das
(bad)
fdivr
jmp
sahf
sub
push
push
and
repz
and
jb
cdq
test
cwde
pusha
out
ret
push
nop
lea
xor
pop
dec
mov
lahf
xor
inc
cmovb
cmps
pop
icebp
sbb
mov
sub
popa
(bad)
stos
inc
cmps
sub
jp
stos
loope
push
fadd
or
mov
test
js
push
and
lahf
das
je
shr
adc
jns
xchg
mov
pushf
add
push
xchg
jmp
mov
out
cmps
cmps
aas
push
mov
fwait
cdq
imul
ss
and
sbb
loopne
inc
mov
mov
(bad)
data16
lods
stc
int
movs
ins
lock
mov
mov
xchg
push
push
jg
pushf
dec
mov
sub
test
push
add
shl
retf
push
ss
enter
test
mov
jne
fdiv
cmc
das
pop
xchg
cmp
add
dec
fs
cwde
xlat
in
sbb
ds
xchg
xchg
adc
cli
inc
lock
popa
dec
pop
in
inc
cmp
or
mov
mov
ficom
mov
jge
push
xchg
popa
(bad)
call
inc
cmp
out
push
sahf
(bad)
aam
cmc
push
and
add
sti
sub
mov
mov
(bad)
ins
cmp
inc
cdq
mov
cld
test
and
sub
gs
sbb
adc
leave
sbb
dec
imul
add
mov
cmc
rcl
mov
test
xchg
es
mov
xor
adc
add
lods
push
scas
retf
shr
outs
jl
das
out
push
in
test
fcomi
add
mov
(bad)
mov
mov
push
pop
inc
imul
or
and
cli
pop
sbb
jne
scas
pop
loope
ret
outs
pushf
mov
sub
out
cmc
test
mov
shl
stos
or
jl
cmps
push
f2xm1
or
nop
out
and
not
test
fst
push
ss
or
push
pop
push
sub
aad
xor
inc
inc
sbb
dec
or
fwait
and
cmps
ss
inc
inc
loope
pusha
imul
ret
jle
xchg
add
sar
xchg
push
jo
shl
mov
lods
(bad)
in
fdivr
push
js
js
push
cmp
jl
xor
add
adc
ins
ror
movs
ins
or
xchg
je
adc
gs
jns
(bad)
jge
jnp
fsubrp
sbb
icebp
mov
mov
and
push
pusha
div
inc
mov
mov
fdivr
movs
(bad)
push
adc
mov
jae
pop
or
(bad)
mov
mov
xchg
mov
mov
mov
add
in
or
fimul
cmp
sub
sbb
sub
xor
push
ins
cmp
rcr
icebp
pusha
gs
inc
inc
imul
jns
pop
stos
(bad)
fstp
pop
cmp
aas
mov
dec
fincstp
pop
(bad)
vphaddwq
out
iret
add
dec
imul
sub
mov
pushf
iret
push
mov
dec
jp
pop
mov
xchg
retf
inc
or
jp
iret
pop
retf
jecxz
jle
getsec
call
fcomp
mov
mov
or
cmp
inc
cwde
mov
jge
push
inc
pop
pop
pop
cmps
call
xchg
inc
and
dec
jle
cmp
push
repz
mov
lock
mov
dec
pop
dec
and
scas
and
adc
sub
popf
fs
leave
(bad)
ins
inc
jle
xlat
push
icebp
(bad)
pop
cmp
mov
adc
lea
loopne
adc
ins
into
add
fwait
mov
jmp
xchg
repz
push
sub
or
out
mov
or
xor
add
movs
aam
inc
adc
xchg
cli
pop
shl
in
xor
xchg
jge
push
out
addr16
shr
sbb
in
mov
loop
mov
xchg
lock
sub
sub
loop
jl
jl
cmps
mov
sub
pop
mov
cmp
out
hlt
and
cwde
mov
jge
scas
(bad)
popa
daa
add
hlt
aaa
(bad)
pop
jne
enter
sbb
sbb
mov
fisttp
fsubr
jp
xchg
sbb
mov
jbe
mov
mov
test
das
movs
jnp
rol
(bad)
cmp
push
adc
dec
mov
lds
cmps
aam
pop
add
inc
xlat
lock
clc
pop
cmps
cmp
ror
hlt
mov
sti
inc
pusha
xor
xchg
xor
mov
jg
fldenv
sub
push
dec
fadd
cwde
retf
movs
xlat
int3
loop
mov
xchg
jmp
call
fsubr
fs
int
shr
add
les
push
mov
ror
xor
pop
pop
rcr
clc
mov
mov
movs
xchg
xchg
daa
mov
in
in
test
adc
cli
cwde
mov
call
xchg
push
jo
aad
jns
dec
retf
(bad)
cmp
and
mov
out
in
jmp
bound
inc
xchg
test
stc
and
sti
mov
les
aam
lods
mov
cwde
xlat
mov
push
out
rol
jecxz
and
ins
retf
mov
sbb
leave
add
and
(bad)
arpl
ja
jmp
push
sbb
(bad)
popa
sub
xor
xor
fisub
aaa
stos
inc
cmp
mov
mov
or
sahf
push
xlat
mov
push
ror
push
mov
data16
push
bswap
pop
cmp
gs
or
push
jno
sti
sub
faddp
xchg
lods
inc
jo
jle
fsub
loopne
fs
and
lods
dec
popf
les
xchg
ins
stos
xor
jle
jns
inc
inc
pop
cmp
icebp
test
pop
cmp
or
jp
rcl
jp
add
mov
jmp
gs
mov
ins
ja
outs
aam
push
xchg
push
les
(bad)
sbb
jo
inc
rcl
or
dec
clc
(bad)
fstp
shl
sub
ror
jge
jp
dec
nop
shl
push
inc
mov
stc
mov
xchg
arpl
dec
lea
mov
fild
or
mov
push
test
hlt
call
pop
push
fsubrp
and
sub
jb
xor
pop
inc
jbe
cmps
sub
retf
or
ins
pop
dec
rcl
mov
cmp
mov
mov
fs
(bad)
mov
jge
dec
xor
sbb
pop
and
and
sub
mov
fstp
push
jno
lds
test
nop
jl
std
jnp
(bad)
sbb
sbb
fsubrp
add
retf
mov
ret
movs
mov
xor
imul
ins
and
inc
test
cli
gs
lea
in
inc
sbb
sbb
arpl
add
sub
jmp
sub
mov
(bad)
adc
or
enter
(bad)
movs
jo
(bad)
jb
(bad)
fisub
popf
cmps
jecxz
add
mov
cdq
add
shl
aad
push
lock
push
xchg
js
call
xchg
cmp
hlt
jne
out
push
fs
jnp
jp
gs
mov
test
pop
adc
cmp
push
adc
adc
push
xchg
sub
inc
das
mov
jge
fdivr
repnz
shl
xlat
jae
je
lock
es
adc
int
(bad)
addr16
dec
out
mov
cmp
aad
mov
repnz
(bad)
dec
inc
repnz
or
push
add
sub
imul
rcl
mov
jle
xor
mov
pop
fwait
es
jne
cld
sti
test
aas
and
movs
jmp
jmp
jmp
clc
sbb
mov
ins
ror
cmps
push
fwait
imul
sti
mov
rcl
mov
sahf
dec
jne
pusha
mov
push
xchg
lods
push
push
int
arpl
fsubr
ins
in
mov
push
movs
(bad)
mov
hlt
enter
fsub
jl
pop
cmp
xchg
fisubr
(bad)
jne
push
sahf
rol
clc
mov
push
sbb
pop
repnz
adc
xor
jo
jmp
pop
rcl
cmp
mov
imul
fwait
in
ds
ret
cmps
jmp
inc
cs
adc
xchg
or
xchg
and
test
jl
in
fisttp
scas
dec
sbb
sub
push
addr16
scas
fdivr
not
pop
sbb
inc
push
or
std
wrmsr
pop
lods
inc
stos
sbb
pop
loope
nop
out
sahf
xchg
test
pop
loope
dec
adc
mov
xchg
js
fst
imul
aad
ins
out
mov
sub
stos
xor
jbe
add
cmc
outs
outs
xchg
lahf
or
push
xchg
(bad)
ror
pop
stos
mov
aad
adc
xchg
shl
push
enter
mov
dec
mov
and
out
fist
sub
in
ficom
loope
and
jns
lock
push
movs
inc
movs
push
mov
adc
and
aas
gs
into
ret
inc
mov
and
adc
out
iret
adc
in
mov
imul
fcmovnb
fnstsw
aam
cmp
pop
arpl
dec
sbb
scas
cdq
cs
lahf
out
sbb
(bad)
and
sbb
mov
pop
sbb
xchg
jnp
xchg
cs
cmc
test
xchg
push
shl
aad
adc
and
push
mov
jo
mov
jl
daa
or
fistp
sar
das
sbb
in
das
adc
push
fst
mov
iret
pop
fiadd
add
retf
es
outs
pop
cmp
dec
sub
je
dec
or
sbb
ret
xor
jbe
pop
data16
or
jl
mov
imul
and
sub
mov
cmp
jle
sahf
dec
push
fwait
inc
(bad)
lds
xor
in
fwait
fs
mov
lods
fst
retf
mov
loope
loope
fld
sbb
pop
mov
push
and
push
lods
sub
xlat
loopne
das
sti
mov
lea
dec
or
mov
adc
lods
test
mov
pop
cmp
fistp
inc
sti
call
dec
(bad)
call
adc
xchg
in
leave
shl
cdq
jb
into
test
and
pusha
cmp
ins
jne
cmp
jle
mov
test
jle
loop
sub
mov
inc
fwait
mov
stc
push
mov
cmps
addr16
lods
les
cmp
fistp
push
push
lock
inc
call
(bad)
jg
inc
add
hlt
cld
jl
test
mov
mov
lods
clc
fs
nop
enter
das
aam
imul
and
(bad)
xchg
popf
and
lahf
pop
and
jmp
adc
and
cmps
data16
push
ins
mov
cmp
jnp
sub
xchg
call
sti
push
sub
test
or
pop
ins
add
scas
jae
mov
mov
cmp
popa
mov
fwait
cmps
test
outs
pop
(bad)
aaa
inc
or
in
sbb
push
mov
push
fmul
into
imul
adc
cmp
repz
lods
inc
out
fisttp
add
out
cmp
dec
repz
popw
jne
jmp
xor
add
pop
add
popa
mov
mov
sub
arpl
xor
shr
or
push
lods
retf
mov
mov
dec
call
jle
out
add
repnz
pop
jne
mov
imul
jge
pusha
test
sbb
stc
jmp
ss
fsubrp
mov
sub
cdq
imul
dec
or
sar
stos
pop
push
gs
mov
adc
and
in
pop
jge
adc
pop
(bad)
retw
dec
in
stos
loopne
mov
loope
push
mov
push
push
sbb
and
mov
mov
or
daa
popa
ret
xor
adc
loope
mov
test
sar
ret
xor
sti
neg
hlt
cmp
popa
cmp
ins
mov
jae
adc
pusha
js
and
sub
sub
mov
test
xchg
clc
bound
shr
dec
and
inc
push
pop
ret
dec
pop
iret
push
sti
sub
jecxz
adc
pushf
das
fisub
pop
dec
cmps
aaa
nop
mov
stos
sub
ss
mov
loopne
add
pop
shl
dec
or
cmp
and
and
sbb
inc
(bad)
mov
push
(bad)
xlat
mov
adc
cli
dec
shl
pop
mov
adc
mov
mov
cmc
push
(bad)
fmul
int
hlt
sub
mov
(bad)
jmp
push
cld
jecxz
mov
in
sar
outs
pop
jne
jmp
mov
lods
pop
std
popa
fcomip
sub
push
outs
mov
jmp
mov
pop
out
sti
xchg
loop
lock
test
popa
icebp
mov
mov
popa
push
sbb
nop
and
mov
and
adc
imul
out
jmp
in
dec
push
cdq
jbe
lods
movs
clc
cdq
adc
and
sbb
iret
add
iret
mov
imul
je
sub
pop
pop
retf
retf
inc
or
sar
cmp
xchg
and
add
cmps
cdq
cmp
stc
shl
mov
or
nop
mov
inc
stc
dec
rcl
(bad)
adc
popa
push
mov
mov
inc
fs
sti
sbb
xchg
cs
jae
fs
das
jno
xchg
(bad)
dec
popa
sbb
inc
retf
out
pop
adc
push
mov
jl
in
js
mov
loopne
cmc
adc
arpl
pop
lea
cs
jne
imul
in
push
push
sbb
imul
mov
rcr
test
sub
adc
xor
out
das
pop
cdq
test
out
enter
or
loope
cmps
inc
int3
mov
out
and
dec
mov
cmp
dec
xor
mov
fcom
ss
imul
jecxz
mov
arpl
sub
fdiv
(bad)
cmp
xor
push
rcr
dec
jae
mov
mov
cmp
pop
mov
jb
push
lock
xor
and
xor
jp
mov
dec
mov
xchg
push
pop
ret
stos
sub
adc
test
push
mov
xchg
ret
outs
mov
jo
xchg
mov
add
outs
or
(bad)
(bad)
bound
mov
push
sub
fisttp
retf
jp
enter
mov
jnp
es
into
sub
push
hlt
mov
aas
xchg
or
and
dec
jecxz
lea
mov
push
and
(bad)
and
fdivr
add
fwait
test
xor
xor
push
movs
jle
(bad)
jo
inc
mov
jnp
lahf
js
shl
mov
out
xor
call
fistp
jmp
(bad)
loopne
retf
lea
push
jnp
mov
js
out
mov
aas
adc
mov
inc
push
fistp
mov
fmulp
shl
pushf
sub
fdivr
push
dec
or
dec
or
into
mov
aas
cmp
sbb
(bad)
push
repz
retf
out
inc
xchg
and
out
xchg
cmp
test
or
mov
int
mov
mov
cmps
or
int3
mov
ret
shr
(bad)
out
loopne
jno
les
into
lods
in
fwait
mov
cmps
aad
fwait
jecxz
fcomip
pmaxsw
sub
and
mov
repnz
sbb
fdiv
pop
cmp
mov
fistp
mov
in
ins
das
fbstp
pushf
lea
push
(bad)
lea
mov
out
and
and
test
call
mov
arpl
sub
cmp
outs
mov
cld
mov
lds
push
ds
cwde
ja
cmp
mov
or
cmps
shr
popf
pop
shl
fnstsw
jg
mov
js
xchg
popa
daa
mov
mov
push
cmp
fmul
mov
sub
xchg
in
mov
fidiv
aas
adc
out
sub
stc
cmp
in
xchg
scas
jmp
inc
adc
pop
cwde
add
jp
push
dec
test
sahf
sub
inc
inc
or
fmul
mov
mov
(bad)
aaa
lea
jmp
loope
and
es
sub
push
hlt
xor
test
shl
xchg
fcomip
xchg
push
imul
xor
outs
es
imul
jecxz
sub
mov
adc
retf
pop
and
mov
pop
jge
in
repnz
mov
aaa
scas
rcl
and
adc
pop
addr16
sbb
sub
out
movs
aad
mov
cmp
xor
(bad)
call
sahf
xchg
cli
add
mov
dec
into
jge
xor
arpl
pop
mov
add
dec
jns
into
in
push
push
int3
mov
mov
mov
ins
xor
pop
retf
test
jb
aaa
jbe
rcl
loope
mov
lahf
jo
int3
in
pop
(bad)
dec
movs
mov
in
xor
dec
aas
mov
fild
and
jbe
cmp
mov
dec
pop
xchg
stos
fld
cmp
adc
xor
scas
mov
fisubr
call
stc
call
add
out
loopne
inc
leave
test
(bad)
rcr
add
repz
mov
imul
(bad)
lods
jb
pop
cmp
es
push
push
out
jg
sti
mov
neg
popf
daa
inc
push
outs
stos
pop
mov
and
sub
out
(bad)
repnz
nop
fnstsw
lock
ret
jg
jle
dec
imul
xor
imul
dec
repz
ror
mov
ffreep
mov
out
data16
sbb
in
push
pop
mov
in
mov
imul
cli
cli
dec
dec
ins
in
xchg
stos
and
std
not
sbb
jnp
sbb
jno
movs
js
sbb
pusha
add
rcr
sub
ins
jae
movs
jmp
sub
(bad)
out
cmp
mov
jae
retfw
pop
cld
pusha
cmp
rol
mov
shl
dec
or
inc
xor
out
(bad)
xchg
cwde
jnp
call
shl
loope
sti
rcr
sub
pop
jecxz
cmp
(bad)
(bad)
or
mov
enter
or
clc
test
stos
push
jl
or
push
cmp
lea
sbb
dec
lds
sti
stc
sbb
sbb
in
retf
in
xchg
push
popf
test
dec
loop
(bad)
mov
add
retf
xor
jmp
sbb
add
mov
add
(bad)
fiadd
call
jmp
adc
sub
mov
loopne
cmp
cmc
mov
aaa
mov
pop
pop
dec
xor
mov
push
jb
je
sbb
sub
xchg
in
cli
ins
pop
push
sbb
dec
fiadd
retf
pusha
add
jae
and
ds
sub
movs
jg
and
fldcw
mov
and
aad
pop
pop
dec
(bad)
ret
jae
xor
jmp
outs
sub
repz
sub
lea
aas
jle
in
xchg
jnp
pusha
adc
sbb
fwait
clc
mov
cmp
test
mov
cld
dec
imul
movs
fdivr
add
mov
mov
mov
dec
retf
fidiv
adc
das
jnp
call
mov
mov
loop
mov
and
int3
mov
mov
ror
out
dec
into
mov
test
xchg
mov
rcr
xchg
mov
inc
and
jno
sti
rol
cmp
adc
or
fisttp
mov
ret
and
sub
stos
push
mov
adc
hlt
cmp
aas
retf
mov
jbe
jne
xor
ret
outs
bound
sub
outs
in
xor
pop
inc
push
fcmovb
imul
mov
es
jge
dec
pop
test
rol
mov
adc
mov
scas
sbb
stc
out
and
cmp
and
and
and
sub
test
out
jmp
jno
call
data16
sbb
mov
ret
push
or
push
outs
jne
(bad)
mov
pop
loope
pop
stc
jns
mov
les
jne
shr
out
iret
sahf
(bad)
repnz
cld
test
push
lahf
rol
sti
je
arpl
xor
xchg
outs
jmp
jbe
sub
fld
stos
sbb
pop
out
xchg
mov
jne
cmp
and
jmp
ins
mov
daa
inc
mov
inc
es
imul
and
sahf
ins
push
pop
dec
sbb
sbb
dec
cli
lahf
outs
xor
add
retf
lahf
add
repz
sub
ror
inc
xchg
outs
sbb
xor
cmp
std
fs
fist
loope
aam
loopne
cmp
and
inc
dec
jb
mov
pop
jmp
or
dec
ror
mov
sub
xchg
xor
ret
xchg
push
retf
adc
cld
xchg
mov
lods
shld
dec
and
add
jmp
ja
out
jle
sbb
sbb
cmp
fcom
sbb
and
out
das
xchg
scas
cwde
adc
xchg
leave
loopne
fld
xchg
pop
adc
xor
sbb
xchg
rcl
pusha
ja
cld
push
mov
push
lock
sahf
and
sub
into
repz
in
mov
fsubr
rol
sbb
dec
jmp
lgs
icebp
test
add
xor
in
xor
test
jbe
inc
loopne
push
mov
mov
outs
xor
pushf
stos
js
push
mov
stos
mov
jp
js
dec
xlat
cmp
popf
pop
mov
xor
jmp
sub
add
mov
inc
xor
addr16
fmulp
cmp
sbb
push
cmp
cld
xor
cmp
stos
outs
sub
sub
dec
sbb
or
xor
push
mov
dec
loop
jge
aad
je
pop
fcom
xchg
cmp
aas
sub
dec
in
inc
dec
fwait
xor
jg
mov
adc
dec
jns
lea
xchg
(bad)
test
movs
mov
sbb
push
clc
add
pop
pop
push
dec
mov
fcomip
ss
aas
cmp
inc
and
push
mov
push
mov
cmps
dec
dec
(bad)
xor
mov
mov
sub
xor
or
sub
clc
cmp
jmp
loope
push
inc
mov
mov
add
fs
and
push
xchg
rol
retf
(bad)
mov
mov
mov
cmp
cmc
xor
jbe
ss
mov
pop
mov
push
lock
lods
sti
in
xor
cmp
adc
xor
or
inc
add
lahf
fwait
sub
jno
sbb
cwde
aam
call
loop
js
fld
xor
cmp
push
or
jb
cmp
and
add
or
fs
aam
or
pop
add
push
into
out
ret
dec
std
lds
and
jg
xor
and
pushf
add
sahf
inc
inc
call
lods
aam
mov
mov
outs
inc
push
(bad)
test
adc
icebp
push
clc
fs
xchg
push
adc
sub
jge
ror
and
inc
mov
add
inc
xor
ror
or
test
xchg
test
(bad)
push
aam
jne
push
clc
ins
stos
or
jg
test
inc
push
sbb
lock
dec
jae
adc
cmpxchg
and
xchg
test
addr16
sub
loop
in
cwde
out
jle
mov
test
xchg
ins
popa
addr16
dec
jp
aas
dec
or
fnstenv
gs
icebp
xchg
outs
fld
stos
inc
or
outs
sub
xchg
call
sbb
cmc
xchg
xchg
adc
sbb
call
fidiv
mov
jle
lahf
lods
lods
push
jno
push
xchg
push
int3
mov
popf
mov
or
js
jb
pop
inc
and
jmp
jge
fisttp
loopne
and
adc
daa
pushf
add
ficomp
xor
push
in
ins
add
push
mov
mov
int
mov
les
repnz
and
mov
sbb
std
ins
cmps
nop
lea
push
(bad)
out
xor
dec
mov
cmp
cld
mov
mov
cli
mov
mov
adc
mov
fidiv
pop
inc
or
sub
std
test
dec
stc
cmp
jmp
shl
ja
inc
nop
and
mov
cmp
lods
fld
push
inc
aas
(bad)
mov
outs
ins
cld
sbb
mov
mov
and
repnz
sahf
sbb
les
fldcw
hlt
fdiv
mov
repz
aas
push
mov
and
mov
lock
xor
jo
stos
(bad)
adc
mov
xchg
stc
jae
(bad)
push
fcmovbe
sbb
in
iret
jle
sbb
fiadd
not
mov
cli
mov
adc
arpl
jecxz
imul
adc
les
jo
dec
ins
jl
pusha
xor
not
aaa
lods
mov
out
ja
out
enter
out
scas
or
fadd
inc
dec
and
mov
movs
pop
retf
dec
mov
mov
pop
jne
lock
pop
mov
sbb
in
int
xchg
lahf
(bad)
adc
mov
jecxz
and
push
sub
imul
arpl
push
sar
call
dec
add
xchg
popfw
and
fdiv
mov
sbb
loopne
loope
cs
daa
repz
push
movs
jmp
in
add
out
add
int3
stos
mov
mov
adc
mov
cmps
or
scas
das
pop
lea
das
movs
mov
fmul
je
add
test
mov
adc
mov
fcmovu
add
sbb
sbb
push
and
sub
add
sbb
jnp
push
dec
movhlps
mov
repnz
dec
sbb
mov
retf
jge
mov
outs
xchg
(bad)
mov
fistp
scas
mov
call
xchg
mov
cwde
mov
arpl
pushf
cdq
push
call
test
icebp
pop
xor
nop
popa
push
sub
dec
adc
ins
mov
jnp
fcmovb
inc
or
xlat
jp
mov
test
jno
inc
(bad)
mov
jne
jns
jmp
jg
sub
cs
cdq
jno
and
xor
sti
ja
cmp
pop
mov
mov
into
adc
cli
daa
movs
or
jns
and
or
(bad)
fbstp
clc
aas
stos
loopne
call
pop
xor
jno
and
in
or
xor
jmp
mov
call
pop
cld
mov
enter
(bad)
(bad)
sbb
retf
mov
repnz
or
push
arpl
je
push
push
dec
inc
div
icebp
dec
loop
repnz
and
mov
mov
jns
in
pop
jmp
xchg
aaa
sbb
push
movs
ja
test
in
mov
cmp
inc
outs
lds
stos
les
cmp
leave
xor
scas
fnstenv
cmc
adc
mov
out
dec
int3
rcl
ds
mov
mov
test
dec
xchg
and
ret
pop
sub
aam
ror
jb
cmp
xchg
cmp
and
cwde
enter
out
sub
pop
jl
xchg
lods
scas
push
cmp
mov
push
adc
(bad)
stos
mov
xor
lds
push
sti
out
fld
daa
rol
ds
fbstp
in
test
cmp
jmp
sbb
sbb
dec
retf
das
(bad)
mov
cmps
data16
pop
mov
scas
lea
arpl
pop
test
mov
call
mov
ss
mov
add
es
xor
imul
and
je
cmp
hlt
das
mov
jl
dec
jnp
js
jmp
ja
or
push
inc
cmp
mov
xor
js
xchg
dec
jge
call
fs
call
fwait
leave
mov
cwde
sub
or
xchg
jae
mov
adc
xor
cmps
test
or
clc
inc
xchg
std
pop
add
iret
es
cdq
arpl
gs
mov
lods
cwde
lds
stc
mov
ds
rcr
push
outs
mov
and
push
xchg
xchg
sub
out
mov
xor
mov
mov
cmps
test
adc
push
add
jecxz
mov
jmp
in
xlat
xchg
shr
repnz
xchg
sbb
and
xchg
out
addr16
scas
xor
aaa
jae
add
aaa
jmp
inc
xor
(bad)
shl
xchg
loope
scas
jle
retf
call
rcl
mov
fmul
jbe
mov
xor
and
jge
retf
mov
xchg
cli
jb
data16
sbb
push
jbe
pop
inc
or
dec
test
or
sti
inc
loopne
je
fdivr
mov
sub
mov
xchg
xor
mov
inc
test
xor
retf
jecxz
addr16
out
lds
mov
or
push
rep
aam
movs
mov
cmp
sub
sbb
pop
data16
ret
into
adc
xchg
mov
dec
or
jb
or
xchg
add
add
(bad)
sub
jne
dec
push
or
inc
or
push
push
push
push
xor
jb
pushf
pop
mov
mov
push
scas
jmp
div
in
retf
sbb
rcr
(bad)
sahf
inc
pop
(bad)
test
stos
or
pop
loope
sub
jae
popa
dec
add
mov
jnp
(bad)
sahf
jmp
sub
xor
push
push
xchg
xor
test
out
sbb
xchg
adc
rol
movs
into
addr16
push
popa
push
dec
adc
jecxz
cdq
inc
cmps
xchg
sbb
enter
std
movs
adc
stc
gs
mov
cli
mov
out
jmp
lods
fwait
addr16
mov
mov
pusha
push
js
xor
dec
out
add
xor
sub
push
repnz
and
ret
pop
xchg
(bad)
enter
mov
imul
adc
repnz
adc
jb
out
fcmovb
mov
movs
mov
call
and
sub
dec
iret
(bad)
scas
int
push
pusha
stos
js
pop
stc
(bad)
and
in
pusha
cmp
ja
add
mov
dec
pop
mov
jp
in
jns
test
xchg
in
mul
mov
or
test
js
mov
or
jle
call
das
clc
xchg
mov
stos
inc
pop
push
adc
push
add
mov
and
int
xchg
movs
fwait
add
fwait
push
or
scas
out
and
xchg
push
ficomp
add
pop
xor
sub
int
lds
inc
scas
or
test
sub
jmp
mov
mov
pushf
in
sbb
cmc
mov
or
pop
daa
cmp
mov
scas
xchg
add
int3
mov
mov
mov
(bad)
retf
das
mov
xchg
test
pop
pusha
in
call
stos
ret
inc
arpl
xchg
nop
pop
inc
outs
aam
jnp
out
pusha
mov
cmp
out
push
mov
mov
mov
dec
push
and
ror
dec
add
outs
jbe
cmp
sub
test
mov
shl
fisubr
push
mov
fnstenv
xchg
push
and
fwait
out
mov
mov
jecxz
imul
aam
(bad)
and
jae
out
push
push
push
ja
adc
lea
scas
sub
fcomp
in
mov
and
sbb
jnp
sub
ficomp
fstp
cmp
add
(bad)
jns
xor
jmp
test
mov
and
addr16
mov
dec
aaa
push
cwde
retf
mov
xor
ja
sub
popa
push
and
or
or
je
mov
adc
adc
inc
inc
jmp
cmp
hlt
mov
mov
ins
das
mov
pop
and
xor
push
pop
lods
mov
and
lods
mov
leave
fstp
jae
add
push
jl
scas
in
(bad)
xor
movs
push
jle
sti
ficomp
shr
int
imul
push
mov
retf
sub
inc
sub
dec
sub
dec
sub
add
mov
into
add
ja
mov
cmp
cmps
out
aam
loop
pop
mov
adc
xchg
adc
inc
push
imul
and
mov
cwde
stos
addr16
push
dec
sbb
fcomi
jge
into
(bad)
lods
(bad)
scas
dec
sbb
xchg
sbb
rol
and
or
mov
or
stc
ins
cmc
jbe
dec
sub
or
(bad)
sub
outs
daa
add
mov
dec
les
pop
pop
sub
test
xchg
fdivr
cmp
xchg
cmp
push
fcomp
xor
jg
jecxz
call
call
add
pop
aas
mov
into
fisttp
je
xchg
sub
add
mov
dec
adc
dec
sbb
mov
call
inc
and
adc
rcl
xchg
fldenv
xor
lods
push
(bad)
jmp
mov
mov
addr16
lock
lods
popa
dec
xor
jnp
cmp
xor
inc
adc
(bad)
std
xor
and
or
out
addr16
mov
push
mov
cmps
mov
jg
jo
scas
rcr
add
sub
popa
inc
clc
(bad)
pop
aad
aaa
push
push
or
imul
fiadd
push
inc
cmp
mov
push
arpl
mov
mov
jae
mov
sub
jl
pop
sbb
in
repz
or
in
ret
sub
call
popa
aam
xchg
mov
inc
mov
mov
xchg
(bad)
(bad)
sub
(bad)
dec
adc
pop
sub
cmps
mov
(bad)
mov
out
je
fwait
scas
inc
cmp
jo
ja
pop
loop
mov
loope
mov
jle
cmc
push
mov
in
xor
les
dec
xchg
or
ss
push
pop
add
pop
(bad)
sub
imul
fucomip
pop
sub
push
jmp
push
(bad)
out
ds
or
aam
bound
xchg
xchg
in
adc
int3
call
and
in
dec
mov
xchg
pop
adc
push
xchg
cli
mov
ret
xor
loope
xor
push
push
cdq
ror
sub
xchg
rcr
rol
adc
das
movs
arpl
dec
sbb
sub
leave
imul
out
xchg
in
push
mov
dec
(bad)
jmp
mov
mov
inc
fs
stos
push
inc
call
push
push
add
push
ret
cdq
test
ins
stc
daa
mov
cli
push
imul
jmp
add
int3
push
popa
es
sbb
cmp
inc
jp
data16
stos
mov
and
repnz
mov
sub
shr
(bad)
ss
fstp
xor
inc
adc
sub
xchg
sub
cmps
adc
mov
lahf
push
mov
mov
xchg
and
in
jbe
sbb
das
popa
inc
mov
call
cld
pop
rol
add
mov
sub
jp
mov
and
jle
je
add
stos
mov
mov
cmp
add
mov
pop
pause
push
lahf
push
jg
jg
xchg
loopne
mov
sbb
jge
out
test
pop
jns
cmp
push
mov
sub
xchg
xchg
pusha
scas
push
(bad)
retf
add
pop
xchg
int3
inc
mov
mov
hlt
sbb
inc
mov
data16
loope
cmps
iret
lea
adc
xchg
xchg
or
cmps
fsubr
mov
loop
push
mov
adc
clc
cmp
jp
dec
sbb
aad
push
neg
or
and
dec
sahf
push
and
pop
lahf
cmps
fwait
sbb
jmp
scas
xchg
dec
or
jbe
cmc
adc
jnp
loopne
jb
sub
mov
idiv
leave
ds
push
enter
out
nop
mov
into
in
cmps
mul
cmp
add
dec
xchg
and
sar
add
mov
jns
jecxz
cmp
pushf
ins
inc
mov
repnz
pop
fnstsw
(bad)
(bad)
int
adc
inc
shl
pop
xor
aaa
push
or
lea
sub
and
addr16
sbb
mov
fidivr
xor
adc
inc
arpl
inc
push
mov
xor
add
jmp
jb
push
lods
rcr
addr16
das
repnz
fmul
(bad)
pop
fsub
inc
mov
(bad)
scas
nop
mov
fisttp
ja
xor
pop
sbb
test
call
dec
jnp
rcl
(bad)
shl
xor
and
ret
aas
cmps
call
push
shl
dec
mov
push
das
mov
jg
dec
cmp
push
pop
(bad)
rcr
and
cmp
rcl
or
add
cwde
add
out
pop
or
sbb
hlt
out
out
pop
cmovae
mov
ss
mov
fcom
int3
jge
push
sub
adc
(bad)
push
je
jo
shr
dec
inc
xchg
xchg
aas
inc
scas
fucomip
clc
std
ins
adc
ret
mov
jecxz
sbb
jae
push
jl
xor
jae
push
or
(bad)
lds
sbb
inc
add
jnp
sbb
ss
xor
dec
ins
xor
fwait
jbe
test
imul
xchg
mov
(bad)
pop
jne
call
lods
in
jmp
das
jo
cld
cmp
gs
jl
lods
test
jg
or
pushf
fisubr
lods
sub
or
rcl
jp
pop
mov
fdecstp
iret
cmp
dec
sbb
int3
or
daa
dec
lahf
idiv
mov
mov
imul
and
inc
cwde
lods
gs
or
dec
out
xchg
and
lea
add
jmp
jbe
push
dec
(bad)
xchg
jmp
mov
pop
ja
paddw
scas
movzx
vmovups
test
ret
xchg
imul
inc
jg
mov
clc
lock
das
dec
sub
in
lahf
fld
bound
xor
and
aaa
push
fcom
stc
popf
stos
cs
and
hlt
xchg
add
das
in
sub
cmps
ins
sbb
push
data16
test
lods
(bad)
xchg
ss
scas
gs
pushf
jno
xchg
dec
imul
lea
pop
repz
gs
mov
or
call
sbb
test
les
cmp
pushf
(bad)
loopne
(bad)
sub
adc
lock
add
inc
lds
loop
inc
or
dec
mov
pushf
adc
cmps
movs
les
bound
js
lods
mov
ins
pop
or
mov
outs
int3
adc
cmp
cmp
xor
inc
rcr
stos
repz
or
out
sbb
out
mov
movs
jmp
rcl
pop
or
mov
lock
cmp
cs
xor
shl
ret
ss
nop
iret
and
mov
jmp
mov
and
inc
or
jo
test
lea
enter
mov
mov
sbb
(bad)
(bad)
jbe
dec
rol
cwde
and
mov
frstor
or
hlt
jecxz
idiv
sar
push
loope
and
or
xchg
mov
icebp
imul
push
(bad)
rcr
fdivr
packsswb
mov
inc
mov
adc
stc
sub
(bad)
js
outs
into
aaa
out
pop
out
add
cmps
hlt
mov
cli
sbb
push
push
push
xlat
call
or
ss
sbb
mov
hlt
jmp
call
ins
js
xchg
jge
pop
gs
mov
(bad)
jle
mov
and
jns
dec
jp
add
pop
pushf
inc
sti
inc
sbb
adc
pop
sub
ror
out
push
aaa
push
(bad)
das
add
jb
jnp
xchg
cmp
dec
arpl
pusha
pop
cmp
call
push
jns
aad
mov
mov
push
sar
sub
call
aas
les
ins
xchg
xchg
(bad)
jae
aam
xchg
ins
daa
(bad)
popw
lock
jge
(bad)
aas
stos
mov
xor
lds
bound
cmp
(bad)
lahf
scas
or
lods
emms
(bad)
stos
ja
cmps
lods
dec
cmp
mov
and
jl
pop
sub
arpl
in
jae
cmp
push
inc
or
push
and
lods
or
xor
cld
fdivr
in
fild
(bad)
xchg
int3
je
out
int3
push
or
ret
sbb
fistp
cmp
in
mov
lock
cmp
sar
push
sub
and
sbb
daa
les
cwde
sti
out
dec
adc
fild
ins
out
or
adc
xchg
pusha
rol
ja
add
xor
jle
jmp
outs
mov
out
mov
xor
jo
leave
pop
iret
(bad)
jns
int
inc
or
ret
stc
test
jge
addr16
xor
mov
pusha
inc
jbe
push
out
popa
push
jno
mov
pop
xchg
int3
movs
sbb
fwait
pop
and
imul
lods
mov
ja
out
mov
adc
xchg
mov
pop
ss
pushf
cmps
test
push
push
cli
mov
xor
icebp
test
mov
shl
xchg
fwait
add
push
pop
ds
daa
scas
or
(bad)
repnz
fwait
inc
pushf
inc
mov
daa
push
cmp
das
cmp
mov
inc
xchg
push
dec
push
lods
aam
or
stc
mov
cmps
call
(bad)
aam
cmp
dec
movs
loopne
mov
xor
mov
xlat
test
js
jno
pop
cmps
ret
jmp
js
pushf
inc
cdq
sbb
in
jl
ret
cs
loope
stos
push
lea
imul
pop
push
imul
les
add
imul
out
nop
push
or
jbe
cwde
nop
cdq
les
cmp
cs
mov
cmp
hlt
mov
imul
add
leave
dec
rcr
retf
xor
push
adc
xchg
arpl
in
fidivr
ror
lds
repnz
jnp
add
jmp
mov
cmps
mov
test
lock
xchg
push
cmc
pop
in
mov
sbb
mov
out
or
mov
add
push
jns
and
or
jmp
ret
imul
lahf
addr16
xchg
mov
lods
add
dec
lds
adc
and
mov
add
pop
sti
xchg
push
pop
mov
adc
cmp
sub
sbb
icebp
fst
push
sbb
movs
pop
jo
fdivr
lock
mul
sub
add
test
jmp
mul
outs
call
(bad)
(bad)
bound
sbb
andps
push
ds
cmp
cmps
and
pushf
cli
lds
dec
mov
push
fsub
adc
imul
(bad)
and
xchg
xor
movs
adc
retf
xchg
iret
jno
cwde
push
push
gs
repnz
in
adc
mov
test
add
adc
push
cs
js
dec
movs
adc
cmp
movs
repz
mov
adc
inc
dec
inc
cmp
in
or
test
test
scas
xchg
pop
and
nop
fimul
lods
mov
xchg
test
das
icebp
push
xor
mov
data16
enter
add
push
enter
sub
out
sbb
ins
fs
push
dec
into
xor
jne
pop
mov
pop
xlat
add
jg
sub
jmp
stc
ret
xor
les
pop
jle
cmp
sbb
fld
ja
inc
pop
mov
mov
fcom
pop
sbb
and
and
or
sub
in
fs
xchg
push
arpl
xchg
mov
jecxz
(bad)
sti
jp
pop
inc
xchg
dec
inc
daa
(bad)
mov
movs
fs
ret
hlt
pop
jmp
mov
pop
fbld
or
mov
mov
mov
jb
jmp
(bad)
fnstsw
xchg
pop
shr
sub
or
outs
and
cmp
clc
adc
jo
mov
pop
call
repnz
pop
aad
mov
imul
inc
push
stc
test
test
xlat
mov
xchg
movs
mov
popa
jle
repnz
jbe
push
js
ret
daa
add
adc
xchg
rcr
xor
push
mov
stos
jmp
and
or
dec
push
or
test
je
in
dec
push
inc
pop
push
push
es
out
xchg
mov
jns
push
inc
cmp
dec
dec
add
fs
aam
(bad)
and
mov
push
shl
sub
ins
int
dec
dec
sbb
mov
test
ss
sub
ret
outs
jbe
loop
cmps
imul
mov
bnd
fistp
xor
jmp
sub
sub
(bad)
leave
cmp
xor
lods
mov
sub
fadd
cdq
enter
sbb
push
daa
syscall
je
mov
rcr
jbe
ret
pusha
retf
sbb
cli
or
jmp
push
pop
aaa
movs
pop
sub
push
sbb
mov
je
outs
repnz
or
loop
arpl
lods
mov
push
aam
inc
(bad)
or
cmp
cld
dec
cwde
mov
popa
out
std
cwde
(bad)
cmp
or
adc
lods
and
lea
out
jmp
cmp
in
adc
xchg
ffree
rol
loop
ficomp
adc
adc
mov
mov
sub
repnz
xchg
mov
stos
and
clc
mov
mov
sahf
fild
loope
retf
cwde
cs
in
pop
xchg
add
push
mov
push
jmp
call
dec
(bad)
loop
adc
repnz
inc
mov
sub
and
cmp
inc
jg
movs
rcl
inc
push
dec
sub
and
fnstenv
(bad)
loop
dec
outs
push
rol
mov
mov
cmp
leave
imul
les
rcl
sbb
pop
or
xchg
cmp
xchg
add
popf
div
fsubr
lds
leave
pop
std
div
push
ficomp
addr16
xlat
jns
sbb
pop
xchg
(bad)
sbb
push
push
inc
jns
xor
fistp
sahf
popa
dec
iret
mov
jno
push
add
mov
out
sub
inc
and
inc
dec
dec
cmc
add
or
jmp
add
mov
imul
popf
xchg
mov
xor
dec
cmps
sbb
sti
out
or
movs
mov
pop
out
mov
sahf
mov
and
call
mov
cmp
fwait
shl
sbb
nop
pop
gs
jnp
mov
out
push
pop
iret
xor
ds
mov
add
add
loopne
popa
sbb
arpl
sub
xor
mov
sbb
dec
icebp
sbb
pop
(bad)
mov
xchg
(bad)
and
ja
cdq
push
hlt
xchg
loope
lods
jae
in
aad
js
adc
jne
push
inc
daa
inc
or
mov
xchg
jmp
add
dec
out
(bad)
push
loopne
jmp
pop
jle
push
mov
out
xor
out
mov
jae
ret
xor
test
mov
nop
jb
pop
sbb
cmc
loopne
adc
popa
mov
enter
leave
dec
push
cli
mov
in
mov
test
push
or
mov
add
sbb
call
std
push
pop
fwait
dec
mov
xchg
cld
adc
in
xor
push
push
call
jno
jnp
(bad)
shl
adc
call
jo
jl
ja
inc
mov
loopne
(bad)
xor
jmp
xchg
stc
pop
out
jmp
in
addr16
out
pushf
and
jg
fdivp
pop
in
mov
and
push
std
mov
retf
add
add
mov
push
xchg
aam
dec
repnz
pop
xlat
cmp
ins
xchg
addr16
cmc
sub
or
retf
push
cld
fstp
mov
pop
pop
shr
jp
xchg
push
stos
mov
icebp
repnz
inc
and
xchg
imul
call
int
or
jmp
add
loope
pop
je
test
xchg
mov
sbb
xchg
js
rol
sbb
jle
mov
or
dec
enter
ret
dec
outs
dec
and
div
xchg
test
adc
or
fdiv
aad
loop
outs
loop
call
imul
(bad)
(bad)
jne
retf
push
or
cmp
fsubp
scas
mov
adc
inc
xor
mov
loopne
push
jge
sub
pop
inc
loop
xrelease
and
aaa
(bad)
aam
sub
pop
stos
mov
cmp
adc
jb
pusha
inc
shl
out
cmc
ret
cdq
mov
sub
cli
js
aas
mov
icebp
add
mov
not
movs
mov
xor
dec
repz
arpl
jne
jle
pop
in
in
dec
lahf
pop
mov
fs
loope
lods
popa
pushf
lods
or
push
cmp
mov
jge
scas
fnstsw
aam
sub
aam
jmp
mov
test
dec
xlat
mov
jecxz
das
xor
xchg
cmp
pop
out
rcl
xchg
dec
lods
sbb
mov
inc
mov
inc
es
icebp
cld
cmps
mov
cmp
inc
push
imul
and
(bad)
push
lea
mov
nop
mov
loopne
jae
fwait
inc
sar
not
mul
push
test
xor
dec
outs
imul
data16
sub
add
aad
xchg
push
mov
and
ins
imul
xchg
dec
push
lds
nop
push
mov
std
mov
cwde
push
add
(bad)
in
dec
int
stc
sbb
and
xchg
sub
mov
push
mov
cmp
lods
ret
test
pop
mov
push
inc
or
or
sbb
xor
dec
pop
inc
push
inc
cmovle
xchg
sar
mov
fwait
add
inc
mov
and
scas
jmp
fild
das
jbe
out
popf
cmp
ror
adc
xor
jbe
outs
addr16
shr
das
enter
cs
es
xchg
shl
mov
sti
call
mov
aas
out
xor
in
jno
mov
ss
xlat
push
retf
mov
sahf
jno
addr16
add
out
dec
pop
mov
or
mov
sbb
mul
pop
adc
cwde
fcom
test
fimul
push
add
add
dec
pop
push
pop
jno
adc
pushf
sahf
retf
outs
jo
ss
sub
push
push
mov
fs
ret
or
dec
int3
xor
js
sub
enter
pop
push
es
mov
call
or
xor
(bad)
sbb
push
jb
and
ins
iret
push
push
(bad)
jns
mov
pushf
pop
js
js
imul
pop
jmp
neg
lods
adc
shl
pop
push
lahf
in
jo
mov
aaa
pop
pop
jno
sbb
adc
xor
mov
in
sbb
rsm
push
cld
neg
jg
hlt
push
push
outs
loopne
sbb
jle
mov
sar
xchg
mov
inc
aam
rcl
jecxz
adc
mov
pushf
pop
cmp
and
lods
repz
ret
jle
xchg
dec
jne
push
adc
js
cdq
mov
xor
jg
cmp
inc
test
aaa
lahf
into
jae
add
sbb
arpl
jo
jmp
gs
xchg
fld
or
cmp
sub
and
jae
inc
cmp
loope
mov
sar
push
fild
stos
das
sbb
sbb
(bad)
enter
cmp
mov
pop
jge
mov
xchg
mov
push
xchg
mov
enter
pop
mov
xchg
jnp
rcl
mov
xchg
aas
arpl
push
loopne
(bad)
mov
sub
sub
les
push
xor
(bad)
fs
sub
jmp
and
mov
and
repnz
sub
out
out
aad
or
push
push
push
ret
or
retf
push
mov
out
adc
sub
dec
mov
mov
cmp
xlat
xchg
sub
out
dec
push
mov
retf
lods
(bad)
add
mov
cmp
in
pop
adc
arpl
popf
imul
or
pop
mov
test
lods
lods
scas
mov
dec
mov
add
or
dec
jge
mov
mov
push
into
cli
daa
or
pop
jecxz
les
mov
mov
adc
sbb
adc
cmp
sahf
xor
jne
stos
dec
test
fs
sub
pop
or
cmp
jl
dec
cmp
lds
aam
sub
jmp
scas
cld
enter
push
cmp
sbb
pop
ror
int3
push
jne
jns
movs
iret
es
fistp
out
sahf
jnp
loop
pop
fild
loopne
mov
movs
pop
dec
add
and
and
push
jmp
and
out
adc
dec
ror
sbb
shl
inc
jmp
xchg
xchg
loop
ins
and
pop
sbb
push
dec
inc
sbb
sar
jle
and
mov
inc
pushf
dec
push
call
jmp
test
add
nop
cmp
addr16
fs
pop
aas
out
addr16
iret
icebp
xor
clc
push
int3
push
aam
sbb
imul
dec
mov
jle
test
fwait
xchg
xchg
xlat
push
mov
mov
push
scas
ret
in
cmps
rcl
jl
and
scas
loopne
inc
sub
fist
mov
push
test
out
dec
jne
sbb
in
xchg
mov
adc
(bad)
out
push
ror
adc
movs
addr16
in
sbb
adc
fldcw
push
dec
leave
push
jl
pop
jp
ins
fs
xchg
mov
sub
inc
jg
sahf
sub
add
add
xchg
adc
call
popa
xlat
xchg
jns
pushf
xor
inc
mov
ins
jb
scas
lods
push
out
cmp
(bad)
outs
jo
repnz
mov
sbb
add
push
lods
in
sub
jl
(bad)
int
dec
out
xor
mov
mov
adc
leave
clc
dec
push
mov
ins
dec
fdivr
push
movs
paddq
and
repz
sti
scas
or
add
lea
ins
into
xor
scas
pop
lea
xchg
leave
repnz
into
push
repz
dec
and
retf
iret
jp
out
stc
popa
adc
stc
(bad)
ins
mov
mov
pop
cdq
sub
or
or
jmp
xchg
fld
aaa
ror
gs
stos
push
and
cmp
aas
loope
idiv
cmp
mov
adc
and
xchg
dec
mov
push
movs
or
mov
inc
(bad)
(bad)
dec
xchg
push
mov
out
ret
jg
call
jne
pop
add
and
or
jge
ins
fmul
inc
sbb
stos
push
rol
mov
lods
pop
push
lods
cld
pusha
push
(bad)
adc
inc
cmp
add
sbb
mov
adc
imul
pushf
sbb
dec
jae
add
jmp
xchg
out
xchg
div
scas
mov
cmps
addr16
call
mov
xor
push
lods
inc
inc
and
cmp
inc
test
inc
xor
fucomp
mov
iret
jmp
outs
shr
mov
or
ins
(bad)
rol
out
test
xchg
nop
jo
jmp
mov
imul
xlat
cwde
push
cdq
call
inc
inc
pop
fstp
xchg
lods
mov
mov
fadd
jg
gs
mov
cmps
je
mov
das
dec
xchg
sub
pop
jbe
mov
inc
outs
xor
jo
sub
lods
xchg
mov
add
ficomp
fidiv
adc
in
sbb
jne
lea
mov
stos
outs
pop
cmc
mov
add
pop
iret
sub
xor
int
fidiv
dec
fwait
adc
test
aaa
dec
js
retf
xchg
aam
mov
push
aas
call
push
ret
sub
in
(bad)
enter
or
test
jle
lods
mov
sub
jns
sbb
pop
nop
iret
jae
in
xor
(bad)
mov
add
xor
mov
jns
outs
pop
int
enter
sub
xchg
xchg
add
stc
(bad)
shl
mov
and
fadd
movs
das
cmp
mov
mov
test
imul
and
or
xchg
test
mov
sub
sub
mov
cmp
add
aaa
xor
rcr
pop
cmp
pop
(bad)
in
lock
into
xchg
jo
sbb
jg
data16
and
scas
call
(bad)
int3
dec
adc
daa
in
out
jmp
mov
jnp
ins
pusha
and
bound
fild
mov
dec
icebp
das
xor
adc
in
and
pop
and
add
fcomip
or
mov
inc
or
les
push
fild
mov
mov
enter
icebp
rcl
xor
shr
ins
add
ret
push
cmc
sub
bound
inc
icebp
inc
aad
(bad)
outs
xor
or
sbb
hlt
cld
cmp
mov
mov
cld
sbb
pop
leave
inc
stc
aaa
push
imul
fdivr
sub
mov
ss
fs
scas
mov
mov
stos
cmp
pushf
sub
xor
pop
fidivr
repnz
aas
icebp
jnp
mov
(bad)
int
sbb
xchg
adc
movs
inc
pop
scas
test
ror
inc
mov
cmp
inc
jmp
mov
stc
pusha
mov
imul
mov
and
mov
sbb
cdq
mov
inc
xor
jmp
lods
or
inc
mov
jge
xchg
inc
or
cs
stos
stos
daa
fdiv
call
xchg
sbb
out
fadd
mov
int
and
ds
mov
ds
cdq
add
sahf
call
repnz
and
push
bound
push
xor
add
std
mov
add
(bad)
dec
icebp
fsub
cdq
sbb
mov
jb
inc
push
in
out
ins
fcmovb
lgs
xchg
out
ss
dec
ins
neg
push
or
ficom
popf
cmc
aaa
ror
xor
sub
cs
test
dec
in
cmp
jmp
dec
out
or
dec
and
dec
out
add
mov
fmulp
mov
push
popa
sub
cwde
jecxz
lock
or
push
push
cli
or
fldenv
add
inc
sub
jb
and
xor
icebp
clc
popf
lock
or
jbe
inc
mov
xor
mov
aas
fld
xor
xor
das
push
mov
in
test
ins
ret
pop
js
add
movs
lea
and
movs
retf
cmp
sub
push
ds
jno
mov
shl
cmp
loop
rcr
ror
fs
dec
arpl
retf
or
test
outs
or
lods
mov
cs
int3
mov
jmp
sbb
mov
jmp
dec
cdq
addr16
scas
push
fucomi
cli
mov
leave
(bad)
int
xor
jmp
aas
outs
jno
loop
shl
add
pop
dec
and
xchg
test
ja
fsub
pop
scas
call
repnz
push
stos
(bad)
jb
xor
loop
inc
push
sbb
and
rcr
pop
mov
jp
loop
dec
enter
loope
push
xor
cmc
mov
test
mov
sahf
sub
ret
mov
fnop
int
hlt
push
mov
cmp
mov
mov
bound
or
iret
out
cmps
das
or
(bad)
js
inc
inc
sar
and
cmc
inc
shl
(bad)
out
jmp
or
movs
inc
and
inc
test
icebp
ins
inc
sbb
sbb
pop
or
lods
iret
cmp
mov
inc
out
inc
lahf
(bad)
test
xchg
xchg
js
clc
sub
and
jge
dec
jmp
pop
rcl
lods
jle
clc
sub
adc
and
cmp
arpl
inc
(bad)
in
repnz
push
rep
sbb
mov
cmp
inc
nop
mov
cmp
mov
movs
sub
pop
clc
cmp
push
stos
cmps
shl
enter
out
mov
js
mov
jg
xlat
jmp
sub
lds
js
dec
(bad)
repnz
test
lods
xor
xchg
xchg
movs
rcr
inc
xor
jb
loopne
cmp
ret
loopne
pop
jbe
mov
push
xchg
shr
aaa
inc
push
add
sub
pop
inc
sbb
mov
fs
fcomp
pop
jno
pop
cld
mov
in
ret
push
push
or
leave
and
and
test
jo
xchg
dec
fld
(bad)
jecxz
jmp
add
(bad)
hlt
inc
fwait
ja
test
jecxz
mov
jo
adc
cld
or
pop
lahf
cmp
outs
or
aam
xchg
scas
aad
jmp
ja
cmp
retf
ds
or
push
jle
jbe
fisub
jg
jp
push
repz
ins
xlat
mov
sbb
cdq
jb
or
aas
bound
fidiv
test
dec
aaa
fs
lods
jmp
jl
iret
mov
(bad)
cmp
jnp
xor
cmp
adc
inc
aad
push
mul
aas
inc
in
and
pop
and
add
imul
(bad)
push
and
mov
lods
cli
and
jne
sahf
jmp
fld
and
jnp
aad
loope
mov
fistp
mov
out
pop
ret
push
mov
enter
cmp
loop
out
bound
cmp
xchg
xchg
cmp
xor
shl
aaa
cwde
mov
in
pop
mov
pop
(bad)
push
aaa
jp
leave
sub
sbb
in
gs
(bad)
jecxz
outs
xor
in
out
push
jno
(bad)
mul
mov
les
sbb
xor
adc
(bad)
movs
nop
movs
mov
pop
add
leave
lods
(bad)
mov
loop
mov
push
repz
inc
jno
dec
rcl
push
jle
loope
inc
test
mov
adc
sbb
jecxz
mov
mov
imul
xor
ror
push
xchg
adc
add
pop
in
cwde
addr16
adc
ins
and
pop
ins
sbb
jp
ins
gs
push
pushf
nop
imul
scas
jns
cdq
icebp
inc
jne
xor
pusha
xchg
popa
mov
adc
cmp
mov
mov
ret
dec
stos
inc
push
xor
xor
sbb
mov
jecxz
dec
jno
xchg
cdq
xchg
je
xchg
stos
loopne
mov
inc
and
bound
pop
es
fisttp
(bad)
(bad)
jl
sbb
or
xchg
pusha
jo
mov
jmp
outs
and
scas
ins
sub
xlat
subps
inc
jl
and
push
gs
jb
jno
mov
jbe
sbb
xor
inc
push
and
and
ds
jmp
and
cdq
int
lahf
ins
in
imul
scas
arpl
sbb
fnstenv
scas
enter
inc
fldenv
popf
sub
jns
adc
adc
xchg
jne
cmp
cwde
and
lock
inc
in
xor
imul
sbb
pop
(bad)
adc
jns
xchg
push
mov
cdq
xchg
mov
adc
lea
xchg
cli
cmp
xchg
nop
shl
mov
into
scas
popa
push
imul
jno
mov
xor
xor
mov
xor
loope
sbb
push
push
into
fcom
ja
mov
and
scas
rcl
jmp
repz
cmps
jmp
or
xor
std
and
scas
mov
retf
jmp
(bad)
test
add
call
dec
fistp
ds
fadd
pop
xor
dec
pop
pop
imul
je
mov
add
and
or
(bad)
dec
shl
clc
pusha
mov
sbb
out
mov
popf
xor
dec
int
sbb
inc
mov
or
adc
sbb
shl
clc
mov
push
sbb
fisub
movs
xor
in
mov
sub
pop
dec
dec
pop
add
leave
or
std
add
(bad)
(bad)
push
adc
dec
cld
ins
leave
loopne
das
icebp
jl
or
fisub
mov
inc
cmp
daa
inc
jo
mov
dec
mov
aaa
or
xor
inc
or
les
mov
push
es
cmc
lds
jp
adc
int3
or
jne
retf
dec
nop
push
pop
fs
ja
xor
arpl
jle
push
test
jp
pop
outs
and
sbb
(bad)
aaa
add
cdq
xlat
jnp
pop
test
mov
in
inc
int3
lock
scas
cmp
out
mov
or
inc
cwde
out
push
sub
fsub
hlt
mov
pop
mov
inc
xchg
and
dec
pop
dec
jbe
ja
movs
aam
sbb
mov
mov
ins
sbb
fs
sub
jb
pop
pop
push
cld
push
ficomp
push
je
es
aam
cmps
mov
xor
sub
loope
addr16
push
sub
jne
sbb
dec
xor
adc
adc
adc
pop
lods
cs
fld
mov
mov
ja
test
mov
icebp
jns
sbb
pop
in
ds
mov
inc
mov
jl
pop
(bad)
sbb
(bad)
(bad)
jecxz
imul
mov
push
sbb
push
mov
popf
dec
cld
pop
pop
test
dec
mov
pop
aas
mov
cmp
pusha
pop
xlat
cs
stc
mov
add
push
fcomp
or
cmp
cmp
out
dec
hlt
mov
jno
mov
data16
icebp
vmwrite
mov
lahf
cmp
push
xchg
push
ret
sub
push
xor
imul
mov
sbb
cld
push
mov
and
outs
mov
sahf
clc
xor
mov
adc
ja
aad
sub
ret
ret
push
retf
sbb
or
dec
aad
jae
dec
fs
push
bound
stos
xchg
ret
adc
mov
nop
arpl
(bad)
(bad)
leave
fld
push
hlt
lea
add
(bad)
cmp
in
loop
cmp
(bad)
xor
outs
inc
aaa
rcl
or
pop
sbb
xor
jle
ret
pop
jg
jns
mov
cmps
mov
mov
js
sbb
hlt
ja
inc
idiv
xor
adc
sub
fidivr
xor
xor
push
xor
out
mov
aam
sbb
jbe
or
cwde
and
add
mov
push
scas
xor
and
xchg
lds
sbb
pop
lea
xchg
call
and
out
repz
mov
std
dec
cmp
sub
inc
stos
iret
mov
sbb
dec
cli
lods
out
xor
mov
cdq
mov
mov
add
iret
popf
inc
jae
mov
mov
xor
add
mov
jb
cmps
push
pop
jnp
mov
test
jno
xchg
cmps
pusha
xor
repz
push
push
push
retf
fiadd
and
(bad)
xchg
mov
mov
push
outs
sar
sub
pop
inc
adc
jg
xchg
mov
or
xchg
cli
xchg
pop
cmp
jmp
sbb
add
push
movs
call
mov
xchg
out
and
test
push
pushf
jnp
add
jg
mov
imul
(bad)
jmp
cwde
aas
xchg
xchg
pop
sub
push
clc
call
or
aaa
outs
push
dec
(bad)
mov
(bad)
xor
push
rcl
mov
adc
jmp
add
and
jbe
push
adc
mov
aas
test
jl
(bad)
in
lea
mul
jge
xchg
xchg
push
cmp
and
cmc
movs
ins
pop
mov
mov
or
movs
push
xor
aad
push
mov
rol
xor
fucomi
inc
lea
push
outs
aad
mov
loopne
mov
fild
mov
adc
push
jp
mov
xor
out
push
xchg
push
and
pop
or
out
ins
and
cmp
xchg
mov
xchg
mov
xor
pop
test
daa
mov
xchg
push
fisubr
mov
scas
les
xchg
jo
jmp
jmp
stc
pop
jmp
pop
jge
jecxz
jp
or
test
jbe
aas
pop
xor
ins
xchg
fsub
outs
mov
sub
std
add
mov
adc
xchg
int
mov
push
pop
or
out
xchg
stos
add
or
fisub
inc
std
cmp
cmc
fwait
fs
mov
cmps
xchg
adc
push
ja
clc
ror
dec
jnp
loop
cmc
and
stos
jno
test
inc
test
call
sub
or
cmps
repz
jmp
ins
mov
test
mov
std
or
(bad)
and
repnz
(bad)
push
fidiv
add
test
loope
fsub
aas
cli
or
sub
fucomip
cmc
repnz
cli
xchg
es
pop
and
rol
mov
cld
jae
fisttp
into
xchg
pusha
cli
mov
push
add
mov
ja
mov
sar
push
fadd
ror
cld
xchg
cli
fisttp
(bad)
mov
mov
imul
ins
mov
xor
mov
sub
(bad)
sbb
fldz
push
push
sub
scas
fld
add
cmp
aaa
push
pop
xchg
pop
ins
(bad)
out
inc
pop
push
add
or
dec
push
sbb
(bad)
ins
test
fs
jmp
sub
mov
(bad)
popf
aas
ins
sub
add
adc
xor
dec
sahf
pop
push
or
dec
jmp
sbb
inc
push
jmp
dec
mov
mov
mov
xlat
mov
jmp
pop
mov
fisttp
add
scas
test
and
sbb
mov
lods
or
push
mov
mov
out
jp
sub
inc
mov
test
std
sar
sub
and
jecxz
sbb
add
(bad)
movs
into
mov
jb
sub
push
cmp
les
les
sub
jns
mov
push
sub
mov
adc
adc
pop
shl
sahf
lahf
add
imul
ins
adc
fst
(bad)
stos
adc
xor
push
push
in
xor
pushaw
xchg
jle
fisttp
add
mov
dec
cmps
mov
inc
js
sub
stos
push
popf
retf
add
jmp
jae
xor
ins
les
hlt
cmp
jl
mov
mov
adc
adc
fdiv
mov
cmps
xor
stos
xchg
push
xor
shl
xchg
cdq
loopne
push
push
in
dec
cli
and
shr
stos
ds
mov
pop
nop
adc
aad
mov
xchg
push
adc
push
jno
add
imul
imul
adc
sar
bound
rcl
jae
shl
test
mov
add
sbb
or
jno
pop
add
push
cs
pop
adc
adc
push
fmul
(bad)
nop
popa
cs
mov
mov
sub
mov
push
das
cmps
push
xchg
pop
cmp
mov
ror
mov
rol
mov
arpl
test
inc
bound
adc
mov
outs
xor
rcl
cmc
out
lods
xchg
add
sub
ds
xor
test
lods
xor
or
add
call
in
movs
jbe
stc
sub
lds
cmp
adc
jle
fmul
sub
or
xor
add
push
in
into
(bad)
pop
jp
or
je
xor
inc
push
fcom
scas
xchg
paddq
sub
popf
nop
sbb
add
retf
cld
adc
aas
bnd
inc
sar
dec
pop
mov
movs
mov
lods
ror
jmp
rol
inc
sub
ins
xor
icebp
xchg
call
stc
mov
loope
jno
repnz
mov
xor
fsub
cmps
dec
jae
mov
sbb
hlt
std
jl
je
repz
ret
jmp
mov
data16
fs
ret
sbb
div
retf
ret
mov
mul
cmp
mulps
mov
jae
and
inc
fnstenv
mov
cs
or
mov
ffreep
sub
mov
lods
and
(bad)
test
push
xor
out
lock
sbb
sbb
ss
inc
stc
mov
repz
in
add
adc
sub
inc
(bad)
call
out
data16
or
dec
cmp
jne
cmp
mov
and
mov
mov
xchg
and
fist
xor
test
cmp
mov
test
mov
das
dec
fidiv
rcr
pmuludq
inc
pop
jno
retf
(bad)
test
mov
ret
cmp
mov
pop
pop
aaa
sub
jp
mov
cmp
ss
sbb
add
pop
push
sub
or
daa
test
pop
xchg
loopne
add
daa
ror
loopne
enter
or
call
pop
lds
mov
call
addr16
jne
std
pop
imul
sub
push
leave
fstp
popa
inc
or
sbb
loop
cmp
mov
cmp
jecxz
fwait
imul
(bad)
lahf
fidivr
mov
mov
and
gs
dec
jb
push
(bad)
sbb
lahf
jmp
adc
pop
add
stos
pop
rcr
loop
push
retf
sub
and
sub
cld
cdq
stc
paddb
je
or
scas
or
and
and
lds
xor
and
ins
sub
add
adc
adc
xchg
mov
mov
ret
daa
pop
into
push
arpl
int
push
sar
xchg
pushf
pop
cmps
(bad)
mul
out
scas
mov
(bad)
jge
retf
or
lods
loope
outs
test
xor
inc
lods
xor
cmp
pusha
in
pop
rcl
dec
test
add
adc
nop
outs
fadd
jmp
xchg
push
push
outs
iret
int3
lods
into
mov
fimul
(bad)
pop
repz
icebp
out
dec
jecxz
add
jbe
dec
lea
push
arpl
pushf
stos
shr
sbb
stos
clc
gs
adc
outs
inc
pop
jne
mov
ret
sti
mov
jbe
jle
sub
sbb
inc
loop
push
adc
push
cdq
and
jl
fdiv
and
push
cmps
ror
in
fist
pop
arpl
push
and
retf
outs
jo
push
sub
inc
popa
and
imul
shr
dec
das
popa
daa
jbe
sub
xchg
not
sbb
inc
and
pusha
pop
jmp
repz
add
mov
loopne
xchg
shl
in
out
jne
mov
and
ror
idiv
add
pop
pop
add
je
je
lea
imul
movs
mov
(bad)
and
pop
adc
pop
mul
test
cmc
jns
stos
cld
mov
mov
scas
retf
pop
pop
adc
shr
arpl
fnstcw
pop
inc
lods
imul
lea
lods
lea
loope
push
rol
lds
fnstenv
xchg
jle
retf
ins
(bad)
loopne
in
les
sbb
gs
std
or
sbb
in
pop
mov
aas
xor
mov
repnz
(bad)
push
scas
jne
out
xlat
(bad)
cs
sub
inc
push
push
ror
jmp
fdivrp
aaa
sti
neg
ret
sub
jnp
mov
mov
(bad)
aas
test
xchg
movs
nop
push
stc
jne
jmp
int
fsubr
dec
mov
inc
sar
add
add
pop
popa
add
lods
xor
or
not
(bad)
adc
sbb
cmp
pop
shr
xlat
fwait
adc
in
jg
mov
inc
cmp
retf
xchg
cdq
repz
push
and
hlt
xchg
mov
mov
mov
jbe
repnz
and
stos
lods
pop
cli
or
jl
jmp
dec
jbe
pop
dec
ja
jbe
loope
mov
or
xchg
aad
int
mov
in
sbb
mov
jg
push
xchg
fist
inc
sahf
adc
pop
jmp
xor
dec
lahf
xchg
fcmovb
push
sub
fdiv
rcl
pop
stos
daa
pop
mov
cmp
xchg
lds
imul
dec
scas
sti
add
stos
xor
(bad)
mov
pusha
ret
and
cmp
jb
dec
push
outs
cdq
mov
add
jo
mov
sbb
in
les
sar
sub
lods
dec
mov
icebp
mov
jns
js
adc
jne
cmps
inc
push
jl
xor
in
fst
xchg
cmp
xchg
mov
sbb
pop
push
mov
mov
push
lods
fstp
push
xchg
lds
in
in
bsf
xchg
cld
mov
cli
mov
(bad)
sub
and
and
das
push
or
loope
jne
sar
xchg
shl
cmp
dec
in
pop
inc
hlt
pop
xor
in
outs
aas
push
push
retf
in
push
sub
test
jecxz
mov
bound
mov
pop
stos
inc
mov
inc
or
mov
xchg
ret
sub
arpl
sbb
mov
mov
xchg
int
cmp
dec
pop
(bad)
mov
pop
xor
mov
fnstcw
jae
sub
xor
xchg
add
xchg
xor
ss
(bad)
sub
dec
cmp
(bad)
movs
xchg
out
xor
mov
mov
mov
sar
cdq
mov
into
shl
lods
cmc
add
dec
mov
movs
stos
jle
out
jecxz
xchg
or
inc
int
add
test
mov
push
mov
(bad)
pop
ficomp
out
cmps
(bad)
cmps
je
and
dec
mov
imul
out
les
pop
xchg
outs
jmp
push
pushf
jnp
jo
cwde
cs
or
in
mov
idiv
stc
(bad)
cmps
sbb
inc
or
add
in
and
jmp
or
jle
inc
call
pushf
retf
add
loope
bound
adc
jmp
and
push
sub
cli
adc
pop
xchg
pop
scas
dec
aas
fs
mov
sbb
imul
adc
adc
aas
retf
inc
mov
push
int3
out
push
aas
daa
jo
cs
or
(bad)
rcl
movs
dec
jne
int3
xor
call
popf
imul
mul
jns
loop
pop
fnstcw
rcr
inc
scas
jle
pop
ss
shl
ret
cmovp
adc
int
add
aad
add
mov
pop
nop
(bad)
out
gs
cmp
hlt
mov
xchg
mov
in
lds
cmp
call
movs
pop
xchg
(bad)
retf
bound
xor
cs
sub
push
imul
mov
cs
rep
dec
fisttp
push
and
push
int3
mov
rcr
(bad)
push
fstp
pop
mov
push
pop
mov
add
pusha
repnz
rol
cs
bound
stc
xor
out
add
imul
in
push
push
mov
pop
inc
sub
dec
sbb
fwait
mov
repnz
ss
adc
mov
sub
dec
div
fdiv
push
xchg
cmc
pop
out
pop
adc
pop
mov
cs
(bad)
pop
cmps
ror
cdq
(bad)
iret
lods
out
test
(bad)
jp
pop
push
adc
adc
xchg
(bad)
data16
pusha
out
sub
loopne
cmp
mov
repnz
neg
fldenv
push
ds
lea
enter
inc
xor
pop
shr
dec
ja
mov
stos
xor
xlat
packuswb
inc
sub
xor
lds
aaa
inc
jge
into
loop
push
ds
mov
out
loop
mov
ret
jge
mov
jno
fisubr
add
mov
sub
cmps
dec
and
mov
in
jmp
rol
aas
and
mov
rcr
push
sbb
fild
or
jne
bnd
inc
push
pop
fiadd
xor
inc
rcl
sti
and
dec
ins
xchg
mov
or
cmp
xor
test
std
test
and
sbb
into
and
adc
sbb
aad
shr
cmp
mov
xchg
daa
push
fisubr
(bad)
arpl
pop
jl
xchg
adc
rcl
in
movs
pop
fwait
sub
pop
out
loopne
(bad)
mov
or
repnz
(bad)
mov
and
xchg
lock
ins
sub
loop
inc
ins
ror
iret
mov
repnz
xlat
xchg
sti
pop
and
dec
ins
mov
sub
(bad)
jge
test
test
inc
repz
push
aad
fadd
pushf
mov
out
call
scas
jmp
add
xor
test
jbe
int
xchg
add
push
das
mov
inc
fisttp
mov
cdq
and
or
int3
pusha
in
mov
fsubr
iret
addr16
jbe
inc
xchg
js
call
inc
popa
les
dec
jmp
dec
add
fistp
xchg
mov
pop
test
fsubr
or
ret
ds
lahf
or
fisub
xor
cmc
neg
mov
fwait
bnd
and
dec
inc
sti
cmc
jl
outs
push
hlt
aam
daa
out
jno
rcr
popa
jnp
dec
in
pop
dec
push
sub
pop
sbb
sbb
inc
lods
mov
inc
movs
add
stos
pop
call
push
and
mov
and
pop
loop
inc
add
pop
pop
fs
cmc
je
out
push
adc
mov
aad
jmp
pop
hlt
add
or
cmp
inc
movs
aaa
mov
fist
jns
or
jle
jecxz
cmp
fwait
fwait
sub
into
data16
dec
into
je
out
scas
inc
add
adc
shl
xchg
mov
cs
adc
push
stos
jae
ret
sbb
stos
mov
dec
lods
sbb
out
inc
mov
fadd
mov
pop
push
mov
fdivr
jl
mov
pushf
xchg
fisubr
loope
(bad)
cli
jb
int
pop
daa
mov
mov
add
cli
cmp
sub
inc
lea
pop
sbb
sbb
mov
mov
fnstcw
rol
inc
call
mov
idiv
call
leave
xor
cmp
mov
sub
and
in
ja
inc
sub
xchg
in
push
les
retf
pop
and
mov
inc
leave
push
inc
mov
xlat
add
retf
jne
sub
shl
jb
ret
jns
mov
popa
add
pop
pop
inc
loopne
cmp
inc
add
jmp
div
dec
retf
arpl
adc
and
pop
sub
pop
sub
ret
push
test
add
fwait
jns
pop
(bad)
(bad)
pop
sbb
sbb
mul
call
fwait
xchg
add
jp
daa
je
stos
xor
scas
icebp
test
cmps
arpl
jo
in
ins
push
add
mov
sbb
add
mov
and
std
shl
fsubp
mov
push
and
and
int3
imul
mov
xchg
mov
lss
repnz
push
jg
adc
mov
and
popa
add
xor
pop
inc
mov
mov
call
jg
inc
dec
cmp
or
mov
hlt
or
popa
dec
fidivr
sbb
add
pusha
jbe
pop
push
pop
outs
iret
ds
push
sbb
scas
dec
aad
fimul
pushf
icebp
sbb
cdq
movs
test
mov
and
stos
sbb
cmp
mov
push
adc
xchg
out
push
add
and
js
jg
mov
js
std
or
cmp
mov
jg
jmp
jno
cdq
lea
mov
imul
cmp
sbb
test
ins
cmps
mov
cmc
mov
enter
adc
mov
and
jg
outs
(bad)
pop
out
fdiv
in
xor
(bad)
dec
mov
aaa
imul
(bad)
mov
mov
(bad)
xor
imul
and
and
imul
rcl
int
sub
fsub
mov
repnz
mov
mov
loope
(bad)
daa
sub
es
xlat
jmp
sub
fistp
ret
pop
push
movs
call
mov
adc
cmp
int3
sar
or
rep
addr16
mov
sbb
pop
imul
loope
cdq
(bad)
ja
outs
xchg
mov
rol
mov
nop
mov
jp
pusha
call
into
ins
inc
dec
popa
shr
cdq
sub
repnz
mov
cmps
jno
out
popa
ret
(bad)
adc
mov
pop
jmp
idiv
add
push
sbb
aad
mov
out
cmp
add
push
neg
ins
adc
rol
fild
lock
mov
repz
push
and
mov
push
dec
mov
xor
jp
cdq
jne
hlt
loopne
stos
add
cmp
das
xor
jnp
in
in
ja
inc
(bad)
popf
data16
test
or
sub
mov
dec
cmp
ins
fs
xchg
dec
daa
fwait
push
dec
push
sbb
jno
sbb
pop
lea
ret
aad
xchg
cmp
outs
scas
hlt
or
jge
lods
or
jmp
dec
pmullw
push
cmp
dec
std
pop
call
add
sub
cmp
sbb
jecxz
or
jmp
xor
lods
jg
mov
adc
mov
sbb
mov
dec
xchg
xchg
dec
jl
std
jne
loop
(bad)
fisub
mov
ffree
and
in
xor
sbb
pusha
cmp
in
push
repz
add
jb
movs
inc
out
enter
and
pop
daa
sub
hlt
adc
das
jne
stc
cli
jp
mov
ss
scas
dec
fcomp
in
pop
aaa
rol
cmp
loop
adc
jp
mov
inc
arpl
sbb
mov
repnz
sbb
mov
retf
fimul
adc
add
pop
jmp
dec
cli
jle
leave
mov
gs
or
mov
and
and
in
ss
add
mov
jne
(bad)
push
push
and
mov
mov
xor
out
fnstenv
mov
cmp
push
dec
push
xor
jmp
mov
outs
aam
rol
outs
jmp
addr16
call
clc
xchg
shrd
push
cmp
inc
cdq
push
aas
add
sbb
xchg
not
mov
or
mov
cmp
inc
mov
adc
mov
xchg
in
sahf
mov
in
push
jmp
mov
cli
mov
add
inc
inc
mov
outs
and
shl
sar
ins
cmp
fisub
outs
lea
push
pop
repz
retf
fldenv
pop
shl
retf
and
ins
mov
adc
ror
cmps
pop
jbe
inc
jns
out
and
mov
jg
mov
test
push
not
fsubr
test
bound
pusha
mov
jle
cmp
(bad)
out
xchg
pop
loopne
in
test
sub
cmp
movs
xchg
add
ds
fs
xor
clc
fs
lahf
and
lock
pusha
fidivr
pop
sar
lods
cmp
xchg
test
cmp
rcr
pop
jmp
pop
pop
or
arpl
dec
loop
lods
aas
loop
jmp
mov
inc
lahf
or
inc
movs
cli
add
dec
(bad)
fstp
ffreep
out
shl
movs
enter
xor
fwait
pop
xor
xchg
adc
outs
fistp
and
add
mov
and
jne
sub
repnz
imul
bound
mov
std
mov
fmulp
jns
sbb
inc
adc
fadd
push
push
xor
mov
adc
(bad)
sahf
mov
imul
add
add
jecxz
movs
sbb
sub
sbb
xor
pop
in
std
adc
mov
fist
dec
and
cwde
idiv
out
push
fsub
mov
in
loop
pop
scas
mov
loopne
in
aad
(bad)
sti
jg
shr
js
out
nop
mov
push
js
leave
stc
lock
sbb
adc
xchg
jle
sub
std
in
sbb
push
gs
clc
(bad)
xor
lods
out
icebp
ss
ja
dec
ins
pop
adc
pop
(bad)
xchg
repz
pop
lea
sub
jb
imul
repnz
push
mov
fmulp
or
aaa
fs
pop
call
retf
out
scas
jmp
idiv
out
in
xor
idiv
pop
aas
jb
sub
in
out
mov
mov
mov
jae
jne
rcr
pop
cwde
pop
xor
inc
lods
pop
shl
or
jbe
shl
cmps
jp
ins
sub
imul
pop
push
mov
sub
pop
add
sub
data16
jge
test
cmp
fwait
sub
mov
les
aam
jne
test
mov
xor
push
and
sbb
ins
arpl
cdq
in
xor
adc
xchg
call
sub
jmp
out
mov
mov
adc
out
xor
xchg
into
scas
dec
js
add
cwde
mov
ret
or
mov
jbe
inc
in
pop
mov
test
push
mov
call
fs
add
push
cmps
pop
xor
scas
gs
into
out
cs
int
cdq
xchg
test
jo
cmp
inc
xchg
xchg
mov
retf
mov
fld
mov
pusha
bswap
jp
jnp
mov
mov
xchg
lods
lock
cmp
iret
fnstcw
adc
xchg
cmps
ins
add
mov
push
adc
leave
dec
add
pop
lds
jmp
rcr
sti
pop
shl
pushf
aad
aas
jns
cmp
pop
div
(bad)
dec
xor
bswap
sub
popf
test
pop
jge
sbb
add
ins
call
jns
sbb
pop
mov
shl
pop
fild
xchg
outs
std
shl
dec
or
pop
rcr
mov
(bad)
dec
inc
jl
fcom
add
scas
mov
ins
(bad)
xor
into
pop
arpl
mov
or
pop
int
dec
mov
push
mov
push
(bad)
jg
(bad)
xor
xor
icebp
dec
call
enter
cmp
test
movs
popf
outs
loop
adc
jns
mov
stos
add
sub
mov
dec
loop
(bad)
jmp
push
push
repnz
mov
pcmpeqb
es
or
or
sub
xor
jbe
inc
mov
pop
fcomp
inc
imul
ds
ins
clc
mov
pop
jno
adc
adc
(bad)
mov
imul
sbb
adc
add
sub
push
test
push
mov
retf
in
push
xchg
into
adc
in
mov
add
jno
adc
or
push
sahf
fs
jl
pop
and
pop
and
fcom
movnti
mov
(bad)
es
je
mov
mov
push
retf
push
ror
mov
mov
add
sub
retf
int
in
and
popa
lea
cmp
imul
xchg
mov
retf
daa
jge
or
cld
xor
xchg
mov
dec
fadd
xchg
add
dec
stos
sbb
loop
(bad)
(bad)
int
nop
lods
inc
xor
jmp
dec
adc
iret
dec
popf
sti
fldenv
mov
dec
jno
inc
sub
mov
pop
and
ror
cld
(bad)
aaa
pop
xchg
pop
lahf
push
xor
jl
idiv
outs
pop
add
call
xchg
mov
or
xor
idiv
repz
and
das
sbb
push
gs
xor
adc
mov
cmp
jo
repz
fs
mov
sub
stos
stos
inc
pop
pushf
mov
sub
add
xchg
mov
data16
out
adc
mov
inc
jp
in
xor
push
daa
loope
inc
dec
lds
imul
mov
adc
lods
mov
sub
jp
sar
les
or
push
adc
mov
or
add
dec
fisub
or
rcl
jae
push
push
fcmovne
stos
ja
hlt
cmp
(bad)
sbb
mov
cmp
pop
cdq
sub
jnp
jns
mov
outs
xor
sub
std
test
scas
dec
mov
xchg
xchg
sbb
in
aaa
sub
add
sbb
loopne
cwde
test
iret
sbb
fld
nop
arpl
xor
cmc
movs
fs
dec
sub
mov
fist
fistp
out
cld
(bad)
lds
sbb
fcomp
inc
jmp
lds
sub
ret
sar
test
pop
sbb
xor
fiadd
fcom
std
cmp
ss
push
shr
push
jo
xchg
fdivp
es
in
lods
aam
push
sar
adc
and
pop
jno
pop
and
aam
mov
or
mov
mov
ror
mov
leave
outs
cmp
push
sbb
lea
call
test
adc
out
inc
push
jmp
shl
mov
sbb
add
movs
inc
xchg
cmp
and
xchg
shr
jbe
dec
xor
jecxz
test
xchg
shl
inc
les
popf
scas
pusha
or
mul
test
sahf
adc
and
sti
(bad)
cld
and
push
test
in
in
mov
cdq
pop
das
pop
cmp
fld
push
xchg
es
mov
fwait
mov
add
push
jb
(bad)
cld
pop
aas
cmps
fild
fldenv
push
sub
sar
cmp
lods
jnp
inc
sub
xor
out
mov
adc
and
mov
jae
lds
pusha
adc
xor
jl
pop
pop
inc
fwait
mov
cmp
pop
out
xchg
cmp
and
aam
pop
jb
mov
adc
imul
sbb
mov
ficomp
xchg
pop
call
aam
fist
jmp
pop
(bad)
les
mov
or
lea
sub
xor
inc
pop
xor
fs
push
retf
iret
xchg
icebp
(bad)
lock
mov
inc
xchg
sub
mov
out
(bad)
sti
sbb
jb
push
xchg
add
dec
sub
bound
imul
xchg
dec
jnp
push
mov
xor
add
jns
aaa
enter
out
sbb
dec
loop
sub
enter
inc
pop
dec
xor
inc
xor
in
mov
add
sbb
out
sub
and
inc
xor
pop
stos
stc
mov
add
ret
lods
mov
sar
(bad)
js
push
sbb
cmps
push
or
iret
jge
jb
call
lahf
loop
jecxz
adc
clc
daa
(bad)
jmp
div
outs
pop
test
and
sti
sub
inc
inc
test
retf
int
and
mov
push
sbb
aaa
and
fadd
sbb
es
ficom
inc
mov
inc
rcl
jge
mov
rol
cmps
pop
cmps
push
xchg
pop
stos
je
cmp
jnp
and
push
dec
loop
imul
lods
push
test
aad
sub
loopne
int
fucomi
pushf
mov
add
loope
test
std
cmp
lea
jns
sub
cmp
and
ret
nop
jnp
mov
adc
mov
mov
push
and
pop
in
shr
aas
xchg
sar
xor
cdq
mul
dec
mov
js
xor
add
sub
loop
dec
pop
cli
add
les
mov
mov
ret
dec
aam
xchg
jno
push
sub
retf
xchg
fbstp
mov
ror
dec
call
sbb
cmp
jg
push
leave
ja
das
xor
push
hlt
mov
mov
arpl
loopne
int
ins
scas
xchg
or
cmp
dec
or
int3
dec
push
jbe
cmp
sub
clc
xor
into
ds
lods
sar
inc
push
in
and
mov
out
mov
retf
stc
mov
gs
pop
inc
sub
mov
movs
nop
enter
cmps
loopne
(bad)
call
and
sub
mov
mov
mov
test
lds
test
es
mov
sbb
add
call
test
es
sub
(bad)
shl
mov
movs
xchg
sub
adc
and
mov
cmp
adc
pop
(bad)
jns
stc
adc
hlt
sub
les
fadd
xchg
and
mov
scas
movs
mov
mov
and
imul
mov
mov
mov
mov
xor
mov
data16
xchg
sub
clc
pop
dec
push
xchg
out
xchg
mul
popa
(bad)
aaa
sbb
retf
aad
xchg
mov
xor
clc
sub
loopne
xor
sbb
cmps
test
xor
retf
lock
ror
push
fwait
(bad)
int3
dec
test
data16
mov
mov
sbb
adc
cli
das
adc
test
mov
daa
jp
adc
and
pop
in
out
cmp
clc
mov
outs
xlat
xor
add
aad
mov
push
int
push
retf
inc
or
adc
ins
mov
or
arpl
fsubr
jge
dec
or
(bad)
xor
jbe
outs
and
lds
call
call
fbld
stc
jp
dec
mov
mov
push
and
dec
push
inc
inc
cdq
div
or
jge
add
xchg
fs
clc
cmp
and
shl
mov
push
or
sub
mov
jge
xchg
leave
push
inc
lods
and
cmp
push
ret
cli
and
mov
in
adc
icebp
xor
aad
ret
ficom
arpl
sbb
push
rcl
out
out
jbe
call
push
mov
add
adc
std
xor
cmp
or
jg
or
fld
mov
jbe
push
mov
mov
xchg
imul
xchg
inc
dec
nop
es
xor
aam
fistp
outs
les
les
adc
retf
sub
add
mov
jmp
pop
and
xchg
push
arpl
add
popa
sahf
mov
les
inc
fld
or
jecxz
sub
nop
test
jmp
push
inc
cmp
fs
loop
mov
jp
lahf
cmp
lds
push
cwde
arpl
int
jmp
retf
push
mov
into
aam
adc
hlt
push
adc
imul
daa
nop
jne
test
xchg
enter
imul
leave
jnp
cmp
dec
dec
mov
pop
adc
lds
push
cmc
sub
push
cmps
dec
sbb
xchg
sti
int3
sub
cmp
mov
push
jae
cmp
jae
les
mov
cdq
add
aaa
mov
cmp
mov
in
mov
dec
mov
xlat
xchg
cli
push
test
adc
test
or
(bad)
popf
mov
jno
adc
aam
ins
or
out
test
(bad)
sti
div
cdq
sub
fisub
aad
jp
in
loop
cmp
or
test
daa
in
add
xor
aaa
jmp
add
cmp
mov
mov
mov
and
cmp
xchg
mov
add
mov
mov
mov
out
clc
sbb
sub
out
ds
cs
jp
sbb
scas
inc
inc
jb
rol
xchg
fnstenv
fnsave
test
repz
(bad)
jae
sub
sub
mov
pop
in
les
and
xchg
popf
lods
sbb
aad
pop
ins
imul
add
add
fisttp
dec
inc
sbb
xchg
pop
sub
sub
cmp
cmp
dec
jo
xor
retf
mov
mov
inc
add
shr
mov
xor
ror
ja
xchg
rcr
ds
in
test
popf
and
cli
fwait
shl
leave
hlt
cmp
repz
addr16
test
cmp
dec
inc
sub
jge
(bad)
mov
jecxz
and
inc
pop
pop
cld
mov
dec
cmp
add
mov
or
ds
lods
paddb
jbe
and
cld
jae
js
je
outs
mov
pop
icebp
jle
mov
jbe
cbw
pop
mov
ret
imul
aaa
inc
in
sbb
test
retf
fbld
pop
scas
daa
lahf
push
fs
repz
ror
imul
xchg
ret
pop
push
in
test
adc
popa
enter
jge
xor
(bad)
imul
pop
adc
jmp
jb
and
aad
mov
das
frstor
dec
sbb
and
fst
jmp
imul
and
pusha
movs
sbb
test
mov
dec
cdq
ror
and
sbb
adc
(bad)
sbb
arpl
fs
cmps
cld
jp
dec
sahf
sbb
inc
rcr
mov
push
and
sub
cwde
loopne
push
push
les
push
(bad)
mov
dec
cmp
lock
lock
xchg
pushf
sbb
add
add
(bad)
test
push
xor
pop
adc
(bad)
clc
jmp
push
dec
cmp
jns
movs
in
fist
in
mov
inc
stc
lahf
jmp
pop
gs
push
sbb
mov
dec
(bad)
jne
and
(bad)
xchg
inc
dec
mov
jb
fild
mov
dec
sbb
and
dec
push
rol
push
add
and
inc
sbb
adc
jecxz
mov
cmc
xchg
lods
add
das
jge
sbb
xchg
fcmovbe
leave
fsubr
iret
cmp
sub
fidiv
mov
shl
or
push
imul
jp
jle
das
mov
mov
dec
aad
loope
or
mov
jle
repnz
jnp
out
or
mov
and
jecxz
(bad)
hlt
push
xchg
frstor
sahf
sub
fisttp
adc
int
push
pop
xchg
inc
mov
call
retf
in
out
mov
inc
fsub
fnstenv
xlat
xchg
xor
cld
daa
mov
int
(bad)
std
adc
push
add
dec
pop
cmp
sar
pop
push
clc
test
lods
fs
stos
movs
aaa
adc
mov
dec
jg
inc
dec
pop
add
jg
pop
sbb
dec
or
inc
cmp
xor
xor
adc
test
dec
dec
jge
dec
pop
mov
arpl
sub
cmp
outs
cs
inc
lea
dec
push
sub
enter
bound
pop
or
sbb
jo
test
sbb
jg
sub
cdq
enter
outs
pushf
sub
(bad)
inc
or
inc
pop
fmul
or
mov
mov
popa
push
push
push
xchg
push
ins
hlt
add
cli
and
inc
or
test
les
xor
aad
enter
mov
sub
iret
adc
vmwrite
adc
xor
add
imul
out
jmp
mov
jecxz
push
inc
out
call
in
jge
in
ss
mov
inc
pusha
adc
(bad)
fnstenv
inc
jb
clc
cld
pop
test
lahf
push
adc
add
fiadd
mov
enter
int
sbb
mov
sbb
pop
mov
mov
add
jmp
and
or
xchg
inc
(bad)
sbb
(bad)
popf
mov
xor
inc
pop
loop
mov
es
sub
sahf
iret
mov
push
xchg
lahf
ja
xchg
dec
push
ja
add
out
(bad)
or
mov
and
jo
pushf
sub
neg
jae
jle
out
fwait
xor
mov
dec
das
pop
pusha
pop
ins
pop
and
xchg
je
fdiv
mov
retf
inc
adc
into
jecxz
test
fdiv
mov
dec
mov
push
div
leave
push
and
cmp
xlat
push
(bad)
xor
mov
fs
xchg
loopne
mov
int3
jmp
call
mov
test
inc
mov
bound
xor
lods
inc
pop
imul
pop
cmp
jo
test
pop
pusha
ds
(bad)
pushf
jns
nop
adc
lods
or
cmps
jns
les
ins
jle
dec
lea
test
fdiv
jb
call
int
mov
rcr
call
test
in
mov
imul
daa
lahf
jle
sar
and
enter
ja
xchg
pop
in
(bad)
cld
xchg
push
mov
cli
ds
pop
inc
xor
aam
xor
pop
pop
dec
fld
sahf
(bad)
xchg
call
push
fstp
(bad)
outs
cmp
icebp
mov
push
mov
in
in
into
pop
xor
mov
or
xchg
fwait
in
movs
mov
(bad)
les
shl
sub
push
pop
lahf
ret
pop
add
xchg
sahf
lock
into
push
xchg
dec
and
or
inc
stc
in
loop
mov
jo
xchg
pushf
lods
push
cdq
xor
imul
arpl
sub
je
mov
ds
aaa
mov
mov
jmp
pushf
nop
and
arpl
aaa
push
adc
pop
jg
cmp
fnsave
inc
cmp
xchg
mov
cmc
adc
mov
inc
lds
int
iret
cmp
mov
popf
adc
out
push
into
stos
and
call
bnd
fstp
in
mov
movs
push
or
lds
add
pop
push
repz
or
ss
xchg
ins
test
test
shr
inc
rol
std
xor
sbb
jnp
call
xor
mov
sbb
rcr
lea
rcl
fs
pop
adc
scas
and
jp
mov
sub
adc
and
jecxz
sti
add
jle
daa
aaa
mov
adc
jl
mov
retf
jae
nop
inc
push
push
push
mov
or
adc
shr
shr
mov
xchg
leave
iret
(bad)
iret
mov
adc
mov
adc
das
out
movs
outs
mov
gs
inc
mov
jl
xor
cmp
inc
inc
test
xchg
fsubr
rol
ins
dec
in
cmps
mov
lods
outs
dec
rcl
std
lock
repnz
xor
sub
imul
in
(bad)
out
test
mov
pop
or
inc
out
in
call
pop
inc
(bad)
shl
adc
fwait
stc
jg
xor
or
mov
push
not
mov
cli
xor
sub
out
call
sbb
add
(bad)
jmp
out
mov
loop
inc
push
out
xchg
xchg
add
int3
mov
adc
xchg
stos
imul
je
sahf
mov
pusha
push
nop
push
adc
mov
popa
test
lahf
adc
or
mov
pop
add
mov
mov
cmps
push
test
pop
add
fisubr
std
mov
jae
imul
jl
cmp
push
xor
hlt
xor
popf
adc
xlat
cmp
or
cli
loop
jecxz
pop
fild
or
fs
out
fdiv
loop
popa
dec
repnz
jbe
fld
mov
cmp
repnz
test
pop
add
(bad)
cmc
jmp
stos
sbb
jae
adc
mov
fcomp
cli
sub
fs
mov
mov
rol
and
or
mov
fwait
cmp
pop
inc
les
xchg
bound
aam
mov
jnp
ins
mov
or
mov
fisttp
ins
ss
mov
loopne
cmp
mov
mov
push
cmp
in
and
and
std
nop
(bad)
and
mov
pop
pop
fs
or
out
or
retf
xchg
sahf
outs
and
mov
stos
call
ins
xor
mov
test
push
mov
or
add
sti
js
mov
push
inc
fucomp
ja
add
xchg
fcmovnbe
punpcklbw
push
leave
inc
sub
and
mov
pop
pusha
movs
or
hlt
xchg
fbstp
lahf
popa
jge
daa
inc
lea
pop
repz
pop
xor
cmp
mov
jno
jecxz
stc
and
push
inc
lods
mov
inc
jae
sti
(bad)
out
pop
pop
jmp
push
int
mov
sub
cmp
sub
push
pop
dec
scas
ds
jecxz
popa
or
sahf
fcomp
xchg
inc
mov
call
lea
sub
pop
test
sti
aas
mov
std
pop
mov
jne
or
fsub
mov
cmc
xchg
ja
xchg
add
jae
jo
dec
cdq
pusha
sub
sub
inc
inc
sub
ret
mov
addr16
mov
loop
sbb
sub
sub
sbb
in
mov
cld
mov
enter
pop
jmp
add
sbb
adc
div
push
add
jmp
fist
imul
jo
sbb
leave
(bad)
and
dec
sbb
mov
fmul
inc
into
jge
retf
sbb
dec
mov
leave
das
xor
dec
add
or
nop
cmp
iret
out
mov
mov
sub
es
jp
sbb
mov
lss
bound
sbb
push
outs
sbb
jbe
push
mov
jg
sub
into
sbb
cmp
mov
pop
mov
int
sbb
cdq
and
sub
jge
cmc
enter
repnz
(bad)
(bad)
pop
sti
jb
sar
scas
out
or
test
xor
out
imul
(bad)
stos
daa
rcl
fs
lahf
out
jmp
mov
push
mov
outs
movs
push
loope
rcr
sbb
aad
add
mov
sti
shl
and
xor
and
cmc
sub
mov
or
xor
repnz
shl
ror
lods
repnz
mov
or
bnd
lock
sahf
int
adc
cli
inc
stos
sbb
out
inc
fbld
lahf
out
retf
mov
shl
in
inc
aad
xchg
test
or
mov
movs
les
cmp
pop
sub
jb
ss
leave
addr16
jl
pop
shr
stc
cmps
int3
mov
(bad)
repz
pop
add
test
imul
addr16
mov
dec
sub
jecxz
int
jl
xor
std
in
or
sub
mov
leave
mov
cmps
or
cmp
cld
scas
out
stos
sub
push
add
dec
add
daa
(bad)
hlt
inc
enter
sbb
pop
dec
dec
cmp
pop
mov
imul
addr16
in
dec
and
mov
cmps
shr
push
xor
(bad)
inc
add
pusha
(bad)
(bad)
push
push
(bad)
jmp
ret
imul
dec
mov
sbb
enter
sub
sub
adc
jbe
mov
mov
and
jl
ret
xor
fisttp
pop
test
stos
cmp
dec
sub
and
popa
mov
add
sub
mov
jg
pusha
or
and
xchg
gs
in
clc
dec
push
sub
shr
jb
jne
outs
aaa
mov
call
rcl
push
jl
push
mov
push
xchg
push
leave
les
sbb
test
retf
xor
pushf
pop
lea
bound
jmp
and
sbb
cmc
lds
in
nop
ss
mov
inc
retf
cmp
repz
in
cmp
push
pushf
nop
push
push
dec
(bad)
cmps
mov
jo
mov
or
cmp
and
jnp
and
adc
out
int
ins
or
sbb
cdq
mov
add
sbb
push
sub
loopne
in
lds
xor
push
push
cmps
sbb
cmp
mov
xchg
rcl
and
(bad)
cmp
xchg
dec
jno
out
out
xor
and
in
xchg
mov
add
xor
out
push
repnz
push
fs
inc
xchg
(bad)
jbe
es
loop
ret
ins
in
arpl
sbb
cld
fadd
xor
loopne
lea
sbb
pop
mov
adc
aam
cs
mov
imul
cwde
pop
popf
test
and
repz
xchg
mov
jne
pop
(bad)
(bad)
cmp
jmp
sub
out
mov
push
mov
xor
call
ror
mov
imul
test
add
pop
adc
sbb
pop
push
cmp
adc
sbb
adc
push
adc
push
xor
cmc
mov
xchg
inc
push
cwde
or
cmp
dec
lods
sbb
dec
xor
sub
push
aaa
cli
add
ror
pop
xor
push
iret
push
cwde
mov
int3
adc
daa
and
inc
push
into
fbstp
test
mov
xchg
adc
cli
pushf
push
jae
push
in
lds
jmp
sar
out
movs
xor
rcr
xchg
sti
xor
rcl
or
popf
call
jno
in
push
jmp
and
fstp
push
or
pop
mov
dec
mov
jmp
adc
mov
xor
add
mov
fdivr
sbb
mov
jmp
fidivr
jbe
pop
jb
scas
and
jno
mov
jmp
inc
sahf
out
mov
movs
cwde
scas
pop
(bad)
mov
xor
ret
jne
cld
cmp
sbb
pop
add
fisubr
into
mov
jno
sub
aas
or
aas
ins
(bad)
mov
arpl
in
jecxz
imul
dec
(bad)
cdq
lds
xchg
or
xchg
sub
add
rep
ins
adc
sub
jecxz
inc
idiv
push
dec
call
adc
mov
mov
mov
mov
std
arpl
pop
inc
js
xchg
out
out
(bad)
(bad)
jp
cdq
push
outs
push
repnz
in
adc
add
xor
lahf
leave
and
cmps
sbb
mov
sub
xor
pop
xchg
(bad)
inc
(bad)
jg
inc
mov
jp
test
dec
aaa
adc
cli
sbb
mov
jl
jle
lahf
movs
push
dec
cmp
sub
xor
shl
(bad)
and
ret
sub
xor
sbb
sub
fidiv
outs
cli
cmp
jne
dec
inc
adc
in
mov
push
sub
jge
test
add
pushf
loope
fdiv
xchg
icebp
shr
sub
fimul
scas
and
cld
cdq
aam
xlat
les
int
ret
mov
or
je
out
push
dec
sbb
mov
scas
push
xchg
les
pop
fisttp
(bad)
out
mov
jmp
das
cmp
cmp
dec
int
nop
ja
pop
dec
out
cdq
or
lds
loop
or
out
(bad)
mov
(bad)
(bad)
fndisi(8087
test
out
lahf
outs
dec
test
mov
pop
and
clc
inc
cmps
daa
scas
and
imul
add
jo
sbb
mov
pop
aam
add
ret
xor
cs
cmp
sub
stc
mov
xchg
xchg
pop
sbb
and
xchg
dec
mov
adc
movs
clc
fsubr
rol
out
in
pop
add
xor
jno
and
scas
xchg
jge
(bad)
cli
push
out
pop
scas
sbb
or
leave
bnd
adc
outs
push
ds
jb
popf
add
pop
mov
out
jae
xor
adc
mov
xor
outs
and
cmp
addr16
xchg
cld
jp
movs
imul
mov
mov
jae
or
and
dec
fbstp
push
lds
in
aam
dec
cmp
mov
xchg
cwde
fnstsw
jg
stc
mov
test
mov
xor
xor
push
cmp
in
pop
mov
jb
cmp
imul
(bad)
ficomp
pushf
clc
mov
jmp
cmp
mov
sti
jb
fwait
stos
jmp
jae
adc
dec
popf
push
xor
sub
or
cmp
push
sbb
ins
mov
cmp
xchg
lods
dec
xor
mov
cmp
add
or
pop
inc
and
and
add
outs
stos
sahf
imul
pop
je
sahf
pop
sub
nop
loope
push
cmps
mov
in
inc
xor
mov
push
daa
xchg
pop
xchg
sbb
cmp
adc
pop
jg
jle
fstp
fnstenv
out
mov
mov
movs
sbb
dec
or
in
ds
add
pop
mov
mov
jno
mov
lea
xchg
int
fimul
fmul
ins
and
repz
std
inc
mov
sbb
inc
ror
xor
or
and
repnz
movs
loopne
neg
ins
cwde
in
push
add
add
cmp
jae
mov
push
cmps
xchg
mov
push
(bad)
pcmpgtb
int3
pop
sti
test
adc
and
cmp
aad
xchg
neg
xchg
out
mov
cmp
ss
push
inc
(bad)
or
movs
adc
pop
fwait
mov
adc
push
and
(bad)
adc
iret
mov
sbb
mov
push
aas
mul
mov
shr
cmp
jp
push
adc
sti
loopne
pop
repnz
in
dec
xchg
xchg
mov
in
inc
repz
fcmovnb
test
loope
jmp
movs
das
bound
xor
sub
push
cmp
and
inc
sti
je
aas
loopne
hlt
out
cld
pop
push
test
xchg
outs
mov
and
mov
dec
rol
jl
xchg
add
fwait
mov
dec
sbb
adc
pop
pop
loope
lds
ins
imul
xor
sar
frstpm(287
in
sbb
dec
push
retf
mov
and
aam
xor
lods
xor
jg
movs
mov
stos
mov
int
cmp
push
inc
mov
pop
out
xchg
inc
jg
mov
fsubr
dec
mov
bound
cli
je
xchg
sbb
shr
(bad)
out
fwait
sbb
mov
xchg
push
and
mov
loopne
cmp
cmp
or
push
sbb
mul
add
daa
and
or
push
shl
push
jle
xor
pop
mov
push
out
into
out
out
adc
xor
ss
xchg
jns
repz
xchg
add
xor
push
mov
push
push
xchg
mov
frstor
test
fdiv
push
push
in
cmp
sub
ror
loopne
cmp
test
push
les
push
stos
add
stc
mov
dec
pusha
rol
adc
lods
in
and
int
cld
mov
mov
out
and
(bad)
shl
imul
pop
loope
retf
add
cmps
aas
mov
jg
pop
fisub
cld
bound
adc
jmp
sbb
lahf
cmp
cwde
ret
retf
cwde
retf
xor
push
(bad)
jns
xchg
lock
bound
fst
push
scas
out
dec
(bad)
loopne
loop
inc
sbb
mov
mov
lea
cwde
stc
sub
lods
popa
mov
stos
shl
sar
pop
inc
imul
movs
out
hlt
jo
fbld
icebp
in
and
cmp
clc
imul
neg
xchg
sbb
jl
jo
add
jecxz
dec
cmp
pushf
ficomp
fadd
mov
test
mov
movs
ins
jmp
sbb
jg
in
sub
pushf
cmp
jne
addr16
aad
push
lods
test
xlat
out
jge
int3
mov
loopne
int3
gs
pop
jl
stc
adc
arpl
inc
sbb
cwde
hlt
dec
movs
pop
nop
xchg
sub
dec
cmps
aad
xchg
rcl
inc
sub
pop
xor
fisub
dec
inc
push
mov
ins
or
mov
outs
out
xor
sbb
pop
add
call
mov
movs
sub
loope
xor
call
mov
sub
jp
repz
inc
enter
popa
mov
sub
sbb
dec
sbb
mov
or
pop
mov
(bad)
jmp
aaa
add
sbb
mov
hlt
cdq
in
xchg
fadd
sbb
movs
fisttp
and
push
aam
iret
int
xchg
dec
mov
les
sahf
push
push
in
nop
daa
iret
shl
stos
add
sar
xchg
inc
mov
ss
add
jns
mov
fiadd
pusha
test
xor
sbb
(bad)
(bad)
mov
rcl
leave
jmp
dec
mov
test
jb
cmp
mov
int
ins
mov
call
xor
std
mov
dec
mov
push
or
cmp
cld
jl
je
adc
(bad)
js
sbb
adc
dec
stos
cs
test
(bad)
push
and
fwait
icebp
(bad)
push
pop
sub
movs
les
xor
and
outs
outs
jmp
and
sbb
mov
lahf
pop
mov
pop
jne
xlat
xor
das
(bad)
out
xchg
and
or
push
ror
or
mov
pop
dec
daa
js
fisub
test
and
int
shl
dec
jmp
mov
aas
mov
(bad)
test
sub
inc
imul
mov
bound
pop
pushf
xchg
ja
and
mov
mov
jmp
dec
test
push
push
sar
scas
dec
dec
sbb
rol
stos
push
test
repz
pop
dec
mov
push
icebp
or
mov
movs
sbb
mov
call
cwde
hlt
jmp
gs
add
pop
pop
adc
icebp
hlt
stos
test
mov
mov
jmp
movs
(bad)
pop
pop
(bad)
sub
and
ins
jo
xchg
jg
(bad)
sbb
outs
jae
aam
mov
pop
cmp
retf
fist
and
movs
pop
pop
sar
xchg
mov
jno
fdivr
mov
pop
jne
jno
add
dec
imul
mov
add
cmp
imul
mov
adc
add
jecxz
sub
jnp
xor
in
ss
fild
cmp
mov
shl
neg
pop
adc
imul
inc
test
dec
iret
inc
pop
jge
xor
sar
mov
ins
stos
out
and
adc
rol
pop
xor
lods
sbb
pop
daa
jecxz
mov
sbb
and
xor
xchg
xor
mov
addr16
jbe
scas
or
push
lds
jns
mov
outs
cmps
mov
sti
pop
sub
jg
xchg
ins
gs
mov
and
inc
cmp
ss
cmc
dec
xor
xor
mov
inc
inc
xchg
cmp
inc
cli
call
xchg
or
lea
sbb
xchg
int3
ja
(bad)
loopne
outs
mov
js
movs
lea
mov
cli
jl
hlt
inc
cmc
lds
pop
into
sbb
test
data16
fcmovbe
arpl
mov
cmp
push
mov
ror
test
push
out
xchg
sbb
pop
aad
ins
pusha
mov
test
adc
(bad)
dec
(bad)
pop
adc
gs
add
scas
int
test
fcom
fiadd
(bad)
cwde
mov
cmp
or
add
es
addr16
clc
not
mov
inc
std
pop
pushf
aam
call
inc
sbb
jns
add
js
sti
(bad)
mov
ja
dec
int
adc
inc
mov
scas
sbb
out
dec
and
movs
imul
push
xchg
mov
adc
mov
pop
cmps
les
mov
ja
sub
xor
(bad)
leave
into
or
jb
inc
push
dec
in
leave
mov
out
mov
and
sbb
pop
cmp
xor
arpl
push
dec
pop
add
cmp
pop
xchg
jns
xchg
cmps
hlt
mov
mov
adc
jne
xor
mov
cwde
jo
and
into
add
aaa
(bad)
push
jns
dec
mov
push
pusha
and
mov
fdiv
movs
out
mov
inc
(bad)
jg
js
lds
adc
cwde
fild
stos
cmps
xchg
ret
retf
mov
push
cs
movntq
repz
hlt
ins
sub
xlat
pusha
sbb
adc
inc
pusha
sar
outs
ja
sar
pop
pop
and
push
test
imul
sub
adc
pop
jo
sub
enter
(bad)
mov
sahf
div
xlat
sub
push
xchg
xchg
cmp
and
stos
dec
loope
(bad)
stos
dec
mov
mov
push
fistp
int
xchg
cmp
in
mov
inc
(bad)
(bad)
pop
inc
(bad)
jne
(bad)
outs
(bad)
pop
(bad)
sub
pusha
xor
sahf
jle
push
sub
jecxz
outs
pusha
cmc
out
jnp
repnz
inc
jmp
sub
push
ret
mov
mov
movs
repz
and
ds
pop
push
jb
xor
push
enter
pop
je
mov
jo
or
(bad)
sbb
ret
mov
stc
lock
popf
pop
movs
gs
ja
and
into
adc
push
mov
jl
in
cmp
ror
(bad)
cmp
xlat
push
cmp
ins
xchg
mov
cmp
(bad)
rol
add
cmp
popa
mov
es
cmp
iret
cmp
ins
sbb
ret
ja
mov
inc
xor
xchg
aas
not
dec
mov
js
scas
or
cli
in
xchg
jmp
push
test
enter
les
and
sub
mov
mov
inc
shr
inc
dec
push
push
mov
jge
into
aaa
push
push
out
cmps
adc
retf
mov
test
fs
cmps
fs
mov
push
ds
cmp
int
pop
into
stos
and
and
retf
outs
cmp
lea
aas
int3
inc
cmp
mov
lds
adc
mov
outs
mov
fmul
jmp
or
(bad)
loop
mov
retf
push
sub
and
repnz
pushf
icebp
dec
sahf
shr
lahf
mov
jns
mov
pop
adc
push
mov
in
fmul
mov
sbb
push
jno
mov
pop
sub
fimul
inc
(bad)
js
aaa
push
in
and
mov
jg
aad
in
and
jmp
inc
sbb
fdiv
test
sub
xor
fnstsw
das
mov
and
inc
rcr
inc
clc
mov
(bad)
adc
sbb
sbb
(bad)
xor
push
fwait
in
aad
xchg
jo
mov
call
sbb
test
retf
mov
mov
mov
pusha
inc
jne
xchg
push
push
ja
movs
test
sub
jo
bound
ins
jbe
sub
aas
enter
inc
jle
mov
pop
enter
pop
xchg
ret
mul
sbb
(bad)
loopne
cwde
cwde
push
popa
ja
xchg
mov
push
lea
into
pop
and
xchg
xchg
jg
sub
pop
ret
jmp
dec
loope
call
add
test
mov
push
jp
and
not
mov
jg
ret
repnz
das
(bad)
test
push
mov
add
test
mov
add
adc
cmp
lods
mov
and
int3
sbb
mov
push
aam
xchg
fadd
cmp
dec
sbb
out
ja
dec
xor
(bad)
sbb
out
mov
stos
fadd
mov
shr
out
or
stc
rol
mov
fist
fsubr
loope
sbb
inc
mov
call
fs
pusha
lahf
pop
fisttp
xchg
inc
adc
test
mov
cmp
xor
sub
cmps
adc
jne
inc
jge
mov
test
call
fadd
test
inc
xor
mov
out
cli
xchg
aad
fimul
or
out
pop
mov
inc
push
jmp
mov
sbb
stos
fldenv
adc
mov
jecxz
cdq
fild
or
in
push
stos
mov
idiv
test
xlat
int3
fnstcw
sahf
iret
add
in
leave
xor
xchg
repnz
test
mov
retf
cmp
pop
in
cwde
push
(bad)
aad
add
fistp
cli
and
out
xchg
xchg
dec
into
dec
in
cmp
cdq
retf
push
jl
out
rcr
loopne
xor
enter
inc
mov
mov
push
(bad)
mov
jbe
pop
int3
(bad)
fisubr
mov
sbb
xlat
es
inc
lea
sbb
inc
adc
std
imul
dec
loope
mov
lods
and
inc
daa
sub
jae
js
(bad)
or
clc
fnsave
mov
shr
mov
fdiv
or
adc
fst
into
sbb
jbe
add
jle
mov
loop
and
cmp
aam
pop
pop
push
dec
lea
aas
xor
repnz
xor
aad
out
push
fsubr
repnz
pop
xchg
jnp
jae
(bad)
stc
sub
inc
cwde
jmp
mov
mov
mov
adc
fsubrp
js
mov
mov
dec
arpl
mov
stos
and
daa
xor
lods
and
mov
movs
cdq
mov
ins
mov
xchg
mov
iret
pop
mov
int3
test
mov
cmp
pop
mov
jno
push
jns
call
int3
push
or
cmp
cli
xchg
cli
cmp
add
out
mov
call
mov
ins
rcr
ror
xlat
pop
pusha
inc
push
sub
mov
int
scas
push
lods
push
mov
popf
jg
cmp
adc
mov
int3
mov
sti
out
lock
or
cmp
inc
and
mov
idiv
ret
cmp
xor
xchg
ins
adc
into
mov
inc
and
push
and
inc
push
stc
leave
ins
mov
jecxz
adc
mov
mov
xor
mov
loope
mov
adc
xlat
sti
(bad)
clc
mov
loop
xor
xor
rcl
push
shl
lahf
sub
cwde
sti
aad
dec
mov
sub
shl
movs
jb
add
pop
ds
ficomp
add
dec
sub
ja
or
pop
mov
lods
ficomp
mov
call
jle
jno
inc
call
imul
mov
(bad)
stc
fwait
retf
out
mov
icebp
mov
in
mov
shr
pop
mov
ret
inc
shl
adc
jmp
ds
pop
lds
test
pushf
es
rcr
dec
xchg
and
inc
cmps
push
lock
(bad)
movs
mov
or
mov
mov
adc
fidivr
jne
mov
add
push
in
lea
sbb
adc
pop
adc
or
cmps
push
sbb
pushf
fs
push
xor
nop
mov
movs
(bad)
adc
and
rcr
shl
mov
ficom
sahf
sub
push
cmp
ja
fdiv
pop
sbb
lods
jnp
std
jb
pop
xchg
jmp
pop
pop
cmps
int
and
iret
xor
add
psllq
js
inc
mov
ret
add
repnz
mov
cmp
imul
loopne
dec
stc
aas
jp
call
adc
pop
mov
xor
nop
(bad)
nop
mov
aaa
adc
jne
clc
out
add
push
pop
mov
xchg
sbb
and
in
rol
mov
dec
or
fs
pushf
add
pop
(bad)
fdivr
push
sbb
mov
mov
arpl
cmps
aaa
test
adc
cmp
(bad)
cmp
sbb
int
inc
je
repz
add
jg
retf
dec
ret
xchg
out
repz
or
push
in
sbb
dec
mov
mov
shr
loopne
add
leave
or
les
and
xor
jp
pop
push
mov
iret
mov
(bad)
push
adc
ins
(bad)
adc
dec
stos
cld
and
xlat
mov
push
rcl
nop
(bad)
addr16
xchg
adc
cmp
ret
mov
pop
or
cmp
call
fisttp
icebp
ror
lea
and
call
jo
popf
in
icebp
xor
inc
test
in
inc
xor
mov
pop
jge
xor
dec
or
push
mov
stos
push
adc
fwait
mov
call
inc
in
ja
cld
inc
pop
xor
stc
ins
xchg
pop
je
gs
mov
xor
dec
push
or
jl
and
bound
push
sub
outs
dec
mov
mov
lods
dec
loop
fimul
jp
add
add
push
test
xchg
sbb
xchg
xlat
cs
lods
mov
rcr
jge
mov
and
and
pop
mov
js
ror
aaa
and
jo
xor
inc
idiv
fadd
or
xchg
aas
push
ins
sbb
in
(bad)
xchg
sahf
call
loop
mov
call
fcom
xchg
fnsave
mov
pop
xchg
rol
add
dec
dec
clc
and
xchg
jnp
xchg
sub
inc
add
cvttps2pi
test
mov
xchg
fdivr
rol
psrlq
xlat
dec
aaa
mov
js
ror
(bad)
(bad)
in
mov
lods
shl
popa
mov
or
int
lea
xor
inc
dec
add
inc
pop
out
jmp
sahf
(bad)
mov
daa
outs
pop
(bad)
rcl
jge
add
jge
arpl
xchg
cwde
pop
mov
jae
(bad)
test
add
cmp
pop
mov
aam
xor
add
cli
not
mov
outs
aad
mov
mov
inc
pop
push
push
cs
sbb
mov
mov
pop
ret
sbb
dec
js
pop
push
imul
pop
xchg
(bad)
mov
inc
push
and
mov
xchg
sub
aad
scas
xchg
xor
sbb
adc
xor
inc
pop
jnp
push
mov
lods
mov
cmp
xor
add
call
mov
sub
repz
xchg
pusha
sbb
jl
mov
dec
sub
mov
retf
jmp
(bad)
ins
sub
push
jne
pop
inc
mov
aaa
jecxz
aad
stos
(bad)
mov
mov
push
popa
(bad)
out
jnp
arpl
pushf
cs
arpl
push
lahf
movs
push
mov
pusha
mov
out
out
jne
cmp
mov
xor
in
pop
jne
imul
jg
arpl
test
jg
mov
jae
sbb
push
jns
cmp
out
xor
test
push
xchg
sub
mov
xchg
push
cmp
fiadd
mov
test
pop
ret
(bad)
cmp
and
jns
(bad)
repz
ins
mov
nop
cs
mov
adc
pop
arpl
clc
shl
add
push
jle
xchg
nop
add
movs
and
pushf
stc
mov
ja
outs
push
adc
pop
hlt
(bad)
out
retf
mov
dec
out
dec
jmp
repnz
sbb
mov
dec
add
push
mov
out
mov
popa
ret
not
push
add
movs
adc
jns
jecxz
mov
push
and
imul
bnd
pop
add
and
xchg
(bad)
pushf
and
int
sbb
sti
inc
in
loop
sar
dec
repz
mov
pop
fdiv
jl
or
shl
fsub
ja
jmp
in
daa
fild
jb
mov
xchg
or
outs
fiadd
add
call
dec
jg
scas
and
pop
(bad)
shl
or
mov
and
in
std
shr
or
mov
jnp
and
call
mov
push
repnz
ja
outs
xor
mov
and
nop
data16
aaa
mov
pop
xor
out
xor
jnp
shl
push
push
arpl
xor
rep
loop
mov
int
mul
nop
sub
mov
rcr
inc
sub
mov
mov
pop
mov
dec
pushf
jns
xor
dec
(bad)
jge
xlat
(bad)
das
aaa
aas
stc
or
and
aam
lea
cmc
shl
hlt
xchg
mov
mov
xchg
add
loopne
sub
hlt
push
add
stc
mov
pop
mov
cmps
xor
sbb
aam
mov
cmps
xor
push
cld
mov
mov
mov
lods
pop
(bad)
imul
push
bound
jbe
mov
jae
xor
rcr
xchg
lock
mov
cs
pop
pop
out
icebp
cmp
add
push
push
sahf
jl
and
out
fisub
xor
lods
mov
xchg
jno
and
jmp
adc
aaa
jnp
jnp
adc
adc
inc
cdq
sti
push
(bad)
clc
mov
pop
imul
push
lea
adc
clc
mov
mov
inc
call
addr16
or
ins
xchg
js
mov
push
in
inc
pop
or
cmp
shr
out
aad
xor
aaa
inc
mov
(bad)
adc
sbb
lahf
xor
(bad)
out
(bad)
in
repz
aad
sar
int
fs
into
jecxz
xchg
adc
mov
int
pop
dec
mov
mov
mov
imul
mov
loopne
enter
mov
jb
setg
pop
push
ret
je
adc
dec
dec
and
xor
std
xchg
stc
mov
cmp
fcomip
leave
outs
loopne
inc
ins
push
in
mov
cmp
and
mov
and
sbb
add
mov
pop
fild
push
sahf
add
frstor
scas
fistp
lds
cmp
jl
push
mov
xor
fbld
and
out
dec
add
out
and
push
xchg
and
add
ins
out
sub
xchg
lods
aad
jp
test
data16
(bad)
mov
mov
repz
inc
nop
mov
mov
in
stos
call
jnp
dec
inc
or
sbb
push
sbb
jge
lea
cmp
fidiv
mov
xlat
clc
pushf
cwde
push
test
mov
mov
sub
mov
and
dec
sub
hlt
das
mov
out
cwde
push
movs
sbb
inc
in
inc
xlat
xor
shr
pand
nop
fild
jp
inc
ins
aaa
xchg
dec
xchg
pop
jb
cli
dec
and
aas
cmp
push
sahf
sbb
push
mov
stos
pop
add
repz
jmp
je
(bad)
fidivr
imul
or
scas
add
clc
pop
fs
mov
ret
sbb
jno
dec
sub
retf
pop
jl
jle
mov
fild
imul
mov
movs
movs
sub
jns
pop
xchg
out
mov
sbb
(bad)
push
ror
adc
ja
add
call
out
mov
jle
fnstsw
pop
dec
sub
in
adc
cmp
sub
xchg
les
adc
cmp
sub
jmp
jnp
hlt
call
and
mov
cmp
mov
sub
pop
push
out
inc
lods
add
pop
jbe
dec
shr
add
cmp
or
jecxz
mov
push
push
push
je
jne
and
mov
xchg
add
hlt
pop
stos
jg
adc
pusha
je
int
or
inc
ins
pushf
jne
add
pop
sbb
inc
popf
jmp
cmps
cs
mov
sbb
enter
gs
rol
jbe
adc
movs
hlt
je
mov
and
sub
in
test
xchg
js
pushf
out
aam
sbb
test
out
or
push
xchg
ror
push
ret
jo
mov
rcr
dec
ficomp
or
xchg
mov
and
pop
arpl
je
mov
(bad)
movs
call
enter
mov
shl
shr
mov
js
pop
xchg
or
addr16
add
xchg
das
inc
lock
ins
pop
ja
ret
cmp
pushf
call
cmp
das
adc
call
retf
in
pushf
add
cmp
jp
aas
nop
cli
push
sbb
mov
mov
xor
adc
sar
cmp
dec
hlt
inc
xchg
xchg
(bad)
and
and
push
in
lds
jo
adc
movs
fsubr
ja
lock
jp
jmp
push
(bad)
sbb
sbb
repz
cmovo
in
cs
fidiv
xchg
mov
int3
shr
mov
sub
mov
int
and
pop
mov
mov
jmp
outs
and
sahf
mov
loop
mov
push
or
mov
call
add
add
sub
dec
pop
inc
add
test
(bad)
mov
leave
add
out
dec
adc
inc
aaa
lock
jne
sub
and
push
pop
pop
mov
cmc
dec
dec
xlat
imul
dec
test
retf
out
lahf
jge
mov
daa
jo
xchg
movs
(bad)
add
xchg
or
lods
outs
mov
jl
lods
push
mov
cmps
pop
push
enter
sub
dec
out
sub
pop
push
ja
cmp
call
dec
push
in
aaa
mov
push
pop
add
adc
inc
jnp
xchg
popa
pop
push
ds
mov
xor
dec
push
xchg
(bad)
das
cli
retf
pop
movs
mov
(bad)
dec
cmp
mov
jle
and
adc
push
add
xlat
retf
mov
inc
push
adc
cld
enter
pusha
lods
mov
push
sub
xchg
fistp
aaa
inc
(bad)
or
retf
ret
jns
pop
shr
mov
or
sub
fs
jg
adc
or
xchg
loopne
add
xor
mov
retf
jo
mov
test
push
mov
cmp
push
push
and
repnz
xor
or
pop
dec
stos
test
imul
call
mov
lea
out
jg
xchg
dec
xchg
inc
xor
push
sti
add
retf
xchg
sahf
mov
or
std
(bad)
cs
leave
mov
inc
mov
and
mov
arpl
shl
push
cmps
lea
jne
stc
js
je
add
jae
mov
pop
mov
fnstenv
lea
mov
xchg
pop
mov
sbb
jo
out
lods
fsubr
sbb
mov
outs
loope
ins
sbb
rol
test
sub
outs
int3
add
inc
push
cwde
and
push
push
xor
fisttp
mov
sub
out
cs
xor
or
mov
cmp
xchg
mov
add
xchg
mov
icebp
out
gs
adc
mov
mov
mov
lods
xlat
out
jno
sti
ret
mov
dec
cmps
cdq
inc
lock
push
cmp
or
mov
cmp
out
es
mov
inc
xor
push
sub
xchg
sbb
xlat
cmp
pop
jle
jo
icebp
out
leave
ds
xchg
stc
mov
and
sub
sub
or
xchg
and
iret
movs
inc
cld
out
mov
retf
mov
test
add
fadd
xor
sub
inc
inc
ror
mov
jnp
sbb
je
test
jle
mov
clc
push
aas
sahf
adc
les
fidivr
pop
out
call
clc
sti
cmp
add
pop
fwait
pop
ror
pushf
xchg
(bad)
je
xor
pop
std
push
pop
int3
cmp
test
sbb
icebp
pop
push
or
aad
lock
mov
cdq
loope
or
mov
aaa
xor
int
nop
mov
and
mov
or
shr
cmp
xor
adc
adc
cmp
rcl
cmp
push
sahf
sbb
test
cdq
dec
or
data16
jbe
mov
add
shl
mov
stc
inc
or
mov
cmps
pop
das
pop
sbb
inc
dec
rol
out
imul
xor
inc
retf
ror
mov
xchg
sub
les
sbb
int
pop
dec
movs
dec
add
ja
outs
ja
stos
popf
sub
call
inc
xor
cld
loop
jbe
mov
push
adc
inc
aas
adc
cld
jmp
sbb
(bad)
pop
hlt
ds
into
mov
popa
ret
xchg
shl
add
mov
retf
cmp
push
cmp
or
in
in
add
xor
sub
push
sahf
dec
mov
dec
scas
fnstenv
mov
jp
or
mov
(bad)
dec
dec
scas
je
in
and
jl
and
mov
sub
sub
(bad)
adc
movs
cmp
add
scas
jl
and
pop
out
sbb
fidivr
mov
adc
nop
cmp
scas
out
or
push
or
retf
cdq
ins
add
cdq
mov
mov
outs
pop
pop
rcr
in
sub
dec
test
pop
in
pop
mov
cwde
sbb
ins
xor
cmp
aaa
in
sar
push
sti
xchg
cmp
dec
div
mov
xchg
push
fwait
sbb
push
cdq
pop
sar
xchg
add
(bad)
mov
xor
aaa
aad
inc
jmp
test
sbb
or
cmp
mov
lods
out
(bad)
mov
inc
rol
test
xchg
push
sbb
xor
jl
xchg
loopne
mov
or
ss
adc
stc
push
fwait
shl
mov
and
mov
movs
aas
and
push
repnz
jmp
pop
add
in
lods
jp
jbe
retf
out
add
xchg
xor
jb
add
cmp
shl
mov
loopne
adc
not
jp
fidivr
fdiv
pop
xchg
ja
sub
dec
add
inc
in
aam
xor
or
dec
mov
jle
(bad)
push
outs
popf
call
clc
out
fild
jecxz
pop
retf
(bad)
leave
inc
out
push
inc
pop
xchg
hlt
ins
mov
mov
push
das
les
push
pop
daa
mov
push
dec
addr16
test
int
bound
dec
pop
add
pop
cmp
push
jae
or
stc
(bad)
push
mov
xor
mov
sub
cwde
xchg
xchg
sbb
xor
push
sbb
hlt
and
mov
neg
pop
ret
loopne
or
sub
cmp
inc
ins
loop
pushf
aaa
add
xor
mov
lods
or
push
hlt
pop
cmp
stos
mov
ret
cmp
sbb
popa
movs
jp
ret
xchg
imul
push
ds
or
add
(bad)
dec
fnsave
push
push
pop
pop
mov
mov
idiv
pop
cmc
and
push
pop
ret
rol
ds
pop
push
ror
les
out
iret
pop
jne
xor
jne
mov
repnz
push
mov
arpl
test
popa
and
jmp
aas
repz
xchg
push
out
sbb
inc
pop
aam
push
stos
add
mov
cmps
pop
jge
cwde
fdiv
adc
mov
push
nop
shl
xor
pop
mov
mov
jns
sti
leave
xor
ret
fsubr
inc
mov
loope
std
adc
cmp
sub
mov
mov
scas
dec
and
cwde
mov
dec
popf
xchg
mov
sub
mul
mov
push
xchg
xchg
jbe
fmul
scas
stos
dec
mov
retf
mov
jmp
pop
push
in
shr
push
cmp
test
xchg
sub
cs
nop
gs
jmp
xchg
sbb
test
nop
fiadd
sbb
pop
test
inc
mov
xor
fwait
daa
adc
add
stc
outs
xor
xchg
ret
sbb
popa
aad
clc
scas
mov
ds
gs
(bad)
adc
sbb
jne
pop
mov
aas
adc
das
ds
lods
cmp
cld
cld
and
test
mov
jl
outs
outs
in
push
popf
nop
int3
add
int
(bad)
popa
jbe
pop
mov
xchg
fiadd
fcom
retf
ins
push
stos
js
mov
or
jmp
cmp
mov
xchg
inc
xchg
mov
or
loopne
inc
in
das
mov
mov
hlt
adc
xchg
iret
inc
(bad)
stc
sub
adc
lods
ins
in
jb
xchg
in
dec
enter
bound
stos
xor
outs
(bad)
mov
dec
sub
jae
(bad)
adc
out
test
jne
imul
jb
add
mov
popa
test
jmp
inc
imul
ffreep
add
sub
fisubr
jbe
imul
sbb
daa
or
cmp
sahf
out
sub
add
mov
call
sub
call
add
retf
mov
sub
es
dec
xor
call
dec
clc
inc
pop
lods
mov
xor
rsqrtps
pop
pop
sub
push
sbb
sar
mov
xchg
loopne
xchg
adc
fist
movaps
(bad)
ret
daa
nop
ror
and
inc
into
mov
and
sbb
retf
into
cmp
leave
xchg
repnz
je
les
or
mov
scas
jno
dec
sar
ss
pop
mov
mov
cli
cmps
and
out
sti
jg
ja
cmp
ins
(bad)
adc
xchg
xlat
jns
shl
dec
pop
sbb
neg
mov
inc
xchg
mov
xlat
sbb
xchg
test
jbe
add
mov
stos
sub
push
out
push
les
pop
xlat
xchg
sub
jae
mov
das
sub
jge
retf
leave
daa
outs
sbb
adc
inc
call
test
jmp
push
movs
stc
mov
scas
inc
inc
sub
test
xor
xchg
add
and
aas
out
pushf
and
xor
bound
(bad)
out
dec
mov
fsub
shl
cwde
sub
xor
mov
xchg
js
mov
sub
cs
dec
retf
jmp
aaa
mov
(bad)
xchg
and
adc
push
xchg
add
jmp
pop
sti
sti
cdq
pop
sbb
mov
sbb
scas
(bad)
xor
stos
popa
and
or
xor
shl
dec
cwde
mov
cs
(bad)
cmc
sub
repnz
ja
and
cld
and
xchg
sub
add
pop
aam
fnsave
add
mov
inc
or
in
mov
cmps
stos
jle
in
jmp
cmp
in
(bad)
and
push
movs
mov
ins
loop
inc
clc
mov
xor
jbe
mov
(bad)
mov
in
xchg
or
xchg
mov
stc
jo
ins
aad
mov
inc
movs
pop
mov
mov
sbb
into
test
mov
ins
ret
sub
ins
test
(bad)
std
sti
stos
dec
push
repnz
mov
adc
inc
xor
mov
pop
mov
add
xchg
or
daa
dec
push
fisttp
fild
push
mov
sub
mov
and
enter
jmp
clc
imul
mov
out
mov
xchg
jo
ins
push
push
sbb
pop
bound
jg
mov
adc
add
push
nop
or
xchg
pop
out
in
inc
cmps
cmc
mov
sub
mov
sar
jnp
pop
inc
cmc
movs
sbb
loop
mov
aas
cmps
mov
leave
ss
or
push
pop
retf
dec
dec
icebp
lds
adc
add
ficom
sbb
jae
(bad)
inc
repz
in
call
popa
or
mov
jnp
cdq
sbb
push
cs
movs
or
ret
fcomp
gs
mov
iret
mov
imul
push
pop
mov
je
enter
cdq
pop
sar
and
fcmovbe
pop
out
std
mov
retf
retf
rol
addr16
ds
fcomp
sbb
mov
push
sbb
push
add
dec
into
and
adc
xchg
jnp
pushf
je
jbe
push
sub
pop
sti
mov
call
outs
xchg
ss
dec
cmp
dec
repz
push
xor
inc
popf
(bad)
fadd
popa
inc
mov
push
mov
out
popa
icebp
dec
push
ja
outs
dec
out
(bad)
hlt
stc
movs
inc
mov
xchg
js
iret
test
call
loop
xor
xchg
mov
xor
popf
mov
add
push
xchg
iret
xor
call
sbb
lods
(bad)
cmp
scas
push
push
xchg
(bad)
aas
dec
mov
mov
cmp
pop
xchg
imul
imul
sbb
sar
sub
daa
pop
scas
repz
dec
jnp
aad
ds
mov
aaa
das
(bad)
mov
inc
add
xor
bound
sahf
mov
cdq
lahf
jb
mov
cwde
loopne
xor
cmp
aas
jecxz
xor
sub
cwde
xor
rol
mov
pop
add
or
cmp
out
jge
ss
(bad)
mov
or
fwait
sbb
inc
adc
mov
outs
loop
dec
or
push
jnp
movs
and
retf
cmc
shl
lods
sbb
push
dec
mov
test
sbb
addr16
sahf
hlt
and
adc
ins
mov
in
das
inc
mov
fst
jle
adc
out
jno
jmp
gs
or
or
pop
mov
cmp
mov
adc
jmp
sar
mov
sbb
stos
(bad)
outs
out
cld
xor
mov
sbb
sbb
jne
out
(bad)
fild
cmp
enter
test
fnsave
movs
adc
adc
dec
cmp
stos
mov
ficom
aam
pop
addr16
(bad)
push
xor
aam
hlt
(bad)
clc
test
push
sbb
daa
sub
add
push
scas
cvttps2pi
pop
mov
cmp
fdivr
xchg
inc
dec
push
mov
jle
cmps
pop
aad
sub
jecxz
dec
sbb
lods
inc
jp
xor
imul
repz
push
adc
sub
push
jb
adc
mov
and
in
(bad)
mov
and
outs
test
mov
pop
cmp
imul
mov
movs
xchg
shl
adc
mov
xchg
mov
cwde
(bad)
cmps
ss
jp
xchg
jae
neg
jl
or
mov
push
xor
xchg
mov
sub
xchg
mov
(bad)
push
loop
xlat
bound
push
jmp
mov
repnz
sub
lods
mov
mov
daa
les
mov
imul
mov
bound
sbb
outs
imul
push
push
fcom
or
stc
jmp
xchg
iret
inc
inc
xor
(bad)
cs
inc
loope
shl
aas
fs
inc
in
mov
mov
and
mov
fisttp
adc
xchg
ret
mov
jo
dec
into
fs
jge
shr
ret
ficomp
(bad)
int3
out
lock
pop
jno
popf
push
mov
stc
imul
jo
scas
xor
sub
mov
or
bound
jl
xor
add
clc
push
ret
loopne
push
cwde
push
shl
sti
fimul
mov
ret
fcom
enter
bound
sub
or
cmp
enter
pop
or
cdq
add
dec
xor
jg
mov
inc
and
and
cmp
aad
add
movs
jg
jno
int
rcr
sbb
cmp
adc
xchg
adc
pop
sub
test
and
cld
mov
jnp
jmp
jmp
fsub
jl
out
pop
shr
inc
ror
pop
les
jo
scas
stos
add
xchg
add
inc
test
adc
inc
ds
or
add
out
sbb
lods
ins
js
sub
inc
ja
xlat
sub
lds
aad
test
mov
(bad)
pop
mov
gs
dec
inc
retf
test
in
adc
repz
dec
es
jns
fadd
sub
icebp
(bad)
retf
jmp
in
inc
stos
call
xor
int3
pushf
pop
fsub
push
cmp
imul
sbb
jecxz
ret
and
in
xchg
fwait
push
fwait
sti
imul
sub
addr16
xor
sub
mov
sbb
sub
mov
(bad)
enter
cmps
jno
pop
or
inc
out
pop
pop
add
clc
rcr
cmp
(bad)
push
xchg
dec
mov
cmc
outs
aad
shl
pop
cwde
dec
fwait
imul
inc
xor
mov
aad
push
push
cmp
adc
mov
sub
ret
sub
lea
cmp
mov
popa
inc
in
(bad)
sbb
xor
mov
xor
push
mov
addr16
mov
repnz
jle
cmps
repz
arpl
jmp
sbb
mov
pop
dec
mov
mov
cmp
ret
rcr
push
mov
bound
(bad)
mov
movs
mov
not
aam
xchg
mov
jnp
pop
pop
add
add
push
push
push
leave
mov
sub
jnp
hlt
addr16
into
je
mov
mov
movs
call
cmp
push
adc
cmps
addr16
repz
in
imul
inc
jg
icebp
and
fld
cmp
shl
fld
gs
jge
inc
bswap
aas
cmps
(bad)
(bad)
xor
in
push
mov
jmp
ja
or
adc
sub
mov
test
aad
std
or
dec
scas
out
mov
(bad)
sahf
popf
xchg
enter
xor
(bad)
stc
mov
and
inc
mov
push
push
stc
sub
inc
mov
test
imul
mov
neg
fnsave
test
jl
xor
mov
or
das
mov
adc
call
push
pop
mov
ds
imul
(bad)
iret
push
jge
xor
jmp
mov
aaa
inc
pushf
aam
iret
into
in
outs
stos
arpl
cmp
retf
push
xor
mov
push
test
cs
push
mov
mov
cwde
cmps
stc
mov
stos
loop
mov
fsub
adc
mov
daa
cli
inc
push
int
xor
or
repnz
fadd
push
jns
in
cmp
call
mov
or
outs
sub
popf
adc
mov
ret
hlt
lods
movs
ja
fidiv
mov
outs
add
push
test
pop
lahf
jbe
sub
fidiv
(bad)
stos
pop
jl
stos
xacquire
lods
jp
(bad)
ins
mov
inc
and
push
cmovp
mov
xor
pop
fsub
repnz
jle
in
mov
adc
bound
jp
std
add
jae
sub
imul
add
cmp
int3
sti
sub
pop
sub
push
push
popa
xchg
shl
jecxz
sbb
adc
test
fcmovu
iret
cmps
jp
es
jg
neg
rol
out
push
xchg
call
push
repz
lahf
ret
iret
jmp
dec
aaa
and
dec
in
mov
xor
add
fnstcw
out
pop
and
push
adc
mov
stos
repz
cmps
pop
vfmsubaddps
pushf
stc
(bad)
jmp
xor
pop
stos
cmp
repz
stos
cli
fwait
cs
cdq
push
push
sub
push
(bad)
jmp
(bad)
neg
or
bound
xchg
jae
das
fsub
ror
sub
push
cmp
sub
sub
add
pop
aad
fisttp
mov
or
xchg
mov
addr16
pop
or
jecxz
inc
jae
cmc
inc
pushf
push
pop
inc
inc
cmp
dec
addr16
pop
cmp
fwait
out
dec
push
out
add
cmp
sub
xchg
push
int3
(bad)
mov
ja
pop
fnstenv
cmp
jg
jno
cmp
sbb
dec
xchg
inc
cmps
inc
sub
mov
arpl
retf
fistp
dec
and
call
ret
mov
std
jge
pop
cs
pop
lea
(bad)
mov
in
cli
addr16
sub
mov
sbb
daa
sbb
lods
out
add
into
and
je
data16
in
dec
pop
mov
stc
push
push
xchg
add
cmps
in
add
enter
add
(bad)
dec
cmc
pushf
jmp
pop
pop
ror
(bad)
and
mov
pand
cli
out
neg
mov
ss
mov
add
(bad)
pop
mov
and
sub
rol
sbb
push
cmc
std
loopne
inc
popf
inc
fld
add
inc
pop
test
push
xor
dec
les
inc
jns
dec
sar
int
mov
push
xchg
jge
xor
ret
sbb
stc
rol
int3
sub
inc
test
add
scas
pop
bound
sbb
mov
fdiv
outs
pop
and
mov
pusha
stos
stc
mov
pop
and
iret
pop
stos
push
lahf
sbb
inc
cmovle
dec
xchg
sub
and
iret
data16
stos
out
xor
fdiv
dec
pop
jl
mov
sbb
cdq
std
inc
xchg
out
mov
loopne
cli
and
jmp
jbe
lahf
bound
mov
xchg
idiv
mov
mov
pop
mov
into
popf
mov
ins
mov
jecxz
xchg
xchg
outs
les
push
xchg
and
and
ds
leave
push
and
xchg
aaa
jns
outs
aaa
sbb
popf
pop
or
push
jnp
scas
pop
jl
adc
(bad)
rcr
iret
sti
mov
(bad)
loopne
push
or
mov
cmp
sbb
iret
aam
sbb
div
(bad)
movs
inc
xchg
dec
iret
cmps
test
jbe
gs
cmp
hlt
dec
mov
fcmovb
ja
out
inc
mov
push
sahf
jo
mov
xor
jbe
into
inc
mov
xor
sub
push
cld
loop
dec
or
scas
add
mov
aam
adc
dec
cmp
or
mov
push
and
cmp
mov
pop
push
mov
xor
cs
xchg
push
xchg
in
cmp
nop
xchg
push
nop
test
aaa
iret
(bad)
shr
popf
mov
xchg
xchg
jecxz
dec
inc
ror
ja
cli
mov
xchg
icebp
out
les
fxch
test
imul
and
jl
ss
das
fcmovnb
sub
int3
(bad)
nop
push
push
fsubr
fucomi
dec
sub
cmp
xchg
std
jo
or
ret
inc
popf
jg
mov
xor
sbb
mov
mov
pop
sub
pop
loope
adc
es
bnd
dec
push
mov
aad
in
push
push
sbb
sbb
adc
inc
std
sbb
push
mov
add
fs
xchg
inc
sub
jle
inc
aas
xchg
jmp
push
fsubr
mov
out
or
jl
fstp
jl
sub
mov
pop
xchg
cmp
ins
mov
or
fwait
jmp
sbb
hlt
cmp
xchg
stc
jmp
mov
scas
pop
adc
mov
adc
mov
loope
or
fst
mov
sbb
cdq
nop
adc
das
mov
(bad)
fmul
pusha
cmp
push
sub
adc
clc
adc
xchg
loope
mov
dec
mov
xchg
sub
inc
cli
into
jns
push
inc
add
mov
add
scas
out
ja
push
xchg
cmp
xchg
mov
mov
jb
scas
sub
push
xchg
or
ror
pusha
fsubrp
cmps
(bad)
loopne
push
push
add
aaa
xor
(bad)
(bad)
cmp
mov
and
mov
fistp
add
test
dec
repz
fistp
psllw
aam
xor
(bad)
(bad)
dec
cli
jmp
jbe
cmc
sub
xchg
fisubr
xchg
clc
jge
xor
popa
pop
sar
or
idiv
int
and
pop
xchg
mov
nop
mov
lods
ret
pop
daa
pop
es
(bad)
mov
(bad)
in
in
inc
lock
inc
pop
and
sub
outs
adc
lea
cmps
ins
inc
cmp
cmc
add
fisubr
daa
cmp
sbb
xchg
out
inc
pop
ja
push
das
cmp
bound
adc
sub
retf
xor
xor
frstor
cmp
mov
and
push
sahf
cdq
mov
nop
std
push
out
cmp
call
or
ja
push
icebp
adc
loope
push
xor
jnp
push
push
inc
int3
push
add
(bad)
cmps
inc
pusha
and
ret
sub
aas
aam
arpl
ror
fild
fdivr
out
adc
mov
jle
in
cdq
call
fadd
jecxz
and
icebp
movs
or
dec
or
push
leave
fadd
shr
(bad)
scas
xchg
push
xchg
repnz
sbb
enter
pop
push
ins
dec
cmp
stos
sti
pop
ins
mov
pop
iret
and
enter
ret
call
test
aam
dec
js
mov
inc
mov
hlt
and
and
daa
addr16
push
mov
sub
adc
cmp
test
cmp
mov
jb
inc
fist
push
(bad)
out
das
jmp
jmp
cmp
cmp
std
test
fwait
mov
mov
popa
or
adc
mov
xchg
lods
inc
hlt
hlt
mov
ror
sbb
ror
call
movs
and
rcr
adc
xor
push
outs
dec
add
repnz
xchg
ffreep
fwait
sbb
aaa
cmp
in
enter
sbb
stos
or
mov
add
mov
jmp
mov
popf
cld
adc
out
dec
dec
mov
mov
ins
pop
pop
pop
out
hlt
and
sbb
xor
clc
cmp
push
popa
jns
jns
out
adc
mov
mov
(bad)
jno
mov
dec
js
test
push
inc
addr16
shr
xchg
jle
rcl
mov
pop
iret
push
shl
push
mov
test
fwait
jle
movs
mov
imul
cmp
sbb
clc
(bad)
mov
int3
mov
xchg
cwde
mov
sub
sub
aas
mov
or
out
lods
bound
repz
sar
dec
mov
xchg
imul
cs
ret
movs
add
clc
push
jne
cmc
and
lahf
ins
jnp
jmp
adc
(bad)
outs
fisubr
mov
data16
pusha
lahf
ds
ds
sbb
stos
fadd
sbb
fbld
inc
jl
mov
and
int3
sbb
jle
je
or
out
inc
cli
cmc
push
(bad)
shr
jecxz
jmp
adc
jbe
sbb
push
fidivr
xor
mov
clc
jae
jge
add
ins
or
fldcw
pop
push
dec
adc
(bad)
bswap
(bad)
fwait
movs
outs
and
xchg
aam
lods
cmp
sahf
or
(bad)
mov
mov
int3
(bad)
ds
pop
jno
mov
cmps
sbb
in
stos
push
dec
fwait
inc
inc
(bad)
ret
sub
adc
dec
sbb
push
repnz
call
and
cmps
pop
push
bndstx
jbe
sti
mov
aaa
stc
(bad)
pop
rol
adc
repz
jge
xchg
aad
sbb
push
xor
mov
add
cdq
cdq
cwde
jo
shl
mov
cli
jns
jp
mov
pop
sub
enter
inc
loope
bound
(bad)
push
pop
sub
push
stc
jp
jno
push
scas
dec
int
(bad)
pop
test
mov
(bad)
mov
sub
xor
add
(bad)
push
mov
lahf
xor
lods
cld
pop
cld
loopne
fsub
aad
fucomip
pop
test
adc
lods
xchg
data16
mov
xchg
retf
arpl
rdpmc
jp
cmp
rcl
cmp
sub
retf
mov
or
and
fstp
cmp
or
movs
scas
sbb
cmc
cwde
leave
fld
inc
idiv
sti
pop
call
jae
cmp
ins
movs
fcomp
popa
push
or
lods
cmc
and
jg
dec
sti
adc
sbb
jb
into
xchg
mov
inc
fs
aaa
movs
mov
sub
iret
jns
rol
jne
aam
mov
fcomp
push
or
iret
(bad)
imul
mov
dec
pop
inc
addr16
xchg
jae
lods
rdmsr
fisubr
loope
adc
mov
pusha
xor
in
and
inc
adc
ret
mov
xor
pop
div
(bad)
pop
mov
pop
add
push
into
dec
jne
(bad)
int
or
mov
inc
mov
sub
loopne
test
movs
mov
push
add
jmp
xchg
aam
mov
push
push
push
push
mov
mov
dec
aam
mov
or
ins
loop
scas
add
pusha
jnp
les
test
xchg
(bad)
dec
mov
ja
cdq
lods
scas
(bad)
sbb
xchg
add
mov
pop
push
xor
inc
mov
jnp
pop
inc
xor
(bad)
stos
icebp
mov
ins
mov
mov
imul
iret
pop
int3
data16
sub
mov
push
int
inc
add
aas
ficomp
(bad)
bound
cs
(bad)
into
ror
pop
jmp
cmp
inc
pop
out
xor
pusha
retf
add
popf
inc
mov
jne
jmp
jl
cmps
mov
pop
and
mov
sbb
jp
stc
mov
jecxz
pop
xor
rcl
sbb
add
or
add
mov
jge
push
mov
inc
xchg
push
fistp
push
jp
push
mov
sub
mov
mov
xor
mov
inc
jmp
adc
icebp
adc
das
dec
mov
dec
mov
jns
mov
jg
cmc
pop
cmp
push
ins
push
addr16
(bad)
sar
ror
push
jne
mov
jbe
es
cmps
sub
pop
fcom
push
dec
imul
fwait
mov
adc
jmp
call
jno
jnp
or
xchg
les
inc
jb
loope
mov
stos
cmp
jp
lods
sub
jl
(bad)
out
push
xor
xlat
fs
es
ins
sbb
cmps
(bad)
mov
ss
fwait
pop
data16
xchg
adc
pop
call
mov
add
mov
test
repnz
aas
lock
dec
cmp
mov
jmp
pop
sti
pop
fistp
out
cmp
sub
sahf
pop
icebp
cmp
mov
inc
adc
bound
hlt
and
call
fld
les
gs
inc
outs
pop
add
mov
(bad)
pop
imul
adc
mov
enter
or
fild
inc
(bad)
mov
pop
jge
cmp
jecxz
popa
popa
cmp
jne
sbb
sub
mov
sub
pop
or
and
rcr
adc
pop
xor
mov
or
jmp
fs
push
ret
jns
addr16
xor
xchg
or
repz
test
or
mov
sub
jne
lahf
into
sar
add
xchg
mov
addr16
loop
mov
gs
aas
rol
stc
pushf
sahf
movs
out
iret
sbb
sub
ds
add
mov
add
sub
add
adc
les
jbe
arpl
cmp
cld
in
pop
inc
leave
(bad)
std
cmc
mov
or
mov
ret
popf
test
xor
xlat
movd
dec
dec
nop
mov
inc
ret
and
xchg
cmps
mov
and
outs
or
sbb
loop
sbb
push
es
aaa
pop
call
sar
repz
and
retf
sbb
div
mov
lds
add
jle
mov
outs
fmul
pop
pop
push
sbb
out
aad
in
je
cdq
and
clc
mov
cdq
ins
and
cmp
mov
scas
pop
cmps
mov
xchg
mov
(bad)
cwde
and
jno
or
addr16
push
push
adc
fild
fmul
cmp
pop
cwde
sub
mov
scas
sub
inc
lods
mov
in
sub
mov
repnz
aaa
(bad)
push
pop
jp
outs
pop
or
in
mov
or
push
xchg
loop
popf
mov
add
sub
out
shl
cdq
mov
xchg
cmp
sbb
repnz
test
adc
adc
xor
push
loopne
(bad)
mov
xchg
(bad)
sti
mov
imul
mov
xchg
push
cld
push
cmp
into
sbb
cmps
xor
out
jo
dec
cmp
xor
mov
jmp
test
jno
dec
cmps
inc
lahf
or
test
mov
jno
add
loopne
shl
fs
mov
mov
(bad)
sar
bound
mov
jecxz
pop
push
and
in
jle
inc
test
loopne
sbb
aaa
or
jnp
dec
xchg
rcl
push
sbb
xchg
int3
cwde
mov
jbe
outs
add
scas
int3
div
stos
cmps
jp
fdivr
sub
fisttp
cs
ins
bound
add
dec
push
shl
lahf
xchg
fwait
mov
mov
inc
inc
lods
(bad)
xchg
in
jmp
ja
ja
ja
(bad)
cmp
cmc
push
int
sbb
enter
xchg
push
inc
ja
push
ror
or
add
sbb
lahf
les
or
mov
cmp
push
es
mov
js
push
cs
cmp
movs
inc
sub
and
fild
pop
mov
mov
mov
cmc
xchg
dec
adc
cmps
dec
stos
lahf
in
lods
cs
xchg
mov
xor
inc
jecxz
cmps
gs
(bad)
popf
in
loop
pusha
sub
dec
clc
adc
mov
or
mov
pop
and
mov
inc
cmc
xchg
pop
xchg
shl
push
adc
sub
fidiv
in
icebp
std
and
inc
in
test
into
dec
repz
ds
lahf
enter
cmp
push
bound
sbb
cmp
dec
push
enter
mov
xchg
xchg
pop
les
shr
aam
ret
(bad)
and
xor
add
retf
cs
sti
jmp
ret
aad
and
enter
out
call
sbb
aas
mov
out
aad
fdiv
out
(bad)
iret
mov
push
xchg
push
cwde
ret
int3
adc
enter
sbb
lea
fiadd
ins
ins
cmovno
sbb
lock
popf
ror
popa
mov
xchg
adc
in
sub
xor
jno
bound
pop
mov
sub
gs
mov
jmp
adc
mov
inc
jecxz
mov
test
in
jae
push
dec
stos
leave
pop
jl
jp
out
jo
lods
pop
pop
popa
or
mov
jb
leave
sub
ret
or
mov
ins
call
(bad)
jbe
sbb
scas
shr
outs
cmp
icebp
outs
mov
xor
xchg
mov
jae
mov
sbb
pop
mul
int
cdq
jecxz
dec
aad
dec
adc
add
in
sub
cmps
jnp
cdq
jns
fimul
dec
loopne
xlat
mov
popf
xchg
sub
ror
into
inc
add
jo
mov
or
pusha
push
sar
stc
scas
or
movs
not
scas
es
icebp
out
jle
test
std
(bad)
lock
ja
repz
(bad)
mov
loopne
sti
movs
and
ins
push
pop
xchg
sub
mov
outs
(bad)
fwait
mov
cmp
pop
out
aam
cwde
mov
or
call
mov
call
ret
inc
inc
push
outs
or
out
ja
cdq
mov
movs
sbb
pop
sub
arpl
xchg
jb
je
je
jns
daa
or
inc
aam
ins
mov
inc
push
sti
push
test
mov
pop
sbb
or
or
dec
push
clc
test
pop
push
cmp
xchg
jns
inc
xchg
mov
in
push
mov
add
mov
push
ss
push
mov
and
fiadd
fbld
popa
shr
adc
cmp
into
sbb
add
stc
push
xor
or
mov
retf
push
aam
or
mov
or
xchg
mov
bnd
and
xchg
shr
loop
shr
push
push
movs
and
clc
clc
dec
stos
adc
jmp
aam
ins
sub
icebp
popf
cmp
adc
movs
sub
mov
xchg
in
rol
pop
add
xor
cwde
in
sar
addr16
xchg
ins
je
retf
xlat
icebp
(bad)
fbstp
fldenv
aam
pusha
test
stc
mov
pop
add
stos
in
sub
lds
xchg
pop
inc
shl
jecxz
push
sub
outs
aam
and
xchg
add
retf
xchg
jno
repz
ja
add
popf
int3
and
jle
sub
out
adc
sub
pop
or
loop
inc
adc
cmp
jge
jecxz
inc
test
jp
xor
dec
sbb
popa
xor
loope
cdq
sar
and
pusha
mov
pop
or
scas
imul
inc
pop
mov
fdiv
jge
adc
fmul
add
jae
cdq
xor
outs
sbb
jb
cmp
or
mov
sub
mov
mov
mov
sub
inc
scas
mov
add
xchg
add
sub
imul
dec
enter
mov
mov
xor
stos
das
in
loope
add
and
and
xchg
inc
sbb
jg
fistp
retf
aaa
jmp
cs
inc
sub
int
fisttp
call
pop
jb
push
sbb
jp
repnz
iret
xchg
dec
mov
sar
fidivr
sbb
or
rcr
push
mov
fmul
push
dec
push
in
jp
pop
mov
sbb
lds
jnp
jl
rcl
jno
cmp
popf
add
pop
xor
mov
ins
jns
add
or
mov
outs
(bad)
test
arpl
not
sbb
les
popa
dec
jp
or
or
push
ins
fsubr
jbe
jp
maskmovq
mul
(bad)
xchg
and
jmp
(bad)
adc
cmp
cmp
push
iret
dec
or
(bad)
mov
out
or
push
ins
inc
dec
pop
xchg
outs
inc
loop
mov
xchg
dec
xor
jmp
inc
es
mov
pop
fdiv
push
or
xor
addr16
in
rcr
popf
(bad)
fnstsw
test
jecxz
(bad)
out
repz
lahf
loopne
sbb
xchg
fld
std
mov
jge
push
jle
adc
movs
mov
cmp
outs
ins
dec
inc
push
fisubr
and
test
jbe
ja
mov
xor
sahf
(bad)
mov
retf
inc
push
jns
clc
lods
push
daa
cli
les
xor
sbb
dec
push
mov
adc
mov
(bad)
call
push
add
mov
mov
out
adc
push
lods
scas
sub
ss
jge
xor
jne
jns
out
and
adc
(bad)
out
add
cmps
mov
cmp
jns
xor
xchg
push
adc
jmp
int3
adc
adc
push
test
jp
push
sub
add
cwde
gs
jne
retf
dec
adc
inc
adc
fadd
inc
and
jecxz
sub
scas
xlat
fstp
dec
push
cmp
test
adc
test
dec
and
popf
gs
and
arpl
ins
out
loop
sahf
fld
stos
sbb
xchg
nop
inc
inc
push
mov
or
add
int
movs
push
sub
pushf
sbb
adc
stc
movs
jbe
xchg
xor
add
aas
cmps
leave
mov
jb
push
out
enter
rcr
xlat
xchg
xor
gs
jns
jo
cli
pop
mov
out
push
out
pop
fimul
repnz
(bad)
int
fucom
pop
dec
inc
ja
in
mov
mov
adc
imul
loop
jp
scas
fistp
icebp
and
nop
out
mov
cmps
push
out
shl
dec
(bad)
addr16
mov
mov
sbb
cmps
and
adc
push
cmps
add
sub
int3
dec
jbe
mov
lock
inc
adc
scas
nop
and
sbb
dec
lahf
aad
in
mov
lock
mov
push
mov
dec
jo
push
movhps
and
jecxz
hlt
pop
mov
mov
cwde
push
movs
sbb
adc
cmp
push
cdq
mul
fld
mov
mov
xchg
imul
add
cmp
ficom
in
mov
xor
and
call
movs
inc
add
sub
test
dec
and
push
sbb
mov
add
pop
dec
add
test
addr16
enter
push
sahf
call
mov
mov
imul
mov
clc
jae
push
mov
inc
retf
fs
push
retf
sub
adc
rcr
push
xlat
xchg
aad
movs
int
mov
rcl
addr16
push
dec
adc
jae
neg
fld
lea
scas
daa
cmc
sbb
mov
cmp
sbb
xor
int
lock
pusha
or
int3
je
lea
mov
ja
dec
es
retf
jae
xchg
pop
sub
and
clc
cli
adc
mov
jo
repz
icebp
jg
leave
xchg
shl
mov
xor
inc
retf
pop
fsub
xor
jg
es
popf
test
or
das
scas
rcl
mov
push
jno
and
lds
je
mov
jp
loop
xchg
lods
jp
mov
stc
adc
ret
sbb
or
jecxz
xor
pop
sub
sbb
mov
mov
mov
aad
sbb
xchg
les
xchg
xchg
xor
pop
push
js
push
inc
retf
xchg
mov
call
mov
(bad)
out
arpl
ss
lods
sti
mov
in
push
ds
inc
pop
popf
mov
mov
nop
or
cmp
jg
mov
xchg
std
fimul
sbb
int
jle
and
lock
lahf
pushf
sub
push
adc
xchg
mov
fwait
or
ret
cmp
sahf
or
ds
popf
fsub
retf
stc
dec
mov
xor
aam
cld
(bad)
and
imul
adc
popa
je
enter
nop
push
bound
mov
sar
or
arpl
(bad)
int3
test
jbe
dec
dec
sbb
mov
call
mov
das
div
fist
clc
sahf
rol
stos
call
js
pop
(bad)
mov
in
lods
addr16
ret
ja
or
mov
arpl
jns
cmps
xchg
stos
sub
das
jb
ds
dec
stos
shr
das
sub
aam
les
or
in
hlt
ja
jnp
sbb
mov
popf
and
fisubr
mov
shl
jae
or
and
xchg
pop
xor
push
out
retf
add
icebp
inc
stos
movs
inc
fcom
test
jmp
mov
(bad)
stos
pop
mov
mov
lods
cmp
mov
push
into
stos
lahf
call
aaa
arpl
adc
mov
out
xchg
xor
sbb
out
push
push
jg
xor
adc
jae
sbb
xor
xchg
out
sbb
popf
ins
inc
and
std
cmp
out
out
fwait
xor
ss
mov
aas
sub
popf
mov
jno
imul
cmp
les
cmc
clc
xor
inc
in
mov
call
pop
lds
pop
dec
fdivr
mov
or
ins
mov
xchg
arpl
jb
push
mov
ret
jo
mov
jo
test
scas
icebp
jmp
(bad)
pop
cld
mov
retf
repnz
adc
pop
mov
gs
(bad)
cmp
bound
and
fisttp
shl
mov
bound
mov
push
mov
xor
lods
adc
in
into
sti
outs
hlt
mov
xchg
int
stos
fs
nop
mov
sbb
stc
sub
push
rcl
jae
push
push
adc
frstor
shl
repnz
mov
jmp
hlt
dec
cwde
push
and
add
das
inc
sub
mov
movs
lds
addr16
xor
sub
push
jle
jmp
popa
adc
retf
push
test
scas
int
fisttp
inc
adc
stos
mov
jg
cli
adc
aad
jecxz
inc
jns
aas
ret
aaa
(bad)
push
pop
adc
movs
xchg
stos
mov
fwait
outs
lods
ret
ins
std
(bad)
sub
lods
mov
ror
mov
cmc
out
cmp
pop
dec
mov
push
dec
aad
and
mov
leave
test
push
sti
jecxz
daa
es
in
cli
dec
xchg
es
or
imul
ds
lods
ins
cdq
sbb
mov
into
sub
push
test
fistp
cmp
movs
mov
mov
mov
lock
es
mov
push
inc
xchg
or
jmp
iret
inc
xchg
cdq
push
nop
inc
inc
mov
popa
or
inc
pop
aas
cs
pusha
xchg
inc
imul
js
(bad)
shl
mov
mov
jb
dec
das
cmp
sti
jmp
call
ret
cwde
sub
scas
mov
into
dec
add
jb
and
ficomp
cmp
movs
pop
(bad)
dec
gs
test
int
lock
lds
mov
in
daa
mov
jmp
adc
and
test
clc
daa
cwde
movzx
in
js
sahf
mov
ins
cmp
xor
pop
xor
push
push
shl
cmp
jmp
lods
or
xchg
cdq
or
inc
mov
xchg
js
int3
dec
dec
popa
fmul
pop
pause
xor
lds
(bad)
sub
popf
xchg
aas
sub
and
int3
mov
push
jbe
mov
jg
xor
sar
jl
mov
shl
std
jge
loopne
and
mov
retf
(bad)
pop
inc
rcl
mov
mov
out
cmp
bound
hlt
push
hlt
pop
dec
or
sub
push
xor
mov
loopne
out
push
jle
js
outs
pop
inc
xor
jecxz
rcr
int3
sbb
or
sahf
fldcw
add
lods
pop
shr
in
nop
dec
rol
cwde
sub
mov
push
jnp
mov
fdiv
mov
std
dec
cld
or
fucomi
inc
adc
popf
sbb
sub
lea
cmp
sub
and
xor
mov
ret
push
jl
fsub
cld
inc
ret
and
es
pushf
pop
ss
popf
sbb
add
sbb
mov
nop
mov
in
ret
cmp
adc
dec
in
and
mov
test
xor
dec
push
jmp
shr
cmc
cmp
jmp
mov
and
aad
(bad)
mov
add
stc
pop
lods
stc
repz
dec
push
and
mov
mov
mov
sbb
and
xchg
jmp
and
ja
sbb
es
dec
mov
adc
mov
mov
je
loop
mov
inc
jecxz
mov
into
fst
ds
aas
dec
mov
retf
test
mov
in
out
repnz
mov
sub
pop
fsub
mov
and
dec
call
and
arpl
pop
scas
mov
fwait
cs
mov
outs
xor
mov
imul
cwde
(bad)
sub
fpatan
out
lods
int3
test
jb
js
or
mov
scas
test
jne
adc
adc
sub
inc
cmc
inc
call
(bad)
outs
mov
(bad)
mov
nop
cmp
popf
retf
xchg
test
(bad)
cmp
add
mov
sub
pop
xor
int
xchg
jge
dec
int3
retf
or
push
mov
xlat
mov
pop
fist
push
mov
add
adc
test
pop
mov
repz
mov
jns
push
popa
sahf
dec
shr
(bad)
stos
pop
adc
das
xchg
add
daa
adc
mov
lods
mov
mov
out
sub
mov
jne
ficom
cmp
adc
dec
call
mov
or
sbb
push
push
popa
or
fs
jl
and
push
xchg
pop
ins
(bad)
mov
dec
push
out
iret
fs
xchg
pop
sbb
dec
adc
inc
dec
xchg
loope
scas
js
or
jp
xchg
aad
or
das
xor
loope
lahf
push
or
fmul
(bad)
cwde
inc
add
push
cmp
(bad)
arpl
push
or
dec
inc
pushf
jb
mov
std
outs
in
sbb
adc
xor
mov
clc
pop
inc
int3
mov
push
jle
pop
push
jns
int
lock
push
add
es
sbb
jne
inc
int3
popf
(bad)
inc
jno
cmps
mov
xchg
push
push
js
xchg
inc
or
fsubr
dec
dec
data16
nop
fnsave
mov
loope
stos
aas
fwait
popa
sub
aad
sbb
push
aaa
push
sti
push
ja
xchg
lods
test
(bad)
loop
and
loopne
lds
inc
fist
movs
addr16
(bad)
push
scas
(bad)
sub
add
cmp
cli
mov
sub
nop
jb
jp
out
imul
push
cmp
dec
or
push
mov
inc
cmp
dec
pushf
retf
repnz
or
test
lds
mov
inc
push
add
jbe
neg
shr
repnz
leave
loop
mov
clc
stos
lds
fst
mov
add
cmp
adc
mov
or
ret
jnp
xchg
jo
inc
dec
sub
mov
add
cli
jae
mov
shl
arpl
call
cmp
add
test
pop
jg
adc
ret
dec
ficomp
mov
xor
repz
push
fdiv
inc
or
test
push
lock
push
add
jmp
cmps
es
(bad)
nop
xor
aam
mov
std
jmp
mov
dec
aam
ins
add
movd
pusha
(bad)
sub
stos
pop
cmp
stos
inc
mov
out
inc
xor
mov
inc
jno
mov
dec
in
fdivrp
inc
outs
lods
les
inc
or
mov
or
gs
jp
lahf
ret
mov
jl
in
cmp
inc
stc
mov
addr16
dec
mov
shr
pop
mov
mov
pusha
movs
dec
jl
mov
sbb
je
pop
lds
and
add
xor
or
push
xor
jns
sub
adc
mov
mov
push
mov
gs
fidivr
mov
cmc
xchg
mov
dec
out
inc
sub
fist
xchg
ds
jo
fdivr
push
mov
jne
push
jae
jb
push
loope
fwait
sub
out
std
or
ins
mov
sub
out
fs
pop
shl
popf
pop
gs
(bad)
ja
xor
push
cmp
in
jo
mov
test
addr16
ficom
(bad)
out
in
test
adc
repz
retf
inc
push
sbb
retf
into
add
ror
sar
pop
dec
shr
ror
dec
ja
pop
repnz
pop
(bad)
fst
cli
les
ret
ror
call
xor
cmps
jle
sbb
outs
(bad)
push
imul
jmp
cmp
lahf
outs
shr
ja
(bad)
xor
jb
inc
test
pop
xor
mov
test
aad
cmp
push
rol
(bad)
stos
sbb
js
sahf
out
push
mov
outs
xchg
pop
das
shl
test
xchg
out
mov
adc
retf
(bad)
jl
inc
jno
jae
idiv
or
fcom
and
pop
ds
in
sbb
push
rcl
sbb
test
jle
xchg
jg
cld
sbb
mov
pop
add
cmp
lods
repz
sub
dec
lock
cmp
comiss
sub
push
aaa
inc
push
add
pop
pop
mov
(bad)
mov
pop
add
fs
pop
fimul
or
jnp
cld
sbb
unpckhps
pavgb
jns
iret
hlt
rcl
xor
retf
push
cmps
sbb
inc
xlat
fdivrp
and
push
in
xor
hlt
xchg
dec
outs
call
ss
xchg
retf
not
jnp
shr
cmp
ret
in
cmp
jmp
aas
sar
dec
inc
enter
mov
add
mov
or
(bad)
cmc
cmp
jne
jle
imul
data16
loopne
bound
fst
scas
inc
xor
loop
inc
push
daa
fidivr
jp
pop
test
idiv
cmp
arpl
ins
imul
xor
(bad)
stc
retf
xchg
ss
adc
jp
pop
push
lds
adc
test
mov
hlt
(bad)
test
mov
push
loop
push
adc
xor
dec
sbb
mov
mov
enter
inc
jnp
or
test
test
sbb
retf
fst
ja
idiv
popf
mov
cli
mov
icebp
fdiv
rcr
xchg
dec
or
jae
not
jb
in
test
int
aam
pop
push
enter
add
ss
dec
arpl
push
mov
cli
adc
imul
push
add
fwait
retf
push
pop
nop
push
test
mov
jg
mov
sub
sbb
pop
add
mov
test
outs
shl
pop
fcomp
xchg
add
lahf
cmp
pop
cli
ret
out
out
pop
jecxz
in
int3
out
xor
mov
and
(bad)
mov
mov
cdq
pop
ficom
xor
arpl
mov
rep
xchg
(bad)
sbb
push
pop
aam
shr
mov
adc
xchg
out
mov
jne
inc
retf
and
call
aas
jmp
pop
and
mov
cld
jns
pop
pop
loop
mov
hlt
mov
movs
pusha
add
or
ror
data16
cld
mov
dec
sub
push
mov
add
(bad)
inc
(bad)
dec
pop
fist
sbb
mov
add
stos
pushf
cli
adc
sbb
or
xchg
adc
adc
imul
mov
cs
loop
mov
dec
inc
pop
in
mov
mov
outs
xchg
outs
shl
icebp
sbb
adc
inc
cmp
xchg
ja
pop
gs
scas
xchg
jb
sar
in
jg
jle
daa
stos
xchg
ret
sbb
and
mov
jb
push
movs
(bad)
mov
mov
xchg
neg
mov
mov
pop
fisubr
push
jae
and
inc
add
sbb
xor
add
aas
(bad)
push
add
xchg
jp
out
mov
mov
shl
push
jbe
mov
fcom
ds
pop
or
jmp
sbb
jb
mov
sub
push
jp
rcl
inc
test
bound
das
jbe
or
or
nop
arpl
fwait
xchg
mov
inc
test
ins
paddd
mov
sub
pop
ret
outs
pusha
jl
into
jecxz
mov
das
push
leave
or
sti
mov
loopne
sti
(bad)
pop
jns
bswap
adc
fistp
cmp
dec
mov
push
pop
xchg
in
and
test
mov
cmps
cmc
hlt
ret
add
mov
shl
loopne
jne
test
fist
cmc
in
pusha
in
mov
xor
(bad)
(bad)
sub
mov
sub
ret
cmc
(bad)
icebp
aam
repnz
call
lock
cmp
daa
ja
mov
add
sbb
lock
and
add
push
xchg
or
add
rcr
lods
mov
lea
mov
pop
lea
out
inc
mov
imul
fistp
xchg
repz
push
and
xor
jecxz
inc
pop
mov
lahf
nop
ss
push
lods
imul
pusha
fwait
ret
scas
mov
test
pop
add
mov
pop
mov
jnp
dec
mov
jbe
cmps
sbb
sub
test
out
imul
push
or
out
popa
std
in
push
gs
popf
dec
push
push
retf
sbb
popf
xchg
jnp
dec
xor
jbe
loope
sahf
aaa
clc
add
mov
lea
test
iret
fsub
pop
lods
(bad)
pop
mov
in
and
sbb
sub
mov
loope
fiadd
xor
sti
inc
xchg
xor
loope
mov
out
in
or
cmp
xlat
pop
mov
pushf
ss
push
add
jns
pop
cmp
ins
pop
(bad)
adc
rcr
cld
repnz
leave
mov
jns
mov
add
test
sub
mov
add
hlt
fld
in
or
ss
dec
shr
or
inc
sbb
sahf
fwait
xchg
bound
out
cld
icebp
(bad)
in
repz
xor
sahf
or
push
(bad)
inc
cli
xchg
jbe
imul
xor
xchg
lods
shr
mov
arpl
test
div
push
loopne
cmp
sub
xchg
ja
sbb
call
push
fwait
cmps
stos
ja
mov
mov
cmps
mov
push
and
in
dec
cld
fadd
xchg
sub
xor
lea
and
inc
cmp
scas
mul
sbb
xchg
out
and
add
cmps
push
test
movs
jl
push
lds
pop
pop
push
sbb
push
inc
bound
cs
pop
add
or
test
mov
pop
mov
fdivr
pop
loopne
mov
arpl
ror
sub
mov
(bad)
mov
je
cmp
and
es
inc
adc
cmp
pop
(bad)
jle
jl
or
jbe
and
cmp
sub
add
daa
push
dec
cld
cs
and
(bad)
outs
ds
aaa
pop
sub
xor
sahf
hlt
in
test
lods
sbb
enter
outs
bound
xor
retf
jl
push
and
pushf
jae
out
mov
neg
(bad)
xor
retf
ja
outs
ins
sahf
mov
(bad)
adc
in
cmp
jmp
into
outs
test
dec
jo
out
cwde
add
sbb
movs
sbb
or
inc
xchg
shr
dec
add
sbb
push
jle
retf
sub
xor
xchg
test
scas
fsub
aad
fwait
ja
sub
pop
pop
je
lods
jmp
adc
push
out
dec
jbe
sbb
cmp
cld
jno
stos
leave
push
clc
arpl
xacquire
add
dec
aam
adc
push
cmp
cmp
sub
jbe
jle
mov
and
xchg
imul
retf
push
sub
retf
mov
mov
xchg
iret
imul
aas
sub
inc
cmp
and
mov
fstp
xor
sahf
dec
and
aad
retf
aam
outs
inc
push
cmps
mov
ins
xor
int3
or
stc
ret
jle
and
test
inc
mov
sbb
les
xchg
dec
in
xor
jmp
inc
imul
ins
dec
add
fst
mov
xchg
cmp
add
into
and
mov
es
jmp
into
mov
push
jnp
mov
in
bound
push
pushf
stos
pop
dec
mov
out
inc
retf
ror
inc
pop
mov
push
jecxz
ins
jno
and
cmp
and
ins
mov
gs
ja
mov
or
xchg
dec
mov
add
mov
shr
fstp
dec
add
scas
cmp
ret
sub
mov
cmp
addr16
mov
mov
out
mov
pop
mov
pminub
ror
fwait
mul
scas
dec
jb
call
stos
sbb
hlt
cmp
retf
loope
jg
mov
je
inc
stc
add
add
mov
imul
loop
mov
shl
and
popa
call
movs
cdq
stos
jge
xor
ret
daa
add
mov
mov
push
jecxz
add
ins
pop
(bad)
js
fdivr
mov
outs
xor
xchg
in
idiv
mov
and
out
pop
in
mov
push
push
js
sbb
enter
movs
and
dec
cmovl
xor
push
(bad)
and
dec
inc
call
cmp
jg
or
fadd
jg
addr16
sub
push
pop
mov
cmps
xchg
jbe
mov
jbe
push
mov
sbb
aad
xor
and
movs
or
call
test
retf
mov
xchg
cmp
jp
imul
inc
dec
ins
jns
and
add
or
aad
out
adc
add
lock
int3
outs
call
out
jecxz
mov
ds
mov
repnz
retf
stc
jo
loop
call
push
add
mov
imul
cld
fisub
xchg
rol
adc
std
push
fwait
xor
cmps
jo
push
cld
sub
pop
out
mov
into
push
ss
icebp
mov
ret
dec
fcmovb
dec
movs
out
out
je
pushf
mov
jae
imul
inc
and
mov
or
outs
jne
adc
jb
fsubr
nop
mov
sbb
jo
test
(bad)
mov
xor
ja
or
retf
jg
test
arpl
stc
clc
add
lods
jecxz
out
mov
aas
cmp
nop
sub
enter
mov
in
pushf
sub
loope
xchg
(bad)
fadd
xchg
xor
pop
(bad)
mov
sub
test
mov
or
pop
das
mov
out
xlat
movs
sub
xchg
push
cli
call
cld
repnz
xchg
add
sbb
mov
push
pop
inc
push
pusha
jge
jnp
jmp
adc
dec
ds
fsubr
or
(bad)
sbb
mul
shl
fist
ror
mov
mov
dec
shrd
bound
mov
xor
in
ja
mov
mov
sub
and
jmp
repnz
repnz
loope
jg
jle
pop
mov
adc
mov
int3
jo
xchg
outs
jge
ins
inc
fwait
adc
fdiv
push
or
pop
sub
test
aaa
inc
pop
(bad)
and
push
xchg
pop
das
stc
repz
mov
adc
push
mov
or
jp
pop
nop
dec
adc
js
and
aas
jle
adc
gs
mov
dec
jns
test
cmc
mov
(bad)
out
push
outs
mov
pusha
xchg
jo
scas
imul
push
mov
adc
lock
xor
jmp
je
sbb
mov
sub
mov
sbb
retf
jae
jmp
mov
ins
in
push
jmp
pop
mov
test
fsub
inc
cli
pop
ja
inc
mov
jne
pop
fwait
xchg
inc
xchg
and
cmp
aad
cmps
in
sub
adc
aas
test
addr16
test
mov
sar
fist
imul
repnz
xchg
and
xor
lock
mov
mov
or
leave
(bad)
icebp
xchg
test
das
inc
cli
mov
mov
loopne
push
inc
add
and
jns
push
pop
adc
push
cmps
adc
cmp
mov
lea
scas
xchg
add
daa
ret
sbb
sub
(bad)
imul
pop
jbe
adc
loope
dec
jns
pop
call
jl
and
pop
cwde
jmp
adc
cmp
xor
out
out
loope
mov
push
mov
sub
sub
add
fwait
movs
mov
jb
syscall
mov
or
xchg
retf
mov
push
nop
push
rol
pop
shr
cmps
data16
push
adc
push
and
stos
sbb
sub
pop
(bad)
pop
les
adc
lds
jge
aas
mov
push
or
adc
cmp
retf
inc
int
xchg
cmps
test
popa
test
gs
push
xchg
mov
popf
mov
push
and
inc
movs
mov
push
xchg
movs
mov
xchg
cmps
dec
inc
dec
call
enter
test
pop
push
and
push
mov
enter
add
or
(bad)
ins
xchg
mov
pop
mov
mov
cmc
loop
(bad)
jle
sub
out
cmp
stos
pop
adc
sahf
mov
mov
and
sbb
out
popf
mov
pop
shr
aam
leave
mov
ss
mov
shl
imul
push
jne
in
int3
pop
das
call
outs
xor
mov
pop
dec
loopne
cmps
cmp
lahf
pusha
xchg
push
ja
mov
enter
vmresume
psadbw
neg
lahf
push
in
lods
xchg
mov
or
or
sbb
xor
xchg
push
je
inc
sub
lods
add
int3
fwait
cmp
dec
fucom
sahf
out
pop
pusha
fist
(bad)
test
call
push
cmps
jl
adc
cs
pop
mov
cmps
jp
retf
fwait
jmp
inc
pop
and
repz
imul
icebp
add
imul
mov
cmps
adc
jae
sti
ja
mov
add
repz
or
iret
hlt
sbb
push
int
imul
hlt
cmp
out
imul
test
pop
(bad)
pop
ret
repnz
imul
adc
ret
lods
pusha
or
sub
fldz
xor
xor
jnp
jge
daa
ins
sub
jae
xchg
pop
jae
mul
or
addr16
xchg
inc
jnp
outs
mov
sbb
aaa
(bad)
or
test
imul
int3
sbb
loop
out
imul
dec
sbb
sbb
xchg
sub
aad
loope
jns
push
jmp
std
sub
out
repnz
xor
add
movs
hlt
and
xchg
cs
jb
enter
sub
add
xchg
aas
sub
pop
test
fs
add
out
test
cmp
inc
cmp
inc
push
or
lahf
fst
add
ins
pop
jbe
lahf
jae
add
dec
dec
jno
mov
dec
in
inc
and
(bad)
mov
xchg
int3
fnstenv
js
gs
movs
pop
and
repnz
sbb
mov
dec
test
mov
push
mov
jmp
dec
test
ret
mov
mov
adc
xchg
out
fsub
or
data16
sbb
dec
lds
sub
(bad)
sar
and
inc
ficomp
cld
xchg
hlt
call
psraw
add
sbb
lea
mov
pop
mov
loopne
xchg
mov
daa
pusha
add
movs
aas
addr16
mov
inc
mov
push
in
push
popa
add
sub
mov
cs
outs
cld
adc
dec
sub
rol
dec
pop
adc
in
xchg
fld
mov
fstp
movs
int3
cmp
mov
inc
jnp
push
mov
jns
mov
and
inc
repz
aaa
mov
lahf
sub
xor
ret
sbb
inc
clc
and
pop
fnstenv
leave
mov
outs
pop
int
xchg
aas
call
pop
mov
add
mov
push
mov
pop
ret
hlt
stos
das
adc
sub
push
dec
push
dec
ins
aas
lods
in
inc
ret
jne
xor
loopne
out
cmc
ret
push
cmps
retf
clc
stos
dec
jg
pusha
push
mov
sti
test
cmps
xor
mov
push
pushf
jmp
std
gs
jg
pop
(bad)
adc
cmp
ins
imul
mov
mov
mov
xchg
xchg
inc
out
or
adc
mov
imul
inc
and
xor
pop
repnz
push
movs
dec
adc
dec
jecxz
cmc
sub
sub
loop
arpl
and
scas
mov
xchg
enter
fsub
fsubrp
fwait
cmc
sbb
movs
retf
lock
mov
xchg
movs
mov
out
mov
scas
(bad)
sub
imul
sbb
adc
int
dec
arpl
mov
push
cmp
int3
in
fcmove
mov
mov
js
push
rep
sub
jl
ret
sub
jnp
inc
ret
inc
popa
mov
fisttp
out
xor
cmp
call
mov
rcl
out
adc
dec
ja
jno
push
lods
cmc
dec
jns
mov
shr
pushf
xor
lods
repnz
(bad)
inc
mov
outs
jae
(bad)
xchg
or
cli
and
xor
iret
and
imul
sar
enter
mov
xlat
add
or
push
and
in
and
jae
(bad)
xchg
push
pop
xor
(bad)
mov
dec
push
sub
pushf
stc
call
out
or
cli
and
jl
imul
stc
xchg
mov
push
cmp
fstp
fdiv
arpl
pop
scas
aas
pop
pop
jnp
movs
movs
jnp
xchg
sbb
cmps
xor
dec
cmps
or
fnstenv
pop
dec
add
jne
sbb
mov
jno
rol
sbb
add
(bad)
mov
int
sbb
dec
retf
retf
loopne
jnp
daa
imul
pop
and
mov
in
mov
iret
jle
fcmovnb
jnp
inc
xchg
bound
fldcw
mov
repnz
sbb
cwde
mov
xor
mov
xchg
jae
out
mov
aam
sti
mov
ds
retf
lea
sub
les
and
sbb
jno
pop
jae
lahf
inc
and
push
call
sbb
aad
push
xchg
rcr
mov
jp
inc
mov
outs
push
push
jne
stos
imul
jne
shl
ret
lods
hlt
mov
clc
movs
fadd
(bad)
cld
leave
push
or
sbb
shr
add
leave
loop
push
sbb
jg
fld
adc
add
and
lods
push
sub
pop
sbb
or
pushw
not
mov
xchg
inc
popf
sub
push
popa
cdq
arpl
adc
sti
and
inc
pushf
sar
scas
cdq
and
dec
push
push
mov
ins
daa
imul
dec
sbb
jmp
shl
shr
cpuid
jg
test
push
cli
std
sub
xchg
adc
mov
test
xchg
mov
fadd
pop
arpl
cmpps
lods
stc
jns
std
clc
enter
pop
dec
enter
retf
loop
inc
mov
xchg
cwde
pusha
fdivr
push
jl
in
or
mov
or
jns
fisttp
repz
pusha
push
dec
repz
dec
pop
mov
jge
nop
scas
hlt
outs
mov
mov
xor
fcom
pop
rcl
js
dec
rcr
fnsave
push
int
sar
out
add
stos
jnp
and
nop
sar
jns
xor
leave
pop
je
cmp
iret
add
cs
jne
adc
ror
xchg
sbb
rcr
test
or
lods
aaa
or
adc
(bad)
ds
xlat
lock
in
push
nop
clc
add
or
in
jbe
add
loopne
ret
in
adc
lock
sub
xchg
fldz
sbb
loope
dec
jp
mov
test
sub
xchg
push
inc
push
ins
cmp
xchg
rol
jns
dec
out
clc
push
and
ret
and
pop
lea
and
cdq
push
add
mov
jbe
mov
mov
(bad)
dec
addr16
dec
test
xchg
clc
dec
sbb
xlat
xchg
lods
xor
add
inc
cs
mov
ror
push
add
das
jle
(bad)
call
(bad)
mov
cli
imul
inc
in
enter
scas
xchg
aam
mov
xchg
stos
jmp
pop
cmp
(bad)
(bad)
mov
pop
rol
in
aam
fnsave
dec
ret
jae
dec
xor
adc
aas
fst
adc
sub
sub
popa
dec
ror
repz
jmp
xor
pop
jmp
stos
fxam
in
scas
fsub
std
cmc
call
outs
dec
xchg
stos
mov
pushf
jnp
mov
mov
mov
xchg
ds
(bad)
jns
mov
mov
fdivr
fsubrp
or
addr16
adc
jne
add
and
lods
or
retf
mov
sbb
cs
mov
popf
mov
jp
and
jne
nop
fstp
sub
mov
adc
in
push
xor
stos
xchg
ffreep
xor
ror
xor
xlat
icebp
sub
adc
mov
pop
push
push
in
addr16
bnd
sar
loop
xor
retf
fwait
jns
or
inc
add
scas
aas
adc
pop
stos
test
pop
add
xchg
sub
fist
push
ins
push
loopne
stos
sbb
pop
sbb
js
jns
or
jmp
fnstenv
pop
cmovs
addr16
cs
ins
je
sbb
retf
sbb
sbb
into
or
es
aas
xchg
xchg
add
pop
pop
mov
shl
jle
inc
cmp
push
not
(bad)
lods
and
sub
nop
bound
pop
out
test
ja
cs
pop
pop
cdq
mov
dec
mov
and
fcomp
dec
cmps
ins
xchg
push
jnp
or
lds
push
sub
push
addr16
popf
xor
loopne
mov
dec
push
push
popa
add
nop
in
xor
dec
add
out
inc
call
mov
add
idiv
les
push
jo
(bad)
repz
xchg
pop
push
ins
icebp
shl
mov
cs
(bad)
adc
repnz
dec
mov
xchg
and
push
fs
icebp
sub
jecxz
(bad)
cli
push
pop
ja
seto
or
sub
in
adc
fstp
stos
fwait
sbb
(bad)
outs
xchg
je
lea
push
sub
xor
mov
xlat
pop
scas
add
add
jbe
sbb
add
mov
jb
mov
and
cmps
lods
and
xor
retf
test
in
stos
dec
ffreep
ret
ja
xchg
push
mov
jo
retf
jmp
jmp
xor
mov
add
lock
inc
pop
pop
loop
adc
test
retf
loop
lods
and
inc
mov
mov
je
xor
inc
pushf
(bad)
ins
lds
or
pop
adc
jne
mov
idiv
sub
jns
popf
hlt
mov
mov
int
xchg
addr16
push
pusha
mov
loopne
shr
bound
mov
xor
sub
xchg
shl
xchg
iret
leave
sti
mov
(bad)
and
mov
test
add
(bad)
fsubrp
leave
aaa
imul
push
sti
repnz
popa
dec
leave
test
out
or
mov
popf
dec
add
push
push
inc
gs
lock
add
pop
iret
popf
fstp
fld
ret
xchg
ja
hlt
sub
adc
xchg
test
pop
xor
adc
out
inc
jbe
adc
aam
xchg
or
imul
movs
lods
leave
xor
es
sub
int3
dec
imul
adc
push
xor
jae
neg
and
fsubr
and
push
push
nop
jbe
mov
lahf
mov
mov
xchg
adc
fld
ja
repz
sub
pop
repz
dec
adc
jle
pop
mov
xlat
xchg
inc
pop
into
dec
(bad)
shl
in
das
imul
adc
mov
in
cmp
push
mov
dec
dec
outs
jl
cmp
inc
jbe
or
jo
pop
mov
fistp
inc
sub
adc
adc
xor
adc
fucomi
loopne
das
test
pop
retf
imul
mov
sbb
jl
loope
cmp
xchg
repnz
cdq
retf
sub
or
in
sub
push
in
cmc
and
ins
adc
add
xor
mov
cmp
mov
cmp
cmc
jo
mov
sub
mov
ins
xor
iret
and
js
retf
aam
jle
js
jg
adc
jl
pop
mul
sbb
hlt
test
leave
pop
or
out
(bad)
sub
and
push
inc
inc
test
sbb
mov
xchg
cmp
sbb
xchg
lds
jecxz
fld
outs
stos
aad
jae
add
sub
fwait
fs
dec
xchg
add
mov
hlt
add
lds
fwait
xadd
gs
push
mov
aam
jnp
dec
ror
sbb
pop
out
nop
lock
mov
int
inc
mov
out
(bad)
pop
int3
push
sub
or
push
ins
or
stc
les
aas
mov
xchg
popf
fdiv
(bad)
mov
sar
dec
cmp
sub
das
jae
dec
xchg
push
xor
mov
cmp
add
and
lahf
jne
ins
fisttp
lds
iret
pop
mov
cmps
fld
adc
aaa
jne
mov
scas
pusha
(bad)
sbb
pusha
mov
inc
cmp
dec
and
stos
jo
push
lock
daa
mov
xchg
xchg
lahf
cmp
stos
movs
in
inc
xor
mov
shr
push
xchg
lock
mov
xchg
cmp
mov
add
imul
xor
movs
cmp
xor
xchg
loopne
inc
stos
iret
push
adc
xchg
in
ror
std
test
cmp
mov
js
push
(bad)
and
or
inc
iret
jmp
repz
push
rol
les
add
cmp
nop
cmps
scas
fidivr
sbb
ds
call
mov
sti
or
push
shl
inc
inc
cmc
pop
dec
(bad)
xor
sub
pop
xor
mov
pop
popf
push
mov
xor
sets
mov
imul
dec
inc
jmp
aas
push
sbb
xor
jmp
jnp
sbb
xlat
sub
sti
sti
dec
pop
movs
mov
pop
or
and
cmp
call
mov
cmp
xchg
xlat
clc
or
sub
je
int
int
shl
jg
in
dec
shl
dec
movs
cmps
ins
rcl
ds
sbb
dec
repz
inc
in
dec
shl
ins
jmp
jo
int
gs
push
sbb
and
dec
inc
mov
stos
repz
push
cwde
add
mov
xchg
stos
fsubr
cmc
es
enter
cmp
ds
out
xor
out
xor
mov
sub
dec
cmc
pop
push
ret
mov
xchg
push
shl
jg
and
cmovge
fsub
shl
mov
pop
cmp
clc
repz
mov
aad
imul
test
fist
mov
repnz
push
stos
sub
das
mov
cwde
adc
xor
and
sub
and
dec
std
pop
mov
mov
push
retf
jb
shl
in
sub
or
or
pop
and
or
es
mov
sbb
mov
(bad)
enter
xlat
popf
and
pop
jnp
jl
nop
jmp
movs
adc
inc
fcom
xchg
nop
js
sbb
into
or
add
or
ss
int
cmc
push
je
sbb
clc
iret
mov
mov
sbb
adc
sbb
in
(bad)
enter
add
ds
call
adc
inc
lods
xchg
sbb
sbb
call
xor
nop
aas
sub
rcl
pmaxub
add
icebp
repnz
scas
sti
out
ins
shr
fst
les
mov
push
addr16
mov
in
dec
test
xor
inc
cmp
pushf
ret
add
call
scas
jge
inc
mov
addr16
push
repnz
ficomp
pop
mov
sbb
leave
idiv
nop
cmp
mov
push
cmc
cs
add
aas
adc
sbb
inc
add
cmps
and
cmp
push
retf
fist
stc
cld
mov
pop
icebp
aad
dec
jae
pop
pop
fdiv
sub
mov
push
cmps
fstp
inc
pop
add
mov
bound
and
paddusb
arpl
popf
or
call
mov
inc
addr16
(bad)
sahf
xchg
enter
mov
call
into
push
in
fnsave
jns
push
xlat
stos
mov
and
pop
mov
out
pop
mov
pop
mov
mov
pop
mov
shl
shl
and
shl
cmc
shr
jg
cmp
std
pop
mov
ss
enter
(bad)
mov
lds
cmc
mov
mov
sbb
sbb
scas
cmp
mov
stc
adc
mov
fwait
or
push
(bad)
repz
ret
pop
cld
sub
ins
neg
xor
ds
add
push
call
lods
sbb
cmps
fs
jg
dec
aaa
call
jbe
mul
cmp
lahf
mov
ins
arpl
nop
push
jo
(bad)
sbb
inc
enter
movs
pusha
jae
imul
repz
mov
cwde
sub
js
fsub
cwde
out
shr
sbb
(bad)
pop
mov
add
stos
inc
sub
adc
adc
add
ror
add
mov
aaa
mov
mov
cmp
out
mov
pop
mov
adc
lahf
mov
fcmovnb
mov
jge
stc
cmp
cwde
call
jmp
sbb
hlt
pop
mov
add
int3
stos
pop
scas
xor
adc
cdq
ins
in
adc
fcomp
(bad)
out
out
rol
cwde
test
in
jae
lods
or
mov
aad
xchg
out
daa
cli
jmp
xchg
mov
jne
in
jno
jmp
rcl
jmp
cmp
xor
push
add
iret
inc
(bad)
cwde
je
or
mov
stos
jg
int3
cmp
jge
movs
popf
fisttp
fsub
(bad)
mov
imul
add
js
je
fild
pop
es
jns
adc
mov
cmp
hlt
sub
cs
inc
and
push
ins
jle
fist
pop
rcr
cmps
aas
lds
xlat
push
shl
idiv
loop
cwde
sbb
cmp
dec
mov
pop
push
xchg
add
fwait
cmp
gs
pushf
pop
pop
cwde
imul
mov
test
push
and
pop
fsub
push
push
or
js
retf
xor
xchg
sub
leave
popa
imul
call
xchg
stos
mov
sbb
js
adc
or
push
out
mov
ret
sbb
stc
movs
lock
out
fisubr
cli
sbb
call
fcmovbe
sub
xor
xor
lea
xchg
dec
cmp
aas
cmp
mov
cmc
loop
outs
(bad)
push
mov
jmp
lahf
sbb
add
pop
and
cmp
xchg
popf
pop
push
push
jnp
sbb
jae
pop
adc
push
aam
lea
mov
shr
inc
sahf
add
popf
mov
sub
jle
mov
or
xchg
sub
popf
out
clc
fild
adc
leave
fstp
dec
jne
add
add
sbb
push
mov
aam
dec
sub
pop
popa
mov
int
sub
jb
movs
es
add
addr16
sbb
call
pushf
arpl
cmp
lea
iret
pop
jle
out
stos
jns
mov
mov
or
fsub
outs
jnp
push
mov
push
out
imul
or
jmp
mov
not
into
test
loop
jle
dec
mov
dec
mov
daa
push
mov
aam
sub
(bad)
inc
add
inc
mov
rol
shr
mov
jo
(bad)
xchg
cld
cmp
add
xlat
add
dec
int3
push
ret
call
pand
and
push
cmp
call
pusha
mov
sahf
retf
jno
repz
sub
cmps
iret
(bad)
cmp
out
adc
mov
mov
cld
add
add
sbb
and
push
or
movs
ror
or
test
stos
scas
xchg
jae
lea
push
(bad)
loope
leave
jnp
cmps
pushf
cs
lea
(bad)
in
je
jae
sbb
dec
imul
imul
repz
jmp
fdiv
and
add
fiadd
and
es
jo
lock
jecxz
jg
js
or
ja
loop
enter
xor
mov
xor
mov
cmp
sbb
mov
inc
add
test
(bad)
rol
out
aam
stos
(bad)
mov
aaa
aad
mov
sub
add
cmp
sub
pusha
ds
shl
xlat
imul
mov
adc
ds
ja
sar
push
out
lahf
cdq
adc
ret
repz
(bad)
xchg
les
ret
(bad)
movs
stos
pop
fcmovnbe
jns
cmp
or
cbw
jmp
cmp
dec
xor
lods
ds
icebp
and
imul
push
xchg
ds
imul
pusha
mul
xchg
das
jmp
mov
dec
push
cdq
leave
sub
in
mov
cs
pushf
js
jge
int3
mov
mov
cmps
lea
lock
fisub
inc
pusha
into
std
in
pop
and
or
into
and
popa
pop
sub
mov
pop
push
outs
mov
jo
sbb
or
pushf
push
or
cmp
mov
add
add
aas
mov
pop
cmp
push
nop
stos
push
jmp
das
xor
das
fstp
pop
out
push
jle
add
dec
or
pop
jo
scas
dec
sub
sub
cmps
jmp
ss
int
dec
(bad)
fnsave
fs
movs
out
lds
aaa
pusha
lods
add
in
jp
rol
pop
retf
daa
fcom
or
scas
out
repz
imul
pop
mov
mov
dec
lods
mov
test
sub
inc
rcl
int
hlt
fs
outs
mov
repz
add
push
adc
popf
ss
inc
iret
dec
lods
xor
(bad)
ffreep
fild
in
in
cdq
es
dec
dec
sbb
stos
xor
test
fimul
mov
push
das
mov
shld
shr
add
add
push
jno
jo
shl
lea
dec
cs
pop
add
data16
jl
xchg
out
jecxz
das
outs
movs
ss
ror
sbb
fisub
repnz
loop
repz
sbb
inc
sbb
cmps
aad
or
xchg
pop
sbb
push
test
and
adc
jmp
lods
jecxz
scas
lea
jge
push
daa
jb
jmp
inc
loopne
and
cmps
jns
add
pop
xor
jae
ins
ret
dec
ins
sub
jl
mov
inc
stc
rcl
mov
fisub
pop
pop
loopne
ds
movs
push
mov
or
(bad)
or
push
inc
xor
and
mov
hlt
fidiv
lea
add
push
mov
sub
mov
mov
sar
(bad)
jno
mov
push
stos
lock
push
dec
lds
pop
sub
or
fbstp
mov
stos
into
in
hlt
in
adc
sar
mov
into
and
and
out
push
mov
stc
imul
fs
jg
xchg
rol
add
gs
sbb
xchg
jg
sub
aaa
popa
loopne
fimul
out
out
mov
jae
xchg
test
pop
adc
mov
or
cmps
popf
mov
mov
in
cmps
sar
pop
inc
rol
and
scas
dec
in
pop
mov
xchg
mov
pop
adc
cmp
icebp
sbb
shl
pop
loopne
pop
mov
sub
dec
ja
cdq
imul
add
or
sub
cmp
xchg
or
and
(bad)
sub
push
sub
call
retf
retf
scas
loopne
test
loopne
xor
call
cwde
shl
xchg
and
xchg
or
test
pop
push
das
add
cwde
pop
jns
xor
push
inc
retf
aaa
fcomp
sub
jp
pop
rcr
jmp
sbb
push
std
ins
arpl
shl
aas
push
ret
xor
out
(bad)
outs
cmc
rcr
arpl
jo
scas
push
mov
mov
jle
mov
adc
xor
mov
bound
push
stos
pop
scas
test
mov
jmp
xchg
loope
add
cmp
(bad)
ficom
popa
ret
aas
jge
cmp
xchg
adc
push
nop
sti
(bad)
sti
out
sbb
xchg
sysenter
jnp
in
cs
test
jbe
push
adc
js
push
pop
call
jns
gs
xchg
mov
lahf
lahf
pop
xchg
push
push
sbb
dec
adc
addr16
dec
test
sbb
cmp
pop
xchg
js
jle
jno
and
sub
idiv
das
movs
stos
shl
jmp
es
aam
add
stos
mov
push
jge
push
mov
test
or
or
mov
sbb
sub
mov
push
loop
jmp
out
rcl
(bad)
in
mov
mov
call
fcmove
add
xchg
psubd
adc
mov
dec
pop
pop
inc
stos
mov
jno
and
into
into
arpl
pop
add
pop
lds
pop
dec
or
mov
retf
xchg
sbb
fisttp
int3
int3
pop
out
out
add
add
cwde
push
push
sahf
mov
aam
adc
inc
sub
jne
mov
or
outs
cld
aaa
lahf
outs
xchg
xchg
mov
push
push
pop
in
jbe
loopne
in
loop
inc
sub
add
dec
ror
fwait
or
cdq
cwde
jbe
push
(bad)
dec
in
xor
cmp
loope
cmc
mov
mov
mov
stos
lods
rcl
test
or
leave
xor
mov
add
pop
sbb
or
xchg
inc
or
push
mov
popf
mov
leave
call
out
jmp
rdtsc
add
lahf
dec
and
movs
lea
cmp
xor
fs
stc
fld
mov
push
xchg
(bad)
cwde
jle
jmp
xchg
mov
ret
(bad)
pop
lahf
jmp
aam
in
push
fdivr
lods
ror
inc
cmp
daa
test
not
fwait
movs
mov
je
or
dec
dec
test
pushf
je
adc
jecxz
fadd
pop
push
cdq
mov
jmp
leave
leave
(bad)
adc
mov
or
data16
xchg
or
pusha
std
lods
fisttp
pop
mov
mov
push
sbb
das
stos
dec
pop
pop
jl
mov
push
and
lock
test
xor
jge
jns
enter
mov
inc
popf
jp
ret
push
aaa
xchg
xor
retf
push
popf
jle
in
rcl
icebp
jle
add
xchg
sub
cdq
sahf
sbb
xor
test
(bad)
jbe
jno
push
xchg
xchg
xor
not
xor
mov
sub
or
jae
mov
or
nop
pop
push
shl
add
mov
hlt
mov
pushf
cld
mov
(bad)
lock
inc
ds
imul
jmp
outs
mov
xor
ret
push
push
loopne
es
in
or
xor
inc
ds
lods
das
jns
shl
idiv
cld
(bad)
loop
inc
mov
div
pop
loopne
retf
(bad)
popf
imul
jae
test
aad
popa
sahf
arpl
push
pop
inc
pop
cmps
rcr
stos
popf
gs
bound
sbb
cmps
test
sti
xchg
push
cmp
mov
mov
and
inc
fnop
inc
and
int
in
shl
or
add
add
dec
loop
push
pop
nop
inc
lock
lahf
out
movs
test
push
jmp
clc
test
xor
fistp
sub
cmps
cmp
dec
daa
pop
cwde
push
imul
inc
(bad)
int
mov
scas
in
shr
les
out
or
(bad)
and
adc
jecxz
lods
popa
cmp
daa
xchg
mov
pushf
sti
cmp
iret
cmp
fisttp
bound
stc
cmps
cld
cmps
pop
adc
(bad)
sub
imul
or
or
jge
icebp
sub
aam
add
clc
cmp
jmp
jb
cdq
jae
mov
xor
adc
add
or
(bad)
mov
retf
sub
and
sub
and
pusha
fst
lods
sbb
push
test
inc
stc
outs
jp
rol
lods
cmp
push
xor
dec
sbb
cmp
leave
stc
adc
cld
push
hlt
dec
adc
and
push
adc
ret
lock
addr16
pop
test
and
aad
mov
pop
xchg
jmp
popf
test
sbb
xor
fnstenv
adc
pop
rcl
icebp
adc
mov
or
lahf
repz
adc
add
mov
into
shl
mov
push
lods
xor
rcl
outs
test
retf
dec
into
inc
mov
std
mov
cmc
les
xchg
add
sbb
xchg
test
push
xchg
inc
leave
call
jge
xchg
aam
or
adc
in
iret
adc
inc
or
cmps
push
fwait
call
jge
xor
outs
mov
cmp
repz
imul
or
sub
xor
or
cli
sbb
imul
sub
and
mov
ds
jp
sub
retf
mov
or
dec
inc
pop
shr
xchg
sub
and
pop
push
hlt
cmp
sbb
sub
loope
mov
ret
pop
and
in
lock
call
xor
push
cs
test
pop
jmp
adc
cwde
cld
xchg
outs
push
mov
inc
mov
sub
jb
rcl
cli
(bad)
adc
(bad)
xchg
sar
mov
add
push
xchg
cmp
imul
mov
inc
out
add
sbb
mov
adc
scas
jg
sbb
xchg
mov
rcr
pushf
add
xchg
mov
jge
ins
nop
in
mov
lds
xchg
mov
div
lods
add
mov
ja
in
loop
cwde
add
imul
inc
xrelease
into
push
in
pop
sub
push
jg
imul
mov
pop
jmp
mov
mov
rcr
push
int3
leave
int3
add
mov
xor
jmp
cmp
push
xor
jp
xchg
dec
aas
ret
xlat
xor
not
loop
(bad)
jmp
fdiv
aas
push
pop
jmp
stc
(bad)
ror
leave
add
jae
sub
mov
mov
retf
adc
sub
pop
stc
or
mov
popa
arpl
dec
fdivrp
stc
xchg
outs
and
mov
fwait
xor
jp
adc
shr
retf
cmp
push
add
sub
and
sar
icebp
icebp
cli
pop
sbb
leave
push
pusha
leave
(bad)
ss
mov
cs
xchg
or
mov
in
rol
pop
int
cmp
addr16
mov
mov
cmp
pop
hlt
sbb
jno
and
retf
test
dec
es
and
cmp
(bad)
out
shr
call
cli
mov
js
push
ror
mov
mov
sub
mov
fstp
icebp
in
hlt
xor
cmps
mov
sahf
pop
push
gs
js
dec
stos
push
sub
retf
or
jg
mov
cmps
pushf
mov
xchg
mov
ins
push
mul
in
cmp
push
and
pushf
xor
sbb
dec
mov
aaa
xlat
cmp
dec
ror
ficom
jb
adc
das
mov
pminub
js
inc
daa
pop
mov
or
sub
ret
data16
movs
add
push
sbb
inc
cmp
cmp
push
rol
jle
jg
cmp
inc
mov
call
add
cmp
pop
rol
sar
arpl
sbb
jg
jne
mov
stos
mov
pushf
jl
xchg
fimul
fisub
mov
jecxz
mov
dec
pop
inc
add
loopne
and
cmps
mov
push
cli
nop
cmps
inc
bound
pop
test
jns
jb
scas
mov
loop
and
jmp
in
mov
hlt
cmp
call
pop
or
mov
shr
outs
pop
mov
icebp
(bad)
in
cmp
bound
rol
cmps
xor
(bad)
mov
ds
je
inc
dec
fadd
popf
leave
mov
mov
or
push
mov
jge
push
cmp
jge
ins
imul
adc
push
pop
adc
add
jl
pop
retf
ret
cmp
cmp
gs
shr
mov
sbb
push
icebp
call
adc
mov
jl
test
add
stos
jmp
xor
es
add
retf
adc
mov
jp
pop
daa
xchg
lods
adc
xor
add
adc
fs
push
add
cmps
push
jmp
mov
push
shr
gs
sar
add
xor
sub
int
daa
repnz
in
jmp
popf
rcl
jmp
rol
les
mov
movs
mov
and
(bad)
retf
stos
stos
pop
or
add
adc
push
mov
jbe
je
pop
pop
nop
into
cs
int3
cmc
push
mul
xchg
test
bound
leave
sub
jl
dec
call
call
mov
pusha
and
(bad)
sbb
sbb
sub
xchg
sub
inc
lea
es
xor
(bad)
fiadd
mov
hlt
pop
jmp
nop
jns
jmp
bound
pop
pusha
nop
scas
xchg
(bad)
test
mov
das
jo
fbstp
mov
add
hlt
cwde
mov
and
test
in
and
xlat
cwde
cwde
adc
popa
jp
je
and
add
mov
add
in
enter
xlat
jno
rcl
int3
popf
test
(bad)
push
out
mov
jmp
aas
test
inc
and
or
(bad)
adc
cwde
adc
add
pop
mul
sbb
xchg
push
imul
pop
inc
(bad)
test
jecxz
mov
push
fnstcw
mov
cmps
and
das
in
mov
(bad)
dec
add
xchg
mov
lahf
dec
inc
loope
pop
psubsb
es
sbb
mov
mov
xchg
scas
mov
and
and
daa
pop
sbb
xchg
fisub
leave
xor
push
inc
in
(bad)
cwde
pop
int3
xchg
xor
push
std
and
xor
pop
add
in
loopne
mov
stos
xor
mov
jo
clc
xor
call
cmc
lahf
(bad)
pop
xchg
aam
out
inc
pusha
adc
leave
cmps
mov
adc
pop
cld
jecxz
cmc
jns
scas
xchg
movs
add
xchg
sbb
jecxz
and
add
cli
(bad)
dec
aaa
dec
pop
cmc
sti
or
rol
fsubr
out
cmp
mov
jle
and
push
scas
sar
bound
test
add
fmul
add
leave
xor
push
lds
push
mov
cmp
mov
mov
inc
add
pusha
aam
rcr
jp
ds
dec
movs
mov
ror
aad
(bad)
sub
addr16
sti
pop
inc
push
lods
arpl
ffree
mov
add
dec
fisttp
sahf
retf
mov
mov
push
push
sub
add
iret
xor
mov
cwde
es
cli
push
mov
sub
cmp
ins
enter
fstp
cwde
jg
and
rcr
retf
stos
sbb
dec
xor
mov
in
mov
mov
out
mov
fcomi
jns
mov
sbb
pop
or
out
and
hlt
mov
nop
(bad)
mov
sbb
mov
jno
mov
jmp
das
aam
lahf
adc
imul
mov
jo
mov
(bad)
cmp
in
dec
(bad)
lds
jg
mov
and
movs
hlt
mov
cmp
rcl
popf
jno
inc
sbb
cmc
mov
pusha
push
fcom
sar
mov
sbb
leavew
mov
mov
call
cmp
dec
pop
dec
xor
imul
pushf
sbb
mov
lods
call
push
mov
pop
adc
sbb
sbb
pop
push
(bad)
xchg
jno
lahf
push
mov
(bad)
loop
or
dec
ror
adc
lods
or
call
fld
dec
mov
in
push
pop
stos
or
sbb
mov
mov
clc
(bad)
jmp
adc
enter
or
jmp
cld
ret
inc
cdq
pop
jl
nop
outs
iret
stos
mov
and
sbb
jecxz
rcl
in
pop
jbe
inc
daa
fcomp
scas
add
cdq
repz
arpl
sbb
pop
pop
xor
xor
vpaddq
dec
ja
ss
jl
jbe
je
sbb
cwde
nop
int3
mov
jmp
repz
cli
sar
es
out
pop
dec
data16
mov
bound
leave
push
inc
sbb
jmp
ins
popa
mov
aaa
inc
movs
xlat
xor
sbb
push
test
aas
fdivr
arpl
mov
sbb
push
sbb
jo
sbb
or
push
xchg
push
and
imul
stos
add
ss
js
mov
mov
(bad)
fidivr
sti
pusha
jae
loope
adc
mov
out
stos
(bad)
pop
and
and
jbe
xor
lea
mov
aam
push
outs
adc
ins
sahf
cmp
retf
pop
inc
cmp
adc
adc
mov
clc
fist
(bad)
addps
cli
pop
loope
sbb
inc
pushf
call
shl
or
xor
add
scas
or
ret
add
data16
sahf
cs
fmul
cmc
hlt
jmp
ds
xchg
mov
push
add
fs
adc
in
fnstenv
cmp
aam
fistp
mov
xchg
xor
sub
sbb
lea
data16
outs
or
mov
and
cmps
xlat
cmp
jp
cmp
and
sub
and
das
sub
clc
mov
jmp
dec
out
inc
(bad)
stc
cmp
xchg
icebp
in
movd
fs
shr
rol
cmp
push
dec
js
push
mov
dec
out
je
stos
cmc
cmp
ret
dec
dec
inc
gs
ret
cmp
inc
pop
jb
adc
jo
sar
inc
into
idiv
mov
retf
test
adc
or
adc
mov
add
les
jmp
hlt
push
rcl
test
test
or
mov
sub
clc
jo
loop
pop
call
xchg
pushf
inc
fs
adc
sbb
ja
xor
jb
mov
into
ins
and
outs
adc
pusha
jne
push
loope
(bad)
pop
dec
mov
pop
push
mov
sbb
add
mov
push
xchg
movs
xor
pop
mov
clc
repz
jecxz
jno
sti
jb
iret
(bad)
outs
sbb
inc
in
lds
xchg
jecxz
popa
xchg
call
cld
add
jmp
aad
test
pop
pop
(bad)
gs
cmps
jp
cmp
push
scas
mov
and
mov
xchg
jo
mov
icebp
retf
adc
test
or
or
push
fdivr
mov
lea
int3
aad
mov
dec
mov
lds
adc
outs
pop
loop
xchg
jge
mov
es
test
int3
aas
dec
cmp
xor
aaa
sbb
dec
push
xor
sub
cmc
push
ds
ror
ret
lods
jo
(bad)
hlt
mov
adc
call
mov
xchg
repnz
push
xchg
retf
sahf
xlat
scas
dec
hlt
push
pop
mov
inc
shr
inc
pusha
add
je
sbb
xchg
ja
fwait
jecxz
mov
inc
or
mov
cmp
and
jle
pop
mov
cmp
(bad)
push
adc
mov
jae
inc
mov
mov
pand
mov
jo
and
aas
xlat
adc
push
ret
stos
dec
bound
ss
cmps
dec
jmp
mov
scas
cdq
cmc
stos
mov
bound
lahf
dec
jo
retf
pop
scas
popf
sbb
adc
fucom
add
mov
jecxz
mov
sti
sbb
cmp
mov
jbe
jo
scas
lea
(bad)
shl
lods
and
xchg
and
add
int
jbe
icebp
xor
retf
sbb
pushf
sti
loopne
movs
sub
adc
cs
scas
lds
pop
sbb
out
fs
xchg
test
or
mov
nop
dec
adc
leave
into
das
mov
cmp
mov
ins
cmp
aad
sbb
in
out
lods
not
ins
dec
addr16
in
(bad)
cld
icebp
xchg
dec
ins
repnz
xchg
daa
jnp
icebp
xchg
sub
loopne
(bad)
retf
pusha
outs
retf
xchg
cld
mov
popa
test
es
lods
adc
int3
inc
sub
loop
(bad)
aas
movups
push
cmp
xchg
add
jno
rcr
les
stos
rcr
and
sbb
push
push
inc
daa
loopne
ja
pop
pop
xchg
wbinvd
and
push
fcomi
popf
stos
push
mov
mov
or
and
loop
mov
pushf
mov
sar
rcl
xchg
les
outs
out
adc
cmps
stos
cs
pop
nop
inc
(bad)
pusha
(bad)
je
sub
loop
loop
lods
cmp
ds
(bad)
aas
test
out
lea
fs
jl
fimul
ss
(bad)
push
mov
int3
adc
enter
(bad)
push
mov
mov
loop
fiadd
sti
pop
add
(bad)
mov
sbb
lea
jbe
jle
in
daa
cmc
les
ss
scas
shr
mov
adc
icebp
pop
pop
or
jge
fistp
lods
pushf
add
xchg
sbb
into
pop
sub
arpl
mov
sub
into
or
(bad)
popa
call
sar
fdivr
adc
stc
adc
jns
jecxz
popa
or
ja
into
xchg
mov
loopne
ins
pop
cmps
in
(bad)
and
cli
inc
jmp
aas
inc
test
shr
(bad)
or
rcr
sbb
mov
sub
pop
pop
cmp
in
(bad)
xor
xchg
cwde
pop
inc
stos
in
push
mov
or
jle
pusha
or
inc
scas
or
cmp
add
lods
sahf
(bad)
jecxz
hlt
outs
cmp
arpl
xlat
hlt
xor
sbb
test
inc
mov
loop
cmp
out
mov
jle
popa
jmp
mov
sub
mov
arpl
rcr
push
push
aam
repz
cmc
jg
and
xor
dec
fs
sub
and
jae
inc
ja
daa
fwait
sub
push
jge
jbe
mov
cmp
jge
push
cdq
ret
punpckhbw
pop
inc
mov
popf
push
je
xor
imul
out
push
aaa
stos
and
sbb
sbb
jle
nop
movs
mov
mov
pop
mov
leave
pop
test
sbb
dec
ss
mov
jmp
xchg
xor
mov
test
rol
mov
and
dec
int
cmp
xor
aaa
dec
jle
ja
push
loop
xchg
mov
xchg
jecxz
inc
dec
add
cmp
mov
lea
push
pop
adc
mov
aas
aaa
push
sub
data16
mov
scas
cmp
fidivr
iret
jle
adc
call
sar
(bad)
push
mov
inc
cmp
push
mov
dec
cld
push
sar
add
loopne
std
outs
push
or
arpl
dec
dec
or
xor
cmp
rcr
in
inc
pop
(bad)
out
xor
pop
out
mov
mov
aam
je
icebp
(bad)
mov
loop
loope
add
push
jmp
ret
pop
push
push
out
or
mov
popa
jb
and
jmp
lock
pop
imul
dec
sub
add
sbb
and
ret
sar
push
xor
xchg
pop
shl
add
adc
dec
(bad)
aam
mov
into
int3
cmp
in
jo
sub
dec
jb
cmc
sbb
scas
icebp
inc
nop
and
mov
or
das
adc
rcl
xchg
imul
addr16
push
(bad)
ins
outs
rcl
add
jb
cmp
mov
bound
jecxz
test
jmp
push
arpl
adc
inc
add
adc
pop
addr16
mov
inc
hlt
pop
pop
les
and
push
pop
cmp
lods
repz
into
inc
cmps
or
push
dec
aaa
shr
or
(bad)
adc
ficom
rcl
xchg
data16
sti
(bad)
mov
push
mov
and
inc
out
lods
mov
ror
push
mov
test
or
jl
fcom
les
das
mov
cld
ja
sub
sub
push
stos
(bad)
and
cwde
ds
outs
lahf
dec
cli
sbb
and
aam
pop
mov
mov
inc
and
sahf
inc
out
push
in
(bad)
xor
shl
pop
mov
outs
xor
adc
xchg
pusha
ss
xchg
cwde
xchg
nop
adc
enter
out
xor
inc
repz
lods
lods
jo
stos
movs
jns
test
ins
(bad)
bound
push
jmp
call
xor
mov
(bad)
retf
popf
add
test
jmp
add
loope
ret
sub
(bad)
das
xchg
ds
jp
out
adc
lods
push
lahf
pop
fld
sbb
(bad)
repz
mov
lods
or
cmp
push
mov
xchg
xchg
jne
pop
or
or
mov
rol
mov
js
pop
imul
add
sbb
in
inc
jp
mov
stos
sbb
test
(bad)
fild
pop
xchg
pop
shl
push
cmp
pop
into
data16
les
dec
jae
cmp
add
and
sbb
jecxz
data16
cmp
and
xor
jp
pop
adc
imul
dec
test
push
inc
sar
rcr
or
jne
fwait
jns
sbb
push
cmp
and
pop
dec
dec
sahf
mov
push
ret
cmp
das
mov
call
daa
cmp
push
fwait
(bad)
dec
mov
in
push
jb
es
fisttp
test
add
cmps
in
stos
mov
ss
cs
call
mov
push
ins
push
jae
stos
sub
(bad)
call
bound
jge
push
call
movs
mov
jno
scas
or
cld
inc
xchg
iret
pop
mov
xchg
aaa
inc
jle
rcl
xor
cmp
fmul
scas
loope
push
in
into
mov
pop
loop
lock
retf
xchg
test
or
mov
mov
xchg
out
jb
loopne
test
cli
jae
push
in
movs
sti
out
mov
push
cld
push
cmps
jmp
dec
and
jae
push
push
jno
mov
mov
xor
loope
jmp
pop
lods
pop
sbb
jb
cld
daa
aam
inc
mov
call
popa
cmp
push
test
or
pop
push
fistp
out
dec
(bad)
dec
mov
(bad)
scas
pop
push
mov
loopne
shl
or
mov
inc
pusha
jnp
test
das
sub
daa
inc
pusha
enter
out
add
cwde
in
je
dec
mov
inc
sub
push
arpl
cmp
ret
scas
dec
leave
mov
push
scas
or
pushf
inc
mov
or
mov
jge
clc
cdq
sub
and
imul
dec
cmp
retf
mov
cmp
cwde
cwde
dec
sub
aaa
ss
mov
and
out
cmp
adc
inc
xchg
inc
sbb
aaa
pop
add
jno
cmp
inc
push
or
fidivr
imul
mov
test
daa
or
cmp
mov
pop
leave
jmp
fdiv
adc
ins
dec
and
popa
popf
mov
jmp
pop
sar
pop
jecxz
daa
add
div
enter
push
sahf
fisub
(bad)
call
or
call
dec
arpl
repnz
es
shl
arpl
cmp
mov
sub
push
sti
mov
loopne
mov
adc
pop
stc
ins
mov
jg
xor
dec
sub
sbb
out
sbb
stos
shr
xor
stos
pop
adc
fstp
mov
int
mov
xor
ja
cmp
jae
jmp
ror
mov
dec
mov
push
pop
mov
adc
ror
pop
mov
arpl
repnz
retf
not
mov
imul
xlat
xchg
xchg
inc
jns
push
cmp
mov
div
cs
sbb
xor
jne
cmp
std
lock
sub
push
rcr
pop
icebp
sti
push
adc
inc
jne
int3
dec
mov
das
adc
pop
xor
out
xchg
cli
xor
sar
and
scas
lock
test
mov
sti
adc
and
out
mov
popf
xor
xor
pop
jmp
inc
lock
pop
jecxz
loopne
cmp
(bad)
out
dec
adc
(bad)
push
sbb
inc
sar
push
or
daa
dec
dec
mov
pop
rcl
or
cmp
enter
je
ss
push
cs
push
sbb
jg
pop
add
dec
sbb
repz
add
aas
mov
movhps
sbb
(bad)
jmp
shr
test
or
movs
mov
rcr
in
adc
push
imul
(bad)
dec
add
push
fbld
nop
cld
in
mov
lds
add
(bad)
mov
imul
or
imul
(bad)
in
ins
inc
les
ins
inc
mov
cmp
mov
fiadd
dec
or
xchg
(bad)
aad
mov
cmps
adc
pop
ss
cmp
pop
cwde
add
repnz
dec
clc
mov
inc
and
or
js
sub
outs
mov
push
out
jle
mov
mov
cmp
sub
cmp
adc
lea
popa
ja
mov
imul
scas
jle
pusha
or
pop
mov
mov
loopne
rol
mov
xor
js
iret
pop
push
pop
and
neg
std
pushf
xor
ffreep
xor
loop
sahf
inc
fcom
pop
outs
pop
pop
test
inc
pusha
das
dec
rol
inc
cmp
mov
xor
mov
popa
mov
fs
mov
cdq
sbb
in
test
fs
mov
and
aas
pop
jmp
mov
sbb
cmp
mov
(bad)
xchg
or
sbb
jnp
mov
pop
sbb
lock
cdq
mov
test
sbb
pop
jns
call
pop
outs
xchg
clc
add
(bad)
dec
ins
adc
jb
int3
push
cdq
cmps
loopne
push
add
cmp
dec
jg
mov
fcmovb
dec
mov
push
mov
stc
dec
mov
push
mov
cmp
xchg
mov
xchg
jp
movs
scas
xchg
jo
int
dec
jne
repnz
movs
sub
stc
mov
dec
ficomp
dec
data16
sub
xchg
ret
jns
in
lahf
and
add
daa
fst
nop
and
mov
xchg
pop
call
mov
cmp
xor
mov
add
jle
and
inc
mov
ror
pop
cmp
sbb
mov
jp
iret
sbb
inc
mov
or
arpl
loop
dec
cmc
xor
pop
mov
int3
jb
jl
sbb
jge
pop
imul
call
cmc
stos
mov
loop
fdivr
outs
mov
dec
inc
push
imul
stos
push
std
and
loop
sub
ds
jnp
xor
jg
push
mov
mov
xchg
and
out
push
data16
btc
inc
xchg
jns
fistp
xlat
(bad)
push
push
int3
mov
stos
mov
je
(bad)
mov
mov
not
neg
popa
jno
cld
inc
icebp
addr16
je
ins
lea
mul
rcr
jb
call
xchg
lahf
sub
addr16
mov
mov
pop
loope
ret
std
adc
sbb
fbstp
data16
lods
ins
aaa
xchg
ror
and
imul
stos
je
or
jmp
outs
cld
cld
bound
jp
std
mov
ds
(bad)
adc
lock
jl
push
sub
mov
inc
adc
or
xor
cmps
xchg
lds
adc
fldenv
shl
out
int3
push
outs
pop
mov
popa
test
in
mov
add
push
push
ins
fcom
ror
jnp
cdq
cmp
stos
inc
sti
fucompp
mov
add
or
ins
stc
and
inc
mov
nop
xor
add
fs
sbb
push
fld
div
bound
enter
add
test
ficomp
ret
das
ds
fs
movs
mov
(bad)
fdiv
stos
push
xlat
cmc
(bad)
jo
jp
clc
jmp
jle
js
cdq
mov
pop
sub
bound
ins
imul
cld
pop
pop
sub
and
sbb
push
in
dec
mov
sub
shr
and
int3
cld
xchg
add
dec
sbb
inc
mov
xchg
add
sub
sub
adc
mov
mov
imul
dec
mov
mov
fimul
arpl
call
pop
pop
sbb
bnd
paddq
add
mov
test
or
mov
dec
fst
inc
or
xchg
and
xchg
mov
imul
mov
jge
jmp
es
into
cs
inc
lods
fcomp
cdq
push
jecxz
jle
enter
or
cmp
mov
pop
mov
or
jnp
cmps
inc
lods
and
mov
cmp
inc
fiadd
pop
add
jbe
clc
xor
cli
xor
push
dec
dec
dec
aas
lock
or
jmp
lods
loop
gs
loop
push
enter
sub
jmp
leave
inc
loop
mov
push
cwde
pusha
pop
cmp
cmp
sub
push
int
cli
pop
jecxz
mov
lea
sub
xor
movs
ss
clc
xor
adc
push
into
cmc
xchg
lea
std
cmps
out
call
and
es
push
adc
neg
cmc
sub
pop
fnstenv
mov
std
scas
das
dec
retf
gs
or
out
mov
add
lds
push
outs
xor
adc
dec
push
scas
cmp
mov
push
movs
(bad)
or
mov
(bad)
sub
xchg
outs
xchg
call
in
sub
jecxz
jmp
xlat
imul
lahf
hlt
mov
sti
push
call
je
imul
shr
xchg
(bad)
adc
lods
pop
add
ins
cli
cmp
inc
pop
mov
aaa
xchg
imul
and
pusha
jns
mov
or
daa
adc
movs
or
dec
mov
inc
jb
js
icebp
cli
rol
and
mov
ret
jnp
lods
ins
jmp
cdq
shl
ins
cmps
pop
cs
mov
test
sbb
add
fdiv
dec
adc
jne
arpl
loopne
jno
add
test
call
(bad)
adc
outs
push
mov
(bad)
rol
call
dec
je
sti
cli
ret
out
jl
test
xlat
aam
and
xlat
aaa
inc
inc
sbb
push
push
stc
mov
push
aaa
in
loop
inc
icebp
mov
or
add
dec
pop
push
adc
or
sar
cmp
leave
add
test
dec
imul
cmp
ss
fld
and
test
and
push
enter
xchg
in
inc
xchg
mov
pop
iret
jo
xchg
push
iret
js
sub
mov
loop
sar
stos
cmp
adc
scas
aad
inc
repz
lahf
or
inc
jne
mov
fwait
sbb
loopne
js
test
mov
add
(bad)
mov
gs
dec
rol
scas
mov
push
aas
lock
movs
stos
(bad)
mov
(bad)
fs
jecxz
mov
cmp
mov
inc
movs
je
call
jle
xlat
cs
mov
cwde
mov
imul
push
arpl
or
push
lahf
jnp
mul
enter
push
cmp
xchg
xchg
inc
stos
test
mov
lods
ss
mov
and
or
stos
fbld
repnz
lods
jmp
fst
or
xor
fst
enter
dec
xchg
sbb
adc
or
mov
sub
push
mov
not
test
sbb
or
rcl
sbb
movs
cmps
adc
fnstenv
ret
mul
or
push
inc
cmc
inc
mov
mov
inc
das
dec
and
adc
sbb
xor
out
mov
mov
jne
scas
mov
sub
fist
xchg
push
and
outs
and
call
mov
ret
or
lods
popa
fild
jecxz
jmp
mov
std
pop
in
ds
test
in
xor
mov
ret
sub
add
(bad)
sub
sub
aaa
inc
mov
inc
aad
loope
sar
scas
das
repz
adc
ja
jge
fld
mov
ror
pop
dec
adc
sahf
jae
and
cmp
jg
rcr
and
ss
and
mov
repnz
out
pop
xor
add
fist
lods
jmp
aam
test
jecxz
lahf
jo
push
daa
dec
pop
dec
in
and
dec
mov
adc
icebp
push
jmp
cmps
sar
dec
cmp
daa
xchg
repz
push
movs
int3
scas
std
popf
jmp
inc
dec
jo
push
adc
cmp
mov
pop
sbb
out
repz
add
les
jl
jge
add
(bad)
ret
shl
loopne
idiv
fimul
mov
retf
cwde
iret
inc
cmp
pop
arpl
(bad)
cmps
lods
sub
sahf
leave
out
aas
fstp
mov
jmp
cli
popa
jg
stc
xor
pushf
ja
(bad)
xchg
pop
addr16
sbb
mov
sub
pop
push
mov
push
pop
add
lds
lods
movs
test
cwde
xchg
mov
sbb
call
add
stos
xchg
ds
add
pop
mov
ror
ret
adc
in
xor
rcr
push
mov
sbb
mov
add
scas
add
pusha
cmp
(bad)
loope
jl
mov
sbb
sbb
adc
mov
repnz
test
xor
inc
mov
in
cmps
add
xlat
xchg
loope
xor
mov
loope
call
add
or
sub
jne
jge
js
retf
inc
xchg
jbe
retf
pop
std
sti
adc
repnz
push
xor
pop
scas
aad
test
sub
inc
add
adc
mov
push
xlat
inc
lds
and
adc
bnd
mov
sbb
push
jno
not
loope
into
pusha
xor
or
fs
sbb
data16
cmc
out
test
shr
sub
and
pop
aaa
test
push
xchg
xor
inc
jmp
scas
aas
pop
push
fimul
fisttp
mov
push
sbb
loopne
pop
jl
stc
cld
pop
ss
cmp
cli
aas
outs
rol
sbb
das
fdivr
cmps
jmp
mov
test
(bad)
push
rol
pop
sbb
in
xchg
repz
sbb
sub
xor
popa
(bad)
inc
jge
aaa
stc
dec
add
(bad)
lock
dec
loop
jecxz
jp
test
das
ret
or
pop
jecxz
pop
in
aam
jb
fist
mov
or
(bad)
jp
mov
cmp
sti
bswap
push
or
(bad)
adc
pushf
std
nop
and
aam
jmp
dec
repnz
in
cmp
fisttp
push
(bad)
xor
fldenv
hlt
dec
xchg
or
jmp
adc
dec
inc
sbb
push
cmps
ins
push
jmp
xor
hlt
adc
je
cwde
inc
popa
push
hlt
mov
xchg
or
push
xchg
mov
ret
imul
in
iret
outs
ror
call
jno
xor
xchg
rcr
jbe
xchg
mov
pushf
sub
sub
cmp
jp
mov
adc
imul
pop
std
lods
pop
shl
icebp
imul
aaa
pop
aad
fimul
mov
adc
sub
sub
mov
lods
loop
mov
inc
dec
and
out
jmp
popa
pop
fmul
mov
scas
imul
xor
push
dec
outs
xchg
stc
int3
les
in
cmc
test
cmc
pop
push
popa
inc
nop
mov
pop
adc
lods
div
hlt
xor
sbb
xchg
ror
and
mov
inc
sub
arpl
std
div
out
loope
js
popf
lock
pop
aam
std
mov
icebp
or
call
fstp
dec
sbb
cdq
sub
pop
adc
mov
jns
aas
sar
cmp
inc
shl
jns
mov
cmp
jno
jmp
push
fs
cdq
ja
mov
mov
fild
or
inc
rol
repz
fild
cmp
adc
out
shl
sub
stos
sbb
jne
push
add
(bad)
inc
jmp
lods
pop
xchg
jl
mov
xchg
dec
jno
scas
xchg
fcom
jae
daa
fldcw
mov
fist
pop
lock
sbb
sbb
iret
ins
add
je
jl
cmp
inc
in
imul
cmps
mov
cld
scas
pop
mov
and
(bad)
nop
mov
stos
cmp
movs
mov
fs
loope
xlat
add
sub
adc
jmp
stos
xchg
outs
jmp
xor
mov
lahf
dec
fsub
pop
xlat
push
mov
push
call
cmp
cmp
call
addr16
test
xchg
repnz
push
and
(bad)
and
mov
jle
inc
(bad)
scas
xor
stc
je
dec
ror
push
popf
lahf
scas
xor
rcr
ins
add
xchg
or
mov
iret
mov
lods
shr
push
pop
xor
popa
call
shl
mov
repnz
jg
jg
stos
xchg
cmps
mov
inc
ja
inc
add
rcr
push
xchg
sub
and
inc
test
xor
or
mov
adc
shl
jecxz
(bad)
inc
xchg
mov
pop
popf
pushf
add
and
sbb
add
or
mov
fldcw
jmp
je
xor
std
dec
cmp
shl
jp
test
jmp
or
dec
scas
push
mov
push
push
test
push
lods
adc
sahf
sub
enter
pop
jmp
add
jbe
cmc
test
stos
dec
(bad)
int3
dec
jp
dec
adc
aad
pop
outs
mov
xchg
dec
add
ret
js
xchg
test
fistp
movs
int3
in
add
shr
test
int
js
adc
mov
mov
call
and
dec
xor
mov
in
pop
mov
push
(bad)
mov
or
xchg
daa
cmps
rcr
dec
retf
sbb
into
sbb
inc
je
sbb
sub
(bad)
mov
arpl
fsubr
(bad)
inc
enter
shl
fisub
imul
test
test
pop
adc
push
popa
hlt
mov
cmp
(bad)
cwde
(bad)
aad
loopne
sub
or
jne
jle
aaa
cdq
cld
cmp
sbb
nop
mov
pop
cmps
sbb
imul
xchg
retf
imul
(bad)
aas
pop
cmp
je
in
dec
call
sbb
sub
push
mov
mov
div
ret
mov
clc
cmps
or
jnp
dec
or
pusha
jb
cmp
jge
sub
sbb
dec
movs
mov
aas
retf
add
cmp
sti
mov
xchg
enter
call
leave
pop
enter
lea
xchg
dec
sub
mov
xchg
add
aaa
mov
pop
rol
movs
push
arpl
push
push
push
clc
pop
rol
out
and
jns
mov
sbb
scas
loop
fisubr
pop
ins
fcom
(bad)
cmp
in
imul
outs
rol
pusha
sub
fsin
icebp
xor
loope
shl
push
sahf
inc
(bad)
mov
push
(bad)
dec
xor
fdivr
cmc
jl
jle
je
dec
mov
stos
and
clc
fst
pop
xchg
dec
add
adc
jb
mov
loopne
ds
ja
ins
and
jae
cmp
(bad)
cwde
push
stc
adc
fstp
aaa
sbb
push
stos
dec
jae
movs
arpl
and
pop
push
xchg
not
pushf
idiv
imul
sub
ins
xor
(bad)
sahf
les
jo
out
jecxz
push
outs
cmps
aas
dec
inc
cmp
cmp
test
dec
sub
xor
mov
(bad)
pusha
in
sub
push
adc
aas
dec
pop
xchg
(bad)
out
je
mov
retf
pop
xchg
jbe
ret
aaa
push
jg
test
inc
push
aas
xchg
mov
jl
jne
int3
addr16
or
mov
rcr
cmps
arpl
sti
fld
test
rcr
sub
mov
outs
mov
aam
test
jmp
pop
outs
psraw
in
push
mov
add
in
sbb
xlat
sbb
test
js
or
cld
call
mov
inc
or
push
and
pop
adc
lods
inc
(bad)
ins
movs
imul
pop
mov
loop
call
lods
rcl
pop
jb
(bad)
aam
jmp
sub
js
cs
leave
stc
fucomip
add
xor
icebp
mov
aam
std
dec
hlt
outs
push
or
jg
cmp
adc
(bad)
cli
retf
imul
dec
jmp
movs
jg
loop
out
sub
mov
pop
xchg
push
pop
pop
in
test
sar
push
xor
js
add
out
inc
fsub
stc
sbb
call
xchg
in
fcom
sbb
jp
mov
sbb
cmps
jmp
pop
mov
into
ret
sbb
adc
(bad)
out
xchg
aad
and
xor
push
sbb
xor
adc
xchg
scas
push
push
sbb
mov
out
les
fucomi
lods
inc
and
repnz
xor
jge
retf
pop
repz
loopne
nop
loope
es
push
push
cmps
and
int3
hlt
fidivr
mov
aam
popf
lods
dec
(bad)
mov
push
aaa
scas
int3
mov
and
mov
shl
cdq
imul
shl
jge
sbb
cld
dec
cwde
rol
cs
call
mov
gs
(bad)
mov
and
xor
lock
or
repz
xchg
jb
sub
mov
cmps
mov
into
mov
mov
mov
out
stc
sbb
jae
jb
add
in
aas
and
pop
arpl
(bad)
xor
retf
(bad)
cwde
psraw
(bad)
in
push
out
sub
xlat
and
lods
xchg
loope
fistp
jecxz
adc
test
dec
dec
xchg
ins
imul
popf
mov
jae
enter
mov
ror
test
in
loope
repnz
or
mov
dec
test
lahf
sbb
out
outs
retf
inc
add
inc
sar
movs
dec
pop
pop
xor
mov
adc
or
and
jne
sbb
in
sub
inc
imul
mov
mov
or
adc
sbb
mov
imul
out
ins
setne
stc
sbb
shl
mov
inc
sbb
mov
outs
or
daa
call
sub
xor
iret
(bad)
faddp
sar
and
aas
add
test
or
mov
jb
loop
repnz
jo
out
mov
fild
push
retf
push
inc
sub
adc
xchg
mov
rcl
push
scas
ins
mov
int3
out
add
or
scas
mov
leave
lods
lahf
(bad)
cs
fsubr
push
pop
test
dec
inc
cdq
push
popa
enter
inc
(bad)
(bad)
(bad)
mov
pop
sbb
daa
or
or
loope
xor
bound
push
lods
sbb
xor
adc
cdq
cmp
cmp
cmps
mov
inc
mov
fsubr
fst
into
scas
ss
pop
mov
js
lock
minps
test
test
fdivp
sub
inc
inc
hlt
fucomp
jno
pop
in
lea
repnz
mov
adc
cmp
push
pop
push
or
mov
or
clc
jno
pop
dec
iret
cmps
mov
jbe
jns
xchg
add
sub
movs
mov
inc
cmp
lea
cld
js
jp
out
mov
adc
jge
and
cmp
and
mov
xor
ss
lds
aas
inc
cmps
xchg
add
push
(bad)
cdq
retf
xor
(bad)
aad
mov
fwait
test
arpl
xlat
mov
sub
pop
jle
(bad)
xchg
xor
push
xchg
sub
and
and
ror
int
xchg
mov
js
push
pop
and
daa
es
repnz
neg
(bad)
shl
iret
sub
stc
xlat
into
aam
fidiv
mov
mov
loope
mov
jo
and
push
xchg
cmp
pop
leave
or
mov
mov
fsub
fs
xchg
arpl
cmp
mov
cmps
push
movs
ins
inc
jno
pushf
jge
jge
fwait
pop
shl
push
aam
mov
push
test
xchg
out
mov
shl
cwde
div
mov
jle
les
mov
push
push
ret
fs
popf
cld
fstp
xchg
sti
mov
add
loopne
das
sbb
mov
push
test
cmp
sub
in
dec
mov
push
mov
add
out
adc
cdq
call
add
inc
aas
ja
loopne
sbb
std
or
pop
adc
mov
add
push
stos
jg
sbb
(bad)
movs
lock
fwait
adc
repnz
rcr
icebp
(bad)
ficom
fsubr
fadd
xlat
push
call
push
mov
xlat
adc
fwait
cmp
sar
sbb
pop
(bad)
sub
sub
add
jl
sub
dec
pop
jne
out
and
sbb
out
nop
cdq
dec
mov
adc
in
mov
imul
cmp
dec
dec
mov
push
mov
bound
movs
mov
mov
loop
or
movs
pop
sti
inc
xor
adc
xor
push
fist
push
jo
mov
test
jne
xlat
xchg
ror
push
cwde
xor
adc
cli
push
int
sbb
sti
test
in
or
jnp
lea
mov
mov
mov
sub
jns
(bad)
cld
jo
(bad)
and
adc
loope
push
out
aas
fnstsw
mov
shl
test
sub
and
fcmovne
xchg
lock
test
add
fistp
pop
fcomi
xchg
pop
rcl
xchg
pop
and
pushf
mov
add
out
sub
xlat
mov
pop
fcmovu
es
shl
cwde
mov
mov
not
mov
or
xlat
test
paddw
dec
mov
cmp
call
sub
cs
push
mov
cmps
aaa
jmp
lahf
sahf
ds
xchg
mov
test
sub
mov
sub
pushf
xor
out
(bad)
fdivr
dec
jge
xor
mov
cmps
movs
fidivr
sti
hlt
sbb
out
push
hlt
je
int
pop
or
sub
outs
out
je
cmp
jl
or
and
rcr
das
or
or
int3
push
lds
adc
mov
and
prefetcht2
mov
add
xchg
(bad)
sub
in
test
aam
cld
push
push
and
xchg
or
mov
out
mov
sbb
cld
mov
in
addr16
or
dec
scas
cs
fisttp
push
int3
xchg
les
paddd
sub
ja
daa
adc
mov
or
push
or
imul
mov
outs
jp
es
fs
into
cmp
mov
mov
mov
or
(bad)
mov
add
inc
or
xor
in
cdq
fisttp
addr16
loop
fwait
pop
fmul
sub
xor
jmp
sti
mov
std
and
mov
push
xor
mov
and
int
xor
xlat
pop
jmp
aas
shl
test
add
jnp
mov
shl
(bad)
fstp
add
loopne
cmp
cmp
dec
xchg
push
sub
dec
jnp
pushf
lahf
or
sahf
ror
outs
(bad)
xor
mov
mov
sbb
xchg
push
cdq
mov
sub
mov
inc
cmp
fsubr
adc
out
push
imul
pop
fs
ja
dec
test
cld
repnz
shr
inc
cli
jbe
in
ins
pop
in
cmps
ja
rcr
scas
push
cmp
pop
dec
jle
call
fsub
aaa
ret
das
mov
sbb
(bad)
out
mov
fsubr
(bad)
push
popf
push
mov
bound
cmps
push
or
sahf
sbb
add
enter
mov
pop
ins
loope
movs
dec
sub
push
call
mov
inc
fdivrp
cmc
adc
fist
das
add
fistp
push
cmp
test
aaa
push
shl
or
jl
mul
cs
sub
xchg
loopne
adc
retf
mov
out
xor
rol
out
and
xor
pop
xor
(bad)
xor
or
sub
mov
add
jg
lods
inc
call
mov
push
dec
div
icebp
sub
retf
fwait
call
xchg
push
in
std
inc
cmps
sbb
pop
pop
pop
xchg
push
in
sub
cmp
or
mov
(bad)
mov
cmps
sub
ficom
push
pop
loopne
or
fld
ret
iret
addr16
out
mov
adc
push
fisubr
sub
rcr
or
gs
rcl
pusha
daa
cld
in
and
sbb
cld
push
xchg
out
jae
stos
dec
jb
mov
clc
xchg
loope
(bad)
adc
ret
outs
mov
xchg
sar
xchg
add
xchg
popa
js
in
int
jno
(bad)
ror
or
mov
adc
call
out
gs
pop
sbb
data16
shr
push
shl
mov
sbb
jl
mov
loopne
mov
scas
pushf
movs
cdq
cmp
xchg
ds
paddusb
fdivr
iret
jno
and
and
xchg
jecxz
inc
sar
inc
daa
lods
mov
gs
jmp
cmps
mov
lahf
pop
push
cmps
fcomp
inc
push
scas
(bad)
xor
bound
cmp
popf
(bad)
cmp
or
mov
mov
sub
std
in
lahf
enter
push
fs
add
inc
cmp
lock
push
cli
retf
shl
push
retf
aaa
jne
(bad)
dec
icebp
dec
popf
xchg
add
repz
cmp
retf
cmp
fmul
cmps
dec
leave
xor
adc
bound
mov
inc
test
jo
jb
arpl
xor
fmulp
test
loope
dec
jne
push
sub
fs
push
aaa
rcr
in
out
pop
cmp
adc
adc
inc
mov
popf
inc
in
mov
test
loope
addr16
ins
mov
shr
mov
mov
xchg
leave
mov
xor
xor
sub
pop
jl
dec
sub
mov
adc
adc
(bad)
loopne
cli
mov
imul
retf
sub
cs
sub
out
inc
div
cmp
cwde
adc
loop
iret
or
sub
aaa
push
mov
push
mov
repnz
in
xor
dec
jp
mov
es
inc
dec
pop
mov
xor
mov
jle
xor
xchg
mov
pop
sub
pop
cwde
inc
rcr
(bad)
adc
adc
iret
or
jnp
mov
iret
call
push
cli
mov
imul
mov
test
out
ror
int3
retf
ins
mov
(bad)
shl
push
jle
dec
adc
ss
ins
mov
adc
dec
mov
ret
fstp
pop
repz
outs
stos
jge
clc
inc
cdq
push
dec
jp
outs
jecxz
(bad)
and
test
pusha
in
ret
sbb
mov
push
sub
ds
xchg
cmp
mov
dec
(bad)
jecxz
sub
test
sub
push
or
push
mov
mov
iret
in
and
or
add
inc
mov
arpl
jnp
jns
fdivrp
ret
jmp
loopne
sbb
xor
jg
or
mov
jecxz
mov
dec
ret
ret
push
jp
or
dec
cdq
cld
and
sbb
mov
aaa
in
mov
mov
jnp
xchg
xor
call
mov
and
in
pop
jmp
push
ja
xor
loop
dec
adc
sbb
add
loope
mov
cmp
pop
(bad)
clc
sbb
daa
ror
stc
sbb
data16
mov
adc
push
out
ins
dec
in
mov
xchg
imul
cmp
fdivr
inc
cli
mov
inc
and
xchg
scas
inc
or
out
js
mov
xchg
or
pop
test
pop
sub
hlt
cmps
enter
pop
push
xchg
mov
adc
int
mov
aam
leave
ja
outs
shl
lods
or
pop
sbb
cwde
sbb
call
cmp
daa
dec
lock
add
icebp
jmp
mov
sbb
adc
pop
add
out
lods
stc
mov
push
cld
stc
movs
aas
fsub
add
pop
and
pop
mov
sbb
jle
sbb
fnstsw
xor
bnd
pop
std
jmp
hlt
mov
cdq
mov
push
or
out
rcr
pop
mov
int
cmp
mov
jbe
sti
iret
loop
(bad)
mov
ror
ds
popf
sar
dec
pop
jo
lds
push
inc
xor
dec
jmp
mov
cmp
jl
sbb
scas
sbb
fdivr
scas
cmp
xchg
jbe
fldenv
sbb
push
movs
popf
hlt
mov
ins
inc
sub
retf
push
xchg
enterw
scas
test
jmp
and
sub
scas
xchg
data16
jl
mov
jno
std
sub
arpl
pop
push
xchg
ja
mov
mov
stc
or
mov
push
int
mov
in
(bad)
(bad)
mov
push
sti
jle
and
out
shl
callw
dec
adc
adc
fwait
inc
adc
leave
out
call
add
push
sahf
push
cmp
cmps
dec
out
jne
add
stos
(bad)
aad
addr16
mov
stc
mov
jge
and
jns
clc
mov
rcr
iret
fiadd
sar
std
xchg
daa
or
outs
sti
pop
jmp
scas
add
rcr
loop
ins
push
sbb
adc
inc
fcmovne
movs
cmp
pop
fldenv
mov
adc
xor
das
xchg
ror
xchg
sti
jbe
cli
push
mov
xor
inc
push
je
xchg
(bad)
jmp
cmp
lods
mov
jge
(bad)
jl
gs
mov
sub
xor
fadd
rcr
cwde
push
and
sti
mov
pop
fadd
mov
push
mov
adc
mul
push
jg
adc
(bad)
dec
xchg
jg
sbb
jecxz
cmp
xchg
popa
int
mov
xchg
sar
push
call
scas
in
in
sub
xchg
inc
push
popa
push
ja
ficom
mov
and
sbb
das
jns
dec
pop
adc
inc
jg
pop
xor
or
or
dec
and
push
(bad)
sub
dec
inc
xor
inc
aaa
pop
and
mov
dec
pushf
fidiv
cdq
inc
inc
inc
ret
cld
scas
jno
retf
aad
push
jae
inc
loop
ds
xchg
(bad)
sub
sbb
inc
cmp
shr
xor
pop
ja
test
or
(bad)
popf
jge
clc
pop
lods
ret
pushf
xor
cmp
movs
rcl
mov
jo
dec
push
fisub
mov
mov
(bad)
mov
push
mov
lds
pop
xor
xor
lods
xor
ja
pop
xchg
push
adc
cdq
and
cmp
data16
push
dec
out
cld
cmp
imul
inc
inc
fsub
mov
fst
mov
movs
push
xor
fbld
lods
cmp
nop
outs
mov
cld
cdq
mov
shl
call
jb
jb
outs
jmp
jg
scas
inc
jae
ret
(bad)
or
stc
and
popf
popf
imul
popf
and
ds
(bad)
int3
pop
sbb
push
add
push
xchg
push
cmp
push
adc
mov
or
sbb
out
or
das
bound
ss
frstor
cli
xor
xchg
mov
push
out
cmp
pop
fisttp
cmc
pop
fstp
adc
lock
pop
movs
jg
sbb
cmps
mov
outs
cdq
pop
div
adc
imul
xor
cli
mov
iret
cmc
adc
add
sub
(bad)
loopne
jp
pop
imul
cld
mov
sahf
in
push
shl
xchg
addr16
mov
mov
test
jp
mov
mov
adc
and
pop
aas
xor
or
cld
in
repz
or
retf
std
xchg
daa
sub
(bad)
int3
(bad)
cmp
inc
fidiv
mov
push
pushf
cs
in
sti
sbb
(bad)
ror
sub
(bad)
scas
out
mov
sub
jae
shl
pop
fs
mov
movs
xor
pop
stos
add
pop
ja
push
dec
jne
mov
pop
ror
sahf
(bad)
ins
jmp
mov
imul
mov
add
mov
xchg
mov
mov
push
add
les
push
push
jecxz
adc
call
cmp
xchg
mov
add
test
int
pop
js
rcr
int
adc
cmps
pop
fcmovb
mov
push
pushf
and
mov
mov
lahf
xchg
je
sbb
je
sti
cmp
xchg
sub
push
add
shl
push
push
and
pop
mov
or
in
and
jno
mov
loop
dec
mov
jnp
xchg
cmp
lahf
and
jbe
cmp
pop
nop
movs
xor
push
shl
jp
out
push
ss
outs
jg
test
movs
cmp
sbb
push
and
scas
icebp
sbb
lahf
push
sahf
sbb
mov
xor
stos
dec
dec
dec
adc
ret
stos
mov
out
jecxz
xchg
call
push
push
and
aam
les
pop
add
or
outs
jg
xor
push
shr
xchg
mov
sbb
sbb
loopne
shl
std
jg
xchg
inc
sbb
xor
mov
sub
js
xlat
jne
dec
aad
test
xor
dec
cs
in
jae
(bad)
adc
and
lahf
push
(bad)
push
das
cmp
add
shl
mov
pop
mov
inc
sti
jle
imul
shl
int
fiadd
ror
mov
xchg
add
add
fild
and
sbb
pop
fwait
arpl
(bad)
cmp
push
push
retf
pop
push
cmp
xor
mov
jns
mov
stos
lea
mov
mov
sub
cmps
jg
or
hlt
dec
mov
xchg
pushf
call
jmp
les
out
push
es
daa
mov
push
inc
pop
and
cmp
test
sahf
outs
dec
sahf
mov
mov
(bad)
cli
xchg
leavew
ror
mov
jnp
push
icebp
sbb
addr16
aam
rol
cs
lea
mov
push
popf
sbb
stos
int
out
test
enter
add
aas
dec
lock
inc
leave
outs
adc
lods
jno
mov
pop
mov
adc
cs
mov
stos
cmp
and
fmul
cmp
push
cmp
and
in
dec
adc
cwde
push
or
push
xchg
aas
sub
arpl
xor
mov
xor
fcomp
aas
inc
lods
stos
rcl
mov
aad
shr
push
or
ror
fild
hlt
(bad)
std
pop
mov
cld
inc
lea
jns
mov
fs
fld
adc
jmp
cmp
arpl
inc
icebp
test
mov
shl
repnz
or
xchg
adc
cmp
mov
scas
loop
mov
cmc
cld
call
les
adc
adc
or
xchg
dec
stos
push
cmps
and
icebp
push
stos
shl
jmp
leave
cs
icebp
shr
mov
add
add
mov
mov
jne
push
add
mov
loopne
jmp
xor
mov
aas
adc
loop
mov
push
imul
sub
retf
jg
and
js
inc
(bad)
std
je
mov
mov
cmp
mov
sbb
push
or
dec
mov
xor
or
imul
push
xor
push
xlat
dec
div
cmp
sar
and
hlt
inc
jbe
cld
pop
test
pusha
into
pop
cmp
jb
jbe
gs
sub
add
xchg
clc
leave
sub
or
xchg
adc
cmp
je
and
xchg
clc
fidivr
and
cmps
hlt
inc
cmp
das
mov
mov
add
out
mul
ja
push
adc
pop
cmps
cli
push
loopne
push
inc
push
add
jo
pop
lock
sbb
inc
adc
test
jmp
sub
rcr
test
idiv
std
dec
mov
or
aad
and
sbb
or
sbb
sub
pop
push
push
call
(bad)
pop
and
and
jp
cmc
rcr
xchg
inc
mov
pop
push
mov
dec
push
mov
adc
nop
out
in
sub
pop
fild
sti
dec
shl
imul
lods
(bad)
cld
dec
pop
cld
mov
or
sub
stos
jno
(bad)
mov
cmp
jbe
adc
icebp
cld
fnstsw
mov
jnp
cld
and
dec
add
xor
sbb
leave
pop
or
(bad)
push
inc
push
sbb
mov
push
sbb
into
sub
xor
and
aas
movs
and
xchg
jae
mov
aad
fcom
or
out
enter
mov
loop
int
adc
add
mov
out
fcom
lods
jae
push
cmp
inc
cmp
retf
jecxz
push
pop
or
cmp
add
jmp
cmp
rol
inc
inc
add
push
xchg
cdq
inc
sub
sahf
xor
aas
cmove
mov
add
jno
imul
ret
jle
mov
add
sbb
(bad)
(bad)
jg
pop
ds
cld
or
rcr
cmc
xchg
aaa
adc
push
jle
adc
mov
dec
in
cmp
mov
add
cli
and
pop
loopne
or
ror
fwait
cwde
dec
sbb
mov
mov
cwde
fucompp
pop
sbb
add
(bad)
(bad)
mov
and
int
pop
add
and
or
add
cmp
mov
mov
js
scas
xor
stc
mov
mov
aam
lods
xchg
cmp
out
dec
dec
stos
mov
xchg
mov
or
xchg
dec
jno
popf
cmp
imul
xchg
mov
or
stc
xchg
fdiv
popa
sbb
adc
ret
mov
inc
into
add
repz
fucomi
(bad)
fisub
sbb
fxch
imul
add
retf
mov
int3
fimul
lods
hlt
and
das
sahf
mov
and
push
inc
inc
or
mov
cmp
add
inc
lods
sbb
pop
push
in
hlt
lods
shl
jae
push
leave
and
repz
repz
mov
sub
jmp
nop
sub
call
sbb
call
call
repz
adc
cmp
inc
mov
inc
add
adc
retf
fcomp
stc
inc
sub
inc
sbb
jae
cli
out
mov
cmp
mov
inc
adc
pop
mov
pop
and
sbb
pop
fst
jb
cmp
push
daa
enter
inc
inc
jp
jb
mov
mov
pushf
push
es
lea
or
push
jecxz
movs
neg
rol
cmp
mov
es
sar
pop
shl
ret
sbb
imul
push
or
mov
lea
mov
dec
sahf
dec
scas
dec
pusha
fcomp
outs
(bad)
aad
sbb
or
test
push
inc
and
sbb
out
xchg
aas
lods
adc
sub
test
xlat
and
fst
imul
mov
ror
dec
xchg
gs
int3
or
mov
push
fbstp
out
out
into
out
and
xchg
scas
jns
xor
stos
jle
cmps
adc
mov
pop
das
call
mov
(bad)
cmps
adc
call
mov
repnz
cmp
fst
sub
push
add
aas
stc
push
sbb
out
clc
adc
jmp
xchg
aas
jmp
mov
jp
inc
add
retf
mov
icebp
sbb
cmp
push
mov
test
stc
push
cdq
push
ins
xor
cdq
test
enter
add
aam
push
push
xchg
inc
add
pop
mov
movs
push
jbe
cwde
sbb
int3
xchg
push
test
ja
xchg
enter
adc
stos
ja
sti
arpl
in
stc
cmp
mov
in
push
cmp
jcxz
xor
ja
mov
imul
test
and
add
dec
aam
repnz
gs
mov
xchg
pop
repz
cmc
cmc
aam
mov
(bad)
mov
call
sub
(bad)
sbb
and
rol
aas
xor
and
into
fwait
cdq
add
fcomi
fstp
cmp
(bad)
dec
ds
pop
xchg
and
out
movs
lea
adc
shr
rol
pop
dec
fild
fisubr
and
imul
mov
sub
neg
mov
add
ss
inc
aam
cli
stos
mov
mov
fninit
test
(bad)
push
xchg
inc
je
ins
jge
xchg
in
or
adc
mov
dec
(bad)
push
les
push
cmp
jl
mov
call
das
xchg
inc
imul
add
jecxz
and
jp
dec
pop
hlt
stos
fs
retf
in
test
call
sbb
ss
lods
mov
fwait
lods
lahf
bound
jmp
pop
push
sti
xor
pop
in
out
jnp
push
mov
jp
inc
or
mov
ror
xchg
xor
jns
aad
das
add
sbb
fbstp
jp
inc
push
jmp
cmp
lods
pop
and
iret
mov
mov
test
xchg
inc
(bad)
xchg
sti
or
mov
ja
push
xor
push
add
ins
xchg
jmp
data16
xlat
mov
imul
mov
xor
mov
adc
mov
ret
leave
mov
ret
dec
jle
sub
lds
cvtdq2ps
not
push
pop
in
cmps
cmc
cmp
ror
add
or
cmp
mov
xor
inc
ret
out
or
in
xchg
push
fld
pop
movs
in
fadd
jbe
sub
xor
js
repz
push
imul
mov
in
lock
sbb
jmp
sbb
mov
xor
fs
mov
retf
push
mov
pop
cmps
cld
add
push
mov
enter
sub
jmp
loop
out
xor
push
test
inc
mov
push
push
enter
and
sub
xor
or
adc
pop
pusha
pushf
pop
or
inc
inc
out
sub
addr16
aaa
mov
ins
into
outs
lock
pop
or
cmp
les
pop
mov
sub
test
lock
xor
fwait
test
push
xor
das
call
add
retf
das
movs
xchg
jmp
cli
test
jmp
jno
sbb
jno
pushf
inc
inc
jmp
das
scas
pop
idiv
jno
pop
mov
ja
ins
adc
mov
xchg
adc
and
(bad)
loop
and
mov
and
retf
and
pushf
pop
sahf
xchg
out
inc
out
bswap
sbb
ins
outs
mov
xchg
bound
imul
inc
sahf
jmp
cdq
sahf
fstp
fdiv
cmp
jne
sub
loopne
mov
fld
cld
std
lods
in
stc
cmps
(bad)
cmp
add
pop
es
adc
test
enter
inc
call
add
loopne
and
dec
pop
ret
cs
gs
aaa
xchg
stos
iret
out
test
ror
adc
in
bound
add
aaa
inc
mov
inc
fisubr
xchg
(bad)
dec
pop
call
ja
xor
cli
ins
add
xchg
cmc
cmp
sub
imul
jns
pop
stos
test
and
dec
push
xor
and
xchg
sub
das
out
popf
jmp
(bad)
dec
jo
and
mov
in
adc
test
xlat
std
cmp
stc
loop
xchg
inc
mov
pop
mov
jl
lods
repz
pop
and
adc
js
sar
jns
sub
gs
mov
and
ret
or
mov
jle
cdq
mov
retf
mov
pop
stos
sbb
fcmovbe
fisttp
pop
jge
cmp
call
sub
fs
pop
hlt
mov
movs
int3
dec
xchg
dec
in
sbb
(bad)
cli
pop
sub
xor
cli
lods
dec
add
mov
push
dec
xchg
(bad)
movs
jne
outs
inc
je
test
js
test
mov
scas
cmp
sbb
adc
(bad)
shr
and
pop
mov
or
lahf
inc
enter
mov
stos
inc
pusha
popf
inc
in
inc
xor
and
in
mov
push
adc
cld
push
jecxz
shl
or
cli
sar
stc
push
push
push
sub
punpckhbw
popf
adc
mov
xchg
pop
ficom
rcl
loop
push
sub
test
cwde
lods
mov
xchg
pop
jecxz
dec
jg
mov
jb
sub
or
popf
int3
mov
leave
pop
fld
int
lea
in
xchg
pop
dec
pop
das
repnz
mov
or
push
jo
cmp
push
mov
mov
and
and
inc
lds
sbb
(bad)
jmp
imul
shr
xor
jmp
ins
mov
fstp
ror
fwait
lods
repz
into
pusha
fild
and
int3
dec
jl
cwde
ja
lods
jge
push
fwait
cdq
movs
sub
jo
xchg
cmc
retf
jg
aaa
js
and
hlt
in
shl
jne
mov
(bad)
std
std
push
pop
cmp
mov
xor
dec
fidivr
outs
out
scas
scas
arpl
outs
xchg
lods
out
pop
push
push
inc
mov
push
inc
cmp
add
pop
sbb
(bad)
into
iret
lods
cmp
mov
scas
push
bound
cmp
je
xchg
jmp
into
xchg
xchg
and
add
xchg
or
push
mov
adc
adc
rol
aaa
and
dec
dec
(bad)
iret
sbb
sbb
xor
int
jbe
cdq
cld
xlat
enter
mov
adc
mov
xchg
or
mov
mov
cmp
jbe
stc
or
xor
clc
daa
je
in
(bad)
xchg
pop
gs
mov
sbb
mov
mov
cli
and
xchg
pop
push
jle
jmp
dec
mov
ret
and
fimul
mov
mov
in
loope
lods
cld
xor
sub
fwait
test
inc
das
stos
test
dec
cmp
scas
mov
fcmovu
(bad)
iret
daa
es
into
push
shl
sub
scas
aas
(bad)
aas
sub
lahf
retf
add
stc
icebp
std
mov
pop
mov
je
gs
push
mov
jecxz
hlt
int
inc
in
xor
retf
dec
jmp
push
iret
js
hlt
and
push
push
mul
push
add
aas
sar
(bad)
sub
jo
nop
fbstp
mov
jl
cmp
cwde
cmps
les
fwait
sub
pop
push
les
mov
cdq
add
cmp
push
rep
pop
ja
lahf
leave
cwde
sbb
fs
mov
cdq
sub
lods
fnstcw
popa
lock
xor
stos
aas
in
lea
adc
fsubr
dec
xor
fld
fild
and
fdivr
loopne
add
in
shl
aad
or
add
bound
stos
pop
adc
lahf
inc
popa
cmp
test
cmp
rcl
push
pop
adc
pop
push
aad
lods
jmp
lock
cs
stc
hlt
ror
jmp
ret
mov
cmp
cmps
mov
ret
ror
icebp
xlat
ret
es
movs
test
fs
mov
xchg
scas
mov
jp
adc
xor
pop
add
js
and
lds
adc
in
daa
and
das
pop
pop
out
mov
aas
and
xchg
adc
enter
in
jmp
dec
push
fxch
push
pop
and
adc
cmps
aad
pop
inc
out
movs
sub
loopne
mov
xor
scas
jbe
imul
clc
adc
mov
pop
inc
jns
dec
dec
mov
fcmovbe
in
movs
jp
pusha
mov
(bad)
pop
pop
jecxz
adc
nop
mov
jae
call
lea
adc
stos
or
pop
mov
push
cs
mov
mov
outs
mov
hlt
adc
(bad)
xchg
clc
(bad)
fstp
lea
cld
or
add
cmc
jne
out
xchg
mov
cli
es
nop
test
inc
jbe
stos
xchg
inc
dec
in
mov
sub
pop
cmp
test
sbb
jmp
push
add
xchg
lahf
(bad)
(bad)
jmp
je
or
xchg
retf
cld
enter
sub
sahf
clc
mov
jno
pushw
inc
fiadd
push
dec
push
jmp
pop
pop
nop
push
les
call
add
into
mov
call
adc
(bad)
into
stc
int
add
loope
xor
jae
and
xlat
scas
lds
or
or
jmp
push
dec
mov
ret
pop
mov
sahf
mov
xor
bound
pop
pusha
test
pop
scas
in
xor
in
xchg
repnz
jge
add
cmp
sbb
jnp
stos
pop
aad
mov
stc
cmp
iret
adc
cdq
cmp
pusha
icebp
sbb
and
sahf
add
sub
cmc
pop
push
int
adc
nop
inc
enter
aaa
or
xchg
dec
addr16
sar
xchg
cmp
jno
dec
aas
and
sbb
sbb
mov
stc
sbb
or
clc
cld
stc
rol
jnp
xor
ret
or
cmc
ds
cmp
data16
add
(bad)
push
jb
adc
js
pusha
imul
cmp
mov
aam
sub
into
or
and
add
mov
inc
fldcw
addr16
pusha
cmp
or
ror
in
push
mov
aaa
div
call
inc
push
(bad)
mov
pop
imul
xchg
je
shl
cmp
push
cld
call
cli
gs
rol
js
mov
cwde
cmc
inc
aas
test
sbb
jmp
push
mov
push
push
ret
mov
xchg
sub
jne
ja
clc
and
test
xor
pop
jge
test
lea
stc
daa
and
fistp
imul
pop
pop
sub
aas
push
stos
enter
mov
pusha
shl
in
or
imul
xor
iret
add
les
pop
outs
dec
or
cld
dec
xor
fsubr
dec
out
ret
js
push
mov
adc
les
inc
cli
pslld
xchg
push
sbb
inc
fisubr
in
push
leave
pop
inc
pop
shl
fld
mov
dec
mov
cwde
dec
add
xchg
or
push
pop
push
or
mov
pushw
test
test
jne
sbb
cmp
je
(bad)
or
aaa
shl
push
pop
out
sbb
adc
mov
jp
fs
fsub
sbb
and
xor
push
adc
sub
dec
fidiv
ret
xchg
mov
add
fidiv
or
sbb
ins
adc
and
inc
aaa
je
cmps
(bad)
mov
xchg
xchg
mov
push
push
fcomp
cmp
fcomi
out
out
test
xchg
aas
bound
jns
ins
mov
cmp
das
dec
xlat
lds
adc
fsubr
mov
xchg
sbb
pop
cli
cld
mov
dec
inc
cs
push
mov
pop
test
in
pop
add
cmp
pop
jbe
enter
(bad)
cmp
mov
mov
clc
mov
(bad)
dec
mov
mov
ret
fwait
pop
xchg
adc
cmp
mov
mov
jns
hlt
sub
mov
or
jmp
repnz
cmps
sbb
xchg
and
ins
fnstenv
pushf
push
ds
mov
out
mov
icebp
je
jae
cmp
js
jg
rcl
cmc
sbb
inc
mul
(bad)
pop
mov
nop
fist
test
mov
mov
iret
cdq
(bad)
loop
push
jmp
jb
add
(bad)
nop
jno
mov
div
xchg
sti
rol
xor
cmp
xchg
in
pop
mov
fsubr
mov
call
and
jp
add
add
xchg
jp
mov
outs
inc
icebp
xor
dec
loopne
test
jne
popa
popa
loopne
lods
stos
pop
ficomp
rcr
adc
inc
fmulp
hlt
neg
(bad)
icebp
pop
or
and
mov
jbe
aaa
outs
inc
pop
mov
mov
mov
cmp
add
out
pop
sbb
outs
mov
fldenv
xchg
inc
dec
push
and
push
sbb
mov
lds
(bad)
cmp
cmp
stos
adc
ficom
cwde
mov
ins
hlt
jo
mov
out
jge
or
jle
stc
pusha
add
xchg
mov
or
out
ret
ds
fnstcw
mov
fcmovnb
and
in
out
mov
jle
data16
and
sbb
xor
and
add
cmps
sub
cmps
pop
cs
outs
cmp
mov
jmp
ds
sti
out
mov
cmp
rcl
mov
inc
sub
jmp
pop
push
and
sbb
push
cmp
mov
aaa
push
mov
test
jo
rcl
and
imul
jmp
frstor
xchg
cld
jmp
add
pop
and
sub
mov
hlt
mov
call
mov
jb
imul
push
mov
stc
jmp
sbb
xchg
xor
dec
pop
pop
ret
scas
mov
test
xor
mov
and
les
std
jecxz
pop
dec
pop
(bad)
sbb
push
mov
pop
in
add
int
loopne
mov
call
push
push
add
ins
stos
daa
in
and
sub
les
test
addr16
pop
adc
push
int
mov
icebp
retf
rcr
mov
or
dec
jge
xchg
in
cmp
rcr
inc
outs
push
sbb
jne
icebp
cdq
adc
lea
sbb
repnz
ficom
lea
push
out
mov
jmp
sbb
out
mov
mov
mov
dec
(bad)
mov
mov
cmp
into
sbb
inc
mov
cmps
jmp
pop
jmp
pop
jmp
mov
xchg
xchg
fld
mov
retf
out
cmp
jg
jb
mov
imul
jno
in
xor
movs
ret
fst
mov
inc
pop
fild
je
dec
pusha
pop
loope
dec
adc
pop
mov
sar
push
mov
out
shr
ror
cmps
cdq
jle
neg
out
(bad)
adc
mov
inc
inc
and
loop
cmp
scas
pop
mov
lea
cld
mov
dec
xchg
test
jg
fsubrp
xor
xor
ror
mov
imul
lods
xchg
loope
mov
inc
sub
mov
fwait
xchg
loope
retf
xchg
pop
rol
jno
rol
sub
js
dec
imul
cld
dec
dec
sbb
pop
dec
aad
sub
movs
mov
sub
and
mov
push
mov
mov
adc
ins
enter
push
push
push
movs
mov
xchg
dec
push
xor
fimul
rcr
int3
sahf
fdiv
in
pop
inc
mov
cmp
adc
arpl
sbb
int
and
jg
adc
fisttp
cdq
loope
pop
(bad)
pop
jbe
push
inc
mov
sub
mov
test
cmp
sbb
cs
mov
jns
aaa
push
mov
fnstcw
cmps
int3
sete
and
sbb
mov
pop
into
mov
mov
mov
mov
js
push
es
fs
xchg
shl
popa
xchg
xchg
imul
mov
in
arpl
(bad)
scas
or
cdq
(bad)
int3
fs
repnz
mov
mov
cmp
rcl
std
sub
fdiv
xchg
lock
lahf
add
out
adc
cld
push
lock
ins
gs
arpl
sub
out
pop
or
leave
cld
leave
dec
out
add
fidivr
lahf
(bad)
jo
xchg
cdq
mov
lds
push
cwde
jnp
test
fwait
mov
sub
mov
jl
mov
mov
mov
mov
xor
movs
jmp
scas
xor
test
pop
mov
rcr
loopne
pop
dec
(bad)
push
xor
pop
dec
sub
push
cld
dec
mov
cs
(bad)
movs
cld
arpl
in
adc
push
out
adc
xchg
cmp
outs
ret
dec
cmps
mov
jmp
xchg
sti
and
push
lods
fcom
mov
mov
mov
loop
inc
and
ss
or
cvtps2pi
loope
lds
dec
int3
and
jnp
xchg
sub
pop
xchg
imul
jg
loopne
inc
pusha
int
push
pop
ror
and
mov
fdiv
jno
add
inc
pop
test
and
jmp
cmps
pop
sub
repnz
rcr
mov
adc
loopne
test
rcl
inc
mov
ins
mov
retf
xchg
outs
es
jbe
push
rcr
addr16
fptan
inc
mov
mov
(bad)
aam
ds
fidivr
lahf
leave
leave
pusha
or
jo
test
adc
sub
(bad)
pusha
push
nop
aas
mov
push
push
repz
les
mov
add
retf
push
xor
data16
(bad)
sbb
call
clc
push
push
or
xor
clc
pop
scas
cld
pop
loope
cmp
fdiv
pop
ds
cmp
les
lods
out
push
into
dec
jg
jmp
xchg
inc
jb
das
jnp
push
jbe
nop
and
cdq
cwde
mov
nop
sti
adc
icebp
test
les
inc
js
xor
outs
lds
ret
push
lods
(bad)
fwait
add
mov
pop
cdq
lods
data16
iret
movs
pop
js
push
xchg
cmp
jp
aad
test
cmc
pushf
pop
push
jle
std
xor
xor
push
xchg
loop
(bad)
sbb
push
mov
pop
sbb
in
fisttp
pmaxub
imul
xchg
jae
addr16
loopne
movs
jo
jno
fisub
test
or
movs
clc
cld
in
xchg
or
div
enter
adc
inc
or
pop
shl
shl
and
aaa
adc
sar
int
(bad)
in
fdiv
cmp
out
js
(bad)
pop
fmul
sub
mov
mov
popa
ret
sar
scas
pop
shl
fcom
arpl
pop
movs
sbb
icebp
adc
pop
loope
jecxz
mov
xor
mov
sbb
push
jae
fild
and
loopne
push
ret
jp
movs
nop
pop
sbb
rcr
add
ja
lock
xor
pslld
adc
mov
es
push
add
xchg
pop
sub
(bad)
pop
pop
push
cli
loop
mov
sub
push
jle
add
ficomp
test
cdq
mov
loopne
stos
adc
scas
pop
dec
fsub
dec
cmp
in
and
sbb
dec
mov
sub
or
pusha
mov
aaa
(bad)
push
(bad)
and
mov
and
mov
xchg
sub
cs
xor
movs
out
and
(bad)
daa
or
aaa
rcr
stc
or
retf
movs
in
mov
popa
mov
sub
hlt
and
mov
mov
mov
pop
mov
popa
xor
sub
jne
movs
or
mov
pop
(bad)
and
push
sbb
sbb
std
inc
pop
and
aas
jecxz
dec
sub
mov
mov
push
outs
ins
shl
sahf
shl
mov
mov
adc
and
or
mov
enter
in
add
iret
and
xchg
lods
inc
mov
test
push
fst
pop
inc
pop
sbb
jo
(bad)
xchg
or
rcr
adc
sar
mov
mov
cmps
sar
mov
pop
cmp
mov
in
jo
and
xor
cmp
es
mov
lds
ficom
xchg
ins
test
ret
push
addr16
inc
add
test
push
pop
inc
scas
mov
dec
xor
jbe
add
shr
and
adc
adc
shl
addr16
sahf
cmp
jecxz
adc
pop
sti
pop
mov
cmp
or
sbb
jg
punpckldq
adc
push
inc
mov
daa
mov
xchg
fld
inc
adc
inc
dec
xor
loopne
fild
movs
push
push
loope
int3
ret
(bad)
rcr
scas
add
imul
push
fisubr
xor
repz
arpl
loop
aam
(bad)
lea
shr
jle
rcl
not
inc
jnp
adc
in
ins
push
jbe
xchg
cmp
bound
mov
or
add
adc
int3
jbe
push
mov
dec
bound
jae
outs
in
popa
int3
(bad)
push
xchg
mov
dec
sbb
sub
push
mov
xchg
bound
movs
add
jecxz
mov
arpl
pop
(bad)
push
mov
mov
(bad)
retf
fcomp
stos
push
adc
jmp
pop
es
push
sbb
into
xor
lods
retf
mov
repnz
add
lods
std
sub
cmp
jns
sbb
loopne
mov
push
jne
dec
out
ins
mov
movs
push
mov
nop
int
mov
pop
mov
mov
imul
xlat
mov
stos
xor
jle
mov
test
jae
or
std
inc
(bad)
repnz
xor
sbb
xor
call
push
inc
mov
xor
cmp
out
rcr
add
cmp
pop
mov
and
or
ins
outs
mov
mov
(bad)
fsub
in
xchg
mov
imul
scas
sbb
jmp
mov
in
inc
xchg
es
xchg
xor
fadd
push
pop
sbb
js
(bad)
push
inc
das
mov
adc
call
int
out
dec
sub
mov
sbb
aaa
xor
scas
outs
retf
imul
pop
adc
xor
shr
test
aaa
rcr
mov
mov
scas
xchg
lea
dec
dec
and
xlat
nop
in
idiv
adc
jno
xchg
pushf
cmp
pusha
imul
call
movs
mov
fsubr
add
push
mov
or
jmp
sbb
mov
movs
call
out
dec
(bad)
jno
lock
gs
jge
push
jns
(bad)
outs
inc
pusha
popfw
sub
push
loope
sub
dec
(bad)
aad
repnz
mov
sahf
pop
jecxz
or
loop
xchg
fsubp
mov
and
js
leave
fcom
jge
jge
mov
es
js
xor
dec
jne
jecxz
pop
ret
sub
sub
movs
mov
stos
adc
mov
hlt
ins
sub
cs
jmp
lods
ds
loopne
mov
sbb
sar
dec
add
pop
out
rcr
sbb
mov
sbb
sub
push
add
sub
sahf
xor
sub
loope
into
sbb
test
ins
ja
jge
sub
pop
cmps
mov
adc
inc
inc
std
push
cmps
cmc
push
xor
sbb
iret
or
sub
in
xor
pop
jg
pushf
mov
rol
lar
out
loope
bound
mov
(bad)
gs
call
cmp
imul
loopne
cmp
lock
xchg
jmp
pushf
sbb
retf
inc
sahf
cmp
dec
shr
push
cmp
fidiv
mov
add
and
mov
push
xor
cs
mov
sbb
stc
and
mov
xchg
std
dec
stos
(bad)
fnsave
xchg
pop
xor
adc
adc
or
cmp
adc
loop
test
sub
dec
jle
mov
in
imul
aas
mov
loope
xchg
cwde
inc
sub
stc
repz
or
dec
fnstcw
hlt
aam
loope
xchg
or
mov
mov
jge
dec
inc
movs
xchg
cmp
cmp
int
jmp
dec
fisubr
sub
jecxz
jg
xchg
xchg
int3
sbb
add
pop
mov
mov
fs
hlt
adc
cmp
xchg
add
mov
(bad)
in
pop
and
mov
scas
out
pop
aad
push
(bad)
aam
add
xchg
xor
icebp
or
jbe
test
mov
mov
cmp
xor
ret
adc
push
jmp
dec
dec
test
aaa
das
loopne
out
aas
cli
lds
sub
into
popa
fild
xor
or
xchg
enter
pop
repnz
jno
push
dec
xchg
cmp
lods
mov
aas
gs
lods
cs
lds
(bad)
pop
mov
mov
int3
dec
and
mov
in
push
(bad)
adc
stc
pop
das
mov
js
push
cmp
jns
loope
rol
adc
xchg
jb
jns
lods
loop
in
lds
mov
sub
jnp
push
mov
pop
push
ss
into
xlat
mov
mov
out
out
icebp
dec
or
sbb
inc
jae
setne
ja
adc
data16
inc
push
xchg
pop
jmp
adc
stos
adc
sar
cmc
jecxz
mov
(bad)
add
rcr
arpl
(bad)
xor
out
std
mov
ret
mov
movs
imul
ins
mov
out
jbe
and
sti
or
push
pop
lahf
enter
nop
movs
fsub
and
or
rcr
xor
cmp
popf
and
xchg
cwde
scas
mov
xor
inc
jno
mov
push
ret
ins
movs
inc
jecxz
mov
pop
arpl
xor
sbb
jmp
pushf
push
repnz
xor
fcomp
pop
arpl
aas
sbb
fmul
xchg
inc
fild
pop
pop
sub
add
adc
sub
cmp
sub
sub
cld
jmp
xchg
pusha
shl
jl
pop
in
add
test
pop
jns
inc
pop
jmp
mov
jle
adc
fdivr
mov
xchg
arpl
movs
das
(bad)
mov
xchg
(bad)
mov
sub
fimul
sbb
add
push
fs
dec
dec
or
and
test
sti
lock
adc
lds
xor
data16
stc
(bad)
in
test
ds
in
ror
jns
sbb
pop
jl
fisttp
call
rcl
(bad)
(bad)
inc
(bad)
jns
movs
(bad)
cdq
mov
test
ss
es
sub
int
pop
inc
shr
mov
sub
add
out
stos
xchg
or
pusha
jmp
popa
mov
sbb
mov
ror
call
mov
push
jmp
push
push
or
sub
sahf
js
jb
movs
mov
not
(bad)
ret
mov
adc
pop
out
aad
push
test
call
or
repnz
in
push
xchg
in
int3
adc
scas
mov
xchg
jle
mov
and
xchg
mov
or
cld
cmp
lods
dec
clc
inc
addr16
leave
push
push
mov
cs
bound
mov
loop
cld
call
(bad)
add
and
pop
xchg
pop
xchg
cmp
mov
fist
iret
or
or
sahf
jmp
mov
pop
push
fs
lods
pop
mov
mov
pop
scas
aad
mov
out
leave
inc
jmp
ffree
movs
enter
cmp
cmp
cli
fnstcw
lea
and
inc
inc
push
arpl
inc
stos
cmp
adc
mov
push
pop
pop
data16
mov
push
stos
in
sahf
and
movs
rcl
cmp
xor
pop
adc
jle
pop
das
pop
pop
lods
push
mov
push
add
mov
mov
or
test
jo
add
pop
clc
retf
scas
or
std
mov
mov
adc
ss
push
les
idiv
in
arpl
cwde
xchg
push
cdq
push
xor
xor
push
inc
dec
fcomp
and
jns
mov
sbb
dec
mov
das
pop
daa
add
add
pop
(bad)
std
push
loopne
cmp
std
inc
hlt
add
fbld
pop
lock
mov
ja
push
call
sbb
addr16
mov
and
pop
adc
push
aad
or
inc
arpl
jge
sub
jl
xchg
popf
push
ins
addr16
pop
test
lods
xchg
sbb
push
pushf
inc
mov
paddw
test
mov
mov
xchg
xchg
loope
imul
and
mov
add
mov
and
mov
loopne
(bad)
loope
in
test
ins
inc
sti
imul
xchg
mov
or
add
mov
adc
xchg
jno
rcr
out
push
retf
adc
dec
in
mov
(bad)
addr16
xchg
push
add
push
ins
fld
cmps
cmp
aad
das
cld
add
jo
sub
fst
jg
fs
xchg
(bad)
stc
pop
fild
(bad)
enter
push
sub
(bad)
repnz
imul
mov
fucomp
inc
mov
cmp
cmp
dec
dec
sbb
mov
icebp
mov
inc
xchg
mov
jno
loopne
mov
mov
push
pop
aaa
push
mov
xor
ret
pusha
cs
jo
stc
adc
add
mov
jae
sbb
add
jg
rcl
mov
les
retf
or
add
xchg
fwait
(bad)
cmp
inc
cld
xchg
lahf
inc
cmp
cmc
lahf
mov
das
scas
mov
ins
inc
jle
(bad)
psubusb
inc
arpl
inc
inc
xlat
aaa
rcr
sbb
(bad)
and
xor
arpl
mov
xchg
out
test
and
ret
retf
cmps
daa
cld
xchg
(bad)
dec
movs
out
retf
fnsave
and
in
cmps
adc
pop
outs
mov
adc
lods
fld
stc
mov
sti
hlt
(bad)
xor
cli
out
test
lods
jp
inc
fld
dec
je
(bad)
add
test
sar
or
xchg
mov
xchg
cmp
lods
mov
cmp
loopne
mov
jnp
je
cmp
into
daa
add
jb
ins
cmps
inc
xlat
dec
push
imul
div
lods
fs
jg
nop
out
psubsw
cmp
(bad)
mov
fild
jl
xchg
add
out
sub
inc
add
or
jmp
mov
xor
pop
punpcklbw
sar
out
xchg
xchg
sahf
xor
xor
mov
cmp
add
or
add
jns
or
push
mov
shr
cdq
(bad)
adc
sbb
dec
shr
enter
xor
sbb
pop
call
cs
pushf
or
mov
mov
aaa
lahf
add
ss
mov
mov
xor
pop
mov
mov
in
(bad)
cmps
cmps
and
push
jo
shl
js
movd
ins
cmps
ror
cmps
retf
pop
hlt
jle
pop
cmp
mov
or
mov
popa
and
leave
stc
mov
call
pop
adc
dec
dec
sub
or
and
adc
mov
inc
fldenv
sub
shl
xor
pop
ror
xchg
xor
xchg
neg
ror
(bad)
ficomp
int3
sbb
or
ss
pop
fstp
or
fsubp
mov
arpl
dec
jmp
repnz
(bad)
out
sbb
scas
mov
dec
cmc
cwde
sbb
push
ins
(bad)
push
loop
pop
dec
jmp
out
push
cli
inc
mov
jo
mov
xchg
mov
jg
inc
(bad)
mov
mov
int
fsub
push
add
arpl
in
push
call
retf
rol
add
mov
ja
dec
movs
inc
loop
pop
icebp
pop
inc
ret
out
fnstenv
mov
or
cmc
lock
(bad)
in
dec
xchg
dec
pop
out
adc
xchg
add
dec
test
jne
xchg
aad
push
leave
and
ins
(bad)
fistp
xchg
jle
popf
or
int3
test
adc
push
cmp
xchg
cs
inc
nop
test
sbb
adc
cwde
retf
data16
std
fnstcw
mov
pop
aaa
jge
jg
mov
push
inc
lods
leave
cdq
outs
or
pop
dec
sbb
out
gs
sbb
call
sub
cmp
lods
fidivr
mov
mov
push
into
xchg
add
push
add
mov
lods
ret
jae
mov
cld
adc
mov
cli
shl
faddp
push
or
adc
push
push
retf
push
mov
call
mov
xchg
jb
fsubr
adc
dec
aam
dec
push
mov
daa
dec
ror
stos
sti
mov
xchg
and
adc
test
push
nop
scas
mov
inc
push
jae
mov
sbb
in
xchg
lahf
adc
push
xchg
xchg
jbe
mov
xchg
push
xor
(bad)
mov
ja
std
add
and
mov
and
push
imul
out
shl
dec
sub
inc
dec
gs
or
sbb
sbb
jp
cmp
pop
dec
cmp
cld
mov
je
pop
das
imul
dec
in
push
cli
and
mov
mov
fist
mov
add
inc
push
inc
int
int
inc
inc
inc
add
cmp
add
push
mov
vandpd
cmp
push
(bad)
hlt
icebp
bound
mov
out
or
xlat
mov
cmp
mov
add
(bad)
lods
sahf
jno
sbb
pop
push
popa
pop
dec
js
push
jne
cmp
ret
cpuid
dec
stc
scas
call
shr
bswap
or
xchg
leave
das
dec
jns
outs
call
mov
repnz
test
jl
sbb
or
icebp
enter
jbe
dec
dec
addr16
idiv
adc
sub
jg
xor
movs
cdq
mov
ret
xor
(bad)
cli
in
sbb
pop
rol
(bad)
jae
ins
push
add
je
push
jae
inc
xchg
xchg
div
jnp
repz
popa
cmp
dec
xlat
mov
mov
mov
arpl
mov
jbe
cmp
in
mov
inc
les
add
ret
neg
fld
and
cmp
rol
push
lds
mov
pop
in
dec
int
ss
mov
outs
xchg
mov
pop
sbb
push
mov
pop
cmp
(bad)
sar
in
or
popa
jns
idiv
inc
ds
call
rcl
sar
or
cmp
movs
xchg
mul
arpl
movs
scas
rcl
adc
adc
in
or
xor
sub
pop
out
dec
jb
cwde
xor
js
fisubr
(bad)
div
sbb
push
cld
(bad)
les
(bad)
pop
and
retf
jl
mov
sti
dec
out
ja
push
push
cli
retf
xor
int3
jne
lahf
aad
repz
rcr
imul
push
loop
adc
div
ins
xor
loop
mov
jg
xor
add
ja
jmp
push
xchg
hlt
push
popa
int
jbe
div
sbb
xchg
gs
sub
mov
mov
movs
add
dec
test
xchg
xchg
lahf
int
out
and
push
xor
addr16
inc
mov
cmp
xchg
lods
enter
imul
xchg
ror
xor
xlat
mul
adc
sbb
hlt
pusha
or
sbb
or
fsubr
or
jl
add
mov
stos
push
(bad)
loope
xchg
jmp
or
mov
inc
xor
fwait
hlt
and
retf
retf
mov
add
pop
popf
adc
pop
cli
ins
in
add
jae
pop
push
xor
(bad)
lds
cdq
add
(bad)
ja
xchg
adc
(bad)
jl
xchg
retf
mov
loope
pop
or
cmp
xor
popf
or
add
xor
jl
push
stos
cmp
dec
(bad)
repz
or
push
cli
hlt
push
shl
mov
mov
inc
mov
movs
fcomp
xor
(bad)
sahf
idiv
jb
mov
lock
fcmovnbe
jnp
cmp
aad
adc
cld
test
rcr
xor
imul
ja
clts
jecxz
jge
cmp
js
scas
jmp
je
add
test
jp
(bad)
mov
jns
fs
push
pop
shl
inc
movs
jmp
test
jmp
push
ins
push
xor
add
push
and
adc
xlat
cwde
push
pop
xchg
inc
cli
mov
jne
mov
xor
mov
jmp
jg
stos
sti
push
dec
(bad)
mul
imul
inc
cmp
xchg
sub
inc
pop
movs
imul
gs
into
inc
and
or
xchg
mov
iret
sub
stos
adc
ss
sbb
enter
push
pop
fsub
or
int3
pop
mov
inc
mov
jp
xchg
shl
mov
mov
inc
in
scas
sbb
xor
push
call
imul
outs
push
mov
xchg
clc
pop
push
jmp
inc
jmp
dec
push
jmp
lods
in
mov
repz
outs
pop
inc
aaa
push
das
sbb
add
jnp
pop
push
cmp
xor
mov
out
daa
mov
push
loopne
out
jmp
sub
clc
shr
nop
retf
inc
aas
pop
mov
sub
sti
mov
xor
ja
and
ror
add
lock
out
jae
or
ins
enter
push
lods
ss
or
imul
push
(bad)
repnz
mov
xchg
and
test
pop
scas
jle
xor
mov
add
sbb
push
and
xchg
fimul
mov
in
cmp
mov
leave
fisubr
mov
push
mov
adc
mov
out
jae
push
pop
inc
push
(bad)
jbe
and
xor
cmp
inc
xchg
add
sbb
mov
aam
mov
loopne
pusha
xchg
dec
mov
dec
and
or
cdq
fucomp
arpl
or
outs
xchg
mov
cmps
(bad)
and
cmp
shl
jno
dec
sub
mov
jb
xor
dec
in
je
ds
add
push
(bad)
mov
mov
push
in
repnz
xor
cmp
or
sbb
ss
inc
loop
fs
add
mov
imul
sub
push
pop
mov
add
lds
xor
lods
dec
inc
stc
mov
pop
push
inc
push
aaa
dec
push
sti
pushf
hlt
dec
test
lahf
push
mov
adc
fsub
pop
enter
test
jno
(bad)
in
shl
daa
loope
imul
pop
fstp
fsubr
fdiv
je
rcl
pop
in
pop
push
or
add
jne
inc
mov
loope
mov
fistp
imul
cmp
(bad)
mov
das
or
push
(bad)
jp
mov
mov
and
jg
int
pop
lods
cmp
out
inc
push
mov
ror
sub
or
xor
fistp
bound
sub
mov
test
aas
mov
ins
test
ror
sahf
xor
rcr
sar
mov
retf
xchg
aad
sub
xchg
pop
stc
sbb
mov
jmp
addr16
jg
pop
aad
mov
mov
dec
daa
sbb
add
dec
fcmovu
enter
jmp
xchg
pop
mov
xor
(bad)
out
daa
mov
mov
sub
dec
cmps
pop
xor
fadd
cmps
add
lods
sahf
outs
mov
lea
pop
push
sub
pop
adc
inc
mov
fst
pop
and
jb
push
out
stc
aad
lahf
push
cmps
ds
add
stos
push
call
idiv
sub
inc
shl
call
nop
inc
test
sub
mov
ja
iret
ins
mov
add
movs
or
add
pop
add
push
xor
push
out
or
sbb
retf
sub
push
pop
out
(bad)
mov
pop
fld
mov
xchg
sub
in
retf
ins
xchg
std
dec
ret
js
sub
or
ret
inc
sub
scas
adc
or
or
cwde
adc
aam
pop
push
jmp
push
dec
(bad)
sbb
retf
repz
mov
add
sti
out
or
fst
add
xchg
cmc
loopne
jno
sar
or
push
inc
mov
pop
xor
or
push
icebp
mov
inc
loopne
addr16
jb
js
aas
xlat
cs
mov
into
xor
add
ins
push
pop
adc
xor
dec
nop
dec
mov
mov
(bad)
pop
dec
int
cdq
fldcw
pop
std
movs
jge
fucom
push
mov
ss
jle
cmps
mov
cmc
bound
or
dec
mov
movs
jl
xor
(bad)
sti
pop
hlt
out
mov
out
inc
sti
or
rcr
mov
daa
add
(bad)
dec
and
je
or
dec
inc
rcl
fsubp
shl
push
jbe
adc
mov
jno
sub
jnp
xor
and
jb
movs
mov
test
pop
mov
sbb
push
rcl
popa
test
outs
jl
jle
and
repnz
cld
or
daa
loope
pop
mov
or
cmp
ficomp
test
and
lods
add
jae
cmp
inc
loopne
jae
(bad)
sub
ds
stos
jp
sub
mov
xchg
add
mov
int3
cdq
add
mov
inc
mov
pop
pop
fadd
mov
hlt
lock
mov
je
lock
sbb
adc
or
push
push
dec
adc
add
cdq
push
(bad)
sti
fs
scas
sub
cmp
lds
es
ror
stos
pushf
sub
inc
pop
aam
push
sar
mov
ret
add
jmp
lea
inc
div
dec
outs
xor
movs
jmp
cmps
push
fist
scas
and
dec
xor
adc
retf
fsubr
retf
enter
repnz
xor
retf
mov
jbe
add
dec
sbb
jns
int
mov
xchg
cmp
sub
mov
call
imul
pop
xchg
inc
rol
or
(bad)
push
addr16
jae
hlt
inc
mov
fld
(bad)
inc
xchg
rcl
movs
mov
mov
(bad)
xor
xor
adc
mov
inc
add
sbb
(bad)
mov
lds
cdq
xchg
(bad)
popf
mov
sub
cwde
fist
pop
pushf
std
or
sbb
in
push
test
and
retf
imul
outs
enter
adc
bound
adc
call
out
scas
fldenv
inc
jo
in
mov
icebp
sbb
or
cdq
sub
xchg
sub
sub
loop
add
pop
push
ins
pop
je
popa
adc
and
sbb
sub
pusha
dec
dec
xor
loopne
aam
ror
aas
pop
(bad)
fild
inc
mov
popf
scas
xchg
jbe
test
pop
mov
or
lods
mov
pop
ret
cmp
add
add
adc
aas
fdivp
jg
and
shl
push
sub
jnp
in
xor
inc
das
push
mov
sub
inc
cdq
inc
add
icebp
mov
inc
sbb
mov
xor
out
dec
inc
jmp
pusha
les
retf
das
in
mov
jl
js
dec
xchg
dec
adc
inc
in
cmc
sbb
inc
int
pop
mov
ja
pop
retf
dec
xor
mov
jecxz
dec
(bad)
mov
mov
sbb
mov
pop
in
fdivr
and
iret
lock
xor
fwait
ins
iret
xor
loop
ins
jp
mov
jnp
push
cmps
(bad)
mov
dec
mov
or
outs
dec
pusha
fstp
rcl
xor
fdivr
jl
pop
cwde
mov
cmp
retf
add
jae
cli
out
jge
pop
xor
not
pop
or
xchg
aad
inc
je
xor
bound
out
jle
sar
sub
pop
pop
jle
jne
push
in
sub
popa
mov
mov
sub
cmp
jnp
repnz
mov
sbb
sub
xchg
loopne
mov
mov
je
outs
fnstsw
adc
mov
fwait
pop
rcl
cwde
mov
cmp
xchg
shr
test
pop
ds
pandn
out
mov
inc
sbb
call
mov
jbe
and
and
xor
inc
pop
cmc
clc
lods
ficomp
push
jmp
sub
stos
xchg
or
cwde
loopne
lods
fisub
std
jge
xchg
rol
and
gs
add
or
jmp
pop
jno
aad
sahf
mov
les
cmc
enter
jnp
inc
ficomp
xor
sbb
inc
and
add
arpl
ret
test
jp
mov
cmp
call
cmp
sbb
mov
adc
bound
adc
jb
pop
getsec
xor
jp
mov
push
inc
pop
mov
inc
invd
or
loopne
lahf
test
push
and
(bad)
mov
mov
jecxz
lods
test
mov
mov
cmp
dec
inc
js
popf
retf
repnz
and
mov
in
outs
les
aas
mov
dec
fwait
xchg
inc
in
popa
lods
div
cmps
sti
lock
bound
lds
in
pop
mov
icebp
adc
push
ficomp
not
sub
icebp
dec
inc
pop
dec
dec
add
mov
je
dec
addr16
cmp
xor
ja
sbb
adc
mov
fnstsw
out
mov
imul
mov
pop
jno
cld
xor
pop
aad
and
cli
sbb
data16
dec
iret
scas
(bad)
retf
mov
movs
sbb
inc
inc
in
pop
add
scas
gs
(bad)
cmc
daa
adc
cmp
test
push
mov
jo
add
fnstsw
jp
xchg
(bad)
aam
fistp
jns
or
pop
mov
frstor
xor
aas
ror
iret
sub
cmps
fimul
outs
(bad)
sbb
dec
ret
addr16
std
pop
mov
retf
push
pop
inc
lods
and
retf
es
jmp
cs
dec
fidiv
test
dec
lahf
aaa
iret
jnp
pop
sub
and
cmc
xor
popa
ret
dec
loopne
fldenv
aaa
xchg
jle
and
pop
aas
and
xor
xlat
js
dec
loope
inc
sbb
xchg
push
bound
jo
mov
sub
and
xchg
sub
jg
jmp
cmp
stc
int
dec
jmp
clc
ins
xor
sbb
arpl
mov
gs
mov
mov
jne
icebp
mov
scas
inc
mov
sti
push
enter
dec
fisttp
push
ds
loop
pop
in
push
shl
aas
add
bound
push
pop
adc
test
ins
push
loopne
xor
je
aas
in
jns
xchg
call
sahf
sub
adc
add
out
arpl
test
sbb
pusha
ss
test
pop
push
fdiv
xchg
shl
jae
cmp
xor
fsubr
mov
fstp
fimul
inc
das
shl
out
stc
jmp
jno
mov
ret
cmp
je
push
dec
dec
cli
mov
pop
stc
or
push
ret
pop
leave
in
aaa
sub
in
jne
sti
jg
rcl
mov
push
xchg
mov
ins
sub
mov
lods
jecxz
clc
push
mov
loop
inc
xor
dec
retf
xor
aaa
das
mov
fisubr
aas
ficom
add
jbe
mov
outs
sub
pop
sbb
sub
retf
fsubr
push
lahf
iret
mov
mov
(bad)
retf
or
test
fld
je
lahf
aas
xchg
les
lods
scas
cld
push
test
push
fiadd
sbb
pop
adc
xor
daa
push
add
add
mov
jne
ficomp
scas
sbb
pop
(bad)
xchg
mov
icebp
push
push
je
cmc
in
xchg
test
mov
xor
pop
xor
or
pop
mov
dec
add
stos
out
xchg
push
pop
xchg
add
mov
std
sub
pop
cwde
mov
adc
(bad)
cmp
push
dec
mov
mov
xchg
shl
bound
call
push
sbb
cld
popf
test
retf
cs
pop
push
xor
ror
sbb
stc
sbb
mul
jmp
push
jne
daa
adc
inc
jge
iret
icebp
out
(bad)
daa
mov
cdq
lods
in
int3
dec
push
loopne
push
(bad)
pushf
lahf
jno
cmc
outs
in
mov
(bad)
imul
push
hlt
cs
hlt
sub
sti
inc
adc
pushf
out
cmp
adc
xor
jge
add
xor
test
or
dec
lods
jnp
imul
stos
sbb
out
push
push
movs
jne
movs
jge
out
call
inc
je
inc
inc
add
psubq
out
push
adc
adc
xor
mov
ret
push
ins
fs
sahf
nop
cli
sbb
cdq
ret
out
int
fist
sbb
xchg
cli
loopne
hlt
popf
mov
mov
or
das
or
adc
int
push
mov
jo
inc
icebp
cmp
shl
lock
or
fmul
nop
cmc
push
jae
loopne
mov
pop
arpl
adc
stos
mov
add
inc
xor
and
mov
les
popa
adc
iret
clc
out
lahf
inc
jbe
ins
addr16
jg
(bad)
jecxz
mov
add
cmp
fistp
lock
(bad)
cmc
mov
dec
cmps
outs
cmps
call
mov
fbstp
adc
dec
adc
mov
cmp
or
cwde
mov
mov
imul
ret
mov
stc
dec
push
and
imul
movs
inc
and
(bad)
push
fcom
dec
rcl
cmps
aas
push
mov
jle
inc
jmp
jno
jne
aam
call
xor
pop
fmul
inc
add
mov
rol
(bad)
add
push
lods
shr
mov
ds
cmp
adc
adc
or
cld
pop
aam
inc
cld
mov
(bad)
and
mov
shl
es
mov
jg
lea
add
push
pushf
lds
movs
pop
outs
lods
mov
rcr
lahf
popf
jnp
xor
sbb
mov
push
nop
(bad)
pop
mov
mov
sbb
lea
lods
imul
mov
pop
xchg
cwde
aam
(bad)
mov
outs
lahf
cmp
pushf
xor
pop
and
mov
adc
call
jo
xor
outs
test
data16
add
scas
hlt
mov
mov
mov
sub
dec
(bad)
clc
or
or
dec
retf
sbb
push
in
dec
cli
iret
test
add
sub
mov
jnp
and
cs
cmp
sub
sahf
ja
lock
xchg
clc
xchg
stos
mov
mov
data16
popa
idiv
mov
bound
lods
sub
push
cdq
or
jecxz
sbb
push
fisttp
sub
mov
cmp
xor
retf
js
aad
(bad)
xchg
or
in
cld
xlat
pusha
(bad)
add
push
xor
adc
dec
mov
sbb
mov
dec
xchg
ds
popa
data16
inc
shr
ss
jmp
lods
dec
push
xchg
ins
ret
inc
mov
cmps
test
cld
mov
mov
sti
(bad)
div
xchg
ss
les
adc
arpl
mov
sbb
push
mov
call
not
pop
and
ins
jae
sbb
sahf
fsub
jle
mov
enter
test
xchg
pop
or
inc
add
(bad)
ror
xchg
jmp
nop
mov
xchg
dec
daa
xchg
xor
sahf
rcl
fs
xor
pop
sbb
retf
xchg
add
cs
scas
aaa
mov
sub
in
leave
fmulp
cmp
sub
(bad)
pop
js
movs
(bad)
out
popf
test
mov
adc
pop
xchg
cmps
xchg
pop
jg
inc
repnz
jns
rcl
cmc
cmp
pop
outs
outs
pop
lods
push
sbb
jecxz
fdivr
cmp
imul
fsub
cmps
pop
mov
lods
mov
push
mov
sbb
rcr
lock
scas
jmp
sbb
sub
imul
xchg
rol
pop
jecxz
sub
into
clc
xor
xchg
dec
fidivr
rcr
bound
mov
retf
and
shl
xchg
sub
sbb
sbb
or
je
sbb
add
mov
inc
or
and
fisttp
ins
lds
cli
shl
ret
jnp
stos
mov
cmp
rcl
popf
fst
push
fs
jmp
inc
mov
inc
jg
and
aaa
push
xor
loop
out
movq
out
retf
scas
add
jb
mov
sbb
jle
jmp
push
inc
xor
add
pop
ret
push
arpl
in
inc
xor
add
out
repz
fmul
mov
out
jno
mov
int
int
repz
mov
arpl
aas
dec
ret
pop
arpl
cmp
mov
xchg
dec
fcmovne
adc
pop
cmc
mov
mov
push
clc
gs
mov
xlat
scas
push
mov
dec
int
push
sar
shl
loope
push
xchg
popw
outs
cmp
xchg
dec
jmp
adc
xchg
jecxz
add
pop
in
mov
mov
pop
cmp
fist
rol
stc
and
dec
pop
push
pop
(bad)
sub
ja
add
in
or
(bad)
div
outs
sub
jmp
(bad)
jnp
and
push
pop
xor
xlat
stc
dec
inc
cli
es
test
pushf
xor
cmp
popf
leave
cmp
mov
(bad)
fs
dec
mov
out
mov
jp
popa
sub
or
adc
pop
fisubr
sub
ret
ja
cld
push
fwait
out
mov
scas
xchg
iret
ror
jb
test
(bad)
mov
dec
jmp
mov
lahf
or
sbb
dec
or
push
ds
xor
mov
xchg
lea
adc
pop
cld
int3
cmp
adc
int
(bad)
fild
jl
stc
int3
ja
adc
jle
sbb
mov
or
mov
or
les
fsub
out
fs
push
mov
mov
and
cmp
inc
ror
xchg
hlt
push
fmul
mov
dec
mov
mov
or
adc
call
retf
test
sub
mov
push
mov
lds
shl
shl
fyl2x
xor
sub
out
push
pop
sbb
aaa
mov
mov
retf
out
mov
push
inc
hlt
mov
pusha
push
pop
dec
add
add
mov
sti
ret
pop
jb
sahf
jge
test
mov
sub
mov
jle
push
out
add
cmp
iret
inc
loope
sub
xor
sbb
xor
sbb
shl
push
cmp
inc
mov
add
loopne
cmp
sbb
push
jecxz
jecxz
les
mov
mov
mov
iret
jbe
mov
shl
ja
cwde
xor
inc
inc
xor
sbb
add
(bad)
push
mov
push
sar
aad
test
es
cmp
sar
pop
stos
adc
sbb
cli
adc
enter
(bad)
mov
push
addr16
dec
push
test
add
neg
mov
xchg
aas
retf
es
push
nop
stc
(bad)
fdivr
inc
pop
xor
pop
mov
push
mov
fmul
pop
xchg
mov
cld
cmp
shl
je
xchg
pop
or
mov
jne
imul
repz
lods
pop
call
inc
push
sbb
test
mov
cmp
sahf
je
iret
sbb
jmp
xor
ds
(bad)
mov
inc
push
dec
jns
out
out
cmc
or
sbb
xor
jb
cs
hlt
adc
xchg
xchg
sbb
pusha
pop
add
je
iret
loop
in
xlat
pop
push
push
pop
push
ins
and
aad
adc
mov
je
retf
ror
call
popf
test
arpl
ror
inc
in
fnstsw
add
into
retf
jo
mov
add
sub
pop
adc
ror
mov
pop
pop
dec
push
add
push
adc
popf
sub
out
je
fisttp
or
push
aaa
shl
and
fcomip
shr
sub
in
hlt
push
arpl
mov
aad
or
push
sbb
repnz
mov
mov
sub
(bad)
cmp
call
dec
jp
ds
mov
mov
(bad)
fwait
mov
cmp
out
mov
inc
clc
iret
push
stos
add
inc
iret
scas
fs
pop
inc
dec
lahf
shl
add
cmp
pop
or
xchg
scas
add
cmp
sub
movs
inc
pop
out
add
shl
sub
outs
adc
mov
add
xlat
or
jns
(bad)
cli
or
push
push
rcr
sbb
pop
xchg
arpl
mov
retf
inc
or
sar
cmp
es
xchg
mov
popf
rol
jmp
push
add
xchg
adc
loopne
in
jl
jge
or
(bad)
pop
mov
loope
adc
dec
cmp
push
(bad)
jmp
shl
sub
or
jno
and
nop
jl
(bad)
popa
leave
cmp
xchg
mov
sbb
xchg
mov
mov
into
mov
out
popf
jbe
das
xor
sbb
sbb
lea
adc
pop
test
jmp
and
xor
mov
ficom
xor
je
out
fwait
and
sbb
push
mov
dec
xchg
jb
and
inc
ror
inc
stos
mov
sar
test
mov
xchg
adc
es
stos
jp
xchg
mov
cs
idiv
std
xor
adc
pop
popf
test
add
xor
mov
mov
inc
fisub
xlat
jnp
jae
hlt
mov
jmp
pushf
not
or
ds
adc
cli
sti
cld
ret
push
sbb
sar
aaa
mov
cmp
mov
sti
movs
add
lea
or
sti
mov
hlt
sbb
inc
sbb
xor
mov
xor
jmp
cmps
sbb
sub
std
mov
push
push
ror
mov
ins
lock
xor
(bad)
fstp
int
movs
int
inc
scas
test
or
mov
sahf
push
sub
push
adc
jne
test
and
retf
mov
push
dec
es
out
aam
push
mov
or
dec
push
cmc
xor
out
imul
sahf
pop
sahf
std
scas
call
cli
jmp
or
sub
lahf
mov
xchg
imul
inc
push
mov
sbb
mov
cmc
sub
and
jne
iret
sbb
mov
dec
pop
jle
adc
sub
pop
xchg
mov
fimul
iret
inc
dec
mov
push
cli
out
adc
mov
mov
movs
popa
in
cmp
addr16
gs
xor
xor
push
sbb
fs
fcomp
aas
jb
and
and
rcr
aas
lods
(bad)
js
sbb
mov
retf
jno
inc
fcom
or
inc
mov
mov
pop
in
ficom
mov
push
in
push
pop
fdiv
pop
int
test
int3
ins
lahf
jp
sbb
rcr
mov
jno
sti
xor
add
rcr
lahf
cmp
xor
ret
fisub
loop
lds
stc
sub
and
sti
sub
inc
retf
or
mov
pop
ror
xor
mov
mov
or
jne
cmp
add
cli
sbb
mov
iret
std
sbb
pcmpeqw
cmp
inc
adc
ja
gs
mov
adc
out
jns
mov
repz
sbb
mov
sbb
clc
push
loope
or
xchg
pop
mov
add
mov
xchg
scas
xchg
outs
jnp
fnsave
pop
cmps
add
mov
cmp
or
pusha
mov
xor
push
dec
mov
cwde
imul
pop
and
das
or
xchg
repnz
arpl
cli
out
mov
ja
js
out
mov
or
sub
idiv
mov
or
push
cs
pop
ds
push
adc
mov
inc
xchg
iret
dec
outs
and
loope
out
jmp
jae
loop
cmp
cmp
mov
iret
lods
imul
dec
add
inc
and
fistp
dec
in
inc
arpl
rol
sar
adc
fnsave
sbb
pop
add
sbb
loopne
pop
inc
jle
mov
mov
xor
mov
retf
add
pop
push
ret
fstp
out
and
imul
dec
add
in
out
adc
inc
inc
ret
stos
push
jmp
bound
fwait
mov
int
fs
test
pop
fs
and
retf
movs
add
xchg
add
fs
mov
or
mov
mov
stos
rol
into
cli
aad
pop
aaa
dec
add
jge
mov
xchg
(bad)
jge
mov
not
jg
lds
mov
(bad)
jp
xchg
rol
mov
and
inc
(bad)
sar
inc
ins
call
sub
sub
std
lods
mov
bswap
jns
inc
ins
daa
test
adc
rcl
add
clc
sbb
inc
loope
adc
xor
xchg
popf
dec
add
rol
out
data16
jp
stc
xor
and
or
call
daa
add
rcr
sbb
jne
add
adc
xchg
fcmove
in
std
xchg
clc
inc
fild
sub
xchg
call
int3
movs
gs
xor
out
(bad)
gs
shl
dec
mov
mul
pop
jg
adc
inc
jno
cmp
gs
pusha
popa
push
mov
push
push
jg
xor
jo
ret
cmp
cmc
fsub
std
stos
fstp
cmp
loope
inc
mov
and
in
add
xchg
aad
mov
push
cli
lahf
in
pop
imul
int
out
bound
adc
adc
fxch
loop
repz
inc
xchg
fisub
push
sub
leave
leave
xor
pop
rdtsc
shr
mov
ret
xchg
retf
sar
pop
mov
mov
rcl
cld
jle
ins
cmp
pop
out
imul
adc
or
jle
inc
push
rcr
into
xchg
pop
test
sar
sub
(bad)
lods
mov
jp
iret
pop
or
cli
mov
(bad)
push
push
mov
rcl
mov
xchg
inc
test
sub
test
xor
mov
popf
test
and
mov
ret
retf
mov
popa
mov
fs
cmp
rsm
fdivr
mov
mov
(bad)
(bad)
add
data16
cwde
pop
loope
and
sub
sti
jae
stc
ja
adc
xor
movs
dec
lea
bound
dec
jnp
push
mov
sub
repz
jns
pushf
int3
in
ror
dec
jb
mov
loope
lods
push
loopne
lods
jbe
push
sub
xchg
pusha
adc
push
imul
in
int
clc
mov
ret
sub
xchg
pop
lds
fnsave
push
jg
imul
cli
ss
js
ins
movs
add
cdq
call
pop
movs
sub
rol
pushf
fisttp
xor
mov
jl
inc
and
mov
mov
mov
ins
jne
mov
outs
inc
pop
loopne
aam
sub
inc
pop
pop
or
ds
movs
sub
mov
dec
push
xor
inc
aaa
and
jns
pop
std
into
imul
sbb
cmc
push
call
lods
clc
int3
js
xor
imul
ffree
outs
je
jno
cmps
xchg
out
dec
add
int
jnp
push
or
lods
xchg
(bad)
cmp
and
cmc
lea
pop
and
adc
lods
mov
or
inc
jge
dec
test
mov
add
lea
cmc
mov
outs
jg
jp
sbb
test
int
and
sahf
xor
mov
(bad)
sub
pop
and
sbb
lods
outs
retf
inc
xlat
inc
ins
mov
fcmovb
lahf
movsx
mov
xchg
cmps
mov
std
jmp
sbb
popa
outs
push
inc
fnstsw
imul
and
arpl
dec
xor
or
mov
sbb
fsubr
fbstp
and
cmp
mov
jecxz
das
jae
xchg
and
mov
jo
sub
mov
mov
inc
retf
ror
sti
add
push
pop
jae
xor
xlat
outs
and
int3
and
outs
cmp
fadd
pop
dec
and
or
retf
sbb
mov
inc
sub
jle
adc
mov
enter
and
or
mov
fwait
out
fnstsw
outs
pop
pop
shr
inc
das
inc
lahf
bound
lods
mov
ss
jb
ins
daa
shr
and
daa
cmp
xor
fnstenv
cmps
fstp
xor
pop
adc
cwde
int
xchg
adc
aas
std
jl
xchg
std
mov
fst
call
mov
imul
dec
add
je
loope
mov
dec
inc
inc
and
push
test
jno
jmp
sub
sub
push
mov
(bad)
cs
or
and
shl
shr
mov
mov
xchg
push
xor
test
(bad)
jle
sub
outs
cmp
sub
cmp
fisttp
mov
scas
sbb
add
inc
div
std
jno
loope
dec
mov
xchg
imul
xor
repz
or
in
in
ja
push
mov
lea
mov
mov
fisubr
xlat
and
xor
movzx
mov
clc
lods
fisttp
jmp
xchg
jp
pop
jnp
adc
fist
(bad)
cmp
push
mov
mov
xor
sub
add
and
xchg
out
jmp
pushf
imul
sub
lahf
push
lods
push
dec
popf
ins
mov
popf
cmp
pop
(bad)
in
add
popa
leave
lods
in
clc
iret
fimul
xchg
fidivr
or
dec
dec
xchg
shl
sbb
sar
inc
mov
xor
dec
into
shl
(bad)
data16
mov
mov
mov
adc
mov
test
mov
pop
loopne
mov
aam
out
cmp
mov
fs
add
mov
or
test
adc
fimul
pop
sti
push
icebp
or
outs
pcmpeqb
sub
ja
adc
mov
mov
nop
addr16
mov
aaa
in
setp
mov
and
mov
sbb
pushf
mov
int
cmp
sub
imul
aam
sbb
fsubr
shl
cdq
sbb
inc
add
or
mov
lods
adc
imul
dec
inc
mov
call
mov
(bad)
fisubr
imul
cmps
sub
movs
mov
cli
inc
repnz
add
mul
cli
mov
out
les
fwait
push
pop
cs
test
enter
add
je
aam
pop
inc
or
fdivr
mov
popa
das
(bad)
add
pop
mov
ds
iret
repz
lahf
retf
aad
and
pop
(bad)
and
inc
lods
and
into
inc
push
mov
jne
out
out
pop
xchg
fbstp
mov
es
pop
cmp
mov
js
test
in
mov
shl
mov
add
fisub
jmp
mov
(bad)
sti
inc
push
xchg
jb
sar
inc
shl
popf
addr16
call
clc
jno
mov
mov
les
aad
mov
jbe
cmps
imul
daa
movs
jb
xlat
loopne
outs
out
mov
ficom
xor
jo
test
sti
mov
inc
push
add
pop
dec
movs
push
(bad)
out
maxps
addr16
inc
and
dec
int3
loopne
lods
test
js
or
xlat
rcr
out
clc
mov
inc
js
jge
fcom
add
jl
or
xor
xchg
sub
xchg
and
aad
cmp
and
rcl
push
sub
lahf
ror
jmp
dec
inc
push
mov
sbb
inc
(bad)
data16
push
inc
jmp
mov
dec
mov
mov
mov
popf
jp
or
call
mov
pop
daa
push
cmovae
xchg
or
fnsave
aaa
lds
neg
mov
inc
int3
mov
push
not
mov
(bad)
retf
xlat
xchg
xchg
aas
dec
shl
or
ret
mov
inc
push
adc
pop
fild
pop
cmp
xor
jbe
pop
cmc
fnstcw
aas
mov
push
rcl
jno
lods
jle
icebp
scas
inc
les
inc
call
push
mov
jecxz
frstor
adc
jb
dec
repnz
aas
or
xor
fisttp
popf
dec
pop
dec
fs
mov
push
mov
sbb
test
sbb
sub
repnz
xor
in
dec
or
sub
test
sbb
int3
push
pop
retf
mov
lahf
jmp
cmp
sub
lods
add
mov
xor
jb
pop
xor
outs
sbb
loope
xchg
outs
outs
ds
inc
or
pop
into
sub
cmp
push
not
jmp
retf
lock
xchg
or
xchg
add
mov
ds
test
fs
mov
jnp
dec
iret
mov
or
pop
mov
xchg
int
sub
xchg
jno
sbb
mov
mov
cmc
xor
inc
std
movs
aas
inc
out
push
inc
and
in
and
outs
rcr
fdivr
pop
mov
adc
jbe
mov
push
push
xor
push
push
fmul
sti
or
sti
mov
or
adc
popa
js
xchg
mov
sub
dec
mov
cmc
cmp
sbb
out
imul
ror
dec
or
cld
mov
lds
and
push
out
sbb
sti
cld
je
jmp
xchg
mov
mov
aad
ret
xor
jge
mov
cdq
(bad)
sbb
stos
lods
(bad)
mov
inc
dec
pop
(bad)
gs
cmp
mov
and
outs
and
mov
cmp
xor
(bad)
mov
dec
je
out
push
into
or
mov
aas
and
ds
mov
push
xor
and
enter
in
push
(bad)
out
push
adc
icebp
aas
and
inc
mov
arpl
enter
adc
add
pop
mov
hlt
cmps
adc
jge
pop
add
fst
shl
pop
ds
test
out
sub
xor
inc
aaa
test
jno
pop
mov
jmp
jno
call
sub
outs
adc
mov
outs
fsubr
lods
int3
ins
push
sub
or
inc
cmps
fst
sub
repnz
and
ins
das
sub
xor
(bad)
jns
inc
fisubr
adc
mov
shr
or
das
stc
xchg
out
inc
leave
push
hlt
cs
(bad)
pop
out
inc
mov
sbb
push
and
sub
mov
dec
add
addr16
sub
fist
out
out
ret
xchg
or
icebp
movs
int
imul
(bad)
(bad)
xchg
fadd
push
mov
push
loopne
xor
lods
jnp
or
ret
aam
add
mov
cmc
mov
jne
call
cmp
das
lds
ds
jns
ret
mov
jle
cwde
push
or
mov
arpl
push
fwait
xor
push
jnp
pop
mov
adc
dec
fs
inc
iret
lods
xchg
shl
mov
outs
push
dec
pop
(bad)
popa
lds
sbb
sar
jnp
movs
cld
xor
push
push
add
scas
mov
xlat
(bad)
leave
test
mov
(bad)
jo
push
or
sbb
in
jge
sub
sbb
movs
dec
push
loope
pushf
xchg
iret
or
jge
movs
sbb
in
add
(bad)
and
or
dec
mov
test
rol
scas
xor
xlat
retf
inc
out
adc
sbb
cmp
jle
aad
es
sbb
jmp
cmps
jl
dec
(bad)
add
in
ror
jno
aad
mov
add
out
xor
mov
(bad)
in
in
call
push
jge
add
leave
jl
pop
imul
out
in
dec
neg
ins
mov
or
push
or
(bad)
sub
pop
std
pop
cdq
dec
cmps
inc
cmp
mov
and
push
call
or
xor
stc
cmps
add
mov
inc
out
cwde
in
xchg
inc
cmps
sbb
xor
pop
gs
fisubr
cdq
outs
dec
cmp
mov
shl
fwait
fwait
mov
inc
mov
add
push
or
push
cld
dec
sub
test
sbb
pop
fstp
jae
(bad)
dec
add
xchg
repz
in
shl
fnstsw
dec
xor
xchg
ss
ins
adc
call
fwait
pushf
pop
test
aad
in
or
call
mov
mov
jl
and
icebp
push
push
or
retf
sub
push
sahf
retf
sbb
loop
iret
dec
pop
add
fwait
mov
popf
add
out
mov
xchg
(bad)
aas
sub
imul
add
add
ja
mov
in
fld
neg
jmp
push
ficom
jns
xchg
xchg
and
add
test
push
sti
movs
cld
test
das
bound
mov
push
and
jbe
data16
retf
or
pop
push
xor
xor
movs
(bad)
(bad)
pushf
iret
mov
cs
adc
popa
or
clc
push
mov
mov
test
out
mov
daa
call
adc
imul
std
xchg
sub
sbb
loop
inc
xchg
xor
adc
fldcw
push
jmp
push
jmp
mov
add
je
jmp
adc
push
outs
jge
adc
adc
(bad)
stos
sbb
xor
mov
adc
adc
mov
sub
mov
(bad)
and
mov
mov
shr
push
mov
cmps
rcl
mov
test
fadd
ins
cld
mov
xor
mov
shl
and
xor
dec
(bad)
sbb
cmp
dec
cmp
ss
aas
pop
pop
pop
mov
pop
jbe
and
int3
jp
inc
mov
pop
das
in
int
sahf
shl
in
fsubr
popf
lds
(bad)
popa
jbe
icebp
dec
out
sbb
sbb
sub
mov
sub
mov
div
pop
jl
mov
cmp
lods
test
sbb
lods
loopne
pop
xchg
rcl
or
das
sar
inc
inc
idiv
mov
and
cmp
les
enter
mov
cmps
gs
not
cmp
jle
int
adc
xchg
and
jl
xor
mov
fs
jl
pause
cs
xchg
in
mov
xchg
movs
shr
dec
in
cli
xchg
adc
jmp
push
sub
jne
aad
enter
xchg
bound
outs
mov
mov
add
mov
je
adc
adc
clc
sbb
adc
inc
retf
sahf
test
mov
sar
adc
add
cmp
pop
clc
lods
jbe
push
push
sub
xor
jmp
inc
ret
and
gs
lea
stc
imul
xor
jl
xor
xor
dec
retf
data16
pusha
push
fnsave
das
inc
inc
cmp
jmp
push
push
cwde
int3
adc
outs
fwait
ins
leave
mov
inc
shl
iret
loopne
jns
jmp
mov
fld
lea
cmp
cmp
out
cmp
sbb
pop
aas
sbb
mov
lds
mov
inc
out
fsubp
aaa
adc
test
repz
je
pop
dec
push
pushf
retf
push
jno
ss
jl
repz
loopne
repnz
out
push
dec
jno
rcl
dec
into
jo
inc
jae
add
aad
cli
push
call
jecxz
mov
faddp
fnstsw
repnz
aam
and
push
and
rcl
pop
hlt
or
pop
and
push
or
mov
icebp
test
mul
ret
jo
in
mov
nop
lds
xor
push
sbb
add
fisub
ror
inc
fs
(bad)
mov
in
into
fcmovne
repz
inc
add
inc
mov
adc
xchg
fisubr
rcl
les
pop
shr
sti
dec
pop
or
nop
pop
push
inc
cld
cmp
jae
pushf
mov
push
mov
cmp
push
imul
xor
out
es
cmp
pop
in
push
jmp
stos
sbb
push
jecxz
sti
in
add
push
push
iret
imul
add
stos
sti
jp
sbb
cdq
jns
xchg
and
lea
jne
sbb
sub
aaa
pusha
push
inc
test
(bad)
movs
push
ins
sti
jbe
adc
jno
inc
adc
pop
cmp
out
and
sub
pop
xor
pop
sbb
cmp
pop
pop
nop
mov
cmp
push
xlat
fild
mov
icebp
jmp
dec
out
es
sbb
adc
jg
pop
iret
fucom
dec
rcr
sub
rcr
xlat
or
dec
lahf
xadd
call
les
jle
shr
bswap
and
das
call
aam
xor
outs
add
shl
jg
movs
mov
dec
aam
or
rcl
icebp
fistp
add
cmp
loop
adc
jb
ret
gs
retf
xchg
mov
dec
jp
push
std
or
and
push
jno
pop
adc
pushf
loope
adc
mov
inc
call
pusha
push
leave
and
sub
ss
jg
call
les
lock
push
sub
xchg
test
scas
not
(bad)
out
cmp
out
or
ins
xchg
test
cmp
js
(bad)
(bad)
cs
out
or
or
popa
fadd
jb
mov
loopne
push
mov
ss
push
stc
cld
add
jnp
pop
in
mov
mov
in
fwait
add
push
dec
into
loope
inc
inc
je
(bad)
(bad)
jb
ret
cli
stos
xchg
mov
fiadd
inc
enter
mov
pop
aas
cmp
icebp
cmp
ds
ja
repnz
mov
outs
(bad)
(bad)
fcom
call
imul
fs
pop
jae
pop
fld
fisttp
(bad)
xchg
jecxz
sub
in
mov
sbb
mov
jmp
lahf
int
pop
and
call
repz
loopne
adc
mov
sub
dec
(bad)
mov
cmp
add
loop
call
and
(bad)
in
push
jnp
inc
out
pusha
loop
fs
dec
popa
xchg
cmp
adc
pop
in
leave
dec
sub
sbb
or
shl
fist
lds
clc
idiv
aad
xchg
sbb
and
pusha
shl
pop
mov
shr
sbb
sub
std
(bad)
adc
push
mov
mov
test
pop
(bad)
adc
ss
push
rol
(bad)
jmp
loop
push
loope
adc
retf
adc
mov
test
es
sbb
daa
sub
imul
outs
aas
mov
cld
outs
das
bound
adc
xchg
rcl
cmp
fisubr
xchg
enter
xchg
std
sahf
add
cli
mov
mov
js
lahf
sti
xchg
addr16
inc
adc
mov
pop
xchg
mov
in
ficomp
lods
inc
inc
jg
repz
sbb
xchg
mov
loope
cmc
stos
mov
add
in
xor
push
mov
jecxz
add
add
pop
jbe
push
push
adc
mov
or
jmp
popf
test
mov
mov
lds
test
sub
xchg
mov
dec
sbb
stc
mov
in
xchg
mov
(bad)
mov
sub
lods
jg
mov
out
pop
jl
in
jo
adc
in
popa
fiadd
leave
test
push
jmp
loopne
cmps
mov
pop
mov
xchg
(bad)
neg
enter
aaa
xchg
and
mov
adc
adc
loop
or
add
cmps
sbb
lock
dec
psllq
pop
cmc
mov
(bad)
mov
jmp
fwait
add
mov
sub
push
or
movs
cmp
call
int
daa
cmps
cld
add
add
push
jns
ins
jle
(bad)
jo
xlat
dec
mov
push
cmp
xor
cmp
jp
movs
xchg
sub
pop
push
stos
test
xchg
sub
and
pop
rol
inc
in
lods
sbb
lock
(bad)
(bad)
pop
push
cmp
cmps
mov
fmul
cmp
and
lds
push
inc
rol
jne
sub
inc
rcr
cs
cmps
xchg
in
ins
sub
sub
cli
stos
loopne
inc
das
xchg
xor
mov
mov
arpl
sub
push
js
pop
mov
bound
adc
in
(bad)
xchg
dec
lock
cmp
in
ds
inc
xlat
sub
leave
je
pop
sbb
mov
out
mov
push
shr
jo
out
mov
sub
movs
shl
pusha
pop
inc
ss
sbb
rol
push
(bad)
out
cdq
mov
dec
jns
xor
in
push
or
cmps
test
dec
jge
es
stos
dec
sub
(bad)
push
pop
leave
addr16
imul
push
or
je
pushf
repnz
jbe
lock
(bad)
cmps
dec
or
fldenv
repz
mov
add
xchg
push
retf
jmp
inc
dec
xor
adc
lock
pop
xor
jl
imul
mov
mov
and
pop
scas
xchg
sbb
jmp
jo
out
xor
repnz
cmp
imul
and
push
into
fs
arpl
mov
xchg
dec
push
dec
fwait
xchg
jno
gs
dec
mov
sub
push
cmp
scas
in
in
adc
and
mov
cmc
push
fs
push
adc
inc
cmp
ds
stos
sub
scas
jmp
mov
stos
cmp
(bad)
loopne
test
mov
inc
in
jmp
repnz
mov
fwait
aad
sbb
adc
fsubr
mov
mov
in
sbb
jg
or
ror
aas
fidiv
mov
aam
sub
loope
push
fstp
int3
shl
mov
fsub
add
imul
popf
aaa
(bad)
fsub
scas
cli
cli
mov
dec
and
(bad)
xor
push
sub
pushf
jbe
fimul
dec
mov
mov
add
adc
mov
jge
mov
pushf
inc
push
hlt
cmp
pop
sub
mov
pop
(bad)
pop
aaa
(bad)
jb
into
loope
aad
cli
clc
into
pop
int3
pop
lds
sub
pop
mov
xor
mov
xchg
and
xchg
inc
or
mov
push
sbb
push
push
imul
(bad)
ds
jle
mov
ss
test
movs
xor
jo
arpl
repnz
push
adc
xchg
mov
daa
cs
loop
out
popa
jae
sar
shr
sti
loopne
jnp
sbb
dec
dec
push
jmp
and
ror
mov
mov
push
jmp
push
rcr
ins
inc
jmp
ds
mov
jge
mov
and
and
into
xor
aam
mov
arpl
clc
nop
js
adc
jecxz
popa
or
iret
xchg
scas
lods
movs
je
mov
mov
fnstenv
dec
mov
dec
into
and
cmp
push
retf
push
(bad)
pop
pop
fwait
pop
(bad)
xor
shl
hlt
(bad)
(bad)
lods
xchg
jg
and
dec
das
or
or
dec
or
mov
jmp
ror
pop
dec
in
dec
paddw
add
mov
mov
lea
imul
dec
ins
pop
xchg
push
pop
fdiv
bound
adc
test
loopne
dec
ret
pushf
fstp
xchg
xchg
icebp
xchg
stc
push
xchg
cmps
clc
fmul
mov
pop
mov
and
test
adc
fstp
movs
or
jno
sub
or
sub
sub
inc
dec
sti
xor
mov
mov
(bad)
les
shl
test
mov
cmc
or
mov
int3
out
call
stos
pop
mov
cmp
nop
mov
mov
jmp
movs
mov
stc
in
inc
(bad)
mov
in
inc
inc
popa
mov
pop
pop
push
les
mov
rol
mov
pop
mov
push
sub
test
cmp
sbb
(bad)
jns
inc
stos
jg
fwait
dec
dec
xchg
stos
jp
or
or
mov
int
dec
rcl
dec
pop
ret
loop
imul
das
fisubr
pushf
pop
adc
pop
lea
int3
loop
imul
int3
sub
mov
and
push
or
shld
dec
lock
push
or
sub
lahf
jae
outs
out
add
repnz
cli
push
pop
je
fiadd
jo
and
xor
retf
push
in
iret
push
outs
sbb
aam
and
inc
jae
mov
lods
pop
xchg
icebp
dec
xchg
adc
jge
lock
std
ret
out
lock
stos
shr
xchg
pop
fimul
cs
push
or
inc
xor
jno
fisttp
xchg
ret
fist
xchg
mov
inc
or
faddp
mov
sbb
icebp
in
sub
stos
es
retf
xor
or
stc
ins
cmp
sbb
inc
adc
cmp
ins
mov
jmp
test
mov
add
les
or
or
pop
mov
ror
movs
jl
mov
fwait
adc
sub
mov
pop
dec
and
mov
imul
and
loope
in
ret
movs
inc
mov
dec
push
xchg
sbb
iret
ret
mov
mov
pop
cli
ja
aad
stc
out
pop
pop
stos
mov
push
shl
repz
mov
mov
dec
dec
cs
jno
pop
mov
cmp
mov
jo
cwde
cmp
daa
retf
(bad)
movs
div
sbb
lds
cdq
pop
fbld
repz
(bad)
sbb
cmp
daa
clc
push
rcl
cmp
test
mov
xor
or
dec
(bad)
lock
ss
add
pop
int3
repnz
out
imul
icebp
rcr
repz
lea
fyl2xp1
movs
adc
add
cwde
sbb
jns
outs
xchg
stc
retw
add
inc
cmps
pop
cmp
xchg
mov
nop
and
stc
ror
fwait
mov
add
ret
mov
add
xchg
adc
fcomp
pause
rdpmc
(bad)
scas
inc
mov
imul
rcr
xchg
xchg
push
xchg
ins
fidiv
jle
xor
imul
test
mov
cmp
mov
sub
cld
js
out
pop
add
and
lahf
popf
sti
out
pop
jecxz
ret
fsin
fld
dec
cmp
mov
je
call
mov
fsub
clc
(bad)
jno
call
xchg
push
test
popf
dec
sbb
cmp
imul
cld
aas
push
inc
xchg
adc
hlt
add
(bad)
xor
popa
adc
adc
imul
pop
or
and
cmp
cld
loope
xor
stc
mov
jmp
js
mov
jno
aad
in
popa
push
lahf
aaa
add
dec
jno
or
mov
arpl
jge
push
out
out
and
cdq
mov
ins
outs
pushf
inc
int
mov
xlat
mov
stos
xor
jns
sahf
dec
jl
and
mov
(bad)
push
mov
mov
iret
or
iret
cmp
jnp
mov
cmp
test
push
pusha
inc
test
iret
lahf
ret
ins
cmp
scas
mov
rcl
jo
mov
jb
and
lock
xchg
sar
mov
push
fld
dec
sub
jnp
mov
dec
mov
xchg
movs
loopne
jle
test
retf
cli
das
and
push
mov
int
and
mov
jl
out
test
out
lods
push
mov
mov
inc
outs
bound
pop
jo
fisubr
push
and
loopne
mov
mov
outs
cmp
and
xchg
imul
mov
or
and
lea
jg
and
loopne
in
imul
(bad)
mov
jae
inc
call
adc
shl
int
and
dec
add
push
push
cmc
push
lds
loop
adc
dec
(bad)
pop
push
mov
dec
daa
and
inc
add
rcl
push
sub
mov
and
pop
(bad)
cmp
imul
in
gs
adc
outs
mov
xchg
ds
jl
cdq
push
pop
imul
pop
dec
repnz
je
adc
test
(bad)
xor
or
add
push
icebp
cwde
add
mov
mov
adc
stos
and
or
(bad)
fidiv
pop
out
or
(bad)
mov
jge
adc
lock
ss
sti
(bad)
rol
stc
xchg
adc
loopne
mul
dec
xor
pusha
xchg
cmp
jae
push
aam
or
inc
xchg
mov
cmp
pop
in
(bad)
(bad)
jmp
pop
xchg
mov
test
mov
in
sbb
sub
stos
adc
fisub
out
aaa
loope
sbb
or
push
xchg
jp
bound
jecxz
pop
mov
js
ror
ror
aaa
xor
sub
inc
stos
leave
dec
(bad)
mov
xor
sbb
bound
mov
imul
iret
ffree
push
(bad)
cmc
add
mov
fcmovne
dec
enter
mov
nop
mov
mov
mov
pavgw
hlt
xor
add
sbb
mov
or
push
push
mov
push
or
lock
out
cmps
rcl
jg
mov
mov
mov
bnd
mov
clc
add
pop
sbb
pop
or
jmp
lahf
repz
iret
bound
adc
dec
add
push
xor
out
xor
ins
push
jp
or
xor
add
xor
sbb
movs
leavew
inc
add
xchg
movs
aam
lods
lods
mov
std
jns
pop
cld
and
in
push
push
daa
cs
dec
es
xor
push
and
xchg
ins
add
ret
and
pop
mov
fbstp
(bad)
dec
adc
xor
das
add
cdq
into
add
mov
adc
push
add
push
ins
or
fild
out
rol
std
mov
pop
(bad)
in
jb
int3
(bad)
sbb
mov
out
out
cmps
call
cwde
mov
inc
mov
cmp
jle
mov
fld
out
push
push
jecxz
sbb
lahf
sub
push
and
mov
aas
fnstenv
xor
inc
xlat
xor
inc
mov
retf
add
lods
pop
push
ds
sbb
xor
pop
(bad)
retf
adc
cmp
(bad)
push
jbe
sub
hlt
fldenv
icebp
pop
test
sub
daa
pop
ins
retf
cmp
cmp
push
and
mov
adc
mov
fs
sub
inc
sub
sbb
aam
push
or
lods
dec
sub
scas
pop
push
cmp
mov
mov
jmp
frstor
cmp
mov
inc
jg
pop
retf
push
cmp
cld
jne
add
and
xchg
fisubr
je
sub
fdivr
push
pop
xchg
push
mov
mov
mov
pushf
fxch
push
push
fnsave
pop
mov
xchg
fsub
mov
test
ss
add
inc
mov
push
(bad)
jb
jo
retf
movs
sbb
xchg
fiadd
aam
inc
pop
xchg
inc
xor
int
lds
call
fisub
mov
mov
fadd
xor
imul
leave
jmp
lock
pushf
cmp
cmp
ret
mov
jge
push
loope
and
lds
in
repnz
cdq
sbb
scas
mov
wbinvd
pusha
and
sahf
adc
sbb
loopne
push
in
mov
cld
mov
sbb
jp
stc
mov
out
or
sbb
inc
packsswb
scas
movs
(bad)
shl
(bad)
pop
xchg
and
sub
mov
and
sbb
push
jb
ins
scas
adc
mov
retf
in
ins
out
cmc
gs
lea
pop
mov
jp
movs
aam
add
mov
mov
mov
dec
fsub
push
inc
stc
imul
movs
cli
sbb
fdiv
pop
xor
inc
xlat
or
jb
shr
rcl
adc
mov
cmc
or
mov
jmp
scas
push
sbb
es
call
push
(bad)
mov
mov
aad
ss
push
inc
dec
test
cli
lahf
mov
cmp
adc
mov
mov
push
in
and
mov
inc
and
mov
(bad)
xor
cli
inc
test
das
pop
adc
sahf
daa
lods
retf
fild
pop
mov
pop
dec
in
or
sub
(bad)
pop
mov
xchg
pop
aam
or
scas
adc
sar
out
mov
mov
jp
add
xor
movs
xchg
mov
mov
lea
or
sub
and
scas
xchg
cmp
adc
rcr
clc
jle
shl
ja
cld
push
add
adc
sbb
loope
push
(bad)
jmp
mov
xlat
sub
test
std
es
mov
inc
jae
pop
push
mov
loope
mov
(bad)
xor
inc
dec
dec
mov
pushf
(bad)
mov
mov
xchg
lea
pop
xchg
mov
nop
push
test
jbe
push
push
push
bound
cmp
fisub
inc
out
or
mov
cmps
and
das
fcmovu
test
aaa
cmc
sub
test
dec
gs
inc
and
sbb
jge
add
cmps
test
and
pusha
mov
xor
popa
(bad)
xchg
(bad)
jbe
sti
add
fld
inc
inc
or
outs
mov
mov
out
popf
mov
lods
sub
scas
loopne
lea
inc
into
es
fsubp
shl
shr
xchg
loopne
clc
and
sbb
dec
(bad)
shl
ja
mov
cmp
add
sub
das
push
mov
cmps
xchg
outs
out
sub
sbb
mov
adc
xor
mov
xchg
xor
jecxz
retf
leave
sub
pushf
add
sub
adc
and
pushf
mov
sbb
aad
test
mov
fadd
dec
mov
xor
sub
std
icebp
and
lods
and
or
dec
xchg
sub
fcom
cdq
cmp
frstor
data16
jmp
cdq
scas
inc
mov
mov
neg
xchg
xor
inc
(bad)
nop
push
jne
add
sbb
mov
mov
jo
enter
mov
(bad)
aaa
jmp
cmp
dec
hlt
push
mov
icebp
stc
sbb
call
gs
mov
inc
fadd
mov
adc
inc
fwait
das
mov
xchg
mov
pop
jmp
hlt
sub
loopne
mov
js
les
lea
outs
call
mov
shl
popa
pop
fwait
xor
push
cmc
xor
clc
hlt
jb
pop
xchg
jl
sub
aas
mov
adc
(bad)
fdivp
and
out
test
test
jb
jmp
cld
sbb
jp
pop
mov
mov
repnz
fisubr
mov
sbb
int3
aad
nop
xor
in
les
mov
dec
add
mov
leave
dec
aaa
test
jno
retf
stos
in
ins
pop
or
push
sbb
mov
fcomi
mov
dec
jmp
push
add
xor
repnz
retf
inc
addr16
jnp
push
xchg
push
cwde
ror
jge
jae
sub
pop
xor
(bad)
push
inc
or
shl
jge
sub
sbb
stos
xor
sbb
jb
push
ds
or
pop
push
xchg
or
adc
pop
mov
jno
dec
shl
jnp
add
and
jmp
xor
pop
xchg
rcl
pop
jmp
jmp
adc
js
push
shr
sbb
lahf
cli
or
jmp
ins
ret
jns
inc
mov
pop
cmp
fcomp
dec
stos
pop
lods
xor
icebp
pop
aad
daa
pop
jnp
ror
jo
out
ins
mov
mov
test
stc
ins
ins
jp
push
sub
mov
movs
repnz
pop
mov
push
sub
(bad)
imul
sar
dec
sbb
shr
loope
mov
lds
adc
add
pop
repnz
cdq
fild
jmp
or
test
jmp
bound
xchg
xchg
add
mov
out
sub
and
pushf
cdq
xchg
mov
fbstp
push
or
and
mov
inc
dec
lods
leave
inc
cmp
xor
adc
scas
xor
clc
dec
and
sbb
fstp
push
adc
inc
or
ins
xor
imul
sbb
jo
ror
mov
push
(bad)
cmp
pop
cwde
loop
mov
dec
les
mov
mov
push
(bad)
std
es
mov
add
fisttp
dec
or
jmp
lea
mov
ficom
add
mov
(bad)
jl
sbb
add
aaa
lock
imul
and
repnz
out
mov
(bad)
mov
shl
add
mov
dec
pop
jge
lea
mov
xchg
scas
(bad)
mov
push
xor
inc
mov
inc
fistp
xchg
inc
push
das
jmp
mov
inc
push
fbld
mov
popf
in
scas
sbb
mov
imul
add
and
rcr
dec
push
inc
(bad)
cmp
xor
loope
sub
push
pop
sub
stos
je
in
push
dec
enter
xor
outs
or
add
imul
cmc
mov
sahf
sbb
jl
es
retf
mov
xor
jmp
bt
and
mov
dec
inc
mov
dec
jae
cmp
rcl
mov
pop
cmp
xchg
js
not
imul
mov
jno
inc
mov
ja
jmp
ror
xchg
dec
das
mov
mov
rol
pop
or
adc
add
imul
pop
mov
push
movs
jle
sbb
rcr
xchg
xchg
push
push
nop
mov
push
iret
mov
imul
ret
add
cld
pop
outs
sub
or
push
ins
push
inc
and
ror
xchg
popa
inc
adc
movs
data16
add
lds
xor
dec
pop
cld
fadd
mov
retf
sar
(bad)
lods
dec
in
xchg
or
out
daa
sub
stos
retf
mov
dec
xlat
fdiv
ja
mov
shrd
dec
sbb
mov
cmp
push
es
hlt
movs
jmp
inc
popf
popa
inc
in
clc
push
jmp
cs
repz
or
sub
sub
mov
add
push
dec
fild
sub
mov
mov
push
dec
(bad)
arpl
shl
pop
pop
and
or
sbb
mov
stc
push
or
pop
cmp
ja
sub
inc
scas
nop
cmp
sbb
adc
in
in
repz
test
idiv
sbb
xor
(bad)
adc
shl
or
jle
dec
mov
dec
inc
sbb
mov
std
out
dec
(bad)
mov
je
sbb
push
stc
int3
scas
push
sbb
in
sub
push
(bad)
movs
add
inc
mov
out
mov
(bad)
dec
into
sahf
popf
retf
bound
lea
fisubr
out
dec
in
xchg
mov
sub
ins
sbb
inc
xor
inc
test
mov
and
shl
pop
xchg
lods
lds
adc
push
pop
fs
fisttp
(bad)
push
rol
xchg
stos
push
mov
xor
mov
cmp
pop
nop
pop
sub
test
xchg
xchg
push
sbb
cmps
adc
jbe
popf
test
sub
cmps
ds
pushf
ret
in
pop
add
(bad)
and
stc
inc
shl
out
test
call
push
shr
cmp
xor
xor
push
aad
iret
pop
cmp
and
mov
mov
cld
mov
push
jbe
xor
jbe
mov
and
sar
fimul
(bad)
pusha
adc
call
addr16
xor
jo
ds
sahf
jmp
ja
cmc
cli
pop
es
adc
adc
in
lods
mov
pop
sar
mov
mov
outs
les
mov
nop
sahf
or
popa
push
leave
(bad)
in
and
dec
pop
cdq
dec
ret
or
cs
jo
icebp
enter
out
sahf
cmp
mov
adc
inc
ffree
loop
in
in
idiv
jns
jb
jle
rol
movs
cld
pop
not
sub
js
jg
push
xor
lods
clc
imul
dec
xchg
cdq
cmp
and
sti
push
xchg
retf
cmps
push
mov
out
cmp
push
pop
mov
mov
jbe
nop
retf
js
mov
inc
fisttp
mov
jmp
mov
jae
aad
cs
xor
aam
ins
ret
je
(bad)
sub
sar
add
call
movs
stos
cmp
mov
(bad)
mov
rcl
out
adc
inc
push
ins
out
add
pop
cdq
xor
add
stos
xchg
pop
jp
adc
mov
push
jmp
mov
loopne
movs
movs
dec
mov
sub
cli
sti
xor
dec
mov
lahf
xchg
mov
das
lods
es
pop
call
push
dec
fdivr
mov
das
sbb
push
ins
inc
mov
pop
jne
ret
sbb
xor
repnz
xchg
mov
push
push
test
sub
cmps
jb
icebp
pop
lea
movs
ins
or
dec
or
aas
fnsave
mov
and
sub
cmp
xchg
xchg
lea
push
xchg
sti
les
dec
inc
xchg
loopne
mov
cmp
rol
(bad)
(bad)
sti
xchg
test
test
jne
xchg
fsub
xchg
dec
(bad)
rcl
xchg
inc
pop
out
dec
call
xchg
cmc
jmp
adc
push
jne
and
jge
xor
mov
lahf
mov
xchg
jl
jbe
add
sub
ins
repz
push
mov
(bad)
pop
stc
inc
loopne
adc
stos
lods
xor
sbb
shr
pop
fcmovne
jmp
xchg
mov
mov
add
jne
push
movs
cmps
inc
dec
jo
jge
retf
sbb
mov
cdq
pop
lahf
mov
ss
ss
lods
retf
jmp
repz
inc
aad
xchg
fucomi
xor
sub
retf
fwait
mov
jmp
cmp
cmp
push
in
jb
outs
adc
xchg
cmp
ret
mov
cld
imul
repz
int
mov
ss
aad
sbb
call
je
jmp
xor
sar
inc
mov
loope
arpl
dec
mov
jmp
retf
mov
jbe
cli
cmps
pop
xchg
add
cmp
adc
jge
jle
xchg
aaa
dec
mov
push
mov
(bad)
retf
call
sbb
lea
pusha
in
test
aaa
mov
sbb
jnp
repnz
push
or
mov
jnp
bound
(bad)
inc
xor
mov
mov
shr
loop
fisttp
sahf
cmc
jle
jnp
jmp
xchg
add
and
lods
out
jne
inc
push
mov
or
mov
sbb
stc
je
jbe
mov
add
jle
xchg
sar
dec
(bad)
int3
jae
cmp
arpl
lds
addr16
enter
mov
or
in
mov
jne
xor
shl
and
in
or
lahf
call
jecxz
jns
addr16
inc
mov
fadd
rcr
sbb
add
dec
shl
stos
iret
xchg
sbb
dec
xor
(bad)
cmp
adc
sbb
out
inc
or
sbb
mov
pop
scas
lock
pop
jg
ficomp
xchg
clc
loope
sbb
adc
fwait
pop
xor
js
jne
scas
(bad)
fild
imul
sub
sti
shl
push
mov
mov
cmps
imul
icebp
aam
cmp
enter
push
mov
mov
mov
inc
adc
dec
loope
mov
push
mov
(bad)
gs
not
mov
outs
aaa
neg
xchg
icebp
xlat
pop
loope
xchg
out
jnp
mov
rcl
mov
push
add
leave
setbe
cmp
push
retf
dec
in
stos
or
and
add
stc
dec
cmp
add
pop
(bad)
outs
test
lock
call
xor
imul
cld
leave
xor
out
ja
or
test
aad
mov
fiadd
cmp
inc
sbb
adc
popf
movs
xchg
inc
mov
pushf
call
sti
adc
add
mov
jge
push
imul
inc
xor
je
mov
movs
mov
and
icebp
pushf
fcom
fs
adc
mov
shr
aas
fisubr
push
inc
mov
pop
fisttp
cmps
push
les
sbb
lds
pop
adc
sbb
popf
xor
or
pop
call
xchg
xor
fsubr
imul
sbb
pop
aaa
mov
mov
ds
sub
inc
loop
aad
movs
push
push
stos
xchg
xor
add
dec
dec
push
into
aaa
out
pop
call
sti
fwait
hlt
push
cmp
pusha
cld
jbe
pop
pop
loopne
inc
dec
repz
mov
or
iret
xor
push
inc
cmps
or
sbb
mov
addr16
cmp
fsubrp
adc
pop
inc
fdiv
rcl
rep
pop
adc
(bad)
adc
fld
inc
imul
xor
jmp
and
cmc
adc
(bad)
leave
xor
cmp
xlat
(bad)
hlt
frstor
dec
movs
ret
lahf
xchg
jb
sub
inc
(bad)
sbb
leave
movs
dec
std
ret
sub
jl
mov
push
(bad)
mov
mov
in
mov
mov
jecxz
cdq
loope
mov
ss
test
fsub
mov
inc
gs
xchg
iret
aas
mov
and
in
je
ds
lods
mov
fist
(bad)
and
addr16
and
es
outs
or
jle
cwde
test
pop
dec
add
enter
add
adc
mov
scas
inc
xor
mov
xchg
add
shl
mov
sub
lods
pop
jae
pop
push
cmps
or
jo
mov
mov
sub
sar
pop
xor
jbe
xchg
out
imul
out
aad
rol
jae
inc
pop
call
cs
add
iret
aam
fisub
mov
aad
repnz
push
or
mov
aad
or
mov
sub
jnp
or
jb
test
loopne
pop
mov
mov
xor
add
or
aad
inc
sbb
xor
dec
movs
mov
dec
not
lahf
nop
lods
mov
sbb
pop
loop
mov
jb
xchg
mov
pop
call
sbb
and
loope
loopne
pop
imul
imul
jno
mov
out
pop
xor
fisub
stos
pop
mov
pop
inc
arpl
xchg
jmp
gs
loope
pop
dec
dec
shl
sub
and
add
adc
dec
push
add
ss
aam
fld
ins
adc
sbb
les
xor
out
cmp
mov
inc
mov
mov
jge
js
(bad)
in
xchg
fild
jmp
xlat
test
pop
fwait
sbb
das
fnstcw
mov
pop
mov
lahf
(bad)
ds
push
mov
jno
loopne
push
clc
popf
jae
inc
retf
dec
dec
test
addr16
and
xlat
in
jne
jp
and
lods
cs
xchg
cmovb
call
ret
leave
push
or
jecxz
ret
adc
punpckhbw
cmp
cmp
lea
xor
js
pusha
or
pop
ror
inc
ss
add
add
push
pop
pop
in
push
dec
pop
xchg
in
clc
and
dec
test
fisub
test
popf
sbb
pusha
pop
sti
jae
xor
and
stc
mov
ja
cmps
lods
mov
jo
pop
outs
test
in
add
xchg
test
ins
mov
adc
retf
mov
add
pop
mov
and
xchg
push
jge
test
icebp
xor
stc
popa
sar
inc
icebp
jp
or
or
shl
xchg
(bad)
dec
cmove
add
stc
jl
leave
loope
jmp
sub
xchg
retf
xchg
mov
xchg
popa
repnz
cmps
lock
jae
stc
pop
shr
pop
jl
in
pushf
jno
call
jne
cmp
or
dec
push
push
jecxz
outs
cmc
mov
add
inc
repnz
fsub
into
das
lods
cs
test
push
repz
mov
repz
loop
mov
cmp
xchg
mov
or
or
dec
ror
popa
push
push
mov
retf
push
jmp
dec
pop
mov
push
adc
inc
xchg
mov
imul
sub
mov
xchg
ins
jns
push
sub
adc
mov
and
sbb
jb
inc
(bad)
pop
test
mov
push
popa
xor
and
mov
mov
mov
sub
push
gs
sbb
xlat
inc
outs
or
or
sahf
movs
mov
(bad)
pop
sbb
mov
repnz
jge
dec
dec
fistp
dec
xchg
pushf
in
dec
jo
sub
xchg
push
imul
int
push
xlat
punpcklbw
stc
inc
daa
loop
cmps
pop
jle
push
in
push
out
pop
and
movs
jg
ror
mov
imul
xchg
mov
adc
hlt
and
repz
inc
sbb
mov
inc
jne
(bad)
sar
jne
push
jne
inc
(bad)
stos
neg
push
mov
into
fdivp
mov
fdiv
imul
retf
or
mov
jo
lahf
pusha
arpl
int
and
adc
pop
dec
inc
xor
and
xor
pop
push
cmps
inc
mov
xor
xchg
pop
outs
stc
and
jnp
or
push
mov
mov
pusha
cmp
pop
adc
dec
add
sub
loope
test
xchg
and
cmp
xchg
mov
in
outs
test
xchg
push
scas
outs
aas
neg
add
adc
ins
cld
dec
mov
arpl
adc
ins
nop
mov
shr
ss
fnstcw
inc
enter
mov
sub
push
mov
cld
into
adc
xor
je
loopne
shl
mov
push
call
mov
ins
mov
pop
outs
mov
and
xchg
and
mov
push
test
icebp
push
push
mov
jno
nop
in
adc
cmp
sub
ss
bndldx
or
aam
cld
mov
aam
aas
jg
add
adc
daa
inc
iret
mov
xchg
jmp
imul
and
inc
popa
mov
xor
mov
cld
mov
sbb
imul
sbb
pop
pop
pusha
mov
pop
popf
pop
and
push
push
rol
outs
add
fldenv
mov
mov
call
lods
dec
add
pop
inc
pop
jno
in
xchg
arpl
repnz
test
add
add
stos
mov
and
pop
test
not
in
and
add
cmp
sub
in
sbb
pop
pushf
or
adc
cwde
push
xchg
sti
adc
(bad)
ss
in
push
adc
mov
xor
and
repnz
add
sub
adc
retf
lock
dec
fnsave
sbb
bnd
loope
mov
dec
pop
lods
ja
call
je
pop
pop
frstor
(bad)
(bad)
mov
stc
in
in
xchg
sbb
mov
push
repz
inc
das
outs
cmp
jge
pop
fimul
dec
push
xchg
enter
test
and
xor
adc
fwait
mov
mov
sub
(bad)
jl
xchg
nop
inc
mov
call
inc
mov
adc
adc
dec
out
ss
add
jl
lahf
sbb
iret
fnsave
arpl
and
int
je
cld
sbb
clc
adc
jmp
fs
jl
in
cmp
sbb
int3
fistp
cmp
retf
jo
xchg
and
xlat
retf
mov
into
retf
or
jp
stos
dec
xor
cld
xor
mov
lock
aas
jbe
test
adc
add
and
in
push
jne
stos
pop
mov
adc
pop
xchg
ret
add
inc
mov
mov
icebp
push
dec
xchg
cs
jle
ins
or
ret
cmps
(bad)
pop
fisttp
push
cmc
fistp
jo
bound
mov
xor
pop
lds
test
(bad)
push
loopne
dec
pop
mov
pushf
sub
call
in
pop
jecxz
inc
xor
mov
mov
in
popf
ins
add
and
cmp
dec
idiv
retf
mov
movs
sbb
bound
outs
mov
dec
fnstcw
push
scas
fwait
sbb
jmp
out
aam
clc
scas
(bad)
pusha
ss
xor
lods
or
mov
sbb
movs
lds
jns
cmp
xchg
jmp
test
push
stos
sbb
mov
inc
adc
add
lds
test
ja
aas
xchg
sti
lds
mov
ds
fcomp
aas
lods
or
and
adc
ret
outs
push
mov
into
les
cmp
jecxz
or
mov
loope
xor
inc
xchg
mov
jg
sub
cmp
sub
pop
or
and
dec
mov
test
movs
cli
xchg
fldcw
(bad)
repnz
adc
iret
xor
pushf
outs
mov
xor
sahf
aas
or
pushf
xchg
jecxz
push
out
xor
add
inc
or
mov
(bad)
dec
hlt
cmc
dec
int
jecxz
and
dec
in
xchg
pop
sbb
hlt
cmp
pop
mov
cmp
rcl
enter
loop
aad
retf
pop
xchg
call
ja
int
mov
call
and
clc
sub
mov
cmp
out
mov
int
out
stc
jge
xchg
clc
int
loopne
les
push
retf
sbb
stos
jno
sub
add
lahf
inc
pop
push
mov
fs
add
(bad)
ret
data16
scas
or
cs
stc
in
cmp
push
sub
push
push
hlt
scas
sbb
out
out
bound
cmp
pop
cmp
fstp
add
add
loope
data16
mov
cmp
push
jmp
jb
xor
or
cmp
mov
rcl
and
imul
jne
loop
ins
jecxz
pop
sub
mov
adc
loope
adc
xor
xchg
mov
mov
add
adc
jecxz
push
dec
xchg
fimul
sahf
popf
pop
lods
inc
(bad)
aad
jo
sub
xchg
lods
mov
lea
xchg
sbb
in
pop
scas
and
add
daa
out
mov
fistp
fild
les
mov
cmp
ficom
test
cwde
test
dec
pushf
xchg
mov
and
cmc
pusha
push
and
es
cmp
gs
shl
ret
cmp
jae
jg
dec
cmp
imul
les
and
mov
pusha
mov
jecxz
add
mov
jmp
lods
cmp
add
jb
popa
fbld
dec
rol
call
outs
jmp
dec
add
icebp
jae
rol
mov
arpl
bound
sti
in
les
sub
jle
lods
cmp
imul
stc
adc
or
(bad)
cs
mov
lock
mov
or
add
cmp
cmp
xchg
ins
je
loope
in
or
pop
mov
push
xchg
test
sbb
and
mov
cmp
mov
add
inc
dec
fstp
dec
xchg
sbb
cwde
jns
xor
push
mov
and
call
mov
call
inc
in
retf
xchg
rcl
push
(bad)
sub
repnz
or
jnp
aas
int
dec
test
outs
pop
cmp
adc
xchg
addr16
pop
sbb
jnp
arpl
call
in
cmp
sub
pop
dec
cs
out
gs
or
rcl
fldenv
adc
sub
pop
loop
daa
pop
cmp
or
icebp
fcom
dec
add
sub
mov
adc
retf
add
shr
(bad)
add
int3
dec
pusha
add
and
add
outs
icebp
fld
aaa
or
inc
ins
sub
mov
dec
sub
dec
push
inc
daa
mov
and
mov
adc
mov
ret
pop
cmp
ins
shl
mov
out
call
int
loopne
mov
inc
pop
dec
icebp
rcr
pop
mov
out
hlt
in
loope
xchg
adc
and
jbe
hlt
jmp
lock
jmp
add
add
add
shl
dec
sub
dec
mov
or
sub
int
jge
aam
cmp
std
jo
in
(bad)
pop
push
pop
(bad)
cmp
outs
mov
leave
cmc
fst
sti
xlat
pop
test
push
and
fsub
adc
xor
pop
call
xor
aas
cmp
sub
popf
enter
nop
nop
pop
pop
mov
cmp
int3
(bad)
out
imul
cwde
jmp
ds
cld
fisub
cld
jmp
not
mov
es
jl
push
or
mov
loopne
adc
out
push
add
pop
call
xor
mov
cmp
cli
outs
cmp
(bad)
xchg
shl
in
add
jne
add
xchg
inc
mov
in
rcr
js
nop
loop
out
out
pop
lock
cmp
fdivp
lahf
dec
call
sti
xchg
mov
xchg
xchg
pop
dec
jge
add
test
test
jmp
cwde
pop
mov
sbb
addr16
push
and
clc
fdivr
pop
mov
adc
inc
mov
sar
aas
dec
(bad)
sub
std
mov
dec
pushf
dec
xor
jle
xor
lods
gs
xchg
xor
adc
sar
push
call
shr
pop
xor
jbe
ror
(bad)
retf
scas
cdq
sbb
xchg
or
and
pop
inc
or
or
mov
and
mov
leave
aam
stos
ficomp
or
push
sbb
or
je
fwait
out
push
movs
pop
push
arpl
int
icebp
mov
xchg
mov
out
sahf
pop
xor
das
int
and
in
inc
lock
push
dec
loope
retf
retf
fidivr
fwait
outs
push
jmp
dec
stos
pop
(bad)
in
cmp
push
inc
ret
xchg
outs
pop
test
xchg
pop
outs
add
imul
adc
mov
pop
sub
or
int3
je
enter
jmp
outs
scas
mov
fdiv
jecxz
pop
mov
pop
or
imul
and
aaa
loope
sbb
jg
(bad)
jmp
arpl
cmp
pop
ja
sbb
popf
fidivr
fstp
jmp
sbb
mov
popf
movs
into
adc
loope
jge
and
ror
int3
mov
(bad)
ficom
mov
or
(bad)
xlat
out
sub
mov
xor
sub
inc
mov
cdq
sbb
movs
adc
mov
sbb
mov
jle
dec
aam
mov
mov
in
push
aad
out
aaa
retf
push
arpl
xor
and
and
mov
mov
dec
sar
in
fldenv
xchg
mov
(bad)
mov
push
fmul
mov
fdivr
mov
test
or
pushf
or
icebp
jns
sahf
mov
lods
or
jp
outs
jl
int3
repnz
rcr
cmc
in
in
(bad)
cmps
cld
xchg
mov
xor
sub
sbb
sbb
adc
dec
xor
adc
and
mov
and
or
and
inc
cs
and
fst
dec
jecxz
ins
mul
xor
dec
or
test
and
sbb
mov
dec
add
outs
sub
shr
mov
or
int
xchg
xor
mov
push
popf
pop
jne
xchg
cmp
sti
or
dec
adc
out
inc
jp
xchg
pop
in
(bad)
cmp
xchg
aaa
jmp
xchg
enter
jnp
jge
jp
syscall
das
sbb
mov
xchg
cld
aam
mov
push
mov
dec
jge
out
push
xor
lock
xor
outs
bound
push
ret
retf
and
xchg
cs
jb
cmps
jg
cmp
mov
pop
dec
sub
(bad)
stc
cmp
call
mov
push
sub
jmp
adc
sar
xchg
xor
(bad)
xlat
push
leave
dec
mov
jb
ja
dec
add
adc
cmp
ins
neg
push
pop
stos
dec
adc
sub
sbb
cmp
sub
(bad)
adc
pop
xchg
sbb
inc
je
xchg
mov
cmp
fidivr
nop
and
pop
mov
push
ficom
loopne
push
loop
popf
inc
scas
jns
es
mov
mov
cdq
and
push
lahf
repz
imul
dec
mov
jae
rol
lock
adc
xor
aas
push
mov
movs
push
scas
inc
pop
jmp
daa
push
out
jle
aad
inc
xchg
and
(bad)
dec
or
data16
push
imul
xor
add
imul
mov
arpl
imul
fsub
dec
mov
out
inc
xor
out
pop
push
gs
jmp
sar
aad
(bad)
movs
push
add
adc
repz
loop
sbb
das
out
cli
cmc
mov
inc
ss
sbb
sahf
lea
scas
mov
sbb
nop
cmp
pusha
dec
test
push
stc
inc
cmc
sbb
mov
(bad)
cmp
push
sti
mov
(bad)
xchg
arpl
jmp
inc
retf
xor
mov
jne
fwait
push
das
mov
sbb
cmc
movs
mov
and
push
pop
neg
and
adc
into
cmps
test
mov
dec
(bad)
stc
fisubr
and
sub
pop
scas
pop
aam
mov
push
sub
xor
inc
jmp
mov
dec
push
jl
inc
mov
add
jmp
or
cwde
rcl
sar
outs
cmps
fnstsw
call
inc
movs
sbb
loopne
outs
sbb
test
aam
je
daa
inc
xchg
xor
pop
jne
jno
fcomp
push
pushf
adc
sub
imul
jmp
sub
or
int3
arpl
shl
dec
call
xchg
fadd
jmp
repnz
mov
mov
inc
xchg
jge
xchg
and
clc
nop
add
mov
fs
(bad)
es
mov
bound
test
or
push
lods
stos
cld
repz
lods
jmp
mov
and
fdivr
pusha
pinsrw
ret
or
pop
fsubr
mov
push
stc
xor
aad
push
or
out
jbe
dec
or
and
xlat
outs
cli
mov
(bad)
sub
adc
mov
lods
sahf
xchg
pop
mov
jg
inc
js
dec
fsubr
dec
dec
stos
jae
push
mov
fstp
(bad)
push
arpl
test
retf
ins
cwde
test
mov
sub
nop
scas
jmp
cmovbe
xchg
and
mov
bound
pop
icebp
arpl
adc
and
add
scas
(bad)
inc
or
dec
stos
daa
rcr
rcl
mov
scas
pop
adc
mov
(bad)
pop
add
xchg
or
rcr
jbe
push
pop
and
leave
lahf
out
test
test
pop
pop
push
mov
out
dec
aaa
out
dec
push
mov
add
add
lods
daa
mov
lea
aas
cmp
mov
repnz
rcl
push
popa
sbb
or
mov
dec
jle
aam
cmp
icebp
mov
mov
or
or
cmp
mov
test
push
push
pop
retf
dec
cmp
ror
pop
cmp
ficom
jmp
out
inc
jae
imul
xor
and
int
xor
lods
cmp
add
(bad)
cmp
dec
mov
or
xchg
lock
ret
jns
ror
out
mov
gs
in
jmp
pop
cld
inc
lods
nop
ret
std
or
cmps
pop
xchg
dec
mov
add
or
add
lock
inc
mov
hlt
data16
(bad)
in
xor
pop
test
xor
adc
pop
test
shr
and
adc
inc
sub
add
arpl
mov
test
jnp
or
mov
test
arpl
and
enter
cmp
fcom
mov
jmp
xor
mov
sbb
sub
stc
mov
out
mov
mov
inc
vandps
mov
pop
outs
loope
sbb
pop
shr
mov
stos
data16
jnp
stos
xor
loope
scas
das
(bad)
les
cwde
dec
mov
retf
push
stc
outs
and
dec
mov
(bad)
mov
cdq
fdivr
xchg
jae
rol
or
cmc
dec
sbb
outs
add
das
sub
aaa
add
rcl
dec
dec
sbb
push
inc
int3
inc
loope
retf
in
(bad)
pop
mov
mov
xlat
jno
mov
fsub
xchg
mov
popa
push
and
mov
out
ret
imul
or
xor
mov
fcomip
inc
xor
das
je
xchg
fistp
in
or
jno
push
inc
fcom
mov
xchg
cmp
mov
mov
pop
arpl
addr16
dec
std
fld
and
dec
and
cmp
push
outs
mov
data16
jae
mov
out
jno
sub
daa
sub
push
dec
lods
jne
js
ins
sbb
shl
clc
dec
(bad)
fwait
jecxz
mov
or
mov
fistp
sub
jle
or
imul
push
mov
xchg
pop
jns
adc
and
push
push
fiadd
popf
lea
jb
clc
in
out
mov
jge
cmc
aas
push
inc
xor
cmp
inc
and
in
mov
push
mov
ja
stos
xchg
(bad)
push
cli
mov
stos
jle
push
sbb
xchg
cmp
das
xchg
mov
out
out
fs
aad
iret
outs
jbe
outs
in
std
mov
es
lea
outs
adc
jnp
add
rcr
test
push
cmp
jmp
cmps
addr16
mov
cli
jg
mov
leave
sbb
mov
int
aaa
add
jecxz
iret
es
pop
mov
jmp
xchg
sub
ins
or
icebp
cld
cmc
add
xchg
inc
adc
std
lea
mov
ror
sbb
mov
ret
scas
mov
jnp
in
mov
cmp
and
mov
or
les
sub
push
and
mov
cmp
push
inc
shr
mov
jbe
mov
sub
(bad)
cmp
arpl
cmp
shl
daa
adc
mov
mov
mov
jg
mov
inc
mov
repz
xchg
call
aam
mov
and
push
int3
call
dec
test
add
or
mov
sub
xchg
leave
mov
cmp
jecxz
hlt
ds
out
xlat
and
popa
mov
sub
inc
mov
daa
jle
cmp
sub
retf
or
pop
lock
(bad)
push
aad
dec
in
pop
cmp
xchg
nop
in
push
and
stos
into
xor
jae
fs
in
dec
icebp
dec
or
inc
add
and
in
push
(bad)
jnp
imul
cs
cmps
jb
or
popa
imul
lsl
xchg
nop
mov
pop
sub
jg
es
add
sbb
ss
cdq
jnp
dec
add
lods
xor
je
mov
cmps
mov
and
(bad)
test
in
sbb
mov
dec
call
sti
sub
jno
inc
in
or
push
loop
dec
mov
gs
fcom
pop
and
scas
xor
bound
jmp
shr
fmul
hlt
dec
mov
mov
dec
mov
out
retf
adc
movs
jecxz
das
dec
sar
mov
jle
dec
mov
mov
repnz
dec
repnz
xor
mov
and
push
pop
and
shl
cmps
iret
cld
mov
stc
or
dec
lock
inc
xchg
in
stc
retf
movs
add
repnz
cmc
and
gs
cmp
sbb
jb
pop
hlt
leave
cmp
stc
pop
inc
rol
aad
pop
jge
fisubr
dec
out
mov
pop
fninit
ja
(bad)
daa
div
out
aas
pusha
cmp
or
and
dec
cmp
jb
lods
push
sub
push
jo
jo
popf
neg
mov
stc
ds
enter
xchg
test
add
sbb
stc
and
shl
test
xchg
and
mov
das
adc
shr
shr
aas
inc
add
add
leave
push
cmps
aam
scas
sbb
xor
dec
(bad)
and
jge
fs
ds
sub
out
jg
sub
push
sbb
stc
mov
xchg
popa
and
fist
lds
ja
xchg
jnp
enter
xchg
fcom
je
mov
das
out
stos
sub
shl
push
sbb
inc
rcr
test
cmp
xchg
or
jne
pop
cmp
data16
jmp
into
jge
rcl
lock
scas
add
push
call
mov
dec
and
(bad)
shl
mov
idiv
out
sbb
dec
repz
pop
xlat
movs
sub
lods
call
jns
ficomp
inc
scas
mov
dec
xchg
pop
jmp
push
popa
lea
pop
sbb
lods
add
ins
jecxz
data16
clc
mov
loope
pop
adc
das
scas
adc
sub
gs
cwde
jp
adc
inc
add
xchg
pop
and
push
sbb
dec
shr
cmp
dec
into
aas
shl
int3
add
loope
adc
test
xchg
stos
push
dec
adc
or
xchg
dec
pop
inc
adc
bound
shr
xchg
cmp
adc
cmp
mov
adc
push
clc
stos
stos
cs
sbb
fidiv
add
std
sbb
adc
xchg
(bad)
in
fcmove
fwait
xor
or
mov
mov
mov
je
loope
jle
fwait
sbb
sbb
cmp
sub
stc
paddw
aad
into
adc
inc
ins
dec
or
sub
xchg
jmp
(bad)
mov
mov
xor
or
test
jae
in
jo
dec
push
mov
pop
scas
dec
es
js
mov
cmp
mov
cwde
mov
jecxz
test
nop
add
pop
mov
dec
jns
fs
imul
fldenv
shr
add
fcom
jno
rcl
mov
or
mov
pop
cmps
sti
shl
or
pop
mov
and
int3
leave
pop
inc
stos
mov
icebp
push
or
loope
in
(bad)
stc
(bad)
loopne
repnz
jp
mov
xchg
xchg
xlat
daa
mov
mov
in
jmp
(bad)
push
xchg
enter
jge
or
cmp
jp
rcl
jmp
fdiv
jecxz
xchg
call
mov
lods
shl
inc
jbe
(bad)
std
std
or
test
inc
in
mov
jg
mov
rdtsc
dec
pop
call
and
setl
shl
test
and
mov
in
or
mov
inc
and
ins
out
lods
pop
pop
sub
sub
div
dec
dec
dec
push
and
xor
retf
or
sbb
mov
adc
sub
int
sahf
jnp
aas
jb
loopne
mov
jmp
or
adc
cli
stos
and
pushf
sahf
push
xor
cli
sbb
pop
mov
push
push
jnp
out
xchg
mov
les
and
fwait
push
je
imul
inc
sti
ret
cmp
and
or
(bad)
aad
xor
and
add
aaa
dec
inc
pop
sub
cli
stc
stc
data16
repnz
in
xchg
mov
lock
push
add
stc
push
cmps
mov
mov
sbb
ins
push
lds
mov
rcl
cmc
push
cmp
out
cmps
je
popa
mov
mov
movs
sbb
inc
and
mov
leave
pop
icebp
sbb
imul
clc
les
xchg
or
rcr
std
cld
add
inc
xchg
push
(bad)
je
lock
or
ret
out
push
sub
adc
fwait
mov
mov
mov
loope
out
mov
sub
leave
mov
inc
mov
xor
or
sub
out
clc
hlt
inc
mov
adc
iret
cmp
mov
mov
ins
test
fist
data16
sbb
(bad)
enter
and
inc
(bad)
leave
mov
cmp
outs
inc
inc
dec
mov
sbb
jg
mov
and
push
repz
push
out
xchg
sbb
mov
mov
lods
sub
mov
sub
ss
sbb
mov
lds
adc
jmp
lods
adc
and
push
pop
jnp
jp
aas
sti
xchg
repnz
mov
aaa
inc
inc
cld
inc
push
fwait
cmp
pop
sbb
and
dec
ret
dec
mov
das
pop
jbe
rcr
inc
fadd
jle
addps
idiv
mov
imul
test
fldcw
mov
rcl
adc
pop
fcom
cmps
mov
jmp
popa
daa
repz
daa
std
xor
xor
in
sbb
out
nop
lock
mov
push
pop
lds
mov
dec
cmps
out
call
bswap
shr
jg
(bad)
and
lahf
xlat
pop
jb
ja
xor
jbe
scas
inc
mov
out
jnp
lods
das
push
repz
call
cmp
(bad)
inc
repz
pusha
loope
loop
daa
in
push
outs
pusha
xchg
adc
pop
rcl
fist
mov
mov
scas
sub
sti
adc
xor
std
jmp
clc
xchg
scas
(bad)
in
mov
pushf
jo
jae
push
mov
test
(bad)
out
imul
inc
push
jmp
repnz
jecxz
pop
inc
cmp
add
or
mov
out
add
adc
jp
and
gs
inc
sbb
ins
inc
rcr
jbe
mov
pop
cmp
xor
and
xlat
dec
in
loopne
adc
xchg
add
cmp
outs
lea
sbb
clc
jbe
or
add
xor
xchg
iret
jbe
lea
push
xor
sub
scas
push
pop
lods
out
test
add
ins
cmp
stos
xchg
or
xchg
and
inc
aam
out
and
pop
xchg
adc
mov
mov
push
cwde
fld
iret
pop
(bad)
push
loope
mov
xchg
add
or
and
mov
add
movs
sbb
add
sub
jb
retf
pop
jge
shl
mov
sahf
popf
cdq
retf
pop
push
retf
shl
jp
mov
rcl
add
cmps
xor
ficom
in
(bad)
std
addr16
lea
mov
mov
mov
cmp
xlat
mov
into
inc
mov
jmp
jnp
push
rcr
retf
cmps
jns
loop
add
mov
jge
fsubr
mov
push
pop
daa
pop
or
lock
adc
push
mov
jnp
out
mov
and
pop
cmp
mov
inc
dec
jb
nop
mov
xor
test
fnstsw
jg
es
and
scas
fisubr
dec
jecxz
ret
rcr
fstp
int3
mov
fstp
adc
sub
adc
sbb
sbb
or
or
jecxz
inc
mov
retf
cmp
or
movs
sbb
push
dec
cmp
adc
in
dec
inc
xor
mov
retf
sub
cmp
or
inc
lock
push
in
jmp
jl
sbb
ds
sti
xchg
add
leave
nop
mov
mov
xchg
push
jne
cmps
daa
std
mov
stos
imul
adc
jg
int3
add
imul
movs
jecxz
out
jnp
xchg
aad
or
adc
aam
jns
shr
xor
dec
add
aam
ret
adc
cli
out
mov
mov
daa
jmp
push
cmps
mov
call
out
mov
mov
pusha
push
hlt
icebp
popa
add
mov
aad
adc
cmps
fst
shl
(bad)
test
leave
test
xchg
xchg
sub
push
data16
or
repnz
add
into
iret
mov
jno
mov
mov
mov
xchg
push
mov
pop
out
push
daa
cld
das
ins
dec
cmp
mov
and
mov
js
stos
daa
in
jle
push
and
(bad)
ficom
call
bnd
pop
push
je
and
push
sub
pop
in
and
jmp
sbb
mov
shl
xlat
test
test
stos
test
push
mov
stos
mov
mov
shl
xchg
mov
mov
sbb
adc
xor
inc
lahf
jmp
mov
gs
jne
inc
aaa
pop
or
sub
add
xlat
add
out
inc
xor
mov
jl
pop
ins
jno
jbe
cdq
sbb
jg
out
cdq
aam
in
adc
xchg
cli
js
xchg
adc
mov
and
add
test
mov
ja
leave
es
ins
cmp
imul
mov
neg
neg
push
mov
pushf
in
lock
jae
mov
mov
pop
(bad)
rcl
je
push
or
or
sub
push
inc
sbb
cmp
int
jbe
repz
mov
add
daa
add
mov
mov
xchg
lds
test
ret
sbb
int3
push
imul
imul
clc
sbb
jmp
test
je
adc
add
pop
hlt
int
pop
enter
push
aas
mov
not
cmps
add
dec
xor
lods
js
xor
push
stos
xchg
mov
in
jp
cmp
mov
aaa
ret
lods
add
aas
dec
jne
mov
cli
lock
and
mov
sbb
cmp
leave
je
cli
xchg
adc
movs
out
aam
out
and
pop
(bad)
ss
hlt
or
scas
loop
inc
ret
jnp
pop
and
cmp
dec
jp
sbb
sub
cmp
ret
sahf
cmps
jmp
jl
test
aam
add
aaa
popa
sbb
cmp
out
lods
mov
aas
in
xchg
mov
outs
sub
xchg
(bad)
jne
sbb
out
das
imul
jns
and
mov
inc
aas
sub
lock
shl
mov
cs
mov
and
(bad)
mov
cmp
les
cmp
cmove
adc
popa
movs
(bad)
jo
bound
xor
sahf
inc
jecxz
inc
leave
loop
add
call
dec
mov
dec
adc
mov
rcr
ss
ficom
sub
jae
push
xchg
xchg
aaa
mov
repz
cmc
xor
movs
out
fistp
sbb
icebp
aas
or
jl
sbb
mov
imul
dec
mov
enter
and
and
fld
adc
dec
xchg
push
test
xchg
arpl
mov
rol
les
rol
sbb
iret
mov
adc
push
out
pop
mov
test
push
call
stos
inc
mov
push
rcl
xor
xchg
push
sahf
repnz
mov
pop
and
nop
fidiv
push
mov
jbe
mov
ss
pop
inc
mov
lods
adc
scas
inc
fwait
inc
sahf
and
out
cld
mov
mov
cdq
dec
jmp
nop
push
xchg
rol
dec
pop
dec
scas
pop
pop
gs
jno
ret
pop
jo
fs
xlat
adc
scas
push
mov
sbb
mov
mov
shl
cmp
sbb
mov
fucomp
add
sti
sbb
pusha
sub
jb
add
pusha
mov
in
jae
pop
xor
mov
sub
mov
clc
popf
rcl
mov
sti
xchg
add
mov
push
push
shl
and
xor
repnz
push
jae
add
lock
dec
ret
jbe
js
xor
or
mov
(bad)
das
lock
inc
outs
call
xchg
pop
lods
stc
retf
outs
mov
inc
dec
nop
test
aas
(bad)
sbb
sub
cmp
(bad)
fist
and
rol
pushf
test
inc
test
shl
rcr
jg
pop
int
adc
js
sub
sub
adc
sub
sub
inc
add
xor
xchg
and
jne
idiv
or
mov
jne
outs
sbb
(bad)
hlt
and
mov
mov
arpl
(bad)
fyl2x
dec
mov
inc
cmp
psubw
ss
(bad)
shl
inc
rcl
mov
fwait
in
pushf
add
(bad)
leave
dec
pop
repz
fild
pop
jmp
adc
sbb
push
dec
(bad)
mov
lock
loopne
jge
jo
mov
popf
mov
inc
outs
sub
inc
pop
loopne
cmps
int
mov
pushf
mov
nop
jmp
fcomp
mov
and
lods
push
mov
mov
es
adc
push
xor
std
xchg
hlt
repz
hlt
push
mov
or
aad
mov
loop
je
xchg
shl
push
lahf
lds
lahf
inc
(bad)
sub
sbb
fistp
or
xchg
ret
mov
mov
xchg
inc
ins
push
cmp
movs
arpl
or
adc
adc
(bad)
and
loop
mov
sbb
push
cmp
loope
jne
ret
push
stos
inc
sub
cdq
mov
mov
(bad)
in
push
or
fisttp
aaa
sub
mov
inc
add
push
xor
add
arpl
push
(bad)
mov
clc
sbb
inc
neg
add
pop
dec
xor
jle
test
sbb
and
sbb
jle
pop
and
mov
outs
sub
add
retf
dec
xlat
xor
jns
cmp
inc
inc
nop
loop
add
enter
(bad)
ins
ret
ds
pushf
add
xor
sub
xor
adc
mov
xchg
test
inc
pusha
xor
add
aam
jbe
push
lea
arpl
ins
mov
popf
jmp
(bad)
adc
pop
retf
cs
inc
aad
push
test
int3
out
cmp
jle
in
mov
pop
add
pop
dec
test
ja
mov
daa
cmps
jne
mov
dec
enter
enter
jmp
mov
sub
rol
(bad)
lahf
ja
ja
fbld
xchg
pop
cmp
leave
std
or
sbb
test
test
div
addr16
jg
jp
lods
repz
or
mov
mov
jmp
(bad)
fwait
sti
out
mov
movs
cmps
inc
pop
cmps
sub
jmp
out
fild
sub
mov
xlat
mov
inc
and
fidiv
lahf
dec
je
pop
push
push
and
xchg
xchg
pop
fstp
aad
cli
cmps
pop
je
cmp
ret
cld
fucomi
out
outs
add
xchg
ds
icebp
push
fcomp
cmp
out
popf
mov
cmp
pop
push
enter
mov
cmp
rcr
or
aad
add
mov
cmp
or
bound
repz
(bad)
cmp
or
jecxz
jns
lea
int
mov
xchg
xchg
cdq
ret
add
mov
pop
dec
aaa
mov
or
lods
add
mov
pop
in
push
dec
loope
pop
in
mov
arpl
cmp
out
add
repz
jle
xchg
and
in
cdq
ins
outs
dec
inc
out
lahf
add
repnz
add
mov
mov
inc
fisubr
jmp
sahf
icebp
int3
mov
ret
popa
ins
sbb
mov
cmps
mov
aad
es
jge
fwait
or
or
arpl
jae
dec
mov
(bad)
mov
stc
cmc
dec
and
mov
add
nop
out
fcomi
in
sbb
mov
jmp
ficom
pop
dec
loopne
js
outs
mov
jmp
pop
shl
mov
push
int
mov
ret
or
xchg
inc
icebp
mov
add
retf
jmp
mov
and
bound
push
mov
nop
adc
(bad)
clc
neg
sar
cdq
sbb
stos
push
retf
das
sbb
sbb
pop
icebp
adc
xor
rcl
fadd
inc
jno
cmp
inc
ins
dec
inc
xchg
hlt
sbb
mov
mov
test
sub
imul
push
push
jns
xchg
dec
pop
loope
fbld
fwait
pop
loope
test
sub
push
loopne
jne
inc
xor
jge
mov
xchg
cld
mov
popa
mov
xchg
ds
arpl
sub
daa
div
aas
push
mov
arpl
aad
lds
pushf
js
pop
ja
mov
xor
inc
sub
mov
xchg
pop
inc
push
dec
cmp
adc
and
dec
pushf
vpunpckhwd
cdq
xlat
xchg
call
push
pop
test
mov
stos
mov
clc
inc
call
ins
ficom
push
std
imul
xor
inc
sar
xor
pop
in
or
(bad)
jge
mov
jmp
popf
pop
inc
imul
loop
fs
inc
loope
and
retf
inc
aaa
ret
ret
pop
jb
add
loop
pushf
jmp
paddd
daa
and
(bad)
lds
add
cmp
xchg
sbb
xlat
call
imul
movs
out
outs
dec
pusha
jmp
pop
and
jns
sub
mov
stos
mov
mov
cld
dec
int
sub
sub
fwait
cli
mov
pop
(bad)
add
cmps
movs
cs
(bad)
mov
(bad)
mov
in
mov
sub
add
jb
fild
cmc
push
pop
loope
cmp
iret
fist
cli
pop
fimul
out
cmp
adc
cmp
add
pop
or
es
jb
aam
push
xchg
mov
xor
mov
mov
jp
push
and
mov
pop
mov
mov
jg
pop
stos
popa
dec
jp
stos
ins
add
push
dec
xor
jae
outs
repz
inc
cmp
scas
push
imul
add
inc
adc
jo
add
or
pop
dec
ja
add
jo
into
sar
sbb
mov
sti
jno
retf
hlt
out
leave
scas
(bad)
mov
sbb
add
dec
hlt
hlt
mov
imul
or
fwait
adc
or
fmul
les
and
je
push
push
mov
or
dec
fcomp
push
call
sub
jecxz
jecxz
lea
push
pop
sub
icebp
js
call
and
(bad)
pop
and
(bad)
out
inc
sahf
call
cld
push
and
sub
ret
mov
fucom
cmps
out
(bad)
sub
pop
xor
(bad)
xor
push
mov
jecxz
pop
inc
sub
sbb
outs
or
jne
or
bound
mov
test
sub
inc
or
aas
pop
addr16
sbb
sar
inc
js
add
pop
push
inc
movs
scas
xchg
rcl
xor
mov
stc
inc
mov
jg
(bad)
xchg
and
mov
test
add
sbb
push
iret
ins
out
outs
add
inc
dec
ds
push
mov
or
icebp
popa
sbb
sub
test
imul
aas
fs
adc
test
mov
jnp
xor
movs
scas
pop
pop
jne
inc
adc
in
or
aam
xchg
jge
inc
(bad)
rcr
and
and
or
push
xlat
mov
adc
mov
push
inc
arpl
in
lock
loopne
pop
mov
sti
test
adc
sbb
ffreep
movs
(bad)
call
(bad)
cmp
jg
icebp
pop
das
aam
in
inc
dec
inc
int
retf
retf
in
jb
shr
xor
rcr
rcr
out
js
push
(bad)
fisttp
sbb
pop
adc
jnp
cmp
xor
fnsave
cmps
cmp
mov
pop
sub
retf
xlat
mov
xchg
inc
xor
out
mov
sub
cdq
add
icebp
sbb
call
and
test
mov
call
scas
movs
ret
sub
mov
aaa
imul
mov
cmp
not
push
mov
mov
xchg
aaa
arpl
xor
neg
pop
int3
test
bound
inc
mov
(bad)
sbb
xchg
popa
sbb
xchg
out
call
imul
test
sbb
imul
test
sbb
sbb
cmp
shl
out
mov
ficom
jo
sub
sub
jne
iret
mov
leave
pop
mov
cs
ins
in
adc
std
jle
mov
sahf
cs
sub
and
mov
jp
ins
jl
hlt
daa
xchg
aas
xor
ficom
mov
and
jmp
cmp
push
xchg
cmp
mov
fstp
dec
int
pmaddwd
pop
ror
retf
cwde
hlt
int
xor
cld
(bad)
jbe
loopne
mov
loopne
pop
addr16
xchg
push
iret
mov
mov
inc
xchg
mov
mov
mov
mov
push
imul
adc
mov
push
mov
lock
adc
enter
test
pushf
inc
pop
pop
mov
mov
dec
mov
test
jo
push
lock
shl
dec
pop
outs
sar
mov
mov
mov
add
cmps
out
push
xchg
mov
and
lods
pop
out
inc
mov
jge
lds
inc
push
cmps
mov
xchg
neg
fiadd
pop
cmp
test
xor
fwait
sar
mov
bound
sub
repz
aam
cwde
shr
dec
adc
mov
mov
or
sub
inc
mov
(bad)
and
icebp
stc
mov
out
inc
xor
add
sub
ret
adc
adc
shl
jno
cmc
mov
xchg
out
popa
xchg
pusha
sbb
xlat
out
cmps
ror
out
out
js
rcl
cwde
jmp
or
popa
fstp
xchg
sbb
cmp
cmp
(bad)
repnz
pushf
rcl
lds
xor
outs
fs
push
inc
outs
div
xchg
sub
ja
mov
or
push
mov
push
xchg
loop
mov
jae
test
test
sub
addr16
or
sbb
loop
sbb
retf
mov
jmp
repnz
in
dec
mov
(bad)
cmp
pop
cmc
adc
add
pop
xor
sbb
and
out
leave
cmp
mov
std
mov
sbb
je
lea
(bad)
out
(bad)
push
fadd
into
mov
(bad)
fcmovb
je
mov
cmc
repz
loop
cmp
mov
sbb
(bad)
(bad)
stc
ficom
imul
sub
aad
outs
dec
iret
xor
loopne
rcr
fwait
(bad)
mov
jae
stos
sbb
push
xchg
ret
inc
adc
retf
push
div
jae
out
xchg
sub
mov
pop
xor
and
ret
add
pop
mov
cmp
loop
je
adc
push
jle
cmp
xor
gs
aas
pop
ror
out
aad
cmps
retf
ror
int
int
sub
pop
pop
pxor
push
xchg
push
or
cmp
sub
inc
out
js
push
xchg
xor
aad
xchg
and
pushf
jge
mov
jns
sub
sbb
cmp
sahf
js
pop
sbb
stos
or
imul
jae
push
xchg
retf
shl
push
add
pushf
fild
push
aaa
cmp
leave
sar
mov
dec
daa
scas
mov
icebp
push
jne
and
pop
test
into
out
test
jl
test
xchg
setle
popf
dec
mov
add
sti
jge
jl
daa
and
pop
mov
dec
mov
mov
fmul
hlt
xor
jp
inc
fild
xchg
out
vsqrtss
movs
jl
adc
sbb
jp
jle
fisub
cmps
push
(bad)
xchg
pop
clc
xor
push
test
aad
(bad)
movs
jmp
outs
ffree
addr16
retf
sub
dec
fs
pushf
xor
add
jno
cmc
push
test
jecxz
mov
push
adc
int
mov
jnp
xlat
imul
push
sub
cmp
mov
mov
dec
push
push
fwait
aad
sub
cmp
inc
daa
test
sbb
jmp
mov
fsub
js
sub
mov
push
sub
pop
sub
setb
push
(bad)
fisubr
push
aad
jne
ror
cmp
cld
or
push
sub
xchg
jns
mov
adc
pause
mov
push
sub
or
pusha
xor
xchg
mov
ja
clc
test
ret
sub
hlt
aas
mov
cwde
push
mov
or
imul
inc
mov
xor
mov
push
in
shr
push
mov
or
psubsb
mov
popf
cmc
fnstsw
ror
sub
and
mul
jp
adc
inc
fwait
aas
dec
aad
or
stos
pop
pop
nop
adc
in
push
outs
scas
popa
push
sbb
push
(bad)
fimul
(bad)
and
cmp
dec
add
mov
mov
fs
adc
push
(bad)
ja
and
mov
fnstsw
add
pusha
push
ret
fild
mov
sub
mov
or
ret
into
dec
ins
aam
imul
mov
pusha
push
adc
xor
jbe
pop
fcomp
mov
xchg
fld
sahf
xor
mov
pop
sub
xchg
es
pop
push
(bad)
icebp
not
dec
loopne
jb
sbb
cmc
pop
mov
rcl
lods
nop
pop
arpl
(bad)
loope
adc
cmps
retf
jnp
add
jge
frstor
add
jmp
dec
dec
pusha
scas
pop
mov
pushf
xchg
in
push
mov
and
push
push
popf
lds
mov
gs
jnp
jne
je
cmps
inc
xchg
je
jl
sub
sbb
imul
addr16
ret
sbb
jecxz
inc
dec
stc
out
mov
jnp
pop
cmp
test
cmc
and
sub
cmp
and
and
jge
inc
pop
cmp
shl
jmp
mov
pop
test
pop
shl
(bad)
push
mov
shl
jl
popf
cmp
sahf
cmps
and
or
jp
mov
popa
test
sbb
adc
push
cmps
mov
mov
jmp
inc
out
sbb
movs
fldcw
xchg
gs
(bad)
cmc
mov
or
int
test
repz
(bad)
xchg
add
mov
ret
aaa
xchg
cmp
mov
sbb
adc
int3
dec
(bad)
es
push
inc
retf
inc
in
test
cmp
lock
jg
ja
mov
dec
fs
xor
sbb
shld
mov
jo
pop
aas
add
imul
std
xchg
or
and
and
push
mov
push
mov
jbe
fld
(bad)
in
lea
and
retf
repnz
mov
imul
out
xchg
in
push
in
xchg
cli
pop
cmp
arpl
popf
xor
in
popa
rol
xchg
xchg
imul
div
sbb
das
inc
js
scas
or
js
mul
jg
int3
mov
in
inc
fild
cmp
ret
xchg
xor
push
mov
es
in
test
mov
sbb
mov
cmp
push
pop
xchg
mov
(bad)
sbb
xchg
aaa
jbe
inc
inc
lahf
fnstenv
jmp
call
sar
repnz
add
xlat
fmul
sub
xor
(bad)
jmp
loopne
dec
sbb
ins
(bad)
call
inc
push
or
jmp
dec
dec
adc
js
push
jge
mov
cmps
rcr
xor
push
jp
fadd
push
sub
in
retf
ror
adc
inc
test
shr
sbb
inc
stc
test
fisubr
gs
scas
mov
mov
and
rol
dec
shr
out
jnp
cmp
inc
ret
push
stos
and
cdq
pop
lds
popa
cli
loop
push
lea
lock
fnstsw
(bad)
jno
jnp
(bad)
aad
cmp
dec
(bad)
fdiv
es
aaa
inc
int
mov
outs
(bad)
cwde
cmp
ja
cmc
jecxz
es
jmp
jmp
ins
jne
imul
jns
sub
pop
inc
or
js
(bad)
sub
pop
pushf
cvtdq2ps
out
aad
imul
or
jg
cmp
mov
mov
retf
and
push
je
and
ds
data16
jno
ins
enter
call
xlat
cdq
push
adc
in
fisub
dec
imul
outs
xor
xchg
xchg
scas
out
push
icebp
sti
data16
imul
sub
cmp
clc
cmp
add
repnz
or
ss
add
adc
mov
xchg
xchg
mov
shl
sbb
inc
fwait
nop
sub
inc
(bad)
sti
cmp
push
repz
jmp
mov
mov
leave
in
and
jb
mov
(bad)
aad
aas
push
sbb
jne
mov
dec
xor
int3
or
push
mov
lods
icebp
cld
jp
rcr
xchg
adc
push
pop
add
inc
xchg
les
and
add
push
pusha
sbb
icebp
push
jp
cmp
(bad)
fsubr
sbb
jo
shl
mov
mov
sbb
arpl
adc
fs
mov
sbb
dec
cmp
sbb
mov
int
iret
and
loopne
mov
idiv
and
lods
call
nop
and
fist
mov
loop
adc
pop
loop
dec
or
out
outs
movs
retf
es
inc
xchg
xor
mov
cs
ds
iret
jo
dec
dec
movs
fwait
dec
dec
jg
stos
adc
cmp
test
mov
stos
jo
in
pop
jb
les
jns
or
imul
jecxz
xchg
retf
cli
(bad)
jmp
repnz
mov
dec
in
imul
data16
(bad)
jl
lods
mov
jge
test
test
xchg
xchg
pusha
(bad)
cmc
pop
xchg
ucomiss
data16
dec
cmp
lock
mov
push
pop
es
cmps
ja
sbb
out
fldz
sub
mov
jl
out
icebp
push
jno
in
jg
sbb
int3
jne
cmp
mov
std
lods
daa
jmp
jne
xchg
call
cs
jl
in
push
mov
jmp
gs
aad
loop
mov
adc
push
fisub
jmp
shr
mov
imul
fcom
mov
sti
pop
cmp
mov
mov
outs
scas
vpsrlw
push
push
xadd
mov
jns
add
movs
push
xor
cmps
scas
gs
imul
sub
mov
adc
xor
(bad)
sbb
enter
sbb
xor
jbe
in
(bad)
dec
sahf
mov
fs
das
loope
cmps
js
xor
and
mov
call
xchg
ins
jb
pop
fmul
xchg
adc
push
rcr
std
movs
pop
(bad)
xchg
std
fs
add
push
pop
stos
jne
push
shl
aam
retf
inc
js
sti
popa
push
or
cmp
scas
je
xor
lods
ja
shl
jnp
sbb
jge
mov
sub
xor
mov
mov
push
fistp
rcr
add
inc
cmp
cmps
xchg
sub
scas
and
xchg
xchg
add
popa
ficomp
pop
test
js
pop
call
adc
and
mov
sub
inc
bound
les
rol
clc
cmps
cs
popa
mov
repnz
push
ss
mov
out
add
xor
fmul
ss
neg
push
sub
xchg
pop
xchg
mov
movs
xlat
fld
and
sahf
pop
popw
ss
mov
mov
fsubr
xchg
sbb
mov
and
dec
je
xchg
xchg
iret
sbb
out
bound
shl
bound
call
mov
repnz
popa
sub
aad
cwde
lods
(bad)
sub
push
xchg
pop
out
push
int
cdq
imul
outs
(bad)
pop
retf
add
outs
push
push
in
mov
xor
and
mov
or
xchg
mov
cmp
sbb
push
mov
xor
xor
data16
pop
popf
ins
mov
fild
pusha
sahf
int3
dec
cmc
popa
add
jmp
pop
sbb
(bad)
scas
and
and
and
or
and
sbb
add
sub
clc
popa
ja
xor
jge
sbb
cmc
test
and
cwde
add
(bad)
into
sbb
sbb
shr
adc
push
fist
pop
fst
int
out
jg
adc
fdiv
mov
cmps
outs
inc
mov
xchg
push
test
in
std
xor
pop
xor
adc
retf
dec
and
nop
xor
mov
shr
mov
sbb
ficom
in
xchg
sti
(bad)
jne
push
push
xor
inc
cmp
movs
xchg
iretw
xchg
push
pslld
add
or
mov
inc
xchg
xchg
push
sbb
je
mov
mov
lea
and
jl
xor
pop
fnstenv
or
js
test
out
dec
xchg
lods
movs
fidiv
aas
jns
mov
dec
std
jmp
adc
jmp
xor
jg
inc
dec
jb
add
scas
and
inc
sbb
lods
test
fidiv
cmp
mov
(bad)
inc
adc
mov
scas
xchg
idiv
fistp
adc
into
mov
lock
ins
popf
push
and
cmp
jae
scas
shl
pop
mov
dec
jg
aam
and
jne
popa
daa
and
mov
sbb
loop
mov
ds
call
xor
out
adc
pop
xchg
fdivr
mov
cli
sbb
mov
movs
jge
xlat
and
nop
sub
adc
or
dec
pop
push
push
pop
fsub
cmp
inc
pop
mov
adc
jb
cmp
iret
stos
pop
mov
and
pop
fsubp
mov
and
punpckhbw
lods
mov
fidivr
mov
sub
sbb
pop
call
xchg
retf
test
fwait
xor
xchg
pop
xchg
in
mov
xchg
cmp
xor
xor
(bad)
and
inc
and
inc
es
xor
ret
mov
adc
outs
xchg
add
add
fwait
ins
adc
cmp
ins
lea
or
add
mov
ret
pop
jae
mov
push
in
dec
outs
sub
xor
dec
pop
cs
jg
fistp
push
mov
shr
mov
(bad)
push
mov
or
add
das
or
(bad)
cmp
inc
or
iret
cmp
movs
stc
jne
in
mov
xor
out
push
sbb
popf
pop
xlat
cmp
pop
mov
push
cmp
fucomip
mov
data16
jns
adc
int
std
or
out
mov
retf
retf
daa
adc
icebp
loope
div
mov
cmc
dec
jb
mov
or
iret
and
xlat
add
test
std
sbb
cwde
xchg
push
jle
stc
imul
cs
(bad)
lock
inc
mov
push
cmp
(bad)
cmp
and
sbb
xchg
pop
push
ds
int
icebp
xchg
jge
xor
jmp
sub
je
movs
(bad)
mov
xchg
pop
or
inc
pop
pop
imul
push
and
adc
and
mov
add
sahf
loopne
repnz
int
fild
mov
fdiv
xor
dec
ins
cmc
push
inc
out
ficom
fnstenv
and
in
leave
das
xchg
lods
xor
ds
pop
mov
imul
ins
ficom
sti
adc
je
xchg
add
repz
div
ror
lods
add
adc
sbb
jp
bound
pop
xor
ficom
(bad)
aam
dec
shr
xchg
sub
jmp
(bad)
mov
mov
fcmovu
into
cmp
sahf
xor
or
pop
sti
(bad)
jmp
rcl
mov
cmps
ins
ror
das
xor
int
inc
pop
push
jp
aad
mov
ins
enter
rol
icebp
sbb
call
rol
pop
arpl
les
jmp
pop
or
adc
inc
es
pop
fadd
aaa
inc
in
or
cmps
add
jmp
or
ror
(bad)
push
fld
iret
(bad)
test
pusha
retf
mov
lea
hlt
test
das
bound
lock
lods
loop
ror
out
shl
jl
int
test
or
mov
fist
mov
pop
ds
cs
sbb
push
ret
(bad)
arpl
jae
adc
add
xor
in
mov
adc
xor
int
mov
mov
jns
jmp
push
push
mov
jns
jnp
mov
ja
test
inc
in
ficomp
ds
add
sub
popf
push
adc
cmc
mul
pushf
rol
and
dec
mov
add
inc
mov
out
inc
xor
push
mov
call
int
mov
sub
push
repz
pushf
inc
push
fnstenv
mov
push
xchg
test
cmp
lods
dec
inc
jmp
mov
cmp
pop
and
mov
mov
push
sub
jmp
sti
mov
jg
dec
xor
sub
out
loope
cmp
mov
cmps
(bad)
push
mov
mov
jp
or
nop
pop
(bad)
push
add
(bad)
inc
and
adc
jle
scas
mov
xor
pop
jne
dec
jno
sbb
dec
sbb
sub
loope
stos
repnz
cmp
adc
loope
mov
push
mov
or
jle
test
rcl
jns
jmp
retf
jecxz
dec
sbb
and
add
inc
fisub
mov
inc
jge
rcr
(bad)
jle
adc
(bad)
jns
adc
call
(bad)
clc
xor
jp
xor
mov
ror
xor
mov
jl
mov
mov
int3
inc
dec
jle
and
in
adc
mov
and
iret
mov
dec
push
inc
call
in
pusha
mov
out
pop
mov
sbb
ja
mov
ja
or
outs
sbb
and
mov
mov
jae
ins
xor
ds
inc
mov
into
fdivr
stos
mov
xor
or
pop
movs
js
popf
into
mov
rol
dec
das
rol
sub
addr16
cmps
out
gs
or
scas
sar
mov
push
xor
xchg
mov
pop
push
and
add
cmp
or
jo
xchg
add
dec
in
arpl
ins
(bad)
outs
mov
ins
sub
retf
call
sub
repz
dec
bound
cmp
lahf
fdivr
cmp
and
push
pop
pop
xor
mov
stc
imul
out
test
or
mov
adc
stos
dec
jle
jge
jbe
cmp
lahf
push
pop
adc
ret
xor
mov
pop
(bad)
movs
imul
push
loopne
cld
dec
dec
fbstp
sub
int3
gs
xlat
mov
adc
and
mov
dec
sub
mov
xor
inc
inc
inc
mov
mov
movs
jl
jmp
add
sbb
shl
arpl
bound
inc
in
sub
mov
mov
sbb
rol
out
jecxz
pop
jbe
dec
or
jbe
rcl
adc
movs
fdiv
jns
ds
addr16
mov
aaa
enter
sbb
xchg
push
cmps
mov
retf
cld
stc
outs
push
xchg
inc
xor
outs
outs
add
ret
lea
mov
sbb
rcr
ret
es
adc
sub
dec
or
inc
retf
call
jno
les
jle
div
xor
clc
mov
out
loopne
xor
xchg
aas
xchg
push
std
xor
ins
pushf
jns
fistp
or
pop
aas
ins
lods
fidiv
cwde
adc
dec
ja
mov
push
sbb
(bad)
(bad)
push
ret
nop
inc
out
data16
xchg
pop
bound
loope
je
int
push
lahf
sbb
(bad)
adc
loope
arpl
push
sbb
je
push
test
rcl
jb
pop
inc
xchg
pop
in
rol
xor
inc
and
aaa
in
popa
pop
sbb
sub
stc
fdivp
xchg
mov
xchg
sbb
outs
shl
or
stos
inc
jmp
xor
sbb
std
cli
jp
push
leave
aad
(bad)
in
cmps
push
inc
fwait
mov
cmp
mov
xor
xor
ins
ret
call
pop
inc
xor
and
int
stos
adc
in
(bad)
mov
scas
call
and
jns
xchg
lds
arpl
mov
rcl
cli
dec
or
loop
or
hlt
mov
sbb
push
inc
jnp
sbb
and
daa
dec
std
(bad)
pop
out
or
mov
dec
adc
xchg
in
(bad)
mov
into
out
lock
(bad)
fnsave
imul
cmp
cli
loopne
pop
xor
das
inc
adc
fstp
imul
mov
stos
cmp
cmp
xchg
inc
rol
push
imul
out
pusha
mov
ret
cdq
pushf
shl
pushf
in
ins
mov
sbb
inc
cmp
xor
scas
sub
rcl
jp
adc
sub
mov
mov
pop
fxch
scas
add
jne
xchg
dec
mov
retf
fs
mov
jmp
cwde
(bad)
std
mov
aaa
dec
xor
sbb
shl
repnz
sub
pop
and
outs
retf
outs
jns
cmp
enter
mov
xchg
fidivr
xchg
add
add
(bad)
jmp
dec
push
xchg
push
pop
je
test
shr
aam
pop
xor
in
ret
rol
jle
xchg
leave
xchg
out
cs
mov
fwait
push
movs
cmp
int3
ins
gs
(bad)
mov
pop
mov
int
mov
xchg
push
loope
add
push
and
pop
mov
sbb
ins
cmc
(bad)
add
add
jo
mov
adc
pop
or
xchg
sbb
pop
shr
dec
mov
jg
mov
das
cmps
mov
mov
call
outs
pusha
scas
pop
jnp
inc
cmp
cdq
cmp
sub
xlat
pop
push
fwait
mov
or
push
test
pop
cmp
mov
sub
push
dec
dec
push
xchg
ins
xchg
mov
adc
dec
jne
shl
push
push
adc
fnsetpm(287
push
mov
and
scas
jge
pusha
icebp
cdq
imul
push
rol
rol
push
sbb
jl
cli
pop
(bad)
xchg
jmp
sub
and
out
mov
stos
retf
stos
xchg
xor
jno
xor
pop
mov
mov
lds
pop
jnp
inc
je
push
(bad)
in
jb
in
mov
sbb
js
push
outs
jmp
add
(bad)
(bad)
scas
aas
push
fisttp
xlat
in
call
fmul
dec
popa
fdiv
retf
xchg
push
cdq
mov
movs
pop
jecxz
loopne
iret
xchg
mov
inc
dec
inc
pushf
sar
movs
adc
jb
push
xor
into
or
loopne
mov
and
and
shl
mov
push
outs
ror
aaa
fcomp
jp
jle
cmp
jne
jno
adc
fiadd
pop
scas
jo
cmp
xchg
pushf
or
add
dec
sti
mov
dec
ret
mov
mov
push
xchg
imul
cmp
lds
add
into
retf
call
pushf
jp
push
out
and
jle
cdq
sub
jp
lods
jns
daa
or
xor
call
mov
retf
adc
loop
jle
repnz
push
mov
cli
scas
into
mov
mov
jmp
dec
dec
xchg
jns
dec
mov
loope
sbb
push
and
and
add
jns
jnp
cli
add
sub
daa
sub
test
or
push
xchg
xchg
and
in
(bad)
push
jb
xchg
xchg
mov
dec
or
aad
outs
lods
mov
arpl
lahf
(bad)
sub
mov
jle
iret
cmp
lods
add
imul
fld
in
or
or
sbb
test
retf
cmp
popf
adc
mov
inc
mov
popa
xchg
ret
je
and
xchg
sahf
stos
sbb
add
mov
mov
mov
aaa
jmp
cld
nop
retf
adc
in
(bad)
leave
add
xor
and
push
cmps
push
xor
cmps
leave
retf
xor
mov
mov
lock
add
sbb
in
inc
test
pop
pop
or
out
imul
ins
push
test
ror
jl
call
jecxz
inc
rcl
mov
mov
cmps
xchg
test
add
addr16
sbb
lods
pop
push
dec
mov
sub
icebp
js
or
mov
jne
sub
out
jae
xchg
and
xor
xor
in
push
pop
xchg
fild
retf
je
inc
jg
mov
sub
inc
xchg
lock
mov
mov
jge
xlat
dec
push
(bad)
jle
outs
popf
or
mov
or
mov
push
cli
cmps
adc
out
outs
cdq
inc
and
cld
mov
rcr
outs
inc
aas
outs
inc
cmp
pusha
out
movs
fisub
pop
mov
gs
sahf
ins
int
ins
repz
cmp
(bad)
and
inc
sahf
jge
xchg
sbb
retf
cmp
fistp
lahf
xor
(bad)
xchg
sub
sbb
sbb
jge
aad
in
xchg
add
cwde
inc
push
mov
scas
adc
pop
das
jae
xchg
int3
mov
and
dec
pop
dec
jae
rcr
mov
sbb
add
call
push
outs
lods
dec
sub
pop
lods
cmps
adc
ins
or
cmps
xor
jo
shr
push
pop
dec
and
neg
jns
cmp
pop
retf
push
mov
mov
imul
adc
xor
inc
cmps
sbb
loope
jmp
call
cmps
push
(bad)
hlt
(bad)
neg
push
js
aad
cld
sbb
scas
fisttp
push
pop
pop
hlt
dec
jmp
push
lock
sub
mov
ins
xchg
xchg
or
or
xlat
rcr
and
cmp
pop
arpl
dec
sub
push
scas
call
xchg
jbe
xchg
test
call
mov
mov
clc
mov
popf
xchg
dec
outs
loopne
adc
cs
out
imul
int3
fmul
push
cdq
in
stos
push
shl
lds
leave
jb
xchg
repz
mov
adc
je
jge
test
cmp
bnd
push
cdq
daa
mov
xor
or
outs
pop
movs
or
movs
(bad)
mov
push
dec
push
hlt
cmp
push
push
retf
jl
fwait
mov
cmp
xor
push
in
ins
cwde
es
rol
adc
loope
adc
xor
mov
loope
cmp
dec
jg
hlt
push
mov
test
loope
jecxz
xor
(bad)
push
xchg
mov
cmps
out
push
or
jne
cli
xor
(bad)
mov
pop
lods
ins
add
mov
cmp
pop
add
xchg
lods
retf
repz
xor
mov
in
hlt
lods
lods
jp
inc
clc
push
jmp
mov
xchg
or
ret
das
pushf
sahf
inc
addr16
data16
call
not
add
mov
pop
add
cld
dec
pusha
ins
daa
sbb
fild
mov
cmp
das
push
outs
push
ins
jge
jmp
dec
lods
adc
cmps
sub
xchg
sbb
test
in
or
out
shl
ss
aas
mov
pop
int3
std
and
pop
fs
call
mov
add
sbb
push
push
mov
cwde
push
sahf
cmp
push
push
test
fmul
(bad)
xor
cwde
push
push
ja
xlat
pop
daa
(bad)
jmp
cmp
pop
mov
inc
and
in
repz
sub
pop
adc
xchg
test
adc
sbb
sbb
jle
sbb
inc
pop
fwait
test
stos
sahf
aaa
inc
sbb
or
xor
inc
add
xchg
sub
pusha
mov
and
cmp
fist
xor
fbld
or
sbb
pop
push
mov
dec
pop
push
in
iret
pop
push
movs
test
rcr
dec
add
jne
movs
out
sbb
adc
shl
jp
xchg
dec
retf
(bad)
out
rcr
call
(bad)
push
xchg
cdq
(bad)
pop
mov
pop
frstor
bound
ss
jae
mov
jbe
das
sbb
(bad)
pop
xchg
and
call
in
das
or
mov
ins
push
mov
in
imul
popa
shl
in
mov
add
shl
cdq
cld
dec
js
push
cmp
sti
cmp
mov
fwait
mov
push
or
mov
xor
ret
adc
cmps
imul
lock
jle
push
fnop
push
bound
imul
(bad)
ds
add
push
mov
adc
push
(bad)
adc
imul
add
arpl
ja
shl
fsubrp
leave
sub
xor
adc
fs
enter
aad
xor
shr
pushf
sbb
mov
iret
ds
mov
mov
dec
inc
sub
ret
cli
mov
rol
add
ja
push
daa
ret
cmp
repnz
(bad)
adc
je
nop
not
xchg
xor
sub
jo
jns
adc
push
div
ds
jns
stos
jecxz
jl
out
into
mov
or
aas
add
jae
cmp
and
scas
mov
rcl
popf
push
sub
push
inc
mov
rcl
mov
xor
and
psrlw
fdiv
ret
adc
mov
push
xor
inc
pop
cmps
xor
sub
iret
fxch
ror
dec
call
pop
out
ja
xchg
outs
add
lds
push
and
mov
rol
lods
push
pusha
out
outs
push
mov
hlt
repz
xchg
push
jp
stc
sbb
jmp
test
nop
rcl
test
in
mov
cld
icebp
xor
cmps
cmps
xchg
jb
sub
inc
pop
loop
dec
cmp
int
dec
sbb
sub
xchg
inc
mov
push
inc
sti
sbb
adc
arpl
std
jp
jecxz
packsswb
xor
mov
(bad)
jns
jae
repz
call
add
xor
push
or
int3
stos
or
imul
lea
fiadd
jns
ret
mov
xchg
xor
jecxz
mov
pushf
les
sub
mov
mov
out
cmp
xor
cmps
xor
inc
push
cld
js
jmp
push
clc
push
jg
sahf
mov
loopne
pop
mov
pop
lea
dec
or
retf
aad
fwait
ja
pop
or
stos
jmp
lds
mov
cmps
mov
pop
sbb
outs
xchg
loop
cld
inc
mov
or
push
and
aas
jp
inc
or
shl
xchg
cmp
imul
mov
jg
test
nop
shr
outs
xor
sbb
mov
js
jl
outs
pop
pop
push
push
dec
adc
fwait
xchg
pop
mov
dec
xor
or
test
mul
sub
adc
mov
jae
ja
mov
cmp
cmp
pop
push
adc
imul
jmp
(bad)
push
pop
gs
xor
dec
xor
mov
in
sbb
add
push
mov
out
mov
test
dec
mov
mov
xchg
xchg
hlt
cmp
add
mov
sbb
cld
in
adc
loopne
push
xchg
ret
jl
mov
not
repz
pushf
dec
loope
lods
mov
push
daa
mov
cmp
mov
mov
fdivr
adc
jle
xor
aaa
or
and
push
xchg
or
ins
stos
mov
sbb
popa
or
(bad)
outs
push
adc
cmps
std
inc
cdq
sbb
jl
ret
mov
cs
mov
adc
ins
movs
mov
stc
lock
inc
inc
lods
or
mov
ins
add
mov
(bad)
mov
or
cmovl
or
push
mov
xchg
sub
scas
pop
retf
fs
(bad)
movs
pop
push
fistp
(bad)
enter
xor
mov
pop
stc
pusha
jp
imul
jg
pushf
push
retf
mov
dec
xchg
and
hlt
jp
cdq
int3
loopne
dec
(bad)
lds
retf
(bad)
xor
dec
dec
mov
mov
jbe
leave
lock
push
jae
es
popa
loope
(bad)
push
jl
(bad)
les
add
cld
dec
mov
pushf
call
xchg
add
jne
mov
lods
mov
retf
repz
popa
inc
xchg
(bad)
mov
clc
push
jecxz
jno
rcl
rol
push
sbb
in
and
push
xor
xor
fnstsw
lds
pop
mov
push
push
mov
mov
wrmsr
fisub
movs
lahf
adc
sub
mov
xchg
mov
aas
xor
movs
pop
addr16
in
sar
mov
jecxz
sbb
icebp
rcr
out
iret
(bad)
cmps
dec
xlat
xchg
and
dec
or
mov
bound
(bad)
push
out
rol
leave
mov
scas
jg
lea
pop
inc
stos
movs
inc
dec
mov
push
aam
mov
call
loope
mov
and
or
sub
repnz
push
or
stc
adc
stos
lea
xor
adc
clc
cwde
fdivr
clc
mov
les
div
mov
test
int3
ss
mov
xchg
nop
stc
scas
iret
push
dec
add
mov
ror
pop
cmp
and
test
test
cmps
pop
stc
push
ins
icebp
adc
xor
rcl
xchg
push
(bad)
ins
sbb
(bad)
sbb
and
pop
pop
sub
jl
inc
(bad)
shl
sbb
ins
dec
retf
pop
push
add
add
vaddss
int
hlt
mov
pop
jne
lods
and
cwde
push
pop
push
cmc
nop
push
jle
xchg
call
pop
loop
mov
ins
sbb
popa
inc
mov
mov
sub
mov
sbb
sub
inc
ror
call
fcmovnbe
pminub
adc
scas
push
push
ins
sub
not
call
inc
nop
fsubr
movs
fistp
jb
stos
push
mov
push
adc
and
std
jl
or
mov
mov
sbb
mov
pop
inc
mov
(bad)
cmp
mov
lea
push
mov
outs
imul
cld
pop
pop
aad
add
pop
ins
jne
pop
fidiv
test
inc
sbb
sbb
or
mov
repnz
dec
xor
push
or
(bad)
out
pop
fcom
out
inc
inc
sbb
and
out
pop
mov
inc
rol
push
sbb
cmp
rol
(bad)
pop
stc
scas
das
sub
xor
(bad)
dec
jnp
pop
addr16
add
inc
and
jmp
xor
jmp
retf
pop
retf
lahf
in
jg
fxam
cld
mov
xchg
mov
sub
icebp
or
sti
(bad)
push
push
or
xchg
dec
push
sbb
cmp
js
es
push
xchg
call
cmps
add
add
sbb
dec
ins
or
adc
movs
fwait
stos
popf
daa
push
lods
add
xchg
stos
stos
iret
pop
push
sbb
loope
leave
mov
xor
pop
jne
mov
jnp
call
pop
dec
pop
aam
rcr
rol
loop
mov
loopne
adc
cmps
aaa
sbb
jb
dec
cmp
(bad)
pusha
orps
push
add
test
push
out
retf
sub
push
add
out
loope
cs
or
xlat
mov
retf
xchg
mov
bound
data16
(bad)
clc
push
dec
mov
push
sbb
sub
lock
das
scas
cmps
in
mov
push
cmp
jp
imul
pop
mov
ret
mov
call
cld
aad
imul
scas
(bad)
cmp
xor
and
xchg
jl
popf
mov
xlat
push
mov
je
std
fdiv
pop
ins
and
dec
pop
clc
dec
dec
jmp
shl
adc
lods
int3
ds
xor
fwait
dec
dec
sub
stc
leave
stc
sbb
jp
lock
jbe
or
xor
or
arpl
push
(bad)
fild
bswap
(bad)
enter
mov
shr
out
dec
data16
mov
in
fild
add
push
push
je
imul
arpl
fisttp
xchg
inc
pop
pop
test
sub
popf
fdivr
das
loop
retw
sbb
mov
mov
dec
sar
push
in
mov
stos
mov
fdiv
ds
pop
cmps
addr16
mov
neg
(bad)
inc
std
cli
fyl2x
push
xor
mov
fnstenv
idiv
and
pop
outs
add
add
dec
dec
pop
sar
fcom
int
jns
hlt
mov
sub
daa
jecxz
(bad)
dec
pop
rcr
and
cmp
loope
xor
cmp
stos
ffreep
push
push
and
sub
cmc
sti
pop
(bad)
call
stos
aaa
push
lods
xchg
xchg
mov
inc
cmps
adc
int
test
xchg
pop
sub
mov
fisttp
stc
repnz
add
cli
cmp
xor
inc
lods
xchg
adc
fisub
xor
mov
enterw
sub
js
and
fsubr
push
jae
dec
add
shl
push
ss
bound
mov
jo
cmp
jge
icebp
sub
je
fsub
mov
sbb
sar
mov
adc
test
lods
(bad)
jge
lea
or
push
dec
jp
cmp
dec
xor
aas
je
fst
lahf
imul
scas
and
add
fs
retf
mov
retf
inc
icebp
push
inc
dec
jne
or
outs
repz
push
pop
retf
pop
mov
sub
xchg
xor
fdivr
in
stos
pop
add
leave
call
and
cmp
int3
pop
add
movs
je
sbb
jecxz
jbe
sbb
pop
popf
adc
cmp
test
inc
mov
sbb
sbb
push
mov
and
dec
clc
stos
jp
test
out
dec
cmp
aaa
data16
popa
(bad)
enter
mov
addr16
cmp
mov
jo
into
and
push
push
push
jle
sahf
(bad)
stos
push
inc
movs
leave
adc
or
fsubr
or
imul
out
add
pusha
into
jae
mov
stc
ins
mov
aam
scas
shl
jmp
mov
add
cmps
aaa
xor
cli
int3
jmp
ja
sbb
retw
add
add
fwait
(bad)
rol
and
mov
adc
dec
cmp
push
ficomp
pusha
xchg
and
retf
setge
sub
ins
enter
inc
out
ror
(bad)
sbb
mov
adc
sub
test
nop
or
in
mov
mov
cwde
mov
cmp
sub
sbb
add
adc
fsubp
xlat
pop
lods
and
test
adc
and
push
inc
daa
lock
mov
mov
mov
clc
dec
retf
cli
retf
pop
fsubp
xchg
ja
sbb
fxch
inc
into
ss
xlat
xor
or
inc
push
sub
icebp
or
jae
add
std
pop
fdiv
ret
adc
sub
mov
dec
cmp
fild
cmp
sub
push
sbb
xchg
push
rcl
mov
and
retf
and
lods
rcl
hlt
xor
cmc
aam
fild
cdq
add
sahf
mov
fdivr
in
stos
fst
loope
add
aas
ins
or
pushf
dec
ret
jle
enter
cmp
cwde
(bad)
push
mov
retf
pop
push
lods
inc
dec
gs
xchg
(bad)
jl
and
shl
test
mov
cmp
mov
lahf
rcr
dec
jno
stc
mov
nop
iret
pusha
mov
les
call
fcompp
inc
adc
scas
stos
leave
adc
jg
inc
fstp
push
scas
lea
jae
mov
std
repz
loopne
jp
sahf
xchg
mov
mov
stos
cld
inc
out
lods
call
test
(bad)
pop
dec
push
or
sbb
nop
cmp
idiv
or
mov
dec
pusha
call
and
fnstcw
(bad)
sar
mov
add
xor
mov
push
inc
sbb
cmp
adc
add
loop
push
add
cwde
jmp
je
scas
pop
nop
or
mov
add
inc
or
sub
int3
test
repz
test
cmp
mov
clc
mul
pop
loopne
pop
xchg
jle
loop
sbb
out
(bad)
dec
std
cmp
mov
aad
cdq
rol
pop
add
or
ds
xor
xor
inc
mov
mov
jns
jmp
xchg
fisub
jo
push
dec
inc
jno
cmc
xor
out
sbb
je
push
xchg
xchg
icebp
dec
call
or
adc
sbb
mov
jnp
xchg
and
push
sar
int3
mov
repnz
inc
mov
ins
es
xchg
ret
outs
sahf
add
cmc
repnz
sub
and
cmps
clc
enter
cmp
cmp
fwait
out
mov
je
or
jmp
sbb
lods
out
push
cli
in
add
shl
mov
in
call
out
in
adc
xor
mov
xchg
fst
xor
push
xlat
xor
cli
mov
fwait
aam
sub
adc
aam
int
cdq
div
dec
sub
jl
xor
prefetcht1
pop
jle
and
sbb
out
push
push
sub
add
mov
or
and
inc
outs
scas
aad
mov
mov
jb
data16
pop
mov
aas
mov
call
pusha
pop
mov
in
xchg
cmp
jae
push
adc
lods
repz
sbb
xchg
xor
ja
ins
imul
mov
rcl
call
or
and
jge
movs
mov
sub
cmp
jnp
and
add
(bad)
xacquire
fs
rcr
and
repnz
or
je
sbb
sbb
mov
xor
mov
mov
in
mov
add
jecxz
dec
rcl
icebp
cs
pop
xchg
lock
mov
fcom
xchg
push
cmps
jmp
add
jno
je
add
mov
scas
sub
and
cmps
dec
and
shl
jge
outs
mov
pop
fs
cmp
movs
aad
add
push
xchg
loop
mov
mov
arpl
clc
and
hlt
scas
fbstp
sub
js
cld
mul
jecxz
in
cli
stc
push
mov
adc
fld
mov
xchg
int
outs
pop
fnstcw
arpl
push
dec
dec
jno
xchg
ss
(bad)
cwde
in
jmp
imul
adc
jnp
sbb
lods
push
pop
jmp
push
push
or
push
dec
inc
pop
pop
pusha
ss
and
outs
loopne
and
sbb
inc
leave
call
adc
jle
mov
mov
test
pusha
stc
and
ins
add
into
add
adc
inc
jne
cmps
mov
outs
movs
std
out
movs
inc
iret
in
imul
sub
inc
out
fcom
in
xchg
int
or
xor
mov
push
ss
push
sbb
add
xchg
xor
adc
pop
adc
mov
popa
jp
push
out
cmp
out
aaa
leave
es
inc
stos
xor
push
pop
scas
scas
cli
cwde
and
cld
sub
jnp
or
cdq
push
test
push
sub
mov
jne
stos
mov
loop
mov
lods
mov
mov
jo
push
aas
in
rol
stos
mov
dec
jecxz
xor
sahf
inc
les
or
mov
add
push
dec
pusha
fcom
mov
pop
mov
or
aam
loop
(bad)
and
dec
cmp
adc
push
jns
or
xchg
jl
jecxz
(bad)
les
ret
int3
pop
and
imul
or
push
arpl
das
sbb
aad
and
into
aas
push
mov
fnstcw
push
dec
or
sti
outs
pop
or
push
mov
dec
aad
mov
pop
hlt
pop
das
cs
add
adc
add
and
and
xchg
mov
jmp
shl
push
fimul
and
pop
jmp
sub
or
(bad)
test
ret
push
mov
xchg
cmp
hlt
out
push
inc
pushf
cmp
popw
aas
mov
int3
pusha
inc
dec
leave
call
sti
loop
push
arpl
stos
(bad)
and
cld
jnp
mov
es
icebp
sbb
cmps
jo
movs
test
add
sub
mov
jo
mov
sbb
xchg
jbe
sbb
push
ret
nop
xchg
pop
loopne
cmps
inc
popf
pop
jl
or
in
fistp
test
pop
rcr
push
ja
xor
push
mov
loopne
(bad)
ror
and
cmp
pop
dec
scas
arpl
lods
daa
sbb
imul
data16
or
push
adc
imul
(bad)
xor
stc
ret
add
jl
jg
mov
ins
cmps
pop
xor
mov
mov
jns
sub
ins
call
push
in
jecxz
push
xchg
mov
dec
dec
inc
or
pop
jl
int3
scas
inc
shl
inc
fisubr
fcmovbe
sub
adc
mov
jae
cmp
mov
aam
mov
xchg
pop
lock
push
js
lahf
xchg
push
stc
jg
pop
shl
xchg
aaa
inc
stc
jns
mov
in
(bad)
mov
lods
movs
mov
pop
xor
fiadd
imul
jns
pop
cmp
int
jecxz
and
xchg
inc
int
xchg
mov
lods
mov
mov
jmp
int3
jecxz
lds
cmp
xchg
in
mov
add
adc
xchg
out
xchg
adc
cmps
or
dec
mov
cdq
out
movs
(bad)
mov
repz
loopne
loop
jecxz
loopne
int
mov
lock
or
xor
retf
fadd
jmp
bound
shl
push
ins
imul
pop
imul
aaa
test
cmp
jg
push
pop
pop
mov
jo
rcl
dec
sub
inc
xchg
pop
popf
inc
cmp
xor
dec
jl
and
jge
pop
fucomp
rol
mov
(bad)
sahf
shr
mov
push
pop
dec
fnstenv
xor
inc
jge
sbb
stc
stos
dec
ins
jecxz
sbb
sti
retf
sar
cmps
cmp
shl
out
ret
or
test
fstp
shr
mov
push
ss
mov
dec
fst
cmp
xor
or
mov
jle
repnz
je
or
pop
dec
ss
inc
mov
lahf
sbb
push
jle
or
in
xlat
dec
shr
mov
or
enter
xor
sbb
fistp
mov
or
fld
stos
cld
dec
cmp
aad
cmp
push
clc
mov
mov
js
fldl2t
mov
rcl
fsub
xor
ret
cmp
das
dec
lea
daa
in
jmp
lods
xchg
pop
lea
cli
mov
sub
std
lea
mov
dec
xchg
mov
jecxz
jmp
mov
js
aam
cmp
dec
retf
fist
adc
sub
sbb
inc
sub
imul
ins
mov
or
inc
js
adc
sbb
jmp
fbstp
jmp
jg
repnz
int
jmp
test
add
mov
mov
push
data16
dec
ret
mov
ret
popf
ror
dec
not
inc
jnp
int
sub
pop
ds
dec
shl
jmp
push
repz
xchg
xchg
pop
add
adc
out
push
aad
repnz
call
jns
xchg
pop
pusha
lea
leave
cmp
xchg
jmp
int
and
and
inc
push
mov
jge
jmp
ret
xchg
xlat
dec
mov
sahf
cmp
cmc
arpl
leave
call
fbld
sbb
hlt
ret
nop
mov
rcr
stos
add
cmps
rcr
sahf
or
push
mov
push
pop
call
shl
inc
xor
aad
mov
mov
or
out
cdq
jno
bound
(bad)
or
data16
dec
xchg
retf
mov
out
and
jp
mov
test
cli
stos
adc
imul
or
jmp
enter
loop
cmp
cmc
div
xor
fs
test
and
push
sub
mov
pusha
enter
fdiv
xor
push
sti
aad
push
pop
xchg
pop
out
jnp
jae
xor
js
xchg
ss
add
std
and
loope
data16
inc
or
and
nop
jle
push
out
or
cmps
dec
dec
loope
popa
(bad)
inc
xchg
rcl
dec
push
mov
sahf
ds
scas
inc
add
mov
sub
imul
pop
movs
push
push
pop
sahf
imul
and
jno
daa
(bad)
(bad)
ficom
jns
mov
int3
out
or
pop
(bad)
in
push
pop
mov
xor
mov
dec
mov
gs
aam
mov
jns
test
jno
cwde
and
push
ret
add
xor
cdq
and
xchg
jp
icebp
lahf
lahf
inc
pop
imul
inc
ins
and
mov
add
pusha
(bad)
or
fsubr
out
addr16
pusha
lahf
jbe
xchg
lods
pop
and
push
pop
push
mov
mov
bound
stc
or
adc
adc
out
fst
lea
pop
das
in
jg
push
aad
xor
out
daa
jmp
inc
xor
xchg
jbe
add
pusha
test
sbb
retf
movs
or
(bad)
pop
mov
adc
mov
mov
push
test
sub
pop
jp
bound
mov
lock
add
pop
mov
sbb
fst
add
(bad)
gs
daa
pop
or
fadd
call
ins
inc
and
add
popa
test
mov
call
pop
fs
ss
pop
sbb
sbb
sbb
clc
dec
xor
sar
dec
(bad)
add
stos
test
pop
lods
adc
cmp
out
out
movs
mov
dec
push
add
shr
add
jne
xor
sti
ins
(bad)
fistp
test
xor
xor
fcmovnb
test
ret
fnstcw
or
(bad)
push
sahf
jp
test
repnz
xlat
add
addr16
inc
sbb
popa
daa
mov
stc
rol
les
loop
lods
cmp
adc
ds
cdq
cs
cmc
icebp
cdq
add
cmps
mov
(bad)
shr
pop
pop
push
jbe
out
das
sar
jmp
mov
mov
sub
out
dec
cmp
arpl
cdq
loopne
mov
mov
(bad)
mov
imul
push
test
inc
inc
hlt
adc
adc
push
in
or
mov
ds
add
inc
psubsb
jae
cli
or
jns
add
repnz
mov
call
inc
ja
inc
(bad)
cmps
xchg
dec
push
adc
pop
pop
scas
cdq
fist
gs
mov
xchg
out
or
stos
xor
pop
stc
into
xchg
js
push
add
(bad)
rol
jge
xor
mov
mov
call
xor
add
add
(bad)
dec
cmp
jge
cmp
pop
ins
sti
or
xor
dec
(bad)
xor
add
inc
mov
cli
jp
mov
popa
(bad)
in
and
jmp
ror
mov
clc
fwait
add
les
pop
xchg
test
loope
adc
mov
mov
cmc
xchg
ret
add
imul
aas
jp
inc
sbb
loope
in
in
lds
mov
or
stos
inc
sbb
mov
les
push
daa
xor
adc
aas
div
outs
jbe
lds
mov
and
or
lock
rcr
nop
jo
int
pusha
push
dec
outs
iret
cmp
call
lea
dec
inc
push
sbb
mov
dec
add
mov
sub
cmps
aam
iret
mov
rol
add
adc
sbb
je
cmp
dec
out
lea
or
mov
aam
imul
div
push
cmps
cmps
(bad)
mov
(bad)
cli
fbld
es
cmp
imul
loopne
loop
fistp
adc
fwait
xor
imul
add
(bad)
int
cli
std
or
push
xchg
out
push
enter
mov
push
shl
jo
xchg
sub
test
sub
ret
cmp
fist
stos
mov
rcl
out
pusha
dec
mov
push
pop
out
sti
movs
adc
(bad)
(bad)
ds
jmp
add
dec
sub
faddp
cmp
push
test
(bad)
shl
xchg
add
fdivr
frstpm(287
mov
mov
cmp
(bad)
adc
mov
test
int
sbb
aad
mov
sbb
shl
jns
pushf
dec
gs
shr
pop
pop
test
outs
mov
mov
ror
sub
dec
das
aam
push
dec
cmp
jo
mov
inc
int3
jo
cld
stos
push
(bad)
cmc
xchg
cmp
ins
fcmovnb
inc
das
mov
sbb
addr16
sti
pusha
mov
(bad)
jl
lahf
adc
ds
not
xor
mov
addr16
or
mov
shr
inc
mov
and
loop
lea
hlt
jge
mov
mov
stc
(bad)
lahf
fnstenv
add
nop
sbb
add
mov
sub
xchg
call
mov
jns
push
shl
sub
aad
test
sti
or
jnp
fsub
xor
adc
pop
mov
sub
xchg
sbb
js
adc
pop
fist
dec
ss
repnz
retf
push
js
jle
mov
xor
or
dec
mov
hlt
imul
xor
in
lods
xchg
mov
pop
cmps
outs
mov
jle
mov
xchg
sbb
ss
mov
out
fwait
cmps
lahf
sub
mov
jg
clc
repnz
stc
push
xchg
dec
popa
icebp
das
lock
rcl
sub
add
jl
mov
inc
and
xor
jnp
push
xchg
aam
aad
add
sbb
xchg
lahf
ja
mov
out
aad
mov
mov
or
or
in
vmwrite
push
adc
lahf
jae
add
dec
out
in
cwde
jmp
inc
out
icebp
aas
push
xor
loope
gs
aad
push
stos
outs
push
sbb
jb
loop
mov
jbe
pop
retf
icebp
adc
imul
aaa
(bad)
cmc
jg
cdq
jecxz
(bad)
rcl
mov
cmps
addr16
pop
mov
inc
or
loopne
mov
jmp
lods
cld
imul
xchg
fnstenv
es
lahf
mov
xor
and
mov
aad
in
jb
add
sub
inc
jnp
(bad)
mov
leave
xchg
in
lods
mov
cmp
hlt
add
int
stos
push
mov
inc
icebp
sbb
jl
jp
push
sub
in
les
mov
xor
dec
std
clc
leave
mov
jle
adc
ss
xchg
sar
test
and
fidiv
das
jns
and
and
sub
shr
je
sub
mov
lahf
pop
dec
fmul
push
or
(bad)
in
pusha
xchg
nop
sbb
cs
cld
(bad)
std
ins
imul
movs
jne
mov
mov
dec
push
mov
mov
adc
cdq
cmp
mov
push
(bad)
rcr
xor
mov
mov
rcr
xchg
xlat
fwait
pop
retf
jno
cld
mov
xchg
adc
dec
cs
pop
loope
ret
(bad)
retf
sub
fsub
bound
xchg
add
aam
mov
stc
movs
ror
fidiv
push
push
jb
(bad)
sti
and
push
in
or
jbe
sub
or
sbb
lds
mov
inc
sbb
js
mov
pop
xor
jp
and
and
mov
and
and
cmc
inc
std
loope
outs
daa
data16
cdq
out
jne
jo
sbb
cmp
cmp
hlt
mov
movs
add
int3
ror
push
add
jmp
jbe
les
adc
lahf
ins
sar
inc
int
sbb
xchg
gs
sub
scas
xor
inc
sub
stc
xlat
mov
ror
mov
dec
jo
mov
adc
fisub
ret
mov
mov
pop
mov
pop
add
shl
mov
iret
mov
cmps
push
loop
xchg
movs
in
mov
in
inc
sahf
inc
stc
and
fs
out
xor
bound
aam
ja
loope
pop
mov
or
cwde
ja
int
ret
or
jl
pusha
push
repz
pop
cmp
xchg
inc
bound
mov
daa
into
push
xor
mov
sahf
jb
xor
xchg
add
inc
mov
ret
ins
pop
sbb
outs
neg
xor
test
push
cs
mov
mov
push
aam
call
inc
push
dec
or
add
aam
pop
or
pop
push
sar
xor
test
in
js
jno
shl
xor
pushf
pop
add
(bad)
xchg
lahf
sub
pusha
and
mov
leave
test
xor
(bad)
xchg
movs
push
xchg
adc
xor
xchg
xchg
(bad)
and
adc
leave
jo
push
sahf
daa
add
xor
sbb
xchg
push
xchg
rol
jne
(bad)
sti
and
jae
jmp
mov
mov
pop
shr
aaa
cs
(bad)
mov
pusha
inc
add
jge
add
in
outs
jmp
gs
push
scas
out
dec
pop
jle
add
adc
test
fndisi(8087
lods
shr
and
ret
fs
(bad)
out
push
jno
shl
dec
xor
adc
pusha
dec
sbb
out
lods
test
ret
lods
enter
mov
add
sbb
movs
in
dec
push
dec
cmps
mov
xchg
jae
or
outs
cdq
pop
dec
scas
push
(bad)
shl
ins
fistp
ins
aaa
fwait
and
xchg
ja
cmp
add
ficomp
sahf
adc
pop
mov
adc
icebp
dec
inc
stc
(bad)
lock
aad
in
(bad)
and
xchg
imul
sti
cli
out
xchg
add
mov
pop
add
aaa
int3
mov
mov
(bad)
xor
xchg
mov
jp
xor
(bad)
push
jl
(bad)
fld
retf
cmp
pop
ret
and
push
mov
std
cmps
stos
ficom
jge
add
fcom
int3
add
jp
pop
popf
jmp
pop
dec
lods
dec
arpl
dec
cld
push
(bad)
lea
push
or
js
int3
mov
cmp
sub
outs
xchg
mov
mov
cmp
inc
fisubr
stc
imul
mov
or
jmp
mov
jmp
jnp
retf
ins
neg
call
push
mov
push
aaa
mov
retf
jmp
mov
mov
inc
test
jg
sub
pop
arpl
in
and
in
mov
imul
inc
sti
pop
sbb
mov
jb
add
fistp
int
push
add
and
lahf
mov
pop
jno
xor
fmul
rcr
rcr
inc
pop
fdivr
jg
mov
sub
cmp
sub
inc
repz
shl
rcr
repz
adc
inc
movs
or
adc
push
loope
jge
scas
aad
enter
cmp
arpl
sahf
inc
rcl
je
out
retf
jmp
aas
ss
(bad)
test
push
scas
and
icebp
xor
jne
loopne
das
mov
mov
sbb
push
pushf
adc
repnz
mov
adc
add
ja
jge
cdq
adc
xchg
imul
cdq
jmp
shl
cld
adc
(bad)
and
cmp
mov
sub
xor
rcl
out
sbb
repnz
xchg
jb
in
or
jae
mov
aaa
mov
sbb
mov
rol
mov
imul
jne
retf
push
push
cli
cmp
mov
out
pop
call
aam
in
mov
xchg
fbld
(bad)
jge
ficomp
ss
pop
hlt
xchg
das
or
mov
fwait
jmp
out
call
les
mov
mov
pop
add
fimul
imul
jge
mov
mov
dec
mov
or
xchg
(bad)
and
je
mov
inc
mov
cmp
out
das
xchg
push
call
test
in
in
cmps
xchg
in
les
add
rcl
outs
shr
fist
stc
push
mov
lock
ins
popf
jne
mov
ret
pop
cdq
(bad)
xchg
inc
and
dec
adc
test
jmp
out
iret
ss
cmp
fbld
sbb
rcl
cld
adc
leave
sub
repnz
add
test
mov
ins
pusha
mov
mov
or
stos
dec
xchg
pop
rcr
aad
es
(bad)
call
pusha
mov
ins
lock
dec
inc
(bad)
sbb
(bad)
xor
int3
cwde
add
ins
jge
inc
sub
jno
(bad)
adc
mov
rcr
xchg
jmp
inc
(bad)
dec
push
mov
push
mov
js
sub
jns
inc
test
test
in
repz
aaa
mov
cmp
mov
movs
xor
pusha
pusha
push
push
pop
xor
mov
ds
xor
adc
test
call
adc
inc
repz
rcr
(bad)
and
jbe
iret
dec
sti
xor
and
cld
es
pop
jle
cwd
int3
shl
xchg
push
test
sbb
fs
mov
es
lds
adc
inc
cwde
sbb
add
jo
test
pop
lods
add
adc
pop
int3
out
cld
inc
repnz
pop
mov
mov
push
sbb
dec
mov
mov
dec
ss
jne
mov
add
in
sbb
push
lock
dec
(bad)
das
pop
ds
fcomi
push
push
data16
sbb
push
pop
call
and
mov
sub
xor
inc
fisub
and
ds
pop
repnz
push
and
jg
rcr
inc
mov
repnz
fcomp
and
adc
(bad)
mov
shl
sbb
cmp
jno
call
fld
clc
test
add
shl
or
push
xor
pop
fimul
mov
add
dec
push
jo
jl
cmp
dec
mov
hlt
jnp
push
(bad)
daa
jge
ins
imul
call
mov
sar
or
cmc
hlt
sub
daa
shr
sub
int3
mov
sbb
jmp
mov
test
cdq
fisttp
adc
test
or
adc
or
outs
add
jne
inc
or
mov
mov
inc
jmp
outs
push
cmp
outs
in
outs
mov
movs
scas
xchg
xchg
lods
int
mov
sbb
rcl
test
mov
xor
(bad)
sub
mov
les
in
pusha
cmp
cmps
loop
dec
pop
stos
inc
ret
jbe
test
mov
lods
inc
packsswb
ret
mov
lods
lahf
pop
sub
sbb
sub
sub
pop
enter
mov
nop
xchg
pusha
xor
popf
lock
imul
popf
(bad)
mov
xor
arpl
jecxz
dec
je
jb
cmp
fild
or
mov
xor
lods
pushfw
ins
dec
dec
jp
int3
adc
mov
test
aam
sbb
test
sub
and
loope
pushf
out
adc
sbb
and
sub
or
dec
inc
and
sub
sti
jb
fimul
not
pop
push
es
and
mov
xor
cdq
mov
inc
jb
mov
cmps
sbb
mov
icebp
adc
jae
mov
fisubr
daa
leave
inc
sub
movs
push
movs
xchg
dec
jo
jmp
jne
and
or
inc
mov
retf
cs
aas
dec
jecxz
ins
shr
clc
adc
cli
jns
das
inc
addr16
sbb
repnz
jbe
cmp
sbb
jae
out
adc
jnp
sbb
or
cmps
or
mov
mov
mov
imul
mov
popf
dec
mov
dec
fstp
bnd
loop
xlat
aaa
adc
fwait
ror
clc
mov
adc
or
jns
stos
loopne
ret
jl
mov
push
icebp
aaa
sub
pushf
mov
xor
push
xchg
cmps
add
jae
xor
adc
mov
mov
jmp
jg
mov
add
or
rcr
mov
xchg
push
mov
das
mov
in
stos
repnz
cs
sbb
out
pop
xor
mov
inc
cli
sahf
(bad)
xor
adc
cs
cs
das
fs
adc
rcr
imul
arpl
js
int
in
cmp
and
pop
xchg
cdq
and
adc
into
sub
dec
ss
loop
sub
(bad)
push
leave
inc
mov
dec
fist
mov
mov
dec
add
push
mov
lahf
jle
test
into
les
mov
out
jp
loopne
and
xchg
pop
xchg
push
jns
or
adc
int3
inc
mov
icebp
mov
cs
jg
int3
adc
pop
lahf
ja
adc
add
repz
je
xchg
call
or
cmp
mov
push
mov
(bad)
popa
jecxz
repnz
fdivrp
lahf
ss
or
imul
xor
jmp
push
out
mov
push
pop
pop
lock
pop
shl
mov
mov
cwde
test
dec
xor
mov
mov
popf
jge
retf
pop
inc
in
xchg
ins
xor
cmp
lahf
sub
pop
pusha
sub
loope
sub
shl
sub
xchg
fstp
mov
jle
pop
lods
xor
push
jnp
add
addr16
push
ret
enter
adc
mov
mov
pop
aam
xor
in
repz
push
jmp
xchg
lock
adc
repnz
push
push
(bad)
mov
int
dec
clc
or
lock
loope
jnp
mov
add
xchg
or
inc
fmul
xchg
jge
inc
mov
movs
(bad)
sub
mov
cmps
push
add
int
add
jb
aas
scas
jg
call
adc
pop
daa
pusha
div
aaa
adc
push
leave
fld
mov
add
and
mov
mov
loop
jb
jle
shl
and
jne
mov
inc
jns
(bad)
ins
ja
cmps
cmp
dec
les
dec
cdq
dec
adc
test
out
or
sub
pop
ss
das
(bad)
push
dec
das
mov
push
mul
in
jge
loope
stos
add
add
sub
sbb
mov
inc
cmp
or
xchg
jmp
pusha
sub
mov
outs
xor
arpl
les
add
add
cmp
xor
fistp
mul
pop
or
and
in
aas
pusha
movs
(bad)
mov
jmp
aad
or
jns
les
sbb
cmp
cmp
into
sub
mov
retf
push
sub
js
int
psllq
jp
rcr
pop
test
loopne
xchg
jo
(bad)
and
cmp
push
rcr
shr
mov
pop
sub
mov
outs
push
add
mov
loope
iret
mul
fisttp
test
and
xor
stos
les
cmc
xchg
lods
shr
mov
loope
pop
fldenv
lds
loope
cs
vpmovsdw
pop
stos
jmp
inc
jb
inc
xchg
das
sti
ret
cmp
adc
enter
std
pushf
jns
dec
dec
aas
sub
mov
xor
pop
nop
inc
ficomp
leave
out
in
ret
mov
mov
lahf
jmp
stos
dec
add
or
iret
aad
sahf
loop
add
adc
sbb
cli
push
fsubp
call
icebp
push
(bad)
and
add
or
sbb
inc
mov
dec
mov
push
lds
std
xchg
cdq
and
call
cmp
add
xor
sbb
mov
jne
ret
or
test
add
push
mov
sbb
iret
push
mov
movs
sbb
fisub
in
or
mov
in
lds
loopne
mov
(bad)
iret
sbb
adc
ins
in
fst
out
cmp
mov
dec
sbb
adc
hlt
push
cmps
loope
fs
test
mov
xchg
(bad)
outs
gs
push
pop
mov
push
cdq
add
idiv
das
das
mov
jp
loopne
jg
lods
jb
(bad)
cld
movs
sbb
popf
int
imul
mov
mov
clc
mov
mov
jae
mov
cmc
sbb
daa
fucomi
mov
aad
xor
cs
mov
sub
sub
adc
inc
jp
and
jo
cs
retf
je
pop
adc
dec
lahf
ins
cli
mov
icebp
(bad)
hlt
cdq
dec
test
imul
dec
or
sbb
and
ss
jmp
(bad)
aas
and
shl
mov
(bad)
imul
sub
xor
sbb
repnz
ins
inc
sub
sahf
std
mov
ret
and
in
mov
pop
stos
mov
fs
xor
dec
ins
pop
sub
xor
add
xor
test
iret
cld
inc
add
xor
jle
inc
stos
jecxz
shr
stc
add
scas
xor
mov
loopne
repz
and
daa
push
mov
sub
in
mov
ja
or
not
inc
add
push
push
std
jl
xor
mov
and
add
add
in
jg
stc
pop
fidivr
and
sub
test
scas
test
aad
push
rol
shl
sbb
and
sbb
(bad)
mov
xor
iret
jbe
sub
cmp
ret
dec
loop
push
