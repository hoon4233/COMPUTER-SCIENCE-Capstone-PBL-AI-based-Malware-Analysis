xor
or
add
add
dec
add
add
add
add
mov
add
sbb
add
mov
sub
add
xor
dec
add
add
add
add
sub
and
add
add
and
add
sub
add
add
sub
and
sub
and
add
add
add
sub
sbb
sub
add
or
shr
add
add
sub
add
xor
add
add
add
add
adc
add
add
xchg
add
add
add
add
nop
add
add
popa
cmp
adc
add
lar
add
add
add
add
fiadd
add
mov
add
fiadd
add
int
add
and
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
es
or
cmp
lahf
cmp
mov
cmp
add
add
cmp
add
jle
add
add
xor
add
cmp
add
add
and
sbb
pop
popa
or
movlps
cmp
(bad)
(bad)
jle
add
add
add
add
pop
call
pop
xor
and
int3
add
pop
adc
sbb
jnp
add
cmp
(bad)
(bad)
call
mov
add
add
pop
sub
or
add
add
or
add
jle
add
add
add
add
push
adc
or
or
or
add
push
cmp
(bad)
(bad)
push
add
or
add
or
add
sbb
or
adc
add
sbb
or
pop
xchg
adc
adc
cmp
(bad)
(bad)
call
or
pop
adc
sub
pop
pop
adc
and
inc
add
sub
adc
pop
or
fstp
cmps
(bad)
(bad)
call
push
pop
and
or
adc
cmp
adc
imul
sub
adc
sbb
fdivr
(bad)
call
punpckldq
or
add
adc
xchg
adc
adc
pop
xor
and
adc
cmp
(bad)
call
or
add
sbb
adc
sbb
sub
adc
cmp
(bad)
(bad)
call
add
or
add
adc
add
sbb
or
pop
pop
adc
pop
xchg
popa
adc
jne
add
sbb
or
or
pop
adc
or
popa
shr
add
or
adc
and
and
add
pop
adc
cmp
std
(bad)
call
or
pop
adc
push
cmp
(bad)
(bad)
call
push
cmp
std
(bad)
call
or
pop
xor
sbb
push
cmp
std
(bad)
call
sub
adc
outs
add
add
or
add
add
add
pop
or
add
mov
xchg
and
add
pop
adc
cmp
jne
add
add
add
add
sbb
add
add
sbb
jle
add
add
xchg
add
xchg
popa
pop
and
sub
(bad)
std
(bad)
call
adc
imul
cmp
(bad)
call
push
cmp
mov
cmp
std
(bad)
dec
cmp
std
(bad)
dec
(bad)
std
(bad)
dec
cmp
std
(bad)
inc
adc
add
add
add
adc
add
add
bound
add
jle
add
add
pop
add
add
ins
cmp
add
inc
adc
add
scas
add
add
add
sbb
add
(bad)
add
add
add
add
add
std
add
add
add
add
add
and
add
fiadd
add
pop
add
add
add
add
add
add
add
add
add
rol
add
push
sbb
add
add
add
add
sub
and
add
pop
popa
cmp
add
add
cld
add
add
add
add
clc
add
add
stc
add
add
add
and
sbb
pop
popa
or
or
push
cmp
(bad)
(bad)
jle
add
add
add
add
pop
call
pop
inc
xchg
and
add
pop
adc
cmp
(bad)
call
(bad)
cmc
or
add
add
or
add
jle
add
add
add
add
push
adc
or
or
adc
push
sbb
jnp
sub
(bad)
push
add
or
add
sub
add
add
adc
adc
add
sbb
or
pop
xchg
adc
sub
push
cmp
(bad)
(bad)
call
or
pop
adc
push
pop
pop
pop
adc
and
inc
add
and
adc
pop
push
adc
cmp
pop
and
adc
add
add
pop
adc
cmp
sub
adc
pop
punpckldq
or
add
adc
xchg
adc
adc
pop
das
xchg
and
push
cmp
(bad)
call
or
add
sbb
adc
push
adc
cmp
(bad)
call
add
or
add
adc
add
sbb
or
pop
pop
adc
pop
xchg
popa
adc
jne
add
sbb
or
or
pop
adc
or
popa
shr
add
or
pop
or
(bad)
(bad)
call
or
pop
adc
push
adc
cmp
std
(bad)
call
or
pop
xor
add
add
pop
adc
cmp
std
(bad)
call
adc
and
add
pop
sub
adc
outs
add
add
or
add
add
add
pop
or
add
mov
mov
(bad)
dec
jne
add
add
adc
cmp
adc
call
call
clc
std
(bad)
inc
inc
(bad)
std
(bad)
dec
cmp
std
(bad)
dec
add
(bad)
dec
cmp
(bad)
(bad)
inc
add
xor
add
add
add
adc
add
add
cmp
add
add
cmp
add
sub
cmp
add
inc
or
add
add
add
stos
add
add
add
add
add
add
add
adc
add
adc
add
out
add
jae
add
xor
add
add
sub
rol
add
es
add
mov
cmp
add
add
std
add
add
or
and
add
in
add
add
xchg
cmp
add
add
out
add
add
inc
pop
push
popa
sbb
inc
add
add
adc
push
and
and
fild
add
add
call
pop
pop
pop
xchg
and
sub
adc
sbb
add
inc
mov
add
sbb
mov
add
outs
add
push
cmp
(bad)
(bad)
call
pop
and
and
add
pop
adc
inc
pop
pop
or
dec
or
add
xchg
add
or
pop
pop
xor
sbb
call
push
pop
adc
pop
adc
call
sub
pop
or
add
inc
je
add
sbb
pop
or
add
call
push
cmp
cmp
add
call
add
dec
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
call
add
inc
or
cmp
(bad)
inc
adc
add
js
add
add
add
jle
add
add
xor
add
jle
add
add
add
add
push
cmp
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
cmp
add
add
js
pop
cmp
and
add
pop
cmp
add
add
test
add
add
add
cmp
add
add
inc
xchg
push
cmp
xor
xlat
add
add
sub
(bad)
(bad)
cmp
add
add
pop
cmp
popa
inc
add
add
adc
add
adc
sbb
and
loop
add
add
call
push
pop
ja
and
sub
sbb
adc
and
and
adc
inc
mov
add
sub
add
or
sbb
add
push
(bad)
(bad)
inc
pop
pop
or
pop
or
add
pop
add
add
add
sbb
pop
xor
adc
pop
dec
xchg
and
add
pop
adc
call
sub
pop
sub
adc
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
call
push
cmp
add
inc
cmp
(bad)
(bad)
call
xor
add
add
add
add
add
das
add
add
add
add
sub
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
and
add
add
and
add
out
add
add
add
lea
add
add
loopne
add
cmp
add
add
add
pop
and
add
popf
cmp
add
add
popf
add
add
pop
push
cmp
add
add
cmp
(bad)
inc
je
add
sbb
and
add
popf
pop
je
add
sbb
and
add
add
add
pop
or
inc
je
add
sbb
and
add
popf
pop
jne
add
sbb
mov
add
popf
sbb
cmp
(bad)
(bad)
inc
je
add
sbb
add
add
push
and
adc
add
add
add
pop
or
inc
jne
add
sbb
and
sbb
add
add
add
pop
je
add
sbb
push
or
jmp
clc
add
add
and
add
add
add
add
add
lea
add
add
push
je
add
sbb
and
sbb
add
add
add
pop
or
inc
jne
add
sbb
add
add
sbb
push
and
add
dec
mov
add
cmp
(bad)
inc
je
add
sbb
and
add
add
pop
and
add
popf
pop
or
inc
je
add
sbb
and
adc
add
add
sbb
imul
pop
imul
or
inc
je
add
sbb
mov
add
popf
pop
adc
add
add
jne
add
sbb
sub
push
add
push
sub
add
retf
call
add
dec
dec
cmp
std
(bad)
jmp
add
add
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
call
add
and
(bad)
dec
inc
add
dec
add
push
pop
sub
adc
push
sub
jnp
add
sub
sub
in
sub
add
push
sub
sub
add
push
sub
add
adc
add
xchg
add
push
add
adc
and
ss
sub
es
add
add
add
sub
sub
and
add
add
sub
cmp
pop
sub
and
sub
es
add
add
inc
sub
inc
pop
add
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
inc
add
add
(bad)
(bad)
dec
add
add
enter
sub
sub
adc
add
sub
push
sub
push
sub
push
sub
add
sub
add
sub
add
or
sbb
add
or
sub
add
sub
sub
icebp
inc
sub
add
stc
sub
hlt
add
add
add
push
add
push
sub
sub
sub
add
cli
sub
cmc
sub
add
sub
add
sub
add
movntps
and
mov
pop
sub
sub
add
in
sub
add
sub
repnz
pop
sub
or
sub
sub
add
popf
add
add
add
add
lock
push
sub
add
sub
add
sub
add
push
sub
add
jns
add
and
add
add
add
sub
add
push
sub
add
add
or
add
inc
add
sub
add
lock
add
sub
cmc
add
sub
sub
add
cli
sub
add
or
cmc
adc
add
push
add
add
add
adc
add
add
adc
add
sub
adc
add
push
sub
add
outs
add
add
add
add
add
pop
add
add
add
add
add
outs
add
add
add
add
add
add
add
push
es
add
add
dec
xchg
push
sub
add
pop
cmp
add
add
movs
push
cmp
add
add
leave
add
add
xchg
cmp
add
add
retf
add
push
pop
cmp
add
add
add
add
or
add
sbb
add
jb
(bad)
call
add
inc
push
add
pop
sub
adc
pop
or
call
add
push
(bad)
(bad)
inc
mov
add
outs
or
add
or
or
sbb
js
(bad)
(bad)
cmp
(bad)
(bad)
inc
pop
pop
or
and
pop
or
adc
and
(bad)
dec
sbb
or
or
sub
adc
(bad)
call
repz
jne
add
add
adc
add
pop
adc
repnz
(bad)
call
add
call
add
jmp
add
call
add
das
(bad)
(bad)
dec
cmp
(bad)
(bad)
call
add
xor
(bad)
inc
cmp
(bad)
(bad)
inc
xor
(bad)
inc
cmp
(bad)
(bad)
inc
add
adc
add
dec
add
add
add
adc
sub
add
add
add
add
add
add
sbb
cmp
add
add
std
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
aas
add
add
cmp
add
add
cmp
add
add
cmp
add
add
int
add
popa
pop
pusha
pop
cmp
add
add
add
add
add
or
fwait
or
sub
pop
sub
adc
jp
and
add
pop
or
jle
(bad)
inc
mov
add
outs
or
add
sbb
push
pop
pop
or
pop
sub
sbb
pop
(bad)
(bad)
call
add
leave
add
add
and
out
or
cmp
(bad)
(bad)
cmp
(bad)
jmp
sbb
push
adc
inc
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sub
push
(bad)
(bad)
dec
call
add
clc
(bad)
(bad)
dec
(bad)
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
sub
(bad)
inc
cs
(bad)
inc
cmp
cmp
(bad)
(bad)
inc
add
adc
add
imul
add
add
adc
add
add
and
add
jle
add
add
and
add
sbb
add
and
add
inc
or
add
imul
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
scas
add
add
and
hlt
add
add
sbb
cmp
in
add
add
mov
in
add
add
out
add
add
and
jmp
add
add
adc
nop
adc
mov
sub
adc
pop
inc
xchg
adc
pop
inc
xchg
pop
adc
jno
(bad)
inc
mov
add
add
or
pop
pop
or
jb
and
add
or
test
add
pop
or
pop
pop
push
sub
adc
aas
(bad)
(bad)
call
push
pop
sbb
pop
sub
adc
pop
jge
and
add
and
(bad)
jmp
push
sub
adc
inc
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sub
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
xlat
(bad)
(bad)
call
add
aad
(bad)
dec
cmp
(bad)
(bad)
call
add
or
(bad)
dec
add
or
(bad)
dec
add
inc
cmp
(bad)
(bad)
inc
jle
or
or
cvtpi2ps
and
add
sub
sub
add
push
sub
sub
add
sub
jmp
add
add
shl
add
sub
sbb
and
or
cvtpi2ps
or
add
sub
sub
add
push
sub
sub
jmp
sub
pop
add
push
sub
add
or
and
sbb
add
or
sub
add
sub
sub
icebp
bound
add
sub
sub
sub
add
push
sub
sub
add
push
sub
add
add
adc
push
add
add
add
add
pop
sub
sub
adc
push
sub
add
add
sub
sub
in
sub
call
push
sub
add
push
add
sub
add
sub
sub
sub
cmc
add
push
sub
add
sub
sub
push
add
push
sub
add
pop
sub
or
sub
sub
sub
add
cli
sub
cmc
sub
add
mov
add
add
lock
add
sub
add
dec
sub
pop
gs
and
add
add
imul
add
cmc
jp
movntps
and
add
add
clc
add
add
pop
sub
sub
add
in
sub
add
sub
repnz
sub
sub
add
cli
sub
add
or
cmc
adc
add
jo
add
pop
add
adc
cmp
add
add
add
add
and
add
push
cmp
add
add
dec
cmp
or
add
rol
add
push
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
sub
add
es
jecxz
add
sub
add
add
fadd
add
sbb
add
movs
cmp
add
add
fiadd
add
popa
pop
adc
fadd
add
popa
inc
add
add
or
add
pop
cmp
add
add
jl
(bad)
call
add
pop
ret
pop
sub
adc
pop
or
add
fs
(bad)
inc
mov
add
sbb
mov
add
sbb
add
add
add
sbb
push
add
or
pop
or
add
cmp
pop
pop
sbb
or
push
add
cmp
(bad)
(bad)
dec
and
pop
sub
push
cmp
(bad)
call
add
cmp
add
pop
adc
or
(bad)
call
add
push
inc
add
pop
sub
sbb
(bad)
(bad)
inc
jne
add
add
sbb
(bad)
(bad)
call
add
call
add
fdivr
(bad)
call
add
push
(bad)
(bad)
dec
cmp
(bad)
(bad)
call
add
sbb
add
sbb
add
inc
cmp
(bad)
(bad)
call
add
daa
(bad)
(bad)
call
xor
add
add
or
add
jle
add
add
adc
sbb
adc
add
sub
add
add
add
add
add
xchg
add
les
add
retf
add
add
add
add
add
push
add
add
add
add
add
add
add
shr
add
push
es
add
mov
add
cmp
add
add
loope
add
xchg
and
into
add
and
add
int3
add
add
cwde
cmp
add
add
int
add
popa
pop
push
pop
push
popa
inc
add
add
adc
pop
and
and
adc
call
sub
adc
pop
and
cmp
(bad)
inc
mov
add
outs
sldt
or
push
sub
cmp
(bad)
call
cmp
(bad)
(bad)
inc
pop
pop
or
sub
add
or
popf
add
add
add
sbb
out
pop
or
adc
pop
pop
or
pop
adc
call
sub
pop
jne
add
add
push
adc
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
(bad)
call
push
cmp
add
inc
cs
(bad)
inc
cmp
adc
add
jl
add
or
add
jle
add
add
cmp
add
jle
add
add
add
add
dec
cmp
add
add
add
add
add
add
add
add
add
add
add
mov
add
ins
add
add
add
add
add
add
add
add
sub
add
sbb
cmp
add
add
sub
add
cmp
add
add
rol
add
xchg
push
cmp
add
add
cmps
sbb
add
call
sub
in
add
cmp
add
add
and
sub
push
popa
inc
add
add
pop
add
add
or
call
add
add
pop
sub
adc
adc
sub
and
lods
add
pop
or
inc
mov
add
outs
adc
add
or
add
or
pop
or
inc
pop
pop
or
and
(bad)
call
pop
sbb
adc
add
jmp
and
xchg
add
pop
or
call
sub
adc
imul
adc
jmp
(bad)
inc
je
add
sbb
adc
xchg
sahf
add
pop
or
call
add
sar
call
add
dec
cmp
(bad)
(bad)
dec
dec
cmp
(bad)
(bad)
call
add
add
(bad)
dec
inc
push
(bad)
(bad)
inc
cmp
pop
or
and
push
add
sub
jnp
add
sub
sub
add
push
sub
sub
add
push
sub
add
add
add
or
sub
cmc
add
hlt
add
add
xor
mov
add
push
add
adc
add
add
sub
adc
sbb
popa
cmp
add
sub
sbb
add
add
sub
fld
sbb
add
pop
and
(bad)
(bad)
jg
int3
add
add
xchg
add
add
push
sub
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
dec
add
add
pop
sbb
jle
add
add
sub
fidiv
sub
xchg
(bad)
(bad)
jmp
xor
add
cmp
xor
(bad)
(bad)
(bad)
jmp
add
push
sub
sub
movs
sub
add
push
sub
fiadd
sbb
push
sub
add
push
sub
add
add
adc
add
add
add
add
sbb
pop
add
add
or
add
sbb
sbb
sti
add
add
add
add
cmp
or
add
cmp
add
add
adc
add
cmp
sbb
inc
cmp
pop
add
add
or
add
cmp
add
add
pop
and
pop
sub
add
push
or
cmp
add
sub
add
push
je
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sbb
fcom
or
sub
push
adc
sldt
add
add
add
and
fst
sub
add
push
sub
add
push
movs
add
add
lea
add
add
sub
push
sub
xor
add
push
cmp
(bad)
(bad)
jmp
and
sbb
xor
add
cmp
sbb
scas
or
mov
cmp
push
cmp
(bad)
jmp
pop
sub
add
push
or
add
push
cmp
(bad)
(bad)
jmp
jb
add
cmp
(bad)
(bad)
push
add
or
icebp
(bad)
(bad)
dec
cmp
(bad)
(bad)
jmp
xor
jmp
(bad)
jmp
xor
add
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
push
lea
fiadd
or
add
add
add
push
add
add
add
or
add
add
add
or
add
sub
sub
sub
add
add
sub
add
movntps
and
mov
add
sub
sub
sub
add
in
sub
add
sub
repnz
pop
sub
or
sub
sub
add
cwde
add
add
add
add
lock
add
push
sub
add
push
sub
sub
sub
add
imul
or
add
sub
add
add
sub
sub
das
add
push
sub
add
movntps
and
aad
add
sub
sub
sub
add
in
sub
add
sub
repnz
movntps
and
add
add
out
add
sub
sub
sub
add
in
sub
add
sub
repnz
sub
sub
add
cli
sub
add
push
sub
adc
add
push
add
add
add
jle
add
add
or
sbb
or
add
sub
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
cmp
add
es
or
int
add
sub
add
cmp
add
add
push
xchg
and
add
and
sub
cmp
add
add
xchg
cmp
add
add
rol
add
pop
push
popa
inc
add
add
adc
add
adc
pop
and
pop
adc
call
or
adc
inc
sub
add
or
push
sub
cmp
(bad)
inc
pop
pop
or
sub
add
or
pop
or
adc
add
or
pop
or
adc
pop
pop
js
and
(bad)
add
pop
adc
call
push
and
and
sub
pop
sub
adc
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
(bad)
call
push
cmp
(bad)
call
add
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
inc
adc
or
jns
add
or
add
add
xor
add
sbb
xor
add
cmp
or
add
je
add
pop
add
add
add
add
add
add
add
leave
add
add
add
sub
add
leave
add
add
cmp
add
add
and
(bad)
sbb
add
cmp
add
add
inc
xchg
and
add
pop
cmp
add
add
movs
cmp
add
add
test
daa
pop
push
cmp
out
add
add
add
add
or
add
sbb
(bad)
(bad)
call
sub
push
adc
outs
(bad)
(bad)
inc
mov
add
add
add
add
add
add
or
pop
pop
or
lea
add
or
mov
add
or
xor
add
pop
or
jle
add
add
outs
jle
add
add
outs
xchg
jle
add
add
popf
add
add
pop
adc
push
or
adc
adc
(bad)
call
or
cmc
push
adc
add
sbb
call
pop
adc
inc
add
add
add
add
add
add
add
add
add
add
add
cmp
sub
das
(bad)
(bad)
call
add
call
add
(bad)
(bad)
(bad)
call
add
(bad)
(bad)
(bad)
dec
cmp
(bad)
(bad)
call
add
call
add
add
(bad)
dec
push
cmp
(bad)
dec
add
inc
cmp
(bad)
(bad)
inc
add
adc
add
fiadd
add
push
add
adc
xchg
add
add
xchg
add
add
cmp
add
pop
cmp
add
sub
cmp
mov
add
cmp
cmp
sbb
adc
mov
add
cmp
add
add
aaa
inc
pop
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
push
add
add
sub
sbb
sub
add
push
jae
add
or
sbb
leave
add
pop
push
sub
add
sbb
dec
add
push
push
cmp
jmp
sub
add
push
cmp
jmp
dec
add
push
cmp
(bad)
inc
cmp
(bad)
jmp
inc
add
push
cmp
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
jmp
inc
add
push
cmp
(bad)
dec
imul
xchg
add
sub
mov
pop
lea
add
repz
add
add
add
add
adc
add
add
adc
add
sbb
das
cmp
add
add
and
adc
add
cmp
add
add
push
sub
cmp
add
add
adc
add
cmp
add
add
sub
push
add
add
add
add
add
add
add
xor
add
mov
add
add
(bad)
call
add
add
add
add
or
rol
add
sub
pop
cmp
add
es
add
add
dec
add
push
cmp
(bad)
call
and
push
add
mov
(bad)
call
or
xchg
push
sub
xor
or
push
es
or
dec
push
pop
inc
push
pop
sub
add
es
imul
inc
adc
push
es
or
sub
cmp
(bad)
inc
push
cmp
pop
sub
pop
sub
add
sub
lods
sbb
cmp
(bad)
dec
add
push
sub
sub
add
cmp
(bad)
(bad)
jmp
sub
or
jecxz
(bad)
dec
or
jmp
or
jmp
dec
add
push
cmp
(bad)
(bad)
dec
add
jmp
dec
add
push
cmp
(bad)
(bad)
dec
or
out
(bad)
jmp
dec
add
push
cmp
(bad)
dec
add
inc
add
pop
and
add
add
add
add
add
add
push
add
add
or
and
or
sub
add
sub
sub
add
push
sub
push
add
dec
add
push
sub
sub
sub
add
cli
sub
cmc
sub
sub
add
cli
sub
add
push
sub
jp
or
or
or
or
or
add
repz
repnz
add
push
sub
add
pop
sub
or
sub
mov
adc
adc
adc
jmp
add
sub
sub
sub
add
jmp
sub
sub
add
sub
out
sub
sub
add
cli
sub
add
sub
sub
sub
add
cli
sub
add
or
cmc
adc
add
pop
add
add
add
adc
add
add
adc
add
jle
add
add
sgdtd
add
cmp
add
add
adc
add
inc
or
add
ins
add
add
add
add
add
add
add
add
sbb
add
add
add
cmp
add
add
out
add
pop
aaa
xchg
and
xchg
add
pop
push
cmp
add
add
sub
add
fild
add
sbb
jmp
push
popa
inc
add
add
adc
push
and
cmc
sbb
add
add
cmp
call
sub
sbb
repz
(bad)
(bad)
call
sub
add
or
pop
sub
pop
pop
or
mov
add
or
and
(bad)
(bad)
dec
and
cmp
(bad)
inc
or
or
pop
sub
jle
and
add
pop
adc
sub
(bad)
call
imul
sbb
or
or
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
push
sub
dec
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
jmp
add
out
(bad)
dec
cmp
(bad)
call
add
call
add
sbb
(bad)
inc
sbb
(bad)
inc
cmp
(bad)
(bad)
call
xor
add
add
sldt
adc
add
add
cmp
add
add
jle
add
add
or
add
sub
or
add
sbb
fiadd
add
inc
or
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
push
sub
add
es
or
les
add
sub
add
cmp
add
add
popf
add
add
pop
cmp
lea
mov
mov
pop
cmp
add
add
adc
add
adc
pop
xor
pop
adc
(bad)
(bad)
(bad)
call
sub
sbb
repz
or
cmp
(bad)
inc
add
push
add
or
adc
add
pop
adc
xor
(bad)
inc
pop
and
add
or
sbb
(bad)
(bad)
dec
sbb
or
adc
adc
(bad)
call
sub
pop
or
repnz
sub
or
add
(bad)
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
out
(bad)
(bad)
call
add
xor
cmp
(bad)
(bad)
call
add
call
add
aas
(bad)
(bad)
inc
inc
(bad)
(bad)
inc
inc
add
xor
add
add
adc
and
sub
sbb
or
push
add
add
push
sub
sub
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
or
sbb
ss
sub
push
sub
das
sbb
xor
sub
or
and
mov
add
push
cmp
push
add
push
cmp
pop
add
push
sub
sub
add
sub
sub
add
sub
add
leave
add
add
add
or
jle
add
add
or
sub
pop
add
push
sub
sub
add
sub
add
add
jle
add
add
sar
add
add
or
and
or
cvtpi2ps
or
add
sub
sub
add
push
sub
sub
add
sub
add
mov
sub
sub
sub
sub
add
repnz
push
sub
sub
add
sub
add
out
pop
add
push
sub
sub
add
sub
adc
add
sub
add
adc
push
sub
sub
adc
push
sub
sub
sub
jae
add
or
jmp
push
sub
sub
add
sub
push
sub
add
add
add
sub
add
or
hlt
add
repz
add
sub
add
add
xor
add
add
add
add
sub
sub
or
add
add
add
shr
add
add
and
or
daa
sub
and
xor
sub
popa
add
push
sub
sub
add
sub
sub
add
sub
sub
add
push
sub
sub
add
sub
sub
push
sub
sub
add
sub
int3
outs
sbb
add
sub
add
add
add
add
push
sub
sub
sub
out
add
push
sub
add
or
add
xor
add
add
lock
add
push
sub
add
or
sub
or
sub
sub
add
xor
add
sub
add
lock
add
sub
cmc
add
push
sub
sub
sub
add
imul
add
push
sub
add
add
sub
sub
add
cli
sub
add
push
sub
sub
sub
add
cli
sub
add
push
sub
push
sub
sub
sub
add
imul
add
push
sub
add
add
sub
sub
add
cli
sub
add
sub
jp
movntps
and
pop
add
sub
sub
sub
add
in
sub
add
sub
add
sub
sub
aad
add
sub
add
sub
sub
sbb
clc
add
sub
sub
jno
add
sub
add
sub
sub
dec
add
push
sub
add
sub
sub
add
cli
sub
add
or
cmc
adc
add
jle
add
adc
add
jle
add
add
cmp
add
jle
add
add
add
add
dec
cmp
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
data16
push
sbb
cld
add
add
mov
add
pop
cmp
add
add
stos
cmp
add
add
cld
add
add
add
pop
pop
sbb
cmp
add
add
add
add
adc
sub
adc
inc
out
add
add
outs
(bad)
(bad)
call
add
push
rol
pop
sub
adc
adc
and
add
add
and
add
inc
(bad)
(bad)
jmp
sbb
add
or
adc
aaa
(bad)
(bad)
inc
pop
pop
or
cmp
(bad)
inc
and
pop
or
push
pop
dec
xchg
and
adc
adc
(bad)
dec
sbb
adc
add
sub
add
cld
(bad)
(bad)
call
push
pop
bound
pop
sub
pop
je
add
add
adc
add
pop
adc
sar
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
ret
(bad)
(bad)
call
add
std
(bad)
(bad)
dec
cmp
(bad)
(bad)
call
add
(bad)
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
add
xor
add
add
adc
add
add
inc
add
add
add
add
inc
add
add
push
cmp
add
inc
or
add
fwait
add
add
add
add
add
add
add
add
add
add
add
cli
add
add
add
fwait
add
add
add
add
add
push
cmp
add
pop
push
xchg
and
add
pop
cmp
scas
push
cmp
add
cmp
mov
and
pop
sub
cmp
add
add
mov
clc
add
add
add
pop
xor
popa
inc
add
add
sbb
add
sbb
adc
pop
xor
and
int3
add
pop
sbb
adc
call
sub
push
or
cmp
(bad)
call
sub
cmp
(bad)
inc
mov
add
add
add
add
sub
add
or
push
adc
inc
pop
pop
or
xchg
add
add
or
pop
or
sbb
pop
and
and
cmp
call
add
call
push
pop
jl
and
add
pop
sub
pop
jle
add
add
push
jle
add
add
push
xchg
jle
add
add
sub
sub
adc
call
push
cmp
pop
cmp
add
call
push
cmp
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
inc
inc
adc
add
inc
add
add
add
adc
add
add
inc
add
jle
add
add
sti
add
add
dec
cmp
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
scas
add
add
add
add
add
shr
add
sbb
rol
add
mov
add
sbb
mov
stos
cmp
mov
pop
pop
pop
push
sub
add
popa
inc
add
add
adc
add
adc
adc
pop
or
call
sub
adc
pop
or
inc
add
sbb
add
or
add
add
icebp
add
pop
or
inc
pop
pop
or
add
sbb
sub
or
call
sub
repz
inc
jne
add
add
sbb
push
(bad)
(bad)
call
add
sti
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
dec
dec
cmp
(bad)
dec
inc
cmp
cmp
(bad)
inc
cmp
(bad)
call
xor
add
add
adc
add
jle
add
add
xor
add
jle
add
add
xor
add
push
cmp
add
add
dec
cmp
add
add
add
add
add
add
add
loopne
add
add
add
push
add
add
add
xchg
add
add
add
add
add
mov
add
push
add
add
imul
cmp
add
add
mov
add
add
push
cmp
add
add
test
out
add
add
out
add
add
cmp
jl
cmp
add
add
add
add
or
add
pop
adc
sub
(bad)
call
add
add
movs
add
pop
sub
adc
adc
push
add
pop
adc
push
(bad)
(bad)
inc
mov
add
add
sbb
adc
pop
xchg
and
add
pop
adc
das
(bad)
(bad)
inc
pop
pop
push
sub
pop
or
or
push
sub
add
adc
(bad)
dec
sbb
or
adc
pop
(bad)
(bad)
call
sub
pop
jle
add
add
cs
add
add
cs
jle
add
add
jl
pop
pop
pop
pop
sahf
sub
adc
fdivrp
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
into
(bad)
(bad)
call
add
or
(bad)
dec
cmp
(bad)
call
add
or
(bad)
inc
or
(bad)
inc
inc
cmp
(bad)
inc
add
adc
add
pop
add
add
add
jle
add
add
sbb
add
sub
sbb
add
inc
or
add
iret
add
add
add
add
add
add
add
rol
add
mov
add
add
add
add
add
test
add
push
cmp
push
add
sbb
fiadd
add
sub
add
add
rol
add
cmp
add
add
in
add
xchg
sbb
stos
add
pop
cmp
add
add
mov
lds
add
cmp
add
add
adc
ret
add
add
add
add
or
add
pop
or
call
add
mov
add
xchg
and
add
pop
sub
pop
pop
or
add
sub
pop
or
inc
mov
add
outs
push
add
or
push
and
sub
(bad)
inc
pop
pop
or
and
pop
sub
sbb
call
add
push
xchg
and
add
pop
sub
adc
dec
xchg
and
aam
add
cmp
(bad)
(bad)
inc
sub
or
(bad)
(bad)
cmp
(bad)
(bad)
call
add
fdivrp
(bad)
dec
cmp
(bad)
(bad)
dec
dec
cmp
(bad)
(bad)
call
add
es
(bad)
dec
inc
xor
cmp
(bad)
inc
cmp
(bad)
(bad)
inc
add
adc
add
stos
add
add
sbb
add
add
add
add
popa
add
add
pop
cmp
add
push
cmp
or
add
add
add
mov
add
mov
add
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
shr
add
cmp
add
add
jge
and
cmp
add
add
movs
sbb
push
cmp
add
add
sbb
add
and
and
aad
add
push
add
add
cmp
add
add
pop
jbe
push
popa
inc
add
add
sbb
add
adc
pop
js
push
sub
add
and
add
push
cmp
(bad)
call
sub
adc
(bad)
adc
or
adc
pop
xor
and
inc
add
pop
adc
cmp
(bad)
(bad)
inc
mov
add
outs
pop
add
or
adc
pop
adc
fwait
add
pop
adc
cmp
(bad)
(bad)
call
sub
push
pop
pop
or
fiadd
add
adc
fadd
add
or
add
adc
or
xor
add
add
pop
adc
cmp
(bad)
(bad)
call
or
inc
xchg
and
lea
add
in
adc
and
and
xor
add
push
cmp
sub
cmp
(bad)
call
(bad)
(bad)
call
pop
cmp
or
cwde
(bad)
(bad)
call
push
cmp
pop
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
call
or
loope
(bad)
call
push
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
adc
add
je
add
push
add
adc
add
add
das
add
add
add
add
sub
add
sub
cmp
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
enter
enter
daa
add
add
add
add
add
add
shr
push
es
or
add
push
cmp
push
cmp
add
add
push
cmp
add
add
sub
add
loope
add
popa
pop
cmp
fiadd
add
popa
inc
add
add
or
add
sbb
add
call
push
pop
dec
xchg
and
sub
adc
pop
or
add
jmp
and
add
or
pop
jg
and
adc
inc
adc
sub
pop
or
cwde
add
add
add
jp
add
or
sbb
xor
sbb
add
call
sub
adc
and
and
cmp
add
add
inc
je
add
add
adc
and
and
push
cmp
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
(bad)
call
add
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
call
xor
pop
add
add
add
adc
sub
add
adc
add
sub
adc
add
inc
or
add
mov
add
jo
add
and
add
mov
add
test
add
pop
add
add
add
add
add
int
add
add
add
and
add
shr
add
es
fiadd
add
sub
cmp
add
add
or
aad
add
sub
add
(bad)
add
add
sub
pop
cmp
rol
add
popa
inc
add
add
sbb
add
cmp
add
add
test
add
xchg
and
push
add
and
push
cmp
(bad)
call
sub
adc
(bad)
adc
or
sbb
(bad)
(bad)
inc
mov
add
outs
and
add
or
(bad)
(bad)
call
sub
or
push
adc
inc
or
add
adc
pop
pop
xor
adc
pop
js
and
adc
cmp
or
cmc
adc
pop
xor
push
cmp
(bad)
jmp
and
pop
adc
cmp
(bad)
(bad)
inc
sub
or
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
dec
cmp
(bad)
call
push
cmp
(bad)
inc
and
cmp
(bad)
inc
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
xor
add
add
adc
add
add
cmp
add
jle
add
add
cmp
add
sub
cmp
add
inc
or
add
jnp
add
in
add
add
add
add
add
push
add
add
add
push
add
add
add
jmp
add
add
add
add
add
outs
add
push
es
add
add
mov
add
xchg
and
cmp
add
add
test
cmp
add
add
or
repz
add
sub
lock
add
icebp
add
add
inc
popa
pop
jbe
push
popa
inc
add
add
or
add
sbb
add
call
sub
push
and
and
cmp
(bad)
inc
mov
add
outs
and
add
or
(bad)
(bad)
inc
pop
pop
or
mov
add
add
out
add
or
sbb
pop
push
sub
add
(bad)
add
add
add
add
(bad)
add
add
pop
xor
pop
sahf
xor
pop
or
add
call
pop
pop
inc
xchg
and
ret
add
pop
sub
adc
and
and
add
pop
adc
inc
sub
or
add
call
push
cmp
pop
cmp
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
call
add
inc
cmp
(bad)
(bad)
inc
or
(bad)
inc
add
adc
add
xchg
add
add
add
adc
add
add
push
add
add
add
add
dec
add
add
push
cmp
add
inc
or
add
popa
add
add
add
add
add
add
add
clc
add
add
add
add
add
fadd
add
popa
add
add
add
add
add
add
outs
add
push
cmp
add
pop
adc
and
add
pop
cmp
stos
push
cmp
add
pop
or
or
add
sub
cmp
add
push
cmp
add
popa
pop
sbb
popa
inc
add
add
adc
push
pop
pop
xchg
push
sub
add
pop
adc
call
sub
adc
sbb
add
pop
(bad)
(bad)
inc
mov
add
add
and
add
or
sub
adc
push
sub
add
pop
adc
inc
pop
pop
or
sub
and
add
add
add
int3
add
add
or
pop
pop
xor
add
add
pop
adc
call
pop
pop
or
xchg
add
pop
sub
adc
and
and
stos
add
pop
adc
inc
jne
add
add
adc
pop
push
add
pop
adc
call
push
cmp
pop
cmp
cmp
cmp
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
call
add
inc
out
(bad)
(bad)
inc
inc
add
pop
add
push
add
sub
jnp
add
sub
sub
add
sub
sub
add
sub
add
add
xor
dec
add
add
add
add
and
add
add
(bad)
add
add
mov
and
and
mov
xchg
push
sub
push
and
add
add
pop
sbb
sub
sub
fld
sub
add
xlat
add
(bad)
sub
add
sub
add
sub
add
sub
add
sub
add
sbb
stos
add
push
add
sub
add
sub
add
jbe
sub
add
add
and
add
sub
sub
push
add
sub
hlt
add
push
add
jl
add
sub
and
add
add
add
add
pop
add
add
adc
and
(bad)
loope
sub
sub
sub
or
add
sub
add
sub
sub
add
push
sub
sub
add
sub
sub
add
sub
add
movntps
and
add
and
add
sub
sub
sub
add
in
sub
add
sub
repnz
pop
sub
or
sub
sub
add
test
add
sub
add
lock
add
push
sub
add
push
and
add
add
add
sub
add
push
sub
add
add
sub
sub
add
cli
sub
add
or
cmc
sub
add
sub
add
sub
add
xor
push
add
add
add
add
sub
push
sub
sub
sub
sub
add
sub
and
add
cli
add
add
and
and
sub
sub
sub
add
fisubr
add
add
fldcw
add
push
sub
sub
add
sub
fldcw
pop
add
push
sub
add
xlat
add
push
add
test
add
sub
or
and
push
or
add
sub
add
sub
jp
movntps
and
add
add
mov
pop
sub
sub
add
in
sub
add
sub
repnz
sub
sub
fld
add
sub
add
pop
sub
or
sub
sub
sub
add
cli
sub
add
or
cmc
or
add
sldt
add
add
add
add
or
scas
add
push
sub
fiadd
sub
add
add
add
add
or
add
add
and
add
add
add
sar
or
and
(bad)
loope
sub
sub
or
add
sub
sub
add
push
sub
mov
movntps
sub
sub
sub
adc
sub
sub
push
add
in
add
jmp
sub
add
sub
sub
loop
add
call
add
or
add
sub
sub
sub
sub
in
add
out
sub
jmp
or
add
sub
pop
sub
or
sub
jp
or
or
or
or
or
add
repz
repnz
add
push
sub
add
movntps
and
add
add
adc
add
sub
sub
sub
add
in
sub
add
sub
repnz
sub
sub
add
cli
sub
add
push
sub
adc
add
inc
add
add
add
adc
sub
add
std
add
add
dec
cmp
add
add
add
add
add
and
add
mov
add
adc
add
add
add
add
and
add
pop
add
add
add
add
nop
add
push
sbb
add
mov
mov
cmp
mov
movs
cmp
add
add
xor
mov
sbb
add
add
add
add
add
jns
(bad)
call
push
pop
pop
xchg
and
xor
add
jmp
or
adc
inc
mov
add
outs
and
add
or
push
and
and
adc
inc
pop
pop
or
ss
sub
add
or
push
pop
pop
xor
sbb
add
call
sub
push
adc
inc
sub
and
cmp
push
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
(bad)
call
add
inc
ds
(bad)
inc
cmp
cmp
(bad)
call
add
inc
add
adc
add
je
add
sbb
add
jle
add
add
cmp
add
add
jle
add
add
sub
add
sub
sub
add
inc
or
add
pop
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
cmp
xchg
add
push
es
or
jmp
mov
cmp
add
add
or
out
add
sub
add
call
cmp
pop
sbb
fild
add
popa
push
sub
add
adc
add
adc
pop
push
xchg
and
add
pop
adc
call
sub
adc
or
pop
pop
or
pop
adc
inc
sub
adc
pop
inc
xchg
and
add
pop
adc
inc
pop
pop
or
inc
or
xor
add
or
sbb
pop
xor
sbb
add
call
push
and
and
js
add
sub
sub
adc
and
add
add
pop
adc
inc
sub
or
call
add
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
(bad)
call
add
inc
adc
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
call
xor
add
add
sbb
add
push
sub
add
sti
add
add
dec
cmp
add
add
add
add
add
add
add
ins
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
xchg
add
push
es
cmp
add
add
mov
add
adc
add
add
add
add
pop
cmp
push
sub
cmp
pop
inc
pop
cmp
inc
add
add
or
add
pop
or
add
call
sub
adc
(bad)
adc
or
push
adc
inc
mov
add
outs
add
or
push
adc
inc
pop
pop
or
mov
mov
pop
sbb
sub
or
add
call
cmp
(bad)
call
or
out
sbb
(bad)
(bad)
inc
sub
(bad)
(bad)
call
push
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
call
add
inc
dec
(bad)
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
inc
adc
add
ins
add
add
add
adc
cmp
add
add
and
add
jle
add
add
push
add
add
cmp
add
add
and
add
inc
or
add
arpl
add
scas
add
add
add
add
add
adc
add
arpl
add
popf
add
add
add
arpl
add
dec
add
add
push
cmp
add
add
sbb
repz
add
mov
add
hlt
add
add
dec
pop
cmp
add
add
add
add
adc
add
adc
add
pop
adc
(bad)
adc
and
and
sub
push
adc
ja
(bad)
inc
mov
add
add
daa
add
or
pop
pop
or
ret
add
add
and
add
add
sbb
or
pop
pop
xor
sbb
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
call
push
pop
jne
and
add
pop
sub
push
sub
push
cmp
and
(bad)
jmp
sbb
or
or
add
add
add
add
cmp
call
xchg
add
push
sub
xor
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
(bad)
(bad)
call
add
fdivr
(bad)
dec
cmp
(bad)
(bad)
call
add
push
(bad)
(bad)
inc
pop
(bad)
(bad)
inc
inc
cmp
(bad)
(bad)
push
add
sub
arpl
add
sub
sub
out
sub
jmp
push
sub
add
stc
jae
add
or
cmc
add
add
push
sub
sub
and
add
add
jo
add
sub
sub
sub
add
out
sahf
add
push
sub
add
loop
add
add
sub
add
sub
jle
add
add
pop
and
add
add
mov
adc
add
add
adc
add
loop
lahf
add
push
sub
sub
add
sub
out
mov
out
add
add
or
add
sub
sbb
sbb
sbb
push
or
add
sub
add
sub
add
sub
sub
xchg
add
sub
add
movntps
and
add
dec
add
add
pop
sub
sub
add
in
sub
add
sub
repnz
pop
sub
or
sub
mov
adc
adc
adc
add
add
and
add
add
or
add
in
add
jmp
sub
sub
add
sub
out
jp
movntps
and
add
add
lock
add
pop
sub
sub
add
in
sub
add
sub
repnz
movntps
and
add
add
and
add
sub
sub
sub
add
in
sub
add
sub
repnz
add
add
add
xor
add
sub
sbb
mov
or
or
add
sub
sub
add
push
sub
add
add
adc
call
mov
add
sub
sub
sub
add
jmp
adc
add
sub
add
dec
sub
pop
xchg
sub
push
bound
add
imul
test
repz
add
inc
add
add
add
adc
sub
sbb
xchg
sub
sub
push
sub
pop
sub
sub
popa
shr
and
push
sub
sub
sub
add
fiadd
sub
add
fild
fiadd
add
push
sub
or
fldenv
das
add
add
add
sub
sub
stos
add
push
sub
sub
add
push
add
lods
add
push
sub
pop
sub
or
sub
sub
add
mov
add
add
lock
add
push
sub
add
sub
sub
sub
sub
sub
sub
add
cmc
add
hlt
sub
add
push
sub
add
sub
add
sub
clc
add
sub
and
add
and
add
sub
sub
sub
add
jmp
sub
sub
add
sub
out
sub
sub
add
cli
sub
add
or
cmc
or
add
sbb
add
add
add
sub
or
adc
mov
add
sub
sub
fiadd
sub
adc
add
add
add
add
add
xor
dec
add
add
add
add
sbb
sbb
sub
sub
sub
sbb
and
add
push
and
sub
sub
fadd
sub
sub
(bad)
sub
rol
sub
sub
add
sub
sub
iret
add
rol
add
inc
jle
add
add
add
sub
mov
test
sub
adc
or
add
add
and
fst
sub
sub
sub
push
add
add
sub
add
push
sub
sub
sub
in
add
sub
sub
push
add
push
sub
add
sub
sub
add
cli
sub
add
sub
or
sub
or
sub
sub
add
xor
add
sub
add
lock
add
sub
add
sub
add
mov
add
add
add
lock
add
sub
add
jp
movntps
and
add
add
rol
add
sub
sub
sub
add
in
sub
add
sub
repnz
movntps
and
add
add
mov
add
sub
sub
sub
add
in
sub
add
sub
repnz
or
add
dec
add
add
add
add
lock
cmc
add
sub
sub
add
cli
sub
add
or
cmc
jp
movntps
and
add
add
fiadd
add
sub
sub
sub
add
in
sub
add
sub
repnz
pop
push
sub
add
sub
ret
add
push
sub
add
repz
add
push
sub
add
add
add
or
sub
add
push
sub
sub
add
push
sub
sbb
add
add
add
add
adc
cmp
sub
sub
and
sbb
add
adc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
dec
add
add
es
sub
sbb
fsubr
push
fisub
sub
add
push
sub
push
sub
sub
push
sub
push
sub
fiadd
sub
add
add
add
add
add
popa
popa
add
add
add
int
add
sub
mov
out
add
sub
sub
data16
push
sub
add
add
movntps
and
(bad)
add
add
pop
sub
sub
add
in
sub
add
sub
repnz
pop
sub
or
sub
sub
add
sub
add
push
sub
add
or
add
jmp
add
add
lock
add
sub
cmc
add
sub
add
sub
add
push
sub
add
sub
sub
mov
add
sub
add
sub
sub
rol
push
sub
add
sub
sub
popa
add
push
sub
add
sub
sub
add
cli
sub
add
or
cmc
adc
push
add
add
adc
add
add
outs
add
add
add
add
imul
add
dec
cmp
add
sbb
inc
or
add
adc
add
push
add
add
add
adc
add
mov
add
add
add
retf
add
add
add
add
add
add
and
add
ror
add
push
es
and
add
add
mov
cmp
add
add
or
sub
add
sub
add
sub
add
popa
pop
imul
add
add
add
add
or
add
or
add
push
adc
call
sub
adc
and
and
cmp
add
out
or
push
and
and
les
add
add
inc
mov
add
add
sub
add
or
or
add
inc
mov
add
add
sub
add
or
sub
add
call
cmp
(bad)
(bad)
call
sub
push
pop
cmp
(bad)
call
pop
or
cmp
add
or
xchg
add
or
add
sbb
pop
xor
adc
pop
inc
xchg
and
adc
call
or
cmc
pop
je
add
add
add
add
jp
sbb
jp
jle
add
add
xchg
add
xchg
popa
and
sahf
sub
or
add
(bad)
(bad)
cmp
push
cmp
pop
cmp
add
call
add
dec
cmp
(bad)
(bad)
call
add
inc
inc
sar
(bad)
inc
cmp
(bad)
(bad)
inc
adc
add
add
add
jle
add
add
cmp
sbb
cmp
add
sub
cmp
add
inc
or
add
jecxz
add
mov
add
sbb
add
cmp
add
fld
add
xchg
add
add
add
add
add
add
add
add
add
add
add
ror
add
push
cmp
add
add
das
xchg
and
cmp
add
add
stos
push
cmp
add
add
clc
add
add
ins
xchg
and
in
add
and
add
jmp
add
sub
add
sub
add
add
inc
pop
push
popa
inc
add
add
adc
add
adc
push
inc
add
pop
or
call
add
je
and
sub
pop
sub
sbb
adc
leave
add
add
pop
or
inc
mov
add
outs
sub
add
or
add
lds
add
xchg
and
loop
add
cmp
pop
and
add
pop
sub
adc
add
pop
or
call
or
neg
or
inc
sub
add
ja
adc
aas
add
pop
or
call
add
mov
add
dec
cmp
(bad)
(bad)
call
add
stc
(bad)
(bad)
dec
dec
cmp
(bad)
(bad)
call
add
dec
inc
cmp
(bad)
(bad)
inc
add
adc
add
dec
add
add
add
adc
add
add
or
add
jle
add
add
push
add
add
push
cmp
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
jle
add
popa
add
add
rol
add
es
add
add
adc
pop
cmp
add
add
scas
push
cmp
add
add
and
add
add
sahf
cmp
add
add
mov
jb
push
popa
inc
add
add
or
add
pop
or
add
call
sub
adc
pop
or
pop
push
sub
or
or
add
jmp
sub
add
or
sub
pop
or
add
call
cmp
(bad)
(bad)
inc
pop
pop
or
ror
or
add
add
or
add
sbb
push
sub
sbb
add
call
sub
pop
je
add
add
adc
pop
xchg
and
push
add
pop
adc
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
call
add
inc
cmp
(bad)
inc
cmp
(bad)
(bad)
inc
adc
push
add
add
adc
add
add
inc
add
add
add
add
inc
add
add
cmp
add
cmp
add
push
sub
add
push
add
add
add
ja
add
ja
add
ja
add
push
add
add
add
add
add
add
add
add
cmp
add
add
cmp
add
add
mov
add
cmp
add
add
adc
add
popa
pop
addr16
cmp
sub
add
add
add
add
add
push
xchg
and
add
pop
or
call
add
les
add
pop
sub
adc
add
pop
or
inc
mov
add
sbb
mov
add
outs
sub
push
sub
add
pop
jle
add
add
scas
add
add
add
add
scas
add
add
sahf
pop
or
(bad)
inc
sbb
adc
sub
adc
js
add
pop
or
call
add
xchg
add
xchg
push
sub
adc
xchg
add
xchg
pop
sub
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
rol
add
sub
or
(bad)
call
add
mov
(bad)
call
add
dec
dec
cmp
in
(bad)
dec
inc
jmp
(bad)
inc
inc
cmp
(bad)
(bad)
inc
add
push
verw
add
or
sub
add
push
sub
sub
add
or
icebp
add
sbb
add
das
add
add
add
adc
adc
add
cmp
cmp
add
add
cmp
les
add
cmp
add
add
cmp
add
add
sbb
pop
cmp
add
add
add
add
add
add
mov
mov
add
and
add
add
adc
add
sub
add
push
or
fild
add
sub
add
push
push
sub
sbb
sub
or
loope
add
sub
or
add
adc
add
add
add
add
(bad)
(bad)
dec
add
add
add
sub
es
sub
or
sub
add
push
cmp
(bad)
call
sub
sbb
push
cmp
(bad)
inc
sub
add
push
sub
sbb
fimul
cmp
(bad)
(bad)
inc
sub
add
push
cmp
(bad)
(bad)
(bad)
fidiv
push
cmp
(bad)
(bad)
jmp
add
or
xor
(bad)
dec
cmp
(bad)
(bad)
dec
inc
cmp
(bad)
(bad)
jmp
fiadd
add
cmp
(bad)
(bad)
inc
sub
push
outs
xor
add
fcom
sub
sub
cmp
(bad)
(bad)
jmp
fld
add
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
add
add
add
adc
cli
or
or
add
add
and
add
add
pop
sub
sub
add
add
sub
add
add
in
add
sub
dec
add
add
daa
add
add
add
sub
add
push
sub
add
add
pop
sub
or
sub
sub
add
into
add
add
add
add
lock
add
sub
cmc
add
bound
or
or
inc
pop
outs
sub
sub
sub
add
repz
add
sub
repnz
add
or
add
mov
add
sub
add
lock
add
sub
cmc
add
push
sub
sub
sub
add
imul
mov
add
sub
add
add
sub
sub
add
cli
sub
add
push
sub
sub
sub
add
cli
sub
cmc
sub
sub
add
cli
outs
xor
add
sub
sub
sub
add
cli
sub
add
or
cmc
adc
add
pop
add
add
add
adc
add
add
push
add
add
pop
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
in
add
es
add
add
movs
add
add
add
shl
add
pop
cmp
add
add
mov
cmp
add
add
cmp
add
add
xchg
cmp
add
add
retf
add
or
mov
add
add
adc
push
pop
adc
and
add
call
push
pop
jae
and
mov
add
in
add
sbb
add
inc
add
xor
add
or
adc
xor
pop
pop
or
sbb
add
or
add
sub
sbb
push
sub
pop
adc
call
sub
adc
pop
or
pop
adc
call
sub
pop
sub
adc
call
push
cmp
(bad)
(bad)
call
add
call
push
cmp
(bad)
call
add
dec
cmp
(bad)
(bad)
call
add
inc
xor
(bad)
inc
inc
cmp
(bad)
(bad)
inc
adc
push
add
add
and
add
jle
add
add
sub
add
jle
add
add
and
dec
cmp
sub
sbb
inc
or
add
test
add
push
add
adc
add
sub
add
fadd
add
add
add
retf
add
add
add
push
add
add
add
add
out
add
sbb
jmp
sub
cmp
add
add
out
add
pop
push
xchg
and
cmp
add
fild
add
sub
add
loopne
add
popa
pop
inc
pop
push
popa
inc
add
add
or
add
push
adc
call
sub
adc
adc
and
add
add
pop
adc
jmp
xor
add
or
pop
and
and
add
inc
pop
pop
or
enter
or
push
or
pop
or
sub
add
add
push
jle
add
add
push
xchg
add
xchg
add
add
xor
sbb
add
call
pop
pop
sbb
add
pop
sub
push
cmp
(bad)
(bad)
inc
je
add
add
sbb
add
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
push
cmp
(bad)
(bad)
call
add
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
add
xor
add
add
sbb
add
jle
add
add
adc
pop
cmp
sub
add
and
add
stos
add
add
add
jge
add
add
add
iret
add
add
add
add
add
add
add
add
cmp
out
add
es
add
add
jmp
and
add
pop
cmp
add
add
mov
add
pop
or
retf
add
add
xchg
push
sub
cmp
add
add
leave
add
add
pop
pop
cmp
add
add
add
add
adc
push
and
and
add
pop
adc
call
push
pop
or
pop
push
cmp
(bad)
jmp
out
or
push
pop
xor
and
sub
adc
inc
mov
add
add
add
or
pop
adc
inc
pop
pop
or
loop
add
or
push
or
add
sbb
pop
xor
sbb
add
call
or
cmc
pop
sub
or
add
call
push
cmp
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
call
add
inc
inc
xor
(bad)
inc
cmp
(bad)
inc
add
xor
add
add
add
add
jle
add
add
xor
add
jle
add
add
xor
add
sub
xor
add
inc
or
add
loop
add
push
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
shr
add
push
es
cmp
add
add
mov
add
pop
or
hlt
add
add
test
add
cmc
add
add
inc
and
add
in
add
add
add
add
or
add
sbb
add
sbb
add
call
push
and
and
popa
add
pop
sub
adc
pop
pop
xchg
and
fild
add
fcomp
or
adc
inc
sub
adc
and
add
add
pop
push
cmp
add
inc
sub
add
or
adc
pop
sbb
add
pop
adc
call
sub
cmp
(bad)
call
push
sub
add
or
cmp
(bad)
(bad)
call
dec
or
pop
or
or
add
call
or
cmc
pop
sub
or
add
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
add
inc
push
(bad)
(bad)
inc
cmp
cmp
(bad)
(bad)
call
xor
add
add
add
jle
add
add
sub
add
jle
add
add
daa
add
add
push
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
add
mov
add
jp
add
rol
add
into
add
add
add
add
sub
shr
add
push
es
cmp
or
loop
add
sub
add
push
cmp
add
add
mov
add
sub
add
jle
add
add
movd
sete
iret
add
add
ins
pop
sahf
popa
sbb
push
popa
inc
add
add
adc
add
adc
pop
xchg
and
add
pop
or
call
sub
push
or
cmp
inc
mov
add
outs
aaa
add
or
push
cmp
(bad)
(bad)
call
add
add
pop
or
inc
pop
pop
or
and
pop
sub
sbb
cmp
(bad)
(bad)
call
call
add
jae
and
sti
add
pop
sub
push
or
inc
sub
add
test
add
xchg
and
add
pop
or
call
add
iret
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
dec
dec
cmp
(bad)
(bad)
dec
inc
sbb
(bad)
inc
cmp
cmp
(bad)
(bad)
call
xor
add
add
adc
cmp
add
add
inc
add
add
add
add
inc
add
add
je
inc
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
out
add
add
jmp
add
add
mov
add
xchg
and
add
jle
add
add
es
add
add
es
jle
add
add
aaa
xchg
pop
pop
xor
pop
cmp
add
add
mov
cmp
add
add
cmp
cmp
add
add
jne
(bad)
(bad)
cmp
add
add
fiadd
add
popa
pop
bound
sub
push
popa
inc
add
add
or
add
pop
or
add
call
neg
adc
cmp
(bad)
inc
sub
add
or
sbb
add
inc
pop
pop
or
cmp
(bad)
jmp
fild
add
or
add
cmp
add
or
push
sub
xor
add
add
pop
adc
call
pop
pop
or
and
sub
adc
and
add
add
pop
adc
inc
sub
cmp
(bad)
(bad)
call
(bad)
(bad)
call
push
cmp
cmp
add
call
push
cmp
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
call
add
inc
cmp
(bad)
(bad)
inc
and
(bad)
inc
add
adc
add
xchg
add
and
add
jle
add
add
cmp
add
es
add
add
cmp
add
sub
cmp
add
inc
or
add
adc
add
xchg
add
add
add
add
add
add
add
aam
add
out
add
lea
add
ins
add
add
add
add
add
add
jmp
add
es
sub
add
add
mov
cmp
add
add
or
std
add
add
cmps
cmp
add
add
inc
add
popa
pop
sbb
sti
add
add
add
add
or
add
sbb
add
call
push
pop
or
pop
push
sub
or
push
pop
push
add
pop
push
sub
pop
(bad)
(bad)
inc
mov
add
outs
cmp
add
or
push
and
and
adc
inc
pop
pop
or
fadd
add
or
add
js
add
or
sbb
xor
push
cmp
(bad)
call
push
pop
das
xchg
and
adc
add
(bad)
call
push
and
and
sub
adc
pop
adc
and
add
pop
adc
call
sub
add
add
pop
or
add
call
push
cmp
pop
cmp
add
call
add
dec
cmp
(bad)
(bad)
call
add
inc
cmp
(bad)
(bad)
inc
cld
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
add
xor
add
add
adc
or
sbb
sahf
add
add
cmp
add
add
pop
cmp
cwde
add
add
popf
add
add
out
add
sbb
cmc
add
add
xchg
add
add
fwait
add
add
cmp
add
add
add
cmp
add
cmp
xchg
add
add
cmp
es
lds
add
push
sub
add
push
pop
movhps
mov
add
es
or
or
add
cmp
add
or
or
add
sub
add
push
adc
adc
sub
add
push
adc
adc
and
add
add
cmc
add
add
cmp
add
sbb
cmp
add
adc
sub
add
push
sub
add
push
lea
pop
adc
push
adc
mov
stc
add
push
adc
sub
add
push
pop
push
sub
or
sub
adc
push
adc
mov
cld
add
push
sbb
xor
sbb
pop
mov
cmp
(bad)
(bad)
push
jne
cmp
(bad)
(bad)
(bad)
cmp
(bad)
jmp
sbb
adc
adc
push
sub
add
push
cmp
(bad)
inc
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
jnp
(bad)
jmp
add
add
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
add
add
or
inc
add
sub
(bad)
(bad)
inc
or
movs
adc
push
push
sub
add
push
sbb
sub
es
add
or
sbb
call
sub
add
push
sub
cmp
dec
arpl
(bad)
jmp
inc
add
cmp
(bad)
jmp
inc
add
cmp
(bad)
push
add
or
pusha
(bad)
(bad)
call
add
dec
cmp
(bad)
jmp
repz
push
cmp
(bad)
jmp
add
or
fs
(bad)
inc
add
push
das
add
add
add
sub
add
add
sub
sub
add
push
sub
add
jle
add
add
add
sub
add
push
sub
sbb
add
cwde
add
add
add
adc
jns
jle
add
cmp
sub
sub
sub
inc
sub
or
sub
sbb
sbb
sub
add
loopne
(bad)
inc
add
add
(bad)
(bad)
dec
add
add
or
sbb
sub
fisubr
fisub
add
add
sub
push
sub
push
sub
sub
push
sub
push
sub
sub
sub
sub
add
add
cmp
(bad)
push
add
or
js
(bad)
dec
cmp
(bad)
inc
sub
add
add
add
or
pop
imul
add
or
or
push
pop
sub
sub
sub
add
hlt
sub
add
push
sub
push
add
pop
add
push
sub
add
add
add
xor
add
sub
push
and
or
add
sub
add
sub
sub
add
push
sub
add
add
or
add
add
add
add
add
lock
add
sub
cmc
add
push
and
add
add
mov
add
sub
sub
out
add
sub
add
add
sub
and
add
add
cli
add
add
or
add
in
add
jmp
sub
sub
add
sub
out
mov
sub
add
add
pop
add
sub
add
jmp
sub
sub
add
sub
add
add
pop
pop
gs
dec
sub
add
imul
sbb
cmc
sub
add
xchg
add
add
add
add
lock
add
push
sub
add
mov
sub
add
add
push
add
add
or
add
jmp
sub
sub
in
add
add
movntps
and
add
add
test
add
sub
sub
sub
add
in
sub
add
sub
repnz
push
sbb
sub
add
imul
pop
add
sub
cmc
add
sub
add
add
retf
add
add
or
add
jmp
sub
sub
add
sub
in
add
add
or
add
fadd
add
sub
add
lock
add
sub
cmc
add
or
sub
or
sub
sub
add
xor
add
sub
add
lock
add
sub
cmc
add
sub
add
sub
add
push
sub
add
pop
pop
and
sub
sub
sub
add
sub
cmc
sub
add
sub
add
push
sub
add
sub
sub
add
cli
sub
add
push
sub
sub
sub
add
cli
outs
xor
add
sub
bound
or
or
cmp
xor
pop
sub
sub
add
repz
add
push
sub
add
add
sub
sub
add
cli
sub
add
or
cmc
sub
sub
add
cli
jae
add
or
cmc
jb
or
pop
call
sub
sub
add
icebp
sub
add
sub
repnz
add
add
sub
sub
add
imul
adc
add
sub
add
add
sub
sub
adc
add
sub
add
pop
sub
push
add
adc
add
sub
pop
sub
or
sub
push
sub
sub
sub
add
imul
add
push
sub
add
add
fwait
add
add
rol
add
add
sub
add
push
sub
add
add
sub
sub
add
cli
sub
add
or
cmc
adc
push
add
add
sbb
add
jle
add
add
sub
add
add
cmp
add
add
sub
sub
add
inc
or
add
pop
add
add
add
test
add
adc
add
mov
add
ret
add
add
add
add
add
add
add
mov
add
add
add
rcl
add
push
es
sub
sbb
in
add
add
mov
cmp
add
add
add
test
jmp
add
cmp
add
add
sub
jmp
inc
add
add
or
add
pop
push
sub
adc
call
push
pop
dec
xchg
and
sbb
add
sub
sub
add
sbb
add
inc
mov
add
outs
inc
add
or
adc
pop
dec
xchg
and
add
pop
adc
inc
pop
pop
or
lods
or
add
pop
or
add
sbb
pop
xor
adc
and
and
call
cmps
pop
adc
call
push
pop
adc
pop
sub
pop
jle
add
add
arpl
add
add
arpl
pop
sbb
sub
(bad)
(bad)
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
(bad)
call
add
inc
cmp
(bad)
(bad)
inc
push
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
add
xor
add
add
sub
add
jle
add
add
cmp
add
add
jle
add
add
pop
add
add
dec
cmp
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
xchg
add
add
add
add
adc
add
es
or
fadd
add
sub
add
sbb
add
add
cmps
cmp
add
add
fld
add
popa
push
pop
cmp
add
add
add
add
adc
add
adc
and
add
pop
adc
js
(bad)
call
repz
or
and
sbb
cmp
(bad)
inc
mov
add
sub
add
or
adc
dec
(bad)
(bad)
inc
pop
pop
or
cmp
inc
and
pop
or
or
add
xor
(bad)
dec
sbb
adc
push
pop
ss
and
adc
sbb
(bad)
call
add
adc
cmp
(bad)
jmp
out
sub
push
and
push
push
add
pop
adc
repnz
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
loop
(bad)
call
add
sbb
cmp
(bad)
(bad)
call
add
and
(bad)
inc
cmp
(bad)
(bad)
inc
and
(bad)
inc
cmp
(bad)
(bad)
inc
add
adc
add
push
add
add
add
adc
add
add
or
add
jle
add
add
pop
add
add
pop
cmp
add
add
add
add
add
add
add
add
add
jne
add
add
add
mov
add
jne
add
mov
add
add
adc
cmp
add
add
icebp
add
add
pop
cmp
add
add
test
sub
push
cmp
add
add
push
cmp
sub
add
mov
pop
jp
push
popa
inc
add
add
or
add
pop
adc
jno
(bad)
call
pop
pop
jae
and
cld
add
pop
sub
adc
(bad)
adc
or
pop
or
add
inc
mov
add
outs
inc
add
or
pop
or
add
inc
pop
pop
pop
sub
sbb
or
pop
or
and
(bad)
dec
sbb
sub
sub
cmp
(bad)
(bad)
call
sub
pop
sub
sub
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
call
add
inc
cmp
(bad)
inc
cmp
(bad)
(bad)
call
or
add
add
add
add
cmc
sub
add
push
sub
add
add
add
sub
sub
sub
repz
add
or
out
add
add
add
sub
sub
add
imul
push
add
push
sub
add
add
add
pop
add
push
sub
add
sub
sub
add
imul
or
add
sub
add
add
pop
sub
or
sub
sbb
pop
sub
sub
data16
push
sub
add
jp
movntps
and
add
add
aaa
add
add
pop
sub
sub
add
in
sub
add
sub
add
sub
sub
add
cli
sub
add
or
cmc
adc
add
xor
add
sub
add
jle
add
add
in
add
add
inc
cmp
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
lods
add
add
add
shl
add
push
es
and
add
add
mov
add
sbb
mov
add
sub
add
mov
add
popa
pop
inc
pop
sbb
sbb
cmp
inc
add
add
or
add
sbb
mov
jge
(bad)
call
or
repnz
sbb
add
inc
mov
add
sub
add
or
adc
inc
pop
pop
or
cmp
(bad)
jmp
movs
add
add
cmp
pop
sbb
sbb
pop
xor
sbb
sub
xor
(bad)
call
push
pop
jle
and
add
pop
sub
pop
je
add
sbb
sbb
add
call
push
cmp
(bad)
call
add
call
add
dec
cmp
(bad)
call
add
inc
cmp
(bad)
inc
inc
(bad)
(bad)
inc
cmp
(bad)
call
add
inc
add
xor
add
add
adc
cmp
sbb
inc
add
add
add
add
cmp
dec
cmp
or
add
bound
add
add
add
sbb
add
add
add
add
add
fadd
add
fadd
add
jp
add
sldt
add
add
add
and
add
es
or
add
add
sub
add
sbb
add
add
sub
add
add
add
sbb
outs
pop
cmp
add
add
add
add
adc
push
and
and
adc
call
sub
adc
push
adc
fs
(bad)
jmp
inc
add
or
adc
pop
jne
and
add
add
inc
pop
pop
or
xor
add
or
aam
add
or
push
sub
xor
pop
or
add
call
sbb
and
add
jle
add
add
add
add
add
add
add
add
pop
or
sbb
pop
adc
inc
jne
add
add
adc
and
and
cmp
adc
call
push
cmp
pop
cmp
cmp
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
call
add
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
adc
add
cdq
add
add
add
jle
add
add
cmp
add
es
add
add
dec
add
add
push
add
add
pop
push
sub
add
inc
or
add
mov
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
cmp
add
and
push
sub
add
pop
cmp
add
add
mov
add
push
cmp
add
add
xchg
cmp
add
add
inc
add
popa
push
pop
sbb
add
add
add
add
or
dec
xchg
and
add
pop
adc
cmp
(bad)
call
pop
and
add
add
pop
sub
adc
(bad)
adc
or
pop
or
push
cmp
inc
mov
add
outs
inc
add
or
adc
and
and
push
cmp
(bad)
call
push
cmp
pop
pop
or
mov
add
or
add
or
push
xchg
and
push
cmp
(bad)
(bad)
dec
adc
sub
pop
adc
add
pop
sub
cmp
(bad)
(bad)
call
sub
inc
xchg
and
add
pop
sub
pop
sub
pop
pop
xor
add
pop
adc
cmp
(bad)
(bad)
call
pop
cmp
or
stos
(bad)
(bad)
call
push
cmp
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
inc
cld
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
add
xchg
jle
add
add
or
or
movd
add
add
or
sub
add
push
sub
add
out
sub
add
sub
add
add
xor
add
add
adc
sub
sub
cmp
add
add
cmp
add
sub
es
sub
cmp
add
sbb
jle
add
or
pop
sub
push
sub
and
add
add
pop
sub
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
add
add
cmp
mov
(bad)
jmp
sbb
shr
sub
add
push
cmp
sub
nop
(bad)
(bad)
inc
cmp
xor
add
sub
push
sub
push
sub
jle
add
add
add
or
sub
add
sub
outs
rol
add
sub
add
add
adc
and
add
and
add
sub
sub
sub
add
jmp
adc
add
sub
add
out
push
add
add
add
add
adc
add
sub
loope
sub
adc
push
sub
or
add
sub
sub
add
push
sub
sub
add
push
sub
sub
add
push
sub
add
sub
sub
sub
sub
sub
sub
add
cmc
add
hlt
sub
add
sub
add
cli
sub
add
sbb
sbb
je
add
sub
sbb
add
add
sbb
add
loopne
xor
loopne
adc
add
sub
sub
add
push
sub
sub
add
push
sub
add
add
cmp
add
sub
or
add
mov
add
sub
add
lock
add
sub
cmc
add
jp
movntps
and
add
add
lods
add
add
pop
sub
sub
add
in
sub
add
sub
repnz
pop
sub
or
sub
sub
add
sub
add
sub
add
or
add
out
add
sub
add
lock
push
sub
add
jp
movntps
and
add
add
movs
add
add
pop
sub
sub
add
in
sub
repnz
sub
sub
pop
add
push
sub
add
movntps
and
add
and
add
sub
sub
sub
add
in
sub
add
sub
repnz
pop
sub
sub
sub
sub
sub
add
cmc
add
hlt
sub
add
sub
add
jp
movntps
and
mov
add
sub
sub
sub
add
in
sub
add
sub
repnz
pop
pop
push
pop
dec
sub
add
imul
add
cmc
jp
movntps
and
add
and
pop
sub
sub
add
in
sub
add
sub
repnz
sub
sub
add
cli
sub
add
or
cmc
adc
add
inc
add
add
add
adc
add
add
sti
add
add
add
add
clc
add
add
cmp
add
add
sti
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
sbb
add
pop
add
add
cmp
add
add
aam
add
push
xchg
and
into
add
add
mov
add
iret
add
add
dec
pop
push
popa
inc
add
add
adc
add
adc
pop
cs
push
sub
add
pop
adc
lea
sub
sbb
neg
adc
jg
(bad)
jmp
dec
add
or
pop
pop
or
sub
and
push
add
or
dec
or
sub
and
sbb
pop
xor
push
adc
push
(bad)
(bad)
call
add
xor
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
cmp
add
sub
sub
cmp
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
add
(bad)
call
add
(bad)
(bad)
(bad)
dec
cmp
(bad)
(bad)
call
add
call
add
sub
(bad)
inc
cmp
(bad)
inc
cmp
(bad)
(bad)
inc
add
adc
add
push
add
adc
add
add
and
add
jle
add
add
and
add
sub
and
add
inc
or
add
sub
add
aad
add
je
add
rol
add
cwde
add
add
add
movs
add
add
add
add
add
add
add
add
cmp
cmp
add
es
or
add
add
scas
pop
sub
push
adc
add
push
cmp
add
add
fwait
cmp
add
add
xlat
add
add
and
aam
add
popa
push
sub
add
adc
add
adc
xchg
add
pop
adc
imul
not
or
push
pop
dec
xchg
and
fild
add
add
push
(bad)
(bad)
inc
mov
add
sub
add
sbb
mov
adc
and
and
adc
cs
(bad)
inc
pop
pop
or
pop
or
add
and
add
pop
adc
adc
(bad)
dec
sbb
adc
add
jmp
cmp
(bad)
(bad)
call
sub
pop
sub
adc
jmp
add
call
push
cmp
(bad)
(bad)
call
add
fsin
(bad)
call
add
sbb
cmp
(bad)
call
add
and
(bad)
inc
cmp
(bad)
inc
and
(bad)
inc
cmp
(bad)
(bad)
call
xor
add
add
adc
add
add
inc
add
add
add
add
inc
add
add
dec
cmp
add
inc
or
add
jmp
add
add
add
pop
add
add
add
bound
add
mov
add
jmp
add
add
add
add
add
xchg
add
pop
add
add
cmp
add
es
cmp
add
add
mov
add
pop
or
cmp
add
add
sub
add
push
add
add
xor
add
add
popa
inc
add
add
or
add
sbb
add
cmp
call
add
sub
add
and
out
or
or
add
fs
(bad)
inc
mov
add
outs
dec
add
or
add
fs
add
pop
adc
sub
(bad)
inc
pop
and
add
pop
or
push
and
add
add
pop
adc
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
dec
sbb
sbb
and
add
add
and
add
pop
sahf
sub
(bad)
(bad)
call
push
pop
jb
and
add
pop
adc
loope
(bad)
call
or
cmc
pop
sub
push
and
and
add
pop
adc
(bad)
(bad)
(bad)
call
add
call
push
cmp
add
mov
(bad)
call
add
lock
(bad)
dec
cmp
(bad)
(bad)
call
add
hlt
(bad)
(bad)
inc
cmc
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
adc
add
push
add
add
add
add
adc
add
sub
cmp
add
add
or
add
inc
or
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
es
add
add
xchg
add
add
pop
cmp
add
add
mov
add
cmp
add
add
aas
xchg
and
popa
add
pop
cmp
xchg
mov
mov
sub
popa
pop
push
add
add
adc
add
adc
fwait
add
add
pop
or
call
adc
int3
add
add
and
cmp
(bad)
(bad)
inc
mov
add
outs
dec
add
or
pop
or
inc
pop
pop
or
and
add
pop
sub
sbb
call
sub
sbb
data16
(bad)
call
or
inc
sub
or
(bad)
(bad)
cmp
(bad)
(bad)
call
add
jmp
cmp
(bad)
(bad)
call
add
sub
(bad)
dec
dec
cmp
(bad)
(bad)
call
add
xor
(bad)
dec
inc
cmp
cmp
(bad)
inc
add
push
add
add
add
add
sbb
and
add
push
sbb
add
add
add
add
or
add
sub
sbb
loop
loope
sub
sub
add
sub
sub
add
sub
sub
add
sub
sub
add
push
sub
sub
add
sub
add
add
or
dec
add
or
or
sub
sub
sub
add
cmc
sub
add
sub
adc
add
dec
add
add
add
adc
pop
add
add
and
nop
add
add
mov
add
sbb
push
and
sub
sub
sbb
push
pop
sub
sub
add
sub
sub
add
sub
sub
add
push
sub
or
fiadd
sub
sub
add
sub
add
add
dec
add
push
sub
xor
add
add
sub
or
add
add
or
add
sub
and
(bad)
loope
sub
inc
sub
or
add
add
add
shl
add
add
inc
sbb
ror
sub
dec
pop
outs
push
sub
add
sub
sub
dec
add
push
sub
or
mov
add
add
sub
push
sub
push
sub
or
mov
add
add
sub
push
sub
push
sub
sub
clc
add
sub
and
add
and
add
add
or
add
in
add
jmp
sub
sub
out
or
sub
or
sub
jp
or
or
or
or
or
add
repz
repnz
add
push
sub
add
sub
sub
add
cli
sub
add
sub
sub
add
inc
add
add
add
add
lock
add
sub
cmc
add
push
sub
sub
sub
add
imul
sbb
add
sub
add
add
sub
sub
add
cli
sub
add
or
cmc
sub
add
sub
add
push
sub
add
sub
sub
push
add
push
sub
add
sub
sub
dec
add
push
sub
add
sub
sub
push
add
push
sub
add
bndstx
add
push
add
sub
add
sub
add
xor
add
add
adc
add
add
js
sub
pop
sub
sub
push
cmp
add
sbb
sbb
jae
add
sbb
adc
jne
add
jle
add
add
jno
add
sbb
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
add
add
push
sub
sbb
es
add
add
jbe
cmp
inc
sub
push
and
add
add
dec
add
add
cmp
sub
pop
add
push
cmp
(bad)
jmp
pop
add
push
cmp
pop
add
push
cmp
cmp
pop
add
push
cmp
and
add
sub
push
sub
add
adc
add
add
add
add
add
add
sub
sub
sub
repz
add
sub
add
add
add
pop
add
push
sub
sub
sub
adc
add
sub
add
sub
sub
jmp
in
sub
add
sti
add
add
add
add
lock
add
sub
cmc
add
jp
movntps
and
add
add
popa
add
add
pop
sub
sub
add
in
sub
add
sub
repnz
sub
sub
sahf
add
push
sub
add
pop
sub
or
sub
sub
add
mov
add
add
lock
add
push
sub
add
sub
sub
add
cli
sub
add
or
cmc
jp
movntps
and
add
add
std
add
add
pop
sub
sub
add
in
sub
add
sub
repnz
sbb
add
or
add
and
add
add
add
sub
sub
add
sub
add
adc
add
sub
add
sub
push
and
add
add
add
add
and
add
pop
sub
sub
add
add
sub
add
or
and
sbb
add
sub
add
sub
add
xor
add
add
add
add
sub
push
xchg
sub
sub
pusha
sub
sub
push
sub
lock
sbb
sti
push
sub
pusha
sub
sub
add
fld
ins
add
push
sub
add
(bad)
sub
add
sub
add
xlat
sub
add
sub
add
push
and
add
add
add
add
and
add
pop
sub
sub
add
add
sub
add
adc
xchg
and
out
add
add
pop
pop
adc
add
jmp
xor
add
sub
add
add
outs
add
push
sub
or
add
adc
add
sub
add
sub
add
add
pop
sub
or
sub
sub
sub
add
cli
sub
add
push
sub
sub
sub
add
cli
sub
cmc
sub
sub
add
cli
sub
add
sub
sub
add
push
add
add
add
add
lock
add
push
sub
add
sub
sub
add
cli
sub
add
or
cmc
sub
add
sub
add
push
sub
add
or
jno
sbb
add
sub
add
sub
add
or
or
sub
pop
sub
sub
add
hlt
sub
add
sub
dec
sub
sub
sub
js
add
sub
sub
add
sub
push
add
jp
add
sub
movntps
and
pop
add
sub
sub
sub
add
in
sub
add
push
sub
add
pop
sub
or
sub
sub
add
sub
add
push
sub
add
sub
sub
add
cli
outs
aaa
add
push
sub
sub
sub
add
cli
sub
add
or
cmc
adc
push
add
add
add
add
adc
add
add
lods
add
add
add
add
test
bound
test
adc
add
and
add
test
add
and
add
inc
add
add
add
add
add
add
add
add
add
loope
add
add
add
cwde
add
add
add
add
add
add
add
add
jnp
add
sbb
cmp
add
sub
add
dec
add
push
cmp
add
popa
sbb
dec
add
add
jle
add
add
dec
add
add
dec
add
add
add
and
sbb
pop
popa
or
nop
adc
add
pop
push
cmp
push
cmp
(bad)
call
cmp
adc
add
add
pop
call
and
add
add
pop
adc
cmp
(bad)
call
sub
pop
or
repnz
add
sub
je
add
sbb
add
add
add
add
push
adc
or
or
adc
dec
xchg
and
add
pop
adc
cmp
(bad)
(bad)
push
add
or
add
or
add
adc
adc
add
sbb
or
pop
xchg
adc
nop
and
add
pop
adc
cmp
or
pop
adc
push
pop
pop
pop
adc
and
inc
add
arpl
pop
adc
pop
bound
pop
adc
cmp
push
pop
and
add
add
gs
add
add
gs
add
pop
and
pop
sub
adc
and
and
add
pop
adc
cmp
call
pop
punpckldq
or
add
sbb
or
pop
pop
adc
push
sub
adc
sbb
(bad)
(bad)
call
jne
add
sbb
adc
pop
adc
pop
or
push
cmp
(bad)
call
add
or
add
adc
add
sbb
or
pop
pop
adc
pop
xchg
popa
adc
je
add
sbb
or
or
pop
adc
or
popa
shr
add
or
adc
pop
pop
xchg
and
push
add
pop
adc
cmp
std
(bad)
call
or
cmp
(bad)
call
pop
adc
adc
and
and
add
pop
adc
cmp
adc
xor
push
adc
cmp
mov
add
add
pop
sub
adc
or
add
outs
add
add
or
add
add
add
pop
or
add
mov
addr16
(bad)
dec
jne
add
add
adc
cmp
(bad)
call
adc
push
std
(bad)
call
push
cmp
(bad)
call
push
cmp
movs
std
(bad)
inc
cmp
cmp
mov
(bad)
dec
cmp
xor
add
add
add
adc
add
add
cmp
add
add
sub
std
add
add
add
add
add
mov
add
pop
add
add
add
add
add
test
add
sbb
add
add
add
add
add
add
add
jl
add
es
add
add
inc
xchg
and
lea
add
rol
add
scas
push
cmp
add
add
or
mov
cmp
call
mov
pop
je
cmp
inc
add
add
or
add
push
push
sub
jb
(bad)
call
sub
sbb
sbb
add
inc
mov
add
add
add
or
sub
add
call
sub
or
mov
add
or
repnz
add
add
sbb
pop
xor
sbb
add
call
or
cmc
pop
sub
push
and
and
add
and
fstp
add
call
push
cmp
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
call
add
inc
inc
inc
(bad)
(bad)
inc
cmp
(bad)
call
xor
add
add
adc
add
add
cmp
add
jle
add
add
aaa
add
add
pop
cmp
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
xchg
add
add
add
add
add
add
add
sar
add
es
add
add
push
add
pop
sbb
rol
add
cmp
add
add
sub
sub
add
push
cmp
add
add
xchg
cmp
add
add
out
add
add
xor
popa
inc
add
add
or
add
sbb
add
jae
(bad)
call
sub
adc
adc
mov
adc
pop
(bad)
(bad)
inc
mov
add
add
mov
add
sbb
add
or
adc
dec
cmp
add
add
xor
(bad)
inc
pop
pop
or
or
adc
lods
add
pop
adc
adc
(bad)
dec
sbb
adc
add
add
pop
adc
cli
(bad)
(bad)
call
push
and
and
or
add
jmp
jne
add
add
push
cmp
(bad)
call
adc
sar
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
ret
call
add
call
add
or
(bad)
dec
cmp
add
or
(bad)
dec
add
or
(bad)
inc
inc
add
adc
add
aaa
add
add
add
adc
add
add
cmp
add
add
sub
hlt
add
add
add
add
add
add
add
imul
add
movs
add
add
add
add
add
sahf
add
add
add
xchg
add
add
add
add
add
adc
add
push
sbb
mov
add
sub
add
push
cmp
inc
sub
cmp
pop
cmp
add
pop
cmp
inc
add
add
or
add
pop
cmp
jbe
(bad)
call
add
xchg
sbb
and
add
pop
sub
adc
sbb
cmp
(bad)
inc
mov
add
add
add
or
sbb
cmp
(bad)
inc
pop
pop
or
pop
sub
sbb
sub
or
call
cmp
(bad)
(bad)
inc
jne
add
add
push
sub
xchg
and
or
call
add
add
cmp
(bad)
(bad)
dec
dec
cmp
(bad)
dec
inc
dec
(bad)
(bad)
inc
inc
cmp
(bad)
dec
inc
adc
add
pusha
add
add
add
adc
add
add
sbb
add
jle
add
add
pop
add
add
dec
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
ins
add
add
add
add
add
add
jg
add
es
and
add
add
mov
sub
push
adc
add
cmp
add
add
push
xchg
sbb
add
push
loopne
add
enter
sub
lds
add
cmp
add
add
sub
sub
push
popa
inc
add
add
adc
add
adc
adc
add
pop
adc
pop
(bad)
(bad)
call
or
push
pop
push
xchg
and
add
pop
adc
inc
(bad)
(bad)
inc
add
push
add
or
adc
pop
dec
xchg
and
aam
add
add
sub
(bad)
inc
pop
pop
or
or
sbb
add
push
(bad)
(bad)
dec
sbb
adc
push
pop
or
pop
adc
(bad)
(bad)
(bad)
call
sub
pop
sub
adc
repnz
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
loop
(bad)
call
add
pop
(bad)
(bad)
dec
cmp
(bad)
(bad)
call
add
call
add
xor
(bad)
inc
xor
cmp
(bad)
call
xor
add
add
xor
add
jle
add
add
cmp
add
add
jle
add
add
sub
add
sub
sub
add
inc
or
add
lods
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
add
cwde
add
add
mov
add
rol
cmp
add
add
xor
and
inc
add
pop
cmp
add
add
test
add
cmp
add
add
adc
pop
cmp
add
add
sub
fiadd
add
add
pop
ds
popa
inc
add
add
adc
pop
and
and
cmp
add
push
cmp
(bad)
call
pop
pop
inc
xchg
and
lea
add
in
adc
(bad)
adc
or
adc
and
and
adc
cmp
(bad)
(bad)
inc
mov
add
sub
add
or
adc
cmp
(bad)
(bad)
inc
pop
pop
or
retf
add
add
add
out
add
add
sbb
sub
adc
xor
sbb
push
cmp
(bad)
(bad)
call
sub
push
sub
pop
sub
and
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
or
iret
(bad)
(bad)
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
call
or
adc
(bad)
call
push
cmp
(bad)
(bad)
inc
cmp
(bad)
inc
add
xor
add
add
or
add
jle
add
add
or
add
add
or
add
push
and
add
add
add
cmp
or
add
push
add
add
add
add
add
add
add
add
add
add
xchg
add
add
cmp
add
add
cmp
add
add
sar
add
add
fadd
add
popa
pop
push
pop
cmp
add
add
add
add
pop
add
add
or
sub
sub
popf
sahf
add
pop
sub
sbb
mov
(bad)
inc
mov
add
outs
push
add
or
pop
and
add
pop
sub
adc
jg
and
sbb
jle
add
add
xchg
add
and
add
add
pop
or
inc
(bad)
(bad)
call
not
and
cmp
(bad)
jmp
sbb
push
adc
push
sub
add
add
add
push
add
add
add
add
add
add
add
add
add
sbb
cmp
(bad)
dec
call
add
lock
(bad)
dec
idiv
(bad)
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
and
(bad)
inc
and
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
add
xor
add
add
xor
add
jle
add
add
cmp
add
es
add
and
add
inc
or
add
add
add
add
add
add
jns
add
and
add
add
add
add
cmp
add
lea
add
add
add
lock
add
push
lea
add
add
jmp
add
je
add
sbb
mov
add
popf
cmp
add
add
sub
pop
cmp
add
add
mov
xlat
add
add
add
sbb
jl
add
popf
push
je
add
sbb
add
and
or
pop
(bad)
(bad)
inc
je
add
sbb
and
add
popf
push
jne
add
sbb
and
add
popf
sbb
cmp
(bad)
inc
jne
add
sbb
and
sbb
add
add
sbb
push
and
pop
pop
xchg
and
mov
add
cmp
(bad)
(bad)
inc
je
add
sbb
and
adc
add
add
add
sbb
push
je
add
sbb
sub
add
push
sub
dec
xlat
(bad)
(bad)
dec
cmp
(bad)
(bad)
jmp
add
add
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
and
(bad)
inc
cmp
(bad)
(bad)
inc
add
mov
adc
pop
sub
pop
call
cmp
add
sub
sub
sub
add
jmp
adc
add
sub
add
and
sbb
or
cvtpi2ps
lea
add
sub
sub
add
sub
sub
jmp
add
cli
sub
cmc
inc
sbb
jl
sbb
add
sub
add
sub
add
adc
add
cmps
add
add
add
adc
outs
cmp
add
sub
and
push
sub
adc
inc
or
add
jae
add
push
cmp
add
sbb
and
sub
sbb
or
sub
add
sub
and
add
add
(bad)
call
(bad)
(bad)
inc
add
add
(bad)
(bad)
dec
add
add
add
add
retf
sbb
sub
sbb
shr
sub
mov
(bad)
jmp
mov
add
cmp
nop
add
push
cmp
xchg
add
push
cmp
xchg
add
push
sub
push
sub
add
add
add
fadd
add
add
add
jae
add
or
add
cmp
add
outs
push
add
or
add
jno
add
pop
cmp
add
outs
push
add
or
sbb
outs
add
add
cmp
add
outs
push
add
or
add
ins
add
add
cmp
add
outs
push
add
or
sbb
imul
add
sub
push
add
or
add
xchg
add
push
sbb
xchg
add
push
outs
push
add
or
add
xchg
add
push
sbb
xchg
add
push
outs
push
add
or
add
xchg
add
push
sbb
push
outs
push
add
or
add
xchg
add
push
push
sub
push
add
or
add
xchg
add
push
pop
or
xchg
add
push
outs
push
add
or
add
xchg
add
push
pop
or
rol
add
outs
push
add
or
add
xchg
add
push
pop
or
rol
add
outs
push
add
or
add
xchg
add
push
pop
or
xchg
add
push
outs
push
add
or
add
xchg
add
push
pop
or
push
outs
push
add
or
add
xchg
add
push
pop
push
sub
push
add
or
add
xchg
add
push
pop
movaps
push
add
or
push
add
add
xchg
add
push
pop
adc
xchg
add
push
outs
push
add
or
sub
(bad)
(bad)
jmp
xchg
add
push
cmp
(bad)
jmp
xchg
add
push
cmp
xchg
add
push
cmp
xchg
add
push
cmp
rol
add
cmp
xchg
add
push
cmp
xchg
add
push
cmp
xchg
add
push
cmp
verw
or
sbb
or
sub
sub
sub
sub
add
push
sub
sub
add
sub
in
add
jmp
add
xchg
add
push
sub
pop
sub
or
sub
sub
add
sub
add
push
sub
add
movntps
and
add
push
pop
sub
sub
add
in
sub
add
sub
repnz
sub
sub
add
cli
sub
add
push
sub
sub
sub
add
cli
sub
cmc
sub
add
sub
add
sub
add
or
add
cdq
add
add
add
add
lock
push
sub
add
sub
add
sub
add
sub
add
sub
sub
in
add
push
sub
add
sub
sub
add
cli
sub
add
push
sub
sub
sub
add
cli
sub
add
sub
sub
sub
add
cli
sub
add
or
cmc
adc
push
add
add
adc
add
add
dec
add
add
add
add
dec
add
add
push
cmp
add
inc
or
add
in
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rcr
cmp
add
add
and
add
pop
cmp
add
add
stos
push
cmp
add
add
or
add
pop
pop
xchg
and
sub
add
add
add
sub
add
popa
pop
jge
push
popa
inc
add
add
sbb
add
adc
pop
pop
xchg
and
push
cmp
(bad)
call
add
call
sub
push
or
push
pop
jae
and
add
jle
add
add
lea
add
jle
add
add
lea
add
xchg
add
sahf
add
add
pop
adc
inc
mov
add
outs
push
add
or
pop
adc
inc
pop
pop
push
sub
or
add
mov
add
or
sbb
xor
push
adc
call
or
cmc
sbb
adc
inc
sub
pop
and
add
add
call
sub
add
and
call
add
call
push
cmp
pop
cmp
add
call
push
cmp
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
call
add
inc
idiv
(bad)
inc
add
adc
add
jg
add
and
add
jle
add
add
cmp
add
jle
add
add
xor
pop
cmp
or
add
add
add
ins
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
cdq
add
push
es
add
add
call
scas
add
pop
cmp
add
add
test
cmp
add
add
add
in
add
add
xor
pop
cmp
add
add
xchg
in
add
add
sbb
pop
or
popa
inc
add
add
or
add
pop
or
add
call
sub
adc
sbb
(bad)
(bad)
inc
mov
add
sbb
mov
add
sub
add
or
push
push
xchg
push
sub
add
pop
adc
inc
pop
pop
or
cmp
(bad)
call
push
and
scas
add
add
push
sldt
or
pop
or
xor
adc
pop
push
xchg
and
les
add
add
call
and
jmp
lock
pop
sub
pop
adc
inc
jne
add
sbb
sbb
add
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
call
pop
cmp
add
inc
inc
adc
add
dec
add
add
add
adc
add
add
push
add
add
add
add
add
add
sbb
add
add
cmp
or
add
dec
add
add
add
push
add
add
add
dec
add
add
add
add
add
add
add
xchg
add
add
add
push
cmp
add
add
cmp
add
add
sar
add
add
fld
add
popa
pop
inc
pop
cmp
add
add
add
add
pop
add
add
sub
adc
ins
xchg
and
rol
pop
sub
sbb
inc
add
or
sub
push
pop
pop
or
add
add
add
jno
and
lods
add
pop
or
inc
sbb
pop
adc
add
or
add
cmp
(bad)
(bad)
call
sub
sub
adc
adc
inc
add
add
add
add
add
add
add
call
sub
cmp
(bad)
call
add
repz
(bad)
call
add
dec
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
dec
add
dec
add
and
(bad)
inc
cmp
(bad)
(bad)
inc
add
xor
add
add
xor
add
jle
add
add
sub
add
jle
add
add
and
push
cmp
or
add
sbb
add
sbb
add
xchg
add
jl
add
fld
add
add
add
mov
add
push
add
rol
add
cmp
add
pusha
add
add
fwait
add
push
es
add
add
push
xchg
and
stc
add
pop
cmp
add
add
stos
push
cmp
add
add
add
fild
add
pop
pop
xchg
and
push
add
pop
cmp
add
add
mov
fadd
add
add
sbb
pop
or
add
add
or
add
pop
or
add
imul
not
sbb
add
pop
(bad)
(bad)
inc
adc
add
or
sbb
add
dec
(bad)
(bad)
inc
pop
pop
push
sub
pop
or
or
sub
repnz
or
add
sub
(bad)
dec
sbb
or
adc
pop
(bad)
(bad)
call
push
and
and
add
jle
add
add
xchg
add
add
add
add
xchg
add
add
sahf
pop
sub
pop
je
add
sbb
pop
or
add
in
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
aam
(bad)
call
add
call
add
adc
(bad)
dec
cmp
(bad)
(bad)
call
add
call
add
and
(bad)
inc
cmp
(bad)
(bad)
inc
adc
push
add
add
xor
add
add
or
add
sub
or
add
inc
or
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
test
add
ret
add
pushf
add
push
es
add
add
jae
sbb
mov
add
and
cmp
add
add
movs
push
sub
add
add
cmp
add
add
xchg
cmp
rol
add
ds
cmp
inc
add
add
pop
add
add
or
call
hlt
adc
push
or
inc
mov
add
outs
pop
add
or
push
sub
or
pop
or
inc
pop
pop
push
sub
pop
add
add
add
aaa
jle
add
add
aaa
xchg
add
and
add
add
pop
sbb
or
sub
ud0
call
or
neg
or
inc
je
add
add
sbb
call
add
in
(bad)
(bad)
dec
cmp
(bad)
(bad)
call
add
daa
(bad)
(bad)
dec
dec
cmp
(bad)
(bad)
dec
inc
cmp
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
add
add
push
pop
sub
adc
push
sub
jnp
add
sub
sub
in
sub
sub
jecxz
add
ds
add
add
add
sub
clc
mov
add
add
add
add
sbb
cmp
fst
sub
sub
sub
add
add
sub
sub
icebp
sbb
add
add
cld
add
add
or
add
add
or
sub
out
sub
icebp
add
add
add
stos
add
push
sub
sub
sub
add
cli
sub
cmc
sub
add
sub
add
push
sub
add
or
or
jle
jp
pop
sub
sub
add
repz
add
sub
repnz
add
pop
sub
or
sub
sub
sub
add
cli
sub
add
push
sub
sub
add
lahf
add
add
add
add
lock
add
sub
cmc
add
sub
sub
add
cli
sub
add
or
cmc
adc
add
add
add
add
adc
add
add
pop
add
add
add
add
sbb
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
stos
add
push
es
or
loope
add
push
sub
sub
add
fiadd
add
and
and
add
aam
add
sub
add
aad
add
popa
pop
imul
inc
add
add
or
add
sbb
add
jne
(bad)
call
adc
pop
jp
and
add
pop
adc
pop
(bad)
(bad)
inc
mov
add
sub
add
or
adc
dec
(bad)
(bad)
inc
pop
pop
or
pop
push
sub
pop
cmp
pop
adc
sub
(bad)
dec
sbb
or
adc
sub
(bad)
call
sub
adc
and
and
lea
add
loopne
cmp
je
add
add
pop
or
add
in
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
(bad)
(bad)
call
add
sbb
(bad)
dec
cmp
add
call
add
and
cmp
(bad)
(bad)
inc
and
add
adc
add
jmp
adc
cmp
sbb
sahf
add
add
sub
add
cwde
add
add
push
cmp
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiadd
add
shr
cmp
cmp
add
scas
push
cmp
add
cmp
add
dec
xchg
and
sbb
add
dec
add
add
xchg
cmp
add
cmp
add
popa
push
pop
push
popa
inc
add
add
adc
add
add
add
add
pop
and
add
add
pop
adc
call
pop
and
and
add
pop
sub
pop
or
in
push
pop
ins
xchg
and
in
add
pop
sub
push
or
adc
inc
mov
add
sbb
mov
add
sub
or
adc
pop
and
add
pop
adc
inc
mov
add
sbb
mov
add
outs
pop
add
or
adc
and
and
add
inc
mov
add
sbb
mov
add
sub
add
or
adc
inc
adc
or
cmp
add
and
dec
cmp
add
or
add
sbb
pop
xor
adc
and
and
dec
add
pop
adc
(bad)
(bad)
cmp
push
and
and
sub
pop
sub
and
cmp
(bad)
call
push
cmp
(bad)
call
pop
cmp
(bad)
call
add
call
add
dec
cmp
push
cmp
add
inc
lods
(bad)
(bad)
inc
inc
add
xor
add
add
add
adc
cmp
add
add
xor
add
jle
add
add
sub
dec
cmp
or
add
mov
add
pop
add
add
add
add
add
add
add
jl
add
test
add
add
add
add
add
add
add
add
lods
add
push
sbb
repz
add
mov
add
cmp
add
add
loope
add
xchg
and
add
pop
cmp
add
add
call
jmp
pop
push
popa
inc
add
add
adc
push
and
and
jmp
add
call
sub
sbb
adc
(bad)
adc
or
adc
pop
dec
xchg
and
adc
inc
mov
add
outs
pop
add
or
adc
pop
jb
and
add
pop
adc
sub
(bad)
inc
pop
pop
or
and
pop
or
adc
sbb
adc
xchg
and
add
sub
adc
call
pop
sbb
and
loop
add
out
sub
cmp
(bad)
(bad)
call
adc
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
call
add
inc
adc
(bad)
inc
cmp
(bad)
(bad)
call
xor
add
add
sbb
add
jle
add
add
cmp
add
add
sub
or
add
inc
or
add
jge
add
push
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
scas
add
push
es
add
add
sub
pop
cmp
add
add
scas
push
push
cmp
add
add
sbb
add
lahf
cmp
add
add
retf
add
pop
pop
cmp
add
add
add
add
or
add
pop
adc
call
sub
push
or
adc
inc
add
pusha
add
or
sub
and
and
jmp
add
inc
pop
pop
sbb
dec
(bad)
(bad)
dec
and
add
pop
add
add
cmp
(bad)
(bad)
jmp
fwait
add
add
sbb
pop
xor
sbb
add
call
push
pop
pop
xchg
and
push
add
pop
sub
pop
push
cmp
push
sub
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
call
add
inc
xor
(bad)
inc
inc
cmp
(bad)
(bad)
inc
adc
add
outs
add
add
add
adc
add
add
sub
add
push
cmp
add
add
add
add
pop
add
add
inc
cmp
add
add
add
add
add
add
add
add
add
add
add
jbe
add
popa
add
add
add
adc
add
pop
add
add
add
add
scas
add
push
es
sbb
add
sub
add
cmp
add
add
mov
add
xchg
and
cmp
add
add
pushf
cmp
add
add
fiadd
add
popa
pop
jno
push
sbb
popa
inc
add
add
adc
add
adc
pop
jle
and
add
pop
adc
call
sub
adc
adc
and
and
add
pop
adc
jmp
popa
add
or
adc
pop
daa
xchg
and
and
add
add
ss
(bad)
call
cmp
(bad)
(bad)
inc
pop
pop
or
lock
add
bound
dec
add
sbb
pop
xor
add
add
pop
adc
call
or
add
sub
(bad)
(bad)
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
call
push
cmp
(bad)
(bad)
call
add
inc
cmp
cmp
(bad)
inc
add
xor
push
add
aaa
add
adc
add
add
cmp
add
add
jle
add
add
pop
add
add
popa
cmp
add
add
cmp
add
add
add
add
add
add
add
and
add
add
add
xor
add
add
add
add
add
add
add
add
sub
shl
cmp
add
add
test
add
xchg
and
push
add
pop
cmp
add
add
lahf
push
cmp
add
add
cmp
add
add
cmp
cmp
add
add
int
add
popa
pop
pop
push
popa
inc
add
add
or
add
sbb
add
call
pop
pop
inc
xchg
and
add
pop
sub
adc
sbb
add
inc
mov
add
outs
bound
add
or
adc
inc
pop
pop
or
imul
add
add
test
add
or
pop
or
xor
sbb
(bad)
(bad)
call
sub
adc
and
add
add
pop
adc
stc
(bad)
(bad)
inc
je
add
add
push
adc
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
push
cmp
(bad)
call
add
dec
cmp
(bad)
(bad)
call
add
inc
cs
(bad)
inc
cmp
add
xor
xchg
add
and
add
jle
add
add
inc
add
add
add
add
cmp
sub
cmp
add
inc
or
add
sub
add
sub
add
xchg
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
add
mov
add
es
cmp
sub
add
add
scas
push
cmp
add
add
cmp
add
add
cmp
fwait
cmp
add
add
hlt
add
add
pop
cmp
add
add
add
add
or
add
pop
or
add
call
sub
adc
pop
or
sbb
cmp
(bad)
inc
mov
add
add
mov
add
sbb
arpl
add
or
push
and
and
add
add
inc
pop
pop
or
sub
add
and
add
or
sub
or
pop
pop
xor
adc
sbb
and
loop
add
add
call
push
and
add
add
pop
sub
adc
pop
inc
xchg
and
add
pop
adc
inc
jne
add
add
adc
push
xchg
and
repnz
pop
adc
call
push
cmp
pop
cmp
add
call
add
dec
cmp
(bad)
(bad)
call
add
dec
add
pop
(bad)
(bad)
inc
inc
cmp
(bad)
(bad)
inc
mov
adc
sbb
adc
and
add
add
lods
add
add
pop
sub
sub
add
jmp
adc
add
sub
add
xor
add
add
adc
add
sub
scas
add
add
fiadd
add
cmp
and
add
add
add
add
and
fst
cmp
lea
add
sub
js
sbb
add
inc
or
add
ins
add
add
add
out
add
add
add
add
add
inc
add
add
add
add
add
sbb
add
pop
sub
fld
add
cmp
add
inc
push
add
add
add
add
(bad)
(bad)
(bad)
mov
add
add
add
pop
and
add
add
loopne
add
es
mov
cmp
add
add
sbb
aas
add
push
and
add
cmp
sub
cmp
call
cmp
(bad)
jmp
sub
pop
add
add
add
add
pop
add
add
or
add
sbb
xchg
add
push
and
cli
add
add
sldt
sub
sbb
sub
(bad)
jmp
add
pop
or
cmp
(bad)
(bad)
jmp
sub
in
add
add
pushf
add
add
jmp
add
pop
or
and
add
push
jnp
add
sub
sub
sub
out
(bad)
jmp
sub
mov
or
add
add
add
rcr
add
add
or
add
sbb
hlt
(bad)
loope
sub
add
push
sub
sub
dec
(bad)
(bad)
jmp
push
sub
cmps
(bad)
(bad)
call
cmp
(bad)
(bad)
jmp
sub
mov
add
cmp
(bad)
jmp
jmp
add
cmp
(bad)
jmp
add
add
cmp
(bad)
jmp
mov
imul
mov
(bad)
jmp
mov
add
cmp
(bad)
(bad)
jmp
mov
add
cmp
(bad)
(bad)
jmp
jnp
add
cmp
(bad)
(bad)
jmp
mov
sar
(bad)
call
add
mov
or
sub
or
sub
push
and
add
add
push
add
add
add
sub
add
push
sub
add
add
or
or
pop
pop
pop
sub
sub
sub
add
repz
add
sub
repnz
add
movntps
and
add
add
xchg
add
sub
sub
sub
add
in
sub
add
sub
repnz
add
add
and
add
sub
sub
jmp
add
sub
add
add
sub
sub
add
cli
sub
add
or
cmc
adc
add
jno
add
adc
add
jle
add
add
sub
add
jle
add
add
cmp
add
add
sub
daa
add
add
add
add
add
rol
add
rol
add
retf
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
mov
sbb
in
add
add
mov
add
pop
or
add
in
add
sub
add
sub
add
popa
pop
addr16
cmp
add
add
add
add
adc
add
sub
add
sub
outs
(bad)
(bad)
call
add
add
pop
sub
push
sub
adc
push
(bad)
(bad)
inc
mov
add
outs
add
or
sbb
add
cmp
pop
pop
or
pop
or
add
xor
add
pop
adc
sub
(bad)
dec
sbb
sub
push
and
and
fild
add
add
(bad)
(bad)
(bad)
call
or
cmc
pop
je
add
add
adc
dec
(bad)
add
pop
adc
loop
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
sar
(bad)
call
add
or
(bad)
dec
cmp
(bad)
(bad)
call
add
adc
(bad)
inc
adc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
add
adc
add
add
add
jle
add
add
cmp
add
jle
add
add
aaa
add
add
pop
cmp
add
add
add
add
add
add
add
add
mov
add
add
xchg
add
add
add
add
add
add
add
add
mov
cmp
add
add
lea
add
xchg
pop
cmp
add
and
add
pop
cmp
add
add
mov
add
add
add
cmp
add
add
push
add
add
cmp
add
pop
cmp
add
add
sub
(bad)
(bad)
cmp
add
add
pop
jbe
push
popa
inc
add
add
or
add
push
adc
call
sub
adc
sbb
(bad)
(bad)
inc
mov
add
outs
add
or
sbb
(bad)
(bad)
inc
pop
pop
or
adc
add
js
add
or
push
sub
xor
adc
pop
or
pop
adc
call
or
cmc
adc
pop
aaa
xchg
and
xchg
add
pop
adc
inc
jne
add
add
adc
and
and
cmp
add
add
call
push
cmp
pop
cmp
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
dec
cmp
pop
cmp
(bad)
(bad)
call
add
inc
cmp
(bad)
(bad)
inc
add
adc
add
fild
add
cmp
add
cmp
popf
add
add
sbb
pusha
es
add
add
xchg
add
add
xchg
add
add
xchg
add
add
cdq
add
add
sub
xchg
add
add
cwde
add
add
sub
jle
add
add
cmp
push
sub
push
sub
sub
es
sub
es
pop
xor
sbb
sub
add
push
je
add
add
mov
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
(bad)
jl
(bad)
call
add
add
sub
sub
lds
add
cmp
(bad)
jmp
les
add
cmp
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
jmp
sub
add
cmp
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
dec
cmp
(bad)
dec
cmp
(bad)
inc
adc
add
add
add
add
adc
sub
pop
add
mov
push
je
add
add
and
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
sub
sbb
lds
add
sub
pop
add
add
sub
add
push
sub
add
push
sub
mov
les
add
sub
xor
sbb
add
add
pop
sub
add
sub
sbb
cmp
sub
add
xor
add
add
push
add
adc
sub
inc
rol
push
jae
add
or
mov
add
add
leave
add
push
es
aaa
add
enter
sub
sbb
sub
sub
add
push
jge
add
add
sub
add
push
sub
es
sub
pop
add
add
add
imul
add
add
scas
inc
pop
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
push
add
sbb
fsubr
add
push
jle
add
add
sub
add
sub
add
push
sub
add
add
sub
pop
call
add
add
sub
sub
sub
add
jmp
adc
add
sub
add
movntps
and
add
add
fwait
add
add
pop
sub
sub
add
in
sub
add
sub
repnz
pop
sub
or
sub
jp
movntps
and
add
add
out
add
add
pop
sub
sub
add
in
sub
add
sub
add
sub
sub
xchg
add
sub
add
sub
sub
add
cli
sub
add
or
cmc
jp
movntps
and
add
add
pop
sub
sub
add
in
sub
repnz
sub
sub
add
cli
outs
rol
add
sub
adc
push
add
add
adc
add
add
je
add
jle
add
add
jno
add
sbb
jb
add
cmp
add
add
add
add
add
add
sbb
add
pop
add
add
add
sbb
add
add
add
add
push
cmp
add
cmp
add
pop
sbb
pop
cmp
add
sub
add
inc
add
add
pop
pop
push
popa
inc
add
add
sldt
add
add
add
add
xchg
pop
adc
xchg
sub
mov
and
sub
pop
sub
adc
mov
add
pop
(bad)
(bad)
inc
mov
add
add
push
add
adc
and
adc
and
pop
adc
ss
(bad)
call
sub
add
sbb
mov
add
sbb
imul
or
pop
pop
push
sub
or
add
and
sub
or
sub
and
add
add
sbb
pop
xor
push
cmp
(bad)
(bad)
call
push
and
and
add
jle
add
add
inc
jle
add
add
inc
xchg
add
pop
and
pop
adc
int
(bad)
call
sub
sub
adc
adc
push
sub
add
add
add
pop
add
add
add
add
add
add
add
add
retf
add
push
sub
jmp
add
call
push
cmp
add
xchg
(bad)
call
add
test
(bad)
dec
cmp
add
call
add
mov
(bad)
inc
mov
cmp
add
xor
add
add
adc
add
add
dec
add
add
add
add
dec
add
add
dec
cmp
add
inc
or
add
aaa
add
add
add
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
sub
add
sbb
or
add
sub
add
add
cmp
add
cmp
add
pop
xchg
cmp
add
add
xchg
pop
cmp
add
add
(bad)
cmp
add
add
pop
inc
pop
push
popa
inc
add
add
sbb
add
sbb
add
adc
and
and
fild
add
add
pop
(bad)
(bad)
call
sub
pop
sub
adc
sbb
ins
adc
pop
dec
xchg
and
fld
add
add
inc
mov
add
sub
or
sbb
add
inc
mov
add
outs
ins
add
or
sbb
add
inc
pop
pop
or
add
add
cmp
add
or
add
sbb
cmp
(bad)
dec
pop
xor
add
add
pop
adc
call
push
pop
ja
and
sub
pop
je
add
add
sbb
aaa
(bad)
(bad)
call
adc
call
push
cmp
pop
cmp
add
call
add
dec
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
call
add
inc
cmp
(bad)
(bad)
inc
adc
add
jne
add
xor
add
jle
add
add
das
add
add
add
add
sub
add
sub
sub
add
adc
add
add
add
add
add
add
add
add
lea
add
pop
add
add
add
add
add
add
add
add
add
cmp
add
ror
add
push
es
cmp
add
add
out
add
sub
add
cmp
add
add
xchg
add
xchg
and
add
and
add
xlat
add
add
mov
xlat
add
add
fadd
add
popa
pop
sub
popa
sbb
inc
add
add
adc
add
adc
pop
cmp
pop
adc
call
push
and
and
add
pop
sub
push
or
push
pop
xchg
and
add
pop
adc
inc
mov
add
sbb
mov
add
sub
add
or
pop
pop
jne
push
sub
add
pop
adc
inc
pop
pop
or
ins
or
pop
or
pop
or
or
adc
call
push
pop
sub
pop
sub
pop
sub
or
add
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
call
push
cmp
(bad)
(bad)
call
add
inc
inc
and
(bad)
inc
add
adc
add
inc
add
add
add
adc
add
add
add
add
sub
add
add
inc
or
add
mov
add
add
add
add
add
mov
add
pop
add
add
add
add
add
sldt
add
add
add
into
add
push
es
or
mov
add
mov
cmp
add
add
add
test
add
mov
add
and
cmp
add
add
add
add
or
add
pop
or
mov
cmp
call
sub
push
sub
adc
(bad)
(bad)
inc
mov
add
sbb
mov
add
sub
add
or
sub
push
adc
push
(bad)
(bad)
inc
pop
pop
or
or
sbb
add
cmp
(bad)
dec
sbb
and
imul
call
add
add
pop
push
cmp
(bad)
(bad)
call
add
push
(bad)
(bad)
call
in
pop
jne
add
add
sbb
(bad)
(bad)
call
add
call
add
clc
(bad)
(bad)
call
add
xor
(bad)
dec
cmp
add
xor
(bad)
inc
xor
cmp
(bad)
inc
cmp
(bad)
(bad)
call
add
inc
(bad)
(bad)
inc
add
sub
shr
add
sti
sahf
and
add
add
add
add
add
add
or
and
sub
or
add
sub
sub
add
push
sub
shr
add
add
add
sub
add
push
sub
push
sub
jle
add
add
add
add
cmc
sub
add
push
sub
add
add
add
sub
fld
add
sub
sub
add
push
sub
sub
add
push
sub
add
add
add
loopne
add
sub
sub
sub
add
cli
sub
add
sub
jp
movntps
and
add
add
aam
add
sub
sub
sub
add
in
sub
add
sub
repnz
pop
sub
or
sub
sub
add
sub
add
push
sub
add
sub
sub
sbb
add
sub
add
movntps
and
mov
add
sub
sub
sub
add
in
sub
add
sub
repnz
sub
sub
add
cli
sub
add
or
cmc
adc
add
test
add
cmp
add
jle
add
add
inc
add
add
add
add
aas
add
add
pop
cmp
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
loope
add
cmp
add
add
pop
xchg
and
inc
pop
cmp
add
add
movs
push
cmp
add
add
cmc
add
add
xchg
cmp
add
add
cmc
add
add
pop
pop
push
push
sub
add
add
add
add
add
add
add
popf
add
add
pop
or
(bad)
(bad)
cmp
call
add
xchg
add
add
pop
sub
pop
or
loopne
or
add
cmp
pop
or
jmp
jo
add
or
or
jmp
jno
add
or
or
inc
pop
pop
or
and
and
call
adc
add
jle
and
add
pop
or
call
sub
sbb
sbb
cmp
(bad)
(bad)
inc
jne
add
add
sbb
adc
add
pop
or
call
add
mov
(bad)
call
add
dec
cmp
add
clc
(bad)
(bad)
dec
dec
cmp
cmp
cmp
(bad)
(bad)
inc
cmp
add
adc
add
ja
add
cmp
add
jle
add
add
xor
add
jle
add
add
cmp
add
add
sub
sub
or
add
jl
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
loop
add
es
sub
add
add
mov
cmp
add
add
out
add
add
cmps
cmp
add
add
lock
add
pop
cmp
add
add
add
add
adc
push
pop
push
and
adc
call
pop
pop
and
pop
sub
adc
(bad)
adc
or
adc
and
and
int
add
add
inc
mov
add
outs
jb
add
or
adc
xor
(bad)
inc
pop
pop
or
and
cmp
pop
or
add
add
add
xchg
pop
adc
dec
sbb
sbb
push
pop
inc
xchg
push
sub
add
and
call
add
call
test
sbb
add
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
(bad)
call
add
inc
or
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
inc
adc
add
jo
add
or
add
jle
add
add
das
add
add
sub
add
sub
add
sbb
sub
add
cmp
add
add
add
add
add
scas
add
add
add
add
add
push
add
add
add
mov
add
add
add
push
add
add
cmp
add
add
cli
add
add
sbb
add
pop
pop
sub
cmp
add
add
lods
cmp
add
add
out
add
add
push
pop
push
popa
inc
add
add
push
add
add
add
add
and
and
fild
add
sub
(bad)
(bad)
call
or
repz
sub
sbb
push
sub
add
adc
inc
xchg
and
mov
add
cmp
(bad)
inc
sub
or
push
sub
add
pop
add
sbb
adc
and
and
add
pop
or
sub
(bad)
dec
pop
or
pop
sub
sbb
dec
ud0
jmp
sbb
push
adc
inc
add
add
add
add
add
add
add
jecxz
add
sub
cmp
(bad)
dec
call
add
sar
(bad)
dec
sar
(bad)
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
or
(bad)
inc
cmp
(bad)
inc
or
(bad)
call
xor
add
add
cmp
add
jle
add
add
or
add
jle
add
add
add
dec
cmp
or
add
push
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
scas
add
add
sub
shl
add
push
es
or
mov
add
mov
cmp
add
add
lds
add
pop
sub
pop
cmp
cmp
add
sub
add
mov
sbb
add
add
pop
add
add
(bad)
call
add
sbb
add
pop
or
inc
mov
add
outs
jne
add
or
or
inc
pop
pop
or
push
sub
pop
sub
sbb
sbb
call
sub
adc
jae
push
sub
add
pop
or
inc
sub
add
jnp
add
pop
or
call
add
icebp
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
dec
dec
cmp
(bad)
(bad)
call
add
xor
(bad)
dec
inc
cmp
(bad)
inc
inc
(bad)
(bad)
inc
xor
sub
add
push
sub
add
push
sub
add
adc
add
sbb
add
cmp
add
pop
adc
add
es
add
or
pop
adc
add
add
lock
add
push
and
add
add
inc
add
add
add
sub
ja
add
sbb
pop
push
sub
add
push
pop
pop
sub
ret
add
add
push
sub
add
push
mov
add
add
add
or
or
cmp
test
push
sub
add
push
mov
add
adc
add
ja
add
pop
or
sbb
mov
add
pop
push
sub
add
push
mov
add
add
add
or
ret
add
add
add
add
add
add
add
(bad)
(bad)
ds
(bad)
dec
add
add
(bad)
(bad)
(bad)
std
add
add
add
fadd
add
mov
add
add
add
add
(bad)
(bad)
(bad)
clc
add
add
add
mov
add
rol
add
(bad)
(bad)
(bad)
inc
(bad)
(bad)
call
add
add
sub
add
sub
add
push
or
add
push
(bad)
(bad)
jmp
add
add
add
add
add
add
push
add
add
add
add
(bad)
inc
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
dec
add
test
add
add
adc
cmp
(bad)
(bad)
jmp
cmp
push
sub
add
push
mov
add
add
or
or
add
or
push
sub
add
push
cmp
(bad)
(bad)
jmp
cmp
push
sub
add
push
outs
ja
add
sbb
sti
(bad)
(bad)
jmp
outs
pop
push
sub
add
push
mov
add
outs
ja
add
sbb
(bad)
jmp
sub
push
sub
add
push
mov
add
add
or
cmp
(bad)
(bad)
jmp
ss
push
sub
add
push
mov
add
add
add
or
sub
(bad)
jmp
pop
(bad)
(bad)
(bad)
inc
sub
add
push
or
or
icebp
add
push
cmp
mov
(bad)
jmp
add
add
or
add
add
cmp
(bad)
(bad)
call
cmp
jmp
out
push
and
push
sub
add
push
adc
adc
outs
ja
add
sub
pop
push
sub
add
push
mov
add
add
pop
adc
outs
ja
add
pop
adc
ds
(bad)
jmp
mov
push
sub
add
push
mov
add
outs
ja
add
pop
or
icebp
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
sub
add
push
sub
add
push
or
or
(bad)
(bad)
cmp
(bad)
inc
push
sub
add
push
mov
add
outs
ja
add
pop
push
cmp
std
(bad)
(bad)
cmp
(bad)
inc
push
sub
add
push
sub
add
push
mov
add
outs
ja
add
push
cmp
std
(bad)
(bad)
cmp
(bad)
(bad)
inc
push
sub
add
push
adc
adc
outs
ja
add
sub
add
push
sub
add
push
cmp
(bad)
(bad)
jmp
pop
adc
sahf
std
(bad)
(bad)
cmp
(bad)
(bad)
inc
push
sub
add
push
mov
add
outs
ja
add
pop
adc
cmp
add
add
sub
sub
add
repnz
icebp
sub
add
push
sub
sub
add
push
sub
add
dec
pop
or
and
add
push
add
sub
add
sub
add
jle
add
add
pop
pop
sbb
add
add
sbb
add
or
pop
inc
push
inc
sub
sub
add
xor
add
add
adc
outs
cmp
add
cmp
add
sub
push
sub
push
sub
sub
pop
and
sub
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
dec
add
add
pop
es
sub
fisubr
push
sub
ficomp
push
sub
sub
add
push
sub
push
sub
push
push
sub
add
push
fcom
and
pop
sub
cmp
or
add
cmp
cmp
sub
add
add
add
add
or
push
pop
add
add
add
mov
movntps
and
add
add
mov
add
sub
sub
sub
sub
add
push
sub
sub
add
sub
out
add
sub
clc
add
add
mov
sqrtps
add
jmp
sub
sub
add
push
sub
sub
jmp
sub
add
cli
sub
add
or
cmc
sub
add
sub
clc
add
pop
sub
or
sub
sub
sub
add
cli
sub
add
push
sub
sub
add
fwait
add
add
add
add
lock
add
sub
cmc
add
sub
add
stos
add
add
add
add
lock
add
sub
cmc
add
sub
add
xchg
add
add
add
add
lock
add
sub
cmc
add
jp
movntps
and
add
add
dec
add
add
pop
sub
sub
add
in
sub
add
sub
repnz
sub
sub
add
cli
sub
add
sub
sub
add
sbb
add
add
lock
add
sub
add
sub
add
mov
add
add
lock
cmc
add
sub
add
repz
add
add
add
lock
add
sub
cmc
add
sub
add
stos
add
add
add
add
lock
add
sub
cmc
add
sub
add
cmp
add
sub
add
lock
add
sub
cmc
add
sub
add
mov
add
sub
add
lock
add
sub
cmc
add
sub
add
jne
add
sub
add
lock
add
sub
cmc
add
dec
sub
pop
gs
sub
add
imul
cmp
add
sub
sub
add
add
add
add
add
lock
add
push
sub
add
sub
add
sub
add
push
sub
add
sub
sub
add
cli
sub
add
push
sub
sub
add
jbe
add
sub
add
lock
add
sub
add
sub
sub
add
cli
outs
js
add
sub
sub
add
sub
add
push
sub
add
sub
sub
add
cli
sub
cmc
jp
movntps
and
add
add
push
add
add
pop
sub
sub
add
in
sub
add
sub
repnz
or
add
mov
add
add
lock
cmc
add
sub
sub
add
cli
sub
add
push
sub
sub
sub
add
cli
outs
xor
add
sub
sub
add
pop
add
sub
add
lock
add
sub
add
adc
add
jae
add
add
adc
add
add
cmp
add
es
add
add
sub
add
sub
sub
add
inc
or
add
xor
add
mov
add
add
add
sbb
add
add
add
add
add
int
add
aam
add
add
add
add
add
or
add
es
add
add
pusha
xchg
and
sbb
out
add
sub
add
push
and
add
fild
add
sub
add
loopne
add
popa
push
sub
push
popa
inc
add
add
adc
push
pop
pop
xchg
and
push
add
pop
adc
cmp
call
pop
adc
inc
mov
add
sbb
mov
add
sub
add
or
adc
inc
pop
pop
or
sbb
pop
push
or
jmp
add
or
pop
or
xor
sbb
add
call
push
pop
jg
and
pop
add
pop
sub
sbb
sbb
pop
and
and
add
pop
adc
inc
jne
add
add
push
and
ss
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
dec
cmp
add
inc
inc
sbb
(bad)
inc
adc
add
add
add
jle
add
add
cmp
add
jle
add
add
cmp
add
sbb
cmp
add
cmp
add
add
add
add
add
mov
add
xchg
add
dec
add
add
add
add
add
add
add
add
add
add
add
push
cmp
add
add
or
add
and
and
adc
inc
add
sub
add
add
add
popa
pop
adc
add
add
or
add
or
add
sbb
add
test
(bad)
call
sub
sbb
lock
or
add
jb
(bad)
inc
mov
add
sub
add
pop
or
add
sub
(bad)
inc
mov
add
sub
add
push
push
sub
and
and
add
add
dec
and
add
or
or
xor
sbb
add
and
push
pop
pop
xchg
push
sub
add
pop
sub
adc
add
pop
adc
add
(bad)
jmp
push
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
or
sub
sub
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
sar
call
add
mov
cmp
(bad)
(bad)
call
add
call
add
cli
(bad)
(bad)
inc
sti
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
add
adc
push
add
add
and
add
jle
add
add
sub
add
jle
add
add
sub
add
sub
add
add
sub
inc
or
add
sbb
add
rol
add
sub
add
jge
add
add
add
xchg
add
mov
add
add
add
add
add
add
push
add
push
es
add
add
or
pop
cmp
add
add
lods
push
push
cmp
add
add
sbb
out
add
sub
cmp
add
add
and
popa
inc
add
add
add
add
pop
pop
xchg
and
sub
jle
add
add
mov
add
add
mov
add
add
pop
sahf
pop
push
sub
dec
(bad)
(bad)
call
sub
adc
sbb
add
inc
mov
add
sbb
mov
add
sub
or
sbb
add
inc
pop
pop
or
lods
or
add
sub
and
add
add
push
sub
pop
xor
sbb
(bad)
(bad)
call
sub
pop
jne
add
add
adc
and
add
add
pop
adc
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
call
add
inc
adc
(bad)
inc
inc
add
xor
add
add
add
add
jle
add
add
xor
add
jle
add
add
sub
sub
sub
add
inc
or
add
xchg
add
add
add
add
add
add
add
add
add
mov
add
add
add
fld
add
fild
add
xchg
add
add
lar
push
es
cmp
jmp
add
and
and
cmp
add
add
mov
add
sbb
loopne
add
sub
cmp
add
add
sub
add
jno
add
add
jno
add
and
add
add
push
sub
pop
push
popa
inc
add
add
adc
add
adc
pop
sub
pop
adc
call
pop
pop
and
and
sub
add
sbb
add
inc
sub
add
or
adc
inc
pop
pop
or
and
(bad)
call
js
and
add
or
sbb
pop
adc
call
sub
adc
pop
sub
pop
adc
jmp
sub
adc
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
call
add
inc
sbb
(bad)
inc
cmp
(bad)
(bad)
inc
add
xor
add
add
aas
add
adc
add
add
sub
add
jle
add
add
daa
add
add
inc
cmp
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
fld
add
das
add
add
add
add
adc
add
es
cmp
add
add
mov
add
cmp
add
add
cmp
and
out
add
sbb
cmp
add
add
in
add
popa
pop
sub
push
popa
inc
add
add
or
add
sbb
(bad)
(bad)
call
sub
adc
sbb
add
inc
mov
add
sub
add
or
adc
push
(bad)
(bad)
inc
pop
pop
or
mov
add
or
jnp
cmp
sub
or
add
sbb
jle
add
add
aam
add
jle
add
add
aam
add
xchg
add
inc
pop
sahf
pop
xor
push
cmp
(bad)
(bad)
call
pop
and
and
adc
call
push
pop
and
pop
sub
pop
je
add
add
sbb
add
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
call
add
inc
push
(bad)
(bad)
inc
cmp
pop
sbb
cmc
add
push
add
sub
add
sub
add
sahf
and
add
add
add
add
add
add
or
and
(bad)
loope
sub
sub
or
add
sub
sub
add
push
sub
adc
add
add
add
add
sbb
sub
es
sub
pop
pop
or
cmp
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
sub
sub
add
add
sub
leave
sub
sbb
sub
xor
sbb
rcl
sub
add
push
sub
add
push
sub
sbb
push
add
push
sub
add
xor
add
add
inc
add
adc
sub
add
push
sub
adc
(bad)
adc
sbb
sub
es
or
sub
add
push
cmp
sub
add
add
add
sbb
add
sub
add
push
and
add
and
push
add
push
jge
add
add
sub
adc
add
sub
adc
add
add
add
add
sbb
xchg
fst
sub
add
push
add
sbb
add
or
sub
adc
(bad)
adc
sub
inc
or
add
movs
(bad)
(bad)
call
(bad)
jmp
(bad)
(bad)
inc
add
add
(bad)
jmp
(bad)
(bad)
dec
add
add
pop
(bad)
(bad)
jmp
pop
sub
add
jecxz
add
and
add
add
add
sub
or
add
push
sub
add
push
cmp
adc
clc
add
add
or
jo
add
es
adc
jle
add
add
jnp
add
add
outs
add
add
sub
add
sub
add
push
push
adc
and
xor
add
inc
outs
cmp
or
or
push
jae
add
or
cmp
add
jnp
add
add
push
add
push
adc
adc
adc
outs
cmp
add
es
cmp
add
add
add
xor
sub
add
adc
add
pop
pop
cmp
add
add
cmp
sbb
add
adc
sub
add
push
sub
cmp
add
add
clc
add
add
add
add
add
push
cmp
add
add
or
sbb
add
adc
add
add
add
add
jnp
add
add
push
sub
add
es
and
pushf
add
add
adc
sbb
add
adc
pop
adc
pop
(bad)
add
add
add
add
pop
jle
add
or
add
or
sbb
add
or
add
add
add
push
es
and
pop
adc
pop
sub
or
adc
pop
sub
add
dec
adc
add
(bad)
call
or
inc
adc
adc
add
pop
and
xor
push
push
adc
mov
and
add
pop
and
or
sbb
add
adc
sbb
adc
add
pop
sub
add
push
adc
cmp
add
inc
sub
add
enter
movs
(bad)
(bad)
(bad)
cld
(bad)
(bad)
dec
(bad)
call
(bad)
call
add
add
add
sti
add
add
add
add
(bad)
(bad)
(bad)
in
std
(bad)
(bad)
jnp
add
sbb
(bad)
(bad)
jl
(bad)
dec
(bad)
call
add
add
add
add
add
add
(bad)
(bad)
dec
(bad)
dec
(bad)
(bad)
(bad)
fld
add
push
add
add
add
add
(bad)
(bad)
call
add
add
add
adc
add
fadd
add
es
(bad)
jmp
(bad)
call
add
xor
add
scas
add
add
std
(bad)
inc
add
sbb
push
(bad)
(bad)
call
or
and
add
adc
pop
adc
inc
(bad)
(bad)
call
adc
push
pop
pop
ds
add
add
pop
cmp
(bad)
(bad)
call
adc
jle
add
add
jnp
add
add
push
add
push
adc
xor
add
inc
sub
add
push
adc
sbb
push
cmp
(bad)
(bad)
jmp
adc
adc
pop
and
icebp
(bad)
(bad)
call
adc
pop
or
out
(bad)
inc
add
push
pop
sub
add
adc
pop
adc
sar
(bad)
(bad)
jle
add
add
jnp
add
add
rol
add
add
add
call
push
sub
adc
pop
sub
(bad)
(bad)
(bad)
cmp
(bad)
inc
or
sbb
add
adc
pop
adc
mov
(bad)
call
adc
pop
sbb
cmp
jle
add
add
jnp
add
add
and
inc
push
add
add
daa
push
cmp
(bad)
jmp
fnstsw
add
add
add
push
pop
sub
add
adc
pop
sbb
inc
(bad)
(bad)
jmp
mov
add
lea
add
add
push
adc
push
and
add
add
(bad)
(bad)
(bad)
jle
add
add
jnp
add
add
push
add
push
adc
push
pop
adc
sbb
add
add
push
es
push
cmp
adc
sub
dec
pop
inc
sub
add
push
adc
adc
cmp
sbb
pop
add
push
cmp
std
(bad)
jmp
jle
add
add
jnp
add
add
push
add
push
adc
push
pop
adc
sbb
add
add
push
cmp
cld
(bad)
call
adc
pop
or
push
cmp
jle
add
add
jnp
add
add
push
add
push
adc
adc
push
and
adc
outs
cmp
add
es
and
cmp
(bad)
jle
add
add
jnp
add
add
loop
add
and
call
or
pop
add
push
cmp
(bad)
(bad)
call
sbb
push
std
(bad)
inc
sbb
and
jnp
add
add
sbb
add
or
adc
push
cmp
add
call
or
daa
std
(bad)
call
or
or
(bad)
push
add
or
jnp
add
add
sbb
add
and
or
add
add
add
push
sub
pop
adc
sub
adc
sub
add
push
push
adc
fiadd
pop
sub
adc
add
add
add
add
mov
add
pushf
add
add
add
and
add
add
sub
sub
sub
sub
or
add
repz
repnz
add
push
sub
add
pop
sub
or
sub
jp
movntps
and
add
add
add
add
sub
sub
sub
add
in
sub
add
sub
repnz
sub
sub
add
cli
sub
add
sub
sub
add
retf
add
add
add
add
lock
add
sub
cmc
add
mov
adc
adc
adc
cmps
add
add
rol
add
or
add
in
add
jmp
sub
sub
out
jp
movntps
and
add
add
rol
add
pop
sub
sub
add
in
sub
add
push
sub
add
pop
sub
sub
sub
sub
sub
add
cmc
add
hlt
outs
sub
out
add
sub
add
cwde
add
add
add
add
lock
add
push
sub
add
sub
sub
sub
sub
sub
sub
add
cmc
add
hlt
outs
xor
out
add
stos
sub
sub
sub
sub
sub
add
out
add
out
add
sub
push
add
add
push
sub
add
movntps
and
nop
add
add
pop
sub
sub
add
in
sub
add
sub
add
sub
sub
sub
and
scas
add
add
adc
add
call
sub
add
sub
sub
add
sub
add
or
add
jne
add
sub
add
lock
cmc
add
sub
sub
sub
sub
sub
sub
add
cmc
add
hlt
outs
xor
add
sub
add
push
sub
sub
sub
add
imul
add
push
sub
add
add
or
add
add
add
add
add
lock
add
push
sub
add
sub
add
fld
add
sub
add
lock
add
sub
add
inc
sbb
xchg
sbb
add
sub
add
sub
add
sub
sub
add
cli
sub
add
sub
adc
add
add
add
sbb
push
sub
xchg
add
cmp
mov
add
cmp
mov
add
cmp
add
add
sub
add
sub
es
push
sub
es
cmp
sub
add
push
sub
sub
inc
push
push
sub
xor
sub
inc
pop
add
add
(bad)
(bad)
call
(bad)
(bad)
inc
add
add
add
add
add
add
push
sbb
sub
mov
pop
ds
(bad)
call
leave
sub
cmp
(bad)
inc
cmp
(bad)
inc
jno
(bad)
inc
inc
cmp
(bad)
jmp
dec
add
push
cmp
(bad)
jmp
push
add
push
cmp
(bad)
jmp
dec
add
push
cmp
(bad)
dec
cmp
(bad)
inc
inc
sbb
push
add
sub
add
sub
add
push
add
push
add
push
sub
or
add
pop
add
add
add
add
lock
add
sub
add
xchg
sub
sub
or
sub
sub
sub
add
icebp
add
lock
sub
sub
call
pop
sub
or
sub
sub
sub
add
cli
sub
add
or
cmc
adc
add
push
add
xor
add
jle
add
add
and
add
jle
add
add
and
add
sub
and
add
inc
or
add
jns
add
xchg
add
add
add
add
add
and
add
fiadd
add
fadd
add
xchg
add
add
add
add
push
add
push
es
add
add
mov
add
xchg
and
add
pop
cmp
add
add
sub
sub
add
sbb
fiadd
add
sub
add
fild
add
popa
pop
and
add
add
or
add
sbb
add
call
sub
adc
and
and
push
cmp
add
sub
sbb
add
push
(bad)
(bad)
inc
mov
add
outs
add
or
adc
pop
and
add
pop
adc
inc
pop
pop
or
cmp
add
or
retf
add
add
push
cmp
pop
or
adc
pop
pop
imul
(bad)
(bad)
(bad)
call
push
pop
push
xchg
and
jmp
add
in
pop
sub
adc
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
push
cmp
add
dec
cmp
(bad)
call
add
inc
cmp
(bad)
inc
sbb
(bad)
inc
add
xor
add
add
adc
add
add
push
add
add
add
add
dec
add
add
pop
cmp
add
push
cmp
add
inc
or
add
rol
add
fld
add
add
add
fld
add
arpl
add
rol
add
xor
add
xchg
add
add
add
movs
add
add
add
add
push
add
push
cmp
add
add
js
and
fwait
add
and
add
push
add
add
mov
cmp
add
add
add
add
sub
add
add
add
popa
pop
push
push
popa
inc
add
add
or
add
sbb
add
call
pop
pop
or
and
push
sub
or
(bad)
(bad)
inc
mov
add
add
add
or
adc
pop
pop
xchg
and
adc
inc
pop
pop
or
sub
add
or
fld
add
or
add
sbb
pop
xor
adc
pop
jae
and
cld
add
pop
adc
call
pop
pop
and
sbb
and
sub
pop
jne
add
add
sbb
adc
and
and
add
jle
add
add
addr16
add
add
addr16
add
and
sahf
pop
adc
call
push
cmp
pop
cmp
add
call
push
cmp
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
call
add
inc
inc
idiv
(bad)
inc
adc
add
imul
add
jle
add
add
and
add
jle
add
add
and
add
sub
and
add
inc
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
mov
add
add
add
mov
add
rcl
push
sbb
jecxz
add
es
sub
sub
add
sbb
fiadd
add
sub
add
fild
add
popa
pop
dec
pop
cmp
add
add
sub
inc
add
add
sbb
add
adc
add
and
add
push
(bad)
call
sub
adc
(bad)
adc
or
adc
aam
add
pop
adc
dec
(bad)
(bad)
inc
sub
adc
cmp
(bad)
inc
pop
pop
or
and
adc
add
sub
add
pop
adc
sbb
(bad)
call
sub
adc
add
and
add
(bad)
(bad)
(bad)
inc
sub
push
and
and
add
pop
adc
call
add
call
push
cmp
(bad)
(bad)
call
add
fdivr
(bad)
call
add
pop
(bad)
(bad)
dec
cmp
(bad)
call
add
sbb
(bad)
inc
sbb
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
add
adc
pop
add
add
jle
add
add
push
add
add
add
add
dec
add
add
cmp
add
adc
xchg
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
sbb
add
pop
inc
xchg
and
cmp
add
add
stos
cmp
add
add
adc
add
popa
pop
ins
jle
add
add
xor
add
add
xor
pop
and
pop
pop
sub
pop
push
popa
inc
add
add
push
add
add
and
and
add
and
cmp
(bad)
call
sub
cmp
cmp
add
sub
and
and
add
cmp
(bad)
(bad)
inc
mov
add
sbb
mov
add
add
pop
add
sbb
add
or
pop
pop
or
add
pop
push
add
sbb
adc
pop
xchg
and
add
pop
push
sub
(bad)
(bad)
call
add
jne
and
add
jmp
jmp
pop
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
push
add
push
sub
adc
(bad)
dec
call
add
stos
(bad)
(bad)
dec
stos
(bad)
(bad)
dec
cmp
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
out
(bad)
inc
dec
add
out
(bad)
call
xor
add
add
or
add
jle
add
add
sbb
add
jle
add
add
sbb
add
sub
enter
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
mov
add
and
add
add
push
add
push
es
cmp
add
add
cmp
lods
push
cmp
add
add
or
add
sub
add
int
add
popa
pop
cs
cmp
add
add
add
add
adc
add
adc
xchg
and
loop
add
cmp
(bad)
call
not
adc
xor
and
add
pop
sbb
push
(bad)
(bad)
inc
mov
add
sbb
mov
add
outs
xchg
add
or
sub
or
inc
pop
pop
or
sbb
adc
add
ins
xchg
and
rol
pop
or
call
add
add
pop
sub
pop
or
inc
sub
or
dec
call
add
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
dec
dec
cmp
(bad)
(bad)
dec
inc
inc
sub
cmp
(bad)
(bad)
inc
add
sbb
xchg
add
push
add
sub
add
sub
add
out
pop
sbb
scas
add
add
stc
add
add
adc
push
sub
xor
add
sbb
sub
in
add
push
sub
sub
add
push
sub
sub
add
sub
jae
add
push
sub
sub
sub
add
cli
sub
add
sub
jbe
pop
sub
sub
sub
sub
sub
add
cmc
sub
add
sub
sub
add
sub
add
push
and
add
add
add
add
and
add
sub
add
push
sub
add
xor
add
add
adc
sbb
popa
add
add
sub
cmp
add
adc
push
adc
push
sub
add
sub
sbb
sbb
and
adc
xchg
add
adc
sbb
or
sub
add
adc
sub
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
dec
(bad)
(bad)
inc
add
add
retf
sub
adc
adc
and
and
and
mov
add
fiadd
fiadd
adc
sub
int3
add
add
pop
or
add
js
add
pop
sbb
add
adc
adc
(bad)
call
or
cmp
add
push
or
jge
add
adc
add
call
sub
add
add
call
add
add
add
add
adc
(bad)
call
or
adc
(bad)
call
push
sbb
ins
add
add
pop
cmp
add
sub
pop
cmp
add
adc
or
push
(bad)
call
adc
jo
add
sub
add
cmp
(bad)
jmp
push
sub
add
cmp
add
add
sub
add
push
adc
pop
push
sub
add
cmp
add
add
adc
cmp
add
(bad)
add
add
add
push
sub
add
adc
pop
or
outs
add
push
cmp
add
add
adc
adc
(bad)
call
pop
pop
cmp
fild
add
adc
pop
pop
adc
pop
aaa
cmp
add
add
add
or
pop
and
add
add
adc
(bad)
call
or
add
add
add
or
add
add
add
rcr
add
add
or
add
sbb
sub
add
push
sub
add
sub
add
das
add
add
jp
add
xor
add
sbb
push
add
adc
and
(bad)
call
es
xor
cmp
add
push
sub
add
or
and
inc
add
add
or
adc
or
pop
push
adc
adc
adc
adc
sbb
sbb
sub
cmp
add
add
adc
daa
(bad)
(bad)
call
sub
adc
add
adc
push
sub
push
adc
push
sub
pop
sbb
cmc
add
add
add
sbb
push
(bad)
call
sbb
add
add
add
adc
push
(bad)
call
push
pop
adc
leave
add
add
sub
adc
sub
or
cmp
adc
push
adc
(bad)
call
adc
pop
cmp
mov
add
pop
cmp
cmp
sub
sub
add
add
push
cmp
add
add
ss
sub
adc
(bad)
call
daa
adc
and
(bad)
call
sub
add
and
(bad)
call
sub
mov
add
sub
pop
add
sub
add
es
cmp
sub
adc
push
sub
sbb
add
push
sub
sbb
sub
adc
adc
movs
pop
add
add
sbb
(bad)
inc
cmp
add
dec
std
(bad)
push
(bad)
dec
(bad)
call
(bad)
(bad)
call
add
add
add
sub
(bad)
(bad)
(bad)
cld
(bad)
(bad)
mov
cld
(bad)
jmp
add
xchg
add
add
(bad)
call
add
add
add
add
cld
(bad)
call
add
add
add
sub
add
cmp
(bad)
dec
cld
(bad)
(bad)
mov
add
add
cld
(bad)
call
add
add
add
cwde
add
add
add
add
add
add
cld
(bad)
call
add
add
add
(bad)
call
(bad)
push
(bad)
(bad)
(bad)
cli
(bad)
(bad)
push
add
(bad)
(bad)
jmp
std
(bad)
jmp
(bad)
(bad)
(bad)
aas
add
add
std
(bad)
(bad)
jmp
(bad)
(bad)
jle
(bad)
inc
add
add
add
add
std
(bad)
push
add
add
add
add
cmp
(bad)
call
and
add
cmp
(bad)
(bad)
call
add
or
push
(bad)
call
adc
sub
call
add
adc
(bad)
call
or
adc
int3
(bad)
(bad)
call
add
push
sub
sbb
sub
outs
add
push
cmp
adc
or
push
(bad)
call
nop
cmp
cwde
adc
sbb
adc
add
and
(bad)
call
and
(bad)
(bad)
call
add
pop
xor
je
(bad)
call
add
push
sub
add
adc
sbb
(bad)
(bad)
(bad)
(bad)
jle
add
add
jns
add
sub
add
sub
add
sub
inc
(bad)
(bad)
inc
sub
add
push
pop
adc
cmp
(bad)
call
add
pop
cmp
sti
(bad)
call
or
daa
(bad)
(bad)
call
add
push
sub
add
push
adc
pop
xor
adc
or
call
push
cmp
(bad)
(bad)
jmp
je
add
pop
adc
sti
std
(bad)
jmp
jl
add
pop
or
out
std
(bad)
call
or
sub
xor
call
add
movups
(bad)
call
adc
add
adc
push
(bad)
call
adc
add
cmp
sub
add
sub
add
sub
add
or
or
push
sub
add
cmp
adc
call
cmp
sub
add
mov
add
sub
add
xor
jae
(bad)
call
or
sar
(bad)
call
xor
gs
(bad)
call
add
adc
push
(bad)
call
pop
pop
and
dec
std
(bad)
call
add
or
je
add
add
adc
daa
cmp
std
(bad)
jmp
xchg
add
push
sub
add
fiadd
push
sub
add
push
sub
fiadd
sub
push
sub
adc
sub
add
fiadd
fiadd
adc
sub
and
jo
add
cmp
cld
(bad)
jmp
adc
sub
pop
sub
cmp
cld
(bad)
jmp
sub
add
push
or
(bad)
jmp
add
add
add
add
add
add
add
add
push
or
push
add
add
push
or
add
add
add
adc
add
and
add
add
add
shl
add
add
or
and
(bad)
loope
sub
sub
or
add
sub
sub
add
push
sub
cmp
add
or
add
or
sub
cwde
add
push
sub
sub
lock
add
xor
scas
add
add
add
adc
cmp
adc
sbb
and
xchg
add
push
sub
sub
sbb
sub
sub
jns
add
sbb
sub
push
sub
add
sar
dec
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
sub
sbb
sub
and
and
daa
sub
and
sub
sub
sahf
add
push
sub
pop
add
fsubr
fwait
add
push
sub
add
(bad)
add
sub
fiadd
sub
jo
add
cmp
(bad)
inc
cmp
(bad)
inc
jmp
call
(bad)
inc
add
adc
add
add
aaa
mov
add
sub
sub
mov
clc
add
add
push
sub
sub
sub
mov
add
sub
sub
add
sub
sub
add
sub
add
inc
das
add
push
jae
add
or
add
jae
add
or
clc
add
sub
add
sub
add
sub
clc
add
add
pop
sub
sub
sub
sub
icebp
add
lock
add
inc
sub
add
stc
sub
hlt
add
add
sub
sub
add
cli
sub
cmc
jle
or
or
push
push
sub
sub
sub
sub
out
add
out
sub
out
sbb
sbb
add
add
sbb
push
and
add
add
lea
add
sub
sub
sub
sub
loopne
movs
add
push
sub
sub
fld
push
add
push
sub
add
mov
sub
and
add
add
add
add
push
sub
sub
add
jmp
in
adc
add
sub
add
add
xor
add
add
add
adc
xor
mov
add
cmp
adc
sbb
cmp
xchg
add
add
add
sbb
adc
pop
add
cmp
cmp
sbb
add
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
sub
sub
sub
or
sub
ins
add
push
fimul
sub
sub
stos
add
push
adc
pop
sub
sub
rol
sub
push
sub
sub
add
cmp
(bad)
jmp
outs
add
push
cmp
(bad)
push
add
or
addr16
(bad)
dec
cmp
(bad)
inc
cmp
(bad)
push
add
or
data16
(bad)
dec
cmp
(bad)
inc
sbb
add
add
or
add
add
push
add
mov
pop
add
add
adc
add
add
add
add
adc
and
aad
add
sub
sub
sub
sub
sub
mov
aaa
sub
add
add
inc
add
add
xor
sub
adc
push
adc
or
add
sub
sub
sub
add
sub
or
mov
mov
add
or
ret
shr
add
sub
(bad)
or
into
add
add
lods
add
push
sub
or
or
xor
xor
pop
sub
sub
add
repz
add
sub
repnz
add
pop
sub
or
sub
sub
sub
add
cli
sub
add
sub
sub
sub
add
cli
sub
add
sub
push
sub
sub
sub
add
imul
add
push
sub
add
add
sub
sub
xchg
add
sub
add
call
rol
add
sub
sub
ins
add
push
sub
add
add
or
add
push
add
add
add
add
lock
sub
cmc
add
sub
add
mov
add
sub
add
lock
add
sub
add
sub
add
sub
add
sub
add
sub
sub
jo
add
sub
add
or
add
jecxz
add
sub
add
lock
add
sub
add
sub
sub
add
cli
sub
add
sub
sub
add
sub
clc
add
add
sub
sub
add
imul
pop
add
push
sub
add
add
add
sub
sub
add
imul
add
push
sub
add
add
add
sub
sub
add
imul
mov
repnz
add
add
sub
sub
add
imul
ret
push
sub
add
add
add
sub
sub
add
imul
push
add
sub
add
add
add
sub
sub
add
imul
add
push
sub
add
add
add
sub
sub
add
imul
and
add
sub
add
add
add
sub
sub
add
imul
mov
add
sub
add
add
add
sub
sub
add
imul
mov
add
sub
add
add
sub
sub
add
cli
sub
add
push
sub
push
sub
sub
sub
add
imul
add
push
sub
add
add
sub
sub
sub
sub
add
icebp
add
lock
sub
sub
add
push
sub
add
add
sub
sub
add
cli
sub
add
sub
sub
add
sub
add
push
sub
add
sub
sub
popa
add
push
sub
add
sub
sub
add
cli
sub
add
sub
add
push
add
add
add
add
adc
sub
sub
sub
sub
sub
sub
push
or
or
or
push
push
sub
sbb
sub
sub
add
rol
rol
sub
push
add
sub
push
pop
sub
push
or
mov
sub
fld
add
sub
add
movntps
and
add
add
pop
sub
sub
add
in
sub
add
sub
add
sub
sub
sub
sub
add
icebp
add
lock
sub
sub
add
sub
add
add
sub
sub
bound
add
sub
add
sub
sub
dec
add
push
sub
add
sub
sub
in
add
push
sub
add
sub
sub
movs
add
push
sub
add
sub
sub
add
push
sub
add
sub
sub
add
cli
sub
add
push
sub
sub
sub
add
cli
sub
push
sub
sub
add
adc
add
sub
add
lock
add
sub
add
sub
add
mov
add
sub
add
lock
add
sub
add
push
sub
sub
sub
add
imul
or
add
sub
add
add
or
add
adc
add
sub
add
lock
add
push
sub
add
jp
movntps
and
add
add
jae
add
sub
sub
sub
add
in
sub
add
sub
repnz
sub
and
add
and
add
sub
sub
sub
add
jmp
sub
sub
add
sub
out
jp
movntps
and
add
add
mov
add
sub
sub
sub
add
in
sub
add
sub
add
sub
sub
add
cli
sub
add
sub
ss
dec
sbb
add
sub
add
push
sub
add
sub
add
ja
add
sub
add
lock
add
sub
cmc
add
dec
sub
pop
xor
pusha
sub
add
imul
dec
add
sub
cmc
sub
add
sub
add
sub
add
sub
sub
add
cli
sub
add
sub
sub
add
rol
add
sub
add
lock
add
sub
cmc
add
jp
movntps
and
add
add
pop
sub
sub
add
in
sub
add
sub
repnz
sub
sub
add
cli
sub
add
push
sub
sub
sub
add
cli
sub
cmc
sub
sub
add
cli
outs
xor
add
sub
sub
add
push
add
add
add
add
lock
add
sub
cmc
add
sub
sub
add
cli
outs
mov
add
sub
sub
sub
add
cli
sub
add
or
cmc
add
add
inc
add
add
add
add
pop
sub
sub
add
sbb
es
add
add
scas
add
add
and
sub
sub
sub
fld
sub
sub
shr
or
add
sub
sub
add
sub
add
add
mov
add
sub
sub
sub
add
cli
sub
add
or
cmc
adc
add
jno
add
adc
add
jle
add
add
sub
add
jle
add
add
daa
add
add
push
cmp
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
add
add
add
ja
add
fadd
add
add
add
shl
cmp
add
add
pop
xchg
and
cdq
add
pop
cmp
add
add
stos
push
cmp
add
add
add
loope
add
pop
ins
xchg
and
fild
add
fiadd
add
sub
add
pop
outs
pop
push
popa
inc
add
add
adc
add
adc
je
add
pop
adc
pusha
(bad)
(bad)
call
or
cmc
adc
adc
add
dec
(bad)
(bad)
inc
mov
add
add
mov
add
or
add
cdq
add
pop
adc
sub
(bad)
call
cmp
(bad)
inc
sbb
or
or
push
adc
ud0
dec
sbb
push
push
cmp
(bad)
(bad)
call
add
cld
(bad)
(bad)
call
push
and
and
sub
pop
sub
adc
loop
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
sar
(bad)
call
add
call
add
adc
(bad)
dec
cmp
(bad)
call
push
cmp
(bad)
(bad)
call
add
pop
(bad)
(bad)
inc
and
(bad)
inc
add
adc
add
pop
add
add
add
adc
add
add
sbb
add
jle
add
add
push
add
add
and
add
adc
add
cmp
add
add
add
add
add
inc
add
add
add
add
add
add
add
dec
add
add
add
dec
add
add
cmp
add
add
out
add
and
and
cmp
add
add
mov
fild
add
cmp
add
add
pop
pop
push
sbb
popa
inc
add
add
add
add
pop
or
cli
sbb
inc
mov
add
add
mov
add
sbb
add
or
pop
pop
or
and
add
pop
and
pop
sub
adc
push
mov
add
cmp
(bad)
call
add
fild
add
xchg
push
sub
add
pop
sub
sbb
cs
(bad)
jmp
sbb
pop
adc
push
sub
add
add
add
pop
add
add
add
add
add
add
add
add
mov
add
sub
sub
cmp
(bad)
call
add
loopne
(bad)
call
add
dec
dec
cmp
(bad)
(bad)
dec
cmp
add
adc
(bad)
dec
dec
add
push
(bad)
(bad)
inc
inc
add
adc
add
ins
add
add
add
adc
add
add
add
add
sub
add
and
add
sub
and
add
inc
or
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
add
add
push
add
add
mov
add
es
add
add
sub
pop
cmp
add
add
sub
sub
add
sbb
fadd
add
sub
add
fld
add
popa
pop
inc
pop
push
popa
inc
add
add
adc
add
adc
pop
or
pop
adc
call
or
sbb
adc
push
adc
pop
(bad)
(bad)
inc
mov
add
sub
push
adc
inc
pop
pop
or
xchg
add
add
add
rcl
add
or
sbb
pop
push
sub
adc
call
push
and
and
js
add
jmp
add
je
add
add
adc
and
and
or
add
add
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
call
add
inc
push
(bad)
(bad)
inc
cmp
xor
add
add
or
sbb
sub
add
sbb
add
cmp
add
add
add
add
add
add
add
add
add
lahf
add
add
add
add
add
add
add
push
cmp
add
add
and
add
std
add
add
mov
add
cmp
add
add
stc
add
add
adc
test
add
add
add
adc
add
cmp
add
add
xchg
and
add
pop
adc
mov
add
add
pop
sub
adc
xlat
add
jle
add
add
fadd
add
jle
add
add
fadd
add
xchg
add
sahf
pop
adc
dec
(bad)
(bad)
call
add
add
add
mov
add
sbb
add
or
pop
pop
push
sub
(bad)
(bad)
dec
pop
pop
or
(bad)
pop
das
pop
sbb
pop
xor
sbb
add
ud0
call
sub
sub
sub
adc
inc
add
add
add
add
add
mov
add
sub
and
(bad)
call
add
call
add
sar
(bad)
call
add
into
(bad)
(bad)
dec
cmp
(bad)
(bad)
call
add
cld
(bad)
(bad)
dec
add
add
(bad)
inc
inc
cmp
(bad)
call
add
call
xor
add
add
inc
add
adc
add
add
add
add
sbb
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
add
add
add
cmp
add
add
cmp
add
add
sar
add
add
fld
add
popa
push
sub
cmp
add
add
add
add
or
add
pop
or
enter
sub
xchg
and
add
pop
sub
sbb
sub
or
inc
mov
add
outs
nop
add
or
pop
and
push
cmp
(bad)
inc
(bad)
(bad)
dec
add
pop
or
or
inc
sbb
adc
add
pop
xchg
and
add
pop
or
call
add
or
add
pop
sub
sub
and
adc
inc
add
add
add
add
add
mov
add
sub
inc
(bad)
(bad)
call
add
cmc
(bad)
(bad)
dec
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
inc
and
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
dec
inc
add
stos
sub
xor
add
je
sbb
rol
add
or
add
jae
add
or
fild
add
add
sub
add
xor
add
add
cmp
mov
add
sub
sbb
movhps
add
cmp
cmp
add
add
add
push
add
add
add
fdivr
(bad)
call
add
add
cmp
add
sub
push
sub
es
add
add
push
sub
sub
jle
add
add
or
add
cmp
add
add
jmp
add
push
sub
push
add
add
xchg
add
add
cli
add
add
adc
add
or
or
inc
push
or
sub
cmp
mov
add
sbb
daa
jle
add
add
or
fld
add
and
add
sub
rol
push
sbb
or
pop
or
add
add
add
add
add
xor
add
add
add
jns
(bad)
dec
add
int
(bad)
call
add
add
shr
inc
or
or
mov
xor
add
jle
add
add
imul
add
and
add
add
xchg
add
push
sub
sub
jae
add
or
sub
mov
(bad)
jmp
or
cmp
sub
add
push
xor
(bad)
fidiv
jle
add
add
sub
add
push
je
add
add
ficomp
(bad)
jmp
mov
in
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
sub
add
push
fadd
sub
mov
jae
(bad)
jmp
mov
outs
(bad)
(bad)
inc
cmp
(bad)
jmp
mov
jno
(bad)
jmp
mov
mov
(bad)
dec
cmp
sbb
add
add
add
add
sub
add
jg
add
pop
add
add
add
add
add
les
add
sub
pop
sub
or
sub
dec
sub
pop
jle
imul
sub
sub
sub
sub
cmc
jp
movntps
and
test
add
sub
sub
sub
add
in
sub
add
sub
add
movntps
and
add
and
add
add
pop
sub
sub
add
in
sub
add
sub
add
movntps
and
add
and
add
sub
sub
sub
add
in
sub
add
sub
add
or
add
lods
add
add
add
add
lock
add
sub
add
mov
adc
adc
adc
fiadd
add
and
or
add
in
add
jmp
sub
sub
add
sub
jp
movntps
and
add
add
into
add
add
pop
sub
sub
add
in
sub
add
sub
add
pop
pop
es
xor
add
add
imul
dec
add
sub
cmc
sub
sub
add
cli
sub
add
or
cmc
sbb
add
jle
add
push
add
adc
sub
sub
pop
add
add
and
add
add
icebp
sbb
pop
push
sub
or
retf
push
sub
fiadd
sub
sub
jle
add
add
sub
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
sub
sbb
es
sub
sub
sub
cmp
int
add
cmp
add
push
sub
add
add
sbb
push
sub
add
sbb
and
sbb
add
or
sub
add
sub
sub
add
push
sub
add
and
add
add
add
sub
add
push
sub
sub
sub
add
cli
sub
add
push
sub
push
add
rol
add
sub
sub
sub
mov
clc
add
sub
sub
mov
add
pop
sub
or
sub
sub
sub
add
cli
sub
cmc
dec
sub
pop
pop
sbb
add
add
imul
dec
add
push
sub
add
sub
sub
add
cli
sub
add
push
sub
sub
sub
add
cli
sub
add
or
cmc
adc
push
add
add
push
add
adc
add
add
cmp
add
jle
add
add
add
add
cmp
add
add
inc
cmp
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
push
add
nop
add
add
add
add
rol
add
sbb
cli
add
add
mov
cmp
add
add
test
xchg
and
add
pop
cmp
add
add
sahf
cmp
add
add
icebp
add
add
ds
push
push
sub
add
add
add
add
adc
ja
(bad)
call
sub
adc
adc
pop
pop
xchg
and
add
pop
adc
inc
sub
adc
and
and
jmp
add
inc
pop
pop
or
inc
push
add
or
fadd
add
or
add
sbb
pop
xor
xchg
and
add
add
push
jle
add
add
push
xchg
add
movs
add
add
pop
adc
sti
(bad)
(bad)
call
adc
add
sub
sub
adc
and
and
adc
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
call
push
cmp
(bad)
(bad)
call
add
inc
or
(bad)
inc
cmp
(bad)
(bad)
inc
adc
add
outs
add
add
add
adc
add
add
sub
add
jle
add
add
daa
add
add
dec
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
retf
add
add
rol
add
es
cmp
add
add
mov
add
sbb
in
add
add
stos
cmp
add
add
add
out
add
popa
pop
pop
pop
cmp
add
add
add
add
or
add
sbb
(bad)
(bad)
call
cmp
(bad)
call
add
shl
add
out
or
adc
(bad)
(bad)
(bad)
inc
mov
add
add
add
or
adc
pop
or
pop
adc
inc
(bad)
(bad)
inc
push
sub
add
push
sub
or
or
push
pop
pop
xchg
and
fild
add
add
sbb
(bad)
dec
sbb
or
or
add
or
(bad)
call
add
add
pop
sub
pop
jne
add
sbb
adc
pop
das
xchg
and
adc
loop
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
sar
(bad)
call
add
or
(bad)
dec
cmp
(bad)
(bad)
call
add
or
cmp
(bad)
(bad)
inc
adc
(bad)
inc
cmp
(bad)
(bad)
inc
adc
add
inc
add
add
add
adc
add
add
std
add
add
dec
cmp
add
add
add
add
add
add
add
dec
add
add
add
mov
add
jnp
add
ins
add
add
add
add
add
cdq
add
add
aam
add
es
cmp
add
add
mov
add
pop
or
rol
add
test
add
ret
add
sub
pop
sbb
mov
inc
add
add
or
add
sbb
mov
add
cmp
(bad)
call
sub
adc
pop
or
cmp
(bad)
jmp
xchg
add
or
pop
or
add
inc
pop
pop
or
sub
add
or
add
inc
push
add
or
pop
pop
xor
or
sub
adc
call
sub
push
sub
mov
add
xchg
and
int
add
add
inc
jne
add
add
pop
or
add
call
push
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
(bad)
call
add
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
call
add
inc
add
xor
add
add
inc
add
adc
add
add
pop
add
add
add
add
adc
add
sub
adc
add
inc
or
add
pop
add
add
add
add
add
jae
add
add
add
das
add
add
add
add
add
call
add
add
add
aad
add
es
cmp
add
add
sub
sub
add
cmp
add
add
retf
add
pop
cmp
add
add
xchg
cmp
add
add
into
add
add
dec
pop
push
popa
inc
add
add
adc
add
adc
pop
pop
xchg
and
mov
add
add
call
sub
adc
(bad)
adc
or
pop
or
add
push
(bad)
(bad)
inc
sub
or
add
inc
pop
pop
or
and
push
sub
adc
dec
sbb
sbb
pop
pop
push
add
pop
push
sub
sub
(bad)
call
pop
pop
push
xchg
and
add
pop
push
sub
sub
adc
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
call
push
cmp
(bad)
(bad)
call
add
inc
sub
cmp
(bad)
inc
add
adc
add
pop
add
add
add
adc
add
add
sbb
add
jle
add
add
cmp
add
add
pop
or
add
cmp
add
add
cmp
add
add
add
add
add
sahf
add
add
add
adc
add
mov
add
adc
add
pop
add
add
add
add
add
add
cmp
add
add
push
cmp
add
add
sub
add
loopne
add
popa
sbb
add
popa
inc
add
add
adc
add
or
mov
add
xchg
and
add
pop
or
xchg
adc
aaa
xchg
and
xchg
add
pop
sub
or
mov
add
xchg
and
mov
push
sub
(bad)
inc
mov
add
outs
xchg
add
or
pop
pop
or
and
(bad)
(bad)
inc
pop
sbb
or
sub
inc
(bad)
(bad)
call
sub
adc
sub
and
cmp
(bad)
(bad)
jmp
sbb
push
adc
inc
add
add
add
add
add
add
add
add
push
cmp
(bad)
call
(bad)
add
push
sub
inc
(bad)
(bad)
dec
call
add
jecxz
(bad)
dec
in
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
sbb
(bad)
inc
sbb
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
inc
add
jb
add
sub
pop
add
push
sub
sub
add
push
sub
sub
add
push
sub
add
add
sub
sub
loope
add
sub
add
xor
add
add
add
pop
and
add
add
and
push
push
and
(bad)
loope
sub
sub
sub
add
push
sub
sub
add
sub
sub
add
push
sub
sub
fild
jecxz
add
sub
sub
add
push
sub
add
xor
add
add
add
add
adc
cmp
jl
add
es
sub
add
add
icebp
sub
jg
add
cmp
sub
cmp
jmp
cmp
add
sub
cmp
add
cmp
add
cmp
add
push
sub
add
push
push
add
call
sbb
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
add
add
xchg
(bad)
(bad)
jmp
pop
sub
sub
fild
add
cmp
(bad)
jmp
fild
add
cmp
(bad)
dec
add
jp
(bad)
jmp
jmp
jne
(bad)
inc
cmp
(bad)
jmp
fild
add
cmp
(bad)
inc
cmp
cmp
(bad)
jmp
in
add
cmp
(bad)
inc
sbb
add
add
add
add
jmp
add
sub
add
push
sub
add
movntps
and
mov
add
sub
sub
sub
add
in
sub
add
sub
repnz
pop
sub
or
sub
push
and
add
add
cwde
add
add
add
sub
add
push
sub
add
add
sub
sub
jae
add
sub
add
sub
sub
fadd
add
sub
add
sub
and
test
add
or
add
in
add
jmp
sub
sub
out
push
sub
sub
sub
add
imul
sbb
add
sub
add
add
add
sub
sub
add
imul
jle
add
sub
add
add
sub
sub
add
cli
sub
cmc
push
sub
sub
sub
add
imul
xchg
add
push
sub
add
add
sub
sub
add
cli
sub
add
push
sub
sub
sub
add
cli
sub
add
or
cmc
adc
add
add
add
add
jle
add
add
push
add
add
add
add
sbb
add
sub
sbb
add
inc
or
add
add
add
add
jg
add
das
add
add
add
add
add
add
add
xchg
add
rol
add
add
add
jmp
add
es
sub
cmp
add
add
mov
cmp
add
add
fild
add
pop
sub
pop
cmp
add
add
xchg
cmp
add
add
aad
add
popa
pop
jo
push
popa
inc
add
add
or
add
pop
adc
jbe
(bad)
call
add
sub
adc
pop
(bad)
(bad)
jmp
xchg
add
or
adc
pop
push
xchg
and
jmp
add
add
inc
(bad)
(bad)
inc
sbb
pop
pop
or
and
pop
or
push
pop
cs
sbb
movs
and
add
pop
adc
and
(bad)
dec
sbb
push
push
cmp
call
add
adc
(bad)
call
sub
pop
je
add
add
adc
imul
add
cmp
(bad)
call
add
out
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
fdivrp
(bad)
call
add
push
(bad)
(bad)
dec
cmp
(bad)
(bad)
call
add
call
add
and
cmp
(bad)
(bad)
inc
cmp
xor
add
add
dec
add
adc
add
add
adc
add
sub
cmp
add
add
add
add
add
mov
add
push
add
add
add
add
add
add
add
add
add
ja
add
xor
add
xor
add
fwait
add
add
in
add
push
es
add
add
pushf
add
add
pop
cmp
add
add
mov
add
pop
or
add
ret
add
lea
ret
add
ret
add
add
push
pop
cmp
add
add
sub
popa
inc
add
add
or
add
push
adc
gs
(bad)
call
sub
adc
push
adc
pop
(bad)
(bad)
inc
sub
push
adc
dec
(bad)
(bad)
inc
pop
pop
or
and
pop
sbb
cmc
or
add
add
pop
adc
and
sub
sub
cmp
or
cmc
pop
je
add
add
adc
add
pop
adc
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
add
call
add
in
(bad)
(bad)
call
add
call
add
das
(bad)
(bad)
dec
cmp
(bad)
(bad)
call
add
aaa
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
aaa
(bad)
(bad)
inc
cmp
(bad)
(bad)
(bad)
rcr
add
sub
sub
out
add
push
sub
push
add
lock
push
sub
sub
sub
add
cli
sub
add
sub
sub
sub
add
cli
sub
add
or
cmc
adc
add
pop
add
add
add
adc
add
add
sbb
add
jle
add
add
sbb
add
sbb
sbb
add
cmp
add
add
sub
push
sub
add
jo
add
test
add
add
add
and
add
and
add
add
add
arpl
add
and
add
cdq
add
add
cmp
add
add
call
cdq
add
add
pop
sbb
add
sub
add
fadd
add
popa
pop
cmp
popa
inc
add
add
adc
add
adc
and
add
pop
or
jle
(bad)
dec
and
and
add
and
call
(bad)
(bad)
inc
mov
add
add
cwde
add
or
pop
pop
or
sbb
sub
add
xchg
and
loop
add
cmp
(bad)
(bad)
call
sub
or
pop
xchg
and
add
pop
or
pop
(bad)
(bad)
jmp
sbb
push
adc
inc
add
add
add
add
add
add
add
icebp
add
push
sub
dec
(bad)
(bad)
dec
call
add
loope
(bad)
dec
loope
(bad)
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
pop
(bad)
(bad)
dec
add
pop
(bad)
(bad)
inc
inc
add
xor
add
add
dec
add
adc
add
add
and
add
sub
and
add
inc
or
add
fiadd
add
mov
add
adc
add
js
add
scas
add
add
add
add
add
aad
add
add
add
fadd
add
add
add
shl
add
push
sbb
add
sub
cmp
add
add
loopne
add
pop
jnp
and
add
pop
sbb
add
rol
add
sub
add
rol
add
push
sub
pop
push
sub
add
popa
adc
add
add
add
add
add
js
and
(bad)
add
pop
or
call
add
push
xchg
and
add
pop
sub
push
or
add
dec
xchg
and
fild
add
cmp
(bad)
(bad)
inc
mov
add
sbb
mov
add
outs
cdq
add
or
adc
jge
and
or
inc
pop
pop
or
pop
sub
push
or
call
add
push
xchg
and
push
cmp
(bad)
jmp
out
or
inc
sub
(bad)
call
add
fdivr
(bad)
dec
cmp
(bad)
(bad)
dec
dec
cmp
(bad)
(bad)
call
add
sbb
(bad)
dec
inc
inc
daa
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
push
sub
sub
pop
sub
sub
sub
add
imul
test
add
adc
add
movs
add
add
add
pop
and
cmp
add
sub
sbb
pop
add
add
add
add
data16
add
sub
push
add
add
add
sbb
add
add
add
adc
add
aam
(bad)
jmp
add
add
sub
sub
inc
sub
sbb
sub
sub
xor
sub
ret
sbb
push
sub
stc
add
push
cmp
clc
add
push
cmp
cli
add
push
cmp
cmp
mov
push
sub
stc
add
push
sub
add
rcl
add
add
add
sub
add
push
sub
push
add
std
add
push
sub
sub
and
add
add
fadd
add
sub
sub
sub
add
jmp
sub
sub
add
sub
out
or
sub
or
sub
sub
add
sub
add
push
sub
add
sub
sub
add
cli
sub
add
sub
sub
sub
add
cli
sub
add
sub
sub
sub
add
cli
sub
add
or
cmc
adc
add
popa
add
add
adc
add
add
sbb
add
jle
add
add
sbb
add
sub
sbb
add
inc
or
add
and
add
pop
add
add
add
add
add
add
add
js
add
rol
add
add
add
mov
add
add
inc
add
es
and
add
add
sub
sub
add
push
cmp
add
add
movs
cmp
add
add
fld
add
popa
pop
imul
popa
inc
add
add
sbb
add
adc
add
and
add
outs
(bad)
(bad)
call
sbb
add
(bad)
(bad)
(bad)
inc
mov
add
outs
add
add
or
adc
dec
(bad)
(bad)
inc
pop
pop
or
and
pop
or
add
sub
add
pop
adc
sub
sbb
or
or
add
pop
(bad)
(bad)
call
push
pop
dec
xchg
push
sub
add
and
out
jne
add
add
adc
and
and
adc
lock
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
loopne
(bad)
call
add
sbb
cmp
(bad)
(bad)
call
add
and
(bad)
inc
cmp
(bad)
(bad)
inc
and
(bad)
inc
cmp
(bad)
inc
add
adc
add
jbe
add
and
add
jle
add
add
add
add
add
add
sub
add
sub
sub
add
inc
or
add
and
add
push
add
add
add
add
add
add
add
cwde
add
add
add
add
add
add
add
sar
add
push
es
add
add
ret
add
add
add
lds
pop
cmp
add
add
cmps
push
and
add
add
cmp
add
add
mov
push
cmp
add
and
cmp
add
add
sub
(bad)
(bad)
cmp
add
add
popa
pop
or
push
popa
inc
add
add
adc
add
adc
pop
xor
add
pop
adc
call
pop
pop
push
xchg
and
sub
adc
sbb
(bad)
(bad)
inc
mov
add
add
or
sbb
(bad)
(bad)
call
sub
or
rol
add
or
or
pop
xor
sbb
pop
xor
sbb
add
call
push
pop
dec
xchg
and
aam
add
in
pop
je
add
add
pop
adc
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
dec
cmp
push
cmp
(bad)
(bad)
call
add
dec
add
inc
add
xor
arpl
add
dec
add
adc
add
add
sbb
sub
add
pop
add
add
dec
cmp
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
push
sbb
fld
add
sub
add
cmp
add
add
jge
and
cmp
add
add
popf
cmp
add
add
xlat
add
add
push
pop
push
popa
inc
add
add
sbb
add
push
sub
cs
and
add
and
add
call
or
sbb
adc
sbb
add
inc
mov
add
outs
fwait
add
or
sbb
add
inc
push
sub
pop
adc
and
add
add
lods
adc
add
or
pop
xor
sbb
add
call
push
pop
xchg
and
sub
pop
adc
inc
je
add
add
adc
pop
aas
xchg
and
popa
add
pop
adc
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
(bad)
call
push
cmp
(bad)
call
add
inc
cmp
(bad)
inc
and
(bad)
inc
adc
add
imul
add
add
jle
add
add
cmp
add
es
add
add
and
add
sub
and
add
sbb
out
add
inc
or
add
add
add
mov
add
add
add
add
add
add
add
add
add
adc
add
rol
add
add
imul
push
rol
add
push
es
add
mov
cmp
add
add
loope
add
pop
jno
and
lods
add
pop
cmp
add
add
cmp
xchg
cmp
add
add
aad
add
popa
pop
pop
pop
push
popa
inc
add
add
or
add
sbb
add
call
or
cmc
and
add
add
add
add
sbb
add
inc
mov
add
outs
pushf
add
or
sbb
add
inc
pop
pop
or
fadd
add
or
push
add
add
add
push
sub
add
pop
xor
adc
pop
jae
and
mov
add
add
call
push
pop
xor
pop
sub
pop
sub
cmp
pop
and
add
add
pop
adc
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
call
add
inc
cmp
(bad)
(bad)
inc
and
mov
or
or
push
sub
sub
sub
sub
add
push
sub
sub
add
push
sub
sub
add
sub
add
xor
add
add
cmp
or
add
cmp
add
add
sbb
add
add
add
sub
cmp
add
and
add
add
add
rcr
test
jge
add
add
sti
add
add
add
add
cmp
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
sbb
add
add
mov
add
sub
add
push
push
sub
push
sub
sub
add
push
pop
or
movs
pop
push
mov
sub
or
cwde
sbb
add
sub
add
or
(bad)
(bad)
inc
pop
pop
or
cmp
(bad)
jmp
or
add
or
sub
add
push
cmp
(bad)
jmp
sub
pop
call
call
cmp
(bad)
call
or
out
sbb
inc
(bad)
(bad)
call
sub
or
add
cmp
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
jmp
add
add
cmp
(bad)
(bad)
jmp
or
sti
(bad)
(bad)
jmp
push
add
push
cmp
lsl
push
cmp
(bad)
(bad)
dec
add
add
add
sbb
pop
sub
sub
sub
add
add
sub
sub
add
push
sub
push
add
adc
add
sub
sub
sub
fld
add
sub
add
movntps
and
add
add
adc
add
sub
sub
sub
add
in
sub
add
sub
repnz
pop
sub
or
sub
ss
pop
jo
add
sub
clc
add
sub
add
adc
add
sub
add
lock
add
sub
add
dec
sub
pop
jae
adc
sub
sub
add
sub
cmc
jp
movntps
and
add
add
call
pop
sub
sub
add
in
sub
add
sub
repnz
ret
add
cli
add
add
add
sub
push
sub
add
add
or
add
adc
add
sub
add
lock
sub
cmc
add
push
and
add
and
add
add
add
sub
add
push
sub
add
add
sub
sub
add
cli
sub
cmc
sub
sub
add
cli
sub
add
or
cmc
adc
add
pushf
add
add
adc
sub
jle
add
add
push
add
add
add
add
push
add
add
pop
cmp
add
inc
or
add
add
add
add
add
sub
add
sub
add
icebp
add
add
add
inc
add
add
add
add
mov
add
rcl
add
push
cmp
add
add
pop
xchg
and
mov
add
cmp
add
add
sub
add
sbb
or
add
sub
add
cmp
add
add
add
add
popa
pop
xor
push
popa
inc
add
add
adc
add
adc
add
push
add
pop
adc
(bad)
(bad)
(bad)
call
sub
pop
or
repnz
adc
and
add
add
pop
adc
inc
(bad)
(bad)
inc
mov
add
sub
adc
fst
add
es
(bad)
call
sub
add
sbb
sahf
add
or
pop
sub
pop
or
add
or
(bad)
inc
pop
pop
or
adc
adc
cdq
add
pop
adc
jmp
(bad)
dec
sbb
adc
push
pop
cs
and
add
pop
adc
aam
(bad)
call
sub
sbb
retf
(bad)
(bad)
inc
je
add
add
sbb
add
sub
(bad)
call
add
call
push
cmp
add
test
add
call
add
out
(bad)
(bad)
dec
cmp
(bad)
(bad)
call
add
lock
(bad)
inc
cmp
(bad)
(bad)
inc
idiv
(bad)
call
xor
add
add
push
add
adc
sub
add
add
cmp
push
add
add
add
add
add
data16
add
add
add
add
mov
add
add
add
push
add
add
add
add
cmp
add
add
cmp
add
add
sar
add
add
add
add
dec
pop
cmp
add
add
add
add
mov
add
jle
add
add
mov
add
xchg
cmp
pop
pusha
pop
sahf
popa
inc
add
add
pop
add
add
cmp
(bad)
dec
and
and
push
sub
or
sub
cmp
(bad)
inc
mov
add
sub
pop
pop
or
and
pop
sub
sbb
aas
(bad)
(bad)
call
sub
push
or
cmp
(bad)
(bad)
cmp
(bad)
jmp
sbb
add
add
add
add
add
add
add
add
add
adc
add
sub
inc
(bad)
(bad)
dec
dec
cmc
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
and
(bad)
inc
cmp
(bad)
(bad)
inc
and
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
call
xor
push
add
add
add
adc
add
add
adc
add
sub
cmp
add
add
or
add
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sbb
cmp
add
add
sub
add
pop
push
cmp
add
add
sub
add
int
add
pop
sub
popa
pop
pop
pop
cmp
add
add
add
add
or
add
sbb
mov
jne
(bad)
call
push
pop
xchg
and
add
pop
push
sub
sub
adc
sbb
add
inc
mov
add
outs
mov
adc
pop
inc
xchg
and
adc
inc
pop
pop
sbb
inc
(bad)
(bad)
dec
and
add
or
add
mov
add
or
sbb
pop
xor
sbb
mov
call
and
jmp
in
pop
adc
inc
jne
add
sbb
pop
adc
call
push
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
call
add
inc
cmp
(bad)
(bad)
inc
sub
cmp
(bad)
(bad)
call
add
inc
add
xor
add
add
adc
add
add
dec
add
add
add
add
inc
add
add
pop
cmp
add
inc
or
add
dec
add
add
add
add
add
add
add
sti
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
push
add
push
cmp
aad
add
xchg
and
cmp
add
add
test
cmp
add
add
add
add
pop
jb
and
add
and
add
add
lock
add
jle
(bad)
(bad)
cmp
add
add
popa
pop
imul
add
or
add
sbb
add
call
push
and
and
add
pop
sub
add
sbb
ja
adc
call
sub
add
or
adc
pop
jge
and
sbb
outs
jle
add
add
outs
xchg
add
and
sahf
pop
adc
inc
push
sub
and
add
add
add
ret
or
add
or
or
xor
adc
pop
cs
and
add
pop
adc
call
cmp
(bad)
(bad)
call
sub
sbb
add
inc
sub
adc
call
push
cmp
pop
cmp
add
call
push
cmp
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
call
add
inc
or
xor
add
add
add
adc
add
add
sub
add
add
sub
add
sub
add
add
add
add
add
je
add
je
add
push
add
add
add
add
add
fld
add
dec
add
add
add
add
pop
add
push
es
add
add
call
scas
add
pop
cmp
add
add
lods
push
and
add
in
add
cmp
add
add
int3
add
add
add
imul
aad
add
push
sub
(bad)
(bad)
cmp
add
add
pop
jo
push
popa
inc
add
add
or
add
sbb
add
call
pop
or
or
add
inc
mov
add
sub
pop
or
add
inc
pop
pop
or
or
add
or
inc
or
add
sbb
pop
xor
pop
adc
call
sub
pop
jle
add
add
dec
jle
add
add
dec
xchg
jle
add
add
cmp
pop
sahf
sub
pop
pop
jae
and
mov
add
add
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
push
cmp
(bad)
call
add
dec
cmp
(bad)
(bad)
call
pop
cmp
(bad)
call
add
inc
sub
(bad)
call
xor
add
add
adc
outs
push
cmp
add
cmp
add
sub
sbb
sbb
ins
add
add
xchg
add
add
test
add
cmp
add
imul
inc
push
add
add
add
sbb
add
adc
add
add
add
enter
and
add
sbb
loopne
pop
adc
push
sub
inc
sub
sub
sub
in
sub
sbb
push
sub
sbb
xchg
(bad)
jmp
sbb
add
cmp
cmp
add
add
cmp
cmp
sub
push
sub
sub
add
add
add
add
cmp
add
sub
push
and
loope
sub
sub
sub
or
add
sub
sub
add
push
sub
sub
jmp
push
add
push
sub
sub
sub
add
cli
sub
add
push
sub
or
sub
or
sub
sub
sub
add
cli
sub
add
or
cmc
adc
add
add
add
adc
cmp
add
add
cmp
add
sbb
and
imul
add
add
pop
cmp
add
cmp
add
add
pop
cmp
add
add
add
add
or
and
sbb
arpl
add
cmp
add
cmp
add
sub
sub
add
cmp
add
adc
or
add
add
add
sbb
mov
dec
add
add
push
add
sub
push
sub
and
add
adc
or
add
add
add
pop
and
add
add
sub
add
cmp
add
or
dec
sub
add
push
adc
sbb
pop
sub
add
push
sub
add
cmp
add
add
push
adc
pop
add
add
add
add
and
add
pop
sub
add
push
sub
add
cmp
add
xor
add
add
(bad)
inc
(bad)
(bad)
(bad)
fdivr
(bad)
dec
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
cmp
(bad)
jmp
pop
or
lds
and
add
pop
or
and
sbb
jnp
add
sub
add
cmp
cmps
sub
add
push
pop
push
sbb
data16
push
jnp
add
sub
add
xor
add
cmp
and
add
cmp
jnp
add
cmp
pop
add
sub
mov
(bad)
jmp
and
mov
(bad)
jmp
and
add
cmp
jnp
add
cmp
pop
add
sub
mov
(bad)
jmp
and
add
cmp
add
push
cmp
add
sub
(bad)
call
sub
add
sub
sub
sub
add
jmp
adc
add
sub
add
add
add
push
sub
sub
sub
adc
add
sub
add
sub
sub
adc
add
sub
add
pop
sub
or
sub
sub
sub
add
cli
sub
add
or
cmc
push
add
sub
add
sub
xor
inc
add
add
add
add
add
add
pop
jb
add
jo
cmp
add
sub
and
add
add
das
add
add
adc
sbb
jle
add
add
sub
add
sub
sub
add
sub
jae
add
or
loopne
add
sbb
add
add
add
sub
add
add
add
mul
and
add
push
movd
add
cvtpi2ps
das
add
push
sub
sub
add
sub
sub
add
push
sub
add
add
sub
sub
add
cli
sub
add
or
cmc
or
sub
or
sub
sub
add
sub
add
push
sub
add
sub
and
mov
or
add
in
add
jmp
sub
sub
add
sub
adc
add
ins
add
add
add
jle
add
add
sub
add
jle
add
add
add
add
dec
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
xor
add
sbb
jmp
add
sub
add
add
cmp
add
add
jl
pop
cmp
loope
add
pop
jl
pop
cmp
add
add
xchg
cmp
add
add
push
cmp
add
sbb
popa
inc
add
add
pop
add
add
or
call
add
or
and
jmp
sti
cmp
(bad)
inc
mov
add
sbb
mov
add
sub
adc
add
cmps
add
pop
or
inc
pop
pop
or
sbb
pop
adc
js
and
add
and
call
cmp
(bad)
(bad)
call
sub
push
or
inc
jne
add
add
adc
add
pop
or
call
add
sar
(bad)
call
add
dec
cmp
(bad)
(bad)
dec
dec
cmp
(bad)
(bad)
call
add
adc
(bad)
call
add
sbb
(bad)
dec
inc
inc
add
adc
add
add
add
add
adc
add
add
push
add
add
add
add
sbb
add
sub
sbb
add
inc
or
add
xor
add
les
add
arpl
add
xchg
add
add
add
add
add
add
add
add
add
add
add
jno
add
shl
add
push
es
add
add
into
add
add
pop
pop
cmp
rol
add
sub
add
push
cmp
add
add
xchg
pop
sub
cmp
add
add
iret
add
add
pop
pop
push
popa
inc
add
add
or
add
sbb
add
jo
(bad)
call
push
pop
sub
pop
sub
pop
or
sbb
sub
adc
push
(bad)
(bad)
inc
sub
adc
inc
(bad)
(bad)
inc
pop
pop
or
and
pop
or
adc
xor
(bad)
dec
push
sub
sub
sub
xor
add
pop
adc
adc
cmp
(bad)
call
push
pop
adc
pop
sub
pop
sub
add
(bad)
nop
add
pop
adc
out
(bad)
(bad)
call
add
call
push
cmp
(bad)
(bad)
call
add
fdivrp
(bad)
call
add
call
add
daa
(bad)
(bad)
dec
cmp
(bad)
(bad)
call
add
sub
(bad)
inc
cmp
(bad)
inc
sub
(bad)
call
xor
add
add
push
add
adc
add
add
sgdtd
add
push
cmp
add
add
add
add
add
mov
add
retf
add
add
add
add
add
add
sbb
add
sub
add
add
add
add
add
add
add
xor
add
es
add
add
aaa
xchg
and
xchg
add
pop
cmp
add
add
stos
push
and
add
add
add
call
leave
add
add
sub
add
popa
inc
add
add
pop
add
add
or
call
sub
adc
pop
or
inc
mov
add
sbb
mov
add
outs
movs
add
or
adc
xor
and
int3
add
pop
or
call
cmp
(bad)
inc
pop
pop
or
add
add
and
add
add
and
pop
ja
pop
and
sahf
pop
sbb
or
or
call
cmp
(bad)
(bad)
call
sub
sbb
(bad)
inc
sub
(bad)
call
add
jmp
(bad)
(bad)
call
add
and
(bad)
dec
dec
cmp
(bad)
(bad)
dec
inc
xor
(bad)
inc
inc
cmp
(bad)
inc
add
adc
add
cmp
add
push
add
adc
sub
add
hlt
add
add
dec
cmp
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
lods
add
add
add
add
xor
add
es
or
add
mov
add
sub
add
cmp
xor
pop
cmp
cmp
add
add
sub
pop
push
add
popa
inc
add
add
or
add
sbb
add
call
sub
sbb
or
adc
inc
mov
add
add
add
or
sbb
cmp
(bad)
inc
pop
pop
or
or
and
add
dec
or
or
pop
sub
cmp
(bad)
(bad)
call
sub
pop
sub
and
cmp
(bad)
(bad)
call
push
cmp
add
call
add
dec
cmp
(bad)
call
push
cmp
(bad)
call
add
inc
dec
(bad)
(bad)
inc
inc
cmp
(bad)
call
xor
inc
add
add
adc
add
add
inc
add
sub
inc
add
inc
or
add
adc
add
mov
add
add
add
jg
add
add
add
mov
add
add
add
add
add
shl
push
and
add
ret
add
mov
cmp
add
add
add
test
rol
add
ret
add
dec
pop
cmp
inc
add
add
adc
cmp
or
add
add
jbe
(bad)
call
sub
and
sbb
aas
or
or
add
inc
mov
add
outs
cmps
add
or
pop
or
add
inc
pop
pop
or
cwde
add
add
jbe
and
add
dec
sbb
sbb
push
sub
adc
and
and
add
pop
adc
call
sbb
(bad)
(bad)
call
push
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
(bad)
call
add
inc
cmp
(bad)
inc
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
call
add
inc
sbb
add
add
add
add
add
add
add
pop
and
add
pop
sub
sub
je
add
add
add
jecxz
add
add
sub
sub
add
push
sub
add
mov
pop
adc
or
add
add
add
sbb
sbb
fst
sub
sub
sub
sub
add
push
sub
add
lock
add
push
sub
add
push
add
aas
add
push
sub
or
add
add
sub
add
push
sub
sub
add
sub
add
jp
movntps
and
add
and
pop
sub
sub
add
in
sub
add
sub
add
pop
sub
or
sub
mov
adc
adc
adc
sbb
add
and
add
sub
sub
sub
add
jmp
sub
sub
add
sub
sub
sub
add
cli
sub
cmc
sub
add
and
add
add
lock
add
sub
add
adc
add
jno
add
push
add
adc
add
add
sub
add
jle
add
add
daa
add
add
pop
sbb
pop
add
cmp
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
inc
add
add
add
push
add
add
add
add
add
rol
add
es
add
add
lea
add
xchg
and
add
pop
cmp
add
add
cmps
push
cmp
add
add
loop
add
and
and
aad
add
aad
add
cmp
rol
add
add
pop
push
popa
inc
add
add
or
add
sbb
add
call
push
pop
and
and
in
adc
pop
adc
inc
mov
add
outs
scas
add
or
adc
pop
pop
xchg
and
sub
add
add
inc
pop
pop
push
sub
or
rol
add
or
add
sbb
pop
xor
sbb
add
call
sub
jb
and
add
pop
sub
push
cmp
je
add
add
sbb
sub
adc
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
push
cmp
add
dec
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
inc
sub
(bad)
inc
add
adc
add
popa
add
add
add
jle
add
add
sbb
add
jle
add
add
sbb
add
sub
sbb
add
inc
or
add
outs
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
push
es
fild
add
push
sub
sub
add
cmp
add
add
xchg
and
cmp
add
add
fwait
cmp
add
add
(bad)
add
add
sub
pop
aas
pop
push
popa
inc
add
add
or
add
sbb
sub
adc
call
pop
pop
xor
pop
sub
adc
pop
or
add
inc
mov
add
outs
scas
add
or
adc
and
add
add
pop
adc
inc
pop
pop
or
jle
pop
cmp
aas
or
pop
or
adc
xchg
and
ret
add
pop
adc
adc
(bad)
call
pop
and
and
les
add
out
jne
add
add
sbb
add
call
push
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
add
call
add
dec
cmp
(bad)
(bad)
call
push
cmp
add
inc
and
cmp
(bad)
inc
add
push
add
mov
add
sub
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
or
add
add
add
add
test
add
add
add
mov
or
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
gs
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
sbb
test
stc
sti
sbb
stc
adc
sbb
stc
sbb
test
stc
sbb
test
stc
push
sbb
stc
push
sbb
stc
pop
sbb
stc
pop
sbb
stc
pop
sbb
stc
pop
sbb
stc
mov
test
stc
mov
sbb
stc
mov
sbb
stc
mov
sbb
movs
gs
test
sbb
test
gs
stos
gs
lods
gs
lods
gs
scas
gs
scas
gs
int
add
loop
add
mov
add
add
jge
add
into
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
jnp
add
adc
add
add
add
add
add
add
add
add
arpl
add
cld
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
sub
add
push
add
dec
add
add
add
add
pop
add
add
or
add
add
popa
add
add
add
ins
add
add
xor
add
add
sbb
add
add
popa
add
add
add
ins
add
add
xor
dec
xor
add
ins
add
add
popa
add
add
add
ins
add
add
xor
xor
cwde
bound
add
ins
add
add
popa
add
add
add
ins
add
add
xor
xor
in
add
push
ins
add
add
popa
add
add
add
ins
add
add
xor
xor
xor
add
push
ins
add
add
popa
add
add
add
ins
add
add
xor
xor
jl
add
push
ins
add
add
popa
add
add
add
ins
add
add
xor
xor
enter
push
ins
add
add
popa
add
add
add
ins
add
add
xor
xor
add
ins
add
add
popa
add
add
add
ins
add
add
xor
add
add
push
ins
add
add
popa
add
add
add
ins
add
add
xor
aaa
add
add
add
popa
add
add
add
ins
add
add
xor
cmp
clc
in
add
push
ins
add
add
popa
add
add
add
ins
add
add
xor
cmp
inc
push
add
sbb
add
add
popa
add
add
add
ins
add
add
xor
nop
dec
add
push
ins
add
add
popa
add
add
add
ins
add
add
xor
xor
fadd
add
add
popa
add
add
add
ins
add
add
xor
xor
sub
add
add
popa
add
add
add
ins
add
add
xor
xor
je
add
push
ins
add
add
popa
add
add
add
ins
add
add
xor
xor
rcl
push
ins
add
add
popa
add
add
add
ins
add
add
xor
xor
or
add
push
ins
add
add
popa
add
add
add
ins
add
add
xor
xor
add
ins
add
add
popa
add
add
add
ins
add
add
xor
add
add
add
popa
add
add
add
ins
add
add
xor
aaa
add
fld
add
ins
add
add
popa
add
add
add
ins
add
add
xor
cmp
cmp
add
push
ins
add
add
popa
add
add
add
ins
add
add
xor
cmp
mov
add
add
popa
add
add
add
ins
add
add
xor
aam
add
push
ins
add
add
popa
add
add
add
ins
add
add
xor
xor
and
add
add
popa
add
add
add
ins
add
add
xor
xor
ins
rol
push
ins
add
add
popa
add
add
add
ins
add
add
xor
xor
mov
ins
add
add
popa
add
add
add
ins
add
add
xor
xor
add
add
popa
add
add
jb
add
add
ins
add
add
xor
xor
push
fs
popa
add
add
jb
add
add
ins
add
add
xor
xor
add
ins
add
add
popa
add
add
add
ins
add
add
xor
ss
mov
add
add
jb
add
add
ins
add
add
xor
aaa
add
add
popa
add
add
jb
add
add
ins
add
add
xor
cmp
sub
add
ins
add
add
popa
add
add
add
ins
add
add
xor
cmp
int3
pop
push
add
add
popa
add
add
add
ins
add
add
xor
sbb
popa
add
add
jb
add
add
ins
add
add
xor
xor
fs
add
add
popa
add
add
add
ins
add
add
xor
xor
mov
push
add
ins
add
add
popa
add
add
add
ins
add
add
xor
xor
cld
pop
pop
add
add
popa
add
add
add
ins
add
add
xor
add
add
popa
add
add
add
ins
add
add
ss
pop
pop
add
add
popa
add
add
add
ins
add
add
aaa
add
lea
add
add
popa
add
add
add
ins
add
add
cmp
jg
pop
add
add
popa
add
add
add
ins
add
add
cmp
retf
out
pop
add
ins
add
add
popa
add
add
add
jne
ins
add
ins
add
add
jae
pop
and
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
dec
das
add
js
pop
jmp
sub
inc
and
push
add
rcr
or
fbld
arpl
je
mov
in
sti
les
and
fild
cmp
stos
or
(bad)
ficomp
bound
lock
aaa
or
in
mov
cs
sub
mov
inc
or
repnz
jg
xor
xchg
jge
nop
rcl
mov
mov
mov
loope
inc
mov
ins
mov
das
jb
mov
sbb
xchg
out
and
cld
sub
jns
in
in
jge
pop
das
fld
lock
loop
jge
shr
dec
rol
xchg
(bad)
(bad)
pop
jno
repz
stos
adc
fist
lahf
add
push
sub
(bad)
cmp
sbb
jg
stos
pop
rol
and
loop
loope
ja
pop
push
mov
or
daa
mov
iret
mov
and
mov
sbb
xor
inc
add
sbb
cs
arpl
add
adc
and
mov
fild
mov
das
pop
out
das
lods
adc
or
fnstsw
pushf
sar
mov
push
cmp
or
dec
sbb
or
(bad)
fcmove
pop
or
cld
mov
fnstcw
mov
call
lea
cli
aam
sub
rcr
ins
(bad)
out
cwde
call
pop
xchg
ret
movs
fadd
and
rcr
inc
out
xchg
jle
cmc
inc
pop
mov
mov
pop
cmp
in
push
inc
add
and
mov
mov
shr
ror
sbb
out
sti
mov
xchg
ja
lods
or
mov
out
ins
clc
sti
xchg
pop
test
in
out
or
mov
and
fsubrp
or
xchg
push
push
not
nop
lock
sar
cmp
popf
push
les
imul
jmp
jmp
outs
mov
cmp
add
enter
adc
movs
rcl
movs
inc
sti
push
shl
adc
aas
push
fisub
leave
in
retf
xor
cmp
and
ins
ret
dec
mov
push
daa
cmc
mov
xor
or
lahf
out
cld
scas
and
mov
les
cli
leave
enter
scas
js
daa
ret
push
or
cdq
je
nop
mov
push
pop
mov
divps
jmp
dec
in
je
mov
jo
ins
jmp
(bad)
jmp
fucomip
sub
mov
pop
inc
(bad)
mov
sub
xchg
adc
lods
add
hlt
test
fild
stc
enter
pushf
xor
add
arpl
test
ds
push
test
sub
mov
xor
mov
inc
fst
push
mov
cmp
xchg
test
nop
cmp
dec
adc
jmp
xchg
sbb
mov
mov
push
jns
mov
jae
xor
and
dec
mov
out
pop
pop
outs
push
lods
aas
ss
push
jp
ins
sbb
sbb
repnz
mov
in
cmp
inc
(bad)
aam
test
fwait
pop
mov
je
js
shr
pushf
and
mov
(bad)
outs
in
add
add
enter
jle
pop
xor
rcl
jno
xor
loop
mov
int3
fcomp
mov
mov
push
jle
push
dec
or
mov
imul
inc
retf
ins
adc
aas
xor
mov
push
(bad)
push
enter
out
cli
mov
add
jb
sbb
mov
jmp
das
sbb
sbb
nop
mov
ja
outs
fs
call
cmps
repz
pop
dec
xchg
pushf
mov
rcl
(bad)
sbb
pop
cwde
popf
es
sub
call
shl
add
cwde
jnp
pop
inc
push
hlt
add
dec
xchg
jmp
fcom
aam
das
pushf
xchg
xchg
inc
cwde
adc
sar
cwde
scas
mov
xor
test
xrelease
or
test
scas
fisub
mov
xchg
and
nop
ins
adc
add
movs
xor
xchg
adc
lds
mov
or
xchg
mov
sbb
sti
sar
mov
lahf
loope
sub
mov
lods
movs
xlat
ds
sub
sub
fst
mov
ffree
jge
jo
out
sbb
fild
imul
movs
pusha
push
fld
inc
pop
call
in
pop
leave
repz
dec
(bad)
rcr
pop
stos
test
cmc
and
popa
xor
ja
lock
pop
pop
call
mov
xchg
ins
js
push
lea
aaa
das
pop
pop
inc
mov
scas
test
jp
sahf
(bad)
fst
xor
jmp
mov
hlt
test
mov
cmps
in
push
test
sahf
cmp
add
jnp
in
in
out
data16
push
pop
popf
pop
fimul
jo
mov
dec
sub
jb
adc
es
jecxz
leave
xchg
adc
test
pop
push
cmps
or
dec
xor
xchg
int
imul
jmp
push
fwait
xchg
jmp
xchg
test
rcr
jns
jge
push
sbb
test
cmp
mov
test
int
fcmovb
cmp
retf
add
adc
ja
into
lock
aad
xchg
lahf
mov
imul
out
lock
lods
mov
jp
mov
in
sub
add
and
xchg
lods
xchg
fistp
inc
jbe
pop
popf
test
sub
and
loopne
jge
xor
and
es
push
popa
mov
lahf
and
xor
pop
dec
sbb
sti
jp
loopne
inc
jne
cmp
inc
push
loop
xchg
sub
mov
dec
nop
jecxz
jo
retf
inc
stc
or
mov
push
xor
sti
sbb
dec
arpl
xchg
push
mov
push
mov
in
ins
push
call
aam
add
cli
and
sbb
xlat
fwait
cmp
and
imul
push
add
push
std
sbb
out
cmc
xchg
or
sti
ds
xchg
retf
ret
(bad)
dec
mov
sahf
push
sub
add
stc
sbb
imul
retf
dec
sub
lods
mov
das
mov
imul
pusha
sub
mov
inc
mov
cmp
or
enter
repnz
cmc
cld
sar
sbb
outs
jge
in
xchg
sar
mov
rcr
out
mov
cmc
leave
aam
data16
lock
fldenv
mul
jo
push
push
adc
and
mov
retf
add
mov
loopne
xchg
cmp
mov
adc
xor
popf
cwde
aad
and
fwait
mov
fldenv
dec
xchg
(bad)
mov
sub
std
arpl
xchg
fist
mov
movs
add
xor
into
clc
cmp
push
popa
lahf
xchg
mov
out
pop
cmp
sub
inc
adc
adc
jge
test
pop
in
cmps
mov
je
ficom
xor
ss
aas
pusha
scas
push
push
jmp
or
mov
cdq
pop
jno
mov
dec
retf
pop
in
in
and
fcomi
ja
xlat
imul
fstp
stos
push
jmp
dec
cmp
sub
stc
mov
movs
ss
add
int
iret
popf
xchg
mov
xchg
dec
jp
push
sbb
not
ss
shl
pop
push
adc
push
jmp
test
inc
push
cmp
mov
add
stos
scas
and
mov
cmps
add
das
lea
sahf
push
fidiv
cmps
sub
xor
adc
enter
xor
dec
cmps
ins
xor
lods
adc
out
aaa
rcr
out
retf
(bad)
push
mov
push
xchg
mov
lds
enter
je
jne
ds
cwde
movs
iret
add
call
pop
in
leave
out
adc
lea
sub
sbb
rol
repnz
jmp
call
sbb
cmp
or
sbb
ret
cmp
mov
pushf
out
int3
shr
das
xor
mov
call
push
inc
icebp
daa
pcmpeqb
sahf
daa
movs
and
dec
sbb
push
lock
in
pop
aad
rcl
neg
dec
jge
dec
psubd
lahf
(bad)
xchg
into
sub
out
jns
sub
adc
inc
dec
aam
adc
mov
jne
jmp
pop
pop
jle
shl
add
xchg
aas
xchg
add
cli
into
icebp
and
aam
mov
repnz
in
sbb
push
(bad)
xlat
or
push
int
mov
jb
data16
jnp
(bad)
in
addr16
out
clc
mov
jl
push
cmps
scas
cmp
ret
adc
xchg
rcl
cmp
outs
les
dec
or
std
jg
movs
pop
pushf
clc
mov
cmc
and
fwait
movs
hlt
cmc
mov
fdivr
repnz
or
std
dec
rol
fidivr
xor
add
pushf
into
fwait
cwde
popa
les
cwde
xor
std
push
mul
lahf
sub
and
xor
call
popf
out
sahf
data16
mov
xlat
xor
xchg
mov
pop
hlt
inc
dec
adc
sub
mov
stos
add
(bad)
push
sbb
daa
int
sbb
jmp
cmp
addr16
inc
adc
data16
test
dec
pop
mov
pop
push
mov
mov
test
dec
mov
adc
xor
xor
cmp
lods
inc
mov
adc
dec
call
stos
pop
jl
xchg
cmc
sbb
nop
dec
mov
aas
aad
adc
or
mov
dec
into
stos
mov
pop
mov
mov
aad
pop
mov
mov
lods
xor
add
adc
or
rol
aam
mov
mov
mov
enter
inc
imul
mov
jecxz
mov
push
cld
mov
test
fsubr
jne
(bad)
popa
mov
xchg
cs
into
lock
jle
cmp
or
add
add
adc
mov
int
out
and
push
mov
or
xor
(bad)
mov
popa
push
inc
retf
aad
sub
fimul
or
sub
and
xlat
and
scas
enter
mov
fldenv
mov
pop
push
push
retf
arpl
or
push
mov
(bad)
adc
jle
cmp
cdq
push
cmp
out
daa
mov
xor
xor
(bad)
popa
push
sti
mov
jle
out
dec
mov
and
xchg
repz
add
fisttp
push
jl
adc
les
and
or
inc
fcom
cmp
mov
shl
cs
or
cmp
xor
and
mov
(bad)
xchg
push
clc
ja
dec
aaa
popf
pop
(bad)
and
test
sti
leave
test
ficom
mov
and
mov
retf
les
movs
lahf
mov
retf
loop
loop
add
mov
mov
in
je
jb
ins
sbb
inc
cmp
ret
cmp
xor
jmp
jmp
dec
sbb
movs
pushf
xor
and
fisttp
ins
cld
pop
hlt
inc
xor
sub
stos
daa
mov
lods
dec
xor
push
out
add
inc
xor
data16
leave
mov
test
cmp
jbe
cmp
mov
mov
retf
add
dec
retf
repnz
call
cld
(bad)
cmp
retf
dec
jmp
xor
ins
mov
lods
(bad)
call
pop
inc
jmp
push
push
lock
pop
or
fisubr
lods
int3
inc
mov
mov
xchg
ins
jmp
sbb
push
(bad)
(bad)
fbld
sbb
add
ja
nop
ins
mov
js
sti
outs
gs
xor
inc
mov
data16
adc
call
sub
movs
imul
repnz
sbb
jp
push
popf
push
sub
and
push
mov
jae
das
jmp
pop
sbb
call
das
rol
mov
dec
pop
(bad)
and
neg
add
std
xchg
lock
psrlw
fcmovbe
daa
loopne
rcl
sbb
mov
sub
pop
sub
pop
xchg
pushf
pop
pop
jmp
lahf
ins
movs
data16
pop
outs
jmp
or
repz
ins
fwait
pop
xchg
call
jae
push
(bad)
sub
(bad)
push
pop
aas
pop
fs
cmps
xlat
sbb
div
cmp
popa
push
repnz
jbe
rcl
lea
add
pop
xchg
fist
jns
jmp
(bad)
adc
jg
xchg
ds
inc
mov
pushf
sub
call
shl
xchg
mov
and
inc
(bad)
dec
dec
hlt
inc
xchg
adc
sbb
xor
push
cmp
rcl
mov
adc
popf
mov
pusha
add
(bad)
retf
fdiv
sbb
int
stos
dec
ror
dec
repnz
test
and
add
inc
stc
in
xlat
pop
cmp
in
outs
xchg
int3
and
push
xor
add
jnp
xchg
adc
test
in
mov
jl
sbb
test
inc
(bad)
push
pusha
into
push
int
push
not
in
lods
or
(bad)
adc
mov
repnz
jmp
jmp
push
or
lods
(bad)
push
(bad)
repnz
xchg
xor
mov
in
pusha
ret
mov
jp
sub
inc
push
dec
enter
mov
dec
in
add
jecxz
xchg
inc
imul
push
fmul
add
pop
popf
cmp
ror
in
outs
test
add
int
stc
push
or
sub
cwde
or
ret
retf
stos
jg
cs
push
sti
out
cmp
mov
mov
ja
stos
xchg
xchg
push
loopne
and
out
jg
push
(bad)
int
pushf
int3
(bad)
loopne
test
add
pusha
xor
mov
mov
repz
dec
cmp
push
push
je
and
cmps
stos
push
jp
push
adc
aas
(bad)
ficom
icebp
cmp
fsubp
jae
or
mov
std
in
fild
arpl
push
aad
imul
das
fmulp
pop
xor
ret
mov
hlt
mov
sub
mov
dec
je
fiadd
mov
je
xchg
rol
inc
mov
mov
adc
mov
and
dec
xchg
sbb
loop
arpl
cli
cmps
dec
xchg
popf
adc
jb
dec
mov
mov
jmp
xlat
xor
in
push
sub
push
jmp
addr16
or
add
xchg
adc
inc
pushf
idiv
dec
jmp
sub
dec
lds
adc
popa
add
or
push
pop
dec
cdq
dec
loop
push
push
das
sub
fadd
xor
dec
lods
repz
pop
mov
fwait
xlat
push
pop
xchg
ins
(bad)
(bad)
add
or
sbb
shl
lods
sahf
test
fadd
ins
ja
daa
dec
dec
sub
stos
push
out
xchg
aaa
inc
lea
popf
or
mov
(bad)
add
in
xchg
cmp
ins
fcmovnb
and
push
mov
ds
mov
loope
jmp
mov
push
dec
xchg
adc
jno
fld
inc
adc
sti
scas
ret
out
jmp
xchg
call
dec
sbb
pusha
sbb
mov
adc
mov
popa
outs
cmps
mov
pop
jmp
ins
mov
fwait
jge
jnp
inc
inc
cmp
or
xchg
mov
dec
mov
xor
add
sub
dec
mov
test
adc
sub
imul
jmp
sbb
retf
add
add
call
ins
pop
mov
call
jns
lea
xor
(bad)
data16
jns
xor
push
jp
inc
pop
inc
add
push
mov
cmp
dec
cdq
adc
mov
mov
mov
iret
or
add
pop
and
call
pusha
cld
(bad)
xor
not
enter
xchg
dec
mov
jne
ss
and
pop
xchg
arpl
xor
cmp
std
and
sub
and
aad
retf
pop
mov
xchg
repnz
push
pop
neg
inc
mov
cmp
mov
fadd
je
adc
popf
adc
jno
mov
and
loop
and
ins
sbb
sbb
add
sub
cmp
fstp
jno
fs
cmc
xor
xlat
lds
mov
mov
(bad)
push
leave
dec
pop
xor
push
(bad)
cmp
or
in
gs
inc
mov
mov
and
shr
mov
fidiv
sti
pop
aam
sbb
fsubr
adc
jl
push
sub
push
dec
jae
fsub
pop
(bad)
xchg
call
rcr
jmp
add
xor
outs
loopne
call
retf
cmp
loop
push
out
mov
(bad)
mov
lock
xchg
inc
arpl
adc
adc
fbld
icebp
adc
ds
das
jne
mov
es
(bad)
mov
gs
pop
cwde
das
sbb
ins
in
pop
stc
movs
ss
adc
or
test
mov
aas
lds
fcomp
repnz
lods
adc
inc
dec
repnz
sub
push
push
sti
cmp
(bad)
push
test
aam
pop
adc
push
cmps
movs
push
mov
jmp
mov
sahf
das
inc
call
pop
(bad)
mov
jnp
or
and
pop
sub
fst
lea
not
or
test
fisttp
leave
js
pop
movs
mov
jb
je
imul
cli
(bad)
mov
leave
or
push
or
mov
xor
ret
inc
xchg
sub
cmp
pop
popa
loop
dec
jns
fdivr
nop
sub
out
push
inc
xor
cmp
jmp
popf
fnstenv
cmp
push
out
not
sbb
fidiv
adc
es
xlat
lds
sbb
jecxz
mov
push
xlat
fcomp
jne
(bad)
mov
mov
out
xor
xor
out
and
or
mov
ret
add
dec
hlt
(bad)
cmp
cmp
ss
out
mov
cmp
loop
test
jmp
(bad)
jg
iret
scas
xchg
lods
xchg
test
pop
jge
or
adc
ret
mov
mov
inc
xchg
jmp
add
push
fs
cwde
adc
pop
aam
dec
imul
inc
inc
dec
cmps
pop
dec
mov
push
pushf
xor
mov
loope
arpl
pop
add
mov
inc
inc
dec
push
pop
mov
jg
add
(bad)
xchg
ds
mov
or
leave
mov
jp
mov
and
(bad)
test
fwait
dec
pop
test
sbb
mov
mov
add
mov
iret
out
add
into
push
jo
cmp
daa
cmp
dec
jmp
into
push
push
inc
cmp
mov
shl
mov
and
mov
rcl
sbb
xchg
jp
and
or
sub
imul
(bad)
jne
call
lahf
mov
dec
pop
push
mov
hlt
dec
dec
ret
mov
jo
out
fdiv
xor
aam
push
and
and
add
ror
or
pop
fdiv
pusha
dec
std
xchg
neg
xchg
shr
mov
in
adc
jne
sti
cmp
xchg
pop
add
sub
loopne
pop
call
test
ficom
inc
pop
add
or
(bad)
dec
(bad)
les
ins
ret
inc
frstor
xchg
sti
or
jp
sti
pushf
loop
and
cmc
loopne
cs
ins
pop
pop
fldenv
lahf
(bad)
jmp
test
sti
push
push
mov
cmps
or
cmp
test
sub
in
in
jae
push
cli
cmps
stc
retf
mov
add
fstp
loope
sub
pop
repnz
call
les
xor
xor
jle
push
and
add
pop
push
retf
aad
leave
and
test
push
xchg
inc
out
jecxz
pop
sti
imul
xchg
sub
call
stos
fadd
retf
xor
popf
js
inc
stos
jae
stc
pop
inc
mov
dec
lods
cdq
hlt
xor
pop
dec
dec
bound
xor
retf
dec
adc
mov
mov
bound
int
call
jno
gs
lea
out
daa
and
push
in
sub
(bad)
adc
pop
pop
push
sbb
mov
and
test
cli
adc
ss
mov
add
int3
jne
xchg
sub
nop
movs
push
rcr
fist
enter
test
mov
cli
xor
les
jno
loope
mov
push
(bad)
in
pop
es
int3
inc
rol
lods
fnsave
pop
cmp
push
in
xchg
ins
push
div
xor
ins
mov
pop
fwait
outs
dec
mov
jbe
mov
adc
je
or
or
in
shr
add
fstp
enter
xchg
leave
call
jne
test
inc
cmps
mov
cdq
shr
jo
jnp
cld
in
push
or
out
cmp
das
fild
fmul
dec
test
popf
jo
retf
gs
movs
ins
mov
jnp
das
mov
jmp
nop
sub
mov
neg
mov
mov
lods
pop
cmps
pop
scas
jne
movs
out
inc
add
in
int3
div
test
mov
mov
mov
fiadd
sahf
mov
inc
mov
push
adc
or
and
lds
cmp
popa
jns
push
mov
ins
test
test
lock
(bad)
or
rcr
repz
mov
xchg
jo
repz
or
adc
sub
and
mov
call
push
les
xchg
test
dec
xchg
and
xor
add
pop
int3
icebp
aad
xchg
sbb
jg
mov
or
mov
cmp
inc
cmc
outs
or
or
lods
mov
sbb
mov
fild
cs
mov
sub
addr16
in
cwde
test
out
jae
ja
(bad)
leave
add
or
pop
fimul
loope
(bad)
lock
push
sahf
ret
xor
sub
es
adc
retf
fisttp
and
adc
stos
mov
mov
xor
cmc
lods
mov
pop
xchg
xchg
in
test
ficom
sub
jbe
inc
fstp
sub
add
sub
pop
jbe
call
sti
push
pop
test
add
int
mov
dec
stc
mov
neg
lds
loopne
inc
sub
jmp
xor
mov
jns
cmps
jg
adc
jg
mov
call
xchg
or
xchg
aaa
dec
pop
es
xor
es
aaa
(bad)
dec
cs
inc
leave
cmp
popf
pop
xor
lds
add
inc
lea
add
mov
ror
stos
jbe
(bad)
cmp
mov
cli
out
mov
mul
retf
arpl
sbb
inc
aad
out
cli
jo
push
jge
data16
cli
mov
add
in
stc
pop
mov
cld
dec
push
loop
mov
cmc
cli
out
stc
and
xchg
fild
dec
cli
add
lods
js
int
or
adc
(bad)
inc
jno
mov
test
enter
lock
adc
js
movs
js
add
or
rol
xchg
cmp
fwait
nop
jle
sbb
retf
xchg
retf
mov
lods
mov
data16
lock
hlt
pop
aas
aam
push
and
dec
int3
enter
cdq
and
mov
rcl
loope
out
call
mov
cmp
xor
retf
push
and
inc
stos
push
push
pop
inc
inc
sub
mov
ficom
cwde
je
(bad)
lock
jo
ss
in
dec
adc
sub
inc
mov
pop
push
cmps
push
(bad)
movs
mov
iret
mov
pop
jb
sbb
(bad)
sahf
push
bound
aam
mov
mov
scas
int3
scas
dec
test
sub
jno
adc
pop
lea
movs
popf
jecxz
pop
cmp
inc
repz
js
and
or
mov
mov
fsubr
leave
or
sti
push
arpl
nop
ins
add
xchg
test
sub
add
loop
pop
adc
iret
inc
push
adc
dec
retf
mov
popa
addr16
lods
test
mov
mov
int3
mov
xchg
gs
in
xchg
sti
add
push
stos
pop
adc
push
test
dec
in
in
xchg
pop
stc
lock
adc
push
iret
in
ret
int
retf
(bad)
mov
and
sti
sub
push
mov
stos
xor
jecxz
mov
xchg
dec
test
sbb
xchg
sub
mov
aas
sub
sub
xor
pop
add
idiv
push
or
sub
jl
ds
dec
dec
pop
sbb
mov
dec
pop
and
dec
adc
pop
jl
inc
jecxz
pop
mov
sub
inc
cmp
cdq
pop
loope
xor
xchg
std
xor
mov
ror
in
pop
add
int
adc
clc
hlt
push
and
xor
es
mov
cmp
test
das
xor
out
jmp
push
into
jl
push
(bad)
mov
sbb
or
in
imul
retf
push
dec
sbb
jl
iret
daa
push
fcomp
outs
std
mov
clc
bound
adc
jns
pop
popf
lea
jns
xor
arpl
cmp
jecxz
and
pop
and
daa
out
mov
jns
pop
xchg
sti
xor
fst
mov
je
pop
push
or
pop
aam
xchg
push
or
cli
xchg
test
jg
pusha
adc
mov
sub
cmp
add
cmp
(bad)
adc
aad
dec
fs
xchg
sbb
jae
mov
stc
dec
ficom
add
loopne
lods
add
mov
mov
or
pop
add
sbb
sbb
jl
in
cmps
sbb
fistp
mov
arpl
xor
adc
jae
sbb
cmp
outs
sbb
sub
out
push
aad
dec
nop
and
pop
jns
jle
add
sub
and
sub
mov
dec
gs
push
mov
xchg
mov
jnp
inc
shl
or
pop
out
mov
adc
ja
das
xor
add
lds
data16
xchg
scas
mov
stc
mov
(bad)
fsub
mov
and
xor
inc
push
addr16
test
fld
daa
jnp
cmp
and
imul
dec
enter
mov
cdq
call
lea
hlt
fwait
stos
dec
retf
adc
mov
push
repnz
es
jmp
and
outs
dec
in
mov
fucomi
test
sbb
outs
pavgw
mov
push
adc
fdivr
popf
add
sub
shl
mov
mov
mov
mov
test
inc
loop
ret
clc
rcl
mov
in
push
and
call
inc
ss
sbb
pusha
mov
jb
xor
out
mov
xchg
pminsw
mov
xchg
jae
push
add
xor
adc
sub
and
jae
push
test
jmp
dec
inc
pop
int3
mov
lds
push
jnp
sbb
(bad)
std
cwde
leave
inc
jae
and
ret
ret
cmp
add
mov
jmp
repz
popa
pop
fistp
mov
sbb
xor
iret
(bad)
adc
aad
jg
ret
pop
loop
mul
mov
jmp
push
(bad)
jle
push
ds
cmc
daa
adc
xor
jae
test
ror
leave
mov
repnz
jp
fcomip
mov
ret
in
nop
inc
xchg
cmp
inc
sbb
les
push
jo
str
vunpcklpd
rcr
test
scas
ds
push
imul
cwde
and
push
out
outs
mov
xor
outs
and
idiv
(bad)
(bad)
ins
loope
jae
xchg
xor
inc
addr16
aas
push
lods
cmp
inc
fdiv
mov
sub
jecxz
mov
pop
test
add
xor
mov
les
dec
sar
dec
frstor
inc
jb
push
mov
sub
pusha
fldenv
cdq
ins
jmp
loop
mov
mov
cld
or
test
xchg
add
movs
mov
iret
ja
fisttp
les
or
shr
add
in
push
test
pop
call
push
jg
jns
mov
mov
sub
adc
gs
cmp
pop
add
adc
cmp
pop
ror
pusha
(bad)
pop
data16
call
nop
push
xchg
push
mov
retf
mov
sbb
fs
cmp
inc
sub
dec
inc
retf
mov
push
and
mov
popf
mov
jns
jns
push
not
xor
ja
pop
push
mov
mov
add
push
dec
in
popa
pusha
xchg
shl
mov
into
adc
adc
inc
dec
lock
push
dec
jnp
(bad)
xchg
jp
push
pushf
mov
xor
cs
push
xchg
add
movs
loopne
ins
lods
adc
jnp
and
test
(bad)
add
xor
xor
cmps
call
dec
in
push
push
fistp
dec
push
into
mov
scas
stos
ds
aad
cmp
xlat
push
outs
in
jmp
jp
(bad)
ror
inc
int3
xchg
mov
je
cmps
xor
mov
jb
mov
jns
test
call
enter
das
(bad)
xlat
inc
and
test
stos
jbe
fcmovnb
add
mov
inc
test
nop
xor
rol
repz
add
shl
inc
mov
int
adc
push
sti
or
out
cmc
lds
push
mov
jnp
icebp
xchg
adc
pop
int
jbe
fsub
aaa
lock
xchg
jmp
push
jae
jae
xor
ins
add
pop
fcomp
add
aam
and
cmp
out
cmp
sbb
gs
shl
mov
loop
sub
mov
and
stc
pop
int3
mov
mov
ret
pop
and
pop
shl
les
jno
xor
icebp
dec
dec
mov
scas
add
mov
mov
xor
dec
outs
xchg
fiadd
sbb
sbb
inc
push
sub
jecxz
inc
xor
stc
adc
test
dec
mov
jecxz
dec
adc
pop
xchg
push
fs
je
and
push
ins
push
cmps
pop
xor
mov
es
jmp
jae
xchg
dec
cmp
lahf
sbb
adc
gs
push
xlat
mov
test
call
push
in
inc
jb
and
and
mov
sbb
pusha
xor
jb
psllq
cmp
shr
mov
(bad)
cmp
sbb
dec
pop
sbb
mov
sub
mov
add
sbb
pop
fmul
sub
in
ficom
adc
pop
arpl
dec
xchg
mov
inc
mov
or
daa
jno
sar
clc
push
xchg
cs
push
adc
aas
push
(bad)
push
jp
fstp
cmc
mov
push
call
cdq
dec
jno
adc
es
icebp
sar
fstp
mov
je
and
out
pushf
jmp
and
mov
out
shl
and
test
jecxz
inc
int
cmps
cmp
xor
nop
or
int3
add
or
xlat
cdq
dec
js
iret
movs
lock
add
add
jne
mov
mov
adc
stos
xchg
pushw
sbb
outs
std
xchg
fnstsw
cld
adc
and
scas
sub
mov
mov
es
add
in
out
cs
fmul
daa
mov
test
push
loopne
retf
mov
jp
xchg
adc
add
(bad)
retf
pop
cmp
stc
(bad)
addr16
repnz
sbb
mov
dec
ins
inc
stos
mov
dec
inc
fsubrp
adc
icebp
jb
xchg
ret
inc
(bad)
into
push
out
loop
xchg
in
scas
stos
sub
pop
outs
xchg
pushf
add
sbb
sbb
cmc
js
mov
sbb
imul
nop
or
sub
mov
dec
xor
jp
jge
ror
ret
jecxz
inc
in
sti
aas
adc
mov
call
dec
adc
xchg
test
sub
xlat
int
cmp
mov
adc
sbb
aaa
sbb
cmp
pusha
mov
gs
fwait
cmps
or
ficom
cdq
jp
inc
push
fs
movs
stos
aam
push
mov
xchg
mov
xor
bnd
cli
push
sbb
(bad)
ret
ins
adc
add
mov
inc
xor
or
ret
imul
sbb
jl
adc
es
mov
into
mov
adc
ja
cmc
pop
and
sub
dec
and
push
and
pop
push
inc
shl
cmp
xchg
mov
push
js
pop
ja
cmps
loopne
mov
mov
(bad)
and
pop
sub
mov
jnp
jp
ja
movs
dec
call
cld
push
test
pop
aaa
dec
movs
jmp
sub
fyl2x
fisubr
in
popa
fsubr
into
shl
leave
inc
mov
mov
mov
out
in
inc
jmp
adc
les
(bad)
push
popf
dec
out
ja
mov
or
sbb
sbb
and
mov
and
mov
aam
lock
outs
xchg
inc
loope
sahf
cmps
int3
push
stos
aad
sbb
mov
shl
mov
mov
or
std
pusha
imul
cmps
in
enter
dec
das
mov
xchg
loope
and
pop
xor
fst
mov
shl
add
xchg
ss
push
int3
sbb
fnsave
cmp
je
jbe
call
out
lods
je
push
pop
gs
xchg
pusha
(bad)
imul
cld
pop
outs
fistp
fstp
mov
sub
pop
pushf
lods
scas
mov
lahf
xor
add
into
xor
push
push
mov
mov
sub
mov
push
mov
adc
mov
xchg
nop
adc
push
and
popf
lods
data16
sub
dec
sbb
sub
push
add
add
leave
and
movaps
mov
retf
push
pop
das
push
add
imul
mov
fimul
cmp
das
ins
mov
mov
mov
js
xor
mov
test
data16
mov
and
xchg
outs
inc
repnz
test
pushf
xchg
cmp
and
xchg
test
sub
fstp
imul
xor
gs
lods
dec
in
cs
cld
mov
in
cmp
xchg
stos
fidivr
xor
movs
xor
mov
mov
mov
jnp
xchg
xchg
mov
test
sbb
or
test
imul
cmp
cmp
adc
cmp
and
shr
cmp
clc
or
jns
mov
fdivr
inc
(bad)
rol
cmp
push
push
(bad)
add
fs
sub
xlat
xor
test
or
add
or
out
shl
push
ret
jb
xchg
jbe
arpl
out
mov
pop
pop
arpl
imul
inc
comiss
push
jne
stos
rcl
add
out
repnz
push
mov
pop
or
(bad)
cli
sbb
xor
push
or
xor
dec
or
stc
sub
(bad)
jl
or
pusha
sahf
sbb
ret
call
js
test
mov
add
cmc
loop
cmp
in
loope
sub
call
icebp
int
movs
imul
push
test
mov
sbb
add
adc
cmp
test
out
xchg
pop
xor
shl
mov
mov
in
sbb
and
fadd
es
je
mov
test
ins
add
popa
fimul
mov
data16
jnp
cmp
or
xor
fld
into
inc
or
out
les
shl
aam
adc
dec
test
mov
shr
shl
sbb
fwait
cmc
jnp
out
sub
cmc
call
cmp
pushf
mov
push
inc
outs
dec
stos
mov
push
(bad)
adc
or
pop
repnz
pop
fld
fdiv
jae
mov
pop
mov
add
or
or
pop
push
add
stos
repnz
in
xchg
call
repz
jp
jl
lods
xor
call
mov
sahf
jnp
push
iret
sbb
cs
je
in
pop
in
in
mov
dec
test
fidivr
mov
sub
xor
or
ins
outs
daa
into
push
mov
xor
mov
ja
lods
dec
rcr
jp
in
(bad)
pushw
adc
push
rol
out
ins
(bad)
jg
sahf
and
nop
in
mov
or
push
jbe
mov
sub
mov
pop
mov
and
sti
pop
aaa
mov
hlt
les
adc
sbb
xor
inc
loop
jmp
or
mov
imul
out
mov
(bad)
jg
xor
loope
ds
push
push
scas
retf
aas
xchg
call
inc
sub
mov
xor
xor
jns
call
lods
add
imul
jno
dec
in
or
aaa
fs
loopne
enter
cmp
jnp
mov
cmp
enterw
data16
es
push
cmc
push
or
inc
std
jmp
test
xor
mov
cdq
push
add
nop
dec
movhps
mov
xor
add
iret
test
(bad)
pop
movs
xor
and
rol
mov
push
test
test
data16
test
mov
xor
mov
sub
pop
cwde
pop
mov
dec
xchg
daa
mov
int
call
xlat
cmovle
(bad)
fistp
adc
les
add
outs
dec
xchg
dec
mov
sbb
data16
pop
in
lahf
xchg
xchg
(bad)
retf
pop
inc
dec
aam
xchg
inc
mov
nop
jl
push
rcr
push
shl
inc
ret
sbb
mov
mov
imul
inc
cmps
sub
aad
imul
sub
push
jb
jne
enter
push
adc
xchg
mov
sti
loop
add
fild
add
in
(bad)
cmp
add
push
icebp
cmp
enter
push
aad
enter
ins
cmp
rep
movs
xlat
xchg
inc
push
mov
out
mov
mov
and
inc
int
push
xlat
mov
xchg
or
in
pushf
dec
jae
mov
(bad)
js
mov
xor
clc
(bad)
in
mov
pop
shl
rcl
aas
les
pop
ror
xor
cmp
pop
pop
push
mov
mov
lods
call
mov
add
fsubr
loope
popa
mov
lds
adc
fwait
les
pop
pop
pop
sbb
jb
mov
sub
jle
fdiv
mov
sub
out
jmp
pop
sti
test
stos
pop
ret
and
loopne
sub
outs
mov
push
repnz
push
test
xchg
sub
inc
xor
(bad)
cmp
mov
fst
iret
add
pop
xchg
or
nop
out
sbb
in
mov
leave
and
jmp
std
inc
jp
xchg
jmp
pop
sar
sbb
cmp
push
dec
and
cmc
pop
(bad)
or
add
lods
movs
nop
push
daa
bound
mov
jl
mov
mov
xchg
dec
mov
mov
jmp
test
push
jo
ffreep
mov
adc
mov
test
xchg
jp
sub
mov
(bad)
sub
adc
push
daa
mov
fild
push
mov
xchg
push
sub
xchg
pop
inc
inc
lock
jbe
ret
adc
dec
xchg
mov
push
or
push
cmps
popf
sub
daa
push
je
das
xor
push
xlat
cmp
je
(bad)
mov
movs
mov
neg
inc
cmp
jo
adc
inc
adc
ss
sub
mov
jmp
(bad)
movhps
mov
pop
xor
out
mov
lahf
ins
pop
stc
inc
clc
mov
add
push
and
sub
and
pushf
add
aaa
sbb
jmp
int
or
addr16
jge
xor
add
dec
mov
cmp
inc
int
mov
sbb
test
fnstenv
fdivr
xor
data16
and
jecxz
and
mov
fcmovne
fsub
mov
mov
leave
jb
mov
mov
xor
jp
aam
cmp
stc
and
das
or
mov
and
pop
or
mov
push
idiv
js
shl
sbb
mov
sub
cmp
shl
rol
xor
push
cld
mov
div
ja
loopne
ja
or
test
push
add
xchg
inc
iret
cmp
or
jge
jo
xor
rol
mov
xor
outs
xor
dec
imul
adc
push
arpl
sahf
xor
gs
add
jae
mov
shl
jbe
shr
test
mov
rol
fwait
ja
sbb
adc
mov
mov
popa
mov
push
dec
pop
fwait
mov
icebp
push
pop
cli
fistp
jno
shl
or
popf
ins
add
dec
lahf
push
mov
dec
sbb
addr16
sub
sbb
call
dec
sbb
shl
adc
xchg
stc
mov
mov
mov
mov
(bad)
xor
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
mov
mov
pop
push
push
pop
pop
inc
xchg
rol
out
ret
xor
xor
rcl
mov
adc
stos
pop
test
rep
xchg
mov
lods
scas
test
pop
cmp
xchg
retf
gs
fs
fcom
mov
ja
push
push
adc
ins
sub
inc
mov
imul
into
push
xchg
mov
aas
out
test
bound
ja
mov
stos
inc
adc
je
push
or
(bad)
ret
sub
ja
int3
mov
mov
mov
(bad)
dec
xchg
dec
cmp
cli
mov
ret
or
in
mov
out
inc
add
or
cmp
push
and
cmp
les
lds
cmp
retf
jmp
jle
jno
leave
test
inc
sub
sub
and
in
in
jae
mov
mov
sub
out
push
sbb
daa
xchg
pop
(bad)
mov
psubd
mov
loope
loope
pop
(bad)
stos
mov
and
xor
popf
into
popa
or
push
cmp
or
pop
retf
or
and
cdq
popw
sub
lods
mov
lock
ret
mov
and
addr16
into
xchg
pop
and
sahf
fstp
sub
mov
jge
scas
sub
lods
into
(bad)
aad
fstp
sbb
or
cmp
pop
push
outs
movs
das
dec
out
stos
mov
and
xlat
pop
cmps
rep
out
push
out
push
push
bound
rcl
xchg
xor
xchg
xchg
push
pop
sahf
mov
jno
mov
sub
hlt
ja
mov
mov
stc
jne
ins
bound
test
popf
clc
(bad)
(bad)
int3
clc
dec
push
add
or
mov
test
pop
aas
outs
test
out
push
je
cmp
mov
fimul
xchg
pop
out
jg
hlt
repnz
pop
adc
xchg
pop
jne
inc
or
mov
cwde
repnz
xor
mov
jbe
add
mov
loopne
inc
rcl
jae
push
hlt
xor
mov
mov
ins
out
and
mov
xor
retf
mov
aaa
gs
scas
leave
inc
jg
lods
ins
(bad)
cmp
ja
fs
jp
dec
xor
sbb
stos
inc
sub
jno
fiadd
aad
mov
aam
(bad)
pop
xor
mov
jp
movs
mov
fdivr
xchg
lods
sbb
mov
push
adc
or
inc
and
xor
push
cmp
test
repz
hlt
jg
call
(bad)
out
(bad)
ret
xor
pop
sub
fwait
loop
and
fcomp
mov
or
rcr
xlat
inc
call
repnz
push
call
and
rcr
jmp
in
mov
dec
in
fistp
popf
mov
jmp
and
xchg
mov
sahf
cwde
repz
and
ins
adc
mov
cwde
mov
jb
stc
adc
or
push
bound
aad
mov
neg
adc
or
hlt
leave
call
add
in
pop
inc
inc
popf
arpl
cmp
daa
xor
or
out
sbb
mov
stc
cmp
mov
sbb
jae
push
adc
stos
dec
cmps
or
fdivr
jecxz
pop
and
add
ror
jbe
ret
sub
cmp
stos
adc
pop
jge
ret
gs
dec
aaa
jb
popf
imul
rcr
fisttp
push
(bad)
out
retf
jge
add
mov
out
das
xor
fsub
lods
jp
inc
xor
pop
test
push
jns
adc
movs
mov
js
push
sbb
mov
jo
loopne
pop
and
push
outs
int3
scas
mov
outs
xchg
xor
cmp
mov
push
add
jecxz
aas
shl
adc
cmps
lea
xchg
rcr
xchg
add
leave
fimul
and
jb
ret
or
and
adc
xchg
cmp
add
cmp
mov
mov
mov
fsub
(bad)
ficomp
ret
ss
movs
jns
and
pushf
mov
jae
xchg
dec
dec
ja
mov
cmp
(bad)
out
(bad)
shr
imul
add
inc
push
repz
push
or
push
fcmovnu
add
das
test
or
es
inc
sbb
dec
(bad)
sbb
test
inc
pop
fs
pop
scas
std
add
sbb
adc
shr
std
inc
or
fstp
push
inc
and
addr16
rcr
mov
push
hlt
dec
inc
rcl
and
sub
and
cmp
test
(bad)
rcl
outs
lods
xchg
test
mov
(bad)
retf
sub
cmps
mov
add
ins
jecxz
xchg
dec
js
lea
retf
out
or
ja
push
lods
add
xchg
xor
pop
mov
xchg
push
retf
out
mov
fcomp
sbb
pop
test
leave
mov
mov
dec
enter
call
rcr
push
(bad)
or
jne
mov
jb
or
pop
enter
adc
inc
mov
pop
and
and
add
shl
add
aaa
jecxz
stc
sub
sub
in
xchg
cmp
lods
out
test
add
stos
xor
nop
cli
mov
imul
xchg
out
mov
adc
call
dec
ret
sub
xchg
div
pusha
loop
gs
ss
push
or
repz
cwde
dec
inc
(bad)
mov
je
ret
mov
outs
div
sbb
sub
shl
in
pop
sub
les
inc
in
mov
out
leave
neg
in
fisub
mov
fcom
jns
xchg
sar
add
inc
pop
xchg
fdiv
sub
mov
xchg
addr16
(bad)
fwait
int3
xor
ins
inc
es
or
dec
fs
addr16
pop
add
mov
mov
mov
jmp
std
push
icebp
push
aam
inc
cmps
ja
fstp
(bad)
stos
fcomp
dec
mov
mov
mov
dec
dec
push
mov
push
and
addr16
mov
mov
aaa
mov
mov
xchg
cmp
inc
fmul
mov
adc
adc
scas
jge
sub
je
jne
scas
or
mov
ror
fnstcw
mov
test
mov
rol
mov
jg
and
mov
adc
dec
fisubr
scas
xchg
or
into
fmul
inc
cdq
sbb
dec
pop
(bad)
ret
adc
lods
ins
loopne
scas
test
repnz
cmp
or
dec
dec
(bad)
push
je
bound
test
imul
loope
jne
cld
ja
cmp
adc
mov
out
loope
sub
bound
nop
movs
lea
in
sub
sbb
and
push
adc
or
push
ja
dec
out
repnz
scas
stos
ret
test
nop
sub
ss
aas
arpl
lods
mov
rol
loop
cdq
xchg
push
add
scas
jmp
adc
aad
test
pop
int3
int
mov
cmp
data16
jbe
arpl
cmp
cdq
xchg
push
shl
les
lock
and
push
stos
stos
adc
ja
ret
es
mov
imul
cmp
jbe
cmp
jmp
jbe
add
ror
fld
pusha
pop
push
mov
stos
(bad)
pop
das
sub
mov
lea
sbb
cmp
into
clc
je
and
inc
(bad)
push
mov
leave
jno
dec
dec
add
jo
call
push
rol
jb
pop
and
in
hlt
data16
mov
push
sub
movs
lods
adc
push
adc
fild
gs
pop
mov
add
pop
fsubr
repz
push
out
(bad)
cmp
add
jmp
fimul
clc
push
add
adc
sbb
setae
lods
mov
out
jge
mov
fistp
inc
rol
xchg
mov
das
jne
push
pop
mov
add
pop
pop
jmp
in
call
jae
inc
push
mov
dec
or
(bad)
outs
xchg
and
imul
and
int
push
adc
sar
leave
add
ss
iret
rol
repnz
push
sbb
and
mov
out
in
das
jg
enter
ret
add
xor
cmc
je
cmp
aad
leave
mov
fstp
cmps
pop
pop
jg
inc
add
jno
sbb
outs
push
xor
and
push
idiv
cdq
ret
(bad)
fnstsw
out
retf
adc
cmc
cmps
cs
ss
push
mov
adc
jno
push
dec
jp
push
pop
ds
dec
and
movs
or
add
inc
loope
fdivrp
pop
sub
or
dec
cwde
xchg
push
call
jl
jge
sbb
movs
(bad)
fild
ret
leave
fiadd
nop
(bad)
sbb
out
jnp
pusha
cmp
or
jl
xchg
mov
mov
outs
adc
cwde
int3
popf
xor
dec
pmullw
int3
jp
scas
jecxz
sbb
cs
inc
add
cmp
push
sub
mov
test
icebp
xchg
adc
adc
jle
fdivr
lock
data16
sahf
cmp
cmps
loop
addr16
hlt
stos
jmp
sbb
test
cdq
pop
out
mov
aad
adc
dec
jmp
or
mov
rcr
jnp
adc
aad
les
aas
jmp
inc
and
push
add
sbb
or
in
mov
fs
popa
mov
push
ja
cld
popf
pop
test
es
jno
mov
imul
aas
inc
fdiv
push
mov
out
xor
add
mov
test
xchg
mov
and
daa
sahf
sub
(bad)
icebp
sub
je
retf
pop
in
xchg
pop
jmp
fidivr
dec
repnz
cmp
xor
call
mov
jmp
imul
cmp
mov
outs
sub
pop
sbb
sbb
xchg
cdq
sar
aad
or
cmp
sbb
push
test
sbb
push
or
call
leave
mov
cmps
pushf
mov
mov
inc
ins
or
aas
pop
es
addr16
je
push
mov
jmp
xchg
daa
fsubr
stos
cld
in
sar
(bad)
sub
lock
mov
in
in
and
cmp
sbb
or
cmp
dec
cmp
xchg
mov
popf
out
imul
test
xchg
inc
dec
xor
mov
(bad)
repnz
scas
xor
cmp
ror
inc
mov
out
test
mov
or
ds
xchg
and
jmp
cmps
or
push
(bad)
in
xchg
sub
dec
test
ror
mov
mov
xchg
ins
sub
or
movs
push
xchg
fdivr
jo
mov
mov
inc
pop
jno
addr16
int3
sub
out
movs
sar
dec
pop
popf
es
cmp
xor
adc
sub
jg
shl
lea
gs
xor
or
sub
ins
push
push
sbb
das
ror
mov
hlt
test
and
or
div
aaa
cmc
mov
stos
pop
fs
ret
and
mov
push
shr
mov
adc
mov
sbb
sbb
shl
(bad)
jno
push
and
outs
jge
sbb
(bad)
fidiv
inc
jmp
dec
enter
clc
lahf
outs
loope
es
lahf
mov
hlt
inc
xchg
pop
add
and
fidiv
push
and
cld
push
bnd
mov
jg
and
sar
(bad)
cmc
sub
imul
popf
push
xchg
mov
std
scas
rol
and
xor
sub
iret
shl
fbstp
add
mov
cld
fimul
icebp
lods
jns
pop
not
inc
mov
arpl
sub
add
adc
pop
push
xlat
shl
sbb
cmps
jmp
data16
xor
or
test
xchg
and
mov
mov
mul
xor
cmps
add
cmps
lahf
mov
push
icebp
sub
(bad)
fidivr
mov
pushf
mov
add
add
jge
or
fdivr
iret
nop
pop
pop
out
cwde
push
inc
movs
sub
jge
lods
cmp
aad
push
inc
cmp
repz
mov
popf
push
adc
xchg
mov
or
movs
out
cmp
aaa
stos
inc
mov
sub
mov
ss
aaa
rcl
inc
pop
aam
jo
scas
xlat
cdq
loop
retf
sbb
cmp
and
out
sbb
sahf
ds
cmp
or
or
rol
cmp
repnz
xlat
es
xlat
pop
jb
adc
xor
jmp
xchg
mov
mov
sbb
repz
cmps
add
adc
jmp
mov
les
sub
shr
or
imul
sub
into
movs
push
mov
lods
or
xor
push
das
(bad)
pop
fdivr
cmp
rol
cmp
xchg
adc
cs
mov
scas
cwde
dec
rcr
xchg
and
adc
loopne
ins
popa
cmp
jo
movs
sbb
iret
sub
test
aas
jg
imul
push
test
fcmovne
lahf
outs
out
pushf
push
gs
add
std
(bad)
or
lahf
icebp
jge
pop
sbb
fmul
ret
add
gs
popf
shr
lock
mov
(bad)
push
call
xor
dec
jmp
xchg
aas
pop
push
sbb
pop
jg
pop
lods
push
sbb
std
fdiv
popf
fild
retf
push
pop
call
out
repnz
push
pop
inc
dec
sbb
jg
movs
push
adc
clc
cmp
ror
push
retf
cmp
jns
clc
pop
jecxz
and
sbb
cmp
adc
pop
dec
pop
adc
jbe
adc
push
(bad)
pusha
push
repnz
addr16
loope
push
mov
out
dec
fmul
in
popa
dec
xor
(bad)
js
idiv
in
mov
dec
xor
adc
in
adc
inc
and
pop
and
xchg
inc
aad
mov
out
mov
movs
popf
push
jnp
or
add
xor
jp
mov
pop
inc
cmp
fimul
dec
push
dec
jle
int
mov
cmp
div
retf
loope
sub
pushf
sti
fisub
clc
mov
addr16
jno
sbb
jo
pop
sub
push
les
jmp
adc
fwait
imul
scas
fisub
xchg
sar
scas
mov
loopne
push
stc
fucompp
inc
repz
(bad)
pop
xlat
push
adc
pop
loop
inc
imul
jbe
pop
hlt
adc
mov
xchg
jp
cmovs
jmp
pop
sti
out
mov
adc
sub
fsub
in
add
push
sahf
cmp
or
rcl
retf
jg
adc
dec
xchg
mov
cld
aad
add
(bad)
stos
into
add
jae
jp
neg
lods
test
cli
je
(bad)
pusha
out
pop
mov
pop
xor
std
inc
sub
sbb
push
ja
cmc
mov
cmp
sub
add
clc
push
mov
aam
jle
addr16
add
clc
dec
add
div
es
and
imul
jnp
mov
mov
das
pop
pop
(bad)
cmps
js
es
dec
jg
add
popa
sbb
cmps
mov
aas
pop
pushf
push
push
xchg
mov
adc
cmp
and
stos
inc
stos
popa
mov
dec
push
inc
sbb
xor
dec
cmps
retf
xor
jecxz
bound
ds
aas
cs
in
fstp
adc
cmps
lahf
inc
in
jnp
gs
add
mov
dec
addr16
jae
pop
test
inc
bound
pop
mov
ja
or
cmps
lods
daa
mov
ja
scas
mov
dec
fistp
lahf
(bad)
push
dec
dec
out
fs
in
repz
adc
mov
pop
cmps
scas
add
push
mov
out
fiadd
mov
push
or
cmps
imul
add
mov
into
cld
out
adc
jmp
xor
push
out
or
int3
sbb
cmp
cmp
and
leave
scas
inc
sub
sbb
(bad)
fisubr
popf
mov
test
pop
or
in
call
cld
xor
addr16
mov
add
jb
lea
into
div
test
les
jno
or
int
into
cmp
pop
mov
xor
sub
cmp
ret
aad
mov
cmp
mov
out
push
pop
mov
stos
or
lock
push
cmps
xor
xchg
push
mov
push
mov
(bad)
stos
jp
push
pop
add
in
lock
rol
pop
fdiv
leave
sbb
pop
jo
push
scas
mov
test
outs
mov
jno
mov
not
pop
adc
mov
aam
sub
and
sti
push
jb
lahf
stos
adc
out
mov
icebp
js
sbb
fbld
call
cdq
bound
(bad)
push
sub
shl
cmp
inc
dec
stc
adc
pop
bound
or
mov
mov
mov
push
jecxz
pop
push
mov
iret
or
pop
stos
popa
and
push
gs
enter
sub
mov
dec
outs
mov
push
jle
(bad)
cld
dec
fcomp
mov
movs
sahf
cmp
inc
push
xor
lock
mov
dec
push
mov
mov
dec
inc
dec
movs
jb
ret
lds
shr
repz
adc
rcr
lea
dec
adc
mov
pop
stos
cli
mov
sub
test
in
mov
xchg
cdq
add
fldenv
sub
push
cmc
clc
or
aad
ret
test
pop
stc
int
sub
inc
ret
scas
arpl
mov
fcomi
adc
cmp
jge
mov
cli
sbb
dec
pop
leave
dec
aad
add
mov
pop
inc
cdq
(bad)
movs
xchg
mov
adc
lods
ins
sbb
sbb
ins
and
outs
mov
sar
xlat
mov
test
xor
sti
mov
(bad)
adc
jae
ficomp
pushf
mov
jns
xchg
fsubr
jl
iret
pop
push
inc
xchg
xor
popf
or
mov
call
push
xlat
and
mov
or
xchg
xchg
xor
pop
lods
sub
mov
hlt
xchg
xchg
and
inc
xor
js
xor
aad
xchg
ins
push
fs
cmc
push
jae
mov
xchg
or
lock
cmps
pop
mov
cmp
je
mov
ins
cs
inc
jno
or
sbb
mov
aam
pop
mov
xchg
sub
mov
xchg
jmp
dec
(bad)
mov
out
idiv
sbb
test
xchg
cmp
pushf
jnp
xor
adc
(bad)
(bad)
shl
fild
xchg
imul
nop
ret
xor
sbb
push
cmp
jbe
mov
shl
xchg
cmp
mov
out
sbb
sub
mov
into
xor
in
scas
push
or
out
add
cmp
cmp
cld
stos
cmc
out
jmp
pop
xlat
push
call
jg
mov
fisttp
mov
in
add
aas
stos
clc
mov
or
ds
push
sbb
dec
or
and
ret
out
pusha
rol
and
les
lods
push
jae
inc
in
int3
xor
or
inc
jecxz
scas
mov
mov
imul
leave
sbb
sbb
jmp
std
std
dec
out
popa
xchg
cmp
pop
jle
jb
inc
out
mov
cli
sub
lea
repz
ins
xchg
jns
inc
pop
dec
jmp
add
mov
adc
cmovs
jmp
std
push
dec
mov
jno
sub
movs
test
lods
(bad)
arpl
cli
add
loope
or
aam
mov
xor
cmc
scas
jno
repnz
(bad)
rcl
in
mov
push
pushf
xor
out
mov
add
je
ds
jmp
lods
sub
push
ins
int3
sub
inc
in
cmps
(bad)
fild
test
dec
and
jge
cmp
mov
sti
xor
jbe
mov
iret
push
xor
cmp
cmp
cmp
inc
ins
xor
add
dec
and
movs
add
sub
fldl2e
pop
dec
test
xlat
sub
pop
div
sub
adc
mov
movs
push
pop
nop
pop
rcr
ins
add
inc
sbb
mov
shr
push
inc
push
ins
sbb
cmp
repnz
les
xor
adc
mov
mov
jge
fstp
jecxz
xchg
sub
jle
pop
into
and
sbb
cs
sbb
jmp
mov
aad
(bad)
mov
in
cmp
mov
xchg
in
cmp
cmp
movs
mov
fcomp
pop
jno
adc
mov
adc
gs
bound
(bad)
or
jp
js
das
stc
fwait
mov
sub
mov
cmp
ret
movs
pop
sbb
and
icebp
sub
mov
and
adc
inc
(bad)
das
sub
fsubr
xchg
or
sahf
retf
jo
adc
mov
and
out
aas
sbb
pop
sbb
jmp
mov
aas
idiv
test
stos
jmp
sub
cli
mov
(bad)
mov
mov
outs
pop
inc
out
out
fsubr
push
sub
pop
icebp
sub
gs
adc
in
mov
push
loopne
nop
out
inc
inc
mov
jmp
push
gs
xor
dec
push
sbb
or
jmp
cmp
cmp
add
mov
add
daa
add
(bad)
fld
push
mov
test
call
or
and
jl
int3
dec
in
movs
stos
retf
jae
inc
out
and
mov
je
gs
test
dec
sbb
push
lea
sub
pop
push
loop
mov
stc
icebp
mov
push
sub
or
arpl
cmp
xchg
jecxz
mov
retf
dec
or
test
sub
xchg
in
cli
or
dec
push
(bad)
xchg
repnz
(bad)
push
push
and
sahf
int
pushf
inc
(bad)
xor
(bad)
jo
retf
dec
or
leave
lock
(bad)
popa
out
and
inc
pop
leave
lods
mov
imul
add
xchg
mov
mov
jmp
or
ins
xchg
sub
sub
movs
fnsave
cwde
imul
or
or
sbb
sbb
xor
sub
(bad)
xchg
call
lods
sbb
cwde
pop
fist
mov
loope
into
ds
add
lahf
jle
jmp
adc
lahf
arpl
(bad)
jne
pop
pop
clc
sbb
mov
add
cmc
sahf
(bad)
mov
sbb
mov
and
test
mov
add
push
or
xchg
mov
sbb
inc
push
xor
adc
clc
fistp
lods
xor
or
mov
fisubr
ds
xchg
fcomip
dec
push
and
test
mov
mov
and
xor
pop
cmp
sbb
jno
mov
and
cmc
icebp
test
add
add
(bad)
xor
xor
sbb
call
test
clc
cdq
pop
mov
test
out
jnp
push
(bad)
cdq
imul
cmp
push
int
aad
arpl
pusha
jmp
jp
js
or
cmp
movs
lods
add
and
or
test
mov
sti
sete
xchg
test
out
pushf
add
mov
adc
pop
fcmovnb
push
add
mov
mov
pop
adc
in
pop
sub
sub
jne
fs
lea
call
dec
fs
xchg
and
je
jnp
leave
imul
daa
(bad)
add
push
aad
sbb
mov
inc
data16
mov
in
push
ss
fdiv
popa
cmp
dec
fst
and
push
or
cmp
push
retf
jle
jg
adc
lock
jne
fcmovnbe
fwait
adc
cmp
dec
push
psrlw
inc
cs
cld
gs
add
xor
jae
gs
xor
xor
imul
fwait
xor
jge
mov
xlat
fbld
outs
and
adc
fmul
jno
jl
or
pop
sub
pop
aaa
jp
jmp
push
pop
jno
ret
sti
sbb
call
xor
aam
es
clc
xchg
and
add
jecxz
dec
fst
sub
call
arpl
fisub
dec
ror
mov
cmp
dec
jecxz
push
stc
or
mov
in
mov
imul
and
xor
in
mov
mov
xlat
push
xchg
call
not
mov
ret
inc
inc
(bad)
cmp
sahf
aaa
jae
cmp
mov
add
jmp
ss
xor
cs
mov
jnp
mov
repnz
push
xchg
lock
pop
add
pop
and
xchg
imul
and
enter
or
jge
sub
aas
mov
popa
push
enter
dec
inc
lods
lods
je
add
mov
or
sub
sti
dec
out
add
rol
sub
enter
mov
push
(bad)
mov
push
pushf
into
in
dec
into
pushf
adc
repz
pop
push
mov
xor
(bad)
jg
jnp
imul
les
inc
xor
cli
or
cmps
stos
popa
fnstcw
dec
retf
and
mov
add
hlt
pop
mov
inc
pop
fs
xor
or
inc
sub
push
popa
in
aam
test
add
les
iret
sub
pushf
inc
push
pop
mov
es
sub
and
dec
call
lds
lea
sbb
sub
jbe
out
adc
cmp
dec
jne
repnz
inc
push
iret
add
in
pusha
dec
push
clc
xor
je
aad
xor
xchg
adc
daa
cmp
inc
or
sahf
mov
jo
sub
add
mov
inc
(bad)
outs
retf
cdq
out
imul
into
add
xchg
add
jne
les
fdiv
lock
xchg
sbb
and
into
(bad)
(bad)
rcl
mov
dec
xchg
xchg
mov
sub
(bad)
sub
enter
dec
sbb
xchg
div
and
mov
push
dec
cli
lea
jno
push
xor
popa
jno
test
sub
mov
dec
hlt
cmp
mov
enter
(bad)
cmp
sbb
jg
xchg
out
push
inc
ficomp
cmc
or
sbb
out
into
sbb
push
mov
outs
imul
adc
push
cmp
dec
mov
jmp
jmp
or
shr
enter
add
xchg
mov
mov
inc
lods
sti
fist
(bad)
aas
jb
lds
ret
dec
adc
sub
jb
out
(bad)
mov
sbb
movs
repz
xlat
xchg
mov
loop
ja
jb
adc
jl
or
sahf
retf
cmps
mov
inc
sbb
cmps
jnp
push
imul
retf
mov
add
cmp
mov
lahf
inc
xchg
retf
enter
mov
mov
js
mov
pusha
jge
test
(bad)
fdiv
pop
test
(bad)
sbb
xchg
gs
sub
jl
dec
or
mov
daa
mov
cmp
mov
loopne
pop
or
int3
cmps
adc
add
addr16
lahf
add
push
mov
pop
idiv
fisub
scas
jle
push
push
das
xor
cs
ins
pop
hlt
xor
mov
shl
jae
and
fwait
mov
pop
xchg
(bad)
icebp
out
mov
dec
pushf
ret
jp
in
jge
loope
and
xor
test
ins
mov
mov
add
cdq
clc
sbb
ret
xor
cmp
add
lea
popf
pop
loop
mov
sar
pop
dec
repnz
out
sub
dec
out
(bad)
pop
mov
pop
(bad)
dec
retf
pushf
mov
xchg
lds
inc
loopne
lds
pop
xchg
inc
les
xchg
mov
test
or
aas
inc
(bad)
in
xor
(bad)
nop
mov
or
loope
dec
cwde
aam
pusha
out
es
sub
push
adc
in
ja
and
fild
enter
dec
or
daa
add
mov
mov
inc
mov
jecxz
sub
shr
fwait
ins
aas
xchg
js
push
pop
pop
iret
pop
test
mov
cmc
mov
and
fdiv
fadd
jbe
les
dec
ss
mov
jp
fistp
movs
or
inc
xchg
cli
jmp
mov
mov
cmps
push
cdq
mov
gs
(bad)
add
sbb
dec
pop
das
add
jb
inc
push
rol
iret
iret
call
outs
hlt
sbb
into
add
add
add
mov
(bad)
pop
sbb
test
daa
add
inc
in
jns
sub
mov
stos
sbb
inc
xor
push
mov
sub
into
pop
retf
add
scas
xor
out
xchg
xchg
fwait
inc
pop
and
xor
mov
xchg
sub
push
(bad)
je
and
fsub
ret
pop
adc
aaa
xchg
push
ins
and
push
sar
or
add
mov
not
mov
sub
int
pop
popf
push
pusha
mov
stos
jae
jns
nop
jmp
inc
scas
pushf
lods
ins
out
push
mov
push
push
sahf
(bad)
aad
test
in
fsubp
push
dec
fsubr
xchg
sar
aas
fstp
popf
mov
and
lods
push
jmp
dec
cmps
dec
inc
mov
aas
jno
out
out
dec
das
ins
cmp
das
dec
dec
scas
ds
mov
push
xor
pushf
add
add
push
adc
xchg
imul
sub
popf
pop
into
retf
ds
push
push
adc
inc
add
jecxz
pop
xor
scas
adc
stos
(bad)
aam
pushf
and
fwait
sbb
jp
inc
call
add
outs
outs
pop
jns
(bad)
fmulp
pop
add
mov
cmp
jle
je
jbe
add
jmp
popf
shl
dec
nop
inc
cwde
outs
and
hlt
shr
xchg
mov
sub
push
jns
leave
mov
or
pop
push
lea
xlat
mov
mov
dec
pop
stos
jne
sbb
ret
das
adc
cdq
out
lock
inc
loop
jge
dec
cmp
shr
ret
jmp
jmp
adc
fwait
outs
movs
xor
mov
pop
leave
ret
fdivr
inc
adc
int3
stc
xor
mov
stos
js
pop
ins
ss
cmp
sbb
cdq
imul
dec
test
push
imul
rol
add
inc
mov
push
sahf
push
bound
cmp
jecxz
dec
loop
(bad)
sub
mov
jae
cmp
jbe
pop
stos
push
push
cmp
or
int3
loop
imul
or
mov
test
aad
mov
cli
push
iret
lods
xchg
xchg
inc
nop
push
and
adc
es
jns
nop
hlt
out
inc
dec
lods
ds
dec
push
daa
or
dec
jecxz
aaa
loope
adc
push
stos
inc
cmps
mov
sub
mov
lock
sbb
sub
fld
fisttp
mov
inc
fs
pop
dec
jl
jno
add
or
sbb
lahf
pop
xlat
mov
add
xor
retf
nop
lock
das
sub
scas
jmp
call
test
aas
stc
push
inc
adc
mov
xor
bound
pop
std
add
jmp
mov
shl
or
xchg
add
mov
pop
std
sahf
sub
dec
imul
fwait
mov
add
int
leave
inc
call
mov
and
jb
push
xor
mov
ds
pop
shl
push
(bad)
rcr
pusha
xor
dec
loope
cmps
pop
cwde
out
gs
sub
mov
push
sahf
mov
add
in
jno
movs
adc
xchg
call
rcr
jle
or
lahf
mov
pop
inc
dec
int3
cmp
test
or
pop
jg
or
jmp
cmp
adc
jmp
push
loope
(bad)
test
loope
jp
ret
cmp
pop
cmp
cmp
pop
sub
cmp
xor
movs
cmc
jmp
outs
jg
enter
mov
out
dec
jp
fcomp
pop
into
jle
mov
xchg
clc
pop
mov
ret
clc
pop
xchg
xor
inc
cmp
mov
stos
adc
mov
xchg
jge
fsubr
add
mov
loopne
scas
and
rcr
jle
xor
inc
(bad)
movs
add
inc
dec
daa
shr
or
push
mov
rol
test
sti
pop
sbb
jl
add
pop
and
cmp
mov
push
sub
pop
fisub
lock
lahf
push
sub
shl
pop
test
jle
jns
int3
mov
cmp
cmp
add
jg
out
pop
cld
push
jle
test
adc
aam
test
push
sbb
inc
test
xchg
neg
dec
imul
jno
xor
pop
push
or
gs
imul
dec
cmps
xor
mov
ja
cmc
dec
xchg
mov
jecxz
add
test
(bad)
movs
dec
sub
jb
pop
cmp
nop
push
mov
xor
mov
outs
xchg
cwde
pop
mov
call
mov
aad
mov
or
movs
rol
shr
jmp
aaa
or
push
rol
cwde
imul
cdq
and
push
sahf
dec
dec
inc
mov
inc
shr
cmp
bts
test
add
mov
lods
sar
(bad)
pop
jge
icebp
in
cmp
inc
and
les
cs
mov
fcmovne
lods
ins
in
fs
imul
inc
cwde
ror
fild
and
ret
jo
pop
str
adc
bound
cli
jmp
out
ja
cdq
cwde
nop
jo
sub
xchg
cwde
mov
xor
int
mov
cmp
loope
ins
mov
int
mov
and
sub
pop
xchg
mov
pop
sub
inc
ficom
call
lods
cdq
jbe
imul
jp
shl
jmp
out
lods
pop
retf
add
inc
outs
pop
jb
dec
xchg
(bad)
lds
call
outs
xchg
xor
add
or
xor
cwde
push
mov
je
or
and
fmul
and
aas
pop
xchg
jo
xor
cmps
mov
pusha
add
add
cmp
out
add
lods
mov
adc
daa
jae
mov
mov
aas
add
cld
stc
mov
inc
call
sub
jae
data16
jmp
adc
retf
fld
ret
jno
xchg
dec
mov
push
pusha
les
adc
adc
mov
pop
xor
test
int
les
movs
mov
push
aad
or
movs
push
cs
jg
dec
cmp
inc
test
iret
adc
(bad)
jmp
sbb
mov
push
jb
mov
lahf
arpl
cwde
mov
mov
movs
pusha
and
pop
mov
cdq
sar
fsub
jge
mov
ret
xchg
inc
jmp
int
pop
or
cmps
and
cmp
iret
push
inc
cmps
inc
push
adc
nop
or
ins
pusha
xor
mov
cmp
ror
out
das
xchg
xchg
dec
fs
or
mov
dec
pop
mov
add
xlat
xchg
cld
loopne
loop
rol
out
in
mov
pop
mov
stc
fstp
test
(bad)
jmp
out
sub
cmps
(bad)
(bad)
out
pop
test
call
xor
sbb
push
mov
push
outs
inc
lea
push
push
pop
pop
sbb
mov
mov
sahf
xor
add
in
cmps
ins
mov
lods
or
icebp
jno
push
xor
movs
pop
inc
mov
pop
lea
aam
retf
movs
jle
dec
(bad)
and
inc
outs
dec
jbe
sub
hlt
dec
jecxz
leave
stc
push
mov
jbe
aas
gs
stc
(bad)
xlat
inc
sub
or
mov
cmp
sahf
sub
lock
xor
shl
(bad)
imul
cmp
and
pushf
xor
jg
sbb
sub
in
pop
sub
fisubr
lea
inc
xchg
les
push
and
fwait
sbb
fild
pop
sub
iret
mov
inc
mov
fs
push
call
xor
add
nop
div
jae
sub
jb
pop
movs
enter
outs
in
jp
lea
nop
xchg
test
xchg
movs
inc
push
imul
push
push
jg
ficomp
jge
push
sub
inc
sbb
outs
adc
pushf
or
sti
mov
sub
lods
jo
push
xchg
fidiv
pop
jg
xchg
adc
sub
dec
fucomip
mov
enter
sbb
or
dec
mov
lods
mov
add
mov
inc
mov
retf
cmp
mov
in
mov
test
mov
ja
test
pop
hlt
sub
jae
cmp
cli
cmp
fdivp
sbb
jg
lds
outs
sub
xchg
cdq
fiadd
mov
repz
cmc
aas
jb
push
pop
iret
in
and
pop
inc
test
stos
sti
xor
sahf
jp
rcr
cmc
lahf
inc
or
inc
xchg
in
outs
test
repnz
lods
push
push
xchg
scas
xor
(bad)
pop
jno
push
int3
ret
push
repnz
push
loope
mov
pop
add
push
sahf
repz
in
cmp
cmps
cmp
out
test
mov
inc
inc
cs
dec
dec
xchg
dec
mov
dec
ss
add
jp
(bad)
movs
sbb
xor
jno
jg
mov
fsubr
retf
cmp
nop
jno
rcr
and
cmp
inc
jns
stos
dec
cmps
pop
push
repz
ficom
mov
adc
fst
cmp
mov
jbe
inc
and
mov
aad
fmul
ror
push
dec
pop
xor
(bad)
mov
dec
es
mov
int
mov
call
dec
jmp
icebp
js
out
jbe
jmp
(bad)
int
(bad)
outs
pop
and
xchg
xchg
xchg
in
xchg
hlt
and
xor
idiv
jge
movs
dec
fcmovbe
add
pop
and
cmc
push
enter
jns
lds
inc
add
loop
inc
jg
retf
icebp
(bad)
sub
ins
bound
mov
int3
mov
add
mov
dec
jge
call
cmp
les
mov
fcmovnbe
or
pop
xchg
dec
popf
ds
pop
mov
aam
lods
sub
sub
dec
jmp
inc
call
push
int3
mov
jp
nop
sub
frstor
cs
lahf
and
jecxz
dec
stos
fcom
lahf
loopne
ins
(bad)
jns
in
aam
push
test
mov
retf
inc
push
cmc
sub
mov
and
sbb
fcmovbe
xchg
push
sub
add
(bad)
cmps
xor
ds
pop
imul
je
retf
and
and
cs
cmp
and
cli
ins
jnp
adc
push
cwde
pushf
push
aas
cs
daa
aam
jmp
adc
xlat
ret
(bad)
mov
mov
mov
cld
(bad)
in
pop
cmp
repnz
push
jg
addr16
mov
idiv
jo
inc
or
cdq
imul
xchg
in
dec
add
sti
xchg
dec
jmp
inc
js
cmp
xchg
int
in
mov
and
(bad)
int3
iret
dec
add
gs
mov
call
mov
xor
les
cmp
pushf
or
mov
cmp
push
nop
xchg
push
ffreep
inc
rcl
sub
pop
nop
add
mov
xor
leave
(bad)
fist
rcl
or
(bad)
inc
adc
(bad)
dec
push
cwde
push
int3
pusha
nop
or
sbb
mov
aad
push
(bad)
bound
pop
enter
mov
enter
sbb
fwait
ret
pop
jne
pushf
and
pushf
ins
out
push
or
jge
sub
jge
sti
dec
fld
sbb
adc
js
or
inc
ss
rcr
imul
fcomp
add
dec
dec
or
push
push
jb
and
(bad)
out
aaa
enter
shl
in
lods
jmp
adc
xor
out
pop
movs
ffree
dec
sub
or
add
mov
jge
imul
lods
xchg
push
sub
push
call
mov
sub
sahf
sbb
int
mov
repnz
sbb
lods
ss
rol
call
sub
push
lea
stos
mov
xor
mov
cld
mov
loope
ins
sbb
push
add
ins
cmc
mov
rol
rcl
add
push
cmp
xchg
mov
mov
ror
push
rcr
sub
shl
push
test
in
xor
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
(bad)
fld
enter
cmps
sbb
inc
jmp
retf
push
xchg
xchg
add
test
jne
push
leave
bound
das
xchg
xchg
xchg
out
cmp
dec
dec
lods
pusha
sahf
lods
xchg
push
or
mov
dec
push
inc
xor
mov
pop
pop
push
pop
addr16
pop
add
push
lods
xchg
jno
stos
jo
inc
push
pop
fbld
push
or
movs
xchg
(bad)
fst
in
or
out
cli
leave
sub
cmp
clc
mov
fwait
(bad)
push
add
add
adc
shr
hlt
lods
lds
hlt
(bad)
sub
sub
ret
stc
pushf
fmul
(bad)
popf
and
jg
push
leave
in
ror
add
int3
push
addr16
jae
xchg
cmp
dec
xchg
add
jne
pop
sub
add
cmp
call
sbb
aaa
retf
pop
sti
sub
push
rol
push
pop
pusha
pop
xor
xor
cmp
adc
ins
das
ror
repnz
sub
(bad)
pop
data16
xchg
mov
ja
aaa
popf
ds
out
into
push
ins
ds
push
ins
fdivr
mov
xor
test
mov
ffree
jle
jb
mov
outs
pop
test
dec
push
mov
cmp
hlt
outs
out
les
hlt
jecxz
add
lods
xor
icebp
in
mov
mov
mov
enter
es
jne
cmovl
fistp
data16
iret
ins
mov
int3
nop
or
push
in
dec
out
sbb
ds
out
xor
or
pushf
add
(bad)
ins
mov
push
adc
push
loope
int3
cld
push
call
mov
shl
ror
mov
jp
out
test
push
scas
out
cmp
sub
xchg
dec
nop
mov
enter
sub
lea
inc
test
dec
mov
mov
cmp
(bad)
jp
fstp
test
cwde
mov
pop
stos
shl
sahf
mov
cmp
sbb
int
enter
add
es
xchg
mov
ss
fbstp
add
mov
jge
inc
stos
mov
inc
or
gs
add
inc
daa
jne
adc
stos
stos
jno
outs
ins
push
sbb
fmul
jae
adc
movs
test
jmp
(bad)
mov
jmp
in
icebp
or
dec
ficomp
and
jl
(bad)
mov
arpl
adc
push
xlat
add
add
pushf
push
movs
iret
int3
retf
push
inc
test
cwde
fadd
inc
pop
rcl
jb
mov
jbe
fisubr
xor
pop
sub
lea
sub
cmps
mov
fwait
js
mov
outs
sub
sti
add
inc
clc
sbb
push
push
xor
movd
(bad)
and
gs
dec
dec
xor
ins
adc
pop
xchg
jbe
sub
shl
jge
lea
arpl
jle
adc
cld
inc
mov
gs
rol
cmp
sahf
xchg
xor
lea
xlat
sub
outs
cwde
in
xor
adc
jmp
pop
lods
mov
mov
xchg
jb
ret
xor
adc
pop
sub
cwde
add
jmp
scas
push
jmp
xor
mov
gs
push
call
scas
dec
sti
add
fld
iret
fidiv
add
sbb
jbe
cmp
scas
jns
sub
cmc
outs
bound
xor
pop
cmps
jae
in
adc
push
in
jl
jo
outs
pop
mov
loopne
(bad)
fcomp
(bad)
add
rcl
retf
mov
cld
jmp
les
call
dec
cmp
shr
cmp
repnz
pop
out
xor
int
inc
dec
push
cmp
mov
mov
je
and
leave
(bad)
mov
jns
shr
es
(bad)
(bad)
aad
or
adc
jae
jg
in
adc
or
jge
jne
jmp
sbb
adc
fidivr
sbb
jb
push
test
rcl
dec
inc
or
cmp
mov
(bad)
sub
ja
add
inc
cmc
push
xchg
add
xchg
fisttp
es
or
ss
retf
xor
gs
inc
ins
sbb
pop
cmps
cmp
inc
xor
jge
cmp
ds
out
pop
js
pop
call
enter
pushf
add
ret
mov
jae
inc
pushf
inc
or
int3
es
data16
and
inc
out
stos
jne
pop
sub
sub
fs
jmp
pop
ja
jns
inc
push
dec
adc
add
(bad)
rcr
sbb
in
pop
sbb
jge
mov
sbb
aas
(bad)
jge
inc
(bad)
test
stc
js
fwait
or
mov
dec
inc
jmp
push
jb
xchg
mov
push
ds
cmps
aaa
push
fs
xchg
shl
scas
imul
lods
pop
pop
inc
sbb
xor
bound
inc
xor
loop
hlt
scas
popf
ins
ja
xor
mov
xor
hlt
retf
repz
sbb
mov
pop
scas
cli
cdq
aaa
pushw
out
shr
push
push
repz
rol
das
jnp
imul
cdq
dec
add
xchg
clc
mov
movs
sub
in
pop
jne
mov
mov
loop
xchg
lahf
adc
add
clc
inc
cmp
dec
enter
inc
je
jb
mov
sub
inc
fucomi
jmp
repz
cmc
cmp
push
lds
int3
mov
(bad)
pushf
jecxz
sbb
mov
and
addr16
stos
xchg
mov
scas
arpl
outs
sbb
loopne
je
div
mov
mov
jne
call
push
call
sub
js
pop
loop
fistp
mov
dec
in
test
sbb
cmps
and
and
ficom
mov
rcr
push
add
scas
cmp
rcl
jecxz
xor
icebp
out
sub
popa
mov
div
jae
div
cmc
push
mov
or
add
lods
sbb
cmp
cmp
xchg
jae
stc
sti
cmc
outs
inc
out
xor
or
(bad)
jmp
and
jmp
dec
aaa
pop
mov
jmp
iret
pop
jo
fnstenv
push
call
jnp
xchg
scas
cwde
loope
ss
(bad)
enter
mov
mov
retf
rcr
and
test
jo
inc
fidiv
xchg
hlt
loope
loopne
pop
add
imul
sahf
adc
xlat
rcr
sub
push
inc
push
cmp
pop
cmps
dec
sub
aam
pop
sub
ins
lea
jle
push
fist
push
mov
repnz
mov
in
pop
(bad)
sbb
dec
icebp
movs
push
dec
leave
shr
aaa
div
or
(bad)
stos
adc
xlat
clc
and
sbb
imul
dec
pop
inc
sti
add
adc
sbb
sub
or
mov
and
xor
cmp
sub
lock
xor
popa
pusha
inc
frstor
rcr
sar
cmc
jmp
retf
jge
mov
imul
cs
mov
loope
jno
dec
imul
xor
and
fst
test
add
ins
jge
fidiv
inc
and
test
cmp
movs
addr16
js
xor
cmp
jmp
jbe
adc
push
imul
test
ror
or
in
mov
pop
nop
inc
enter
cmps
and
jb
out
mov
push
out
out
(bad)
pop
(bad)
mov
pandn
mov
fwait
jno
mov
cmp
mov
lds
jb
stos
xor
mov
jnp
jl
ja
inc
aad
call
inc
js
mov
mov
lock
sahf
stos
and
xchg
or
adc
mov
(bad)
in
in
ret
adc
add
dec
enter
frstor
lea
cld
scas
shl
enter
mov
and
loope
pop
les
push
jnp
sbb
adc
shl
pusha
and
repnz
pop
and
ins
and
add
movs
out
pop
xchg
sbb
ret
jmp
or
call
aaa
addr16
xchg
push
jp
jp
jmp
cmp
mov
mov
call
es
loopne
cmp
and
jmp
cmp
push
sub
and
std
mov
xchg
cdq
popa
pop
sbb
jle
mov
not
cmp
mov
inc
(bad)
add
dec
push
dec
fadd
mov
mov
movs
xor
mov
daa
leave
xor
ins
mov
jmp
mov
xor
fisubr
cmp
push
mov
inc
ja
js
pop
movs
sbb
int
mov
das
pop
sub
inc
mov
stos
dec
mov
mov
mov
and
es
and
out
sti
pop
(bad)
and
pshufw
cmp
fisttp
pop
or
mov
push
mov
into
mov
sbb
ficomp
mov
pusha
aas
sbb
inc
jnp
adc
inc
std
loope
stos
sti
fwait
cs
jl
mov
jg
pop
xor
nop
adc
and
adc
add
jecxz
shr
(bad)
test
clc
data16
mov
sub
movs
mov
mov
dec
dec
and
retf
test
loop
ds
cmp
adc
in
adc
xchg
add
push
cmp
test
push
sbb
ins
outs
mov
fidivr
out
pop
xchg
and
push
sub
clc
lea
xchg
lods
sar
retf
fs
sub
xchg
add
mov
jecxz
(bad)
shr
dec
fimul
ss
jecxz
xchg
imul
push
(bad)
xor
outs
jno
ret
mul
je
xor
nop
jbe
pop
test
push
fnsave
pop
es
std
ret
sub
xor
(bad)
ins
xor
iret
imul
mov
dec
imul
inc
lea
cmc
or
cmps
push
jbe
inc
bound
cmps
lahf
lds
call
imul
ret
mov
inc
aam
in
das
mov
es
je
sbb
xlat
js
nop
inc
or
mov
rol
je
inc
push
inc
jg
in
adc
fwait
xor
shr
loop
shr
scas
sbb
adc
hlt
push
call
jl
or
add
imul
push
clc
add
retf
push
jge
aad
mov
push
fbstp
popf
in
(bad)
xchg
adc
test
movs
stc
loopne
push
xor
adc
jb
rcl
cmps
imul
pop
sub
int3
rcl
push
cmp
fwait
nop
fild
fild
jo
mov
rcr
cmc
aaa
fs
div
dec
retf
fild
in
sbb
adc
loope
add
dec
scas
mov
loop
test
mov
out
ins
fstp
jl
lahf
aad
das
aad
imul
jl
xchg
(bad)
outs
inc
daa
push
nop
pop
out
shr
shl
xchg
xor
movs
xchg
retf
push
jnp
mov
and
add
push
and
sub
in
(bad)
in
sbb
mov
adc
imul
lds
mov
and
ins
and
enter
(bad)
xchg
mov
sbb
arpl
xor
test
(bad)
fucomi
into
leave
jecxz
jae
jmp
hlt
and
mov
ret
popa
les
push
cs
jecxz
dec
inc
sbb
mov
mov
mov
cmp
or
push
addr16
cmp
sti
rcl
lods
stc
lods
imul
push
outs
xchg
pusha
cli
push
lods
scas
(bad)
pop
repz
xchg
mov
int3
xlat
ss
push
(bad)
mov
test
cmp
int
cwde
js
popf
jecxz
popf
dec
stos
inc
push
add
xor
jl
repnz
hlt
jno
jecxz
push
stos
xor
cdq
sub
das
xrelease
mov
mov
mov
test
dec
(bad)
outs
cmp
mov
lock
fld
mov
push
sbb
jecxz
cmp
jl
mov
dec
into
aaa
jo
movs
and
push
fisubr
add
cld
jp
push
jmp
pop
jge
pop
jp
popa
jmp
push
loop
jb
push
and
sbb
sbb
call
stos
mov
mov
sub
(bad)
or
mov
dec
test
or
mov
pop
rdmsr
cmp
retf
loope
jo
ret
xchg
imul
mov
popf
xor
xchg
and
ror
mov
xchg
fidiv
cli
mov
xor
sbb
xlat
dec
adc
pop
mov
sbb
das
data16
lock
outs
mov
xchg
pop
sar
mov
in
mul
jecxz
ja
test
movs
arpl
ds
sahf
repnz
dec
scas
cld
cmps
imul
pop
ror
cmp
xchg
into
clc
adc
xchg
cdq
dec
not
ds
ficom
push
xchg
leave
sahf
fsubrp
xchg
jmp
dec
sbb
mov
or
(bad)
mov
pop
jne
je
push
push
ret
and
xchg
shl
int3
cdq
sub
scas
loopne
add
in
add
enter
push
cmp
xchg
xchg
iret
dec
mov
repz
pop
mov
push
fwait
add
out
cs
cli
jl
jl
arpl
or
mov
data16
jp
and
loop
inc
xlat
mul
jo
mov
pop
dec
push
int3
das
pop
jb
jmp
pushf
mov
push
jmp
inc
mov
mov
pop
addr16
cwde
push
aad
mov
mov
jge
int3
inc
xlat
sub
push
adc
rcr
or
imul
iret
push
out
push
push
jae
mov
sub
sub
pop
ins
pop
jb
test
sbb
into
mov
(bad)
mov
sbb
pop
outs
push
sbb
lea
ror
ins
pop
imul
mov
cmp
mov
adc
fmulp
xchg
jmp
bound
mov
xchg
out
and
or
jge
xor
call
inc
jl
imul
repnz
je
pop
mov
ss
cwde
and
adc
sbb
push
cs
sbb
mov
xor
cmp
push
movs
or
js
sbb
imul
sub
test
rcl
jns
clc
adc
and
pop
xor
minps
xchg
xor
push
cdq
pop
xor
fdivr
pushf
or
ror
loopne
fldenv
ins
jno
mov
pop
pop
mov
stc
and
dec
ret
pushf
mov
pop
mov
addr16
push
aas
push
dec
aas
test
(bad)
aad
scas
pop
pusha
aad
mov
adc
dec
mov
je
mov
adc
data16
inc
dec
out
jge
adc
cmp
mov
sbb
ficomp
sbb
mov
inc
push
es
sbb
out
neg
add
add
push
popa
loope
cld
lods
lea
outs
mov
ss
mov
mov
ret
(bad)
das
arpl
not
aaa
xor
loopne
xchg
inc
outs
xchg
jae
mov
or
push
add
lahf
ret
cmp
fst
sub
add
xlat
sbb
and
ss
hlt
mov
mov
add
(bad)
mov
cmp
xor
sbb
mov
cmc
fcmovnb
out
in
out
adc
(bad)
sti
ss
adc
cmp
dec
cdq
mov
and
enter
or
loop
mov
ins
rol
pop
xchg
clc
or
lea
adc
mov
xchg
imul
scas
lods
test
xor
add
pushf
call
add
es
mov
cli
push
dec
stc
jb
cmp
add
jecxz
addr16
dec
out
out
sbb
loope
fadd
cmp
cmp
das
pop
ins
mov
mov
push
adc
jge
js
daa
jbe
push
lea
adc
mov
mov
sub
leave
fidivr
and
lahf
cmp
(bad)
and
stc
out
fwait
xor
push
icebp
ins
les
inc
inc
pusha
rcl
out
(bad)
sbb
je
enter
adc
jmp
mov
jg
jo
lahf
xlat
mov
jl
sub
sbb
mov
or
popa
xor
ins
aam
fs
xchg
add
(bad)
xchg
loop
arpl
jne
dec
jge
dec
dec
sahf
xchg
pop
add
xchg
cmps
xchg
int3
enter
jmp
sub
(bad)
jge
out
ret
cmp
cmp
pmaxub
jbe
mov
leave
add
dec
les
cmp
stc
movs
mov
mov
call
les
scas
test
popf
jo
icebp
add
and
cmp
add
inc
dec
mov
sbb
in
sbb
js
stos
xchg
outs
mov
push
or
adc
push
sbb
fwait
icebp
push
pop
push
js
fs
push
aam
bound
aaa
sub
sbb
fcom
sub
ins
lahf
add
aad
mov
aaa
or
sbb
push
xchg
retf
lds
mov
jmp
jo
ret
mul
in
dec
mov
push
pop
dec
hlt
stos
pop
or
retf
in
pop
retf
sub
mov
in
ficom
mov
jge
jmp
pop
ss
xchg
dec
push
in
lock
xchg
jmp
push
mov
cmp
sub
popa
sub
in
dec
ja
leave
cwde
repz
cmp
dec
cmp
scas
js
loope
or
clc
pop
cwde
test
popa
out
add
and
xchg
icebp
inc
mul
mov
jns
pop
mov
xchg
mov
stos
out
jbe
pop
sbb
imul
dec
sub
movs
std
sub
add
pop
dec
aam
jp
pop
add
inc
xchg
jne
jecxz
and
mov
fld
das
out
lea
daa
xchg
dec
call
jle
lock
add
hlt
cwde
cmp
sbb
mov
mov
es
push
adc
add
sub
xor
out
mov
shl
jb
mov
sbb
sbb
dec
jnp
sbb
mov
inc
xchg
or
sbb
(bad)
inc
jl
imul
xlat
sub
push
in
jp
pop
jno
jo
xchg
xor
pop
lock
call
ins
sbb
scas
dec
mov
mov
cmp
jl
and
mov
or
pop
(bad)
loop
addr16
dec
int
leave
mov
shl
mov
mov
jns
dec
gs
retf
psrld
out
(bad)
in
pop
jbe
call
test
imul
push
xor
aam
cli
lds
(bad)
aam
pop
dec
mul
loopne
add
and
mov
xor
mov
leave
jno
ja
cdq
jp
(bad)
sub
add
ss
add
mov
push
mov
sti
iret
mov
(bad)
in
pushw
cmp
jmp
xchg
fild
add
into
js
retf
out
ds
xchg
or
out
sub
in
inc
das
pop
mov
push
push
mov
adc
fbstp
aas
push
dec
push
inc
dec
inc
push
aaa
push
xchg
lds
into
stos
xor
mov
cmp
(bad)
and
lea
or
aas
inc
xchg
xchg
xor
imul
or
sub
jne
xchg
out
mov
or
jmp
ret
stos
sub
sub
sub
add
lea
sbb
adc
push
mov
cmp
shl
mov
loopne
pop
mov
or
add
in
jbe
aad
leave
cwde
xor
pop
mov
jmp
(bad)
leave
daa
pop
dec
xchg
aas
cwde
cmp
sub
popf
cmp
sub
jmp
icebp
sub
or
inc
mov
fdiv
lea
fdiv
sbb
pop
(bad)
(bad)
test
(bad)
lock
stc
lahf
icebp
and
jmp
sahf
pop
jnp
dec
pop
mov
mov
ja
mov
mov
cmp
mov
fprem
push
dec
dec
push
fdivr
add
aad
cmp
out
and
dec
js
and
mov
inc
adc
push
mov
xchg
sbb
inc
test
fistp
outs
retf
or
jno
daa
fstp
cmp
nop
cmps
cmove
outs
xchg
sti
jl
repnz
push
pusha
add
or
push
push
and
dec
inc
jmp
out
stos
cmc
call
in
pop
loopne
cli
cdq
jbe
push
jmp
scas
push
iret
pop
ja
and
and
cmp
js
retf
int
jmp
inc
push
xchg
or
adc
inc
add
mov
hlt
mov
icebp
xor
cdq
imul
arpl
jle
ss
pop
pop
mov
outs
cmc
rcr
(bad)
lock
jl
jle
xchg
adc
ja
ror
dec
adc
into
sub
xor
cmps
add
iret
fcomp
xchg
push
jno
sub
stos
es
es
repnz
xor
je
(bad)
int3
dec
push
mov
push
dec
(bad)
call
je
xchg
loop
adc
shl
frstor
cmp
xchg
pusha
test
add
mov
aaa
jle
in
ins
movs
mov
test
cmps
inc
lds
loope
inc
jmp
mov
lods
xchg
xchg
pop
mov
and
xor
dec
mov
mov
gs
mov
xor
pop
dec
or
sbb
test
dec
mov
icebp
(bad)
mov
inc
push
sahf
arpl
test
xchg
scas
inc
mov
sbb
(bad)
aad
imul
xchg
nop
movs
mov
mov
dec
pop
andps
loope
and
cmps
xlat
and
cmp
mov
in
imul
jne
or
lahf
xchg
fst
fisubr
mov
cmp
in
in
(bad)
ins
mov
cmp
(bad)
mov
or
scas
sbb
jp
clc
mov
test
jl
jne
mov
out
and
dec
cdq
popa
mov
or
cmp
adc
jp
or
ror
adc
mov
sar
dec
jbe
stos
pop
fcom
std
xchg
mov
retf
in
ja
push
or
lock
(bad)
pop
sbb
fild
loop
jge
pop
comiss
dec
in
mov
mov
data16
pop
fstp
inc
ror
adc
dec
push
test
jge
ja
popa
fadd
dec
shr
or
xor
jo
hlt
mov
aas
xchg
xchg
inc
(bad)
pop
ja
cmp
push
mov
out
mov
imul
pushf
ds
dec
pop
jmp
imul
jp
sbb
fs
xor
add
scas
pop
cs
dec
outs
mov
cmp
lods
mov
mov
inc
aam
call
inc
add
xor
mov
inc
leave
xor
out
xor
in
jmp
or
mov
imul
cmp
mov
pop
sbb
mov
jns
push
addr16
mov
js
pop
sub
repnz
push
das
mov
cmp
or
xor
adc
dec
shl
dec
fdivr
adc
xchg
cs
push
les
movs
inc
hlt
jnp
inc
lods
sub
sbb
sbb
push
push
dec
lds
and
je
gs
mov
lods
mov
out
sub
movs
test
fdivr
jae
push
std
scas
cmp
cmp
out
out
xchg
iret
popf
cmc
out
out
out
and
mov
or
dec
cmp
adc
mov
enter
dec
or
jne
outs
jmp
mov
add
mov
cmp
movs
push
fidiv
jne
sub
sbb
fidiv
fist
rcr
xor
cmp
cmp
xchg
adc
inc
nop
test
push
add
cmp
push
xrelease
pop
pop
push
adc
cmp
dec
adc
rcl
inc
ret
or
jle
jmp
or
sub
pusha
imul
mov
int
or
jp
and
adc
xchg
adc
sbb
test
popf
cmp
iret
jnp
fwait
inc
xchg
jg
out
test
sub
jmp
sbb
ins
pop
pop
pop
daa
mov
in
push
push
xchg
lock
mov
jle
dec
movs
ret
mov
ss
mov
push
mov
mov
and
pop
or
inc
mov
cmp
pop
jae
add
jne
mov
das
data16
pop
sub
repnz
push
mov
adc
sub
rcl
jmp
add
push
ins
loope
outs
mov
add
sbb
pop
pop
sub
xor
xchg
in
jg
(bad)
call
and
ins
jp
dec
jmp
mov
xor
(bad)
js
inc
daa
cmps
in
retf
cmp
mov
xlat
xchg
xor
xchg
sar
adc
jmp
xchg
mov
lds
push
js
mov
mov
or
mov
je
int
pop
mov
lahf
jp
mov
push
jbe
add
xor
mov
xchg
aas
pop
pop
fldenv
rcr
mov
dec
jno
movs
sbb
sti
inc
loop
imul
hlt
lods
int
jbe
fsub
out
and
adc
mov
sub
pusha
cvtdq2ps
adc
add
nop
or
cli
sbb
push
das
and
xchg
mov
ins
push
sbb
add
inc
push
push
jnp
(bad)
xchg
lods
data16
aad
fld
jge
pop
repz
ins
(bad)
and
push
pop
cmp
add
jb
pushf
push
push
js
test
lock
mov
stos
inc
xor
jp
xchg
xor
push
dec
shr
and
sub
pop
or
pop
xor
imul
cld
into
retf
cld
cmp
std
lock
xor
(bad)
mov
mov
inc
sub
int3
or
(bad)
mov
scas
aad
jmp
ins
sub
and
in
sahf
or
js
pusha
nop
pop
iret
xchg
xchg
sbb
pop
call
xor
sub
fadd
push
retf
cli
movs
enter
push
bound
inc
arpl
sbb
(bad)
jb
ja
mov
cwde
xchg
xchg
xor
xchg
in
dec
mov
push
inc
cmp
addr16
ret
mov
inc
fwait
loopne
fidiv
add
sub
icebp
xor
rcr
xchg
sbb
outs
loope
mov
mov
jg
lds
mov
out
jbe
jb
je
out
(bad)
jmp
lea
cmp
mov
pushf
aad
std
hlt
pop
jb
adc
push
and
jge
adc
out
adc
ficom
mov
jecxz
or
int
(bad)
pop
push
and
add
repz
dec
clc
push
movs
mov
(bad)
dec
sbb
std
enter
push
and
gs
fs
mov
int
inc
dec
fldenv
icebp
scas
pop
loop
pusha
popf
sub
jo
cli
js
js
jmp
cmp
cmps
ss
loopne
or
enter
(bad)
dec
popa
or
jnp
sub
jecxz
cmps
std
stos
push
cmc
jge
outs
aas
mov
cmp
xchg
adc
sbb
mov
(bad)
inc
in
xchg
je
add
or
lods
inc
loopne
repz
test
femms
ins
mov
or
and
cld
cli
daa
lea
repnz
mov
dec
jae
test
lahf
in
add
test
adc
out
xor
fld
pop
outs
imul
add
push
data16
add
xor
lds
in
shl
pop
cmps
add
bound
popf
mov
xor
mov
xchg
fldcw
and
sbb
inc
sub
pop
scas
sbb
lods
jmp
ror
fidivr
jp
call
adc
pop
and
mov
mov
pop
cld
push
push
pop
add
jb
mov
and
cs
aad
or
pop
pop
retf
jb
mov
mov
push
scas
push
daa
add
test
jb
or
jmp
imul
dec
aaa
inc
sub
in
add
xchg
sub
adc
jae
xor
aam
cdq
dec
stos
imul
inc
xor
adc
movlps
inc
(bad)
out
jp
fnstenv
sbb
test
xor
add
(bad)
mov
sbb
dec
push
repnz
(bad)
fist
and
fbld
inc
sahf
pop
inc
adc
and
sbb
lods
mov
fistp
sub
inc
stc
cwde
movs
jg
nop
sub
and
xchg
adc
pop
in
movs
out
popa
push
adc
add
sbb
add
ret
fistp
addps
jecxz
pop
inc
in
rcr
sub
rcr
adc
pop
sub
adc
jmp
add
fldcw
es
out
cli
lods
and
sub
movs
pop
add
clc
mov
dec
sub
mov
inc
push
mov
out
sbb
in
adc
retf
test
inc
mov
sub
iret
or
lds
out
jbe
fcmove
jne
pop
data16
les
scas
fwait
push
pop
enter
jnp
add
mov
retf
mov
mov
xor
xor
pop
out
lock
jp
lods
repz
jmp
(bad)
fstp
lds
mov
out
int3
and
popf
mov
pop
mov
test
ins
mov
sub
or
add
in
loopne
xchg
retf
mov
xchg
pop
push
dec
pop
cmp
std
shl
lahf
xor
cli
lds
xchg
in
fcomp
sbb
xchg
adc
jecxz
popa
or
inc
pop
aam
mov
jg
je
push
mov
xor
adc
jbe
add
imul
stc
jb
int
cmc
hlt
out
cli
cmp
test
inc
mov
dec
dec
sti
pop
cmp
inc
das
xchg
loope
xor
inc
ss
test
mov
movs
pop
sub
test
imul
cdq
stos
add
rcr
not
inc
add
push
mov
cdq
repnz
xor
push
rol
jb
sub
outs
inc
jns
push
mov
or
cli
dec
inc
repnz
call
loopne
cmp
inc
push
nop
mov
loop
aam
push
or
loope
xor
dec
mov
or
loop
(bad)
aaa
sub
dec
js
jae
call
jnp
imul
stc
inc
push
loop
stos
sub
retf
ins
and
(bad)
xchg
lahf
mov
push
add
dec
cmp
daa
cmc
pop
(bad)
call
mov
int3
jmp
mov
out
out
loop
scas
xor
stc
in
mov
push
mov
inc
and
cmps
xor
loopne
inc
retf
(bad)
push
cmp
pop
mov
push
cli
pusha
hlt
inc
fdiv
add
xor
rol
loopne
xchg
push
jle
dec
repnz
gs
xchg
xchg
inc
in
jne
add
test
aam
call
adc
dec
sub
out
imul
pop
xchg
stos
movs
fsub
ds
sbb
lahf
dec
fdiv
sti
inc
mov
test
add
(bad)
aas
sbb
mov
pop
scas
popa
and
ins
dec
lock
loop
add
push
(bad)
jg
mov
xor
lahf
nop
scas
cmp
ss
vprotd
inc
mov
enter
push
mov
inc
gs
in
pop
jmp
mov
movs
leave
in
xlat
sub
mov
leave
(bad)
lahf
and
in
mov
lock
aad
and
push
sub
jnp
jl
dec
cmp
loop
loop
(bad)
in
test
push
sub
fld
(bad)
aas
scas
mov
icebp
mov
push
xor
ds
add
shl
rcr
mov
mov
pop
cmp
sti
pop
and
in
nop
inc
cli
cld
mov
aad
ss
and
jo
jns
pop
fwait
adc
push
sbb
leave
xchg
lds
mov
mov
(bad)
cmp
add
inc
sbb
lods
sub
dec
retf
loop
push
xor
ds
lahf
(bad)
sub
jne
shl
iret
or
pop
inc
out
jge
fwait
inc
sahf
mov
fdivr
scas
inc
in
leave
iret
push
dec
mov
test
sub
xor
lods
or
fsubr
(bad)
cmp
daa
addr16
pop
sub
push
mul
xor
bound
test
jne
test
int
sbb
arpl
jmp
movs
cs
nop
pop
fldenv
in
mov
fyl2x
retf
mov
sbb
pushf
mov
popf
scas
inc
data16
iret
aaa
and
sbb
cld
jmp
add
jp
loope
in
mov
les
fidiv
jae
pop
push
div
fcomp
add
mov
xchg
loopne
fcmovb
lods
das
sbb
push
jecxz
sub
ds
lea
mov
rol
adc
and
cdq
out
jae
and
xor
(bad)
push
retf
or
push
scas
cwde
inc
push
popf
(bad)
cmps
and
fist
pop
pop
inc
xchg
lods
test
and
jmp
(bad)
aas
(bad)
rol
jo
jnp
mov
mov
sahf
xchg
mov
jg
cmp
mov
out
lock
jmp
inc
imul
cs
pop
js
sti
jge
fisttp
sub
inc
mov
mov
loop
or
dec
icebp
loop
bound
stos
mov
jge
pop
pop
sti
dec
push
cmc
pop
fs
aam
cmp
cli
or
fwait
retf
aas
cdq
inc
les
int3
in
mov
es
fisubr
pop
or
leave
retf
fsubr
sbb
retf
jge
or
mov
idiv
push
add
xor
je
fisttp
sar
and
ret
cmps
and
cmp
and
and
outs
xchg
test
mov
adc
in
sbb
add
pop
lock
sub
lods
jae
mov
pop
sub
xor
sbb
cmp
call
fisttp
or
and
clc
test
movs
or
mov
repz
ror
shl
mov
cmp
mov
jmp
scas
adc
mov
repnz
jmp
jns
shr
stc
cmp
adc
jp
fisub
xor
cmp
and
mov
sub
idiv
ins
xlat
aam
jae
inc
and
xchg
jecxz
scas
inc
and
cmc
addr16
xlat
call
aad
mov
inc
add
pop
jmp
fimul
sbb
mov
or
and
add
(bad)
std
mov
push
clc
cmp
aas
mov
push
mov
jo
(bad)
sub
jle
fild
mov
sub
adc
adc
push
leave
movs
mov
mov
ss
retf
outs
test
gs
mov
lds
and
xor
push
stc
mov
out
adc
das
mov
fldenv
push
xor
fs
mov
mov
call
pop
pop
fs
dec
sub
sbb
dec
sar
fs
xchg
mov
mov
pop
sti
js
mov
or
pop
pop
lahf
or
and
inc
call
push
push
adc
cmp
xor
and
jmp
jmp
sub
test
mov
enter
stos
pushf
stos
cmps
push
add
jecxz
ror
push
sbb
mov
popf
jge
lock
jne
lea
push
outs
aad
loope
adc
push
pushf
scas
psubb
jnp
pop
and
cmp
test
jle
inc
ins
(bad)
mov
(bad)
clc
in
push
clc
sti
mov
xchg
sbb
shl
xchg
mov
mov
retf
and
popf
cli
jno
pop
sar
cmp
dec
xchg
les
movs
sbb
dec
jnp
add
les
jne
ss
arpl
mov
sbb
push
popf
mov
pop
idiv
dec
ret
jmp
fstp
ja
int
(bad)
scas
rol
inc
sub
mov
stos
call
or
clc
jne
mov
aad
ja
pop
sub
int
mov
test
in
aas
xchg
call
mov
data16
clc
inc
adc
(bad)
fbstp
leave
sahf
push
out
mov
rcr
xchg
cs
inc
mov
xor
push
sbb
sbb
test
sbb
out
jmp
jle
lock
imul
movs
xchg
and
jo
jge
pop
xchg
mov
mov
mov
xchg
cmc
mov
daa
(bad)
pop
shl
pop
cli
shl
mov
jae
popf
repnz
(bad)
leave
xor
inc
pushf
mov
push
retf
(bad)
aad
test
clc
int
add
jge
mov
pop
imul
inc
ins
fisttp
xchg
mov
retf
movs
or
jnp
out
dec
loopne
in
mov
mov
pushf
push
(bad)
loope
shl
js
mov
xchg
mov
data16
pop
movs
aas
(bad)
sbb
mov
mov
lods
scas
mov
xor
(bad)
mov
mov
sbb
into
cmp
call
cmp
inc
(bad)
jb
aas
pop
pop
and
rcr
sti
cmp
add
sar
loope
ficom
add
jecxz
inc
mov
loop
mov
in
sahf
mov
dec
loop
loope
clc
cwde
pop
push
mov
cmp
pop
mov
mov
aam
adc
jge
call
sbb
je
arpl
jle
in
cmp
test
cs
in
and
pop
or
dec
or
adc
out
dec
mov
call
jnp
retf
mov
cmps
addr16
pop
jge
mov
mov
jnp
mov
or
ja
loope
mov
jle
call
inc
fild
mov
sub
movs
jo
sub
iret
aad
cmps
les
pop
mov
(bad)
in
in
mov
dec
icebp
sub
sub
jo
test
test
ret
push
call
popf
jno
out
ret
lahf
mov
daa
in
push
sahf
jmp
out
or
call
jecxz
add
test
in
mov
sub
push
jmp
sbb
test
adc
lods
enter
call
mov
sti
mov
stc
adc
fidivr
(bad)
fist
mov
js
lea
and
push
sti
adc
inc
test
inc
test
jle
call
jnp
mov
out
out
mov
(bad)
loope
dec
stc
jp
lods
jg
and
jmp
sub
nop
mov
mov
and
cld
sub
mov
test
mov
pop
ins
div
push
push
scas
push
push
ret
ds
inc
xchg
test
pop
lods
dec
pop
sub
jae
nop
ret
and
pop
movs
jno
push
int
mov
add
and
int
std
(bad)
jb
cld
leave
mov
(bad)
lahf
jle
xchg
xchg
push
in
rol
cmp
push
test
adc
jae
clc
pop
jns
push
test
add
add
dec
call
fisttp
or
out
inc
adc
cmp
mov
xchg
pop
xor
ret
mov
in
sbb
sub
xor
xor
(bad)
in
mov
adc
jl
cmp
fist
out
mov
mov
adc
fs
idiv
or
outs
test
adc
loope
loope
ins
ficomp
jbe
dec
imul
sub
mov
inc
xchg
lods
inc
or
jp
dec
scas
and
arpl
dec
xchg
rcr
or
cmp
sub
inc
adc
daa
push
inc
adc
jno
or
xchg
ins
xor
mov
xchg
pop
test
mov
or
lock
les
mov
lods
test
and
jmp
cmp
std
in
test
pop
or
mov
aam
fdiv
and
fld
dec
stos
test
push
adc
pop
cdq
xor
adc
pusha
cmp
jo
loopne
or
dec
in
repz
daa
jns
mov
sub
int3
mov
push
or
mov
lahf
xor
and
mov
or
das
mov
sbb
pop
inc
mov
dec
cmp
rcr
lock
repnz
icebp
lock
mov
adc
arpl
clc
xor
das
lea
out
stc
cmc
add
icebp
je
push
adc
mov
je
pop
add
pop
cdq
xchg
sub
lock
push
js
push
or
and
cmc
gs
cmp
add
xor
call
jno
push
xchg
sahf
adc
xor
sub
pop
fisttp
jno
push
sar
rol
es
or
in
cmps
and
in
dec
or
in
cmp
push
sbb
xor
pop
pop
inc
adc
stos
jo
inc
mov
push
stos
or
sub
jo
bound
data16
cmp
cld
jmp
inc
push
in
ret
mov
sub
mov
mul
sti
and
stc
and
test
lock
or
add
mov
or
sub
fadd
dec
or
dec
gs
add
mov
leave
add
jo
or
sbb
(bad)
fcmovne
xor
es
lock
cmp
lock
popf
mov
imul
shl
xchg
int
push
adc
jnp
inc
loope
in
out
push
lods
xchg
fsubr
dec
pop
movs
nop
fsub
add
jge
int3
pop
(bad)
pushf
xor
je
sti
cmps
push
cmp
xor
inc
mov
sar
(bad)
fnsave
movs
push
sbb
dec
stc
xor
xlat
adc
mov
dec
loopne
sub
lods
iret
test
adc
xlat
ret
stos
adc
or
mov
mov
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
add
push
sbb
inc
mov
sub
dec
push
jl
enter
mov
jb
icebp
clc
pusha
test
jg
aam
jmp
cs
rcpps
pop
iret
daa
xchg
or
les
mov
repz
scas
(bad)
hlt
mov
push
xor
iret
cmp
idiv
push
add
test
cld
jae
dec
mov
leave
mov
lock
int
adc
adc
add
cmp
xchg
sub
enter
and
mov
mov
ins
stc
push
jmp
push
jl
jl
push
or
sbb
sub
cs
sbb
gs
sbb
lds
test
cmc
dec
pop
daa
cmp
cmps
pop
push
js
jl
mov
retf
or
push
sbb
scas
xchg
push
mov
inc
sub
fst
pop
clc
repz
call
jns
mov
mov
add
imul
sbb
pop
sbb
sbb
mov
sbb
ret
rol
ins
pop
mov
mov
mov
mov
sahf
in
push
or
(bad)
jmp
xchg
into
ja
cmp
pop
lahf
pop
ret
js
jne
and
shl
jle
call
pop
(bad)
inc
cwde
adc
add
into
lds
adc
aad
dec
or
dec
mov
jmp
inc
fcomi
add
pop
repz
add
xchg
cwde
nop
mov
or
movs
or
addr16
iret
mov
push
cmp
lahf
ss
sar
aam
mov
xor
pop
adc
sub
pop
and
sbb
es
pusha
sbb
retf
mov
mov
and
jmp
inc
cmp
push
jge
(bad)
jae
in
sub
data16
daa
cmc
imul
lods
xor
pushf
(bad)
loope
mov
dec
mov
jge
pop
push
or
jecxz
cmps
lock
std
xchg
addr16
mov
fld
shl
out
cld
add
sub
add
fsub
out
adc
pop
jae
add
cmp
cmp
daa
inc
xor
retf
dec
sub
mov
inc
adc
dec
(bad)
mov
out
mov
xchg
mov
scas
test
iret
mov
xor
add
adc
jecxz
ins
jge
jmp
popf
rcr
stos
xlat
cdq
aad
push
shr
xchg
ja
fnsave
icebp
out
test
out
inc
imul
loope
push
add
jns
loop
and
mov
jbe
jnp
(bad)
jmp
jb
xchg
ficomp
inc
mov
cmp
jmp
inc
mov
sbb
in
(bad)
test
dec
jmp
mov
cmp
jle
test
pop
aad
mov
cdq
add
inc
and
iret
gs
or
mov
jecxz
pop
fst
mul
leave
imul
mov
out
push
xor
push
arpl
pop
mov
add
out
push
popa
popf
pop
xor
aas
xchg
sub
adc
inc
inc
loop
or
jo
hlt
lods
mov
mov
and
cmp
xchg
(bad)
fmul
ins
adc
mov
in
test
mov
iret
cmc
(bad)
iret
inc
dec
add
push
call
lock
sbb
stos
shl
inc
or
fdivp
jg
pop
jg
icebp
(bad)
movs
test
jmp
shr
outs
aas
pop
jl
jbe
sbb
xor
sar
dec
pop
mov
dec
mov
fwait
lock
mov
xor
loopne
or
daa
loopne
popf
sti
stos
inc
aad
ret
cli
fs
arpl
xor
out
jl
adc
push
mov
xchg
and
and
iret
mov
push
dec
pusha
xor
mov
or
jg
mov
ss
xor
jae
and
add
adc
push
fadd
adc
aad
fild
mov
mov
dec
jle
inc
xor
mov
bound
std
aaa
cdq
repnz
mov
rcr
fsubr
mov
imul
mov
arpl
xchg
pushf
or
or
(bad)
test
sub
add
(bad)
lahf
icebp
mov
mov
test
add
inc
push
mov
retf
iret
mov
and
ss
(bad)
xchg
in
mov
aad
dec
mov
in
inc
mov
adc
push
icebp
imul
sub
adc
mov
pop
out
add
retf
cmp
push
add
sbb
and
in
sub
mov
mov
and
retf
dec
mov
mov
pusha
sbb
cmc
fwait
and
icebp
sti
movs
in
icebp
adc
push
sbb
xchg
ror
add
sub
sub
mov
repnz
pop
call
lods
xor
mov
xchg
mov
call
mov
iret
xor
(bad)
cli
inc
stos
mov
mov
out
cli
popf
fcmove
pop
out
aaa
int
pop
ret
(bad)
shr
xor
jnp
(bad)
jnp
out
push
pop
push
mov
push
add
add
jmp
into
repnz
xchg
std
dec
pop
jg
jg
lods
sbb
push
add
dec
pushf
xor
xor
leave
add
outs
lods
inc
push
arpl
add
xor
fwait
pop
add
adc
icebp
push
dec
add
mov
cwde
cmps
adc
mov
cli
lahf
mov
sbb
out
jbe
pop
das
imul
or
es
fiadd
pop
pop
sbb
imul
vmovntps
cmps
out
in
mov
pop
outs
pop
out
fisttp
xor
xor
sahf
xor
out
ins
add
dec
cmps
scas
push
pop
repz
add
mov
test
dec
jl
cmp
or
mov
adc
dec
mov
dec
pop
mov
pop
lock
nop
add
stos
mov
outs
jge
jo
ss
lock
and
and
sub
sbb
inc
mov
mov
aam
mov
(bad)
shl
ret
gs
fcom
jb
inc
pop
adc
xchg
xchg
stc
out
std
mov
loop
call
mov
retf
ins
out
clc
jmp
jge
pop
push
in
push
shl
xchg
mov
inc
clc
mov
fmul
or
aas
in
fistp
in
pop
add
cmp
and
xor
mov
loopne
cs
mov
cs
jae
jecxz
mov
fwait
adc
and
mov
lods
lods
shl
xchg
xchg
pop
pop
jno
outs
sub
and
ins
(bad)
gs
mov
mov
cvtpi2ps
ins
jne
jns
push
fidivr
in
push
cwde
mov
jbe
mov
sub
pop
pop
(bad)
fwait
cmp
out
xchg
aam
fimul
out
loopne
fwait
dec
inc
aad
fdiv
pop
fld
sub
retf
cmps
cs
jbe
dec
(bad)
fstp
pop
push
and
xchg
xchg
imul
inc
bound
fdivr
pop
pop
add
adc
and
cmp
adc
pop
lahf
push
hlt
mov
shr
or
ins
and
jmp
pop
mov
jo
add
ds
lock
js
adc
mov
rdtsc
hlt
retf
cmp
(bad)
call
pusha
repz
pop
xchg
scas
jecxz
mov
xor
imul
jmp
outs
loop
sub
retf
loope
adc
sbb
sub
arpl
inc
push
pop
cmp
cld
shl
test
pop
and
icebp
jg
imul
pusha
nop
sbb
int
mov
outs
pop
xchg
bound
lds
add
cmp
mov
data16
repnz
mov
cwde
pop
movs
push
and
mov
lea
jp
aaa
test
jmp
cmp
lahf
fs
mov
pusha
out
and
into
es
mov
cmps
icebp
cmp
jo
repz
retf
mov
cli
popf
jns
jb
cld
jp
jb
test
es
pop
ret
call
push
test
scas
mov
call
mov
enter
mov
popa
(bad)
popf
or
sbb
add
push
push
pop
add
cmp
fstp
or
test
sub
aad
icebp
push
mov
loope
fcomp
int
pushf
mov
lahf
jae
addr16
(bad)
nop
jns
cmp
mov
xchg
jb
lahf
mov
adc
out
enter
adc
mov
stos
pop
jmp
sti
sub
(bad)
in
or
push
dec
(bad)
std
rcr
sbb
movs
ja
lods
and
adc
popa
rcr
movs
retf
cli
loope
in
pusha
pop
call
mov
pop
mov
in
(bad)
sbb
pushf
mov
inc
imul
test
inc
rcl
pop
cmp
pop
addr16
ss
fist
mov
clc
sub
cmp
nop
pop
mov
sbb
aaa
imul
pop
call
mov
ret
mov
imul
or
pop
and
mov
cmovns
fimul
in
dec
xchg
mov
sub
mov
inc
or
mov
pop
out
sbb
pop
jo
fst
push
xchg
dec
mov
jl
retf
movs
pop
in
and
cmp
jecxz
les
out
cmp
scas
loop
xor
addr16
xchg
mov
loopne
jmp
push
movs
in
retf
out
jle
push
call
jmp
(bad)
repz
ja
cmp
icebp
push
xlat
sub
out
test
cmp
movs
add
(bad)
mov
lods
push
gs
push
out
mov
push
push
movs
dec
sub
rol
adc
jo
pop
xchg
inc
aas
jle
sbb
aad
clc
or
mov
jecxz
popa
scas
das
or
add
js
inc
enter
pusha
add
leave
jmp
loopne
add
arpl
call
cdq
push
lock
jb
pop
inc
dec
and
and
sbb
xchg
ins
popf
ds
push
dec
movs
xchg
lahf
pop
cli
fisttp
push
inc
pushf
pushf
clc
popf
dec
loop
push
shl
cmp
xchg
push
mov
and
ss
jns
mov
int3
dec
sbb
cwde
mov
or
sub
or
outs
dec
dec
cmp
dec
jmp
and
lock
(bad)
fstp
scas
into
fdiv
cmp
lea
pop
test
xlat
test
fs
jle
jo
bound
mov
xlat
xor
(bad)
mov
pop
in
pop
(bad)
inc
xchg
jne
shl
jl
or
pop
jle
out
push
sbb
push
xor
mov
adc
test
xchg
sbb
jg
jmp
push
push
stos
cdq
fsub
cmp
push
xchg
mov
jae
mov
loopne
int
and
pop
test
push
sti
jbe
xchg
retf
ja
lea
push
(bad)
popf
or
mov
faddp
or
(bad)
(bad)
dec
or
ret
int3
ds
xchg
out
pop
pop
cmc
cmp
mov
sbb
push
lea
repz
adc
jmp
xor
adc
mov
cli
test
les
call
add
cmps
gs
pop
pop
lahf
pop
mov
mov
repz
mov
mov
sti
repnz
add
push
jg
in
jns
test
xchg
dec
pusha
test
mov
fsubr
dec
dec
xor
push
cmps
or
mov
mov
daa
(bad)
pop
cs
pop
daa
inc
mov
xor
es
mov
scas
jmp
mov
nop
jb
mov
inc
pop
mov
jo
imul
idiv
sbb
add
mov
add
xor
and
jae
push
nop
add
(bad)
shl
inc
addr16
sub
out
retf
jnp
cmp
test
mov
and
add
pop
sbb
push
fsubrp
mov
and
sbb
(bad)
(bad)
popa
out
xchg
cmp
and
arpl
mov
and
adc
in
add
push
leave
push
or
and
sub
ret
leave
loope
xchg
push
push
shr
fsubp
nop
scas
(bad)
std
push
(bad)
not
mov
push
adc
jp
mov
outs
jge
xchg
les
ss
shr
and
ror
(bad)
add
mov
lods
fs
fs
aad
mov
jecxz
icebp
es
out
aam
out
sbb
dec
jnp
pop
pop
in
ins
test
div
inc
js
mov
and
neg
sub
pop
xor
es
mov
into
ins
mov
gs
fdivr
sbb
adc
push
sub
lods
cmps
pop
xor
push
dec
call
scas
imul
fisubr
pop
sbb
fwait
push
es
loopne
daa
mov
push
add
arpl
out
xor
mov
ficomp
and
jmp
xlat
das
inc
(bad)
fistp
add
mov
cmps
gs
outs
sbb
rcr
idiv
push
mov
jbe
push
rcr
add
add
or
rol
mov
dec
ret
mov
mov
test
jo
aas
mov
psubw
cmp
js
cmp
mov
test
sti
imul
outs
xchg
imul
xor
int
fwait
mov
pop
fbld
sti
out
mov
stos
jnp
sub
adc
xchg
into
jecxz
bound
xchg
gs
dec
popa
push
xchg
mov
sbb
push
or
sub
and
jb
je
sbb
jmp
pushf
add
dec
inc
shl
ins
add
shl
in
jne
(bad)
ror
adc
sti
pop
lea
call
clc
xchg
pop
add
jnp
push
sti
out
cmp
mov
adc
mov
into
sti
sbb
sbb
sub
fs
jmp
adc
pop
jle
push
adc
lahf
cmp
(bad)
fnstenv
mov
mov
shl
call
mov
push
adc
imul
mov
dec
push
and
xor
das
xor
mov
es
icebp
xchg
movs
push
into
fiadd
lods
mul
cmp
pop
mov
jne
pop
arpl
mov
(bad)
mov
nop
xor
js
inc
pop
xlat
je
fisubr
dec
int3
pop
push
cmp
pop
push
test
mov
xor
fwait
in
lods
or
push
push
mov
push
out
imul
pop
push
sub
inc
rcr
les
out
fnstenv
iret
sbb
and
repnz
push
arpl
daa
add
addr16
call
and
data16
cmps
cmp
pop
out
lods
int
jbe
scas
mov
xor
inc
dec
nop
sti
test
bound
(bad)
in
mov
cld
xor
(bad)
fcmovbe
mov
adc
jmp
push
pusha
cmp
test
inc
fwait
mov
jl
jbe
cmp
clc
and
loopne
cdq
xchg
je
sbb
push
into
add
dec
call
adc
mov
push
sbb
sub
mov
and
test
pop
sub
and
loop
hlt
pop
pop
ror
(bad)
pop
push
dec
cdq
js
dec
dec
mov
push
jb
test
stos
sbb
movs
sahf
ret
adc
mov
stos
push
xchg
pop
add
stos
mov
adc
popa
mov
bound
dec
(bad)
js
push
xor
add
or
adc
adc
dec
out
mov
mov
dec
add
ja
in
cmp
or
test
mov
cmp
not
ds
ds
test
pop
test
xor
outs
xchg
(bad)
xchg
enter
mov
mov
dec
add
sub
inc
fs
inc
mov
mov
loop
ds
mov
sbb
mov
fistp
leave
leave
push
into
mov
xchg
mov
shr
push
int
pop
or
dec
in
ds
sbb
dec
xor
dec
ds
push
jg
push
or
das
sub
mov
iret
std
push
or
ret
or
pop
ficomp
stos
mov
pop
mov
xchg
sbb
dec
test
ret
pop
mov
je
dec
test
sti
mov
xor
adc
fwait
das
push
adc
jns
pop
xor
jmp
lods
stc
xor
mov
ja
pop
jp
sbb
ds
fisttp
enter
mov
jns
arpl
mov
jge
cwde
pop
push
leave
test
repnz
inc
mov
daa
xchg
into
dec
push
push
sub
xor
jmp
push
or
cmp
std
push
xlat
mov
mov
inc
mov
jg
addr16
cmp
lds
mov
aad
repz
sub
jo
add
inc
sub
mov
sti
jmp
sub
cmps
mov
jp
mov
stos
mov
cmps
lds
ret
adc
xchg
retf
jle
mov
(bad)
hlt
push
xchg
sub
and
dec
pusha
jecxz
retf
lods
into
scas
(bad)
cs
pop
pusha
cmp
shl
jbe
repz
mov
push
or
inc
jg
dec
jbe
xchg
inc
or
fdecstp
out
ds
inc
xchg
enterw
cs
and
stos
lods
xor
pusha
mov
push
add
mov
(bad)
out
or
pop
ret
dec
sub
adc
jmp
sub
gs
lock
mov
(bad)
(bad)
pusha
push
jmp
adc
pop
mov
rol
pop
in
xchg
pop
in
jle
pop
lds
outs
add
push
push
stos
push
jns
push
jnp
lahf
and
test
push
shl
test
stos
xchg
cmp
jne
ins
dec
mov
daa
jb
repnz
jb
xchg
shl
cld
pusha
push
ficom
pop
ret
xor
daa
mov
and
mov
lar
sub
out
pop
sbb
push
shr
push
pusha
pop
and
in
dec
test
mov
std
push
cmp
imul
imul
cmp
inc
pop
loopne
inc
test
pop
jmp
push
jne
xchg
dec
add
cmp
pop
mov
sub
scas
out
aas
pusha
test
pop
xor
mov
xchg
in
movs
loopne
or
jns
pop
push
(bad)
xchg
loopne
mov
fnstenv
adc
inc
and
mov
pop
sbb
xor
cwde
xchg
mov
data16
push
call
push
jle
xor
clc
int3
mov
push
or
pop
xlat
push
sub
repnz
lds
scas
jmp
jnp
ins
test
pop
test
pop
dec
lea
jl
mov
sbb
int
mov
sahf
and
inc
sub
cmps
jno
mov
mov
dec
add
push
daa
cmp
stc
pop
hlt
add
cmp
call
add
loop
loope
ror
bound
test
retf
mov
je
inc
mov
sub
test
sbb
cdq
cs
adc
or
adc
stc
xchg
xor
mov
stos
popa
clc
out
pop
mov
shr
ret
dec
test
dec
fsubr
jg
mov
ins
retf
retf
xor
push
or
jg
xchg
adc
cmps
inc
mov
(bad)
mov
adc
clc
add
arpl
pop
les
cmp
xchg
xchg
js
lds
add
lds
jo
and
sub
pop
add
sub
std
xchg
pop
jno
ficomp
mov
cmova
pop
lea
sti
pop
repz
adc
bound
out
mov
or
sub
mov
mov
iret
push
das
push
jecxz
or
xchg
sub
in
sbb
out
sub
aam
cmps
fnstenv
cmp
mov
push
pop
and
sbb
(bad)
mov
sub
(bad)
fcmovb
iret
lods
outs
pop
add
xchg
fwait
mov
outs
popa
pop
cwde
xchg
and
sub
fisub
mov
pop
mov
shl
mov
fisttp
in
outs
es
cld
es
xchg
xor
sbb
cmp
push
and
pop
and
rcr
arpl
outs
ds
outs
cdq
inc
rol
pop
rol
push
dec
test
mov
mov
sub
xor
jbe
div
dec
dec
stc
add
adc
das
call
das
mov
or
push
scas
clc
cdq
mov
push
idiv
fdivrp
ficomp
inc
add
(bad)
jne
pusha
inc
and
push
xchg
in
arpl
lea
addr16
jb
pop
mov
xchg
fldenv
cdq
cmp
cdq
(bad)
mov
sbb
inc
stos
enter
mov
xor
idiv
add
fnstcw
mov
dec
pop
adc
push
clc
xor
loop
fidivr
jo
adc
xchg
call
cmp
out
dec
add
outs
fs
adc
mov
cld
sub
std
cmp
sti
mov
fmul
and
sub
inc
mov
outs
dec
std
outs
mov
iret
cs
aas
xchg
jae
aam
dec
data16
pop
jne
mov
or
in
data16
dec
pop
xor
inc
cwde
jne
cmp
jnp
out
jo
loop
imul
mov
inc
push
aad
nop
cwde
enter
xor
add
mov
int3
sbb
je
sahf
sub
xlat
aad
adc
sbb
jp
pop
mov
mov
add
clc
popa
cdq
loope
mov
mov
push
ror
push
and
push
aas
inc
cmp
pop
shl
mov
sti
or
gs
xchg
inc
inc
retf
sbb
pusha
jecxz
mov
lods
push
ss
xchg
push
dec
(bad)
nop
shl
sbb
jno
sbb
aad
mov
sbb
repnz
inc
jp
mov
push
jb
movs
adc
retf
add
pop
and
mov
sub
jmp
mul
inc
push
fs
leave
out
adc
fistp
stc
sahf
sub
lods
mov
fcomi
sbb
sub
pop
xchg
stos
pop
imul
pushf
gs
pusha
scas
mov
jnp
mov
dec
push
push
push
cmp
pop
fwait
in
mov
add
jno
pop
push
ja
push
pop
mov
sub
ja
scas
dec
imul
call
vpaddq
lods
cdq
pop
jnp
dec
cmp
mov
mov
mov
into
dec
push
cmc
icebp
lods
or
jbe
(bad)
xchg
add
sbb
jnp
std
(bad)
mov
loopne
jp
and
pop
pop
pushf
mov
push
js
add
jecxz
and
push
mov
sahf
jecxz
test
fnstsw
cmovnp
jno
ins
bound
in
sub
sti
leave
mov
mov
test
jge
xor
shl
(bad)
dec
das
and
pop
pusha
and
scas
cld
int
mov
pop
jno
xchg
loop
xchg
cmp
mov
test
cli
mov
push
cli
popf
outs
popf
mov
or
loop
xchg
inc
dec
push
jge
mov
mov
retf
pop
data16
mov
leave
push
xlat
jecxz
push
cwde
es
out
sbb
jecxz
and
in
xchg
stos
popf
mov
mov
lods
rcr
mov
pop
test
sub
dec
aaa
lahf
dec
outs
or
daa
sti
adc
xchg
jl
cmps
xchg
test
jns
push
fimul
cdq
stos
push
cmp
in
pop
dec
mov
xchg
fwait
sbb
rcl
fs
jbe
fcom
je
fs
jmp
push
fld
(bad)
outs
push
xchg
xchg
in
movs
cdq
jp
cmps
push
rol
xchg
and
fisttp
retf
repz
jnp
and
fnstenv
in
ja
mov
in
push
mov
cs
sub
retf
ret
pop
imul
pop
or
popw
inc
(bad)
sbb
dec
popf
aad
cmc
mov
dec
iret
mov
aas
sahf
sub
sub
scas
fsub
cmp
inc
pusha
mov
push
fisubr
jnp
popa
inc
ja
imul
cwde
xchg
jl
stos
jbe
inc
or
mov
push
ret
sbb
sub
aaa
outs
cld
or
sub
outs
cmps
(bad)
push
mov
in
fimul
pop
bound
pop
push
fdivr
in
sti
test
add
imul
cmp
lahf
call
ds
mov
fwait
popa
or
jmp
fcmove
mov
xchg
dec
xchg
cld
cmp
aad
sbb
mov
cmps
mov
cmp
push
enterw
aam
jle
pop
mov
mov
ss
out
dec
rcr
push
jle
sbb
mov
les
aad
pop
xor
jge
lods
popf
xchg
int
pop
jae
xchg
cmps
adc
retf
test
jae
ins
retf
push
leave
pop
cmp
mov
cs
retf
test
int
test
xchg
movs
lahf
sub
rol
imul
scas
pop
push
xor
mov
bswap
js
jne
sbb
add
and
pop
pop
push
mov
push
pop
in
fldenv
hlt
in
xor
and
pop
loope
mov
add
mov
xchg
cs
push
mov
ret
adc
mov
sbb
pushf
loop
pop
test
ins
scas
or
sbb
inc
xchg
pop
ficomp
out
sub
jl
sub
sub
xor
sub
in
add
mov
cmps
enter
mov
adc
ja
mov
adc
push
inc
cmps
pop
das
cmp
xor
sbb
test
int3
outs
adc
leave
(bad)
movs
dec
xchg
push
int3
lahf
pop
cmc
scas
adc
in
inc
and
inc
sbb
xchg
sbb
(bad)
xchg
movs
xor
cmp
sub
cmp
rol
lahf
and
call
aad
adc
sbb
enter
cmp
(bad)
imul
add
xchg
pusha
inc
xchg
sti
push
and
adc
mov
xor
pop
enter
cmp
jmp
fistp
sbb
icebp
ret
add
mov
push
fdivr
add
inc
inc
mov
imul
ja
or
pop
mov
fcom
stos
sub
(bad)
dec
mov
sbb
xchg
or
bound
pop
xor
xor
mov
cmp
and
aam
pop
lods
and
scas
mov
fsubr
sub
sbb
inc
sub
mov
mov
or
sbb
sub
dec
movs
sbb
test
inc
adc
dec
lods
leave
xor
dec
ins
mov
int3
or
movs
outs
or
and
int
leave
jmp
retf
pop
adc
or
dec
push
xlat
and
jo
daa
cli
mov
mov
shl
ficomp
mov
in
adc
xor
add
mov
mov
mov
adc
inc
jp
loopne
xchg
ret
pop
add
xor
mov
out
jle
mov
mov
loop
std
not
push
scas
push
sub
or
sti
add
test
sub
mov
jmp
inc
pop
inc
push
jg
movs
mov
push
cmc
jle
call
jl
cmps
cmc
fs
mov
cdq
push
mov
inc
mov
cmp
fsubr
mov
push
add
jge
jae
sbb
xchg
xchg
pop
jle
jg
add
dec
jg
call
pop
js
mov
addr16
sbb
dec
push
in
mov
jmp
movs
push
js
mov
or
pop
jg
movs
mov
and
(bad)
cmp
pusha
inc
adc
push
cli
scas
adc
sbb
push
outs
test
xchg
and
jmp
mov
inc
mov
stos
cld
jecxz
sbb
test
pop
aas
xchg
adc
push
mov
imul
lds
xchg
cld
or
out
retf
(bad)
ins
fwait
(bad)
jge
iret
xchg
adc
movs
jge
loopne
cli
outs
mov
repnz
mov
adc
repz
mov
sti
and
or
push
inc
xchg
cmp
repz
das
adc
fcmovu
dec
pusha
ins
pop
dec
mov
call
cli
jns
cmps
xchg
and
ins
imul
mov
adc
cmp
xchg
adc
mov
mov
sub
sbb
arpl
enter
jp
push
ins
fwait
clc
dec
xchg
mov
jae
leave
xlat
out
push
jmp
and
cdq
sub
adc
mov
jecxz
sub
or
push
xor
xchg
jnp
sbb
jmp
jecxz
or
add
leave
pop
(bad)
imul
retf
lods
fwait
lahf
inc
dec
and
cmp
and
push
add
ja
and
daa
mov
jmp
mov
fstp
popf
xchg
cmp
imul
cmp
ins
sub
cmp
aam
mov
adc
gs
adc
push
imul
add
mov
out
xor
dec
mov
push
xchg
mov
pop
xchg
shl
add
mov
shr
inc
nop
push
lods
xchg
dec
pop
xchg
jns
pop
mov
les
cdq
fdiv
test
mov
lods
mov
xor
push
stos
fnstcw
mov
mov
inc
mov
out
add
outs
aas
aam
mov
dec
xchg
loop
les
xchg
(bad)
xchg
xchg
test
test
ror
ds
cmp
int
xlat
lahf
push
iret
pop
jmp
xchg
pushf
movs
mov
sar
loope
xchg
test
xor
push
add
test
aas
cmp
jb
call
dec
popf
and
stc
xchg
shr
jmp
lods
std
push
sbb
bound
pop
inc
test
mov
adc
push
push
adc
pop
pop
fbld
movs
add
jne
push
sub
aam
popf
je
add
outs
add
jnp
push
mov
xor
out
aad
sti
mov
or
mov
addr16
add
push
sbb
cld
mov
sbb
adc
xor
in
or
js
or
adc
mov
mov
in
or
ret
and
lea
out
test
test
adc
push
cs
mov
push
sub
cdq
movs
pop
add
fimul
mov
fadd
shl
or
pop
in
(bad)
jo
outs
xchg
mov
xor
sbb
or
pop
dec
pop
fcom
mov
jl
push
(bad)
cmp
cmp
rcr
mov
pop
add
aad
and
loop
add
sti
push
dec
add
stos
jo
mov
out
cmp
int3
fmul
mov
add
test
xchg
daa
outs
popa
add
cli
push
or
enter
(bad)
xor
mov
dec
ins
pusha
inc
xor
imul
pop
pop
push
jmp
out
sub
jmp
fs
int3
shl
mov
je
xor
push
push
sbb
into
mov
dec
pusha
push
rcr
adc
sub
sahf
test
xor
jmp
loop
mov
cmp
xor
ret
mov
and
call
lea
xchg
jg
xor
ins
or
jnp
inc
sub
or
sbb
ds
pop
pushf
repz
ret
add
jb
xchg
pop
xor
pop
test
shl
(bad)
xor
in
pop
dec
adc
js
pop
add
gs
pop
mov
bound
ret
dec
loopne
and
cmp
into
outs
sbb
push
cli
add
retf
xchg
cmp
cli
mov
call
cli
add
aas
je
adc
jecxz
or
jnp
xor
jl
jbe
mov
aaa
test
sub
cli
push
xchg
mov
fsqrt
inc
sti
in
mov
sbb
gs
adc
rcl
xor
jg
ds
add
sbb
adc
imul
sub
iret
iret
mov
xchg
outs
dec
jns
add
jb
shl
mov
mov
das
cli
add
dec
jne
mov
or
mov
test
int
dec
pop
cs
xchg
inc
out
scas
popa
sbb
push
push
rcl
retf
test
dec
out
inc
sub
stos
cmp
rcl
mov
data16
push
movs
jg
push
adc
lods
movs
lds
mov
xchg
inc
fsub
cmp
jno
lods
pop
enter
xor
push
cs
xchg
adc
push
xor
and
xchg
sahf
fdivr
adc
loope
add
mov
fmul
add
mov
and
sbb
mov
mov
adc
aad
cmp
mov
pop
test
les
xchg
call
push
js
enter
fisttp
lds
lock
mov
popa
inc
sbb
jle
mov
push
mov
(bad)
inc
sbb
dec
or
xchg
fild
mov
aam
jne
or
std
stos
add
pop
dec
adc
push
mov
shl
(bad)
je
aad
sub
fnstcw
daa
or
push
inc
pop
daa
pop
add
and
mov
repnz
inc
in
cmp
push
jne
adc
cmp
ja
sub
sbb
pop
or
sti
in
jae
and
test
mov
pop
mov
arpl
in
adc
mov
call
push
push
inc
aad
lds
pop
daa
mov
mov
add
mov
or
js
sbb
daa
jmp
test
dec
popf
daa
cmp
mov
xchg
add
xor
data16
aas
sbb
sub
xchg
lods
retf
jns
rcr
dec
sahf
jae
(bad)
dec
lods
mov
adc
mov
jmp
les
mov
mov
popa
sahf
imul
adc
xchg
call
add
xchg
push
sbb
push
nop
inc
lds
mov
aad
push
repz
xor
ficom
inc
mov
push
xchg
jmp
inc
enter
sbb
mov
std
loope
sub
int
jecxz
gs
das
aad
in
cld
pop
mov
scas
xlat
outs
adc
retf
mov
loop
pop
jl
jae
repnz
clc
or
add
pop
cli
imul
mov
or
mov
lea
scas
rcr
xchg
fild
mov
gs
dec
inc
lds
dec
xor
lods
jle
loope
fs
mov
(bad)
movs
dec
push
pushf
adc
fmul
out
jg
movs
add
(bad)
add
adc
fnstenv
jle
mov
or
xchg
mov
adc
and
pop
add
mov
rol
xchg
cld
add
and
mov
cwde
inc
icebp
mov
jp
xchg
or
popf
hlt
and
in
push
leave
popf
jnp
dec
or
cmp
sbb
fimul
aam
inc
test
pop
(bad)
inc
pop
ins
in
and
and
fdiv
xchg
inc
(bad)
cmp
fistp
pop
dec
fcomp
push
pmullw
aad
les
arpl
sbb
fcomp
cmp
mov
aas
int
std
lds
test
fwait
popf
inc
adc
xchg
scas
(bad)
push
mov
jl
and
leave
not
(bad)
inc
pop
popf
mov
lea
jl
(bad)
jle
push
test
cwde
push
daa
push
mov
es
sbb
imul
repnz
cmps
mov
cld
xchg
neg
iret
or
push
mov
pop
stos
dec
(bad)
int
mov
jb
inc
(bad)
pop
push
loopne
push
sbb
lea
xchg
lods
mov
shl
sbb
push
ss
push
mov
mov
jmp
loop
leave
cwde
es
dec
popa
pop
cdq
pop
arpl
ret
movs
lea
mov
cld
add
cld
mov
test
mov
mov
cmps
jle
(bad)
mov
fsub
imul
mov
push
icebp
cmc
sar
sub
ds
push
mov
js
sti
pop
cs
jl
sub
jecxz
push
scas
mov
das
ja
mov
shl
nop
add
xlat
and
cli
addr16
jmp
mov
adc
xchg
push
cld
mov
les
retf
mov
call
jge
inc
pop
call
aas
out
jb
imul
mov
mov
mov
mov
ror
xchg
add
sub
ret
stos
and
jnp
jb
(bad)
xor
jae
scas
out
xor
pop
and
jg
das
push
outs
add
fistp
sbb
mov
pushf
aaa
dec
out
iret
pop
mov
arpl
test
fdivr
call
lea
es
fs
lods
adc
jecxz
shr
ins
mov
test
dec
push
call
into
mov
ror
fsubp
add
cmc
and
repnz
push
jg
ficom
xchg
mov
jecxz
mov
dec
(bad)
cmp
stos
jb
mov
(bad)
jge
mov
dec
fidiv
cmp
lea
mov
iret
loopne
xchg
add
xchg
imul
int
rol
aam
movs
cmc
or
popa
nop
in
push
sbb
ja
jae
jl
ins
adc
push
xor
push
sbb
call
dec
cmp
ret
repnz
jp
mov
cmps
dec
rcl
lods
push
xor
adc
cmps
lds
xchg
arpl
int3
inc
std
mov
lahf
dec
xchg
mov
cmps
cmp
cs
out
add
mov
cdq
shr
stos
stc
popf
sti
cld
jl
xchg
daa
xor
xor
shl
push
std
loope
repnz
retf
add
cwde
pop
stos
out
lds
sub
push
xor
push
in
cmpxchg
cli
fidiv
jle
lods
xchg
rcr
outs
lock
(bad)
cmps
inc
mov
pop
and
in
call
ins
outs
jnp
push
mov
mov
xor
ins
stc
mov
test
sub
add
xor
add
pop
push
fcmovbe
cli
sbb
jno
rcr
mov
jnp
xchg
mov
push
cld
pop
add
repnz
sub
loope
dec
add
ret
movs
shr
std
dec
aaa
scas
mov
arpl
mov
add
dec
xor
repz
jno
adc
push
fld
cmc
scas
iret
jmp
pop
cmp
je
test
pop
int3
mov
leave
loopne
arpl
adc
mov
aad
xchg
cmp
or
mov
arpl
jle
sub
cmp
pop
in
cld
int3
js
les
movs
(bad)
sbb
add
mov
ficom
jbe
ret
sub
in
add
push
outs
or
push
dec
sbb
or
dec
or
mov
dec
(bad)
jo
movs
mov
je
aad
fmul
fcom
sub
pop
cmps
fbstp
fld
pop
cli
in
inc
repnz
outs
stc
aad
add
rol
cmp
xor
stos
test
adc
(bad)
xor
sub
mov
ins
arpl
movs
xor
lds
mov
and
loop
inc
sub
ret
stc
int
daa
jo
into
out
sub
dec
ret
add
mov
test
mov
(bad)
fmul
add
popf
adc
cs
cmps
or
dec
ret
imul
add
add
call
nop
repz
call
ja
jmp
das
mov
lods
mov
loopne
iret
add
ja
jmp
ins
push
push
xchg
call
hlt
jne
ror
cmp
add
fist
adc
(bad)
or
cmp
outs
mov
and
shl
in
ret
out
jge
shl
inc
hlt
pop
xor
mov
popf
into
inc
pop
adc
mov
sub
sar
mov
sbb
cwde
scas
pop
push
mov
inc
jecxz
sub
cmp
xor
cmp
mov
stos
mov
(bad)
pop
fdiv
test
xchg
inc
mov
mov
sbb
jae
ficomp
retf
or
(bad)
adc
sbb
lds
fimul
sbb
and
jne
loop
jns
mov
popf
dec
or
ja
sbb
lods
int3
pop
movs
jecxz
xor
fmul
mov
or
push
int3
fstp
(bad)
out
jno
fsub
pop
add
lock
repnz
cli
push
xchg
add
test
out
jb
(bad)
call
repz
push
push
mov
and
ja
sub
int
vaddsubpd
adc
sub
pop
jl
(bad)
inc
retf
push
and
and
(bad)
sar
leave
push
ss
push
jmp
cmp
(bad)
fs
and
inc
mov
xor
rol
inc
fst
dec
hlt
jne
xchg
pop
stc
mov
outs
push
loope
fidiv
push
push
dec
add
dec
addr16
sub
cmp
ror
jb
scas
jno
pushf
movs
aaa
adc
(bad)
pop
ins
xchg
rcr
test
add
mov
outs
(bad)
into
clc
xchg
inc
add
fld
aad
test
arpl
fcom
nop
add
cmp
arpl
sbb
clc
xor
cld
sbb
adc
cmp
add
aas
scas
xchg
mov
push
scas
fs
ja
mov
and
jo
test
mov
xchg
arpl
adc
fistp
adc
ret
sub
dec
xor
fst
adc
out
mov
mov
imul
leave
adc
xabort
loopne
and
jl
xchg
or
repnz
pop
leave
xor
cwde
loope
mov
lods
test
cmp
mov
or
xchg
fstp
ds
dec
mov
(bad)
lods
cld
push
out
mov
mov
pushf
aad
test
adc
add
sub
(bad)
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
or
add
(bad)
std
push
pop
xchg
adc
imul
xor
call
jl
fwait
add
mov
jo
push
pop
(bad)
mov
push
scas
das
lea
jge
fs
jb
out
mov
stos
sbb
frstor
loope
mov
mov
sub
das
mov
jge
dec
(bad)
pusha
jns
push
mov
mov
xchg
mov
rcl
mov
fcom
icebp
aas
mov
test
fisttp
xchg
cmps
jmp
pop
mov
xchg
not
std
stos
mov
sti
cmp
add
inc
push
loopne
mov
outs
fs
add
sti
sub
push
ffreep
xor
sbb
retf
pushf
gs
pop
call
aad
add
sti
aas
jl
cmp
call
mov
push
jp
lea
and
rcr
xor
lock
dec
int
jnp
loope
adc
push
mov
and
xor
push
sub
popa
cmp
sbb
xchg
dec
sbb
inc
push
lea
dec
mov
ret
inc
dec
icebp
xchg
dec
mov
push
imul
push
call
mov
or
jmp
jae
in
jbe
dec
adc
add
mov
cld
sbb
cmp
sub
jo
icebp
add
div
dec
jge
cmp
test
or
pop
int
sbb
stc
arpl
rcr
bound
popa
pop
jno
or
pop
cmp
leave
shr
add
adc
xor
dec
cwde
cmp
mov
xor
add
pusha
clc
mov
pop
cld
aas
pop
out
or
(bad)
mov
pop
popa
mov
inc
pop
sbb
mov
call
adc
stos
jne
sbb
inc
or
mov
cli
sar
sub
call
dec
mov
cmp
lods
rcr
cmp
arpl
loopne
dec
dec
mov
test
lds
mov
mov
enter
push
sti
fwait
push
sub
pop
je
cli
aam
scas
jl
sbb
scas
fcomi
mov
or
fldl2t
mov
push
sub
(bad)
aam
inc
mov
add
mov
outs
pop
mov
mov
aad
test
push
push
shl
fwait
dec
movs
xchg
inc
mov
pop
cld
js
and
icebp
push
sar
imul
popf
add
dec
shl
js
adc
mov
pop
loop
mov
(bad)
fsub
mov
bound
add
ror
add
dec
sti
pop
jmp
push
cmp
xchg
jmp
aas
enter
fist
pop
mov
jns
jg
stos
jmp
lds
js
in
lock
lahf
dec
sub
push
pop
ins
or
and
pop
or
mov
adc
add
aas
fadd
loopne
cmps
jmp
mov
and
aam
mov
xor
cmc
fidivr
aad
ins
and
xchg
fsubr
(bad)
adc
dec
xchg
enter
loop
fsubr
movs
mov
pop
sub
out
cmp
cld
dec
addr16
pop
xor
movs
(bad)
rcl
mov
cmc
fisub
data16
sbb
jbe
mov
std
jns
add
or
mov
cmovl
aaa
xchg
pusha
mov
stc
inc
pop
popa
mov
in
les
loopne
and
xlat
push
leave
inc
jl
aaa
aad
es
out
std
and
or
mov
sub
xor
inc
das
mov
adc
mov
inc
mov
pop
fild
in
in
(bad)
cmp
dec
mov
stos
and
daa
mov
mov
ins
and
mov
jge
cs
ret
out
xchg
xchg
jg
in
fisttp
xlat
icebp
fist
inc
jmp
stc
(bad)
fstp
cmp
mov
pop
sahf
addr16
popf
lds
push
inc
cmp
add
inc
mov
out
xor
pop
setno
imul
add
xor
ret
fwait
sbb
jb
xlat
sub
jns
sar
stos
inc
aad
mov
mov
test
ins
popa
sub
call
sub
fimul
js
scas
sti
jle
xchg
cld
fnstenv
adc
jbe
pop
pushf
mov
lahf
add
push
cmp
mov
dec
(bad)
aad
stc
jp
(bad)
dec
hlt
xchg
ret
or
jmp
pop
push
sbb
xchg
aas
jnp
lahf
pop
cmp
dec
retf
call
test
fcom
pop
jp
dec
fild
and
rep
add
and
fs
cmc
adc
pop
popa
out
lahf
jg
retf
inc
add
push
cdq
add
mov
hlt
outs
stc
les
pop
xor
dec
jns
in
adc
sbb
pop
out
je
shl
movs
gs
mov
mul
shr
in
gs
or
and
adc
add
jae
or
dec
leave
addr16
out
xchg
mov
sar
leave
pop
jne
xor
je
add
and
repnz
test
movs
repnz
pushf
mov
sub
add
(bad)
out
pop
xor
jg
pop
sub
xor
pop
xchg
xor
mov
push
jle
pop
and
je
out
sbb
ins
ja
push
int
pushf
or
stos
fstp
inc
xchg
jecxz
xor
xchg
loop
xchg
push
xor
sub
push
ins
imul
inc
(bad)
push
cli
push
or
(bad)
sub
push
cld
int3
fwait
pop
add
test
lock
ss
mov
add
js
pop
xor
mov
sbb
inc
adc
xchg
lods
or
sub
mov
pop
push
adc
push
cmp
ror
xor
stos
bound
xchg
stos
inc
mov
xchg
push
xor
fwait
xchg
xor
jmp
test
xlat
or
adc
sti
mov
mov
(bad)
push
repz
repnz
xchg
xchg
xchg
inc
aaa
out
or
out
inc
push
pop
fstp
xchg
dec
jmp
cmp
xchg
fsub
lea
stc
retf
call
xor
cmc
loopne
or
pop
inc
jns
xchg
push
call
lahf
repz
push
pusha
mov
and
sub
mov
push
lock
pop
test
push
mov
xlat
pshufw
cs
and
std
imul
jmp
mov
push
les
add
in
fs
sbb
or
xor
sahf
jmp
(bad)
fwait
scas
mov
or
idiv
sbb
add
into
pop
adc
mov
fs
add
mov
or
call
sub
cmp
pop
sbb
mov
or
aas
sbb
je
dec
fcom
xchg
pop
jbe
cli
pop
aas
xchg
push
jecxz
mov
fcomp
pop
retf
adc
mov
jmp
push
adc
inc
test
adc
jge
xchg
mov
stos
sahf
in
jo
ja
into
sbb
xchg
scas
mul
sbb
push
push
mov
ins
out
pop
sahf
or
pop
add
sbb
sub
daa
push
mov
jne
sbb
aam
fstp
mov
out
in
push
dec
std
inc
lock
(bad)
cmp
xchg
mov
enter
push
push
dec
ins
div
outs
mov
push
out
mov
sahf
push
(bad)
xor
xor
mov
inc
retf
lods
sbb
dec
(bad)
mov
aas
lea
jo
adc
adc
pop
jne
xchg
xor
test
(bad)
ret
xchg
xor
imul
xchg
rol
repnz
in
add
sbb
sub
add
dec
pushw
leave
lock
aam
loope
pop
inc
xor
int
pop
push
cmp
popa
mov
jnp
outs
mov
xor
rcr
inc
or
dec
and
imul
fbstp
adc
shl
and
mov
and
test
in
ins
retf
ret
sbb
sbb
icebp
leave
push
pusha
sbb
pop
outs
jl
jge
push
mov
add
add
in
fdivp
adc
test
nop
push
into
fisttp
or
and
pushf
or
leave
jae
adc
(bad)
rcr
repnz
out
inc
je
mov
pop
(bad)
clc
xchg
enter
jmp
adc
sbb
cdq
jb
js
or
out
clc
(bad)
loopne
and
test
dec
imul
sahf
cmp
mov
loopne
mov
iret
mov
dec
(bad)
mov
cli
das
into
mul
sub
aad
(bad)
dec
dec
jo
mov
mov
out
xchg
stos
cmp
mov
fwait
mov
fstp
nop
xor
test
out
mov
inc
icebp
add
xchg
jge
(bad)
cmp
mov
(bad)
mov
push
outs
icebp
mov
int
fst
xchg
call
test
call
add
add
cmps
test
iret
adc
dec
repnz
movs
data16
inc
mov
xchg
sti
sub
mov
into
jle
add
push
aam
scas
iret
(bad)
(bad)
mov
xlat
pop
sbb
mov
iret
dec
stos
push
imul
mov
inc
stos
push
add
rol
rcl
jg
push
inc
fwait
mov
and
xor
loop
mov
fadd
test
xchg
push
outs
jmp
push
call
push
mov
xchg
aas
gs
inc
push
cdq
cmp
mov
and
jns
fst
xor
adc
xchg
xor
daa
es
jp
adc
or
or
int
push
enter
movs
push
stc
or
push
int3
js
mov
inc
pop
lahf
cld
mov
call
data16
xlat
and
int
gs
pop
xchg
lds
pushf
into
cmp
xchg
scas
ret
ins
sahf
stc
xor
or
push
stos
retf
mov
jae
jns
stos
clc
mov
inc
cli
mov
es
(bad)
cmp
push
fist
dec
inc
mov
cdq
jmp
idiv
push
inc
sub
arpl
add
xchg
xor
fmul
addr16
pop
or
les
jne
fld
(bad)
or
int
add
pop
aas
test
je
xchg
lods
or
sub
ins
pop
fld
and
sahf
xchg
fdivr
fs
(bad)
jno
mov
lds
aaa
fist
fdivr
aas
aad
mov
inc
emms
(bad)
mov
sbb
out
mov
leave
mov
pop
ret
(bad)
fisub
adc
push
(bad)
js
dec
adc
(bad)
js
jge
call
mov
xchg
imul
in
pop
test
in
call
shl
repz
fld
pop
add
sbb
jno
and
or
aaa
ficomp
xor
clc
jns
mov
xor
xchg
fiadd
push
retf
and
idiv
xor
push
cmc
aas
jp
retf
sar
mov
in
cmp
pop
test
mov
pusha
and
xchg
add
push
and
inc
push
jae
and
pusha
push
mov
mov
and
ss
rol
inc
rol
or
xor
mov
inc
push
in
fstp
dec
mov
jmp
inc
xchg
cdq
mov
lock
stos
lea
ror
push
icebp
jns
shl
int3
mov
sbb
mov
arpl
ins
aad
sbb
fsubr
(bad)
out
mov
loope
mov
cmp
jl
popf
dec
mov
test
icebp
popa
ins
inc
stc
sub
mov
mov
packuswb
adc
ror
loopne
hlt
int
rcl
pop
loopne
sbb
cld
push
lods
std
popa
xchg
mov
inc
or
(bad)
sbb
pop
ret
hlt
sub
out
dec
push
xor
jle
loop
inc
sbb
popa
test
mov
daa
call
add
pusha
int3
lahf
jo
out
inc
ss
adc
lods
jmp
int3
into
arpl
pop
daa
fcomp
mov
pop
xchg
inc
shl
repnz
jle
dec
std
inc
aas
test
pusha
add
in
pusha
stc
mov
pusha
xchg
pop
sbb
push
dec
ja
and
add
push
mov
aad
fiadd
pop
xchg
ss
add
mov
je
cli
shl
(bad)
test
in
jmp
test
jne
repz
pop
inc
pop
arpl
call
inc
push
daa
jl
iret
sti
push
push
pop
and
sar
inc
scas
sbb
into
rcl
add
inc
out
adc
or
lahf
jge
cmp
adc
dec
in
sub
mov
imul
cmps
add
xor
cs
int
push
imul
call
cmp
xor
outs
pop
sub
mov
jl
ror
data16
movs
jle
cmp
xor
push
ins
int
imul
(bad)
pop
clc
adc
int
push
pop
pop
sti
adc
loope
ret
popa
lods
cmc
push
sti
xchg
jecxz
cmps
mov
pop
retf
mov
mov
mov
clc
add
rcl
popf
pushf
call
jbe
pop
inc
je
and
and
pop
jne
xchg
fst
mov
jp
xchg
mov
pop
dec
repnz
sbb
pop
out
mov
sub
inc
jle
mov
xchg
and
in
mov
arpl
push
lea
jb
fstp
sbb
int3
fdiv
repnz
sub
sbb
popf
sbb
dec
xor
dec
loope
imul
and
pop
or
cmp
rcl
mov
mov
add
jno
clc
xchg
scas
mov
dec
fadd
mov
add
ins
cmp
xchg
jge
xchg
sub
cli
pop
cmp
cmp
shl
push
xor
mov
dec
in
mov
ror
pop
int
sbb
sbb
push
and
inc
xchg
icebp
mov
adc
pop
idiv
pushf
xchg
call
out
push
fs
jo
adc
rol
adc
fimul
sbb
xchg
bound
es
ja
push
in
sbb
inc
fwait
and
cmp
push
test
(bad)
pop
fadd
mov
rol
jne
sub
in
gs
mov
and
xor
out
add
mov
dec
cli
push
test
xchg
jns
sbb
ficom
inc
std
(bad)
mov
fiadd
(bad)
mov
in
pop
sub
pushf
add
test
fwait
sahf
aas
rcr
jg
jl
and
inc
inc
dec
fstp
in
jp
adc
es
ficomp
mov
xchg
sti
add
cmp
jno
push
pop
mov
jle
xchg
(bad)
jmp
jmp
xor
push
retf
pop
push
cli
test
sub
mov
jp
lds
in
or
push
jmp
adc
sbb
fsub
stos
clc
mov
ror
and
pop
pop
sbb
fwait
push
jl
inc
pop
cmps
fs
loop
cdq
or
inc
xchg
test
sbb
test
aaa
fistp
jp
mov
addr16
pop
fwait
mov
dec
(bad)
mov
shr
jp
mov
mov
inc
repz
fdivr
mov
sbb
out
je
dec
xor
xor
retf
xlat
push
push
pop
scas
pop
pushf
inc
xchg
js
sub
popa
ret
int3
das
sti
icebp
rcr
in
mov
popf
ins
mov
popf
lahf
mov
mov
dec
and
out
xchg
ins
add
pop
out
and
fbld
fimul
addr16
div
rol
sar
mov
cmp
pop
cwde
xor
int3
sbb
test
ja
test
in
lods
pop
movs
fdivr
in
inc
imul
sahf
imul
stc
bound
xchg
ficomp
(bad)
les
stc
das
inc
push
popf
or
shr
fld
scas
inc
sbb
test
push
xchg
xchg
mov
cmp
into
xor
outs
and
ret
sub
and
or
ins
push
mov
cdq
mov
mov
pop
sbb
outs
stc
movs
and
jle
or
or
mov
xchg
test
mov
fcmove
std
adc
lds
inc
push
test
sub
dec
xor
retf
push
stos
pop
add
(bad)
fstp
add
jecxz
jo
les
sub
dec
rcl
cmp
test
js
or
lods
push
mov
fmul
dec
std
push
push
xor
push
test
retf
and
or
ret
in
mov
add
in
xchg
jmp
dec
xor
out
jb
mov
mov
or
mov
mov
and
(bad)
mov
mov
jbe
pop
sbb
or
xor
push
pop
push
shl
add
fdiv
pop
in
in
mov
mov
mov
in
nop
push
(bad)
jge
sub
(bad)
cmp
pushf
or
data16
cdq
mov
cmp
(bad)
mov
nop
cmp
fild
adc
aad
addr16
cdq
mov
arpl
in
pop
jp
mov
sti
cmps
pop
and
aaa
jl
hlt
adc
popf
pop
or
aam
outs
rcr
mov
push
dec
push
pop
retf
lea
aaa
push
sub
test
ret
add
or
xchg
ret
shl
jb
clc
addr16
adc
xchg
add
push
mov
push
xchg
dec
sbb
icebp
fst
(bad)
mov
imul
mov
imul
dec
ror
setg
fcomp
fs
clc
push
aad
mov
repz
and
mov
dec
cmp
xchg
adc
fdivr
out
cmp
test
dec
in
dec
and
mov
and
div
es
leave
into
ret
mov
mov
nop
jns
push
push
mov
std
(bad)
cld
into
add
clc
jmp
cmps
ins
scas
out
pop
mov
mov
mov
dec
cmps
ins
(bad)
pop
add
xor
mov
or
lock
cmps
jl
xor
push
xlat
int
lds
fidivr
sbb
cmp
sar
push
je
mov
jne
dec
sub
pop
ins
sbb
hlt
imul
ds
mov
scas
stos
mov
aas
jno
jmp
lahf
int
call
hlt
xor
mov
lods
mov
adc
pop
repz
aam
and
lahf
push
cmp
or
pop
push
jns
cmp
jmp
or
push
bound
adc
mov
popa
dec
(bad)
xor
cld
dec
popf
push
sub
test
nop
fsubr
dec
and
mov
jg
or
les
pop
jmp
jae
jl
cld
mov
inc
jmp
push
jl
daa
inc
cmps
pop
push
and
stos
push
sub
add
leave
pop
jl
pop
inc
lea
dec
cs
rcr
sbb
mov
scas
lods
xchg
lahf
mov
iret
not
mov
xchg
loope
add
or
jp
jb
scas
outs
movs
pushf
push
js
jge
sub
ins
call
lahf
leave
pop
leave
retf
test
aam
inc
cli
xchg
fisub
(bad)
mov
push
je
mov
stos
sbb
or
pop
fadd
pop
jmp
add
pop
jbe
retf
adc
js
mov
sbb
sub
popa
pop
jmp
stc
sti
fdivp
out
aad
sub
push
ret
adc
and
(bad)
push
push
pop
push
(bad)
xlat
jmp
in
test
and
xchg
jne
or
shl
inc
out
mov
mov
es
out
or
icebp
or
outs
test
xchg
pop
or
inc
leave
inc
mov
xchg
sbb
adc
call
shr
mov
shl
pop
adc
inc
test
push
inc
outs
je
leave
or
lods
fimul
mov
dec
iret
inc
loopne
arpl
adc
sbb
rcr
and
or
add
sbb
outs
fcmovbe
call
xor
pop
cmp
cmp
sbb
mov
mov
inc
out
inc
sub
mov
stos
shr
pop
cld
dec
add
mov
and
sar
push
ss
add
aad
aad
aas
add
fistp
xchg
imul
push
sbb
daa
outs
icebp
sbb
mov
mov
jle
sub
push
(bad)
and
and
js
cmp
sub
jmp
or
mov
jno
bound
cmp
pop
jmp
jmp
ins
lea
test
clc
cmp
xchg
adc
dec
icebp
pusha
pop
sub
movs
(bad)
sub
and
fs
dec
pop
scas
push
scas
add
mov
sub
mov
push
pop
loop
xor
pop
xchg
nop
jge
rcl
mov
dec
dec
jle
cmps
inc
xor
push
jl
(bad)
loope
inc
pushf
mov
adc
icebp
jno
iret
repnz
out
out
and
xchg
mov
push
or
mov
xchg
pop
in
adc
push
jae
cmc
(bad)
ja
out
enter
mov
pop
rol
cdq
test
pop
mov
push
mov
test
sub
xor
pop
sbb
jne
mov
fiadd
pop
xchg
adc
push
xchg
test
xor
push
push
repnz
dec
fstp
lea
pop
add
inc
ja
xchg
aam
daa
push
mov
rol
rcr
loopne
push
or
sbb
push
nop
scas
jmp
es
cmp
jne
dec
cwde
push
rol
cmp
push
je
xor
movs
jg
imul
and
dec
mov
scas
out
js
xchg
cmp
sbb
ins
mov
sub
aad
and
jne
push
aaa
call
push
fwait
popa
mov
repnz
jmp
jbe
mov
ror
inc
sahf
addr16
mov
iret
lds
push
xlat
mov
cmp
popf
xor
mov
(bad)
mov
es
leave
scas
add
or
pop
outs
mov
inc
sub
adc
stos
sbb
jmp
sbb
inc
mov
cli
lds
adc
sti
retf
out
ins
mov
stos
mov
(bad)
ret
mov
jmp
adc
jne
inc
push
add
jnp
dec
js
jmp
sub
pop
adc
jp
je
add
ret
int
(bad)
mov
pop
shl
imul
sahf
xorps
ins
pop
(bad)
and
repnz
hlt
test
addr16
lahf
or
dec
mov
cs
jle
imul
xor
sub
and
mov
dec
popf
xchg
out
test
mov
mov
pushf
and
outs
idiv
jmp
jge
mov
std
cs
std
lods
pop
push
jmp
imul
mov
dec
in
movs
xchg
push
fs
rcr
sti
fcomp
ds
aam
cmp
adc
shl
loopne
xchg
adc
stos
(bad)
daa
pop
lahf
addr16
je
or
inc
repz
gs
mov
push
(bad)
call
inc
loopne
in
inc
idiv
push
push
movs
push
dec
ffreep
mov
cmp
and
xchg
retf
jmp
ss
and
mov
mov
lock
add
pop
mov
cmp
push
ins
and
xchg
push
ja
bound
(bad)
retf
data16
loopne
repz
inc
out
adc
enter
push
in
mov
mov
mov
push
add
ins
push
and
clc
sbb
fcom
scas
loopne
add
sbb
out
sub
fsub
jmp
shl
dec
inc
(bad)
(bad)
adc
mov
sub
pop
xchg
mov
das
test
inc
sub
sti
add
mov
repnz
pop
adc
les
mov
sti
in
jmp
jmp
fs
and
(bad)
(bad)
lock
(bad)
mov
push
inc
std
repnz
jmp
lods
push
jmp
(bad)
fstp
pop
dec
inc
adc
mov
aas
adc
pop
movs
jns
mov
aas
ret
xor
repz
mov
xor
cli
sbb
outs
cld
or
out
sub
dec
pop
xchg
pop
sbb
lds
(bad)
fistp
and
mov
cmp
sub
movs
pushf
repz
and
loopne
into
push
mov
std
repnz
outs
ins
sub
cmp
retf
dec
jmp
xchg
pop
btc
xrelease
adc
fwait
out
in
jo
pmaxsw
mov
push
cmp
lea
jge
scas
dec
call
cmp
add
xlat
sti
mov
jne
(bad)
cmp
add
fptan
pop
push
inc
push
mov
sub
and
mov
cmps
addr16
call
adc
ins
xlat
cmp
mov
mov
dec
mov
popf
arpl
adc
pusha
pusha
push
jbe
hlt
ja
aad
cmp
shl
pop
pop
cmp
mov
retf
aas
or
xchg
and
out
pop
pop
push
mov
enter
repnz
sbb
or
sbb
jno
mov
test
adc
dec
(bad)
jle
pop
jecxz
gs
cmp
daa
cmp
or
into
loope
and
out
gs
push
out
lds
cmp
cmps
popa
loop
stos
cmp
retf
cmps
or
outs
je
mov
lods
dec
xor
sub
pop
jns
hlt
ja
mov
push
std
or
out
jae
xchg
frstor
mov
out
mov
aas
mov
call
jge
fwait
cmp
add
sbb
cmps
lea
clc
cli
in
jne
mov
pop
jne
jbe
in
cmps
jns
scas
sub
mov
or
pop
and
jb
daa
inc
rol
sub
pop
icebp
retf
into
add
push
dec
inc
(bad)
dec
shr
sub
inc
cmps
sbb
sti
int3
jns
xchg
aas
(bad)
mov
jg
rcl
stc
dec
into
xlat
shr
scas
call
fwait
ds
and
add
add
mov
xchg
adc
sahf
dec
ins
push
loopne
dec
out
and
cdq
rol
mov
jae
mov
js
sahf
adc
imul
shr
sbb
aas
enter
xor
inc
xchg
into
dec
mov
sub
cmp
jp
loopne
dec
popf
gs
and
mov
(bad)
jg
sub
adc
cmp
and
(bad)
sbb
jecxz
icebp
pop
dec
(bad)
pusha
lahf
dec
push
sbb
shl
sbb
sti
(bad)
call
push
outs
cmps
sbb
jmp
mov
int3
sub
mov
add
push
cld
cmp
or
stos
inc
dec
(bad)
mov
push
fnsave
fisubr
ss
xor
sti
push
mov
int
xchg
inc
xor
(bad)
fwait
cs
add
fnsave
fld
mov
rcl
sti
adc
add
(bad)
jo
xchg
sub
cmps
(bad)
or
mov
mov
pop
cmp
adc
lods
mov
sub
or
jno
call
mov
mov
movs
mov
jbe
test
fld
xor
arpl
add
mov
jne
dec
(bad)
out
jne
push
mov
xchg
cmp
add
push
hlt
jp
inc
loop
pop
enter
pop
into
shr
retf
xor
popf
cli
loope
add
jns
repnz
pop
mov
test
repnz
and
test
scas
push
sub
nop
das
xchg
leave
jae
xchg
bound
test
xchg
rcl
push
pop
or
cmp
popa
stos
loop
rcl
inc
xchg
and
and
sbb
repnz
shr
retf
cmp
mul
sbb
jno
cs
jmp
inc
mov
call
or
inc
psubw
pusha
lods
mov
adc
scas
in
repnz
jg
mov
fldenv
pop
ds
fxtract
or
outs
mov
fsubr
xchg
xor
mov
mov
mov
addr16
push
xor
rcl
shr
mov
stc
mov
mov
aad
cs
adc
arpl
cdq
adc
shl
out
jo
xchg
inc
xor
sti
sbb
xor
das
inc
add
aaa
addr16
daa
dec
xchg
call
mov
inc
ret
and
movs
ds
inc
or
cmp
add
loope
dec
scas
mov
shl
aaa
ret
fcomip
lods
jge
ja
xchg
pop
into
ror
jge
lods
mov
jmp
inc
clc
mov
(bad)
mov
sub
mov
jbe
dec
call
and
mov
mov
dec
fld
dec
jnp
inc
mov
adc
je
aam
call
out
movs
and
pushf
jno
push
ret
repz
sub
sub
mov
xchg
jnp
idiv
outs
pushf
cmp
cmp
push
add
push
jae
dec
and
sti
pop
imul
leave
xchg
pop
ss
adc
pushf
(bad)
cmps
mov
add
ss
cmp
lods
test
cdq
xor
push
out
and
inc
out
ficomp
clc
dec
pusha
mov
jle
int3
imul
push
inc
jl
cs
lods
pop
push
inc
imul
add
pop
retf
gs
(bad)
es
mov
cmp
into
mov
add
mov
push
sbb
push
xchg
add
push
loope
movq
push
push
or
cli
mov
cmp
sub
stos
jne
cmp
lods
push
dec
jge
push
cmp
inc
test
xchg
fs
add
jmp
adc
test
ins
jge
leave
pop
inc
mov
cmps
lea
and
in
dec
aaa
xor
push
outs
add
scas
icebp
mov
cmc
movs
pop
pop
jg
mov
sbb
sti
cmps
jae
pop
xchg
mov
sahf
mov
arpl
fstp
mov
addr16
cs
enter
test
adc
pop
add
cmps
and
cdq
sub
inc
dec
call
and
ret
fstp
add
mov
hlt
sub
cmc
jb
stc
movs
pop
test
pop
or
enter
jmp
sub
jle
call
lahf
mov
push
test
mov
fbstp
or
(bad)
mov
xchg
out
outs
iret
or
mov
jnp
inc
(bad)
and
out
mov
mov
push
sbb
js
rol
xchg
gs
test
outs
outs
jae
movs
jl
pop
adc
shl
and
cld
cmp
sub
push
mov
push
jne
(bad)
ds
test
ret
fld
pop
stos
jge
rcl
mov
div
xchg
cdq
outs
mov
movd
jle
lea
and
push
inc
push
inc
sti
pop
xchg
call
lock
jp
popa
xchg
push
xchg
test
call
mov
mov
mov
loopne
xchg
mov
fs
(bad)
fst
add
repz
adc
add
retf
fistp
je
test
and
retf
repnz
or
mov
stc
jg
sbb
dec
jg
aam
scas
pop
add
and
xlat
pop
push
pop
push
imul
test
add
and
daa
mov
test
mov
cmp
cmc
sahf
data16
xchg
mul
mov
ja
jb
xlat
xor
and
retf
ja
cwde
pop
jne
jge
addr16
mov
test
dec
mov
dec
jo
push
adc
mov
adc
mov
scas
add
ins
and
lock
aam
or
jmp
push
es
cmc
leave
sahf
or
xchg
mov
fimul
adc
mov
adc
pop
arpl
sbb
xchg
imul
sbb
cmp
mov
or
or
lock
mov
sub
mov
lds
rcl
call
add
xor
int
or
mov
push
mov
pusha
ins
mov
out
in
call
pop
mov
loope
in
xchg
and
scas
pop
repz
pop
inc
out
ins
cmp
pop
int
int
jne
scas
call
add
sti
rcl
jbe
ss
xchg
mov
(bad)
in
sar
or
inc
jle
add
jb
jp
into
cmp
lds
pop
test
in
jmp
jmp
shl
sbb
push
sub
push
sub
mov
sub
push
imul
fstp
adc
or
and
pop
out
pop
xchg
mov
inc
(bad)
ja
mov
mov
pop
adc
pop
int3
test
and
xor
inc
xchg
not
iret
pop
(bad)
cmps
push
mov
cmps
in
int3
(bad)
mov
push
repnz
sbb
push
lea
and
shr
imul
inc
pop
add
push
xor
xor
and
xlat
jbe
hlt
repnz
xchg
int3
dec
dec
dec
hlt
inc
ficom
adc
xor
fs
pop
popa
enter
gs
push
mov
cmps
pushf
fidivr
fistp
jo
mov
cld
inc
mov
jbe
push
cmps
sub
adc
fwait
xchg
pop
cs
push
jns
or
(bad)
fnsave
cmp
xor
dec
fmul
outs
jb
jecxz
and
push
mov
jo
shr
in
jo
pop
jb
ret
add
lea
adc
inc
jecxz
mov
(bad)
cmp
sbb
add
pop
iret
push
inc
clc
enter
add
or
mov
sbb
test
shr
in
or
pop
call
adc
cwde
jmp
aas
mov
add
in
dec
jecxz
into
adc
mov
jecxz
daa
inc
popf
cwde
dec
ds
mov
and
jle
jecxz
mov
xchg
push
mov
mov
mov
out
(bad)
jmp
add
sbb
loope
push
or
iret
icebp
rcl
lds
dec
push
rol
es
bound
sbb
inc
retf
sub
sub
enter
dec
int3
mov
sub
adc
and
sar
movs
sbb
bound
adc
xchg
jnp
fwait
bnd
stc
(bad)
shl
fs
shl
popa
in
add
(bad)
popf
popa
mov
add
repz
push
mov
cmc
out
lahf
ss
clc
mov
stos
loop
fmul
test
mov
loope
daa
mov
iret
cmp
sbb
and
jmp
ret
push
inc
add
cmp
xchg
ror
test
sub
mov
aad
sub
inc
dec
mov
icebp
fnstsw
in
sub
nop
inc
cmp
mov
cmps
mov
mov
test
cmp
nop
aad
xchg
rol
mov
xlat
and
movs
stos
add
fisub
jmp
div
fbstp
add
inc
leave
push
mov
sahf
popf
push
and
jae
cdq
cdq
mov
sbb
or
cmc
int3
fimul
push
div
imul
fwait
mov
cmps
hlt
loop
pusha
cdq
inc
pop
and
aam
push
sub
mov
mov
fadd
adc
pop
mov
mov
std
ins
dec
inc
mul
mov
imul
imul
adc
rcr
jmp
sbb
out
out
sbb
add
(bad)
stos
out
adc
xchg
lods
ins
data16
inc
fistp
xchg
inc
pop
sti
xchg
test
in
in
movs
cli
mov
fwait
jns
xlat
(bad)
mov
add
clc
sysexit
cs
pop
jp
jmp
mov
repz
jae
pop
fimul
into
jne
lahf
lahf
icebp
lods
test
pusha
outs
shr
(bad)
(bad)
hlt
and
cmp
pop
stos
neg
or
mov
fadd
ja
(bad)
push
test
retf
test
ret
test
fsubr
sti
xor
mov
mov
adc
mov
lahf
js
addr16
mov
xor
mov
fcomp
mov
iret
loop
and
ja
xchg
sub
xor
sbb
cmp
pusha
add
stos
pop
cmp
std
xor
cmp
aaa
sub
mov
(bad)
pop
fwait
mov
fidiv
inc
call
adc
xor
shl
aaa
add
jb
fsub
test
sub
mov
jne
gs
scas
inc
sub
sub
les
or
daa
lea
in
mov
hlt
pop
ret
mov
inc
pop
or
lods
jnp
in
popa
mov
mov
sbb
inc
and
jne
(bad)
aad
lods
or
popa
mov
fs
xchg
dec
sub
add
or
xor
aam
inc
xchg
mov
cmp
inc
jne
into
loop
and
sbb
sub
push
aad
xchg
retf
(bad)
adc
dec
jbe
mov
inc
fdivr
cli
(bad)
into
jg
jg
jmp
mov
shl
repnz
mov
bound
jmp
adc
and
imul
inc
mov
xchg
mov
ss
inc
ret
aas
repnz
popa
sbb
sbb
(bad)
je
not
fwait
mov
fdivr
gs
gs
add
ins
pushf
test
outs
mov
dec
ret
cld
(bad)
mov
imul
js
xor
mov
mov
dec
movs
xchg
ins
aad
into
add
int
(bad)
sbb
cs
pop
or
in
mov
imul
mov
adc
or
jl
and
lock
pop
xor
adc
outs
xor
mov
scas
rcl
inc
push
jb
sub
or
sbb
jecxz
adc
(bad)
data16
xor
jmp
and
sub
cld
ret
adc
ins
pop
inc
daa
mov
pop
iret
and
add
xor
clc
inc
lods
push
or
and
repnz
pop
sbb
mov
xchg
mov
mov
xor
adc
fs
jns
dec
adc
sahf
movs
scas
xchg
ins
mov
das
es
ss
dec
ret
inc
pop
std
inc
add
(bad)
push
and
aas
ret
shl
shl
movs
mov
int
fld
adc
sbb
pusha
add
movs
mov
call
jb
and
jecxz
and
xchg
push
hlt
lock
jg
mov
pop
mov
rol
push
adc
and
(bad)
pop
imul
mov
shl
icebp
movs
push
adc
mov
ret
stc
push
jmp
pop
or
push
(bad)
sub
mov
repz
cmc
outs
sbb
sbb
bound
cs
xor
enter
push
push
jmp
add
dec
add
lock
mov
lock
or
nop
imul
jb
repnz
add
or
lods
cmp
pop
or
xchg
push
clc
or
pop
xchg
pop
push
shl
pop
dec
mov
fwait
xor
jo
test
xchg
sbb
lods
add
mov
pop
int3
cmp
aam
fdiv
in
jns
cmp
xchg
lods
xor
outs
push
(bad)
pushf
dec
(bad)
cmc
add
lock
mov
push
shl
scas
push
xchg
adc
enter
(bad)
xor
jmp
pop
ja
jne
int3
mov
outs
mov
daa
cmp
xchg
iret
jl
in
xlat
push
imul
push
cmp
data16
out
jg
aam
data16
(bad)
sbb
push
in
not
pop
inc
cs
dec
mov
or
xchg
les
mov
cli
hlt
push
xchg
repz
push
or
shl
push
lods
jnp
xor
cwde
int3
or
imul
mov
ins
stos
pop
push
or
sub
sub
jnp
sbb
(bad)
jmp
mov
daa
(bad)
rol
xchg
xchg
call
test
xchg
and
(bad)
pop
out
push
retf
adc
fld
popf
adc
pop
dec
inc
inc
pushf
jno
popf
jo
cdq
sbb
jp
addr16
or
shl
retf
cmc
push
repz
xchg
sub
sti
repnz
in
clc
dec
cmp
jno
push
jmp
or
xor
scas
xchg
pop
pop
sti
mov
lods
int3
repz
pop
stos
test
shr
xor
jno
inc
xchg
pop
call
mov
je
sbb
inc
cld
mov
jbe
enter
sbb
sbb
pop
mov
out
call
dec
push
test
jmp
stos
mov
scas
mov
add
cmps
pop
call
add
cdq
lds
out
xchg
fs
cs
test
push
sbb
cmp
xor
adc
daa
mov
mov
dec
sbb
(bad)
(bad)
mov
sar
(bad)
cld
jmp
jae
push
mov
repz
jge
(bad)
shr
sub
mov
add
xor
mov
xor
ror
cmp
cmp
stos
imul
inc
jmp
xchg
inc
(bad)
(bad)
fidivr
sub
popa
and
ins
test
jmp
xor
push
xchg
pop
fstp
cli
test
aam
pop
mov
mov
pop
and
repz
jge
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
pop
rol
in
pop
test
or
imul
add
pop
pop
mov
mov
inc
retf
pop
cli
in
loopne
jecxz
scas
and
jle
mov
and
loop
mov
call
mov
movs
sub
mov
cmps
cwde
icebp
inc
neg
(bad)
mov
jg
leave
sub
in
mov
mov
add
iret
cmc
hlt
mov
pop
in
rcl
xchg
gs
xor
dec
adc
out
mul
daa
adc
icebp
pop
fdivrp
mov
mov
push
sbb
es
sub
mov
shl
sbb
(bad)
enter
add
or
xlat
rol
jge
xor
rcl
and
pushf
aaa
mov
iret
je
(bad)
pop
lods
or
sub
sbb
jle
outs
inc
dec
hlt
push
out
cmp
ss
xor
into
dec
xchg
pop
dec
adc
fstp
clc
dec
(bad)
adc
xor
sub
xlat
inc
dec
lods
dec
std
dec
aam
dec
inc
mov
and
add
or
xor
add
cmps
sbb
test
mov
jg
sub
test
fisttp
int
pop
shl
xlat
xor
cmp
push
mov
shr
jo
jecxz
add
rcl
(bad)
mov
mov
push
adc
and
xchg
push
call
repz
mov
cmp
lods
stos
neg
jnp
ja
pop
inc
inc
fs
pop
pushf
std
mov
xor
dec
aas
cmp
and
inc
add
es
inc
xchg
sub
mov
mov
(bad)
fst
call
mov
cmp
sub
inc
xchg
int3
jne
(bad)
aam
popf
dec
icebp
scas
adc
shr
inc
lods
sbb
adc
dec
mov
out
into
and
sub
popa
mov
xchg
sbb
xor
jae
jns
dec
jb
adc
xchg
jmp
fadd
add
fimul
outs
jnp
lahf
push
bsr
popa
bnd
push
add
int
inc
(bad)
loope
jmp
pop
jecxz
in
int
mov
cs
jge
stos
dec
call
push
pop
test
aam
mov
test
ins
xchg
add
std
jge
mov
fcom
push
and
into
in
cwde
mov
cmc
aam
stos
sbb
mov
pop
xor
xchg
jmp
mov
addr16
(bad)
cmp
sbb
fnsave
pusha
test
cmps
in
in
pushf
test
add
into
aaa
sbb
ins
dec
jge
pop
(bad)
out
fst
pop
push
xor
add
addr16
push
bound
fisubr
retf
xchg
data16
sbb
or
int3
xchg
fidivr
xchg
ds
jnp
or
push
stc
sbb
rol
push
jle
cmp
cwde
and
cld
push
pop
adc
gs
enter
jnp
cmp
adc
sbb
fldenv
lahf
stos
push
popf
fucomip
pushf
(bad)
and
inc
pop
xor
cmps
sub
mov
jmp
je
push
stc
dec
shr
ss
test
dec
pop
repz
push
ja
dec
or
push
js
sub
icebp
pop
sar
sub
adc
sub
retf
repnz
add
mov
gs
mov
and
inc
aad
into
das
pop
jbe
ja
outs
loop
push
mov
cmp
cmp
adc
cmps
mov
ins
sbb
pop
fsin
je
aas
fcomp
cmps
inc
in
mov
out
xchg
push
aaa
les
pop
mov
or
popa
test
dec
adc
dec
test
push
aam
mov
jae
push
cmp
mov
pop
adc
call
jnp
loop
mov
ret
jb
sahf
xor
lock
inc
add
clc
fs
xadd
cmps
(bad)
sbb
test
dec
out
mov
(bad)
lods
sub
adc
cmp
loopne
mov
arpl
dec
add
sub
pop
pop
xchg
inc
xor
jp
retf
call
sub
and
out
lock
pop
cmc
hlt
mov
push
adc
(bad)
lods
sub
cdq
lods
lods
jg
jp
(bad)
call
cli
rol
jns
mov
push
sub
(bad)
or
lods
adc
add
rcl
(bad)
mov
jo
ins
cmp
mov
and
adc
int
into
cmp
lock
xchg
loop
fs
pop
mov
fiadd
jg
dec
jg
shl
pop
(bad)
xchg
inc
mov
add
sbb
outs
popf
mov
sbb
and
dec
cmp
sbb
int
and
add
js
push
dec
sub
adc
mov
lods
int
xchg
aas
push
cmp
push
ds
jmp
cmps
outs
leave
sbb
inc
fidivr
adc
xchg
out
add
cmovo
pop
cmps
push
rcr
jbe
mov
and
push
pop
lods
mov
inc
in
cmp
and
ins
xor
lods
fdiv
xchg
mov
cmp
shl
jno
dec
icebp
out
mov
pop
push
popf
lods
sub
imul
pop
add
add
and
xor
loop
sahf
jp
and
jle
out
rcl
cld
mov
sub
data16
mov
jmp
rcl
inc
add
lock
xchg
ret
pop
ja
shr
adc
sti
pop
lds
es
(bad)
call
pushf
and
add
mov
cwde
mov
loop
xor
cld
and
test
mov
aas
jle
ds
and
jecxz
push
in
jbe
call
enter
mov
sub
icebp
cmp
sbb
retf
sub
add
dec
int
mov
inc
adc
ds
ds
push
cmp
out
add
xchg
push
pusha
dec
mov
loope
cmp
cmc
push
mov
popf
jns
test
daa
call
mov
or
and
les
and
popa
mov
mov
sub
sbb
jle
retf
jno
pop
inc
xor
or
fnsave
into
sbb
pop
pop
push
inc
and
inc
mov
inc
xchg
nop
xchg
fistp
sbb
(bad)
xor
sahf
ds
sbb
adc
cli
scas
(bad)
lea
push
es
add
loope
in
xor
dec
jne
jns
sbb
out
lods
xchg
cmps
les
inc
popf
fdiv
retf
(bad)
add
mov
xchg
in
mov
(bad)
adc
push
push
in
xor
imul
popa
fisubr
dec
enter
inc
loopne
sub
xchg
sub
cmp
(bad)
into
pop
outs
push
daa
(bad)
ja
fbstp
sbb
sti
lock
jns
mov
ins
push
inc
pop
adc
mov
jb
jns
mov
sub
mov
sub
cmp
cmp
(bad)
inc
ins
mov
lea
ret
add
rcr
jg
test
pushf
stos
test
add
dec
cmp
xchg
mov
jg
inc
and
push
fiadd
imul
xchg
nop
inc
sub
in
jne
mov
xor
push
(bad)
adc
adc
shl
push
test
mov
(bad)
js
outs
sub
mov
and
push
test
iret
mov
retf
lahf
repz
popa
addr16
jmp
and
call
cmp
adc
jg
shl
sar
lahf
and
les
inc
pop
inc
cli
add
xchg
std
lock
push
sub
jbe
inc
push
mov
or
shl
push
pop
out
adc
sbb
cmps
cmp
jne
fnstcw
out
sbb
inc
add
pop
pop
jmp
jae
pop
ins
dec
les
lods
ret
add
inc
xchg
call
jne
into
(bad)
mov
dec
xchg
mov
fs
xor
inc
cld
arpl
mov
mov
inc
mov
dec
and
pop
lea
sti
mov
out
in
pusha
(bad)
push
xchg
outs
jle
pop
and
icebp
cmp
in
mov
push
outs
push
mov
mov
(bad)
out
sbb
mov
adc
loop
dec
mov
mov
dec
jns
jne
fstp
cmp
cmp
cli
xor
mov
gs
enter
rol
fwait
xchg
pop
or
and
mov
sbb
test
xchg
pusha
aas
inc
nop
scas
xchg
sti
cld
push
sahf
and
dec
inc
mov
ss
ins
sbb
daa
and
mov
fdivr
inc
push
adc
in
into
repz
xchg
push
scas
or
pop
xchg
into
js
xor
cmps
xchg
call
(bad)
or
movs
pusha
arpl
mov
sbb
fcom
cwde
mov
lea
mov
or
push
mov
pop
or
pop
mov
cmp
jnp
outs
in
pop
test
aam
les
ja
iret
pop
stos
xor
xchg
popa
imul
push
daa
clc
adc
push
inc
mov
add
mov
or
outs
and
aaa
xchg
es
xchg
and
les
and
and
mov
add
movs
add
mov
or
mov
ret
or
iret
cmp
or
ss
cmps
mov
cld
jmp
sub
lods
aas
jbe
inc
mov
dec
fisttp
or
or
aad
xchg
inc
jg
sar
jl
scas
inc
leave
inc
push
mov
lods
(bad)
dec
cs
fs
adc
sub
sbb
mov
imul
cwde
cmp
fs
dec
bound
xchg
test
add
dec
push
inc
inc
push
in
cmp
mov
or
out
jmp
jno
loop
mov
popf
test
push
push
and
(bad)
ror
jmp
sti
dec
jp
stos
shl
cmp
sub
test
les
push
jo
mov
daa
dec
(bad)
seto
loope
leave
push
sti
mov
pop
xchg
cli
jo
icebp
jmp
mov
imul
retf
ins
and
jns
lods
sub
xchg
mov
xor
aaa
(bad)
inc
sbb
and
jmp
jns
imul
mov
xchg
add
outs
jnp
in
sub
lock
cmp
lods
lods
js
out
add
dec
inc
fdivr
cli
cdq
sar
test
mov
pusha
stos
pop
add
mov
div
and
je
into
inc
bound
fucomip
scas
dec
push
push
stos
jns
std
jp
je
pop
(bad)
dec
and
adc
or
xor
mov
hlt
mov
pop
lahf
hlt
(bad)
jne
inc
das
rol
mov
or
mov
scas
lods
gs
mov
dec
nop
jnp
js
(bad)
add
xchg
lods
repz
(bad)
and
test
jne
pushf
jecxz
adc
test
adc
(bad)
imul
add
xchg
pop
inc
jbe
dec
push
outs
pop
ret
mov
cmp
ror
pop
lds
retf
push
cmp
pop
dec
push
retf
fnstenv
mov
fbld
mov
push
imul
xchg
cmp
jno
push
bound
stos
movs
sub
adc
arpl
mov
push
mov
add
sub
nop
bound
ficom
mov
add
ins
popf
add
cs
mov
mov
lea
jbe
inc
jg
jecxz
push
sahf
mov
add
stos
std
cld
outs
mov
fsubr
dec
fst
in
les
inc
add
leave
dec
outs
loopne
sbb
cwde
cli
cmp
ja
add
cwde
adc
sbb
aam
cdq
xchg
dec
jnp
mov
dec
pop
push
rep
repnz
lods
pop
fild
shl
inc
stos
push
mov
dec
js
mul
cdq
add
inc
or
xchg
aad
cs
(bad)
dec
fnstenv
outs
es
jo
push
daa
jb
scas
sbb
and
push
pop
test
sbb
int
jno
loopne
sub
sub
ja
inc
mov
xchg
sub
and
and
ror
pushf
fwait
mov
ss
and
adc
and
push
cmp
push
cmp
add
sbb
mov
das
cmp
jp
dec
mov
repnz
mov
fsub
leave
sar
inc
mov
mov
pop
in
fdivr
dec
mov
push
mov
add
cld
jecxz
pop
push
ret
mov
xchg
inc
shl
scas
in
pop
push
retf
outs
adc
ss
in
lahf
pop
mov
adc
pop
push
lds
inc
fcomp
dec
pushf
mov
into
inc
sub
sub
push
mov
retf
retf
test
mul
add
pop
clc
dec
xchg
xlat
mov
dec
mov
nop
jno
fs
cmc
out
in
ret
stc
cmp
pop
imul
fcom
fldcw
adc
lods
or
repnz
inc
iret
mov
mov
movs
or
inc
dec
scas
jne
fwait
in
loopne
out
mov
push
cli
pop
mov
xchg
pcmpgtw
add
inc
mov
cs
mov
shl
out
mov
aaa
push
xchg
inc
in
pop
(bad)
call
mov
outs
adc
pop
add
push
inc
fadd
imul
bound
jecxz
hlt
loopne
sub
mov
idiv
call
ins
sbb
fcom
mov
ins
pop
sahf
or
call
std
inc
xchg
fucomi
dec
arpl
push
pop
and
cwde
popf
int
pop
in
fcomi
ja
jmp
icebp
sub
dec
push
cmps
repz
inc
jno
cld
inc
pop
jns
enter
retf
in
test
popa
xchg
ret
callw
lods
imul
outs
mov
in
sub
test
rcr
pop
cld
jge
jmp
lahf
loope
cdq
imul
jl
jbe
ds
xor
cmp
aad
mov
xor
cmps
xor
xor
mov
cmp
test
sub
ja
lods
push
pminsw
inc
jmp
add
pop
data16
loopne
push
pop
mov
(bad)
data16
and
les
shl
fldcw
fs
add
icebp
dec
pop
mov
mov
aaa
jns
mov
pandn
hlt
aas
outs
add
fild
movs
loopne
sub
xor
clc
pop
jecxz
in
dec
pop
cmps
jns
or
pop
aas
in
and
iret
pop
and
fucomip
(bad)
lock
sub
ins
push
aad
in
push
adc
aaa
inc
ins
inc
(bad)
movs
fistp
xchg
mov
cli
ror
or
out
add
movs
dec
push
aas
popf
xlat
call
xchg
faddp
xchg
mov
push
jno
pop
sub
shl
cdq
mov
sub
cmp
or
lods
cdq
test
mov
mov
sti
inc
dec
(bad)
cmp
js
adc
xchg
iret
or
and
xor
pop
idiv
push
scas
test
ja
mov
push
or
ins
xchg
add
fdivr
mov
rep
ror
movs
stc
dec
imul
out
adc
fsubr
or
in
ins
sahf
out
cmp
push
xor
int3
xchg
add
cmps
aad
adc
ffreep
mov
call
cmp
jmp
jmp
fnsave
inc
test
retf
(bad)
out
xchg
aad
or
xlat
stos
push
fcom
mov
sbb
and
and
aas
std
xchg
sar
out
stos
or
push
pop
call
movs
pop
pop
lock
add
cmp
or
jecxz
ret
cmc
xchg
jg
jbe
sbb
mov
es
mov
xchg
movs
jmp
stos
xor
daa
and
adc
push
mov
mov
cs
or
xor
out
aaa
cdq
adc
inc
retf
das
inc
xchg
fmulp
push
fcomp
lock
fisttp
jmp
pusha
je
nop
fadd
inc
cmp
int
sbb
scas
mov
ds
add
jno
xor
repz
vzeroupper
xchg
adc
gs
rol
stos
or
adc
or
inc
shl
es
(bad)
cmc
(bad)
mov
sub
sbb
addr16
ds
lods
and
sbb
daa
bound
rcr
outs
lea
or
hlt
sub
sub
jp
or
mov
xor
imul
xor
out
and
pusha
sahf
cmps
repnz
dec
retf
loopne
cmp
retf
fcmovne
mov
mov
js
in
(bad)
retf
dec
cmp
mov
in
and
cmp
inc
and
inc
push
fld
fsubr
push
jno
loopne
pop
aas
pusha
mov
and
inc
pushf
fadd
mov
les
fisttp
sub
or
sub
pop
cmc
mov
jae
not
fbld
(bad)
fs
(bad)
outs
fcomp
jbe
cmp
sub
jge
sub
add
out
ins
iret
or
rol
dec
adc
rcl
repnz
ja
jge
std
test
jns
mov
outs
pusha
not
data16
ins
inc
je
mov
test
and
les
pop
add
fcomp
xor
mov
mov
int3
dec
repnz
mov
push
push
lea
enter
push
fs
out
call
mov
std
inc
cdq
and
pop
mov
mov
stos
xor
pop
mov
jmp
mov
cs
mov
jl
pop
xor
fistp
push
retf
stos
aas
cdq
pop
or
leave
pop
ret
dec
fmul
cmp
iret
cmp
add
outs
push
pop
scas
inc
faddp
sub
ja
popa
in
sub
scas
adc
jge
int
in
mov
pop
add
pop
test
jbe
push
mov
int3
jo
push
xchg
rcr
dec
cmp
fcom
mov
inc
pop
mov
push
push
mov
push
scas
(bad)
leave
pushf
add
pop
outs
imul
cmps
adc
add
ret
cdq
dec
ins
lock
imul
cmps
scas
dec
fiadd
push
adc
or
aas
mov
gs
and
pop
sub
outs
stos
(bad)
mov
mov
daa
hlt
(bad)
mov
in
add
cli
enter
clc
mov
add
subps
ror
adc
sti
aaa
xor
push
and
add
mov
xchg
xchg
int3
pop
inc
outs
jecxz
mov
outs
jnp
or
mov
inc
int
sub
sti
mov
fld
jge
add
xor
cs
gs
mov
fdivr
fistp
aas
jmp
adc
shl
call
and
or
and
loop
repnz
pop
mov
shl
icebp
jg
cmp
out
fdiv
fucomi
cwde
xor
dec
sub
test
retf
cmp
ja
out
outs
out
push
xor
popf
jmp
sub
scas
fild
cmps
aas
mov
nop
mov
and
jmp
(bad)
xor
sub
retf
xor
mov
cmp
dec
sub
pop
and
gs
js
jne
rcr
inc
pop
cdq
out
arpl
repnz
or
es
inc
inc
and
leave
jp
dec
stc
inc
leave
and
(bad)
mov
sbb
push
add
sub
adc
icebp
cmp
jns
pop
(bad)
fisttp
lahf
or
inc
fcom
cld
mov
out
push
call
popa
sub
dec
test
jmp
add
mov
dec
mov
ja
or
arpl
jbe
js
cld
mov
fld1
fnstcw
iret
pop
fistp
xchg
add
xchg
add
shl
loop
adc
das
jbe
aad
and
ret
jle
les
sahf
in
inc
fbstp
es
maskmovq
idiv
xor
in
popf
in
out
les
sbb
out
iret
ss
jns
jmp
jle
test
inc
ficom
sti
pop
pop
add
sub
(bad)
pop
mov
aam
popf
mov
(bad)
retf
dec
adc
imul
mov
fs
loope
aad
and
lea
or
sub
xchg
rcl
mov
outs
inc
adc
test
push
cmp
icebp
leave
retf
push
jmp
inc
jne
retf
dec
mov
out
je
push
cld
repnz
add
stc
not
mov
aad
mov
inc
in
pusha
dec
in
loope
shl
fnstenv
push
loope
movs
jo
push
mov
in
test
in
stos
pop
and
inc
ins
jmp
push
xchg
xchg
or
push
repz
mov
ds
mov
mov
push
jmp
nop
mov
mov
das
inc
jl
outs
pop
dec
jg
push
test
inc
cmp
mov
add
sbb
aad
add
mov
adc
lahf
xchg
or
es
jmp
cmp
jae
stc
push
mov
mov
cmp
(bad)
cld
cmps
mov
frstor
cmp
mov
jmp
outs
inc
push
shl
mov
or
scas
sbb
cmp
sub
xchg
into
rdmsr
push
repnz
hlt
sub
enter
das
xor
and
je
call
lahf
cmp
sub
inc
ins
sbb
add
or
xchg
lds
dec
mov
mov
push
scas
(bad)
div
(bad)
out
scas
mov
repz
call
xor
fstp
imul
inc
(bad)
retf
mov
(bad)
fidivr
daa
push
adc
xchg
into
nop
dec
inc
(bad)
loope
jl
neg
mov
dec
retf
inc
xchg
call
pusha
ss
(bad)
les
call
jmp
gs
xor
nop
or
mov
pop
aas
jns
scas
mov
sbb
outs
cmp
xor
mov
jge
jbe
imul
in
inc
into
ins
dec
xchg
fdiv
in
inc
ins
jecxz
adc
mov
ret
push
push
xchg
and
jne
inc
and
(bad)
out
and
push
inc
int3
leave
test
cwde
mov
pop
in
mov
xor
xchg
mov
js
mov
ds
sahf
inc
shr
(bad)
jno
dec
pop
add
rcr
mov
xor
lock
pusha
add
mov
add
jmp
pop
int3
sbb
push
shl
inc
addr16
sti
xor
(bad)
out
xchg
or
pop
add
sub
mov
xchg
dec
retf
(bad)
in
mov
jle
mov
aad
xchg
test
push
loopne
fmul
(bad)
stc
ds
rcl
test
addr16
mov
js
ins
push
data16
mov
xchg
and
inc
mov
xor
or
out
xor
pop
or
push
pop
add
(bad)
in
add
mov
xchg
and
push
and
fiadd
cld
mov
rcr
pop
pop
or
xchg
pop
je
jbe
ds
out
mov
ss
test
rcr
fist
mov
mov
test
cmp
sub
retf
call
retf
movs
xchg
pusha
and
xchg
push
js
cmps
fs
je
dec
add
mov
fisub
fcmovne
add
pop
xchg
daa
pop
pxor
and
sbb
popa
ds
jl
ror
sbb
jmp
int3
adc
ins
ins
fwait
adc
sub
sub
xchg
jne
xchg
hlt
jp
jno
xchg
adc
(bad)
imul
mov
sub
push
leave
rcr
clc
adc
int3
xchg
(bad)
adc
dec
dec
retf
fld
iret
cli
(bad)
leave
fiadd
cli
jge
aam
push
fmul
adc
mov
mov
sub
(bad)
mov
or
pop
xlat
pushf
jp
xchg
arpl
in
pop
cs
fninit
sub
movs
jl
(bad)
repz
mov
cld
js
mov
xchg
push
jne
loope
test
add
add
fxch
add
jmp
aaa
lahf
aaa
add
cmp
xor
or
les
icebp
jle
inc
dec
test
jbe
rcr
sub
div
and
clc
test
out
cmp
or
enter
lock
mov
cld
repz
push
arpl
rcl
nop
add
bound
dec
add
or
jb
cdq
aad
push
mov
pop
and
(bad)
cmp
repnz
jl
add
loop
in
jmp
adc
mov
dec
cmc
hlt
retf
inc
jae
popa
cs
jp
mov
mov
mov
mov
mov
sub
mov
aaa
sti
je
les
push
dec
stos
pop
mov
mov
(bad)
fld
mov
stos
mov
add
inc
icebp
(bad)
lahf
dec
cmp
mov
fistp
adc
enter
pusha
hlt
popa
shl
adc
ret
push
mov
mov
mov
xor
jbe
(bad)
dec
adc
push
pop
(bad)
jle
shl
bound
ror
pop
fdivr
cwde
push
fild
jecxz
mov
dec
inc
iret
rcl
push
test
leave
mov
jbe
(bad)
xchg
mov
mov
mul
jp
fucomi
inc
pop
or
xchg
(bad)
dec
adc
imul
xchg
inc
cwde
scas
out
xor
aam
add
adc
mov
les
aaa
jnp
sbb
mov
cmp
inc
push
movs
adc
adc
iret
dec
xor
bound
pop
push
jnp
outs
push
mov
ja
push
cmp
enter
in
pop
rol
dec
lahf
sbb
push
mov
add
xchg
add
fcomp
in
mov
add
or
aam
fdivr
iret
add
enter
dec
jp
jg
jmp
jg
das
ins
sbb
fiadd
sub
mov
pop
mov
lods
in
nop
lods
nop
jmp
add
xor
sbb
into
adc
pushf
mov
inc
cmp
xor
enter
or
repnz
mov
es
push
mov
gs
jp
cld
xor
jle
push
dec
dec
sub
popf
sub
in
push
or
dec
xor
nop
mov
mov
mov
jl
rcr
jg
pop
pop
xor
scas
lock
fistp
push
lea
jmp
dec
mov
jae
enter
pop
scas
dec
neg
add
jmp
add
jecxz
pusha
inc
mov
neg
loopne
imul
ins
xchg
or
inc
dec
xor
clc
jae
inc
pop
ja
mov
call
data16
nop
sbb
and
loope
bound
retf
inc
imul
xor
imul
xor
mov
add
mov
nop
pop
aam
int
push
push
dec
mov
ds
pushf
or
fidivr
pushf
add
cmps
mov
ror
mov
psubb
mov
fs
aad
out
mov
mov
adc
and
and
lock
xchg
shr
out
add
pop
mov
dec
xor
jg
out
xor
jb
add
call
(bad)
fadd
jg
adc
ror
in
mov
dec
xor
arpl
mov
call
jno
cmps
mov
std
bound
popf
jl
hlt
cmp
test
mov
out
ins
cld
(bad)
jge
jle
push
or
pusha
mov
or
vmovss
adc
rep
add
sbb
test
dec
lods
add
pushf
xchg
retf
in
xchg
test
test
mov
fsub
add
pop
inc
xor
aad
sub
(bad)
fwait
dec
adc
scas
or
pop
sub
lea
push
sahf
in
and
cmp
into
push
dec
mov
(bad)
and
push
add
xchg
pop
jnp
mov
test
stos
je
dec
sbb
jb
xchg
(bad)
ins
jg
hlt
sbb
xchg
mov
arpl
rol
lock
shr
and
or
mov
xchg
push
std
xchg
mov
(bad)
fiadd
sbb
dec
jbe
icebp
xchg
xchg
jge
xor
xchg
mov
ss
mov
jl
popa
or
mov
add
jne
or
cwde
xchg
mov
mov
or
jae
sbb
and
adc
stos
push
xchg
dec
add
xchg
pop
cdq
cmp
js
psubb
mov
dec
push
call
cmp
pop
fist
sti
(bad)
mov
push
inc
cmp
xchg
js
and
aas
dec
dec
adc
iret
jno
sahf
inc
mov
jo
popf
repz
sbb
daa
cmp
add
add
xor
pop
and
or
pop
push
pop
mov
aaa
mov
xor
rcl
cwde
mov
mov
jnp
cs
mov
inc
inc
and
pop
sub
push
pop
sahf
sahf
push
(bad)
push
push
sahf
out
(bad)
jb
mov
cwde
push
(bad)
hlt
push
cmp
stos
jno
(bad)
add
and
and
gs
fcom
rcl
mov
jg
ficomp
lods
lds
hlt
dec
rcr
mov
cwde
mov
icebp
gs
repnz
dec
sbb
int
and
push
lds
cmp
xchg
push
push
shl
ins
movs
or
pusha
xor
sub
int
xlat
mov
jb
loop
es
xchg
retf
mov
push
xchg
dec
movhps
cwde
push
mov
add
stc
sbb
ret
cmp
mov
ins
rcr
pop
jne
retf
aaa
pop
jns
dec
popf
cmp
jl
lods
call
mov
mov
xchg
inc
pop
mov
ins
add
gs
sub
or
leave
xor
gs
cdq
out
xor
dec
std
sbb
ds
mov
mov
push
mov
push
popa
dec
cmps
ins
cwde
arpl
nop
or
or
js
cmps
imul
test
jecxz
or
imul
jp
ss
mov
adc
mov
dec
fdivr
int3
je
(bad)
inc
xor
mov
xor
add
div
movs
cmc
jb
push
div
jecxz
mov
test
cli
in
scas
pop
adc
je
sbb
mov
pop
aas
(bad)
and
in
jo
test
push
inc
je
pop
add
add
push
dec
adc
jns
adc
adc
dec
lea
xchg
sbb
add
dec
jge
fmul
add
adc
add
pop
icebp
data16
cmc
lds
or
movs
mov
rcl
lock
lahf
sub
sbb
cwde
cmp
jge
sbb
pusha
mov
int
in
push
call
outs
inc
loope
cmp
inc
cmps
movs
mov
sub
stc
adc
ins
aaa
dec
sbb
pop
inc
addr16
and
sub
cmp
mul
out
or
push
sahf
mov
pushf
or
imul
inc
or
sbb
cmp
add
add
js
sahf
push
xchg
clc
xor
cli
ror
jns
ficom
fistp
dec
fwait
cmp
adc
rcr
inc
jmp
pop
xor
jecxz
data16
mov
out
retf
dec
add
shl
adc
cld
scas
call
or
xchg
div
in
mov
fwait
repnz
stos
cmp
addr16
adc
stos
ss
scas
pop
scas
cwde
pop
call
shl
sti
pop
psubusb
cmp
jno
pop
into
les
aam
retf
cmp
push
into
ins
adc
(bad)
adc
add
mov
and
inc
push
push
xchg
sub
or
ss
xchg
mov
fst
lock
cmps
fimul
mov
pop
test
das
int3
imul
js
iret
xchg
retf
pop
cs
test
aas
movs
enter
loopne
in
hlt
ds
add
jbe
pop
jmp
jne
cmp
cmp
xchg
mov
push
cmp
je
xlat
push
pop
adc
int
pop
and
pop
mov
jl
sbb
(bad)
push
mov
mov
pop
sbb
clc
push
call
(bad)
int
xchg
div
fs
inc
jp
pop
sub
ret
(bad)
not
add
push
fistp
fild
fs
ficomp
jnp
pop
scas
sbb
cmp
imul
xor
sar
or
xor
mov
scas
out
cmp
jmp
sti
xor
xlat
add
add
shl
add
in
popa
push
imul
push
lds
mov
pop
mov
mov
sub
in
jno
push
movs
out
mov
dec
sbb
or
sahf
loope
out
lds
fwait
cli
inc
shr
in
fdivr
es
push
mov
xor
xchg
sbb
xor
call
call
mov
add
push
sub
std
in
out
cmp
dec
adc
ins
(bad)
(bad)
adc
inc
bound
lods
dec
mov
es
jmp
adc
cmps
stc
cwde
out
push
stos
inc
xor
mov
test
push
and
pshufw
cmps
(bad)
jbe
call
add
iret
shl
and
sbb
push
pop
loop
fsub
add
fist
or
cli
ja
gs
int3
push
in
shl
or
aaa
ret
ins
mov
push
js
push
xor
int3
lods
test
pushf
scas
pop
neg
mov
adc
push
mov
adc
fwait
push
jns
adc
add
add
jno
ret
es
inc
or
xor
and
mov
nop
mov
pop
gs
int3
nop
shr
addr16
sahf
adc
and
cmp
sub
mov
pop
cli
fnstenv
mov
mov
out
ret
out
test
cmp
pop
sub
or
repnz
cmp
fstp
mov
loope
(bad)
scas
push
xchg
push
aaa
dec
fs
mov
jmp
rcl
out
fst
and
ss
pusha
jb
xor
inc
test
clc
ret
ds
xchg
iret
jmp
inc
(bad)
and
out
push
jl
pop
mov
dec
dec
mov
jmp
or
shl
pop
push
mov
mov
mov
sbb
mov
outs
jp
loopne
inc
in
sti
mov
adc
ja
mov
leave
cwde
call
ins
or
fnstcw
pop
test
mov
call
xor
mov
mov
mov
xchg
jbe
cmp
fmul
mov
sub
data16
mov
xchg
mov
adc
mov
ins
cli
dec
mov
cli
add
xor
and
cmp
jmp
xchg
imul
add
mov
inc
mov
sub
in
xor
movs
ja
pop
outs
pop
rcr
mov
push
or
mov
rol
pop
test
push
int
imul
imul
retf
adc
shl
sahf
push
shr
sbb
fstp
test
jno
lds
fld
cwde
fld
cwde
cmp
lods
stc
into
in
iret
enter
or
mov
pop
das
(bad)
ja
in
icebp
mov
dec
popf
sbb
lods
cmp
loop
cmp
popa
push
dec
mov
xchg
aam
or
xlat
xor
lahf
ins
mov
lods
jg
xor
(bad)
(bad)
jle
lahf
or
mov
pop
or
fdiv
add
scas
movs
and
fmul
sbb
sahf
sbb
jo
ficom
cmps
add
adc
ins
push
lea
adc
adc
iret
out
test
push
pop
idiv
pushf
mov
sbb
push
and
arpl
les
xor
pop
shl
imul
push
stc
jp
scas
mov
ror
lock
cli
sub
jb
sub
dec
dec
aam
in
adc
adc
ret
add
mov
pop
popa
mul
or
mov
or
inc
push
push
aad
pop
xchg
mov
inc
hlt
push
or
cmc
dec
aad
add
rcl
push
fdivr
add
xchg
mov
test
jmp
sar
push
push
cmps
and
pop
outs
push
stc
dec
jnp
cs
jmp
aaa
mov
jecxz
fmul
jo
adc
(bad)
jb
inc
adc
ins
or
adc
pusha
outs
stos
int
call
adc
or
sub
nop
xchg
adc
cmp
pop
aas
mov
xor
dec
out
cmp
mov
xor
adc
in
jmp
clc
and
cmp
mov
sbb
sbb
push
stos
fadd
out
add
cmp
cdq
mov
cld
mov
outs
pop
sbb
cli
stos
xor
cld
xchg
mov
not
and
xor
fisubr
add
sti
fs
push
nop
adc
sbb
xchg
mov
xchg
and
or
andnps
pop
push
fwait
xor
arpl
mov
aaa
lods
add
retf
sub
fwait
pop
mov
dec
in
cmp
adc
test
adc
movs
inc
addr16
cmp
loopne
call
aas
pop
popf
adc
pop
and
adc
pop
movs
jno
sbb
gs
inc
cmp
cmc
mov
add
test
pop
dec
mov
or
cmp
mov
jecxz
sbb
sub
xor
ror
sti
mov
pop
mov
movs
frstor
nop
hlt
sti
leave
inc
add
sub
sub
xchg
xchg
pushf
bound
pop
bound
hlt
or
mov
out
(bad)
inc
(bad)
ds
cld
rcl
mov
push
push
sub
mov
out
push
or
and
cmp
xor
idiv
dec
dec
gs
mov
scas
cmp
repz
push
cs
out
fcomp
mov
add
cmp
sbb
sub
fs
jbe
add
stos
gs
cmp
cmc
ret
pop
pinsrw
mov
pop
mov
inc
dec
xor
aad
call
and
xor
and
inc
mov
clc
or
pop
dec
jnp
jmp
int
or
cdq
push
call
mov
and
test
inc
or
test
push
jl
movs
mov
pop
jl
ret
nop
es
enter
cli
pop
js
xchg
std
hlt
pop
xchg
bound
into
jbe
mov
cmp
sbb
jno
adc
add
xor
jge
(bad)
fstp
scas
mov
or
inc
in
push
pop
jo
jge
bnd
mov
mov
push
sub
in
sbb
sbb
xchg
adc
adc
scas
cmp
or
aas
lods
movs
inc
scas
ja
jmp
dec
lds
inc
mov
sahf
nop
(bad)
ror
call
mov
adc
nop
sub
cli
lock
call
inc
das
(bad)
cli
add
int3
fidivr
outs
or
jmp
adc
test
or
xchg
mov
clc
scas
das
mov
sbb
cmp
jb
or
loope
lods
mov
out
in
xor
daa
call
cmp
or
mov
fs
popa
fisub
dec
leave
sbb
test
fprem
add
fs
add
ins
nop
cmp
jl
sbb
sar
xor
dec
test
mov
loope
cdq
jmp
mov
jnp
js
cs
das
push
mov
mov
xchg
fsubp
les
lds
xor
jl
dec
jle
sbb
in
dec
cmps
and
inc
mov
mov
dec
sar
mov
fs
scas
cld
je
jmp
ret
mov
aas
jb
sbb
cmps
mov
ja
pop
jp
mov
xor
test
adc
ret
or
or
cli
and
test
repnz
push
dec
in
retf
sbb
into
out
mov
les
push
cmp
fwait
pop
je
dec
jns
and
xchg
cmps
or
lds
int
xor
jo
mov
call
popa
mov
cmc
icebp
retf
stos
jb
xor
dec
xchg
push
or
sub
ins
repz
dec
jns
dec
jnp
adc
xchg
dec
push
adc
loopne
imul
or
cmp
int
and
fimul
stos
fst
fs
call
lahf
or
inc
imul
stos
xchg
imul
push
nop
jmp
mov
scas
pop
push
in
bound
pop
lods
sahf
test
dec
xlat
mov
mov
cli
xor
push
ss
lods
inc
lds
lds
mov
aam
jmp
add
int
out
sub
(bad)
add
push
inc
(bad)
gs
jns
push
(bad)
push
into
mov
ins
sbb
in
loop
jmp
clc
cld
add
xchg
adc
push
mov
into
ffreep
sar
adc
or
pop
(bad)
js
ss
sub
pop
(bad)
aaa
inc
out
cwde
lahf
iret
retf
into
add
xchg
fchs
pop
pop
(bad)
fbld
vunpckhps
sub
jae
mov
pop
mov
pop
ret
rcr
sbb
mov
in
inc
loop
retf
cmps
cmps
(bad)
popa
jmp
fs
cmp
loopne
pop
adc
push
push
xor
mov
inc
or
imul
sub
sbb
pop
pop
mov
inc
lock
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
sub
add
and
xchg
ds
inc
adc
and
popf
inc
mov
xor
push
ret
cdq
add
pushf
mov
imul
ficom
or
or
je
jmp
push
jge
push
fsubr
fcmovnb
xor
movs
shl
test
lock
cmp
or
xlat
(bad)
xchg
sub
fcom
jmp
dec
std
aam
pushf
sbb
retf
sbb
loopne
stos
xor
imul
jmp
sbb
lock
in
pop
out
mov
cmc
push
int3
ret
repz
rol
xchg
popa
jg
movs
in
push
or
in
sub
push
xchg
scas
push
lods
call
jmp
jge
hlt
idiv
mov
and
jno
mov
inc
popa
jns
ins
fwait
cmc
ret
xchg
xchg
imul
sub
hlt
pop
shl
sar
mov
vpcomuq
mov
daa
shl
push
mov
enter
out
fs
sbb
pop
mov
push
popf
popf
lahf
std
push
pop
repz
and
jmp
jo
int
sub
sbb
int3
and
es
sub
int3
xor
push
and
test
inc
mov
dec
push
add
mov
ja
and
xchg
dec
icebp
bound
bound
rol
pop
out
and
arpl
loopne
push
mov
pop
xor
add
(bad)
lock
jge
xchg
retf
xchg
push
or
mov
pop
cli
xor
dec
in
neg
push
daa
sbb
xor
xchg
rcr
push
outs
gs
test
and
push
mov
mov
jae
mov
pop
sar
aad
or
ins
jne
jge
(bad)
sbb
call
cmps
mov
sbb
mov
jno
ret
pop
ins
jle
das
arpl
arpl
mov
xchg
mov
jb
aam
mov
dec
or
and
jmp
(bad)
jae
lds
arpl
xor
ins
mov
xor
hlt
fst
ficom
je
ror
pop
in
and
(bad)
movs
cmp
loope
lahf
aaa
ins
dec
ds
(bad)
les
cs
shl
sub
xor
out
stos
cli
jp
js
mov
daa
shl
mov
movs
sub
(bad)
les
not
or
(bad)
fidivr
adc
adc
jnp
les
popf
pushf
stos
das
iret
mov
mov
sbb
sub
in
or
loopne
push
cmp
data16
cmp
icebp
cmps
xlat
mov
mov
bswap
mov
ror
stos
mov
jnp
pop
loopne
shl
push
cwde
inc
mov
and
pop
pop
fs
ins
movd
pop
cmps
aad
aas
xchg
xor
and
inc
pop
bound
bound
ins
inc
xchg
jnp
sub
ins
enter
cs
pop
mov
and
add
lahf
inc
push
jle
gs
mov
jne
daa
jo
movs
jno
iret
scas
test
inc
lds
iret
stos
lods
ss
dec
nop
(bad)
fldenv
fcomp
add
inc
cmc
push
add
dec
mul
repz
std
pop
jno
loop
mov
xor
scas
inc
pop
push
dec
add
outs
pop
cli
mov
rcl
and
pop
cmp
call
daa
xchg
mov
je
std
xchg
dec
pop
fidiv
test
add
(bad)
dec
adc
(bad)
mov
or
mov
jecxz
lock
dec
retf
mov
call
xchg
popa
out
dec
lods
xchg
std
data16
pop
jbe
pop
mov
dec
pop
jne
sar
push
adc
popa
sub
packsswb
cmp
cdq
jg
jns
imul
loopne
pop
sbb
out
cmp
jo
xor
mov
pop
add
adc
not
inc
and
lods
inc
scas
cmp
fdiv
jle
(bad)
sti
lods
pop
stc
retf
push
and
inc
mov
das
int
jmp
in
add
cs
jno
rcr
fisubr
pop
neg
mov
int
xor
dec
fld
out
cmp
jmp
pop
lahf
or
lahf
inc
xor
inc
cmp
aam
mov
jmp
adc
imul
in
mov
xor
scas
sub
or
push
std
or
aas
arpl
or
jle
xchg
dec
ja
push
shld
xchg
loop
cmp
sub
add
inc
cmp
and
sbb
or
daa
test
sub
push
ds
sub
adc
aaa
xor
ficom
shl
pop
pop
mov
inc
call
data16
dec
fnstcw
rcr
push
enter
out
lock
scas
xor
ins
push
inc
jmp
cdq
mov
push
fidivr
hlt
sub
call
dec
mov
clc
sub
mov
movs
sbb
mov
enter
cmp
inc
sahf
sub
repz
push
js
loopne
je
or
mov
fldenv
loope
aad
xor
sbb
add
xor
pop
push
xchg
and
cmp
movs
daa
push
imul
jg
loop
(bad)
aad
bound
cs
imul
mov
mov
pop
arpl
mov
sub
add
mov
sub
das
mov
push
fldenv
and
add
int
lock
(bad)
stc
icebp
mov
push
js
fldcw
mov
jg
les
movs
or
or
(bad)
rcr
cmc
sti
and
imul
mov
out
enter
mov
xchg
movs
cmp
movs
test
xchg
and
dec
jns
mov
fild
retf
mov
dec
test
fcom
xchg
inc
fdiv
repz
clc
sbb
daa
mov
fcmovu
xor
mov
push
ins
jle
xor
std
push
mov
jg
add
in
sub
dec
push
and
out
aaa
pop
fldcw
addr16
scas
mov
jmp
mov
pop
mov
retf
jp
adc
ficomp
int3
stos
ror
xchg
push
lods
inc
pop
stos
jge
das
xor
sti
mov
cmp
inc
jo
adc
aam
mov
jno
jp
pop
icebp
scas
and
stc
and
sbb
inc
fdivr
mov
mov
or
das
xor
sbb
mov
sub
ret
add
cmp
js
mov
pusha
ja
pop
jg
mov
aas
mov
fbstp
mov
mov
xor
mov
adc
outs
sti
jne
pop
mov
jl
mov
scas
mov
or
nop
fstp
adc
or
rcl
out
dec
fsub
out
ins
retf
sbb
mov
jp
cdq
inc
icebp
xchg
push
es
lea
inc
cmp
fstp
mov
push
push
outs
icebp
and
lds
xchg
test
mov
jge
test
mov
stos
mov
add
test
sbb
and
add
cmp
jecxz
test
leave
stos
cmc
jo
jg
into
xor
clc
sbb
ja
in
icebp
and
leave
adc
mov
mov
push
add
lods
or
and
sti
cs
jge
sar
sbb
sub
stc
sti
es
ins
mov
mov
xchg
jp
push
mov
push
(bad)
loop
mov
push
call
jmp
and
cwde
dec
lods
icebp
fidivr
cdq
sub
sub
mov
xor
dec
xor
(bad)
cwde
pop
lods
lods
ret
rcr
cmp
fdivrp
hlt
lods
ins
xchg
jns
loope
mov
mov
std
aas
sbb
adc
(bad)
and
cmps
int
pushf
mov
push
cmp
nop
inc
push
add
mov
stos
pop
addr16
aas
add
bound
pop
jg
mov
sub
stos
leave
xchg
loopne
cmp
loop
int
in
dec
pop
inc
push
es
push
xor
je
les
push
repz
outs
mov
es
push
js
les
popa
js
cmp
lods
inc
or
fs
add
add
jl
gs
cli
jns
push
aad
repnz
mov
mov
sbb
aad
mov
fisttp
add
jl
out
mov
pop
xchg
and
stos
test
sub
jno
cmps
clc
xor
adc
add
js
enter
adc
jmp
and
mov
xor
push
xchg
daa
mov
bound
push
pop
movs
xchg
jmp
jg
std
and
test
stc
mov
or
dec
test
(bad)
fs
add
je
mov
and
mov
stos
push
push
and
not
and
sub
repz
sub
jae
stos
dec
shl
and
push
aam
das
(bad)
leave
je
xlat
mov
arpl
jmp
mov
jmp
adc
inc
pop
out
jge
int
aas
bound
lods
xchg
xchg
pop
cmp
test
xor
repnz
jmp
loope
sbb
sbb
or
add
bound
inc
imul
jg
gs
xor
xchg
sbb
xor
rcl
into
xor
enter
add
cmp
jae
lods
xor
shr
shl
jb
push
mov
sbb
mov
or
mov
push
dec
xchg
pop
aad
push
dec
fwait
mov
push
lahf
xor
cwde
add
fldenv
adc
lea
push
ins
iret
popfw
inc
sahf
hlt
mov
movs
jge
scas
gs
cmp
jmp
iret
push
test
outs
(bad)
call
das
ds
add
rol
lea
daa
stos
push
(bad)
xor
jmp
jae
mov
int
add
sbb
cmp
sub
add
sub
cmp
pop
and
in
and
pop
pop
xor
push
and
adc
xor
arpl
out
sub
movs
pushf
rcl
lock
(bad)
rcl
xor
push
into
call
add
mov
mov
mov
sub
jle
push
adc
jmp
jp
xchg
push
sub
mov
aad
mov
dec
repnz
pop
jecxz
out
mov
and
mov
popf
push
adc
mov
sub
mov
mov
pop
call
jge
add
fmul
sub
pop
cmps
inc
push
out
add
in
adc
aad
ret
mov
(bad)
jns
jo
xlat
dec
rcl
es
jecxz
sbb
wbinvd
mov
call
test
lods
fs
mov
scas
test
sbb
adc
or
dec
loop
fldenv
call
loop
push
int3
bound
adc
and
xchg
mov
int
iret
cmps
rol
push
lea
or
call
sub
xor
xor
cmp
xor
lods
dec
mov
push
xchg
jle
addr16
cmps
add
cmc
ficomp
aas
sbb
out
ins
jecxz
(bad)
mov
call
int3
int3
push
div
and
mov
push
pop
mov
(bad)
std
sub
jo
stos
push
mov
shl
gs
loop
pop
or
pop
or
xchg
pop
sub
push
movs
rcr
and
adc
jb
icebp
and
or
cmc
cld
jmp
clc
das
aaa
fucomi
je
stos
retf
mov
mov
call
js
je
mov
ror
ret
and
cmp
ret
scas
jl
(bad)
nop
or
add
adc
jb
add
xor
add
loopne
hlt
pop
mov
mov
ret
mov
jns
hlt
xor
sbb
adc
push
pushf
ins
cs
adc
lea
shl
cmp
je
cmp
mov
cmc
or
mov
dec
cmps
push
cs
fisub
sbb
lock
mov
pusha
aas
jge
addr16
pusha
ret
pop
cdq
mov
push
and
add
push
shl
mov
stos
imul
xchg
outs
mov
aad
je
jp
push
push
lods
lea
fdivr
into
sahf
jnp
lods
push
mov
dec
aas
retf
sbb
nop
shl
cli
jge
in
mov
nop
inc
push
adc
mov
mov
scas
call
xchg
int3
mov
sbb
cli
mov
xchg
jno
cmps
add
and
in
(bad)
js
push
push
cmps
loop
js
out
repnz
fisttp
daa
gs
xchg
pushf
sub
push
dec
mov
xchg
scas
sub
scas
stc
mov
lock
dec
mov
cmp
lods
stos
dec
push
sub
sub
pusha
mov
mov
repz
push
out
push
stos
cmp
adc
and
lods
or
pop
inc
lods
mov
jo
inc
call
in
push
mov
(bad)
repnz
pop
nop
or
ss
out
neg
or
jge
push
cmp
and
fwait
icebp
inc
(bad)
mov
pusha
js
mov
pop
and
push
shl
ins
enter
xchg
sbb
aad
pop
jne
dec
inc
out
jo
les
enter
test
repz
cmps
jo
aaa
mov
xchg
xor
fcmovnb
push
loop
imul
ins
imul
outs
xchg
cmps
or
add
out
and
mov
mov
das
retf
ins
sbb
mov
sbb
jns
and
push
inc
out
jns
mov
stos
dec
xchg
in
inc
jmp
sbb
add
je
xchg
push
mov
pop
or
adc
or
int
es
cmp
in
xchg
data16
xor
fild
movs
or
mov
push
dec
imul
repz
sub
(bad)
sub
int3
mov
fwait
mov
or
aas
jne
pop
sbb
int3
xor
mov
shl
rol
lds
pop
jge
mov
sub
lea
fsubr
rcr
fnsave
ret
xchg
or
jbe
ja
out
enter
push
xchg
movs
cli
jl
add
and
add
dec
or
push
pop
push
into
arpl
imul
mov
test
mov
sti
cmp
fwait
pusha
mov
sub
push
sub
test
pusha
push
mov
mov
in
push
xchg
aaa
in
dec
cmps
test
dec
lods
ss
inc
pop
shl
pushf
sahf
repz
add
jns
mov
mov
mov
out
data16
ret
add
add
mov
pop
pop
mov
stos
sbb
mov
and
and
leave
loopne
push
loopne
cwde
push
cwde
or
fucom
std
int3
inc
push
push
jbe
sbb
ficomp
mov
aad
mov
mov
xchg
gs
ins
xor
ins
(bad)
sub
sti
rol
push
outs
rol
sar
or
dec
test
mov
cmp
sub
repnz
imul
xor
lea
cmp
sub
test
ret
lahf
lahf
hlt
add
outs
adc
jmp
pop
add
jmp
js
push
mov
jmp
mov
(bad)
xchg
std
and
stos
sbb
ins
(bad)
jns
mov
mov
(bad)
add
adc
retf
xor
retf
bound
inc
(bad)
pop
sub
mul
jmp
pop
lea
xor
pop
mov
addr16
in
out
xor
push
jmp
lods
sbb
outs
xor
stos
shl
add
call
pop
movs
out
scas
loope
stos
fwait
lods
mov
pop
mov
retf
jg
mov
cwde
lods
jnp
pop
push
mov
push
xchg
pop
xor
push
mov
int3
jbe
addr16
pop
fistp
sub
push
push
mov
neg
jno
xchg
or
pop
adc
push
inc
dec
cmp
not
push
push
push
popf
lods
ins
daa
mov
fst
xchg
test
fcomip
test
push
(bad)
shl
test
jle
test
mov
iret
jle
mov
call
movs
add
bound
fcomp
loope
add
adc
mov
lods
xchg
outs
(bad)
xchg
mov
jne
push
ja
sar
je
fld
mov
jg
scas
imul
mov
mov
jno
repz
call
dec
pop
test
icebp
or
in
inc
fdivr
add
data16
or
jmp
ins
ins
mov
clc
call
sub
les
adc
jmp
and
cmp
ret
inc
sbb
shl
adc
add
adc
icebp
data16
jmp
fwait
int3
(bad)
jne
leave
fist
mov
arpl
(bad)
aam
cli
mov
fmul
rcr
xchg
xchg
neg
cli
cli
pushf
ret
add
pop
daa
in
sbb
add
mov
add
retf
mov
push
popf
inc
mov
bnd
loopne
fdivr
push
cmp
push
cld
inc
out
retf
mov
pusha
inc
xor
clc
mov
or
jae
mov
mov
pop
pop
shl
cwde
push
ins
pop
dec
jo
shr
xchg
xchg
test
test
pop
or
add
(bad)
out
inc
mov
mov
bound
or
test
cmps
mov
ins
gs
sar
jp
das
inc
retf
and
and
out
stos
mov
add
inc
iret
fadd
pushf
call
pop
in
dec
shl
imul
push
popf
add
and
jns
inc
cmc
ret
out
cmp
jbe
or
mov
push
xor
sub
ss
jp
test
and
inc
cli
scas
xchg
push
inc
test
ror
jnp
daa
std
dec
push
arpl
out
cdq
dec
xchg
stc
and
xor
lds
arpl
xor
mov
or
scas
fistp
and
jmp
out
pop
mov
add
test
nop
cmp
(bad)
fwait
imul
aad
arpl
popf
mov
dec
in
outs
es
pop
jp
cdq
adc
movs
les
and
xor
adc
(bad)
or
std
push
xchg
movs
and
pusha
add
xor
mov
int3
clc
loope
sti
inc
test
jle
mov
int3
test
pop
mov
cmp
pop
sub
cmp
not
jae
fdiv
fcom
push
inc
mov
cmp
adc
arpl
push
add
ja
jmp
in
fsubr
shl
stos
pusha
in
or
pop
adc
pop
popf
fidivr
and
jnp
arpl
out
sub
dec
sbb
or
aaa
mov
hlt
or
cmp
cmp
imul
dec
mov
retf
mov
jp
int
(bad)
(bad)
cdq
add
in
(bad)
push
or
fnstenv
jge
mov
call
sti
sti
rol
movs
inc
pop
add
fisttp
pop
jne
mov
xor
cli
xor
sbb
xor
push
push
es
fisubr
loop
xor
xor
movs
cmp
jns
mov
mov
pop
dec
sti
(bad)
push
jg
mov
push
mov
in
xchg
les
xor
xchg
(bad)
inc
mov
ret
cmp
xchg
repz
cmp
lock
(bad)
jmp
pop
jbe
loop
mov
mov
(bad)
movs
nop
push
lea
add
jo
sub
jno
or
mov
lahf
nop
push
pop
jno
inc
cmps
(bad)
aad
pushf
mov
push
and
mov
jno
cli
xchg
push
push
rol
(bad)
clc
int3
dec
lock
inc
cld
mov
xrelease
xor
(bad)
std
sbb
retf
push
or
adc
jno
in
cmp
lods
jg
lods
cmps
inc
pop
loop
jo
out
inc
fimul
cmp
fdiv
lea
xlat
jle
jbe
ds
or
cmp
bound
cli
mov
xchg
sbb
test
pop
or
std
dec
inc
imul
pop
call
jbe
and
aaa
repnz
fs
push
int3
and
or
mov
mov
pop
cmp
int3
fcomip
cmps
cwde
add
jb
xchg
enter
add
rol
push
das
cmps
call
push
cmp
pushf
mov
jo
mov
lds
inc
and
cmp
mov
jp
je
outs
ins
jmp
sbb
int3
int
jle
into
dec
rol
stos
mov
pop
mov
pand
gs
cmp
cdq
add
inc
mov
mov
mov
sbb
lds
inc
std
jmp
and
mov
pop
add
xchg
addr16
imul
dec
and
adc
popa
mov
retf
stos
cmp
dec
je
push
xchg
call
(bad)
mov
pop
mov
mov
adc
adc
cmc
jbe
call
arpl
ret
pop
pusha
out
pushf
lds
inc
outs
xchg
jl
push
mov
pop
push
gs
and
sub
test
mov
cmc
mov
into
cli
jbe
xor
mov
or
stos
jns
or
xor
cdq
mov
ins
(bad)
mov
(bad)
adc
shl
pop
test
inc
jecxz
jmp
bnd
jbe
jno
loope
into
movs
ss
dec
je
cmps
and
ins
sbb
jo
ss
bound
pop
dec
push
mov
leave
mov
pop
jle
or
pop
cmp
mov
xor
jae
loop
fld
xlat
dec
icebp
cdq
mov
or
or
outs
leave
and
inc
mov
(bad)
dec
scas
cmp
adc
push
fsub
mov
popf
lods
cmp
mov
mov
and
xchg
mov
iret
jne
test
xchg
cmps
and
loope
lds
mov
jle
push
movs
jp
cwde
mov
xchg
xchg
xor
mov
cmp
push
add
cs
mov
mov
sahf
(bad)
arpl
aad
mov
xchg
xor
out
enter
or
fdivr
and
into
sub
mov
rol
(bad)
retf
loope
scas
jo
xor
shr
pop
xchg
jecxz
jle
add
adc
leave
cwde
imul
xor
sbb
mov
ss
or
lahf
and
mov
inc
adc
xchg
std
cwde
bound
sbb
mov
ins
pop
dec
inc
mov
cmps
xchg
popa
sub
cmp
into
add
test
inc
fstp
shl
test
(bad)
jno
mov
adc
les
jno
xor
xchg
(bad)
ins
scas
fstp
(bad)
or
retf
sbb
dec
shl
adc
sbb
cmp
div
sub
pop
cmp
out
stos
mov
iret
call
inc
lods
xchg
cmp
pop
cld
movs
xchg
cmp
scas
add
mov
or
or
or
fisubr
das
jb
js
and
inc
clc
xchg
jo
out
pop
popf
jae
mov
adc
or
or
mov
mov
and
mov
bound
xor
pop
mov
dec
scas
dec
xchg
add
pop
adc
std
mov
into
push
fistp
dec
lahf
popf
add
stos
dec
and
std
scas
mov
jnp
cmps
push
jl
icebp
mov
ins
idiv
je
or
jg
jae
movs
jae
daa
xchg
sub
arpl
cmp
mov
test
cmps
fisttp
adc
jmp
and
adc
imul
test
add
(bad)
dec
inc
xchg
ins
(bad)
pop
out
out
shl
cli
cs
and
sbb
pop
or
popf
cwde
ss
out
icebp
(bad)
mov
mov
pop
jb
xchg
cdq
mov
sub
mov
outs
and
jge
out
xchg
push
mov
mov
xor
push
aad
cli
add
xchg
add
std
xor
push
into
repz
mov
adc
dec
sub
inc
push
push
or
mov
movs
mov
pop
shr
mov
iret
repnz
sbb
sbb
scas
sub
or
scas
nop
jns
inc
scas
cmp
clc
lea
sar
dec
ins
mov
call
or
retf
cmp
jge
add
jle
pop
or
(bad)
lods
push
xchg
cmp
stos
pop
popa
movs
xchg
out
cmp
sbb
cmp
in
pop
fbstp
rol
and
or
xchg
push
mov
jge
fisub
test
adc
push
inc
into
dec
sub
lea
mov
jle
call
outs
mov
inc
xchg
cld
inc
in
into
xchg
pushf
add
mov
aaa
inc
xlat
cli
fiadd
stc
jge
je
out
dec
xchg
in
sar
js
cmp
mov
xchg
stos
mov
leave
pop
lods
jge
(bad)
pop
pop
popf
out
aas
cmps
fst
adc
and
adc
movs
fwait
jne
mov
movs
arpl
nop
(bad)
xor
jno
and
scas
and
ds
test
pop
xchg
push
sbb
dec
ins
push
fwait
adc
push
inc
cs
scas
icebp
inc
add
dec
pop
sahf
add
fiadd
repnz
hlt
or
xor
rol
ficomp
sar
inc
mov
loop
rcr
inc
movs
jecxz
xlat
cwde
xor
mov
pusha
xor
jle
mov
ret
inc
sbb
xor
mov
movlps
xchg
mov
test
addr16
inc
movs
jmp
shr
aam
jmp
es
dec
mov
jmp
mov
es
fst
aaa
push
mov
fild
icebp
ds
sbb
inc
call
jae
lea
add
add
xor
sub
xor
adc
mov
movs
aam
cmps
sbb
push
fnsave
sbb
sub
mov
fadd
popf
lds
fwait
cmp
pusha
or
lods
cmp
nop
stos
rol
mov
xor
outs
pop
mov
sub
mov
push
(bad)
std
sub
cmps
xchg
cmp
popa
bound
ret
push
clc
sub
mov
jns
pop
mov
pop
xchg
sahf
fwait
es
loopne
xchg
sar
mov
jns
aad
mov
ret
scas
popf
(bad)
mov
test
int3
jl
out
pop
cld
add
cdq
pop
retf
std
sub
iret
xchg
jne
jb
das
mov
cdq
jo
sub
push
(bad)
cmp
ret
ror
mov
jo
mov
lahf
mov
jo
arpl
push
sub
jb
mov
mov
mov
mov
push
pop
das
pop
xor
fdiv
xchg
or
ins
or
aaa
mov
jo
xor
cwde
cmps
nop
xor
push
shl
into
push
jmp
aas
(bad)
rcr
mov
leave
xor
mov
xchg
cwde
or
fcom
mov
ret
adc
loope
inc
adc
loopne
aam
adc
ret
jg
push
dec
mov
(bad)
out
xchg
cld
ret
xor
out
popa
cmps
test
xchg
pop
mov
mov
xor
push
cmps
dec
icebp
aad
shl
loop
stc
shl
in
pop
dec
pop
xchg
scas
in
scas
mov
retf
nop
enter
xchg
fiadd
je
push
outs
bound
pop
(bad)
movs
sub
or
inc
aad
mov
call
pop
sar
retf
dec
push
enter
ret
jbe
aas
stos
inc
add
adc
test
jno
xchg
ret
cmp
jnp
fs
nop
setnp
(bad)
mov
(bad)
push
(bad)
sub
outs
in
neg
pop
mov
es
sub
es
adc
adc
push
add
scas
lahf
leave
out
fisttp
(bad)
dec
outs
cdq
sbb
sub
jns
adc
pop
sbb
inc
jb
sbb
cmp
stos
mov
fucom
js
jmp
imul
jmp
call
mov
fldcw
fwait
mov
fbstp
ins
jnp
lea
test
pop
sbb
or
into
scas
pop
jmp
sbb
and
jmp
lods
and
xor
adc
fst
cmps
mov
call
fstp
jmp
bound
mov
jno
div
shr
jns
xchg
mov
out
(bad)
pop
push
add
inc
jae
dec
clc
das
and
cmp
je
jecxz
retf
ins
sti
rcl
mul
ss
xor
inc
(bad)
cmps
js
xchg
add
out
out
dec
inc
and
popa
sti
fdiv
cs
xchg
movs
and
lods
in
in
mov
cmp
out
lea
xor
cmps
mov
inc
stos
sub
inc
stos
cmp
or
mov
mov
into
in
loop
cmp
sti
or
lds
jno
std
test
movs
cmp
push
int3
jb
movs
stc
into
ret
cmp
stc
inc
cld
pop
jo
xchg
scas
xchg
in
cld
shl
scas
xchg
inc
cmp
pop
push
and
add
loope
xchg
loopne
pop
sub
mov
pop
fwait
and
dec
aam
call
jo
mov
pushf
cmp
xor
aas
movs
loop
add
and
ja
push
and
adc
pop
cwde
push
xchg
pushf
or
loop
dec
xor
bound
ins
xchg
jns
out
cwde
ja
and
mov
cmp
dec
mov
in
stc
push
mov
cmp
loopne
xlat
aam
cmps
mov
out
outs
addr16
xor
ficom
sub
pmuludq
pop
jo
(bad)
les
pop
imul
aad
pop
cmp
inc
fdivr
nop
mov
pop
std
dec
lahf
xchg
inc
jno
push
shl
sbb
or
pop
in
adc
sbb
adc
iret
sti
mov
add
jle
outs
mov
sub
icebp
cli
ss
(bad)
or
and
add
jnp
add
scas
fcom
fnstcw
fist
cdq
popa
xchg
or
daa
sbb
je
pop
jae
pop
outs
xchg
cmps
xor
ror
mov
scas
inc
push
mov
xchg
adc
pop
mov
cmps
aad
adc
jne
inc
xor
adc
test
out
dec
mov
enter
cmp
dec
int3
cdq
sbb
xor
sti
cmp
mov
in
add
mov
cmps
or
nop
pop
test
xchg
jge
cmp
rol
xchg
jge
arpl
sbb
arpl
sar
das
sub
mov
call
nop
mov
test
fwait
jmp
imul
sbb
jns
push
jae
xchg
hlt
aad
fwait
pushf
jo
jmp
mov
pop
mov
mov
xchg
std
sbb
outs
mov
fs
loope
les
ss
test
pop
cmp
push
leave
popa
arpl
or
jge
rcl
loope
dec
sbb
mov
xchg
mov
aam
and
inc
repnz
sbb
mov
test
mov
push
test
rol
data16
or
test
mov
cmps
push
(bad)
stos
and
rcr
inc
popa
and
dec
pusha
xchg
(bad)
push
adc
mov
fdiv
js
movs
push
mov
and
jg
fistp
pop
(bad)
xchg
fld
lock
out
inc
or
stc
ret
mov
cmp
push
lock
mov
jo
not
retf
dec
dec
mov
sub
push
lahf
test
cmc
movs
int
test
xchg
jl
adc
mov
add
jbe
pushw
cwde
jecxz
sub
popa
arpl
sahf
(bad)
rcl
stos
lods
push
fcomp
mov
ds
aad
fidiv
mov
mov
pushf
(bad)
scas
mov
call
clc
(bad)
enter
xor
cmc
and
push
push
pop
iret
push
mov
popa
jmp
pop
mov
push
pop
sbb
dec
loopne
mov
mov
xlat
fidivr
pop
xlat
es
mov
cdq
ds
inc
and
popa
mov
iret
ret
rcl
hlt
sbb
ret
mov
fisttp
dec
not
sbb
lods
mov
and
mov
pop
stos
in
mov
retf
popf
or
cmps
popa
mov
or
jg
lods
sub
and
enter
out
adc
mov
popf
es
mov
int3
icebp
call
ins
xchg
add
pushf
cmp
mov
jbe
in
hlt
in
xor
sahf
aaa
adc
or
jle
mov
stc
scas
bound
call
(bad)
ror
inc
pop
dec
add
ins
dec
and
pop
cmc
test
dec
xchg
mov
ja
xor
xor
ja
sbb
sbb
inc
addr16
in
xor
xor
scas
and
lock
in
push
into
sub
pop
lea
or
sbb
les
mov
xchg
(bad)
and
inc
lods
lock
mov
sbb
das
rcr
push
or
scas
rol
push
retf
or
dec
js
mov
in
js
out
inc
(bad)
and
cmps
arpl
cmc
push
fidiv
inc
mov
sub
jle
xchg
push
int
leave
shr
sub
xor
pushf
(bad)
jl
or
cmps
push
push
push
imul
and
xchg
mov
aaa
adc
xchg
pop
and
or
mov
ret
mov
cmps
stos
fcom
cmp
les
cs
and
out
int3
mov
retf
xchg
mov
std
or
xchg
pop
push
inc
xchg
or
jp
jge
jle
or
cwde
mov
pop
push
jp
mov
into
dec
fwait
loope
mov
test
sbb
or
fwait
pop
arpl
call
mov
iret
mov
test
add
xchg
cmp
inc
mov
mov
sbb
or
clc
inc
mov
mov
or
and
or
jnp
xchg
push
or
retf
xchg
fdivr
clc
mov
cmp
mov
jmp
js
push
jmp
cmps
inc
jns
xor
xor
dec
adc
(bad)
xlat
in
cli
mov
xor
adc
popf
(bad)
lds
push
ror
sub
mov
push
sbb
mov
rcl
cs
adc
mov
aad
mov
mov
add
adc
mov
sbb
ja
sub
aas
mov
push
cdq
or
adc
xchg
arpl
xchg
add
or
jae
or
xchg
mov
fsub
mov
xchg
and
or
in
and
mov
cli
sub
dec
adc
mov
pop
pop
test
xchg
call
movs
add
xchg
or
sahf
adc
call
xchg
sbb
sbb
(bad)
fcmovu
xor
cmps
pop
icebp
int3
mov
into
add
sub
ret
pop
mov
sub
leave
sbb
in
add
das
imul
jmp
or
stos
xor
mov
aaa
(bad)
push
daa
bound
jne
scas
rcl
jmp
rcl
pop
inc
movs
sub
add
pushf
push
out
push
das
ins
mov
stc
popf
add
mov
dec
std
bound
mov
cmps
stos
pop
and
fcom
xchg
in
(bad)
pusha
jmp
xor
mov
mov
int
adc
retf
jmp
xchg
sbb
popf
mov
jp
dec
mov
jae
out
in
gs
add
or
inc
es
dec
sqrtps
es
mov
hlt
sti
in
xchg
mov
test
outs
mov
adc
mov
out
xor
sbb
sub
pop
imul
mov
xor
mov
cli
sub
cmp
push
iret
scas
sbb
pop
sbb
or
out
pusha
into
mov
jne
sub
mov
mov
fcomi
dec
mov
xor
(bad)
fcomp
(bad)
shr
jo
push
out
aas
pop
xchg
push
adc
ror
aam
popf
ret
cmc
clc
mov
aaa
xor
daa
int3
fist
jnp
call
clc
stos
or
mov
xchg
in
pop
push
fcomip
pop
fiadd
inc
inc
int
and
mov
push
das
mov
sbb
push
jle
ret
dec
mov
ret
iret
mov
lds
cmp
ja
inc
jb
push
xlat
data16
adc
mov
scas
mov
loop
ins
in
and
popf
imul
push
sub
fs
ins
push
xor
mov
cmp
dec
or
icebp
mov
push
(bad)
(bad)
ds
cmp
js
push
icebp
aad
add
or
sbb
cmp
lea
scas
fsubr
clc
leave
mov
inc
xchg
add
sub
and
pop
cmp
or
mov
pop
ret
mov
fisttp
cmp
sahf
stos
aaa
mov
jb
and
stc
mov
daa
movs
cmp
adc
xor
inc
mov
mov
sti
jl
dec
rol
push
gs
pusha
mov
cmp
inc
xor
inc
cwde
mov
mov
call
movs
push
inc
inc
and
push
out
push
inc
add
mov
dec
jne
xchg
scas
or
fcomp
or
push
arpl
dec
out
jbe
mov
mov
and
hlt
lock
push
loope
lahf
stos
xor
and
fs
pop
scas
call
xor
or
adc
ret
addr16
pushf
scas
aaa
fisttp
lahf
test
iret
pop
xchg
sub
ret
push
and
fwait
dec
sbb
test
clc
cdq
push
jb
fmul
jmp
shl
push
mov
jnp
ss
outs
movs
sti
in
pop
cmps
jb
loopne
ins
int
add
mov
fiadd
pop
aad
and
cmp
in
hlt
jb
ror
mov
add
push
jne
adc
adc
out
jns
(bad)
lea
or
shr
sbb
jbe
retf
ja
push
ds
in
je
or
jle
mov
jg
inc
mov
push
(bad)
into
call
icebp
in
dec
imul
lahf
(bad)
fcmovnb
int
fisubr
aad
out
and
adc
cmps
fs
jle
addr16
retf
data16
cmc
sub
adc
fwait
pop
lock
imul
enter
ds
dec
loopne
mov
push
out
inc
pop
cmp
in
ins
dec
cmps
addr16
mov
or
rcr
adc
test
ins
pusha
jns
pop
or
int3
mov
inc
iret
xlat
outs
and
add
std
(bad)
mov
sbb
(bad)
adc
push
sub
and
pop
into
stos
fiadd
inc
aas
cmp
jnp
cld
xchg
loop
cmc
fnstenv
xchg
sub
cmp
pop
mov
sbb
js
push
imul
adc
push
push
mov
xchg
movs
call
jbe
fs
or
fs
inc
and
call
clc
add
mov
nop
popa
mov
call
icebp
or
jns
jnp
call
push
fcom
push
mov
cmp
outs
mov
fild
je
jp
add
jp
push
dec
in
jno
add
xor
push
add
ins
push
dec
sub
lds
aam
jg
inc
enter
jb
scas
mov
into
imul
jl
int
pushf
pusha
cmp
into
and
push
lock
in
pop
loope
retf
mov
push
mov
nop
ret
mov
int
push
ret
loop
loope
ret
inc
fst
or
iret
dec
sbb
ins
xor
loop
mov
sub
js
stc
cmp
test
fisubr
xor
sbb
fld
aaa
and
xor
(bad)
cmc
mov
xchg
loopne
mov
scas
in
jo
dec
fcomp
bound
xchg
aas
add
ja
mov
mov
pop
jmp
cs
xor
in
jns
sub
adc
and
mov
cdq
pop
inc
or
je
test
sub
loopne
mov
mov
dec
adc
sar
sbb
add
les
retf
(bad)
mov
xchg
adc
daa
je
xchg
bound
sbb
xor
ja
mov
or
int3
xchg
scas
add
xchg
xchg
(bad)
jns
mov
(bad)
repnz
mov
pop
sahf
mov
jbe
mov
ins
loopne
ret
ins
sub
outs
or
add
mov
or
out
mov
and
and
dec
mov
push
les
pop
ins
dec
es
or
pop
xchg
daa
in
mov
jae
mov
cmp
xor
sub
dec
addr16
and
sbb
mov
add
fwait
jecxz
mov
test
dec
(bad)
les
in
ins
mov
mov
into
mov
out
or
and
xchg
pop
leave
sub
(bad)
mov
fld
add
fdivr
out
and
movs
jge
or
sti
dec
es
lea
dec
pop
add
ss
sbb
sub
repz
xchg
sbb
cld
adc
and
es
jae
(bad)
mov
add
push
test
out
mov
cmp
sbb
sbb
sub
mov
or
(bad)
jmp
dec
pop
lahf
jmp
jno
inc
xchg
gs
dec
into
xor
pand
iret
fsubr
xchg
mov
sub
nop
cmc
and
push
add
hlt
mov
cmc
pop
lahf
into
jne
push
jae
and
lods
add
and
test
mov
mov
gs
outs
mov
(bad)
mov
xor
and
cmps
push
lahf
mov
push
jnp
(bad)
pop
scas
xlat
shl
sbb
sbb
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
mov
js
xlat
std
in
sub
sub
mov
pop
fwait
xchg
and
push
nop
(bad)
push
jl
fdivr
adc
fstp
repnz
xor
vpcomub
rcr
mov
xchg
adc
jmp
stos
adc
and
and
hlt
stos
ficomp
sbb
mov
in
dec
add
push
in
pusha
movs
out
ds
add
mov
into
jns
loope
jae
inc
sub
sub
fld
pop
push
mov
jg
or
pop
and
out
push
adc
pop
lea
pop
mov
fwait
sbb
neg
adc
arpl
es
xchg
stos
pop
idiv
add
xor
repz
or
cwde
inc
(bad)
mov
into
repnz
cmp
mov
or
pop
addr16
call
std
int3
add
or
(bad)
fst
enter
xor
inc
push
push
pushaw
mov
push
out
xchg
test
pop
jns
fld
xor
pop
mov
xor
movs
mov
ins
xchg
sub
inc
mov
or
ret
out
xchg
inc
cmps
repz
push
pusha
and
mov
dec
xchg
ja
mov
push
add
cld
push
xor
jmp
dec
ret
mov
test
pop
pop
lock
cdq
cdq
add
xchg
sub
mov
add
mov
stos
pop
enter
inc
pop
mov
imul
pushf
dec
push
xor
mov
push
mov
xor
jnp
lds
outs
xchg
bound
sub
mov
rcl
pushf
rol
pop
dec
daa
or
jge
mov
add
add
sub
jae
dec
mov
loop
pop
test
div
and
mov
in
test
push
or
adc
xor
and
cmp
stos
fcomp
std
jo
dec
shr
adc
pop
clc
daa
int3
pusha
jmp
or
ds
call
les
add
ins
aam
fcom
shr
jns
cdq
jle
cmp
mov
pop
push
jo
sub
repz
push
adc
mov
jne
mov
cmps
scas
fs
or
out
es
lods
cmp
sbb
pusha
pop
jecxz
pop
jl
sub
dec
push
inc
add
sbb
in
pop
push
mov
inc
int
pop
icebp
aam
cmp
dec
aam
mov
into
test
sbb
ret
jp
sbb
sbb
fs
xchg
test
lods
(bad)
std
adc
pop
cmp
rol
sub
or
push
inc
icebp
ja
rol
inc
inc
dec
mov
pop
jb
call
(bad)
fisttp
stos
cs
cld
lea
inc
mov
aas
in
clc
inc
dec
mov
cdq
js
dec
(bad)
repnz
ret
ret
xchg
add
push
mov
ins
inc
mov
lds
fcmove
sbb
cli
inc
pop
pop
cmp
call
outs
clc
adc
mov
push
lods
mov
(bad)
outs
pusha
inc
dec
lds
push
(bad)
and
cmp
mov
cmp
xchg
cmp
cmp
ror
or
sbb
js
mov
(bad)
dec
dec
jmp
shl
lods
ror
not
iret
jbe
gs
aad
inc
pop
imul
hlt
mov
shl
add
and
(bad)
cmp
mov
jle
std
dec
jno
ret
test
push
(bad)
in
xor
xor
stos
in
hlt
leave
pop
and
and
stos
jae
fdiv
stc
mov
or
xor
pop
repz
dec
arpl
scas
sbb
fst
mov
and
jle
sti
in
retf
nop
or
mov
jnp
sbb
fmul
fcom
mov
imul
addr16
push
mov
pop
sbb
jnp
sub
cmp
les
mov
inc
mov
pop
jo
sbb
popf
adc
ja
xor
cli
mov
jecxz
and
loope
pop
add
jge
ins
ret
mov
fbld
pushf
add
adc
(bad)
sub
ffreep
jmp
jcxz
idiv
mov
movs
mov
in
sbb
ret
lock
call
data16
cld
add
in
imul
fistp
das
les
sbb
call
cmp
pop
fsubr
and
sub
adc
inc
xor
push
adc
les
mov
or
mov
setno
xchg
(bad)
je
xor
loopne
(bad)
test
xor
cmp
sbb
arpl
stc
add
xor
xor
jl
sub
add
cmp
cwde
cdq
push
std
movq
push
cmp
pop
adc
jns
test
add
test
stos
cmps
mov
sub
ds
sub
fstp
out
dec
in
pusha
jb
sti
cdq
fisubr
push
mov
cmc
test
stos
sti
jg
cdq
push
inc
jp
shl
in
add
scas
mov
retf
rol
sbb
dec
push
dec
fst
inc
ret
movs
cpuid
sbb
xchg
push
push
aaa
lds
arpl
pushf
into
xor
inc
jo
js
sub
jecxz
add
or
pop
or
push
jb
test
cmc
out
mov
aad
or
addr16
add
ror
les
mov
mul
cmp
cwde
push
adc
mov
add
ins
jl
mov
fs
jo
cmps
sbb
xchg
inc
cli
adc
les
mov
pop
pop
punpckhdq
repnz
mov
mov
test
lock
or
jae
push
ins
sub
lea
add
or
in
pop
(bad)
loopne
movs
out
adc
fwait
in
adc
push
push
inc
pop
lahf
xor
inc
xchg
sub
push
or
mov
mov
sub
xor
xchg
push
retf
cmp
cld
test
test
retf
nop
test
mov
jmp
pop
and
into
punpckldq
popf
in
pop
inc
sti
add
std
push
xchg
cmp
sbb
stos
imul
pop
je
ret
loope
add
mov
push
sub
lahf
aaa
inc
cld
shl
ror
push
test
pop
xchg
sar
and
retf
(bad)
les
mov
pop
sub
sbb
mov
imul
and
mov
scas
jnp
mov
xchg
ds
in
add
rcl
or
movs
adc
ffreep
push
leave
or
adc
fs
ret
sbb
dec
in
inc
mov
pop
repnz
imul
pop
cmp
les
mov
inc
add
sar
dec
xlat
or
sti
dec
test
leave
xor
shl
int
cmp
jecxz
adc
xor
out
cwde
test
push
xlat
lods
popa
mov
sti
stc
xchg
mov
push
pop
adc
daa
sti
enter
ss
xchg
mov
movs
inc
adc
in
fs
fidiv
ja
push
fsub
cmp
mov
or
sahf
push
cmp
cld
mov
test
(bad)
xor
imul
mov
push
outs
test
(bad)
shl
lods
jno
mov
cmc
out
fidiv
bound
pop
adc
ret
jmp
push
stc
pop
dec
xor
fst
cmp
(bad)
popf
retf
fwait
xor
jg
ret
les
sbb
fs
fadd
jo
enter
sar
ror
or
inc
jae
int3
mov
cdq
pusha
sbb
fisub
mov
or
shr
push
push
sbb
nop
dec
mov
cmps
mov
xor
inc
test
adc
mov
mov
dec
mov
jecxz
imul
sbb
call
clc
jnp
or
leave
scas
shr
in
pop
test
mov
(bad)
clc
cmp
adc
les
add
test
add
mov
aaa
adc
pop
arpl
fnstenv
push
push
cmps
and
mov
sbb
xor
lahf
ret
lds
dec
cli
push
(bad)
clc
fwait
mov
cmp
les
inc
or
arpl
jb
mov
xor
int
push
adc
sar
and
sbb
sti
adc
jmp
scas
lock
loope
ja
popf
jmp
xor
add
jmp
loope
pop
push
mov
fsub
repz
xchg
cmp
out
aad
mov
and
popf
aad
cmp
or
pushf
loope
popf
fidivr
add
cmp
lock
icebp
dec
outs
cmps
js
pop
loopne
adc
gs
jecxz
inc
mov
sbb
mov
mov
cmps
bswap
and
add
mov
stos
push
mov
sub
xor
mov
das
es
jne
pop
and
repnz
sar
push
and
rol
mov
jmp
cmp
aad
pop
mov
sub
hlt
or
or
and
dec
and
out
je
test
retf
iret
pop
ficom
aas
and
mov
push
fild
ds
sahf
shr
add
inc
stos
jmp
xchg
jmp
xchg
cmps
dec
mov
das
out
inc
cmp
or
jge
inc
sti
add
and
in
mov
fs
movs
mov
jns
add
sar
call
xor
xor
mul
data16
rcl
adc
mov
sahf
sbb
es
xchg
cdq
repz
push
add
xor
loopne
xchg
and
mov
jmp
dec
hlt
jne
push
sub
and
int3
into
aas
inc
jno
stc
xor
in
test
imul
mov
addr16
fmul
inc
mov
dec
pop
mov
inc
enter
aaa
push
es
pop
pusha
mov
and
xor
movs
push
pop
ret
cmps
lds
push
dec
push
ret
sub
xchg
xor
test
repnz
jmp
and
gs
inc
in
xor
mov
jl
fwait
jecxz
xlat
retf
out
xor
adc
in
(bad)
(bad)
cmc
push
mov
test
add
cmp
jp
cld
cmp
rcr
fs
enter
pop
pop
jbe
inc
and
test
in
in
(bad)
stos
adc
inc
inc
in
inc
mov
jns
and
lods
arpl
es
fsubr
mov
fwait
jl
xchg
fisubr
mov
int
mov
loopne
sub
jle
fist
call
ins
out
mov
mov
sbb
jbe
inc
fld
cmps
jg
(bad)
int
and
sti
mov
push
js
mov
mov
sub
and
dec
jl
jns
into
outs
lods
stos
mov
cwde
mov
mov
cld
hlt
xchg
jle
xchg
mov
es
iret
cmp
push
stos
push
inc
pop
cmp
mov
aaa
leave
inc
add
scas
add
jnp
mov
sar
cmps
push
jmp
bound
push
ret
adc
aam
add
cmp
push
dec
push
retf
loopne
fbstp
add
fcmovnu
fdiv
or
sbb
out
gs
out
sub
jmp
jns
cmc
inc
fisub
pusha
scas
loop
pop
sub
sbb
jp
dec
or
cld
and
stos
int
int3
out
pushf
fidiv
fstp
shl
daa
mov
mov
push
pop
mov
push
out
imul
push
fdiv
or
mov
adc
in
es
ins
mov
ins
mov
popa
fwait
in
dec
push
fmul
movs
pop
pop
adc
ins
jno
sbb
dec
outs
ja
and
adc
int
adc
push
mov
fst
int3
cmc
shl
pop
mov
sbb
sbb
sbb
mov
xchg
in
mov
dec
cmps
sub
std
cmps
sub
jmp
or
cmp
pop
sbb
lea
sub
sub
shl
cdq
ja
pop
cmp
push
fisubr
mov
jp
leave
call
pop
call
movs
(bad)
mov
(bad)
add
jae
imul
add
fadd
dec
das
cli
inc
or
adc
fisub
rcl
inc
test
inc
int3
cmp
pop
shr
cmp
add
outs
dec
and
dec
dec
sbb
xor
dec
or
or
(bad)
out
fld
std
outs
jl
mov
(bad)
mov
and
sbb
mov
ret
repz
push
in
rol
fisttp
and
out
aas
imul
jmp
add
jp
xchg
add
xchg
in
inc
dec
mov
jl
mov
fisubr
imul
ror
pop
cmp
jg
add
cmps
sub
push
xor
add
sysret
repnz
sub
sbb
sahf
push
in
jns
pop
shl
push
mov
jbe
mov
and
imul
rcl
scas
inc
mov
add
aad
mov
pop
xor
jle
enter
mov
in
mov
call
push
test
(bad)
in
sub
sbb
dec
fnsave
push
call
adc
mov
call
inc
push
jne
call
mov
inc
jb
xchg
and
xor
mov
ds
sti
mov
gs
out
and
lahf
nop
mov
or
mov
jmp
cmc
mov
mov
bound
lods
xchg
loopne
xor
cmp
popf
sub
pop
xchg
xor
mov
jmp
push
ins
(bad)
mov
or
data16
sahf
packsswb
cs
sub
pop
leave
cmp
arpl
sti
inc
mov
ins
or
jbe
retf
mov
cld
lods
lock
mov
into
(bad)
mov
inc
mov
mov
sbb
loopne
outs
mov
loope
xchg
push
mov
xchg
rcl
xchg
aas
add
mov
sbb
int3
mov
fs
call
xchg
stc
loopne
push
popa
mov
inc
gs
dec
or
aam
sbb
mov
lods
out
je
cmp
mov
mov
pop
add
dec
lods
adc
in
add
in
dec
adc
inc
stos
ds
mov
and
scas
mov
sub
push
gs
adc
sub
es
xchg
fistp
cmc
mov
inc
jp
mov
mov
cmp
in
jmp
or
push
and
cmp
inc
aam
test
sub
inc
mov
pop
das
mov
pop
sub
loopne
adc
push
and
(bad)
std
add
js
adc
jg
inc
ja
jns
push
mov
inc
push
(bad)
jo
rol
jo
(bad)
jnp
push
arpl
cs
int
or
fcmovnu
mov
fwait
das
dec
aaa
test
imul
add
adc
cmp
or
mov
loopne
cwde
adc
fstp
mov
or
sub
pop
imul
xchg
cmp
and
mov
nop
sub
ret
nop
push
mov
(bad)
dec
sbb
and
adc
pop
sbb
mov
xor
jp
mov
mov
pop
adc
daa
retf
imul
mov
mov
pop
push
mov
xchg
cmp
neg
pop
out
lock
cmps
push
lahf
mov
sub
mov
sbb
push
adc
jae
iret
jg
or
ficomp
ret
adc
adc
daa
cmp
sub
add
std
(bad)
sub
mov
sub
mov
sbb
ret
sub
dec
mov
jo
push
dec
dec
add
aas
(bad)
sbb
sub
jmp
out
sub
dec
inc
ins
outs
rcl
test
jne
jne
xchg
push
or
fidivr
xchg
repz
fimul
push
inc
out
mov
dec
dec
xor
adc
mov
dec
jecxz
mov
add
aas
mov
xor
adc
retf
push
(bad)
push
loope
ror
idiv
lds
mov
call
pop
jle
aas
cdq
dec
out
add
or
xchg
dec
pop
jbe
fcmovnbe
sbb
arpl
lea
cbw
rcr
add
das
mov
mov
push
add
add
not
mov
xor
pop
ins
outs
hlt
mov
sub
xor
loop
int3
lods
out
ins
inc
stos
jecxz
and
jnp
test
push
outs
cmp
iret
jbe
xor
mov
out
rcr
jns
imul
stc
mov
sub
adc
inc
push
fmul
aas
stos
iret
add
and
ja
fld
not
adc
cmp
popf
jecxz
test
popf
fisttp
sub
(bad)
je
aaa
lods
cmps
jne
test
jg
pop
clc
cmps
loop
loop
(bad)
jns
add
ja
addr16
xor
jns
or
jae
call
dec
mov
inc
push
jle
mov
cmps
ror
inc
ins
ret
pop
inc
lock
rcr
push
inc
pop
scas
addr16
scas
lods
into
popa
adc
fdiv
push
sahf
or
fiadd
lods
sahf
mov
cmovb
retf
xchg
fldenv
add
xchg
sbb
out
xor
mov
(bad)
(bad)
push
test
lea
bound
dec
push
and
pop
mov
jbe
cwde
sub
jae
(bad)
(bad)
outs
sti
lods
mov
cmp
(bad)
mov
add
rcl
sub
jnp
cmps
fsubp
sub
jge
jmp
dec
sub
push
push
jmp
imul
icebp
arpl
movs
leave
push
lock
in
addr16
bound
repz
outs
ret
pushf
cli
dec
bound
adc
pop
fcom
sub
and
cmps
lea
and
loope
aas
cmp
test
int
ret
lods
jmp
mov
jmp
fwait
(bad)
mov
inc
adc
mov
sbb
aas
in
gs
dec
fld
or
fadd
bound
int3
push
inc
movs
cdq
bound
stc
in
ror
add
retf
mov
push
sbb
mov
pop
repnz
loopne
bound
(bad)
fdiv
fidivr
push
daa
cwde
push
aas
pop
jbe
push
outs
fisttp
lahf
sub
pop
pop
push
iret
xchg
scas
inc
scas
xchg
fadd
or
push
out
gs
ja
xor
loop
add
adc
mov
lods
sar
sbb
repz
and
ret
cmp
and
iret
push
cwde
in
fcom
xchg
cmp
jo
sti
mov
(bad)
repz
and
cwde
dec
fstp
imul
jb
test
pop
xchg
rcl
xchg
cmp
push
pushf
mov
rcl
cdq
stos
push
push
leave
push
mov
xor
out
or
jno
jno
shl
xor
hlt
retf
retf
(bad)
repnz
rcr
fild
pop
lea
fdiv
xlat
inc
mov
(bad)
cli
jle
or
inc
xor
imul
pop
sub
mov
mov
mov
inc
cmp
jno
sbb
les
or
dec
pop
in
out
cmp
frstor
add
xchg
data16
mov
and
xor
xchg
in
push
inc
nop
mov
shrd
imul
xchg
mov
enter
sub
adc
inc
add
or
popf
mov
pop
je
pop
or
push
ficom
jne
(bad)
rcr
jle
or
sahf
mov
ret
mov
mov
lods
jae
xor
mov
test
adc
pop
movs
jge
out
sbb
dec
ds
mov
pop
loop
(bad)
pop
daa
xlat
mov
dec
fs
aam
addr16
cmp
dec
sbb
mov
adc
inc
(bad)
xor
icebp
cmp
pop
mov
retf
shl
popf
out
dec
push
mov
aaa
xchg
inc
fiadd
sbb
inc
(bad)
stc
fisubr
mov
or
inc
das
adc
loope
popf
add
fidivr
test
fwait
pushf
push
fs
pop
ins
hlt
pop
lahf
mov
jle
xchg
aam
fidivr
psllw
and
stos
sbb
add
push
xchg
dec
mov
sbb
adc
cli
mov
sbb
ret
cli
jle
lea
loop
sbb
sub
cwde
imul
icebp
pop
movs
fwait
dec
popa
add
xchg
ins
sar
inc
sahf
xchg
shr
nop
xchg
ins
retf
lahf
lods
pop
push
or
inc
fldenv
pop
mov
cmp
movs
inc
sbb
cli
out
loop
int3
sbb
data16
mov
imul
mov
adc
inc
xchg
out
add
lock
inc
or
int
adc
xchg
fs
adc
rol
neg
repz
inc
es
mov
jo
fidivr
mov
cdq
sbb
cmc
pop
mov
cdq
inc
cdq
popf
mov
mov
or
xchg
push
or
je
(bad)
jmp
adc
mov
call
idiv
test
jp
shl
mov
add
out
sub
leave
and
mov
mov
push
mov
jl
pop
rcr
scas
dec
dec
cmp
mov
xchg
xchg
adc
imul
cld
js
mov
adc
mov
rcl
add
mov
rcr
in
in
dec
dec
pushf
xor
xchg
pop
daa
lods
add
popa
data16
or
lea
sub
push
jecxz
call
add
mov
push
rep
mov
jg
cmps
in
addr16
mov
repnz
mov
lahf
xchg
push
jno
pop
(bad)
xor
inc
nop
push
sub
shl
pop
sbb
add
cmp
cmp
gs
and
pop
dec
cmc
mov
adc
sub
dec
fnsave
mov
loopne
xor
xchg
stos
test
adc
cmc
dec
fdivp
sub
out
loopne
int
movs
fbstp
add
push
lds
iret
jo
mov
scas
ins
(bad)
mov
imul
arpl
push
dec
sub
cdq
push
xor
stc
jnp
xchg
xchg
mov
aad
push
add
mov
mov
xchg
ss
(bad)
scas
xchg
mov
pop
cmp
aad
or
mov
lea
or
stc
cld
jno
cwde
popf
push
(bad)
pop
mov
loope
mov
imul
ins
mov
fstp
movs
cmp
mov
enter
ins
sbb
cdq
mov
sahf
jb
fst
adc
add
jp
add
int
stos
popa
push
ret
mov
and
ja
out
(bad)
jnp
cmp
mov
daa
dec
mov
outs
xor
sub
jle
shl
mov
pop
fcom
sub
loopne
ja
xor
and
or
in
lods
nop
pusha
xchg
cmc
mov
or
inc
xor
push
data16
ficomp
pop
test
or
lock
lahf
imul
cmc
jmp
outs
pop
add
psllq
(bad)
add
in
in
adc
popa
push
addr16
or
std
rol
fs
pop
mov
out
cmp
push
dec
sub
sub
mov
inc
fcmove
push
sbb
jae
retf
rcr
test
or
jl
or
and
in
inc
call
dec
les
and
xchg
jp
dec
push
sbb
or
jmp
data16
cmp
xor
pop
inc
cmp
xor
jecxz
rcl
out
adc
retf
pusha
shl
stc
cwde
jae
scas
arpl
add
xchg
push
inc
test
in
xchg
popa
mov
inc
push
sub
adc
arpl
mov
push
dec
(bad)
xchg
femms
and
mov
and
pop
cmp
mov
mov
lods
dec
mov
push
int3
retf
loop
dec
shl
ds
push
dec
adc
push
jnp
std
daa
pop
fwait
test
sub
fisttp
div
cdq
ins
in
xor
inc
popa
pushf
adc
add
je
add
fcmovu
cmp
popf
fisubr
(bad)
adc
mov
jg
jbe
shr
mov
push
cmps
mov
jb
test
and
or
mov
aad
sbb
and
inc
dec
mov
cmc
pop
push
lds
jg
or
jnp
dec
loop
dec
repz
jg
add
push
cmc
(bad)
in
retf
xlat
sbb
data16
mov
mov
cmp
(bad)
cmp
xor
int
scas
xor
dec
retf
lods
mov
pop
adc
scas
xchg
jns
sbb
jno
push
ins
sbb
movs
adc
test
pop
or
jb
icebp
mov
loopne
pop
pop
iret
or
(bad)
cli
retf
jmp
and
sar
mov
cmps
arpl
stos
mov
mov
inc
(bad)
adc
sahf
das
stos
mov
sub
outs
aaa
cmc
sbb
xchg
es
and
stos
inc
lock
bnd
pushf
and
mov
ss
sahf
das
shl
fdiv
clc
adc
xor
inc
cld
pop
jmp
icebp
(bad)
sbb
dec
leave
std
jp
xor
shl
icebp
loope
std
and
repnz
push
mov
je
aad
xchg
fwait
dec
cdq
mov
mov
outs
pop
adc
add
mov
outs
mov
push
pop
(bad)
shl
and
or
inc
or
sbb
mov
or
mov
inc
inc
addr16
cmp
imul
scas
outs
outs
outs
xor
retf
cdq
sbb
xchg
retf
sub
cmp
aas
jp
stos
jbe
shr
(bad)
(bad)
ret
cli
adc
xor
add
fild
cdq
cmp
xlat
sub
pop
imul
(bad)
and
sbb
lds
leave
scas
jbe
sahf
sub
sub
mov
test
mov
pop
push
xor
xchg
push
add
or
cmps
adc
mov
jns
and
mov
xor
movs
shr
mov
or
xor
icebp
fmul
mov
repnz
jns
pop
push
pop
add
aas
loope
jns
jae
and
mov
jl
jo
inc
push
dec
retf
(bad)
xor
in
push
stos
pop
push
sub
fbstp
retf
jne
dec
enter
ja
mov
ss
rol
ficomp
mov
call
push
into
mov
pusha
das
iret
mov
movs
xor
mov
int3
jmp
add
sub
out
and
(bad)
mov
add
inc
pop
fneni(8087
or
jne
int
adc
in
cld
out
pop
add
in
mov
push
jge
inc
jo
ret
pop
aad
jmp
dec
mov
in
movs
sahf
shl
xor
adc
iret
rcl
or
iret
add
lea
push
pop
lods
stc
rol
adc
add
sub
loop
cli
ss
imul
jecxz
sbb
or
pop
scas
mov
sti
push
leave
lahf
out
xchg
fmul
adc
push
das
and
xchg
sbb
fstp
cld
pusha
call
sti
scas
push
ret
ins
pop
mov
xchg
es
pop
add
xchg
(bad)
and
xor
aad
pop
jmp
cmps
mov
push
into
xor
jmp
sbb
lods
inc
push
xchg
out
aas
jmp
jns
and
sub
leave
add
sbb
pop
aaa
shl
les
xor
mov
lahf
inc
fbld
jno
aaa
add
loopne
inc
inc
cwde
pushf
mov
outs
add
sbb
sub
sub
xchg
stos
shl
mov
mov
jp
jb
mov
loop
aad
(bad)
(bad)
rcl
scas
sar
cmps
stc
mov
jmp
leave
or
dec
inc
cld
inc
pop
ss
mov
je
out
jp
inc
mov
xchg
add
cwde
add
in
mov
mov
loope
popf
push
or
sbb
inc
rcl
fbstp
adc
or
mov
lods
adc
adc
dec
test
pop
mov
mov
xchg
xor
or
cmp
loop
mov
sbb
sub
adc
rcr
mov
es
and
push
cwde
jno
mov
icebp
call
les
pop
mov
imul
retf
call
xchg
dec
test
jne
push
les
bound
cwde
or
rol
mov
imul
or
jo
sbb
add
addr16
jmp
jmp
push
aaa
int3
arpl
dec
ja
jmp
xchg
sbb
cmp
jb
ins
sbb
lock
add
mov
pop
div
push
push
fs
std
dec
or
mov
and
xor
push
xor
push
ds
mov
mov
das
pop
jbe
cmps
push
lds
pop
push
and
and
mov
(bad)
adc
movs
pop
xor
cld
aaa
xor
data16
and
dec
mov
mov
xor
inc
imul
cmp
icebp
fwait
pop
scas
inc
mov
add
mov
inc
adc
xor
aam
addr16
fisub
mov
inc
mov
and
stos
mov
mov
scas
push
sbb
pushf
gs
and
mov
pop
popa
out
aam
adc
ja
cli
retf
lock
add
sbb
cmp
aas
repnz
fmul
jge
and
loope
pop
test
push
push
or
arpl
cdq
into
inc
xor
and
push
inc
xor
mov
test
mov
scas
test
out
les
sub
mov
adc
fsub
bound
enter
mov
add
add
dec
fsubr
pop
dec
or
dec
inc
sub
ficomp
fcomp
sahf
push
lods
mov
in
scas
adc
mov
cmp
xchg
sub
lods
ins
add
aaa
repz
xchg
xchg
inc
xchg
inc
jecxz
ins
xor
mov
mov
xchg
push
cmps
(bad)
shl
out
mov
loop
cmp
clc
stos
jmp
and
scas
cmps
pop
stc
fdiv
dec
adc
sbb
leave
int3
cmp
cmp
xchg
jne
mov
pop
xchg
rol
sub
sbb
lea
pop
xchg
jnp
ds
jg
sahf
test
xor
push
cs
test
mov
cs
sti
xchg
into
mov
rcr
rcr
mov
stos
adc
stc
ret
out
adc
outs
fild
cld
daa
pop
mov
sbb
ja
fwait
aad
inc
xchg
test
retf
fwait
into
jmp
xlat
jg
nop
daa
mov
xchg
lea
ret
jo
mov
or
shl
cmp
adc
(bad)
dec
stos
test
jne
pop
mov
imul
add
push
mov
sub
call
push
(bad)
jnp
cmp
sub
int3
int
add
xchg
jns
out
call
and
movs
add
jbe
cdq
push
mov
pop
rol
sbb
sti
sub
jmp
nop
xchg
push
fnstcw
loope
sub
aaa
adc
lods
or
sub
retf
xor
rol
out
push
cdq
test
inc
jge
mov
add
mov
(bad)
(bad)
aad
mov
mov
inc
fwait
mov
cs
push
jae
test
int
sti
addr16
xlat
jne
and
mov
test
div
inc
jmp
mov
xchg
add
sub
sub
addr16
in
push
sub
and
or
xor
jns
jmp
repnz
into
jg
cli
inc
push
(bad)
icebp
imul
out
push
adc
mov
call
push
cs
retf
xchg
mov
push
add
test
movs
les
xchg
mov
dec
sub
sub
scas
in
add
rcl
std
stos
mov
push
xor
lods
stos
int3
and
mov
and
adc
mov
add
pop
fst
adc
in
sbb
pop
mov
or
xchg
sub
xor
cmp
add
pop
fmul
xchg
fdiv
jmp
shl
gs
push
xlat
sub
ds
div
ins
cmps
in
mov
jno
and
stos
mov
and
dec
int3
in
rcl
fcom
push
sbb
and
out
into
ret
imul
(bad)
jb
or
out
enter
retf
or
xchg
sub
jl
add
lods
popa
or
adc
rcl
mov
sub
pusha
pop
xchg
repz
mov
les
jecxz
(bad)
sbb
lods
or
loopne
int3
test
sbb
ins
lods
adc
pusha
xchg
shl
(bad)
nop
or
sub
mov
jmp
clc
dec
add
(bad)
mov
cld
xchg
mov
cmps
es
test
popf
and
scas
add
js
xchg
cs
jno
loope
aad
inc
(bad)
jno
jp
outs
mov
mov
mov
jnp
out
xor
call
nop
outs
mov
daa
rcr
dec
mov
pop
hlt
scas
(bad)
(bad)
and
js
inc
in
lods
mov
call
push
int3
popf
rcr
sahf
(bad)
jecxz
mov
adc
int3
mov
jo
cmc
jg
jecxz
call
jns
sar
dec
cs
ret
mov
lods
dec
dec
mov
inc
icebp
fisubr
aas
mov
jne
test
cmc
(bad)
sub
cwde
push
inc
push
les
inc
cwde
popf
cmp
adc
push
mov
retf
fidiv
mov
mov
mov
fwait
cmp
mov
fdivr
inc
and
gs
xor
repnz
xchg
add
jmp
mov
pop
xlat
xor
cmp
jmp
xor
cmp
ficomp
pop
adc
aad
call
jp
in
mov
xchg
popf
and
push
movs
adc
jge
cdq
imul
pop
es
dec
(bad)
enter
mov
scas
mov
fild
enter
and
cmp
fld
or
lods
loope
add
sbb
leave
add
aam
mov
imul
stos
add
scas
add
cmp
lock
xchg
push
out
xor
sub
movs
adc
mov
out
test
test
dec
dec
(bad)
fistp
std
push
inc
mov
nop
clc
js
dec
fisubr
stc
and
mov
fcom
mov
pop
push
add
xchg
and
loope
pop
ror
mov
sub
mov
in
test
outs
inc
mov
lods
sbb
leave
das
cs
push
(bad)
sub
dec
in
and
test
call
dec
sub
pop
push
in
xor
ret
push
xlat
jnp
inc
(bad)
push
repnz
sub
cmp
aas
push
fmul
into
ficomp
out
inc
xor
jp
add
jo
sbb
test
cmc
xor
enter
sbb
jg
mov
dec
fcomip
jl
mov
add
inc
fdivr
push
ins
into
(bad)
loope
sbb
lds
rcl
push
loop
call
fisttp
mov
(bad)
in
lea
jmp
nop
dec
cwde
ins
mov
call
fs
cli
inc
pop
arpl
pop
pop
ret
loope
pusha
lock
sub
fwait
movs
cdq
dec
(bad)
jb
sub
(bad)
out
retf
xchg
hlt
int3
pop
mov
dec
or
fcmovb
(bad)
out
loopne
sbb
and
jns
pop
in
inc
aaa
push
pusha
out
push
and
lods
pushf
jge
cdq
loopne
add
xchg
in
movs
and
retf
inc
mov
fstp
sbb
cwde
cmp
rcr
movs
icebp
arpl
mov
loope
out
xor
icebp
lods
xchg
jbe
jmp
xor
loope
xor
jecxz
cmp
pop
cdq
mov
mov
cmp
cmp
or
mov
and
inc
ins
sbb
add
(bad)
shr
mov
(bad)
and
sbb
pop
sub
jl
retf
int3
hlt
fs
in
pop
jge
sbb
mov
fwait
add
fs
aas
pop
push
sbb
jo
xchg
movs
cmp
mov
jmp
inc
sahf
mov
xor
int3
ror
jbe
sahf
adc
(bad)
fdivr
lds
leave
ror
xchg
pop
(bad)
mov
lock
shl
test
or
jb
stos
pop
xchg
test
xchg
cmp
ret
loopne
je
pop
ficomp
addr16
cmps
mov
adc
push
and
mov
pop
add
pop
(bad)
out
and
push
cs
movs
popf
push
add
and
cmp
stos
not
sub
test
xchg
aaa
xor
cli
cmp
and
popa
adc
or
push
mov
inc
add
ret
cdq
jno
mov
call
pop
pushf
sbb
rcl
dec
push
pop
push
fwait
push
jae
cdq
mov
aad
ret
xor
das
pop
pop
jmp
stos
xor
xchg
movntps
push
pop
lock
cwde
int3
xchg
fsub
xor
dec
cld
inc
(bad)
paddd
retf
sti
in
lock
leave
leave
repnz
adc
arpl
or
pushf
and
fnstenv
fadd
mov
(bad)
push
ffreep
in
ja
and
repz
inc
sbb
xchg
jno
jg
mov
jb
fst
dec
sti
clc
push
add
and
and
pop
add
les
test
mov
ja
jecxz
push
sub
in
add
cmps
mov
xchg
into
das
mov
js
xchg
loopne
(bad)
int
cs
mov
gs
loopne
pop
hlt
jnp
push
enter
sub
mov
xchg
inc
sbb
adc
mov
or
ds
(bad)
js
fsubr
dec
add
push
outs
xchg
xchg
shr
and
dec
mov
jmp
push
div
and
cdq
jns
in
and
fild
cs
sar
fadd
add
mov
inc
xor
cmc
popw
push
dec
dec
ja
sbb
sub
inc
enter
fs
mov
cld
jbe
add
mov
add
jp
mov
js
xchg
movs
cmp
mov
push
sub
pop
pop
pop
mov
adc
dec
jae
cmps
fs
add
fisttp
pop
repz
cmps
in
nop
lahf
cli
arpl
out
fsubr
push
data16
fimul
xor
mov
add
mov
enter
stos
dec
mov
sbb
and
adc
ds
mov
push
push
stos
pop
inc
test
jb
aam
icebp
call
arpl
ja
dec
dec
cmps
mov
lds
rol
aas
or
lds
sub
jbe
mov
xchg
lahf
aaa
push
dec
cmp
mov
or
jo
pop
xor
pop
(bad)
stos
call
cmp
xchg
and
mov
fsubr
loope
mov
fisubr
out
lock
(bad)
fimul
je
mov
mov
stc
ficomp
(bad)
outs
outs
mov
ficomp
xchg
and
dec
mov
nop
imul
into
dec
ss
jo
or
push
cmp
sbb
loope
xor
push
movs
xor
sti
into
cdq
inc
iret
dec
xchg
ins
(bad)
(bad)
loope
xchg
or
push
pushf
add
fwait
dec
adc
and
data16
ja
out
jns
xchg
xchg
ins
je
mov
mov
pop
push
xchg
add
push
adc
ret
or
add
jnp
mov
(bad)
mov
mov
sbb
sub
ror
sub
jmp
fild
les
jo
lds
xor
ret
loop
sbb
jmp
or
mov
dec
mov
out
sar
xchg
shl
push
cmp
adc
jno
fnsave
pop
sub
dec
ret
jnp
mov
push
sbb
inc
dec
popa
cdq
popf
cwde
ins
movs
mov
out
in
shr
clc
adc
or
imul
fnstenv
sbb
sar
ins
pop
and
sub
outs
sub
mov
add
imul
mov
std
test
inc
ss
les
xor
mov
push
es
clc
xor
push
mov
mov
mov
adc
push
outs
ja
inc
idiv
pop
stos
movs
leave
push
je
js
and
push
dec
adc
mov
rcl
test
push
into
adc
mov
sbb
or
dec
shr
cmp
push
outs
dec
push
ret
int3
out
mov
push
xchg
xchg
out
or
(bad)
enter
sub
xor
hlt
ja
repnz
fist
pop
dec
jecxz
lahf
icebp
push
pop
or
add
leave
add
gs
sub
xor
test
and
fmul
jne
call
lock
lea
push
mov
add
xor
sbb
mov
ret
ror
(bad)
in
adc
mov
(bad)
sbb
push
mov
xor
xor
(bad)
out
aad
xchg
enter
ret
repnz
loope
push
(bad)
mov
push
out
enter
ss
idiv
es
or
xor
dec
cmc
out
imul
fistp
or
sbb
jb
mov
into
sbb
es
stos
dec
sub
sbb
cmp
sti
daa
stos
rcr
mov
mov
sbb
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
xor
aaa
fs
ja
in
xor
mov
jnp
clc
mov
les
push
bound
inc
scas
rcl
icebp
mov
inc
ds
xor
inc
mov
push
jl
repz
in
mov
and
addr16
(bad)
jns
call
arpl
movs
call
pop
neg
movntps
sbb
add
je
mov
mov
lahf
mov
out
into
aam
(bad)
jp
(bad)
add
stos
test
inc
fcomp
jb
xchg
jg
xchg
inc
aas
add
in
add
mov
and
push
mov
fwait
mov
sub
popa
ret
sbb
pop
adc
repnz
lods
bnd
push
das
pop
cmp
cwde
sub
xor
mov
inc
outs
cld
sbb
ds
add
or
aad
or
ret
xor
jae
sbb
xor
jns
cmp
cwde
mov
std
int3
push
pop
lds
popa
loop
inc
bound
cmp
add
jbe
mov
int3
xchg
add
pop
mov
push
mov
dec
pop
outs
xchg
cld
outs
lahf
sub
xor
jbe
clc
and
pop
test
xchg
test
xor
cmovns
push
adc
add
out
push
jbe
dec
out
add
(bad)
cmps
ja
sub
and
rdpmc
pop
sbb
mov
jmp
popa
outs
fcomp
adc
pop
inc
out
rcr
jno
loope
movs
out
mov
shl
in
mov
adc
leave
outs
sbb
out
jnp
jl
aaa
fdiv
cmp
jle
mov
jb
mov
ss
outs
outs
and
adc
or
repnz
mov
sbb
sub
push
inc
push
loope
sbb
cli
dec
or
jns
stc
pop
popa
js
inc
call
xor
imul
push
jge
sar
out
add
adc
loop
ret
xlat
in
mov
outs
jle
jle
adc
adc
push
rcr
jo
inc
test
lds
mov
cmc
aad
ja
mov
push
push
stos
xchg
mov
imul
call
in
das
inc
xor
push
xor
repz
div
sbb
jae
lea
leave
das
stos
idiv
sti
xchg
daa
pusha
mov
jl
in
jae
pop
mov
ret
mov
xor
data16
pop
inc
sahf
push
addr16
aam
addr16
je
pop
icebp
pop
mov
sar
es
stos
arpl
and
mov
jne
enter
add
xor
loopne
inc
mov
or
adc
out
ins
psubusw
leave
das
into
out
aas
dec
and
push
pop
mov
hlt
mov
or
sbb
ja
push
pop
mov
pop
or
mov
jmp
fiadd
test
ins
or
mov
aad
inc
aad
jno
xor
mov
outs
mov
xor
es
and
push
mov
push
xchg
dec
inc
lods
pop
imul
scas
push
or
(bad)
pop
fwait
ins
cld
and
sbb
icebp
jl
stos
and
cli
(bad)
outs
mov
push
mov
aaa
cmp
mov
mov
mov
push
add
sbb
jp
cmc
mov
or
push
inc
fisubr
sbb
mov
adc
(bad)
adc
or
inc
std
aaa
push
mov
popa
xlat
es
test
dec
jb
bound
(bad)
xor
jb
mov
mov
lods
fidiv
imul
loopne
popa
inc
pop
test
test
mov
mov
sti
mov
ror
bound
jnp
mov
xor
pop
bound
push
arpl
inc
in
std
push
sub
xchg
add
adc
imul
jns
jp
int3
add
xor
in
inc
mov
mov
scas
in
or
addr16
add
repz
lods
mov
push
mov
in
sahf
sub
inc
out
mov
mov
mov
in
add
imul
lock
xor
shr
shr
xor
cmp
aad
push
mov
mov
add
adc
(bad)
xchg
pop
mov
nop
dec
lea
cmp
mov
mov
add
mov
test
sub
mov
nop
loopne
and
cmp
dec
ret
mov
test
enter
pop
enter
add
lods
addr16
push
das
mov
dec
fmul
jne
sbb
stos
cmps
sub
cmc
or
or
add
outs
xlat
pop
jns
fcmovbe
mov
es
dec
mov
inc
xor
xchg
xor
mov
cmp
jmp
push
retf
out
aaa
sbb
hlt
pop
aam
mov
ret
fucomp
movs
(bad)
mov
jns
xchg
cli
(bad)
cmp
and
xor
and
sar
ins
(bad)
repz
cmp
out
movs
std
add
fisttp
and
or
pop
push
mov
sbb
lock
mov
iret
test
jns
sbb
mov
mov
repz
sbb
add
aas
push
test
cmp
xlat
mov
sbb
rcl
inc
(bad)
and
sbb
scas
sub
bound
jbe
bound
jo
into
leave
push
rcr
(bad)
rcl
adc
outs
call
dec
(bad)
fisttp
pop
rol
cmc
test
mov
add
jbe
retf
js
push
int
mov
ror
add
in
mov
push
adc
out
(bad)
(bad)
cmp
mov
ret
shl
cld
into
push
ret
mov
(bad)
in
ss
dec
aaa
imul
lock
repnz
pop
pop
mov
xchg
and
add
sti
mov
mov
mov
adc
mov
mov
mov
mov
out
nop
push
adc
stos
fild
mov
arpl
rcl
cmp
push
mov
adc
pop
fstp
mov
ja
popa
in
and
stos
rcr
iret
outs
inc
call
not
loop
fs
or
sbb
adc
in
cs
jle
call
add
(bad)
jmp
dec
test
int
shl
jmp
iret
ss
mov
mov
xor
xchg
test
jle
jl
xor
mov
add
jl
test
add
inc
cmp
mov
mov
xchg
jmp
pop
add
adc
jae
pop
mov
push
and
jne
sub
popa
or
clc
stc
fistp
prefetcht2
in
xlat
pop
sub
and
cmps
out
xor
dec
mov
xchg
adc
sub
cmp
cwde
test
aaa
jb
stos
ret
lods
das
pop
iret
je
pop
jmp
pop
mov
push
push
add
jle
xchg
cdq
ss
cwde
repz
aas
jns
mov
gs
pop
call
or
hlt
push
push
push
cmp
idiv
cwde
jno
cmp
in
mov
aas
sub
adc
fwait
popa
add
mov
jnp
(bad)
xor
sbb
jno
(bad)
dec
idiv
adc
cmc
dec
cld
rcl
xchg
mov
adc
xchg
inc
sti
jnp
adc
mov
jae
inc
cmp
scas
push
xchg
call
sbb
mov
add
jmp
(bad)
retf
mov
mov
inc
adc
jmp
cwde
(bad)
imul
and
sub
rcl
pushf
cwde
add
add
scas
push
add
(bad)
push
jle
xchg
push
push
dec
push
pop
xor
xlat
je
mov
aad
push
mov
xchg
add
xchg
inc
sti
adc
cmc
aas
jmp
adc
enter
fisub
cmps
jle
lea
loope
pop
gs
mov
in
bound
dec
dec
or
xchg
cld
lods
pusha
or
out
movs
adc
or
adc
dec
adc
or
or
push
push
ror
test
jmp
or
mov
push
mov
out
inc
js
rcl
ror
add
rcl
pop
ja
call
or
or
iret
out
adc
xchg
popa
jnp
mov
xchg
cs
cmp
mov
daa
ret
adc
aam
ja
sbb
stos
xchg
imul
fadd
add
adc
dec
lea
mov
inc
sbb
lods
push
jl
pop
sti
pop
xchg
mov
xor
in
into
add
repz
cmps
popf
ins
nop
xchg
jbe
adc
js
add
mov
lods
inc
gs
neg
add
iret
popf
cli
cmp
shl
xchg
mov
call
nop
jae
nop
adc
retf
bound
out
cs
outs
push
lock
pop
push
pop
adc
loope
out
push
data16
mov
mov
push
sub
stos
or
jne
adc
vzeroall
xlat
inc
mov
xchg
movs
sbb
push
fwait
mov
add
add
loop
and
adc
xchg
push
pop
dec
popf
fsub
fnstcw
sub
cmps
jg
push
mov
fs
cld
jge
mov
pop
cmp
cdq
in
adc
jg
push
push
call
js
neg
xchg
lods
adc
xchg
jnp
sti
jge
mov
ins
imul
mov
retf
sub
mov
(bad)
jl
pop
call
call
jne
gs
sbb
data16
adc
adc
xor
sub
jae
and
or
iret
enter
or
xor
pop
fisubr
push
xchg
test
sub
adc
fidiv
cmc
mov
mov
cmp
loope
push
push
aaa
les
sub
popa
test
pop
dec
mov
inc
sub
out
loop
mov
imul
unpcklps
dec
dec
mov
cmp
xchg
(bad)
stc
ret
mov
pop
inc
test
and
sbb
add
or
cmp
pop
or
movs
mov
jmp
jge
and
(bad)
cli
into
popa
loope
fcmovbe
sub
movs
jmp
cld
mov
repnz
cmp
(bad)
jl
mov
cmp
sub
xchg
pop
es
rcl
lods
or
mov
outs
jmp
add
add
aas
dec
xlat
mov
add
add
sub
pop
cmp
mov
fist
pop
popf
aaa
ins
enter
fadd
sub
jns
pop
mov
sub
and
cmp
mov
aas
out
inc
push
mov
mov
je
sbb
in
inc
js
in
test
icebp
ja
dec
xor
push
movs
icebp
aas
inc
pop
ss
and
call
sub
mov
dec
imul
sbb
les
inc
inc
dec
enter
mov
xchg
shl
and
lods
in
push
dec
mov
pusha
adc
mov
or
add
int
pop
out
sbb
test
test
inc
add
jp
lds
arpl
mov
sbb
fnstsw
xlat
adc
mov
enter
inc
retf
loopne
repnz
pop
int3
or
or
pop
sub
push
inc
cdq
push
or
je
in
out
and
outs
mov
sub
dec
xchg
in
clc
in
push
shr
(bad)
imul
(bad)
mov
dec
add
sbb
jl
icebp
inc
stos
setl
mov
mov
imul
dec
mov
enter
dec
je
ficom
mov
in
and
ret
xor
adc
mov
out
mov
pop
mov
mov
pop
cmp
mov
fdivp
das
test
push
loop
cmps
fidiv
dec
pop
jb
push
jbe
arpl
ds
cmps
add
xor
fisub
fsubp
js
ret
mov
es
cmp
push
jbe
repz
iret
scas
mov
pop
icebp
sbb
push
fmul
nop
mov
addr16
out
pop
fst
xor
in
mov
push
mov
push
loope
fisttp
and
jns
inc
mov
and
push
cmp
es
hlt
dec
in
pop
stos
ss
mov
push
inc
and
js
mov
cs
sub
add
sub
push
pop
jmp
repnz
in
mov
cli
inc
mov
and
and
mov
or
add
fstp
repnz
push
cmps
jbe
call
cs
mov
scas
mov
xor
and
fild
pop
hlt
int3
cmps
cmp
jecxz
out
arpl
sbb
cmp
stc
iret
push
adc
ins
retf
mov
lds
int
cld
mov
or
pop
out
push
push
sbb
adc
xor
push
stos
lahf
fsub
jne
aaa
ds
push
push
dec
xor
jmp
mov
(bad)
jp
ins
ret
stos
loop
mov
jl
mov
mov
(bad)
test
pop
push
jno
add
and
add
ss
adc
pop
cld
scas
cmp
movs
rcr
(bad)
shr
sub
ret
idiv
mov
or
ds
imul
shl
jg
jno
pop
scas
adc
cwde
ret
test
lock
or
xor
push
jns
xchg
jmp
test
retf
fldcw
jecxz
(bad)
cld
pusha
dec
(bad)
or
push
mov
add
outs
mov
mov
icebp
push
inc
ins
sbb
or
lea
jle
int
jle
les
pop
(bad)
pop
pusha
jge
mov
inc
adc
push
dec
mov
in
mov
fmul
xchg
mov
cs
jle
dec
dec
jns
dec
push
enter
add
mov
mov
xchg
mov
movs
and
lea
std
inc
fiadd
inc
rcr
and
sbb
sbb
popf
movnti
mov
scas
into
xor
gs
xchg
xor
xchg
add
or
punpckhdq
adc
int
sbb
cmp
cmp
mov
inc
xor
je
repnz
pop
xor
xchg
cmp
cmp
cdq
xor
loope
mov
add
cli
dec
xor
ret
clc
jmp
loope
xor
mov
mov
ja
adc
ror
int3
inc
jmp
or
call
add
pop
cld
adc
fdiv
cmp
sub
movs
sbb
jle
pop
in
in
mov
sti
stos
mov
stc
sbb
sub
lods
ja
neg
push
xchg
xchg
mov
jmp
mov
mov
sub
xchg
out
add
mov
xchg
in
jp
xchg
lds
in
xor
jmp
jnp
push
adc
(bad)
mov
pop
int
fsin
addr16
jo
dec
add
(bad)
dec
mov
push
rcl
push
imul
xchg
mov
mov
les
outs
cli
jne
leave
ss
int
out
inc
dec
sar
ja
xchg
inc
mov
jnp
push
jmp
mov
test
scas
sti
pop
lds
lahf
add
mov
xor
mov
imul
add
dec
adc
cdq
mov
jb
sub
pop
xor
enter
repz
ja
xchg
fs
mov
adc
adc
pop
jmp
fmul
jg
int3
and
out
jne
pop
rcl
jo
mov
sub
aam
ret
retf
dec
mov
cmp
fld
repz
or
enter
aas
out
dec
dec
(bad)
int
neg
(bad)
lock
(bad)
mov
pop
pusha
push
add
test
xrelease
inc
add
xchg
mov
cmp
lahf
shl
sbb
add
cmp
and
jle
loop
sub
inc
lods
std
push
sub
in
(bad)
std
mov
adc
sbb
pop
sub
dec
stos
call
cmp
dec
movs
push
adc
adc
mov
fsub
push
dec
adc
in
into
mov
jo
cmps
jbe
test
ss
pop
sub
aam
pop
xor
out
sbb
lods
rep
cmp
dec
xor
jg
in
add
mov
push
cmp
verr
xor
mov
xchg
push
clc
adc
ss
mov
jmp
mov
out
dec
enter
addr16
addr16
push
mov
mov
or
ret
ds
fdiv
ss
jo
xchg
xchg
adc
sub
mov
dec
imul
jo
inc
mov
dec
popa
ins
aam
cmp
ja
inc
fdivr
pusha
cmp
mov
in
fistp
jo
add
inc
test
(bad)
das
out
mov
movs
jmp
mov
imul
add
jmp
in
cmp
xchg
(bad)
dec
pop
punpckldq
loope
hlt
add
sbb
gs
sub
ins
repnz
js
loope
mov
add
retf
sti
or
adc
and
pop
sub
pop
shl
and
jg
inc
lahf
dec
jbe
xchg
mov
push
xchg
into
and
das
and
inc
pop
pop
or
sbb
cdq
setae
xchg
pushf
xchg
jle
push
push
jo
cdq
loop
xchg
jmp
mov
aam
xor
sbb
and
mov
cmp
rol
mov
sbb
mov
jno
add
clc
jmp
outs
mov
add
push
outs
adc
xchg
es
cld
lahf
mov
in
add
sbb
call
in
add
or
mov
mov
add
fs
sar
(bad)
push
inc
push
sbb
inc
mov
inc
icebp
or
mov
xor
sti
push
std
mov
jnp
ins
mov
dec
xchg
jmp
test
push
out
jmp
mov
rcr
adc
loopne
(bad)
scas
call
test
(bad)
dec
mov
ss
xor
sbb
div
ja
inc
mov
cwde
mov
mov
jg
fcom
nop
bound
(bad)
jo
mov
mov
push
xchg
dec
xor
cmp
add
xor
fidiv
cwde
inc
push
cmp
in
inc
(bad)
rcl
mov
pop
push
mov
inc
cwde
dec
cs
mov
dec
mov
adc
adc
xchg
loopne
inc
popa
out
adc
rcr
xor
enter
xor
mov
xchg
retf
add
rcr
mov
adc
bound
jmp
sub
mov
xchg
retf
in
or
pusha
adc
int
fisttp
dec
fstp
push
jmp
nop
add
xchg
inc
adc
cmp
xchg
stos
mov
sbb
(bad)
sub
outs
int
(bad)
daa
push
jge
in
mov
leave
xchg
pop
mov
sti
test
pop
sbb
inc
bound
pop
imul
add
mov
hlt
shr
fwait
xchg
inc
dec
aas
add
cmp
sahf
movs
xlat
hlt
imul
movq
and
pop
mov
cmc
push
loopne
pop
mov
sbb
(bad)
fld
jbe
retf
loop
rcl
adc
data16
jno
(bad)
cli
add
clts
retf
test
ja
and
add
fst
add
mov
cmc
adc
cmp
es
ror
mov
je
bound
add
mov
(bad)
dec
cmp
jbe
frstor
mov
push
mov
xchg
mov
out
imul
mov
outs
popf
jns
adc
(bad)
in
call
aas
les
pop
(bad)
cmp
ss
in
sub
push
outs
push
leave
out
movs
jb
(bad)
or
(bad)
jno
iretw
ja
xchg
cmp
int3
mov
and
stos
aam
cmc
popf
(bad)
out
or
fisub
inc
cmp
outs
push
xchg
rcr
lahf
or
push
mov
pop
lods
std
pushf
sub
and
(bad)
jl
stos
(bad)
push
dec
jne
push
or
(bad)
push
out
lds
mov
aaa
push
mov
lea
ss
lds
push
xchg
xchg
cmp
mov
jne
ss
inc
xor
inc
ret
out
or
aad
cwde
mov
mov
mov
pop
add
movs
push
jb
imul
cmp
jb
add
out
daa
xchg
nop
mov
stos
mov
out
mov
or
js
(bad)
icebp
xchg
push
xchg
mov
pop
aaa
shr
loope
repnz
or
sub
cmp
neg
sbb
push
(bad)
mov
in
mov
xor
or
and
xchg
push
push
pushf
pusha
add
ins
and
dec
mov
cmp
nop
dec
nop
leave
lods
jle
push
mov
clc
push
ja
inc
ds
jne
dec
push
dec
fsubr
stc
mov
stos
arpl
in
sbb
dec
push
sahf
and
mov
nop
ror
jne
adc
push
cwd
sbb
push
push
push
adc
xchg
xor
sub
push
lods
jmp
and
psubsw
aad
loop
sbb
or
push
pop
into
pop
out
add
mov
push
es
stos
mov
retf
scas
mov
add
mov
sbb
add
js
sub
arpl
sbb
aas
scas
fisub
stc
scas
sbb
imul
mov
push
mov
movs
jo
sub
fbld
call
sub
jle
adc
jb
cmps
cdq
cs
(bad)
fdiv
fucomip
lahf
push
(bad)
sahf
in
or
(bad)
add
mov
add
mov
jp
pop
and
rol
dec
inc
ret
fcomp
or
shl
shl
push
jg
sub
lods
mov
das
js
leave
fnsave
jmp
pop
push
lahf
xlat
add
dec
adc
stos
fisttp
cwde
mov
(bad)
sbb
push
daa
xor
sahf
jmp
xor
adc
sub
lods
jmp
fistp
xchg
loop
loop
aad
mov
loop
or
cmp
jmp
pop
cmps
js
jnp
ffree
ret
mov
add
sbb
mov
ins
push
inc
(bad)
jmp
into
ja
inc
pushf
pop
pop
pop
xor
enter
ret
sbb
arpl
xchg
mov
mov
pop
ret
in
in
adc
cmp
nop
dec
cld
inc
div
dec
xchg
fwait
jl
cwde
scas
or
fnstsw
or
fsub
inc
fisub
mov
cmp
test
mov
mov
cmps
sub
shl
inc
stos
popa
imul
dec
(bad)
fsubr
add
aaa
add
int3
out
out
pop
(bad)
popf
imul
add
sbb
push
cmps
cmps
pop
add
ds
shl
lock
xchg
dec
(bad)
test
pop
out
lods
cwde
jb
aas
fisttp
dec
xchg
test
daa
xor
pop
arpl
loop
push
xor
xor
sahf
loop
cmp
outs
nop
mul
int
into
out
xchg
(bad)
mov
push
das
xchg
sbb
dec
popa
aam
inc
xchg
jecxz
(bad)
shr
in
push
rcr
jbe
jbe
dec
cmp
mov
(bad)
fcmovne
jmp
cmps
sbb
pop
mov
fidivr
push
inc
pop
cmc
xchg
inc
adc
neg
ret
pop
xchg
cdq
add
lock
mov
jmp
mov
xchg
aaa
xchg
sub
inc
clc
nop
dec
addr16
add
mov
adc
out
mov
adc
pop
popa
push
repnz
cmp
xor
and
icebp
inc
ret
xchg
in
inc
clc
hlt
movs
mov
pushf
pop
hlt
inc
call
jge
or
ds
sbb
lea
mov
inc
jp
pop
outs
sbb
test
xor
jl
es
mov
or
in
jl
pusha
mov
cli
sbb
or
rcr
pop
push
rcr
inc
mov
pop
fincstp
or
jno
imul
cmps
inc
pushf
jns
jo
ss
(bad)
idiv
std
clc
adc
je
(bad)
xor
cmp
adc
sahf
das
stos
dec
rcr
adc
xacquire
xchg
je
add
lods
jp
pusha
jmp
xor
xor
cmp
scas
repnz
pop
jp
loop
je
cmp
(bad)
ret
xor
fld
int
lds
cmp
add
push
cwde
mov
and
mov
jmp
gs
ret
sbb
stc
jecxz
inc
and
loope
loopne
sbb
mov
iret
xor
and
push
add
push
ret
aam
and
add
call
dec
repnz
sub
daa
push
das
or
je
call
sub
inc
pop
xchg
xchg
inc
inc
(bad)
jnp
pop
jbe
leave
mov
xchg
and
jmp
adc
sub
popa
mov
ret
jne
add
adc
stos
mov
xor
cmc
into
push
cmp
push
jp
cmc
es
lock
ja
pushf
addr16
jle
mov
add
pop
int
sub
mov
jmp
lods
mov
add
addr16
call
lock
frstor
mov
das
mov
arpl
je
add
fsubr
sub
iret
in
inc
add
(bad)
cwde
lea
jnp
mov
push
pushf
xchg
(bad)
mov
in
lock
xor
jmp
cs
cmps
pusha
minps
fild
cmp
cmp
dec
lahf
ins
loope
jmp
jnp
push
shr
out
fsub
adc
pop
jl
jp
push
mov
les
and
lods
adc
push
(bad)
data16
mov
mov
or
arpl
stos
mov
pusha
xor
and
add
adc
adc
addr16
pushf
xchg
repz
(bad)
jo
out
xchg
mov
push
imul
inc
cdq
push
mov
push
jmp
or
cmp
mov
sti
pop
xor
xor
or
addr16
hlt
bound
iret
mov
adc
es
(bad)
push
pop
bound
lds
xor
push
neg
cmps
movs
mov
fdiv
xchg
(bad)
dec
push
stc
rcl
jg
lods
rol
mov
mov
mov
or
and
leave
mov
fst
pop
std
mov
icebp
je
push
sub
addr16
(bad)
push
rcr
dec
rcl
gs
sbb
js
jbe
sbb
sar
cmps
push
inc
lds
shl
cmp
add
cli
xchg
sub
test
jmp
sahf
add
push
gs
sub
fdivr
call
mov
(bad)
cmp
mov
test
jbe
scas
xchg
jecxz
xor
jnp
jge
adc
add
data16
mov
jmp
sbb
(bad)
int3
sub
dec
xor
push
fidiv
inc
mov
dec
les
scas
lds
jle
xor
adc
mov
aas
das
adc
repz
movlps
nop
aam
leave
mov
popa
add
inc
cli
(bad)
xchg
dec
jge
outs
aaa
movs
mov
pop
lock
fs
jne
retf
repnz
addr16
fcomp
or
lock
or
cmc
mov
add
repnz
sti
xchg
mov
ss
ror
jle
mov
inc
push
arpl
lds
repz
jecxz
call
or
out
sub
cli
cmp
cld
or
push
inc
jbe
mov
pop
inc
sub
push
sbb
fldenv
pusha
mov
ud1
clc
jecxz
inc
mov
repnz
dec
nop
jg
(bad)
jl
xchg
jb
loope
prefetch
sahf
(bad)
pop
pop
inc
fstp
jmp
xchg
jo
pop
in
repz
sahf
clc
cmp
pop
xor
and
(bad)
mov
stos
or
pop
fbstp
mov
(bad)
mov
movs
pop
lods
aam
or
cmc
sbb
sbb
rol
retf
mov
push
dec
aaa
xchg
out
nop
push
pop
lock
pop
cmp
daa
xlat
nop
jbe
movs
dec
dec
sbb
sbb
loopne
test
es
jle
mov
mov
push
push
xchg
ret
xchg
push
push
and
(bad)
(bad)
mov
adc
out
xchg
xchg
pop
repnz
rcr
iret
xor
mov
push
aas
ficomp
mov
out
mov
jno
in
jecxz
shl
cli
in
(bad)
push
lds
pop
loop
sbb
sub
jo
rcl
and
dec
test
add
jno
push
lock
fcom
in
add
sbb
mov
xor
repnz
and
(bad)
std
cmp
sub
in
dec
push
fs
outs
jne
jmp
daa
movs
sbb
push
das
and
out
out
cdq
adc
dec
pop
add
jecxz
test
mov
std
or
mov
ja
ror
icebp
punpcklbw
push
popa
jecxz
div
push
mov
add
mov
and
mov
cmp
scas
mov
popf
imul
adc
cmps
jge
adc
pop
xchg
int3
aam
ror
lock
repnz
inc
jmp
fistp
cmp
adc
dec
ret
mov
mov
fsub
xor
add
retf
mov
dec
mov
fnstenv
aam
hlt
dec
cmp
lods
cli
pop
mov
(bad)
dec
cmp
xor
sub
stos
mov
ficom
inc
hlt
mov
xor
es
into
push
lea
mov
cmp
das
xor
lds
into
sub
aaa
or
call
inc
mov
loope
dec
push
movs
aad
inc
mov
xlat
clc
dec
out
ds
pop
inc
mov
mov
cmp
in
xor
xchg
pop
retf
(bad)
cmp
xor
xchg
repnz
jle
pop
push
sub
leave
test
adc
icebp
icebp
sbb
mov
adc
jmp
sahf
les
xchg
or
mov
fistp
mov
dec
scas
fdiv
movs
repnz
ss
aam
cwde
sbb
mov
push
mov
dec
or
pop
xchg
jecxz
mov
jp
stc
mov
call
clc
or
xor
cmps
leave
movs
stos
push
in
fimul
push
cmp
mov
and
xchg
ret
and
jmp
cmps
and
xor
xor
inc
out
or
pop
pop
shl
pusha
out
add
jo
jns
ss
iret
mov
sub
push
pop
xchg
(bad)
sub
sub
fnstenv
inc
pop
cmp
daa
in
das
mov
adc
mov
dec
inc
lock
or
inc
test
popa
dec
test
jmp
xor
cmp
push
fist
loopne
mov
fcomp
dec
(bad)
aad
xchg
fwait
out
out
mov
aaa
jnp
out
jmp
fnstcw
lods
jl
xchg
mov
xchg
aas
sbb
sti
dec
sahf
pop
or
push
mov
(bad)
in
adc
rcr
adc
ins
fwait
daa
sbb
in
int
cmps
jbe
cmc
dec
add
loopne
and
test
or
jmp
mov
cs
hlt
mov
das
jne
push
test
sub
mov
pop
mov
stc
ffreep
add
xchg
pop
dec
fisub
xchg
test
cmp
sbb
jmp
fcomp
mov
push
mov
mov
fwait
std
aam
bound
dec
or
mov
stc
jl
push
xchg
shl
dec
push
(bad)
pop
add
mov
loopne
idiv
mov
adc
inc
rcl
push
push
sti
cmp
mov
cmps
daa
iret
mov
jnp
add
xchg
shl
add
popa
xchg
dec
data16
jbe
dec
into
in
or
add
cli
in
and
test
adc
dec
js
push
cmp
push
call
clc
jp
xchg
(bad)
jae
dec
sbb
pop
xchg
fist
dec
not
add
cs
cmp
sbb
or
fcom
test
pop
cli
std
daa
add
inc
cmc
into
add
mov
fs
(bad)
xchg
and
xchg
dec
mov
push
mov
mov
(bad)
les
mov
jo
shl
or
je
sub
sbb
test
push
jmp
mov
ret
adc
in
movs
loop
sbb
add
sbb
mov
and
jmp
into
mov
lock
xlat
mov
xchg
mov
adc
es
xor
adc
xchg
mov
push
sub
sbb
xchg
pop
clc
jb
cli
pop
das
call
cli
xchg
je
(bad)
fbstp
ret
lods
xchg
(bad)
js
and
aaa
mov
push
outs
jne
jl
loop
add
std
ror
(bad)
jle
ret
mov
mov
jbe
int3
jne
add
mov
repnz
call
or
pop
ins
(bad)
cld
int
jb
adc
popf
out
pop
mov
out
sbb
sar
push
aaa
int3
icebp
mov
jo
jg
dec
cdq
push
add
xchg
cmps
or
mov
bound
dec
inc
adc
pop
call
mov
(bad)
ds
cwde
ja
lods
inc
popa
pop
mov
sbb
idiv
scas
sahf
imul
lock
ss
and
push
cli
in
in
push
shr
es
mov
test
xor
xchg
icebp
push
cmps
dec
add
push
pop
push
outs
and
push
lock
or
imul
rol
sar
mov
sub
rcl
mov
(bad)
mov
mov
push
clc
lds
shl
scas
lods
mov
xchg
cmp
aaa
dec
(bad)
cmp
add
jl
int
mov
cmc
cmp
mov
imul
xor
jb
mov
add
out
dec
or
in
push
mov
adc
aas
inc
outs
movs
push
cmp
test
mov
mov
std
fcmovu
int3
jg
sbb
fimul
cmp
jo
(bad)
(bad)
xchg
mov
std
loope
scas
fs
jl
or
les
mov
or
and
push
mov
ret
xchg
les
outs
js
fisub
mov
(bad)
out
mov
or
outs
cmp
cmp
pop
push
cmp
enter
pop
jns
adc
cmp
ja
es
sbb
xor
or
dec
in
push
push
in
shl
mov
or
mov
push
movs
out
jbe
jae
dec
call
(bad)
or
cld
sbb
stos
addr16
jge
cmc
mov
iret
pushf
dec
xchg
jbe
fdivr
adc
ja
add
jp
xchg
out
movs
cmc
outs
repnz
or
rcr
sub
cmp
popa
jns
add
mov
dec
jg
push
sbb
stos
test
sub
mov
sbb
fld
add
gs
cli
iret
dec
arpl
inc
pop
jp
fdivr
cmc
cmp
(bad)
icebp
pop
cwde
cld
ret
jmp
sbb
out
cli
jge
inc
(bad)
sbb
push
mov
and
xor
mov
neg
loope
test
mov
mov
mov
fwait
add
jno
inc
(bad)
lahf
(bad)
pushf
ret
addr16
xor
cmp
pop
cld
mov
call
ins
movs
pop
mov
jb
push
das
mov
mov
ins
ins
in
cld
jp
fadd
sahf
xor
xchg
xchg
and
mov
sbb
add
fiadd
push
sub
push
cmp
sub
or
dec
push
movs
lods
sar
stc
popf
retf
sub
test
push
sub
sub
adc
ja
lahf
pop
sar
imul
sbb
cmps
adc
mov
jae
popf
or
ds
retf
adc
mov
pop
xchg
push
mov
in
add
push
retf
(bad)
in
fidivr
mov
mov
mov
jmp
out
adc
pushf
jae
(bad)
push
fcom
out
bnd
idiv
xchg
add
stc
loope
in
aam
pop
inc
push
mul
inc
mov
loop
cmp
jecxz
cwd
imul
add
iret
stos
ins
outs
add
push
pop
xchg
add
sub
xor
mov
push
mov
xchg
xor
sbb
jns
sbb
sbb
cdq
out
lahf
lock
(bad)
jo
data16
mov
lea
push
icebp
and
stc
in
sbb
push
fisub
or
and
push
dec
mov
mov
(bad)
mov
das
or
xchg
(bad)
shl
dec
xchg
aad
add
or
pop
adc
retf
cmp
iret
pop
inc
push
pop
mov
js
dec
xor
bound
xor
stos
sbb
ficom
jg
cmp
mov
push
mov
movs
ins
leave
and
mov
jg
add
dec
mov
push
mov
jbe
push
push
jns
cld
adc
movs
jmp
cwde
pop
test
les
and
jge
jbe
hlt
je
jns
jne
jno
xor
out
daa
cwde
push
xchg
fidivr
mov
fimul
mov
push
mov
push
jl
outs
inc
mov
dec
repz
or
les
iret
inc
sbb
or
movs
adc
lahf
stos
lahf
jecxz
fst
jl
imul
pop
pushf
(bad)
or
or
pop
mov
xor
lea
call
sbb
dec
jle
mov
movs
mov
dec
sub
xchg
xor
sbb
lods
mov
add
(bad)
cli
sbb
fld
retf
add
and
enter
mov
es
push
scas
mov
sar
pop
ret
in
xlat
mov
stos
inc
xor
test
or
or
pop
test
sub
(bad)
jns
cmps
jae
fild
mov
push
cli
xchg
ret
call
arpl
shl
mov
inc
pop
mov
xchg
mov
repz
les
je
add
lahf
fwait
sbb
sbb
mov
hlt
cmp
(bad)
ds
jae
(bad)
push
in
push
lahf
push
in
mov
in
in
pop
push
fnstenv
and
rcr
sub
xchg
mov
dec
rcr
pop
clc
call
push
jns
ss
xchg
push
mov
aaa
pop
call
jns
in
or
inc
cld
push
dec
pop
mul
repnz
bound
pop
fst
cwde
jo
adc
add
dec
movs
ffree
inc
frstor
mov
cmp
aas
out
adc
mov
adc
or
adc
dec
std
out
or
pop
jbe
fcomp
mov
pop
inc
add
call
fbstp
stos
add
xor
mov
or
jno
inc
add
jmp
outs
mov
ror
or
jb
int3
mov
pop
ror
xor
and
mov
push
das
cdq
mov
pop
jo
out
das
push
xchg
adc
rcr
jbe
ss
movs
sub
je
push
jo
and
je
and
cmp
jmp
je
popf
mov
daa
imul
adc
jp
and
imul
xchg
mov
movs
xlat
test
inc
sbb
aaa
aam
jb
and
stc
out
out
cmps
cmp
add
repnz
mov
(bad)
dec
sub
(bad)
popa
jl
lds
dec
scas
adc
push
inc
and
add
mov
jbe
jmp
repz
mov
xchg
or
adc
scas
test
push
cmp
clc
test
out
aad
shl
iret
sbb
mov
das
sub
mov
push
xor
inc
lock
(bad)
cmp
jmp
dec
stc
sub
jle
cmp
jnp
dec
add
and
hlt
mov
out
xor
mov
jg
inc
cmps
stos
sbb
sbb
das
test
ss
iret
and
add
mov
or
jecxz
sub
stos
movs
xor
xor
sub
jbe
(bad)
stc
and
mov
fsubp
fild
rcr
or
sub
mov
scas
mov
mov
cmp
nop
push
mov
dec
mov
scas
push
ins
add
add
xchg
outs
ds
ds
sub
aaa
inc
xchg
jecxz
mov
xor
repz
lock
out
loope
imul
jnp
jno
pop
sbb
movs
sahf
sub
xchg
push
dec
mov
add
mov
retf
mov
test
(bad)
std
in
inc
add
inc
iret
adc
cmp
add
pop
mov
or
mul
daa
js
nop
int
jne
mov
ror
or
test
scas
push
pop
mov
jp
lock
inc
cdq
adc
and
xor
and
lea
lods
push
inc
xor
leave
(bad)
leave
mov
out
inc
leave
jne
mov
cmps
jge
cdq
or
dec
pcmpeqd
addr16
retf
jnp
or
mov
std
test
pusha
repnz
shl
je
loop
push
add
(bad)
cmp
lahf
or
mov
jne
outs
xchg
or
mov
add
dec
push
mov
mov
xor
dec
sub
in
btr
add
daa
gs
test
int
(bad)
jns
in
fucomp
or
sub
and
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
jbe
add
jmp
out
not
addr16
and
push
retf
aaa
and
inc
dec
out
adc
xchg
in
aas
call
sub
xor
and
aaa
cmps
not
fistp
pop
adc
or
pop
fcomp
bound
xor
in
pop
mov
sbb
stos
(bad)
out
jnp
(bad)
jo
adc
sbb
(bad)
lods
es
jae
into
ds
push
cmp
test
test
int
adc
fmul
mov
out
push
in
pop
cdq
push
and
and
out
imul
cmp
cmp
add
in
lea
cmps
(bad)
mov
add
jne
xchg
(bad)
call
dec
sub
inc
add
lds
push
push
popa
inc
jnp
sub
push
jmp
ins
idiv
rcr
mov
pop
cs
pop
mov
pop
jp
and
aad
inc
sub
pop
fcomi
xor
ret
inc
rcr
cmp
pop
xchg
in
jg
inc
jno
or
loope
out
std
sbb
call
out
add
dec
fistp
add
repnz
push
or
jecxz
ret
dec
aaa
jg
cmc
test
ds
cdq
jmp
popf
mov
sub
ds
lods
cli
out
inc
(bad)
jp
jge
loopne
push
pop
jns
sub
es
fnstenv
adc
imul
pop
cmc
shl
sbb
jae
jb
dec
fdivr
jge
dec
rol
sar
ins
in
mov
and
xchg
cld
and
jns
test
loop
push
les
jmp
pop
pop
cmp
into
in
push
movs
je
sub
jle
pop
in
ss
add
mov
dec
mov
(bad)
in
mov
add
outs
jnp
xchg
adc
xor
xor
sub
jl
les
call
int
xor
inc
sbb
outs
xchg
movs
add
pop
iret
xchg
xchg
mov
repz
cmp
mov
adc
movs
mov
pusha
adc
movs
in
cmp
test
test
js
push
dec
pushf
rcr
sub
ret
jle
out
pushf
ins
push
cmc
or
emms
pop
or
scas
stos
repz
lock
mov
xchg
mov
hlt
pop
xchg
mov
mov
lds
adc
stos
adc
jbe
lock
xchg
mov
sub
gs
ds
ficomp
adc
(bad)
leave
cmp
ror
(bad)
scas
sar
(bad)
jb
and
repz
push
add
(bad)
and
test
push
sub
pop
arpl
lods
mov
out
nop
lahf
push
lock
xchg
jae
lods
sub
ds
pop
adc
popa
jmp
jnp
jp
enter
in
out
lea
adc
pop
bound
fwait
xchg
sub
xor
(bad)
adc
fs
push
fild
jle
retf
retf
adc
add
mov
sbb
push
std
les
aas
shl
mov
rcl
icebp
and
sbb
ret
inc
call
cmp
repz
mov
ss
mov
mov
mov
inc
in
adc
aam
add
repnz
xor
pop
jp
mov
mov
fdivr
retf
and
jo
gs
xor
outs
aas
dec
dec
mov
jae
ret
je
or
pop
cmp
imul
cs
lods
inc
xlat
popf
out
inc
outs
stos
leave
inc
xor
int3
mov
xchg
pmulhw
sbb
or
repnz
xchg
mov
push
push
sbb
jmp
sbb
leave
sbb
mov
test
pop
mov
and
or
call
and
fdiv
arpl
pop
ret
aad
sar
out
or
(bad)
push
adc
cmp
jle
lods
retf
stos
mov
gs
rcl
(bad)
hlt
sub
cmp
mov
xchg
pop
push
(bad)
leave
pushf
test
fstp
adc
sti
(bad)
sub
push
push
in
rcl
cmc
test
jo
add
in
add
dec
popf
cmp
les
out
xchg
dec
inc
sub
jmp
jge
sbb
scas
out
shl
cmc
xchg
push
xchg
mov
push
and
sbb
sub
dec
xor
adc
xor
xor
gs
and
mov
mov
adc
adc
jg
adc
pop
add
push
inc
ficom
out
pop
pop
mov
jg
xchg
add
int
call
xchg
push
sahf
movd
xchg
inc
aaa
retf
or
pop
int
and
popa
ds
push
mov
fwait
mov
add
rcl
(bad)
sti
jnp
inc
(bad)
pop
adc
lods
pop
in
jnp
push
dec
dec
mov
adc
inc
out
cmp
mov
fild
(bad)
imul
popf
and
dec
mov
push
outs
mov
pop
xabort
bound
sbb
jae
push
and
fisubr
xchg
call
add
inc
out
movs
add
pop
pop
es
or
repz
xor
push
inc
test
fmul
outs
inc
inc
xchg
(bad)
adc
jnp
cmp
mov
jno
test
jae
inc
iret
mov
int
or
sbb
add
(bad)
fidivr
or
dec
je
ficomp
in
push
cmp
mov
icebp
mov
pop
imul
not
(bad)
push
out
and
cmp
rol
fs
mov
push
scas
js
stos
sub
push
ss
pop
dec
jl
jnp
icebp
std
adc
jne
inc
mov
add
shl
cmp
adc
push
dec
inc
loope
aam
adc
push
into
neg
rol
inc
mov
xor
jmp
mov
outs
retf
xchg
bound
fsubrp
popa
mov
mov
mov
mov
test
mov
jae
sub
pop
inc
lods
ins
adc
popf
imul
shr
jno
imul
ds
cld
dec
inc
movs
(bad)
pop
enter
jno
mov
and
mov
(bad)
pop
aaa
xchg
enter
nop
ja
adc
add
dec
cmp
pop
push
out
rol
jmp
ret
fldenv
ja
jbe
and
or
pop
sub
pop
pop
out
xchg
pop
xor
and
pop
(bad)
movs
sbb
lds
mov
in
mov
push
test
cwde
jmp
add
icebp
repz
ss
inc
adc
jg
pop
dec
stos
xchg
fldenv
cmp
inc
aad
mov
aas
sub
adc
cdq
pop
loope
(bad)
in
imul
add
outs
aam
pop
repz
xor
and
into
xchg
in
sbb
add
inc
or
hlt
dec
movd
add
adc
ins
sbb
xchg
pop
inc
js
adc
nop
dec
add
ja
cmp
or
test
ret
fistp
dec
sub
lods
pop
(bad)
mov
xor
and
fild
pushf
pop
enter
shl
dec
mov
repz
and
push
dec
pop
cmp
js
dec
push
mov
arpl
or
inc
jmp
mov
mov
sub
test
inc
lock
movs
jne
and
jne
test
push
mov
test
pop
cwde
mov
rol
aad
lea
add
ret
push
aad
out
pop
lock
addr16
outs
scas
dec
sub
mov
enter
iret
bnd
mov
ss
std
cli
movs
loopne
dec
ror
test
fldenv
nop
dec
outs
dec
mov
sub
inc
inc
test
ss
jmp
xor
test
cdq
fcomp
ds
push
inc
test
jne
sbb
pop
jae
or
test
mov
cmp
jge
movs
stos
pop
xchg
scas
and
xor
mov
sub
pop
push
xchg
retf
jecxz
dec
repz
int
push
jno
fs
cmp
ins
add
mov
call
add
scas
and
inc
dec
pop
test
fsub
adc
div
mov
jp
mov
inc
dec
inc
rcl
lock
iret
inc
cmp
jo
out
pop
call
pop
int3
aad
ret
pop
jno
mov
push
adc
push
push
add
and
xor
sbb
cmps
xor
and
adc
adc
cld
add
mov
cmp
xor
adc
pop
pop
scas
loop
je
push
ins
(bad)
ror
fild
int3
outs
pop
adc
movs
scas
aaa
lock
adc
mov
xchg
xchg
jae
movs
daa
aam
cmp
rcl
add
mov
stos
push
or
rcl
push
jecxz
xlat
inc
inc
stos
das
cmp
xchg
push
int
shr
jbe
mov
enter
sub
dec
jb
outs
push
push
into
in
jmp
jne
in
mov
jmp
jp
fild
(bad)
and
out
mov
add
dec
outs
mov
retf
mov
scas
fwait
in
call
ficom
jp
add
repnz
inc
retf
mov
mov
jns
pop
dec
xor
gs
mov
push
xor
push
(bad)
call
xchg
add
cld
pop
sub
mov
xchg
movs
imul
inc
scas
dec
jmp
or
sub
imul
mov
cmp
lds
push
fs
test
lahf
out
icebp
scas
mov
mov
inc
inc
inc
add
ror
std
push
xchg
inc
(bad)
mov
in
sbb
mov
jne
call
cmp
xor
lds
xchg
inc
mov
in
addr16
sbb
imul
int
dec
xor
out
outs
inc
push
clc
pop
das
loope
fldenv
mov
aam
loope
dec
lds
jg
push
fwait
andnps
cmp
jne
push
jmp
jno
add
sub
dec
stos
xchg
arpl
leave
xlat
int
aad
or
sub
dec
movs
and
xchg
cs
daa
push
inc
inc
aas
mov
pop
inc
xlat
inc
pushf
gs
cmp
sbb
shl
popf
dec
iret
add
loope
fstp
xchg
jg
out
cld
xor
lods
push
cmp
aad
mov
sub
mov
iret
cmp
cli
(bad)
movs
rcr
les
std
xor
cmp
mov
inc
mov
rcr
sbb
stos
mov
lahf
dec
lods
xchg
repnz
out
dec
or
mov
add
dec
nop
out
xchg
sbb
or
ja
cmp
xchg
add
(bad)
idiv
xor
xor
js
mov
or
ret
ret
call
push
inc
sar
mov
jp
xlat
daa
(bad)
push
cmp
lock
add
pop
mov
push
daa
call
mov
lock
loope
xor
cmp
mov
xor
sbb
ins
mov
xchg
into
add
push
push
jns
cmp
cmps
cmp
mov
jle
cmps
mov
push
js
lds
pop
mov
add
loop
(bad)
pusha
jo
mov
adc
fld
push
neg
daa
add
fnstsw
jle
js
inc
add
int3
mov
and
pop
adc
clc
add
mov
mov
test
add
mov
cmp
add
enter
fisub
daa
cmps
cdq
outs
pop
cmp
daa
mov
push
outs
and
push
adc
lea
mov
mov
xchg
popa
jge
cwde
pop
out
and
popa
gs
pop
ret
outs
xchg
repz
cli
sti
sub
gs
das
(bad)
sub
cmc
cmp
(bad)
push
mov
sar
xchg
int
push
push
mov
mov
and
inc
sub
mov
and
cmp
or
mul
mov
sbb
mov
pop
iret
addr16
nop
stc
xchg
mov
inc
cmp
lock
inc
ins
or
jge
test
cmp
out
jne
nop
daa
and
rcr
cmc
mov
out
cmps
loop
mov
fwait
inc
ja
sub
pop
push
xchg
data16
dec
les
adc
daa
fwait
push
sbb
xchg
pop
lods
add
sbb
adc
test
inc
mov
pop
dec
adc
int3
push
cmps
div
popf
and
sbb
xlat
inc
(bad)
shl
add
lea
movs
sbb
(bad)
adc
cld
es
icebp
cmps
jns
and
and
je
mov
stc
outs
xchg
pop
or
gs
fwait
pop
(bad)
jmp
(bad)
pushf
add
test
mov
mov
movs
and
xchg
adc
dec
jmp
(bad)
jmp
ins
ror
mov
mov
adc
ds
repz
pop
xchg
xchg
jns
imul
in
test
aam
mov
add
pop
adc
movs
sub
jb
(bad)
push
push
aaa
or
xchg
xchg
add
xchg
in
add
push
int
test
sbb
xor
jno
fs
mov
fnstsw
retf
dec
add
mov
lods
add
cwde
imul
adc
and
xchg
lea
or
mov
dec
mov
test
dec
xor
out
in
ins
xchg
push
pushf
fidiv
xor
out
dec
aas
adc
inc
cmp
adc
sub
jg
int
lock
jbe
sub
mov
jmp
mov
call
xchg
dec
add
sub
popf
je
lahf
jno
aas
lods
lods
cmp
ins
mov
pop
imul
push
cmp
(bad)
sub
sar
fnsave
jp
pop
addr16
add
jle
cmc
inc
(bad)
jno
jg
loope
jnp
call
mov
xchg
test
xchg
xlat
loopne
ins
xchg
sbb
sub
xchg
xor
ss
arpl
bound
es
das
jb
mov
push
pop
movs
add
jg
pop
ret
sar
sbb
xor
js
mov
dec
add
outs
push
movs
sahf
xchg
jecxz
inc
fstp
adc
popa
xor
sub
popa
or
neg
mov
(bad)
in
in
lods
xor
popf
lahf
fdiv
pop
jl
mov
(bad)
aam
nop
mov
push
adc
mov
imul
daa
fistp
mov
movs
das
inc
(bad)
in
call
cld
int
sbb
mov
add
inc
cmp
scas
lock
pop
cs
or
and
inc
pop
xchg
cmp
xchg
push
aad
push
xor
inc
jno
mov
inc
ds
mov
popf
lahf
lods
add
loopne
rcl
imul
dec
inc
xchg
jns
ret
repnz
cdq
test
cwde
rcr
xchg
xor
sub
ffree
test
cmp
rol
push
add
xor
sub
jne
sbb
xor
fldenv
fldcw
mov
call
sbb
xchg
int3
pop
fwait
jae
int
inc
js
lods
jg
pop
cmp
inc
outs
add
mov
jns
nop
xchg
ss
xor
add
movs
sbb
xor
dec
inc
mov
pop
or
rcl
cli
cmc
rol
jmp
fwait
cld
das
(bad)
sub
ret
add
mov
test
dec
je
push
mov
inc
mov
test
fnstenv
jno
out
dec
xchg
mov
test
loopne
addr16
in
popf
out
jle
sbb
ds
popa
sub
icebp
cmc
jmp
adc
setne
add
add
jmp
dec
call
mov
out
test
inc
hlt
rol
sar
jbe
cmc
iret
or
mov
sahf
push
loop
adc
sbb
xchg
jno
or
(bad)
ret
out
push
xchg
fdivr
or
adc
daa
icebp
ss
pop
jl
daa
add
dec
sti
jecxz
jbe
pop
xchg
mov
pop
retf
push
dec
fldenv
jo
lock
fdivp
dec
mov
pop
push
imul
sbb
cmps
leave
xchg
cmp
jns
test
cmp
sbb
shl
or
sar
or
add
idiv
dec
sahf
sub
xchg
jb
repnz
inc
dec
dec
cli
movs
jl
dec
rcr
movs
nop
mov
add
mov
sub
push
and
sar
mov
dec
cmp
pop
mov
and
ss
leave
pop
mov
ins
in
mov
leave
es
shl
jecxz
out
add
enter
push
ret
cld
sti
push
es
xchg
(bad)
(bad)
test
mov
imul
int
les
sysret
daa
clc
xchg
fld
cmp
sbb
sar
lock
icebp
out
sbb
pop
jl
xchg
inc
xchg
and
mov
sbb
js
jnp
jae
push
jecxz
(bad)
aam
dec
fdivrp
sub
mov
pop
sar
je
inc
test
mov
add
mov
add
mov
inc
inc
xchg
jl
imul
out
adc
(bad)
movs
int3
ja
out
sub
jns
jl
ss
(bad)
retf
xchg
sub
mov
xor
push
mov
fcmovnbe
in
(bad)
aas
aas
xchg
mov
ja
adc
add
das
or
mov
sub
(bad)
jne
imul
mov
iret
js
cmp
inc
jmp
push
cmp
outs
push
fisubr
jae
sub
adc
mov
sahf
sub
cdq
loop
sub
adc
shr
aad
xor
xchg
push
adc
jb
cmp
scas
repnz
cmp
sub
scas
jae
outs
jae
adc
or
xor
xchg
push
sbb
ror
mul
sbb
xchg
jnp
pop
ret
shr
adc
add
or
nop
scas
adc
prefetch
or
mov
cmp
and
pushf
(bad)
fstp
in
enter
stos
cmp
push
fs
and
mov
icebp
test
(bad)
std
and
mov
popf
(bad)
or
pop
in
adc
cdq
cmp
cmovb
dec
pop
jp
bound
sti
xchg
ret
rcr
fmul
icebp
fst
sub
sahf
adc
mov
xchg
jno
xor
pop
jbe
sub
xor
push
mov
sti
stos
int
sub
add
add
and
mov
mov
sti
or
test
adc
xchg
int3
add
xor
ret
(bad)
dec
sub
fs
mov
call
adc
in
and
and
test
arpl
cmp
es
fcom
clc
js
and
dec
jp
mov
shl
jo
stos
sbb
aam
mov
push
test
jg
frstpm(287
iret
loope
clc
das
out
nop
fnstenv
cs
and
in
(bad)
jg
sbb
int
dec
xor
in
pop
add
stos
ds
inc
jge
jns
shr
pop
int3
ret
jne
xchg
xor
push
fnsave
adc
movs
fdiv
sbb
pop
mov
fisttp
and
pop
sbb
adc
out
je
bound
sub
and
mov
mov
into
dec
ins
daa
pop
or
jg
adc
mov
and
sub
test
jmp
xchg
outs
sub
movs
movs
fld
xor
cmp
ss
xchg
pop
dec
push
or
rcl
pop
adc
push
ja
push
int
test
jb
adc
arpl
loop
and
shr
sub
rol
or
data16
inc
inc
das
add
pop
dec
stos
xchg
xor
(bad)
fidiv
outs
cld
imul
inc
fisttp
push
rep
pop
cmps
(bad)
lock
mov
add
dec
out
mov
push
leave
dec
mov
jge
fdiv
std
out
ins
mov
int3
sub
cmp
daa
fwait
mov
sar
(bad)
xchg
(bad)
clc
mov
jo
test
and
mov
cli
outs
repz
inc
mov
or
inc
pop
dec
mov
retf
data16
je
mov
sbb
scas
xchg
jbe
das
add
arpl
inc
jo
test
mov
ret
add
cmp
scas
cdq
gs
inc
push
xor
xchg
ja
clc
xor
sbb
jmp
cmp
outs
gs
dec
push
pop
pop
pop
mov
add
mov
mov
adc
mov
push
sub
aam
imul
sbb
sub
iret
mul
test
sahf
bound
mov
sbb
cmc
popa
nop
int3
or
loopne
mov
xchg
mov
xchg
xor
hlt
and
iret
lds
adc
dec
sbb
ds
popf
je
jl
int
mov
aaa
inc
out
or
(bad)
(bad)
sbb
or
or
adc
pop
mov
mov
push
xor
jp
sbb
scas
xchg
clc
sbb
mov
int3
dec
fnsave
les
fcom
jno
sbb
(bad)
in
xor
test
icebp
lods
in
shl
jmp
push
adc
jno
adc
imul
inc
adc
inc
adc
pop
dec
rcl
fwait
or
mov
out
arpl
ret
adc
pop
aaa
add
ins
mov
xor
add
sbb
test
jg
dec
icebp
xchg
cmp
push
xchg
ficom
push
loop
ret
stos
cmp
cmp
xor
sub
and
xchg
(bad)
sub
pop
jle
shl
or
int
call
fild
adc
cld
mov
mov
pop
add
pop
enter
dec
sbb
lea
pop
push
mov
xor
sbb
movs
add
xor
push
or
cmps
shr
sbb
add
and
loop
pop
shl
retf
(bad)
(bad)
into
mov
out
inc
push
out
sub
xchg
lods
test
cmc
xor
xchg
div
cmp
ret
out
mov
cmc
(bad)
sbb
sub
adc
adc
dec
sti
ins
pop
(bad)
sub
mov
dec
pushf
mov
xchg
inc
fisttp
or
aad
mov
adc
xchg
rcl
mov
xor
pop
adc
mov
(bad)
pop
mov
pop
nop
adc
scas
xchg
or
int3
push
ret
cmps
or
mov
or
in
mov
vpinsrw
jne
inc
mov
ins
iret
mov
pop
test
cmp
pop
dec
arpl
xchg
xor
stos
add
jo
es
mov
jg
aas
imul
adc
mov
iret
or
inc
rol
fadd
(bad)
and
xor
and
mov
push
mov
push
add
add
adc
adc
lahf
dec
push
pusha
jecxz
stc
add
cmp
push
fst
fs
and
xchg
jb
out
retf
hlt
pop
dec
mov
add
ret
xchg
mov
cld
daa
jno
cs
movs
add
dec
(bad)
dec
test
sub
and
inc
scas
mov
shr
cmp
loope
mov
push
mov
or
fmul
mov
scas
shr
pusha
enter
div
sbb
fdivr
dec
push
imul
jmp
push
adc
clc
lock
stos
pop
pop
or
ja
xchg
xchg
mov
std
xlat
sahf
and
cld
nop
(bad)
fcmovu
xor
sbb
add
xchg
nop
in
dec
fcomp
out
lea
push
push
(bad)
jecxz
jns
push
cmp
lea
fcomp
push
mov
cmp
lods
mov
push
cdq
mov
leave
xchg
mov
fcom
in
sub
pusha
and
pop
call
push
xor
retf
outs
mov
jmp
out
cmp
sar
int
lods
or
mov
(bad)
ja
xor
stos
dec
add
mov
aad
xlat
and
push
add
int
push
outs
(bad)
inc
fdiv
lock
push
push
movs
repnz
test
int
outs
pushf
ja
int3
add
jo
cmps
push
call
in
(bad)
xchg
jge
adc
fdivr
jmp
je
or
xor
fdiv
and
addr16
or
dec
shl
aad
push
popa
sbb
mov
pop
push
pusha
sub
jecxz
cmc
lea
jmp
call
xor
cmps
call
test
dec
cmp
sbb
cmps
cmp
inc
sub
fxch
(bad)
sti
sahf
add
div
cmp
loope
xchg
shr
lods
pop
(bad)
std
push
out
cmp
inc
repz
stc
push
inc
xchg
push
pop
mov
cmp
daa
jmp
cdq
dec
and
cmp
inc
inc
popf
mov
mov
mov
in
test
jnp
cwde
cs
ficom
adc
and
addr16
mov
jecxz
ss
dec
cmp
js
mov
je
add
or
ret
fld
xchg
pusha
sub
(bad)
pop
inc
aaa
movs
inc
jnp
jno
shl
addr16
and
test
mov
dec
pop
jnp
or
adc
adc
add
out
xor
aas
inc
ja
repz
loope
sbb
cmp
shr
cdq
aad
test
into
mov
(bad)
or
pop
jb
int
dec
cmp
out
cmp
dec
add
sahf
jno
jbe
jbe
clc
(bad)
je
cmp
cmp
jg
dec
jnp
xchg
idiv
dec
movs
mov
and
push
stos
inc
dec
(bad)
jbe
(bad)
arpl
inc
ins
pop
push
or
cli
pop
popf
inc
std
dec
fisttp
inc
rcr
jp
je
and
mov
jle
stos
dec
ins
pop
lods
sub
les
lahf
mov
fs
sar
mov
mov
sti
ins
and
mov
jmp
(bad)
test
xchg
push
lods
sbb
out
xchg
sbb
cmps
scas
test
xlat
cmps
fmul
out
fnstsw
mov
hlt
repz
sub
mov
xchg
fucomip
adc
daa
adc
adc
add
xor
or
lea
or
repz
cwde
loope
cs
mov
xor
cmp
stos
stos
push
test
test
push
sub
mov
or
xchg
cli
aas
in
pop
push
or
scas
cwde
popf
loope
es
icebp
xor
mov
dec
test
movs
das
push
arpl
mov
pop
inc
jg
cmp
jmp
(bad)
mov
movs
loopne
lea
pop
or
push
add
iret
cmps
adc
movs
inc
mov
mov
rcr
ds
adc
cmps
push
adc
add
add
out
mov
loopne
hlt
sar
lock
sbb
push
test
ds
xor
pop
dec
out
cs
sahf
adc
jl
jp
or
xchg
sbb
popa
mov
dec
movs
shr
call
xlat
pop
ss
push
(bad)
push
mov
mov
movs
bound
aad
movs
add
xlat
pusha
or
in
fs
push
cmp
inc
ss
test
xor
pushf
mov
pop
mov
mov
jbe
mov
mov
or
or
sahf
dec
lds
jns
hlt
jne
imul
pop
jb
dec
push
stc
cmp
jmp
mov
sub
pop
test
rcr
arpl
scas
imul
xchg
loopne
lods
mov
adc
movs
mov
xor
icebp
inc
in
call
cmc
ret
adc
shr
mov
and
jp
adc
ret
lea
daa
test
(bad)
jl
mov
xor
sub
std
push
xor
lea
xor
and
test
fs
popf
cmp
das
mov
sub
pop
test
icebp
xor
loop
leave
enter
pop
xchg
push
cmps
jecxz
xchg
ret
and
inc
lock
cli
cld
inc
inc
cmp
mov
cmc
neg
jbe
add
out
dec
xor
and
mov
cmp
push
movs
mov
inc
je
pusha
sub
pop
mov
push
arpl
mov
and
(bad)
pop
cmp
mov
push
js
xchg
jge
aaa
cmp
dec
sbb
popa
arpl
sub
icebp
ror
jl
arpl
ds
xor
jl
popa
push
hlt
idiv
jmp
mov
pop
sbb
aaa
push
dec
lods
cwde
xor
data16
pop
or
in
aam
and
aas
sbb
or
xor
xor
pop
cdq
cmp
out
dec
sbb
iret
adc
sub
inc
cmps
or
inc
dec
sub
push
jae
jmp
lea
inc
xor
test
test
retf
ds
mov
cmp
lds
aam
adc
mov
call
xor
jecxz
and
push
ds
push
mov
mov
sti
pop
(bad)
adc
fild
imul
movd
push
jge
mov
outs
popf
xchg
jp
or
repnz
lds
push
enter
pop
or
mov
out
add
loopne
add
inc
or
dec
add
and
mov
in
inc
mov
arpl
push
fidiv
sbb
cmp
int
or
push
cmp
(bad)
movntq
jbe
sahf
add
inc
(bad)
mov
mov
sbb
mov
xor
inc
push
out
cmp
sbb
in
sbb
jnp
popf
mov
xor
test
pop
and
sbb
inc
mov
push
jp
popf
aad
inc
xor
jmp
cmp
mov
loopne
pop
shr
lahf
dec
add
xchg
jns
pop
ins
lahf
inc
and
shl
cld
jbe
aas
jns
ret
into
add
fimul
sbb
leave
test
pushf
inc
mov
mov
push
add
mov
xlat
fistp
jl
and
add
(bad)
scas
aas
js
fnstcw
call
dec
jmp
mov
mov
bound
mov
mov
pop
and
xchg
cmps
dec
ins
pop
fwait
jns
pop
lods
mov
adc
and
ret
int3
js
out
pop
test
and
mov
gs
test
sub
scas
push
xor
test
cmp
add
mov
jg
mov
mov
xor
cmp
adc
lea
mov
(bad)
loop
lock
shl
outs
mov
sbb
sub
addr16
mov
dec
pushf
add
sbb
lods
mov
aaa
push
sbb
in
je
popa
clc
lods
inc
dec
fmul
or
movs
outs
push
fs
fisub
imul
xor
sti
jp
mov
cmps
sub
scas
mov
ja
sbb
test
test
jbe
and
mov
mov
popf
pop
or
xchg
add
aam
and
xor
jne
imul
and
jle
xor
inc
dec
add
aaa
aad
int3
into
sbb
not
and
add
sub
jnp
fucomip
call
mov
add
and
jle
add
arpl
(bad)
push
push
mov
xchg
push
pop
xlat
retf
sbb
loopne
add
jmp
sti
lods
mov
inc
cmc
jge
loop
jb
xchg
addr16
xor
push
xor
xchg
push
pusha
imul
or
mov
mov
sub
and
add
jmp
sahf
std
adc
inc
sub
cs
cs
mov
(bad)
test
push
or
into
pop
fist
xchg
jmp
inc
push
in
(bad)
mov
retf
jnp
jecxz
imul
cmps
jnp
imul
adc
aaa
jmp
push
ret
lea
(bad)
xchg
les
nop
ins
and
aas
pop
popf
pop
fild
jmp
jbe
jae
retf
xchg
scas
push
fmul
mov
aas
jne
push
pop
dec
shl
adc
adc
dec
sbb
dec
ret
inc
popf
or
(bad)
fwait
pop
lock
test
lahf
lea
movs
and
rol
test
adc
dec
inc
or
cdq
retf
or
in
(bad)
add
clc
add
add
stc
dec
jl
imul
xchg
and
test
retf
pop
ins
ins
push
sub
in
push
scas
inc
popf
aad
in
xchg
sub
ins
stc
xchg
int
push
ins
lock
imul
cmps
push
adc
mov
mov
imul
add
in
mov
cmp
sub
js
mov
or
sbb
or
xor
push
add
push
mov
cwde
and
push
cli
mov
xchg
lods
add
clc
int3
dec
dec
scas
sbb
sub
mov
fwait
dec
sbb
shl
jmp
arpl
ja
pop
add
out
ret
test
mov
xor
fstp
addr16
add
es
mov
push
gs
sub
push
push
repz
pop
call
cmp
stos
aas
or
lods
add
jbe
jae
dec
jmp
pop
sar
jle
(bad)
push
or
adc
rol
icebp
cmp
add
prefetcht1
jle
cmps
icebp
ror
pop
jb
push
adc
push
pushf
addr16
xchg
cli
fild
out
imul
cdq
push
ins
in
sbb
loop
cmp
cmp
mov
loop
xor
cmp
mov
lea
and
push
scas
and
add
push
sub
xchg
fcom
popa
call
aaa
rol
xchg
in
jge
jmp
data16
bound
retf
and
ja
repz
cwde
sahf
and
leave
push
(bad)
or
les
cmp
and
outs
in
and
lods
fyl2xp1
xchg
repz
add
pusha
je
pusha
test
add
add
aam
cmp
adc
lods
movs
adc
mov
jb
icebp
call
mov
jae
in
jg
jmp
push
loop
clc
push
add
pusha
mov
inc
or
(bad)
shrd
(bad)
jne
adc
(bad)
inc
and
(bad)
cmp
mov
sbb
in
pop
mov
and
pop
inc
inc
mov
add
fsubr
and
aad
adc
inc
pusha
addr16
sbb
int3
jmp
addr16
movs
cli
cmp
or
out
hlt
imul
leave
jl
push
test
jne
mov
jo
cmp
push
pushf
push
xor
pop
sub
fisubr
or
jmp
lea
jecxz
ss
mov
arpl
aam
pop
pusha
cmp
and
push
push
add
popa
test
sti
sub
xchg
dec
xor
mov
rcl
add
shr
xor
xor
clc
xor
add
add
je
push
lock
cmc
int3
mov
aaa
jo
jle
outs
loopne
in
inc
lock
fcom
ja
sbb
into
lock
mov
sub
xchg
and
mov
cmp
shl
imul
inc
call
std
das
xor
out
ins
mov
out
hlt
imul
das
sub
pop
jecxz
or
(bad)
int3
sub
mov
(bad)
mov
gs
xor
fstp
arpl
sbb
(bad)
movs
add
mov
rol
cmp
or
int3
mov
mov
cmc
dec
pop
inc
div
retf
dec
ja
ret
fcom
sub
loope
inc
addr16
xor
outs
cmp
ds
daa
jle
xchg
pop
cld
or
sub
push
das
adc
mov
ret
add
int
sub
imul
sbb
mov
inc
mov
cwde
lods
xchg
mov
or
dec
dec
xor
xchg
and
in
or
es
ss
xchg
pop
push
mov
sub
cld
lock
out
outs
sbb
cwde
dec
and
mov
lock
or
and
aaa
push
out
xchg
and
push
repz
mov
sahf
jne
ror
mov
xor
movs
push
outs
or
dec
(bad)
inc
rcr
inc
test
rcr
into
call
call
and
mov
and
ret
(bad)
movs
fisubr
xchg
ficom
xor
(bad)
mov
xchg
shl
jmp
(bad)
aas
push
pop
jp
jp
xor
cwde
mov
aaa
and
ds
ror
or
stos
jmp
mov
int3
add
mov
daa
sbb
pop
ret
pop
add
(bad)
cmc
ja
xor
popa
or
scas
or
pusha
push
sub
cmp
sbb
into
ins
xor
cmp
adc
pop
cmps
fwait
mov
add
sbb
ja
adc
pushf
pop
(bad)
adc
jp
int
mov
and
add
(bad)
jne
push
mov
(bad)
repnz
jle
push
int
xor
shl
add
add
jge
sti
pop
fstp
pop
mov
mov
loop
add
push
out
fisub
mov
jno
call
push
jmp
mov
adc
cdq
cmps
mov
sbb
mov
movs
xor
inc
or
rcr
shr
nop
clc
mov
jle
repnz
pop
jno
sti
pop
mov
sbb
aaa
mov
cmc
sbb
imul
les
dec
pusha
scas
(bad)
shr
imul
ficomp
mov
std
push
sbb
add
sbb
repnz
mov
(bad)
or
out
add
(bad)
xchg
add
cmp
mov
(bad)
xchg
icebp
jns
mov
jbe
(bad)
add
mov
ror
mov
das
and
pop
sub
cmp
shl
or
std
je
in
and
int3
(bad)
das
dec
xchg
mov
shl
jmp
xchg
fwait
retf
inc
dec
mul
jno
test
sbb
movs
int3
mov
dec
adc
in
scas
jnp
loopne
push
fwait
aas
movs
push
pop
fldcw
int3
sub
and
jmp
in
neg
push
inc
add
mov
xchg
outs
je
call
lock
cmc
repnz
adc
aas
scas
lods
pop
jp
add
jle
pop
adc
inc
jnp
mov
jne
loop
xor
mov
imul
cs
adc
pop
or
add
dec
and
neg
aad
call
fsubr
and
loopne
xor
nop
fwait
add
push
sbb
scas
jnp
jnp
pop
into
test
cmps
loop
loopne
out
lods
call
(bad)
and
fnstenv
call
cmp
mov
sbb
retf
outs
mov
mov
xor
fwait
or
iret
aaa
outs
xor
(bad)
mov
call
sbb
add
jbe
dec
mov
inc
push
movs
pop
ins
aad
ds
xor
cmp
push
xor
loope
push
loop
xor
jecxz
mov
dec
pusha
lock
or
and
mov
hlt
mov
jg
ins
sbb
mov
jnp
lea
fadd
push
es
std
popf
pop
popf
sbb
mov
stos
mov
and
cs
push
(bad)
popf
mov
movs
stos
mov
dec
mov
(bad)
cmps
mov
int
push
(bad)
pop
ret
jp
mov
dec
pop
loopne
jne
jns
dec
jns
hlt
xor
popf
mov
(bad)
adc
adc
mov
xchg
xchg
push
push
add
iret
lods
mov
in
out
jecxz
in
adc
pop
adc
pop
aam
loop
jle
jno
sbb
arpl
inc
(bad)
in
ins
(bad)
sbb
mov
dec
push
mov
jb
leave
cmp
jnp
test
xchg
and
push
test
mov
retf
push
(bad)
xchg
sub
push
xlat
int3
stc
shl
cmp
and
and
pop
test
push
imul
out
inc
pop
cmp
jmp
inc
push
rcl
cmp
sbb
sti
das
sub
iret
lea
(bad)
mov
loope
mov
adc
bound
js
dec
clc
xchg
dec
sbb
add
or
lods
test
bound
int
rol
in
or
ds
aaa
mov
outs
retf
loope
push
mov
inc
push
pop
pop
mov
retf
xchg
dec
cmps
loopne
sub
jp
fisubr
xlat
jbe
iret
loopne
mov
sar
movs
(bad)
xchg
shr
imul
push
fsub
mov
stc
push
je
hlt
adc
sahf
push
inc
lock
mov
adc
mov
sti
bswap
inc
push
ret
mov
xchg
push
jmp
dec
pushf
cmp
dec
scas
in
dec
inc
mov
jmp
sub
into
fst
mov
and
es
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
inc
loop
xor
inc
inc
nop
jl
shl
mov
inc
ror
sub
adc
push
ficomp
push
and
jbe
inc
jg
fsubp
xor
aas
out
xchg
xor
cwde
jecxz
or
into
jne
and
and
clc
jae
popa
hlt
sbb
cmp
or
cmp
mov
test
adc
xor
dec
adc
nop
hlt
mov
adc
(bad)
sbb
loope
js
rcl
cmc
xor
jg
cld
cmp
leave
fwait
std
das
push
pop
jp
jl
js
add
sahf
ret
dec
xchg
std
sbb
imul
gs
rol
or
fldenv
jmp
jne
scas
xchg
mov
repz
dec
repz
mov
cmps
cmp
sar
mov
cmp
rcr
inc
das
mov
push
mov
mov
mov
pop
std
push
dec
les
leave
push
lods
xlat
mov
cli
jne
cli
jnp
mov
or
pushf
out
mov
int3
and
aad
push
les
cmp
jnp
aaa
inc
pop
pop
int3
movs
lods
cmp
and
not
mov
in
movs
ja
lods
imul
pop
sub
sbb
ins
adc
add
pop
sub
push
sbb
aad
hlt
sti
jge
stos
push
ret
push
inc
shr
clc
cmp
pusha
push
movs
add
pushf
and
aaa
mov
arpl
mov
lods
push
mov
cmp
pop
cmp
clc
sti
rol
fmul
mov
cmp
dec
daa
outs
xchg
jp
push
jmp
mov
sub
dec
sub
sbb
adc
or
sbb
shr
or
mov
mov
cld
push
sahf
sbb
rcr
mov
lods
loopne
xchg
push
ror
cmp
and
outs
lods
push
(bad)
pop
dec
popa
jnp
(bad)
fild
jnp
scas
js
dec
cmp
(bad)
daa
xchg
mov
loop
add
stos
fwait
test
shl
mov
sar
adc
inc
popa
inc
ss
cs
xor
jle
push
je
lahf
(bad)
ds
inc
mov
int3
or
in
pop
imul
lods
push
sub
ror
jo
mov
inc
daa
retf
fstp
imul
ja
inc
push
dec
stc
imul
outs
fnstenv
and
ds
data16
pop
aam
and
lods
xchg
pop
push
jb
xor
mov
and
push
mov
iret
sub
loop
mov
int3
sbb
xchg
push
xchg
sub
sub
es
test
stos
cmp
mov
xchg
pop
out
gs
mov
xor
inc
cs
mov
retf
pushw
add
sub
push
cld
mov
inc
pop
push
xchg
(bad)
test
(bad)
sbb
aaa
sub
inc
pop
out
(bad)
pop
sbb
dec
addr16
(bad)
adc
or
mov
aas
mov
and
cmp
lods
ret
xor
sbb
(bad)
jp
lahf
ins
and
cmp
push
loopne
js
loopne
mov
lods
leave
loopne
out
fs
cdq
aaa
repz
test
mov
or
adc
push
(bad)
mov
rcl
in
add
fs
mov
add
mov
fdiv
inc
add
out
fcomp
push
xchg
dec
mov
(bad)
std
xor
rcr
aas
ds
jnp
push
addr16
mov
push
mov
mov
cwde
jl
jg
mov
jecxz
test
mov
mov
(bad)
sbb
xor
nop
sub
push
jmp
mov
mov
into
mov
pop
sbb
std
jno
in
inc
gs
dec
scas
push
push
jne
add
xor
test
adc
mov
sbb
cs
mov
xchg
fwait
dec
mov
aad
jne
jg
and
mov
add
add
stos
lahf
mov
sub
in
sbb
scas
sub
int3
jp
(bad)
mov
push
dec
push
lock
dec
fbld
and
fstp
mov
nop
in
es
add
xor
xchg
adc
push
cmp
daa
inc
adc
lds
ins
xchg
stos
setg
mov
mov
aam
ret
std
loope
(bad)
icebp
mov
fs
pushf
mov
sub
pushf
ss
repnz
mov
mov
sub
call
(bad)
fidivr
(bad)
test
push
nop
adc
pusha
mov
dec
xor
call
inc
pop
cld
loope
aam
push
mov
sub
retf
jo
push
dec
inc
lods
mov
in
outs
add
add
fld
cdq
mov
lods
imul
mov
cmps
popa
fwait
xor
push
ds
loop
dec
jmp
jne
je
inc
call
test
nop
or
sti
mov
and
mov
or
pop
js
fcom
adc
je
in
dec
or
adc
sbb
or
mov
push
push
push
dec
fptan
out
mov
sub
or
and
jle
lea
xor
dec
lods
mov
jae
push
loop
leave
aad
js
and
mov
pop
mov
xor
and
fiadd
repz
repnz
xchg
aad
push
add
inc
sar
je
js
rol
sbb
sbb
test
mov
cld
push
ins
call
and
pop
add
int3
cs
add
das
in
aaa
xor
sbb
loope
scas
fsub
cmp
sbb
jne
aas
xor
mov
pop
hlt
mov
fwait
(bad)
out
retf
sub
add
pop
jl
cdq
add
pop
lods
or
adc
call
sbb
inc
dec
sbb
stos
xchg
xchg
fisubr
mov
(bad)
je
push
fnstcw
adc
xchg
outs
inc
cmps
jl
lahf
call
scas
les
fs
add
xchg
cmps
xchg
or
mov
jno
cmp
pusha
pop
jge
xor
xchg
mov
sbb
xchg
dec
push
inc
xchg
mov
xchg
and
xlat
rcr
repnz
inc
scas
test
shr
mov
popa
test
fsubr
in
sbb
xchg
push
adc
fnsave
mul
ds
sbb
(bad)
sbb
ror
xchg
rcl
mov
add
push
jo
or
in
add
jbe
call
cmp
jnp
xor
shl
pop
or
xor
retf
out
ret
cmp
pop
fild
jno
int
icebp
jl
dec
add
cld
enter
lods
push
cmps
xchg
pop
jge
dec
sub
jge
and
fwait
call
xor
inc
sbb
shl
jge
add
xor
dec
sbb
out
lds
out
test
jne
mov
mov
ja
rcl
inc
ins
icebp
jp
aad
pushf
add
push
sbb
repz
neg
jmp
or
add
loopne
push
xor
mov
mov
mov
adc
mov
jmp
test
adc
fild
in
xchg
or
mov
ret
mov
and
mov
(bad)
cmps
call
or
mov
mov
add
mov
fdivp
push
mov
mov
jecxz
inc
nop
retf
rcl
outs
(bad)
test
or
xor
xor
sahf
mov
iret
cmc
add
fsubr
ficom
lock
out
mov
jns
and
out
loopne
cli
sbb
iret
in
das
dec
mov
sub
xchg
out
pop
fiadd
mov
into
cmps
out
mov
adc
adc
pop
(bad)
mov
cld
div
push
jle
out
xchg
jnp
gs
pushf
adc
mov
ret
mov
jl
xlat
in
cmp
dec
mov
je
inc
pop
movs
or
inc
lods
pop
stos
xchg
ds
add
call
fiadd
lea
movs
lahf
xchg
fisubr
sti
xchg
mov
out
pop
lods
pop
in
sbb
dec
mov
mul
pusha
pop
dec
inc
dec
sbb
pusha
push
cs
stc
and
(bad)
xchg
or
shl
ss
fimul
arpl
inc
ss
cmp
sub
and
lock
mov
test
jecxz
push
or
push
mov
cmp
xchg
pushf
fcomp
test
xchg
sub
pop
lock
stc
test
ret
mov
pushf
lds
icebp
cmp
in
add
rcr
lds
aas
arpl
and
jnp
lods
es
pop
(bad)
or
(bad)
lock
jnp
jge
enter
xchg
mov
jmp
jae
test
(bad)
mov
out
movs
mov
ja
inc
dec
scas
push
xor
int3
out
push
cld
mov
jns
xor
out
sub
nop
mov
pop
fsub
xor
mov
fst
mov
movs
aas
sbb
and
lds
mov
sub
mov
test
in
test
repnz
sub
ficomp
loopne
es
in
sbb
mov
out
mov
ror
std
xchg
pop
out
sub
das
dec
dec
add
push
daa
aas
call
jp
(bad)
and
mov
push
mov
stos
leave
inc
movs
push
shr
(bad)
mov
in
xchg
je
push
or
lahf
int
out
fisub
daa
std
loopne
(bad)
fld
es
xchg
xchg
cmc
sbb
ins
out
push
xchg
fimul
or
sub
jne
push
aaa
xchg
out
shl
pusha
in
outs
mov
(bad)
mov
cmp
adc
call
mov
xchg
dec
cmp
js
adc
inc
aam
mov
and
xchg
cli
pop
inc
imul
jne
push
mov
outs
jmp
je
mov
retf
mov
fcom
cmp
repz
add
ret
xchg
push
in
mov
sub
enter
movs
outs
jo
pop
repz
xor
add
es
lods
xchg
pop
fist
(bad)
inc
mov
sbb
pop
clc
jg
cmp
jnp
popa
stos
addr16
mov
xchg
xor
in
fadd
and
lods
stos
fsubr
inc
jae
fdivr
inc
clc
xchg
leave
dec
call
push
call
push
int
inc
xchg
mov
sbb
inc
arpl
push
shl
clc
jo
push
inc
push
push
sub
call
mov
add
ss
adc
into
leave
mov
cmp
mov
movs
xchg
cmp
mov
test
(bad)
hlt
dec
(bad)
mov
ret
sbb
xor
ins
pop
retf
pop
pop
mov
loop
pop
into
sub
jl
out
push
out
mov
dec
or
(bad)
retf
mov
ror
mov
jae
test
mov
mov
leave
ss
adc
adc
cmp
shl
popf
hlt
or
jmp
int
push
add
pop
jae
sbb
hlt
mov
pop
fwait
adc
xchg
pop
rcr
sub
xor
add
add
ds
je
outs
stos
xor
cmps
iret
sbb
loopne
repnz
xchg
xor
imul
test
out
xchg
sbb
ds
dec
les
jae
pop
pop
call
aas
ins
sub
push
mov
jb
test
xchg
aad
pop
arpl
and
out
clc
je
inc
mov
(bad)
push
push
(bad)
sub
mov
and
pushf
lds
jo
icebp
shl
outs
mov
or
aad
or
dec
cmp
and
pushf
stc
arpl
dec
test
stos
in
mov
push
test
dec
mov
ficomp
mov
jnp
adc
push
add
gs
add
ret
cmp
mov
mov
mov
mov
sub
dec
mov
add
or
std
not
add
fs
dec
ret
adc
pop
inc
test
mov
pop
imul
sbb
mov
aad
jge
pop
mov
mov
sbb
add
sti
mov
cdq
add
fcmovu
dec
imul
sbb
inc
push
(bad)
out
mov
cmp
xchg
add
xchg
mov
push
cmp
sub
xchg
call
and
dec
loope
sbb
int3
pop
addr16
mov
xchg
sub
mov
repz
mov
scas
call
sbb
xor
jmp
fbld
add
loop
inc
and
adc
dec
mov
call
sbb
popf
xchg
xchg
adc
call
(bad)
in
push
mov
or
sbb
jmp
jnp
inc
in
lahf
sub
lods
pop
aam
ins
(bad)
js
cmps
jno
shl
inc
dec
aad
in
jle
dec
mov
in
xchg
scas
and
add
jno
fiadd
jb
pop
mov
cwde
adc
adc
ins
enter
sahf
fwait
fwait
dec
imul
jbe
xchg
or
mov
and
int3
aas
jno
jecxz
(bad)
hlt
cmp
and
mov
jno
add
mov
push
mov
pop
clc
add
and
imul
xlat
repz
cmp
fwait
inc
sbb
or
mov
popa
fiadd
hlt
push
adc
movs
push
xchg
sub
mov
xor
or
int3
cwde
pop
jno
or
adc
ret
dec
movs
shl
jl
jb
je
into
push
(bad)
adc
ins
repz
fdivp
int3
adc
call
xor
jnp
imul
pop
lods
icebp
stc
pop
inc
inc
test
or
outs
xor
cmp
add
fidivr
imul
call
pop
pop
or
aad
ds
fwait
add
inc
hlt
imul
add
repnz
in
movs
dec
dec
push
pop
mov
jg
js
loope
dec
popa
rcr
or
cmps
sub
(bad)
inc
imul
sbb
and
add
inc
stc
sbb
push
in
or
cmp
into
(bad)
out
in
cmp
push
mov
sbb
dec
add
fnsave
pop
fwait
or
dec
aaa
mov
out
mov
dec
xchg
popa
pop
adc
clc
inc
mov
add
xchg
div
xor
push
cmc
sub
jge
sahf
and
sub
add
jnp
fisub
frstor
sub
lds
xchg
xchg
mov
ficom
xchg
retf
mov
push
mov
add
retf
retf
push
lea
rcr
loop
pop
push
mov
fcomip
out
in
adc
pop
lods
and
dec
pusha
xchg
pop
(bad)
out
fmul
mov
fsubr
daa
mov
pop
xor
xor
stc
mov
cmp
jp
pop
mov
test
movs
icebp
cmp
imul
ficomp
in
mov
(bad)
fisubr
sti
push
movs
add
ficomp
aaa
nop
push
aad
lock
cmps
lods
pop
test
jge
sbb
pop
pop
jle
popa
js
add
and
out
fnstsw
dec
mov
add
icebp
jae
fwait
push
jno
or
xor
xor
bound
mov
(bad)
pop
mov
rcl
push
retf
mov
mov
mov
cwde
cmp
loop
ins
pusha
cmc
scas
or
ja
xlat
pop
jns
jne
xor
(bad)
xlat
and
leave
xchg
cli
and
cs
fistp
nop
fcmovbe
mov
inc
cmc
cmp
jnp
sub
in
sub
movs
adc
jnp
mov
pop
or
xchg
sbb
ins
pusha
(bad)
outs
adc
sub
pop
je
aas
push
push
cmp
div
jo
adc
push
push
stc
daa
adc
mov
mov
in
(bad)
fbld
test
mov
sub
mov
sti
ficom
in
sahf
scas
cmp
test
dec
icebp
dec
inc
outs
jg
mov
test
mov
lods
jno
cmp
push
jbe
add
mov
test
mov
gs
cmp
dec
mov
or
je
dec
out
xchg
lock
imul
dec
pop
cmp
mov
adc
(bad)
jbe
dec
or
mov
retf
adc
pop
pop
cmp
nop
dec
mov
cmc
sub
out
shl
add
test
push
mov
pop
mov
iret
cld
mov
(bad)
neg
push
sbb
mov
fist
sub
inc
inc
push
adc
and
mov
aam
jge
cmps
sti
int
mov
pop
sti
inc
lahf
mov
ins
enter
mov
add
popa
pop
jns
in
jb
cld
mov
xchg
and
add
cmp
repnz
inc
je
pop
rcl
xchg
xor
inc
sbb
stos
gs
ins
(bad)
jmp
add
jg
dec
cmp
dec
daa
icebp
cdq
mov
(bad)
push
jnp
pop
xor
int3
jecxz
cmp
pop
dec
call
xchg
enter
outs
stos
or
cmp
cmp
cmps
rcr
ins
sub
js
bnd
cmp
(bad)
sti
in
jns
and
jno
leave
popa
mov
xchg
xchg
jge
mov
ffreep
xchg
rol
sub
shl
pop
push
push
or
adc
or
cmps
jle
pop
mov
ins
movs
(bad)
gs
mov
cmps
xor
cmp
push
pop
shr
mov
fs
repz
sbb
mov
dec
sub
in
cwde
fldcw
xchg
mul
cs
shr
test
mov
shl
aam
jle
cmp
pop
mov
inc
scas
movs
cwde
bnd
sar
in
push
mov
hlt
xchg
and
loope
addr16
ins
inc
mov
(bad)
sbb
add
mov
or
mov
sbb
mov
cmp
adc
cld
adc
and
adc
push
xchg
add
mov
dec
xchg
add
ror
pop
xchg
jno
pop
xor
hlt
lock
inc
fidiv
xor
sub
ins
add
out
adc
data16
cmps
jmp
ret
test
in
pop
dec
push
out
aam
push
sbb
retf
sbb
scas
mov
dec
rcr
gs
mov
add
xchg
dec
xchg
add
xor
les
add
mov
mov
ret
(bad)
cmp
push
xchg
pop
sub
adc
lods
jmp
xor
jmp
and
cli
or
sub
adc
and
xchg
sbb
sahf
test
adc
dec
jge
push
in
mov
addr16
mov
push
lods
(bad)
sbb
mov
fiadd
add
pop
adc
sub
(bad)
shr
adc
aam
jmp
lods
int3
sbb
lods
fwait
jmp
jmp
inc
mov
mov
test
or
fmulp
push
mov
and
addr16
loop
or
idiv
add
aam
or
jecxz
in
mov
fs
dec
push
add
sub
stc
mov
ret
enter
lahf
out
inc
js
pop
pop
jecxz
out
inc
ds
and
test
jne
mov
pushf
add
and
pop
jb
pop
or
not
ror
mov
add
jno
mov
add
jge
(bad)
je
test
clc
shl
outs
outs
popa
mov
mov
and
imul
(bad)
xor
cmp
cmp
aam
mov
xor
sub
mov
xchg
in
push
pusha
xchg
sub
retf
or
mov
lods
es
int3
adc
call
xchg
fld
stos
adc
cmps
mov
outs
js
dec
xchg
and
loopne
mov
ficom
xchg
out
pop
dec
jl
cmps
dec
into
cmp
xor
push
test
sbb
add
sbb
in
or
les
fnstenv
mov
mov
icebp
pop
in
ss
jmp
sub
cs
scas
push
sub
nop
jae
loop
inc
sbb
add
ds
inc
mov
cs
push
add
stos
lea
ins
adc
mov
fidivr
mov
xchg
push
addr16
sbb
fwait
and
inc
add
mov
cwde
rcr
pop
movs
dec
xor
mov
dec
mov
xchg
fs
fild
cmps
jnp
xchg
retf
and
pop
push
mov
pop
sub
in
xor
or
add
ins
pop
cmps
xchg
repz
sbb
sub
jns
cmp
xor
(bad)
mov
nop
jg
xchg
(bad)
adc
push
outs
int3
shr
or
repz
pushf
inc
inc
inc
mov
enter
hlt
pop
call
in
mov
je
push
add
inc
fcomi
in
scas
adc
xor
js
sar
loope
call
push
call
add
add
in
loope
add
add
movs
xchg
sub
in
in
jmp
clc
inc
jae
fscale
mov
add
inc
fisubr
push
shl
in
lds
xchg
daa
scas
idiv
in
add
ficomp
jl
xor
and
pop
xchg
clc
mov
fstp
mov
sbb
popa
rcr
jno
dec
fwait
stc
inc
xor
cmps
(bad)
fld
xor
lods
cmc
ror
retf
(bad)
into
fs
pushf
aam
retf
enter
clc
es
loopne
fdivr
pop
push
dec
or
adc
daa
sbb
push
(bad)
shr
mov
pop
inc
add
loopne
mov
mov
add
cmc
cmp
ds
pusha
xor
(bad)
scas
and
xchg
push
fist
nop
hlt
movs
shl
ret
loope
jecxz
pop
and
push
out
cmp
sub
and
aad
inc
or
or
mov
(bad)
adc
dec
inc
(bad)
(bad)
sub
mov
adc
imul
jp
ins
repz
je
les
add
retf
mov
(bad)
xor
fldenv
psubsw
push
inc
mov
mov
inc
in
adc
pushf
stc
pop
sbb
std
sub
xchg
jae
add
bound
popf
cdq
test
(bad)
jecxz
jmp
jmp
or
dec
xlat
and
outs
add
adc
sub
mov
sub
fistp
cmp
shr
sub
ds
push
test
mov
cwde
scas
hlt
add
mov
and
xchg
dec
jmp
and
or
lods
adc
jb
ds
(bad)
sbb
mov
arpl
repz
hlt
ss
push
mul
(bad)
aad
jle
push
inc
(bad)
shl
mov
not
sbb
aam
data16
out
cmp
scas
les
mov
and
sti
and
sub
hlt
mov
xor
call
dec
pop
dec
ins
aas
sbb
scas
cld
ins
sub
jnp
sti
jmp
cli
stos
dec
pushf
sahf
popa
add
add
jo
sbb
fidivr
scas
cs
daa
aam
fcomp
sub
push
push
aas
cmp
push
inc
jg
mov
adc
jnp
dec
rol
mov
rcl
(bad)
call
ins
cmps
xor
ret
loop
in
mov
cmp
out
jmp
add
dec
push
inc
fs
xor
mov
lods
jae
shr
push
xchg
mov
mov
mov
dec
retf
gs
xor
idiv
idiv
xchg
out
or
addr16
mov
aam
outs
mov
jnp
adc
and
adc
div
pop
add
sbb
sub
into
xchg
xor
jbe
das
xchg
inc
push
out
test
push
jp
xchg
pop
add
aad
sub
retf
ret
adc
mov
mov
mov
bound
loop
outs
mov
mov
(bad)
out
mov
adc
mov
stos
dec
cmps
add
cmp
inc
lods
dec
mov
mov
and
cs
sub
lds
stos
mov
iret
out
repz
inc
jle
mov
jmp
mov
pop
sahf
dec
sub
mov
repz
inc
pop
sbb
js
lock
sub
xchg
adc
aam
jno
cdq
cdq
xchg
add
xchg
adc
push
imul
dec
and
scas
dec
mov
xchg
pop
aas
rol
sbb
push
pushf
retf
sbb
int
out
sbb
not
xor
and
or
mov
daa
scas
adc
outs
in
sbb
adc
push
in
dec
push
lds
arpl
repz
imul
lock
aad
sbb
push
ja
int
lods
jl
xor
inc
push
cmps
or
sar
into
mov
xor
dec
sbb
leave
jnp
add
and
shl
scas
xchg
hlt
mov
loop
ja
xor
imul
(bad)
push
cld
xor
lds
sbb
test
or
pop
les
test
sub
(bad)
jns
imul
add
sub
cld
jno
pop
ss
sbb
data16
jle
enter
xchg
jecxz
xchg
xchg
and
push
and
int3
sar
xchg
push
in
pop
adc
(bad)
iret
dec
inc
loope
pop
mov
cmc
jp
icebp
jo
pop
cmps
sbb
push
test
ins
adc
jp
imul
adc
xchg
cs
repnz
xor
sbb
pop
adc
xchg
in
mov
movs
adc
mov
sbb
jnp
sbb
ins
lahf
cmp
cdq
mov
(bad)
das
or
lock
jbe
js
xor
std
xor
jle
movs
pop
inc
jmp
icebp
mov
cmp
aas
clc
iret
pop
mov
aas
dec
je
test
imul
rol
and
xchg
in
fdivrp
and
lahf
out
enter
retf
fld
jo
sar
jo
pop
shr
lds
pop
je
inc
ja
mov
repz
mov
mov
mov
mov
into
mov
xchg
mov
iret
in
rcl
jl
je
ins
data16
shr
push
adc
add
and
pop
or
jmp
and
mov
fcomp
in
jp
cwde
je
mov
xor
nop
shld
(bad)
out
repz
mov
sub
es
add
mov
dec
inc
add
pop
mov
scas
push
cli
jns
mov
sbb
loopne
pop
je
sbb
sub
repnz
sub
cmp
pop
jno
pop
shl
ja
sub
push
mov
cli
inc
ss
sti
or
cmps
dec
clc
and
int3
arpl
aam
nop
jbe
xor
ss
cli
std
jne
cmp
sbb
call
sbb
arpl
(bad)
lods
outs
enter
in
iret
dec
sbb
add
push
call
bnd
cmp
hlt
push
retf
in
repz
(bad)
fisttp
scas
mov
xor
inc
and
mov
retf
ins
div
test
and
hlt
adc
jge
pop
xor
fwait
mov
adc
out
test
push
xor
les
mov
sahf
mov
xchg
inc
cmps
mov
adc
imul
js
cmp
mov
xchg
lods
add
arpl
cmp
lods
rcr
test
rol
loopne
rol
out
jno
add
outs
push
add
mov
pop
xchg
adc
fdiv
(bad)
in
cmp
add
scas
xchg
cmps
xlat
jge
not
pop
mov
dec
dec
mov
jne
cld
ins
mov
stos
stos
inc
mov
mov
sbb
(bad)
and
scas
es
fwait
xor
jb
mov
(bad)
in
mov
push
dec
jnp
dec
pop
shr
add
es
fidivr
scas
imul
push
or
fs
clc
icebp
sti
sbb
and
xor
(bad)
mov
mov
adc
shl
mov
in
mov
mov
xchg
xor
outs
inc
stos
xchg
mov
call
call
iret
pop
xchg
mul
sahf
xchg
sub
xor
out
push
mov
mov
mov
cdq
aaa
dec
push
xor
xor
test
je
jecxz
push
sub
aas
dec
push
sar
rcr
fist
aad
gs
adc
mov
(bad)
xchg
hlt
cdq
mov
imul
or
push
push
xchg
fidivr
out
xchg
lds
outs
sbb
adc
add
call
sub
stos
mov
pop
cmp
pop
fucomi
adc
pop
jmp
jb
gs
fbstp
add
cwde
shl
(bad)
leave
add
sbb
mov
inc
jg
(bad)
loopne
lock
les
xor
lea
popf
jle
mov
mov
sub
popf
xchg
push
add
mov
imul
pop
adc
test
jns
(bad)
mov
out
scas
les
xor
sti
sbb
test
icebp
mov
enter
jmp
imul
pop
cmp
pop
mov
inc
dec
inc
push
jmp
int
sbb
fld
mov
shl
mov
fcmove
sbb
jle
sub
enter
shl
popa
lods
rol
lahf
inc
mov
xchg
sub
adc
add
ffree
outs
rol
xchg
or
nop
push
xchg
out
std
inc
daa
retf
jo
dec
das
bound
movaps
push
test
sub
(bad)
mov
aad
ja
addr16
xor
and
je
xchg
(bad)
jno
js
daa
add
hlt
data16
inc
scas
mov
mov
mov
int
aaa
mov
mov
xor
jo
mov
leave
test
adc
mov
dec
mov
fcmovne
sub
cmp
dec
pushf
jl
imul
mov
mov
jge
pop
out
call
cs
dec
movs
inc
out
fnstenv
pusha
stc
popa
cmps
(bad)
jae
push
push
xchg
adc
jmp
in
aaa
mov
retf
fimul
cmp
mov
idiv
pop
fnstsw
test
ins
add
mul
das
rcl
pop
pop
stc
jno
imul
pop
es
call
fidiv
and
lea
ss
inc
cmps
in
and
retf
xchg
div
jnp
outs
das
cs
jge
stos
(bad)
lock
mov
lods
daa
aas
add
cmp
cmp
ss
lahf
jge
push
mov
retf
or
(bad)
xor
dec
dec
mov
jp
cmps
sbb
dec
fadd
cmp
add
jne
imul
dec
test
(bad)
mov
cmp
mov
add
into
outs
cdq
cmc
data16
cmc
mov
cdq
popf
push
sti
push
ss
xor
movs
jl
rcl
push
ret
inc
adc
test
lea
repz
push
out
imul
sbb
popa
cmp
ins
jmp
mov
adc
and
scas
iret
dec
out
xchg
mov
mov
into
(bad)
pop
icebp
sub
or
cmp
mov
aad
gs
stc
mov
push
in
pop
jmp
stos
rcr
scas
icebp
mov
pop
les
jae
and
sbb
bound
sahf
pop
mov
push
cmps
in
mov
out
call
stos
xchg
cmp
ins
clc
fcos
and
cmps
int
les
aas
add
jl
pusha
add
fs
sbb
mov
adc
inc
xchg
xchg
repnz
imul
inc
lock
jb
or
xchg
push
in
cld
test
scas
(bad)
std
adc
(bad)
fisub
clc
fwait
mov
pop
ror
cmp
scas
adc
cli
push
dec
outs
lods
iret
(bad)
adc
pushf
cmp
mov
and
rol
lahf
jmp
aas
popa
mov
adc
sbb
bound
jle
mov
adc
aas
push
pop
icebp
lods
stc
es
push
jl
ret
mov
cmp
push
inc
push
mov
xchg
inc
add
std
push
cmp
retf
mov
sbb
and
lods
xlat
aaa
loop
mov
mov
jbe
je
push
xor
fisub
pop
out
popa
(bad)
mov
jl
cmp
xor
(bad)
sub
xchg
xor
(bad)
and
mov
popf
mov
js
std
inc
scas
inc
rcl
call
sbb
sti
test
inc
movs
add
xchg
or
es
nop
test
lea
mov
pop
xlat
jge
mov
ficomp
dec
repz
and
and
mov
arpl
movs
sub
movs
cmp
and
cmp
fst
add
inc
adc
int3
mov
jae
inc
stos
pop
enter
push
xchg
(bad)
addr16
enter
test
ret
cmps
inc
or
push
mov
(bad)
lods
ins
xchg
fild
repz
into
clc
and
and
pop
inc
leave
movs
inc
ret
fs
adc
je
not
ss
mov
adc
add
dec
ficomp
and
pop
std
bound
adc
cmps
sbb
jmp
jnp
jmp
fist
inc
fist
mov
in
push
shl
daa
jge
push
into
mov
iret
fcomp
or
stos
movs
js
ds
into
adc
mov
add
popa
or
mov
mov
or
fs
fadd
mov
cmp
inc
jge
pusha
js
fisubr
ja
or
xchg
mov
push
daa
data16
loop
cmps
jge
in
add
ins
pop
push
sahf
pop
sub
scas
jle
inc
(bad)
test
xchg
or
jae
xchg
lea
gs
jnp
mov
pop
leave
xlat
arpl
stos
pop
scas
sub
mov
hlt
push
mov
add
or
cwde
retw
or
jbe
cmps
and
mov
enter
xchg
jnp
leave
nop
jp
dec
rcr
ficom
cdq
pop
add
add
xor
loopne
sti
outs
xchg
adc
jne
mov
test
loope
into
loopne
loope
das
test
cmps
mov
mov
les
xor
mov
cwde
test
add
dec
jne
les
out
mov
in
mov
add
xchg
cmc
mov
push
outs
in
fsubp
or
mov
or
mov
lahf
sub
ins
movs
aam
cdq
lods
fs
retf
movs
jno
shr
sub
sub
lea
les
push
mov
inc
dec
aas
outs
(bad)
cdq
(bad)
loop
(bad)
das
push
pop
xchg
dec
les
add
adc
sahf
inc
rol
imul
pusha
mov
arpl
adc
(bad)
push
xchg
repnz
sub
mov
xchg
inc
cmps
popf
push
jae
fcom
imul
push
repnz
(bad)
hlt
mov
sti
int3
dec
ficom
adc
push
mov
shl
cs
cwde
scas
outs
and
test
and
test
and
jae
test
xchg
repz
sub
push
je
ss
dec
add
mov
pop
xor
call
push
outs
mov
mov
add
adc
rol
dec
jp
fnstsw
retf
sbb
add
mov
jne
stos
sub
or
pop
jg
int
push
data16
push
adc
loopne
cmp
sbb
pop
pop
ja
cmps
popa
inc
(bad)
in
jmp
mov
jle
sbb
lock
jae
mov
push
add
mov
(bad)
mov
lahf
das
aam
dec
es
sub
dec
int
mov
lea
outs
jg
and
(bad)
push
inc
mov
pop
(bad)
out
and
out
pop
imul
or
cld
in
cmp
add
inc
or
dec
lea
add
dec
cmp
xchg
test
pushf
mov
pop
xchg
stos
sub
dec
push
xchg
or
(bad)
ins
mov
ror
std
xchg
in
cmps
nop
(bad)
ins
sbb
or
sub
stos
je
ror
fisub
lock
jmp
out
sbb
ins
push
pop
sbb
mov
add
sbb
adc
mov
mov
jp
not
ror
mov
cld
inc
iret
stc
loop
push
jmp
fnsave
ss
jecxz
out
pop
leave
jle
add
mov
inc
fnstenv
lea
sub
repz
xchg
mov
iret
test
ret
pop
jmp
cmp
stc
sub
cmp
and
nop
jmp
xchg
dec
and
movs
sbb
inc
inc
dec
cmc
enter
and
out
push
stos
adc
dec
push
ins
std
ds
das
push
mov
mov
inc
sub
out
push
push
(bad)
mov
inc
faddp
or
inc
stc
dec
cli
sbb
add
sub
xchg
xlat
inc
loop
out
ds
cmp
bound
into
aam
cmps
pop
mov
jo
jbe
pop
cmc
(bad)
add
(bad)
outs
les
or
xchg
cmp
cld
fld
push
loop
push
out
cld
outs
icebp
adc
ret
scas
inc
dec
mov
sbb
mov
mov
shl
pusha
xor
xchg
inc
cmc
test
mov
push
(bad)
jmp
fwait
adc
sbb
xrelease
sub
(bad)
jcxz
cmp
cmc
pop
add
jnp
xchg
lods
mov
sub
fild
cli
push
(bad)
test
js
inc
mov
les
lods
pop
jns
mov
sahf
test
mov
or
jb
mov
pop
ret
add
pop
push
or
mov
push
dec
push
int3
pop
imul
nop
out
push
dec
in
mov
mov
sar
xchg
in
mov
ret
cli
mov
fwait
retf
test
sub
adc
sbb
fidiv
sahf
aas
test
in
mov
sub
jno
mov
(bad)
ja
cmp
mov
inc
mov
out
fbld
push
mov
rcl
push
adc
xchg
mov
arpl
lock
sub
and
pop
cmp
cli
lahf
je
add
imul
jle
ss
pusha
jae
jg
gs
xchg
jle
dec
fs
neg
fsubr
push
add
aaa
jl
lods
retf
jg
mov
jns
jl
jmp
sbb
pusha
fisubr
fcomp
pop
stc
std
and
jno
or
popa
or
mov
inc
cmps
mov
lock
ror
mov
inc
sbb
mov
out
neg
pop
inc
test
jo
test
inc
sbb
sub
sub
xor
stos
push
cmp
out
mov
jmp
movs
cmc
mov
shl
dec
jmp
fisubr
mov
add
std
dec
out
jmp
or
xchg
pusha
push
lock
popf
outs
mov
jmp
add
cmps
fs
scas
cmp
xchg
mov
retf
jg
mov
jnp
fisubr
sbb
bound
push
jp
jge
adc
jbe
sbb
call
sub
in
sbb
fist
sub
jns
out
xor
or
pop
xor
leave
mov
pop
sbb
push
nop
inc
inc
jmp
sbb
push
xchg
(bad)
(bad)
imul
js
push
add
jae
shl
adc
ja
add
iret
pushf
jmp
sbb
push
and
mov
inc
mov
ss
addr16
pop
jnp
aaa
xor
adc
mov
sbb
sar
iret
push
push
in
push
mov
adc
dec
dec
sbb
repz
cmp
movs
out
arpl
popa
bound
xchg
out
sbb
leave
mov
pop
dec
test
sbb
iret
jmp
and
push
rcl
inc
mov
(bad)
sbb
(bad)
cmps
ins
mov
jns
jne
xchg
dec
push
cmp
gs
gs
sbb
mov
loopne
inc
int
cmc
stos
out
inc
push
push
(bad)
push
out
push
push
fsubr
in
mov
lahf
icebp
jae
out
sub
and
(bad)
cwde
fild
jmp
aaa
gs
iret
out
out
out
mov
mov
and
dec
cmp
and
add
cdq
movs
jo
push
adc
ss
push
addr16
imul
or
lahf
jb
ret
in
sar
push
pop
pop
inc
mov
(bad)
fwait
adc
int
jno
ins
stc
addps
mov
mov
loop
and
pop
aad
jle
cmp
dec
and
cdq
pop
mov
mov
cmp
call
xchg
dec
ss
pop
adc
(bad)
(bad)
loope
ss
jnp
push
mov
mov
sub
pop
ins
xor
fs
adc
xchg
out
dec
arpl
imul
nop
outs
inc
or
sbb
and
dec
data16
fsubr
iret
pushf
add
test
out
or
add
inc
stos
hlt
fdiv
add
shl
mov
add
sbb
mov
outs
inc
xchg
(bad)
scas
add
push
out
stos
cmp
call
daa
dec
mov
sbb
push
jmp
(bad)
and
pop
aad
and
clc
inc
inc
mov
xchg
into
mov
bound
ss
in
cmps
leave
iret
neg
cmp
push
outs
icebp
clc
push
pop
or
data16
imul
or
retf
test
mov
or
iret
inc
push
ror
sar
sbb
push
add
test
sub
stos
lods
call
ja
add
sub
ins
imul
test
add
ror
pop
div
(bad)
movs
sar
pop
add
clc
in
pop
push
fisubr
sub
or
ds
or
and
aad
or
xchg
push
stos
sbb
add
jle
xlat
mov
loop
das
dec
inc
sbb
(bad)
das
int
lods
push
dec
dec
idiv
movs
sar
lock
(bad)
enter
loope
mov
mov
loopne
ds
push
and
mov
mov
les
xor
push
jne
(bad)
(bad)
dec
pop
(bad)
dec
xor
dec
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
pop
aad
push
ds
fisubr
dec
mov
add
ret
int3
cld
sub
popa
repz
sti
jmp
clc
cmps
out
pop
mov
dec
loopne
and
ret
dec
sub
fst
hlt
mov
mov
push
mov
xchg
jne
lea
sub
out
ret
nop
js
lds
and
imul
iret
inc
jp
mov
lock
icebp
adc
mov
sub
or
cmc
test
aam
retf
push
jmp
sub
pop
mov
cld
cmp
stos
mov
adc
gs
clc
repz
jo
mov
xor
movs
popa
test
sub
outs
sub
jge
test
and
jmp
sub
loope
popa
mov
xor
mov
jne
imul
xchg
jecxz
mov
fcomp
and
or
add
mov
pop
push
fwait
mov
xchg
sub
popa
nop
daa
leave
pop
xchg
mov
sbb
dec
xchg
(bad)
or
mov
lock
dec
ds
daa
mov
stos
bound
loop
call
into
cmp
sbb
mov
xchg
or
add
pop
mov
xor
pop
lock
or
xchg
or
sub
ins
je
mov
add
xor
push
sbb
sub
push
into
jns
out
ret
imul
cmp
mov
mov
pushf
push
pop
jmp
cli
scas
iret
push
jns
es
add
jb
jmp
mov
data16
lahf
das
mov
push
pop
or
xchg
je
dec
aad
popf
jno
inc
cs
mov
fisttp
dec
xchg
leave
mov
or
push
std
pop
test
and
cdq
out
adc
pop
adc
dec
(bad)
call
fs
dec
in
mov
pop
cmp
out
int
mov
cmps
sub
sbb
(bad)
sti
mov
fiadd
fadd
outs
mov
aaa
into
sub
jnp
sti
mov
outs
scas
cmp
std
dec
cmps
popf
dec
sub
mov
or
mov
test
clc
jle
out
push
xchg
ins
lods
push
rol
retf
sbb
adc
lods
aam
loopne
sub
enter
bnd
test
mov
lea
loopne
ja
mov
adc
and
loop
mov
adc
ret
push
mov
lahf
dec
out
or
or
outs
add
mov
mov
sub
mov
scas
push
outs
ret
add
adc
popa
push
xor
dec
sub
adc
cmc
outs
dec
jp
imul
jbe
daa
mov
loope
(bad)
sbb
add
rol
cli
retf
repnz
out
(bad)
fdivr
popf
pushf
add
cs
out
mov
inc
fidivr
or
fs
cmp
fdivr
pop
and
arpl
mov
rcr
dec
mov
cmps
sbb
cmp
push
test
fst
and
pusha
outs
adc
inc
xchg
fidivr
outs
movs
shr
fcomp
dec
pop
mov
jp
cdq
push
pop
gs
push
std
dec
(bad)
jle
mov
xor
push
jecxz
push
mov
loope
jmp
push
aad
pop
outs
mov
pushw
sub
ins
xchg
cli
xchg
pop
xchg
loopne
push
test
pop
add
lods
xchg
cmp
leave
or
shl
xchg
call
jmp
jno
mov
(bad)
(bad)
test
cwde
xchg
js
adc
inc
mov
(bad)
fsubr
jb
xor
lods
call
dec
ret
cmp
push
stc
je
xchg
rcr
jne
fimul
mov
fwait
cwde
or
std
ins
dec
mov
adc
add
js
pop
sbb
push
data16
push
cmp
mov
sbb
mov
sar
jne
ret
jmp
mov
push
mov
pop
hlt
cmp
les
mov
ret
and
dec
adc
and
mov
test
mov
jp
cmp
mov
pop
inc
xlat
adc
into
pop
add
fwait
lock
xchg
outs
and
push
in
sub
sbb
inc
lea
int3
int3
out
jb
pop
or
das
jge
outs
jge
cld
(bad)
not
jo
sahf
out
add
into
mov
int
icebp
jg
and
fst
dec
scas
int
lock
dec
lahf
jl
jmp
inc
mov
add
jg
and
mov
scas
rol
out
push
pop
mov
push
add
or
mov
(bad)
daa
fidiv
ins
lea
sbb
pusha
xchg
call
lods
and
cli
push
loop
es
xor
(bad)
sub
pushf
pop
sbb
jae
iretw
mov
cmp
bound
fwait
xor
push
push
jae
inc
jg
sub
scas
out
ds
cmc
and
shl
jns
shr
icebp
ror
sub
daa
dec
xchg
aas
fisubr
mov
lods
pop
xchg
imul
shr
hlt
stos
ss
mov
mov
add
mov
adc
add
sub
add
arpl
jnp
xchg
inc
push
retf
mov
sub
mov
fisubr
jnp
in
leave
data16
out
in
sahf
in
mov
scas
sbb
sar
shr
ds
mov
test
and
into
pop
scas
leave
icebp
and
inc
rcr
sti
mul
pop
sub
pop
and
add
jmp
shl
xchg
mov
data16
add
mov
popa
pusha
fstp
pushw
in
rol
inc
not
stc
in
mov
cmp
out
or
lods
add
into
add
mov
popa
jg
push
inc
sub
mov
loope
jno
push
rcl
fs
clc
jnp
mov
dec
xor
lods
movs
lock
xchg
cmp
les
test
enter
dec
mov
inc
or
pusha
mov
add
mov
pop
aad
fst
out
int3
int
shr
movs
leave
inc
ins
(bad)
cmc
add
mov
call
dec
jbe
xlat
jmp
cmp
inc
pop
popa
add
pop
ja
(bad)
xor
dec
xor
dec
mov
popa
cwde
call
aas
add
xlat
leave
pushf
hlt
xchg
dec
inc
pop
add
shl
bound
push
movs
mov
sbb
aas
pop
add
rol
and
xchg
sub
add
mov
ins
sbb
cmps
sub
cdq
mov
fcomp
ret
sbb
in
adc
mov
sub
fimul
test
push
push
pop
inc
fstp
mov
add
int
and
jl
jl
cli
cmp
call
xor
(bad)
jge
test
mov
xchg
push
cmp
xor
sbb
sub
push
or
fimul
ss
(bad)
call
add
cwde
sahf
add
push
jo
dec
push
cwde
push
mov
xor
cli
sbb
daa
aam
mov
jle
inc
and
fistp
fisubr
(bad)
push
jb
mov
retf
add
daa
pop
in
push
xchg
shr
mov
data16
or
sub
cs
pop
daa
int3
neg
aad
jge
out
ins
inc
jl
jno
jns
shl
add
ret
int3
mov
inc
adc
xor
push
dec
xor
push
cmp
fwait
inc
and
shl
dec
push
xchg
push
or
bound
inc
mul
push
mov
rcl
in
xor
fnsave
cmp
and
sbb
ins
push
call
mov
neg
add
cmp
out
adc
loop
pop
ds
fwait
pop
push
dec
fidiv
(bad)
shl
mov
mov
jmp
or
xor
dec
in
lock
fdiv
add
rcr
jnp
dec
fcomi
xor
call
arpl
data16
xchg
mov
mov
dec
mov
jns
test
and
sahf
cmp
mov
mov
aam
add
or
and
mov
dec
pusha
add
cld
lahf
or
add
mov
dec
pushf
iret
fcom
dec
cmp
sub
pop
test
imul
ja
in
xor
out
(bad)
fild
test
xor
mov
sbb
xor
lock
shr
pop
sbb
sbb
pop
cs
lds
int3
fcomp
xchg
sti
mov
aam
adc
pop
jno
add
nop
(bad)
and
test
or
or
retf
rcr
popf
cmp
cmp
das
scas
movs
mov
xor
fwait
arpl
or
push
or
or
and
inc
ja
sub
fwait
or
fiadd
mov
ret
and
mov
hlt
fwait
or
sub
jmp
ins
xchg
fistp
jb
imul
cmps
lods
mov
mov
sbb
inc
jge
sbb
xor
ss
push
pop
test
jmp
or
mov
pop
sub
jl
mov
shr
pushf
jbe
dec
add
jge
adc
dec
in
mov
and
rcr
xor
cmp
xor
pop
je
cmp
ror
jmp
shr
xlat
or
sahf
sub
das
das
adc
or
cmps
in
jge
(bad)
cdq
cwde
rol
loopne
clc
inc
push
add
mov
sub
sti
imul
push
sbb
js
pop
dec
inc
cdq
frstor
lock
inc
lods
cmp
movd
jnp
fwait
sub
push
sbb
adc
xlat
leave
and
or
mov
pop
jecxz
gs
push
sub
jo
fsubr
inc
rol
mov
xor
xchg
lods
xchg
and
mov
mov
mov
fld
mov
mov
adc
or
mov
aas
es
aaa
cmc
popf
pop
es
adc
xor
(bad)
mov
pop
icebp
cmp
fistp
sahf
mov
hlt
lea
push
dec
fwait
xor
push
add
pop
mov
div
adc
sti
add
mov
mov
inc
arpl
lea
sbb
xchg
pop
popf
mov
in
sbb
cwde
or
(bad)
fwait
ret
lods
dec
data16
sub
cmps
push
push
std
adc
push
ins
idiv
xchg
sbb
add
jb
xchg
mov
loop
push
sbb
mov
push
pop
adc
and
mov
cmp
add
ins
pop
push
addr16
cmp
dec
lods
stc
mov
or
or
aam
lds
mov
rcl
add
outs
jb
int3
cmp
add
or
ficomp
or
jp
jne
dec
lds
mov
mov
xchg
sbb
outs
les
addr16
push
push
xchg
addr16
inc
pop
ins
cmp
cs
jae
jae
push
dec
xchg
push
mov
push
ret
pop
xchg
cs
and
mov
xchg
xchg
(bad)
sub
push
sahf
or
xor
inc
jne
cmp
adc
leave
fdiv
jne
sbb
xchg
test
mov
out
pop
jno
out
aam
cld
cmp
push
outs
adc
int3
retf
mov
push
add
push
or
rcl
out
push
or
stc
cmps
popa
pop
stos
xchg
xchg
xchg
xchg
add
nop
cmp
retf
push
fldcw
ds
sbb
stc
dec
pop
sub
in
repz
iret
(bad)
fstp
add
adc
scas
push
mul
test
in
dec
jnp
sahf
in
aad
dec
adc
pushf
or
ins
jge
pop
in
and
add
pop
loopne
fisubr
mov
dec
mov
je
call
xor
std
sub
mov
pop
and
ins
push
push
daa
gs
or
sub
dec
mov
aaa
dec
cmp
lods
jne
xor
xor
xor
inc
jne
int3
inc
repz
mov
cdq
retf
xor
call
pusha
clc
xor
mov
daa
loop
cli
xchg
xlat
sbb
inc
pop
lods
inc
or
mov
inc
adc
cdq
sub
ret
int3
or
movs
inc
sbb
pop
sahf
jecxz
jbe
jmp
mov
adc
mov
jecxz
dec
mov
push
pop
cmps
out
cmp
pop
mov
xor
xor
adc
test
scas
jmp
fcom
mov
dec
or
push
mov
mov
inc
xchg
je
outs
lods
stc
lahf
sbb
pop
xchg
sbb
repz
push
sbb
xor
jmp
inc
adc
sub
sub
nop
and
(bad)
icebp
hlt
cmp
dec
clc
sbb
repz
fldenv
adc
adc
mov
cs
pop
push
xor
add
cmp
mov
vpsubsb
mov
jecxz
ss
iret
dec
ss
jb
mov
xchg
loope
test
dec
data16
mov
enter
rcl
imul
je
xor
iret
add
adc
xchg
lock
dec
mov
lods
test
and
aam
mov
cli
mov
retf
aas
sbb
pop
pop
mov
sbb
mov
mov
xchg
mov
pop
cmp
pop
cwde
add
push
adc
stos
in
pop
mov
test
mov
inc
xlat
in
addr16
add
in
mov
pusha
mov
add
dec
jmp
neg
pushf
lods
xchg
in
jp
stos
mov
out
mov
aas
jl
mov
xor
add
lock
dec
adc
lods
cmp
sbb
add
mov
jge
jne
mov
fsubr
shl
fimul
cmp
das
cdq
ror
mov
mov
repnz
jmp
adc
ja
loopne
mov
push
dec
mov
mov
mov
mov
mov
xchg
jmp
add
mov
movs
popa
push
or
mov
test
xchg
jl
or
jnp
and
xor
fcom
sub
jle
outs
dec
and
sub
or
sub
jmp
mov
std
test
push
das
adc
mov
iret
aad
pop
mov
push
xchg
test
test
sbb
xor
call
pop
pop
pop
in
jmp
inc
push
mov
inc
cli
adc
icebp
stos
sbb
fisubr
and
leave
mov
mov
and
cmc
and
mov
pop
popa
xor
or
popa
dec
dec
(bad)
imul
(bad)
jmp
aad
xchg
sbb
in
dec
sbb
fsubr
movs
jo
mov
jge
lods
add
aad
mov
pop
inc
icebp
jb
jo
js
pop
adc
and
call
mov
dec
dec
xchg
out
fs
pop
retf
(bad)
add
fild
fs
sub
xlat
adc
dec
sbb
push
cmp
out
mov
movs
adc
sub
push
int3
xchg
pop
movs
push
pop
sti
sahf
fistp
adc
sub
mov
adc
jl
sti
sub
jnp
sub
adc
int3
outs
mov
xor
sbb
sbb
lods
scas
xor
jl
dec
jmp
cmp
add
dec
xor
cmp
or
push
pop
lock
add
ds
call
mov
lods
sub
in
stos
ins
mov
bound
iret
dec
or
push
adc
pop
fiadd
push
push
or
dec
mov
push
shl
loope
pushf
sar
rcl
push
mov
lock
mov
mov
jge
aaa
push
(bad)
push
retf
scas
and
push
push
mov
xchg
movs
jbe
add
add
dec
inc
ja
sub
in
sahf
ds
add
adc
xor
fld
mov
sbb
mov
repnz
sub
mov
stos
and
int3
es
(bad)
leave
popf
in
hlt
pop
ds
sbb
loopne
add
cmc
xor
retf
pop
push
dec
inc
ja
push
adc
(bad)
loope
and
inc
scas
test
loopne
push
shl
push
(bad)
mov
jge
adc
sti
dec
fidivr
add
add
mov
imul
or
sub
pop
and
jne
inc
jno
pop
and
test
or
dec
xor
adc
cmp
ret
loop
dec
and
sbb
push
lds
or
cld
pop
mov
fwait
mov
ss
sub
loopne
push
fwait
int3
or
sub
jo
and
jge
div
xlat
arpl
or
and
call
cmp
arpl
mov
(bad)
fcom
adc
scas
bound
mov
mov
and
lds
dec
(bad)
xor
push
or
pop
sbb
and
out
jns
add
bound
aas
cld
push
xor
repz
jmp
ror
xor
jp
(bad)
mov
cmps
and
ret
pop
out
popa
into
mov
js
jae
iret
pusha
sub
xchg
into
scas
sbb
jae
movs
xchg
adc
push
and
mov
add
jno
push
sbb
xchg
mov
ror
test
jle
out
jb
adc
push
repz
mov
pop
jns
push
fdiv
arpl
mov
iret
rol
mov
sub
xchg
shl
neg
jp
mov
lea
leave
sub
push
lahf
imul
daa
ja
push
div
dec
dec
nop
pop
adc
xchg
out
ret
shl
jp
rol
inc
call
fnstsw
jae
push
fs
repz
mov
sar
inc
dec
aam
mov
dec
xchg
fiadd
mov
push
jg
in
pop
inc
dec
icebp
pop
repnz
push
mov
inc
adc
xchg
adc
rol
inc
ins
adc
mov
mov
push
movs
sub
dec
adc
xchg
arpl
sub
leave
push
jns
xchg
sub
lods
fistp
fild
adc
sbb
and
data16
ins
rep
cmps
mov
nop
js
xchg
fs
test
in
sub
xchg
adc
mov
add
call
xor
mov
hlt
lea
push
pop
call
fsub
sbb
dec
sub
clc
push
rol
inc
in
mov
mov
mov
std
rol
or
test
mov
fnstenv
in
jno
ds
arpl
cmc
jns
inc
add
aaa
or
adc
repnz
mov
xchg
dec
cmp
pop
adc
cmps
ins
daa
adc
adc
call
imul
add
mov
imul
push
push
(bad)
cmp
data16
test
clc
xchg
cs
fild
add
jmp
test
mov
je
loop
cmp
daa
fnstcw
cld
sub
jmp
shl
icebp
rcl
sbb
jp
xchg
test
ror
sub
fistp
xor
movs
add
mov
inc
pop
(bad)
jmp
outs
inc
mov
xor
mov
push
shl
mov
cmp
addr16
push
add
movs
jmp
sub
arpl
cmp
fbld
and
add
repnz
push
xor
fist
add
out
or
fnstsw
jmp
mov
movs
(bad)
xor
or
jbe
outs
popf
jecxz
test
es
hlt
adc
dec
mov
aaa
xchg
pop
mov
add
push
and
cmps
pop
jecxz
js
sbb
mov
jmp
ins
jmp
popa
nop
(bad)
and
in
pop
sbb
int3
nop
xchg
push
push
sub
add
pop
push
loop
mov
jnp
push
push
clc
jg
mov
scas
adc
je
in
sub
jp
cmp
xor
or
add
inc
inc
mov
out
sub
jmp
sbb
(bad)
push
repnz
and
ins
pushf
or
and
jo
int
jae
mov
inc
sbb
mov
stos
stc
loope
sub
pop
cmp
xor
loop
sub
jmp
fld
push
and
loopne
push
movs
fadd
inc
cdq
jbe
cmp
mov
xchg
jg
adc
call
pop
cmp
aad
sar
push
je
xlat
and
jns
aas
sub
aam
int3
jg
inc
in
lock
xchg
mov
jne
sub
mov
retf
das
inc
sahf
xchg
fs
int3
mov
cwde
imul
sub
sbb
dec
push
cdq
jmp
out
push
sar
pop
mov
xchg
pusha
jb
cwde
popw
mov
test
inc
xchg
out
daa
mov
push
out
and
fnsave
addr16
adc
xor
sbb
stos
xchg
in
push
sahf
mov
mov
sub
test
sbb
push
adc
xchg
daa
pop
test
out
xor
or
ja
call
sar
adc
mov
mov
ja
mov
mov
out
xor
jae
xchg
gs
cs
push
xchg
inc
cmp
jae
cwde
in
imul
clc
mov
mov
inc
cli
mov
aas
cld
jp
push
or
clc
test
add
or
lods
cmp
inc
aaa
pop
xor
jmp
nop
ins
pop
mov
or
mov
xchg
ins
lds
adc
push
pusha
mov
shr
jle
add
xchg
aaa
and
(bad)
stos
call
push
stos
xchg
pop
push
out
xchg
movs
leave
xor
or
push
clc
sbb
rol
jae
adc
loope
mov
dec
push
imul
fidiv
mov
cmps
movs
push
hlt
lock
mov
push
lock
clc
sub
leave
es
push
sub
and
scas
not
mov
or
inc
jb
cmps
push
jmp
cmp
mov
dec
xchg
or
fdivr
retf
xchg
fisub
dec
xor
in
ret
ret
aas
sub
mov
or
call
xor
adc
adc
imul
push
or
out
lods
data16
adc
pop
jmp
popfw
add
fcmove
(bad)
sbb
adc
shr
inc
mov
loopne
or
in
jmp
mov
shl
(bad)
xor
popf
inc
sti
test
mov
sbb
push
or
cs
xchg
int
pop
sub
or
dec
stc
sar
loop
dec
hlt
adc
pop
mov
in
ret
daa
add
lock
out
jmp
inc
mov
cmps
jno
xor
sub
nop
dec
mov
sbb
inc
jle
outs
fiadd
rcl
imul
xor
sti
and
xor
sub
inc
add
mov
xchg
mov
out
pop
sub
arpl
jp
or
idiv
lods
mov
gs
and
mov
add
inc
mov
pop
retf
retf
adc
dec
test
xchg
xchg
cmps
xchg
lds
mov
inc
fwait
xchg
out
xchg
test
ss
xor
dec
loopne
xchg
sahf
and
outs
leave
mov
mov
pop
lea
jns
add
push
add
stc
bound
mov
mov
aaa
int
fisub
int3
aaa
imul
cmp
pop
sbb
or
test
call
mov
movs
(bad)
test
hlt
int
xor
ins
cmc
retf
imul
jno
lahf
lds
push
sbb
push
xchg
test
bound
mov
inc
mov
push
in
jle
retf
mov
inc
nop
push
pop
push
push
mov
xchg
lea
popa
in
movs
inc
mov
stc
mov
and
inc
mov
aaa
mov
fnstcw
stc
push
daa
mov
push
mov
and
pop
inc
xchg
bound
retf
es
jmp
test
dec
dec
pop
pop
sub
pop
jmp
xor
jb
lods
dec
aas
jno
mov
sub
mov
pop
fimul
dec
jmp
xlat
or
and
scas
push
fcomp
push
imul
mov
or
or
cmp
push
btr
xchg
jb
push
xor
cli
mov
adc
add
test
adc
push
add
(bad)
cmp
mov
or
cs
mov
sub
push
ins
push
sbb
xor
pop
popf
rol
fadd
adc
ds
mov
or
test
jg
jae
cld
or
xchg
aaa
movs
(bad)
cli
test
jbe
movs
jmp
jg
mov
mov
fbld
push
xchg
loop
stos
xchg
add
jno
aam
cmps
push
jnp
pop
pop
stos
ret
lds
adc
inc
mov
inc
cmc
pop
test
shr
hlt
imul
je
imul
cmp
or
test
sub
lea
call
movs
mov
mov
cld
jp
pusha
in
aad
xchg
cmps
mov
cmps
push
out
or
add
or
jne
outs
lock
jnp
inc
cmc
push
fisubr
stos
sbb
movs
add
jmp
jmp
outs
or
rcr
out
imul
jg
push
fimul
stc
bound
shl
cmps
cli
leave
mov
jmp
rcl
cmp
or
push
xlat
xor
sahf
(bad)
mov
sbb
imul
add
sub
stos
in
mov
sub
les
dec
sbb
cmp
arpl
in
add
scas
aaa
je
ret
add
repz
pop
iret
ss
sar
pop
ret
(bad)
and
mov
dec
mov
retf
ret
sbb
inc
lahf
mov
(bad)
push
not
in
xlat
xor
push
inc
cmp
popa
fwait
inc
jae
add
fs
sbb
mov
les
mov
and
(bad)
adc
jae
mov
and
pop
pop
jb
or
stos
xchg
out
fild
xchg
sahf
jmp
in
sbb
into
or
cmps
inc
imul
daa
xchg
mov
imul
jno
sub
dec
rcl
or
scas
xchg
mov
cmp
fadd
fadd
xchg
popf
mov
xchg
xchg
ret
push
pop
mov
cmp
sbb
dec
pusha
loopne
shl
cmp
fwait
stos
jns
jg
mov
shr
and
add
cmp
nop
cmc
add
or
out
pop
jbe
jmp
mov
repz
xchg
ds
(bad)
and
rcl
sub
add
imul
repz
jne
les
push
nop
jmp
ss
fptan
enter
jg
push
scas
ds
jmp
bound
push
dec
xchg
in
mov
mov
movs
push
xor
cmp
pop
ret
inc
psubsw
push
fisttp
retf
pop
call
(bad)
aas
fldenv
mov
xchg
xor
loopne
cmp
adc
jecxz
imul
push
add
sbb
jmp
cmp
scas
mov
pushf
retf
jle
jg
pop
rol
int3
(bad)
(bad)
sub
retf
inc
imul
sti
and
sub
jl
push
fwait
rcl
imul
movs
in
mov
je
ret
cmp
pusha
cld
cld
stc
imul
xor
xchg
mov
mov
jns
dec
cmp
and
retf
daa
dec
(bad)
pop
xor
push
xchg
dec
lods
test
jbe
lods
imul
mov
dec
and
das
lds
mov
xchg
jg
out
mov
mov
pusha
aad
jns
movs
push
mov
rcl
jmp
call
jmp
inc
sub
popa
or
inc
pop
push
bound
push
bnd
pop
div
pushf
rol
lahf
nop
test
sub
test
push
out
push
dec
pop
adc
mov
retf
fnsetpm(287
mov
xchg
pop
popf
fistp
push
clc
call
call
test
inc
(bad)
aam
cmp
scas
push
dec
mov
add
mov
jp
inc
mov
xchg
xor
or
pop
cdq
shl
xor
xchg
aam
add
pusha
fdivp
add
outs
lods
pusha
jmp
clc
scas
lds
mov
cmp
out
jno
jmp
(bad)
fnstsw
cmp
and
dec
cmp
mov
or
add
rcr
add
xor
out
cmps
push
jae
xchg
ins
push
or
xchg
sub
cwde
mov
adc
arpl
in
(bad)
xor
push
cwde
pop
and
jmp
xor
jb
imul
or
mov
pop
mov
outs
rcr
xchg
jecxz
push
fidiv
mov
stos
jp
jns
test
jb
ins
(bad)
scas
ret
cmp
dec
(bad)
jne
adc
pop
int3
ret
(bad)
push
mov
sub
xchg
xor
mov
cmp
out
cmp
out
xchg
jno
mov
dec
pusha
sbb
xchg
cwde
add
push
out
mov
aad
push
movs
adc
mov
in
cmp
pop
add
or
jae
retf
add
sbb
sbb
add
push
arpl
xchg
test
jmp
xor
ret
and
and
sub
imul
dec
jl
xor
push
fiadd
std
jg
dec
fisttp
out
push
jnp
hlt
leave
jmp
mov
sbb
mov
sbb
cld
and
inc
pop
push
cmp
es
sbb
sub
xchg
addr16
inc
into
sub
mov
or
in
nop
lds
mov
daa
in
dec
adc
ds
hlt
dec
inc
xchg
push
xor
aas
push
xchg
adc
or
std
out
add
(bad)
dec
push
sbb
neg
repz
fidiv
sbb
cdq
pop
add
add
cwde
test
mov
fldenv
jecxz
bound
imul
fld
leave
lods
mov
sbb
mov
push
aas
mov
and
test
cmp
repnz
sbb
aam
adc
push
shl
sbb
test
fwait
jecxz
or
xor
lods
jno
xor
or
jmp
sahf
into
xchg
cld
daa
das
xor
call
mov
mov
cs
inc
mov
inc
sub
xor
ja
add
add
mov
jae
xor
jmp
imul
ins
adc
es
lahf
rol
sbb
fdivr
jmp
popf
xor
iret
xor
scas
xor
scas
sbb
xlat
inc
je
mov
(bad)
retf
inc
bnd
mov
iret
test
movs
jp
stos
push
fcomp
inc
mov
cmp
arpl
cmp
shl
daa
inc
sar
inc
std
adc
leave
xlat
dec
jmp
sbb
outs
adc
push
jmp
imul
outs
call
mov
add
iret
out
test
ficom
pop
ftst
aam
mov
gs
add
lds
retf
sbb
add
inc
test
retf
(bad)
ffreep
xor
test
pusha
add
jg
add
adc
sbb
push
mov
ins
inc
sbb
or
xchg
aas
xchg
mov
lds
pushf
cmp
fs
arpl
(bad)
into
into
pop
adc
hlt
mov
fnstenv
xor
fcom
jge
cmp
sub
xchg
out
sbb
or
shr
and
ficom
jecxz
cdq
mov
call
(bad)
jge
jae
xor
pop
add
aas
in
mov
xor
cmp
repnz
push
mov
imul
shr
cmps
test
jmp
in
jno
fidiv
ror
push
and
push
movs
rcl
(bad)
ds
mov
mov
stc
push
out
pop
loop
mov
ss
mov
jns
out
repnz
mov
mov
aas
dec
jmp
xchg
aad
retf
xchg
repz
lds
aaa
cmps
jb
jae
outs
xor
mov
and
xchg
ret
jno
movs
out
sbb
pop
sbb
sub
mov
and
mov
call
shl
pop
das
aaa
sbb
sbb
sysretw
shl
paddsw
push
inc
cmp
xchg
rol
ins
(bad)
out
add
pop
jbe
stc
nop
sbb
push
and
loop
sbb
inc
push
retf
add
cld
in
ins
loopne
movs
mov
(bad)
sar
jbe
inc
inc
inc
inc
mov
mov
pop
jge
arpl
sub
mov
push
xor
mov
hlt
mov
stos
fld
pop
xor
ins
sahf
xchg
pop
mov
push
jle
pop
lock
mov
sahf
ret
loop
or
xchg
cdq
fadd
mov
mov
int3
add
add
mov
push
and
mov
mov
or
shl
in
bound
pop
jmp
or
stos
outs
jo
shr
into
add
pop
or
pop
mov
pop
into
xor
test
ss
sub
jno
mov
scas
push
das
(bad)
cmps
cmp
ds
outs
cld
scas
in
jp
sbb
inc
test
jne
(bad)
xchg
fisttp
push
mov
lods
inc
dec
dec
inc
push
jmp
adc
and
push
sti
xor
cld
xor
cmp
cmc
js
out
add
pop
loope
xchg
fstp
pop
shr
imul
lea
push
fdiv
mov
add
pop
retf
cdq
and
imul
outs
mov
imul
jge
jo
mov
ins
aas
ror
nop
imul
addr16
test
sbb
jnp
xor
rol
icebp
push
call
inc
movs
push
adc
jb
lds
jl
push
xor
xchg
in
add
push
(bad)
jbe
inc
es
inc
icebp
loopne
ja
pop
mov
fisub
lds
mov
inc
jb
call
in
jo
or
rcr
gs
mov
fistp
in
iret
ins
mov
call
pusha
das
les
mov
jo
pop
mov
movs
dec
fimul
lea
sar
mov
retf
pop
sbb
adc
ja
retf
jo
mov
pop
iret
xchg
es
or
jge
and
adc
xor
adc
add
xor
aaa
cmp
mov
fcom
and
das
dec
test
jl
jns
pushf
dec
retf
cmp
pop
popa
cmps
ins
fidiv
sbb
cmps
aaa
out
jmp
lods
sub
mov
sti
retf
sar
fs
scas
push
and
sbb
leave
ficomp
aad
sub
leave
xlat
xchg
icebp
in
push
add
jg
ret
iret
mov
jno
out
add
sub
push
sbb
dec
stos
push
cmp
sbb
jbe
arpl
ja
fs
repz
adc
ror
mov
mov
jmp
test
xchg
ret
push
cmc
lea
mov
jbe
rcr
pop
jl
pop
push
add
mov
outs
inc
in
xor
fidiv
aam
inc
mov
jmp
mov
xchg
loope
out
lds
aad
xor
lahf
xor
repz
adc
js
stos
lea
mov
cwde
repnz
mov
adc
jb
out
sti
add
cmp
test
(bad)
sti
xchg
rcr
jl
(bad)
call
push
pusha
xor
repz
push
imul
jae
fbld
fadd
ins
sti
inc
stos
or
dec
xchg
cli
shl
jne
int
push
js
pop
dec
push
ror
cli
add
push
or
ja
hlt
repz
mov
pop
mov
add
cmp
test
mov
aaa
mov
shl
push
scas
fild
cmc
imul
in
je
cli
or
dec
jp
test
bound
call
pop
or
test
aas
push
mov
popf
mov
or
addr16
ss
adc
pop
jl
ins
sbb
cdq
dec
mov
pop
dec
das
mov
cmp
mov
in
in
rcl
aam
pop
ja
or
jge
stos
mov
aaa
in
cs
(bad)
pop
bound
je
jns
rcr
stos
aad
jo
pop
mov
or
dec
(bad)
mov
xchg
push
ss
das
cmp
sbb
push
sahf
lods
cmps
or
mov
xchg
mov
xchg
or
adc
daa
(bad)
cs
push
xchg
test
repz
call
clc
mov
jle
test
pop
das
retf
sub
cmps
(bad)
xchg
mov
adc
sub
imul
add
hlt
dec
push
outs
inc
dec
bound
add
daa
jle
jmp
ins
dec
push
movs
das
les
jno
xchg
mov
rcr
sbb
jl
jmp
inc
xchg
outs
add
xchg
adc
fbld
inc
cs
or
shr
retf
add
popa
adc
(bad)
jo
sub
add
jnp
pushf
sbb
sub
or
pop
ret
add
imul
xchg
push
inc
xor
add
fmul
add
popa
movs
push
jecxz
jmp
pop
sti
icebp
test
cmp
lds
mov
in
ins
add
or
and
into
cmps
loopne
pusha
and
out
mov
daa
mov
js
jnp
xor
stos
sub
or
in
mov
(bad)
div
int3
adc
call
jmp
pop
lahf
pop
inc
fisubr
mov
pop
lods
and
outs
in
mov
xlat
mov
shr
test
xor
jns
stos
lods
popa
daa
mov
dec
push
push
sub
or
ins
imul
repnz
out
inc
test
aad
xchg
out
bound
push
add
add
xlat
adc
jae
jne
int
cmps
dec
jle
jns
sbb
stc
movs
sub
inc
scas
sar
scas
aas
push
or
and
mov
xchg
rcl
push
repnz
data16
lods
lods
scas
jmp
xor
nop
xor
lock
scas
jae
popa
fisubr
pop
push
inc
imul
or
mov
xchg
cmc
cld
cmps
push
and
push
lds
mov
or
add
je
sbb
push
leave
mov
sub
arpl
cmp
inc
in
lahf
loope
jae
repz
outs
cmps
xlat
inc
xlat
mov
xchg
out
add
mov
jae
xor
jg
inc
popa
aam
mov
sbb
mov
mov
addr16
inc
int
pop
dec
fidiv
sbb
or
xor
sbb
cmp
xor
cmps
mov
shl
int3
repz
or
in
sbb
je
pop
out
retf
pop
mov
mov
push
int3
xlat
gs
add
scas
jae
mov
in
outs
xchg
sbb
retf
cli
pop
stos
imul
and
pop
sub
int
jp
fidivr
fxam
lods
mov
mov
mov
cmc
sbb
sub
mov
repz
sti
sar
sub
std
test
sbb
ds
pop
xor
mov
pop
mov
out
sar
ja
mov
cmp
fcmovne
dec
sbb
sub
ss
mov
and
push
mov
fwait
lods
xor
leave
jmp
jo
ror
mov
iret
fst
inc
or
mov
mov
cld
pop
xchg
mov
in
cmp
mov
fs
mov
push
jmp
rcr
into
or
sub
loopne
mov
ins
adc
ins
dec
ins
aas
lea
in
sub
repz
test
rcl
pusha
test
inc
loope
sbb
ror
lock
sbb
into
rcl
mov
leave
pop
(bad)
jmp
jl
loop
test
cwde
popa
ins
lahf
stos
out
shl
xlat
lock
adc
call
jge
dec
ins
mov
jmp
mov
(bad)
popa
xor
inc
fwait
ret
not
movs
fcmovnbe
xchg
lea
cmp
pop
cmp
lds
sbb
push
add
adc
sahf
cmps
fdiv
and
mov
mov
cmps
sbb
ins
cmp
mov
mov
leave
lods
adc
push
ss
arpl
inc
dec
repz
mov
push
add
div
mov
in
pop
add
imul
jae
(bad)
aam
adc
addr16
sub
sub
jno
ds
sbb
pop
int
adc
dec
mov
xchg
lahf
or
mov
cmps
retf
(bad)
push
dec
pop
mov
aad
mov
adc
mov
in
jns
cmp
not
test
xchg
in
add
add
fsub
fidivr
stc
push
jecxz
sti
fstp
loope
cmp
pop
sub
or
xor
jbe
xor
lods
push
mov
sub
lds
scas
mov
jbe
sbb
jle
push
and
and
adc
xor
dec
inc
or
enter
cli
bnd
xor
mov
pop
xor
pop
add
lock
xor
xchg
mov
sub
aaa
xchg
mov
xchg
add
ins
mov
imul
loop
mov
mov
cmp
in
or
add
cwde
mov
adc
mov
jmp
int
jl
fwait
int
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
jp
add
and
jge
adc
push
xor
xor
and
rol
test
enter
push
cmps
inc
idiv
test
addr16
xchg
push
xchg
xchg
or
xchg
xchg
lods
sbb
lock
dec
mov
pop
jecxz
sub
fwait
xor
pop
add
(bad)
fnsave
stos
or
ret
or
sti
fs
ds
push
es
add
pop
into
push
inc
sub
out
shr
mov
in
xchg
inc
or
push
adc
and
call
add
retf
je
mov
xor
mov
(bad)
fucom
mov
in
cmp
sbb
or
cli
sbb
adc
repnz
fs
jg
mov
dec
shr
or
inc
dec
js
sbb
sub
std
jnp
mul
fsubr
cmps
pushf
(bad)
(bad)
psubsw
aam
jae
fld
out
sbb
push
cmp
mov
mov
fcomp
mov
cld
mov
mov
and
and
into
cmp
mov
mov
int3
or
pop
or
mov
sar
mov
add
std
movs
mov
pop
loopne
jmp
imul
rol
cmp
test
sbb
push
mov
add
mov
dec
push
sbb
inc
xor
jb
push
sahf
sahf
movs
leave
ror
push
push
push
xor
jl
xor
mov
sbb
jg
cmc
fstp
push
mov
dec
adc
sub
and
xchg
stos
js
adc
lods
sub
or
jo
ror
jp
outs
or
jl
mov
sti
sbb
cmp
loop
mov
je
mov
xchg
lahf
pop
fcmove
sub
or
or
out
shl
pusha
xor
xchg
sti
push
cld
popa
mov
dec
add
jmp
cmps
jecxz
xor
xor
inc
(bad)
ins
ins
pop
cli
fdiv
fwait
push
inc
arpl
pusha
dec
push
and
xchg
xor
jp
repnz
sub
jno
xor
xor
scas
enter
mov
call
(bad)
adc
add
lods
xlat
aad
cmp
dec
addr16
rol
idiv
(bad)
cld
dec
inc
pop
mov
sbb
xchg
jbe
and
add
(bad)
and
daa
ins
dec
jl
mov
(bad)
call
sub
int
push
fst
jae
cwde
adc
in
arpl
or
xchg
pop
inc
in
xchg
(bad)
aad
movs
dec
mov
inc
xchg
mov
dec
loopne
sbb
jl
loop
jns
sbb
mov
lahf
sbb
(bad)
push
jbe
jge
aas
and
sub
repnz
cmp
shr
(bad)
cmp
daa
cld
xchg
inc
add
pop
adc
jl
and
push
and
int3
loopne
mul
aad
jae
data16
test
cld
add
sahf
sar
loope
xchg
xor
jno
push
lods
addr16
std
clc
or
pop
(bad)
into
ret
jmp
ret
pop
inc
sahf
add
cs
mov
aas
sub
(bad)
pcmpeqb
repnz
or
mov
push
lods
lock
in
inc
je
loopne
(bad)
jae
mov
nop
cmp
pop
jbe
lods
in
inc
je
push
stos
mov
xchg
inc
lods
clc
mov
pop
fistp
scas
rol
adc
add
mov
mov
xchg
punpcklbw
mov
mov
(bad)
mov
cli
lahf
fs
mov
es
add
cmp
frstor
and
cmp
fistp
leave
dec
cs
div
movs
fmul
dec
mov
dec
repz
dec
pop
xor
mov
icebp
xchg
mov
nop
pop
sub
call
cdq
push
jb
call
push
dec
out
inc
out
cs
enter
inc
mov
xchg
dec
sub
xchg
mov
pusha
adc
je
and
xchg
int3
mov
arpl
icebp
ror
mov
cs
sub
movs
adc
rcr
or
leave
mov
xchg
retf
nop
mov
cmp
jl
xchg
add
jnp
outs
dec
inc
dec
stos
add
popf
pop
jne
pop
lods
mov
mov
cmp
pushf
mov
mov
sub
arpl
int
xchg
sub
(bad)
inc
cmp
mov
xchg
mov
cld
jbe
sbb
mov
xchg
mov
repz
xchg
dec
imul
es
rcl
or
loope
push
cmp
inc
inc
popa
or
inc
push
push
sbb
sahf
fwait
xor
push
adc
into
rcr
sbb
push
test
movs
cmp
jo
loopne
cwde
cwd
adc
jnp
lods
add
stos
adc
jge
xchg
lods
xchg
movs
and
popf
repz
jns
lea
dec
sub
and
adc
sar
retf
out
pop
sub
mov
sbb
cld
adc
mov
cwde
xor
mov
add
test
bound
xor
cmp
xor
adc
retf
mov
jns
jns
rcl
clc
fwait
dec
out
add
call
inc
add
inc
jo
mov
and
mov
fsub
jnp
call
add
push
sahf
stos
push
stos
mov
loop
adc
ds
gs
xchg
gs
add
test
pop
jecxz
arpl
add
fadd
mov
cmc
mov
test
ds
fild
outs
or
inc
adc
sub
outs
sti
push
jg
(bad)
test
js
or
sub
aaa
mov
push
das
dec
lods
lods
pusha
mov
dec
mov
jnp
fiadd
dec
pop
jnp
ja
push
push
cmp
jmp
je
pop
xchg
in
add
in
(bad)
mov
loop
push
mov
fnstenv
push
push
adc
and
xor
inc
push
cmp
hlt
sub
xlat
xchg
cmp
mov
cmps
or
popf
lock
sbb
popa
out
es
fs
adc
add
mov
xchg
cmp
push
ja
inc
jns
test
mov
cmp
mov
je
dec
pop
fisttp
mov
mov
push
imul
mov
sbb
popf
cmps
pop
inc
inc
pop
sti
sub
movs
test
inc
push
mov
aas
cmp
retf
xor
dec
stc
dec
fdiv
pop
mov
fwait
bswap
and
and
ror
xchg
fimul
jle
call
jmp
imul
out
dec
push
dec
push
add
ja
adc
imul
cli
ja
int
mov
xchg
mov
mov
adc
ins
add
arpl
retw
bound
pusha
aaa
ret
fwait
into
jle
shl
mov
shl
inc
fistp
mov
int3
cs
cli
(bad)
out
out
jl
dec
and
xor
push
js
mov
pop
push
pop
repz
inc
adc
mov
sti
(bad)
das
cmp
push
cmovbe
mov
leave
ds
scas
adc
fst
(bad)
mov
popa
mov
jl
aas
movlps
bound
test
sub
add
mov
pop
push
add
aaa
js
jl
pop
adc
imul
xor
pusha
mov
mov
movs
push
dec
mov
xchg
daa
cs
jge
push
daa
cmp
push
push
and
adc
jg
add
add
mov
and
in
dec
cmp
push
adc
pop
enter
xor
mov
xor
cmp
or
rcr
in
dec
dec
jmp
mov
inc
sbb
rcr
or
and
bound
mov
push
cmps
cmc
(bad)
pop
xor
sbb
pop
cli
shr
dec
ss
mov
mov
leave
pop
fisttp
pop
jmp
pop
ret
stc
push
inc
mov
mov
test
movs
mov
dec
jp
adc
xor
cdq
test
pop
xchg
cmp
add
cmc
inc
add
pop
pop
push
inc
pop
ja
movs
(bad)
dec
inc
and
sbb
pop
or
mov
inc
xchg
fldcw
mov
sbb
jmp
mov
repnz
in
icebp
js
push
xchg
arpl
lahf
ret
inc
mov
or
out
out
mov
jns
loope
test
movs
xchg
scas
aam
jg
mov
pop
dec
cmp
fst
inc
sbb
pop
push
and
js
inc
inc
pop
jo
xchg
std
mov
enter
pop
sub
push
add
sbb
loop
pop
fisttp
jns
inc
imul
popa
sub
add
sti
arpl
xchg
mov
xchg
popf
pop
and
test
sub
mov
loope
movs
xor
je
inc
jmp
cmp
inc
or
inc
hlt
or
test
aas
or
out
inc
dec
test
in
cmp
dec
and
mov
and
(bad)
icebp
dec
inc
mov
imul
mov
(bad)
mov
inc
jne
test
out
and
sbb
ficomp
test
sub
aaa
int3
test
add
fidivr
inc
pop
add
or
mov
inc
cmp
add
leave
repnz
mov
and
or
sbb
out
pop
aam
mul
movs
hlt
cwde
xor
out
iret
mov
ret
dec
push
clc
aaa
fs
jb
imul
loop
out
bound
xor
sub
pusha
imul
enter
mov
out
fisttp
sub
inc
jne
(bad)
ja
fidivr
hlt
inc
xor
call
or
scas
mov
mov
data16
in
mov
loope
cmp
jbe
retf
xchg
or
add
mov
sub
push
jmp
fld
cld
loopne
std
call
movs
lods
or
jo
pop
xchg
xor
mov
dec
inc
inc
mov
or
mov
adc
jmp
int3
movs
mov
sahf
iret
stos
inc
aad
arpl
adc
ins
inc
adc
dec
push
pop
adc
jmp
lock
enter
repnz
sbb
repnz
pop
mov
fmul
rcpps
scas
and
lahf
fcmovnu
imul
fstp
sub
js
nop
mov
dec
pop
mov
stos
loope
(bad)
push
or
adc
sbb
test
cmp
in
sbb
push
bound
leave
daa
inc
aam
in
nop
or
(bad)
out
enter
xor
mov
sub
dec
xor
sub
in
cmc
push
pop
inc
int
(bad)
adc
jge
shl
cmps
inc
ss
inc
in
pop
adc
adc
out
(bad)
frstor
or
mov
rcr
pop
test
inc
test
xchg
dec
push
int3
nop
outs
adc
outs
cli
pop
mov
lahf
jb
xchg
push
add
xchg
mov
or
dec
and
sahf
sub
pop
int
scas
xor
sti
add
dec
pop
ret
scas
cmp
and
push
mov
fdiv
rol
stos
cwde
xor
in
and
or
dec
or
xchg
or
push
jg
jge
and
jp
sub
sbb
leave
movs
test
and
xchg
daa
sub
xchg
fidivr
out
movs
jns
in
nop
rcl
inc
addr16
and
jnp
xchg
mov
jbe
jae
lahf
or
ja
xchg
pop
xchg
xchg
inc
jmp
jmp
movs
aaa
xchg
sub
loopne
fnsave
add
xlat
xor
pop
add
push
xor
aad
inc
mov
mov
stos
dec
or
xor
or
pop
mov
fcomip
sbb
jmp
mov
xchg
mov
imul
jmp
daa
jg
push
cmp
out
pop
popf
jno
push
repnz
lds
dec
in
push
sbb
push
ins
das
push
sbb
cli
ss
daa
mov
cmc
cmp
shl
mov
push
mov
fsubr
aaa
cmp
jecxz
rcl
push
xor
fnsave
into
out
in
loope
jmp
xchg
or
retf
clc
ins
and
sbb
or
clc
xchg
push
pusha
fcom
ins
inc
lea
test
aam
and
push
xlat
inc
out
mov
(bad)
push
aad
inc
lea
fsub
add
mov
jbe
shl
hlt
aas
(bad)
gs
add
imul
mov
and
cmc
sti
mov
sbb
sub
out
nop
add
push
dec
stos
xlat
pop
mov
cli
cmps
dec
lahf
xor
sti
and
pop
push
pusha
iret
jne
loop
xchg
outs
rcl
fs
pop
test
dec
xor
mov
inc
movs
scas
mov
add
pop
push
sub
jecxz
retf
pop
rcr
test
pop
pop
(bad)
popf
mov
xchg
adc
in
jbe
test
inc
pop
jl
xchg
adc
nop
or
jle
cmps
stc
in
out
xchg
out
xchg
ss
mov
pop
pusha
dec
adc
push
movs
test
call
mov
or
jecxz
mov
stc
shl
adc
sbb
outs
imul
push
or
loopne
ret
pop
mov
xchg
inc
pop
and
mov
and
inc
sub
cmps
mov
(bad)
sbb
inc
aaa
pop
(bad)
mov
fsubr
add
sub
movs
lods
loopne
dec
ret
cdq
dec
sbb
mov
sub
clc
bound
bound
push
mov
push
not
add
dec
call
pop
dec
mov
mov
ds
mov
jecxz
pusha
adc
sub
call
movs
js
adc
fidivr
fsubr
adc
(bad)
push
call
jg
sbb
push
fs
xor
cmp
dec
push
fistp
sbb
movs
and
stos
loopne
push
paddusw
mov
arpl
push
push
and
xor
je
jns
pop
(bad)
push
shl
pop
sbb
call
lods
dec
lahf
jno
and
cmps
aad
and
xor
shl
jmp
dec
test
adc
add
or
ins
test
pop
inc
jg
test
imul
jmp
ins
es
out
lods
push
adc
pop
int
and
(bad)
cmp
xlat
fistp
push
mov
or
ins
mov
fist
stc
mov
dec
stos
call
push
or
cld
sub
sahf
xor
mov
mov
ret
or
xchg
daa
dec
pop
inc
inc
pop
pop
adc
(bad)
(bad)
ins
cmp
xchg
mov
shl
pop
jns
or
mov
int
cmp
retf
aam
jne
and
cmp
pop
jge
shr
mov
mov
fsub
xor
mov
adc
mov
push
mov
sub
push
shl
lea
in
xor
pop
sbb
fist
pop
ret
mov
dec
fsub
inc
test
gs
sub
call
mov
iret
icebp
xchg
fdiv
lahf
cli
cmp
shr
and
fcomp
or
mov
aas
xchg
xlat
jo
pop
mov
push
int
sbb
mov
inc
ror
js
pop
pop
or
out
call
das
inc
aad
xor
sub
xor
dec
test
add
mov
jnp
and
test
inc
inc
popf
and
ds
bound
inc
(bad)
push
js
jle
or
sbb
add
cmps
inc
mov
xchg
stos
xchg
hlt
xor
xor
pop
bound
lock
hlt
lock
xchg
xchg
xor
into
loopne
pop
pop
aad
lods
sub
push
jmp
xchg
mov
ret
fst
nop
push
jno
pop
xchg
sub
sbb
stc
loope
loop
(bad)
dec
in
inc
imul
(bad)
nop
add
fucom
outs
mov
les
jl
test
rcr
imul
sbb
xchg
arpl
lods
push
outs
push
fsubrp
or
out
cdq
push
loop
pop
test
ins
icebp
call
xor
loop
fldenv
jbe
pop
pop
sub
xchg
std
jo
int3
mov
enter
arpl
mov
jmp
dec
mov
pop
out
dec
jnp
add
mov
mov
push
setns
pop
push
int
out
pop
mov
xor
jns
loopne
das
(bad)
fist
(bad)
daa
cmp
data16
sub
shl
jmp
dec
fsub
sahf
in
cs
fbld
sbb
mov
jge
cli
shl
sbb
jl
shl
xor
ret
cld
loope
lock
pop
adc
mov
outs
bound
adc
ror
jnp
mov
mov
out
dec
and
dec
push
mov
add
jle
dec
pop
inc
jmp
mov
and
retf
jge
xchg
mov
cwde
stc
cmp
(bad)
in
stc
jnp
ror
mov
or
dec
imul
rcl
(bad)
mov
pop
mov
lock
rcr
adc
ins
out
sub
adc
ror
mov
cmp
iret
push
push
mov
dec
retf
jae
out
sub
mov
not
mov
or
push
int
test
js
cmp
jno
ret
or
add
adc
xchg
or
jmp
call
xchg
fs
nop
push
cwde
inc
pop
shr
mov
or
iret
stc
and
fidivr
mov
jmp
and
mov
stos
push
fsubr
xchg
add
call
mov
mov
mov
adc
iret
xor
clc
leave
pop
out
xor
cmp
jnp
cwde
stos
jnp
cmp
adc
aad
or
jl
test
call
dec
inc
mov
cmovae
mov
push
lock
addr16
adc
mov
mov
sar
or
dec
cs
cld
add
mov
or
fisttp
and
push
dec
push
loop
push
sub
mov
das
outs
jp
add
fnstenv
jne
fidiv
out
xor
loopne
rol
popa
jbe
clc
sub
(bad)
push
dec
cs
mov
fcmovu
outs
add
push
pop
fsubr
xor
mov
std
mul
out
adc
or
mov
cwde
push
lock
or
mov
clc
mov
sbb
inc
cmp
jbe
rol
adc
lods
int
push
xor
fbld
xchg
xor
cmp
mov
inc
aad
stos
jle
fidivr
vpsraw
test
dec
add
mov
cli
ds
retf
dec
fild
ja
cmp
call
dec
sub
int
inc
fcomp
push
enter
pusha
add
std
icebp
push
hlt
std
and
jge
jg
sub
mov
mov
retf
ss
stos
add
das
dec
or
inc
ins
pop
out
loope
loopne
arpl
mov
nop
add
or
jb
add
(bad)
pushw
aam
inc
(bad)
adc
shr
jmp
mov
inc
in
jmp
(bad)
(bad)
mov
sbb
sbb
mov
jno
ss
mov
stos
cli
int
inc
sub
jmp
sbb
(bad)
out
les
aas
idiv
xor
add
neg
or
mov
xor
adc
aas
(bad)
lods
xor
dec
and
cwde
mov
push
scas
call
dec
rol
popf
push
rol
mov
push
lods
cmp
outs
push
push
icebp
pop
lods
and
sbb
popa
cmp
push
mov
mov
icebp
mov
stc
call
repz
out
cdq
xchg
sub
jp
neg
pop
ror
in
fst
inc
shr
xor
and
and
dec
sti
scas
retf
mov
mov
jl
push
jne
cld
lea
test
jno
popa
in
movaps
cdq
dec
daa
aas
aas
inc
arpl
imul
repnz
shl
jge
ds
leave
int
loopne
(bad)
call
pop
adc
ror
in
int3
mov
pop
xor
xchg
pop
call
mov
nop
iret
or
sub
cli
cli
repnz
jmp
push
retf
add
stos
push
loope
mov
in
lock
jecxz
xor
jo
add
dec
push
nop
popf
inc
mov
sbb
xor
outs
or
lods
mov
cmps
cmps
repz
(bad)
into
ins
and
lods
push
jl
lahf
dec
out
in
xor
pop
jge
sti
jmp
push
out
in
cdq
push
ins
dec
xchg
push
add
pop
call
sti
cmp
idiv
pop
xchg
cmc
xchg
into
pop
movs
mov
mov
out
sbb
mov
and
aam
movs
add
cmp
xor
js
pop
xor
adc
pusha
fisub
add
mov
or
xor
pop
push
mov
out
pop
pop
mov
add
xchg
in
sub
mov
sbb
nop
pop
bound
dec
aad
pushf
mov
int
adc
enter
dec
inc
leave
cmc
sub
iret
push
mov
out
shl
and
test
leave
and
xchg
mov
cmp
adc
sbb
mov
in
adc
(bad)
pop
dec
lods
xlat
bound
shl
and
xor
in
xchg
adc
sbb
or
xor
sub
cli
push
(bad)
(bad)
jmp
int
rol
and
into
and
xchg
sbb
mov
stos
jne
daa
xchg
in
in
push
outs
push
ret
(bad)
out
add
fistp
stos
or
xchg
rcl
adc
ret
sbb
aam
popa
cmps
gs
pusha
cwde
mov
xlat
inc
aas
xchg
jl
rcl
jmp
xlat
pop
stos
sub
shl
iret
inc
mov
pop
retf
xor
mov
xchg
fwait
push
test
sub
xchg
xor
aas
jb
jno
into
or
and
mov
aaa
rcr
(bad)
in
add
shl
pop
and
in
dec
or
inc
jno
and
icebp
retf
push
cld
dec
sti
mov
ret
adc
in
add
lock
jge
test
push
pop
mov
inc
inc
cmp
cmp
fs
and
push
jmp
pop
xor
and
in
fild
mov
inc
rcl
mov
retf
mov
in
sbb
sbb
jle
int3
jo
mov
mov
addr16
retf
sub
aad
mov
add
pop
inc
and
and
cli
push
or
mov
xor
daa
and
sbb
pop
cs
rcl
and
mov
hlt
adc
sub
cmp
in
adc
les
add
sbb
add
sbb
pop
cwde
jle
pop
mov
mov
inc
and
mov
push
and
(bad)
cmps
jae
ins
add
fisttp
push
fstp
fs
and
lods
mov
and
addr16
and
jle
mov
push
je
mov
jmp
pop
mov
dec
sahf
(bad)
jb
mov
xor
xor
movs
mov
mov
cmp
pop
push
push
sbb
and
cwde
pop
add
pop
clc
aaa
dec
les
cwde
pop
stos
lea
adc
pop
cs
pop
inc
jbe
push
xor
sub
mov
xchg
rcl
mov
cmp
dec
out
dec
adc
push
mov
fdiv
jae
clc
retf
pusha
mov
pop
push
mov
adc
mov
xor
inc
dec
fisub
push
inc
int3
mov
int3
push
pop
push
js
cs
sbb
sub
cmps
xchg
in
jp
sbb
test
cwde
mov
jno
pop
mov
out
loopne
xor
xchg
xor
xor
inc
pop
loop
xchg
cmps
mov
mov
pop
fs
jmp
mov
add
scas
jle
scas
pop
xchg
mov
add
cdq
out
sub
loope
dec
pop
add
mov
jl
ret
pop
dec
ins
push
bound
jbe
(bad)
call
ror
jl
mov
mov
inc
push
sbb
or
cmp
lods
call
outs
clc
push
fnstcw
lods
xlat
or
jmp
and
push
jle
clc
stos
outs
lods
pop
ficomp
mov
mov
sbb
push
dec
scas
leave
je
ins
mov
enter
std
imul
mov
cmp
imul
scas
(bad)
xor
ss
aaa
mov
enter
mov
jp
icebp
in
pop
in
jge
add
mov
out
outs
push
in
pushf
push
sbb
in
mov
pop
and
(bad)
sub
stc
ins
cmp
and
xchg
pop
pop
mov
movs
fld
or
retf
loope
or
dec
sub
adc
mov
cli
das
fcomip
push
es
add
pop
mov
pop
out
ins
mov
loopne
and
pushf
xchg
xchg
pop
shr
and
cmps
shl
xchg
lds
stc
loop
xor
xchg
in
sbb
nop
jmp
jg
inc
push
mov
icebp
pop
nop
jno
xor
mov
movs
lahf
(bad)
jne
(bad)
mov
sar
jo
ss
scas
pusha
push
enter
mov
aaa
xor
pushf
pop
sbb
jle
pop
js
push
push
ins
add
jns
repz
pop
xchg
cwde
mov
sbb
pop
push
ds
js
lods
pop
test
mov
dec
(bad)
nop
mov
popf
jg
sahf
lock
sub
jbe
rcl
inc
je
imul
cmp
add
jmp
push
push
cmp
or
inc
mov
jecxz
add
xor
mov
lds
adc
clc
out
wbinvd
or
pop
inc
(bad)
out
mov
iret
aam
add
xchg
mov
mov
repnz
js
outs
mov
shl
and
jo
push
popa
inc
fistp
xchg
jno
push
push
dec
mov
adc
jb
adc
dec
xchg
daa
push
pushf
cmp
jae
repz
test
outs
aam
mov
jge
cmp
sbb
ins
fbstp
push
test
xchg
dec
pop
ror
push
jo
jl
mov
outs
lods
in
out
sbb
xor
add
or
ins
mov
clc
inc
sbb
fnop
mov
stos
ret
push
call
add
push
ins
movs
cmc
retf
adc
scas
and
aas
jmp
cs
outs
dec
and
retf
stc
std
add
jo
xlat
clc
cs
nop
and
cld
loopne
shr
cmp
mov
pop
inc
rol
jb
stos
cmp
xlat
fisttp
faddp
lock
and
jo
loopne
mov
ins
add
mov
in
cdq
inc
sbb
cmps
sub
jb
cld
xchg
dec
add
out
pop
das
mov
and
cmc
mov
dec
add
xor
cmp
pop
jl
sub
mov
call
dec
xor
jp
fcom
mov
popf
xor
fstp
data16
ret
mov
out
push
fwait
jecxz
mov
and
or
push
into
dec
push
mov
add
jp
ss
scas
sbb
jne
pop
push
test
push
lds
lahf
leave
cmps
cld
mov
adc
inc
push
(bad)
retf
bound
inc
out
pop
sub
(bad)
test
repnz
mov
push
fwait
xchg
movs
xchg
sub
cmc
inc
sub
push
or
xchg
add
mov
cmp
inc
fimul
sbb
pop
retf
sbb
(bad)
shl
sbb
push
fisub
lds
sbb
and
jmp
lahf
cli
pop
or
and
cmp
cmp
push
retf
mov
mov
push
sub
and
jnp
js
push
pop
cli
jp
pop
(bad)
add
sbb
(bad)
sbb
pop
cdq
sub
sbb
xor
arpl
nop
mov
imul
mov
shl
std
jg
cmp
pop
dec
in
mov
xlat
xchg
(bad)
xor
pop
int3
and
adc
push
setne
jno
adc
mov
fild
scas
add
rol
mov
std
sub
jae
pop
jecxz
popa
lods
das
xchg
add
(bad)
in
push
enter
das
fstp
sbb
movs
jg
jmp
pop
jmp
xor
adc
sub
pop
cld
xor
xchg
push
mov
adc
dec
lock
fisubr
xchg
dec
ins
ins
cld
mov
call
jne
jg
retf
add
movs
dec
cld
jmp
fldcw
hlt
fidiv
sti
mov
pop
push
in
loope
pop
test
cdq
in
jle
enter
push
lods
mov
mov
xor
sub
(bad)
sbb
icebp
jne
inc
pop
mov
hlt
(bad)
pop
out
inc
ret
(bad)
fsubp
loope
(bad)
iret
adc
cli
arpl
(bad)
sbb
xor
rol
fbld
sbb
add
jns
outs
stc
pop
cmp
push
cmp
push
inc
push
cli
(bad)
push
retf
jnp
jmp
mov
jecxz
or
xor
(bad)
not
popa
xchg
scas
pop
fdivr
sub
cmp
aaa
movs
fisubr
sub
dec
imul
mov
pop
pop
pusha
adc
lods
je
dec
sub
dec
push
xchg
ins
sub
add
jmp
pushf
ds
out
xchg
xchg
xchg
xchg
xchg
jle
jg
xor
or
jmp
aaa
sti
jns
int
jecxz
bound
daa
popf
sub
inc
cwde
jle
int
dec
push
dec
inc
lds
xor
leave
xor
mov
xor
inc
cmp
inc
mov
add
rcr
add
mov
dec
xor
sub
xchg
ret
dec
add
test
inc
pop
cmc
mov
leave
sbb
lea
add
xchg
jmp
cld
push
call
add
leave
ret
lea
and
mov
das
mov
dec
rcl
or
jo
xor
sbb
ins
xchg
out
cmp
xchg
xor
mov
mov
cmps
mov
mov
xor
icebp
pop
mov
cmp
jge
pop
jne
repnz
xor
and
fmul
mov
jge
or
aas
movs
out
inc
xchg
adc
outs
fs
or
dec
xor
ror
loop
ja
push
scas
xchg
popa
adc
cs
mov
in
pop
jg
inc
cld
xchg
adc
jno
add
mov
retf
push
ins
adc
clc
or
js
jb
sub
in
xor
(bad)
sahf
inc
repnz
sub
mov
shr
into
std
out
outs
rcr
xchg
pop
xor
pop
stos
cmp
sub
sub
mov
clc
es
(bad)
popa
and
xchg
mov
and
in
sbb
mov
cmp
inc
jmp
sub
jl
inc
jg
lock
retf
ins
call
pxor
push
test
mov
fsubr
fs
shl
out
ds
jle
outs
jmp
push
sub
push
addr16
lock
stos
mov
or
jne
into
sub
xor
leave
xor
mov
out
and
test
int3
lahf
sbb
fs
xor
or
or
imul
pop
fwait
into
sub
stc
push
jmp
das
ins
sbb
push
dec
lods
jge
sbb
aam
out
push
sbb
xor
aad
fs
lds
fs
mov
inc
sbb
fcmovbe
sub
xor
clc
push
xchg
jg
jmp
push
xlat
and
mov
adc
loope
test
xchg
xchg
mov
pop
cmps
mov
mov
add
push
or
retf
xchg
out
xchg
fistp
mov
mov
std
push
fnstenv
jnp
ins
xchg
ins
daa
(bad)
(bad)
jne
xor
push
xlat
push
pop
mov
scas
ret
mov
lahf
div
mov
cmp
leave
mov
xor
in
jle
inc
repz
push
sbb
xlat
pop
fbld
pusha
(bad)
push
push
hlt
stc
add
pop
pop
or
push
sahf
jno
mov
cmp
add
sbb
(bad)
(bad)
push
jns
stos
mov
mov
or
rol
(bad)
adc
adc
mov
add
and
cli
xchg
out
dec
hlt
mov
add
push
pop
movs
cmp
and
jnp
push
mov
nop
inc
retf
mov
sbb
mov
mov
pavgb
push
add
mov
into
nop
mov
fwait
dec
jnp
xchg
mov
xor
out
rol
xchg
ds
lods
cmp
adc
jecxz
addr16
leave
lahf
sbb
cli
cmp
push
stos
es
cmp
xor
nop
cmps
cmps
pusha
cmp
mov
mov
iret
xchg
test
pop
or
shl
and
adc
cs
mov
dec
mov
pop
repnz
push
in
das
mov
jp
outs
cmp
(bad)
sub
sub
add
call
jno
cld
ss
idiv
loop
mov
and
cmp
mov
mov
mov
pop
mov
out
xchg
icebp
pushf
xor
mov
popa
push
mov
or
add
xor
into
(bad)
cmp
mov
push
add
dec
cmps
addr16
call
out
(bad)
jmp
lods
add
dec
shl
div
pop
jno
pop
(bad)
xchg
out
arpl
sub
jg
and
pop
dec
sar
into
ror
jo
push
cmp
adc
inc
inc
aad
pushf
(bad)
stc
lock
cmp
fcmovbe
fnsave
lods
or
jecxz
adc
or
addr16
mov
in
movs
xor
inc
push
jbe
push
sub
lods
pop
cmp
ds
push
and
xor
mov
lods
daa
add
lods
cld
aas
push
pop
add
add
rcr
lds
aad
push
test
sbb
add
jb
into
jnp
pop
mov
ret
jmp
xor
cmc
or
sbb
xchg
cli
pop
clc
push
imul
and
jb
ins
mov
pop
(bad)
mov
adc
sub
xchg
call
add
out
cmp
jecxz
adc
add
and
shl
inc
adc
in
fld
stos
rol
and
rcr
mov
pop
es
into
jmp
add
jno
push
aam
jp
test
stc
jo
mov
scas
xchg
leave
or
push
stc
mov
jl
push
popf
xchg
jb
adc
push
(bad)
jo
xchg
fldcw
dec
(bad)
adc
stos
adc
xchg
test
jecxz
daa
and
inc
xor
jmp
dec
push
loop
dec
shl
(bad)
int3
add
ins
retf
mov
loope
aad
add
lods
push
lods
push
dec
loope
and
arpl
cmp
adc
cmp
enter
push
icebp
push
call
clc
or
rol
pop
mov
add
es
repz
xchg
out
(bad)
xchg
mov
cld
fist
rcr
cmc
cdq
retf
pop
add
adc
jb
(bad)
aad
add
jle
sub
dec
xlat
cmp
into
pop
pop
adc
addr16
sbb
dec
adc
ror
sub
cdq
pop
ins
add
dec
imul
xor
rcr
out
mov
mov
test
xor
out
pop
pop
cwde
jo
inc
or
ss
stos
bound
push
mov
retf
sbb
mov
or
cmp
dec
xor
or
push
nop
scas
into
ret
dec
mov
test
std
jbe
retf
shl
stc
push
cmp
scas
lahf
iret
icebp
adc
add
push
jmp
ss
pop
add
loopne
data16
pop
xchg
add
add
lds
fwait
jnp
cvttps2pi
push
popa
dec
in
cs
repz
xor
xchg
fwait
nop
cwde
ret
push
inc
call
jbe
or
test
or
push
movs
shl
and
inc
pop
push
push
xchg
loop
lods
sbb
jo
sbb
pop
inc
jns
es
loope
xor
lods
push
jmp
pop
adc
push
je
hlt
out
inc
jae
(bad)
loopne
mov
fadd
xchg
jge
cld
test
(bad)
mov
jl
es
xor
push
add
or
ins
stos
in
js
jns
push
add
add
into
mov
jmp
or
rcl
xchg
mov
add
clc
ret
mov
out
stos
fist
cli
std
data16
fiadd
stos
addr16
push
jne
jae
jg
and
stc
test
jg
int
gs
call
mov
pushf
in
retf
mov
lods
mov
push
fld
mov
mov
sub
jmp
sbb
jmp
mov
dec
dec
out
sub
pusha
mov
call
(bad)
or
dec
add
push
sbb
xchg
inc
jne
jno
leave
cwde
aas
and
mov
sub
push
js
and
xchg
xor
mov
jl
retf
push
jo
and
in
and
mov
in
test
xor
inc
dec
mov
int
test
jle
add
mov
push
push
sub
mov
es
out
cdq
add
add
je
scas
cmp
pop
fisubr
(bad)
jbe
push
movs
dec
inc
out
dec
jle
bound
push
sahf
push
dec
ja
gs
inc
loop
xor
jmp
mov
or
ret
mov
mov
std
xor
mov
mov
imul
mov
icebp
test
das
xchg
add
fisub
fwait
loopne
xor
sar
push
clc
xchg
in
jp
xor
les
nop
xchg
shl
add
pop
sbb
enter
pop
pop
xor
cdq
out
inc
xlat
rcl
or
sahf
cmc
xchg
cmp
loopne
adc
not
mov
data16
lock
mov
sbb
adc
lods
pop
adc
push
mov
xchg
pop
idiv
dec
mov
xor
(bad)
sbb
repz
mov
inc
xchg
int3
sbb
(bad)
xor
push
lea
rcl
fnstcw
call
sub
int3
push
test
mov
pop
fcom
out
jle
call
and
sbb
push
loop
jge
add
mov
sbb
outs
add
pop
dec
scas
iret
push
jns
sub
out
cmc
movs
xchg
xor
nop
and
xchg
stos
shr
fnstcw
cmps
loop
retf
jb
test
xor
lods
test
cmp
push
repz
jp
mov
dec
sbb
jp
gs
bound
add
push
mov
(bad)
adc
sub
ins
jnp
jg
push
fwait
mov
fwait
and
test
stc
gs
fs
(bad)
repz
(bad)
retf
push
scas
jl
lahf
(bad)
mov
sbb
pop
mov
pop
test
aad
xor
xchg
mov
mov
icebp
(bad)
and
ret
add
fnstsw
fsub
xlat
lods
adc
mov
out
push
push
adc
jno
fnstcw
push
jbe
cld
scas
add
and
cs
or
out
aad
or
cmps
mov
mov
dec
int3
xor
sbb
pop
pop
fistp
jle
div
clc
int3
ror
jle
aaa
out
sbb
push
push
sbb
mov
mov
ret
ss
mov
iret
mov
sbb
adc
pop
dec
lahf
push
cmps
loop
jl
xor
idiv
pop
jecxz
in
cmps
jg
pop
pop
aad
cwde
jge
test
jnp
push
inc
jmp
cmc
and
fstp
cmp
in
inc
mov
dec
jae
out
out
dec
cmp
pop
stos
xchg
mov
xor
or
sbb
int
push
mov
aam
adc
or
xor
cwde
lea
(bad)
inc
sbb
mov
rol
sub
shld
in
shl
aam
mov
mov
push
cmp
fcom
jl
popa
and
int3
dec
pop
vpdpbusd
fsub
leave
mov
xor
xor
xor
fisttp
sub
div
cs
mov
aas
stos
ins
shl
dec
inc
add
cwde
hlt
add
xor
mov
cmp
imul
cmps
leave
adc
mov
xchg
xor
cmp
ins
jp
push
adc
xchg
xchg
xor
xchg
jmp
sbb
xor
sahf
aad
jle
mov
push
xchg
sub
mov
push
and
mov
popa
(bad)
ins
jg
dec
(bad)
mov
movs
mov
and
fld
mov
dec
pop
cld
lods
jge
xor
xor
aas
lea
mov
add
push
push
push
inc
mov
push
inc
inc
in
xchg
ficom
xor
nop
test
adc
das
xchg
sbb
xchg
mov
sub
mov
out
adc
and
inc
out
fild
sub
inc
loop
mov
or
sti
jl
dec
fwait
vphadduwq
ins
adc
dec
mov
in
push
cdq
jns
dec
xor
mov
fstp
xchg
jmp
int3
in
clc
call
lds
das
(bad)
aaa
(bad)
fdiv
mov
jno
push
and
xor
fnstsw
les
ss
out
icebp
mov
sub
call
xor
aas
jbe
sbb
test
adc
outs
jo
xor
rol
mov
jmp
pop
icebp
jmp
fsubrp
in
call
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
retf
xchg
leave
xchg
dec
int3
les
ret
inc
data16
fist
sub
cmps
pop
add
mov
push
call
cmp
gs
sbb
pop
dec
fnstenv
xchg
pop
add
xor
xchg
fcom
fwait
mov
jge
int
add
enter
(bad)
sub
sbb
mov
jo
ret
mov
xchg
gs
das
arpl
cmc
adc
and
or
dec
daa
mov
sbb
add
ins
lea
add
aaa
movs
bound
loopne
fucomi
imul
sub
push
add
stos
in
sub
call
jecxz
cmps
out
jns
ret
out
jle
dec
mov
retf
xor
movs
pop
cwde
lods
scas
gs
pop
mov
fdivp
ins
test
loope
xlat
xchg
movs
into
adc
adc
add
test
jo
call
sbb
loope
scas
sub
xchg
call
mov
ret
nop
mov
jae
into
sub
mov
dec
test
and
sbb
cmp
xchg
shr
mov
aam
and
push
inc
sub
sbb
fnsave
and
fs
or
pop
inc
mov
shl
imul
add
cdq
jle
dec
add
aam
in
ins
sahf
pop
mov
scas
pop
mov
push
add
mov
push
inc
inc
ror
out
jae
dec
mov
inc
pop
sbb
scas
dec
retf
or
test
pop
bound
xor
pop
mov
int3
mov
stos
mov
push
fucomp
sbb
seto
xor
add
lods
push
call
dec
cmp
xlat
push
push
xchg
jmp
jmp
in
fs
jo
xchg
mov
mov
popf
rcr
pop
mov
cdq
fnstenv
mov
faddp
sbb
into
and
je
mov
dec
or
add
out
add
cmp
fbstp
pop
or
mov
cmp
or
jl
popf
neg
fcomp
popf
and
xor
mov
jp
xlat
ins
rcr
das
enter
test
dec
pop
nop
push
nop
addr16
push
dec
push
or
(bad)
xor
cmp
movs
arpl
or
dec
mov
(bad)
retf
xor
add
push
mov
mov
popf
lds
inc
repnz
jmp
and
bt
pop
fisub
leave
loope
lds
clc
dec
and
push
inc
mov
ja
sti
mov
sub
ds
stos
push
test
adc
mov
xor
aas
sub
out
mov
ds
nop
out
lods
cli
cmp
call
and
out
push
cmc
pop
(bad)
mov
pop
dec
mov
lahf
mov
add
pushf
or
sub
sahf
xor
in
sbb
push
sub
bound
inc
push
pop
addr16
mov
outs
and
stos
dec
jae
rsqrtps
jmp
mov
jnp
rcr
out
fidivr
into
or
mov
addr16
out
cmps
fdivr
push
mov
mov
loop
lock
rcr
cmp
xchg
inc
and
add
popa
cmps
scas
sub
xlat
xchg
addr16
cmp
mov
scas
(bad)
icebp
adc
jmp
push
and
add
xlat
cmc
dec
scas
scas
push
inc
dec
mov
xor
mov
mov
(bad)
arpl
and
xchg
out
cmp
add
test
dec
or
ins
inc
xchg
cmp
nop
popa
sbb
jmp
inc
push
sbb
cmps
(bad)
callw
inc
leave
outs
adc
leave
sbb
jo
in
inc
int3
add
hlt
mov
mov
div
xchg
sub
push
or
push
mov
ret
cmp
in
loop
push
xor
in
fwait
xor
inc
xor
mov
jp
push
inc
mov
pop
xor
hlt
sub
bound
fcmove
jp
movs
pusha
inc
add
dec
and
call
test
retf
loop
or
push
mov
std
(bad)
aaa
push
stc
popf
mov
pop
xchg
push
test
and
pop
movs
xlat
aam
push
and
pop
mov
test
jg
ret
and
retf
xchg
cwde
inc
mov
jo
sbb
mov
mov
pop
mov
add
mov
sbb
mov
int3
push
sub
push
sar
or
out
jae
or
ret
sbb
or
leave
xor
popf
out
pop
sbb
ret
add
test
pop
or
or
jno
fs
dec
and
sahf
shl
push
adc
scas
inc
std
push
jl
mov
jno
mov
call
jl
pop
add
pop
and
mov
and
addr16
pop
jp
dec
leave
xchg
jl
out
xor
mov
xor
or
mov
jbe
test
pop
add
dec
gs
mov
fcmovne
int3
shr
and
mov
into
mov
es
mov
mov
mov
jecxz
mov
push
adc
leave
push
adc
je
adc
jmp
das
int
fld
push
add
pop
pop
int3
das
aas
and
push
lds
mov
cld
pop
movntps
mov
cmp
jne
ror
push
xchg
mov
and
jg
and
mov
cdq
test
mov
stc
lahf
adc
gs
and
into
push
xor
fsubr
mov
jmp
dec
(bad)
jno
lea
loopne
fxch
hlt
sbb
xchg
ss
(bad)
dec
stos
faddp
mov
xchg
mov
(bad)
or
mov
jae
push
jbe
sahf
pop
mov
jp
dec
jmp
dec
les
fs
mov
out
ficom
sub
jmp
repnz
test
into
call
ins
(bad)
(bad)
bnd
adc
or
mov
jg
mov
jne
fist
retf
sbb
call
sub
mov
mov
pop
lds
sub
xor
xchg
iret
sbb
cmp
push
and
mov
xor
das
femms
dec
cdq
or
(bad)
(bad)
addr16
xchg
test
adc
mov
mov
cmp
rcl
call
shr
mov
jne
sbb
cmp
cdq
dec
(bad)
das
rcl
or
dec
adc
dec
iret
sbb
mov
rcl
scas
sbb
std
pop
and
mov
and
in
(bad)
xchg
fdiv
inc
dec
jo
fs
ss
in
scas
mov
or
rol
test
(bad)
mov
cmp
pop
pop
inc
mov
iret
xchg
vpshlb
jae
push
cmp
add
push
mov
dec
dec
rcl
xchg
mov
pop
rol
mov
pop
push
inc
add
enter
sbb
sbb
cmp
mov
pop
pop
sub
cmc
sub
sub
mov
ds
mov
aad
cmp
sar
add
sar
loopne
cmps
aas
fcmovnu
push
fwait
enter
adc
sub
dec
dec
cmps
ss
jmp
adc
icebp
inc
and
cmp
dec
inc
pop
mov
and
xor
in
xchg
arpl
rcr
clc
nop
adc
mov
sbb
mov
js
mov
outs
mov
pop
mov
mov
xchg
popf
shl
les
in
ins
shl
fs
inc
fwait
add
movs
xchg
dec
dec
push
fld
inc
test
sub
aam
icebp
fld
add
adc
and
and
push
int3
sahf
jl
pop
addr16
nop
inc
ja
adc
(bad)
enter
push
or
lods
push
mov
call
fs
sub
iret
dec
(bad)
fisttp
repz
pop
push
(bad)
clc
jmp
sub
lock
retf
addr16
retf
cmp
pop
add
neg
in
ds
pop
movs
push
cmc
mov
ret
sbb
adc
fmul
pop
adc
sbb
and
jno
leave
add
mov
add
sub
lock
les
out
retf
lahf
inc
mov
pop
shl
data16
jl
pop
pop
mov
or
or
jp
pop
adc
rcr
fcmovne
addr16
mov
mov
inc
xchg
xor
dec
mov
mov
icebp
outs
dec
fs
sar
into
or
sub
fadd
sbb
add
enter
and
mov
lds
movs
inc
dec
je
(bad)
test
je
jle
(bad)
sub
xchg
lds
or
xchg
(bad)
mov
out
(bad)
popf
cmps
shr
adc
mov
(bad)
out
das
in
sbb
es
scas
jo
mov
pop
test
fdiv
gs
stc
clc
pop
sub
push
dec
call
data16
jb
inc
xchg
cmp
push
out
das
fnstcw
and
mov
fsubr
sub
enter
sbb
xor
in
mov
xor
(bad)
push
(bad)
mov
dec
inc
(bad)
or
ja
jmp
push
bound
sub
jle
movs
cmp
mov
push
repnz
iret
mov
fld
loope
push
lods
ins
stos
jecxz
dec
inc
cmps
je
sti
mov
mov
mov
jbe
das
test
clc
rol
mov
dec
lods
push
test
nop
mov
scas
call
shr
and
push
es
sbb
(bad)
sbb
scas
retf
mov
or
inc
inc
cmc
sub
retf
ret
ins
or
or
clc
sbb
jle
(bad)
fadd
leave
arpl
dec
fcomip
popf
dec
nop
stos
and
push
xor
movs
mov
push
sbb
push
cmps
pop
xchg
jmp
inc
dec
pop
movs
nop
shl
add
pop
out
cmc
jl
mov
mov
mov
outs
imul
push
(bad)
inc
das
rcl
cs
ret
push
push
push
push
repnz
push
or
es
daa
xchg
inc
add
(bad)
aaa
dec
or
cdq
shr
in
push
push
loop
adc
out
xor
arpl
push
retf
mov
cmp
rcl
std
(bad)
in
dec
in
ret
lods
push
stc
scas
cmp
(bad)
aam
jge
gs
ins
mov
cli
or
inc
sub
push
sub
mov
aas
popa
sbb
xchg
mov
pushf
sub
(bad)
mov
add
out
(bad)
or
adc
ffreep
jbe
adc
cmps
xchg
mov
cli
cli
mov
les
call
nop
int
sbb
lea
xchg
push
fcmovu
jmp
cmovp
neg
mov
mov
rol
jge
lods
jno
add
shr
pop
jmp
mov
mov
or
fadd
je
pushf
inc
jns
inc
cli
and
shr
or
mov
add
cmps
dec
scas
in
lea
popf
mov
adc
sub
inc
loop
pushw
sbb
xchg
retf
(bad)
arpl
lock
cli
or
inc
pushf
lahf
arpl
ror
xor
sar
push
fdiv
mov
mov
mov
mov
pop
xor
int
ror
popf
or
xchg
leave
fisttp
enter
push
mov
xchg
push
aaa
ror
dec
inc
adc
into
daa
add
mov
loop
xchg
iret
stos
outs
mov
fwait
cmp
dec
xchg
les
jns
jbe
pop
stos
js
out
push
push
push
mov
push
aad
fisubr
mov
jnp
mov
ror
or
mov
mov
rcr
mov
mov
jp
push
imul
not
xor
cld
rcr
mov
inc
dec
dec
daa
push
xchg
add
enter
scas
pop
into
jns
fisub
or
add
xchg
retf
xor
outs
neg
inc
lock
iret
mov
dec
pushf
sti
test
pop
pop
cmc
popf
cmp
cwde
test
xor
cmp
fcmove
daa
ds
xor
fcmovbe
rol
mov
ja
call
icebp
shl
and
das
sbb
fsub
inc
scas
mov
cmp
(bad)
xlat
xchg
jbe
xor
mov
pop
mov
mov
mov
jne
aam
adc
adc
imul
mov
mov
mov
gs
add
out
ins
jle
or
jmp
mov
mov
or
dec
add
mov
mov
mov
xchg
mov
pushf
sub
idiv
pop
mov
add
ror
mov
stos
ins
cmp
jne
test
push
aaa
pop
push
icebp
scas
enter
dec
jae
std
mov
pop
leave
pop
push
adc
push
nop
dec
ret
push
inc
pop
frstor
pop
add
jl
inc
pop
fidivr
repz
aas
dec
mov
std
mov
sti
mul
adc
loop
ss
push
stos
inc
sar
test
lock
dec
cli
mov
dec
mov
sbb
mov
dec
mov
push
xchg
add
lock
loopne
cmc
push
shl
or
das
and
mov
fwait
dec
fcmovbe
and
hlt
push
enter
outs
jae
es
sbb
jnp
adc
rol
stc
mov
enter
dec
in
outs
das
pop
loop
pop
push
sbb
cmp
test
popa
jp
iret
and
(bad)
(bad)
jmp
or
repnz
xor
xor
pop
sub
fldcw
fist
outs
cwde
jmp
fcomp
mov
mov
inc
jno
fistp
add
shl
jne
push
aaa
mov
mov
push
dec
inc
push
cli
pop
mov
loope
lock
bound
mov
std
jae
outs
mov
bswap
jecxz
cmp
arpl
push
ins
iret
xchg
out
xor
pop
xchg
mov
sbb
call
imul
in
mov
mov
daa
mov
aas
pop
in
ds
dec
sbb
push
xchg
mov
xor
js
sbb
mov
idiv
sbb
adc
sub
inc
mov
(bad)
and
je
xchg
jmp
pop
cmp
push
xchg
inc
xchg
aas
push
adc
inc
repnz
mov
push
cli
mov
dec
xchg
mov
bound
xor
sub
push
stos
push
enter
scas
jmp
xchg
lock
popf
bound
xbegin
adc
stos
xchg
and
repz
mov
pop
(bad)
cdq
dec
nop
pop
in
xor
test
xor
xchg
repnz
pusha
outs
inc
addr16
or
std
xor
xor
add
rcr
pop
adc
into
ror
(bad)
mul
cmc
(bad)
in
(bad)
ins
inc
sbb
sbb
mov
push
mov
and
add
adc
adc
push
jns
lock
pop
not
cld
sbb
xchg
mov
sbb
hlt
jb
stos
mov
loop
mov
xor
cmp
shl
sahf
cmp
mov
jge
cld
push
imul
retf
(bad)
xchg
xchg
outs
psubusw
mov
pop
(bad)
mov
push
mov
rcr
inc
pop
jmp
inc
adc
rcr
mov
pushf
mov
call
jp
aas
cmp
inc
cmp
and
and
aas
adc
add
push
movs
outs
call
mov
repz
(bad)
(bad)
addr16
dec
jmp
and
mov
test
xchg
mov
adc
ror
dec
or
jg
mov
cmp
pushf
inc
lods
sahf
or
scas
pop
loope
arpl
aaa
pusha
iret
push
mov
lock
enter
add
mov
mov
(bad)
hlt
cwde
inc
and
in
jbe
lahf
call
mov
pop
mov
mov
xor
add
sti
idiv
adc
aas
push
jno
daa
aas
fwait
lock
inc
outs
js
or
inc
sub
xchg
cmp
inc
mov
adc
xlat
cli
mov
sub
test
push
push
std
mov
retf
bound
retf
mov
aam
inc
pusha
pop
xor
jmp
cmp
hlt
scas
addr16
stos
scas
push
mov
adc
outs
pushf
popa
shr
mov
cmp
jnp
jb
(bad)
sbb
cs
movs
and
mov
mov
mov
mov
add
stc
jno
out
and
pusha
push
xor
pushf
mov
fisubr
and
dec
(bad)
jns
jmp
adc
sbb
stos
jl
push
js
mov
xor
mov
pop
enter
ja
mov
dec
ins
mov
push
xor
cmovo
dec
jne
leave
bound
xor
cmp
pop
mov
or
mov
mov
xchg
jb
mov
out
push
mov
mov
repz
leave
mov
push
jg
xchg
retf
push
movs
mov
cs
out
(bad)
bnd
cli
sbb
push
aas
mov
jl
xchg
rcl
xor
stos
jg
mov
retf
in
and
xchg
cmp
into
xor
cmps
dec
inc
or
pop
cwde
add
int3
jmp
push
sar
popf
jno
rep
loopne
test
(bad)
fldenv
fldcw
cmp
dec
and
lea
aad
mov
jle
cld
push
mov
sub
jne
clc
nop
xor
pop
jmp
jl
sti
or
fisub
fucomp
fldcw
orps
out
mov
inc
or
loope
push
hlt
dec
pop
and
je
data16
ss
aas
movs
repnz
mov
xor
jle
xchg
ins
pop
pushf
xor
in
pop
ret
jmp
pop
(bad)
fild
sbb
pop
inc
aas
inc
mov
lods
scas
xor
inc
jmp
outs
sub
popa
test
or
xor
mov
cmp
jecxz
leave
fcom
fldcw
test
imul
adc
or
jle
popf
pop
js
dec
leave
fwait
inc
lds
or
xchg
mov
mov
fwait
daa
(bad)
sub
mov
movs
cmp
sbb
add
inc
in
imul
xchg
xchg
pop
js
mov
test
jb
lods
mov
xchg
sahf
mov
and
arpl
adc
push
sub
fs
push
outs
and
mov
mov
ds
popa
clc
fmul
push
sub
cmps
inc
out
and
and
adc
stos
jge
push
cmps
sahf
jmp
inc
(bad)
pcmpeqb
ins
fs
push
xchg
popf
inc
sub
jge
mov
push
inc
retf
mov
neg
adc
ret
call
pop
adc
ss
mov
push
mov
dec
jmp
sub
call
adc
sbb
cwde
shl
push
sbb
cmps
popa
fcmovnu
leave
add
out
not
xchg
xor
fldenv
jp
std
call
jle
test
lods
rol
fmul
cmps
xlat
jmp
or
xchg
fsubr
jbe
or
inc
cmp
imul
push
jl
js
jg
dec
movs
inc
scas
ins
rcl
ss
int3
(bad)
(bad)
neg
pop
stc
pusha
les
cmp
add
or
lods
push
mov
mov
stos
jl
and
(bad)
cld
scas
mov
add
fwait
push
sub
dec
sar
pusha
in
lods
sub
jge
(bad)
lea
cmp
adc
mov
push
pop
inc
scas
stos
sahf
fadd
and
cmp
retf
xor
cmp
imul
xor
mov
xchg
push
mov
dec
and
cdq
es
xchg
shr
je
cmps
lods
bound
aad
out
lea
push
out
dec
call
in
js
test
sub
push
push
dec
cmp
xor
sub
cmp
add
(bad)
mov
dec
push
daa
add
sub
pushf
into
push
xor
stc
test
scas
mov
sbb
imul
xor
jle
loope
push
push
adc
and
mov
mov
pop
mov
mov
jge
pop
sbb
mov
icebp
sub
aad
int
xchg
shl
mov
ffree
xor
lock
iret
and
or
dec
dec
mov
xor
es
xchg
add
pushf
mov
dec
sub
xor
dec
shl
jnp
xchg
jns
mov
or
mov
and
leave
ret
cmps
pop
adc
push
xchg
mov
or
adc
sub
loop
xlat
fiadd
mov
mov
sbb
fldcw
cmp
stos
sti
cmps
mov
sbb
xchg
fisub
mov
lahf
out
lods
jne
mov
std
stos
inc
pop
sbb
loop
sti
out
jae
outs
xor
add
(bad)
test
sub
and
xchg
jp
out
cmp
push
cmps
sbb
sbb
or
mov
(bad)
call
add
adc
jne
ins
sbb
xchg
shl
ficom
push
pop
sbb
cmp
stos
push
xchg
sbb
mov
mov
add
mov
in
ficomp
cwde
cmp
mov
sub
push
inc
dec
mov
stc
dec
lds
mov
add
mov
xchg
test
cmp
jno
xchg
mov
test
inc
mov
push
fcmovu
shl
sbb
sbb
call
and
stc
in
div
sub
fiadd
mov
test
mov
or
fbld
rol
push
lods
mov
xor
aam
ss
sbb
dec
xor
inc
div
add
and
aaa
je
fimul
ss
dec
(bad)
not
(bad)
xor
sti
out
push
pop
sbb
nop
jb
mov
mov
(bad)
or
stc
jl
jl
or
jl
inc
pop
xor
call
jp
xor
pusha
je
cwde
sub
xchg
pop
pop
dec
test
push
out
inc
daa
cmp
or
dec
inc
mov
int
popa
jo
adc
mov
sbb
xchg
cmp
and
std
push
hlt
xchg
xchg
jp
cmp
fistp
test
lea
dec
push
retf
nop
inc
xchg
stc
movs
fs
cmps
and
fs
adc
pop
jb
cmp
sub
out
repz
mov
push
mov
enter
movs
ja
scas
xor
sbb
adc
jmp
or
mov
in
dec
ror
mov
push
add
clc
sbb
xchg
cdq
mov
popf
and
pop
mov
mov
in
push
sar
pop
loope
bswap
jnp
int3
shl
rol
rcl
mov
icebp
cmp
fiadd
mov
in
loope
outs
inc
pop
dec
cdq
retf
sbb
mov
cdq
rep
dec
int3
repnz
and
and
xor
xor
xor
aad
lods
dec
into
fxch
xor
and
sub
mov
pop
xchg
and
xchg
inc
jmp
fld
add
xor
cmps
in
cmps
mov
xchg
sub
cmp
mov
dec
gs
stos
into
shl
xlat
mov
call
aas
(bad)
stc
jne
rol
outs
js
sub
push
dec
inc
repnz
sahf
jmp
fld
inc
test
mov
pop
mov
mov
jmp
and
adc
mov
leave
enter
pushf
cld
xchg
loopne
loope
ins
mov
adc
and
je
pop
xor
cmp
add
pop
retf
dec
inc
pop
movs
push
add
push
pop
push
pop
gs
lods
cmp
jae
mov
xchg
int
pop
push
push
add
cmps
mov
mov
xor
ds
jge
or
fdivr
imul
xor
pushf
jmp
xchg
in
mov
pop
(bad)
call
fwait
pushf
shl
arpl
out
sahf
or
mov
xor
mov
retf
ins
push
xor
pop
test
test
push
and
adc
xor
rcl
mov
mov
cmp
pushf
xchg
push
xor
leave
sbb
es
push
shl
outs
jb
call
mov
lock
push
add
rol
(bad)
or
jne
push
cmp
pop
(bad)
(bad)
mov
scas
ins
jns
not
and
pop
add
push
retf
mov
xchg
inc
shr
inc
push
mov
xlat
dec
cs
mov
jbe
push
add
sub
pop
push
je
cmp
(bad)
adc
push
xchg
gs
jno
and
in
mov
xor
xchg
xor
xor
mov
dec
push
pop
rol
sbb
xor
dec
inc
gs
jns
jle
adc
adc
sub
popa
rcr
es
stos
push
jl
fs
cmp
dec
push
pop
icebp
sub
sbb
ins
add
pusha
pop
sbb
jge
jo
push
sub
mov
jnp
das
movs
jl
adc
ds
push
or
clc
jge
xadd
cmp
cli
mov
sub
in
sub
ret
fild
ror
push
jno
pop
loop
and
mov
jge
mov
imul
rol
mov
or
pop
(bad)
sbb
mov
popf
clc
outs
jbe
add
adc
enter
out
push
fsub
mov
pop
shr
mov
out
call
cdq
mov
jmp
mov
sbb
retf
ret
outs
and
inc
jae
mov
add
mov
or
sub
push
mov
rol
mov
push
movs
mov
jo
sbb
xchg
adc
aam
mov
in
rcr
cmp
fiadd
adc
xor
cdq
dec
lods
jg
mov
xlat
and
je
pop
fisub
inc
or
push
adc
mov
jl
xor
push
cmp
jecxz
iret
fpatan
jno
adc
push
rcr
lods
fwait
pop
or
out
add
out
repnz
dec
mov
push
in
(bad)
and
movs
ror
sbb
fiadd
ror
inc
inc
int
(bad)
cmp
push
movs
ds
clc
add
cmp
pusha
or
pop
or
fwait
dec
fwait
xor
adc
or
outs
cwde
pop
dec
(bad)
bound
inc
pop
fwait
inc
(bad)
out
(bad)
or
push
mov
idiv
sbb
sub
sahf
add
mov
(bad)
pop
adc
xor
xlat
movs
pop
sub
xchg
cmp
xchg
cmp
call
stos
fstp
jne
outs
cmp
jb
in
int
cs
xor
loope
jge
das
mov
popf
mov
ror
sahf
push
bound
mov
repz
pop
push
xor
xor
scas
sub
cmp
sub
nop
je
xchg
mov
and
movs
add
aam
sbb
stc
int3
xor
ja
add
dec
stos
jg
xchg
cmp
push
push
add
in
sub
adc
jne
jmp
int3
aam
mov
stos
inc
add
test
aas
je
movs
(bad)
cmc
xor
ret
mov
fcmovnbe
dec
and
stos
add
mov
scas
sbb
inc
sbb
je
je
pop
leave
cmc
adc
mov
cmp
jmp
mov
cmp
cmp
jno
jae
ret
(bad)
dec
mov
je
adc
mov
dec
int3
push
stc
pusha
(bad)
jb
pop
add
push
(bad)
in
dec
xchg
mov
pushf
loop
xchg
push
or
pop
stos
mov
mov
push
inc
leave
xchg
test
mov
rol
shl
lock
pop
push
or
fdiv
sub
les
pop
ins
sub
inc
cmps
scas
mov
xor
pop
(bad)
mov
fcom
or
xor
adc
or
inc
scas
mov
or
rol
daa
pop
and
jl
repz
dec
xchg
(bad)
dec
inc
xor
cld
(bad)
lock
mov
or
ins
clc
(bad)
cmps
out
ins
inc
adc
pop
mov
push
mov
and
ss
sub
pop
sbb
push
popa
adc
cmp
push
add
pop
or
inc
repnz
stc
inc
mov
loop
movs
out
mov
gs
popa
call
pusha
push
add
cmp
or
int
xchg
dec
rcl
rcl
inc
out
outs
cmp
pop
shl
xchg
rcl
fcom
pop
pop
repz
inc
jl
pushf
and
dec
aas
xchg
mov
sahf
dec
inc
sar
cli
repnz
mov
inc
inc
pop
rcl
les
fwait
xchg
in
(bad)
or
jmp
pop
shl
xor
mov
fdivp
cmp
test
jmp
out
aad
sbb
adc
fadd
push
ss
xchg
js
sbb
mov
add
push
mov
jb
cld
int
push
mov
out
mov
jo
sub
mov
test
pop
push
retf
movs
jae
enter
adc
psubq
push
xchg
xchg
jecxz
pop
aad
movs
neg
push
dec
add
or
dec
pop
aas
sub
push
imul
mov
push
fld
push
jp
loope
push
mov
xchg
mov
iret
sbb
out
stos
sbb
addr16
je
pop
jnp
pop
mov
inc
sti
ds
int
add
push
add
cwde
sbb
mov
sbb
imul
stos
jne
dec
xchg
pop
jecxz
(bad)
lods
adc
cmp
sar
push
push
push
adc
enter
xor
clc
pop
push
jmp
add
dec
cs
push
daa
xor
popa
jl
mov
out
sbb
cmps
or
shl
sbb
inc
inc
js
mov
es
cs
sub
lods
inc
clc
adc
imul
in
fxch
ja
scas
mov
jae
sbb
inc
or
fsin
jecxz
jle
add
jbe
adc
mov
iret
loope
pop
bound
xchg
je
bound
mov
and
ins
daa
xor
pop
xchg
jmp
push
mov
stc
pop
sbb
fcmovbe
jle
aas
shl
cmp
sbb
int
cwde
pushf
aaa
push
add
imul
daa
std
dec
and
sub
mov
leave
nop
test
xchg
lods
mov
xchg
mov
jbe
ss
loope
jne
icebp
mov
and
fisubr
ja
or
rcr
and
jecxz
dec
jo
sar
loop
test
sbb
xchg
std
sbb
jl
inc
(bad)
xchg
mov
sar
dec
jnp
cli
bnd
sbb
cmp
sub
fstp
pusha
repnz
mov
(bad)
repnz
cmp
xchg
xor
adc
or
add
mov
cmc
nop
lods
out
push
jl
lods
xlat
sbb
into
xchg
ins
mov
dec
lds
xor
pop
mov
pop
pop
and
mov
push
or
mov
pushf
push
fld
inc
pop
mov
das
cmp
jmp
and
jp
jnp
inc
xchg
adc
jno
sub
adc
jne
ret
das
sub
jl
fdivr
ret
jns
or
dec
cmp
lea
sbb
arpl
jle
fs
ja
and
or
mov
popf
inc
and
mov
(bad)
icebp
xchg
cmp
dec
sbb
test
nop
test
add
pusha
in
pop
xor
popf
sbb
nop
pop
jmp
pop
and
adc
in
pusha
int
aad
in
sub
inc
mov
arpl
loopne
xor
add
pop
cmp
mov
mov
hlt
pop
jbe
mov
adc
lds
sub
(bad)
xor
push
sub
jne
mov
mov
ja
jb
mov
ror
fstp
loopne
sbb
pusha
loope
jl
cmp
cmp
push
inc
sbb
adc
mov
cmp
mov
ja
jge
adc
daa
sub
mov
sti
pop
mov
das
or
jnp
sti
repz
cmp
outs
dec
xor
jno
clc
leave
(bad)
sbb
shl
fsubr
inc
mov
sub
pop
sbb
xchg
ins
cwde
ret
dec
cld
pop
repnz
pop
push
adc
xor
lahf
push
sub
cs
repnz
rcr
(bad)
mov
cli
cmp
or
daa
and
aam
cs
jne
out
test
dec
ss
add
lahf
adc
imul
sub
and
xchg
jmp
jne
sub
inc
mov
pop
xchg
cmc
xchg
and
push
clc
xchg
lock
jl
and
test
ror
stos
dec
and
sbb
pop
push
ret
fdivr
pmuludq
stos
aam
xchg
data16
jmp
inc
sahf
adc
popf
adc
add
mov
in
cmp
out
ss
test
sbb
pop
imul
aad
xchg
fdivr
jb
imul
(bad)
repnz
shr
jmp
mov
xlat
adc
ror
pop
push
or
(bad)
rcr
mov
xchg
std
pop
pop
jae
push
cs
stos
mov
out
or
(bad)
push
icebp
pop
push
mov
mov
inc
push
jp
ss
(bad)
jecxz
loope
sub
mov
jae
inc
data16
sub
inc
inc
lods
ret
mov
mov
and
fld
xor
jl
sbb
add
mov
or
lahf
sub
lods
dec
out
push
or
adc
(bad)
aas
pop
adc
jl
aam
inc
(bad)
ja
pop
enter
test
mov
pushf
cmp
mov
mov
test
xlat
jo
jns
or
push
out
fld
into
imul
int3
dec
addr16
mov
fadd
in
outs
shl
pop
jns
jbe
std
jp
mov
or
cwde
and
cmp
pusha
out
pop
dec
scas
icebp
retf
inc
inc
jae
int3
movs
mov
jno
mov
fidiv
fist
in
dec
shl
mov
inc
push
dec
add
mov
add
push
out
in
retf
stc
call
fs
cli
inc
test
popa
pop
jnp
in
and
mov
push
fisub
or
nop
push
adc
mov
outs
shr
out
call
pop
test
xor
into
adc
(bad)
xlat
retf
scas
shr
mov
scas
jae
aas
or
add
and
push
loopne
retf
lock
sub
fisttp
lfs
adc
jb
sbb
stos
fbld
inc
mov
adc
in
sti
xor
rol
or
ret
pop
mov
add
xchg
hlt
and
jnp
inc
jnp
push
sbb
dec
mov
mov
jns
in
loope
add
iret
jae
xchg
dec
mov
test
or
sub
mov
inc
xor
retf
mov
cdq
lods
cmp
jbe
mov
or
mov
cli
adc
aaa
jb
fild
jge
(bad)
shl
fldcw
jle
cld
fwait
mov
jmp
cmp
jg
mov
imul
push
fisttp
sahf
in
ins
fstp
cmp
xchg
cmp
out
repnz
and
jb
add
xchg
cmps
adc
xor
dec
lods
sub
shl
or
js
and
imul
fstp
ins
scas
dec
sbb
repnz
pop
clc
xchg
jne
js
lahf
mov
out
pop
movs
xchg
lock
out
enter
mov
std
cmps
fistp
sbb
sub
pop
adc
dec
sahf
and
mov
xor
popa
pop
sti
push
mov
pop
(bad)
retf
std
push
jg
push
ds
(bad)
sti
sti
out
or
sub
popf
ja
cdq
cpuid
adc
cmps
les
in
inc
out
push
ja
adc
inc
mov
idiv
data16
pop
lods
and
(bad)
sar
jno
xchg
popa
xor
adc
test
push
adc
jb
jmp
xchg
or
push
add
ficomp
gs
xchg
lods
loop
(bad)
xor
adc
jne
mov
shr
fs
cmp
lods
retf
push
cmp
pop
pop
or
(bad)
jmp
add
pop
ja
pop
cmps
rcr
sub
dec
cmc
sbb
jmp
mov
mov
in
jmp
hlt
mov
and
adc
je
cmc
xchg
int
mov
inc
out
jno
jecxz
mov
fldln2
(bad)
xlat
cmp
dec
sub
call
test
dec
out
clc
mov
ja
lods
cmp
jb
pop
aam
mov
cmp
stc
add
jp
iret
std
cli
mov
jg
and
(bad)
mov
rcr
sub
xchg
ret
test
xor
movs
xchg
jp
movs
jnp
adc
push
movs
add
inc
stc
mov
hlt
adc
jl
in
inc
jnp
cmps
sar
ss
sub
leave
add
(bad)
(bad)
in
(bad)
rcl
es
stos
jo
inc
ins
jl
in
add
sbb
or
xor
fld1
sar
sbb
cmps
xor
mov
add
retf
outs
cmp
in
pusha
push
adc
and
pop
hlt
and
push
int
jle
in
test
sti
sub
pushf
jbe
cmp
les
mov
stc
xchg
add
and
add
jae
sub
mov
fwait
jmp
jmp
scas
pop
jne
sub
test
or
mov
out
outs
inc
hlt
pop
popa
inc
ror
inc
jne
xchg
xor
inc
xlat
jmp
xor
push
adc
push
xchg
dec
inc
loope
popa
popa
and
retf
sbb
jno
jecxz
xchg
xor
dec
lods
jb
jp
cmps
push
xor
xchg
stos
pusha
adc
or
xor
xchg
cmps
push
lahf
jo
sbb
inc
out
cmp
dec
je
enter
push
rol
sahf
inc
dec
shl
dec
sbb
inc
pop
repz
in
jno
dec
jo
cmp
add
cmp
bound
mov
xchg
pusha
push
iret
das
jae
jg
imul
push
dec
push
fwait
adc
jl
jl
repz
inc
aaa
data16
loopne
sub
lea
jge
fimul
cmp
gs
jne
inc
push
push
mov
jl
push
inc
pusha
test
add
adc
inc
jmp
mov
or
mov
mov
xor
push
cmp
mov
mov
in
imul
loope
and
fwait
(bad)
(bad)
jns
push
ret
cld
mov
lock
rol
dec
push
int3
lods
jo
lds
add
iret
mov
fst
jp
mov
fs
push
gs
dec
push
jl
add
cmps
mov
dec
repz
sub
aad
xor
adc
cdq
sahf
call
dec
lea
imul
fnstsw
mov
popa
jp
pop
retf
dec
jle
or
aam
and
jle
adc
daa
nop
rcr
in
jecxz
(bad)
shl
or
or
pop
lds
cmp
jno
fisub
retf
mov
sbb
cmp
xor
rcl
fisttp
xchg
mov
or
mov
gs
sbb
pop
ss
dec
lods
mov
sbb
lods
imul
ret
pop
adc
out
cmp
or
and
idiv
sub
stc
adc
jecxz
ins
in
mov
pop
enter
enter
retf
xchg
cmp
add
mov
or
lods
cmps
dec
add
sbb
sub
int
dec
test
mov
imul
nop
push
xchg
out
icebp
and
cmp
and
mov
sar
dec
les
inc
push
pop
mov
and
dec
iret
and
adc
test
movs
jae
mov
xor
push
inc
test
dec
fimul
adc
or
call
(bad)
add
les
adc
rol
mov
rcr
adc
aad
pusha
lock
ss
enter
fs
xchg
inc
jmp
(bad)
fdiv
das
sbb
xchg
xchg
jne
mov
mov
out
sub
jbe
pop
lahf
mov
mov
(bad)
sbb
push
pop
mov
fdiv
pop
rcr
pop
(bad)
mov
(bad)
inc
pop
sub
shl
test
jbe
lea
xchg
popa
sub
inc
inc
movs
movs
pop
leave
adc
popf
mov
(bad)
out
xor
push
xchg
mov
movs
jge
pop
push
inc
out
and
mov
dec
push
rol
fld
cmps
push
(bad)
xchg
imul
ret
call
or
ret
out
mov
std
aam
mov
cmp
call
inc
aas
into
push
push
out
adc
neg
test
int3
xchg
xchg
push
xor
inc
in
push
mov
(bad)
sar
add
fsub
pop
cmp
adc
ret
std
mov
pop
jg
(bad)
movs
mov
xor
dec
xor
mov
push
or
js
inc
icebp
(bad)
pop
xchg
mov
sbb
inc
sub
mov
hlt
ins
cs
or
jns
sahf
test
daa
div
pop
mov
or
mov
movs
or
mov
and
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
es
add
sub
jmp
xor
jmp
pop
pop
jb
fild
push
inc
jge
mov
mov
out
pop
movs
in
dec
repnz
fisub
sub
dec
call
or
mov
mov
jge
cmp
add
cld
xchg
dec
xor
or
mov
mov
adc
fucom
xor
or
test
rcr
aaa
dec
push
xor
cmp
repnz
jg
test
out
gs
cmp
ror
push
mov
fist
or
pop
or
imul
add
imul
push
pusha
retf
out
ja
mov
lods
or
xchg
fnstcw
loopne
rcr
sahf
jle
hlt
dec
in
mov
jge
xchg
cmp
fs
jl
xor
scas
adc
sbb
jbe
hlt
(bad)
cli
cli
popf
nop
paddw
out
test
pop
imul
loop
push
dec
jbe
sbb
fadd
shr
pop
data16
jnp
mov
jnp
xchg
arpl
mov
xchg
push
ins
stos
push
retf
rcr
call
icebp
not
stc
push
xchg
and
dec
pusha
in
(bad)
jno
sub
inc
sub
xchg
push
(bad)
idiv
push
jo
push
call
aas
movs
fsub
sub
rcr
mov
stos
lock
icebp
cmp
test
sbb
test
faddp
adc
adc
mov
mov
stc
popa
loope
jmp
pop
mov
fsub
int
xor
inc
jo
ins
and
mov
sub
shr
and
jmp
(bad)
data16
xchg
pop
out
jg
fs
pop
ins
mov
or
pusha
jo
movhps
sub
cmps
jmp
leave
pop
cdq
mov
add
or
cmps
in
dec
rcr
mov
mov
mov
add
mov
icebp
push
sti
outs
nop
add
shr
arpl
out
xor
push
cmp
rcl
sub
push
int3
clc
pop
cmp
cld
sbb
push
mov
das
mov
cmp
out
inc
cdq
repnz
add
mov
and
cs
aad
push
cld
das
jb
cld
push
push
dec
mov
push
ffree
cmp
push
xchg
xor
ja
push
jns
sbb
sahf
push
dec
dec
push
cwde
push
xchg
xchg
fucomi
shl
unpckhps
pusha
and
xchg
inc
sub
dec
sar
sub
scas
pop
les
clc
sti
dec
dec
fimul
ja
push
pop
out
imul
inc
xlat
loope
adc
dec
cdq
sbb
xor
push
(bad)
or
mov
sub
pop
dec
(bad)
out
dec
dec
loop
div
and
push
cmps
ror
xchg
inc
mov
fmul
push
xor
repnz
jmp
mov
cld
js
cmp
jbe
xor
data16
push
rcr
and
nop
shl
mov
or
dec
push
push
(bad)
xchg
pop
or
movs
test
jmp
sub
mov
adc
loop
rcr
lds
add
div
push
arpl
jmp
arpl
push
mov
ret
loope
add
push
ret
jge
arpl
add
fcom
jbe
fidiv
mov
sub
test
pop
mov
cmp
mov
fcmovbe
retf
fistp
sbb
call
xor
rcr
pop
adc
add
aam
adc
push
in
in
mov
je
pop
or
sar
inc
stc
scas
or
dec
sub
xchg
es
inc
jmp
movs
aaa
test
inc
xor
pop
or
ins
mov
mov
js
out
cli
ja
sbb
outs
repnz
mov
sub
fldcw
mov
lods
or
sub
loope
mov
push
xchg
xchg
hlt
adc
mov
lods
ss
add
inc
add
add
adc
push
pusha
imul
pop
iret
out
pop
adc
ret
adc
xor
mov
xor
mov
daa
and
xor
inc
and
mov
inc
mov
ss
adc
inc
repnz
and
ror
pop
jmp
jp
pop
sub
xchg
fimul
std
loopne
fsub
unpckhps
cmp
cmps
movs
leave
mov
push
imul
adc
fdivp
jl
push
pop
mov
scas
rcr
mov
loope
and
rcr
xlat
outs
mov
mov
or
jnp
idiv
push
jg
add
mov
sahf
ins
fwait
loope
sub
xor
xlat
mov
sub
mov
mov
add
es
xor
adc
repz
push
stos
clc
cs
sbb
jno
ja
xor
mov
rcl
push
mov
cld
enter
scas
int3
mov
pop
and
cld
cmp
stc
aas
inc
movs
movs
(bad)
aaa
test
and
sbb
retf
retf
fwait
lds
sti
bound
mov
setbe
cmc
hlt
in
and
in
js
sahf
adc
icebp
and
fs
adc
inc
sbb
sbb
mov
retf
xor
mov
push
xchg
xor
sbb
imul
aaa
test
(bad)
aas
xor
in
inc
stc
arpl
push
sar
test
inc
push
ins
arpl
int3
xor
mov
or
cmp
mov
shl
pop
dec
mov
dec
addr16
lea
mov
les
movs
and
(bad)
fwait
jb
js
hlt
daa
test
setp
movntq
fcom
jl
and
out
pop
test
mov
pop
inc
xchg
and
jl
fisub
rcl
pop
gs
inc
jb
mov
sbb
inc
sub
sbb
xchg
cdq
sar
jnp
mov
neg
pop
add
cmp
dec
pop
aaa
push
jmp
and
rcl
int
rcr
aad
pop
in
sbb
mov
dec
xor
movs
sbb
(bad)
test
jp
mov
fs
imul
inc
dec
xor
pop
rcl
dec
rol
sahf
sub
fistp
rol
jg
sbb
mov
adc
dec
push
push
xor
sbb
lock
inc
xchg
test
(bad)
mov
pop
out
sub
dec
sub
pop
bound
add
(bad)
jo
push
pusha
and
sub
jmp
sub
or
dec
xchg
sbb
mov
mov
inc
mov
outs
push
loop
jb
adc
test
hlt
int3
adc
sub
clc
push
movs
outs
movs
fcomip
(bad)
cmp
int3
mov
(bad)
pop
repz
or
push
cmp
cmc
ffree
add
mov
in
rcl
dec
mov
push
sub
ror
lahf
repz
hlt
jmp
adc
sbb
dec
mov
jl
xlat
sahf
retf
pop
ja
popf
call
test
scas
jo
mov
je
(bad)
das
and
imul
dec
inc
rcr
hlt
mov
mov
push
mov
mov
leave
mov
xchg
jmp
dec
mov
pop
jp
mov
dec
mov
je
nop
mul
ret
add
dec
pop
pop
sub
ret
pop
and
xlat
jge
mov
inc
call
hlt
mov
add
int
rcl
jo
dec
stos
inc
pop
fist
loopne
imul
loop
dec
push
xchg
add
adc
jmp
push
cmp
inc
pop
or
int3
cmp
imul
leave
leave
dec
dec
int3
lahf
and
jns
mov
push
or
mov
dec
je
fldenv
and
mov
in
daa
dec
jno
fstp
popf
lahf
dec
shr
stos
rol
call
into
jns
mov
mov
xor
cmps
(bad)
lahf
push
stos
loop
add
je
and
and
xchg
out
jecxz
imul
in
popa
call
mov
dec
ja
cdq
dec
jnp
cdq
cmps
add
scas
jge
sub
cmps
lahf
or
movs
scas
daa
push
dec
stos
xlat
jo
inc
sti
js
xchg
out
je
jnp
out
xchg
jg
sub
adc
imul
mov
lods
pushf
mov
ret
or
jb
rsqrtps
mov
into
adc
ret
sub
shr
in
in
sub
sub
repz
mov
fwait
xchg
sub
enter
sti
ret
xchg
mov
xor
add
lods
out
and
sub
xor
xchg
dec
add
mov
mov
arpl
mov
mov
test
lods
pop
jle
inc
loop
stos
jmp
clc
xchg
cdq
sbb
out
ret
in
sub
fild
test
aad
les
ds
and
or
mov
pop
xor
das
das
xlat
push
mov
push
jmp
ja
mov
dec
inc
stos
ret
xchg
loop
pop
aad
repnz
jbe
inc
addr16
push
jne
ds
mov
adc
mov
lock
mov
pop
cmp
push
xchg
mov
(bad)
mov
jmp
xchg
mov
sbb
and
pop
leave
cs
mov
ins
or
xchg
in
and
std
cmp
pop
pop
dec
scas
dec
xor
movs
adc
mov
hlt
mov
cmp
pop
pushf
add
mul
mov
mov
mov
sbb
fneni(8087
xchg
mov
cmp
xchg
mov
pop
icebp
arpl
scas
inc
cli
inc
loope
cmp
movs
and
fldcw
hlt
fisub
ds
cmc
scas
jno
jecxz
jne
mov
ret
ja
nop
mov
jp
cdq
in
and
adc
fild
aas
mov
xchg
pop
add
adc
sbb
cmp
push
in
inc
(bad)
enter
mov
cmc
icebp
mov
cmp
sub
add
dec
popa
(bad)
aas
jge
(bad)
int
mov
pop
cmp
inc
push
shr
and
mov
mov
shl
addr16
adc
jb
jle
jne
neg
cmps
cmp
mov
sbb
xchg
es
jl
loope
push
mov
or
out
repnz
push
push
stc
shl
sub
adc
frstor
enter
lds
add
mov
std
mov
in
xor
push
inc
mov
inc
jecxz
std
(bad)
jmp
push
jno
test
gs
xchg
push
inc
and
add
(bad)
mov
or
nop
sti
outs
or
jo
lahf
(bad)
aas
clc
push
jnp
rol
xchg
mov
push
imul
int
jle
outs
aaa
pop
mov
dec
adc
adc
push
addr16
pop
movs
mov
sub
lods
inc
sub
and
(bad)
pusha
jecxz
sub
sbb
xor
stc
and
mov
fldcw
je
out
ds
jne
jb
push
outs
sbb
jnp
pop
cmp
pop
sbb
test
mov
pushf
test
mov
rol
imul
cmp
xlat
fmul
or
icebp
int3
push
dec
or
xchg
jb
pushf
les
loope
call
xor
jg
out
scas
mov
xor
movs
dec
int
retf
and
dec
ret
leave
xor
test
dec
int
retf
ja
mov
mov
aam
jge
jmp
lds
(bad)
cmp
call
xor
cmp
(bad)
stos
pop
scas
sbb
xor
add
popf
test
aad
scas
ror
dec
mov
sbb
test
outs
mov
mov
movs
(bad)
adc
imul
xchg
inc
mov
xor
sub
fwait
scas
or
lock
cmp
and
adc
icebp
or
sbb
dec
adc
aam
mov
sti
add
pop
pop
cmp
cwde
inc
xchg
mov
mov
push
dec
jb
(bad)
fmul
fdiv
mov
aaa
or
pop
xlat
mov
lods
mov
repz
push
dec
scas
push
pop
sbb
and
and
jmp
aam
lods
lds
xchg
sub
mov
mov
jbe
jecxz
mov
inc
or
ss
loop
mov
sar
imul
pop
or
push
test
xchg
cmp
jl
jae
imul
fs
pusha
loop
jecxz
fild
mov
mov
popf
mov
push
(bad)
es
push
iret
jbe
mov
pop
dec
inc
popa
xchg
sub
xor
cmp
pop
loop
into
mov
icebp
mov
pop
int
jecxz
inc
xchg
jg
ret
leave
pop
mov
aas
retf
mov
mov
pop
jecxz
adc
push
test
add
out
(bad)
imul
pop
mov
out
call
ins
push
and
ins
fdivr
cmc
mov
inc
pop
retf
add
jns
mov
cmps
into
out
xor
ds
or
push
cmp
mov
clc
mov
es
jmp
mov
ja
sub
out
xchg
(bad)
mov
call
lock
mov
inc
jmp
mov
test
and
pop
arpl
int3
lea
mov
push
jmp
call
test
movs
(bad)
jle
sbb
add
repz
cmp
mov
mov
and
adc
cmps
test
fistp
jl
jnp
in
sub
jp
sbb
mov
pop
mov
retf
pop
fsub
rol
push
or
ins
(bad)
ja
xor
jmp
mov
push
mov
cmp
jmp
xor
bnd
and
retf
dec
inc
sbb
mov
ja
add
movs
idiv
neg
test
pop
fadd
mov
pushf
stc
loopne
ret
jmp
ret
out
stos
xchg
mov
stos
adc
or
mov
mov
out
mov
mov
lock
inc
ins
je
mov
es
adc
xchg
mov
pop
sbb
cmp
pop
inc
scas
sub
mov
les
cdq
mov
mov
addr16
push
pop
(bad)
jmp
mov
push
sub
je
pop
push
out
cld
pop
sbb
ret
setne
sub
pop
pop
iret
repnz
mov
sbb
iret
std
in
repz
rcr
in
or
lea
in
xor
sar
sti
fcom
(bad)
push
and
and
sub
pop
mov
xchg
gs
sbb
call
pop
fdiv
ins
inc
xchg
adc
add
pop
ins
adc
arpl
mov
adc
push
jmp
and
fidivr
push
pop
lds
popf
cdq
xchg
push
adc
or
inc
adc
adc
inc
jg
das
inc
sbb
lods
pusha
push
jns
push
ror
div
jbe
test
movs
in
scas
push
mov
pushf
push
pop
stos
sbb
mov
iret
and
mov
into
aam
and
das
sub
and
aas
dec
add
daa
jmp
call
sbb
adc
call
sub
popa
les
les
sti
shl
fs
fwait
inc
mov
imul
jle
ret
push
inc
ficom
mov
mov
add
xor
in
mov
xor
mov
adc
shl
mov
or
loope
push
mov
in
call
xchg
loopne
sbb
adc
ss
mov
(bad)
xor
mov
loope
jns
pop
dec
pop
test
movs
jge
cmp
loop
test
jo
lahf
(bad)
leave
jo
shl
data16
adc
inc
cli
mov
jg
leave
xchg
add
shl
test
mov
inc
pop
mov
int3
ret
(bad)
lods
mov
pushf
cmp
and
cdq
pop
xlat
cmp
hlt
inc
sbb
add
sub
and
push
loop
mov
cmps
and
fwait
sub
iret
push
cmp
lock
dec
push
lahf
mov
or
push
sbb
push
(bad)
push
cwde
daa
pop
push
pop
(bad)
repz
ss
movs
jl
mov
hlt
push
(bad)
and
popf
xchg
loopne
sub
fst
inc
adc
js
dec
sub
lods
movs
xchg
fcomip
mov
leave
cmp
and
mov
jle
in
push
sbb
mov
mov
test
stos
xchg
inc
test
loope
mov
and
inc
ins
lods
mov
jno
cwde
xor
lods
sbb
cmp
push
cmc
outs
rol
rcl
adc
fsub
jmp
push
or
pop
lahf
or
in
ror
add
cs
inc
inc
int3
imul
jle
adc
pop
das
pop
out
lods
test
push
xchg
dec
push
(bad)
sbb
and
jnp
loope
mov
dec
pop
sub
ds
adc
xor
sub
test
jbe
es
stc
push
push
sbb
mov
add
lea
sub
iret
inc
fsubr
xchg
mov
nop
pusha
popf
(bad)
jge
fisttp
out
repz
gs
push
loopne
mov
and
sahf
jne
mov
fst
dec
adc
(bad)
push
add
sub
cmp
xor
push
cld
push
mov
inc
pop
pop
popa
aaa
imul
cmp
and
ins
adc
iret
test
sbb
(bad)
mov
dec
sar
ins
(bad)
adc
jno
neg
add
push
out
push
js
outs
mov
jge
dec
mov
jne
xor
jp
add
adc
jg
xlat
xlat
sbb
fistp
jnp
inc
fld
pop
pop
mov
loope
sbb
cmp
jmp
js
ror
xor
sbb
pop
in
xchg
jae
mov
sbb
std
push
push
inc
fs
lock
movs
or
and
xor
ror
pop
xchg
or
lds
(bad)
out
dec
jecxz
pop
add
scas
movs
loope
jno
xor
add
das
jo
fild
pop
test
cmps
inc
cmp
outs
or
adc
adc
jmp
ficom
(bad)
push
or
and
(bad)
rcl
repnz
in
dec
fiadd
xor
ja
sub
call
cmp
(bad)
mov
loop
mov
test
(bad)
rol
pop
xlat
in
fisttp
into
jmp
pop
cmps
push
out
pop
cmp
ret
pxor
and
cmp
gs
mov
mov
jg
cld
jecxz
in
sahf
sti
mov
sahf
sub
xlat
gs
leave
sub
cmps
ds
mov
addr16
xchg
scas
mov
hlt
xor
jg
mov
cmp
ds
inc
lahf
inc
out
sbb
pop
fwait
ret
sub
sub
lahf
out
mov
and
(bad)
hlt
enter
neg
dec
call
cwde
adc
sahf
push
test
iret
mov
mov
bound
sub
cwde
aad
call
aam
jmp
outs
jmp
shr
aam
ja
adc
test
xor
jb
mov
lods
jg
shl
sub
nop
dec
mov
dec
or
enter
xor
add
pop
jl
push
adc
mov
inc
jmp
sub
inc
fnsave
clc
aaa
or
jge
jbe
ins
push
cmp
pop
cdq
ja
mov
aam
push
jle
mov
mov
(bad)
popa
es
jne
enter
and
inc
inc
xchg
leave
adc
mov
jae
xchg
push
dec
cld
lds
push
push
shl
mov
mov
es
mov
out
mov
movaps
imul
sbb
mov
sbb
(bad)
sub
cs
std
fwait
xchg
jbe
std
inc
ret
mov
fwait
xchg
jg
xchg
and
ja
imul
int3
leave
cmc
xchg
pushf
lahf
cwde
in
ss
add
cs
inc
cs
lds
fisubr
clc
or
jb
test
cwde
adc
fst
jg
fistp
cdq
imul
jp
fs
outs
clc
xor
call
mov
lods
int
inc
call
or
inc
jmp
jo
dec
stos
inc
int
(bad)
xlat
call
daa
stos
or
ret
adc
cmp
cmc
mov
sbb
fisubr
jle
jmp
add
mov
mov
add
fadd
lahf
mov
xor
les
ror
xchg
pop
pop
inc
jmp
jle
fldcw
adc
jecxz
cmp
dec
mov
mov
popa
pop
(bad)
aas
dec
jge
sub
mov
cmp
ja
xchg
pop
dec
jb
inc
out
hlt
mov
ja
cwde
leave
sti
jb
fcom
cld
fidiv
out
fxch
cmp
mov
lahf
outs
mov
icebp
or
pushf
repnz
stc
icebp
loop
aad
jp
int3
mov
cmp
imul
xor
sti
mov
pop
cmps
(bad)
out
inc
pushf
dec
mov
popa
add
add
add
cmp
and
mov
jle
dec
aas
mov
(bad)
into
cld
mov
dec
les
les
mov
(bad)
fs
add
pop
movs
leave
lods
add
xchg
std
jno
jge
out
rol
dec
or
xchg
(bad)
ror
outs
push
test
or
inc
sub
data16
cmp
into
shr
inc
dec
sub
mov
retf
sub
loop
je
sbb
dec
sub
test
sub
test
movs
sub
leave
sbb
jg
ror
nop
sbb
jle
(bad)
mov
popf
loopne
adc
dec
pop
loope
mov
mov
inc
xchg
xor
in
pushf
mov
sub
scas
push
xchg
mov
push
enter
and
and
push
daa
(bad)
fwait
dec
loope
inc
scas
push
int3
add
pop
js
sti
sbb
mov
cmps
xchg
xor
scas
inc
leave
sar
mov
ins
ins
inc
jecxz
pusha
sbb
pop
stc
cld
xchg
ja
adc
pop
lea
add
mov
test
xchg
xchg
call
dec
call
add
xchg
mov
rcl
hlt
data16
aam
adc
and
xor
adc
fidiv
add
je
mov
xor
pop
fs
or
std
and
sbb
cmps
add
xchg
sbb
jns
rcr
cld
icebp
mov
in
cmps
lock
mov
fidiv
adc
and
inc
pusha
test
pop
push
in
add
fdivr
shl
pop
xor
icebp
pop
out
call
xor
repnz
and
test
je
and
jge
mov
add
std
hlt
mov
jbe
ffree
cmp
ds
push
rep
stos
jo
or
mov
xchg
mov
and
or
in
mov
mov
mov
fld
retf
jns
(bad)
stos
sti
add
pop
mov
movs
dec
add
adc
fsub
outs
retf
push
retf
jmp
add
mov
neg
aad
repnz
adc
add
xor
fimul
les
adc
mov
into
out
sub
xchg
aam
sbb
stc
mov
pop
js
fstp
shr
mov
ficom
bound
cmp
rcr
mov
(bad)
in
add
mov
lods
jnp
adc
aaa
sbb
lods
jnp
push
xchg
add
into
mov
fs
leave
push
mov
push
or
into
mov
dec
out
(bad)
retf
out
addr16
mov
pop
leave
xor
sub
clc
imul
loope
mov
inc
imul
push
je
js
add
add
push
jbe
ins
ret
int
pop
(bad)
mov
add
xchg
sub
icebp
add
fadd
clc
mov
mov
mov
inc
xor
push
sti
call
stos
or
jns
pop
inc
inc
int3
cmp
sub
repnz
push
pushf
xchg
and
adc
mov
int3
fcomp
pop
mov
lods
rcr
ds
mov
push
ins
add
pop
push
sbb
xchg
ficom
cmps
ret
scas
and
mov
jp
sbb
popa
mov
std
push
jnp
mov
arpl
jle
icebp
cs
jle
ds
inc
in
cmp
dec
iret
adc
int
aad
and
js
fld
and
mov
xlat
repz
xor
iret
jns
imul
mov
sbb
inc
icebp
cmps
add
mov
xor
jb
clc
pop
stc
inc
iret
repnz
xchg
outs
fimul
dec
add
push
sbb
mov
jl
cmp
rcr
mov
and
mov
jnp
xor
mov
sub
cmp
repnz
push
call
push
jmp
jl
inc
in
adc
mov
scas
clc
or
js
xor
out
inc
ror
inc
ret
hlt
pop
aaa
inc
hlt
and
mov
add
retf
inc
jnp
push
rol
retf
js
mov
inc
pop
push
add
(bad)
(bad)
xor
push
cmp
push
dec
pop
std
sub
or
cmps
mov
into
stos
shl
mov
jl
xchg
and
mov
cli
in
test
jge
adc
sbb
aas
push
pop
sti
repz
loope
mov
test
sbb
jns
jecxz
dec
loopne
xchg
or
call
(bad)
loopne
sub
xchg
sub
cwde
fistp
(bad)
imul
das
inc
rcr
add
ds
mov
jnp
jl
test
arpl
adc
cmp
cmp
in
add
outs
add
ret
push
cmp
jnp
test
popa
mov
mov
adc
aam
daa
push
add
js
or
hlt
shl
dec
add
pusha
sbb
sub
mov
dec
pop
sahf
cs
lea
ins
jmp
mov
dec
popf
mov
test
jno
jg
in
ret
fwait
lods
scas
lea
sbb
sbb
cmp
add
fs
repz
fdiv
(bad)
and
jo
(bad)
rcr
push
pop
pusha
ret
sbb
ficom
aaa
js
cmp
mov
jp
mov
sti
lods
neg
or
xor
mov
push
sbb
adc
pop
fsub
mov
adc
cdq
clc
mov
mov
jmp
addr16
dec
sbb
add
cmp
in
std
(bad)
sbb
dec
jmp
xchg
outs
dec
and
repz
mov
retf
ja
pop
out
xchg
xlat
push
mov
jg
sbb
shr
or
mul
les
out
pop
test
outs
enter
fistp
outs
in
pop
mov
dec
bound
retf
test
inc
push
retf
mov
out
fisubr
pop
pop
push
test
mov
inc
and
cmp
mov
clc
je
sub
aas
sbb
fbstp
xchg
or
xor
ss
in
repz
jl
xchg
add
pusha
push
push
jecxz
call
adc
aam
in
inc
cmovbe
dec
and
adc
scas
jmp
in
mov
mov
add
pop
inc
adc
cmp
shl
stc
mov
xor
dec
sub
inc
sub
cdq
xlat
and
cli
ins
mov
ds
add
enter
not
mov
xchg
cmp
sub
lock
mov
adc
push
out
pop
fistp
aad
mov
movs
mov
dec
outs
or
rol
cmps
ret
sub
lea
mov
xlat
sbb
lods
jmp
out
ins
out
(bad)
jp
fst
fwait
mov
add
scas
jp
mov
cmc
mov
cdq
cli
jne
stos
or
mov
adc
movs
or
adc
and
pop
pop
cmc
lea
ds
inc
mov
rol
popa
outs
in
std
jne
shl
in
add
sbb
fsub
vpshufd
stos
movs
inc
push
push
cmp
in
ins
push
mov
stos
ds
dec
aaa
cs
fbld
xchg
dec
(bad)
pop
(bad)
jae
sbb
hlt
mov
jg
in
mov
push
je
or
outs
cmp
lods
inc
jae
stos
add
fsubr
xor
mov
pop
mov
test
xchg
out
dec
inc
paddsw
add
sbb
fsubr
push
dec
icebp
ja
fwait
sbb
mov
ds
fdivr
ret
es
in
fsub
sub
mov
xor
adc
pop
popa
push
movs
inc
mov
push
dec
cwde
mov
fistp
in
mov
add
faddp
stos
je
iret
out
mov
in
lods
adc
or
xchg
mov
add
test
dec
cmp
icebp
jne
mov
pop
rcr
inc
in
daa
dec
pop
jp
xor
movs
mov
test
aam
and
scas
out
(bad)
or
(bad)
push
pop
popf
(bad)
jl
data16
jp
xlat
pop
mov
imul
push
or
les
sub
test
arpl
and
mov
or
mov
and
out
mov
out
lahf
xchg
jge
xor
fs
cmp
stos
repnz
pcmpeqd
scas
dec
jmp
mov
cdq
aad
out
xchg
cmps
push
mov
or
mov
add
loop
sti
cmp
mov
dec
xchg
sub
xor
xchg
out
mov
jbe
add
mov
sub
lock
pop
pop
(bad)
loope
mov
sbb
or
pop
mov
sub
sub
mov
xchg
add
jecxz
into
add
in
lods
gs
das
dec
and
das
(bad)
cmp
adc
nop
shr
cdq
ret
sbb
pusha
leave
mov
popf
call
push
pop
inc
js
xor
xchg
std
enter
sub
ret
out
arpl
and
scas
and
cmp
cmps
mov
sub
xchg
mov
xlat
mov
jno
in
sbb
adc
fwait
sbb
stos
fst
xchg
cmp
(bad)
lods
mov
inc
mov
mov
cli
and
add
clc
repnz
add
pop
cdq
scas
pop
mov
outs
pop
(bad)
out
sahf
dec
jne
sub
xchg
frstor
sbb
fwait
and
sbb
cwde
shr
cmp
xchg
mov
and
sub
adc
jecxz
ins
mov
in
pusha
lock
push
psubusb
cld
mov
xor
mov
mov
jp
sub
jmp
clc
jae
data16
clc
add
jbe
in
test
xor
dec
cmp
mov
xchg
dec
pop
push
int3
loope
dec
fadd
xchg
je
jnp
mov
fdivr
jmp
sti
jmp
icebp
ds
or
cmp
jnp
inc
enter
int
popf
xchg
cmc
sub
cmp
pop
mov
inc
cmp
inc
sahf
pop
pop
adc
inc
popa
mov
in
aas
call
adc
aas
adc
jb
push
retf
mov
xor
fs
(bad)
mov
xor
push
std
lea
mov
adc
ret
mov
mov
test
cdq
lods
or
outs
pop
xchg
or
adc
xor
and
mov
mov
and
cli
jg
inc
mov
and
lahf
jbe
nop
mov
jle
pop
inc
pop
scas
xor
ret
mov
or
or
mov
iret
jp
inc
lods
scas
push
fwait
out
ins
adc
stos
pop
pop
rol
pop
add
(bad)
mov
jae
mov
(bad)
cdq
fisubr
mov
inc
aaa
jmp
arpl
in
push
and
jl
mov
or
add
and
sbb
cdq
arpl
movs
and
(bad)
mov
scas
stc
shr
mov
hlt
xchg
mov
jecxz
shr
aad
inc
jb
jae
mov
out
lock
mov
mov
shl
cmp
icebp
movs
inc
inc
mov
xchg
push
mov
add
xor
std
and
xchg
inc
xor
mov
adc
xor
mov
pop
rcl
std
jle
xchg
ss
dec
add
dec
sub
cmp
out
repz
aad
dec
sub
mov
loope
mov
jmp
push
pushf
mul
cmp
sub
push
jno
mov
xchg
adc
iret
mov
cdq
(bad)
jns
push
sbb
jns
dec
mov
aaa
hlt
aam
(bad)
push
mov
(bad)
cmp
jecxz
in
(bad)
sbb
test
jl
repnz
lods
sbb
push
adc
mov
rcl
(bad)
outs
retf
xchg
mov
inc
jl
je
out
mov
scas
pushf
ds
pop
xchg
push
(bad)
sbb
xor
jge
(bad)
jmp
mov
push
sub
mov
mov
dec
add
psadbw
cwde
div
cwde
mov
out
cmps
mov
sar
lods
rol
push
pop
push
jmp
movs
fild
dec
mov
imul
xchg
adc
in
cmps
jecxz
fiadd
stc
mov
mov
mov
adc
outs
cmp
sub
add
mov
push
adc
or
int3
sub
jecxz
jge
and
push
clc
jecxz
cwde
pop
jmp
fstp
test
jmp
or
sbb
out
sbb
sub
aaa
cld
fsub
aas
fcomi
adc
ins
push
sahf
repz
into
sbb
cli
jmp
mov
aaa
ror
cmp
add
or
fild
sbb
pop
cmp
ror
out
xor
gs
mov
shl
xor
sbb
sub
sub
push
inc
or
and
sbb
fidivr
and
mov
aad
scas
lds
call
icebp
call
popf
inc
jb
imul
push
or
gs
aas
int3
outs
inc
in
mov
in
ins
xor
cmp
sub
and
xchg
or
mov
mov
mov
(bad)
cmp
push
jo
sub
push
add
push
mov
shl
shl
jbe
sub
inc
clc
ret
mov
xchg
jl
ret
or
aad
icebp
sbb
jnp
idiv
sub
outs
sbb
fadd
test
addr16
dec
ret
push
xor
xchg
in
addr16
push
jmp
mov
in
mov
out
inc
xchg
push
push
mov
inc
cdq
jo
mov
stos
ror
pushf
lock
mov
and
pushf
inc
mov
sbb
icebp
dec
dec
out
or
cmp
mov
inc
outs
mov
jmp
(bad)
popa
pushf
leave
je
cmp
(bad)
mov
cmp
add
add
xlat
pop
js
sub
push
mov
adc
xor
rcl
sub
jge
sub
ficom
mov
rol
jle
mov
adc
sbb
neg
(bad)
ins
cdq
stos
push
imul
jb
sbb
leave
test
dec
daa
mov
neg
adc
(bad)
push
out
push
test
fucomip
pop
adc
inc
xor
jge
mov
leave
and
xchg
bound
fnsave
mov
retf
mov
cld
inc
xchg
pushf
push
loope
and
(bad)
xor
and
not
push
push
add
clc
adc
shl
out
shl
stc
popf
xchg
jp
loope
popf
sub
mov
lds
test
outs
add
push
push
mov
jp
push
fidiv
push
jo
std
fs
test
xor
sub
push
cs
mov
inc
ds
pop
jp
inc
gs
or
cdq
pop
(bad)
in
cmp
jle
mov
cs
leave
mov
fdiv
cmps
enter
or
push
outs
dec
add
push
and
dec
movs
in
push
mov
stos
add
fs
int3
mov
xchg
dec
sub
shl
es
mov
outs
push
out
cli
bound
out
mov
enter
ficomp
je
and
loop
sbb
dec
test
mov
push
mov
pop
dec
sar
retf
pop
(bad)
test
retf
inc
mov
ror
cmp
mul
test
or
cdq
adc
and
cmp
jne
test
xchg
das
cmp
cmp
xchg
sahf
cli
or
jb
lods
fcmovnb
std
cmp
hlt
adc
imul
jmp
sahf
pop
pop
ins
in
sbb
dec
or
mov
and
xlat
in
clc
jg
jb
vpmaxsw
cmp
out
cmp
push
add
sahf
inc
or
fnstenv
retf
inc
sub
cld
or
loop
xor
stos
jmp
push
mov
cmc
es
adc
xchg
rcl
ret
adc
sbb
pop
in
xor
ss
dec
jg
(bad)
mov
pop
scas
icebp
test
mov
sbb
mov
dec
ret
pop
outs
mov
loop
add
imul
push
fisubr
jmp
aam
push
mov
cld
sahf
rcl
pushf
inc
cs
fsubr
jmp
mov
adc
lds
add
cld
jmp
rol
mov
stos
das
rol
push
cld
xchg
xor
xchg
mov
js
pop
jg
sbb
lods
and
lds
push
int3
dec
icebp
(bad)
std
nop
xchg
dec
cmp
sub
retw
pop
add
pusha
cmps
stos
dec
nop
leave
sbb
cmp
and
hlt
or
aad
pop
cld
sbb
stc
std
lock
gs
sbb
loop
(bad)
xchg
jae
adc
ja
jns
fadd
inc
sbb
(bad)
loop
xor
add
mov
(bad)
jge
loop
push
repnz
cli
ins
push
nop
inc
dec
out
repnz
push
cmps
scas
out
sbb
sub
xchg
fadd
or
int3
and
sub
sahf
(bad)
pop
and
mov
jmp
test
inc
push
into
(bad)
or
push
jo
adc
fstp
shl
xor
mov
mov
and
jecxz
in
and
in
push
test
mov
repz
fidiv
jecxz
movs
int
pop
adc
pusha
xchg
movs
movs
adc
adc
or
jle
add
mov
into
jecxz
sti
test
ins
push
retf
outs
sar
xor
jp
jne
pop
cmp
jmp
dec
xchg
jmp
sbb
push
cmc
mov
cmovae
pop
pop
out
jbe
das
scas
fild
imul
adc
mov
imul
retf
(bad)
pop
cmp
out
enter
pop
push
lock
sbb
fisttp
fadd
mov
mov
sar
enter
jecxz
(bad)
in
imul
or
je
loop
fimul
xor
scas
add
fsubr
lahf
sbb
dec
sahf
scas
stos
inc
xchg
push
sub
test
movs
int3
cmp
mov
or
mov
dec
fisttp
sub
lock
cmp
xor
xchg
loop
jl
mov
das
jb
xor
(bad)
and
adc
push
sti
mov
mov
add
pop
mov
out
(bad)
cli
push
aad
outs
call
or
imul
add
or
fisubr
bnd
(bad)
sub
mov
jle
mov
inc
adc
mov
and
lea
fstp
aas
scas
or
sub
cld
frstor
jmp
ja
mov
mov
shl
pop
xor
aaa
(bad)
cmp
inc
ins
sti
out
mov
pop
outs
mov
mov
jmp
inc
xchg
sti
xchg
ja
arpl
iret
scas
sbb
and
gs
push
aad
out
dec
cmc
push
xor
hlt
sbb
and
push
cmps
aam
cmp
push
or
mov
adc
mov
out
xchg
xchg
adc
scas
div
jo
mov
fisubr
xor
ja
inc
mov
jnp
outs
popa
mov
mov
das
add
and
inc
(bad)
sub
rcr
in
mov
inc
cli
jo
jnp
mov
daa
jns
and
es
(bad)
push
push
pop
xchg
push
jno
scas
mov
adc
imul
lds
imul
cmp
ja
rcr
rol
sbb
sbb
or
in
fdivr
adc
or
adc
mov
ins
cmp
outs
mov
fsubr
in
mov
push
pushf
dec
dec
dec
and
mov
es
mov
push
jl
inc
dec
cld
sbb
xchg
shr
dec
ror
pusha
mov
or
ja
and
fcomip
jecxz
dec
and
adc
sti
add
jge
rcl
mov
fistp
shr
ret
(bad)
fst
dec
push
shr
aad
adc
jecxz
fimul
in
mov
jmp
xor
fisub
mov
mov
ret
inc
loope
sahf
adc
dec
dec
cmp
lahf
mov
test
dec
sahf
fs
test
shr
mov
fwait
xchg
int
cmp
bound
fcom
rol
xchg
outs
cs
add
scas
mov
push
xchg
mov
stos
or
dec
and
mov
int3
std
sub
or
mov
inc
dec
add
mov
mov
ret
in
push
inc
lahf
push
push
test
test
not
and
int3
aaa
push
dec
jne
mov
inc
mov
mov
fld
add
mov
sbb
sahf
fsubp
inc
mov
in
cmps
xchg
fdivr
and
lds
shr
xor
inc
jge
pop
xchg
push
fisubr
and
int3
fsubrp
jle
pop
popa
push
sub
mov
dec
fdiv
(bad)
xchg
je
retf
aam
jmp
dec
sbb
add
shr
popa
or
mov
imul
xchg
dec
xor
jg
xor
(bad)
les
repz
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
shl
adc
fisttp
fiadd
in
inc
pop
ins
lods
add
mov
inc
mov
push
sar
pop
loopne
pop
ret
and
xlat
add
xbegin
sahf
mov
jne
cmps
leave
jae
jmp
rcr
and
test
mov
push
test
out
jl
mov
dec
push
mov
add
cli
lea
shr
or
scas
sub
add
jmp
shl
int
int3
cdq
scas
xchg
jp
mov
fisttp
pusha
je
lahf
dec
dec
out
ret
movs
int
fmul
xor
push
rol
(bad)
mov
adc
mov
ds
xor
push
xchg
mov
lock
mov
imul
out
sub
mov
mov
lea
jb
stos
ficom
dec
popa
popf
xchg
push
cmp
jne
popa
push
and
jb
inc
movhps
jo
lock
push
fwait
jne
xchg
mov
push
jl
fs
dec
lods
sbb
loope
ins
mov
leavew
(bad)
mov
shl
shl
jbe
push
push
fstp
icebp
and
mov
inc
fistp
and
sub
pop
push
and
mov
push
loop
xchg
sbb
mov
lods
and
jg
cmp
loope
ins
add
xchg
sbb
push
ins
pop
sub
xor
retf
fwait
push
xchg
test
pushf
ds
les
cwde
jmp
arpl
adc
jle
dec
lahf
sub
add
or
adc
or
fldcw
sub
cs
jno
pop
jnp
jo
jg
pop
(bad)
sub
imul
xchg
(bad)
(bad)
es
sahf
pop
aaa
lea
ss
dec
retf
jle
pop
and
xchg
ret
das
(bad)
data16
jg
retf
dec
and
jmp
add
es
xor
push
xchg
loope
popf
mov
test
ds
pop
call
inc
jmp
xor
es
mov
in
xchg
fwait
pusha
dec
add
(bad)
xchg
addr16
adc
pop
and
les
mov
dec
cmp
pusha
mov
popf
lods
push
xchg
sar
pop
lea
out
cdq
out
aaa
jnp
add
test
sub
add
pusha
cvtpi2ps
mul
addr16
les
push
inc
pop
xchg
lock
mov
dec
retf
test
adc
loopne
popf
add
mov
movs
or
mov
mov
es
sub
ret
jo
xchg
add
ror
pop
sbb
xlat
cs
(bad)
fistp
or
dec
into
outs
das
ds
(bad)
ja
dec
xchg
bound
fisubr
or
js
mov
sub
add
in
aaa
ds
gs
push
loopne
cmps
int
call
lahf
test
movs
pop
mov
or
shr
pushf
ja
inc
cs
loope
pop
out
sti
in
dec
pop
xchg
jbe
mov
outs
(bad)
mov
jbe
test
in
fwait
xor
sbb
(bad)
cmc
and
xor
pop
push
(bad)
cmp
fwait
aas
mov
jbe
dec
das
and
xor
or
pusha
js
leave
lods
shl
inc
xchg
lock
add
out
sub
in
les
in
add
sub
push
(bad)
sub
and
imul
mov
push
(bad)
bound
mov
lahf
in
loopne
jbe
pop
addr16
push
pop
std
cli
inc
ror
gs
(bad)
stos
test
mov
dec
pop
push
int
test
mov
cli
ret
xchg
loop
add
in
or
mov
xchg
dec
push
pushf
outs
shr
sbb
pop
into
mov
cwde
push
pop
(bad)
aad
ins
pop
pusha
test
inc
out
rcl
stc
out
or
xchg
push
movs
xchg
cmp
sub
mov
inc
aam
pop
lahf
sub
call
jmp
and
and
fucomp
xor
aad
add
lea
loopne
call
lea
push
daa
mov
jae
sub
daa
adc
cs
jo
dec
hlt
test
lds
(bad)
call
push
addr16
lock
and
pop
cmps
das
repz
pop
jmp
mov
(bad)
jnp
scas
jne
dec
fcom
repnz
xor
inc
or
mov
ja
pop
movs
cmc
es
cmps
loopne
lock
(bad)
push
clc
dec
mov
jg
jne
div
mov
(bad)
lods
jle
push
rcr
fwait
add
or
popa
cmp
test
out
ds
pop
xor
adc
push
dec
add
aaa
stc
sub
mov
sbb
out
mov
xchg
dec
dec
outs
cmps
adc
push
mov
pop
test
sahf
lods
xchg
xchg
ficomp
push
xor
cwde
lea
pusha
scas
bound
add
imul
inc
les
aaa
shl
add
cmp
pop
inc
dec
push
mov
cmps
mov
stos
imul
rcl
dec
idiv
test
push
scas
addr16
div
sub
loopne
mov
jmp
test
xchg
xchg
test
sbb
setle
bound
pop
loop
aam
out
out
dec
xchg
(bad)
cmp
cmp
adc
jmp
pop
jge
lds
(bad)
mov
call
sbb
push
retf
add
mov
pop
mov
repnz
jg
movs
push
leave
fisub
xor
xor
(bad)
jno
mov
inc
or
adc
pop
and
dec
and
rcl
jge
adc
sbb
add
pop
inc
sar
inc
fwait
mov
add
jmp
mov
push
loopne
or
arpl
stos
bound
push
xor
inc
mov
call
inc
test
pop
aad
adc
xor
add
mov
pop
push
mov
and
fmul
leave
ja
push
pop
enter
or
popa
in
pop
push
mov
mov
xchg
lahf
call
mov
fisubr
retf
cmp
add
push
push
iret
gs
sar
fld
cli
adc
mov
loope
sbb
jle
or
mov
and
inc
mov
add
fld
xlat
cmp
jno
inc
mov
pop
ror
cmc
sub
adc
xor
in
loop
stc
out
adc
or
jno
pop
dec
mov
dec
push
sub
sti
pop
(bad)
push
and
inc
cmps
(bad)
fist
cmp
(bad)
aaa
and
adc
mov
add
(bad)
pop
adc
cmp
aad
mov
leave
push
inc
(bad)
push
ds
bound
sub
movs
fs
dec
sbb
fisubr
mov
cmps
test
xchg
pushf
fistp
sti
xchg
adc
pop
mov
mov
subps
rcl
cmc
clc
cmp
inc
sbb
sub
call
inc
xchg
push
scas
sbb
leave
cli
dec
shr
dec
or
dec
(bad)
repnz
pop
mov
clc
cmp
ins
in
and
loope
xchg
mov
sar
popa
int3
xchg
pop
jecxz
mov
xchg
xchg
shl
cmp
movs
add
lods
adc
pop
std
out
jmp
daa
lahf
push
add
and
cmp
out
pop
nop
mov
jecxz
adc
adc
(bad)
and
xor
cmp
out
mov
jae
xchg
mov
add
adc
dec
dec
dec
xchg
sub
jne
test
outs
push
add
je
test
mov
jo
xchg
pop
mov
fdivr
adc
dec
retf
fisub
fst
ret
loop
ud2
movs
push
add
mov
cli
loop
mov
cld
mov
aas
jl
add
xlat
cmp
cmc
stos
mov
cmps
xor
jle
jne
mov
test
inc
add
push
xchg
fadd
lea
and
cmps
lds
xor
arpl
jmp
scas
mov
adc
clc
mov
or
scas
and
iret
xchg
leave
xor
retf
sub
inc
sbb
sbb
test
cmp
dec
repnz
mov
(bad)
adc
inc
and
addr16
mov
int
cmps
add
cmp
xlat
xchg
test
stos
jno
mov
loope
or
xchg
sub
pop
ss
shl
leave
sbb
push
in
xor
(bad)
fild
xchg
gs
xchg
cmp
out
push
add
jo
sub
cmp
cmp
mov
(bad)
mov
pusha
dec
imul
arpl
jae
popf
test
add
pop
popf
lods
pop
loopne
push
cmp
mov
mov
into
adc
mov
mov
and
pop
hlt
stos
mov
jmp
xor
inc
cld
sub
lock
(bad)
jne
inc
and
sbb
mov
daa
pop
mov
fucomip
mov
mov
sbb
cmp
mov
mov
ds
push
lea
or
imul
lods
cmps
dec
std
(bad)
enter
jns
rol
scas
movs
sar
dec
cmp
imul
ds
ret
fild
dec
dec
popa
in
xchg
imul
gs
call
mov
aaa
pop
push
sub
vmovntdqa
test
sar
xchg
dec
in
rol
test
and
and
jmp
or
xor
lods
mov
addr16
push
shr
dec
cmp
sub
jp
push
mov
arpl
js
jnp
pop
xacquire
mov
enter
xchg
out
adc
mov
push
jg
add
sub
sahf
nop
sti
cmp
stc
and
neg
dec
xor
jae
add
xor
mov
inc
cmp
aas
out
jo
mov
dec
adc
inc
loopne
inc
data16
sub
cmp
dec
cmp
jg
ins
dec
jno
sub
jmp
add
sub
xor
push
scas
and
cli
add
mov
push
mov
sub
pop
mov
sti
outs
mov
pop
popf
adc
push
(bad)
clc
sahf
jl
mov
mov
cmp
enter
repnz
popa
jge
aas
inc
int
jle
pop
fbld
add
loop
sub
xchg
les
xor
daa
pushf
pop
push
adc
call
cli
ja
fcom
cld
fbld
and
movs
outs
cmps
aas
jge
push
int3
xchg
adc
push
inc
sub
push
adc
jp
dec
sbb
mov
push
mov
mov
mov
gs
push
dec
mov
push
(bad)
cli
das
push
lods
loope
mov
aad
(bad)
rcr
arpl
loope
sahf
pushf
dec
mov
fist
jp
nop
jbe
sub
fcmove
dec
sbb
or
mov
cmps
pushf
std
and
(bad)
add
cld
dec
xor
repz
xor
inc
sub
mov
lds
mov
movs
dec
xchg
mov
inc
inc
mov
or
mov
lods
or
push
sbb
pusha
mov
int3
pop
sbb
daa
mov
adc
loop
add
int
mul
mov
ret
sub
xor
jae
scas
sbb
ins
dec
xchg
outs
int
fstp
add
dec
ficom
imul
fwait
mov
dec
jbe
shl
mov
loope
ror
clc
call
fistp
loop
push
lea
pop
lahf
xor
loopne
jecxz
ret
out
into
dec
fisubr
dec
xchg
sbb
xchg
add
test
jmp
mov
jne
mov
inc
pushf
inc
lock
dec
nop
adc
cwde
enter
inc
add
movs
and
pop
pop
lods
in
pop
xchg
seta
add
hlt
sub
ret
aam
add
lds
mov
pop
push
inc
mov
popa
xor
(bad)
jle
rcr
(bad)
ret
sub
mov
pop
rcr
shr
ds
out
cmp
mov
push
push
ins
into
cmps
fs
out
je
jns
sbb
popf
into
cmp
mov
cmps
fst
gs
mov
mov
(bad)
test
pop
pop
pop
push
push
hlt
xor
cmp
nop
(bad)
outs
sub
stc
jl
in
cmp
mov
or
popa
mov
and
or
jge
movs
and
mov
movs
call
cmp
sar
push
push
imul
xor
inc
dec
sub
push
jp
jmp
shr
mov
and
cld
cmps
ss
cs
addr16
sub
jne
inc
daa
repz
inc
loope
sub
in
retf
out
ins
mov
adc
outs
movs
xor
lock
cmp
and
or
call
jae
arpl
push
push
or
add
cmp
mov
out
inc
fdivr
aam
push
test
in
add
stc
outs
mov
lods
adc
cdq
jmp
mov
xchg
pop
push
scas
inc
into
stc
hlt
inc
call
pop
pop
mov
sbb
mov
sub
stos
ucomiss
mov
stos
inc
jmp
jl
jg
lahf
in
jecxz
push
jl
in
outs
sbb
mov
nop
jno
xchg
mov
call
add
dec
push
xor
mov
pushf
sub
jbe
js
push
xchg
mov
mov
(bad)
jo
lods
and
rcl
ficom
scas
or
clc
dec
movs
movs
fxch
sub
imul
aam
add
lods
cmps
pop
test
push
push
aas
push
mov
lods
and
adc
xor
dec
bound
jo
stos
(bad)
cmp
jne
js
shl
inc
fidivr
add
xor
pop
mov
outs
cmp
call
sub
iret
dec
not
add
rcl
shr
inc
fnstsw
outs
addr16
sub
popf
popa
loop
and
int3
adc
data16
mov
popa
jae
cdq
sbb
data16
sbb
aaa
adc
shl
mov
dec
dec
lds
xchg
adc
jno
iret
push
bound
dec
cdq
xchg
jg
fidivr
lods
call
jle
xor
ror
dec
test
xor
mov
outs
dec
mov
sbb
scas
je
xchg
mov
(bad)
pop
into
lock
imul
or
cli
adc
mov
in
cmps
sbb
push
add
xor
das
pop
in
mov
or
aaa
ret
pop
sbb
rol
xchg
mov
push
pop
jecxz
pop
mov
mov
sub
jae
sub
call
daa
fcom
iret
ins
fstp
push
cli
adc
and
imul
cmp
mov
mov
jl
sbb
adc
mov
jmp
leave
push
jle
inc
adc
jp
dec
(bad)
pop
push
xor
movs
pop
adc
push
out
or
les
cwde
cmp
ins
adc
push
pop
pusha
xchg
or
bound
pushf
or
hlt
(bad)
cmp
inc
lods
cmps
lock
sbb
test
jns
xor
dec
pusha
xchg
sbb
jmp
adc
cwde
lods
jmp
ins
sbb
xchg
dec
popa
fld
mov
int3
test
pushf
add
xchg
mov
arpl
and
sbb
mov
(bad)
lock
xchg
inc
(bad)
lahf
mov
jp
aad
int3
cli
test
mov
hlt
xchg
or
adc
jge
movs
in
outs
dec
repz
sub
mov
shl
jle
xor
mov
mov
das
out
inc
or
daa
dec
push
pop
pop
cdq
or
lahf
cmp
xchg
pop
pop
jecxz
cmp
adc
or
jmp
fwait
cmp
test
int
loope
mov
mov
xchg
fidivr
adc
ret
push
movs
and
cmp
or
scas
push
movs
lods
xchg
not
sub
xor
ins
inc
je
cmp
(bad)
sub
leave
cmp
shl
adc
push
pop
mov
sub
add
(bad)
pop
xchg
idiv
rcr
mov
sbb
dec
cmps
aaa
fsubr
add
adc
xchg
sbb
mov
and
ficomp
push
pop
cmp
fwait
mov
cmps
dec
stc
div
mov
add
hlt
dec
out
jp
mov
cmps
(bad)
rcl
xchg
and
in
inc
sar
aaa
cmp
ret
cmps
es
xchg
in
scas
fmul
dec
sti
out
adc
sub
js
lock
cmp
jecxz
ss
adc
cmp
xlat
mov
mov
dec
pop
mov
in
adc
imul
popf
fist
inc
stos
mov
push
sbb
shl
sahf
les
inc
and
mov
pop
mov
mov
loope
push
jle
mov
lahf
sub
mov
sbb
test
pop
mov
inc
dec
inc
mov
dec
(bad)
mov
and
cmps
fisubr
mov
sbb
sbb
sub
repnz
stc
inc
add
push
scas
cmps
jle
inc
inc
ds
jnp
aad
and
js
out
push
adc
pop
mov
rol
xchg
(bad)
and
push
shl
cld
in
rol
xchg
rcr
sub
and
push
or
add
out
xchg
in
arpl
and
stc
ret
pop
sub
scas
into
clc
dec
xchg
stos
call
pop
sahf
adc
xor
lahf
or
xor
test
rol
xlat
sub
das
out
push
mov
popa
mov
iret
pop
and
gs
inc
and
mov
mov
(bad)
mov
xchg
rcr
inc
jae
mov
scas
mov
push
pop
clc
aaa
cmp
outs
pop
shl
mov
sub
and
or
lock
loope
rcr
scas
sbb
mov
add
out
and
jae
mov
sub
repz
iret
xor
cmp
xchg
fwait
arpl
or
jae
ja
jecxz
pushf
or
out
ins
cld
jmp
imul
mov
sbb
push
ror
cmp
and
inc
dec
sub
nop
push
or
pop
test
cdq
sub
es
(bad)
data16
leave
int
int
adc
scas
mov
and
cmc
dec
retf
mov
jg
xor
mov
add
sahf
push
fwait
push
arpl
mov
add
dec
addr16
pop
mov
jge
adc
ror
jns
jle
xor
and
sbb
adc
call
jg
(bad)
int
jmp
loop
and
aas
or
mov
sub
std
mov
lahf
add
lods
mov
adc
push
data16
stos
mov
dec
dec
pop
pop
call
sbb
mov
and
movntq
or
cmps
xor
cmps
cmp
loop
pop
push
fisub
lods
push
sub
fild
dec
int
mov
lock
jl
int
fnsave
movs
ins
dec
jns
icebp
in
jl
(bad)
ds
hlt
in
jne
jno
fistp
in
iret
test
jae
test
mov
and
mul
call
sar
daa
ins
sbb
xor
jb
cld
dec
push
xchg
xchg
mov
popa
mov
add
pop
cmp
ja
stos
loopne
stc
mov
sbb
outs
jo
js
push
pusha
js
dec
or
aas
in
mov
popa
leave
ret
dec
or
pop
fild
xchg
or
sar
xchg
mov
cmps
cmp
repnz
fcmovu
jno
je
sbb
jecxz
or
mov
cmp
push
cmp
sbb
cmp
outs
neg
add
pop
and
cld
push
and
inc
or
sbb
push
mov
fisubr
mov
push
imul
data16
fs
pop
or
mov
dec
mov
(bad)
loope
xchg
jo
js
and
mov
mov
fstp
pop
mov
movs
fwait
shl
js
sub
lahf
xor
ror
sbb
neg
mov
call
loopne
div
loope
fiadd
scas
std
push
inc
lea
xchg
aam
mov
bound
sub
ror
or
add
dec
sub
jmp
repnz
jl
dec
add
imul
mov
mov
dec
aam
and
(bad)
jmp
or
jnp
sub
out
fadd
ja
lea
xor
mov
mov
pushf
mov
pop
pop
cmc
bound
mov
lds
popa
cmps
cmp
ror
scas
lds
jl
test
mov
hlt
sti
js
sar
ins
mov
or
(bad)
iret
and
or
mov
movs
xor
out
sti
std
stos
(bad)
xchg
int
jbe
cmps
fs
daa
xor
imul
into
jno
imul
pop
lods
pop
rol
xchg
pop
sti
pop
leave
add
daa
loope
jbe
int
(bad)
outs
dec
push
dec
in
jmp
xor
mov
loope
mov
xchg
lock
inc
mov
cld
pop
mov
mov
mov
ds
xchg
rol
pop
mov
fist
scas
ror
in
push
(bad)
jnp
and
lock
sar
push
or
retf
(bad)
cmp
push
mov
xchg
(bad)
mov
out
in
mov
int
dec
sbb
sub
mov
(bad)
ret
aas
retf
shl
ret
lock
push
xor
aaa
ins
femms
jno
popa
mov
dec
cld
daa
inc
cdq
lds
jg
inc
push
xchg
icebp
ss
nop
xchg
mov
dec
ins
inc
push
or
lock
jle
lahf
test
pusha
pop
or
mov
adc
ins
in
shr
or
test
imul
enter
push
sti
jbe
pop
jno
pop
jp
push
sub
test
xchg
dec
cwde
mov
cld
pusha
xor
push
inc
icebp
push
fist
aaa
fsub
cs
pop
dec
mov
movs
xchg
mov
pop
retf
inc
sub
dec
push
jl
mov
fidivr
lds
out
(bad)
das
(bad)
xor
sub
sub
cmp
mov
jge
dec
adc
rol
push
fwait
cs
push
mov
fwait
mov
xor
push
ja
retf
loop
push
jecxz
leave
add
jb
mov
mov
dec
jecxz
sahf
sub
adc
aad
leave
ret
push
fbld
scas
jle
xor
cmps
imul
mov
(bad)
jmp
loop
cwde
hlt
xlat
(bad)
pop
std
adc
sbb
push
pop
push
or
push
cwde
jo
or
mov
es
mov
adc
or
pxor
sti
adc
(bad)
mov
stos
or
test
psubq
jmp
lahf
dec
jp
pop
into
out
aaa
pop
sub
and
push
mov
call
xchg
xor
ret
push
sahf
inc
xchg
sbb
cwde
add
sub
dec
mov
xor
push
(bad)
scas
jg
cli
das
movs
xchg
adc
and
adc
cli
test
pushf
sti
add
fs
fiadd
cli
push
aaa
jle
ins
jmp
outs
ret
movs
jmp
mov
in
popf
inc
imul
pop
sub
pop
mov
adc
mov
dec
mov
out
stos
repz
xor
and
retf
pop
jnp
or
jmp
loope
aam
cmp
mov
imul
pop
xor
xor
mov
cmp
outs
mov
fisub
in
cmp
lea
lods
sub
jno
inc
daa
mov
ins
xor
mov
dec
jmp
mov
in
fsubr
add
hlt
and
jmp
out
fcom
xchg
push
in
mov
mov
add
test
dec
(bad)
out
xchg
mov
dec
fdiv
xchg
cmc
dec
mov
inc
jmp
(bad)
push
xchg
and
sahf
imul
sub
mov
popf
lock
sar
leave
in
scas
jg
xchg
xchg
mov
pop
sub
popa
and
inc
dec
xor
lock
clc
outs
inc
xchg
sub
sbb
pop
mov
je
xchg
xor
sbb
std
sbb
shl
and
adc
jb
jo
jb
add
shr
cmp
test
(bad)
lods
xor
(bad)
sub
inc
retf
xchg
movs
jl
xchg
jmp
ins
mov
sub
out
add
fs
xchg
pop
lock
mov
mov
add
push
mov
xor
shr
bound
inc
xor
cmp
inc
mov
inc
(bad)
dec
add
or
inc
sub
adc
push
loopne
push
sbb
arpl
pop
pop
retf
leave
jp
xor
aad
fsubr
std
test
mov
(bad)
ss
jb
imul
mul
ss
cmp
add
mov
adc
mov
inc
sbb
or
xchg
jne
aaa
jmp
pop
jle
ficom
ds
aaa
hlt
test
pop
(bad)
icebp
mov
and
and
cdq
cmp
std
dec
imul
push
ins
xor
mov
sub
out
xchg
imul
xor
call
ret
aaa
pop
addr16
lock
stos
test
mov
jp
rcl
popf
push
mov
mov
jmp
ret
leave
in
push
pop
cmp
fsub
mov
fnstsw
mov
fimul
shl
dec
and
(bad)
cmp
or
cmp
add
adc
jb
(bad)
inc
dec
mov
cmp
xchg
push
and
mov
pop
outs
sub
enter
pop
xor
in
and
xchg
add
std
dec
inc
mov
xor
call
inc
dec
int3
hlt
cdq
pop
ins
adc
arpl
retf
fadd
push
mov
adc
dec
ins
cmp
cmp
adc
jl
jmp
and
xor
stc
mov
js
ret
inc
cmp
jno
int
mov
xchg
jne
sbb
daa
mov
dec
dec
push
adc
std
and
in
lods
jns
sbb
fwait
xor
iret
cmp
sbb
jl
xor
pop
fsub
sar
outs
retf
fwait
inc
nop
inc
sbb
mov
out
add
mov
mov
rcr
sub
mov
jns
movs
retf
jns
mov
(bad)
jecxz
sub
loop
loope
jb
fmul
nop
mov
jno
inc
loope
push
cli
dec
push
and
cmp
inc
bound
sti
imul
dec
pop
aaa
stos
out
sub
fidiv
push
call
xchg
movs
les
icebp
leave
xchg
movs
or
xor
jbe
jl
or
ret
(bad)
cdq
(bad)
div
imul
or
dec
dec
sahf
mov
or
(bad)
lds
add
xor
and
or
rcr
aas
xor
int
mov
pop
shl
ins
mov
sbb
fsubr
adc
mov
jmp
pop
adc
pop
fidivr
sti
push
and
or
out
and
int
das
ret
lds
aad
retf
imul
std
(bad)
(bad)
sbb
fcomp
cmps
jge
int3
and
das
adc
inc
mov
neg
stc
mov
arpl
add
lods
in
dec
nop
cmps
mov
mov
push
test
in
dec
pusha
int3
fisub
int
push
aam
xor
bound
mov
xor
std
pusha
add
int
mov
or
dec
mov
cmp
pop
(bad)
jno
into
mov
call
or
out
jb
mov
nop
cmp
xor
loopne
adc
popa
fldenv
iret
xchg
push
std
push
inc
or
jmp
fldcw
jp
lds
lods
mov
xchg
std
xlat
sub
mov
imul
div
mov
xor
dec
mov
clc
cmps
inc
xor
sub
dec
ds
adc
and
pop
jmp
push
cmc
or
hlt
(bad)
jmp
push
cmps
leave
cs
(bad)
cmp
add
cmp
icebp
ins
cmps
adc
push
mov
add
jae
movs
loopne
test
xor
mov
in
add
and
cmps
retf
sahf
dec
add
pop
mov
lahf
in
popf
sub
push
jl
mov
xor
call
pop
push
rcl
inc
sub
(bad)
mov
in
xlat
adc
xchg
sub
add
movs
mov
fldcw
test
outs
imul
shl
push
cmp
fwait
inc
sbb
out
loop
int3
test
ins
xor
inc
fisub
dec
cmp
stos
add
cmps
push
push
push
outs
jb
mov
xor
mov
fsub
mov
inc
ds
inc
mov
sbb
repz
or
fs
ror
push
mov
adc
cwde
pop
cmp
rcr
inc
(bad)
data16
mov
xor
pop
jmp
and
dec
mov
and
pop
pop
(bad)
fiadd
sbb
call
repz
out
pop
pop
out
inc
add
adc
int3
xchg
hlt
xor
outs
jl
sbb
movsx
or
iret
mov
lods
fadd
or
adc
shl
stos
div
icebp
das
loope
in
sbb
imul
cwde
xchg
sub
ja
mov
or
out
(bad)
push
clc
add
movs
cmp
out
(bad)
adc
les
xchg
jae
push
or
call
ds
and
fist
xchg
sub
not
push
cmp
cmps
adc
imul
adc
rcr
or
(bad)
and
into
sub
adc
repz
cmps
cmp
sbb
data16
mov
add
sub
in
jo
leave
popf
arpl
jle
add
bound
dec
jg
xchg
movs
mov
das
xor
mov
push
aad
xor
pop
add
xchg
fsubr
jle
movs
sub
icebp
adc
push
retf
xor
cs
lods
fnstsw
inc
in
aas
add
in
ins
mov
fsub
mov
and
(bad)
cmc
add
adc
cmp
test
daa
popf
pop
adc
loope
inc
stos
adc
dec
stos
stc
sbb
mov
cmp
xchg
pop
sbb
out
ss
mov
repnz
add
pop
or
(bad)
push
div
pushf
sar
iret
sbb
and
repnz
jnp
pop
xor
xchg
aad
test
jp
jns
xor
stos
push
mov
mov
mov
mov
xchg
xor
jo
cs
popa
test
or
sub
ret
lds
inc
cdq
jbe
shl
jbe
mov
rol
and
repnz
loop
mov
popf
or
or
jmp
ficom
add
xchg
mov
jmp
jb
not
add
fwait
jge
push
jmp
imul
fist
sub
jmp
ja
arpl
sub
stos
js
dec
pop
xor
out
stc
addr16
dec
test
pop
jl
jo
sbb
sub
jp
mov
lods
inc
mov
inc
push
test
and
scas
xchg
inc
div
dec
jns
mov
test
int
int3
imul
cmp
sbb
mov
pop
(bad)
ret
mov
stos
cmps
arpl
jns
outs
sub
or
ins
dec
in
loope
and
jbe
push
push
fist
sub
loop
mov
push
call
inc
jmp
(bad)
sub
mov
(bad)
cli
cli
add
lahf
repz
add
stos
cmp
push
sahf
inc
cmp
mov
pextrw
ds
jecxz
jmp
je
(bad)
fs
ret
adc
je
out
mov
pop
dec
jl
div
inc
aaa
(bad)
add
lods
sahf
mov
cld
test
sub
fsqrt
(bad)
clc
outs
addr16
push
add
rcl
out
out
pop
dec
jo
lock
jb
xor
or
mov
mov
mov
test
out
lahf
mov
ret
pushf
push
sbb
add
dec
push
loop
add
jmp
cmp
jecxz
dec
push
push
mov
cmps
or
shl
add
jmp
add
shl
jo
mov
(bad)
loope
add
cli
dec
pop
das
scas
scas
sub
mov
shl
push
jmp
mov
aaa
fidiv
pop
(bad)
jnp
scas
adc
leave
mov
imul
arpl
lock
and
aas
fcom
mov
cs
movs
add
call
nop
dec
jle
div
fisub
and
pop
out
push
mov
mov
imul
fs
pop
mov
lods
in
and
imul
mov
lds
push
cs
cdq
scas
push
pushf
(bad)
icebp
adc
cmp
xor
adc
pop
pop
and
add
or
pushw
mul
inc
ja
inc
inc
push
test
pop
in
inc
stos
xor
dec
sbb
in
mov
int
icebp
js
jmp
(bad)
jle
test
test
adc
dec
(bad)
mov
push
mov
sub
(bad)
cmp
int3
leave
data16
aad
add
push
mov
dec
sbb
and
ins
popf
or
ror
sbb
xor
stc
sub
movs
mov
ss
shr
jl
sub
(bad)
cld
test
test
lds
pop
int3
pop
mov
adc
add
mov
inc
jmp
lods
test
mov
sbb
mov
xor
and
sbb
adc
ds
mov
xor
shl
push
mov
mov
ffree
cmp
mov
out
push
loop
mov
(bad)
ss
dec
adc
clc
rsm
ret
mov
scas
std
pop
mov
ja
icebp
jg
iret
es
test
(bad)
enter
mov
pushf
add
and
push
jo
cmp
sbb
int3
into
dec
outs
or
sbb
rol
addr16
aam
push
es
mov
enter
xor
aaa
adc
fwait
dec
leave
lahf
(bad)
fdivr
aas
ins
push
jae
int3
enter
rcr
mov
push
call
test
mov
(bad)
adc
test
fcmovbe
mov
mov
cmp
mov
adc
or
push
repz
rol
lods
pop
pop
mov
aam
xlat
nop
pop
pop
xor
fdivr
push
sub
pop
inc
movs
jle
out
stos
mov
fld
movs
pop
out
pushfw
mov
(bad)
scas
pop
push
push
pop
pop
repz
push
adc
sbb
xor
out
adc
sub
fs
je
jbe
adc
test
mov
mov
ret
cmp
sahf
cmp
call
jns
popa
jmp
sti
(bad)
ds
xchg
test
in
sub
cmp
adc
test
and
add
sbb
add
fisubr
pop
jae
sub
cmp
add
cmp
addr16
jne
(bad)
icebp
sub
lea
repnz
xor
sahf
stos
je
std
mov
pop
mov
in
inc
int
and
sub
jmp
jmp
clc
sub
mov
mov
inc
pop
mov
ins
aam
test
push
xchg
(bad)
push
pop
push
ins
int3
cmps
mov
mov
xchg
lahf
and
adc
jnp
pop
push
mov
std
repnz
and
adc
aas
jnp
es
arpl
push
sti
rol
js
movs
pushf
shl
mov
or
jl
push
mov
(bad)
sar
mov
lods
rcr
pop
aaa
scas
xchg
stos
cmc
pop
movs
aad
clc
push
jle
jp
sub
in
js
jno
aad
xor
dec
rol
pushf
cmp
out
mov
ja
ja
jl
mov
push
push
popf
push
add
or
and
add
xor
or
xor
test
loop
mov
(bad)
cmp
push
xchg
fmul
pop
es
pop
mov
outs
test
aas
mov
mov
sbb
dec
je
mov
jbe
and
jecxz
jbe
stc
pop
push
or
inc
mov
rol
cs
pop
call
pop
jl
nop
sub
push
cmp
and
mov
add
enter
cmp
inc
jecxz
sbb
push
ror
adc
xchg
icebp
icebp
mov
sbb
call
mov
xchg
and
add
int3
jbe
sub
out
adc
cld
mov
in
mov
out
pop
adc
mov
mov
sbb
add
setno
pop
scas
dec
mov
outs
movs
xlat
mov
push
test
mov
jl
mov
sbb
pop
cmp
jbe
pop
fcmovb
aam
mov
nop
mov
in
mov
jl
mov
xchg
mov
cmp
(bad)
std
jmp
or
std
add
dec
and
in
mov
outs
push
scas
stos
hlt
cmp
jbe
test
ins
adc
in
adc
jge
inc
mov
xchg
dec
sahf
xor
jmp
mov
ins
sbb
in
dec
adc
sub
jbe
lock
imul
mov
in
adc
xchg
inc
xchg
pop
add
sub
fstp
pop
leave
mov
mov
pop
fmul
cmp
sbb
pusha
jbe
fld
mov
int
(bad)
adc
jb
hlt
in
adc
je
int3
push
out
gs
jmp
fisub
imul
push
push
std
push
sbb
movs
nop
iret
cmps
mov
test
leave
aad
ficomp
aam
sub
repnz
mov
jmp
sar
and
jo
loope
test
or
sbb
in
jle
lahf
xchg
xchg
dec
sub
mov
out
stc
div
lods
nop
sar
cmp
sbb
dec
mov
mov
push
sbb
inc
xchg
gs
push
dec
xchg
cli
push
iret
push
mov
mov
jmp
sub
call
imul
rol
(bad)
push
mov
cmps
mov
jns
jmp
dec
jle
(bad)
stc
lods
or
sub
es
jmp
xchg
lahf
jg
pop
stc
inc
dec
inc
ret
pop
sub
fld
ret
cmps
in
test
rcl
aad
jne
fst
ret
cmp
ins
or
mov
leave
add
push
div
adc
test
sub
dec
das
ja
shl
loope
fs
mov
cs
dec
jnp
aam
inc
and
popf
sub
popa
mov
jne
mov
mov
cmc
arpl
inc
sbb
sub
into
adc
inc
dec
fs
jnp
xchg
mov
pop
and
(bad)
dec
push
and
adc
xchg
vmwrite
push
mov
movs
inc
add
jmp
xchg
(bad)
pop
and
div
add
sbb
pop
sub
call
test
jle
push
lds
arpl
and
jl
and
enter
mov
xor
call
push
xor
cmp
sbb
clc
dec
jecxz
test
(bad)
xlat
iret
cld
add
dec
imul
adc
pop
sub
(bad)
rcr
ins
in
loope
fdivr
adc
push
call
icebp
pop
repz
add
(bad)
rol
ins
sbb
iret
cld
mov
ret
dec
xchg
scas
pop
test
nop
pop
jg
jne
add
int
ins
sbb
or
cwde
out
dec
cld
lods
inc
inc
(bad)
mov
aam
jbe
jne
sbb
dec
xor
sahf
out
mov
pop
enter
xchg
push
adc
add
inc
hlt
jno
dec
jno
call
test
sbb
jg
pop
jne
jnp
push
xor
mov
cdq
pop
cwde
enter
hlt
and
movs
call
outs
fs
ss
fsub
mov
inc
jecxz
and
sub
icebp
push
retf
pop
sub
cmp
ds
fstp
jecxz
mov
shl
lahf
adc
jg
aas
add
test
fidiv
pop
loopne
fmul
or
push
fldcw
retf
cmps
push
mov
mov
push
iret
pop
mov
std
jmp
cdq
enter
popf
sar
in
dec
sub
jg
jmp
jmp
inc
jecxz
in
aam
mov
dec
int3
vmread
pushf
push
jg
hlt
or
inc
clc
dec
add
cmp
(bad)
stos
inc
pop
push
inc
push
ficomp
pop
xchg
enter
scas
ret
jne
rol
adc
mov
call
or
ror
mov
mov
mov
xchg
jo
adc
gs
dec
and
push
inc
add
loopne
ins
cdq
adc
lods
jbe
aad
dec
pop
in
scas
sbb
fdivr
and
adc
cld
pop
cmp
push
inc
scas
loope
test
jmp
rcl
aaa
mov
mov
xor
and
jae
mov
dec
mov
pop
hlt
cli
aad
stos
lea
fild
xor
add
ins
aas
or
gs
cmc
(bad)
xor
push
mov
add
loopne
xor
enter
mov
push
and
xchg
mov
neg
jp
jmp
in
test
xchg
(bad)
aaa
gs
in
ficomp
inc
cdq
mov
pop
fnstcw
cmc
xchg
xchg
add
int
pop
pop
jo
xchg
stc
leave
mov
cmps
ss
cs
mov
das
mov
mov
add
ror
dec
aam
ret
pop
sti
pop
add
out
(bad)
sahf
adc
sahf
mov
and
jp
inc
inc
dec
and
es
icebp
xchg
cld
push
fmul
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
or
add
dec
add
pop
jmp
push
retf
cmps
or
xor
adc
jo
mov
adc
xchg
pop
neg
rol
je
cwde
ins
cmp
jp
dec
mov
(bad)
push
sti
sti
(bad)
jle
jecxz
push
and
retf
call
call
xor
inc
adc
hlt
xor
scas
add
out
cmc
or
cmp
(bad)
shr
add
jg
stc
xchg
push
cmp
int
and
rol
xchg
cmp
sti
mov
pop
and
pop
lods
test
pop
jmp
add
arpl
mov
push
loope
inc
sub
and
aam
loopne
hlt
jl
(bad)
(bad)
jmp
sbb
push
movs
xchg
cmps
cld
cmps
push
or
mov
mov
test
ror
scas
dec
aad
pop
mov
test
xchg
or
mov
and
mov
pop
aas
pop
pusha
mov
lods
jb
(bad)
imul
mov
sbb
js
stc
cwde
std
in
out
pop
mov
sti
fisub
aas
fadd
dec
xchg
cmc
dec
rcr
gs
add
xchg
mov
(bad)
jge
iret
dec
inc
adc
fcomp
sbb
out
loop
stc
mov
mov
sar
fisttp
lods
or
pop
outs
jmp
scas
pop
push
jnp
cmc
add
(bad)
enter
fild
xchg
jmp
lods
ins
mov
nop
dec
loope
clc
out
or
sbb
pop
fwait
test
xchg
sbb
test
in
or
gs
push
shl
sbb
sar
loop
hlt
ret
leave
pop
pushf
mov
mov
adc
sub
sti
pop
xchg
jns
push
lds
adc
xchg
inc
jecxz
imul
repnz
sar
add
test
push
mov
leave
pop
push
xchg
push
aaa
hlt
add
ret
push
das
cld
add
imul
xchg
out
cli
push
sub
call
cdq
rol
pop
ja
(bad)
inc
pop
and
jmp
ins
push
pop
bound
sub
rcr
add
stc
into
cmps
mov
push
sub
inc
arpl
xchg
ret
mov
and
in
cwde
enter
clc
(bad)
fld
inc
imul
test
sar
inc
mov
outs
into
jb
mov
sub
and
mov
ret
pop
xor
mov
xor
into
pop
ds
sub
imul
scas
js
or
xor
movs
bound
loopne
imul
repnz
mov
in
sub
stos
cmp
xor
or
xor
dec
fidivr
rol
pop
push
fsub
jae
ins
add
push
push
dec
std
in
xchg
jae
int3
xchg
sub
es
or
jbe
hlt
cmp
jbe
shr
and
jle
fcomi
xor
mov
fidiv
(bad)
out
bound
shl
pop
(bad)
mov
jns
jl
add
dec
inc
das
push
(bad)
sti
rcr
sbb
jns
(bad)
cmc
xchg
rcr
daa
ins
push
not
add
mov
add
dec
add
mov
add
adc
push
std
sub
mov
jge
xor
(bad)
sub
fnstsw
add
cmp
pop
push
lock
int3
push
inc
add
jge
or
scas
jnp
sbb
mov
and
mov
adc
jl
imul
mov
lods
test
sub
enter
call
mov
in
(bad)
and
cdq
xchg
aam
cs
hlt
and
pop
fcmovnbe
fidivr
loope
cmp
iret
fst
outs
pminub
or
mov
in
stos
pusha
daa
or
sahf
mov
mov
dec
clc
imul
int3
popa
push
xor
daa
push
sub
dec
cmp
cmp
jecxz
imul
push
adc
sub
test
dec
mov
out
sub
and
inc
adc
sub
ss
push
cmps
xchg
inc
pop
adc
and
call
mov
sahf
inc
outs
retf
inc
and
rcl
shl
lahf
dec
out
popf
movhps
xor
jmp
cmp
loop
aad
add
lods
mov
sub
ss
push
jmp
jb
int3
add
jo
(bad)
jg
outs
mov
loope
xchg
loop
ds
inc
xchg
mov
mov
pop
jbe
push
push
add
push
stos
stc
in
push
int
pop
lock
in
js
lock
or
xchg
fldenv
dec
mov
fist
rcl
ficomp
lds
cwde
ja
dec
pop
(bad)
sub
mov
lods
ins
pop
clc
rol
dec
stc
push
repnz
and
jge
in
outs
arpl
scas
cmps
jnp
repnz
sub
inc
cdq
inc
mov
xlat
jb
fldenv
adc
jnp
hlt
nop
xchg
fcom
(bad)
call
retf
jp
arpl
ds
ror
hlt
lods
push
fild
outs
cmp
popa
pop
push
pop
add
mov
cmc
and
aam
mov
sub
adc
xor
jns
fmul
ret
mov
cmps
push
scas
seta
test
mov
cmc
loopne
push
mov
push
add
jl
fisub
jne
lods
xchg
mov
(bad)
ins
xlat
cdq
jne
sbb
out
push
add
adc
mov
mov
hlt
popa
sub
shl
mov
mov
lods
push
mov
pop
xor
popf
cs
mov
cli
lahf
enter
movs
adc
mov
dec
test
idiv
pop
push
sbb
out
cwde
pop
pop
ret
xlat
in
xchg
fisubr
add
xchg
call
gs
push
(bad)
jge
add
mov
pop
pop
cmp
add
inc
mov
addr16
stos
add
movs
push
fidiv
nop
retf
es
mov
dec
mov
out
and
add
repz
xchg
(bad)
mov
test
outs
jmp
mov
push
mov
xor
into
dec
jmp
stos
mov
lods
sub
inc
inc
mov
fisttp
mov
stc
out
(bad)
aas
add
xor
jns
xchg
pop
movs
aaa
shr
movs
fbstp
mov
xchg
or
adc
cmp
movs
loope
add
sub
imul
xchg
mov
clc
inc
pop
shl
cmp
(bad)
adc
add
jnp
fdiv
ins
xor
cdq
mov
sbb
mov
jge
gs
dec
retf
jb
hlt
or
fdivrp
jne
jmp
jl
inc
into
xchg
or
daa
addr16
into
ret
ficom
pop
jg
int3
mov
pop
lahf
mov
push
or
xchg
ret
jne
jecxz
mov
rol
xchg
mov
sub
jecxz
aam
popf
mov
mov
push
sbb
retf
jae
lock
lahf
inc
cmps
nop
pop
fcomi
fist
test
jb
and
jno
repnz
pop
iret
push
jg
sub
outs
cld
inc
arpl
lods
push
adc
jp
fstp
lds
pop
xchg
xchg
sub
jb
dec
xlat
aaa
pusha
test
and
stos
inc
pop
mov
sub
aaa
add
or
mov
ins
ret
stc
jno
xor
int
mov
dec
outs
imul
mov
gs
fucomi
push
adc
mov
jne
mov
cmp
ret
dec
shr
adc
scas
or
pop
test
xchg
push
gs
in
push
mov
jne
ja
pop
imul
xor
pop
(bad)
cdq
clc
or
jo
push
ret
push
call
movs
stos
mov
adc
sub
pop
leave
sub
jne
and
ja
cmc
jo
xchg
adc
pop
jmp
icebp
ficom
ss
retf
sbb
cmp
jne
pop
jmp
xchg
ret
sub
jg
dec
repz
pop
mov
jge
sub
je
pop
int3
cld
cmp
cmp
enter
ret
jae
nop
retf
pushf
jae
push
outs
and
jle
or
ror
push
loope
fcmovb
scas
push
gs
jo
mov
or
push
mov
cmp
repnz
jge
(bad)
pop
scas
cmp
push
inc
xor
cdq
push
lds
jl
push
(bad)
lock
js
mov
ins
pop
mov
add
or
lea
ins
adc
ret
mov
lds
adc
pushf
clc
test
xchg
scas
into
mov
rcl
mov
dec
jmp
gs
mul
fcmovnu
xlat
push
fld
add
inc
push
add
js
hlt
test
test
bound
sub
iret
repz
pop
pop
push
dec
lea
jge
adc
sbb
dec
in
int3
(bad)
mov
dec
mov
mov
xor
retf
sub
jge
das
(bad)
loop
ror
(bad)
mov
push
push
push
cmp
mov
(bad)
xchg
in
mov
mov
sub
or
in
js
lods
push
inc
pushf
lods
mov
add
loopne
cmp
in
aaa
ins
aas
rcl
push
jl
push
test
inc
ja
cmp
test
jmp
push
pop
sbb
fbld
mov
jge
test
(bad)
cli
movs
cmp
(bad)
leave
push
(bad)
xchg
mov
mov
mov
lock
in
test
std
fdiv
jmp
push
out
inc
mov
jnp
jecxz
cld
arpl
test
adc
sub
icebp
mov
pop
lods
jnp
mov
inc
mov
iret
jo
xchg
mov
sete
test
movs
dec
or
jmp
push
sub
push
inc
in
mov
pushf
ret
jmp
outs
xchg
or
loope
icebp
and
aam
popf
(bad)
xchg
sub
ins
mov
pushf
sbb
lea
cld
lock
pop
in
mov
icebp
dec
xchg
or
mov
inc
arpl
mov
cmp
or
xlat
push
loopne
cli
clc
aaa
pusha
lods
mov
dec
jp
mov
xor
push
stos
ja
enter
inc
data16
cmp
inc
call
mov
clc
test
xchg
or
loopne
stos
sub
xor
jp
lods
push
jg
jb
out
repnz
addr16
cwde
aam
dec
and
shl
jle
sub
mov
mov
imul
and
imul
cmp
dec
std
mov
test
pop
leave
fwait
retf
mov
xchg
or
xchg
push
or
cmp
(bad)
(bad)
rol
cmp
mov
mov
iret
pusha
push
xchg
rol
call
add
stos
stc
mov
add
sbb
sbb
jmp
push
retf
sub
popa
ja
sub
or
and
mov
sub
or
fcom
dec
stc
jnp
pop
js
push
jl
add
adc
mov
and
xor
gs
cs
int3
ds
sahf
clc
cld
xor
fdivr
lods
xchg
jo
and
jo
mov
or
stos
mov
rcr
cmps
or
cmp
sub
cmp
ins
inc
sti
scas
int
popa
jbe
jb
sub
fs
loope
mov
sbb
in
push
je
dec
shr
pusha
loopne
mov
daa
push
mov
stos
sbb
push
addps
movs
sti
or
iret
stc
xor
lea
push
out
mov
jecxz
or
mov
loope
pop
scas
(bad)
or
loope
mov
out
fisttp
fcom
cmp
fisub
push
mov
(bad)
scas
mov
mov
mov
pop
inc
xchg
fist
and
ds
test
or
ins
out
out
call
jmp
cld
mov
cli
loopne
add
xchg
jns
push
pop
ret
cmp
jne
rcr
fcom
mov
test
cmp
push
push
repnz
fs
xchg
iret
xchg
cmp
lock
mov
mov
adc
pop
pop
pop
dec
into
add
(bad)
xchg
xchg
fst
mov
dec
sub
loop
loopne
and
push
arpl
lock
clc
lahf
sbb
and
pop
push
adc
or
nop
retf
mov
loope
adc
adc
lahf
xor
xchg
nop
mov
xchg
mov
arpl
sub
and
push
sbb
mov
fbstp
jecxz
arpl
mov
jns
out
mov
or
mov
rsqrtps
cmp
jle
jecxz
call
dec
popa
pop
mov
iret
mov
das
push
and
dec
jne
mov
loope
xor
enter
(bad)
jns
fwait
mov
in
xor
pop
ins
mov
or
in
repz
cli
mov
cmc
rcl
adc
xchg
(bad)
add
sub
dec
sub
push
push
sti
add
mov
repz
in
inc
stos
test
ins
push
(bad)
nop
imul
sub
cmp
mov
pop
retf
xor
ins
popa
imul
sti
dec
ret
out
dec
repz
jno
sahf
dec
es
movs
add
(bad)
adc
mov
xchg
ins
pop
and
out
xchg
sbb
mov
add
data16
lods
ins
xor
retf
int3
mov
jp
(bad)
mov
out
(bad)
psubq
mov
fucomip
test
cmp
dec
jmp
xchg
scas
aaa
push
cmp
add
fimul
mov
jnp
fistp
mov
xchg
dec
or
xchg
dec
sahf
add
fnsave
cmps
jns
sub
xchg
stos
jbe
cdq
jge
and
and
pop
jno
stc
and
imul
sahf
retf
sub
mov
add
lods
lock
xchg
pop
jae
cmp
push
bound
jnp
shr
out
or
inc
imul
mov
arpl
push
sbb
mov
xchg
jbe
stos
adc
popf
and
in
inc
inc
xchg
ins
imul
and
pop
push
lds
out
sub
(bad)
call
push
fadd
sbb
mov
call
dec
mov
dec
xchg
ds
jbe
shl
lea
pop
movs
xchg
dec
(bad)
clc
cld
add
bound
add
cmp
pop
pop
push
jl
test
cmp
outs
(bad)
mov
loope
adc
xchg
inc
mov
cmp
mov
jae
bound
nop
cli
in
xor
sbb
loop
pop
lods
gs
nop
mov
ss
add
push
mov
pop
retf
push
es
jmp
cmp
pop
cmp
push
add
shr
adc
adc
add
(bad)
add
(bad)
rol
or
pop
les
mov
movs
sub
push
cmps
mov
push
icebp
ficom
call
push
popf
ss
lods
nop
pop
inc
mov
inc
ins
push
cmp
int3
mov
xchg
mov
adc
sbb
je
adc
data16
imul
mov
add
out
inc
jmp
ret
jne
mov
cmp
addr16
mov
jne
inc
sub
push
or
call
in
push
js
jb
cmps
mov
adc
jbe
or
repz
and
xchg
cld
sti
js
pop
dec
jno
or
ss
retf
jnp
xchg
sub
jno
js
jmp
enter
adc
xor
xchg
xchg
icebp
(bad)
loopne
mov
cs
ds
outs
cmp
fs
cdq
push
sbb
inc
push
and
pop
ficom
xchg
in
(bad)
dec
add
adc
mov
aaa
sub
mov
shl
mov
adc
stos
push
out
shr
dec
mov
prefetchw
cwde
not
mov
outs
std
std
add
xchg
pop
inc
out
jnp
push
call
movs
bound
lahf
(bad)
adc
ins
mov
adc
mov
mov
aas
outs
or
retf
int
dec
js
scas
test
(bad)
inc
popa
stos
retf
mov
scas
cmp
int3
adc
inc
test
cmp
xor
inc
es
cmp
rcr
nop
jg
pop
jp
es
or
pusha
add
out
mov
add
lods
mov
aad
cmp
inc
(bad)
adc
push
xchg
cmp
cli
or
enter
push
sar
xor
fnstcw
dec
xchg
inc
push
sub
push
arpl
in
in
movs
xor
in
push
fmul
mov
sbb
mov
std
(bad)
add
xchg
in
mov
and
push
pop
jae
inc
in
sbb
pop
jg
enter
adc
(bad)
fnstsw
(bad)
mov
mov
jb
(bad)
xor
mov
jle
scas
add
xor
jmp
add
(bad)
adc
lds
cmc
adc
enter
dec
test
fistp
ret
jmp
mov
cmps
pop
cmps
xor
pop
sub
cmc
push
shl
fidiv
or
sahf
clc
mov
xchg
aam
ss
aaa
in
adc
mov
jb
test
lods
jle
sub
or
jo
sbb
sub
jmp
ret
push
jmp
fstp
mov
bound
cwde
enter
xor
and
mov
mov
(bad)
mov
aaa
xchg
add
pushf
dec
xchg
adc
aam
mov
mov
ins
xchg
iret
shl
pop
sub
(bad)
out
repnz
ror
mov
cmp
in
push
div
movs
(bad)
mov
ss
cmp
and
xrelease
push
and
add
(bad)
outs
cdq
std
pop
pop
adc
jo
xor
repnz
or
shl
loopne
int
xor
pop
push
sahf
test
into
repz
mov
mov
pop
cmp
je
cwde
sbb
pusha
stos
retw
lods
in
jb
dec
test
pop
jno
inc
dec
jb
mov
pop
mov
and
fstp
loop
jge
fstp
daa
dec
xchg
add
in
das
and
iret
mov
jno
mov
icebp
les
ror
add
mov
jnp
jge
xchg
nop
add
lahf
call
ins
popf
(bad)
and
mov
loop
push
push
mov
jo
(bad)
xor
(bad)
scas
test
add
xor
sub
cmps
jno
dec
and
and
aad
(bad)
sbb
and
push
dec
xor
jp
or
mov
push
xor
push
jl
xor
cwde
and
ror
scas
in
jecxz
xchg
iret
ja
(bad)
fadd
out
data16
inc
or
loopne
xor
aaa
mov
mov
movs
cmps
fdivr
push
ficomp
dec
mov
jb
pop
lock
loopne
mov
and
test
mov
pop
add
aad
pop
iret
or
sub
xchg
jecxz
dec
in
adc
repnz
or
(bad)
adc
and
xor
pop
jmp
xor
jmp
pusha
dec
add
mov
in
ret
loopne
adc
loope
push
push
lods
out
jnp
gs
sub
mov
ret
dec
(bad)
push
fldcw
mov
fld
or
aam
(bad)
cmp
cli
(bad)
jp
adc
jno
div
lea
outs
std
(bad)
fnstcw
sub
(bad)
pusha
jmp
push
jmp
popa
jmp
add
inc
aad
loopne
das
ds
mov
or
pop
or
das
je
fwait
sub
out
int
mov
loopne
adc
mov
cmp
jmp
les
xor
test
(bad)
dec
dec
mov
std
jg
stos
int
adc
(bad)
std
inc
jne
mov
rol
xor
imul
cmp
or
xchg
or
repnz
in
stos
xor
addr16
(bad)
fimul
cs
or
stos
cdq
cmc
iret
loope
inc
jmp
dec
shr
xchg
xchg
pop
arpl
ret
jnp
sbb
shl
ret
ds
ret
dec
xchg
sbb
cmp
xchg
add
scas
sbb
movs
pop
out
and
idiv
add
push
cdq
jecxz
dec
ins
and
cmp
retf
pop
mov
sub
dec
mov
mov
repnz
aas
cmp
mov
jg
push
inc
imul
in
into
popf
jp
inc
inc
clc
inc
ds
sub
xchg
leave
outs
and
ficom
inc
(bad)
xchg
sub
daa
fs
mov
dec
js
push
mov
arpl
imul
mov
mov
test
mov
push
js
mov
addr16
popa
pop
xor
movs
sub
pop
ficom
pop
mov
mov
push
xor
movs
(bad)
stc
xchg
in
je
cdq
xor
aaa
sub
xchg
and
je
dec
mov
std
sbb
sub
aaa
out
add
mov
adc
adc
iret
pop
stos
les
mov
pop
loop
mov
pop
imul
test
gs
or
retf
mov
add
mov
stc
jmp
push
ror
(bad)
xor
adc
enter
fcmovbe
xchg
add
mov
add
movs
lock
push
and
ins
je
nop
push
sub
sar
fsqrt
sub
hlt
int
xchg
jmp
push
xor
mov
pop
std
std
icebp
sti
push
mov
lea
mov
iret
das
mov
adc
xchg
ins
pushf
mov
add
dec
jmp
push
out
jge
cmp
ds
mov
xor
mov
jb
jae
fidiv
fnstenv
outs
sub
push
test
or
sub
stos
fstp
ret
xor
jae
push
lea
mov
cmp
dec
add
in
and
arpl
pop
sbb
mov
push
stos
or
push
loop
push
xchg
adc
push
add
and
pop
fcomi
pop
inc
arpl
mov
push
mov
loope
jo
jne
sbb
fild
xor
scas
adc
cwde
xchg
fiadd
shr
mov
and
sbb
arpl
push
pop
fs
jge
mov
inc
inc
pop
xlat
leave
add
or
les
lahf
jmp
pop
add
push
pop
hlt
out
sar
inc
or
cmp
out
xor
ficom
mov
test
inc
and
hlt
push
ds
call
ins
addr16
or
sub
sub
mov
xchg
push
dec
add
and
sbb
sbb
pushf
pusha
jae
movs
adc
or
fcmovnb
sub
(bad)
fdiv
dec
jb
push
xor
fidivr
xor
pop
xlat
scas
lahf
pop
push
jb
stos
xchg
sub
add
xchg
push
fwait
movlps
out
test
dec
and
in
push
fldenv
mov
xor
xchg
cmps
test
adc
pop
add
and
aad
je
cs
sbb
xchg
das
mov
scas
xchg
neg
cli
and
mov
sti
mov
out
repz
dec
sub
das
pop
pusha
stc
and
aad
lods
jecxz
pop
push
xchg
push
dec
outs
or
lods
test
fild
pop
shl
adc
je
push
mov
mov
shl
pop
mov
lods
xor
push
adc
mov
cmc
or
imul
rol
aad
xlat
aad
(bad)
push
jl
add
push
les
fisttp
dec
xor
sahf
movs
mov
cmp
mov
add
movs
pop
pop
inc
add
imul
jmp
pop
lods
dec
lods
dec
dec
pop
fadd
dec
mov
pop
inc
jg
dec
inc
push
sti
test
or
test
ret
cld
push
sti
mov
shl
dec
iret
cmp
mov
push
ins
mov
inc
cmp
and
outs
(bad)
dec
imul
neg
push
pop
dec
mov
nop
loopne
int3
out
repz
test
loopne
fsubr
into
push
enter
jg
inc
jmp
jbe
(bad)
pop
jl
xchg
cmp
mov
hlt
sbb
add
sbb
das
mov
fld
shr
jne
xor
mov
out
addr16
cmp
xor
into
push
sub
retf
repnz
out
int
dec
xor
jo
jae
pop
int3
in
inc
out
mov
nop
cmp
jl
lahf
add
sbb
sub
adc
movs
stc
cmp
movs
hlt
jae
xor
or
sbb
sub
mov
movlps
xrelease
aam
(bad)
out
fldenv
pusha
and
sub
lea
sub
sub
xchg
sbb
push
(bad)
dec
fs
stos
cmp
(bad)
jl
or
call
lods
jo
or
fsub
in
inc
inc
iret
dec
repnz
mov
xor
or
xchg
scas
scas
outs
mov
and
sar
xchg
add
xchg
and
repnz
cmp
push
mov
adc
invd
mov
clc
jl
mov
xchg
hlt
les
fdivp
loope
jno
je
ja
mov
add
iret
ins
ss
push
in
addr16
mov
jg
inc
mov
sbb
mov
mov
add
fwait
mov
mov
and
adc
sbb
aaa
ds
in
mov
xchg
and
and
xchg
mov
fmul
lock
repnz
outs
adc
inc
pop
ficomp
mov
ret
jnp
mov
push
popf
imul
idiv
ror
adc
enter
repz
pop
adc
aas
cmp
push
sbb
sub
and
movs
imul
pop
mov
dec
hlt
das
enter
mov
cmp
test
dec
mov
xor
pop
add
mov
jmp
cmp
push
in
aam
dec
test
aas
movs
ret
enter
add
pop
sar
(bad)
lods
push
stos
(bad)
lock
sub
sahf
mov
and
pusha
shr
aad
movs
jnp
add
adc
dec
clc
(bad)
out
sub
dec
(bad)
jl
cmp
fst
inc
or
bound
and
pop
and
push
xor
push
inc
push
fldcw
or
mov
dec
(bad)
hlt
retf
xor
adc
cmp
mov
nop
dec
mov
inc
fisttp
retf
sar
and
cmps
test
pusha
cmp
jle
sar
std
mov
mov
cdq
jecxz
mov
retf
test
int
retf
sbb
mov
sbb
and
xor
cld
mov
leave
fisttp
aas
push
sub
pop
loope
mov
hlt
mov
add
push
bound
jp
bound
jb
out
cld
xchg
movs
loop
ja
mov
mov
std
sub
and
imul
les
scas
add
inc
rcl
inc
mov
pop
imul
imul
mov
mov
mov
push
inc
(bad)
jne
push
ror
loopne
pop
pop
mov
ret
or
cdq
icebp
and
psrad
loope
jl
in
sub
add
adc
aaa
cli
ja
popa
arpl
xchg
push
cwde
xor
scas
scas
mov
pop
pop
fcomip
dec
or
push
in
dec
cmp
sub
push
pushf
jp
jp
sar
call
mov
gs
or
mov
or
loope
inc
cmps
xlat
jbe
sub
retf
sbb
enter
pop
pop
mov
sbb
pop
cwde
inc
movs
(bad)
xchg
mov
pop
xor
xchg
inc
mov
addr16
push
dec
outs
sar
neg
bound
xchg
movs
cmps
mov
mov
fadd
fild
retf
aam
inc
enter
xor
adc
les
pop
cmp
mov
jb
js
jmp
(bad)
jecxz
out
jb
aas
and
gs
lods
jb
pop
dec
(bad)
cld
adc
or
jbe
mov
xor
jecxz
xchg
push
out
mov
push
or
xchg
lods
out
ret
lahf
mov
repz
inc
pop
(bad)
jp
mov
pop
or
inc
fcom
fucomip
add
or
aam
sub
js
pop
add
jle
or
into
mov
sub
daa
push
sbb
add
adc
das
call
pop
mov
dec
sub
pop
xchg
adc
sub
push
sub
sbb
fisttp
xor
stos
pop
pop
sbb
or
mov
xor
xchg
fisttp
mov
ss
jg
pop
pop
xor
mov
stos
fsubr
or
push
jmp
push
dec
add
jp
(bad)
mov
loopne
or
mov
inc
mov
out
fstp
push
rcl
jnp
test
xor
adc
cmp
dec
aam
mov
jle
mov
fsubr
lahf
mov
fsubr
pop
add
add
jecxz
popa
shl
dec
ins
aad
jmp
cmc
mov
fist
adc
fstp
leave
int3
loope
repnz
inc
mov
sub
xchg
push
sbb
or
xlat
std
arpl
and
jo
pop
test
loop
(bad)
in
aam
xchg
push
lods
daa
int3
adc
ficom
sahf
cmp
ret
mov
cld
aas
ret
ficomp
stc
jbe
push
or
shl
inc
ja
movs
retf
lock
sub
scas
dec
cld
push
jmp
mov
fst
cs
mov
mov
xchg
outs
test
mov
pop
mov
xor
scas
lods
and
imul
stos
(bad)
xchg
xchg
or
xor
push
pusha
iret
push
mov
push
add
rcr
mov
in
jno
icebp
mov
sub
mov
sbb
fnstsw
add
int3
sub
lock
push
pop
movs
cmp
pop
jl
add
aad
xchg
and
mov
stc
addr16
push
ins
mov
test
push
scas
jno
leave
cmp
jecxz
test
fadd
std
pop
les
imul
sbb
adc
fdiv
push
popa
pop
mov
aas
cmps
sub
leave
push
xchg
mov
jmp
xchg
jecxz
or
out
icebp
jns
ret
sub
cli
xchg
in
adc
inc
pop
adc
jg
arpl
sub
adc
mov
cmp
out
out
jno
inc
lahf
ret
scas
xlat
aaa
mov
in
data16
mov
mov
dec
hlt
into
out
jmp
cmc
sbb
fdivr
arpl
xor
jb
add
pop
xchg
sbb
cmp
neg
adc
mov
str
mov
fnstenv
jbe
xchg
cmc
xchg
fnstsw
loopne
mov
xor
sub
mov
leave
xchg
lods
adc
pusha
sbb
cli
ja
sub
mov
adc
cwde
xchg
mov
push
push
inc
jge
jecxz
push
movs
jge
jo
pop
add
mov
in
(bad)
cmp
add
dec
test
iret
add
and
mov
jge
cmps
hlt
dec
mov
pop
mov
mov
sub
xor
fdivr
or
push
mov
je
lock
xchg
aad
jmp
movs
or
test
test
int
in
and
lods
retf
aas
add
xor
in
and
dec
pop
ins
in
ficomp
mov
int
imul
sbb
not
push
xor
pop
rcl
xchg
cs
push
lods
retf
sti
sub
cmps
ja
dec
cmp
pop
jp
push
jp
fcomi
sbb
in
sub
outs
js
cwde
mov
outs
dec
push
fsub
xchg
loop
adc
ss
lds
sbb
ficomp
fdiv
jmp
icebp
inc
dec
pop
lea
cmp
jmp
ret
les
sub
adc
in
gs
or
mov
xor
dec
mov
xchg
daa
lods
cmps
pusha
inc
cmps
cmps
scas
dec
gs
es
inc
ss
in
fst
xor
lods
not
and
cld
mov
stc
xchg
and
push
sbb
outs
mov
(bad)
outs
jbe
jge
scas
sub
mov
mov
dec
xchg
sar
sub
(bad)
idiv
push
daa
(bad)
cmc
mov
sbb
cmp
ins
mov
or
hlt
and
std
popf
mov
outs
lock
shl
(bad)
or
retf
int
outs
inc
fld
mov
es
inc
pushf
cmps
mov
inc
mov
push
cwde
(bad)
mov
push
lods
pop
test
nop
aad
scas
movs
ins
lods
mov
sahf
ins
stos
les
idiv
mov
push
push
sbb
add
popa
add
mov
dec
jle
jnp
dec
push
mov
aad
push
cld
(bad)
mov
add
xchg
or
hlt
xchg
mov
mov
inc
jbe
mov
push
idiv
pushf
sbb
out
test
imul
gs
fcmovne
and
stos
imul
and
(bad)
push
repnz
fimul
(bad)
dec
dec
outs
cmp
aad
adc
jo
neg
xor
cs
sub
sub
push
or
das
sahf
fstp
sbb
dec
fiadd
test
iret
(bad)
or
inc
mov
neg
sub
add
aad
test
in
cmp
xchg
push
in
xchg
stos
scas
and
aaa
push
sbb
or
sbb
pop
cmp
in
fxch
cwde
mov
sbb
mov
das
aaa
xor
retf
cmp
push
xlat
jg
addr16
in
cmps
sar
xchg
pop
xchg
xchg
sti
in
jbe
push
inc
cmp
push
xchg
adc
jecxz
lea
test
popa
stos
jno
std
add
xor
dec
push
add
and
mov
jmp
add
jae
stos
dec
add
sub
ins
call
mul
shl
out
lods
inc
mov
stos
pop
test
in
pop
lahf
cmps
add
sub
cmp
inc
add
dec
inc
sti
lods
xor
jge
cwde
sbb
jle
add
push
push
jle
out
mov
into
ret
mov
lock
sub
popa
mov
ss
dec
aad
dec
je
sti
ja
xchg
and
jl
lea
xchg
js
mov
push
sbb
inc
or
dec
mov
call
aam
xor
scas
mov
adc
pop
add
out
in
aad
push
dec
in
mul
je
sbb
pop
test
dec
jl
sbb
and
shl
call
(bad)
cmc
and
popa
and
lods
es
in
jmp
loop
retf
stc
imul
ret
jo
popa
out
pop
jns
cld
adc
test
data16
xor
mov
hlt
add
xchg
sbb
cmps
sbb
jmp
enter
pop
shr
inc
movs
ss
jbe
ja
sbb
test
lea
sbb
into
sti
mov
mov
xchg
icebp
jmp
ss
fwait
cmc
movs
gs
fstp
shl
cmp
retf
mov
dec
or
cs
hlt
sub
rcl
adc
cmp
adc
mov
cmp
cli
test
or
fcomp
add
je
pop
in
aam
dec
pop
pop
std
cmp
push
push
jae
int
(bad)
sbb
jns
jae
mov
sbb
xchg
gs
xchg
cdq
push
add
push
out
sub
(bad)
pusha
or
pop
jp
xchg
xlat
ja
xor
shl
cmps
and
ins
frstor
pop
in
jecxz
fsubr
leave
lds
inc
idiv
pop
out
xor
xor
(bad)
aam
or
add
lods
inc
jae
into
test
cli
(bad)
inc
and
sub
add
sbb
mov
shl
pop
jno
dec
add
test
and
xchg
popa
test
cmps
xchg
inc
ins
test
or
mov
dec
jecxz
fst
add
(bad)
fidivr
cs
mov
mov
(bad)
in
and
sbb
call
cld
sub
xchg
xor
imul
mov
sub
sub
into
movs
loope
mov
imul
sbb
mov
into
in
or
jmp
pushf
mov
cmp
fwait
jmp
adc
fnstenv
cmp
je
push
inc
sbb
ficom
inc
sar
pop
mov
adc
jae
dec
jns
xchg
xor
jmp
imul
loope
in
arpl
xchg
mov
add
out
mov
add
sub
stos
(bad)
push
iret
inc
jno
inc
sbb
xor
fwait
jnp
(bad)
jb
xor
mov
mov
sbb
cmps
idiv
mov
mov
ret
cmps
in
mov
mov
ja
fbld
sub
and
pop
sbb
mov
inc
aas
in
ret
or
scas
std
xchg
xchg
dec
jo
inc
mov
outs
fs
jmp
inc
test
pop
dec
cmp
stos
nop
sub
aas
dec
pop
(bad)
mov
rol
cmp
mov
dec
(bad)
dec
fwait
lock
sbb
(bad)
fdivr
imul
add
loop
adc
out
dec
sbb
adc
push
mov
cmp
retf
push
mov
and
stc
adc
lds
add
and
stc
cdq
mov
add
clc
push
mov
pushf
inc
mov
sar
out
cli
sub
or
lahf
imul
(bad)
cld
inc
movs
rol
addr16
mov
cmps
pop
cmp
out
and
adc
jns
push
test
cs
jp
add
addr16
arpl
mov
aas
adc
cmps
dec
mov
sub
es
mov
mov
mov
push
mov
mov
(bad)
xor
in
push
fwait
sahf
dec
(bad)
mov
fisub
into
add
in
push
adc
test
or
adc
cs
leave
jge
add
xor
stc
jns
cmp
(bad)
fxch
mov
dec
push
adc
aas
jl
dec
fist
inc
cmps
(bad)
or
xchg
cli
outs
stc
fst
pop
cmc
cmp
inc
mov
sub
aam
mov
xor
shl
cmp
and
inc
push
jo
mov
and
arpl
mov
sbb
or
sbb
mov
and
add
and
add
or
fld
adc
loop
loop
and
push
and
ds
retf
xchg
call
in
inc
mov
cdq
xchg
mov
cli
neg
xchg
mov
test
pop
inc
imul
lea
pop
dec
(bad)
aam
xchg
inc
xor
test
cli
inc
rol
and
cmp
adc
dec
imul
shl
cmps
jmp
scas
aam
pop
xchg
inc
add
call
push
jne
neg
dec
xchg
hlt
xchg
loop
and
adc
pop
in
loope
pop
jne
pop
dec
cli
imul
adc
arpl
push
jmp
dec
sbb
(bad)
adc
cmp
dec
dec
cdq
cmps
add
push
cmovns
cli
adc
xor
push
sub
push
xchg
mov
mov
retf
hlt
push
cmp
xchg
test
mov
cdq
outs
inc
xchg
retf
mov
push
(bad)
inc
or
inc
dec
stc
add
mov
and
outs
fisubr
call
ss
loop
dec
add
mov
test
outs
push
pop
imul
ins
pusha
xor
mov
outs
ffreep
not
xchg
xchg
addr16
mov
out
fnstsw
int
stos
xlat
aad
push
sbb
out
sbb
(bad)
bound
mov
xchg
adc
inc
pop
xlat
das
sbb
retf
cmp
pop
xchg
add
sbb
or
xchg
inc
push
or
scas
push
ret
inc
dec
fprem1
sub
push
pop
test
mov
mov
ftst
pusha
jmp
mov
sbb
push
out
mov
pop
movs
add
ins
aaa
adc
dec
sbb
cli
shl
loop
xor
dec
fst
push
fwait
inc
das
mov
cmp
pop
(bad)
fcom
and
mov
pop
lahf
mov
sub
dec
imul
popa
sub
(bad)
aas
or
or
(bad)
mov
sub
mov
ins
and
jmp
jae
enter
std
dec
enter
out
and
sub
xor
cwde
jp
repnz
mov
mov
aas
js
mov
mov
jne
(bad)
js
pop
ret
ds
mov
jnp
fild
and
sub
xchg
inc
mov
pop
add
cwde
mov
add
sbb
lock
mov
fs
neg
rcl
dec
add
mov
mov
es
rcr
psrlq
mov
mov
sub
cmc
rol
jnp
add
xchg
enter
push
pop
out
sbb
nop/reserved
dec
lods
enter
repnz
push
ins
int3
push
mov
jp
inc
mov
rcr
or
push
out
call
out
(bad)
mov
shr
or
inc
jl
ja
jmp
arpl
das
dec
inc
(bad)
aam
fwait
mov
dec
pop
repz
jle
or
sbb
mov
jo
rcr
or
push
pop
or
sub
and
mov
(bad)
lahf
leave
and
push
push
cmp
adc
lods
adc
fs
sub
leave
movs
mov
or
pop
scas
and
repz
jbe
mov
ss
adc
inc
inc
sub
int
dec
fs
pop
add
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
cmp
das
dec
mov
int3
cmps
dec
xchg
daa
out
mov
inc
jnp
cmp
add
add
jmp
mov
jp
rcl
xor
pop
in
rol
add
icebp
rcr
lods
fwait
iret
sub
jno
sub
sub
(bad)
jae
mov
cli
pop
(bad)
xchg
cwde
dec
call
pop
mov
mov
out
into
jp
aad
lods
(bad)
stos
scas
mov
dec
mov
push
outs
jnp
pusha
cdq
sub
sub
ret
ja
lea
rol
je
div
cmps
fild
gs
ja
xor
in
cmp
ins
inc
add
and
adc
out
into
cld
sahf
mov
rcl
sub
adc
mov
jne
adc
sub
push
mov
push
lock
js
mov
nop
mov
inc
sbb
arpl
fwait
sbb
sbb
imul
(bad)
daa
aad
sbb
sbb
lock
cmps
fisttp
pop
mov
je
fisubr
(bad)
test
call
enter
enter
dec
in
jmp
pop
stos
dec
cmps
and
sbb
or
sub
call
repnz
pop
std
adc
(bad)
js
xor
mov
fistp
ficom
xor
shl
push
inc
pusha
rol
mov
idiv
fcom
and
mov
lea
inc
xchg
cmp
xchg
outs
arpl
cs
pop
jbe
adc
in
pop
mov
and
psllq
loop
dec
daa
xor
(bad)
jmp
mov
ss
mov
cmp
outs
scas
stos
stc
in
cmp
jmp
lods
cmps
cmc
repz
fsub
stc
sbb
mov
mov
(bad)
pop
xor
push
pusha
push
and
aam
(bad)
jmp
adc
popa
inc
xchg
push
or
add
add
or
js
xchg
aas
ss
jo
jnp
jo
test
mov
aaa
or
push
mov
jle
mov
pop
(bad)
dec
fidiv
mov
sbb
call
sbb
add
iret
jbe
sub
cmc
adc
xor
add
jecxz
jmp
pop
imul
ficomp
cli
fist
cmp
int
pop
adc
lea
dec
pop
aas
xchg
sbb
call
test
pop
data16
mov
in
jp
pop
pop
sbb
inc
mov
aas
jo
cld
(bad)
sub
lock
imul
cmp
pop
or
cmp
mov
dec
sbb
shr
(bad)
sbb
das
xchg
lock
and
push
fcomp
inc
xchg
push
adc
mov
and
jbe
pusha
push
mov
add
pop
adc
lock
mov
dec
lahf
inc
int
sbb
mov
mov
stc
cdq
inc
icebp
xor
mov
adc
dec
outs
xchg
imul
xchg
movs
jo
idiv
scas
or
popa
adc
loop
sub
push
and
data16
loope
pop
xchg
sbb
int
xrelease
sbb
and
dec
mov
and
fdiv
test
in
inc
add
repnz
iret
xor
and
push
dec
mov
pop
lods
nop
test
sbb
jmp
pop
xchg
out
fwait
pop
cld
ds
fistp
cdq
dec
ja
dec
je
(bad)
mov
arpl
cli
aaa
movs
push
cmps
out
push
jmp
sbb
aad
mov
aad
jg
dec
or
test
mov
outs
or
push
cmc
and
or
mov
sub
inc
loope
add
repz
jne
cmp
xor
cmp
scas
in
repz
push
into
in
daa
pop
out
loop
(bad)
(bad)
loopne
xchg
xchg
xchg
in
movs
jo
out
mov
sti
sbb
leave
fs
mov
sub
arpl
xchg
push
imul
sub
or
sbb
mov
scas
fadd
(bad)
mov
and
sahf
mov
in
popa
xor
mov
mov
add
call
mov
xchg
in
daa
mov
or
sub
jp
(bad)
imul
clc
mov
xor
mov
mov
out
in
mov
js
jns
inc
mov
jb
dec
push
push
mov
ins
seta
inc
push
test
sbb
mov
rcr
data16
shl
leave
and
sub
inc
mov
mov
push
jno
cmp
fsubr
sbb
outs
outs
inc
or
sub
push
or
rol
adc
mov
enter
push
sub
popf
push
push
xor
out
aad
inc
cmp
aas
add
outs
outs
mov
push
gs
xchg
imul
or
sub
mov
or
ss
stos
lahf
fstp
mul
daa
inc
ins
jecxz
push
xchg
jmp
ds
sbb
pop
sahf
cmp
push
sbb
aas
inc
jmp
mov
popf
(bad)
xchg
mov
sbb
test
mov
xor
imul
dec
aas
imul
sub
xor
sbb
loopne
sub
nop
data16
mov
jl
outs
cmp
jb
(bad)
push
and
mov
outs
add
(bad)
xacquire
pop
outs
cli
sub
pop
es
pushf
pop
xlat
gs
or
mov
mov
cmc
cld
xchg
sbb
jb
jns
fsubp
push
call
xchg
frstor
push
pop
test
sub
into
jle
cdq
pusha
icebp
mov
pop
xchg
hlt
jp
sbb
pushf
pop
pop
push
lock
call
leave
neg
jno
and
sbb
pop
push
cmp
into
sbb
push
ror
cs
clc
adc
push
mov
cwde
out
in
fisttp
cmp
out
pop
push
jae
cmc
xlat
xchg
mov
test
and
lea
sar
ins
xor
sub
imul
icebp
clc
fidivr
and
dec
xchg
loop
out
sti
sub
jne
push
add
mov
fimul
pop
test
push
push
repz
outs
jmp
cmps
dec
stc
call
lea
(bad)
(bad)
adc
loope
aaa
mov
popf
das
xchg
inc
push
jnp
popf
dec
cmps
std
out
xor
jae
cmp
iret
push
fst
icebp
addr16
repnz
cld
rcl
push
xor
(bad)
and
jmp
imul
push
sub
sbb
retf
xchg
pop
cmps
fiadd
or
inc
dec
fnstcw
and
xchg
mov
(bad)
iret
xchg
xor
add
(bad)
sahf
bound
adc
dec
sub
add
fimul
mov
pop
and
push
push
push
cmps
push
xchg
xchg
push
jne
je
lahf
push
(bad)
push
push
add
ror
push
add
sbb
mov
push
loopne
cli
sub
adc
aad
or
retf
sub
push
xor
sbb
ror
push
or
rol
cli
in
xchg
add
and
mov
cli
ret
pop
dec
ds
rcl
mov
sbb
fstp
call
jmp
sub
lahf
mov
xchg
jnp
ins
fimul
daa
sub
mov
jb
cdq
cmc
dec
or
aad
mov
adc
push
cs
sub
pop
mov
xchg
mov
test
mov
aas
out
xchg
add
mov
mov
sti
shl
pop
or
movs
sbb
pop
xlat
pop
cld
pop
or
push
jp
imul
daa
jbe
mov
and
or
add
imul
and
stc
fst
or
add
jb
out
push
mov
pop
ret
cdq
or
sub
sub
fiadd
xor
cmp
inc
js
mov
repnz
lds
leave
int
(bad)
ins
(bad)
push
mov
pop
add
test
test
repnz
ins
inc
adc
fdivr
sbb
(bad)
fsub
aaa
es
(bad)
loopne
clc
pop
xchg
out
inc
in
jae
push
push
out
ror
inc
xor
adc
sub
data16
push
push
dec
mov
addr16
mov
inc
mov
mov
sub
ffree
push
ja
push
add
les
repz
mov
fsub
pusha
fild
pop
js
or
add
arpl
idiv
jp
add
pop
xor
enter
mov
add
adc
xor
xor
shl
and
idiv
aaa
cld
or
mov
mov
ins
dec
add
inc
out
adc
push
(bad)
iret
cmp
inc
dec
adc
pop
nop
cmp
sbb
hlt
iret
sub
cs
mov
outs
pop
jg
loop
xor
ret
scas
inc
mov
cmc
pop
adc
fwait
sub
sub
aaa
jb
pop
dec
inc
mov
stos
inc
(bad)
call
push
scas
add
popaw
(bad)
mov
loope
xor
pop
scas
cli
or
in
ror
int3
and
cmp
cmp
mov
mov
add
inc
jmp
add
mov
jmp
repnz
imul
(bad)
fmul
mov
pop
dec
push
loop
and
into
pop
dec
imul
push
jo
sub
and
jne
xor
(bad)
inc
xchg
jns
or
xlat
ds
add
mov
mov
mov
jns
mov
pop
ins
pop
movs
int
pop
test
imul
dec
dec
lock
sub
inc
adc
dec
jecxz
xchg
hlt
in
or
lds
xchg
retf
je
pushf
sbb
in
iret
fwait
xchg
add
add
xor
cmp
adc
mov
mov
clc
jge
jmp
in
add
cld
call
js
adc
pop
aam
popf
or
xor
in
sti
sti
push
(bad)
cmp
xor
push
pusha
icebp
cmps
push
push
mov
test
rcr
sbb
fcomp
push
sbb
mov
mov
mov
cwde
xchg
inc
ret
and
sub
cmps
jo
jo
jae
popf
xor
call
mov
sbb
adc
call
and
inc
pop
jne
mov
retf
ins
mov
enter
outs
cmps
sbb
push
jo
xor
mov
ja
jl
loopne
jno
call
sbb
xor
sub
jge
pop
sbb
pop
retf
cmp
aaa
addr16
xlat
and
jo
dec
jl
(bad)
inc
rcr
outs
sub
fistp
fist
cld
and
cs
inc
ins
jbe
add
hlt
sahf
ja
jns
mov
inc
test
pusha
addr16
adc
nop
sub
dec
jae
ficomp
and
lahf
pop
jne
cmps
lock
pushf
mov
fidiv
mov
push
adc
lahf
or
and
lock
sub
stos
mov
sub
xchg
jb
jmp
test
or
das
add
mov
mov
jp
cdq
or
sbb
sub
push
cmc
add
sbb
inc
xor
rol
mov
fucomi
fwait
ja
mov
pusha
fnstcw
inc
pop
cmp
loop
out
sbb
and
in
loope
cmp
inc
pop
(bad)
(bad)
sbb
movs
into
imul
dec
add
dec
xchg
inc
repz
hlt
dec
aaa
push
inc
aam
mov
sub
imul
dec
push
xchg
xchg
xor
jne
clc
and
push
pop
adc
jp
cli
cmovns
(bad)
push
mov
mov
ret
pop
lods
mov
xor
cld
mov
and
lds
inc
push
test
stos
(bad)
xor
mov
pop
or
cmp
data16
sub
mov
scas
sub
test
push
push
jg
(bad)
mov
xor
pop
ror
dec
or
xchg
in
inc
pusha
pop
cmps
sub
push
dec
ret
mov
push
movs
cmp
les
jmp
icebp
iret
mov
xor
test
jge
out
inc
(bad)
out
leave
fs
cmps
sbb
(bad)
jl
pop
mov
jo
in
mov
xchg
ja
daa
dec
and
scas
ins
scas
dec
xchg
or
and
inc
jge
aad
mov
imul
bound
sbb
push
es
xchg
sbb
xor
(bad)
fdivr
test
movs
mov
je
or
cmp
push
sbb
add
outs
rcr
mov
ss
mov
jb
mov
dec
call
push
call
mov
shl
push
scas
push
push
sub
test
movs
jp
adc
mov
xor
cmp
loop
fldlg2
cmp
out
into
mov
jbe
inc
jl
adc
jl
dec
mov
cmp
imul
inc
sub
jns
outs
addr16
jae
call
cs
mov
repnz
dec
adc
(bad)
pop
loopne
fstp
test
push
div
fldenv
add
inc
jecxz
sbb
sub
or
fiadd
dec
xchg
clc
mov
add
pop
retf
xor
into
int
popa
and
push
retf
in
jmp
xor
(bad)
cmp
out
ret
push
(bad)
outs
call
test
jmp
iret
add
mov
dec
outs
add
movs
dec
mov
pop
pop
sbb
sbb
jne
cmps
ins
lock
mov
data16
aam
dec
inc
push
cmc
jg
xchg
or
(bad)
aam
sbb
mov
mov
popa
(bad)
mov
jbe
loop
es
shr
add
out
sub
mov
gs
psraw
cmp
and
jbe
xchg
jl
shl
jge
jno
xor
stos
jge
push
mul
sub
fstp
jl
shl
neg
loope
xor
add
das
mov
push
(bad)
daa
sub
arpl
or
jae
not
sub
retf
(bad)
jge
loop
clc
add
dec
add
adc
mov
xor
mov
sar
xchg
fs
std
inc
pop
in
mov
out
cmp
mov
sti
loopne
dec
out
sub
std
xchg
push
sub
xchg
aam
ret
mov
jne
cmps
adc
cmp
ret
loop
scas
jns
fwait
repnz
and
inc
mov
rcr
mov
or
hlt
out
jmp
sbb
clc
mov
dec
sub
sbb
mov
inc
outs
push
je
or
xchg
sub
stos
(bad)
mov
adc
std
jno
in
mov
arpl
fdiv
dec
and
std
jo
mov
call
je
dec
leave
fcom
shl
ss
into
dec
jo
int
add
dec
mov
pop
test
cmp
sub
push
jle
gs
enter
ror
cmp
adc
mov
pop
adc
mul
imul
sub
and
ret
xchg
add
iret
sbb
adc
pop
std
add
(bad)
pop
sbb
jnp
jge
or
call
mov
adc
nop
mov
pop
ja
push
sahf
and
or
xchg
sbb
dec
and
mov
xor
mov
mov
add
dec
pop
retf
cmps
call
or
xor
clc
int3
in
stos
ficomp
push
sub
addr16
cmp
adc
jl
push
call
xor
aad
cmp
aad
cmp
jle
xor
mov
mov
push
xchg
xchg
mov
pop
jae
(bad)
enter
pop
scas
and
mov
in
mov
cmp
daa
std
sub
xchg
fwait
int
pop
xchg
retf
or
pop
inc
aas
sub
push
jbe
adc
push
add
jmp
lods
push
xlat
and
retf
xchg
dec
xchg
movs
mov
mov
gs
mov
loope
inc
push
inc
sbb
into
push
push
(bad)
xchg
ss
sub
dec
(bad)
fst
mov
or
cmps
inc
stos
out
fisub
pop
rcr
ds
mov
add
arpl
add
mov
enter
imul
xchg
stos
rcl
xchg
cmp
daa
push
pop
inc
or
icebp
jmp
jne
or
ror
rcl
aaa
bound
cwde
retf
mov
repnz
mov
sti
xor
ret
push
or
push
inc
push
repz
mov
lods
inc
cli
push
mov
and
xchg
or
addr16
inc
in
out
add
inc
push
jg
push
or
in
leave
mov
jecxz
pop
rol
add
loopne
pop
fist
dec
hlt
sub
or
adc
mov
push
loopne
push
leave
or
fisttp
aaa
xchg
frstor
(bad)
ds
dec
pop
jnp
cmp
cs
outs
test
lea
repnz
lds
out
jmp
jl
xor
sub
adc
push
cdq
add
jb
mov
mov
add
pmulhuw
in
jp
sar
dec
rcl
dec
adc
xchg
shl
stc
jne
(bad)
movs
loop
in
stos
mov
loope
xor
pop
out
addr16
push
ds
gs
push
in
sbb
adc
dec
pop
jecxz
popa
ret
or
sti
std
inc
stos
push
push
das
push
push
(bad)
add
mov
add
popf
leave
dec
jbe
xor
out
icebp
push
lds
add
sub
ins
jmp
bound
inc
enter
add
in
and
dec
(bad)
iret
pop
dec
add
rol
xchg
cs
cli
sub
jmp
push
sbb
add
rol
xchg
outs
jne
sbb
mov
jns
les
xchg
rol
jmp
mov
je
jge
ja
ds
adc
and
jo
jmp
jo
jo
leave
cdq
popa
xchg
(bad)
and
mov
cli
xchg
jbe
cmp
pop
sub
mul
xchg
test
push
mov
mov
mov
bound
scas
cmp
mov
push
sahf
mov
(bad)
lea
je
xor
ror
and
stos
int
push
xor
mov
mov
mov
scas
cwde
sbb
rol
sub
or
ficomp
adc
add
lods
mov
jmp
mov
cmp
inc
xchg
pop
sub
int3
mov
jo
push
sbb
inc
add
adc
jl
cmp
mov
sar
cmp
(bad)
mov
mov
aaa
sbb
pop
test
popa
push
(bad)
iretw
xor
iret
je
jae
retf
mov
repz
inc
hlt
div
inc
arpl
out
fld
fidivr
mov
setns
sub
rcr
pop
sahf
or
les
inc
lods
mov
pop
xchg
jge
and
sti
xchg
movs
es
int
jnp
mov
cwde
mov
sbb
test
inc
je
pop
add
addr16
loope
and
add
and
pop
div
xchg
cwde
and
mov
outs
cs
xor
adc
fmul
xlat
xchg
sub
xchg
or
push
addr16
mov
mov
cmp
sbb
add
jne
xchg
jp
fwait
pushf
jmp
inc
mov
sbb
mov
nop
sti
cmp
push
lea
call
out
or
xchg
out
sbb
push
pusha
pop
sub
ss
xchg
imul
add
(bad)
sbb
pop
xor
and
repz
in
scas
movs
(bad)
dec
sbb
fidiv
mov
movs
test
xchg
ret
stc
xchg
mov
fiadd
jmp
lods
into
stos
adc
cmp
ja
add
test
fnstsw
(bad)
movs
cmp
sar
in
pop
shl
pop
test
js
sub
(bad)
call
sbb
adc
and
mov
imul
xchg
rcr
outs
call
or
scas
mov
aas
push
aas
cwde
xchg
push
mov
idiv
mov
mov
scas
add
cmp
test
je
cs
lods
je
pop
push
pop
inc
or
dec
in
mov
lahf
dec
test
enter
icebp
add
mov
fldcw
jge
enter
add
out
call
test
ret
inc
(bad)
mov
xchg
xchg
fucomp
xchg
dec
(bad)
es
xchg
dec
nop
inc
add
cdq
fist
ficomp
xchg
shl
dec
rcr
jg
add
aas
fbld
mov
hlt
rcl
mov
sub
stos
cli
int
(bad)
inc
jmp
sbb
mov
fwait
mov
sub
ja
mov
cmp
fadd
sbb
rol
cmp
lock
xor
les
and
je
push
xchg
ror
ins
(bad)
cmps
sub
push
dec
mov
fld
pcmpgtw
cwde
add
jl
mov
ins
dec
pop
push
ss
mul
add
popf
pop
pop
and
out
sub
int3
and
push
mov
stos
hlt
cmp
aas
jo
(bad)
push
imul
js
sbb
push
mov
xor
pop
jne
push
mov
and
pop
xor
jecxz
fdiv
ins
xchg
add
(bad)
icebp
mov
or
dec
clc
add
ins
adc
xchg
sub
sub
rcr
test
add
jo
dec
(bad)
cwde
aad
push
add
test
jne
scas
int3
add
push
loope
sbb
hlt
ds
out
jge
retf
cmp
mov
fistp
sub
mov
sub
inc
push
ins
adc
mov
dec
mov
pop
dec
std
adc
mov
pop
inc
in
jbe
ret
jno
lock
test
loope
dec
stos
sti
mov
aam
ds
adc
in
stos
mov
fidiv
push
adc
cmp
lds
xlat
sub
pop
xchg
mov
cmp
pusha
test
ret
out
sub
sub
ins
sbb
xor
popa
jle
pop
push
in
dec
push
and
aad
lods
cmp
xchg
mov
jle
retf
jg
in
pop
xor
xchg
popf
jno
shl
in
or
xchg
mov
mov
push
mov
ror
mov
jbe
inc
cs
jae
movs
addr16
movs
nop
push
inc
mov
fisttp
int
sbb
loop
pop
test
(bad)
pop
or
mov
push
fistp
popf
sbb
dec
or
pop
pop
js
aaa
sbb
sub
enter
add
jae
sub
and
sub
mov
loope
(bad)
stc
and
bound
ins
xor
sbb
push
sbb
sbb
cwde
inc
sub
stos
cli
push
arpl
adc
enter
pop
lahf
pushf
daa
in
jne
cmc
sub
sub
mov
push
test
repnz
mov
setb
test
ret
dec
inc
pop
mov
inc
jmp
sub
push
ds
sbb
xchg
push
xchg
mov
jg
sbb
adc
out
mov
jl
pop
sbb
rcl
fcomip
push
outs
(bad)
mov
pop
imul
lods
or
push
ss
cmps
outs
inc
int
cwde
imul
pop
shl
sub
xlat
push
dec
out
sbb
dec
cld
in
jecxz
xor
xchg
cmp
repnz
mov
push
sysexit
std
es
cs
xchg
pop
pop
jg
xchg
sbb
fsubp
(bad)
out
ins
inc
ret
pop
outs
rcr
mov
xchg
cmps
pop
outs
adc
in
imul
aaa
dec
pop
xor
mov
(bad)
bound
fbstp
mov
pushf
sbb
pop
cwde
das
xchg
adc
(bad)
sar
dec
int3
jbe
daa
jge
icebp
mov
movs
push
(bad)
push
push
sti
cmp
xlat
inc
pushf
test
aaa
lods
sbb
fsubr
xor
push
out
ss
mov
inc
test
fs
mov
or
ins
mov
xor
mov
imul
fnstenv
pop
test
or
mov
sub
ret
sbb
jno
mov
pushf
es
div
mov
add
push
push
jno
test
ss
in
jecxz
call
inc
fwait
push
rol
mov
stos
xchg
leave
xchg
iret
repz
addr16
in
mov
pop
(bad)
mov
dec
(bad)
and
les
and
sub
xor
mov
and
pop
outs
ficomp
mov
leave
sub
jo
jne
cmps
and
clc
xor
inc
mov
hlt
in
xor
stos
iret
dec
or
es
jle
je
test
xor
mov
and
pop
jmp
push
mov
add
es
cmp
pop
or
or
pop
and
retf
(bad)
aaa
daa
and
cmp
add
fstp
lea
sbb
mov
sar
jmp
rep
xchg
jmp
lahf
cmp
xor
xchg
stc
cs
xchg
lods
test
adc
jbe
leave
shl
adc
xchg
jmp
inc
and
inc
lods
call
addr16
test
inc
nop
sbb
call
sbb
mov
sti
jns
fwait
(bad)
jmp
cmp
repnz
mov
aam
mov
loope
call
cmp
push
enter
scas
inc
pop
inc
dec
mov
int3
mov
pop
xor
mov
iret
ficomp
lds
movs
or
jmp
std
das
imul
or
dec
jnp
cmps
ins
sbb
addr16
xchg
les
jmp
test
scas
cmp
xor
cmp
mov
dec
push
out
inc
push
mov
adc
call
cmp
sahf
pop
jl
jge
mov
outs
(bad)
lods
fst
shl
stos
push
jge
iret
loopne
jge
stos
mov
cld
or
pop
call
jnp
jg
repz
add
push
(bad)
stos
cmp
jmp
add
fwait
or
inc
xor
mov
dec
enter
add
sbb
mov
jp
pop
or
push
adc
sar
adc
sub
aad
add
cli
(bad)
sar
xor
test
cmp
dec
inc
enter
xchg
jno
push
mov
std
push
pop
lds
ins
inc
fstp
and
lods
mov
mov
inc
pop
outs
nop
mov
xchg
xor
push
mov
popa
sub
test
mov
or
pushf
aas
fisub
push
sti
inc
popf
push
mov
sahf
xchg
hlt
fs
mov
in
xchg
jbe
cmp
sub
mov
sub
loope
jno
dec
lock
into
or
mov
(bad)
push
call
pushf
adc
dec
test
dec
sub
push
fist
in
jo
adc
pop
int3
or
lods
cmp
or
cmp
fsub
add
push
push
call
andps
adc
repnz
dec
xchg
pop
sbb
stos
popa
jb
leave
push
push
adc
fisub
jg
fsub
shl
mov
test
cmps
aas
shl
mov
xchg
mov
ja
mov
cmp
out
fsub
or
fwait
fwait
jb
adc
js
clc
imul
cmp
push
in
pop
push
mov
jno
jns
xchg
mov
sub
ret
jmp
jmp
jo
cmp
dec
mov
retf
int
mov
popf
xchg
ds
lea
leave
xor
cmp
aam
ja
adc
xchg
xor
mov
pop
call
test
fistp
push
sub
pop
lods
and
cdq
out
lea
xchg
fs
jae
out
push
xor
not
repnz
push
mov
jbe
test
hlt
inc
fisubr
seta
mov
pop
(bad)
retf
out
or
ins
mov
fcmovne
ja
(bad)
dec
loopne
pop
sbb
push
xor
test
mov
jge
sub
cdq
mov
mov
xchg
mov
and
or
jp
inc
fisub
mov
add
int3
out
cs
outs
shr
jp
test
sub
addr16
fadd
xchg
add
jmp
cdq
fcom
jmp
pop
cmp
dec
std
sbb
cmc
rcl
shr
fiadd
xor
mov
jle
stc
xor
jb
mov
fisub
or
fs
stc
pop
sbb
scas
outs
xchg
xchg
push
push
fcom
ret
loop
inc
mov
jp
adc
jo
and
test
cmp
push
mov
or
xchg
add
in
jp
jmp
sbb
repz
fadd
xor
(bad)
into
ror
cld
xor
mov
repnz
mov
bsf
dec
aad
push
cmc
aad
add
fnsave
mov
xor
xor
pop
adc
xor
mov
cmp
or
mov
arpl
scas
outs
add
mov
js
addr16
pop
call
mov
mov
popf
loop
add
call
jge
dec
cmps
or
aaa
out
jl
clc
pop
dec
pop
cmp
xlat
clc
inc
aaa
mov
and
(bad)
xor
mov
xchg
dec
enter
lock
jae
mul
outs
dec
mov
fist
and
aad
ret
fisttp
push
cli
inc
ror
repz
leave
test
sldt
stc
(bad)
ins
out
push
mov
jp
outs
addr16
(bad)
jne
inc
fcmovb
sbb
mov
rcr
rol
push
addr16
popf
jp
out
adc
fild
fstp
fidivr
adc
mov
stos
xchg
xchg
repnz
or
jg
aaa
xchg
mov
mov
cmp
mov
repnz
movs
(bad)
lock
fidiv
mov
loopne
sub
aad
nop
pop
and
stos
mov
dec
push
dec
xchg
or
inc
cmp
das
xchg
fcom
test
mov
and
sub
push
data16
ja
repnz
test
push
in
pop
sub
ret
push
add
and
js
mov
dec
pop
mov
or
rol
xchg
int
push
and
adc
gs
xchg
xor
sub
outs
pop
dec
loop
jae
mov
jp
xchg
xor
jle
shl
jmp
aam
mov
mov
les
push
sub
fdivr
pop
cs
retf
retf
in
xor
adc
sub
fbstp
cmps
xor
mov
mov
mov
mov
adc
dec
(bad)
jo
cmp
push
jge
xchg
mov
cld
xchg
cmps
add
(bad)
rcl
mov
dec
sti
repz
inc
cli
call
imul
int
adc
and
mov
daa
nop
(bad)
cmp
push
jg
cdq
cmp
sbb
add
dec
fs
nop
gs
or
icebp
push
push
in
fdivr
in
call
ss
test
sar
popa
inc
xor
rol
mov
lds
sbb
mov
out
push
jl
pusha
movs
cmp
jmp
popa
imul
js
mov
or
fimul
int3
add
mov
cmps
ss
mov
outs
add
popf
xor
shr
push
and
mov
jecxz
jb
push
pop
xchg
pushf
out
stos
jo
movs
or
jbe
repnz
jb
add
add
rol
cs
jbe
xlat
fcmove
cmc
inc
int
pop
std
movs
sub
mov
sbb
mov
jae
sahf
retf
mov
lock
cli
aam
and
popa
add
pop
jmp
inc
sub
stos
pop
xchg
es
bnd
sbb
push
push
(bad)
(bad)
jle
stos
dec
sbb
pop
loopne
dec
jge
rcr
popa
jns
and
push
ror
ror
add
in
sbb
or
xchg
push
add
(bad)
lods
sbb
sub
add
adc
push
adc
daa
push
out
or
nop
xchg
inc
fnstenv
movs
dec
pop
bound
pop
ds
add
icebp
test
or
pop
push
jae
pop
(bad)
jbe
ucomiss
test
push
sub
pop
or
sub
push
inc
shr
mov
sar
mov
xchg
xor
shr
jb
add
cmp
mov
mov
ja
shl
(bad)
ficomp
pop
jle
pop
jg
sbb
sbb
les
aaa
fidiv
xchg
lock
popf
das
jne
sar
sbb
ret
sub
mov
sbb
out
jle
not
push
add
push
pop
(bad)
in
add
ja
lea
xchg
jge
pushf
inc
pop
pop
pop
rcl
in
push
in
inc
jmp
jg
add
ss
ror
mov
mov
(bad)
das
stos
xchg
xor
cmp
or
mov
push
stos
adc
mov
or
jno
aaa
xor
pop
popa
gs
test
pop
push
pop
sbb
mov
iret
inc
scas
sti
xchg
fldenv
pop
mov
test
jg
js
or
inc
stc
push
loopne
mov
mov
scas
mov
sti
jns
jp
dec
mov
cli
push
loopne
push
stos
sub
dec
aad
fdivr
add
leave
lds
xor
cmc
jle
out
jl
int
jmp
inc
gs
fs
dec
mov
adc
outs
dec
mov
mov
pop
cld
int
jb
adc
mov
jl
fidiv
cmp
out
pushf
jno
xor
push
mov
and
xchg
and
(bad)
dec
sbb
jne
adc
(bad)
mov
enter
stos
inc
pop
loope
es
sahf
mov
or
or
cmp
mov
pop
dec
or
stc
gs
(bad)
or
add
rol
inc
sbb
call
bound
sub
sub
xor
mov
inc
packssdw
fwait
inc
or
outs
dec
movs
div
scas
mov
cli
lds
mov
cmp
daa
push
ror
push
and
cmp
pop
sub
out
dec
jne
mov
imul
push
pop
call
pop
xchg
in
dec
fild
cmc
xchg
dec
bound
cmp
test
ret
test
cli
ins
out
addr16
sub
in
das
mov
(bad)
adc
pop
sbb
and
xchg
jmp
push
mov
push
mov
repz
lock
das
sbb
imul
mov
mov
fs
test
ss
mov
clc
sub
xor
add
or
sub
das
mov
jge
or
xor
cmp
cdq
sbb
mov
xchg
lds
lds
adc
jecxz
add
and
dec
fs
fstp
enter
shl
stos
xchg
ds
mov
add
xor
adc
fadd
sub
jg
push
ins
mov
fadd
mov
xchg
shl
cmc
push
rol
enter
ret
fsub
retf
pop
jo
je
sub
aas
or
arpl
outs
cld
lods
ins
sbb
call
inc
xchg
(bad)
inc
pop
pop
in
or
mov
aas
scas
jbe
cli
and
enter
in
add
jmp
add
aaa
adc
mov
jg
fisttp
cmp
sbb
mov
lods
dec
out
or
adc
sbb
xor
adc
(bad)
push
scas
je
fimul
scas
lock
mov
add
repz
(bad)
nop
inc
lods
jmp
loop
xor
dec
cs
scas
js
test
mov
pop
fisttp
enter
test
xchg
aas
add
les
and
push
and
int
add
jb
shl
test
mov
pop
add
push
fdiv
test
add
add
arpl
xor
xchg
(bad)
arpl
cmp
in
sbb
mov
adc
push
add
mov
sbb
dec
mov
dec
cmc
cwde
jb
lods
aas
sbb
sti
sub
(bad)
ins
mov
aam
inc
or
xor
cmp
inc
lds
popf
xchg
jg
inc
aad
jb
mov
mov
inc
xor
jbe
push
inc
ret
mov
sub
mov
adc
xor
lods
jbe
or
push
jo
imul
mov
popa
hlt
pop
adc
call
fcom
inc
out
(bad)
fcos
sbb
dec
jnp
cmp
fwait
dec
or
loop
push
pop
mov
cdq
push
mov
inc
pop
dec
das
ins
leave
loop
aaa
fadd
push
adc
popa
out
inc
outs
repz
stc
adc
mov
int
pushf
pop
js
rcr
shl
xlat
inc
sbb
(bad)
das
or
pop
pop
sub
cmps
mov
mov
ret
ret
mov
jmp
(bad)
stc
ds
jns
fld
out
test
repz
mov
test
mov
and
lock
or
jmp
pop
pop
retf
jecxz
cmp
pushf
xchg
and
fadd
in
fidivr
add
mov
add
out
hlt
jo
sbb
enter
rol
cmp
dec
push
outs
mov
pop
jbe
add
les
addr16
jl
mov
add
cmp
jle
sbb
push
test
ss
mov
sub
pop
idiv
or
ins
sub
xor
hlt
int3
adc
test
das
mov
pop
jge
mov
rcr
ja
(bad)
pop
dec
popf
mov
ffreep
sbb
xchg
test
cmp
mov
pop
out
out
ret
sbb
cmp
icebp
fisubr
push
jg
mov
int
(bad)
in
pop
jmp
aaa
mov
lods
shl
push
call
add
shr
sahf
test
adc
fadd
mov
jno
push
int
jecxz
mov
es
dec
movs
and
push
rol
data16
or
test
lods
cmp
ret
mov
or
sbb
es
repnz
es
int
and
cmp
sub
(bad)
jno
mov
inc
mov
jb
out
in
outs
pop
inc
xchg
add
sub
and
shl
cmp
xlat
push
xor
movs
mov
xchg
inc
(bad)
aad
movs
xlat
mov
xor
retf
or
stos
pushf
sub
lea
mov
stos
xchg
mov
loope
sbb
jge
(bad)
out
imul
es
sub
test
scas
or
inc
cmp
movs
int3
(bad)
mov
add
popa
mov
push
push
push
push
jnp
in
fwait
mov
adc
std
(bad)
jmp
loop
fild
cmp
mov
in
sbb
mov
pop
cwde
or
xor
cmps
cwde
jb
cld
not
jae
jne
je
je
pushf
inc
or
movs
mov
lahf
push
ret
jo
fst
popa
repnz
jne
push
jno
mov
push
add
std
pop
paddsb
mov
push
jbe
xchg
aam
jl
(bad)
xlat
mul
inc
ds
retf
mov
push
test
loop
sar
mov
mov
out
pop
cwde
dec
pop
movs
push
push
adc
pop
jle
mov
and
retf
(bad)
into
pop
pop
clc
repz
pop
ins
movs
retf
fnstcw
sbb
(bad)
mov
outs
and
mov
out
fcom
out
dec
mov
adc
push
mov
mov
std
adc
lods
add
std
mov
adc
push
mov
mov
sub
into
xchg
mov
dec
les
mov
fs
sbb
push
cs
xor
sbb
popa
cmp
(bad)
nop
fld
sbb
out
add
es
out
jae
mov
pop
jecxz
fistp
push
sar
fst
inc
sub
push
sub
and
clc
xchg
int
xor
(bad)
out
and
lock
pop
fistp
mov
shl
pushf
xor
les
fdivr
or
arpl
int
out
sbb
movs
mov
jne
jne
or
fldcw
leave
daa
ins
clc
adc
ficom
push
cmp
cdq
jne
push
sbb
pop
push
pop
icebp
mov
mov
leave
bound
int
mov
cli
dec
leave
(bad)
jmp
outs
xchg
retf
mov
mov
dec
xlat
adc
(bad)
popa
sbb
cs
(bad)
rcr
in
sub
jo
loop
fisubr
inc
mov
push
out
xchg
lahf
mov
xchg
cmp
xor
loopne
cmps
xchg
cmp
(bad)
pop
in
fyl2xp1
and
fs
mov
cld
xor
inc
movs
push
mov
stos
ins
push
fld
lahf
pop
imul
cmp
movs
xor
pusha
dec
pop
movs
cs
push
sub
fidiv
(bad)
cmp
not
push
and
les
fst
ret
mov
mov
ficom
inc
dec
sbb
push
aad
mov
(bad)
mov
lods
and
fbstp
cmps
cmp
jae
bound
jmp
in
lock
jbe
xor
xchg
in
mov
xchg
pop
rol
cwde
jnp
inc
movs
iret
sbb
mov
inc
xchg
test
pop
std
inc
loop
push
sti
test
add
or
jns
push
out
addr16
xchg
add
sahf
inc
push
loopne
jecxz
(bad)
sub
inc
xor
jmp
mov
out
inc
mov
xor
jmp
addr16
in
loope
pop
pop
xchg
inc
mov
jne
ror
clc
xchg
movs
cmp
xor
ins
int
adc
mov
add
loopne
push
or
add
xlat
cmp
lock
mov
leave
icebp
jb
popf
pop
jne
cs
xor
or
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
je
add
cmp
mov
movs
pop
(bad)
mov
add
mov
retf
sbb
push
xchg
push
mov
je
hlt
cmps
and
rsm
fcom
push
fild
mov
in
je
xchg
pop
jns
xchg
mov
mov
inc
stos
xchg
in
sub
(bad)
int
out
fadd
outs
jp
push
mov
pop
or
dec
lds
inc
and
mov
add
leave
out
adc
jb
ds
jmp
sub
add
cmp
cdq
stc
push
lock
push
repz
fisub
fdivr
in
push
add
inc
xchg
mov
nop
shl
je
inc
test
sti
hlt
lods
adc
jbe
fwait
adc
call
sbb
add
clc
jo
popa
add
cmps
dec
add
mov
repz
mov
out
mov
retf
pusha
mov
jmp
pop
lahf
ss
(bad)
int
xor
(bad)
cmps
jecxz
popa
es
iret
(bad)
test
jmp
nop
cwde
and
or
lahf
add
push
(bad)
std
sahf
pop
leave
mov
in
in
xchg
jmp
adc
xchg
pop
xchg
dec
pop
repz
loop
outs
nop
sub
add
and
adc
mov
pop
loopne
call
add
nop
xor
xchg
movs
outs
jns
je
sub
push
outs
sub
pop
rcr
les
(bad)
aaa
push
ret
ds
inc
mov
mov
int3
mov
iret
scas
ret
dec
sub
movs
pop
sbb
cmp
mov
cwde
cmc
sbb
loope
mov
aam
ret
rcr
xchg
cmps
(bad)
mov
les
mov
addr16
fild
xor
out
loope
(bad)
dec
push
cmc
movs
or
jmp
ins
int3
cmp
add
daa
push
pop
mov
xchg
mov
pop
out
xchg
bound
rol
test
push
push
std
xchg
xchg
in
adc
(bad)
or
sahf
xor
(bad)
clc
mov
pop
pop
cmp
out
jg
fadd
push
imul
xchg
mov
push
daa
xchg
les
sahf
jae
xor
out
div
js
pop
fsubr
out
xor
aam
nop
mov
add
xor
aas
mov
ds
lock
and
push
inc
add
hlt
mov
pop
add
cdq
and
pop
jmp
outs
enter
push
out
add
xor
stos
dec
aas
pop
pop
dec
mov
int3
sbb
sti
dec
xor
xor
jmp
daa
dec
loope
and
cmp
out
fisttp
cmp
adc
mov
xor
pop
push
cmp
clc
cld
dec
jbe
(bad)
je
shl
xor
and
sahf
test
aaa
sbb
sub
fisttp
idiv
xchg
sub
jnp
retf
pop
in
jno
xchg
jne
inc
mov
loop
pop
jg
push
(bad)
cdq
cmc
push
mov
cwde
nop
cmc
mov
movs
shl
mov
jecxz
lods
shr
xchg
mov
xor
jbe
aaa
dec
shl
lock
adc
inc
data16
push
in
add
ficom
jle
lds
dec
call
jle
xchg
push
inc
retf
xor
das
xor
mov
adc
and
push
or
mov
call
movs
jmp
mov
cmps
cmp
ins
pop
xchg
mov
cmp
std
fcom
div
lds
div
lock
inc
movs
stc
push
mov
pop
popf
pop
popa
int3
pop
push
cmp
mov
adc
stos
cmp
xchg
movs
in
shl
jl
pop
mov
jb
lds
psraw
(bad)
sti
jmp
ret
add
inc
ret
or
xchg
add
sub
add
scas
sbb
push
lea
and
sub
ror
inc
ds
cmps
or
adc
jbe
clc
fidivr
jno
pop
sub
cmps
cmp
jl
jmp
(bad)
xor
dec
adc
rol
adc
add
cwde
push
pop
mov
inc
sub
call
and
sub
inc
xor
xchg
inc
out
add
in
and
cmps
jp
daa
mov
ins
ds
push
jecxz
scas
bound
sbb
scas
or
mov
nop
fcomp
push
pusha
mov
ror
unpcklps
pusha
clc
das
sub
push
cmp
xlat
and
cdq
jg
loope
push
sbb
xchg
popf
xchg
(bad)
fdiv
push
and
adc
xor
push
lds
mov
push
jns
mul
scas
fnstenv
rol
jle
xor
addps
mov
push
stos
jne
test
aas
arpl
les
std
sub
ret
dec
sbb
fs
dec
and
xor
outs
push
dec
push
push
xchg
ds
bound
and
ins
xlat
or
test
mov
sub
or
retf
int3
cmp
or
stos
mov
jbe
mov
xlat
fwait
inc
push
repz
adc
xor
dec
daa
and
test
pusha
sbb
inc
call
jae
hlt
movs
sbb
cmp
sub
jle
in
in
or
push
add
and
adc
sub
lock
outs
mov
pop
cmp
xchg
mov
adc
ret
xchg
cld
jo
loop
jns
aaa
fadd
push
sbb
popf
sbb
dec
or
call
fwait
mov
adc
test
ins
fdivr
mov
(bad)
fstp
lock
dec
cli
push
xchg
and
inc
jp
push
in
out
and
inc
pushf
xchg
loop
push
ficomp
and
cdq
cmp
cmp
inc
imul
cdq
jle
ds
mov
je
and
pop
mov
bound
stos
inc
mov
add
push
adc
clc
les
adc
push
pop
inc
iret
dec
jae
enter
adc
mov
add
retf
mov
inc
xor
jg
cmp
shl
cwde
xchg
ret
inc
sub
enter
or
mov
add
stos
add
add
shl
pop
sub
cmp
dec
fstp
in
push
xor
(bad)
mov
(bad)
loope
es
xchg
xor
pop
sub
je
fs
dec
ds
dec
stc
mov
xor
xchg
sub
test
(bad)
jb
jae
pop
inc
int
mov
xor
fdiv
inc
add
sbb
dec
xor
sar
push
xor
pop
lds
daa
in
test
dec
fldcw
cmp
cmovo
fisubr
sub
neg
jne
sbb
push
nop
dec
inc
sub
and
fs
sub
out
(bad)
sbb
fisttp
out
mov
or
and
jmp
lock
pusha
es
cmp
(bad)
sbb
std
fwait
ror
push
(bad)
fsubr
add
mov
jo
sahf
cld
pop
add
adc
or
xchg
cld
push
loopne
adc
les
ret
bound
aam
or
jb
loope
mov
int
push
dec
aad
pop
retf
rol
jnp
sbb
int3
retf
jns
lea
jns
(bad)
fcom
pop
cmps
push
xchg
jmp
loop
cdq
stc
cmp
test
sbb
repnz
and
push
icebp
push
fst
in
mov
popa
cmc
sbb
fst
mov
cdq
mov
pop
add
ins
iret
test
xchg
fwait
jne
pop
mov
iret
or
add
imul
mov
ins
popa
into
icebp
fucomi
sub
sbb
movs
test
ror
mov
call
ins
outs
shl
test
xchg
and
loopne
sub
add
sbb
into
loope
mov
mov
lock
fs
jo
(bad)
sahf
xchg
push
mov
mov
add
retf
add
ins
stos
mov
ss
xchg
adc
loop
dec
repz
xor
pop
sbb
int3
and
ret
ja
jl
lahf
in
mov
cmp
ins
pop
jno
loop
test
xor
jmp
and
or
stos
scas
dec
fiadd
clc
sar
add
xor
js
sub
dec
shl
cwde
dec
push
cmp
mov
scas
ins
ins
mov
leave
adc
sub
shl
repz
(bad)
fadd
jl
inc
jns
dec
mov
jl
cmc
ins
mov
loop
mov
gs
rol
mov
in
stos
cmp
mov
jge
popa
jp
jbe
aad
dec
cmp
jg
cdq
jns
es
stos
cwde
jle
add
nop
sti
mov
inc
pop
mov
sbb
dec
popa
(bad)
dec
pop
jno
mov
outs
jns
clc
in
retf
sub
sub
loopne
retf
push
push
or
or
je
dec
test
xchg
dec
ja
dec
sbb
dec
xor
dec
cwde
push
scas
pop
inc
in
outs
or
xchg
leave
sbb
test
shl
sub
sar
cli
mov
jb
frstor
jmp
fist
xor
adc
and
jno
xchg
bound
popf
and
inc
and
pop
mov
fdiv
adc
ins
jl
repnz
inc
popf
aam
inc
movs
pop
adc
cmp
fidivr
xchg
daa
les
in
pop
pop
pop
xchg
add
bound
push
mov
arpl
xchg
mov
test
loop
mov
fidiv
data16
mov
movs
fdivr
cld
arpl
enter
rcl
test
lock
lahf
or
loop
dec
aaa
bound
pop
xor
fdivr
cli
into
ins
stc
cmps
ins
out
xchg
shl
rol
add
push
mov
dec
or
outs
mov
imul
xchg
push
push
(bad)
scas
repz
mov
mov
mov
inc
(bad)
mov
xchg
out
ins
in
(bad)
and
pop
mov
or
xchg
leave
sub
ret
imul
or
mov
jb
repz
sub
cmps
cmp
and
xchg
fidiv
mov
iret
test
lahf
cmp
and
fnstsw
xchg
push
lds
test
fnstenv
es
imul
lahf
xchg
pop
mov
sar
sbb
cmp
add
int
push
ret
call
out
cmp
jb
or
mov
cmp
sub
xchg
(bad)
and
jbe
(bad)
sub
out
out
fldenv
cmps
js
inc
fisttp
and
cmp
inc
in
retf
pop
ds
mov
jb
daa
dec
enter
mov
mov
(bad)
adc
mov
mov
mov
addr16
mov
jo
ret
rcl
imul
sub
jl
(bad)
xor
xchg
adc
cwde
inc
jno
and
push
push
cs
mov
mov
and
mov
movs
dec
mov
ret
ret
cli
out
dec
adc
fidiv
or
nop
out
test
das
push
mov
scas
or
pop
(bad)
xadd
imul
add
div
cmp
sub
iret
outs
outs
jecxz
dec
es
sbb
not
dec
popf
add
xchg
cmps
inc
pop
mov
into
das
and
aad
out
in
cmc
retf
dec
stc
loopne
movs
lods
mov
icebp
cmp
fist
rcl
sub
mov
test
jg
inc
cmp
lock
cmp
out
pop
jo
imul
in
(bad)
aam
cmp
jge
pushf
mov
add
sub
xchg
sar
and
neg
aam
push
loop
adc
out
xor
push
(bad)
mov
addr16
push
pushf
clc
enter
or
pop
mov
or
daa
adc
push
rol
cwde
mul
retf
lods
push
in
mov
cmp
imul
lods
add
push
xor
dec
inc
push
ins
fst
into
or
dec
xor
or
call
adc
jmp
ins
or
in
dec
jns
or
xor
mov
(bad)
imul
and
jo
sub
dec
mov
push
pop
jecxz
retf
cmps
inc
jae
sahf
adc
fdivr
mov
xchg
cwde
out
cli
xlat
(bad)
xchg
pop
push
add
fucom
nop
hlt
addr16
bound
rcr
cmps
outs
push
or
dec
aas
scas
and
jmp
cdq
cmp
jbe
xchg
stos
pop
xchg
dec
retf
jp
pop
mov
push
fadd
or
and
daa
lods
mov
cli
mov
inc
movs
xchg
inc
lods
cdq
test
pop
shl
test
sahf
lea
popa
xor
fiadd
mov
pop
test
iret
dec
add
cmp
arpl
(bad)
movs
cmp
xlat
inc
mov
pop
jne
mov
jecxz
push
(bad)
add
iret
cmp
jg
arpl
hlt
cwde
add
fist
and
or
es
jl
and
les
xchg
jg
fxch
je
xchg
mov
mov
pop
inc
ins
xor
cmc
loop
add
enter
and
int
or
scas
push
clc
aad
inc
sti
sub
retf
in
sbb
xchg
ret
adc
ins
ret
sar
dec
mov
mov
xchg
out
loopne
mov
lods
jmp
and
add
js
js
sub
xchg
sbb
mov
push
(bad)
out
push
fiadd
ins
or
mov
mov
bound
inc
std
fild
dec
add
inc
in
xor
fbld
or
mov
add
stos
mov
jg
clc
xchg
sbb
cmp
pop
repz
dec
mov
dec
fwait
or
jl
mov
dec
loope
push
mov
es
or
or
mov
jbe
jbe
imul
mov
jae
es
mov
in
dec
sahf
mov
jle
lods
ret
movs
xchg
movs
clts
push
(bad)
mov
dec
imul
push
mov
xchg
sbb
je
xchg
mov
cmp
ret
les
icebp
xchg
js
scas
div
out
scas
popa
pop
daa
jae
call
inc
test
inc
mov
pop
xchg
test
sbb
add
pop
repnz
out
add
cmc
fadd
imul
(bad)
push
int
aam
scas
mov
imul
mov
movs
xchg
sar
in
mov
(bad)
sub
fcomp
xchg
stos
mov
mov
scas
sub
es
sbb
push
jns
(bad)
repz
dec
cwde
movs
ror
rcr
pop
push
and
inc
adc
or
ret
fwait
push
fwait
clc
pop
nop
sti
mov
lods
ja
mov
(bad)
mov
iret
pop
sar
clc
sub
sbb
pop
(bad)
ss
add
repz
sub
jecxz
push
das
cs
pop
xchg
add
or
jle
adc
push
mov
int3
inc
dec
and
sbb
outs
jbe
popa
sbb
dec
jb
out
out
add
adc
mov
lods
fidiv
xor
sbb
xchg
push
lods
sbb
cmp
push
scas
mov
xor
nop
add
adc
push
push
add
mov
stos
sar
loope
stos
add
mov
cmps
jecxz
sar
inc
and
pop
sar
daa
fisubr
int
cmp
jo
pop
(bad)
stos
xlat
adc
jb
pusha
push
fadd
data16
inc
ret
clc
out
test
(bad)
mov
std
(bad)
xor
mov
aam
mov
jb
pop
jg
cs
ins
call
xor
xor
retf
retf
icebp
push
loopne
out
jmp
cmp
jecxz
jbe
out
mov
int
xor
bound
mov
shl
jp
scas
rol
pop
call
push
add
shl
gs
(bad)
cmp
xchg
inc
fwait
xor
xor
jg
adc
fwait
pop
test
cld
daa
xor
mov
ret
push
inc
in
movs
loope
xchg
add
push
sbb
jecxz
fs
mov
fwait
or
out
in
cs
xor
out
pop
xor
mov
mov
cmp
ja
xchg
hlt
or
push
and
pop
mov
rol
(bad)
dec
outs
hlt
(bad)
jle
pop
in
xor
and
cmp
pop
cwde
sub
mov
push
lea
adc
in
out
movs
xchg
jo
and
xchg
and
push
push
add
ins
shl
movs
cmp
or
out
fbld
int
and
js
mov
fild
shr
loop
add
sub
fiadd
sbb
xor
jecxz
(bad)
xor
mov
loope
or
and
or
nop
fnstsw
retf
ror
scas
ins
pop
adc
in
ret
je
xchg
shl
pop
out
pop
sbb
mov
sar
bnd
dec
mov
or
jmp
cmp
push
cs
inc
imul
(bad)
lahf
ret
add
inc
cld
popf
sbb
retf
xchg
(bad)
xchg
pop
mov
xchg
fisubr
pop
aas
jbe
mov
je
addr16
test
enter
xchg
add
inc
fmul
pop
add
(bad)
retf
fmul
jmp
jb
sub
sar
xor
rcl
push
cmc
repnz
jmp
ins
xor
add
fimul
icebp
rcr
(bad)
pop
movs
fs
sbb
call
pop
scas
rcr
call
or
sub
pop
adc
aaa
mov
int3
sahf
inc
nop
iret
jno
ret
rol
nop
or
mov
cdq
mov
and
lods
out
jle
(bad)
shl
stc
mov
xchg
test
jmp
out
nop
adc
adc
gs
scas
and
pop
mov
add
sub
gs
div
add
and
(bad)
mov
movs
popa
xchg
inc
cmp
mov
call
xchg
fiadd
push
outs
sbb
sub
jmp
fnstenv
cli
in
pop
in
mov
scas
or
push
scas
mov
jmp
ret
js
add
sub
xor
rcr
inc
test
pop
push
jmp
mov
clc
cmps
jl
mov
out
or
les
push
loopne
mov
por
xchg
out
mov
pushf
std
xor
jle
sbb
cmp
xor
cmps
int
jo
push
dec
fmul
(bad)
int3
movs
mov
rcl
ins
test
(bad)
mov
jbe
and
int3
(bad)
mov
sub
test
jnp
jge
cmp
push
imul
mov
dec
dec
bound
mov
dec
(bad)
ss
repnz
adc
fwait
push
pop
mov
ins
repnz
lods
xchg
pop
data16
ror
cmp
cdq
fcom
cmp
ins
ds
std
xchg
pusha
mov
call
popf
xlat
gs
rcl
xchg
addr16
int
mov
out
pop
xor
push
inc
fs
rcr
pusha
mov
lods
retf
cli
pop
jmp
outs
int3
add
push
add
jne
fld
stos
add
push
inc
jns
fcom
push
sub
or
xchg
dec
and
pop
jecxz
bound
cmp
mov
pop
or
test
fld
sub
enter
jle
mov
sbb
push
into
aam
and
push
mov
sbb
cdq
loop
(bad)
clc
je
pop
into
inc
test
icebp
sbb
push
cmp
div
and
inc
mov
jmp
mov
xor
loop
jge
cdq
jns
mov
mov
xchg
mul
xor
fcomp
in
push
pop
xor
ss
popa
xor
out
xchg
dec
mov
outs
setno
scas
mov
add
loop
cmp
jnp
(bad)
nop
mov
mov
mov
iret
pop
out
mov
test
xor
or
scas
push
mov
adc
add
repz
jg
pop
sbb
cmps
push
xchg
dec
and
movs
or
adc
mov
jle
cs
inc
jae
add
sub
jnp
push
lds
push
jo
movs
int
shr
cmc
pop
call
imul
fnstenv
gs
fcompp
xchg
jp
dec
enter
loopne
push
xor
int
jmp
call
mov
rol
push
test
adc
shr
push
jecxz
pop
xchg
outs
les
jbe
rcr
(bad)
cmp
repnz
movs
scas
push
mov
loopne
pop
call
inc
repz
daa
jae
add
sbb
mov
sbb
in
ret
aam
icebp
jle
(bad)
cmp
xchg
and
mov
jnp
cmc
fcom
pusha
movs
mov
out
iret
stc
pushf
repz
out
in
inc
clc
add
inc
push
xchg
sti
sub
cmp
(bad)
adc
repnz
ds
pop
and
jae
xchg
xchg
lods
ja
int
jo
mov
jns
nop
lods
popa
cmp
dec
jmp
sub
mov
repnz
out
leave
pop
adc
imul
sbb
js
aam
ds
xor
mov
jno
out
scas
jle
ret
lahf
popf
jmp
idiv
inc
add
mov
pop
push
mov
ins
push
pushf
in
jno
mov
push
sbb
loopne
repz
push
jno
pop
and
and
or
jnp
ins
sub
and
sbb
cmc
jo
xchg
xor
int
imul
cmp
xor
cmp
jecxz
xor
dec
pop
jp
js
cmc
retf
jae
daa
dec
out
and
ficom
or
cdq
in
aas
sar
push
jo
jge
test
sbb
xlat
ins
imul
icebp
sbb
mov
std
inc
popf
mov
scas
gs
jle
(bad)
jbe
mov
push
sbb
adc
rol
mov
rcl
xchg
xchg
mov
xor
in
xlat
pop
jae
in
xchg
adc
xor
int3
lods
adc
fndisi(8087
(bad)
frstor
adc
dec
xor
and
lods
pop
push
dec
adc
repz
fadd
xor
jecxz
or
jle
mov
dec
jne
lds
out
je
pop
fs
arpl
(bad)
or
jmp
cmp
push
jb
pop
icebp
pop
aad
aaa
xor
cdq
call
cli
or
jge
sub
pushf
mov
push
sub
mov
shr
pop
sbb
lock
inc
inc
les
fst
stos
repz
test
ds
popf
icebp
mov
add
push
lods
inc
adc
sbb
lods
adc
xchg
stos
jns
stc
push
fst
scas
lock
push
stos
test
frstorw
(bad)
jle
cmp
pusha
mov
sub
loope
arpl
fdiv
(bad)
mov
mov
and
gs
xor
dec
daa
xchg
fucom
adc
lock
jmp
cmps
ret
pushf
sti
cwde
call
cs
sbb
dec
sbb
sbb
sub
xchg
mov
adc
push
xchg
inc
sub
ret
push
(bad)
scas
sub
xchg
xchg
fmulp
es
mov
jae
sbb
cmp
cmp
add
jmp
ins
mov
mov
xor
jns
movs
test
mov
add
mov
icebp
xchg
xchg
(bad)
fisttp
xor
ja
repnz
mov
xchg
daa
sub
mov
add
add
sbb
mov
rcl
or
icebp
je
aam
sub
data16
cdq
dec
rcl
xlat
ds
mov
mov
sub
push
xchg
xchg
int
push
cmps
push
cmp
int3
movs
xchg
jne
xchg
mov
cmp
or
out
and
loop
pop
out
push
aas
xchg
fwait
jns
movs
or
pop
cli
xlat
lahf
adc
(bad)
sbb
cmp
pop
or
cmp
push
xchg
add
sub
cs
jbe
ja
add
movs
mov
cli
xchg
lock
inc
inc
call
xor
fst
add
or
cmps
mov
cmp
jne
(bad)
das
pop
imul
mov
and
mov
in
rcr
scas
pop
jo
mov
ss
(bad)
shl
popa
jne
jns
imul
lods
cmp
push
cmps
lods
sbb
mov
outs
adc
into
daa
jg
sbb
dec
inc
push
push
cmps
repz
fistp
cmp
sbb
(bad)
add
pop
dec
inc
cmp
sub
push
mov
and
out
pop
mov
es
stos
fisttp
ins
out
push
jnp
fsub
imul
mov
gs
(bad)
jmp
mov
mov
push
inc
arpl
push
dec
sbb
dec
scas
out
ds
pop
pop
jmp
daa
mov
mov
rcl
pop
xchg
cmps
popa
fiadd
jl
fisub
mov
pop
daa
int
div
inc
test
mov
jecxz
aaa
adc
sbb
add
xchg
xchg
in
mov
pop
nop
imul
in
out
cmp
jmp
add
fcom
cmp
adc
inc
cmp
scas
mov
mov
scas
lock
mov
add
dec
pop
sub
retf
in
push
and
shl
add
les
out
mov
jg
pop
push
jmp
fwait
and
mov
mov
xor
fidivr
loop
cmp
inc
cdq
dec
movs
mov
in
and
mov
mov
das
cmp
inc
pop
pop
dec
inc
dec
add
mov
repnz
inc
mov
ins
xchg
mov
xchg
stos
stos
popa
jmp
call
jnp
popa
sti
mov
add
aad
push
(bad)
jg
leave
xchg
add
jne
cmps
push
cmp
cmps
pop
mov
dec
adc
inc
xchg
and
out
push
pop
mov
mov
rcl
cmp
add
xlat
ret
dec
xchg
outs
add
je
mov
dec
and
xchg
fadd
cmp
fisttp
ret
aad
ins
lahf
(bad)
(bad)
xor
fisub
xlat
pop
xchg
adc
sub
adc
mov
add
retf
cmps
sbb
repz
pushf
call
loopne
idiv
ret
lar
fadd
outs
clc
pusha
jle
fisubr
add
sub
adc
in
movs
sub
mov
xchg
stos
int3
fdiv
mov
sbb
xor
enter
pop
inc
(bad)
adc
dec
lds
or
daa
call
outs
add
and
pushf
fucomp
add
addr16
ret
pop
mov
shl
sahf
add
fs
mov
pop
popf
sbb
inc
xchg
leave
cmp
iret
clc
mov
out
xlat
ins
mov
aas
inc
loope
add
lods
jp
add
cs
mov
add
std
addr16
or
mov
arpl
mov
js
mov
clc
lock
movs
xor
sbb
sbb
jge
xor
pop
(bad)
aam
xchg
ret
mul
mov
mov
or
cmp
aad
popf
arpl
push
imul
ja
add
xor
mov
xor
sub
xchg
in
add
dec
stos
fadd
stc
sbb
push
or
adc
mov
pop
jo
and
or
cmp
scas
dec
mov
(bad)
jg
cs
in
adc
mov
xchg
mov
idiv
ins
shl
mov
sbb
xchg
jno
and
mov
push
sub
cmp
pusha
rcr
popa
test
add
cld
cwde
push
dec
mov
das
inc
dec
cmp
addr16
out
lods
imul
retf
lods
jmp
fcom
(bad)
xor
std
aam
cmp
(bad)
sub
adc
inc
mov
stos
cld
pop
mov
xor
add
ja
mov
retf
ja
ret
mov
inc
adc
nop
ss
ss
cmp
dec
xchg
mov
loope
mov
movs
call
fstp
jb
and
mov
stos
je
clc
ja
xor
fnsave
push
stos
xchg
push
(bad)
inc
dec
sub
jecxz
pop
mov
ins
sub
push
popa
xchg
dec
and
ins
pop
xor
shl
dec
neg
push
pop
into
cmc
rol
sbb
retf
dec
mov
clc
mov
add
int3
jbe
sbb
push
jg
test
dec
add
or
pop
fidivr
ins
sub
popa
iret
pop
addr16
dec
jmp
mov
fldz
jg
push
aam
js
xor
jle
sub
movs
lods
rcr
(bad)
unpckhps
xchg
rol
or
sti
lahf
mov
and
hlt
add
(bad)
fimul
(bad)
sbb
int3
fisubr
adc
push
ds
and
mov
cs
mov
xor
xor
shr
inc
jge
nop
mov
adc
mov
jne
push
sbb
lea
jb
inc
mov
ja
pop
jne
sbb
call
cmps
leave
cld
dec
call
add
push
sub
jecxz
xchg
jg
dec
hlt
aam
push
sub
loopne
mov
jne
(bad)
je
add
jecxz
lds
jl
ins
dec
fild
iret
push
jl
mov
int3
enter
or
gs
add
fiadd
pop
add
inc
push
adc
push
(bad)
jl
sbb
loope
jl
mov
addr16
sub
sub
push
jmp
xchg
loopne
rcr
inc
shr
aaa
sbb
daa
enter
jbe
cmc
daa
dec
arpl
call
cmp
sub
(bad)
dec
dec
jae
or
lods
lahf
xchg
mov
jnp
jle
jns
xor
or
fwait
mov
inc
add
loop
ja
add
rol
les
retf
out
dec
mov
mov
std
jmp
push
jno
mov
aaa
xor
inc
(bad)
lea
scas
inc
fisub
mov
call
cmc
mov
add
scas
adc
cs
sbb
or
adc
lds
dec
adc
sbb
or
(bad)
jle
mov
mov
lds
xor
adc
jg
ffree
fwait
imul
cmc
and
nop
mov
test
hlt
es
or
loop
xor
inc
in
xchg
sub
hlt
cmp
push
std
lea
sub
mov
lock
mov
clc
lds
imul
jmp
(bad)
cmp
dec
aas
cmp
addr16
xchg
loope
(bad)
dec
or
stos
cmps
data16
out
(bad)
pop
push
push
data16
add
jle
mov
stos
xchg
xchg
or
enter
popa
xchg
cmps
push
test
fdivr
push
cmp
xchg
push
movs
div
rol
mov
shr
cmps
in
cmp
sub
jnp
lea
cmp
xchg
or
cmp
sbb
add
retf
dec
xor
or
add
mov
and
xor
aaa
in
cmps
mov
mov
inc
mov
cmp
sbb
out
xchg
sahf
sub
and
gs
int3
bound
mov
push
cdq
jmp
aam
sub
nop
cmp
mov
inc
je
or
mov
cdq
es
movs
mov
push
js
cmp
push
es
jb
lea
ror
or
jge
call
jmp
(bad)
aas
(bad)
dec
fisub
cmp
pop
or
call
push
and
test
fcmovu
je
pop
inc
mov
cmps
cmp
dec
inc
gs
lea
repz
jne
jge
pop
(bad)
loop
in
(bad)
dec
outs
fs
int3
mov
(bad)
aaa
out
idiv
outs
dec
frstor
sub
mov
xchg
addr16
mov
(bad)
jle
jns
inc
mov
cdq
pop
lds
add
dec
jge
dec
cmp
(bad)
jl
and
repnz
cmp
in
fwait
das
xlat
add
retf
popa
mov
jl
xor
test
mov
sbb
nop
aaa
fs
dec
add
sbb
int
movs
and
adc
ds
xchg
ret
fnstenv
push
(bad)
std
addr16
shl
ja
and
scas
leave
and
jae
sbb
fisubr
inc
xor
jge
pop
cmps
outs
pop
xor
lock
mov
call
out
cmp
jp
and
mov
(bad)
mov
and
aam
ret
or
pop
push
or
nop
in
dec
xlat
rol
lahf
jle
mov
(bad)
pop
inc
(bad)
rol
mov
das
dec
inc
sti
ficomp
or
add
lds
dec
mov
fdivr
mov
stos
jno
neg
dec
jae
adc
xchg
inc
sbb
add
xchg
mov
lods
mov
mov
gs
dec
lods
sub
in
xor
jbe
jns
mov
pop
push
popa
jmp
std
stc
int
inc
cmp
(bad)
pushf
xor
cmp
mov
pop
int3
or
jl
lock
and
inc
xor
icebp
(bad)
mov
out
ficom
fnstsw
push
fs
jmp
jns
mov
int3
sbb
loope
lods
xor
sub
add
mov
jmp
xor
jge
pop
aam
jmp
sub
in
inc
inc
sbb
jg
neg
and
ror
dec
xor
(bad)
add
arpl
js
repnz
fst
sub
test
(bad)
cli
xor
sub
inc
stos
test
lock
adc
enter
cld
and
fnstcw
ins
add
mov
imul
aas
cmps
rcl
enter
and
aad
and
fwait
pusha
add
mov
push
cmp
test
cmc
nop
xor
aam
movs
cdq
dec
xchg
lea
imul
fs
sahf
movs
gs
push
inc
push
mov
mov
fidiv
add
cmp
das
jnp
loopne
outs
adc
sar
mov
pop
push
add
shl
leave
inc
or
ret
or
mov
sub
xor
(bad)
sub
(bad)
dec
add
sbb
pop
test
stc
scas
mov
jbe
dec
retf
sar
mov
mov
loope
ins
pop
repz
or
test
aad
ss
mov
xchg
sahf
mov
sub
and
add
retf
dec
imul
dec
xchg
mov
push
fwait
std
call
int
sbb
inc
adc
mov
daa
aas
movs
out
xlat
fisttp
mov
leave
fidiv
les
or
out
mov
cmp
movs
stc
or
sar
mov
(bad)
mov
dec
mov
je
f2xm1
dec
cmc
inc
adc
icebp
xchg
inc
aad
lock
ret
loope
pop
dec
mov
leave
imul
pusha
fnstcw
popf
in
(bad)
and
jns
dec
lods
add
pop
fwait
ja
rcl
fiadd
jg
mov
outs
es
fnstsw
mov
cmp
sub
into
movs
mov
das
sub
in
fs
xchg
cmp
and
loop
movs
fld
push
ja
inc
jne
mov
mov
pop
cmp
mov
mov
xor
rol
jo
stc
fdiv
pop
lahf
xchg
ror
jo
pop
and
jae
push
sar
xor
ss
sbb
fs
aas
and
out
inc
mov
jmp
sbb
sbb
in
loope
or
sub
cli
aas
pop
and
shr
sbb
or
mov
add
jbe
scas
imul
retf
sbb
addr16
je
repnz
push
mov
retf
std
(bad)
movs
sbb
cmps
jg
mov
cmp
int
xor
xchg
(bad)
mov
adc
mov
mov
mov
hlt
push
adc
in
leave
jmp
movs
add
idiv
(bad)
lock
pop
in
cmc
rcl
mov
ins
(bad)
or
mov
inc
(bad)
mov
shr
sahf
jo
lea
add
gs
out
and
inc
ins
mov
(bad)
arpl
cmps
cmp
pushf
cmp
mov
stos
xchg
movs
jnp
sub
sti
cwde
loopne
inc
pop
imul
inc
push
or
mov
and
sbb
adc
cdq
shl
or
lahf
stc
xchg
shr
scas
inc
xor
gs
in
xchg
(bad)
sbb
jb
loope
ret
imul
imul
cmp
leave
leave
gs
cmc
hlt
nop
push
pop
sbb
es
out
outs
call
jmp
ficomp
movs
mov
push
cmps
cmp
jnp
mov
add
sldt
scas
(bad)
aam
shl
jecxz
rcr
push
mov
or
in
(bad)
cmps
mov
push
nop
or
sbb
mov
sub
pmulhw
sbb
mov
adc
or
ins
push
pop
add
or
push
das
sbb
xlat
lods
rcr
fcmovu
mov
aad
mov
mov
repnz
and
jmp
jl
test
mov
push
dec
add
push
add
mov
pop
sub
int3
inc
and
sub
xchg
(bad)
ss
mov
daa
inc
dec
cmp
jmp
push
lahf
test
arpl
rol
add
pop
stos
and
inc
push
fiadd
stc
test
das
sub
or
mov
call
cli
gs
push
push
add
xor
cmp
out
clc
sbb
inc
out
inc
call
dec
lahf
push
push
lods
or
xchg
mov
ret
mov
int
jne
cwde
mov
int3
mov
iret
int
adc
movs
cmc
aas
cmp
xchg
in
add
mov
xchg
adc
inc
xchg
or
mov
sti
xchg
adc
jp
pop
push
mov
add
fxch
mov
cmp
sti
sbb
rcr
orps
pop
bnd
push
imul
inc
jge
or
xchg
repnz
mov
scas
and
movs
pop
xor
add
hlt
xor
out
gs
add
dec
das
fst
push
shr
js
ja
add
adc
push
ja
and
cdq
inc
call
xor
in
je
adc
cmp
repz
mov
cmp
lods
jl
jmp
dec
out
cmp
xor
dec
mov
cli
lahf
inc
sbb
loopne
push
outs
es
les
push
inc
add
stc
push
jge
movs
xor
pop
in
push
inc
int
je
xchg
adc
add
in
pop
mov
shl
xchg
mov
call
jecxz
arpl
(bad)
lods
jns
mov
daa
and
mov
out
push
push
lea
(bad)
adc
and
mov
retf
fcmove
mov
adc
push
outs
mov
retf
test
sub
xchg
dec
ds
dec
(bad)
sub
xchg
xchg
hlt
test
sbb
xor
push
cmp
imul
inc
jg
call
pop
jne
mov
leave
mov
mov
mov
cmp
adc
repz
ins
dec
or
inc
mov
lahf
lock
and
mov
(bad)
std
inc
cdq
imul
fcom
jmp
xchg
nop
rcl
adc
iret
ins
and
push
daa
inc
sbb
sbb
inc
or
cmp
sub
xor
cmps
xor
add
out
movs
sbb
popa
call
inc
mov
je
add
push
mov
dec
retf
pop
mov
test
pop
inc
pop
mov
retf
pop
mov
mov
test
mov
and
(bad)
pop
fcom
xor
popa
dec
and
add
mov
bound
fcmovne
jmp
xor
das
pop
sub
js
xor
lahf
std
mov
cmc
call
mov
cmp
xchg
adc
das
mov
dec
fs
xchg
movs
fisttp
dec
add
ja
push
mov
and
aas
xchg
popf
ins
mov
pop
(bad)
or
xchg
and
mov
stos
adc
xchg
push
lods
out
cmp
jge
mov
cmp
jo
or
pop
in
cld
ds
jg
xchg
dec
mov
bound
outs
out
add
leave
xor
popf
stos
jne
stos
icebp
sub
push
das
pop
push
ret
pop
mov
adc
fsubr
pop
add
sub
pusha
sbb
gs
add
adc
test
cmp
push
in
xor
and
or
or
jmp
js
pop
pop
not
outs
cmc
cmp
cld
pop
cmp
idiv
xchg
xchg
(bad)
sbb
push
gs
add
lock
mul
mov
adc
push
cmps
push
add
jg
popa
pop
popa
fbstp
or
mov
je
push
test
mov
adc
adc
das
mov
repnz
mov
repnz
and
loopne
jne
mov
jle
scas
sahf
xor
sbb
loopne
lock
test
cmc
cli
jmp
(bad)
or
test
sub
pop
ins
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
mov
scas
call
jns
cmp
rol
sub
push
cmps
or
call
cmp
(bad)
mov
push
fistp
dec
(bad)
imul
dec
mov
stos
nop
popa
sbb
popf
fst
sbb
adc
imul
pop
push
(bad)
xchg
pop
jecxz
scas
xor
xor
neg
fcom
mov
sbb
call
aad
(bad)
xchg
pop
popf
mov
push
clc
mov
and
repz
adc
stc
jge
sub
retf
dec
cmp
ds
mov
xchg
mov
in
sub
aam
jnp
sbb
pop
das
pop
add
cmps
mov
test
pop
mov
ret
out
jo
add
mov
cmps
call
scas
bound
add
xchg
retf
fidiv
push
icebp
mov
sub
aas
ss
jno
dec
push
(bad)
jmp
outs
es
mov
repnz
pusha
dec
std
nop
in
dec
jge
inc
dec
adc
fadd
pop
imul
sbb
leave
out
les
lds
add
lods
imul
jns
ins
adc
cmp
adc
jle
cmp
push
aaa
adc
lahf
ficomp
and
add
push
movs
movs
xchg
shl
es
push
test
push
cli
fistp
push
xor
adc
jbe
xor
test
xchg
das
leave
ins
jl
jns
int3
or
jl
mov
popa
add
les
sbb
out
icebp
mov
xchg
imul
xlat
mov
and
aaa
aam
cmp
int
cmp
(bad)
jae
cmps
mov
push
cmps
lods
dec
pop
aaa
mov
mov
fsubr
pushf
aas
mov
out
cmp
sbb
lods
jecxz
cdq
enter
cmps
lods
sub
jp
lea
movs
and
dec
outs
jecxz
(bad)
or
lods
retf
popf
mov
mov
pushf
imul
and
xor
mov
jmp
cmp
xchg
xchg
shl
xchg
addr16
mov
movs
push
push
shl
fsubp
test
xor
add
call
cmp
jo
(bad)
into
pop
ins
cmp
push
das
mov
mov
mov
jmp
cmp
fbld
call
in
xor
push
pop
inc
cmps
push
les
ss
xchg
or
popf
push
lock
scas
mov
out
fwait
stos
add
imul
cmc
fisubr
aas
mov
sti
ret
mov
stc
leave
jns
fdiv
out
pushf
mov
xchg
jl
inc
xor
jg
mov
test
movups
push
loop
mov
fsubp
jbe
fld
push
inc
mov
push
xor
sar
pop
xor
adc
add
(bad)
enter
mov
mov
cld
mov
fnsave
sbb
int
dec
rcr
dec
xchg
mov
xchg
adc
mov
sahf
pop
sbb
rcr
adc
ror
lahf
div
add
cmp
shl
fidiv
call
imul
inc
sub
fistp
jl
jmp
fsub
lods
std
call
or
xor
mov
loopne
dec
std
push
adc
mov
retf
popf
or
movs
fs
xchg
xor
std
mov
xlat
inc
jg
mul
iret
in
(bad)
and
mov
test
shl
and
or
retf
pop
jle
sbb
dec
or
das
mov
or
dec
dec
in
inc
jno
ins
int
pop
dec
repz
std
mov
data16
xchg
mov
test
hlt
sbb
sbb
pop
or
push
pop
pop
cwde
out
les
sub
dec
bound
aam
ja
mov
or
frstor
sar
fild
jle
ins
xchg
outs
pop
jmp
loop
js
(bad)
mov
jp
leave
add
mov
ret
and
and
dec
pop
mov
mov
jle
repnz
stos
test
push
cmova
aad
inc
push
in
inc
add
pop
jbe
mov
jb
xchg
out
push
aam
ret
outs
inc
test
push
add
and
xor
push
shl
lahf
mov
ss
js
mov
adc
addr16
push
push
xchg
or
xor
xor
mov
(bad)
(bad)
cmp
das
arpl
xor
jg
cmp
adc
fnstcw
adc
cmp
int3
dec
outs
outs
fdiv
jmp
movs
out
xchg
dec
sbb
repnz
pop
jmp
pop
xchg
retf
je
sbb
(bad)
lea
dec
dec
push
xchg
ret
std
shl
lea
retf
repnz
push
dec
inc
pop
ins
sbb
inc
adc
sub
out
cwde
sbb
movs
mov
pop
std
dec
mov
sti
mov
in
xlat
popa
sub
movs
repz
and
add
lahf
fdivr
pop
mov
and
push
loop
nop
mov
mov
loopne
dec
xor
aad
pop
add
std
xor
jnp
daa
sub
and
stc
ds
mov
adc
or
arpl
shr
sub
bound
ret
push
repnz
ret
aaa
push
cdq
imul
dec
rcl
(bad)
add
dec
mov
sti
mov
(bad)
fstp
lds
arpl
pop
mov
xlat
adc
sbb
mov
pop
ret
(bad)
sub
or
mov
inc
push
out
cld
jmp
call
and
adc
ds
(bad)
stos
test
rcr
and
adc
retfw
and
arpl
loopne
jmp
push
loope
xor
fisub
dec
and
sbb
pop
mov
inc
pop
rcr
cwde
in
jecxz
(bad)
aaa
clc
push
loope
jmp
outs
ins
retf
hlt
popa
jge
lea
xor
movs
imul
(bad)
or
shl
mov
sub
add
into
popf
in
(bad)
leave
dec
je
out
std
pop
cmp
pusha
pop
mov
stos
cmp
loope
popa
sbb
fcomip
aam
push
and
and
xor
imul
sbb
cmp
out
cmps
and
or
pushf
xchg
mov
aaa
jno
ror
dec
mov
inc
inc
cmp
jbe
or
adc
cmp
mov
xor
shl
js
pop
mov
call
cmp
or
fbld
inc
or
shr
xor
(bad)
addr16
int3
mov
test
ja
dec
jmp
(bad)
pop
mov
push
imul
clc
fwait
xor
xchg
ins
mov
dec
stos
lahf
call
add
adc
jne
adc
ins
pop
jo
loop
adc
xor
sub
retf
ret
inc
in
push
mov
xor
test
adc
imul
adc
mov
in
call
push
popa
daa
popa
ins
sub
xchg
inc
cmp
aam
lods
mov
cs
fsub
sub
cmps
fstp
fwait
xchg
pop
retf
ficomp
cmp
adc
das
cmp
xchg
jno
scas
or
out
out
and
imul
icebp
fidiv
loop
push
jb
stc
mov
sbb
jge
(bad)
fmul
mov
cmps
cmp
(bad)
jmp
hlt
push
adc
add
(bad)
scas
jp
jae
pop
mov
popa
xchg
add
sbb
fidivr
ins
rcl
pop
mov
or
fcom
inc
pop
and
or
fsub
dec
es
outs
lods
push
pop
sar
mov
repz
jmp
add
sub
xchg
xor
adc
or
(bad)
and
call
retf
dec
adc
ficom
sbb
retf
mov
dec
mov
dec
pop
js
mov
in
inc
jge
jge
or
sub
sub
xchg
mov
shr
lsl
hlt
pop
sub
test
mov
lea
jl
mov
mov
fs
xor
xrstor
lahf
call
xchg
xchg
out
ins
jmp
mov
xchg
push
adc
popa
movs
jmp
mov
jb
dec
mov
sub
ins
adc
pop
stos
sar
test
push
or
hlt
loopne
ret
pop
inc
xor
in
or
sbb
pop
jnp
cdq
pop
jns
push
and
test
adc
cmp
dec
add
add
retf
fsubr
mov
stos
popf
mov
mov
mov
call
lds
adc
popf
and
jmp
xchg
jmp
fdivp
jnp
cdq
fcomip
(bad)
loopne
push
cmp
cdq
or
mov
pop
push
lea
ret
xor
shr
xchg
(bad)
mov
es
mov
icebp
fld
pop
scas
lea
xchg
popa
aaa
mov
mov
cmp
stos
or
push
repz
pop
add
into
pop
sbb
arpl
jmp
xlat
fwait
jge
and
test
dec
retf
push
inc
(bad)
jno
jl
mov
(bad)
mov
jge
test
push
or
or
out
xlat
jl
std
inc
add
add
mov
ret
imul
inc
mov
pop
xchg
push
shl
mov
ins
mov
add
sub
pop
(bad)
mov
mov
aad
mov
lock
pop
test
clc
sub
icebp
or
mov
nop
cmp
icebp
lods
rol
sub
daa
std
std
xor
aad
in
mov
out
pop
add
mov
fnstenv
popa
add
xor
cdq
jl
pop
or
dec
out
add
add
mov
aas
clc
and
out
xchg
fimul
(bad)
in
(bad)
push
inc
or
cdq
je
xor
sbb
out
xchg
push
cmp
adc
cld
or
mov
jecxz
pop
xchg
jae
daa
push
mov
jb
jae
mov
lea
push
test
add
add
xor
jb
xlat
dec
popa
xor
sub
out
aad
xor
adc
cmp
push
out
out
dec
adc
nop
imul
push
repnz
movs
lods
out
mov
leave
xchg
mov
cmp
sub
push
or
shl
js
adc
dec
cmp
cmp
loop
ror
push
shl
cld
mov
sub
mov
shr
fild
sahf
(bad)
cmc
lods
rol
in
mov
cli
repnz
dec
xchg
cmp
ins
inc
out
xor
sahf
pop
lock
adc
in
(bad)
ror
mov
movs
inc
or
push
fistp
push
sub
stos
mov
out
push
cld
repnz
jecxz
jae
add
jge
in
fidivr
leave
mov
mov
fnstsw
js
xor
ins
lods
xchg
les
test
out
fsubr
bound
iret
push
gs
cmc
sbb
jge
mov
fld
cmps
in
icebp
stos
cmp
cmp
int3
(bad)
icebp
daa
out
es
cmps
sbb
outs
sub
xchg
pop
ins
jnp
jmp
push
adc
lods
mov
fcomp
hlt
out
jb
into
(bad)
jo
(bad)
push
sbb
push
pop
jne
pusha
cmp
push
cli
out
sub
neg
arpl
stos
push
sub
jbe
xor
shl
or
push
cmp
aad
icebp
xor
jb
ret
out
mov
sub
adc
xor
xchg
fmul
jne
jmp
xchg
jbe
mov
icebp
dec
sbb
pop
mov
push
cmps
fwait
pop
fcmovbe
retf
push
stos
mov
xchg
inc
push
add
call
sbb
cmps
aas
cwde
je
xor
mov
enter
int
sub
sahf
unpckhps
pop
int
out
shl
lea
add
lods
mov
loop
sub
jecxz
shl
loope
outs
mov
ins
jecxz
rol
test
fist
pushf
xor
loopne
in
pop
shl
pop
push
cdq
in
fisub
dec
jg
cmp
sbb
or
inc
loop
imul
push
xor
into
aad
mov
pop
or
sbb
aaa
nop
fwait
pop
outs
fiadd
cld
out
aas
push
pop
sbb
add
aam
mov
shl
in
xlat
dec
cmp
sbb
imul
loope
add
lahf
cmps
inc
add
in
mov
pop
loopne
ret
scas
repnz
out
push
movs
mov
add
mov
out
sub
mov
push
int3
xchg
add
mov
out
addr16
jl
sbb
or
pop
mov
sbb
mov
rol
(bad)
int3
inc
or
dec
cli
mov
mov
mov
cwde
push
lods
jp
int
js
pop
stos
mov
(bad)
aad
mov
fidivr
(bad)
lods
xchg
cdq
stos
sub
inc
push
inc
push
mov
aam
lods
and
or
push
cmp
push
jae
test
sub
enter
xor
adc
loopne
or
push
push
lods
cdq
into
in
cmp
loop
push
xchg
lods
jae
jecxz
jne
inc
jmp
inc
adc
push
lock
loop
cmp
jno
xor
sbb
(bad)
pop
stos
pop
dec
dec
xchg
(bad)
mov
sub
nop
mul
fcomip
cmp
jae
cmp
cmp
pop
sbb
mov
cmp
add
in
mov
scas
in
fsub
mov
and
push
daa
mov
xor
ss
es
cwde
int
add
loop
adc
aad
mov
imul
dec
in
btr
push
leave
in
repz
xchg
out
push
cmp
cmp
adc
push
add
sub
imul
aaa
fsub
add
and
dec
outs
jne
pop
les
in
sub
test
or
push
sti
xchg
ins
aad
xor
jle
add
xor
ret
and
cmp
xchg
jmp
cli
sti
push
and
scas
jle
std
inc
xor
jle
xor
add
xchg
sub
push
sub
mov
ja
push
jl
es
(bad)
clc
(bad)
(bad)
cwde
cmp
push
stos
int3
ret
pushf
xor
or
cmps
jae
push
inc
ret
aas
ret
mov
cmp
cld
imul
pusha
pop
add
aad
mov
shl
in
adc
hlt
push
xor
jmp
jno
test
pop
add
cmp
fisttp
nop
and
jbe
mov
xchg
mov
push
or
adc
or
scas
(bad)
scas
es
leave
inc
cmp
repz
cmp
cmp
out
jnp
adc
cmp
jecxz
jle
push
pop
mov
pop
or
jns
mov
sub
pushf
add
push
pop
pop
push
or
sub
push
sub
or
rol
mov
in
jne
or
mov
cmp
mov
cmps
and
mov
xchg
cmc
jmp
or
outs
mov
sbb
or
dec
retf
cld
repnz
xchg
add
int3
cmp
retf
mov
xchg
dec
add
cmps
mov
jecxz
mov
sub
hlt
add
cmc
inc
sub
xor
push
xchg
pop
aas
push
pop
gs
(bad)
pusha
imul
or
out
and
movs
jne
xor
push
sbb
xchg
or
xchg
cmp
mov
cs
or
mov
out
jns
fnstcw
sti
sub
cs
out
pop
sar
push
into
cmp
aas
lahf
je
mov
xchg
stos
sbb
or
and
mov
sti
pop
xor
sub
dec
push
lds
or
mov
xchg
lods
mov
repz
push
pop
bnd
inc
or
or
ins
mov
push
xchg
sub
aam
lahf
cwde
test
add
xor
cmp
gs
cdq
dec
mov
out
fs
pop
xlat
loop
dec
test
cld
inc
fiadd
loope
push
push
lahf
inc
inc
stos
cmp
lahf
ds
movs
mov
stc
sahf
out
into
cli
dec
sub
out
lahf
mov
mov
(bad)
das
or
leave
mov
pushf
mov
outs
sbb
lods
push
xchg
out
mov
inc
inc
out
out
nop
mov
mov
xchg
rol
retf
cwde
or
ins
dec
bound
out
adc
into
inc
fmul
(bad)
loope
mov
ret
pop
aad
sub
dec
lea
push
std
cmp
and
jle
aas
daa
mov
test
ins
std
or
push
cmps
pop
iret
test
add
inc
gs
int3
cwde
or
imul
sbb
inc
ds
pop
cli
sbb
rol
xor
int3
sbb
or
aas
in
xor
ror
pop
add
adc
push
dec
adc
lods
test
mov
lods
mov
and
pop
aas
ja
mov
xor
(bad)
in
sbb
mov
test
sub
ja
loope
mov
jns
add
adc
mov
xchg
xor
iret
jno
mov
imul
mov
in
out
rol
push
in
adc
add
push
inc
jge
mov
pop
clc
adc
cli
stos
lea
call
stos
daa
mov
popa
jns
in
mov
jmp
dec
in
jmp
iret
pop
call
fld
or
shr
(bad)
aas
aas
push
fmul
leave
sti
popf
mov
jno
fist
jns
(bad)
cli
setno
fstp
popa
xchg
hlt
movs
jecxz
sbb
xchg
adc
and
cmp
jmp
jns
mov
inc
shr
mov
int3
(bad)
pop
and
mov
sahf
mov
add
push
jle
pop
inc
add
stos
xchg
sub
mov
std
test
pop
jbe
dec
cwde
test
stos
sbb
mov
pop
xchg
(bad)
fistp
into
popa
loopne
pop
fcom
stos
loop
adc
xor
int
test
push
(bad)
mov
movs
dec
popf
jp
js
lea
daa
inc
rol
add
sub
adc
sahf
cmp
mov
js
mov
hlt
adc
or
and
and
(bad)
mov
adc
jp
(bad)
call
cmp
lds
jb
add
xor
ror
add
dec
mov
xchg
mov
call
fcmovnb
rcl
fwait
jp
js
adc
sub
inc
adc
jg
sub
mov
call
sub
fisubr
cmp
(bad)
ror
les
scas
dec
sbb
cmc
sbb
mov
in
in
(bad)
pop
add
push
jmp
in
mov
cmc
mov
pop
leave
adc
or
mov
dec
or
push
pop
icebp
sub
push
cld
jmp
or
ret
xor
cmps
pop
ret
jle
add
or
sub
aam
shr
mov
and
popf
add
xor
aad
push
test
jge
mov
sub
loopne
icebp
xchg
add
iret
add
das
pop
sub
mov
mov
(bad)
cmp
mov
mov
inc
pop
push
lods
dec
push
jnp
pop
pop
push
js
scas
and
push
cmp
push
dec
test
inc
jmp
loop
jmp
cmp
rol
add
out
mov
dec
pop
leave
mov
(bad)
les
dec
leave
hlt
cli
mov
fcomp
push
shl
cmp
cmp
shl
rcr
mov
xchg
xor
inc
push
push
mov
fild
mov
call
dec
fst
xor
dec
push
jns
retf
adc
sub
push
xchg
inc
adc
adc
jecxz
ins
inc
mov
or
mov
add
mov
sahf
cmps
cmp
dec
fstp
(bad)
jmp
rol
xchg
or
cmp
jbe
add
jecxz
in
lods
aas
sub
xchg
mov
cmps
lea
std
or
popa
cmps
pusha
scas
sbb
push
mov
and
loop
adc
je
(bad)
clc
ds
in
sbb
cmp
fnstenv
adc
xchg
push
test
imul
sub
test
mov
mov
ss
out
push
cli
mov
cwde
inc
or
cmp
xchg
xchg
dec
shl
inc
jns
jle
int
hlt
pop
jmp
aad
mov
inc
xor
sbb
mov
push
xor
jmp
or
out
push
lahf
repnz
or
pop
push
sahf
or
lods
add
leave
xchg
xor
faddp
cmp
into
mov
mov
sti
cs
in
push
loopne
jp
pop
xor
mov
ins
popa
xor
xor
imul
daa
(bad)
mov
bound
lods
(bad)
adc
pop
lds
jns
loope
rcl
retf
repnz
lods
and
xchg
push
pop
out
int3
push
mov
inc
stc
add
pop
or
mov
leave
repz
into
push
out
shl
icebp
retf
std
or
aas
inc
dec
jp
fdivrp
push
push
mov
sub
fwait
jne
and
retf
push
inc
out
and
sahf
pop
pop
repz
into
mov
ror
stos
sahf
(bad)
pop
inc
xor
aas
cmp
mov
mov
pop
pop
(bad)
aam
jbe
and
or
cmps
dec
mov
push
add
into
cmp
icebp
gs
ins
imul
icebp
ins
rcr
popf
test
cmp
mov
pushf
mov
push
bound
jb
pushf
sub
mov
test
mov
clc
hlt
dec
and
out
sbb
mov
in
mov
or
mov
xor
push
and
push
inc
stc
pop
mov
jmp
dec
xchg
scas
pop
(bad)
out
add
xchg
nop
scas
lahf
adc
jl
sbb
dec
aas
jae
sbb
or
in
add
test
iret
fld
add
xchg
stos
(bad)
aaa
popa
mov
out
xor
mov
dec
xor
mov
leave
cld
test
mov
inc
stos
sub
mov
addr16
add
jae
xchg
xchg
xor
dec
xchg
fwait
and
push
loope
jp
js
ds
dec
loopne
ins
scas
xor
fs
jmp
div
mov
mov
or
sub
retf
xchg
inc
xor
push
lds
cmps
scas
mov
(bad)
lods
xor
sbb
sbb
sbb
add
pop
mov
pop
mov
adc
cmp
outs
rcl
and
push
aad
xor
cmps
jp
pop
js
push
mov
into
xor
scas
cmps
jl
pop
mov
mov
add
cld
fwait
mov
push
jmp
cdq
dec
sub
mov
or
and
ins
xchg
add
gs
jmp
clc
cwde
(bad)
test
cdq
jmp
(bad)
pop
xchg
add
inc
das
jne
push
adc
mov
sahf
mov
enter
cld
mov
pop
ret
ror
imul
je
jg
je
push
sbb
push
aas
cmps
popf
div
mov
xor
inc
inc
js
push
cld
mov
imul
test
dec
mov
icebp
or
push
pop
adc
mov
dec
dec
addr16
(bad)
retf
dec
mov
or
sub
xchg
fmulp
adc
jp
repnz
int
mov
jbe
ins
cli
ret
call
ret
cmp
popa
and
mov
mov
int3
xor
jge
pop
xor
adc
pusha
or
jae
pop
push
adc
xlat
cs
sbb
scas
(bad)
fiadd
and
jg
test
fs
and
sub
mov
jmp
or
or
lds
inc
and
outs
dec
push
lds
or
sub
test
cmp
(bad)
pop
cmp
pusha
fimul
les
das
adc
adc
rol
inc
pop
dec
rcr
or
xor
outs
shl
add
gs
hlt
lea
in
xchg
push
fdivr
xor
fdiv
enter
loopne
push
jmp
xchg
ffreep
mov
inc
inc
cmp
sub
mov
(bad)
das
sbb
imul
push
ins
inc
mov
mov
aas
jl
fnstcw
or
das
mov
xchg
mov
iret
(bad)
ficom
jge
call
sub
les
xor
jp
pop
add
xchg
std
xor
xlat
(bad)
mov
push
stc
xor
fidiv
pop
out
xor
or
popa
xchg
not
repnz
pusha
aad
outs
mov
repz
aam
cmp
lock
mov
and
jne
push
inc
in
mov
xor
and
xor
loop
add
stc
sub
or
add
pop
nop
in
ret
lods
push
pop
das
push
not
loopne
xchg
mov
(bad)
cmc
lea
mov
bound
dec
mov
mov
xor
jne
bound
or
rol
inc
(bad)
push
test
cwde
jmp
xlat
or
pop
data16
popa
pop
imul
mov
mov
out
sbb
adc
dec
jp
ds
ds
cmc
adc
jns
mov
loop
mov
int3
icebp
mov
mov
mov
pop
repz
out
bound
movs
nop
cwde
push
jg
(bad)
sbb
mov
add
push
cmps
push
adc
mov
cs
cmps
add
leave
mov
lock
xlat
jl
jb
adc
jg
pop
push
add
lds
jno
daa
retf
shr
xor
pop
cmps
stos
xchg
pop
mov
icebp
movs
cmps
dec
imul
in
xchg
push
add
inc
pushf
in
cmp
push
push
cld
jo
sub
dec
push
mov
ffreep
cmps
out
sbb
mov
mov
jmp
and
sub
sub
add
cld
sbb
loop
mov
sub
inc
xchg
cwde
mov
in
xchg
sub
mov
mov
shl
mov
jge
out
dec
xchg
mov
mov
test
pushf
mov
imul
fs
fstp
add
jmp
shr
xor
clc
ret
sub
sub
das
test
mov
xchg
xchg
push
dec
push
mov
call
addr16
mov
cmp
aas
mov
dec
sub
lods
xor
pop
out
test
clc
adc
add
cmp
sub
fisttp
pop
test
out
data16
dec
xchg
cmps
lea
cdq
retf
stos
mov
push
les
inc
fwait
jle
cmp
mov
dec
jl
fdivr
mov
stc
sub
retf
adc
jl
not
and
pusha
or
xor
stos
mul
jo
stos
std
cli
shr
call
or
xlat
jp
xchg
rcl
adc
mov
and
mov
add
mov
ds
stos
imul
push
adc
push
lods
sub
jmp
test
inc
stos
jbe
jmp
fld
inc
mov
in
or
cmp
cli
add
xchg
(bad)
adc
cmps
push
push
push
dec
push
mov
and
movs
dec
movs
mov
add
das
cmp
daa
sub
out
aaa
sbb
mov
xchg
inc
cld
xchg
test
adc
push
mov
mov
dec
inc
iret
dec
out
in
cmp
(bad)
dec
jmp
test
xrelease
push
repnz
mov
push
mov
lods
out
fdivp
out
inc
retf
and
fisttp
jl
cmp
pop
daa
mov
mov
(bad)
adc
cwde
inc
fxtract
arpl
daa
mov
call
dec
xor
pop
or
xor
imul
inc
test
mov
test
fisttp
ret
inc
jo
push
and
arpl
xor
mov
retf
mov
mov
sbb
sbb
mov
and
jge
test
dec
loop
push
movs
jmp
lods
rol
push
mov
push
and
call
and
dec
stos
mov
mov
fsub
xchg
iret
inc
sbb
fwait
jp
and
(bad)
out
das
jb
ret
add
push
mov
cmp
test
fld
idiv
arpl
jl
and
jo
sbb
jae
test
cwde
pop
ins
inc
jno
jg
addr16
pop
call
call
jle
retf
hlt
cwde
jb
fsubr
cmp
cmps
ins
stos
out
int
(bad)
and
popf
add
sub
call
push
jne
cwde
stos
jae
push
test
add
jns
dec
and
std
fld
test
or
out
jb
sub
(bad)
cmc
cli
clc
push
mov
mov
sbb
mov
cld
addr16
daa
mov
cmp
retf
sbb
das
sbb
(bad)
div
aaa
push
xor
dec
cmc
sar
retf
sbb
in
sub
das
cmps
mov
sbb
pop
fstp
sbb
stos
jmp
mov
out
jne
add
pop
xor
lea
dec
cmp
pop
jo
loop
f2xm1
mov
enter
vpcmpgtw
inc
pop
mov
or
push
add
nop
clc
mov
mov
add
mov
adc
(bad)
repnz
int3
dec
nop
out
jle
test
xor
pop
pop
sbb
leave
pop
(bad)
mov
fcomp
gs
xchg
adc
mov
aad
adc
fldenv
inc
int3
stos
or
repnz
adc
pop
mov
push
mov
(bad)
inc
xor
xchg
mov
retf
ins
aaa
in
xor
pop
imul
test
and
bound
mov
jmp
popa
pop
ins
and
adc
jle
outs
xchg
lods
jns
out
inc
cs
bound
mov
data16
push
inc
test
or
gs
stos
cmp
xchg
add
sbb
pushf
clc
(bad)
outs
cli
inc
mov
popf
fsubr
(bad)
hlt
mov
stos
(bad)
pushf
rcr
pusha
xchg
add
loopne
or
shl
xor
jns
mov
inc
cmp
inc
shr
jp
aas
fwait
jb
mov
sub
imul
fldcw
inc
sbb
pop
sub
loope
jmp
xor
add
mov
mov
cmp
retf
in
fisttp
fs
mov
in
dec
stos
cmp
mov
sub
add
push
xchg
sbb
mov
sbb
imul
outs
(bad)
cs
adc
mov
out
inc
push
push
jno
ret
rcr
pop
pop
sbb
add
movs
push
add
and
fmul
mov
mov
jne
mov
test
sbb
adc
mov
cmp
scas
fistp
and
cmp
cld
jnp
arpl
adc
or
loope
pop
test
pop
mov
dec
(bad)
mov
ror
pop
rcr
out
or
sbb
dec
ss
adc
dec
mov
mov
mov
xchg
lods
xchg
pop
push
xor
cmp
sub
push
shr
push
in
shr
lock
into
sbb
jmp
outs
and
fcmovnb
jmp
dec
ss
dec
sbb
pop
push
xchg
mov
arpl
cld
aaa
mov
mov
mov
mov
in
fiadd
dec
fistp
mov
jnp
or
jmp
or
hlt
mov
xor
int
mov
repnz
jp
and
mov
imul
push
inc
inc
pop
cs
pop
mov
xor
js
aaa
imul
int3
fidivr
ret
pushf
mov
or
or
popa
push
push
mov
lock
pop
sub
jmp
cwde
sub
xlat
add
or
fdiv
xchg
mov
and
les
bound
out
rep
add
sub
iret
es
frstor
or
sbb
(bad)
loope
xlat
xchg
mov
sub
pop
jmp
mov
push
neg
and
pop
ins
pop
mov
cmps
and
adc
add
sti
dec
imul
aam
pop
fdivr
leave
jne
shr
and
xlat
cmp
fnsave
xor
(bad)
imul
or
dec
xor
ficom
cmp
lahf
js
inc
mov
mov
lds
sbb
or
dec
fwait
(bad)
call
out
adc
xor
mul
add
pop
cmp
pop
out
out
mov
test
int
add
fmul
cdq
div
mov
fidiv
lods
repnz
fwait
loopne
mov
dec
out
jne
jge
add
sahf
sub
ds
inc
push
rcl
push
sbb
cdq
(bad)
lods
add
pop
loop
cmp
add
xor
push
mov
mov
sbb
pop
jmp
dec
xchg
movs
nop
aam
inc
test
iret
pusha
push
jecxz
sub
pop
frstor
js
add
mov
cmp
push
add
pop
xchg
push
mov
jbe
mov
scas
mov
ret
add
nop
add
mov
push
cmps
sbb
mov
imul
pop
mov
shr
ret
pop
xor
xchg
es
sub
cmp
mov
out
das
push
cmp
mov
xor
lods
jnp
jg
std
mov
dec
and
xor
xchg
xor
sahf
test
add
jmp
mov
(bad)
(bad)
outs
pop
adc
pop
pop
ret
push
pop
data16
or
cld
mov
pop
pop
mov
hlt
mov
aad
into
jns
es
jb
xchg
movs
pop
sub
cmp
cs
pusha
add
or
push
xchg
or
lahf
outs
push
(bad)
mov
add
aaa
push
inc
or
and
sbb
pushf
and
aas
cmp
add
pop
jmp
adc
imul
(bad)
in
fwait
adc
les
test
pusha
scas
inc
xor
inc
and
dec
add
outs
(bad)
xchg
mov
or
fcomp
add
cmp
mov
or
aaa
ret
xor
call
(bad)
sar
jp
scas
push
xlat
adc
es
retf
pop
out
aad
jns
xor
pop
in
xor
cwde
loop
mov
dec
or
adc
sbb
mov
sbb
cdq
inc
push
lds
rcl
and
jae
cs
jle
and
leave
addr16
int3
mov
div
sbb
call
mov
pushf
jmp
xchg
hlt
push
pop
pushf
mov
and
mov
push
movs
add
jb
push
nop
xor
data16
jg
mov
fsubr
jl
push
ss
sub
add
loope
ins
cdq
repnz
xor
inc
mov
mov
and
data16
retf
sahf
pop
ins
or
mov
mov
pop
pop
xchg
add
rol
sub
jo
mov
xor
mov
idiv
mov
shr
test
out
ret
push
pop
std
arpl
dec
xlat
test
cmc
test
in
adc
dec
loopne
cmp
push
es
mov
xchg
arpl
es
ret
cld
lea
xchg
jbe
(bad)
idiv
out
push
out
pop
int3
lds
es
fsubr
lahf
adc
mov
mov
inc
dec
and
xchg
inc
jle
add
pop
jmp
out
jp
mov
cdq
test
and
or
cwde
xor
or
xchg
mov
xchg
rcr
push
shl
jne
xchg
fsub
addr16
(bad)
int3
enter
dec
adc
dec
cmps
data16
inc
adc
in
pop
dec
not
adc
add
hlt
cld
jge
mov
cmp
leave
adc
(bad)
leave
xchg
iret
aam
sbb
xor
stos
inc
punpcklwd
jbe
cmps
dec
(bad)
jg
cmp
addr16
out
mov
stos
adc
inc
push
add
add
lsl
outs
jns
sbb
fsubr
movs
push
sbb
cmp
ror
popa
pop
and
test
pop
jp
push
mov
ins
sub
dec
mov
stc
scas
pop
js
mov
mov
xor
pop
stos
(bad)
or
addr16
or
test
or
pop
mov
sub
stc
pop
or
push
loop
mov
add
retf
or
sahf
push
sbb
ror
fiadd
inc
std
push
jns
inc
inc
dec
adc
lahf
or
out
bound
jmp
mov
std
nop
ret
mov
pop
inc
adc
sti
sbb
out
and
cmps
mov
and
jl
add
gs
mov
inc
mov
jmp
sub
int
ret
mov
hlt
xor
sub
dec
mov
fist
sahf
mov
int3
loop
jmp
or
inc
xchg
cdq
out
in
xchg
cmp
and
inc
clc
mov
lea
pop
pushf
rcr
sbb
lods
shl
add
add
lods
call
cmp
out
mov
popf
or
dec
mov
scas
xor
arpl
ss
jbe
add
push
mov
fdivr
(bad)
lea
or
add
psraw
bound
jge
push
inc
bound
jmp
xor
and
xor
dec
xor
lods
ret
or
dec
sub
cli
movs
mov
aaa
repnz
sbb
(bad)
scas
jnp
push
pop
push
xor
inc
loop
out
fldenv
inc
push
mov
pop
lss
jbe
das
add
cmp
mov
inc
in
mov
rcr
mov
sub
fstp
and
push
sub
mov
inc
stos
ja
mov
(bad)
push
cs
push
adc
mov
mov
mov
(bad)
es
lea
out
pop
and
push
mov
stos
mov
pop
popa
push
push
push
shr
jp
dec
push
jge
mov
inc
es
xchg
jno
out
mov
cdq
jp
sbb
test
add
xchg
mov
mov
jge
(bad)
mov
push
mov
lahf
mov
xor
inc
xchg
clc
dec
mov
pop
sub
push
or
sbb
pop
mov
jmp
inc
mov
sahf
xor
cli
js
test
retf
les
ss
mov
nop
ret
add
mov
adc
outs
sbb
cmp
inc
jns
push
stos
push
pushf
fwait
jae
add
add
sbb
dec
or
es
and
sub
mov
movs
push
mov
cmp
je
cmp
imul
pop
cwde
std
shl
dec
(bad)
jmp
sub
mov
jno
jp
mov
sar
rcl
jnp
aad
xchg
std
retf
aas
add
shl
cmps
enter
dec
mov
in
and
mov
je
es
push
inc
jle
not
xchg
fdivp
lock
push
inc
fst
fsubr
repnz
mov
sahf
mov
add
test
xchg
sbb
movs
adc
lahf
or
pop
add
repnz
jns
std
dec
cmp
(bad)
aad
inc
push
dec
xchg
or
cmp
dec
out
mov
not
(bad)
(bad)
loop
cdq
pop
xchg
arpl
mov
lea
je
cdq
and
(bad)
lods
adc
inc
jge
out
cwde
jnp
sbb
shl
sbb
push
(bad)
fs
(bad)
cmp
or
retf
cmp
cmp
call
sbb
add
adc
add
mov
sub
das
adc
push
in
ja
scas
rcl
mov
rcl
(bad)
aad
mov
cld
pop
add
sub
and
in
adc
add
xor
xchg
lods
adc
jno
shr
ins
add
mov
shl
mov
cmc
mov
cwde
pushf
fist
ret
sub
call
popa
hlt
inc
jle
mov
fnstcw
ficomp
sbb
shl
enter
mov
mov
stos
pop
mov
sub
dec
or
lods
aas
push
push
dec
push
jle
cmp
fdiv
fistp
(bad)
inc
scas
pop
in
sbb
dec
push
movs
mov
out
in
(bad)
mov
inc
loopne
in
cmp
das
(bad)
pusha
cmp
cmp
sub
mov
xor
and
mov
loopne
add
inc
jle
scas
xor
or
outs
ror
scas
pusha
sar
aas
loop
inc
imul
sub
bound
push
jno
mov
fwait
or
test
fist
int3
inc
repz
add
pushf
cmp
ret
inc
adc
push
rcr
arpl
pop
or
jle
fs
jbe
mov
sbb
mov
pushf
push
adc
dec
pop
fadd
mov
push
mov
inc
xchg
sbb
mov
push
aam
ins
jne
sub
jno
(bad)
cmps
in
int3
addr16
push
bound
iret
sbb
mov
ins
out
pop
out
fs
neg
xchg
cmp
add
mov
sub
out
push
push
das
xor
mov
dec
(bad)
adc
lds
mov
pop
pop
cwde
xor
pop
cmp
push
stos
out
push
xchg
xchg
xchg
call
shr
std
dec
inc
repz
pushf
mov
cs
add
add
lds
xor
jecxz
repnz
ror
scas
push
fld
cmc
aaa
mov
lock
mov
xlat
jecxz
pushf
in
jnp
jbe
mov
xlat
pop
and
or
sub
cmc
arpl
nop
pop
std
xor
mov
shl
xor
push
jg
(bad)
push
test
cmps
adc
fstp
or
std
int3
jb
stos
test
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
adc
add
adc
add
add
dec
mov
sub
and
fcomp
leave
mov
xchg
stos
xchg
out
xor
jmp
lods
push
mov
in
mov
cld
push
mov
ja
ffreep
imul
outs
fidiv
lahf
mul
adc
fwait
mov
ds
(bad)
ins
jge
xchg
and
or
cmp
sub
imul
push
mov
push
lahf
xchg
sti
jge
or
int
jg
xchg
jmp
ds
jl
lds
aas
and
inc
inc
lea
scas
sbb
pop
xor
mov
mov
out
adc
call
(bad)
daa
test
mov
mov
fisttp
fwait
xor
lahf
adc
pop
fist
js
popf
aad
mov
(bad)
jnp
and
shr
es
adc
shl
mov
push
jb
jmp
ret
inc
shr
in
daa
xchg
sbb
cmps
push
(bad)
int3
or
jns
pop
sub
cmp
add
mov
xor
mov
rol
xor
push
ret
push
xchg
adc
pusha
ret
mov
mov
neg
cmp
sub
sbb
sahf
repnz
inc
inc
adc
add
pop
sbb
xchg
sub
push
out
in
mov
cld
loop
aas
into
fld
mov
mov
xchg
aaa
leave
mov
xchg
sbb
adc
or
jl
jae
inc
das
xor
imul
fisubr
cmp
sbb
push
pop
(bad)
iret
cmp
and
mov
jmp
xchg
mov
push
jo
push
ret
adc
jle
and
mov
gs
add
aad
mov
adc
iret
or
imul
nop
sbb
add
stos
jmp
add
cmp
fcomp
dec
icebp
mov
xchg
sahf
aad
clc
pop
out
xor
addr16
push
add
or
fisubr
push
lods
mov
push
push
xor
call
xor
pop
aaa
inc
fstp
jp
pushf
sbb
adc
js
fadd
dec
pop
daa
sbb
(bad)
cs
fcomi
cmps
inc
xchg
pop
mov
(bad)
push
pop
call
sub
lods
push
cs
lock
outs
fs
mov
xor
mov
sahf
es
mov
cmp
dec
fild
loop
inc
mov
out
je
add
fnstenv
rol
sbb
stc
nop
jmp
fxtract
xor
addr16
pusha
inc
add
test
sbb
fsubr
sub
xchg
add
or
cmp
and
sahf
or
pop
aam
cmp
fwait
push
(bad)
sbb
inc
sub
js
push
mov
lds
jmp
inc
jae
inc
jb
ret
mov
int3
cmp
pop
xor
inc
das
es
cwde
test
pop
pop
iret
retf
icebp
jmp
ins
movs
dec
and
inc
lds
sar
out
leave
xor
jb
xchg
mov
dec
and
mov
pop
les
adc
rcl
or
arpl
mov
stc
or
movs
push
inc
inc
ins
sub
push
pop
dec
push
bound
leave
and
pop
mov
xor
call
jmp
pop
outs
sbb
or
or
jp
lods
mov
pop
and
push
push
inc
jne
cmp
push
hlt
sub
fdiv
xor
stos
mov
ror
xchg
stos
pop
into
mov
xor
and
push
push
xchg
jle
(bad)
push
ins
mov
mov
adc
imul
sub
test
and
daa
cmp
inc
cmp
jle
jecxz
pop
or
retf
(bad)
mov
sar
pop
test
pop
pop
fldenv
push
or
mov
dec
ret
sbb
pushf
cld
mov
mov
fwait
and
int
pop
popf
xchg
aas
add
cli
test
mov
leave
push
imul
xchg
inc
push
push
inc
push
mov
ret
mov
sti
pop
retf
xor
pusha
xor
pusha
daa
popa
std
xor
or
xor
add
pop
cmp
and
xor
outs
cs
repz
jp
popf
out
push
xor
jp
loop
inc
(bad)
lahf
push
dec
sub
xor
mov
add
bound
dec
in
add
or
shl
xchg
(bad)
out
sub
cld
sbb
jb
pop
hlt
stos
cmp
sbb
out
xlat
pop
sub
push
sbb
bound
adc
cli
mov
dec
ds
and
dec
cmp
cmp
shl
add
call
push
cmp
and
xchg
fisttp
pop
pop
ror
ja
sub
xlat
cdq
stos
sub
(bad)
push
outs
adc
add
js
cmp
sub
fs
cli
xor
lds
adc
add
ror
dec
xchg
pop
cmp
ss
gs
dec
lea
rcl
and
pop
popf
xor
sub
cmp
push
and
outs
adc
pop
jmp
sub
cmp
mov
jns
sbb
sub
fld
rol
mov
push
sub
jb
mov
pop
adc
cmp
and
ror
pop
jmp
and
dec
aaa
mov
je
inc
outs
pop
mov
and
sbb
jmp
xlat
(bad)
int
and
ins
ja
clc
mov
les
rol
ins
pushf
add
fdiv
xlat
mov
jmp
add
shl
cmps
sbb
shl
xlat
mov
dec
xchg
test
pop
scas
jecxz
ret
mov
push
jno
jbe
add
loope
pop
inc
cmp
adc
movs
xchg
sahf
jae
(bad)
iret
in
fwait
and
cmc
push
lea
jmp
rcl
cmp
and
nop
mov
xor
push
mov
lahf
mov
js
sbb
and
sub
mov
mov
or
sbb
retf
mov
jne
mov
pop
fnsave
ss
dec
sub
test
loop
mul
jnp
push
pop
mov
out
aad
jp
retf
cli
jb
clc
fist
xchg
mov
pop
icebp
sbb
out
pop
sub
jg
stc
pop
mov
shl
js
(bad)
dec
sbb
xlat
call
mov
aad
sub
aad
add
and
inc
into
pop
add
ins
xor
repnz
ds
in
int
sub
or
inc
mov
rcr
xor
nop
mov
out
mov
xor
rol
call
cmc
sub
xchg
es
inc
std
arpl
pop
pop
mov
push
xor
and
push
fsin
popf
or
add
add
or
inc
mov
jo
or
cmp
mov
push
inc
dec
push
fdiv
add
data16
sbb
pop
out
push
ss
mov
fsubr
stos
add
jp
push
inc
xor
xor
lahf
movs
push
mov
call
or
add
mov
add
test
fimul
adc
cmp
mov
js
or
(bad)
xor
int3
xchg
dec
xchg
sub
cmp
arpl
mov
push
cmps
repnz
jmp
test
je
and
jle
loopne
inc
sub
jns
test
test
icebp
lahf
add
mov
lock
gs
shr
inc
je
mov
xor
mul
mov
mov
sbb
cmps
inc
ss
push
pop
call
fst
push
lock
xchg
sbb
popf
xchg
xchg
mov
and
cmps
cdq
cmps
lahf
pop
arpl
fnstcw
pop
xor
das
jp
les
mov
test
jmp
into
or
jb
outs
movhps
add
jnp
xchg
add
aad
pop
dec
jne
adc
push
or
scas
pusha
jmp
mov
and
(bad)
xor
(bad)
test
loop
mov
xchg
push
sbb
jmp
push
mov
frstor
(bad)
mov
cdq
das
sub
mov
sub
out
mov
jmp
cs
call
cmp
aaa
sbb
(bad)
and
mov
jnp
stos
push
mov
and
enter
mov
(bad)
fistp
mov
inc
fild
sbb
call
or
add
adc
or
jb
lods
test
fwait
out
push
push
scas
sbb
jno
(bad)
mov
ja
add
or
xor
cli
dec
pop
in
aas
dec
aad
popf
cmc
fidiv
jo
inc
mov
inc
adc
sub
pop
out
lahf
rcl
jnp
(bad)
sub
fstp
aas
outs
cs
(bad)
and
pop
pop
pop
xor
jo
aam
jno
ror
pop
and
pop
inc
aaa
enter
pop
into
xor
inc
retf
and
mov
cmp
pop
dec
pop
(bad)
retf
retf
dec
xor
xor
push
xchg
std
mov
das
pop
cmp
xchg
in
inc
retfw
jne
xchg
mov
stos
jmp
mov
push
das
lods
bound
push
cmps
(bad)
push
xchg
sbb
test
push
popa
cmp
add
nop
add
or
jbe
xchg
and
out
(bad)
push
and
stos
mov
mov
fwait
jl
dec
add
retf
cmc
fiadd
mov
and
or
or
and
dec
inc
sbb
enter
mov
jo
shl
sub
inc
inc
into
data16
scas
popf
xchg
jmp
pop
in
xchg
fxam
out
xchg
push
imul
ins
dec
jo
daa
fidiv
popf
inc
jge
loop
cmp
(bad)
mov
dec
lods
sbb
sti
ja
mov
adc
mov
mov
sub
jle
push
mov
leave
and
stos
pop
stos
hlt
icebp
and
add
test
or
add
ret
fiadd
mov
mov
and
stos
stc
mov
rcr
add
adc
js
xor
mov
add
ja
repz
xchg
fidiv
mov
es
les
arpl
sub
cli
imul
imul
mov
xchg
daa
sbb
fdiv
dec
sub
adc
cmp
ret
inc
fild
or
das
dec
lods
(bad)
cmps
or
outs
inc
jnp
sbb
sbb
int
int3
push
pop
mov
shl
scas
loopne
mov
pop
pop
or
cmp
dec
into
imul
add
je
stc
je
push
jl
mov
stc
push
sbb
ds
hlt
mov
jl
js
fdivr
sub
adc
mov
sbb
aas
dec
cmps
sbb
fcmovbe
loope
ins
mov
inc
sbb
movs
jae
xor
cmp
imul
ret
pop
pop
mov
rcr
retf
jp
mov
sub
nop
mov
push
xor
cmps
push
aam
outs
jp
(bad)
fldcw
and
mov
sbb
add
mov
mov
jno
lock
sbb
fld
cmc
and
test
shl
and
mov
jmp
pop
std
loop
cdq
mov
push
imul
repz
cmps
cmp
adc
add
cmps
push
icebp
mov
and
(bad)
push
aaa
cmps
lods
xor
jne
jl
lods
xchg
and
ret
dec
adc
xchg
addr16
adc
imul
out
mov
sbb
fst
fistp
ret
aam
xchg
imul
mov
daa
xchg
hlt
push
push
dec
pop
dec
fwait
call
int3
mov
imul
mov
neg
in
cmps
and
mov
adc
rcl
dec
sub
dec
mov
stc
mov
fbstp
mov
sbb
shr
stos
xlat
jmp
stos
(bad)
dec
sub
or
ss
scas
cmps
mov
add
pop
js
or
push
adc
lock
les
rcr
call
popf
pusha
add
jb
lock
call
nop
sbb
add
or
sbb
pop
mov
out
movs
add
fld
jecxz
inc
add
dec
mov
out
push
push
out
add
stc
retf
pop
or
cmps
into
cmp
adc
fisub
out
mov
xchg
arpl
shr
ss
data16
pop
add
movs
push
add
shr
and
push
jb
fcomp
jmp
mov
sub
rol
(bad)
fcomp
loopne
push
fstp
fiadd
cwde
retf
mov
data16
inc
fistp
inc
int
aam
mov
js
aas
les
jne
xchg
repnz
pop
movs
leave
mov
int
pop
aad
nop
xchg
retf
pop
sbb
int3
cwde
jae
call
dec
addr16
inc
jl
daa
out
mov
add
pushf
xor
pop
jmp
clc
outs
aas
xchg
pop
add
xor
rol
mov
and
jne
dec
or
jl
shl
call
inc
sbb
out
jns
movsx
jmp
xchg
inc
ins
push
std
clc
test
adc
clc
loopne
lock
add
push
add
xlat
loopne
cmp
(bad)
dec
adc
retf
cmps
sbb
sub
jmp
neg
inc
xchg
add
inc
cld
bound
jg
stos
out
add
inc
push
js
fs
mov
test
xchg
cmp
jge
cld
dec
pop
cmp
adc
push
jge
ficom
inc
mov
enter
cwde
cdq
gs
lock
mov
sbb
dec
out
sub
dec
dec
jl
inc
mov
adc
and
enter
test
sub
sub
cmp
inc
add
inc
mov
in
jnp
(bad)
outs
xlat
add
inc
xlat
jbe
push
dec
push
mov
lods
inc
sub
repnz
xor
cmp
push
test
xchg
xor
pop
repnz
xor
sbb
jnp
inc
(bad)
xchg
push
xchg
test
adc
and
fsub
mov
aam
dec
add
mul
(bad)
cmp
xchg
jbe
mov
int
shl
add
xor
pop
xor
mov
(bad)
out
add
xchg
div
rcr
out
imul
pusha
hlt
test
add
xchg
(bad)
push
in
popa
xchg
adc
jmp
stos
cdq
sbb
inc
and
mov
mov
mov
cli
add
add
mov
nop
fwait
stc
mov
fld
aad
movs
fnsave
inc
popa
aam
sar
xchg
popa
add
repnz
enter
inc
push
push
test
push
add
or
clc
iret
retf
push
or
je
dec
stos
add
xchg
cmp
sbb
cmp
pop
std
xor
mov
cmps
push
outs
sub
xor
lahf
out
xor
pop
push
in
add
xchg
sub
js
fisttp
fidiv
mov
or
outs
mov
dec
or
push
inc
sbb
retf
add
adc
pause
jmp
mov
jg
mov
shr
call
pop
adc
add
and
add
mov
sbb
inc
mov
rol
push
imul
div
inc
test
and
ficom
cmp
gs
push
push
xchg
or
cwde
rcl
loope
add
push
stos
and
push
xor
sbb
and
sub
repz
push
or
mov
pop
cmc
xchg
inc
inc
stos
or
std
xchg
test
(bad)
push
outs
retf
inc
psubsb
dec
test
xchg
adc
jle
scas
sahf
out
in
or
aas
or
inc
sub
mov
mov
sahf
outs
mov
les
sub
mov
add
mov
mov
fs
(bad)
(bad)
sub
sbb
jo
cwde
and
mov
xor
scas
mov
dec
or
lods
sub
mov
call
xor
aad
add
or
sbb
inc
fdiv
outs
xor
xchg
pop
mov
std
aas
xchg
push
adc
jmp
push
push
sbb
iret
cmp
stc
test
mov
inc
cld
(bad)
rol
stos
xchg
pop
push
cmps
out
imul
loope
xchg
jecxz
cdq
out
or
(bad)
adc
cli
dec
xchg
loope
call
out
add
pop
push
cmp
test
mov
pop
and
clc
push
shl
dec
retf
stos
pop
sub
push
sbb
sub
jb
test
lods
or
scas
jns
inc
and
lods
test
jmp
push
scas
push
cmp
sbb
paddd
xchg
cmp
std
dec
xor
mov
add
nop
push
xor
mov
ret
jl
dec
push
xchg
outs
xor
loop
pop
test
pop
loopne
dec
adc
test
fisubr
stc
and
les
outs
std
add
dec
mov
test
pop
jge
xchg
sub
xchg
pop
xchg
push
in
pop
movs
sbb
ss
push
dec
lahf
mov
aam
test
mov
loop
lahf
ins
in
outs
leave
iret
sub
cmps
retf
in
fsubr
out
add
call
jbe
outs
or
fbld
cmp
or
mov
ins
movs
and
int3
xchg
mov
inc
sbb
adc
popf
push
in
icebp
cmps
(bad)
imul
xchg
cld
dec
push
scas
movs
push
nop
inc
jmp
and
jl
mov
cmps
aas
add
div
test
push
adc
sahf
sub
mov
or
jmp
dec
mov
pop
cli
mov
(bad)
add
cld
loopne
jae
cmp
adc
(bad)
xchg
out
int
dec
mov
dec
daa
es
out
cmc
cmp
ret
aas
dec
cs
fsubr
mov
mov
fs
movs
sub
sbb
add
mov
or
(bad)
xor
push
jae
out
cdq
addr16
jp
adc
push
loop
add
sub
arpl
jo
pop
ror
int3
jne
xchg
jae
inc
add
xchg
cld
out
std
xor
mov
test
xor
inc
js
cli
jge
jo
push
mov
cmp
mov
jmp
stos
xor
jmp
dec
jp
(bad)
and
mov
adc
sbb
mov
fs
jge
mov
pop
jge
dec
fdiv
out
cli
outs
add
lea
pop
xor
ss
(bad)
aad
imul
es
gs
ss
jns
bound
add
(bad)
xor
cmp
and
fld
fst
inc
push
cs
aam
xor
aaa
jecxz
xchg
push
xor
push
xchg
imul
test
fcmovb
mov
in
cmp
cmovg
ret
add
dec
fadd
test
jmp
add
push
in
add
in
xchg
enter
and
hlt
sbb
montmul
cmps
ret
xchg
mov
not
arpl
pop
mul
jl
sbb
fs
retf
shl
dec
in
cmp
push
inc
pop
loop
and
lock
adc
into
jbe
pop
xlat
adc
mov
sbb
jno
imul
dec
bound
mov
pop
popf
jns
stos
dec
loopne
rcl
(bad)
sbb
mov
pop
test
and
imul
sub
scas
sbb
rcl
shr
cmp
push
dec
sbb
out
or
fstp
fdivr
mov
adc
add
hlt
in
outs
retf
mov
into
dec
xchg
dec
test
sar
push
push
push
aaa
xchg
mov
ja
clc
jo
iret
dec
out
iret
push
adc
scas
(bad)
in
mov
movs
push
fiadd
mov
adc
mov
call
stc
js
lahf
jo
cmp
int3
push
push
jnp
ins
xchg
aaa
gs
jg
js
adc
jb
ret
and
es
and
pop
pop
ja
mov
daa
jp
aaa
ins
ja
ds
push
or
mov
xchg
mov
nop
pop
add
add
mov
sar
push
inc
xchg
test
dec
cmp
fisubr
mov
push
ds
and
popf
dec
cmps
lods
adc
cdq
cmp
add
sbb
xor
std
jmp
lods
or
cmp
es
mul
mov
js
in
sub
dec
(bad)
pusha
ret
fwait
jae
and
mov
inc
lds
out
test
fimul
jbe
inc
test
pop
pop
es
mul
out
sbb
aas
(bad)
pushf
jmp
cdq
loopne
jmp
mov
loop
ins
div
dec
test
dec
dec
jmp
arpl
movs
jae
add
jge
sub
add
mov
out
mov
or
in
fwait
call
movhps
adc
pop
mov
xchg
outs
xor
call
ja
mov
cli
scas
add
pusha
xchg
out
jecxz
pusha
in
stos
out
mov
sbb
mov
add
jbe
jo
adc
and
mov
lods
mov
or
mov
int
add
sub
mov
mov
lods
jecxz
jmp
cmp
mov
sbb
xchg
inc
aas
popa
loop
cmc
sub
dec
push
and
loope
lods
pop
aaa
jecxz
pop
sbb
fsubr
jecxz
leave
in
repnz
dec
out
add
leave
add
lock
test
mov
xor
sub
bound
and
lods
in
aaa
cld
cmp
cwde
in
out
icebp
mov
fsubp
xchg
or
inc
push
pushf
xchg
shr
xor
mov
mov
sbb
cdq
lea
ret
ror
mov
or
cmp
mov
dec
pop
adc
mov
pop
fiadd
xchg
je
das
inc
clc
pop
inc
mov
jp
adc
inc
rol
out
push
fdiv
pop
pop
sub
push
mov
add
inc
aaa
repz
xor
adc
fmul
aam
es
fdivr
mov
sub
enter
inc
fild
add
aaa
(bad)
mov
les
fldcw
fdiv
jno
xchg
clc
jmp
push
cmp
sbb
clc
add
add
cs
repz
bnd
and
dec
pop
pop
cli
xor
and
or
inc
mov
dec
mov
xor
inc
mov
jb
mov
test
aaa
pop
jecxz
arpl
mov
mov
mov
shl
ds
mov
dec
sahf
pop
inc
out
repnz
sbb
cmp
mov
fld
retf
push
test
jno
shl
cs
dec
mul
mov
bound
mov
inc
cmp
test
fistp
cld
mov
and
xor
not
test
lahf
mov
pop
add
xlat
rol
imul
mov
sbb
push
data16
les
enter
dec
or
mov
imul
xchg
pop
pop
je
xchg
jg
repz
sub
push
cmp
or
ret
pop
push
(bad)
fprem1
imul
and
adc
push
bound
mov
mov
not
stos
cmps
movs
jb
pop
psubb
mov
iret
scas
ret
imul
out
das
daa
jmp
add
fucomip
push
add
push
into
xchg
adc
and
inc
push
pop
lods
jp
(bad)
popf
sub
mov
dec
scas
push
pusha
push
inc
test
lea
adc
aad
test
into
cdq
es
stc
stc
push
and
lods
mov
inc
add
cmp
int
push
mov
or
push
push
sahf
push
xchg
mov
mov
es
adc
aad
call
scas
add
sub
movs
cmps
sub
lods
movs
inc
fistp
int
ror
sub
test
ret
pop
shl
and
pop
int3
mov
sbb
(bad)
xchg
je
cmp
in
sbb
jl
push
fisub
jecxz
cdq
sub
clc
psubb
(bad)
aad
shl
push
cmp
mov
arpl
fild
fwait
dec
(bad)
and
push
sub
scas
pop
pop
adc
pop
jbe
imul
sti
popa
inc
mov
movs
cmps
nop
mov
adc
fwait
inc
or
sti
int3
outs
out
mov
cmp
lock
scas
or
dec
add
ins
jmp
fistp
add
aam
mov
(bad)
lock
jno
test
gs
xor
cmc
jb
or
or
bound
not
xchg
rcr
or
mov
mov
shl
push
test
iret
and
push
push
rcl
push
cmp
jns
jae
inc
and
mov
xchg
sub
test
dec
dec
sbb
push
sbb
gs
cmp
lods
mov
scas
test
add
push
loop
popa
xchg
xor
mov
in
cli
movs
push
(bad)
sbb
int
daa
pop
ins
inc
xchg
jno
loope
mov
ins
xlat
daa
xchg
jbe
pop
mov
es
dec
push
mov
mov
dec
inc
out
add
test
iret
jns
das
ins
rcr
(bad)
aam
mov
dec
and
adc
push
fcom
ret
fmul
jbe
xchg
pop
ror
ds
xor
mov
xor
xchg
gs
(bad)
cdq
push
inc
fidivr
inc
lahf
jmp
popf
out
sti
or
ss
into
std
rol
inc
push
out
dec
jg
mov
cmp
lds
pop
and
addr16
and
mov
pop
pop
neg
push
es
pusha
push
pop
out
dec
push
adc
adc
adc
hlt
mov
lods
movs
cli
cmps
xchg
lods
call
jne
(bad)
jns
ins
int3
pushf
(bad)
pusha
popf
mov
stc
mov
add
ds
pop
iret
jmp
dec
icebp
xor
push
in
adc
inc
jp
leave
add
or
call
aaa
ss
and
add
ins
ss
xchg
jg
adc
dec
mov
mov
sub
aas
rcr
inc
leave
dec
push
into
fisttp
dec
dec
fisttp
add
add
retf
pop
xor
pop
not
cmp
xor
adc
aad
popa
lahf
or
in
push
inc
mov
ins
inc
popa
ret
and
je
sbb
or
sub
push
mov
into
jno
add
cli
add
sub
fwait
push
test
jmp
push
fisubr
cwde
sbb
(bad)
push
bnd
cdq
cmps
lods
cmp
and
jl
dec
clc
fsubr
add
ret
js
cmp
les
jmp
push
mov
fbld
je
pushf
mov
hlt
int
iret
int3
or
inc
adc
xchg
js
rcl
sub
out
inc
fist
icebp
sti
xchg
dec
xor
jge
aad
inc
fimul
add
pop
mov
ret
mov
inc
aas
sbb
scas
add
mov
mov
cwde
out
mov
popf
aad
mov
retf
xchg
das
xchg
pinsrw
pop
xchg
push
pop
mov
adc
std
packuswb
call
cli
je
outs
in
outs
out
or
loope
or
pop
test
and
or
add
imul
lea
fidivr
adc
jl
inc
cld
jmp
movs
shl
jb
add
cs
movs
mov
mov
scas
jle
sub
pop
test
in
push
leave
cmp
aam
add
push
lahf
mov
repnz
push
cmp
movs
jp
ror
xor
pop
mov
pop
push
(bad)
shl
icebp
mov
jns
sub
mov
adc
sbb
icebp
mov
call
fucomp
les
loopne
int
sbb
push
movs
mov
mov
scas
xor
(bad)
imul
mov
call
retf
jbe
mov
or
outs
inc
push
pop
fld
inc
stos
cmp
in
sbb
cs
ret
aas
pop
inc
and
lds
rcr
fsubr
popf
int
add
push
stos
xchg
inc
and
jmp
dec
(bad)
popa
(bad)
icebp
cli
das
add
test
cmps
or
scas
mov
adc
pop
fcmovne
inc
dec
mov
sbb
and
xor
cs
mov
xchg
imul
cdq
call
mov
inc
sbb
pop
stos
mul
into
neg
adc
push
in
mov
shl
push
push
pmaxub
in
ins
cmp
mov
push
jno
or
push
cmp
cs
xchg
mov
rol
ins
test
in
mov
xor
popf
lods
cld
mov
lods
in
inc
jecxz
push
movs
mov
inc
cmp
sar
(bad)
ins
add
cwde
add
std
repnz
stos
aas
pop
es
cmp
ror
jns
or
pop
add
inc
std
test
dec
(bad)
not
dec
jmp
cli
int
xchg
adc
jbe
mov
cmp
sub
jle
les
in
sbb
and
pop
jp
out
xor
sbb
xor
sub
xchg
sub
inc
pop
test
pop
mov
sub
mov
cld
jae
fisttp
xor
fnsave
out
dec
and
(bad)
pop
adc
in
mov
sbb
je
pop
add
mov
cmp
jns
mov
pop
out
push
movs
jnp
pop
mov
mul
dec
dec
xchg
cli
xlat
(bad)
mov
test
sahf
outs
xchg
shl
shl
mov
out
xchg
cmp
push
mov
push
data16
xor
(bad)
cmps
push
fdiv
mov
fmul
add
test
call
sbb
push
jo
sbb
mov
push
and
cli
mov
fs
xor
jb
pusha
jg
dec
test
in
sub
sbb
cmp
push
push
dec
rcl
pop
mov
add
dec
push
aad
fs
int3
pop
jns
int
xchg
push
cmp
addr16
test
mov
enter
ror
ins
xor
dec
cld
dec
mov
sub
add
and
mov
or
ds
cmp
jp
jp
(bad)
adc
lahf
je
out
xchg
pop
push
call
js
xor
lock
inc
call
and
jno
jl
inc
add
adc
lahf
in
cli
lods
mov
loopne
fidivr
lock
cmp
pop
sbb
jmp
add
cmp
jmp
sbb
out
inc
imul
xor
stos
cmc
arpl
adc
sar
dec
xchg
and
xlat
xchg
pop
movs
mov
outs
cli
mov
dec
pop
push
pop
mov
pop
loope
pop
or
adc
fmul
or
sub
push
lea
sti
vrndscaleps
and
mov
push
mov
pop
xlat
xchg
dec
mov
stos
sub
imul
xchg
pop
xchg
and
stos
sbb
mov
(bad)
sub
jp
aas
sbb
shl
sbb
cmps
outs
xchg
popf
fisub
jge
sub
pop
ins
cmp
pushf
sub
repz
inc
push
inc
ror
xchg
lock
stc
xor
mul
adc
xor
jmp
xor
push
lahf
mov
fidiv
mov
push
adc
dec
call
push
in
or
ret
out
fcmove
mov
pop
sbb
ds
outs
cmps
adc
stos
sub
fcom
jge
fwait
jmp
pop
push
mov
push
nop
push
fild
add
xchg
test
xchg
jp
and
jge
dec
mov
sbb
and
mov
xchg
out
out
mov
stc
xchg
or
mul
lods
pop
arpl
rol
les
(bad)
adc
jo
cmp
mov
cmp
(bad)
jbe
xlat
lds
inc
mov
or
scas
sub
and
rcl
inc
xor
fisub
test
adc
pop
stos
hlt
pop
sbb
xchg
pop
add
dec
je
push
gs
jp
fsub
adc
icebp
push
mov
test
add
push
call
retf
popa
mov
adc
jns
jnp
adc
pop
ins
adc
vprotq
cmc
xor
fst
push
mov
loop
je
sbb
jb
mov
in
sahf
jmp
fbld
out
cdq
fild
pop
add
push
fimul
ins
das
test
jne
lds
call
push
sbb
push
(bad)
xchg
push
add
mov
sar
clc
sbb
movs
jb
mov
sub
jp
ins
enter
fwait
enter
mov
cmp
aas
add
pop
test
or
add
add
sub
and
fsubr
sub
pop
ins
rcl
icebp
xchg
sub
out
(bad)
xor
xchg
pop
adc
cmps
dec
int3
sbb
mov
jno
cmp
push
add
stos
pop
mov
inc
sub
inc
aad
setnp
js
mov
ja
or
adc
repnz
fsub
mov
sti
int
jno
push
outs
cmp
jb
arpl
fwait
cmp
outs
cld
dec
add
sub
or
fsubr
mov
cld
jle
xchg
push
fnsave
popf
fs
adc
adc
popa
lahf
ret
jle
daa
retf
in
out
cmp
push
xchg
xor
aad
in
(bad)
loop
(bad)
and
js
xchg
inc
xchg
lds
jnp
rcr
jecxz
pop
fucom
sti
adc
jmp
mov
mov
out
mov
jmp
mov
loope
jmp
or
mov
or
pop
mov
popf
xchg
xchg
mov
inc
mov
scas
jne
enter
mov
push
out
pop
xor
es
(bad)
and
mov
icebp
aam
mov
nop
fnstcw
fwait
sbb
std
xchg
sub
sbb
pop
mov
(bad)
jb
or
mov
adc
test
imul
or
jbe
sbb
pop
mov
into
push
dec
pop
sub
repz
xchg
or
xor
mov
jge
xchg
mov
xchg
cmp
or
xor
lods
jecxz
retf
pop
ins
hlt
pop
inc
ins
in
mov
mov
fild
sub
mov
jno
xor
lds
inc
xchg
inc
mov
cmp
loopne
lock
cmc
adc
into
push
or
call
sbb
mov
ret
and
xchg
or
(bad)
cmc
sub
das
test
fimul
push
ret
and
je
aaa
lea
and
shl
imul
xor
imul
ss
jg
dec
dec
add
clc
jnp
pop
jnp
out
lock
xor
xchg
jl
jmp
popf
mov
cmp
jg
mov
out
ret
popa
mov
shl
push
and
imul
and
dec
je
xchg
pop
ror
push
icebp
jp
push
fcmovnbe
xor
bound
mov
mov
adc
stc
bound
mov
call
addr16
xor
clc
arpl
mov
(bad)
out
outs
loope
std
xor
add
jmp
imul
repnz
xor
loopne
lods
jmp
dec
enter
pop
stos
popa
int3
inc
sbb
add
sbb
rcl
nop
cli
mov
dec
shl
inc
jno
in
xor
pop
movs
mov
or
mov
int
jno
xchg
fild
pop
adc
addr16
pop
stos
pop
add
mov
inc
mov
sti
lahf
and
mov
jecxz
xor
push
pushf
enter
popf
aad
pop
sub
inc
fadd
mov
mov
dec
std
(bad)
pop
shl
or
add
test
mov
sub
pushf
jl
mov
jmp
repnz
cmp
push
test
jle
sbb
jo
adc
ds
pop
movs
mov
in
cmp
mov
stos
jne
dec
push
(bad)
repz
dec
retf
lahf
je
xor
dec
push
push
pop
out
cdq
and
xor
or
inc
cs
stos
push
dec
imul
jb
out
adc
dec
jecxz
cdq
inc
imul
xchg
push
sbb
andps
xchg
xchg
es
or
popf
mov
xchg
aam
inc
xor
lock
popf
and
add
mov
and
outs
mov
sti
jns
test
push
jne
leave
mov
ret
sub
ins
or
in
fnstenv
movs
jmp
dec
mov
and
xlat
xlat
mov
add
in
inc
add
push
aaa
jne
(bad)
add
lea
cs
sub
push
neg
mov
sub
loope
pop
je
clc
lock
fdiv
test
in
push
dec
mov
inc
fwait
in
fisttp
aam
mov
bound
sub
mov
cmp
lods
out
cmps
inc
push
ja
and
push
dec
mov
out
add
xor
and
and
xor
add
sub
lds
cwde
and
mov
or
pop
int
pop
jle
mov
adc
int
fdivp
sti
fst
pop
je
mov
sub
mov
sbb
movs
xlat
or
xchg
je
add
mov
push
add
mov
push
or
pop
mov
cmp
rcr
js
xchg
(bad)
pop
outs
jp
and
dec
gs
and
jp
push
push
jnp
pop
es
mov
ror
cmps
push
sti
(bad)
adc
xor
push
mov
xor
(bad)
outs
adc
jle
jmp
mov
fadd
or
cmp
das
push
ret
jp
jo
adc
cmp
das
mov
vpunpckldq
sbb
cmp
mov
or
cmp
or
(bad)
push
lea
xchg
dec
movs
and
pop
aad
adc
ins
hlt
push
jle
shr
call
add
sub
stos
repnz
push
or
cs
xchg
xor
sub
xchg
xchg
xchg
cmc
sub
in
rcl
jmp
xchg
out
xor
cmp
xchg
outs
scas
fs
pop
mul
push
cmp
jmp
cmp
imul
sbb
dec
and
fidiv
dec
add
test
cmp
inc
call
pop
ins
mov
sar
xchg
and
bound
aad
cmp
xor
outs
or
dec
xchg
pusha
adc
lods
cmp
test
adc
sahf
mov
stc
xchg
xor
in
mov
jecxz
(bad)
(bad)
or
pop
xor
add
and
jne
adc
rol
out
in
push
or
cmp
jmp
lods
add
sbb
and
jge
mov
and
aam
in
loope
ins
icebp
and
retf
or
or
xlat
fwait
sahf
pop
ret
movaps
jnp
loope
mov
jg
adc
ret
sbb
mov
mov
(bad)
jle
xchg
cmp
xor
push
outs
dec
(bad)
jecxz
out
outs
and
xchg
pop
xchg
inc
pop
test
mov
ins
jecxz
pop
lea
xchg
lds
adc
mov
test
add
cmp
and
aaa
std
xchg
sub
dec
lock
inc
std
dec
jmp
test
add
mov
sahf
ret
cmp
(bad)
mov
lock
xor
push
fbstp
fisttp
retf
jle
loopne
lods
cwde
shl
je
add
adc
inc
and
sbb
push
sub
adc
cmps
mov
mov
pop
cmp
(bad)
sahf
add
outs
xchg
cwde
ret
xlat
jle
dec
idiv
fistp
lods
adc
inc
es
sub
pop
mov
mov
add
repz
retf
mov
dec
mov
popa
sbb
cmps
jg
adc
push
aam
out
icebp
add
loopne
add
pop
cwde
loop
lods
loope
jae
dec
xor
add
mov
adc
push
pop
inc
stos
mov
in
push
pop
sti
push
cbw
or
pop
xor
pushf
loopne
sahf
cdq
add
and
ret
test
lds
jecxz
pop
sbb
lods
fwait
das
inc
out
mov
scas
in
adc
adc
cmp
inc
xor
arpl
xchg
push
ror
scas
hlt
xor
ins
dec
mov
stos
add
pusha
push
jg
cmp
xchg
xchg
sti
push
push
jmp
shr
mov
jmp
mov
mov
iret
ja
enter
add
data16
add
dec
dec
ins
jmp
dec
xchg
push
imul
jb
loop
push
pusha
xlat
jo
sbb
test
and
push
or
sar
jns
jl
repz
shl
lock
mov
aam
repz
sub
adc
xchg
sahf
and
pop
dec
call
mov
enter
push
je
inc
sub
fwait
jg
dec
jg
fldenv
cdq
inc
test
ret
nop
in
inc
out
inc
mov
sbb
clc
jnp
adc
popf
fisubr
push
outs
(bad)
shl
iret
add
shr
bound
sub
inc
scas
add
loopne
or
inc
in
add
and
data16
enter
cld
sbb
mov
inc
addr16
dec
mov
cmp
mov
cwde
dec
sub
adc
jmp
xchg
jge
test
mov
lock
test
aad
ret
push
cld
cmp
lods
(bad)
or
add
ss
xor
cmp
enter
ficom
and
mov
add
mov
mov
movs
int3
inc
call
fcom
dec
lock
scas
push
inc
mov
dec
jae
inc
xchg
out
xor
out
adc
ja
js
test
xchg
mov
pushf
sti
mov
sahf
dec
and
enter
iret
(bad)
cld
sub
sbb
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
add
hlt
push
pop
stos
cmp
mov
xchg
cmp
mov
scas
std
int3
adc
cmps
loopne
fcom
push
sub
add
test
lods
or
xchg
cmp
fld
jge
data16
cmc
frstor
popa
hlt
jae
mov
pop
inc
and
cmp
xchg
mov
and
xor
fld
lds
inc
fcom
stc
inc
xchg
arpl
sbb
cmp
mov
and
jnp
add
push
or
mov
hlt
adc
jge
mov
clc
push
xchg
push
imul
jg
mov
ret
mov
sbb
lahf
pushf
movs
xchg
ins
mov
clc
add
into
hlt
lods
cmp
mov
adc
clc
and
inc
(bad)
fdivrp
and
loop
imul
(bad)
popf
cmp
dec
push
enter
into
adc
adc
aaa
jge
cmp
adc
jle
ss
inc
js
xor
mov
imul
mov
icebp
jne
popa
push
jo
inc
lods
lods
mov
pop
mov
mov
mov
pop
jno
push
push
xchg
stos
retf
addr16
push
or
mov
das
cwde
jo
sbb
js
xlat
adc
xchg
inc
or
jl
inc
inc
shr
sub
jb
pop
sbb
ins
dec
repz
sbb
loopne
xlat
add
push
test
jbe
cmp
neg
pop
xchg
and
mov
sbb
cmp
std
fldcw
xchg
cmc
retf
pushf
test
sbb
cmps
push
mov
je
das
mov
fs
jbe
xchg
sahf
adc
sub
or
imul
mov
out
jne
rep
and
outs
daa
pop
enter
push
fist
cdq
retf
stos
bound
jp
test
push
hlt
fisttp
jmp
mov
aam
or
dec
or
adc
mov
ds
xchg
add
pop
fdiv
push
adc
jg
cmp
repz
push
jmp
iret
cdq
stos
pop
xchg
or
mov
mov
(bad)
pop
inc
out
scas
pop
adc
leave
movs
movs
int
add
stos
jmp
sub
push
jmp
in
fcmove
sub
jp
out
scas
pop
pop
cli
xor
dec
push
ficom
push
mov
mov
and
div
int3
add
addr16
sbb
sub
mov
(bad)
jmp
imul
mov
ret
mov
std
dec
inc
xchg
mov
mov
push
xor
xchg
(bad)
pop
mov
pop
add
xlat
cdq
mov
push
nop
mov
ret
imul
ins
ret
ins
xor
cli
ins
es
nop
mov
pop
int3
push
jl
outs
adc
or
or
xchg
popf
jo
retf
push
xchg
fld
xchg
cmp
sar
lds
xlat
cmp
(bad)
lods
(bad)
jns
cs
mov
test
loope
cmps
dec
inc
cli
pop
out
sbb
out
jmp
fcmove
jne
bound
cmp
test
adc
inc
pop
and
dec
movs
mov
pop
lds
mov
loopne
sub
xchg
cli
inc
sub
xor
mov
lods
imul
sub
loope
or
sbb
clc
dec
and
(bad)
and
stos
pusha
inc
div
lods
stos
pusha
mov
dec
add
inc
xchg
fbstp
lock
or
add
out
adc
and
or
test
sub
xor
jb
add
xchg
shl
clc
lahf
jp
test
std
push
mov
mov
mov
cmp
jno
or
aas
les
xchg
gs
push
lods
adc
sub
pusha
cwde
dec
in
(bad)
in
into
mov
lahf
test
sbb
cmovb
nop
and
adc
sbb
ins
movs
dec
cli
movs
jp
mov
movs
add
or
loope
or
loope
jl
lods
sbb
add
jnp
enter
mov
cmp
inc
rcl
repnz
enter
xchg
push
fdivp
sbb
xchg
aas
mov
xchg
adc
cmps
ins
cdq
and
out
shr
mov
pop
sub
clc
popf
fisttp
mov
xchg
pop
inc
retf
in
sub
adc
not
or
dec
xchg
and
popa
cmp
sbb
or
add
adc
loop
push
scas
dec
mov
ret
test
pushf
sub
inc
lock
push
cwde
push
stc
(bad)
sbb
or
mov
sbb
in
fild
jecxz
cmp
mov
std
adc
das
mov
sbb
lods
push
add
(bad)
movs
xor
shr
and
or
lea
sahf
push
adc
leave
aad
std
sbb
add
(bad)
(bad)
xchg
(bad)
scas
pop
jnp
popa
xor
clc
jns
sub
and
jno
(bad)
and
adc
add
adc
call
dec
cmps
sbb
test
loope
(bad)
fcmovbe
adc
jns
push
hlt
jb
gs
xchg
retf
test
outs
stos
xor
xor
(bad)
jp
and
imul
mov
xor
cmp
iret
pop
mov
aam
leave
add
fwait
mov
adc
es
mov
xchg
(bad)
fisubr
mov
in
dec
inc
push
stos
fisubr
jge
mov
mov
pushf
mov
shl
mov
sbb
pop
cmp
shl
push
cmp
pop
mov
sub
(bad)
xchg
push
mov
stc
lock
add
pop
mov
cmp
pop
or
(bad)
movs
pause
sub
adc
mov
sahf
mov
test
push
xor
pushf
mov
mov
out
mov
pop
push
adc
sbb
jo
(bad)
xor
out
dec
leave
add
std
popa
test
jge
jae
daa
retf
out
xor
in
mov
mov
pushf
jne
pop
aad
add
test
lock
outs
fld
cmp
js
mov
mov
xchg
test
mov
lods
call
xchg
retf
cmp
jp
outs
shl
mov
cwde
jge
push
pop
adc
jae
out
(bad)
fmul
or
ret
dec
adc
out
jns
dec
lds
test
xrelease
xchg
into
jmp
fcom
sbb
mov
cmps
out
xchg
rcr
mov
lock
sub
push
push
inc
scas
adc
fimul
sub
push
punpckldq
aad
pusha
mov
mov
push
in
ret
std
into
inc
call
mov
jns
cmc
sbb
sub
cmp
pop
mov
jle
push
mov
stc
int
push
leave
icebp
sbb
or
nop
es
test
add
or
loope
mov
or
mov
loop
push
cmp
jb
and
jp
es
xor
pusha
add
imul
mov
call
push
sbb
movs
arpl
out
pushf
repz
loop
push
inc
(bad)
repz
bound
(bad)
add
mov
leave
fldenv
int
xchg
aad
cs
fnsave
push
imul
imul
repnz
push
leavew
inc
out
mov
ret
loope
push
ins
and
cmp
xchg
push
add
imul
cwde
setp
adc
fwait
(bad)
shr
iret
pop
ret
std
pop
int3
mov
lods
adc
xlat
sbb
mov
das
(bad)
ret
(bad)
lds
inc
mov
xchg
xlat
add
pusha
pop
jb
pop
lea
(bad)
push
shl
dec
cli
sbb
mov
jns
data16
addr16
lods
mov
imul
xchg
add
out
inc
xor
mov
sbb
sar
jns
in
in
retf
sti
lock
cmp
pop
push
ins
and
(bad)
aam
add
add
jo
mov
(bad)
data16
pop
ja
test
test
leave
push
mov
and
bnd
xchg
inc
dec
shl
nop
sbb
xchg
in
mov
jl
(bad)
push
scas
sbb
xor
in
and
mov
fld
jae
imul
add
add
mov
mov
jae
push
arpl
jecxz
inc
cwde
jecxz
test
ja
mov
ret
push
mov
xor
jbe
addr16
lods
(bad)
fdiv
retf
scas
inc
pop
repz
sbb
cmp
cmp
mov
aas
in
xchg
mov
pop
in
mov
div
scas
outs
dec
sti
mov
cdq
mov
jge
add
cmp
fsub
into
lods
call
pop
or
jne
sub
sahf
in
adc
sbb
es
cli
ror
movs
push
std
(bad)
ja
jg
call
xchg
lock
cmp
jbe
aas
rol
ret
dec
mov
fwait
inc
jle
popa
jge
mov
sub
repnz
mov
addr16
mov
cmp
adc
arpl
fwait
xor
mov
ds
sub
mov
xchg
mov
xchg
out
jae
mov
or
xor
sub
retf
stos
imul
mov
sub
fcomp
cmps
jns
xor
shl
lahf
cmp
cli
xchg
test
test
setge
ror
xchg
dec
fcom
jg
test
(bad)
pop
pop
nop
jge
iret
arpl
mul
xchg
pop
outs
rol
mov
add
jne
xor
sub
sub
(bad)
ja
out
jnp
aaa
lahf
push
lods
iret
adc
jb
scas
inc
(bad)
and
ins
cdq
mul
pusha
pop
sbb
or
push
mov
sti
pop
jle
lock
and
dec
xchg
outs
add
rcr
call
pop
das
mov
shl
pushfw
cmp
mov
jnp
dec
add
cli
pop
or
cmp
inc
pop
inc
or
add
or
adc
push
je
cmc
cmp
leave
rol
outs
fnstcw
ss
push
jnp
cdq
outs
sbb
cmp
add
dec
ret
mov
stc
jmp
xchg
xchg
das
icebp
cld
imul
cmp
jmp
lock
mov
pusha
fwait
push
scas
test
dec
or
and
ja
dec
mov
cmp
pop
pop
push
inc
jb
xor
cmp
adc
das
pop
or
(bad)
bound
ins
xor
stc
mov
jne
add
adc
mov
inc
outs
inc
test
add
push
push
bound
jno
add
enter
sub
xchg
xchg
std
dec
jb
push
pop
dec
push
or
lea
and
dec
pop
jne
and
arpl
push
aas
mov
stos
sahf
test
adc
(bad)
cwde
iret
mov
jo
inc
(bad)
sti
ret
mov
ins
or
dec
cmp
xor
jno
pop
pop
push
cli
idiv
out
sub
lahf
cmps
sub
dec
mov
cld
popf
data16
ja
adc
lods
xor
mov
sub
cs
cmp
jecxz
nop
sbb
aad
test
movs
ds
aaa
sub
push
pxor
sti
out
es
imul
je
or
and
jae
sub
shr
cld
and
movs
xchg
test
cmp
cmps
and
stos
(bad)
jmp
pop
shl
sbb
pop
ret
rcr
inc
(bad)
cmp
jno
dec
push
mov
addr16
jae
shr
imul
push
leave
push
es
call
aam
inc
into
jne
shl
xor
and
inc
mov
arpl
or
out
jecxz
fnstsw
cmp
adc
test
daa
aas
jp
jmp
pop
mov
mov
jae
cmp
jecxz
mov
cmc
bnd
push
mov
mov
add
sub
add
push
ret
mov
dec
enter
cmps
mov
and
mov
(bad)
idiv
cdq
lock
push
cmp
dec
or
(bad)
ins
aam
bound
repnz
xchg
out
shr
inc
sahf
xchg
call
jno
mov
push
push
adc
jo
xor
push
xor
inc
sbb
rcr
sbb
out
(bad)
out
aas
(bad)
int
(bad)
movs
imul
cmp
cmp
push
dec
out
sbb
jbe
ficom
xor
xor
xchg
(bad)
mov
and
sub
mov
push
cmps
(bad)
cmp
xor
(bad)
out
aad
(bad)
lea
cmp
xchg
pop
inc
push
call
stos
lock
dec
jp
into
sti
xchg
mov
div
jb
scas
adc
mov
mov
sub
(bad)
aad
jbe
jbe
js
xor
aad
push
jne
or
mov
in
(bad)
stc
sub
popf
outs
mov
mov
add
in
push
sbb
ss
mov
jl
ret
test
inc
fimul
mov
jmp
pushf
(bad)
gs
xor
stc
fsubr
icebp
sahf
call
fild
jnp
dec
gs
sub
mov
jmp
inc
(bad)
test
inc
test
(bad)
sti
test
pusha
xchg
xor
retf
popa
and
inc
sbb
pop
popa
icebp
test
sub
push
ret
retf
cwde
add
repz
das
dec
out
scas
jecxz
out
adc
mov
xor
pop
mov
dec
mov
(bad)
jmp
mov
(bad)
mov
cmc
mov
icebp
jmp
ins
in
pop
cs
pop
std
not
loop
sbb
cmps
(bad)
or
mov
and
cli
stc
es
cli
movs
in
aaa
outs
std
cmp
cmc
(bad)
in
enter
pop
jb
retf
jl
sub
ficomp
pop
add
mov
(bad)
(bad)
call
lods
cmp
test
fldenv
(bad)
dec
lods
int3
xor
call
int3
dec
in
pop
push
int3
in
test
mov
add
inc
xchg
or
mov
test
dec
fimul
ds
mov
and
xchg
jae
stos
retf
test
cmp
call
pushf
movs
fisub
or
(bad)
sbb
int3
xor
dec
mov
sub
(bad)
mov
pop
jo
retf
aad
(bad)
dec
jecxz
and
inc
push
jge
aaa
xchg
inc
pop
inc
push
imul
dec
add
jns
ins
fiadd
inc
in
shl
shr
(bad)
data16
jnp
cmp
or
dec
jl
in
in
test
pop
inc
xchg
popa
or
popf
mov
mov
leave
jae
out
mov
movs
jle
mov
mov
sahf
push
inc
shl
dec
hlt
adc
xlat
push
ret
xchg
div
dec
mov
xor
gs
sbb
pop
fdivr
dec
jnp
cmps
cmps
push
mov
cmp
dec
mov
push
pop
data16
ja
fcmovne
or
jb
stc
rcl
outs
(bad)
mov
cmp
stos
dec
inc
psrld
xor
push
add
xchg
and
add
mov
dec
test
pop
loopne
xor
push
loopne
pop
shl
das
add
stc
sub
popf
adc
cwde
adc
enter
mov
sub
mov
xchg
jno
pop
dec
pop
xor
ins
adc
push
xchg
(bad)
sti
pop
es
xchg
arpl
pop
mov
cmp
cwde
adc
popf
inc
sahf
cmp
xchg
mov
mov
retf
enter
inc
loop
pop
iret
int
dec
mov
arpl
jae
and
xor
sub
push
jno
in
test
xor
(bad)
stc
sysret
inc
push
call
mov
test
leave
cmp
inc
dec
jno
(bad)
test
je
push
outs
jne
mov
hlt
dec
mov
jp
rcl
jmp
cmp
ins
mov
adc
outs
jae
inc
cmps
das
jbe
je
ja
int
and
lahf
sbb
retf
adc
xor
adc
sahf
sub
mov
cmp
push
mov
or
(bad)
sahf
push
mov
fcom
fwait
pop
lahf
call
xchg
or
cmp
arpl
push
xchg
mov
and
pop
loope
in
call
xlat
data16
popa
cdq
hlt
cmp
jl
nop
bound
xchg
sub
push
cmp
or
adc
xor
mov
movs
sbb
iret
mov
dec
arpl
mov
js
sbb
fnstenv
sti
frstor
adc
mov
aas
add
popa
sub
and
push
or
pop
stc
xor
sbb
jbe
test
mov
lahf
xchg
cmps
adc
mov
or
add
call
push
push
(bad)
adc
inc
int3
push
cmps
lock
loop
fistp
adc
adc
xchg
sub
movs
push
xchg
(bad)
fmul
add
xor
das
fimul
ss
xchg
(bad)
fdiv
fld
mov
cs
or
mov
sub
rcr
push
cmp
(bad)
cmp
fistp
call
retf
imul
jmp
daa
loop
fild
fmul
dec
in
mov
cmp
popaw
sahf
mov
and
sub
xor
out
xchg
push
adc
pop
xchg
xchg
xchg
xor
into
sbb
icebp
scas
jmp
leave
mov
dec
mov
bound
dec
add
jbe
xor
shl
push
(bad)
pusha
pop
imul
dec
and
cmps
push
inc
cwde
cmc
ds
and
inc
rcl
call
(bad)
out
push
stos
xchg
std
inc
inc
adc
push
mov
pop
inc
pop
mov
fs
outs
inc
adc
mov
dec
xor
sbb
shr
adc
jge
dec
cdq
mov
shr
cmp
mov
xchg
into
xchg
sahf
push
pop
xor
add
jmp
addr16
fist
pop
jb
mov
in
push
lock
cmps
ror
cmps
stos
dec
jne
fnop
outs
popa
in
popa
adc
call
je
mov
stos
mov
lds
shl
cdq
jbe
std
sar
shl
mov
jle
mov
push
cmp
mov
sbb
imul
xor
cli
mov
xor
cli
sbb
pop
and
ror
or
fild
outs
shr
pop
xchg
xchg
hlt
and
or
jns
pusha
out
pop
ins
out
test
clc
mov
xchg
mov
inc
or
sbb
movs
imul
lahf
(bad)
and
cmps
adc
push
pop
xlat
push
dec
lock
leave
mov
or
outs
jle
cmp
add
jmp
dec
add
into
xor
fimul
dec
cs
popf
xchg
cmp
push
(bad)
jb
mov
stos
popf
(bad)
cmc
and
pop
idiv
sub
cmp
fidivr
cmp
fstp
mov
ss
dec
addr16
add
or
cmps
(bad)
cld
pop
outs
mov
(bad)
cmp
(bad)
sti
xchg
mov
hlt
ret
enter
pop
mov
jmp
aas
mov
sar
daa
mov
icebp
int
inc
push
jnp
push
sahf
sbb
mov
push
(bad)
mov
in
(bad)
lock
xchg
sub
fs
std
iret
jae
xchg
rcr
neg
dec
mov
push
ds
ret
inc
movs
inc
mov
neg
pop
mov
mov
sub
mov
enter
pusha
es
scas
inc
add
cs
cmpxchg
leave
cmp
mov
clc
pop
push
mov
pop
cwde
mov
inc
push
lds
cli
out
pop
cmp
popa
dec
arpl
add
and
mov
add
mov
xchg
pop
xchg
sub
xchg
xchg
out
popf
scas
cmp
jle
std
and
pop
mov
jmp
xchg
ret
jl
gs
sti
inc
scas
xchg
and
nop
bnd
outs
mov
jne
mov
cmc
xor
xor
lock
or
fmul
les
mov
jl
cs
das
imul
fnsave
loope
jmp
adc
shl
inc
les
data16
push
xchg
inc
lods
and
add
jbe
xor
pop
and
jmp
(bad)
add
test
sti
mov
stos
inc
cmp
popf
call
movs
mov
retf
add
fnstenv
test
out
pop
les
ss
dec
adc
mov
fidiv
mov
inc
out
je
and
ror
pop
enter
jmp
movs
xchg
cmp
in
xchg
aad
push
ins
icebp
arpl
xor
push
pop
ret
mov
push
xchg
jno
pop
aad
adc
js
mov
adc
jbe
sbb
pop
xchg
mov
inc
dec
stos
jmp
test
xchg
js
mov
cmp
xlat
clc
imul
retf
and
std
mov
add
mov
(bad)
push
mov
add
and
jo
and
repz
mov
sar
xor
xchg
cmp
lea
addr16
sahf
pop
jne
loope
in
mov
rcr
xor
scas
and
sar
ret
in
mov
xor
cmp
xor
jne
cmps
mov
push
push
push
mov
inc
add
push
push
loopne
mov
cwde
or
mov
sahf
cs
xchg
std
pop
mov
dec
int
push
xchg
sub
popa
and
aas
jnp
stos
mov
adc
fisttp
pop
cmp
adc
ret
mov
xchg
and
xchg
jmp
mov
(bad)
and
loop
pop
pop
lods
mov
fisttp
rol
into
jae
out
das
mov
add
pop
lock
(bad)
js
js
sub
icebp
push
into
sti
push
lock
cdq
xchg
test
jmp
popf
not
jge
pop
in
ret
push
pop
push
pop
or
fild
mov
mov
adc
(bad)
in
mov
or
jns
mov
sbb
or
shr
pop
xchg
inc
lods
xor
cdq
jl
xchg
lds
arpl
mov
xlat
xor
call
mov
mov
cmp
movs
fs
adc
retf
aas
sub
in
pop
mov
fmul
jae
popf
push
jmp
push
int
aad
and
pop
push
jbe
xchg
pop
pop
xchg
mov
sahf
push
adc
dec
les
scas
bound
mov
test
jne
sub
cmc
push
test
out
add
push
(bad)
leave
dec
test
retf
stos
mov
fwait
jl
or
loope
xor
cmp
cmp
and
lods
mov
push
mov
repnz
cli
fcom
cwde
sbb
sahf
in
mov
or
xlat
jge
add
sbb
xchg
js
aas
sub
adc
add
leave
push
(bad)
icebp
dec
sbb
mov
xchg
sbb
loope
shl
xchg
sti
cmp
jno
sub
dec
inc
push
jecxz
in
sbb
ror
(bad)
out
push
mov
pop
mov
mov
test
fbld
out
loopne
mov
xchg
dec
jb
jmp
mov
pop
xchg
scas
or
aam
dec
mov
sub
pop
ror
mov
sub
inc
or
jns
(bad)
mov
pop
xchg
pop
and
test
in
xlat
test
jge
mov
mov
or
loopne
loope
(bad)
pop
loopne
ret
rep
in
ficomp
and
cmps
push
dec
push
cmc
inc
movs
jno
fst
stos
fcmovnu
xchg
inc
cmps
add
in
pop
sub
mov
jle
mov
pop
pop
jge
sar
inc
sbb
(bad)
add
inc
rcl
test
mov
addr16
adc
daa
mov
pop
popf
add
imul
stc
and
pop
je
movs
sbb
clc
adc
paddb
es
sub
repz
retf
pop
fst
inc
std
adc
dec
pop
iret
imul
lahf
adc
dec
data16
shr
icebp
repnz
rcl
out
or
pop
repz
xchg
ds
rcl
lea
push
sub
and
clc
push
push
icebp
(bad)
or
jns
pop
push
jo
mov
(bad)
push
mov
sbb
xor
out
cmc
js
stos
out
iret
mul
pop
ja
xchg
xchg
rcr
push
sar
in
xor
call
xchg
fwait
shr
mov
add
jne
pop
add
stos
pop
mov
add
pusha
mov
jle
mov
jnp
cmp
js
push
sti
in
pop
mov
cmc
mov
(bad)
mov
pop
mov
sub
add
nop
les
addr16
outs
jp
fwait
push
pop
ret
aam
jp
push
xchg
fwait
es
nop
fidivr
sti
cs
xchg
lock
inc
mov
dec
sbb
jmp
push
jecxz
cmc
test
popa
dec
mov
adc
cdq
jnp
dec
adc
sub
fsub
leave
push
or
inc
fadd
out
xor
pushf
imul
popf
shr
cmps
ret
cs
push
adc
popa
hlt
rol
movs
in
shl
pop
mov
les
mov
and
sbb
dec
xchg
lods
inc
cmp
ds
pop
into
jae
inc
xchg
add
jl
add
dec
push
xchg
pop
and
fisubr
xor
xor
sbb
add
pop
jmp
xor
push
mov
(bad)
fisubr
push
aad
cmp
add
ja
sub
scas
dec
add
and
arpl
cmps
sti
dec
test
ins
push
(bad)
shl
pusha
inc
fcom
xor
or
push
cmp
dec
and
stos
xor
ss
repnz
ror
inc
shr
push
xor
pop
xchg
iret
mov
rcr
jns
(bad)
and
mov
pop
mov
adc
sub
dec
add
dec
lods
and
dec
cdq
push
dec
imul
lods
inc
in
sahf
loope
and
adc
and
scas
sbb
cmc
pop
(bad)
std
jp
call
xchg
dec
push
push
mov
push
fstp
fadd
push
jmp
rcl
sti
mov
(bad)
cmp
sti
in
test
mov
xor
daa
gs
jle
mov
cmp
xchg
sbb
adc
sub
add
mov
fdivr
xchg
enter
aad
aad
xchg
shr
adc
cli
mov
(bad)
lock
jbe
xchg
int3
pushf
jne
cmp
and
aaa
int
xor
js
pop
fimul
push
dec
retf
mov
std
out
retf
enter
lods
aam
jmp
jge
jno
(bad)
mov
cmc
jae
and
out
hlt
out
adc
add
push
inc
and
pop
add
mov
in
mov
or
(bad)
jmp
outs
mov
push
fild
push
test
dec
loope
mov
outs
jmp
cwde
aas
inc
xchg
fmul
out
imul
jbe
arpl
mov
lahf
pop
in
jmp
adc
push
lds
div
nop
push
pop
sbb
ja
mov
gs
ins
test
inc
and
pusha
in
push
pop
das
cmp
aam
scas
iret
adc
cmp
std
cmc
mov
add
(bad)
test
push
aas
arpl
sbb
fstp
cbw
add
pop
adc
xlat
mov
fwait
ins
lds
mov
add
daa
cmps
data16
imul
pop
ret
sub
adc
sbb
into
mov
push
cmps
mov
popf
mov
cmps
push
in
js
mov
jmp
sbb
push
shl
sbb
imul
ss
aad
aad
arpl
push
mov
jge
push
movs
mov
and
test
jno
sub
dec
rdpmc
mov
sbb
sbb
mov
adc
das
sbb
jbe
mov
mov
jg
or
adc
(bad)
arpl
neg
shr
dec
mov
(bad)
cmc
cmps
cld
pop
cmp
call
mov
cli
fs
pop
inc
std
inc
adc
and
inc
test
mov
xchg
and
call
addr16
movs
mov
out
adc
fdivr
dec
pushf
sbb
rcl
sahf
js
sub
outs
ret
jo
out
mov
je
movs
rol
mov
ret
cli
(bad)
and
or
dec
sub
mov
xor
jmp
jmp
cmp
push
lea
pop
ror
movs
dec
pop
jg
jmp
inc
pop
and
and
call
adc
call
jbe
cld
push
psrld
shl
ffree
push
lods
rcl
mov
xchg
cwde
(bad)
cmc
jo
inc
xor
dec
inc
iret
xchg
test
add
jns
outs
pop
test
stos
jp
stos
cmp
enter
repnz
sbb
leave
les
xor
fldcw
les
hlt
outs
mov
lds
mov
mov
test
cmp
xor
xor
mov
leave
stos
nop
mov
cmp
cmp
jg
adc
loop
push
jp
push
fdivr
mov
xchg
in
and
pop
xchg
jb
hlt
push
mov
lods
mov
imul
(bad)
std
data16
xor
daa
add
or
in
pop
sub
mov
dec
inc
lds
xor
arpl
(bad)
xor
inc
mov
or
adc
sub
je
dec
dec
outs
ror
nop
mov
jge
cmp
and
inc
call
rcr
inc
jmp
push
mov
aas
ror
pop
sub
push
das
sub
lods
outs
stc
pop
mov
mov
int
adc
(bad)
cmp
push
call
xor
enter
fcom
xchg
dec
fidivr
jb
popa
mov
into
dec
mov
aaa
push
dec
pop
add
scas
cld
sub
inc
mov
out
xor
xor
pusha
(bad)
mov
and
jle
shr
lock
fnstcw
lods
dec
jmp
cmps
cs
push
iret
xchg
popa
(bad)
iret
fdiv
mov
into
xchg
fimul
aam
jno
in
fidivr
loopne
push
shr
arpl
ss
xor
repnz
sbb
ds
shr
mov
into
mov
fidiv
cmp
ret
mov
scas
loope
in
scas
or
jae
pushf
cdq
or
cld
stos
test
jmp
sbb
xchg
mov
out
or
iret
sbb
rol
and
pop
add
xchg
xor
addr16
mov
sti
scas
mov
test
and
adc
inc
mov
push
popa
mov
jo
inc
and
fwait
or
sub
lock
cmp
sub
pop
adc
in
jns
hlt
add
punpckhbw
and
xor
ret
xchg
inc
mov
jmp
sub
out
(bad)
push
xchg
jae
out
sub
mov
pavgw
es
es
sub
imul
jmp
xchg
retf
xchg
add
lods
es
push
(bad)
cli
cmc
and
mov
aas
xchg
sahf
jno
fs
cwde
mov
sti
cwde
xlat
fwait
rcr
or
add
add
int3
cmp
std
cmp
xchg
pop
and
fistp
pop
in
sub
cmp
(bad)
js
scas
jns
sahf
cmp
xor
sub
adc
jl
out
mov
adc
or
jae
pop
mov
adc
jle
psrlq
sub
nop
test
push
stos
(bad)
xor
adc
xchg
cmc
pushf
push
mov
(bad)
dec
sub
add
sbb
fs
cmps
les
int
clc
leave
aaa
inc
sti
inc
mov
pop
je
and
jo
cmp
xor
xchg
push
(bad)
out
bound
leave
xor
outs
cld
fld
lds
str
xor
movs
dec
icebp
cld
sbb
inc
call
dec
lods
imul
leave
retf
mov
rcl
xchg
cwde
loop
(bad)
sahf
sbb
adc
js
nop
jl
and
jne
xor
add
imul
fistp
aad
pop
sub
cmp
or
add
push
ss
jmp
xlat
aaa
pop
imul
pusha
rcr
movs
dec
aas
add
mov
cmp
and
add
test
leave
add
popa
cdq
cdq
(bad)
ja
sub
rcr
lahf
mov
(bad)
and
clc
cmp
out
lds
cmp
fs
push
mov
inc
enter
ss
dec
fucompp
ret
pop
mov
xsaveopt
idiv
fidiv
cmps
push
xchg
call
xor
ins
int3
or
icebp
xor
outs
xchg
mov
and
enter
xor
push
lock
std
pop
ret
add
adc
icebp
sbb
xchg
lods
stos
pop
addr16
push
and
or
pop
sub
adc
ror
inc
ret
out
bound
and
ins
or
ds
xchg
mov
aas
mov
cmp
push
sub
cmps
cs
inc
pop
cmps
or
ins
push
(bad)
movs
add
or
cmp
pop
and
cmc
icebp
fld
int3
fldcw
mov
cdq
push
ds
xchg
pop
sar
xchg
push
jg
lahf
jne
ja
mov
inc
(bad)
(bad)
fimul
pop
mov
sbb
pop
sar
and
pop
xchg
cmp
test
cmp
dec
outs
popa
lds
sub
in
sub
xor
inc
dec
fadd
add
retf
ret
or
das
iret
dec
xchg
das
and
sub
add
mov
rol
xchg
xor
pop
jmp
stc
or
cmp
or
xchg
test
shl
daa
xor
loope
mov
fldcw
add
sbb
fs
scas
xor
movs
jl
and
retf
stc
xor
in
xchg
sub
add
push
add
icebp
pop
mov
ret
lahf
loopne
pusha
call
add
jmp
mov
frstor
jecxz
mov
js
idiv
jmp
push
sbb
and
xor
test
xor
(bad)
jo
and
fld
adc
jns
aas
mov
inc
stos
and
in
movs
test
popf
call
mov
sub
xor
mov
jecxz
sbb
sub
add
nop
or
adc
add
and
call
mov
aaa
and
cli
sub
mov
push
outs
out
mov
push
push
js
inc
cmps
aam
ja
mov
sbb
bound
push
aas
add
pop
adc
add
aam
jp
repz
outs
aam
ss
ins
repnz
push
sbb
cdq
dec
scas
mov
ret
outs
imul
test
mov
int
jp
jno
add
(bad)
fcomp
(bad)
aad
cmp
push
lahf
movs
imul
ss
dec
pusha
loop
hlt
mov
cmp
cmp
mov
ds
sti
xor
adc
mov
xchg
push
les
ret
lods
adc
sbb
adc
mov
shl
in
call
jmp
hlt
or
mov
push
mov
xor
leave
bound
stos
repz
stos
enter
jns
inc
pop
jb
popf
mov
cld
shr
adc
or
fs
ret
pop
and
cdq
mov
xor
sti
pop
lds
fsub
out
loopne
stc
cmp
pop
push
out
ror
mov
in
shr
inc
sub
setl
sub
dec
movq
xor
aas
add
xor
sbb
pop
sub
push
sub
or
xchg
retf
je
sahf
dec
mov
push
or
xchg
shr
popa
adc
fisttp
out
mov
cli
jno
test
mov
sbb
in
sbb
fld
sahf
and
xchg
gs
mov
in
mov
movs
popa
lods
xchg
cmp
clc
or
pop
outs
mov
sub
cmps
(bad)
xor
dec
gs
stos
icebp
mov
pop
and
push
stos
sbb
js
inc
ss
mov
mov
mov
cmp
mov
ins
xchg
sub
jmp
xchg
and
aam
or
and
and
(bad)
out
popf
lods
lods
jae
add
xor
and
arpl
ficomp
fcmovnb
nop
mov
push
xor
mov
push
imul
test
xchg
lock
call
sub
lods
jp
jecxz
xor
mov
call
fidiv
push
ss
aas
in
or
and
rol
adc
mov
push
ret
dec
sbb
imul
movs
jo
adc
stos
adc
lahf
mov
cdq
test
or
scas
inc
jge
sub
daa
adc
test
xchg
(bad)
call
retf
mov
or
mov
pop
dec
sub
loope
xlat
or
(bad)
push
mov
sub
jge
popa
ss
scas
cwde
mov
sti
icebp
in
pop
out
xchg
in
jns
mov
xor
add
fidiv
xor
imul
cmp
in
mov
retf
xchg
popa
xor
push
and
push
add
ret
xchg
dec
(bad)
sar
mov
test
add
fsubr
mov
sub
das
xchg
cmp
aad
pop
lds
xor
test
push
aas
dec
or
sub
mov
dec
pushf
sub
cld
cmp
xchg
jmp
mov
xchg
or
fwait
lock
aam
pop
ins
push
pop
fwait
xchg
pushf
rol
setne
dec
lods
mov
nop
pop
push
pop
cmps
clc
aas
jg
ja
mov
jbe
cmp
push
out
mov
add
cmp
xor
(bad)
lods
maxps
js
imul
sahf
aad
pop
pushf
inc
sti
xor
aaa
cmp
aam
push
jmp
mov
call
jns
mov
mov
cs
jb
mov
add
ret
add
ss
mov
les
fst
cmp
repnz
jl
push
sbb
outs
jns
inc
and
push
push
dec
pop
xor
retf
(bad)
push
add
cdq
popf
jbe
(bad)
inc
mov
mov
add
push
nop
inc
add
scas
sti
lock
cmp
outs
int
inc
jg
mov
dec
mov
in
imul
jns
sbb
xlat
shl
cmp
add
jp
mov
xlat
add
jae
in
pop
inc
out
xchg
xchg
cmps
push
mov
sub
cmp
(bad)
ret
cdq
leave
pusha
pop
push
sar
push
inc
pop
adc
imul
addr16
daa
and
fcom
pop
sahf
xor
fidivr
nop
xchg
mov
adc
imul
mov
js
aam
jae
inc
and
jle
push
addr16
fdiv
push
ror
mov
mov
cs
inc
sub
idiv
out
ret
ins
mov
sub
ins
(bad)
fild
cmps
add
add
dec
xchg
fstp
pop
sub
cmps
outs
dec
xchg
cmp
or
jne
call
lahf
repz
aas
into
push
sub
or
cmp
mov
lods
or
mov
jno
pop
xchg
cmp
jbe
sbb
ret
loopne
cmp
aad
sub
mov
call
push
mov
retf
(bad)
rol
dec
fisub
jg
in
mov
inc
ja
sar
pop
adc
jns
call
push
mov
mov
call
push
sbb
popf
fsubrp
stc
aaa
je
mov
mov
and
pop
es
sub
jmp
dec
fild
jbe
mov
jns
je
fwait
std
int
rol
sbb
dec
jg
inc
shr
add
and
inc
cwde
shl
dec
sub
cmp
nop
mov
pop
mov
aam
jg
in
test
in
cli
xchg
cmp
lds
cld
cmps
inc
mov
inc
sbb
xor
cmp
push
movs
aaa
cwde
fidiv
ror
xor
jle
outs
nop
mov
jg
mov
int3
out
aam
push
xlat
cmps
dec
and
mov
pusha
dec
fstp
xchg
inc
fnsave
push
shr
(bad)
retf
loopne
push
fcmovnbe
add
nop
or
add
test
dec
in
mov
cmps
cmp
add
mov
int3
movs
dec
aad
dec
dec
sub
nop
cwde
fild
mov
fild
or
sbb
sub
cmps
outs
arpl
inc
das
mul
dec
cvtps2pd
add
or
popf
sbb
push
pop
mov
or
int3
out
cmps
stos
adc
popf
or
cs
fld
in
mov
arpl
sbb
aam
pop
pop
std
popf
jg
fnsave
cmp
retf
push
cdq
push
shl
jno
mov
popf
movs
repz
xor
imul
out
push
out
and
imul
pop
test
test
shl
adc
imul
mov
rcr
jmp
lods
push
jmp
and
out
movs
pop
push
les
rcr
mov
mov
mov
pop
jnp
jbe
xor
jbe
and
adc
sbb
mov
leave
aaa
pop
xchg
into
mov
cli
cmps
and
dec
push
hlt
xor
sub
jmp
adc
jnp
repnz
sub
pop
inc
or
mov
ins
movs
mov
cmp
les
mov
dec
rcr
pop
push
popa
loopne
push
sub
fdiv
into
scas
call
mov
inc
shl
(bad)
dec
push
out
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
cmp
add
mov
jg
sub
mov
lods
sbb
pop
icebp
and
pop
repz
cmp
dec
sub
ret
stos
cmp
and
jns
xor
and
cld
sar
in
sbb
and
les
call
sub
arpl
adc
add
lods
cmc
fwait
movs
adc
jmp
scas
push
pop
xor
mov
daa
pop
jmp
and
jl
inc
lods
mov
push
pop
mov
add
sbb
xor
inc
cwd
in
mov
jbe
mov
pop
xchg
scas
lods
sti
das
pop
aas
ror
jae
jmp
mov
in
sbb
clc
adc
shl
push
add
jg
js
push
inc
push
out
and
or
adc
pop
std
loopne
call
fwait
(bad)
aad
pop
aam
stos
or
push
push
mov
fucomip
xchg
sbb
cmp
sbb
test
test
add
repz
cs
adc
std
mov
(bad)
fsubr
inc
mov
ret
jae
fild
sub
ins
inc
mov
leave
and
aas
test
ss
aam
jb
push
or
jns
push
mov
xor
and
aad
cmp
sahf
mov
and
xchg
inc
ficomp
inc
in
int
xor
ds
lock
xor
mov
loope
lea
jb
and
ins
into
and
iret
xor
adc
sbb
retf
retf
das
pop
aas
mov
je
lods
cs
(bad)
mov
lock
and
inc
and
push
je
sbb
jbe
sbb
mov
lods
mov
sbb
adc
inc
dec
add
and
and
sub
ins
in
mov
push
push
sbb
(bad)
call
lahf
je
outs
sub
out
test
pop
leave
or
(bad)
and
into
push
sbb
fwait
mov
into
rcl
mov
popf
outs
inc
iret
jbe
ror
into
outs
and
inc
out
or
retf
or
rcr
dec
and
scas
jnp
retf
je
sbb
cmc
add
in
enter
sub
add
test
out
in
pop
pop
enter
dec
addr16
xchg
inc
int
(bad)
call
cmp
adc
rol
add
jecxz
sbb
aas
adc
das
adc
(bad)
call
lods
dec
leave
sub
sbb
add
js
(bad)
jge
aas
jns
in
pop
out
mov
sbb
lods
push
xchg
(bad)
das
push
in
movhps
pop
hlt
sub
sub
add
dec
push
in
loopne
mov
int3
test
push
(bad)
and
popa
cmp
lods
test
cmp
xor
inc
leave
imul
rol
jle
ret
test
xor
xchg
inc
lahf
loop
xor
xchg
jns
stos
call
test
out
data16
call
sar
mov
xchg
pop
cmp
shl
mov
rcl
xor
arpl
jmp
sar
test
pop
push
neg
mov
jno
push
out
outs
addr16
add
add
mov
in
inc
test
daa
loope
es
lea
fwait
dec
outs
fdiv
loopne
sub
retf
aam
xchg
jecxz
jo
arpl
fsub
test
push
cdq
adc
pop
pop
aas
(bad)
ins
repz
push
(bad)
in
or
pop
popf
arpl
rol
or
pop
push
jb
es
jecxz
retf
sub
mov
(bad)
cmp
add
inc
rcr
fisub
test
(bad)
stos
jnp
add
inc
leave
pop
jno
aad
inc
les
adc
dec
out
jbe
loop
stos
lahf
add
fbstp
jbe
clc
push
pushf
sub
and
add
and
jno
or
mov
jb
add
imul
fwait
(bad)
and
jae
inc
or
mov
repz
bound
add
mov
or
inc
sbb
jb
push
mov
lds
(bad)
inc
cmp
inc
(bad)
jl
cmp
mov
sbb
xor
aad
cs
inc
or
and
jno
sti
xchg
mov
daa
popa
inc
cmps
xchg
jp
std
xchg
adc
xchg
cmc
mov
inc
sbb
sub
(bad)
cli
mov
sub
cmp
repnz
cs
sahf
push
and
int3
js
outs
cmps
loope
sti
mov
jmp
sub
sahf
push
call
(bad)
fstp
or
cs
jg
popf
pop
jmp
leave
sbb
or
dec
pop
jg
xchg
inc
pushf
inc
mov
push
cld
loopne
ins
call
mov
add
jge
inc
(bad)
fbld
ror
dec
jnp
lahf
test
cmps
mov
or
dec
in
sbb
or
add
mov
xor
xor
mov
push
cmp
sub
sub
mov
push
pop
out
mov
dec
(bad)
loope
pop
sub
mov
cmp
movs
adc
ret
cs
mov
sub
adc
push
mov
mov
fwait
mov
stos
popf
dec
mov
aas
test
rep
ficomp
aas
xor
pop
cmp
mov
pop
stos
jns
outs
push
mov
dec
or
ror
stos
mov
cmps
iret
xchg
pop
shl
sbb
cdq
and
push
popa
repz
mov
jmp
push
pop
push
jg
mov
es
mov
sar
dec
push
mov
sbb
add
ret
fst
scas
jno
imul
pushf
es
(bad)
jnp
add
sar
sbb
shl
popf
xlat
cld
(bad)
sar
(bad)
cli
rol
mov
imul
in
fstp
sub
jb
mov
push
imul
mov
pop
(bad)
sar
push
jo
jbe
scas
or
movs
inc
loope
scas
jge
cli
adc
xor
xchg
enter
outs
mov
adc
stos
dec
mov
inc
dec
push
inc
retf
mov
xchg
cmc
adc
scas
jb
ins
sbb
lods
dec
movs
lds
sahf
jb
div
stos
pop
imul
jbe
pop
mov
adc
push
leave
pushf
and
nop
stos
stos
pusha
ja
pop
jne
bound
xchg
imul
xor
loop
jp
lods
fisubr
das
push
rcl
pop
jne
inc
shl
aaa
mov
into
xlat
popf
dec
lock
adc
sahf
add
inc
jp
xchg
mov
fist
xor
mov
retf
and
(bad)
mov
out
dec
mov
sub
or
cmp
push
enter
push
sahf
iret
pop
mov
fs
jbe
dec
out
pop
mov
fwait
lds
jo
push
xchg
cdq
mov
les
xchg
sbb
daa
in
push
sbb
or
retf
mov
scas
push
jg
retf
xor
jae
test
in
ds
mov
cmp
cmps
xchg
es
loopne
sub
hlt
pop
push
add
jb
imul
icebp
mul
retf
test
pop
jmp
pop
push
pop
mov
mov
pop
fs
and
dec
jg
(bad)
mov
mov
sbb
cmp
scas
test
ror
mov
aaa
mov
cmp
es
mov
adc
cmp
dec
cld
mov
mov
std
sub
xchg
push
and
mov
movs
loope
pop
shl
sbb
mov
nop
clc
jns
js
jne
inc
sub
shl
pop
xlat
jo
push
or
dec
imul
aad
cs
loope
xchg
(bad)
and
sub
pop
push
cwde
test
cmp
jno
add
mov
arpl
outs
loopne
stc
xor
sbb
jne
add
stos
push
sbb
lods
popa
ret
pop
ins
push
mov
adc
test
rcl
mov
out
mov
push
xor
mov
mov
xor
cs
mov
add
ja
sub
(bad)
mov
push
pop
aaa
or
mov
mov
fistp
jge
outs
inc
push
int
leave
scas
cmp
out
call
inc
movs
loop
hlt
push
mov
test
movs
xchg
sub
mov
shl
add
adc
dec
dec
jb
xor
mov
mov
call
sub
pop
sub
push
xchg
movs
les
add
jle
shl
sub
pop
pop
mov
lahf
jns
xchg
adc
xchg
xor
cs
xchg
mov
add
in
enter
sbb
cmp
inc
jb
cmp
mov
and
lock
and
sub
sub
mov
mov
jno
add
push
js
test
mov
lods
or
xor
mov
jns
mov
pushw
jmp
cs
pop
adc
push
scas
(bad)
or
cmp
or
sbb
shl
mov
mov
pop
lahf
aaa
in
add
popf
addr16
mov
arpl
jp
cmp
stos
imul
jecxz
sbb
stc
push
test
imul
mov
sbb
mov
adc
pop
push
push
pusha
xor
rcr
and
jno
add
cbw
xchg
and
lock
or
das
add
aad
je
aas
push
in
ins
lods
repnz
and
stos
mov
(bad)
jbe
adc
pushf
xchg
dec
sub
mov
cmps
ins
es
repnz
loop
mov
dec
scas
lock
ret
ins
shl
jbe
cmps
movs
popf
push
cmc
push
mov
sbb
loopne
jae
jnp
add
cmp
jl
mov
into
xor
mov
inc
xor
mov
xchg
loopne
jae
dec
into
pushf
xor
or
push
scas
bound
or
in
(bad)
jle
cmp
cmp
pop
cli
dec
sbb
(bad)
out
pinsrw
enter
aas
in
inc
in
adc
mov
jg
and
and
test
xchg
daa
pop
cmp
movs
out
mov
sar
inc
fcom
icebp
loope
outs
js
in
test
jle
cld
popf
adc
pslld
outs
push
xchg
xor
jnp
fs
push
sar
fnstsw
jmp
pop
bound
lahf
cmp
out
or
cpuid
sbb
in
test
xchg
xor
dec
cli
out
pop
into
mov
push
aaa
std
pop
lock
jge
rcr
leave
nop
push
fcomp
xor
inc
pop
(bad)
jmp
push
jno
enter
stos
dec
out
imul
popa
cmp
sub
or
ins
pusha
sbb
into
popf
add
sahf
retf
out
jns
fsubp
int3
mov
aam
sub
or
sahf
mov
ror
mov
(bad)
fs
and
imul
jl
or
jne
fwait
mov
jb
sahf
or
inc
adc
sbb
aas
cdq
aaa
dec
call
cli
pusha
(bad)
(bad)
xchg
inc
mov
add
es
dec
and
repnz
cmp
cmp
cmp
cmp
jmp
mov
outs
fbstp
(bad)
dec
cmp
daa
sub
pop
out
cmc
mov
cmps
mov
xor
rcr
or
push
shr
sub
ins
push
stos
and
and
adc
daa
ins
jge
adc
mov
push
cmc
sti
inc
out
dec
out
not
or
jmp
push
xchg
jecxz
fisttp
leave
dec
or
dec
fisub
retf
jp
lods
dec
inc
sub
daa
std
and
cmp
mov
fcmovbe
ins
mov
xchg
iret
leave
pop
cli
xchg
or
mov
xor
push
mov
adc
cwde
es
pushf
(bad)
js
cmps
fs
or
movs
fmul
cmp
pop
ss
sbb
inc
sub
inc
cvtps2pi
and
ds
sub
add
ja
js
ror
inc
scas
mov
add
retf
bound
sub
ds
arpl
aaa
sbb
sub
lds
arpl
push
(bad)
ror
sbb
pop
iret
pusha
fs
or
and
add
mov
push
fwait
sbb
and
test
dec
push
dec
add
sub
xchg
sbb
dec
add
mov
daa
test
stos
or
adc
push
mov
dec
shl
cmp
loopne
dec
xchg
popa
adc
lods
mov
call
lahf
xor
mov
punpcklwd
ja
jmp
retf
xor
ins
cmp
cwde
lds
fst
push
xlat
ror
mov
sub
fist
jne
inc
(bad)
out
xchg
pop
mov
fs
out
inc
cmps
pop
out
sub
imul
scas
(bad)
(bad)
call
repnz
data16
push
lods
inc
leave
sub
movs
jmp
dec
shr
das
es
cld
int
test
dec
jmp
retf
sbb
aaa
das
push
adc
mov
xchg
jl
pop
test
popf
xor
push
ss
aaa
inc
nop
xchg
in
dec
adc
inc
scas
lea
repz
jo
mov
sar
mov
fiadd
push
aad
mov
xchg
aas
sub
mov
adc
daa
jp
jae
sbb
sbb
add
xor
outs
imul
lock
hlt
div
or
pop
ret
ret
repnz
and
cmps
test
test
fistp
pop
pop
lahf
in
in
clc
pop
xchg
push
sar
sbb
push
pop
lods
cs
jne
call
imul
(bad)
in
imul
add
mov
xlat
and
scas
mul
pop
sub
ins
fnstenv
mov
(bad)
cld
stc
mov
xchg
jns
push
bound
xor
pop
lock
cmp
push
(bad)
scas
and
rcr
movs
mov
pop
fs
cmp
(bad)
mov
not
shl
pop
push
out
retf
out
mov
imul
adc
jns
in
xor
pop
mov
in
jae
(bad)
ja
outs
stos
ret
inc
mov
inc
pop
dec
sbb
mov
dec
repnz
ins
dec
pop
ror
out
dec
and
add
pop
and
push
data16
repnz
in
repnz
fwait
aas
push
and
xchg
lea
mov
les
dec
cmp
xor
mov
and
inc
adc
mov
sub
xor
cmp
dec
mov
add
inc
dec
mov
add
push
sbb
fs
cmp
and
add
ret
outs
leave
or
mov
cmp
icebp
jns
shl
push
pop
cmp
add
or
lahf
mov
xchg
and
lea
jae
sub
fstp
sbb
fwait
cmp
pop
add
lds
les
enter
ins
jge
mov
shl
call
repnz
mov
and
push
call
sub
in
je
push
pop
jb
imul
enter
loopne
movs
or
inc
mov
jns
movs
mov
fsubr
imul
push
dec
jecxz
shl
mov
pop
or
and
mov
(bad)
xor
fs
cmc
(bad)
clc
call
add
push
cmc
ss
sbb
push
(bad)
lahf
loop
clc
ss
in
lahf
jp
dec
add
stc
div
adc
call
pop
dec
loope
ins
out
out
mov
daa
push
test
add
xchg
cwde
into
add
(bad)
rcl
cmp
imul
pop
adc
xlat
in
push
mov
jmp
inc
xchg
mov
fstp
cli
jmp
test
mov
cdq
(bad)
cs
imul
aam
mov
mov
adc
mov
cmp
mov
jb
enter
pop
popf
add
hlt
je
jbe
std
xchg
out
aad
mov
pop
popf
test
les
pop
jmp
mov
scas
and
jb
sub
loope
std
adc
(bad)
mov
cmp
out
cmp
ror
std
lds
lods
mov
push
stos
cdq
sub
in
pop
imul
js
push
mov
es
fild
sbb
out
dec
push
jnp
(bad)
addr16
repz
pusha
dec
fdivp
inc
or
scas
lods
loop
and
mov
mov
push
fisubr
cmc
adc
jb
sahf
fidiv
sub
dec
pop
mov
test
mov
jnp
xchg
push
add
ja
dec
inc
and
mov
cmp
lods
sahf
xchg
cmp
test
lahf
pop
add
fs
pop
and
arpl
lds
mov
inc
das
push
icebp
neg
sbb
in
js
and
addr16
adc
or
xor
inc
jo
adc
mov
js
mov
mov
out
out
sub
or
pop
cmp
pop
mov
call
sbb
and
mov
fadd
and
push
inc
push
mov
cwde
mov
stc
jae
pop
stc
or
mov
stos
cld
dec
icebp
(bad)
enter
or
add
push
push
div
loopne
cs
dec
dec
pusha
push
imul
cmc
pop
cmps
jge
(bad)
aam
sbb
xchg
adc
in
inc
xor
out
mov
retf
aas
jns
(bad)
fild
call
cs
sub
cmps
pusha
sub
jl
fst
addr16
adc
xchg
add
in
jno
aad
std
enter
xchg
rcr
jmp
add
int3
add
or
mov
in
out
test
or
cmp
call
mov
push
repnz
fwait
pop
test
jp
fidivr
sub
clc
out
out
fcomp
add
add
jmp
add
sub
xchg
pop
test
jmp
sbb
jbe
pop
jge
dec
xchg
std
push
cs
in
xchg
jno
daa
jmp
movs
in
lods
fcom
or
push
inc
movs
mov
pop
sbb
dec
or
xor
mov
sbb
loop
jnp
or
outs
ficomp
les
and
sbb
xor
ins
pop
sbb
arpl
mov
jne
xchg
in
pop
push
or
dec
jne
push
mov
retf
out
test
and
and
mov
(bad)
fstp
lock
enter
ins
test
inc
test
sub
pop
push
cld
sbb
xchg
test
sbb
sbb
xchg
push
leavew
ins
inc
pop
inc
cwde
cmp
fist
inc
jl
das
ja
or
mov
sbb
mov
adc
fistp
pop
and
test
div
out
push
dec
xchg
fldcw
into
je
fs
sub
out
push
ss
inc
int3
jp
ret
add
frstor
cli
push
fsub
or
jle
jmp
jle
test
mov
jle
repnz
ficom
daa
bound
push
push
dec
cs
mov
je
rcr
outs
mov
jp
out
jb
cwde
out
xchg
ds
mov
jecxz
push
das
repz
cdq
mov
daa
lahf
xor
retf
xlat
cli
cs
call
mov
push
loope
enter
mov
fidivr
(bad)
mov
push
push
ret
pop
jl
xor
das
shl
xchg
and
loope
sub
std
dec
ins
inc
pushf
push
mov
stc
aad
idiv
fnstcw
pop
sbb
rcr
ret
enter
cmp
sub
sub
jmp
xchg
das
push
fldenv
or
cmp
daa
cmp
mov
aaa
xor
xchg
cli
or
mov
clc
fdivrp
ret
and
ins
fcom
jmp
pusha
jp
ret
xchg
mov
shl
dec
add
shl
mov
sbb
or
xor
repz
cmp
dec
stc
adc
pop
mov
sub
adc
mov
jge
adc
jae
fst
push
dec
loopne
xor
push
mov
or
adc
push
pop
push
fs
push
inc
pop
(bad)
aam
sbb
mov
cli
add
cli
push
xchg
jmp
inc
sbb
pushf
mov
imul
push
dec
jecxz
shl
push
mov
test
pop
push
or
push
pop
add
add
inc
bound
or
loop
xchg
xchg
and
aad
dec
shr
add
fidiv
ret
sbb
push
mov
(bad)
cmp
mov
mov
rcl
scas
mov
sti
in
es
and
jno
or
shr
push
(bad)
in
mov
out
mov
ret
dec
xor
and
push
rol
sbb
jmp
jae
mov
dec
cmp
jo
sbb
mov
xor
dec
mov
aas
inc
stc
popf
fdivr
das
xor
or
pcmpgtb
popa
and
aam
push
sub
call
ror
xor
imul
mov
xor
xchg
cdq
out
cli
in
inc
push
mov
and
ror
movs
cdq
push
js
pop
je
and
pop
mov
ret
mov
ins
and
(bad)
sub
in
popf
jmp
mov
inc
inc
dec
retf
push
into
push
pop
push
sub
stos
popa
add
xchg
adc
xor
pusha
dec
inc
adc
sahf
div
jl
sub
js
sahf
sahf
cld
dec
pop
fnstenv
aaa
test
pop
inc
jo
aas
or
xor
imul
and
in
pop
setno
retf
pop
push
cmp
imul
fcmovnu
sbb
push
fld
mov
aaa
scas
aas
cmp
std
push
fwait
in
or
cmps
js
icebp
mov
mov
imul
jb
dec
cmp
in
aam
sbb
xor
or
sbb
test
dec
(bad)
dec
sub
mov
dec
mov
addr16
sti
jb
mov
fist
sbb
adc
or
into
ins
inc
arpl
es
movs
dec
xor
add
jae
jmp
jecxz
mov
add
xchg
bound
pop
xor
repz
fpatan
(bad)
scas
jmp
lods
pop
mul
out
push
inc
sbb
in
in
sbb
call
mov
pop
add
mov
rcr
sbb
pusha
repnz
or
jbe
dec
and
xor
dec
inc
inc
and
push
sbb
clc
(bad)
adc
xor
in
enter
mov
pop
hlt
xchg
into
lds
cmp
dec
cwde
ins
push
arpl
outs
rol
lds
xor
test
iret
ffreep
or
adc
into
cdq
mov
jnp
arpl
in
in
iret
mov
pop
loope
pop
int3
or
adc
pushf
xor
add
adc
mov
mov
push
xchg
sbb
jmp
jnp
xor
dec
jp
add
fstp
nop
lods
mov
push
add
pop
repnz
adc
push
mov
sbb
xor
leave
push
retf
mov
mov
mov
imul
pop
xor
xchg
xchg
inc
mov
fldenv
jg
push
jns
mov
and
jle
test
loope
mov
jecxz
fild
ja
fld
fwait
jns
sbb
xchg
mov
push
push
jo
add
sti
lea
add
mov
imul
adc
adc
mov
sub
push
cli
jg
shl
push
mov
pop
sbb
sbb
lahf
add
lahf
popf
inc
or
add
xor
fs
and
rol
(bad)
adc
arpl
fstp
add
sbb
xor
pop
mov
add
mov
sub
sahf
xor
xchg
dec
bound
cmc
and
nop
loopne
rcr
ss
and
fcom
jne
loopne
aad
popa
xchg
mov
rol
sbb
pusha
inc
cmp
xchg
test
jns
xor
popf
out
aam
loopne
fldcw
retf
jno
sub
dec
lds
movs
fld
xor
push
in
call
jns
inc
clc
mov
icebp
sar
cmc
(bad)
mov
sub
cmp
out
inc
cdq
xchg
pop
pop
int3
mov
xchg
repz
lock
int
xchg
xchg
pop
mov
sub
mov
jnp
add
popa
cmc
int
jmp
sub
test
cld
out
sbb
xor
cli
cwde
cmps
xchg
icebp
inc
and
and
dec
push
pop
inc
shl
pop
gs
out
xchg
adc
repnz
aaa
pop
adc
xchg
inc
aas
test
loopne
or
(bad)
lods
xchg
(bad)
xchg
ja
adc
adc
aas
jo
sti
nop
add
outs
adc
call
clc
retf
pop
addr16
pop
js
sub
xchg
lahf
sbb
outs
jnp
call
js
sbb
lods
mov
popa
lods
repnz
mov
das
pop
mov
(bad)
or
ret
(bad)
imul
mov
dec
xchg
push
lahf
add
test
stc
dec
adc
data16
push
pop
ja
lea
mov
mov
(bad)
jae
out
repz
add
and
adc
rcr
(bad)
loop
jae
das
jmp
dec
stc
out
cmp
or
rol
add
stos
or
sti
mov
(bad)
xchg
gs
xchg
call
mov
mov
arpl
out
mov
rcl
add
call
add
ins
and
xor
shr
xchg
into
sbb
pop
icebp
maxps
mov
(bad)
loopne
sbb
lea
shr
add
and
dec
shl
les
dec
rcr
xchg
sub
rol
push
mov
arpl
icebp
ret
add
rcl
lods
das
ficom
in
aaa
dec
jecxz
push
int3
and
jae
idiv
pop
sub
pop
shl
sub
cmps
mov
cli
jp
repnz
in
or
ss
fmul
cmp
jmp
jp
pop
cmp
inc
xor
jecxz
adc
inc
je
imul
or
push
pop
mov
jb
not
(bad)
cmp
lods
(bad)
or
sbb
not
idiv
mov
mov
inc
sub
loopne
inc
enter
xchg
(bad)
dec
neg
retf
aaa
xchg
inc
jmp
aaa
mov
out
xlat
inc
mov
ins
loope
or
cmps
pop
jns
inc
in
inc
stos
das
mov
or
test
or
push
neg
xchg
nop
mov
movs
repnz
mov
mov
mov
push
es
mov
dec
jg
loope
fs
push
or
push
dec
sbb
sub
(bad)
(bad)
push
xor
repnz
loopne
pusha
jl
aad
push
sub
inc
pop
mov
sahf
popf
sahf
or
sbb
push
jns
cmp
cli
pop
sbb
stos
ret
fistp
and
cmp
sub
mov
and
push
sbb
cmps
daa
push
adc
maskmovq
adc
(bad)
cmp
in
popa
and
jmp
pop
loope
mov
sub
adc
out
prefetch
imul
loope
sub
add
stc
test
loop
mov
add
jmp
jmp
stc
mov
(bad)
stos
mov
aaa
sahf
push
lock
repz
jbe
inc
jnp
mov
fnsave
outs
inc
jecxz
xor
xchg
gs
nop
mov
fisub
test
add
lods
xchg
xor
xlat
xchg
hlt
push
jmp
jmp
pop
cmp
mov
stc
sti
test
inc
sub
and
fldcw
push
ror
sbb
or
xchg
or
mov
mov
ins
in
mov
sahf
inc
cmp
dec
(bad)
and
arpl
cmp
test
mov
and
fsub
pop
xor
lahf
mov
ins
out
adc
sub
mov
adc
inc
cmp
cmps
jp
pushf
nop
push
retf
sbb
xchg
push
pop
mov
(bad)
sbb
arpl
aaa
dec
push
int
ins
and
imul
popf
push
ss
push
aad
ins
(bad)
sbb
sbb
jmp
pop
pop
add
es
lods
retf
in
cs
and
fadd
test
and
sub
mov
adc
out
test
addr16
jns
dec
sub
sbb
out
(bad)
imul
call
pop
xchg
loopne
cmp
sbb
xor
xor
jne
lods
fsub
pop
lahf
jp
xchg
inc
out
push
bound
(bad)
lock
les
add
les
xchg
das
push
mov
lods
push
dec
dec
add
cmp
in
add
inc
or
push
push
ret
(bad)
enter
and
popf
fs
sar
lahf
jbe
xchg
fisubr
scas
jecxz
ret
adc
test
push
jae
shl
(bad)
pushf
in
cmp
sub
mov
(bad)
jmp
or
push
pop
in
jns
adc
push
fcom
add
mov
dec
push
xchg
mov
enter
cmps
mov
inc
push
sub
cli
xchg
mov
inc
adc
fsubr
pop
imul
aaa
fnstenv
outs
enter
push
lods
pop
jae
nop
pop
in
js
mov
outs
xor
out
rcl
push
mov
cs
jmp
pop
cmps
push
add
cdq
push
div
inc
sbb
mov
(bad)
psrlw
movs
retf
pop
xor
push
in
rol
data16
dec
popf
aas
shr
mov
dec
dec
pop
xchg
aaa
mov
out
xchg
mov
adc
adc
xchg
mov
jnp
clc
jl
mov
dec
jo
mov
mov
mov
mov
jae
shl
push
jle
mov
shl
sti
and
mov
sub
cmp
sbb
dec
addr16
fmul
cmps
push
ins
rol
mov
repnz
push
or
dec
imul
lea
xor
mov
xchg
mov
mov
and
inc
(bad)
stos
xchg
xor
mov
cmp
xor
xchg
dec
jnp
jns
shl
pop
fist
cmp
mov
clc
neg
push
mov
pop
inc
xor
and
pop
loope
ins
pop
or
xchg
jns
cs
cmp
ins
inc
sbb
shl
pop
adc
fcmovnb
int3
lock
cmps
xchg
push
xor
mov
aaa
das
fcmovb
mov
sbb
inc
and
or
dec
jl
data16
popa
jae
jl
jecxz
imul
sub
ja
fld
mov
cmp
ror
or
in
jne
sub
cmp
pop
push
ror
dec
pop
add
stc
xchg
dec
sbb
xchg
dec
pop
frstor
pushf
(bad)
xor
imul
data16
sub
mov
xchg
xchg
lea
outs
push
adc
cmp
cli
xabort
(bad)
cmp
and
aas
ret
stos
or
ror
or
test
es
or
xchg
ins
push
or
fimul
pusha
ja
(bad)
push
mul
nop
pop
cmp
mov
movs
push
lahf
or
push
fcmove
ret
fild
lahf
push
(bad)
in
push
inc
sbb
sti
mov
pop
push
mov
sbb
jg
and
ins
xor
pop
rol
std
push
popf
cmp
pop
jecxz
cli
sbb
jae
dec
inc
stc
push
jecxz
int
xchg
movs
sub
adc
in
jnp
fwait
test
xor
sub
push
pop
push
cs
cmp
push
dec
sbb
gs
mov
pop
jno
loop
test
dec
mov
dec
outs
in
xchg
mov
enter
pop
add
xor
fsubr
mov
xor
int
mov
ret
sbb
dec
sub
jl
lods
dec
add
push
xor
jns
jp
cmps
add
or
in
xchg
inc
fs
cmc
repnz
call
aad
cs
inc
fcomp
mov
inc
daa
popa
adc
xchg
dec
cmp
push
data16
pop
add
loop
(bad)
cmps
in
or
push
(bad)
xchg
mov
lea
xchg
test
jecxz
and
xchg
movs
xor
test
xchg
adc
add
aad
push
arpl
inc
das
int3
rcl
sub
lock
xchg
data16
cmp
imul
xor
adc
loope
packssdw
(bad)
pushf
sub
rcr
popf
pop
in
stos
mov
xlat
test
add
sbb
sub
xchg
or
nop
outs
jns
imul
add
aaa
push
(bad)
cwde
scas
jmp
or
std
xchg
and
es
aas
mov
cld
cmp
push
imul
std
dec
add
int3
mov
inc
inc
movs
push
mov
fcomp
pop
repnz
jp
pop
aad
push
loop
mov
push
mov
cmp
es
xchg
mov
loopne
loope
fisubr
ja
mov
adc
mov
jae
xor
inc
inc
cmp
jae
das
das
in
fnstenv
repnz
and
int3
mov
lods
dec
push
mov
leave
sbb
aas
add
xor
jmp
xchg
sub
sub
sar
sub
jbe
mov
out
inc
int
push
shl
dec
xchg
out
shr
out
fcmovu
sub
mov
add
ds
mov
sbb
jge
movs
rcpps
cmp
adc
xchg
push
or
or
xor
daa
mov
jge
jge
cld
jle
mov
xor
mov
add
cmp
mov
or
inc
jle
mov
dec
inc
inc
sbb
push
adc
jmp
adc
fst
aaa
inc
ret
sub
jbe
jne
mov
mov
add
enter
add
imul
mov
call
pop
js
fist
mov
xor
add
jl
mov
(bad)
fst
add
int3
xchg
ret
push
stos
mov
fbld
push
mov
add
lods
sbb
xchg
add
outs
xchg
dec
(bad)
or
popf
call
repz
loopne
sub
sti
mov
test
in
iret
sub
mov
or
sub
push
pop
stos
stos
ss
and
dec
clc
jl
push
cwde
ss
mov
sub
(bad)
(bad)
rol
sub
iret
ror
shr
add
mov
ror
push
call
sub
push
add
add
mov
pop
mov
xor
or
and
xlat
scas
imul
mov
and
(bad)
inc
sar
(bad)
and
mov
das
loop
inc
icebp
cmp
test
je
imul
ret
retf
loope
xchg
daa
pop
loopne
xlat
mov
sub
lods
rcl
ins
loope
add
pop
inc
arpl
(bad)
push
bound
cdq
stc
je
and
jge
bound
xchg
mov
or
aas
pop
scas
mov
sti
loop
pop
mov
inc
or
dec
popa
clc
das
(bad)
xchg
in
rcr
lea
cs
or
out
sbb
repz
in
iret
je
and
fisttp
ds
ss
jl
(bad)
and
sub
dec
arpl
pop
test
add
rol
xor
push
loope
fnstcw
mov
out
mov
pop
push
push
jae
(bad)
repz
shl
out
xchg
pop
movs
packsswb
dec
jno
adc
cmps
cs
clc
mov
adc
inc
push
inc
push
cmps
adc
popa
ja
aad
push
icebp
xor
cdq
inc
jle
sti
sbb
xlat
dec
movs
add
shr
enter
popf
ins
sub
fnsave
xchg
adc
adc
or
mov
xor
mov
xchg
sub
sbb
(bad)
add
aam
rcl
jmp
pusha
inc
mov
(bad)
stc
rol
shl
pop
mov
xor
mov
ins
leave
adc
mov
mov
ds
push
shl
sbb
enter
idiv
xchg
stc
lock
sub
stos
cmps
xlat
imul
jl
mov
dec
mov
lahf
cmp
cmp
pop
mov
sbb
stos
inc
inc
mov
popf
and
or
and
mov
inc
std
enter
inc
int
mov
mov
pop
jp
inc
push
and
(bad)
fld
cmp
iret
dec
xor
xchg
jg
leave
mov
mov
test
inc
sub
icebp
push
jmp
lods
dec
test
and
push
lldt
into
add
dec
dec
cmp
and
and
or
mov
sbb
mov
adc
mov
or
or
imul
(bad)
jmp
ds
mov
mov
cld
aam
clc
lods
clc
lea
call
pop
push
fdivr
sbb
nop
inc
pop
fldenv
idiv
cmp
jmp
adc
imul
lahf
sub
std
movs
sar
mov
mov
cli
mov
push
imul
rep
sbb
and
repz
jge
adc
aas
push
sub
or
into
mov
push
push
xchg
cld
imul
bound
clc
xor
call
xchg
(bad)
std
rcr
mov
inc
sbb
sbb
or
xor
jmp
and
(bad)
fimul
dec
jb
imul
les
push
cwd
mov
add
mov
cmp
clc
fidiv
pop
into
mov
or
mov
iret
aam
pop
mov
jmp
mov
mov
cmp
push
(bad)
rol
ss
sub
fiadd
addr16
dec
cwde
mov
jg
loop
out
popf
adc
fmul
test
push
pop
je
stos
lahf
jp
sub
bound
int
pushf
mov
test
daa
mov
mov
mov
mov
mov
xor
cld
mov
popf
mov
inc
or
adc
push
test
addr16
and
in
dec
std
jl
push
xlat
pop
ret
inc
outs
or
jb
mov
sub
cmp
mov
sbb
or
mov
(bad)
jne
xor
stos
clc
rcl
in
jns
mov
cmp
call
lods
das
jg
xchg
xchg
in
adc
mov
iret
mov
fucomi
dec
out
mov
jp
ins
into
in
xchg
mov
adc
das
mov
mov
arpl
or
cmp
and
cmc
test
sbb
cmp
scas
pop
ret
dec
clc
cmp
cmps
mov
daa
insertq
jns
ds
push
push
sub
cmps
aad
adc
pop
pusha
push
mov
pop
mov
mov
pop
xor
(bad)
(bad)
cmp
outs
mov
pop
add
pop
xchg
cli
xor
popa
pushf
iret
sub
xchg
cmovle
push
and
ficomp
lea
jmp
xor
es
(bad)
jbe
dec
push
int3
int
inc
jg
jne
jns
and
add
fisub
iret
adc
mov
add
pop
fucom
push
pop
mov
add
xchg
mov
in
lock
add
cwde
inc
jmp
xchg
cwde
mov
or
popf
mov
inc
cwde
jne
mov
or
mov
jmp
pop
or
je
pushf
mov
mov
fistp
mov
popa
cmp
mov
enter
fnstsw
push
cmp
mov
dec
mov
mov
ss
(bad)
jmp
lods
inc
sbb
mov
dec
fnsave
push
push
xor
loopne
dec
adc
inc
adc
or
mov
stos
mov
jmp
addr16
stc
jo
clc
and
gs
and
sbb
adc
xchg
ss
fnsave
fwait
call
pop
sbb
mov
and
mov
fsubr
aam
sub
add
scas
test
push
cmp
outs
xor
fcmovnb
rdpmc
aad
mov
inc
xor
dec
push
pop
dec
fisttp
out
or
add
fwait
inc
daa
aas
xchg
(bad)
and
stc
xchg
in
push
add
fnstenv
div
aam
cmp
test
cmc
retf
(bad)
mov
cld
jnp
xor
inc
repnz
jp
xor
xor
test
les
inc
int3
push
mov
push
data16
pushf
push
adc
jmp
lods
dec
inc
outs
data16
mov
scas
ins
dec
adc
xchg
pushf
xor
bound
push
jne
mov
dec
loop
and
sahf
inc
xchg
pop
push
scas
ror
or
sbb
mov
loop
dec
enter
je
out
jp
mov
das
mov
push
sbb
dec
push
jnp
out
cmps
mov
nop
pusha
jns
call
push
lahf
aam
xor
sub
cld
dec
daa
leave
xor
cmp
nop
out
rol
xor
dec
jp
test
in
cdq
loope
or
mov
xchg
xor
stc
lods
loop
daa
inc
pop
sub
sahf
out
dec
mul
sbb
pop
ror
fidiv
fldcw
shl
int
out
jmp
adc
gs
sti
test
fs
mov
mov
add
push
scas
(bad)
movs
(bad)
cs
mov
loopne
out
dec
ins
fsub
cmc
and
add
cs
pop
pop
or
aaa
dec
pop
and
or
(bad)
aam
cmps
jmp
sbb
outs
and
arpl
cmp
fnstcw
adc
or
and
dec
call
pusha
fild
jns
cmp
call
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
repnz
add
cli
test
xlat
hlt
sub
bound
jno
in
pop
arpl
test
xchg
retf
jg
jae
sbb
sub
fidiv
pop
push
xor
jno
je
xchg
jae
xor
or
sbb
fst
mov
mov
sub
mov
ret
shl
fcmovnu
xor
inc
std
dec
inc
push
inc
retf
inc
mov
mov
sar
mov
cdq
clc
je
ss
ins
mov
mov
icebp
cli
loope
and
sbb
mov
(bad)
xchg
mov
mov
or
xchg
out
add
pushf
sbb
xchg
mov
shl
adc
ins
icebp
inc
in
sub
imul
and
dec
xor
rcr
xchg
ins
test
fwait
cmp
ficomp
daa
sub
test
dec
inc
fstp
mov
js
pop
fwait
fs
sub
xchg
push
arpl
pop
jl
movs
and
cmps
loop
int3
sbb
scas
xchg
loop
test
adc
(bad)
cmc
adc
iret
mov
add
jns
iret
inc
and
dec
cwde
aad
adc
ja
(bad)
jecxz
inc
cmp
imul
rcr
jns
sub
push
cmp
lock
mov
call
jl
es
ror
add
jnp
sar
fisttp
mov
inc
lds
inc
mov
call
out
push
mov
pushf
out
and
mov
dec
enter
das
add
xchg
rcr
fisub
and
inc
aaa
out
in
mov
pop
dec
push
adc
cmps
jne
arpl
les
pop
xchg
leave
xor
jno
pop
mov
adc
call
sub
imul
inc
and
cmp
adc
mov
or
je
sub
mov
or
call
lea
xchg
jo
test
mov
cmps
push
sub
inc
dec
cs
xchg
and
pop
cld
pop
jns
xchg
fmul
retf
dec
retf
and
pushf
adc
repz
xchg
loope
dec
jl
mov
aam
popf
adc
dec
dec
pushf
cmp
shl
out
push
cmp
mov
fidiv
scas
mov
inc
push
test
inc
cmps
push
fdivr
cmp
xchg
mov
mov
inc
inc
ror
mov
cli
fldcw
loop
arpl
mov
adc
jnp
enter
(bad)
in
push
cmps
adc
lock
stos
dec
iret
and
push
add
retf
or
jae
add
fld
cmp
ss
dec
sub
jp
add
jp
or
aas
mov
enter
shl
bnd
movs
mov
scas
rcr
xchg
sub
jnp
jo
aad
popa
addr16
adc
stc
icebp
jno
lahf
arpl
cli
daa
fstsw
lods
inc
push
jns
test
test
pushf
jmp
mov
fs
cmp
jo
xchg
jo
les
jmp
xor
call
std
inc
out
(bad)
sub
push
sub
jb
add
mov
inc
outs
mov
add
cmp
cwde
or
push
in
jns
mov
cdq
(bad)
mov
pop
rcl
jns
push
mov
jmp
mov
adc
call
pop
loope
add
loop
cmps
(bad)
cmps
mov
push
pop
call
dec
outs
bnd
mov
movs
and
les
mov
daa
mov
sahf
inc
sub
in
nop
inc
in
add
pop
test
inc
pop
scas
push
pop
xchg
cmps
inc
push
mov
mov
aad
pop
jo
jbe
cli
repz
jb
add
out
jae
clc
aas
xor
(bad)
fxch
push
pop
shl
scas
push
retf
fld
mov
stos
dec
sti
push
pop
das
test
test
jo
in
imul
sti
loopne
push
stos
jae
xor
inc
sbb
xchg
aad
add
sbb
and
jo
sbb
int
test
dec
mov
pop
ja
clc
add
push
and
pop
dec
jge
and
cmp
mov
cmp
mov
pop
cmp
test
fmul
mov
mov
jns
js
movs
rol
push
jecxz
pop
xor
pop
push
push
bound
cmps
adc
sbb
and
movs
mov
stos
jae
add
add
add
pusha
and
pop
adc
inc
stc
data16
and
retf
loope
xor
cmp
fldcw
cmps
pop
lods
jo
stos
xor
sub
xchg
add
mov
mov
xor
lock
or
js
test
jecxz
shl
adc
jp
lahf
loopne
ds
ins
jle
xchg
jnp
sbb
pop
or
popf
pop
stos
push
mov
outs
iret
mov
mov
into
stos
sbb
sar
rcl
aas
xchg
lods
cld
and
mov
cmc
outs
rcl
imul
and
cld
mov
add
jmp
dec
inc
ss
cmova
sub
movs
(bad)
xor
mov
mov
les
ror
enter
(bad)
hlt
xor
pop
sub
dec
inc
or
pop
es
(bad)
xchg
inc
jp
fldenv
push
push
sbb
fdivr
scas
mov
and
cmp
push
ja
xor
cli
das
cmps
ds
jne
sub
mov
fldenv
lea
jge
add
push
enter
mov
loope
push
stos
sbb
out
or
lock
push
jmp
xor
pop
call
xor
lea
test
fsubr
test
sbb
dec
push
fwait
icebp
dec
std
xchg
fucomi
xor
fs
push
xor
in
xchg
outs
mov
out
add
mov
inc
push
xor
in
out
mov
mov
imul
sub
nop
dec
sbb
jp
clc
push
push
xor
test
push
in
aaa
adc
and
fistp
push
cmp
mov
cdq
fisubr
ss
push
push
and
adc
and
js
pop
imul
jne
ss
sbb
outs
jg
xchg
fldcw
add
xor
(bad)
or
add
pop
les
add
dec
jmp
pop
dec
jb
and
jno
stos
and
push
push
xor
sbb
icebp
call
int3
cmp
data16
in
pop
mov
mov
mov
or
xchg
jmp
add
sbb
add
call
addr16
dec
mov
inc
ja
mov
sub
loopne
repnz
call
mov
ja
inc
add
dec
and
test
cmp
cmps
leave
add
sub
pop
mov
dec
stos
or
pop
(bad)
xchg
mov
xchg
popa
pop
sub
dec
sbb
sub
test
xor
mov
add
dec
inc
arpl
mov
dec
xor
test
dec
ja
fistp
push
cwde
(bad)
scas
mov
dec
mov
or
fld
fisttp
fbld
add
add
push
inc
xchg
retf
sub
aad
adc
lea
retf
add
std
loope
(bad)
xchg
lock
pop
je
stos
sahf
mov
scas
xchg
adc
dec
sub
out
xchg
bnd
cmp
mov
mov
(bad)
xchg
ja
mov
cmps
dec
shl
cwde
mul
test
mov
or
sbb
sub
mov
inc
push
mov
ret
rol
xor
out
lods
out
adc
push
inc
bound
adc
add
pop
retf
out
pop
adc
mov
not
xor
mov
cmp
mov
cmp
sbb
or
enter
xor
push
aam
or
in
mov
or
pop
and
mov
jne
sbb
test
call
or
int3
fistp
dec
repnz
(bad)
das
adc
rcl
add
sti
clc
loopne
inc
jl
repnz
cli
push
cmp
dec
jno
mov
dec
add
lock
je
out
imul
(bad)
out
jne
sbb
jmp
xchg
dec
rcl
rep
cld
or
call
inc
mov
pop
dec
sbb
xchg
fild
out
inc
retf
cli
and
dec
iret
pop
fwait
xchg
add
movs
inc
mov
pop
sub
aas
push
ins
xchg
in
jne
ja
cdq
test
and
push
jno
push
retf
inc
out
push
ucomiss
inc
mov
jns
push
nop
or
int3
jmp
mov
imul
push
out
and
and
pop
xor
jns
daa
lock
sbb
xchg
jo
dec
cld
push
retf
addr16
push
mov
cmp
sti
jns
jp
popf
inc
add
ret
lock
push
fs
add
test
shl
scas
adc
sub
mov
js
jo
test
mov
jl
or
bound
sub
loop
push
pushf
inc
stc
scas
xchg
pop
pop
cmp
imul
cmp
retf
int3
das
out
dec
mov
jnp
inc
lock
stos
ins
dec
mov
jmp
ror
les
dec
std
jmp
pop
push
into
sub
adc
psubb
ins
inc
add
cmp
out
sbb
sub
push
mov
push
arpl
in
mov
fimul
fidivr
jns
push
enter
lock
jp
xor
es
mov
outs
push
test
sub
call
out
pushf
stos
test
mov
xor
cs
daa
das
sub
push
fs
dec
loopne
or
inc
out
je
pop
jg
inc
pop
data16
bound
push
pop
andps
mov
cdq
push
xchg
mov
sti
dec
or
lods
xchg
pop
mov
pushf
jl
rol
inc
pop
add
sbb
or
ret
lods
pop
pop
mov
bound
mov
aad
outs
mov
mov
test
hlt
fisttp
clc
push
add
lods
push
test
mov
test
and
xchg
(bad)
(bad)
ins
jae
das
inc
into
ja
jne
push
inc
aaa
and
fmul
(bad)
add
js
icebp
out
sub
lods
in
cmps
loopne
aaa
lea
call
mov
mov
sbb
data16
mov
and
mov
jno
sub
fistp
es
fst
cli
mov
lahf
mov
xor
jg
outs
fs
xor
stos
lea
sub
ins
add
in
xor
dec
inc
jecxz
jl
sbb
outs
adc
inc
jmp
in
xchg
and
pop
outs
fdiv
(bad)
repz
fnstcw
jle
arpl
and
mov
aam
cwde
mov
sbb
inc
inc
in
cmp
mov
push
xchg
or
or
xchg
sahf
call
in
stos
or
jmp
dec
mov
inc
popf
mov
mov
pop
xchg
stos
xchg
clc
sub
sbb
xor
bound
pop
test
push
movs
push
sbb
dec
xchg
imul
sub
sbb
jmp
adc
push
xchg
mov
sub
mov
lock
daa
xchg
jno
mov
lahf
mov
fld
push
fucomp
mov
xor
fs
rol
dec
jns
scas
jp
pop
xchg
sbb
xchg
sub
xchg
cmps
sbb
adc
(bad)
retf
mov
add
jnp
ficom
jge
add
jne
xchg
sbb
pop
xchg
xor
add
and
add
jo
daa
loopne
arpl
ins
jbe
(bad)
mov
jp
jmp
aad
lds
sub
add
push
out
sbb
push
and
mov
mov
cdq
hlt
cdq
fld
(bad)
sbb
push
add
je
cwde
mov
es
xchg
xchg
bound
movs
es
jb
pop
inc
mov
jbe
add
and
jmp
fwait
sub
leave
xor
jmp
enter
adc
retf
xor
jmp
enter
push
and
js
sbb
push
repnz
add
or
int3
dec
fadd
mov
icebp
call
xor
aas
addr16
shl
mul
not
repnz
jae
rcr
leave
sahf
xchg
fst
int
call
fcmovnbe
stc
retf
fld
fwait
pop
test
fmul
into
xlat
pop
dec
std
frstor
cld
cmc
push
daa
or
es
xlat
or
fnstcw
mov
out
fisubr
iret
mov
add
fisttp
adc
sbb
adc
or
icebp
or
push
popa
cwde
or
pushf
cwde
adc
data16
cdq
test
jmp
mov
mov
add
repz
daa
lahf
stos
ds
mov
mov
or
bound
aam
xchg
les
mov
sub
imul
mov
fld
pop
pop
(bad)
daa
mov
(bad)
mov
mov
out
jecxz
test
fbstp
ds
cdq
sti
adc
jmp
in
int3
sar
push
pusha
add
inc
fnstsw
icebp
(bad)
call
pop
mov
or
mov
in
shl
cwde
dec
inc
cld
xchg
or
daa
xor
mov
(bad)
in
jmp
lods
and
mov
push
sub
clc
mov
sbb
aas
inc
out
pusha
inc
add
jnp
push
and
out
cmp
loope
add
and
dec
sub
pop
rol
outs
mov
stc
dec
push
pop
or
pop
xor
xlat
or
dec
hlt
inc
jmp
ss
rcl
pop
push
dec
(bad)
pop
jmp
sub
gs
imul
(bad)
rcr
cmps
scas
push
add
call
imul
xor
xlat
pop
nop
push
or
mov
jno
pop
test
jl
dec
call
rol
mov
ins
mov
outs
mov
adc
mov
lahf
test
rcr
xchg
(bad)
lahf
mov
adc
sub
mov
mov
jb
lods
sbb
xchg
push
xor
mov
in
cmp
int3
call
in
mov
sbb
sbb
mov
adc
outs
scas
mov
out
lds
dec
push
dec
mov
ret
pop
push
dec
cmp
mov
and
xchg
push
jmp
std
mov
add
gs
sbb
cmp
mov
pop
jle
xchg
mov
adc
std
or
lds
stos
je
xor
aaa
(bad)
mov
push
ins
xlat
mov
in
iret
or
xchg
dec
mov
jb
test
push
lahf
sub
mov
jne
js
jle
stc
xchg
and
out
jg
xor
xchg
loopne
pop
loopne
bound
or
pop
xchg
jg
sar
and
jle
out
pop
loopne
fcomp
xchg
mov
sub
mov
mov
and
add
mul
aas
mov
push
(bad)
repz
jmp
fisttp
cmp
aad
out
xor
or
stos
add
xor
adc
push
dec
fmul
mov
rcl
cmps
push
ja
(bad)
loope
int
add
jns
xlat
fst
nop
cmc
jecxz
or
cmps
jmp
pop
add
or
xchg
cs
inc
jle
test
cmps
push
iret
(bad)
xchg
jno
jmp
push
pop
out
aas
pop
(bad)
mov
sbb
xor
xchg
sub
pop
xchg
test
pop
xchg
repz
nop
outs
ds
(bad)
xchg
push
ret
arpl
cld
rol
xchg
jne
in
mov
aad
enter
jmp
mov
add
pop
mov
add
test
jge
pop
push
sbb
add
mov
dec
mov
aas
(bad)
mov
inc
xchg
xchg
pop
and
ja
in
sbb
jae
mov
pusha
adc
push
jg
sbb
jo
imul
cmp
mov
fild
loopne
sbb
icebp
sbb
add
sub
adc
sahf
adc
dec
popa
mov
and
pop
rcr
and
pop
std
xor
jnp
mov
adc
cmp
xchg
lods
rcr
inc
aas
out
add
out
aam
xchg
inc
ss
xor
scas
mov
int
fxch
add
adc
loope
ret
test
add
jae
pop
out
scas
cld
pop
push
(bad)
mov
not
dec
retf
cmp
push
ins
or
call
push
jle
cmp
push
push
stos
push
js
ins
pop
sub
in
add
sbb
push
add
push
int
add
out
xchg
mov
jl
sbb
(bad)
pop
ror
adc
dec
adc
test
(bad)
ret
sbb
sbb
stc
repz
(bad)
js
or
in
js
jmp
fdiv
xchg
hlt
and
sub
ja
mov
movs
mov
xchg
mov
mov
inc
rcr
jmp
in
cmp
adc
cmps
iret
out
fcomp
nop
sub
das
push
shr
mul
cmc
pop
jae
and
aaa
xor
cmp
iret
or
xor
xchg
inc
dec
xchg
movs
ins
imul
repz
out
icebp
xor
popa
out
dec
adc
add
and
(bad)
add
hlt
aas
pop
retf
scas
nop
and
aam
pop
mov
lock
je
fwait
sub
and
xlat
out
data16
stos
and
cmc
std
jmp
xchg
outs
xlat
sbb
dec
sub
dec
out
jae
xchg
or
add
int3
cmp
xchg
mov
lahf
sbb
icebp
mov
sbb
movs
in
sbb
sub
jmp
or
cmp
mov
mov
pop
xor
leave
cmp
add
pusha
xchg
sbb
mov
sub
out
add
cld
cli
ret
xor
xor
add
retf
fistp
add
pop
sub
push
dec
cs
out
retf
loop
sbb
popa
adc
retf
sar
sub
dec
mov
inc
out
adc
mov
iret
ins
mov
push
test
mov
jg
push
mov
mov
popa
(bad)
loopne
jbe
imul
dec
jbe
ret
inc
xor
inc
mov
imul
pop
add
scas
aaa
push
sub
loope
icebp
call
mov
inc
cmp
mov
mov
cwde
loope
cld
popa
cwde
sar
pop
mov
outs
sub
sbb
sti
arpl
das
test
dec
sub
and
mov
cmps
(bad)
sub
mov
push
faddp
lahf
int3
add
add
xor
in
cmp
popa
mov
pop
and
fisttp
sub
cwde
in
and
mov
jb
xrelease
push
lods
jne
pop
imul
push
adc
adc
pop
int3
sti
nop
scas
clc
pop
inc
jae
push
cmp
mov
jmp
mov
outs
and
aas
mov
push
or
js
ja
dec
add
push
xchg
or
fld
ins
xor
cmps
jl
imul
not
(bad)
(bad)
leave
std
sub
sub
sbb
shl
and
lods
sub
ins
inc
cwde
jle
or
clc
mov
jb
mov
int3
cmp
jns
pop
ficom
add
mov
mov
xor
pop
popf
push
xor
imul
xchg
sbb
push
xchg
stc
pop
je
jp
imul
mov
dec
fsubr
mov
das
ja
mov
mov
mov
or
aaa
xchg
mov
pop
inc
cmp
retf
retf
xchg
xchg
push
or
lea
mov
adc
push
imul
ins
jae
fcom
fcom
or
and
jbe
clc
cmp
fsubp
and
test
leave
jo
xor
arpl
(bad)
jle
stos
mov
stos
out
inc
popa
mov
mov
sbb
ja
jp
ret
popf
or
push
cli
jecxz
xor
(bad)
adc
mov
stos
movs
mov
nop
jecxz
cli
aas
scas
repz
pop
and
push
and
adc
scas
ret
and
retf
mov
in
hlt
inc
call
popa
test
ins
dec
xor
jmp
sub
xor
mov
mov
lods
jmp
std
sub
outs
test
jmp
je
addr16
mov
adc
ror
pop
stc
fist
sub
ror
jbe
sub
ds
ss
pop
stos
in
rcr
stc
enter
xchg
bound
pop
test
xchg
fadd
push
pushf
push
jmp
popa
cdq
iret
and
daa
ins
push
clc
xchg
push
dec
mov
xchg
mov
dec
out
(bad)
je
jb
ins
jnp
shl
dec
dec
xchg
sbb
mov
xchg
cmp
leave
leave
sub
pop
jne
cmp
dec
mov
xchg
xchg
(bad)
call
out
pop
jecxz
adc
std
sub
inc
fsubr
fs
into
xor
loop
test
pop
enter
test
add
movs
pop
inc
lods
mov
push
aaa
cs
test
lods
enter
mov
jl
add
xchg
popf
mov
scas
mov
test
dec
retf
and
dec
test
je
add
loopne
fmul
jmp
popf
(bad)
sub
mov
sar
cmp
jmp
sbb
mov
cmps
push
retf
repz
pop
sti
call
inc
mov
or
clc
jp
lock
adc
jmp
dec
xchg
retf
fs
fcom
jmp
ret
xchg
jmp
sub
lea
cmc
adc
les
or
movs
mov
mov
adc
cmp
cmp
mov
jo
lea
stc
xlat
sar
and
lock
ss
and
jge
loopne
stos
cdq
test
fisttp
jns
dec
cld
ficom
ffree
fcom
ret
jle
rcr
lods
pop
clc
repz
sub
and
inc
pop
rcl
mov
jo
pop
pop
and
inc
cwde
inc
lock
clc
shl
pop
inc
add
pop
scas
cmc
std
pop
xor
jns
call
jmp
jl
or
mov
data16
mov
push
pusha
push
jp
and
sar
lods
out
pop
cmp
ins
lahf
and
xlat
or
fisttp
loop
push
test
fs
sbb
add
push
sahf
popa
jae
fcom
inc
sbb
lods
adc
in
cmps
cmp
cmp
sbb
add
js
adc
push
clc
test
lods
movs
ins
pushf
ja
add
jb
xchg
mov
adc
mov
mov
dec
gs
mov
outs
rol
sar
mov
push
add
cmp
xchg
div
xchg
sahf
mov
call
mov
cmps
sbb
fmulp
lds
ret
xor
xor
sub
jg
test
sub
xchg
sahf
shr
call
xchg
add
ins
pop
push
ds
push
add
mov
cmp
mov
idiv
mov
test
movs
adc
jg
les
jbe
adc
pop
clc
rol
cmps
sub
jb
inc
inc
cmp
mov
sub
outs
xchg
sub
xchg
aaa
sub
iret
outs
jne
inc
adc
pushf
mov
je
stc
fld
aaa
into
cmp
push
push
dec
or
jb
sar
jmp
sbb
mov
ret
cmp
repz
outs
adc
and
out
popa
mov
in
pop
adc
mov
mov
or
jne
lahf
fld
or
mov
stos
(bad)
push
lock
inc
imul
ds
xor
jg
shl
add
cmp
inc
cmc
xchg
(bad)
sbb
dec
aas
push
pop
daa
out
cli
jnp
and
int
mov
inc
outs
lds
repnz
sub
pop
or
fild
sub
sbb
push
(bad)
retf
and
add
loope
sbb
mov
inc
fdivrp
leave
lods
or
je
sub
lea
cmps
pop
jl
xor
mov
adc
jmp
cdq
adc
jno
test
leave
cs
(bad)
js
cmp
adc
cld
push
aaa
aad
cld
stos
pop
in
or
iret
add
stos
adc
arpl
pop
sar
inc
int
mov
mov
mov
jp
cld
hlt
adc
dec
cli
enter
sub
cli
push
inc
xlat
and
cmp
jns
call
repz
mov
xchg
fsub
(bad)
adc
push
sub
movs
stos
ins
and
add
gs
and
pop
das
and
inc
test
cmc
adc
jae
scas
fmul
jns
jns
sub
sbb
inc
pusha
adc
in
js
sbb
xchg
icebp
stos
add
call
and
hlt
sbb
sub
xchg
out
cmps
xchg
add
pushf
pusha
mov
mov
push
jl
mov
shl
popf
imul
cmp
xor
add
sbb
and
sbb
xor
cld
dec
data16
test
fwait
inc
and
fwait
sub
mov
pop
popa
sub
jmp
pop
or
jns
jbe
dec
and
mov
add
mov
or
adc
xchg
dec
sub
sbb
or
or
and
in
lahf
mov
mov
jne
xchg
outs
cld
loope
xor
mov
cmp
xor
jl
or
aas
add
outs
inc
in
sub
call
je
sbb
nop
test
adc
int
inc
retf
cdq
add
add
xchg
addr16
xchg
jg
xchg
int3
sub
and
add
adc
adc
mov
push
(bad)
mov
test
sub
cmps
push
pop
cld
iret
adc
sar
pop
sahf
hlt
inc
mov
lods
lea
mov
es
(bad)
ds
pop
pop
lods
addr16
(bad)
(bad)
shr
adc
sub
pushf
imul
test
outs
imul
inc
inc
imul
(bad)
bound
aam
and
inc
cmc
das
xlat
mov
mov
xchg
loopne
jb
mov
into
pop
xchg
add
bound
xchg
or
mov
pop
imul
jmp
jecxz
sbb
mov
out
inc
movs
sbb
and
push
jmp
and
aad
int
xchg
call
ret
je
sbb
sahf
sbb
icebp
push
rcr
retf
int
repnz
cli
(bad)
dec
loop
out
sbb
fidivr
dec
inc
ficomp
fsubr
retf
lds
out
aam
cmc
mov
cld
lock
mov
out
dec
inc
push
mov
sub
adc
cmp
cdq
push
push
movs
jle
hlt
ret
and
add
ds
(bad)
imul
movs
add
fs
neg
jo
arpl
ret
add
fwait
cdq
out
dec
jmp
sub
fwait
or
mov
pop
aaa
je
in
lock
and
es
(bad)
sbb
aad
cwde
pop
fist
or
xchg
add
mov
xor
inc
xchg
inc
xor
xchg
in
xchg
aam
add
retf
inc
in
sub
xchg
setns
(bad)
jae
nop
in
push
or
scas
(bad)
(bad)
div
scas
lahf
mov
xchg
arpl
mul
add
scas
jg
mov
ret
fld
inc
enter
pop
lahf
jne
dec
mov
rol
pop
mov
bound
stc
pop
add
xchg
imul
inc
std
add
lods
sbb
out
mov
mov
inc
stc
xchg
cld
cmps
pop
pop
add
das
movs
ja
pop
sub
repz
mov
cmp
fiadd
scas
fidiv
push
bound
fist
repz
sahf
xor
inc
dec
sbb
mov
das
mov
push
mov
lahf
push
out
imul
dec
sbb
in
imul
jp
mov
idiv
ins
call
xchg
add
ins
xor
imul
mov
xchg
mov
leave
ret
sub
xchg
inc
inc
in
bound
out
or
sbb
fisubr
xor
ss
sub
fbld
std
or
outs
jbe
je
adc
mov
push
sbb
pop
jmp
sti
dec
add
ins
mov
mov
inc
xor
adc
neg
and
jbe
popf
dec
xlat
pop
sub
sub
and
call
or
dec
mov
pop
cmp
mov
ffree
push
cmp
data16
add
xor
inc
fst
pop
dec
xchg
rcr
arpl
imul
sub
xor
aas
inc
mov
or
dec
adc
neg
jb
sub
mov
lods
sar
mov
add
sti
cmp
xchg
mov
out
les
jp
push
in
pop
(bad)
and
test
pop
xchg
stos
xchg
jnp
and
xchg
mov
fcmovu
jp
scas
ins
mov
movs
(bad)
jne
out
sbb
sub
mov
inc
or
es
pop
popf
sub
inc
mov
sbb
pushf
(bad)
rcr
enter
adc
into
add
push
ja
or
or
and
(bad)
out
out
pop
lds
and
lea
push
dec
xchg
popa
cmps
icebp
mov
mov
or
aaa
fnsave
retf
pop
inc
lods
out
jmp
movs
loopne
cs
push
stc
in
inc
add
loope
(bad)
xor
or
fnstenv
inc
lahf
(bad)
repz
sahf
imul
and
mov
int
pop
adc
cwde
jmp
cmps
jmp
ins
stc
rcl
sar
iret
rcr
sub
gs
popf
sub
inc
xlat
mov
clc
xlat
xchg
dec
fisttp
ds
(bad)
aam
xor
(bad)
loop
push
mov
jp
sbb
std
sbb
xchg
mov
and
inc
cmp
gs
(bad)
and
adc
jne
pop
mov
jg
in
lock
imul
loope
mov
mov
mov
aaa
fiadd
add
adc
enter
call
add
cmps
add
mov
pop
loop
pop
test
pop
mov
inc
retf
dec
imul
not
pop
loopne
scas
sub
movs
xchg
cli
pop
(bad)
popf
push
add
aas
test
lods
lock
xor
mov
mov
add
sbb
mov
pop
rcr
mov
jge
movs
mov
mov
aas
jp
fwait
sub
ja
xchg
jno
xchg
movs
ins
pop
stos
mov
xor
push
inc
or
fisubr
push
lds
fwait
cli
xor
push
(bad)
push
cmps
push
mov
and
xchg
jnp
jbe
outs
mov
add
push
mov
test
dec
arpl
xchg
jne
enter
aaa
jne
jg
push
inc
int
sbb
loope
sbb
cmp
daa
nop
movs
sub
aas
loopne
push
scas
out
mov
xchg
mov
nop
sti
test
mov
jne
loope
hlt
xchg
je
out
jno
je
pop
sahf
mov
sub
mov
iret
adc
lds
push
stos
and
jmp
clc
rcl
(bad)
xor
mov
or
daa
sti
stos
push
outs
lock
xor
mov
mov
and
push
jb
dec
jbe
cmp
mov
or
jbe
push
or
ror
mov
jecxz
mov
jbe
inc
shl
sti
das
and
sub
or
dec
clc
mov
mov
mov
push
xchg
xor
into
inc
dec
mov
jmp
cmp
je
dec
push
ins
popf
adc
ja
ret
mov
xchg
dec
lds
call
mov
jmp
push
xchg
add
fs
movs
adc
pop
cmp
jl
cmp
dec
mov
or
jl
test
sbb
test
aam
and
and
jne
lods
shl
fwait
out
jns
cmp
xlat
jnp
jge
sar
add
xchg
adc
or
mov
in
iret
sbb
jle
outs
in
jne
sahf
xchg
cli
or
cmps
popa
or
mov
inc
js
mov
cmc
lods
int3
inc
std
aam
add
cmp
iret
clc
xchg
xor
fistp
das
int3
cmc
sbb
inc
jmp
enter
push
test
mov
out
jge
xchg
fwait
ins
jb
mov
out
sub
addr16
lock
and
sbb
add
xor
jbe
ins
sbb
mov
or
popf
inc
in
push
scas
mov
mov
dec
ret
mov
cdq
stc
xchg
(bad)
dec
loopne
sub
mov
cmps
add
xchg
xlat
pop
hlt
ffreep
cmps
fcomip
fadd
fisubr
inc
into
clc
int3
sub
push
jg
jb
cld
call
ja
sub
push
push
xor
daa
pop
mov
lods
inc
mov
xchg
inc
scas
push
mov
daa
imul
fdiv
inc
xchg
mov
repz
fwait
pusha
and
sub
xor
and
or
mov
jmp
push
adc
rol
cmp
sub
jl
rcr
in
ret
test
call
(bad)
data16
or
cmp
loopne
sub
cs
inc
pop
aam
xchg
call
add
xchg
lea
lods
xchg
(bad)
mov
ss
sahf
lods
pop
enter
mov
push
rcr
mov
pop
imul
sti
lahf
jno
adc
sub
xlat
rol
jmp
mov
pusha
in
test
xchg
enter
aad
in
xchg
gs
aam
adc
jle
scas
push
and
popf
mov
mov
outs
retf
out
sbb
in
cmp
adc
aam
pusha
mov
mov
outs
cdq
sahf
dec
arpl
jne
jbe
rol
cld
xor
push
loope
pop
cwde
fst
les
cmp
scas
inc
or
icebp
shl
cmp
sub
imul
jns
ret
and
out
es
scas
dec
ror
cmp
and
(bad)
xor
and
mov
adc
push
xor
and
push
adc
or
les
xchg
mov
push
xor
mov
and
in
pop
fdivr
je
push
mov
mov
jns
popa
int3
popa
xchg
(bad)
xor
push
js
cmc
pop
jnp
(bad)
cmp
repnz
mov
sub
or
cmc
test
jp
adc
ds
out
dec
add
push
xchg
shl
pop
mov
inc
or
jecxz
add
jge
into
dec
dec
mov
sbb
int3
fs
test
push
or
push
pop
dec
mov
cmp
dec
xchg
retf
mov
xlat
je
out
or
lods
shr
jp
xchg
xchg
gs
outs
push
mov
dec
sub
call
stos
sub
push
cmp
adc
mov
sub
test
repnz
inc
stc
icebp
stos
addr16
cmp
ficomp
jp
mov
sub
sar
mov
jecxz
sar
jnp
test
xchg
(bad)
out
aad
inc
pushf
dec
mov
loop
dec
mov
retf
add
mov
jp
sbb
adc
xor
fdivr
mov
aaa
jmp
fistp
les
jne
mov
adc
ficom
pop
mov
inc
and
sub
jns
xlat
mov
xor
push
ret
mov
popa
cdq
test
fwait
inc
add
or
test
in
movs
popf
call
push
mov
inc
dec
or
mov
stos
inc
stos
mov
dec
lods
(bad)
cld
stos
call
jecxz
ds
jmp
xor
(bad)
adc
pop
(bad)
xor
mov
sahf
mov
mov
cwde
in
int
and
pop
mov
lea
sbb
dec
std
dec
int3
cmp
out
aas
imul
cmps
add
out
pushf
pop
aaa
shr
(bad)
cmp
mov
sbb
jecxz
ja
pop
mov
ret
xchg
push
push
cmp
mov
movzx
leave
jmp
popa
je
dec
lods
cmp
ins
sbb
xchg
xchg
ret
unpckhps
sub
cmp
mov
retf
cmp
inc
and
mov
cmp
fadd
movs
imul
sbb
mov
shl
stc
sub
add
adc
cmp
pop
leave
or
arpl
outs
(bad)
push
lock
cmp
sbb
push
jg
inc
cmp
push
aas
xchg
sbb
jo
les
out
xchg
inc
adc
inc
pop
push
outs
into
or
mov
push
inc
mul
add
inc
and
push
or
pop
mov
inc
and
lahf
dec
sub
and
mov
arpl
ss
fsubr
and
test
nop
repz
mov
(bad)
(bad)
mov
mov
icebp
push
pop
xor
jg
scas
jmp
push
or
xor
frstor
sbb
add
cli
add
push
bnd
cmp
daa
mov
jb
(bad)
mov
test
push
in
pushf
xor
or
pop
(bad)
ds
mov
aam
repnz
pop
dec
push
fbstp
nop
(bad)
sbb
(bad)
adc
jne
ins
push
and
mov
pushf
xlat
cmc
push
dec
cmps
push
sahf
aam
cmp
jp
aaa
int3
dec
adc
mov
pop
fcmove
mov
jmp
test
pusha
mov
ss
inc
icebp
cmp
dec
mov
lea
cmp
call
gs
scas
xchg
mov
add
sub
in
(bad)
rcr
ds
imul
sbb
(bad)
retf
pop
sub
jecxz
and
cld
sub
push
test
mov
and
fsubrp
mov
dec
bswap
loope
mov
sbb
xchg
hlt
(bad)
shr
mov
jg
js
add
out
or
out
mov
mov
cwd
mov
pushf
inc
adc
xor
scas
inc
inc
pushf
out
(bad)
fdiv
leave
daa
fnstenv
sub
and
sub
call
mov
adc
cld
adc
sar
test
(bad)
jo
cmps
(bad)
loopne
xchg
(bad)
outs
mov
cmp
sub
push
mov
sar
pop
push
in
dec
adc
(bad)
rol
mov
jb
imul
lea
xor
jg
sti
jl
sbb
popa
pop
add
and
(bad)
cld
lods
fmul
push
pop
mov
outs
xchg
mov
cmp
pusha
sbb
stos
fadd
aas
add
repz
int3
push
xor
mov
push
jp
pop
ja
mov
inc
movs
sub
popa
ds
clc
sbb
push
dec
loope
sbb
shr
mov
dec
cmp
inc
rol
mov
outs
xor
pop
xor
push
pop
pop
adc
mov
mov
popf
mov
dec
xchg
arpl
test
mov
dec
mov
mov
cmp
int3
xchg
retf
shl
std
push
repnz
push
aad
sbb
jb
dec
dec
mov
cdq
pop
pop
and
sbb
inc
fdiv
test
mov
das
push
xchg
and
xchg
jno
add
add
push
add
addr16
stos
ror
neg
stos
bound
leave
cmp
sbb
psraw
xlat
and
or
fild
dec
cmp
iret
pop
fld
fmul
jbe
jne
jnp
rol
sahf
xor
cld
aad
dec
dec
cs
cli
add
scas
in
retf
adc
popf
sahf
movs
push
adc
xchg
imul
push
pop
cld
ret
fdivr
repnz
dec
cmps
dec
rol
pusha
ss
add
adc
xlat
mov
xor
mov
pop
jmp
je
inc
imul
repz
add
xchg
ficom
popf
cmps
xor
jp
push
repnz
xchg
dec
icebp
mov
inc
jg
push
call
icebp
sbb
mov
and
imul
arpl
shl
pop
(bad)
or
mov
retf
ins
lods
mov
sub
adc
mov
(bad)
das
shr
pop
lods
dec
iret
out
sbb
fidiv
aas
fnstenv
xchg
hlt
jb
(bad)
cmp
hlt
and
jmp
pop
(bad)
fist
stos
movs
adc
mov
jo
leave
div
push
movs
retf
int
sub
dec
retf
shl
xchg
fst
ja
std
loop
ja
scas
fld
pusha
mov
add
mov
xchg
push
fld
push
push
sti
sbb
les
xchg
(bad)
sub
inc
ds
jo
and
dec
sub
cmc
int
sbb
data16
fcomp
mov
cmp
mov
pop
imul
sbb
addr16
addr16
push
outs
sub
sub
ret
ret
lea
and
scas
jnp
gs
and
and
dec
mov
out
dec
popf
cld
aad
jb
ds
shl
div
add
xor
hlt
loop
push
clc
jnp
sub
dec
inc
sub
add
jmp
into
nop
xchg
aad
dec
dec
dec
(bad)
add
(bad)
fnstcw
bound
out
div
mov
adc
test
inc
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
cli
or
fldenv
(bad)
and
in
add
pop
mov
(bad)
xchg
fnstenv
(bad)
adc
cmp
mov
mov
test
test
rcl
retf
sbb
mov
pop
dec
mov
imul
push
setae
leave
xchg
dec
outs
push
mov
pop
mov
lahf
xchg
aam
hlt
fidivr
cmp
push
scas
mov
ds
retf
fild
and
call
pop
leave
lock
inc
cmp
cmps
mov
or
addr16
pop
add
push
adc
cmp
shl
add
mov
(bad)
test
push
ja
cdq
arpl
mov
xor
bound
sub
in
pop
xor
dec
mov
cs
and
and
jbe
lahf
or
mov
push
stc
(bad)
lds
and
aaa
int
dec
into
outs
out
cdq
out
dec
add
adc
push
iret
mov
fbstp
pop
push
mov
mov
inc
int3
loopne
and
pop
ret
enter
or
jns
dec
enter
inc
jmp
(bad)
push
pop
(bad)
mov
imul
scas
leave
push
cdq
retf
mov
lahf
inc
add
add
mov
movs
cs
cmps
jmp
adc
mov
xor
call
pop
outs
rol
dec
jns
pop
jae
jmp
adc
cmc
cli
in
jnp
cmps
cs
jns
std
or
or
popf
xchg
mov
push
adc
test
lods
pop
push
aad
dec
daa
popf
mov
mov
je
or
(bad)
and
cmps
cmp
lock
mov
dec
mov
mov
pop
and
push
sub
das
daa
push
sbb
retf
lea
pushf
mov
mov
fild
lahf
xchg
lldt
fsubr
xor
push
les
in
fadd
inc
in
add
cmc
clc
fdivrp
repz
das
cmp
dec
jge
mov
fwait
cmp
repz
mov
and
test
pop
pop
gs
and
(bad)
fidiv
or
cld
add
addr16
sbb
shl
push
inc
xor
adc
leave
fist
mov
jae
sub
out
mov
inc
mov
xchg
mov
out
out
cmp
(bad)
test
jns
and
cdq
out
mov
fdiv
rcr
jbe
xchg
xor
and
xchg
mov
gs
rcl
add
add
mov
retf
data16
loopne
push
cmc
(bad)
(bad)
(bad)
mov
sti
jmp
scas
dec
in
adc
dec
out
faddp
jb
rcr
scas
pop
xor
mov
or
out
ds
pop
pushf
fisubr
out
das
movs
(bad)
ret
in
adc
push
pop
imul
xchg
sbb
idiv
push
jns
shl
inc
fild
test
repz
enter
dec
in
cmps
scas
call
scas
lods
movs
in
xor
and
mov
sar
into
pop
mov
jbe
adc
jecxz
movs
inc
add
or
mov
jb
div
push
xchg
xor
gs
ja
mov
add
loop
into
cmps
addr16
jae
jnp
xor
xchg
push
in
sbb
push
fmul
rcl
inc
add
mov
push
mov
dec
inc
test
adc
jmp
adc
into
movs
cs
sahf
in
xor
imul
sub
ret
pop
addr16
cmc
sbb
enter
push
jns
cli
icebp
out
mov
dec
xchg
cmp
dec
dec
jl
push
and
shl
test
cmps
and
scas
(bad)
push
mov
add
mov
xchg
mov
arpl
dec
xchg
jae
inc
lods
fistp
inc
es
or
fwait
arpl
cdq
or
stos
jb
add
hlt
sbb
and
push
xor
and
fisttp
and
push
add
scas
repz
test
mov
ret
jnp
sub
mov
jae
(bad)
icebp
dec
repz
push
(bad)
mov
jg
(bad)
sub
cmp
mov
pop
loop
cdq
mov
(bad)
or
div
adc
aad
aaa
push
mov
sub
aad
pop
pop
push
push
jl
rcl
mov
in
add
mov
and
sti
sbb
or
inc
ds
pushf
mov
and
(bad)
push
sbb
push
xchg
out
xchg
popa
movs
outs
leave
(bad)
loop
cwde
pop
inc
xor
shl
fld
xchg
cmp
xchg
aad
stos
shl
mov
outs
clc
fnsave
fld
sbb
fld
(bad)
dec
and
shr
cwde
xchg
inc
cmp
lahf
sahf
or
pop
mov
xchg
cs
cld
rcr
iret
aam
outs
pop
push
push
pop
dec
cmp
retf
push
dec
or
dec
movs
mov
mov
daa
cs
fcomp
aad
loope
jge
sbb
pop
mov
cmp
fidiv
jecxz
pop
inc
daa
mov
xor
push
movs
std
push
xchg
mov
call
push
stc
fs
pop
cwde
xlat
loop
mov
icebp
repnz
pop
add
sbb
popa
call
cmps
aas
jge
xor
mov
mov
ud2
inc
inc
sub
stc
jl
adc
popf
or
(bad)
push
mov
xor
push
and
xchg
push
xor
dec
dec
sbb
imul
push
stos
mov
aad
lock
bound
stc
adc
add
adc
dec
or
popa
and
adc
cmp
and
push
stos
or
jmp
mov
mov
jb
ja
jbe
or
jp
adc
mov
xlat
test
mov
and
jle
dec
push
sbb
mov
push
in
push
pop
pusha
add
pop
repz
xor
xchg
jo
push
adc
mov
jae
sbb
rcl
push
test
cmp
imul
cmp
dec
or
lea
movs
sub
cmp
movs
pop
inc
retf
pop
dec
fdiv
xor
loop
mov
pop
out
or
outs
arpl
mov
and
cmp
das
jmp
ds
xor
into
mov
adc
loopne
add
jp
icebp
lock
or
ret
jo
pop
into
jne
add
pop
sub
jg
test
leave
mov
adc
jl
add
xchg
data16
icebp
push
dec
(bad)
mov
test
out
cmp
xchg
adc
inc
mov
mov
push
pop
sub
jno
icebp
pusha
in
or
pop
je
dec
and
pop
or
fld
jo
xchg
test
pop
sbb
jmp
sbb
lods
fimul
xchg
push
sub
jnp
dec
cmps
jbe
imul
arpl
xor
icebp
dec
fs
push
or
xchg
sub
pop
ds
pop
pop
ret
scas
div
sbb
jae
outs
fwait
adc
cmp
and
cmp
aad
es
push
out
xchg
xchg
sub
sub
or
cld
add
enter
xchg
add
(bad)
fnclex
daa
loopne
fwait
sbb
mov
sar
mov
xor
mov
test
retf
jno
inc
sar
ins
jle
mov
hlt
mov
test
jns
ret
loope
popf
mov
dec
xor
dec
shl
mov
jge
ins
cld
pop
xchg
mov
int
sbb
paddusb
xor
jae
pushf
(bad)
adc
jo
push
arpl
popf
mov
sub
xchg
and
cwde
out
mov
jmp
push
sub
push
cmps
cmp
or
mov
lods
sub
xor
push
jl
neg
es
les
jae
repz
jae
push
push
imul
enter
popf
loope
imul
ror
shl
sbb
or
inc
out
mov
and
les
cs
and
mov
lods
test
mov
push
inc
cmp
clc
nop
jle
mov
sbb
or
or
out
(bad)
daa
adc
pop
jo
lods
sahf
icebp
cli
js
loope
mov
loopne
imul
ss
in
mov
xchg
or
aad
(bad)
call
ins
add
push
ret
imul
jecxz
jns
cmc
(bad)
cmp
or
daa
inc
cld
dec
imul
loopne
jmp
jb
inc
pop
cmp
inc
mov
scas
xor
stos
fstp
(bad)
or
push
out
idiv
xchg
inc
popa
aad
enter
push
mov
(bad)
mov
out
adc
ins
or
dec
test
int
pop
mov
into
in
jmp
sbb
es
loopne
adc
movs
sub
aas
cmps
dec
lahf
xchg
in
cmp
xchg
stos
pop
int
dec
call
push
mov
xor
ja
popf
add
dec
pop
mov
jmp
and
mov
xchg
mov
addr16
mov
mov
fdivr
mov
ss
jg
sub
dec
test
add
not
cld
(bad)
pop
xchg
fwait
pusha
mov
je
xor
cmp
leave
lock
add
cwde
jmp
inc
imul
cmp
ds
fdivr
cmc
cs
fdivr
lea
pop
and
add
jmp
into
cmp
mov
mov
pop
in
mov
js
ret
pop
out
jae
push
adc
sbb
and
xchg
in
psubusb
mov
movs
inc
add
inc
push
xor
gs
mov
mov
rol
inc
pop
jnp
dec
or
test
jmp
xor
add
fst
in
dec
add
mov
pop
loop
jg
enter
mov
mov
mov
push
addr16
and
jno
xchg
pause
dec
mov
xor
int
in
fs
xor
stc
cmp
loope
outs
pop
popa
bswap
cdq
lahf
popf
fisttp
or
mov
mov
add
xchg
push
cs
xor
scas
push
pop
les
xor
jg
pop
lock
cmps
clc
stos
mov
test
cmp
sbb
repz
sub
ret
push
and
jecxz
aas
cmp
jnp
mov
pushf
sahf
and
mov
pop
(bad)
push
xchg
sbb
or
push
inc
push
(bad)
jns
lds
adc
out
nop
test
and
es
jmp
(bad)
lods
call
test
mov
in
or
cmp
repnz
jg
jae
jecxz
sub
sets
pushf
push
jbe
push
xchg
bound
sti
jmp
jecxz
enter
test
mov
xor
jae
shr
mov
sub
inc
mov
xchg
scas
xor
pop
jg
push
adc
xchg
dec
xchg
pop
(bad)
pusha
ror
into
mov
fdiv
mov
cmp
mov
push
jp
loop
mov
lock
pop
mov
ret
mov
daa
aad
loopne
fidiv
(bad)
fnstenv
clc
mov
scas
mov
pushf
jge
das
push
cwde
pop
outs
and
out
scas
iret
xchg
xor
shl
mov
inc
adc
mov
dec
mov
dec
out
mov
imul
jmp
cmps
lods
test
retf
jle
sahf
adc
iret
xor
lock
cmp
fwait
cmp
cli
stos
loop
ins
out
outs
mov
in
mov
aas
pop
ja
leave
inc
movs
and
fidivr
add
repz
loope
push
and
adc
lea
cmc
mov
xchg
adc
mov
mov
gs
es
or
mov
sub
xor
jp
pop
xchg
mov
cmp
inc
add
fst
push
popf
out
fdiv
bound
dec
push
dec
scas
imul
sub
rcl
jbe
inc
cdq
xchg
mov
in
cmps
aaa
fild
(bad)
loope
inc
mov
adc
cli
fistp
sbb
sub
mov
cmc
data16
imul
ins
icebp
cmc
cmp
dec
xor
loop
mov
add
mov
movs
mov
popa
mov
inc
fadd
adc
popa
lods
stos
cmp
(bad)
ror
or
cmp
dec
data16
fisub
push
pop
pusha
jno
test
fld
xchg
xchg
and
(bad)
sub
mov
fwait
lods
mov
sahf
imul
aad
jl
fs
mov
out
sbb
shr
ds
cmp
or
xchg
jle
in
daa
adc
xor
jne
rol
fmul
sub
shr
push
ins
xchg
mov
mov
pop
pop
rcl
bound
(bad)
and
xchg
mov
repz
fwait
add
inc
out
out
xchg
adc
pop
or
adc
pop
cmc
mov
xchg
push
jecxz
mov
out
enter
rol
call
in
or
shr
ffree
jmp
dec
je
ret
ja
sub
loop
cmc
aaa
adc
rcl
icebp
repnz
loop
mov
movs
and
xchg
es
das
sbb
clc
dec
js
cmp
fdiv
ds
retf
xchg
xchg
mov
js
jecxz
push
push
enter
scas
mov
cmp
jno
xchg
add
retf
mov
sub
sbb
push
xchg
jno
rol
es
xchg
dec
pop
iret
xchg
inc
test
adc
mov
jmp
dec
loop
sub
pop
or
add
sub
test
arpl
xchg
jl
cli
lock
inc
jb
sbb
into
idiv
inc
cs
jge
sub
in
mov
push
repnz
jbe
cmps
pop
xor
sub
aas
ss
sahf
dec
xor
xchg
dec
mov
sbb
add
xchg
mov
js
aaa
out
cmp
(bad)
or
dec
jbe
jg
jecxz
ss
fmul
cmp
shr
les
sub
jns
lock
lahf
push
push
push
mov
lock
inc
sbb
out
pusha
jo
movs
mov
inc
test
jns
inc
or
and
stc
dec
and
mov
jns
adc
mov
cdq
dec
mov
je
mov
enter
ja
test
rol
aaa
and
inc
es
pop
add
mov
ret
fcmovb
mov
std
icebp
cli
stos
mov
fistp
jge
stos
test
push
clc
(bad)
jne
and
imul
ret
inc
push
push
lahf
(bad)
icebp
sbb
gs
jns
push
shl
xchg
xor
cmc
sbb
enter
imul
add
les
in
les
lahf
push
and
test
xchg
jmp
jg
inc
scas
add
ret
push
fbstp
push
scas
sub
fdiv
out
les
lfs
jns
push
xor
xchg
repz
sbb
jmp
add
lds
aad
cmp
sub
dec
nop
dec
sub
test
mov
xlat
cmp
add
inc
mov
loopne
std
pop
inc
jns
xchg
or
inc
aam
lea
pop
sub
pop
push
adc
xchg
xor
pop
cmp
cmp
jo
xchg
push
xor
stc
clc
fdivr
(bad)
hlt
and
mov
popa
adc
cmp
xor
mov
cwde
stos
fsubr
xlat
push
jp
pop
push
(bad)
sbb
lods
jle
es
and
in
or
or
xchg
mov
xchg
sub
cwde
mov
aam
push
lods
push
inc
fild
mov
lea
fstp
jl
imul
xchg
popf
and
cmp
adc
jmp
fisub
mov
push
test
mov
sub
add
or
pop
xchg
pop
xchg
mov
inc
fisttp
addr16
mov
(bad)
push
icebp
push
dec
sahf
adc
and
sti
sub
adc
int3
lock
movs
xor
jnp
outs
adc
idiv
push
cmp
pop
cli
or
cmp
push
mov
fsub
fadd
retf
inc
aas
xor
(bad)
imul
mov
in
sub
pop
cmc
adc
ror
push
pop
repnz
jnp
nop
js
test
xchg
and
add
jo
add
loope
pop
std
pop
and
push
or
enter
cmps
sub
dec
push
mov
mov
push
int3
cld
cwd
(bad)
xor
enter
lods
mov
lock
int3
repz
sub
into
in
add
push
add
test
or
push
out
loop
push
cmc
imul
adc
cmp
sub
xchg
das
and
ret
lds
jo
inc
dec
xlat
fdiv
leave
jle
(bad)
ins
test
mov
adc
ret
lock
(bad)
mov
pop
xor
jae
and
es
(bad)
sub
out
xor
sbb
call
pushf
mov
mov
add
inc
or
jns
sbb
nop
fs
push
fistp
int
mov
rcl
xor
fistp
mov
test
or
push
cmp
in
xlat
sbb
inc
dec
aaa
or
out
mov
cmc
add
mov
repnz
adc
dec
cmps
push
ins
test
das
jae
mov
sbb
lahf
cmp
rcl
xor
mov
sub
pop
dec
(bad)
push
and
mov
sahf
outs
test
mov
add
push
(bad)
sbb
jl
ficomp
jns
cmp
lds
call
sbb
iret
mov
mov
call
ret
sub
inc
xchg
adc
ror
retf
sub
das
xchg
mov
mov
int3
or
pop
mov
pop
shl
sub
or
fild
pop
push
jmp
jp
les
ds
add
or
scas
dec
rol
shr
pop
push
mov
cld
cwde
inc
enter
fs
pop
cmps
jae
clc
pop
lahf
movs
xlat
sbb
sub
das
cli
cmps
sbb
repnz
mov
cmp
sbb
dec
icebp
inc
stos
xchg
in
sub
sub
lods
xor
enter
out
call
ret
push
sub
aad
xchg
and
and
scas
loop
add
dec
fucomi
std
sbb
push
adc
test
adc
add
sbb
xchg
mov
ins
jl
mov
loope
add
pusha
cmp
push
hlt
xor
cmp
sbb
inc
add
fdivr
nop
sbb
mov
imul
sbb
rol
gs
inc
jle
xchg
ins
(bad)
jmp
rcl
inc
imul
in
sbb
jmp
add
jle
and
jmp
clc
rcr
sub
push
in
mov
jg
hlt
dec
ret
pop
ins
jbe
xor
cmps
mov
adc
xor
pushf
sub
cmc
inc
mov
pop
out
pop
jns
outs
int
add
shl
cmp
das
es
xor
je
aas
out
mov
inc
mov
xor
icebp
mov
popa
cmps
sub
push
pop
dec
adc
repz
mov
in
jl
adc
lods
enter
xor
and
jmp
xchg
call
push
lods
ror
shl
test
retf
and
imul
pop
imul
movs
jb
cmp
dec
std
fdiv
rol
xchg
inc
mov
sub
dec
xchg
mov
sar
iret
add
push
std
(bad)
std
inc
lea
pop
lock
add
clc
ret
mov
sbb
es
aad
jle
jge
loop
lds
rcr
xlat
aam
cmc
or
ja
in
cmp
scas
xchg
mov
and
cmp
cmp
pop
and
das
nop
xor
sub
ficomp
aam
outs
mov
sbb
mov
mov
jmp
(bad)
fidiv
cmps
mov
ja
xchg
jno
push
pushf
xor
adc
mov
arpl
xchg
dec
jl
dec
xor
out
mov
jns
pop
js
gs
cmp
fadd
int3
jno
or
retf
(bad)
scas
push
jge
aas
jle
daa
fnstcw
call
arpl
inc
or
dec
fisubr
stos
jo
(bad)
jp
xchg
jns
ror
mov
pop
mov
test
outs
inc
hlt
push
cmps
xchg
out
rcl
lea
mov
dec
int3
shr
out
mov
fsubrp
jl
mov
cwde
imul
lods
push
push
dec
jb
xor
mov
xchg
sub
sbb
pop
loopne
call
stos
sub
and
or
cwde
popf
push
ds
aaa
pop
pushf
or
sahf
inc
aad
pop
cmp
movs
or
lea
cmp
mov
in
xor
test
je
cmp
(bad)
fldenv
mov
in
loop
(bad)
arpl
mov
push
lock
push
jle
out
push
xor
jp
ins
add
adc
pop
imul
into
(bad)
leave
mov
popa
(bad)
jg
mov
div
gs
xchg
mov
push
outs
xor
add
xchg
mov
ret
lock
and
jns
stc
out
test
jecxz
inc
xor
dec
cwde
mov
popa
and
sbb
cmps
jmp
mov
into
fimul
in
mov
dec
call
aad
dec
pop
stos
add
mov
sahf
fwait
sub
mov
jo
sti
dec
adc
xor
cmp
jns
addr16
loop
retf
add
sub
je
(bad)
pop
enter
in
fbstp
mov
icebp
mov
das
js
dec
ret
cwde
pop
sub
jp
push
bound
rcr
(bad)
fldenv
dec
mov
enter
add
dec
cmp
mov
and
pop
and
gs
cli
inc
aaa
inc
xchg
rcl
enter
sbb
sub
imul
sbb
stos
pop
push
mul
inc
cmp
dec
jge
std
imul
inc
push
enter
cmps
retf
ss
sti
mov
xor
loopne
movs
daa
mov
push
sbb
fdiv
int
push
sar
ins
pop
ss
mov
cmps
sub
dec
mov
sub
push
sub
jecxz
scas
mov
jno
fbstp
mov
mov
hlt
mov
inc
mov
xor
mov
dec
adc
cli
mov
mov
xor
dec
add
aaa
or
pop
movs
pop
push
and
retf
jnp
mov
mov
sub
fwait
jle
(bad)
jmp
loopne
pop
pop
fdiv
call
leave
push
jno
popf
mov
lods
aad
icebp
inc
mov
mov
cmp
loop
cwde
push
fisubr
push
mov
pop
cs
push
jecxz
test
rcl
fisttp
jecxz
xor
mov
mov
mov
out
cdq
xlat
mov
or
fild
loop
push
ficomp
inc
xchg
jne
lahf
pop
or
arpl
mov
out
push
jg
pop
ror
push
push
movs
or
and
pop
inc
(bad)
push
cmp
popf
js
sub
jecxz
sbb
lea
or
jb
int3
mov
les
jmp
out
call
repnz
ret
ss
int3
les
dec
mov
stos
aaa
imul
sbb
das
cmc
fiadd
sbb
(bad)
xor
jge
ds
push
jae
cld
mov
cld
fstp
and
(bad)
mov
dec
pop
or
jb
add
or
add
aam
xor
mov
jb
jge
mov
inc
repz
dec
mov
fsubr
or
and
xor
ss
fs
imul
sub
dec
rcr
scas
ins
adc
arpl
lgs
push
pop
xor
fsubrp
hlt
(bad)
daa
test
sti
add
in
xchg
jle
push
pushf
iret
sti
jb
or
scas
pusha
xor
cmp
sbb
xor
movs
push
inc
imul
ret
out
(bad)
rol
popa
sbb
jl
movs
sbb
or
push
ficomp
mov
cmp
xor
retf
ins
stos
pop
xchg
cld
adc
stc
lds
js
xchg
lods
test
dec
or
push
loope
lock
push
xchg
dec
mov
or
cdq
(bad)
jmp
inc
es
push
in
mov
out
push
xor
daa
stc
jecxz
cwde
loope
inc
or
stc
cmp
push
test
in
push
fwait
loope
data16
sahf
lahf
cmp
mov
fdivr
cmc
repz
out
inc
and
xchg
sbb
pusha
fdivr
adc
push
and
pop
hlt
(bad)
scas
ret
shl
shl
cmp
pop
cmp
sub
(bad)
aas
sbb
add
(bad)
xor
inc
cmps
movs
outs
repz
push
xor
pop
cmp
xchg
clc
mov
rep
xor
and
mov
call
scas
cmp
xchg
xor
pop
inc
mov
xor
cdq
ss
pop
(bad)
mov
test
inc
cmp
mov
in
mov
mov
fdivr
mov
in
aad
arpl
sub
(bad)
sub
pop
inc
rcl
inc
daa
xor
and
push
and
sub
push
les
pop
xchg
scas
imul
push
pop
jae
and
popa
xchg
mov
fisub
dec
dec
cld
mov
retf
loop
sub
pushf
out
aad
test
neg
xlat
jl
push
sbb
aam
jno
xchg
jle
ret
mov
sbb
pushf
retf
stos
ret
scas
das
shl
cmp
push
popa
retf
pop
mov
xlat
and
jmp
cmc
in
jno
in
mov
outs
js
lods
bnd
adc
and
iret
and
out
ret
add
pop
bnd
xchg
xchg
sar
xchg
jmp
sub
cmps
in
rol
scas
inc
lds
sti
call
jge
(bad)
or
mov
jmp
or
ret
xor
lds
fistp
hlt
mov
sbb
mov
push
nop
or
loopne
rcl
sbb
sub
sbb
mov
xor
push
inc
in
sub
shr
out
jge
xchg
lahf
push
repz
cmp
mov
or
mov
movs
scas
(bad)
push
retf
xchg
pusha
(bad)
fwait
loop
ror
cmp
push
push
sbb
lahf
pushw
sub
aas
adc
iret
jo
push
mov
adc
idiv
daa
or
and
mov
jmp
jmp
jns
mov
hlt
adc
dec
sub
clc
int3
dec
mov
test
jb
cwde
(bad)
sbb
fiadd
xor
jnp
rcr
adc
pop
add
(bad)
enter
sbb
xchg
mov
hlt
rcr
jmp
mul
jge
addr16
sbb
mov
push
or
enter
inc
push
sbb
mov
jmp
dec
or
or
push
pop
out
push
adc
(bad)
out
sbb
push
lods
xchg
es
stos
jo
(bad)
fisub
repz
test
dec
repz
js
xchg
xor
jecxz
push
pushf
dec
pop
ret
retf
lahf
jns
in
xor
ja
and
fisub
dec
push
std
int3
mov
(bad)
dec
test
xchg
cwde
dec
icebp
mov
arpl
push
push
repz
fild
fisttp
sbb
call
cmp
xor
in
ds
mov
scas
adc
add
jmp
sbb
loopne
jg
sbb
leave
push
int
fcmovnu
fwait
cmp
retf
inc
popa
push
adc
iret
jno
clc
jecxz
paddusw
jb
jecxz
and
jno
or
cmp
jae
cmp
or
and
inc
push
inc
mov
mov
pop
adc
shl
cmps
(bad)
pop
jns
addr16
js
rcr
push
push
repnz
ins
popf
(bad)
cwde
(bad)
repz
push
adc
shl
lea
dec
xor
add
push
sub
scas
mov
fsubr
jnp
(bad)
cmps
shufps
outs
add
imul
and
arpl
rcl
add
mov
sahf
or
dec
xchg
(bad)
dec
ret
inc
call
dec
in
ss
dec
jl
and
add
repnz
(bad)
sub
add
sub
xlat
mov
test
add
adc
mov
jle
jmp
test
pushf
hlt
cmp
sti
out
push
pushf
push
inc
inc
cld
(bad)
and
dec
pop
mov
xor
cmp
sbb
lods
and
dec
mov
jp
cmc
fsub
test
(bad)
lock
pop
dec
rcr
dec
and
xchg
pop
mov
and
cmc
(bad)
inc
add
mov
mov
sub
lahf
pop
mov
mov
in
add
xor
(bad)
cmp
or
lods
ins
or
test
enter
cli
cmp
ja
pop
xchg
sbb
mov
jae
pusha
jmp
lea
mov
and
fimul
and
sub
push
or
adc
push
add
inc
test
push
dec
retf
inc
add
imul
(bad)
fldl2t
mov
fsub
pop
jnp
aas
add
inc
mov
mov
xchg
cmp
stos
mov
test
aam
add
pop
mov
ret
pop
sbb
xchg
add
fnstcw
xlat
repz
dec
xchg
mov
bound
add
ror
test
fistp
pop
int3
dec
push
test
xor
mov
add
pusha
rcr
sbb
cmp
(bad)
cmp
inc
push
ins
mov
mov
dec
push
rcr
dec
adc
ret
cmp
mov
cld
(bad)
dec
popa
push
cmp
retf
lods
push
xchg
addr16
loop
and
xor
fsub
xor
xchg
ins
adc
xor
idiv
icebp
mov
(bad)
loop
lea
cld
stc
(bad)
sbb
cmp
repnz
jmp
mov
ins
addr16
leave
cwde
ret
pop
aam
mov
push
xlat
dec
inc
cdq
call
fsincos
imul
cmps
add
mov
stos
pop
cmc
test
ss
ds
fisub
push
sbb
es
mov
(bad)
sar
dec
in
xchg
mov
inc
mov
push
mov
push
sbb
popa
cmps
bound
int
sub
push
mov
sub
fldcw
ins
xor
sbb
mov
push
dec
shr
mov
bound
add
nop
or
test
mov
jae
hlt
pop
mov
shl
test
rcr
(bad)
shl
mov
shr
aam
push
aaa
push
test
jg
mov
jmp
retf
jbe
push
lods
stc
or
sub
and
or
dec
jne
adc
fsubr
ds
lods
or
jle
sbb
adc
int
hlt
scas
push
xlat
fmul
mov
data16
out
retf
lahf
pop
lods
jns
mov
ret
mov
xchg
mov
(bad)
mov
aaa
pusha
and
int
push
lods
stos
hlt
xor
out
cld
sahf
enter
dec
dec
inc
add
dec
mov
stos
fsubr
lahf
fisttp
enter
ds
xor
or
in
ror
div
or
in
adc
rcl
test
xor
loop
stos
xor
or
jp
sbb
bts
push
xor
retf
les
pop
inc
shl
scas
add
iret
arpl
mov
mov
stos
out
popa
pop
pop
das
jmp
pop
ins
out
pop
push
in
cmps
rcr
push
xchg
mov
cwde
(bad)
sbb
fistp
push
mov
jecxz
out
in
fadd
mov
cmps
pop
nop
or
push
adc
aas
mov
fdivr
sub
push
pcmpgtb
clc
ror
push
push
lea
sbb
mov
adc
mov
movs
mov
sti
movs
repnz
je
cmp
in
rcr
lods
sub
lods
mov
mov
outs
out
stos
lods
add
inc
and
movs
xor
cmp
adc
out
js
push
jae
mov
add
test
inc
out
bound
dec
or
out
lock
dec
push
arpl
pop
dec
dec
sub
imul
xchg
xchg
inc
rcl
test
sub
sbb
sub
enter
mov
clc
push
frndint
ret
dec
(bad)
mov
jl
loopne
xor
in
sbb
repnz
std
inc
je
adc
lods
js
stos
and
mov
sahf
cmp
rol
or
push
test
sbb
jmp
sbb
jle
test
xor
outs
or
push
xchg
inc
xor
xchg
cmps
xchg
inc
call
mov
jmp
push
pop
mov
out
and
je
xchg
and
dec
aas
pop
aas
(bad)
fild
pop
cld
jae
mov
cmps
sar
jg
xor
das
sub
sbb
mov
adc
or
jmp
idiv
icebp
adc
loope
sub
repnz
int
test
push
retf
add
movs
cld
stos
out
not
dec
pushf
inc
xor
mov
test
cmp
sbb
cmps
shl
adc
xchg
push
inc
loopne
pop
push
jnp
adc
adc
inc
cmc
stos
add
cwde
out
mov
retf
inc
sar
cwde
inc
iret
lock
lea
push
hlt
dec
inc
jb
pusha
neg
test
fstp
not
sub
imul
add
in
xor
dec
stos
cmp
mov
(bad)
aaa
dec
ss
imul
clc
aaa
pop
xchg
sahf
ror
or
and
sub
jp
adc
cs
loop
cmp
fsubr
push
loop
loop
add
dec
adc
repz
jo
pushf
fwait
ins
dec
rol
mov
inc
hlt
shl
test
xchg
pop
sub
mov
fcmovnb
repnz
les
or
add
cmp
push
lock
movs
ror
mov
mov
imul
mov
xchg
or
sub
adc
fisub
repnz
jno
js
add
jmp
inc
push
scas
retf
xchg
not
cdq
push
sub
cmp
adc
pop
jns
js
call
push
lods
int
push
cmp
imul
sar
rcl
call
fcmovu
push
mov
retf
sbb
cdq
repnz
mov
jno
mov
mov
add
sub
hlt
data16
test
push
mov
hlt
and
jecxz
js
xlat
pop
sub
add
and
popf
stos
in
mov
rcr
mov
sbb
div
mov
int
sbb
cmp
add
test
sub
xchg
cmp
cs
xchg
jmp
jb
sysexit
jno
gs
jg
clc
test
pusha
js
jg
scas
rcl
mov
sti
mov
(bad)
(bad)
fcomp
adc
outs
arpl
xor
sbb
jno
stos
ror
cdq
test
mov
dec
inc
and
and
imul
inc
mov
dec
fdecstp
or
loop
dec
fadd
inc
retf
add
push
mov
jmp
clc
add
cs
jne
cmps
jl
adc
mov
jae
test
dec
add
dec
sar
mov
movs
add
mov
mov
test
adc
sub
(bad)
and
pop
adc
xchg
bound
aaa
adc
data16
hlt
or
adc
mov
and
ins
mov
sbb
or
add
test
pop
push
push
mov
shr
xlat
jmp
push
ret
mov
inc
sub
xchg
sbb
in
imul
in
arpl
bnd
int3
test
cmp
sub
pop
shl
aaa
(bad)
les
jb
push
sti
pop
inc
mov
sub
sbb
in
(bad)
push
fwait
jnp
and
xchg
mov
jecxz
sbb
pop
xlat
push
lock
pop
lds
adc
xchg
cmp
loopne
sti
popa
sub
mul
inc
ins
sbb
adc
mov
pop
outs
push
dec
xchg
retf
dec
cmp
cmovno
sbb
loope
shl
movs
std
(bad)
icebp
sub
mov
mov
adc
mov
call
sbb
cmp
mov
xor
cmp
jae
jg
icebp
das
sbb
pusha
scas
enter
stc
inc
inc
or
inc
arpl
inc
mov
sub
and
pusha
sbb
sbb
scas
ins
mov
pushf
mov
xchg
sar
cwde
or
data16
add
ffree
sbb
(bad)
popa
call
mov
setg
add
inc
in
jge
xchg
xchg
mov
ret
not
(bad)
sbb
sub
retf
xchg
mov
jns
icebp
rcl
lods
xor
call
fsub
outs
adc
inc
leave
popf
xor
xchg
jb
dec
push
dec
adc
and
push
movs
mov
pop
sbb
outs
dec
and
pop
popa
into
out
pop
inc
push
inc
xor
popf
ret
pop
retf
adc
dec
lods
pushf
sbb
xchg
nop
out
and
add
cld
cli
add
cmps
cmps
bound
xchg
fstp
clc
dec
mov
push
int3
ja
pop
retf
push
(bad)
push
inc
cli
ret
(bad)
mov
xor
dec
jl
push
stc
cmp
jno
inc
add
mov
xchg
fdiv
fwait
dec
jb
sahf
aam
or
test
and
jnp
pop
pop
adc
and
dec
into
xchg
mov
cmp
push
push
push
imul
or
outs
shr
pushf
ror
stc
(bad)
sbb
and
outs
aas
out
jmp
ror
test
out
adc
adc
shl
fadd
pop
neg
fist
addr16
cli
inc
push
dec
or
cmp
inc
outs
cmp
test
call
cmp
push
test
jno
mov
mov
xlat
call
sbb
stos
ror
push
and
mov
xor
inc
mov
cmp
outs
xchg
test
test
pop
sti
cli
retf
mov
shl
mov
adc
test
sub
and
or
bound
imul
iret
es
fstp
sbb
fs
movs
dec
add
xchg
jp
cmps
arpl
imul
mov
add
jo
dec
cmps
movs
or
daa
pop
xchg
loopne
ins
dec
(bad)
push
and
xchg
jne
sub
push
xchg
cmp
and
(bad)
pop
adc
cmp
push
jo
mov
data16
into
xchg
pop
dec
and
push
icebp
cwde
into
sbb
cmp
in
lea
(bad)
jecxz
sub
ins
popa
mov
ds
loope
int3
shl
test
repz
rol
and
test
mov
add
pusha
repnz
push
cmp
sbb
loope
test
fisub
(bad)
fbld
data16
leave
mov
adc
xchg
mov
mov
jmp
arpl
mov
add
mov
add
stc
outs
les
mov
add
fdivr
retf
in
jns
imul
jmp
imul
pop
sub
inc
std
xlat
test
and
mov
outs
div
ds
mov
out
xor
movs
out
ret
stc
ret
lods
lods
and
mov
pop
mov
repnz
jo
ret
or
std
pop
cmp
ret
int3
inc
int
into
lods
hlt
or
xor
rcr
cli
ja
sub
stos
cdq
stos
in
mov
dec
xchg
mov
xor
xchg
jge
int3
xor
or
or
ins
add
(bad)
jmp
and
test
or
xchg
movs
jmp
pop
jg
js
outs
mov
push
rol
ins
or
pop
pop
push
in
cmp
outs
adc
dec
not
fwait
xchg
movs
div
lock
and
jns
das
ss
push
out
js
dec
pop
cmc
xchg
outs
add
push
fdiv
fld
imul
movs
stos
push
out
jp
cmp
gs
mov
adc
mov
xchg
adc
and
pop
xor
mov
fisubr
jo
cmps
mov
cmp
push
jge
gs
add
pop
sub
test
lds
ror
outs
dec
add
lea
arpl
jge
add
cmps
mov
rol
or
push
loope
xor
push
xor
jmp
movs
push
add
jbe
lea
(bad)
jmp
ss
das
push
test
addr16
loope
cmps
fidivr
or
dec
xor
dec
jne
idiv
retf
sub
call
cmps
adc
je
out
bnd
push
and
adc
adc
(bad)
fwait
xor
fs
cmc
jnp
std
cmc
lods
shl
pop
mov
mov
jecxz
jne
add
or
mov
cmp
jmp
xchg
pusha
pop
leave
stc
ror
aaa
addr16
or
inc
or
xor
or
mov
mov
mov
call
jle
dec
sub
pushf
(bad)
arpl
loopne
cdq
fstp
add
lds
outs
jb
jno
mov
rcr
pop
les
dec
pop
test
adc
xchg
and
pop
xor
pop
pop
pop
js
pop
ds
cmps
jmp
sub
shr
aaa
shl
bound
push
smsw
test
fdiv
and
jb
xchg
dec
pop
cmp
push
cdq
add
xor
ds
jae
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
cmp
inc
sbb
daa
mov
nop
outs
mov
in
lahf
outs
xchg
jp
pop
mov
je
xor
fild
pop
cmp
leave
das
add
sbb
mov
cmp
lea
idiv
and
add
adc
jmp
aas
daa
xchg
test
sbb
(bad)
in
repz
daa
mov
leave
loope
lods
pop
lods
shl
jns
mov
stos
cmps
xor
aam
push
add
mov
xor
and
lock
push
(bad)
imul
inc
nop
je
out
sub
jo
jbe
fcomp
jnp
imul
nop
inc
xchg
repz
loop
fcmovu
int
ret
push
inc
shr
add
xor
add
test
jg
xchg
test
iret
or
jne
fisttp
mov
add
data16
mov
inc
push
in
pop
arpl
jp
push
cmp
pop
inc
sub
int3
aam
ins
jl
gs
mov
add
sbb
cmp
xchg
xchg
(bad)
dec
jmp
sbb
mov
jl
and
xor
clc
gs
jno
jo
stos
xchg
jns
add
inc
imul
loop
shr
std
push
mov
push
mov
and
push
(bad)
push
rcr
ins
push
add
cmc
lahf
or
pop
xchg
cmp
fadd
(bad)
xchg
aas
fwait
in
or
dec
(bad)
jg
mov
cmp
mov
add
push
and
fld
add
jo
cmp
sub
cmc
sbb
mov
movs
fcomip
mov
das
into
fwait
add
and
xchg
mov
into
mov
loop
fdivr
add
dec
jecxz
cmc
lock
(bad)
aaa
retf
aad
or
xchg
sbb
movs
push
and
sub
aad
jnp
je
bound
xchg
movs
pop
stos
pop
int
xchg
ss
jecxz
scas
imul
jb
mov
jbe
lahf
nop
push
clc
inc
cmovns
sub
fisub
loop
inc
jne
lock
leave
inc
mov
jg
mov
faddp
pop
sahf
dec
inc
je
adc
mov
add
int
push
sbb
pop
xor
clc
xchg
push
dec
pop
idiv
mov
and
jmp
aam
mov
sub
mov
fidivr
push
xchg
call
out
cmp
add
fiadd
call
fistp
or
mov
jb
arpl
loope
popa
sar
(bad)
jecxz
mov
inc
mov
fistp
(bad)
(bad)
mov
icebp
and
pushf
xor
lods
cwde
mov
test
adc
sbb
mov
(bad)
jecxz
pop
pop
into
xchg
test
cli
lahf
jmp
lods
popf
cwde
xchg
lods
hlt
in
push
dec
xchg
pop
lahf
movs
outs
sub
sbb
inc
ja
or
push
pop
jle
sbb
shl
sub
(bad)
mov
jae
call
ret
aam
leave
or
mov
jo
mov
stc
inc
mov
push
int
aam
lock
fistp
sbb
(bad)
adc
out
sbb
(bad)
bound
push
loop
cmp
test
ror
shl
jecxz
add
ret
pop
les
push
push
les
std
(bad)
js
inc
xor
inc
xchg
xchg
inc
add
imul
js
cmps
js
jno
push
mov
inc
scas
and
das
mov
ret
jecxz
popf
outs
repnz
sbb
cmp
add
mov
test
imul
icebp
jmp
cmp
and
popf
adc
fmul
cdq
repz
dec
gs
test
add
fist
push
xor
je
pop
cmps
jnp
and
push
cdq
mov
mov
dec
icebp
mov
pusha
pushf
and
sbb
movs
pop
xor
pop
xor
fld
das
cld
or
rol
es
jmp
pop
mov
movs
mov
int
sub
xchg
add
mov
jmp
xchg
std
dec
rcr
ins
mov
sbb
or
xor
aad
call
jl
jmp
mov
mov
or
lods
int
push
sbb
mov
jle
push
fst
pushf
add
loope
pop
movs
(bad)
mov
sti
enter
push
ins
pop
and
adc
inc
test
fs
cmps
push
or
repz
call
jbe
mov
push
mov
add
inc
out
or
lock
ja
retf
push
cmps
out
inc
add
(bad)
jp
sar
cmps
cmp
or
test
xchg
or
arpl
icebp
jo
pop
call
or
test
addr16
arpl
out
in
fld
dec
das
stc
div
sub
mov
mov
clc
popf
cdq
cmc
loop
cmp
dec
imul
cld
xor
int
inc
pop
sub
leave
addr16
imul
and
imul
aaa
fmul
or
int
adc
or
jp
mov
ins
adc
push
adc
lods
jbe
ss
les
lock
pusha
mov
inc
jmp
rsm
sub
mov
jnp
dec
cli
cmp
add
iret
movs
mov
dec
add
push
push
sbb
sub
or
lds
js
jnp
sti
jg
es
in
mov
test
ret
enter
jno
push
xor
loope
fstp
(bad)
test
jle
mov
mov
jp
adc
add
cdq
dec
and
push
cmc
mov
les
mov
hlt
jbe
retf
push
dec
jno
test
retf
push
jmp
loop
push
and
inc
dec
fcomp
ins
shl
jb
fstp
aas
cmp
imul
mov
popa
jmp
mov
dec
add
call
(bad)
push
jp
push
jno
fld
mov
stos
stos
enter
outs
mov
cmp
or
mov
sbb
pop
pop
or
sub
daa
push
sbb
mov
push
retf
jp
jnp
pushf
aaa
jmp
mov
aad
xchg
xchg
stos
add
mov
ret
push
and
sub
add
and
dec
leave
sbb
leave
mov
neg
jne
cmp
adc
pop
adc
into
cs
mov
mov
mov
push
cmovle
xchg
int
movups
mov
pushf
pop
xchg
mov
stos
mov
mov
hlt
mov
inc
mov
and
lds
mov
loop
call
outs
adc
lahf
icebp
inc
or
mov
mov
stos
mov
dec
lahf
cmp
out
xchg
int
int
dec
xchg
cmp
fidiv
mov
cmps
pop
inc
int3
das
sub
cmc
pop
pop
call
arpl
(bad)
pushf
in
add
cmp
mov
test
sbb
aad
sub
hlt
cmp
in
(bad)
push
and
and
lds
jns
jo
mov
cmp
add
leave
fstp
xchg
js
push
stos
arpl
sbb
das
loopne
cmp
jbe
adc
pop
fcomp
jge
dec
and
scas
mov
in
push
(bad)
dec
std
inc
xchg
inc
es
fnstsw
icebp
dec
sbb
test
sbb
movs
aad
xchg
and
adc
nop
push
jle
icebp
push
stos
sub
dec
mov
loop
leave
and
xchg
imul
xchg
push
xchg
loope
mov
retf
(bad)
mov
les
jl
sbb
add
out
cli
daa
and
cs
js
ss
cmps
push
and
adc
enter
aas
sbb
adc
cld
aad
cdq
xchg
out
lods
or
lock
cs
xchg
sti
jmp
inc
arpl
arpl
sbb
xchg
sub
adc
cmp
loopne
loop
adc
add
cmp
jg
sbb
adc
jmp
mov
xchg
push
push
jle
neg
sbb
(bad)
cli
pop
clc
push
mov
mov
cmc
imul
nop
mov
sbb
out
cmp
shl
js
cmp
fsubp
(bad)
gs
es
loop
imul
cli
sbb
mov
and
mov
mov
pop
jge
inc
aam
xchg
adc
mov
fisttp
jge
xchg
sahf
adc
pop
inc
call
sub
sbb
pusha
(bad)
in
cmp
outs
xchg
mov
loop
sbb
mov
adc
fcmovu
xchg
js
xlat
adc
retf
inc
mov
neg
or
and
jge
xchg
pop
xor
cli
call
out
sub
inc
cmp
test
imul
imul
std
mov
xchg
and
call
jnp
nop
lahf
(bad)
xor
add
repnz
fwait
jecxz
repz
mov
gs
dec
pop
popa
sub
dec
gs
pop
xor
and
aaa
aam
add
mov
xor
je
loope
enter
mov
fsubr
clc
imul
jp
mov
popf
sahf
xor
add
in
inc
imul
jl
add
add
dec
xor
xchg
daa
movs
xchg
mov
sub
ret
ins
fs
cs
cwde
retf
loop
inc
or
xchg
scas
xor
and
lods
cmp
lods
xchg
mov
or
jmp
in
add
ds
fcom
loopne
and
adc
jp
lahf
pop
add
jmp
mov
inc
jbe
call
cmc
jns
arpl
fwait
retf
fisub
cmp
int
(bad)
jbe
sbb
add
inc
xor
inc
mov
pop
das
adc
add
lea
or
mov
xchg
pop
stos
cmp
clc
fcomp
xor
scas
sub
mov
aam
stos
sbb
push
mov
iret
sub
sbb
mov
mov
ins
adc
pop
stos
mov
into
rcl
adc
cdq
pushf
push
in
clc
adc
and
xor
lea
mov
sbb
pop
add
icebp
add
scas
(bad)
loop
pop
jg
je
pop
mov
stc
pop
in
add
mov
mov
jg
mov
jae
mov
loopne
add
cmps
inc
cmps
cmp
mov
or
sbb
pop
adc
adc
aam
frstor
fadd
mov
test
aad
jle
xchg
dec
bound
rcr
in
sbb
lock
fld
and
out
out
ss
sub
mov
std
push
xor
pop
xchg
dec
xor
je
xchg
mov
xor
mov
jnp
jnp
out
sub
nop
cmp
adc
push
or
(bad)
mov
retf
mov
jnp
retf
adc
aad
aam
cmp
test
cmp
fwait
sahf
mov
les
(bad)
das
cmc
cmp
jl
xor
sbb
popf
loopne
mov
inc
inc
mov
cmp
popa
jge
cmps
mov
sub
pop
dec
pushw
das
add
mov
xchg
jp
cld
jo
fwait
pop
dec
cwde
push
mov
dec
add
js
into
push
jne
and
out
addr16
cmp
dec
aam
cs
(bad)
mov
fdivr
adc
test
out
dec
cmp
out
dec
bt
jg
mov
inc
sub
adc
xor
in
sub
pop
mov
mov
pusha
fdivr
jecxz
mov
dec
ficomp
in
inc
rol
jg
xchg
stos
adc
out
pushf
in
shl
test
les
xchg
bound
xchg
arpl
test
das
xchg
test
add
adc
push
inc
je
mov
pop
or
pop
mov
add
pop
sbb
sbb
mov
dec
push
aaa
and
pop
pop
inc
mov
or
push
int3
iret
and
mov
sbb
sub
xor
mov
xor
std
lods
sbb
pop
or
aas
push
mov
ret
jp
mov
imul
jo
add
and
imul
dec
shr
lock
xor
xor
jnp
(bad)
enter
or
fst
pop
dec
fwait
test
leave
jge
out
lods
inc
or
dec
mov
jae
mov
(bad)
push
sbb
cmps
or
xor
mov
retf
(bad)
mov
repnz
sbb
cmp
retf
dec
cwde
loopne
ins
ja
push
adc
lods
jne
imul
inc
(bad)
mov
dec
mov
and
jne
dec
jle
hlt
mov
lods
push
pop
loop
icebp
mov
ret
test
not
clc
or
pop
mov
push
sar
push
call
std
add
dec
enter
(bad)
mov
outs
pop
popa
dec
add
outs
mov
sub
add
movs
into
or
pop
mov
cdq
cmp
cmp
rcr
xchg
not
mov
mov
loope
dec
inc
enter
push
popf
jecxz
or
jecxz
add
(bad)
cld
test
adc
mov
jmp
mov
inc
cs
cmp
push
xchg
adc
call
popf
fs
adc
mov
pop
cld
or
stos
aas
retf
popf
pop
stos
movs
cmc
add
adc
enter
retf
dec
arpl
(bad)
or
ins
mov
inc
inc
js
mov
dec
jmp
xor
xlat
mov
scas
jbe
jb
mov
gs
call
cwde
pop
jg
repnz
add
xor
mov
xchg
iret
movs
cmp
xchg
inc
in
inc
push
call
bound
jae
(bad)
das
pop
xchg
repnz
outs
aad
dec
sar
dec
push
mov
cli
imul
push
push
fs
add
pop
dec
neg
in
pop
sub
cmp
mov
pop
push
xchg
pop
cmp
mov
cmp
cmp
xor
sbb
iret
leave
push
inc
outs
sbb
out
mov
push
add
std
push
pop
pusha
sub
sub
adc
std
sbb
movs
cdq
jae
xchg
add
jno
out
fstp
jecxz
out
rcr
pop
loope
jo
mov
inc
push
shr
add
or
jge
movs
inc
xchg
cmps
hlt
or
js
in
push
jne
pop
push
movs
or
add
in
cmp
mov
mov
in
add
sbb
in
fistp
(bad)
mov
mov
test
iret
xchg
pop
rcr
push
mov
cmp
add
sub
das
cmp
sbb
sbb
(bad)
ds
test
leave
repnz
mov
pop
inc
sub
inc
pop
sub
popf
fnstcw
lock
scas
jmp
jmp
(bad)
das
std
ret
out
outs
pop
mov
fsubr
in
(bad)
div
ins
xchg
and
test
jle
xchg
mov
sbb
mov
and
push
pop
add
outs
dec
das
pushf
into
cmp
cmp
aas
xor
jno
mov
cli
fsub
mov
(bad)
sub
pusha
cmp
and
push
popf
and
sub
mov
fucomp
stc
arpl
inc
jbe
pushf
inc
sar
cmc
call
test
pusha
clc
jl
nop
add
adc
cmp
sub
or
mov
sti
push
xchg
test
add
mov
lahf
fild
cwde
pop
push
int
aaa
inc
sbb
jmp
and
fs
(bad)
shl
outs
dec
je
pop
sub
adc
sub
or
mov
pop
shl
add
nop
and
cmp
fsubrp
int3
aaa
cmp
mov
jo
xlat
jns
ins
xlat
push
or
test
in
sub
ss
hlt
xchg
pop
aam
dec
sub
mov
test
nop
push
retf
jb
ins
stos
add
jecxz
cmp
inc
pop
push
aas
ins
movs
pop
xchg
test
mov
cli
sbb
fs
add
mov
movs
push
loopne
inc
xor
xor
push
nop
add
adc
and
jae
xchg
cmp
fbstp
std
repz
and
outs
popa
xor
add
cmp
xor
je
mov
pop
inc
ret
push
add
scas
sbb
lea
dec
call
fild
lods
mov
bound
jbe
and
jg
or
mov
jbe
gs
sub
push
dec
sbb
mov
jge
mov
(bad)
jecxz
arpl
es
out
das
push
in
shl
test
stos
or
aam
sahf
mov
push
sub
push
fnstcw
sbb
test
xchg
loop
fwait
sub
push
loop
xchg
cs
dec
bound
xchg
into
push
in
adc
dec
pop
xchg
mov
fdivr
hlt
cmp
outs
outs
mov
fsub
out
cmp
xchg
pop
mov
lock
push
cmps
je
pop
ret
inc
icebp
jmp
push
cmp
mov
scas
pop
(bad)
push
sbb
push
repz
jns
xchg
popa
arpl
jge
cmp
int3
jns
mov
xchg
pop
jne
cmps
cmp
xor
dec
outs
inc
shr
dec
adc
jl
jl
stos
mov
mov
cmp
test
xor
imul
outs
lods
pop
nop
cmp
pop
cld
repz
add
and
out
xchg
nop
dec
(bad)
call
popa
push
xchg
stos
xchg
addr16
mov
jae
shl
(bad)
mov
cmp
jb
jl
cmp
in
jae
jle
or
leave
pop
or
outs
cli
pop
mov
mov
fldenv
xchg
inc
jae
(bad)
sub
add
mov
adc
clc
mov
pop
sub
outs
push
mov
xchg
js
out
mov
xchg
dec
cli
ins
popa
jmp
jecxz
ins
in
push
adc
mov
xchg
mov
mov
addr16
adc
ss
add
sbb
ss
jns
xchg
std
pusha
in
sub
sbb
sub
mov
in
pushf
or
lds
add
adc
jno
cmp
sub
mov
stos
loopne
repnz
lahf
test
pop
pop
test
push
sub
push
ja
aaa
lds
dec
popa
xchg
mov
push
adc
or
dec
ret
sub
inc
stos
xchg
std
and
and
or
jns
mov
jnp
shl
lock
sub
pop
or
mov
mov
icebp
hlt
dec
sbb
neg
mov
(bad)
inc
popa
jmp
sti
ins
and
and
out
mov
movs
sub
add
xor
cs
test
std
xlat
adc
and
dec
xchg
xchg
mov
and
cmps
inc
mov
test
dec
rol
fild
mov
or
cs
cmp
and
fiadd
pop
stos
jl
ret
test
imul
xchg
adc
mov
xor
mov
jge
push
mov
icebp
cmp
adc
imul
dec
outs
xchg
sbb
dec
and
sub
ins
std
pop
lods
pusha
bound
jmp
in
jmp
arpl
mov
xor
cmp
sub
sar
push
pushf
mov
sub
into
cwde
xchg
pop
adc
mov
add
sti
push
xchg
aaa
and
(bad)
cmp
add
daa
daa
jg
ins
xchg
cmps
and
out
pusha
daa
(bad)
mov
aam
cs
popf
add
faddp
dec
das
jl
mov
xlat
shr
xchg
and
xor
enter
fs
dec
xor
movs
rcr
outs
pop
and
and
bound
mov
jmp
push
inc
sahf
ins
mov
iret
dec
and
cmp
stc
pop
pop
rcr
add
mov
mov
mov
jg
dec
adc
mov
sub
(bad)
cmp
das
adc
(bad)
aas
mov
push
stc
lock
sbb
adc
(bad)
(bad)
and
cmp
mov
cmp
jo
retf
sahf
xor
scas
jae
jne
adc
int3
cmc
lds
jo
cmp
cli
(bad)
mov
inc
in
mov
je
jbe
pop
pop
es
(bad)
test
je
shl
xchg
mov
mov
out
add
xor
loope
aas
sbb
xchg
xor
inc
fcom
xchg
retf
aas
pop
pop
dec
inc
mov
pop
push
call
cmp
cli
(bad)
mov
xor
xchg
mov
xchg
mov
fwait
loop
mov
and
call
fbstp
push
xor
inc
xchg
inc
xchg
stc
movs
sbb
pop
out
cmps
stc
pusha
mov
cmp
add
pop
mov
in
mov
jbe
ins
pop
inc
pop
push
dec
mov
adc
sub
push
call
add
je
cmp
mov
jne
jo
sar
mov
pop
out
lahf
and
rdmsr
push
xchg
ja
out
xor
je
adc
movs
xchg
mov
mov
xchg
sti
add
mov
sub
std
cdq
clc
gs
jp
fadd
scas
xchg
or
ins
sbb
xlat
xchg
data16
icebp
shl
movs
or
jecxz
lock
nop
pusha
std
hlt
mov
loopne
aas
lods
sub
jp
adc
mov
mov
fiadd
add
xor
push
stos
movs
dec
sbb
inc
in
sbb
jmp
xchg
cwde
sub
jp
push
xor
adc
mov
leave
mov
xor
mov
pop
mov
and
sbb
cdq
dec
push
aam
mov
and
out
call
jmp
clc
into
jmp
mov
ss
lea
push
inc
and
dec
sti
mov
(bad)
adc
and
fadd
ins
call
ficomp
les
addr16
rcl
cmp
jne
xchg
sti
cmp
sar
inc
je
add
inc
dec
jp
stc
add
sub
xor
push
add
sbb
push
dec
dec
sub
ja
pusha
js
into
xlat
push
test
loopne
cwde
xor
out
mov
int
fwait
das
jl
ins
jae
inc
(bad)
pop
or
pop
out
pop
(bad)
jns
jae
jb
adc
repz
hlt
jmp
inc
cmp
retf
dec
add
mov
out
dec
jg
xor
mov
jmp
xchg
mov
cs
in
inc
dec
lods
into
retf
xor
jnp
enter
cmp
adc
inc
sub
enter
mov
lods
jae
ss
add
dec
cmp
or
sbb
push
and
sbb
or
(bad)
sub
imul
(bad)
in
icebp
arpl
rcr
cmp
ins
ficomp
lods
xlat
and
inc
in
and
call
fild
xchg
add
xchg
xchg
jbe
mov
sub
inc
ret
pop
bound
jmp
into
add
mov
sbb
xchg
or
sbb
or
in
jl
inc
cmp
cwde
clc
jae
retf
ret
arpl
xchg
or
and
dec
push
pop
in
mov
in
jbe
or
mov
movs
add
lods
ficomp
push
xor
stos
xchg
movs
ret
dec
shl
rol
out
loop
mov
ins
test
(bad)
adc
sbb
je
(bad)
inc
xchg
mov
cmp
out
jnp
scas
cmp
xor
mov
popf
jmp
push
mov
mov
fwait
test
(bad)
iret
or
imul
in
out
fcmove
(bad)
or
sub
jmp
aam
xor
ss
cld
mov
adc
call
test
bound
or
cld
aaa
push
jns
pop
sub
cmp
sub
lods
retf
jecxz
or
add
shr
jnp
cmps
jp
arpl
and
out
fldenv
out
int
loop
inc
jg
in
xlat
and
mov
(bad)
aaa
push
das
das
clc
repz
cmp
push
mov
dec
gs
fndisi(8087
retf
fistp
cdq
xor
pushf
sahf
and
call
mov
ins
xchg
cmp
in
stos
add
pop
jmp
test
nop
sbb
in
push
cmps
mov
outs
js
jns
fnstsw
or
jb
push
mov
cmp
(bad)
pop
stos
cmp
pushf
aas
jbe
cmp
and
mov
retf
jle
ds
(bad)
retf
inc
push
dec
xlat
dec
xchg
dec
repnz
cmp
or
jns
and
cmc
bound
aam
pop
ins
cmp
sbb
lods
xchg
jo
sbb
xor
jnp
xor
test
mov
gs
imul
(bad)
xor
sbb
jnp
adc
jl
(bad)
div
stos
ins
fmul
sbb
jmp
mov
cmp
aad
int
dec
pop
cmp
lahf
aaa
dec
push
test
es
or
inc
lds
popa
xlat
jl
and
xor
mov
pop
and
jo
pop
mov
and
lds
or
cmps
retf
retf
mov
test
xor
or
inc
stos
xchg
cmps
jecxz
xchg
popa
clc
test
xchg
pop
arpl
sub
or
aam
bound
shr
aaa
xchg
cmp
(bad)
mov
cmp
in
push
push
jl
adc
mov
loopne
popa
mov
(bad)
mov
cld
cli
inc
fisttp
add
mov
repz
leave
cmp
mov
mov
ins
pop
dec
pop
outs
int
xchg
ret
ja
lods
xchg
aam
pop
(bad)
int3
nop
mov
movs
cmp
jp
jp
jno
(bad)
iret
fistp
lods
mov
add
fdivr
push
pop
or
daa
pop
add
cmps
mov
aas
pop
stos
xchg
jp
mov
iret
or
sub
jmp
in
xchg
cs
pop
cld
jbe
dec
fisubr
xor
mov
lods
cwde
mov
out
xor
fmul
lock
jne
(bad)
jle
cmps
cmps
call
es
mov
hlt
xor
fdivr
add
mov
cmp
movs
and
mov
ja
repz
sbb
xchg
data16
cmps
cmp
cld
inc
dec
and
lahf
movs
and
push
push
push
popf
loopne
scas
clc
lods
xchg
dec
cmps
cmc
mov
mov
add
xor
sbb
sub
cdq
jge
push
xchg
cmp
xlat
stos
push
push
mov
test
popf
add
inc
iret
cmp
cmps
xchg
int3
data16
sahf
and
int3
push
fptan
adc
xchg
daa
aad
ret
pop
sbb
shl
jmp
inc
adc
jno
(bad)
inc
outs
jl
add
shl
cmp
mov
fsub
dec
out
(bad)
ins
sar
adc
mov
sub
dec
cmp
fiadd
mov
xor
pop
mov
push
pop
bound
or
imul
pop
xchg
cmp
shr
into
es
push
ins
loopne
mov
jl
hlt
or
fnclex
cmp
xchg
or
lds
out
in
inc
cld
add
mov
cs
loope
fs
mov
outs
daa
jmp
jecxz
mov
mov
out
dec
adc
adc
sbb
clc
imul
(bad)
sub
push
sbb
lods
dec
mov
cld
add
test
lods
lods
nop
repz
sub
jecxz
mov
fs
cld
or
mov
dec
xchg
pop
mov
out
dec
(bad)
int3
dec
jg
pop
(bad)
and
and
push
movs
mov
push
dec
fistp
sub
arpl
or
dec
xor
(bad)
xor
and
iret
arpl
dec
mov
and
ret
test
and
cmps
cmp
mov
movs
(bad)
in
push
push
xchg
stos
jge
mov
mov
les
cmp
dec
fdivr
test
xchg
sar
adc
xor
ja
les
out
les
nop
movs
jno
frstor
dec
mov
jp
add
push
pushf
xchg
sbb
dec
mov
(bad)
fsubr
mov
or
retf
fwait
or
or
gs
xchg
xor
stos
arpl
xchg
mov
mov
in
jae
mov
jl
pushf
mov
loope
pushf
push
sbb
aam
jg
es
adc
ror
scas
xor
mov
int
fcom
dec
jne
mov
mov
test
adc
ret
nop
mov
cmp
loop
and
sbb
shl
ret
push
fnstsw
or
test
sbb
pop
or
pop
pop
sar
push
cmp
sub
js
jnp
fisub
test
mov
mov
mov
or
cmp
pop
lahf
or
push
jg
stos
mov
nop
loop
lods
xchg
and
cld
mov
xchg
movs
cmps
int
shl
add
mov
mov
mov
fwait
jmp
(bad)
dec
fild
cdq
mov
inc
mov
in
fld
xor
push
push
xchg
push
pop
mov
(bad)
in
jge
popa
push
rol
and
fidivr
leave
inc
mov
jno
and
sub
xor
dec
sahf
call
inc
mov
lds
sbb
xor
push
jle
mov
(bad)
sub
pop
dec
add
test
add
sti
ja
scas
push
dec
sbb
mov
xor
and
mov
rcl
sbb
sub
cld
outs
jno
ficom
inc
out
dec
test
clc
jo
in
sub
les
in
jmp
add
xchg
das
(bad)
mov
mov
idiv
retf
inc
add
ja
xor
daa
add
mov
not
mov
cli
push
ins
or
dec
retf
xchg
pop
movs
stc
inc
fstp
movs
sbb
xchg
sbb
(bad)
cli
xor
cmp
push
push
(bad)
les
mov
sub
scas
push
and
fimul
adc
frstor
ds
jmp
cmp
mov
arpl
pop
movs
mov
mov
xor
cli
xchg
mov
mov
jecxz
shr
xchg
sbb
inc
aas
pop
loope
jnp
ret
rol
out
inc
clc
stos
stc
or
push
jg
push
pop
sbb
add
dec
aad
push
sbb
pop
arpl
xchg
jp
push
(bad)
in
lds
adc
xchg
test
ficom
addr16
sub
push
xlat
and
pop
mov
out
xchg
(bad)
sub
mov
bound
rol
pop
cmc
into
pop
outs
aaa
retf
retf
div
jmp
inc
xor
or
mov
retf
test
pop
jae
sub
mov
cld
jmp
xor
inc
push
push
ret
dec
ret
nop
fldenv
mov
cmp
pop
call
sbb
mov
inc
jge
in
or
ror
mov
in
push
das
push
or
lea
in
push
xchg
mov
jg
lahf
loopne
sub
mov
inc
cmp
inc
push
xor
xchg
neg
(bad)
push
add
mov
shr
test
sahf
push
mul
into
mov
rcl
call
fist
pop
adc
sub
imul
adc
inc
mov
xlat
cld
je
pushf
call
rol
cmp
inc
in
lods
lods
xor
inc
out
cwde
push
out
inc
push
xchg
ss
fnstsw
push
stos
(bad)
test
lahf
mulps
and
mov
rcl
adc
mov
in
sbb
test
mov
pop
inc
xor
scas
mov
dec
jb
mov
cwde
jmp
pop
sub
es
mov
mov
jnp
push
jb
ja
xchg
and
push
xchg
mov
out
call
mov
mov
push
shr
inc
call
sbb
cmp
mul
jbe
jecxz
dec
inc
mov
push
fnsave
mov
add
(bad)
jb
aam
sti
mov
(bad)
aaa
xchg
or
sbb
mov
nop
loope
xor
sub
xor
ss
retf
stos
dec
retf
or
test
jp
ror
cmps
fist
xor
jo
add
cmp
pushf
inc
mov
fild
xchg
call
adc
nop
add
pop
ss
fimul
mov
out
test
mov
pop
push
cli
cmp
test
lods
stc
aas
pop
nop
mov
adc
pushf
ud2
fimul
gs
in
outs
test
cmp
dec
imul
mov
or
xor
and
lods
inc
mov
popa
sub
xlat
sahf
mov
loope
and
into
jnp
cmps
adc
repz
icebp
xor
test
adc
lds
jbe
push
cmp
mov
dec
repnz
cmp
loopne
jbe
dec
loop
mov
mov
and
(bad)
dec
jne
retf
pop
imul
xor
js
retf
jge
or
inc
into
aam
repz
cli
out
int3
lods
(bad)
scas
mov
mov
ins
setnp
xor
rcr
hlt
(bad)
mov
arpl
push
xchg
lods
pushf
std
push
inc
or
loop
shl
jge
ss
pop
pusha
push
movs
in
jp
retf
mov
call
mov
jne
or
ret
xchg
fidivr
sub
push
leave
(bad)
bt
mov
lahf
mov
int
loope
aam
jmp
(bad)
push
in
(bad)
jmp
cmps
fidiv
cmp
mov
pop
popf
lea
mov
popf
mov
daa
and
or
dec
sbb
add
iret
nop
mov
or
in
xchg
sub
sbb
jge
lods
sbb
xchg
adc
add
sbb
mov
push
lahf
mov
xor
pop
pop
leave
hlt
fcomp
cwde
dec
sub
sub
inc
ins
sbb
cmp
inc
dec
mov
mul
outs
adc
aam
pop
jno
inc
cmp
inc
ror
pop
dec
pop
mov
and
loop
mov
sub
pop
dec
push
cli
mov
mov
js
pop
ds
pop
mov
pop
pop
adc
cdq
out
scas
leave
mov
and
(bad)
mov
add
mov
dec
pop
out
jo
mov
jns
shld
bswap
ret
xor
jecxz
stos
inc
mov
mov
cs
xchg
or
xchg
cmp
adc
fidivr
retf
ins
jg
pop
test
mov
shl
or
push
pushf
leave
clc
pop
iret
pusha
mov
push
push
ss
mov
mov
lods
mov
push
cmp
pop
push
fs
push
jo
lea
stos
ret
shrd
mov
outs
aad
shr
pushf
mov
fst
mov
push
(bad)
pushf
sbb
or
xchg
or
xchg
adc
and
out
or
xchg
jle
fs
dec
imul
add
jns
ret
aam
ror
cdq
fsubp
inc
jne
add
and
movd
inc
lock
les
fnstcw
mov
jl
mov
and
ret
or
xor
xlat
jb
js
xor
add
(bad)
fnstsw
push
pusha
mov
cmc
adc
mov
ror
xor
hlt
xchg
pop
xor
mov
test
mov
call
jge
es
push
icebp
nop
xchg
pop
(bad)
cmp
mov
(bad)
xchg
sbb
cdq
add
and
fiadd
or
idiv
scas
or
sub
rcl
enter
test
cmp
push
mov
icebp
std
cli
or
sbb
push
imul
aam
arpl
test
popf
rcr
retf
and
inc
mov
mov
(bad)
xor
mov
(bad)
movs
mov
fdivp
or
rol
cmc
mov
xchg
mov
xchg
call
outs
neg
mov
ds
push
dec
shl
mov
ins
pop
les
not
add
xor
ror
int
mov
pop
or
add
fdiv
xor
pop
jl
(bad)
lock
xchg
out
bound
das
push
mov
push
movs
inc
sti
lods
fcomip
pop
add
test
pop
jge
fcom
addr16
inc
movs
lds
test
xchg
cmp
push
mov
aas
or
dec
loop
(bad)
imul
mov
mov
jge
cs
cli
xor
mov
imul
mov
leave
fcomip
shl
xchg
lock
ins
ins
pop
jb
popa
adc
adc
pop
push
or
or
shr
xchg
sbb
sub
dec
fistp
icebp
rcr
jno
shr
fnstcw
jle
mov
mov
loopne
cwde
stos
mov
fld
(bad)
sar
sti
jl
or
add
inc
test
sbb
icebp
and
imul
jno
dec
fs
fadd
(bad)
xor
call
sbb
repz
je
mov
jno
fbstp
push
cmps
push
inc
jns
rol
mov
ret
repnz
lahf
out
mov
hlt
pop
or
mov
out
retf
movs
push
fcomp
rol
in
xchg
xchg
sti
out
dec
nop
add
fcmovb
aaa
in
mov
adc
clc
cmp
xchg
mov
jne
pop
loop
sbb
loop
addr16
test
fadd
and
push
and
sbb
push
xor
jp
sbb
cli
mov
popf
add
add
int3
leave
xchg
push
pop
add
sti
dec
xlat
fwait
leave
rol
mov
push
sbb
inc
mov
mov
dec
and
int3
pusha
rol
or
mov
or
sub
dec
mov
call
mov
sbb
(bad)
xchg
dec
retf
leave
dec
mov
pushf
je
dec
test
movs
call
or
push
dec
push
jl
shl
mov
or
mov
adc
cmc
jle
cdq
adc
cmps
or
sub
dec
out
sub
sbb
mov
loope
sbb
mov
mov
nop
pushf
xchg
mov
dec
pushf
outs
xchg
jbe
mov
test
pushf
jecxz
push
fbld
ss
mov
add
add
adc
shl
data16
sub
loopne
ss
push
pop
stos
dec
pop
in
les
lahf
sub
repnz
into
jno
mov
stos
dec
aad
mov
mov
test
aad
pop
sub
or
call
mov
jle
cmp
sub
lods
std
loop
(bad)
fcomip
sub
push
adc
test
retf
aam
sub
(bad)
pusha
xchg
push
lods
jp
sbb
and
push
adc
mov
mov
ja
push
test
jnp
add
inc
mov
inc
outs
mov
add
ror
jnp
pop
push
sbb
pop
ds
popf
gs
lock
repnz
daa
cs
or
xchg
cmp
jmp
scas
std
mov
iret
or
mov
dec
aaa
jmp
aam
or
mov
es
scas
cmps
push
xlat
pop
dec
mov
mov
jl
fadd
mov
cwde
cmp
mov
or
retf
xor
sbb
in
mov
sub
addr16
adc
jmp
xor
and
scas
and
and
jmp
and
aaa
mov
(bad)
jno
inc
dec
push
or
mov
ss
pop
sbb
cmp
sbb
add
lock
mov
icebp
add
dec
call
mov
mov
jmp
out
ins
jns
out
pop
xor
add
push
sbb
add
push
dec
inc
test
ja
lods
inc
or
mov
xchg
lea
and
daa
das
inc
das
test
inc
(bad)
fwait
jo
cmp
es
outs
cs
mov
cmp
cmp
or
dec
popa
adc
aam
add
lock
repz
jle
pop
ss
inc
sub
clc
imul
out
xchg
bound
xor
jle
push
mov
bound
loope
mov
div
sub
les
and
out
jnp
daa
mov
mov
jl
int
das
sub
jl
mov
les
pop
mov
dec
xor
push
cs
iret
scas
loop
cmps
mov
ins
or
cvtpi2ps
mov
mov
test
cli
pop
mov
movs
cld
aaa
(bad)
push
or
aad
jmp
inc
retf
adc
sbb
loopne
shr
pop
mov
jp
mov
test
mov
(bad)
mov
inc
dec
pop
mov
jg
out
jle
lea
repz
jae
xor
cmps
cmp
aam
movs
enter
push
adc
inc
jae
mov
icebp
mov
jge
ret
ins
or
push
jns
add
movs
jmp
fldln2
lahf
push
xlat
les
dec
jno
add
cmp
xchg
and
ficom
call
fmul
retf
sub
int
cmp
dec
pusha
pushf
int
adc
div
sub
xchg
mov
pop
das
jb
push
fist
mov
pop
mov
call
mov
sbb
loop
sahf
adc
xchg
movs
mov
ss
fsubr
jo
and
loope
mov
jmp
jmp
sbb
int3
inc
mov
sub
push
push
es
rol
stos
popa
mov
mov
sub
cli
push
mov
sub
out
fcmovbe
icebp
sbb
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
dec
int
das
sbb
jge
rcl
or
in
mov
inc
mov
mov
mov
mov
xchg
shl
bound
push
fisub
jno
and
loop
add
ror
mov
inc
inc
xchg
cmp
push
lahf
mov
jl
jae
lock
jecxz
stos
call
add
push
pusha
inc
mov
rcr
outs
cdq
add
and
xchg
adc
add
pop
sub
push
sar
call
in
sub
pop
mov
ins
sub
fsubr
sbb
outs
mov
loope
nop
xchg
inc
jo
pop
cmp
add
call
jo
jmp
mov
aad
imul
and
out
int
push
arpl
dec
jmp
idiv
sti
cmc
push
adc
mov
int
leave
pop
sar
xlat
cmc
sub
loop
jae
xor
xchg
shl
outs
mov
jae
xlat
cmc
int
shr
inc
stos
inc
push
hlt
mov
xlat
fstp
sbb
jnp
inc
cmp
push
out
loope
ret
and
leave
add
pop
aas
add
or
(bad)
call
ins
jg
sti
(bad)
mov
mov
rcr
cmp
mov
test
cmps
and
cwde
mov
jnp
or
mov
or
add
in
mov
xlat
adc
call
mov
shl
mov
pop
sub
jmp
stos
adc
nop
xchg
daa
xchg
aaa
jno
pusha
xchg
sub
mov
pop
es
loopne
(bad)
in
mov
scas
loop
(bad)
dec
cs
gs
stos
lods
mov
adc
pop
or
rcr
inc
(bad)
xchg
imul
push
mov
sbb
sti
out
fwait
sahf
push
dec
jecxz
jne
xor
xchg
int3
gs
cmp
push
retf
dec
mov
out
pop
pop
popa
push
dec
loopne
push
ds
dec
inc
stos
mov
mov
mov
dec
fwait
int3
add
cmp
push
out
ja
and
pusha
fstp
fadd
push
fimul
and
sub
jo
or
add
or
adc
gs
push
pop
pop
dec
leave
iret
and
mov
fsubr
sub
int
mov
popa
aad
mov
mov
dec
or
xor
(bad)
push
stc
sbb
mov
in
movs
ret
lods
out
inc
jbe
xlat
dec
stos
inc
jmp
movs
mov
movs
xor
out
cmp
stos
cwde
cmp
sahf
jae
and
sub
test
or
aas
js
mov
push
push
mov
mov
popa
les
jae
aaa
and
mov
sbb
call
pusha
xchg
out
xchg
inc
int
fistp
cld
das
adc
mov
cld
scas
or
add
adc
cmp
inc
mov
or
sbb
pop
sahf
xchg
xor
into
jp
lods
cmp
mov
dec
lahf
lods
mov
mov
pop
repnz
test
xchg
jns
cmp
xchg
xchg
cmp
in
xor
dec
mov
lahf
mov
popf
cmc
mov
imul
jo
or
out
or
ret
adc
int
nop
mov
inc
pop
fs
push
les
xor
or
js
ja
jp
hlt
lahf
adc
or
out
movs
cld
hlt
mov
xor
inc
inc
fidiv
adc
push
sub
fs
and
lock
pushf
hlt
mov
aam
sbb
add
cmc
call
push
jbe
retf
pop
(bad)
push
jb
iret
sub
inc
sbb
xor
dec
adc
xchg
xchg
jmp
push
mov
cmps
and
sub
loopne
push
fidivr
cmp
ja
mov
movs
shr
pop
xchg
add
les
in
pop
sub
ret
sar
ror
inc
pop
mov
fwait
cmp
jecxz
sub
fnstsw
push
mov
retf
das
push
hlt
xchg
sbb
push
gs
lahf
jl
and
enter
cmp
ror
jge
nop
movs
pusha
inc
push
js
xchg
mov
mov
addr16
cmp
adc
push
dec
or
and
nop
pop
scas
jmp
jmp
test
inc
push
jle
in
fidiv
push
lods
cli
mov
and
sar
mov
movs
add
arpl
fild
fwait
fs
push
popf
icebp
shl
outs
cmc
nop
ins
xchg
xchg
les
inc
xchg
(bad)
(bad)
dec
pop
mov
shl
adc
add
mov
cmp
or
pop
adc
rcl
adc
int3
fs
xchg
hlt
ins
mov
ja
jl
and
ret
repnz
pop
pop
push
jp
repz
dec
imul
rcl
loopne
inc
pop
test
xlat
sbb
out
pandn
dec
push
ins
test
fistp
push
js
stos
call
ja
pop
jns
pop
push
into
mov
imul
xchg
aad
mov
fwait
inc
inc
lock
add
cmp
mov
xchg
sub
push
test
pop
je
arpl
fcmovbe
ins
test
fwait
inc
fwait
inc
cwde
add
dec
push
mov
inc
sbb
movs
add
popa
jnp
enter
outs
imul
lea
test
cmp
push
fisubr
sbb
inc
sahf
imul
out
cmp
out
jl
or
sbb
sbb
(bad)
out
sahf
inc
mov
xchg
and
xchg
add
cmp
inc
and
inc
(bad)
jb
popf
dec
xchg
adc
pop
cmp
sub
inc
leave
ja
mov
das
push
xchg
mov
imul
lock
cli
lods
fisubr
mov
push
in
mov
lea
xchg
xor
fwait
cs
push
jns
jbe
xor
push
std
das
ins
push
pusha
(bad)
ja
stos
mov
ret
jbe
jmp
jmp
in
div
fnsave
ins
jmp
jno
jns
add
fdivr
or
jmp
shr
cmps
jb
call
mov
in
dec
mov
std
xlat
cmps
xor
clc
mov
fimul
in
xchg
cld
(bad)
mov
fistp
out
dec
dec
lahf
fld
(bad)
(bad)
int3
popa
das
and
adc
pop
pop
fcmovu
std
dec
ins
xor
xor
push
jmp
imul
jp
neg
push
sbb
(bad)
in
aam
pop
(bad)
sbb
pop
fcmovnu
push
jns
cwde
cmp
push
mov
lods
xchg
mov
and
mov
adc
cld
mov
mov
add
mov
mov
dec
sbb
call
and
adc
push
and
je
dec
xor
mov
sbb
inc
mov
mov
add
push
ror
loopne
je
sbb
test
(bad)
ror
lahf
xlat
sahf
pop
xor
dec
fcmove
je
push
fbld
or
mov
rol
daa
(bad)
sahf
(bad)
jb
xchg
shl
out
das
dec
dec
in
mov
fcmove
sahf
jg
push
scas
adc
and
aaa
(bad)
and
scas
mov
push
out
ds
jnp
movs
xchg
pushf
inc
cmc
pop
mov
inc
mov
add
ror
jmp
leave
loop
hlt
imul
call
xchg
push
add
addr16
mov
aas
(bad)
ins
dec
add
mov
jmp
add
fsub
icebp
mov
fsub
call
bnd
mov
inc
mov
and
mov
xchg
inc
sub
xor
sar
jns
fisubr
xor
in
push
retf
les
sub
test
scas
fs
out
push
add
dec
retf
jge
pop
pop
es
(bad)
mov
aas
mov
and
dec
jg
xlat
mov
(bad)
mov
loope
popa
xchg
repz
stc
inc
cwde
add
or
or
xchg
push
(bad)
xor
mov
arpl
les
sub
nop
inc
xchg
nop
inc
cmp
mov
or
mov
in
pop
xchg
cs
dec
data16
enter
pop
sar
mov
pop
adc
pop
pop
inc
ss
xchg
inc
jp
adc
and
fbld
and
daa
inc
pop
mov
pop
test
lods
ins
xchg
test
mov
sti
xchg
xchg
mov
sbb
cmp
sti
lds
lods
enter
imul
gs
lods
fadd
add
sbb
int
add
(bad)
cs
or
mov
iret
push
addr16
hlt
enter
fiadd
shl
add
xchg
rcl
cdq
(bad)
jnp
loopne
(bad)
pop
out
stc
jge
outs
retf
pop
and
pop
jl
and
pop
or
sub
dec
adc
add
mov
inc
or
(bad)
test
cmp
imul
fisubr
movs
inc
(bad)
sub
in
dec
jae
mov
outs
clts
jae
fwait
cmp
mov
mov
rcr
push
jbe
cs
inc
shl
push
fdiv
sahf
sti
popf
push
inc
repnz
mul
add
jl
aad
cdq
ror
jb
xor
loop
add
fmul
int3
imul
inc
shl
jmp
imul
jne
mov
lds
pop
lea
sub
sub
test
stc
xor
jne
inc
pusha
aas
fwait
jnp
(bad)
(bad)
jmp
push
inc
cdq
jle
(bad)
sub
sub
push
cmp
inc
(bad)
push
mov
retf
cwde
popa
dec
ret
or
mul
mov
test
ja
dec
mov
mov
mov
(bad)
mov
int
loopne
int
fild
jl
jns
push
xlat
fstp
inc
mov
push
icebp
dec
sub
mov
xlat
mov
jne
push
stos
shl
arpl
fcom
jns
mov
mov
mov
xchg
in
dec
pop
xor
cmc
xchg
imul
in
sub
sub
shl
mov
adc
bound
lods
xchg
pushf
dec
add
sbb
(bad)
fsub
cmp
jne
cmps
xchg
or
add
repz
jno
out
repnz
adc
pop
dec
pop
fstp
(bad)
xchg
jmp
sub
mov
stos
xchg
inc
push
pop
dec
pop
scas
or
push
cld
into
movs
scas
jle
mov
call
inc
hlt
push
xor
out
adc
mov
enter
push
mov
adc
popf
es
movs
int3
inc
ins
and
cmp
fiadd
sbb
(bad)
lds
mov
xchg
(bad)
imul
popa
daa
lods
mov
pop
mov
xchg
sti
sti
adc
aad
test
jne
jo
push
inc
xor
mov
pop
out
rcr
ja
popf
out
loope
jno
stos
jbe
clc
xchg
mov
dec
push
pop
js
adc
call
fnstcw
out
adc
mov
sar
out
icebp
shl
frstor
xor
(bad)
sbb
pop
add
shr
xchg
pop
fsub
les
mov
dec
pop
mov
inc
sti
je
or
aas
js
pause
mov
pop
add
xchg
or
lock
inc
add
pop
sbb
push
ja
test
or
mov
stos
repz
xor
dec
jg
scas
inc
stos
sbb
dec
mov
mov
mov
arpl
jne
and
inc
push
and
push
aad
rol
out
cdq
pushf
call
shl
out
pop
mov
ss
and
xor
cmp
adc
fmul
sbb
rcr
mov
in
scas
jnp
push
xchg
push
push
mov
sbb
jmp
mov
(bad)
iret
je
and
dec
mov
test
std
or
in
xchg
pop
mov
inc
bound
imul
fcomp
loope
mov
mov
dec
push
sbb
(bad)
jmp
imul
jmp
cmps
mov
mov
cs
adc
jmp
lahf
and
cwde
mov
call
call
jle
mov
jb
inc
pusha
mov
push
xor
mov
sub
fsub
add
xor
pushf
lds
and
fdiv
lods
push
xchg
loopne
test
(bad)
mov
cmps
cmp
xchg
jns
ins
mov
mov
loop
cmp
xchg
mov
xor
cs
sar
imul
ins
fist
(bad)
xchg
jge
shr
mov
scas
ret
push
mov
pusha
fdivr
(bad)
xor
and
inc
iret
lods
out
hlt
into
xchg
popf
ror
jg
imul
or
xor
fnstenv
mov
stos
jo
in
add
sub
jmp
aam
xor
jp
pop
(bad)
push
int3
inc
inc
retf
call
mov
bound
push
popa
xchg
repz
nop
mov
mov
popf
jno
mov
add
add
enter
imul
pop
dec
fist
loope
cld
scas
ror
sub
movs
inc
jle
xor
ret
jge
jl
outs
jbe
mov
and
add
mov
outs
stos
mov
xor
das
fdivr
in
clc
int3
mov
mov
inc
ja
dec
pushf
addr16
pop
mov
pop
test
mov
cmp
mov
mov
shl
sbb
push
sar
sbb
(bad)
jb
mov
push
stos
popa
cwde
sub
sbb
mov
and
pop
cli
cs
pop
in
mov
test
in
mov
ins
aaa
mov
mov
inc
shl
pop
inc
sbb
pop
push
out
sti
rol
sbb
sub
pop
xor
cmc
cmp
inc
and
call
popa
das
and
jne
jnp
shr
div
mov
popa
aad
xchg
dec
adc
add
xchg
popa
jmp
sbb
je
push
aas
hlt
ficomp
jmp
loop
cmp
jmp
dec
js
mov
sbb
jo
lahf
or
cmp
xchg
sub
or
inc
adc
mov
sar
(bad)
inc
test
ror
jp
xchg
pop
cmp
(bad)
mov
pop
add
pop
cmovb
push
or
dec
(bad)
enter
sbb
aam
mov
sub
enter
mov
outs
adc
aam
xchg
cld
cmc
ja
aas
or
ins
pop
imul
leave
call
push
dec
push
or
aas
jg
cs
xchg
xor
loope
cmp
xor
push
jge
cmps
retf
outs
adc
jmp
jg
jecxz
xchg
gs
xchg
xor
mov
mov
repnz
cmc
lods
add
sbb
pop
scas
nop
mov
adc
sbb
and
dec
mov
stos
ss
cli
arpl
xor
adc
dec
dec
scas
inc
lea
cli
jne
sbb
test
mov
call
dec
cmp
cwde
dec
rcr
pop
xchg
call
pop
inc
int3
sub
xchg
aaa
mov
cwde
sub
outs
fadd
inc
or
shl
fcomi
jle
std
nop
sbb
rcl
mov
push
outs
out
xor
push
enter
in
lds
aaa
add
mov
jnp
sbb
int
cmps
out
xor
xor
movs
jae
in
sahf
mov
fiadd
imul
stos
out
cdq
dec
jb
pop
push
push
or
add
push
add
pushf
into
outs
dec
inc
fmul
and
dec
sub
mov
add
mov
mov
xchg
(bad)
stc
or
out
cmps
mov
mov
cdq
cmc
jecxz
rcr
pushf
inc
and
aaa
adc
retf
xor
xor
fucom
push
dec
mov
or
xchg
inc
add
shl
frstor
out
pushfw
xchg
push
xchg
(bad)
mov
xchg
xchg
cld
inc
fidivr
push
out
or
jmp
mov
push
pop
jmp
stc
mov
xchg
pop
pop
push
adc
cmc
lea
idiv
in
inc
les
or
inc
bound
repz
imul
aam
cdq
cmp
into
cli
test
loop
lods
xchg
stos
xor
jbe
lods
lock
cmp
add
std
loope
lods
rol
inc
adc
mov
shl
daa
iret
addr16
mov
sub
mov
retf
dec
dec
dec
dec
sub
or
add
add
xor
push
cmp
push
sbb
jmp
inc
xor
cmp
aas
stc
repnz
xor
sub
or
jo
fdivr
outs
xor
in
cwde
outs
int
ficom
clc
aas
popa
xor
mov
cld
pop
(bad)
enter
or
adc
icebp
ror
fist
dec
test
nop
fnsave
xor
shl
xchg
pop
xor
shl
xchg
push
imul
fnstcw
mov
loope
fstp
retf
mov
push
push
sub
add
stos
je
outs
sbb
jle
or
dec
fs
cmps
or
sbb
out
inc
jecxz
int
std
aam
add
add
loope
loope
dec
xchg
je
sbb
fsub
dec
mov
or
dec
xor
out
inc
fsub
(bad)
push
pop
mov
bnd
pop
mov
mov
cmps
mov
leave
loope
mov
pop
cdq
loope
data16
push
add
jns
push
fstp
out
int
movs
mov
imul
out
xor
(bad)
out
pop
xchg
in
stc
jae
push
(bad)
cmp
retf
mov
aam
xchg
ret
imul
jo
mov
ins
mov
push
mov
pop
inc
lahf
adc
mov
rol
mov
rcr
fucomip
xlat
push
adc
in
xor
rcl
in
sub
sahf
pop
inc
push
xchg
icebp
add
adc
in
ret
loopne
sbb
or
add
sbb
lods
(bad)
mov
(bad)
dec
cwde
mov
add
jns
cmc
inc
lods
xchg
sub
inc
or
mov
and
mov
call
push
div
jle
or
test
mov
jne
pop
xchg
xchg
inc
sub
pop
fild
fldcw
loop
ins
sbb
jg
inc
mov
lea
fistp
pop
in
fist
fsubr
adc
sbb
sbb
mov
je
clc
push
add
test
loopne
ret
cmp
in
stos
mov
push
add
cdq
mov
push
dec
cmp
das
out
xlat
retf
sar
xor
out
adc
retf
add
lds
push
addr16
cmp
add
int
mov
lods
nop
jmp
xor
mov
int
sbb
fdiv
fistp
fidiv
pop
pop
fstp
mov
ficom
sahf
cwde
mov
jecxz
retf
pop
dec
mov
mov
mov
pop
jmp
mov
xlat
in
mov
repz
cmp
and
sub
inc
cdq
and
xlat
retf
int3
add
int
ret
jmp
fxch
in
cmp
xor
test
xchg
jmp
lahf
rcl
sti
nop
(bad)
jp
movs
aaa
cmp
xchg
cmp
inc
hlt
xchg
jle
mov
aas
sbb
leave
repz
adc
fsub
fimul
imul
loope
pop
ss
das
or
sti
push
mov
jle
int3
adc
jmp
pop
jno
jae
and
cwde
test
nop
pop
aam
ins
cdq
xchg
fdivr
or
into
and
outs
sahf
xchg
lea
sbb
sbb
xor
jmp
sub
int3
pop
aas
xchg
(bad)
push
cmp
mov
jne
stos
ja
mov
popf
jmp
mov
gs
ss
add
mov
fwait
hlt
hlt
cmps
fs
ror
pop
not
mov
push
jb
cmp
push
retf
lock
shr
xchg
cmps
pushf
(bad)
rcr
push
mov
adc
mov
dec
push
push
gs
dec
(bad)
loop
clc
mov
jmp
adc
ins
(bad)
jge
in
dec
sub
sbb
jb
int3
jnp
movs
(bad)
mov
fist
dec
push
pop
sbb
cmp
push
and
(bad)
sbb
ret
or
(bad)
fldenv
fsub
cmp
enter
imul
add
clc
ficomp
pop
add
mov
(bad)
dec
or
(bad)
cdq
call
push
ds
jecxz
dec
xchg
push
sbb
iret
hlt
inc
mov
icebp
adc
inc
mov
sub
clc
cmps
aas
pop
ds
mov
call
(bad)
and
out
into
mov
cmp
adc
mov
jle
mov
inc
nop
mov
lock
xchg
xchg
stc
rcr
pusha
add
sbb
test
ds
sub
pop
jmp
pop
mov
imul
in
jecxz
scas
mov
jne
cdq
mov
dec
inc
inc
ret
(bad)
or
in
jle
mov
dec
call
leave
jmp
adc
pop
adc
add
sub
icebp
cs
jp
mov
xor
call
push
in
xor
fdiv
and
sub
push
das
leave
ins
ret
cmp
outs
dec
push
in
pop
inc
inc
sbb
mov
push
cmp
or
sub
mov
das
mov
sbb
lea
mov
out
sub
cmp
retf
and
push
dec
jmp
aaa
cwde
hlt
and
jne
mov
test
mov
dec
inc
cmc
(bad)
pop
jnp
pop
ret
retf
mov
push
call
cmp
mov
jo
imul
mov
ss
sub
mov
leave
(bad)
imul
lds
jne
ds
es
(bad)
mov
dec
repz
jb
icebp
jne
sbb
loope
xchg
cmp
xchg
enter
mov
dec
aam
jmp
stos
sbb
div
push
enter
mov
iret
jo
sbb
xor
inc
jae
jmp
std
fmul
mov
mov
push
int3
xlat
jecxz
mov
repnz
mov
pushf
jp
jge
sar
sbb
or
loop
inc
dec
xor
clc
cmp
std
das
add
xchg
mov
fcom
stos
pop
lahf
dec
sub
mov
jns
inc
or
dec
retf
adc
test
fstp
sbb
fs
das
mov
inc
in
js
popa
scas
add
pop
sti
pop
das
clc
mov
sahf
xor
cld
loopne
test
add
or
in
cmp
mov
ins
jecxz
and
(bad)
push
daa
fwait
inc
enter
int3
mov
int
or
aaa
pop
inc
es
test
sub
in
fsub
xchg
inc
lods
sub
pop
pop
mov
test
ins
mov
push
add
cld
mov
(bad)
inc
ins
or
loope
xor
lods
daa
mov
mov
cmps
(bad)
ins
add
dec
mov
dec
ret
mov
ret
xor
sbb
xor
movzx
and
pop
bound
jg
add
test
dec
pop
fwait
ss
popf
cmp
pop
retf
push
gs
lds
push
pushf
pop
out
int3
out
cdq
and
mov
neg
leave
jnp
adc
movs
adc
sbb
inc
adc
rcl
adc
nop
jno
enter
fst
xchg
push
or
mov
aas
or
sbb
jnp
add
pop
sub
adc
leave
outs
or
ficomp
cwde
fmul
mov
and
les
add
mov
inc
out
mov
ss
cwde
adc
fisub
movs
ret
push
sbb
pop
test
cmp
xchg
ds
mov
mov
out
dec
mov
popf
mov
in
add
repz
ds
xchg
cdq
shl
pusha
inc
lea
pop
cmp
sub
push
je
aaa
ror
je
or
add
mov
push
jns
(bad)
retf
test
push
aaa
aad
cdq
in
xchg
push
jle
and
sub
sub
mov
icebp
cmc
dec
or
xor
xor
jge
das
daa
test
out
cmps
out
in
dec
xchg
sub
pop
dec
pushf
and
imul
mov
and
sub
mov
call
sub
inc
repz
and
jno
cmp
xor
mov
add
xor
mov
aad
cmc
sbb
sbb
loopne
imul
push
pop
mov
lahf
dec
pop
stc
int
or
mov
outs
pop
mov
push
lahf
jne
std
cwde
xchg
scas
daa
add
adc
dec
mov
jno
ret
(bad)
int3
ss
mov
mov
inc
sub
(bad)
cmp
jmp
sub
stos
mov
cmp
jge
push
xor
mov
mov
in
mov
jp
adc
out
ror
out
leave
or
in
inc
jns
sbb
pusha
cmp
push
shl
test
mov
lock
and
test
call
sub
ret
shr
sbb
sbb
ret
jmp
or
or
dec
jl
dec
jl
jbe
out
je
sti
dec
ss
push
and
dec
outs
cmp
imul
int3
leave
int
ror
lock
mov
and
jmp
pop
and
(bad)
(bad)
sbb
out
test
sbb
daa
push
stos
or
and
jo
inc
scas
and
xchg
sar
sub
test
lahf
add
stos
or
push
inc
push
out
ror
push
ins
data16
sub
sub
scas
in
push
add
ds
sub
pop
stos
cmps
fs
adc
ins
pop
cmp
mov
daa
into
leave
adc
add
out
pop
and
push
retf
hlt
movs
shl
(bad)
mov
and
mov
outs
sbb
cld
daa
dec
(bad)
xor
xor
xor
test
repnz
sbb
mov
retf
pop
adc
arpl
adc
les
jns
fwait
nop
arpl
jp
and
inc
pusha
scas
cld
rcl
and
sub
sub
in
nop
fisttp
sub
push
push
xchg
fimul
xchg
push
push
jnp
movs
or
js
fiadd
add
aad
ins
xor
sbb
arpl
movs
stos
pop
inc
and
ficom
and
cli
data16
fmul
mov
mov
and
xor
(bad)
out
enter
fst
push
mov
rol
lock
in
aaa
cmp
pop
mov
or
dec
mov
(bad)
ss
ret
ins
je
jge
mov
int3
xor
(bad)
lock
test
fwait
jno
inc
stos
out
ds
xor
mov
retf
pop
fstp
into
sub
mov
add
mov
add
or
cmp
inc
xlat
mov
push
lahf
inc
cmp
add
mov
clc
scas
out
and
sub
jnp
mov
push
adc
dec
jne
repz
lds
jge
jmp
js
das
xor
fcomp
loop
fbstp
ficomp
stos
xchg
outs
and
scas
xchg
jbe
mov
and
cld
les
out
fild
aam
movs
or
mov
adc
in
ret
or
add
fisubr
ret
cmps
mov
or
pop
jl
and
repnz
fnsave
bound
sbb
lahf
xor
scas
nop/reserved
xor
xchg
xchg
cld
jp
lods
arpl
retf
dec
mov
sub
cmp
push
mov
inc
es
sub
arpl
jmp
dec
pop
xor
je
je
inc
in
pop
retf
scas
ins
pop
je
repnz
jmp
cld
add
sbb
ins
dec
je
hlt
outs
add
addr16
pop
(bad)
stos
mov
push
inc
inc
(bad)
jbe
xchg
pusha
xchg
adc
pop
cli
mov
mov
inc
or
aas
btr
iret
iret
cli
(bad)
call
lods
mov
or
jo
cmps
mov
int
cmp
imul
pop
mov
add
mov
sahf
iret
(bad)
aam
fmul
mov
push
ds
dec
enter
mov
push
sub
out
xor
jl
mov
inc
jge
sahf
cmps
pop
push
lea
inc
jge
push
retfw
out
mov
dec
mov
mov
shr
push
ror
repnz
dec
mov
int3
mov
xor
ficom
test
cmp
test
sub
pop
cli
xor
jg
mov
fistp
mov
mov
jg
call
(bad)
jmp
arpl
jge
lock
(bad)
adc
xor
inc
fdiv
xchg
or
and
push
pusha
jnp
mov
mov
data16
lea
push
cmps
arpl
and
pop
mov
add
xchg
pop
cmp
push
sub
inc
dec
ret
xlat
add
cdq
loopne
push
pop
and
sub
dec
div
pushf
add
mov
or
adc
push
cmp
dec
aam
add
push
inc
cli
mov
push
inc
pop
or
cmp
test
retf
rcl
ins
push
js
(bad)
mov
popf
(bad)
(bad)
in
mov
in
jp
dec
or
mov
add
mov
mov
(bad)
into
xor
dec
inc
das
mov
and
push
js
pop
adc
and
mov
ds
adc
bound
jmp
enter
add
enter
add
mov
mov
adc
sub
test
scas
cmp
int3
std
add
add
(bad)
or
jge
push
loopne
into
outs
(bad)
daa
test
add
cdq
mov
and
add
cs
sbb
jmp
pop
in
fs
and
test
jne
lea
pushf
push
push
dec
inc
jecxz
dec
pop
cmp
mov
mov
push
pop
in
pop
sbb
mov
pop
test
scas
out
rcr
mov
imul
adc
daa
cwde
test
dec
sub
js
loopne
push
nop
out
cmp
les
add
outs
and
inc
retf
mov
push
aam
jmp
xor
into
rcl
or
movs
pop
repz
dec
cs
jle
sub
sub
mov
dec
shl
fld
lods
mov
in
out
mov
sbb
ret
push
xor
cmps
jb
and
ficom
push
and
cdq
sar
imul
stos
xchg
push
(bad)
scas
in
adc
div
scas
(bad)
test
add
pushf
push
out
int3
jge
pop
pop
xchg
cli
mov
out
mov
sub
bound
sbb
push
push
xchg
jmp
test
push
pusha
je
jecxz
xchg
xor
cmp
xlat
cwde
sub
adc
cmp
xor
int3
mov
jns
lds
cmp
pop
pop
loopne
je
jge
js
xchg
fld
xor
test
mov
pop
dec
imul
add
jno
aad
adc
ins
aas
mov
xor
add
into
adc
mov
pop
pop
and
sbb
call
mov
iret
or
xchg
xor
gs
push
or
jo
aad
dec
lahf
inc
jp
push
sar
out
xlat
inc
mov
cmc
in
xor
lods
lods
repnz
aam
push
sbb
or
inc
in
sti
dec
push
ds
jg
mov
fs
add
jecxz
push
mov
sub
push
les
push
mov
js
(bad)
int3
sub
inc
adc
pop
mov
jmp
push
add
sub
sbb
clc
call
add
(bad)
push
mov
jecxz
in
cmp
inc
(bad)
or
ret
and
ficomp
xor
xchg
mov
lods
xchg
pop
imul
adc
lea
jmp
lahf
stos
push
fadd
in
leave
push
jge
jno
pop
sti
icebp
dec
test
pop
pop
push
cmc
or
ror
xlat
and
push
sar
out
push
jg
cmp
cmp
ficomp
push
stos
cmp
leave
adc
or
icebp
cmp
mov
stc
enter
sub
mov
sahf
cmp
xor
push
jle
inc
pop
mov
xchg
ret
pop
push
daa
inc
mov
sub
jmp
retf
xchg
mov
jecxz
in
mov
movs
cmp
mul
sahf
mov
sub
nop
icebp
adc
addr16
mov
mov
fistp
cmp
ret
daa
mov
pop
and
push
mov
sub
das
sbb
scas
sub
(bad)
add
dec
fcomp
int
or
sbb
addr16
dec
daa
loopne
(bad)
sbb
aaa
jmp
pop
call
cmp
xchg
or
sbb
loope
mov
jns
push
dec
mov
in
and
int
add
mov
out
inc
(bad)
in
hlt
fdiv
clc
add
dec
mov
sbb
call
mov
ja
mov
push
in
js
sbb
mul
sbb
mov
push
cmp
pop
dec
or
rcr
loopne
inc
inc
pop
movs
adc
dec
cmp
adc
sub
dec
int3
mov
arpl
movs
call
mov
in
stc
ret
in
mov
mov
in
push
paddusb
sub
xor
push
in
sub
inc
xchg
cmp
mov
fidivr
sahf
gs
jno
xor
shr
aad
or
pop
inc
xchg
std
and
mov
stc
push
into
pop
push
lods
jns
or
xor
mov
shr
in
ins
(bad)
das
inc
mov
ret
jp
shl
pop
sub
cli
mov
test
sahf
mov
mov
sbb
sub
push
mov
int
enter
mul
fwait
test
xor
sub
in
enter
stos
mov
out
cmc
cmps
push
je
or
sbb
jns
movs
add
arpl
call
scas
enter
add
sbb
call
jle
jmp
(bad)
(bad)
pushf
sub
jne
mov
dec
cmp
adc
les
icebp
mov
fsubr
jle
js
lds
ret
pushaw
repz
sub
sbb
pop
mov
mov
push
mov
xchg
outs
pop
mov
bound
dec
dec
jmp
fstp
xchg
cmp
sub
repnz
adc
pop
test
retf
or
push
ds
push
fs
nop
pop
sub
in
jg
cmc
mov
pop
adc
ins
dec
sti
dec
arpl
outs
jo
adc
int3
sub
dec
pop
std
stc
pop
aad
mov
xor
add
stos
and
add
add
pop
mov
lea
xchg
add
pop
sub
retf
add
rcl
inc
lea
(bad)
pusha
stc
push
cmps
xor
sub
je
sub
jp
xor
(bad)
rcr
xchg
mov
jb
inc
push
add
fidivr
ins
xchg
ja
pop
inc
out
pop
gs
xchg
gs
xor
push
pop
inc
mov
xor
sar
sbb
test
mov
iret
jle
test
mov
cwde
mov
pop
movs
das
jmp
int
bound
adc
fdiv
je
jns
xchg
and
inc
ins
pop
sbb
jae
add
jg
stos
loop
mov
sub
mov
and
mov
das
div
pop
loop
pop
inc
pop
jae
mov
pop
mov
je
lods
dec
adc
jl
mov
fimul
fstp
ret
ror
inc
out
mov
adc
vpcomq
dec
pop
mov
mov
shl
mov
hlt
dec
nop
pushf
and
sub
dec
jge
mov
dec
test
dec
cmp
out
sbb
lods
loope
and
push
push
xchg
int3
imul
mov
or
cmp
fidiv
sti
dec
in
mov
jo
fmul
test
xor
iret
dec
fxch
sub
stc
inc
xor
pop
fst
stos
or
xor
add
pusha
repz
push
mov
in
neg
fbld
push
sar
not
mov
call
push
test
fcmovbe
sahf
and
and
inc
sbb
mov
jae
push
in
mov
pop
jle
inc
xchg
mul
outs
adc
adc
push
lea
or
retf
icebp
cld
cdq
push
sbb
or
jge
adc
fs
mov
mov
js
cmp
cmps
mov
ins
mov
lods
jmp
cmp
jmp
or
in
lea
xchg
mov
aad
cwde
js
push
mov
jg
cmp
xchg
pop
push
dec
xor
sub
pop
int
ret
cmp
jmp
inc
jo
dec
inc
add
frstor
sbb
push
ins
fiadd
jg
ds
dec
pop
inc
pop
push
out
dec
lods
push
in
adc
aad
xor
pop
pop
outs
jb
nop
inc
sub
cmp
cmc
fmul
ret
xchg
mov
out
je
fsubr
add
test
push
lods
mov
pushf
dec
sbb
or
inc
jg
push
add
loope
xchg
mov
xchg
jns
jp
sub
xchg
or
ins
push
push
add
jae
cwde
mov
xchg
stc
scas
xor
dec
mov
ds
stos
arpl
cdq
inc
test
sub
xchg
mov
mov
mov
dec
(bad)
in
jbe
mov
fisttp
and
or
mov
pop
sti
loope
stos
es
pop
add
xor
dec
jo
sub
cmp
or
xchg
xlat
int
out
push
(bad)
jne
jb
xchg
fisub
inc
jge
shl
std
in
pop
mov
pop
or
adc
ss
ins
mov
(bad)
jne
lahf
xchg
push
xchg
adc
and
xor
pop
inc
out
inc
shl
pop
out
sub
aas
mov
xor
dec
cs
jmp
inc
xchg
dec
(bad)
fdivp
ja
xchg
popf
or
or
xor
sbb
pop
imul
pop
jbe
adc
jne
ins
cld
push
aad
add
add
adc
neg
outs
lahf
jg
or
cmp
ss
jo
test
xchg
outs
inc
retf
std
push
inc
inc
test
inc
shr
or
lods
pushf
sbb
jbe
dec
sbb
adc
stos
fcomp
push
fisttp
pop
and
and
(bad)
fs
(bad)
in
sub
retf
lods
shl
and
inc
dec
sub
mov
or
push
add
iret
popa
ja
and
xchg
cmp
out
std
sub
(bad)
in
sbb
popa
adc
mov
imul
mov
fimul
add
xchg
sub
dec
xor
sbb
sbb
cmps
xchg
rcl
call
(bad)
scas
push
scas
pop
daa
dec
fsubrp
popf
push
jbe
out
sub
pop
cmp
push
cmp
dec
outs
inc
jmp
ficomp
xor
(bad)
xlat
mov
fneni(8087
leave
mov
(bad)
idiv
add
mov
xor
pusha
adc
jbe
pop
xchg
dec
aas
or
xor
xchg
add
push
dec
scas
dec
outs
sahf
mov
mov
inc
xchg
inc
jle
ins
cld
(bad)
mov
fneni(8087
cmps
mov
fwait
jmp
or
adc
bound
add
dec
out
sbb
outs
(bad)
mov
jo
add
xchg
cmp
leave
ja
vsubss
inc
sbb
xor
xchg
outs
sahf
push
pop
mov
mov
mov
adc
inc
daa
dec
and
jae
out
imul
ficom
sbb
fwait
sti
ins
mov
clc
push
jno
iret
shr
arpl
adc
je
les
fdivr
pop
xor
clc
sbb
dec
sub
div
mov
fwait
nop/reserved
jge
add
das
mov
scas
mov
fistp
cmp
int
mov
add
int
or
xchg
dec
ret
jmp
jecxz
jg
inc
dec
push
lods
shl
stos
cwde
test
pop
je
les
bound
sbb
outs
xor
out
or
repnz
(bad)
out
and
lea
call
ins
aad
push
in
cmp
pusha
loop
call
push
lea
add
stos
mov
lea
retf
cmp
outs
push
bound
mov
jb
pop
dec
mov
addr16
test
xchg
sub
mov
loop
jno
jbe
push
cwde
pop
mov
daa
sbb
outs
mov
imul
test
jo
push
cdq
jne
cmp
cwde
lds
cmp
je
lods
add
jecxz
test
std
push
push
fild
fld
jo
sahf
sahf
ins
nop
jo
mov
ins
mov
(bad)
jle
or
inc
cmc
mov
xlat
lds
das
(bad)
movs
mov
test
mov
inc
not
push
xchg
xchg
(bad)
fild
stos
jns
mov
inc
cdq
inc
pusha
repnz
inc
jle
or
pop
dec
in
daa
sbb
iret
cmp
aam
pop
xor
xchg
mov
cmp
mov
jne
sbb
fmul
in
add
cmp
pushf
(bad)
out
in
nop
leave
sbb
cmp
pop
data16
jne
add
(bad)
fstp
fcomp
jbe
mov
cmp
pop
add
aam
jbe
(bad)
mov
cld
xchg
rcl
ret
or
dec
sti
add
scas
cli
jno
lods
test
pop
popa
push
loope
add
and
std
adc
adc
inc
stos
scas
mov
pop
mov
inc
xor
inc
jbe
jl
mov
mov
jmp
stos
fyl2xp1
xchg
sbb
jbe
ds
xor
or
xor
(bad)
popa
pop
jge
mov
retf
cmp
icebp
inc
or
mov
xchg
aas
rcr
out
xchg
(bad)
outs
cmp
inc
test
pop
movs
pop
sub
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
imul
(bad)
fdiv
adc
in
jle
dec
sar
jae
in
pushf
add
pop
jge
push
test
pop
jo
ror
jp
xlat
jmp
fstp
div
shl
(bad)
jecxz
cmp
std
loopne
in
hlt
imul
cmps
push
daa
into
cs
ins
movs
xor
xor
int3
jmp
imul
imul
les
mov
dec
xchg
hlt
inc
out
mov
sbb
mov
jmp
xchg
and
xchg
mov
xor
bnd
dec
sub
sbb
fwait
call
xor
scas
bound
ins
fld
dec
push
mov
xlat
shl
data16
inc
add
std
mov
mov
mov
jl
ret
jle
mov
mov
mov
int3
dec
(bad)
and
lods
push
jecxz
add
leave
xor
jge
and
adc
jmp
push
jl
dec
push
inc
and
call
adc
je
adc
xchg
or
retf
aam
add
pushf
sbb
call
call
push
sahf
shl
lea
fwait
scas
sbb
lods
lea
iret
aas
lock
add
jmp
mov
mov
pop
lods
push
les
bound
ins
rcl
xchg
addr16
loopne
scas
mov
mov
ins
call
call
push
stc
and
push
xchg
in
scas
jmp
pop
pop
repnz
cwde
adc
jnp
out
rcr
in
nop
sbb
imul
das
fsubr
test
scas
xchg
push
pop
xor
cmps
fidivr
pop
mov
xchg
(bad)
dec
jno
popf
cdq
rcr
(bad)
mov
scas
mov
std
cld
xchg
cs
or
add
in
stos
sbb
cmp
dec
push
jg
(bad)
cs
icebp
or
cmp
push
sbb
scas
ffreep
movs
(bad)
adc
dec
daa
out
mov
push
mov
cmp
push
pop
lock
push
xor
data16
imul
stos
pop
(bad)
sbb
fist
mov
jl
sub
add
push
cmp
call
addr16
int3
jno
pop
push
adc
out
pushf
mov
xchg
aas
jne
mov
movs
les
je
hlt
jno
jp
outs
lds
pop
xchg
add
dec
fstp
jnp
cmc
cmp
data16
cmps
sar
xchg
mov
push
push
cmps
sbb
int
push
jp
jle
jmp
pop
addr16
sub
adc
repz
jb
jp
into
jns
stos
stc
xor
inc
add
sahf
sub
cmps
retf
neg
outs
inc
jl
cmp
fadd
ins
cmp
jecxz
add
fstp
xchg
add
lahf
push
sahf
push
mov
cmp
mov
loope
pop
mov
lods
(bad)
xor
jmp
jns
out
jbe
pusha
add
inc
push
adc
into
pop
pop
inc
adc
je
stc
cmp
pop
cmps
mov
lods
mov
ins
mov
je
ds
(bad)
movsx
pusha
or
addr16
pop
nop
mov
mov
sti
imul
sbb
fild
xchg
stos
das
jl
retf
mov
aas
dec
jmp
pop
sbb
add
call
add
and
adc
out
xchg
jne
sahf
ret
sar
push
movaps
sbb
hlt
std
push
pop
xchg
push
jmp
adc
call
jge
sub
in
arpl
or
ss
dec
fsub
push
adc
push
test
(bad)
ins
jmp
(bad)
repnz
inc
mov
stc
mov
sub
add
push
icebp
fldcw
bound
add
(bad)
adc
stc
je
or
(bad)
sub
add
test
es
xor
mov
dec
pop
mov
daa
jmp
mov
loop
jne
sub
out
lods
adc
adc
std
adc
aas
call
or
loope
jl
out
(bad)
xchg
sbb
mov
aas
sub
inc
xor
pop
outs
xchg
clc
scas
cld
mov
je
out
(bad)
call
fist
or
jmp
inc
aad
hlt
test
mov
xor
call
ror
dec
je
mov
adc
les
push
imul
pop
scas
scas
sar
test
outs
lock
push
ins
div
dec
aaa
(bad)
call
sbb
pusha
sub
or
imul
mov
jge
sub
stc
mov
ret
pop
nop
shl
fnsave
dec
xchg
imul
and
and
push
or
fild
lds
(bad)
mov
aaa
fs
push
jno
add
or
movs
cmp
lds
int
popa
stos
(bad)
jnp
hlt
stos
push
inc
dec
push
push
jbe
pop
mov
dec
jo
mov
sbb
imul
in
fld
push
aam
ret
push
cmps
(bad)
lods
mov
iret
adc
mov
push
fs
add
mov
xor
(bad)
scas
scas
xor
dec
je
test
mov
jmp
xchg
cmp
aad
pop
fild
test
sub
test
and
sub
mov
stos
int3
repnz
fld
xchg
outs
into
in
xor
or
mov
dec
nop
and
sub
add
test
sbb
sub
mov
cld
xchg
mov
jmp
aam
dec
dec
or
pop
lods
es
fldcw
push
mov
dec
loopne
stos
(bad)
movs
fisubr
jmp
push
fld
lea
mov
dec
mov
jl
int
repnz
adc
(bad)
adc
cmp
test
aam
inc
mov
pop
adc
xchg
or
xchg
aad
shr
dec
add
jne
mov
pusha
inc
adc
mov
cs
pop
push
xchg
or
cld
loop
jle
jae
cdq
gs
(bad)
fld
mov
jno
push
mov
fwait
mov
push
retf
test
stos
dec
and
mov
test
bound
xor
xor
push
out
mov
sbb
or
add
or
xor
pop
les
xchg
call
mov
push
repz
jne
call
sub
sub
xor
repnz
ss
or
sub
les
pusha
xchg
call
ja
jnp
jns
outs
cmp
and
jg
cmp
int
inc
adc
and
cs
les
mov
pop
and
jnp
push
mov
stos
dec
clc
push
shl
mov
jnp
bound
hlt
or
inc
stos
xchg
out
push
mov
test
fistp
jae
ss
xor
xchg
push
ins
mov
repz
stc
test
jbe
sar
inc
push
xchg
(bad)
std
sub
mov
cmp
adc
push
xor
and
cmp
in
ret
cmp
ror
and
icebp
pop
hlt
in
jg
call
mov
shr
enter
dec
imul
xlat
xchg
mov
into
jg
or
pop
adc
mov
(bad)
out
push
pop
push
jmp
xchg
shr
add
sub
std
adc
dec
push
loop
inc
fsubr
aam
mov
or
xchg
out
and
aas
add
adc
lock
sbb
cmp
ja
dec
push
mov
dec
xchg
lea
int
test
nop
test
sub
xchg
les
call
cmps
jmp
(bad)
aam
dec
push
push
fwait
ret
mov
repz
add
loopne
ror
jae
lods
cmp
retf
xchg
out
mov
cwde
iret
dec
add
mov
data16
jnp
push
in
ds
xlat
inc
push
test
pop
add
fld
cmps
push
test
xor
int3
leave
push
mov
add
mov
xchg
sti
sub
and
into
sti
unpcklps
push
fwait
lds
xchg
ins
fimul
fdivr
into
cmps
mov
jo
stos
cmp
test
fs
not
mov
popf
push
imul
enter
inc
pop
jns
gs
jle
fistp
sbb
mov
loopne
addr16
mov
arpl
sbb
fcomp
in
push
pushf
out
xor
jl
das
jmp
adc
icebp
add
rol
ficomp
jo
jns
xchg
mov
in
jbe
aaa
loop
xchg
xchg
mov
sbb
lods
movs
ror
out
add
fsubp
(bad)
add
xor
stos
add
out
cli
(bad)
adc
xor
sbb
jne
repz
(bad)
sbb
scas
popa
add
loopne
sbb
jp
push
loope
adc
push
inc
mov
cld
je
jmp
dec
scas
adc
arpl
add
adc
stc
and
lods
hlt
sbb
fidiv
and
cs
pop
dec
ret
dec
mov
movs
lods
pop
test
or
push
mov
dec
(bad)
mov
jb
xor
mov
mov
cdq
enter
(bad)
es
inc
dec
push
lahf
ror
out
ss
sub
(bad)
adc
test
(bad)
cmp
fcmovb
sbb
out
in
ret
add
(bad)
psubusw
mov
ficom
je
es
and
(bad)
sub
cli
or
cld
xchg
and
xchg
xchg
dec
test
xchg
lods
movs
mov
mov
mov
dec
push
jo
jmp
test
add
jecxz
xor
leave
xchg
stos
scas
hlt
aaa
in
push
lods
sbb
or
add
xchg
retf
outs
mov
loopne
outs
ror
xchg
orps
loop
cmp
jp
dec
jnp
hlt
mov
faddp
cmps
add
ins
xor
outs
rcl
aaa
xchg
fist
jmp
and
inc
lods
cmps
call
xchg
add
inc
movs
xchg
call
inc
sub
mov
inc
xor
dec
jb
and
or
popa
xor
fimul
in
jl
jnp
pop
xchg
pop
nop
cmps
cmp
push
sbb
and
aas
and
hlt
push
add
mov
leave
and
dec
pop
mov
push
jno
sub
adc
xchg
das
inc
cld
int
pusha
scas
mov
lods
jge
adc
cmc
mov
stos
btc
xchg
xchg
fwait
scas
push
lea
mov
push
sbb
mov
adc
test
div
das
or
push
xchg
xchg
mov
xor
mov
inc
hlt
clc
pop
jno
pop
mov
retf
jne
dec
cmps
mov
rcl
lds
loopne
call
data16
dec
pop
mov
rep
ins
inc
out
xchg
ds
ds
cmp
jno
clc
ins
push
loope
sbb
dec
adc
mov
inc
int3
xchg
and
pop
int
inc
sbb
call
cmp
xchg
sbb
not
(bad)
or
lea
pusha
adc
cmovae
fwait
fwait
mov
js
fild
add
nop
fimul
mov
int3
lea
xor
push
lds
sbb
movs
repz
int
inc
push
pop
adc
ret
sar
adc
pop
add
mov
fistp
outs
push
or
repz
fidivr
jo
sbb
rol
xchg
mov
ret
pop
dec
in
mov
int3
fldcw
(bad)
(bad)
aad
add
xchg
les
jnp
or
xor
in
sub
repnz
mov
adc
mov
repz
sahf
xor
pop
cmp
jecxz
xchg
or
sbb
nop
retf
pop
mov
pop
retf
xchg
call
daa
mov
pusha
out
jo
xchg
xor
(bad)
jg
push
out
aaa
scas
mov
xchg
sub
jg
pop
pusha
jnp
push
not
std
iret
int3
pop
test
push
inc
xlat
stos
mov
cmp
push
and
sar
stos
out
imul
outs
rcr
pop
mov
xchg
loope
out
jl
scas
pop
cmc
cwde
daa
push
ja
loop
adc
fwait
in
jno
stc
pop
jl
or
and
or
test
add
(bad)
cwde
sbb
cs
mov
inc
je
(bad)
imul
jecxz
jb
xchg
pop
movs
loop
inc
xlat
cmp
adc
mov
sub
jmp
mov
rcr
addr16
int
mov
inc
jmp
and
xchg
popa
daa
dec
sub
mov
add
jne
adc
sub
inc
test
sbb
xor
xor
or
pushf
(bad)
in
lods
xchg
or
rol
lahf
(bad)
loopne
lods
mov
(bad)
jno
pop
xchg
test
cmc
mov
add
aam
js
pushf
cmp
loop
and
xchg
dec
popf
loope
in
ffree
cmps
sub
rol
idiv
pop
popf
sub
xchg
ss
out
xor
bound
jns
retf
js
xchg
mov
div
(bad)
sub
and
fist
cwde
(bad)
sbb
sbb
add
push
scas
cmp
call
pop
adc
popa
test
push
mov
push
sub
adc
jo
outs
add
jno
sub
cmp
jo
xchg
xor
rcr
xor
mov
push
and
jl
mov
fadd
cmps
loope
and
sahf
mov
dec
xor
sub
inc
add
jmp
ins
shl
jge
sub
mov
jl
nop
or
cmc
out
aad
mov
adc
dec
neg
mov
mov
imul
loop
int3
cmps
int3
inc
xadd
sbb
jg
iret
inc
fild
pop
push
xchg
and
pusha
in
and
cmp
mov
add
jnp
adc
lahf
jns
ret
mov
push
xchg
data16
inc
or
rcr
sbb
jae
fld
or
cdq
hlt
xlat
sbb
jbe
(bad)
fwait
xlat
test
sub
mov
in
mov
loope
lea
fwait
call
out
jo
inc
dec
pop
outs
aam
inc
or
jbe
ror
pop
xlat
pop
mov
dec
dec
fs
jecxz
push
xlat
adc
pushf
fstp
xchg
out
pop
sub
cmp
sar
fmul
aaa
xchg
push
ror
and
inc
jb
push
jle
or
push
and
idiv
push
cmc
arpl
or
push
pop
dec
in
inc
xor
mov
leave
pop
cld
pop
int
xor
mov
es
pop
iret
pop
lahf
fiadd
lds
pop
into
mov
ins
inc
push
scas
xlat
sbb
cmp
or
push
loope
jg
pop
das
adc
xor
xor
loopne
jo
jo
xchg
lock
xor
cmp
jle
xor
xor
cmc
inc
xchg
adc
mov
xchg
bound
idiv
mov
xor
(bad)
pop
or
ror
add
test
les
lea
pusha
not
bound
sub
mov
call
sbb
xchg
push
(bad)
lods
mov
ficomp
add
or
repnz
(bad)
dec
int
jne
inc
lds
lods
pop
sbb
and
and
sbb
inc
mov
pop
or
jo
xchg
mov
retf
in
and
push
cmp
pop
aas
mov
out
retf
outs
daa
lea
push
out
pop
movs
mov
ret
fdivr
mov
push
add
test
mov
cmp
leave
out
sub
xlat
ret
inc
or
mov
fcmovbe
mov
repnz
adc
dec
and
push
push
fst
pop
pop
adc
test
mov
or
or
fsub
xchg
add
nop
and
sub
jbe
icebp
cld
pop
xchg
mov
pop
pop
sahf
cdq
pop
loope
fldenv
pop
mov
dec
lds
je
(bad)
call
inc
pop
mov
gs
xor
inc
scas
inc
pop
shl
rol
lods
scas
(bad)
stos
in
lock
cmp
inc
jne
push
push
outs
call
xchg
leave
jns
cmp
pop
fisub
adc
mov
scas
shl
fmulp
sbb
scas
out
jg
lds
add
ror
fs
leave
(bad)
ja
sub
and
inc
jbe
dec
call
mov
jae
xor
jnp
inc
dec
dec
(bad)
retf
cmp
cld
sub
hlt
out
repz
add
jl
pop
lds
add
jb
loope
outs
sbb
nop
sbb
sub
daa
jl
call
outs
loope
pop
pop
les
push
jnp
out
inc
dec
lds
inc
retf
(bad)
ror
paddw
in
in
mov
and
push
mov
mov
push
lods
add
bound
xchg
ja
mov
mov
push
dec
push
mov
pop
loopne
cmp
xor
sub
and
dec
mov
xchg
scas
sbb
das
jns
fist
in
idiv
popf
adc
xchg
enter
fwait
mov
push
mov
push
jg
jns
push
std
inc
jge
lea
and
sbb
push
int
mov
cmp
cmp
ins
ins
neg
mov
sub
int
out
cld
stos
adc
cmp
mov
ror
loopne
jae
mov
jl
xor
pop
xchg
sbb
mov
inc
cmp
jmp
jg
and
push
enter
xor
(bad)
jmp
sbb
(bad)
lods
jbe
and
adc
aad
into
test
scas
adc
test
sub
aad
sbb
or
ret
add
jb
cli
das
jg
add
or
mov
rol
std
inc
inc
aas
adc
stos
mov
clc
add
inc
out
leave
adc
loop
mov
cs
cld
or
repz
mov
je
jecxz
out
pusha
repnz
shl
xchg
scas
push
push
imul
test
aaa
cmps
add
stos
scas
dec
pop
mov
out
dec
popa
icebp
add
or
rol
scas
ins
and
sbb
(bad)
(bad)
mov
dec
push
jbe
adc
into
push
dec
push
cwde
gs
out
ret
sub
jmp
sbb
loop
mov
sbb
sbb
std
stos
mov
xlat
mov
fsubr
sahf
in
mov
dec
test
repnz
sbb
fs
test
ficomp
jg
into
or
cmp
pop
fst
mov
or
cmps
stos
jecxz
in
push
imul
ficomp
mov
or
jg
(bad)
jg
cmp
pop
lds
jge
aad
xchg
dec
mov
fwait
mov
mov
stos
xor
lods
jns
(bad)
in
popa
or
mov
jbe
sub
fcmovne
and
aad
sbb
and
adc
mov
cmp
out
rol
nop
test
sub
mov
cmps
pushf
neg
call
or
inc
or
leave
mov
or
lahf
xor
mov
mov
ret
cmps
sub
sbb
mov
push
and
add
sbb
xchg
outs
lea
adc
sub
scas
popa
fdiv
stos
adc
ds
push
mov
mov
adc
repnz
fdivr
jne
sbb
(bad)
mov
push
test
je
out
fisub
cmps
pop
test
xchg
fwait
dec
xor
xchg
inc
adc
mov
movs
pop
inc
xchg
xchg
pop
pop
movs
inc
aaa
pop
cmc
out
daa
jmp
inc
add
or
retf
push
and
in
outs
push
pop
mov
jnp
in
call
push
jae
dec
sbb
nop
pusha
xor
mov
ins
adc
imul
clc
fld
lods
cmp
sahf
jns
hlt
mov
sar
pop
sahf
pusha
adc
add
(bad)
(bad)
not
pushf
push
or
addr16
mov
pop
test
sbb
lods
jmp
jae
add
ret
push
int3
outs
dec
mov
dec
add
inc
cld
or
lahf
sbb
fnstsw
loopne
sub
out
fdivr
pop
les
std
inc
out
inc
or
fwait
ret
xchg
jp
xchg
pop
fmul
mov
sub
mov
inc
jle
xor
jbe
or
inc
verw
sbb
pushf
(bad)
fdiv
shl
xor
push
cmp
jne
pop
scas
sbb
mov
adc
ins
mul
imul
sbb
cmp
push
inc
mov
lods
lahf
and
cmp
in
not
dec
cs
mov
movs
shl
push
clc
loopne
loopne
pop
jns
repnz
sub
or
rcr
xchg
(bad)
cmp
inc
add
and
jne
test
cmp
dec
in
xor
pop
dec
dec
repz
daa
(bad)
out
cmp
enter
sbb
xchg
dec
sub
adc
mov
int3
fst
push
pop
js
mov
hlt
in
shr
nop
and
sar
dec
and
sbb
test
lea
pop
(bad)
xor
movs
xor
xor
mov
xlat
dec
mov
adc
repz
mov
mov
rcl
cmp
ficomp
aas
retf
scas
iret
rol
daa
xor
push
out
mov
mov
ficom
pop
test
(bad)
cld
nop
inc
gs
retf
mov
adc
jo
in
pop
sub
cmps
sbb
pop
push
mov
cmp
add
test
pop
test
(bad)
cmp
lock
push
inc
sbb
mov
mov
frstor
pop
and
mov
in
out
jbe
jns
adc
loopne
std
pop
sub
sub
inc
and
jbe
xlat
ds
mov
pop
in
jp
pop
push
pop
call
xor
loopne
xchg
xchg
pop
dec
dec
xchg
pop
mov
into
push
pushf
movs
pusha
push
or
std
mov
push
pop
jns
mov
les
ret
push
test
enter
pop
jge
inc
inc
inc
outs
and
push
push
dec
ret
jl
fs
fisub
push
cdq
inc
add
push
jmp
dec
pusha
jmp
pushf
jns
cmp
add
fwait
sub
jmp
inc
mov
mov
cmps
fbld
xor
div
rcr
jmp
aad
and
adc
adc
xchg
repz
mov
jae
jmp
sub
push
ret
xchg
pop
jmp
inc
test
jecxz
mov
xchg
popf
sub
add
push
mov
das
jne
(bad)
(bad)
sbb
daa
dec
jle
mov
into
sbb
cli
dec
loop
mov
paddsw
pushf
rol
js
push
ins
arpl
xchg
ins
stos
nop
test
daa
xor
pop
stc
adc
mov
cmp
add
pop
ins
mov
fucomp
sbb
cs
pop
sti
adc
or
ins
je
or
mov
inc
or
sbb
sbb
inc
pop
pop
fsub
cli
hlt
jl
mov
imul
jae
(bad)
push
mov
xor
rol
and
in
jecxz
adc
or
inc
cmp
and
repnz
inc
xchg
add
cmps
test
in
mov
adc
push
ror
imul
cmp
or
sub
ror
adc
data16
(bad)
and
(bad)
or
and
jmp
xchg
mov
jecxz
es
fs
repz
fisttp
repz
test
mov
adc
xor
icebp
aaa
rcr
add
les
idiv
mov
mov
xchg
rep
or
jbe
and
pusha
inc
lock
xor
xor
in
fdivr
(bad)
mov
jg
outs
scas
aas
mov
or
cmp
cwde
std
int3
xchg
inc
cwde
push
jbe
and
mov
retf
add
call
test
out
xchg
icebp
scas
in
jae
sub
pop
add
inc
out
mul
cmp
xor
push
pop
shl
les
xor
jg
xor
inc
fld
ret
pop
sbb
xchg
pop
jl
xchg
and
out
add
mov
sub
neg
mov
pop
and
adc
cmc
mov
test
pop
popa
and
sbb
or
ror
shl
pop
test
or
shl
inc
cmp
cmps
das
and
out
or
pop
add
push
inc
sub
cmp
inc
mov
jmp
jns
jns
mov
inc
arpl
(bad)
leave
mov
mov
ror
xchg
jno
fnsave
call
sbb
cmp
mov
mov
jmp
or
pusha
adc
cmps
push
out
and
add
(bad)
jecxz
pop
dec
or
and
imul
ja
call
xchg
and
jnp
imul
stos
or
adc
jmp
fild
adc
xchg
and
push
xor
jg
jo
add
jo
cmp
mov
pop
cdq
xchg
sahf
icebp
movs
dec
imul
push
(bad)
cwde
icebp
mov
outs
test
jmp
jae
(bad)
push
and
scas
fsub
or
xor
xor
aas
or
mov
xor
xchg
ret
mov
lock
test
xchg
sub
xor
push
outs
retf
ds
lock
pop
cmps
aas
mov
ss
test
or
adc
loopne
idiv
mov
lods
pop
mov
inc
xchg
mov
lea
mov
ja
inc
adc
clc
lods
movs
outs
(bad)
pop
call
mov
and
scas
push
pop
aad
loop
ror
push
mov
pushf
push
test
and
imul
into
sub
pushf
mov
and
push
adc
xchg
jns
lods
ja
mov
cld
jb
or
pushf
loopne
lock
jne
jge
adc
mov
int3
aam
mov
mov
mov
outs
out
mov
jns
or
icebp
and
add
mov
mov
xor
adc
xchg
arpl
in
xor
jl
dec
dec
cmp
arpl
inc
xchg
lock
fcom
outs
cmp
test
xor
ins
xor
(bad)
std
and
out
loopne
int
mov
adc
xchg
adc
popa
dec
jnp
push
dec
jo
jo
std
ins
fild
cmp
pop
sub
xchg
xor
ror
inc
aas
repnz
cmp
cmp
shl
test
mov
imul
adc
jge
and
xchg
cdq
out
jbe
push
push
cli
daa
aaa
test
sti
mov
jbe
mov
dec
outs
add
pop
cmp
adc
in
xor
or
(bad)
push
or
ins
out
cmps
retf
pop
js
in
dec
iret
sub
mov
cdq
xchg
sub
inc
repz
popf
std
xchg
mul
popa
pushf
jecxz
add
loope
adc
mov
fsubr
sahf
daa
jmp
imul
jecxz
cmp
leave
mov
mov
fwait
xor
inc
dec
call
add
sbb
or
mov
sbb
ss
pop
bound
jae
popa
and
inc
enter
not
in
outs
in
add
ss
je
cwde
(bad)
mov
test
aas
mov
test
test
movs
and
push
int
into
stos
cmp
pop
xchg
cmc
xchg
movs
cmp
(bad)
adc
fisttp
xchg
or
pop
jne
ss
and
stos
scas
iret
mov
jno
scas
xchg
adc
pushf
sub
rcl
mov
sbb
fs
jns
pop
sbb
xor
es
call
sub
ss
push
cmp
jae
retf
inc
cmps
xchg
leave
and
mov
pop
xchg
jns
push
hlt
dec
fadd
mov
jge
mov
mov
shl
push
mov
cwde
add
jge
mov
fnstenv
fisttp
xor
mov
mov
cmp
push
jb
xor
cmp
shl
cmps
out
out
ins
std
cld
sub
cs
cmps
jge
stc
test
fwait
mov
hlt
rcl
out
dec
sub
sahf
stos
pop
cmp
enter
sbb
fs
cs
cmc
aam
ja
xor
sbb
add
pop
adc
int
mov
repnz
es
and
adc
pop
push
mov
lahf
push
into
std
dec
arpl
jp
add
xor
mov
jle
or
cmp
mov
ja
stos
test
popa
sub
ds
movs
repnz
add
mov
xchg
sub
jge
fwait
dec
pop
(bad)
dec
gs
add
pop
enter
mov
movs
dec
inc
loope
dec
jmp
adc
push
or
cmp
shr
push
push
xchg
(bad)
push
add
lds
sbb
fild
in
out
test
aam
je
(bad)
repnz
aad
movs
push
out
call
adc
retf
imul
mov
inc
imul
pop
int
test
xchg
(bad)
test
aam
cld
leave
push
ss
dec
loop
shl
xor
nop
lods
mov
xchg
clc
loopne
int3
add
add
inc
mov
jmp
not
ds
xchg
cmp
pop
pop
sub
cmc
dec
cmp
aaa
popf
sub
mov
imul
adc
mov
push
sub
mov
and
add
out
push
pushf
jb
daa
es
pop
add
ins
ja
js
pop
jne
adc
fdiv
or
les
adc
imul
adc
sbb
jmp
xchg
leave
lahf
popa
adc
push
jle
push
in
mov
and
mov
xchg
movs
into
inc
fidivr
gs
mov
xchg
mov
fcmove
repz
int
xchg
pop
cld
retf
fidivr
dec
mov
mov
add
outs
xchg
mov
sbb
rol
mov
sbb
jae
mov
out
sub
pusha
mov
cmp
pop
sahf
ret
xor
mov
dec
mov
test
pop
aam
jmp
pop
sbb
or
daa
mov
das
jmp
(bad)
fcmovnu
fs
cmp
cwde
and
int3
repz
mov
fisubr
in
lahf
sbb
or
pop
cdq
in
out
repnz
bound
push
movs
dec
cmp
mov
sub
xchg
mov
xchg
xchg
add
or
jge
inc
lods
into
pop
sub
fs
fwait
pop
sub
test
mov
mov
in
loop
sbb
xchg
dec
cmp
outs
into
mov
(bad)
push
xchg
ficomp
shr
cmp
icebp
std
pop
inc
sub
and
mov
imul
int3
mov
add
cmp
or
and
adc
(bad)
rcr
jg
jo
iret
pop
mov
ds
and
in
stc
jl
dec
jno
fst
in
push
aas
ret
in
int3
test
jnp
mov
xor
jmp
std
fwait
lock
ins
jb
fsub
and
enter
fist
leave
inc
daa
(bad)
inc
jl
dec
jo
xor
cld
movs
push
and
in
retf
js
jp
sar
jo
pop
xor
(bad)
call
xchg
cld
idiv
out
xchg
pop
xchg
pmaxub
test
inc
jb
cmp
cmp
mov
(bad)
xchg
jbe
pop
cli
fisub
jnp
cdq
fs
(bad)
gs
mov
ds
push
mov
mov
cmc
cld
sar
or
out
xchg
int3
mov
sub
sbb
adc
cs
or
add
xchg
mov
xchg
(bad)
jmp
push
retf
add
or
fsub
xor
mov
inc
pop
es
inc
pop
(bad)
daa
pop
cmp
jecxz
xchg
sbb
mov
ds
cld
jp
add
ret
rol
jb
test
adc
fneni(8087
xlat
fwait
pusha
jg
adc
push
fisttp
and
xlat
enter
mov
hlt
aas
fdiv
ins
es
jne
outs
and
fwait
adc
jg
push
cmps
mov
pop
leave
cmp
xor
icebp
jge
dec
imul
pop
mov
cmp
xor
push
xchg
adc
mov
ficomp
pop
jae
dec
sbb
(bad)
outs
sbb
mov
out
mov
xchg
jo
cmps
mov
bound
dec
cwde
test
(bad)
lods
call
sahf
out
mov
(bad)
add
shl
lock
es
add
and
or
mov
aam
jne
cli
add
das
dec
in
jg
cld
and
xchg
xor
rcl
push
data16
(bad)
sti
push
push
(bad)
xlat
aad
inc
leave
movs
cdq
push
cmps
and
rol
cld
add
mov
lods
imul
dec
cmps
jno
stc
xor
mov
add
loop
clc
inc
fcom
jle
out
or
jmp
(bad)
adc
aam
ins
cli
fst
mov
cmovo
das
jmp
inc
mov
outs
aam
shl
sbb
js
dec
add
jl
retf
mov
test
shl
dec
in
xchg
jb
inc
(bad)
fcmovbe
stc
sub
sub
out
das
sub
dec
pop
mov
cmp
fs
jg
inc
idiv
loope
jmp
push
push
dec
(bad)
fcomp
(bad)
cmc
ins
stc
cmps
push
xor
push
mov
add
and
pop
lea
test
ins
sbb
out
stos
add
jmp
cli
mov
jg
sbb
iret
sub
xlat
int3
das
aas
lds
sub
adc
inc
and
xor
(bad)
sar
loope
dec
imul
jno
mov
jl
or
rcl
add
adc
inc
pop
dec
repnz
frstor
neg
add
(bad)
(bad)
jge
pop
sbb
jmp
push
shr
add
or
lock
je
repz
pop
cmps
push
mov
loope
daa
xchg
jg
jg
nop
push
ror
add
xor
jo
cs
fld
sbb
xor
xchg
rcl
fidiv
mov
jp
iret
xchg
fild
inc
mov
mov
pop
sbb
shl
(bad)
movs
lock
test
sbb
ret
inc
and
out
sbb
scas
xchg
jp
mov
pop
sbb
pop
and
jmp
popf
in
sbb
jmp
icebp
ss
inc
mov
and
and
out
pop
aas
in
scas
sub
inc
xor
mov
push
stos
not
das
aaa
mov
adc
add
les
retf
imul
ds
adc
imul
outs
imul
pop
mov
in
mov
imul
test
mov
int3
ss
cmp
stos
jno
pop
mov
movs
xor
sbb
add
cmps
mov
(bad)
stos
dec
push
mov
loopne
cmp
cmp
ret
(bad)
sub
cmp
jl
sbb
cmp
jg
lock
aam
push
movs
mov
dec
push
or
fwait
je
cli
sub
and
dec
pop
pop
push
cmp
fistp
pop
bound
out
jne
sub
cmp
retf
add
pop
fild
sahf
fidiv
cmp
les
adc
nop
jmp
jnp
inc
mov
aad
enter
in
mov
inc
addr16
movs
push
rcr
pop
arpl
mov
mov
out
sbb
xor
and
clc
scas
adc
add
xchg
stos
xor
cmp
dec
push
leave
xchg
xlat
or
jecxz
push
sar
jmp
sub
push
cmp
push
aam
ja
repz
gs
xor
add
or
inc
mov
bound
cli
nop
aaa
add
xchg
jb
cmps
sub
test
xor
fistp
imul
aad
mov
add
mov
add
push
arpl
mov
mov
jge
cld
(bad)
sbb
xchg
sub
inc
push
aas
and
sub
daa
cs
lock
mov
mov
cmp
adc
jle
sbb
mov
inc
scas
aam
cmp
push
cmc
xchg
call
and
cmp
test
repz
rcl
test
lods
sbb
mov
xlat
mov
enter
jae
std
xchg
xor
ja
mov
xchg
out
inc
adc
gs
pop
adc
lea
ss
pop
jbe
push
xchg
xor
inc
mov
fmul
jecxz
addr16
mov
fiadd
shl
shl
fidiv
gs
(bad)
dec
in
repnz
mov
aam
pushf
or
mov
pop
js
xor
dec
or
jbe
pop
test
fbstp
cmc
inc
or
and
inc
dec
retf
fst
push
aas
lea
(bad)
adc
lods
jp
inc
cld
mov
mov
push
add
movs
ror
xor
adc
lods
mov
mov
stc
adc
add
mov
add
out
mov
frstor
out
xchg
fiadd
xor
sar
and
cmp
ss
dec
daa
push
ror
sub
mov
sbb
adc
pop
push
test
inc
loop
jmp
ficom
pop
call
mov
cwde
aam
sbb
mov
not
ret
fstp
sub
jb
lea
fs
adc
mov
pop
mov
pop
sar
aas
mov
sbb
and
sub
add
popa
jne
mov
ror
fwait
xchg
es
lahf
adc
movs
int3
sahf
outs
ins
lahf
jno
out
pushf
fdivr
sbb
ins
stc
jns
inc
hlt
icebp
retf
arpl
sbb
out
add
aas
pop
test
sti
fiadd
jb
push
mov
rcl
loope
add
or
pop
lock
mov
test
lods
cwde
int
cmc
mov
div
cmp
dec
and
pop
clc
xchg
xor
jp
mov
adc
enter
gs
sbb
xchg
in
cli
movs
sbb
push
pop
pop
pop
push
test
stos
mov
push
cmp
fidivr
sbb
out
add
ja
lock
pushf
lods
jo
jge
sbb
or
push
inc
jo
jno
dec
pop
lods
or
or
pop
call
fistp
arpl
push
mov
add
test
push
sub
adc
and
popa
dec
push
sub
mov
jb
rol
mov
push
clc
xchg
lods
mov
mov
xor
add
mov
xor
sahf
jle
mov
xchg
stos
jg
not
or
out
dec
mov
lods
lods
xchg
push
or
call
lahf
clc
push
pusha
push
jno
pop
fisttp
cdq
in
gs
or
xlat
fwait
stos
shl
(bad)
fdivr
shl
and
push
mov
pop
or
xchg
test
dec
adc
loopne
(bad)
test
sub
arpl
mul
jecxz
push
add
out
cmps
xchg
in
outs
dec
push
cmp
sbb
push
jnp
lods
xor
add
dec
cmp
outs
xor
dec
pop
mov
mov
dec
rcl
sbb
add
(bad)
inc
rol
sub
out
popa
mov
enter
mov
push
xchg
in
lahf
(bad)
sbb
mov
rcl
dec
push
lock
mov
inc
ja
test
mov
ss
dec
and
imul
fwait
jmp
clc
psllw
mov
repnz
jae
shr
leave
push
fimul
mov
mov
sbb
int3
pop
pop
sub
mov
sbb
sub
jmp
cmp
and
cli
addr16
les
push
mov
ins
test
dec
pop
jno
jnp
(bad)
loopne
dec
push
xchg
dec
loope
xchg
aam
ds
pop
stc
inc
js
cmps
adc
adc
sbb
sub
xchg
mov
int3
fst
mov
rcl
in
add
sub
dec
sbb
xor
leave
pushf
pushf
retf
add
dec
sbb
inc
jns
pop
imul
xchg
and
inc
imul
and
jp
cwde
data16
pop
fistp
push
ds
inc
push
and
outs
mov
loopne
sar
retf
xchg
sti
mov
ret
repnz
cmp
push
aas
leave
inc
es
pop
cmp
cmp
fcomp
pop
out
js
inc
xchg
xchg
nop
call
dec
add
xor
xor
aaa
jne
sbb
popa
push
pusha
mov
stos
test
popa
stos
push
(bad)
rsm
fsubr
mov
loopne
xchg
stos
cmc
adc
mov
in
outs
sub
jg
and
daa
(bad)
inc
leave
cdq
retf
mov
(bad)
stc
div
mov
cmp
push
jmp
mov
loope
out
fld
add
fidivr
pop
sbb
les
in
in
jg
and
jo
rcl
pop
mov
fisubr
out
(bad)
sbb
or
jle
lods
mov
test
add
cmp
or
cmps
repz
cwde
aam
les
(bad)
sbb
mov
out
cwde
jecxz
push
pop
mov
jns
scas
imul
lods
loop
adc
mov
ret
push
lahf
mov
sub
(bad)
push
test
mov
div
xchg
(bad)
mov
out
sub
sbb
fsubr
pop
pop
sbb
inc
mov
push
arpl
stos
(bad)
push
push
or
pushf
int
sbb
mov
inc
pusha
dec
pop
fprem1
cmps
adc
in
mov
cmp
bound
mov
sti
pop
sbb
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
leave
movs
add
sub
mov
or
into
push
jmp
xchg
retf
sbb
mov
mov
out
xlat
cwde
mov
mov
jecxz
jle
in
mov
leave
xor
mov
cwde
iret
setp
mov
push
je
push
daa
pop
sti
xlat
enter
out
xchg
cmps
sub
jne
sbb
inc
lahf
mov
jne
and
popa
je
push
push
inc
mov
int
je
icebp
push
out
dec
adc
mov
inc
add
sbb
mov
repnz
bound
xchg
pushf
xchg
out
inc
mov
icebp
mov
repz
das
xor
call
pop
sbb
jge
fs
shl
das
bound
mov
sbb
dec
push
add
mov
test
xor
test
push
mov
inc
jnp
leave
or
and
inc
inc
add
mov
fwait
(bad)
dec
ret
ins
pop
sar
sbb
das
sbb
mov
outs
das
dec
fldenv
push
addr16
test
jae
inc
ds
inc
ins
and
or
mov
and
out
inc
(bad)
xlat
out
movs
fdivrp
fisubr
fisub
mov
ret
(bad)
sbb
fild
mov
std
dec
mov
add
int3
retf
sahf
jge
sub
or
pushf
imul
pop
das
inc
jle
sar
push
sbb
ins
outs
jns
mov
mov
cwde
cmp
jmp
imul
rol
jmp
xchg
sub
mov
mov
push
jge
fsubr
add
and
inc
sahf
lods
xchg
ins
fild
sub
inc
ficom
mov
push
arpl
xor
jne
ss
sbb
aam
jg
inc
xor
jne
adc
inc
sub
in
icebp
(bad)
and
es
mov
add
aam
pop
loope
xchg
add
mov
nop
adc
(bad)
mov
fwait
outs
lds
dec
mov
add
mov
cmc
pusha
push
xlat
es
or
add
jle
xchg
or
mov
or
cmp
pop
lea
rcr
pusha
ins
test
les
pushf
mov
mov
bound
icebp
and
imul
sbb
rcr
in
ja
xchg
bound
test
xchg
ficomp
xchg
int3
mov
jne
dec
push
fisubr
fisttp
(bad)
out
popa
mov
aam
jge
and
(bad)
mov
mov
adc
popf
(bad)
sub
dec
mov
xor
dec
or
in
mov
es
aam
mov
(bad)
fsubr
xchg
jnp
icebp
mov
fisttp
cmp
js
aad
fisub
outs
xor
dec
jne
jb
or
lods
sub
in
std
test
pop
cmc
mul
ja
jno
push
das
mov
push
mov
dec
xchg
(bad)
sbb
adc
aaa
pop
pop
mov
shr
dec
sub
cmp
ins
sbb
(bad)
push
fwait
dec
aaa
out
cld
jecxz
pop
adc
jecxz
ret
add
cmp
ins
push
cmp
sub
mov
cmps
cmps
add
imul
leave
push
lods
or
push
xor
add
adc
test
pop
scas
xor
gs
mov
mov
sub
add
sub
sar
mov
ror
enter
sbb
xchg
into
push
jle
sar
mov
loope
sbb
sahf
pop
mov
fdiv
xchg
or
mov
mov
pop
sahf
mov
enter
push
xchg
icebp
push
ret
inc
lea
loop
or
inc
cld
or
push
xchg
ins
shl
push
int
sub
adc
js
outs
retf
movs
and
mov
nop
mov
loopne
xchg
or
fstp
jmp
mov
nop
push
mov
inc
retf
inc
push
lods
je
mov
add
add
cwde
gs
sbb
aas
adc
adc
mov
pop
in
xchg
cmp
mov
and
push
scas
mov
xchg
pop
sub
xor
pop
jmp
dec
adc
das
or
test
in
lahf
enter
xor
add
ins
pop
in
ficom
xchg
jb
push
outs
out
inc
pop
xchg
push
inc
xchg
rol
lahf
jno
test
pop
mov
and
imul
in
sub
(bad)
sar
aas
clc
push
inc
test
jmp
std
or
lods
xchg
xor
jns
adc
inc
push
xchg
sub
out
ret
jnp
push
mov
pop
ja
mov
jecxz
and
push
or
js
mov
and
call
dec
push
in
mov
or
int3
xchg
cmp
loope
pusha
in
retf
out
daa
mov
cmps
shr
jle
lds
mov
xor
jmp
or
lea
enter
add
pop
sub
push
adc
enter
or
adc
loopne
pop
cmps
sbb
arpl
div
sub
mov
pop
iret
jbe
xor
js
jge
mov
adc
mov
rcr
cmp
jo
pop
and
jmp
and
push
and
mov
pop
mov
add
(bad)
rcr
sahf
mov
add
or
int3
cld
stc
sbb
mov
mov
adc
cs
(bad)
(bad)
repnz
into
test
cmps
add
push
in
clc
jmp
outs
xor
push
stc
pusha
aam
sbb
and
push
mov
xchg
jl
mov
scas
mov
mov
mov
fimul
pop
add
out
sbb
and
repz
jmp
sbb
ss
mov
fdivr
rcl
(bad)
cmp
outs
popa
das
adc
inc
enter
mov
retf
pop
xor
mov
sbb
das
inc
in
add
adc
sahf
(bad)
popa
cmp
inc
mov
mov
(bad)
jmp
outs
pop
and
or
mov
fwait
ror
fld
adc
adc
push
push
wbinvd
xor
leave
fimul
xor
xchg
adc
ud2
leave
pop
xor
jge
push
xchg
fucomp
pop
cmps
arpl
hlt
sub
inc
pop
aas
jle
test
in
push
pop
push
clc
clc
pop
push
xchg
stos
das
cmps
inc
mov
pop
pop
sub
enter
dec
jg
fidiv
sbb
lea
ret
sbb
repnz
push
(bad)
cmps
and
cmc
or
std
mov
cdq
sbb
cmp
out
mov
sbb
sar
push
adc
cmp
push
cs
add
or
add
fwait
jecxz
and
(bad)
in
cli
adc
in
cmp
jg
xor
mov
lock
retf
sub
retf
scas
jecxz
ror
xor
cmps
xor
mov
sub
(bad)
lahf
cld
out
pop
cmps
push
in
jae
xor
sbb
ret
ja
iret
pop
adc
cmp
cld
fmul
gs
mov
lea
add
mov
pop
dec
mov
pop
or
mov
inc
add
xor
ja
xor
aaa
movs
or
xchg
(bad)
je
pop
std
into
scas
out
xchg
push
into
je
pop
sub
(bad)
push
stc
pop
aad
dec
arpl
(bad)
xor
xchg
and
add
sub
cmp
ss
pop
pop
or
cmp
adc
sahf
adc
fcmovnb
sub
test
cmc
loopne
adc
xchg
je
rol
frstor
push
pop
mov
stos
jb
inc
push
rol
(bad)
mov
mov
jns
cli
xor
dec
pop
add
mov
and
addr16
mov
popf
xor
xchg
pop
adc
nop
icebp
push
call
retf
and
(bad)
jecxz
cs
cwde
ret
push
imul
add
lahf
lods
(bad)
stc
ins
sub
inc
jmp
lods
movs
test
loope
push
icebp
cdq
jno
mov
shr
aam
and
addr16
adc
adc
inc
or
sbb
sbb
fwait
loop
out
out
icebp
retf
jne
loop
jbe
or
mov
sub
sti
jae
or
cmp
mov
mov
(bad)
fwait
and
xchg
adc
lahf
or
icebp
lods
dec
cmc
leave
inc
call
xor
inc
fidiv
mov
cmc
push
cdq
mov
jbe
cmc
retf
mov
xchg
push
xchg
mov
imul
cwde
add
pop
leave
pop
mov
fwait
cmp
mov
fisub
jnp
push
cmps
sub
fild
inc
add
lds
clc
movs
or
jecxz
pop
adc
repnz
jno
xor
mov
dec
int3
outs
jno
pop
mov
sbb
jl
or
out
sub
mov
pop
in
mov
inc
xchg
lea
(bad)
pop
retf
stos
hlt
jae
xchg
mov
xchg
add
mov
mov
fld
jg
xchg
(bad)
xchg
adc
mov
ins
add
fbld
call
dec
movs
pop
lods
fwait
arpl
sub
jge
stc
out
das
cmps
sbb
mov
push
aas
add
ret
std
mov
scas
or
imul
outs
adc
cmp
dec
push
mov
out
jo
pop
aad
in
pusha
mov
jmp
mov
adc
xchg
pop
loopne
pop
xchg
pusha
pop
ins
adc
push
aas
in
mov
in
test
pop
leave
aas
dec
jge
out
and
mov
rcr
adc
ret
jno
xchg
in
mov
out
push
xchg
dec
adc
jns
adc
(bad)
push
fnsave
pop
stos
push
pop
int3
jns
mov
fld
inc
xor
and
cmp
mov
sbb
movs
mov
jp
or
daa
sbb
adc
sbb
retf
mov
mov
data16
mov
(bad)
mov
fs
test
dec
shl
and
dec
push
inc
sbb
arpl
xchg
jno
and
add
repnz
cmc
retf
inc
ins
adc
mov
push
or
xchg
pop
dec
test
sar
mov
ins
mov
das
movs
cmp
mov
jns
imul
mov
cmps
sbb
mov
pusha
jne
pop
jp
push
jae
jecxz
push
inc
mov
push
imul
inc
push
push
daa
ror
sahf
mov
sbb
dec
outs
add
ds
ss
mov
sar
mov
lods
push
mov
jbe
mov
xor
and
adc
sub
push
cli
jmp
dec
nop
inc
cs
add
popf
pop
sti
loop
imul
add
cmp
jns
outs
jl
lods
mov
inc
retf
fimul
ret
fndisi(8087
add
xor
int3
dec
pop
pop
inc
rcr
cmp
mov
xchg
(bad)
scas
aad
mov
data16
movs
scas
or
and
imul
add
mov
neg
dec
mov
dec
out
xchg
pusha
and
int
jne
cmp
frstor
sbb
js
xchg
std
jg
mov
mov
in
mov
or
pop
cli
neg
mov
push
mov
(bad)
je
pop
cmp
pop
jns
cmp
pushf
inc
pop
aam
push
mov
adc
push
cmp
pop
faddp
or
stc
dec
cmp
and
push
test
sbb
push
das
shr
mov
loope
stos
fadd
mov
div
movs
jo
pop
add
xor
or
das
inc
sbb
fisttp
xor
xor
and
repz
sbb
inc
mov
int3
mov
out
pop
push
pop
loop
repnz
cld
imul
icebp
scas
mov
lahf
addr16
sahf
cmp
sti
xor
push
sub
cli
mov
adc
xchg
sub
imul
out
fcmovu
adc
shl
fcomp
sbb
push
inc
js
jl
sar
sub
dec
out
fwait
dec
mov
mov
and
dec
xor
xchg
mov
retf
mov
push
pusha
jge
retf
mov
(bad)
ds
inc
jbe
fs
ins
inc
inc
mov
ret
into
jl
out
push
call
es
jbe
xor
jno
pusha
or
push
add
sti
nop
xchg
aad
ror
jbe
push
cmp
dec
xchg
rep
jbe
fisttp
mov
cmc
add
add
jb
dec
pusha
mov
jecxz
pop
movs
fwait
sahf
mov
cmps
imul
mov
add
fisttp
cmp
jecxz
sub
or
mov
out
or
xor
inc
and
shl
cld
fisub
push
push
push
cmp
push
shr
fisttp
iret
outs
mov
dec
popf
movs
sub
or
popa
stc
xor
loope
fild
mov
pop
inc
push
mov
mov
(bad)
das
add
push
out
jbe
jno
repz
shl
sbb
les
add
rcl
loopne
daa
xchg
jbe
scas
push
into
cwde
cli
sub
int3
aas
and
push
or
sub
cmps
imul
je
sub
dec
inc
xor
test
daa
cmp
daa
call
mov
jmp
dec
sub
lock
jecxz
xor
movs
push
xchg
jp
add
cmc
sbb
repz
pop
cmp
xor
sbb
sub
jae
jnp
sahf
int3
ss
outs
ret
and
xchg
mov
(bad)
jecxz
ret
mov
hlt
loope
adc
mov
rol
ret
mov
fdivr
addr16
in
pop
bound
add
pop
xor
adc
arpl
mov
out
xchg
pop
aas
hlt
mov
jl
rcr
ss
clc
movs
push
sub
dec
mov
push
bound
add
dec
scas
jmp
mov
mov
shl
gs
and
cli
add
jecxz
jmp
mov
das
jg
adc
sbb
rol
fdiv
rol
sar
xchg
lock
mov
clc
int
shl
sbb
jmp
xor
lods
icebp
cdq
push
xor
retf
cld
(bad)
jb
aas
pop
jbe
adc
jle
adc
rol
pop
in
pushf
dec
push
jbe
sub
test
sbb
addr16
mov
inc
loope
xor
add
rol
mov
push
push
lods
push
jno
cmp
call
sub
(bad)
(bad)
dec
or
dec
mov
ror
(bad)
loopne
scas
cmp
sub
ins
pop
shr
jo
call
les
hlt
ror
jne
call
pop
push
jecxz
dec
and
test
sbb
jb
or
xchg
retf
jle
mov
call
jnp
mov
test
cs
xchg
loop
add
push
push
(bad)
inc
mov
jl
add
cdq
div
into
mov
jge
jb
fldlg2
int3
scas
sbb
inc
(bad)
jo
dec
lods
hlt
shl
and
out
fwait
inc
pop
pop
mov
add
push
pop
ret
push
dec
jne
pop
bound
popf
rcr
mov
sbb
ret
sub
loopne
jnp
rol
ss
push
js
jae
mov
inc
jb
mov
idiv
jge
or
sub
nop
fist
add
fmul
sbb
test
sub
int
dec
stos
stc
ss
jne
jp
movs
cmps
call
mov
out
xchg
and
xchg
jle
icebp
adc
fdiv
mov
sbb
mov
jg
jp
into
jg
call
outs
cmp
jnp
fucom
xchg
stos
fsub
jnp
popa
cwde
push
cld
add
adc
cdq
into
inc
jl
inc
sbb
test
and
aas
mov
int3
ror
mov
popa
mov
sahf
std
(bad)
out
cmps
movs
push
xor
mov
arpl
loope
aaa
in
xchg
mov
push
xchg
xor
xchg
iret
push
mov
jecxz
mov
retf
cmp
aaa
dec
jg
or
shl
jge
iret
xchg
loop
jbe
mov
adc
or
inc
dec
push
mov
sbb
in
mov
stos
push
add
inc
and
shr
pop
inc
cli
pop
cdq
ins
jae
inc
or
push
sbb
fwait
sbb
mov
sar
in
stc
pop
test
adc
jb
mov
dec
(bad)
into
jl
jae
cmps
fcomip
sbb
sbb
test
xchg
div
dec
xchg
fnstenv
push
fstp
mov
nop
xor
call
pop
cli
mov
pop
rep
in
jb
mov
add
call
or
(bad)
idiv
data16
icebp
shr
push
mov
mov
sbb
clc
retf
cmp
stc
jo
lock
add
add
outs
inc
test
add
mov
jo
mov
shl
loope
div
pop
jne
test
sbb
inc
cmp
aaa
daa
ret
dec
xor
pop
jmp
jmp
mov
mov
cli
sub
pop
adc
sub
std
inc
push
shl
jp
xor
sub
leave
xor
repnz
add
push
inc
gs
adc
ja
scas
out
das
fsub
(bad)
test
loope
lock
sub
in
lods
xchg
add
imul
mov
jp
bound
sbb
mov
(bad)
fist
push
inc
outs
mov
fidivr
aaa
cmp
jne
and
xlat
sub
div
jl
jo
xor
pop
ins
sub
repz
mov
adc
not
xchg
dec
adc
arpl
adc
(bad)
fst
and
xchg
in
loope
fwait
mov
out
bound
fstp
lahf
pop
cmp
fdivr
xor
(bad)
(bad)
gs
add
mov
jno
jle
mov
push
pop
add
jmp
adc
mov
push
xor
shl
jl
xor
or
in
or
cmp
inc
dec
jne
mov
adc
xchg
nop
inc
fwait
lods
pop
(bad)
cmc
shr
inc
pusha
dec
outs
loopne
jno
mov
ret
loopne
inc
fist
or
add
pop
iret
(bad)
push
call
(bad)
ret
and
xor
mov
sahf
sbb
imul
sbb
int3
dec
fwait
mov
(bad)
jge
push
retf
mov
fcmovb
sbb
and
jecxz
and
iret
add
loop
in
int
jo
xchg
loop
and
xchg
fs
and
pop
imul
fs
push
mov
xor
pop
loopne
out
jne
pop
jbe
xlat
adc
mov
mov
test
mov
div
push
fistp
push
push
icebp
ja
aad
jmp
mov
or
pop
sti
cmp
jns
jno
retf
mov
sbb
sbb
in
imul
inc
popa
into
adc
mov
into
inc
in
shr
jmp
mov
or
dec
fisub
jmp
imul
inc
mov
xor
xlat
push
cmp
repz
cmp
jae
sub
and
xchg
pop
out
nop
mov
or
mov
dec
adc
sub
movs
loop
imul
sub
sbb
jae
ror
repnz
xor
sbb
stc
loopne
pop
mov
push
cmovle
shr
test
inc
nop
inc
loopne
(bad)
jnp
stc
dec
cmp
adc
dec
sti
ja
pushf
hlt
imul
or
mov
lea
push
xor
adc
or
jg
mov
(bad)
adc
mov
es
div
imul
jmp
and
or
mov
xor
sub
or
mov
add
movs
pop
inc
mov
mov
test
add
ret
jle
sub
sub
or
inc
fs
and
and
sub
push
cmp
mov
and
imul
pop
push
push
add
sahf
mov
sub
bound
test
adc
hlt
sbb
mov
fmul
mov
dec
adc
pop
cmps
adc
jns
sbb
adc
stos
in
retf
sahf
ss
(bad)
fscale
jle
ror
in
outs
add
ret
adc
iret
fldcw
push
inc
repnz
add
or
movs
xor
xchg
dec
dec
lock
cmps
sahf
pop
jle
push
xchg
out
mov
and
repz
popf
push
cs
xor
in
adc
dec
pusha
inc
pop
gs
add
inc
imul
inc
jg
mov
mov
imul
inc
outs
jg
pop
fimul
aas
lahf
mov
repz
lock
jnp
cmp
push
sub
mov
movs
cwde
add
into
sbb
xchg
mov
mov
pop
mov
xchg
dec
xchg
mov
sub
push
xchg
push
xchg
out
inc
mov
sub
mov
mov
jecxz
push
lea
pop
adc
ds
mov
loop
shr
adc
sub
mov
pop
sbb
jle
dec
dec
adc
retf
(bad)
jg
xor
fdiv
xor
inc
pop
pop
nop
and
xor
call
jne
sub
dec
sub
push
or
mov
icebp
cmps
js
fwait
xchg
mov
stos
es
(bad)
mov
or
imul
xor
nop
les
mov
cdq
stc
jp
lods
iret
sub
mov
add
ret
sub
mov
mov
stos
sahf
in
int
out
loopne
or
xor
mov
int3
push
inc
test
sbb
ror
ss
mov
es
jl
dec
outs
cmp
fst
aad
mov
jo
jg
int3
ins
pop
repnz
jmp
repnz
inc
rcl
lods
popf
push
bound
aas
sub
aaa
movs
vmwrite
jne
rcr
fs
rcr
jge
add
sahf
inc
clc
popa
loop
imul
imul
inc
lahf
cld
adc
sub
sahf
xchg
hlt
xchg
psadbw
js
xchg
in
inc
ss
outs
cmps
xor
call
repnz
iret
push
ins
cmp
fnstsw
das
addr16
xchg
sub
sub
cwde
popf
sub
aam
push
cmp
jp
xor
jl
jmp
aas
int3
js
dec
cld
mov
xor
xor
das
mov
jbe
test
cmp
xor
jmp
(bad)
fld
sbb
mov
dec
jl
inc
imul
sti
adc
mov
pop
xchg
push
pop
xchg
retf
and
clc
sbb
lahf
out
mov
xchg
mov
xor
jb
ret
xchg
(bad)
cmc
aam
fcomp
or
ret
adc
xor
push
idiv
inc
sti
push
mov
out
adc
jge
addr16
mov
sub
add
inc
xchg
or
std
les
pop
pop
xchg
mov
add
inc
outs
push
test
ret
and
jg
inc
jno
arpl
mov
push
outs
inc
push
out
pusha
pop
imul
(bad)
xchg
add
mov
sub
jno
xchg
cli
adc
xchg
test
lods
sar
enter
sbb
daa
inc
sbb
fistp
fucom
rcl
fisttp
push
stos
sahf
sbb
adc
mov
dec
inc
pop
jo
xor
inc
mov
into
push
shr
(bad)
stc
mul
mov
fs
xor
sub
add
stos
xchg
push
adc
or
shr
mov
push
icebp
or
xor
(bad)
call
popf
(bad)
inc
test
(bad)
push
fs
inc
lods
pop
cmp
sahf
sbb
and
xchg
cmps
pop
les
mov
in
dec
mov
in
push
pop
iret
mov
fcom
pop
mov
or
xor
jae
(bad)
pop
pop
dec
into
push
inc
add
xor
inc
in
fisubr
pop
jne
scas
add
cmp
lds
shr
sub
adc
loop
mov
call
xor
repz
xor
pop
enter
dec
mov
and
loop
mov
push
test
cmp
xchg
sbb
sahf
add
popa
enter
push
xchg
call
mov
into
xchg
xor
loope
pop
add
loope
loope
jmp
idiv
add
loop
push
dec
mov
cld
xchg
into
mov
add
jg
xchg
cli
cli
push
test
dec
(bad)
enter
inc
add
fwait
rcl
inc
ds
addr16
or
in
ja
cli
nop
mov
fdiv
mov
or
rcl
xlat
mov
sbb
nop
sub
outs
stos
mov
dec
xchg
push
aam
xor
adc
movs
fiadd
push
data16
test
sbb
inc
lea
popa
lods
imul
dec
pop
push
repz
push
leave
or
cli
dec
aaa
mov
jmp
aas
jb
ret
fimul
cmp
ds
mov
jbe
pop
and
xchg
hlt
jl
cmp
es
sahf
cmps
popf
int3
les
(bad)
sbb
lds
push
add
fcomp
push
cmp
sbb
out
sti
mov
int3
aas
xchg
(bad)
jb
(bad)
adc
popf
and
les
mov
into
inc
retf
in
stos
and
push
push
fbld
retf
jge
pop
push
inc
jl
sbb
ret
(bad)
and
rep
push
add
imul
fwait
mov
imul
add
lock
jb
lock
repnz
pop
pusha
cmp
inc
mov
dec
pop
push
dec
xchg
push
test
add
out
ins
xchg
cwde
mov
shr
lods
pusha
push
cmc
cld
lods
popf
ins
fs
cdq
xchg
test
mov
gs
jno
pop
or
into
sbb
add
sbb
or
cmps
clc
inc
xor
or
xchg
es
(bad)
jl
xor
cmps
jmp
sub
enter
mov
(bad)
sar
xchg
mov
dec
ret
xor
popa
mov
rcl
aaa
(bad)
dec
add
xor
es
push
xchg
ss
or
fist
or
cmps
cmp
add
pop
mov
or
test
jge
lahf
push
and
iret
inc
mov
sub
adc
loope
les
mov
(bad)
retf
inc
add
sbb
dec
fldcw
into
mov
lods
inc
fsubr
fs
popa
ss
sub
lods
lods
ficom
add
lods
dec
stc
cmp
into
and
inc
or
in
mov
retf
push
mov
(bad)
add
mov
push
clc
jb
ror
and
jge
leave
mov
test
adc
lahf
or
xor
jle
(bad)
(bad)
or
movs
(bad)
leave
es
cld
mov
(bad)
out
xchg
jae
int
(bad)
add
syscall
xchg
dec
push
icebp
jmp
aas
push
jbe
dec
jge
mov
pop
cli
js
fmul
xchg
cmp
xor
mov
shl
mov
pusha
add
sbb
and
and
ins
pop
hlt
outs
jno
jo
mov
call
jno
in
dec
shl
mov
adc
adc
cmp
imul
and
(bad)
aas
jge
jno
pop
pop
xchg
add
leave
and
enter
outs
mov
push
add
and
call
push
int3
stos
imul
das
test
or
add
mov
dec
int3
dec
fnstcw
jmp
adc
lahf
(bad)
cmp
push
sti
add
dec
jle
mov
aas
push
test
cli
mov
nop
push
aas
xor
xlat
sub
and
push
cs
adc
dec
rcr
out
fwait
inc
sub
add
es
xchg
mov
ret
fcomp
jns
cld
jg
in
cmp
std
xchg
movs
mov
int3
rcr
inc
retf
jecxz
mov
add
mov
jge
out
jmp
push
repnz
push
lahf
add
ja
jmp
clc
mov
xchg
ins
sub
jl
mov
dec
es
fcom
dec
xor
lods
ins
or
div
sbb
xor
leave
(bad)
out
adc
fchs
xor
sahf
or
adc
cmp
and
repnz
scas
xor
add
into
fnstsw
sub
int3
add
loopne
out
mov
pop
adc
daa
push
inc
dec
int
push
ficomp
(bad)
xchg
ins
add
inc
pop
mov
hlt
popf
jae
dec
aad
movs
pop
add
es
mov
fs
arpl
dec
aam
jns
loope
mov
les
inc
iret
and
mov
xlat
push
in
dec
push
mov
dec
ret
(bad)
icebp
mov
shr
xchg
mov
push
(bad)
movs
fdivr
fld
mov
dec
jb
ret
and
pop
jns
pushf
pop
mov
aas
scas
mov
jge
(bad)
pushf
and
stos
push
cmps
or
ja
add
ins
leave
sub
xor
lea
xor
in
sub
pushf
loop
lea
mov
imul
cdq
aam
aaa
mov
dec
(bad)
add
ja
mov
lahf
pop
cmp
xor
stos
add
push
out
mov
leave
and
lea
add
je
jmp
fsubr
lods
push
push
add
(bad)
jp
stc
and
inc
pop
(bad)
gs
shl
int
push
neg
and
adc
les
lahf
scas
jnp
jp
or
lock
inc
cmp
xchg
add
mov
mov
mov
sbb
and
push
ss
lock
pushf
dec
fs
sub
aam
lea
mov
sahf
cmp
jnp
xlat
sti
cmp
dec
fcomi
push
pop
int3
int3
sar
ins
int3
js
shl
pusha
div
inc
scas
jb
mov
dec
fcomp
sbb
push
add
mov
mov
mov
adc
icebp
stos
lock
cmc
mov
in
ret
or
xchg
inc
add
or
stc
sub
add
test
test
int
mov
dec
movs
popf
jnp
xchg
pop
adc
add
mov
push
js
in
aad
pop
mov
out
push
frstor
call
movs
jae
jmp
mov
sub
sbb
sbb
mov
sub
out
fld
fwait
call
dec
sbb
mov
xchg
jns
outs
jle
xchg
or
out
sbb
xor
test
or
shr
sub
andps
or
xor
fs
shr
sub
add
mov
fsubr
add
fs
call
repz
stc
mov
xchg
imul
mov
and
das
cmp
jg
cmp
push
ret
out
pop
cmp
jmp
(bad)
loop
fidiv
sub
xlat
jecxz
mov
ja
push
sbb
dec
mov
fimul
push
movs
stos
bound
retf
jmp
adc
(bad)
clc
xchg
fldcw
(bad)
mov
xchg
dec
xchg
je
(bad)
daa
push
ror
aam
add
call
leave
data16
or
jmp
stc
dec
aaa
add
pop
mov
popf
xchg
fwait
jle
test
mov
inc
aam
bound
cmp
jge
inc
jns
or
clc
shr
nop
push
aas
into
push
adc
jne
out
sbb
shl
mov
dec
xchg
bound
jb
jecxz
add
enter
call
retf
and
and
aaa
sbb
mov
cld
push
sbb
adc
push
inc
mov
xchg
test
hlt
hlt
add
mov
fs
jl
loope
dec
cmc
sahf
push
das
out
outs
retf
xor
mov
inc
add
nop
or
ret
mov
mov
mul
in
packsswb
cli
push
push
jns
adc
xor
mov
push
js
lea
and
push
and
es
cmps
push
or
pop
mov
shl
mov
adc
lods
das
sahf
mov
test
ins
sub
inc
add
repz
pop
adc
dec
retf
ins
(bad)
(bad)
jnp
pop
shl
jmp
jns
int
push
scas
(bad)
mov
jp
cmovnp
ret
sahf
sub
add
fnstcw
aas
cmp
cli
stos
xchg
movs
not
in
daa
inc
add
or
add
popa
push
out
lods
scas
xchg
mov
cli
add
and
idiv
pop
pop
sahf
xchg
mov
mov
leave
clc
ja
fstp
gs
push
stos
xor
jmp
pop
add
test
mov
outs
xchg
scas
loope
stc
mov
dec
push
lahf
outs
outs
sar
fcmovb
xchg
loop
mov
shl
into
gs
mov
xlat
adc
mov
rcl
push
inc
push
js
loop
jecxz
push
loope
and
pop
test
idiv
pusha
push
icebp
or
int3
ss
xchg
mov
cmp
push
adc
xchg
popa
mov
jl
xor
rcl
loopne
int
cmc
mov
shl
sub
jne
inc
xor
dec
xchg
push
xor
out
add
xchg
sub
neg
call
push
jno
test
mov
mov
add
add
push
rol
pop
pushf
test
loop
lods
lahf
shl
adc
adc
jo
cwde
ins
outs
out
fisubr
push
dec
mov
push
jl
dec
pop
loopne
(bad)
out
not
sub
dec
test
shr
cwde
push
jne
sub
into
sub
xor
fisttp
pop
test
push
pop
cmp
test
xor
adc
sub
pop
dec
arpl
imul
add
or
into
aam
sbb
add
pop
imul
add
sub
clc
ins
push
inc
sbb
adc
sub
ret
jns
xchg
ror
pop
xchg
jns
sub
add
iret
xlat
mov
(bad)
(bad)
push
out
cmps
in
xchg
xlat
int
sbb
and
mov
mov
mov
fsubr
dec
loopne
push
add
mov
push
sbb
mul
mov
sar
jo
je
or
xor
pop
xchg
jmp
cli
pusha
jge
movs
push
sar
mov
stos
mov
sbb
fwait
sbb
ins
and
nop
inc
popf
sahf
sub
jle
ror
cmps
not
cmp
lea
mov
aad
mov
sbb
adc
fldenv
out
push
adc
jno
push
call
and
adc
test
mov
popa
sbb
xor
mov
mov
scas
xor
add
pop
mov
test
fyl2x
shl
repz
nop
cmp
leave
ret
mov
icebp
out
add
out
mov
xlat
mov
jl
ror
fimul
cmp
dec
mov
xchg
movs
out
iret
aaa
mov
pop
xor
dec
and
xchg
jb
sbb
test
jg
mov
mov
adc
in
push
gs
xor
nop
xor
inc
enter
push
jp
dec
jbe
(bad)
(bad)
pop
jl
cdq
retf
cmps
cdq
movs
(bad)
pop
mov
dec
repnz
add
sbb
fimul
test
jne
push
inc
(bad)
mov
call
adc
mov
inc
xor
retf
lods
mov
test
push
mov
cmp
pop
fstp
cmp
dec
pop
adc
push
xchg
inc
shr
or
mov
sub
inc
cs
inc
(bad)
in
bound
inc
mov
test
out
imul
test
inc
add
push
sahf
out
sbb
sbb
mov
ret
add
ret
mov
ds
adc
push
dec
out
repnz
scas
cdq
pop
icebp
ja
fchs
cdq
dec
sbb
mov
push
inc
je
or
retf
(bad)
push
(bad)
sbb
inc
pop
and
inc
and
repz
pop
jno
push
push
add
xchg
mov
cwde
sbb
push
xchg
ins
test
sub
sbb
in
cld
jge
mov
cmp
cmp
(bad)
in
xor
jge
stos
loope
jnp
or
sbb
aaa
repz
push
xchg
iret
xor
mov
bound
cmp
inc
mov
inc
out
pop
add
add
pushf
cmp
ret
sbb
cmp
lods
repnz
pop
mov
mov
outs
xchg
or
shr
jmp
mov
push
fnsave
jp
fmul
test
xchg
dec
loop
std
inc
fild
push
mov
in
dec
pusha
mov
movs
aas
loope
mov
adc
inc
ja
inc
push
cdq
pusha
cs
mov
dec
sub
call
fisub
pop
scas
mov
xchg
gs
or
cmps
xor
out
jge
adc
rcr
pop
jle
(bad)
imul
scas
ret
mov
add
push
mov
shl
xor
or
mov
sbb
xchg
sub
shl
push
out
mov
cs
push
loopne
add
sub
xchg
mov
push
xor
mov
xor
(bad)
mov
sbb
cli
cli
movs
and
imul
push
rol
cmc
xor
fwait
call
arpl
ins
xchg
jecxz
and
ins
xor
sbb
pop
dec
xor
out
pop
pop
iret
cmp
cmp
mov
(bad)
pop
inc
out
jmp
mov
push
das
jb
loop
fcmovne
dec
sub
fistp
cld
ror
xchg
cmp
pop
add
adc
repnz
jns
dec
shr
loopne
jg
daa
xor
push
shl
jle
pop
call
inc
mov
dec
push
inc
mov
dec
mov
jb
xchg
add
pop
std
fmul
cmp
rcl
cmc
push
inc
jle
movs
mov
dec
shr
push
xor
test
fld
inc
sbb
imul
xchg
loopne
popa
inc
ret
jns
mov
ja
or
ss
shr
xchg
cmp
jnp
lods
cmp
push
iret
mov
push
push
mov
mov
(bad)
in
lahf
xchg
test
fistp
jle
in
loopne
xchg
sub
stos
icebp
sbb
test
call
das
dec
xlat
je
and
sub
loope
(bad)
cmp
and
push
push
push
sub
jmp
or
test
push
lods
ins
test
or
(bad)
jbe
mov
mov
mov
daa
(bad)
cmp
in
stos
mov
iret
jmp
lahf
mov
jno
cs
push
shr
jecxz
cmp
out
ss
mov
pop
ins
mov
jmp
sub
cmps
ret
mov
jg
and
cmc
dec
cmp
dec
pop
inc
retf
sahf
(bad)
mov
sub
jae
mov
pop
add
add
or
call
and
push
fild
or
sub
inc
das
inc
imul
out
push
mov
jmp
lea
mov
sub
and
retf
sti
(bad)
(bad)
fiadd
jle
adc
jl
pop
add
push
jo
xor
fsub
pop
sbb
mov
rcl
loopne
stos
or
jb
push
sbb
pop
ficomp
arpl
pushf
cmp
cdq
push
xor
daa
jle
dec
sub
add
dec
mov
loope
call
jno
fs
lahf
(bad)
pusha
mov
addr16
call
jecxz
in
adc
inc
mov
jmp
pop
xlat
sbb
xchg
ins
pop
leave
add
fild
rcr
nop
xchg
sub
cmps
sbb
dec
rcr
cmp
in
js
or
in
popf
imul
sub
popf
cmp
adc
inc
and
add
mov
xor
aad
daa
jb
mov
shl
add
int3
adc
sub
test
jmp
jmp
add
cmps
scas
sub
cmp
pop
int3
punpckhwd
cmp
jnp
and
xor
scas
cld
ret
and
xor
xchg
std
add
lahf
sub
pop
sbb
dec
mov
sbb
mov
aaa
push
fdivr
sbb
sbb
pop
xor
jb
leave
xor
pop
mov
jbe
cmc
xchg
mov
inc
stos
mov
mov
jp
in
dec
icebp
lods
and
sbb
mov
lods
rcr
push
std
int
loope
push
mov
std
cmps
int
in
sar
push
out
sbb
stos
push
push
pusha
test
push
fidivr
out
mov
pusha
sub
aas
jge
inc
dec
jp
jle
sbb
stos
ret
xor
mov
inc
push
jl
jns
bound
pusha
in
hlt
jle
bound
aaa
jge
and
dec
repz
adc
out
test
rcr
mov
das
retf
cmc
int
pop
add
shl
push
inc
das
loop
xor
sbb
xor
fist
ins
xchg
jns
xchg
fs
and
dec
or
or
ins
sub
pop
mov
mov
mov
mov
loopne
je
mov
and
in
cmp
lods
movs
ds
or
mov
inc
inc
cmps
nop
jmp
push
inc
dec
imul
int
or
out
cmps
push
inc
sub
dec
dec
push
lds
adc
fcom
fsubr
scas
dec
(bad)
jmp
loop
das
xchg
scas
push
lds
push
cmp
jnp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
pusha
mov
cmp
repz
mov
cmps
mov
cmps
push
and
out
test
leave
in
or
and
movs
xor
popf
rcr
adc
inc
ins
mov
in
jb
dec
dec
call
fld
pop
adc
mov
xchg
xor
stos
mov
mov
add
cmp
sbb
mov
test
xor
cmps
nop
cmp
push
aam
into
iret
stos
cmp
or
pop
js
lea
loope
mov
push
addr16
mov
xor
jae
jge
jg
les
sub
pushf
cmp
dec
sbb
mov
sub
pop
in
add
shr
dec
mov
repz
test
shr
loope
test
mov
mov
cs
test
(bad)
loop
clc
jae
jge
rcr
aas
repnz
das
jno
pop
adc
test
and
xchg
in
inc
mov
push
mov
push
mov
in
ret
pop
xor
test
add
or
inc
aad
retf
cmps
and
mov
loopne
mov
sahf
hlt
lea
cmp
inc
repz
push
rcr
inc
ss
std
jne
pop
int
aam
mov
sub
sbb
dec
push
jge
fiadd
cld
sbb
xor
dec
loope
sub
xor
(bad)
fs
push
or
pushf
pop
aad
mov
idiv
sub
dec
pop
dec
inc
adc
push
push
add
das
test
sar
fwait
stos
enter
fucomip
adc
pop
push
scas
sahf
xor
xchg
test
aas
out
fwait
daa
sub
mov
dec
cmps
mov
ret
xor
cmps
jnp
mov
jmp
in
int
push
sti
jae
jnp
xor
out
into
sbb
imul
jae
add
ret
stos
or
fwait
or
adc
scas
dec
xor
retf
xchg
aam
ror
push
sti
ret
sub
jmp
jb
jns
sub
xchg
loope
mov
inc
retf
or
aaa
mov
fwait
add
push
mov
ins
cmp
sbb
clc
add
mov
sub
and
aad
hlt
lds
mov
mov
loopne
add
jg
xchg
mov
mov
mov
push
loopne
jmp
push
xor
fdivr
je
mov
out
pushf
xor
fild
pop
adc
sahf
(bad)
(bad)
dec
add
shl
ret
mov
out
mov
sbb
(bad)
sub
(bad)
ficom
aad
sub
fs
test
sbb
and
jne
push
jmp
les
scas
push
or
sub
jmp
push
add
jg
into
xor
cmp
inc
push
in
cmc
inc
in
cmp
xor
test
mov
pop
pop
add
push
dec
xor
rcr
rcr
and
hlt
inc
mov
(bad)
leave
in
clc
imul
and
push
inc
mov
pop
adc
aad
daa
and
dec
and
gs
call
sub
outs
mov
and
pop
fisub
ss
cs
fldcw
xchg
jne
fisub
unpcklps
and
(bad)
stc
mov
mov
popa
out
aam
leave
mov
mov
call
and
jo
addr16
iret
ret
dec
outs
pop
add
jp
mov
or
data16
lods
jno
scas
div
cmp
cmp
hlt
lods
imul
and
xor
jge
inc
data16
jl
cmp
or
mov
jmp
sti
adc
ins
test
(bad)
mov
lods
push
ret
out
fistp
pop
test
ror
xor
repnz
dec
sbb
push
push
push
and
rol
aam
outs
sbb
mov
lea
out
push
push
retf
out
mov
movs
cmp
lds
xor
int
sub
mov
je
(bad)
fbstp
stc
jl
push
inc
fidivr
adc
add
call
icebp
dec
repz
and
lds
int3
pop
and
and
jmp
mov
fst
push
jae
jae
jmp
mov
xchg
cmp
add
cli
in
fs
pop
xor
sub
pusha
jp
and
ja
inc
sbb
push
or
addr16
pushf
dec
inc
dec
cld
xor
rol
enter
sub
in
fimul
jnp
out
push
pop
jp
stos
gs
mov
int3
push
inc
arpl
push
ja
push
scas
(bad)
and
mov
into
sbb
dec
mov
push
aam
xor
pop
fwait
int3
jns
or
push
add
xor
hlt
mov
jg
mov
cmp
neg
fst
dec
push
jo
inc
xchg
fnstsw
and
or
pop
push
mov
and
xchg
push
and
int3
jo
or
inc
xchg
ret
xchg
(bad)
mov
push
in
jae
jg
popa
and
xchg
push
or
pop
outs
jns
int
leave
xor
fist
cmps
xchg
mov
xchg
mov
add
mov
dec
imul
adc
imul
loopne
dec
inc
sbb
sub
ror
mov
mov
addr16
ret
add
(bad)
xor
das
mov
pop
push
cs
mov
add
adc
mov
cmp
retf
mov
imul
cmps
out
out
and
stos
xor
inc
stos
xor
or
sbb
(bad)
jne
xor
mov
pop
emms
aas
pop
sbb
jae
imul
jmp
push
adc
sbb
fmul
imul
ror
or
and
jp
push
cmc
push
mov
sahf
push
inc
fisttp
jae
fcomp
dec
dec
cmp
pop
(bad)
cmp
stos
int
cs
jcxz
pop
sbb
fld
leave
sbb
idiv
sbb
mov
and
dec
add
icebp
adc
test
add
out
and
ss
fcomip
outs
lock
sbb
fcomp
mov
sub
(bad)
lock
xchg
jbe
sbb
lock
ret
sbb
pop
aad
mov
movs
arpl
mov
mov
cmps
cmp
jl
fcom
movs
xor
fisub
into
push
mov
shl
popf
mov
bound
mov
add
ret
mov
cmp
dec
lock
sbb
push
push
rcr
adc
mov
pop
call
or
out
(bad)
mov
and
enter
add
imul
inc
fs
out
hlt
inc
push
cmp
in
mov
push
test
fidiv
xor
rcr
je
lds
jle
inc
and
pop
daa
ret
scas
(bad)
imul
(bad)
in
jecxz
lea
loop
pop
jns
sahf
mov
add
mov
inc
fcomip
loop
(bad)
dec
scas
daa
push
pop
sbb
in
call
bound
mov
repz
enter
and
cmp
mov
hlt
cmc
rcr
inc
dec
fadd
add
push
iret
repz
mov
int
push
sbb
or
imul
jmp
xchg
test
sbb
cmp
out
pop
mov
add
pop
sbb
pop
jecxz
dec
push
add
jbe
or
inc
jne
mov
data16
cmps
mov
jnp
popf
pop
loop
fcmovbe
xchg
scas
adc
ins
cmp
xor
mov
(bad)
mov
bound
lock
xchg
pop
pop
movs
(bad)
iret
mov
jbe
inc
scas
js
loop
push
dec
xchg
sub
jmp
hlt
jno
inc
push
ret
repnz
cmp
fld
xor
jno
inc
xchg
rcl
and
add
(bad)
jmp
jmp
pop
mov
jo
mov
push
jns
mov
fs
aas
xor
shl
sub
lods
loop
loop
in
adc
(bad)
dec
add
add
(bad)
xchg
test
cwde
das
sti
inc
pop
aam
push
pop
icebp
dec
loopne
inc
inc
fs
jmp
mov
ret
ja
mov
sub
inc
mov
enter
push
or
ds
mov
ja
push
pop
(bad)
inc
mov
mov
dec
jmp
mov
pop
enter
out
imul
xchg
fs
stos
mov
add
sub
xor
xchg
pop
fbld
in
repz
fsub
popa
fld
ficomp
iret
sbb
sub
aam
std
jg
and
jno
fisttp
mov
add
pop
clc
mov
pusha
xchg
nop
rol
ds
push
hlt
nop
cli
cmp
call
mov
aaa
sbb
push
dec
add
pop
xchg
and
xchg
xchg
cmp
push
loop
cmps
jmp
test
lea
imul
xor
movs
stc
push
movs
pop
stos
sub
jno
shl
xor
add
dec
sub
lds
inc
aas
nop
mov
mov
fsubr
sub
hlt
cmc
and
outs
inc
cmp
sti
cmp
jmp
fs
mov
xor
jg
xor
xchg
mov
shl
fild
repnz
in
xor
mov
scas
(bad)
xor
add
push
sar
jg
fiadd
or
aaa
fisubr
ins
scas
cmp
cld
adc
mov
mov
jns
test
enter
push
and
les
test
lea
pop
in
adc
xor
in
cmps
sbb
sti
repnz
dec
int
(bad)
mov
int
pusha
ds
(bad)
sbb
jmp
adc
mov
push
iret
shl
aam
outs
xor
ss
mov
out
jge
add
seto
js
rcr
dec
and
mov
push
sbb
lock
or
cmp
loopne
cmp
cli
mov
test
aaa
mov
pushf
xlat
jns
dec
push
je
pop
pushf
or
push
mov
mov
inc
sbb
xchg
push
rol
inc
push
sbb
mov
cmps
mov
(bad)
popa
inc
push
stos
sub
rol
retf
retf
imul
imul
push
pop
retf
lods
pop
sub
(bad)
out
call
push
fbld
jmp
call
push
adc
je
(bad)
sbb
mov
or
(bad)
lods
pop
add
loop
mov
adc
jmp
cmp
lds
iret
push
lea
jae
add
test
add
arpl
dec
jg
xor
xchg
(bad)
out
push
in
jae
pop
adc
mov
jns
repnz
mov
push
adc
pop
jp
fistp
jae
std
add
test
adc
movs
mov
dec
cwde
cmp
bts
call
cdq
out
sbb
mov
inc
rcl
(bad)
xchg
dec
ret
addr16
and
jg
push
add
mov
mov
jb
aad
adc
xchg
xlat
gs
arpl
popa
inc
pop
pop
pop
sbb
sar
aaa
in
daa
test
test
ins
sub
aad
push
bound
mov
jno
push
arpl
imul
push
test
daa
xchg
push
out
enter
(bad)
rcl
adc
mov
lahf
imul
jns
in
pop
sbb
nop
(bad)
push
mov
fdiv
cli
mov
data16
ja
clc
xchg
ret
repz
repnz
jl
int3
mov
bound
mov
cvtpi2ps
adc
sub
clc
es
push
fidivr
icebp
cmps
vmread
cmps
adc
mov
inc
popa
cwde
call
retf
sbb
test
jge
js
mov
cmp
mov
inc
or
push
and
push
call
jno
jge
loopne
scas
and
push
arpl
lock
ret
add
inc
fs
push
movs
inc
imul
xchg
push
sub
xor
pop
xchg
xor
fisub
scas
dec
mov
push
sbb
stos
scas
das
and
fimul
test
push
push
ja
mov
les
data16
pop
sbb
popf
movs
push
or
xor
fs
arpl
mov
pop
push
sub
fsubr
aad
push
mov
enter
jne
mov
pop
cmp
pop
jnp
jle
mov
mov
xchg
mov
iret
and
xchg
ret
pop
ins
shl
popa
mov
add
or
xor
xor
popa
xlat
add
fcomip
scas
adc
cli
cmps
(bad)
int
cmp
ins
std
push
adc
ins
sbb
pop
cmp
sub
jp
ja
xchg
or
cmp
lods
dec
dec
xchg
and
dec
ins
xor
dec
popa
sbb
and
ret
sub
push
stos
in
adc
outs
in
in
out
or
mov
bound
(bad)
(bad)
movs
xor
mov
pop
sub
xor
cmps
push
or
fs
adc
icebp
iret
push
fwait
xor
shl
iret
fwait
mov
dec
ja
stc
je
arpl
push
mov
mov
inc
into
pop
or
popf
in
ret
sbb
adc
add
pop
loope
rol
sub
mov
or
or
clc
mov
movs
pop
fcom
mov
cdq
or
pop
jbe
cmp
std
call
adc
test
jne
mov
mov
movs
ret
mov
sbb
out
imul
and
cmp
jne
sub
leave
fucomp
fdiv
inc
into
movs
pop
arpl
retf
movs
or
aaa
aad
lds
xor
mov
aaa
mov
xor
icebp
add
aas
mov
(bad)
push
mov
jl
rol
jno
shl
(bad)
cmps
das
hlt
sub
jnp
xor
loopne
xchg
pop
push
jmp
or
push
mov
sbb
add
jp
pop
push
pop
sbb
imul
inc
outs
jle
mov
mov
imul
jno
xchg
in
mov
mov
inc
inc
mov
pop
mov
xor
int3
xor
stos
int
sbb
add
mov
jmp
mov
and
in
and
dec
or
jl
sahf
pop
(bad)
xor
inc
mov
ja
iret
nop
idiv
and
dec
call
push
(bad)
in
sbb
and
lods
div
js
mov
pop
icebp
ret
mov
cmp
sbb
add
daa
sbb
jo
xor
sbb
(bad)
pop
xor
aam
fild
push
(bad)
sbb
inc
pop
push
inc
shl
mov
cwde
and
dec
jmp
lods
adc
push
mov
push
ficom
into
inc
scas
push
xchg
pop
js
mov
mov
nop
pop
ret
hlt
or
mov
push
pusha
sahf
inc
(bad)
jecxz
dec
xchg
mov
push
out
dec
jae
push
outs
push
mov
adc
xchg
int
in
pop
xlat
xor
jle
jl
xor
mov
pop
add
xor
call
dec
call
retf
sub
dec
jo
mov
aad
dec
daa
add
adc
xchg
jmp
jl
(bad)
jmp
or
cmps
clc
jg
pop
out
pop
and
pop
dec
or
test
scas
enter
sahf
jns
(bad)
in
mov
xor
in
clc
dec
push
mov
jp
cmp
sub
pushf
fstp
test
ret
lock
jecxz
pop
mov
jne
mov
and
stos
sub
push
sar
sar
ja
dec
repz
(bad)
dec
and
loopne
inc
add
mov
test
mov
jle
fcomip
fwait
and
mov
hlt
or
xchg
retf
rcr
mov
test
popf
adc
test
ret
out
idiv
add
das
out
dec
dec
sbb
mov
mov
add
lods
add
cmp
push
xor
shr
mov
mov
push
and
cmp
xor
fmul
push
sahf
and
stos
add
shl
mov
sbb
les
lahf
clc
leave
mov
add
xchg
cmp
jae
xor
dec
sub
dec
or
sub
mov
xchg
pop
cmc
loopne
and
or
loope
test
jl
stc
outs
jl
es
in
pushf
pop
push
mov
nop
outs
fwait
push
dec
sub
bound
push
xor
push
daa
sbb
pusha
adc
adc
sbb
sar
pop
das
and
ret
mov
dec
repnz
cmp
add
and
jp
clc
in
imul
sub
mov
cmp
cmp
sub
sahf
shl
cmps
out
xor
in
pop
(bad)
lahf
or
test
dec
push
sub
mov
pop
aad
int
cmps
cmps
and
loopne
pop
xor
call
scas
inc
scas
leave
mov
mov
cmp
and
pop
mov
xlat
sbb
mov
in
and
jg
mov
outs
lea
or
jmp
pop
lods
add
push
in
(bad)
pop
jmp
call
mov
les
and
mov
stos
mov
ins
adc
dec
cmps
sbb
jmp
or
das
cmp
xchg
test
dec
pop
inc
or
jge
xchg
mov
test
xchg
mov
fsubr
sbb
aas
not
je
mov
mov
mov
mov
sbb
push
int
in
dec
aas
sti
dec
stc
mov
popa
and
cmp
retf
push
dec
cmp
xor
inc
out
jo
lea
push
xor
inc
rol
dec
mov
xchg
loopne
jmp
xor
xchg
lea
add
gs
movs
hlt
fld
push
xchg
xor
(bad)
adc
ds
sbb
bound
pop
lock
sahf
(bad)
fcom
or
rcr
cvtps2pd
dec
rcl
(bad)
leave
fiadd
icebp
inc
call
sub
test
pusha
add
out
ret
jle
imul
add
pop
mov
es
dec
and
mov
xor
rol
icebp
pop
test
push
pushf
mov
jbe
sub
lds
pop
add
cmp
push
jmp
outs
in
out
out
mov
mov
push
push
ins
inc
outs
mov
add
not
add
sub
sub
pop
pop
ds
cmps
stc
sub
inc
pushf
mov
or
je
lods
repz
inc
nop
sbb
or
mov
ja
and
mov
out
mov
push
(bad)
cmp
mov
mov
ins
gs
mov
cld
clc
push
popa
or
mov
adc
ja
mov
push
push
push
stos
adc
faddp
jb
mov
adc
mov
inc
out
out
xor
movs
push
shr
mov
test
jmp
imul
mov
xchg
xlat
inc
sbb
sbb
mov
retf
inc
sub
xchg
mov
mov
cli
or
xor
lods
ja
in
and
ds
sub
lds
inc
fadd
pop
int
push
repz
mov
les
fsub
push
sub
outs
pusha
out
add
(bad)
icebp
mov
sub
stos
xor
scas
retf
imul
push
mov
push
dec
pop
ficomp
mov
push
repnz
add
call
nop
ins
fstp
cdq
mov
mov
pop
mov
stc
in
jmp
cmps
mov
jmp
push
dec
mov
stos
adc
cld
cmp
sub
hlt
outs
and
mov
imul
sub
jp
test
dec
cwde
add
xor
push
(bad)
push
out
push
sub
dec
pop
cdq
(bad)
sbb
popf
inc
or
jecxz
dec
inc
ins
out
loopne
rol
dec
popa
xchg
push
imul
aad
lods
pop
stc
ss
movs
aas
loopne
pop
push
cmp
jmp
adc
dec
test
movs
icebp
out
pop
or
loopne
xor
shl
sub
xchg
sub
mov
xchg
outs
push
sub
addr16
xchg
jno
adc
rol
retf
mov
inc
mov
and
pop
imul
ins
out
pushf
cdq
dec
xchg
pmullw
(bad)
lods
jecxz
(bad)
icebp
(bad)
sbb
fwait
sti
jb
out
jnp
push
sub
xchg
lea
jnp
test
or
mov
out
sahf
daa
mov
sahf
mov
dec
xchg
pop
mov
data16
outs
int
popf
dec
mov
test
adc
repz
(bad)
ficomp
add
push
scas
adc
push
add
pop
xor
or
fadd
pop
sti
imul
add
sahf
mov
fxch
fisttp
adc
cs
xchg
mov
test
adc
pop
inc
(bad)
daa
pushf
inc
mov
jp
and
test
cmp
mov
fiadd
loope
outs
dec
jl
mov
(bad)
mov
add
mov
xchg
cdq
jmp
mov
pop
(bad)
xchg
mov
mov
rol
cmps
int3
push
push
aad
test
les
loop
ror
jb
jae
xor
clc
jg
scas
inc
dec
dec
xlat
iret
imul
loope
out
cs
outs
lahf
xlat
push
xor
pop
fs
scas
cmp
aas
inc
ss
ja
push
xor
arpl
idiv
xor
adc
ret
lods
aad
gs
mov
mov
cmps
iret
ss
or
(bad)
jp
lods
sub
adc
dec
jg
outs
or
xchg
das
sub
dec
jecxz
and
lea
xchg
sti
lods
or
std
movs
add
sub
fs
(bad)
rol
mov
or
div
jmp
ds
push
adc
rcr
rol
mov
loope
push
in
pop
jb
add
jae
ret
bound
xchg
mov
jl
add
dec
ror
add
pop
jle
dec
mov
pop
jmp
push
addr16
dec
mov
jecxz
mov
and
ins
push
cdq
push
or
fidiv
repz
fwait
xlat
stos
out
icebp
cmp
cs
and
movs
sbb
ja
add
jb
pop
or
mov
dec
mov
fisubr
adc
xor
ins
mov
push
dec
pop
mov
push
retf
pusha
add
out
cwde
jns
cmps
and
rol
sub
sub
sbb
(bad)
in
retf
dec
lea
or
or
jb
dec
dec
pop
imul
in
cmp
jne
sbb
mov
test
mov
xchg
jecxz
leave
and
int
retf
mov
test
dec
outs
sbb
cmp
jno
test
mov
adc
data16
(bad)
repz
cmp
adc
xor
loop
shr
push
jmp
sub
pop
fild
ja
in
cmp
jge
mov
je
stc
out
jmp
jmp
cmp
ret
sti
and
push
cmp
mov
push
xchg
stos
sub
mov
xchg
sbb
jbe
pop
or
popa
xchg
(bad)
loope
push
sub
mov
xor
fs
(bad)
hlt
daa
or
loope
or
and
xor
mov
movs
mov
retf
(bad)
pop
lds
add
jbe
jge
or
dec
adc
aam
repnz
jecxz
(bad)
das
lock
aas
shl
push
out
sbb
inc
icebp
or
mov
jmp
adc
inc
mov
adc
bound
sub
sub
pop
mov
js
push
jo
enter
jo
pop
dec
out
mov
es
mov
dec
jb
xor
fiadd
cmc
jb
out
bound
test
sbb
dec
cmc
dec
lods
test
fst
sahf
sub
loop
test
fisttp
arpl
fnstsw
stc
test
xchg
mov
jb
sbb
sub
(bad)
ins
or
sbb
inc
or
shl
(bad)
out
sahf
or
xchg
jle
mov
out
pop
not
and
ja
mov
jmp
adc
test
and
dec
(bad)
fisubr
xchg
push
mov
arpl
adc
cmps
cs
xchg
pusha
xor
mov
(bad)
iret
and
outs
mov
xor
cmp
add
sbb
or
das
sbb
rcr
mov
cmp
sub
cmp
push
cmp
pop
imul
sar
jae
mov
ins
pop
jo
mov
pop
pop
(bad)
push
and
xor
fdivr
addr16
pop
retf
scas
xchg
in
xor
pop
inc
bound
movs
int3
pop
int3
xor
jae
ret
xor
outs
xor
fldcw
es
dec
fimul
mov
rcl
inc
mov
xchg
movs
js
xchg
(bad)
out
aaa
(bad)
sar
push
jg
mov
sbb
test
pop
push
or
mov
out
add
dec
je
jb
xchg
fmul
out
fbld
loopne
aad
or
popa
cmc
(bad)
in
les
test
add
movs
or
call
push
(bad)
mov
dec
popf
pop
xchg
xchg
js
sub
push
mov
sub
call
leave
jnp
ja
sti
shl
pop
cmp
mov
fpatan
mov
push
push
cmc
mov
sbb
mov
xlat
aad
add
lock
cmps
mul
sahf
sub
les
mov
mov
mov
lock
iret
cmp
cld
in
sub
lock
cmp
ins
cmp
in
xor
xlat
mov
jae
mov
xchg
(bad)
fcmovne
cmp
adc
adc
mov
pop
pop
push
cmps
ds
scas
mov
test
or
adc
push
mov
jnp
imul
mov
je
dec
test
push
ds
hlt
fwait
mov
adc
push
mov
or
jg
ins
retf
push
push
ret
pop
repnz
popf
shr
repnz
pop
push
push
mov
dec
sub
adc
fcomp
pusha
push
dec
jg
nop
add
cmp
ds
jae
mov
cmp
lea
and
jmp
mov
ja
test
loopne
in
in
sbb
je
mov
sub
imul
cld
sbb
push
fst
nop
retf
stc
dec
adc
or
jge
mov
jp
test
ds
sti
test
mov
mov
xlat
(bad)
dec
xchg
repnz
adc
and
inc
stc
pop
aas
adc
sub
clc
dec
mov
or
cmps
fwait
sbb
int
cmp
lods
pop
xchg
out
ret
retf
out
jge
inc
or
jns
test
rcl
lock
retf
out
mov
inc
les
sub
xchg
stc
pushf
xchg
ins
add
dec
adc
or
daa
jnp
pop
cmp
pop
xor
add
fwait
xor
mov
iret
sub
hlt
hlt
sub
pop
and
out
ror
pushf
or
and
xor
into
icebp
pop
add
dec
sar
int3
std
xchg
sahf
inc
mov
jmp
pop
inc
bound
mov
xor
(bad)
mov
out
mov
adc
cmc
xor
inc
test
fwait
ja
imul
adc
inc
call
push
mov
mov
jl
xchg
ret
(bad)
jmp
leave
retf
mov
lds
sub
push
ss
add
inc
add
add
das
lods
xchg
lods
or
iret
ror
push
fcom
fidiv
adc
sub
fs
inc
in
ins
xchg
in
add
jge
xchg
xor
cmc
and
xor
cmc
mov
mov
leave
sbb
call
fs
arpl
jp
shl
pusha
mov
movs
xchg
ret
adc
shr
pop
mov
outs
sub
xchg
add
push
pmulhw
jno
in
shl
mov
cmp
mov
cmp
movs
mov
gs
std
push
mov
fld
test
xchg
fild
sub
sbb
inc
jno
rol
fild
xor
add
aas
(bad)
jmp
mov
push
pop
xor
or
lahf
sbb
imul
jg
ss
nop
jle
mov
fild
jno
or
stc
mov
mov
(bad)
jbe
lods
mov
push
sub
mov
mov
mov
push
es
rol
and
ret
mov
iret
xor
jo
adc
pop
daa
pop
test
or
pop
aad
cdq
in
xor
cmp
icebp
inc
clc
cmp
iret
sub
cmp
arpl
mov
shr
push
sti
cs
xchg
jbe
sbb
aas
sti
mov
lea
ficom
mov
pusha
add
pop
ja
cmp
ins
mov
inc
inc
shl
sbb
adc
fwait
inc
or
and
add
inc
adc
gs
gs
movs
in
movs
nop
jg
jg
lods
mov
ja
mov
je
test
adc
xchg
sbb
sub
les
jno
ins
dec
int
fsub
push
loope
mov
arpl
movs
les
mov
cmps
fcomp
and
icebp
pop
push
pop
fidiv
and
mov
mov
dec
adc
(bad)
xlat
add
push
sahf
cmp
fidiv
in
xlat
jno
les
pop
dec
popw
(bad)
sar
add
push
cs
mov
inc
scas
(bad)
repnz
movs
ins
cmp
inc
aaa
lods
dec
pop
sbb
sti
retf
sub
fdivr
sub
cmp
push
push
ficom
sbb
pop
cmp
aam
xor
repz
mov
in
ret
in
lds
pop
in
ins
hlt
sbb
call
and
adc
pop
test
xor
in
dec
add
fdivr
lods
aas
out
or
loope
paddusb
cld
pop
arpl
cmp
jmp
div
shl
sar
das
mov
dec
test
shl
aas
test
repz
jmp
add
rol
mov
and
add
out
cmp
cmps
add
and
pop
pop
div
sbb
or
sub
enter
out
mov
mov
je
rcl
inc
sbb
pop
and
inc
test
popa
lds
mov
jo
mov
cwde
(bad)
cmp
add
mov
mov
test
mov
cmp
add
imul
jnp
icebp
jle
std
dec
cwde
add
arpl
mov
loop
or
ficomp
mov
icebp
fisub
stos
imul
or
inc
mov
retf
cmp
dec
and
jmp
mov
mov
out
test
xchg
test
in
je
mov
outs
out
cmp
lds
mov
pop
push
mov
popf
or
stos
sub
inc
adc
add
jno
aam
cmps
add
adc
push
mov
dec
fwait
dec
sbb
cmp
or
sar
mov
cmps
or
adc
mov
add
and
xlat
int
and
pop
sub
nop
shr
push
mov
sub
ret
jo
push
xchg
push
popf
sbb
jecxz
mov
stos
jno
mov
sbb
mov
inc
ror
mov
dec
cmps
dec
mov
add
jl
mov
daa
(bad)
mov
mov
call
mov
inc
ret
lods
push
push
push
push
and
pop
push
cdq
jmp
ins
jmp
(bad)
jmp
cmc
jnp
sbb
jbe
jae
stc
icebp
neg
loop
adc
pop
data16
dec
jns
out
mov
jmp
mov
mov
adc
jae
mulps
push
popf
push
lods
shl
lock
out
mov
das
or
jmp
add
mov
inc
jp
xlat
in
jmp
in
stos
scas
jae
adc
jp
push
jp
push
dec
aaa
das
xchg
xchg
ins
mul
push
cmps
ror
mov
aad
fcmovne
arpl
jbe
(bad)
lds
rol
adc
push
lahf
test
dec
mov
mov
mov
xor
scas
cli
dec
xchg
sbb
outs
mov
aad
and
sbb
sub
in
cli
mov
dec
jle
sahf
adc
int3
mov
push
mov
jmp
pop
dec
push
or
js
adc
jl
fnstenv
scas
inc
loopne
je
or
mov
bound
stos
pop
or
push
sub
sub
mov
jmp
lock
shl
dec
mov
les
mov
cmps
add
jnp
pop
stos
inc
pop
iret
cmp
cdq
scas
jmp
lds
dec
add
test
xor
fnsave
fcomip
lahf
in
xchg
add
push
mov
stos
xchg
dec
jg
xor
scas
dec
xchg
mov
xor
ja
stos
clc
jno
dec
or
sbb
push
je
ss
xchg
lahf
mov
fld
movs
les
mov
rcl
sahf
(bad)
jns
and
add
in
inc
scas
jbe
stc
sbb
push
pop
out
inc
pop
or
lods
mov
scas
dec
fsub
adc
adc
mov
xor
les
in
jo
or
or
xchg
adc
push
dec
imul
fisttp
loopne
mov
es
jnp
outs
add
enter
pusha
xchg
fistp
pop
fisttp
int
ret
fsubr
jae
mov
into
dec
(bad)
or
lods
pusha
imul
loop
mov
jmp
and
arpl
imul
push
jno
retf
cmp
mov
xor
sbb
mov
pop
ror
or
jns
fstp
xlat
push
jb
mov
(bad)
in
push
loopne
jns
popf
dec
jp
icebp
pop
cmp
jle
mov
idiv
mov
xor
dec
ss
or
push
mov
iret
push
in
sbb
(bad)
jmp
cs
ret
fld
cmp
dec
mov
movs
xchg
ret
nop
leave
jl
xchg
js
xor
mov
sti
cmp
adc
push
sbb
fdivrp
in
jge
sub
in
repnz
sti
mov
sti
pop
test
mov
sahf
rcr
push
(bad)
mov
loope
add
scas
fdivr
and
xor
int
call
mov
stc
test
adc
loopne
xchg
fidivr
sub
mov
enter
repz
mov
add
fdiv
movsx
or
fidiv
dec
jmp
lds
jno
inc
mov
or
or
mov
xchg
aaa
sub
call
xchg
mov
adc
ss
loope
int3
test
mov
xchg
or
test
xchg
test
pop
(bad)
xor
loop
cld
dec
(bad)
out
out
test
jp
push
jmp
pop
push
and
jmp
pop
xchg
mov
xor
or
inc
dec
pop
stos
sub
xchg
sub
rcl
add
aam
mov
inc
(bad)
mov
mov
popa
jle
test
popf
ret
sub
pop
cmc
jmp
es
daa
sti
scas
lea
(bad)
lahf
rcr
pushf
or
mov
mov
test
outs
add
fmul
js
pop
xchg
jns
dec
cmp
sbb
jno
nop
cmp
arpl
mul
jno
cdq
cli
inc
xlat
cmc
movs
mov
and
pusha
inc
out
and
in
and
test
aaa
add
addr16
adc
aas
push
ja
push
sti
adc
add
dec
dec
je
xor
in
mov
or
rcl
mov
adc
test
cli
into
movs
sub
push
mov
enter
scas
dec
dec
mov
addr16
test
inc
mov
xor
rol
(bad)
xor
(bad)
aaa
mov
and
jae
jo
dec
mov
cmp
fsub
or
out
sbb
into
std
inc
nop
aam
xor
outs
sbb
scas
mov
adc
and
out
aam
lds
mov
jnp
mov
ins
ret
jl
(bad)
cli
xlat
mov
dec
ror
in
inc
xor
arpl
jno
aam
pop
pop
add
adc
rcr
mov
push
xor
in
adc
adc
mov
ins
and
lods
ds
ja
mov
int
jns
imul
test
pusha
sub
rcr
rol
jbe
rcr
scas
inc
mov
mov
es
rcr
mov
xchg
imul
fnstcw
mov
mov
pop
mov
xor
lahf
in
shl
outs
aaa
out
pusha
pushf
xor
dec
xor
add
jb
cmp
xchg
repnz
aaa
aaa
cli
xchg
push
xchg
enter
and
jle
push
cs
xchg
or
add
sub
pop
sbb
xor
(bad)
inc
(bad)
sub
nop
(bad)
fild
xchg
mov
call
xor
mov
aam
dec
cdq
hlt
pop
and
cwde
leave
pop
in
(bad)
(bad)
mov
int
jl
xchg
vmulpd
xchg
jle
aam
data16
push
jbe
paddusw
sahf
mov
push
ror
into
xchg
clc
stc
jbe
ins
mov
jb
xchg
pop
lock
ds
xor
lods
pop
xchg
sti
inc
jp
icebp
enter
lock
in
hlt
in
loopne
xchg
dec
sbb
and
cmp
inc
sbb
lea
repnz
(bad)
push
cmp
and
popf
pop
mov
out
mov
mov
xor
cmps
push
(bad)
iret
jge
(bad)
dec
aam
sub
pusha
mov
imul
mov
pop
mov
push
dec
push
push
addr16
cld
sbb
pop
adc
mov
inc
out
mov
fld
xchg
jle
inc
xor
or
or
inc
dec
sbb
in
inc
movs
ret
and
into
xchg
packssdw
pusha
fadd
dec
and
cwde
je
out
sub
or
pop
(bad)
lods
or
sbb
xchg
fmul
shl
add
mov
adc
stos
out
std
call
and
cmp
jb
and
stc
movs
or
leave
pop
dec
dec
shl
pop
dec
mov
mov
test
mov
aam
cmps
je
cli
mov
mov
dec
inc
and
push
je
fiadd
add
retf
mov
mov
mov
or
pop
jnp
loopne
jne
adc
mov
std
cmp
adc
adc
int3
(bad)
pop
mov
pop
sub
movs
adc
mov
and
rol
stc
stc
movs
movs
pop
fcom
cmp
sub
out
pushf
sbb
out
cwde
pushf
(bad)
(bad)
ins
dec
push
add
(bad)
or
(bad)
push
call
and
xchg
xor
xor
mov
jmp
xlat
in
mov
mov
adc
mov
jae
(bad)
mov
push
test
jo
sbb
xchg
push
loope
addr16
xor
mov
adc
in
push
dec
lods
xchg
call
inc
add
fs
xchg
out
inc
jne
jne
pop
mov
mov
mov
jns
push
imul
inc
out
cli
(bad)
int3
fwait
ins
pop
xchg
fs
aad
shl
jmp
cmp
lock
movs
add
pop
pop
mov
aaa
rcl
mov
or
mov
dec
push
mov
call
jno
mov
push
jmp
lods
fsubr
cmc
cmp
lods
pop
add
push
cwde
pop
mov
adc
loop
movs
imul
pop
add
call
repz
pop
sub
repz
jo
mov
sbb
xor
sub
mov
xor
sub
aaa
add
xchg
retf
outs
iret
(bad)
call
pop
xor
dec
xor
or
jmp
xor
sbb
ficomp
jmp
or
mov
push
pop
pop
add
push
push
cmp
(bad)
xchg
jg
sbb
xchg
repnz
ret
into
aaa
sbb
push
sbb
sbb
(bad)
rol
xor
dec
jmp
sub
and
xor
cli
mov
adc
pop
cmp
test
xchg
dec
or
sbb
imul
in
mov
cmps
addr16
cwde
aad
sahf
adc
dec
cmp
stos
jno
inc
add
ins
icebp
ret
repnz
dec
jae
inc
add
cmp
imul
les
popa
adc
ins
or
out
cmovs
pop
push
mov
int3
lahf
pop
mov
outs
pop
fld
daa
cmc
add
retf
call
jge
fld
ds
es
pop
jo
mov
fs
mov
cmp
aaa
ins
loop
pop
mov
or
pop
inc
pop
jge
shl
jae
adc
outs
es
add
icebp
addr16
push
jo
dec
add
push
sub
cmp
add
fwait
push
mov
sti
cwde
(bad)
loop
fcomp
mov
push
adc
shr
cmp
lds
or
xor
imul
pusha
test
xor
push
lea
add
mov
and
daa
fld
in
push
scas
ret
in
jp
sbb
mov
outs
jmp
outs
add
imul
hlt
push
sub
jg
sbb
stos
test
test
leave
and
push
lahf
xor
rol
cmp
repz
ss
mov
imul
lods
mov
add
sbb
sbb
retf
arpl
call
into
mov
push
pop
ret
aas
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
sub
add
jle
(bad)
jg
pop
jecxz
push
mov
inc
enter
lahf
(bad)
mov
and
aad
mov
inc
or
shr
shl
cmp
mov
xor
sti
inc
fnstenv
sahf
dec
lods
add
inc
es
call
out
mov
ret
idiv
inc
repnz
push
pop
in
mov
lock
clc
mov
push
(bad)
repz
in
cmc
push
jbe
inc
push
gs
push
pop
gs
and
call
mov
cmp
mov
jp
ins
dec
push
dec
das
es
jge
add
sbb
jmp
fwait
adc
jg
sub
into
aas
or
xor
ret
sub
je
sar
xlat
rol
pop
dec
inc
gs
inc
mov
pop
mov
imul
jb
mov
lods
mov
std
in
mov
or
mov
std
mov
and
push
fwait
jae
and
and
add
push
pop
pop
pushf
push
scas
add
add
mov
or
cld
bound
out
shl
mov
jg
out
ss
pusha
and
or
push
mov
sub
loopne
stos
add
(bad)
test
push
pop
popf
pop
sub
lss
push
mov
jge
pop
cmp
call
jb
dec
xchg
sar
test
clc
lods
xor
push
in
dec
sbb
dec
sbb
lds
sub
stos
xor
push
ret
arpl
adc
repnz
pushf
or
inc
dec
jp
sbb
and
leave
and
jmp
jbe
js
jmp
loope
lods
cmp
inc
mov
jg
(bad)
outs
sbb
add
icebp
lds
cld
and
in
cmp
bswap
cmc
arpl
cmp
les
test
cs
scas
or
xchg
sub
mov
pop
push
rcl
xor
ret
push
dec
sub
dec
cmp
cmp
cmps
inc
push
push
loop
pop
inc
loopne
ss
jae
mov
inc
int3
daa
adc
ins
push
ret
sub
sbb
pop
xchg
xchg
add
inc
fucomp
arpl
adc
retf
and
mov
or
jnp
or
and
inc
xor
lea
cmp
mov
jno
pop
sahf
scas
pusha
push
adc
or
xor
popa
fst
fsub
rcr
stos
test
mov
(bad)
lock
sub
test
fdiv
or
icebp
es
xchg
add
js
push
je
xchg
push
retf
outs
out
cmp
test
lea
sub
cmp
mov
bts
mov
loop
adc
sub
lahf
pushf
lds
sbb
pop
pop
pop
mov
es
mov
mov
mov
push
jmp
repz
or
cmp
ret
pop
add
pusha
iret
dec
dec
aam
push
shl
icebp
dec
xor
(bad)
fadd
add
fidiv
shl
mov
xchg
fadd
mov
pop
push
in
shl
ret
fmul
inc
inc
mov
hlt
mov
int3
dec
repz
and
dec
mov
mov
mov
mov
jbe
jp
test
and
xor
pop
arpl
or
xor
dec
mov
stos
mov
jnp
std
xchg
cdq
(bad)
xchg
mov
add
clc
push
shl
stos
add
push
sbb
lods
fstp
adc
mov
jnp
mov
int3
sub
cli
fdivr
inc
loopne
jmp
inc
adc
sub
mov
daa
sbb
sub
imul
shr
jb
out
adc
push
scas
pop
stc
and
popa
sub
sub
cmp
xor
clc
or
rol
hlt
or
dec
jb
les
dec
les
or
enter
popa
and
mov
into
hlt
or
cmp
mov
test
xchg
aad
lahf
(bad)
fnstsw
push
int3
sbb
xchg
imul
ja
repnz
cs
test
xor
push
fwait
into
push
mov
xor
cmp
pop
jbe
jg
xchg
lock
xchg
ror
mov
aaa
mov
fs
jle
fldenv
dec
into
enter
loop
gs
push
outs
sub
cmps
ins
or
ds
cld
jle
sbb
mov
dec
jge
mov
or
add
scas
inc
call
jp
out
jmp
cmp
test
sahf
fimul
inc
ficom
loop
nop
mov
je
in
xchg
shl
mov
cdq
pop
test
out
aad
cmps
cld
imul
clc
mov
imul
stos
lods
lods
mov
push
les
xchg
and
or
aaa
ror
add
cmp
int
inc
adc
aad
call
scas
sub
dec
push
pop
sbb
pop
cs
push
push
aas
xlat
jnp
adc
dec
push
fwait
mov
shr
pop
scas
shl
ret
test
and
or
mov
push
sbb
jns
mov
popf
sub
pushf
add
mov
fmul
jg
push
jge
shr
adc
adc
std
cmps
in
pop
adc
fldenv
xchg
aam
add
mov
je
inc
(bad)
in
pusha
mov
inc
pop
add
mov
fisttp
jne
inc
or
push
jnp
mov
in
add
jl
dec
mov
cmp
push
jne
popf
outs
dec
or
jne
inc
push
icebp
jmp
arpl
in
push
cld
xchg
fnstcw
mov
test
xchg
mov
ins
nop
test
sub
mov
inc
push
fwait
ss
cmp
xor
std
xor
lahf
ror
retf
pop
add
into
add
jb
mov
repnz
sbb
(bad)
jl
sub
lods
mov
mov
gs
mov
scas
sbb
mov
ins
sbb
mov
push
xor
(bad)
xchg
inc
retf
jnp
arpl
(bad)
(bad)
jmp
xor
icebp
jb
aad
aad
cmps
ret
inc
push
inc
icebp
test
outs
cmp
aaa
sbb
fs
jg
arpl
jp
in
sbb
outs
icebp
push
retf
popa
jbe
cdq
clc
ds
leave
jno
cmp
stc
fdivr
test
vmulss
out
rcl
and
inc
sti
jnp
icebp
je
test
xchg
inc
inc
ins
mov
sbb
jnp
mov
enter
or
ror
andps
cmp
inc
cld
jmp
push
call
iret
jnp
xchg
push
retf
call
movs
and
leave
xor
addr16
push
dec
rol
and
mov
das
fisub
inc
mov
scas
bound
mov
loop
call
test
mov
cwde
int3
inc
leave
mov
pop
cld
and
xlat
loop
sbb
mov
repz
sbb
and
mov
(bad)
cmp
popf
aad
or
loope
xchg
stos
call
cli
in
jne
xlat
fadd
in
daa
cwde
cmp
(bad)
cmp
xor
xor
add
repz
and
call
lock
jns
adc
imul
push
(bad)
into
je
popa
mov
sub
inc
test
jae
das
aam
pusha
mov
call
ins
xchg
mov
repnz
test
fnstcw
mov
or
jne
test
leave
mov
jno
cmp
sbb
cmps
test
rcl
loope
jbe
(bad)
push
cmps
push
jle
in
jnp
inc
sub
mov
inc
mov
inc
sbb
mov
mov
sahf
loopne
xor
add
add
mov
lds
aad
jno
jecxz
aam
fisubr
mov
pop
and
fs
enter
add
add
jb
mov
repnz
retf
pop
lods
ret
mov
sbb
aam
inc
loope
cmp
mov
adc
arpl
jecxz
mov
(bad)
call
push
sbb
adc
push
mov
rcr
imul
sbb
mov
ja
fidivr
xchg
xchg
sub
push
add
push
ss
outs
push
aad
xor
mov
std
in
sbb
aam
imul
iret
dec
add
in
mov
or
xchg
dec
mov
xlat
adc
push
loopne
rol
stos
loop
sbb
outs
push
mov
mov
mov
adc
gs
inc
cmp
pop
push
mov
pushf
in
xor
(bad)
fist
sub
cs
xchg
mov
pop
test
mov
retf
je
or
xor
cli
loope
lock
scas
inc
xchg
rsm
or
jge
test
xchg
popf
fbstp
hlt
ret
pop
loop
mov
or
outs
(bad)
dec
cld
sub
std
lods
jg
imul
daa
dec
jl
push
scas
stos
bound
xor
sbb
mov
ins
or
loop
xchg
lahf
cli
inc
and
(bad)
jge
shl
sub
cld
nop
fldenv
aad
call
sahf
adc
adc
dec
test
les
push
cwde
pop
std
mov
cmp
inc
scas
pop
pop
jb
std
xchg
adc
loope
push
cmc
jl
sub
movs
inc
cmp
dec
fisub
or
or
call
push
(bad)
fild
arpl
push
push
cmps
adc
(bad)
dec
xchg
or
aas
sbb
pop
mov
sahf
or
add
xor
jno
inc
sbb
mov
gs
cdq
mov
out
(bad)
jae
sti
and
call
out
clc
repz
dec
fistp
mov
jno
mov
adc
stc
cld
add
mov
retf
pop
jp
xchg
xor
in
adc
call
cmp
dec
sbb
(bad)
mov
lods
sti
clc
xchg
cdq
cwde
dec
loop
popa
pusha
dec
clc
ret
push
sub
out
mov
mov
cs
push
dec
int
push
jmp
pop
and
ja
fnstenv
int3
sub
lahf
pop
pop
aaa
sub
dec
aas
jg
jbe
sbb
mov
inc
dec
jl
pop
xor
jb
(bad)
enter
mov
inc
push
mov
aam
test
cli
aaa
jo
pop
adc
mov
mov
sahf
xor
pop
into
cld
stos
mov
mov
push
lds
adc
stos
rcr
pop
mov
ret
cmp
dec
jecxz
dec
leave
cmp
xor
or
cmp
add
sub
xchg
retf
sbb
out
xor
or
mov
movs
jge
scas
mov
test
aad
fs
push
shl
inc
cdq
outs
pop
jb
icebp
xchg
mov
xchg
dec
fprem1
mov
mov
fistp
fstp
cmp
add
clc
cwde
sub
mov
or
lea
cwde
push
and
outs
and
loop
jle
fnsave
shl
push
jae
loop
mov
scas
or
push
fnstcw
call
iret
mov
sbb
retf
shl
mov
lds
in
sar
stc
int
aaa
jns
push
inc
jno
outs
aad
dec
in
inc
xor
(bad)
mov
pop
loope
cmp
jp
sar
inc
push
xor
jmp
cmc
mov
push
retf
test
push
adc
shl
mov
sbb
dec
iret
(bad)
movs
pop
shl
adc
cmp
sbb
pop
xchg
inc
mov
mov
inc
mov
push
mov
push
jmp
mov
call
mov
mov
ins
add
aaa
nop
add
(bad)
sub
pop
mov
data16
or
mov
test
xchg
int3
mov
pop
jne
loope
add
stos
and
fcmovu
push
sub
les
ja
aas
xor
ficom
push
dec
xchg
mov
inc
(bad)
adc
clc
push
(bad)
xor
pushf
xor
inc
mov
push
lahf
fdivrp
scas
mov
sbb
loop
sahf
sbb
icebp
adc
outs
sbb
mov
or
aaa
out
adc
shl
sbb
push
and
imul
scas
dec
out
sub
rcr
cmps
dec
int3
daa
mov
pop
pop
sbb
xchg
adc
(bad)
in
sbb
jbe
dec
xlat
daa
or
jmp
inc
add
jbe
lock
or
imul
mov
jmp
inc
add
xchg
imul
add
sub
or
lahf
pop
test
stc
imul
sbb
popa
and
jmp
push
mov
sbb
and
je
pop
(bad)
sbb
clc
mov
dec
dec
nop
shl
movs
adc
out
retf
icebp
or
mov
hlt
fisttp
mov
fdivrp
(bad)
arpl
pushf
int
sahf
ja
dec
cld
or
cmc
dec
mov
mov
xchg
jecxz
push
clc
mov
hlt
adc
leave
pop
bound
adc
xchg
movs
push
sbb
ds
xor
push
push
rcr
scas
jmp
add
mov
in
test
sahf
xor
and
sub
adc
xor
lds
std
mov
stos
ins
push
or
inc
push
ficomp
into
jl
push
xchg
sbb
sub
xchg
dec
pop
jp
cmc
(bad)
lods
in
retf
aas
shl
pop
test
mov
aaa
cmp
jb
ins
push
test
mov
xor
or
xchg
sbb
push
outs
call
xor
movs
jmp
mov
lods
pop
inc
pop
push
add
cld
pop
test
shl
ds
xor
mov
fadd
iret
sub
add
lahf
loop
stos
rol
enter
clc
mov
mov
(bad)
(bad)
ficomp
(bad)
outs
movs
popf
clc
sbb
mov
repnz
or
outs
fnstenv
icebp
sub
mov
cmp
push
jae
mov
ins
pop
fidivr
jg
fs
aad
sar
mov
push
xbegin
retf
ja
ret
or
in
and
adc
adc
fs
jl
mov
gs
fist
fcmovbe
retf
cmp
and
add
arpl
in
sti
sub
push
test
out
lds
mov
xor
in
jne
jns
add
clc
std
sti
xchg
cmc
adc
or
xor
fwait
sahf
pop
jnp
push
mov
jnp
sub
ficom
hlt
into
popa
mov
retf
lahf
jl
sti
ss
shl
push
cmp
xchg
ins
inc
ret
jmp
mov
shr
sbb
xchg
outs
cmp
(bad)
scas
xor
pop
out
adc
push
pop
mov
pop
aad
cmps
(bad)
jp
call
mov
or
in
daa
popa
jne
fdiv
stos
mov
movs
call
sbb
mov
cmp
add
xchg
in
nop
das
pushf
push
push
call
adc
aam
arpl
mul
aas
pusha
push
adc
xlat
jae
jecxz
pop
out
pop
xchg
and
mov
xor
fbstp
jl
xor
xor
bound
mov
or
jge
(bad)
pop
xlat
aam
and
jne
mov
jns
xchg
dec
ins
lods
and
shl
mov
mov
sub
aam
sti
(bad)
pop
inc
(bad)
xchg
push
sub
push
sbb
jl
mov
fwait
cmp
stos
mov
xor
dec
sub
or
add
in
lock
jg
into
out
mov
or
jle
pop
pop
xchg
shufps
movs
shl
shl
jb
dec
dec
add
nop
(bad)
mov
nop
pop
pop
mov
pop
cmps
bound
or
mov
and
lea
push
sbb
(bad)
sbb
dec
jl
mov
mov
mov
retf
jecxz
jp
push
pop
jge
and
add
cmp
mov
arpl
adc
nop
into
xchg
loope
dec
dec
push
imul
cmps
adc
cmps
sbb
jae
popa
cmps
mov
push
mov
mov
inc
jl
xchg
sbb
rcr
in
ds
xor
cld
int
dec
xchg
ret
popf
xor
mov
push
stc
cmp
xchg
stc
push
mov
bound
das
fisttp
data16
mov
and
fld
add
popf
push
xchg
pop
pop
sbb
jle
ret
sub
cmp
ins
js
xor
(bad)
mov
inc
ficomp
dec
push
rcr
xor
pop
popa
aam
mov
sub
cmp
cwde
pushf
ret
imul
dec
xor
sbb
and
mov
imul
iret
inc
adc
clc
xor
and
pushf
shl
add
lds
xlat
pop
push
iret
xchg
sub
cs
(bad)
sti
or
mov
inc
mov
mov
ss
adc
add
lods
xchg
cmps
jnp
mov
add
movs
sbb
shl
aas
(bad)
fstp
(bad)
xor
test
int3
xlat
push
lahf
clc
mov
inc
add
inc
sahf
xchg
adc
push
cmc
loope
adc
out
or
xor
sub
xor
sti
lea
sub
(bad)
mov
mov
pop
mov
setle
inc
popf
sub
cli
ins
dec
pop
cmp
push
mov
xchg
pop
mov
cli
pop
xor
jmp
loopne
sbb
pop
aad
stos
ins
popf
xor
jmp
leave
nop
sti
mov
add
xor
js
inc
and
xlat
xchg
sar
stc
outs
sub
sti
test
and
inc
jle
dec
mov
sub
push
call
cwde
cmovbe
pop
xchg
(bad)
jecxz
inc
mov
xchg
jle
(bad)
push
push
jmp
and
push
out
sub
es
mov
pop
push
sub
sub
mov
stos
(bad)
push
mov
adc
test
mov
ror
repnz
repz
stos
or
jp
pushw
mov
dec
movs
fld
or
push
xor
fs
or
cmp
or
addr16
pop
shl
add
add
jo
ret
jns
mov
aas
xchg
test
mov
movs
cwde
add
pushf
xchg
or
imul
(bad)
cmps
fisub
cmp
and
(bad)
movs
push
cmp
sbb
sbb
std
sbb
lods
mov
mov
lea
(bad)
out
adc
stos
mov
jae
retf
dec
jbe
jnp
(bad)
mov
movs
popa
inc
mov
or
and
test
xor
out
neg
push
mov
inc
xchg
lods
test
sub
xor
neg
in
mov
popa
xor
cdq
ins
lods
adc
cmp
mov
and
push
call
inc
and
inc
xchg
(bad)
cmp
sahf
outs
jmp
int3
ror
ficomp
pop
mov
repnz
dec
mov
adc
scas
xor
pushf
jo
data16
mov
imul
cli
push
push
push
ja
xor
xor
in
jge
mov
xchg
fstp
mov
fwait
jo
cmps
sbb
adc
and
movs
lods
(bad)
mov
fadd
and
mov
sbb
adc
ins
mov
sahf
clc
sub
inc
mov
xor
imul
mov
cmp
dec
add
cld
(bad)
xlat
nop
lahf
je
outs
out
fisttp
outs
push
rol
adc
mov
add
stc
add
and
dec
fdiv
(bad)
icebp
pop
nop
add
mov
sub
xchg
ins
in
in
jo
sub
pushf
push
sbb
fstp
bound
cmp
add
stos
cmp
std
mov
lea
icebp
jecxz
lods
rcr
mov
adc
xchg
push
inc
cdq
inc
mov
fsub
shl
pop
popf
call
aad
out
fisttp
dec
push
cmp
in
hlt
mov
jbe
jl
mov
push
pusha
or
or
in
adc
inc
push
cwde
rcl
pop
int3
dec
xor
lahf
fcmovnb
xchg
jae
pop
ins
dec
(bad)
out
inc
jle
or
fld
jb
push
(bad)
hlt
faddp
add
in
add
xlat
pop
lahf
or
mov
ss
div
mov
xchg
xchg
push
enter
xchg
or
icebp
outs
scas
dec
out
mov
mov
test
or
jb
repnz
push
inc
mov
adc
push
add
clc
in
test
pop
ja
shr
enter
xchg
retf
and
js
enter
in
or
jl
imul
out
je
push
call
test
mov
mov
clc
push
xchg
push
lods
xchg
mov
xor
sub
add
add
pop
mov
shl
leave
in
fisttp
mov
jmp
push
mov
lock
pop
dec
ja
mov
or
cld
cmp
fimul
mov
cs
test
(bad)
sub
das
je
mov
pop
jp
mov
sbb
mov
outs
mov
stos
loopne
shr
cli
fmulp
(bad)
js
mov
jns
mov
(bad)
sbb
sub
ds
retf
fistp
movs
fyl2x
adc
or
mov
call
aam
clc
or
inc
nop
mov
add
in
push
jecxz
cmp
dec
fdiv
sbb
test
clc
adc
pop
inc
and
aaa
iret
fadd
cmp
cwde
imul
pop
mov
in
mov
jp
jae
or
cmp
pushf
rol
out
inc
(bad)
and
pushf
adc
adc
(bad)
stos
(bad)
(bad)
aam
imul
dec
mov
cmp
scas
push
push
daa
std
in
mov
and
push
scas
mov
stos
pop
sbb
aad
pop
adc
mov
(bad)
arpl
fcmovnu
and
add
fcom
and
imul
je
out
xchg
and
pop
rcr
cmp
sub
mov
movs
test
movs
jae
setb
and
into
push
out
nop
inc
test
out
dec
inc
(bad)
std
add
in
movs
ss
push
out
inc
inc
adc
cmp
push
xchg
int
sbb
shl
add
dec
or
dec
sbb
pusha
call
cmp
push
ins
mov
mov
xchg
cmp
xor
scas
and
ins
imul
and
add
mov
aaa
push
call
push
nop
arpl
mov
imul
xor
fs
sub
jge
and
test
leave
xor
mov
pop
iret
mov
add
call
pushf
mov
xor
mov
cdq
jno
repz
push
aaa
adc
hlt
test
mov
popf
mov
(bad)
jmp
cmp
or
cmp
dec
add
icebp
aas
push
sbb
mov
daa
scas
push
push
stos
test
(bad)
xchg
sbb
pop
push
lock
fwait
in
mov
or
fs
xlat
sbb
xor
mov
(bad)
pop
sti
or
inc
pushf
and
test
(bad)
loopne
aad
(bad)
pop
out
and
and
xor
scas
dec
mov
sbb
push
mov
dec
mov
adc
aad
mov
es
push
lock
mov
push
fmul
(bad)
adc
nop
cmp
jb
pop
cli
loope
xchg
dec
xchg
lar
retf
mov
push
ins
adc
jb
jno
mov
dec
push
popf
(bad)
bound
cmp
add
cmc
mov
mov
dec
dec
imul
mov
sbb
jg
in
add
loope
arpl
xchg
cmp
aas
fwait
cmp
(bad)
test
clc
bound
jb
sub
xchg
out
stc
mov
push
push
(bad)
sub
cwde
dec
mov
sti
lahf
or
stc
dec
xor
dec
fsub
mov
adc
xor
mov
pushf
int3
in
inc
adc
dec
outs
nop
rcl
pushf
fisubr
cmp
jbe
nop
popa
dec
mov
jp
ret
ret
inc
addr16
sar
pop
and
not
cmp
pop
dec
inc
add
loopne
mov
xor
nop
call
lds
into
retf
icebp
test
daa
xchg
and
fwait
test
or
outs
mov
std
jne
dec
outs
push
lds
mov
cmp
inc
imul
aam
pop
pop
jbe
pop
scas
gs
mov
outs
mov
pushf
dec
jbe
adc
inc
inc
mov
movs
inc
adc
xor
in
push
repz
mov
popa
retf
int3
push
dec
ins
enter
jne
adc
(bad)
cwde
pop
gs
xor
scas
xlat
xor
and
sub
cmp
mov
mov
fild
pop
mov
nop
call
repnz
xchg
int
ds
xor
mov
mov
sub
jp
fist
cmp
iret
mov
jge
add
ja
(bad)
cmp
and
fcmovbe
adc
dec
loop
push
jno
mov
arpl
js
adc
hlt
inc
das
ret
movs
int3
fmulp
jg
push
mov
mov
clc
and
rol
ss
lods
pop
or
(bad)
retf
cmp
dec
sub
out
jb
cmc
jbe
xor
mov
(bad)
dec
outs
leave
mov
dec
mov
fcomp
pop
(bad)
jle
pushf
fs
pop
xor
pop
ss
and
mov
(bad)
cmps
inc
jbe
mov
loop
lahf
and
leave
mov
(bad)
in
adc
dec
inc
addr16
jp
call
ins
std
shl
adc
push
mov
xlat
out
mov
aas
inc
mov
push
add
dec
pop
dec
mov
mov
sbb
pop
in
cmp
setle
into
ss
scas
sbb
mov
mov
cmc
in
es
je
repz
sub
add
lds
ror
inc
std
outs
imul
jl
in
lods
popa
pop
je
daa
xor
(bad)
nop
push
dec
xlat
mov
xor
cmps
daa
aas
ret
mov
outs
jbe
sbb
das
xor
repnz
push
and
cdq
les
inc
mov
pop
add
sub
dec
push
popf
les
nop
cdq
adc
and
call
sbb
loope
and
push
pop
cmp
push
xchg
sbb
loopne
fiadd
and
cs
rol
nop
xlat
xor
push
stc
jmp
fbstp
popf
mov
aad
ins
inc
aam
xor
fwait
cmp
ficomp
inc
shr
pop
pop
ja
mov
lods
movs
ins
sbb
(bad)
imul
movs
jmp
ins
daa
xchg
lods
inc
imul
cmps
test
sub
pop
fidiv
ret
xor
push
or
or
jecxz
jnp
(bad)
mov
or
iret
mov
adc
add
sub
(bad)
(bad)
xchg
adc
sbb
dec
pop
xor
ret
call
(bad)
mov
mov
(bad)
shl
pop
repz
test
dec
scas
(bad)
sbb
iret
sbb
int
cmp
or
(bad)
outs
cld
out
xor
mov
push
retf
sbb
adc
inc
pop
jns
outs
fadd
add
pop
mov
jge
ja
dec
adc
psubb
dec
int
int3
add
mov
icebp
mov
pop
mov
not
and
int
out
das
(bad)
ret
imul
out
jbe
call
jns
jbe
inc
(bad)
mov
enter
push
bound
mov
and
test
out
in
in
stos
and
es
inc
push
ja
test
inc
neg
stc
outs
(bad)
ds
push
dec
stos
pushf
mov
jmp
in
nop
les
cdq
inc
cwde
push
adc
inc
shr
ficom
push
pop
adc
inc
mov
and
ret
pop
or
retf
cdq
ret
sahf
aas
(bad)
div
lds
adc
cmp
icebp
mov
jbe
xor
nop
stos
dec
movs
dec
movs
inc
aaa
xor
mov
fs
(bad)
add
and
pusha
mov
bound
cld
jp
lock
adc
cmp
xor
outs
xchg
cmp
aaa
dec
push
ret
pop
cli
mov
sub
test
scas
mov
mov
mov
sahf
mov
xchg
shl
outs
ds
mov
out
mov
mov
retf
push
xchg
cmp
push
or
xor
sbb
fisubr
fcomip
leave
jl
cmp
mov
mov
sub
xor
mov
sbb
add
push
sahf
xor
gs
push
(bad)
sbb
test
fbstp
sub
pop
scas
inc
sar
retf
pop
pop
mov
and
xor
pop
lea
inc
popa
aaa
outs
sub
(bad)
mov
xor
jb
movlps
add
icebp
mov
fmul
out
jnp
test
das
pop
mov
lds
popf
pop
shr
xchg
xchg
jecxz
lods
lahf
jl
sub
out
movs
mov
mov
mov
cmp
(bad)
imul
js
cmp
adc
loopne
pop
ss
rcr
mov
test
in
cmp
mov
mov
sbb
mov
and
inc
and
push
sub
jmp
fild
retf
sub
retf
outs
jo
jp
jle
sub
add
dec
dec
test
fcomp
call
mov
xor
mov
sub
xor
add
xchg
call
test
mov
enter
jl
and
mov
call
pop
push
push
add
stos
mov
imul
(bad)
adc
push
(bad)
push
aaa
hlt
inc
pop
pop
cmp
adc
cmp
xor
ret
dec
add
movs
repz
in
gs
loop
fcomp
pop
jle
mov
sahf
mul
push
popf
push
inc
sbb
popf
sub
inc
sub
lds
std
add
jmp
scas
retf
adc
sbb
push
push
xor
add
aad
jle
xor
ds
loope
push
dec
lods
(bad)
jp
mov
mov
es
les
leave
ins
push
add
pop
scas
jae
pop
fwait
and
mov
mov
cmp
ret
stc
push
cmp
cmps
popa
cld
sar
ja
or
push
aaa
cmp
jbe
cmps
mov
out
dec
dec
jge
call
add
loope
dec
add
shr
jl
jg
cwde
mov
imul
ins
nop
push
icebp
inc
and
jae
(bad)
xor
imul
bound
in
outs
jmp
mov
test
sub
dec
and
sub
test
push
cmps
xor
pop
je
fs
leave
add
dec
adc
add
mov
scas
fcmovne
xor
jg
and
sbb
jno
das
mov
(bad)
adc
mov
(bad)
push
sub
add
call
into
in
xchg
loop
jl
das
cli
lahf
outs
cmp
dec
ret
aad
f2xm1
inc
xchg
add
repz
aam
mov
mov
addr16
add
adc
add
scas
cmp
das
push
in
push
push
and
and
(bad)
int3
in
push
(bad)
jp
out
push
aam
push
fwait
adc
jbe
leave
call
push
pop
add
mov
cmp
mov
pop
(bad)
adc
retf
push
(bad)
xchg
xor
mov
in
popa
push
das
movs
jle
aad
add
adc
pop
push
pop
call
cs
cmp
arpl
dec
dec
(bad)
cdq
sbb
out
cli
or
inc
dec
test
icebp
lock
xchg
mov
adc
iret
inc
or
cmc
cmp
out
adc
sbb
adc
call
xchg
sub
les
jmp
adc
or
add
ret
out
out
dec
call
jae
aam
popa
and
(bad)
cdq
cmp
inc
fstp
mov
sbb
cdq
cmp
dec
jb
push
sbb
sar
(bad)
sbb
(bad)
fwait
test
jmp
stos
jmp
dec
and
(bad)
es
mov
repz
pop
ss
test
clc
rol
in
daa
rol
adc
rcr
jp
cmp
mov
mov
les
and
inc
pop
scas
pop
addr16
not
sti
div
xor
add
lods
xchg
dec
cmp
push
xor
imul
pop
and
jecxz
mov
imul
jae
xor
cmps
stos
fisubr
mov
jo
aas
cdq
and
je
dec
adc
xor
sbb
jb
xchg
leave
jge
imul
(bad)
jecxz
ins
shl
dec
sub
xchg
int3
mov
cmp
push
add
ret
push
out
mov
push
cmps
mov
pmaddwd
mov
in
das
inc
(bad)
in
xchg
and
mov
sub
adc
das
nop
mov
bswap
and
iret
fwait
adc
dec
add
mov
add
and
imul
xor
call
and
fdiv
inc
xchg
les
add
fs
jne
xlat
xor
or
test
stos
jmp
sub
lea
mov
ja
dec
sahf
cmp
call
into
mov
fild
dec
outs
rol
jecxz
aaa
cmp
fs
jmp
inc
cmp
mov
sub
dec
movs
or
sub
stos
xchg
pop
daa
jo
pop
and
sub
pop
inc
adc
adc
jne
test
movs
(bad)
ret
ret
test
adc
fdivr
movs
ins
pop
mov
pop
push
mov
pusha
gs
sbb
pop
enter
mov
xor
sub
dec
(bad)
ret
mov
out
pusha
sbb
stos
ret
mov
cmps
mov
adc
dec
dec
retf
push
ja
test
sub
fist
lods
push
sbb
data16
test
dec
lods
cdq
sub
in
mov
add
leave
inc
inc
or
jp
ins
adc
retf
push
out
mov
int
mov
pop
xchg
cmp
(bad)
mul
jae
mov
sti
dec
xchg
mov
add
out
jo
mov
enter
pop
les
mov
mov
enter
push
and
data16
inc
sbb
sub
add
mov
ja
pop
mov
pop
mov
jbe
pop
mov
test
fadd
loope
ins
ret
pop
cmp
(bad)
dec
(bad)
pusha
loop
inc
cmp
pushf
inc
retf
in
jl
jae
hlt
inc
cdq
(bad)
cs
loopne
sbb
jecxz
or
mov
popa
adc
dec
xchg
stc
add
mov
dec
shl
fdivr
mov
cwde
pop
xchg
stos
imul
test
sub
dec
cld
mov
pop
pushf
sbb
stos
pop
dec
cli
mov
ins
mov
retf
leave
int3
xchg
mov
mov
and
jnp
xchg
repz
cmps
pop
mov
pusha
scas
rcr
inc
retf
sbb
icebp
mov
xchg
ds
cmp
mov
sbb
xchg
jle
(bad)
das
daa
fldenv
push
fist
je
jp
popa
sti
lds
inc
inc
push
xrelease
push
scas
div
movs
sbb
das
fcomp
mov
xchg
add
fist
or
cs
stos
mov
and
iret
arpl
rcr
(bad)
mul
mov
les
mov
dec
dec
jge
mov
stos
js
arpl
xor
jmp
cwde
mov
ja
adc
repz
jae
ins
add
cmp
test
mov
add
adc
cdq
fs
pop
hlt
add
fcomp
test
cmp
dec
mov
sbb
push
leave
dec
pop
add
xor
sbb
push
in
dec
imul
mov
inc
inc
xor
shl
ds
adc
xchg
and
sahf
mov
mov
mov
sbb
mov
cmp
jle
push
mov
movs
out
ins
mov
out
inc
xchg
sub
ret
jne
movs
mov
out
sub
lods
xlat
adc
stc
add
mov
ficom
fwait
gs
xchg
jl
jp
out
loope
movs
cmp
test
xchg
scas
jmp
and
mov
nop
jmp
(bad)
aad
mov
daa
push
push
ins
sbb
jp
call
in
in
fisubr
iret
jmp
jle
repnz
xor
fdivp
adc
jmp
sbb
mov
jecxz
and
leave
popa
pusha
js
imul
ins
adc
mov
je
imul
fild
retf
stos
and
data16
out
push
pop
adc
adc
adc
pop
mov
or
xchg
sbb
test
jl
gs
rol
dec
dec
push
push
and
int
add
jnp
xchg
and
(bad)
addr16
(bad)
xchg
jle
aam
into
pop
aas
mov
fcmovu
jp
mov
clc
jne
fstp
adc
stos
es
cmp
xchg
clc
xor
mov
mov
rol
or
leave
adc
pop
push
mov
and
xchg
pushf
shl
rol
cmp
mov
adc
test
fisubr
mov
fst
mov
pusha
mov
(bad)
icebp
mov
int3
fdiv
rcr
jae
adc
outs
sub
or
(bad)
dec
ins
sub
mov
mov
dec
add
bound
clc
xor
cmps
int3
dec
imul
pop
or
cmp
mov
pop
push
hlt
xchg
or
retf
xlat
in
xchg
and
les
ins
lods
cli
(bad)
xchg
fcmovnb
pop
mov
je
iret
and
cmp
les
xor
dec
inc
adc
push
xor
push
fwait
test
sub
and
and
cs
and
call
mov
pop
jecxz
push
jg
and
adc
popf
dec
sub
jnp
add
rol
lds
daa
(bad)
push
retf
cwde
add
or
xor
sbb
in
mov
cs
mov
or
icebp
cmps
mov
jbe
dec
in
pop
outs
xlat
push
xchg
iret
lods
jnp
sub
cld
xchg
cmc
add
stos
or
ja
or
movs
int
mov
popa
inc
xor
outs
movs
rcl
mov
dec
jno
iret
call
jb
fst
(bad)
mov
mov
mov
test
mov
cmp
sbb
mov
rol
inc
leave
mov
iret
int
mov
ret
push
jmp
lds
cli
pop
mov
ror
rol
rol
jb
jle
repz
dec
mov
push
jle
pop
mov
outs
movs
dec
jge
dec
test
mov
stos
sub
fldenv
shr
cld
gs
mov
jl
add
push
fst
in
fadd
cdq
(bad)
push
lock
mov
xchg
jbe
je
mov
mov
and
push
mov
xchg
mov
mov
sbb
fwait
pop
dec
lea
pop
cwde
or
push
das
lea
sbb
not
pop
rol
out
add
cmp
jle
popa
mov
cmp
test
dec
fisttp
push
leave
mov
iret
(bad)
pop
sub
mov
test
dec
nop
in
and
je
and
out
addr16
inc
and
les
test
mov
fist
dec
stos
pop
cld
mov
stos
outs
imul
inc
xor
cmp
js
sbb
xor
(bad)
cli
enter
mov
retf
sbb
xlat
js
ss
out
pop
out
fidiv
lock
das
jbe
push
push
shl
mov
loopne
cmp
repz
cld
push
fdiv
add
sbb
xlat
jl
and
adc
test
jmp
ja
in
xchg
add
adc
mov
or
out
cmps
pop
xchg
dec
pop
jnp
gs
aaa
cwde
(bad)
mov
fwait
dec
add
(bad)
imul
mov
adc
dec
(bad)
int3
bound
push
mov
movs
or
jecxz
mov
xor
jbe
adc
hlt
xor
xor
in
cmp
jle
scas
into
pop
mov
fdiv
imul
sbb
lods
(bad)
lahf
fidiv
stos
jmp
jmp
dec
fbld
inc
jecxz
jno
lahf
hlt
stos
mov
leave
out
dec
xor
lahf
popa
xor
sbb
clc
jmp
mov
sbb
aas
jl
lods
sub
cs
test
and
call
idiv
cmp
add
pop
mov
jns
sti
push
jnp
cmp
inc
ja
push
pushf
mov
stc
dec
push
sub
mov
sbb
sbb
popa
dec
mul
push
je
adc
dec
xchg
push
inc
adc
pop
mov
cmps
mov
pusha
out
cmps
bound
cmps
or
sub
lea
jnp
es
cmps
pop
enter
inc
je
mov
out
sub
push
push
test
add
add
stos
repnz
retfw
pop
popf
pop
lea
add
les
sbb
jg
call
and
shl
xchg
scas
int3
or
inc
stos
mov
retf
cmp
sbb
jo
dec
sub
mov
fsubr
popa
push
pop
mov
cdq
xchg
cmp
int3
pushf
aam
sub
pop
adc
lea
adc
lds
pop
xchg
jne
mov
test
in
ds
mov
neg
jbe
retf
mov
call
xor
sbb
pop
in
imul
sub
test
loopne
in
ds
cld
rcl
aad
add
ins
pop
jmp
icebp
push
xor
dec
retf
lds
sar
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
pop
pop
mov
sub
neg
lahf
pop
std
lea
adc
(bad)
jp
loopne
cld
or
sbb
adc
mov
pop
in
cmp
push
or
inc
bound
scas
and
repz
stos
jo
mov
int3
mov
movs
or
mov
test
and
das
mov
les
jb
aad
jno
sbb
jle
jle
inc
pop
sub
push
lods
cs
and
call
dec
mov
aas
xchg
jnp
jo
mov
cmp
nop
pusha
out
jb
daa
adc
adc
cwde
(bad)
mov
pop
inc
cmc
mov
aaa
dec
mov
jecxz
add
xor
ret
sbb
and
clc
inc
or
xor
ss
ins
stos
ds
icebp
out
push
addr16
cmp
das
(bad)
pop
cmp
lea
dec
mov
jecxz
mov
mov
std
pusha
loopne
and
jnp
(bad)
icebp
ins
enter
cmps
mov
pop
dec
jge
adc
ret
add
fxch
outs
adc
mov
push
daa
sahf
out
and
pop
xlat
mov
dec
xchg
inc
stc
inc
jle
xor
cs
ins
retf
cmp
ds
xor
mov
adc
jg
or
ins
imul
aas
stc
mov
cwde
pop
mov
push
out
mov
data16
mov
jnp
call
scas
lods
jmp
rcr
mov
xlat
add
push
loop
pusha
adc
rcl
sar
hlt
fcmovnu
dec
mov
sahf
retf
push
xchg
ja
pop
addr16
push
mov
cmc
dec
push
ins
(bad)
fisubr
bound
scas
in
dec
xor
pop
mov
not
mov
pushf
daa
test
add
test
neg
and
in
imul
popa
sbb
mov
dec
cmp
xchg
xor
jmp
sbb
jno
out
push
lea
test
shl
add
jle
jae
retf
xchg
adc
mov
add
xchg
in
les
sub
into
sub
inc
push
aas
inc
enter
mov
loope
ds
inc
rol
movs
stos
mov
mov
call
sbb
rcr
cmp
ds
jl
cmc
mov
jns
ret
xor
dec
retf
addr16
fs
mov
sub
adc
shl
push
icebp
int3
mov
jle
inc
and
adc
inc
adc
xor
inc
scas
outs
cmc
and
(bad)
cmp
mov
fstp
pop
ret
mov
or
push
sbb
test
xor
and
lods
rcr
dec
ror
sbb
jae
scas
mov
(bad)
jb
mov
cmp
push
cwde
fs
test
or
aad
sahf
sbb
push
int
add
div
lods
bound
ins
mov
lock
sti
cmps
adc
sub
stos
iret
mov
retf
not
dec
pop
mov
push
call
xchg
jmp
scas
inc
mov
mov
cmp
cmp
xor
js
push
popa
add
daa
popa
stos
adc
sub
xchg
jbe
scas
fdiv
dec
sub
mov
lds
clc
stos
add
and
daa
add
ret
push
mov
clc
push
call
sbb
loope
mov
push
movs
cmp
pop
das
pop
pop
fdiv
jne
hlt
inc
test
xchg
add
ror
shr
adc
shl
in
add
scas
or
push
fwait
int
subps
jmp
(bad)
xchg
mov
pushf
inc
sti
cmc
clc
(bad)
and
out
jp
mov
dec
outs
fucom
popa
leave
add
inc
adc
sar
imul
jmp
ins
pop
lods
jbe
cmp
fist
xchg
sti
and
test
pop
fldcw
shl
mov
mov
inc
ror
mov
xor
push
jge
or
cmps
cld
jbe
add
and
inc
into
(bad)
jne
xchg
pop
jae
sbb
mov
push
mov
inc
jae
dec
cs
scas
dec
cmp
(bad)
std
daa
rol
ds
js
in
(bad)
in
aaa
lahf
adc
cmc
(bad)
aam
add
stos
(bad)
je
movs
retf
mov
push
xchg
in
and
or
mov
cmc
adc
sbb
pop
inc
ja
iret
mov
jo
sbb
test
sub
mov
push
in
test
pop
aam
out
mov
imul
xor
les
mov
push
sub
in
sub
loope
jnp
lods
adc
xchg
push
or
and
fdiv
and
jne
add
in
out
and
data16
cmp
adc
cmp
das
xor
(bad)
jecxz
mov
in
or
push
add
xchg
dec
xchg
addr16
and
mov
gs
sub
aam
int3
dec
push
add
or
add
aam
mov
mov
and
xor
pushf
pop
retf
aaa
jg
and
push
dec
std
mov
enter
push
sbb
sahf
aam
add
frstpm(287
mov
adc
add
aas
sbb
repz
(bad)
je
mov
inc
jmp
sbb
cmc
outs
dec
sub
add
jno
mov
sub
cdq
sbb
fld
cdq
stc
ss
cmp
fstp
push
or
pop
and
cmp
ins
enter
test
jb
inc
aam
loopne
mov
mov
push
xor
mov
xchg
call
or
es
cwde
aam
ret
mov
cwde
call
add
cwde
movs
pop
or
sub
sub
sahf
pop
mov
(bad)
test
sbb
call
mov
dec
pop
jne
fnstsw
cmc
clc
pusha
adc
sub
jmp
add
mov
pop
jo
adc
es
shl
enter
xlat
test
movs
jns
call
aad
shl
sub
ror
push
xchg
xor
jp
mov
and
(bad)
imul
mov
dec
adc
inc
xchg
mov
mov
sbb
adc
fisub
or
imul
fdiv
iret
jge
inc
add
daa
push
mov
adc
imul
mov
xor
sub
popa
movs
int
loop
aad
es
mov
movs
popf
inc
cmp
into
jbe
mov
cmp
rcr
test
pop
pop
pop
movs
push
jns
mov
add
mov
sbb
rcr
out
mov
iret
fnsave
jne
and
xor
sbb
mov
adc
rcr
jmp
mov
xchg
arpl
inc
or
cmp
mov
in
popf
in
xor
ret
push
pop
jb
mov
sub
or
and
jecxz
jne
retf
jae
(bad)
mov
add
retf
fistp
retf
jmp
mov
call
and
fcom
enter
aaa
(bad)
cli
inc
or
scas
mov
sti
lahf
add
aam
std
test
add
mov
aaa
jo
inc
nop
sahf
shl
test
neg
rol
jo
dec
cmp
mov
repz
cmp
xor
clc
pop
inc
mov
mov
adc
not
jbe
sbb
mov
std
out
pop
xchg
dec
movs
jbe
jns
jmp
data16
adc
icebp
outs
ret
dec
push
push
mov
in
mov
jo
or
inc
shl
out
add
and
iret
aam
pop
cmp
ffree
sti
js
mov
(bad)
lock
adc
push
xchg
mov
into
or
test
xchg
in
pop
and
add
jge
lods
add
xor
test
and
clc
push
xor
xor
lock
loope
xor
lds
mov
call
xchg
in
rcr
inc
jle
xor
jae
fisttp
xor
jnp
test
jne
sbb
mov
cmp
leave
sar
popa
fwait
sbb
mov
sub
xchg
es
dec
pusha
adc
mov
test
push
bnd
sub
xchg
mov
int
inc
xlat
out
pop
pop
pop
sbb
and
mov
test
cdq
clc
popf
popf
pop
pop
jns
xchg
mov
les
xchg
(bad)
cs
or
bound
in
fidiv
ret
retf
xchg
(bad)
fist
aaa
mov
mov
test
mov
inc
mov
pop
outs
fidivr
inc
xchg
(bad)
js
sbb
sahf
sub
addr16
sub
xor
jbe
movs
ror
and
sti
or
sbb
sbb
sbb
inc
mov
bound
scas
lds
inc
cmps
retf
pop
dec
stos
xor
pop
add
sahf
jne
jmp
sbb
jo
iret
repnz
sbb
(bad)
fsub
jle
cmps
leave
cmp
cmps
mov
xor
jmp
mov
mov
sbb
pop
sbb
test
cs
(bad)
cs
stos
cmc
test
jbe
mov
movs
int
dec
loopne
mov
mov
sbb
xchg
pushf
and
pop
popa
add
ud1
kmovb
xchg
ror
and
arpl
pushf
xor
(bad)
loopne
or
lea
push
and
pop
pop
jg
push
cmps
dec
(bad)
int3
cmps
shl
je
push
fdiv
pop
jle
cmps
mov
loope
mov
js
xor
and
mov
iret
test
(bad)
adc
xlat
jmp
pop
mov
daa
(bad)
add
(bad)
sub
repnz
mov
dec
xor
pop
mov
hlt
test
aam
out
ds
push
jmp
xor
and
repz
jno
jmp
arpl
loope
dec
int
scas
sub
js
sti
(bad)
mov
mov
jmp
mov
fs
adc
test
movs
and
dec
jae
mov
imul
jmp
jecxz
and
sbb
call
ds
xchg
call
dec
jg
mov
add
data16
imul
scas
in
cwde
ins
cmp
(bad)
add
add
aam
mov
dec
and
inc
repnz
out
dec
xchg
add
add
ss
xor
leave
add
aad
push
dec
stos
movs
and
cwde
cmps
imul
js
jmp
aas
rcr
xor
or
push
dec
iret
sub
sub
pusha
das
xchg
push
sbb
adc
jae
rcr
mov
jle
arpl
jae
xor
test
jg
mov
int3
cmp
inc
es
retf
pop
pop
adc
aaa
jnp
jmp
in
push
dec
pop
in
shl
cmp
xor
cmps
je
std
std
mov
fldcw
jl
cmps
setne
add
sbb
sbb
out
pop
std
sbb
sub
js
shl
outs
mov
fbstp
(bad)
jmp
sbb
lods
add
(bad)
retf
dec
(bad)
adc
xchg
adc
cmp
cs
mov
int
out
jge
retf
aaa
xchg
jmp
cwde
(bad)
jl
hlt
jmp
inc
clc
imul
loop
jae
test
add
xchg
jmp
scas
stos
pop
jmp
inc
gs
aam
test
ja
enter
push
mov
outs
cdq
shr
jae
and
test
or
xchg
xchg
cmp
mov
je
aas
inc
jp
xchg
sub
jl
push
cmp
xchg
cmps
mov
jo
bound
adc
retf
inc
sbb
xor
lods
cdq
test
or
retf
fsub
fadd
push
call
add
ficomp
outs
mov
imul
loop
out
pop
mov
dec
(bad)
sbb
xchg
pop
sbb
pop
jge
arpl
adc
inc
push
scas
retf
mov
rcr
xor
push
bnd
ja
inc
inc
sub
jp
sub
xor
sub
jno
test
jle
enter
hlt
jno
mov
out
add
push
popf
jnp
aaa
xor
test
in
aas
lods
(bad)
mov
daa
push
adc
imul
or
jp
jle
test
lock
rcl
jl
retf
and
jne
pop
mov
sbb
fsubr
mov
shl
outs
ds
push
mov
lds
pop
push
and
sbb
hlt
push
jbe
les
push
cmp
test
adc
jne
inc
pop
xor
push
and
call
cmp
scas
out
inc
sti
push
pop
and
mov
lea
jo
(bad)
lea
dec
(bad)
pushf
sub
adc
jo
sahf
mov
mov
fcomp
out
push
ins
out
sub
fisubr
das
jmp
(bad)
ds
or
popa
lahf
mov
das
je
mov
jae
icebp
or
inc
shr
xchg
xchg
push
or
and
xor
jno
add
mov
imul
scas
(bad)
mov
rep
shl
test
inc
idiv
out
setae
leave
push
das
ins
cmp
pop
sub
add
sub
jmp
rcr
mov
or
and
outs
mov
aas
sbb
inc
mov
test
popf
dec
or
ret
repnz
test
sti
rcl
cmps
and
dec
into
pop
loopne
xchg
sub
push
loope
loop
scas
into
jno
repz
mov
pop
out
xchg
sbb
or
pop
mov
mov
call
cmp
inc
enter
fdivp
jo
pop
and
mov
and
pop
aad
stos
xchg
add
repz
mov
xor
std
xchg
cmp
inc
mov
add
adc
xchg
repnz
sub
sbb
sahf
call
jae
jo
in
outs
sub
jmp
adc
xor
jmp
std
mov
xor
push
popa
xor
add
nop
push
push
jb
dec
xchg
dec
fucom
sbb
aas
xor
xor
jecxz
pop
je
jae
call
ja
pusha
xchg
xor
adc
popf
mov
pop
add
loopne
push
sbb
push
add
dec
push
out
push
sbb
loope
or
icebp
cmp
lea
ds
pop
or
popa
loop
sbb
adc
pop
xor
xchg
push
and
sub
push
scas
movs
mov
dec
imul
out
cmps
xchg
cmp
jo
int3
pop
sub
push
(bad)
movs
fmul
retf
cdq
mov
sahf
sti
xchg
div
test
inc
cld
sbb
xchg
inc
je
out
bound
test
(bad)
or
movs
das
loop
add
out
sti
sbb
cmp
jmp
push
addr16
mov
adc
sbb
add
add
repz
push
cdq
inc
cmp
push
jmp
loopne
mov
arpl
ds
push
xchg
inc
and
ret
ja
xor
mov
push
sub
mov
fisttp
pusha
dec
sbb
and
xchg
lock
adc
aaa
sbb
dec
mov
dec
sub
mov
adc
dec
mov
add
out
jl
(bad)
xor
cmp
or
xchg
test
stc
ud0
inc
pop
sbb
repz
es
dec
adc
push
in
push
sub
sub
in
lahf
xchg
addr16
loope
jg
xlat
fbld
push
fcmovu
xchg
push
lea
shl
cmp
mov
mov
sti
mov
push
add
mov
dec
dec
mov
packuswb
cmp
in
stos
das
fistp
push
pusha
jne
jb
mov
xchg
inc
mov
shl
xor
or
inc
jge
ins
mov
push
xor
xor
push
icebp
jne
jecxz
mov
jns
sti
cmp
repz
inc
inc
jp
adc
lock
add
(bad)
and
dec
cld
arpl
ss
sahf
ficom
nop
nop
div
or
cmc
stos
dec
cmps
dec
sbb
xchg
ret
out
mov
ja
cwde
mov
enter
add
out
push
in
rcl
inc
(bad)
leave
push
push
push
clc
inc
xchg
das
mov
add
inc
(bad)
sbb
pop
movs
pop
shl
mov
push
stc
mov
pavgb
adc
cld
std
popf
icebp
mov
push
mov
loop
call
mov
xchg
loopne
gs
or
jg
mov
fldenv
push
ds
int
lods
sbb
push
xor
sub
jne
jge
aam
loopne
mov
and
lods
in
loope
push
movs
push
repz
imul
cld
sbb
mov
movs
mov
adc
inc
xor
aad
jne
adc
call
push
loopne
fdiv
and
push
xchg
xor
mov
mov
inc
stos
dec
mov
jmp
imul
into
adc
xor
(bad)
mov
(bad)
mov
stc
movs
in
scas
jmp
ds
pop
mov
int3
cmp
or
cmp
jb
mov
fs
inc
push
aam
push
jne
jbe
sti
loopne
mov
sbb
push
add
push
test
lods
xchg
std
leave
lods
mov
imul
es
jecxz
mov
movs
bswap
in
scas
aam
ins
pop
xor
push
sbb
push
or
pop
cdq
jecxz
fisttp
out
popa
mov
adc
and
out
push
push
push
popa
and
push
add
cdq
mov
test
aas
and
in
sub
mov
push
(bad)
xchg
es
mov
sub
jl
retf
sub
movs
mov
mov
dec
jmp
sbb
add
cmp
xor
ret
addr16
and
ss
push
push
add
lahf
xchg
test
in
inc
dec
test
data16
add
movs
sbb
loop
jge
call
loop
and
into
xchg
mov
out
icebp
xor
in
push
dec
fst
repnz
xor
int3
or
and
out
dec
mov
jl
test
sbb
shr
and
outs
or
dec
sbb
xor
push
inc
mov
sti
leave
sub
aaa
mov
sbb
loope
leave
retf
jle
fwait
mov
retf
daa
add
push
fadd
pop
or
out
mov
or
lock
sub
push
jmp
pop
adc
sub
mov
or
cli
xor
das
addr16
xchg
add
lods
adc
pop
mov
jmp
(bad)
jg
movs
cmps
fisub
inc
push
mov
sub
push
popf
mov
jo
pop
popf
jp
sub
inc
add
cmp
call
cmp
stos
retf
jp
call
inc
xor
jns
mov
les
cmp
push
jmp
xchg
imul
enter
adc
or
pop
mov
das
sbb
pop
xor
aas
aam
pop
outs
fisubr
out
push
mov
add
add
call
psubusw
jp
xor
xor
xchg
mov
mov
mov
and
(bad)
int
cwde
cmp
mov
in
xchg
dec
mov
xor
(bad)
cli
push
je
mov
jle
xchg
mov
sub
mov
hlt
pop
adc
das
bound
cmp
and
xchg
mov
fcomp
xchg
inc
pop
ret
cmp
mov
jp
cwde
in
into
xchg
shl
sbb
test
sbb
push
lods
dec
stc
mov
mov
outs
in
call
mov
push
clc
bound
imul
push
imul
nop
jmp
test
adc
popf
jns
cdq
xor
cmp
xchg
clc
mov
or
cmp
xchg
adc
movs
adc
test
scas
test
pop
dec
mov
xor
inc
movs
mov
mov
ins
inc
faddp
pop
ffreep
(bad)
or
dec
push
mov
jp
mov
cmp
sub
mov
jmp
xlat
adc
sbb
fwait
test
xor
dec
or
fidivr
lods
or
xchg
int
mov
pop
pop
add
jle
jge
adc
or
cmp
jb
(bad)
xchg
add
dec
dec
in
dec
ja
inc
push
sbb
cmps
iret
cdq
mov
lds
push
mov
loope
jo
or
stos
push
mov
jl
inc
mov
push
cmc
push
popa
lock
fucomi
pmulhw
add
cmp
call
dec
add
ins
inc
mov
in
arpl
ss
push
cwde
repnz
add
ficomp
daa
out
cmp
pop
retf
hlt
mov
clc
pop
xor
sbb
mov
pop
and
cli
mov
mov
mov
out
in
adc
mov
lahf
mov
xor
pusha
pop
pop
es
ret
pop
pop
pop
bound
xchg
jle
(bad)
or
scas
(bad)
and
rcr
adc
sahf
mov
xor
es
lods
push
fdiv
xor
push
jg
jl
out
jae
(bad)
jns
xchg
cwde
push
aaa
fcom
xchg
mov
xor
mov
out
(bad)
fcomp
fadd
push
dec
pop
push
and
mov
or
dec
mov
mov
bound
mov
xchg
fild
dec
push
arpl
cmp
adc
sti
pop
imul
push
dec
jl
movs
leave
arpl
inc
adc
call
icebp
leave
mov
xor
fild
ror
jmp
in
jnp
jnp
sbb
cmp
mov
in
les
dec
loopne
push
clc
int
(bad)
shr
add
xor
leave
add
movs
icebp
dec
jg
(bad)
and
gs
pop
repnz
aaa
dec
inc
cmps
lock
call
sbb
inc
outs
pop
add
retf
hlt
inc
jo
mov
sahf
xlat
mov
jp
inc
cmp
cdq
xor
push
and
mov
pushf
mov
and
mov
jecxz
fild
sub
jns
pop
std
pusha
xor
sub
es
lods
xchg
js
cmp
adc
mov
imul
xor
xchg
jnp
pop
test
xor
cmc
inc
xlat
aam
and
ror
pop
es
sub
sbb
mov
test
mov
out
xor
leave
inc
fmul
xlat
cmc
pop
xchg
and
fadd
push
out
ret
cdq
pop
adc
test
mov
nop
xlat
and
cmp
cs
jmp
cli
or
lods
mov
int3
sbb
in
lahf
pop
lods
ror
adc
push
jl
sub
dec
mov
outs
xlat
outs
addr16
add
jno
loope
and
jmp
out
fs
int3
pop
lods
push
adc
xchg
sbb
or
push
add
jmp
push
or
mov
pop
js
add
mov
cld
jns
sub
cmps
fild
pop
shl
pop
cmps
jo
push
xchg
or
popf
fld
je
jae
ret
int
scas
jnp
sbb
in
mov
leave
lahf
xchg
and
add
cmp
inc
(bad)
movs
out
mov
push
jbe
aaa
mov
adc
mov
add
stc
sub
ficom
je
ins
inc
or
ds
jnp
std
enter
fldenv
shl
inc
and
retf
dec
sbb
jle
pop
push
push
cli
pusha
jl
jl
call
jge
in
mov
mov
push
mov
sbb
es
jbe
xchg
pop
call
lahf
jl
shl
(bad)
repnz
mov
inc
mov
into
or
ror
stos
fld
ror
inc
or
loop
xchg
out
in
dec
aas
fs
jno
idiv
add
out
xor
fwait
(bad)
scas
jge
in
stos
repnz
mov
add
jbe
test
inc
mov
loop
jo
xchg
sbb
sbb
push
fcmovu
inc
(bad)
rol
jo
add
push
pop
mov
mov
add
inc
mov
and
fcmovu
les
add
xor
loope
sbb
mov
mov
ja
jp
pop
out
cwde
mov
(bad)
pop
push
(bad)
mov
test
push
ror
(bad)
lock
cmp
fst
push
iret
test
add
loop
jge
js
jl
leave
add
(bad)
shl
pop
xchg
cdq
jno
(bad)
leave
aaa
cmc
retf
or
outs
pop
lock
adc
cmp
ds
imul
vpor
or
call
movs
repnz
clc
pop
mov
ins
lods
(bad)
pop
(bad)
ds
inc
or
xchg
into
retf
popa
stos
jge
out
or
xor
in
pop
mov
xchg
fcomp
mov
mov
test
pop
inc
out
and
push
add
jmp
(bad)
add
cmp
fstp
test
push
jmp
jl
or
cwde
cmp
xor
mov
add
sub
mov
les
dec
in
cmp
loope
pop
push
sbb
aam
std
leave
test
call
rcl
out
push
add
sbb
cmp
xor
stos
(bad)
out
cmp
adc
imul
sub
mov
scas
(bad)
xor
imul
sub
push
adc
bound
xor
jno
dec
push
adc
repnz
iret
fsubr
mov
dec
or
cmp
add
inc
xor
cs
jmp
pop
and
mov
dec
cmp
sbb
jb
mov
xchg
(bad)
aam
mov
pop
ret
pop
adc
call
and
lds
inc
or
loop
mov
adc
jbe
jle
fdiv
sub
out
mov
jbe
shl
popa
xchg
retf
std
xchg
adc
ja
sub
jmp
popa
jb
(bad)
push
push
add
adc
adc
leave
in
pop
mov
cmps
dec
xor
fucom
jl
sub
jbe
cmp
jg
mov
call
std
aam
jo
push
shr
mov
or
fs
pop
call
or
fnstenv
repz
jnp
pushf
out
cmp
imul
pop
adc
ss
push
xchg
mov
xchg
in
pushf
jmp
mov
xchg
xchg
(bad)
in
pop
pop
or
dec
inc
enter
push
add
push
repz
stos
or
int
jae
lds
pop
in
call
call
ins
dec
aam
hlt
sbb
inc
jge
cmp
sti
outs
xchg
mov
cmps
pop
or
pop
mov
jns
and
out
enter
mov
add
push
shr
mov
out
mov
in
cld
or
jmp
clc
rcr
rcl
jp
call
icebp
hlt
mov
cmp
neg
scas
sub
into
dec
cmp
inc
out
add
shl
leave
sub
sbb
retf
or
cmp
pushf
adc
lods
inc
pop
leave
dec
mov
pop
js
jb
loopne
in
mov
inc
push
(bad)
sbb
cmp
ret
xor
dec
sbb
js
leave
scas
ror
sub
popa
jecxz
das
aaa
sub
sub
sar
pop
jg
pop
int3
bound
xor
dec
(bad)
out
(bad)
sub
popf
lods
sbb
push
out
adc
mov
in
sub
mov
add
gs
push
mov
push
jecxz
and
fisttp
inc
outs
cwde
mov
pusha
sahf
add
jle
fimul
sub
mov
dec
add
in
sbb
pop
mov
aaa
adc
adc
imul
pop
or
cmp
adc
aad
inc
add
aam
fs
jmp
or
xchg
mov
inc
mov
out
test
xor
or
jnp
cwde
xor
es
or
nop
mov
or
sbb
or
push
into
xchg
stos
and
sar
lea
int
jbe
and
(bad)
sbb
mov
fs
in
retf
in
push
sbb
mov
xchg
mov
jns
push
jge
fistp
mov
loopne
inc
or
xor
adc
js
jo
inc
out
add
mov
lods
cmp
jmp
ffree
push
dec
push
nop
setno
test
inc
xor
shl
jae
and
aas
mov
in
xchg
sbb
movs
stos
cmp
fwait
mov
outs
xchg
mov
mov
enter
dec
mov
add
ds
adc
fdiv
test
cmp
cmp
jb
shl
dec
mov
push
jo
push
jbe
mov
mov
jecxz
imul
aad
bound
in
cmp
inc
pop
dec
pushf
(bad)
mov
shl
cli
sbb
lods
mov
adc
adc
mov
je
inc
add
sbb
neg
mov
xor
call
xchg
inc
sbb
jne
ret
lods
mov
push
xchg
mov
xchg
add
ficom
inc
call
push
rcr
adc
jge
pop
dec
pop
mov
loop
push
scas
inc
cwde
retf
outs
ficom
adc
or
and
push
push
adc
sub
cmp
sub
pop
(bad)
neg
push
cmps
int3
aam
and
xchg
inc
mov
outs
cmp
push
cli
push
jecxz
jle
pop
lods
dec
movs
not
fiadd
ss
pop
test
nop
(bad)
stos
xchg
xchg
fnstsw
shl
xor
jnp
mov
movs
jmp
frstor
daa
cli
std
sub
sbb
cmp
jg
rol
(bad)
scas
xor
push
mov
div
mov
adc
jns
adc
add
sub
inc
sub
repz
xchg
pop
or
(bad)
aam
jmp
mov
outs
pop
dec
popf
push
cmp
push
inc
data16
mov
dec
pop
or
pop
ss
test
in
pop
out
pop
ins
scas
push
ja
retf
adc
mov
push
pop
(bad)
jecxz
lds
retf
fcomp
jnp
(bad)
adc
xor
mov
cwde
jnp
push
aam
mov
jb
fs
enter
push
xchg
mov
test
mov
(bad)
nop
jecxz
and
mov
arpl
pop
xor
jns
sub
retf
push
mov
cmps
mov
mov
sahf
push
fadd
push
lods
movs
inc
mov
sti
mov
push
adc
ret
sub
ins
pop
pop
ret
sub
or
stos
jp
jmp
add
mov
scas
xor
push
push
dec
loope
pushaw
mov
call
in
jb
sub
push
push
xchg
in
aad
leave
jl
loop
and
stos
fwait
sub
push
jo
test
ins
push
test
add
xor
dec
xor
push
std
retf
jmp
xor
cmp
mov
or
mov
lahf
imul
int3
mov
popf
mov
out
xchg
icebp
jle
push
mov
mov
fprem
mov
retf
aam
(bad)
mov
ds
xchg
aaa
movs
pop
ja
f2xm1
push
adc
jmp
jge
daa
dec
aaa
dec
push
dec
mov
mov
(bad)
rcr
pop
jnp
out
cli
and
jle
and
and
stos
adc
adc
and
mov
sub
scas
jbe
stos
std
imul
or
jmp
mov
pushf
into
outs
ss
or
pop
es
add
(bad)
shl
mov
repnz
not
mul
es
mov
push
sahf
inc
imul
test
jmp
adc
sbb
inc
xchg
or
inc
add
add
rcl
in
xor
ins
ret
(bad)
ss
add
mov
xor
push
sbb
add
int
pushf
imul
and
push
call
xchg
jl
repz
outs
mov
sub
loope
inc
ret
fs
sbb
mov
int
movs
pop
mov
ret
icebp
mov
and
scas
shl
les
cmps
fld
pusha
jbe
das
inc
and
ss
xchg
mov
jmp
rcr
sbb
jbe
in
in
adc
gs
push
fisttp
xor
dec
mov
aad
xor
fdivp
fsub
push
repnz
push
jl
lmsw
xor
adc
and
mov
sahf
add
stos
jnp
shr
sbb
inc
iret
xor
mov
inc
sar
adc
sub
test
fstp
fimul
mov
cmp
(bad)
adc
add
aas
les
dec
icebp
sub
and
shl
call
lods
xchg
push
bound
dec
xchg
leave
inc
adc
mov
add
dec
push
retf
into
add
dec
xor
mov
test
sbb
movs
mov
mov
jmp
xchg
xor
test
mov
inc
rep
popa
(bad)
dec
pop
in
mov
inc
in
scas
mov
cmp
and
xor
fcomp
add
enter
jl
stos
repz
in
and
bound
(bad)
in
push
mov
mov
ror
test
daa
sar
mov
push
pop
xor
dec
dec
xor
cmp
pop
sti
cs
inc
pop
ins
mov
(bad)
adc
enter
les
sbb
not
sbb
rcr
pop
push
mov
ret
adc
pop
std
aad
fcom
mov
sub
cmp
std
mov
mov
xor
stc
repnz
ss
sub
in
call
mov
mov
(bad)
mov
mov
mov
sbb
mov
outs
lods
popf
adc
cli
lods
jbe
fadd
sbb
jp
int
ja
shl
out
stos
adc
sahf
mov
(bad)
mov
popa
xor
stc
out
fnsave
cmc
sbb
mov
pop
neg
pusha
into
mov
xor
jno
scas
and
lar
mov
(bad)
out
sbb
sub
cdq
repnz
icebp
in
jmp
outs
aam
call
cmp
out
fimul
imul
imul
push
adc
pushf
mov
out
(bad)
jg
sar
cmc
sbb
jb
pop
int3
dec
mov
enter
loope
icebp
stos
fld
jnp
adc
popa
leave
out
and
call
and
cmps
idiv
ror
mov
mov
sub
aaa
dec
mov
gs
(bad)
lahf
lahf
scas
and
xlat
fistp
(bad)
cwde
stos
inc
cmps
pop
aam
das
xabort
jbe
test
or
popa
fxch
sti
aad
fcmovnbe
pusha
fild
into
cli
in
out
xchg
push
ret
mov
into
imul
push
clc
call
ds
xchg
scas
cwde
sbb
inc
add
cmp
mov
fwait
popf
je
test
adc
xor
or
mov
add
mov
repnz
adc
xlat
ins
cmps
nop
lods
test
and
ss
and
pop
lea
popf
aad
gs
cmp
call
cmps
lock
xchg
nop
fwait
pop
mov
call
jbe
lahf
mov
sbb
(bad)
adc
outs
lock
push
repnz
rcr
dec
stc
fisubr
adc
jo
dec
pusha
(bad)
ins
inc
jecxz
adc
iret
test
stos
retf
mov
mov
imul
repz
add
adc
pop
dec
shl
ss
call
mov
jmp
fimul
les
out
jg
ss
xor
sub
dec
xchg
into
push
out
mov
stos
dec
mov
pop
inc
sub
lock
dec
jl
xchg
mov
js
addr16
jmp
scas
or
pop
fldenv
jle
inc
push
mov
aam
pop
imul
in
inc
mov
sahf
adc
dec
push
jo
sbb
add
cmp
fimul
sbb
lods
sahf
sub
dec
sub
jecxz
push
bound
iret
push
mov
cli
pop
test
or
jge
clc
dec
sbb
pop
out
lahf
sub
jns
aam
mov
jp
aad
inc
cmps
(bad)
loope
mov
jns
add
push
(bad)
in
and
sbb
push
or
cs
out
ins
out
pusha
adc
fwait
data16
dec
cmp
(bad)
pop
pop
adc
pop
adc
test
inc
inc
enter
loop
dec
(bad)
mov
mov
pop
xor
jns
sahf
retf
adc
retf
out
push
stos
fs
sub
int3
sar
outs
xor
pop
push
xor
adc
jbe
repnz
cmp
repz
les
sbb
pusha
adc
fwait
inc
das
iret
push
mov
les
mov
iret
js
imul
(bad)
out
fwait
xchg
mov
mov
or
jno
pop
movs
repnz
retf
out
iret
mov
idiv
xchg
rol
cmp
cli
push
add
outs
cmp
call
adc
jae
sub
jecxz
test
push
(bad)
mov
mov
pop
nop
pop
pop
in
mov
dec
aaa
rcl
test
jnp
daa
fst
repz
popf
ss
hlt
jecxz
fild
cmc
xchg
adc
pop
sbb
fiadd
fsubr
or
xor
inc
iret
(bad)
gs
mov
and
jmp
push
add
and
jge
dec
shr
push
jg
sbb
cmp
mov
lods
fs
mov
imul
cmp
fld
sub
xchg
arpl
dec
fisttp
das
jp
add
(bad)
shr
and
rcr
repnz
pushf
sbb
adc
pusha
dec
out
stc
jo
lods
sub
jno
imul
mov
lea
mov
fadd
int3
mov
test
push
rcl
fild
outs
cmps
out
jnp
xor
fist
test
cld
cmc
inc
and
dec
lock
mov
xlat
pop
test
cwde
push
test
push
scas
mov
sub
addr16
pop
push
outs
dec
data16
outs
fmul
mov
push
retf
pop
aad
bound
adc
scas
outs
add
ins
and
mov
sar
or
inc
mov
push
sub
repz
jecxz
mov
and
cld
int3
inc
test
lds
cmps
push
push
and
sub
adc
adc
xlat
mov
xor
pop
stc
mov
cmp
add
sahf
repnz
sbb
pop
push
xor
daa
xchg
sbb
mov
and
or
push
stos
adc
(bad)
nop
(bad)
leave
jb
std
mov
dec
fldenv
xor
push
dec
into
mov
loop
push
cmp
xlat
xlat
mov
and
inc
(bad)
mov
add
mov
jae
add
std
scas
mov
and
cmp
xchg
dec
push
mov
jae
inc
and
mov
fidiv
or
call
mov
out
jns
mov
movs
or
xchg
add
push
je
cmps
loopne
int3
stos
fisttp
in
cmps
and
sbb
xchg
fwait
adc
out
add
in
inc
dec
enter
mov
in
cmp
scas
cwde
or
adc
add
sub
loop
mov
popa
cld
inc
jb
pop
sub
repz
add
inc
jp
aam
(bad)
fwait
scas
fwait
dec
cmp
dec
push
mov
jns
and
add
dec
inc
movs
sub
pusha
add
sub
in
dec
(bad)
xor
cmc
xchg
mov
inc
fisub
clc
or
int
jle
int3
add
(bad)
dec
frstor
push
dec
push
push
and
sbb
dec
xor
inc
popa
les
mov
fs
jg
outs
push
movs
add
mov
(bad)
loopne
or
(bad)
mov
inc
ficomp
mov
xchg
mov
inc
not
into
clc
mov
sbb
sbb
fiadd
rcr
jle
mov
packssdw
ds
test
mov
adc
les
stos
fcmovu
dec
cmp
retf
loop
inc
inc
cmp
and
inc
loop
push
or
aam
icebp
push
nop
mov
and
loopne
mov
je
sub
push
fisttp
repz
dec
neg
stos
mov
mov
jecxz
pop
dec
repz
rol
mov
(bad)
mov
ret
(bad)
sub
push
ins
fs
jno
add
lea
ss
sbb
outs
cmc
add
xor
xchg
push
inc
jle
xchg
sub
xchg
jns
outs
shl
inc
scas
xor
push
cs
jg
test
cmp
ins
popa
stc
add
xchg
scas
movs
stc
test
sahf
arpl
add
sbb
dec
pusha
add
and
or
push
hlt
fyl2x
repz
out
cmps
sbb
mov
arpl
sub
jno
push
mov
(bad)
hlt
lea
xor
ret
dec
imul
jb
add
shl
or
jl
pop
inc
xor
adc
jnp
gs
pop
(bad)
(bad)
cli
fwait
sti
jp
int3
outs
(bad)
test
push
sub
sub
sub
mov
pop
fucomip
inc
sti
cmp
jg
cmc
lock
lds
cwde
jo
xor
xor
sub
outs
fldcw
jle
je
jle
xchg
xchg
mov
adc
stc
int
mov
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
aaa
push
in
stos
ds
adc
js
mov
das
rcr
fs
nop
cdq
or
rcr
dec
adc
mov
sub
pushf
mov
inc
retf
ja
push
int3
icebp
lahf
xor
fist
scas
movss
out
fwait
dec
test
adc
mov
adc
jb
mov
lods
mov
pushf
adc
inc
add
sbb
ins
outs
jae
and
and
dec
lods
push
sbb
and
retf
or
xchg
mov
cdq
push
mov
jmp
sbb
jmp
loop
out
out
js
cmc
add
nop
(bad)
mov
test
xor
or
repnz
and
pushf
fisub
jae
aam
jbe
iret
and
les
repz
or
jne
jecxz
mul
push
adc
mov
gs
ds
aad
lods
lea
or
gs
or
xor
add
jnp
iret
push
ins
pop
inc
int
inc
sub
xor
cmp
iret
xlat
sub
cdq
fisub
inc
jle
movs
lock
fst
inc
loopne
or
sbb
inc
pop
or
xor
sti
test
jo
jmp
add
cmps
out
push
push
pop
mov
test
xchg
pop
cmp
shl
or
adc
in
lahf
shr
mov
add
inc
icebp
(bad)
mov
push
das
loope
out
idiv
fimul
ror
dec
push
ins
pop
mov
or
call
mov
ret
fs
and
xchg
jno
addr16
jle
aaa
ss
popa
jl
and
cmp
das
fisttp
sub
rcr
push
mov
lods
push
mul
jae
push
data16
adc
push
inc
pushf
jp
and
repnz
dec
jno
(bad)
in
cmc
push
xchg
repnz
pop
xchg
in
loope
cli
add
inc
std
inc
sub
add
and
ror
cmp
pop
aas
out
mov
ins
jns
neg
or
push
inc
je
pop
in
out
or
push
ins
fwait
push
std
nop
and
ins
mov
push
sub
retf
inc
inc
sahf
std
or
jg
mov
jo
mov
and
or
(bad)
dec
xor
aaa
pop
mov
outs
jecxz
imul
inc
mov
div
xor
test
add
push
cs
dec
cdq
call
fsub
xlat
nop
cmp
lea
xchg
mov
mov
or
sub
das
push
mov
ret
ja
mov
div
dec
xchg
ins
jo
xor
xor
test
imul
inc
push
cdq
and
cmp
mov
hlt
mov
loop
push
mov
jg
and
pop
add
ds
sub
push
or
inc
mov
push
xchg
mov
dec
out
iret
fild
cmp
sub
call
mov
out
push
pop
jl
mov
ins
cmc
xchg
test
jge
inc
pop
jb
repnz
inc
sub
icebp
push
sbb
sub
iret
icebp
and
mov
out
jg
movs
and
pop
pop
ror
sbb
scas
(bad)
push
and
xchg
sub
adc
rcl
jnp
scas
add
cld
push
jp
dec
add
inc
xchg
clc
xchg
sub
add
sub
arpl
loop
add
icebp
(bad)
popa
xchg
xor
pop
xchg
jp
jmp
arpl
call
mov
cmc
mov
cmps
jp
inc
inc
push
out
mov
add
or
pop
jno
pop
mov
jmp
or
jg
fs
repz
inc
adc
push
push
aam
lods
dec
std
inc
test
outs
mov
js
dec
movs
xchg
push
inc
ret
push
iret
push
sub
sti
push
sub
adc
in
outs
leave
push
rcl
and
(bad)
sub
add
pushf
cs
pop
jns
out
and
mov
in
xchg
mov
ret
lds
cdq
cwde
lds
sub
repnz
xor
adc
ds
sbb
aas
jno
add
add
clc
sbb
test
outs
push
call
sbb
mov
(bad)
xor
fimul
or
or
not
mov
mov
in
clc
stos
fwait
sti
cmp
idiv
aaa
jle
push
sbb
ja
inc
jp
aas
or
imul
push
in
cmc
test
jle
push
enter
test
or
cmp
add
mov
add
or
call
icebp
cmp
mov
mov
sub
jb
enter
adc
and
(bad)
xchg
fld
jl
out
cmps
jo
cmp
adc
jmp
cli
in
and
sti
daa
rcr
test
mov
aad
pop
retf
xchg
movs
and
sub
mov
xchg
mov
push
push
ror
(bad)
xor
out
ja
sub
jnp
add
mov
xchg
out
mov
mov
jle
mov
aaa
or
mov
lods
mov
add
scas
xor
fsub
std
aam
iret
and
fmulp
fcomp
mov
data16
retf
fisubr
ret
test
mov
pusha
lds
push
fstp
adc
sbb
dec
fiadd
stos
repz
mov
pop
arpl
cmp
nop
jl
pop
jbe
test
mov
pushf
push
jecxz
data16
sahf
cmp
adc
jg
adc
jne
aas
clc
adc
cmp
inc
paddw
push
or
sub
mov
cmc
xchg
sub
int
iret
outs
cmc
or
xlat
jnp
mov
lods
cmps
dec
mov
and
mov
cmps
arpl
xchg
add
xor
das
jmp
test
into
push
sub
sti
test
pop
cmp
xchg
gs
in
nop
and
cmp
outs
push
and
add
push
and
adc
jecxz
retf
mov
stos
stos
sub
xchg
push
mov
mov
in
pop
mov
mov
mov
mov
mov
daa
adc
les
xchg
adc
inc
inc
ins
xor
mov
pop
xlat
push
js
and
jo
pop
jmp
ins
dec
push
sbb
stos
mov
mov
js
pusha
xchg
fucomi
dec
or
sub
sbb
inc
xor
test
xor
cmc
scas
inc
add
xor
push
xor
jae
imul
add
js
sub
out
dec
sbb
jne
add
in
lods
or
call
dec
inc
xchg
dec
adc
or
push
(bad)
imul
rcl
adc
dec
out
sub
lea
push
adc
jb
loopne
(bad)
jg
sbb
loope
and
mov
sahf
dec
cmp
add
mov
cs
or
call
in
sub
inc
outs
xchg
xor
sar
js
add
nop
leave
lahf
inc
xchg
adc
mul
push
jae
out
jmp
sbb
ss
cmp
add
push
or
(bad)
jmp
xchg
iret
pop
mov
fsubr
(bad)
std
scas
push
ja
shr
add
jno
inc
fsubr
pop
sti
mov
pusha
or
and
xor
in
iret
mov
sbb
in
popf
(bad)
sub
jl
inc
(bad)
(bad)
adc
loop
push
bound
cld
or
out
scas
addr16
sbb
mov
xchg
xchg
pop
dec
loop
call
mul
jbe
inc
xor
cmc
dec
or
cmp
aaa
out
test
inc
cmp
je
xor
(bad)
mov
cdq
adc
test
sbb
push
enter
cmps
stos
(bad)
xor
sub
add
push
scas
sbb
test
in
or
push
sub
pop
cmps
jmp
push
pusha
and
test
jmp
stos
push
repnz
fmul
clc
lods
mov
and
out
inc
out
pop
mov
mov
jbe
dec
jne
retf
pop
repz
mov
xchg
xor
out
push
nop
dec
(bad)
out
das
jmp
test
cmps
mov
cmp
xchg
or
mov
inc
(bad)
push
sbb
xor
sub
sbb
mov
push
ret
stos
fcmovnbe
cmp
jp
test
sub
mov
pusha
(bad)
mov
(bad)
jle
shr
fistp
jl
mov
ret
call
es
jo
dec
push
or
xor
ss
pop
ins
and
aad
iret
in
cli
hlt
pop
xchg
adc
sub
pop
fxch
ja
cmp
int
xchg
pop
and
jnp
dec
leave
and
dec
pop
sbb
scas
dec
mov
icebp
movs
in
mov
xor
icebp
jne
out
xor
push
in
adc
lods
xchg
ret
jmp
out
iret
or
shr
imul
mov
dec
mov
mov
ss
cmp
scas
sbb
mov
fwait
jb
popf
loop
cmps
xor
mov
xlat
clc
push
jle
pop
rcl
out
inc
inc
mov
pop
in
or
dec
ror
(bad)
mov
dec
jne
xor
sub
(bad)
daa
pop
push
jo
sub
cs
dec
ins
dec
jns
push
loop
arpl
mov
pop
dec
rol
pop
loop
test
dec
rcl
and
pop
mov
into
and
xor
div
in
das
cmps
push
aam
out
jge
xchg
int
jns
lea
and
retf
pop
push
out
and
pop
jnp
cmp
dec
vaddss
(bad)
aad
lock
nop
add
push
inc
and
scas
jmp
sub
scas
inc
out
out
ror
mov
sti
push
call
mov
mov
je
add
sub
pop
jle
mov
mov
xor
and
sar
call
fcom
fmul
(bad)
or
and
push
add
shl
je
jmp
xchg
cmp
adc
push
dec
pop
push
add
sbb
xchg
mov
cmc
cdq
scas
xchg
dec
in
lea
add
rol
stc
rcl
nop
pop
inc
hlt
in
lods
out
dec
pop
aas
or
jle
fs
jmp
mov
ss
fcmovnbe
sbb
pop
inc
shl
dec
pop
and
pop
int
movs
ret
sub
xchg
imul
xchg
cmc
sbb
jl
enter
mov
mov
xchg
fisubr
fs
xchg
dec
cmp
les
fisttp
js
xlat
adc
mov
sbb
out
sbb
cmp
and
fstp
leave
cli
inc
aam
fcom
mov
stos
hlt
xchg
cmp
add
scas
xor
fist
jg
test
fs
dec
xchg
mov
test
cmc
or
aad
push
dec
push
xchg
jmp
leave
repz
cmp
retf
(bad)
arpl
add
scas
mov
in
xchg
sbb
mov
daa
(bad)
loop
mov
mov
cmp
enter
ror
jno
xchg
ins
scas
outs
jmp
popf
popf
inc
imul
pop
mov
sub
addr16
dec
adc
call
(bad)
sti
jae
mov
mov
cmps
test
es
ret
pop
cmp
push
iret
push
inc
frstor
les
push
inc
push
out
mov
imul
loopne
retf
mov
ret
jecxz
xchg
aas
jp
push
nop
pop
shl
sti
mov
inc
jae
in
in
push
retf
lds
xor
mov
mov
aam
xchg
pop
test
daa
scas
add
pop
stos
in
aad
mov
lea
sti
mov
mov
es
std
cdq
push
(bad)
popf
cli
mov
test
es
sti
test
inc
jbe
test
fsubr
xchg
fs
nop
jle
jmp
pop
adc
push
dec
cmps
cmc
addr16
(bad)
dec
int
xor
xlat
pop
jbe
xor
inc
jno
and
xor
and
and
inc
jecxz
inc
sbb
pop
movs
push
sbb
mov
outs
mov
pop
or
sbb
popa
xchg
adc
sub
repnz
(bad)
(bad)
repnz
out
push
lahf
lods
data16
clc
add
sub
mov
push
cmp
sbb
imul
xchg
arpl
retf
xor
pop
cmp
cld
cdq
pop
clc
cmc
cmps
loope
dec
fistp
sti
ror
arpl
push
std
jae
bound
(bad)
dec
mov
hlt
aaa
jae
lahf
das
adc
xchg
add
sub
fcomi
jle
jg
mov
call
cmovae
dec
sbb
inc
xchg
sub
push
mov
cs
add
xchg
mov
inc
cmp
sbb
das
popf
dec
mov
add
nop
ror
jmp
stc
stos
imul
adc
addr16
xchg
add
pushf
jae
daa
mov
sar
lea
jb
imul
lea
xor
movs
xor
aas
dec
jae
inc
xchg
inc
repnz
les
pushf
leave
lds
cmp
cmp
jne
(bad)
sub
dec
test
or
adc
xchg
dec
add
ret
sahf
sub
sub
arpl
stos
shl
repz
je
adc
call
cli
adc
cmp
add
mov
js
or
in
outs
push
push
outs
cmps
xchg
pop
jecxz
xchg
jp
push
inc
cmp
dec
inc
sar
and
adc
mov
rol
sbb
add
pop
rcr
xchg
test
mov
push
idiv
add
mov
loop
mov
sbb
jmp
or
ror
repnz
dec
mov
and
movs
lods
xchg
mov
jb
dec
push
xlat
mul
iret
faddp
sub
dec
call
scas
pop
in
jecxz
mov
scas
mov
test
inc
xchg
pop
fisttp
xchg
sub
add
les
and
xchg
dec
ins
and
xchg
adc
movs
push
and
inc
pop
into
popa
mov
add
aas
adc
shl
mov
popa
clc
inc
sbb
inc
add
pop
mov
cmp
mov
sub
mov
add
cmp
pop
test
jge
jg
mov
xor
jmp
lea
cld
dec
pop
inc
dec
int3
push
dec
rsqrtps
lahf
cmp
add
mov
dec
add
movs
jb
or
kmovb
out
(bad)
imul
push
idiv
into
jmp
mov
in
cmps
xchg
adc
fild
cmp
mov
std
imul
in
jo
cmp
and
subps
cmp
fs
or
push
cwde
test
jp
clc
test
in
mov
test
mov
jmp
dec
ret
mov
cwde
pop
cmp
out
push
inc
jecxz
cli
push
repz
jle
loop
sub
in
int
pop
sub
sbb
jo
bound
daa
inc
xor
pop
(bad)
leave
ret
xchg
pop
jp
ficom
loope
movs
mov
mov
dec
mov
mov
pushf
pop
mov
(bad)
jae
add
out
push
inc
inc
ss
mov
mov
jmp
les
loop
inc
clc
nop
jmp
mov
out
add
fs
or
(bad)
call
ja
xor
xor
sub
push
pop
xchg
inc
js
dec
popa
ror
and
xlat
out
and
jbe
mov
test
(bad)
in
pop
(bad)
cli
neg
cmp
repnz
sbb
sub
or
movs
add
xor
sbb
mov
inc
mov
or
int
dec
popa
mov
cs
lods
loop
cmc
pop
adc
ins
jns
clc
jae
and
outs
xchg
inc
mov
mov
ret
scas
fistp
mov
sbb
bndstx
stc
sub
movs
add
pop
idiv
sti
(bad)
repnz
stos
call
mov
test
ins
xor
add
add
push
fsubp
cmp
pop
pop
mov
add
popf
xor
sar
dec
lahf
and
xor
in
or
ins
out
stc
mov
sbb
adc
mov
ins
(bad)
pop
imul
add
dec
popf
push
(bad)
mov
and
cmp
dec
push
sub
xadd
push
or
lahf
mov
mov
(bad)
mov
push
jl
sbb
loop
push
fst
mov
jae
mov
or
push
cmp
retf
lock
or
push
out
aaa
sub
inc
and
pop
repnz
mul
aaa
cmp
loope
lahf
or
jp
dec
add
adc
imul
shr
(bad)
int3
clc
rol
mov
test
add
and
mov
fidiv
std
or
ins
add
mov
ret
pop
sbb
push
pop
out
push
adc
outs
aas
and
and
out
jg
call
sbb
in
pop
lahf
push
jecxz
sbb
xor
mov
adc
int
push
ja
mov
and
nop
stos
test
rcl
ss
fwait
paddsw
xchg
sar
(bad)
cmp
add
aad
ret
rcr
repz
out
jmp
mov
repz
out
xor
daa
std
retf
mov
mov
stc
and
sbb
fidiv
mov
add
dec
and
xchg
dec
popa
jns
jmp
ins
inc
nop
aas
(bad)
add
repnz
gs
(bad)
or
iret
(bad)
adc
shld
or
mov
xor
xor
xor
mov
mov
outs
adc
imul
mov
xchg
jmp
jg
xor
sub
hlt
pop
movs
cwde
rcr
addps
shl
sbb
and
test
mov
mov
sbb
or
cmp
cs
sub
lea
in
dec
jnp
mov
jmp
loop
push
mov
sub
push
(bad)
jnp
inc
call
ret
ins
mov
or
in
pop
bound
mov
inc
jnp
jae
jmp
sub
jg
or
dec
mov
jecxz
outs
outs
(bad)
jne
icebp
mov
xchg
fstp
test
xor
push
add
fidivr
jg
popf
and
push
pop
stos
add
mov
add
mov
and
or
pop
cmp
arpl
adc
sahf
push
lahf
inc
pop
mov
(bad)
in
movs
out
pop
fcom
pusha
ins
mov
mov
(bad)
enter
(bad)
gs
mov
stos
outs
add
out
cmps
(bad)
cld
lea
(bad)
ret
xchg
movs
push
sar
daa
mov
mov
and
cmps
xor
pusha
sbb
test
adc
mov
mov
cmp
or
mov
mov
movs
adc
mov
test
out
dec
pusha
in
lock
inc
addr16
mul
mov
mov
lock
mov
loope
mov
or
enter
test
in
push
test
or
sar
retf
xchg
push
lea
add
or
or
test
(bad)
fs
sbb
push
add
loop
and
mov
xchg
mov
repz
dec
rol
inc
inc
add
push
cmp
outs
xchg
sub
fldcw
std
or
adc
jnp
mov
jb
mov
bound
and
lods
pop
mov
mov
mov
movs
fild
lods
cmc
xor
push
fnstcw
pop
mov
push
shl
pop
dec
push
jno
and
test
adc
inc
xor
sti
xchg
stos
add
push
icebp
jmp
psrld
jmp
cmp
mov
loopne
mov
cmp
sub
push
add
les
mov
mov
cmp
adc
mov
mov
stos
lds
mov
xchg
push
or
aaa
jne
add
adc
mov
and
inc
cmp
xchg
pusha
xor
jno
pop
jg
sub
rcl
icebp
dec
lahf
popf
fdivr
pop
sbb
or
mov
pusha
inc
push
inc
xchg
das
iret
mov
jno
test
outs
inc
mov
xchg
mov
ins
dec
shl
bound
mul
iret
lahf
dec
movs
rcr
shl
in
sahf
ficom
dec
imul
pop
inc
jo
mov
or
cmp
xor
or
add
jg
pop
add
mov
stc
call
out
rol
leave
mov
xchg
pushf
jb
adc
ret
push
adc
das
movs
push
clc
mov
inc
jo
fisub
xor
aas
stc
mov
stos
sbb
xchg
retf
test
mov
mov
psllq
xchg
fistp
(bad)
and
jnp
push
enter
sub
outs
push
icebp
les
dec
ficom
sbb
dec
repz
xlat
in
fidiv
jae
arpl
mov
add
jmp
mov
pop
mov
sbb
dec
out
add
out
inc
push
icebp
adc
mov
jbe
add
scas
push
cmp
pop
jmp
add
mov
loope
retf
(bad)
xchg
mov
ins
sbb
adc
gs
jecxz
sbb
dec
fld
fist
lea
jno
sub
or
sti
mov
loopne
mov
pop
sub
aas
retf
lds
shl
icebp
stos
movs
jo
jp
popa
mov
and
xor
je
ror
repz
mov
dec
xlat
add
xor
sbb
rol
mov
sar
inc
shl
sub
test
sbb
inc
adc
jl
js
mov
add
inc
sub
(bad)
(bad)
aam
loop
sti
jne
jge
and
sti
inc
ror
add
outs
add
mov
xor
jnp
sub
imul
push
and
movs
sti
(bad)
xor
dec
sub
in
or
dec
jno
or
or
das
in
mov
loopne
xor
jns
sbb
aaa
and
lock
pop
shr
sbb
mov
nop
xor
imul
jnp
outs
mov
cmps
mov
cmp
inc
mov
rol
inc
dec
cmp
mov
test
inc
dec
inc
sbb
mov
ret
push
adc
(bad)
fisubr
cmps
jecxz
push
mov
imul
or
outs
jae
dec
sub
pop
push
dec
leave
xchg
dec
call
or
pop
sbb
jo
mov
les
call
sub
xchg
ret
test
out
stc
mov
loopne
cmc
xchg
push
xor
push
xor
add
test
(bad)
test
add
and
loope
fbld
repz
aaa
and
jnp
aad
pop
popa
cwde
adc
adc
sbb
cmp
or
sbb
loope
test
jl
xor
rol
cwde
mov
mov
int
xchg
mov
stc
xor
imul
cwde
sbb
in
ret
mov
cmps
pop
call
xor
and
mov
xor
mov
mov
mov
sbb
mov
aam
push
rol
fsubr
test
pop
push
jp
call
sbb
cmp
gs
push
sahf
in
imul
pop
std
enter
outs
test
mov
scas
jno
enter
sub
mov
jmp
in
sub
inc
pop
xchg
imul
and
adc
icebp
push
jne
imul
dec
hlt
inc
pop
fist
sbb
cmp
retf
inc
jb
xchg
cmc
ds
xchg
sbb
test
stos
cld
fild
add
pop
jnp
cmp
add
sbb
mov
(bad)
add
fisubr
cmps
pusha
add
fdivr
mov
mov
cwde
outs
jmp
push
pop
adc
xchg
repnz
add
repz
mov
jne
jmp
frstor
push
inc
jns
or
mov
ss
adc
cvtdq2ps
sbb
dec
pop
neg
mov
adc
inc
cmc
jp
or
cld
xchg
lods
or
pusha
movs
jg
cs
xchg
loope
dec
xor
(bad)
leave
int
inc
lahf
mov
jecxz
adc
ror
sbb
(bad)
cmp
fnstcw
push
aam
dec
add
dec
and
adc
mov
and
fs
mov
repnz
out
movs
fst
pusha
or
push
mov
(bad)
fstp
in
cld
retf
mov
add
dec
jae
jp
jns
clc
cmp
imul
or
jns
adc
es
cmp
scas
in
xchg
jo
pop
imul
add
mov
fld
dec
fstp
fisub
lods
add
movs
mov
mov
test
out
pusha
loope
mov
or
lea
bound
cmp
(bad)
jmp
sbb
ins
mov
into
add
add
(bad)
mov
ja
ds
popf
into
outs
push
jae
mov
adc
or
xchg
xchg
mov
stc
mov
stc
xlat
cmp
xor
inc
loope
jno
pusha
xchg
dec
jge
test
shl
adc
jp
inc
jns
add
iret
or
jecxz
mov
not
xlat
mov
dec
add
(bad)
sahf
gs
add
dec
stos
cld
mov
jns
ins
shl
dec
dec
lds
out
mov
or
daa
push
lods
xlat
push
pop
cmp
push
add
outs
jne
jg
jle
mov
jle
jmp
jns
adc
dec
sbb
add
add
cmp
xchg
popf
mov
(bad)
mov
adc
shl
cmps
sub
sbb
mov
push
jo
xor
inc
(bad)
sbb
movs
sbb
ins
and
loope
data16
push
test
mov
mov
xchg
push
push
push
cld
xor
jle
ds
mov
les
es
bound
pusha
leave
int
leave
jo
lock
imul
jns
jns
add
cmp
add
jns
into
out
mov
mov
ja
xchg
add
xchg
dec
loope
or
and
inc
ins
outs
xchg
dec
cdq
mov
(bad)
nop
push
jge
stos
pop
mov
sbb
mov
jnp
xchg
int3
les
(bad)
pop
dec
pop
jmp
scas
lea
push
add
and
(bad)
sbb
pop
fsub
jg
sahf
popf
test
mov
pop
hlt
push
cli
test
mov
test
sbb
ins
in
xor
cld
add
loop
add
rol
xchg
in
or
call
mov
std
dec
(bad)
adc
push
bound
jo
rcl
mov
int3
xor
jmp
or
retf
jmp
stc
pop
cmps
ret
call
add
ja
gs
cmp
retf
mov
call
rcr
push
stc
shl
jle
push
movs
sub
add
sbb
mov
xchg
push
cmp
ja
sar
fsub
fdiv
push
or
sub
dec
jo
pop
push
sbb
xor
(bad)
push
dec
mov
xchg
and
jl
dec
sub
enter
cwde
xchg
inc
hlt
sub
and
(bad)
scas
pushf
fst
lock
cli
jp
out
jmp
dec
lods
fcmovnu
add
sub
sbb
push
(bad)
out
sbb
(bad)
jno
in
and
and
das
nop
push
aad
call
pop
pop
cmp
push
mov
push
mov
push
jecxz
pop
push
loopne
(bad)
leave
out
rcr
(bad)
mov
xlat
sub
push
cmp
mov
xlat
adc
ret
jb
mov
data16
gs
pop
or
dec
dec
sbb
fdivr
orps
inc
sbb
push
push
movs
fs
mov
iret
cmp
in
or
lods
pop
mov
js
jmp
aas
sahf
pop
test
aad
mov
sbb
xor
js
cld
pop
push
stos
xchg
cmps
cmp
mov
cmps
test
pop
movaps
mov
(bad)
cs
out
mov
cdq
cmps
fdiv
add
fneni(8087
int
call
push
cmp
test
into
into
data16
and
pop
ins
pop
add
rcl
lods
inc
cs
inc
mov
and
push
push
imul
lahf
sub
cmp
addr16
and
mov
xor
push
out
repz
sub
popf
test
(bad)
repnz
sub
or
das
mov
cmp
repnz
imul
loopne
or
pop
pop
inc
(bad)
jmp
sbb
clc
jne
push
sbb
or
or
ret
ret
jmp
icebp
test
pop
fimul
inc
in
fild
loopne
retf
(bad)
jmp
mov
mov
arpl
cld
push
and
and
stos
es
jg
(bad)
int3
aaa
inc
mov
int
daa
not
inc
sbb
test
jnp
mov
fwait
xor
sub
lock
(bad)
loopne
out
push
jle
add
into
fxam
push
(bad)
jbe
data16
adc
std
push
inc
stos
test
mov
pusha
call
popa
stc
pop
sahf
lods
out
mov
and
out
fnstsw
pop
sahf
mov
cmp
fild
cmp
xor
(bad)
repz
push
pop
not
lds
cld
das
int3
xor
test
and
retf
push
jo
mov
cmps
add
jp
(bad)
mov
js
rcl
loopne
dec
xor
inc
loop
mov
pushf
xor
xor
pop
inc
pop
push
scas
dec
rcr
xchg
push
out
stc
fild
aaa
pop
outs
gs
pop
data16
int3
mov
cld
mov
test
dec
sbb
dec
addr16
hlt
mov
not
repz
jne
cmps
xchg
(bad)
(bad)
push
stos
adc
sub
pop
xchg
mov
sub
cli
sbb
jmp
push
mov
pop
aas
jge
fwait
xor
sbb
xchg
jns
movs
push
outs
push
cwde
sbb
call
add
add
std
push
add
mov
jg
xchg
dec
dec
pop
loop
cld
shl
adc
lods
cmp
inc
std
xchg
ss
inc
mov
mov
lods
fadd
in
dec
lods
ja
inc
fistp
push
int
cmps
jno
mov
push
add
cmp
push
mov
dec
cmps
pop
pop
push
es
push
or
movs
mov
push
push
push
jne
jae
ror
fnstenv
xor
adc
mov
scas
aas
inc
leave
xchg
std
es
inc
sbb
push
push
dec
outs
jecxz
(bad)
mov
(bad)
pop
sub
xchg
cmps
movs
sbb
push
sbb
dec
mov
xor
jbe
aas
push
xchg
jp
mov
dec
adc
pop
test
push
das
sbb
into
or
fadd
add
add
inc
or
pop
adc
call
add
lock
sbb
mov
mov
jae
or
sar
adc
mov
mov
inc
and
add
add
fnstenv
and
xchg
jl
int
popf
dec
inc
mov
movs
mov
inc
mov
mov
cmp
xchg
ret
inc
out
sub
xchg
xor
out
inc
xchg
out
mov
cli
fwait
lods
push
sub
push
stc
dec
mov
xor
sub
jbe
inc
js
js
lods
mov
sbb
jg
adc
jl
pusha
pop
pushf
mov
(bad)
call
in
add
ins
int3
cmp
sub
jg
js
lds
xchg
pop
(bad)
adc
ficomp
xchg
es
or
sub
cwde
rol
por
dec
sub
ins
add
fstp
test
mov
push
movs
adc
fistp
js
adc
cmp
xor
iret
xor
inc
and
mov
or
ds
inc
loop
or
aas
mov
(bad)
shr
xor
push
mov
and
xlat
data16
out
rcl
ds
es
push
fstp
popf
loopne
adc
push
fld
std
xchg
ins
call
sbb
ror
sub
xchg
jbe
or
ins
fidiv
ret
sbb
pop
jl
clc
lods
pop
jle
pop
imul
sbb
xor
cmp
movs
(bad)
jmp
push
mov
push
xchg
mov
ror
and
mov
mov
mov
movaps
add
xor
lods
add
repz
sahf
mov
sbb
push
inc
retf
sbb
cwde
movs
cmps
shl
clc
das
retf
out
adc
pop
test
out
cmp
ja
mov
icebp
pop
add
loope
(bad)
rol
push
jmp
into
or
cmps
sub
pop
add
stos
outs
mov
add
xor
mov
add
xor
xchg
dec
mov
int3
pop
mov
lahf
cs
mov
mov
inc
in
pop
push
jbe
xchg
lahf
push
add
test
mov
imul
xor
imul
aam
sbb
push
loop
inc
scas
mov
jl
scas
dec
test
jg
scas
js
mov
cwde
ins
xor
pop
(bad)
sbb
jl
data16
idiv
mov
jecxz
mov
ret
push
xor
sbb
fwait
dec
enter
daa
jb
into
add
add
js
gs
and
jne
dec
jmp
pop
mov
movs
test
rol
das
addr16
mov
inc
mov
std
mov
icebp
pop
arpl
push
jmp
mov
movs
imul
cli
sub
call
ds
add
push
push
sbb
lds
ret
dec
push
enter
xor
mov
push
and
dec
cmp
cwde
das
pop
jge
cld
mov
dec
push
fwait
sub
scas
mov
sbb
add
push
(bad)
in
mov
cmp
mov
inc
sahf
mov
mov
xchg
or
xchg
and
xor
and
in
(bad)
and
(bad)
in
mov
push
mov
aam
sbb
and
pusha
je
mov
es
sub
ror
popa
jmp
ret
adc
xor
jb
pop
or
ret
and
(bad)
and
lea
or
adc
and
dec
push
pop
mov
inc
push
outs
cli
push
loopne
scas
sub
xchg
icebp
fnsave
xchg
outs
dec
and
mov
xchg
add
repnz
and
adc
mov
push
hlt
push
sbb
pop
sbb
loopne
(bad)
shr
or
mov
pop
out
pop
ror
jo
sub
pop
and
scas
jnp
xchg
pop
imul
not
stos
cli
add
mov
mov
push
adc
imul
ret
inc
xchg
pop
(bad)
cmps
popa
inc
pusha
movs
arpl
sub
or
aam
ss
cmp
xlat
xor
sub
jno
(bad)
xchg
mul
dec
cs
xlat
imul
loop
retf
rcr
mov
cmp
jge
mov
pop
sar
stos
add
call
sub
popf
iret
xchg
adc
stc
div
mov
icebp
arpl
bound
jbe
movs
(bad)
popa
in
loop
or
push
repnz
add
outs
retf
scas
shl
mov
push
jg
inc
mov
in
add
ins
xor
push
mov
pop
jmp
call
and
shl
pusha
std
sub
shl
push
repnz
mov
mov
xchg
fsub
fiadd
shr
add
shl
inc
dec
or
test
jle
jne
stc
fild
sbb
daa
jl
sysenter
loopne
mov
or
mov
icebp
xchg
lods
setns
cmp
pop
jo
stos
lock
cmp
lahf
cmp
test
or
pop
call
into
xor
inc
add
adc
push
inc
push
pop
or
or
(bad)
aad
nop
xor
loopne
push
popf
fdiv
call
mov
cmp
dec
cmp
cmp
pop
aad
cmp
popa
sub
into
cwde
loop
es
call
jle
mov
cmp
sbb
stc
mov
jae
int
jne
sbb
sti
sub
jne
and
push
shl
push
fisub
stos
mov
movs
push
loop
nop
pop
in
jne
inc
inc
push
jmp
mov
adc
jp
sub
mov
gs
pop
push
xchg
inc
cmp
fs
push
rol
mov
repnz
gs
pop
pop
push
pop
ret
jne
fwait
je
jg
adc
fisub
retf
dec
in
popa
dec
sbb
or
ds
push
ret
mov
ja
adc
test
iret
sbb
mov
xchg
out
mov
mov
push
add
popa
ret
mov
adc
stc
test
jo
or
push
daa
popa
mov
mov
cmp
inc
fwait
inc
jo
hlt
or
sbb
bound
aaa
test
push
inc
jbe
jns
and
dec
loopne
jns
iret
jecxz
and
pop
dec
popf
out
mov
adc
in
mov
ror
cmp
(bad)
movs
cwde
out
add
loopne
cmp
(bad)
fdiv
sbb
cwde
sub
jl
cmc
out
rcr
push
or
shl
jae
and
push
int
pusha
and
cmp
mov
cmp
inc
jg
push
dec
sub
push
and
pop
push
aas
arpl
push
in
repnz
sbb
fist
and
adc
jae
and
and
fwait
cmp
lods
cs
ret
cmps
lahf
and
sbb
sub
sub
(bad)
jb
cmp
inc
pushf
stos
inc
enter
push
neg
add
xchg
cwde
sbb
jns
and
push
xor
lods
pop
or
dec
mov
xor
jmp
(bad)
sbb
and
dec
test
lea
sub
xchg
xchg
mov
inc
rcr
and
or
add
jbe
in
(bad)
ins
mov
aas
or
daa
adc
mov
repnz
or
loope
movs
ss
lea
pop
mov
pusha
retf
imul
xchg
test
lock
jle
ss
push
enter
fmul
xor
inc
add
test
ins
mov
sahf
push
les
neg
sbb
ja
adc
aam
mov
sub
jmp
call
or
es
add
sub
add
jns
sar
xor
mov
jp
aaa
add
lods
out
call
mov
(bad)
dec
cmp
fcomp
and
jmp
jae
jnp
repnz
inc
sbb
ret
ja
mov
clc
div
in
leave
das
aad
leave
aad
or
ins
dec
mov
mov
(bad)
fidivr
xchg
dec
adc
or
pop
jl
outs
sbb
and
push
(bad)
rol
push
aas
cwde
mov
rcr
jg
pop
int3
hlt
and
test
jle
jl
pop
shl
mov
cmc
xchg
popf
and
std
push
lods
daa
dec
adc
push
inc
cmp
out
repz
or
test
fnstenv
popf
pop
adc
test
cdq
mov
cwde
pop
push
pop
popa
shl
sub
mov
jno
sbb
loope
inc
fld
mov
sub
mov
dec
xor
cli
sub
jg
shr
icebp
push
jecxz
xchg
and
adc
mov
test
and
mov
mov
inc
push
ins
jb
adc
loope
pop
cmps
imul
out
js
aas
lds
mov
add
shl
idiv
jg
(bad)
adc
mov
int
push
mov
lods
aad
inc
lds
addr16
hlt
cli
add
stc
jge
add
data16
mov
pop
repz
fisubr
repz
shl
mov
cs
adc
rol
mov
adc
ja
sub
xor
xor
imul
and
fadd
xchg
fild
pop
mov
push
dec
pop
out
retf
and
jmp
(bad)
push
or
pop
jmp
jge
sti
and
pop
or
(bad)
sahf
repz
xor
sub
fxch
enter
jo
cmp
lods
movs
(bad)
adc
imul
jp
pop
cld
mov
mov
(bad)
and
leave
scas
cs
or
inc
jae
sbb
call
cmp
cmp
add
mov
sbb
leave
push
xchg
fsub
addr16
cmps
ror
sbb
push
sbb
inc
scas
jb
ja
add
test
mov
test
je
shr
repz
dec
inc
inc
mov
imul
jmp
into
jp
repz
and
int
mov
pop
mov
inc
call
dec
sub
pop
lea
xchg
and
dec
jnp
cmps
xchg
push
(bad)
aas
sbb
ins
jl
inc
ins
jecxz
popa
cmps
aam
lahf
cwde
(bad)
cmp
sub
aas
popf
push
(bad)
aad
addr16
jo
std
mov
dec
jnp
or
mov
xlat
pushf
test
sbb
pop
fild
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
scas
aad
mov
xchg
cmp
and
add
jmp
xchg
outs
lods
out
lock
icebp
sbb
out
sahf
enter
xor
push
mov
dec
repnz
test
sbb
hlt
dec
mov
inc
loope
push
shl
push
test
bound
movs
loop
xlat
mov
movs
in
or
addr16
sbb
push
adc
inc
mov
data16
fisubr
xor
jb
add
movs
jle
(bad)
dec
pop
in
movs
sahf
not
out
push
ss
xchg
adc
stos
test
std
rol
loopne
les
test
rol
push
jns
xchg
js
xor
add
push
test
js
pop
push
mov
clc
cs
add
lods
fwait
inc
out
jp
out
sahf
jecxz
jb
pusha
scas
repnz
mov
rcr
push
adc
xchg
fild
pop
adc
mov
xchg
jmp
xchg
mov
shl
sub
repnz
or
ins
pop
push
push
fimul
pop
pushf
daa
aaa
and
dec
pop
mov
push
inc
push
cmps
leave
mov
adc
pop
outs
add
retf
push
jnp
pop
jae
sub
sbb
enter
jnp
jne
add
sub
add
dec
cmp
pop
add
or
jl
call
pop
xchg
fst
out
daa
push
mov
push
je
sysenter
mov
and
xor
add
jns
sbb
adc
push
cmps
push
ds
xor
cmc
test
ds
pop
fs
(bad)
aas
loop
movs
(bad)
mov
ds
xchg
sbb
das
and
call
mov
icebp
sar
mov
stc
dec
call
push
out
je
sahf
fwait
cmps
adc
lahf
loop
sahf
repnz
fidiv
ror
int3
push
(bad)
and
test
adc
shl
adc
cld
call
aaa
mov
xchg
add
aad
test
je
or
in
stos
repnz
inc
mov
dec
cmp
mov
in
jmp
in
(bad)
int
shl
or
mov
or
and
xchg
mov
mov
mov
jne
push
add
push
xchg
pop
mov
test
push
dec
push
pop
push
push
mov
sbb
ror
enter
lahf
or
ins
mov
test
or
popa
xchg
cmp
enter
cdq
ins
dec
mov
cdq
mov
dec
mov
or
shl
movs
and
xchg
add
mov
dec
adc
dec
xor
jge
(bad)
adc
clc
inc
dec
pushf
push
movs
adc
push
jae
mov
push
leave
mov
jle
xchg
lea
rcl
dec
or
sahf
jbe
pop
pop
pop
cmp
or
adc
das
loop
lock
pop
sub
mov
inc
or
ror
inc
scas
dec
loop
add
push
and
leave
mov
jo
push
jl
jmp
push
mov
push
test
mov
(bad)
shr
rol
mov
shr
xchg
pop
and
mov
js
inc
mov
pop
sti
cld
mov
add
js
sar
scas
dec
icebp
mov
mov
push
or
mov
in
dec
mov
leave
push
pop
mov
adc
retf
loop
xchg
xor
iret
jmp
inc
xchg
movs
sbb
sub
mov
adc
aad
or
sbb
and
cmp
adc
jne
or
jae
(bad)
pop
xor
push
xor
jle
mov
cmp
dec
and
cdq
rol
in
sbb
or
(bad)
and
lahf
mov
jmp
rcr
jge
pop
dec
bt
pop
adc
ins
sar
cmp
ins
mov
mov
jle
adc
lock
mul
push
fadd
push
inc
cmps
retf
popa
push
das
mov
xchg
mov
mov
and
stc
mov
out
pop
shr
mov
fwait
imul
sbb
es
or
push
out
das
cmc
lea
mov
cmp
xchg
(bad)
xchg
add
lock
ret
adc
adc
test
dec
daa
dec
fdivr
pop
push
outs
out
outs
pushf
cmp
test
pop
pop
cdq
jmp
cmps
mov
pop
inc
adc
push
ret
(bad)
adc
add
pop
cld
lahf
mov
and
jp
sbb
inc
or
hlt
sub
lahf
icebp
out
mov
mov
dec
adc
jne
adc
or
lea
rcr
mov
cwde
rol
in
lds
fild
(bad)
fidiv
ret
cmp
mov
arpl
sar
bound
pop
cld
leave
outs
aaa
sub
rol
imul
pop
push
dec
mov
retf
stc
mov
jmp
pop
xchg
xchg
and
jns
push
fist
and
cld
mov
push
and
inc
stos
push
es
stos
(bad)
adc
test
pop
mov
loope
bound
in
push
adc
mov
cmp
push
enter
add
mov
xor
jmp
cmps
rcl
sahf
(bad)
ficom
dec
movs
mov
iret
idiv
enter
cmc
retf
or
and
add
cld
mov
je
(bad)
push
or
pushf
(bad)
mov
fistp
adc
scas
test
add
dec
xchg
mov
jp
shr
mov
xchg
mov
add
test
adc
xchg
jno
adc
push
ds
pusha
add
shr
pushf
out
dec
cs
or
loop
add
mov
mov
cli
mov
xor
mov
daa
aad
cmp
sbb
jne
jle
add
jne
add
ret
push
call
fsubrp
xor
jns
in
test
fnsave
mov
dec
jl
sub
loope
sub
jae
test
add
stos
pop
lock
bound
inc
pop
cmp
ret
ret
xlat
clc
inc
mov
xchg
push
mov
wbinvd
lock
arpl
inc
push
lea
int3
test
retf
xchg
cmps
std
pop
pusha
les
inc
add
sbb
ret
mov
push
test
imul
and
or
dec
dec
shl
jne
xor
jno
jge
mov
add
adc
repnz
pop
mov
(bad)
out
jae
pop
or
xchg
loopne
jl
adc
mov
jno
in
cmps
jae
add
les
push
push
pop
adc
xor
pop
sbb
jl
xchg
cmp
xor
nop
stc
fs
fist
es
jno
(bad)
xor
clc
sti
mov
add
mov
sbb
add
xor
outs
pop
inc
arpl
das
je
(bad)
mov
jle
scas
test
std
out
loopne
or
hlt
cs
cmc
mov
movs
in
cmp
jne
fidiv
and
or
inc
inc
inc
ret
test
(bad)
xchg
jne
cdq
clc
jmp
jne
pusha
dec
pop
rol
xor
or
push
fwait
pop
xchg
into
sub
push
mov
sahf
xchg
push
add
mov
push
popa
je
mov
jmp
push
scas
pop
pusha
aaa
sub
popf
loopne
push
aaa
jle
enter
aam
add
jmp
or
jp
fist
int3
mov
lods
sti
mov
dec
add
mov
loopne
add
loop
in
jns
sahf
cvtdq2pd
lea
adc
paddusb
ss
sub
cbw
popf
xor
push
mov
scas
add
lods
xor
push
sbb
jns
(bad)
imul
neg
xchg
pop
addr16
xchg
aas
sar
ss
and
pusha
shl
cmp
mov
xchg
xcrypt-cfb
cmps
pusha
mov
fmul
in
inc
sbb
lods
out
jg
jge
cmp
arpl
daa
cmps
gs
dec
and
test
movs
xor
fwait
mov
repnz
or
adc
data16
push
inc
xor
mov
mov
push
sar
push
mov
cmp
mov
inc
sbb
xchg
jnp
push
out
loop
mov
push
cwde
out
data16
fist
lods
shl
pop
adc
ins
add
cmp
sbb
cmps
out
cld
xor
(bad)
je
mov
fadd
les
mov
push
clc
jo
js
jae
sub
xchg
pop
repz
nop
xor
dec
(bad)
or
and
cwde
retf
fidivr
jl
dec
and
mov
mov
(bad)
fiadd
and
adc
dec
xor
adc
jmp
jbe
sbb
jo
scas
test
mov
or
fld
mov
rcr
push
gs
add
and
xor
in
cmp
or
inc
cmc
and
adc
imul
xor
xchg
dec
jb
lea
jmp
mov
jmp
mov
xor
pop
sbb
or
sbb
sar
xor
gs
xor
jp
cmp
mov
dec
js
inc
lds
jae
push
dec
add
bnd
test
fimul
sbb
sahf
lock
das
std
sub
mov
add
mov
cmps
retf
push
sbb
jmp
jmp
sti
or
stos
add
adc
test
adc
in
dec
out
clc
cmp
adc
lahf
aaa
pusha
repz
call
enter
not
(bad)
jo
dec
inc
fsubr
mov
push
out
jbe
mov
ss
das
mov
inc
adc
fdivrp
daa
nop
mov
pop
sbb
xor
rcl
imul
sbb
sbb
(bad)
dec
inc
aam
cld
jl
pusha
lds
mov
mov
cmp
ret
in
ret
mov
cmp
dec
test
or
mov
dec
push
mov
(bad)
lock
xchg
pusha
jl
mov
mov
xor
jns
rcr
ret
jae
xchg
bnd
xor
and
(bad)
push
aas
push
sub
fistp
lea
jg
dec
sub
(bad)
lods
gs
fdivr
and
inc
ficomp
(bad)
(bad)
dec
sbb
imul
paddsb
out
sbb
fld
arpl
hlt
jne
xor
(bad)
stc
add
cmp
clc
mov
imul
jecxz
jge
cwde
aad
ucomiss
dec
or
loope
mov
test
jmp
inc
dec
inc
inc
cmp
(bad)
mov
call
out
addr16
iret
xchg
cmp
pop
mov
dec
jno
adc
adc
mov
(bad)
or
jne
xchg
loop
(bad)
int3
popf
adc
retf
clc
cmp
out
lods
rcr
add
dec
and
shr
loopne
das
fs
xchg
dec
sahf
jp
pop
jno
in
adc
or
cld
xchg
lea
cmps
or
mov
mov
push
dec
repz
jno
cmps
mov
call
mov
mov
fs
mov
dec
into
sub
sbb
sbb
jno
xor
sub
rcr
push
xor
adc
jae
iret
jle
and
push
fidiv
out
pop
xchg
pop
mov
jge
jnp
sub
mov
pop
push
rcl
jo
add
push
(bad)
aam
dec
or
adc
pop
pushf
xor
dec
mov
or
test
fstp
mov
lahf
dec
mov
jns
ins
pop
dec
shl
sub
or
xchg
scas
fdiv
cdq
xchg
sub
add
jno
and
cmp
xor
fdivrp
push
and
add
mov
stc
dec
mov
in
mov
shl
or
shl
popa
dec
push
inc
add
retf
dec
adc
fchs
enter
cmp
jl
stos
xlat
mov
shr
push
in
jmp
dec
fisubr
sub
pop
sbb
call
jne
add
into
sub
scas
cs
mov
shl
xor
icebp
mov
lock
mov
movs
(bad)
and
mov
dec
loopne
fist
stc
cmp
repnz
sti
cmp
popa
pop
test
imul
pop
in
jecxz
xor
stc
dec
pop
mov
out
(bad)
mov
pop
outs
push
daa
(bad)
pop
cmp
rcr
and
arpl
je
adc
out
xchg
dec
xchg
iret
jno
call
inc
xchg
fstp
xor
das
cwde
sbb
push
push
cld
mov
loop
inc
arpl
push
out
loopne
push
inc
clc
add
jge
cli
gs
movs
pop
adc
stos
jne
mov
or
inc
pop
sbb
movs
not
add
dec
aaa
ins
out
mov
sbb
je
xchg
push
mov
mov
in
fist
adc
vmovsldup
int
mov
jo
test
add
push
mov
fisub
dec
fild
shl
repnz
fistp
adc
clc
xchg
dec
sbb
push
add
test
adc
push
pop
pop
pop
jecxz
cmp
stos
ja
repnz
in
jbe
aam
cli
pusha
or
bound
mov
(bad)
push
pop
or
out
or
jmp
ss
retf
jbe
or
mov
in
push
inc
test
mov
and
adc
mov
(bad)
sahf
fimul
pop
mov
or
scas
ins
or
add
dec
lds
xchg
call
and
mov
cmps
out
stos
xchg
movs
in
xor
(bad)
loopne
sub
jns
push
cmp
inc
leave
in
ret
jmp
call
loopne
rcr
and
arpl
popf
mov
mov
loope
cdq
sbb
movs
add
mov
jge
xchg
xchg
jns
cmps
fstp
hlt
mov
popa
imul
lods
pop
enter
out
(bad)
and
jge
lea
mov
dec
in
imul
add
sub
shl
sub
aas
call
sbb
mov
out
stos
in
adc
out
in
pop
sahf
adc
ss
mov
push
div
dec
add
and
inc
(bad)
xor
(bad)
cmp
add
dec
dec
sar
gs
mov
sub
or
push
arpl
dec
jo
test
sub
mov
ins
jp
pop
(bad)
fdiv
cmp
cmp
mov
inc
pop
mov
pop
mov
outs
test
addr16
(bad)
aad
and
or
push
jo
xchg
and
mov
fld
ror
mov
popa
cli
sbb
arpl
dec
shl
add
xchg
ss
mov
and
adc
lock
cmp
mov
and
dec
lds
mov
(bad)
cld
adc
nop
xchg
ret
and
clc
inc
nop
out
ficomp
inc
pop
arpl
nop
and
stos
lahf
jno
fist
popf
int3
mov
dec
addr16
fs
jnp
test
jl
mov
retf
adc
lock
xlat
xchg
test
adc
add
jb
test
repz
inc
mov
rol
(bad)
hlt
fisubr
ret
and
sub
mov
nop
pusha
push
mov
adc
mov
xlat
and
pop
add
mov
cmp
jecxz
pop
jl
mov
retf
aad
mov
pusha
push
push
mov
and
sub
je
sbb
dec
jns
pop
pop
daa
and
aam
jle
arpl
and
dec
shl
jno
lods
pop
adc
inc
or
adc
or
les
loop
retf
retf
test
loope
pusha
cmp
lock
int
mov
xchg
out
test
mov
inc
xor
rol
(bad)
das
ins
or
mov
retf
fdivr
mov
aaa
out
scas
pop
xor
sub
inc
mov
sahf
iret
sbb
stos
push
adc
lea
sahf
and
test
fst
mov
or
or
and
xlat
or
add
addr16
dec
pop
sub
and
sbb
retf
and
dec
loop
jo
sub
fstp
movs
popa
fsubrp
daa
add
push
jae
(bad)
ins
mov
mov
add
into
push
and
pushf
cs
xor
mov
pop
out
in
dec
int3
push
nop
(bad)
and
mov
arpl
test
ins
dec
jo
pop
sbb
dec
lock
adc
adc
(bad)
inc
xchg
aad
retf
ret
outs
xor
inc
mov
push
pusha
mov
outs
jns
inc
adc
retf
fiadd
pop
mov
fld
aas
push
addr16
fidivr
xabort
sar
jecxz
jo
dec
cmp
es
xor
dec
cli
stc
lods
jp
ficom
cmp
jmp
fwait
mov
fs
dec
mov
ja
scas
nop
cmps
sahf
adc
(bad)
jmp
call
xor
and
jle
dec
mov
dec
enter
in
mov
data16
fisubr
test
jg
mov
pop
mov
inc
mov
mov
inc
test
jecxz
cmp
mov
dec
mov
into
mov
mov
push
xor
mov
fadd
cmps
adc
test
test
fcom
lock
mov
pushf
out
xchg
xlat
push
dec
movs
pop
int3
jnp
addr16
movs
test
addr16
xor
jne
xor
(bad)
pop
lods
fstp
pop
rol
into
sbb
jae
xor
inc
fld
pop
push
scas
cmp
jb
repnz
jnp
mov
xchg
or
test
and
sbb
mov
xor
pcmpgtw
pushf
xor
icebp
cmp
call
mov
xor
pop
xchg
pop
adc
pop
xor
fisub
sahf
mov
lea
xor
and
stos
stos
inc
or
add
jp
mov
add
sbb
dec
pop
cmps
xchg
push
aad
add
mov
jge
lahf
(bad)
js
xchg
jmp
fsub
cmp
sahf
movs
pop
adc
imul
inc
je
inc
push
jne
fwait
xor
call
mov
lods
movs
stc
cmc
iret
xor
inc
leave
mov
leave
and
es
cmp
or
stos
loope
sar
(bad)
jbe
fmul
mov
out
xor
sbb
dec
sbb
dec
xchg
rcr
stos
mov
jo
ss
dec
inc
sub
gs
and
xchg
inc
nop
fstp
in
(bad)
dec
lods
push
movs
jne
les
rcr
sub
xor
(bad)
cmps
xchg
jle
push
cmps
sub
jnp
mov
pop
inc
fwait
jb
push
adc
scas
sbb
sub
add
or
mov
mov
and
xlat
hlt
pop
fst
fidivr
inc
mov
std
xchg
cmp
mov
xchg
(bad)
out
inc
pop
or
add
add
mov
inc
sub
push
jne
scas
cmp
addr16
sbb
or
mov
mov
fist
xchg
(bad)
addr16
xchg
mov
popf
jae
and
test
movs
int
or
jae
stos
cmps
inc
std
addr16
aas
lds
sahf
sub
movntq
outs
push
int3
sbb
(bad)
(bad)
popf
iret
cwde
loopne
pop
jbe
aad
and
mov
mov
adc
push
loopne
adc
push
repnz
mov
jae
xchg
mov
cmp
test
stc
and
loope
out
ins
movs
xchg
dec
cmps
or
mov
sbb
xor
mov
jge
mov
add
jl
or
pop
imul
mov
jns
mov
cld
les
inc
push
dec
popa
cmp
mov
inc
ret
loopne
pop
push
or
and
mov
mov
loopne
xor
mov
add
jl
jb
dec
jmp
add
call
mov
imul
and
inc
sbb
or
in
aas
fbstp
or
mov
imul
sbb
push
cld
push
lea
xchg
jecxz
pushf
add
icebp
enter
add
and
jno
jp
stos
cmp
ret
cld
sbb
push
rcr
aaa
mov
cs
lock
cmp
(bad)
cmps
cmc
mov
into
inc
repz
test
hlt
mov
dec
stc
cmp
xchg
enter
nop
in
add
or
cs
xlat
push
add
mov
mov
sub
mov
mov
cmc
sbb
mov
outs
aas
je
add
rcr
lods
and
rcl
add
in
dec
pop
fldz
push
cmps
adc
imul
test
mov
add
es
rol
mov
shl
cmc
(bad)
pushw
scas
cdq
scas
icebp
add
ds
pop
lds
and
xor
(bad)
aam
es
mov
aam
lds
jge
mov
fisub
jnp
pop
add
test
out
push
aam
and
mov
fild
movs
inc
cmp
cmp
or
xchg
dec
push
mov
adc
es
jge
pop
jmp
les
aad
or
test
dec
scas
pop
mov
push
xchg
adc
sbb
lea
(bad)
mov
push
or
jg
mul
fild
add
stos
aaa
retf
adc
and
xchg
mov
xor
fs
movs
mov
loope
in
mov
pop
xor
sbb
pop
std
dec
imul
sub
pop
mov
cs
inc
jmp
jmp
mov
inc
(bad)
and
push
call
out
sbb
xchg
pop
mov
sub
loope
movs
inc
rol
mov
shl
sub
inc
inc
lock
ds
cwde
stos
pop
mov
pop
xor
mov
test
jecxz
fwait
(bad)
ins
cmp
pop
mov
stos
or
sar
sub
hlt
cmps
jg
adc
jo
mov
jg
sbb
add
fdiv
ficom
sub
cdq
jle
clc
xor
inc
in
adc
cmp
mov
pop
mov
sbb
mov
xor
xchg
mov
adc
dec
push
pop
stos
mov
push
je
or
mov
fidivr
sahf
popf
in
repnz
push
mov
rcl
das
call
lock
jg
leave
xchg
fs
push
sbb
pop
mov
jp
pop
push
gs
pop
jl
enter
sub
sahf
ror
into
enter
movs
cs
test
mov
jnp
mov
dec
pop
stos
(bad)
sti
repnz
push
cmp
sub
mov
arpl
arpl
and
pop
xor
int
jge
and
mov
in
int
adc
and
je
shl
mov
in
rcl
xchg
call
into
test
mov
repz
fimul
mov
int3
xchg
imul
or
add
mov
mov
lea
popf
and
in
add
dec
mov
aas
push
adc
and
in
pop
mov
cmp
leave
loop
and
jl
mov
lock
cmps
or
xchg
in
fdiv
or
shr
pop
dec
jns
mov
(bad)
xlat
fldl2t
and
sbb
mov
or
popf
sbb
xlat
or
adc
mov
es
or
mov
sbb
cmp
xchg
cmps
dec
call
sub
loope
or
and
(bad)
pop
fcom
dec
inc
xchg
stos
inc
lock
iret
push
mov
cmps
xchg
lods
cmp
jp
mov
fistp
dec
inc
or
outs
pop
or
pop
cmps
jo
fsubr
push
jmp
pop
retf
jle
inc
pop
mov
stc
jg
and
fdivr
js
outs
mov
and
inc
inc
scas
fimul
test
aad
fidiv
xchg
retf
mov
jbe
push
clc
adc
call
mov
lea
mov
jecxz
lock
cdq
cmp
inc
mov
gs
sub
fadd
jecxz
nop
shl
pop
sbb
pop
out
dec
jmp
shl
inc
repnz
inc
add
movups
xor
sbb
mov
push
jle
xchg
ja
cli
call
and
or
loope
cmps
(bad)
bound
cli
repz
mov
inc
cmp
sbb
fdiv
pop
mov
mov
add
scas
dec
jle
xchg
mov
adc
arpl
outs
inc
dec
cmc
in
int3
shr
sub
ret
jnp
and
pop
push
adc
xor
fucom
and
sub
cmp
adc
sub
cli
lods
or
sub
xor
mov
cdq
fadd
out
cli
jge
adc
repz
mov
add
add
inc
ja
imul
js
jnp
jnp
call
pusha
cmps
cmps
outs
sbb
lea
fcomp
stos
clc
mov
mov
(bad)
jbe
imul
jmp
mov
or
and
jmp
pop
lds
movs
xor
cmp
jge
cs
jbe
(bad)
jo
push
cmp
cmp
sub
enter
mov
pop
push
adc
push
test
jns
test
xchg
and
mov
les
es
pushf
mov
dec
cmp
jg
call
xchg
mul
shl
sbb
pushf
or
bound
adc
sub
inc
stc
xchg
loope
lds
pop
fcmovu
adc
imul
pusha
dec
and
outs
add
stos
(bad)
enter
int3
dec
jae
cmp
push
int3
inc
mov
(bad)
sub
adc
add
jmp
rcr
inc
pop
js
sbb
mov
ins
cs
hlt
push
nop
inc
inc
or
pop
inc
in
mov
cli
and
ficomp
jae
fistp
jae
add
push
shr
and
xor
add
sub
fistp
pop
sub
iret
mov
ins
add
in
mov
lock
sub
cdq
iret
push
outs
(bad)
clc
mov
sbb
mov
out
mov
jnp
xchg
sub
xchg
cmp
outs
jo
mov
jge
sbb
mov
cmp
mov
bsf
mov
pop
arpl
ins
mov
cmp
int
sub
nop
dec
dec
xlat
icebp
(bad)
movs
mov
imul
pop
call
ficomp
sbb
add
scas
sbb
jge
xor
out
lahf
(bad)
ror
ins
out
adc
bound
push
sbb
jmp
ficomp
cmps
in
push
stos
jg
aad
jnp
outs
mov
retf
xchg
mov
adc
add
mov
mov
dec
hlt
pop
lea
(bad)
inc
call
neg
mov
iret
add
out
in
or
and
push
mov
add
repnz
xor
js
jnp
call
test
lods
inc
std
adc
adc
and
inc
call
js
cmp
popa
ss
xchg
retf
js
aad
icebp
sti
nop
fld
inc
ret
imul
pop
mov
mov
test
inc
sbb
and
stos
sub
and
stc
inc
sbb
aas
sub
gs
xor
imul
cmp
add
mov
adc
std
push
mov
(bad)
cwde
scas
mov
adc
jl
mov
fsub
(bad)
push
xchg
cmp
mov
mov
jae
shl
clc
fucomi
nop
(bad)
lea
xor
cmp
adc
imul
mov
xchg
outs
inc
sbb
and
repnz
jle
dec
in
mov
add
mov
mov
mov
jp
sbb
cmp
xchg
mov
jns
or
ficomp
mov
enter
mov
xchg
scas
outs
out
xchg
pop
or
sbb
jl
or
sub
cmps
outs
jge
dec
add
push
mov
sbb
sub
push
bound
jl
or
jmp
adc
ins
xchg
or
(bad)
pop
add
(bad)
cli
sub
jb
fldcw
popf
scas
clc
pop
fild
enter
cmps
lea
daa
cld
test
out
cmp
push
push
movs
cwde
inc
in
mov
push
or
xchg
call
mov
add
call
sub
retf
mov
inc
xchg
sbb
shl
dec
adc
or
jo
jecxz
bound
mov
in
sbb
sti
shr
(bad)
dec
jb
xchg
sub
mov
stos
shl
add
jns
dec
loop
addr16
sbb
push
push
inc
xchg
cli
dec
pusha
int
xchg
cmp
ss
sbb
scas
fwait
sbb
sub
leave
push
dec
cmp
jae
mov
fist
hlt
mov
lods
mov
xor
popf
arpl
pusha
lods
pop
je
lahf
jae
add
es
sub
das
push
popf
push
jae
mov
loope
cmp
nop
xchg
scas
mov
cmp
cld
push
cwde
mov
push
mov
jae
cmps
mov
dec
call
inc
shr
ret
jno
pop
mov
dec
test
push
sahf
or
bound
inc
xchg
xor
cdq
dec
add
add
mov
jnp
and
sbb
adc
je
xor
jg
pop
jnp
fcmovnu
mov
add
(bad)
aaa
cwde
jl
popa
add
out
xchg
stos
xor
cmp
xchg
dec
nop
dec
push
xor
hlt
data16
mov
stos
test
sbb
cmp
mov
or
retf
or
pop
sub
adc
jae
xor
addr16
(bad)
push
xlat
lods
movs
ret
mov
sbb
sar
das
ficomp
and
sbb
jge
rcl
and
mov
mov
mov
lods
add
push
xor
sbb
sbb
pop
pop
jle
mov
pushf
sbb
push
push
int
push
xchg
fcmovb
pop
xor
dec
jle
ror
xchg
xor
sub
adc
loopne
mov
ficom
cli
out
mov
rcr
(bad)
cld
(bad)
xchg
push
mov
mov
jmp
xchg
out
adc
test
pusha
pop
addr16
cwde
cmp
pop
ficomp
out
jns
rol
dec
shr
pop
cmovnp
cmp
mov
imul
pop
mov
retf
test
mul
mov
cli
outs
pop
addr16
jge
adc
xlat
push
jl
ficomp
mov
inc
ror
mov
xchg
jae
repz
cmp
mov
test
lods
push
inc
js
rcr
dec
jb
les
hlt
sub
popa
dec
jge
add
adc
ins
dec
lods
(bad)
popa
(bad)
sbb
je
cmps
sbb
jo
xor
adc
pop
add
mov
and
xor
ins
xchg
sub
imul
inc
out
(bad)
pop
xor
push
dec
sbb
inc
cmp
or
push
adc
lock
mov
mov
push
(bad)
bound
(bad)
lea
jbe
and
repz
(bad)
jmp
push
xor
neg
push
cmc
sub
cmp
nop
repz
ror
add
add
fwait
(bad)
cmp
push
xchg
cmps
xchg
lahf
fdiv
daa
into
mov
pop
int3
inc
xor
fisttp
fsub
jecxz
mov
fdiv
rcr
ja
outs
mov
icebp
xchg
jb
sub
jmp
or
jp
rcr
icebp
(bad)
iret
sbb
adc
jmp
mov
dec
xor
push
pop
cmp
xchg
mov
test
mov
push
nop
scas
lds
addr16
icebp
hlt
sbb
fmul
dec
loope
(bad)
jnp
push
addr16
adc
mov
adc
mov
rol
or
dec
les
jno
dec
xor
cld
add
or
add
imul
shr
xchg
adc
aas
push
sbb
and
sub
dec
and
xor
ret
mov
push
sub
pop
push
fcomp
add
cmc
enter
and
repz
cs
iret
and
jbe
lahf
adc
mov
repz
mov
iret
and
jne
inc
xchg
inc
inc
push
and
je
(bad)
jnp
xchg
sub
jae
push
dec
pop
icebp
in
fadd
sbb
pop
enter
push
dec
es
xchg
pop
rcl
push
lahf
aad
sar
mov
popf
repnz
jmp
mov
mov
sahf
fdivr
xchg
lds
xchg
pop
(bad)
mov
cs
(bad)
mov
mov
mov
mov
or
aam
push
mov
sbb
cmps
stc
ins
jge
add
retf
dec
and
stc
arpl
hlt
sbb
cmc
je
jp
stc
xchg
xchg
ret
cmc
xor
inc
enter
pop
fidiv
mov
mov
(bad)
leave
(bad)
shl
paddusb
(bad)
mov
fist
test
xchg
aad
shr
(bad)
and
xor
lds
into
jo
adc
mov
loope
lahf
sbb
lods
sub
jb
lods
and
loope
mov
iret
inc
fisubr
clc
(bad)
adc
js
popf
repnz
and
mov
ret
adc
adc
push
ins
inc
mov
clc
leave
ins
sahf
sub
push
imul
mov
ss
jle
fst
push
mov
iret
or
push
sbb
out
fnsave
cmp
and
sbb
jl
inc
jecxz
add
pushf
test
popa
aam
mov
repz
pushf
and
imul
mov
push
loopne
pop
jmp
dec
sub
push
mov
(bad)
lods
outs
repnz
in
in
xor
push
in
loope
dec
jecxz
ss
loopne
add
dec
nop
adc
mov
popf
xor
(bad)
retf
rol
xchg
jmp
movs
add
dec
bound
in
or
jge
cmp
aam
lea
inc
dec
test
int3
jbe
mov
mov
inc
inc
(bad)
pop
into
imul
jnp
xor
mov
pop
mov
ja
gs
mov
setns
mov
fbstp
fist
jle
sbb
mov
mov
cmp
jle
and
stc
lea
out
xchg
test
shr
inc
hlt
fisttp
aam
pop
ret
(bad)
hlt
or
lea
jo
ins
sub
out
and
or
sub
mov
push
sbb
jbe
or
fdiv
inc
mov
shr
xchg
sub
rcl
nop
into
repnz
sub
xor
sub
leave
dec
xchg
mov
xchg
test
cld
hlt
scas
(bad)
pop
out
push
cmps
pop
les
leave
xchg
mov
mov
pop
mov
pop
inc
xor
sbb
mov
xchg
pop
loop
ror
jmp
xchg
cmp
pop
rcl
dec
add
mov
aas
mov
xor
xor
das
in
and
jno
icebp
lods
sahf
repz
jp
in
lods
xor
out
imul
retf
mov
mov
jp
ins
mov
sti
fldenv
xlat
popf
adc
jp
outs
push
int
mov
aam
cdq
xchg
sbb
test
sbb
lahf
push
and
sbb
pop
sahf
mov
neg
js
icebp
mov
fwait
inc
xchg
mov
iret
cmps
movs
jo
mov
mov
mov
arpl
mov
mov
sub
jmp
sbb
cdq
inc
das
and
or
sub
dec
in
jp
jl
push
sbb
sub
movs
add
mov
out
retf
loop
xlat
pop
fwait
aas
retf
sbb
fiadd
push
push
xor
push
retf
test
aad
clc
mov
nop
and
das
or
pop
xchg
mov
xor
mov
lock
sub
pop
cwde
scas
dec
cmp
clc
or
sub
mov
adc
mov
rcl
adc
mov
and
lock
dec
ds
jp
push
mov
out
or
jbe
mov
xor
repz
xchg
fnstsw
sub
cs
sub
xor
jns
xchg
sub
test
mov
xor
fiadd
jnp
(bad)
jno
push
retf
mov
add
inc
stos
test
xchg
jmp
add
mov
xchg
inc
xchg
test
loopne
int
(bad)
shl
leave
imul
jb
add
mov
push
mov
pushf
movs
sbb
push
sub
iret
icebp
popf
sbb
adc
pop
dec
je
xor
retf
mov
(bad)
(bad)
ja
lds
shr
or
and
shr
call
movs
lea
jns
imul
add
mov
jg
ja
outs
jo
outs
push
pusha
data16
int
push
push
xor
mov
pusha
mov
mov
mov
add
outs
jge
pushf
aad
cdq
inc
(bad)
xor
and
inc
add
sbb
es
xor
in
scas
sbb
and
inc
out
adc
inc
retf
add
xchg
outs
add
xchg
ja
cmc
int
add
popa
inc
xchg
mov
xor
add
in
jne
pop
jmp
test
std
sub
sub
pop
iret
not
push
retf
mov
daa
mov
sbb
xor
ins
imul
sti
adc
push
mov
add
scas
mov
lahf
hlt
or
add
jg
sbb
adc
shl
push
mov
ret
outs
or
xlat
mov
sar
sbb
mov
xchg
rcr
pop
rol
inc
jnp
xor
(bad)
sub
adc
ret
pop
and
push
jp
loop
mov
out
jl
(bad)
adc
xor
and
and
jge
jmp
arpl
popf
out
sti
mov
dec
adc
and
es
push
retf
or
sub
jae
stos
xor
sbb
mov
neg
inc
retf
xor
shr
call
es
xchg
popf
jg
xchg
push
dec
dec
xchg
cli
popf
push
int3
arpl
mov
stc
ret
out
enter
pop
scas
lods
jns
jo
lock
in
xchg
and
mov
cmps
lea
xor
loopne
sub
add
jg
out
cmp
daa
adc
ds
fisub
jae
push
neg
fst
add
pusha
(bad)
cmc
jbe
inc
aas
add
or
bound
push
je
mov
push
(bad)
fsub
mov
sbb
push
fiadd
gs
into
jb
sub
and
scas
movs
inc
sbb
pop
addr16
add
xor
movs
test
push
mov
xchg
jo
push
mov
test
pop
scas
adc
outs
mov
(bad)
pop
push
mov
aaa
mov
nop
xor
xor
push
xor
iret
mov
inc
mov
rcl
pusha
ficomp
aas
scas
inc
pop
pop
add
addr16
mov
mov
ins
xchg
mov
sub
js
add
mov
mov
ret
push
xor
mov
(bad)
fild
jae
or
mov
aad
sub
sub
pop
xor
xor
xor
les
or
cs
xor
push
in
call
out
movs
cmps
or
cmp
push
mov
push
mov
into
or
ds
cmp
data16
ds
cmp
data16
mov
mov
pop
adc
pop
es
fs
retfw
aad
sti
and
sti
(bad)
mov
nop
jmp
stos
mov
mov
mov
jnp
icebp
inc
into
retf
aad
jmp
add
push
sbb
push
mov
hlt
ret
jb
mov
sbb
ss
cs
popf
out
cdq
(bad)
sub
mov
inc
dec
xor
jl
push
jns
cmp
sbb
cmp
fwait
add
loopne
imul
add
in
mov
mov
adc
dec
xchg
xchg
jp
retf
cmc
dec
je
hlt
push
int3
sub
in
repz
dec
es
add
retf
xchg
mov
outs
and
cdq
push
sbb
sahf
outs
pop
push
loopne
xchg
adc
sub
and
mov
add
add
xchg
adc
dec
(bad)
jecxz
fadd
stos
je
fdiv
jae
pop
dec
shl
xor
repz
mov
fstp
pop
xor
ds
add
mov
mov
(bad)
mov
and
sub
cs
imul
mov
out
inc
test
inc
icebp
retf
xchg
ss
mov
bound
cmp
mov
pop
push
push
sbb
(bad)
jg
mov
mov
cmp
imul
cmc
jae
(bad)
or
paddq
xchg
cmc
inc
retf
fwait
sbb
call
add
push
fdivr
xchg
jae
sub
(bad)
rol
or
movs
hlt
xchg
sti
adc
sub
cmp
fcmovne
mov
xor
fwait
push
cmps
jl
lods
cmp
jo
mov
jl
cmp
int
bnd
outs
mov
in
stc
inc
lods
adc
inc
inc
push
out
lds
cdq
cli
and
lahf
jbe
stos
out
std
iret
add
jl
cmp
call
push
jb
mov
rcr
loope
es
inc
in
shr
mov
jmp
xchg
hlt
test
test
cs
bound
sub
mov
or
adc
cmp
mov
outs
push
push
add
xchg
xor
aaa
test
fsubr
aaa
out
cmps
pop
jnp
div
out
xchg
cmp
jmp
cmp
add
pop
dec
pop
jle
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
call
test
mov
cmps
push
icebp
xor
push
adc
adc
arpl
inc
mov
gs
inc
lahf
dec
ret
pushf
jno
mov
jno
sbb
xor
adc
dec
push
popa
and
loop
mov
mov
xchg
or
push
pushf
les
into
or
(bad)
and
inc
cs
loope
xor
cmp
sbb
jne
cmp
movs
js
lds
jp
ds
mov
movs
mov
jns
cmp
dec
ret
inc
clc
fcom
sub
xchg
cmp
push
mov
ffreep
pop
repz
dec
lods
dec
xchg
setp
pushf
add
adc
cmp
cmps
mov
lahf
lahf
in
mov
inc
std
js
xchg
sub
push
jo
pop
test
xchg
rcl
loop
fbld
cmps
adc
push
cmp
leave
jmp
inc
pusha
push
xchg
imul
mov
inc
dec
int
and
pushf
lahf
mov
adc
(bad)
out
pop
das
stc
jno
(bad)
lock
stos
cmps
cmp
es
pop
jne
jge
test
into
adc
lods
pop
sbb
call
sbb
inc
ret
mov
sub
repz
jnp
mov
pop
je
mov
push
and
adc
jno
xor
or
or
adc
pop
add
pop
in
leave
mul
jbe
pop
cli
mov
shl
inc
add
push
lock
lods
and
test
and
xchg
in
mov
sahf
leave
popa
inc
fdivr
mov
xchg
cwde
jecxz
leave
cmp
pop
pop
push
add
fldcw
mov
and
out
adc
ret
add
jno
push
lds
sbb
cdq
inc
int3
loop
fnsave
push
jnp
and
push
in
pop
lahf
inc
int
dec
xchg
mov
rcr
repnz
xor
adc
xor
out
(bad)
shl
and
stos
test
add
mov
xchg
je
or
in
sub
(bad)
js
adc
sub
adc
loop
bnd
outs
push
leave
or
sbb
adc
dec
dec
jp
pushf
mov
xchg
imul
(bad)
sub
mov
mov
xor
(bad)
frstor
scas
(bad)
aas
jle
xor
push
retf
push
js
stos
mov
loopne
cdq
out
xchg
xor
xor
cmp
pop
jg
sub
sub
sub
fidiv
les
(bad)
jbe
jmp
cmp
div
push
mov
stos
xor
jle
mov
gs
mov
xor
inc
ja
or
dec
push
mov
mov
or
fild
sbb
mov
ja
cmps
mov
push
mov
retf
xchg
ret
movs
mov
cdq
xor
cwde
mov
push
adc
pop
test
pop
xchg
xor
push
cli
cs
nop
neg
lods
popa
dec
je
movs
mov
aaa
inc
xchg
aam
jge
xor
(bad)
imul
or
clc
int3
jno
jecxz
pop
mov
es
jb
sbb
shr
test
gs
mov
or
dec
movs
xchg
or
pop
in
ins
push
mov
push
(bad)
push
cdq
enter
mov
inc
xchg
jmp
and
cmp
call
xlat
not
push
inc
jmp
out
jmp
xchg
push
aaa
xchg
pop
aaa
movs
mov
xchg
data16
loopne
xchg
or
pop
or
sar
(bad)
push
cmp
jmp
daa
call
data16
mov
dec
pop
ds
cmps
jmp
and
cmp
add
das
outs
lea
or
mov
stos
mov
cmp
lods
pop
pusha
or
rcl
loop
mov
je
mov
cdq
loope
inc
popa
push
dec
(bad)
(bad)
lahf
mov
add
jmp
ds
sub
pop
and
dec
cmc
in
fmul
mov
loopne
les
cmps
gs
dec
sar
in
rcl
fisubr
and
pop
mov
rcl
push
mov
aas
inc
loop
bound
xor
mov
fistp
aas
in
lods
aad
cmp
add
test
test
(bad)
adc
clc
jnp
sub
sub
push
cld
dec
rol
gs
and
out
sbb
mul
lea
lods
shl
int
or
inc
mov
fistp
cli
and
lods
retf
fstp
and
loop
lods
aad
add
jl
out
or
inc
pushf
(bad)
daa
nop
jnp
add
sub
aad
mov
dec
jecxz
mov
or
in
mov
aaa
pop
jno
push
out
mov
ret
cmc
(bad)
mov
cmp
mov
and
cmp
jnp
mov
outs
dec
pop
xor
push
jmp
js
loopne
pop
jmp
clc
jg
test
push
push
les
xchg
in
aam
rcl
inc
hlt
pop
rcr
imul
or
mov
mov
int
mov
hlt
mov
cld
xor
jle
or
xor
add
sti
add
sbb
adc
lods
mov
loopne
movs
ins
xor
jmp
inc
fsub
xchg
jmp
test
adc
push
outs
shr
test
aaa
popf
retf
jne
push
fs
inc
jno
add
jno
movs
sti
imul
in
cmp
xchg
xor
mov
add
inc
mov
inc
rcr
shr
jae
mov
xor
pop
dec
cwde
jl
in
sbb
adc
pop
xor
xor
in
jae
xchg
pop
push
ins
dec
mov
mov
jp
sahf
cmps
sub
mov
xor
ins
mov
pop
adc
and
inc
lds
mov
mov
aad
sysexit
or
cmp
rol
xchg
inc
add
jp
xchg
pusha
fdivr
pop
fcomp
sbb
add
pop
jecxz
pop
jl
aad
bound
not
repnz
fidivr
dec
dec
or
nop
mov
jae
xor
adc
adc
int
sub
arpl
test
inc
in
jg
stos
inc
sub
stos
cmp
test
mov
loopne
cmp
leave
fidivr
cmps
xlat
outs
sub
lods
dec
xchg
int
sub
mov
dec
adc
lea
enter
push
sub
(bad)
and
dec
push
or
cmc
mov
and
add
(bad)
jle
addr16
mov
mov
daa
sub
pop
xor
out
mov
mov
jb
jmp
popa
popf
mov
(bad)
fadd
add
pop
mov
add
repnz
pop
hlt
popf
cmp
ret
movs
add
test
lahf
pop
ins
test
mov
cmps
jo
ret
cmps
jb
dec
xor
adc
cmp
(bad)
xlat
sbb
push
aam
fisub
push
mov
cld
sar
jle
rcl
jmp
sahf
mov
mov
cmp
or
and
mov
lock
push
std
rcr
inc
mov
mov
sbb
ins
imul
pop
sub
sbb
mov
adc
fwait
or
in
das
or
rcr
fmul
shl
aad
push
and
repz
cmp
test
xor
mov
xor
test
in
fistp
shl
mov
dec
sub
cwde
outs
inc
push
lods
sbb
fidivr
cdq
mov
stos
push
gs
imul
mov
je
cmp
fst
fistp
retf
mov
inc
loope
cmp
or
cmp
addr16
enter
test
sar
jmp
pop
inc
cmp
add
(bad)
les
jb
cmp
rcl
popa
xor
(bad)
std
adc
xor
sub
dec
stc
add
dec
adc
pop
repz
mov
jbe
fadd
sbb
adc
pop
pushf
mov
fldenv
fst
jo
mov
cmp
rol
arpl
cmp
sub
cmp
dec
pop
cwde
movs
sbb
sahf
cmp
adc
mov
adc
xchg
add
jns
dec
xor
es
adc
cmp
push
stos
ins
inc
fs
mov
xchg
loop
xchg
das
cmp
xchg
sub
cmc
push
mov
sub
jno
push
(bad)
xchg
ss
xor
mov
jnp
outs
add
retf
push
repnz
cld
xchg
pop
or
mov
(bad)
pop
aaa
in
add
push
cld
or
jo
mov
push
fs
xor
clc
bound
pusha
ss
xchg
clc
lahf
movs
jecxz
fdivp
int3
std
(bad)
jle
jecxz
sub
mov
inc
add
sbb
sbb
sub
pop
test
in
xor
out
lahf
mov
call
add
scas
push
imul
and
retf
mov
(bad)
xchg
jb
or
imul
sbb
stc
or
pop
mov
int
sar
jg
jp
sub
jb
popf
add
ss
inc
cmp
sub
and
or
or
imul
mov
dec
sub
ds
cmp
mov
lock
aam
stc
xchg
push
jns
mov
and
js
lock
xlat
or
test
hlt
sahf
je
mov
push
add
sbb
imul
mov
rol
xchg
stc
cmp
fs
inc
mov
mov
(bad)
pop
jne
(bad)
sub
out
jae
push
stos
mov
push
xchg
in
and
mov
scas
loopne
pop
int3
pop
fwait
mov
add
cmp
mov
nop
sub
fdiv
pusha
xor
cs
xchg
aaa
ss
arpl
xchg
in
mov
or
jg
xor
mov
inc
es
xchg
push
fcmovbe
pop
mov
adc
inc
push
xchg
test
aaa
in
movs
ins
add
ja
and
cmp
inc
jb
inc
mov
retf
xchg
jp
outs
lds
xor
jns
xchg
ins
inc
(bad)
xchg
mov
or
cmp
adc
add
jmp
hlt
push
push
jno
outs
xchg
mov
sbb
cdq
dec
jg
inc
popf
pop
or
imul
retf
xchg
add
mov
ret
sti
jns
movs
aas
cld
out
mov
mov
out
sub
dec
mov
aam
stos
sar
retf
xchg
repz
cmps
pop
inc
pop
cmps
pop
xlat
mov
jns
aad
cld
mov
scas
mov
jns
dec
jecxz
dec
xor
sub
scas
push
cmps
pop
push
lock
add
ret
bswap
js
xchg
dec
adc
and
in
push
sbb
and
rcl
mov
jecxz
sub
int
cmp
or
xor
sub
enter
mov
xchg
cs
int3
pop
mov
sub
cwde
imul
cmc
shr
faddp
pop
ins
into
mov
cmps
xchg
shr
imul
mov
jno
not
call
fiadd
push
ror
out
pop
rcr
stos
(bad)
fsubr
test
xor
cmps
sbb
dec
push
push
test
jnp
pop
cmps
fnsave
loop
add
fmul
or
in
cmp
sbb
test
adc
call
xchg
fmul
and
mov
test
fiadd
mov
pop
cmp
mov
push
pop
mov
scas
mov
mov
cli
stc
(bad)
mov
sbb
xor
jl
adc
(bad)
lahf
jl
jp
nop
sahf
test
ds
(bad)
mov
lods
bound
mov
push
outs
xchg
movs
mov
inc
mov
test
add
div
daa
xor
call
mov
adc
imul
cdq
or
pop
jle
push
mov
cmp
push
mov
rol
adc
addr16
ret
push
sbb
mov
lahf
icebp
scas
clc
mov
or
sub
xchg
pop
mov
pop
jno
sub
add
jl
sbb
(bad)
pop
and
add
add
inc
cmp
out
ja
xchg
xchg
adc
xor
pop
xchg
js
cmc
inc
sar
cmp
xchg
popf
(bad)
push
out
call
jns
in
cmp
and
and
sub
and
loope
(bad)
aam
sbb
into
hlt
fs
push
fisubr
mov
mov
cmp
jbe
arpl
popa
mov
stos
or
xchg
mov
repz
jne
ret
(bad)
(bad)
push
inc
xchg
xor
mov
mov
pop
push
dec
mov
jne
cmp
add
sar
push
mov
adc
nop
xor
mov
mov
xchg
fcomp
(bad)
aas
mov
scas
loopne
xchg
mov
jmp
mov
out
les
adc
rol
cli
stc
int3
stc
icebp
push
jp
scas
(bad)
mov
xchg
lds
(bad)
mov
shl
imul
in
jne
clc
inc
ds
fsubrp
pop
in
xor
sub
mov
outs
rol
lea
cmp
ret
hlt
scas
dec
xor
inc
inc
cmp
aam
dec
sub
jmp
mov
mov
pop
adc
mov
jge
gs
add
test
dec
add
mov
fidiv
(bad)
icebp
mov
xchg
mov
shl
and
retf
and
push
dec
call
xor
push
xor
and
repz
stc
stos
dec
dec
sar
mov
add
movs
fsqrt
out
dec
(bad)
les
mov
das
bound
fcmovnbe
mov
dec
test
js
jne
pop
xchg
xchg
pushf
fld
adc
push
aaa
mov
or
cli
frstor
or
lea
or
mov
daa
mov
push
and
inc
test
popa
cmp
aam
cli
out
test
pop
or
xchg
dec
sbb
loope
inc
pop
shl
rcr
xchg
imul
mov
xchg
lods
or
stos
jno
push
jb
(bad)
xor
lods
outs
sbb
lods
ret
jno
mov
and
xor
ret
mov
pop
push
add
ins
sub
sub
or
cmp
xchg
out
into
adc
clc
leave
stos
mov
xor
fwait
mov
ret
sbb
aad
retf
xchg
mov
test
and
jo
adc
jmp
mov
mov
sub
fidivr
iret
mov
and
jbe
xor
test
mov
fbld
std
addr16
add
cmc
jle
ja
push
or
call
popa
push
pop
xchg
inc
jg
inc
ins
xchg
call
adc
xchg
das
neg
xchg
or
lods
mov
dec
std
fcomp
out
ficomp
add
xor
add
retf
mov
(bad)
mov
push
arpl
(bad)
mov
push
xchg
inc
or
fcomp
xchg
sbb
xor
inc
mov
inc
adc
mov
inc
xor
xchg
xchg
(bad)
sbb
jg
inc
mov
mov
mov
mov
lods
sbb
sbb
fldenv
push
shr
(bad)
out
aad
mov
or
call
lock
sub
mov
mov
mov
mov
pop
xchg
scas
(bad)
stc
jne
mov
jbe
ja
push
mov
xchg
iret
jmp
sub
(bad)
and
pushf
shr
push
fsubr
xor
mov
imul
xchg
inc
push
or
(bad)
jae
sahf
pop
daa
mov
mov
fwait
lds
retf
lea
push
cmp
dec
(bad)
out
push
sbb
arpl
push
mov
mov
sbb
enter
cmp
enter
mov
sub
gs
pop
ja
(bad)
out
jl
add
scas
adc
sbb
fchs
fwait
inc
retw
in
mov
aas
adc
(bad)
jae
sub
aam
inc
rcl
(bad)
cmp
pusha
jge
add
ss
pop
mov
jmp
push
lods
ror
outs
enter
mov
sti
ret
inc
aaa
xor
xor
cwde
inc
lods
jb
sar
fst
mov
cmp
mov
xor
out
pushf
scas
je
adc
in
leave
movs
movs
retf
dec
fcomp
xor
add
(bad)
stc
mov
or
or
sub
jne
(bad)
retf
enter
adc
test
mov
lds
lods
or
outs
ret
(bad)
repnz
sbb
pop
out
loopne
and
dec
xchg
inc
movs
stc
mov
lds
dec
int3
arpl
sbb
ins
stos
adc
fidiv
add
dec
outs
out
imul
add
xor
popf
mov
inc
add
addr16
inc
dec
pop
gs
xchg
xchg
push
xor
push
jp
push
(bad)
mov
ret
pop
(bad)
sub
ins
mov
pop
sahf
(bad)
push
cmp
sub
inc
inc
and
lods
or
mov
add
inc
xchg
push
icebp
ins
cld
push
pop
ret
dec
pop
stos
mov
or
xor
push
push
call
stos
in
daa
jp
lods
ret
jne
jnp
or
jne
icebp
mov
test
pop
or
xchg
and
ins
cmps
shl
jecxz
mov
(bad)
ret
rol
dec
mov
add
sbb
inc
mov
das
xchg
add
sbb
popa
cmp
and
shl
xlat
fisubr
push
ret
xchg
jns
je
xor
pop
jno
xor
xor
sahf
iret
cmp
call
jae
scas
adc
jne
push
test
(bad)
mov
out
icebp
ins
or
jp
daa
xor
add
sbb
mov
dec
add
mov
push
ja
mov
in
popf
nop
add
jp
jge
adc
(bad)
imul
ror
add
ret
mov
jnp
pop
add
or
gs
adc
mov
adc
gs
dec
cmc
rol
mov
sub
or
or
sub
out
aad
sahf
or
xor
mov
push
mov
scas
aad
and
inc
dec
mov
cmc
(bad)
frstor
icebp
lods
out
push
mov
fimul
addr16
add
mov
xor
(bad)
out
(bad)
xchg
(bad)
push
shl
jle
jge
les
out
lahf
push
iret
sub
xchg
mov
inc
sbb
imul
mov
ret
mov
fwait
inc
enter
stos
pop
in
dec
cmp
(bad)
xchg
cmp
adc
aad
inc
pop
rcr
mov
ret
dec
inc
imul
push
add
cmp
fsub
sahf
shl
or
aaa
adc
pushf
nop
(bad)
fucomip
mov
inc
add
in
mov
(bad)
inc
mov
xor
sub
sar
dec
mov
xchg
shl
inc
cli
jne
push
movs
retf
xchg
add
sub
int
and
mov
sbb
sub
xchg
ds
out
aas
jecxz
jle
jmp
push
in
adc
xor
inc
dec
int3
jle
adc
addr16
ja
push
or
clc
dec
(bad)
mov
dec
test
sbb
adc
and
inc
sbb
jle
inc
or
je
inc
xchg
and
sub
mov
push
pushf
jb
add
add
(bad)
xor
cmp
aas
push
loope
int
xor
jnp
jmp
es
(bad)
push
(bad)
fcmovne
stos
sub
out
stc
imul
aaa
aam
movups
call
loope
lahf
in
pop
(bad)
cmp
cdq
pusha
push
call
and
jno
push
fyl2x
jo
push
sub
add
adc
add
test
jmp
fst
jo
fs
push
push
movs
bound
stc
test
es
cmp
dec
add
mov
int3
cmp
push
xchg
xor
aas
mov
sbb
test
sub
iret
add
xor
jne
sti
inc
dec
cmps
add
out
mov
jmp
or
adc
rol
and
push
pop
cld
scas
xor
push
clc
addr16
dec
call
and
xchg
jbe
pop
or
dec
or
imul
retf
mov
inc
aaa
shl
bound
test
xor
add
fwait
push
test
icebp
jmp
(bad)
(bad)
jnp
fs
cmp
and
cmp
dec
adc
(bad)
push
push
int
enter
(bad)
daa
mov
jo
iret
mov
adc
cmp
dec
sub
add
pop
mov
test
jns
jo
and
(bad)
cs
lods
pop
imul
mov
movs
ss
movs
jl
cmp
jge
ror
xor
or
jmp
lock
(bad)
xchg
jns
inc
loop
adc
pop
das
push
or
cmp
inc
adc
sbb
test
cli
outs
adc
and
lds
int3
fidiv
cmp
xlat
or
into
cmp
sbb
xor
aas
cmp
retf
push
mov
pop
push
dec
fmul
loop
int3
fcmovnb
pop
rcl
shl
or
cs
ja
mov
out
into
ret
or
dec
inc
cmp
in
adc
mov
inc
sar
cmp
cs
push
jne
inc
cmps
push
add
in
fwait
(bad)
mov
jae
int3
pusha
pusha
in
mov
mov
das
shl
repz
sub
xor
loop
xor
xor
(bad)
dec
ficomp
aaa
popa
fwait
sahf
sbb
(bad)
mov
and
xor
clc
movs
jns
jnp
push
push
mov
gs
dec
es
inc
movs
or
in
mov
sar
dec
or
sub
mov
mov
xor
mov
mov
pop
ret
push
js
int
mov
cdq
mov
test
fsubp
jg
fsub
add
sub
cdq
pushf
mov
cmp
imul
ja
(bad)
(bad)
pop
and
iret
xchg
daa
pop
xchg
stos
scas
dec
stc
loope
hlt
loopne
dec
xchg
push
xchg
loopne
das
mov
mov
loopne
cdq
push
dec
test
dec
shr
aas
jmp
pop
and
out
stos
xchg
scas
fdiv
inc
sbb
sti
test
xchg
int
fadd
jp
push
rcr
xor
mov
dec
repnz
push
fwait
daa
inc
pop
dec
xchg
rol
mov
lods
sub
gs
adc
fwait
mov
(bad)
scas
jns
mov
in
int3
imul
and
mov
cmp
inc
adc
sub
sub
mul
ss
mov
jle
mov
push
cwde
faddp
mov
sub
popa
jle
aas
add
and
das
mov
cmp
xor
dec
movs
mov
push
inc
xchg
stos
jmp
leave
arpl
test
into
push
adc
sub
xchg
sahf
pop
pushf
fs
das
stc
pop
loopne
cmp
mov
mov
aaa
mov
push
mov
jp
cwde
push
stos
retf
pop
mov
sub
inc
ss
fmul
fwait
add
xchg
shl
dec
cmp
loope
cmp
int3
fcom
xor
shl
adc
rcl
dec
or
mov
mov
or
mov
mov
clc
sub
pop
xlat
add
jno
ror
iret
mov
test
sbb
loopne
scas
lock
cmp
sti
test
sub
xchg
dec
ins
cmp
jne
clc
mov
movq
stos
or
pop
ins
add
inc
sub
dec
sar
leave
mov
or
(bad)
gs
xor
loopne
ins
cs
fimul
inc
loop
jg
xor
xchg
add
pusha
inc
cmc
nop
xor
bound
ror
movs
adc
and
push
ins
loopne
loop
js
loope
std
cs
and
dec
ja
aad
ret
push
arpl
push
(bad)
and
add
shr
mov
pop
xchg
es
fdivr
pop
cmp
sti
fldcw
movs
nop
hlt
xor
xchg
cmp
add
mov
mov
push
sbb
pop
add
sub
xchg
ss
cmp
gs
jbe
push
push
inc
ins
in
sbb
adc
repnz
mov
sar
(bad)
cmp
sbb
ins
mov
pop
sbb
push
test
sub
sbb
std
ds
mov
lahf
lock
imul
repz
cs
jmp
mov
pop
adc
clc
dec
mov
add
mov
sub
cmp
shl
dec
lea
repnz
pushf
xor
call
push
adc
push
jno
paddusb
loope
inc
sub
into
xor
iret
lock
pushf
lock
fisttp
not
in
outs
pop
push
add
mov
jns
es
stc
and
xor
outs
inc
inc
movs
cdq
or
inc
aaa
dec
lea
fs
cwde
sub
pop
push
xchg
fild
fdivr
fcom
repnz
out
mov
sub
pop
inc
popa
xor
cli
movs
das
ret
inc
clc
sbb
pop
add
pop
push
cmc
push
or
lods
sbb
push
mov
push
inc
add
adc
dec
or
sbb
outs
dec
cmp
jno
hlt
jmp
shr
dec
mov
push
cmp
push
xor
loope
pop
test
sub
mov
add
imul
fwait
shr
test
cmp
mov
(bad)
ja
popa
(bad)
icebp
mov
repnz
ja
movs
addr16
cmp
jge
mov
sbb
stos
mov
fdivr
mov
pop
lds
leave
scas
push
pop
mov
lods
xor
or
ret
lahf
pop
inc
jge
push
repnz
xchg
and
in
loop
mov
ret
cmp
xchg
mov
scas
sar
fldcw
xor
xchg
sub
jns
xchg
lock
inc
inc
xor
rol
hlt
cmps
xchg
xchg
shl
inc
cli
pop
mov
cdq
xchg
push
push
sbb
les
mov
retf
xchg
push
or
jbe
xchg
scas
ret
sti
dec
fdiv
xor
inc
dec
xlat
popa
add
pop
xchg
stos
ja
sbb
pusha
and
clc
or
out
mov
je
mov
xchg
(bad)
retf
dec
js
and
int
sbb
inc
(bad)
sub
dec
in
lock
call
inc
fistp
ds
and
fdiv
loope
mov
aaa
mov
jecxz
jo
push
add
and
fidivr
std
mov
jle
ret
and
xchg
mov
dec
repz
aas
ret
call
fcmovnbe
rol
mov
push
mov
sub
out
mov
sbb
out
adc
push
mov
jg
mov
xor
dec
sahf
test
lds
dec
push
movs
stos
xchg
loopne
dec
inc
dec
pop
stos
imul
lock
fwait
gs
call
neg
jo
mov
into
xor
sahf
mov
and
pop
ins
inc
gs
jne
mov
out
or
cmp
leave
add
mov
cmps
xchg
pop
jbe
lea
add
xchg
shr
jb
ret
movs
jle
mov
add
dec
int3
lock
cmp
push
xchg
fisttp
sbb
or
xlat
cwde
mov
xchg
ror
ins
pop
pusha
(bad)
cmc
push
adc
(bad)
mov
jno
jge
jecxz
xchg
add
xor
or
fst
pop
iret
pop
and
ss
and
mov
ds
or
cmp
xor
or
cmp
mov
movs
xor
jo
ins
pop
jle
mov
addr16
loope
push
push
daa
pop
call
(bad)
cs
jecxz
mov
xchg
adc
jne
add
cmp
jmp
inc
hlt
or
in
lods
ds
pop
pop
inc
jne
dec
cmp
movs
dec
mov
or
int3
les
cs
mov
and
push
jmp
cmp
pop
jbe
mov
aam
push
adc
pop
xchg
and
mov
sub
out
mov
sub
inc
cmc
shl
mov
and
jecxz
push
loope
dec
dec
inc
or
cmp
cmp
out
loop
pop
sub
test
loop
out
retf
pop
adc
nop
pop
popa
in
addr16
out
jmp
ror
imul
pop
sahf
xor
into
xchg
fstp
popa
xchg
pop
lahf
sub
(bad)
je
push
test
aaa
and
add
cmp
push
adc
cmp
loope
into
dec
jnp
aas
push
ins
xchg
and
call
dec
inc
in
mov
dec
imul
push
inc
(bad)
ins
add
and
adc
sbb
pop
jge
dec
pop
add
out
or
shr
add
dec
(bad)
loopne
dec
mov
scas
inc
xor
jle
pop
mov
sub
inc
test
retf
repnz
sahf
or
or
out
and
(bad)
repz
mov
xchg
mov
scas
mov
shl
push
call
aaa
fwait
hlt
add
jo
xor
ins
cmps
and
mov
and
in
pop
sub
add
(bad)
mov
call
add
jns
sahf
(bad)
push
pop
jg
out
push
js
stos
sti
fadd
(bad)
(bad)
jmp
stos
sub
cdq
outs
and
lock
xor
xchg
dec
(bad)
bound
rcl
scas
fisttp
stos
pop
hlt
sahf
rcr
mov
les
cld
mov
sub
cmc
es
push
pop
push
dec
pop
int3
out
adc
mov
pushf
loopne
cmp
scas
pop
daa
dec
jmp
icebp
(bad)
rcr
cmp
push
and
mov
xor
jmp
jne
add
in
add
push
pop
sti
push
mov
into
jmp
jmp
xlat
pop
div
sub
sbb
pop
inc
jmp
mov
rol
adc
xor
aas
ja
xchg
adc
retf
push
(bad)
out
js
and
les
jge
pop
jmp
inc
test
sbb
lock
call
pop
pop
out
inc
loopne
mov
les
dec
push
gs
sub
pop
sbb
sbb
sbb
jle
jge
js
and
mov
xor
cdq
mov
fbstp
or
add
jnp
mov
mov
sub
enter
or
jp
push
xchg
jb
clc
mov
sub
xchg
and
xor
and
sub
mov
sub
movs
adc
leave
lods
fst
adc
xor
jp
jb
pop
(bad)
cwde
pop
mov
adc
adc
aas
popf
or
xchg
cmp
xor
add
test
jecxz
retf
add
fwait
cmp
xlat
imul
xchg
ins
test
fisubr
popa
push
(bad)
fcmove
loop
push
pop
adc
das
jno
stos
aas
ror
je
push
aad
sbb
cld
test
setbe
mov
loope
cmp
int
shl
jne
daa
xor
cmp
and
test
(bad)
jge
xchg
ret
(bad)
mov
dec
fs
xchg
addr16
fisub
test
inc
movs
or
ret
push
int3
push
sub
div
jp
jbe
jnp
jne
mov
maxps
aas
cs
setp
mov
stos
test
je
repz
or
scas
out
jmp
xor
xor
dec
inc
(bad)
jl
sahf
ret
or
mov
cmp
fldcw
pushf
popa
jl
push
daa
push
cmps
ins
adc
xlat
push
aam
jge
pop
test
xchg
imul
fwait
cmp
add
dec
xchg
or
iret
test
addr16
lds
jge
mov
scas
xchg
je
aad
add
std
adc
mov
adc
push
dec
fucomip
push
enter
stos
test
mov
dec
mov
xchg
cmp
mov
sbb
push
dec
push
inc
cmp
push
jge
fist
fwait
mov
int3
push
dec
sbb
nop
or
inc
(bad)
push
sub
dec
mov
movs
mov
fisub
aaa
sub
add
shl
out
out
loop
add
sbb
jmp
es
and
movs
arpl
fdivrp
fdivr
dec
and
add
mov
push
xor
addr16
jnp
xor
in
adc
dec
cmp
fidivr
jbe
jmp
movs
add
stos
arpl
pop
std
adc
(bad)
(bad)
cmp
jne
pop
cmp
inc
hlt
clc
add
test
ds
or
pop
fdiv
aam
inc
pop
pop
test
fisttp
(bad)
sbb
jmp
jecxz
mov
xor
or
pop
adc
jle
enter
jmp
(bad)
aad
loopne
ds
xor
(bad)
add
rcr
jp
pop
xchg
mov
mov
mov
call
mov
and
lea
mov
mov
mov
mov
inc
adc
adc
(bad)
or
mov
fldz
loope
cmc
mov
adc
dec
inc
push
sbb
inc
iret
dec
enter
rcl
sar
loop
fcom
adc
outs
adc
xlat
xchg
xchg
das
inc
into
pop
and
sbb
std
mov
ins
push
test
jmp
call
adc
sub
sbb
xchg
inc
jns
pop
mov
push
push
push
mov
rol
sbb
or
es
adc
mov
bound
mov
mov
adc
imul
arpl
push
xchg
ins
mov
xor
xchg
gs
add
fsubr
arpl
ror
nop
inc
add
adc
fwait
ja
push
sti
stos
sub
or
stc
adc
and
xor
lea
jns
jbe
test
test
daa
mov
push
mov
dec
dec
jne
cmp
fbstp
add
clc
ja
cmp
(bad)
mov
call
call
jb
pop
fstp
mov
jb
push
or
dec
into
inc
sub
or
in
pop
inc
add
add
fldcw
and
ret
jmp
jmp
(bad)
stc
push
mov
ja
aad
fist
je
nop
ret
mov
mov
test
sti
clc
and
stc
jmp
fs
and
out
dec
je
js
jge
cli
leave
cs
fist
jo
sub
enter
lods
das
(bad)
into
adc
and
dec
adc
xchg
mov
test
in
outs
mov
lock
sbb
push
out
shl
inc
cmps
sub
cmp
mov
(bad)
lock
inc
pop
dec
cmp
pop
push
push
dec
clc
mov
push
retf
or
add
test
and
div
mov
int3
xor
add
adc
ret
repz
fsub
xor
test
ja
mov
push
int3
cmp
adc
fdiv
sbb
int3
ins
cmp
in
push
mov
cs
mov
fild
jbe
cmp
mov
inc
ret
and
cmps
sbb
push
fidivr
push
mov
imul
(bad)
jecxz
popa
ds
inc
ja
fdiv
movs
push
xchg
call
jp
retf
or
and
je
test
(bad)
xchg
test
pop
pusha
addr16
test
loopne
ffree
mov
dec
sbb
fdivr
nop
add
aam
out
cwde
sbb
push
xchg
and
dec
out
pushf
pop
mov
enter
jne
dec
or
dec
shr
push
(bad)
xor
xchg
enter
mov
jl
adc
push
fst
mov
push
inc
hlt
fistp
outs
pop
out
fimul
and
inc
push
ds
cli
out
cs
mov
inc
or
fbstp
fldenv
xchg
rol
xchg
sbb
sbb
imul
(bad)
xchg
pop
outs
(bad)
ret
lock
sub
mov
leave
hlt
dec
push
cmp
pusha
inc
xor
(bad)
ins
movs
mov
inc
and
lahf
or
ins
sbb
jp
pop
fwait
aas
push
sahf
sub
stos
inc
cdq
and
test
mov
neg
inc
inc
in
and
push
psubq
and
and
movs
jg
std
sub
sbb
ins
mov
lods
(bad)
clc
jge
cld
mov
ret
sub
sbb
(bad)
and
sub
lock
jnp
das
cmps
(bad)
pop
jecxz
adc
les
iret
sub
jnp
fisubr
cmp
sub
or
jp
popf
fs
and
mov
nop
fild
ds
call
pop
mov
fwait
cmp
loope
dec
pushf
leave
shl
push
sti
xchg
or
add
std
xor
mov
hlt
bound
push
rcl
(bad)
mov
mov
mov
movs
or
mov
std
push
jns
xchg
inc
fs
fimul
es
idiv
addr16
push
outs
outs
mov
aaa
xor
popa
inc
dec
dec
xor
sti
dec
xchg
add
add
xor
and
mov
mov
xor
imul
out
jne
sbb
jecxz
dec
cld
push
jmp
mov
pop
mov
dec
sub
in
push
adc
lods
xchg
xchg
shl
addr16
pushf
(bad)
ror
add
sub
lods
lahf
leave
sub
int3
das
neg
xor
out
add
xor
fisttp
ins
sbb
sti
std
mov
push
mov
(bad)
mov
adc
mov
gs
test
std
jne
push
movs
(bad)
jge
(bad)
cmps
aam
test
pushf
sahf
bnd
jl
imul
pop
adc
xchg
das
dec
ins
inc
xchg
push
imul
leave
xchg
dec
jno
or
sbb
stos
mov
push
cli
mov
inc
test
(bad)
mov
adc
iret
adc
or
aam
mov
jmp
test
mov
mov
adc
mov
stc
int3
add
dec
xor
idiv
or
in
lahf
jbe
cmp
pop
pop
dec
pop
push
sbb
les
in
(bad)
jo
addr16
add
mov
call
mov
ss
arpl
xchg
adc
or
and
sbb
add
inc
inc
call
js
or
xor
adc
push
ja
retf
neg
into
jb
pop
gs
mov
pop
add
outs
out
(bad)
shl
sti
xchg
sahf
or
imul
in
aaa
popf
or
(bad)
cld
adc
scas
push
pop
xor
outs
fs
pop
sbb
popf
ret
cmp
pushf
movs
arpl
out
xor
add
outs
xor
pop
iret
push
push
pop
in
std
adc
push
ja
lock
dec
or
es
mov
mov
lahf
push
(bad)
cdq
xor
and
mov
stos
cmp
or
pushf
rcr
or
lods
lods
mov
mov
fld
(bad)
mov
dec
push
movs
mov
push
xchg
inc
bound
nop
pusha
mov
gs
add
push
mov
retf
sub
aas
pop
cmp
and
cdq
aaa
cmp
mov
xchg
pop
push
adc
pop
(bad)
dec
jae
ja
or
rcr
stos
call
leave
mov
pop
or
pop
adc
mov
jg
iret
test
pop
mov
sub
movs
mov
jp
test
xor
inc
outs
pop
mov
cwde
lds
dec
int
mov
dec
push
adc
push
jl
sbb
xor
push
lea
div
int
js
scas
push
sbb
popw
sar
adc
lods
sbb
(bad)
les
push
adc
test
mov
(bad)
mov
jno
sbb
push
bts
ja
icebp
push
mov
mov
pop
imul
jb
jg
sbb
cmp
ja
cmps
push
cwde
in
(bad)
xchg
leave
enter
push
sub
mov
or
lahf
pop
imul
loope
push
and
cld
arpl
mov
mov
rcr
adc
das
and
pop
aam
clc
mov
xchg
dec
pop
xor
mov
test
sub
sbb
adc
fcomp
retf
mov
test
lea
mov
in
(bad)
loope
mov
das
lea
pop
mov
lahf
pop
dec
(bad)
outs
inc
jmp
pop
test
pop
fild
(bad)
ja
cmp
mov
shl
inc
retf
out
dec
(bad)
and
into
ja
or
lock
popa
pop
ret
add
mov
and
lds
mov
ret
mov
hlt
ret
setae
xchg
dec
mov
js
xchg
fldenv
retf
pop
xchg
stos
iret
fidiv
or
mov
mov
cwde
push
xlat
and
xor
xchg
and
hlt
sub
stos
test
mov
pop
mov
enter
cmps
mov
push
push
arpl
adc
ret
and
dec
adc
sbb
fild
jecxz
(bad)
stos
add
ja
sub
(bad)
daa
push
dec
or
cmps
clc
pop
loopne
dec
addr16
aam
add
shr
es
test
push
enter
pushf
push
jbe
in
push
nop
fisubr
add
or
xor
sbb
push
sub
bound
mov
lods
push
and
(bad)
sahf
ins
pop
pop
jne
in
mov
push
mov
repnz
leave
sbb
scas
mov
add
adc
(bad)
dec
and
jne
jmp
cmp
push
and
and
rcl
not
cs
push
adc
into
aad
in
dec
pop
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
adc
fs
pop
sti
daa
pop
in
in
jle
mov
sub
sbb
mov
ret
push
shl
lock
iret
scas
xchg
cmp
adc
adc
sbb
pushf
out
repnz
push
mov
mov
inc
ror
jno
mov
xchg
pop
call
leave
out
mov
xchg
push
loopne
mov
cmps
outs
sub
lods
jno
retf
mov
pop
mov
fwait
cs
push
loopne
repz
nop
sbb
sub
out
mov
cmp
cmp
and
fwait
iret
cmps
into
mov
mov
jno
fs
add
fs
in
mov
add
jg
adc
and
add
push
sub
pop
xor
cmps
(bad)
clc
test
(bad)
push
in
sbb
mov
xchg
retf
sahf
jg
outs
nop
cs
iret
inc
pop
rcr
out
mov
mov
or
pop
je
push
icebp
fcmove
sbb
cmp
cmp
jmp
xchg
fwait
outs
add
cmp
std
cld
(bad)
int
cmp
call
jp
mov
cli
icebp
das
add
jne
mov
push
repz
jmp
jbe
xor
inc
push
lock
popf
lock
push
int3
arpl
sub
arpl
add
xor
jle
gs
push
inc
add
fistp
popf
mov
retf
lods
retf
retf
fwait
mov
add
add
leave
(bad)
loop
in
xor
into
mov
or
sbb
popf
mov
push
pop
push
add
cmp
jmp
jo
pop
sub
rcl
xchg
call
jmp
pop
sahf
cmp
add
cmp
mov
outs
jae
nop
imul
stos
cs
inc
sbb
jbe
mov
push
mov
push
sub
inc
or
pop
mov
in
lods
add
xchg
jge
iret
out
jb
jmp
push
ds
xchg
cld
dec
retf
add
(bad)
xlat
test
not
cmc
mov
cmc
lods
push
dec
stos
mov
sub
adc
stos
jge
inc
lods
push
sbb
popa
adc
ja
js
shl
test
adc
and
sbb
into
pop
fdivr
cld
loopne
(bad)
xchg
push
sbb
cmp
pop
inc
test
pop
mov
arpl
dec
push
mov
rcr
dec
imul
inc
mov
test
jo
adc
xor
push
clc
xor
rcl
lar
arpl
in
in
xor
mov
test
push
in
dec
shr
pop
outs
in
bound
dec
jge
mov
(bad)
adc
mov
fdiv
jg
pop
mov
fs
pop
inc
pop
js
(bad)
lods
retf
pop
push
push
imul
jl
jns
scas
jecxz
and
cmp
push
pop
lock
add
add
loop
push
dec
ror
sub
arpl
sbb
stc
xchg
cmp
xor
mov
dec
jge
dec
adc
(bad)
test
xchg
xor
xchg
inc
push
and
adc
cdq
shl
push
mov
nop
mov
bound
scas
test
jge
pop
xchg
lock
rcr
mov
mov
sub
jge
cmc
xchg
push
or
or
mov
mov
fcom
popa
in
cmp
aaa
jmp
ins
jmp
aam
scas
inc
cld
movs
sub
cmp
jo
xor
ret
mov
stos
clc
vprotq
jmp
mov
inc
ss
inc
sbb
in
daa
pop
jp
pop
push
fdivr
mov
mov
mov
test
or
pushf
adc
(bad)
lahf
(bad)
(bad)
xchg
sub
mov
imul
pop
or
lock
shl
add
push
inc
nop
push
outs
lock
xor
neg
mov
xchg
adc
push
add
pop
ja
mov
outs
mov
jb
leave
cwde
loop
aas
adc
jp
mov
push
pushf
add
sub
fdivr
in
dec
jp
out
ficom
push
xchg
xchg
pusha
div
or
cdq
adc
mov
jmp
test
and
jb
adc
mov
push
movs
or
xor
mov
adc
(bad)
cli
or
adc
jmp
cmp
sbb
in
scas
add
out
lods
cmp
int3
pop
jae
addr16
add
sbb
shl
push
bound
mov
enter
jg
add
jecxz
sbb
ret
xlat
jne
push
dec
fucomip
push
(bad)
mov
xor
rcr
jmp
int3
jae
mov
mov
ins
pop
push
adc
jne
clc
mov
fadd
test
sbb
retf
enter
shl
cmp
leave
cmc
das
cmp
fs
pop
cmp
pop
jns
adc
cld
shl
jbe
popa
mov
ret
jge
mov
inc
add
in
jne
lds
rcr
xor
xchg
xchg
aad
xor
xchg
into
ins
lea
repnz
in
mov
fsub
sbb
sub
sbb
pop
outs
mov
in
dec
and
sub
sub
loop
fnstsw
jle
pop
call
icebp
pop
xchg
dec
inc
push
ret
test
dec
inc
pop
add
fmulp
in
(bad)
call
add
xchg
outs
xchg
and
cs
stos
push
cmp
cmps
sub
cmp
cmp
jp
loope
(bad)
push
mov
dec
sbb
inc
xor
nop
mov
sub
pop
out
loope
not
ins
add
mov
mov
aam
enter
pop
cmp
adc
enter
in
ret
add
rol
jge
pop
jbe
clc
pop
gs
lahf
test
push
outs
iret
mov
push
loop
jge
cli
inc
outs
cmp
dec
ins
imul
cwde
(bad)
sub
fisubr
aas
and
mov
add
imul
popa
xchg
js
dec
loopne
add
in
fsub
(bad)
and
xor
outs
bound
and
mov
(bad)
lock
bound
pushf
pop
fcomp
adc
mov
dec
ins
jle
pop
fst
js
sbb
pop
mov
add
(bad)
inc
xchg
or
lods
xchg
pop
push
mov
idiv
inc
sti
pop
mov
xchg
sar
dec
in
daa
ja
fsubr
xor
(bad)
sar
xchg
mov
loopne
sahf
mov
mov
imul
fimul
sub
loope
push
das
cmps
xor
sbb
sbb
adc
fisttp
mov
mov
inc
arpl
pop
arpl
xor
xor
mov
jge
cli
stos
(bad)
jmp
pop
lea
cld
cmc
aam
mov
mov
xchg
jnp
mov
int3
fisttp
ror
mov
push
fidivr
and
in
sub
sbb
mov
push
loope
adc
or
jmp
push
add
outs
xor
bound
push
ds
sbb
jecxz
loopne
or
stos
mov
fmul
mov
mov
sbb
cmp
jbe
in
jmp
scas
jmp
(bad)
ror
inc
add
movs
push
cmp
lods
arpl
and
fs
inc
outs
ins
movs
popa
int3
jns
lds
sahf
or
mov
jmp
clc
mov
std
pop
pop
pop
lahf
clc
clc
xchg
aas
fsub
dec
and
ret
mov
gs
mov
mov
arpl
(bad)
sub
jae
dec
cmp
jo
(bad)
jo
jae
or
cmp
and
inc
test
mov
mov
enter
sub
mov
in
movs
fistp
ficomp
leave
(bad)
mov
dec
pusha
mov
jle
xor
xor
mov
aas
dec
mov
out
or
or
cmps
stos
ins
in
cmps
dec
jne
into
jns
cmp
pop
les
in
jmp
and
push
enter
(bad)
fdiv
ret
ret
fisubr
sbb
sahf
fadd
adc
out
mov
int
daa
dec
in
sub
mov
aam
push
inc
loopne
push
push
adc
push
(bad)
xchg
fsubr
mov
in
loope
ins
mov
std
dec
fimul
fwait
cdq
xchg
(bad)
out
sub
mov
cmp
pop
sub
cmp
mov
repz
add
cmp
lahf
clc
dec
and
cmp
aaa
mov
add
inc
mov
jns
dec
pop
mov
pop
jno
fstp
in
xchg
or
ins
loopne
pushf
pop
xchg
(bad)
inc
mov
dec
mov
mov
mov
das
mov
xor
clc
stos
retf
inc
adc
push
sbb
inc
lods
ins
stos
fs
shl
jl
and
inc
cmps
sbb
dec
repnz
(bad)
retf
jg
test
shr
pop
inc
nop
and
push
cmp
mov
js
push
or
sub
ss
jmp
jns
dec
jne
and
aad
test
pop
enter
fwait
sbb
xor
repnz
and
iret
cmp
fbstp
scas
xchg
int
(bad)
mov
and
or
cmp
aaa
push
xchg
push
or
mov
adc
or
arpl
retf
(bad)
adc
pop
add
cmc
xchg
test
xor
mov
inc
cmps
adc
scas
jge
xchg
add
and
retf
mov
adc
pop
sbb
into
mov
repz
sbb
cmp
arpl
sahf
cs
fild
dec
xor
and
gs
mov
or
rcr
jp
mov
and
sub
scas
sbb
icebp
shl
call
mov
cmp
mov
xchg
out
lea
ret
mov
xchg
and
and
pop
or
sbb
outs
dec
daa
sub
jmp
out
icebp
ret
cmp
jne
shl
movs
cld
mov
out
(bad)
jae
sbb
or
repnz
mov
dec
sar
inc
add
xchg
mov
cld
adc
leave
gs
scas
xchg
aad
in
fwait
cmp
adc
imul
out
out
mov
shr
call
jmp
cmps
bnd
mov
icebp
jnp
inc
shl
addr16
and
lahf
inc
push
mov
das
fadd
aad
stc
jecxz
xor
sar
cld
icebp
int
pop
inc
xchg
jmp
inc
(bad)
jmp
sub
mov
or
jg
inc
call
pop
in
pop
out
fisubr
scas
popf
ret
sub
into
test
rol
cdq
sub
mov
dec
mov
inc
xchg
xor
adc
imul
call
xchg
cld
mov
push
(bad)
mov
or
pop
ins
(bad)
mov
cmp
fild
push
mov
popf
xchg
sbb
cmp
mov
sbb
sbb
imul
shl
jb
lds
dec
cld
hlt
mov
fcom
pusha
push
sub
arpl
jbe
mov
jl
fwait
jmp
xor
sahf
lods
loopne
dec
aad
leave
rcr
fcmovu
xchg
jne
mov
add
push
jge
dec
iret
sub
repnz
jmp
dec
clc
gs
jno
addr16
ret
dec
mov
out
call
mov
addr16
cld
sbb
cmp
xor
cdq
test
outs
mov
shr
sub
arpl
daa
mov
test
pop
sbb
xor
scas
inc
call
sub
cmp
mov
daa
add
fs
sbb
push
leave
and
add
lods
fldcw
das
xor
sbb
cmp
sbb
test
or
xchg
mov
inc
sub
mov
in
cli
imul
repz
mov
stc
cmp
mov
add
pop
mov
outs
scas
dec
add
aas
dec
shl
pop
mov
xor
push
or
in
jp
xor
push
enter
das
push
sar
pop
jne
lea
jle
lods
and
and
call
cmp
out
(bad)
mov
ror
xchg
mov
adc
add
pop
ret
sub
cmp
fs
cmp
jo
bound
ds
add
inc
inc
xor
lods
mov
pop
mov
out
push
loopne
punpckldq
(bad)
aas
xor
jnp
sbb
fnstcw
cs
(bad)
jae
or
clc
push
and
call
fabs
jo
lods
jae
xchg
shl
inc
sbb
mov
push
imul
sbb
inc
cmp
rcr
mov
in
lahf
dec
inc
cwde
xor
mov
and
out
in
add
hlt
pop
arpl
xchg
shl
cmc
pop
aaa
push
dec
test
mov
mov
and
popa
mov
pop
mov
add
lea
jae
xor
jo
rol
sahf
xchg
jle
(bad)
pop
fisubr
adc
bound
push
nop
sbb
adc
(bad)
push
pop
imul
push
xchg
mov
adc
or
mov
inc
inc
cli
jp
std
mov
dec
pop
sbb
sub
adc
sbb
inc
loope
rcl
jecxz
mov
adc
push
in
bound
mov
mov
cwde
and
sbb
xlat
leave
pop
pop
lods
cmps
jno
add
adc
imul
and
pop
xor
jge
arpl
ins
ins
pop
xchg
aas
movs
add
xchg
call
jae
mov
movs
sar
call
cmp
mul
add
xchg
pop
jg
jle
lock
aaa
sub
xchg
or
test
mov
into
aam
(bad)
in
inc
pop
iret
sub
xchg
int3
adc
lock
mov
pop
mov
dec
repnz
pop
xchg
hlt
jmp
popf
sti
xlat
mov
stos
sbb
sbb
or
lea
mov
pop
mov
pcmpeqw
out
fwait
xor
jnp
fdiv
sti
loope
or
xchg
xchg
gs
icebp
mov
les
dec
int
push
sbb
out
sub
out
push
es
ja
or
mov
out
bound
enter
call
pop
push
add
xor
mov
xchg
sub
loope
es
jns
sub
mov
mov
ja
fld
icebp
push
fiadd
push
js
xor
in
scas
xor
int
cmp
or
add
shl
sub
mov
sbb
sbb
mov
push
pop
out
inc
jge
fwait
call
aas
dec
sti
sub
jmp
pop
test
add
mov
int
jne
mov
push
mov
out
adc
lods
(bad)
push
xchg
add
sbb
aad
scas
adc
mov
pop
outs
loope
pusha
adc
xor
cmp
not
ds
test
(bad)
sbb
lea
dec
aam
cmp
sti
push
jmp
jl
mov
pusha
push
aad
and
mov
inc
add
nop
cld
stos
adc
and
cmp
mov
dec
js
or
retf
add
leave
cmp
dec
in
movs
xchg
sbb
sub
pop
out
inc
test
fwait
std
pop
xchg
dec
addr16
and
jb
mov
mov
cmp
nop
adc
mov
pop
inc
aad
jb
mov
shr
inc
in
cld
sbb
inc
sub
xchg
call
cmp
mov
hlt
icebp
jle
test
jns
test
(bad)
sub
mov
rcr
fwait
aaa
mov
adc
or
test
test
adc
aas
mov
mov
push
inc
jae
adc
mov
lahf
loop
int3
pop
ins
jl
je
push
dec
ss
fwait
sahf
pop
inc
or
test
cmp
hlt
jne
je
sbb
inc
rol
not
xor
gs
ficom
cs
daa
test
pop
sbb
jbe
fdivr
mov
mov
mov
jmp
int
retf
cdq
pop
nop
mov
imul
xchg
sbb
jecxz
push
mov
jg
push
es
repnz
test
mov
sub
pushf
(bad)
adc
lods
inc
adc
into
xchg
out
xchg
push
stc
loope
std
fdiv
test
repz
jne
mov
xor
and
scas
jno
xchg
scas
sti
sub
adc
ja
ins
rcr
push
mov
add
ss
jecxz
out
xchg
(bad)
jmp
sbb
push
test
ficom
sub
jmp
in
daa
push
push
pop
lahf
cs
fisttp
clc
ins
add
lea
adc
sbb
jp
dec
stos
and
mov
or
xor
dec
xlat
mov
loopne
jl
mov
adc
mov
pusha
ins
jbe
imul
fstp
cmp
out
dec
pop
(bad)
jmp
inc
mov
ret
inc
xor
sub
sahf
pop
add
int
daa
pop
daa
or
push
stos
aas
xchg
ret
aad
inc
or
or
push
push
aaa
call
push
push
cmp
or
cs
xor
xchg
repnz
pop
mov
cmovge
in
mov
mov
xchg
jbe
rcr
hlt
mov
shl
test
stos
jmp
or
mov
popa
inc
pop
cmps
int
int3
xor
push
add
push
fwait
bound
sub
cmp
adc
pop
inc
lahf
jns
cld
pop
xor
cmp
add
mov
loopne
dec
adc
aas
inc
aas
push
call
arpl
pop
push
adc
mov
mov
test
pop
inc
or
jecxz
inc
or
mov
popa
jae
mov
sub
outs
test
pop
mov
imul
(bad)
sti
test
sbb
add
jp
retf
or
pop
dec
std
cli
mov
or
ins
pop
bnd
es
xchg
sub
mov
dec
sub
int3
xor
lahf
add
sub
sbb
gs
outs
bound
fild
sub
addr16
xor
xchg
cli
and
mov
cmc
stos
and
bound
mov
sub
lods
xchg
clc
gs
ret
mov
lods
out
(bad)
add
ficomp
mov
cli
icebp
(bad)
jo
sar
in
lods
dec
fnsave
sub
mov
sub
jge
sub
pop
mov
xchg
xor
inc
fist
xchg
loopne
mov
add
push
or
sub
mov
(bad)
fwait
cwde
sub
into
pusha
nop
xor
adc
loop
popa
repz
daa
pop
sar
je
jne
mov
inc
(bad)
mov
cmp
je
ja
and
mov
xchg
aam
jo
fadd
(bad)
ja
sbb
ret
jns
pop
jo
call
xchg
add
lods
pop
xor
fcomp
pop
dec
(bad)
pop
mov
cmps
loope
add
loopne
push
jae
xchg
jmp
popf
mov
pop
test
push
and
inc
pusha
jle
inc
jne
arpl
adc
(bad)
lahf
push
iret
add
popw
pop
movs
daa
in
and
mov
mov
mov
adc
adc
rol
popa
iret
arpl
les
sahf
fwait
leave
xchg
xchg
xlat
and
xchg
and
and
scas
xchg
inc
lods
inc
pushf
pop
(bad)
int
mov
sbb
push
in
pop
jb
and
iret
or
int
das
call
icebp
fsubr
xor
sub
pop
sbb
movs
jmp
lahf
mov
test
adc
xchg
scas
cs
inc
bound
jg
mov
(bad)
jmp
ds
jp
sub
hlt
sbb
sub
mov
push
mov
repnz
xchg
daa
fcom
adc
pop
(bad)
out
inc
jo
dec
mov
push
xor
mov
push
sub
cmp
xor
stos
repnz
stc
out
imul
or
jae
cmp
mov
fld
mov
icebp
rcpps
or
or
jns
mov
mov
push
imul
mov
push
test
add
cmp
push
cmps
adc
ds
cmp
pop
out
pop
add
mov
sub
add
bnd
or
cmp
push
or
sbb
loopne
push
lea
mov
xchg
push
dec
aad
xor
push
pop
dec
mov
jbe
adc
inc
adc
(bad)
push
dec
jp
sahf
jecxz
fs
nop
stc
dec
mov
adc
in
dec
pop
add
rcr
aam
pop
repz
(bad)
stos
fwait
jno
fstp
sbb
addr16
xchg
mov
xchg
aas
sets
out
xor
fcomp
cwde
adc
xor
adc
addr16
enter
stc
ins
imul
mov
push
xor
fs
mov
mov
test
mov
scas
pop
jmp
mov
sub
fnsave
call
shl
pop
sbb
xchg
imul
mov
pop
sbb
lods
(bad)
and
aaa
jp
ss
jb
lock
fwait
in
add
sti
and
jae
std
imul
sti
cli
or
adc
adc
or
ja
pop
in
jecxz
(bad)
test
in
pop
adc
push
push
pop
push
enter
xor
pop
push
dec
and
jmp
dec
mov
int
dec
jge
mov
and
outs
in
fst
packsswb
adc
sub
(bad)
sbb
in
xchg
lods
mov
xchg
jge
mov
mov
and
inc
mov
mov
frstor
pop
adc
fdivrp
(bad)
mov
sub
push
arpl
cdq
clc
xor
jmp
movs
outs
cmc
inc
mov
jecxz
xchg
in
xor
mov
dec
sbb
lods
jns
daa
(bad)
jge
stc
push
sar
jnp
mov
les
scas
std
mov
xor
pop
adc
lods
imul
not
psubd
cmps
mov
(bad)
pop
call
test
stos
xchg
jg
into
lea
xor
(bad)
mov
pop
(bad)
out
out
lds
popf
sub
add
daa
icebp
push
push
in
les
sub
push
sar
cld
fsub
les
jae
cmp
xchg
pop
aam
adc
cmp
push
mov
mov
push
jne
pop
pop
mov
enter
lds
jns
cli
and
add
sbb
sbb
fisubr
jno
repz
hlt
loop
pop
mov
repz
mov
in
ds
push
in
dec
mov
mov
or
imul
ret
sti
int
pop
minps
movs
mov
mov
pop
mov
xchg
push
push
pop
pop
mov
pop
idiv
sub
add
stc
cmp
mov
xor
mov
push
movnti
lods
jb
and
shl
(bad)
js
lods
int3
xchg
jecxz
mov
or
cmps
jae
cmp
cmp
dec
sub
sub
xlat
push
clc
xchg
fmul
add
jno
mov
sub
jecxz
mov
sbb
imul
aaa
fs
arpl
cmps
adc
pop
pop
dec
adc
mov
out
cmp
xchg
jmp
ins
out
cmps
push
jbe
cmp
cmp
test
or
(bad)
lds
(bad)
loopne
add
sub
pop
jne
ja
(bad)
inc
cmps
xchg
jle
inc
jo
and
push
fldenv
stc
cmp
inc
rol
jg
leave
dec
in
xchg
mov
lods
es
clc
mov
call
cmp
(bad)
cmps
inc
pop
jg
daa
xchg
je
pop
or
scas
js
cs
mov
pop
scas
push
mov
or
adc
sbb
add
push
jns
mov
and
ss
jnp
rcl
outs
mul
adc
dec
xchg
out
fistp
stos
js
xor
in
jmp
cwde
add
call
retf
out
std
push
cmp
pop
add
(bad)
push
div
(bad)
js
icebp
push
pop
push
push
cmp
adc
push
jmp
aas
mov
aam
popf
pop
add
sbb
repnz
fwait
mov
test
ja
fnstenv
movs
test
mov
adc
adc
dec
dec
not
sbb
in
loope
fwait
jle
test
aaa
aam
xor
xor
into
iret
push
lahf
adc
jmp
mov
gs
(bad)
data16
xor
(bad)
xor
mov
mov
ret
sbb
nop
(bad)
adc
sti
add
cwde
outs
aam
imul
clc
mov
retf
add
gs
repz
push
jge
in
ins
test
mov
push
cwde
push
js
fcomp
mov
daa
sub
push
inc
aam
sub
mov
sbb
dec
ds
mov
clc
clc
adc
inc
dec
repz
jbe
inc
cmps
fild
dec
stc
xchg
sub
(bad)
cdq
pop
rcl
xor
stc
cmp
pushf
imul
data16
mov
stos
sar
repnz
pop
retf
jbe
scas
leave
es
loope
mov
mov
xor
mov
and
pop
push
mov
cmp
mov
not
mov
inc
or
or
pop
and
jb
push
mov
mov
sub
sbb
test
cmp
sti
aad
pop
adc
fdivr
dec
ror
into
test
pushf
(bad)
dec
mov
cli
lods
imul
mov
in
mov
xor
cmp
xor
test
mov
sar
popf
aas
ffreep
pop
daa
sti
cdq
(bad)
cmp
mov
call
out
xchg
(bad)
mov
ins
dec
push
mov
movs
push
imul
in
cld
pushf
ret
fidiv
fisubr
lods
dec
imul
call
je
popa
push
sbb
test
test
test
jmp
sub
fucomi
pop
(bad)
mov
mov
stos
pushf
outs
retf
xor
cmps
sub
jno
adc
cwde
or
js
add
and
push
ret
das
cdq
popf
dec
dec
loop
pop
lahf
movs
in
js
inc
adc
stos
aam
mov
in
je
jo
bound
mov
mov
push
das
movs
pop
xchg
iret
leave
sbb
adc
inc
xchg
setl
jge
adc
mov
scas
nop
adc
lea
mov
gs
repz
les
mov
pop
ja
outs
xlat
xchg
mov
jmp
pop
xlat
dec
(bad)
out
imul
and
stc
fbstp
fistp
jmp
es
or
pop
ret
add
jae
in
jg
mov
or
fiadd
xor
jae
sbb
pop
out
int3
jge
popf
lock
outs
mov
adc
into
and
js
inc
cmps
jbe
dec
mov
push
fld
inc
cli
arpl
sub
iret
xor
xchg
leave
sub
js
or
sbb
jecxz
cs
sar
add
sahf
push
out
aas
into
fisttp
ins
aad
xor
aas
lea
xor
and
pusha
jb
mov
add
inc
adc
mov
inc
inc
pop
push
jns
and
xchg
in
popa
test
inc
adc
mov
mov
or
cmp
or
add
add
aam
push
pop
fsub
sub
ja
scas
fldenv
xchg
dec
and
dec
xchg
or
(bad)
in
(bad)
ret
fpatan
loopne
sub
jnp
fucom
sub
and
test
shl
dec
out
or
mov
jb
cdq
gs
push
jg
pop
pop
lahf
adc
jns
add
cs
lea
add
cmp
fwait
cmp
ins
enter
or
jmp
sti
jp
xor
fld
nop
mov
int
outs
mov
jmp
sub
adc
lahf
cmp
and
pusha
popf
sbb
mov
icebp
adc
xor
push
dec
adc
sub
add
(bad)
cmp
dec
push
adc
ss
setge
repnz
hlt
xor
cmps
xchg
xchg
aad
lds
xchg
in
or
pusha
fldenv
pop
sub
dec
jl
repz
xchg
popf
cmp
sti
sbb
out
pop
adc
lahf
mov
popf
cwde
xchg
mov
jp
ret
sub
in
add
retf
loop
retf
mov
or
jmp
imul
test
dec
cmps
add
jge
xor
push
jmp
push
inc
xchg
bound
xchg
push
dec
(bad)
test
imul
pusha
(bad)
leave
lods
aam
das
and
dec
in
dec
pop
push
xchg
pop
xchg
mov
ds
and
lahf
or
cs
jmp
rol
nop
stc
out
mov
(bad)
or
adc
jmp
addr16
fucomi
retf
push
mov
xor
out
mov
sbb
push
inc
lds
cmp
ss
call
mov
jmp
fld
or
and
mov
ficom
mov
mov
sahf
cmp
retf
out
jb
push
mov
jl
mov
ins
lods
jecxz
jbe
int3
mov
in
push
push
cmp
aaa
mov
pop
jecxz
movs
data16
mov
push
and
mov
ja
dec
pop
(bad)
daa
mov
fld
pop
fild
lock
inc
sbb
pop
or
adc
pop
movs
(bad)
out
repnz
hlt
movs
jge
shl
imul
test
pop
cmp
scas
repnz
push
pop
inc
sti
push
and
rcr
push
pop
dec
or
xlat
pop
or
retf
clc
div
xchg
in
cmc
in
and
nop
ja
or
repz
sbb
packuswb
and
adc
js
dec
out
stos
rol
sbb
mov
push
enter
jb
movs
push
inc
test
sbb
shr
scas
in
les
cmp
out
xchg
ret
ss
adc
inc
cli
xchg
inc
lods
imul
mov
nop
cmps
mov
icebp
lock
sub
lea
xor
cli
mov
scas
mov
pusha
pop
mov
xor
fisub
es
ins
in
les
and
lahf
mov
dec
fstp
mov
(bad)
or
call
aaa
fisttp
ds
test
mov
out
clc
les
aad
je
mov
dec
scas
aam
xchg
add
mov
std
retf
pop
adc
xchg
pop
dec
in
pop
pusha
cdq
or
call
fwait
add
imul
push
cmps
data16
dec
hlt
xor
das
mov
movs
mov
out
xchg
mov
shl
cmp
fdiv
mov
xor
mov
pusha
xchg
xor
add
mov
push
xchg
fsubr
cmp
mov
clc
xchg
(bad)
adc
mov
cmp
dec
mov
push
imul
pop
outs
fisubr
cmp
lods
nop
and
in
outs
ret
fdiv
xor
pop
push
inc
jae
pop
test
sbb
jne
jmp
test
mov
jle
loop
scas
adc
xchg
inc
adc
inc
push
retf
mov
push
sbb
sar
cmp
test
outs
(bad)
test
cmc
mov
inc
fwait
xchg
xor
adc
push
movs
daa
jp
xor
sub
xor
xor
aad
inc
pop
call
ficom
add
pop
push
and
sub
and
mov
or
and
sti
or
jbe
inc
aas
and
dec
pop
sbb
xchg
jge
mov
(bad)
lds
(bad)
out
xchg
mov
adc
sahf
(bad)
sbb
mov
aaa
into
arpl
dec
pop
sbb
push
ja
jecxz
adc
inc
jle
std
mov
ja
push
add
push
mov
mov
jns
jnp
sub
add
fwait
es
icebp
(bad)
jmp
mov
mov
cs
not
cmp
repnz
stos
(bad)
(bad)
pop
fbstp
dec
ins
imul
js
ds
mov
aaa
pop
ror
mov
pop
add
inc
nop
mov
xchg
cmp
int3
dec
mov
lahf
das
and
out
iret
es
and
xchg
loopne
retf
data16
test
test
and
ficomp
mov
and
mov
or
pop
xchg
out
push
mov
jno
lods
ds
scas
pop
addr16
outs
xchg
and
arpl
lock
in
inc
movs
stos
or
or
lea
pop
(bad)
mov
mov
pusha
in
push
mov
mov
(bad)
and
pop
fnstenv
gs
(bad)
push
test
jne
adc
pop
sbb
mov
(bad)
fdivrp
stc
cmp
pop
sbb
mov
mov
jnp
sub
test
or
sub
aas
sbb
sahf
xchg
arpl
int
loop
(bad)
(bad)
out
jl
push
in
mov
mov
xor
and
jo
jmp
je
xor
lock
push
push
(bad)
or
dec
repz
xchg
xchg
mov
aam
shl
mov
sub
icebp
test
ds
adc
sub
rcl
test
or
aas
test
cdq
adc
cwde
scas
xchg
adc
das
stos
jg
jp
stos
push
push
inc
ins
int3
(bad)
xor
jge
pop
jl
shl
add
icebp
cmps
out
adc
mov
push
(bad)
adc
or
xor
sub
int3
movs
(bad)
ss
inc
popa
scas
add
loop
ret
nop
add
pop
inc
pushf
dec
mov
loop
cmp
imul
les
mov
add
xchg
lds
jg
(bad)
cdq
or
sub
inc
add
cmp
pop
and
(bad)
cmp
ins
imul
mov
jecxz
ror
jp
or
push
mov
pop
push
fild
and
out
push
or
stos
dec
movaps
call
iret
jno
int
mov
jp
dec
test
add
fs
mov
scas
mov
mov
shr
or
inc
aas
mov
pop
ret
push
push
add
ds
jnp
sub
sub
mov
push
rol
cmp
inc
or
jae
mov
ror
retf
sub
jns
cmp
add
dec
outs
jecxz
outs
out
sub
popa
mov
add
nop
sub
and
das
mov
scas
aaa
mov
bound
in
mov
pushf
call
repz
aaa
pusha
fisub
inc
mov
repnz
xchg
push
push
loopne
int3
xor
jne
jns
mov
movs
xor
fs
sub
jl
add
fsubr
xchg
test
push
xchg
pop
rcr
push
mov
pop
or
push
inc
and
xchg
rcl
mov
cmp
shl
std
aas
scas
and
mov
retf
and
dec
fistp
icebp
std
adc
data16
xor
push
pusha
ins
xor
rcl
pop
loop
jne
or
mov
dec
mov
imul
mov
jmp
pop
or
pop
jbe
adc
pusha
mov
xchg
mov
inc
push
in
aas
test
sbb
ret
in
sar
inc
sbb
repz
daa
cmp
inc
inc
push
scas
xor
das
jbe
stos
(bad)
push
imul
push
push
sub
add
hlt
mov
cli
bound
add
jge
je
jbe
xchg
pop
push
dec
cmp
repz
xchg
test
mov
dec
mov
mov
and
push
imul
or
or
xor
or
dec
adc
dec
cld
mov
jmp
test
mov
push
shl
ds
ja
fistp
in
ins
dec
lea
shl
lods
dec
sbb
sub
adc
in
mov
adc
add
mov
lods
mov
jp
inc
adc
or
jb
sub
jmp
cld
pushf
stc
mov
adc
pusha
out
scas
loopne
xor
pop
xor
adc
out
out
int
mov
lahf
push
pop
xchg
mov
fwait
push
mov
mov
outs
out
mov
sbb
mov
ins
sbb
and
inc
mov
iret
call
or
cmp
inc
sti
mov
mov
stos
add
push
shl
jnp
add
mov
xchg
ins
pop
(bad)
cmp
sbb
rcr
push
cmc
lods
adc
jmp
lock
fstp
jo
vpsubq
add
out
shl
mov
dec
jns
mov
mov
loop
pop
cmp
or
jae
shl
cmp
outs
jmp
pop
mov
in
mov
lock
xchg
pop
in
dec
jl
mov
xchg
mov
retf
mov
nop
stc
mov
and
cmp
out
sub
and
pop
jnp
cwde
jecxz
push
push
pop
(bad)
scas
shr
sub
cmp
jb
sar
movs
test
cmp
call
ret
rol
int
int
push
and
imul
add
(bad)
rcl
jb
scas
and
and
push
(bad)
leave
xor
adc
inc
pop
retf
inc
mov
add
cmp
int3
jge
data16
mov
jae
mov
aas
mov
out
outs
mov
movs
or
cmp
pop
sub
push
pop
adc
adc
and
adc
inc
sub
jecxz
fdivr
sbb
cmps
aas
and
dec
retf
in
scas
mov
enter
dec
fwait
jb
mov
in
and
push
jne
jmp
pop
mov
xchg
xor
int
leave
inc
repnz
xchg
xor
(bad)
fwait
push
pusha
test
sahf
stc
push
jnp
out
inc
push
cmp
and
xor
hlt
dec
cmps
xor
imul
or
dec
sbb
cmp
in
iret
or
pop
cmc
aam
xor
repz
std
dec
scas
jle
mov
xlat
sub
xchg
test
xor
cmp
or
(bad)
out
(bad)
and
adc
inc
(bad)
popf
push
jle
xchg
retf
dec
xchg
xchg
sub
sti
sbb
leave
inc
jno
(bad)
ins
loopne
adc
(bad)
mov
stc
into
fwait
and
mov
mov
jb
sbb
pop
or
mov
add
push
das
mov
(bad)
adc
jmp
pop
stc
ret
xchg
movs
add
sahf
mov
jecxz
pop
xchg
xchg
mov
pop
fsub
sub
outs
arpl
in
cli
lods
fcom
mov
ret
std
in
pop
aam
cwde
fisub
sub
std
ins
add
xchg
xchg
imul
jno
push
inc
mov
loopne
add
lock
in
dec
je
pop
scas
test
std
mov
dec
jno
dec
(bad)
in
test
cmc
jp
mov
xchg
adc
pop
popa
mov
mov
push
call
arpl
mov
jae
jecxz
loop
sub
cmp
sti
stos
fsub
loop
aaa
sub
inc
dec
pop
in
or
dec
mov
int
lock
push
sar
jo
push
aas
and
out
dec
jne
mov
aaa
fdivr
push
je
into
xchg
sub
iret
int3
cmp
mov
es
enter
inc
push
outs
fidiv
push
pushf
mov
(bad)
dec
idiv
add
add
jae
xchg
jl
ins
fadd
cmps
dec
retf
aas
add
(bad)
adc
mov
leave
mov
sub
nop
popf
push
or
cmps
je
push
std
movs
pop
(bad)
lods
mov
fadd
adc
xchg
das
or
into
dec
test
mov
ror
fld
and
or
daa
or
mov
rol
sub
pop
sub
jbe
xchg
popa
mov
xchg
pop
in
hlt
xlat
out
out
add
fisubr
pop
mov
add
pop
xchg
fdiv
mov
bound
aam
inc
iret
mov
das
cmp
pop
xlat
or
pop
call
xchg
push
mov
fs
inc
shl
mov
mov
mov
cmps
sub
loopne
mov
cdq
mov
in
fisttp
xor
sbb
xchg
mov
btr
push
inc
mov
sub
icebp
div
sar
hlt
mov
call
ins
xchg
jge
popa
xor
add
xor
div
xor
in
or
je
std
stos
add
call
cdq
inc
mov
std
aad
mov
rol
cs
jnp
jmp
ins
retf
daa
mov
xchg
inc
leave
sar
cmp
mov
mov
add
std
int3
es
inc
pop
test
mov
loopne
pop
pop
shr
cmps
pop
add
xor
cmps
test
xchg
and
(bad)
push
mov
xchg
add
loopne
retf
retf
push
dec
test
dec
ja
sahf
mov
sub
sti
(bad)
stos
pusha
les
cmp
lock
fwait
aaa
pop
and
fmul
addr16
cmp
or
pop
popf
push
(bad)
shr
mov
test
mov
shl
sub
inc
pop
das
xor
mov
in
sub
pusha
jmp
(bad)
sbb
test
bnd
or
jmp
jle
or
xor
add
leave
jg
mov
xchg
or
adc
inc
test
mov
aas
lock
lds
jle
xchg
push
jb
repnz
shl
enter
std
mov
pop
mov
inc
scas
aam
test
cwde
jns
push
fwait
mov
jecxz
js
push
jl
into
jo
fdiv
add
neg
mov
push
popf
inc
jno
push
aaa
fwait
stc
aaa
dec
fwait
add
cmps
cmp
or
jge
mov
daa
xchg
mov
(bad)
test
popa
push
mov
imul
mov
cwde
add
ret
xchg
xchg
push
add
dec
fild
adc
lahf
jecxz
inc
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
add
add
lods
pop
xchg
cmp
ins
jmp
cmc
mov
xor
stc
dec
lods
jecxz
out
sub
pop
push
mov
xchg
aaa
pop
push
add
div
push
pop
sub
mov
mov
clc
or
sahf
(bad)
xor
mov
dec
inc
scas
xchg
fst
push
enter
iret
hlt
mov
sbb
(bad)
dec
push
push
cmc
jge
aas
mov
cli
jae
(bad)
fcmovnu
cmp
push
xchg
popf
loopne
lea
loope
sbb
fcmovnbe
cmp
xor
scas
scas
cs
mov
xchg
int3
das
gs
dec
out
mov
cmp
and
jg
add
bound
ret
mov
nop
mov
bound
leave
or
cld
pop
xchg
stc
jb
inc
push
xor
shr
int3
add
adc
sahf
(bad)
adc
sbb
out
add
pop
xchg
repnz
cmp
cmp
mov
std
lds
mov
out
push
pop
dec
inc
pop
or
adc
cli
test
mov
pusha
sar
in
shl
not
push
mov
(bad)
in
sub
adc
sub
jg
pop
ror
icebp
or
aad
pop
mov
shl
mov
adc
pop
inc
and
movs
jg
retf
xchg
inc
push
push
dec
add
mov
outs
inc
jp
xor
cdq
fdivr
call
fsubp
(bad)
lea
mov
jno
and
mov
dec
clc
sub
xchg
dec
or
xchg
(bad)
cmp
(bad)
mov
(bad)
push
xor
pop
push
loopne
xor
mov
inc
fidivr
movs
jbe
dec
lahf
push
mov
in
xchg
jle
push
cmps
outs
inc
cli
ja
into
je
stc
xlat
leave
push
(bad)
(bad)
sub
shl
(bad)
sub
xlat
fisubr
mov
mov
cld
jge
bound
in
leave
(bad)
shl
add
outs
pushf
push
je
ret
or
sub
jle
add
inc
call
push
inc
(bad)
das
in
mov
(bad)
cmc
out
add
dec
and
cmp
push
int
aad
dec
cmc
pop
ins
pop
push
dec
xor
xchg
fwait
fs
jmp
fisubr
fsubrp
mov
fisubr
scas
mov
std
xor
mov
ds
xor
or
dec
push
icebp
mov
jp
mov
add
fistp
adc
mov
sub
xchg
sahf
xor
sub
jne
mov
xor
add
iret
push
or
movs
jg
mov
cmp
mov
fcmovu
or
push
or
imul
clc
stos
retf
(bad)
popf
hlt
ins
jo
movs
sbb
es
pop
mov
fld
fdiv
lahf
dec
into
cwde
cmp
arpl
dec
aad
leave
pop
or
sub
pusha
pop
int3
xor
out
repz
jp
out
repnz
dec
je
test
dec
test
xchg
test
scas
in
js
sar
mov
sbb
cld
push
fist
inc
sub
stc
retf
mov
or
mov
(bad)
rcl
add
and
sbb
(bad)
sub
or
iret
movs
jmp
dec
adc
and
cmp
mov
gs
mov
cs
jae
or
push
add
test
imul
mov
cmc
je
cmc
jmp
sbb
push
cmps
cmp
add
inc
rcl
loop
mov
xor
sub
inc
sti
jo
mov
xchg
fiadd
call
(bad)
fnstenv
mov
mov
pop
or
add
cmp
ja
push
(bad)
mov
out
out
imul
rcl
retf
sbb
out
and
push
inc
dec
frstor
jmp
mov
cmp
or
fisubr
add
inc
out
sbb
icebp
xor
lods
push
or
push
push
aaa
and
ja
icebp
xchg
sbb
pop
test
int3
mov
scas
aaa
mov
fild
push
in
dec
(bad)
mov
imul
xchg
lock
adc
sub
pusha
out
loopne
nop
into
cmc
repz
sti
retf
mul
mov
mov
mov
aad
jp
mov
fistp
daa
pop
imul
adc
fstp
mov
pop
mov
inc
(bad)
or
pushf
cmp
inc
jno
cmc
rcr
call
std
inc
lea
outs
fdiv
clc
mov
das
add
mov
mov
cmc
stos
jae
inc
test
dec
push
jmp
mov
test
aaa
lea
xchg
lock
cmp
dec
inc
call
add
sub
mov
lods
iret
or
sbb
cs
mov
movs
lahf
mov
xchg
cli
mov
adc
pusha
dec
or
jl
arpl
mov
pop
adc
imul
sbb
mov
mov
pop
imul
mov
pop
inc
sbb
or
(bad)
aad
xor
xchg
pop
icebp
push
inc
stc
dec
xchg
scas
movs
arpl
loopne
dec
pop
in
gs
inc
mov
sub
addr16
dec
clc
add
push
add
retf
jmp
dec
fst
aas
cmp
mov
gs
xlat
jl
pop
pop
test
sbb
std
xchg
jbe
dec
hlt
adc
or
loopne
shl
imul
inc
cs
je
test
cmp
stc
repnz
inc
cmp
cmp
stos
mov
jns
push
cmp
mov
push
cmp
jmp
int
inc
mov
xor
mov
mov
xchg
sub
nop
sub
cmps
cmp
and
push
push
adc
adc
(bad)
retf
adc
pop
and
jecxz
mov
std
sbb
cmp
mov
pusha
pushf
dec
popa
in
add
mov
adc
pop
pop
(bad)
stos
cmps
mov
sub
out
dec
adc
retf
fsub
jp
mov
push
gs
lds
lods
clc
and
sub
adc
or
aas
adc
cmp
pop
push
mov
pusha
shl
cmps
jmp
push
ror
xchg
inc
(bad)
cmp
push
mov
add
add
sbb
outs
aaa
fnstenv
xor
ds
push
aad
imul
push
loopne
jge
repz
pushf
shr
jne
test
jo
pop
mov
jecxz
mov
jecxz
jge
(bad)
mov
dec
xor
jo
pop
inc
fmul
inc
xchg
and
mov
or
add
mov
xchg
cmps
mov
xchg
jo
xor
sbb
cwde
repnz
mov
cmp
cmp
dec
js
jge
call
and
lods
or
push
lods
mov
imul
lods
adc
add
pop
or
cli
pop
pop
push
rcr
push
pusha
sbb
mov
push
jmp
ds
fisubr
push
push
pop
sbb
mov
jno
cwde
repz
outs
xchg
dec
jbe
lods
and
ja
jmp
xor
addr16
aaa
lea
movs
scas
in
dec
cmp
xchg
repz
add
sub
rcl
jo
aad
cli
fild
jge
test
adc
inc
or
lahf
(bad)
xlat
pop
sti
jmp
xlat
loop
aam
mov
pop
cmp
mov
test
jbe
lahf
dec
pop
mov
ficom
mov
pop
mov
xchg
xor
cmp
lods
mov
jns
mov
push
cs
gs
mov
dec
stc
fdiv
into
mov
jbe
push
test
outs
aad
and
or
loop
loop
inc
mov
je
fidiv
mov
jl
icebp
scas
icebp
int
add
dec
(bad)
push
fidiv
xor
sbb
sar
mov
out
jb
sub
fild
in
jl
sub
mov
out
popf
shl
sub
lahf
cmps
aaa
mov
sub
adc
fisttp
sub
or
mov
popa
pop
bound
add
add
mov
mov
fwait
int3
jmp
push
test
int
mov
add
sbb
and
inc
jo
jle
lds
call
outs
adc
xchg
int3
mov
push
dec
mov
mov
and
add
mov
push
mov
sbb
xor
ds
lock
cmc
sahf
xor
popf
sbb
and
jmp
or
test
aad
in
aas
clc
popf
leave
push
(bad)
out
xchg
loop
push
pop
inc
sbb
mov
push
rcr
pop
std
push
movs
mov
rol
mov
mov
jg
or
pop
std
out
clc
pop
push
cld
icebp
xlat
test
mov
out
mov
add
push
pop
popa
jge
adc
fnstenv
pop
cmp
inc
xchg
and
mov
push
or
push
mov
aaa
icebp
call
test
(bad)
loop
fcmovbe
jmp
jmp
in
or
fmul
sar
xor
sti
(bad)
loope
pop
cmps
dec
mov
das
inc
cmps
leave
fcom
pop
bnd
cmp
sub
jg
sbb
and
inc
mov
mov
pushf
or
jno
shl
or
jns
cli
cs
in
xlat
sub
pop
pop
aaa
(bad)
xchg
xchg
stc
out
add
xchg
cmps
sbb
sbb
ja
sbb
into
pop
xchg
mov
imul
mov
lods
dec
ins
push
das
aas
inc
ins
(bad)
and
(bad)
mov
pop
rol
sahf
xlat
shl
std
xchg
adc
movs
inc
cmp
out
add
(bad)
int
std
pushf
lods
adc
add
jnp
mov
aas
push
mov
mov
sbb
add
fisubr
push
and
sbb
or
sar
inc
mov
cmc
mov
add
repnz
cmp
pop
or
mov
mov
cdq
mov
cmps
lea
retf
dec
into
push
rcr
jo
je
movs
int
shl
cmp
mov
and
mov
push
outs
cmp
push
mov
dec
ror
inc
push
out
mov
(bad)
std
sbb
cmp
stos
xor
popf
fisubr
push
inc
lods
push
mov
push
(bad)
aam
inc
sub
ret
aas
add
ja
inc
retf
mov
stc
ins
or
stos
mov
xor
xor
mov
fidiv
loope
dec
sbb
xor
sub
cdq
ds
dec
arpl
movs
mov
mov
mov
sbb
repz
lss
dec
stc
sub
mov
(bad)
dec
inc
inc
xchg
icebp
inc
arpl
fsubr
push
aas
cmp
jnp
es
imul
aaa
shr
mov
fcmovbe
in
call
rcl
dec
imul
inc
cmp
push
sub
sub
ins
div
mov
dec
scas
jp
ins
rcr
in
fadd
retf
pop
push
stos
mov
adc
inc
dec
out
add
push
mov
stos
jo
ins
and
test
(bad)
adc
and
and
sbb
retf
pop
add
jg
cld
or
mov
jno
or
fiadd
xchg
xlat
stc
jl
(bad)
jg
les
ja
cmp
adc
sti
pop
cwde
ja
jae
aaa
das
fisub
mov
out
cmc
cmp
fisttp
cmp
add
xor
xlat
loope
ins
inc
sub
retf
add
pop
push
retf
inc
pop
xor
(bad)
jl
mov
dec
out
sub
mov
add
sub
push
xor
sbb
fwait
sti
add
loope
imul
adc
jecxz
popf
outs
shl
sbb
sub
push
out
mov
(bad)
xor
inc
or
out
sar
jg
js
fild
or
lods
cmp
movs
shr
fcomp
movs
mov
es
arpl
jbe
and
ret
sbb
xlat
pusha
imul
jns
mov
div
int3
xchg
adc
and
mov
ficom
mov
cs
cmp
cwde
popa
inc
sysret
aad
outs
xchg
push
cmp
mov
sahf
(bad)
xor
fmul
test
mov
xor
ror
mov
bound
sub
push
push
or
scas
ds
push
(bad)
cmp
movs
sahf
rol
pop
xor
and
imul
ror
cmp
jnp
mov
inc
jbe
stos
pop
xchg
mov
push
in
into
mov
lahf
dec
ffree
test
in
scas
jns
std
or
pop
xchg
jae
repnz
sub
loopne
mov
and
mov
mov
ins
mov
imul
add
jns
outs
mov
xor
cmp
iret
fsub
cmp
dec
mov
cdq
xchg
lahf
jb
cdq
into
shr
loop
dec
add
shl
pop
cmp
fld
ins
jl
and
add
xor
or
repz
movs
jae
sbb
cli
sub
cmp
into
aaa
cmp
jns
adc
mov
mov
dec
ret
pop
(bad)
rol
inc
jno
add
xchg
aad
pop
jbe
inc
movs
rcr
test
sub
fld
xor
cs
ret
xchg
hlt
jmp
ins
lods
push
aam
icebp
mov
and
cmp
inc
push
adc
dec
mov
ja
and
hlt
sub
movs
rol
fdivr
mov
sub
ret
test
(bad)
and
and
mov
mov
push
add
or
lea
gs
std
stc
sbb
fidivr
ja
dec
push
movs
cmp
repz
push
and
add
add
sbb
clc
mov
cwde
scas
out
outs
nop
in
call
and
loopne
adc
inc
jnp
xchg
dec
pusha
fisttp
add
jl
jmp
in
imul
sahf
addr16
add
jno
arpl
out
repz
push
in
lock
sti
repnz
push
pop
cwde
xlat
loop
mov
adc
or
ficomp
enter
inc
rol
fs
aam
into
leave
jbe
push
cs
cmp
push
popf
leave
add
mov
outs
and
mov
outs
add
or
dec
cmp
enter
push
hlt
(bad)
in
enter
sbb
fstp
mov
cmp
xchg
pop
nop
jl
retf
mov
jl
cmp
shl
jae
adc
cmp
pop
cmp
sahf
adc
imul
sub
idiv
mov
jnp
or
out
arpl
push
dec
push
or
jmp
fadd
xchg
xchg
cmps
adc
push
mov
iret
push
(bad)
mov
fwait
scas
mov
push
mov
mov
sar
popf
dec
std
push
ror
fild
out
sub
or
dec
in
jg
test
pop
inc
jno
inc
aad
stc
adc
adc
movs
sbb
test
jmp
mov
push
xor
sub
mov
dec
inc
(bad)
retf
xor
inc
dec
mov
mov
in
loope
cmp
xchg
add
cmp
and
fs
mov
cwde
ds
jl
dec
and
cmp
jno
icebp
jecxz
mov
push
sbb
xor
outs
push
bound
mov
push
jnp
cmps
xor
xor
in
pop
adc
mov
leave
leave
sub
clc
mov
jns
sar
ins
xor
mov
ret
pop
mov
pop
repz
lods
mov
es
xor
mov
aad
test
and
push
adc
(bad)
xchg
jg
loop
retf
es
into
cmc
and
mov
jge
sahf
adc
push
or
push
pop
enter
sub
jmp
mov
cwde
jae
mov
jl
xchg
jecxz
paddd
mov
ja
jl
ins
mov
cld
fcmovbe
mov
jns
inc
(bad)
mov
xlat
push
sbb
in
gs
mov
xchg
or
es
mov
sub
in
fiadd
call
pop
mov
add
dec
xor
or
outs
aas
outs
out
adc
sahf
mov
push
add
xchg
(bad)
push
inc
pop
lea
mov
adc
stos
(bad)
mov
(bad)
sbb
cmp
cmp
sbb
test
cs
pushf
dec
inc
in
stos
cmp
adc
sbb
dec
clc
sti
push
(bad)
mov
popf
test
cwde
xchg
jp
push
outs
inc
xor
xchg
xchg
scas
jmp
cmp
leave
out
mov
call
and
aas
xchg
repnz
or
in
and
cmc
xor
add
or
push
lock
pop
nop
movs
(bad)
stc
jmp
test
enter
add
mov
push
cli
imul
pop
cmp
jmp
or
xchg
mov
sti
push
mov
sbb
mov
(bad)
iret
push
dec
je
fcmovb
retf
out
loopne
inc
aam
mov
cmp
jecxz
dec
adc
bound
unpcklps
pop
div
cmp
or
movs
jo
lock
dec
mov
js
jp
mov
xchg
xor
dec
cmps
fsub
sbb
mov
(bad)
push
call
mov
pop
test
cmp
rcr
aaa
cld
retf
xor
jp
jnp
adc
xor
push
(bad)
enter
lock
mov
mov
fisub
cmp
cli
je
retf
inc
sbb
xor
xor
adc
pop
mov
pop
mov
ins
mov
xchg
rcr
stc
adc
ins
ins
adc
cmp
dec
dec
mov
lahf
outs
test
test
hlt
cmps
sbb
push
or
and
inc
and
sbb
add
inc
xchg
inc
mov
push
push
cs
fstp
movs
cmp
jl
jg
dec
jb
sbb
or
adc
xor
jns
fnclex
(bad)
sub
out
mov
xor
add
adc
pusha
sub
js
mov
jnp
lods
xor
cmp
jle
pusha
jbe
mov
mov
fnstsw
(bad)
iret
outs
hlt
jl
mov
pop
cmp
cmp
xchg
pop
dec
cmps
and
(bad)
fst
dec
lea
xor
pop
xchg
adc
shl
cmc
fs
xor
cmp
daa
xor
(bad)
mov
push
loop
sub
nop
cmps
stos
mov
mov
adc
ret
jne
inc
shl
mov
pop
cwde
push
cmp
clc
in
mov
rcl
test
lahf
sub
lahf
jae
mov
pushf
ins
dec
xchg
adc
and
in
popf
pusha
ins
das
(bad)
in
lods
xor
add
shl
(bad)
in
and
outs
ret
ins
aad
adc
loop
inc
mov
scas
pop
push
xchg
inc
lock
cwde
sbb
xchg
ins
fild
fwait
jae
xor
int
loopne
cmp
cmp
fnstsw
lods
pop
dec
ss
inc
fist
outs
cs
call
mov
dec
mov
int3
pop
setg
aam
loopne
les
aad
inc
ins
jo
pop
push
ins
cmc
leave
test
mov
pop
dec
or
pop
or
or
arpl
inc
add
shl
xchg
rcr
adc
lods
icebp
inc
add
pop
clc
mov
or
push
lahf
aam
cmc
sub
mov
rcl
add
rol
cmp
jg
imul
pop
in
neg
inc
mov
add
xchg
jg
add
push
push
push
mov
mov
dec
ficom
pop
je
sbb
sub
mov
jg
popf
xchg
int
loop
stc
aas
cmc
jb
add
xchg
int3
shl
outs
push
add
test
cmps
mov
xchg
cmp
sub
scas
hlt
fild
cmc
int3
xchg
mov
lds
hlt
repnz
jns
into
jo
cmps
lods
xor
sbb
mov
retf
sub
loop
cmp
and
scas
jp
inc
pop
xchg
js
mov
test
jmp
mov
shl
hlt
inc
fidiv
mov
lahf
fwait
and
dec
loope
or
test
add
cmc
addr16
push
aas
lock
add
jae
imul
inc
inc
pop
push
imul
or
fldenv
retf
dec
jl
iret
dec
fadd
mov
xor
pop
cld
mov
or
xchg
outs
std
jne
lods
jnp
or
inc
dec
adc
lock
(bad)
jecxz
mov
(bad)
stos
jle
call
test
jmp
gs
arpl
in
rol
xor
xchg
xlat
je
fcomp
stc
fiadd
test
xchg
pop
jge
rol
dec
inc
(bad)
cmp
sub
or
int
pop
jle
push
retf
(bad)
jecxz
xlat
push
cdq
pop
pop
arpl
call
cmp
lods
jno
jbe
pop
sti
je
push
outs
jp
and
xlat
(bad)
arpl
and
inc
int3
push
dec
inc
xlat
dec
mov
or
ins
ins
aaa
jbe
loopne
xchg
fnstsw
jae
adc
pop
(bad)
jecxz
xchg
imul
out
inc
inc
or
arpl
out
mov
sbb
mov
call
pop
sub
out
retf
push
leave
push
ret
pop
addr16
dec
add
dec
leave
bound
pop
add
ret
les
push
jecxz
jg
fdiv
xor
cmp
cmp
mov
dec
(bad)
cmp
aam
mov
popf
imul
pusha
popa
dec
adc
stc
push
add
or
push
arpl
dec
xchg
(bad)
lods
or
ins
ins
push
ror
(bad)
push
xor
(bad)
ins
call
push
xchg
fmul
daa
leave
xor
cmps
das
pop
in
inc
fisubr
sub
aaa
jne
test
mov
or
nop
les
cmp
mov
scas
cmps
je
mov
or
leave
lahf
call
int
cdq
xor
mov
and
add
dec
dec
ins
out
rol
int
repnz
dec
arpl
les
xchg
dec
sub
test
out
inc
ins
cmp
in
cmps
sbb
daa
sub
das
arpl
fistp
xor
mov
aad
mov
test
js
mov
pop
push
mov
jg
push
cs
or
mov
ins
push
mov
movs
test
stc
sub
and
lods
pop
aas
xor
sub
fisttp
movs
inc
lock
jl
add
popf
mov
jmp
loope
inc
lea
inc
sub
dec
and
ja
fcmove
add
dec
pop
imul
jl
lods
cdq
pop
jbe
mov
int3
xchg
mov
fistp
or
sbb
outs
pop
es
add
sub
lods
jge
jl
or
scas
leave
or
shr
push
pop
movs
and
and
adc
adc
ror
mov
inc
cld
test
jl
dec
jno
scas
dec
or
cmp
xchg
ss
aad
jl
cmp
outs
and
ret
(bad)
hlt
out
(bad)
rcr
adc
sbb
xchg
scas
inc
inc
jne
push
repnz
jl
(bad)
jg
xor
sbb
mov
fild
aas
dec
pop
mov
std
sub
pop
jge
mov
ret
dec
jno
or
pop
xchg
cwde
pop
nop
push
pop
push
sbb
and
(bad)
lahf
and
xor
and
out
sub
(bad)
xor
sub
dec
adc
dec
repz
xchg
retf
xchg
pop
dec
leave
imul
cmp
jne
inc
data16
xor
xchg
js
mov
xor
mov
inc
xchg
adc
cmp
test
adc
repz
cld
ins
mov
enter
dec
stos
adc
sar
cld
xchg
sbb
push
jle
xlat
outs
jno
fld
xor
mov
in
or
arpl
mov
pop
loope
sub
push
xlat
push
add
inc
fdivr
ret
and
pop
push
push
sbb
mov
sub
(bad)
adc
mov
xchg
dec
(bad)
shl
lods
lock
adc
push
dec
int
dec
in
mov
xchg
mov
jmp
cld
push
and
test
or
fst
add
cmps
(bad)
add
pop
cmp
pop
jae
bound
sar
xor
fild
and
sub
xchg
add
leave
xchg
jmp
les
jge
jp
call
pop
push
jnp
inc
push
idiv
add
push
push
sub
mov
cmp
jecxz
mov
mov
inc
push
ret
fisub
in
push
int
push
dec
clc
push
cmp
pop
call
inc
sbb
je
adc
xchg
adc
sub
mov
add
fcom
movq
or
sub
lds
shr
adc
xchg
aad
test
mov
popf
pop
adc
or
ficomp
inc
jg
mov
pushf
mov
xchg
repnz
fstp
jle
push
pop
xchg
ins
shl
test
push
and
idiv
in
cmps
pop
stc
fsubr
loop
pop
aas
rep
xchg
cmp
movs
inc
mov
add
sub
ret
xor
cmps
mov
test
es
daa
fwait
idiv
nop
jge
rcr
aad
test
or
jbe
push
jge
(bad)
mov
(bad)
aas
dec
jmp
cmp
imul
add
mov
fidivr
cmp
xor
sub
jno
aad
xlat
mov
or
mov
ss
xor
enter
scas
cdq
movs
jno
popa
ror
inc
cmp
test
pop
xchg
sbb
in
dec
jns
xor
cmp
dec
push
pop
add
pop
fisttp
inc
sahf
sbb
cld
xchg
mov
mov
inc
stos
cdq
sbb
fnstenv
push
sbb
jp
add
push
(bad)
sbb
mov
mov
jl
ja
ja
dec
js
fcomp
cwde
out
pandn
(bad)
leave
mov
out
(bad)
and
push
inc
push
jle
or
mov
in
mov
mov
push
mov
pop
aam
ins
aaa
jno
mov
loope
pop
and
loop
jb
rcl
jns
ins
pop
shl
mov
and
dec
push
mov
pop
(bad)
shl
data16
fbstp
jl
mov
int3
xchg
mov
aaa
adc
xchg
xchg
inc
shl
pop
and
icebp
fisubr
popa
add
add
imul
cmps
cwde
in
inc
dec
fdivr
adc
mov
mov
push
jmp
or
mov
jbe
repz
repnz
push
lods
cvttps2pi
jmp
xlat
aad
jns
dec
leave
sbb
and
dec
call
xchg
stc
test
test
mov
je
inc
and
pop
jmp
loop
jmp
xchg
pop
dec
imul
stos
stos
sbb
addr16
fcmovu
call
add
pop
fisttp
xchg
xchg
cs
cmps
mov
pop
loop
or
ret
lea
(bad)
push
out
inc
xor
mov
add
pop
ja
popf
mov
jge
(bad)
aaa
gs
nop
jo
or
pushf
mov
dec
(bad)
fsubr
stos
in
jle
mov
dec
jne
mov
inc
dec
or
and
pop
push
push
(bad)
ins
test
mov
mov
daa
jmp
inc
add
mov
and
add
ffreep
sahf
inc
mov
pop
jl
and
mov
sub
pop
aas
dec
or
bound
pop
adc
ret
lock
lods
push
xor
push
and
pop
mov
dec
add
mov
inc
test
sub
or
jns
mov
add
mov
test
sub
jo
sti
test
enter
ja
call
out
outs
idiv
push
mov
lds
adc
mul
lock
jmp
lds
sbb
fwait
hlt
or
fld
xlat
dec
test
mov
mov
loope
inc
das
call
xchg
or
scas
or
or
popa
fstp
outs
lea
stos
add
aam
adc
mov
mov
and
addr16
xor
je
std
xchg
iret
pop
ret
sub
bound
scas
pop
xchg
out
inc
je
cdq
or
aas
push
mov
pushf
add
fs
xchg
rcl
pusha
sahf
clc
pusha
cmp
iret
aaa
cmps
add
xor
mov
out
adc
pop
sbb
adc
leave
xchg
dec
idiv
leave
add
retf
data16
or
ja
in
mov
mov
sbb
xchg
iret
in
aas
jmp
pop
out
cli
mov
aaa
in
mov
push
inc
fs
hlt
stos
nop
xchg
fistp
and
or
aaa
int
jg
mov
je
(bad)
fldcw
xchg
mov
dec
fnstcw
mov
ins
pop
ins
xchg
dec
dec
sub
pop
jne
mov
inc
loop
lock
push
test
mov
pop
cmps
add
mov
or
outs
cwde
xor
xor
dec
imul
imul
jbe
sahf
and
ret
cmps
lahf
adc
jnp
in
jl
ss
jnp
add
movs
jmp
sbb
loop
lahf
inc
shl
sbb
inc
div
adc
mov
ins
inc
pop
push
cdq
addr16
xchg
sbb
push
cli
mov
jge
arpl
aas
mov
add
cmp
mov
push
sub
lods
in
lods
mov
mov
mov
jb
into
pop
inc
and
test
mov
not
adc
cmp
clc
(bad)
aaa
imul
mov
leave
stos
lods
mov
cmp
push
ins
jecxz
mov
outs
jo
mov
fistp
inc
xor
add
sub
int
pop
ror
mov
pop
pushf
aas
jne
cmp
jae
bnd
xor
cld
lea
ret
or
shl
and
scas
mov
inc
arpl
adc
sbb
dec
scas
(bad)
ror
xor
sbb
xor
push
int
push
ins
shr
dec
sub
lods
xchg
mov
arpl
outs
fwait
into
or
mov
push
cmps
jl
jmp
stos
test
jnp
(bad)
loope
fdivr
jg
in
mov
es
adc
pop
mov
adc
leave
push
mov
xor
push
out
addr16
mov
repz
jo
or
sub
and
pusha
xchg
adc
add
jl
dec
xchg
inc
inc
sub
dec
shl
or
je
mov
or
push
push
xor
jp
(bad)
stos
sti
and
sar
shr
inc
sub
(bad)
mov
ficom
xor
sub
cmp
imul
sub
pop
inc
scas
ss
outs
xor
push
xlat
or
in
rol
ds
call
nop
lock
inc
ret
mov
leave
stc
lods
paddd
movs
and
push
es
icebp
pop
fwait
bnd
mov
adc
lods
and
loop
lahf
das
fwait
xor
add
xchg
in
cmps
add
sub
ret
adc
jnp
imul
push
(bad)
lods
inc
xchg
inc
sbb
add
cmp
inc
xchg
sub
mov
mov
into
add
pop
fmul
xchg
inc
inc
cmp
dec
ins
and
movs
pushf
sbb
jo
sbb
shl
leave
inc
frstor
(bad)
rol
mov
adc
and
loopne
fild
push
cli
xchg
out
mov
clc
push
jb
je
int
int3
push
pop
in
and
add
aam
test
mov
pushf
and
rcr
mov
loop
dec
add
scas
lea
and
push
xchg
xchg
cmp
fs
imul
scas
daa
inc
rcl
mov
in
and
cs
inc
cmc
aam
cld
mov
adc
inc
neg
dec
lock
and
popa
inc
sub
mov
and
sub
pop
or
test
outs
test
add
jle
hlt
xchg
xchg
inc
adc
(bad)
std
(bad)
pushf
mov
xor
es
test
jl
clc
add
mov
ror
movs
(bad)
pop
mov
jns
or
or
fwait
or
out
scas
ja
mov
fdiv
(bad)
cmc
xor
push
mov
in
and
adc
(bad)
sbb
push
push
mov
(bad)
call
lahf
cwde
call
outs
(bad)
mov
(bad)
enter
ja
adc
ret
cdq
pop
cmps
shl
mov
push
test
jecxz
int3
in
sbb
mov
and
cwde
mov
call
dec
fwait
mov
daa
enter
or
or
cmp
cmc
push
sub
pop
fnstenv
xchg
shl
mov
add
push
mov
push
adc
pop
and
in
or
inc
dec
jecxz
and
and
xchg
loop
or
adc
mov
dec
dec
hlt
call
pop
adc
rcl
pop
mov
add
mov
aas
sub
xor
xchg
add
lea
mov
mov
add
jbe
leave
push
enter
sti
mov
lahf
xor
or
mov
pop
(bad)
cmp
mov
mov
fistp
jo
out
jecxz
add
xchg
lock
inc
push
int
sbb
es
pusha
lock
mov
pop
dec
or
mov
and
ret
jle
dec
xchg
push
in
cmps
sub
jmp
fistp
(bad)
mov
jo
mov
lods
shl
test
addr16
lahf
sar
scas
inc
push
mov
popa
inc
mov
sbb
xchg
push
jle
adc
xchg
mov
mov
xor
icebp
push
pop
popa
sub
mov
dec
mov
cmp
pop
xor
xchg
aad
ret
jp
jno
sbb
or
movs
std
cmp
cmp
dec
ror
xor
sbb
stc
cmp
aas
(bad)
jne
pop
hlt
mov
cmps
fidivr
adc
or
mov
mov
push
dec
loope
fbstp
repnz
shr
call
call
xchg
xchg
or
and
lods
in
dec
stos
loop
mov
adc
pop
or
arpl
fs
test
pop
daa
sahf
test
mov
loope
xchg
sub
sub
jo
addr16
lock
jae
jb
inc
adc
pop
sub
inc
adc
cld
push
pop
adc
les
push
sbb
xor
mov
fst
aaa
adc
loop
mov
pop
sti
inc
sub
sti
(bad)
add
cmp
cmc
push
inc
mov
(bad)
jmp
jp
push
inc
std
fdiv
add
add
dec
retf
adc
add
shr
outs
push
das
add
icebp
sahf
sbb
nop
test
mov
pusha
push
cmp
xchg
mov
repnz
out
xchg
lods
retf
inc
pop
add
sub
repz
add
add
pop
fadd
int3
clc
ss
repnz
les
cmp
mov
gs
imul
pop
outs
das
xlat
js
in
aam
ins
jb
outs
jecxz
or
xchg
or
pop
call
es
aaa
mov
cmp
cld
(bad)
mov
lods
(bad)
js
cmp
push
jae
jo
xor
or
bound
fild
push
out
(bad)
mul
cwde
xchg
or
mov
sub
add
push
sbb
mov
mov
in
cli
push
arpl
mov
and
shl
movs
fidiv
pop
mov
push
clc
lahf
mov
push
ret
pop
repnz
cmp
pop
xor
test
rol
pop
rcl
daa
jbe
add
mov
sub
stc
es
bnd
inc
mov
sub
xchg
mov
mov
outs
cli
dec
xor
nop
outs
pop
fstp
dec
and
dec
js
inc
ret
jns
or
jnp
dec
(bad)
and
jb
dec
mov
adc
imul
retf
push
mov
aaa
ins
pop
cdq
adc
adc
pushf
adc
jae
mov
sti
bound
hlt
in
std
jae
pop
mov
sub
clc
cmp
cmp
jmp
loop
push
loop
stc
fiadd
add
inc
add
fxch
jb
and
jns
cdq
aam
xor
(bad)
lock
mov
ror
mov
cmp
mov
loopne
je
pop
mov
dec
sub
dec
inc
out
bound
or
lods
or
push
inc
inc
(bad)
xor
push
popf
das
jle
dec
call
fstp
jae
fimul
jns
push
fdivr
jl
sub
(bad)
xor
xchg
xchg
add
pop
fild
xor
xor
mov
(bad)
push
pop
scas
retf
mov
sub
xchg
scas
icebp
or
dec
push
mov
test
push
out
test
out
shr
or
fwait
mov
pop
cwde
popf
dec
mov
mov
pop
iret
dec
and
mov
xor
push
jmp
sti
call
cmp
jge
and
fwait
sbb
jno
nop
xlat
cs
adc
xchg
cli
add
adc
stos
dec
pminsw
aam
in
scas
cmc
test
xor
inc
pop
jb
add
outs
fidivr
jbe
sti
dec
sbb
jnp
push
div
inc
scas
add
inc
sub
push
jno
mov
jge
mov
ficomp
cmp
fwait
into
in
adc
xchg
cmps
ja
rol
xchg
sbb
stos
mov
daa
mov
mov
fadd
(bad)
fstp
fwait
lahf
ret
and
lods
imul
dec
xchg
jb
jge
push
div
lea
jg
pop
cmp
xor
push
cdq
call
mov
mov
cs
std
gs
retf
or
mov
fwait
test
or
inc
in
enter
sbb
loopne
push
jle
xchg
xchg
aaa
add
or
into
or
fistp
pop
faddp
jne
adc
fst
adc
data16
gs
outs
and
mov
lods
mov
call
sbb
push
sub
jecxz
push
aaa
cmc
daa
nop
daa
jns
jmp
dec
jecxz
cmp
xchg
fmul
push
repnz
mov
mov
jg
inc
in
shl
dec
imul
or
cmc
scas
loope
imul
sar
push
into
cmp
push
dec
mov
popa
je
inc
pushf
jge
cmp
in
aad
and
push
ins
aam
lahf
fild
mov
inc
outs
xchg
ret
lock
push
pushf
and
jns
loope
ja
hlt
int
hlt
lock
imul
mov
fnstsw
xor
and
mov
cmp
jbe
fucomip
shr
test
mov
inc
outs
fwait
add
add
mov
nop
cmps
dec
aas
push
add
jae
xchg
ficomp
lahf
lods
jl
movs
add
and
mov
inc
idiv
daa
or
and
cmp
add
cwde
xchg
fnstsw
and
mov
clc
push
int
(bad)
dec
mov
scas
jmp
lods
inc
jge
movs
jmp
outs
push
outs
jecxz
les
aaa
call
or
jae
cmp
lods
xor
fwait
mov
fsub
push
lock
jnp
inc
data16
int3
or
pop
fistp
fxch
aam
lods
repnz
cdq
(bad)
pop
fist
add
mov
je
sub
xlat
aaa
call
aad
loopne
sub
mov
or
ss
scas
popa
and
cmp
push
sbb
mov
aaa
sbb
out
gs
movs
sub
sar
cmps
fsub
stos
not
lahf
stos
inc
add
aad
inc
in
mov
xor
xor
dec
fnstenv
lods
inc
cld
rol
cs
jl
jmp
int3
fld
inc
lods
adc
mov
jnp
or
rcl
aas
pop
push
mov
cmps
push
sbb
stos
loop
retf
mov
lods
imul
ret
cdq
sbb
outs
add
or
sahf
push
pop
stos
repz
inc
(bad)
or
scas
add
in
das
add
fidivr
daa
xor
js
and
lods
xor
call
xchg
call
or
pop
push
xor
js
jg
mov
aas
and
iret
fs
or
icebp
mov
pusha
icebp
gs
ds
es
push
sbb
mov
repnz
out
jp
or
shr
dec
adc
call
popa
xor
gs
pop
rcl
xor
cmp
xor
mov
dec
push
mov
sbb
xor
and
xchg
cli
mov
lods
add
cmp
jbe
imul
sbb
push
push
dec
lods
cld
jnp
add
test
mov
jnp
mov
xor
adc
call
push
cmp
sti
ja
cmps
pop
pop
mov
leave
sub
fwait
jmp
push
test
adc
fistp
sbb
xlat
dec
pop
aad
xor
ret
int
mov
xchg
inc
scas
sub
out
xchg
ins
in
pop
test
jecxz
sti
push
and
ins
jae
xor
int3
aad
mov
sbb
lock
xchg
icebp
sub
cmp
into
dec
xchg
push
sbb
lods
jp
adc
adc
inc
or
test
inc
stos
lods
sbb
fmulp
or
cli
(bad)
push
aam
adc
loopne
call
repz
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
or
add
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
or
push
aas
ror
scas
pop
mov
es
rol
pop
mov
jno
adc
dec
and
inc
xchg
mov
cmp
in
adc
dec
mov
jb
push
pushf
retf
pop
(bad)
das
test
int3
mov
das
sub
shl
push
sbb
dec
pop
cmp
(bad)
fs
and
lods
push
fwait
xlat
idiv
cmps
sub
push
xor
jmp
mov
psrlw
cmp
fldcw
fmul
add
ficom
fwait
je
movs
xchg
out
out
sub
test
xor
push
push
sahf
push
jb
mov
or
sub
push
push
inc
mov
scas
fld
inc
cmp
ds
jp
in
test
xchg
jl
jmp
(bad)
dec
arpl
(bad)
jae
mov
or
or
movs
js
fnstcw
inc
jge
cli
sub
iret
and
div
xor
jmp
dec
arpl
xchg
iret
adc
loopne
mov
ret
mov
pop
and
aaa
xchg
and
adc
xchg
add
aas
fs
and
and
mov
and
gs
scas
lahf
sbb
call
sub
or
mov
push
div
out
xchg
pop
or
test
push
(bad)
sbb
jo
dec
mov
mov
in
push
xchg
inc
jmp
ss
push
outs
rcl
cs
call
mov
and
pop
sbb
dec
pusha
and
enter
push
push
movs
stos
or
je
mov
sub
aas
shr
lods
mov
inc
mov
sbb
cmps
pop
(bad)
xchg
jge
sbb
retf
fldcw
pop
cmp
adc
stc
in
mov
adc
fidiv
mov
mov
xor
jb
loope
leave
lods
(bad)
jbe
lock
iret
xchg
arpl
push
sbb
lock
sub
push
(bad)
and
adc
cmp
into
push
mov
mov
mov
and
dec
shl
push
mov
pop
das
cli
add
pushf
ret
(bad)
mov
test
jo
ds
nop
xor
sub
xchg
fwait
sbb
(bad)
push
ret
jp
ins
(bad)
push
bnd
mov
cs
lahf
fisttp
cmps
test
mov
mov
mov
(bad)
push
mov
out
lahf
stos
jge
jp
(bad)
jg
cld
ins
ret
ficom
and
test
jmp
fimul
out
in
push
jp
data16
dec
out
mov
lahf
pop
push
loope
lds
sub
jmp
inc
pop
movmskps
mov
jl
push
scas
xchg
mov
adc
int3
xchg
sbb
xchg
aam
xchg
mov
outs
push
pop
xchg
cmp
mov
jp
out
shl
sub
push
add
sbb
inc
mov
xor
pop
xchg
div
mov
adc
mov
push
fst
outs
jecxz
jnp
fsubr
movs
cmp
ds
adc
push
sbb
pop
or
and
lods
cwde
dec
jp
sub
push
sub
adc
cld
sti
in
jl
mov
xchg
pusha
lods
gs
les
jno
(bad)
(bad)
cmc
call
fistp
daa
cmp
aam
mov
cmp
xor
(bad)
test
mov
mov
and
out
xor
jo
inc
xchg
and
cli
es
xchg
pushf
(bad)
fidiv
xchg
xor
in
dec
xchg
sbb
imul
add
cmps
sbb
mov
sub
cli
out
xor
iret
push
xchg
fs
repz
out
mov
mov
xchg
or
int
mov
movs
cmp
out
adc
clc
pop
retf
mov
xor
pushf
dec
call
icebp
retf
push
shr
shr
test
jmp
jmp
icebp
pushf
nop
mov
popf
xchg
loop
js
lock
cdq
pop
test
xlat
dec
call
aas
cdq
xor
cdq
xchg
mov
add
loop
pop
and
repz
mov
xlat
add
popa
cmps
dec
push
(bad)
into
cmp
or
int3
rcr
jb
xchg
jl
imul
jle
out
cwde
adc
adc
xchg
and
and
lock
and
adc
mov
movs
popa
jno
mul
pop
fwait
ret
cmp
mov
dec
add
je
jmp
rol
adc
cmp
es
ror
(bad)
clc
jg
ds
es
jge
xchg
loop
addr16
fsubp
adc
data16
mov
adc
int
mov
lods
jle
jns
add
mov
jmp
sbb
mov
movs
shl
lods
inc
idiv
push
lock
retf
cmp
mov
cmp
xchg
sub
cmc
lock
adc
fild
mov
mov
cld
sbb
js
xor
js
fild
ds
in
fsub
inc
dec
dec
(bad)
mov
sti
pop
imul
ins
cmp
pop
mov
sbb
das
inc
pop
mov
movs
loope
dec
js
xchg
adc
mov
xchg
sub
daa
(bad)
popa
ret
adc
scas
es
mov
push
inc
fiadd
loopne
push
aad
ins
out
cmp
loopne
loopne
popf
lods
push
mov
mov
ja
push
adc
push
mov
fistp
sbb
test
aaa
enter
adc
xor
xchg
fild
ret
mov
int3
loope
in
(bad)
sub
movs
(bad)
mov
int
push
sbb
push
in
pop
dec
ss
push
imul
xor
aas
addr16
rol
mov
jle
cdq
jg
leave
fst
cld
loop
sbb
rcr
mov
aaa
jbe
addr16
fadd
sbb
fwait
call
push
dec
mov
jno
xchg
sbb
pusha
je
aas
cmps
(bad)
pop
xor
dec
cld
jns
(bad)
lock
mov
leave
loop
push
cmps
cdq
xchg
hlt
xchg
faddp
ins
sub
sbb
aas
cmp
dec
inc
pop
fstp
xor
jbe
jp
imul
aam
xor
push
pop
sub
mov
fisttp
mov
jbe
jne
scas
mov
aas
pop
mov
cdq
sbb
mov
adc
add
test
fdiv
pop
mov
mov
jecxz
inc
out
sub
addr16
fdivp
inc
scas
sub
mov
xor
lods
mov
mov
adc
daa
in
dec
retf
lods
sub
xchg
fisubr
jmp
call
int3
add
(bad)
sbb
mov
mov
cmp
arpl
mov
jl
(bad)
cmps
push
jmp
push
out
jo
push
cmp
push
cld
clc
adc
test
icebp
xchg
add
imul
leave
inc
mov
out
mov
mov
lods
pop
outs
fidiv
cli
push
sar
push
xchg
pop
leave
sti
xor
pop
jmp
xchg
sub
cmc
das
mov
neg
or
push
mov
idiv
xchg
or
add
and
xchg
out
jo
xor
mov
mov
nop
mov
aad
mov
aas
jb
push
je
iret
jb
imul
pop
dec
and
sahf
sbb
cwde
(bad)
mov
jne
jecxz
pop
push
adc
shl
jge
cmp
inc
stos
test
mov
outs
push
leave
sar
mov
cmp
dec
lock
ret
dec
push
int
arpl
push
pop
cmp
sub
or
std
sbb
jmp
repnz
xlat
mov
scas
mov
dec
cmp
xchg
jge
add
in
xor
cs
sub
push
mov
mov
jae
dec
sbb
xchg
bound
sub
mov
pop
sbb
or
ss
ins
neg
dec
cdq
lods
into
or
nop
int3
xor
dec
ds
xor
ret
dec
push
mov
and
retf
je
fs
ret
rcl
push
hlt
and
or
test
aaa
xchg
movs
mov
retf
js
out
cld
shr
sbb
dec
pop
cmp
xlat
mov
cmp
sub
add
add
call
hlt
pop
mov
or
outs
pop
or
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
mov
add
mov
lods
test
sahf
shl
lahf
ss
add
mov
sub
enter
imul
adc
inc
and
sbb
or
cmp
fdivp
sub
lds
inc
out
xchg
push
pop
mov
int
cmc
or
sub
mov
sub
retf
jmp
and
es
xor
imul
mov
aam
inc
push
bound
jns
xchg
repz
lods
push
adc
sbb
push
fiadd
fwait
popa
popa
add
out
pushf
mov
scas
push
(bad)
into
ins
and
mov
ja
loope
jns
pop
or
cmp
popf
mov
mov
pop
inc
add
dec
mov
inc
push
mov
push
push
jge
jecxz
imul
gs
not
movaps
xchg
dec
movs
test
dec
dec
out
data16
fdiv
in
daa
add
cmps
outs
ja
jge
in
sub
retw
jbe
ins
mov
push
jns
addr16
dec
and
aaa
rcl
sub
add
lock
fild
in
xchg
sbb
dec
and
sub
repnz
loopne
or
jecxz
fisttp
repz
inc
mulps
sbb
mov
add
bound
gs
gs
jne
loope
leave
inc
push
sub
rol
in
call
cmp
pop
mov
cmp
dec
add
dec
cmp
inc
mov
call
or
stos
(bad)
lahf
loop
xor
jnp
fsubr
inc
rcl
aad
in
retf
sub
fs
pop
test
(bad)
jle
fs
int3
sbb
push
xor
popf
cmp
inc
mov
int
iret
mov
mov
xlat
popa
cmc
jmp
push
inc
(bad)
lahf
cmp
out
mov
ret
nop
leave
out
xor
pop
add
or
outs
fist
jmp
rcl
adc
mov
push
mov
sub
add
pop
dec
clc
repnz
frstor
das
mov
cwde
call
test
push
aad
xchg
enter
jo
jg
push
sbb
mov
lock
imul
cmp
rcr
push
cmps
push
adc
mov
nop
mov
sub
cmp
cmp
test
sahf
sub
bound
push
jmp
in
(bad)
je
sbb
cmp
xchg
es
and
arpl
or
adc
xchg
cmps
xor
sub
xlat
sub
push
jg
push
in
movs
xchg
xchg
push
aas
fsubrp
or
leave
or
sbb
ret
in
add
or
or
ret
xor
pop
movs
sub
jmp
aas
mov
movs
and
hlt
mov
daa
or
lods
dec
imul
lods
mov
pop
(bad)
in
push
sahf
lods
outs
or
and
xchg
jmp
rol
jmp
sbb
and
or
xor
mov
push
les
gs
sub
retf
dec
dec
imul
rol
les
scas
(bad)
aas
mov
adc
sar
inc
add
pushf
fadd
stos
pop
sub
loopne
mov
clc
inc
fld
or
inc
pop
ficomp
scas
(bad)
jo
pop
repz
pop
sub
mov
add
add
pop
jle
add
mov
adc
and
fadd
sub
test
pushf
stos
cmp
sbb
xor
pop
push
imul
dec
cmc
cmps
sbb
sbb
out
push
mov
gs
lock
mov
mov
mov
aas
xor
in
jl
icebp
inc
ss
mov
aam
sbb
xchg
movs
punpckhwd
xor
pushf
mov
(bad)
adc
mov
dec
mov
int3
pop
fldcw
xor
dec
inc
dec
push
jmp
add
xor
sbb
sub
icebp
ds
in
add
xchg
push
cld
cmp
add
in
mov
shl
jp
call
aad
pop
mov
outs
mov
cli
push
das
in
pushf
sub
int
sbb
clc
gs
xchg
pop
stos
repz
cmp
jo
call
mov
push
fisttp
cmp
rcl
mov
and
aas
scas
daa
les
mov
or
or
pop
cmp
cmp
outs
and
rcr
movs
lods
ja
xchg
mov
jl
xchg
sub
popa
sahf
push
rcr
cmp
xchg
movs
or
sub
adc
inc
cmp
out
mov
push
add
dec
mov
add
fsub
push
push
and
lods
scas
outs
repnz
cmc
cmp
xchg
out
cmp
add
cmp
mov
adc
das
out
xor
jb
out
inc
sub
es
add
call
inc
aam
nop
fwait
aas
xchg
lods
imul
xlat
stc
mov
ret
xchg
aas
mov
rcr
adc
xor
or
sbb
xchg
into
adc
dec
aaa
out
mov
mov
ins
jmp
push
pop
mov
fdivr
xchg
sub
xor
rcr
inc
sub
sub
or
push
and
jae
out
pop
xchg
aad
xchg
jle
fldcw
adc
out
xchg
sbb
or
push
mov
xchg
leave
add
inc
fisttp
jns
(bad)
cdq
retf
int
ror
mov
jne
cdq
sbb
std
popf
xchg
ret
(bad)
dec
sbb
aam
test
xor
in
inc
imul
cli
les
test
or
clc
push
dec
xchg
jne
adc
sbb
jge
sahf
movs
fbstp
mov
mov
in
stos
loopne
stos
(bad)
add
cmp
adc
(bad)
out
cld
mov
xlat
push
mov
or
add
jns
rol
inc
cld
push
xlat
mov
inc
xor
loope
clc
adc
adc
ins
xchg
loope
jno
pop
jae
push
dec
iret
pop
add
mov
push
jmp
sbb
mov
nop
dec
mov
(bad)
aad
int3
and
push
(bad)
lods
jg
(bad)
ja
ja
push
mov
fimul
mov
push
movs
fptan
add
jp
rcl
int
jae
push
fist
xchg
jmp
pushf
add
jle
push
fwait
ds
call
jl
imul
dec
sbb
(bad)
adc
jg
inc
or
mov
outs
(bad)
jge
and
es
xchg
or
add
bound
fistp
fwait
cmp
xchg
dec
cs
outs
leave
jecxz
xchg
ds
cdq
jmp
scas
gs
sti
mov
ret
das
cmp
stc
jge
repz
sub
sar
aad
or
mov
into
jecxz
mov
mov
movs
jbe
fidivr
xchg
adc
aas
movs
sti
mov
jbe
sahf
add
jno
cmps
lock
ins
gs
int
pushf
jp
les
(bad)
xlat
repz
popa
bound
push
push
pop
call
icebp
scas
mov
enter
pop
mov
rcl
fild
test
mov
repz
call
in
ds
jmp
dec
cmps
sbb
jg
push
mov
or
sub
or
sti
es
pushf
or
aad
add
(bad)
sub
out
xor
call
bound
inc
out
ss
or
xchg
inc
pop
in
and
push
jae
inc
mov
sar
aad
fiadd
xchg
mov
cmp
aaa
cs
push
cmp
ret
xor
rcr
(bad)
out
sar
jp
shl
adc
xchg
pop
mov
sub
sub
not
out
out
pop
push
inc
(bad)
call
fstp
imul
mov
push
push
cmp
jae
ins
add
fcomp
mov
cmp
test
dec
es
gs
fld
fiadd
into
jne
cmp
shl
sbb
cld
mov
fwait
mov
ds
ins
ret
mov
icebp
ss
les
inc
push
mov
jl
sub
icebp
call
scas
jge
in
cdq
in
xchg
mov
fabs
fcomp
ja
scas
jmp
test
loope
pop
inc
clc
xchg
rcl
adc
dec
lods
xor
movs
xchg
push
mov
dec
dec
bound
pop
inc
fwait
jne
push
sub
loop
stos
xchg
dec
fwait
in
sbb
in
in
nop
mov
or
out
adc
mov
pop
call
mov
add
lock
faddp
jno
push
je
mov
jle
sbb
push
and
test
out
lea
test
imul
(bad)
push
into
in
and
cli
mov
add
mov
push
outs
sti
mov
xor
sbb
lds
lea
inc
pop
and
dec
dec
push
push
jnp
test
cmp
ret
cmp
sbb
inc
lods
mov
sub
dec
push
test
test
jb
fiadd
out
add
dec
cmc
(bad)
xchg
push
clc
mov
iret
leave
stos
and
pusha
sub
gs
inc
int3
inc
jno
mov
inc
imul
mov
mov
fwait
sub
loope
jmp
mov
adc
inc
cmps
movs
es
das
xchg
retf
jne
jns
test
dec
std
mov
mov
sub
and
sub
nop
test
xchg
out
add
lock
mov
ja
sub
lods
test
fdivr
retf
mov
ret
call
add
shl
lds
shl
(bad)
sar
jp
and
jl
pop
imul
add
mov
out
pop
and
xor
(bad)
std
inc
cmp
mov
lock
mov
movs
xor
das
mov
repnz
jns
jo
sub
add
add
sbb
jne
out
cmp
add
into
int3
stos
or
xor
push
test
rcl
xor
or
xor
aad
daa
or
mov
push
mov
pushf
sub
pop
or
jne
popa
inc
fdivr
int
pop
add
inc
push
lods
out
mov
push
fnstcw
pop
sbb
nop
js
sahf
xor
sub
inc
jne
mov
pop
sbb
test
add
ficomp
cmps
ja
add
xor
ds
push
loop
stos
aad
bound
and
adc
loope
adc
fs
ss
out
leave
add
loop
and
mov
lock
ds
mov
mov
and
int3
cmps
mov
pop
mov
or
push
loopne
sub
xor
out
test
jmp
fwait
inc
(bad)
clc
or
jns
iret
mov
lods
dec
dec
and
push
cmp
test
inc
sub
inc
bound
ds
push
mov
jne
aas
inc
dec
sub
mov
(bad)
loope
xor
inc
mov
xchg
dec
std
aad
mov
(bad)
mov
stos
cmp
mov
(bad)
lds
xchg
xchg
inc
cmc
popa
dec
mov
xchg
add
retf
push
mov
movs
ins
cmp
jns
push
enter
jg
add
pop
push
add
add
add
jno
daa
sub
mov
add
xchg
jae
xor
das
sahf
cld
mov
fsubr
and
mov
pushf
dec
adc
mov
push
cmp
cmps
pop
std
xchg
sub
lock
push
mov
loop
and
cmp
pusha
cs
sbb
or
xchg
out
and
cmp
dec
stos
cmps
repnz
test
mov
mov
mov
fisubr
test
adc
loopne
loope
retf
jb
test
add
icebp
and
xchg
xchg
lock
pop
lock
fcomi
fdiv
gs
in
cwde
movs
jo
fucomip
dec
loopne
xchg
inc
push
(bad)
daa
mov
in
dec
imul
mov
xchg
daa
lods
and
rcl
imul
scas
jmp
and
loope
cmp
outs
mov
test
sub
mov
mov
dec
nop
mov
addr16
jo
enter
dec
mov
sub
iret
cmp
pusha
or
fwait
push
sahf
hlt
inc
inc
fisttp
nop
cs
in
pop
retf
mov
or
test
daa
popa
jb
shl
call
fdiv
repnz
sub
jmp
in
sub
mov
cs
stos
xsavec
adc
aam
lods
cmp
mov
dec
in
stos
add
not
out
jmp
data16
inc
shl
sbb
jmp
add
ror
(bad)
fimul
in
push
xchg
arpl
sub
xor
cmp
sahf
mov
in
sbb
jecxz
or
xchg
lods
hlt
sub
es
movs
lods
in
fsubr
idiv
shl
iret
sub
int3
movs
cmc
loope
mov
gs
test
cli
aam
fwait
repz
mov
sbb
sbb
nop
es
xchg
lock
xor
aas
pop
cmp
adc
cmp
popa
add
loop
adc
sbb
movs
push
std
outs
retf
fnstcw
ror
pop
jge
ret
inc
fldcw
int3
rol
ficom
scas
cwde
push
jp
(bad)
ins
pusha
push
bnd
jp
dec
out
xchg
pop
mov
outs
lahf
push
mov
mov
ds
xor
cs
lock
outs
pop
jp
cmp
pop
dec
bound
lock
inc
mov
mov
add
jns
outs
mov
xor
scas
mov
daa
mov
fadd
sub
add
or
mov
jp
mov
add
ins
mov
and
jl
jmp
(bad)
in
mov
push
pushf
xor
jne
xchg
gs
lock
push
cmp
inc
or
xchg
sbb
mov
sbb
or
and
icebp
retf
cmps
das
stos
loopne
xor
xor
jnp
(bad)
lock
out
mov
mov
push
fmul
daa
mov
pop
(bad)
sbb
mov
xchg
push
je
daa
iret
loop
dec
dec
rcl
fs
push
and
jno
pushf
arpl
scas
nop
sub
dec
outs
xchg
adc
xor
jne
iret
dec
jbe
dec
and
xor
xor
dec
add
mov
fst
pop
and
int3
push
push
mov
push
mov
pop
mov
(bad)
lds
mov
in
jl
sbb
int
sub
jl
ja
mov
ja
stos
pushf
jmp
popf
retf
xchg
pusha
sub
test
mov
xchg
clc
push
pop
fs
sub
(bad)
and
test
dec
dec
mov
push
xchg
pop
out
xchg
mov
jle
push
mov
adc
and
jbe
out
mov
fistp
mov
in
jmp
cmp
shr
jmp
test
push
push
add
pop
push
add
pop
adc
xor
popf
jno
outs
push
pop
addr16
mov
sub
and
mov
popa
retf
mov
xor
adc
shl
das
aas
jnp
push
xor
xor
call
mov
pop
aam
mul
xchg
xor
push
dec
xor
jmp
test
es
xchg
and
jl
sbb
aas
inc
xor
cmp
and
lock
push
mov
mov
in
in
mov
fwait
sbb
push
sub
jbe
pop
js
mov
adc
dec
mov
retf
xor
mov
adc
push
sub
push
aad
pop
adc
aam
lds
jmp
sub
xchg
sar
iret
push
pop
cmp
stos
and
adc
int
xchg
cmp
jecxz
int3
adc
mov
fcomp
shl
dec
sahf
leave
bound
lock
iret
pop
in
leave
xor
int3
sbb
inc
cmps
ins
cld
pushf
aas
sahf
test
shl
push
pushf
cmps
cmp
popf
jns
mov
sti
aaa
xchg
mov
lahf
mov
pop
push
push
jmp
shr
add
dec
sti
pop
mov
xor
adc
fdiv
fst
call
cmp
mov
sbb
sub
in
lds
cmp
push
jp
cdq
pushf
jmp
pop
scas
cwde
sbb
enter
repnz
jns
pop
pop
lock
imul
xor
add
jg
xchg
cld
aas
jne
cmp
mov
xchg
jge
jb
stc
clc
pop
inc
cwde
dec
mov
nop
imul
add
pop
lds
loop
arpl
mov
jl
ret
adc
lods
ror
imul
dec
sub
scas
(bad)
cmp
push
xor
or
fidiv
out
call
cmp
pop
(bad)
jp
std
and
das
or
jecxz
fsubr
int
dec
dec
pop
jae
std
inc
and
and
push
out
aad
mov
xor
dec
gs
out
add
mov
inc
push
or
add
outs
xor
mov
ins
fldcw
loopne
icebp
aad
and
cmp
shr
inc
int
test
inc
cli
pop
into
mov
pop
xor
rcl
xor
and
inc
pop
fwait
(bad)
pop
adc
xor
adc
ret
add
mov
add
xchg
cmps
xchg
xor
fiadd
mov
mov
test
or
imul
neg
mov
movs
movs
pop
es
and
lock
(bad)
add
mov
add
mov
xor
xchg
aam
pop
pop
loop
sub
xchg
add
adc
or
idiv
test
mov
rcl
mov
xor
repnz
lds
hlt
rcl
and
jl
pop
arpl
pop
inc
or
out
popf
js
movs
dec
sbb
in
pop
(bad)
fcom
jns
sbb
bound
dec
ins
sbb
scas
cmp
push
loope
arpl
dec
out
cld
xor
mov
xor
push
(bad)
shl
mov
push
jmp
adc
ins
add
mov
add
mov
mov
(bad)
sub
and
aam
cmp
xor
inc
push
les
ds
jmp
xor
add
rol
cld
cdq
xor
pop
sbb
rcl
sub
and
pop
lahf
jmp
in
fwait
pop
mov
out
les
sub
in
adc
and
cmp
lds
jbe
xor
xlat
dec
clc
js
mov
shl
int
jmp
dec
adc
pop
fnsave
mov
or
bound
ins
dec
or
stc
cmp
cmps
cmp
xchg
mov
cmp
leave
cmp
or
std
lods
lahf
jge
ss
les
ds
or
add
(bad)
repz
(bad)
push
or
shl
add
jno
iret
stos
call
fld
mov
cmp
loope
and
shr
pop
pop
dec
imul
inc
inc
iret
jp
sbb
cs
fcom
out
cmp
stos
or
int
shl
xor
add
(bad)
lds
repnz
ss
lods
(bad)
adc
icebp
cs
popa
dec
sub
or
lahf
div
fsub
jae
data16
retf
inc
pop
xchg
retf
jecxz
test
push
jne
mov
jge
movs
mov
les
icebp
xchg
mov
je
push
iret
aam
dec
js
push
pusha
das
adc
mov
sbb
pushf
pushf
loop
pop
in
dec
int
retf
(bad)
fild
loopne
and
sub
xchg
ss
adc
xor
add
push
xchg
xsaves
jp
jmp
ret
mov
dec
xor
xor
out
sbb
ds
in
mov
push
add
pop
shl
call
add
inc
in
outs
ins
sar
jns
outs
call
xchg
aaa
test
cmp
cld
arpl
adc
xchg
jl
jp
sbb
and
push
xor
dec
aas
inc
mov
push
cmp
jns
inc
lock
iret
fidiv
jmp
test
dec
mov
push
bound
bnd
int3
inc
clc
stc
mov
jbe
mov
pushf
mov
mov
jb
xchg
lds
push
rol
fild
pop
(bad)
mov
sbb
add
jmp
aaa
push
lds
sub
mov
mov
xchg
jp
dec
cmp
xor
aad
xchg
cmps
ror
fwait
call
ds
add
cmps
xchg
or
add
pop
in
movs
inc
inc
xchg
dec
out
es
and
mov
sahf
(bad)
push
lods
adc
aad
jmp
frstor
inc
int3
xor
hlt
sub
dec
shl
and
mov
mov
mov
add
fisubr
sahf
test
inc
retf
movs
ret
mov
ror
sbb
stc
mov
and
sub
dec
add
push
push
or
fisubr
jno
or
jae
je
stc
enter
and
repnz
pcmpgtd
xchg
or
mov
mov
mov
in
retf
jno
mov
jae
mov
out
and
jge
jns
adc
stos
(bad)
out
std
mul
stc
xchg
mov
lahf
jmp
call
dec
psrlw
(bad)
push
fild
idiv
out
loop
inc
push
jecxz
add
or
mov
jbe
add
add
scas
and
imul
rcl
sub
mov
mov
shl
stos
call
sbb
xchg
push
xchg
and
add
pop
or
sub
stos
pop
adc
or
sbb
cld
cdq
sub
pop
std
xor
movs
(bad)
jp
adc
cmp
add
sub
mov
jle
add
fdivr
mov
ins
aas
(bad)
and
jp
nop
mov
into
push
or
mov
xlat
adc
pop
fyl2xp1
ins
add
xchg
fiadd
and
popf
jmp
xchg
mov
ins
int
ret
out
int3
xor
(bad)
push
sbb
inc
outs
and
fstp
mov
sahf
and
fcomp
mov
(bad)
mov
(bad)
cmc
push
and
adc
push
jp
push
inc
jbe
stc
retf
shl
jnp
mov
adc
rcr
test
je
stos
push
jo
adc
stc
mov
movs
xchg
ret
jmp
pop
in
outs
inc
rol
cli
inc
inc
fwait
jmp
and
dec
stos
xchg
hlt
xchg
lods
imul
xor
jb
cmp
retf
cmc
sub
jmp
xor
adc
dec
mov
cmp
(bad)
add
rcl
push
icebp
mov
popf
jmp
adc
cmps
aas
cmps
loope
(bad)
in
inc
and
retf
ss
jae
enter
mov
fld
sbb
ror
jle
sbb
arpl
inc
in
push
in
test
lock
push
hlt
retf
nop
dec
daa
sti
fstp
pop
pop
jecxz
inc
std
cmp
pop
xchg
sbb
into
fldenv
sbb
push
movs
push
mov
fcmovb
in
jo
out
mov
mov
jo
and
xor
jo
loopne
xrelease
shr
or
cmps
push
mov
sub
fstp
fadd
cmps
pop
xchg
ss
jbe
fmul
(bad)
mov
stc
repnz
dec
mov
cmp
call
sbb
int3
mov
repz
lock
add
cdq
in
push
lock
ja
std
fwait
jnp
test
mov
pop
or
push
nop
fbld
pop
and
fs
xor
mov
jbe
retf
jo
mov
mov
(bad)
lock
ror
xchg
inc
aaa
fiadd
adc
pop
inc
movs
sub
jo
test
fistp
gs
inc
cmp
or
xor
dec
push
test
jno
dec
fwait
test
mov
xchg
dec
jbe
mov
xchg
xor
je
inc
push
jmp
mov
mov
add
cdq
cmps
pop
push
inc
lock
dec
call
int
add
pop
xchg
pop
and
xchg
or
dec
ins
je
loope
dec
push
ss
repnz
dec
call
jbe
nop
adc
push
(bad)
sub
loopne
pusha
bound
ret
into
xchg
or
sbb
mov
ret
les
fld
mov
xchg
sbb
cmps
in
push
mov
arpl
sbb
sbb
mov
xor
icebp
and
add
xor
xor
pmaxub
in
aad
fadd
mov
ror
adc
mov
shr
fadd
rol
ins
cmp
and
popa
pop
stos
jmp
int
pop
cmp
and
adc
leave
dec
popa
enter
mov
jne
push
jmp
pusha
fadd
scas
in
inc
xchg
shl
push
sbb
push
lock
jns
sbb
jae
rol
outs
inc
imul
out
inc
dec
pop
stos
daa
sbb
jne
cld
int3
fsubr
jle
sahf
cmps
mul
cmps
push
jno
stos
and
jbe
push
cmp
or
sub
mov
idiv
sub
aas
sub
call
dec
lea
cs
mov
push
pop
loope
adc
fs
push
add
add
sub
and
or
inc
cwde
jb
xor
test
sbb
pop
imul
jno
bound
loop
out
inc
add
cmps
jle
adc
add
push
xchg
xchg
sbb
cdq
repz
and
cmp
and
inc
enter
adc
(bad)
jno
push
inc
daa
stos
test
xor
cli
outs
ds
push
adc
mov
js
sbb
sub
loope
movs
xor
xchg
pop
(bad)
dec
push
ss
es
push
es
jno
pop
fstp
in
cmp
(bad)
xchg
movs
inc
scas
outs
ss
pop
or
nop
add
fldenv
mov
ret
std
in
clc
(bad)
aad
je
sub
sbb
sbb
sahf
add
lods
or
arpl
aam
das
test
sbb
jno
ss
stos
arpl
shl
xor
cld
xor
pop
rcr
aam
sahf
inc
inc
mov
mov
pop
mov
ins
mov
leave
call
fdivr
loope
or
mov
ret
and
or
pop
dec
shl
es
rcl
mov
sbb
cmp
pop
cmp
and
lea
add
xor
mov
push
push
jb
jns
adc
loope
hlt
xlat
lea
mov
push
lock
push
(bad)
sti
outs
pop
dec
mov
dec
xor
nop
inc
aas
lods
loopne
std
cli
lods
pop
ror
aaa
leave
stos
retf
jmp
out
add
sbb
push
pop
adc
jbe
push
xor
adc
fisub
mov
test
repz
cmp
xor
(bad)
cmp
call
xchg
in
not
shr
mov
inc
lahf
xchg
(bad)
jno
mov
mov
xchg
cmc
icebp
movs
mov
jmp
or
stos
fs
ja
not
jmp
inc
pop
fucom
dec
xlat
js
sti
scas
cmp
es
mov
enter
adc
into
add
(bad)
lds
mov
add
cmp
xor
or
mov
aad
jbe
xchg
mov
adc
test
xchg
shl
mov
jo
aad
mov
sub
mul
bound
push
jg
shl
push
outs
outs
cmp
arpl
sahf
ror
push
cmp
ins
mov
jbe
jnp
mov
int3
(bad)
sti
cmp
retf
fimul
mov
retf
(bad)
es
dec
cmp
inc
sub
and
inc
retf
jns
mov
adc
mov
and
sub
leave
or
shl
mov
sbb
dec
test
xor
idiv
push
mov
and
mov
xor
sub
jo
fs
loop
pop
neg
test
jnp
test
lods
fsubr
test
aaa
and
pop
sub
jle
xor
jmp
movs
push
enter
inc
adc
pop
jg
cli
pop
rol
pop
push
ja
ss
add
push
call
sub
cmc
pop
iret
daa
iret
scas
les
pop
add
jno
dec
rcl
(bad)
add
mov
aam
mov
in
xchg
jnp
push
jnp
ins
test
cmp
xchg
fild
fcmovnu
movs
retf
mov
and
(bad)
out
pop
xchg
cld
rcl
pusha
fdivr
icebp
xor
or
popa
test
mov
sub
sahf
sbb
mov
je
sub
adc
dec
mov
cld
mov
push
cwde
push
and
aaa
push
dec
jmp
std
mov
pop
mov
dec
push
movs
sub
jbe
(bad)
or
inc
sub
dec
pop
jb
mov
jae
or
in
mov
xor
stos
push
push
in
add
sbb
sub
loop
stos
loop
fs
repnz
push
stc
retf
idiv
jl
or
aam
add
int3
retf
sti
sub
xchg
or
sub
scas
into
add
cli
lods
jno
cdq
jle
sub
jp
int3
add
add
stos
or
in
sub
movs
int3
ror
pop
out
(bad)
aaa
xchg
or
jmp
cmp
mov
pop
icebp
sbb
jne
ficom
mov
retf
aad
sti
lea
xchg
pushf
je
cs
pop
sbb
pushf
sbb
pop
mov
nop
mov
in
xchg
inc
cli
and
jbe
push
mov
in
out
adc
xor
cmp
adc
ds
sbb
imul
jns
je
lea
jmp
mov
inc
ret
fmul
in
ins
pushf
push
in
jae
int3
lahf
test
je
add
dec
(bad)
cmps
xchg
add
sar
shl
imul
cli
and
sbb
enter
enter
dec
sar
lods
stos
xor
icebp
or
push
in
test
mov
and
xchg
xchg
mov
ins
cs
mov
jecxz
pop
or
hlt
pop
mov
js
add
dec
inc
shl
sar
push
push
xchg
imul
pop
pop
adc
or
pop
cmp
cmc
inc
adc
and
jp
test
hlt
loop
dec
(bad)
pop
cmp
sbb
aam
stc
push
out
out
inc
fld
clc
cmp
jp
cli
das
mov
lock
add
add
(bad)
and
add
pop
loope
inc
and
addr16
dec
jmp
out
adc
inc
jb
push
pusha
(bad)
imul
clc
jno
cmp
outs
xor
scas
lahf
ja
xor
push
add
mov
dec
not
js
addr16
dec
out
ins
scas
stos
jns
popa
or
add
jle
imul
(bad)
movs
js
cmp
sbb
xor
bound
add
cmp
jmp
fdiv
retf
xor
sbb
add
mov
mov
fist
imul
and
(bad)
mov
cmp
or
mov
xchg
mov
out
xor
repz
aaa
mov
in
iret
sbb
cld
sbb
mov
add
fucomip
ret
hlt
aam
scas
add
xchg
pop
ins
enter
aaa
xor
repz
sahf
out
push
jmp
mov
mov
jb
jg
pop
dec
cmc
in
(bad)
jno
mov
mov
cmc
fnstsw
xchg
mov
enter
cdq
inc
add
or
jp
lock
repnz
sahf
mov
rol
xchg
inc
data16
xor
out
cmp
movs
xor
push
retf
inc
ja
and
push
push
stc
(bad)
sub
jns
adc
pcmpeqd
jmp
xchg
jecxz
or
xor
int
and
shl
outs
retf
xor
add
dec
fs
retf
movs
repz
jge
jle
cmp
call
jmp
mov
push
mov
dec
clc
adc
data16
mov
icebp
(bad)
retf
retf
mov
cmp
push
stc
cmp
or
ret
retf
cmp
aam
mov
jecxz
pop
or
fild
shl
pop
(bad)
in
fidiv
mov
(bad)
push
inc
out
rcl
cmp
add
lock
jnp
inc
mov
(bad)
pop
out
ret
sbb
inc
retf
loop
test
mov
inc
rol
or
sbb
sub
repz
push
mov
jnp
cld
aad
and
scas
adc
stos
cdq
mov
pop
popf
mov
adc
ss
mov
pop
pop
xchg
lds
add
sbb
dec
pushf
repz
iret
fsubr
add
cmp
xor
jle
mov
aad
pop
jmp
push
scas
push
clc
jb
mul
movs
sub
fild
push
push
xchg
movs
sub
mov
test
or
cdq
mov
in
movs
mov
add
aam
fs
sub
(bad)
aaa
mov
imul
sbb
test
out
push
and
(bad)
pop
icebp
aam
push
mov
add
mov
adc
sbb
call
mov
push
das
push
mov
(bad)
jae
es
pop
dec
ror
fwait
jbe
cmp
imul
call
nop
sbb
jmp
pusha
out
cs
or
mov
push
sub
and
push
mov
bound
mov
clc
xchg
mov
ret
xor
cmp
jbe
adc
or
add
sub
lea
dec
pop
or
adc
mov
cmp
repnz
mov
bound
add
imul
inc
mov
cmp
je
pop
pop
push
mov
mov
inc
test
rcr
sub
std
lsl
lahf
mov
das
inc
push
sar
xchg
or
inc
test
sbb
shr
cmp
jmp
mov
sub
mov
mov
cmp
inc
dec
mov
outs
dec
sub
mov
adc
sub
pop
or
adc
dec
mov
xchg
inc
movs
cmp
repnz
pop
and
movs
pop
cmp
add
jmp
loope
je
test
test
pushf
mov
mov
mov
fst
xor
cmp
nop
outs
stos
jmp
rcl
mov
dec
shl
mov
int
iret
mov
ret
push
addr16
push
loopne
das
fsub
in
(bad)
mov
test
dec
outs
call
xchg
test
out
xchg
xchg
inc
lods
or
pop
out
mov
(bad)
movs
aam
adc
mov
in
jo
fstp
(bad)
pop
add
call
sub
add
jle
das
pop
les
mov
lea
int
pop
cmp
cdq
push
cmps
test
xchg
jp
or
add
sbb
sub
pop
repnz
gs
add
arpl
lods
jbe
inc
fldcw
fimul
loopne
es
mov
jns
push
push
push
xchg
sub
mov
mov
es
outs
xor
jne
pusha
or
(bad)
xchg
ror
aad
xchg
js
int3
jle
fdiv
out
lea
das
in
cli
jg
gs
cld
dec
sbb
pusha
cmp
imul
or
shr
jle
(bad)
pop
in
mov
jmp
or
cmp
xor
sub
cdq
or
sub
pop
add
inc
sub
retf
push
jecxz
jg
pop
xchg
push
sub
mov
xor
fidivr
and
dec
dec
imul
push
xchg
shr
mov
add
pop
xor
push
and
xchg
push
jmp
inc
iret
xor
out
adc
cmp
cmp
xchg
mov
pop
add
mov
ss
fwait
jb
cmc
bound
mov
nop
lods
call
lods
das
inc
inc
push
xchg
mov
or
cs
inc
or
mov
ror
adc
stc
lods
push
add
jns
stc
mov
push
pop
add
mov
push
sbb
cld
fld
imul
pop
add
fild
ficom
add
jge
je
nop
retf
call
jge
lods
leave
lahf
outs
movs
add
mov
or
out
ret
mov
cld
lea
push
jnp
shr
xor
sub
(bad)
jb
popa
test
or
cmp
cmp
cld
fldcw
add
es
push
jb
adc
movs
cmp
jmp
je
dec
and
jecxz
or
xor
or
xchg
push
and
dec
sub
dec
clc
imul
movs
fwait
pushf
ror
out
icebp
xor
push
test
(bad)
rcl
dec
sbb
mov
add
and
jo
or
mov
or
xor
mov
rcl
pop
enter
cmp
xchg
mov
das
push
inc
push
vpavgw
or
add
pop
cmp
mov
fidivr
(bad)
ret
jno
nop
dec
dec
movs
sub
nop
call
cdq
or
jno
and
not
mov
in
adc
pushf
rcl
xor
sbb
or
fisttp
sar
pminub
or
sbb
and
dec
in
ret
out
int3
rol
fbstp
add
adc
push
test
add
sbb
mov
int
jo
fsubrp
scas
sbb
cwde
xchg
add
cmp
cmp
mov
retf
mov
enter
dec
push
or
aaa
scas
test
in
aaa
nop
call
imul
pop
mov
jmp
test
stos
xchg
pop
(bad)
iret
or
sub
out
and
add
inc
aas
fnstcw
test
push
add
into
jns
retf
ror
fidivr
lahf
scas
sbb
or
inc
(bad)
pushf
clc
push
dec
retf
aam
shl
mov
(bad)
cld
call
leave
call
xchg
xchg
inc
add
mov
scas
jecxz
ret
sbb
fld
outs
sbb
cmps
or
rol
xchg
dec
mov
fadd
(bad)
gs
lock
into
add
retf
daa
lock
fyl2xp1
xchg
cmp
in
lahf
cmp
inc
pop
stos
(bad)
and
stos
lods
mov
mov
jno
lods
popa
ror
loopne
inc
or
mov
cmp
pushf
inc
scas
das
inc
push
mov
loopne
shl
xchg
sti
loope
xor
pusha
stos
dec
mov
nop
aaa
int
xchg
fimul
addr16
cmp
aaa
sahf
pop
outs
out
rcl
cwde
pop
xlat
je
test
shr
pushf
iret
hlt
adc
adc
jne
fist
sbb
mov
push
mov
and
inc
cmps
or
cwde
(bad)
or
xchg
lods
xor
lods
or
out
fistp
test
pop
pop
mov
pusha
pop
fucomip
ret
outs
xchg
push
xor
push
clc
enter
cmps
cmp
jne
or
or
shl
dec
and
jbe
sti
xchg
mov
push
or
xchg
iret
pop
add
dec
and
cdq
push
xchg
neg
mov
pop
add
adc
and
push
xchg
es
xor
mov
adc
push
mov
dec
fcomp
and
shl
xor
imul
fsubr
iret
or
lods
jecxz
ret
inc
mov
cmp
xchg
pop
cwde
in
adc
dec
jp
xchg
mov
pop
xchg
fsub
push
cs
mov
cmp
mov
add
fsubr
jns
add
repz
mov
mov
mov
push
add
pushf
popf
retf
in
gs
retf
int3
jmp
mov
inc
stos
and
xor
mov
or
inc
les
into
(bad)
push
mov
pop
loop
pop
in
pop
sbb
inc
ret
jnp
inc
add
call
ins
xchg
aaa
mov
clc
xor
leave
or
lahf
mov
sbb
jae
add
es
pop
ja
sbb
in
inc
jae
pop
inc
xor
jnp
retfw
leave
xchg
clc
clc
inc
ds
out
sbb
cld
and
out
xchg
or
push
mov
and
xor
sub
jno
add
jmp
dec
push
ret
xchg
jp
outs
xor
inc
pop
mov
sahf
cdq
popa
push
retf
dec
mov
hlt
pushf
mov
sar
jmp
fucomi
mov
xchg
mov
xlat
dec
push
dec
dec
pop
leave
fld
jnp
cmp
rcl
and
cmp
and
inc
in
stos
jne
mov
or
lahf
jmp
and
sbb
je
mov
jae
test
add
pop
sub
into
lea
pop
lahf
imul
fxch
adc
mov
ds
lea
dec
push
mov
mov
outs
sahf
mov
mov
pop
mov
leave
mov
and
push
and
aam
aam
sub
lea
fldcw
dec
js
neg
mov
mov
out
jge
adc
ins
gs
push
sub
stos
or
icebp
push
or
cld
mul
xchg
sbb
dec
xchg
sub
add
mov
call
outs
xor
pop
push
pushf
sbb
call
jl
inc
(bad)
std
sbb
(bad)
add
xchg
ins
push
and
jmp
push
mov
adc
mov
xchg
nop
je
xchg
pop
loop
lea
icebp
data16
out
std
or
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
cmp
mov
vhaddps
stos
outs
idiv
push
or
cmps
or
cwde
loopne
mov
popf
repnz
es
jb
lods
fcomp
dec
mov
int
les
jmp
mov
das
loop
sub
lock
xor
mov
dec
jg
xchg
fisttp
std
ret
sub
cmc
mov
jb
out
or
lods
(bad)
push
fwait
sub
std
ja
jb
setl
loopne
retf
xor
rol
push
jae
xchg
fstp
jecxz
xchg
imul
cmc
jle
test
cli
jne
jno
mov
jmp
pop
pop
lahf
mul
sub
add
xchg
sbb
xor
sar
call
sub
add
jno
sbb
pop
les
fidiv
mov
sub
and
xlat
rol
inc
and
push
cs
lahf
vmovdqu16
iret
xor
jp
nop
ret
sti
imul
cwde
rcr
mov
sti
pop
js
jg
jmp
pop
add
test
fcom
mov
pusha
add
mov
fnstcw
xor
mov
rol
adc
cmp
or
call
xor
hlt
add
and
outs
sub
call
xchg
xchg
adc
sbb
or
fsub
aaa
(bad)
fidiv
push
aas
dec
out
mov
pop
mov
xchg
jmp
mov
cli
ret
aas
leave
add
lahf
mov
dec
xor
shr
imul
mov
xchg
push
push
loope
sbb
shl
movs
push
mov
adc
pop
xor
cmp
das
xchg
shl
cmps
fistp
aad
cmp
mov
(bad)
imul
into
inc
add
hlt
push
sti
add
xor
push
cwde
test
div
aam
or
mov
neg
popf
mov
jecxz
mov
js
mov
sbb
adc
cwde
fnstcw
xchg
mov
gs
mov
rcl
outs
xchg
pop
mov
daa
je
pop
sbb
ds
loop
fdivr
ror
pusha
sub
jae
cdq
into
dec
pop
push
retf
adc
cmps
leave
cmps
ja
daa
jmp
out
mov
sbb
push
and
add
xchg
mov
add
push
pop
inc
add
test
jns
ss
imul
mov
adc
lds
arpl
or
imul
push
addr16
mov
sbb
xor
push
mov
rcl
mov
inc
in
sbb
cs
stc
adc
out
inc
leave
fstp
jae
jmp
ss
orps
ret
test
in
fnsave
or
not
cmp
or
fdivr
cmc
bound
cmc
in
xor
cmp
aad
imul
pop
dec
mov
jb
hlt
mov
jnp
or
fsub
test
imul
push
cmc
xor
mov
xchg
jae
and
or
ficom
sbb
movs
dec
xlat
cmp
cmp
aam
out
add
dec
dec
push
lods
push
or
ficom
adc
cmp
out
jge
call
xor
imul
add
mov
add
jg
inc
adc
in
daa
(bad)
mov
push
sbb
jo
cmp
fst
leave
es
push
mov
adc
test
lea
or
test
fist
sub
pop
fmul
fiadd
jmp
cwde
xor
imul
sub
test
setge
pop
test
push
(bad)
(bad)
cmp
xor
in
fcom
bnd
jns
imul
sbb
and
add
iret
test
mov
mov
sar
in
pop
inc
ins
stc
fdiv
pop
sub
xor
xor
xor
cmc
arpl
mov
(bad)
fxch
inc
mov
pop
jae
sbb
cmps
and
das
lods
sbb
loope
outs
neg
push
cli
mov
retf
sbb
sub
pop
movs
out
sahf
lds
dec
test
pop
inc
movs
(bad)
ret
sbb
lea
inc
xor
jmp
loop
push
fnsave
adc
mov
cmp
movs
js
or
mov
adc
adc
xor
mov
add
mov
(bad)
imul
das
cld
inc
fs
jg
mov
ds
imul
sbb
lods
push
and
pop
aad
loope
cmp
into
mov
mov
pop
out
push
in
dec
jbe
push
dec
xchg
idiv
mov
lds
stc
mov
cmp
jg
mov
cdq
sbb
cli
fidiv
clc
cmp
es
stos
std
ret
push
and
bound
dec
mov
sub
(bad)
shl
jge
push
call
fnstsw
shr
test
pusha
popa
jo
cld
stos
xor
xor
jo
cmp
outs
sbb
add
jns
push
popa
jmp
imul
int3
imul
and
pop
sub
ret
stc
add
call
push
fimul
sub
adc
dec
in
pop
dec
aaa
mov
shl
js
pushf
push
sub
jmp
cmc
stos
adc
sbb
xor
pop
in
aam
(bad)
(bad)
ins
sbb
(bad)
mov
fdiv
shl
in
scas
mov
shl
add
daa
fadd
ss
sar
sbb
ins
mov
bound
dec
cs
fisttp
into
xor
sub
call
sbb
int3
adc
sub
dec
call
rcl
call
xchg
popf
outs
inc
xor
xchg
mov
adc
push
ficomp
jmp
cli
push
xlat
into
inc
iret
mov
mov
xor
js
ds
mov
(bad)
mov
mov
int3
bound
sub
jl
cmp
stc
call
or
lea
adc
repz
leave
sahf
(bad)
loope
neg
sub
rcr
in
fs
add
jne
mov
dec
jg
loop
jle
shl
mov
pop
dec
retf
push
sahf
mov
xor
out
mov
retf
fsubp
xchg
(bad)
iret
fstp
mov
movs
xor
jb
outs
in
dec
cmp
sar
imul
cmp
mov
shl
fstp
xor
aad
inc
ss
out
stos
shl
enter
sub
mov
das
jg
fld
stos
adc
mov
add
daa
mov
mov
add
or
adc
loop
test
xchg
mov
sbb
pop
sbb
in
sub
push
push
pop
lock
xchg
push
pop
clc
mov
mov
(bad)
sbb
neg
test
je
mul
mov
fsubr
retf
pop
xchg
mov
push
repz
mov
aas
add
mov
in
jns
aam
jne
test
nop
arpl
mov
push
movs
xlat
imul
or
mov
cmps
adc
call
adc
cld
call
and
inc
leave
mov
mov
outs
adc
cmp
pop
sbb
or
dec
inc
out
pop
pop
(bad)
lea
dec
call
outs
out
mov
add
jl
mov
sbb
mov
inc
and
sub
popa
aad
jnp
aaa
inc
ret
cmp
adc
add
(bad)
sbb
inc
cld
mov
push
mov
and
push
nop
out
cli
push
cmps
inc
jp
mov
aam
inc
(bad)
xchg
shl
adc
dec
pop
out
repnz
jecxz
fld
sbb
dec
pop
and
imul
aaa
mov
push
or
sbb
icebp
cmp
cmps
push
fadd
ret
pop
shr
fmul
cmp
or
mov
mov
dec
mov
sbb
or
adc
jg
mov
icebp
sbb
aaa
je
mov
fbstp
gs
cmp
ss
xlat
sub
in
mov
sub
jb
push
leave
scas
cmps
push
adc
jp
cli
xor
fdiv
hlt
ficomp
sbb
(bad)
mov
lock
fwait
sbb
pop
adc
and
je
add
fidiv
(bad)
mov
(bad)
ds
out
mov
and
cs
pop
enter
not
iret
fcomp
addr16
(bad)
(bad)
dec
cmps
sbb
lea
jg
inc
cmp
dec
std
push
dec
sub
mov
jne
cmps
fadd
data16
scas
push
outs
aaa
and
jbe
push
stc
test
cmps
jmp
stc
out
sbb
cmp
xchg
adc
sbb
leave
jae
adc
mov
fild
push
ins
pop
mov
ret
dec
mov
xor
push
sub
ins
lea
int
and
lds
xchg
push
pop
push
cmps
sub
mov
or
xchg
jbe
xor
ficomp
xor
lods
mov
test
push
mov
jg
mov
mov
out
pop
sbb
dec
jne
cld
arpl
pop
(bad)
(bad)
call
jo
add
stos
sti
hlt
pop
dec
pop
mov
mov
popa
dec
ret
out
pcmpeqw
jge
add
ss
mov
mov
dec
xor
jns
cmp
lds
mov
mov
ja
sub
int3
mov
pop
nop
pop
jno
pop
xchg
(bad)
imul
rol
ins
out
ret
fadd
mov
fdiv
mov
lods
xor
pop
sbb
std
mov
cmp
and
aam
movs
arpl
inc
mov
dec
scas
frstor
or
int
retf
xchg
pushf
test
pop
mov
out
xchg
jmp
add
pop
nop
ins
mov
push
cmp
shl
repnz
pop
jno
ficomp
movs
ins
mov
leave
pushw
xchg
fldenv
scas
dec
cmc
popf
fcomip
xchg
mov
outs
pop
and
adc
inc
jmp
mov
inc
inc
(bad)
adc
aas
gs
adc
cli
test
outs
xor
test
outs
xlat
add
sbb
enter
(bad)
mov
std
das
xchg
mov
cmp
push
daa
ds
cmps
cmps
mov
jbe
ins
fldenv
dec
push
lea
leave
lods
test
adc
in
mov
cmp
fstp
push
cmp
addr16
inc
shl
add
(bad)
ret
sbb
jg
push
(bad)
jmp
pop
outs
xor
sub
lods
aas
fs
mov
repnz
dec
push
or
rol
cmp
outs
jbe
ret
call
pop
addr16
and
cmp
mov
cld
jmp
lock
xchg
jecxz
and
jnp
in
xor
jl
aad
mov
push
sbb
mov
dec
(bad)
fiadd
test
test
int
adc
pop
out
out
in
add
cld
cmc
sub
xor
jne
cmc
in
pop
out
jae
outs
sahf
sub
js
aam
inc
lea
sub
sub
xor
xchg
paddd
sbb
add
add
inc
mov
call
mov
xor
mov
and
push
pop
dec
cli
test
scas
inc
mov
xor
xor
push
xlat
cmp
jmp
ins
mov
cwde
sar
aad
fld
inc
cwde
jmp
adc
xchg
scas
call
push
sahf
shl
clc
pop
cmps
xchg
jg
jno
das
push
xor
std
push
mov
push
mov
inc
pusha
cld
and
mov
mov
dec
or
mov
repz
imul
mul
push
daa
jmp
aad
pop
js
ins
int3
retf
out
cld
enter
imul
stos
repnz
test
sbb
xchg
int
add
mov
repz
rol
repz
sub
es
xchg
mov
scas
push
fsub
mov
js
xor
sbb
dec
arpl
test
fwait
mov
rcr
xchg
call
loop
loope
es
addr16
jno
sub
and
and
cmp
inc
mov
fs
and
mov
inc
fcomi
jecxz
ret
mov
pop
inc
push
adc
cmps
dec
leave
clc
pop
js
xor
pop
and
aaa
jmp
call
pop
stc
jge
push
push
(bad)
mov
pop
sbb
xor
sub
cmp
sub
scas
ins
sub
push
xchg
adc
ss
xchg
inc
or
std
rol
in
mov
sbb
scas
xchg
aam
in
mov
push
fld
push
jle
sub
icebp
int3
sbb
push
mov
and
or
inc
mov
div
xor
xchg
mov
retf
clc
dec
xor
std
push
xor
xor
cmc
shl
cmp
xchg
(bad)
push
aad
cs
dec
ins
mov
jae
mov
aad
scas
push
out
sahf
call
push
mov
cmp
xor
arpl
xor
adc
shr
mov
clc
mov
sbb
pop
rep
pop
stos
inc
mov
(bad)
adc
push
outs
ret
fld
mov
icebp
mov
imul
repz
ret
repnz
mov
inc
cli
das
pop
xlat
adc
and
xchg
sbb
std
mov
dec
xor
and
pop
scas
call
ficomp
outs
rol
xchg
sub
push
cdq
xchg
mov
pop
popf
push
test
test
adc
mov
or
xchg
add
inc
adc
in
mov
push
mov
cmp
ss
outs
test
jae
mov
mov
pop
pop
dec
ds
std
push
jmp
es
add
loop
outs
xor
pop
sbb
dec
mov
lods
mov
cdq
fimul
fisubr
mov
outs
push
dec
mov
pop
pop
or
inc
cmp
movs
aam
sub
sar
or
sub
dec
div
fwait
adc
aaa
jecxz
sbb
hlt
inc
jo
mov
mov
dec
and
fs
jmp
(bad)
stos
loopne
(bad)
pop
jmp
cmp
(bad)
in
add
jg
(bad)
mov
int
xor
and
dec
jnp
out
and
out
std
loopne
pop
test
stc
imul
sub
cmp
jle
ja
add
mov
add
retf
jl
push
sbb
mov
mov
sahf
dec
icebp
jl
inc
inc
push
gs
lahf
jnp
movs
adc
dec
sub
setns
push
retf
lea
or
adc
pusha
sub
mov
out
and
xchg
jmp
pop
es
xchg
fucomp
xor
sbb
outs
stos
fstp
fnstenv
movs
mov
or
pop
cmps
(bad)
fcomp
cdq
movs
std
mov
cmp
add
xor
mov
pop
cmc
(bad)
cmp
or
nop
sahf
xchg
mov
lea
mov
push
xchg
in
test
sbb
repnz
xor
xlat
fwait
push
jle
scas
mov
fcom
les
retf
dec
mov
push
es
int
dec
or
mov
sar
aas
imul
ror
add
inc
pop
adc
xor
xor
push
inc
inc
xor
nop
cmp
cmc
outs
sbb
inc
adc
scas
out
cmps
ror
xchg
ss
leave
push
xchg
or
test
mov
ja
add
pop
add
fistp
pop
mov
cmp
popa
lods
push
and
adc
cmp
or
pop
adc
pop
out
and
je
xchg
hlt
inc
jge
add
dec
adc
lock
enter
jb
mov
add
jle
pop
pop
push
pusha
inc
mov
push
(bad)
stos
mov
mov
out
loope
adc
or
test
movs
dec
and
xchg
sub
mov
cmp
cs
lds
shr
dec
dec
cs
push
fmul
ret
pop
mov
cmp
mov
test
or
pop
pmaxsw
inc
jmp
cwde
iret
xchg
(bad)
lea
loope
test
sub
es
jmp
arpl
mov
sbb
fadd
cmp
sbb
xchg
inc
lahf
std
dec
call
inc
or
scas
lea
pop
daa
repnz
aad
addr16
mov
xchg
add
cdq
add
sbb
fistp
mov
cmp
ins
sub
push
ins
and
jb
mov
inc
outs
(bad)
cmp
inc
mov
mov
pop
cmps
and
lock
scas
call
mov
inc
ins
fsubr
sub
rcr
addr16
mov
jp
sbb
jno
les
dec
pop
or
add
lahf
in
ins
sub
fcmove
loope
push
sbb
pop
shl
xlat
shr
stc
sbb
jmp
test
sbb
xchg
xchg
xchg
stc
out
mov
mov
xor
xchg
sbb
push
cmp
mov
jp
es
fucom
inc
stc
xor
jae
inc
xchg
push
push
fisttp
test
jno
adc
and
mov
fwait
or
mov
mov
push
out
inc
mov
mov
adc
test
test
or
lods
(bad)
pop
or
xor
pushf
out
mov
xor
jb
lock
mov
adc
dec
mov
xchg
push
mov
fld
into
mov
movs
dec
call
add
add
push
inc
stos
push
cld
lahf
push
jbe
(bad)
js
jns
cmp
push
add
sub
in
sub
int
inc
jbe
add
cmc
shl
int3
add
push
pop
jmp
add
cmp
mov
xchg
or
arpl
inc
int
sub
sbb
into
add
(bad)
inc
mov
inc
inc
ror
adc
mov
mov
or
mov
aad
int3
mov
add
test
cmps
int
cmp
mov
dec
cmp
test
xor
(bad)
mov
cmp
cmp
ja
jle
or
and
out
popa
adc
mov
mov
xchg
cmps
pop
xor
call
or
push
std
jbe
jae
int3
into
xchg
add
daa
mov
pop
sub
push
call
sub
call
lds
in
sbb
sub
adc
dec
cmp
pop
aaa
sub
lods
leave
fsub
jnp
(bad)
mov
lock
adc
xchg
jge
test
outs
inc
adc
sub
movs
call
adc
loop
inc
pop
fstp
pop
(bad)
pushf
repnz
cwde
cmp
repz
sbb
jae
mov
jmp
repnz
dec
stos
popa
and
hlt
cmp
ds
lahf
jbe
xor
push
mov
cwde
push
mov
add
pop
mov
jp
inc
retf
repz
sub
pop
pop
push
je
shr
fcmovnb
movs
xor
lock
and
pop
popf
add
mov
mov
xchg
data16
jg
mov
sbb
xor
std
inc
sbb
movs
add
out
cmp
data16
dec
test
addr16
sub
sub
add
pop
jge
iret
outs
adc
and
rcl
inc
jge
jmp
xor
mov
retf
mov
int3
xor
xchg
xchg
hlt
mov
mov
jo
out
xchg
push
jae
and
add
retf
mov
xchg
mov
retf
mov
int
jmp
mov
(bad)
rcl
xchg
jae
rcr
rcr
mov
je
mov
lock
iret
pop
xor
jecxz
sbb
ret
adc
jnp
std
xchg
sub
pushw
shl
lods
aaa
inc
leave
fidivr
sbb
mov
into
cmps
pop
mov
push
sbb
add
dec
es
add
es
fnstenv
jbe
adc
push
xchg
ja
jns
and
into
xchg
lahf
pop
pop
and
sub
les
adc
and
push
pushf
call
fdiv
retf
adc
in
or
dec
mov
cmp
dec
mov
pop
loopne
cli
dec
aad
and
mov
add
xchg
pop
daa
or
jmp
call
out
shr
out
sub
repz
sbb
jmp
int3
pusha
push
in
push
sbb
repz
push
jl
call
loope
adc
jbe
or
bound
ficomp
scas
and
out
sub
xchg
es
je
gs
retf
lods
fld
pop
jns
ja
(bad)
push
adc
sub
fsubr
cdq
repz
clc
clc
imul
aam
enter
pop
jb
int3
mov
sbb
cmps
sti
xchg
imul
pop
lahf
jbe
das
inc
retf
test
mov
mov
test
fwait
out
clc
repnz
pop
mov
or
jl
mov
mov
movs
lds
mov
arpl
push
jne
xchg
retf
cmp
enter
loop
cli
stc
sbb
nop
and
stos
adc
(bad)
test
xchg
mov
aaa
dec
fst
sub
ds
ret
inc
cdq
push
inc
xchg
xchg
sar
pop
sub
nop
xor
inc
movs
fnstenv
push
push
and
add
ret
test
sub
xchg
mov
(bad)
(bad)
fcom
ja
pop
imul
out
mov
mov
test
in
in
lds
mov
jmp
dec
je
shl
stos
mov
imul
push
out
test
mov
jp
pop
sbb
ins
arpl
mov
aad
jae
addr16
scas
mov
movs
lods
dec
fisttp
pop
imul
and
push
xor
cwde
sbb
push
adc
aam
popa
push
cmps
cs
mov
lds
mov
imul
sbb
shr
mov
push
arpl
movs
xchg
cmp
bound
or
mov
sbb
repnz
push
inc
adc
push
add
jmp
ret
inc
dec
popa
bound
push
stc
mov
inc
scas
scas
inc
popf
add
sbb
aam
call
pop
pop
rcr
ja
imul
push
push
mov
sub
xor
xchg
das
mov
imul
aam
jb
clc
outs
mov
sahf
pushf
xor
in
push
std
xchg
in
or
loopne
or
sbb
mov
pop
lods
mov
(bad)
fbld
push
xor
add
sub
jmp
xor
sbb
cwde
fucomip
xor
retf
mov
retf
inc
cmp
xor
call
push
cmps
pop
aad
loope
cwde
sti
mov
sbb
gs
cmps
xchg
xchg
cmc
mov
and
xor
xor
clc
lods
or
mov
cmp
add
mov
xchg
pushf
js
jb
xchg
jbe
mov
(bad)
cdq
or
and
call
add
aad
or
les
lea
lods
scas
retf
cmc
sbb
test
(bad)
retw
or
push
sub
xor
mov
enter
push
adc
sub
stc
cli
addr16
lahf
cwde
cmp
push
not
mov
jbe
pop
in
add
fnsave
outs
dec
mov
inc
outs
add
jecxz
lea
jmp
and
push
ja
std
das
pop
xchg
stos
test
and
jns
pop
call
mov
aam
cmp
inc
out
sbb
lock
adc
cli
aaa
pop
das
test
push
call
mov
push
(bad)
mov
and
adc
(bad)
scas
xchg
jl
mov
and
(bad)
or
in
fadd
fsubr
push
mov
movs
sub
cmp
mov
dec
pop
enter
cwde
sti
inc
fmul
rcl
test
popa
cmp
leave
push
and
lds
push
dec
or
mov
lock
ret
sbb
cdq
inc
sub
cs
mov
inc
add
mov
dec
rcr
push
sbb
shr
cmp
movups
and
push
sbb
inc
dec
std
or
lock
popf
jb
nop
mov
cmp
adc
xchg
aad
das
xlat
lock
mov
mov
and
adc
or
(bad)
(bad)
jno
mov
repnz
add
pop
inc
sbb
mov
mov
outs
mov
in
(bad)
fdiv
popa
pop
scas
cmp
popf
cmps
jmp
mov
rcl
loop
mov
(bad)
js
fidiv
or
pop
push
aad
sub
sub
cmc
test
lods
jecxz
es
push
add
dec
mov
sub
mov
call
jno
ins
(bad)
jp
mov
cmps
mov
xchg
pop
cld
cdq
aam
mov
mov
addr16
inc
imul
clc
jo
pop
xchg
test
aas
push
sub
or
fwait
xor
pop
loope
fs
mov
mov
add
mov
mov
in
das
xor
add
xchg
int
repnz
mov
jno
cmp
aas
nop
stos
sbb
arpl
test
mov
mov
xchg
or
lods
cld
sbb
push
cmp
mov
push
daa
js
jae
rol
das
mov
mov
xchg
jae
into
cmp
mov
pop
xchg
pop
inc
scas
push
add
mov
dec
jl
int3
lods
ret
daa
pop
sbb
mov
sub
daa
add
js
repz
bound
stos
jae
add
jno
fadd
xlat
pop
dec
pop
movs
mov
xchg
int
push
xchg
push
mov
icebp
sbb
(bad)
or
inc
sbb
movs
inc
dec
push
push
ror
adc
icebp
mov
fld
call
xchg
(bad)
scas
cli
add
imul
xchg
movs
je
rol
ret
ins
stos
ret
data16
test
pop
cmp
rol
sti
cs
ins
pushw
jmp
shr
mov
ret
mov
mov
or
cmps
test
addr16
or
mov
or
cmp
clc
hlt
inc
dec
push
data16
pushf
mov
fcomp
pop
or
or
rcr
stos
movs
mov
ins
ficomp
pop
(bad)
(bad)
sbb
aam
iret
aam
ins
cmp
xlat
scas
sbb
and
fcmovnb
jp
xor
adc
dec
ret
movs
loopne
in
sub
xchg
push
jge
fldenv
xor
mov
aad
out
(bad)
and
lea
pop
and
mov
fistp
fiadd
(bad)
int3
jnp
std
add
loop
and
or
lahf
outs
sub
ds
mov
addr16
or
shr
and
cmp
cmp
loop
lea
and
sar
cmp
lds
(bad)
scas
loopne
nop
jp
lods
and
stos
and
(bad)
jne
push
inc
shr
add
push
shl
adc
pop
push
add
inc
es
xor
xchg
push
mov
sub
shl
out
jecxz
sub
mov
ficom
sbb
mov
or
or
mov
pop
mov
stos
aam
in
mov
in
lahf
or
pushf
call
(bad)
jge
aaa
frstor
mov
mov
xor
leave
shl
shl
mov
push
in
cmp
cs
mov
jno
(bad)
nop
xchg
test
mov
cmp
retf
push
push
aam
mov
xor
jp
pop
or
sahf
or
movs
add
inc
mov
daa
fadd
cmc
push
and
icebp
outs
pusha
daa
out
(bad)
outs
dec
loope
dec
and
jmp
mul
and
je
std
ja
and
pop
sbb
adc
push
iret
imul
pop
jne
mov
mov
jmp
pop
retf
inc
jo
cmp
push
out
pop
test
jnp
add
dec
not
add
and
push
push
sbb
mov
icebp
ds
and
lock
daa
jecxz
xchg
rcr
jno
xchg
(bad)
das
xor
adc
daa
cmps
out
push
jno
push
cmp
sub
sbb
xchg
adc
imul
pushf
inc
mov
mov
pop
pop
xor
std
xchg
rcl
data16
fsub
out
mov
inc
das
or
sub
pop
sub
loopne
in
mov
push
dec
ret
and
outs
shl
jne
or
push
je
pusha
xor
dec
adc
sub
fwait
pop
push
das
test
stc
push
mov
add
mov
cmp
mul
call
dec
or
shr
pop
fnstcw
call
pop
test
add
mov
stc
(bad)
cmps
movs
ds
cli
jbe
jecxz
xchg
mov
push
jmp
add
xor
pop
or
popa
fbld
fstp
fisubr
out
xchg
retf
sbb
sbb
sub
sub
mov
adc
xchg
sar
jmp
push
repnz
icebp
dec
inc
imul
push
inc
sub
into
inc
push
and
add
inc
inc
or
push
pop
adc
mov
pop
mov
dec
add
call
mov
stos
gs
xchg
std
mov
and
pop
push
dec
loopne
mov
jmp
xlat
cmp
pop
ret
mov
cwde
pusha
dec
aaa
cmp
(bad)
inc
add
bound
cmps
or
or
xor
and
jmp
ret
mov
aam
fisubr
ins
and
mov
bnd
pop
stos
xor
ja
mov
jg
adc
minps
cmp
sbb
aas
cwde
into
jno
xor
pop
jl
push
(bad)
pop
loope
popf
and
mul
push
movs
ja
sbb
ins
arpl
mov
fistp
mov
call
xor
jmp
out
push
mov
loopne
retw
pop
jg
cmps
mov
cmp
int3
cmp
xchg
push
es
mov
mov
inc
aas
inc
leave
jno
cmp
mov
push
cmp
mov
sahf
cmp
pop
and
fwait
shl
call
(bad)
sub
pop
out
out
dec
xchg
dec
test
cmp
or
aaa
(bad)
mov
mov
jae
xchg
ret
imul
repz
mov
rcr
mov
pop
stos
pop
push
fld
je
cmp
gs
xor
mov
cmp
daa
ficom
mov
shl
loopne
test
jmp
scas
jbe
pop
repz
movs
adc
retf
add
imul
aas
adc
mov
imul
sub
lds
sub
or
inc
cmp
jl
mov
dec
dec
cmp
sub
or
cwde
mov
clc
loop
out
jo
imul
jbe
addr16
xor
push
mov
xor
loop
and
nop
pushf
enter
clc
dec
repnz
sti
pop
into
xor
arpl
mov
clc
inc
jns
jmp
ja
je
in
and
pop
(bad)
push
test
add
(bad)
out
test
fisttp
sub
jb
mov
shr
add
aas
out
jae
pop
es
jno
mov
(bad)
(bad)
and
test
mov
rcl
cld
icebp
jecxz
add
mov
push
in
popa
mov
sub
push
or
lahf
call
enter
imul
jecxz
mov
lods
aad
jle
popa
stc
mov
jo
mov
imul
push
ficom
jbe
pop
movs
push
cmp
adc
in
xchg
or
fst
inc
jns
push
ss
and
jmp
xchg
cmps
bound
out
(bad)
fcomp
xlat
in
mov
push
jne
loope
add
lock
inc
add
mov
mov
and
push
clc
lock
cmps
sbb
je
add
pop
cmp
jbe
mov
mov
xor
enter
jns
mov
push
aas
cld
mov
or
push
jbe
jg
nop
dec
dec
arpl
pop
iret
xchg
jle
sahf
sbb
adc
cld
retf
xlat
retf
adc
add
clc
fst
std
das
jne
int3
rcl
aas
sub
mov
add
xor
xlat
mov
and
clc
dec
test
push
adc
jnp
daa
adc
or
pop
aaa
mov
je
jae
test
sbb
mov
dec
add
add
jge
mov
pop
xor
test
sub
xchg
xchg
dec
adc
shl
add
add
(bad)
es
stos
aas
mov
imul
mov
cli
in
cmps
xor
dec
push
das
movs
jp
dec
repz
js
in
sahf
mov
jnp
jmp
addr16
sub
push
mov
cmp
or
enter
jnp
ja
jns
dec
jo
fwait
adc
jp
xchg
rcl
jnp
loopne
stos
jmp
mov
int3
jo
xchg
dec
sub
stc
lods
in
pop
mov
lahf
jb
popf
cld
sbb
sub
add
pop
stos
call
xchg
jb
mov
(bad)
sbb
outs
shr
sub
cmp
jg
xor
or
and
mov
push
ja
mov
cli
add
daa
mul
add
scas
fisttp
sti
addr16
pop
ins
sbb
test
fs
ss
jno
push
call
enter
xor
dec
mov
xchg
jl
std
and
rol
xchg
mov
mov
mov
or
inc
hlt
push
movs
mov
test
sahf
stc
xor
out
call
push
shl
push
pusha
add
pop
mov
add
adc
iret
pop
jg
(bad)
hlt
ja
add
pop
subps
les
xchg
out
les
or
push
sub
into
pop
adc
push
dec
jmp
add
ins
push
mov
int3
and
pop
daa
fsub
loopne
cld
or
retf
cld
rol
out
fwait
dec
inc
outs
sub
inc
leave
and
mov
jns
xchg
repz
ret
or
jbe
xchg
imul
imul
xchg
jp
mov
ds
into
mov
out
cmp
add
inc
and
xor
inc
rcr
mov
retf
sbb
jae
mov
cdq
nop
inc
mov
outs
mov
call
add
or
fs
das
push
and
mov
shl
pop
or
mov
xor
or
add
pop
lea
mov
mov
pop
jbe
mov
aaa
outs
mov
pop
mov
(bad)
adc
adc
(bad)
inc
or
ret
test
adc
sbb
das
test
adc
and
push
mov
pusha
aad
std
sbb
mov
jno
push
dec
sub
cld
sbb
out
pop
or
and
stos
in
inc
loopne
adc
out
fimul
cmp
mov
xchg
stos
push
sub
nop
fs
leave
ins
xchg
cmp
or
clc
sub
hlt
into
scas
xchg
inc
jle
test
mov
fwait
pushf
pop
not
(bad)
(bad)
shr
aam
je
and
outs
test
rcl
repnz
ror
(bad)
pop
jl
dec
adc
inc
xor
leave
push
pop
call
sub
and
mov
ins
mov
retf
xor
cmp
xchg
pop
dec
or
test
add
pop
dec
aas
jg
int
call
add
outs
cmps
mov
push
push
cwde
adc
aad
xor
mov
pop
mov
int3
neg
(bad)
stos
mov
mov
aas
cmp
push
(bad)
sbb
icebp
lea
add
xchg
in
test
das
adc
inc
and
das
xlat
test
test
(bad)
add
pop
ds
dec
cmc
scas
into
(bad)
cli
or
jecxz
mov
out
mov
jno
retf
mov
jae
cld
mov
ins
cmp
sbb
out
cdq
jmp
mov
mov
lahf
sahf
arpl
sbb
into
sbb
and
stos
sahf
ja
ret
movs
inc
inc
ficomp
sub
push
inc
inc
pop
xchg
out
xchg
mov
dec
repnz
sub
cs
push
aad
xchg
in
jp
mov
ins
mov
mov
bound
xor
add
fidivr
sub
dec
push
inc
adc
adc
out
das
cmp
pop
out
dec
mov
sub
mov
xchg
pop
movs
mov
retf
ds
adc
inc
shr
aad
out
or
xor
int
lock
pusha
stos
ror
fcmovbe
pop
push
jno
jne
addr16
icebp
push
sub
pop
sbb
shl
sahf
or
and
stos
xor
cmp
in
inc
cmp
inc
cmc
dec
mov
cmp
retf
or
js
jne
or
dec
cmps
and
cmps
push
repnz
call
pop
sbb
je
mov
fst
icebp
mov
add
fsubrp
cdq
movs
bound
(bad)
fistp
lds
(bad)
add
lods
mov
js
lods
(bad)
cld
mov
cmp
sbb
jmp
clc
pop
mov
mov
sub
mov
popf
xor
icebp
(bad)
cld
push
push
retf
clc
and
cmp
adc
or
loop
out
inc
das
xchg
mov
jne
lods
dec
retf
sub
clc
jne
imul
test
cmps
or
xlat
fldln2
jl
or
pop
inc
lahf
mov
dec
lahf
pop
icebp
fdivr
push
enter
je
push
push
sub
aad
pop
ror
aam
mov
add
dec
push
stos
cld
cld
push
xlat
pusha
inc
addr16
test
adc
enter
fild
out
sbb
add
pop
inc
rcl
fst
sbb
js
push
test
push
xor
mov
mov
frstor
popf
in
jnp
loop
xchg
sub
pop
xchg
fisttp
das
sub
and
mov
pusha
add
push
mov
inc
or
stc
add
mov
les
cmp
cld
rcr
cmp
pop
xor
outs
call
xchg
push
pop
movs
mov
pushf
sbb
scas
mov
or
fst
xchg
inc
adc
mov
aaa
(bad)
sub
mov
mov
iret
test
or
xchg
dec
mov
or
dec
stos
fincstp
and
out
jmp
and
retf
sub
cld
bound
loope
outs
dec
leave
xor
es
xor
jnp
mov
push
es
adc
stc
and
xor
adc
add
sbb
cwde
mov
enter
mov
aas
js
mov
ins
scas
scas
loopne
out
cwde
jmp
jg
mov
call
add
js
pop
call
sbb
cmp
movs
imul
xchg
push
sbb
sub
test
out
pop
sub
pop
xchg
inc
into
shl
ins
addr16
repz
pop
stc
lods
mov
sbb
mov
push
sbb
mov
jae
popa
ja
mov
out
popa
popf
mov
xchg
mov
adc
jno
mov
in
scas
mov
or
add
cmps
bound
mov
icebp
push
jg
mov
inc
jb
test
xor
jb
shl
pop
stos
mov
mov
cmp
stc
test
sub
cld
xor
dec
jb
lods
xchg
pop
inc
add
and
push
aad
and
ror
inc
repnz
out
addr16
push
add
dec
xchg
dec
push
fisttp
sub
shl
jb
pop
jne
jmp
xlat
or
in
ins
push
pusha
dec
cmps
sbb
jnp
pushf
push
sub
loop
dec
loope
pop
push
jne
cmp
adc
cli
call
dec
mov
add
and
dec
rcl
ds
out
test
and
lods
lahf
pushf
xor
retf
shl
retf
pusha
mov
ret
push
cli
daa
in
sub
sbb
and
mov
mov
(bad)
pop
mov
pushf
add
fcomi
sbb
adc
sub
outs
push
jg
cli
mov
mov
ds
in
and
inc
cld
xlat
mov
add
imul
ins
cdq
sbb
icebp
mov
retf
mov
and
jo
jae
xchg
addr16
shl
pushf
in
mov
iret
sub
mov
inc
cli
push
test
or
dec
cli
dec
jb
sbb
pusha
jae
push
jno
outs
inc
int
sub
or
xchg
repnz
int3
dec
mov
aad
aam
daa
gs
shl
add
inc
adc
cmp
xchg
jp
ret
cwde
sbb
xchg
jnp
mov
or
add
ins
(bad)
loop
sub
pop
mov
fwait
(bad)
(bad)
popa
mov
fbstp
std
push
mov
dec
repz
xor
sub
mov
mov
sub
and
(bad)
xor
fadd
pop
sbb
ret
sbb
stos
xchg
out
data16
xor
cdq
and
xor
ins
lea
sahf
add
dec
(bad)
aaa
hlt
jmp
outs
pop
and
mov
and
scas
addr16
sub
jecxz
dec
cmp
mov
gs
mov
add
rol
shl
pop
int3
ret
popf
ficomp
fisttp
mov
addr16
xlat
popa
iret
popa
(bad)
adc
les
push
ja
jg
loop
mov
and
push
pusha
adc
enter
fsubr
rcl
out
push
push
jmp
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
jg
add
sbb
xchg
jo
adc
and
add
fdivr
push
fild
imul
(bad)
int
xor
fistp
hlt
xchg
cmp
xchg
mov
inc
imul
cmp
pop
mov
lods
adc
xchg
popa
cli
(bad)
adc
inc
jp
popf
adc
mov
and
stos
jle
jp
lea
ja
fcom
call
push
inc
adc
rol
pop
xor
prefetch
sbb
out
dec
xor
and
push
test
shl
dec
(bad)
in
dec
aad
enter
jae
ja
cmp
inc
jns
std
ret
cwde
add
inc
jp
(bad)
out
lahf
test
xchg
lock
mov
cmps
shr
(bad)
push
jge
inc
sbb
or
or
or
pop
test
ficom
data16
mov
sub
clc
sub
fwait
pop
xchg
int3
es
outs
xor
std
(bad)
int
pop
push
adc
pop
jne
or
hlt
jb
test
and
cli
mov
fsubr
inc
cmp
inc
jl
fisubr
jmp
repnz
cmp
jmp
(bad)
aas
dec
mov
adc
mov
cdq
lods
cdq
pushf
shl
inc
jno
xchg
(bad)
out
arpl
cld
adc
test
jge
add
fs
nop
inc
je
jae
int3
add
cmp
cmc
dec
mov
push
or
adc
jbe
or
inc
sbb
xchg
or
loope
ret
repz
cmc
mov
adc
out
jg
outs
mov
xchg
shl
mov
cli
and
mov
inc
cwde
hlt
cmp
xor
imul
outs
stos
aam
xor
sar
xchg
mov
xor
and
fimul
inc
mov
(bad)
rcr
fcomp
sub
call
push
(bad)
cmp
pushf
xor
add
pop
sub
fmulp
hlt
mov
push
mov
add
xor
call
push
je
fild
adc
ins
or
and
stos
xor
(bad)
test
xchg
sub
mov
call
sbb
mov
test
jmp
mov
mov
pop
repz
cmc
cmps
es
push
rol
outs
mov
sbb
mov
lods
jno
push
inc
jo
inc
call
call
std
arpl
in
xchg
cmp
movs
out
(bad)
out
imul
adc
addr16
jmp
sub
ret
fmul
xchg
sbb
fnsave
sub
cmp
jg
jmp
jmp
ss
xor
jl
add
inc
fild
jp
sub
int
mov
(bad)
out
jl
ror
pop
jmp
add
dec
mov
cs
imul
mov
div
mov
mov
push
dec
in
and
and
jmp
lock
pop
and
dec
movs
lods
sub
push
lahf
cmp
add
mov
data16
pop
xchg
pop
(bad)
aad
sbb
push
test
mov
sbb
jb
lahf
stc
add
popa
adc
mov
loopne
mov
ss
jle
mov
mov
cmp
push
movs
cmp
pop
pop
add
in
sub
ins
in
loop
aad
cmp
pop
fidivr
dec
addr16
iret
ror
ret
in
pop
test
jle
inc
cmp
fcomp
fisub
aam
popf
cmp
into
cmp
(bad)
sbb
cmp
mov
aas
push
loope
inc
scas
mov
sbb
and
sar
test
pop
add
cmp
addr16
inc
mov
scas
jo
cmp
and
rol
out
jae
mov
add
mov
call
mov
aaa
int3
cdq
lods
aam
cmps
in
add
xor
sub
ins
xor
dec
jmp
movs
test
pop
adc
outs
add
popf
(bad)
std
and
or
adc
sbb
(bad)
push
or
mov
push
popa
sahf
mov
aam
jns
sbb
inc
add
ret
aam
push
push
test
and
sbb
jo
xacquire
rcl
dec
add
inc
lods
ja
push
mov
dec
std
in
push
leave
sub
outs
lds
lock
push
adc
add
mov
hlt
adc
int3
cmp
test
or
(bad)
mov
cmp
push
lahf
(bad)
sti
int
popf
test
pop
jge
cmp
inc
cdq
loop
jl
jmp
aad
push
xchg
or
fwait
jb
add
test
nop
in
mov
movs
mov
adc
or
sbb
outs
add
retf
outs
push
ret
cmp
movs
and
mov
jg
dec
mul
enter
pop
adc
mov
push
pop
loopne
sbb
adc
test
dec
ins
lods
cmp
add
setnp
sbb
loopne
xor
xchg
jle
xlat
or
inc
and
shl
and
daa
pop
call
jnp
test
(bad)
pop
fild
cmp
sbb
cld
add
(bad)
cwde
imul
dec
add
add
aas
rcl
mov
shl
jns
pop
mov
and
int3
mov
fsub
out
push
adc
aam
xchg
mov
pusha
xor
cmp
movs
out
dec
fnsave
int3
inc
pop
mov
iret
push
pusha
(bad)
pop
mov
xchg
inc
xor
jne
inc
mov
inc
add
mov
ds
or
bound
aas
dec
stos
adc
pop
mov
(bad)
mov
jbe
mov
mov
jecxz
fbld
and
push
xor
or
cli
jmp
adc
lds
ins
aas
push
mov
jp
pop
add
je
outs
pop
enter
xchg
ss
shl
xchg
mov
les
les
pop
out
ja
popa
push
fisub
sbb
das
retf
iret
dec
mov
lods
outs
jo
ret
jmp
sbb
imul
push
fsub
in
(bad)
mov
adc
xchg
and
sbb
out
pop
push
xchg
pop
mov
test
jmp
fisubr
imul
test
xor
adc
and
retf
xchg
mov
sub
nop
push
rcl
lods
push
pop
retf
fsubr
and
mov
sub
cmps
fldl2t
mov
and
jo
push
push
sbb
out
loopne
out
cmp
xor
(bad)
jecxz
adc
and
inc
stos
pop
inc
ret
or
inc
test
mov
dec
inc
mov
dec
mov
sbb
in
retf
adc
lds
xchg
inc
in
pusha
es
movs
xor
in
jg
inc
or
test
mov
movs
cld
out
lea
push
lods
aad
imul
mov
hlt
mov
repz
xor
sub
das
jp
push
push
hlt
cld
xor
sbb
push
fiadd
retf
mov
ins
lock
push
and
push
jb
sub
ss
xchg
cmp
sub
pusha
stos
jmp
cld
push
rcr
fdiv
sbb
pop
cmp
inc
dec
in
sub
cmp
test
out
gs
cmp
out
in
sti
ins
data16
jle
push
fs
push
(bad)
or
test
xchg
ins
jae
fwait
ds
sbb
push
pop
xor
add
dec
mov
stc
xchg
xchg
dec
jmp
xlat
push
cwde
call
and
test
fadd
adc
adc
arpl
and
cld
xchg
mov
pop
cld
imul
stos
js
in
imul
test
push
out
add
dec
sbb
ds
jl
inc
push
mov
cmps
cmp
lds
movs
xchg
xchg
das
pop
scas
sub
add
mov
add
pop
add
jg
cli
int3
sub
call
into
nop
repnz
scas
or
lea
or
aam
dec
(bad)
fcmovbe
pusha
mul
les
jne
add
cmp
(bad)
popaw
push
stos
mov
xchg
lahf
js
sub
add
pop
stos
sub
pand
fimul
mov
dec
xor
ja
jne
adc
fwait
xor
adc
in
jmp
not
sbb
xor
inc
or
popa
frstor
jmp
jle
fsubr
in
int
imul
sbb
xchg
xchg
js
fsub
xchg
fwait
inc
and
mov
ja
add
shl
ss
push
cmp
and
cmp
sahf
fnstcw
icebp
cs
out
jge
cdq
movs
cmp
inc
add
sbb
imul
out
xchg
push
(bad)
into
pushf
ret
inc
fdivr
cmp
ds
and
jae
xchg
sub
test
icebp
inc
cmovle
dec
xor
push
cmps
addr16
pop
fdivr
pop
ins
dec
jnp
inc
fstp
inc
inc
(bad)
sub
mov
cmc
gs
inc
pop
sbb
ins
dec
sbb
adc
jae
mov
dec
ins
adc
xor
rol
stos
sar
mov
inc
(bad)
xlat
fisttp
repnz
sbb
retf
add
jl
dec
xchg
(bad)
xlat
mov
loopne
enter
dec
fwait
dec
inc
add
pop
mov
xchg
ficomp
mov
js
dec
fiadd
ins
jg
mov
hlt
(bad)
jle
outs
cli
cmp
jg
xchg
mov
mov
xor
push
add
call
or
jo
sub
movs
push
mov
mov
bound
aas
jle
push
out
dec
xor
outs
ja
mov
and
aad
mov
hlt
call
imul
test
cmp
and
push
or
add
adc
xor
popa
push
into
scas
pop
push
adc
xlat
xchg
adc
dec
cmp
aad
les
movs
ds
pop
xchg
and
in
xlat
ss
repz
cmp
xor
leave
push
cmp
iret
test
dec
mov
push
je
das
jnp
lods
mov
aaa
adc
xchg
sub
dec
add
add
dec
hlt
jo
fs
push
adc
sahf
cmp
push
add
xchg
dec
(bad)
xchg
mov
aad
and
lds
popf
test
push
inc
test
leave
les
loop
pop
imul
mov
outs
xchg
ror
retf
and
scas
lahf
and
jne
loope
data16
lods
cmps
pop
jl
mov
adc
scas
dec
inc
add
push
leave
popa
shl
jb
retf
jnp
movs
or
or
cmps
mov
int3
xchg
xchg
jne
or
je
pop
outs
std
adc
ror
mov
imul
cmp
fstp
xchg
mov
scas
mov
push
cmp
cmovae
das
inc
or
jno
mov
out
aas
mov
mov
dec
int
fistp
in
mov
out
fnstsw
mov
mul
ret
aad
and
in
pop
loope
mov
(bad)
sbb
xor
in
ins
cld
loop
enter
movs
mov
inc
pop
lods
push
pop
push
jno
sti
fstp
mov
stos
ss
je
call
(bad)
dec
in
mov
das
fwait
xchg
dec
daa
xchg
aad
push
mul
call
(bad)
int3
push
mov
adc
call
fld
sahf
mov
dec
sbb
mov
or
xor
dec
or
in
push
mov
push
add
adc
xchg
sub
or
pusha
dec
cli
mov
mov
loope
push
rol
leave
pop
sahf
or
add
sbb
les
add
pop
pop
scas
dec
pop
(bad)
mov
outs
push
jmp
into
adc
or
xor
pop
outs
lods
dec
xchg
pop
outs
inc
mov
sub
call
pop
ret
xchg
jno
cmps
cmp
sub
das
sbb
xchg
fdivp
fidiv
jmp
call
in
xchg
ja
sub
push
mov
lock
mov
leave
push
cld
add
or
pop
xchg
loope
in
test
add
(bad)
dec
pop
loope
rcr
les
mov
fsubr
inc
das
pop
dec
inc
xchg
add
ins
and
push
test
sub
outs
push
ret
ins
add
pop
out
jns
pusha
push
ret
xchg
aas
out
xor
pop
inc
in
imul
repnz
aam
pop
mov
mov
inc
leave
push
int
inc
or
fistp
pop
dec
mov
pusha
loop
xor
jb
test
stc
cmp
lds
out
repnz
retf
mov
iret
fst
and
cmp
cs
xor
std
xor
dec
out
cmp
inc
popf
test
and
xchg
sub
loop
lods
jb
pusha
leave
xchg
call
mov
into
cs
pop
or
add
or
loopne
mov
adc
fnstenv
loope
cli
sbb
sbb
pop
adc
shl
sub
xchg
(bad)
mov
test
jle
adc
inc
xor
mov
fisub
rcl
cmp
xchg
sub
inc
mov
sub
popa
add
rcr
sub
les
ret
xor
mov
and
mov
dec
out
bound
adc
call
out
sar
push
fld
repz
mov
jg
nop
dec
adc
ret
pop
gs
cmp
jmp
mov
cs
pop
out
retf
pop
ret
sbb
and
enter
sbb
div
int
(bad)
sub
mov
lds
cwde
(bad)
xor
cmp
mov
push
sbb
cwde
and
adc
pop
add
jl
hlt
pop
dec
rcl
xchg
or
std
mov
sub
or
test
add
das
push
punpcklwd
push
je
mov
add
sbb
pop
mov
not
dec
mov
mov
test
ins
or
jl
aad
push
mov
retf
push
movs
shr
push
clc
int3
aaa
mov
dec
sbb
pop
pop
mov
js
mov
mov
inc
inc
mov
aam
add
lahf
loop
xor
mov
add
mov
push
in
pop
pop
adc
cld
jae
fidivr
inc
jecxz
cmp
arpl
mov
xchg
sbb
cmps
inc
fnstcw
outs
inc
rcl
retf
scas
popf
shr
push
leave
fs
push
enter
cmp
sub
(bad)
test
or
push
pop
inc
add
cmp
mov
xchg
es
jo
sti
sbb
jle
movs
ins
test
push
(bad)
dec
lds
and
mov
daa
add
cli
bound
jbe
(bad)
mov
xor
cmp
out
mov
dec
push
push
xchg
or
sub
push
jge
les
push
outs
in
cmps
cld
add
inc
hlt
jle
fadd
and
shl
add
mov
or
dec
sub
add
jge
fdivr
mov
xchg
push
cmp
cmp
mov
and
mov
or
add
mov
xchg
arpl
mov
movs
shl
fcomip
pop
into
cdq
repz
jno
adc
xchg
adc
out
sub
xlat
or
js
rcr
fist
ror
fs
mov
shl
pcmpeqw
sahf
int3
cmc
(bad)
outs
fisub
dec
sahf
mov
cli
fwait
or
pop
das
add
je
lock
push
jns
fs
loopne
mov
xor
sub
pushf
xor
inc
outs
jmp
add
stos
rcl
ins
test
pop
fs
jns
or
xlat
fsub
cmc
mov
psubsb
push
pop
int
cwde
inc
mov
ins
lods
pop
mov
or
test
ja
aad
push
pop
retf
les
(bad)
xor
in
mov
mov
outs
cli
loopne
lea
adc
cmc
mov
sbb
les
cmp
out
pop
retf
hlt
lock
movs
push
jo
(bad)
imul
push
test
inc
mov
(bad)
(bad)
xchg
mov
mul
fsubr
jmp
pop
data16
sbb
(bad)
inc
pop
mov
mov
and
add
sahf
popa
hlt
nop
imul
push
movs
jae
jo
lods
ja
push
and
xchg
clc
mov
or
aas
ret
push
mov
adc
xor
sub
shl
ror
lds
and
sbb
jg
push
mov
xchg
shl
movs
or
push
mov
mov
add
aaa
cdq
pop
int3
shl
xchg
cli
ret
adc
stos
int
aaa
jge
rcr
into
or
mov
pop
pop
cmp
nop
push
pop
xchg
push
retf
sbb
mov
ins
dec
push
(bad)
(bad)
sbb
adc
scas
mov
addr16
add
mov
xchg
rol
add
pop
vpmacssdd
sbb
clc
push
sbb
sti
shl
test
stos
mov
nop
jge
aam
jl
fcmovne
sub
int3
jle
xor
out
into
cmp
add
gs
ds
jge
sbb
mov
mov
push
sahf
xchg
dec
mov
push
movs
retf
mov
xchg
mov
outs
sub
and
xor
inc
mov
xor
xchg
xor
les
or
ret
ja
cmps
dec
int3
scas
mov
scas
ins
xor
sbb
cmp
fcomi
mov
into
adc
hlt
mov
std
xchg
scas
mov
xchg
add
mov
jecxz
daa
push
jmp
sub
add
mov
jmp
jl
cli
int
aad
ret
push
add
mov
std
fcomp
and
pop
(bad)
dec
rol
sub
imul
scas
shl
test
cmp
push
sbb
ss
and
outs
and
or
mov
cmps
fcomip
inc
mov
loop
pop
in
das
and
aad
and
dec
adc
adc
lods
out
push
xchg
mov
or
mov
push
mov
sub
xchg
(bad)
pushf
push
ins
test
jne
push
push
in
cmp
inc
shr
iret
xor
jno
mov
test
mov
or
push
iret
jmp
dec
cdq
pop
xchg
cmp
push
ret
dec
mov
pop
mov
mov
ins
movs
and
jge
push
inc
inc
scas
dec
fwait
inc
xlat
and
push
jns
sbb
push
mov
js
sub
xor
inc
inc
fiadd
sub
pusha
imul
add
retf
inc
or
test
adc
push
add
dec
fyl2x
test
and
shl
jbe
sbb
jb
or
xor
aas
sbb
dec
jmp
jno
push
std
outs
push
cmp
ret
movs
cmc
cmc
imul
add
sub
xchg
jo
ins
imul
dec
shl
mov
scas
add
and
adc
cmps
or
bnd
pop
(bad)
mov
repz
adc
mov
js
bnd
loope
pushf
fisttp
arpl
ds
push
mov
pop
mov
inc
push
dec
cmps
repnz
bound
xchg
mov
test
jno
dec
cmp
jbe
loopne
inc
inc
sbb
imul
cld
inc
mov
or
nop
das
pop
mov
dec
mov
push
xchg
into
push
sar
fbld
sub
and
outs
hlt
jle
pop
pop
mov
icebp
xchg
aaa
xchg
sub
test
aas
in
sub
cmp
movs
in
push
add
daa
or
aam
(bad)
mov
pop
bound
(bad)
jmp
fcomi
cwde
push
dec
add
add
xchg
push
ror
cli
(bad)
cmp
mov
fisubr
xchg
loop
cmp
cwde
pop
mov
pop
sub
sub
fst
stc
xor
xor
cmp
jmp
outs
daa
aaa
xlat
jno
retf
aas
sub
pop
cmp
call
inc
(bad)
outs
add
popf
cdq
std
dec
rcl
rcl
aas
js
or
fisubr
aaa
ds
sbb
in
jb
or
lea
sahf
add
ss
push
sbb
and
jmp
push
pop
push
inc
lds
repz
sti
xor
pop
gs
pop
jae
loop
cmc
arpl
mov
sbb
inc
lods
xchg
jo
imul
leave
push
inc
xchg
lock
movs
xor
pop
cld
stos
gs
cdq
push
sti
adc
bnd
out
pushf
cmp
push
lea
(bad)
mov
daa
add
push
arpl
fnstsw
call
or
jne
jg
dec
sub
xchg
(bad)
aas
out
ret
push
ins
popa
inc
aas
int3
jno
lds
xchg
inc
lahf
mov
or
ror
rcl
out
hlt
lea
imul
fadd
add
pop
dec
and
adc
das
out
xchg
dec
dec
pop
js
jmp
mov
js
out
jb
mov
movs
movs
(bad)
mov
fidiv
and
(bad)
and
sti
adc
push
inc
mov
mov
pop
lds
sti
fld
mov
aaa
xor
push
pop
shl
(bad)
push
sub
sub
stc
jne
js
fist
dec
sub
ins
pop
jno
div
mov
jae
test
mov
dec
test
mov
push
pop
std
inc
jnp
cwde
gs
inc
cmp
inc
loop
dec
or
int3
dec
movs
add
in
cmp
sti
test
icebp
call
aas
adc
mov
adc
mov
sbb
or
jg
cld
(bad)
or
(bad)
mov
std
xchg
cdq
mov
adc
inc
sbb
and
xor
rcl
dec
rol
popf
lea
mov
xchg
clc
dec
fild
jae
retf
rol
mov
add
(bad)
cmp
mov
addr16
cwde
sub
fucompp
jo
stos
(bad)
sub
sub
(bad)
push
jmp
dec
jnp
xchg
mov
cmp
mov
ror
scas
adc
mov
push
in
mov
pop
and
div
pop
lea
sub
xlat
mov
and
loop
(bad)
mov
and
pusha
retf
gs
push
jb
pusha
xchg
jns
out
pop
sbb
pop
les
shl
outs
(bad)
mov
mov
mov
icebp
push
cmps
inc
dec
mov
or
push
enter
mov
dec
jns
in
les
(bad)
dec
pop
dec
fbstp
mov
or
dec
inc
jns
pusha
adc
xchg
out
jo
pop
imul
cld
dec
jp
push
pusha
rcr
jnp
outs
adc
popf
cmp
(bad)
out
push
je
outs
lods
inc
sub
jbe
enter
pop
mov
mov
daa
inc
sbb
mov
ins
mov
lahf
icebp
gs
mov
cmp
loopne
outs
inc
mov
jge
pop
pop
add
stos
or
jo
mov
fild
iret
stos
out
adc
ins
fild
pop
push
jmp
jmp
bound
call
sub
out
adc
dec
loope
mov
das
popf
adc
retf
pushf
push
dec
add
pop
sbb
and
inc
jle
loopne
gs
xor
and
test
mov
pop
retf
xor
in
rcl
sub
test
out
test
ret
out
mov
sbb
sbb
into
adc
mov
mov
jmp
shl
in
clc
js
not
ds
or
ret
sahf
dec
fdivr
jo
mov
push
loop
mov
(bad)
fld
sar
mov
mov
shr
pusha
in
sub
xor
xchg
lea
or
arpl
cld
sbb
out
test
push
pop
adc
or
and
js
int3
test
xchg
loopne
aas
pop
retf
inc
mov
cld
pushf
jbe
and
pop
inc
std
add
ss
xchg
cmovne
or
repz
jmp
cmp
lea
jecxz
repz
mov
xor
push
iret
inc
or
dec
mov
iret
dec
jbe
or
sub
or
jp
pop
push
dec
xchg
jmp
movs
hlt
pop
mov
test
pop
fmul
pop
je
and
xor
outs
das
lods
jno
pop
sbb
jge
ins
repz
fcmovne
pop
out
inc
or
jae
jmp
sbb
in
mov
loop
jl
xchg
retf
push
aaa
ror
mov
xor
xlat
xlat
lock
fild
mov
scas
xchg
repnz
leave
jns
aam
push
movs
push
dec
cmp
cld
mul
mov
loopne
dec
fidiv
jp
jae
fild
test
sub
fwait
or
push
mov
ins
mov
add
jae
out
push
enter
into
outs
(bad)
cmp
cmp
out
into
cli
(bad)
mov
cli
(bad)
sub
cwde
push
repz
rol
data16
adc
out
and
and
leave
push
add
and
jne
mov
or
push
and
adc
jg
inc
into
mov
add
xchg
hlt
or
ja
lods
cdq
fnsave
pop
dec
inc
aad
mov
pop
fcom
pop
sub
(bad)
pop
cs
daa
int
sbb
jb
bound
repnz
shl
ror
in
pop
adc
push
scas
or
mov
sar
add
mov
add
enter
mov
retf
fs
repnz
mov
adc
aaa
dec
mov
iret
popa
jecxz
pop
add
xchg
inc
and
add
aam
dec
push
cmp
movs
outs
jnp
cmp
jge
sti
pop
fnsave
stc
pop
dec
add
sub
out
fmul
add
or
call
popf
and
push
push
push
push
test
xchg
jno
repnz
mov
dec
fldl2t
push
ja
push
and
mov
pop
dec
dec
sub
jae
mov
xlat
dec
mov
fmul
in
loopne
addr16
ret
pop
cli
ja
and
js
mov
jne
adc
fwait
je
es
mov
xchg
cwde
data16
stc
push
loopne
push
retf
dec
xchg
jecxz
pop
imul
or
mov
cli
jns
es
test
add
call
push
retf
dec
sub
int3
mov
aaa
les
aad
jg
test
cmp
jno
push
clc
loope
jle
cmp
or
inc
inc
adc
cmp
ret
mov
sti
adc
xor
jp
fild
jg
pop
and
frstor
ja
jl
jg
shl
movs
ja
out
test
mov
call
pop
lea
xchg
xchg
and
mov
or
adc
xor
sub
aas
push
and
inc
jae
cmp
mov
bound
(bad)
mov
dec
bound
sar
lahf
mov
inc
add
and
test
popf
inc
inc
push
mov
(bad)
loop
push
add
push
dec
je
in
pop
div
(bad)
xchg
rcl
sti
aam
dec
mov
sar
add
sub
dec
cmp
mov
setno
rcl
jae
push
inc
add
lahf
xor
enter
sub
adc
sbb
test
fistp
jl
inc
stos
mov
pop
or
ret
(bad)
in
sbb
inc
dec
jbe
das
jecxz
out
xchg
cmps
shl
out
(bad)
ss
sbb
push
int
shl
and
cdq
sub
cmc
add
out
test
xchg
sub
cmp
repnz
cmp
add
out
pop
cmps
test
stos
xchg
fwait
jmp
jo
add
dec
aas
sbb
das
lahf
sub
xor
shl
enter
(bad)
stc
leave
popf
imul
imul
jge
ins
mov
retf
jnp
sbb
jo
out
mov
call
inc
(bad)
ins
adc
pushf
int3
pop
repz
inc
add
push
mov
add
sbb
ins
push
lds
cli
lods
popf
sbb
or
movs
cmp
out
xor
sub
inc
repz
sub
(bad)
int3
push
jnp
inc
and
xchg
(bad)
out
jecxz
add
jno
dec
mov
call
imul
idiv
cwde
dec
cmp
xor
xchg
clc
popf
push
mov
fldz
call
outs
mov
test
dec
adc
cli
and
push
jno
mov
rcr
jp
repnz
pop
sbb
mov
adc
dec
ins
push
(bad)
test
jg
ror
xchg
push
and
or
int
lds
mov
jae
dec
pop
(bad)
icebp
gs
enter
aam
sub
pop
adc
retf
dec
jl
retf
ror
aas
cmp
inc
fs
test
shl
imul
aas
ins
aaa
sti
adc
add
out
lea
jno
xchg
jne
adc
ret
sub
fwait
or
push
cmp
call
lds
mov
jle
sub
jae
cmp
push
and
pop
sbb
scas
popa
jecxz
mov
rcr
pop
xchg
mov
xchg
mov
clc
das
push
mov
mov
rol
mov
les
pop
or
adc
cdq
jne
retf
imul
fst
jmp
iret
mov
ret
mov
call
out
sbb
repnz
add
mov
aam
inc
or
adc
xor
in
add
in
add
aaa
xchg
adc
test
icebp
stos
mov
and
ins
je
fmulp
ja
and
inc
mov
mov
(bad)
jbe
cli
jns
pop
fst
adc
iret
jae
rcr
sub
dec
mov
dec
mov
paddq
dec
fnstenv
aam
pusha
lds
mov
adc
sbb
in
lods
sub
jns
jo
call
sahf
call
sub
adc
mov
test
mov
sbb
daa
push
iret
loope
shl
dec
cwde
mov
(bad)
cmp
lock
xchg
das
jp
xchg
or
or
add
push
fld
push
std
nop
aaa
jb
xor
adc
std
or
jnp
fstp
shl
mov
mov
and
inc
pop
pop
mov
lea
pop
lds
xchg
shl
popa
mov
jge
fs
(bad)
sbb
nop
(bad)
mov
ficom
mov
bound
xor
lods
xchg
aad
shr
in
rep
cmp
xchg
ds
xor
(bad)
(bad)
ror
jns
sub
mov
mov
xchg
gs
imul
sub
imul
or
mov
cmps
(bad)
test
mov
xchg
xchg
inc
loop
cmp
or
inc
inc
cmp
fwait
in
aas
(bad)
fmul
in
int
mov
ret
outs
mov
dec
call
gs
xchg
or
retf
scas
cli
(bad)
lock
lock
or
pop
or
sub
bnd
scas
cwde
push
and
les
push
jnp
addr16
and
pushw
jbe
fsubr
imul
push
aad
stc
adc
not
cli
adc
mov
cmps
ror
push
pop
mov
cmp
(bad)
jb
out
fsub
cmp
into
mov
(bad)
pop
jb
adc
fadd
adc
lds
inc
rcr
sub
mov
add
rol
push
loope
mov
movs
sahf
cmp
into
pop
jns
xchg
ror
idiv
push
jl
imul
jb
cmp
sbb
sbb
xor
xchg
stos
inc
scas
jno
and
push
push
sub
pop
cwde
xchg
test
push
fdiv
inc
jmp
fdiv
jmp
mov
mov
mov
and
(bad)
push
inc
popf
cmc
mov
popa
inc
ret
inc
enter
and
sub
mov
jo
das
xchg
scas
pop
mov
loopne
aam
(bad)
call
sub
je
mov
into
push
add
and
xchg
jp
pop
(bad)
jno
inc
pop
sbb
movs
imul
pop
mov
mov
cld
mov
or
iret
in
sti
sub
pop
pop
inc
in
or
shl
(bad)
xchg
xchg
retf
push
push
adc
pop
idiv
pop
push
sub
out
xchg
cmc
dec
scas
in
lods
sub
loopne
and
jmp
and
stc
daa
pushf
imul
jno
retf
cmp
cs
xlat
stos
iret
aaa
test
inc
(bad)
hlt
add
jno
iret
mov
inc
cmp
fadd
mov
inc
fld
addr16
pushf
nop
cmps
add
mov
aad
push
mov
or
sbb
ror
mov
add
inc
inc
adc
pop
outs
stos
repnz
call
fsubr
loop
push
(bad)
adc
mov
mov
mov
hlt
jl
inc
icebp
xor
ficom
cmp
sbb
xor
stos
cmp
dec
int3
popa
inc
mov
xor
dec
push
cli
pop
in
mov
jge
call
add
clc
sbb
push
and
add
push
xor
addr16
pusha
jne
ins
cmps
test
xor
leave
in
cdq
xor
jmp
sbb
sub
add
mov
jmp
dec
jae
ret
dec
push
fcom
add
pop
push
mov
sub
pop
das
add
fs
inc
mov
je
outs
hlt
cmp
cmp
push
movs
pop
mov
or
mov
mov
enter
pop
dec
(bad)
and
inc
sbb
retf
sbb
jnp
aam
mov
lea
stos
pop
movs
lds
loope
pop
dec
nop
mov
jo
mov
cld
inc
(bad)
(bad)
and
inc
adc
idiv
(bad)
cmp
(bad)
inc
scas
jns
xchg
movs
dec
cmp
inc
ret
lods
stos
adc
push
inc
xchg
lods
outs
inc
and
add
add
and
sub
stos
push
mov
xchg
sar
jnp
add
int3
sub
xor
xchg
jmp
cld
hlt
mov
dec
add
jl
lea
push
cmps
shl
mov
frndint
pop
xor
fldenv
popf
pop
jno
adc
xchg
xchg
push
es
adc
pop
push
sahf
mov
dec
stos
sbb
(bad)
(bad)
push
push
mov
retf
(bad)
mov
mov
mov
popa
mov
in
mov
mov
int
mov
pushf
mov
dec
mov
push
test
out
fwait
aaa
bound
push
mov
pop
or
loop
das
inc
popa
call
(bad)
test
sbb
xor
and
mov
call
mov
scas
jmp
cmp
jae
sbb
mov
xchg
out
imul
mov
xchg
vcvtpd2ps
dec
mov
add
ds
push
jecxz
push
lods
cmp
and
(bad)
and
pop
jmp
mov
cs
lods
aam
adc
jecxz
stos
repz
loopne
jmp
cwde
mov
or
inc
jg
pop
retf
iret
push
or
push
add
gs
(bad)
arpl
sahf
fwait
inc
xchg
movs
out
js
inc
inc
test
call
push
cld
fmulp
clc
in
mov
mov
adc
add
add
xchg
das
sub
daa
shl
shl
jmp
test
ret
pop
xlat
(bad)
fwait
(bad)
iret
mov
sbb
gs
cld
mov
daa
xor
pop
lea
mov
sti
fnstcw
jno
or
xor
dec
cmp
push
movaps
test
ret
adc
and
and
iret
addr16
rcr
xor
xor
popa
nop
inc
fadd
mov
outs
test
mov
ret
aas
(bad)
push
inc
add
push
xor
lahf
ror
mov
ror
push
dec
cmc
mov
xor
jno
pushf
and
and
cmp
std
inc
(bad)
call
and
sbb
xor
and
xchg
adc
popf
aam
or
retf
clc
(bad)
xchg
popf
inc
mov
jmp
icebp
arpl
cmp
aad
mov
stc
inc
jl
mov
imul
sub
push
rcl
and
pop
mul
adc
aas
push
mov
loop
push
imul
dec
stos
jmp
or
fwait
cmp
jb
push
mov
rol
fsubr
enter
xchg
data16
inc
cmp
(bad)
dec
and
mov
push
pop
push
in
cmp
pop
sbb
push
mov
fmul
cmps
nop
add
outs
cs
in
idiv
js
int3
lahf
invd
sbb
mov
je
jbe
mov
adc
cmp
std
fisttp
loop
mov
adc
dec
or
pushf
push
ficomp
pop
jo
fnstenv
gs
ficom
cld
pop
mov
addr16
das
mov
add
or
jmp
dec
inc
shr
push
push
mov
or
clc
popa
shl
cli
and
jg
add
jb
pushf
aas
fimul
sar
stos
jmp
loop
mov
test
stc
loopne
out
inc
xchg
push
retf
push
and
jmp
or
mov
gs
xchg
rcr
mov
ins
sub
cmc
adc
lds
bound
in
xor
dec
push
pop
adc
inc
in
pop
aad
jae
repz
mov
sti
retf
mov
pop
in
mov
retf
ins
adc
dec
or
xchg
sahf
xchg
or
ret
push
ror
lods
sub
mov
call
xchg
scas
bound
sar
lods
and
xchg
fisub
cmps
mov
data16
mul
mov
out
pushf
and
push
and
stos
pop
scas
jle
fld1
retf
imul
cmp
(bad)
cs
sub
ret
lods
addr16
fwait
mov
or
hlt
mov
jl
pop
jnp
ins
cmp
mov
daa
mov
stos
xor
mov
or
jl
pop
aam
lock
cli
sbb
push
faddp
adc
mov
mov
stos
cmps
push
lods
xor
mov
ficom
and
jp
lahf
sub
sbb
inc
cmp
aaa
cmp
stc
ret
jae
xchg
cmp
imul
hlt
dec
inc
ja
mov
xor
add
imul
popa
jns
mov
push
arpl
lods
or
test
pop
mov
nop
outs
stc
mov
popf
or
cmp
inc
mov
outs
add
test
mov
into
push
xor
push
cmp
js
dec
mov
pop
adc
imul
dec
xor
mov
ret
jecxz
retf
pusha
add
(bad)
cli
sub
ret
adc
retf
test
loopne
loopne
jno
jg
ja
xchg
sub
loopne
and
pop
sahf
cmp
ds
test
mov
push
mov
mov
mov
pusha
ror
rcr
int3
jb
mov
mov
fs
inc
(bad)
pop
dec
in
xchg
add
(bad)
xlat
fcomp
inc
loopne
and
sbb
test
je
lods
into
imul
cld
in
sub
add
xor
movs
sbb
sbb
or
xor
push
mov
jnp
inc
ret
call
mov
lods
sub
out
mov
aad
inc
adc
test
sbb
mov
mov
jp
jle
and
mov
jle
xor
shl
inc
retf
xor
in
jb
stos
xchg
cmp
mov
dec
ins
push
xchg
outs
scas
cs
inc
call
inc
(bad)
out
cwde
xchg
xor
ins
adc
push
scas
and
mov
push
ret
repnz
and
jmp
(bad)
out
clc
mov
push
add
jbe
outs
je
sti
out
aas
xor
xchg
sbb
rol
adc
data16
fisttp
stc
adc
adc
mov
sbb
dec
and
cdq
bnd
aaa
fsubrp
add
test
rcr
mov
inc
mov
jb
add
jb
aam
dec
jno
add
xor
loope
loopne
aaa
shr
popf
aad
loopne
popa
jae
scas
push
and
fstp
cmc
jae
js
jp
adc
push
adc
jne
mov
push
lods
mov
fsub
fistp
aam
aam
dec
cli
jecxz
stos
cmps
addr16
jnp
xor
cmp
mov
aam
(bad)
or
add
push
mov
pop
xlat
adc
pop
pop
dec
scas
or
push
popf
out
lods
imul
push
popa
adc
jecxz
or
mov
jge
sbb
sbb
cld
dec
pop
push
cmc
cmp
retf
std
je
mov
es
retf
jmp
mov
out
call
mov
(bad)
jno
and
jne
aam
jg
push
mov
test
pushw
xchg
retf
xor
(bad)
mov
int3
jne
std
cli
lods
gs
mov
stos
or
push
pop
test
mov
sbb
or
xor
scas
push
call
dec
cmp
sbb
retf
je
push
mul
or
fwait
test
mov
cmp
hlt
in
in
mov
inc
in
repz
pop
call
push
loope
pop
dec
jae
mov
rcr
rol
jae
loopne
outs
popf
pop
test
xchg
jle
sub
push
push
jb
sbb
jnp
shl
dec
dec
cld
sub
xor
adc
jg
add
imul
mov
shr
cdq
shl
les
and
or
call
fwait
mov
popf
les
aad
fidiv
imul
imul
popa
jmp
sub
repnz
mov
jo
sbb
fldcw
cmp
outs
jg
mov
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
loope
add
and
sub
lahf
retf
xchg
les
iret
loopne
repz
popf
pushw
cmp
fld
push
xor
mov
stos
or
xchg
pop
sub
dec
jns
adc
icebp
adc
dec
push
xchg
icebp
jnp
mov
movs
sub
pop
(bad)
mov
push
mov
adc
add
je
sub
jmp
daa
fld
je
(bad)
xchg
pusha
test
in
adc
mov
ror
sub
pop
fbstp
test
sub
xchg
(bad)
cmp
mov
cmp
mov
mov
lahf
movs
rol
or
sbb
ins
(bad)
sbb
(bad)
push
xor
clc
neg
icebp
jno
mov
gs
rol
pusha
(bad)
cld
sub
scas
out
adc
pop
sub
and
sub
and
inc
sbb
or
add
add
pushf
mov
ins
and
mov
inc
jns
sub
out
adc
sub
aad
jmp
xchg
mov
mov
pop
popa
mov
lds
stos
cmp
out
jbe
jae
fst
jp
push
scas
in
jg
fidiv
or
shl
jle
cs
mov
pusha
adc
xchg
or
sbb
rcr
outs
jmp
in
test
xchg
mov
aam
mov
xor
add
mov
das
jo
(bad)
fdivr
push
mov
mov
inc
xchg
push
fdiv
sub
les
popa
jecxz
pusha
pop
icebp
cmp
push
or
push
adc
jle
sbb
clc
add
adc
fisttp
jo
xlat
mov
fbstp
push
in
mov
xor
mov
cmc
xor
fimul
push
xbegin
mov
inc
fisub
dec
shl
stc
dec
je
ins
(bad)
movs
in
push
add
dec
pop
adc
enter
jbe
test
imul
cmc
jbe
pop
cwde
outs
test
jle
sbb
pop
push
or
push
out
lahf
ds
mov
aaa
aam
and
jbe
mov
pop
adc
pop
stos
add
(bad)
mov
dec
mov
stc
jns
and
pop
ds
dec
std
mov
push
cmps
and
js
adc
mov
test
push
mov
test
cwde
mov
outs
jmp
xchg
pop
(bad)
jl
rcr
in
out
addr16
aas
jno
adc
or
pop
mov
pusha
xor
(bad)
jne
popa
pop
cld
mov
or
fcomp
xor
add
xchg
cmp
inc
inc
and
pop
inc
into
cli
mov
aas
rcr
pop
ins
xchg
jb
inc
(bad)
cs
int
je
not
retf
inc
xchg
mov
retf
sbb
xchg
leave
jl
jo
leave
aad
scas
fdiv
(bad)
mov
xchg
xchg
jecxz
push
outs
test
retf
or
adc
fcomp
fisttp
sti
outs
pop
xor
(bad)
mul
sbb
and
adc
nop
jns
sahf
cld
pop
sub
sub
mov
(bad)
iret
pop
cmp
xor
sub
add
cmps
pop
(bad)
mov
int
popf
lock
mov
mov
(bad)
pop
mov
xchg
jae
mov
pminsw
in
leave
popf
je
sbb
pop
and
xchg
leave
mov
out
xor
sub
dec
lods
cmps
hlt
setbe
inc
sub
cmps
mov
jecxz
sbb
scas
mov
pop
or
(bad)
or
mov
pop
cmovb
cmp
mov
ror
mov
xchg
mov
test
sub
test
cs
adc
test
xchg
cmc
push
push
repnz
adc
mov
jp
dec
sub
dec
in
movs
mov
mov
aam
pop
or
mov
fdiv
ins
push
clc
pop
arpl
push
sbb
and
mov
cmps
outs
mov
les
pop
and
movs
lods
jno
loop
dec
inc
fmul
clc
stos
div
mov
sbb
rcr
push
xchg
scas
aad
mov
dec
adc
fnstsw
adc
rcr
or
popf
mov
dec
mov
dec
adc
fs
cmp
push
mov
mov
sbb
mov
adc
push
cli
add
outs
js
sub
dec
aad
jbe
(bad)
mov
sbb
and
ror
push
xchg
fstp
dec
pop
popf
mov
enter
jno
outs
lahf
lds
in
add
dec
mov
scas
inc
fs
sub
cmps
inc
dec
inc
pusha
or
fist
test
push
std
cmp
mov
hlt
sbb
jmp
xchg
fs
(bad)
iret
cmps
into
jge
clc
pop
lods
pop
push
and
ins
ja
(bad)
int
jmp
inc
repz
push
je
or
inc
adc
xchg
outs
cs
cmps
rcl
jae
jge
js
mov
dec
stc
mov
push
lea
add
and
and
mov
popa
je
xor
xor
imul
shl
outs
mov
in
push
sub
js
sar
jg
mov
pop
xchg
daa
or
mov
stos
retf
inc
jns
adc
inc
push
jge
inc
adc
je
jl
add
xor
cwde
cmp
and
pop
(bad)
pop
cmp
xor
popa
icebp
and
int
rol
mov
ja
push
(bad)
inc
popa
jg
fucomip
loope
mov
and
add
retf
cmps
call
movs
push
add
call
push
sub
(bad)
pop
clc
cli
or
out
xor
jl
push
or
xchg
cmps
ins
sbb
(bad)
(bad)
lea
pop
mov
xor
jecxz
(bad)
pop
mov
jmp
aas
add
xchg
rol
je
adc
adc
mov
ds
je
adc
mov
add
stc
stos
imul
popa
mov
mov
inc
sub
or
aaa
mov
in
mov
pop
and
dec
xchg
inc
clc
sub
call
push
dec
vmaxpd
out
add
inc
cmp
push
fwait
mov
xor
rcl
cmp
outs
outs
push
dec
clc
outs
inc
iret
(bad)
aam
fs
mov
mov
cmp
fld
mov
adc
outs
out
sbb
aam
cmp
gs
cmp
cwde
les
dec
xchg
repnz
xor
jecxz
fnstsw
imul
cmps
inc
stc
pusha
div
jge
xchg
and
shl
cmp
data16
loop
clc
mov
lock
mov
xchg
es
dec
mov
add
jmp
mul
or
imul
shl
or
or
push
loopne
lds
and
iret
pop
push
or
test
lock
fdivr
stos
cmp
in
jb
ins
push
sbb
add
xchg
popa
xchg
cmp
cmp
adc
hlt
lods
push
loop
or
ins
xchg
test
adc
outs
jno
mov
and
and
clc
and
ror
in
cmp
sub
je
(bad)
call
sub
test
mov
retf
movs
(bad)
mulps
(bad)
in
adc
jno
add
add
cmps
movs
adc
sahf
dec
inc
add
mov
xor
inc
mov
push
fadd
in
sbb
mov
mov
xchg
fcmovne
mov
add
and
push
(bad)
lock
pop
xor
sub
ret
fiadd
es
or
sahf
mov
imul
cli
(bad)
jp
shl
jmp
sahf
fs
jecxz
lock
add
dec
adc
sub
aad
mov
sub
punpcklbw
dec
les
nop
mov
push
jbe
cmp
dec
cmp
cmp
(bad)
retf
ret
sbb
repz
and
inc
stos
xor
stos
dec
cdq
rcr
cmc
and
fwait
ret
jecxz
jmp
aas
jae
sbb
jmp
mov
and
pop
jno
stos
daa
dec
push
shl
jp
dec
(bad)
popf
xor
adc
(bad)
jns
ds
cmps
stos
(bad)
call
xchg
retf
jno
not
inc
shl
sahf
push
test
sar
jmp
pavgb
in
and
cdq
cld
push
xor
mov
pop
jmp
and
jo
adc
pop
fnstsw
push
retf
test
call
dec
jb
leave
test
sahf
les
clc
hlt
xchg
mov
mov
adc
arpl
or
jno
sbb
ja
mov
add
or
pop
adc
(bad)
mov
stos
adc
sbb
iret
and
add
je
mov
fdiv
jb
dec
sbb
icebp
fwait
xor
xchg
xor
or
fwait
jns
mov
daa
stos
dec
mov
dec
and
lea
and
in
dec
sub
das
or
adc
dec
xchg
adc
int
(bad)
cmc
jne
pop
inc
mov
cmps
clc
push
jmp
cmp
mov
adc
jo
mov
out
adc
aaa
xchg
fdivr
rcl
frstor
int3
das
outs
adc
retf
adc
mov
add
dec
test
cmp
mov
sahf
int3
lahf
jne
or
ss
dec
rol
cmps
bound
sahf
sbb
cmp
and
retf
jb
mov
push
ror
mov
cmc
inc
aam
retf
adc
push
pop
inc
push
(bad)
jmp
jbe
aam
cdq
cwde
inc
(bad)
xor
push
retf
scas
loopne
mov
inc
or
jo
int3
jmp
retf
ret
aaa
xor
xor
popf
and
test
add
rcl
xor
movs
pop
inc
iret
imul
add
das
fwait
retf
dec
and
repnz
fisttp
in
rol
lock
test
or
mov
mov
in
fwait
movs
inc
imul
pop
fcmovu
sub
inc
mov
jmp
repnz
sub
mov
sbb
outs
cmp
fstp
fwait
sbb
in
retf
push
mov
lds
cmc
pusha
sar
repz
fsub
sbb
pop
call
cmps
scas
or
loope
popa
(bad)
jle
sub
sub
or
sti
jns
add
mov
add
xor
mov
and
cs
pop
xlat
mov
dec
push
ror
in
fsubp
cs
jo
xchg
mov
shr
(bad)
sub
loop
pop
pop
sbb
into
ret
mov
mov
dec
test
or
push
ss
jae
lds
fisttp
jp
pusha
mov
shl
lods
(bad)
fidivr
inc
pop
(bad)
push
jle
push
movs
enter
jmp
int3
mov
mov
pop
or
xor
jge
ffreep
cdq
mov
je
pop
sahf
mov
adc
je
shl
cmc
dec
inc
xchg
push
outs
arpl
mov
pminsw
lds
repnz
cmp
sub
xchg
and
jg
out
test
std
mov
sub
retf
jle
or
nop
ins
rol
inc
lahf
fdivrp
call
dec
ds
fisub
sbb
pop
sar
mov
(bad)
gs
push
ds
mov
sbb
call
inc
scas
mov
jp
enter
lahf
sti
fcom
int3
push
pop
mov
mov
enter
mov
xchg
test
add
mov
mov
das
mov
and
imul
dec
call
in
xor
out
sub
cwde
jl
fnstcw
loop
cmp
sub
jnp
sbb
mov
pop
enter
jo
jecxz
inc
mov
cmp
sar
pop
mov
inc
jge
pop
lds
xor
sahf
lods
stc
loope
aam
pusha
inc
pusha
push
lock
imul
jae
push
and
xor
in
mov
mov
jge
mov
push
cwde
add
pop
sbb
sti
jmp
cmp
ja
mov
bound
xchg
inc
push
sub
push
sbb
in
cmp
or
fstp
push
ror
xchg
dec
push
scas
jg
mov
jne
add
xchg
xor
scas
(bad)
rol
enter
sub
sbb
mov
sti
inc
shl
fwait
pop
sbb
or
imul
loope
fidiv
stos
push
rcl
cmp
sub
sbb
cmp
inc
add
ret
in
pop
adc
sbb
jns
imul
les
or
jge
or
mov
sub
ficomp
jb
jge
jbe
sar
pop
iret
mov
loope
pop
sub
(bad)
mov
jmp
arpl
stos
push
add
enter
scas
mov
mov
cmp
push
cld
imul
dec
add
inc
pop
jmp
adc
add
add
rcr
cli
cmp
arpl
inc
gs
retf
xchg
adc
mov
jle
fidiv
push
xor
or
jp
cmp
mov
push
retf
jmp
pop
jno
mov
push
push
out
vaddps
(bad)
mov
cmp
icebp
xchg
call
(bad)
dec
in
xchg
out
mov
std
shr
retf
sbb
mov
int
add
xlat
sahf
and
(bad)
pop
sub
lds
cld
mov
int3
jl
dec
add
mov
into
push
or
cmp
retf
adc
ds
inc
cmps
jne
jmp
(bad)
and
ror
in
out
mov
in
pop
outs
std
ss
push
lds
jle
lahf
push
aam
fiadd
push
ret
inc
cwde
mov
xor
inc
mov
out
aam
add
add
push
shl
mov
movs
jmp
test
mov
pusha
es
sbb
sub
pop
jnp
mov
dec
mov
movs
and
jg
xchg
imul
test
jne
arpl
mov
sbb
sbb
(bad)
pop
xor
fdivr
imul
xchg
nop
jle
es
add
inc
lods
or
(bad)
push
dec
mov
or
test
pop
add
movs
xor
add
mov
mov
popf
test
std
leave
jns
scas
jo
sti
pop
add
bound
mov
in
mov
out
(bad)
loop
idiv
mov
sbb
sub
js
test
jno
pop
mov
adc
lahf
sub
addr16
cmps
out
jo
lahf
mov
sub
lahf
int
mov
push
out
(bad)
dec
div
jl
jmp
push
fs
push
rol
mov
mov
and
and
cmp
jae
es
pop
dec
and
clc
aaa
or
es
das
ficomp
mov
aad
adc
push
jmp
xor
dec
ss
mov
ja
lods
ins
neg
jmp
test
jmp
shr
fwait
ret
xor
imul
jne
mov
std
push
or
add
ret
psrlq
in
popf
push
add
aam
mov
jno
lods
mov
xor
xchg
and
mov
fdiv
jg
fiadd
mov
ret
xor
(bad)
shl
ficomp
mov
call
int3
sbb
push
and
lods
push
push
cld
inc
stc
jmp
and
sbb
lods
test
std
fwait
imul
or
mov
dec
cdq
xchg
push
sti
xchg
push
xor
addr16
xchg
gs
fimul
add
int
test
(bad)
popa
sbb
inc
mov
adc
jmp
xchg
mov
mov
mov
repz
xchg
fadd
xchg
cmps
or
into
mov
mov
ror
or
mov
iret
mov
nop
aam
ss
push
jle
jg
mov
addr16
in
ja
inc
test
and
int3
mov
mov
sar
inc
lods
in
aas
xchg
push
push
sahf
jne
aam
aas
mov
add
sub
dec
dec
ret
ja
test
mov
mov
loop
dec
mov
add
ror
add
adc
(bad)
out
pop
sbb
(bad)
inc
mov
(bad)
pop
iret
pop
das
rcl
in
ins
pop
enter
ja
fwait
pop
push
iret
pusha
cmp
in
loop
inc
loop
(bad)
adc
fdiv
ins
mov
cld
repnz
pop
repnz
ret
in
xchg
enter
xor
sbb
jmp
scas
enter
mov
outs
push
or
adc
(bad)
int3
sbb
mov
jecxz
lods
pop
and
dec
xor
scas
cli
dec
pop
scas
add
je
jnp
or
test
cmp
xor
lock
add
sub
mov
sti
and
cmp
mov
ins
xlat
(bad)
jne
call
daa
xchg
pop
out
jae
pop
gs
mov
dec
dec
mov
jl
jnp
movs
mov
adc
into
pop
mov
stc
or
call
or
mov
fld
rol
jecxz
bswap
xchg
ins
cli
jge
leave
fmulp
push
pop
mov
sub
scas
pusha
xor
sbb
pop
jns
or
inc
add
frstor
xchg
adc
pop
lahf
inc
pop
mov
xor
jmp
add
jb
cli
add
movs
pop
outs
popa
add
xor
scas
movs
stos
push
aam
rcl
shl
add
fs
aas
sti
clc
mov
mov
ins
hlt
repz
mov
sbb
js
(bad)
loope
push
mov
and
push
jne
pop
aad
iret
and
sbb
jno
and
fiadd
or
ret
cmp
mov
jle
inc
xchg
fs
mov
outs
push
or
sub
fs
repnz
adc
out
cmps
ss
ret
mov
cmp
dec
mov
aas
and
pop
add
xchg
nop
movs
and
daa
les
adc
jmp
and
sub
adc
jg
add
ds
cli
out
push
xor
mov
inc
lods
mov
sub
mov
mov
aaa
fist
sub
jnp
add
lock
xchg
jge
cmp
in
leave
loopne
sub
fwait
adc
cli
mov
xchg
outs
cmps
jno
cwde
mov
fld
scas
inc
pop
data16
les
aad
test
push
stos
or
inc
dec
mov
cmps
retf
ins
and
adc
retf
or
lds
add
cli
ins
test
cmc
mov
jne
ror
add
jnp
arpl
or
shr
mov
ss
sub
sbb
shl
int3
movs
psllq
retf
adc
pop
aam
imul
jecxz
or
lods
adc
mov
push
mov
retf
ds
lds
jecxz
in
mul
cmp
sub
add
clc
in
pop
int
jo
mov
test
ss
mov
data16
popf
scas
jo
in
cld
test
jle
test
and
repnz
rcr
inc
sbb
jbe
pop
sub
xor
adc
inc
push
xor
loopne
mov
pop
jns
or
repz
mov
popa
dec
push
cmps
add
mov
xchg
div
or
mov
dec
inc
dec
and
inc
cmp
push
pop
(bad)
in
loop
add
iret
loop
jmp
jmp
mov
sti
pushf
call
pop
mov
xor
scas
call
jmp
dec
cmp
adc
mov
cmp
jp
arpl
add
push
aad
loop
in
fiadd
in
xchg
repz
xor
sub
rol
adc
or
(bad)
adc
les
add
jne
add
push
not
fmul
js
adc
jge
(bad)
cmp
and
aam
ror
adc
dec
pop
cmp
jp
mov
dec
(bad)
mov
retf
and
stos
cmps
push
xlat
outs
cmp
aas
xchg
pop
stos
repnz
and
jge
mov
ret
das
cli
into
test
or
mov
dec
jge
je
mov
fcmovnb
adc
and
add
jno
xor
movs
push
and
cmps
fwait
xchg
adc
mov
retf
sbb
add
call
retf
and
jne
push
xchg
mul
sub
cmc
inc
push
sbb
or
iret
add
das
clc
sbb
xchg
ins
cmp
sub
out
sub
enter
js
cmp
mov
fistp
pusha
clc
je
sbb
out
aas
es
pop
pop
push
sub
jbe
dec
call
cmc
push
mov
rcl
in
(bad)
and
or
imul
(bad)
xor
push
clc
cs
rol
hlt
fidiv
pop
test
popf
sti
das
push
int3
push
pusha
lds
or
and
and
and
cmp
push
repnz
std
mov
ins
iret
mov
mov
and
shl
pop
jle
xchg
out
inc
push
mov
lods
dec
jp
bound
add
sbb
xchg
mov
sbb
mov
sbb
aad
sahf
(bad)
imul
(bad)
(bad)
mov
push
push
fsub
inc
lahf
movs
lods
js
sbb
mov
sbb
out
cli
lea
hlt
xchg
mov
or
inc
ficomp
(bad)
fxch
dec
es
movs
mov
add
cld
and
clc
push
mov
xlat
xchg
dec
cmp
loop
movs
cli
std
push
(bad)
ins
fcomp
push
sar
add
adc
fcmovnbe
mov
add
dec
mov
loop
cmp
int3
mov
mov
bound
stos
(bad)
push
xor
or
push
je
in
jg
adc
adc
dec
nop
push
xor
sbb
jnp
into
mov
mov
repnz
lahf
and
call
mov
dec
cmp
push
push
retf
inc
mov
fnsave
xchg
adc
cmp
and
inc
ja
movs
pusha
sub
mov
add
sub
movs
rcr
add
stc
jae
imul
lods
dec
inc
pop
cld
push
dec
pop
inc
mov
sti
push
jmp
sti
xor
xor
dec
inc
mov
int3
cmp
pop
sbb
dec
push
shl
stc
xchg
ja
aas
push
cmc
imul
imul
mov
adc
cmp
stos
pop
jle
sub
cmp
icebp
mov
cmp
inc
enter
sahf
scas
pop
lods
push
sahf
pop
xchg
fcompp
mov
jecxz
lods
cli
cmp
pushf
test
add
mov
mov
sbb
shl
dec
int
fstp
cmp
scas
pusha
arpl
pop
cmp
mov
lods
call
pusha
sbb
add
aas
fdivr
jmp
jmp
mov
dec
push
sbb
jmp
div
xor
mov
cmc
sub
aas
sub
push
adc
jecxz
clc
cdq
(bad)
inc
sub
mov
fnstsw
test
icebp
ret
lds
jmp
adc
mov
adc
add
pop
xchg
jmp
mov
inc
das
ins
cmp
rol
sti
sbb
(bad)
sbb
xor
adc
fimul
in
jb
jbe
rcl
and
fs
adc
add
lds
xchg
push
pop
mov
sti
ins
inc
and
adc
jae
push
or
movs
movs
out
and
pop
mov
scas
jb
loopne
pop
(bad)
sbb
xor
pop
cmps
leave
cmps
xor
loop
sub
push
cmp
ficom
mov
mov
(bad)
xlat
imul
pop
cmp
hlt
enter
sbb
pop
add
cmp
imul
sbb
inc
mov
ror
jbe
or
stc
popa
mov
call
dec
jl
mov
adc
nop
pop
xchg
out
imul
sub
test
jp
cmp
(bad)
pop
fs
dec
outs
or
xchg
and
jg
test
mov
jmp
mov
shl
fisttp
out
mov
rol
mov
xor
cmp
shl
jne
ret
sbb
popa
test
movs
mov
fisttp
mov
fidiv
mov
dec
add
sar
fs
std
push
dec
jl
adc
mov
and
or
and
mov
not
sbb
pop
jne
mov
add
jbe
cmp
das
js
lds
pop
lods
xchg
adc
jge
adc
push
arpl
mov
xor
jne
dec
mov
outs
mov
enter
push
xchg
sbb
pushf
jb
mov
stos
inc
lods
add
ret
push
push
xchg
sbb
loopne
in
pop
fidiv
dec
xchg
(bad)
cli
test
fs
cmp
sar
sbb
icebp
call
xor
ret
scas
call
push
inc
mov
mov
add
adc
fcmovnb
out
int
bound
add
addr16
iret
sub
out
mov
xor
adc
cli
jecxz
ja
mov
cmc
pop
pop
xchg
les
stos
xchg
scas
mov
test
shl
xchg
mov
mov
jg
loopne
lds
sbb
outs
stos
lahf
int3
mov
mov
test
and
push
sub
ins
mov
fidivr
inc
ror
pop
int3
cmp
call
sbb
std
out
cli
popf
icebp
or
test
cli
lea
gs
cmps
ja
stos
jg
pop
sub
rcl
retf
in
push
dec
pop
jmp
sar
jnp
xchg
or
push
dec
and
adc
aaa
dec
std
sar
fistp
sub
jge
mov
dec
cs
(bad)
adc
ret
loope
mov
hlt
rcr
jns
in
enter
add
and
sub
xor
inc
cmps
sub
jmp
(bad)
xchg
jle
das
jecxz
pop
stos
mov
add
xchg
loopne
fwait
push
hlt
mov
mov
and
popf
loope
sub
push
popa
sbb
loopne
xor
mov
aam
(bad)
addr16
push
mov
sub
inc
aad
xlat
mov
mov
fisub
leave
stc
mov
xor
ret
loop
xchg
mov
xchg
es
sub
mov
add
adc
div
push
mov
fcom
pop
add
adc
ins
xor
cdq
in
mov
inc
ret
cld
sahf
fnsave
fdiv
inc
test
fidiv
icebp
aaa
leave
jge
aad
in
les
int
out
push
(bad)
fs
outs
pop
cmp
mov
movs
inc
sub
sub
pop
push
shl
test
pushf
hlt
and
mov
lods
xchg
in
(bad)
xchg
sbb
movs
or
mov
das
add
adc
mov
xor
mov
ds
add
test
mov
mov
jp
xchg
push
xor
in
jns
ror
mov
out
xchg
push
out
rol
ror
ss
test
fiadd
jecxz
jno
cld
test
(bad)
scas
push
inc
xor
push
fwait
out
mov
out
sub
pop
sbb
cwde
(bad)
(bad)
das
fstp
in
shl
pop
cmps
mov
sbb
fld
ss
fnsave
sti
mov
jae
aas
inc
leave
pop
out
xchg
out
sahf
mov
cwde
pop
cwde
outs
xchg
(bad)
push
push
jmp
inc
nop
out
mov
push
cs
xor
pop
mov
push
inc
popa
dec
jns
frstor
movs
repnz
mov
scas
gs
cmps
cmp
icebp
xlat
loopne
jg
mov
daa
mov
mov
push
je
xchg
fs
mov
es
or
pop
scas
rcr
movs
xchg
push
bound
or
cli
scas
xchg
xchg
cmp
and
xor
loopne
push
or
icebp
daa
fwait
pop
fld
(bad)
push
and
jmp
and
lds
shr
loope
lock
dec
das
call
repz
xor
icebp
push
out
jae
mov
or
pop
mov
inc
pop
pop
mov
inc
(bad)
(bad)
sahf
and
loop
cmp
inc
sbb
or
xchg
mov
pop
xor
scas
add
not
arpl
les
rol
aam
mov
scas
inc
inc
or
imul
movs
jns
or
push
add
mov
shl
fidiv
dec
popa
ret
mov
sbb
jae
dec
xchg
cmps
pop
mov
dec
(bad)
jp
(bad)
jmp
add
retf
repz
sbb
cmp
inc
xchg
aam
push
lods
inc
mov
xor
fbld
add
fadd
inc
pushf
inc
lea
dec
mov
xchg
dec
lahf
jmp
jge
mov
sbb
(bad)
sbb
fmul
cmc
jo
aaa
sub
push
push
xchg
adc
shl
fs
inc
pop
mov
daa
sti
and
cli
jnp
in
js
mov
aaa
cmp
and
ins
iret
lea
dec
lds
push
rcl
add
xor
inc
ret
dec
xchg
cli
fadd
xor
loop
dec
(bad)
sub
into
adc
in
cmp
and
mov
cmp
add
dec
aad
shl
push
mov
sbb
sbb
arpl
cdq
hlt
mov
xor
sti
imul
fld
daa
and
fdivr
data16
in
gs
pop
xchg
test
mov
loopne
and
add
lods
sbb
cmps
call
call
into
push
aad
loop
dec
mov
mov
sahf
mov
call
fst
sbb
(bad)
jno
dec
mov
adc
jl
arpl
div
fcom
sbb
xchg
jb
fst
ds
icebp
mov
int
pop
jmp
leave
aaa
push
dec
push
cmp
sub
pop
bound
jmp
in
or
jo
push
push
jmp
in
nop
mov
jne
aas
js
cld
mov
jmp
pop
test
jbe
js
scas
movs
mov
test
xchg
rol
arpl
shl
and
mov
sbb
inc
or
push
jns
mov
ins
jne
cmp
pop
ret
or
mov
jl
loop
mov
jl
inc
addr16
test
or
in
push
(bad)
cmp
fnstsw
dec
es
adc
sub
loope
daa
xor
xor
jl
retf
pop
and
addr16
xchg
add
aam
xbegin
cmp
and
pop
imul
push
cwde
push
adc
cmp
mov
dec
nop
inc
in
mov
mov
out
push
sbb
add
xor
and
cmp
out
add
inc
xor
xor
xchg
into
(bad)
hlt
ffreep
push
mov
mov
sub
dec
outs
jns
dec
mov
out
mov
sbb
cdq
movs
add
mov
in
mov
pusha
or
ret
adc
push
dec
mov
sahf
and
xlat
out
xchg
push
enter
cmp
adc
les
sha256rnds2
inc
jp
retf
outs
cmp
jg
ficomp
cmp
imul
movs
xor
sub
push
(bad)
lahf
stc
aas
sub
jmp
sbb
scas
pop
leave
test
and
(bad)
lock
dec
scas
dec
call
inc
das
dec
inc
aas
xor
mov
and
xor
pop
pusha
jmp
xor
cmps
inc
mov
inc
inc
cmc
shl
mov
xlat
js
les
fcom
into
inc
f2xm1
test
dec
jmp
xchg
stos
jle
out
xor
inc
xchg
outs
cs
cmp
jmp
jnp
sub
or
icebp
fwait
call
call
or
int
sbb
repz
std
test
jmp
ins
dec
or
shl
(bad)
nop
repz
xor
addr16
xor
div
pop
xor
and
test
les
push
call
inc
ss
sub
shl
(bad)
push
inc
ret
fsub
jns
mov
ds
fadd
shr
ins
shr
jl
and
aad
push
push
pop
icebp
or
pusha
xor
ds
pop
mov
and
mov
hlt
clc
cld
sbb
shl
into
jmp
fcom
or
enter
inc
jle
in
xchg
outs
pop
mov
xchg
(bad)
in
pop
in
push
data16
inc
leave
jmp
outs
xchg
es
cmp
fnstcw
sub
outs
add
pusha
cmp
push
popa
mov
movs
jmp
cmp
push
inc
rol
pushf
hlt
jae
xchg
inc
adc
adc
and
into
add
jle
mov
nop
sahf
stos
and
push
or
xlat
rcl
daa
out
repz
shl
mov
push
mov
idiv
rcl
sbb
cmps
imul
(bad)
dec
pop
push
cwde
push
mov
cmp
out
cmp
push
dec
adc
cmp
pop
pop
ret
pop
hlt
(bad)
(bad)
cs
xchg
push
nop
mov
pop
jp
or
out
fs
sbb
mov
leave
sub
outs
ds
add
fstp
pop
ret
xchg
jb
push
xlat
sbb
mov
add
out
ret
cmp
ror
mov
push
in
fld
jp
fdiv
sbb
mov
sbb
mov
stos
xchg
inc
das
xchg
ins
(bad)
in
and
adc
xchg
shl
shl
lds
adc
es
lahf
mov
xchg
mov
hlt
dec
xor
dec
scas
xchg
cmps
sub
mov
int
pusha
adc
jg
mov
ja
in
and
in
into
mov
mov
inc
cli
(bad)
xor
jne
repz
das
fcomi
dec
jbe
pushf
iret
pop
dec
(bad)
lock
fxch
pop
lods
mov
jp
mov
push
mov
dec
cmp
leave
mov
push
cmp
inc
jmp
and
into
(bad)
fistp
mov
jp
sahf
es
mov
pop
jb
cmp
bound
repnz
cdq
cmc
bound
jns
xlat
cmps
pop
pop
mov
cmps
ins
sahf
stos
out
stos
or
push
jae
and
xor
or
fld
stos
sti
mov
imul
gs
out
inc
or
xchg
push
cmp
cdq
test
push
rol
and
push
dec
inc
cmp
nop
and
cmc
retf
mov
es
dec
cli
sub
push
xchg
scas
sar
ret
push
pop
sahf
mov
je
pop
outs
fimul
mov
in
(bad)
inc
adc
xchg
fstp
fwait
rcl
sub
add
not
cmps
inc
xchg
lods
cmps
or
push
sti
add
out
adc
jl
adc
jl
xor
mov
sbb
inc
cwde
test
or
and
sbb
stos
add
test
mov
retf
cmp
shl
and
out
pop
sbb
jb
jge
add
xchg
and
mov
mov
stc
lds
test
mov
nop
adc
les
xchg
mov
pusha
and
ret
ins
sbb
jmp
xor
dec
stc
or
nop
fild
je
inc
and
cdq
inc
xlat
out
xor
xor
inc
sbb
fiadd
rcl
loop
loop
lahf
outs
rol
sub
sub
add
xlat
fadd
sub
ret
sar
and
es
mov
jae
loop
jb
pushf
jno
inc
xchg
test
xchg
pusha
fmul
cli
mov
pop
shl
jecxz
inc
xchg
clc
xchg
pop
xchg
lods
sti
and
aas
pop
fwait
cmp
imul
xchg
enter
mov
dec
jbe
pop
ds
fsub
cmps
pop
fwait
in
test
dec
repz
ret
add
in
and
mov
mov
push
pusha
add
dec
scas
push
icebp
add
xchg
rol
js
xlat
retf
add
in
mov
push
cmc
cdq
fist
mov
xchg
retf
jnp
test
es
loopne
adc
jo
dec
mov
cmp
add
je
xor
jge
push
sub
stos
mov
movs
or
and
sub
mov
mov
retf
xor
mov
data16
into
fstp
fild
add
sub
outs
neg
add
inc
scas
dec
(bad)
mov
jbe
cmp
inc
and
rol
add
ss
push
lahf
icebp
jecxz
arpl
ror
cmps
inc
std
mov
and
mov
retf
jae
fs
xor
mov
sbb
mov
out
jo
pop
mov
adc
xchg
pop
jecxz
aad
pop
or
aam
push
xchg
mov
pop
repnz
or
jmp
outs
arpl
shl
(bad)
push
sub
mov
add
push
add
push
js
ss
mov
xchg
xor
cmp
cld
in
sbb
sub
lods
xchg
jbe
push
dec
enter
xchg
inc
mov
rol
dec
into
addr16
cmps
pop
ins
outs
ret
xor
add
inc
loopne
mov
lahf
lock
mov
adc
jb
sbb
jmp
pop
xchg
(bad)
and
sbb
outs
add
mov
in
inc
in
add
lods
test
(bad)
ss
ror
call
mov
outs
pop
fst
xor
bound
mov
imul
inc
daa
xchg
mov
into
(bad)
out
jmp
aaa
dec
retf
std
push
add
jno
sub
rcr
xchg
les
add
inc
sbb
outs
aad
cld
dec
dec
xlat
push
arpl
lock
jno
and
lds
ss
fbstp
jb
test
mov
sub
pop
dec
in
cmp
and
jmp
xor
mov
in
jecxz
loopne
push
inc
dec
mov
or
stos
dec
pop
pop
jecxz
inc
(bad)
in
cmps
or
mov
adc
stc
push
repz
arpl
cmps
xor
imul
mov
push
mov
(bad)
mov
jae
outs
pop
adc
mov
ror
sahf
out
pop
pop
jg
xor
pop
gs
stos
scas
cmp
(bad)
jg
and
test
fnstenv
or
fsub
jns
xor
push
or
or
or
repz
adc
xchg
sbb
stos
push
push
sar
adc
fisttp
inc
xchg
xchg
out
ins
daa
loopne
push
jae
pop
cmp
mov
cmps
ror
clc
jg
xchg
jne
xchg
(bad)
inc
lock
popf
jb
pop
adc
sbb
lods
aad
sbb
and
data16
inc
fs
mov
iret
sbb
jno
loop
cwde
push
cld
adc
lods
add
icebp
in
fbstp
lock
xlat
pop
test
sbb
xor
ss
mov
push
push
inc
and
(bad)
mov
in
test
aam
sbb
loop
cmp
cmp
jge
pop
fidiv
icebp
es
mov
and
int3
jae
sbb
repz
and
cs
dec
push
jb
test
or
xchg
jno
daa
xchg
push
repnz
lods
inc
ins
pop
inc
stc
nop
in
leave
mov
xor
rcr
fbstp
(bad)
sub
xchg
aaa
cmp
vunpcklps
hlt
pop
retf
adc
clc
and
fbstp
cmp
ss
cmp
(bad)
lods
bound
dec
inc
inc
push
sti
sbb
mov
popa
imul
das
iret
adc
and
ja
shl
fld
mov
cmp
jmp
push
outs
push
ret
add
ret
sub
adc
(bad)
mov
outs
xchg
pop
rcl
pop
adc
push
ror
jns
cli
xlat
push
mov
jns
hlt
mov
pop
dec
test
adc
dec
cmp
xor
jle
and
pusha
cs
jge
sti
inc
dec
out
repz
pop
lds
and
pop
jb
dec
into
gs
push
adc
stc
mov
lods
and
fadd
xchg
test
ret
push
mov
inc
inc
(bad)
fdiv
or
outs
jb
or
loopne
arpl
popa
loopne
movs
imul
gs
adc
cdq
push
mov
inc
xchg
adc
inc
in
outs
loope
mov
sbb
cmp
sbb
xchg
mov
xchg
dec
scas
add
mov
sub
not
mov
loope
aam
cs
add
jo
shl
outs
pop
sbb
addr16
cmp
push
add
dec
mov
in
mov
mov
les
rep
pop
ja
jl
loope
clc
out
cdq
xor
sbb
or
aad
sar
xor
sbb
stos
lods
fwait
push
movs
mov
mov
retf
push
push
ror
inc
xchg
add
jae
xchg
jns
or
mov
inc
xchg
mov
ja
cli
gs
cmp
call
mov
imul
ds
and
cmp
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
test
mov
inc
or
add
or
add
add
add
inc
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
inc
inc
push
push
mov
cld
loopne
add
sub
jno
dec
cs
push
arpl
mov
(bad)
loop
aaa
call
out
fild
imul
sbb
(bad)
and
repz
adc
jns
pop
pop
enter
es
dec
enter
sub
xchg
int3
sub
(bad)
es
ds
dec
push
iret
js
adc
pop
xor
inc
xor
xor
mov
(bad)
ror
inc
scas
cmp
xchg
inc
mov
outs
sbb
sub
movs
shl
sbb
push
mov
outs
data16
and
add
je
cmc
xchg
outs
add
ins
sti
into
jle
and
mov
lds
pop
add
xchg
or
push
xchg
test
ds
cmp
aam
popf
push
sbb
fiadd
mov
xchg
inc
pop
mov
je
push
arpl
iret
dec
push
cmp
fcomp
xchg
adc
les
mov
pop
cdq
das
cmp
or
jle
mov
int
fmul
ror
sub
xchg
cmp
mov
pushf
in
and
and
mov
arpl
xchg
stc
daa
jle
cmp
push
add
cmp
add
dec
add
pop
fidiv
xchg
out
(bad)
pop
jp
ins
rol
out
jmp
sub
push
sti
ret
icebp
leave
out
iret
outs
jecxz
imul
add
cmp
jno
sub
popf
xchg
sub
xor
popf
cli
push
ds
icebp
add
(bad)
test
repnz
inc
js
and
adc
pop
mov
arpl
sar
mov
sub
xlat
sub
push
dec
stc
imul
lds
add
inc
sahf
scas
fwait
in
or
sbb
cmps
sbb
inc
inc
mov
mov
inc
and
scas
mov
std
movs
push
xor
and
xchg
cmps
sahf
mov
retf
loopne
pop
push
scas
in
inc
jmp
pop
cmp
mov
(bad)
aas
in
dec
inc
iret
pop
push
or
adc
outs
fisubr
or
cmc
jno
xchg
sti
or
stos
sbb
and
ror
push
lods
jl
push
xlat
sub
(bad)
pop
xchg
jmp
nop
add
lods
mov
xor
into
mov
xchg
or
or
pushf
mov
icebp
sar
inc
cwde
mov
jns
or
shl
dec
or
fwait
mov
sub
xchg
icebp
das
cli
std
ss
not
mov
jns
(bad)
cmc
in
cmp
cmps
xlat
aas
mov
leave
fstp
mov
add
(bad)
mov
adc
popf
sub
repnz
dec
shr
push
pusha
loope
loop
dec
loope
scas
pop
pushf
not
pop
icebp
out
ins
xor
daa
scas
loopne
dec
scas
and
cwde
pop
pop
sahf
retf
and
or
mov
daa
rcl
int3
push
sub
jns
cmps
mov
retf
xor
sbb
test
cld
adc
ds
aad
xchg
xchg
imul
xor
and
cs
push
idiv
inc
inc
jle
sub
push
pop
mov
dec
inc
(bad)
mov
ja
sbb
or
or
shl
mov
(bad)
sbb
ins
mov
dec
enter
add
cmps
in
mov
xchg
(bad)
call
pop
out
outs
outs
nop
rol
dec
mov
pusha
outs
test
mov
cld
repnz
inc
mov
inc
push
fs
sub
cmp
dec
sar
shr
jmp
mov
pop
mov
scas
outs
stos
inc
icebp
mov
mov
repz
pop
and
dec
sub
cmp
cld
or
xchg
or
xor
test
das
fisttp
(bad)
call
jge
mov
lock
(bad)
cli
jo
sub
shl
and
xor
scas
xchg
xchg
loop
jge
in
dec
enter
mov
cmp
pushf
pop
stos
test
pop
sbb
repnz
xchg
add
push
dec
and
arpl
pop
pop
mov
mov
mov
sti
ror
sbb
add
sar
push
mov
out
mov
clc
hlt
push
popf
add
or
out
aam
push
mov
sub
dec
add
adc
inc
mov
jl
adc
outs
inc
stc
fdiv
jnp
popf
popa
mov
fsubrp
int
nop
fwait
into
fist
(bad)
das
hlt
dec
ficom
(bad)
in
xlat
fs
inc
mov
popf
mov
mov
outs
sub
repnz
aaa
repnz
sar
dec
in
jbe
mov
sar
ret
jp
push
addr16
aas
fst
dec
push
mov
jecxz
sub
movs
bound
ret
mov
xor
pop
call
jo
test
test
imul
mov
lds
mov
call
xchg
retf
fisttp
ret
mov
jno
out
cmps
pop
repnz
dec
or
fsubr
sbb
mov
pop
(bad)
subps
dec
add
fdivr
jo
mov
leave
ss
out
in
push
adc
mov
shl
cmp
dec
xchg
arpl
call
imul
mov
pop
xchg
sahf
sbb
pop
jecxz
cmps
jge
aaa
enter
mov
ret
mov
jne
outs
add
stos
inc
mov
dec
pop
fmul
pushf
jge
sti
dec
pop
dec
xlat
fbld
std
aas
aas
std
inc
inc
into
stos
xchg
loopne
pop
sub
ror
xor
add
adc
idiv
add
lods
div
lds
mov
push
mov
int3
push
mov
pop
sar
cmp
xor
mov
dec
icebp
sub
sub
cmp
js
sti
pusha
mov
push
ins
mov
fsubr
mov
sbb
jae
inc
mov
test
sbb
mov
cmp
push
xor
inc
pop
or
mov
mov
dec
loop
int
dec
add
out
jb
sub
sub
jno
and
mov
dec
adc
js
cli
mov
xor
inc
cmc
aas
and
jb
mov
movs
fwait
js
push
and
jo
adc
fidiv
sbb
out
xchg
ret
and
adc
in
in
push
enter
movs
jg
mov
mov
test
int
fild
xchg
pop
adc
(bad)
retf
push
mov
shr
pop
ret
and
ins
add
lods
xchg
outs
jne
or
xor
in
call
cmp
cmp
ins
jl
adc
jg
into
pop
inc
rol
(bad)
jp
ja
xchg
jne
push
stc
ins
clc
xor
pushf
iret
daa
mov
lods
adc
cmp
cmps
cmp
addr16
cmps
icebp
in
les
int
jmp
retf
jb
outs
ins
popa
into
out
sub
das
rcl
sub
rep
push
inc
fistp
and
(bad)
and
xchg
ja
mov
das
out
fistp
div
push
jl
fisubr
mov
adc
sbb
push
xchg
fdivr
outs
add
jge
pop
mov
xchg
data16
dec
iret
cld
mov
pusha
sbb
repz
mov
popf
push
mov
lods
jbe
movs
push
cs
add
int
or
pop
pop
jae
add
push
sub
and
xor
pop
mov
jmp
imul
(bad)
mov
xor
inc
xchg
xchg
int
repnz
imul
mov
not
jne
das
cmps
jmp
daa
(bad)
neg
in
ret
and
sub
xor
dec
pop
fwait
adc
cld
sub
ja
ins
push
fwait
js
pop
xchg
jle
jae
mov
pop
scas
mov
mul
rcl
sbb
mov
sti
pop
push
push
in
(bad)
aam
dec
cli
retf
in
cwde
std
inc
test
ffreep
add
inc
jbe
sub
jae
cmp
add
push
rcr
jnp
sub
cmp
jae
ins
adc
mov
jecxz
cmp
aaa
xlat
cmps
sub
jbe
es
hlt
add
mov
xlat
enter
ja
mov
icebp
js
test
loop
mov
dec
xchg
rol
and
xchg
(bad)
mov
adc
psubw
ss
jp
outs
in
fisubr
and
sub
lods
xor
or
sbb
cdq
push
dec
push
retf
pop
aam
jo
inc
sub
mov
das
js
iret
pop
jge
mov
cmp
call
lahf
push
sub
add
paddsb
adc
je
cli
add
test
push
push
push
call
mov
cld
push
inc
addr16
push
or
mov
dec
mov
movs
loope
and
inc
inc
pop
cli
rol
loope
les
jnp
xchg
mov
int3
push
in
popa
xor
push
push
out
fs
jmp
pop
pop
outs
sbb
ret
xchg
mov
jmp
ss
stos
push
pusha
inc
mov
or
add
inc
lds
mov
test
sub
in
sub
jno
inc
dec
imul
add
xor
or
cmp
cmp
leave
in
cmps
inc
mov
pop
fs
fadd
push
mov
cmps
js
jbe
in
test
mov
mov
cmp
jecxz
add
push
and
(bad)
xchg
and
mov
mov
rcl
test
dec
fild
inc
adc
jbe
bound
push
xor
in
or
inc
outs
pop
add
popf
xchg
sub
push
mov
sbb
ss
push
xor
jns
cmc
lods
sub
mov
mov
(bad)
(bad)
fstp
pop
push
int
xchg
push
aad
and
aad
test
retf
cmps
test
or
mov
sbb
or
inc
cwde
retf
sbb
movs
int
pop
enter
push
push
dec
lea
je
xor
push
hlt
xor
mov
mov
inc
ja
xor
fcom
cwde
mov
mov
push
stos
xchg
dec
xor
xchg
mov
loop
push
adc
scas
sar
idiv
cmp
rol
popf
jne
mov
sar
arpl
mov
dec
adc
in
mov
ret
test
sbb
or
add
(bad)
xor
jp
dec
je
cmps
adc
leave
popf
xchg
rcl
mov
nop
xor
push
clc
pop
nop
stos
mov
xchg
shl
outs
aaa
sti
or
popa
mov
(bad)
mov
jp
andnps
add
dec
fnstenv
xchg
mov
mov
sub
repnz
(bad)
fsub
pop
sbb
lock
pop
xor
fadd
pop
mov
jne
imul
add
and
dec
int
rol
pushf
sbb
cwde
shl
and
out
cmp
push
sub
lahf
mov
push
or
sahf
fdiv
outs
fiadd
mov
sahf
cmp
ins
pop
loope
inc
in
addr16
pop
inc
and
pop
scas
push
or
or
add
dec
sub
push
stc
fidivr
pop
jecxz
cmps
retf
nop
rol
nop
test
push
or
jae
out
movs
push
cmp
das
lods
cmc
pop
mov
xchg
movs
imul
outs
xchg
mov
je
mov
lods
ret
rol
cli
add
sbb
out
sub
dec
dec
nop
cmp
mov
rol
xlat
push
bound
fs
add
std
xchg
icebp
xlat
sub
sub
xchg
xchg
std
xor
(bad)
cmp
scas
ret
adc
cwde
mov
and
imul
or
movs
ret
cmp
out
mov
(bad)
mov
xchg
cmps
nop
inc
xor
adc
sahf
jl
mov
xchg
pop
inc
jae
nop
outs
xor
ds
push
dec
and
adc
daa
jg
pop
(bad)
sbb
fwait
cli
addr16
(bad)
xchg
xchg
inc
sub
scas
outs
jle
push
xor
cmp
arpl
sbb
mov
out
xchg
or
scas
mov
cwde
add
sbb
ins
aam
sub
mov
shl
lahf
or
and
test
repz
xor
xchg
test
sub
hlt
test
addr16
inc
xor
adc
out
jecxz
or
adc
shr
or
lods
xor
idiv
push
pop
sbb
inc
xor
or
mov
mov
je
inc
inc
loopne
mov
xchg
pop
pop
mov
lahf
(bad)
imul
pop
lods
dec
pop
pop
cwde
or
ss
loop
and
fs
fbstp
cmp
mov
repnz
and
jbe
div
aas
cld
mov
(bad)
test
pop
mov
xor
imul
jle
cmps
mov
xor
xchg
push
xchg
sbb
pop
(bad)
mov
mov
dec
push
neg
inc
into
and
movs
jmp
mov
icebp
imul
adc
push
pop
test
cmp
scas
loopne
adc
ficomp
sar
cmp
mov
popa
imul
jb
test
and
addr16
aad
dec
push
loop
add
mov
mov
pop
pop
clc
cmp
jl
push
xchg
sbb
mov
outs
add
mov
dec
out
cwde
push
and
shl
adc
adc
mov
ja
xor
jg
scas
mov
enter
add
int3
add
ror
sub
push
push
and
repz
les
or
and
mov
jg
or
imul
mov
dec
jl
jp
iret
scas
dec
xor
fimul
and
xchg
adc
cmps
out
aam
pop
xchg
xor
xor
mov
pusha
cmp
xchg
xor
pop
add
xchg
pop
xchg
inc
jg
add
lahf
jmp
inc
push
mov
cli
mov
and
add
loop
push
pop
cmp
loop
into
mov
pop
add
sub
xchg
push
daa
sbb
add
pop
cmp
ins
or
mov
dec
xlat
cli
into
(bad)
xchg
(bad)
fsubp
(bad)
or
mov
sahf
lea
add
outs
xor
mov
ja
daa
add
js
loop
push
inc
sub
cmp
adc
ins
aas
std
cmps
mov
sub
lahf
push
add
cmps
pusha
mov
fcomi
pop
loopne
adc
scas
imul
ret
mov
pusha
cmp
leave
or
fild
inc
push
les
ret
lahf
xchg
jb
div
jp
and
push
repnz
fld
sbb
fld
and
dec
jmp
nop
icebp
mov
cvtps2pi
movs
cli
jb
xlat
mov
push
js
add
and
mov
sbb
int
sub
dec
lods
cli
xor
mov
inc
add
test
sbb
dec
add
int
pop
sbb
lock
xchg
test
add
movntq
sub
xchg
retf
push
mov
ss
adc
sub
ficom
aaa
inc
jno
add
mov
add
sbb
mov
int
mov
scas
or
aam
push
test
iret
aas
dec
xlat
fadd
or
inc
jmp
lds
push
in
int
fwait
out
mov
mov
cmc
ret
test
out
aad
dec
arpl
lods
adc
cs
and
pop
push
fiadd
dec
mov
mov
sub
mov
mov
outs
out
xchg
mov
cmp
loopne
stos
push
stos
inc
inc
xchg
scas
fadd
sbb
ins
adc
dec
xlat
in
(bad)
adc
and
and
jg
jae
push
daa
loope
outs
jl
das
mov
sub
shl
hlt
sbb
test
add
call
aam
cmp
popf
and
sub
add
xchg
iret
mov
pop
out
mov
adc
mov
fwait
ins
inc
jno
jl
push
push
loop
pop
scas
fimul
cli
test
xchg
faddp
cdq
mov
sub
dec
dec
test
dec
xor
in
ds
xor
jmp
(bad)
adc
add
imul
mov
stc
jbe
jl
movs
(bad)
cmp
inc
cvtps2pd
jae
cdq
inc
or
daa
cmp
sub
xchg
shl
xor
mov
jl
retf
ret
and
jns
(bad)
hlt
mov
stos
leave
jmp
sbb
call
cdq
mov
test
lock
ins
mov
inc
mov
push
add
es
outs
mov
lahf
mov
jmp
cmps
loope
mov
lock
ds
nop
inc
mov
add
jg
fld
xchg
inc
scas
or
inc
and
pop
pop
jecxz
lds
xchg
ss
(bad)
iret
pushf
jmp
(bad)
jge
pop
mov
xchg
test
lods
(bad)
adc
popa
cmp
lods
outs
mov
mov
das
or
stos
rol
or
pusha
cmp
sbb
xor
push
push
sbb
adc
icebp
bound
test
loopne
sbb
xor
dec
imul
test
mov
fwait
or
add
xchg
lods
mov
mov
push
dec
inc
int
adc
test
fcmovbe
test
dec
or
test
ud0
dec
xchg
in
outs
jecxz
cmp
adc
jbe
dec
ret
(bad)
or
cmp
jns
fnstenv
cdq
xchg
sub
pusha
add
inc
sub
pop
jecxz
iret
mov
push
mov
sbb
retf
lds
loope
out
cdq
pop
loope
std
pop
add
into
clc
mov
mov
pop
xchg
dec
and
pop
jge
mov
cmp
repnz
mov
sti
inc
cmp
aam
mov
call
cmps
or
sti
lahf
outs
inc
cmp
cmp
test
jle
mov
mov
cmp
sbb
sahf
and
pushf
push
add
xchg
adc
pop
mov
nop
mov
outs
sbb
add
xchg
lods
pushf
outs
jne
mov
adc
nop
outs
pushf
jmp
mov
jecxz
outs
pop
mov
fimul
pushf
fnstcw
mov
mov
mul
rcr
and
jecxz
les
xor
retf
js
les
add
push
or
mov
push
mov
dec
test
push
test
pop
mov
ins
mov
pop
test
(bad)
shl
in
jo
imul
(bad)
adc
ds
sbb
sub
cmp
add
retf
or
mov
loopne
stos
ret
loop
ret
int3
pop
cmc
aas
cmc
retf
and
cmps
stos
loopne
xor
aas
jae
std
xor
xor
loopne
mov
test
pop
sbb
jge
dec
xchg
pop
push
push
pop
pop
xchg
and
pop
mov
xchg
outs
shl
cli
jmp
mov
popf
mov
or
xchg
push
sbb
adc
mov
mov
and
push
add
mov
pushf
push
push
lods
jecxz
bound
inc
cmp
int
movs
cwde
fisub
push
nop
sbb
cdq
jg
aad
das
xor
iret
les
and
mov
movs
idiv
in
sub
sbb
sub
cmps
push
mov
(bad)
add
push
push
pop
and
sbb
xchg
(bad)
cmp
adc
xchg
cmp
stc
or
cmp
mov
cmp
into
ins
ins
xchg
movs
cmp
xchg
retf
adc
sub
in
fistp
inc
out
std
imul
cli
aad
je
(bad)
neg
pop
mov
jae
jmp
push
les
mov
out
stos
cmps
push
xor
(bad)
jl
aas
xor
mov
sub
xor
push
sub
test
imul
imul
lods
xor
sub
mov
fadd
(bad)
dec
into
push
mov
jae
in
or
pushf
jp
push
pop
int
(bad)
and
les
aas
mov
pop
shl
jl
int3
xor
ins
retf
inc
jecxz
sti
repnz
sbb
clc
out
xchg
(bad)
data16
inc
ss
and
repnz
mov
and
sbb
sbb
pop
mov
xchg
maxps
ret
mov
in
sub
bound
add
mov
(bad)
dec
adc
adc
movs
dec
mul
loopne
test
bswap
lock
out
jmp
cmp
inc
mov
jno
mov
sub
in
loopne
cmps
push
lock
dec
push
arpl
sub
fs
cld
pop
out
sbb
add
sbb
call
jae
mov
push
and
xchg
and
mov
out
cmp
aas
dec
or
pop
arpl
and
call
fistp
ja
enter
push
jmp
clc
mov
pop
add
arpl
pop
scas
mov
sub
call
push
out
cs
fisttp
mov
push
fld
leave
sub
pop
jecxz
push
pop
inc
mov
dec
cmp
pushf
adc
mov
loop
or
mov
(bad)
arpl
mov
fcom
push
mov
or
loop
mov
add
and
mov
js
les
dec
test
sar
xchg
mov
add
push
jmp
shr
mov
shr
xchg
call
jo
or
loopne
xlat
je
inc
or
jp
leave
push
xchg
xchg
xor
fcomp
fld
es
outs
sti
push
adc
(bad)
shl
cmc
mov
inc
pop
or
push
mov
sub
dec
ins
enter
(bad)
lock
fdivr
and
mov
push
mov
jnp
pop
sub
mov
dec
xchg
retf
popf
sub
das
test
xlat
aad
adc
fucomp
fdiv
add
inc
or
jecxz
(bad)
cmc
mov
mov
sar
js
nop
and
call
ss
movntq
aas
sar
(bad)
dec
fadd
pop
inc
icebp
mov
sbb
ds
sbb
(bad)
xchg
cs
mov
(bad)
xor
or
xor
push
sub
daa
mov
mov
dec
mov
cmp
das
dec
push
in
in
and
and
imul
sub
sbb
sbb
es
sub
out
ja
clc
bound
stc
sbb
fild
pusha
shr
adc
icebp
stos
test
imul
movlps
push
xchg
sbb
data16
cmp
cmp
and
aas
lea
lea
dec
sti
jmp
cmps
out
pop
or
or
shl
and
idiv
pop
cmps
test
rcl
addr16
mov
add
popf
cmp
hlt
and
add
xchg
ss
sahf
mov
popaw
xor
pushf
mov
pop
mov
mov
sub
or
inc
int3
jb
pop
daa
and
adc
adc
mov
jge
cmp
fsubr
push
cmp
xor
sub
mov
aas
sub
fidivr
adc
rcr
int3
hlt
add
jne
xchg
mov
mov
out
call
push
add
dec
sahf
repnz
(bad)
(bad)
into
push
mov
hlt
xchg
adc
retf
jns
(bad)
pop
addr16
xchg
xchg
xchg
and
mov
ss
outs
push
jae
es
js
fisubr
jmp
xor
(bad)
mov
ins
adc
out
jge
fld
and
xchg
mov
test
push
iret
cdq
cmps
xor
iret
push
adc
jne
stos
jbe
dec
lahf
int3
pop
movs
mov
xchg
test
mov
xchg
add
daa
(bad)
pop
pop
xchg
inc
iret
mov
out
add
test
pop
jb
push
outs
xchg
fs
jle
push
cmp
push
bound
pop
out
mov
addr16
mov
mov
sbb
out
test
jno
nop
call
mov
ins
and
repz
cmp
sar
mov
mov
mov
ror
mov
sahf
stos
rol
lea
ss
test
pop
call
jmp
mov
mov
mov
jae
push
push
fsubr
lds
test
out
sbb
js
out
sbb
retf
sbb
jae
add
mov
movd
imul
cld
xchg
push
jb
inc
xor
xchg
sub
cmp
nop
add
scas
cmp
xor
mov
add
stc
ret
(bad)
push
push
push
pusha
popf
mov
ins
sbb
sub
arpl
in
cmps
dec
xchg
mov
push
push
sub
or
stos
test
fiadd
cmp
aas
in
cmp
ret
adc
popa
mov
out
push
pop
fisttp
push
xchg
mov
mov
jae
push
and
sub
add
neg
dec
in
mov
dec
xor
aad
add
and
daa
mov
imul
pop
pop
lock
ret
mov
pop
shr
ficom
outs
ds
mov
xor
sbb
(bad)
aad
daa
jl
repz
test
dec
in
or
shl
test
and
call
add
pop
xchg
jmp
hlt
fwait
sub
push
scas
adc
test
mov
xchg
mov
fs
xchg
cld
cld
stos
mov
pop
and
xchg
and
retf
pop
cmp
or
push
push
xchg
dec
xchg
jne
call
ffreep
ss
mov
ret
(bad)
test
xchg
popa
sti
xchg
(bad)
imul
lods
xlat
push
xor
adc
test
or
mov
sbb
inc
inc
sub
enter
push
fist
mov
mov
cmp
(bad)
inc
daa
int3
jmp
or
leave
sbb
cmp
mov
hlt
das
xchg
aas
mov
inc
jno
dec
cmp
and
arpl
and
mov
cmp
loopne
adc
adc
or
ins
aaa
add
sub
arpl
outs
repz
call
mov
out
mov
xchg
mov
frstor
ret
mov
fild
stos
xchg
jbe
(bad)
and
sbb
cmp
cmp
xchg
ja
mov
out
rcr
adc
(bad)
jge
cwde
push
sbb
fcmovnu
inc
cdq
enter
iret
jno
push
add
add
sub
and
aaa
pop
pop
loopne
repz
cld
scas
inc
leave
xor
xor
jne
cs
lods
idiv
js
mov
add
(bad)
int
jae
inc
ja
inc
ret
gs
xchg
movs
push
add
xchg
mov
pop
jle
test
loopne
stos
or
pusha
mov
sub
imul
mov
adc
mov
(bad)
int
adc
jp
adc
xchg
scas
dec
sub
jmp
dec
mov
add
mov
or
(bad)
add
dec
(bad)
or
mov
icebp
mov
sbb
and
cmps
aad
xor
add
pop
mov
mov
shl
std
push
push
add
push
sbb
mov
loope
dec
add
fwait
xchg
sbb
jg
cdq
mov
repnz
jl
enter
add
push
jmp
pusha
pop
mov
loope
addr16
adc
pop
mov
fdivr
inc
outs
ins
stos
out
and
xchg
loop
dec
fisub
imul
mov
mov
xchg
fisubr
mov
(bad)
jb
inc
rcl
adc
or
je
mov
loopne
mov
std
and
aam
xchg
rcl
pop
sub
enter
mov
adc
test
push
nop
push
mov
aam
cmp
add
jb
es
sub
push
enter
sub
push
inc
sahf
es
in
test
dec
test
cdq
add
lea
or
lods
xchg
push
push
imul
sub
fcmovu
or
add
or
(bad)
xor
and
cmps
cmp
cld
les
out
cmp
push
sbb
adc
sbb
xor
jo
daa
mul
dec
mov
ret
int3
mov
(bad)
xor
out
adc
movs
pop
pop
jnp
and
in
cmps
xchg
(bad)
movs
adc
jle
xor
jmp
scas
inc
inc
pop
xchg
or
aad
mov
dec
inc
loop
aaa
ror
scas
add
hlt
add
fidiv
add
sahf
jbe
movs
loope
idiv
push
cs
cmp
movs
or
test
repz
inc
stos
pop
dec
aaa
icebp
ror
pop
xchg
xchg
in
push
adc
pop
mov
in
dec
cmp
mov
sbb
mov
or
sbb
pusha
jmp
fcmove
xor
ret
cs
scas
dec
ins
sub
xchg
inc
test
xor
aad
aas
inc
ror
jae
out
dec
mov
fiadd
mov
pusha
pop
adc
mov
pushf
mov
fstp
push
and
or
cdq
jge
jle
jecxz
or
cmps
sub
and
jp
dec
gs
sub
push
cmp
sbb
jle
mov
or
cmps
push
imul
push
rol
xchg
jmp
xor
jns
stos
inc
inc
mov
in
push
scas
adc
mov
or
sti
mov
jge
popa
xchg
or
xchg
movs
inc
pop
mov
pop
into
push
mov
scas
fnstenv
mov
fimul
ja
jp
adc
cmp
gs
jns
sbb
push
ret
mov
mov
jge
cmc
in
lods
movs
pop
je
or
mov
jnp
xlat
add
dec
jb
and
pop
(bad)
clc
sbb
xor
je
ja
mov
rol
aas
adc
and
jae
jge
pop
ret
dec
xchg
cmps
pop
pop
jmp
sub
lods
pop
call
rcr
push
bound
ret
and
jb
xor
cmp
mov
fsubr
xor
push
pushf
jge
out
fstp
cmp
adc
mov
cmp
add
aad
jg
cwde
push
es
outs
push
stc
sbb
nop
pusha
test
stc
lds
cmp
jnp
jg
xchg
sub
cmp
mov
mov
repnz
xor
test
pop
retf
fucomp
sbb
jmp
jl
ins
and
push
xchg
test
cmc
inc
fcmovnu
loop
push
int
mov
addr16
jmp
jmp
jnp
shr
or
bound
adc
aad
push
pop
mov
test
pushf
dec
jo
jb
(bad)
mov
lods
pop
lea
sub
dec
or
ds
out
mov
dec
jbe
mul
loopne
xchg
sbb
call
leave
push
pop
inc
clc
adc
sbb
test
stos
and
shl
fadd
xor
repnz
aam
inc
lods
jecxz
clc
ins
jcxz
and
add
lock
adc
push
cwde
cmp
sub
mov
xchg
retf
stos
add
lods
stc
mov
popf
loopne
jmp
pop
cmp
mov
cwde
and
test
push
cmp
and
shl
add
cmp
push
xor
or
pop
mov
mov
xchg
cmps
mov
lea
mov
mov
rcr
push
movs
out
call
jbe
mov
mov
sbb
es
iret
loopne
xor
test
dec
pop
xor
sbb
stos
push
popf
push
xor
gs
inc
mov
jne
into
les
xchg
xchg
inc
push
pop
aam
test
sar
push
sub
add
xor
push
sub
fiadd
mov
xor
mov
aad
mov
inc
cli
mov
mov
test
fisubr
das
push
xlat
jo
dec
or
cmps
rcl
ret
and
push
sar
movs
mov
mov
daa
and
(bad)
add
adc
xor
out
cli
out
xor
mov
rol
push
mov
mov
xchg
nop
aam
cmps
in
push
mov
or
jl
push
cmp
push
pop
std
cmp
aaa
rep
push
pop
(bad)
jo
pop
xchg
jg
arpl
lods
in
lods
imul
mov
sti
mov
cli
jbe
into
cmp
cmp
fnstenv
xor
add
cdq
fwait
add
dec
call
outs
fs
cmp
int3
lea
cs
xor
leave
adc
jnp
or
mov
(bad)
mov
mov
adc
jp
(bad)
mov
hlt
dec
or
(bad)
scas
and
int
push
mov
daa
xchg
mov
mov
aam
xchg
mov
aaa
mov
dec
xchg
in
repnz
sub
xchg
jl
call
mov
jo
leave
rol
xor
inc
ss
cmps
cli
jl
ss
add
push
fsubr
cld
pop
xor
mov
or
pop
sahf
sar
mov
enter
adc
mov
xchg
fsubp
in
sub
bound
jle
je
push
call
(bad)
mov
xchg
push
dec
stos
pop
in
retf
(bad)
pop
sbb
aam
sbb
adc
add
jp
lock
mov
shl
push
or
xchg
pop
dec
push
fwait
jmp
mov
int
fild
xchg
mov
dec
lock
mov
scas
rcr
sub
mov
inc
imul
xchg
pop
xchg
cwde
sar
out
jge
into
add
rol
nop
sbb
push
jo
mov
lods
or
pop
add
jecxz
lock
jns
adc
or
je
aas
cmp
jmp
aaa
sub
cmp
loope
aad
sbb
push
cwde
cld
repnz
inc
cmp
sub
cmp
aam
repz
fist
or
les
clc
jl
call
xor
stos
outs
mov
push
inc
mov
sbb
mov
fldenv
push
shr
xor
in
mov
mov
inc
push
jo
push
out
mov
test
rcr
add
mov
and
dec
mov
mov
sar
or
mov
sub
dec
movs
cmp
pusha
cwde
mov
sub
mov
mov
in
push
imul
popa
xchg
or
rep
jecxz
pop
retf
inc
mov
icebp
movs
bound
fwait
dec
push
pop
xchg
or
lods
scas
mov
xor
mov
shl
int3
jnp
pop
adc
cmp
xchg
popf
in
adc
imul
cmp
out
pusha
mov
lahf
addr16
cmp
mov
cs
jbe
das
jmp
lock
pop
push
imul
and
fld
add
push
push
scas
imul
pop
jne
add
out
imul
popf
inc
imul
add
(bad)
int3
mov
push
imul
cmc
(bad)
xor
iret
sti
or
sti
jl
and
ss
mov
fsub
and
dec
xchg
cmp
loope
into
popa
int3
sbb
cmc
int
mov
sub
clc
adc
add
inc
cld
pop
call
fldenv
arpl
retf
mov
jb
xchg
dec
push
pop
add
mov
shr
ret
nop
jp
outs
dec
push
push
cmps
repz
(bad)
mov
xchg
rcl
loope
and
add
stc
fisttp
push
les
add
adc
xor
mov
push
in
outs
xchg
stc
dec
sub
add
push
sbb
shl
or
out
cmp
mov
jns
mov
outs
mov
ja
mov
iret
sbb
pop
xor
cmp
inc
out
push
pop
mov
pushf
adc
rcr
js
adc
lahf
jb
icebp
pop
xor
sbb
fsubr
lahf
xchg
mov
mul
mov
adc
in
sub
fcmovnbe
jne
cmp
cli
int3
add
xchg
call
inc
push
push
pusha
sub
retf
out
cli
sar
pushf
mov
xchg
sub
inc
out
sahf
retf
cmp
js
or
aam
sub
jnp
outs
and
arpl
loope
mov
fsub
add
inc
or
ret
mov
jno
or
mov
test
cmp
in
or
sub
mov
hlt
mov
dec
mov
xor
mov
adc
mov
sar
add
ins
ss
sub
(bad)
cmp
dec
pop
jle
loop
call
scas
ror
adc
inc
xlat
cmps
jne
je
dec
and
dec
stc
mov
jb
test
outs
jmp
mov
sbb
shr
popa
adc
add
push
dec
fldcw
adc
cmp
ds
pop
push
pop
or
sbb
push
xor
fcmovb
repnz
scas
aas
push
stos
push
stos
idiv
jns
mov
sub
push
mov
add
es
in
adc
mov
fnstsw
dec
dec
ficom
ror
lods
cmp
dec
inc
mov
stos
gs
mov
mov
xlat
in
es
xor
bound
lea
sbb
dec
jmp
jl
js
mov
dec
ss
repz
out
(bad)
xchg
sub
or
pop
cwde
cmps
sti
aam
inc
mov
arpl
dec
fadd
iret
popf
cli
mov
dec
out
mov
les
add
ss
pop
in
add
inc
popf
push
pusha
or
out
inc
mov
dec
pop
icebp
fbld
jle
and
repz
cmc
loopne
pop
xor
push
enter
xchg
es
cdq
mov
mov
or
jbe
imul
dec
ret
xchg
push
inc
(bad)
cdq
xor
enter
sbb
dec
in
xor
adc
mov
gs
xor
push
pop
mov
jmp
and
cdq
xchg
xor
dec
in
sub
out
sub
out
mov
in
add
fs
push
sub
push
cmp
shl
jge
iret
push
cmps
mov
inc
xor
bound
je
inc
mov
gs
mov
cmp
stc
or
test
in
push
add
ja
add
ins
push
push
push
shl
mov
int
inc
loope
cmc
cmc
xchg
and
jp
dec
gs
cmp
dec
pushf
inc
int3
fisubr
out
cmp
add
sub
pop
pushf
xchg
out
fwait
dec
pop
add
imul
mov
sub
(bad)
nop
retf
in
(bad)
jae
rcl
cmc
cmc
test
inc
and
call
mov
sub
outs
retf
out
in
mov
mov
mov
adc
adc
xchg
mov
mov
cwde
popa
lods
inc
add
pop
xchg
pop
shl
bound
outs
or
and
mov
jle
mov
popf
aad
sbb
xchg
mov
inc
mov
sub
es
mov
xchg
mov
lock
add
aas
add
adc
or
cmp
add
in
gs
jp
xor
xor
pop
push
daa
imul
call
mov
mov
sbb
xchg
mov
arpl
mov
loope
inc
cmp
add
add
lahf
xor
arpl
mov
dec
and
(bad)
retf
sahf
icebp
in
aad
sub
std
mov
sar
mov
cld
cmps
addr16
aad
clc
arpl
adc
repz
pop
ja
jle
arpl
xor
jge
dec
vcvttsd2si
push
sbb
pusha
push
and
inc
aaa
lea
add
mov
and
adc
push
rcr
cmp
adc
out
push
ret
inc
jmp
sbb
jmp
into
adc
xchg
sti
inc
or
mov
jb
xor
inc
mov
dec
inc
fldcw
mov
dec
jmp
push
jne
add
push
lea
daa
aaa
inc
jmp
retf
xchg
out
(bad)
xchg
dec
add
push
push
mov
dec
dec
cld
movs
in
mov
mov
and
cmp
pushf
das
aad
xchg
nop
cdq
inc
arpl
cmp
adc
add
jmp
es
adc
dec
mov
mov
idiv
xchg
cmp
cld
sbb
mov
ret
and
or
and
xor
in
xchg
jne
push
les
xor
dec
outs
(bad)
xchg
in
in
cwde
push
leave
dec
enter
push
bound
mov
cwde
add
and
fs
mov
in
(bad)
idiv
push
xlat
ss
shr
inc
push
je
iret
call
sbb
data16
sti
jl
stos
pop
inc
test
jmp
scas
jne
pop
sbb
add
retf
jno
push
(bad)
jmp
pushf
add
mov
dec
inc
ins
jge
clc
xlat
(bad)
fiadd
aad
pop
gs
stos
rol
inc
cli
cmp
inc
clc
retf
add
xchg
iret
icebp
int
xor
daa
add
sbb
mov
leave
adc
xlat
adc
mov
xchg
mov
mov
pushf
ja
dec
add
inc
mov
xor
xchg
and
sti
sbb
aam
stos
sbb
fdivr
test
repz
(bad)
pop
or
cmp
fwait
xor
mov
xor
sysexit
data16
out
adc
xchg
cmps
pop
dec
add
(bad)
out
jnp
scas
cmps
popa
sub
xchg
ja
jb
mov
(bad)
jo
test
pop
fadd
scas
or
sti
in
adc
or
fsub
mov
sbb
stos
pop
push
mov
push
pop
daa
sbb
inc
jmp
xor
jb
in
enter
xor
jo
sbb
or
in
xor
loopne
mov
ss
adc
xchg
jns
inc
imul
jl
loopne
ins
mov
(bad)
mov
dec
repnz
mov
xor
out
sbb
inc
or
sub
cmp
add
cmp
pop
jo
movs
rcl
push
sbb
mov
adc
mov
adc
mov
popa
push
mov
int
int
push
pop
add
add
dec
inc
dec
inc
scas
inc
pusha
or
sub
add
xor
xor
fs
jecxz
je
sahf
jne
jne
jne
outs
cdq
dec
stos
push
push
outs
mov
cmp
inc
inc
pop
xchg
outs
mov
rcr
add
(bad)
add
nop
fsub
test
sbb
or
xor
xchg
fsubr
in
scas
aam
not
pop
push
pop
test
jae
dec
jl
mov
ret
outs
fld
jmp
pop
out
jg
jl
jns
shl
ror
mov
mov
imul
jg
inc
(bad)
gs
js
dec
mov
daa
xchg
sub
mov
lea
mov
in
sbb
xchg
lea
xchg
mov
test
int
retf
dec
(bad)
dec
mov
push
push
mov
jp
addr16
sbb
daa
scas
aas
cmp
cmps
xor
or
sub
(bad)
out
out
cld
inc
int3
xlat
hlt
adc
cld
popa
ficomp
loope
dec
int3
leave
hlt
pop
gs
gs
gs
push
push
mov
add
add
add
sub
pop
sti
cmp
das
pop
pop
cdq
xor
mov
inc
sbb
(bad)
push
adc
dec
ja
mov
pop
cmp
pop
rcr
icebp
jp
inc
loop
jnp
mov
aas
push
sub
push
cli
clc
(bad)
clc
call
leave
cmc
aam
jecxz
lds
aam
aam
aam
call
clc
and
and
push
icebp
mov
add
add
xor
ss
arpl
fld
cdq
pop
xchg
pop
cdq
pop
repnz
aam
lods
dec
ja
je
adc
pusha
inc
js
inc
(bad)
jbe
dec
aaa
ins
pop
jno
inc
hlt
xchg
xchg
xchg
shr
sub
in
(bad)
jmp
inc
gs
dec
push
jno
push
cmovle
leave
(bad)
js
mov
in
sbb
nop
loop
fidiv
lds
out
push
(bad)
fxtract
jne
cdq
ficom
pop
lods
adc
int3
nop
pop
mov
mov
xchg
mov
mov
test
fcomp
jo
jbe
inc
test
mov
inc
mov
xchg
jg
inc
xchg
dec
enter
push
cmovl
hlt
sbb
mov
pop
adc
xor
adc
and
sbb
xchg
pop
adc
xor
les
and
retf
or
retf
mov
cmps
out
adc
mov
xor
ret
out
shl
shl
cli
inc
out
rcl
outs
push
sub
dec
pop
js
inc
into
test
test
test
call
mov
test
cli
mov
pop
xchg
rcl
xlat
(bad)
(bad)
fs
repz
push
std
xchg
lds
outs
or
adc
inc
mov
bound
inc
or
cmp
je
inc
cmps
jl
pop
rol
add
dec
lods
je
inc
popf
jl
mov
mov
mov
test
mov
xchg
ins
test
cwde
pusha
mov
stc
test
mov
xchg
jae
repz
dec
mov
into
test
idiv
mov
push
in
(bad)
ja
xchg
mov
xchg
sub
cdq
fmul
(bad)
sar
in
mov
pop
jecxz
fidivr
add
es
or
sub
xor
cmp
add
sub
(bad)
sub
xor
fidivr
add
es
fisub
gs
push
xchg
mov
xchg
xor
mov
(bad)
rcr
cli
das
ret
sbb
sbb
mov
dec
push
dec
push
dec
push
add
jge
inc
or
or
or
stos
into
jno
jno
(bad)
leave
mov
dec
sub
pop
iret
jg
bound
mov
xor
or
or
pop
loopne
(bad)
xor
jmp
ret
sar
mov
ds
jmp
inc
hlt
ds
ret
ror
out
and
xchg
sbb
aas
or
mov
mov
sbb
mov
ss
cmc
sub
pusha
test
pusha
push
dec
mov
pop
movs
inc
push
jnp
dec
and
sub
sub
or
stos
fbld
cmps
loopne
xlat
and
sbb
xchg
xlat
mov
mov
mov
(bad)
stos
icebp
add
pushf
sbb
push
mov
xor
fdiv
daa
mov
int3
adc
or
sub
xor
or
cmp
stos
and
cmp
std
xor
or
cmp
push
jmp
sti
push
add
loop
loop
loop
into
push
stc
inc
fild
(bad)
gs
div
xor
stc
dec
fbstp
sar
leave
jmp
into
dec
stc
mov
mov
sahf
add
int
cs
mov
nop
cmp
jmp
xor
cs
sbb
fld
pop
adc
sbb
test
test
std
dec
std
dec
out
rol
jb
in
mov
fisubr
rcl
(bad)
and
push
bound
leave
or
lds
and
mov
(bad)
out
outs
sti
jl
jne
jmp
retf
inc
loopne
(bad)
push
fdivrp
loopne
rol
call
popa
loopne
(bad)
push
fmulp
loopne
shr
call
sub
or
lea
inc
add
push
sub
adc
movhps
and
jmp
pop
mov
and
int
jns
ja
movs
loopne
jg
xlat
mov
xchg
movs
mov
push
cdq
inc
cmp
mov
xchg
mov
mov
adc
clc
mov
mov
xchg
mov
mov
add
sbb
add
or
add
adc
push
add
inc
and
add
loop
add
push
add
jno
add
movs
ret
outs
cmp
add
add
mov
cmp
add
xchg
add
cmps
dec
add
dec
lea
add
fwait
add
mov
inc
add
pushf
push
add
pop
loopne
add
mov
add
fld
add
add
xor
cli
add
mov
add
add
pinsrw
(bad)
add
test
add
mov
add
cmps
inc
add
add
repz
add
jne
add
add
loope
add
in
daa
add
inc
test
add
test
add
or
add
dec
add
es
add
call
mov
add
rol
add
add
dec
cmp
add
in
jmp
in
add
clc
sbb
add
xchg
add
ret
add
lea
add
add
sbb
add
xchg
or
add
sbb
add
fild
add
sahf
add
js
add
and
add
pop
mov
add
add
mov
add
ja
add
in
or
add
add
adc
add
daa
and
add
sub
add
add
jmp
add
(bad)
dec
add
dec
and
add
add
jne
add
push
xor
add
sbb
add
add
jmp
test
add
bound
add
mov
add
jl
add
xor
add
add
xchg
push
add
and
add
and
add
je
add
dec
sbb
add
mov
add
lods
add
mov
add
add
pushf
add
je
add
test
add
dec
jno
add
jbe
add
add
mov
dec
out
add
mov
add
scas
mov
add
add
outs
pop
add
or
mov
cdq
add
(bad)
rol
add
add
adc
add
jge
add
add
add
add
add
clc
and
add
popf
add
sub
add
ret
add
int3
xchg
add
imul
add
add
nop
scas
add
mov
add
inc
add
add
fadd
add
jno
add
adc
add
scas
jae
add
add
rol
add
sub
add
xor
add
fucomip
add
(bad)
xchg
add
mov
add
add
add
out
add
int3
xchg
add
test
outs
add
xor
add
test
add
add
movs
add
add
add
inc
dec
add
and
add
movs
cwde
add
cmp
add
(bad)
nop
add
lds
add
jge
add
bound
add
icebp
add
mov
add
dec
push
add
mov
xchg
add
jg
add
outs
add
cmc
dec
add
xchg
pushf
add
inc
add
dec
xchg
add
sahf
add
mov
mov
add
pop
add
sub
mov
add
cmc
add
adc
add
add
mov
add
fs
add
mov
add
test
lods
add
sub
add
add
popa
and
add
add
sub
add
jl
add
add
call
add
int3
aam
add
add
cmp
add
add
adc
sub
add
test
add
add
out
add
add
add
loope
add
add
dec
lods
add
inc
dec
add
push
mov
add
or
add
sbb
add
les
add
mov
das
add
pop
or
add
xor
add
inc
add
push
add
es
add
add
cmp
add
push
repz
inc
fild
add
pop
add
std
fiadd
add
or
add
outs
add
and
add
adc
add
ins
add
add
fwait
add
and
mov
sbb
add
add
jo
add
in
jg
add
pop
add
shr
add
or
and
add
or
add
sbb
add
jmp
add
push
add
rcl
add
add
cmp
xchg
add
push
repnz
pop
fild
add
rol
add
push
add
jno
add
cld
cmp
add
inc
add
cdq
mov
add
jmp
add
movs
jbe
add
mov
add
xchg
add
ror
add
mov
add
mov
enter
jmp
add
aaa
add
int3
aad
add
and
add
push
add
add
js
add
mov
add
sub
add
les
add
pop
add
pop
mov
add
rcl
add
lahf
add
outs
or
add
add
adc
add
xchg
jge
add
or
add
sahf
add
cmc
stos
add
out
or
add
add
sbb
add
pop
add
mov
add
int3
loop
add
add
mov
add
mov
add
push
ins
add
jno
add
stc
lods
add
xor
add
mov
add
mov
add
xchg
xlat
add
test
add
imul
add
aaa
or
add
add
add
or
add
xor
add
pop
add
jl
add
mov
add
dec
icebp
add
mov
add
or
add
adc
add
jb
add
cmp
add
add
adc
add
xor
add
mov
add
push
out
add
add
sbb
mov
sbb
add
pop
mov
add
arpl
add
sub
cmps
add
mov
add
jb
fisttp
aam
test
enter
jno
xor
pop
int3
loop
gs
xchg
out
cdq
push
shl
xchg
and
and
pushaw
xchg
loopne
lods
daa
mov
dec
cs
scas
adc
not
mov
xor
add
mov
out
hlt
mov
mov
sbb
jg
pop
lahf
xor
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
jle
add
add
ror
add
and
jb
outs
addr16
add
add
push
add
or
add
and
add
push
add
adc
add
and
dec
inc
add
add
push
add
adc
and
outs
bound
add
add
add
push
mov
cmp
add
add
add
add
add
add
jle
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
push
add
add
jmp
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
jo
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
push
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
and
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
jle
adc
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
jae
push
add
add
bound
add
add
mov
push
add
add
add
call
add
push
push
add
add
push
cmp
test
push
add
push
add
add
push
add
add
add
dec
add
add
push
dec
add
add
push
dec
add
add
push
cmp
push
add
push
lahf
add
lahf
add
jae
push
add
push
add
add
ins
pop
push
add
add
add
or
fild
invd
add
push
add
cmp
push
add
jo
push
add
add
add
add
add
add
or
or
add
add
mov
or
push
add
add
add
or
jo
push
add
or
add
add
or
push
add
inc
add
add
inc
add
add
inc
add
add
push
add
add
scas
or
add
add
or
push
add
or
or
sub
aaa
or
add
add
add
or
add
add
add
add
or
add
add
or
or
add
or
pop
or
js
aaa
or
add
add
add
or
aad
rol
push
add
or
or
push
push
push
push
rol
push
add
push
push
mov
push
push
push
mov
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
adc
or
or
adc
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sbb
xchg
add
add
add
add
adc
or
add
add
add
adc
push
add
adc
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
in
push
add
add
add
or
add
add
or
add
add
add
add
add
adc
add
add
add
add
add
add
adc
or
add
add
add
xor
mov
add
adc
xchg
add
add
add
add
add
add
add
add
add
add
cmc
add
add
add
add
add
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
inc
add
adc
add
or
add
cmp
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
adc
or
fiadd
adc
or
inc
xor
or
and
xor
or
pop
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
push
and
push
add
push
push
add
add
push
and
or
fiadd
and
push
add
add
add
adc
add
and
or
mov
and
push
add
add
add
add
add
add
add
adc
or
fiadd
adc
push
add
add
add
add
add
add
add
add
adc
xchg
add
add
add
add
adc
or
int
adc
or
push
add
or
add
add
add
add
adc
or
jle
adc
or
adc
add
add
add
add
add
add
adc
add
add
adc
add
add
xor
or
or
and
add
add
add
add
adc
or
pop
add
add
add
add
add
add
inc
add
add
adc
or
mov
daa
add
add
adc
or
mov
add
add
add
xchg
sbb
sbb
add
fsubr
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
xchg
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
xchg
add
add
add
add
sub
xchg
add
add
add
add
xchg
add
add
add
add
sub
xchg
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
xchg
add
add
add
add
adc
or
sbb
add
clc
add
add
adc
or
sub
xor
add
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
or
xchg
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
xchg
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
adc
or
mov
aaa
add
or
xchg
add
add
add
add
aaa
add
or
xchg
add
add
add
add
aaa
add
or
xchg
add
add
add
add
xchg
add
add
add
add
add
or
xchg
inc
add
add
cmp
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
add
pusha
cmp
add
add
add
add
add
add
cmp
xchg
add
add
add
sar
add
or
xchg
add
add
add
loopne
add
or
xchg
add
add
add
push
inc
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
or
xchg
add
add
add
add
inc
add
or
xchg
add
add
inc
add
or
xchg
add
add
add
cld
inc
add
or
xchg
add
add
add
or
add
or
xchg
add
add
add
add
add
add
adc
or
jg
add
add
add
adc
or
cwde
add
add
inc
add
or
xchg
add
add
inc
add
or
xchg
add
add
add
add
add
add
add
inc
add
or
xchg
add
add
inc
add
or
xchg
add
add
inc
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
inc
add
or
xchg
inc
add
add
fadd
add
add
add
add
inc
add
or
xchg
add
add
add
add
inc
add
or
xchg
add
add
add
add
add
or
xchg
add
add
inc
add
or
xchg
add
add
add
and
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
mov
add
or
xchg
add
add
add
add
xchg
add
add
add
add
inc
add
or
xchg
add
add
inc
add
or
xchg
add
add
add
add
inc
add
add
adc
or
cld
add
add
add
add
adc
or
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
fmul
add
adc
or
pop
add
add
add
add
adc
or
jg
add
add
add
add
add
add
push
add
add
adc
or
mov
add
call
add
add
add
add
add
add
add
adc
or
rol
add
sbb
add
or
xchg
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
xchg
add
add
add
add
push
add
or
xchg
inc
add
add
in
add
or
xchg
sbb
sbb
add
and
add
or
xchg
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
push
add
or
xchg
inc
add
add
add
add
or
xchg
sbb
sbb
add
sbb
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
pop
add
or
xchg
add
add
add
add
add
or
xchg
inc
add
add
adc
add
or
xchg
add
add
add
add
pop
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
rcr
add
adc
or
dec
add
add
add
add
adc
or
gs
add
add
add
add
add
or
add
add
add
add
pop
add
or
xchg
add
add
pop
add
or
xchg
add
add
pop
add
or
xchg
add
add
pop
add
or
xchg
inc
add
add
lods
pop
add
or
xchg
sbb
sbb
add
les
add
add
add
add
pop
add
or
xchg
add
add
add
add
pop
add
or
xchg
add
add
add
add
pop
add
or
xchg
add
add
add
add
pop
add
or
xchg
add
add
pusha
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
xchg
add
add
pusha
add
or
xchg
add
add
pusha
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
popa
add
or
xchg
inc
add
add
cmp
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
xchg
add
add
popa
add
or
xchg
add
add
add
add
add
add
add
popa
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
xchg
add
add
add
add
bound
add
add
add
add
bound
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
push
arpl
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
xchg
add
add
add
add
add
or
xchg
inc
add
add
inc
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
test
add
or
xchg
add
add
add
add
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
add
add
adc
or
or
data16
add
adc
or
daa
add
add
add
adc
or
ds
add
add
adc
or
pop
add
add
add
xchg
inc
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
sub
add
or
xchg
add
add
imul
or
xchg
add
add
ins
add
or
xchg
add
add
add
add
xchg
inc
add
add
mov
add
or
xchg
add
add
add
add
ins
add
or
xchg
add
add
add
add
ins
add
or
xchg
add
add
add
add
ins
add
or
xchg
add
add
add
add
ins
add
or
xchg
add
add
add
add
xchg
add
add
add
add
ins
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
push
ins
add
or
xchg
add
add
add
pusha
ins
add
or
xchg
add
add
add
or
xchg
add
add
add
add
add
add
add
outs
add
add
adc
or
aad
add
fs
add
add
add
add
add
add
add
adc
or
icebp
add
add
add
adc
or
add
add
enter
add
adc
or
sbb
add
push
add
add
add
push
add
cld
ja
add
add
push
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
jp
add
add
add
add
or
xchg
inc
add
add
add
add
add
add
add
jnp
add
add
push
add
dec
jnp
add
add
add
add
add
add
push
add
mov
add
add
push
add
mov
add
or
xchg
add
add
add
or
xchg
add
add
add
add
or
xchg
add
add
jl
add
add
add
add
jl
add
add
add
add
add
add
push
add
jo
add
or
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
xchg
add
add
add
mov
add
or
xchg
add
add
xchg
add
add
add
add
jl
add
add
add
add
jl
add
add
add
add
jl
add
add
add
add
jl
add
add
push
add
sbb
add
add
add
add
jge
add
add
push
add
cmp
add
add
add
add
add
or
xchg
add
add
push
add
jo
add
or
xchg
add
add
add
add
add
add
push
add
cmp
or
xchg
inc
add
add
mov
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
jge
add
add
add
add
jge
add
add
add
add
push
add
push
jg
add
add
add
add
push
add
rol
add
add
pop
add
sbb
add
or
xchg
add
add
add
xor
add
or
xchg
add
add
pop
add
push
add
or
xchg
add
add
add
or
xchg
inc
add
add
jo
add
or
xchg
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
add
adc
or
dec
pop
add
adc
add
add
add
test
add
add
adc
or
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
mov
add
add
add
add
add
or
xchg
add
add
add
and
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
or
xchg
add
add
mov
add
add
add
add
add
or
xchg
add
add
mov
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
adc
or
cdq
pop
add
mov
adc
or
lahf
pop
add
add
adc
or
test
add
cwde
mov
add
add
add
add
pop
add
add
add
add
add
or
xchg
add
add
push
add
ins
nop
add
or
xchg
add
add
add
add
nop
add
or
xchg
inc
add
add
int3
nop
add
or
xchg
sbb
sbb
add
fs
add
or
xchg
add
add
add
add
add
or
xchg
add
add
pop
add
xchg
xchg
add
or
xchg
add
add
add
add
add
add
add
xchg
add
add
pop
add
mov
add
add
add
xchg
add
or
xchg
add
add
add
or
xchg
add
add
xchg
add
or
xchg
add
add
add
add
xchg
add
or
xchg
add
add
add
add
add
or
xchg
add
add
xchg
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
xchg
inc
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
inc
xchg
add
or
xchg
add
add
add
add
add
add
add
add
xchg
add
or
xchg
add
add
xchg
add
or
xchg
inc
add
add
push
xchg
add
or
xchg
sbb
sbb
add
js
add
or
xchg
add
add
add
xchg
xchg
add
or
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
or
xchg
add
add
add
add
xchg
add
or
xchg
add
add
add
add
xchg
add
or
xchg
add
add
pop
add
in
add
or
xchg
add
add
add
add
xchg
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
xchg
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
xchg
add
or
xchg
add
add
xchg
add
or
xchg
add
add
xchg
add
or
xchg
inc
add
add
add
add
or
xchg
sbb
sbb
add
sbb
add
or
xchg
add
add
add
add
xchg
add
or
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
or
add
add
add
or
add
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
or
xchg
add
add
add
add
xchg
add
or
xchg
inc
add
add
aam
add
or
xchg
add
add
push
add
hlt
xchg
add
or
xchg
add
add
add
add
xchg
add
or
xchg
add
add
add
add
xchg
add
or
xchg
add
add
add
add
xchg
add
or
xchg
add
add
add
add
xchg
add
or
xchg
add
add
add
add
xchg
add
add
adc
or
and
cdq
add
add
adc
or
xor
add
je
add
add
adc
or
inc
or
add
add
add
adc
or
pop
or
add
add
add
adc
or
jns
add
mov
add
add
adc
or
xchg
or
add
mov
adc
or
mov
mov
xchg
sbb
sbb
add
or
add
or
xchg
add
add
mov
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
cmps
add
or
xchg
add
add
add
xor
add
or
xchg
inc
add
add
cmp
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
cmps
add
or
xchg
add
add
add
shl
xchg
add
add
add
add
cmps
add
or
xchg
add
add
add
lock
add
or
xchg
add
add
add
add
cmps
add
add
adc
or
fisttp
add
movs
test
add
add
add
add
or
add
stos
add
add
adc
or
add
add
mov
adc
or
sbb
add
add
add
add
adc
or
xor
add
pusha
scas
add
or
xchg
add
add
add
add
add
add
add
add
add
add
scas
add
or
xchg
add
add
or
add
scas
add
or
xchg
add
add
add
add
scas
add
or
xchg
inc
add
add
clc
scas
add
or
xchg
add
add
add
add
scas
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
scas
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
scas
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
loopne
add
add
adc
or
jl
add
push
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
adc
or
mov
mov
xchg
add
add
mov
xchg
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
mov
xchg
add
add
add
add
mov
xchg
add
add
add
add
mov
adc
or
(bad)
or
add
add
add
add
or
add
rol
or
xchg
or
add
add
cld
rol
or
xchg
or
add
add
mov
add
or
xchg
inc
add
add
adc
add
or
xchg
add
add
add
add
add
or
xchg
add
add
ret
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
ret
or
xchg
add
add
add
add
ret
add
adc
or
cmp
add
lods
les
add
add
add
add
mov
add
adc
or
dec
or
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
and
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
push
add
jl
add
or
xchg
add
add
add
add
xchg
inc
add
add
movs
leave
add
or
xchg
add
add
add
mov
add
or
xchg
add
add
add
add
leave
add
or
xchg
add
add
add
add
leave
add
or
xchg
add
add
add
add
leave
add
or
xchg
add
add
add
add
leave
add
or
xchg
add
add
add
add
leave
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
adc
or
test
add
mov
add
add
add
int
add
add
add
add
add
add
adc
or
mov
rol
add
add
add
add
rol
add
add
or
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
or
add
xchg
add
add
or
add
add
add
or
add
add
or
xchg
add
add
or
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
xchg
add
add
add
add
aam
add
add
add
add
aam
add
add
or
add
aam
add
add
add
add
aad
add
add
or
add
xchg
add
add
add
inc
aad
add
add
or
add
add
add
or
add
add
or
xchg
add
add
or
add
xchg
add
add
or
add
add
or
add
aad
add
add
add
add
aad
add
add
or
add
aad
add
add
or
add
(bad)
add
or
xchg
add
add
add
sub
add
or
xchg
add
add
add
add
or
xchg
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
(bad)
add
or
xchg
add
call
add
add
add
(bad)
add
or
xchg
add
add
xlat
add
or
xchg
add
add
add
add
adc
or
jg
add
movs
fadd
add
add
add
add
fiadd
add
add
add
add
fild
add
add
add
add
fld
add
add
add
add
or
add
xchg
add
add
add
add
fiadd
add
add
add
add
fiadd
add
add
or
add
add
add
or
add
xchg
add
add
pop
add
and
add
or
xchg
add
add
add
add
in
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
pop
add
pushf
in
add
add
push
add
mov
add
or
add
in
add
add
add
add
or
xchg
add
add
or
add
out
add
add
or
add
add
or
xchg
add
add
or
add
add
add
or
add
xchg
add
add
add
add
add
or
add
out
add
add
or
add
out
add
add
or
add
out
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
xchg
inc
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
xchg
inc
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
xchg
inc
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
xchg
inc
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
xchg
inc
add
push
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
xchg
inc
add
push
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
xchg
inc
add
push
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
adc
add
or
xchg
add
add
add
add
out
add
add
push
push
add
out
add
add
push
push
add
call
xchg
add
add
add
add
add
or
xchg
inc
add
push
add
add
or
xchg
add
add
or
add
add
or
xchg
add
add
push
push
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
jmp
or
cmp
push
add
adc
or
push
push
push
add
adc
or
bound
push
add
out
add
add
adc
or
je
push
add
lock
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
add
push
push
add
add
add
add
lock
or
xchg
add
add
add
add
xchg
add
add
test
add
add
add
add
test
add
add
push
push
add
xchg
add
add
clc
add
or
xchg
add
add
add
add
clc
add
or
xchg
add
add
push
push
add
add
or
xchg
add
sbb
add
or
xchg
add
add
push
push
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
push
push
add
add
or
xchg
add
add
push
push
add
add
push
pop
add
xchg
add
add
stc
add
or
xchg
add
add
pop
add
cli
add
or
xchg
add
add
sysret
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sti
add
or
xchg
add
add
add
add
sti
add
or
xchg
add
add
add
add
sti
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
cld
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
pop
add
add
or
xchg
add
sbb
pop
add
add
add
or
add
add
add
or
add
xchg
add
add
xchg
add
add
pop
add
cld
add
or
xchg
add
fdivr
add
or
xchg
add
add
cld
add
or
xchg
add
add
pop
add
xchg
add
and
pop
add
xchg
add
add
sysret
add
xchg
add
add
add
add
add
add
add
add
sysret
add
xchg
add
add
std
add
or
xchg
add
add
add
add
add
xchg
add
add
add
add
std
add
or
xchg
add
add
sysret
add
inc
add
add
add
add
add
or
xchg
add
add
add
add
add
add
sysret
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
xchg
add
or
add
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
pop
pop
add
add
or
xchg
add
pop
inc
add
add
add
add
add
sysret
add
add
add
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
out
pop
add
add
or
xchg
add
js
add
or
xchg
add
add
xchg
add
or
add
add
xchg
add
add
add
add
add
add
add
pop
add
add
add
add
pop
add
xchg
add
add
pop
add
add
or
xchg
inc
add
pop
add
add
or
xchg
add
add
add
add
add
add
adc
or
jno
pop
add
adc
or
or
add
add
add
add
add
add
add
adc
or
lods
sysret
add
push
add
add
adc
or
les
pop
add
add
or
xchg
sbb
sbb
pop
add
add
add
add
add
add
or
xchg
inc
add
pop
add
add
or
xchg
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
sysret
add
or
add
add
sysret
add
or
add
add
or
add
or
add
add
push
pop
add
add
or
xchg
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
xchg
inc
add
pop
add
add
or
xchg
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
adc
or
dec
pop
add
push
add
add
adc
or
or
pop
add
adc
or
pop
adc
add
add
add
adc
or
das
adc
add
add
add
adc
or
cmp
pop
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
add
or
xchg
add
add
pop
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
pop
pop
add
adc
xchg
add
add
pop
add
adc
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
pop
add
add
adc
or
jle
pop
add
sbb
add
add
add
add
sbb
add
add
add
add
add
or
xchg
add
add
pop
add
add
or
xchg
add
add
add
add
add
add
adc
or
(bad)
adc
add
sbb
add
add
add
add
sbb
add
add
add
add
add
add
add
add
or
xchg
add
add
pop
add
sbb
xchg
inc
add
pop
add
sbb
xchg
add
add
sbb
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
pop
add
add
or
xchg
add
add
add
add
add
add
add
push
add
add
adc
or
fcom
pop
add
add
add
add
add
adc
add
and
add
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
and
xchg
inc
add
pop
add
and
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
and
xchg
add
add
or
add
and
xchg
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
add
add
adc
or
and
pop
add
daa
add
add
adc
or
cmp
pop
add
add
add
adc
or
dec
adc
add
add
add
add
pop
add
add
add
adc
or
pop
adc
add
xchg
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
inc
add
pop
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
adc
add
add
add
pop
pop
add
add
add
adc
add
add
or
xchg
or
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
xchg
add
add
add
add
add
pop
pop
add
xor
add
add
add
add
adc
add
add
add
adc
or
add
pop
add
xor
add
add
add
add
adc
add
add
add
adc
or
sub
aaa
add
add
adc
or
inc
adc
add
add
adc
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
add
or
xchg
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
or
xchg
add
add
pop
add
xchg
add
add
add
add
xchg
add
add
add
add
cmp
add
add
add
add
dec
pop
add
add
add
adc
or
inc
dec
pop
add
add
sbb
mov
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
dec
add
add
add
xchg
add
add
imul
sub
inc
add
mov
xor
push
add
add
add
add
add
add
add
add
add
leave
add
add
add
add
add
add
add
add
sbb
add
inc
add
sbb
test
inc
imul
mov
add
add
dec
add
stos
add
add
rol
add
add
add
imul
rol
cli
add
cmp
adc
add
add
add
add
add
add
mov
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
dec
add
pop
add
outs
add
mov
push
add
add
xchg
add
dec
add
add
xor
add
add
push
iret
add
fld
in
add
in
add
xor
add
mov
add
push
inc
push
mov
push
icebp
add
cmp
leave
add
dec
add
add
dec
push
sub
inc
add
retf
add
add
pop
std
push
cmp
inc
pop
sysret
cmp
inc
add
pop
mov
dec
pop
cmp
pop
bound
cmp
sahf
pop
jle
icebp
add
add
pop
sbb
add
cmp
out
pop
add
mov
cli
pop
add
cmp
(bad)
push
fiadd
add
sbb
add
or
or
add
jb
imul
sbb
ins
or
dec
add
dec
add
or
or
or
add
add
add
or
or
add
(bad)
or
or
cmp
in
push
or
add
or
cmp
stc
or
rol
or
icebp
add
or
or
or
cmp
mov
add
ror
mov
cmp
push
add
add
dec
add
add
or
add
arpl
sbb
add
add
test
add
add
add
add
or
test
add
add
add
or
or
add
add
add
add
dec
add
or
or
add
mov
or
add
or
add
add
or
add
or
xor
test
or
or
add
dec
add
or
add
push
imul
mov
or
enter
sub
fisttp
pop
push
sub
in
outs
push
xor
inc
add
sbb
inc
add
push
pop
add
dec
add
or
or
add
cmp
in
inc
add
add
or
add
psubusw
pop
or
add
sub
inc
add
cmp
pop
or
adc
add
icebp
add
or
add
pushf
or
add
adc
out
xchg
sub
hlt
or
leave
adc
and
adc
add
add
or
add
add
fadd
add
loop
cmp
data16
adc
jb
push
adc
add
pop
std
push
cmp
mov
add
add
add
add
or
cmp
jl
sub
cmp
xchg
adc
inc
add
add
dec
add
inc
add
jns
inc
add
add
mov
inc
add
dec
add
mov
add
dec
add
dec
mov
inc
add
mov
add
add
mov
leave
add
mov
rol
inc
add
dec
add
add
mov
jmp
add
add
mov
sub
inc
add
mov
add
add
add
add
add
add
rol
sbb
out
add
add
add
add
inc
add
xor
scas
add
add
adc
add
add
add
add
add
add
add
add
add
or
add
add
or
add
and
inc
add
inc
add
pusha
add
add
add
inc
pop
push
add
dec
add
xor
scas
add
push
add
xor
scas
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
mov
add
add
add
add
add
je
add
sbb
add
add
add
sub
add
add
add
add
add
add
add
add
js
add
aas
add
add
test
mov
iret
add
add
add
add
xor
xchg
scas
add
add
add
add
add
add
add
add
add
mov
clc
add
pop
push
icebp
push
add
xor
push
pop
jo
mov
or
push
or
or
or
or
or
or
or
or
mov
fisttp
in
or
push
stc
push
mov
adc
imul
adc
or
adc
adc
adc
adc
dec
sub
cmp
add
cmp
add
add
xchg
or
adc
add
or
adc
add
or
adc
add
fwait
adc
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
or
or
cmove
mov
in
or
add
add
push
or
add
pop
add
sbb
add
mov
add
add
xchg
outs
or
xor
add
add
add
or
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
leave
add
add
add
add
add
add
add
adc
adc
sbb
pop
add
sbb
and
and
and
add
daa
add
sub
and
sub
and
sub
and
sub
and
sub
and
sub
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
push
add
add
add
add
or
add
sbb
add
add
push
add
add
add
add
or
add
add
jnp
or
add
add
jnp
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
inc
add
add
add
add
or
add
add
ja
or
add
add
jns
or
add
add
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
pop
add
add
add
add
push
add
add
add
or
add
add
popa
add
add
add
add
or
add
add
arpl
push
add
add
add
or
add
or
add
add
jnp
or
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
gs
add
gs
add
addr16
add
addr16
add
addr16
add
imul
or
add
add
imul
add
or
add
or
add
add
cmps
add
add
lods
add
add
jecxz
or
add
add
in
or
add
add
in
push
add
add
add
add
add
inc
add
add
or
add
add
add
or
add
add
daa
push
or
add
add
sub
or
add
add
sub
or
add
add
das
push
or
add
add
arpl
or
add
add
arpl
push
add
add
add
or
add
add
addr16
push
add
add
add
or
add
add
imul
add
add
add
add
add
push
lock
add
sbb
add
ja
cwde
add
into
add
add
add
add
push
push
add
add
add
add
add
add
add
add
pushf
add
add
lock
add
add
pushw
lods
add
push
add
and
out
or
lock
add
add
push
mov
add
add
push
jno
inc
xchg
push
mov
add
push
pop
add
add
push
mov
pop
add
out
movs
add
add
add
or
add
or
add
or
add
or
push
add
aam
call
or
add
or
add
or
call
or
call
or
add
or
add
or
or
or
popa
or
add
or
mov
lods
add
call
push
cmp
int3
add
sbb
fiadd
push
cs
add
and
add
add
add
pop
(bad)
add
pop
sbb
add
add
add
cld
add
pcmpeqd
add
stos
add
shrd
cs
add
int3
add
pushf
adc
mov
adc
scas
adc
mov
pop
add
rcl
add
mov
fs
lea
push
add
add
add
add
add
pop
add
add
add
add
add
or
add
add
add
add
add
add
adc
sbb
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
and
popf
add
popf
add
add
add
add
add
add
add
inc
add
add
das
add
add
add
add
add
add
rol
xor
add
add
add
add
add
add
sbb
add
add
add
adc
add
sbb
add
add
adc
add
adc
add
ins
add
popf
add
dec
add
add
adc
add
push
add
sbb
add
push
add
push
add
add
xchg
add
adc
add
xchg
add
popf
add
sbb
add
adc
add
popf
add
ins
add
dec
add
add
add
add
inc
add
sbb
add
xchg
add
adc
add
and
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
and
add
add
inc
popa
jb
popa
je
cs
add
jb
popa
je
add
arpl
ins
imul
gs
add
arpl
jae
data16
push
imul
jae
arpl
push
jns
je
ins
cs
popa
outs
popa
gs
outs
je
push
jns
je
ins
cs
jb
ja
outs
add
jb
gs
xor
cs
ins
add
jb
gs
xor
add
gs
jne
arpl
add
jne
gs
gs
jne
arpl
cs
jae
jne
arpl
add
gs
je
xor
push
jne
je
ins
gs
gs
jo
jb
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
imul
inc
jb
popa
jns
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
arpl
outs
jb
add
add
dec
bound
arpl
add
dec
inc
outs
ins
jo
jb
bound
push
je
imul
imul
fs
push
jns
je
ins
cs
gs
add
arpl
add
jo
outs
add
je
imul
add
outs
jne
gs
bound
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
inc
outs
arpl
imul
inc
jns
gs
push
arpl
imul
jb
je
arpl
inc
je
jb
bound
add
jae
gs
cs
arpl
imul
push
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
jp
dec
data16
popa
jb
push
popa
ins
jne
push
jns
add
outs
outs
jbe
jb
imul
outs
arpl
jae
push
jns
je
ins
cs
imul
imul
pop
push
jb
arpl
jae
popa
ins
add
jb
popa
ins
add
jae
gs
cs
dec
add
outs
jae
add
imul
outs
fs
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
gs
je
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
inc
push
push
inc
je
jb
bound
add
imul
popa
je
dec
inc
jno
popa
je
bound
xor
addr16
dec
outs
arpl
push
popa
je
add
ins
outs
jb
push
je
gs
ins
add
jb
popa
jns
pop
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
popa
add
jae
ins
bound
inc
jns
add
je
je
add
outs
je
xor
inc
jne
data16
inc
ins
outs
arpl
outs
jo
add
outs
outs
ins
add
addr16
outs
js
gs
ins
je
dec
jae
inc
outs
js
je
ins
add
gs
add
jae
gs
cs
push
imul
gs
push
gs
fs
outs
je
xor
add
inc
ins
imul
jae
gs
cs
gs
inc
gs
gs
outs
add
ins
outs
outs
gs
bound
addr16
push
push
inc
cmp
dec
outs
je
jb
arpl
outs
add
addr16
outs
js
inc
gs
gs
gs
je
inc
outs
jb
jne
arpl
outs
push
outs
imul
gs
bound
arpl
imul
popa
fs
push
gs
fs
jns
add
imul
popa
fs
arpl
popa
ins
add
ins
jo
outs
outs
je
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
je
jne
jb
outs
je
jb
arpl
jae
push
dec
outs
je
xor
push
gs
fs
dec
outs
je
xor
dec
inc
outs
jne
gs
bound
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
push
add
outs
popa
gs
outs
je
popa
jae
dec
bound
arpl
jbe
outs
je
popa
imul
add
jae
je
inc
outs
outs
jbe
jb
add
push
inc
jns
add
popa
fs
inc
jns
add
ins
add
je
je
jb
bound
gs
inc
imul
bound
gs
inc
pop
imul
ins
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
jo
gs
imul
add
imul
add
je
add
ins
bound
add
popa
outs
addr16
js
outs
jae
outs
outs
add
popa
fs
outs
je
add
jbe
jb
outs
ins
outs
je
addr16
push
jns
je
ins
inc
imul
jns
inc
imul
ins
outs
arpl
imul
popa
jo
popa
je
add
jae
gs
cs
jb
ja
outs
addr16
ins
popa
imul
je
arpl
je
gs
gs
je
add
jbe
imul
imul
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
outs
fs
outs
jbe
imul
inc
outs
jb
popa
je
jb
jbe
fs
dec
popa
outs
popa
gs
outs
je
bound
arpl
ins
ins
arpl
outs
add
outs
popa
gs
outs
je
bound
arpl
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
dec
inc
imul
ins
add
jo
jae
add
jbe
dec
gs
add
je
outs
outs
jbe
jb
gs
dec
ins
popa
addr16
outs
jb
popa
je
addr16
inc
ins
jo
push
popa
imul
je
outs
jo
inc
js
ins
imul
popa
fs
outs
outs
ins
gs
outs
add
jns
add
popa
fs
je
imul
je
outs
ins
add
imul
je
add
jp
add
outs
popa
gs
outs
je
bound
arpl
popa
jb
push
ins
popa
addr16
outs
arpl
outs
fs
js
ins
inc
outs
jb
popa
je
or
inc
jbe
outs
je
gs
je
outs
fs
popa
fs
push
jae
jne
ins
dec
jb
ins
jo
jns
push
dec
outs
je
xor
push
gs
fs
dec
outs
je
xor
inc
gs
jb
arpl
jae
jae
jns
popa
ins
add
ins
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
je
dec
outs
jbe
jb
popa
outs
je
jne
je
jb
add
outs
je
add
popa
fs
dec
outs
je
add
jb
add
outs
push
arpl
je
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
fs
jo
add
imul
je
dec
outs
addr16
add
je
push
gs
imul
outs
fs
add
arpl
ins
inc
outs
ins
fs
dec
gs
add
je
je
imul
jb
popa
ins
imul
push
jns
je
ins
cs
jne
je
ins
gs
gs
popa
ins
imul
add
outs
je
add
je
dec
dec
push
push
inc
dec
inc
inc
add
popa
jb
add
je
outs
outs
popa
jb
pusha
xor
inc
fs
bound
dec
outs
je
xor
dec
outs
je
add
outs
ins
add
gs
imul
imul
je
outs
add
outs
ins
outs
popa
fs
popa
je
add
jo
add
je
dec
popa
imul
add
outs
arpl
jae
outs
fs
add
pop
inc
jno
popa
ins
imul
popa
imul
dec
outs
gs
popa
ins
imul
push
arpl
xor
inc
gs
jb
arpl
jae
jae
dec
inc
outs
ins
jo
jb
bound
xor
push
outs
dec
outs
ja
jb
inc
gs
addr16
inc
imul
inc
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
je
jb
outs
arpl
add
ins
jo
jb
inc
js
push
add
imul
arpl
dec
outs
jbe
add
je
js
outs
jae
outs
outs
add
jo
gs
outs
jbe
jb
popa
outs
je
push
push
push
outs
outs
ins
add
gs
push
jae
jb
outs
jb
dec
je
ins
add
jb
popa
je
inc
gs
popa
outs
outs
ins
inc
imul
inc
gs
gs
jo
popa
je
add
je
push
imul
je
jae
je
inc
js
je
outs
fs
je
xor
inc
outs
outs
ins
gs
outs
add
gs
je
inc
gs
gs
je
add
outs
imul
gs
push
gs
outs
jbe
add
ins
gs
jns
je
ins
dec
outs
outs
add
arpl
jns
inc
jb
popa
je
inc
imul
jns
inc
imul
jns
outs
outs
add
arpl
je
outs
outs
add
je
jb
arpl
jae
jns
add
ins
popa
outs
popa
addr16
jne
arpl
outs
push
outs
imul
je
imul
popa
ins
ins
imul
outs
je
outs
outs
add
add
add
je
push
outs
push
dec
outs
je
xor
dec
popa
jae
je
bound
jae
je
dec
je
ins
add
je
dec
je
ins
add
gs
inc
imul
popa
fs
je
jb
add
add
add
add
add
dec
outs
popa
fs
imul
add
je
jb
arpl
fs
jae
add
je
imul
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
outs
arpl
outs
outs
imul
jbe
add
popa
fs
jns
gs
inc
gs
outs
je
jns
jae
gs
bound
inc
jb
ins
inc
imul
imul
imul
jb
outs
ins
outs
je
inc
gs
jne
je
ins
gs
imul
jns
inc
gs
outs
ins
fs
popa
je
add
ins
gs
jns
je
ins
add
arpl
jae
data16
push
imul
jae
arpl
inc
imul
imul
je
jae
inc
outs
outs
je
imul
dec
outs
arpl
imul
je
ins
inc
je
jb
bound
gs
jb
jbe
fs
addr16
dec
outs
fs
add
popa
fs
outs
je
xor
inc
gs
imul
inc
gs
imul
imul
je
outs
jae
outs
outs
add
gs
add
push
jb
jns
push
outs
inc
outs
outs
ins
gs
outs
add
je
inc
push
push
gs
fs
outs
jne
ins
gs
and
outs
jb
jb
ja
popa
bound
je
jb
bound
add
imul
jae
bound
je
je
add
and
inc
bound
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
push
gs
imul
jb
popa
je
cs
jb
jo
jb
imul
ins
imul
push
gs
imul
add
popa
jne
je
push
gs
imul
popa
jne
je
gs
imul
gs
je
jb
bound
add
gs
arpl
gs
gs
imul
imul
inc
jbe
fs
arpl
popa
arpl
jns
addr16
inc
jae
gs
bound
dec
inc
outs
jne
gs
je
jb
inc
gs
outs
jne
gs
je
jb
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
imul
jne
add
jae
ins
bound
gs
jb
jo
imul
imul
jne
jo
gs
dec
ins
fs
jae
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
imul
imul
add
pop
add
add
add
add
es
ins
inc
xchg
ins
imul
or
xor
mov
mov
pop
jg
aad
cmp
add
add
or
add
add
sbb
push
adc
add
adc
push
pop
adc
or
sbb
or
or
sbb
or
or
sbb
add
add
add
add
and
push
or
add
or
and
adc
or
sbb
or
or
adc
sbb
add
sbb
or
or
or
sbb
push
add
push
add
push
add
add
add
add
add
add
add
or
or
or
or
add
or
and
or
add
add
pop
push
sbb
or
sbb
add
push
add
add
add
add
push
add
add
add
add
or
push
push
add
sbb
add
add
add
or
or
push
add
add
sbb
pop
push
or
inc
or
or
add
push
add
or
pop
pop
or
or
or
adc
add
push
add
push
or
or
or
or
and
add
adc
push
add
add
push
push
or
adc
and
push
push
add
adc
add
adc
add
adc
pop
add
add
push
add
add
push
push
push
push
push
adc
push
push
add
add
add
add
or
pop
or
adc
or
or
sbb
pop
push
or
or
and
sbb
add
add
push
add
add
or
add
inc
or
add
ins
or
add
push
adc
add
sbb
add
add
sbb
or
adc
add
add
add
add
pop
add
or
sbb
push
or
or
or
or
sbb
add
adc
add
add
add
push
add
or
or
pop
add
add
add
add
pop
add
sbb
push
add
sbb
add
add
add
push
add
push
push
add
push
add
push
pop
add
sbb
sbb
add
add
or
add
add
add
add
sbb
add
add
or
or
pop
or
or
or
add
or
or
add
sbb
add
add
add
add
add
sbb
or
add
pop
add
add
push
or
add
pop
push
adc
sbb
or
push
push
push
add
push
add
add
dec
add
sbb
or
adc
adc
adc
sbb
adc
sub
or
adc
or
adc
add
add
or
add
adc
adc
adc
push
add
or
pop
pop
or
or
sbb
and
sbb
or
add
push
add
add
push
or
add
sbb
add
add
adc
or
adc
or
or
sbb
and
adc
add
and
pop
or
adc
or
add
adc
add
adc
add
pop
or
or
or
or
sbb
or
adc
add
push
add
push
push
pop
or
adc
or
add
push
sbb
or
add
push
add
add
push
add
push
add
or
add
add
jno
add
add
push
push
push
or
add
sbb
xor
sbb
or
sbb
pop
pop
or
or
or
sbb
add
adc
add
push
add
add
or
add
or
or
add
add
push
add
add
push
push
or
pop
or
or
or
add
adc
add
add
or
add
add
adc
add
push
add
add
add
and
add
dec
adc
adc
add
add
sbb
sbb
add
add
xor
sbb
push
or
push
adc
push
sbb
add
sbb
add
sbb
sbb
add
add
sbb
or
add
push
add
add
sbb
mov
add
or
sub
adc
pop
or
adc
or
or
sbb
adc
add
push
add
add
add
pop
push
or
or
sbb
and
push
or
add
push
push
add
or
inc
or
or
sbb
add
push
or
or
or
or
or
or
and
add
and
adc
add
push
add
add
push
add
sbb
and
adc
in
sbb
and
sbb
push
and
push
adc
push
or
pop
add
xor
add
xor
xor
or
adc
or
or
or
sbb
or
add
sbb
or
or
sbb
or
or
add
adc
adc
and
add
or
add
push
add
add
add
add
sbb
add
or
add
or
push
or
or
sbb
adc
add
push
add
push
or
or
add
sbb
add
add
adc
add
push
add
add
pop
or
gs
ins
adc
and
add
adc
add
dec
or
add
adc
pop
add
sbb
pop
pop
add
adc
add
adc
add
ins
adc
add
or
adc
sbb
adc
adc
adc
sbb
add
sbb
or
or
adc
add
add
dec
pop
add
sbb
or
add
add
gs
or
add
gs
add
add
and
or
add
add
add
add
pop
pop
or
or
or
add
add
or
or
or
or
or
and
or
adc
add
push
add
push
add
add
adc
sub
sbb
or
or
or
sbb
sbb
add
sbb
or
push
pop
or
adc
or
add
adc
adc
pop
or
pop
pop
or
or
sbb
and
pop
or
add
pop
push
add
or
push
sbb
add
add
sbb
add
adc
add
push
add
push
or
add
or
add
push
or
add
sbb
add
push
add
or
push
adc
or
adc
push
push
add
add
pusha
push
add
sbb
sbb
pop
add
sbb
sbb
add
xor
push
push
and
sbb
sub
add
sbb
cmp
add
add
sbb
push
adc
pop
adc
or
inc
sbb
or
or
adc
or
add
push
or
or
add
or
adc
add
push
add
or
pop
and
push
push
adc
add
add
add
or
pop
add
or
sbb
add
and
add
add
or
pop
or
or
or
add
push
sbb
add
sbb
or
sbb
or
or
add
sbb
xor
push
or
add
add
add
or
pop
add
or
sbb
add
and
add
add
add
adc
add
adc
or
add
add
or
or
adc
add
push
add
or
and
sbb
adc
add
add
add
or
add
sbb
add
add
sbb
push
or
pop
or
or
or
sbb
or
add
or
sbb
adc
add
sbb
add
adc
add
inc
push
or
add
adc
add
push
add
push
add
add
push
or
add
push
add
add
push
or
or
sbb
or
or
and
sbb
adc
add
push
add
push
pop
add
sbb
or
add
inc
pop
add
sbb
adc
or
adc
push
or
or
sbb
adc
add
push
add
push
push
add
push
push
push
push
or
add
add
add
push
add
push
add
cmc
or
add
adc
push
or
add
push
push
add
add
adc
xor
test
add
add
push
add
push
add
add
add
test
add
add
add
and
adc
push
push
or
sbb
sub
push
or
add
push
add
add
add
add
add
sub
add
add
add
add
sbb
adc
add
push
add
add
add
and
adc
sbb
and
add
sub
pop
push
or
sbb
or
add
push
push
add
pop
or
adc
or
or
and
adc
add
adc
push
add
add
or
or
push
or
or
sbb
adc
add
push
add
push
add
or
pop
or
sbb
sbb
add
sbb
add
push
adc
sbb
or
adc
add
add
and
sbb
add
add
xor
or
add
add
adc
pop
add
add
pop
adc
add
add
sbb
or
add
sbb
add
adc
add
or
add
add
add
add
sbb
add
or
add
pop
sbb
add
adc
add
add
adc
or
or
add
adc
and
add
push
push
add
add
add
adc
add
push
add
add
add
adc
push
adc
adc
add
push
push
add
add
or
add
or
add
or
push
or
pop
or
adc
or
add
adc
add
adc
add
adc
or
add
or
add
push
push
sbb
sbb
push
adc
or
sbb
or
or
push
sbb
or
or
or
or
add
or
sbb
add
or
or
add
or
or
or
add
or
or
adc
add
or
push
add
or
sbb
add
or
add
add
sbb
and
adc
in
sbb
and
or
sub
and
add
adc
add
or
gs
popa
jae
inc
jb
outs
jb
push
and
or
sbb
adc
adc
add
sbb
adc
adc
add
adc
or
or
and
sub
or
sub
or
add
add
add
add
and
add
and
adc
add
sub
or
add
adc
adc
or
or
or
push
and
adc
or
adc
add
or
adc
adc
pop
adc
or
adc
adc
add
adc
adc
adc
or
push
sbb
add
sbb
adc
cmp
and
sub
push
sbb
add
sbb
adc
cmp
sub
push
and
or
adc
mov
sub
call
add
push
push
jae
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
popa
jb
gs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
inc
push
je
add
add
or
gs
popa
jae
inc
jb
outs
jb
add
or
push
sbb
push
add
add
sbb
add
sbb
sbb
or
add
push
push
add
add
add
pop
pop
or
or
or
add
or
push
add
or
or
add
sbb
adc
add
add
add
push
add
add
or
add
push
add
add
push
add
adc
sbb
or
pop
sub
sbb
add
add
add
push
add
or
add
push
add
push
add
push
push
sbb
or
adc
add
or
or
adc
adc
add
sbb
add
adc
add
adc
add
adc
adc
add
leave
or
adc
add
adc
jno
add
sbb
sbb
add
sbb
adc
push
add
add
add
sbb
sbb
add
or
add
cmp
adc
add
add
or
adc
sbb
add
push
pop
adc
add
add
push
or
add
push
add
add
add
sbb
adc
add
add
add
or
add
adc
or
add
adc
or
and
add
dec
adc
add
add
add
add
pop
pop
or
or
sbb
adc
add
push
add
add
adc
push
adc
or
push
or
sbb
adc
add
and
add
or
sbb
adc
push
add
or
adc
add
add
add
add
adc
add
pop
or
adc
or
or
add
adc
or
add
add
add
push
or
add
pop
push
sbb
adc
sbb
sbb
pop
pop
or
inc
or
or
add
push
or
or
push
or
sub
push
add
push
adc
push
adc
add
add
sbb
add
add
pop
add
sbb
add
adc
add
push
add
add
push
add
add
or
pop
pop
or
or
or
and
adc
adc
adc
add
adc
or
sbb
test
sbb
and
adc
add
xor
or
or
or
and
or
adc
add
push
add
add
pop
add
adc
or
pop
push
or
or
adc
add
push
add
add
add
add
push
add
add
add
add
add
push
push
or
add
add
add
or
adc
push
add
pop
add
adc
adc
push
adc
and
add
adc
sub
add
lods
add
cwde
add
mov
sub
mov
or
adc
adc
imul
add
adc
add
add
sub
imul
pop
push
or
adc
or
adc
add
push
add
add
push
push
add
or
add
sbb
add
push
add
add
add
pop
pop
or
or
or
sbb
add
or
add
push
add
or
or
pop
or
sbb
or
or
add
add
imul
xor
add
sub
or
push
add
push
push
add
add
add
add
adc
adc
adc
add
sbb
add
in
add
add
mov
add
push
inc
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
das
das
cmp
dec
addr16
inc
inc
inc
inc
inc
inc
inc
inc
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addr16
inc
inc
inc
inc
xor
jne
xor
je
outs
dec
dec
bound
push
dec
xor
inc
push
ja
ins
cmp
ins
inc
je
inc
dec
push
fs
inc
imul
xor
popa
push
xor
push
inc
cmp
xor
inc
push
jne
push
xor
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
push
push
inc
inc
push
inc
inc
inc
inc
dec
arpl
xor
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
inc
inc
addr16
dec
inc
push
addr16
inc
inc
inc
inc
inc
inc
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
push
jp
inc
inc
inc
inc
addr16
inc
inc
inc
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addr16
inc
inc
inc
inc
addr16
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addr16
inc
inc
inc
inc
inc
inc
inc
dec
inc
push
dec
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
imul
inc
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
pop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
ja
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addr16
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xor
xor
inc
inc
push
push
cmp
inc
inc
addr16
inc
inc
inc
dec
inc
inc
inc
inc
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jne
outs
dec
jns
ja
inc
inc
dec
pop
inc
inc
inc
inc
inc
push
inc
inc
inc
inc
inc
pop
inc
inc
inc
inc
imul
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
outs
dec
ins
bound
push
inc
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
inc
inc
inc
push
addr16
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xor
inc
inc
inc
inc
inc
inc
addr16
inc
inc
inc
inc
inc
inc
push
inc
ss
outs
inc
inc
dec
ja
inc
inc
inc
inc
inc
inc
inc
inc
inc
addr16
inc
inc
jb
aaa
inc
inc
inc
push
inc
ja
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xor
inc
inc
outs
inc
inc
inc
inc
inc
inc
dec
addr16
ja
ja
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
outs
jae
pop
xor
inc
inc
inc
inc
inc
push
xor
inc
ja
inc
inc
outs
dec
gs
inc
inc
inc
inc
imul
das
addr16
push
inc
inc
inc
inc
arpl
inc
inc
inc
outs
pop
push
addr16
inc
inc
inc
outs
inc
ja
inc
inc
imul
bound
inc
inc
inc
pop
jb
push
outs
inc
inc
inc
inc
dec
das
inc
inc
push
push
inc
inc
inc
inc
inc
outs
inc
ja
inc
inc
imul
inc
inc
outs
outs
inc
inc
inc
inc
inc
imul
inc
inc
outs
jb
push
inc
inc
push
outs
xor
inc
inc
inc
inc
gs
inc
inc
inc
push
jbe
addr16
inc
inc
imul
inc
imul
dec
imul
inc
inc
addr16
inc
inc
inc
dec
jae
outs
inc
addr16
inc
inc
imul
arpl
inc
inc
inc
outs
ins
inc
js
jae
inc
pop
ins
dec
inc
inc
inc
inc
inc
outs
ins
dec
push
dec
ins
dec
imul
inc
dec
inc
inc
inc
outs
ins
dec
ins
cmp
inc
dec
dec
sub
dec
dec
cmp
inc
inc
outs
dec
ja
inc
inc
outs
xor
inc
inc
inc
inc
addr16
inc
inc
inc
push
sub
inc
inc
inc
inc
addr16
inc
inc
inc
dec
inc
outs
xor
inc
inc
inc
dec
inc
push
inc
inc
inc
outs
jno
inc
xor
dec
inc
cmp
inc
outs
jno
imul
inc
cmp
inc
pop
jno
imul
addr16
pop
inc
inc
inc
push
outs
inc
push
inc
inc
inc
outs
inc
inc
inc
inc
inc
inc
dec
inc
xor
inc
inc
popa
inc
inc
inc
inc
inc
inc
inc
addr16
inc
inc
inc
dec
bound
inc
inc
inc
jno
inc
ja
inc
inc
inc
outs
inc
inc
jp
inc
inc
dec
xor
inc
inc
inc
inc
inc
inc
push
dec
push
xor
inc
inc
outs
dec
ja
inc
inc
push
inc
inc
inc
inc
pop
push
dec
push
dec
inc
inc
inc
inc
dec
push
push
inc
inc
inc
inc
ins
inc
imul
inc
inc
xor
pop
inc
inc
inc
dec
inc
jp
xor
inc
inc
inc
dec
addr16
push
push
outs
ss
inc
inc
inc
inc
pop
dec
inc
xor
dec
pop
dec
ins
inc
inc
inc
dec
bound
inc
pop
push
ja
dec
inc
outs
xor
inc
imul
inc
xor
pop
inc
inc
inc
dec
inc
inc
inc
das
das
ja
inc
pop
cmp
inc
addr16
sub
inc
inc
inc
inc
inc
jbe
addr16
inc
inc
addr16
dec
inc
xor
inc
ja
inc
inc
imul
inc
arpl
inc
arpl
ja
dec
dec
jp
jns
push
outs
xor
das
ja
jno
push
jns
das
das
das
inc
jp
xor
das
das
das
inc
inc
push
das
inc
inc
imul
imul
inc
imul
inc
inc
inc
inc
jp
inc
inc
dec
pop
inc
inc
inc
inc
inc
inc
inc
inc
push
dec
dec
cmp
inc
inc
ins
dec
inc
arpl
ja
inc
inc
push
pop
push
inc
inc
jo
inc
inc
inc
inc
dec
push
push
inc
inc
inc
inc
ins
dec
xor
inc
xor
pop
inc
inc
inc
dec
inc
imul
push
inc
pop
jae
inc
pop
dec
pop
push
pop
dec
inc
imul
cmp
inc
pop
inc
imul
dec
inc
imul
inc
inc
addr16
push
inc
inc
inc
addr16
das
cmp
inc
das
push
inc
push
dec
inc
das
push
inc
inc
bound
inc
inc
inc
outs
inc
inc
js
pop
bound
inc
inc
inc
outs
outs
dec
inc
inc
inc
inc
outs
dec
inc
xor
inc
js
inc
dec
jo
inc
dec
outs
xor
das
das
das
das
ja
xor
data16
das
das
ja
xor
das
das
das
das
ja
xor
jbe
das
das
ja
jb
addr16
ins
push
inc
inc
dec
imul
inc
cmp
inc
pop
jno
jp
inc
inc
inc
pop
inc
inc
inc
inc
inc
inc
inc
inc
push
inc
inc
ja
dec
jp
outs
inc
inc
inc
inc
inc
imul
inc
inc
imul
sub
inc
inc
inc
inc
pop
jae
jns
gs
inc
addr16
inc
inc
inc
inc
dec
das
arpl
inc
pop
inc
bound
inc
inc
inc
outs
fs
push
push
arpl
addr16
inc
inc
inc
ins
dec
inc
imul
xor
addr16
inc
inc
inc
push
jae
cmp
inc
imul
inc
inc
outs
jb
push
bound
inc
outs
inc
inc
inc
inc
arpl
inc
inc
inc
inc
push
inc
inc
imul
inc
inc
inc
inc
inc
inc
inc
inc
push
ins
dec
inc
inc
ja
inc
inc
inc
inc
inc
pushw
inc
inc
jo
inc
addr16
inc
inc
inc
cmp
inc
inc
dec
dec
addr16
inc
inc
inc
xor
dec
inc
inc
inc
addr16
inc
inc
inc
push
jbe
inc
inc
inc
inc
imul
inc
dec
imul
dec
das
addr16
dec
inc
push
inc
outs
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmp
inc
inc
inc
addr16
inc
inc
inc
inc
imul
dec
push
push
pop
dec
outs
dec
inc
inc
inc
inc
ins
inc
jns
dec
xor
inc
inc
xor
pop
inc
inc
inc
dec
inc
imul
ins
push
cmp
inc
addr16
push
inc
ins
inc
inc
fs
inc
imul
xor
inc
inc
inc
imul
push
ins
inc
inc
fs
inc
inc
pop
push
inc
xor
pop
inc
inc
inc
dec
inc
inc
inc
das
das
ja
inc
pop
cmp
inc
addr16
sub
inc
inc
inc
inc
inc
jbe
addr16
inc
inc
addr16
dec
inc
xor
inc
ja
inc
inc
imul
inc
arpl
inc
jae
inc
push
jp
inc
push
dec
arpl
outs
dec
dec
dec
push
das
das
das
cmp
outs
das
das
das
cmp
xor
xor
dec
ss
dec
dec
outs
push
dec
inc
push
inc
outs
addr16
inc
inc
inc
inc
inc
inc
inc
inc
addr16
ja
inc
inc
inc
push
jae
jns
jbe
inc
inc
inc
inc
jns
jp
push
inc
inc
inc
inc
inc
ins
dec
xor
inc
xor
pop
inc
inc
inc
dec
dec
push
xor
addr16
xor
inc
inc
addr16
dec
inc
push
ins
inc
inc
pop
push
dec
inc
dec
ins
inc
imul
pop
inc
imul
xor
addr16
push
push
ja
inc
addr16
push
inc
inc
inc
addr16
das
cmp
inc
das
push
inc
push
dec
inc
das
push
inc
inc
bound
inc
inc
inc
outs
inc
inc
js
pop
bound
inc
inc
inc
outs
outs
dec
inc
inc
inc
inc
outs
dec
inc
jns
jae
inc
addr16
inc
js
dec
dec
jo
inc
dec
outs
xor
push
das
das
das
ja
xor
jbe
das
das
ja
xor
data16
das
das
ja
jb
push
ja
outs
inc
ja
outs
ja
inc
dec
addr16
outs
inc
ja
inc
inc
imul
dec
imul
dec
das
push
inc
inc
inc
pop
outs
inc
inc
inc
inc
inc
imul
dec
addr16
inc
inc
inc
xor
dec
inc
cmp
inc
outs
jno
imul
dec
inc
cmp
inc
pop
jno
addr16
outs
inc
addr16
inc
inc
outs
xor
inc
inc
inc
inc
imul
inc
push
jae
inc
inc
inc
inc
arpl
inc
inc
inc
jo
inc
push
inc
inc
inc
inc
dec
sub
ja
inc
inc
pop
jp
addr16
inc
inc
push
inc
inc
inc
push
addr16
inc
inc
inc
dec
dec
imul
dec
push
dec
inc
inc
inc
addr16
inc
inc
inc
dec
push
inc
gs
inc
inc
inc
push
jbe
ja
inc
inc
imul
dec
inc
dec
inc
push
addr16
inc
inc
inc
inc
inc
inc
inc
inc
push
dec
inc
arpl
imul
aaa
inc
addr16
inc
inc
inc
push
je
imul
inc
inc
xor
dec
imul
inc
inc
push
je
inc
pop
ins
inc
imul
outs
inc
inc
inc
inc
inc
imul
inc
inc
pop
jb
inc
cmp
inc
inc
inc
dec
cmp
dec
inc
inc
inc
inc
imul
dec
addr16
inc
inc
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
addr16
inc
inc
push
inc
inc
inc
push
dec
ja
ja
dec
inc
inc
inc
inc
inc
ja
inc
inc
push
pop
je
push
dec
aaa
inc
addr16
inc
inc
inc
pop
jae
jns
fs
inc
pop
inc
inc
push
xor
arpl
inc
push
inc
inc
inc
jo
inc
ja
inc
inc
push
pop
inc
inc
outs
inc
inc
inc
push
dec
inc
jns
inc
inc
inc
inc
jb
inc
xor
addr16
dec
dec
cmp
inc
imul
inc
inc
jbe
inc
imul
xor
inc
inc
inc
inc
outs
dec
addr16
inc
inc
imul
dec
inc
cmp
inc
pop
outs
dec
ja
inc
inc
imul
dec
ins
dec
pop
push
jae
inc
inc
inc
ins
inc
je
gs
inc
inc
inc
dec
inc
pop
inc
inc
inc
jno
dec
addr16
inc
inc
inc
dec
ja
addr16
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
inc
inc
inc
inc
dec
inc
pop
inc
inc
inc
outs
outs
dec
addr16
inc
inc
imul
fs
imul
dec
inc
inc
push
inc
inc
inc
inc
ins
inc
inc
inc
inc
addr16
jae
inc
inc
push
addr16
ja
inc
inc
inc
addr16
inc
inc
inc
dec
inc
outs
inc
inc
inc
pop
outs
dec
push
inc
inc
inc
imul
dec
inc
pop
inc
inc
inc
pop
outs
dec
push
inc
inc
inc
outs
inc
dec
inc
inc
inc
inc
dec
addr16
inc
inc
inc
dec
pop
inc
xor
inc
inc
inc
dec
dec
addr16
inc
inc
inc
dec
ja
push
inc
xor
inc
inc
inc
push
inc
inc
inc
push
inc
push
inc
ja
inc
dec
inc
cmp
inc
pop
arpl
pop
inc
inc
inc
inc
ins
inc
push
inc
inc
inc
inc
pop
push
inc
jp
inc
inc
inc
inc
inc
dec
push
je
inc
addr16
inc
inc
inc
inc
push
inc
inc
inc
inc
pop
dec
dec
dec
ss
inc
inc
inc
pop
inc
imul
addr16
inc
inc
inc
inc
inc
pop
dec
push
jae
inc
inc
fs
push
push
outs
jae
inc
ja
inc
addr16
push
inc
inc
inc
addr16
das
cmp
inc
das
push
inc
push
dec
inc
das
push
inc
inc
bound
inc
inc
inc
outs
inc
inc
js
pop
bound
inc
inc
inc
outs
outs
dec
inc
inc
inc
inc
outs
dec
inc
xor
dec
push
jae
inc
js
jbe
jo
popa
dec
pop
pop
das
das
das
cmp
outs
xor
data16
das
das
ja
xor
das
das
das
das
ja
xor
data16
das
das
ja
xor
jbe
das
das
ja
xor
das
das
das
das
ja
jb
ja
jno
inc
xor
inc
inc
inc
outs
dec
ja
inc
inc
imul
dec
inc
addr16
inc
inc
pop
outs
dec
inc
inc
inc
inc
imul
dec
push
xor
push
push
inc
inc
inc
inc
push
dec
inc
inc
ins
addr16
inc
inc
inc
push
jae
push
outs
outs
dec
push
inc
inc
inc
imul
inc
inc
outs
jb
addr16
inc
inc
inc
jae
inc
addr16
jae
inc
inc
inc
inc
inc
inc
inc
inc
inc
pop
je
push
outs
inc
inc
inc
inc
dec
inc
jae
inc
inc
jno
dec
push
dec
push
dec
xor
inc
push
inc
inc
inc
dec
xor
inc
inc
inc
inc
bound
inc
inc
inc
pop
ins
dec
push
jp
xor
ins
xor
jno
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
outs
dec
inc
inc
inc
inc
push
inc
inc
inc
push
xor
dec
inc
cmp
inc
outs
jno
jp
inc
inc
inc
push
inc
inc
inc
inc
inc
inc
inc
inc
push
inc
outs
xor
inc
inc
inc
inc
push
push
xor
inc
ja
inc
inc
inc
pop
sub
inc
inc
inc
inc
ja
pushw
inc
inc
push
inc
inc
addr16
jbe
inc
inc
inc
inc
imul
dec
push
addr16
inc
inc
inc
ins
inc
push
inc
inc
inc
inc
pop
sub
inc
inc
inc
inc
ins
inc
xor
dec
gs
inc
inc
inc
ins
imul
ss
inc
inc
inc
pop
dec
dec
dec
inc
inc
inc
inc
inc
dec
push
inc
dec
inc
jp
inc
inc
inc
inc
dec
arpl
pop
xor
inc
inc
inc
dec
dec
imul
cmp
imul
cmp
outs
xor
inc
inc
inc
inc
inc
inc
push
pop
push
inc
jns
push
inc
pop
ss
das
das
ja
jb
imul
push
dec
jns
jae
xor
inc
inc
dec
sub
inc
inc
inc
inc
ins
inc
xor
imul
pop
ins
push
inc
inc
inc
ins
inc
xor
imul
dec
imul
inc
inc
inc
inc
inc
inc
push
pop
push
inc
jns
push
inc
jae
dec
addr16
inc
inc
outs
xor
inc
inc
inc
inc
inc
inc
fs
ja
inc
inc
imul
inc
ja
outs
dec
addr16
inc
inc
push
inc
inc
push
ins
jbe
ja
inc
inc
imul
inc
ja
sub
inc
inc
inc
inc
ja
inc
imul
inc
inc
inc
push
inc
inc
push
push
jbe
addr16
inc
inc
je
inc
dec
je
inc
inc
push
push
push
inc
je
inc
dec
push
xor
inc
push
pop
jno
inc
inc
xor
das
aaa
das
das
ja
xor
das
das
das
das
ja
xor
data16
das
das
ja
xor
das
das
das
das
ja
xor
data16
das
das
ja
xor
push
das
das
das
ja
inc
inc
inc
inc
arpl
inc
inc
inc
push
ja
inc
addr16
inc
ja
inc
inc
inc
inc
inc
inc
dec
push
inc
push
push
inc
inc
inc
inc
inc
bound
push
inc
js
inc
inc
inc
inc
push
inc
inc
inc
inc
push
dec
push
jo
inc
push
inc
inc
arpl
dec
inc
inc
inc
inc
arpl
inc
inc
dec
inc
inc
inc
ja
inc
inc
inc
push
inc
inc
inc
inc
inc
inc
inc
popa
inc
inc
addr16
inc
inc
inc
popa
inc
inc
ja
inc
inc
dec
xor
inc
inc
inc
inc
arpl
inc
inc
dec
inc
outs
dec
ja
inc
inc
imul
xor
push
jae
pop
inc
push
inc
inc
inc
inc
arpl
inc
inc
inc
jno
inc
push
inc
inc
inc
dec
xor
inc
inc
inc
inc
dec
inc
push
inc
inc
inc
jno
inc
ja
inc
inc
inc
addr16
inc
inc
inc
dec
inc
jns
pop
dec
addr16
jns
push
inc
inc
arpl
xor
inc
dec
inc
push
xor
fs
ja
inc
inc
imul
inc
inc
xor
imul
pop
inc
push
inc
inc
inc
inc
inc
xor
inc
inc
inc
inc
inc
addr16
inc
inc
imul
dec
push
xor
inc
inc
jbe
bound
inc
inc
inc
outs
jb
push
arpl
addr16
push
inc
inc
inc
je
jno
imul
inc
push
inc
inc
inc
inc
dec
inc
fs
cmp
inc
dec
inc
inc
inc
inc
inc
inc
xor
dec
inc
jae
inc
inc
outs
jno
addr16
outs
dec
ja
inc
inc
imul
inc
inc
inc
dec
dec
imul
imul
inc
inc
inc
inc
inc
inc
inc
inc
inc
ja
inc
inc
inc
xor
xor
dec
push
ja
jp
xor
inc
inc
inc
inc
push
inc
bound
inc
inc
inc
addr16
inc
inc
inc
push
addr16
inc
xor
inc
inc
dec
push
inc
inc
inc
inc
push
xor
popa
push
xor
inc
inc
inc
inc
pop
inc
push
inc
inc
pop
inc
inc
inc
inc
inc
dec
push
push
ja
xor
push
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
push
push
ins
inc
inc
inc
inc
inc
inc
inc
xor
inc
dec
push
inc
inc
inc
inc
push
ins
js
pop
addr16
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
js
inc
inc
inc
imul
inc
inc
inc
inc
inc
inc
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
jae
inc
inc
inc
inc
push
inc
inc
inc
inc
dec
inc
inc
inc
inc
jp
inc
inc
inc
dec
ja
inc
inc
inc
outs
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
inc
inc
inc
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
pop
inc
dec
ja
jns
inc
pop
inc
dec
ja
jns
inc
pop
inc
push
push
inc
jns
inc
pop
inc
push
inc
pop
inc
outs
ja
jp
inc
outs
inc
js
inc
jp
inc
pop
inc
jp
inc
bound
pop
inc
inc
inc
inc
jns
inc
pop
inc
dec
push
inc
jns
inc
pop
inc
push
push
inc
dec
inc
push
pop
inc
push
addr16
jns
inc
outs
inc
pop
ja
outs
inc
push
pop
inc
gs
popa
inc
push
pop
inc
jne
inc
popa
inc
push
pop
inc
xor
outs
inc
push
cmp
inc
inc
inc
inc
inc
pop
inc
sub
dec
inc
push
pop
inc
inc
addr16
dec
inc
push
pop
inc
dec
ja
dec
inc
push
pop
inc
push
inc
dec
dec
inc
push
pop
inc
pop
ja
xor
pop
inc
ins
addr16
xor
pop
inc
jns
dec
jp
inc
pop
inc
xor
jns
inc
pop
inc
xor
jp
inc
pop
inc
sub
jp
inc
xor
dec
addr16
jno
ja
inc
pop
addr16
outs
inc
push
outs
inc
imul
inc
push
pop
inc
jo
dec
jns
inc
pop
inc
jae
dec
dec
inc
push
pop
inc
cmp
jns
inc
pop
inc
inc
addr16
jns
inc
pop
inc
inc
addr16
push
inc
inc
pop
inc
push
ja
jp
inc
pop
inc
push
addr16
jp
inc
pop
inc
pop
push
push
jns
inc
pop
inc
fs
jp
inc
pop
inc
jo
push
jns
inc
pop
inc
jp
push
jns
inc
pop
inc
inc
ja
imul
inc
push
ja
jns
inc
pop
inc
ins
push
push
arpl
pop
inc
jae
push
jns
inc
inc
inc
inc
inc
inc
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xor
dec
inc
inc
inc
inc
inc
inc
inc
inc
push
inc
inc
inc
inc
inc
inc
dec
addr16
xor
inc
ja
inc
inc
inc
inc
inc
inc
inc
inc
gs
inc
xor
inc
push
inc
inc
inc
inc
outs
inc
inc
inc
inc
push
inc
inc
inc
inc
dec
push
inc
inc
inc
inc
addr16
inc
push
inc
inc
inc
inc
inc
inc
dec
push
inc
xor
inc
inc
inc
pop
inc
inc
dec
inc
inc
inc
inc
gs
inc
inc
inc
inc
push
inc
dec
inc
inc
xor
inc
inc
inc
inc
inc
inc
xor
push
inc
inc
inc
inc
jae
dec
addr16
inc
inc
push
inc
inc
dec
addr16
inc
inc
inc
imul
inc
jb
inc
inc
inc
inc
inc
inc
push
inc
inc
imul
inc
dec
inc
inc
cmp
inc
inc
push
inc
inc
inc
inc
dec
addr16
dec
inc
inc
push
inc
dec
push
inc
inc
inc
inc
inc
inc
dec
inc
inc
addr16
inc
xor
inc
inc
jns
inc
inc
inc
inc
inc
inc
bound
xor
inc
push
inc
push
inc
inc
dec
inc
inc
ja
gs
inc
outs
inc
inc
ja
addr16
inc
xor
ja
gs
inc
inc
inc
inc
ja
addr16
inc
inc
inc
inc
ja
xor
inc
ja
dec
inc
inc
inc
inc
inc
ja
push
inc
inc
push
inc
dec
push
inc
gs
inc
inc
inc
dec
ja
addr16
inc
addr16
inc
push
inc
xor
inc
ja
gs
inc
inc
inc
inc
ja
addr16
inc
inc
inc
dec
push
inc
xor
dec
push
inc
gs
inc
inc
inc
dec
push
inc
addr16
inc
inc
inc
dec
push
inc
xor
dec
push
inc
dec
inc
inc
ja
dec
push
inc
push
inc
inc
outs
inc
dec
push
inc
xor
push
inc
push
inc
inc
inc
inc
inc
inc
inc
imul
inc
inc
arpl
push
inc
arpl
inc
inc
inc
inc
inc
push
inc
inc
xor
dec
ja
inc
inc
dec
ja
inc
inc
inc
inc
inc
dec
dec
inc
dec
inc
inc
xor
inc
inc
xor
inc
inc
inc
inc
inc
imul
inc
inc
arpl
push
inc
imul
inc
inc
inc
inc
inc
inc
push
cmp
ja
inc
inc
dec
ja
inc
inc
inc
inc
inc
dec
dec
inc
dec
addr16
das
inc
inc
inc
inc
sub
inc
inc
inc
inc
inc
ins
addr16
gs
inc
arpl
push
inc
jae
push
inc
inc
inc
inc
inc
push
inc
inc
inc
inc
push
ja
inc
inc
inc
addr16
inc
dec
pop
pop
das
ja
aaa
inc
inc
inc
inc
pop
inc
inc
inc
inc
inc
inc
inc
imul
inc
inc
cmp
push
inc
jae
push
inc
inc
inc
inc
inc
push
inc
push
addr16
dec
ja
inc
inc
dec
ja
inc
inc
inc
inc
inc
dec
dec
inc
dec
inc
inc
das
inc
inc
inc
inc
popa
inc
dec
inc
inc
inc
inc
inc
imul
inc
inc
cmp
push
inc
arpl
inc
inc
inc
inc
inc
push
inc
inc
xor
ja
inc
inc
inc
addr16
inc
inc
inc
inc
dec
pop
inc
dec
addr16
inc
inc
inc
inc
inc
jno
dec
inc
inc
inc
inc
inc
imul
inc
inc
addr16
inc
push
inc
cmp
inc
inc
inc
inc
inc
push
inc
inc
xor
push
push
inc
inc
inc
dec
addr16
inc
inc
inc
inc
dec
dec
inc
push
ja
das
inc
inc
inc
inc
addr16
push
inc
inc
inc
inc
inc
imul
inc
inc
cmp
push
inc
jae
push
inc
inc
inc
inc
inc
inc
inc
push
cmp
ja
inc
inc
inc
push
ins
inc
inc
inc
inc
inc
dec
dec
inc
dec
addr16
xor
inc
inc
push
inc
push
inc
inc
inc
inc
inc
imul
inc
inc
cmp
push
inc
push
dec
push
inc
inc
inc
inc
inc
inc
inc
push
cmp
ja
inc
inc
inc
ja
inc
inc
inc
inc
inc
dec
dec
inc
dec
addr16
das
inc
inc
inc
inc
popa
inc
push
inc
inc
inc
inc
inc
push
inc
jae
inc
push
inc
outs
dec
push
inc
inc
inc
inc
inc
push
inc
inc
inc
inc
push
ja
inc
inc
dec
push
ins
inc
inc
inc
inc
inc
dec
dec
inc
dec
addr16
aaa
inc
inc
inc
inc
js
push
inc
inc
inc
inc
inc
addr16
inc
gs
inc
dec
inc
inc
push
inc
jae
addr16
inc
inc
inc
inc
inc
inc
inc
xor
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
pop
pop
das
ja
gs
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
js
inc
inc
inc
push
jae
inc
push
inc
inc
inc
inc
inc
inc
inc
ja
inc
inc
push
ja
pop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
pop
inc
dec
ja
jae
inc
inc
inc
push
inc
inc
inc
imul
inc
dec
dec
inc
inc
push
inc
imul
inc
inc
inc
inc
push
inc
inc
xor
fs
inc
inc
dec
ja
inc
inc
inc
inc
inc
dec
inc
pop
sub
xor
inc
inc
dec
inc
arpl
inc
inc
inc
imul
inc
dec
xor
push
inc
outs
dec
ja
inc
inc
inc
inc
push
inc
inc
xor
push
ja
inc
inc
dec
ja
inc
inc
inc
inc
inc
dec
dec
inc
dec
inc
inc
das
inc
inc
inc
inc
inc
inc
addr16
inc
inc
inc
inc
ins
addr16
gs
inc
arpl
push
inc
ja
inc
inc
inc
inc
inc
inc
push
inc
inc
inc
inc
dec
ja
inc
inc
dec
outs
inc
inc
inc
inc
inc
dec
pop
pop
das
ja
aaa
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
push
inc
xor
inc
push
inc
inc
inc
inc
inc
inc
inc
ja
inc
inc
push
push
inc
addr16
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
pop
inc
inc
inc
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
js
inc
jp
pop
inc
inc
inc
push
inc
inc
dec
inc
inc
inc
inc
inc
inc
push
inc
inc
xor
ins
inc
inc
inc
inc
push
inc
jo
inc
inc
inc
inc
dec
inc
pop
sub
xor
inc
inc
xor
inc
inc
inc
inc
inc
push
inc
jae
inc
push
inc
pop
dec
addr16
inc
inc
inc
inc
inc
inc
push
cmp
ja
inc
inc
dec
inc
jno
inc
inc
inc
inc
inc
pop
pop
das
ja
fs
inc
inc
inc
popa
push
inc
das
inc
dec
dec
inc
arpl
das
inc
inc
jae
gs
inc
das
inc
dec
cmp
push
inc
das
inc
dec
xor
push
inc
das
inc
dec
xor
push
inc
das
inc
dec
xor
push
inc
das
inc
dec
xor
push
inc
das
inc
inc
imul
inc
das
inc
dec
xor
push
inc
das
inc
inc
xor
jns
inc
jo
outs
pop
inc
xor
inc
inc
xor
inc
xor
push
inc
jp
inc
dec
push
inc
pop
inc
xor
inc
das
inc
inc
jae
xor
inc
das
inc
dec
cmp
push
inc
jbe
ss
inc
pop
push
inc
xor
ja
xor
inc
inc
inc
aaa
inc
inc
cmp
jb
aaa
arpl
push
inc
jb
aaa
cmp
push
inc
aaa
inc
cmp
sub
push
inc
cmp
cmp
fs
cmp
inc
cmp
outs
inc
cmp
inc
push
inc
xor
jae
cmp
outs
inc
cmp
cmp
das
inc
cmp
inc
inc
push
inc
push
inc
inc
jae
inc
push
inc
push
inc
push
inc
dec
push
inc
jbe
push
dec
inc
dec
push
inc
ss
push
addr16
cmp
das
inc
das
xor
push
inc
das
inc
inc
dec
inc
dec
push
inc
fs
dec
jae
dec
push
inc
jne
inc
ja
dec
push
inc
inc
inc
inc
addr16
push
push
inc
push
inc
inc
dec
inc
push
push
inc
xor
jae
dec
push
dec
inc
inc
inc
push
inc
push
push
dec
bound
xor
dec
push
inc
das
inc
inc
dec
inc
pop
push
inc
xor
imul
inc
dec
inc
push
arpl
push
inc
push
inc
push
inc
inc
push
push
inc
ja
pop
inc
inc
push
push
inc
xor
push
push
inc
dec
inc
pop
xor
cmp
arpl
xor
inc
inc
inc
push
pop
push
inc
cmp
outs
inc
pop
arpl
inc
inc
das
inc
inc
jae
push
push
inc
jp
pop
xor
push
inc
aaa
inc
popa
dec
inc
push
push
inc
ins
inc
popa
imul
inc
jp
popa
xor
push
inc
xor
dec
inc
push
push
inc
aaa
inc
push
jae
inc
push
inc
das
inc
inc
jae
dec
addr16
dec
inc
dec
arpl
addr16
push
inc
dec
inc
inc
dec
addr16
bound
push
inc
dec
addr16
push
dec
xor
dec
addr16
jb
push
jae
dec
addr16
jp
inc
dec
inc
dec
addr16
aaa
inc
inc
inc
inc
dec
addr16
inc
inc
inc
xor
dec
addr16
dec
inc
inc
push
inc
dec
addr16
popa
inc
push
xor
xor
push
outs
inc
push
dec
ss
ins
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
inc
push
inc
jae
je
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
inc
inc
inc
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
addr16
inc
inc
inc
inc
inc
inc
addr16
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
inc
jns
inc
inc
inc
inc
inc
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
inc
push
addr16
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jo
dec
inc
inc
inc
arpl
addr16
dec
inc
inc
addr16
push
ja
ins
inc
addr16
imul
jo
ins
push
xor
push
inc
imul
jo
inc
js
bound
push
xor
push
sub
inc
inc
inc
addr16
je
xor
arpl
jo
addr16
push
pop
ins
jo
pop
xor
push
xor
inc
push
je
inc
dec
inc
push
pop
push
jae
inc
ins
push
pop
dec
xor
push
jae
push
fs
inc
inc
inc
inc
inc
inc
inc
xor
jo
outs
push
xor
inc
push
bound
fs
arpl
imul
inc
fs
push
jns
push
dec
xor
inc
push
xor
push
arpl
dec
ins
bound
jae
push
xor
jns
push
dec
xor
jp
inc
dec
ins
pop
xor
dec
dec
xor
inc
inc
xor
xor
arpl
cmp
inc
xor
jp
addr16
inc
fs
push
jne
inc
fs
pop
push
xor
inc
push
xor
inc
push
je
ins
push
outs
arpl
push
pop
ja
push
pop
push
xor
inc
push
inc
push
inc
ins
push
inc
ins
jbe
ins
inc
jns
push
inc
jns
inc
dec
xor
bound
inc
bound
js
pop
push
dec
xor
cmp
jns
dec
pop
push
xor
push
inc
pop
inc
dec
ins
dec
push
inc
cmp
inc
xor
jns
inc
ins
jne
ins
cmp
push
inc
inc
pop
push
fs
imul
cmp
push
inc
dec
push
pop
dec
xor
pop
pop
dec
xor
push
inc
push
pop
dec
xor
pop
push
js
pop
ins
inc
push
ja
inc
bound
dec
bound
jbe
xor
push
push
push
xor
cmp
push
xor
push
gs
dec
xor
xor
ins
push
ins
bound
push
inc
ins
jbe
addr16
push
gs
inc
ins
inc
inc
inc
jns
xor
arpl
dec
inc
push
xor
inc
push
je
imul
push
fs
xor
popa
push
dec
jp
inc
dec
jbe
pop
inc
jo
inc
inc
xor
cmp
ins
push
jae
pop
push
jbe
outs
dec
inc
fs
push
jns
push
dec
xor
inc
push
xor
inc
push
je
ins
dec
xor
push
jo
push
push
jne
xor
je
inc
ins
jae
pop
dec
push
pop
pop
dec
xor
dec
ins
arpl
push
fs
xor
ins
push
xor
je
inc
inc
xor
dec
jo
inc
ins
xor
inc
xor
jo
outs
push
xor
inc
inc
pop
push
dec
xor
fs
push
pop
push
xor
ins
imul
ins
pop
outs
push
outs
pop
xor
xor
jbe
inc
push
jp
inc
inc
jp
xor
pop
ins
js
push
inc
ins
xor
push
inc
fs
push
jns
push
dec
xor
inc
push
pop
dec
jp
push
xor
dec
ins
inc
pop
pop
dec
push
ins
ins
ja
inc
ins
jbe
imul
dec
dec
jo
outs
push
xor
inc
inc
arpl
dec
ins
bound
jae
push
inc
jns
xor
pop
xor
fs
push
jns
push
dec
xor
inc
push
pop
dec
jp
push
xor
dec
ins
inc
bound
inc
xor
popa
dec
push
inc
fs
push
jns
push
dec
xor
inc
push
xor
je
ins
ins
jp
push
dec
jae
push
inc
xor
jo
outs
push
xor
inc
push
gs
dec
xor
xor
outs
push
jne
inc
ins
je
push
xor
ins
arpl
ja
xor
fs
ins
push
pop
dec
inc
push
xor
pop
inc
inc
xor
jo
outs
push
xor
inc
aaa
dec
push
inc
imul
push
je
inc
push
push
push
xor
dec
inc
inc
js
push
inc
js
push
push
je
ins
push
ja
ins
pop
xor
inc
xor
push
inc
pop
pop
push
ins
xor
inc
jae
inc
dec
push
push
push
xor
inc
push
inc
push
imul
jbe
inc
inc
push
fs
push
xor
push
jp
pop
dec
pop
bound
dec
jb
pop
push
ins
bound
push
popa
dec
dec
ins
pop
push
push
inc
push
xor
pop
pop
inc
inc
push
push
ins
push
ins
cmp
xor
dec
ins
pop
jo
xor
bound
push
inc
inc
inc
jns
xor
pop
xor
pop
pop
push
push
pop
xor
arpl
cmp
inc
xor
xor
js
pop
pop
dec
jo
jns
inc
bound
xor
push
js
arpl
arpl
jo
xor
inc
inc
push
jne
inc
inc
ja
inc
inc
push
pop
pop
dec
ins
fs
inc
push
arpl
push
pop
dec
jp
xor
arpl
dec
bound
jbe
inc
dec
xor
dec
xor
fs
bound
dec
inc
gs
ins
xor
dec
ins
fs
cmp
push
xor
push
fs
ins
jae
push
inc
push
arpl
push
pop
dec
jp
xor
inc
cmp
push
xor
bound
inc
push
xor
popa
push
xor
jbe
ins
xor
inc
inc
inc
arpl
dec
ins
bound
jae
push
inc
dec
pop
pop
push
inc
gs
push
push
pop
push
jo
ins
fs
arpl
dec
ins
bound
jae
push
inc
outs
pop
pop
push
push
inc
cmp
pop
push
jo
xor
pop
xor
pop
xor
pop
pop
dec
jp
inc
dec
xor
dec
xor
ins
jne
ja
inc
popa
inc
inc
jns
inc
push
jbe
xor
popa
push
xor
jbe
ins
dec
push
push
inc
ins
jp
inc
cmp
push
dec
jae
push
inc
inc
popa
pop
dec
ja
xor
inc
inc
dec
ins
pop
xor
dec
dec
xor
arpl
ins
bound
push
arpl
push
jns
inc
cmp
push
xor
dec
pop
pop
imul
push
xor
inc
jae
push
push
inc
push
pop
pop
ins
bound
push
pop
pop
dec
ins
fs
xor
inc
push
inc
push
xor
fs
push
jae
push
inc
pop
pop
push
ins
xor
ins
inc
inc
push
ins
bound
outs
pop
pop
push
ins
inc
inc
dec
jbe
push
dec
jo
ins
push
inc
push
push
xor
jae
xor
pop
push
push
inc
push
xor
je
inc
inc
jns
push
push
xor
xor
bound
ins
inc
inc
fs
fs
push
xor
arpl
je
inc
inc
jne
inc
js
inc
inc
dec
xor
push
jo
push
push
push
gs
inc
ins
push
inc
inc
jne
inc
js
inc
inc
fs
fs
xor
push
inc
arpl
push
pop
push
js
pop
xor
pop
push
inc
inc
bound
jo
ins
cmp
push
push
jne
inc
inc
inc
gs
inc
push
bound
jo
ins
cmp
push
push
jne
inc
pop
push
pop
ins
js
arpl
dec
pop
pop
push
push
arpl
push
pop
dec
jp
pop
dec
inc
gs
xor
inc
push
dec
dec
xor
push
ins
inc
jae
push
push
inc
push
push
xor
dec
imul
xor
jo
ins
arpl
xor
inc
push
je
ins
push
ins
gs
push
inc
pop
xor
pop
xor
push
push
inc
push
xor
push
xor
popa
push
xor
jbe
outs
pop
ins
arpl
inc
push
outs
dec
jbe
push
dec
push
dec
inc
dec
xor
ins
jne
ja
dec
bound
ins
arpl
inc
push
push
push
imul
ja
xor
fs
inc
jae
pop
push
xor
push
push
xor
inc
push
xor
push
push
inc
jne
push
pop
ins
arpl
push
push
pop
pop
dec
jbe
pop
dec
push
push
dec
xor
push
push
fs
dec
ins
pop
push
xor
xor
inc
push
je
imul
fs
fs
cmp
push
xor
inc
push
outs
ins
xor
inc
push
pop
push
inc
imul
jae
xor
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
inc
inc
inc
jp
inc
dec
push
inc
xor
inc
inc
inc
dec
push
inc
inc
push
pop
jae
dec
push
inc
push
dec
ja
jns
inc
dec
inc
dec
push
inc
xor
xor
inc
inc
xor
dec
inc
pop
push
inc
je
inc
push
inc
dec
inc
inc
ja
inc
inc
inc
dec
push
inc
push
dec
push
inc
xor
xor
addr16
ins
inc
inc
inc
inc
dec
addr16
ins
inc
inc
push
inc
pop
addr16
js
inc
imul
inc
imul
inc
inc
inc
inc
addr16
jo
xor
addr16
push
arpl
dec
inc
inc
dec
fs
inc
pop
pop
dec
dec
inc
dec
inc
addr16
inc
inc
ja
push
inc
inc
dec
inc
inc
addr16
inc
inc
push
dec
push
inc
ja
push
dec
inc
dec
inc
inc
push
dec
imul
fs
push
arpl
push
dec
fs
addr16
inc
addr16
dec
inc
ja
inc
inc
push
dec
addr16
inc
inc
inc
inc
inc
inc
dec
inc
inc
inc
inc
inc
push
ja
inc
inc
inc
push
inc
push
push
inc
inc
push
inc
push
inc
push
push
addr16
push
inc
arpl
inc
inc
inc
push
dec
arpl
inc
inc
inc
push
ja
inc
jns
inc
inc
imul
dec
inc
inc
inc
inc
imul
dec
push
push
inc
inc
inc
xor
push
push
inc
inc
inc
dec
pop
inc
push
inc
inc
inc
push
dec
inc
inc
inc
inc
inc
imul
inc
imul
dec
push
push
inc
inc
push
xor
inc
inc
inc
inc
inc
push
xor
dec
inc
inc
inc
inc
inc
addr16
inc
inc
addr16
inc
inc
inc
inc
inc
inc
xor
inc
inc
inc
inc
push
inc
dec
push
push
xor
arpl
jbe
imul
xor
fs
ins
jbe
ins
push
outs
arpl
xor
inc
inc
dec
inc
inc
inc
inc
push
inc
dec
inc
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
arpl
inc
pop
push
xor
bound
js
arpl
push
fs
dec
push
gs
dec
xor
xor
inc
inc
ja
inc
inc
inc
inc
inc
pop
inc
inc
inc
inc
addr16
inc
inc
dec
inc
push
inc
dec
dec
dec
dec
ja
xor
jae
xor
inc
inc
addr16
inc
inc
dec
addr16
xor
ja
pop
dec
jo
xor
dec
dec
dec
jo
inc
inc
jns
inc
inc
xor
inc
inc
dec
inc
inc
inc
inc
addr16
inc
inc
inc
inc
inc
inc
inc
imul
push
imul
xor
push
pop
jp
inc
xor
dec
ins
dec
xor
jp
inc
inc
je
push
push
jns
push
xor
inc
push
ins
pop
inc
dec
push
push
push
xor
dec
inc
inc
inc
arpl
inc
dec
push
bound
fs
arpl
imul
xor
pop
pop
dec
xor
dec
jp
push
xor
dec
imul
xor
dec
push
jne
push
inc
xor
inc
inc
inc
inc
dec
inc
inc
ins
xor
inc
inc
inc
inc
push
addr16
jae
cmp
js
push
inc
push
inc
dec
inc
inc
inc
inc
push
inc
inc
inc
push
xor
inc
addr16
inc
inc
push
push
arpl
addr16
push
dec
dec
inc
push
inc
inc
inc
push
inc
xor
inc
inc
inc
addr16
dec
inc
ja
inc
inc
dec
dec
inc
push
inc
inc
inc
outs
xor
inc
dec
inc
inc
inc
inc
inc
ja
inc
dec
inc
dec
dec
inc
inc
addr16
dec
inc
inc
dec
inc
inc
pop
inc
inc
ja
dec
inc
addr16
inc
ja
dec
inc
inc
addr16
inc
inc
arpl
push
inc
push
inc
push
xor
dec
inc
inc
arpl
inc
inc
addr16
inc
addr16
ja
inc
inc
pop
inc
dec
inc
addr16
inc
push
dec
inc
ins
push
dec
inc
ins
push
ja
inc
push
dec
gs
inc
inc
gs
inc
xor
dec
addr16
inc
inc
addr16
push
dec
inc
addr16
inc
js
arpl
ja
dec
inc
arpl
push
dec
je
pop
inc
fs
inc
inc
inc
inc
imul
inc
push
inc
inc
inc
outs
inc
push
inc
imul
inc
inc
push
xor
inc
push
inc
inc
inc
push
addr16
inc
addr16
inc
dec
push
dec
js
addr16
push
inc
push
xor
dec
inc
dec
inc
inc
ja
push
inc
ja
inc
inc
inc
inc
push
addr16
push
dec
dec
inc
dec
dec
dec
push
push
dec
inc
inc
push
inc
inc
push
xor
arpl
addr16
push
inc
inc
dec
inc
inc
arpl
addr16
inc
inc
xor
addr16
inc
inc
dec
inc
inc
addr16
inc
inc
inc
dec
inc
addr16
addr16
push
dec
inc
jb
xor
dec
inc
inc
dec
inc
inc
inc
inc
inc
inc
outs
dec
dec
inc
dec
dec
dec
push
push
dec
inc
inc
addr16
inc
js
cmp
inc
je
inc
inc
push
inc
ja
inc
inc
inc
push
inc
push
ins
inc
push
push
push
xor
dec
inc
ins
inc
push
push
dec
push
inc
inc
jo
push
dec
xor
push
push
dec
push
inc
inc
jo
push
dec
xor
push
push
dec
bound
jo
push
dec
xor
push
xor
push
push
dec
push
pop
xor
push
dec
ins
jo
dec
push
popa
fs
dec
xor
push
inc
dec
ins
jo
push
jp
popa
fs
xor
push
outs
inc
jbe
ins
jo
push
push
popa
fs
dec
xor
push
inc
dec
ins
jo
dec
jp
popa
fs
dec
xor
inc
xor
jo
push
inc
pop
popa
fs
pop
xor
push
dec
dec
ins
jo
push
inc
pop
popa
arpl
push
outs
push
inc
dec
ins
jo
dec
jp
popa
arpl
push
outs
push
dec
dec
ins
jo
push
jp
popa
arpl
xor
inc
xor
jo
push
jp
popa
arpl
push
ins
push
jne
ins
jo
popa
jp
popa
popa
push
outs
xor
inc
xor
jo
push
push
pop
popa
arpl
push
outs
inc
ss
ins
jo
gs
pop
popa
arpl
xor
inc
xor
ins
jo
gs
pop
popa
popa
push
dec
xor
inc
jo
ins
jo
arpl
popa
arpl
xor
inc
ss
ins
jo
bound
popa
arpl
push
outs
inc
outs
dec
ins
jo
pop
inc
pop
popa
arpl
xor
inc
xor
jo
push
push
popa
arpl
xor
inc
xor
jo
popa
outs
inc
pop
dec
inc
fs
push
push
xor
inc
xor
fs
dec
inc
fs
dec
jp
xor
dec
xor
fs
dec
inc
fs
dec
inc
push
xor
imul
xor
dec
inc
fs
push
jp
xor
arpl
dec
xor
dec
inc
fs
bound
push
xor
dec
xor
dec
inc
fs
dec
push
xor
dec
xor
dec
ins
dec
inc
fs
bound
push
xor
xor
dec
xor
fs
pop
push
xor
inc
xor
dec
xor
fs
pop
push
xor
xor
dec
xor
dec
inc
fs
pop
push
push
xor
xor
dec
inc
dec
inc
pop
jb
push
xor
arpl
dec
imul
jp
xor
outs
xor
je
dec
inc
pop
jb
push
push
xor
xor
je
dec
inc
pop
jb
inc
push
xor
inc
xor
je
dec
inc
pop
jb
jp
xor
push
xor
dec
jae
inc
pop
jb
push
push
xor
push
xor
je
dec
inc
pop
jb
push
xor
arpl
dec
imul
push
xor
inc
xor
je
dec
inc
pop
xor
push
xor
outs
xor
je
dec
inc
pop
xor
push
xor
dec
xor
pop
jb
inc
pop
xor
push
xor
inc
xor
je
dec
inc
pop
jb
push
push
xor
inc
xor
pop
xor
pop
xor
push
xor
cmp
dec
push
ins
dec
inc
pop
xor
push
outs
push
imul
push
ja
push
push
pop
outs
dec
ins
imul
jp
pop
dec
ins
ja
dec
push
xor
gs
push
xor
dec
inc
dec
push
xor
pop
xor
xor
push
xor
arpl
push
xor
xor
push
xor
xor
push
push
dec
xor
inc
inc
dec
pop
push
outs
inc
pop
push
xor
pop
imul
inc
pop
dec
inc
xor
push
dec
push
popa
inc
dec
jne
push
xor
ins
push
inc
xor
push
push
xor
inc
push
ja
push
jae
arpl
xor
pop
inc
jo
inc
push
ja
push
xor
ins
push
dec
pop
inc
jo
inc
push
ja
push
xor
ins
push
dec
pop
inc
jo
push
push
ja
push
arpl
arpl
push
dec
pop
inc
jo
jp
ja
push
arpl
arpl
outs
dec
pop
inc
jo
push
push
ja
push
push
xor
ins
ins
dec
pop
inc
jo
push
push
ja
push
dec
xor
imul
inc
jo
push
push
ja
push
arpl
arpl
jp
pop
inc
jo
push
ja
push
xor
ins
dec
dec
pop
inc
jo
inc
push
ja
push
outs
xor
ins
inc
dec
pop
inc
ins
dec
push
ja
push
cmp
arpl
dec
dec
pop
inc
ins
push
push
push
ja
push
imul
inc
imul
pop
inc
jo
push
ja
pop
imul
inc
ins
jae
pop
inc
jo
push
push
ja
push
push
xor
imul
inc
ins
push
push
push
ja
pop
dec
xor
ins
push
dec
pop
inc
ins
pop
push
ja
pop
inc
xor
push
ins
inc
inc
dec
jne
ins
push
push
fs
cmp
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
jp
inc
inc
inc
inc
addr16
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
imul
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
xor
jns
pop
push
jo
addr16
je
xor
arpl
ins
dec
ins
push
jae
inc
inc
das
dec
push
inc
addr16
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addr16
push
inc
inc
inc
inc
dec
inc
inc
inc
addr16
addr16
inc
inc
inc
ja
ja
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xor
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
inc
inc
inc
inc
pop
inc
inc
inc
inc
inc
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
xor
inc
inc
push
addr16
push
inc
inc
cmp
addr16
inc
inc
inc
dec
inc
push
ja
dec
inc
inc
cmp
addr16
inc
inc
imul
inc
inc
inc
inc
cmp
inc
inc
inc
inc
dec
xor
das
xor
inc
inc
inc
inc
inc
push
inc
inc
inc
dec
gs
aaa
inc
pop
pop
inc
inc
dec
inc
xor
jae
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
inc
push
inc
inc
inc
inc
arpl
inc
inc
inc
imul
inc
ins
inc
inc
imul
inc
ins
inc
inc
cmp
inc
inc
inc
inc
inc
push
inc
inc
inc
inc
inc
inc
inc
push
inc
arpl
push
arpl
jae
inc
inc
inc
fs
inc
jo
inc
cmp
addr16
inc
inc
inc
inc
inc
inc
inc
inc
ja
dec
push
inc
inc
inc
inc
inc
inc
inc
dec
inc
fs
inc
jns
inc
imul
inc
outs
inc
inc
pop
inc
popa
push
inc
jae
inc
push
inc
push
push
inc
jne
inc
pop
inc
bound
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
inc
ja
inc
inc
inc
dec
inc
inc
xor
dec
inc
dec
inc
inc
inc
inc
inc
ja
inc
addr16
inc
inc
inc
dec
inc
bound
je
inc
xor
push
inc
jne
dec
push
inc
arpl
inc
inc
inc
inc
inc
inc
inc
inc
pop
inc
inc
addr16
inc
push
inc
inc
inc
inc
imul
inc
ins
inc
inc
push
inc
pop
push
inc
jp
inc
dec
inc
arpl
jo
dec
inc
inc
fs
inc
jo
inc
cmp
addr16
inc
inc
inc
inc
inc
push
ja
ja
inc
cmp
ja
jae
inc
push
inc
arpl
addr16
inc
dec
inc
fs
inc
imul
inc
jp
dec
push
inc
pop
push
inc
je
inc
inc
inc
dec
inc
inc
inc
inc
dec
inc
inc
arpl
addr16
inc
inc
inc
push
inc
inc
push
inc
inc
inc
inc
push
addr16
jo
inc
ja
pop
push
inc
push
inc
inc
push
inc
arpl
jp
inc
imul
inc
jne
inc
inc
inc
inc
inc
inc
jp
inc
xor
dec
addr16
xor
xor
dec
push
inc
xor
inc
pop
inc
dec
inc
inc
jne
inc
dec
inc
dec
inc
inc
ja
inc
inc
inc
dec
ja
inc
inc
inc
addr16
inc
inc
inc
inc
inc
inc
imul
inc
xor
push
inc
arpl
jne
inc
inc
inc
bound
dec
inc
inc
inc
inc
bound
ins
inc
inc
inc
inc
pop
addr16
xor
outs
inc
pop
push
inc
je
inc
cmp
push
inc
jne
inc
push
inc
gs
inc
ins
inc
inc
inc
inc
push
addr16
push
inc
inc
inc
inc
push
inc
inc
ins
inc
inc
arpl
push
inc
jae
inc
dec
inc
bound
ja
dec
imul
inc
jo
inc
arpl
inc
inc
xor
inc
inc
dec
inc
inc
inc
inc
inc
cmp
inc
inc
xor
popa
push
inc
outs
inc
inc
addr16
fs
inc
addr16
dec
imul
inc
addr16
inc
dec
inc
dec
inc
inc
js
inc
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmp
addr16
jo
inc
arpl
push
inc
jne
inc
inc
inc
bound
inc
inc
inc
imul
inc
ins
inc
inc
xor
pop
push
inc
je
inc
push
inc
inc
inc
inc
imul
inc
ins
inc
inc
xor
ja
jo
inc
xor
pop
push
inc
xor
inc
push
inc
inc
inc
inc
jns
inc
imul
inc
push
inc
dec
dec
inc
bound
imul
inc
pop
ja
xor
xor
pop
push
inc
je
inc
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
arpl
ja
inc
cmp
ja
jae
dec
dec
inc
fs
inc
inc
inc
inc
inc
push
inc
inc
push
inc
inc
inc
inc
push
inc
inc
jns
inc
cmp
inc
inc
xor
dec
inc
fs
inc
push
inc
inc
push
inc
arpl
jp
inc
imul
inc
jne
inc
inc
inc
dec
ja
jne
inc
dec
inc
dec
push
inc
jne
inc
push
inc
dec
inc
inc
xor
addr16
dec
addr16
jp
inc
push
inc
dec
inc
inc
ja
inc
arpl
inc
inc
dec
inc
inc
inc
inc
inc
push
inc
inc
inc
dec
dec
inc
arpl
ins
inc
inc
xor
addr16
jae
dec
imul
inc
push
inc
inc
push
inc
arpl
jp
inc
imul
inc
jne
inc
inc
inc
dec
ja
jne
inc
dec
inc
dec
push
inc
jne
inc
push
inc
dec
inc
inc
xor
addr16
dec
addr16
jp
inc
push
inc
dec
inc
inc
ja
inc
arpl
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
inc
inc
inc
dec
addr16
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
inc
inc
inc
inc
jae
ja
inc
ss
inc
inc
inc
inc
inc
inc
inc
inc
jbe
aaa
cmp
push
xor
bound
xor
dec
jp
push
cmp
push
dec
js
push
imul
cmp
push
xor
push
push
inc
pop
je
inc
dec
arpl
push
push
bound
jne
push
xor
push
push
jp
push
sub
dec
inc
push
push
bound
jae
push
inc
xor
push
js
arpl
imul
push
inc
push
je
pop
dec
je
push
ins
push
ins
cmp
xor
dec
push
dec
jbe
push
jo
arpl
xor
push
imul
ins
ins
pop
pop
dec
xor
push
jns
xor
push
imul
xor
inc
imul
arpl
push
je
ins
js
push
push
push
ins
bound
jo
dec
imul
push
jns
xor
push
imul
inc
jne
inc
dec
bound
je
push
xor
pop
ins
inc
arpl
jae
push
dec
push
bound
push
dec
jp
dec
inc
imul
fs
dec
xor
xor
xor
push
js
arpl
imul
push
inc
push
je
pop
dec
je
push
ins
push
ins
cmp
xor
dec
push
dec
jbe
push
jo
arpl
xor
push
imul
inc
addr16
inc
js
pop
push
dec
xor
ins
xor
xor
inc
imul
dec
inc
js
pop
pop
inc
xor
dec
xor
push
push
arpl
xor
js
pop
xor
dec
dec
push
jp
push
dec
xor
xor
arpl
dec
outs
pop
push
xor
jns
je
push
dec
jns
xor
pop
outs
push
je
xor
je
ins
inc
jp
push
xor
sub
addr16
inc
inc
addr16
inc
inc
addr16
inc
js
pop
pop
inc
xor
dec
xor
push
inc
gs
push
push
pop
push
jo
xor
ins
bound
jae
pop
pop
ins
bound
pop
pop
dec
dec
bound
jbe
xor
dec
imul
pop
xor
arpl
imul
push
imul
addr16
inc
inc
addr16
inc
ja
arpl
js
push
push
jp
inc
push
imul
jo
ins
ins
jae
push
fs
arpl
dec
inc
imul
dec
xor
pop
xor
popa
pop
push
xor
dec
inc
inc
cmp
jns
pop
dec
xor
xor
dec
inc
push
jbe
pop
dec
jp
push
xor
dec
imul
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
ja
inc
inc
dec
inc
inc
inc
inc
push
push
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
or
add
dec
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
adc
or
or
sbb
and
adc
adc
add
jno
add
push
push
pop
or
adc
or
and
adc
add
cmp
add
or
add
add
add
add
or
add
add
pop
add
adc
jo
jb
addr16
and
xor
xor
add
or
inc
popa
jb
popa
je
add
sub
add
gs
sub
sub
sub
sub
xor
ss
add
pop
add
adc
je
push
dec
popa
je
popa
outs
imul
add
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
and
sub
or
ds
or
add
add
xor
or
add
add
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
