fcom
mov
jb
push
jb
push
mov
jb
mov
mov
jb
dec
mov
jb
or
jb
ret
mov
jb
daa
mov
jb
shl
push
add
jb
add
jb
js
jb
jp
jb
xchg
mov
jb
fwait
mov
jb
xchg
mov
jb
mov
jb
fwait
mov
jb
call
fild
jb
adc
jb
jle
jb
push
mov
jb
jbe
jb
cpuid
jb
and
jb
sbb
jb
xchg
mov
jb
push
mov
jb
add
jb
ins
mov
jb
std
mov
jb
or
mov
jb
ja
jb
ins
movs
jb
and
jb
xchg
mov
jb
sbb
jb
arpl
jb
xchg
mov
jb
frstor
jb
lahf
mov
add
add
inc
pop
cmc
sub
inc
add
mov
cld
mov
loopne
stos
mov
nop
dec
scas
mov
add
loop
arpl
add
mov
pop
add
add
xchg
mov
xchg
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
call
add
add
add
xor
add
inc
add
add
add
add
in
inc
sub
add
add
add
add
add
je
outs
jb
gs
jns
add
int3
xor
add
outs
out
and
mov
in
add
mov
and
(bad)
in
inc
mov
fisttp
cmp
xor
or
stos
add
xchg
mov
add
inc
add
add
pop
add
popa
jb
jns
add
add
add
inc
add
add
add
ins
outs
ins
outs
bound
outs
ins
gs
jb
add
adc
add
pop
add
add
add
inc
add
add
add
je
add
push
add
jae
jae
add
or
pop
pop
pop
add
add
inc
add
add
adc
push
ins
bound
ins
gs
jb
gs
add
adc
dec
popa
je
jb
popa
ins
gs
outs
jae
popa
data16
jae
add
je
mov
inc
add
add
push
add
add
sub
pop
add
add
add
fs
inc
add
add
add
inc
add
add
add
xor
add
or
adc
add
inc
add
clc
test
or
add
add
add
add
add
jmp
adc
inc
add
add
add
add
add
add
add
jb
popa
fs
add
gs
imul
add
push
gs
outs
jb
gs
jns
add
push
add
add
outs
out
and
mov
in
add
mov
add
add
add
add
add
add
add
add
add
add
arpl
inc
(bad)
cwde
leave
dec
scas
fcom
jae
add
add
add
add
add
add
add
add
add
add
adc
or
inc
stos
jae
push
mov
add
add
add
add
add
add
lahf
add
add
add
add
sub
in
add
add
add
add
add
add
add
mov
sbb
add
nop
dec
add
nop
dec
add
add
add
add
dec
and
add
add
add
(bad)
(bad)
inc
add
add
nop
dec
add
add
adc
inc
add
inc
add
add
add
add
add
inc
add
add
add
inc
add
add
add
sbb
add
add
sub
inc
add
add
add
dec
add
add
add
add
add
add
inc
add
add
add
mov
and
adc
xor
add
shl
add
pop
cs
and
add
inc
add
add
add
add
inc
add
add
add
inc
add
es
add
add
add
pop
add
add
je
inc
add
(bad)
(bad)
inc
add
add
add
add
add
es
add
(bad)
(bad)
inc
sbb
add
add
sub
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
sbb
sub
jmp
add
add
add
add
add
add
add
lods
dec
add
(bad)
(bad)
inc
add
add
and
dec
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
mov
inc
add
add
add
sbb
add
xchg
dec
add
add
add
xchg
xor
inc
sub
push
sub
inc
add
add
add
cld
sub
add
add
enter
add
add
add
add
add
push
add
add
add
add
sbb
inc
add
sub
or
add
inc
add
add
add
jl
inc
add
add
add
add
add
inc
add
add
add
je
inc
add
(bad)
(bad)
inc
add
add
add
add
pop
add
(bad)
inc
add
inc
add
add
add
add
add
inc
add
pop
add
add
add
or
add
sub
add
add
pop
push
inc
add
pop
add
add
add
adc
dec
add
add
inc
add
add
add
cs
sub
or
add
inc
add
add
add
cld
sub
add
add
add
add
add
inc
add
pop
cs
sub
add
add
add
sbb
adc
cmp
inc
add
inc
add
sbb
adc
cmp
inc
add
inc
add
sbb
or
inc
add
adc
cmp
inc
add
inc
add
sbb
add
sbb
adc
cmp
inc
add
inc
add
sbb
add
sbb
adc
cmp
inc
add
inc
add
inc
add
sbb
adc
cmp
inc
add
inc
add
inc
add
sbb
adc
cmp
inc
add
inc
add
sbb
adc
cmp
inc
add
inc
add
add
add
add
add
add
dec
add
(bad)
(bad)
inc
add
add
and
add
dec
add
add
add
das
add
pop
inc
add
add
add
add
rcr
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
and
add
dec
add
add
add
inc
add
pop
add
add
je
inc
add
(bad)
(bad)
inc
add
add
add
add
and
mov
es
add
(bad)
(bad)
inc
push
add
add
add
add
lods
and
mov
cs
sub
add
add
inc
add
add
add
fsubr
inc
add
add
add
inc
add
pop
cs
sub
pop
add
add
sbb
inc
add
add
sub
or
add
je
inc
add
pop
add
inc
add
add
add
adc
inc
add
add
sub
add
add
in
and
loopne
add
inc
add
add
add
adc
dec
add
add
sub
add
add
add
add
add
add
pop
cs
sub
add
add
add
sub
or
add
lods
and
lock
cs
sub
or
add
inc
add
add
add
cld
sub
add
add
clc
and
add
add
inc
add
add
add
add
add
pop
inc
add
inc
add
adc
cmp
inc
add
inc
add
and
pop
pop
inc
add
adc
cmp
inc
add
inc
add
and
pop
pop
inc
add
adc
cmp
inc
add
inc
add
inc
add
inc
add
adc
cmp
inc
add
inc
add
inc
add
inc
add
adc
cmp
inc
add
inc
add
pop
inc
add
adc
cmp
inc
add
inc
add
and
pop
pop
inc
add
adc
cmp
inc
add
inc
add
and
pop
pop
inc
add
adc
cmp
inc
add
inc
add
add
scas
dec
add
(bad)
(bad)
inc
add
add
add
xlat
stos
adc
mov
mov
pop
pop
ja
add
add
add
mov
add
add
inc
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
and
add
add
add
inc
add
(bad)
(bad)
call
sub
pop
and
add
pop
xor
add
inc
add
add
add
sbb
(bad)
(bad)
(bad)
call
sub
jo
inc
add
add
add
inc
add
add
add
je
outs
jb
gs
jns
add
popa
jb
jns
add
jb
gs
gs
popa
jne
gs
add
add
push
imul
push
outs
jae
add
add
(bad)
in
inc
mov
fisttp
std
out
adc
into
popa
cs
icebp
jg
shr
mov
sbb
cmp
mov
hlt
movs
fnstenv
push
dec
pushf
and
mov
cdq
iretw
adc
pusha
rcl
add
add
cmp
push
add
xor
inc
cmp
outs
addr16
ins
and
ins
gs
sub
sub
arpl
jae
data16
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
fsub
add
push
add
add
add
add
and
inc
add
add
add
add
add
dec
lods
xor
or
stos
add
xchg
push
ins
bound
ins
gs
jb
gs
add
add
dec
lods
xor
or
stos
add
xchg
inc
outs
jb
add
add
or
add
imul
gs
xor
add
add
adc
add
inc
outs
jne
push
gs
jne
arpl
jns
gs
add
nop
es
add
add
movs
xchg
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
jbe
jb
imul
add
gs
imul
inc
add
add
in
es
add
es
add
add
mov
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
outs
ins
ins
cs
ins
add
add
add
add
jns
gs
push
outs
ins
add
add
add
add
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
jbe
jbe
xor
add
add
add
add
je
gs
xor
pushf
daa
inc
add
add
enter
mov
or
je
jmp
push
mov
call
jmp
add
add
dec
add
cmp
push
add
xor
and
push
add
xor
add
add
hlt
daa
inc
add
inc
add
add
add
lods
xor
or
stos
add
xchg
push
add
add
add
add
add
add
add
xor
add
adc
add
push
add
outs
add
je
and
push
add
ins
add
add
add
add
add
dec
add
add
add
add
add
add
add
jae
add
jns
lods
xor
or
stos
add
xchg
adc
add
inc
add
outs
add
add
ins
add
arpl
xor
add
add
add
add
inc
add
add
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
inc
outs
add
add
dec
outs
outs
outs
outs
outs
je
add
add
dec
lods
xor
or
stos
add
xchg
pop
pop
jbe
popa
push
je
push
popa
jb
popa
ins
add
pop
pop
jbe
popa
push
je
inc
outs
jo
add
add
hlt
daa
inc
add
xchg
dec
add
jbe
popa
push
je
inc
ins
jo
inc
imul
add
add
pop
dec
lods
xor
or
stos
add
xchg
push
outs
fs
add
add
add
pop
pop
jbe
popa
push
cmp
outs
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
push
popa
jb
jne
add
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
inc
popa
je
push
popa
jb
add
add
jbe
popa
inc
popa
je
push
je
add
add
pop
pop
jbe
popa
push
je
dec
outs
jbe
add
add
inc
gs
outs
je
gs
gs
dec
lods
xor
or
stos
add
xchg
add
add
pop
pop
jbe
popa
push
cmp
js
xor
add
add
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
dec
xor
popa
jb
add
jbe
popa
push
popa
jb
fs
jbe
popa
push
popa
jb
imul
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
dec
gs
add
add
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
mov
pop
mov
mov
jnp
pop
test
mov
mov
inc
(bad)
cwde
leave
dec
scas
fcom
jae
hlt
test
movs
xchg
test
lods
xor
or
stos
add
xchg
push
jns
je
jb
gs
add
push
dec
lods
xor
or
stos
add
xchg
inc
ins
jb
push
imul
add
add
cli
dec
lods
xor
or
stos
add
xchg
dec
jo
gs
outs
gs
add
pop
add
ds
inc
dec
dec
mov
and
out
or
xchg
cld
addr16
adc
or
inc
stos
jae
push
mov
adc
dec
mov
(bad)
xchg
push
imul
gs
add
dec
gs
imul
sub
xor
or
stos
add
xchg
dec
outs
outs
addr16
addr16
add
jbe
gs
addr16
addr16
add
add
dec
outs
fs
outs
jb
outs
gs
jae
jae
add
add
imul
jae
imul
outs
arpl
jo
jne
add
dec
xor
or
or
inc
stos
jae
push
mov
ds
inc
dec
dec
mov
and
out
dec
lods
xor
or
stos
add
xchg
inc
add
add
add
add
push
imul
push
outs
jae
or
jb
imul
ins
gs
xor
sbb
add
and
and
(bad)
(bad)
jmp
add
imul
ins
gs
xor
add
jno
add
sub
add
test
inc
and
or
push
popa
jbe
gs
addr16
addr16
add
add
add
add
fild
add
or
add
inc
pop
add
add
or
push
imul
gs
and
or
pusha
or
add
popa
add
bound
jb
add
imul
add
add
push
add
add
add
sbb
bound
gs
popa
je
add
add
and
add
add
adc
dec
outs
fs
outs
jb
outs
gs
jae
jae
add
pop
add
ins
gs
add
jbe
repnz
add
inc
inc
add
add
outs
arpl
jo
jne
add
add
or
push
add
add
jae
adc
add
add
add
add
sbb
outs
jae
sbb
add
add
add
add
add
or
dec
outs
outs
addr16
addr16
or
call
xchg
or
add
hlt
add
add
add
add
add
or
dec
gs
imul
or
test
or
add
add
add
add
push
add
addr16
xor
push
add
adc
mov
adc
add
add
add
push
add
gs
imul
jb
gs
add
add
or
adc
add
inc
add
add
adc
push
je
ins
jo
jae
popa
data16
jb
gs
pop
add
add
add
pop
add
add
push
aam
add
inc
xor
add
or
gs
imul
add
or
inc
outs
je
gs
outs
imul
dec
adc
add
inc
add
dec
xor
or
rol
cwde
leave
dec
scas
fcom
jae
daa
cmp
pop
mov
mov
cmp
xor
or
stos
add
xchg
dec
jle
add
adc
push
outs
jb
gs
gs
popa
jne
gs
add
imul
imul
xor
sbb
add
and
jl
add
add
jl
add
add
jl
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
or
xchg
add
(bad)
jge
jle
je
mov
mov
adc
call
cmp
mov
xor
aas
mov
retf
push
dec
push
inc
mov
jnp
out
jg
ins
pop
jae
mov
into
cmc
sbb
iret
jmp
sbb
aas
inc
movs
pminsw
loopne
mov
js
sbb
sbb
stos
adc
pop
outs
std
push
pop
outs
push
pop
xor
call
xor
enter
jns
add
dec
clc
add
xchg
dec
or
jb
mov
and
pop
in
test
in
dec
sub
mov
sti
pop
or
add
cdq
out
fisttp
cdq
scas
scas
imul
and
scas
mov
mov
repz
xor
vmovdqa
mov
stc
stos
mov
lock
inc
inc
(bad)
out
and
mov
pop
fistp
inc
push
pop
jb
lahf
xor
shr
jl
adc
mov
movs
xchg
inc
push
add
fcom
and
mov
jns
or
jl
push
or
cmps
push
mov
popf
dec
sub
ins
sbb
pop
mov
sub
std
mov
int
adc
ins
push
push
jmp
mov
sub
lds
adc
jbe
mov
jae
std
ss
dec
push
xor
daa
sub
mov
lahf
dec
cmps
mov
inc
shl
xor
les
xchg
sbb
add
icebp
dec
mov
pop
adc
sahf
xchg
jmp
cmps
nop
mov
test
cmp
jb
bound
sti
pop
sbb
fst
cs
sti
mov
aaa
lea
cmp
jb
imul
jg
push
mov
or
icebp
adc
mov
hlt
push
cdq
dec
das
mov
aam
and
test
adc
push
add
inc
popf
pop
adc
in
jge
push
sub
icebp
inc
push
aaa
cmp
jb
or
jns
adc
add
movs
cli
call
in
xor
in
sbb
push
adc
icebp
dec
pop
xchg
jmp
mov
in
rcl
ins
and
cmp
rcr
into
add
ds
xor
repz
jae
push
maskmovq
das
in
fwait
mov
daa
out
outs
les
outs
sub
mov
cmps
fild
pop
cmc
loop
lahf
push
(bad)
shr
or
je
or
clc
pop
add
inc
pop
jmp
inc
push
aad
in
jns
movd
(bad)
in
fwait
js
mov
je
push
sar
lahf
dec
pmulhuw
cmp
shl
xor
sbb
sbb
scas
adc
test
jo
mov
xchg
ret
mov
sub
mov
ret
mov
repz
inc
call
jns
fimul
jl
sbb
(bad)
pop
mov
outs
pop
push
(bad)
dec
cli
add
xlat
push
lods
cmp
push
push
xchg
sub
sbb
sub
mov
(bad)
push
inc
repz
iret
mov
push
repz
loopne
out
das
inc
shl
inc
es
mov
not
push
dec
cli
xlat
jmp
pop
sbb
lods
imul
jp
cmp
jns
fdivr
outs
cli
scas
(bad)
out
popf
add
and
adc
mov
clc
test
cs
inc
std
sub
push
and
nop
and
ud1
and
inc
push
mov
jmp
add
adc
loope
inc
mov
jecxz
or
sbb
mov
imul
mov
mov
(bad)
xchg
dec
dec
gs
sub
mov
mov
mov
scas
cwde
dec
ror
push
mov
inc
cwde
mov
xor
dec
aam
push
js
adc
arpl
outs
dec
pop
pop
inc
retf
popa
sbb
cli
test
inc
movs
cs
lock
cmp
jae
(bad)
les
scas
bound
push
mov
aam
les
mov
lods
pop
lods
pop
mov
mov
xchg
rcl
add
adc
push
push
imul
and
cs
(bad)
outs
push
pop
mov
test
cmp
dec
xor
imul
fsubr
pop
push
arpl
add
jb
sar
pop
imul
fidiv
pop
iret
fist
and
rol
dec
xor
lods
add
add
loope
cwde
mov
icebp
shl
loopne
js
ret
retf
sub
mov
imul
call
and
adc
test
xchg
sti
pop
gs
test
ja
sub
or
movs
add
mov
mov
jp
sub
jge
push
jno
mov
adc
clc
pop
pop
das
jecxz
and
icebp
es
cmp
inc
cs
lahf
and
push
ja
xor
push
adc
in
dec
adc
movs
int3
shr
pop
cmp
inc
loope
out
push
xchg
push
push
jnp
ret
mov
js
add
push
dec
or
test
jmp
sbb
stos
je
add
jmp
cdq
and
sub
ret
stos
mov
mov
pushf
or
in
int
or
mov
mov
cs
pop
sbb
xor
vsubps
adc
inc
xor
mov
out
mov
in
sar
and
push
data16
popa
imul
call
ss
cmps
xchg
inc
push
or
cmp
sub
mov
stc
push
fucomip
cli
push
xor
mov
push
mov
loop
sub
imul
jae
adc
cli
test
mov
jne
fwait
scas
xchg
xchg
jno
sub
and
push
pop
mov
inc
push
xchg
inc
mov
inc
js
mov
sub
sbb
mov
and
xchg
and
pop
add
dec
lods
loopne
sub
xchg
sti
xlat
cs
sbb
data16
test
mov
retf
jns
int
mov
pop
out
std
dec
pusha
inc
dec
fist
iret
je
inc
jbe
mov
cs
je
outs
mov
pusha
push
adc
dec
xchg
cmp
(bad)
(bad)
loop
sbb
mov
lock
(bad)
arpl
cmc
shr
pop
(bad)
ror
pop
sbb
imul
sti
jp
sbb
(bad)
fst
retf
cmp
sar
mov
mov
scas
fst
sbb
or
dec
cwde
stos
mov
jle
mov
push
pop
mov
sti
push
inc
lock
mov
cmp
jb
in
out
popf
pop
icebp
cwde
fimul
adc
jno
ins
add
mov
xchg
add
inc
sub
mov
aam
sbb
popf
push
xlat
fst
sub
in
mov
mov
mov
sub
inc
pop
add
jo
ins
sbb
loope
shr
cdq
jbe
mov
mov
add
mov
dec
or
xlat
lahf
push
xor
adc
xor
sbb
lods
stos
lds
outs
int
fist
pop
addr16
jb
popa
xchg
inc
push
rol
fcomp
jbe
in
and
xchg
and
adc
es
inc
cmps
push
mov
pushf
pop
jecxz
sub
sub
jno
pop
cmovge
mov
lea
sbb
popa
jnp
(bad)
pushf
inc
test
fdiv
mov
jle
mov
dec
aaa
xor
(bad)
jb
pop
or
lods
add
mov
test
push
(bad)
jne
and
ret
vmwrite
and
ficom
daa
adc
inc
add
cmp
sub
call
mov
mov
sub
mov
cli
stos
mov
lods
mov
inc
add
mov
xchg
ja
loopne
jb
adc
push
pop
repnz
jae
pop
adc
push
add
cli
loop
inc
mov
in
adc
leave
iret
or
idiv
cmps
push
mov
aaa
lea
sub
pop
stc
add
jmp
sub
mov
stos
pop
push
jge
cmp
sbb
(bad)
retf
dec
repz
sbb
lods
rcr
outs
es
mov
sbb
sub
leave
jle
or
push
push
adc
scas
xor
popf
pusha
ss
and
adc
mov
inc
inc
pusha
jmp
and
jno
(bad)
test
cmps
push
arpl
pop
pop
xchg
out
stos
xchg
dec
xchg
inc
stos
pop
adc
movs
xor
mov
jns
mov
dec
push
scas
sbb
dec
cmp
cmp
xor
hlt
test
jmp
fadd
push
sbb
jg
push
popf
push
out
xchg
cld
pusha
xchg
cmp
sub
jnp
scas
pushf
dec
pop
push
xchg
cwde
mov
in
mov
les
mov
hlt
add
inc
(bad)
mov
stc
repnz
out
popf
add
xchg
jo
mov
jno
stos
mov
(bad)
std
mov
inc
or
inc
retf
call
cwde
popf
js
cs
rol
push
jb
popa
mov
ds
mov
xchg
dec
jnp
outs
jo
xor
mov
test
inc
fcom
(bad)
in
js
push
ins
sbb
pop
std
push
arpl
stos
add
lahf
cmp
jg
imul
push
pusha
fwait
icebp
adc
adc
bound
jo
or
pop
daa
test
retf
and
ror
pop
or
pop
pop
adc
cmc
xor
loopne
iret
sub
imul
mov
shl
pop
(bad)
movs
cli
call
in
xor
in
(bad)
mov
retf
jns
adc
gs
into
dec
out
leave
aad
retf
shr
mov
inc
movs
lea
shl
je
mov
mov
fdiv
outs
test
add
jmp
mov
ret
mov
push
test
inc
xchg
or
and
inc
inc
repz
out
xor
cmp
sbb
js
fidivr
sub
lods
dec
in
pop
mov
jecxz
sub
imul
out
inc
sti
in
sbb
(bad)
push
mov
fstp
push
pop
jo
pushf
xor
call
cmp
inc
scas
mov
rol
rcr
aam
jae
mov
and
pop
out
in
mov
inc
(bad)
sub
dec
sub
push
or
and
arpl
mov
dec
xor
cmp
es
sbb
sub
dec
dec
cli
mov
retf
push
dec
push
call
cmp
jge
pop
daa
push
push
jae
mov
jo
cli
xor
mov
push
scas
push
pushf
inc
mov
fbstp
inc
es
jns
xchg
popa
push
mov
shl
out
dec
mov
jno
adc
push
pop
push
test
test
test
ret
sbb
add
cmc
out
mov
cdq
cld
xor
xor
js
xor
ret
sbb
add
fsubr
jg
(bad)
rcr
mov
icebp
or
sahf
shl
or
jg
or
push
adc
repz
movs
jp
addr16
aaa
jno
fucomip
ds
xor
in
and
adc
push
cmc
std
pop
lds
pop
fsub
sbb
das
jmp
xchg
aas
test
mov
sbb
push
adc
cld
call
(bad)
xor
jnp
mov
add
push
push
or
in
sub
xlat
sbb
ret
ins
and
popf
xchg
xor
push
repnz
popf
push
xlat
(bad)
sub
in
add
jno
or
pop
std
mov
cmp
cmp
sbb
shr
ja
or
mov
(bad)
jmp
push
out
jno
add
pushf
dec
or
xchg
lahf
fnstenv
mov
mov
xlat
mov
jnp
adc
retw
pusha
dec
dec
inc
dec
sbb
jne
in
pop
fs
mov
ja
(bad)
popa
std
mov
xor
xchg
add
xor
sbb
adc
ins
sub
or
cmp
aam
shr
pcmpgtd
add
out
pushf
mov
cmp
aaa
in
jl
or
jno
mov
sti
lods
mov
int
mov
test
adc
cli
mov
jmp
jbe
(bad)
sbb
scas
adc
test
cmp
sub
sbb
bound
dec
add
inc
in
mov
jmp
jge
arpl
aad
mov
cmp
shl
fiadd
fcmovb
leave
daa
xchg
outs
les
scas
out
cli
mov
cwde
xlat
fld
jb
fist
hlt
test
jne
sub
adc
xlat
or
call
cmp
cld
add
stc
cmp
movs
stos
cmp
sub
xor
ja
pop
ins
js
mov
dec
push
add
sahf
dec
mov
mov
fadd
jbe
adc
fdiv
xor
iret
jge
adc
rcl
repnz
push
fs
dec
daa
(bad)
test
mov
in
rol
mov
repnz
out
xchg
pop
cs
sbb
or
push
pusha
data16
idiv
cwde
and
mov
shr
call
jecxz
sahf
retf
cmp
scas
pop
mov
std
fsubr
faddp
(bad)
pop
adc
sub
pop
mov
out
das
test
xor
push
arpl
push
add
pushf
retf
adc
inc
push
pusha
jae
lahf
ss
in
push
xchg
mov
xchg
int3
je
arpl
sub
pop
dec
cld
or
fcomp
and
adc
in
stc
or
test
int
gs
mov
push
les
fwait
and
pop
adc
std
rcl
(bad)
jecxz
adc
enter
sbb
mov
clc
das
xchg
(bad)
sub
sbb
mov
je
(bad)
aaa
dec
dec
pop
xor
daa
sub
cdq
sub
sbb
pop
sub
mov
mov
xchg
sbb
add
repnz
mov
xchg
dec
rcl
retf
and
add
lock
test
or
inc
dec
fst
into
fadd
sbb
or
shr
gs
xchg
sbb
or
neg
aam
repz
fdiv
(bad)
cmps
pop
mov
dec
mov
mov
int3
jge
cli
jg
inc
sahf
pop
adc
in
jle
push
cmp
pop
push
int
mov
inc
add
lahf
and
repnz
(bad)
inc
push
sti
jmp
in
xor
out
sbb
movups
test
xor
xchg
cmps
mov
les
mov
xchg
call
inc
hlt
jns
jae
retf
xchg
test
adc
lods
push
cwde
inc
mov
fsub
cli
and
leave
enter
add
je
push
aaa
aas
pushf
pop
jecxz
sub
in
pop
and
jno
sub
retf
inc
add
cmp
sub
xchg
adc
mov
adc
mov
fstp
jmp
aam
fistp
mov
mov
imul
fiadd
scas
call
inc
and
mov
adc
push
add
std
in
dec
mov
jo
push
pop
iret
push
pop
xchg
cmps
cmps
bound
hlt
xchg
jae
jp
rcr
mov
sbb
add
in
mov
inc
dec
stos
push
repnz
aaa
out
test
xor
cmp
sbb
pop
pop
dec
not
lock
push
dec
jmp
daa
test
retf
and
ror
pop
or
pop
pop
adc
mov
repnz
mov
mov
iret
mov
xchg
dec
dec
arpl
mov
sub
ja
pop
gs
pop
popa
cdq
repnz
rcl
adc
sbb
lods
or
push
cmps
aaa
inc
xchg
test
fnstsw
jnp
mov
dec
push
mov
stc
xlat
lds
cmp
imul
xchg
fild
adc
outs
and
mov
icebp
xchg
(bad)
arpl
jle
mov
dec
pop
adc
mov
xor
(bad)
outs
mov
mov
test
aaa
push
fcmovnbe
jno
jg
pop
mov
push
test
inc
push
or
fwait
test
mov
and
and
jg
adc
sub
out
push
cmp
dec
sub
outs
and
je
pop
adc
mov
test
outs
std
or
out
jmp
and
adc
jns
rcl
mov
jbe
mov
(bad)
aad
mov
and
pop
mov
inc
(bad)
in
dec
sub
(bad)
jle
xchg
sbb
sub
in
hlt
call
xchg
sbb
push
outs
outs
sub
dec
or
in
or
popf
(bad)
retf
pop
xor
dec
jg
push
push
jae
mov
jo
cli
out
dec
inc
add
mov
sub
bound
pop
fs
out
jns
xchg
sbb
and
mov
xchg
movs
xlat
mov
fcomp
push
push
cmp
aad
je
xlat
mov
push
stos
mov
cdq
cld
xor
jle
sbb
imul
pop
or
pop
add
cwde
out
jle
(bad)
rcr
outs
daa
es
movnti
ins
rol
lods
xchg
pushf
sub
pop
or
or
push
push
adc
repz
sahf
movs
frstor
int
bnd
pop
data16
lods
mov
add
sbb
xor
cmc
std
pop
lds
pop
fsub
(bad)
xor
jmp
(bad)
sti
bound
retf
dec
pop
in
aas
dec
pop
inc
mov
sbb
shl
arpl
sti
pop
inc
dec
stos
pop
aaa
dec
jnp
cmp
cmp
pop
pop
or
movs
or
cmp
fsubr
cmp
and
mov
into
pop
push
out
dec
cld
popa
xchg
clc
(bad)
inc
scas
mov
rol
add
aas
jge
sub
sbb
mov
adc
dec
arpl
out
sub
rcr
gs
sub
and
ss
sbb
ret
add
dec
pop
xchg
jmp
mov
and
cmp
rcr
into
add
sbb
jg
lds
add
cli
push
push
maskmovq
imul
xchg
and
adc
and
cld
sti
adc
or
mov
add
lock
fist
fist
add
scas
cmp
sub
adc
pop
or
popf
pop
mov
cmc
(bad)
aaa
in
jl
(bad)
iret
sub
imul
sahf
fstp
lea
adc
pop
push
cli
mov
jnp
xor
into
ins
adc
adc
dec
mov
mov
pop
add
sti
stos
mov
jmp
jge
arpl
xchg
mov
and
cmps
inc
movs
push
mov
xchg
jns
fimul
les
outs
and
scas
mov
push
xlat
xchg
inc
add
iret
cwde
push
sub
adc
movs
mov
ds
sub
mov
cmp
mov
nop
dec
jns
ins
outs
sbb
mov
mov
add
jmp
jge
push
test
mov
dec
xor
xchg
add
xor
shl
xchg
pop
sbb
push
and
hlt
mov
lock
dec
test
add
inc
dec
jecxz
cdq
mov
aaa
shl
inc
jns
or
ins
fdiv
out
cmc
jmp
fistp
fist
jmp
cmps
and
cmp
sti
mov
retf
push
push
in
dec
cli
pop
xchg
cmp
sub
dec
push
or
xchg
mov
loop
xchg
jge
in
ret
push
mov
std
adc
cli
aam
mov
mov
mov
and
mov
ja
popa
adc
fwait
add
jmp
push
pop
icebp
in
test
xchg
inc
daa
xchg
int3
xor
and
sbb
mov
cmp
push
or
in
sub
and
ins
jns
or
hlt
mov
pop
sub
jnp
mov
and
mov
push
sbb
push
pop
adc
movs
(bad)
cmovle
rcl
call
jae
mov
sbb
mov
mov
(bad)
cli
mov
mov
mov
dec
dec
pop
out
movs
daa
in
push
sub
data16
pop
addr16
arpl
dec
cs
ret
sub
cmps
scas
or
xchg
test
lea
enter
ins
cs
lock
mov
cli
push
loope
shl
leave
iret
popaw
sbb
add
or
mov
aaa
lea
jl
jb
mov
les
push
adc
push
mov
hlt
paddusw
aad
fs
leave
xor
addr16
push
adc
dec
push
inc
sahf
es
ret
ins
jae
lods
repnz
stc
ret
daa
ss
push
jl
sbb
int
jae
or
jp
push
cmp
mov
xor
ins
jb
mov
fwait
pop
pop
enter
icebp
xchg
pop
fldlg2
jl
(bad)
rcl
mov
or
mov
xor
and
or
add
aas
cwde
push
(bad)
lock
fbld
sub
lds
mov
stos
aaa
int
test
ins
and
bound
je
or
sti
pop
ret
jecxz
in
fcmovu
sbb
sub
or
mov
mov
adc
pop
pop
jbe
cli
xchg
cmp
aam
pushf
js
mov
mov
stos
mov
lods
push
call
fucomp
cld
and
mov
adc
adc
in
dec
mov
out
xchg
pop
cmps
bound
add
xchg
jae
jp
rcl
mov
aad
mov
repz
call
add
addr16
icebp
add
jmp
mul
sbb
(bad)
mov
dec
mov
sbb
lods
cmp
pop
mov
ins
leave
push
or
dec
neg
(bad)
inc
stos
xchg
retf
jl
cmp
adc
std
mov
repnz
mov
hlt
xor
pop
ins
mov
push
add
loop
mov
mov
inc
and
adc
push
scas
lods
imul
push
mov
push
cmps
aaa
inc
push
mov
cmp
mov
sbb
cli
scas
xor
mov
bswap
mov
jmp
inc
loop
sub
pop
sub
and
add
icebp
push
(bad)
arpl
cmc
shr
pop
int3
push
push
(bad)
mov
sub
sbb
mov
pop
stc
add
jmp
cmp
das
test
je
push
test
mov
call
nop
popf
xlat
cs
mov
aad
daa
retf
int3
je
shr
dec
cld
or
xchg
push
cmp
jno
fucom
jne
bound
pop
cmp
jns
mov
push
add
jb
dec
xor
aaa
and
and
outs
outs
sub
push
rcl
ret
sub
xchg
adc
pop
adc
or
call
neg
cmp
dec
jg
leave
shr
fnstsw
sub
(bad)
aaa
nop
dec
pop
xor
sub
xlat
cdq
outs
rcr
sub
mov
mov
push
fcom
sbb
imul
in
fisttp
and
add
mov
add
add
test
int3
out
scas
dec
out
pop
mov
in
sub
jo
sub
mov
xchg
push
add
cdq
inc
xchg
lea
sub
popf
xor
jmp
test
xchg
leave
jno
popa
mov
stc
push
mov
xchg
dec
aaa
jmp
sub
pushf
jb
daa
lea
div
sbb
mov
add
sbb
pop
cmp
inc
cs
inc
push
xor
pop
nop
adc
stos
xlat
mov
int
cmp
ret
iret
or
add
inc
dec
loope
xchg
hlt
xor
pop
pop
packssdw
mov
mul
mov
mov
xchg
aas
pushf
test
cmp
fsubr
cmp
and
jno
mov
xor
inc
movs
fadd
adc
pop
or
mov
jge
call
sbb
mov
sbb
inc
fist
retf
sub
ds
add
data16
out
loope
cmp
ficom
sbb
(bad)
cmc
xchg
pop
fucomp
jg
fdivp
aam
mov
push
adc
movs
add
xchg
popf
cli
test
xchg
jge
mov
hlt
xor
push
enter
retf
dec
inc
add
popf
jle
mov
and
outs
ja
sbb
cmp
cmp
and
(bad)
arpl
push
stc
push
arpl
jle
data16
mov
int3
pushf
push
in
xchg
sti
pop
xchg
cmp
sub
ret
iret
test
(bad)
pop
pop
pop
add
cmp
mov
pop
mov
(bad)
push
in
add
cmp
lea
aam
ins
adc
add
retf
cmps
std
jmp
test
loop
fdiv
jge
and
pop
pop
les
push
sbb
lods
(bad)
xchg
outs
es
mov
push
pop
mov
inc
fisttp
vxorpd
int
scas
out
out
sahf
pusha
ss
and
adc
jb
push
sbb
xor
mov
pop
sbb
cwde
sahf
(bad)
jmp
cmps
ror
retf
bound
cli
dec
pop
inc
into
gs
xor
arpl
sti
mov
aaa
lea
cmp
jb
imul
jg
popa
mov
dec
xchg
cmp
cmps
std
lea
xor
outs
into
jl
adc
mov
movs
xchg
inc
push
push
mov
cmp
cmp
adc
jl
push
or
cmps
push
mov
popf
dec
sub
jae
mov
lds
push
adc
dec
(bad)
cmp
(bad)
aad
cmp
mov
outs
retf
push
or
dec
inc
cmps
fidivr
and
sub
(bad)
pop
xchg
sbb
cmp
sub
mov
test
inc
fcom
leave
ins
xlat
cmp
std
pop
arpl
stos
add
lahf
stos
pusha
in
fistp
cmp
(bad)
adc
or
lahf
inc
mov
xchg
pop
fidiv
ror
out
push
sbb
imul
mov
dec
out
xlat
fistp
sbb
js
cmp
push
ds
jne
loopne
jns
gs
ins
xor
mov
stos
mov
inc
inc
pop
out
jnp
mov
and
aaa
push
and
ins
sub
dec
dec
stc
mov
inc
dec
mov
outs
jle
loopne
leave
pusha
pop
push
jae
cmp
sub
jb
mov
outs
hlt
stc
xor
add
jecxz
and
adc
sbb
bound
and
nop
pusha
adc
push
(bad)
in
dec
mov
call
int
(bad)
and
fcmovb
mov
add
je
jnp
ret
mov
(bad)
std
add
in
mov
cwde
sti
xor
mov
shr
mov
call
push
je
fstp
push
pop
jo
pop
xor
call
xor
leave
sub
add
inc
xchg
mov
and
pop
out
test
in
dec
sub
mov
cld
pop
xchg
cmc
sub
and
push
data16
pop
bound
dec
mov
or
and
clc
(bad)
jl
mov
dec
push
mov
stc
push
aas
out
sti
mov
cmp
mov
and
aad
andps
and
push
push
pop
imul
inc
clc
not
pushf
xchg
xor
outs
retf
aaa
adc
or
dec
push
dec
mov
add
ins
cmc
pop
cld
lds
in
inc
pop
cmp
rcl
jmp
mov
sti
add
adc
(bad)
xor
jne
imul
mov
fwait
dec
or
inc
into
xor
sahf
fsubr
mov
sbb
add
inc
icebp
push
mov
shr
mov
xchg
push
jg
jb
and
jbe
arpl
push
mov
xchg
cmps
test
icebp
mov
mov
into
xor
cmc
std
pop
lds
pop
fucom
(bad)
xor
jmp
adc
test
mov
mov
adc
std
call
(bad)
xor
jnp
mov
mov
xor
call
stos
mov
mov
push
fst
sbb
enter
and
fmul
fcom
push
loopne
ret
mov
dec
lods
ss
stc
push
inc
xchg
daa
test
int
mov
dec
stos
fld
fld
enter
ret
mov
mov
test
in
stc
mov
xchg
(bad)
fadd
jno
ficom
ins
push
fnsave
inc
adc
or
or
inc
pushf
mov
inc
sti
add
sbb
mov
mov
int3
pop
imul
mov
add
ds
dec
scas
jecxz
jb
xlat
inc
pop
jne
adc
aam
pop
push
lods
lods
addr16
push
mov
ds
add
ror
icebp
inc
push
arpl
es
cmc
xor
mov
sbb
or
clc
push
cmp
jb
gs
add
movs
cli
mov
jnp
xor
mov
test
clc
aam
sbb
sbb
bound
dec
add
inc
in
mov
jmp
jge
fs
aad
mov
repz
jo
aas
jae
add
shr
mov
loop
cmp
loopne
sbb
or
xlat
push
lods
cmp
pop
mov
imul
sbb
loop
stos
xchg
retf
jl
cmp
adc
mov
push
hlt
and
or
repz
test
int3
xor
mov
ret
lahf
mov
xchg
mov
cs
pop
cmovge
mov
inc
push
mov
jb
shl
(bad)
int3
arpl
ja
mov
mul
nop
in
pop
xor
jae
cld
ss
dec
push
xor
es
cwde
sub
pop
rcr
gs
mov
or
nop
sub
add
icebp
dec
mov
xchg
dec
rcl
retf
faddp
sar
imul
out
call
aas
push
jns
pop
adc
dec
lods
pop
mov
out
das
test
xor
push
fs
cwde
push
add
pushf
add
jno
push
pusha
jae
pop
ss
in
push
xchg
inc
daa
xchg
and
sbb
jp
mov
push
fcom
daa
cld
pusha
jmp
dec
fucompp
cmp
retf
mov
push
jno
or
clc
push
rcr
gs
mov
ins
fwait
dec
mov
jg
xchg
adc
pop
je
not
xchg
cdq
mul
xchg
xor
repz
jb
retf
push
stos
push
xchg
inc
sahf
addr16
int3
(bad)
stc
and
mov
cmps
fild
pop
ins
pop
or
int3
push
push
dec
movs
mov
ds
test
jo
add
inc
pop
jmp
inc
push
aad
in
jns
movd
mov
dec
fs
add
lock
out
and
pop
popf
sahf
dec
pmulhuw
cmp
and
sbb
push
pop
out
hlt
pop
(bad)
lock
cmp
jns
or
inc
pop
pop
push
inc
div
cmp
test
loope
shr
cmp
pop
push
int
mov
add
sbb
lahf
cmp
fnsave
sub
jb
lods
mov
add
mov
inc
dec
fiadd
sbb
bndstx
push
pop
lock
ror
ja
adc
dec
mov
test
jl
mov
and
mov
movs
or
out
into
mov
xchg
dec
dec
popa
in
mov
sub
arpl
pop
fs
pusha
cwde
icebp
lods
push
cmp
sar
cmps
ss
xchg
cmps
mov
lds
mov
dec
push
mov
clc
dec
cmp
cmp
push
enter
jmp
pop
in
xchg
fiadd
push
outs
and
push
lock
std
bound
jl
scas
popf
dec
pop
adc
mov
outs
mov
mov
test
cmp
test
je
jno
xor
repnz
aaa
out
test
xor
cmp
fcomp
mov
dec
mov
sbb
and
sbb
stc
mov
leave
push
or
dec
neg
(bad)
inc
out
retf
fst
ror
ret
pop
adc
repnz
adc
jge
push
sahf
lods
cld
adc
clc
mov
ret
and
xor
sbb
pop
fwait
mov
pop
adc
add
push
cld
inc
in
dec
push
nop
out
xchg
call
push
cmp
mov
std
jo
pusha
mov
clc
add
xchg
xchg
dec
ss
ins
sub
fbstp
pop
or
lods
add
in
cmp
(bad)
sti
pop
or
dec
xor
xchg
add
xor
rcr
xchg
sbb
adc
movnti
mov
dec
lods
aaa
popf
ds
test
scas
add
and
mov
hlt
aad
loop
jnp
(bad)
fnstenv
sub
mov
adc
stos
sets
pop
push
out
fucom
jns
xor
mov
cmps
add
dec
mov
xchg
or
and
or
add
cmp
and
adc
mov
add
adc
push
cmp
(bad)
ins
ret
ins
and
mov
xchg
aad
inc
dec
fld
adc
sub
jmp
mov
ret
jb
or
inc
fwait
mov
inc
sti
add
sub
ins
sbb
mov
lahf
push
cmps
outs
in
mov
push
mov
dec
add
sbb
dec
scas
loop
cs
inc
push
xor
pop
nop
adc
and
inc
inc
mov
cmps
add
dec
mov
test
shl
fs
sti
pop
inc
dec
stos
pop
repnz
aaa
out
test
or
lock
in
xchg
push
call
call
push
mov
retf
jmp
sub
dec
push
or
pushf
xchg
jnp
das
shr
mov
cld
push
loop
std
adc
cmp
das
imul
push
jp
push
cmp
aas
sub
sub
ja
xor
iret
push
adc
test
xor
xchg
movs
mov
mov
data16
add
call
xor
jle
adc
xchg
out
push
fadd
xor
les
mov
test
pop
in
jp
xchg
and
pop
ins
pop
or
int
push
nop
movs
movs
pusha
(bad)
leave
or
mov
mov
cs
pop
aad
out
mov
xor
jns
mov
lods
push
add
lahf
dec
push
in
sar
and
push
and
lods
(bad)
push
adc
cld
in
dec
mov
out
test
pop
push
fld
ja
mov
jmp
cs
mov
repz
mov
xchg
cli
das
xchg
jns
fimul
imul
data16
div
xchg
aas
add
ret
nop
cmp
xchg
sub
and
push
pop
mov
(bad)
push
inc
repz
mov
aas
ja
adc
cld
mov
icebp
mov
mov
hlt
das
test
and
xchg
push
mov
neg
sub
cli
xlat
jbe
adc
push
scas
lods
push
hlt
cli
lea
enter
leave
fadd
lahf
push
push
outs
cli
repnz
out
mov
sbb
dec
cmp
cmp
xchg
and
nop
leavew
push
mov
inc
xchg
mov
mov
iret
pop
adc
push
(bad)
arpl
cmc
shl
push
(bad)
rol
pop
pusha
sbb
add
idiv
cmps
imul
test
pop
stc
(bad)
xchg
nop
dec
test
xlat
cmp
sar
mov
mov
scas
fcomp
cdq
dec
or
(bad)
cs
sbb
add
jmp
fstp
mov
or
xchg
push
cmp
jno
fsub
jne
bound
xor
(bad)
jmp
fidiv
or
cmp
add
aaa
and
and
outs
ins
sub
(bad)
dec
or
mov
sub
popf
or
lahf
sahf
mov
neg
cmp
dec
jle
leave
shr
fdivr
sub
mov
dec
add
mov
mov
(bad)
jecxz
mov
mov
push
fcom
sbb
push
xor
gs
add
les
xchg
jp
jb
stos
lock
test
push
int
in
push
stos
adc
inc
mov
fsubr
popf
and
mov
dec
fadd
outs
dec
out
cmps
movs
mov
in
push
test
dec
lahf
lea
dec
inc
and
mov
dec
lods
aaa
pushf
ds
test
jl
pop
adc
xor
inc
jp
(bad)
int
fdiv
sub
out
fcmovu
mov
xchg
jbe
fistp
test
mov
int3
lods
or
sahf
cmps
add
mov
test
shl
stos
outs
add
cmp
jbe
adc
enter
add
aaa
aas
pushf
pop
jecxz
sub
in
pop
lods
mov
xchg
aam
inc
inc
fadd
adc
cli
or
mov
fstp
jmp
sbb
push
inc
cli
jg
jns
ror
sbb
mov
sahf
add
(bad)
loope
add
jmp
cmps
pop
cmp
dec
scas
loop
sub
xor
pop
(bad)
adc
and
inc
inc
repnz
out
ja
cmp
mov
test
mov
(bad)
cli
pop
inc
dec
stos
push
icebp
dec
aaa
out
test
xor
jg
push
int
(bad)
aam
(bad)
and
sbb
pop
arpl
mov
leave
cdq
dec
jmp
daa
test
retf
and
ror
push
or
pop
loopne
test
jp
das
shr
mov
sti
push
loope
cld
adc
cmp
mov
and
xor
pop
(bad)
movs
xor
loop
ins
popa
mov
xchg
push
add
cdq
cld
xchg
lea
out
leave
aad
retf
shr
mov
mov
aam
cmp
(bad)
mov
stc
push
bswap
imul
xchg
and
adc
outs
and
test
pushf
sub
mov
(bad)
scas
mov
jle
mov
dec
lahf
adc
mov
jae
(bad)
outs
mov
mov
jg
loop
retf
bound
sbb
add
neg
xor
outs
sti
out
dec
dec
add
in
loop
xchg
sub
push
mov
dec
pop
gs
movs
cmp
lock
popf
sar
push
sbb
aam
unpckhps
bound
push
mov
inc
movs
cs
xor
jno
nop
jae
push
or
and
ds
mov
mov
movs
xor
jle
addr16
pop
or
mov
pop
cdq
out
or
imul
adc
movs
add
push
es
and
mov
inc
pop
push
adc
xor
jecxz
aaa
fisub
sub
jb
pop
addr16
lods
mov
add
xor
and
repz
mov
sbb
arpl
sahf
mov
xchg
(bad)
int3
mov
sar
les
jp
xchg
cmps
into
aam
and
cmp
mov
add
cmp
xor
icebp
ja
jno
leave
test
movs
arpl
in
push
fiadd
stos
sub
retf
cmp
mov
pop
pxor
bound
hlt
shl
push
(bad)
rol
push
mov
mov
sub
(bad)
sub
adc
mov
push
clc
std
xchg
(bad)
dec
test
call
outs
sar
test
jae
imul
pop
xchg
cdq
inc
or
fwait
(bad)
sub
adc
lods
arpl
mov
leave
xor
retf
jae
arpl
sti
or
dec
cmp
jo
fnclex
je
popa
or
scas
push
xchg
movs
cmp
js
(bad)
imul
dec
xor
add
ss
loopne
sbb
adc
(bad)
dec
pop
mov
dec
cmp
sub
xchg
adc
mov
adc
or
inc
not
cmp
dec
jge
enter
mov
sub
push
xor
daa
sub
cwde
outs
rcr
push
sub
dec
pop
stos
mov
repnz
fist
pop
jp
push
xor
in
fimul
(bad)
and
or
add
scas
jno
stos
out
call
adc
in
imul
fcmovnb
retf
outs
lds
scas
mov
cdq
fcom
leave
jae
cdq
pop
outs
std
or
out
movs
sub
(bad)
je
or
imul
cmp
jge
aam
jp
mov
sbb
or
mov
iret
mov
xchg
dec
dec
(bad)
in
mov
sub
jbe
pop
fs
pusha
cwde
icebp
lods
push
rol
push
push
cmps
ss
xchg
test
nop
daa
and
cmp
jnp
mov
dec
push
mov
clc
dec
cmp
sar
push
leave
imul
in
xchg
fiadd
adc
outs
and
fstp
xchg
pop
lds
mov
dec
pop
adc
mov
outs
mov
mov
test
mov
fcom
lock
adc
xor
repnz
aaa
out
test
xor
add
dec
aam
(bad)
aaa
sbb
stc
mov
leave
push
or
dec
clc
pop
nop
repz
inc
out
retf
ficom
ror
ret
pop
pushf
pop
xchg
jns
sub
shl
setle
(bad)
cs
and
ss
popa
aas
sub
sub
jbe
pop
adc
add
push
std
inc
in
dec
push
xchg
out
xchg
jmp
push
cmp
mov
(bad)
outs
push
pop
mov
test
cmp
dec
xor
imul
fsubr
pop
push
arpl
add
jmp
stc
pop
pop
imul
fidiv
pop
iret
fist
and
rol
dec
stos
xor
jmp
int
lods
gs
mov
inc
cmps
(bad)
xchg
hlt
mov
xor
jl
push
enter
movs
cmps
pushf
pop
xor
icebp
sub
adc
jno
ins
add
mov
xchg
inc
test
(bad)
not
sub
leave
sbb
jmp
(bad)
jbe
leave
jno
popa
mov
stc
dec
pop
inc
inc
fist
int3
jo
ds
add
out
pop
xor
jmp
jbe
ret
ret
pusha
lahf
pop
or
mov
pop
fnsave
rcr
icebp
sbb
mov
imul
sar
push
xor
gs
add
les
inc
pushf
fwait
push
inc
hlt
js
jecxz
jl
push
leave
pop
lods
jg
jbe
push
or
inc
cmps
push
mov
pushf
dec
daa
cmp
sub
jo
pop
push
dec
dec
cld
mov
int3
fst
stc
or
dec
push
jmp
jg
xchg
lds
adc
jne
mov
jb
cld
xor
outs
lods
scas
pop
and
mov
inc
shl
xor
sub
arpl
mov
shl
add
lock
mov
push
rcr
push
stos
stos
dec
dec
xchg
mov
ja
jle
lds
mov
pushf
push
push
ins
idiv
aad
loop
jnp
or
outs
fnstenv
ins
icebp
imul
inc
inc
(bad)
call
dec
and
adc
push
out
fucom
mov
int
push
mov
cmps
add
(bad)
mov
xchg
std
cmp
out
xlat
xor
jno
shl
data16
cmps
xchg
xchg
clc
sub
dec
and
push
in
and
(bad)
push
sbb
xchg
rol
push
sbb
cmp
lods
nop
xchg
sub
loope
retf
shr
ret
and
les
mov
stc
push
push
push
imul
das
in
call
out
ins
ret
push
bound
test
inc
sti
sbb
arpl
icebp
stc
push
rcr
(bad)
shr
out
test
lds
or
neg
enter
ret
iret
loop
retf
movs
pop
pop
jne
mov
cmc
mov
(bad)
jmp
ja
mov
jae
add
pushf
sahf
aam
ins
iret
pop
mov
dec
pop
test
sahf
movs
cmp
lock
(bad)
adc
xor
push
add
inc
xchg
int
loope
retf
mov
scas
pop
mov
cld
push
loop
inc
push
cmp
jae
les
ss
clc
add
push
sub
jecxz
ins
bound
xchg
push
add
call
sub
retf
adc
lods
arpl
and
jb
bound
cli
pop
mov
xchg
dec
cmp
mov
es
pop
call
dec
fsubr
dec
xor
vfmaddpd
or
not
icebp
and
fs
pop
xchg
lock
addr16
dec
mov
mov
push
lods
mov
sahf
cdq
push
mov
icebp
shl
loopne
js
dec
push
mov
test
cmp
test
and
adc
gs
mov
clc
fld
mov
iret
sahf
push
out
xchg
std
bound
hlt
shl
adc
adc
pop
pop
sbb
sti
cmp
cmps
lods
ds
aad
add
out
add
cmp
fmul
enter
outs
push
std
push
arpl
test
pusha
in
daa
cmp
fcomp
(bad)
mov
dec
mov
sbb
lods
cmp
xchg
jno
sub
and
(bad)
inc
out
retf
mov
add
iret
cld
mov
repnz
mov
mov
popf
lods
cld
adc
test
xor
sbb
movs
push
fwait
mov
(bad)
adc
add
push
cld
inc
in
dec
push
nop
out
test
call
push
aaa
pop
mov
std
movs
mov
cs
je
ss
lea
sub
aad
outs
push
pop
add
(bad)
sahf
stos
mov
ss
fcmovnbe
jno
jle
pop
mov
fnstenv
push
into
fimul
and
rol
jno
stos
xor
cmp
xchg
and
jle
adc
xor
inc
ja
ret
(bad)
mov
mul
out
sti
mov
cdq
fcomp
mov
or
test
jno
mov
sbb
add
sahf
mov
rcl
nop
mov
and
cmp
jae
shufps
scas
arpl
mov
xor
aaa
and
and
outs
cmc
mov
xchg
rcl
ret
xchg
adc
push
adc
sahf
mov
out
jle
push
push
jb
mov
idiv
jbe
into
mov
imul
add
fucomip
(bad)
loope
sar
sbb
stos
fild
xor
adc
sub
adc
jp
mov
mov
sub
xchg
sbb
xor
(bad)
clc
pop
inc
dec
test
out
int
ins
mov
push
add
loop
push
in
sar
and
adc
imul
outs
mov
adc
je
cmps
xchg
inc
push
pop
mov
cmp
es
gs
push
mov
clc
dec
fucomip
stc
or
push
sub
mov
loop
sub
fs
mov
jb
adc
inc
retf
xor
fwait
sbb
adc
lock
ror
out
push
xchg
rcr
aaa
in
aam
mov
xor
pusha
sbb
cmp
jmp
test
jno
xor
jnp
popa
jo
shl
data16
movs
xchg
xchg
clc
sub
dec
fs
stos
add
mov
and
(bad)
adc
rol
or
dec
cdq
lods
(bad)
xchg
sub
test
xchg
push
mov
sbb
jge
les
or
stc
push
push
or
cdq
lahf
xor
pop
enter
dec
fucompp
cmc
or
xor
daa
and
lock
push
rcr
fcomp
shr
in
test
(bad)
cli
mov
xchg
loopne
ret
(bad)
retf
pop
je
mov
hlt
mov
mov
cdq
jbe
mov
cli
xor
rcl
sbb
arpl
popf
mov
fmul
adc
pop
addr16
push
test
mov
jle
mov
lods
pop
mov
sti
push
loop
inc
push
aaa
cmp
mov
out
pop
mov
in
sub
jo
sub
mov
xchg
push
add
cdq
inc
xchg
lea
sub
popf
xor
jmp
test
xchg
retf
popa
mov
cli
pop
mov
xchg
dec
cmp
outs
sub
out
out
mov
dec
fsubr
aaa
dec
sub
fsubr
std
pop
or
pop
in
not
fdivp
and
fist
ficom
ins
sub
adc
outs
neg
mov
pop
cmp
in
js
or
pop
std
push
arpl
stos
add
lahf
ja
ins
jb
sar
dec
push
lahf
inc
mov
xchg
mov
and
push
sbb
lea
int
pushf
iret
ja
addr16
das
or
add
inc
dec
inc
cdq
cwde
push
cmp
out
and
ins
xor
cmp
leave
enter
add
jne
push
cmp
or
cmp
fsub
call
push
retf
mov
in
lea
out
leave
aad
retf
shr
mov
inc
movs
lea
shl
je
cmp
sub
pop
lds
das
imul
movs
stos
inc
cmp
push
fist
jle
outs
push
mov
fist
ficom
sub
loop
les
mov
or
inc
cdq
sub
xchg
iret
jmp
mov
into
sub
jae
mov
je
scas
mov
add
mov
dec
dec
loopne
xchg
ja
gs
leave
fsub
neg
and
jno
mov
push
stos
or
out
scas
mov
rol
rcr
aam
cli
jge
call
aam
ds
shl
arpl
mov
sub
add
loope
pop
jecxz
and
icebp
pop
rcl
adc
test
inc
lods
or
push
cmps
cmp
test
fidivr
jl
mov
xchg
cdq
mul
xchg
xor
repz
mov
retf
push
stos
push
cwde
inc
lahf
stos
out
int3
fld
and
mov
cmc
cdq
add
pushf
inc
sub
nop
cli
(bad)
cs
xlat
lea
sbb
inc
(bad)
lods
mov
jmp
fcmovnb
mov
pop
in
cld
or
dec
ficom
iret
das
fadd
sbb
or
shl
jmp
clc
loop
mov
or
repnz
hlt
xlat
fdiv
(bad)
test
mov
dec
mov
mov
int
adc
pop
push
inc
div
cmp
test
loope
shr
cmp
pop
push
int
mov
dec
add
mov
daa
push
cmp
or
cmp
fisubr
pushf
and
pop
je
das
pop
adc
inc
push
cli
inc
jmp
je
shl
leave
into
gs
fld
adc
ja
mov
jne
add
dec
dec
or
jmp
sub
sbb
test
out
inc
aad
lock
xor
jge
xchg
and
mov
les
pop
add
repz
mov
cwde
dec
rcr
int3
lods
push
hlt
mov
lock
or
fdivr
outs
cli
scas
(bad)
out
popf
add
cdq
or
mov
mov
inc
add
mov
mov
jns
loop
je
adc
pop
pop
hlt
out
stos
or
and
mov
movs
xchg
inc
xchg
add
mov
fcmovnu
xchg
les
mov
push
pop
es
push
in
out
pop
sub
xchg
movs
test
jmp
pop
inc
gs
jae
movs
xor
push
xchg
mov
and
aad
mov
pop
adc
ds
fisub
gs
xchg
sub
sbb
mov
lock
aas
xor
jle
xchg
jmp
jbe
pop
rcl
mov
enter
mov
push
cmp
mov
and
ror
xor
push
push
or
cld
nop
stos
sub
scas
dec
sub
or
imul
jl
xor
cld
ins
ficom
stos
(bad)
mov
pop
push
fsub
jp
pop
lds
in
imul
rol
cmp
scas
repnz
mul
test
ficom
dec
aam
dec
xlat
iret
pop
mov
fld1
fisubr
and
es
jne
jb
xchg
xor
jae
aad
aas
adc
daa
aam
push
jns
xor
dec
dec
cmp
jmp
sub
jbe
cmp
in
pop
and
cli
adc
clc
sbb
dec
in
int
jae
aam
pop
out
lahf
sub
adc
sub
push
jle
jmp
loopne
pop
and
shl
jmp
pushf
cmp
lods
xchg
push
cwde
xchg
ror
retf
gs
mov
cmp
sub
mov
in
xor
hlt
pop
jge
mul
sbb
scas
fisubr
leave
out
push
inc
nop
mov
pop
test
mov
repnz
and
inc
stos
pop
sbb
and
add
sbb
xchg
arpl
push
sbb
aas
(bad)
fdiv
pushf
add
push
(bad)
cmp
cmps
sbb
pop
stos
mov
stc
adc
inc
pop
xor
jge
adc
mov
sbb
sbb
xchg
xor
pop
cmp
sahf
jns
scas
cmc
or
mov
std
fst
lds
or
or
mov
mov
enter
sbb
mov
jecxz
jno
bound
mov
test
sbb
iret
es
sub
cmp
xor
mov
dec
push
dec
dec
int3
cmc
mov
fsub
and
imul
jns
add
mov
(bad)
cmps
inc
ins
inc
cld
xchg
lods
mov
xor
cmp
in
shl
adc
scas
xchg
into
(bad)
sti
sbb
mov
jbe
jp
add
mov
out
dec
jno
movs
xor
popf
or
xor
jl
xchg
adc
retf
mov
mov
xchg
inc
pushf
adc
add
loop
cwde
(bad)
call
push
bnd
stos
jmp
enter
int3
pop
int
aas
mov
shl
out
aas
xor
xlat
push
inc
movs
dec
push
sub
imul
adc
sub
pushf
sub
int
dec
gs
xor
ret
mov
jmp
add
adc
jb
rol
fld
dec
iret
mov
inc
pushf
pop
punpckhdq
repz
jg
imul
add
mov
mov
xchg
std
fidiv
add
jns
and
adc
jb
push
pop
sub
dec
call
rcr
cs
popa
mov
scas
and
pusha
cmc
pop
adc
sub
pop
retf
stc
add
xor
ds
mov
out
add
pop
hlt
pop
sbb
lods
cmps
xchg
mov
jb
stos
jmp
dec
ficomp
jae
mov
(bad)
add
and
mov
push
ins
pushf
adc
fmul
fdiv
and
into
out
enter
(bad)
add
or
cld
popf
retf
not
repnz
psubq
sub
push
or
into
bound
jnp
ficom
imul
pusha
push
push
adc
(bad)
je
xchg
retf
cwde
addr16
iret
ss
mov
push
sub
jl
movs
xchg
ret
fdivrp
clc
add
mov
(bad)
shl
sub
xchg
mov
adc
sbb
mov
pusha
outs
dec
daa
cdq
loop
dec
inc
cmp
push
fmul
or
outs
jmp
cdq
sti
add
inc
push
dec
or
mov
cmp
xchg
fisttp
jecxz
es
add
cmp
mov
pop
push
test
call
mov
inc
lea
jno
nop
dec
gs
inc
dec
in
mov
inc
stc
xchg
lea
(bad)
jmp
mov
sar
pop
xor
sahf
stos
xchg
int
lods
pop
xor
inc
sahf
out
or
std
addr16
mov
ss
arpl
add
out
and
nop
sbb
inc
repnz
jl
inc
mov
cmc
xchg
sbb
movs
xchg
mov
adc
mov
popf
xchg
ds
dec
(bad)
push
nop
xchg
sar
mov
xchg
inc
add
aad
push
inc
and
push
fwait
mov
fs
xchg
mov
(bad)
sbb
sbb
xor
dec
push
out
out
enter
repz
jns
pop
(bad)
call
sub
faddp
pushf
ja
dec
push
hlt
push
pop
sahf
mov
push
push
sahf
fisubr
addr16
mov
sbb
jmp
les
inc
xchg
not
stos
stos
mov
sbb
jg
fdiv
push
lahf
mov
jno
push
xchg
bound
inc
arpl
iret
jae
(bad)
ret
mov
gs
cdq
xor
data16
sub
lods
push
sbb
xlat
mov
(bad)
imul
mov
cmp
xor
xchg
(bad)
cmps
mov
test
sbb
pop
sub
pop
pop
popa
pop
hlt
fdivr
sub
das
push
arpl
pop
repnz
loope
push
jo
sbb
mov
inc
push
inc
ins
fs
push
dec
pusha
loope
dec
ret
push
or
jg
mov
push
lock
(bad)
xchg
ss
sbb
xor
mov
je
out
ret
test
ins
stos
int
call
sbb
aas
maskmovq
or
and
xlat
jno
mov
add
jbe
sbb
xchg
stos
div
sahf
mov
jbe
xor
mov
sbb
xor
mov
(bad)
call
sahf
ja
push
push
js
mov
or
mov
push
rcr
(bad)
and
(bad)
shr
sar
dec
bound
frstor
sahf
or
sbb
jbe
fwait
cmp
adc
sub
pop
push
mov
push
stc
cli
mov
imul
cdq
cmp
cmps
add
cmc
retf
pusha
(bad)
call
aad
push
jae
sbb
or
dec
mov
mov
jecxz
sbb
in
pop
jno
call
retf
xor
mov
xchg
add
lock
ja
xchg
xchg
sbb
adc
scas
inc
cmp
loopne
jle
adc
or
pop
push
jnp
pop
repz
clc
lahf
sbb
pop
lock
movs
dec
xchg
call
gs
inc
stos
fcom
cmp
into
pop
cs
and
cdq
mov
adc
sbb
stos
repz
mov
int
mov
stos
lock
fld
ffree
mov
scas
int
mov
dec
mov
in
pop
retf
xor
lea
loop
push
loope
sub
xlat
push
arpl
test
ja
adc
pushfw
leave
push
push
jmp
repz
sub
arpl
cmps
test
scas
hlt
stc
cs
mov
neg
jg
xchg
xchg
add
mov
sbb
mov
iret
jmp
sbb
fwait
push
sub
push
or
inc
ss
xabort
lahf
jne
xor
pop
sbb
dec
push
add
div
clc
mov
ss
loope
ficom
mov
mov
jle
loope
push
jecxz
pop
imul
lea
pop
cmp
loop
mov
movs
into
pusha
add
inc
repz
test
in
push
mov
sahf
test
dec
icebp
bound
fiadd
jbe
add
vprotq
(bad)
int3
push
scas
push
or
sub
cmp
jo
mov
retf
dec
or
jg
sbb
adc
or
mov
add
mov
out
leave
mov
push
add
and
dec
and
test
sbb
fisubr
icebp
fwait
add
mov
scas
sar
mov
push
stos
adc
loope
popf
neg
aad
mov
mov
fnsave
dec
mov
jl
adc
sbb
lock
inc
xchg
adc
dec
jge
and
(bad)
cmp
xchg
xor
in
sbb
adc
jb
push
or
jno
ficom
sbb
xchg
das
pop
jnp
ror
in
push
push
test
cmp
movs
ins
mov
jo
pop
push
enter
xchg
ins
imul
fld
or
jg
(bad)
rcl
lock
add
retf
test
enter
fwait
sbb
ret
in
dec
or
not
pop
push
aaa
call
int3
xor
wbinvd
shl
pop
mov
pop
cmps
mov
shl
cmps
in
test
arpl
imul
pop
mov
and
push
push
xchg
xchg
call
imul
lock
mov
push
pop
xchg
repnz
xor
jo
(bad)
push
pop
mov
add
(bad)
and
push
pop
jae
out
mov
mov
test
nop
cmp
pop
adc
dec
jae
adc
fcom
adc
jecxz
jmp
inc
dec
(bad)
clc
in
mov
cwde
inc
int3
mov
adc
jp
movs
add
not
ret
xor
pop
fs
div
outs
ja
scas
ret
fadd
ffreep
retf
lods
in
nop
div
repz
sub
in
mov
scas
mov
push
mov
xor
mov
mov
pop
dec
ins
cmps
int3
push
mov
sahf
sbb
les
xor
jo
leave
lods
pop
cmc
mov
test
lock
nop
cmp
pop
inc
rep
or
sahf
sbb
int
mov
dec
jo
mov
lock
ins
xchg
mov
sub
mov
sbb
or
dec
push
(bad)
mov
xor
mov
in
ret
pop
outs
outs
pop
and
pusha
or
mov
repnz
jbe
adc
or
adc
add
cmp
mov
sbb
dec
xchg
jne
jo
aad
mov
push
mov
stos
fwait
in
cmps
repz
fcom
jne
push
jl
pop
je
add
or
icebp
test
dec
fldcw
test
mov
mov
movs
or
lds
pop
loop
dec
sbb
xchg
mov
jmp
cmp
icebp
cmp
jl
mov
push
scas
dec
mov
jp
mov
(bad)
out
inc
rol
fisttp
imul
sahf
jecxz
mov
adc
es
mov
mov
das
fcomp
push
add
shl
repnz
mov
enter
jle
dec
cwde
in
popa
ins
xchg
inc
add
adc
jge
and
fcmovne
mov
cs
and
out
xchg
cwde
cmps
loope
xchg
jae
imul
cmp
jg
cmp
retf
xor
mov
cmc
pop
(bad)
jmp
jecxz
mov
lea
or
and
cmps
test
gs
xor
and
(bad)
mov
jnp
add
aaa
lds
outs
adc
lahf
cmps
cld
cwde
pop
mov
xchg
mov
mov
ja
push
inc
sbb
and
dec
cmp
cmps
pop
jb
mov
xor
imul
stos
push
sbb
dec
pop
loop
pop
ror
inc
mov
adc
mov
leave
loopne
adc
leave
(bad)
fadd
mov
idiv
xor
sub
outs
mov
les
mov
aas
jae
out
cwde
cs
les
outs
retf
scas
mov
mov
jg
iret
les
imul
int3
jmp
lods
xchg
jmp
iret
jecxz
out
mov
mov
sbb
push
xor
pusha
jb
mov
and
test
ds
loopne
xchg
cmps
inc
cs
pop
xchg
or
out
mov
xchg
inc
mov
sub
(bad)
imul
rcl
xchg
and
mov
pop
jp
cli
loope
cmp
add
or
and
mov
loope
fs
sbb
adc
ret
lock
add
inc
neg
xchg
cmp
xchg
cmp
cmp
rcr
icebp
ins
adc
adc
cmp
sahf
xchg
push
mov
stos
inc
dec
outs
lods
xchg
(bad)
jmp
cld
xchg
xlat
div
sbb
pushf
cmp
push
pop
mov
arpl
xchg
fscale
add
test
in
mov
adc
lds
sar
or
fdiv
sub
hlt
cmp
jnp
pop
dec
xchg
rol
out
fwait
jb
add
push
or
mov
xor
push
lods
addr16
push
and
push
jns
iret
jns
shr
sub
or
mov
les
xchg
adc
inc
pop
fisub
out
cmps
dec
pop
mov
loop
mov
out
push
xor
arpl
or
ror
and
stc
fist
and
xor
rol
jne
lods
aas
clc
fdiv
cmp
jg
movs
mov
rcr
push
hlt
cwde
jb
push
xor
popa
pop
out
push
imul
(bad)
mov
jbe
je
mov
leave
aaa
or
jmp
xor
xor
mov
xor
sbb
in
xor
enter
xchg
dec
pop
push
jae
fldcw
jno
(bad)
data16
jmp
test
(bad)
iret
int
jne
popf
rcl
mov
stc
cmp
cmp
mov
ret
xchg
inc
pop
test
jl
gs
lock
adc
mov
xchg
and
in
(bad)
addr16
mov
les
int3
sub
icebp
xchg
imul
retf
(bad)
loopne
aam
pop
push
test
lock
adc
mov
das
test
sub
add
adc
and
dec
push
xchg
ret
cmp
jmp
std
sbb
push
cmp
inc
pop
fst
sahf
mov
adc
scas
shr
mov
(bad)
adc
scas
leave
jb
inc
mov
(bad)
dec
mov
push
pushf
push
sub
push
xchg
jl
fild
jno
(bad)
fidivr
scas
mov
into
mov
inc
pop
fcomp
sti
idiv
out
jbe
aad
push
in
fisubr
push
movs
pop
jge
push
neg
fs
sbb
pop
jnp
into
int3
push
shr
(bad)
in
and
popa
lock
or
adc
loopne
cmp
fcomip
inc
push
retf
mov
sbb
sub
nop
jl
pop
aam
cdq
cdq
test
push
in
sbb
or
dec
mov
mov
es
xchg
(bad)
jecxz
lock
pop
stc
je
xor
(bad)
into
fiadd
push
adc
inc
push
bound
(bad)
daa
push
jmp
push
xchg
outs
into
hlt
mov
repnz
jmp
jle
sbb
jecxz
push
enter
out
dec
cmp
fist
xor
add
data16
les
out
dec
mov
leave
aas
cmp
xchg
mov
add
popf
mov
add
adc
(bad)
mov
lods
(bad)
(bad)
push
icebp
jmp
dec
inc
xor
int
daa
mov
pop
aaa
outs
xchg
mov
mov
inc
sub
scas
xchg
xchg
jle
in
ror
aad
inc
icebp
dec
fdivrp
xchg
mov
jecxz
pop
leave
daa
out
jl
test
mov
aam
or
sbb
in
shl
(bad)
sahf
pushf
adc
xor
mov
sub
call
loop
cwde
fnsave
sub
jne
out
pop
sbb
outs
pop
sar
push
pop
lods
mov
call
or
dec
pop
jnp
(bad)
jb
and
add
or
jle
or
std
xchg
cmp
or
xchg
or
push
fs
inc
adc
fidivr
push
cmps
sub
scas
repnz
jecxz
or
mov
ins
ret
and
das
(bad)
neg
and
push
push
shr
xchg
out
jmp
and
std
cwde
sub
sub
sbb
jl
pusha
jnp
or
jmp
xor
pop
es
and
cmc
dec
pop
call
sahf
or
bound
xchg
push
cli
(bad)
repnz
sub
in
or
lods
cmovnp
das
xor
fidiv
aaa
xchg
cli
inc
mov
cmps
xchg
stos
scas
bound
dec
push
cmp
mov
jne
sti
sub
enter
rcl
sub
das
std
pop
and
sbb
push
lods
aas
mov
mov
popf
cmp
and
mov
gs
add
or
adc
(bad)
iret
sub
aam
add
xlat
pop
mov
sbb
cmp
mov
scas
ret
retf
inc
fldcw
push
and
add
mov
rcl
cmp
pop
xor
or
(bad)
jno
clc
sub
dec
or
js
sub
pop
std
pop
daa
cmp
(bad)
xchg
rol
aad
mov
ret
add
xlat
loop
sub
adc
dec
sbb
ror
and
inc
pop
and
stc
(bad)
sub
sub
leave
pop
sbb
xor
loopne
shl
and
adc
xor
push
xchg
loopne
push
mov
(bad)
sub
sub
or
jg
push
cwde
(bad)
push
repnz
leave
or
inc
pushf
cwde
push
test
loop
and
mov
(bad)
and
push
sbb
fcomip
dec
add
int3
mov
jo
inc
sbb
push
repnz
sub
(bad)
dec
into
push
inc
sbb
(bad)
out
mov
pop
jg
cld
adc
not
shl
(bad)
out
jmp
adc
stc
sbb
jbe
cmps
or
mov
loop
and
cmps
mov
lock
out
push
dec
mov
inc
cmp
mov
lock
cmp
in
cdq
out
mov
dec
ror
xchg
and
mov
push
test
sbb
sti
dec
cmp
fiadd
xor
cwde
pop
push
mov
movs
sbb
cmp
dec
cmp
or
out
aad
mov
cs
adc
pop
jecxz
lock
out
in
push
adc
in
es
push
mov
inc
xlat
call
aad
push
mov
mov
addr16
unpcklpd
jle
inc
in
movs
ror
in
push
pop
jns
pop
sbb
mov
push
lods
fst
fst
jmp
mov
mov
or
cmp
push
pop
or
popf
jno
add
nop
xchg
mov
add
and
fdiv
mov
out
in
inc
pop
enter
clc
mov
push
dec
sub
pop
adc
push
(bad)
push
test
xchg
in
jle
sub
shl
push
mov
cmp
js
inc
cmp
fstp
pop
push
mov
sbb
push
clc
or
pop
jns
mov
stos
add
sbb
inc
push
jl
fmul
or
mov
nop
push
mov
outs
aad
stc
cmps
mov
(bad)
dec
imul
rcr
popa
test
leavew
mov
mov
and
jo
dec
addr16
outs
dec
fstp
jnp
inc
fnstcw
pop
jae
jae
push
addr16
push
pop
jmp
mov
mov
push
pop
pop
or
add
(bad)
repnz
jp
or
aad
push
adc
lods
fidiv
(bad)
xor
aad
cli
movs
and
sti
(bad)
and
mov
lods
pop
mov
ins
mov
rcr
fst
sub
mov
push
rcr
xor
xchg
pop
cwde
ins
popa
xchg
add
sbb
cwde
rcr
les
test
cmps
loope
sar
sub
xor
xchg
and
jns
rcr
gs
nop
mov
cwde
in
sbb
xchg
and
cs
shr
into
jle
int
jo
mov
inc
dec
jecxz
mov
aaa
xor
outs
int
(bad)
adc
call
sahf
dec
mov
sbb
add
mov
xlat
je
cmp
std
les
mov
dec
fs
dec
mov
jnp
aam
pop
adc
movs
adc
jb
in
xchg
out
mov
lea
or
mov
add
dec
lds
push
add
aas
mov
retf
stos
cwde
leave
xchg
jmp
imul
repnz
xor
fld
das
adc
xor
mov
pusha
in
xchg
sar
mov
sbb
push
ret
xor
cwde
stos
movs
inc
dec
mov
dec
arpl
mov
lods
jo
mov
arpl
gs
nop
jg
into
inc
(bad)
into
jbe
xchg
or
les
rol
popf
or
popf
add
daa
js
xchg
mov
mov
outs
jb
(bad)
mov
(bad)
jle
and
popf
dec
or
aam
pop
dec
mov
add
lods
cs
mov
int
dec
dec
jmp
ins
out
lock
stc
mov
dec
adc
aaa
or
stos
mov
or
lds
repz
shl
mov
mov
out
aad
stos
dec
xlat
dec
add
xchg
sti
ja
pop
mov
xor
ret
dec
jmp
sbb
dec
inc
mov
mov
inc
lea
int
jae
dec
and
mov
and
inc
cmc
mov
sub
sbb
pop
ins
daa
inc
ror
ja
xor
xor
mov
les
sar
inc
cwde
cmp
test
ins
fcom
fdivp
test
jns
jno
add
xchg
in
pop
out
xlat
movs
enter
fst
psrad
push
stos
push
jmp
cdq
neg
mov
cmp
ret
push
ds
por
lods
xor
sub
cmp
push
enter
ror
mov
jae
mov
and
cmc
push
cmp
jecxz
lds
scas
xchg
inc
int3
pop
add
cld
mov
fnstsw
adc
jnp
ins
mov
xor
das
popf
shr
adc
or
mov
adc
inc
dec
cli
in
repnz
xchg
cld
mov
stc
push
int3
jg
rcl
js
fs
sar
cld
and
enter
mov
dec
inc
dec
imul
inc
(bad)
test
mov
rol
mov
ss
pusha
jmp
test
ds
mov
jge
in
jmp
in
lods
dec
(bad)
xchg
imul
(bad)
xor
test
push
jnp
sbb
mov
cmp
push
mov
enter
and
push
retf
fstp
mov
into
dec
cdq
ja
out
inc
mov
or
fst
mul
popf
popf
mov
cs
sbb
fmul
lods
out
cli
add
mov
mov
xor
int3
mov
outs
cli
adc
sti
push
xchg
push
jb
pop
jle
cwde
ds
mov
iret
cmp
test
icebp
shr
push
sbb
fild
shr
or
add
adc
addr16
cmps
ret
(bad)
retf
cmp
lahf
or
xor
sub
into
in
cmps
stos
out
sub
and
mov
sbb
jo
pop
repz
int
add
or
inc
(bad)
(bad)
pusha
in
xor
inc
inc
sti
lods
mov
lahf
adc
sub
addr16
mov
mov
mov
aas
(bad)
xor
sti
(bad)
sahf
in
dec
mov
movs
mov
cmp
xchg
iret
xor
(bad)
push
push
xchg
ds
in
dec
fs
jle
das
dec
push
loopne
lea
mov
lock
xor
in
rcr
and
fisubr
or
sti
mov
rcr
pop
icebp
gs
inc
lahf
cmp
mov
jecxz
adc
or
inc
dec
mov
std
in
jmp
jo
push
cmc
jno
xchg
cdq
jmp
jo
cmp
out
xor
jb
test
ret
hlt
jne
pop
pop
gs
jae
cmc
sbb
hlt
add
add
in
std
shr
mov
inc
mov
sub
test
inc
adc
movs
lock
jmp
(bad)
cmc
or
push
pusha
jp
hlt
imul
xchg
and
inc
imul
push
sub
aas
and
adc
ins
int
mov
repnz
ret
enter
jle
jns
xor
jae
mov
lahf
pop
push
xor
dec
adc
ja
sub
mov
jecxz
adc
sub
dec
shr
adc
pop
dec
popf
xchg
addr16
jmp
jmp
fsubr
mov
repz
adc
mov
mov
data16
sub
daa
scas
lock
dec
not
mov
pop
fisub
iret
pop
(bad)
lea
push
push
mov
rcr
cld
and
cdq
icebp
fsubr
or
push
adc
fistp
cmp
mov
push
mul
or
out
movs
popa
jmp
test
sbb
pop
fld
push
pop
scas
sbb
cmp
mov
push
xchg
cmp
test
xchg
mov
xor
mov
es
nop
push
jl
lock
outs
pop
adc
in
ss
jg
jp
(bad)
fimul
mov
add
push
enter
mov
sub
xor
cli
add
pop
inc
into
push
enter
mov
clc
gs
inc
pusha
call
inc
cli
outs
sbb
push
mov
mov
test
add
pop
fsubr
lea
ffree
sar
sub
int
push
jge
inc
ds
add
mov
fwait
cmc
jno
adc
fld
pop
scas
cmp
xchg
jmp
hlt
add
pusha
lock
pop
jecxz
mov
in
(bad)
sbb
inc
mov
hlt
pop
jb
jge
int
push
and
aad
add
repz
(bad)
mov
outs
push
cmp
xchg
xchg
arpl
cmp
push
mov
(bad)
enter
mov
or
retf
inc
xlat
cmp
cmp
push
test
add
icebp
sub
sbb
push
shr
add
fwait
sbb
in
movs
jae
iret
jb
scas
lods
add
or
jle
dec
cld
in
jecxz
adc
cmp
cdq
test
pusha
pop
add
dec
push
push
xor
jo
push
sahf
dec
mov
xchg
stos
hlt
cld
jecxz
cmp
mov
mov
mov
pop
or
cmps
push
mov
or
es
mov
aam
clc
movs
call
mov
push
dec
push
popa
or
popf
rcr
es
pop
pusha
pop
in
mov
lock
pop
jbe
rol
movs
mov
xchg
loopne
loop
pop
ret
retf
fcmovb
icebp
cmp
call
(bad)
dec
and
xchg
jmp
shl
call
inc
sub
or
jg
cdq
or
pop
gs
stos
or
dec
jb
sar
dec
push
repz
pop
(bad)
xor
or
push
(bad)
sbb
shl
test
stc
pop
jnp
mov
jge
sbb
or
add
dec
(bad)
retf
out
pop
data16
mov
jns
jb
adc
les
ss
aam
js
or
sbb
(bad)
(bad)
pop
fadd
aaa
and
xchg
ins
and
or
cmp
aad
sbb
xor
and
or
sbb
out
push
repz
loope
(bad)
(bad)
into
and
cmc
fsub
jo
das
inc
mov
xor
xor
out
jns
mov
ret
mov
sahf
mov
xor
out
and
jno
xor
sti
inc
sbb
sbb
lea
push
and
outs
lods
outs
test
push
pop
cmp
mov
imul
xchg
popf
mov
jae
add
xchg
push
or
or
xchg
cli
dec
mov
mov
pop
cmp
mov
aam
out
(bad)
rcl
imul
dec
add
jl
push
lea
in
mov
mov
inc
ret
aam
xlat
loop
loopne
mov
sub
jmp
les
sub
dec
test
test
mov
pop
push
or
(bad)
xor
data16
(bad)
es
and
and
sahf
mov
ss
or
stos
std
cmp
(bad)
fist
in
add
test
popa
loop
ficomp
or
cmp
pop
shl
mov
ret
inc
int
mov
arpl
mov
lea
pop
sbb
add
jmp
mov
jno
or
xchg
dec
(bad)
loop
fdivr
jmp
pop
mov
push
xchg
cld
add
cs
not
adc
mov
add
popa
cmp
lahf
push
ja
push
pop
mov
in
lods
in
dec
lods
pusha
mov
cmp
mov
imul
push
int3
push
adc
xchg
lods
(bad)
fiadd
mov
arpl
aaa
push
sbb
jmp
leave
lds
jle
icebp
clc
xchg
std
xor
jne
cmp
aaa
jo
inc
lea
repz
jnp
cmp
xchg
ja
adc
and
sbb
sub
dec
cwde
mov
inc
call
(bad)
popf
ret
test
sbb
xor
mov
add
dec
mov
push
arpl
inc
enter
pop
ins
ret
and
and
inc
or
popa
cmp
xchg
pop
ret
push
and
adc
jae
mov
js
data16
leave
scas
(bad)
sar
(bad)
xchg
push
mov
cmp
sar
ins
pop
cmp
pop
sahf
cmps
inc
jns
lea
adc
stc
dec
lods
(bad)
in
sbb
es
pushf
mov
or
fisubr
sti
mov
add
out
fdivr
iret
jge
ror
in
repnz
push
cmp
sahf
in
or
aas
or
daa
mov
aam
mov
rol
outs
inc
dec
mov
fmul
xchg
jle
dec
ins
push
cmc
cmp
xlat
dec
or
push
jo
push
lock
pop
test
pop
aam
xor
test
sbb
dec
dec
sahf
sbb
cmc
sbb
scas
xchg
pop
ret
inc
sub
dec
fbld
test
(bad)
push
ret
loope
rcr
shl
into
mov
out
ja
ret
pop
adc
mov
sub
movs
adc
jge
scas
mov
mov
aas
mov
inc
mov
sti
jge
mov
lds
and
mov
mov
add
inc
mov
jg
jp
ss
fisub
xchg
cmps
xor
jg
adc
mov
pusha
lods
movs
test
cli
popa
sbb
jecxz
mov
mov
iret
xchg
lods
or
stos
mov
je
lds
rol
push
and
add
out
and
test
out
cmp
arpl
dec
ss
inc
sbb
xchg
mov
stos
xor
adc
mov
jo
mov
nop
mov
xchg
sbb
push
lods
ja
push
xlat
sbb
jecxz
mov
cmp
cmp
xchg
xchg
into
cmp
mov
mov
popf
add
dec
leave
out
idiv
mov
lahf
bound
dec
in
mov
pop
retf
inc
pop
adc
mov
push
mov
adc
mov
and
popa
cs
test
bound
dec
adc
imul
xor
jo
cdq
pop
inc
push
cmp
xor
sbb
pop
inc
retf
jecxz
rcl
loopne
mov
mov
nop
push
adc
xchg
dec
or
xchg
pop
loopne
jge
mov
adc
cli
inc
cdq
inc
push
outs
sbb
jecxz
pop
dec
jg
cmp
jae
xchg
std
cmps
xchg
pop
scas
in
(bad)
jecxz
pop
fisttp
xor
or
cmps
ja
out
fistp
add
sbb
loopne
lds
sub
fs
pop
cmc
scas
test
adc
dec
repz
mov
in
cmps
adc
or
mov
add
adc
jo
lods
pushf
retf
dec
cmp
ds
test
inc
gs
inc
or
lock
int3
stos
jae
jne
clc
push
ficom
or
inc
repnz
cpuid
mov
es
dec
xchg
ds
inc
inc
movs
je
int
movs
xor
mov
or
jge
xlat
push
xor
fsub
and
ins
add
and
nop
in
jecxz
sar
dec
sub
test
shl
mov
push
call
fmul
mov
xchg
or
jl
mov
sbb
xchg
jnp
inc
lds
(bad)
das
(bad)
fbld
cli
mov
ja
mov
adc
into
mov
xadd
xchg
jnp
retf
xchg
shl
mov
mov
(bad)
sub
movs
mov
adc
stos
es
fwait
int
aam
push
mov
ins
mov
add
mov
dec
xor
fdivr
sub
and
lods
out
cs
push
stos
out
les
std
sub
add
(bad)
fmul
xor
or
and
mov
cmps
xchg
shl
je
sub
push
cli
out
popa
cmp
movs
neg
inc
mov
aad
arpl
or
or
push
out
leave
jnp
adc
push
enter
arpl
nop
xor
std
scas
xchg
sub
xchg
outs
fcomp
ja
jge
aad
movs
sbb
xor
push
xor
imul
jp
add
mov
cmc
das
fisubr
push
xchg
pop
push
pop
mov
mov
sub
inc
xor
jb
xor
shr
or
(bad)
mov
jmp
cmp
xor
mov
mov
imul
js
inc
inc
xor
add
(bad)
ins
icebp
mov
mov
iret
cmp
fsub
cmps
fmul
xchg
int
aaa
movs
sbb
div
int
or
xchg
mov
fadd
aaa
loope
xchg
iret
mov
push
push
push
fwait
imul
xchg
add
imul
retf
(bad)
fnstsw
dec
push
mov
push
cli
xor
pop
scas
out
sub
(bad)
aas
xchg
movs
adc
retf
inc
clc
push
adc
sbb
outs
lock
test
sub
in
int3
lods
adc
fldcw
sub
imul
shl
dec
jbe
or
cmp
(bad)
stc
and
sbb
ret
xchg
or
add
push
mov
push
hlt
mov
pusha
mov
popf
sub
push
gs
cli
ret
mov
adc
pop
pop
xchg
rcl
push
or
pop
cdq
push
rcl
add
add
aad
sub
sbb
mov
push
pop
sub
push
inc
inc
adc
mov
mov
jmp
jno
movs
xor
mov
cs
in
inc
stos
and
mov
inc
mov
sbb
aam
and
sub
ficomp
movs
pop
les
ja
arpl
inc
pop
(bad)
adc
ja
push
leave
xchg
dec
pop
iret
push
mov
jae
jmp
adc
inc
shr
mov
or
ja
pop
scas
int3
and
test
sub
pop
ss
cmp
out
rol
add
arpl
iret
dec
ins
cwde
sbb
cmp
call
test
xchg
xor
mov
push
(bad)
lock
int3
or
call
push
adc
and
scas
nop
iret
jp
das
push
ror
xchg
add
leave
arpl
push
adc
cmp
xchg
sbb
pop
and
add
mov
test
mov
xchg
test
xor
jno
stc
mov
dec
lea
adc
cmps
ins
or
xor
xchg
mov
into
or
pop
or
aas
jns
fstp
(bad)
pop
ret
out
push
xlat
movs
aad
jecxz
adc
(bad)
pop
jmp
sub
popa
ja
lds
sub
xor
scas
mov
xchg
push
std
inc
xor
add
jns
jbe
jl
mov
xchg
inc
nop
fcomp
out
dec
xchg
nop
(bad)
call
push
push
and
cwde
dec
xchg
jmp
ret
xchg
data16
(bad)
fcom
jmp
mov
cmp
rcl
xchg
push
fistp
dec
jnp
pop
stos
outs
sbb
xor
xor
dec
cmp
pop
cdq
fs
out
mov
in
dec
cdq
test
loop
and
mov
xchg
pop
rcr
in
imul
pusha
add
add
test
dec
retf
cmp
xchg
shl
popf
cmp
mov
xchg
mov
cmps
or
shr
addr16
dec
inc
xor
jecxz
lock
xchg
rcr
pop
enter
jp
imul
fcmovb
mov
je
push
pop
rcr
rcr
or
sub
and
xor
aad
dec
rcr
push
jb
lock
and
push
mov
hlt
and
mov
push
stc
dec
dec
(bad)
int3
add
xor
and
hlt
push
inc
daa
xor
idiv
mov
movs
jmp
or
add
in
sahf
mov
jecxz
mov
mov
and
push
mov
test
xor
mov
and
jbe
dec
jmp
adc
xchg
es
out
sbb
xchg
jl
sbb
jl
call
dec
add
mov
dec
call
ja
and
add
sub
fistp
push
jecxz
leave
sahf
mov
test
inc
gs
xchg
jno
add
fwait
sub
mov
adc
push
das
lods
outs
mov
sbb
test
int
fsubr
xchg
or
xchg
imul
add
xchg
cmps
push
mov
jecxz
adc
push
ins
sub
retf
into
and
cmp
cmc
jb
xor
loope
cmp
cmp
sub
std
sbb
xor
fmul
in
outs
pop
dec
sub
out
lods
adc
aas
inc
dec
sub
mov
and
(bad)
cmp
jle
pop
sub
or
(bad)
or
ins
ss
xchg
mov
or
imul
std
aad
add
test
lods
icebp
fwait
loop
fdivr
xchg
cli
mov
jp
fnstenv
cmp
mov
int
or
cmps
push
jecxz
outs
and
cmp
addr16
cmp
dec
ffree
mov
outs
push
mov
in
add
pop
sub
add
pop
int
mov
aam
jns
ficom
in
mov
mov
hlt
leave
call
(bad)
push
and
movs
pop
sub
mov
test
mov
add
cmp
xchg
lds
mov
jle
(bad)
mov
sub
mov
in
adc
sub
jl
xor
pop
or
jp
push
add
retf
leave
add
jmp
jmp
adc
cmps
std
pop
push
ret
pop
pop
adc
sbb
push
std
in
xchg
test
(bad)
ja
std
mov
pop
pop
xchg
pop
pop
retf
jns
xor
retf
jnp
repz
loope
push
out
pop
call
mov
repnz
(bad)
and
pop
sbb
popa
daa
fistp
mov
xchg
xchg
add
push
sub
(bad)
pushf
daa
inc
mul
lods
ins
es
cmp
test
lea
xchg
movs
or
rol
test
aaa
loop
xchg
call
jmp
mov
sar
jg
mov
jnp
mov
mov
and
and
(bad)
xchg
js
cdq
imul
and
aam
(bad)
add
sub
ja
retf
xchg
in
push
lea
inc
ds
popf
pop
pop
mov
push
out
imul
mov
call
ror
(bad)
push
cmp
mov
add
shl
ds
add
into
mov
sahf
aam
cli
inc
mov
mov
push
out
jno
mov
jne
mov
cld
nop
add
mov
push
inc
(bad)
daa
cmp
inc
and
popa
add
ret
ss
adc
inc
test
movs
jecxz
iret
sbb
ficom
arpl
fstp
xchg
ret
sar
inc
icebp
mov
arpl
xchg
adc
push
lds
add
or
call
ins
mov
push
retf
mov
mov
and
push
pop
add
lods
fdiv
(bad)
les
mov
loopne
cs
xchg
adc
lock
aaa
sar
push
sahf
pop
dec
xor
add
mov
icebp
push
dec
mov
fimul
clc
je
xor
cld
popa
out
out
outs
cmp
iret
add
xchg
inc
mov
sub
ret
sub
dec
lods
mov
gs
gs
out
mov
imul
stc
push
pop
push
mov
push
ins
sub
add
clc
inc
mov
rcl
inc
mov
adc
and
pop
lds
stc
shl
push
(bad)
enter
imul
test
mov
fisttp
push
test
sbb
add
cmc
aas
stos
jb
and
push
inc
popf
cmps
pop
mov
xor
cmp
icebp
mov
cli
push
outs
pop
mov
sub
arpl
xchg
pop
jmp
(bad)
push
test
xor
mov
test
retf
or
in
pop
icebp
lods
sub
mov
out
mov
mov
mov
jbe
(bad)
fs
jp
fisttp
(bad)
sbb
cmp
or
popf
pop
fisubr
loopne
xchg
sbb
pushf
mov
in
shr
js
cmp
pop
pop
loop
mov
sub
push
arpl
mov
repz
gs
push
pop
nop
inc
lds
imul
imul
dec
enter
mov
retf
mov
fild
cmps
adc
popa
popa
retf
cmps
mov
ins
pop
in
in
xor
inc
ficom
inc
fld
daa
lds
pop
xchg
cli
push
stos
mov
loopne
pushf
pop
addr16
lods
fmul
jno
js
cmc
mov
mov
xor
add
fsubr
imul
dec
cs
ret
outs
pop
adc
movs
call
in
scas
dec
repnz
pop
adc
pop
inc
xor
dec
(bad)
lea
test
lock
ss
ss
adc
push
test
inc
leave
xor
mov
ins
sub
dec
out
fisttp
mov
mov
or
pop
xlat
pop
lahf
ret
jne
cmc
pop
test
cmc
mov
dec
das
cmp
sub
(bad)
les
(bad)
mov
arpl
test
inc
cmp
into
or
je
test
push
cmp
gs
lahf
mov
arpl
mov
jno
imul
push
(bad)
mov
jmp
cmp
das
add
lea
ss
into
sub
mov
or
add
and
loop
lods
pop
stos
xchg
or
repz
movs
push
ret
adc
retf
(bad)
jmp
adc
mov
dec
jge
fwait
and
xchg
xor
mov
sub
push
xlat
pop
cwde
fwait
mov
arpl
adc
in
popf
sbb
add
push
dec
clc
mov
(bad)
idiv
cmc
push
loope
mov
loopne
scas
ret
div
sbb
mov
adc
clc
inc
aad
cmp
bound
ins
aas
push
scas
mov
jb
in
arpl
cmp
xlat
push
sub
movs
cwde
mov
sbb
push
ror
ret
sbb
push
rcl
stos
das
xor
cmp
and
aam
xor
aam
adc
ret
xchg
adc
ficom
adc
cmp
nop
dec
xchg
rol
cs
mov
pop
scas
cmps
leave
neg
out
fwait
jl
jl
mov
push
xlat
mov
pop
mov
es
and
pop
test
xor
in
adc
lods
ret
jno
(bad)
call
inc
mov
pop
pop
sbb
fcomp
add
cli
dec
sub
sar
sbb
fcmovnbe
addr16
in
xchg
cmp
add
dec
inc
hlt
int
sahf
sbb
mov
(bad)
fdivr
gs
hlt
mov
push
sti
ss
in
ret
sub
mov
cli
test
mov
(bad)
jp
ret
mov
mov
and
mov
pop
xchg
fwait
adc
xchg
outs
inc
xchg
mov
aam
add
jo
test
add
(bad)
ror
jecxz
dec
and
xor
add
xchg
sbb
shl
push
and
out
inc
dec
je
fwait
cld
addr16
add
sub
out
mov
add
nop
jle
jmp
xchg
shr
das
sbb
pusha
cmps
push
fwait
inc
test
imul
mov
das
xchg
dec
repz
rol
jb
push
in
fwait
mov
fimul
xchg
adc
enter
js
aam
push
int
mov
push
sbb
ret
mov
popf
(bad)
and
pop
std
and
sbb
push
cwde
dec
push
data16
imul
std
mul
enter
stos
gs
scas
in
mov
movs
ins
push
jmp
push
xor
out
dec
push
pop
cmp
add
push
dec
dec
test
jno
cdq
mov
(bad)
mov
into
sub
neg
push
pop
pop
xchg
mov
aam
jl
sub
inc
dec
xor
imul
jp
cmc
jge
nop
test
inc
in
or
dec
lock
jl
sbb
xchg
jno
add
cmp
jp
pop
fdiv
(bad)
repz
fs
jmp
inc
jp
addr16
stos
sub
jmp
mov
ins
push
jmp
fs
xchg
cmc
fild
mov
les
cli
adc
ja
in
daa
sub
lock
repz
rcl
outs
adc
cmp
cmp
jae
sub
mov
jb
iret
and
xchg
ds
add
sub
dec
out
dec
jmp
scas
test
inc
in
push
sbb
cwde
fisttp
mov
xor
and
pop
cmp
inc
shl
fstp
dec
jecxz
sahf
iret
outs
(bad)
push
pop
mov
sub
mov
adc
adc
hlt
dec
inc
or
ins
sbb
and
cwde
pop
aad
inc
(bad)
xlat
mov
add
(bad)
fcmove
repz
cmp
data16
(bad)
mov
sub
mov
jge
bound
fwait
xchg
push
push
mul
cmps
mov
popa
ret
into
mov
jno
mov
and
mov
popf
sbb
sub
dec
enter
fisub
stc
int
jecxz
movs
jge
sahf
call
sub
les
int3
call
shl
pop
adc
rol
jno
in
mov
xchg
aam
out
pop
push
mov
ins
popf
push
mov
pop
xor
cs
add
popf
je
cmc
stos
or
pop
push
jp
add
push
int
mov
jns
lods
int
mov
int
mov
sbb
dec
popf
push
mov
scas
sub
mov
popf
jno
push
test
sub
dec
sbb
jnp
pop
pop
out
in
cmp
mov
mov
jo
jp
xor
not
or
movs
cld
push
mov
jbe
cmp
nop
cmp
mov
sbb
hlt
cmp
mov
push
imul
adc
push
and
pop
std
inc
pop
cwde
and
test
aaa
retf
adc
push
jb
or
adc
xor
mov
add
adc
sub
call
or
(bad)
adc
inc
jbe
shr
clc
test
dec
xchg
and
jo
popa
rol
mov
dec
out
xchg
cmp
ror
mov
repnz
dec
jg
ror
xor
mov
outs
aas
mov
(bad)
pop
repnz
in
inc
cdq
fiadd
sbb
xor
pop
out
js
ins
retf
pop
jno
fdivr
and
mov
sbb
pop
mov
or
daa
out
movs
pop
sbb
or
cdq
or
int
test
xchg
fwait
push
shl
xlat
fild
int3
or
movs
test
inc
popf
and
lock
addr16
xchg
xchg
push
xchg
pop
iret
and
sub
dec
in
test
outs
les
mov
cmps
jge
rol
cs
inc
cs
fcomip
inc
and
jno
sub
push
and
mov
in
mov
mov
cdq
and
sbb
jmp
push
stos
sbb
push
xchg
int3
das
rol
adc
cmp
mov
test
xor
cmps
or
test
jp
inc
xor
shl
loopne
repnz
pop
cdq
xlat
cmp
icebp
daa
out
mov
stos
rdpmc
adc
daa
xchg
mov
push
jecxz
mov
inc
or
mul
mov
pop
frstor
ficomp
idiv
(bad)
fcmove
(bad)
pop
out
mov
add
movs
iret
je
inc
idiv
shr
jg
bound
xchg
in
sbb
add
jmp
or
je
inc
inc
adc
sbb
in
(bad)
cmp
fwait
add
adc
sahf
popf
jle
fcmovu
and
iret
out
sub
push
adc
loope
mov
push
jl
sbb
pushf
jmp
in
popa
jecxz
cmp
sub
adc
popa
adc
out
xchg
mov
dec
cmp
aam
jmp
push
(bad)
fldz
push
or
ret
jmp
xchg
jb
or
test
stc
in
lods
test
(bad)
cmp
repnz
xor
in
daa
add
push
sbb
sub
xlat
je
fdiv
push
dec
rep
mov
hlt
mov
retf
jnp
pop
(bad)
xor
and
sbb
and
std
in
loopne
and
lfs
dec
cld
sub
jb
jmp
out
rcl
popf
ss
in
push
and
sbb
adc
adc
or
dec
sbb
or
and
add
dec
pop
lods
adc
xor
sub
jnp
call
inc
and
popf
ss
jb
call
jo
xor
and
(bad)
pop
(bad)
mov
mov
xor
inc
dec
das
mov
retf
clc
mov
enter
add
or
dec
pushf
cmp
dec
pop
enter
or
loope
dec
pop
xor
lods
mov
and
cs
inc
add
nop
inc
call
sub
xchg
std
push
push
mov
out
sbb
xor
shr
sar
dec
or
or
leave
xor
or
cmps
in
fimul
stos
(bad)
out
pop
icebp
xchg
hlt
pusha
xor
lods
les
rcl
and
test
jge
sar
loopne
adc
sbb
pop
pop
mov
std
lds
inc
std
adc
jb
(bad)
in
call
fs
in
shl
pop
pop
mov
hlt
sbb
daa
frstor
xor
jmp
icebp
pop
dec
dec
iret
push
mov
popa
pop
push
adc
sbb
mov
push
addr16
pushf
lahf
dec
in
into
out
ins
out
retf
js
stos
and
mov
test
popf
cmp
inc
and
mov
cmp
mov
mov
(bad)
push
push
iret
adc
repnz
loop
pop
pop
push
jns
out
sti
in
sbb
imul
(bad)
cmp
mov
jg
in
cmps
push
jecxz
fcomip
daa
std
mov
xchg
or
call
ja
inc
inc
mov
cmp
sub
scas
push
pop
xchg
sbb
sbb
test
sub
or
das
sub
sbb
cwde
mov
xchg
fcmove
mov
or
inc
jns
ds
adc
loope
lods
cmps
xlat
xchg
add
loop
dec
mov
push
dec
jmp
leave
in
(bad)
es
icebp
dec
and
mov
sbb
call
out
cld
sub
call
pop
or
push
sbb
fcmovbe
lahf
dec
mov
jne
sbb
sub
mov
shl
iret
cld
mov
xchg
stos
dec
sahf
ins
jae
(bad)
hlt
jmp
jb
test
push
ins
sub
in
xlat
jne
and
js
pop
pmulhw
test
fdiv
xchg
xchg
imul
(bad)
cmc
popa
das
inc
shl
push
jnp
and
addr16
push
test
adc
lea
pusha
mov
movntps
mov
sub
sbb
mov
adc
loope
dec
jno
or
or
mov
adc
cmp
loope
sub
and
loope
call
adc
dec
sbb
(bad)
clc
bound
scas
sub
dec
hlt
jle
or
ja
xchg
mov
xchg
cdq
(bad)
lea
add
dec
shl
lock
jo
scas
aaa
fcomp
xor
fst
xor
adc
add
in
jle
mov
imul
jbe
aas
xor
loopne
add
addr16
je
(bad)
mov
or
cmps
cs
ffree
and
pushf
cmp
(bad)
mov
cwde
retf
arpl
inc
movs
xchg
push
int3
adc
mov
mov
xchg
mov
scas
sbb
call
dec
inc
imul
das
xor
pop
dec
mov
mov
push
loopne
lods
cmp
retf
mov
je
push
pop
or
or
icebp
mov
cmp
push
(bad)
imul
xor
mov
sub
clc
test
xchg
mov
add
not
shl
xor
cmc
fistp
and
mov
arpl
pop
inc
dec
sbb
fisubr
cmc
(bad)
lea
loopne
call
pop
jae
or
add
loop
mov
loop
call
mov
mov
mov
pop
pop
or
in
cmp
mov
mov
jg
arpl
(bad)
test
push
cli
jo
pop
jl
call
daa
jmp
pop
dec
js
inc
xchg
cld
loop
stos
data16
mov
mov
mov
xchg
pushf
push
jo
jno
cld
or
jmp
test
(bad)
mov
call
sar
jae
fist
fcmove
pmaddwd
pop
dec
jo
shr
pop
or
cld
cmp
inc
(bad)
sbb
pushf
add
xor
rcl
je
nop
imul
push
sar
pushf
out
push
jp
mov
test
cmp
mov
lds
jge
cmp
push
inc
(bad)
sbb
or
dec
repz
and
mov
hlt
nop
sbb
push
push
fsubr
sub
push
scas
out
fdivr
add
icebp
int
push
push
std
cmp
xor
mov
cmp
add
jb
inc
call
push
dec
push
ret
cdq
mov
sub
sbb
jno
loop
adc
add
mov
add
jne
cli
push
add
lea
(bad)
fisub
aad
pushf
enter
sar
lea
in
popa
dec
mov
ja
xchg
mov
xchg
ret
push
fild
add
jb
push
sbb
cmp
mov
imul
test
xchg
int
pop
in
adc
(bad)
movs
in
(bad)
xor
jmp
inc
retf
out
dec
test
mov
inc
jb
and
push
inc
push
cmp
(bad)
in
jecxz
fstp
es
mov
xchg
cmp
leave
sar
int
outs
sbb
adc
in
mov
dec
xor
dec
ja
js
repz
stos
ss
mov
mov
sti
push
lods
mov
jge
push
jmp
mov
inc
(bad)
dec
mov
test
push
inc
shl
mov
inc
push
and
sbb
inc
add
cmp
cld
aas
out
xchg
mov
mov
idiv
retf
shl
jmp
pop
arpl
mov
xchg
mov
fild
jo
scas
mov
call
or
mov
pop
or
mov
mov
fsub
add
out
or
js
xchg
mov
add
fisub
int
(bad)
cld
sub
cmp
add
sbb
pop
mov
aad
or
inc
sbb
out
or
into
lods
outs
dec
shl
aad
cmp
push
lods
pop
jmp
jle
mov
popf
inc
jb
ror
pop
mov
and
out
cmps
xor
mov
push
mov
mov
mov
movs
f2xm1
and
xor
out
call
and
leave
mov
adc
and
cwde
daa
xor
sti
imul
ja
out
cmps
and
mov
les
js
neg
mul
mov
fwait
sbb
mov
xlat
inc
movs
dec
fsub
xchg
out
jp
stos
push
sahf
mov
sub
sti
in
inc
pop
xor
call
add
adc
(bad)
fwait
int3
push
or
dec
loope
imul
add
out
call
fld
dec
inc
mov
pop
mov
sub
xchg
lock
add
aaa
and
inc
outs
scas
daa
adc
enter
mov
arpl
retf
push
das
inc
or
(bad)
rcr
sub
or
pop
jg
fcomi
scas
repnz
and
sub
shl
enter
xor
and
int3
pop
mov
xor
outs
aam
inc
retf
and
push
in
aam
jecxz
clc
test
jecxz
sbb
dec
mov
inc
stc
arpl
jo
and
popf
aaa
inc
(bad)
shl
add
fldenv
imul
and
mov
jbe
cli
mov
scas
cmps
adc
sub
scas
pusha
dec
inc
inc
mov
jbe
adc
sahf
xor
and
lea
inc
pop
adc
fisubr
mov
int3
push
fwait
mov
pop
(bad)
js
and
jns
out
mov
pop
xchg
mov
add
movs
lock
daa
dec
les
mov
pop
jl
push
adc
pop
scas
mov
xchg
push
mov
jmp
(bad)
in
loope
maskmovq
neg
test
in
retf
ds
jnp
(bad)
out
cmp
mov
push
jnp
or
and
mov
icebp
xor
fld
cmp
ins
mov
mov
cmp
out
sub
sub
adc
pop
test
pop
ss
push
adc
xchg
popf
frstor
in
mov
sub
lock
xor
bound
loope
ins
arpl
clc
hlt
lahf
ud2
imul
adc
hlt
sbb
sub
dec
xchg
movs
sub
in
std
jb
xor
jne
jbe
ret
pop
mov
test
push
jl
jl
and
jp
sbb
sub
jns
cmc
jg
mov
imul
dec
test
stos
sub
jmp
or
add
enter
in
adc
ins
push
imul
add
in
mov
push
xlat
jo
inc
mov
scas
(bad)
cmp
ja
out
lds
fstp
pop
sub
out
jnp
push
lds
gs
add
stos
xchg
test
jmp
adc
push
cmp
jo
inc
retf
lods
sub
hlt
push
test
out
test
mov
fild
mov
xor
xor
bnd
inc
test
(bad)
(bad)
push
sub
sbb
inc
ja
sub
scas
arpl
gs
ja
aam
cmp
xchg
in
push
bound
retf
or
in
jle
mov
imul
jbe
js
xor
repnz
push
mov
xchg
pop
mov
sub
mov
sub
in
loopne
ja
mov
cmp
imul
fdiv
enter
cmc
push
mov
loopne
push
mov
or
inc
xor
xchg
aad
mov
sar
cs
pop
or
xor
in
leave
inc
inc
inc
pop
fs
mov
jns
dec
sbb
or
test
imul
cld
ja
imul
gs
popa
sar
ror
cs
adc
lea
lods
mov
inc
les
mov
xchg
dec
sub
hlt
push
sysenter
xor
adc
imul
lods
and
add
test
push
add
inc
bound
cmp
stos
aad
adc
mov
(bad)
in
es
arpl
pop
xchg
xchg
cmp
aam
push
dec
lods
es
mov
sub
pop
push
out
cmp
jo
movs
xchg
jo
fdivp
js
push
jl
sbb
shr
xchg
cmc
loopne
aaa
test
mov
pop
mov
mov
out
jbe
pshufw
int3
sub
sub
ds
fild
pop
xchg
dec
call
or
mov
push
jb
cs
idiv
sbb
jno
sub
adc
idiv
adc
sub
dec
sbb
mov
inc
outs
ffreep
mov
popf
fld
ds
fidiv
or
sbb
adc
(bad)
ja
or
ror
repz
inc
push
pop
daa
mov
dec
push
cmps
outs
popa
ret
xchg
frstor
sti
xlat
rcr
adc
inc
mov
std
mov
and
leave
std
imul
adc
jne
and
jae
retf
je
loope
scas
mov
jnp
mov
loope
cli
and
test
test
popa
pop
mov
dec
sbb
and
icebp
add
stc
mov
aam
pop
cdq
adc
cli
push
inc
cmps
inc
cli
pop
aam
cmp
sub
nop
cmp
xchg
xchg
push
adc
push
mov
pop
ja
sub
ret
loop
push
jne
mov
sub
push
cli
xchg
adc
test
dec
or
daa
arpl
sti
xchg
adc
jns
int3
mov
mov
adc
and
fcomp
xor
mov
inc
or
push
push
loope
sub
xchg
mov
and
jnp
xor
aas
push
js
jne
xchg
jo
lahf
iret
and
mov
icebp
cwde
into
inc
push
add
rcl
adc
adc
cmp
in
(bad)
sti
dec
sti
jnp
xor
push
aad
pop
int3
enter
xchg
mov
push
push
mov
mov
das
dec
shl
ror
fcom
mov
dec
and
xor
dec
mov
mov
push
mov
mov
fstp
int3
in
sar
lahf
dec
jge
jl
and
pop
inc
xor
setp
mov
imul
(bad)
cmc
mov
mov
das
cmp
adc
pop
jmp
cwde
mov
sbb
daa
pop
dec
shl
add
or
cmp
and
das
sub
aas
lahf
ror
popf
and
cmps
mov
ins
mov
retf
std
call
movs
mov
or
mov
dec
and
mov
jnp
mov
test
clc
jp
jle
add
inc
pop
lds
mov
iret
add
js
scas
mov
xchg
call
loope
cmp
lods
add
mov
pop
test
cdq
aas
cmp
dec
ss
jnp
cdq
mov
pop
push
test
add
xchg
retf
int
(bad)
mov
addr16
lock
mov
inc
out
xchg
sub
xor
sub
(bad)
jmp
ror
mov
jno
jo
jg
mov
cmp
aad
test
dec
jmp
mov
mov
xchg
xor
sahf
arpl
push
jbe
addr16
mov
mov
pop
pop
ret
retf
in
add
mov
imul
lock
jnp
mov
scas
push
sbb
lahf
and
or
aaa
jbe
add
mov
jb
pushf
das
cmp
cs
jo
jns
int3
stc
les
sbb
or
stos
add
and
pop
not
cs
mov
out
sub
addr16
dec
lods
loop
jno
sbb
adc
pop
les
mov
inc
movs
mov
nop
imul
inc
aas
dec
add
add
sub
mov
fwait
dec
cmp
sbb
add
xor
movs
pop
std
imul
sub
add
dec
call
cmps
sbb
ss
mov
lea
loop
imul
int3
adc
mov
into
mov
mov
and
test
inc
sbb
add
push
bound
sub
push
loope
(bad)
push
sub
cmp
inc
movs
inc
adc
mov
xchg
loope
pusha
add
je
jne
push
(bad)
pop
ret
adc
cmc
pop
call
movs
push
xchg
sbb
xor
push
aam
mov
xor
and
sub
and
nop
mov
jns
(bad)
push
dec
movs
jmp
xlat
cmp
mov
jnp
scas
jmp
inc
cli
mov
cmps
inc
push
jp
cmps
stos
(bad)
mov
clc
scas
movs
inc
repnz
pop
push
(bad)
ror
xor
popa
imul
inc
mov
sub
sbb
ins
aaa
int3
push
inc
es
sbb
mov
mov
pop
call
test
push
(bad)
repnz
xor
nop
jnp
repz
xor
sub
jnp
and
dec
test
int
mov
cs
xor
and
adc
cli
sbb
mov
aad
or
xor
aaa
cwde
xchg
mov
pop
bound
and
fs
sbb
add
push
sub
pop
jb
jl
sbb
xor
daa
out
xor
aad
mov
adc
jns
pushf
dec
ret
pop
adc
enter
lods
sub
adc
or
push
psadbw
push
cwde
mov
sti
push
push
mov
adc
aam
mov
mov
dec
cmps
add
or
mov
sahf
mov
jge
xchg
frstor
fs
imul
cmp
add
adc
push
push
fcom
xchg
push
dec
cs
sub
neg
pop
sub
xchg
sub
xor
rcr
xchg
inc
into
pushf
retf
mov
les
or
clc
lods
loopne
sub
inc
pop
scas
dec
fstp
inc
mov
adc
les
ror
mov
leave
pop
scas
mov
stos
das
jle
ret
icebp
outs
or
aas
mov
adc
mov
push
dec
mov
repnz
lds
xor
repz
jg
xor
test
sahf
repz
and
into
cli
neg
xor
popa
push
fidiv
inc
ficom
lahf
dec
js
jmp
adc
lods
pop
cmps
lahf
fisttp
adc
push
(bad)
cmc
inc
dec
pop
nop
dec
outs
in
inc
les
mov
retf
jecxz
call
xor
and
xor
xchg
cmps
xchg
iret
inc
xchg
xchg
mov
das
cmp
test
mov
and
or
test
cmps
xor
test
daa
inc
repz
jae
sahf
adc
jge
aaa
popf
adc
add
into
cmp
xchg
jle
mov
dec
out
jae
lds
mov
stc
mov
dec
gs
sub
hlt
dec
int3
add
mov
pushf
jbe
test
loope
sar
ds
(bad)
sbb
ficomp
and
pop
in
gs
jae
hlt
popa
push
push
xor
mov
dec
adc
sbb
add
into
aas
repnz
enterw
mov
aas
mov
sbb
call
leave
and
sbb
gs
loope
pop
jns
sbb
(bad)
pusha
je
jmp
jne
cmp
mov
adc
les
loope
mov
test
bound
mov
fidivr
xor
push
inc
in
push
and
mov
xchg
inc
(bad)
out
pop
iret
xchg
adc
and
hlt
aas
inc
outs
retf
(bad)
in
add
dec
mov
and
out
test
lock
(bad)
sub
mov
repnz
and
and
cld
push
gs
fadd
and
or
xchg
std
dec
pop
mov
pop
mov
out
sbb
xchg
and
fsubr
sahf
sub
call
or
outs
and
pop
and
ins
sub
test
(bad)
or
jmp
inc
ss
jle
mov
stos
xchg
push
jnp
daa
xchg
xchg
mov
add
stos
lahf
mov
movs
adc
in
retf
adc
jno
iret
stos
push
inc
and
test
jo
mov
xchg
mov
(bad)
jmp
pop
xchg
or
or
mov
cmc
xchg
push
mov
mov
dec
cdq
call
mov
lock
cmps
jp
inc
movs
jno
xchg
test
outs
(bad)
je
leave
fstp
enter
jmp
sbb
inc
dec
or
movs
es
pop
jp
ja
ret
cmp
add
cmp
cmp
dec
shl
and
sbb
xchg
push
mov
jp
add
hlt
cli
and
repz
inc
fiadd
test
sahf
rcr
pop
pop
add
int3
xchg
inc
adc
stos
and
clc
adc
sbb
fst
(bad)
repz
loope
rol
enter
stos
lods
pop
xlat
push
pushf
and
xchg
cdq
pop
sub
add
cdq
cs
ret
popa
pusha
shr
inc
push
lea
pop
mov
inc
frstor
call
test
stos
inc
sbb
pop
pop
dec
iret
and
dec
ins
or
mov
ds
mov
xchg
call
xchg
das
mov
scas
inc
gs
push
mov
push
(bad)
fist
scas
jo
push
shr
scas
(bad)
cld
push
popf
sub
pop
aam
pop
xchg
adc
outs
push
mov
lods
(bad)
pop
inc
sub
lahf
dec
sbb
clc
push
cwde
add
clc
imul
mov
outs
aas
popa
leave
faddp
lods
sub
push
ins
mov
call
and
test
xor
sub
lods
loopne
test
fisubr
sub
stos
xchg
jle
cwde
ret
jno
mov
push
into
cmp
push
xlat
cdq
movs
lds
sub
aas
call
mov
shl
stc
jl
adc
inc
out
cli
leave
sti
movs
jo
mov
fwait
ds
jg
mov
push
xchg
ins
rol
enter
mul
rcl
sub
pop
mov
jb
mov
cld
das
sar
hlt
add
xchg
and
arpl
jg
ret
or
and
or
in
inc
sub
add
dec
cmp
sbb
enter
out
test
inc
comiss
pop
mov
out
movs
out
adc
sbb
repz
sub
push
xlat
push
add
mov
out
cld
outs
in
fiadd
mov
jge
jg
movs
add
xchg
loope
pop
xor
jmp
(bad)
movs
cld
mov
push
repz
retf
mov
mov
dec
mov
test
(bad)
lds
or
mov
push
push
sbb
in
cmp
sbb
pop
jl
add
dec
mov
sbb
stos
fcomp
sbb
addr16
fs
jmp
in
sbb
jns
std
xlat
xchg
popf
lds
aam
mov
xchg
add
in
dec
arpl
in
adc
iret
or
cmp
imul
inc
lods
or
aad
mov
pushf
pop
push
jp
std
mov
addr16
lods
ins
xor
jmp
xor
mov
loop
cmp
int
lahf
sar
div
push
loop
cli
pop
int3
dec
xchg
pop
add
mov
(bad)
loop
jb
mov
in
sub
cwde
es
cmp
xor
push
lods
aad
xchg
dec
jmp
push
xchg
lods
jl
jge
mov
xor
icebp
xchg
jnp
or
xor
xor
outs
les
jle
mov
inc
dec
adc
gs
enter
mov
xor
lea
call
jbe
aas
jl
rcl
js
test
pop
dec
gs
cdq
les
ror
mov
ins
test
pandn
mul
adc
iret
mov
lahf
inc
stc
dec
push
jecxz
xlat
jae
mov
cmp
imul
dec
jge
ret
pop
and
ds
xchg
push
add
(bad)
daa
dec
or
mov
xlat
outs
into
or
jbe
inc
and
sbb
mov
cmps
cld
inc
add
sbb
daa
cmp
sbb
push
jge
(bad)
(bad)
aad
jae
dec
out
or
cmp
scas
or
adc
in
ja
mov
cmps
mov
ss
(bad)
adc
pusha
ss
repz
jp
(bad)
jo
stc
pop
and
mov
xchg
into
cmp
je
dec
neg
into
sbb
pop
(bad)
jae
jns
xchg
pop
push
push
push
xchg
xchg
mov
iret
sbb
scas
push
or
inc
mov
and
test
lods
test
retf
mov
adc
loop
adc
ins
jl
mov
or
inc
retf
push
xchg
std
movs
jnp
xchg
push
xchg
shl
xchg
xor
test
rol
cmp
mov
inc
sti
or
mov
fmulp
sbb
mov
sbb
pop
inc
gs
pop
fwait
jbe
mov
add
rcl
ret
imul
mov
pmulhuw
outs
add
loope
pop
scas
push
nop
cld
bound
addr16
mov
div
and
int
mov
push
cld
mov
mov
xchg
repz
xchg
xor
outs
int3
sbb
gs
add
pop
int3
lods
imul
out
push
in
fwait
push
jo
add
dec
jbe
push
dec
test
xor
sbb
jb
lds
or
jp
and
ds
bnd
test
ins
shl
add
push
sahf
dec
inc
(bad)
inc
dec
and
xchg
ja
sub
cmps
push
inc
out
fidiv
xor
popa
hlt
into
push
fwait
add
jns
ins
cmp
mov
xor
push
inc
mov
es
jns
stos
movs
sub
popf
in
syscall
mov
sub
sbb
pop
imul
jecxz
mov
push
adc
pushf
dec
and
push
jnp
cmp
add
dec
sahf
jl
cs
jmp
psubusb
(bad)
pop
mov
ror
fmul
sahf
in
pop
icebp
xor
push
push
dec
popf
add
leave
jp
fstp
loopne
repnz
push
inc
push
rcl
pop
mov
push
jg
xchg
cs
cmp
div
test
sbb
push
call
sbb
push
mov
es
mov
stc
(bad)
hlt
pop
mov
es
int
into
aas
xchg
hlt
dec
mov
(bad)
repz
pcmpeqw
ja
ja
jae
ja
and
add
dec
xor
sbb
hlt
mov
lock
dec
fisttp
aaa
xchg
mov
std
mov
jmp
aad
sbb
ror
pop
jmp
es
sbb
scas
sub
jo
outs
xchg
push
adc
push
push
aam
jnp
mov
pop
shl
dec
sbb
lds
mov
(bad)
xlat
jge
lock
setp
jns
adc
cmp
hlt
in
inc
xchg
test
add
add
mov
push
(bad)
dec
cmp
or
repnz
and
int3
pop
fisubr
inc
xchg
sub
add
jns
sub
push
jg
inc
pushf
sbb
loop
popa
cdq
dec
push
jmp
gs
shl
mov
mov
jmp
es
retf
pop
jle
bound
je
pop
jl
or
cmp
shr
test
add
jmp
dec
cli
mov
mov
pop
sbb
mov
and
addr16
cmp
or
sbb
outs
push
sar
std
ret
cmp
mov
sbb
imul
stos
ja
aaa
test
sub
adc
jnp
call
ret
inc
lods
enter
mov
loope
fldenv
fucom
shl
sbb
test
pop
mov
xlat
xchg
bound
inc
daa
loop
pop
adc
dec
mov
popa
das
stos
out
inc
les
jl
sbb
push
mov
pop
dec
fldenv
mov
add
scas
ins
and
pop
inc
mov
or
cmp
fs
cmp
xchg
sbb
pop
addr16
daa
adc
sbb
mov
sub
fst
dec
es
imul
push
mov
test
inc
leave
ins
dec
inc
fidiv
push
cmp
push
arpl
mov
xor
movs
push
fsub
pop
add
pop
ret
mov
xlat
sub
sub
sub
idiv
cmp
les
push
sub
push
repnz
cmp
movs
js
scas
jg
gs
or
adc
out
or
sbb
das
pop
inc
enter
nop
(bad)
fidiv
xor
dec
shl
cld
cmp
pop
dec
movs
outs
fcmovnu
fdivr
ds
xor
sbb
mov
pop
leave
les
mov
mov
inc
daa
jae
test
jl
out
out
out
test
jmp
repnz
imul
(bad)
(bad)
mov
gs
cmp
mov
jo
jge
cmp
iret
ret
loope
rol
xchg
jmp
jo
jp
mov
add
xchg
bound
sub
test
xor
out
mov
push
out
pop
jbe
adc
adc
jnp
fiadd
lods
xchg
add
inc
rol
add
xor
ret
mov
cwde
or
clc
inc
mov
pop
cmps
inc
pop
popf
xor
add
mov
jge
das
pop
dec
loope
test
push
bound
leave
push
adc
dec
les
(bad)
enter
push
cwde
cmps
adc
(bad)
out
or
pop
lods
test
add
inc
scas
pop
fadd
jnp
ja
mov
shl
mov
mov
jecxz
movs
jae
imul
jae
popf
in
dec
fadd
xor
inc
dec
mov
and
leave
mov
adc
loop
ins
loopne
out
push
inc
xor
jo
outs
outs
mov
out
rcr
cwde
inc
ror
cdq
push
loopne
xor
xchg
fs
pop
inc
cld
pop
outs
sub
push
mov
inc
bound
inc
sti
xor
jnp
aam
xlat
pop
sub
or
(bad)
jle
dec
jp
test
arpl
xchg
ja
xor
lea
rol
cmps
mov
push
fcomp
(bad)
stc
icebp
inc
repnz
enter
int
push
retf
pop
lods
push
mov
mov
sbb
sub
push
fwait
sbb
scas
cmp
ficomp
add
inc
ret
iret
sub
mov
pusha
fld
push
sbb
test
mov
mov
retf
cmp
inc
dec
std
les
call
and
cmp
push
or
(bad)
xlat
cmps
sbb
xchg
ins
ins
xchg
add
and
addr16
ja
push
sbb
push
add
push
pop
push
les
xor
sbb
lahf
icebp
pop
adc
test
xchg
movs
xchg
xor
and
dec
icebp
loope
jne
jge
mov
inc
mov
sbb
sub
sub
cmc
outs
in
dec
lds
cmp
les
(bad)
in
popa
cli
sub
inc
sub
pop
aam
scas
(bad)
push
jp
retf
inc
jle
out
add
pop
mov
rcl
cli
mov
sbb
pop
jl
dec
(bad)
jp
and
fistp
loopne
es
jmp
sbb
gs
add
idiv
xchg
in
mov
xor
sub
xchg
pop
shl
or
sahf
mov
ds
cmp
mov
shr
push
mov
popf
push
jecxz
push
jbe
cmp
imul
gs
lds
(bad)
sar
out
push
xchg
xchg
leave
lock
movs
xor
cmp
xor
ins
sbb
loope
jp
lods
aad
(bad)
in
and
out
or
ret
fsubr
iret
jmp
mov
jo
ins
mov
lock
cmp
mov
push
scas
inc
mov
out
clc
out
mov
sub
daa
pop
inc
cld
fxch
mov
jae
mov
ret
add
push
jmp
jno
add
rcr
dec
clc
into
jg
add
mov
not
cld
cld
adc
pop
in
aad
cwde
ins
lahf
in
cmp
cmp
sbb
push
js
sbb
enter
pusha
lahf
jle
popa
int
popf
and
retf
or
and
xchg
ins
push
cmps
inc
mov
lahf
add
pop
pop
inc
aas
lods
jmp
mov
adc
test
repz
dec
icebp
and
ds
jb
hlt
push
pop
jl
sub
xlat
pop
mov
adc
sbb
sub
fstp
sahf
mov
lahf
in
imul
aaa
test
jge
pop
cmp
cmc
push
frstor
in
jae
in
mov
lods
leave
add
je
stos
add
pop
dec
test
ins
jns
aas
push
(bad)
fild
push
push
icebp
ins
iret
inc
and
push
outs
add
retf
add
cmp
push
clc
xor
push
fwait
xchg
in
push
das
movs
xchg
xchg
xor
fld
into
mov
ins
mov
push
adc
loop
data16
ret
dec
pushf
pop
pop
retf
sub
outs
aad
lds
les
call
std
cmp
push
icebp
fild
push
jne
xchg
(bad)
sar
rcr
cmp
xchg
jg
mov
in
add
dec
lock
std
pop
mov
pusha
mov
dec
test
adc
push
in
idiv
mov
or
and
daa
out
shr
mov
enter
rcr
jbe
int3
or
pop
sub
lods
push
or
add
clc
jns
sub
cli
call
fs
adc
in
adc
lea
mov
sub
inc
icebp
mov
dec
(bad)
pop
pushf
jmp
aaa
inc
jne
xchg
addr16
xchg
pop
test
loope
loopne
jo
arpl
pop
pop
cwde
cs
pop
scas
or
jno
popf
and
das
repz
xor
pop
into
or
daa
cmp
popf
mov
pop
stos
lods
jb
std
mov
jl
mov
xchg
pop
jnp
sbb
sub
sub
push
(bad)
into
or
outs
sbb
cs
inc
sub
shl
jp
ret
jmp
adc
cmp
rol
jmp
mov
xor
dec
cmps
call
ins
aaa
sbb
aaa
out
inc
movs
loope
pop
scas
in
jo
mov
and
pop
ja
mov
pop
xor
xchg
cdq
mov
daa
cmp
jge
(bad)
dec
mov
push
in
add
jb
in
or
lahf
sahf
outs
lds
dec
add
mov
and
out
daa
mov
xor
jg
iret
shl
pop
jmp
cmp
ret
fld
jl
data16
cmp
mov
xor
ins
setp
jne
loop
or
mov
(bad)
mov
int3
and
fcomp
loopne
cmp
jecxz
and
aaa
pop
add
scas
jbe
repnz
nop
push
idiv
pop
adc
mov
in
jl
adc
push
xor
lock
fs
jmp
mov
in
adc
mul
xchg
lea
mov
cmp
enter
jno
ds
pop
push
psllw
sbb
jg
mov
inc
pushf
and
mov
sti
pop
cmc
(bad)
movs
lods
jmp
les
sbb
repz
mov
push
popf
es
push
mov
cmps
mov
push
ret
fwait
out
jns
adc
data16
xor
jo
(bad)
mov
movs
outs
ja
dec
push
into
xor
dec
scas
jns
nop
in
push
adc
jmp
jmp
mov
adc
shl
jmp
sbb
jge
frndint
xchg
int
ins
jmp
pop
(bad)
adc
mov
(bad)
xlat
push
push
pop
loop
ins
add
jl
adc
std
lods
arpl
cs
std
out
xor
icebp
das
pop
out
push
mov
and
das
ret
sub
and
push
xchg
sub
xor
into
cmp
pusha
loope
retf
cmp
xchg
pop
add
ins
sub
out
shl
or
mov
adc
mov
push
cmps
pop
pop
push
ror
adc
xor
pop
push
ret
ins
ficomp
stos
xchg
or
pop
sub
push
mov
xor
test
or
gs
mov
popf
adc
mov
adc
xchg
scas
sub
mov
movs
mov
add
js
test
enter
fld
lds
xchg
and
jbe
aam
pop
out
push
imul
scas
fmul
ret
cwde
movs
sub
cmps
leave
clc
je
in
pop
ret
inc
add
ins
je
in
sub
adc
bound
xchg
jge
pop
mov
adc
rol
addr16
imul
xor
sub
stos
xchg
cli
add
setg
jo
rcr
stos
mov
jae
push
call
clc
push
movs
sahf
xchg
mov
scas
add
xchg
dec
xchg
dec
mov
ret
lock
(bad)
not
mov
or
mov
mov
into
mov
retf
jne
mov
out
or
sbb
mov
adc
mov
sub
ja
movs
mov
rol
jg
lods
mov
ins
jnp
fst
int
jae
cmp
sub
push
outs
sbb
push
cdq
sbb
mov
or
xor
mov
mov
xchg
and
sub
mov
or
mov
mov
pusha
inc
sub
addr16
div
xchg
je
(bad)
fstp
sub
mov
aaa
popa
stc
call
mov
das
loope
jnp
shl
xchg
inc
sub
xor
add
cwde
aam
ret
mov
sbb
out
jle
gs
dec
xchg
(bad)
cmp
out
sub
xchg
mov
loop
icebp
adc
mov
ficom
nop
xchg
xor
cmp
sub
jmp
pop
in
dec
aam
ret
lods
xchg
mov
loopne
pop
xchg
or
push
das
shr
loope
outs
jl
add
cmp
retf
dec
adc
inc
pop
loope
xchg
into
rol
cmps
dec
sbb
movs
xor
ret
retf
fmulp
ficom
mov
dec
movs
add
push
test
jo
fild
cmp
call
cmp
mov
and
hlt
inc
or
fdivr
repnz
push
xor
cmp
jbe
movs
add
and
dec
jno
movups
(bad)
cmp
mov
push
add
jecxz
inc
jge
and
stos
pop
fcomp
xor
xor
mov
inc
ins
ret
sahf
les
out
xor
mov
popa
adc
es
movs
mov
jne
shl
dec
jae
mov
imul
retf
cmc
enter
dec
xor
addr16
pusha
mov
push
sbb
lds
lods
movs
call
or
mov
scas
push
push
lods
out
mov
mov
push
xor
outs
cmp
mov
fcomi
stc
sbb
fcomp
aam
jg
fiadd
sbb
xor
mov
mov
fild
push
les
xor
(bad)
repz
add
push
out
push
adc
cmp
mov
rol
mov
call
or
out
push
ret
js
mov
inc
fs
mov
je
xchg
jp
dec
xchg
mov
in
jle
mov
xchg
adc
dec
psubsb
(bad)
loope
pop
icebp
ror
pusha
ins
and
je
inc
inc
mov
cmps
std
in
int
jge
inc
aam
push
mov
mov
in
loop
sub
push
out
mov
jnp
mov
cmps
and
fiadd
iret
or
fcom
xchg
push
and
jbe
int
repnz
nop
lock
retf
loopne
in
cmp
add
ds
push
je
(bad)
push
mov
out
cmc
jae
mov
ret
(bad)
pop
aaa
es
push
(bad)
mov
cmp
xchg
push
mov
cs
cmps
cmps
mov
pop
cld
clc
add
inc
(bad)
repnz
cmp
fs
arpl
cwde
ficom
aaa
jno
push
test
xor
int
mov
retf
or
ror
arpl
jo
jmp
push
add
xor
xchg
ret
add
mov
mov
xor
fxch
sar
ret
scas
mov
sub
(bad)
jecxz
sub
or
mov
mov
outs
xor
test
mov
adc
(bad)
sbb
cmps
xor
leave
or
aaa
xor
sbb
movs
mov
xor
lds
mov
cmp
mov
sti
sub
push
pop
jmp
mov
jae
dec
xor
scas
mov
lods
xor
or
jge
shr
adc
push
sbb
jb
jo
mov
call
es
sub
mov
loopne
mov
jns
and
sbb
in
ret
push
addr16
mov
popf
int
bound
and
mov
cld
jnp
es
mov
sbb
jo
pop
lods
in
and
rcr
mov
xor
mov
xchg
int3
jge
mov
adc
test
ror
call
das
cli
sbb
pop
dec
add
scas
jnp
sbb
sub
lahf
or
adc
mov
adc
inc
or
push
imul
sar
jl
mov
ficomp
jns
sub
inc
stos
dec
cmp
in
mov
(bad)
icebp
push
cmps
fdivp
and
aas
xchg
xchg
rcl
loop
fcom
pop
retf
pop
fdivrp
addr16
push
(bad)
sbb
jl
and
mov
cdq
push
adc
mov
mov
or
or
inc
push
and
sbb
shr
(bad)
hlt
or
movs
out
and
(bad)
jbe
movs
push
mov
test
push
test
push
iret
loope
jbe
mov
push
bound
jmp
ret
lods
sub
retf
mov
retf
jo
sar
add
or
imul
jle
push
(bad)
rcl
ja
repnz
repz
sub
repnz
or
or
or
inc
daa
scas
(bad)
xor
scas
int
add
lahf
sbb
es
or
xchg
jo
lds
fmul
(bad)
inc
pop
push
jns
mov
jb
push
cmps
pop
jge
in
sti
mov
stos
pop
push
call
or
fs
scas
mov
stos
jns
mov
pusha
xlat
out
rcl
arpl
ins
push
(bad)
std
inc
jge
cdq
es
ja
dec
cmp
and
call
dec
sbb
mov
imul
ins
mov
shl
push
add
push
mov
test
mov
fstp
jmp
inc
or
retf
adc
push
mul
sbb
fcomp
cmps
lds
in
jp
sub
xchg
pop
shr
test
sbb
mov
imul
cmp
mov
sbb
cdq
mov
(bad)
inc
cdq
popf
adc
mov
call
mov
enter
loopne
loope
ds
dec
xor
cs
inc
daa
inc
sub
cmp
(bad)
cmp
stos
sub
ror
cdq
add
xor
xchg
inc
out
clc
cs
add
jb
aad
sbb
sub
adc
sti
cwde
mov
ret
stos
dec
fstp
in
les
aaa
(bad)
fs
cmp
fild
inc
dec
iret
jmp
mov
retf
pop
pop
inc
jl
ins
bound
sub
int
shufps
pop
std
lea
and
or
cmp
xchg
fstp
and
scas
pop
je
(bad)
jnp
jmp
mov
ret
xchg
jle
xchg
les
mov
out
jmp
stos
add
call
mov
and
mov
les
sub
add
call
aaa
in
xchg
xor
jae
aam
in
push
fld
es
and
kmovw
dec
popf
pop
sub
dec
sub
mov
addr16
rcr
fmulp
mov
or
les
mov
lds
je
xchg
daa
int
pop
xchg
inc
cmp
outs
adc
dec
daa
inc
mov
cmps
retf
mov
push
lods
pop
or
aas
add
jg
push
loop
inc
iret
out
xchg
daa
dec
cdq
cmp
push
mov
into
fxch
add
fdiv
loop
pop
sti
ja
push
mov
lods
pusha
sbb
loopne
mov
(bad)
mov
mov
cld
xor
cs
lods
fisub
dec
outs
in
lods
(bad)
div
jecxz
lea
or
bound
sub
loope
add
cmp
les
outs
cld
pop
rcr
mov
in
push
sahf
inc
bound
int3
and
stc
add
mov
fisubr
daa
or
xor
xor
into
xor
sar
movs
shl
jne
test
(bad)
ds
ss
outs
in
sub
setne
dec
xor
shr
adc
push
dec
and
pop
ds
idiv
inc
xor
(bad)
ss
sbb
mov
ss
stc
jg
dec
gs
sub
jbe
xor
mov
jge
cmp
lods
les
sahf
(bad)
dec
call
aad
jnp
int3
lea
sti
mov
push
pop
and
popa
xchg
inc
xor
sbb
sar
push
fisttp
adc
xor
jmp
mov
sahf
jae
push
fnstsw
xor
jmp
retf
cmp
mov
or
mov
ror
ins
xchg
xchg
stos
jns
mov
dec
dec
and
aam
add
ins
mov
inc
or
test
fs
data16
and
jmp
sbb
call
cmc
cmp
mov
mov
repnz
js
push
call
xor
mov
sbb
adc
and
hlt
cdq
inc
test
fs
push
push
mov
call
repnz
xlat
ins
je
jg
xchg
or
setge
adc
and
jne
icebp
ds
in
repnz
mov
jns
icebp
(bad)
jmp
out
pop
xor
jo
test
imul
sbb
pop
stos
or
pushf
lea
pushf
inc
mov
dec
in
jmp
or
(bad)
mov
in
popa
loop
inc
out
pop
stos
stos
push
mov
dec
and
pop
retf
mov
and
push
rol
pop
fstp
xor
dec
aas
cmps
adc
nop
sub
outs
sub
inc
clc
mov
aaa
test
xchg
mov
mov
push
or
mov
mov
in
ss
or
iret
pop
gs
cdq
cmp
cmp
mov
pushf
inc
add
pop
movs
sub
(bad)
jmp
ins
out
cli
xchg
pop
mov
inc
mov
sbb
or
sub
xchg
retf
cld
and
aad
inc
inc
jmp
(bad)
pusha
int3
fs
dec
stc
dec
and
mov
push
and
int3
xor
iret
jle
and
xchg
push
add
mov
outs
into
outs
lods
jcxz
xchg
test
movs
mov
in
adc
ds
test
pcmpeqw
mov
pop
aaa
sbb
shr
out
sbb
xlat
mov
sbb
mov
jmp
and
call
sbb
push
rol
or
sub
xor
or
inc
repz
jle
fldenv
cmp
add
(bad)
mov
in
mov
daa
sub
js
mov
iret
xchg
jmp
call
inc
jg
mov
mov
sub
sahf
pop
fmul
adc
or
xor
shr
and
jmp
xchg
pusha
adc
push
in
fbld
js
sbb
aaa
adc
inc
dec
stos
mov
sbb
and
(bad)
daa
je
out
xor
pop
test
mov
add
jo
mov
cmc
popa
pop
sti
jp
lea
mov
pop
push
sahf
das
lock
shl
cmp
and
cwde
fild
jmp
dec
addr16
cmp
cwde
bound
fldenv
call
loopne
or
iret
add
pop
sbb
push
(bad)
aas
or
fwait
xchg
dec
pop
add
pop
sbb
or
sbb
pop
mov
mov
sbb
outs
stos
lea
stos
and
loope
fs
(bad)
pop
icebp
std
lahf
xlat
in
and
or
push
or
jl
call
jo
loopne
pop
mov
xor
fistp
cmp
fadd
dec
shr
mov
shr
xor
enter
sub
stos
ss
nop
add
leave
dec
mov
dec
stos
outs
sub
stc
imul
loope
mov
xchg
add
xor
ficomp
push
lds
and
dec
arpl
push
jge
test
sbb
addr16
xlat
mov
jp
xlat
mov
mov
mov
cmps
scas
add
inc
adc
in
movs
dec
lods
cs
xchg
mov
add
sar
stc
(bad)
lock
les
push
mov
shr
test
out
aad
pop
jo
stc
adc
jns
pop
into
dec
mov
mov
jl
jge
inc
das
(bad)
lea
ins
out
inc
dec
scas
push
into
or
sbb
jmp
adc
ret
xchg
push
aaa
jo
xchg
mov
in
cmp
and
and
add
jo
hlt
and
cli
mov
gs
sub
pop
out
add
push
cmp
leave
int
sti
jle
push
mov
sahf
std
xchg
ss
(bad)
jecxz
adc
add
sbb
jne
sbb
loop
pusha
cs
jno
fnstcw
push
icebp
adc
and
test
jp
dec
sub
enter
sbb
outs
sub
fs
push
sti
mov
xchg
push
inc
out
popa
xchg
ret
test
stos
daa
or
iret
sbb
push
shl
retf
jecxz
fdivr
sub
js
fnstsw
ss
mov
(bad)
fsub
sahf
cmp
dec
fs
adc
call
aas
and
test
retf
scas
icebp
xchg
xor
movs
out
loope
dec
push
in
inc
sahf
icebp
sbb
lahf
icebp
add
inc
test
pop
fld
mov
and
jno
imul
mov
mov
ja
jne
fisub
mov
ss
sub
shr
cmp
in
pop
push
and
mov
sub
sub
jl
jae
xor
cs
sbb
jmp
(bad)
dec
fadd
jbe
mov
sub
lods
arpl
pop
push
mov
ja
dec
daa
je
pop
repnz
mov
stc
or
rol
sbb
adc
mov
lods
pop
mov
and
mov
cld
rol
mov
inc
call
mov
outs
push
mov
rcl
mov
jnp
mov
cs
pop
aam
add
mov
xchg
pop
nop
xchg
jp
dec
in
mul
pop
xchg
mov
xchg
or
cmp
pop
sti
iret
retf
dec
rcl
lds
jp
and
or
push
or
rcr
dec
test
xor
cmp
mov
scas
mov
pop
scas
cmp
mov
call
test
(bad)
adc
sbb
sub
popf
push
call
mov
add
mov
mov
imul
cmps
loopne
fidiv
dec
hlt
jo
jno
cmps
leave
nop
add
out
adc
jne
dec
cdq
mov
fcomp
aas
inc
jle
pushf
pop
sbb
adc
inc
push
pop
(bad)
movaps
xchg
and
mov
scas
xor
mov
mul
fnstsw
xchg
leave
sbb
or
push
loopne
jo
xchg
inc
mov
jg
lods
loopne
in
in
loopne
and
cmp
and
movs
xchg
les
push
or
cmp
adc
jge
lds
lods
loopne
mov
ds
jl
test
dec
cmc
inc
dec
cmps
sub
repz
sahf
mov
fdiv
(bad)
push
mov
pop
int
xchg
and
fisub
enter
ret
popf
out
cmps
fwait
mov
dec
shl
test
ins
push
lgs
hlt
sub
adc
iret
or
xchg
and
push
sbb
ret
adc
sub
mov
arpl
ret
cmps
inc
sub
push
push
push
cmp
nop
add
xor
push
mov
cmps
inc
jb
repz
sbb
xlat
xchg
icebp
pop
mov
push
inc
mov
dec
jle
(bad)
add
pop
push
mov
test
jne
cmp
cmp
dec
in
sub
push
out
(bad)
lods
xchg
std
fld
inc
loope
add
pop
xchg
mov
scas
push
pusha
icebp
mov
icebp
leave
fisubr
jno
mov
(bad)
pushf
inc
xor
test
mov
das
mov
xor
mov
mov
fabs
mov
fild
int3
in
mov
imul
cli
dec
inc
sbb
jecxz
out
adc
aas
in
add
xchg
push
mov
es
sbb
dec
stos
jne
popa
push
(bad)
dec
push
cmp
sbb
movs
pop
cs
xchg
popa
sub
je
mov
xor
int3
jge
arpl
aad
popa
or
test
jne
pop
(bad)
stos
mov
inc
(bad)
mov
lods
imul
add
adc
xor
jmp
test
imul
jo
add
inc
push
(bad)
je
in
mov
cmps
in
popf
lods
stos
stos
pop
sbb
call
dec
fldz
fcomi
cmp
out
mov
cli
lock
hlt
cwde
retf
daa
mov
aam
int
add
test
adc
ins
pop
ret
mov
stc
retf
mov
cmp
sub
xor
mov
pusha
xchg
lahf
ret
outs
or
pop
and
test
inc
lods
cld
rol
imul
adc
(bad)
in
mov
add
dec
retf
and
imul
movs
ins
sahf
mov
jecxz
add
fcom
stc
movs
push
shl
pop
outs
fisubr
jp
ret
mov
nop
(bad)
enter
and
xchg
mov
sahf
loop
dec
or
inc
sbb
sub
mov
popf
push
xlat
div
mov
(bad)
mov
push
stos
pusha
dec
xchg
ds
test
ja
push
or
xlat
shufps
lock
jne
sbb
aam
xor
sub
inc
ins
call
test
pop
loope
cmc
inc
mov
ret
les
sbb
mov
stc
jg
fstp
push
sahf
outs
add
(bad)
xchg
xchg
cmp
leave
and
xor
(bad)
mov
cmc
mov
jmp
test
cmps
aad
call
div
inc
mov
xchg
outs
out
loopne
jbe
sbb
dec
cmp
add
jge
(bad)
das
in
outs
test
test
inc
fstp
sti
xchg
into
inc
std
ins
and
mov
stos
mov
mov
sbb
sbb
nop
cmp
and
pop
jbe
icebp
dec
mov
adc
jmp
mov
mov
lods
cmps
sub
fcom
sbb
cmp
xor
pop
sub
movs
dec
lahf
jnp
dec
mov
push
fnstsw
pop
ss
and
inc
xchg
rol
gs
imul
mov
push
and
adc
mov
icebp
bound
inc
inc
stos
mov
or
out
dec
adc
(bad)
test
and
call
add
and
inc
repnz
imul
or
iret
cmp
or
mov
mov
dec
idiv
mov
adc
(bad)
mov
ins
imul
(bad)
ficomp
sub
cmc
sub
ror
stos
inc
inc
in
jp
mov
fucomip
adc
dec
push
jecxz
and
mov
shr
cmp
fwait
adc
jno
pusha
rol
jp
push
jne
fsub
inc
int3
push
and
gs
jp
ret
xor
and
xor
icebp
pmuludq
mov
and
cs
sbb
mov
mov
push
adc
bound
jmp
fs
adc
call
sub
out
push
mov
outs
or
push
fsincos
shl
sbb
add
ret
xchg
mov
lods
mov
ror
(bad)
sti
xchg
or
(bad)
push
lods
ss
pop
mov
mov
loopne
inc
cld
or
push
jnp
jmp
rcl
mov
xchg
add
aam
ins
or
mov
inc
cwde
ss
inc
pop
inc
loopne
xlat
mov
in
pop
fucomp
xor
jne
in
push
inc
push
pop
enter
mov
xor
mov
ret
(bad)
ins
outs
add
ficomp
and
fild
daa
loop
out
daa
retf
mov
xchg
repz
sub
cld
xlat
pop
or
cmp
pop
cmp
cwde
in
cs
inc
add
outs
adc
inc
pop
ret
push
loop
mov
movs
cwde
mov
add
or
aaa
test
add
and
sub
ja
ret
out
(bad)
and
and
hlt
loop
fiadd
sbb
or
mov
aad
into
aam
test
lods
xchg
pop
je
jecxz
xchg
mov
call
je
fld
sbb
mov
mov
aad
ret
pushf
cmc
push
or
test
pop
adc
adc
retf
jge
push
inc
mov
ret
push
in
xor
xor
fs
jp
push
aas
sub
sbb
mov
adc
xchg
addr16
dec
add
fstp
jp
pusha
js
push
cmps
and
(bad)
in
ins
sar
rcl
lods
call
paddsb
je
push
sahf
cli
xchg
xchg
ficom
sbb
pop
rcl
int
js
inc
std
mov
addr16
call
imul
push
nop
cld
push
or
sub
add
dec
test
lock
lds
pop
mov
mov
jmp
xor
inc
lock
jmp
in
pop
call
test
movs
mov
push
rcl
sti
push
fcom
push
hlt
call
push
lahf
cmp
mov
iret
pop
daa
adc
arpl
add
xchg
addr16
cmp
xlat
pop
dec
repnz
ror
repnz
adc
(bad)
mov
out
fidivr
or
sub
hlt
addr16
jne
and
xchg
cdq
loop
inc
ins
sub
(bad)
jecxz
jns
and
sbb
adc
xlat
int3
test
loopne
out
ins
push
pusha
or
imul
inc
xchg
and
xlat
push
sbb
push
sbb
ret
adc
add
mov
adc
and
in
loopne
or
ret
fadd
adc
mov
inc
jmp
jnp
jb
popa
sub
push
ja
iret
mov
xor
mov
push
in
mov
out
adc
das
push
in
mov
dec
mov
cmp
xlat
dec
fsub
xchg
mov
cmp
lea
add
fnsave
push
and
cwde
clc
cmp
lea
aad
lds
(bad)
sub
js
mov
bound
rcr
jbe
mov
push
mov
stos
add
xor
mov
or
and
jg
inc
inc
sbb
sbb
cmp
addr16
mov
fimul
arpl
or
mov
dec
call
and
popa
mov
pop
stos
xchg
and
push
pop
pop
and
mov
jmp
pop
push
das
mov
sub
mov
adc
stc
stos
lds
cs
xchg
ret
push
jns
frstor
out
mov
pushf
jbe
stc
inc
movs
je
inc
pop
in
xor
ss
sahf
dec
pushf
lock
mov
call
ins
add
xchg
fst
and
push
mov
dec
aaa
mov
nop
mov
xor
sahf
sub
add
stos
leave
xchg
inc
cdq
shr
add
inc
mov
push
jmp
pop
cmc
std
test
cmp
retf
std
sub
mov
adc
icebp
arpl
push
call
pop
pop
mov
sbb
push
gs
mov
mov
sbb
in
cmp
push
xrelease
inc
or
or
sub
jns
sar
xor
test
aam
ret
movs
lods
pop
dec
pusha
fidivr
fs
cdq
cld
or
inc
test
fwait
popf
fcom
sub
test
jl
mov
pop
push
sub
cmps
inc
fild
dec
pop
xlat
sahf
sbb
pop
and
jge
sub
xor
lock
aam
or
xor
fucomi
std
add
xor
push
stos
xor
jmp
(bad)
xchg
ror
push
and
xor
pop
jecxz
stos
sbb
sub
adc
sub
test
cs
jns
jno
dec
pop
stc
stos
fdivr
(bad)
and
inc
adc
aad
aad
outs
inc
dec
fidiv
pop
out
popf
repz
mov
sbb
call
dec
push
inc
mov
popf
push
xchg
enter
enter
and
ret
fchs
out
xchg
mov
inc
pop
push
movups
pop
mov
and
retf
xchg
addr16
retf
fstp
and
(bad)
int
mov
std
xchg
push
cmp
jns
ds
jl
mov
pushf
in
nop
sbb
mov
cmp
xchg
jmp
inc
ret
push
mov
mov
dec
loopne
xor
cdq
xchg
ins
mov
or
pop
sub
push
mov
aas
fcom
fistp
test
fcomp
arpl
das
mov
and
mul
sbb
mov
mov
shl
call
xchg
inc
jmp
js
push
into
ret
push
sar
cmp
retf
hlt
out
adc
mov
sti
inc
out
(bad)
pop
pop
xor
dec
dec
ds
call
pusha
and
push
mov
dec
xlat
fisub
retf
sub
test
test
push
mov
jmp
dec
retf
repz
sbb
outs
cmc
mov
pusha
sub
jbe
(bad)
and
adc
pop
adc
(bad)
mov
adc
(bad)
xlat
xor
stc
mov
fwait
(bad)
(bad)
sub
pusha
mov
add
in
dec
xchg
ficom
iret
fcom
test
dec
cs
loopne
lods
inc
and
xor
jmp
push
inc
and
stc
in
inc
into
fsincos
cld
div
pop
mov
(bad)
sbb
xchg
fistp
fidivr
push
xchg
into
std
cmp
ss
dec
outs
jae
test
inc
sub
lds
sub
fdiv
mov
and
ins
sbb
das
push
mov
jmp
and
fs
cmp
jge
adc
sub
dec
sbb
fcmove
sti
jne
repz
mov
xor
inc
iret
fst
push
int
sub
cmc
ret
jbe
jmp
pop
fnstenv
mov
nop
imul
stc
xor
add
cmp
sar
lods
aaa
xor
push
push
push
push
adc
jle
lock
mov
pop
jp
ja
stos
xchg
jo
test
jbe
shr
or
ja
xchg
in
xor
xor
pop
add
adc
or
jbe
jmp
dec
pop
das
sahf
mov
popf
pop
mov
pushf
adc
mov
mov
imul
loop
inc
mov
cmp
fidiv
stos
popf
idiv
add
movs
adc
sbb
mov
js
mov
in
loop
outs
int3
rcl
xor
add
jbe
xor
sbb
retf
sbb
ja
(bad)
loop
xchg
cmps
imul
pop
(bad)
fsubr
(bad)
or
xchg
mov
sub
dec
fadd
and
push
pop
sub
cli
mov
test
dec
mov
in
adc
fist
pop
inc
sbb
xchg
inc
jge
pop
sbb
push
pop
cwde
mov
daa
mov
retf
xor
int3
sub
mov
test
mov
add
jg
inc
add
nop
out
or
mov
enter
pusha
cs
cmc
mov
add
sbb
test
jne
mov
fidivr
stos
jle
enter
sahf
ds
xchg
ret
add
and
cli
jns
(bad)
jle
shl
mov
or
div
iret
push
movs
inc
pop
retf
nop
adc
fsub
lahf
dec
mov
jae
dec
mov
outs
pop
mov
stos
cmp
mov
pop
mov
(bad)
fiadd
mov
pop
(bad)
loop
mov
xchg
int
loopne
sbb
por
mov
pop
mov
mov
cmps
mov
imul
imul
sar
mov
xor
pop
or
int
sar
fild
pop
lods
inc
data16
mov
imul
das
xor
bound
(bad)
adc
or
fdivr
nop
into
aam
jmp
sahf
outs
(bad)
int
jl
rcl
int
jl
sub
mov
inc
inc
rcr
add
sbb
inc
or
pop
xor
cmp
xor
dec
cmp
inc
jne
fisub
mov
mov
mov
ins
popa
pop
pop
xchg
rol
(bad)
jb
mov
push
cmp
lds
xor
ss
mov
movs
inc
retf
sahf
and
lods
xchg
add
icebp
ins
sbb
jge
jns
sub
imul
cdq
dec
js
and
pushf
lock
xor
mov
cmp
aaa
jne
xchg
sub
inc
loop
scas
js
fidivr
adc
mov
(bad)
sub
inc
adc
lahf
dec
cmp
dec
test
mov
seta
mov
pop
stos
aad
test
mov
jnp
fild
sbb
sbb
rol
in
or
rcl
dec
fwait
(bad)
test
push
push
push
push
dec
mov
in
push
inc
xor
(bad)
mov
sahf
rcr
leave
xchg
ja
mov
inc
sub
mov
loope
addr16
xor
repz
xchg
ja
int3
inc
in
mov
fwait
lock
loop
sti
jne
dec
mov
or
enter
test
test
shr
jb
clc
and
test
hlt
ret
pop
add
aaa
sbb
movs
jns
cmp
pop
or
push
cvttps2pi
outs
mov
jns
sahf
and
cmp
into
fisubr
sbb
dec
call
jae
or
shl
test
ins
sbb
pop
xor
jns
loop
cmps
retf
test
jne
push
(bad)
fisub
push
push
lods
loope
add
adc
dec
xchg
in
or
(bad)
mov
add
add
hlt
mov
call
stos
test
popa
inc
pop
jb
and
cli
xor
jbe
and
cmp
inc
repnz
sub
repnz
ins
outs
iret
dec
fs
hlt
in
ss
sbb
in
push
movntq
clc
mov
dec
cdq
add
adc
fdiv
dec
jge
rol
add
jge
repz
movs
jae
ficom
in
jge
sub
jle
fsub
jno
iret
push
or
xchg
ins
pop
idiv
lahf
cs
aad
push
cli
fs
mov
ds
lods
cwde
pop
inc
cmps
pop
or
outs
movs
popf
repnz
std
sbb
test
out
sub
add
addr16
pop
loopne
or
ja
jnp
fs
lahf
and
repz
movs
mov
adc
jmp
cmp
or
or
jno
mov
mov
xchg
dec
sbb
cmp
dec
out
jmp
outs
bound
jmp
ds
hlt
test
cmp
test
jmp
cmp
and
jns
nop
and
pop
mov
loopne
arpl
xchg
push
jbe
pop
dec
xor
dec
mov
mov
aas
mov
pop
sbb
inc
cwde
lock
cmp
fimul
xor
mov
cmp
xchg
(bad)
fmul
div
fmulp
loopne
cmp
jbe
sbb
push
out
add
xchg
mov
(bad)
outs
xor
mov
imul
cmp
(bad)
std
aas
call
jo
jmp
mov
sbb
push
xchg
mov
in
imul
and
popf
inc
jno
adc
xor
jecxz
jb
(bad)
bound
mov
dec
mov
cmp
aaa
xor
imul
sub
lds
inc
xchg
inc
cmps
int3
or
test
push
mov
aas
shr
mov
inc
cmc
mov
outs
outs
mov
and
and
dec
pusha
mov
push
sahf
jecxz
out
in
push
cmc
cmp
dec
sahf
lods
xchg
adc
pop
bound
fld
arpl
das
outs
sahf
int3
adc
inc
mov
sbb
retf
pop
sub
sbb
xchg
not
jb
jl
mov
(bad)
lds
inc
retf
and
aaa
inc
pop
ror
das
into
dec
je
hlt
jl
out
sub
lock
cmc
dec
push
push
ja
ja
rcr
test
repnz
mov
pop
int3
dec
and
aaa
push
and
xchg
xor
mov
loopne
push
cwde
lahf
mov
and
out
das
jmp
in
or
ja
fnstcw
mov
and
sbb
ja
push
loop
or
inc
(bad)
mov
xchg
mov
shl
fwait
xor
je
scas
dec
or
int
cmp
bnd
jp
and
mov
or
mov
in
call
cmps
stc
dec
push
mov
jge
add
cmp
dec
jnp
mov
xchg
jne
sub
jbe
xchg
test
add
dec
out
inc
test
js
out
in
sub
out
ins
fldenv
jno
pop
push
jns
mov
jle
sbb
sbb
sar
inc
mov
in
push
scas
inc
lahf
mov
in
fbld
mov
and
outs
imul
pop
gs
mov
add
cmc
out
rcl
xchg
xchg
sub
adc
mov
test
mov
scas
sub
adc
loop
bnd
in
fdiv
push
es
fcomp
jle
mov
or
xchg
dec
aaa
jp
(bad)
and
call
cmp
and
dec
ficom
gs
ins
adc
sbb
fwait
sbb
cld
mov
neg
jb
bound
mov
mov
pop
pop
jnp
inc
iret
push
ret
jns
data16
rcr
cmp
cmp
dec
xchg
inc
sahf
retf
xchg
and
cli
das
scas
fdiv
mov
inc
pop
pop
sbb
stos
movs
je
jg
sub
or
adc
jge
stos
in
add
and
mov
aam
cli
sub
lea
clc
daa
(bad)
fdivr
lds
popa
mov
jmp
push
rcr
in
fadd
int
das
pop
iret
mov
addr16
mul
mov
and
mov
movs
and
add
ficomp
inc
call
and
adc
jbe
mov
nop
sbb
test
lods
xchg
cmps
nop
loope
lds
daa
imul
dec
scas
je
jo
push
sub
inc
gs
and
and
cmp
ja
add
sbb
jo
or
arpl
adc
js
push
xor
sar
dec
dec
jns
or
xchg
repnz
sub
and
dec
fstp
push
iret
out
call
(bad)
mov
rcl
(bad)
sub
or
jmp
jl
clc
sub
popf
mov
pushf
adc
iret
in
enter
mov
pop
fwait
std
(bad)
aaa
out
cli
(bad)
shl
movs
in
popf
cld
push
lock
inc
cmc
add
retf
data16
xor
repnz
aad
cmp
and
or
out
mov
push
fwait
js
xor
or
arpl
add
ret
mov
mov
pop
jb
mov
ret
mov
adc
push
retf
adc
or
push
fstp
add
mov
(bad)
sar
(bad)
shl
push
xor
popf
aad
xor
sub
mov
pop
push
and
mov
pop
out
mov
hlt
ror
jg
pop
jp
retf
xor
or
jl
cli
add
inc
ror
out
fnstenv
pop
cmc
pop
fs
push
cdq
into
mov
in
sahf
and
stc
dec
inc
ja
ja
(bad)
scas
lds
ins
add
cmps
into
fcom
hlt
inc
sub
push
rcr
jp
jno
jb
push
out
nop
mov
jbe
cli
push
outs
in
sahf
loop
adc
in
push
or
jne
push
fdivr
pop
(bad)
jmp
mov
sub
ins
mov
push
loopne
adc
dec
mov
cmp
scas
sub
dec
dec
push
push
jmp
push
mov
loop
movs
test
ret
pusha
(bad)
int3
dec
loope
inc
or
or
adc
leave
lfs
es
aas
or
fidivr
outs
sub
out
lds
js
aas
inc
out
fwait
addr16
mov
xchg
mov
xchg
inc
pop
push
loope
loop
sub
stos
mov
dec
(bad)
loop
inc
and
mov
inc
test
jo
xor
push
or
add
ds
test
sbb
rcr
retf
aad
adc
xchg
xor
inc
or
adc
mov
jmp
retf
jo
adc
cs
xor
sbb
jbe
and
div
arpl
(bad)
mov
xlat
sub
sbb
jo
ficom
push
fist
inc
cwde
repnz
push
popa
cli
pop
dec
jge
daa
push
dec
adc
icebp
push
sub
lods
fmul
xchg
jbe
sub
and
dec
and
shl
mov
sub
test
mov
stc
xor
xchg
add
daa
cmp
in
pop
mov
push
pop
scas
mov
and
dec
hlt
cmc
xchg
ret
or
adc
inc
push
mov
cmp
ficomp
icebp
xor
bound
ror
inc
xlat
mov
js
in
cld
cmp
jmp
dec
sbb
cmps
retf
sub
xor
mov
int
inc
or
out
push
xchg
lods
jmp
mov
stos
mov
gs
push
retf
inc
cmp
mov
das
clc
shl
fiadd
ror
cli
jmp
xchg
imul
xor
adc
test
xor
adc
mov
mov
popf
shl
xor
jle
imul
je
ins
leave
shl
push
rol
popa
loope
dec
ficom
and
(bad)
mov
cmp
cld
sbb
popa
mov
test
pop
add
repz
lock
ins
jbe
sbb
inc
pushf
and
fild
cdq
int
pop
ins
ja
shl
jp
xor
adc
arpl
xlat
cmp
or
mov
inc
rcr
outs
mov
cs
jmp
add
xchg
jg
inc
xlat
mov
repnz
(bad)
push
pop
mov
out
fs
jns
pop
scas
ds
sar
mov
push
ja
fild
cmp
pop
mov
sbb
pop
add
movs
dec
xchg
add
daa
sbb
sub
sub
inc
sub
dec
mov
cmp
mov
xchg
in
rcr
push
movs
mov
mov
call
xor
and
adc
and
xor
gs
xor
arpl
cmc
xor
pop
stos
repnz
les
push
dec
adc
(bad)
mov
or
mov
stos
and
cmc
lock
in
pop
sar
xlat
xchg
and
and
jecxz
stos
jae
mov
xchg
jle
cmp
in
call
ins
btc
call
push
xor
retf
fsubp
pop
jne
inc
sub
imul
push
xor
pop
sbb
sbb
cmp
jecxz
pop
xchg
stos
retf
bnd
test
push
sbb
inc
xlat
jne
add
lahf
in
ret
lock
inc
sbb
rcl
jg
js
mov
mov
retf
push
daa
cdq
pop
iret
dec
(bad)
dec
sbb
push
lock
adc
xchg
xchg
mov
and
push
das
inc
(bad)
push
pop
sub
adc
xor
mov
aas
push
fs
push
xor
inc
or
mov
lahf
pop
xchg
scas
push
mov
adc
jp
and
ret
mov
into
mov
mov
(bad)
sub
pusha
std
mov
out
cld
mov
pop
sti
and
xor
mov
ror
fwait
or
sub
xchg
add
into
cli
inc
(bad)
ins
mov
jnp
cwde
or
or
cmp
fwait
xchg
outs
clc
add
lea
enter
out
inc
test
pop
jp
jbe
scas
jmp
pop
arpl
mov
mov
leave
test
fiadd
ins
jl
stos
pop
in
lods
out
popa
mov
fistp
(bad)
stos
loop
and
(bad)
and
ins
add
repz
scas
(bad)
push
shl
mov
fstp
inc
into
and
sub
xchg
movs
push
cmps
sbb
int
mov
sbb
call
push
dec
jmp
pop
call
movs
pusha
mov
xor
mov
mov
push
aam
repnz
and
add
fdivr
dec
test
es
cs
dec
cmp
imul
fld
push
mov
inc
shr
not
jmp
add
xor
dec
enter
mov
xchg
les
pusha
sub
mov
out
sti
cmp
jp
xor
push
mov
out
mov
mov
not
dec
and
popf
retf
stos
mov
sub
push
add
test
jmp
fild
mov
pushf
fisttp
mov
shl
aas
ficomp
inc
ret
iret
inc
loop
cld
out
lea
fwait
jg
out
int
movs
push
adc
mov
fst
push
mov
pop
dec
push
movs
sub
es
pop
das
popa
cmp
movs
add
fimul
cmc
push
aad
add
cmps
inc
dec
xor
test
push
and
inc
je
jmp
mov
aaa
or
lods
lds
inc
out
dec
sub
cmc
call
fbstp
xor
nop
dec
adc
sub
lea
xor
jp
or
adc
push
in
fsubr
fiadd
shl
xor
adc
add
push
cmp
ret
xor
and
inc
cmp
cmc
xor
out
mov
and
sub
iret
fdiv
pop
ins
sbb
and
into
mov
enter
mov
into
je
or
cmps
mov
sub
or
gs
lock
aas
in
cs
ja
mov
sub
and
adc
inc
pop
jmp
call
sub
aad
sub
and
arpl
je
mov
pop
lock
sbb
retf
mov
add
jmp
inc
jecxz
lods
out
xor
movs
xor
aas
dec
pop
mov
jg
or
sbb
pop
cmps
jnp
or
mov
in
test
shr
pop
movs
hlt
out
shl
dec
je
das
fbstp
inc
push
push
sub
pop
dec
jecxz
mov
push
push
cmp
loopne
popa
sbb
imul
sar
xchg
mov
push
inc
mov
add
pusha
loope
es
xchg
dec
push
hlt
mov
je
mov
mov
cmp
add
xor
sub
push
mov
xchg
pop
addr16
push
daa
call
(bad)
jo
cwde
sub
mov
adc
mov
cmp
add
jg
cld
out
push
dec
or
ficomp
repz
stc
out
leave
dec
ds
sbb
into
pushf
stos
hlt
repnz
call
fs
mov
xor
sbb
mul
(bad)
inc
mov
pop
adc
leave
add
imul
imul
div
popa
and
or
mov
jnp
push
test
mov
lahf
sti
or
(bad)
test
push
cmp
ror
and
and
es
push
and
jmp
dec
jne
xchg
icebp
out
aam
push
push
inc
xchg
mov
cld
test
aad
out
sar
retf
pop
fisubr
dec
mov
jg
adc
jns
add
pop
mov
in
xchg
pop
xchg
sub
mov
pop
and
mov
push
cmp
aam
push
retf
lock
pop
cvtpi2ps
jnp
in
into
mov
dec
xchg
adc
dec
sbb
cwde
xor
(bad)
out
inc
cmps
mov
mov
or
std
dec
ss
push
enter
das
outs
mov
and
dec
fisubr
xchg
mov
ficom
test
inc
cmp
adc
sbb
mov
jg
cld
mov
aad
pushf
push
cmp
add
sub
push
adc
fbstp
cs
fmul
pop
inc
ret
stos
outs
add
sbb
pop
cwde
inc
ss
es
dec
or
mov
or
xlat
push
push
(bad)
daa
call
adc
pop
dec
mov
sbb
push
mov
mov
mov
cli
push
mov
jg
mov
cmps
ficomp
loope
daa
leave
fbstp
leave
push
sub
dec
jns
call
xor
xchg
and
enter
fldcw
stos
sbb
jecxz
imul
not
sbb
push
adc
in
add
je
sbb
sbb
lahf
cmp
mov
rol
test
repz
jl
pop
iret
adc
pop
mov
aaa
mov
div
repz
(bad)
outs
dec
(bad)
(bad)
jmp
jbe
out
loope
xor
dec
loope
pushf
xchg
retf
sub
and
aam
inc
inc
(bad)
and
and
movups
pop
loope
(bad)
repnz
lahf
fmul
inc
loope
inc
mov
scas
imul
mov
ins
in
in
push
push
sub
test
std
jbe
rcr
test
dec
mov
and
push
add
mov
hlt
dec
clc
adc
aad
fnstcw
das
jae
lods
or
les
ror
xchg
stos
cwde
adc
int
dec
std
sub
mov
mov
add
imul
cmp
sub
icebp
or
xchg
test
cwde
lahf
lahf
pop
fwait
sbb
scas
retf
leave
je
mov
jae
or
(bad)
adc
inc
sbb
retf
fidiv
fcom
inc
sub
ins
(bad)
call
test
shl
cmp
mov
and
xchg
hlt
imul
mov
dec
push
pusha
fwait
pusha
fsubrp
ss
inc
clc
shl
jb
and
adc
sahf
ret
in
push
lods
jnp
(bad)
or
cmp
pushf
dec
jmp
popf
mov
imul
mov
mov
rcl
xor
stc
inc
(bad)
sbb
mov
sub
addr16
fs
dec
popa
adc
test
mov
std
mov
sti
pop
fidiv
add
stos
jae
ins
dec
vpsrad
gs
mov
mov
xchg
push
imul
paddsw
push
or
std
aaa
dec
ss
js
sar
ins
add
es
dec
stc
cli
sbb
pop
into
lods
and
dec
movs
add
jp
adc
out
jmp
ja
push
jl
sbb
add
fsub
xchg
pop
mov
outs
shr
adc
pop
div
lods
pushaw
scas
xchg
dec
or
inc
(bad)
and
retf
mov
jmp
and
dec
jbe
test
sub
cwde
and
mov
xchg
clc
stc
sub
movs
mov
xor
out
loope
pop
lock
adc
fist
paddsw
daa
rcr
aaa
int
mov
clc
dec
sub
call
cmp
sub
imul
xchg
mov
movs
jbe
jmp
jbe
jnp
pop
jbe
inc
repnz
stc
stos
cmp
push
in
sub
mov
sbb
inc
mov
inc
shl
je
cmp
mov
push
push
xchg
mov
xor
mov
and
push
loopne
pop
or
mov
pop
adc
or
sbb
xor
mov
lea
jl
sub
push
and
inc
shl
sbb
jl
imul
xchg
test
out
and
mov
clc
and
sub
test
test
push
ss
dec
mov
xchg
or
mov
jg
mov
imul
adc
scas
jg
movs
out
ins
popf
rcr
ja
xchg
hlt
into
xchg
test
mov
xlat
pop
sahf
xchg
test
call
push
(bad)
imul
lods
xor
jp
xor
pop
add
mov
pop
push
outs
pop
ror
or
xor
test
pop
sub
jge
arpl
out
je
pop
pop
jp
or
imul
mov
fist
fs
ins
bound
cmp
adc
popa
jns
pop
add
imul
test
jle
fincstp
imul
not
push
mov
ror
mov
aam
jg
xchg
and
dec
fmul
cmp
inc
adc
dec
xchg
(bad)
push
and
jmp
call
arpl
ins
and
add
mov
popa
call
aad
je
xlat
and
cs
inc
pop
mov
add
imul
and
nop
or
sti
sub
xchg
mov
or
push
cwde
in
jne
cli
add
out
jecxz
fs
movs
ins
mov
pop
lds
sbb
sbb
and
dec
push
mov
inc
(bad)
sbb
and
cmp
lahf
mov
push
and
pop
sub
stos
sub
mov
mov
adc
outs
lahf
cmps
popa
aaa
mov
cmp
out
sahf
xchg
xchg
cmp
inc
dec
xor
xchg
sbb
scas
adc
pop
mov
in
and
test
cvtps2pi
mov
mov
inc
xchg
jp
pusha
mov
loope
fwait
ins
or
imul
lock
jns
out
xchg
and
sub
fmul
jmp
(bad)
in
dec
add
into
push
int
lahf
xchg
mov
sub
ror
cdq
jb
int3
(bad)
inc
adc
jmp
xchg
and
out
(bad)
outs
sar
movs
fadd
in
mov
inc
jecxz
push
sbb
retf
shl
sti
inc
xchg
add
dec
fdiv
mov
mov
mov
mov
cld
(bad)
push
push
push
sar
cmc
sub
sbb
adc
xor
lods
hlt
cli
rol
lahf
jnp
push
add
repnz
jecxz
mov
jecxz
xor
add
adc
ss
push
test
popf
xor
movs
data16
jmp
cld
mov
leave
sub
mov
stc
aam
ret
cmp
or
push
sbb
jae
out
xchg
mov
or
scas
adc
es
cmp
nop
jge
and
cmp
sbb
sub
mov
gs
movs
sbb
in
and
fcomp
xchg
cmps
pop
sbb
jae
scas
sti
ins
xchg
or
icebp
and
daa
in
push
loop
lods
ret
je
xchg
cmp
aam
bound
mov
repnz
inc
inc
movs
sbb
mov
jecxz
out
mov
out
adc
and
xchg
xor
repz
adc
retf
xor
push
aam
mov
push
push
aas
inc
xchg
test
push
dec
sbb
adc
push
test
jo
repz
push
sub
jp
mov
jp
test
pusha
lods
jmp
repnz
or
jo
add
cmp
xor
arpl
xchg
xchg
adc
ja
je
(bad)
repnz
jae
test
mov
add
hlt
mov
(bad)
cmp
movs
dec
adc
in
inc
mov
adc
in
cs
push
lea
mov
mov
cs
cmp
cmps
mov
xlat
ja
jbe
iret
cmc
add
(bad)
stos
dec
dec
add
lds
(bad)
pop
or
adc
call
xchg
and
lea
nop
adc
xlat
or
sub
inc
jno
pop
dec
shl
test
add
push
call
push
lods
cmps
and
mov
fcomp
ror
xor
and
(bad)
fimul
adc
lea
jmp
lods
jbe
cmps
stc
xchg
add
call
jb
jo
cwde
jns
jnp
and
repz
pushf
adc
(bad)
xor
popf
cmp
inc
cs
out
push
mov
sti
cmps
cmp
sub
sub
mov
dec
xor
sbb
call
xchg
mov
jns
sub
or
dec
xor
int
sar
test
ror
xchg
cdq
or
push
mov
adc
cdq
enter
jns
xor
lea
cmps
cli
cmp
sahf
inc
inc
pop
xchg
mov
xchg
lods
rcr
mov
mov
push
add
cmp
mov
test
jo
dec
out
or
in
sbb
push
mov
xor
ins
pop
or
and
stos
pop
es
xchg
jne
cmp
fld
jmp
or
xlat
cmc
push
inc
jecxz
sti
enter
mov
fwait
imul
popf
cli
movs
xlat
sbb
sub
jp
fwait
inc
leave
add
hlt
mov
leave
and
scas
test
and
or
push
sbb
addr16
xlat
push
stos
xor
int
jno
mov
and
fadd
int3
cmp
leave
(bad)
hlt
test
push
sub
xchg
fstp
(bad)
xor
inc
and
in
jnp
or
int3
int3
sub
movs
pop
and
repz
(bad)
jb
aaa
in
mov
ds
cmp
jle
mov
jecxz
cmp
xchg
pop
(bad)
movs
div
and
nop
stc
bound
jl
rol
pop
in
jle
call
xor
adc
call
add
sub
jle
icebp
xchg
mov
pop
call
sti
outs
loopne
mov
dec
and
aaa
or
push
icebp
fwait
retf
pop
(bad)
sbb
mov
test
xor
icebp
ss
inc
and
push
and
jae
int
(bad)
push
sub
retf
pcmpgtw
paddsb
ret
sub
sbb
dec
ins
outs
imul
fadd
iret
cmp
jne
mov
movs
es
call
scas
imul
cwde
xor
ficom
sub
sub
popf
xor
aam
inc
mov
dec
in
inc
xchg
inc
jns
test
mov
mov
mov
lods
dec
jle
shr
mov
adc
add
mov
popf
and
popf
dec
je
inc
(bad)
sbb
in
add
fwait
repz
pop
inc
cwde
rcl
lock
or
arpl
cdq
mov
fcom
xor
mov
fcmovnb
mov
inc
mov
dec
add
push
out
mov
sbb
mov
ja
and
repz
cmp
pop
push
mov
push
adc
mov
sub
mov
or
and
in
or
or
fsub
jae
(bad)
pop
inc
xor
jo
std
sub
jge
loop
cwde
aad
imul
ror
into
push
xchg
dec
movs
fiadd
dec
or
test
add
retf
xchg
fs
mov
lods
fimul
jecxz
inc
in
lods
outs
out
std
add
pop
xchg
jge
pop
fidivr
jb
dec
pop
out
(bad)
cmc
push
or
loop
inc
or
mov
mov
jbe
mov
xor
fcom
sbb
mov
retf
mov
dec
fsubp
in
xor
mov
mov
(bad)
jo
cmp
clc
fdivr
jp
add
dec
inc
mov
loop
ja
imul
sbb
inc
in
cmps
sbb
inc
aas
ret
add
push
std
sti
sub
ret
cmp
leave
in
call
push
jge
push
imul
mov
adc
les
pop
in
jmp
sbb
out
mov
jle
xlat
aaa
and
repnz
pop
lds
loopne
int3
add
mov
pop
nop
pop
ins
inc
retf
adc
sbb
lods
dec
cdq
pushf
lods
pop
cmp
xor
into
mov
cmp
mov
and
in
pushf
xchg
pop
bound
inc
and
cmc
call
or
xor
dec
pop
lock
in
or
inc
push
adc
or
xchg
ret
in
adc
call
pop
lods
add
push
and
sbb
or
out
(bad)
pop
shr
cmp
jno
sub
push
aas
dec
sbb
outs
ret
sar
push
mov
sbb
cmps
stos
ins
lock
enter
(bad)
jp
push
es
repnz
jnp
popaw
cld
dec
sahf
add
xor
and
in
aas
xchg
lock
mov
pop
imul
mov
ja
pop
adc
sbb
retf
mov
lods
cli
inc
xchg
add
cmps
adc
or
test
dec
cmp
cmp
pop
popa
jmp
sbb
adc
jnp
add
sub
adc
dec
push
test
adc
pop
cmps
fsub
rcl
jns
dec
mov
test
push
out
or
cmp
cmp
xor
xchg
adc
dec
rcl
cmp
adc
inc
or
sbb
sub
mov
dec
push
mov
push
dec
daa
gs
mov
call
sar
mov
cmp
fnstsw
push
jno
(bad)
add
movs
(bad)
ins
mov
imul
sub
sbb
(bad)
or
stos
pop
es
outs
mov
cmp
push
cmp
nop
or
in
inc
add
inc
fadd
sbb
scas
adc
call
sub
arpl
fs
sar
bswap
xlat
or
es
sub
sub
mov
push
sti
and
mov
dec
push
imul
repz
mov
inc
dec
pop
xchg
ret
add
clc
daa
rcr
movs
mov
push
push
jle
and
ret
push
and
leave
push
push
out
ins
jo
push
sbb
and
ror
pop
ss
xchg
lahf
sub
sar
pop
arpl
push
lahf
rcr
jp
or
cmps
xor
(bad)
mov
aam
popf
sub
mov
cmps
loope
pop
test
sub
loopne
(bad)
mov
aad
(bad)
rcr
sti
repnz
cmp
jmp
out
inc
cmc
push
sbb
ret
cmps
jnp
adc
add
push
push
mov
(bad)
cmps
mov
lods
imul
xor
cmc
xchg
div
ds
inc
pop
jecxz
inc
xor
dec
clc
mov
mov
push
mov
imul
dec
lahf
push
push
cmp
jb
cdq
xchg
scas
ja
cmp
(bad)
or
cld
push
je
pop
jae
test
fnsave
out
arpl
pop
push
or
iret
cmps
sbb
and
sub
ret
mov
inc
iret
(bad)
mov
adc
rol
mov
(bad)
push
stos
jo
add
fdivr
imul
dec
push
shl
ja
repnz
(bad)
out
adc
xchg
popf
in
stos
inc
xor
out
fcom
lahf
inc
cmp
add
xchg
or
popa
inc
into
push
pop
xor
xchg
mov
dec
sub
hlt
mov
inc
mov
in
or
pop
xor
push
repz
fdivr
std
cpuid
les
mov
sbb
ins
rol
out
dec
aas
mov
inc
sub
fistp
sar
in
cmp
push
ins
ret
pop
mov
or
loop
aad
add
mov
ds
(bad)
pushf
sub
inc
call
push
xchg
call
jmp
jbe
and
mov
bound
xchg
fisttp
addr16
aad
data16
cmp
pop
add
mov
retf
jecxz
addr16
(bad)
push
sbb
adc
mov
scas
inc
lods
ret
xchg
mov
nop
(bad)
ins
sub
shl
nop
or
cmp
out
shr
jne
dec
jnp
popa
jns
push
mov
mov
test
xor
mov
dec
call
sbb
aad
pushf
mov
or
popa
bnd
fwait
push
add
pop
xlat
scas
jnp
inc
push
xor
fdivr
mov
add
retf
push
and
dec
xchg
add
movs
jle
das
mov
push
pop
mov
(bad)
push
pop
xor
or
xchg
mov
inc
rol
(bad)
in
je
mov
loope
xlat
dec
mov
xor
sbb
sub
mov
lock
test
lods
jno
push
fldcw
sbb
push
jbe
sub
mov
add
adc
fwait
push
push
sub
repnz
movs
and
mov
or
inc
inc
dec
push
stos
pop
xchg
fsub
pop
jle
dec
(bad)
retf
jmp
ds
push
mov
jns
int3
daa
call
in
(bad)
push
adc
data16
push
sahf
test
push
rol
jae
sub
mul
add
and
repz
imul
mov
cmc
je
inc
fldenv
les
add
pop
inc
mov
mov
vmptrst
xor
jmp
movs
fimul
pop
mov
out
mov
lea
(bad)
push
dec
test
fwait
or
adc
add
lock
jg
pop
push
das
addr16
mov
mov
inc
mov
out
xchg
xchg
sbb
ds
dec
xchg
cld
fdecstp
pop
jae
adc
push
sti
fadd
xchg
fs
jae
and
sbb
mov
add
or
test
jmp
mov
fcmovb
clc
(bad)
push
mov
jnp
cmp
and
adc
test
aam
ret
jnp
or
jl
rcpps
push
or
mov
daa
pop
inc
das
mov
xor
mov
aam
inc
(bad)
sbb
mov
cmc
stos
mov
inc
push
push
aas
mov
ins
push
lahf
loop
in
xor
cs
cmp
jne
icebp
and
adc
adc
or
ja
mov
pop
and
call
pop
and
jbe
mov
(bad)
in
sub
dec
dec
mov
ins
xchg
or
ret
mov
jbe
mov
pop
push
dec
inc
or
add
xor
and
cwde
push
jo
or
lahf
test
cmps
push
jns
adc
add
in
fist
mov
scas
adc
scas
arpl
adc
sub
pusha
cmps
and
xchg
xchg
jmp
mov
sbb
gs
sbb
pop
or
cmp
imul
rol
cmp
adc
push
push
push
mov
sbb
lahf
loopne
sub
mov
or
retf
cmps
int3
xchg
mov
pusha
mov
sti
int
hlt
push
xchg
push
add
in
dec
outs
cmp
fwait
xor
sub
cmc
js
push
jl
pop
out
iret
or
pop
jmp
adc
pop
je
mov
repnz
pop
movs
retf
push
or
adc
add
jnp
push
pusha
dec
sbb
push
jns
(bad)
rcr
sahf
ins
jmp
or
jp
mov
dec
cmc
sub
xchg
xchg
int
ss
mov
(bad)
pop
adc
pop
or
repnz
fbstp
or
xchg
ret
inc
out
je
in
stos
sti
cmp
cli
mov
jge
lea
add
popf
cmp
ret
inc
xor
test
aad
jno
mov
dec
push
jmp
and
dec
aam
add
pop
mov
pop
jl
mov
dec
jne
and
xlat
inc
(bad)
fsubr
pop
mov
(bad)
in
or
int3
out
cmc
sahf
int
or
imul
xor
in
sub
fdiv
mov
rol
xlat
xor
es
test
cmp
xor
std
pop
in
and
xor
jecxz
fisub
push
clc
in
aam
int
push
add
int3
test
mov
xchg
pop
push
mov
xchg
in
dec
inc
or
sti
inc
lods
mov
test
imul
lds
mov
or
(bad)
adc
test
dec
mov
test
cmc
in
pop
jge
mov
add
pop
cdq
dec
cmp
sub
cmp
pop
enter
inc
add
push
inc
pushf
jp
aas
and
push
rcr
movs
xor
pusha
jle
sub
pop
and
repnz
iret
call
jmp
out
adc
inc
sub
cmps
jne
outs
pop
aam
call
adc
lea
add
inc
adc
idiv
inc
stos
ret
push
mov
rol
dec
call
arpl
in
mov
dec
inc
(bad)
nop
add
mov
mov
and
fidivr
inc
repnz
jmp
cs
cmp
cmp
popf
into
nop
movs
repz
mov
leave
adc
in
xchg
or
and
ja
adc
fisttp
push
push
mov
popf
retf
sti
xlat
cli
push
jle
mov
xchg
push
xor
push
xor
mov
stos
jmp
dec
mov
dec
inc
adc
add
sbb
test
clc
fild
pop
lods
outs
cld
in
ret
adc
push
stos
cmp
pop
and
mov
retf
or
pop
cwde
inc
and
cmovle
push
add
sbb
rcl
sub
adc
jae
int
mov
push
xchg
pop
arpl
dec
or
ins
retf
jmp
or
shr
and
cs
mov
add
neg
cmps
mov
inc
sub
push
fsub
das
dec
movs
adc
rcr
hlt
ror
aas
mov
mov
pushf
das
(bad)
mov
and
adc
movs
mov
lods
mov
adc
out
mov
cmp
or
or
push
adc
pop
push
into
push
pop
adc
jl
and
xchg
mov
fwait
nop
icebp
sbb
dec
rcr
add
mov
push
inc
mov
sar
adc
(bad)
out
pop
repz
mov
xchg
movs
jne
dec
pushf
fldcw
daa
cmp
xchg
js
call
mov
mov
pop
cmp
jecxz
sbb
in
not
xchg
(bad)
mov
xor
mov
repz
xchg
sbb
or
ins
xchg
(bad)
pop
adc
xchg
jmp
inc
or
loopne
mov
je
adc
imul
popa
jle
mov
push
fisttp
cwde
xor
jp
mov
and
pushf
mov
sub
lea
push
int3
adc
shl
xchg
fdiv
imul
push
stos
ja
jns
mov
jns
jecxz
push
fbstp
push
dec
xor
xor
scas
jp
popa
popa
int3
pop
xor
xor
mov
pop
xchg
aas
or
nop
mov
lock
pop
neg
retf
mov
cmp
cmp
hlt
(bad)
lock
hlt
push
popa
test
jmp
fmulp
mov
bnd
inc
lock
pushf
push
jle
hlt
and
pushf
push
push
loopne
and
dec
mov
xor
sub
or
mov
(bad)
cwde
movs
push
retf
inc
mov
inc
imul
aad
cmp
mov
push
and
outs
leave
cmp
jns
pop
mov
dec
das
dec
mov
mov
sbb
cld
mov
imul
mov
jge
jp
fld
scas
fimul
cmp
dec
push
add
aaa
sti
push
and
ins
inc
ret
adc
sub
dec
push
retf
dec
or
inc
hlt
push
shr
rol
(bad)
cwde
pop
scas
outs
repnz
xchg
or
and
arpl
add
dec
sbb
sbb
push
js
xlat
pop
mov
shl
push
outs
push
es
ja
jns
xchg
stc
test
popf
dec
sbb
int
out
mov
jne
cmp
scas
push
inc
jbe
and
jne
mov
mov
nop
dec
jae
ss
cmp
movs
add
or
sub
fwait
cld
fnstsw
pushf
sar
call
shr
(bad)
pop
lahf
(bad)
ja
xor
imul
fucomi
pop
arpl
or
imul
add
mov
dec
in
mov
imul
clc
enter
imul
lahf
ds
mov
call
clc
aam
pop
loope
jo
xlat
mov
arpl
into
lock
ret
sti
lock
sbb
js
aaa
dec
push
into
out
shr
(bad)
mov
add
aaa
lds
daa
jbe
sub
mov
mov
mov
aad
sbb
cdq
mov
or
sub
clc
sbb
test
adc
aas
cs
loopne
out
mov
popa
cmps
aaa
dec
(bad)
cmc
loop
in
hlt
cmp
ja
jecxz
or
adc
test
pop
mov
cmp
pushf
lea
jle
(bad)
loopne
xchg
fmul
inc
inc
mov
mov
loope
ficomp
add
sub
adc
mov
add
xor
popa
and
sbb
in
jns
mov
cli
scas
push
pop
lahf
(bad)
jmp
mov
call
(bad)
jmp
sbb
cmp
cs
mov
ss
mov
xor
popf
mov
mov
cdq
test
fistp
shl
or
(bad)
push
mov
fmul
xchg
in
fstp
jns
push
push
test
scas
pop
aad
xor
sbb
mov
(bad)
fild
adc
mov
mov
fadd
pusha
xchg
and
add
out
xchg
movs
aaa
pop
mov
push
push
(bad)
push
mov
push
lods
dec
dec
mov
xor
(bad)
push
lds
pop
out
scas
or
cmp
es
out
adc
and
aam
mov
sbb
sar
jmp
hlt
nop
sbb
dec
outs
outs
repz
fidiv
xor
mov
scas
hlt
mov
xchg
fisttp
ins
adc
jnp
and
ret
and
cmp
rol
lock
cld
test
add
cdq
cmc
add
jo
js
xchg
call
or
inc
lods
test
ror
bound
cmp
inc
ret
popa
sub
cld
lea
xchg
cmp
or
test
test
leave
xchg
ja
mov
test
lock
test
adc
pop
movs
(bad)
outs
sbb
sbb
xchg
mov
push
mov
and
out
gs
jmp
aaa
mov
outs
and
pop
inc
in
in
cmps
add
mov
stos
inc
sbb
mov
in
jb
mov
mov
mov
sub
loop
mov
jge
mov
(bad)
jge
mov
sbb
out
xchg
out
mov
jge
or
xchg
and
dec
inc
xor
pushf
scas
stos
call
sub
xchg
stc
adc
xchg
test
mov
pushf
mov
repnz
call
sub
test
leave
fst
cmc
ror
out
aas
repz
inc
pop
or
ins
sbb
dec
repz
jg
test
pop
dec
push
xor
clc
dec
mov
mov
out
mov
cmp
jno
mov
std
repnz
pop
pop
mov
aam
mov
das
xchg
movs
ficom
xchg
mov
sbb
add
jno
jae
div
sbb
and
mov
popf
gs
sub
cmp
stos
out
xchg
shr
sbb
jns
movs
dec
ds
int3
push
ret
adc
xchg
add
in
jp
mov
imul
in
jmp
cmp
ins
jo
inc
and
dec
retf
cs
mov
aas
(bad)
in
xor
jne
inc
rol
into
mov
push
int
ja
icebp
mov
add
push
retf
je
scas
test
sub
loopne
sub
aaa
mov
adc
aam
push
xlat
iret
xchg
jmp
(bad)
sub
or
ins
sub
mov
ficomp
in
repnz
ja
(bad)
jno
ret
xchg
mov
stc
imul
ins
inc
sub
mov
push
out
int3
out
outs
sub
add
repz
fadd
leave
xor
scas
pop
sub
mov
retf
in
imul
xlat
mov
loop
cmp
xchg
rcr
dec
into
dec
cmp
add
dec
(bad)
cmp
jbe
in
sbb
xor
sbb
push
adc
xchg
mov
xchg
push
lds
fist
stos
cmps
test
add
xchg
int3
div
cmp
cmps
mov
mov
hlt
imul
ret
sbb
mov
into
jns
xchg
shl
sbb
fmul
mov
das
add
jnp
xor
adc
ja
cwde
add
cmps
pop
loop
shr
adc
sbb
pop
imul
fisubr
hlt
sbb
mov
add
push
enter
clc
jns
int
push
sbb
aaa
(bad)
jo
push
mov
xor
mov
mov
pop
mov
pop
sbb
retf
xchg
jl
shl
imul
mov
stos
pop
pop
pop
cs
pop
inc
add
pusha
sub
pop
scas
test
jnp
popa
in
sti
push
mov
es
or
and
adc
fild
stos
jns
inc
jo
push
ins
test
sub
repz
cmps
dec
push
shr
test
jp
scas
ror
push
jmp
cmps
pop
test
retf
pop
cli
mov
mov
xor
das
dec
and
inc
fcomp
pop
rdtsc
xchg
sub
xlat
or
jmp
das
inc
scas
sub
mov
adc
stos
cmp
jbe
std
pop
mov
inc
scas
hlt
neg
sbb
jno
mov
mov
out
pop
cmovnp
dec
push
into
sbb
(bad)
shr
or
jbe
sub
and
data16
lds
lock
dec
xor
aam
jle
add
shl
push
mov
test
mov
push
shl
push
sub
sbb
mov
or
int
call
jmp
inc
shl
pop
neg
push
push
dec
cmp
push
enter
jmp
jae
mov
xor
lahf
push
mov
idiv
cmp
fcom
call
jbe
dec
add
and
mov
push
fwait
sub
arpl
push
or
mov
pop
push
add
jecxz
arpl
cmps
call
enter
ss
adc
rcr
test
(bad)
cmps
in
fmul
pop
adc
jbe
rol
xchg
dec
dec
push
cld
imul
inc
inc
xor
or
jg
adc
jl
cli
ss
stos
mov
test
mov
hlt
mov
add
shl
push
jnp
popa
call
nop
dec
pop
jmp
cli
push
and
mov
repz
fstp
mov
in
dec
mov
inc
sub
jns
hlt
jbe
cmp
push
jnp
shl
retf
and
ret
add
test
loopne
cmp
test
push
adc
mov
dec
shr
lea
push
mov
jb
test
mov
mov
addr16
iret
arpl
jo
add
xlat
sbb
aam
mov
dec
int3
scas
dec
jbe
lds
xor
and
pop
jmp
lods
jnp
popa
ror
aaa
cmp
sbb
fadd
das
shl
cmp
sbb
icebp
sar
push
enter
test
adc
fiadd
fldcw
scas
fcmovbe
cmp
mov
sbb
cmp
adc
xchg
or
das
cmp
ret
inc
dec
ret
pusha
push
je
or
shl
inc
cmps
push
stc
test
aam
inc
dec
push
adc
jg
dec
call
dec
sub
mov
sub
jmp
and
dec
or
pusha
cmp
ret
pop
lea
les
fiadd
mov
sub
hlt
mov
mul
or
ret
pop
xchg
test
or
das
sar
aam
fist
das
or
mov
bound
xor
mov
call
lock
and
mov
rol
cld
mov
sub
(bad)
mov
jne
jmp
push
push
jnp
clc
inc
pop
ret
add
pop
sub
inc
out
push
ret
push
xchg
pop
lds
inc
mov
xchg
pop
imul
cmp
mov
js
int
mov
stc
cmc
imul
lods
jge
ja
pop
xchg
ja
xor
dec
dec
dec
lea
adc
push
inc
jg
fldcw
jp
aaa
popf
fcomi
inc
popf
push
es
and
mov
mov
push
or
push
or
stos
pop
js
mov
xchg
push
or
dec
mov
jmp
lahf
xchg
xchg
sub
mov
push
enter
jmp
ins
cmp
mov
cmc
scas
mov
mov
rol
fcom
mov
in
rcl
jmp
arpl
(bad)
push
aad
ins
inc
fcom
add
push
dec
dec
call
ficom
inc
test
xor
cmp
aad
and
out
sub
jbe
jge
or
push
push
sbb
sub
jae
hlt
sbb
push
and
add
jmp
daa
xchg
jle
and
add
fisttp
mov
mov
dec
xchg
or
aaa
mov
jmp
dec
aam
icebp
gs
ror
xchg
pushw
cmp
jle
push
sub
mov
pop
stos
out
push
dec
mov
dec
sbb
and
int
inc
jecxz
out
mov
shl
je
cmps
out
fwait
cmp
retf
mov
out
ret
dec
pusha
mov
js
(bad)
rdmsr
mov
dec
inc
outs
or
jl
jb
loope
mov
loop
out
neg
ficomp
push
xchg
inc
(bad)
add
sub
pusha
jnp
(bad)
not
xor
or
pop
leave
xchg
stc
and
inc
stos
or
fwait
imul
imul
fisttp
adc
jle
mov
(bad)
arpl
cld
adc
outs
push
mov
rol
xchg
sub
imul
pop
into
jno
imul
push
sub
loop
test
or
jb
adc
jbe
out
or
xchg
pop
xor
ja
sti
and
outs
and
in
push
(bad)
push
mov
(bad)
stos
xchg
retf
fwait
xor
ja
into
test
inc
pusha
sbb
cdq
retf
and
pop
mov
dec
bound
mov
aaa
sti
add
mov
xor
div
fwait
rcr
cmc
xchg
lock
pusha
mov
or
jne
shl
loopne
or
xchg
fnstcw
xlat
cmp
neg
ror
cmps
adc
scas
scas
call
add
push
jmp
rol
adc
mov
mov
lock
dec
test
scas
xchg
lods
in
push
fadd
lds
rcl
out
xchg
sahf
or
movs
xchg
test
mov
mov
bound
mov
push
push
fist
(bad)
xchg
(bad)
mov
mov
dec
imul
je
fnsave
stos
mov
ja
ds
mov
ins
mov
xchg
dec
sub
sahf
mov
test
call
xor
cdq
sub
movs
and
mov
loope
jne
movs
mov
push
cmp
retf
xchg
or
jne
adc
lods
outs
cmp
and
sbb
les
lea
hlt
aam
sbb
popa
rol
xlat
or
sbb
add
scas
sbb
leave
pop
add
ret
call
inc
jns
jl
cs
ins
jne
aad
je
jecxz
mov
cdq
sub
mov
cmps
dec
les
leave
stc
fild
mov
push
clc
movs
je
test
pop
mov
add
inc
dec
mov
pop
daa
and
popf
(bad)
or
sub
xchg
sbb
popa
mov
repnz
ficom
retf
pusha
add
(bad)
add
push
stos
sbb
jl
jbe
stc
pop
fsub
sub
xchg
ins
rol
outs
outs
cmp
ret
dec
lock
dec
lds
mov
movs
dec
xchg
fwait
xchg
mov
fst
mov
adc
push
(bad)
(bad)
mov
loope
fmul
add
lods
icebp
repnz
xchg
xchg
dec
mov
(bad)
jmp
dec
cmp
out
cdq
cmps
cmp
es
add
into
pushf
movs
movs
arpl
test
out
arpl
ss
outs
inc
mov
lds
js
adc
mov
into
ror
pushf
ffree
int3
pop
daa
mov
cmps
inc
cld
stos
cmps
in
lock
mov
shl
mov
out
(bad)
(bad)
mov
addr16
std
fwait
and
cmp
mov
mov
out
mov
cmp
and
push
push
push
test
jmp
xor
sbb
add
out
mov
movs
aam
cmp
jne
inc
in
rdpmc
iret
pop
(bad)
rcl
add
push
or
icebp
xchg
mov
mov
xor
push
imul
jnp
dec
mov
jb
mov
sub
pop
push
xor
repz
jnp
jae
pop
fs
lods
push
gs
add
xor
test
int3
jo
repz
push
jg
int
jl
pop
cld
stos
sahf
in
or
jb
mov
mov
ds
ins
jp
sbb
jge
and
mov
fwait
dec
retf
mov
sahf
fcmovnu
jnp
stc
pop
arpl
xchg
dec
jno
cmp
xor
dec
mov
xor
std
into
dec
mov
sbb
sbb
or
mov
test
test
jmp
repnz
push
mov
sti
and
xchg
cs
shl
fisubr
(bad)
into
cmp
xchg
cmp
mov
in
mov
call
cmc
sbb
rcr
int3
inc
cs
sbb
mov
fwait
outs
call
mov
xchg
in
add
inc
aad
ins
xchg
test
and
(bad)
imul
call
mov
inc
loop
jle
(bad)
stos
mov
(bad)
int
xor
add
adc
fwait
popf
repz
add
push
repz
jl
addr16
stos
pop
xor
inc
dec
pop
(bad)
or
sbb
sbb
mov
or
dec
repnz
div
aad
loope
outs
adc
and
or
mov
mov
pop
test
xchg
icebp
lods
fcom
adc
cmp
mov
push
loop
(bad)
xor
fcom
xchg
mov
lods
mov
repnz
xor
dec
or
or
xor
xor
out
or
std
cmp
mov
retf
fmul
mov
lods
ja
mov
add
pop
jg
ret
mov
lods
es
dec
arpl
fstp
loope
mov
jg
je
popf
mov
and
adc
mov
(bad)
inc
or
sbb
fst
cwde
pop
jns
cmp
sub
jno
cmp
loop
mov
dec
mov
pop
int
mov
bound
dec
sbb
cmps
push
(bad)
xor
mov
jno
pop
sub
into
and
fwait
sar
in
clc
xchg
sbb
stos
into
fmul
es
jno
ret
jmp
sbb
push
mov
fs
scas
out
pop
movs
(bad)
jne
fsubr
pusha
sbb
push
cdq
imul
fst
scas
not
jle
xchg
inc
pop
jae
je
inc
jmp
repnz
mov
fidivr
push
shl
retf
icebp
and
test
hlt
dec
push
mov
jecxz
inc
nop
nop
add
daa
xchg
cmc
pop
xchg
inc
cs
leave
test
sub
fdivr
mov
xor
in
xchg
xlat
aaa
retf
pop
mov
mov
or
shr
popa
ret
add
or
loope
jmp
adc
inc
sub
out
nop
ds
xchg
mov
ja
sub
retf
xchg
xor
icebp
and
adc
mov
jge
xchg
in
js
push
arpl
data16
add
test
jae
dec
lock
push
cmps
push
outs
imul
mov
add
lods
cmp
pop
jbe
mov
sub
pop
pop
cmps
add
pop
or
xlat
lds
mov
xchg
dec
mov
jne
push
outs
loopne
jecxz
cmp
mov
dec
aam
pop
data16
popa
out
push
or
cmp
mov
xchg
popf
and
call
scas
or
jl
cwde
(bad)
js
sub
cld
lods
pop
sub
daa
movs
repnz
xchg
push
jb
(bad)
arpl
jl
mov
mov
ror
xchg
mov
add
movs
inc
cmp
xor
not
push
ror
stos
add
out
(bad)
mov
bnd
sbb
fisubr
mov
sbb
int
xor
mov
and
dec
jp
jmp
and
pop
ss
jae
push
retf
pop
ret
pusha
dec
xor
cs
cmc
dec
pop
xchg
(bad)
fcomip
(bad)
outs
or
cmp
dec
ins
call
addr16
dec
mov
lods
sbb
dec
adc
inc
lea
jge
or
iret
adc
ret
addr16
xor
mov
fld
jbe
rcr
adc
pop
aaa
mov
ret
lds
enter
(bad)
rol
and
ins
jbe
jmp
inc
jae
es
push
loope
xchg
sbb
jno
jl
sub
xor
into
fdivr
mov
push
xor
loope
aad
push
dec
ins
push
sub
xor
test
iret
test
xchg
ss
nop
out
cmp
pusha
cmp
mov
cmps
inc
and
stc
cli
jmp
jl
cmp
sub
xchg
fdiv
pop
imul
xchg
or
pop
or
leave
sub
es
mov
shl
mov
nop
adc
sbb
out
xchg
loope
sbb
add
int
pop
aaa
gs
retf
xor
or
les
xchg
shl
out
mov
fsub
xor
dec
std
xchg
pusha
xor
or
fisttp
lds
cmp
stos
push
lahf
inc
adc
ret
sbb
push
add
or
shr
jg
ins
jmp
sbb
rcr
mov
out
mov
fisttp
sahf
jp
lods
push
mov
jge
mov
add
(bad)
mov
nop
cmp
push
inc
add
sti
fnstenv
into
in
inc
dec
sbb
ds
xchg
xor
mov
inc
gs
add
ja
sub
arpl
(bad)
cmp
or
inc
je
mov
scas
or
clc
mov
jno
leave
nop
push
xchg
jb
cmp
push
enter
mov
les
pop
jo
inc
retf
jmp
or
mov
(bad)
mov
in
clc
fnstsw
retf
push
mov
cmp
add
div
ret
shr
movs
imul
adc
enter
jb
cmps
cmp
dec
cmp
jne
and
(bad)
loope
test
clc
xor
aaa
repz
test
jmp
jp
daa
sbb
cdq
std
push
sub
imul
and
retf
pop
in
xchg
cli
(bad)
xchg
sti
cmp
and
in
out
inc
cmp
add
(bad)
dec
cmp
xor
jb
out
pusha
xchg
mov
cwde
test
aad
loope
cmp
and
jg
cmp
call
neg
jae
jg
sbb
mov
cmp
mov
call
shl
repnz
xchg
or
push
inc
pop
dec
push
shl
add
push
imul
into
mov
mov
pop
in
ret
stos
xlat
cmp
scas
sub
xor
pop
into
or
fmul
outs
add
aam
push
aaa
mov
leave
jg
arpl
out
fwait
icebp
mov
lock
sbb
sub
add
mov
sub
xor
popa
cmp
mov
push
push
push
dec
ss
jmp
mov
xor
ins
in
push
adc
js
mov
fisttp
test
popa
fwait
mov
sbb
outs
lahf
(bad)
dec
arpl
lahf
jne
jmp
mov
or
arpl
jge
data16
in
xchg
or
adc
les
sbb
sub
adc
inc
movs
sub
cmp
push
adc
es
clc
js
mov
test
icebp
inc
push
xchg
aas
pusha
ficomp
loop
mov
cmps
jmp
xchg
int3
jb
inc
dec
rcl
popa
dec
xlat
add
out
cmp
jle
dec
pop
pop
pop
mov
sbb
das
ret
test
imul
push
sub
hlt
cmp
sbb
ftst
and
sbb
adc
rol
push
cmp
ror
rcr
inc
push
pop
jae
xchg
jne
xchg
dec
mov
adc
lahf
aas
dec
xor
test
push
mov
mov
(bad)
jp
push
dec
and
fisub
scas
and
xlat
imul
imul
mov
xor
out
dec
pop
outs
xchg
push
sti
sbb
inc
adc
mov
mov
aaa
(bad)
idiv
cmp
mov
loopne
pop
jo
dec
(bad)
lock
out
fst
movs
xor
xchg
xor
mov
jnp
or
cmp
sbb
cmp
xchg
adc
jg
xor
inc
arpl
movs
push
xlat
cmp
adc
sbb
cmp
mov
push
jns
xchg
in
fild
or
(bad)
cmp
leave
popf
adc
js
add
es
dec
inc
fstp
mov
in
and
das
mov
sub
adc
test
sbb
inc
js
sub
lods
das
xor
(bad)
mov
addr16
in
ds
add
rcl
push
inc
jae
pushf
xor
ss
cmp
cmp
rol
push
aam
sub
xchg
inc
sub
stc
add
(bad)
out
rcr
call
push
cs
fnsave
sub
sbb
dec
dec
inc
arpl
sub
out
and
mov
inc
push
int3
aam
mov
stc
daa
pop
mov
stos
mov
adc
in
sti
nop
inc
test
xchg
inc
mov
repz
mov
or
sub
mov
jne
icebp
sub
test
jmp
xchg
popa
ret
pop
mov
jle
clc
jecxz
jae
je
mov
push
adc
mov
mov
and
out
jmp
dec
add
aas
cmp
into
sbb
ret
jnp
push
jo
sbb
jecxz
loopne
out
jae
daa
loopne
stos
mov
push
das
adc
ror
xor
dec
or
mov
inc
mov
push
push
adc
cmp
ds
iret
sub
loope
cmp
xor
test
arpl
mov
adc
repz
dec
jp
outs
retf
cmp
enter
inc
stc
inc
jbe
jg
inc
(bad)
mov
test
inc
jg
pop
cli
(bad)
gs
xor
or
mov
mov
cs
sub
sub
pop
in
cld
sbb
sbb
les
(bad)
repz
xchg
enter
pop
clc
or
mov
cmp
icebp
xlat
out
lock
fdiv
jns
shl
xor
outs
fwait
outs
jns
arpl
aam
data16
cmp
cs
out
mov
add
pop
inc
outs
pop
xchg
sub
jg
(bad)
and
jl
and
retf
push
cmp
sub
rcr
mov
outs
xchg
jp
movs
push
nop
mov
repz
das
test
sbb
xor
xchg
(bad)
sub
push
mov
das
jns
jo
pop
sub
push
jb
(bad)
or
(bad)
out
popa
and
sub
xchg
xor
(bad)
gs
in
adc
or
cs
dec
shr
mov
inc
scas
sbb
pushf
shr
(bad)
ds
cld
outs
mov
je
out
sbb
cmp
adc
in
cmp
nop
scas
pop
adc
loopne
inc
add
push
jmp
ds
jl
jbe
test
cs
scas
sahf
xchg
pop
shr
mov
inc
dec
test
dec
mov
imul
hlt
sbb
jp
sub
push
mov
adc
movs
mov
mov
sub
jp
mov
and
push
int
test
daa
fidiv
retf
ror
shl
xor
xcrypt-cbc
cmps
adc
scas
stc
sar
push
sub
xor
aad
mov
shr
fdivr
adc
mov
cli
push
xchg
pop
movs
idiv
outs
and
sahf
push
mov
or
push
mov
sahf
mov
cmp
push
xchg
push
cmp
popa
daa
inc
mov
sbb
mov
enter
pop
sbb
mov
sub
cld
fwait
sub
pop
aas
xchg
xchg
fnstsw
(bad)
sbb
cmc
xchg
jmp
pushf
scas
call
mov
shr
pop
mov
les
pop
sub
xchg
adc
cmps
adc
(bad)
sbb
mov
pop
mov
(bad)
test
push
xchg
leave
mov
mov
out
sub
mov
jle
dec
sbb
xlat
xchg
xchg
xor
adc
lods
out
lods
sbb
sbb
(bad)
stc
cmp
mov
sub
add
or
add
cmp
icebp
mov
dec
xor
adc
aas
mov
loope
xor
fcomp
add
jo
pop
scas
sbb
fsubr
daa
xchg
sbb
pop
pop
test
push
repnz
ja
add
jecxz
mov
adc
xor
cmp
jmp
call
mov
movs
push
xchg
jle
fcmovbe
shl
test
into
inc
pop
out
scas
jb
ins
push
addr16
cmp
xchg
scas
(bad)
ds
rol
out
ss
loop
adc
call
sub
pop
mov
ret
sbb
clc
push
add
cdq
xchg
jmp
imul
pop
or
adc
not
cld
jg
jnp
mov
push
push
fdivr
imul
xor
in
mov
or
ins
fcom
jo
add
out
(bad)
jmp
stos
xchg
adc
fnstenv
and
jb
pop
inc
add
gs
sti
pop
outs
(bad)
or
daa
push
mov
mov
ret
jg
pop
add
xchg
mov
cmp
and
cmp
jl
sub
xor
add
test
sub
jle
out
enter
or
dec
imul
add
fmul
jns
sbb
mov
jmp
ret
or
jb
adc
ja
xchg
sbb
pop
int3
jns
sbb
arpl
jle
jb
mov
xchg
adc
js
adc
pop
scas
das
bound
dec
push
jbe
mov
and
xor
xchg
pop
stos
mov
jge
in
jmp
xor
and
mov
sbb
or
dec
sub
fistp
mov
int
cld
sbb
and
and
mov
sub
pop
je
lea
jb
sub
sbb
(bad)
or
xchg
lea
mov
fisttp
imul
gs
jmp
add
cmp
in
lahf
and
gs
xchg
or
call
test
xchg
xchg
gs
cmp
and
push
dec
(bad)
and
jo
cwde
push
aaa
pop
test
dec
mov
sahf
push
cld
sbb
or
(bad)
cmp
jns
dec
scas
out
sub
jp
xchg
lock
and
les
aad
sahf
arpl
jmp
adc
lock
cs
outs
jecxz
mov
sub
ror
and
mov
fidiv
cmp
push
mov
xchg
bound
cmp
mov
sub
pop
(bad)
push
js
shl
inc
push
inc
xlat
inc
add
sub
shr
int
jo
mov
jo
fisttp
test
xchg
shr
pop
fist
cmp
scas
add
mov
cmp
mov
sbb
(bad)
pop
call
ins
mov
loop
(bad)
cli
jg
inc
push
fisub
int3
popa
push
push
xor
push
xor
ret
sub
cwde
jp
stos
cmps
mov
sar
stc
lahf
mov
cmp
das
ret
out
dec
jae
sbb
fistp
jb
mov
push
push
cmps
aas
not
inc
xchg
outs
cld
daa
sbb
scas
push
adc
push
or
icebp
stos
cmp
fcmovu
adc
ret
dec
jbe
lahf
mov
out
out
cmps
push
pop
fisttp
sbb
leave
fst
retf
lds
sar
movs
inc
inc
inc
int3
inc
xchg
jnp
aas
out
add
cld
arpl
xchg
xor
inc
fadd
lods
mov
or
cs
pop
pop
xchg
in
and
xor
pop
imul
outs
push
retf
adc
mov
imul
dec
repz
xchg
loope
test
push
push
fidiv
sbb
mov
xchg
xchg
call
mov
hlt
ret
pushf
cs
scas
std
mov
pushf
ins
mov
mul
xchg
adc
xchg
sbb
les
add
out
xor
sti
shl
pop
popa
dec
adc
mov
bound
push
or
jmp
(bad)
in
jns
sub
pop
mov
jno
loopne
mov
mov
int3
pop
add
aas
pusha
imul
and
mov
cmps
scas
dec
out
mov
mov
xlat
pop
inc
mov
(bad)
pushf
pop
fidiv
retf
cmp
add
mov
mov
pop
(bad)
icebp
jae
mov
loope
and
pusha
xor
jg
pop
mov
lods
xchg
mov
out
jl
outs
std
movs
mov
and
stos
mov
push
lods
xchg
out
shl
mov
xor
inc
cmps
dec
fcom
lods
mov
clc
leave
aaa
out
and
add
lock
add
ret
cmp
fcom
outs
inc
xchg
cwde
clc
adc
repnz
aaa
mov
pop
(bad)
retf
and
dec
out
add
idiv
sar
pop
mov
or
movs
sbb
test
and
jg
out
mov
shl
pop
fnsave
ins
scas
and
xchg
pop
mov
lods
jle
dec
xor
mov
jo
pop
lock
jb
in
je
test
sbb
iret
xchg
popa
clc
ds
mov
popa
add
mov
rcr
xor
data16
cli
arpl
inc
sub
aaa
xchg
mov
and
xor
jecxz
jo
ret
jg
push
arpl
xchg
cmc
shr
xchg
sahf
mov
fs
jno
test
pop
or
jecxz
mov
mov
push
or
cmp
mov
gs
jno
cmp
stos
sub
pusha
push
add
(bad)
fist
rol
sbb
push
pusha
pop
mov
mov
push
sbb
cmc
dec
test
dec
inc
iret
jl
test
and
xchg
sahf
daa
xor
pusha
cmc
dec
sahf
jne
sbb
in
rcl
sbb
cli
inc
and
(bad)
cmp
sbb
fnstenv
cmp
aam
popa
je
push
push
sub
fs
mov
add
loopne
and
int
jp
mul
mov
shl
sbb
jg
pop
mov
(bad)
dec
call
stos
std
aas
jecxz
pop
xor
mov
scas
mov
outs
jg
or
call
pop
push
sar
(bad)
sti
pop
(bad)
lods
mov
push
add
in
data16
lock
add
pusha
xchg
pusha
jne
cmp
sbb
push
addr16
jg
call
jp
jae
(bad)
les
dec
jmp
add
mov
cmp
push
fistp
(bad)
das
dec
jae
pop
xor
nop
rcl
push
cs
mov
xchg
movs
push
mov
ds
std
and
mov
mov
lock
repnz
inc
mov
xor
push
dec
stc
cmp
xor
pop
inc
xchg
cli
movs
inc
fs
lds
and
sub
pop
mov
fcmovnb
cmp
lods
xchg
imul
daa
ja
jo
push
les
inc
mov
enter
sub
rcr
and
ficom
pop
xchg
mov
clc
xchg
int
add
mov
add
adc
pop
xchg
(bad)
shl
test
pop
pushf
mov
stc
es
mov
arpl
lahf
aam
arpl
aad
popa
lea
adc
sahf
mov
inc
test
pop
cwde
or
pop
mov
dec
test
inc
mov
aas
cmps
adc
jmp
sub
xchg
test
cmp
and
stc
mov
cmp
les
mul
aad
sbb
dec
stos
stos
mov
mov
inc
xlat
lahf
popf
je
imul
lock
jmp
fwait
inc
cli
dec
(bad)
in
cmp
pop
outs
in
adc
xchg
mov
xor
sbb
lds
cld
add
push
add
jge
xchg
cmp
xor
xor
in
jmp
jge
pop
mov
mov
inc
cs
push
or
xchg
pop
dec
mov
jne
sar
pop
nop
stc
je
popa
pusha
mov
jo
mov
ja
enter
or
inc
sbb
aam
and
das
mov
or
xchg
jl
mov
lods
jnp
mov
ins
(bad)
fistp
lods
mov
push
lahf
(bad)
mov
sbb
xor
cmc
jp
mov
ins
rol
mov
adc
mov
aaa
sti
dec
xchg
jp
push
dec
repnz
test
sbb
repz
mov
add
push
in
jnp
lock
or
loop
ja
mov
xchg
mov
out
test
sbb
jl
aad
pop
shld
xor
bound
(bad)
xlat
mov
in
mov
fidivr
out
push
daa
mov
mov
out
mov
int3
and
add
dec
sbb
repz
mov
or
dec
mov
fiadd
pextrw
scas
in
push
jno
call
addr16
xor
int
ficomp
jg
gs
adc
sub
dec
stos
lahf
mov
daa
repz
in
out
ins
sbb
pop
mov
add
sahf
xchg
xor
scas
cld
sub
xchg
mov
fxch
imul
sbb
mov
stc
repnz
push
mov
xchg
dec
adc
hlt
xor
add
adc
mov
mov
rcl
(bad)
inc
pop
bound
movs
out
movs
ds
xor
mov
iret
push
movs
ss
and
out
xor
and
outs
cmp
add
hlt
mov
and
(bad)
lock
cmp
push
cld
and
ss
mov
mov
out
dec
xor
and
movs
nop
xor
fld
test
jno
cmp
pusha
mov
fistp
lahf
test
call
lea
xchg
leave
pusha
stos
push
mov
cld
jno
xchg
xor
mov
add
es
sbb
xor
test
aam
retf
push
int
mov
icebp
xchg
ret
mov
lods
mov
sub
push
inc
ss
jg
cmp
mov
pop
xchg
xor
jl
mov
mul
out
cmp
outs
inc
xor
arpl
mov
out
data16
cmp
push
and
pop
inc
cmp
mov
and
mov
nop
sahf
mov
popf
mov
adc
and
into
fld
adc
inc
jno
mov
movs
outs
cld
ja
nop
xor
fcomp
mov
jmp
pushw
call
mov
mov
pushf
aam
and
fisttp
sbb
ret
push
call
(bad)
fdivr
dec
cmc
or
cmc
jo
es
les
ins
jl
and
iret
push
inc
dec
jae
jo
call
mov
push
out
std
ins
cmps
call
ror
imul
add
jns
adc
retf
and
ss
adc
push
xchg
outs
inc
stc
or
(bad)
sbb
adc
arpl
xor
outs
call
push
fld
es
add
dec
xor
mov
mov
in
(bad)
in
sbb
test
cmp
xor
sub
jg
mov
fwait
daa
call
xor
mov
mov
pop
cdq
enter
inc
sub
or
dec
mov
rcl
push
inc
xchg
pusha
je
(bad)
jns
fs
pop
pop
xchg
mov
(bad)
movs
sub
or
fild
and
dec
push
lods
cmp
cs
scas
repnz
sbb
icebp
and
aas
out
dec
mov
jp
out
scas
out
inc
out
jbe
retf
sbb
jmp
les
aaa
and
sub
out
push
cld
fsub
ins
jns
loop
add
neg
jge
fisttp
add
repz
mov
jp
aam
out
inc
pop
lods
dec
int3
repnz
popf
iret
push
mov
adc
inc
push
push
clc
mov
push
pop
(bad)
push
jb
sbb
push
sbb
fwait
cwde
jnp
(bad)
leave
std
call
xor
add
dec
enter
push
rcr
adc
cmp
lock
mov
cs
or
dec
iret
movlhps
ins
xchg
sar
arpl
test
mov
call
movs
mov
cli
cli
and
push
cdq
in
(bad)
mov
xchg
cmp
push
xchg
cmp
inc
cs
ins
(bad)
sti
fwait
scas
aas
mov
xor
xchg
or
sub
shl
je
dec
sti
jno
pop
jae
iret
rcr
movs
adc
stos
loope
pop
mov
std
pop
jae
dec
cli
jg
loope
jo
mov
xor
std
mov
out
push
push
into
pop
push
cdq
mov
fwait
mov
repz
mov
(bad)
add
sub
xlat
xchg
push
adc
or
sbb
inc
outs
xor
sar
fs
mov
mov
popa
push
retf
add
jns
pop
push
jmp
mov
cwde
push
jecxz
dec
or
stos
js
sahf
ret
push
in
jae
loopne
jl
jbe
(bad)
push
or
out
hlt
xchg
loope
or
mov
fldenv
push
push
fadd
in
and
test
ja
mov
mov
pop
cmp
(bad)
in
out
push
ret
or
jno
in
fs
(bad)
pop
cmp
in
sbb
or
adc
mov
rol
sub
sub
(bad)
call
add
dec
stos
retf
aas
iret
icebp
scas
jge
mov
mov
neg
mov
mov
sub
xor
push
call
inc
xchg
addr16
mov
in
add
fild
fcomp
adc
dec
adc
dec
into
xchg
push
outs
pushf
js
test
jg
cmp
out
mov
(bad)
retf
call
fidiv
push
dec
inc
sbb
ror
stos
(bad)
jno
lods
cmps
mov
mov
jmp
pop
loop
sub
loopne
sahf
lock
mov
or
pop
(bad)
icebp
mov
int3
fnstenv
aas
clc
cmp
shl
out
jmp
in
push
adc
sbb
xor
xchg
into
lods
out
(bad)
fiadd
in
or
and
jnp
dec
(bad)
loope
ins
or
lods
pop
or
ror
xlat
(bad)
jno
retf
sbb
sub
adc
(bad)
cwde
leave
sub
dec
std
addr16
cmp
inc
xor
push
or
jns
dec
xchg
push
push
pop
and
sbb
jns
(bad)
xlat
test
pop
and
(bad)
(bad)
test
pop
out
mov
mov
call
ss
add
(bad)
jb
pop
int3
adc
lods
adc
mov
xchg
loop
dec
add
and
jl
push
cmp
sbb
xchg
xor
ss
mov
push
fcomp
lods
cmp
jne
inc
fisttp
mov
jl
ins
mov
xor
pusha
sbb
cmp
mov
cmp
xor
jmp
jg
pop
lods
mov
out
ds
push
inc
mov
daa
xchg
mov
int
loop
jge
xor
cvtps2pi
outs
daa
shr
xchg
cmp
and
test
ds
test
dec
push
jnp
push
(bad)
sti
into
mov
mov
test
stc
jne
mov
dec
sub
or
push
clc
add
jl
inc
xchg
or
xchg
dec
scas
xor
and
sahf
aam
and
cmp
sbb
iret
mov
jmp
push
je
and
je
sbb
cmp
mov
sti
(bad)
stos
dec
out
and
in
push
dec
jmp
xchg
xchg
loopne
cmp
pop
stos
cmp
mov
jle
(bad)
jnp
cmps
push
cmp
fisttp
(bad)
jmp
push
push
sbb
dec
hlt
cmp
cmp
dec
mov
jp
jns
xchg
stos
loop
mov
pop
enter
or
bnd
dec
dec
fcmovnb
jecxz
movs
pop
(bad)
(bad)
addr16
dec
xor
dec
(bad)
loopne
pushf
pop
xor
or
pop
es
rcr
nop
add
cmp
cwde
cmp
add
cld
xlat
push
mov
lock
rcr
arpl
inc
cmp
push
pop
jo
fcomip
or
out
mov
add
lock
outs
mov
mov
pushf
(bad)
mov
out
(bad)
and
pop
loop
cld
pop
in
dec
ret
(bad)
ja
loope
movs
pop
imul
push
test
leave
addr16
xor
pop
jle
imul
std
xor
mov
push
in
das
push
add
mov
pop
mov
scas
jl
xor
push
outs
fist
fisub
inc
std
mov
test
jp
out
sub
lods
mov
out
lahf
dec
mov
inc
shl
sbb
scas
sbb
pop
adc
push
push
xchg
shr
fstp
and
pop
sbb
mov
leave
lock
sbb
out
test
pop
inc
cs
inc
out
cmps
pop
push
iret
icebp
dec
mov
lahf
or
stos
jae
mov
adc
stos
shr
(bad)
mov
dec
pop
dec
or
fs
shl
(bad)
gs
jg
mov
pushf
pop
std
scas
mov
dec
mov
mov
pop
iret
(bad)
(bad)
jge
jle
adc
sub
mov
adc
xor
sar
xchg
sbb
inc
(bad)
arpl
jp
test
setle
cmp
ss
int3
dec
pop
out
jbe
dec
inc
dec
ret
test
fist
sub
sbb
xchg
pop
(bad)
shr
(bad)
aam
ja
xchg
loop
call
(bad)
push
add
mov
mov
jge
add
pop
shl
dec
xor
jmp
xor
mov
mov
and
hlt
xchg
and
(bad)
jp
cmp
loopne
mov
fnstcw
and
xor
sahf
pop
mov
pop
push
cmps
fwait
loop
into
imul
out
adc
dec
pop
xor
sbb
sub
lds
outs
mov
mov
out
add
popf
scas
and
addr16
repz
jecxz
add
test
mul
fldcw
sahf
pop
sub
xor
pop
arpl
(bad)
pop
or
retf
into
pop
and
adc
jle
add
(bad)
std
clc
mov
movs
fisub
in
mov
sub
adc
fdivp
leave
push
mov
popf
lahf
and
mov
pop
mov
js
add
jmp
jo
and
into
dec
and
push
lds
scas
xor
fstp
fist
mov
push
mov
inc
dec
pop
aas
ret
stc
je
xchg
add
xchg
or
mov
and
pop
sbb
sub
ins
mov
xor
or
jbe
jb
es
mov
sbb
xchg
sahf
imul
mov
loope
(bad)
mov
jo
sub
sahf
sbb
mov
jmp
pop
add
iret
push
cmp
and
fdiv
dec
adc
jle
mov
sbb
pop
ss
mov
mov
xor
lea
(bad)
mov
jo
pop
dec
cwde
stos
stos
mov
dec
sub
(bad)
fwait
inc
in
xchg
jne
fisubr
xchg
mov
fadd
fwait
push
xor
mov
imul
sub
jo
inc
pop
cdq
cmp
mov
(bad)
fdiv
frstor
jmp
pop
and
nop
aam
ficom
xor
sbb
into
sub
mov
es
mov
pop
dec
arpl
jo
adc
mov
pop
add
scas
mov
addr16
xor
shr
stos
pop
mov
mov
repz
mov
popf
ror
cmp
cmc
xchg
pop
xchg
jb
xchg
inc
add
mov
xor
fld
push
jmp
retf
cmc
cmp
or
fsub
or
aad
imul
(bad)
lods
jecxz
je
inc
rcr
stos
push
les
jns
jb
fnsave
mov
imul
pusha
jnp
(bad)
fmul
jae
dec
jmp
or
dec
cld
jge
sub
(bad)
(bad)
mov
push
call
push
xchg
test
in
sbb
nop
cmp
or
retf
or
data16
retf
pushf
cmps
xchg
scas
inc
jae
mov
push
xor
ret
or
lock
xchg
pop
outs
jae
pop
test
and
lahf
scas
sbb
cld
mov
adc
cmovno
aas
push
idiv
or
mov
cs
sbb
xchg
adc
seto
lock
mov
jae
sbb
shl
stos
pop
and
sub
(bad)
retf
sbb
or
sbb
aam
stc
or
sbb
retf
shl
int3
test
xchg
adc
or
push
mov
and
xchg
mov
out
pushf
push
jns
xor
xchg
xchg
and
pop
mov
dec
pop
and
loop
ins
pmulhw
lods
or
mov
xlat
aas
push
xor
outs
adc
jmp
ror
imul
xor
adc
xchg
fisttp
sbb
adc
jmp
jge
cmps
(bad)
mov
pop
repnz
and
scas
pop
dec
rcl
repz
test
mov
adc
aas
dec
aam
jne
call
pop
adc
xchg
icebp
jecxz
or
jecxz
sbb
data16
inc
jecxz
jmp
sahf
sahf
mov
pop
mov
jle
loop
fdivp
cwde
(bad)
pop
mov
jns
mov
xor
add
and
popa
mov
loop
jecxz
mov
fidivr
mov
sbb
cmp
fwait
dec
mov
inc
mov
rol
mov
xchg
clc
sbb
imul
sbb
rcr
push
xchg
xchg
and
imul
pop
cmp
aaa
sti
mov
ficomp
cli
and
push
push
xor
jb
sbb
loopne
lds
or
jmp
jmp
push
xchg
push
push
leave
inc
xorps
xchg
hlt
dec
sahf
cdq
push
daa
jae
scas
pop
dec
sub
push
cmp
xchg
ds
sub
pop
pop
iret
int
cmp
retf
out
mov
xor
iret
cmps
jg
mov
sub
gs
clc
inc
iret
push
xchg
mov
int
pushf
ret
mov
pushf
les
push
pop
sbb
(bad)
ds
xor
popa
mov
inc
or
xchg
lds
inc
retf
push
xchg
(bad)
push
jae
ja
ja
divps
inc
scas
jne
mov
pop
fdivr
jecxz
fsubr
pop
mov
adc
scas
and
ja
push
xchg
push
inc
dec
inc
or
xlat
fistp
pop
daa
ret
mov
fwait
(bad)
mov
add
mov
ins
dec
jne
cmp
leave
sbb
add
sahf
cmc
ret
cmp
jp
inc
lock
fiadd
shl
pusha
sbb
xchg
je
enter
test
test
(bad)
or
push
push
add
jne
loop
imul
cdq
mov
xchg
mov
xchg
xchg
cmp
(bad)
aam
or
sub
leave
sub
xor
pop
inc
dec
push
xchg
hlt
cs
(bad)
clc
xlat
in
int3
jo
adc
xchg
or
cmp
and
rcr
mov
sbb
jnp
jp
(bad)
data16
xlat
inc
jb
enter
mov
xchg
fwait
dec
and
(bad)
std
ins
and
ret
out
sahf
dec
mov
ret
or
cvttps2pi
cmps
call
rcr
call
movs
add
mov
idiv
rcl
xchg
adc
int
arpl
jle
cmc
ins
sbb
mov
test
enter
mov
pusha
call
xor
dec
mov
dec
xlat
lods
test
pop
call
ins
jmp
outs
pushf
(bad)
push
(bad)
mov
mov
push
sub
cwde
in
jns
and
ja
sahf
sbb
sub
inc
int3
jmp
stos
mov
add
pop
mov
outs
lods
xchg
imul
fimul
pop
stos
shl
xchg
mov
or
js
ins
dec
aas
jl
inc
cwde
loope
or
enter
cmps
ret
push
add
popf
loope
xor
(bad)
mov
cmp
mov
std
xchg
sbb
xor
push
fldenv
sub
sub
add
pop
shl
and
xchg
cmp
jmp
pushf
adc
mov
push
movs
xor
dec
pop
cdq
xchg
mov
je
rcr
jge
pop
and
arpl
jb
or
pop
sahf
cmp
ret
int
xchg
cwde
cmc
cld
idiv
(bad)
sbb
data16
mov
(bad)
das
xor
sbb
xchg
lock
and
sub
xchg
shl
mov
(bad)
xor
and
stos
jb
pop
lods
xchg
mov
mov
dec
fisub
jns
and
jp
scas
shl
pop
cmp
mov
pop
outs
shr
push
mov
pop
daa
and
jp
mov
out
xchg
push
lahf
imul
ins
jno
inc
test
idiv
mov
dec
mov
push
scas
shl
cld
movs
psrad
fdivr
dec
stos
fidivr
push
(bad)
inc
call
lahf
dec
pop
shl
inc
pop
arpl
int3
xchg
pop
dec
movs
(bad)
andnps
popa
xchg
das
clc
and
xor
lods
push
cdq
fadd
es
add
inc
pop
int3
jle
sub
jp
pop
dec
ja
jecxz
movs
retf
pop
push
ins
pushf
movs
mov
inc
scas
int
xchg
sbb
push
(bad)
ficom
cwde
xchg
jp
jecxz
imul
xor
test
mov
sub
loop
xor
arpl
sub
iret
movq
pop
popa
push
xchg
shr
mov
sbb
ficomp
jge
mov
lahf
jmp
dec
sahf
add
loope
jae
js
(bad)
cld
ret
sub
rcr
mov
sbb
inc
div
cmp
cmp
test
push
repnz
jecxz
dec
out
adc
sbb
mov
call
xchg
or
mov
push
fldcw
jnp
pop
mov
(bad)
mov
xchg
jg
mov
and
xor
add
(bad)
test
ins
cli
out
push
shl
sub
xcrypt-cbc
cmps
xchg
nop
test
(bad)
push
out
push
retf
mov
jne
shl
stos
fnstsw
loop
mov
ret
xor
fimul
popa
shr
scas
cmps
push
dec
lods
adc
inc
cli
loop
mov
mov
push
and
arpl
and
jbe
ins
push
push
pop
add
adc
push
mov
jne
xchg
sub
fld
xchg
mov
test
jp
movs
jge
pop
popa
xor
push
mov
sti
or
inc
(bad)
(bad)
fidivr
mov
in
iret
aam
mov
xchg
stos
jno
pop
sub
test
popa
xchg
jge
les
retf
jecxz
clc
adc
in
imul
mov
inc
mov
repz
push
pusha
jbe
(bad)
mov
cmp
mov
or
sbb
sbb
ss
daa
pop
adc
mov
test
or
fld
aad
ds
dec
and
sub
scas
and
mov
push
mov
ret
jp
pusha
sub
repz
dec
call
dec
mov
or
sbb
cmps
mov
jns
data16
les
push
aas
popf
and
retf
jmp
into
retf
mov
adc
add
mov
adc
adc
cmp
nop
jle
jl
sbb
or
in
add
xor
xor
xchg
retf
adc
jg
mov
in
stos
jecxz
popa
fsubr
(bad)
inc
aaa
fs
stos
push
xchg
xor
pop
daa
xlat
mov
mov
cdq
ficomp
clc
arpl
daa
scas
sub
jmp
arpl
in
or
es
cli
push
pop
jge
xor
lods
xor
sbb
jmp
lds
in
cli
dec
call
adc
dec
mov
or
imul
imul
mov
(bad)
cdq
shr
cli
mov
inc
call
lock
(bad)
fimul
and
pop
dec
sbb
adc
test
int3
jmp
jno
jae
inc
call
jmp
loope
push
icebp
push
inc
jno
test
out
test
movs
fsubr
in
test
add
pop
add
into
jp
fmul
mov
sbb
xchg
jle
aaa
leave
and
cdq
jo
ret
out
and
xor
sahf
pop
jmp
cli
cmp
mov
dec
mov
scas
js
sub
sbb
fidiv
pop
mov
push
movs
sbb
cmp
nop
cmp
bound
mov
push
loopne
mov
daa
ja
aaa
test
cdq
mov
cmp
mov
por
dec
fdivr
fs
mov
daa
repnz
dec
fld
(bad)
mov
xor
mov
movs
mov
mov
and
shr
nop
dec
xchg
in
jmp
pusha
mov
add
pusha
stos
into
and
sar
cmp
jg
icebp
inc
aam
jno
push
shl
mov
mov
sbb
daa
cdq
mov
sub
adc
cwde
sub
call
adc
add
jno
cmp
xor
movs
ret
fstp
cdq
mov
pop
aam
fsub
cmc
xchg
mov
in
popa
popf
fwait
pop
dec
nop
call
mov
repz
cmp
das
or
not
ffreep
retf
stos
int
lock
or
adc
sbb
mov
loope
in
cmc
hlt
or
jne
mov
jns
cdq
sti
sub
push
xor
mov
fnsave
sub
repz
test
xor
dec
push
jge
and
push
in
mov
ret
je
pop
in
popa
push
call
mov
scas
mov
jg
retf
jae
fld
ss
pop
shr
cli
gs
mov
test
aam
pushf
loopne
or
pushf
mov
stos
jnp
and
mov
ss
lahf
daa
into
inc
mov
fld
or
fdivr
pop
sbb
cmps
add
mov
das
imul
jnp
(bad)
pop
fdivr
out
lods
adc
(bad)
fimul
clc
or
pop
lods
stos
loopne
cs
add
add
sub
int
jb
pop
push
pushf
je
popf
sbb
sub
retf
jge
adc
pop
movs
push
in
pop
es
sub
stc
mov
jp
xchg
idiv
push
(bad)
add
(bad)
scas
xchg
das
sub
aad
jle
daa
xchg
cmc
xor
sahf
cwde
(bad)
xchg
and
(bad)
and
push
aam
xchg
xor
xchg
xchg
and
dec
loop
iret
or
xchg
add
xor
or
jmp
add
out
cmpps
cwde
dec
push
adc
adc
or
rol
jno
jle
mov
inc
cwde
jmp
mov
jnp
inc
nop
(bad)
mov
and
(bad)
(bad)
jb
adc
stos
sbb
dec
fisubr
push
ss
sti
out
inc
xor
jmp
adc
or
std
push
loopne
pushf
movs
sahf
div
cmp
pop
mov
or
jnp
xchg
sahf
jns
xlat
and
cli
repz
fnop
es
jmp
cmc
jl
mov
mov
and
test
jmp
sub
out
in
or
and
or
imul
repnz
(bad)
in
xchg
call
int
ret
sbb
fisttp
or
jle
pop
outs
outs
push
inc
dec
add
clc
sbb
scas
sahf
mov
int3
and
xlat
and
push
in
or
sti
and
xchg
loopne
movs
gs
fistp
ror
jge
pop
pop
les
sbb
push
stos
(bad)
sub
mov
jmp
xchg
(bad)
and
nop
dec
gs
aas
scas
add
hlt
sti
jg
int3
fidivr
jno
addr16
aam
sub
imul
scas
fdiv
inc
add
add
iret
sub
jo
add
je
fsubr
jmp
jg
(bad)
and
sub
test
shl
stc
inc
sbb
(bad)
ins
xchg
std
iret
sub
sub
mov
int3
cmp
arpl
retf
out
ja
xor
xchg
jecxz
mov
loope
clc
add
lock
push
dec
mov
push
jns
cs
call
daa
outs
mov
and
call
sbb
jo
retf
aam
cmp
aam
push
add
push
gs
lock
push
test
test
popf
stc
sbb
call
xor
cli
push
(bad)
daa
xchg
cmps
xor
jns
ror
fidivr
loope
mul
mov
or
movs
addr16
push
adc
outs
mov
cmp
ror
lahf
push
pop
sbb
sub
fwait
repnz
retf
xchg
loopne
pop
dec
jg
mov
dec
std
jns
dec
push
jg
xor
adc
cmp
sub
xor
xchg
xor
loop
dec
add
xor
jae
sub
jb
pop
test
(bad)
aaa
rcr
sbb
std
lods
push
xchg
mov
push
push
fimul
add
aas
cmp
sti
sub
fs
(bad)
fbstp
dec
dec
push
adc
cmp
js
je
adc
sbb
mov
or
repz
loope
push
cmp
jg
fisubr
je
lods
mov
and
xchg
mov
push
es
cmps
jne
push
jo
sbb
push
fmulp
and
push
pop
mov
and
add
(bad)
cdq
xor
or
adc
into
adc
sub
inc
sar
scas
mov
xor
mov
cmps
sub
inc
sub
mov
stc
cdq
jmp
cs
mov
pop
aam
cdq
jb
arpl
shl
mov
jg
adc
adc
scas
mov
gs
dec
cwde
(bad)
(bad)
fwait
pusha
sbb
jmp
loop
shr
inc
stos
mov
pop
lock
lods
adc
sbb
(bad)
call
sbb
stos
push
cmc
xchg
mov
je
popf
and
or
fcomp
(bad)
test
pop
jge
lds
popa
xor
cmp
std
or
ins
enter
push
retf
shl
es
ficomp
xchg
fbstp
push
sub
jl
dec
push
xlat
mov
and
(bad)
jae
adc
cmp
mov
jns
pop
sbb
or
pop
push
push
xchg
das
and
push
scas
adc
dec
jns
fs
es
pop
fimul
xchg
mov
mov
bound
test
cmps
mov
out
repz
push
pop
in
mov
repz
outs
adc
fbstp
jg
aad
add
dec
jb
test
jb
xor
lahf
out
jno
xor
push
xor
jmp
push
loopne
imul
push
sub
in
lods
mov
and
adc
fistp
jb
dec
push
pop
lahf
call
shl
mov
je
jmp
shl
jle
cli
mov
mov
rol
mov
test
dec
neg
push
fnstsw
cmc
lods
inc
(bad)
lock
loopne
mov
or
das
adc
(bad)
es
jbe
loop
dec
mov
ret
mov
in
xchg
mov
mul
clc
dec
fdiv
adc
push
dec
(bad)
aaa
fs
cmp
out
mul
daa
adc
mov
mov
int
jo
repnz
pop
mov
inc
adc
pushf
ss
fisub
(bad)
and
shr
(bad)
adc
mov
push
inc
pushf
adc
pushf
pushf
xchg
sub
mov
xchg
inc
or
inc
or
popa
(bad)
lds
(bad)
not
stos
lods
push
out
jmp
dec
push
loope
mov
leave
cmp
mov
lock
test
pop
xor
mov
les
hlt
mov
push
and
inc
inc
xchg
pop
mov
clc
adc
mul
pusha
mov
jno
xchg
jmp
xor
lods
in
hlt
cmp
or
jo
mov
mov
and
ror
pop
jl
leave
inc
sbb
sbb
push
jecxz
(bad)
aad
movs
bound
cdq
in
sar
in
adc
test
fs
inc
popf
jbe
lds
stos
sub
sub
je
out
enter
scas
mov
dec
sbb
ror
mov
mov
sbb
xor
(bad)
xchg
jbe
xchg
leave
sbb
or
ja
in
sti
mov
dec
and
into
sub
xchg
and
lea
mov
sub
mov
fs
sbb
cmps
cmp
ret
pop
xchg
les
push
fcomp
not
pop
jecxz
and
outs
mov
xor
test
dec
xchg
(bad)
dec
test
(bad)
push
adc
cwde
adc
hlt
(bad)
push
sbb
loopne
push
cmps
cmc
push
and
pop
movs
lea
pusha
mov
push
loopne
push
mov
and
cmps
adc
push
sbb
mov
test
iret
jnp
add
cmp
jge
sti
dec
ret
mov
movs
data16
sub
stos
mov
retf
sub
test
outs
inc
retf
cwde
push
pop
lods
arpl
lods
xor
call
jns
jp
(bad)
outs
dec
(bad)
jo
push
cmc
int
jge
push
inc
adc
ss
mov
cmps
lea
add
mov
loopne
cmp
int
out
mov
dec
mov
or
mov
dec
int3
push
add
ret
or
jmp
fmul
sub
and
or
outs
hlt
cli
dec
mov
cmp
jle
mov
movs
je
mov
shl
ins
loopne
scas
fidiv
fisubr
test
cwde
mov
aad
or
aad
ins
mov
out
adc
sbb
pop
jb
mov
stos
imul
fs
enter
js
fldenv
pop
aad
cmc
inc
add
icebp
dec
dec
mov
ror
(bad)
std
sub
icebp
clc
int
or
push
(bad)
cmc
rol
mov
or
(bad)
clc
sub
or
pop
sub
mov
scas
xlat
or
clc
outs
dec
and
adc
cli
add
inc
out
dec
lods
fstp
and
pop
mov
mov
je
test
mov
mov
jecxz
retf
pop
retf
sti
cli
in
jmp
ins
mov
lods
lods
cmp
retf
(bad)
rcl
sub
cwde
dec
jle
fstp
js
(bad)
cmp
dec
lods
mov
sub
shl
inc
inc
add
call
sbb
add
mov
sbb
fwait
popf
pop
mov
cld
or
xchg
out
sahf
xchg
cdq
mov
faddp
(bad)
sbb
rol
loope
es
mov
push
adc
and
adc
push
rol
adc
das
enter
xor
dec
dec
cwde
or
ja
mov
es
inc
fsub
xor
add
jg
mov
dec
mov
jo
cs
xor
mov
adc
das
mov
pop
shl
push
mov
inc
or
popa
inc
out
fadd
popf
lea
adc
mov
or
leave
jg
ret
jge
bound
ja
sbb
push
push
stos
cmps
in
sub
popa
mov
test
ss
popa
mov
pushf
lds
cmp
or
cdq
add
jb
dec
xlat
add
fistp
fwait
xlat
test
xor
pop
pop
cli
mov
pop
jl
pop
aas
cmp
(bad)
jle
(bad)
cmp
inc
inc
mov
xchg
mov
xchg
xor
loop
cmp
jae
mov
fmul
mov
bound
enter
jl
mov
cmps
or
sub
mov
pop
in
and
mov
add
mov
mov
pop
sub
in
cli
inc
or
in
and
add
cmc
into
xchg
ins
lods
push
adc
sub
sub
stc
int
sti
hlt
push
sbb
paddw
mov
in
mov
inc
pop
fisttp
repnz
imul
sbb
and
retf
and
sub
jg
mov
jnp
(bad)
jae
mov
xchg
(bad)
sub
pop
shr
aad
jmp
cmp
cs
jg
jne
fs
fild
popa
repz
inc
ss
rcl
jns
movs
popf
(bad)
call
call
retf
push
push
adc
pop
adc
pop
call
bound
mov
push
aam
or
in
mov
add
(bad)
(bad)
lods
out
and
pop
push
int
xor
push
xchg
cmc
fcmovu
mov
sub
xchg
mov
in
dec
push
cmp
add
push
int3
aaa
arpl
mov
adc
imul
jnp
fwait
push
loop
pop
in
hlt
or
sub
xchg
scas
sub
or
cmp
retf
sbb
in
mov
sub
jns
ins
scas
jl
icebp
je
pop
scas
xchg
gs
xchg
mov
cmps
(bad)
shr
push
fstp
int3
cs
or
out
repnz
sbb
jns
jl
(bad)
push
adc
xchg
bound
mov
neg
jp
gs
inc
jle
in
outs
jge
aaa
dec
repnz
mov
movs
push
mov
test
inc
inc
int3
sub
stc
jecxz
(bad)
in
or
pusha
daa
je
lods
xchg
pop
ror
fmul
inc
mov
mov
jb
std
stos
clc
(bad)
data16
js
enter
call
inc
and
sbb
clc
nop
xlat
cmp
sbb
(bad)
cmp
movs
dec
mul
lods
test
inc
mov
std
scas
cwde
xor
or
mov
push
mov
ror
in
inc
sbb
dec
cmp
sub
push
mov
sub
shl
popaw
mov
icebp
xor
xchg
stc
inc
fdiv
push
dec
std
call
mov
addr16
not
mov
cmp
push
jo
dec
outs
out
jmp
xor
ins
mov
gs
xor
mov
xchg
jl
cmps
inc
xchg
xchg
and
inc
jbe
pop
mov
dec
loope
(bad)
cmps
ds
pop
ds
mov
jnp
std
jo
fwait
cmp
ror
push
cmps
inc
xor
aam
mov
inc
test
out
pop
or
movs
jmp
dec
and
xchg
jl
dec
jmp
mov
sub
outs
dec
jmp
add
jae
mov
cmps
sbb
add
mov
jmp
test
mov
retf
dec
or
inc
shl
mov
pop
stos
out
ret
dec
jle
out
add
aaa
dec
mov
push
push
(bad)
and
xor
les
imul
es
mov
add
xchg
jmp
jnp
inc
pop
test
mov
fcmovu
push
mov
jae
xchg
movs
in
cmps
mov
xchg
out
jmp
cs
push
int
out
scas
mov
sbb
pop
xor
ins
mov
test
scas
xor
imul
jne
jl
ins
mov
movs
jo
cs
repnz
mov
fs
push
xor
mov
in
mov
lahf
push
mov
and
out
cmc
mov
div
adc
sub
sub
mov
xor
add
mov
push
xchg
mov
imul
(bad)
and
inc
xor
pop
xor
sar
imul
fcomp
fidiv
cmps
(bad)
xlat
push
mov
ror
dec
push
std
scas
and
in
and
fidiv
mov
rcl
or
sub
pop
retf
cmp
cmp
(bad)
cli
mov
cmp
sub
sub
push
stos
test
inc
arpl
or
jl
cwde
movs
jnp
xor
popa
fsub
mov
mov
sbb
arpl
scas
int3
scas
inc
jg
sti
rol
add
jp
cs
daa
nop
repz
fmul
call
cwde
cmps
mov
pop
(bad)
in
shl
xchg
(bad)
mov
push
shl
loope
add
cmp
rol
out
loope
ret
data16
dec
mov
add
dec
iret
sar
mov
inc
xor
sub
jle
ret
inc
inc
sub
hlt
push
jne
sub
cmp
cmp
loopne
lods
xchg
and
sahf
adc
dec
jge
inc
in
mov
xor
(bad)
pop
sti
js
xchg
(bad)
in
ja
icebp
inc
stos
in
ja
dec
rcr
out
mul
xor
sbb
add
inc
dec
pop
jo
clc
sub
inc
idiv
adc
xchg
(bad)
fdivr
sub
imul
call
jo
dec
jbe
mov
push
repnz
xchg
mov
adc
popf
ins
arpl
xor
mov
retf
and
fidiv
pop
jp
repz
pop
push
retf
jae
fistp
inc
push
mov
dec
inc
popf
outs
xchg
pop
ins
cli
fcmovbe
lods
jle
js
dec
stos
(bad)
sub
inc
sub
adc
leave
jl
aas
or
rcr
jb
retf
dec
loop
xor
jmp
fadd
pusha
int
mov
mov
xchg
pushf
add
or
adc
popa
das
jno
pop
sbb
push
push
inc
sbb
push
mov
mov
sti
test
cld
and
test
mov
arpl
inc
ins
scas
and
ror
movs
and
cmp
push
loope
xchg
les
ret
lock
push
xor
xchg
loop
add
loope
and
or
outs
pop
sbb
mov
loop
add
jmp
(bad)
call
cmc
jmp
push
out
repnz
stos
rcl
inc
jmp
outs
js
dec
js
xor
xchg
mov
inc
pop
pusha
sub
test
xchg
dec
xchg
jno
je
xor
mul
cmc
add
push
push
popf
cmps
cmc
cld
inc
jbe
push
push
pop
retf
lahf
xor
push
xchg
inc
sub
daa
xlat
div
inc
sbb
imul
test
(bad)
cmps
mov
xor
pop
adc
mov
scas
cdq
loopne
cmp
repz
xchg
xchg
and
jno
sub
in
or
repnz
inc
and
sub
mov
dec
aas
lods
sub
scas
dec
xor
mov
lods
xor
dec
push
ins
cmps
pop
pushf
xor
jno
jg
or
cmc
pop
rol
or
or
stos
xor
das
mov
in
lahf
and
rcr
pop
aaa
into
push
out
ds
lods
fidiv
ds
test
mov
mov
dec
enter
or
pop
sub
or
gs
inc
in
xor
sub
dec
jmp
mov
jno
mov
in
cmp
js
sbb
enter
or
cld
repz
xlat
mov
loop
cmps
xlat
test
adc
nop
ret
rcl
cmp
mov
in
pop
das
push
add
aad
inc
sbb
mov
retf
inc
push
addr16
leave
movs
lock
imul
sti
dec
mov
xchg
out
ficom
outs
mov
enter
sub
cmp
and
and
mov
lahf
lods
in
xchg
adc
mov
cld
cli
fsub
cmps
es
sbb
push
cmp
retf
mov
imul
mov
scas
add
inc
or
call
jmp
add
imul
mov
mov
jb
in
mov
xor
jg
fmul
rcr
into
imul
and
cli
test
(bad)
lock
cdq
cmp
adc
jo
mov
dec
mov
repnz
lahf
mov
add
imul
lock
sub
xchg
or
loope
sub
jne
sub
push
in
hlt
and
inc
(bad)
retf
fiadd
jae
inc
adc
jmp
pop
mov
int
out
jecxz
or
pop
xchg
sar
in
hlt
mov
cdq
mov
push
mov
or
adc
jne
pop
pop
je
and
sub
out
mov
sar
adc
repz
in
repnz
test
lock
imul
push
mov
jecxz
mov
mov
mov
addr16
out
adc
sbb
stos
xchg
add
sub
fcmovnbe
je
idiv
inc
popa
popf
cwde
js
jecxz
rol
xor
outs
mov
inc
cmp
lds
dec
mov
mov
cmp
cmp
test
jb
std
adc
in
xchg
mov
ja
add
ds
ret
les
scas
push
in
cld
mov
test
sub
call
(bad)
xor
stos
cmc
daa
lods
call
bound
or
and
inc
mov
inc
imul
int
sbb
dec
out
dec
mov
mov
loop
pop
or
cld
sar
mov
xor
push
retf
call
pop
adc
lods
adc
(bad)
in
jae
(bad)
in
gs
out
or
shl
push
xchg
mov
aad
test
sahf
jle
fwait
dec
xor
xchg
jecxz
sti
je
cs
rcr
ret
mov
pop
sub
dec
aaa
cmp
pop
das
pop
mov
fs
outs
cmp
lods
ins
into
bound
jl
pop
das
rcr
cmp
pop
jle
aad
es
dec
mov
mov
pop
in
xlat
mov
jle
sbb
pop
shl
lea
pop
xor
sub
dec
mov
mov
inc
leave
repnz
and
ja
jg
test
and
mov
es
sbb
sti
add
jp
fldenv
inc
adc
iret
pusha
clc
jle
or
sub
clc
mov
mov
mov
cmp
out
(bad)
cs
fnstcw
fisubr
jo
and
(bad)
in
dec
dec
mov
mov
and
popa
fbstp
dec
push
cmp
popf
out
sbb
shr
add
and
or
movs
enter
popa
add
addr16
add
adc
data16
in
inc
xchg
shl
push
xor
loopne
lea
xor
xchg
in
xor
outs
xchg
pop
inc
add
mov
jge
mov
ds
mov
cli
inc
push
iret
ret
push
mov
repnz
mov
shl
add
iret
rol
xchg
aam
retf
pop
retf
loop
xchg
add
add
lds
jb
or
out
test
and
nop
jns
rcr
dec
mov
or
in
cli
push
repnz
jmp
push
retf
arpl
push
jae
pusha
jae
gs
add
sub
inc
sbb
jne
dec
dec
data16
(bad)
cmp
scas
cdq
inc
cmp
iret
repz
in
xchg
repnz
inc
fdivr
aam
or
popa
out
or
es
xor
or
shl
shr
sti
and
cli
mov
push
xchg
push
add
retf
bound
push
add
jl
pusha
lds
fstp
loope
sti
repnz
jmp
dec
xor
adc
or
and
shl
push
push
out
jbe
or
xor
pop
add
bound
retf
cs
cmp
imul
daa
jmp
shr
sub
adc
sbb
xchg
inc
push
push
dec
sub
and
xor
adc
nop
iret
pop
rcl
pop
mov
jb
sbb
enter
outs
sbb
jo
pushf
pop
cmc
pop
imul
mov
pop
lds
lds
push
mov
or
jo
push
popf
mov
cwde
fs
inc
sub
movs
cmp
outs
sub
mov
in
(bad)
and
aam
sar
inc
cli
inc
adc
sub
fsub
mov
je
jmp
push
mov
mov
push
jnp
mov
xchg
aam
arpl
data16
cmp
adc
jno
or
stmxcsr
jmp
mov
addr16
ficom
inc
outs
mov
stc
cmp
cwde
xchg
mov
dec
sub
out
mov
sbb
cmp
les
sbb
add
xchg
fidivr
xchg
adc
(bad)
jmp
outs
xchg
dec
push
push
repz
lahf
mov
sbb
jb
and
aas
mov
mov
xchg
push
jmp
cmp
mov
sbb
mov
mov
jmp
sbb
int3
xchg
lds
mov
adc
push
loop
test
sub
adc
ins
outs
fist
cs
xchg
jno
icebp
add
(bad)
ret
in
int
stos
ror
movs
push
hlt
scas
push
stos
add
retf
js
or
mov
fidivr
stos
jle
cld
and
push
inc
test
test
or
les
test
cli
movs
fistp
movs
lds
mov
stos
jbe
icebp
fucomp
out
movs
addr16
retf
pop
jmp
mov
sbb
or
xchg
sbb
cmps
cwde
test
(bad)
call
ror
and
(bad)
aam
rcr
sub
xor
inc
and
sub
mov
mov
push
aad
mov
stos
dec
xchg
or
mov
in
repnz
dec
imul
pop
jno
movs
sti
push
jbe
je
test
int
sub
xchg
mov
dec
rol
test
sar
sub
das
mov
mov
jmp
ins
mov
push
pop
sub
push
fwait
xchg
iret
and
sti
int
add
sbb
cld
pop
sti
xchg
test
shl
add
jbe
pop
(bad)
bound
mov
gs
push
mov
xchg
or
adc
in
loopne
aaa
clc
xor
mov
arpl
das
mov
repnz
ins
dec
and
pop
push
nop
mov
sti
push
cmp
dec
mov
jb
movs
push
fld
pusha
add
mov
push
loope
pop
or
cmp
mov
(bad)
std
sahf
adc
xchg
sbb
or
xchg
into
(bad)
mov
jmp
inc
ficom
sbb
(bad)
pop
and
in
add
and
mov
pop
lods
or
sbb
and
cwd
cmps
ins
jbe
gs
retf
jno
sub
ret
adc
mov
je
lods
mov
aaa
mov
sar
es
mov
add
cli
dec
(bad)
inc
rol
clc
and
mov
into
fldenv
and
inc
lahf
mov
ss
lahf
leave
dec
out
sbb
shr
sbb
cmps
(bad)
pop
xor
dec
mov
pop
jno
mov
xchg
fwait
mov
jnp
ret
adc
xchg
xchg
sbb
ss
enter
sbb
repnz
xor
sar
sbb
jg
mov
ins
(bad)
cmp
jnp
xor
cwde
mov
mov
jp
clc
popf
push
scas
cmp
jmp
stc
enter
mul
shl
cmp
and
nop
dec
mov
dec
movs
aad
push
retf
shr
xor
sub
sbb
jo
pop
adc
xchg
jmp
(bad)
push
jb
xor
leave
fisubr
int
xchg
dec
movs
in
xchg
fsub
add
mov
pop
jg
dec
mov
add
mov
push
mov
enter
pop
jo
xchg
call
sub
or
outs
and
test
inc
cmp
cld
(bad)
ret
sar
pushf
xor
outs
xor
and
mov
add
in
rcr
pop
(bad)
loope
mov
push
and
mov
stos
pop
inc
test
cmps
jge
call
out
and
dec
jle
mov
fldcw
(bad)
push
int3
xchg
xchg
xchg
int3
adc
(bad)
and
clc
cmp
dec
test
daa
je
sub
inc
lods
movs
pop
arpl
ins
push
add
popa
aad
sub
cmp
inc
xor
mov
sub
stos
out
shl
aas
mov
pop
pop
cmp
ds
call
mov
leave
outs
cmp
xor
das
cmps
mov
pop
loope
stos
int3
out
mov
std
pop
mov
std
icebp
shr
xchg
aam
sbb
inc
rcl
nop
push
xor
iret
sbb
das
mov
pop
cmp
push
xchg
mov
ret
mov
or
repz
idiv
sub
mov
xor
out
push
dec
sbb
test
xchg
loopne
in
xchg
push
or
ins
mul
loopne
push
loop
xor
push
dec
imul
dec
mov
lock
nop
jge
ret
xor
scas
popa
sbb
cld
call
stc
push
movs
dec
jo
mov
pop
and
mov
and
jbe
sub
loopne
fbld
xor
push
retf
cmp
jge
sub
popf
xor
cmc
enter
xor
xchg
loop
int
es
rcl
jg
mov
sub
sbb
clc
pushf
push
fs
adc
cdq
jg
adc
inc
or
mov
mov
ja
mov
push
cmp
mov
in
mov
cmp
push
daa
sub
cmps
push
pop
inc
fucomi
mov
(bad)
retf
into
inc
ror
adc
ins
xor
movs
jb
ret
(bad)
mov
sahf
mov
and
inc
jg
adc
in
repnz
bound
push
sbb
movs
adc
fnsave
(bad)
mov
das
gs
sub
sbb
repz
rol
(bad)
mov
cdq
pop
and
cmp
(bad)
jno
push
xchg
out
mov
outs
push
dec
sbb
fimul
cmp
push
cmp
and
mov
lea
cdq
stc
cmp
lods
jp
shl
lahf
mov
js
test
sub
or
mov
adc
aaa
mov
push
xor
aas
xor
pop
mov
mul
(bad)
push
pop
pop
pop
xchg
and
stos
mov
movs
out
pop
pop
xchg
mov
sbb
and
sbb
lods
sbb
sti
sub
scas
cmc
adc
bound
aam
pop
jp
mov
mov
inc
fs
jns
pop
out
ret
cmc
sbb
pop
sub
mov
mov
mov
outs
cli
push
adc
in
lea
rep
sti
lea
aam
test
sub
scas
jno
lahf
(bad)
out
mov
(bad)
sub
mov
xor
arpl
jmp
aas
das
cmp
nop
fiadd
in
scas
aas
mov
rol
or
mov
mov
call
push
out
xchg
cmps
nop
pusha
or
(bad)
fimul
dec
fs
ror
cli
sbb
fiadd
inc
ss
xlat
pusha
es
nop
test
fldcw
aam
xor
outs
enter
mov
rcr
jae
xchg
and
lahf
shl
adc
stos
hlt
adc
sub
cdq
dec
mov
jo
das
xchg
mov
ficomp
fcomip
jns
out
and
xlat
cmp
outs
or
inc
scas
xchg
jp
push
mov
std
movs
ror
je
mov
ja
xchg
retf
mov
lahf
bound
nop
mov
imul
dec
push
add
jmp
jge
jg
xchg
in
xchg
cld
xchg
adc
and
out
sahf
hlt
sub
test
sub
adc
rcr
push
add
mov
imul
jae
dec
jp
jmp
sbb
daa
clc
add
cli
and
or
sub
pop
gs
stc
cdq
retf
cmps
jecxz
adc
push
sub
(bad)
adc
pop
fs
les
pop
add
and
(bad)
or
test
mov
outs
sbb
inc
in
ins
and
push
popf
pop
add
mov
jbe
retf
fsubr
int3
cmps
das
imul
loopne
cwde
lock
adc
mov
cmps
das
(bad)
jmp
imul
xor
test
out
adc
jne
add
cmp
dec
cwde
mov
loope
mov
jne
cld
retf
repz
add
in
lds
in
and
cmp
ja
idiv
and
stc
enter
leave
fdivr
push
cs
call
sub
shl
push
adc
sbb
adc
xchg
cmps
ds
cmp
jmp
js
add
out
mov
shr
sbb
rcl
dec
pop
mov
test
add
sbb
adc
ins
aas
pop
call
mov
add
push
cmp
lock
into
adc
jb
add
push
aad
mov
clc
xchg
mov
nop
in
popa
int
shl
adc
or
jg
xor
add
lock
dec
pop
and
aas
sahf
mov
xchg
pushf
std
movs
pop
call
stc
fild
adc
nop
jno
in
and
fs
mov
scas
div
mov
shl
jmp
fild
das
pop
nop
mov
xchg
cmc
shr
xchg
or
cmp
push
rcr
xchg
and
push
xchg
es
xlat
daa
retf
sub
sbb
sub
call
jp
push
aam
aas
aas
inc
dec
int
imul
test
and
div
je
pop
sbb
(bad)
lea
mov
or
xor
mov
in
ret
xlat
imul
or
xchg
std
mov
fld
and
fcom
popf
xchg
mov
shl
js
fcom
sub
mov
aam
enter
aas
aaa
add
adc
outs
add
loop
sub
pop
pop
inc
das
aas
dec
xchg
mov
lock
and
inc
(bad)
jmp
pop
xchg
and
int3
mov
push
adc
xchg
dec
pop
mov
xchg
jo
shl
int3
sbb
mov
xlat
adc
xor
aaa
hlt
cmps
add
push
test
popf
mov
pop
loopne
lods
repnz
xlat
sub
bound
test
je
into
add
call
dec
sahf
retf
cmp
push
clc
push
nop
mov
xor
push
adc
in
cmp
setne
in
push
inc
jmp
push
xor
mov
shl
xchg
mov
scas
fisubr
loop
sub
popf
mov
mov
enter
retf
pop
ret
xchg
mov
pop
repz
call
xor
sub
pop
inc
movs
or
mov
or
mov
sbb
(bad)
mov
mov
push
mov
fdivr
push
dec
xchg
mov
hlt
mov
or
inc
adc
aas
idiv
jo
mov
cmp
jnp
add
dec
mov
ins
sti
jbe
int
leave
addr16
sub
pop
mov
sbb
jmp
cmp
cmp
jg
sti
and
hlt
inc
push
dec
aam
icebp
and
adc
pop
ret
loopne
repz
das
out
fild
into
pop
cmc
scas
test
mov
push
mov
mov
test
ror
popf
out
ror
addr16
call
and
inc
and
mov
mov
and
jae
rol
xchg
and
xor
stos
retf
adc
iret
mov
xchg
ficomp
movs
ss
jne
inc
xchg
jle
dec
inc
fisttp
outs
repz
int3
ror
mov
mov
out
inc
sahf
(bad)
dec
cld
cld
dec
mov
std
arpl
lea
and
popf
data16
aam
adc
sbb
jl
gs
push
push
or
std
sti
add
call
adc
mov
outs
popa
loope
xchg
push
sahf
mov
adc
mov
cmp
movs
cs
loop
add
scas
lods
in
je
popf
mov
fmul
mov
loop
fsubrp
mov
inc
dec
inc
push
and
pop
fldenv
inc
sbb
xchg
pop
mov
(bad)
icebp
dec
push
jo
mov
mov
aaa
in
aad
sub
pusha
movs
in
mov
sub
cmps
aaa
xor
jecxz
adc
movs
aaa
or
inc
mov
out
cmp
dec
loope
adc
iret
jns
push
add
pushf
sbb
rol
lods
add
pop
out
loopne
push
adc
test
mov
sbb
retf
add
pcmpeqb
daa
jg
add
out
outs
stos
in
sbb
push
adc
sbb
outs
fisub
pop
dec
pop
sub
lods
adc
and
fs
push
mov
fwait
mov
xlat
jmp
hlt
sub
int
or
int
test
dec
imul
add
and
test
movs
and
inc
push
cmp
push
add
sahf
jnp
(bad)
push
js
clc
out
repz
inc
add
frstor
adc
add
sar
jne
mov
push
jle
(bad)
mov
mov
sbb
sub
or
mov
xchg
jmp
cwde
shl
mov
add
pop
sahf
fwait
sar
addr16
nop
pop
mov
jmp
das
retf
add
push
mov
add
stos
mov
daa
dec
push
aas
test
jo
mov
pop
shl
sbb
std
lods
int3
fisub
aas
js
pop
pushf
jp
mov
aas
jmp
xchg
gs
cmp
imul
into
or
pop
mov
fnstsw
or
in
sub
dec
jl
sbb
(bad)
fadd
jmp
mov
data16
clc
sbb
push
sbb
jmp
inc
mov
out
aad
cli
xchg
xchg
dec
sbb
leave
cs
jo
and
clc
push
int3
(bad)
add
mov
push
ja
stos
jnp
ffreep
inc
inc
mov
gs
clc
outs
mov
shr
xchg
pop
xchg
and
leave
(bad)
jae
jbe
mov
out
ror
mov
add
jmp
mov
jge
xchg
mov
xchg
not
mov
xor
xchg
call
nop
and
push
daa
xor
sub
adc
hlt
jge
jle
or
add
push
cmp
adc
out
and
mov
dec
jbe
inc
mov
lods
inc
sar
jne
in
pop
mov
dec
mov
ins
and
xchg
add
xchg
jmp
jmp
pop
fs
test
imul
not
add
inc
add
call
jns
and
jbe
jbe
jp
cmc
mov
(bad)
xchg
push
in
out
div
bound
nop
test
sub
mov
call
loop
nop
and
(bad)
push
rcl
pop
iret
les
iret
push
movs
stos
and
imul
retf
push
outs
mov
int
jl
xchg
aad
xchg
mov
and
jno
aaa
fbstp
js
jge
mov
std
aam
xor
or
stos
adc
arpl
inc
and
and
cmp
sub
or
retf
aam
sbb
mov
cmp
jbe
repz
imul
xchg
inc
inc
stos
xchg
outs
inc
pop
jae
lods
push
mov
inc
iret
movs
cmp
into
lock
push
pusha
lea
adc
retf
sbb
fdiv
or
sbb
mov
clc
mov
mov
xchg
lea
pop
hlt
xor
inc
outs
js
pop
lahf
pop
fld
dec
or
sbb
or
dec
sub
mov
pop
(bad)
test
fs
jge
popf
xchg
(bad)
outs
std
cmc
fwait
(bad)
clc
jge
xor
cmp
imul
outs
pop
pop
hlt
push
and
mov
ss
xchg
xchg
out
add
cs
(bad)
sbb
into
push
call
jnp
mov
(bad)
imul
jg
hlt
addr16
sbb
iret
add
add
mov
or
aas
xlat
fistp
adc
movs
jbe
into
cmp
pop
push
jo
mov
ins
lea
dec
ds
xor
mov
test
test
cwde
scas
clc
sar
dec
pop
imul
nop
bound
loope
add
sub
fistp
pop
fisttp
jge
shl
movhps
dec
xchg
push
loopne
stos
fld
push
mov
das
mov
fld
in
add
adc
(bad)
and
fwait
dec
gs
mov
sub
cmovo
shl
stos
int3
sbb
call
add
mov
sub
pop
rcr
or
pop
aad
lods
jl
jmp
pushf
sub
adc
or
leave
push
pop
xchg
jae
pop
out
push
xchg
xchg
iret
push
test
mov
es
mov
xlat
lahf
jb
fisttp
ja
jmp
xor
call
push
jg
(bad)
test
aam
lds
hlt
ins
mul
push
into
inc
push
movs
jl
jp
push
movs
nop
sbb
arpl
imul
jbe
xor
stc
sti
xor
mov
stc
aaa
mov
(bad)
std
adc
cdq
ja
leave
iret
call
sbb
ret
cmps
mov
fidivr
push
movs
in
add
inc
or
out
sub
mov
scas
div
inc
gs
retf
or
int
imul
lock
push
xor
outs
stos
dec
in
imul
jl
enter
jecxz
shl
ins
loop
mov
or
fwait
imul
ins
xor
std
jl
aad
pop
push
retf
cmps
mul
test
pop
xchg
inc
inc
inc
outs
cld
sbb
pop
les
jnp
inc
icebp
sub
shl
xor
pop
lea
je
adc
(bad)
aad
(bad)
or
mov
call
pushf
out
and
fwait
push
daa
ja
pushf
loope
stos
(bad)
pop
push
mov
cwde
cmp
pop
in
lods
push
(bad)
push
sahf
push
retf
stc
push
xor
fldln2
add
pop
pop
and
push
idiv
cmp
xlat
jne
dec
sbb
jno
or
dec
sti
pop
test
std
(bad)
fldcw
(bad)
fmul
int3
rcr
fidivr
mov
lods
dec
or
xor
sbb
(bad)
adc
xchg
pusha
xchg
mov
sub
lea
ins
fdiv
retf
into
shr
sbb
xlat
push
js
lods
stos
xchg
jle
retf
popa
(bad)
(bad)
shl
leave
xor
loop
out
mov
mov
or
push
push
dec
xchg
mov
mov
sar
lock
aas
fstp
mov
push
loope
pop
ret
mov
adc
push
push
push
in
ficom
and
inc
sub
mov
fsubr
pop
mov
in
aas
dec
fcmovb
inc
dec
loopne
jnp
mov
data16
hlt
xchg
fiadd
stos
push
mov
imul
jle
inc
cmp
xlat
jns
mov
cmp
test
in
gs
(bad)
(bad)
ins
push
push
dec
or
push
pop
or
mov
movs
adc
mov
in
out
adc
rol
sub
dec
jl
loope
clc
adc
mov
cld
fsub
ss
cli
clc
push
cmp
cwde
mov
xor
sti
xchg
cmp
mov
daa
fnstenv
pop
lods
(bad)
cld
cwde
xchg
icebp
mov
mov
adc
xor
cmp
jns
retf
dec
cmp
cmp
lods
sub
dec
jecxz
int
out
cmp
addr16
(bad)
sti
cli
dec
sbb
fimul
sahf
jecxz
pop
pop
jae
push
lods
data16
push
(bad)
in
inc
jo
xor
xor
imul
push
jle
adc
jne
shr
punpcklwd
sub
mov
not
frstor
test
pop
and
inc
add
or
mov
dec
(bad)
icebp
sub
cdq
add
xchg
nop
or
mov
ret
xchg
loopne
fsub
push
ror
outs
jg
in
and
mov
dec
cdq
xchg
and
xor
jo
ja
(bad)
out
add
xchg
cmp
xchg
fdiv
sub
pushf
pop
and
sbb
pop
adc
mov
loopne
(bad)
int3
lods
xchg
fnstenv
cld
jmp
push
nop
das
cmc
xchg
and
into
mov
stos
or
repnz
push
xor
out
in
cmp
jp
xor
repz
iret
or
out
and
xchg
mul
pop
xor
push
xor
fs
sbb
or
jnp
ret
and
adc
sub
retf
fwait
xor
dec
push
mov
sub
addr16
mov
outs
pop
mov
cdq
arpl
mov
pop
aas
cwde
jno
cmps
push
dec
push
dec
xlat
xchg
loopne
repnz
xchg
repnz
(bad)
adc
pop
int3
cmps
xchg
sbb
inc
pop
push
outs
popa
xchg
lock
mov
or
cmp
ds
retf
mov
fcomp
jae
sub
push
push
aas
aaa
jp
(bad)
dec
inc
dec
scas
imul
out
out
mov
fcmovne
xchg
adc
ins
sbb
scas
call
dec
lods
mov
cmp
cmp
sub
mov
outs
icebp
fimul
nop
fsub
or
in
xor
out
or
retf
jb
mov
test
sub
pop
adc
xor
test
add
add
mov
std
push
pop
mov
cmps
push
int3
(bad)
fst
jmp
push
idiv
enter
inc
pushf
shr
pop
mov
add
hlt
pop
repnz
jo
lea
fstp
dec
xchg
jmp
cmps
loopne
sbb
call
fwait
stos
mov
inc
cmps
lods
mov
and
mov
ins
xchg
jp
mov
dec
push
shl
pop
dec
outs
cs
data16
mov
icebp
adc
sub
mov
out
sub
imul
push
cmp
xchg
mov
std
inc
inc
mov
call
pop
retf
mov
or
and
shr
pop
out
dec
mov
popa
pand
arpl
add
fs
jmp
scas
pop
rol
mov
push
addr16
adc
pop
or
pop
repnz
cmp
sub
outs
jb
mov
mov
jl
enter
nop
fwait
mov
xchg
stc
(bad)
mov
adc
jl
inc
hlt
fs
test
dec
inc
jmp
test
xchg
scas
cmp
inc
or
ret
pop
daa
jae
in
icebp
pop
test
test
sbb
(bad)
sbb
xlat
pop
cmps
fsubrp
pop
ss
push
in
mov
mov
pushf
out
sbb
sub
lds
popf
in
clc
sub
fcmovb
frstor
push
push
fsub
ret
dec
dec
xchg
and
adc
into
fiadd
and
ins
sbb
jecxz
stos
push
jbe
mov
xor
add
ret
add
in
push
push
jecxz
add
xchg
jo
mov
xchg
mov
mov
xchg
sbb
mov
xor
xor
pop
mov
test
jbe
lods
lahf
lahf
call
rol
sbb
jge
mov
retf
push
icebp
pop
movs
cmp
mov
sahf
ss
test
jg
add
or
push
pusha
cmp
xor
sbb
(bad)
xchg
jg
shr
(bad)
mov
jo
xor
push
std
sar
movs
sbb
nop
bound
inc
cmps
sbb
push
sbb
cdq
pop
and
fmul
cmp
dec
push
iret
nop
push
sti
jp
xor
xor
ret
xchg
sbb
jne
mov
dec
icebp
xor
(bad)
(bad)
mov
push
cmp
pop
jmp
loopne
pop
mov
outs
cmps
cmps
leave
or
or
jge
pop
loopne
div
retf
xchg
xchg
dec
xlat
sbb
hlt
sub
mov
push
loop
cmps
int
jno
dec
pop
fisttp
test
or
out
and
sub
pop
xor
js
mov
adc
ss
icebp
loop
mov
xlat
pop
call
aam
push
movs
hlt
pop
rcr
out
inc
lea
call
lds
add
sbb
pusha
dec
cmps
and
cmp
xchg
push
(bad)
fcmovne
loopne
sbb
add
push
jp
fsubr
mov
mov
cmp
mov
jo
data16
mov
and
iret
xchg
shr
(bad)
add
mov
in
mov
pop
cmp
cmc
push
push
mov
and
lock
inc
mov
jg
jo
sbb
cmps
jmp
xchg
clc
inc
jnp
push
iret
mov
mov
dec
add
stos
aam
in
dec
ds
inc
sbb
dec
cmp
push
iret
push
cmp
push
fcomip
sti
loope
xchg
inc
dec
out
data16
(bad)
adc
jb
sub
lahf
mov
retf
lea
xor
std
js
xchg
jns
sub
in
cwde
sbb
ins
jmp
sbb
inc
adc
in
pop
mov
xor
aam
push
loopne
in
dec
cmps
mov
ds
mov
inc
ret
push
into
xchg
sbb
push
loop
sub
mov
ins
mov
sub
cdq
sbb
pop
xchg
or
pop
jge
movs
mov
inc
aam
cmc
aad
push
imul
call
add
jo
inc
shl
mov
sbb
push
push
ja
and
pop
cs
push
pop
pop
fidivr
mov
and
retf
jne
xchg
pop
add
aas
cmps
adc
mov
out
and
push
lods
out
fimul
mov
sub
int
adc
mov
lea
repnz
cdq
aad
(bad)
ins
lds
fwait
sbb
rcr
cwde
fs
rcr
sti
mov
xor
mov
push
test
cmc
pop
push
(bad)
dec
mov
pop
xchg
int
clc
sub
pop
mov
aaa
jmp
ror
outs
test
cld
arpl
movs
jmp
cs
push
mov
int3
in
cwde
in
mov
aaa
call
enter
pop
or
push
add
inc
mov
rcr
data16
mov
leave
xor
xor
xchg
inc
aad
sbb
ins
arpl
mov
sub
xor
add
jo
(bad)
daa
(bad)
xlat
and
sbb
mov
sub
xor
and
imul
adc
fist
scas
aaa
stos
daa
stos
push
adc
movs
shl
lock
icebp
cdq
add
mov
and
ins
mov
inc
push
mov
inc
sub
mov
dec
mov
popf
stc
leave
(bad)
js
jns
fwait
mov
ins
pusha
icebp
mov
pop
addr16
mov
mov
gs
pop
rol
ret
(bad)
push
push
jg
adc
scas
sbb
loopne
arpl
pop
mov
mov
xchg
fwait
cmps
ret
ret
cdq
loope
retf
mov
jp
mov
shr
mov
shr
xor
or
adc
rcr
push
in
fist
jle
jle
xchg
repz
pop
or
pop
add
call
es
dec
shl
leave
add
xchg
addr16
bound
cmps
test
jmp
addr16
cmc
xor
cdq
sbb
inc
stos
fcmovnu
loope
sbb
dec
repz
in
call
fisub
sbb
add
les
in
xchg
iret
in
mov
imul
dec
loop
mov
scas
sub
mov
(bad)
push
mov
mov
iret
cli
adc
jecxz
dec
push
loope
mov
les
in
or
pop
xchg
mov
xchg
iret
mov
xchg
stos
(bad)
retf
fcom
scas
add
jno
imul
adc
in
popf
ret
nop
sbb
jg
xchg
pop
jg
xchg
aas
mov
lods
std
xchg
jecxz
and
js
mov
mov
xchg
loope
sbb
xor
dec
mov
inc
mov
movs
shr
and
js
fnstenv
cmp
inc
add
lahf
mov
stos
scas
dec
sbb
(bad)
mov
push
(bad)
pop
cmps
adc
push
in
inc
enter
lds
xchg
rcr
inc
addr16
mov
(bad)
daa
inc
retf
in
cdq
mov
adc
sar
mov
xchg
retf
arpl
push
pop
sbb
ins
gs
in
and
mov
lods
mov
fild
out
mov
lock
and
dec
add
jnp
data16
xlat
int3
lods
add
inc
sub
add
xchg
xchg
mov
or
jmp
in
(bad)
pop
mov
add
mov
mov
(bad)
iret
retf
mov
cld
(bad)
mov
xchg
xor
push
ror
nop
adc
dec
sti
enter
(bad)
stos
xchg
out
push
mov
call
sbb
and
call
dec
leave
cld
call
jecxz
je
xchg
cmp
sbb
mov
mov
dec
in
sbb
and
push
mov
inc
cmp
call
or
pusha
inc
outs
mov
clc
jo
lods
arpl
outs
pavgb
scas
push
and
jecxz
out
call
cmp
inc
mov
dec
push
loop
push
dec
dec
in
dec
inc
stc
inc
inc
sbb
sub
add
int3
jle
aad
adc
(bad)
sbb
(bad)
cdq
mov
call
test
fbld
outs
cmp
ret
push
push
jbe
cmp
test
inc
and
clc
dec
or
jae
push
mov
sub
stc
push
js
inc
pop
dec
mov
gs
or
jns
xlat
xor
sbb
xchg
movs
ja
mov
leave
ret
add
repz
push
sbb
jecxz
in
sub
jne
inc
or
sbb
mov
stos
lods
call
aam
pop
pop
xchg
inc
ret
or
cmp
int
sbb
dec
sub
mov
ins
shl
and
xchg
inc
mov
fidivr
in
sbb
popa
inc
inc
ss
mov
ror
and
pop
scas
mov
jge
pusha
in
loop
xor
test
repnz
cmps
(bad)
pushf
in
lock
clc
repnz
jg
addr16
(bad)
cmps
cmp
in
into
mov
adc
pop
pop
sub
imul
xchg
lock
das
pop
jl
lods
int
xor
jae
les
mov
lods
(bad)
fidivr
mov
sar
xchg
gs
leave
dec
rcl
inc
sbb
jmp
xor
push
sub
outs
push
outs
fsubr
xchg
mov
bound
rol
scas
dec
loop
imul
xchg
jno
ss
push
jecxz
xchg
enter
shl
std
mov
inc
xchg
sub
mov
pop
pusha
cmps
add
fcomp
js
push
lahf
adc
les
mov
add
jg
lahf
xchg
fidiv
dec
mov
mov
cmp
pop
dec
inc
das
jmp
(bad)
rol
mov
imul
ds
clc
jmp
sub
(bad)
in
aam
outs
data16
mov
push
ret
xchg
dec
jecxz
jge
cmp
or
sub
and
cdq
and
out
mov
sub
jno
stos
(bad)
aas
test
add
or
mov
mov
mov
and
add
xlat
cmp
loope
push
jno
cmps
loopne
sub
mov
jns
test
stos
std
dec
mov
or
xor
inc
mov
mov
mov
or
ja
xor
std
mov
inc
push
pop
inc
inc
inc
push
add
stos
mov
rcr
imul
push
stos
test
into
in
ret
xor
mov
push
sub
bound
mov
mov
xchg
int3
pop
icebp
aas
in
xor
pop
scas
dec
mov
scas
add
mov
or
into
cmp
mov
inc
(bad)
adc
mov
dec
jmp
lods
das
imul
sbb
pop
mov
or
xor
jge
mov
jns
mov
cld
retf
xor
or
test
bnd
fmul
mov
cmp
std
stos
xchg
jmp
fsubr
aaa
scas
dec
ss
out
xor
push
in
sbb
lea
je
mov
stc
ror
mov
ror
push
mul
js
mov
rdpmc
inc
jge
push
bound
fcmovne
push
je
mov
rcl
enter
mov
mov
sub
xchg
loop
add
bound
or
adc
movs
or
daa
and
fstp
in
add
stos
pop
mov
xchg
mov
icebp
and
movs
pop
mov
inc
mov
stc
xlat
(bad)
div
adc
cmp
(bad)
sbb
push
gs
mov
jne
fld
sub
or
add
adc
mov
sub
xchg
push
retf
cmc
sub
xchg
jno
sbb
aam
or
xchg
cmp
fs
mov
ret
jno
int3
xchg
mov
shr
mov
sub
cli
push
mov
push
in
sbb
push
inc
(bad)
cs
or
inc
jo
pusha
iret
das
je
jp
sub
bound
test
repz
pushf
pusha
test
in
retf
sbb
scas
mov
retf
ds
pop
mov
ficomp
fwait
dec
and
or
(bad)
aam
lahf
imul
pop
inc
add
jae
sub
fcomp
pushf
sar
cmp
xchg
(bad)
mov
or
mov
shl
mul
mov
dec
dec
jns
adc
pop
retf
div
xchg
dec
rdtsc
adc
adc
(bad)
cli
inc
jecxz
jb
lods
xchg
jbe
cmps
ret
jns
and
icebp
sub
mov
call
mov
aad
dec
or
stc
ror
les
cmp
lods
mov
xor
pop
mov
imul
in
sar
(bad)
pop
aas
xchg
imul
cmc
mov
dec
push
aam
sbb
imul
cmp
and
loopne
les
or
sub
cmp
dec
or
mov
mov
xor
repz
test
ds
mov
sbb
mov
clc
mov
mov
or
pop
pop
aad
cli
pop
stos
mov
stos
mov
mov
cdq
sbb
lods
mul
pop
add
cmc
xchg
xor
je
iret
into
sbb
jmp
stos
repz
in
add
jns
and
mov
jmpw
inc
sub
pop
inc
outs
dec
outs
add
out
in
int3
push
mov
retf
retf
cmp
nop
ficomp
rcr
and
fst
cld
cmp
cwde
pop
leave
nop
lods
sar
dec
cmp
xchg
fcmovb
rcl
cli
fld
ins
pop
adc
loope
div
ror
js
call
xor
cli
push
retf
xor
test
mov
adc
shr
les
ror
lock
arpl
fs
stos
(bad)
mov
or
jp
(bad)
fwait
enter
retf
shl
aas
cmp
test
xor
(bad)
mov
not
ret
sbb
jno
out
ss
push
cdq
cwde
cwde
(bad)
fdiv
lods
movs
scas
inc
in
outs
not
aaa
loope
dec
cmp
push
mov
test
stos
mov
(bad)
xor
xchg
adc
mov
cwde
mov
xor
cld
mov
mov
shr
loopne
vmovapd
mov
sbb
ret
cmp
adc
cmp
xchg
nop
xchg
or
mov
pusha
jge
and
xor
pusha
jno
xor
loopne
xchg
push
dec
sbb
push
(bad)
leave
dec
mov
aas
dec
inc
or
sub
nop
push
ret
data16
mov
add
sub
lea
mov
movs
cmp
sbb
push
add
mov
sub
in
popa
and
nop
and
out
std
mov
pop
add
xchg
and
std
xor
jecxz
call
in
ds
xor
mov
shl
je
pop
fisttp
pop
cdq
dec
jnp
mov
xor
mov
(bad)
xor
or
mov
mov
mov
(bad)
addr16
jmp
ds
in
das
icebp
(bad)
sub
pop
pop
test
fs
mov
mov
(bad)
cwde
dec
adc
fcomp
iret
sub
adc
cwde
in
mov
add
and
mov
loop
(bad)
lods
pusha
je
fwait
call
pushf
mov
iret
(bad)
jg
mov
dec
inc
mov
out
shl
add
fld
push
cli
rcr
sbb
xor
cmp
add
dec
shl
cld
pop
nop
mov
daa
push
inc
cs
inc
jno
fsub
test
and
add
in
enter
(bad)
lods
jo
jne
cwde
pop
enter
cld
adc
movs
ret
or
outs
je
push
ficomp
outs
sbb
jge
jmp
dec
dec
out
mov
dec
fmul
lahf
(bad)
push
(bad)
fwait
add
push
xlat
adc
lods
pop
jns
dec
mov
jmp
ficom
popa
dec
and
adc
je
sub
mov
jecxz
ret
inc
push
jg
or
dec
fistp
(bad)
jae
(bad)
pusha
mov
jmp
in
or
cmp
dec
(bad)
int3
shr
dec
mov
repnz
shl
push
push
loopne
cmp
jmp
jbe
or
add
xor
lock
gs
pop
into
out
cmp
push
hlt
test
lds
dec
cmps
stc
inc
cmc
adc
nop
dec
outs
or
inc
es
inc
repnz
(bad)
adc
(bad)
scas
stc
push
push
mov
test
popf
mov
and
jecxz
(bad)
cmp
pop
es
lods
jmp
xchg
sbb
sbb
daa
movs
sbb
sbb
ror
cmps
leave
iret
lds
add
or
push
mov
add
push
mov
add
dec
add
popf
dec
test
or
adc
jb
mov
sub
lds
arpl
mov
out
sbb
rcr
mov
imul
inc
mov
lock
fs
leave
xor
add
jae
and
inc
push
inc
push
pop
adc
sub
adc
cmc
or
add
pop
into
mov
shl
scas
mov
mov
enter
xchg
out
or
rcl
xor
(bad)
ror
(bad)
movs
jbe
push
fdiv
scas
sub
mov
div
jns
dec
or
jecxz
cmp
sbb
mov
jae
xchg
jecxz
pop
rcr
ficom
or
pop
mov
cmp
lods
push
ret
outs
mov
cmp
mov
adc
mov
fild
into
(bad)
aam
inc
pushf
mov
out
mov
aaa
mov
pop
mov
jmp
sbb
(bad)
stc
das
aam
cmp
push
jg
scas
adc
mov
inc
shl
push
out
mov
xchg
xchg
loop
cmp
aad
mov
push
sbb
(bad)
adc
idiv
cdq
add
movs
and
lods
lock
mov
and
retf
lock
out
daa
fisubr
adc
jb
push
pusha
mov
and
jno
adc
xchg
das
std
(bad)
mov
aas
lock
xor
cmps
icebp
mov
xchg
rcl
mov
bound
mov
mov
mov
or
inc
pushf
clc
lea
aad
add
sub
push
sti
ja
sub
sub
dec
fadd
and
pop
test
mov
inc
test
mov
lods
pop
popf
aaa
add
lods
and
push
movs
adc
data16
push
je
daa
ins
and
loope
push
fstp
inc
bound
mov
adc
scas
rdpmc
outs
leave
fwait
mov
ficom
dec
mov
js
bnd
and
retf
mov
(bad)
movs
(bad)
leave
adc
pop
cmp
push
mov
push
ss
mov
jmp
loopne
das
test
sbb
test
ds
xchg
jno
icebp
xchg
rcl
mov
loopne
adc
outs
pop
fidivr
add
add
sub
cmps
mov
lahf
in
sbb
or
jl
mov
cmc
daa
sbb
pop
jmp
push
mov
dec
test
out
test
dec
mov
inc
das
mov
leave
ja
es
daa
or
lds
xchg
imul
mov
mov
sti
dec
cmp
sbb
enter
or
dec
add
out
jbe
call
shr
cmp
fnstenv
push
ret
push
or
cmp
icebp
xor
nop
pop
mov
fwait
jnp
xchg
mov
add
pop
adc
mov
jecxz
sub
mov
fwait
push
in
pop
imul
or
cwde
sub
mov
adc
int3
out
inc
pop
or
in
imul
retf
dec
cdq
inc
mov
popa
inc
jo
mov
xchg
mov
xor
out
popf
lods
jge
dec
or
or
aam
rol
bound
mov
xor
cwde
sub
call
movs
jmp
cwde
push
cmp
pop
xor
mov
call
int3
xchg
sub
add
xor
xchg
(bad)
rcr
out
inc
mov
fsubr
jno
loopne
ja
xchg
jp
sbb
sbb
jge
ins
retf
pop
in
loop
aas
adc
hlt
dec
push
mov
fs
push
scas
mov
mov
sbb
test
fisttp
in
ds
cs
cmp
retf
scas
ins
ret
jno
iret
sahf
push
popa
pop
mov
leave
dec
push
or
xchg
shl
mov
retf
out
dec
cmp
xor
cs
bound
cld
icebp
and
sahf
mov
xor
push
sub
fmul
push
inc
popf
ficomp
mov
inc
leave
push
scas
sub
inc
dec
cli
jecxz
sbb
sbb
mov
mov
loopne
mov
mov
xor
xchg
loop
imul
mov
stc
mov
dec
lock
mov
out
mov
sub
mov
fistp
cmp
mov
jge
fmul
test
arpl
mov
shr
(bad)
dec
and
div
out
and
call
ret
das
jp
jbe
xchg
inc
and
fistp
fisttp
and
inc
dec
ins
inc
cmp
or
inc
xor
(bad)
push
inc
cld
mov
aaa
lahf
sti
or
sub
das
movs
jecxz
sub
stos
lods
mov
sbb
jae
iret
(bad)
int
push
jae
retf
mov
pop
(bad)
adc
js
fwait
mov
mov
(bad)
aaa
retf
daa
call
xchg
jbe
fild
pop
sar
mov
jmp
jecxz
ret
test
ins
mov
xor
pushf
dec
cmp
es
sar
mov
(bad)
ds
adc
fidivr
fisttp
outs
push
lds
add
jns
add
arpl
and
inc
sub
dec
dec
(bad)
sbb
mov
aam
dec
push
lods
sub
xchg
popf
bndstx
xor
(bad)
mov
and
test
mov
pop
adc
aad
adc
push
jae
adc
in
(bad)
jmp
std
scas
and
aad
movs
sub
push
jmp
pop
sbb
mov
fs
xor
scas
das
push
out
xchg
jns
xchg
gs
and
imul
xor
jnp
ja
sbb
lock
(bad)
fist
xchg
outs
fistp
(bad)
dec
popa
or
jl
js
pop
cld
inc
mov
aad
adc
dec
mov
xchg
dec
sbb
dec
cmp
xchg
dec
sbb
xchg
cmp
cmc
adc
xchg
dec
ins
mov
fs
mov
lods
jnp
mov
(bad)
xlat
icebp
or
lods
inc
aaa
sbb
jbe
clc
xchg
mov
out
jg
push
int
mov
xor
(bad)
(bad)
push
icebp
adc
addr16
fcom
and
push
repz
adc
jbe
in
ds
fcomp
sbb
sbb
jecxz
pop
les
push
cmp
das
lahf
inc
lds
pusha
sub
sahf
movs
ret
mov
bswap
inc
dec
pop
pop
fadd
test
call
(bad)
cmp
sbb
lahf
cmp
sub
push
pushf
rcr
mov
(bad)
jae
out
add
xor
xchg
data16
adc
lods
(bad)
dec
xor
stos
and
cmp
and
xchg
or
mov
out
sbb
and
ret
mov
test
pop
jb
mov
inc
sub
lds
add
xchg
jmp
ins
das
call
xor
lods
fcmovnbe
mov
add
xor
mov
jnp
imul
outs
add
shl
jmp
sub
cs
imul
scas
in
sub
popa
mov
leave
xchg
cmp
jecxz
je
or
inc
retf
shl
das
xlat
adc
xor
xchg
pusha
xchg
mov
cli
xchg
outs
int
sbb
repz
mov
xor
fisub
jmp
jbe
inc
and
add
mov
test
cmp
ins
jle
cld
mov
mov
dec
pop
movs
jl
push
hlt
call
mov
mov
rcl
jb
cmp
and
add
mov
repnz
and
push
push
fidiv
(bad)
push
cli
dec
push
adc
push
add
adc
ret
ret
xchg
cmps
and
pop
cmp
sbb
fs
xlat
ficomp
jmp
pop
int3
cmps
mov
mov
and
push
aad
mov
xchg
jmp
jns
fld
icebp
push
or
fs
xor
pushf
inc
sbb
les
jbe
std
pop
xchg
imul
ins
dec
pop
test
add
push
cs
sar
loopne
push
imul
fwait
jl
pop
out
inc
jno
xchg
xchg
sbb
addr16
inc
adc
inc
sbb
ror
jne
inc
cmp
lods
and
xchg
mov
in
cmps
fst
rcl
enter
pusha
mov
adc
jmp
jmp
stos
fidiv
and
push
mov
jmp
sub
jmp
test
fld
out
cli
imul
jae
pop
jo
aaa
push
ja
and
mov
xor
ror
loopne
loopne
je
and
icebp
add
push
nop
sub
pop
sub
lea
lea
call
mov
xor
loop
popf
or
xchg
popf
cmp
xor
sub
or
sbb
jmp
mov
add
leave
call
mov
xchg
and
shl
daa
xor
jp
adc
sub
mov
xor
or
adc
and
jg
out
aad
sbb
jmp
pusha
and
loop
xchg
cld
mov
push
push
stc
sti
sub
mov
add
pop
iret
je
cli
mov
fs
pop
dec
pop
bound
sub
test
xor
pop
xchg
dec
in
iret
cmps
mov
retf
push
(bad)
pushf
fs
xlat
pop
add
inc
xchg
dec
sub
mov
and
ret
sbb
mov
dec
and
lods
dec
dec
jecxz
mov
push
dec
push
sbb
mov
fs
jo
(bad)
popf
pusha
pop
jne
cld
in
rol
dec
imul
ins
jno
imul
je
pop
adc
iret
(bad)
jb
(bad)
add
popa
push
daa
adc
aam
popf
bound
inc
or
mov
icebp
pop
dec
jmp
mov
xchg
xchg
stc
outs
or
adc
mov
sub
jnp
sub
test
in
ret
(bad)
test
(bad)
xchg
pop
mov
mov
xor
dec
int3
(bad)
adc
sub
(bad)
pusha
cmp
mov
faddp
shl
sbb
repz
stc
ins
sub
je
sti
xchg
fstp
(bad)
jle
mov
xor
pop
and
scas
outs
or
addr16
iret
shl
sub
dec
pushf
and
sub
cmps
xchg
ss
into
es
jns
jno
std
es
int3
cmp
inc
(bad)
int3
repz
out
push
xor
sbb
js
adc
stos
bound
jmp
fsqrt
(bad)
push
pushf
mov
adc
mov
adc
movs
pop
and
jmp
push
lods
mov
iret
pop
sbb
cmp
imul
jbe
cmp
push
out
call
mov
and
pop
lods
adc
das
push
add
loopne
mov
inc
mov
jno
dec
sbb
bt
xor
mov
sub
rcr
dec
mov
sti
sbb
mov
int3
aad
fimul
popa
stos
push
fbstp
icebp
dec
gs
pusha
movs
(bad)
push
jle
lds
gs
aaa
cmp
mov
out
adc
lock
pop
movs
push
pop
pop
jne
cmp
push
jmp
sbb
mov
mul
or
mov
fs
ins
push
jno
sar
or
jp
jae
dec
mov
lock
sbb
jecxz
aas
es
jecxz
sti
je
fsubr
mov
leave
mov
cmps
and
push
cli
fs
mov
arpl
cmp
not
mov
add
xor
mov
inc
jmp
and
mov
(bad)
pop
iret
clc
jae
sub
xchg
stos
rcr
fwait
mov
loop
shl
repz
(bad)
fucomip
adc
pop
cmc
xor
shl
sbb
inc
jns
cwde
push
adc
jb
mov
fcomp
and
adc
and
push
pop
or
mov
and
jecxz
sub
call
enter
mov
iret
pop
or
cmp
test
sti
cwde
cmp
pop
jl
jecxz
and
and
pop
adc
adc
ret
jns
scas
in
push
xchg
ficom
xchg
pusha
icebp
dec
movs
xchg
mov
or
cdq
and
jmp
mov
repz
bnd
(bad)
mov
lods
or
(bad)
iret
pushf
sbb
sbb
sub
aaa
les
in
mov
pop
xchg
mov
(bad)
test
and
rol
mov
fist
fcom
push
adc
test
ins
xchg
jmp
sbb
xchg
fisttp
mov
inc
fsubr
lods
mov
fistp
xor
sbb
jecxz
add
outs
fst
scas
movs
xor
pop
mov
pop
xchg
les
xlat
push
daa
add
mov
add
jbe
cmp
mul
jle
inc
gs
pushf
cmp
lds
pop
mov
call
xchg
mov
fiadd
pop
call
mov
sbb
rcr
into
rcl
cld
sub
cmp
test
add
cld
mov
inc
inc
test
das
ror
popf
ds
fnsetpm(287
xor
push
or
pushf
clc
pop
and
mov
cwde
jno
es
movs
cld
loopne
mov
nop
jecxz
xor
lods
aas
or
jae
sub
(bad)
push
into
lock
mov
es
repnz
daa
fisub
xchg
imul
jbe
stos
outs
or
inc
pop
je
adc
loop
xchg
loope
cli
scas
xchg
inc
sub
adc
mov
dec
xor
mov
dec
inc
stos
cld
test
lds
pop
xchg
mov
movs
add
mov
lock
push
mov
dec
lock
int
add
or
sbb
add
popf
sbb
(bad)
cmp
mov
mov
rol
(bad)
stos
cld
jbe
clc
ret
pop
jno
mov
push
sub
and
cld
mov
mov
ret
dec
fmul
loope
jmp
cmp
and
xor
fs
xor
fcomp
lds
fmul
xchg
xchg
js
cmp
ret
jnp
xchg
cmp
mov
jmp
(bad)
hlt
add
xchg
dec
xchg
jae
(bad)
test
outs
push
xlat
daa
jns
call
es
pop
test
xchg
call
out
pop
mov
mov
jmp
cs
fisttp
ins
xchg
fwait
aam
loope
popa
test
xchg
aad
arpl
sub
pop
xchg
jmp
clc
mov
or
arpl
xor
arpl
pop
pop
push
add
daa
inc
imul
inc
add
push
xchg
test
into
aad
sbb
cmp
adc
sub
arpl
in
and
mov
sbb
or
pusha
add
into
xor
fisubr
call
adc
pop
cli
dec
pop
idiv
sub
loop
mov
jnp
push
push
and
leave
inc
xchg
into
nop
cmp
and
pop
jge
loop
cmp
or
xor
cmp
in
mov
pop
pop
lock
mov
add
mov
test
(bad)
xor
in
nop
mov
arpl
scas
pop
mov
and
adc
xor
add
cld
adc
movs
mov
xchg
or
lods
mov
adc
shl
ins
cmc
iret
or
pop
mov
(bad)
mov
js
push
mov
fisub
push
jl
xchg
dec
movs
movs
mov
sti
pop
or
test
mov
and
(bad)
sub
mov
push
popa
test
imul
imul
mov
fsub
movs
call
pop
ret
xchg
mov
sbb
neg
xchg
lds
add
cld
gs
mov
dec
jp
mov
in
push
arpl
cmp
sub
ds
addr16
aam
iret
ins
xchg
xor
jg
jp
scas
test
push
pop
cmp
stos
and
fs
mov
arpl
and
int3
push
in
mov
pop
push
int
out
xchg
xchg
(bad)
cmps
test
bnd
inc
test
sbb
popa
mov
clc
mov
out
imul
push
or
or
or
or
dec
test
inc
lods
cmp
ss
dec
mov
jns
fs
add
(bad)
imul
jne
test
test
and
in
in
xchg
xchg
push
push
(bad)
mov
in
push
sbb
xor
gs
and
(bad)
jnp
sub
jg
sbb
jno
cmps
xor
leave
xor
xchg
pop
(bad)
cmp
push
lock
stos
add
ret
shl
adc
dec
inc
mov
cmp
cdq
add
sbb
inc
push
and
in
inc
adc
xchg
pop
data16
fbstp
xchg
mov
mov
adc
and
ret
shl
xor
lods
xor
push
enter
out
cli
pop
push
arpl
dec
push
aaa
sar
dec
cmps
mov
lea
xchg
and
push
jno
loopne
xchg
mov
test
mov
sahf
inc
(bad)
in
vphaddubq
pop
sahf
push
jp
daa
fld
rol
cmp
scas
and
addr16
or
loopne
int
push
mov
mov
fadd
dec
add
add
imul
imul
inc
lods
add
jne
jnp
sub
push
cmps
jns
stc
pop
sub
mov
or
retf
push
in
and
je
arpl
mov
imul
rol
je
stos
mov
push
push
stos
pusha
rcr
and
in
dec
cmp
xlat
arpl
mov
pop
div
xor
mov
and
ror
ret
xchg
xchg
call
mov
jne
dec
xchg
xor
and
sar
pop
inc
sub
and
and
popa
popa
pushf
das
test
cwde
nop
xchg
sti
stc
loopne
icebp
ss
mov
lock
js
lea
and
pop
lds
jmp
(bad)
std
cmp
daa
out
aad
outs
stos
daa
and
or
popf
inc
dec
fsubr
in
fcmovnbe
cmp
cld
repnz
cmp
or
xor
shr
inc
or
sub
jmp
lock
clc
xchg
lahf
(bad)
jmp
in
aad
mov
inc
dec
into
aad
(bad)
test
ds
xchg
dec
xor
es
add
mov
xor
mov
je
sbb
jb
push
cmp
pop
and
std
jae
loopne
dec
xchg
pop
js
fsub
ret
arpl
out
and
jne
lds
mov
sti
inc
test
imul
xchg
retf
push
repnz
pop
getsec
clc
and
int
lods
add
mov
pop
sar
xor
or
xchg
pop
sub
pop
clc
loopne
out
mov
pop
jecxz
cwde
hlt
movs
xor
push
psubusw
xchg
sar
call
xchg
call
or
sahf
mov
sti
int3
scas
(bad)
lods
push
dec
imul
jnp
fist
mov
pushf
xor
int3
xchg
dec
aas
(bad)
mov
adc
not
sbb
je
cdq
cmp
rcr
hlt
push
or
add
or
ret
dec
aaa
stos
rcl
addr16
mov
sub
mov
(bad)
shl
(bad)
test
ret
jg
dec
popa
daa
cmp
int3
dec
sub
idiv
mov
outs
iret
jbe
push
bound
xor
sahf
sar
pop
ret
fnstcw
adc
pop
jmp
scas
imul
retf
sar
mov
in
aad
pop
pop
fstp
xchg
iret
cmp
jmp
iret
cwde
add
sub
ret
jbe
mov
les
and
inc
push
mov
fucomip
call
add
xchg
popf
mov
aaa
cld
push
jmp
xor
dec
mov
mov
imul
cmc
imul
(bad)
xor
mov
cmp
xchg
adc
sub
push
mov
int3
add
xor
xor
mov
inc
or
jmp
ins
ins
dec
fistp
xor
fist
xlat
or
add
push
push
int3
fiadd
sub
inc
cmps
push
lahf
pushf
movs
cmc
shl
jo
dec
push
push
lahf
and
stos
retf
pop
shr
out
dec
push
hlt
add
jne
outs
shl
jge
and
dec
pop
std
pop
in
push
push
outs
imul
mov
imul
fisttp
xchg
pop
push
mov
sub
adc
fsub
or
repz
push
test
out
sbb
inc
sti
fwait
dec
jo
call
jo
fmul
cli
aad
mov
ficomp
push
int3
test
lods
idiv
fwait
inc
out
inc
dec
add
test
push
push
add
cmc
lock
fistp
scas
mov
jg
push
mov
repnz
fbld
pop
fwait
ret
xor
sbb
sub
add
inc
adc
mov
neg
les
mov
test
stos
mov
push
out
xchg
retf
add
push
mov
(bad)
(bad)
xchg
xchg
and
pop
sbb
dec
lds
sub
cmp
(bad)
mov
out
xor
sub
mov
gs
adc
mov
stos
(bad)
hlt
popf
cdq
jo
les
mov
mov
scas
pop
push
es
fwait
pop
xchg
and
dec
xchg
ret
push
rcl
jnp
or
jmp
push
sbb
sbb
fdiv
mov
or
mov
dec
xor
int3
aad
or
pop
mov
(bad)
dec
xchg
lods
push
sbb
push
xchg
je
(bad)
sbb
jp
xchg
jp
sub
shl
and
jp
cmp
cmp
mov
sub
push
adc
int
push
jno
ldmxcsr
enter
ret
inc
es
iret
aad
inc
mov
pop
std
cld
push
mov
icebp
cdq
(bad)
xrelease
and
fidivr
sub
cmp
xchg
test
sub
clc
cwde
data16
sbb
mov
adc
inc
scas
jb
jp
mov
cs
and
jmp
retf
inc
push
aad
rcl
xchg
loopne
pop
inc
xchg
in
xor
stc
mov
pusha
movs
(bad)
fbstp
icebp
fs
cmps
outs
iret
push
add
push
jbe
std
ins
cmp
gs
cmp
cdq
cli
mov
push
push
lock
out
shr
movs
dec
or
daa
cmp
or
xchg
mov
sbb
retf
mov
jecxz
push
xchg
sbb
lds
es
leave
mov
sub
pusha
pusha
outs
call
dec
inc
icebp
dec
cmp
sbb
test
cwde
inc
test
push
in
add
sub
mov
movs
mov
mov
dec
retf
or
inc
aaa
dec
ror
push
push
fstp
js
mov
push
call
in
mov
xchg
xor
pushf
(bad)
or
call
sbb
push
add
cmp
inc
jp
push
mov
adc
mov
fild
imul
test
mov
div
adc
adc
mov
push
xor
jl
sub
retf
lock
shl
mov
xor
sub
mov
add
xchg
or
pop
(bad)
adc
adc
mov
dec
pop
cmc
call
adc
xor
es
lea
xchg
clc
fs
test
shr
push
scas
std
stos
dec
aas
push
data16
fdivr
out
iret
jmp
jecxz
in
int
sub
(bad)
rol
das
fbld
sbb
lods
dec
call
cmp
scas
push
or
add
xchg
cmps
fld
jle
cmp
jmp
cmp
push
in
cs
xchg
or
js
dec
loope
ret
xor
pop
cmps
xchg
shr
mov
retf
inc
sbb
adc
push
adc
pop
retf
ds
test
fild
imul
or
cdq
adc
inc
retf
jnp
in
stos
mov
pop
xor
xor
cdq
mov
mov
xor
je
shl
cmp
jl
imul
mov
dec
push
xor
mov
inc
pushf
enter
xchg
mov
aas
outs
ret
dec
stos
mov
mov
sbb
movs
repnz
ss
push
mov
popa
jo
daa
dec
ss
loope
sbb
and
mov
stc
xor
rcl
rep
cmp
pop
add
pusha
and
or
imul
adc
int3
xchg
cs
in
(bad)
push
dec
push
loop
dec
push
pop
adc
movs
push
dec
fdiv
xor
inc
retf
scas
retf
inc
dec
sahf
push
inc
sbb
(bad)
adc
lahf
loope
xor
cmp
sub
and
js
push
sahf
jns
adc
adc
(bad)
mov
fwait
mov
pop
nop
pop
movs
cmps
sahf
cmp
pop
jge
cmp
sub
ss
fs
leave
call
push
cli
ss
or
mov
inc
pop
cwde
add
mov
pop
enter
ret
cmps
mov
repnz
call
gs
adc
sti
nop
sbb
add
test
fldcw
call
inc
add
imul
scas
data16
cwde
dec
mov
xor
out
mov
pop
dec
xor
ja
les
push
sub
xchg
pop
sbb
movs
cmps
mov
xor
xor
pop
sub
out
cmp
adc
enter
mov
ins
fsubr
fsub
(bad)
xor
sbb
js
imul
pop
fwait
and
push
clc
aad
and
jle
ret
(bad)
mov
lods
inc
add
add
push
and
shufps
jbe
jbe
lods
xor
inc
leave
clc
mov
jg
sub
sub
cmps
cmp
xor
mov
push
and
sbb
neg
and
movs
inc
idiv
adc
loop
ret
jbe
cmp
sub
or
stos
aad
jmp
pop
and
inc
xchg
fadd
dec
push
aad
js
adc
stos
cdq
mov
xchg
sar
and
(bad)
jg
or
loopne
pop
pop
xchg
out
pop
mov
aas
jnp
aas
or
lock
rol
cmps
jns
ins
repz
sub
dec
retf
retf
lahf
push
xlat
push
ds
jp
mov
jmp
iret
out
or
sbb
jo
mov
aam
jecxz
inc
jne
bnd
pushf
xchg
jge
(bad)
xor
push
hlt
adc
stos
(bad)
repz
cmp
int3
add
dec
mov
ror
mov
dec
retf
push
dec
dec
push
cmps
mov
aam
in
aaa
in
pop
push
mov
mov
test
xor
mov
out
mov
enter
sahf
pop
shr
cmp
iret
sahf
cdq
sub
push
and
cmp
jns
mov
push
retf
sub
outs
or
sub
xlat
and
out
cmp
in
push
imul
inc
outs
sub
adc
push
push
fwait
je
pop
cdq
aaa
mov
lods
dec
cmps
popf
fdivr
lock
in
test
add
pop
adc
nop
adc
clc
pushf
fs
or
cmp
movs
aaa
add
hlt
push
ins
sahf
ret
push
cmp
ret
cmps
in
push
iret
fs
sti
jns
inc
inc
stos
dec
jmp
xor
sub
adc
fcomp
cmp
retf
or
sbb
pop
and
test
jae
mov
movs
sub
nop
mov
sub
inc
jmp
popa
(bad)
dec
fndisi(8087
mov
pop
jecxz
sahf
inc
cmp
push
(bad)
stc
mov
cmp
push
adc
pop
dec
in
fistp
sbb
(bad)
adc
inc
inc
shl
or
inc
mov
outs
mov
mov
arpl
movs
out
jbe
(bad)
popf
mov
add
hlt
rcl
aas
cmps
adc
mov
push
cwde
clc
aad
or
sbb
push
xchg
and
adc
jne
adc
add
lahf
inc
adc
and
outs
adc
xor
push
add
sar
add
fdivr
inc
and
pop
mov
fistp
dec
sbb
fbstp
rcr
dec
push
dec
hlt
push
aam
(bad)
cld
cmp
mov
xor
pop
xor
add
ss
or
add
sbb
jg
test
scas
xor
cdq
dec
mov
cmp
mov
out
push
lods
xor
shr
pop
mov
sahf
pushf
or
pop
adc
bound
call
out
mov
(bad)
pop
pop
jg
iret
aad
sub
ret
mov
xchg
sbb
mov
iret
mov
rdmsr
pushf
push
xchg
(bad)
mov
xor
leave
push
cmps
popf
sahf
addr16
jg
mov
mov
cdq
inc
and
daa
pop
mov
jl
add
lock
aad
mov
xor
fadd
fnstenv
jne
jp
vprotq
mov
cmp
xlat
icebp
pop
sbb
sti
cmps
adc
cmc
sub
test
sbb
xchg
test
dec
sbb
or
gs
retf
pop
popf
shl
icebp
cmc
and
dec
cmp
push
add
add
hlt
and
sbb
inc
sbb
imul
jb
xchg
imul
inc
inc
(bad)
or
xor
cdq
imul
jb
jb
les
dec
outs
(bad)
push
retf
mov
retf
nop
adc
(bad)
mov
rcl
mov
mov
pop
test
retf
popf
cmp
ds
in
aad
inc
fistp
into
(bad)
jbe
cmp
mov
(bad)
leave
sub
into
push
pop
xchg
adc
push
add
cdq
gs
icebp
arpl
push
mov
out
pop
dec
mov
test
add
and
sub
pop
push
jne
in
xor
call
es
mov
push
or
inc
loopne
addr16
fidivr
inc
gs
loop
fldcw
jp
lock
imul
iret
(bad)
adc
xor
or
fist
sahf
sub
lock
imul
movs
out
test
mov
mov
aam
outs
inc
test
jae
pop
daa
cmp
adc
nop
cwde
push
pop
pop
inc
cmp
scas
adc
sub
cmc
ror
jge
(bad)
rcl
sbb
xor
in
sti
ins
adc
mov
dec
(bad)
fsubr
mov
and
xor
mov
stos
add
mov
int
into
sub
test
das
test
and
test
imul
mov
movs
push
push
(bad)
fbstp
mov
ja
sar
xor
mov
fadd
in
cmp
mov
push
mov
in
push
int
fcmovnu
dec
sbb
sahf
fdiv
pusha
pop
mov
or
sub
ret
clc
mov
and
adc
lock
dec
mov
rcl
mov
or
std
jae
enter
lea
mov
ins
dec
jecxz
scas
and
or
mov
sub
das
xchg
or
mov
adc
mov
xor
(bad)
push
push
pushf
out
xchg
pop
sub
fcmovnb
cli
mov
pop
fidiv
pop
push
mov
div
cmp
fs
cwde
sbb
aaa
sbb
mov
cmc
jbe
dec
(bad)
(bad)
call
sub
push
shr
es
sub
cmp
(bad)
ja
inc
sbb
int3
popa
call
or
dec
or
out
sub
pop
les
cmps
and
mov
push
dec
stc
and
sbb
xor
js
cmc
out
push
loope
dec
sbb
adc
fnstsw
or
mov
mov
jne
inc
and
cwde
jb
sbb
popa
int3
loopne
xlat
(bad)
xchg
(bad)
aad
mov
xchg
cmp
(bad)
fimul
adc
xor
stc
sbb
jmp
fldz
cmp
dec
cmp
mov
test
add
pop
js
add
int
arpl
imul
and
out
or
jecxz
test
fidivr
mov
and
arpl
std
mov
frstor
and
or
and
jp
xor
es
out
sbb
pop
jecxz
sti
mov
adc
add
imul
xor
mov
push
cmp
xor
and
(bad)
jae
push
push
pop
xchg
outs
retf
stos
push
add
sbb
hlt
or
test
mov
in
push
iret
xlat
mov
mov
stos
xchg
into
cmp
lock
mov
es
ss
jno
stos
lods
pop
sbb
xchg
push
xor
pop
cs
test
cli
shr
mov
(bad)
push
aas
mov
data16
fs
mov
jge
mov
cmp
in
(bad)
aam
sahf
es
cli
xchg
adc
jo
xchg
aas
fstp
xor
or
mov
inc
leave
imul
push
xlat
mov
pop
xchg
iret
stc
fdivrp
fldcw
cmpxchg
test
adc
(bad)
mov
pop
add
xor
inc
pop
faddp
xchg
loop
and
cmp
dec
pop
and
cdq
in
adc
xlat
fstp
call
xor
pop
pop
cmp
jb
in
mov
and
jg
adc
aaa
add
mov
in
sbb
shr
push
push
ja
jae
shl
and
jmp
jle
jno
push
daa
mov
test
dec
jne
inc
sbb
js
idiv
scas
nop
mov
fldz
xor
repz
imul
aas
ins
je
jno
sub
push
or
and
cwde
lods
add
jne
lds
popa
pusha
sub
in
mov
jae
(bad)
call
and
mov
xor
sahf
push
pop
cmps
out
sar
and
pop
add
adc
fwait
addr16
test
xor
mov
and
ret
fidiv
sub
fsub
mov
inc
lods
retf
jb
jo
ins
cmps
js
xchg
and
retf
dec
pop
and
mov
adc
cwde
and
cmp
popa
mov
jp
sbb
and
ins
je
mov
push
push
(bad)
dec
jmp
dec
jg
pop
fwait
pop
dec
xor
mov
loopne
jnp
jle
adc
jo
int
sahf
mov
mov
or
fwait
je
dec
(bad)
pop
pop
addr16
fsubr
sub
retf
aaa
call
pop
push
fs
add
pop
movs
fbld
pusha
cmp
in
xchg
jecxz
lea
in
mov
or
mov
push
pop
cs
fiadd
push
add
in
jg
jl
shl
mov
jl
mov
mov
pushf
mov
imul
or
jg
ffree
xor
loope
xlat
cli
iret
mov
mov
test
outs
mov
repz
cli
and
pop
ss
jb
sub
aaa
push
mov
aam
clc
das
pop
stc
sub
adc
mov
adc
lods
pop
movs
dec
popa
jle
and
daa
shl
mov
xchg
adc
fisubr
cli
and
pop
xor
arpl
out
add
dec
sar
inc
cmps
fnstsw
call
div
xor
lods
leave
out
adc
call
fdivr
inc
in
adc
pop
aam
lods
daa
cmps
jle
mov
sub
(bad)
repnz
popa
or
add
pop
cmp
jns
push
repz
pop
sbb
xor
sbb
mov
jge
sub
aas
sub
out
aas
in
inc
es
mov
mov
ret
jg
dec
repz
scas
lds
xor
ror
in
adc
sahf
add
mov
rcr
cdq
add
mov
sbb
or
cmc
mov
lock
add
(bad)
cli
adc
mov
cmp
bound
ins
sar
mov
rep
or
movs
movs
xchg
xor
mov
call
(bad)
push
pop
mov
sbb
jnp
jl
sub
inc
sub
sbb
cmps
xor
ror
je
(bad)
lahf
pop
or
adc
lds
ins
xor
mov
pop
sub
and
xor
imul
mov
xchg
inc
into
jo
or
shl
inc
icebp
test
xor
sub
aam
jge
fwait
mov
mov
iret
mov
pop
test
inc
lock
push
adc
xor
xchg
sub
jmp
inc
es
scas
sbb
sbb
gs
scas
stos
es
mov
push
cmp
push
ss
xchg
rcr
mov
jb
retf
dec
out
push
rol
push
clc
cmp
call
jmp
push
add
push
mov
mov
sti
and
movs
int3
jmp
push
pop
(bad)
stos
fcom
or
add
call
das
mov
push
sub
retf
adc
sbb
aam
outs
les
xchg
mov
pop
mov
in
inc
cmps
inc
dec
sti
(bad)
inc
cmps
cmp
adc
repnz
jg
dec
in
mov
aad
js
and
sub
or
sbb
addr16
push
sub
outs
imul
fsin
dec
stc
jle
retf
or
sti
mov
xchg
cmp
test
or
sbb
pop
cs
lock
jmp
fwait
jae
inc
addr16
adc
jecxz
pop
pusha
xor
mov
mov
test
outs
push
ret
test
pop
imul
hlt
mov
adc
cs
or
push
pusha
pusha
mov
or
sbb
sbb
daa
stos
out
adc
je
(bad)
loope
nop
and
xor
add
adc
and
push
sbb
retf
in
popa
aad
push
push
(bad)
test
and
popa
or
aaa
shl
mov
push
mov
mov
cmp
movs
cli
mov
push
out
jle
jmp
scas
or
cld
inc
mov
in
jnp
mov
mov
jp
add
cmc
ds
push
push
icebp
inc
shl
vphadduwq
push
push
push
mov
(bad)
jle
loop
sub
leave
mov
xchg
inc
and
shld
xor
add
repz
addr16
mov
movs
imul
rcr
mov
sub
cmp
imul
pop
fldenv
jecxz
test
cmps
sub
fbld
push
or
xchg
xor
into
push
repz
and
shr
icebp
imul
lahf
and
cmp
js
jecxz
push
push
xchg
or
jne
push
adc
ror
adc
jmp
aam
xchg
jbe
in
pushf
jo
in
sbb
or
movs
push
or
lods
push
mov
(bad)
call
xor
pop
imul
movs
aam
add
call
xchg
add
mov
xchg
nop
push
mov
add
xor
mov
ret
lds
ja
jno
pop
push
(bad)
psadbw
jae
pop
scas
aam
xlat
xchg
lds
push
jb
inc
(bad)
repz
sub
add
mov
hlt
cmp
ret
call
je
adc
push
test
mov
repnz
les
loope
pushf
jmp
mov
aaa
push
cli
or
sbb
loopne
sti
xor
and
mov
adc
pop
jnp
jbe
cmp
cmp
or
movs
or
pop
xor
(bad)
cli
dec
out
jmp
add
mov
xor
dec
push
mov
jp
mov
mov
mov
dec
mov
test
xlat
pop
mov
and
test
clc
out
loopne
movs
(bad)
scas
inc
stos
clc
xchg
xchg
jg
xchg
aad
jp
add
xor
mov
iretw
lods
mov
pop
jb
ja
push
adc
dec
and
sbb
jbe
dec
gs
outs
xchg
movs
lds
ror
and
les
or
sbb
inc
(bad)
fimul
jp
mov
mov
sub
jle
ins
pop
loopne
fsub
hlt
addr16
sar
lds
shl
sub
adc
adc
cs
jbe
stc
call
xor
out
inc
push
repnz
ror
push
lahf
mov
sub
mov
mov
lods
xor
xor
aas
jne
push
loope
xchg
push
test
in
shl
mov
xchg
test
jecxz
inc
mov
mov
push
jmp
add
int3
pop
imul
pushf
xor
add
add
(bad)
out
push
mov
pop
lds
fild
cld
and
in
aaa
sub
adc
mov
sub
pop
data16
mov
fldl2e
mov
push
pop
xor
mov
inc
inc
fcomp
push
fwait
aad
dec
pop
push
push
push
jl
cmp
popa
mov
out
add
call
xor
add
movs
add
or
cli
div
fisubr
add
sbb
sbb
adc
sbb
std
fild
mov
mov
adc
mov
dec
lea
add
xchg
inc
test
dec
dec
inc
push
out
or
mov
test
xlat
mov
xchg
loope
pop
adc
lods
je
push
mov
sbb
mov
out
outs
pop
adc
pop
std
mov
adc
xor
in
call
xchg
pop
mov
fwait
or
mov
data16
pop
sub
inc
punpckhbw
dec
xchg
(bad)
es
adc
pop
cmps
pushf
mov
(bad)
jno
and
xor
leave
cmp
call
std
mov
ins
(bad)
push
stc
jae
popa
test
sbb
je
fucomi
mov
sbb
int3
adc
inc
mov
pop
mov
int
xchg
jmp
cli
in
icebp
or
mov
popf
std
jo
cmp
and
sub
lds
mov
add
frstor
fs
sub
jno
stos
popa
arpl
sub
dec
mul
push
mov
(bad)
mov
or
(bad)
inc
xor
jmp
lods
clc
adc
retf
cmps
and
mov
cmp
rcr
and
cmp
test
into
cmp
ds
inc
out
adc
scas
neg
in
sti
sti
dec
outs
sti
inc
int
stos
ret
push
mov
sub
es
pop
lds
pop
pop
add
pop
push
(bad)
fld
repz
test
xchg
mov
or
jo
sbb
jmp
(bad)
xor
sar
push
fst
les
mov
call
inc
add
aaa
(bad)
icebp
ret
mov
repnz
shl
cld
je
inc
(bad)
aaa
add
sbb
cld
sbb
sub
push
inc
fidiv
nop
out
adc
mov
cli
xchg
das
cli
mov
sti
mov
jno
xchg
or
inc
sub
bswap
push
ja
int
cmps
outs
lahf
add
scas
popf
repnz
adc
pop
les
js
scas
adc
imul
retf
dec
jae
pop
add
push
sbb
ins
sub
in
adc
and
neg
push
(bad)
and
push
cmc
pusha
pop
(bad)
or
mov
loope
dec
(bad)
cli
xchg
fist
mov
icebp
scas
fs
ficom
(bad)
jae
jp
hlt
inc
inc
or
jge
push
pop
jns
and
repz
cmps
nop
xchg
test
test
imul
xchg
pop
cmp
add
and
inc
scas
sub
jnp
inc
mov
ins
add
jge
and
outs
into
ret
mov
pop
addr16
jno
xor
push
mov
xchg
leave
faddp
(bad)
sbb
cwde
jns
dec
push
inc
push
iret
dec
add
sbb
add
in
push
pop
iret
iret
fst
adc
out
call
in
mov
lds
mov
(bad)
xor
aad
inc
das
xchg
adc
push
test
cs
shl
xlat
cmp
jno
pop
push
stos
nop
push
adc
stc
push
push
pop
call
xchg
jmp
fstp
or
mov
in
test
adc
inc
retf
inc
inc
xor
mov
enter
out
clc
dec
inc
ins
ret
push
mov
pop
(bad)
mov
jne
das
pop
cs
pop
and
cmps
cmp
pushf
retf
or
mov
jb
lahf
stos
xchg
retf
adc
mov
in
add
cmp
ins
in
into
imul
or
inc
push
cmc
scas
sbb
loop
mov
push
jbe
sub
pushf
mov
inc
and
test
or
and
in
repz
fcmovu
aaa
pop
rcl
in
jge
pop
hlt
xchg
sbb
fcomp
add
pop
outs
hlt
out
icebp
leave
cwde
daa
xchg
sbb
push
and
xchg
pop
cmp
jae
add
(bad)
sbb
lea
jns
cmp
jmp
mov
xchg
ins
push
push
inc
pop
movs
test
stos
cmp
or
(bad)
cwde
push
shl
gs
pop
adc
jns
(bad)
mov
call
inc
mov
pop
jnp
xchg
jmp
stc
dec
fidivr
lods
add
mov
cmp
mov
sbb
mov
sahf
movs
(bad)
lock
pop
push
lahf
xchg
iret
dec
mov
(bad)
outs
sbb
push
adc
ret
in
jecxz
sbb
mov
aad
popf
data16
mov
test
stc
js
inc
inc
xchg
pop
rcr
leave
test
add
shl
retf
sub
inc
xchg
int3
aas
and
ds
addr16
aaa
pop
xlat
out
cli
cs
and
mov
loop
ror
xchg
aam
adc
aad
sub
outs
dec
push
push
pop
les
xor
jp
test
sub
mov
aad
mov
bound
cwde
jno
jl
aas
xor
dec
inc
(bad)
cli
das
mov
stos
adc
push
leave
sub
dec
stos
mov
ror
xchg
mov
pushf
and
(bad)
and
pusha
cmps
sbb
popa
jo
mov
mov
and
sbb
aad
rcl
das
cs
mov
and
pop
push
int
sbb
out
test
add
loope
xor
fist
ja
and
lods
or
(bad)
sbb
leave
call
inc
or
(bad)
adc
jge
test
or
test
pop
into
shr
xor
rcl
je
sbb
into
jo
or
xchg
fldcw
pushf
sahf
dec
xchg
sbb
fidiv
xor
repnz
mov
mov
xor
jle
sahf
sar
jnp
movs
jae
add
std
rcr
and
dec
mov
add
mov
inc
leave
add
ror
scas
clc
mov
and
or
fs
arpl
pop
dec
fmul
(bad)
pushf
cmp
and
mov
cmps
(bad)
lea
mov
movs
jecxz
sahf
stos
lea
xchg
sbb
enter
inc
std
push
loope
jbe
inc
sub
push
in
push
sub
mov
lea
jl
into
pusha
xchg
dec
adc
add
jle
dec
and
mov
cmps
jecxz
aas
add
daa
cmp
xchg
aam
adc
mov
pop
movs
xor
push
or
fst
(bad)
cmp
fwait
cmp
xchg
mov
pushf
lods
mov
jns
inc
movs
fs
arpl
les
mov
add
mov
icebp
lods
mov
out
lock
inc
fadd
(bad)
mov
jmp
jne
pusha
mov
repz
cmp
stc
xor
fist
lea
mov
inc
ss
add
push
pop
xchg
sub
cmc
add
retf
jmp
sub
pop
push
xchg
ret
movs
pop
and
xchg
sti
push
js
data16
ss
sbb
hlt
sub
repz
add
rcl
xor
mov
xor
ffree
pop
fld
adc
test
jnp
push
das
pop
sbb
adc
repnz
shl
add
mov
bound
arpl
cmc
mov
sub
mov
push
pusha
sbb
repz
leave
sub
mov
jne
sbb
cdq
pop
fsub
stos
push
outs
je
gs
push
ret
push
sub
div
jg
and
sbb
jmp
xchg
cmps
push
ss
pop
rcl
jns
rol
sbb
fsubr
adc
test
push
(bad)
jb
jge
push
repz
mov
ss
push
inc
bound
(bad)
fwait
or
push
cmps
sti
fldcw
jp
mov
dec
and
mov
add
call
xor
(bad)
push
inc
mov
jl
in
xchg
jmp
sub
mov
pushf
(bad)
shl
xchg
je
mov
or
in
jnp
and
out
imul
int3
jne
dec
lods
sbb
cmps
add
mov
lahf
and
aam
aam
(bad)
scas
sub
mov
(bad)
jle
adc
add
sub
out
(bad)
cmc
jb
shl
or
jo
imul
dec
das
cs
add
es
xchg
push
mov
loopne
test
out
mov
cmp
mov
aas
xchg
or
push
retf
movd
pop
mov
jmp
mov
icebp
xchg
inc
mov
es
fstp
stc
scas
jmp
sub
add
xor
int3
pop
mov
imul
lods
sub
jg
mov
fisub
or
sbb
cdq
dec
cmc
push
pop
dec
jns
mov
add
mov
fst
sbb
push
jle
ds
(bad)
psubsb
or
mov
lahf
xchg
(bad)
or
xchg
mov
(bad)
pop
inc
mov
jle
push
lock
xor
jcxz
push
jbe
cdq
push
adc
cmp
push
push
lea
xchg
cmp
scas
je
dec
xchg
iret
cmps
lods
dec
push
cld
jb
(bad)
dec
xchg
les
aaa
scas
sbb
cmc
sub
jp
idiv
add
inc
arpl
dec
mov
aam
out
pop
(bad)
outs
push
cmc
lea
xchg
mov
add
sbb
sbb
pop
ror
jne
and
jo
out
push
(bad)
ja
inc
icebp
les
cmp
in
mov
test
mul
nop
cld
mov
fs
je
and
sahf
ins
dec
push
out
jecxz
cwde
sbb
(bad)
cli
mov
lods
jns
in
cmps
pop
aad
daa
push
scas
sub
loopne
or
sbb
push
add
pop
call
cli
jmp
jmp
sbb
adc
imul
dec
in
mov
or
pop
call
mov
lods
sahf
mov
mov
outs
and
dec
rcr
or
rcl
test
imul
ins
imul
mov
lock
sbb
sub
inc
in
sub
pop
test
jno
xor
xchg
dec
jnp
dec
fisttp
push
mul
fild
repz
call
pusha
lods
inc
and
push
jns
(bad)
adc
xchg
cli
mov
fs
sub
xchg
jle
scas
mov
xchg
and
les
arpl
je
xchg
adc
dec
xchg
dec
out
scas
or
popf
add
(bad)
repnz
sahf
lods
mov
jl
jo
aas
aad
(bad)
mov
mov
add
inc
and
and
mov
cmp
inc
imul
mov
cmp
pop
test
inc
cmps
inc
retf
push
int3
pop
add
add
loopne
mov
out
cmp
mov
lds
inc
cwde
sbb
push
int3
jg
push
ins
mov
mov
adc
mov
push
push
mov
outs
push
pop
sbb
lea
(bad)
cmp
pop
xor
pop
push
pop
mov
sti
cmp
inc
jnp
ret
movs
inc
push
sbb
pop
sbb
pop
call
push
clc
cli
outs
fsubr
pushf
mov
cmps
(bad)
popf
jo
xchg
mov
mov
ror
pop
imul
aam
popa
jmp
cmps
mov
test
mov
scas
out
dec
cmps
ins
cmc
imul
mov
inc
pusha
out
retf
jecxz
std
leave
push
sub
or
aaa
pop
cwde
add
pop
inc
inc
std
mov
bound
das
loope
mov
pop
rol
xlat
mov
push
in
stc
jo
mov
(bad)
cwde
and
hlt
mov
movs
nop
mov
sbb
pushf
mov
push
call
cmp
push
nop
inc
xor
faddp
push
jae
jp
xchg
xor
fwait
mov
or
fild
fld
lahf
test
add
imul
retf
jg
xchg
in
rcl
push
jle
rcl
movs
pop
adc
int3
into
ins
cdq
sub
and
imul
shl
add
xchg
imul
fisub
gs
inc
adc
mov
rcl
fnsave
imul
into
cmp
retf
and
js
retf
mov
out
or
pop
out
test
and
inc
inc
mov
xchg
and
push
sub
test
adc
lods
dec
cmp
(bad)
cli
and
jle
add
push
sbb
xchg
loope
pop
cmp
or
add
fwait
and
push
mov
(bad)
outs
(bad)
fisubr
mov
retf
loop
mov
push
into
rcr
in
aaa
fistp
push
xor
pop
jbe
cmp
je
fisttp
xchg
pop
sti
jp
lea
dec
sub
imul
out
push
cmp
mov
inc
inc
into
sbb
cwde
jns
and
inc
inc
push
shr
pusha
sbb
mov
mov
push
sub
test
cmp
pop
and
cmps
inc
adc
push
shl
fcomp
mov
mov
dec
push
cwde
mov
jnp
popf
or
mov
jg
sbb
leave
dec
and
xor
test
out
(bad)
mov
fcomp
jl
cld
outs
shr
ins
pusha
fdivr
or
cmps
ins
psraw
mov
dec
inc
xor
sub
leave
mov
loop
xor
ret
dec
sub
in
adc
push
sub
push
push
mov
pusha
push
cmps
sub
mov
daa
out
mov
jmp
fisub
jle
arpl
jmp
lods
add
push
xchg
icebp
outs
mov
fsubr
push
int3
push
mov
cmp
stc
sub
popa
mov
sar
repz
jmp
push
pop
call
mov
jno
mov
fdivp
and
fnstcw
div
mov
xor
push
pusha
leave
repz
sbb
inc
cmc
or
inc
xchg
adc
in
clc
xor
in
ds
cmpxchg
push
cmps
xchg
lds
mov
xor
mov
loopne
inc
adc
int3
sbb
call
cmp
mov
mov
jge
fs
mov
ds
push
mov
xchg
nop
xor
sbb
(bad)
push
(bad)
loope
in
sbb
or
sbb
mov
mov
mov
mov
sbb
push
add
sahf
stos
jecxz
pop
push
xor
mov
pop
je
in
mov
fld1
outs
dec
outs
imul
xchg
mov
pop
aam
cdq
cmp
mov
mov
je
in
and
xchg
ds
pop
icebp
push
mov
jmp
idiv
and
adc
fucomp
or
push
add
es
push
push
sahf
test
pushf
mov
xor
pop
sbb
and
nop
mov
pusha
and
std
movs
dec
and
sub
das
mov
push
sbb
stos
stos
out
inc
jnp
pop
gs
test
test
or
mov
mov
jle
or
daa
inc
out
jne
mov
les
jl
lods
cmp
jb
dec
cld
mov
loopne
inc
hlt
sbb
imul
iret
xor
daa
mov
jle
add
dec
adc
and
dec
or
sbb
stc
mov
pop
mov
(bad)
out
fiadd
inc
jno
mov
(bad)
imul
dec
jg
imul
inc
mov
sbb
mov
in
jp
add
ds
xchg
fwait
(bad)
retf
rol
pop
fisttp
inc
(bad)
pop
adc
mov
jge
sbb
xchg
fistp
fwait
jne
add
mov
mov
jmp
jg
outs
rcl
push
test
ret
mov
ret
movs
or
dec
call
jg
xor
sub
(bad)
into
inc
jbe
retf
push
or
mov
cmp
jl
fwait
rol
ds
mov
cs
sbb
loope
mov
push
fsub
frstor
sti
(bad)
cdq
cmp
ror
push
mov
pop
jo
aad
rdmsr
(bad)
push
in
xchg
lods
cdq
aaa
(bad)
adc
pop
and
lea
jne
add
dec
add
dec
movs
add
xchg
rol
jmp
fcmovbe
jo
imul
push
and
sub
jp
addr16
adc
mov
js
mov
pusha
loope
push
add
xor
add
add
ss
popf
out
sbb
daa
daa
clc
int3
or
outs
jnp
cmp
dec
mov
retf
inc
rsqrtps
mov
aas
push
mov
fcomi
add
sbb
outs
shl
pop
jmp
and
stos
lea
jp
leave
inc
ficomp
pusha
sub
js
popa
mov
xchg
fwait
pop
dec
cmp
mov
enter
cmp
dec
arpl
call
sysexit
inc
loop
stos
inc
push
jns
adc
and
cmp
in
into
sub
add
mov
dec
fnstcw
jp
push
sub
shl
je
ja
ds
test
inc
mov
rol
aas
stos
aam
inc
leave
rol
call
les
sbb
stos
push
inc
sahf
pop
pop
shl
nop
adc
dec
jl
ror
outs
pop
imul
push
div
mov
xor
xor
jg
ficomp
jg
stc
mov
jae
inc
sahf
jb
out
sub
xchg
xchg
aas
mov
mov
xchg
in
pop
xor
mov
sbb
retf
xor
test
out
jb
pop
jecxz
int
gs
movs
movs
xchg
into
popa
lods
pop
xchg
shl
push
(bad)
push
xchg
mov
or
and
jns
add
out
xchg
or
ins
sbb
fbld
xor
sub
ins
int
js
mov
cmc
(bad)
jo
fnstenv
mov
push
pop
mov
inc
stos
test
fsubr
xor
mov
lods
in
loopne
js
loop
sub
mov
cs
iret
pop
call
in
jns
jle
adc
mov
inc
add
lea
sbb
repnz
leave
into
sbb
push
push
out
mov
mov
xchg
fwait
xor
or
and
mov
(bad)
mov
xlat
pop
inc
mov
in
cld
push
retf
cmps
inc
cdq
loope
pop
in
stos
rcr
and
or
iret
es
adc
pop
or
fld
or
(bad)
cmps
test
jbe
or
mov
cli
rcr
xor
sbb
sbb
cmp
and
and
idiv
xchg
js
cmps
je
popa
retf
ja
loopne
cwde
sbb
pusha
clc
std
cmp
shl
mov
pop
and
add
lea
and
or
sub
xchg
stc
mov
cdq
xor
mov
sti
adc
mov
lahf
cld
ss
loop
add
les
je
inc
(bad)
xor
aad
cmps
dec
div
adc
test
add
push
ins
adc
in
or
jb
dec
sbb
mov
cmp
inc
jmp
in
cmps
mov
test
test
inc
cmps
ss
popa
pop
cmp
rol
fild
push
pop
arpl
enter
pusha
imul
push
lea
dec
and
jmp
loope
mov
ins
cmps
push
fcmovne
push
jl
aaa
push
ins
pop
and
arpl
vmwrite
icebp
mov
mov
mov
adc
sub
sub
xor
sub
jge
mov
mov
jns
push
pop
push
adc
repnz
inc
push
cmp
xor
xor
jge
jle
jge
add
(bad)
pop
fld
(bad)
and
cs
cmovp
mov
nop
(bad)
mov
cmp
push
cld
jnp
loopne
mov
cwde
xchg
pop
mov
lods
adc
(bad)
push
(bad)
mov
dec
xchg
xor
pop
enter
sbb
push
dec
adc
or
daa
pop
mov
mov
mov
mov
ret
cmp
jge
je
xchg
cmp
dec
mov
loope
pop
sbb
lods
ja
int3
sub
int
or
add
lea
jb
xchg
xchg
popf
xchg
mov
xor
push
adc
jg
ins
cs
dec
mov
icebp
xchg
in
mov
jns
lock
sbb
les
pop
push
adc
ret
imul
movs
js
outs
push
clc
int
arpl
jl
mov
xor
add
in
scas
fbld
mov
in
lock
in
mov
sub
fiadd
aam
scas
add
dec
aad
jmp
mov
mov
jne
sub
inc
shl
inc
push
shl
sbb
push
inc
jbe
mov
inc
push
xchg
xchg
out
mov
mov
xchg
inc
inc
js
call
call
xchg
adc
or
int3
gs
daa
mov
shr
pop
lods
leavew
(bad)
add
mov
push
dec
ja
inc
frstor
lds
or
push
mov
stos
sbb
ss
aam
xchg
jne
repnz
call
adc
xchg
mov
push
outs
popf
xor
inc
mov
jle
iret
or
jae
lods
pop
fs
repz
adc
mov
sbb
jp
jecxz
push
adc
jns
or
mov
or
enter
leave
xor
xchg
push
aam
lods
fisub
es
sti
fcom
pop
dec
jle
ins
sub
(bad)
je
push
arpl
arpl
mov
mov
push
sti
pop
jbe
push
fcom
icebp
scas
shl
xchg
or
setg
test
pusha
add
xchg
mov
cld
xchg
mov
call
and
mov
movs
jae
scas
sti
sub
jge
jae
xchg
mov
(bad)
mov
adc
fs
push
lock
in
pop
push
cld
pop
in
add
xlat
das
rol
pop
lods
aas
adc
jmp
(bad)
xchg
mov
gs
lock
scas
(bad)
out
push
xor
mov
pop
pop
clc
fadd
xor
cmp
test
jle
int3
movs
mov
push
shl
neg
aaa
nop
(bad)
xor
add
fidivr
mov
jb
adc
mov
aad
ja
jp
push
pop
sbb
mov
mov
mov
loopne
adc
js
cmp
mov
fst
cs
and
cmp
cmp
movs
mov
call
aas
pop
pop
out
add
sub
repz
bound
mov
push
cmp
inc
mov
mov
pop
push
in
aas
fcomp
push
fidivr
sbb
sbb
xor
cdq
mov
cmps
fwait
or
hlt
mov
inc
jne
mov
(bad)
push
fstp
fwait
dec
mov
loop
fdiv
ret
and
cli
sbb
pop
jl
mov
ret
bound
imul
cwde
stos
and
dec
xchg
movs
(bad)
ins
icebp
std
pop
add
mov
dec
(bad)
pop
jbe
sbb
cmp
adc
fdiv
pop
mov
enter
or
rcr
pop
stos
pop
mov
test
dec
fdivr
fsubr
lahf
add
sub
fisub
mov
pop
lock
out
nop
cmp
jb
pusha
jmp
jle
mov
rcr
repnz
mov
stos
inc
xor
jno
and
push
adc
shr
adc
adc
cmp
lods
or
jg
pop
add
jmp
bound
and
cmp
xchg
mov
addr16
pop
rol
cmp
jle
fs
jp
dec
scas
inc
popf
xchg
loopne
sbb
push
test
pop
ja
sub
repnz
(bad)
xor
xchg
dec
test
popa
add
nop
adc
inc
loopne
fnstenv
dec
sub
mov
div
jb
pop
dec
fsubr
jo
mov
lock
adc
adc
test
sbb
push
in
es
lods
aas
and
clc
and
dec
(bad)
jns
retf
xor
sbb
cmp
aas
ds
fldcw
and
cdq
or
ds
cmovae
jae
mov
pop
mov
dec
pop
stos
(bad)
(bad)
in
addr16
cmp
sahf
dec
aaa
popf
mov
and
mov
dec
loop
add
arpl
jmp
sti
rcr
cmp
lock
cmp
mov
sbb
push
(bad)
pop
dec
stos
mov
inc
repz
aad
jbe
push
lods
push
jno
mov
loopne
(bad)
sub
jbe
(bad)
cwde
cmp
mov
ins
cmp
das
pop
cmps
jb
in
jmp
movs
arpl
xchg
jmp
aas
xor
push
sahf
and
out
sbb
out
loop
or
pushf
ror
push
test
ja
jno
loopne
mov
push
jb
jecxz
cmp
imul
cmp
push
lea
out
fcmovnu
jnp
(bad)
in
mov
dec
inc
cdq
lods
pop
dec
dec
bound
inc
inc
in
icebp
retf
cli
add
inc
xor
aam
and
scas
adc
xor
call
and
imul
cmps
popf
inc
pusha
je
push
and
jo
jg
mov
push
xor
into
jns
repnz
movs
push
adc
pop
fimul
inc
loopne
ds
sub
ins
mov
jecxz
mov
xchg
call
test
xchg
lods
mov
push
xor
mov
ja
(bad)
jle
adc
xor
lock
mov
in
mov
fwait
lds
mov
push
test
mov
xor
xchg
xor
repz
jb
sbb
pop
retf
cmp
out
inc
sbb
rcl
ds
daa
cmc
neg
pop
popf
add
mov
pop
mov
cld
mov
xchg
adc
enter
xchg
fxch
dec
mov
dec
inc
add
out
aam
xchg
mov
xchg
push
inc
sahf
inc
ja
cmp
xor
add
jp
repz
(bad)
int
(bad)
movs
sahf
mul
in
fnstenv
popf
call
shl
adc
outs
add
int3
jno
test
push
mov
repz
lea
add
xchg
in
dec
and
adc
lods
in
call
test
jle
mov
aaa
mov
adc
jg
sti
xchg
pop
std
stos
pop
mov
pushf
inc
or
xor
or
shl
in
push
xor
mov
xor
gs
sbb
mov
icebp
jmp
lock
jno
mov
(bad)
pusha
and
dec
dec
dec
jg
in
cmps
(bad)
lds
bswap
add
repz
add
int3
fdivp
add
(bad)
xchg
push
pop
cwde
loop
retf
call
xchg
cld
repz
nop
mov
sbb
lods
sub
cmp
pushf
mov
inc
popf
daa
jns
sbb
int3
cwde
xor
out
mov
mov
int3
fist
nop
jb
mov
loopne
mov
fild
lods
xor
cmps
xor
xchg
add
into
rcr
or
jmp
mov
jbe
jnp
add
and
dec
(bad)
repnz
dec
xchg
stc
das
lea
mov
test
and
dec
not
xor
loope
push
add
mov
rcl
fwait
jge
xor
jo
mov
cmps
xor
(bad)
in
inc
sub
movs
sti
retf
xchg
dec
xchg
fnstcw
push
inc
gs
mov
push
mov
lods
scas
nop
mov
arpl
dec
mov
and
add
push
out
aaa
lock
mov
(bad)
imul
stos
jl
out
arpl
jecxz
sbb
cld
lock
push
je
in
out
jno
or
scas
mov
add
mov
mov
cmps
(bad)
je
pop
mov
test
std
dec
jno
add
popf
into
mov
enter
shl
inc
xor
sbb
test
stos
or
es
(bad)
cmp
push
retf
jnp
mov
sti
jbe
add
mov
xchg
and
xlat
outs
or
sti
xor
jb
jmp
ss
cdq
(bad)
dec
stos
or
(bad)
arpl
aas
jecxz
mov
stos
mov
inc
jecxz
jnp
and
sub
ins
ss
and
test
adc
push
fwait
leave
(bad)
mov
hlt
fwait
mov
push
in
sub
mov
sbb
add
ds
and
mov
dec
or
and
jns
int3
(bad)
call
mov
push
mov
mov
out
stos
xchg
aam
imul
mov
jmp
mov
ins
and
inc
mov
mov
bound
pop
scas
jno
lods
pop
xchg
mov
push
fst
ret
sahf
inc
mov
imul
loope
popa
mov
in
xor
pop
add
and
cmp
ret
adc
pop
pop
pop
mov
pop
xchg
add
cdq
gs
adc
out
nop
pop
test
ss
push
mov
pusha
jecxz
imul
mov
add
test
jecxz
fsubr
lea
mov
mov
xor
xchg
hlt
fisttp
pop
pop
xchg
ins
aas
fcomp
sar
dec
push
adc
inc
repz
cmp
jne
rcr
sar
mov
inc
fs
fidivr
sbb
jecxz
mov
push
and
or
jl
jmp
mov
fcomp
and
sbb
enter
in
push
add
loop
(bad)
and
dec
xchg
shl
mov
in
aad
xor
jb
rol
and
inc
pusha
aaa
rol
jo
jb
pusha
xor
retf
add
mov
fcmovbe
fcmove
sub
ret
fsincos
int3
ds
cdq
test
clc
dec
mov
push
sub
loope
push
(bad)
in
fsub
xlat
push
pop
xchg
aaa
pusha
stos
sti
ret
ins
dec
arpl
or
pop
push
jbe
or
adc
push
fbstp
mov
and
jno
xor
push
cmp
test
mov
or
test
cmps
jge
push
xor
mov
sahf
fist
dec
mov
and
jmp
pop
mov
gs
mov
js
and
(bad)
or
push
imul
test
(bad)
pusha
mov
mov
hlt
jno
jb
fwait
push
cmp
sbb
int
jl
and
mov
in
leave
outs
inc
inc
pop
imul
iret
xchg
sub
xchg
pop
mov
in
into
sub
pop
div
push
out
stos
pop
xlat
jp
adc
xchg
pop
pop
bound
mov
test
xor
movs
in
sub
fistp
pusha
xchg
shl
inc
pop
mov
pop
push
gs
rep
xchg
pop
sbb
adc
shl
xchg
push
pop
jbe
cli
dec
fild
ss
popf
stos
sub
std
mov
mov
dec
mov
dec
mov
xor
cdq
imul
pop
icebp
push
in
(bad)
out
stos
in
test
push
pop
add
pop
out
or
jbe
les
xor
lds
cmp
mov
cld
(bad)
out
dec
pop
xlat
fisttp
into
iret
ret
or
push
(bad)
cli
mov
hlt
jo
es
or
jbe
fisttp
mov
push
add
adc
jmp
lock
imul
arpl
ret
nop
pushf
lds
loopne
mov
add
jecxz
lea
add
ror
dec
popa
mov
ins
dec
imul
out
adc
call
(bad)
mov
add
rol
sbb
inc
and
sbb
mov
ja
cmp
imul
lahf
lds
xchg
or
push
cmp
ret
add
cmps
dec
mov
in
pop
outs
rcl
inc
pop
dec
adc
mov
sub
mov
dec
jmp
out
test
ss
xor
push
xchg
clc
jbe
jbe
data16
mov
xlat
adc
scas
int3
add
out
sub
out
mov
push
xor
data16
sub
sbb
in
push
mov
repnz
mov
aad
(bad)
and
cdq
push
les
sub
das
mov
bound
js
test
int
pop
in
cwde
xchg
push
icebp
dec
(bad)
add
cdq
frstor
jp
out
xchg
add
(bad)
mov
daa
loope
adc
arpl
push
mov
fcomip
cdq
mov
cmps
dec
shl
cmp
pop
aaa
idiv
pop
and
paddsb
add
test
lock
jl
stc
imul
imul
imul
cmp
pop
outs
aaa
outs
mov
js
les
add
adc
out
scas
je
stos
xchg
aas
sub
or
out
je
mov
in
test
xchg
cli
mov
mov
mov
push
pop
or
mov
inc
xchg
iret
fbld
enter
enter
push
mov
add
dec
mov
repz
daa
mov
cmps
or
add
xchg
(bad)
xchg
cld
lea
outs
test
pop
mov
ss
clc
sar
loop
or
inc
inc
jbe
scas
push
sahf
jecxz
jmp
adc
add
sbb
push
cmp
push
in
inc
add
sbb
xchg
imul
mov
fmul
outs
dec
lods
adc
push
(bad)
test
sbb
popa
cmp
add
hlt
into
gs
scas
jo
add
add
fs
xchg
dec
cmp
mov
and
xor
jo
add
fnsave
add
call
add
xlat
ja
into
dec
xor
out
out
repz
das
out
movs
and
lods
adc
test
arpl
aam
(bad)
gs
and
mov
mov
aam
mov
jmp
aad
and
ret
in
cmps
cwde
sbb
mov
fcom
faddp
push
dec
and
lgs
fnsave
and
cmovb
jmp
jg
bound
pusha
mov
sbb
push
retf
jle
or
dec
xor
pushf
sub
and
mov
or
lock
push
dec
fisub
call
mov
out
jmp
call
mov
ja
push
jne
pusha
push
cmps
mov
in
push
add
popa
xchg
xchg
pop
data16
sbb
sub
or
fisubr
xor
cmp
xor
jbe
cmp
sbb
xlat
jns
cmp
dec
repz
dec
in
loop
jmp
push
mov
sbb
out
push
xor
stos
or
and
shr
aad
mov
cmp
jmp
add
mov
inc
xor
add
loopne
push
mov
std
push
push
mov
aam
(bad)
out
nop
or
or
cmp
or
gs
inc
fldcw
mov
pop
xchg
rcl
out
outs
mov
xor
jmp
(bad)
pop
shl
int3
lea
popa
mov
(bad)
rcr
test
icebp
adc
out
cmps
es
gs
shl
in
push
outs
sbb
stc
and
iret
ins
pop
add
xor
cwde
ret
sub
pop
dec
jb
cwde
adc
mov
jg
loopne
inc
pop
dec
retf
mov
inc
add
cmp
pop
test
pushf
mov
or
jno
xor
inc
call
shr
cmp
mov
sbb
dec
jbe
bsr
xor
xchg
aaa
shr
in
push
push
jbe
cmp
or
jno
test
sbb
dec
(bad)
jge
sar
out
int3
pop
retf
imul
sub
fisubr
pop
mov
bound
lea
and
je
cs
test
data16
xor
dec
mul
xchg
sub
xchg
shr
mov
fs
push
add
or
test
in
imul
ror
pusha
mov
shl
cmc
sbb
and
call
jno
jmp
test
xlat
call
idiv
jmp
mov
xchg
and
mov
pop
pushf
mov
inc
and
lock
test
push
dec
imul
int
jnp
mov
jecxz
clc
data16
retf
out
in
fstp
fist
(bad)
in
adc
jmp
repz
adc
mov
test
dec
xor
jae
pop
mov
push
jmp
fild
gs
mov
push
add
dec
cs
js
push
mov
lahf
cmp
mov
and
in
lahf
mov
sub
inc
jo
jge
jno
push
lock
mov
inc
mov
or
mov
sbb
stos
mov
scas
fld
push
pushf
stc
and
leave
mov
and
(bad)
adc
fdivr
mov
hlt
xchg
stos
jbe
mov
test
adc
lds
pop
sbb
mov
xchg
popf
into
jp
jmp
cld
add
inc
and
daa
ins
shl
mov
mov
push
sbb
jb
jg
ret
adc
mov
push
add
data16
inc
repz
sahf
sbb
imul
mov
mov
ret
in
push
popa
js
imul
push
ins
div
add
mov
fadd
sbb
pop
outs
lahf
sbb
inc
mov
(bad)
ins
sub
dec
lahf
cli
jmp
pop
dec
test
xchg
adc
dec
jnp
push
jle
popf
fild
dec
xchg
cmps
dec
jb
jg
repz
out
pusha
ins
xor
psrad
cmp
xor
addr16
adc
imul
fmul
inc
aam
add
xor
in
mov
div
sub
jl
mov
or
lahf
scas
sbb
lods
les
scas
mov
xor
cmp
cmp
pop
xor
push
mov
popa
cmp
dec
mov
and
pop
push
pop
(bad)
in
jno
mov
xchg
pop
inc
ret
jbe
push
adc
out
sub
jle
inc
or
out
lock
push
ds
int3
xchg
cmp
xor
mov
adc
shr
in
aad
jns
mov
dec
mov
cmp
mov
stos
jno
jg
mov
jmp
pushf
and
jg
rcl
mov
mov
pop
mov
mov
(bad)
js
cwde
fcomp
mov
sbb
push
push
fsubr
ret
add
mov
rcl
(bad)
xchg
mov
mov
push
sbb
ficomp
movs
in
xlat
xchg
sub
pop
iret
sub
int
xor
int
in
mov
jnp
push
cmp
loop
jmp
pop
cmps
fucomip
mov
inc
out
in
bound
lea
and
jb
mov
dec
pop
mov
add
sub
adc
sbb
iret
in
(bad)
sub
enter
dec
mov
or
adc
ret
es
pop
jae
mov
and
push
out
xchg
and
lea
or
jnp
and
adc
movs
adc
push
or
icebp
dec
jb
sbb
push
in
or
cld
jnp
sub
out
xor
adc
push
into
dec
pop
lods
pop
mov
out
jbe
sbb
mov
push
sbb
call
or
loopne
mov
or
fnstenv
imul
(bad)
icebp
dec
cmp
(bad)
sti
mov
push
imul
sub
out
or
pop
sbb
(bad)
sub
and
push
inc
adc
into
add
ins
test
jg
cmps
shl
ja
cld
scas
(bad)
iret
sub
mov
aad
outs
popa
(bad)
aaa
jecxz
jne
lods
sub
jno
loop
adc
sbb
sbb
push
arpl
cmp
rcr
xor
ret
test
int3
pusha
xlat
outs
movs
les
push
pop
ja
cmp
xor
pop
loopne
daa
cmps
inc
ins
inc
fisubr
sbb
sbb
data16
push
aas
jmp
out
xchg
jne
sub
xchg
popf
scas
xchg
mov
cmp
fist
mov
loop
and
sbb
les
stos
fnstsw
jle
adc
cwde
into
jge
mov
or
cmp
xor
pop
add
and
int
fcom
and
xor
in
xor
fs
out
(bad)
clc
outs
push
hlt
dec
cs
cmps
lock
(bad)
hlt
dec
inc
(bad)
xor
jne
xor
adc
out
mov
sub
repz
pop
adc
sbb
push
in
add
test
lea
sbb
push
out
and
ja
je
cmp
sub
movs
out
fucomi
cmps
test
pop
cmps
inc
cld
lahf
sbb
xchg
inc
pop
imul
sbb
icebp
xor
fwait
rol
sbb
cmp
stos
mov
aad
cs
in
popa
jae
mov
cmps
out
aas
add
sar
call
mov
inc
iret
cmp
sub
ins
leave
test
sub
sub
jb
sbb
jecxz
sub
xchg
clc
movs
fsin
pushf
ins
mov
sub
inc
aaa
mov
jae
pop
mov
shr
arpl
mov
outs
mov
(bad)
push
add
cmps
push
dec
xchg
xor
dec
test
mov
stos
jmp
call
ins
jecxz
sahf
or
std
mov
sbb
leave
ret
mov
xchg
add
cmp
dec
mov
out
mov
push
lods
xor
push
and
(bad)
aam
dec
psubusb
loope
rol
mov
enter
or
sbb
rcl
inc
lahf
mov
add
sub
js
pushf
imul
sub
xchg
pop
das
inc
or
(bad)
mov
push
rcr
imul
push
retf
inc
mov
lahf
xchg
repz
pop
xchg
hlt
bound
shr
xor
jno
jmp
dec
rcl
fidivr
sub
and
mov
sbb
(bad)
loope
mov
dec
xor
xor
call
aam
mov
mov
dec
or
js
aaa
cmp
sub
test
ins
scas
test
xchg
popa
pop
std
mov
dec
shl
lods
jns
mov
ss
lahf
icebp
addr16
xchg
jnp
mov
xor
outs
inc
mov
add
je
sbb
xchg
sbb
jp
repz
dec
in
push
and
repz
dec
int
jae
mov
popa
lahf
xchg
nop
jl
aaa
(bad)
push
je
les
xchg
test
dec
aaa
cmp
dec
cmp
stos
inc
adc
scas
xchg
into
jnp
fmul
pusha
shr
mov
hlt
movs
out
mov
pop
and
adc
mov
fdiv
mov
pushf
pop
and
mov
cmps
push
shl
mov
mov
(bad)
sub
dec
and
jmp
inc
fs
mov
inc
mov
movs
xchg
mov
(bad)
aad
cwde
outs
movs
pop
retf
xor
mov
jp
out
dec
frstor
sub
ins
sub
add
jecxz
cmc
mov
test
mov
lods
cmc
push
dec
(bad)
jbe
dec
jnp
adc
lock
push
sysexit
mov
jae
je
loope
scas
dec
rol
stc
xchg
xchg
stc
jecxz
cmp
es
mov
cmps
cmp
std
mov
stc
cmps
fcom
push
loop
sub
push
lahf
repnz
aaa
mov
inc
pop
in
(bad)
jecxz
adc
aam
cmps
loope
xor
push
outs
jae
add
add
popf
test
mov
jne
jne
dec
cmp
and
and
dec
xor
inc
add
imul
inc
and
or
xor
clc
push
cmp
and
inc
pop
fbld
push
xor
rol
cwde
repz
mul
cmps
pop
jae
xor
mov
push
lods
dec
aas
dec
cmova
or
push
mov
test
cdq
lahf
mov
sbb
push
mov
dec
inc
sar
fstp
push
sbb
fnstenv
inc
int3
cmp
hlt
popf
stc
mov
pop
adc
repz
push
(bad)
xor
pop
sbb
inc
dec
adc
cmp
mov
or
into
cmp
inc
test
push
sar
test
jb
add
scas
pop
lods
leave
or
xlat
jmp
sahf
hlt
push
push
sbb
mov
les
mov
fist
les
mov
pop
inc
cli
call
pop
lock
pop
sub
jbe
xlat
call
not
repz
pop
enter
(bad)
mov
xchg
shr
arpl
(bad)
sbb
into
pop
mov
lea
fsubr
arpl
cmp
daa
into
mov
adc
inc
dec
call
inc
dec
scas
xchg
mov
and
xchg
jmp
(bad)
jge
add
mov
dec
mov
call
scas
sti
fwait
cwde
call
pop
dec
ss
mov
pop
dec
cmp
pop
movs
arpl
clc
adc
inc
popf
sub
sbb
mov
ins
lods
xchg
(bad)
mov
pop
push
repnz
fdivr
aam
xchg
pop
sbb
hlt
sbb
push
int
inc
cwde
add
call
repz
pusha
outs
js
jg
cmps
test
xchg
jmp
pop
cwde
pop
ja
push
popa
pop
or
mov
cmp
cmp
aas
aad
xor
xor
inc
call
jo
dec
adc
push
adc
js
adc
mov
and
cld
aam
in
add
mov
pusha
pop
jnp
or
inc
jmp
or
adc
inc
or
pop
and
gs
imul
leave
rcl
or
les
xchg
icebp
add
push
loop
call
or
cs
mov
std
xor
push
or
adc
or
in
push
out
sbb
rcl
sub
adc
(bad)
rol
push
test
(bad)
shl
outs
cmp
jae
imul
test
inc
scas
loop
out
sahf
push
dec
push
arpl
xor
pop
nop
jne
mov
xor
xor
jmp
gs
(bad)
dec
xor
les
inc
rcl
dec
mov
nop
cmp
aaa
call
cmp
ret
sbb
sub
enter
inc
sar
adc
nop
aas
cmp
sub
stos
jmp
hlt
push
add
push
test
add
mov
rol
sahf
xchg
jmp
push
mov
(bad)
mov
pop
imul
pop
jmp
add
cmp
sti
ins
sub
lods
sbb
adc
xchg
jbe
mov
add
cmp
sub
mov
mov
out
stc
xor
mov
jns
scas
sti
pop
and
push
js
sbb
movs
aad
push
ins
mov
fwait
mov
or
sbb
mov
imul
mov
out
sbb
test
pop
stc
or
adc
int
int3
inc
jge
xchg
call
aam
out
xor
js
inc
cwde
mov
mov
push
xchg
cdq
sbb
cmps
dec
sbb
test
pop
jae
in
in
cmp
popa
pop
and
inc
stc
cmp
je
jp
xor
cwde
nop
sub
into
jmp
mov
and
jp
dec
repz
pop
sub
xchg
or
enter
mov
mov
imul
out
push
add
in
pop
inc
push
pop
mov
imul
mov
xor
xlat
mov
add
aad
jp
jae
call
mov
mov
call
push
jmp
jmp
pop
jb
mov
xchg
or
xlat
adc
test
lea
xchg
aad
retf
xchg
repnz
mov
shr
add
mov
shr
fwait
jb
(bad)
mov
pop
movs
repz
jb
dec
pusha
test
movs
das
push
fild
sbb
pop
div
jge
xchg
add
push
sub
pop
enter
inc
lea
(bad)
nop
or
sbb
push
and
mov
call
(bad)
es
aaa
cli
aaa
add
mov
retf
mov
ret
cdq
fstp
ds
sbb
ins
xchg
dec
in
loopne
cmps
jno
ja
mov
loop
pop
shl
xchg
add
jns
xor
push
retf
movs
add
mov
or
mov
cli
cwde
pop
fistp
jae
in
jmp
ficomp
sbb
push
dec
mov
adc
xor
lods
mov
jmp
jmp
ins
not
dec
xchg
cmp
out
int
or
sub
cmps
inc
(bad)
sub
cmp
jl
std
test
sub
test
push
aam
or
cwde
add
cmc
daa
pop
mov
mov
in
leave
push
or
push
mov
in
dec
xchg
ins
cmp
sahf
pop
stc
and
lods
fdivr
cmp
xor
scas
cdq
push
dec
jmp
jmp
test
and
add
test
int
loopne
inc
call
xchg
and
pop
adc
push
(bad)
sti
or
cmps
dec
xor
shr
inc
xchg
lds
loop
adc
test
sub
aas
pop
and
addr16
out
dec
(bad)
jmp
loope
retf
sub
in
ss
out
shr
add
xchg
cmp
popa
sbb
add
dec
ret
lods
cmp
inc
push
push
bound
jmp
cli
mov
retf
ret
imul
jae
jle
les
lods
std
sub
xor
sar
xor
or
call
and
pop
xchg
mov
push
sahf
and
(bad)
adc
sti
outs
fadd
or
mov
dec
mov
jl
popf
sahf
ret
and
ins
xor
mov
std
mov
mov
push
and
inc
adc
pop
loopne
push
inc
adc
push
jbe
mov
jns
in
test
imul
inc
add
mov
or
ins
mov
test
mov
loopne
inc
push
stc
out
or
cmp
std
or
lods
xor
ja
mov
xchg
mov
adc
add
(bad)
das
out
mov
mov
inc
jne
and
ja
adc
cmp
fisubr
loop
mov
adc
or
ins
inc
mov
shl
and
cdq
imul
scas
add
pop
cmc
dec
test
daa
or
icebp
mov
xor
sbb
add
fldcw
int3
pop
adc
imul
xor
(bad)
mov
into
jle
into
inc
in
pushw
into
sahf
and
cmc
jmp
push
jge
jmp
mov
fwait
xor
out
push
rcl
xchg
sbb
fs
loopne
cmp
add
cmp
push
(bad)
xor
bound
loopne
popf
in
repnz
add
mov
dec
lds
adc
inc
jecxz
jecxz
arpl
sub
sbb
inc
push
loope
shr
dec
mov
xlat
mov
out
mov
movs
dec
outs
sbb
inc
test
jnp
cmp
lds
jle
ret
shr
or
into
push
xchg
mov
add
jae
xchg
das
adc
loopne
outs
imul
pushf
jmp
xor
mov
test
test
mov
shl
test
sbb
cmp
cmp
adc
pop
in
shl
xor
arpl
sbb
pusha
call
mov
or
loopne
pop
xor
dec
mov
lods
and
dec
xchg
(bad)
cmp
jno
pop
dec
cdq
repnz
cs
cld
(bad)
cmp
mov
mov
adc
mov
gs
nop
sbb
ss
icebp
(bad)
inc
dec
or
jo
fbstp
mov
push
mov
push
cmp
int
in
outs
pop
bound
icebp
inc
mov
retf
sub
push
dec
ret
and
pop
pop
cmp
daa
lock
and
(bad)
shl
mov
sar
cmps
adc
(bad)
bound
pop
lods
aad
fcos
cmp
test
sbb
and
mov
mov
inc
hlt
jns
or
adc
inc
stc
int3
or
retf
fnstenv
mov
or
jns
fld
push
push
push
mov
imul
hlt
call
(bad)
xlat
add
mov
imul
sahf
xor
lods
fwait
push
sar
cmp
pusha
xchg
mov
in
shr
xchg
pusha
mov
inc
mov
xlat
jmp
rol
shr
jno
ss
pushf
neg
lea
sbb
ins
dec
daa
out
push
hlt
mov
cmc
fisubr
in
jge
outs
add
mov
inc
fadd
xchg
punpcklbw
sub
call
push
push
xlat
dec
mov
movs
arpl
mov
push
into
mov
outs
ret
ins
daa
rcl
inc
lods
movs
jns
cmp
lods
mov
std
adc
and
sbb
fcmovnb
ins
out
cdq
sti
add
pop
xor
rol
adc
fwait
pop
inc
test
daa
inc
std
pop
outs
aas
xor
cmp
lock
mov
rcr
scas
jmp
lock
jb
mov
addr16
sub
call
dec
and
mov
push
pop
or
mov
mov
dec
adc
cmp
pop
xchg
clc
jmp
mov
mov
jbe
dec
daa
fs
adc
clc
fidiv
out
movs
mov
pop
push
jp
ror
popf
lods
pop
pop
xor
out
aad
enter
cmc
test
xchg
shl
jmp
rol
cmp
jle
sbb
xor
aam
sahf
adc
push
pop
xchg
cmc
mov
repz
aas
jns
mov
mov
out
adc
and
add
sbb
js
jb
xchg
ffree
jns
leave
dec
ror
fild
or
or
nop
pushf
les
add
fidivr
loop
call
mov
(bad)
sub
inc
add
mov
(bad)
xor
outs
and
jp
mov
test
mov
jnp
repnz
dec
xchg
pop
out
sets
and
inc
das
into
pop
out
push
push
adc
pop
dec
pop
or
jmp
(bad)
pop
repz
repz
scas
push
sub
mov
cdq
ud1
ins
int
add
jae
mov
jno
es
inc
das
(bad)
xchg
lds
jmp
repz
or
out
jns
mov
enter
xchg
cld
or
bound
leave
pop
jge
jno
imul
and
pop
out
mov
adc
add
adc
jmp
jne
into
mov
and
nop
(bad)
jmp
jecxz
and
test
loopne
pop
inc
or
push
scas
cmp
push
fs
cmp
call
or
or
clc
push
int
int
mov
push
ds
dec
add
shl
pop
adc
lods
mov
fld
sbb
aas
dec
sbb
or
in
stos
inc
(bad)
and
test
sbb
inc
pop
fistp
mov
ja
jns
and
(bad)
hlt
and
mov
dec
cmp
retf
data16
test
cmp
out
arpl
cmp
jl
xor
mov
mov
fcmovb
cli
push
or
jp
push
jb
retf
jmp
sub
mov
sbb
and
dec
out
and
mov
jp
jns
retf
jns
das
push
out
xchg
cmp
mov
jmp
push
mov
inc
ja
cmp
xchg
movlps
mov
bound
outs
sub
adc
ins
inc
xchg
dec
or
dec
inc
mov
popf
fild
sbb
bound
adc
out
stc
es
mov
pop
xchg
jb
xor
dec
mov
jbe
fst
fcmovu
mov
mov
add
sbb
sar
div
mov
jmp
jns
cdq
rcr
sar
xor
in
sahf
scas
inc
sbb
xchg
xchg
idiv
jne
cmp
push
lds
or
clc
frstor
lods
cmp
jge
in
dec
not
les
dec
daa
and
pop
sub
shl
xor
push
stos
out
mov
sahf
test
xor
js
jns
movs
int
adc
adc
aas
inc
pop
or
mov
scas
mov
scas
hlt
xchg
or
pop
hlt
pop
pop
ja
cmp
xchg
ss
jnp
push
cdq
lea
call
xchg
int
add
inc
scas
iret
lds
js
add
leave
nop
les
(bad)
stos
les
(bad)
push
fcom
in
inc
fld
pop
sbb
inc
les
fld
daa
arpl
imul
ins
sbb
cmp
mov
jb
push
cwde
call
cwde
sub
mov
sahf
xchg
ret
pop
or
shrd
pop
iret
rcr
imul
fldcw
retf
or
outs
test
outs
fwait
pop
sar
mov
es
sbb
popf
cmp
ret
shl
xor
nop
dec
sbb
imul
push
mov
sar
enter
ret
push
add
nop
adc
scas
mov
cmp
aam
out
mov
out
jbe
adc
cmp
sbb
dec
mov
mov
cmp
imul
cmps
add
xlat
fwait
dec
movs
mov
mov
call
add
aad
icebp
je
test
test
xchg
adc
and
aad
or
loope
jle
imul
mov
or
sbb
iret
sbb
inc
lods
mov
mov
jae
(bad)
into
xchg
mov
mov
adc
movs
enter
js
inc
add
mov
mov
ss
ins
repnz
mov
jns
(bad)
cld
xchg
xchg
push
adc
dec
fucomp
xchg
in
and
ror
lea
jle
add
adc
ins
outs
adc
xchg
ret
shl
pop
mov
out
and
sub
lahf
fnstsw
lds
in
jnp
addr16
(bad)
push
out
xor
loope
sbb
hlt
mov
dec
ss
pop
test
aas
(bad)
jecxz
lds
cwde
push
das
or
in
into
mov
push
imul
mov
and
sub
xor
mov
mov
mov
dec
mov
inc
or
mov
pop
adc
mov
mov
inc
enter
les
sub
(bad)
pop
dec
xchg
mov
push
popf
adc
pop
jmp
lock
(bad)
mov
pop
test
dec
aas
ds
or
mov
or
xor
or
sub
repnz
addr16
(bad)
lods
sti
adc
dec
mov
adc
mov
cmp
outs
cmp
in
dec
cmp
push
jne
pushf
add
sub
adc
sbb
xchg
xor
xchg
mov
adc
sbb
jle
and
imul
pop
add
xchg
push
push
cmp
inc
mov
cld
jbe
mov
icebp
push
xchg
push
cmp
sti
cwde
sub
in
into
aas
and
(bad)
cmp
cmp
loop
sti
mov
pop
aam
xchg
jmp
mov
xor
icebp
mov
arpl
vpaddq
push
stos
adc
and
cmp
jecxz
fs
fisubr
dec
mov
loope
mov
les
or
pop
xor
je
lea
push
pop
inc
mov
shr
clc
or
or
push
mov
dec
imul
or
pop
int3
call
lock
dec
cld
lods
or
sub
repnz
outs
jo
ins
sti
add
jno
xchg
shl
push
arpl
fldenv
inc
out
inc
ins
sub
gs
ins
add
xor
push
sbb
xchg
push
push
leave
and
loopne
pop
cmps
sbb
mov
sahf
test
gs
pop
pushf
add
jp
(bad)
ins
(bad)
rcr
xchg
push
mov
mov
push
outs
imul
dec
cmps
push
add
cli
in
jne
rcl
and
loop
ss
ret
sbb
mov
or
sbb
sub
aad
fbstp
pop
xchg
test
sub
sub
ror
imul
or
mov
sub
or
add
pop
and
leave
sar
popa
sbb
out
push
scas
cli
inc
sbb
mov
mov
les
push
and
pop
sub
or
mov
movs
mov
(bad)
test
loopne
nop
xchg
movs
dec
jae
push
stos
xchg
int3
mov
sbb
daa
dec
xlat
and
out
lods
pop
pop
hlt
jl
dec
cs
inc
push
sbb
enter
(bad)
xlat
outs
cmp
mov
stos
enter
dec
not
sbb
xor
sbb
hlt
pop
jmp
pop
jmp
adc
or
fcomp
pop
out
xchg
mov
push
call
mov
fnstcw
mov
in
shr
test
rcl
or
loopne
repz
sbb
jmp
add
xchg
rcr
mov
lods
js
sbb
mov
or
xchg
push
iret
lods
mov
enter
adc
adc
push
ss
test
pop
dec
dec
inc
mov
jg
imul
lock
stos
mov
ins
mov
jnp
cmp
aaa
inc
mov
pop
cdq
mov
loopne
mov
sti
pop
test
bound
fdiv
or
icebp
mov
cmp
mov
pop
cmps
aad
mov
stos
mov
dec
pop
fcmovu
popf
or
inc
sbb
jmp
fstp
call
cmp
jmp
fldenv
push
cmp
jmp
test
sahf
fild
pushf
jecxz
in
dec
inc
push
jge
xor
sti
in
xor
icebp
or
push
mov
jp
(bad)
fidiv
mov
xchg
xchg
fcom
push
adc
fsub
std
movs
js
jmp
adc
int
xchg
sbb
push
inc
cs
sbb
dec
mul
cmp
cli
fdiv
xchg
das
add
push
aas
inc
jl
fstp
cdq
cli
les
cmc
add
dec
fsubr
xor
inc
and
push
xchg
data16
mov
xchg
mov
cmp
add
xchg
pop
and
cld
push
or
sbb
test
mov
xchg
pop
shl
jp
ins
test
jno
retf
stos
out
inc
clc
mov
inc
push
mov
ins
lea
aas
mov
scas
cmp
push
js
push
jb
je
sbb
lock
int3
fimul
mov
dec
fs
scas
cmps
push
mov
mov
jp
rcl
mov
jbe
xchg
inc
mov
arpl
or
mov
or
xchg
(bad)
clc
or
sti
loop
xlat
fcomi
shr
jl
fmul
adc
movs
outs
daa
stos
push
movs
jns
push
push
mov
and
(bad)
jnp
push
xor
xchg
and
or
jae
sahf
popf
outs
aad
mov
push
jnp
add
scas
loope
stc
mov
ret
dec
push
fdiv
jecxz
stc
(bad)
test
xor
nop
std
push
mov
xchg
jb
xchg
ret
mov
adc
add
jnp
enter
test
inc
or
in
sbb
and
cmc
push
sub
xor
in
popf
mov
xchg
outs
test
push
mov
inc
add
sbb
mov
ins
cmp
stos
mov
push
ds
fcom
cli
psraw
pushf
mov
add
rcl
push
push
xchg
add
mov
and
inc
cdq
daa
pusha
cs
jle
hlt
(bad)
adc
push
push
cmp
jo
xchg
pop
and
add
xchg
repz
xchg
sbb
iret
cmp
mov
jmp
popa
push
fwait
xor
js
cmp
adc
mov
data16
call
sbb
mov
fdiv
ds
lods
and
fistp
push
xchg
jbe
push
jge
gs
inc
sbb
adc
imul
sub
jmp
add
mov
sbb
add
xchg
in
ins
pop
dec
xlat
movs
jb
out
ds
mov
xchg
clc
inc
cmp
scas
fisubr
xor
movs
repnz
ret
dec
stc
ins
pop
pop
inc
mov
inc
imul
add
les
in
ffree
mov
hlt
fdiv
je
mov
xor
aam
loop
cmc
dec
movs
ret
fidivr
mov
push
and
mov
dec
pop
xchg
or
sub
jmp
pop
rol
fs
ret
out
cmps
jg
dec
inc
jne
dec
mov
aas
aaa
push
bound
jl
xchg
icebp
inc
or
lock
popa
(bad)
lea
div
pop
test
je
push
xor
repnz
dec
movs
ficomp
inc
dec
das
cmp
cli
jae
add
mov
cmp
loop
xchg
fwait
cmps
xchg
mov
push
dec
mov
dec
push
bound
in
lock
movs
movzx
mov
mov
(bad)
in
cld
and
retf
or
push
int
jne
addr16
jbe
jnp
imul
(bad)
out
aad
cmp
mov
xchg
fldenv
sub
int3
sbb
adc
retf
inc
shl
out
mov
xchg
out
jo
mov
push
loopne
leave
cmp
fsubrp
pusha
ins
les
stc
xor
mov
mov
out
xchg
inc
dec
pusha
and
cld
(bad)
sub
cmp
mov
mov
mov
icebp
fsubr
mov
aas
jne
mov
jmp
out
repz
call
jge
mov
es
xor
mov
sahf
mov
pusha
(bad)
dec
dec
pop
cwde
fst
hlt
mov
icebp
sbb
outs
scas
and
fmul
ja
add
jne
sub
mov
out
aas
sbb
mov
adc
rcr
jge
(bad)
daa
mov
shl
jp
in
and
and
pop
loopne
call
and
push
js
sub
sub
push
cmp
loop
in
cdq
sbb
push
dec
imul
gs
fmul
cmp
out
sbb
out
hlt
xchg
mov
and
xor
dec
adc
or
mov
cld
ja
mov
shr
pop
dec
xor
push
enter
nop
push
in
dec
add
and
ss
mov
mov
rcl
ss
push
jmp
or
xlat
iret
sub
push
mov
sub
sub
sar
inc
add
aas
or
mov
inc
jns
xchg
push
fimul
sbb
dec
dec
ds
push
inc
inc
jle
cmps
xor
in
js
dec
xor
in
xlat
sbb
jb
pop
into
mov
fsubr
inc
jne
outs
sub
cwde
(bad)
aad
dec
xchg
neg
mov
xor
cmps
pushf
scas
jl
cmp
pusha
inc
or
jge
adc
sahf
xchg
sbb
repnz
inc
jmp
jno
jecxz
push
mov
sbb
out
xor
push
dec
pop
inc
pop
adc
or
lods
push
in
jne
add
(bad)
out
shr
aam
out
(bad)
rcr
test
out
mov
mov
sbb
jb
cs
jb
dec
lahf
mov
jge
pop
test
stos
fst
dec
ret
dec
cmps
repnz
xchg
scas
xor
xchg
test
(bad)
mov
mov
loop
or
data16
cld
imul
retf
mov
lea
fbld
pop
mov
mov
hlt
inc
test
dec
je
add
xor
jbe
mov
cdq
aaa
sbb
mov
pop
dec
fldenv
add
int3
or
pop
mov
in
sub
mov
aaa
fnsave
std
gs
ja
and
mov
mov
xor
aaa
and
mov
sahf
inc
retf
jne
neg
pop
out
adc
sub
jb
sub
dec
pop
jmp
mov
js
jns
push
jecxz
sbb
sub
lock
stos
or
push
dec
add
in
out
repnz
mov
call
adc
add
pop
sbb
xor
adc
sub
(bad)
fild
jbe
adc
addr16
sub
mov
push
aam
fdivr
and
push
sar
arpl
ja
pop
dec
inc
add
into
pop
aaa
(bad)
sub
int3
and
lods
and
int3
push
dec
enter
xor
or
dec
fld
int
xchg
repnz
mov
ins
push
mov
(bad)
daa
je
xchg
jge
ds
fst
jae
xchg
stos
and
(bad)
fdiv
fwait
inc
adc
stos
cld
mov
in
pop
rcr
inc
aaa
mov
nop
bound
jns
js
jnp
pop
fcom
inc
mov
aam
fistp
and
mov
mov
sbb
jmp
repnz
fldenv
xchg
dec
loop
gs
movs
cmc
mov
inc
ror
pusha
add
js
dec
aad
(bad)
xor
daa
out
test
add
aas
test
mov
imul
stos
cmp
xlat
cmps
push
and
clc
or
std
nop
adc
aad
push
cmc
movs
xchg
imul
or
push
sar
in
rcr
cwde
mov
inc
out
stos
and
aas
xor
mov
fxch
enter
stos
cmps
cmp
pop
icebp
sbb
add
call
scas
dec
dec
xor
ins
pushf
push
adc
mov
pop
mov
into
xchg
mov
push
sub
pop
outs
jae
and
and
neg
popa
adc
add
sbb
push
ror
xor
dec
jnp
test
lods
pop
sub
and
pop
sbb
shl
dec
push
sahf
pop
sti
jo
cli
adc
lea
outs
shl
jmp
rol
sub
and
movs
mov
rcl
mov
push
lods
push
sub
(bad)
hlt
outs
enter
fistp
hlt
in
sub
jno
cld
fcmovb
fimul
shl
push
pusha
out
adc
pop
inc
sbb
sub
xor
loope
jb
fcmovu
jmp
call
and
ret
dec
push
je
sbb
jecxz
ins
(bad)
in
sbb
xchg
imul
mov
cli
jo
sub
retf
into
sub
scas
icebp
or
sti
cwde
pushf
pop
mov
mov
mov
adc
out
mov
call
and
cmp
inc
push
fsub
push
cmc
jb
imul
lds
cdq
mov
adc
outs
mov
cmp
icebp
sub
adc
cmp
pop
icebp
lahf
cs
cmp
popa
aaa
pop
mov
ja
mov
pop
ins
aam
and
cmc
mov
xor
popa
stos
cmp
or
fidivr
cvtps2pd
in
in
inc
popf
jl
rcr
add
sub
cmps
cld
pop
dec
and
mov
shr
icebp
xlat
sbb
pushf
and
pop
fbld
push
ins
push
ret
es
pop
mov
movs
les
in
dec
jo
lods
mov
das
ins
jp
xchg
and
or
ja
xor
je
cdq
not
jmp
pop
vmwrite
int
shl
sbb
mov
stc
mov
cmps
fiadd
push
stos
outs
das
fwait
push
aam
xor
out
adc
(bad)
mov
icebp
gs
mov
popa
mov
lock
cmp
retf
and
dec
loop
cmp
ror
inc
mov
clc
cmp
xor
and
pop
xor
cmp
cmc
pop
or
jl
push
or
add
std
loopne
and
dec
sub
xor
addr16
mov
pop
push
mov
jbe
mov
ds
scas
fiadd
nop
mov
adc
cmc
(bad)
push
pop
loope
clc
push
jne
jmp
je
push
jne
not
int3
push
inc
or
inc
fisttp
std
push
cmp
data16
add
fidivr
loop
pop
aas
(bad)
data16
jmp
ins
fst
and
and
jl
(bad)
cmp
icebp
inc
mov
adc
mov
adc
pop
xchg
mov
xchg
mov
rol
(bad)
fsubr
lea
mov
push
stos
cwde
cmps
adc
mov
out
(bad)
aad
retf
mov
adc
jo
out
call
ins
iret
pop
mov
and
dec
pop
jnp
jo
mov
sub
xchg
sbb
test
ret
and
test
mov
push
loop
int3
stc
iret
dec
mov
push
sub
jecxz
or
mov
clc
mov
call
adc
dec
pop
dec
std
test
jne
rcl
lods
fnstenv
push
or
js
xor
movs
pushf
retf
in
inc
or
test
mov
push
mov
call
dec
mov
pop
(bad)
push
cmps
xchg
jle
jg
push
jmp
sar
call
adc
sub
mov
push
or
not
pop
fsubr
dec
xor
add
mov
xchg
or
jmp
sub
enter
fdivr
sbb
neg
out
sub
xor
mov
mov
call
fstp
dec
loope
xchg
push
leave
adc
ins
mov
or
mov
mov
fidivr
sbb
adc
xchg
xlat
popa
jg
cmc
js
ss
mov
in
jnp
mov
inc
jno
dec
xor
mov
sbb
ret
cmps
mov
xor
sahf
sti
sub
scas
pop
(bad)
shl
cs
enter
(bad)
lods
scas
lock
pusha
and
cmp
hlt
push
sub
repnz
sbb
fcmovnu
(bad)
ja
std
(bad)
lahf
cli
xchg
jmp
jle
fcomp
fbld
mov
mov
push
hlt
jge
push
sub
repz
idiv
adc
jp
mov
dec
inc
ret
js
jb
fld
and
pop
jb
sub
test
cmps
xor
ss
lock
call
aaa
movs
shl
cmp
mov
inc
add
(bad)
jmp
cmp
mov
mov
mov
into
fist
dec
mov
sbb
daa
or
mov
mov
push
mov
dec
ret
cmc
dec
call
sbb
adc
pop
dec
mov
neg
cdq
sub
adc
jg
int
xor
call
jo
jno
cmc
pop
pop
lahf
and
inc
mov
cmp
xchg
cmp
pop
adc
pushf
aas
sub
loopne
sbb
and
adc
pusha
pop
sub
int
mov
test
lds
dec
retf
test
cmp
ins
mov
push
(bad)
fsub
ror
scas
loop
dec
repz
cmp
pushf
jns
xchg
mov
out
minps
ret
sar
(bad)
aaa
int
enter
jns
icebp
ins
adc
xor
pop
mov
pushf
shr
(bad)
jle
mov
mov
and
nop
adc
add
and
test
xchg
sti
xchg
xlat
lds
int
adc
sub
or
pop
xchg
pop
mov
in
mov
pop
cld
(bad)
xchg
dec
push
hlt
xor
(bad)
lea
aaa
adc
in
xor
out
pop
mov
mov
cmp
jae
sub
enter
mov
(bad)
fimul
shl
mov
adc
push
aas
xchg
scas
daa
mov
repnz
add
pop
push
les
push
(bad)
sbb
cmps
shr
mov
test
pusha
lock
xchg
pop
rep
leave
data16
pop
out
mov
inc
push
(bad)
loop
pop
pop
or
adc
loop
xlat
je
jle
popa
gs
and
fs
inc
mov
jmp
cwde
or
in
sub
stc
push
dec
jp
mov
adc
adc
cwde
in
faddp
scas
jl
dec
jmp
mov
in
cmp
clc
fucom
mov
pop
mov
pop
pusha
push
and
imul
jb
imul
scas
inc
aas
repnz
sti
or
jne
ror
dec
sbb
sbb
ret
add
pushf
push
and
scas
mov
gs
pop
xor
mov
push
ds
xor
pop
fild
xor
cmc
jp
push
cwde
jmp
loopne
inc
or
call
out
mov
sub
cmc
pop
pop
push
loop
(bad)
out
add
xchg
pop
cmp
sbb
movs
in
imul
rcl
popf
retf
pop
cmps
rcl
mov
inc
scas
inc
js
fld
js
mov
imul
dec
and
mov
fild
lock
ret
movs
inc
clc
enter
mov
cmp
sbb
mov
jmp
leave
lock
shl
shl
leave
stc
leave
lock
and
mov
fcomp
jmp
jbe
push
in
les
sti
nop
lods
sahf
cmps
sahf
push
cmp
push
rcl
mov
fsubr
sub
inc
out
int3
jno
push
outs
or
add
sub
cmp
mov
stc
lods
xor
dec
retf
and
pop
xchg
mov
paddw
xchg
xor
ds
and
inc
push
fisubr
scas
lods
push
js
cmp
mov
and
icebp
jae
mov
jg
mov
jl
js
test
cmps
pmaddwd
mov
aaa
ret
push
xor
and
rcl
cmc
push
push
and
pop
jno
cmp
mov
cmps
cmp
daa
popa
(bad)
or
sahf
lahf
clc
cmp
not
test
and
int3
fistp
xlat
dec
js
jmp
dec
scas
ret
icebp
cdq
lods
dec
repnz
icebp
aas
push
push
(bad)
pop
bound
dec
push
test
jle
fwait
mov
cmp
fwait
(bad)
ja
shr
in
mov
xor
jecxz
sub
popf
sub
mov
bound
addr16
xchg
xchg
mov
pushf
cwde
cmps
shl
dec
data16
push
inc
inc
mov
call
es
cmp
lds
lds
push
out
das
cmp
dec
(bad)
mov
ins
inc
push
mov
mov
push
adc
in
sub
dec
mov
or
xlat
cmps
rcl
add
and
mov
pop
pop
xor
dec
push
jo
add
xchg
imul
lock
sbb
rcr
sbb
mov
inc
and
xor
aas
add
je
scas
push
push
out
js
(bad)
fwait
iret
or
nop
push
jb
int3
sbb
cmp
xchg
push
das
cld
lods
pop
mov
in
push
sbb
adc
dec
leave
pusha
mov
mov
or
xchg
lahf
mov
adc
pop
mov
jne
(bad)
adc
inc
cmps
mov
mov
sub
push
xor
(bad)
dec
fdivrp
je
mov
inc
pop
inc
into
aad
mov
add
das
repz
mov
int
cmps
adc
ds
adc
jb
repz
scas
std
mov
aaa
jbe
enter
pop
pop
mov
jb
and
cmc
ror
pop
or
add
jmp
push
push
push
xchg
fldcw
aam
push
push
dec
movs
push
inc
ret
cdq
xchg
cmc
mov
outs
and
pop
mov
stos
jno
fldcw
fild
sbb
or
push
xor
sub
cmp
mov
fimul
mov
addr16
cmp
xor
xor
mov
das
test
out
leave
mov
xchg
retf
popa
cld
jmp
loope
add
inc
in
jmp
push
or
mov
mov
ror
stos
ror
push
mov
pop
adc
int3
stos
aaa
xchg
add
sbb
add
cmp
fwait
scas
lods
pop
mov
xchg
into
dec
mov
dec
inc
jmp
lods
jl
jle
push
dec
push
add
popf
icebp
or
dec
stc
inc
adc
push
add
jecxz
inc
lods
sub
mov
pop
jle
xchg
sub
dec
arpl
ins
test
mov
(bad)
pop
mov
jmp
push
inc
mov
push
pop
lods
rol
js
sub
add
dec
pop
or
fwait
jp
pop
int
sub
lds
push
ficom
jmp
fmul
cmp
(bad)
repz
push
test
cmp
movs
inc
sub
nop
out
dec
cmps
mov
or
inc
movs
pop
out
jg
fidiv
xchg
mov
add
stc
outs
aam
ss
mov
sub
inc
aam
sti
and
pop
out
test
jmp
sub
js
das
ret
mov
scas
adc
jg
xchg
cld
shl
data16
adc
and
out
mov
shr
rcl
loopne
popa
adc
xchg
inc
mov
cmc
gs
ins
clc
pop
bound
jne
(bad)
push
std
not
clc
mov
jne
mov
addr16
fwait
and
in
iret
iret
fild
imul
push
or
add
dec
ins
cmp
push
data16
lahf
jae
scas
(bad)
ins
rcr
and
js
mov
push
clc
lahf
fs
ss
mov
fisub
pop
jp
fdivrp
jns
push
mov
add
int3
(bad)
mov
mov
cmp
outs
outs
cdq
fidivr
inc
mov
add
imul
or
icebp
pushf
mov
xor
fnstsw
push
aaa
add
jmp
push
xchg
sbb
mov
inc
retf
mov
cmps
xchg
pop
push
in
inc
xchg
out
cmp
jae
fldpi
jno
mov
cli
out
(bad)
lods
(bad)
adc
jecxz
rcl
sub
dec
out
jo
pop
inc
sti
fbstp
jno
and
xchg
push
(bad)
test
pusha
cvtpi2ps
or
cmps
xlat
test
xchg
into
jns
sbb
clc
out
or
in
mov
fiadd
inc
mov
xor
out
mov
sub
sbb
xor
and
mov
pusha
inc
rcr
nop
adc
xchg
fdivr
xor
jne
cmp
les
ret
ins
(bad)
jmp
imul
sbb
pop
jo
aas
cmp
xchg
popa
add
test
out
push
std
cld
stos
sahf
xor
xchg
jecxz
and
loop
fwait
ror
mov
les
cdq
aaa
pop
cmp
aaa
in
(bad)
sub
repz
stc
out
movs
loop
dec
neg
mov
sar
stos
or
pop
jne
mov
mov
mov
pop
out
xor
and
enter
shl
xchg
test
mov
xor
mov
in
retf
out
mov
(bad)
sbb
pop
in
pop
adc
jl
sub
mov
(bad)
pop
push
(bad)
dec
rol
or
xchg
jae
pop
lahf
and
bound
out
dec
cmc
cmp
xor
jecxz
ins
dec
mov
arpl
sbb
mov
push
test
jbe
dec
mov
mov
xlat
or
or
adc
push
xchg
movntq
out
or
nop
sub
imul
mov
addr16
and
dec
pop
adc
movs
in
add
or
mov
jecxz
xor
mov
fucomp
xor
sub
gs
leave
ins
clc
shl
mov
jle
pop
dec
add
imul
std
pusha
sbb
aas
dec
mov
xchg
add
leave
push
mov
or
fbstp
scas
sahf
inc
(bad)
sbb
adc
pop
and
dec
and
xlat
push
ret
pavgb
stos
jae
rol
arpl
(bad)
fs
bnd
jne
mov
ficomp
add
fsub
mov
shr
adc
fstp
adc
loope
xchg
fiadd
call
push
push
(bad)
inc
mov
pop
lock
sbb
pop
outs
rcr
ficomp
lahf
fs
pop
pushf
and
xor
cmp
jge
pop
jg
retf
out
sub
sar
ins
pop
ficomp
pop
push
dec
push
pop
cmp
data16
jnp
fimul
pop
aas
xchg
push
push
pop
(bad)
dec
push
daa
mov
nop
add
aam
clc
jbe
scas
ficom
shl
ja
sbb
sahf
sbb
sbb
(bad)
add
icebp
imul
lds
test
sub
in
mov
stos
dec
cmp
frstor
dec
shl
cmp
ja
in
sbb
jl
retf
inc
mov
push
and
or
in
loope
mov
inc
clc
nop
scas
icebp
mov
add
or
pop
or
add
jge
ds
icebp
mov
or
push
inc
dec
icebp
inc
add
xchg
test
je
arpl
bound
movs
jecxz
out
push
pop
ficom
sahf
push
mov
dec
cmps
out
xchg
or
call
mov
mov
dec
pop
and
retf
ss
aad
fild
mov
aaa
in
jge
inc
sub
push
mov
jecxz
mov
pop
push
xchg
xchg
cli
push
push
fmul
sbb
adc
in
mov
pop
dec
push
lahf
leave
loope
pop
int
dec
cmc
dec
xchg
bound
inc
lea
cwde
std
and
retf
call
xchg
push
push
das
dec
popa
mov
cmps
cwde
mov
mov
mov
xchg
mov
inc
mov
ret
mov
(bad)
ins
stos
adc
sub
ror
jge
mov
dec
jnp
jmp
mov
mov
xchg
je
cmp
and
loopne
outs
lods
push
mov
lods
dec
fisttp
iret
inc
outs
and
es
cmps
rcl
out
scas
cmp
xchg
out
sbb
jmp
xchg
jns
cwde
push
inc
movs
mov
jbe
cmp
cdq
fmul
xchg
int
adc
or
pop
add
hlt
bound
mov
sbb
hlt
shr
mov
dec
mov
aam
mov
xor
push
sbb
dec
iret
mov
scas
push
cld
inc
xlat
sub
mov
cmp
out
inc
aad
js
iret
fnstenv
and
sub
adc
mov
in
aaa
mov
lea
in
or
push
push
dec
cld
xor
hlt
dec
mov
retf
push
or
jmp
dec
cs
cmp
call
jle
xchg
adc
mov
mov
sbb
pop
sbb
outs
dec
nop
nop
dec
out
leave
stc
stos
mov
(bad)
fstp
mov
repnz
sub
or
out
xchg
pop
mov
mov
lds
jg
pop
dec
xchg
jb
or
adc
(bad)
int3
xchg
das
lods
movs
imul
xor
sti
mov
and
dec
adc
push
std
jnp
jle
mov
sub
popf
aaa
imul
dec
jg
inc
jmp
jo
inc
loop
loope
stos
inc
movs
push
inc
jg
mov
or
adc
ds
hlt
pop
cli
in
xor
adc
mov
add
stos
mov
pusha
push
lock
clc
je
cmp
pop
pusha
adc
jecxz
aam
and
xchg
fsub
pop
mov
jmp
inc
(bad)
jg
xor
(bad)
leave
sbb
adc
stos
mov
sub
pop
adc
(bad)
cmc
mov
inc
fsub
mov
jb
jl
jmp
xor
pop
sub
jo
stc
popa
adc
pop
sbb
(bad)
pusha
inc
icebp
and
stos
dec
daa
pusha
add
jg
int3
cdq
sbb
ss
aad
pop
pusha
fcomp
xchg
jg
dec
aaa
pusha
xor
jmp
sahf
fist
lea
xlat
mov
lds
push
(bad)
jae
int
daa
cli
dec
add
inc
jmp
dec
push
dec
les
call
sub
inc
daa
or
dec
fucomip
sub
pop
sbb
cmp
mov
pop
dec
stos
unpckhps
div
inc
fisub
xchg
mov
inc
cmc
lods
jae
push
imul
jle
in
(bad)
mov
sub
int
mov
into
mov
leave
cmp
xchg
test
or
fmul
lea
stc
test
pusha
fistp
push
inc
push
test
loope
mov
adc
nop
sub
ret
jb
pop
xchg
push
push
xchg
cmp
add
fstp
sti
jg
cmp
enter
adc
cmc
pop
es
pop
inc
push
call
xor
dec
repz
rcr
cmps
sub
neg
pop
fwait
std
in
sti
fmul
enter
sbb
sbb
aaa
setb
inc
sbb
sar
(bad)
out
pop
add
js
pop
sub
mov
stos
jmp
mov
or
jl
and
cmp
scas
out
push
std
int3
aad
push
xchg
push
fnstsw
(bad)
xlat
sub
add
sti
or
into
cwde
ss
jb
inc
outs
add
pushf
mov
dec
(bad)
ja
push
inc
push
les
aas
xchg
in
ja
adc
mov
push
mov
fwait
or
xchg
add
fs
or
or
mov
pop
jno
les
xor
mov
jne
jno
xchg
sub
call
push
xchg
sti
lea
inc
stos
outs
dec
xchg
inc
pop
jne
ror
inc
cs
mov
sub
mov
dec
and
pop
daa
inc
mov
and
pop
cs
inc
or
or
sbb
loope
or
fwait
pop
std
test
cmc
fcomip
loope
xor
cdq
fadd
push
add
inc
sub
into
pop
add
adc
or
call
test
mov
adc
mov
push
cmp
inc
pop
fcmovbe
push
icebp
test
movs
(bad)
fidivr
xchg
rcl
aaa
cmp
retf
jg
pusha
sub
out
(bad)
jns
ja
add
ret
xchg
jae
pop
pop
mov
retf
cli
pop
push
cmp
sbb
pop
sub
cmp
stos
fwait
lods
jne
cwde
in
into
push
push
jmp
add
dec
ret
in
mov
dec
xchg
xchg
and
pop
and
fimul
aam
push
mov
aam
cmp
clc
add
pop
mov
and
shl
jecxz
mov
ret
sbb
mov
inc
out
and
sub
and
pop
pop
movs
mov
hlt
or
sbb
or
inc
mov
pop
ret
xchg
inc
xchg
ds
add
ins
in
call
xchg
mov
mov
scas
add
int
inc
inc
aaa
out
jmp
lock
dec
inc
inc
mov
fnstsw
arpl
repnz
inc
add
outs
(bad)
stos
mov
dec
dec
int
add
icebp
ds
mov
mov
rcl
int3
mov
jnp
and
and
(bad)
neg
fisttp
sti
enter
int3
and
dec
ss
mov
mov
inc
or
iret
not
je
aaa
inc
inc
xor
and
fild
fcomp
sub
gs
mov
stc
push
lahf
rcr
test
push
pop
lock
mov
push
in
or
push
adc
ret
call
aam
popa
adc
mov
neg
cmp
xchg
push
push
std
data16
pop
push
dec
bound
sahf
je
cmps
aam
xchg
xchg
or
mov
jbe
adc
lods
gs
js
mov
push
dec
xchg
jbe
ficomp
imul
add
push
xlat
push
mov
mov
sub
ds
cli
cmp
cmc
inc
jp
repz
stos
adc
pop
pop
(bad)
xchg
push
adc
sahf
sub
imul
add
cmp
xchg
(bad)
test
retf
inc
ret
repnz
mov
push
add
daa
js
xor
aad
mov
psubw
popf
jno
aad
aaa
and
mov
mov
and
cmp
sub
cld
sbb
mov
pop
nop
cli
sub
pop
ficomp
js
jp
bound
stos
lods
lods
ficomp
cs
sub
cwde
jge
jnp
xchg
mov
xchg
fcom
in
jecxz
push
xchg
mov
pop
in
idiv
addr16
pop
sbb
scas
or
sub
jbe
pop
fidiv
sbb
ret
add
outs
push
add
sti
ret
mov
xor
mov
rol
mul
mov
cmp
imul
push
add
mov
jno
ret
dec
(bad)
lock
push
mov
loope
lods
frstor
cmp
loop
ds
jmp
or
stos
(bad)
dec
xchg
loop
add
popf
xchg
sbb
inc
(bad)
scas
pusha
push
and
adc
jmp
cmc
mov
mov
out
mov
inc
loope
repnz
mov
into
dec
pop
into
jmp
inc
jg
mov
fcmovbe
cmp
aaa
out
test
daa
repz
fsubr
das
adc
inc
cli
cs
and
lahf
xor
adc
mov
add
mov
out
add
jo
jmp
xor
popf
adc
test
dec
jne
ins
sub
or
loope
cmps
push
adc
xor
cmp
or
daa
add
daa
call
sti
pushf
cmp
add
mov
sub
movs
cmp
xor
(bad)
xlat
mov
test
cmp
dec
inc
cmp
repnz
shl
loop
jbe
retf
jl
mov
jno
leave
push
sar
pusha
mov
cwde
push
mov
addr16
push
xor
pop
dec
(bad)
jecxz
mov
adc
xor
mov
ret
pop
imul
lods
mov
std
in
inc
sbb
(bad)
shr
xchg
data16
dec
int3
icebp
outs
daa
or
ficomp
and
push
fs
adc
mov
cmp
out
in
js
adc
pusha
push
stos
jns
outs
sub
push
adc
xchg
jae
dec
int3
sar
xchg
dec
sahf
enter
xor
cld
btc
mov
je
out
xor
data16
sbb
fist
pop
mov
adc
push
call
jle
sbb
int3
cdq
(bad)
mov
sbb
inc
rcl
test
jle
retf
push
stos
sub
jbe
out
xchg
cmp
fsubp
dec
pusha
jo
cwde
rol
aad
add
jne
scas
lahf
push
mov
xchg
outs
repz
shr
mov
inc
test
in
and
ffreep
fcmovnbe
inc
pusha
aam
pop
jmp
mov
push
sti
pop
stos
jmp
into
jmp
xor
cmp
sub
neg
cmps
xchg
outs
jge
or
sbb
jb
mov
pop
cwde
sub
push
cmp
mov
outs
jg
jp
add
test
lds
dec
movs
int
pop
add
ins
imul
push
aaa
or
loope
dec
push
retf
dec
fisub
ret
adc
jp
mov
scas
test
cmps
cmp
sub
adc
loopne
xchg
sub
dec
daa
xchg
xchg
retf
push
mov
fmul
xchg
gs
clc
jmp
out
in
mov
xlat
or
test
sbb
xor
ss
mov
mov
movs
(bad)
das
jno
jbe
xchg
and
aad
shl
mov
mov
dec
push
(bad)
mov
cld
loope
and
jae
mov
cmp
into
xchg
pushf
pop
cwde
movs
mov
adc
fnstenv
mov
jb
mov
jecxz
push
cmp
and
xchg
pop
fs
xchg
xor
jne
jl
xchg
pop
xor
dec
(bad)
daa
fsub
pop
or
inc
push
test
out
xor
neg
jecxz
push
cmp
arpl
jmp
push
gs
adc
into
lods
jg
loopne
(bad)
jg
mov
ror
repnz
sub
inc
data16
int3
push
xchg
sub
mov
test
pop
add
mov
xor
pop
add
test
dec
mov
data16
mov
ins
dec
(bad)
jmp
dec
jecxz
sub
sub
push
(bad)
stos
pop
cs
mov
mov
inc
dec
sgdtd
test
adc
push
idiv
jge
popf
into
sbb
cmps
imul
jne
in
push
out
push
sub
fcomp
mov
(bad)
lahf
mov
mov
jmp
das
cmc
add
cwde
mov
nop
mov
push
out
dec
leave
jecxz
and
pop
in
ficomp
push
adc
lea
jae
repz
xchg
fld1
test
into
fldenv
xor
mov
add
int
mov
xchg
pop
shl
jl
loope
fwait
out
mov
ss
cmps
lods
daa
adc
jmp
fstp
jp
cld
lods
lds
lods
nop
mov
(bad)
test
arpl
mov
pushf
pop
mov
or
fidivr
fimul
pop
cmp
xor
xchg
pop
ins
xchg
sub
or
pushf
div
mov
mov
cmps
js
add
fnstcw
cld
test
shl
sbb
add
ret
shl
pop
out
add
push
push
cmp
mov
jle
int
mov
mov
mov
sub
pop
test
cmp
inc
mov
sbb
pop
clc
mov
sahf
les
scas
clc
test
jmp
mov
test
data16
sub
aaa
jge
call
and
push
jmp
mov
jns
pop
mov
ret
mov
mov
push
mov
iret
push
lods
sti
movd
add
xchg
cmp
int
mov
data16
fldcw
push
xor
or
push
dec
cmp
ja
mov
sbb
call
cmp
scas
lock
pop
lds
add
inc
mov
repz
cmps
aaa
add
jb
scas
jp
sub
(bad)
loop
dec
jmp
and
cmp
inc
mov
nop
dec
mov
stos
mov
cwde
mov
inc
jb
es
push
sub
(bad)
movs
ja
jo
mov
dec
xchg
into
div
sub
and
imul
mov
shr
cmc
(bad)
push
mov
jno
or
ins
cmc
js
and
add
fisubr
sbb
stos
lods
cdq
jb
mov
ficom
movs
sbb
aam
es
(bad)
addr16
mul
mov
jbe
jae
sub
push
test
test
retf
mov
mov
pushf
jno
xchg
push
cld
retf
jo
dec
popa
push
jl
xlat
loop
mov
xor
adc
(bad)
cmp
sbb
mov
cmp
aam
mov
push
ret
mov
push
add
(bad)
xor
ficomp
push
dec
pop
xor
pushf
ficom
mov
push
int3
je
cwde
sbb
jle
leave
scas
mov
call
ret
push
pop
test
pop
fld
xchg
sub
rcl
in
xor
xbegin
daa
(bad)
fcomp
inc
test
mov
div
or
popa
push
out
mov
mov
shl
xchg
cpuid
pusha
popa
cli
mov
xchg
mov
call
jo
cmp
mov
inc
jmp
test
sub
call
and
lahf
cmp
rol
push
lock
mov
into
sbb
daa
sbb
es
ret
inc
pop
ja
ja
inc
inc
arpl
push
inc
into
or
mov
popa
inc
test
mov
ret
cmc
push
push
int
imul
pop
jl
test
stos
out
lea
jno
push
into
sub
int
pop
mov
es
fwait
das
inc
inc
add
mov
jecxz
in
cwde
jge
test
add
loopne
and
outs
test
pop
xchg
les
cwde
scas
outs
aas
(bad)
mov
ins
mov
sub
(bad)
mov
pop
int
or
sub
pop
pop
sub
jmp
and
jle
mov
in
ins
shl
retf
in
add
inc
cld
lock
shl
fidiv
repnz
xor
test
pop
push
inc
and
pop
add
lods
arpl
sub
(bad)
pop
(bad)
test
stos
sbb
sbb
inc
sbb
or
pop
in
das
popa
scas
xor
daa
push
(bad)
push
(bad)
je
mov
pop
jmp
addr16
push
outs
call
out
inc
sahf
fmul
mov
pusha
xchg
xchg
sbb
jae
dec
xor
and
loope
mov
add
sti
or
hlt
sub
mov
cmp
fist
dec
je
mov
(bad)
out
pop
cmp
pop
jmp
and
inc
(bad)
stos
shr
adc
neg
aam
mov
test
leave
outs
or
and
movs
test
ja
xor
ds
cmp
xor
sub
in
sub
ins
sub
test
xchg
jne
sti
mov
popa
(bad)
arpl
ja
popa
mov
lahf
mov
pop
push
mov
sub
add
jne
push
loope
daa
cmp
stos
repnz
or
lods
sbb
jbe
jmp
jmp
and
add
stos
mov
and
add
pop
cmp
jno
inc
clc
fidiv
test
cs
scas
mov
fsubr
shl
and
scas
push
jmp
pop
ins
lods
xchg
push
adc
xor
and
inc
pop
add
inc
loopne
int3
loope
addr16
add
lock
lahf
dec
ss
jp
es
(bad)
dec
xor
pcmpeqd
and
call
mov
mov
pop
lock
fistp
retf
mov
push
daa
cmc
cmp
cld
je
sbb
sbb
mov
loope
es
xor
fdiv
sub
aam
inc
jbe
mov
add
sub
fyl2x
xchg
mov
stos
or
icebp
ja
fbld
test
jl
mov
xchg
lock
into
pusha
clc
daa
call
mov
mov
shl
jae
mov
sub
jo
xchg
imul
mov
ror
push
jle
ret
pop
popf
fimul
fsubr
adc
fisubr
icebp
pop
cmp
mov
adc
imul
aam
inc
pop
sar
fcomip
shr
mov
loop
mov
out
cmp
mov
mov
or
imul
(bad)
cmp
clc
and
mov
mov
xchg
push
xchg
fbstp
and
shl
push
pop
out
jge
sbb
push
inc
push
cli
push
pop
rol
movs
mov
mov
dec
cli
fiadd
or
out
lahf
xlat
stos
ret
xor
inc
inc
sub
nop
inc
or
out
ficomp
popa
push
push
pushf
push
pop
bound
xor
div
adc
and
lock
adc
loop
mov
adc
int
xor
sub
idiv
xor
les
jp
xchg
iret
jmp
gs
jne
enter
test
aas
xor
mov
mov
cdq
(bad)
(bad)
retf
jl
aad
dec
jne
add
push
sub
call
out
push
mov
(bad)
dec
cmp
pop
into
bound
sub
jge
ja
mov
enter
inc
dec
mov
inc
enter
retf
loop
mov
or
(bad)
cmp
jns
and
fld
retf
pop
pop
in
fwait
or
push
pushf
ret
enter
adc
mov
lea
pop
push
add
dec
fs
mov
mov
fadd
mov
pop
sub
jle
out
mov
repz
mov
stos
xchg
shr
fsub
mov
cmp
push
cmp
jnp
and
neg
add
and
(bad)
mov
pop
fsub
(bad)
adc
enter
jge
repnz
xchg
mov
lods
mov
xchg
(bad)
add
mov
and
inc
lds
mov
pop
adc
mul
lods
lods
xchg
sahf
aad
jmp
push
push
jno
dec
add
or
and
test
push
loop
xchg
mov
cmp
in
add
test
retf
leave
pop
adc
mov
ja
xor
jmp
shl
pop
xchg
and
push
clc
or
cmp
fisub
inc
push
dec
push
daa
repz
imul
sub
or
aaa
adc
jg
or
or
popf
inc
mov
mov
mov
movs
mov
pop
mov
xor
pop
dec
sbb
sbb
aaa
ret
adc
ret
lahf
pop
jno
and
push
inc
pop
push
and
lea
adc
adc
jne
fwait
cdq
(bad)
pop
nop
or
ds
sbb
loop
sub
pop
mov
cdq
xor
cs
push
pusha
mov
xchg
test
fild
test
dec
jmp
div
scas
stc
add
add
cmp
add
aad
push
jecxz
inc
push
jns
cmp
cli
jl
pop
add
xor
inc
retf
arpl
pusha
retf
xor
push
cmp
aas
in
pop
fiadd
push
jmp
stos
dec
aas
cdq
mov
sub
cmp
cmp
fist
daa
pop
je
and
jmp
es
pop
in
scas
and
push
in
mov
cs
mov
movs
(bad)
js
std
sbb
pop
(bad)
xchg
xchg
ret
sub
test
hlt
and
mov
rcr
mov
mov
jno
adc
jg
pop
push
mov
xchg
add
cmps
mov
xchg
inc
xchg
push
das
push
movs
xor
addr16
test
dec
repz
jbe
xor
loopne
mov
mov
fwait
mov
lods
stos
out
jg
sar
sbb
cmp
jmp
cmps
pop
push
mov
cmp
dec
mov
jp
inc
adc
retf
mov
loope
das
mov
mov
push
loope
pop
xchg
adc
dec
sub
cmp
and
cmp
xchg
or
mov
mov
add
or
xchg
and
cmps
cs
js
lahf
or
int3
push
mov
xor
cmp
test
inc
jl
mov
out
lods
adc
mov
cmp
mov
aas
sahf
pop
jmp
(bad)
mov
jmp
jmp
cld
jae
rol
or
mov
xchg
add
dec
scas
push
xchg
idiv
push
xor
popf
int
add
xor
mov
into
sbb
retf
add
push
push
dec
not
jle
cmp
data16
mov
cmps
mov
adc
bound
inc
dec
retf
out
pop
push
aam
mov
sbb
imul
cmp
jg
mov
dec
ret
inc
fcomp
test
inc
jge
add
lods
push
jge
idiv
iret
adc
adc
in
test
adc
ror
ins
pop
and
or
pop
in
fistp
in
xchg
jnp
lea
into
xlat
mul
cmps
retf
nop
fwait
push
enter
icebp
call
adc
mov
mov
movs
mov
cmp
mov
mov
jae
fcom
jae
ret
leave
sti
mov
mov
imul
cld
adc
pop
mov
jl
add
xchg
mul
add
movs
imul
call
jecxz
aad
movs
cmp
retf
jecxz
fiadd
sub
outs
and
add
enter
xlat
sub
cmp
int
push
dec
mov
ins
(bad)
in
push
ret
mov
jne
inc
jno
jns
pop
mov
xor
int3
aas
pop
scas
push
fcom
aaa
inc
hlt
or
fsub
or
lahf
jnp
mov
pop
aad
not
xor
ror
(bad)
sbb
(bad)
push
inc
es
cmp
xor
aas
jmp
popf
cmp
sbb
push
pop
jae
sub
push
cmp
pop
xor
xor
out
(bad)
jbe
add
add
mov
jecxz
fimul
fnstenv
push
cli
jo
xor
mov
and
lahf
fistp
hlt
push
movs
lock
cmp
jge
repz
adc
mov
fnsave
push
push
pop
push
push
cmps
jns
and
push
outs
cmp
cdq
cmp
test
inc
mov
push
leave
sbb
arpl
movd
or
ins
xchg
inc
int
mov
xchg
and
test
mov
fst
xor
xor
mov
imul
inc
cmp
mov
adc
inc
cmp
pop
lea
pop
mov
shl
div
(bad)
jg
mov
je
fcomip
out
cmp
adc
and
neg
or
xchg
and
cmps
std
aaa
cmp
daa
shl
loop
and
outs
cmp
fiadd
rol
pop
and
int3
jo
cmp
mov
mov
jmp
shl
mul
outs
add
or
xor
dec
dec
sti
lock
push
mov
pop
jno
pop
sub
mov
jmp
cmps
(bad)
out
and
cs
movs
inc
jecxz
sub
lds
dec
xor
inc
mov
loop
adc
repz
bound
cmp
jl
vmread
pop
retfw
jne
lods
mov
adc
dec
xlat
push
dec
jge
iret
loopne
dec
mov
adc
leave
loopne
sub
push
add
(bad)
xchg
mov
xchg
es
push
ds
lea
pop
xchg
outs
mov
fisubr
push
adc
aam
mov
push
in
dec
adc
mov
xchg
shr
sub
in
icebp
outs
jne
aad
pop
ins
sbb
ficom
xchg
inc
sub
pop
add
cmps
push
jle
add
pop
mov
mov
outs
or
or
cmps
loope
cmp
cwde
sbb
shl
xor
(bad)
pushfw
xchg
mov
les
addr16
push
int
fs
jmp
mov
jge
bound
aas
dec
add
mov
js
push
inc
pop
outs
cs
and
and
js
inc
and
cld
adc
xchg
sub
loopne
add
fidiv
jbe
pop
xchg
inc
sahf
mov
cs
jmp
dec
sbb
leave
call
mov
cmp
or
arpl
popf
jno
jbe
push
mov
sub
(bad)
mov
ins
mov
fidivr
pop
or
xchg
sub
repz
xchg
push
ret
pop
jp
gs
(bad)
pop
enter
xchg
push
sbb
add
retf
mov
push
mov
daa
cli
pop
lea
sbb
mov
pop
sahf
jo
adc
mov
ja
push
push
daa
fsubr
int3
jl
ins
lea
mov
nop
push
loope
aad
pop
ins
ja
or
pop
jmp
push
push
fild
mov
fisttp
inc
neg
push
push
loop
jo
into
leave
ds
popa
pop
(bad)
xchg
(bad)
adc
or
je
push
dec
push
and
cmp
and
xchg
jmp
jle
stos
jnp
sbb
mov
dec
daa
jp
std
aas
dec
add
dec
dec
inc
jb
lahf
aas
pop
int
or
js
ficomp
rcr
out
pop
push
cwde
call
add
aad
inc
lahf
outs
xor
and
sbb
xchg
imul
xor
fld
je
aaa
xor
gs
ja
mov
(bad)
inc
nop
mov
jo
mov
push
shl
mov
jle
cmp
dec
loopne
out
mov
pop
jno
dec
cmp
jl
(bad)
fsub
and
xchg
pop
sub
pop
pusha
cld
imul
pushf
(bad)
cmps
(bad)
mov
fidivr
or
xchg
loope
pop
inc
inc
jo
mov
pop
in
or
push
jmp
pop
pop
cli
js
shl
jl
xor
mov
in
inc
mov
pusha
and
inc
lea
or
sbb
ror
js
pop
cwde
fdivr
xchg
pop
leave
scas
stc
repz
popa
mov
mov
inc
sbb
xor
cwde
leave
mov
xor
cs
dec
loope
add
std
out
xchg
popf
ret
inc
sub
test
dec
test
push
and
repnz
retf
mov
pop
iret
ins
mov
push
out
adc
daa
bound
push
mov
mov
jecxz
pop
xchg
leave
dec
jmp
push
adc
les
mov
sub
gs
push
daa
sar
inc
xor
pop
adc
mov
movs
xlat
mov
loopne
jecxz
dec
movs
mov
inc
cmp
ins
mov
mov
fucomp
adc
shl
lds
scas
mov
mov
xchg
call
dec
cmp
pop
dec
xor
adc
ins
into
mov
das
mov
mov
outs
leave
out
cli
repnz
shl
mov
push
pop
xchg
cmps
ret
lods
cmps
neg
icebp
call
cmps
push
inc
xchg
jmp
pop
sahf
pop
aas
jne
out
and
test
iret
lock
adc
mov
cs
cmp
inc
mov
aam
in
jno
mov
pop
jmp
mov
sbb
fwait
xchg
cmp
outs
and
nop
cmc
add
imul
xlat
push
mov
repnz
dec
mov
hlt
jae
call
inc
or
popf
addr16
mov
fcmovu
sub
out
popa
inc
push
push
mov
pop
pop
sub
stos
loopne
js
push
addr16
shl
pop
shl
aaa
psubsb
push
sbb
out
pop
and
nop
frstor
icebp
dec
cmp
(bad)
ficomp
outs
popf
mov
cdq
jle
lahf
gs
dec
push
xor
mov
push
sub
cdq
xchg
ins
jbe
mov
inc
in
push
loope
mov
and
dec
rcr
and
xor
js
movs
(bad)
in
ror
fdivr
out
cs
fwait
loopne
loopne
and
ss
jae
push
mov
pop
push
in
cmp
xor
aaa
or
popa
out
inc
mov
mov
cmc
cmps
aaa
mov
jb
(bad)
cdq
sbb
hlt
xor
push
pop
dec
loope
pop
fisubr
sysret
pop
mov
jmp
inc
(bad)
test
fdivr
adc
pop
rcr
mov
shl
add
not
dec
les
or
push
ja
out
inc
push
push
sbb
loope
in
and
pop
sub
ins
cmc
cmp
outs
jns
pop
test
cld
inc
ret
push
icebp
mov
adc
xor
mov
xchg
outs
add
pop
sub
psrld
xchg
arpl
xchg
adc
mov
adc
mov
jmp
add
push
out
hlt
sub
sub
mov
mov
retf
(bad)
sahf
(bad)
push
ins
push
dec
mov
or
pop
cmp
fwait
xor
jo
pop
out
sti
movs
push
xor
mov
inc
inc
sbb
pop
mov
fld
es
clc
sbb
sub
cmc
push
xchg
sbb
push
inc
sub
jge
aad
js
sub
xlat
adc
stos
out
dec
dec
in
push
scas
xor
not
sti
imul
imul
cmp
inc
arpl
cli
add
jb
shl
(bad)
ret
mov
add
jne
hlt
data16
mov
lock
gs
retf
adc
push
or
sar
cmp
stos
loopne
pop
dec
in
shl
mov
stos
push
mov
jl
pop
push
scas
repnz
lahf
pop
fbstp
mov
int
or
das
xor
cwde
div
xchg
xchg
mov
into
adc
inc
aad
push
mov
mov
lock
jae
pop
inc
retf
in
daa
loopne
(bad)
xor
and
xchg
sub
addr16
xor
push
in
or
xchg
or
and
xor
call
or
jmp
push
or
icebp
outs
xchg
add
cs
or
das
xor
push
xor
es
js
(bad)
or
ss
fbstp
sbb
adc
fcom
sbb
les
mov
cmp
jecxz
push
dec
xchg
retf
enter
sub
mov
stos
fsub
mov
mov
out
fwait
adc
adc
pushf
fs
sub
add
or
and
movs
push
loopne
ins
mov
sti
ins
in
adc
sbb
dec
pusha
pop
data16
xchg
lds
push
pop
pop
(bad)
fdivp
stos
cmp
xchg
aam
call
fwait
(bad)
pop
pop
and
imul
(bad)
mov
push
pop
pop
ret
out
dec
mov
inc
aas
fsub
hlt
(bad)
jbe
cmp
cs
jp
ret
dec
dec
mov
mov
push
fadd
sbb
cmc
ds
mov
inc
cmps
inc
ffree
lods
icebp
jbe
ds
out
lods
clc
les
push
jle
je
mov
jmp
lods
adc
xchg
in
xchg
sti
movs
loopne
iret
push
rcl
dec
inc
mov
sbb
aad
je
aaa
imul
jl
mov
sub
jbe
and
pusha
aad
retf
push
mov
mov
sar
jecxz
push
push
dec
fchs
dec
xchg
outs
add
mov
push
lock
mov
push
mov
(bad)
xor
or
cmp
out
retf
mov
pop
shr
push
(bad)
pop
add
mov
test
pop
cmps
jle
dec
call
sub
cmps
add
arpl
xlat
xchg
push
sub
stos
cmp
cs
add
xchg
(bad)
movs
sub
(bad)
mov
out
inc
gs
push
xor
not
ins
loope
xchg
outs
and
pop
sub
push
pop
and
mov
and
add
les
push
fcomp
int
dec
(bad)
fdivp
add
pushf
mov
int3
jg
popa
pop
mov
inc
rcl
adc
(bad)
jns
pusha
add
lods
xor
xchg
(bad)
mov
xor
sti
sub
in
loopne
ret
jne
ja
dec
push
leave
call
retf
mov
fnsave
out
mov
into
jb
mov
dec
addr16
in
xor
mov
dec
xor
pusha
push
cld
gs
push
aaa
xchg
adc
or
outs
add
fstp
xor
cmp
test
add
jne
ins
push
xchg
push
loope
jno
fwait
retf
retf
std
lods
push
sbb
jno
pop
mov
cmps
clc
out
and
mov
outs
dec
daa
(bad)
cmp
jne
imul
jns
mov
add
je
pop
call
sbb
lock
and
add
xchg
mov
jecxz
sbb
xor
push
or
mov
test
test
jno
das
retf
inc
xor
mov
lds
mov
dec
mov
xor
not
retf
stos
test
jmp
mov
fsub
jmp
data16
loopne
jle
mov
sub
nop
mov
and
test
jns
dec
lock
mov
xchg
sbb
ret
fmul
cmp
int
mov
adc
cs
ins
cwde
ret
sbb
aas
out
push
xchg
dec
nop
or
pop
les
cmp
push
out
mov
xchg
outs
gs
lods
fldcw
jo
leave
cmps
inc
loopne
je
or
bnd
add
mov
add
jbe
sti
cwde
mov
sub
out
mov
jae
mov
dec
mov
lock
ror
xlat
popa
leave
mov
xor
mov
xchg
out
pop
gs
cmp
sub
sbb
sub
cdq
pop
mov
mul
sub
mov
xor
out
and
test
jl
sbb
cli
sbb
add
jo
sbb
sbb
sub
in
js
mov
fwait
pop
inc
or
mov
push
mov
dec
lahf
stc
sub
sub
inc
test
mov
dec
data16
shl
add
ss
out
sbb
inc
adc
ret
rcl
inc
cld
cmp
sbb
sub
jecxz
inc
pop
sbb
out
adc
mov
cs
or
xchg
lock
or
xchg
es
gs
addr16
inc
mov
jb
sub
pop
mov
popf
cs
dec
fcmovnb
add
mov
push
push
scas
fisub
add
mov
and
sub
fxch
shl
mov
push
mov
dec
jb
arpl
nop
rol
js
xlat
scas
scas
cli
push
or
mov
adc
inc
dec
in
fwait
mov
jne
leave
mov
inc
cmp
imul
pop
std
(bad)
pop
mov
xchg
and
xchg
cmp
xchg
repz
imul
xor
xchg
icebp
mov
fnstsw
dec
iret
ins
mov
enter
jp
aaa
loopne
adc
push
popa
sbb
adc
sahf
mov
and
fdivr
std
push
push
enter
adc
adc
sbb
jg
pop
imul
xchg
sbb
test
neg
mov
cli
leave
bound
push
xchg
jg
pop
and
cmp
cmp
call
aas
or
mov
inc
ins
popa
mov
mov
inc
sub
sbb
sub
arpl
loop
push
mov
ror
mov
xchg
or
cwde
mov
add
enter
sti
mov
repz
mov
push
xchg
iret
test
mov
jnp
push
shr
mov
mov
scas
mov
and
jp
repz
and
and
add
addr16
push
sub
xor
pop
pop
mov
inc
xor
push
sub
dec
rcl
repz
lock
sti
add
jns
inc
data16
adc
xchg
xchg
push
or
cmps
scas
add
adc
inc
fild
xchg
retf
push
mov
inc
and
retf
cdq
xor
pop
test
xlat
mov
push
shl
xor
loop
xor
dec
jg
xchg
lds
and
jne
mov
fmul
mov
lea
daa
push
jp
pop
xchg
mov
shl
loopne
shr
arpl
pop
inc
(bad)
mov
inc
push
loope
sbb
push
pop
ja
dec
sbb
dec
sahf
xor
mov
leave
xchg
(bad)
cmp
stos
je
je
mov
push
fist
adc
push
js
int3
rcr
shl
test
retf
fsub
std
jp
cmc
adc
pop
das
fs
scas
fidiv
xchg
int
xor
pop
jnp
out
inc
cmps
mov
das
mov
or
loopne
mov
enter
psubusb
scas
fsub
or
cwde
js
sub
sbb
pop
and
aaa
mov
pusha
jmp
adc
aam
adc
daa
add
pop
xchg
je
adc
fadd
jp
test
stos
inc
and
jae
cmp
jno
cmp
sub
cmp
(bad)
call
iret
sub
cmp
data16
cmps
stos
and
ss
fcmovnb
pop
jo
sti
cld
ja
sub
movs
imul
addr16
pushf
mov
sub
mov
adc
daa
stos
mov
mov
scas
movntps
and
jnp
push
iret
sub
pop
cmp
sbb
ret
jne
scas
push
cmp
pop
(bad)
dec
shl
fsubr
cmp
fcmovnu
and
push
mov
int3
mov
push
aad
or
mov
fisubr
(bad)
xor
repz
mov
xor
cmps
sub
jmp
push
xor
sbb
sbb
leave
in
push
sbb
push
lods
in
adc
cs
cmp
(bad)
pop
and
dec
inc
or
push
popf
lock
fbld
ins
test
(bad)
mov
sbb
fdiv
in
gs
iret
mov
xchg
daa
sbb
jmp
ja
(bad)
bound
in
mov
jns
jae
out
mov
sar
cli
jg
sub
dec
add
and
mov
(bad)
retf
sbb
push
pop
inc
xchg
push
stos
xor
sahf
call
push
inc
(bad)
dec
mov
push
jl
xchg
enter
jo
out
popf
and
fwait
adc
stos
add
push
pop
cmp
test
add
mov
aas
movs
mov
mov
retf
cmc
jo
lea
cmc
jecxz
loopne
outs
or
mov
mov
ins
pop
push
lahf
xchg
push
jo
fcmovne
les
jg
lds
or
mov
imul
ret
lods
jnp
iret
mov
movs
xor
pop
fiadd
out
or
popf
push
shl
in
xchg
push
and
dec
xor
stos
or
and
xchg
xor
sub
stos
push
mov
sbb
mov
add
inc
pushf
mov
bound
or
mov
jg
call
or
aas
dec
dec
sbb
xchg
jp
enter
mov
mov
push
jno
pop
push
inc
or
test
test
cmp
push
xor
nop
ja
sbb
inc
daa
add
pop
movs
mov
xchg
jl
or
clc
inc
inc
in
adc
lahf
ins
cs
or
call
xchg
mov
inc
(bad)
mov
add
data16
mov
rol
xchg
lods
jo
mov
arpl
and
dec
test
pop
inc
mov
xchg
idiv
push
out
das
pusha
xor
mov
jmp
adc
dec
mov
mov
mov
mov
pop
mov
in
pop
pop
in
dec
or
dec
js
cli
adc
jbe
jno
jp
jo
int
sahf
imul
test
dec
mov
pop
pop
call
push
push
int3
ja
mov
push
sahf
jmp
mov
inc
push
loopne
int
xor
sbb
adc
sub
pop
outs
cld
jl
push
pop
add
sar
cdq
jle
pop
popf
adc
or
jmp
mov
cmp
cmp
adc
adc
int
into
in
les
ficom
aam
mov
leave
sahf
mov
mov
cmp
les
xor
mov
fcomi
inc
adc
push
les
cmps
cmc
(bad)
sub
aad
rol
aaa
mov
mov
fsubr
out
xchg
push
(bad)
loopne
xor
test
fwait
movs
outs
cdq
cmp
sub
mov
lods
dec
mov
sub
repz
imul
xchg
repz
test
(bad)
popf
ret
push
sbb
xor
and
push
and
cs
inc
adc
test
shl
jge
arpl
mov
sbb
xchg
mov
adc
pop
call
clc
in
push
cdq
mov
and
ret
mov
jg
adc
mov
into
jmp
push
daa
xchg
xchg
push
adc
std
stc
mov
(bad)
cmp
test
outs
fstp
inc
sub
scas
fidivr
ins
addr16
fidiv
inc
jae
mov
stos
scas
cmp
jmp
xor
inc
cwde
popaw
xchg
retf
inc
cli
int
nop
add
push
retf
shl
sbb
and
push
aas
sbb
jno
push
or
mov
ja
dec
mov
ror
cmp
sar
sti
shr
push
add
test
scas
mov
dec
cmp
imul
xchg
push
shl
jg
push
fdivr
xchg
jne
xor
and
(bad)
sar
and
pop
adc
mov
jno
sahf
adc
mov
adc
adc
add
jnp
adc
pop
outs
fstp
loop
rcl
xchg
mov
in
call
jnp
icebp
jmp
and
or
jne
call
loope
nop
stos
sub
mov
cmp
jmp
sbb
dec
(bad)
les
or
xchg
sti
out
mov
leave
rcl
dec
sar
shl
xor
popa
(bad)
shl
jmp
jmp
and
jnp
mov
xchg
dec
sbb
add
jbe
shr
cmp
sbb
xchg
in
pop
push
dec
inc
(bad)
stc
pop
pushf
inc
in
jns
outs
inc
shl
dec
add
inc
mov
pusha
add
cmp
sub
clc
lahf
jl
repnz
push
pop
inc
aaa
sub
mov
rcr
shr
push
sar
jb
push
hlt
ins
sbb
xor
adc
mov
(bad)
pusha
mov
mov
sub
and
test
mov
push
inc
stos
adc
aad
ror
fbld
and
ja
push
mov
pop
sub
ss
stos
loopne
cmps
test
pop
inc
test
(bad)
imul
xchg
aam
mov
mov
jmp
fadd
jg
outs
test
jno
dec
add
mov
inc
dec
rol
adc
aas
std
shl
clc
dec
je
mov
xchg
rcr
imul
retf
sub
inc
adc
jno
retf
xor
neg
mov
inc
xor
cmp
pop
int
cmp
and
xlat
fucomip
stos
rcr
jge
pop
les
leave
or
and
shr
mov
add
inc
add
pop
push
iret
ds
and
push
sub
mov
out
test
sub
jae
int
push
sti
dec
repnz
scas
push
add
fmul
inc
pop
add
dec
ret
push
iret
mov
fiadd
fwait
xor
and
addr16
shl
ret
lods
lea
pop
cld
mov
pop
ds
push
addr16
ins
sub
push
xor
or
push
(bad)
mov
jae
mov
xor
pop
aam
pop
add
imul
out
fbld
arpl
ret
std
push
mov
add
xchg
push
movs
xor
test
or
fdivr
jbe
sub
dec
gs
xchg
pop
mov
fwait
jb
ror
pop
push
out
jbe
pop
call
push
xor
in
mov
cmp
dec
push
idiv
push
fistp
xor
stos
mov
or
or
jno
and
xlat
retf
leave
iret
jno
push
cwde
into
lods
adc
psrld
bound
sub
cmp
repz
jge
push
and
dec
sub
jb
movs
adc
adc
js
adc
xchg
aaa
inc
sbb
nop
jp
aaa
push
xor
sahf
adc
mov
int3
dec
cmp
sub
retf
pusha
inc
scas
stos
pop
int
mov
in
call
jae
icebp
cmc
aad
fcom
(bad)
push
dec
loope
ss
cmc
(bad)
and
cmp
adc
cld
mov
dec
mov
jmp
pop
jb
aam
fnsave
in
arpl
test
mov
(bad)
out
cld
in
leave
cmp
les
movs
stc
sub
sti
mov
dec
stc
mov
mov
xor
enter
mov
xor
imul
imul
cli
push
movs
pop
push
enter
out
lock
mov
(bad)
test
in
aas
xor
and
jb
shl
jb
dec
cmp
and
pop
add
adc
mov
pusha
scas
cmp
das
dec
jns
fs
mov
(bad)
fsubr
mov
mov
or
adc
xchg
adc
add
sbb
xchg
lahf
lods
jge
lahf
lods
xor
or
push
fadd
into
mov
stos
cwde
sti
mov
xor
div
movs
sbb
jno
sbb
retf
sahf
mov
push
(bad)
shr
stos
mov
push
test
aad
xor
lock
cvtpi2ps
mov
sub
test
inc
fabs
or
test
mov
ret
sub
imul
ja
je
push
test
cmp
mov
mov
addr16
add
add
mov
adc
or
jle
enter
jae
pop
in
push
sub
movs
test
arpl
add
in
test
clc
in
xor
mov
pop
repz
(bad)
sar
mov
jb
adc
(bad)
cmp
clc
xor
icebp
sar
std
shr
sbb
loopne
daa
add
mov
cmp
loopne
outs
int
in
loopne
nop
push
push
test
add
gs
shl
sbb
mov
jmp
mov
ret
mov
push
loopne
and
outs
stos
dec
movs
cdq
mov
stc
push
mov
lds
mov
int3
mov
or
arpl
fstp
icebp
sbb
(bad)
jbe
outs
mov
mov
xor
cmp
jo
and
nop
repnz
dec
jge
fdivr
sub
stc
pushf
rol
push
mov
cmp
mov
outs
cs
in
or
xor
sub
inc
daa
xchg
loopne
jno
push
retf
mov
push
cmp
fisttp
shl
xchg
xchg
int3
loopne
cs
mov
jecxz
sub
mov
int3
push
pusha
retf
xchg
gs
clc
pop
aad
sar
movs
mov
mov
cmc
scas
retf
lods
sub
mov
dec
fsub
clc
sub
mov
push
or
cmp
into
adc
push
and
pop
dec
movs
and
push
mov
ja
add
jle
jle
and
rol
jbe
mov
hlt
xchg
xor
stc
fcomi
sub
mov
or
and
(bad)
jl
je
sbb
pop
adc
dec
inc
xor
test
scas
sub
xchg
cld
inc
adc
stos
mov
xchg
and
test
cmp
shl
adc
out
test
(bad)
xchg
enter
mov
xchg
and
fcmovnbe
cld
pusha
push
or
pop
mov
fdivr
repz
dec
outs
test
push
sbb
xchg
sub
lods
mov
jnp
hlt
sub
test
cmp
mov
ret
xor
mov
inc
and
scas
idiv
sub
ret
fnsave
mov
mov
bound
inc
mov
push
aam
mov
scas
mov
mov
adc
cwde
pop
or
push
sar
mov
neg
and
sub
inc
jns
aam
and
in
test
mov
mov
shr
xor
adc
hlt
sbb
es
call
mov
(bad)
push
cmp
mov
sti
jg
in
xchg
push
cmp
in
xchg
pop
ja
inc
jns
mov
pop
mov
mov
gs
and
shl
xor
aam
loopne
mov
lea
xor
fstp
enter
jmp
push
push
lods
mov
sbb
adc
into
xchg
aas
call
cwde
std
xchg
popf
shl
and
(bad)
xlat
dec
(bad)
in
das
dec
gs
in
leave
mov
mov
mov
enter
adc
and
mov
dec
shl
cli
xchg
mov
dec
pop
icebp
lahf
pop
or
add
in
adc
sub
adc
ret
popf
sub
rcl
loop
pop
jmp
pop
mov
out
and
mov
pop
xor
and
sub
fwait
test
scas
add
enter
push
in
and
and
ins
add
xchg
fdivr
cmp
dec
in
and
retf
mov
add
movs
xor
xlat
xor
cmp
ja
xchg
xor
ja
jp
movs
jmp
fwait
cmps
adc
xor
movs
adc
mov
cmps
iret
aaa
dec
repnz
clc
push
cdq
das
sbb
mov
outs
xchg
int
call
fadd
pop
jecxz
movs
int
pop
pop
xchg
mov
mov
arpl
mov
cmp
rol
or
aad
and
or
push
pop
out
xchg
jnp
scas
cli
ret
fcomp
pop
(bad)
jno
or
pop
aaa
lods
sub
lods
pushf
pop
xor
pop
jle
ret
adc
pop
pop
test
cmp
sar
dec
xchg
ffreep
cmp
retf
xchg
lahf
push
ja
mov
xchg
(bad)
fwait
call
out
cmp
sub
adc
movs
or
add
pop
pushf
inc
xchg
rcl
mov
loop
jno
repz
sub
popf
cmp
aam
std
xchg
and
leave
ins
int
sub
test
push
je
jmp
out
mov
test
jmp
aaa
mov
imul
ret
mov
inc
in
adc
mov
ds
xor
add
pop
loope
adc
lock
(bad)
(bad)
iret
leave
adc
jnp
aad
mov
mov
aad
repz
loop
push
jnp
popf
js
or
lods
sub
pop
pop
cmp
ficomp
mov
sbb
sub
arpl
or
adc
dec
lock
int3
leave
lods
cld
inc
xor
imul
jle
cmp
jg
scas
dec
jno
xchg
lods
out
push
and
and
sbb
je
mov
pushf
repz
push
push
jns
(bad)
mov
sub
dec
and
jbe
inc
movs
dec
test
stos
pop
push
mov
pop
sub
adc
pop
out
std
(bad)
imul
nop
js
sub
mov
pop
jecxz
adc
lods
outs
dec
lahf
retf
fcmovu
stos
sub
push
imul
aaa
sub
rcr
pop
pop
or
jl
aaa
mov
xchg
sbb
mov
mov
sub
jmp
imul
cmp
rcl
popa
jbe
jmp
mov
retf
pop
pop
jp
mov
mov
or
gs
lods
cmp
mov
xchg
xlat
mov
or
inc
dec
jg
adc
aam
mov
jle
mov
fdiv
push
sbb
test
rcr
pop
pop
mov
out
push
mov
pop
out
push
or
ins
sbb
mov
lahf
sbb
test
pop
movs
mov
adc
enter
push
mov
sub
cld
xchg
add
or
mov
(bad)
cld
jmp
outs
and
into
dec
jo
test
mov
or
dec
cmps
mov
mov
xchg
inc
xchg
mov
loop
retf
popa
push
xor
scas
(bad)
jmp
bound
test
je
daa
fisub
test
std
xchg
and
(bad)
aam
sub
xchg
cmp
rcl
xchg
push
sub
cld
mov
sahf
test
fiadd
sub
xchg
xchg
dec
repz
sbb
outs
mov
les
cmp
inc
jb
fmul
jmp
out
(bad)
mov
dec
rcl
push
aas
mov
push
xor
(bad)
out
mov
jmp
jecxz
mov
lods
iret
xchg
mov
xlat
push
loope
push
mov
push
fucom
mov
cmp
xchg
ficomp
jge
xchg
mov
cmp
push
mov
adc
or
loope
inc
mov
mov
pop
and
pop
(bad)
dec
mov
xchg
(bad)
mov
xchg
fsubp
lahf
add
or
repnz
mov
sub
jb
mov
out
push
ins
push
jo
enter
out
stos
clc
xor
or
lea
cmp
loope
mov
mov
sbb
outs
jecxz
ficom
adc
retf
inc
mov
fnstenv
in
sub
loop
push
mov
daa
sbb
(bad)
push
push
loope
(bad)
pop
mov
push
mov
fs
and
mov
or
cmp
or
ds
adc
sbb
dec
xchg
mov
xchg
xchg
es
imul
outs
sbb
movs
iret
mov
jle
pop
or
and
mov
push
sub
push
pop
enter
in
mov
jmp
jo
iret
bound
retf
daa
pop
ror
enter
jle
mov
mov
mov
ret
cmps
cmps
or
addr16
push
adc
or
sbb
mov
test
imul
mov
out
mov
ficom
out
mov
nop
jns
int3
daa
xor
mov
xchg
test
ds
aad
fimul
push
xchg
xchg
rcl
mov
mov
in
movs
aam
in
in
add
push
sahf
push
sar
jb
outs
xchg
and
popa
jnp
mov
mov
push
or
adc
inc
mov
int3
ret
pop
mov
ins
adc
or
pop
scas
sub
lock
(bad)
scas
ds
ins
xchg
pop
xchg
add
data16
out
scas
ret
jle
retf
adc
adc
inc
dec
jmp
cmps
inc
mov
pop
mov
sub
rcr
cld
mov
fstp
or
mov
or
jbe
sub
jnp
hlt
in
mov
mov
nop
inc
xchg
psllq
ins
sub
adc
add
movs
mov
xchg
push
ds
stc
xor
retf
ror
cs
out
jl
cmp
imul
loop
pop
xchg
push
shl
xor
jge
push
jl
cmp
stos
in
cwde
sbb
cmps
or
fcom
lock
push
push
jle
aas
inc
dec
and
popa
jmp
adc
sub
movs
pop
pusha
add
lahf
call
or
push
test
dec
cwde
ret
dec
jg
adc
out
(bad)
jge
xor
adc
movs
xchg
neg
mov
push
gs
jne
clc
dec
(bad)
xor
das
push
pusha
sbb
xchg
repz
retf
push
push
pop
jmp
and
stos
xor
sub
mov
std
xor
gs
sbb
ins
std
sahf
mov
scas
jecxz
inc
jmp
fcomp
push
mov
xchg
mov
add
adc
sub
push
jb
push
add
jl
push
push
in
(bad)
sbb
ja
mov
push
add
call
mov
pop
lea
test
adc
xchg
lods
mov
jge
iret
xor
mov
(bad)
gs
je
xor
fcom
adc
xchg
std
out
sbb
sbb
adc
sahf
mov
int
push
pop
pop
das
push
in
cmovno
jmp
dec
fsubr
add
arpl
aad
(bad)
pop
add
shl
jns
dec
cmp
shl
jge
cdq
scas
daa
push
sbb
in
push
mov
imul
pop
pop
aad
adc
xor
push
mov
outs
jo
into
clc
into
lea
add
jp
xchg
es
mov
scas
inc
sub
add
add
pop
sti
push
bound
mov
or
aad
sbb
call
mov
arpl
sub
cwde
std
add
loop
or
daa
dec
jl
test
in
mov
inc
pop
callw
xchg
push
xchg
ror
cli
sub
adc
push
mov
popf
mov
or
outs
cmps
lods
ja
inc
jae
fucomip
fbstp
cmp
inc
jecxz
and
mov
(bad)
enter
add
add
popa
in
mov
or
retf
cwde
arpl
jp
add
sbb
dec
scas
js
mov
adc
lods
mov
mov
jg
or
or
sub
lock
mov
dec
imul
jae
int
sub
xchg
ficom
aaa
jbe
loop
pop
fst
pop
into
and
rcr
or
push
mov
fnsave
and
(bad)
lods
mov
add
in
rcl
dec
ret
sub
dec
adc
push
xchg
cmp
xchg
movs
hlt
or
dec
rcl
aas
mov
adc
jecxz
shl
mov
mov
sahf
aad
int3
inc
mov
mov
or
shl
(bad)
cdq
ret
sub
mov
xor
jp
pop
dec
(bad)
fdiv
(bad)
aam
push
mov
out
test
jb
lea
dec
fwait
clc
mov
popf
in
push
dec
fcom
jae
inc
xchg
clc
mov
out
sub
ss
sti
rcl
xchg
aaa
fist
stos
dec
addr16
les
outs
lea
into
ror
xor
mov
sub
jmp
xchg
mov
adc
or
or
pop
push
outs
loopne
pushf
aaa
xchg
jae
mov
pop
hlt
cdq
pushf
iret
or
jo
(bad)
push
int
adc
out
dec
out
push
sub
mov
mov
cld
cwde
outs
stos
jp
mov
movsx
cmp
sbb
jmp
xchg
out
sbb
push
pusha
jmp
xchg
lods
in
jbe
imul
jge
mov
adc
push
xchg
pop
add
add
mov
icebp
call
pop
dec
sar
and
dec
adc
xor
arpl
es
mov
push
add
repz
pushf
fstp
arpl
outs
xchg
pop
mov
scas
fistp
and
repz
fisubr
dec
iret
ins
imul
cmp
fsubr
jp
pop
or
rcl
mov
fs
out
cdq
jle
shl
out
xor
add
pop
sub
mov
xchg
rol
sub
jmp
in
loop
mov
ins
mov
sbb
unpcklps
xchg
stos
loop
pushf
xchg
jae
aad
xchg
(bad)
sbb
mov
aad
or
lock
(bad)
ins
cmc
mov
mov
or
ins
lea
out
fcmovnu
rol
mov
add
(bad)
xor
(bad)
pop
push
inc
aam
jmp
fsubr
ins
sub
pminub
pop
jl
mov
ret
addr16
push
or
pop
inc
nop
or
xlat
xor
repz
adc
addr16
mov
push
aad
cmp
outs
pop
dec
mov
push
cmp
cmp
icebp
ins
ds
push
xchg
out
cs
mov
mov
ja
pop
shr
arpl
xchg
and
push
add
pop
xchg
xchg
jae
lods
(bad)
mov
sbb
inc
sbb
sbb
rcr
push
cmps
and
ror
push
jecxz
fbstp
ins
push
in
adc
xchg
int3
(bad)
rcl
out
aas
jecxz
cmp
adc
enter
mov
jo
mov
sub
sub
in
mov
rcl
or
fcom
cmp
and
adc
stc
sahf
fidivr
pop
dec
xor
pop
and
pop
mov
xor
pop
div
test
rol
scas
cli
fstp
xlat
mov
std
lods
pop
xchg
mul
ret
out
in
pushf
push
mov
xlat
arpl
cmc
mov
out
loope
nop
pop
in
add
lahf
dec
dec
cmp
cmp
push
sti
in
in
ror
outs
enter
dec
data16
in
and
lahf
test
das
rcr
add
nop
fcom
adc
outs
(bad)
fist
shr
lods
lods
ret
xor
push
pop
in
gs
pop
push
mov
add
add
xchg
cmp
ret
xor
jae
or
jne
pop
mov
mov
cdq
rol
pushf
pop
popf
ins
in
stos
sub
jnp
fsub
std
faddp
fimul
cmp
es
jns
add
stc
add
xchg
arpl
or
dec
pushf
(bad)
mov
xchg
sub
push
add
inc
dec
call
cli
add
dec
in
jge
mov
ret
leave
or
jmp
mov
xchg
dec
pop
(bad)
inc
js
or
mov
jle
(bad)
retf
sub
fld
lock
cmps
pop
clc
mov
pushf
cdq
push
inc
push
(bad)
adc
ss
sti
das
sahf
mov
or
mov
xlat
xchg
adc
retf
and
out
mov
xchg
movs
neg
sahf
xor
or
in
pop
lahf
ins
cmps
pop
sub
test
push
outs
cmp
jg
add
xor
cmp
leave
adc
movs
or
rcr
jecxz
push
stos
adc
mov
xor
pop
test
push
cwde
cmc
in
arpl
sbb
dec
je
lahf
adc
mov
fbld
cmp
push
xchg
in
xchg
and
or
mov
into
cld
push
iret
pop
push
retf
shl
dec
add
ret
sbb
mov
add
pop
jg
push
mov
cs
push
push
sahf
test
call
ins
(bad)
cmps
imul
das
clc
and
ss
pop
outs
mov
ins
jge
xlat
inc
mov
ja
fwait
out
mov
cli
push
movs
loope
xor
pushf
int
in
jae
sbb
push
sbb
cmp
adc
ds
les
pop
inc
into
fucomp
(bad)
shl
out
push
adc
inc
pop
sbb
dec
push
je
cmp
sbb
retf
jg
mov
int
sub
sbb
sbb
paddsw
fadd
stc
pushf
test
mov
cmp
xchg
fmul
jmp
clc
loopne
test
retf
sar
dec
dec
adc
adc
call
sbb
sub
std
sar
fwait
inc
in
enter
push
jnp
(bad)
aam
adc
and
pop
xlat
push
or
mov
lods
and
test
jmp
inc
je
(bad)
jecxz
pop
jmp
jmp
push
ss
push
and
add
test
es
lods
adc
and
sbb
jg
mov
mov
sbb
xchg
(bad)
mov
sub
cmp
xor
fsubr
inc
daa
mov
out
push
ret
out
mov
and
lock
ins
das
xchg
inc
fistp
jo
mov
lea
mov
sar
sbb
push
test
inc
ins
jo
scas
mov
cli
mov
fs
popf
cmp
out
stc
push
dec
call
push
lahf
mov
clc
and
(bad)
(bad)
retf
mov
add
cmp
in
mov
mov
jle
stos
rol
in
fbstp
inc
fld
ins
retf
dec
cld
shl
sub
sbb
loope
in
out
loopne
xor
jmp
push
daa
jge
pop
dec
not
fidiv
xor
mov
inc
xchg
stos
cmp
loop
repnz
jae
ret
lock
cmps
pop
and
jle
xchg
lods
outs
jmp
fistp
or
je
mov
nop
das
xchg
inc
out
xor
inc
fistp
or
sbb
sar
les
add
inc
jo
pop
xlat
int3
das
loope
mov
push
(bad)
dec
mov
and
test
scas
or
lahf
movs
jae
fcomi
lods
jp
inc
div
lods
sti
xlat
sbb
jecxz
mov
sbb
stos
retf
add
(bad)
out
pop
lock
lea
jmp
push
push
out
and
pushf
jo
and
bound
adc
repz
lock
or
mov
sub
popa
ficom
pushf
retf
mov
aam
xor
push
or
fcmovnu
xchg
mov
or
stc
sub
sar
jmp
dec
pop
out
mov
or
xchg
repz
lea
test
mov
cmp
call
cmc
dec
pusha
push
xchg
xor
lods
rol
xchg
leave
dec
add
test
dec
popf
mov
scas
out
pop
mov
mov
inc
fisub
fwait
arpl
or
mov
dec
ror
movs
aaa
in
jmp
mov
outs
out
aad
mov
and
inc
pusha
push
cwde
repz
inc
mov
sbb
and
dec
shr
ins
bound
mov
pop
ins
outs
xor
loopne
in
or
lods
icebp
lods
sub
lock
ins
pop
rcr
push
mov
push
nop
push
inc
call
scas
mov
xchg
jo
jno
sti
imul
mov
push
stos
adc
aaa
push
add
add
test
ror
xchg
cli
std
jnp
repz
dec
ret
or
js
call
scas
scas
sti
and
jmp
aad
pop
imul
(bad)
cmp
mov
jno
stos
jg
sbb
ins
call
ficomp
cli
fmul
sbb
scas
add
rol
adc
sub
inc
dec
xor
push
mov
repnz
jns
data16
push
cmp
mov
mov
into
adc
dec
stos
dec
retf
cld
enter
movs
lds
jg
xchg
mov
test
mov
scas
aas
jmp
ficomp
retf
xor
stc
mov
mov
out
sub
shl
push
xchg
adc
mov
mov
js
into
inc
xchg
sub
jmp
mov
shr
mov
pop
mov
in
loope
dec
idiv
stc
inc
cld
(bad)
ds
and
loope
xchg
jae
arpl
(bad)
adc
ins
mov
and
xor
cmps
or
call
pop
jl
inc
clc
fs
xchg
or
add
rcl
shl
jle
adc
xchg
cmp
in
adc
mov
lock
jle
mov
stc
push
sbb
inc
push
fsub
push
jbe
or
data16
pop
mov
out
loop
lods
jbe
out
div
push
mov
xchg
sub
dec
push
sub
pop
cmp
push
test
cli
sahf
out
mov
imul
out
pop
fst
stos
or
out
faddp
stos
loope
call
mov
cmp
pop
add
sub
mov
xchg
pop
adc
push
pop
mov
dec
sub
mov
sbb
pop
adc
or
lock
cmp
out
jmp
lahf
inc
xchg
add
stc
rcr
sub
dec
int3
imul
pop
xor
sbb
sbb
cmp
cmps
repz
neg
imul
mov
(bad)
int
adc
push
int3
cli
lds
(bad)
fcomip
popa
jg
jns
xchg
inc
(bad)
pop
popa
add
sahf
sbb
loope
sti
gs
scas
xlat
pop
cmp
test
or
nop
mov
cmp
pop
call
pop
(bad)
call
lds
mov
sbb
inc
sbb
cmp
mov
stc
push
jmp
xor
adc
test
or
es
cld
lahf
inc
jne
lods
add
movs
and
(bad)
jl
pop
sub
add
push
sub
popa
fcom
sub
jmp
and
mov
dec
sub
or
leave
push
adc
int3
mov
mov
xor
fadd
arpl
jbe
neg
push
sahf
out
ins
lods
in
das
out
mov
push
pushf
fs
cmps
inc
outs
jae
xor
lock
xchg
mov
push
in
test
cmp
in
cmc
enter
push
xchg
lds
sub
mov
fsub
scas
mov
sbb
ins
out
xchg
mov
sbb
inc
pop
mov
mov
adc
push
jne
ficomp
mov
bound
lods
int
fwait
mov
ret
adc
pop
pushf
push
ret
add
add
push
rcl
jb
addr16
add
push
mov
dec
dec
data16
sbb
mov
in
aam
in
sub
xor
mov
ror
mov
jmp
cmp
adc
pushf
xchg
fld
data16
aaa
pop
jmp
mov
and
in
inc
push
push
not
inc
adc
scas
jnp
mov
sbb
movs
test
and
adc
jo
mov
xchg
sub
inc
adc
mov
jg
xor
(bad)
movs
cmp
in
sbb
jno
lods
scas
pop
xchg
aad
adc
or
outs
cmp
and
mov
in
repnz
fidiv
cmp
sti
dec
sub
mov
movs
shl
and
mov
or
int
dec
push
lock
clc
cmp
mov
mov
ds
int
cwde
cmp
fistp
or
mov
outs
aad
outs
jnp
into
in
jge
xchg
xor
inc
xchg
(bad)
and
ret
pop
repz
retf
mov
cs
call
mov
sar
xchg
fimul
mov
cs
dec
push
les
outs
sbb
cdq
add
fadd
or
loope
sbb
and
push
xchg
or
xor
mov
or
push
arpl
mov
bound
dec
mov
cmp
(bad)
stc
mov
jecxz
daa
pop
outs
jge
xor
int3
popf
addr16
push
sub
adc
outs
cld
and
dec
mov
scas
cld
xchg
cld
movs
inc
or
or
out
jg
pushw
xchg
lahf
arpl
nop
cdq
test
leavew
xchg
icebp
fsub
sub
enter
mov
lock
mov
int
adc
add
xchg
popa
cmp
ss
jb
(bad)
push
arpl
sub
dec
push
outs
ins
push
call
dec
push
out
mov
bound
sub
inc
add
scas
and
lods
mov
cmps
lods
pusha
hlt
xchg
inc
ss
imul
dec
sti
cmovno
or
shl
dec
sub
sbb
xchg
cli
sbb
and
retf
jl
lods
ins
cld
mov
fmul
cs
mov
out
mov
push
test
or
or
push
push
fndisi(8087
repz
idiv
or
or
call
pop
aad
(bad)
scas
add
cmp
out
sbb
sbb
cmps
(bad)
jmp
push
call
inc
jne
cs
dec
dec
cmp
fmul
mov
hlt
mov
pop
(bad)
mov
jmp
es
pop
cli
sbb
push
pop
cdq
xchg
xchg
lock
cmp
div
pop
push
(bad)
fstp
push
js
jnp
cmp
enter
xor
push
imul
pop
push
sti
sbb
fisubr
sbb
mov
mov
xchg
adc
ins
jno
sar
jg
add
(bad)
(bad)
add
sahf
out
in
(bad)
cmp
xchg
pushf
ret
sub
jp
or
sbb
adc
sub
sub
pop
mov
mov
sbb
pop
xchg
outs
fild
imul
inc
in
mov
jecxz
repz
pop
outs
mov
aam
sahf
(bad)
out
sub
jnp
push
test
sbb
push
xlat
fimul
imul
es
push
xchg
or
lea
pushf
xor
gs
popf
das
jne
xor
sub
fpatan
in
data16
inc
ror
inc
xor
pop
cmp
jle
and
push
mov
jge
push
in
(bad)
pop
or
mov
push
sbb
dec
inc
push
daa
pop
add
es
outs
jge
pop
or
and
sti
adc
xchg
jge
mov
mov
(bad)
aad
aad
mov
lods
stos
pop
sub
pop
inc
inc
(bad)
(bad)
imul
and
int3
fxch
int3
fimul
pop
mov
(bad)
nop
jo
cmps
sar
dec
mov
ins
or
push
xlat
inc
mov
out
popa
sub
pop
pushf
add
mov
sbb
mov
and
scas
and
fimul
jmp
popa
retf
sbb
fbstp
aad
lods
xor
fistp
mov
dec
sbb
or
or
imul
jno
jl
pop
jl
int
test
ins
ffreep
sub
jmp
xchg
mov
push
push
iret
jnp
loope
fdivrp
std
(bad)
adc
mov
dec
inc
dec
in
push
push
not
mov
xchg
adc
sti
loope
stos
imul
add
stos
adc
fs
cmp
mov
cmc
xor
jbe
pop
out
mov
push
and
sub
cmps
mov
shr
pop
in
push
loop
in
sbb
vpsrld
sub
test
out
push
jb
jl
dec
adc
dec
mov
lds
mov
rol
dec
xor
and
rol
xor
sbb
jmp
xchg
hlt
fs
sbb
fucomp
dec
rol
cli
add
add
rol
stos
mov
push
into
xchg
les
add
outs
arpl
iret
not
add
pusha
cmp
cli
pop
rcl
mov
cmp
adc
push
lods
ins
sub
test
hlt
sub
loop
(bad)
inc
or
dec
test
adc
fsub
dec
jmp
rol
add
out
fld
cmp
and
xchg
adc
jb
test
cmp
mov
int3
mov
sbb
cmp
dec
cvtps2pd
xor
ins
aad
imul
fisttp
cmp
les
xor
push
sub
jno
ds
das
rol
fwait
rol
jge
imul
stc
cmp
movs
test
sti
enter
aam
or
fwait
pop
js
test
push
ins
jg
inc
dec
out
popf
sub
das
push
sbb
sbb
mov
mov
das
jp
fucomip
daa
icebp
js
adc
popf
push
nop
lds
fld
pop
mov
inc
push
xlat
dec
addr16
push
xchg
(bad)
rcl
or
out
adc
adc
out
lahf
fsubr
jle
pop
mov
sti
pop
test
(bad)
jmp
cmp
mov
stc
jle
popa
dec
adc
movs
push
ror
cmp
or
or
leave
aam
jno
inc
outs
ja
call
ret
jp
mov
pop
aam
mov
imul
popf
mov
pop
inc
sub
popa
shl
pop
xchg
jle
xor
fcomp
jl
and
push
arpl
(bad)
sub
xor
mov
cdq
fst
test
pop
aaa
(bad)
mov
(bad)
push
adc
sbb
jecxz
adc
ficom
fsub
loopne
push
int3
xor
jmp
jno
fistp
sbb
lods
add
out
das
sbb
mov
nop
in
sbb
ja
push
imul
popa
fidiv
sbb
outs
out
mov
aaa
sbb
jae
imul
and
sbb
xor
das
(bad)
xchg
mov
scas
scas
jmp
sti
iret
cli
adc
pop
pop
xor
lods
call
fmul
mov
fwait
and
es
jge
shl
fisubr
mov
cld
jmp
jl
pop
(bad)
test
add
pushf
dec
cs
sbb
and
(bad)
jmp
jne
outs
mov
scas
enter
jg
sbb
mov
lea
dec
ret
xchg
or
xor
scas
lods
cmp
mov
mov
sbb
stos
pusha
inc
push
push
adc
(bad)
mov
ret
jp
in
sbb
push
cmp
dec
inc
(bad)
int3
in
xchg
sahf
push
add
fidivr
mov
mov
mov
repnz
push
jno
pop
dec
pop
mov
call
(bad)
(bad)
jmp
test
ins
lods
sub
fidiv
clc
cwde
loopne
xor
pusha
and
jb
icebp
out
mov
xor
leave
push
(bad)
mov
push
dec
sbb
test
fldenvw
into
mov
push
imul
jo
ss
dec
mov
leave
jg
mov
or
or
pop
aad
sbb
xor
dec
movs
jmp
outs
inc
mov
xor
fcomp
outs
jp
pop
sti
mov
cmp
and
and
inc
dec
lods
int3
aas
pop
jle
mov
jns
mov
shl
jnp
mov
mov
push
cmp
cmp
lock
and
push
gs
add
or
test
cmp
push
ins
aad
mov
mov
jmp
mov
rol
xchg
cmps
call
push
retf
mov
jmp
sub
push
sbb
add
mov
mov
push
push
xchg
pop
mov
(bad)
or
dec
adc
fs
sub
pop
xor
sub
cmp
(bad)
int
stos
fnstcw
xchg
lea
jo
cwde
xor
push
cmps
jg
add
mov
(bad)
pop
aad
inc
fucomi
add
jmp
jns
cmp
jnp
push
xlat
add
mov
sti
sub
jg
inc
loop
(bad)
jg
nop
arpl
lods
es
mov
push
inc
and
ss
inc
mov
fs
mov
fld
pop
sbb
popa
(bad)
push
dec
mov
mov
dec
mov
adc
call
xchg
fild
out
jle
xchg
xchg
push
movlps
mov
mov
pop
push
fdivr
dec
aaa
ins
mov
jne
ret
(bad)
fnsave
mov
inc
mov
mov
out
jmp
or
ins
mov
mov
mov
adc
add
jbe
mov
mov
pop
les
leave
shr
mov
pminub
xor
cmps
jo
cwde
sub
std
movs
sbb
cld
stos
call
adc
xchg
mov
or
sub
mov
fstp
mov
mov
mov
xchg
xchg
sbb
jne
fcomp
stos
(bad)
je
fcomp
mov
rcr
xor
xchg
add
outs
shr
cmp
jo
sbb
fs
jecxz
cmp
xlat
jecxz
mov
dec
sahf
push
(bad)
pusha
or
push
adc
jge
out
jg
adc
loope
iret
movs
mov
stos
lods
(bad)
pop
iret
pusha
movs
std
pop
dec
mov
add
shr
push
loope
in
repz
jmp
ret
out
sbb
inc
out
mov
sbb
mov
sahf
scas
shl
jae
lock
bound
mov
inc
adc
int
hlt
jns
push
jecxz
aas
popa
les
sub
int
ss
push
mov
lock
call
mov
adc
mov
loop
push
das
jnp
mov
outs
lock
and
cli
hlt
mov
repnz
scas
popa
call
push
je
jmp
clc
push
push
mov
nop
mul
push
int
daa
sbb
aaa
push
stc
test
xchg
mov
outs
cs
mov
adc
xchg
xchg
mov
cwde
rcr
je
inc
daa
ins
ja
push
sbb
dec
inc
call
ins
sahf
aam
jbe
lahf
jo
jg
xchg
pop
sub
stos
cmp
mov
int3
ret
xchg
test
xchg
or
aad
nop
or
pushf
mov
idiv
pop
jb
cmps
sti
and
in
dec
clc
add
outs
test
ror
jge
sbb
jge
fcmovnb
aaa
icebp
ss
adc
dec
add
sti
mov
dec
pop
es
ffreep
fst
sub
ins
xor
ins
dec
sbb
aam
inc
pop
pop
cmp
mov
or
rol
adc
mov
and
ss
mov
pop
push
in
and
cmps
dec
pop
stos
sbb
dec
and
stc
push
call
push
iret
dec
jno
aam
sbb
jb
jge
mov
ds
cli
sbb
ss
push
out
inc
sbb
retf
add
sbb
inc
mov
xchg
jmp
sub
adc
dec
out
push
(bad)
xor
aam
pop
retf
mov
out
(bad)
jge
or
jp
push
call
cld
(bad)
or
push
xchg
(bad)
mov
mov
imul
inc
imul
cmc
outs
ins
xchg
fnstsw
adc
mov
(bad)
sub
loopne
lahf
sbb
xchg
ins
lods
iret
test
add
(bad)
cmovle
inc
test
ss
cmp
sub
dec
stos
inc
mov
lock
enter
dec
inc
imul
test
add
or
jo
pop
pop
outs
shr
and
mov
add
jb
movs
cdq
daa
call
das
pop
test
jp
faddp
and
out
shl
mov
mov
sub
aaa
pop
fstp
jmp
daa
popa
cdq
mov
fistp
ins
shl
cmc
repnz
(bad)
js
or
or
fwait
sub
jb
mov
fs
stos
add
and
es
pop
push
push
mov
adc
out
mov
dec
enter
leave
test
(bad)
ror
fdivr
adc
loop
aaa
enter
and
cwde
cwde
lds
ins
idiv
push
ficomp
push
mov
cs
cmps
cmc
mov
push
jae
out
retf
cdq
mov
pop
ret
push
sahf
fmul
int3
mov
and
sub
mov
into
ja
jne
nop
sub
mov
lahf
rcl
xor
inc
mov
xchg
repz
mov
stos
and
sbb
adc
mov
pop
xlat
(bad)
test
ins
pop
mov
jg
(bad)
mov
rol
xor
pusha
shr
mov
icebp
inc
ror
xor
mov
cs
pop
and
rcr
popa
repz
inc
lds
in
push
adc
fdiv
ss
mov
and
and
ins
retf
add
and
fmul
mov
mov
test
push
add
pop
inc
retf
into
cmp
cs
leave
push
or
cwde
cmps
fsub
mov
mov
push
mov
push
pop
lahf
sbb
pop
mov
xchg
jge
jns
jns
cmp
stos
add
ret
cmp
imul
pop
es
push
mov
ror
jae
retf
lods
ror
push
sub
pop
mov
lea
(bad)
aas
div
jns
xchg
xchg
dec
sbb
push
jge
jbe
cmp
imul
cs
sbb
mul
inc
or
ret
or
push
inc
pop
sub
aad
inc
out
cmc
clc
sar
pusha
adc
(bad)
outs
addr16
pop
stc
pop
mov
mov
mov
dec
test
mov
sbb
sti
mov
stos
(bad)
call
and
cli
and
mov
(bad)
and
and
ror
jno
push
setp
imul
push
loop
ud1
lock
rcr
(bad)
fdivp
push
out
mov
pop
mov
mov
out
mul
rol
jmp
aas
dec
enter
jp
lock
xchg
cmps
(bad)
fidivr
cmp
adc
cmps
inc
jg
cmp
mov
in
outs
push
cli
push
int3
idiv
cmp
push
jb
adc
xchg
pushf
xor
jne
xchg
pop
daa
das
mov
sbb
pop
sbb
int3
aaa
stc
data16
repnz
sub
dec
and
scas
rcr
sub
std
or
mov
dec
mov
sbb
sbb
out
(bad)
push
push
mov
xchg
cmp
and
iret
add
dec
sti
mov
ins
xchg
inc
mov
xchg
sbb
inc
icebp
xchg
ret
nop
fst
mov
dec
aam
dec
adc
jge
xor
mov
(bad)
dec
xor
outs
fiadd
cmp
fs
dec
cmc
lods
sub
popf
xchg
push
mov
imul
mov
movs
out
aaa
fcom
sub
fisttp
rcr
mov
xchg
adc
cs
test
jp
(bad)
jnp
jns
je
mov
xchg
popf
loop
pop
scas
pop
test
fcomp
daa
enter
mov
data16
push
dec
loope
add
ds
fidivr
out
push
dec
dec
hlt
lock
jnp
mov
jno
hlt
popa
adc
lahf
jae
and
jnp
sbb
in
cmp
jno
mov
arpl
mov
lock
popf
out
sub
sbb
ficom
sub
xor
jae
js
lods
xchg
inc
push
jp
cmp
lds
out
jmp
ds
mov
aad
mov
adc
push
and
pop
int3
jl
pop
inc
rol
fidivr
rcl
bound
ins
ins
mov
mov
jae
pushf
imul
adc
jle
xor
scas
aam
inc
jl
dec
inc
shld
jmp
mov
stos
jno
shl
xor
enter
arpl
jge
fisubr
pushf
popf
and
mov
pop
movs
fstp
cmc
add
xchg
inc
push
test
cmp
rcr
push
repz
mul
push
out
dec
gs
mov
cmps
add
xchg
(bad)
mov
fnstenv
jne
aas
fld
add
es
clc
adc
jbe
xor
fwait
push
fnstenv
cdq
popf
ja
dec
mov
mov
mov
and
lock
sar
aaa
pop
rcr
and
ror
arpl
mov
loopne
jl
jne
cli
enter
pop
lds
cmp
inc
xchg
das
push
inc
imul
ffree
fst
jbe
lea
sub
jns
sbb
loopne
mov
aam
and
dec
dec
leave
in
je
inc
mov
push
scas
inc
out
mov
(bad)
shr
mov
xchg
ins
loopne
mov
out
ds
push
(bad)
adc
enter
arpl
xchg
pop
jo
cmp
cdq
mov
dec
mov
(bad)
mov
imul
or
lods
inc
fxch
fisubr
dec
mov
mov
jl
sub
xchg
xor
es
out
jno
pop
inc
aam
add
and
movs
cmp
loopne
and
in
sub
movs
shl
mov
loop
pop
or
push
jmp
stos
jae
stc
or
(bad)
mov
ss
pop
jb
fisttp
add
sbb
xchg
movs
out
sbb
jl
adc
bound
fnsave
test
mov
mov
fist
call
imul
or
jbe
dec
and
xor
aam
mov
mov
(bad)
jae
imul
cs
push
bound
mov
js
inc
loope
das
pop
retf
jmp
retf
add
sbb
jbe
push
fwait
xor
mov
and
ret
daa
cs
or
push
sti
mov
ret
imul
mov
pop
or
jnp
cmp
or
xlat
pop
iret
inc
inc
adc
or
in
mov
and
lock
out
pop
scas
nop
xchg
xor
rcr
loope
add
push
sbb
dec
mov
ror
cli
or
cmp
fcomp
aam
inc
xor
or
iret
lods
rcr
call
enter
call
iret
inc
fiadd
sub
ja
sub
mov
scas
stc
cs
inc
popa
sub
lea
and
test
(bad)
add
popf
sbb
aam
or
jmp
jno
push
mov
sub
stos
inc
mov
sub
enter
inc
inc
mov
mov
hlt
pop
push
adc
sbb
sbb
jno
push
sub
std
(bad)
or
enter
push
shl
add
adc
bound
xchg
dec
frstor
mov
test
cld
and
pop
add
(bad)
fstp
jge
jmp
pushf
pushf
in
fldenv
movs
int
mov
jg
mov
pop
push
xor
fst
push
xchg
adc
inc
sbb
lds
xor
call
sub
out
mov
cmp
jns
lods
test
ins
std
push
or
push
push
or
mov
or
mov
jl
outs
icebp
icebp
loope
enter
sub
add
adc
xchg
mov
sbb
cmp
xchg
lahf
loop
mov
mov
(bad)
int
pop
(bad)
(bad)
jmp
sub
pop
shl
jecxz
cmp
xchg
cli
shl
mov
xchg
mov
xor
adc
dec
cmp
xlat
mov
inc
adc
sar
cdq
loopne
push
lock
call
dec
shl
xchg
ja
call
sbb
add
push
xor
sub
out
repz
lock
pop
mov
sub
dec
xlat
cmc
cmp
js
and
jge
mov
sbb
mov
adc
div
mov
inc
jo
add
add
mov
sub
jo
inc
stc
(bad)
xchg
(bad)
fimul
push
std
jb
popf
retf
jno
xor
add
je
sub
sbb
adc
dec
leave
call
ret
xor
inc
cdq
je
dec
mov
dec
inc
repnz
lods
nop
ds
movs
pop
imul
jmp
(bad)
aas
inc
mov
std
lods
add
dec
lea
addr16
mov
push
aam
das
retf
out
sub
or
retf
pop
mov
push
dec
lahf
pop
ja
sbb
movs
frstor
add
mov
jl
bound
mov
mov
out
push
push
test
shl
(bad)
mov
imul
sti
out
adc
(bad)
xor
sbb
mov
aaa
jno
add
les
push
cs
xor
cli
aam
jge
cli
clc
mov
xor
mov
test
repnz
pop
push
retf
xchg
and
fsubr
jno
inc
ret
daa
mov
sar
imul
out
mov
adc
(bad)
sub
push
stos
dec
retf
xchg
cdq
and
aaa
adc
dec
add
sar
mov
in
mov
mov
push
cmp
das
jnp
in
sub
jo
(bad)
out
sbb
cmc
movs
mov
mov
and
pop
push
ins
stos
or
loope
bound
pop
js
pop
popf
scas
and
xor
ins
push
rol
add
jecxz
or
xchg
mov
mov
sub
or
int
mov
rcl
pop
jbe
and
sub
push
ja
xchg
sub
or
je
push
je
jbe
test
cmp
mov
jmp
(bad)
cmp
cmps
mov
push
inc
or
std
test
xlat
push
repnz
inc
push
mov
popf
mov
movs
aam
or
aad
lock
cdq
js
pop
and
data16
jmp
mov
repz
mov
jne
pop
daa
retf
sub
and
test
mov
add
mov
ficomp
rcl
outs
mov
sahf
jno
jo
aas
pop
fmul
xor
mov
xor
and
and
loope
repnz
aam
xor
scas
movs
cmp
push
pop
inc
ss
jae
cmp
bound
aas
nop
push
jp
mov
dec
sub
out
fidiv
sub
inc
(bad)
mov
movs
stos
aas
fsubr
div
cs
in
mov
mov
call
loopne
cmc
call
ror
adc
cmp
in
lods
iret
mov
sbb
pop
mov
daa
mov
and
mov
int
call
pop
rcl
pop
out
mov
stc
loopne
pushf
and
jmp
dec
xor
out
out
jne
test
and
xor
in
out
xchg
jnp
xchg
pop
daa
jo
cmp
add
ror
jmp
mov
dec
test
cmp
movs
out
iret
pop
in
mov
jecxz
add
(bad)
je
mov
xchg
pushf
ret
add
and
(bad)
call
xchg
ficomp
fistp
popa
test
mov
mov
lock
xchg
push
mov
jns
push
stos
sub
push
adc
mov
sub
cmp
sub
loopne
cmp
imul
jg
sbb
test
mov
jle
leave
or
dec
xchg
sbb
push
repnz
retf
loopne
xchg
adc
xchg
pop
adc
or
and
mov
and
cmp
sbb
push
lock
sbb
das
ficomp
jae
xor
cmp
fs
mov
xchg
(bad)
in
pop
nop
or
movs
movs
hlt
sub
and
movs
(bad)
scas
mov
xchg
pop
and
out
push
arpl
inc
mov
push
out
sub
rcpps
popf
(bad)
sbb
mov
xchg
mov
or
sahf
cs
inc
sti
jno
push
call
xchg
adc
cmp
inc
adc
pop
xchg
sub
retf
or
cvtps2pi
push
fwait
aaa
mov
daa
dec
jge
sub
xchg
sub
mov
rol
sub
repnz
or
inc
add
les
jmp
dec
enter
and
xchg
push
pop
push
test
scas
fnsave
dec
mov
add
ins
mov
dec
and
sbb
pop
out
inc
fwait
sub
sahf
mov
inc
jne
cmp
dec
repz
or
pop
test
push
loope
dec
clc
fwait
sbb
imul
mov
js
sub
pop
mov
mov
mov
out
loope
enter
test
(bad)
sti
fcomp
mov
sbb
pop
out
or
add
mov
scas
hlt
inc
popa
sbb
stos
ficomp
dec
outs
dec
icebp
xchg
(bad)
bnd
repz
aad
push
mov
pop
fcomi
adc
cmp
xchg
ret
fisubr
and
pop
out
pop
mov
cmp
dec
ret
jp
xchg
or
pop
scas
push
adc
int3
add
stos
jmp
xor
mov
enter
cld
jle
(bad)
add
inc
xor
repz
lock
xor
ja
add
mov
dec
push
mov
ins
push
stos
mov
jl
mov
and
jnp
add
add
mov
push
mov
adc
sub
(bad)
jbe
ret
mov
out
push
fisttp
pop
lds
jo
mov
mov
nop
aam
sub
imul
pop
jmp
(bad)
in
add
sub
out
xchg
test
in
sti
inc
(bad)
das
push
cmps
(bad)
jmp
in
jp
dec
sbb
xchg
movs
cmp
xor
aad
xchg
pop
jge
or
xor
imul
and
ins
int3
or
xchg
jne
jbe
dec
cmps
aad
aaa
xacquire
lahf
ins
xchg
popa
mov
fsub
(bad)
xchg
cmp
inc
mov
ret
test
xchg
cdq
and
lock
outs
scas
jb
add
xchg
push
cld
cli
adc
pushf
hlt
clc
or
lods
sbb
and
mov
mul
sahf
jl
not
and
stos
scas
(bad)
mov
dec
mov
adc
pusha
mov
xchg
les
movs
ret
out
or
adc
mov
ss
sub
out
adc
fcom
es
dec
mov
add
mov
adc
xchg
mov
ret
mov
sub
jp
mov
jl
jmp
shl
mov
adc
cmp
inc
imul
mov
in
mov
rcr
sbb
sub
mov
add
mov
(bad)
neg
scas
enter
add
or
xchg
xchg
push
call
xchg
idiv
inc
dec
fldcw
fidivr
xchg
movs
cmp
mov
push
xor
jmp
jp
xor
add
adc
sub
mov
mov
sbb
cld
lock
fidivr
lods
cmp
js
jns
push
push
nop
mov
push
mov
dec
out
(bad)
xchg
and
sub
jb
add
cmp
mov
inc
xor
mov
repz
inc
inc
jae
jle
mov
mov
sahf
mov
sub
jns
jmp
and
iret
scas
xchg
jmp
mov
(bad)
call
push
pop
push
dec
xchg
rcr
sub
repz
jg
push
imul
cmc
pop
jno
lods
sbb
inc
adc
jg
cmp
repnz
xchg
pop
shr
lock
mov
loope
jnp
xor
jae
sub
mov
and
sub
inc
daa
les
dec
dec
cli
add
xor
or
out
jg
mov
out
sub
mov
mov
arpl
sub
dec
out
loope
mov
mov
pop
mov
sbb
jb
sub
mov
(bad)
mov
rol
arpl
fdiv
and
arpl
add
fmul
mov
pop
add
xor
lods
or
cwde
ret
jne
xor
clc
int
arpl
dec
sub
jmp
xchg
jo
(bad)
cmp
push
jo
int
out
push
dec
pusha
fimul
push
fdivr
jmp
xchg
pop
mov
fbstp
rcr
add
push
push
cs
dec
in
fisubr
aaa
jmp
add
and
jmp
mov
xchg
popf
inc
adc
push
xchg
mov
and
fst
push
and
repz
cmp
ficomp
jg
(bad)
mov
cmp
inc
retf
paddusw
lock
add
sub
xchg
in
out
xlat
mov
push
stc
and
jne
sub
xchg
xor
inc
inc
sar
mov
dec
pop
lea
mov
xchg
sar
sbb
and
ins
outs
ret
pop
retf
fucom
cmp
push
lods
(bad)
sub
mov
das
xchg
adc
jl
jno
pop
scas
cmp
out
jle
data16
mov
aaa
mov
loop
das
inc
leave
sbb
cmp
retf
xor
xor
fisub
mov
rcl
pop
mov
xchg
jnp
pop
pop
leave
out
aaa
icebp
push
and
iret
dec
xchg
movs
fadd
add
ins
lock
push
popf
mov
add
jb
leave
inc
movs
std
test
test
mul
jno
xchg
fistp
(bad)
jns
jge
aaa
cld
dec
stos
push
cdq
fistp
aam
xor
add
jge
add
mov
je
std
and
xchg
int3
xor
ss
sbb
rcl
mov
jno
and
fdiv
push
adc
inc
arpl
(bad)
pop
sti
sbb
shl
clc
jne
cs
cmp
mov
lahf
loop
adc
mov
movs
cmps
mov
mov
inc
cmp
mov
shl
pop
pop
daa
jo
xor
ret
inc
push
pusha
repz
repz
in
dec
sahf
out
cwde
dec
mov
fcmovnu
xchg
aaa
(bad)
loope
cli
fsubr
xchg
ss
movs
dec
dec
xchg
test
dec
sbb
adc
xor
bound
(bad)
pusha
add
outs
in
fdivr
push
mov
adc
jne
dec
lods
and
sub
cs
imul
(bad)
dec
mov
add
in
cmp
dec
in
outs
fwait
lock
(bad)
lds
push
push
or
xor
ret
(bad)
int3
push
out
popa
adc
mov
out
imul
les
sbb
mov
mov
mov
inc
lods
xor
mov
jb
das
dec
adc
xor
and
lahf
or
fwait
add
sub
(bad)
jae
in
out
sbb
dec
and
cmp
cmp
pop
repz
icebp
cdq
test
mov
xor
and
cmp
lods
pop
mov
out
dec
daa
sbb
mov
ss
dec
jecxz
mov
loope
mov
mov
or
je
jle
loope
jb
dec
loope
mov
jb
out
cs
(bad)
arpl
dec
mov
adc
jmp
popa
ror
mov
lods
and
call
repz
hlt
imul
pop
sahf
mov
movs
popa
sbb
push
cmc
dec
dec
push
scas
std
push
lods
call
inc
cmp
mov
pop
pop
sbb
in
in
sub
shr
cli
test
mov
hlt
test
xor
lods
mov
(bad)
push
lods
jae
dec
movhps
xor
add
lea
ds
ret
push
pop
pop
in
fisttp
push
mov
pmuludq
sbb
push
fcom
mov
ror
mov
cmp
push
pop
cmp
pop
js
add
mov
loope
pop
dec
mov
outs
sub
sbb
dec
push
daa
add
push
jecxz
das
lods
movs
lahf
ss
sbb
cmp
shl
mov
dec
sbb
lahf
pushf
sub
adc
outs
or
popf
sub
dec
(bad)
and
sbb
mov
(bad)
jmp
and
mov
jl
mov
mov
inc
pop
push
and
adc
imul
dec
mov
push
arpl
leave
hlt
lea
xor
mov
mov
or
xor
outs
dec
fld
and
dec
mov
neg
jno
add
lds
fild
mov
nop
mov
cmps
sbb
addr16
aaa
cdq
ja
xchg
sbb
iret
(bad)
mov
retf
jb
xchg
pop
popf
(bad)
imul
pushf
push
and
mov
pop
cmc
stos
stos
xor
xchg
jmp
xchg
ins
scas
iret
sbb
dec
push
cmp
(bad)
mov
nop
sbb
das
pop
xchg
ja
push
imul
sbb
dec
(bad)
mov
adc
outs
popf
fcmovb
sbb
push
and
or
sbb
call
enter
(bad)
sar
shr
inc
pop
out
test
aaa
loopne
stos
push
outs
jle
adc
mov
test
sahf
ret
mov
cwde
sbb
cmps
fwait
jge
imul
mov
pop
test
out
push
into
mov
repz
sub
fsub
ja
push
xchg
xor
int3
lods
std
mov
xchg
jge
shr
js
fwait
push
ins
xchg
test
sar
loope
xchg
or
jmp
mov
in
(bad)
fist
mov
aaa
aas
lods
les
test
adc
out
int
lahf
inc
mov
loopne
pop
call
retf
dec
add
(bad)
xchg
mov
add
dec
pop
mov
outs
lods
jmp
lods
jl
ds
(bad)
jmp
inc
pop
jge
mov
sub
jmp
out
addr16
mov
pushf
pop
pop
adc
mov
dec
gs
or
cs
inc
lea
push
es
jb
sub
in
jo
xchg
cmp
and
jge
add
mov
retf
fcomi
and
inc
sub
mov
add
mov
xchg
adc
inc
mov
into
jg
pop
mov
mov
jg
dec
xchg
into
jmp
int
in
pop
xor
cwde
es
(bad)
das
js
mov
fs
inc
mov
pop
fnstcw
test
cmp
into
adc
and
xor
ds
dec
enter
jae
sbb
in
lods
aaa
dec
stos
add
add
pop
ja
push
fwait
pop
test
mov
xlat
lods
adc
call
pop
pusha
adc
sbb
mov
cdq
pop
cmp
(bad)
mov
inc
loopne
cli
dec
retf
ins
mov
adc
iret
lock
jl
jp
mul
nop
test
ins
call
jnp
popf
popf
dec
push
add
or
or
cmp
dec
and
sbb
mov
dec
out
les
(bad)
cdq
cli
test
jmp
lds
mov
and
lds
stc
jo
pop
ret
shr
cmp
sub
cdq
cmp
sbb
je
or
and
mov
lds
sub
scas
in
jle
push
mov
xor
pop
jge
inc
fisubr
clc
jne
push
and
cmp
and
jmp
cmp
dec
mov
int
ret
inc
jnp
sub
xor
jno
inc
loopne
mov
int
outs
xchg
outs
adc
xchg
hlt
jl
xchg
mov
mov
jl
iret
and
dec
jg
dec
fs
jbe
jnp
repz
sahf
popa
ds
or
bound
push
sub
pop
push
movs
ss
xchg
rcl
popa
sbb
je
mov
push
sbb
ret
nop
sbb
dec
ins
sub
loop
jns
test
pop
inc
dec
fcomp
sub
into
jns
pop
movs
movs
icebp
pop
dec
sti
fidiv
mov
stos
dec
mov
cmp
loopne
mov
mov
mov
cdq
dec
inc
sub
icebp
jnp
push
fsubr
adc
adc
or
sti
dec
clc
jmp
jl
jae
push
vmaxpd
xchg
push
cmp
lock
xchg
pusha
ins
adc
paddusw
push
mov
mov
fs
sar
xchg
fldcw
xor
jb
test
xor
xchg
inc
popf
xchg
cwde
aam
or
xchg
push
inc
jg
js
fwait
not
cmp
mov
xor
dec
cwde
movs
lds
and
and
(bad)
adc
add
fs
jp
mov
add
out
jle
mov
sbb
test
xchg
rcr
jmp
dec
fidiv
add
into
and
out
gs
popf
(bad)
ja
aas
fwait
jg
cwde
mov
loope
pop
sub
cmp
xchg
es
loopne
rol
inc
mov
mov
std
dec
push
pop
xchg
pushf
je
cmp
call
(bad)
iret
outs
sbb
or
pop
pop
sbb
call
jo
sbb
test
xor
and
call
sub
sbb
pop
das
jecxz
xchg
cmc
xchg
imul
mov
js
test
push
inc
aas
mov
ins
addr16
sbb
or
ds
inc
(bad)
addr16
ins
arpl
hlt
jae
add
mov
lock
test
mov
push
ins
cwde
pop
inc
scas
cmp
rcr
pusha
push
arpl
sub
push
das
inc
dec
in
fwait
pusha
sbb
sar
push
jmp
pusha
and
stc
sbb
and
and
mov
aaa
cmp
push
mov
mov
shl
jae
sub
mov
test
fst
inc
jbe
mov
cmp
inc
pop
pop
jne
cmp
je
sbb
pop
shr
and
nop
sub
cmp
sbb
cmp
in
pop
push
call
push
shl
cmp
fstp
push
jl
jmp
push
not
inc
pop
push
sub
pop
adc
lock
sub
cmps
push
movs
cmp
mov
leave
in
gs
lock
dec
jle
int
scas
rol
jne
and
cld
fist
lock
cmps
jns
test
cmp
in
aad
cmc
mov
xchg
xor
je
mov
dec
repz
out
ins
cmp
packssdw
sub
cmps
bound
sti
mov
les
jo
add
gs
test
and
adc
inc
push
sbb
bnd
fucomp
mov
scas
das
dec
add
cs
xor
or
pop
es
aad
adc
and
xchg
je
pushf
enter
retf
dec
and
pop
cdq
fiadd
push
lds
loop
test
pop
xchg
leave
xchg
or
lea
pop
(bad)
cmp
nop
retf
jns
mov
fild
push
push
or
(bad)
sub
push
cmp
pop
jno
gs
push
push
add
pop
xor
div
lods
bound
push
cmp
imul
add
jne
mov
arpl
xchg
dec
loope
push
xchg
(bad)
jmp
pop
adc
arpl
(bad)
bound
add
imul
inc
lods
mov
jmp
xchg
jo
jb
or
xchg
push
dec
out
dec
out
loope
jmp
outs
(bad)
sub
scas
mov
bound
xor
and
mov
jno
repz
push
imul
cmps
les
or
shl
jmp
out
inc
in
aas
int3
ror
dec
xchg
push
ss
sbb
test
inc
mov
push
(bad)
sti
call
hlt
std
shl
push
dec
mov
call
jle
das
jmp
mov
jno
mov
jmp
in
pop
push
bound
jae
sub
push
fdiv
mov
or
cdq
clc
jg
ret
stos
(bad)
fcom
jp
pop
stos
mov
pushfw
shl
int3
or
ins
idiv
jae
xor
leave
(bad)
or
scas
aad
call
adc
mov
cwde
out
mov
hlt
fcomip
jmp
mov
sar
mov
popa
loope
ja
push
add
xchg
loopne
inc
es
fisttp
mov
sbb
adc
repz
imul
pop
push
and
(bad)
and
push
outs
jne
xor
shl
rol
cmp
xchg
retf
dec
push
or
mov
mov
sar
xchg
outs
(bad)
stos
mov
sub
cld
fs
(bad)
test
gs
pop
into
dec
cmp
cdq
bound
push
adc
xor
rcr
sub
in
or
sar
adc
jb
xchg
into
push
pusha
cld
outs
cdq
outs
fisub
pop
mov
mov
or
pop
popa
iret
sbb
cmp
add
xor
addr16
add
leave
loope
inc
int
(bad)
sbb
ret
mov
rcl
xor
xchg
adc
or
add
jae
shl
outs
inc
ins
jns
push
aam
push
ja
loop
add
mov
push
inc
fdivp
inc
sub
adc
ins
leave
int3
push
sti
outs
imul
jg
aas
xchg
add
cmc
xor
mov
push
adc
addr16
xchg
push
inc
push
mov
add
pop
stos
loope
sahf
pop
out
(bad)
push
push
sbb
and
pop
sub
add
xor
jae
rol
std
or
cmp
lahf
iret
and
push
data16
sbb
mov
mov
setae
neg
retf
ret
rcl
push
or
fwait
retf
test
fsub
(bad)
hlt
sub
fisub
push
imul
mov
scas
push
sbb
xor
mov
jmp
mov
push
or
inc
jl
and
(bad)
cmp
push
and
jns
outs
mul
cmp
or
jg
add
jg
pop
scas
jnp
inc
es
add
jg
stos
je
push
sbb
pop
push
fwait
sub
xor
shr
bound
in
mov
inc
pop
pop
stos
sti
jp
leave
sub
cmps
jge
xor
sbb
nop
and
adc
hlt
pop
pusha
movs
retf
push
cmps
jo
pop
rol
dec
nop
adc
jne
mov
cld
push
mov
mov
dec
mov
mov
std
movs
or
loopne
dec
in
xor
lahf
daa
dec
jne
iret
dec
std
stos
sahf
sti
das
out
stos
jb
pop
pop
cmp
push
fistp
data16
mov
imul
xor
push
sub
leave
inc
or
push
sub
outs
in
jb
retf
inc
jb
leave
sub
mov
cmp
ja
ret
xchg
cbw
push
jmp
cmps
test
and
ja
call
stos
adc
les
cmp
or
jbe
out
outs
pusha
xchg
pop
daa
adc
imul
xlat
jmp
enter
cmp
fmul
or
test
add
je
cmp
sbb
cli
fs
inc
out
dec
or
xor
sbb
retf
mov
js
sub
pop
cwde
retf
mov
loope
daa
jp
or
mov
sub
jbe
cmp
movs
call
lahf
fistp
mov
xchg
fiadd
inc
adc
lahf
mov
repnz
push
pop
pop
ja
les
sub
push
(bad)
(bad)
jo
sub
inc
adc
mov
scas
fsub
repz
xor
retf
(bad)
scas
xor
mov
popa
sub
shl
dec
retf
int3
adc
(bad)
jmp
inc
shl
leave
out
or
ins
fucomip
sbb
adc
jmp
adc
xchg
pusha
pop
sub
jno
aad
push
adc
leave
push
arpl
xchg
mov
pop
(bad)
and
sahf
jno
ds
sub
jno
fwait
mov
jmp
sbb
mov
and
sbb
into
bound
stos
movs
(bad)
dec
mov
pop
mov
pop
xor
push
outs
arpl
mov
out
add
ins
and
movs
cmp
jecxz
jo
inc
or
aas
mul
xor
out
daa
xchg
push
or
repz
inc
xchg
adc
sbb
mov
mov
push
jns
inc
arpl
push
inc
adc
cmps
stos
or
cdq
shr
cmp
mov
inc
repnz
mov
movs
fild
popa
daa
(bad)
arpl
jge
adc
ret
icebp
jmp
cs
xchg
addr16
jo
lock
push
das
aaa
sbb
lahf
pop
sbb
mov
sub
xchg
mov
(bad)
es
inc
test
sub
jo
add
in
or
xor
adc
xchg
pop
popf
rol
mov
xor
or
pop
inc
push
sar
in
xor
cdq
mov
stc
test
cmp
repnz
pop
or
xchg
inc
adc
xor
mov
push
and
(bad)
or
push
shl
xchg
mov
push
push
mov
dec
jb
out
and
mov
and
test
int
ja
or
cmps
pop
and
rcr
xchg
mov
arpl
div
jg
test
cmp
cdq
pop
mov
inc
sub
test
and
mov
pop
push
sbb
shl
mov
xor
xchg
mov
(bad)
adc
dec
test
mov
mov
push
outs
dec
xor
sub
mov
adc
ins
or
fs
or
mov
mov
or
mov
mov
cli
fidiv
data16
cmps
stc
sbb
fisubr
shl
xlat
mov
sub
shr
pop
aas
cmps
fdiv
test
cli
(bad)
shl
imul
or
sar
pop
jnp
adc
jle
gs
pop
push
dec
and
test
inc
mov
sbb
jmp
and
fcom
adc
arpl
fs
push
xor
outs
cld
enter
jnp
movs
jbe
dec
ds
cmp
stos
and
lea
dec
aas
pop
stos
in
ss
jl
(bad)
pop
mov
mov
xor
repz
adc
lea
xchg
push
dec
or
adc
fsubr
or
jmp
dec
mov
add
clc
and
inc
push
pushf
outs
sub
in
sub
rcl
fcmovnbe
mov
mov
sti
syscall
mov
cmp
mov
shl
pushf
sbb
jno
mov
and
mov
in
dec
hlt
in
push
jbe
inc
inc
pop
sbb
scas
jno
cdq
jmp
ret
add
sbb
ds
xchg
cmp
or
inc
xchg
cdq
fisubr
std
bnd
mov
cli
dec
add
(bad)
stos
bound
mov
test
dec
xchg
cmp
mov
add
xchg
cs
icebp
shl
push
pop
call
mov
cdq
adc
mov
adc
out
sub
xor
lods
dec
add
jg
push
sub
out
shl
sbb
aad
lods
fiadd
mov
movs
ret
push
(bad)
fadd
fwait
div
mov
rcl
or
push
cmp
adc
addr16
dec
shr
pusha
mov
call
inc
mov
imul
out
ret
test
retf
stc
pop
xchg
cdq
xchg
pusha
jmp
jns
xor
inc
cmp
jle
lods
and
stos
ins
and
test
add
std
adc
pusha
jbe
stos
or
and
inc
mov
rcl
aad
scas
fs
mov
or
cmp
mov
ins
jle
aam
and
nop
cli
pop
mov
pop
adc
pop
jg
jp
sbb
sub
xchg
retf
xchg
xor
mov
dec
pop
and
je
sub
dec
icebp
jb
out
mov
into
pop
add
xchg
sti
repnz
and
mov
mov
movs
icebp
mov
pop
rol
bound
mov
ret
add
shl
bound
dec
std
test
leave
scas
mov
fwait
add
(bad)
jne
shl
mov
pop
sub
fcom
add
jecxz
scas
fwait
or
rcl
inc
or
sar
enter
movs
inc
jp
mov
les
(bad)
aad
iret
psadbw
and
xor
not
ret
fwait
in
dec
inc
jl
neg
push
add
stos
pop
cs
xchg
call
xor
cmp
mov
or
pop
or
push
xchg
pop
push
fwait
test
loope
call
(bad)
cmp
test
(bad)
clc
cli
gs
mov
xor
cmp
mov
push
push
cld
sub
or
pop
into
sub
sub
es
(bad)
pop
into
dec
jbe
sbb
xchg
inc
push
cmp
dec
or
mov
xchg
mov
jecxz
int3
stos
xchg
pop
test
jecxz
or
jmp
cmc
test
pop
inc
fcmovu
in
scas
es
repz
inc
push
lods
xor
pop
cdq
js
mov
iret
mov
mov
enter
xchg
pushf
mov
mov
nop
mov
xlat
scas
mov
rcl
cmps
or
push
sub
stos
mov
popf
sbb
cs
test
fstp
lea
pop
xchg
aas
(bad)
mov
xor
ret
inc
xchg
xlat
and
add
int3
test
ss
scas
cmp
or
je
jo
jp
push
rol
adc
test
lea
fcomip
add
inc
adc
hlt
test
rcr
dec
in
add
pop
aaa
xchg
xchg
imul
call
imul
les
adc
std
cmp
and
hlt
int3
test
movs
and
(bad)
int3
shl
loop
mov
and
mov
test
in
cmps
in
dec
add
mov
pcmpgtb
sbb
push
(bad)
cmps
loope
out
inc
jb
jne
inc
pop
pop
dec
(bad)
jbe
jno
push
scas
dec
lods
ret
lahf
leave
pusha
(bad)
call
push
xor
and
cli
sub
and
and
mov
sbb
and
imul
add
cmp
aam
and
jp
out
pop
fsubp
loop
sub
inc
addr16
mov
cld
adc
push
cdq
aam
out
sbb
inc
out
sti
jmp
sbb
pop
repz
fst
(bad)
jl
cmp
iret
out
or
loop
call
pop
dec
mov
mov
adc
int
not
std
inc
or
pop
mov
pop
sbb
js
mov
pop
cmps
jmp
and
inc
mov
mov
test
push
lods
xlat
outs
xor
mov
dec
enter
loopne
in
sbb
dec
fimul
(bad)
add
scas
and
cmp
rcr
dec
scas
repz
adc
arpl
add
pusha
andnps
mov
jp
xlat
jge
and
mov
inc
lods
ss
cmp
stc
test
fisubr
outs
movs
xor
fwait
stc
add
cs
add
loopne
rcr
and
xor
pop
cld
shl
push
pop
xchg
fisubr
sub
and
loop
mov
mov
gs
jecxz
leave
andnps
retf
lea
inc
adc
lock
mov
jnp
call
in
or
adc
(bad)
(bad)
mov
fmulp
stos
mov
loope
adc
adc
xlat
sahf
vmovlps
add
rcr
pushf
sbb
mov
mov
movs
lock
push
mov
xchg
ficom
aaa
push
repz
inc
nop
sub
jo
aam
jae
xchg
scas
adc
test
lods
lods
test
jno
std
xor
xchg
mov
inc
in
dec
aam
loopne
in
sbb
cmp
data16
cmp
or
aam
aaa
icebp
fnstcw
jge
sar
into
fist
sub
jb
icebp
jecxz
push
inc
and
jmp
nop
cmp
add
out
movd
push
mul
int
and
addr16
and
pop
lahf
pop
loope
or
cmp
push
outs
push
push
mov
test
(bad)
and
mov
fbld
or
sti
mov
pusha
push
(bad)
inc
repz
in
dec
jmp
push
sbb
lock
mov
sbb
and
daa
outs
mov
cdq
shl
lods
iret
pop
rol
(bad)
lods
adc
mov
jnp
bound
sahf
pop
aad
mov
dec
mov
push
pop
mov
adc
fisub
jge
mov
dec
sub
sub
mov
cwde
mov
in
inc
and
inc
(bad)
(bad)
in
mov
aas
loop
jnp
xchg
dec
jmp
pop
cmps
test
out
outs
xchg
popa
data16
inc
cmp
mov
mov
stos
xor
(bad)
daa
arpl
test
shl
call
push
or
pop
retf
fstp
iret
in
add
jge
loope
and
das
push
mov
adc
inc
lea
pop
fld
jnp
stos
out
cmp
sbb
pop
mov
inc
adc
dec
ret
loope
int3
xor
or
int
stc
mov
es
ja
hlt
pop
push
cmp
mov
cmps
jmp
inc
cs
mov
test
in
paddw
dec
(bad)
cwde
inc
mov
inc
fiadd
js
lods
cs
outs
and
mov
dec
cmp
push
scas
adc
cmp
push
xchg
cmp
mov
or
retf
adc
dec
xchg
aaa
imul
ret
in
add
outs
pop
cmp
aam
scas
jmp
xchg
and
mov
popf
jbe
les
fld
ret
(bad)
pop
mov
inc
inc
stos
add
fwait
mov
pop
(bad)
je
jo
sbb
shl
dec
and
int3
sub
retf
xchg
fcmovnbe
mov
pop
test
xchg
icebp
clc
js
stos
int3
vdivsd
ret
jmp
jl
pop
sbb
dec
lds
sub
lods
adc
outs
out
mov
sbb
mov
test
xor
xor
pop
sub
out
je
jns
cmp
cmp
cwde
pop
push
sbb
lock
(bad)
ds
clts
push
xor
adc
ins
std
je
mov
call
mov
mov
and
loop
jg
adc
dec
ins
sbb
inc
push
mov
xchg
mov
pop
icebp
cmp
ja
loopne
push
xchg
movs
lea
not
arpl
pop
mov
adc
cmp
test
lea
add
sub
add
jmp
popa
dec
add
daa
pusha
xchg
rcr
jmp
cmps
(bad)
aas
fwait
repnz
push
lea
pop
mov
add
loop
ja
mov
xchg
leave
(bad)
mov
repnz
mov
adc
stos
icebp
ficomp
stos
outs
(bad)
movs
adc
xchg
push
call
leave
xchg
jle
mov
(bad)
and
cmp
jo
cwde
pop
pop
loopne
xchg
jo
int
call
mov
or
aaa
xlat
and
bound
dec
inc
daa
scas
cdq
movs
loopne
movs
jge
out
outs
or
push
push
daa
dec
jmp
jle
cmps
sub
cmp
popf
pop
mov
xchg
repz
js
jo
push
enter
push
fistp
int
cli
daa
je
icebp
xor
sub
lods
and
pop
xchg
xchg
sti
dec
push
jb
sbb
dec
mov
mov
mov
xor
cmps
adc
xlat
out
test
push
jg
push
xchg
in
test
ins
(bad)
ds
pop
adc
xor
movs
add
push
(bad)
adc
shl
sub
lahf
jno
cmps
enter
push
scas
jmp
mov
push
imul
movs
mov
adc
outs
mov
cdq
popf
bnd
movs
repz
shr
xchg
fld
mov
sbb
test
push
sbb
aaa
out
mov
sub
mov
pusha
push
rol
mov
mov
pop
(bad)
xchg
repnz
loop
ret
and
dec
inc
mov
(bad)
outs
mov
std
mov
jg
int3
mov
or
pop
shl
out
test
and
popa
(bad)
mov
xchg
in
adc
int
dec
frstor
add
dec
int3
xor
mov
push
dec
xor
int
imul
dec
retf
test
lods
xor
sti
mov
cmps
adc
add
jns
dec
xlat
shr
in
add
cmps
and
enter
hlt
or
stos
dec
dec
call
add
(bad)
pop
xchg
icebp
int3
outs
sbb
mov
sbb
adc
fdivr
adc
mov
xor
pushf
popa
int3
sahf
in
dec
js
add
fisttp
out
xchg
push
cmps
jl
(bad)
sub
and
mov
js
pop
rcr
push
mov
cmps
fild
jmp
or
xor
cmps
push
mov
xlat
push
ja
jp
cmp
adc
xor
test
dec
cmps
sbb
push
sub
cwde
(bad)
enter
push
pop
js
inc
fwait
dec
jno
xor
mov
popf
jo
pop
cmp
or
xchg
pop
mov
lahf
popa
inc
movs
into
push
aad
pushf
sub
clc
jae
mov
add
popa
clc
shl
movs
and
(bad)
jmp
repnz
or
imul
or
call
or
lods
lahf
sub
inc
add
jb
arpl
clc
dec
sahf
inc
es
sbb
sbb
jp
aaa
sahf
mov
movs
bound
mov
cmp
test
test
out
inc
xor
xchg
inc
jo
dec
mov
pushf
inc
jns
mov
lds
out
test
ret
(bad)
or
es
mov
or
jmp
add
push
shl
cdq
or
sahf
iret
inc
adc
data16
cmps
clc
pushf
ins
in
lods
rcr
neg
fbld
hlt
mov
jge
jp
sbb
fwait
popf
fisttp
aad
rcr
fwait
ss
jbe
xchg
xlat
and
(bad)
mov
retf
mov
xor
adc
movs
rcl
sbb
inc
ret
sub
fld
pusha
mov
jnp
arpl
mov
jnp
and
sbb
dec
in
mov
in
add
mov
aaa
or
sub
jno
push
inc
or
xchg
pop
xchg
pop
mov
push
add
jae
lea
xlat
mov
ret
int
ss
lds
xlat
test
jmp
test
mov
cmp
sbb
jae
ins
mov
js
(bad)
jbe
into
push
jnp
mov
dec
imul
mov
out
inc
mov
movs
mov
or
and
push
pop
inc
adc
retf
mov
xchg
out
push
std
mov
cmp
push
push
add
adc
add
xor
in
nop
mov
fmul
mov
retf
inc
loopne
pop
add
pop
addr16
test
(bad)
or
or
and
ins
mov
add
js
pushf
inc
adc
movs
sbb
add
dec
cmp
(bad)
vandnpd
cdq
push
adc
inc
inc
inc
push
enter
outs
sbb
loopne
xchg
cwde
fistp
pop
lock
cmp
pop
loopne
xor
gs
in
cmp
int3
cmps
and
ins
jl
stc
sub
inc
mov
out
aad
mov
mov
sub
add
mov
stc
rol
call
jno
shr
mov
mov
nop
jno
mov
dec
and
rcr
fadd
or
scas
sbb
mov
push
ret
mov
jge
cmp
data16
jle
jne
or
dec
jbe
inc
cwde
rcl
out
movs
push
and
gs
mov
lock
and
or
push
jg
cmp
les
inc
loop
dec
mov
push
adc
adc
ds
mov
add
pop
out
rol
popf
inc
icebp
out
out
add
outs
test
xchg
bound
jmp
xlat
call
xchg
retf
mov
jno
out
or
inc
stos
pop
jbe
das
or
jbe
(bad)
in
mov
mov
sbb
test
adc
lea
push
mov
(bad)
retf
test
test
fst
jb
mov
inc
dec
xchg
push
arpl
cmp
mov
push
iret
and
enterw
cmp
loop
fld
add
push
ret
lahf
mov
(bad)
je
cmp
push
and
repz
xchg
leave
or
(bad)
xor
adc
and
loopne
sbb
idiv
scas
call
call
mov
xchg
inc
push
or
outs
mov
and
fsub
and
imul
arpl
imul
cdq
(bad)
cmps
xchg
dec
ds
sbb
cmp
pop
mov
daa
loop
sbb
or
sub
xchg
pop
mov
pop
push
sbb
mov
xlat
pop
dec
cmps
neg
push
cmps
mov
enter
mov
or
or
add
enter
xchg
mov
and
retf
cmovnp
mov
cmp
inc
in
dec
(bad)
mov
sub
mov
mov
repz
mov
hlt
jmp
ds
outs
cmps
pop
xchg
pop
fsub
jle
test
xor
dec
inc
mov
dec
sub
bound
bound
push
(bad)
and
xor
leave
mov
mov
je
test
mov
jbe
mov
push
into
and
inc
cdq
push
(bad)
xor
cmc
adc
sbb
ret
mov
pop
fwait
ret
pop
bound
dec
sbb
sahf
adc
add
cwde
bound
dec
xor
fmul
pop
sub
pop
sub
fdivr
test
xchg
ins
out
push
mov
lahf
adc
jmp
loopne
pop
mov
pop
dec
pop
arpl
into
pop
(bad)
cmc
shr
push
mov
inc
xor
push
cs
inc
or
enter
outs
(bad)
sub
ror
addr16
lock
cmp
adc
ret
ins
and
or
(bad)
retf
or
shl
cs
add
mov
out
push
cmp
dec
and
pop
inc
retf
push
jecxz
xchg
cmc
mov
mov
mov
fadd
ss
xchg
shl
push
add
cmp
add
int
add
mov
pop
and
push
inc
ficomp
test
or
and
(bad)
push
sub
sub
adc
mov
cmp
pop
sub
jae
out
retfw
inc
cmp
sub
mov
or
inc
or
add
sub
std
inc
aam
dec
mov
fsub
push
or
(bad)
sbb
call
add
rcr
add
pop
loope
out
loopne
sub
cmp
popf
xlat
lods
jo
sbb
das
or
bound
mov
push
outs
mov
xchg
or
jno
xchg
mov
mov
ret
(bad)
out
and
push
and
or
je
adc
ss
dec
enter
(bad)
adc
add
jg
mov
out
jl
xchg
ror
jmp
dec
inc
mov
lahf
adc
jecxz
and
jecxz
xor
push
jl
mov
loope
sbb
xchg
sub
mov
call
in
dec
push
pop
mov
pop
mov
ret
jp
mov
and
clc
nop
cli
inc
mov
pop
in
std
in
jns
js
fiadd
add
pop
mov
aad
sub
jo
mov
js
leave
xchg
dec
cmp
test
xchg
gs
stos
xor
pusha
adc
ror
jo
cmp
mov
stos
es
cmp
or
push
xchg
rcl
in
mov
and
and
stos
pop
jmp
test
imul
adc
call
xchg
mov
mov
ja
lock
out
aaa
std
mov
add
xchg
lds
cmp
adc
cmc
fiadd
push
xor
cmp
xor
jb
pop
jp
mov
imul
sar
xor
sbb
outs
inc
outs
cli
mov
enter
push
out
aas
add
into
sub
mov
cmp
retf
or
sub
sub
jmp
arpl
jmp
jae
xor
inc
clc
pop
or
nop
inc
out
inc
out
jge
(bad)
and
retf
jge
mov
retf
in
dec
jmp
je
mov
and
in
sub
jge
sub
mov
cmp
push
and
ss
xor
lods
aas
sbb
mov
ret
mov
pop
cmp
sub
adc
lahf
mov
addr16
inc
(bad)
aam
pop
smsw
xor
sbb
repz
add
push
and
stos
push
out
add
mov
push
sub
into
dec
lahf
push
pop
jnp
int
mov
test
jmp
cmp
fiadd
inc
and
mov
pop
stos
sub
shl
pusha
mov
add
mov
jno
jbe
imul
adc
dec
pushaw
je
lock
fnstsw
mov
fdivr
xlat
jmp
mov
loop
jns
clc
in
jge
fadd
pop
mov
std
inc
pop
jecxz
push
jl
ficomp
sysenter
scas
retf
das
xchg
mov
and
jmp
adc
sbb
dec
push
ss
inc
in
sbb
push
and
push
and
(bad)
(bad)
imul
push
stos
mov
popf
fsubr
loopne
ret
xchg
or
imul
sbb
adc
jle
in
sub
aaa
mov
xor
clc
jg
sbb
bound
loop
jns
test
cwde
jle
daa
ret
adc
ror
cmp
sbb
pop
shr
mov
popa
jp
nop
fcomp
in
retf
push
cmp
bound
mov
lea
sbb
rol
popf
cmp
pop
ja
sub
dec
div
xchg
xor
lahf
daa
outs
mov
mul
add
scas
inc
mov
push
iret
and
mov
pop
dec
test
das
aas
sbb
push
cvtps2pd
mov
mov
mov
test
aam
mov
and
js
jge
outs
scas
add
push
xchg
sti
das
xchg
adc
sub
icebp
ja
shl
push
neg
and
mov
mov
bsr
(bad)
je
je
pop
loop
leave
ret
std
sbb
lods
aam
push
xchg
ret
fs
test
clc
cmc
rol
lea
loopne
dec
adc
dec
push
sar
push
xchg
call
test
mov
xchg
mov
mov
push
idiv
mov
ja
add
xor
push
xor
aas
fwait
(bad)
repz
push
ficom
mov
sub
push
movs
popa
std
pop
cmps
sbb
push
add
mov
fucomi
(bad)
in
ja
xchg
aad
jecxz
retf
sbb
mov
sub
repz
dec
push
push
retf
or
out
mov
sbb
pop
push
mov
ret
inc
pop
push
xchg
rcl
jo
mov
adc
(bad)
and
mov
or
(bad)
mov
pop
inc
cdq
inc
(bad)
fwait
adc
mov
dec
sbb
pop
into
cmp
(bad)
push
icebp
dec
repnz
or
and
repz
push
and
gs
loopne
jnp
fidiv
inc
add
arpl
xor
test
xlat
mov
fidiv
dec
daa
inc
sbb
sub
and
aad
cdq
out
dec
jmp
ffree
mov
aam
pusha
je
push
call
dec
mov
pop
(bad)
out
dec
imul
jmp
aam
lahf
jl
inc
fild
pop
sbb
sub
scas
js
pop
sti
ret
inc
push
rcl
pop
out
aaa
nop
push
or
inc
add
(bad)
repz
mov
jns
aam
arpl
shr
adc
mov
mov
xchg
jns
mov
cli
pop
into
sub
shl
sbb
outs
sbb
dec
dec
mov
inc
adc
outs
lods
jg
xor
inc
dec
or
es
popf
test
leave
jno
loope
fcomp
sar
adc
sar
jb
xchg
call
stc
repnz
xor
add
aaa
int3
icebp
(bad)
test
xor
pushf
mov
xchg
lahf
cmp
pop
mov
or
fnsave
fidiv
nop
sub
int3
pop
cwde
call
daa
sti
test
out
fild
inc
out
aaa
bound
push
fild
or
push
not
fbstp
xor
xchg
mov
xchg
mov
js
push
lar
add
test
and
push
push
inc
jle
fmul
ret
fdivr
icebp
and
mov
mov
jmp
aas
rcl
cdq
adc
sbb
adc
test
jns
inc
cmps
out
jns
out
adc
call
jecxz
data16
jge
ss
pop
movs
sbb
jmp
ret
shl
test
out
inc
repz
push
adc
sbb
xor
push
dec
outs
inc
loop
out
fstp
jae
ror
test
fcmovb
test
in
add
push
sub
gs
adc
mov
fsub
or
jno
jbe
cmp
or
gs
fdiv
call
push
mov
movs
xor
pop
sbb
(bad)
rcl
daa
(bad)
ficomp
mov
sbb
push
hlt
ja
adc
fsub
inc
mov
and
idiv
push
test
dec
xchg
aad
pop
fwait
push
push
jno
sub
pop
xchg
adc
stos
sbb
xor
sbb
sub
dec
xor
loopne
jg
fisub
(bad)
xor
pop
neg
or
ins
popf
add
and
push
fstp
scas
lods
push
and
jne
in
stos
inc
(bad)
push
lods
or
push
mov
push
sbb
sub
cld
(bad)
push
adc
movs
sub
ds
xor
jp
fsubr
xchg
call
lea
scas
mov
inc
test
jge
xor
and
(bad)
fistp
or
sub
jnp
or
mov
into
mov
mov
xor
cdq
lahf
pop
outs
push
mov
fimul
neg
ins
(bad)
mov
add
add
sbb
jbe
push
push
cld
mov
push
out
mov
cmps
clc
test
cmp
dec
cmp
push
gs
pusha
int3
mov
clc
mov
push
pop
mov
in
imul
out
inc
mov
(bad)
xchg
int3
lahf
xchg
xor
mov
es
inc
fucomip
ret
mov
mov
sub
sub
xchg
xchg
shr
je
and
cwde
scas
dec
mov
leave
fwait
and
cmp
pop
push
(bad)
cs
mov
xchg
pop
and
ins
jmp
out
scas
cmp
jb
xchg
aas
jecxz
sub
test
add
mov
mov
test
adc
popa
fist
dec
retf
fdivr
mov
fstp
movs
sub
lea
inc
mov
add
dec
lock
sub
inc
aas
mov
fcom
(bad)
sbb
jne
ins
mov
mov
jo
mov
push
inc
bound
outs
stc
push
and
adc
mov
bound
movs
jne
add
imul
aas
xchg
div
add
push
in
add
(bad)
(bad)
push
pop
aas
mov
je
and
movs
mov
pop
or
adc
mov
retf
xchg
push
xchg
xchg
rcr
ins
lods
(bad)
in
ja
cmps
iret
cmp
cmp
int
inc
xor
or
stos
sbb
repnz
daa
sub
fnstsw
dec
in
xchg
in
loope
sub
add
ins
mov
aaa
shr
pop
sbb
jmp
pop
inc
outs
inc
mov
xchg
leave
aad
jle
push
inc
mov
inc
(bad)
mov
inc
hlt
(bad)
sti
es
les
xchg
movs
push
fs
loop
bound
(bad)
jae
add
cmp
fmulp
xchg
call
(bad)
or
add
xor
cmp
add
jge
and
jae
mov
repz
ss
(bad)
(bad)
adc
inc
pop
add
mov
cli
or
ret
(bad)
and
adc
stos
retf
cli
cmp
addr16
stos
push
fwait
jl
jnp
sahf
push
loop
or
add
dec
xor
add
push
sub
xor
sahf
dec
out
pop
std
dec
mov
iret
outs
add
push
fisubr
shl
jmp
mov
dec
push
call
loop
xchg
sbb
outs
ss
hlt
mov
add
dec
jne
sahf
cmp
push
mul
ret
jb
cmp
mov
rcr
mov
mov
test
inc
add
pop
pop
cdq
inc
bound
out
ja
mov
pop
push
and
jp
mov
ja
ret
int3
mov
sub
jb
je
xchg
pop
sbb
rol
psrlw
dec
push
mov
push
in
pop
jo
mov
iret
adc
dec
push
rcl
mov
daa
sbb
and
outs
arpl
out
fist
and
mov
mov
outs
push
js
aaa
and
inc
or
test
ja
(bad)
jecxz
mov
and
cmp
cmp
mov
lods
add
repnz
mov
mov
das
xor
stos
call
in
dec
xor
add
xchg
and
mov
or
and
dec
mov
pop
mov
inc
aaa
push
pop
jne
fsubr
push
rcl
jno
popa
adc
mov
rcl
sbb
xchg
stos
mov
cs
enter
inc
or
mov
mov
push
pop
push
mov
out
out
cmp
add
in
fisttp
lahf
and
sub
test
push
and
(bad)
cld
fiadd
aam
dec
jmp
push
xchg
test
xchg
add
mov
jp
mov
inc
push
inc
mul
adc
out
popa
mov
cmp
icebp
dec
gs
call
int
inc
in
stos
fmul
leave
xchg
and
lods
popf
stos
aas
movs
jmp
retf
test
push
xor
mov
lods
mov
dec
jle
push
inc
sub
retf
loopne
pop
mov
lock
jae
and
mov
fstp
adc
adc
xchg
jns
and
ja
xchg
push
dec
xchg
iret
fucomp
out
ret
fbstp
ret
mov
test
daa
push
mov
pop
dec
add
ins
test
lods
sbb
mov
xchg
dec
jno
push
cmp
repnz
pusha
imul
icebp
test
loop
pop
dec
mov
jg
sidtd
jl
pushf
out
jl
test
mov
mul
add
retf
xor
inc
retf
cli
icebp
fcomp
mov
test
mov
push
je
and
retf
outs
or
rcl
sahf
hlt
pop
inc
mov
stc
jmp
and
retf
in
lds
inc
xor
pop
xor
cli
mov
aaa
push
lods
cmps
inc
cdq
cmp
int3
jnp
xchg
(bad)
(bad)
sahf
mov
test
lods
lahf
stc
mov
pop
loopne
(bad)
jecxz
add
add
push
lea
cmc
pop
fmul
sahf
pop
and
popa
or
dec
pop
cmps
sbb
stos
cmps
call
dec
xchg
xchg
sbb
cmp
idiv
or
or
(bad)
outs
jns
sbb
cmp
scas
add
push
mov
cmp
xchg
push
xor
mov
in
retf
jmp
retf
mov
hlt
mov
test
jo
mov
jb
cmc
pop
cmp
mov
and
push
add
jmp
fld
sub
xor
push
test
or
in
jecxz
pusha
repz
add
test
shl
arpl
and
dec
add
icebp
out
aad
push
sti
shl
js
and
in
mov
ja
out
mov
mov
push
stc
inc
fstp
jns
add
arpl
into
mov
loopne
ss
xor
cld
push
sahf
les
std
aad
xchg
push
and
lods
xchg
fwait
ret
mov
mov
pop
and
mov
(bad)
in
jmp
out
loopne
imul
std
dec
push
lods
jp
mov
pop
cmp
retf
or
aam
das
sub
lock
add
into
cwde
ss
cmp
and
iret
(bad)
pop
mov
test
mov
nop
mov
call
pop
mov
loopne
cmp
gs
pop
je
or
sub
stos
inc
push
dec
inc
xor
clc
xchg
mov
jo
stos
cmps
sbb
dec
ror
leave
sar
cdq
sbb
aaa
and
jecxz
stos
jnp
push
adc
pop
push
ret
sub
cmc
das
mov
retf
arpl
lods
fst
inc
mov
mov
dec
es
pop
cmp
mov
jb
jno
xchg
idiv
xchg
repnz
clc
rcr
jns
push
pcmpeqw
fcomp
mov
jnp
test
ret
imul
fst
cmps
jns
push
fs
cld
push
js
icebp
and
ss
(bad)
loopne
inc
push
push
out
(bad)
push
ins
imul
shl
shl
push
push
mov
mov
loopne
mov
adc
fs
add
push
jnp
xchg
jle
jmp
test
cdq
push
pop
add
daa
movs
aad
leave
pop
dec
aas
fild
dec
std
movs
jl
add
es
les
cmp
call
add
xchg
repnz
sub
xor
aam
xchg
sub
rcl
(bad)
and
popf
cmp
sahf
sbb
xor
dec
jp
popf
mov
enter
leave
push
sti
clc
sub
ficom
xchg
std
int
(bad)
cmp
jnp
test
cmc
and
fcomi
and
inc
into
leave
push
jne
mov
add
add
add
mov
sub
dec
adc
mov
movs
push
pop
xchg
cmp
dec
mov
sahf
ins
rcl
fnsetpm(287
sub
push
loop
loope
xchg
(bad)
push
stc
sbb
adc
call
push
retf
xchg
loopne
pop
ins
iret
adc
(bad)
cmp
outs
sub
cmp
add
sbb
ds
sbb
lods
jno
mov
dec
stc
daa
inc
sub
pop
popf
fsub
pop
loopne
std
mov
jl
mov
mov
test
sub
popa
add
jg
push
ret
cmp
int
jnp
pop
mov
adc
xchg
jo
dec
and
cli
sti
lea
xchg
inc
add
in
fnstsw
cdq
jl
jb
mov
dec
mov
scas
test
mov
mov
jns
and
push
push
jae
sub
mov
int3
(bad)
neg
sub
ins
jae
inc
push
add
arpl
out
popf
in
retf
sub
push
leave
cmp
das
sar
sub
sbb
xchg
lods
push
jp
jmp
repz
lods
cmp
jmp
sbb
lods
in
clc
mov
jge
add
sti
jo
shr
retf
cwde
adc
aam
xor
les
jmp
adc
inc
out
xchg
test
pop
fwait
pop
inc
aaa
stos
push
jns
ret
sbb
int3
aad
add
fisub
adc
push
or
mov
mov
dec
xchg
leave
xor
mov
in
lock
rol
xchg
ror
cmps
mov
ds
xlat
fnstsw
sub
(bad)
js
sbb
jle
cdq
push
cmc
dec
repnz
push
clc
fisub
and
adc
fs
scas
add
fmul
or
inc
dec
call
pop
scas
(bad)
test
add
lea
in
jnp
sub
test
push
jmp
das
add
and
imul
in
cmp
popa
cdq
fist
in
leave
xlat
stc
sbb
sub
mov
push
jns
xor
dec
in
std
inc
xor
mov
dec
dec
es
(bad)
out
cmp
lock
ds
and
mov
lds
adc
es
pop
arpl
hlt
cmp
push
inc
aad
imul
push
shr
sti
jo
mov
icebp
fadd
jns
out
mov
jle
sub
aas
push
or
sub
popf
dec
xor
lods
test
les
icebp
div
js
arpl
push
cmp
xchg
dec
inc
cld
arpl
jns
xchg
loop
and
and
lea
pop
pop
push
adc
xor
cmp
mov
aaa
ror
jmp
push
xor
cmc
das
dec
jecxz
mov
into
push
sub
retf
not
jne
mov
pop
cs
inc
pop
adc
sub
inc
mov
inc
jne
xchg
mov
(bad)
or
push
xchg
jnp
repz
mov
cmp
int
pop
test
hlt
xor
push
add
aaa
mov
fadd
sbb
mov
jmp
fdiv
add
add
aam
adc
dec
jecxz
fwait
rcl
mov
add
cmp
and
adc
daa
test
dec
bound
sbb
inc
jo
dec
pushf
aam
and
pop
mov
lods
int3
mov
push
xchg
(bad)
retf
lahf
mov
xor
or
adc
imul
leave
hlt
jnp
sbb
mov
movs
out
or
fadd
dec
sbb
fst
ja
jne
jp
bound
fst
mov
repnz
xchg
sub
push
mov
dec
push
cdq
test
jns
js
jb
ret
lock
and
push
rcr
jns
pop
sbb
adc
mov
fs
(bad)
xlat
shl
sbb
les
cmp
rcl
mov
lock
and
shl
ja
xchg
popf
aam
leave
ret
sti
popf
adc
movs
lahf
push
(bad)
sub
aam
mov
mov
pop
dec
jecxz
jb
inc
pusha
nop
movs
lea
push
sahf
mov
jmp
cs
shr
nop
mov
mov
gs
mov
xchg
mov
push
mov
lods
xor
shl
pop
xor
adc
adc
cmp
xor
mov
dec
sub
mov
out
arpl
(bad)
jns
test
out
ret
push
jmp
test
js
(bad)
and
and
call
cwde
sub
gs
push
test
std
hlt
out
xor
mov
mov
pop
mov
xchg
fdiv
fwait
dec
lock
xor
iret
xor
into
inc
std
loop
pop
mov
mov
jmp
imul
dec
jb
es
sub
lods
aaa
mov
lods
sub
shl
lods
not
dec
out
popa
lods
arpl
(bad)
in
dec
xchg
add
int3
mov
rcr
mov
mov
fwait
cmp
jge
xchg
pop
and
cwde
dec
sub
cvttps2pi
enter
aad
xchg
adc
test
in
add
shl
cs
inc
push
lods
loope
xchg
(bad)
add
jl
call
lds
movs
lea
or
add
bound
popa
(bad)
or
inc
and
into
adc
aam
shr
cmp
jno
inc
xor
sahf
movs
pop
jnp
dec
fbstp
and
cmc
call
js
pop
mov
mov
jge
xchg
push
push
xchg
xlat
sub
icebp
stos
mov
xchg
add
inc
cs
jecxz
es
lahf
movs
adc
pushf
cmp
sub
push
test
popf
pop
pmaxub
sub
sbb
mov
add
ss
inc
dec
jne
retf
pop
ds
das
dec
push
ja
test
jmp
dec
dec
outs
out
sbb
xchg
or
rcl
cld
adc
push
dec
mov
jnp
mov
retf
fnstenv
(bad)
stos
out
push
add
and
jns
std
dec
fnsave
cmp
push
aad
(bad)
imul
adc
dec
int3
add
mov
push
repz
jns
jne
(bad)
jmp
rcl
push
dec
pop
mov
and
(bad)
mov
pushf
into
mov
pop
jmp
inc
pop
retf
ds
ins
shr
dec
rcr
dec
mov
xchg
jp
push
mov
shl
fsubr
cli
sub
mov
cmps
retf
inc
addr16
cmp
data16
add
adc
xor
adc
daa
das
into
mov
jle
cwde
or
mov
mov
jne
and
mov
call
push
mov
into
lea
(bad)
fs
xchg
mov
js
bound
pop
push
pop
fild
rep
adc
mov
mov
dec
push
movs
retf
movs
sub
mov
(bad)
imul
cld
test
jle
xchg
das
xchg
adc
popw
dec
mov
cmc
ret
pop
ins
div
loope
pushf
adc
dec
sar
mov
xor
call
push
inc
scas
ret
xor
mul
jne
adc
push
jg
in
inc
call
les
push
mov
push
hlt
cmps
mov
test
cmc
iret
mov
fcom
xor
mov
mov
rcr
mov
shr
and
sbb
adc
fadd
fcmovnb
mov
mov
or
mov
sti
ficomp
add
cmp
ins
jb
xchg
pusha
test
in
push
nop
mov
mov
les
jo
xchg
and
adc
sbb
nop
mov
push
call
pop
and
jbe
mov
inc
cmps
(bad)
aas
scas
push
sub
sub
mov
push
and
push
into
push
(bad)
out
jne
cmp
adc
xor
repz
bound
outs
xchg
cmp
das
loopne
adc
mov
call
xchg
add
jmp
(bad)
call
mov
xor
mov
call
adc
scas
add
scas
push
cwde
pop
fmul
cmp
xchg
das
sub
in
out
int
adc
and
mov
jno
pop
jb
jns
add
sbb
pop
adc
xchg
sub
test
sub
int3
in
clc
mov
adc
aaa
mov
jbe
leave
pop
jecxz
dec
and
xor
mov
push
mov
fwait
mov
call
dec
jge
mov
adc
dec
xchg
leave
jmp
lea
lock
call
push
sahf
xchg
int3
xchg
dec
sbb
leave
push
into
imul
cwde
push
popf
outs
or
mov
mov
(bad)
fld
stos
leave
scas
loope
jae
push
inc
sbb
cmc
loop
xchg
mov
call
dec
fwait
cmp
movs
cmp
mov
cmp
dec
sbb
cmp
cmp
and
cld
ds
push
in
inc
mov
pop
(bad)
lock
sti
sbb
in
test
adc
fst
jae
push
lahf
sub
lahf
ja
adc
adc
pop
sbb
stos
cli
ror
and
sahf
dec
mov
xor
mov
push
xor
in
inc
mov
xor
jle
shl
and
jns
sub
mov
mov
popa
push
push
ds
out
cli
mov
mov
inc
out
adc
imul
iret
scas
movs
gs
pusha
adc
aas
mov
add
jno
clc
ja
jnp
stc
xchg
sub
jle
stos
sbb
(bad)
jno
pop
and
and
mov
aas
loop
jecxz
sti
test
cmps
push
aaa
jne
cld
add
and
lock
fstp
adc
sub
cmp
xor
sub
jno
jns
loop
in
in
dec
ja
in
leave
or
imul
jnp
jle
sbb
jb
lods
pop
shl
jno
cmp
and
sbb
add
dec
aaa
inc
mov
dec
ror
imul
or
sub
add
sub
cld
ins
xchg
mov
not
daa
call
nop
lods
aad
push
arpl
cmc
sbb
sbb
add
out
aad
xor
cwde
mov
jno
mov
cs
push
aaa
cdq
jle
and
movs
mov
repz
mov
and
sbb
ret
push
adc
xchg
mov
add
fcom
sbb
dec
inc
fidivr
push
inc
int
call
lods
test
mov
mov
and
int
sub
fwait
je
fisttp
jle
clc
shl
push
jge
das
iret
cmps
sub
shl
or
adc
mov
mov
outs
out
lock
(bad)
shl
and
jmp
push
xchg
xchg
(bad)
(bad)
pushf
int3
shl
ret
sahf
mov
push
mov
test
mov
inc
sub
push
lahf
dec
sub
test
mov
dec
stos
mov
fstp
out
xor
gs
es
sbb
add
fwait
inc
dec
cld
xlat
add
jbe
pop
jle
fmul
mov
jnp
pop
jge
dec
movs
shl
(bad)
mov
mov
adc
jbe
sbb
xor
sub
add
jmp
lds
stos
xchg
jge
loop
rcr
cmp
push
mov
je
dec
jmp
xor
pop
lods
sub
pusha
outs
add
jp
pop
(bad)
psubsw
sahf
ins
or
loope
jno
adc
mov
add
enter
fwait
scas
xchg
test
loope
fsubrp
xor
xchg
or
fcmovbe
ror
jmp
out
pop
es
inc
or
pushf
jo
(bad)
call
mov
pushf
mov
iret
add
cmp
and
jbe
xor
cld
adc
ins
jmp
cli
aam
xor
adc
fadd
or
jp
inc
or
rdmsr
sub
or
jmp
shr
ret
pop
ficomp
jmp
arpl
test
adc
add
repnz
push
and
jbe
or
and
push
test
loopne
lea
dec
fldenv
gs
dec
(bad)
pop
ret
scas
push
mov
and
push
stos
inc
mov
mov
lahf
scas
inc
lahf
add
sbb
inc
imul
or
and
imul
add
pop
pop
cs
add
sbb
inc
pop
das
sub
mov
ins
xchg
ja
retf
lock
xchg
mov
test
mov
inc
dec
inc
int
aad
ficomp
(bad)
call
dec
mov
xor
inc
aad
and
js
mov
jae
jmp
je
cmps
sub
fnstsw
pop
pop
mov
cmp
fist
in
push
rcl
pop
dec
rcr
jmp
cmp
or
lea
sbb
sub
test
add
enter
(bad)
enter
jg
xchg
dec
push
stos
addr16
pop
shl
repz
and
and
ins
ret
xchg
lds
and
dec
cmps
ins
xchg
ror
adc
cmps
pop
test
test
popa
pop
(bad)
stc
adc
add
add
mov
retf
push
call
pop
inc
daa
in
mov
mov
pop
jae
ins
push
add
mov
xchg
or
sub
push
test
iret
xor
sub
add
sbb
out
mov
leave
or
push
sbb
xor
dec
sar
gs
out
and
sub
call
pop
cmps
rol
sbb
mov
lds
sbb
mul
push
enter
sbb
(bad)
jbe
in
mov
mov
pop
mov
dec
aas
in
fild
adc
bound
dec
mov
sub
inc
retf
mov
ss
mov
inc
mov
sub
bound
(bad)
aas
cld
jo
push
mov
rcr
rcl
retf
push
cmp
xchg
and
cld
loope
inc
popa
jg
pusha
inc
or
ins
cmp
in
sub
call
add
imul
fs
inc
push
ror
dec
repz
inc
mov
mov
arpl
js
inc
push
push
or
xchg
fwait
dec
sbb
movs
icebp
cmp
out
in
mov
cmp
stos
mov
add
cmp
or
retf
add
mov
in
hlt
rol
mov
xor
aas
mov
push
sahf
and
dec
in
and
out
nop
data16
ret
push
mov
test
scas
mov
dec
(bad)
mov
add
xrelease
cmps
dec
fisubr
adc
dec
cmp
in
push
loopne
call
js
mov
test
mov
xsha1
cmps
mov
nop
(bad)
lods
ins
xchg
in
aas
and
adc
jbe
xchg
adc
jno
sub
sbb
push
dec
int3
outs
mov
jno
ds
sub
pop
mov
lahf
pop
push
enter
or
movnti
inc
push
xchg
call
aad
mov
mov
loope
pop
mov
cmc
mov
cld
cs
dec
fld
adc
dec
sbb
lods
mov
sub
inc
jo
stos
sub
in
add
cmp
not
dec
ror
inc
mov
push
add
(bad)
jbe
retf
ins
out
push
jecxz
mov
out
out
sub
adc
sub
je
and
je
leave
sbb
or
cmps
mov
retf
jl
and
neg
(bad)
sti
jns
daa
out
dec
dec
and
push
sub
xchg
push
and
xchg
pusha
rol
adc
and
xor
jae
in
sbb
shl
leavew
cmp
xchg
cmp
pop
in
in
and
imul
rcl
push
jg
fs
push
movs
arpl
out
ja
ss
call
hlt
mov
jg
ret
adc
retf
into
add
mov
arpl
outs
mov
add
add
scas
and
jge
lods
stos
das
mov
cmp
mov
and
out
in
push
leave
retf
cmp
retf
scas
inc
in
cmp
ins
mov
rol
or
inc
dec
int3
cmps
gs
int3
cmc
pop
fwait
xchg
mov
cmps
lahf
fdivr
pop
jb
js
repz
or
pop
ficomp
shr
mov
imul
gs
sbb
cmp
imul
mov
xor
xchg
jecxz
lods
mov
aam
ret
xlat
fld
sahf
mov
xchg
cwde
pop
lock
adc
inc
sti
push
xchg
(bad)
ror
xchg
sar
jae
push
mov
stos
sub
popa
mov
inc
ds
push
cmp
fild
dec
jae
jbe
adc
rcr
sti
sar
mov
dec
add
dec
imul
mov
in
scas
sub
test
sar
inc
fwait
dec
dec
pop
pop
adc
jmp
push
cmp
and
test
sub
add
dec
mov
test
xchg
sbb
inc
js
movs
in
lea
sub
aaa
mov
cli
hlt
mov
cli
vpopcntb
sbb
add
sar
cmp
dec
into
bound
fldenv
test
push
push
mov
cld
mov
inc
not
mov
mov
jne
cs
jg
ss
outs
mov
xchg
or
aam
mov
push
movs
and
nop
scas
movs
ror
mov
retf
jle
ss
lods
loop
sub
and
mov
jno
fwait
mov
and
mov
and
xchg
ret
add
in
ins
sub
scas
daa
cmp
dec
jmp
dec
jmp
jecxz
jge
aam
test
jp
add
in
mov
adc
adc
imul
lea
mov
dec
mov
push
jl
sbb
out
push
and
cmc
ins
cdq
cmp
iret
fmul
arpl
jl
popa
xchg
inc
cld
rol
mov
sbb
aad
cmp
cdq
jl
sub
in
lds
mov
mov
push
and
mov
sbb
fnstsw
cdq
aam
aad
mov
xor
cmp
cmps
cs
inc
push
add
push
scas
pop
in
cwde
sar
(bad)
es
pop
out
into
inc
adc
aad
cmp
mov
jecxz
ret
dec
mov
outs
jno
out
stc
stc
pusha
stc
fnstenv
cli
adc
mov
stos
add
stos
not
sbb
lods
in
mov
and
inc
xchg
sub
pop
out
pop
add
lock
push
std
div
jp
(bad)
outs
or
inc
push
dec
in
fsub
data16
js
push
int
sar
or
jle
cs
or
nop
retf
or
in
and
cmp
adc
popf
loop
ds
mov
sahf
dec
mov
mov
addr16
data16
retf
popa
xor
nop
lahf
outs
mov
sub
adc
ficomp
mov
adc
lods
in
es
push
scas
jl
mov
jecxz
cdq
push
gs
mov
sbb
dec
push
into
adc
sub
(bad)
jno
fwait
lock
idiv
inc
(bad)
xor
mov
and
xchg
xor
mul
inc
aad
jmp
sbb
pushf
jmp
sub
shr
pop
adc
adc
pop
imul
xchg
adc
xor
inc
mov
aam
std
fisub
xchg
sahf
sub
shl
(bad)
cmp
aam
imul
js
mov
not
es
mov
das
in
mov
xor
cmps
stc
push
out
xor
sub
mov
call
sahf
and
adc
push
out
outs
sbb
jmp
call
jae
mov
jb
aaa
sub
fstp
mov
sub
add
mov
jo
cmps
xchg
cld
push
xor
je
inc
data16
or
aaa
pop
stc
dec
enter
test
inc
fidiv
xchg
rcl
ja
xchg
pusha
jne
pop
fs
ficom
jnp
add
mov
xor
pusha
mov
retf
popf
repnz
je
mov
xor
scas
mov
push
jecxz
fistp
out
hlt
mov
ins
outs
xor
adc
sub
icebp
push
(bad)
cld
xor
stos
mov
jbe
addr16
lods
add
jge
sbb
jb
sub
xchg
js
test
popa
mov
ror
hlt
rcl
aam
xlat
mov
aad
xor
mov
add
(bad)
jmp
sbb
dec
test
sub
jle
sbb
nop
mov
add
sahf
mov
imul
int3
mov
inc
mov
sbb
loop
outs
pushf
(bad)
icebp
in
ror
mov
(bad)
push
xchg
xlat
cmp
jecxz
fwait
lock
add
and
mov
cli
jp
add
in
ss
adc
iret
cmc
push
cmp
push
(bad)
mov
jge
rcl
inc
cmps
fsub
cwde
adc
jno
retf
fist
test
es
sbb
xor
mov
iret
repz
jcxz
jg
ret
sub
std
mov
or
cmp
dec
xor
aad
dec
or
stc
enter
adc
pop
aas
popf
push
ss
(bad)
call
adc
inc
cmps
mov
in
lds
mov
fldcw
push
xchg
repnz
mov
push
mov
inc
pop
push
cld
icebp
movs
sbb
lods
add
xchg
pop
cs
shl
xor
leave
idiv
(bad)
loope
add
sub
and
add
aas
mov
cmp
(bad)
mov
mov
mov
adc
jp
adc
xchg
xchg
lods
ret
sbb
dec
pop
xor
in
push
mov
fsubr
push
cmps
ror
add
jp
scas
dec
pop
das
fmul
inc
aas
pop
push
rcl
mov
jns
jl
push
pop
adc
jne
int3
jl
xchg
mov
or
push
xchg
push
int3
das
add
inc
sbb
outs
scas
popa
xchg
scas
lods
int
(bad)
stos
inc
jmp
rcr
imul
mov
inc
retf
xchg
popa
push
dec
out
inc
xchg
rcl
cmovne
fxch
fmul
nop
or
in
or
dec
mov
jmp
ins
fld
and
leave
mov
xor
pop
ds
xchg
cld
out
mov
loope
dec
mov
mov
cmc
mov
add
inc
xchg
les
and
cmps
xor
xor
sbb
add
jg
pushf
mov
shr
(bad)
ficomp
adc
cmp
xlat
loopne
hlt
sub
mov
xor
adc
daa
sub
xlat
pop
ficom
xchg
xchg
inc
pop
pop
jb
add
outs
sti
ror
xchg
jl
xor
jl
inc
xrstor
add
jno
cwde
fmul
xor
add
fisubr
push
sub
in
adc
es
(bad)
mov
mov
mov
push
sub
or
inc
(bad)
lea
sub
loopne
or
loopne
fisttp
xor
leave
sbb
mov
mov
stos
and
not
push
xor
jnp
mov
fldcw
cmp
or
dec
ds
mov
mov
jp
mov
pop
jne
mov
scas
dec
data16
push
pop
jg
call
sbb
dec
arpl
sub
pop
mov
ds
(bad)
scas
lock
push
es
imul
(bad)
cmps
cwde
mov
loope
sbb
stos
ficom
mov
retf
popf
push
pop
xchg
in
add
adc
mov
imul
loopne
push
add
loopne
push
int
imul
mov
add
fwait
mov
xchg
mov
arpl
or
in
adc
jge
ret
call
pop
lock
lahf
jge
cld
das
cmovo
fist
out
mov
and
enter
stos
or
ins
pop
vmwrite
shl
fstp
loop
jge
aas
sub
and
sbb
xor
sbb
outs
imul
pop
repnz
lods
jecxz
loop
sbb
enter
stos
mov
and
pop
imul
les
cmps
jno
cmps
jecxz
scas
fsubr
mov
in
dec
fnstcw
adc
stc
psrad
and
sbb
(bad)
jae
xchg
push
test
mov
jb
out
xor
mov
xchg
fnstenv
dec
mov
or
jb
repz
mov
rcr
lods
push
mov
and
call
mov
mov
fs
push
adc
jmp
adc
into
loop
imul
jno
std
mov
inc
rol
jle
out
mov
mov
and
or
sbb
in
rol
mov
sbb
lods
in
xchg
xchg
in
imul
imul
aad
(bad)
stos
dec
or
pop
jae
or
dec
inc
mov
mov
(bad)
push
lock
test
pop
push
pop
stos
je
mov
xor
inc
cs
fstp
addr16
and
fsubr
sub
push
push
mov
loopne
cs
rcl
add
add
outs
outs
xchg
ret
and
add
in
jb
iret
dec
pop
and
xor
pop
gs
push
loope
pushf
pushf
out
pop
or
scas
mov
mov
aad
mov
aad
jp
and
fld
cmp
scas
pop
bts
mov
in
aas
arpl
jb
test
or
rcr
loopne
stc
lds
or
lea
adc
push
ret
cmp
adc
adc
popa
mov
call
xchg
sbb
sub
retf
or
mov
xchg
data16
jnp
daa
loop
add
test
arpl
mov
jge
pop
sbb
mov
adc
push
adc
pop
or
mov
dec
push
into
and
test
pop
xor
add
gs
or
int
sahf
pop
mov
int3
xor
(bad)
mov
dec
es
pause
scas
stos
and
enter
jmp
sbb
inc
cmp
sub
push
cmp
jmp
or
sbb
xchg
dec
add
mov
and
loop
sbb
sbb
retf
push
pop
mov
movs
out
in
push
lods
inc
ficomp
xchg
cmps
stos
mov
add
jbe
push
imul
clc
adc
mov
js
clc
mov
pusha
stc
nop
mov
scas
test
dec
inc
pop
fbstp
imul
sbb
xchg
lds
cmp
mov
inc
lock
out
cdq
dec
int3
clc
push
das
or
lock
(bad)
jmp
push
add
fs
lea
nop
mov
and
shl
xor
int3
jne
sub
in
out
sti
outs
mov
shl
gs
cdq
jae
sti
cmp
adc
(bad)
aad
mov
push
imul
mov
pop
cld
push
jl
(bad)
stos
inc
adc
jbe
test
cs
retf
sti
retf
call
mov
retf
xchg
mov
ds
xlat
int3
arpl
xor
cmps
xchg
imul
push
sbb
in
jl
push
lods
add
rcr
push
push
imul
int3
jg
mov
out
jo
jecxz
mov
imul
cdq
add
adc
push
push
jns
hlt
outs
push
fimul
adc
ja
(bad)
scas
xor
pop
push
ret
mov
pop
xchg
push
sbb
inc
pop
or
sub
and
ins
push
lock
mov
push
sbb
fadd
loope
or
outs
cmp
test
js
xchg
aad
sub
stc
sub
add
adc
and
jmp
repz
adc
lods
mov
rol
call
imul
addr16
ror
mov
jb
mov
ret
add
sub
adc
push
outs
sub
mov
adc
mov
push
xchg
mov
sub
aaa
xchg
mov
addr16
lds
mov
shl
mov
lahf
lahf
pop
ror
dec
push
and
mov
popa
stos
or
jbe
movs
adc
enter
or
xor
iret
and
xor
(bad)
retf
mov
arpl
pusha
stos
retf
pop
mov
pop
repnz
into
mov
sub
pop
ins
out
(bad)
cmc
sbb
dec
pushw
stos
pminsw
lahf
ucomiss
mov
sahf
sub
sbb
inc
loop
mov
(bad)
pop
ins
inc
cmp
add
xchg
xchg
pop
rcr
pop
cmp
pop
call
add
repz
sti
mov
data16
xor
xlat
inc
adc
add
mov
adc
lea
iret
int
push
pop
pop
cli
xchg
mov
loope
lods
sbb
add
lock
aam
sub
xchg
cmp
int
outs
sub
cli
(bad)
lahf
das
pop
pusha
push
and
lock
sub
addr16
adc
fwait
or
pop
(bad)
call
jbe
test
mov
dec
jle
sub
js
sub
hlt
lods
xchg
xchg
push
loope
mov
inc
shl
inc
lea
add
dec
adc
push
mov
aad
pushf
mov
cmp
xor
cmp
dec
call
jle
mov
xor
cli
push
js
daa
popw
cmc
mov
mov
fs
cmc
out
loopne
mov
(bad)
retf
loope
fisubr
nop
add
in
popa
jl
les
and
dec
int
test
pop
inc
xchg
(bad)
or
bound
sbb
and
mov
push
movs
pop
daa
scas
adc
in
mov
dec
pop
cmc
fs
ror
mov
not
xchg
push
pop
scas
dec
mov
dec
faddp
call
jno
or
pop
xchg
aas
in
mov
dec
mov
jl
adc
add
retf
ins
push
mov
mov
jmp
or
bound
pop
cmp
cdq
mov
hlt
push
mov
call
repnz
mov
int3
adc
int3
dec
adc
sbb
jbe
sbb
aam
jb
xchg
out
pop
test
adc
cmp
ds
fnsave
imul
push
dec
and
sub
lods
in
push
sbb
out
mov
mov
daa
fsubrp
fistp
xor
mov
loopne
mov
addr16
or
add
lods
jmp
hlt
mov
pop
lock
dec
xchg
lea
iret
cld
scas
and
sub
nop
movs
xchg
xor
loop
ds
add
push
mov
pushf
adc
jae
ficom
sub
lahf
fild
(bad)
mov
je
ret
inc
sub
rcl
aas
cmp
ds
inc
repz
pushf
or
scas
or
scas
(bad)
addr16
(bad)
and
add
lea
sub
add
aam
in
cli
loop
movs
adc
popa
stos
cmp
pop
nop
jmp
loopne
dec
xchg
(bad)
mov
icebp
push
and
adc
cmp
push
add
adc
sub
push
sar
mov
pushf
sbb
push
hlt
sti
inc
mov
or
dec
jecxz
gs
mov
ds
xor
xchg
xchg
dec
repnz
push
sti
retf
adc
data16
mov
in
push
test
jno
or
xchg
and
pusha
xor
add
sbb
mov
cmp
lock
ins
dec
(bad)
jns
mov
mov
mov
test
or
aam
lods
mov
(bad)
pop
arpl
clc
xchg
dec
push
add
mov
cmp
push
fnstcw
xor
sbb
or
out
loopne
xchg
sub
dec
imul
bound
fcom
mov
jne
retf
je
push
and
xor
imul
push
mov
lods
xchg
cmp
int
sbb
into
js
gs
push
pop
outs
je
cmp
and
cmp
dec
mov
arpl
imul
test
jns
retf
xor
mov
mov
aam
and
lock
mov
sub
mov
adc
aas
jp
mov
retf
xor
push
mov
js
sahf
and
add
fucomi
outs
add
xor
adc
int
shl
jbe
adc
loopne
push
int
or
dec
mov
pop
fdiv
fst
xor
rol
adc
outs
add
dec
xor
loopne
mov
dec
jmp
cmp
cmp
into
jmp
push
jmp
fmul
jns
and
loop
fcom
xchg
hlt
xchg
cmp
or
clc
cdq
jbe
daa
add
int
jne
es
or
fadd
fcmovnu
clc
jecxz
movs
xor
mov
sub
mov
jno
mov
push
push
jne
(bad)
jl
dec
into
sahf
and
mov
loop
and
xor
std
cdq
cmp
mov
sti
cmp
jnp
test
mov
add
inc
or
pop
ds
popa
lahf
mov
mov
pop
jne
(bad)
mov
sar
sub
imul
pop
movs
ja
adc
cdq
into
jbe
cmp
ret
fst
ret
xor
jne
xor
arpl
jmp
or
mov
jl
fst
loope
fs
fidiv
adc
hlt
fsubrp
das
inc
cld
sbb
sbb
out
sbb
retf
jge
sbb
cmp
jle
aaa
ret
jecxz
mov
jno
(bad)
aam
int
repz
scas
adc
inc
and
sub
lods
mov
enter
pushf
outs
pop
jbe
test
cs
cmp
mov
mov
arpl
pop
(bad)
je
push
dec
xchg
in
or
js
outs
adc
imul
(bad)
ja
sahf
mov
sub
push
cs
in
(bad)
mov
push
pop
dec
retf
ret
adc
iret
stos
mul
cmp
jmp
sti
jl
cwde
dec
test
or
jmp
pushf
loopne
sbb
iret
cmp
and
cmp
cmp
mov
xor
ins
mov
sub
dec
pusha
mov
mov
push
mov
outs
sub
jb
movs
cmp
popa
js
push
sbb
gs
xor
sbb
inc
adc
popf
call
jl
push
jne
cmp
dec
xchg
adc
adc
lahf
push
jne
pop
pop
retf
jge
xchg
push
test
xor
movs
adc
test
pushf
jl
jg
inc
mov
call
dec
repz
and
xchg
mov
fnstenv
iret
mov
mov
cmp
add
inc
(bad)
(bad)
out
and
mov
rol
mov
cmc
cmps
es
jle
daa
adc
push
cwde
inc
scas
cli
mov
test
push
in
mov
adc
pop
cmp
adc
pop
mov
test
sti
sbb
dec
shl
sahf
mov
mov
or
and
enter
mov
(bad)
inc
(bad)
cdq
fwait
iret
pushf
xchg
push
out
adc
out
or
xor
lods
pop
fld
cmp
aad
jle
(bad)
(bad)
mov
adc
fstp
stos
in
sbb
jb
or
jmp
and
push
mov
dec
(bad)
int3
push
arpl
xchg
sbb
pusha
fstp
jbe
xor
add
mov
es
stc
push
and
xchg
mov
sub
inc
test
xchg
cmp
pop
xchg
pop
dec
neg
dec
call
xlat
jmp
push
(bad)
out
sbb
sub
mov
pushf
call
and
add
in
(bad)
leave
clc
rcr
or
std
jbe
cmp
push
jbe
xchg
cmp
jecxz
fwait
jnp
xchg
bnd
call
ficomp
mov
pop
mov
inc
jns
les
adc
outs
xchg
add
std
repz
mov
adc
int3
jne
das
movs
mov
push
hlt
pop
mov
movs
call
test
xor
or
movs
ds
outs
fnsave
pop
or
xor
mov
test
das
cmp
or
mov
pusha
lock
repnz
mov
xchg
into
jl
inc
aas
pop
push
cwde
cli
lock
adc
ret
or
mov
or
ret
xchg
jo
int3
int3
sbb
hlt
ficomp
add
fcomp
inc
(bad)
jp
out
mov
repnz
add
xlat
push
xlat
pusha
jecxz
xchg
inc
inc
test
jecxz
xchg
mov
pop
mov
or
cmp
(bad)
fwait
je
mov
cmp
test
add
leave
aam
or
xor
clc
imul
push
xchg
rcl
daa
cmp
push
or
jle
adc
lds
cli
pop
xor
mov
mov
(bad)
popf
outs
mov
mov
test
xlat
xor
push
cmc
mov
mov
mov
push
push
mov
rcl
sub
and
jge
sbb
mov
or
data16
aaa
stos
mov
jnp
cmps
push
push
icebp
add
cmps
xchg
add
xchg
out
push
loope
dec
mov
adc
in
rol
cmp
inc
add
or
pop
cmp
jno
sbb
push
rol
movs
mov
dec
std
mov
cld
je
out
pop
les
cmp
jle
push
inc
xor
sbb
test
aad
popa
icebp
(bad)
xor
cmp
cmp
sub
retf
mov
cs
mov
inc
sbb
leave
and
and
sbb
xchg
and
jbe
test
pop
sar
imul
mul
ror
adc
leave
repz
push
cmc
sub
hlt
rcr
bound
jge
mov
adc
shr
push
or
je
fldcw
cs
inc
sti
push
sahf
xor
lahf
mov
rcl
dec
mov
xchg
sub
push
cmp
sbb
jl
sbb
adc
pop
enter
and
xor
jns
add
std
ret
cwde
(bad)
mov
fdivr
inc
out
sbb
stc
push
pop
and
lods
xchg
movs
mov
xchg
pop
test
rol
cmp
mov
push
bound
cmp
or
inc
jge
inc
addr16
test
sbb
push
shl
mov
push
dec
scas
push
out
and
(bad)
retf
out
pop
sbb
adc
xchg
cmp
mov
fild
in
fild
sub
sbb
sbb
sub
push
mov
out
movs
clc
arpl
neg
dec
lahf
and
call
(bad)
or
inc
inc
jne
mov
mov
in
adc
adc
mov
xchg
mov
out
popa
mov
in
cmp
js
mov
mov
lods
add
push
icebp
imul
xchg
push
je
int
mov
dec
push
not
ja
movs
or
(bad)
lock
mov
int
push
and
and
adc
xlat
daa
push
mov
inc
or
inc
test
lods
lods
fnstcw
out
mov
cmp
les
or
add
xor
les
test
lods
xor
cmp
pop
push
(bad)
adc
adc
outs
scas
shr
cwde
test
push
dec
adc
outs
iret
adc
mov
test
mov
test
xor
push
sub
jb
(bad)
movs
loopne
jmp
mov
imul
stos
sbb
inc
out
cmc
loope
jns
sub
test
xor
dec
cli
dec
std
adc
pushf
call
or
cmc
bound
shr
jecxz
xchg
fidivr
xor
call
mov
cdq
jg
pusha
shl
adc
mov
add
(bad)
jo
jg
jp
cmps
mov
call
nop
scas
jle
jp
fs
lock
out
mov
xlat
mov
cld
std
pop
pop
mov
or
sar
sbb
imul
out
ins
mov
ja
dec
sub
xchg
xchg
or
mov
pop
adc
comiss
push
loopne
fs
sti
xor
pusha
adc
xchg
and
push
popa
push
dec
cmp
sub
out
test
in
loopne
clc
xchg
ret
lods
imul
scas
test
or
and
ret
cwde
xchg
leave
pop
xchg
ja
rcr
dec
imul
clc
cmp
and
fs
in
jae
push
mov
add
xchg
mov
mov
ss
jo
push
js
mov
lea
mov
cmp
xchg
cmp
or
(bad)
aam
sbb
dec
leave
sub
sti
lock
loope
mov
call
cmp
in
mov
imul
push
push
or
xchg
ja
enter
xor
fnsave
shl
sub
pushf
xor
jmp
jge
mov
mov
ds
pop
lods
fst
or
sbb
push
sub
xchg
pop
dec
aad
fadd
xlat
mov
clc
jns
adc
adc
mov
mov
add
adc
mov
dec
sti
outs
xchg
xchg
sbb
and
sbb
pop
sub
lahf
rcr
jmp
jmp
sub
cmps
or
xchg
aam
mov
(bad)
or
xor
jp
jns
mov
sar
add
pop
cdq
dec
daa
rcl
and
mov
loop
mov
dec
xchg
and
jmp
sbb
retf
push
sub
pop
lods
pop
imul
pop
mov
into
pushf
neg
test
pusha
push
xchg
cmp
mov
inc
addr16
push
fcmovu
mov
mov
cmps
(bad)
cmps
cmp
je
inc
ss
add
push
push
cld
sub
into
stc
scas
and
inc
pop
mov
test
aam
pop
(bad)
loop
loopne
ficomp
sti
rcl
pop
sbb
dec
mov
push
retf
mov
ret
enter
push
jmp
xchg
(bad)
int3
mov
xchg
or
adc
call
push
push
cdq
shl
inc
and
test
cmc
in
cmp
loopne
test
lahf
inc
mov
mov
dec
mov
pusha
pop
pop
dec
sbb
push
xor
and
ins
mov
int3
rcr
mov
xor
push
cli
and
icebp
dec
inc
gs
pop
sub
inc
and
shr
lea
test
fldenv
or
hlt
cwde
mov
jmp
je
xchg
sar
(bad)
add
dec
pop
and
push
psubd
adc
or
ins
cmp
(bad)
out
mov
fbld
jno
push
imul
ins
fidiv
fwait
mov
pop
and
ins
cmp
sub
mov
sub
inc
mov
scas
movs
loope
xchg
stos
dec
mov
fs
xlat
xchg
jmp
nop
jno
int3
mov
ja
stos
lock
xchg
sub
jmp
inc
ds
cmps
push
cmps
push
pushf
rcl
sub
outs
movs
fs
mov
out
pop
add
(bad)
pop
push
and
aaa
add
mov
sub
push
out
jg
mov
jge
adc
into
dec
cmp
xor
outs
or
mov
or
xchg
push
and
imul
scas
and
scas
mov
push
mov
fwait
inc
fisttp
adc
xchg
mov
inc
ficom
adc
ret
cdq
loopne
ss
sti
xchg
lods
pushf
sbb
jns
mov
xor
loope
inc
lea
call
sbb
fbstp
xchg
push
push
(bad)
shl
leave
inc
mov
and
lds
or
out
stc
(bad)
cmp
aas
aam
mov
(bad)
out
loope
clc
mov
mov
push
sbb
pop
cli
cdq
lea
cmp
sbb
xchg
xchg
retf
cmps
aam
rcr
and
imul
dec
mov
push
pop
in
stc
sbb
jge
fsubr
jmp
fbstp
sbb
and
js
mov
retf
xor
jno
ss
scas
inc
(bad)
cmps
fld
xor
push
inc
jb
mov
ret
mov
xor
push
jmp
mov
mov
or
ret
adc
pop
pop
add
iret
(bad)
repz
sbb
push
scas
rcr
fbstp
rdpmc
mov
cmp
loope
adc
cmc
and
sbb
cmps
inc
add
dec
inc
sub
push
mov
mov
xchg
ss
or
jp
test
imul
lahf
add
cwde
lods
outs
cmp
pop
lods
in
(bad)
mov
fild
inc
xchg
out
jp
push
xor
retf
jo
clc
mov
imul
mov
repnz
sbb
test
inc
ret
push
ret
scas
lods
jp
movs
push
sahf
inc
xchg
mov
jae
mov
push
cld
fnstenv
fdivr
adc
loop
pop
(bad)
mov
mov
hlt
out
dec
data16
ret
lahf
cmc
cmp
or
aas
fs
imul
and
mov
xchg
cmp
push
cmp
sbb
sub
aaa
pop
inc
sbb
ja
jg
add
outs
popf
mov
add
inc
xchg
mov
sar
jp
aad
or
dec
(bad)
jmp
retf
push
sub
and
call
stos
call
mov
unpcklps
out
jb
jg
lods
clc
jmp
add
leave
cmps
jle
lods
aad
fisttp
push
xor
retf
push
xchg
(bad)
rcl
xchg
xchg
fs
hlt
imul
cmp
inc
jmp
dec
in
fwait
push
cmps
sbb
sti
ja
(bad)
add
xchg
add
jmp
mov
data16
out
add
pop
pop
inc
out
imul
out
jp
or
inc
push
add
jge
dec
or
retf
repnz
pop
test
adc
sub
cmp
adc
hlt
les
dec
ds
hlt
xor
fwait
std
mov
rcr
mov
xor
gs
push
xchg
inc
add
sub
sbb
cmps
jnp
(bad)
jne
mov
imul
jmp
mov
add
sbb
mov
sub
jg
or
adc
out
outs
jmp
loop
addr16
add
jo
push
rol
fild
pop
nop
pushf
in
or
xchg
sbb
pop
scas
mov
jecxz
aam
pushf
push
rol
loop
jmp
hlt
jns
ja
mov
jno
mov
das
inc
push
jg
gs
mov
and
cmps
(bad)
or
inc
cmp
mov
inc
jno
jmp
jle
pop
cli
pop
mov
and
sub
(bad)
sar
xchg
xchg
rcl
and
push
push
xor
sub
adc
jp
push
repz
das
xchg
xor
cs
or
push
mov
jmp
dec
jne
pop
std
inc
fldcw
cld
push
jge
mov
cmp
jle
mov
push
sbb
dec
das
lds
not
xor
popf
mov
in
stos
inc
fld
sbb
sar
dec
fucom
loopne
cmp
nop
aad
cmp
sti
inc
lods
mov
inc
movs
test
sbb
lods
inc
jb
push
gs
leave
movs
mov
jo
arpl
stos
(bad)
adc
jno
mov
jp
and
cmp
in
jmp
xor
ror
call
adc
jns
cmp
lahf
rcl
call
and
sub
gs
push
loope
dec
addr16
pop
jg
dec
mov
fs
adc
mov
mul
icebp
clc
lods
fisub
mov
and
push
imul
sbb
xlat
mov
inc
sub
push
imul
and
mov
sub
ret
je
fld
loopne
dec
inc
xchg
fcomip
test
fs
and
inc
ss
inc
jae
inc
add
sub
cmp
call
rol
scas
inc
in
mov
leave
jbe
hlt
and
out
outs
das
lds
pop
adc
push
mov
cmp
js
shl
stc
cmps
(bad)
pop
or
add
test
add
clc
movs
mov
jne
push
dec
xchg
jns
inc
enter
xchg
xor
mov
js
mov
popf
(bad)
aas
mov
jns
(bad)
push
cmc
mov
rcl
rcl
push
loopne
ret
add
iret
scas
jns
shl
test
dec
outs
xchg
js
cmps
push
dec
sub
retf
xchg
push
push
ins
xchg
shl
xchg
mov
call
jne
jle
mov
ret
sub
pusha
cmps
addr16
push
jno
icebp
imul
inc
push
or
mov
nop
(bad)
cmp
pop
cmp
mov
ins
jmp
xchg
dec
push
or
cmp
int
xchg
xor
jg
cmps
ja
dec
loopne
dec
and
push
stc
xor
mov
push
(bad)
xchg
and
mov
lods
dec
ret
cmp
jle
and
cmp
js
loopne
and
and
jle
rol
rcl
movs
or
aad
xchg
test
cmp
shr
mov
fadd
mov
push
jmp
mov
cwde
xor
cmp
sub
out
add
and
pop
jo
dec
cmps
daa
xor
jns
mov
cmp
xor
out
mov
pop
dec
adc
or
xchg
mov
xlat
xchg
inc
sub
mov
mov
daa
cli
iret
dec
scas
retf
jmp
(bad)
jg
cmps
clc
nop
pop
and
es
add
inc
lahf
repz
icebp
mov
ja
data16
add
or
into
loope
mov
lds
(bad)
(bad)
cmp
push
adc
test
inc
test
inc
pop
inc
pop
xor
jp
mov
xor
push
inc
xchg
inc
add
test
fadd
xor
aam
pop
idiv
adc
ja
push
(bad)
mov
push
test
jb
repnz
xchg
pop
int3
and
and
mov
sar
pop
retf
fwait
movs
fiadd
mov
cmp
fstp
mov
pushf
hlt
callw
dec
inc
out
ret
imul
sub
inc
jmp
add
mov
sbb
push
rcl
sub
mov
mov
mov
pop
movs
les
or
fisub
inc
sbb
imul
stos
adc
xor
xchg
xor
aas
mov
mov
icebp
out
not
test
mov
in
nop
daa
jl
cmp
fnstenv
xchg
into
aas
push
jno
popa
dec
add
in
jg
sub
cli
adc
pusha
pushf
dec
or
inc
aaa
(bad)
mov
pop
cmps
mov
inc
cmp
and
ret
jno
jmp
mov
icebp
inc
push
push
xchg
ret
sub
adc
or
scas
shl
sbb
loop
into
mov
cmp
call
ja
xchg
cwde
mov
dec
jns
mov
dec
jmp
gs
sub
pop
cmp
call
stc
xchg
and
sub
xchg
dec
sar
loop
aas
adc
in
stos
mov
xor
adc
fadd
jb
xchg
stos
js
mov
je
add
add
cmc
push
pop
popa
push
dec
imul
pop
(bad)
mov
in
loop
jp
scas
xor
stos
xor
ss
outs
jno
fstp
mov
in
adc
pushf
mov
cmc
pop
push
enter
xchg
fstp
in
pop
out
stos
ret
mov
adc
(bad)
sbb
pop
(bad)
cs
outs
or
sbb
(bad)
and
cmps
fld
dec
aas
test
nop
adc
adc
push
fld
pop
cli
pop
sub
inc
pop
pop
push
sub
jmp
inc
(bad)
dec
push
dec
or
inc
jbe
push
and
mov
xor
push
adc
cmp
pop
(bad)
or
and
test
test
or
add
outs
add
push
sbb
jmp
dec
loopne
cmps
stos
pusha
mov
ds
fnstcw
mov
and
mov
in
fcmovnb
mov
jno
xor
sbb
bound
mov
out
mov
mov
jmp
test
(bad)
call
fisubr
add
and
push
jno
and
out
ds
jge
mov
pop
rol
mov
jg
or
dec
call
xchg
fsubrp
test
aam
cld
test
mov
lahf
mov
sar
outs
sti
loop
inc
fbstp
sahf
push
out
push
in
jecxz
dec
jmp
sub
sbb
iret
or
daa
mov
popa
and
(bad)
jmp
sub
jp
out
push
jl
jns
ds
push
cdq
push
cmp
or
xchg
movs
jmp
addr16
push
mov
pusha
xor
ficomp
cmp
fcom
jbe
iret
in
(bad)
pop
lods
jnp
mov
jge
push
or
sbb
test
ror
ret
out
mov
jnp
mov
mov
pop
mov
sub
call
sub
jg
sti
mov
cdq
mov
mov
retf
push
sub
movs
lea
xchg
loope
push
mov
dec
rcr
cmp
out
mov
mov
sbb
loop
sub
push
mov
or
jmp
mov
mov
inc
cwde
jmp
arpl
push
or
test
mov
mov
pop
in
pop
enter
mov
sbb
lock
sub
xor
aad
inc
jecxz
aaa
push
icebp
(bad)
mov
xor
sub
test
inc
or
mov
out
scas
aas
adc
into
adc
adc
fiadd
movs
int
imul
inc
mov
inc
fst
pop
scas
jnp
call
or
jmp
icebp
out
inc
aas
std
ss
ins
rcr
aas
ficom
call
movs
nop
or
out
pop
repnz
bound
pop
ud0
imul
cmps
xchg
test
(bad)
popf
aam
loopne
retf
push
cmp
rol
jg
jb
or
sub
jb
pop
xchg
rsqrtps
fs
mov
mov
push
sti
add
push
add
(bad)
int3
daa
mov
je
scas
mov
mov
pop
test
jp
popf
cmp
jle
pusha
std
dec
jns
dec
pop
inc
in
arpl
push
repnz
or
inc
into
jae
retf
in
je
xor
pop
iret
scas
and
mov
adc
hlt
test
loop
cmps
push
mov
xchg
pop
stos
sti
fcom
mov
mov
cmp
mov
xor
xor
mov
enter
or
dec
test
in
int3
out
mov
jne
sbb
mov
jns
icebp
test
nop
dec
or
sub
nop
mov
out
mov
repnz
push
cs
adc
and
xchg
add
cmp
sbb
sub
dec
adc
pusha
dec
(bad)
pop
push
sti
pop
rcl
mov
repz
retf
shl
push
push
dec
or
and
mov
retf
jmp
pusha
in
jae
into
or
dec
mov
iret
pop
xor
cmps
adc
cld
pushf
dec
stos
not
cdq
fldenv
inc
aad
add
jns
in
loope
int3
retf
hlt
jle
jmp
fucomi
cmp
push
fist
shl
pop
cld
arpl
iret
mov
in
mov
(bad)
xchg
pop
mov
leave
dec
mov
jecxz
mov
xchg
movs
data16
mov
clc
mov
retf
or
mov
mov
lods
push
cmps
bound
mov
enter
test
ror
cmp
aad
add
and
dec
adc
xor
xchg
jg
int
test
pop
push
loop
call
xor
out
pop
ror
ja
add
and
push
pop
(bad)
in
xchg
inc
dec
pusha
jbe
(bad)
out
and
sub
adc
mov
push
pop
or
mov
clc
scas
xor
enter
xchg
in
xchg
rol
stc
dec
sahf
aam
xchg
sbb
js
jge
sbb
imul
ret
ds
push
addr16
add
jno
push
xor
loope
outs
movs
sti
repz
adc
adc
pop
fidivr
out
retf
enter
pushf
pop
outs
cmp
jle
les
movs
outs
ds
sbb
cmp
jnp
addr16
in
lahf
xor
sbb
xchg
fdivr
in
shr
dec
sub
push
lods
and
fbstp
or
out
and
addr16
mov
mov
(bad)
pop
loop
test
add
dec
fwait
nop
jb
dec
idiv
pusha
into
adc
std
mov
dec
ret
test
repz
jno
push
out
cmp
inc
xchg
push
adc
nop
loope
popa
out
fnsave
pop
mov
dec
xchg
pop
jb
xchg
sbb
sbb
mov
push
cld
lods
cmp
jbe
repz
inc
jo
(bad)
dec
cwde
in
in
pusha
test
cmp
in
movs
push
pop
pop
adc
push
in
or
sub
iret
cwde
xchg
ss
add
inc
cdq
sub
retf
lods
sbb
inc
push
jae
dec
mov
or
in
xchg
jno
cmp
add
xchg
jne
fsub
ss
test
icebp
lahf
lods
jbe
ja
jne
addr16
cmps
cmps
dec
push
sbb
test
ins
inc
xor
xchg
mov
outs
dec
stc
push
ret
mov
inc
adc
clc
nop
cmp
xchg
mov
or
add
ret
xor
xchg
or
mov
das
mov
in
or
imul
xor
stos
add
inc
jge
popf
adc
ins
push
fisttp
(bad)
out
aad
mov
cmp
adc
call
and
fmulp
mov
fist
mov
cmp
sahf
stc
push
call
cmp
daa
mov
add
xor
call
sbb
push
mov
in
retf
or
pop
nop
inc
push
inc
sbb
lahf
repz
out
pop
popf
sub
cmps
pop
and
ror
add
add
cwde
inc
mov
(bad)
ret
sub
mov
es
out
xchg
xor
fs
sbb
or
mov
xchg
mov
pushf
call
test
mov
adc
in
sub
mov
addr16
inc
xchg
imul
iret
gs
cmp
out
fs
xchg
lods
test
mov
sub
cdq
and
lock
mov
and
dec
dec
loop
jecxz
mov
sub
fidivr
sub
mov
sti
jmp
stos
ss
xor
jns
lock
call
pop
(bad)
les
inc
dec
gs
inc
mov
push
lock
pop
repz
xchg
mov
call
sub
jbe
xchg
jne
call
bound
xor
and
lods
scas
fnstcw
push
adc
or
add
and
xor
repz
fistp
xchg
cli
add
sbb
jecxz
mov
(bad)
dec
bound
call
into
gs
pop
bound
jmp
lock
repnz
mov
jb
mov
pop
and
pop
push
test
cdq
mov
(bad)
call
jmp
sbb
loopne
cwde
xor
div
outs
ret
add
jmp
jle
(bad)
push
sbb
dec
int3
femms
mov
mov
xchg
and
outs
test
cmp
mov
arpl
(bad)
es
mov
xchg
push
stos
inc
sti
sbb
lods
popa
pop
cmc
add
popa
cmp
mov
sbb
push
mov
aad
stc
xor
(bad)
in
iret
inc
fcom
ret
cwde
nop
adc
add
in
add
nop
and
inc
enter
movs
jne
push
xchg
loop
mov
and
inc
cli
retf
into
fdivr
out
hlt
dec
jg
adc
mov
and
(bad)
push
or
sar
mov
movs
nop
sbb
cld
shl
cmp
push
cld
mov
jge
mov
cmc
pop
add
das
in
or
mov
sub
mov
(bad)
mov
jl
jl
sbb
xchg
jno
bound
and
imul
or
pusha
stc
dec
clc
mov
and
aaa
xor
mov
jge
or
lods
stos
mov
adc
scas
mul
lods
xchg
fadd
outs
and
push
adc
xchg
popa
es
adc
xlat
(bad)
push
dec
xlat
inc
retf
cmps
or
push
adc
aad
hlt
sub
add
adc
dec
or
ins
xor
test
mov
movs
test
bound
inc
int
fwait
mov
cwde
add
pop
cmp
push
gs
dec
aaa
push
aaa
fisub
adc
cmp
jle
mov
inc
rcl
xor
add
jae
sub
daa
aas
ficomp
lock
aaa
lea
rcr
dec
push
sti
xchg
jnp
pusha
dec
mov
repz
pushf
cmp
enter
sbb
aaa
pop
and
xor
mov
cli
sub
and
cmp
pusha
or
test
cwde
pop
xor
hlt
add
xor
cmp
test
daa
pop
imul
loop
xchg
fldl2t
rcl
jmp
mov
out
push
inc
scas
and
mov
stos
bound
mov
test
stos
retf
in
pop
jbe
dec
imul
dec
add
inc
out
inc
std
int3
or
frstor
add
in
sub
add
in
repnz
(bad)
cwde
inc
fadd
out
loope
inc
mov
cmp
sub
out
loopne
data16
ja
mov
stos
lea
push
imul
sub
sbb
inc
and
in
je
test
push
retf
fild
push
push
dec
and
mov
cwde
mov
mov
call
into
add
pushf
out
dec
xchg
ret
jge
xlat
push
aad
test
pop
push
sbb
ret
adc
lods
dec
mov
pop
mov
ja
xchg
bound
adc
cmp
lock
inc
inc
ret
int3
psrlw
pop
mov
neg
pop
xchg
inc
xchg
cli
xchg
(bad)
in
dec
cmps
lock
imul
mov
mov
repz
push
adc
rol
in
cwde
xchg
xchg
sub
aaa
jp
cmps
xchg
mov
or
popf
mov
add
cli
mov
pop
and
shr
jb
(bad)
sub
jmp
cli
and
les
inc
outs
and
mov
out
dec
rcl
xchg
out
aas
xchg
xor
stc
and
out
arpl
int3
xor
pop
repz
and
jg
movs
vmptrst
jle
icebp
sub
ror
sahf
dec
fistp
dec
(bad)
inc
add
adc
xchg
out
pusha
cld
test
test
mov
outs
dec
xchg
fidiv
push
adc
(bad)
je
mov
pop
xchg
sub
sti
(bad)
push
stos
out
mov
adc
xor
push
(bad)
push
arpl
push
add
(bad)
int
xor
jb
in
mov
mov
dec
add
mov
and
cmp
stc
mov
add
mov
add
add
cmps
es
stc
je
enter
sbb
cmp
jmp
adc
dec
ficom
add
adc
xor
icebp
shld
cmc
push
sbb
repnz
push
call
inc
mov
data16
popf
and
mov
outs
xor
xchg
add
and
cdq
dec
or
cmps
stc
mov
out
jne
xchg
jne
mov
shl
into
rcl
sahf
jmp
repnz
xor
call
mov
sbb
xor
pushf
adc
cmp
push
add
or
popf
jno
and
repz
pop
mov
pop
imul
dec
mov
jnp
pop
xchg
push
and
add
dec
in
add
je
stos
jmp
mov
data16
mov
js
iret
mov
push
addr16
lahf
mov
rcr
xchg
xor
cli
push
dec
ja
xor
jo
dec
stos
stos
mov
call
call
xchg
inc
push
and
or
punpcklwd
into
gs
out
(bad)
scas
lods
mov
cmc
inc
mov
arpl
xchg
add
xor
dec
xor
outs
aas
aad
pop
test
or
movs
pop
push
aas
ins
lds
repnz
and
imul
mov
ret
ret
pop
mov
sub
or
rcr
ds
xor
(bad)
dec
stos
mov
adc
adc
and
int3
test
push
jbe
mov
mov
sbb
out
sub
xchg
cwde
retf
ds
stc
jb
call
push
into
imul
sub
cs
ss
stc
inc
pop
xchg
fcom
dec
lods
xchg
mov
cmp
out
imul
mov
dec
sahf
mov
fldenv
sbb
dec
addr16
pushf
aas
test
pop
cmps
cmps
dec
std
rcl
shl
das
inc
pop
pop
add
in
inc
jmp
pop
loopne
xchg
dec
test
dec
out
(bad)
mov
xor
(bad)
mov
(bad)
sbb
out
xor
xchg
es
mov
enter
shl
gs
int
push
mov
in
jne
test
or
and
add
call
fwait
ins
pusha
mov
mov
xchg
push
mov
jno
sbb
ret
mov
cmps
sahf
sbb
jnp
pop
jbe
retf
mov
cmp
test
adc
leave
(bad)
mov
jmp
ja
daa
mov
cmp
out
and
add
je
or
and
xor
push
shl
adc
loop
out
out
in
mov
cmps
jp
jl
add
shl
mov
call
mov
(bad)
imul
cwde
xor
sti
test
cmps
lods
pop
push
pop
loope
push
jp
add
xlat
enter
inc
nop
jnp
cmps
scas
or
xchg
dec
sub
cwde
dec
mov
xor
aam
retf
pop
cmp
enter
inc
rcr
jle
inc
lea
fisttp
dec
jg
out
pop
adc
dec
xor
hlt
test
mov
dec
pop
(bad)
mov
mov
xor
pushf
dec
push
fwait
pop
push
pop
jnp
mov
push
mov
sub
out
sub
sub
mov
aad
and
movs
pop
jp
stc
adc
repnz
ss
or
jns
add
test
jl
pop
add
or
pop
ret
repz
jmp
sbb
sub
(bad)
shl
(bad)
pop
cmp
and
add
mov
stc
ins
push
ins
aam
aaa
js
jmp
retf
jp
mov
push
repnz
(bad)
aad
dec
fcomp
dec
gs
cdq
mov
fs
xchg
xchg
add
nop
rcr
hlt
in
out
and
int3
or
pop
stc
dec
push
imul
mov
imul
add
aaa
lock
cmc
push
xor
fcmove
retf
add
push
(bad)
out
(bad)
ficom
call
lds
inc
in
scas
sub
push
mov
hlt
xor
and
arpl
push
and
push
jl
retf
jg
imul
add
push
int
push
mov
repnz
and
ror
call
xlat
jno
mov
or
cld
ficomp
(bad)
mov
push
leave
inc
xchg
xchg
push
loope
xor
mov
inc
jecxz
in
lahf
icebp
push
cmc
cld
into
adc
fwait
repz
lods
and
lahf
mov
sbb
xchg
imul
pop
xor
or
cmp
jno
add
jp
outs
pop
ins
fdiv
pop
mov
scas
mov
xor
sub
pop
xchg
sbb
arpl
mov
inc
scas
enter
sub
push
mov
clc
inc
enter
cmp
iret
cli
adc
jmp
nop
cwde
cld
(bad)
leave
imul
out
jecxz
push
fild
loope
and
shr
dec
imul
push
mov
sub
lock
inc
cmp
sar
movs
add
loop
xchg
lods
sub
lods
cmp
mov
fsubr
shr
add
cmp
and
xchg
pop
xchg
or
cmp
in
mov
adc
retf
retf
sbb
inc
lods
in
je
in
dec
repnz
sub
pop
dec
ds
fsub
mov
pop
outs
jb
push
aas
dec
addr16
jge
dec
dec
out
sub
dec
fistp
mov
cmp
inc
rcl
mov
jne
jge
(bad)
addr16
call
rcl
push
aad
add
pushf
in
mul
cmp
mov
lods
cmp
in
retf
sar
in
sbb
inc
pop
add
sar
(bad)
aam
aam
cmps
fwait
and
bound
in
out
mov
clc
int
arpl
jg
and
and
jp
pop
es
jg
adc
out
js
push
ins
fild
inc
cmp
inc
cwde
call
das
(bad)
in
or
xlat
jp
xchg
push
es
popf
outs
call
mov
sbb
push
outs
pop
jbe
ja
xor
mov
ins
das
sub
mov
test
jne
popa
add
push
aas
cmp
pop
rol
sbb
dec
nop
xchg
cmps
neg
push
xchg
(bad)
cmc
jle
sbb
and
stos
cmp
leave
cwde
cmp
cdq
push
pop
adc
daa
retf
inc
mov
pop
fcos
cmp
arpl
aas
enter
push
xchg
pop
mov
shl
mov
sub
jb
out
xchg
add
iret
adc
xchg
add
jg
and
hlt
and
inc
aad
mov
iret
ins
sbb
(bad)
les
pop
and
scas
add
push
dec
and
cs
jae
push
retf
int
push
pop
out
push
fidiv
jo
test
dec
sub
in
scas
and
cmp
push
cmovp
fwait
sub
pop
repz
loopne
mov
cli
lock
frstor
loop
loopne
cmc
ficomp
xor
xchg
mov
dec
stos
stc
push
in
jbe
es
ja
call
cwde
inc
sbb
pop
and
mov
dec
sti
scas
pop
push
sti
movs
sar
adc
jnp
inc
daa
sub
std
outs
aad
movs
dec
lahf
ret
mov
movs
dec
loope
arpl
stos
(bad)
shr
xchg
cs
(bad)
and
dec
stos
loop
push
pop
pop
xchg
nop
cmps
js
sbb
xor
sbb
(bad)
sub
pop
repz
aaa
xor
daa
lock
inc
sahf
sbb
lock
arpl
mov
stc
mov
addr16
fmul
dec
mov
or
xor
xchg
ud2
mov
dec
outs
adc
loope
or
inc
mov
pop
pop
pusha
xchg
pop
call
repnz
mov
out
xor
aas
jne
add
jnp
call
int3
cmps
pushf
dec
retf
jno
sti
add
sub
dec
shl
cmp
cmp
mov
and
jecxz
fld
pop
sbb
xchg
inc
xchg
cmc
repnz
pop
imul
xchg
inc
mov
xor
inc
push
outs
cmp
sub
inc
inc
mov
mov
(bad)
pop
xor
mov
jae
iret
jmp
add
or
in
jecxz
(bad)
or
mov
pop
shl
ins
push
push
dec
add
sub
mov
(bad)
int
call
in
imul
sub
ss
xor
stos
dec
cmps
sahf
ror
dec
xchg
ret
xor
add
sar
lea
icebp
cld
in
mov
lds
push
movs
sti
mov
nop
fst
shr
inc
and
mov
jb
dec
(bad)
repz
mov
mov
enter
mov
xor
in
mov
inc
bound
sbb
stc
cmc
adc
loope
in
inc
neg
std
xlat
and
in
pusha
inc
dec
call
scas
int
mov
imul
fcomp
pop
call
xor
push
lods
dec
ror
inc
ror
xchg
nop
mov
or
(bad)
fucomip
aaa
inc
push
iret
ins
rol
jp
dec
jno
mov
out
xor
sbb
call
sub
jecxz
data16
(bad)
pop
icebp
sbb
scas
test
cmp
daa
inc
pushf
retf
push
fisttp
mov
xchg
xlat
and
rcr
sub
repz
hlt
or
(bad)
scas
(bad)
fmul
dec
retf
loope
dec
xchg
cwde
pop
in
jl
pop
out
inc
inc
adc
add
cmp
cmp
inc
push
mov
mov
leave
aaa
lods
mov
xchg
or
daa
lods
sbb
inc
mov
dec
maxps
jmp
int3
cmp
jge
mov
cmp
mov
lock
sub
gs
sub
rol
pop
in
inc
xor
sbb
adc
data16
inc
mov
inc
shl
xor
sar
jmp
or
xchg
shl
cvttps2pi
cmp
jmp
or
and
outs
and
xor
mov
ins
sub
int3
jg
sbb
fidivr
ror
fdiv
cmc
cmp
shl
movs
mov
call
push
dec
pop
or
and
and
jno
aam
sbb
out
(bad)
cli
lea
scas
add
or
push
outs
cmc
jb
pop
push
add
loopne
leave
bound
icebp
sub
leave
ds
sbb
push
lods
cmp
sub
mov
loop
xor
cmp
retf
and
clc
sahf
jno
mov
jae
and
into
psubb
shl
outs
movs
jbe
mov
sbb
scas
fdivr
xor
shr
(bad)
shl
xchg
test
mov
push
cmp
outs
repnz
mov
pop
mov
sbb
xchg
outs
js
push
jmp
div
xor
sbb
and
ins
idiv
xor
and
or
add
loope
test
call
sub
ret
sbb
pop
es
enter
ins
hlt
test
test
mov
retf
lahf
mov
iret
inc
jno
shl
cld
(bad)
xchg
push
xchg
shr
dec
mov
and
in
in
sub
jmp
arpl
mov
repz
scas
sub
nop
int3
sar
jns
mov
sbb
and
pop
cmp
sbb
mov
or
cmp
xchg
cmps
dec
or
inc
sub
dec
xor
xor
rcl
mov
data16
cmp
cwde
aas
xor
push
xchg
aam
sahf
xchg
lock
call
aam
sahf
(bad)
(bad)
(bad)
mov
loopne
mov
xlat
nop
jo
sub
test
adc
cmc
add
inc
jp
out
jmp
jns
mov
sbb
pop
adc
sti
out
ins
mov
sbb
mov
mov
test
out
mov
sub
gs
mov
jge
mov
outs
daa
into
icebp
(bad)
cmp
dec
lahf
adc
fldenv
fcomp
lock
repnz
inc
sbb
inc
arpl
lahf
mov
sbb
mov
sub
movs
sbb
push
ins
xor
sbb
push
add
ret
ins
sbb
dec
dec
or
data16
(bad)
in
fisub
push
or
aam
jo
xchg
inc
inc
adc
pop
pop
cdq
add
ds
sub
clc
dec
adc
dec
xor
retf
in
in
or
icebp
jno
inc
mov
mov
sub
jmp
jbe
add
cmp
je
aad
addr16
add
out
mov
or
fsubp
test
mov
sub
or
dec
push
dec
aad
pop
pop
sar
pop
jns
(bad)
lock
fbld
dec
xchg
(bad)
adc
push
jge
cld
add
stc
dec
and
mov
jg
cmovo
jnp
mov
aam
nop
jno
push
xlat
jmp
pop
lock
in
dec
imul
dec
push
je
dec
(bad)
fistp
xchg
lods
in
mov
dec
fld
rcr
add
dec
ficomp
sub
jns
xor
or
push
sub
vpsllw
adc
stc
sbb
adc
push
(bad)
stos
mov
jnp
sti
push
jae
outs
mov
inc
mov
dec
lods
jmp
lock
dec
lds
mov
mov
scas
cmps
sbb
es
cdq
xor
sbb
cmp
cwde
fstp
fs
test
out
sub
push
xchg
ins
mov
mov
into
sti
mov
loop
push
cdq
popf
and
lock
adc
mov
sar
mov
mov
pop
sbb
ss
scas
popf
dec
movs
jge
outs
scas
cmp
add
movs
push
push
mov
mov
bound
cwde
and
outs
test
jns
pop
nop
add
mov
shl
dec
inc
pop
je
mov
hlt
cmp
mov
sub
int3
test
sbb
cmc
add
jb
and
out
jb
fnstcw
in
mov
push
movs
cdq
scas
fsub
and
xor
push
daa
sbb
mov
inc
mov
lea
xchg
jmp
aaa
xor
xchg
jo
jg
push
div
mov
pop
sub
les
out
jl
cmp
jp
push
ret
cmp
rol
push
in
pop
cmp
out
std
imul
jbe
test
aad
shr
bound
jns
or
jae
pop
cmp
cdq
retf
(bad)
pop
push
call
in
xchg
and
stos
movs
push
rcr
aas
and
inc
mov
test
fisub
test
pop
xlat
xor
mov
scas
xchg
loope
sbb
ins
sub
xchg
aam
jbe
pop
jbe
js
pusha
jmp
cdq
mov
outs
mov
pop
or
xchg
adc
xchg
push
in
loope
(bad)
fisttp
mov
add
xor
jmp
movs
pop
dec
cdq
hlt
cs
xor
inc
mov
nop
pop
sbb
(bad)
test
iret
push
or
test
fs
sbb
test
clc
(bad)
dec
jmp
xlat
pop
adc
jbe
jnp
jmp
dec
not
iret
mov
test
aas
pop
pop
repz
dec
or
adc
mov
ss
aam
mov
mov
out
out
lods
push
inc
dec
into
inc
test
inc
pop
mov
leave
jle
push
gs
out
std
outs
mov
cli
imul
sti
sbb
movs
xchg
pop
dec
shl
scas
iret
inc
push
fwait
and
or
shl
div
add
repnz
sbb
das
xchg
retf
loopne
int3
mov
cmp
(bad)
fild
dec
mov
jecxz
mov
mov
iret
fsub
push
out
jnp
sbb
aam
and
push
mov
ins
call
sti
sbb
cmp
and
mov
and
dec
into
push
sub
cdq
add
test
adc
mov
outs
push
push
shl
lahf
mov
loopne
mov
push
int3
inc
cli
push
data16
and
mov
call
out
loopne
fisubr
dec
iret
pop
mov
scas
out
or
push
ss
retf
mul
mov
gs
test
push
leave
push
iret
scas
bound
fdiv
sahf
or
cmp
mov
cmp
sub
mov
jno
dec
jp
iret
mov
out
adc
dec
bound
bound
cmps
jo
push
int3
and
shl
mov
lods
cs
xchg
repnz
sti
in
xchg
adc
xchg
mov
add
retf
lahf
mov
aas
(bad)
(bad)
sbb
mov
mov
cmc
mov
call
mov
cmp
popa
enter
aaa
mov
mov
out
and
(bad)
shl
push
pop
into
int3
adc
cmc
mov
sbb
xor
icebp
imul
add
push
stos
xchg
mov
cmp
sahf
add
sub
adc
fadd
and
mov
mov
xor
push
mov
je
sbb
inc
cli
xor
pop
mov
ins
int
jae
and
push
mov
fadd
and
lods
xor
dec
enter
jle
and
cdq
jl
imul
and
push
mov
lods
jg
mov
cwde
and
add
cmps
rcl
jmp
mov
push
cwde
imul
pop
lods
push
mov
mov
or
lea
sbb
or
movs
and
stos
and
sti
push
mov
jbe
pop
push
call
imul
sub
ret
sbb
jno
jecxz
aas
xor
sub
push
mov
fucomi
xlat
inc
mov
fnsave
sbb
inc
pushf
add
daa
inc
outs
add
mov
data16
rcr
(bad)
xchg
push
jle
clc
inc
pop
js
pop
pop
pop
retf
inc
mov
inc
pop
pop
xchg
test
outs
(bad)
(bad)
movs
fistp
xchg
cmp
mov
mov
cmps
jb
adc
cmp
cmp
mov
scas
add
jns
xchg
dec
xchg
mov
and
(bad)
jmp
into
scas
jl
cld
add
(bad)
pop
push
cs
aaa
push
leave
xlat
sub
fldcw
shl
scas
mov
push
lock
cdq
je
dec
xor
in
popf
mov
adc
out
ret
(bad)
ret
jge
sbb
pop
sbb
stos
push
dec
mov
shl
dec
sub
adc
out
inc
and
xor
sbb
pop
pusha
push
cwde
cmp
xor
adc
mov
loope
shr
mov
xchg
icebp
jge
nop
repnz
fwait
sub
inc
cmps
fdiv
cmc
pop
or
and
jmp
out
les
push
cdq
or
ror
push
int3
sbb
mov
pop
sub
daa
jle
sti
xor
mov
ja
mov
lds
lods
push
mov
outs
sub
outs
push
pop
mov
adc
xchg
mov
shl
pop
rcr
add
inc
in
scas
ret
mov
cdq
xor
fisub
mov
or
loop
jecxz
adc
nop
mov
ins
sbb
push
cmp
jge
cmp
add
sahf
ret
cdq
cmp
inc
mov
and
cmp
dec
mov
ja
mov
ss
dec
pop
sub
arpl
ret
mov
xchg
cmp
mov
div
pop
arpl
in
jp
int
mov
gs
cdq
ja
pop
jmp
mov
pushf
in
dec
inc
mov
jae
jb
ror
cli
stos
fisubr
inc
pop
cmp
mov
inc
fwait
push
mov
jbe
lds
sti
xor
dec
xchg
pop
in
adc
push
sbb
mov
sub
adc
icebp
mov
stc
sbb
les
sbb
jg
std
imul
dec
aaa
xor
popf
xor
pop
mov
test
in
arpl
jb
out
pushf
(bad)
push
xor
pop
push
xchg
int3
mov
xlat
cmc
jg
pop
das
mov
in
add
jmp
rol
adc
enter
popf
out
dec
out
jge
dec
les
inc
or
addr16
outs
ds
and
(bad)
test
call
jle
push
inc
pop
jae
ss
fist
shl
int3
push
gs
or
ins
in
jg
aaa
stos
xchg
lahf
jle
out
popa
retf
dec
(bad)
loope
and
fst
fwait
mov
sbb
mul
jo
mov
sbb
or
dec
pusha
jmp
leave
fstp
jbe
push
or
push
fild
rol
xor
out
xchg
add
out
lods
adc
push
dec
push
sub
dec
and
loop
and
pop
paddusw
sub
jne
aaa
(bad)
dec
xor
add
xor
xchg
lea
jl
enter
or
dec
not
movs
dec
ds
push
iret
call
in
dec
fiadd
mov
cli
lods
dec
xchg
jle
xor
outs
dec
jg
fwait
mov
ret
mov
sub
adc
mov
pop
sub
push
jg
stos
mov
daa
push
call
add
popf
push
sub
jmp
mov
(bad)
in
adc
xchg
adc
or
stc
mov
push
rol
jp
push
nop
in
sahf
call
(bad)
cmp
pop
or
push
ficomp
dec
fsubp
and
mov
fsub
jp
in
cmp
cmps
adc
ins
cmp
dec
jbe
and
mov
into
loop
imul
(bad)
shr
cmp
dec
retf
mov
inc
push
pop
es
mov
sbb
add
cmp
jecxz
(bad)
sti
dec
jbe
outs
cwde
js
cdq
fisttp
dec
aas
dec
jecxz
xchg
scas
cdq
mov
xchg
clc
ret
cmp
ja
call
in
mov
stos
addr16
inc
or
lahf
mov
mov
out
push
mov
and
and
cwde
ret
std
rcr
add
aaa
out
pushf
std
jae
push
imul
pushw
push
(bad)
sti
jecxz
cwde
and
sub
js
das
or
mov
lock
and
mov
sub
push
mov
icebp
nop
ja
jb
mov
sub
nop
test
add
mov
(bad)
jmp
xchg
shr
mov
das
in
push
inc
push
mov
dec
adc
(bad)
cld
inc
ins
aam
xchg
in
push
test
xchg
outs
popf
inc
lds
popf
imul
pop
jbe
sub
jp
mov
ds
and
out
mov
or
mov
jp
out
imul
sub
mov
mov
add
js
inc
xor
add
out
xchg
sbb
xor
mov
mov
fsub
sbb
outs
mov
ror
test
mov
or
cli
mul
int3
pop
rcl
or
pop
push
mov
or
mov
inc
sbb
mov
add
jmp
ret
rcpps
sbb
sbb
fsub
out
and
push
push
cdq
ret
mov
cmp
sbb
imul
es
jns
pop
jge
fst
inc
xor
loopne
and
rcl
(bad)
mov
or
in
outs
mov
sahf
dec
adc
jecxz
mov
ss
shl
iret
sub
push
jmp
pop
mov
pop
mov
rcr
mov
or
jb
repnz
sbb
lahf
and
push
pop
pop
je
mov
mov
and
pop
jne
jbe
jns
outs
js
jg
loop
dec
add
arpl
pop
popa
(bad)
mov
in
in
imul
leave
daa
imul
adc
call
test
dec
adc
jns
aad
fadd
outs
cli
sbb
loope
clc
pop
shl
mov
je
stos
out
sub
icebp
jmp
call
(bad)
cmp
(bad)
out
xor
xchg
rcl
mov
popa
(bad)
js
dec
xchg
cmp
inc
mov
xchg
mov
jns
add
jle
pop
mov
stos
mov
mov
repz
dec
adc
push
ror
rcl
fwait
(bad)
adc
xchg
jnp
movs
adc
mov
ins
(bad)
in
xor
cmc
xchg
retf
sbb
add
fnstsw
jecxz
test
sbb
cli
sub
rcl
mov
aaa
mov
mov
mov
adc
js
push
repz
test
dec
es
ret
add
cmp
adc
or
test
cs
cmp
test
mov
nop
sbb
dec
mov
cmps
aas
fidiv
mov
mov
fs
fucomip
jo
iret
repnz
mov
mov
arpl
inc
jns
dec
ja
icebp
addr16
add
or
mov
jg
call
nop
(bad)
add
inc
ja
jno
sub
and
xchg
pop
ficom
fmul
imul
jmp
and
push
addr16
(bad)
stos
aas
test
lea
popf
push
xchg
jne
jbe
cmc
fcomp
outs
mov
pop
out
outs
mov
inc
mov
inc
or
xor
ret
cmp
sub
xor
push
repnz
mov
ja
int3
ds
sbb
add
mov
fmul
cmp
mov
cs
sbb
lahf
dec
sti
add
nop
jb
inc
popf
scas
mov
cmp
pop
or
call
or
cdq
pop
mov
mov
xor
in
imul
scas
aaa
pop
mov
or
test
fist
imul
sbb
ud1
push
ror
fs
mov
test
leave
adc
cmps
cmps
fldenv
into
fdivr
adc
js
add
aam
imul
je
push
jo
cdq
lea
(bad)
lahf
or
add
jne
not
test
ins
inc
daa
dec
(bad)
mov
push
dec
dec
leave
cdq
push
sbb
mov
(bad)
jg
mov
mov
sub
cmc
cmp
mov
xor
pop
fnstsw
jmp
mov
pop
inc
dec
repz
sahf
mov
pusha
sbb
or
test
adc
push
pop
sbb
sbb
cld
mov
es
mov
push
cmp
lahf
jle
(bad)
ins
pop
xchg
mov
cmps
in
add
xchg
in
leave
sbb
mov
mov
cmp
lock
cwde
push
in
mov
pop
lahf
gs
popf
hlt
gs
and
outs
out
inc
sub
stos
adc
int
lods
or
out
jne
push
fimul
jle
push
xlat
push
loop
cli
xchg
pop
dec
in
outs
pop
outs
das
retf
cmc
xchg
cdq
cmp
cmp
addr16
cdq
sbb
pop
(bad)
adc
xchg
mov
sbb
ret
jne
popa
lock
stos
stc
push
outs
(bad)
scas
fsubr
xlat
loopne
mov
sub
jp
mov
retf
out
ins
xor
adc
in
mov
(bad)
nop
mov
jl
not
in
or
dec
or
int
call
ins
or
shl
loopne
scas
bswap
enter
inc
fwait
add
ja
adc
repnz
sbb
or
xchg
jg
aad
sbb
mov
out
shr
pushf
or
jge
out
push
jecxz
test
pop
loop
sbb
ds
lods
xchg
inc
scas
pop
push
add
scas
xor
call
mov
pop
mov
cmp
scas
scas
pop
push
mov
(bad)
fisttp
adc
or
out
pop
ins
pop
adc
out
pushf
call
pop
mov
std
iret
push
cmps
or
push
(bad)
stc
mov
inc
mov
icebp
stos
mov
retf
mov
xchg
xor
jge
in
fcom
pop
mov
or
sbb
mov
and
fs
pop
inc
mov
sub
jge
jno
jne
cmp
jp
mov
pop
dec
test
sbb
xchg
or
imul
(bad)
repnz
ret
test
aaa
xchg
mov
dec
lods
fidivr
call
cwde
dec
adc
mov
jle
daa
inc
push
sub
push
jae
inc
push
test
mov
mov
cmp
dec
mov
mov
and
mov
sub
repz
push
scas
mov
or
call
push
mov
out
inc
xchg
lea
test
lea
xor
movs
aam
dec
loop
mov
mov
int
jmp
sub
and
xchg
in
jge
mov
push
ins
ins
add
pop
rol
leave
icebp
fcmove
sbb
pop
aaa
add
lahf
push
movs
addr16
iret
push
cdq
add
out
or
sbb
aaa
fld
popf
mov
mov
jmp
movs
int
push
icebp
aad
or
xor
jae
cmp
jge
xor
cmp
into
cmps
gs
out
adc
mov
popa
repz
popf
jmp
rcr
and
dec
cld
jnp
push
call
mov
pop
cld
dec
xchg
adc
and
pop
mov
stc
rcr
aam
sub
mov
mov
test
repz
jecxz
cdq
les
mov
clc
jbe
sahf
and
xchg
sti
xor
pop
scas
popf
xchg
dec
xor
add
adc
mov
lods
mov
push
loope
xor
frstor
rcl
loope
jp
retf
cmps
adc
mov
and
inc
mov
add
jns
(bad)
or
inc
data16
call
sub
mov
sahf
frstor
jnp
into
ins
cmc
dec
push
sahf
inc
add
pop
lods
ret
ret
das
popa
test
fs
scas
jmp
lock
jns
bound
lahf
not
out
arpl
xchg
sub
mov
icebp
mov
enter
jecxz
call
and
cmp
(bad)
jecxz
sub
cld
push
inc
push
std
cmp
mov
inc
sub
adc
or
cmp
inc
pop
dec
and
adc
stc
ja
jl
scas
clc
cwde
jecxz
push
pop
cmp
push
out
xor
cdq
stos
sub
stos
dec
mov
and
sub
inc
push
dec
in
push
pusha
out
jmp
neg
or
or
(bad)
in
xor
lock
nop
pop
push
dec
and
inc
out
xchg
xor
cmc
outs
add
mov
inc
pop
outs
lock
mov
push
ret
sub
sbb
ds
jmp
pushf
cmc
adc
adc
rcr
loopne
fld
dec
pop
cmp
jnp
movs
das
je
test
push
es
push
rol
retf
sahf
(bad)
jnp
cmp
rol
push
pop
cmp
mov
mov
dec
inc
jmp
scas
aam
lahf
mov
out
loope
(bad)
call
push
js
add
movs
sahf
xor
jle
dec
leave
pop
fdivr
jb
enter
stos
push
mov
push
scas
je
cmp
mov
sbb
mov
(bad)
sub
and
(bad)
js
mov
jo
xchg
sub
adc
and
ja
jno
mov
inc
mov
sbb
push
icebp
inc
stos
outs
inc
jg
in
leave
sub
pop
div
scas
adc
dec
mov
mov
push
imul
inc
jg
bound
jns
ins
outs
add
jmp
jb
test
icebp
fnstcw
sub
xchg
push
xor
xchg
jnp
or
cli
pusha
bnd
popf
sub
mov
ret
retf
pop
fsubr
sub
sub
add
xor
add
cs
sub
or
push
push
(bad)
pop
mov
mov
bound
fimul
cwde
inc
xchg
js
adc
data16
aas
push
sbb
mov
jb
pusha
cdq
lock
push
inc
shl
adc
jo
jecxz
dec
out
inc
mov
jo
xor
add
or
xor
mov
adc
mov
loope
fstp
sbb
adc
shl
sub
das
fisubr
or
cmp
mov
mov
mov
addr16
sub
mov
in
cmp
in
call
dec
(bad)
(bad)
pusha
or
and
int
jno
xchg
xor
adc
int
(bad)
enter
out
arpl
lds
adc
fcmove
sub
loopne
jne
ins
ret
and
lock
in
retf
dec
push
fs
pop
outs
mov
ss
and
or
mov
mov
clc
xchg
das
ins
cli
inc
jmp
jecxz
jne
dec
add
dec
pop
sbb
outs
aad
or
and
outs
je
sbb
test
loope
xor
lock
call
ja
push
mov
hlt
scas
mov
cld
or
inc
test
dec
daa
mov
push
or
sub
fmul
lahf
leave
xlat
retf
and
jmp
outs
imul
js
scas
jmp
cmp
daa
fs
lahf
test
pop
dec
xor
into
xchg
mov
mov
shl
pop
cld
bound
xchg
xor
(bad)
call
xchg
push
in
movs
jmp
lock
mov
fild
mov
pause
jb
or
pop
xchg
xchg
mov
cmp
pop
aas
out
call
or
pop
cmps
shl
(bad)
movs
out
js
pop
xchg
dec
cmp
movs
dec
mov
xchg
inc
ins
stc
inc
cmps
push
jo
mov
(bad)
inc
adc
es
and
pop
movs
into
mov
stos
das
and
gs
dec
inc
or
cmp
test
inc
clc
jl
lods
and
scas
and
dec
mov
mov
xchg
or
aam
or
push
sti
sbb
js
dec
add
popa
xchg
jge
bound
or
arpl
pop
jb
cmp
lods
sbb
call
stos
or
jae
(bad)
push
and
lea
and
in
adc
cmp
inc
aas
sbb
mov
enter
loopne
mov
and
cld
(bad)
shr
(bad)
out
(bad)
jg
lahf
arpl
jg
out
iret
xchg
xchg
dec
loope
out
adc
test
adc
dec
dec
cli
mov
xlat
jnp
push
mov
sahf
push
ins
in
call
iret
ds
pop
mov
push
cmp
pushf
arpl
pop
popa
inc
jne
sbb
arpl
(bad)
jns
jae
(bad)
adc
les
push
sbb
cmp
idiv
inc
out
pop
loopne
add
add
aad
mov
fstp
ret
jne
movs
stos
gs
loopne
aad
adc
xchg
sar
mov
adc
out
mov
js
sbb
fcmovb
mov
fdiv
mov
xor
int
or
std
loopne
cdq
mov
jnp
aas
lds
leave
mov
je
icebp
movs
jmp
sub
test
fistp
inc
stc
in
adc
adc
mov
cmp
sub
push
mov
or
call
push
test
shl
outs
cmps
push
and
loop
mov
popf
ret
stos
push
icebp
and
inc
xchg
sbb
xchg
test
out
nop
sbb
fdiv
jo
jno
cmp
push
loopne
inc
loopne
cmps
pop
pop
sbb
std
xchg
xor
rol
inc
jp
jmp
sub
mov
mov
call
or
dec
xchg
cmps
frstor
retf
scas
fst
sbb
out
xchg
xchg
add
mov
dec
pop
mov
pop
inc
clc
int
imul
sahf
dec
lock
js
jno
mov
iret
test
push
mov
xchg
lods
adc
je
push
jmp
push
jg
call
stos
les
cmp
call
into
loope
(bad)
pop
pop
pop
sub
retf
pop
cs
jge
iret
loopne
data16
mov
into
ror
and
cdq
mov
and
pop
cmps
mov
ja
das
rcl
cld
adc
dec
mov
sbb
stos
push
ret
mov
add
mov
mov
mov
mov
jno
imul
mov
call
cs
retf
iret
dec
lods
jg
jmp
cmp
push
mov
js
int
cdq
cmp
gs
clc
jmp
es
lahf
(bad)
out
nop
stc
hlt
icebp
jne
leavew
push
cmp
outs
data16
shr
mov
sbb
sar
outs
mov
push
popf
and
in
mov
dec
mov
cmp
sbb
in
xchg
xchg
or
das
pop
and
dec
lea
(bad)
mov
jmp
arpl
mov
jge
fwait
das
push
add
cmp
jecxz
mov
dec
jmp
push
mov
push
inc
inc
mov
push
jmp
aam
ret
push
push
call
cmps
cld
adc
into
dec
xchg
std
mov
add
adc
nop
(bad)
nop
adc
into
push
mov
retf
cli
and
mov
div
lahf
or
test
sub
push
bound
mov
jg
add
out
mov
sbb
add
xchg
fiadd
int3
stc
mov
inc
or
pop
fcom
loopne
(bad)
push
aaa
push
(bad)
fimul
xchg
push
loop
and
xchg
lods
stc
add
sub
push
pop
pop
mov
enter
cmp
jbe
and
inc
lds
jg
pop
call
cmc
add
jle
loope
cmp
test
(bad)
retf
sbb
fmul
fs
repnz
mov
mov
jb
ss
and
jnp
das
and
mov
pop
adc
arpl
xchg
mov
out
jg
(bad)
mov
mov
cld
pop
or
xchg
loopne
dec
ror
and
jp
jno
xchg
xor
jne
ins
lods
test
sub
retf
dec
pop
or
cld
or
das
cmc
sbb
call
loopne
aaa
or
jmp
jnp
pop
push
or
fstp
ret
and
mov
lahf
pop
push
movs
ds
test
push
dec
cmp
mov
cwde
fcom
into
mov
rcr
sar
dec
gs
jle
jge
jmp
pop
push
cmp
ins
mov
pop
jne
sahf
mov
popf
xchg
sbb
sbb
and
fcmovu
push
and
retf
aad
and
jo
mov
retf
push
ins
out
pop
mov
jno
push
int
(bad)
dec
xchg
cmp
dec
inc
lods
push
sub
mov
div
xlat
jns
sub
mov
repz
or
xor
mov
arpl
xor
or
push
cmps
jecxz
cmc
xor
or
dec
gs
daa
xlat
jnp
sub
pop
jno
cmp
sub
xor
push
adc
push
in
sbb
inc
sub
jae
rol
cld
jnp
lock
inc
shl
ret
or
shl
mov
push
pop
cmps
dec
pop
or
xchg
mov
lahf
add
push
cmp
mov
xor
out
jnp
out
clc
icebp
aas
sub
mov
(bad)
sti
(bad)
jae
or
or
mov
mov
or
inc
jne
sub
fs
xchg
fwait
sub
pop
cmp
neg
jp
iret
mov
and
iret
out
cmp
and
rcr
dec
push
cmp
cld
add
and
je
inc
(bad)
xor
inc
mov
push
imul
bound
jae
ja
push
xchg
arpl
out
push
mov
in
int3
retf
fisubr
rcr
jle
bound
xchg
mov
cwde
jecxz
fwait
xbegin
stos
daa
repnz
adc
ret
mov
shl
push
add
shr
jle
xchg
popf
outs
and
aas
mov
ret
add
hlt
add
cwde
jbe
test
loop
adc
xchg
bound
add
mov
mov
pop
mov
sub
jae
adc
dec
xchg
pop
cmp
adc
cmp
sub
(bad)
sbb
out
xchg
mov
sbb
leave
push
adc
xchg
fmul
push
dec
stos
push
scas
in
mov
fimul
clc
mov
scas
adc
test
int
enter
adc
(bad)
or
pop
mov
es
mov
out
or
shr
sub
sub
jmp
or
aam
xchg
mov
pop
push
das
add
add
or
pop
test
icebp
repnz
or
jmp
repnz
push
ss
jecxz
shl
push
mov
iret
and
xor
pushf
movs
sti
loope
mov
and
mov
in
imul
test
js
jbe
mov
dec
stos
std
cmp
adc
xchg
mov
mov
push
call
pop
and
jae
jo
adc
gs
sbb
cld
jno
mov
xor
test
nop
test
jbe
idiv
ins
(bad)
mov
xor
cmp
pushf
xor
dec
nop
pop
or
xchg
addr16
xor
arpl
add
jne
xor
cs
or
std
pop
sbb
jecxz
repnz
pop
fs
push
mov
in
adc
ds
(bad)
mov
dec
sbb
fwait
data16
pushf
cli
mov
cmps
into
add
loope
sub
shr
faddp
scas
mov
cmp
mov
cmps
jp
mov
std
mov
jb
mov
inc
mov
mov
adc
ja
sti
movs
jmp
out
cmp
out
cmps
jl
push
les
push
add
xor
cmp
pop
enter
pop
stc
rcl
adc
pop
pop
sub
push
sti
ficom
div
pop
jmp
mov
dec
(bad)
pop
xchg
jmp
dec
pop
push
mov
shl
cli
hlt
mov
fbstp
or
and
push
clc
in
jae
add
xor
xchg
in
and
sbb
pop
mov
push
or
and
dec
mov
shl
into
sub
daa
ins
jmp
pop
sbb
jne
lahf
jae
xchg
mov
add
dec
xor
loope
push
adc
jmp
ja
(bad)
jns
dec
ins
cld
repz
pop
xlat
add
lods
int
xor
or
pushf
das
fs
mul
pop
mov
and
sub
out
jbe
lea
sbb
add
fsub
movs
or
(bad)
mov
jmp
lahf
mov
dec
or
ret
sub
and
and
push
xchg
loope
stos
adc
shl
jns
dec
(bad)
shl
xchg
ds
cdq
lds
leave
(bad)
out
jne
dec
jp
pop
inc
dec
call
int
int
aam
or
push
ds
fst
push
push
cmp
lea
(bad)
jmp
jp
xor
push
mov
dec
jne
sub
or
mov
push
inc
jp
mov
cld
aas
xchg
mov
shr
mov
and
mov
sub
in
iret
add
pushf
or
mov
sbb
dec
xlat
xor
pop
push
test
ret
repnz
or
pushw
icebp
push
lahf
cmps
cmp
push
int
popf
dec
js
jo
lds
ror
xchg
aam
lea
or
xchg
adc
and
jnp
test
mov
shl
and
repz
adc
dec
push
jo
inc
sbb
pop
inc
cmp
pop
push
pop
jl
cmps
test
xor
je
(bad)
lds
mov
dec
jecxz
out
mov
push
ds
add
cmp
mov
pop
and
in
pop
js
fcomp
xor
test
aam
in
cli
cmps
stos
xor
repnz
jl
out
cmp
push
lea
imul
mov
aas
inc
rcr
stos
repz
cmp
faddp
pop
in
pushf
mov
cmps
push
jbe
es
add
test
repnz
jns
scas
in
sub
imul
mov
cmc
mov
ins
add
jmp
push
cmp
test
je
pop
out
loop
mov
faddp
stc
fbld
add
sbb
and
std
lea
cmps
push
inc
dec
xor
lahf
sbb
jge
add
popa
xchg
sub
xchg
psadbw
pop
fnstsw
getsec
cmp
sbb
out
xlat
movs
popa
dec
inc
sub
mov
dec
aad
mov
dec
mov
dec
mov
push
adc
leave
cmp
loop
iret
cmp
aas
call
sub
ret
mov
push
xlat
pop
and
mov
ja
inc
sahf
push
xchg
aam
(bad)
js
retf
pop
cmc
lods
cmp
out
ins
and
jno
pop
aam
cmp
pop
test
pop
dec
int
repnz
retf
jle
popa
imul
enter
mov
dec
jl
dec
adc
aam
or
cwde
mov
fsub
aam
enter
mov
es
xchg
nop
or
aaa
sub
and
(bad)
cld
retf
mov
and
xchg
sub
dec
jmp
test
stc
jne
mov
sub
or
mov
dec
cld
movs
cwde
jae
test
je
sbb
mov
leave
adc
sub
imul
or
sub
mov
mov
clc
daa
mov
push
int3
mov
sbb
repz
pop
int3
push
imul
push
(bad)
ficomp
inc
jmp
push
and
fwait
and
clc
cmps
enter
or
mov
(bad)
icebp
xchg
out
retf
lea
xchg
ja
xor
pop
out
or
cmps
stc
dec
imul
push
adc
mov
adc
pusha
inc
sbb
movs
xchg
inc
(bad)
mov
into
adc
test
iret
and
mov
repz
cmps
dec
jbe
adc
retf
inc
dec
jno
mov
pop
aas
pop
add
push
ins
and
outs
repnz
mov
jmp
stos
xor
fimul
xor
jne
or
test
adc
cdq
jl
adc
mov
dec
dec
call
adc
xchg
jb
fnstenv
push
add
mov
mov
dec
jmp
lea
adc
inc
dec
push
ss
cli
(bad)
out
cmp
dec
addr16
xchg
pop
push
adc
mov
push
jl
outs
xor
mov
jo
jns
sbb
inc
mov
test
adc
(bad)
mov
push
pop
dec
out
sbb
ja
mov
dec
test
xor
icebp
mov
aas
icebp
gs
popa
cmp
dec
mov
fisttp
out
scas
in
mov
push
jmp
(bad)
xor
lock
jge
shl
cld
sub
pushf
mov
ds
ret
hlt
mov
in
leave
jo
(bad)
fdivr
push
lods
xchg
(bad)
neg
lea
cmp
xchg
aam
stos
and
sbb
shl
outs
pop
inc
jb
ror
into
out
cmp
shl
aaa
ds
shr
xchg
loop
rcl
xor
js
std
jo
ror
repz
or
ins
cli
jle
and
sbb
and
out
pop
mov
and
dec
ret
dec
add
cmps
cmp
xor
add
ret
cmp
cmp
mov
arpl
push
out
std
cdq
mov
xor
aam
xchg
lds
mov
mov
test
sbb
clc
imul
movs
enter
push
sub
arpl
add
add
xor
adc
cli
clc
mov
mov
pop
ins
push
int3
das
cmp
and
mov
popf
cdq
out
xchg
jmp
iret
and
(bad)
retf
cs
in
jnp
and
cmp
in
mov
inc
addr16
xchg
cdq
mov
fmul
pop
jns
ret
lea
div
cmp
ds
lock
push
push
into
sti
sub
and
fwait
jne
cld
push
sar
adc
test
sbb
add
push
loopne
pop
nop
add
pop
(bad)
jg
stos
das
push
jle
and
sbb
jle
repz
mov
pop
mov
jmp
xlat
sbb
jb
cmp
mov
(bad)
daa
addr16
arpl
fdivr
ret
adc
loope
cwde
xor
test
test
push
data16
xchg
mov
xchg
xadd
push
and
adc
call
sub
push
ss
aad
jns
jecxz
jp
jmp
fbstp
ror
xlat
xlat
mov
cwde
mov
jle
push
sub
or
xchg
loop
rcr
xsha1
cmps
(bad)
cmp
ins
push
add
or
movs
int3
jmp
loope
jecxz
movs
mov
xor
fs
jp
cmps
push
cmps
popa
xor
mov
jae
ds
pop
add
push
mov
jmp
test
dec
test
movs
fdivr
mov
jmp
jle
loope
mov
pop
cmp
mov
div
mov
mov
jo
mov
std
leave
push
or
fidivr
add
ficom
shl
mov
imul
jno
mov
xor
ss
fsubr
je
add
dec
xor
inc
xchg
pop
(bad)
(bad)
mov
or
pop
jmp
sub
outs
xor
das
mov
call
inc
sub
outs
js
mov
or
xor
(bad)
cmps
mov
std
adc
dec
inc
retf
punpcklbw
jp
cli
and
or
cmp
std
ss
imul
mov
push
pop
movs
in
xchg
xchg
in
push
add
pop
jnp
inc
test
mov
adc
jle
into
pop
(bad)
xchg
dec
mov
inc
jge
aad
add
fwait
mov
jle
fsubr
fst
push
bound
jae
sub
aaa
or
inc
nop
push
js
nop
mov
push
cld
pop
mov
cwde
pop
stos
call
cmp
dec
push
xor
push
xor
xchg
xchg
mov
js
stos
cmp
(bad)
imul
scas
dec
cmp
pop
data16
mov
or
aam
ret
sbb
add
std
jno
adc
cmc
fwait
xor
ret
dec
mov
pop
je
fisub
hlt
lds
pop
add
xchg
mov
in
test
pop
ins
xor
outs
idiv
cmp
and
iret
repz
inc
nop
and
sub
std
mov
add
es
mov
dec
outs
out
adc
mov
mov
push
fnsave
ret
sbb
mov
icebp
movs
fs
inc
pop
jle
ret
jge
adc
in
or
cld
or
cs
(bad)
lock
jnp
mov
test
or
push
pop
cmps
sub
inc
and
stos
or
adc
fs
in
jp
push
push
add
inc
inc
rcr
test
inc
shl
outs
aam
dec
gs
popf
es
or
jbe
inc
push
fstp
out
test
dec
and
xchg
dec
and
or
and
and
xchg
pop
call
jp
or
out
push
clc
sbb
fdivr
out
mov
cmp
push
je
mov
sbb
enter
mov
jbe
test
out
sar
loop
repz
lahf
and
sub
xchg
enter
inc
repz
sahf
adc
dec
pop
adc
xchg
mov
fisub
clc
lods
xlat
xchg
cmp
cmp
mov
push
dec
and
inc
add
loop
lds
ds
push
arpl
sbb
or
cwde
dec
xchg
ret
nop
xchg
repz
mov
js
(bad)
xchg
outs
pushf
xor
(bad)
dec
mov
and
and
mov
jle
push
pop
(bad)
je
test
xor
call
int3
lock
shl
sbb
inc
mov
and
mov
push
push
push
push
add
sbb
add
std
pop
stos
mov
xor
sub
pop
inc
mov
dec
sbb
add
sbb
adc
or
aad
sub
nop
in
jl
mov
or
add
xchg
out
xchg
mov
inc
xchg
xlat
ins
sub
jg
xchg
sbb
mov
lea
xor
xchg
xchg
imul
cmp
add
icebp
push
inc
lock
xchg
xor
out
call
in
or
push
std
xchg
rcr
sbb
inc
test
cdq
jg
test
mov
jg
cmps
xadd
stos
adc
add
cmc
mov
out
and
jns
mov
xchg
add
push
cmp
adc
mov
dec
cmp
xor
jb
bound
mov
inc
xlat
out
jnp
movs
push
clc
inc
inc
movs
cwde
mov
mov
pop
out
es
cmp
nop
clc
popf
sar
rol
xchg
sbb
xchg
sar
xor
add
sbb
rcl
mov
inc
or
inc
inc
ficomp
inc
adc
addr16
jb
push
ret
in
inc
adc
das
push
xor
icebp
mov
fisttp
sbb
jns
sub
(bad)
mov
dec
sub
(bad)
dec
je
or
ret
ja
imul
jns
push
mov
cld
sti
xchg
mov
into
mov
mov
lea
push
or
cdq
sbb
loope
scas
jecxz
sub
shr
sti
dec
sub
mov
out
and
and
(bad)
and
cmp
fucomip
std
mov
ret
add
call
sub
imul
sub
jg
cmp
mov
mov
cli
movs
xchg
xchg
pop
push
(bad)
jl
xchg
stos
xchg
clc
dec
push
cmp
jne
mov
cmps
inc
ror
shr
xchg
out
jmp
mov
in
retf
fs
into
cmps
push
or
mov
push
xor
(bad)
aam
adc
adc
or
dec
leave
imul
jo
mov
push
mov
clc
fwait
xchg
xchg
cli
test
mov
and
fwait
cli
jg
mov
arpl
mov
test
push
mov
jmp
xchg
pusha
ror
xlat
xchg
xchg
inc
inc
xchg
(bad)
(bad)
mov
(bad)
daa
mov
mov
or
xor
rol
cmps
in
aam
dec
clc
jl
jmp
inc
shl
adc
lods
ins
lds
jge
into
pop
sub
aaa
mov
pusha
repz
jmp
out
nop
popf
pop
sub
(bad)
cmp
aam
mov
push
aad
mov
ror
jb
std
add
xchg
arpl
xor
fcom
jno
mov
movs
int
dec
repz
loope
aaa
aad
outs
xchg
ds
push
cmc
xor
jns
mov
scas
sbb
clc
div
cld
mov
xchg
xor
pop
sbb
xor
in
(bad)
or
pop
and
xor
pop
push
mov
test
leave
ror
add
add
(bad)
sub
stc
fsubr
clc
pop
fldenv
repnz
adc
pop
gs
int3
ds
cmp
add
cmps
or
out
push
outs
cmp
shr
xchg
rcl
xor
cld
outs
repz
add
or
xlat
inc
mov
sbb
jnp
stos
(bad)
pop
cmps
cmp
in
sar
in
xor
int3
jecxz
aad
daa
sub
aam
stos
sbb
rol
es
js
std
inc
ret
(bad)
and
rcl
jnp
push
mov
cmp
pop
imul
adc
out
ja
retf
inc
test
shl
cdq
xchg
mov
or
(bad)
loop
xchg
and
push
dec
and
dec
or
icebp
out
and
sti
xor
stc
jae
shr
pop
mov
and
lods
into
and
inc
fisub
cdq
mov
mov
cs
mov
movs
mov
sub
mov
and
test
clc
inc
jmp
push
(bad)
and
dec
cmp
test
xchg
add
jmp
xor
pop
sbb
hlt
sub
(bad)
push
mov
lock
jb
popa
out
jg
dec
je
jl
imul
popf
pop
or
sti
fidiv
dec
mov
sahf
stos
adc
shl
rcl
jno
jg
repz
dec
mov
lods
lahf
mov
pop
mov
pop
xlat
sbb
and
and
ja
sbb
mov
mov
cmp
shl
adc
pop
pusha
cmp
(bad)
push
pop
pop
rcl
pop
cld
cmp
mov
aam
mov
pop
fisub
mov
mov
adc
lods
jp
xchg
xor
and
pop
retf
add
cwde
mov
cmps
adc
cmps
loop
loop
dec
or
pop
(bad)
xlat
aad
adc
sbb
movs
inc
jge
mov
mov
sbb
push
lahf
out
and
and
jmp
mov
adc
mov
in
dec
mov
jo
add
and
push
enter
mov
daa
shl
test
loopne
mov
je
adc
adc
push
pop
add
jb
popf
lahf
mov
cmc
inc
jae
add
jle
push
aas
mov
add
or
outs
dec
or
loop
and
stos
cmp
fidiv
loop
pop
push
mov
int3
sbb
aam
push
ss
out
call
rcr
xchg
stos
mov
dec
mov
stos
mov
add
loope
mov
(bad)
imul
cmp
aas
pushf
out
cld
sub
cmp
sbb
mov
loopne
push
std
test
jne
movs
dec
das
les
mov
xlat
mov
sbb
dec
cmp
mov
sahf
mov
mov
cmp
test
jmp
rcr
xchg
stc
data16
inc
test
test
or
jle
lods
dec
sbb
inc
cmp
sbb
mov
mov
push
xor
and
mov
or
ds
pop
(bad)
push
and
sbb
jae
push
jmp
pop
or
adc
jl
into
xlat
cld
shr
or
push
pusha
or
out
rcl
movs
imul
jp
cs
scas
inc
rcl
stc
fbstp
cwde
sub
lods
or
pop
pop
cmc
mov
jmp
cmp
add
test
loope
dec
clc
push
int
xchg
dec
das
sub
adc
pop
mov
cwde
inc
sbb
leave
(bad)
xor
(bad)
lock
imul
dec
fsubr
jns
inc
add
loop
sub
push
and
mov
xchg
mov
nop
add
shr
lods
and
scas
cld
xor
pop
loopne
out
sbb
call
(bad)
scas
add
and
or
push
gs
xchg
add
adc
push
adc
jle
(bad)
cmp
rcr
mov
dec
adc
das
jle
aas
sti
fisub
ret
rep
ret
xchg
xchg
push
data16
stos
(bad)
fbstp
mov
mov
inc
das
daa
push
push
cdq
bound
add
test
cmp
and
mov
ins
lods
add
xor
(bad)
imul
pop
xchg
retf
call
pop
cmp
mov
xor
add
mov
push
leave
jae
pushf
adc
jmp
sub
add
lahf
push
cwde
pop
add
inc
sub
or
or
xlat
test
ja
pop
in
pop
push
add
pop
fs
sahf
cmp
push
and
pop
add
mov
add
sbb
mov
mov
mov
fimul
cmp
jl
and
jno
push
and
leave
sub
sub
call
inc
jmp
xchg
sbb
adc
es
sub
pop
test
loopne
jbe
out
shr
iret
enter
ins
sahf
mov
imul
pop
pushf
rol
and
int
push
fwait
push
xor
push
fnsave
(bad)
cmc
nop
jbe
jnp
dec
aas
mov
mov
ins
das
loop
push
xchg
mov
jg
dec
push
aas
dec
lock
dec
mul
mov
or
and
stos
pop
out
jge
imul
mov
push
aad
sbb
shr
inc
lods
cmp
xor
cwde
std
stos
add
cmc
or
imul
and
cmps
jnp
cmp
(bad)
leave
inc
movs
icebp
call
jle
pop
mov
(bad)
sub
jbe
jg
loop
scas
or
sbb
xor
sub
stc
dec
(bad)
fadd
or
xor
std
push
and
push
popf
pop
adc
push
mov
jmp
test
and
inc
adc
scas
fsub
daa
xchg
scas
jb
mov
not
jae
dec
dec
inc
rol
enter
popf
jmp
cmps
dec
cmc
jnp
stos
xor
xchg
pusha
pop
push
stc
xor
loop
mov
fsub
adc
mov
hlt
(bad)
in
mov
ja
xchg
ret
jecxz
push
mov
mov
mov
inc
inc
aas
xchg
add
or
gs
adc
sub
mov
jo
mov
xchg
pop
mov
lods
add
xchg
cmp
push
add
(bad)
shl
pop
mov
sti
pop
cwde
fxch
push
lods
adc
(bad)
out
mov
or
or
xor
inc
data16
dec
mov
add
xchg
jecxz
sbb
add
imul
enter
fsub
into
imul
movs
jg
movs
je
mov
adc
out
loopne
xchg
inc
inc
sub
mov
inc
mov
std
and
nop
mov
ret
xchg
mov
cli
fs
xchg
sub
dec
dec
sbb
xchg
add
repnz
shl
sti
jo
ins
sub
sub
fdiv
popf
and
sbb
push
repz
adc
fiadd
push
mov
mov
xor
popa
shl
mov
xor
gs
pop
adc
addr16
fcomp
loop
jg
cmp
xchg
(bad)
push
mov
mov
jg
pop
adc
sbb
xchg
bound
lods
test
call
fldz
xchg
lods
test
mov
xchg
inc
pop
lds
or
jge
loop
sbb
mov
cwde
add
fwait
pusha
or
inc
dec
sub
in
push
iret
cmc
or
dec
and
inc
(bad)
jnp
xor
out
mov
add
mov
jnp
aam
stos
inc
ds
(bad)
mov
cmc
mov
stos
(bad)
jmp
add
fwait
xchg
cld
push
aas
fild
cdq
repz
out
mov
push
xlat
push
mov
fs
pop
mov
add
cmp
(bad)
aas
iret
or
pop
mov
neg
scas
(bad)
mov
mov
xchg
sti
rol
or
or
adc
addr16
stos
mov
dec
frstor
out
inc
repz
shl
(bad)
xor
lds
icebp
push
push
into
retf
ins
lds
mov
mov
sub
inc
ret
adc
cmp
cs
cmp
shl
scas
pushw
shr
mov
xchg
cmp
push
xchg
push
leave
mov
pop
pop
enter
(bad)
aad
inc
dec
sbb
or
and
push
cmp
dec
mov
lahf
jge
repnz
jl
cmps
int
xor
mov
jo
hlt
xchg
push
mov
aas
dec
push
mov
data16
arpl
mov
(bad)
test
mov
pop
or
imul
add
cmc
cmp
shr
adc
repnz
inc
add
xchg
lea
push
jmp
addr16
sahf
jbe
jae
cmovno
push
adc
jae
dec
lods
out
test
nop
shl
inc
or
push
outs
int3
pop
dec
push
pop
fst
xchg
inc
sub
das
dec
sub
push
lahf
xor
push
mov
lds
or
stos
mov
cld
xchg
mov
inc
inc
xchg
stos
popa
inc
aaa
test
inc
(bad)
cmp
mov
mov
ficomp
mov
std
sahf
iret
lds
cdq
cld
fsub
push
cmp
out
aam
push
cli
or
sbb
jmp
fs
xor
shl
cwde
mov
or
sti
mov
push
dec
into
loop
sbb
cmp
inc
dec
jl
(bad)
sahf
mov
sub
aam
inc
std
mov
aas
cwde
rcl
cwde
fld
add
lods
(bad)
retf
dec
sub
mov
fidivr
or
push
into
xchg
ss
push
and
inc
mov
gs
pushf
jnp
add
sti
das
(bad)
(bad)
push
test
psubb
stos
mov
shl
fnstenv
push
lock
out
inc
dec
lock
or
idiv
add
jb
add
mul
xchg
outs
mov
xor
in
pusha
jmp
test
sbb
xchg
cdq
aad
add
sti
push
cli
mov
dec
xor
lods
dec
jmp
shr
seta
xchg
sahf
or
test
cmp
xchg
into
fcmovb
arpl
std
xchg
mov
or
sar
icebp
mul
dec
ror
hlt
xchg
imul
gs
fsub
in
push
add
or
mov
mov
xlat
loope
jge
add
fidivr
jg
jg
cli
(bad)
out
repz
aam
aaa
lahf
mov
rcr
pop
cmp
test
mov
add
mov
push
xor
xchg
push
dec
xchg
fstp
sub
push
jmp
and
clc
jo
and
ret
mov
sub
pushf
popa
enter
add
jle
outs
movs
push
push
mov
ds
leave
mov
call
rcl
mov
xchg
mov
ins
mov
inc
into
sbb
mov
xor
mov
jne
dec
popf
jl
cli
enter
out
aam
add
jnp
xchg
nop
mov
bound
mov
mov
fist
sub
ror
cwde
imul
xor
retw
repz
repz
fistp
(bad)
mov
cmps
push
pop
nop
mov
inc
sbb
clc
popw
jge
and
cmp
loope
cs
popa
cmps
xchg
mov
jno
leave
sar
mov
and
jnp
and
or
int3
cmc
dec
push
test
push
xlat
or
xchg
pop
ret
jmp
lods
jno
mov
mov
fcmovne
mov
stos
add
je
out
cli
repz
and
icebp
mov
mov
mov
int
xchg
mov
cmp
mov
pop
pop
mov
xchg
icebp
stos
add
aaa
pop
cmps
repz
and
mov
add
mov
push
ret
cmc
adc
sbb
mov
(bad)
adc
bound
and
rcr
fsub
je
stc
in
sub
out
aam
mov
sbb
daa
cli
jae
mov
mov
push
jle
leave
outs
ret
out
xchg
or
or
das
and
and
(bad)
mov
hlt
inc
movs
imul
call
fs
xchg
push
add
and
sub
pop
sahf
pop
bound
(bad)
retf
dec
jne
sub
das
(bad)
shr
adc
test
scas
dec
push
cmp
push
pop
jmp
lods
jg
aad
cmp
cmps
repnz
out
mov
pop
jno
ja
(bad)
movntq
or
xchg
mov
mov
push
cmps
cmp
xchg
dec
and
jp
inc
mov
lea
idiv
lods
bound
sbb
pop
mov
or
sbb
out
jmp
xor
cmp
or
mov
sbb
sub
pop
sbb
or
inc
enter
adc
pop
mov
lods
mov
mov
sub
(bad)
sub
mov
inc
test
pop
cmp
and
inc
ins
mov
adc
dec
les
jmp
frstor
daa
cmc
sbb
lock
cli
jge
xchg
xchg
mov
in
fdivr
pop
leave
xchg
outs
dec
or
movs
bound
cmp
xchg
xchg
movs
mov
mov
sub
ret
add
cmp
(bad)
repnz
lds
xchg
mov
adc
imul
out
xor
push
add
aaa
mov
push
aaa
mov
sub
push
icebp
mov
mov
loop
rcr
cmps
gs
jns
mov
nop
stos
sub
cs
ret
push
mov
pop
jg
popf
push
mov
inc
daa
enter
add
mov
pop
lahf
jmp
xor
mov
ret
xor
and
jl
mov
cmp
in
mul
inc
jno
movs
xchg
add
pop
xchg
or
aad
div
pop
xchg
pop
ins
aad
sbb
test
sub
push
jno
jg
call
cdq
loopne
jno
unpckhps
test
repnz
pop
cmp
out
jne
inc
pop
mov
inc
or
pop
in
or
fidivr
mul
outs
inc
dec
sbb
xor
sar
mov
lea
stos
arpl
xchg
cmps
mov
sub
or
lock
jp
cdq
std
jg
add
mov
fs
mov
mov
cwde
inc
test
sub
add
stos
dec
adc
or
pop
outs
test
jnp
stos
add
(bad)
push
inc
popa
adc
sub
lahf
sbb
or
xchg
jge
jl
out
sub
sbb
add
cmp
popf
fmul
nop
imul
les
sbb
inc
and
and
sub
xor
xor
push
sub
out
mov
mov
sti
jns
sbb
out
mov
sub
dec
out
dec
mov
scas
xchg
pop
cdq
bt
fwait
xchg
inc
clc
clc
out
xor
out
ins
stc
stos
dec
or
sub
adc
sub
(bad)
mov
sar
imul
sbb
loope
sbb
cmp
aam
add
test
or
shl
fucom
cs
xor
iret
mov
movs
mov
xchg
xor
sbb
aad
(bad)
or
xchg
lods
lods
lods
jnp
out
das
push
cli
clc
out
aam
mov
sbb
xchg
out
pop
ja
mov
ret
sub
ret
pushf
outs
jns
mov
stos
push
outs
test
inc
mov
inc
sti
sbb
cld
cld
xor
call
sub
out
push
ret
push
mov
test
mov
jecxz
push
sbb
(bad)
std
nop
jbe
in
ins
lds
std
mov
rep
adc
jno
into
(bad)
popa
xlat
xchg
outs
jno
sub
fs
adc
stc
adc
push
jmp
(bad)
dec
cwde
inc
outs
fwait
sbb
loope
ret
fwait
icebp
pop
and
leave
les
mov
out
(bad)
out
lods
adc
gs
icebp
dec
xchg
pop
mov
stc
mov
sbb
xchg
adc
or
hlt
out
mov
imul
jmp
jbe
pop
popa
push
ffreep
xor
leave
out
sahf
mov
mov
adc
ins
enter
cli
dec
mov
mov
mov
mov
sbb
pushf
imul
jg
cmp
sub
xor
in
hlt
out
mov
dec
xlat
frstor
dec
enter
sahf
xchg
mov
es
pop
fidivr
jno
lock
xor
imul
push
xchg
add
das
fisttp
pusha
mov
pop
xor
mov
icebp
aam
add
rol
xchg
mov
stos
sbb
test
cs
inc
pop
pop
loopne
jl
push
jecxz
and
xchg
add
test
jmp
push
cmc
aaa
sub
and
movs
cmp
pusha
test
(bad)
jb
gs
bnd
push
ret
xchg
call
int
sub
push
dec
push
sub
shl
pop
mov
fistp
cmps
cmps
ss
sub
mov
cmp
mov
inc
out
mov
dec
sbb
mov
ror
dec
mov
data16
push
repnz
pop
aad
xchg
inc
icebp
div
push
or
je
(bad)
jne
movs
mov
mov
shl
sbb
fild
xchg
js
push
jge
movs
and
out
jne
loop
xor
lods
fdiv
je
in
shl
xor
pop
inc
add
mov
mov
jle
repnz
cmc
stc
xchg
add
rcr
cmp
loop
call
popa
jle
dec
(bad)
mov
mov
sbb
xor
add
stos
inc
pop
std
push
adc
imul
fild
in
xchg
sbb
fisub
test
mov
nop
adc
xor
stos
mov
jno
mov
mov
xchg
mov
fimul
mov
push
adc
xor
lods
push
mov
jp
inc
xchg
dec
and
sub
fmulp
adc
mov
kmovd
push
mov
mov
not
loop
mov
outs
sbb
pop
call
push
pushf
test
sbb
add
loop
jmp
mov
xor
in
sbb
popf
push
sbb
sbb
call
neg
je
icebp
addr16
test
inc
pop
dec
ins
or
inc
imul
mov
push
jg
fisubr
adc
push
popf
jno
repnz
in
jnp
jno
cs
fxch
mul
cwde
retf
(bad)
mov
adc
and
mov
add
loopne
xor
or
dec
xchg
xchg
mov
mov
cmc
stos
and
fst
push
add
sbb
(bad)
adc
mov
and
ins
mov
pop
and
and
aam
leave
clc
hlt
adc
adc
mov
cwde
inc
jmp
xchg
and
pop
(bad)
arpl
pop
ins
sbb
jp
fdivr
dec
pop
mov
int
out
adc
mov
xchg
adc
fs
outs
pop
fst
sub
fistp
xchg
out
(bad)
in
sbb
push
push
push
cli
pop
jno
xchg
jb
ret
out
call
cmp
in
pop
sub
loopne
ret
and
cli
sub
xchg
repnz
imul
xor
mov
pusha
xor
cdq
or
fs
pushf
ror
cmps
mov
push
mov
in
fisttp
push
lahf
ds
jns
aas
scas
xchg
or
sbb
aas
fnstcw
sbb
push
movs
dec
les
jae
repnz
sbb
pop
jle
dec
sub
in
sbb
xor
outs
(bad)
jne
xchg
ds
test
adc
xchg
out
xchg
in
fnstenv
inc
inc
retf
stos
lea
jne
xchg
and
mov
push
arpl
sti
jb
add
jmp
ins
inc
sub
sub
xchg
fimul
or
cmc
mov
ret
cmc
idiv
out
xchg
inc
ins
mov
and
cwde
mov
test
dec
pop
movs
and
mov
cwde
and
add
and
push
(bad)
ret
repnz
repnz
jb
mov
js
adc
rcl
xchg
mov
les
cmp
mov
dec
jp
push
push
jns
in
outs
(bad)
pop
std
mov
adc
cmps
loope
dec
sbb
and
int
xor
outs
dec
pushf
jnp
pop
retf
jp
or
xchg
call
fdivr
ds
dec
enter
xor
imul
inc
stc
sbb
xor
es
aad
push
dec
jl
call
adc
mov
dec
test
jno
clc
push
sbb
call
mov
jb
dec
int
pop
push
pop
jne
loope
mov
(bad)
repz
push
ret
iret
jne
sbb
outs
add
pop
push
lahf
shl
sbb
hlt
jge
adc
push
pop
rcr
mov
ins
lea
cmp
lods
mov
and
add
jp
jne
shr
sti
jl
mov
test
lahf
xor
test
xor
ds
loop
jl
xor
rol
(bad)
mov
add
icebp
jg
aad
nop
push
push
pop
and
add
mov
pop
movs
in
cmp
inc
daa
push
push
xchg
imul
(bad)
loopne
jo
xchg
aad
aad
out
pop
mov
aad
enter
inc
lods
mov
pop
mov
enter
inc
retf
sub
xchg
cmp
sub
xchg
pushf
aas
push
push
and
int
mov
scas
and
dec
push
cdq
push
js
(bad)
out
imul
fisttp
mov
cmp
(bad)
cwde
inc
mov
test
adc
clc
push
lea
leave
mov
call
data16
call
jae
not
imul
push
mov
dec
jb
cmp
or
scas
fst
xchg
push
mov
mov
push
jp
fs
or
fisttp
adc
scas
ror
scas
cli
sub
inc
push
inc
push
inc
lahf
rol
inc
in
je
push
pop
popa
inc
mov
jle
cld
pop
or
mov
lock
pop
stc
adc
ret
pop
or
fist
shr
in
aaa
leave
in
int3
je
cmc
int3
push
int3
retf
cmp
mov
mov
dec
stos
cmp
fcmovu
xchg
push
mov
jnp
mov
jnp
sbb
push
test
mov
call
imul
outs
std
push
push
pop
jl
adc
or
mov
leave
(bad)
fistp
push
aaa
add
int
inc
fsubr
xchg
jb
or
scas
aam
rcl
cmps
jno
pop
mov
mov
ss
mov
aas
test
add
popf
cmp
enter
jnp
stos
cld
ror
sbb
push
xor
pop
aas
inc
push
pop
outs
push
mov
les
jne
mov
mov
push
inc
lock
jp
mov
arpl
xor
cmp
cwde
add
shr
jecxz
push
out
in
ficom
dec
fsub
in
or
add
repnz
cmc
mov
mov
mov
jb
and
mov
rcl
mov
icebp
lea
call
or
or
stos
sbb
loop
rcr
dec
pop
inc
add
es
mov
push
or
adc
bound
sbb
xor
cmps
bound
mov
popf
pusha
pop
ss
imul
jne
adc
idiv
cmp
xchg
gs
mov
jle
out
adc
bound
mov
push
test
cwde
out
das
icebp
push
xchg
ja
(bad)
leave
or
xor
push
js
ja
cmp
sbb
lock
movs
inc
in
xor
adc
ret
stc
jnp
loope
data16
jbe
sar
cwde
cmp
(bad)
cs
xor
or
cli
fadd
fdiv
or
and
sub
pop
test
test
adc
jp
adc
xchg
leave
(bad)
dec
retf
xor
mov
or
mov
lahf
into
xor
mov
cdq
js
and
sbb
push
add
jmp
(bad)
std
cmps
fistp
xchg
hlt
div
push
in
sub
fldcw
jno
ss
outs
enter
jmp
lods
movs
push
add
inc
(bad)
outs
xchg
cmp
mov
add
pop
xchg
aas
lahf
add
xlat
xchg
out
jo
push
ja
pop
cmp
rol
jbe
iret
xchg
mov
ss
pop
popa
int3
or
rcl
fdiv
and
inc
mov
sbb
in
cmp
hlt
test
jl
pop
push
and
mov
pusha
not
inc
jl
pop
and
or
fsubr
add
lahf
movs
arpl
inc
adc
aas
mov
jg
shr
jge
inc
pop
jb
mov
into
movs
out
repz
add
dec
xchg
inc
les
aad
outs
cli
xor
outs
std
test
(bad)
xor
hlt
fild
sub
cmp
add
shl
(bad)
aas
cdq
adc
jno
inc
repnz
mov
and
jne
pusha
outs
fstp
ins
mov
psllw
xchg
addr16
mov
xchg
gs
or
jecxz
in
mov
sub
sub
mov
lea
push
cli
adc
js
jne
cmp
or
xor
cmps
inc
ins
sbb
xchg
jecxz
and
dec
xor
ror
or
out
xchg
xor
jmp
outs
push
xchg
inc
push
push
in
das
dec
retf
outs
imul
push
in
jecxz
push
mov
pop
mov
inc
cmp
push
data16
dec
clc
add
popa
cmp
jo
sahf
jmp
leave
sub
scas
jp
or
int3
cmp
movs
mov
mov
addr16
les
scas
xor
in
mov
fild
lds
add
inc
or
movs
data16
rol
ret
cdq
mov
mov
sbb
jnp
lock
jle
(bad)
cs
cwde
pop
push
enter
(bad)
fwait
into
xchg
xor
(bad)
gs
xor
retf
mov
xchg
jle
dec
xchg
std
in
and
das
jbe
or
sbb
ss
xchg
fstp
sub
adc
jg
mov
bnd
jge
mov
int
xor
cdq
dec
bound
int3
out
and
cli
(bad)
lock
addr16
xor
mov
les
and
lahf
imul
jle
mov
mov
push
(bad)
jnp
das
jp
add
adc
mov
cmp
push
mov
imul
push
addr16
push
pushf
lods
ja
pop
xor
dec
or
mov
les
sbb
and
imul
xchg
(bad)
jg
push
cmc
shl
ret
pop
movs
out
arpl
dec
push
cld
push
cmp
sub
inc
xor
dec
inc
pop
adc
retf
push
adc
cmc
scas
loop
sbb
jb
and
mov
xor
sub
hlt
inc
sbb
jp
cmp
aad
ret
sahf
jae
dec
repnz
ja
shl
daa
rcl
test
(bad)
pop
(bad)
sar
push
fnstenv
div
sbb
xor
sub
repnz
jns
dec
ds
imul
pop
(bad)
jmp
inc
dec
rol
mov
cmps
(bad)
dec
sahf
cmps
cmps
(bad)
sub
lods
js
fwait
mov
fldenv
shl
pop
xchg
mov
popf
cmp
push
es
ret
dec
push
sub
inc
ds
fwait
add
mov
cmps
stos
xor
retf
sbb
pop
cmp
(bad)
(bad)
(bad)
stc
test
(bad)
xor
in
in
cmp
lds
mov
push
mov
jmp
xor
movs
xor
fmul
fstp
dec
mov
push
leave
jb
xor
and
das
cmp
mov
and
(bad)
or
jg
stc
(bad)
sbb
psraw
xor
or
push
das
add
sbb
inc
ds
popa
cmp
cmp
imul
mov
lods
lea
xor
cmp
pop
ds
fstp
xchg
xchg
popa
sbb
ins
push
in
in
add
xchg
outs
div
or
out
or
push
sbb
lahf
push
scas
pop
repz
pushf
mov
shl
ds
dec
xchg
xchg
sub
outs
push
xchg
jo
dec
imul
sbb
out
push
addr16
loopne
mov
mov
sar
sub
ret
xchg
fild
test
xchg
daa
mov
(bad)
in
or
inc
add
jecxz
adc
scas
xchg
sar
fisttp
pop
dec
das
sbb
mov
cmp
jg
xchg
cmp
clc
je
rcl
mov
sbb
jge
sub
jo
stos
call
mov
mov
dec
or
or
inc
das
fmul
jecxz
pop
in
cdq
cmps
cmc
xchg
mov
push
pushf
add
in
mov
mov
adc
inc
jle
inc
mov
test
les
jne
pop
int
test
rol
fstp
sub
xchg
sub
mov
ret
mov
sbb
ja
xor
cmps
call
int3
mov
push
test
call
mov
aaa
xchg
inc
repnz
jl
push
fsubr
psrlw
cld
repnz
xchg
dec
cmp
push
push
pop
pop
xor
cli
fsub
in
loopne
nop
cmp
mov
icebp
push
fcom
push
push
jbe
and
imul
cmps
ror
or
mov
push
push
mov
cmp
push
mov
sbb
pop
sub
test
arpl
into
and
pushf
stc
sub
leave
out
mov
in
mov
pop
aaa
ins
loope
xchg
pop
mov
aas
mov
stos
sbb
retf
jmp
out
stc
sub
jl
call
pop
pop
mov
sbb
mov
fild
jns
into
jbe
js
and
fisubr
enter
clc
or
cs
pusha
mov
dec
les
xchg
sbb
push
fisubr
bt
fisttp
int3
test
ret
imul
adc
mul
fdiv
adc
js
imul
add
add
jp
push
add
inc
cmp
shl
cmps
mov
xchg
mov
fstp
lock
stc
int
dec
cmp
in
clc
cdq
es
fucomi
ins
(bad)
xor
in
jae
dec
les
leave
addr16
fnsave
mov
sub
dec
ins
aaa
in
add
cmp
xor
mov
test
das
push
test
fsincos
inc
les
pop
(bad)
call
retf
ret
mov
(bad)
pop
jge
inc
dec
push
mov
adc
sbb
(bad)
addr16
xor
mov
mov
inc
dec
(bad)
(bad)
in
idiv
faddp
call
jb
pop
or
loope
mov
pop
xor
daa
(bad)
and
sbb
xchg
js
in
sub
adc
ins
mov
push
jno
xor
inc
adc
xor
xchg
sbb
jecxz
cmp
ins
in
and
push
jge
shl
out
pop
xchg
mov
es
xor
or
sbb
adc
hlt
adc
out
and
jno
int3
jmp
lea
and
ds
jl
sub
xor
movs
pop
and
push
ret
fstp
test
inc
inc
xor
and
mov
adc
adc
lea
or
add
les
icebp
out
adc
inc
inc
icebp
dec
(bad)
jo
shl
mov
jle
inc
aam
sub
mov
test
shl
push
movs
cmp
repz
mov
cmp
inc
sbb
push
popa
sti
imul
push
mov
xor
jge
movs
xor
std
aaa
test
stc
sub
mov
adc
sbb
jno
mov
jmp
ins
xlat
cld
mov
pop
fs
dec
out
jmp
jnp
sub
push
das
stc
mov
fcmovb
xchg
push
test
retf
cmps
clc
add
cs
add
cmc
paddsw
fidivr
inc
xchg
lock
mov
push
add
sbb
call
xchg
sti
call
shl
adc
dec
adc
fimul
fdiv
add
bound
mov
pop
fisubr
iret
movs
mov
call
cmps
scas
stc
adc
aam
dec
push
sub
mov
mov
jmp
cmp
sbb
add
ror
into
pop
mov
popf
or
cwde
sbb
add
sub
xchg
iret
mov
adc
sbb
pop
xchg
sub
fcom
pop
cdq
out
push
out
inc
mov
enter
ret
inc
lods
pop
and
jmp
xchg
sub
out
js
stos
jb
inc
xchg
loop
lds
or
test
retfw
ss
mov
mov
ror
test
mov
fstp
xor
sbb
(bad)
jns
pop
cmp
cmp
in
fsub
icebp
stos
add
cld
inc
call
cmp
xchg
gs
pop
jae
inc
mov
fisubr
mov
test
xchg
in
(bad)
mov
mov
pop
jnp
ins
in
aam
jmp
sbb
and
push
pop
ret
repz
bound
les
jns
retf
loope
and
mov
ror
aam
pop
popa
mov
xchg
push
and
ds
and
into
cs
push
rcr
sbb
shr
test
xor
ins
cli
add
je
xlat
outs
jmp
es
mov
push
add
movs
push
mov
adc
mov
cmp
adc
stc
push
mov
fs
sti
push
mov
or
jo
jb
pop
cdq
and
nop
fidivr
aad
out
jecxz
or
in
std
outs
es
das
fidiv
adc
aas
or
(bad)
stc
cmp
cli
in
mov
cli
rol
mov
mov
arpl
mov
ret
out
retf
shl
fs
push
xlat
sbb
jp
enter
(bad)
cmp
jns
mov
and
stc
xor
lods
es
xchg
add
push
jge
inc
test
mov
jle
push
pop
dec
sbb
sub
mov
loopne
cmp
sub
dec
mov
jecxz
or
ss
std
sbb
int
mov
mov
pop
leave
or
xchg
mov
push
pop
mov
xchg
jns
xor
add
cwde
sbb
js
mov
stos
ror
out
sub
sti
cld
or
aaa
xor
mul
fmul
dec
jle
stos
mov
sbb
fimul
ds
pop
clc
test
mov
jg
mov
addr16
jb
(bad)
div
(bad)
test
mov
adc
sbb
push
xor
jecxz
xlat
adc
ds
or
das
adc
sti
push
mul
inc
jmp
(bad)
icebp
shl
xor
sbb
and
and
ins
sbb
add
in
push
stc
sahf
cmps
jno
add
sub
data16
cmp
add
mov
jg
call
adc
mov
mov
cmp
(bad)
mov
mov
and
jne
aam
jnp
lods
scas
sbb
cmps
out
dec
or
out
jb
lods
call
mov
aam
repnz
aaa
fld
in
iret
push
inc
inc
jg
sbb
sub
fld
fwait
dec
fdiv
xchg
cli
js
dec
push
test
sub
cli
nop
or
mov
pusha
inc
and
retf
or
imul
pand
(bad)
or
ror
gs
cmp
imul
fcmovnbe
jae
xlat
loopne
jns
sub
mov
stos
nop
call
pop
mov
dec
fadd
les
(bad)
(bad)
(bad)
std
(bad)
lea
xchg
push
adc
rcr
mov
outs
mov
lahf
das
cmp
cmp
push
pop
mov
sbb
cmp
std
fwait
iret
pop
push
xor
inc
inc
push
(bad)
call
rol
or
pop
iret
ins
mov
ficomp
rcr
ret
(bad)
daa
loopne
stos
fld
and
int
mov
retf
xchg
outs
dec
arpl
mov
movs
dec
jno
dec
xor
mov
push
jmp
stos
jmp
or
movs
and
nop
movs
out
xchg
or
outs
adc
push
enter
mov
pop
or
jge
mov
add
sbb
ja
lods
adc
mov
mov
inc
mov
es
mov
inc
push
sahf
jp
push
inc
js
mov
dec
pop
jae
div
mov
mov
loop
nop
mov
cmps
mov
push
fisttp
mov
push
lds
in
sub
addr16
inc
xor
repnz
jb
cmc
mov
push
sub
inc
add
out
jnp
adc
test
loop
mov
sub
xchg
cmp
inc
dec
addr16
mov
sub
stos
inc
and
gs
jno
jo
sub
nop
retf
(bad)
stc
scas
ss
cdq
and
movs
jnp
jmp
mov
mov
call
gs
cmp
loope
mov
jno
pop
pop
ins
int
sar
cmps
inc
xchg
pop
sub
ret
or
aaa
and
ins
mov
jmp
add
xor
xchg
sbb
xor
aad
cld
sub
jecxz
sahf
push
mov
and
push
lea
pop
cmp
mov
imul
test
and
inc
rol
inc
mov
push
mov
fdiv
jecxz
mov
jb
push
and
and
push
scas
adc
ret
neg
inc
ror
rcr
or
mov
fsub
addr16
pop
mov
sbb
cld
cmp
xchg
out
sub
(bad)
gs
xor
ds
stos
popa
inc
pop
into
jmp
xchg
inc
push
leave
test
jle
loope
push
inc
in
cmps
mov
pop
jecxz
aas
or
cli
call
fld
or
call
aas
push
repz
xchg
call
pop
aas
in
inc
mov
push
(bad)
js
rep
cmp
js
xchg
adc
ds
inc
or
movs
int3
and
push
mov
push
ds
daa
and
jno
(bad)
or
xchg
pop
cs
cld
sbb
fwait
cmp
pusha
cmp
jmp
scas
push
nop
and
mov
jae
push
cmps
dec
bound
dec
es
mov
repz
mov
or
pushf
call
mov
fdiv
or
dec
daa
sub
and
hlt
loop
add
sub
sub
add
dec
js
sar
or
dec
and
cmc
icebp
fiadd
or
mov
inc
(bad)
fisttp
leave
jmp
arpl
fst
push
xor
ret
shr
pop
nop
pusha
scas
fs
or
jge
loope
pop
pop
imul
cdq
sub
cmp
xor
gs
mov
sub
ds
push
in
xor
cmp
xchg
rol
jne
xchg
sahf
mov
shl
test
jae
repz
and
jge
xchg
dec
xor
cmp
xor
(bad)
jae
test
xor
in
in
jge
add
in
sbb
mov
(bad)
sbb
xchg
test
dec
cmps
outs
and
in
ds
and
inc
jae
push
mov
mov
or
pop
loopne
lahf
push
bound
fisub
retf
das
xor
add
sbb
mov
sub
cmp
retf
and
dec
pop
sti
aam
loope
out
dec
xor
stc
dec
mov
pop
xlat
ffree
cmp
push
xor
xacquire
outs
je
add
movs
shr
shr
sub
clc
enter
cmps
pushf
jle
xor
sbb
lds
cli
sub
jg
je
jecxz
sub
jmp
ins
dec
cmp
cmps
dec
pop
mov
out
jmp
loope
mov
rol
scas
adc
hlt
in
loopne
sbb
add
inc
out
nop
xchg
cmp
shl
sti
xor
push
fcom
cli
das
pop
dec
(bad)
jge
mov
sub
loopne
call
xor
leave
cmp
cmp
and
xchg
cmp
jbe
retf
je
jo
(bad)
xor
mov
sbb
mov
inc
cmp
jge
loope
push
in
mov
addr16
cld
popa
gs
popa
jge
xchg
ficom
xlat
mov
outs
es
or
aas
mov
and
fcmovb
out
jp
push
or
aam
cmp
pop
rcr
shl
pop
sbb
lods
xor
test
shr
je
pop
jo
scas
inc
or
jne
shr
movs
les
aad
pop
pushaw
xchg
adc
leave
inc
sbb
adc
mov
pop
sub
mov
lea
inc
mov
arpl
arpl
xchg
mov
or
xor
mov
(bad)
adc
sub
loop
es
add
setnp
xchg
out
aaa
mov
and
mov
jmp
and
fistp
push
pop
mov
arpl
mov
js
call
inc
shr
into
jne
push
sbb
jecxz
ds
retf
test
or
hlt
bound
bound
adc
in
hlt
cmp
inc
or
mov
test
cmp
mov
popa
test
pusha
fidiv
mov
mulps
push
push
adc
xchg
xchg
pop
jl
cmp
mov
into
jae
sar
push
mov
loope
mov
push
or
jns
add
iret
ins
pop
mov
xor
pop
or
popf
jmp
lock
sti
adc
popa
pop
shr
jle
shr
mov
mov
and
(bad)
cwde
and
mov
dec
in
sub
dec
mov
leave
data16
xchg
jno
fld
jle
faddp
jae
mov
sahf
xchg
sbb
mov
movs
gs
pop
call
mov
inc
xchg
aaa
sub
and
rcr
inc
popf
int3
adc
or
adc
iret
out
pushf
inc
sub
into
cmp
cmp
mov
push
or
cmp
test
shl
add
cmp
and
xor
inc
xor
adc
lods
out
lods
push
xchg
xchg
mov
mov
popa
mov
mov
hlt
fld
push
xor
scas
sbb
stos
mov
fs
inc
call
fcom
dec
add
and
adc
aas
jge
adc
inc
jnp
mov
mov
outs
pop
xor
pop
sub
sub
mov
sahf
test
ret
rol
sbb
loopne
jb
or
sahf
cwde
shl
mov
push
test
loop
jecxz
dec
cmp
ins
sub
cwde
jl
aaa
adc
add
cmp
aam
mov
mov
dec
sbb
or
lods
jle
test
adc
mov
mov
or
pop
mov
dec
or
leave
and
sar
fistp
pop
aaa
pop
(bad)
stc
xor
aam
mov
dec
add
jb
shl
fisubr
dec
adc
add
mov
inc
ficomp
cmps
push
or
std
lods
xor
cmp
sub
outs
ss
movs
push
in
add
mov
mov
ja
jno
scas
retf
ja
cmp
test
sahf
out
jecxz
adc
jl
data16
jae
add
js
mov
jo
mov
pop
retf
jae
and
mov
dec
xchg
fnsave
fsubr
xor
sbb
dec
push
adc
mov
jne
xchg
mov
test
xchg
call
add
outs
lock
push
xchg
mov
push
sti
mov
clc
dec
mov
push
add
ror
adc
call
icebp
cli
in
scas
clc
out
xchg
add
cdq
clc
inc
cmp
push
adc
and
sahf
adc
icebp
inc
stc
mov
shl
repz
pop
addr16
fisubr
xchg
rcl
sti
div
stos
or
js
push
outs
or
cwde
into
sbb
xchg
add
out
pop
inc
iret
xor
mov
xlat
pop
fistp
push
les
out
ret
jp
or
js
stc
jle
bound
jle
mov
rol
fld
jns
jge
sbb
aam
ss
scas
pop
mov
mov
std
push
mov
mov
jb
sti
adc
aam
pusha
(bad)
push
mov
sbb
stc
enter
fdiv
into
cmp
jmp
push
pop
mov
mov
ret
les
add
mov
mov
ja
adc
xchg
sbb
(bad)
data16
ss
mov
and
daa
mov
daa
jge
xlat
cld
xchg
ret
push
sub
mov
addr16
push
mov
adc
movs
xor
inc
push
ins
rcr
cmps
push
ins
inc
jbe
cmp
xor
dec
cmp
das
pop
shl
jmp
cmc
push
jg
movs
push
ins
push
nop
or
outs
js
jp
xor
inc
bound
test
cmp
mov
les
(bad)
outs
repz
and
add
gs
out
int
clc
xor
jb
inc
sub
mov
adc
loopne
xchg
jbe
mov
jmp
loope
inc
pop
cmc
jl
dec
pop
icebp
wbinvd
cli
int
add
adc
addr16
mov
nop
ret
popf
and
jecxz
jbe
in
enter
out
xor
es
fcomi
push
jg
push
jae
aam
jle
push
ret
or
push
pop
push
cmp
pusha
std
jb
push
sbb
fcom
dec
bound
out
xlat
movlhps
ds
inc
mov
jl
(bad)
mov
adc
or
imul
loop
cmp
inc
xor
sub
dec
push
mov
cmc
aaa
cmp
je
push
outs
sar
push
stc
loopne
xor
xor
and
push
xchg
inc
cmp
gs
call
aad
repnz
dec
jno
ss
mov
jnp
call
inc
jg
inc
jae
pop
mov
movs
lock
imul
out
push
jmp
push
mov
or
inc
adc
fmulp
jge
or
pop
aad
in
ja
cli
fninit
jg
enter
sbb
mov
mov
dec
jne
mov
std
fcomp
mov
lahf
or
cmp
dec
jmp
cwde
pop
int3
stc
add
lahf
jmp
aas
dec
dec
cdq
lods
loop
(bad)
mov
fldenv
ins
movs
dec
sub
rol
mov
adc
fmul
sub
test
jge
cdq
test
mov
sub
(bad)
aaa
mov
mov
ret
clc
dec
pop
ret
push
mov
push
fwait
sbb
cld
rol
mov
push
or
push
inc
test
mov
fiadd
cmp
fwait
mov
arpl
cmp
sub
sub
push
sti
dec
cdq
mov
pop
jne
repnz
(bad)
mov
mov
cmovge
adc
out
(bad)
push
pusha
mov
dec
fmul
ror
(bad)
mov
(bad)
push
call
lahf
leave
aaa
icebp
scas
js
sbb
cli
jg
out
cmp
inc
loope
nop
and
leave
aam
fcmovnb
bound
ficomp
xchg
pop
mov
mov
or
shl
aas
loopne
lods
cmps
les
xchg
sti
push
jns
push
add
jg
xlat
inc
mov
inc
dec
inc
push
adc
int3
pop
sub
stos
add
mov
or
fist
jmp
ror
xor
jl
pop
nop
jne
push
shl
inc
push
or
fwait
in
mov
fcomp
sbb
add
aad
pop
outs
xchg
jmp
jmp
mov
addr16
nop
sbb
sub
outs
and
mov
ret
sahf
iret
and
adc
sti
pop
xlat
mov
and
jmp
mov
test
jmp
cmc
stos
push
add
out
or
sbb
mov
xchg
fcomp
xor
jo
cmps
or
mov
xor
cld
sub
outs
or
stos
cmp
mov
sbb
xchg
aas
mov
sub
mov
sbb
inc
(bad)
and
jmp
out
push
addr16
push
cmp
xchg
cmp
mov
stc
xor
out
and
test
ins
or
mov
jae
ins
jmp
add
call
test
push
and
xchg
xor
(bad)
ds
pop
xchg
jns
or
dec
div
pop
push
(bad)
jae
or
xor
test
mov
jbe
inc
mov
jae
push
push
pop
jae
cld
jne
add
push
sub
fcomip
ds
aas
pop
inc
pusha
pop
call
(bad)
mov
mov
and
addps
(bad)
sub
and
pop
xchg
stos
lds
or
pop
sbb
pop
cmp
or
and
leave
cmp
push
sbb
in
sub
pop
mov
test
(bad)
or
dec
sub
adc
mov
in
icebp
and
jmp
and
sbb
ficomp
mov
daa
adc
mov
popa
dec
push
mov
cmp
into
xor
dec
pop
inc
in
push
(bad)
dec
icebp
jae
out
les
jo
xlat
sbb
mov
lahf
add
movs
icebp
test
add
scas
pop
mov
in
out
sbb
aas
clc
comiss
nop
mov
dec
mov
jmp
aaa
retf
retf
aaa
movs
in
fwait
jmp
aam
mov
(bad)
push
mov
jne
mov
and
or
sti
and
sub
mov
iret
xlat
sbb
in
pop
add
call
scas
es
fidivr
dec
ja
test
cmp
adc
out
pop
popf
sub
mov
or
adc
push
aas
xor
adc
pop
sub
jae
stos
pop
sbb
mov
inc
cmp
cmp
pop
mov
jae
call
mov
xor
pushf
mov
or
dec
icebp
mov
cmc
or
adc
mov
mov
pop
pop
xor
push
pop
inc
shl
xchg
adc
xor
lock
mov
das
mov
je
adc
pop
in
push
lds
sbb
add
jns
in
cmp
inc
xchg
aad
into
push
inc
jl
pushf
jmp
pop
sbb
pop
je
loop
stos
push
cmps
in
xor
ret
mov
xor
and
iret
repz
sub
sti
jecxz
xchg
push
sbb
fdiv
or
pop
bound
dec
pop
mov
dec
pop
push
xor
enter
(bad)
imul
mov
push
jecxz
repz
movs
pop
retf
pop
cmp
sahf
cs
aad
pop
add
(bad)
(bad)
popa
ins
add
int3
call
scas
jnp
out
data16
fisub
jge
cmp
xor
test
int3
jg
stos
sub
scas
add
scas
cmp
pop
popf
js
daa
inc
lds
aaa
jle
imul
mov
jns
cmp
jecxz
in
sbb
pop
rol
push
call
mov
or
iret
ins
outs
mov
push
mov
(bad)
repz
ror
retf
stos
arpl
add
out
xchg
xlat
pushf
add
and
shr
inc
mov
clc
mov
(bad)
adc
push
ds
fcmovbe
fsubr
ins
int
ret
imul
leave
dec
xor
add
inc
outs
dec
fxam
sti
inc
push
and
jbe
int
xchg
push
push
sbb
clc
push
leavew
sbb
test
out
(bad)
push
in
je
mov
xchg
mov
loopne
(bad)
pop
mov
mov
sub
fisttp
adc
push
leave
mov
cmp
arpl
xchg
push
pushf
xor
inc
cdq
fist
cmp
and
pop
mov
push
stos
fnstenv
into
hlt
test
sub
mov
(bad)
icebp
add
adc
pop
push
movs
pusha
jge
popa
pop
out
push
push
call
cmc
jnp
xor
sbb
shl
pop
daa
cmp
sahf
xchg
xor
loop
mov
adc
mov
mov
mov
lods
xor
cmp
jmp
mov
(bad)
in
mov
dec
mov
and
xor
inc
pop
icebp
cld
pop
repz
call
and
xchg
fcmovnu
(bad)
sub
dec
xchg
shl
scas
or
mov
jle
in
mov
gs
lock
dec
push
xchg
jb
icebp
mov
xchg
mov
call
add
xor
xchg
jge
cmp
stos
mov
in
test
pop
jo
sbb
mov
int
mov
cmp
mov
outs
mov
add
cs
dec
cwde
sahf
imul
jmp
inc
sbb
minps
jne
ror
mov
and
jle
jge
popa
and
push
ror
pop
pop
and
in
pop
mov
dec
lock
mov
mov
sbb
xchg
mul
jle
xchg
mov
mov
dec
js
ror
mov
aad
mov
adc
mov
movs
mov
adc
pop
loop
push
push
pop
cwde
retf
add
enter
ss
sub
ror
or
js
push
retf
test
lods
out
(bad)
xchg
retf
xchg
cmp
mov
xchg
loop
and
xor
xor
push
(bad)
jecxz
mov
mov
ds
leave
test
mov
in
rcl
mov
out
xchg
pop
xchg
xor
jecxz
jo
lock
mov
inc
xchg
jecxz
mov
in
pop
int3
push
out
fisub
or
fwait
icebp
xor
inc
mov
lods
jmp
nop
adc
jns
ror
inc
sub
dec
xor
(bad)
loopne
sbb
sub
xchg
lods
ins
sbb
cmc
xchg
int
mov
jge
jecxz
xlat
stos
xor
push
cmps
mov
neg
sbb
ins
pushf
int
cld
jno
inc
cmp
pop
imul
ror
retw
and
mul
add
xchg
bnd
cmc
int3
aad
inc
lahf
mov
adc
or
sahf
xchg
jo
sbb
mov
jno
sbb
ins
pop
mov
mov
adc
arpl
xchg
sbb
dec
xchg
and
fwait
mov
loope
in
add
or
cmp
pop
add
dec
mov
mov
lea
mov
inc
sub
adc
inc
aas
ret
in
arpl
ret
shl
out
jp
rol
push
loope
ret
mov
add
daa
scas
call
add
in
add
xchg
mov
cmp
push
inc
icebp
mov
push
inc
sbb
sbb
jno
cdq
xor
and
sbb
xchg
cdq
cmc
push
test
add
add
xchg
dec
mov
dec
pop
jge
or
xchg
mov
cdq
dec
pop
bound
nop
outs
dec
mov
(bad)
adc
aaa
pushf
pop
push
or
inc
div
add
sbb
loopne
imul
int
sysexit
in
clc
repnz
mov
iret
(bad)
idiv
pop
cmp
sub
js
daa
cld
jl
dec
imul
inc
and
sti
adc
inc
das
shr
mov
jl
js
mov
lods
push
push
lods
clc
mov
push
ja
loop
test
dec
cs
ins
test
popf
inc
ins
and
je
xor
jnp
sbb
call
mov
sub
retf
test
cmp
sbb
xor
repnz
and
dec
andps
aas
fidivr
int
xchg
mov
ins
lahf
jmp
push
jg
in
push
jne
call
int
test
aad
hlt
and
mov
int3
aaa
cs
jl
es
hlt
mov
inc
out
jle
mov
aas
inc
cmp
cli
cmc
lods
inc
shl
mov
xor
enter
int
retf
inc
sub
mov
jo
xor
into
xchg
sbb
rcl
and
cmc
adc
jns
pop
jl
mov
ret
or
inc
out
cmp
sti
adc
mov
popa
cmp
cmps
push
mov
arpl
repz
jnp
sbb
pop
cli
icebp
lea
mov
xchg
cli
icebp
cdq
mov
xor
aaa
repnz
rcl
lock
or
call
daa
cdq
cmc
sbb
cwde
in
(bad)
fidiv
adc
xchg
mov
jb
ret
pop
iret
and
aas
fidivr
rcr
mov
cmps
xchg
mov
ret
xchg
jle
addr16
in
imul
cmp
outs
je
jns
add
mov
fmul
and
packssdw
gs
gs
mov
sbb
cs
mov
jle
and
jl
scas
cmp
movs
dec
dec
inc
push
aaa
cld
bound
std
mov
add
adc
mov
dec
and
(bad)
repz
pop
sub
inc
ret
sbb
cmp
in
jge
or
and
rcr
scas
push
ds
mov
mov
(bad)
fist
rcl
jecxz
or
push
adc
push
or
mov
leave
fsubr
shl
add
add
xchg
and
sbb
outs
in
sub
pop
repz
sub
rol
shr
cmps
lock
out
arpl
scas
je
jl
shrd
in
sub
in
mov
jl
pushf
idiv
or
cmc
pop
in
xchg
xchg
xchg
and
repz
and
pop
push
mov
add
hlt
pop
leave
daa
aad
jo
mov
nop
movq
sub
jne
mov
sbb
push
bound
lock
add
shr
bound
cmp
xor
jecxz
sbb
push
fimul
sti
sti
sbb
dec
cli
inc
clc
clc
jns
jb
into
push
ficomp
xor
adc
out
push
(bad)
dec
inc
or
mov
(bad)
jmp
out
xor
xchg
into
xlat
shr
xlat
xchg
mov
ins
jecxz
inc
scas
fwait
add
cli
jp
push
sahf
cmc
cmp
push
or
data16
stos
adc
mov
fld
xchg
daa
nop
lea
out
mov
dec
jg
imul
enter
in
inc
adc
pop
xor
adc
push
and
out
push
jp
int
jbe
test
cdq
xchg
hlt
push
(bad)
out
push
cmp
sbb
xor
sub
push
sahf
sbb
xchg
aas
push
cwde
mov
pop
lahf
(bad)
mov
arpl
xchg
mov
(bad)
cmp
pop
imul
lock
jno
sbb
aad
jecxz
dec
in
sub
add
sahf
mov
adc
inc
sbb
inc
xor
fwait
sbb
je
arpl
cwde
sub
push
movs
out
movs
push
sub
(bad)
jne
addr16
mov
inc
xchg
cs
mov
sbb
and
ror
mov
sar
das
add
daa
mov
outs
sub
jge
fs
cmp
pop
rol
icebp
inc
fs
outs
jb
add
pop
div
movsx
xor
(bad)
outs
and
cs
or
lahf
xor
mov
mov
xchg
mov
dec
(bad)
cmp
mov
out
mov
inc
mov
test
xor
xchg
stos
add
dec
fcom
sub
sbb
adc
gs
scas
pop
icebp
(bad)
es
inc
mov
add
mov
sahf
jo
or
add
les
mov
jecxz
loope
imul
or
lock
(bad)
pop
and
sbb
or
mov
inc
cmp
test
mul
jecxz
mov
cmp
sub
adc
sahf
and
ins
mov
cmp
cmp
xchg
jmp
cmps
pop
push
dec
or
push
mov
pushf
jmp
data16
pop
pushf
ja
fwait
jne
pop
xlat
int
repz
add
mov
in
pop
jmp
pop
dec
fld
mov
adc
rcl
pop
add
lea
mov
add
push
add
mov
lods
push
iret
sar
mov
daa
jmp
jbe
ja
in
shl
dec
jae
nop
daa
push
les
mov
push
lock
cmc
inc
in
mov
sub
mov
push
xor
mov
ins
mov
fs
xor
xchg
aas
mov
mov
push
inc
enter
out
push
xchg
sbb
scas
repnz
adc
mov
lock
aaa
xor
sbb
add
out
push
sar
mov
add
mov
or
ss
jge
sub
repnz
cdq
popa
dec
(bad)
call
mov
lea
dec
or
je
shl
fisubr
fidiv
fidivr
jp
sar
sub
sub
lods
jle
movs
jb
and
in
fcom
cld
lods
fst
fild
shl
into
push
test
fcomi
loope
in
sub
cs
retf
push
inc
je
xchg
xchg
gs
pop
pop
mov
cmp
cmp
sub
xor
enter
sub
adc
dec
pusha
sbb
into
or
in
imul
sbb
(bad)
call
pop
pop
movs
mov
in
jl
xor
pop
dec
sbb
shl
or
or
inc
fsub
cdq
pop
mov
aad
div
pop
pusha
into
adc
xchg
inc
jne
jp
imul
retf
hlt
int
ja
inc
lahf
aaa
xor
loopne
aaa
mov
pop
jmp
pop
inc
add
mov
inc
sub
xor
push
mov
into
or
or
push
imul
arpl
mov
jg
test
dec
dec
and
sub
dec
jmp
(bad)
jle
mov
mov
inc
add
movs
nop
or
in
jg
and
jecxz
pop
ret
aaa
pop
iret
xchg
cmps
or
or
cmps
and
out
(bad)
xchg
add
dec
dec
hlt
jno
in
repnz
std
cmp
jp
fdiv
inc
push
adc
xchg
fxch
inc
cmp
rol
jg
xor
lods
mov
loope
dec
xchg
mov
xchg
in
or
mov
sub
cmp
sbb
cs
cmp
lock
or
lea
cmc
mov
jp
popf
cmp
xchg
jns
loopne
xor
cmps
push
fs
iret
frstor
jne
sub
mov
ret
fwait
push
xor
ds
jmp
loope
addr16
mov
sbb
pop
jo
adc
jnp
loope
cwde
call
cwde
in
add
mov
jno
mov
jno
outs
or
ret
shl
sub
cdq
xchg
out
daa
inc
xchg
je
ds
jecxz
mov
mov
scas
adc
lods
dec
lahf
(bad)
fsubr
dec
(bad)
stos
inc
mov
dec
je
jae
imul
dec
out
inc
repnz
imul
push
cld
push
popa
pushf
xchg
not
into
and
ins
test
inc
pop
mov
mov
aaa
xchg
mov
xor
cmp
test
cmp
leave
out
sbb
or
in
xchg
fisttp
mov
sqrtps
dec
mov
dec
xchg
aam
daa
jp
cmp
inc
pop
js
inc
js
xchg
imul
xlat
mov
(bad)
dec
js
pop
cli
cmp
mov
sub
sahf
xchg
(bad)
aas
pop
call
aam
or
fadd
stos
mov
mov
inc
dec
sub
dec
enter
push
mov
sub
pop
xchg
adc
cwde
test
jnp
mov
dec
fucom
or
pop
rol
pop
fidivr
mov
cmp
clc
cmps
adc
xchg
iret
test
shl
fidivr
fs
sub
sbb
test
and
and
pushf
cwde
add
mov
js
(bad)
test
jmp
cdq
jp
mov
les
push
cdq
mov
retf
cmp
clc
dec
xchg
mov
cmp
inc
jl
mov
lock
cmp
cmp
stos
pop
(bad)
pop
xchg
aam
retf
adc
cmc
jb
stc
sbb
and
adc
into
repnz
int3
add
test
call
xchg
int
or
loop
leave
inc
push
cli
data16
out
lds
out
in
nop
es
loopne
push
ins
xchg
pop
mov
push
fld
(bad)
cli
fnsave
xlat
cmp
sbb
inc
mov
loopne
sti
test
push
add
xchg
addr16
aas
pop
adc
mov
or
test
adc
push
adc
pop
popf
mov
and
pop
add
cmps
fild
xlat
in
out
pop
mov
popa
(bad)
into
add
mov
and
clc
sub
sti
mov
xchg
jns
jae
loopne
jle
push
sub
gs
push
aas
inc
mov
sbb
mov
std
and
sar
pop
push
mov
pushf
hlt
jge
xchg
pop
popa
mov
xchg
bound
xchg
stos
adc
mov
leave
sub
mov
mov
sar
sbb
inc
add
mov
mov
je
js
push
cmps
sahf
scas
inc
add
jo
adc
xlat
repz
add
pop
lock
push
cmps
cmp
stos
std
xchg
repnz
jns
xor
mov
cwde
ins
add
xor
out
fsub
mov
test
mov
ret
pusha
cmp
xor
mov
mov
and
and
fstp
stos
inc
ss
mov
pop
jle
pop
repz
dec
cmp
pop
xor
jg
mov
mov
sahf
pop
(bad)
fdivr
enter
mov
mov
imul
cmps
(bad)
xor
aas
int3
hlt
aad
push
and
or
gs
jb
icebp
or
xor
or
mov
leave
adc
sub
repz
mov
ror
shl
add
retf
mov
mov
or
cs
scas
inc
pop
outs
rol
add
or
pop
(bad)
int
pop
pop
pop
push
pop
or
xchg
sbb
fimul
push
adc
jnp
pop
movs
out
sub
es
test
lea
sub
mov
sub
das
inc
pop
ja
push
fsubr
leave
cmp
mov
jns
(bad)
dec
call
xchg
cld
sbb
or
lds
xor
add
ja
sbb
stc
mov
xchg
jecxz
push
into
push
out
mov
das
in
add
es
aam
retf
scas
xor
push
xchg
mov
cmps
xchg
inc
in
and
mov
cmp
jo
xor
out
cmp
ds
jmp
scas
pop
xor
fcmovbe
ficom
xor
xchg
jbe
ss
cmps
fcom
push
lock
xor
add
pop
xor
or
jl
loope
jecxz
sbb
dec
inc
out
adc
adc
or
ins
push
stos
cmps
inc
outs
lahf
jle
xchg
loop
pop
iret
call
into
pop
cld
out
popf
mov
cli
cmp
das
mov
hlt
cmp
or
mov
adc
imul
lea
stos
adc
stc
sbb
sbb
pop
daa
push
sahf
rcr
or
inc
loop
rcr
xchg
jg
das
repnz
pop
xchg
pop
dec
or
das
cmp
cmp
xchg
das
xor
mov
cmp
push
sub
mov
iret
dec
xchg
movs
inc
adc
mov
jae
aaa
test
or
fs
sub
mov
mov
loope
cmp
call
adc
mov
cmp
inc
sub
pusha
xchg
arpl
xor
jmp
enter
sub
movs
dec
jl
jmp
loope
jae
pop
clc
sub
addr16
dec
shr
cmc
push
mov
xchg
cmp
jae
sbb
mov
and
add
lock
or
out
not
fcmovbe
jmp
shl
add
neg
mov
repnz
icebp
das
ss
enter
push
mov
out
es
push
xchg
dec
inc
sbb
fstp
add
repnz
rcr
aas
inc
and
call
mov
(bad)
leave
(bad)
add
and
push
cmp
mov
(bad)
not
add
or
mov
nop
loopne
rcl
fcmovnb
scas
xor
jo
sub
adc
pop
movs
mov
in
adc
ja
(bad)
cwde
cmp
punpckhbw
mov
mov
push
xlat
fcomp
mov
lds
cmps
nop
mov
sbb
loop
clc
cmc
add
push
xchg
in
mov
mov
push
sbb
ja
icebp
out
or
mov
push
test
fistp
mov
jo
retf
sbb
adc
daa
daa
stos
mov
fisubr
add
ror
xor
(bad)
in
(bad)
daa
mov
mov
push
xchg
sub
into
sbb
sbb
mov
das
cld
adc
bound
pop
add
movzx
addr16
test
mov
xor
xor
jnp
sub
dec
outs
fwait
xchg
stos
test
es
clc
adc
fst
(bad)
and
push
int
push
popa
(bad)
nop
les
cld
js
push
xor
pop
push
in
pop
daa
pop
loopne
(bad)
cdq
mov
push
or
ins
lods
mov
sbb
push
cmps
rol
(bad)
and
mov
adc
xor
les
add
cmp
lea
loopne
sub
rol
dec
dec
loop
jmp
(bad)
(bad)
push
or
iret
enter
in
jl
xor
or
pusha
sub
gs
push
xlat
inc
lahf
sbb
lds
jne
test
aas
sub
sbb
jge
pop
loope
je
aas
push
lods
inc
(bad)
outs
lock
sahf
pop
jmp
sub
movs
movs
cmc
aam
push
sub
fcomp
mov
pusha
cli
outs
imul
adc
cmp
in
and
or
and
push
or
ss
(bad)
clc
jp
push
jecxz
stos
sub
jnp
mov
sbb
xchg
xor
data16
mov
adc
sub
aad
and
lea
mov
cdq
ins
add
(bad)
mov
or
scas
iret
xchg
mov
stc
retf
pop
dec
ss
in
mov
mov
data16
jecxz
out
movs
xchg
sbb
inc
push
out
mov
or
push
popa
pop
movs
gs
sbb
test
lea
jne
jno
pop
xchg
outs
stos
icebp
iret
je
in
(bad)
hlt
mov
pop
dec
ds
int
cmps
or
mov
jp
jnp
sti
sbb
jnp
or
jbe
fcmove
mov
cmp
mov
cmp
mov
xchg
lods
fnstcw
popf
pop
rcr
cmps
addr16
dec
sub
dec
pop
xlat
jbe
rol
push
pushf
jmp
cli
mov
push
xlat
adc
adc
jge
sahf
bound
aam
and
cwde
ret
pop
popa
adc
test
pop
push
lods
clc
mov
cld
(bad)
mov
adc
mov
xchg
push
cmp
das
int3
enter
aas
ret
ficomp
xor
and
std
and
rcr
movs
jecxz
cmc
gs
sbb
sub
mov
inc
adc
pop
cmc
movs
sbb
icebp
inc
call
xchg
leave
xor
jl
fist
adc
loopne
jbe
inc
std
in
retf
dec
mov
push
fcomp
stc
loope
or
(bad)
cld
cli
test
xor
out
pop
cmp
(bad)
cmp
fimul
add
icebp
mov
popf
and
ret
mov
ins
push
sbb
lea
mov
bnd
fimul
or
push
ja
dec
(bad)
out
sbb
sub
mov
bound
fcomp
adc
xchg
aam
(bad)
into
mov
mov
in
scas
ret
call
fisub
fidivr
mov
cli
shl
jnp
mov
fiadd
pop
aam
out
push
pop
(bad)
std
xor
fbstp
xchg
jb
mov
mov
add
scas
fidiv
and
in
fadd
in
leave
mov
jmp
xchg
ds
call
lock
xchg
scas
xchg
jbe
add
retf
es
pop
in
jecxz
lods
popa
pop
pcmpgtd
xchg
mov
iret
cmps
fild
movs
rcr
push
cmp
ror
add
aaa
loope
mov
xor
adc
jecxz
sub
cmp
sbb
add
push
mov
ja
call
lea
xor
push
jne
mov
mov
mov
in
push
cmc
retf
rol
dec
enter
adc
and
test
adc
add
xor
sahf
mov
fidivr
sbb
nop
pop
adc
dec
mov
xlat
add
push
push
mov
mov
fcomi
pop
int3
ret
out
(bad)
std
mov
mov
xor
popa
ror
and
add
adc
icebp
xor
nop
dec
xchg
add
test
dec
sbb
call
or
push
add
cmp
mov
add
xor
pop
jns
data16
loopne
scas
push
movs
mov
lods
xchg
xchg
mov
nop
inc
pop
dec
mov
add
xchg
push
fisub
ins
lock
and
enter
movaps
mov
dec
xchg
push
ror
and
aas
xchg
pop
xchg
js
(bad)
pushf
mov
in
fstp
add
aaa
push
jo
cmp
sbb
lea
mov
or
jmp
pop
in
sahf
and
rol
out
pop
xchg
sahf
lahf
cld
retf
test
jecxz
xor
jp
fbld
arpl
dec
sti
fsub
bound
lahf
in
jmp
sbb
(bad)
stc
sbb
push
push
sub
jae
ret
sub
sub
xchg
mov
dec
mov
(bad)
cmp
mov
rcr
fldenv
cmp
and
mov
inc
icebp
sbb
inc
pop
push
push
bound
bound
ins
mov
mov
xor
mov
mov
push
sub
lock
jo
push
adc
mov
xor
push
push
mov
sbb
in
scas
inc
ret
rol
cmp
mov
and
aaa
jbe
mov
fld
sub
mov
stos
xchg
and
pop
je
jmp
mov
mov
add
sti
in
and
xor
fist
data16
mov
in
cmc
xchg
imul
xchg
lahf
pop
pushf
popa
out
push
fimul
add
mov
mov
add
shl
add
xor
sti
push
inc
ss
push
loopne
out
cmp
fisub
shl
test
mov
jg
out
push
add
(bad)
(bad)
ins
(bad)
(bad)
les
or
or
ds
adc
lea
jecxz
xchg
into
outs
dec
fiadd
push
inc
and
fwait
neg
xchg
dec
pushf
aam
xchg
(bad)
arpl
xor
loop
inc
add
arpl
pop
xchg
cmp
bound
add
test
cmp
pop
mov
or
cs
jmp
pop
(bad)
dec
(bad)
mov
(bad)
xor
push
std
aaa
jne
das
mov
adc
mov
rcr
mov
jmp
retf
cmp
ins
mov
xor
in
loope
jmp
into
icebp
xchg
cld
scas
dec
xchg
mov
cmps
or
or
repz
aam
push
daa
jmp
enter
xchg
inc
cmp
adc
rol
sub
call
fwait
out
lea
shl
mov
and
xchg
aad
cdq
sbb
push
test
push
jl
lahf
mov
dec
sbb
and
sqrtps
add
push
adc
leave
ins
inc
add
idiv
ja
sub
xor
inc
and
fs
mov
pop
enter
frstor
cmps
mov
fld
mov
popf
dec
arpl
pop
in
in
xor
(bad)
xor
dec
cli
mov
or
mov
cmp
pusha
mov
inc
lods
mov
cmp
call
movs
mov
in
cmps
out
sbb
inc
fxch
outs
and
fadd
retf
pop
and
jmp
rcl
cmp
mov
mov
cmp
bound
and
outs
and
dec
dec
jmp
push
popf
(bad)
push
ss
outs
(bad)
test
pop
out
jge
shr
push
pop
(bad)
sbb
dec
push
xor
add
sub
push
mov
mov
inc
push
and
ins
js
out
push
in
mov
mov
cdq
add
lahf
pop
add
mov
sbb
mov
addr16
fist
mov
rcl
pop
test
cmps
jmp
or
push
lahf
mov
push
scas
mov
adc
sbb
jecxz
push
mov
icebp
jo
jne
ror
imul
push
inc
pushf
dec
mov
ror
pop
push
gs
push
jge
add
fs
in
pushf
imul
out
je
adc
imul
jno
add
adc
sahf
inc
pushf
(bad)
sub
and
sbb
mov
pop
xor
clc
inc
test
(bad)
call
or
cli
popf
cwde
lahf
mov
xor
into
int
test
and
dec
dec
ins
loopne
pusha
repz
fs
test
pop
hlt
mov
add
or
clc
and
(bad)
dec
inc
(bad)
sub
xor
cmps
cmp
cmp
sets
cmp
arpl
loop
dec
add
and
repz
int
fmulp
xchg
in
mov
adc
cwde
adc
sbb
pop
mov
inc
test
mov
pop
icebp
call
rep
loope
or
jns
ja
ja
aaa
sub
lock
mov
lock
adc
and
sahf
ins
add
push
fiadd
xlat
sbb
mov
stc
ja
jo
imul
mov
xor
out
nop
xchg
xchg
outs
fs
div
mov
data16
(bad)
leave
je
stos
xchg
out
and
addr16
js
imul
add
jne
or
nop
jnp
(bad)
sub
mov
or
cmp
ror
loop
ds
add
and
add
push
cmps
test
add
inc
ror
add
push
dec
xor
stos
add
dec
mov
push
icebp
push
stc
or
inc
inc
repnz
sub
ins
leave
mov
or
pop
inc
out
sbb
push
pushf
aam
in
pop
dec
lods
cmps
dec
popa
pop
aaa
jg
push
adc
mov
push
lods
ins
int3
call
inc
sub
(bad)
dec
cmp
inc
add
popa
sbb
arpl
push
sbb
aad
jg
mov
movs
popa
mov
xchg
pop
jno
xchg
jl
pop
add
ins
(bad)
mov
outs
in
into
mov
(bad)
mov
jmp
mov
div
cmps
test
xchg
add
outs
sbb
or
frstpm(287
fistp
sbb
add
xchg
(bad)
push
movs
out
lds
add
push
xchg
loope
mov
xor
inc
adc
xchg
ds
fcomp
arpl
test
cwde
arpl
shr
cmp
xchg
dec
call
sbb
mov
in
out
lods
in
cdq
into
lock
sbb
mov
or
dec
in
mov
sbb
jno
or
sbb
int
and
jae
inc
les
adc
inc
aad
mov
out
jecxz
in
mov
cmp
in
mov
cmp
out
jbe
outs
movs
add
ja
push
xchg
jle
sbb
cmp
pop
or
dec
imul
push
mov
cld
mov
mov
add
cmp
lea
out
sub
leave
lods
inc
mov
xchg
outs
push
and
sub
xchg
pop
retf
loopne
mov
push
push
xor
xchg
mov
push
add
cmp
push
cmc
adc
pop
mov
cmp
rol
ret
jb
xchg
sbb
cmp
repnz
push
dec
outs
cmp
push
loop
dec
mov
add
out
dec
not
and
mov
cmp
and
ins
dec
jl
xchg
add
cdq
mov
daa
pop
gs
inc
jno
push
sbb
imul
scas
clc
(bad)
in
movzx
das
js
xchg
cmp
mov
or
out
xchg
mov
push
pop
and
shl
(bad)
lahf
test
fdivr
pop
mov
dec
jecxz
pusha
mov
cs
test
xor
fs
rol
loope
leave
mov
test
clc
add
outs
xor
test
nop
les
out
sub
add
jl
retf
cmps
push
mov
xor
mov
push
and
and
mov
adc
jbe
outs
ds
and
jmp
mov
sub
jmp
xor
aam
mov
retf
mov
inc
add
lods
test
sti
iret
retf
int3
mov
jg
fsubr
pop
jecxz
call
push
loop
fiadd
cmp
jmp
mov
gs
fsubr
sbb
dec
pop
push
nop
push
add
clc
scas
xchg
fidivr
inc
xchg
pop
fs
mov
adc
ror
or
push
popa
adc
xor
repz
jg
sub
daa
push
repz
jnp
adc
jmp
cs
jle
xor
inc
jnp
cli
or
add
mov
fs
push
adc
and
push
mov
pop
gs
cli
jno
(bad)
mov
xor
adc
ret
xor
pop
pop
xchg
mov
test
push
jecxz
retf
call
cmps
pop
or
std
add
or
push
out
sbb
mov
adc
mov
add
sbb
loop
xor
push
mov
add
xchg
fldcw
adc
inc
jnp
lock
sar
adc
dec
ficom
cmp
ja
outs
ins
loop
or
in
call
data16
push
mov
sbb
and
out
xchg
std
pop
rcr
repnz
xor
scas
and
sbb
stc
inc
retf
into
call
mov
movs
not
lds
repz
xlat
push
in
pop
mov
cmp
addr16
add
scas
sbb
adc
fs
or
jecxz
mov
addr16
shl
movs
jns
jmp
js
dec
lock
dec
scas
push
xor
xlat
xchg
pop
cmp
jmp
jmp
xchg
xor
aaa
or
data16
xor
jecxz
ror
mov
popf
jmp
call
push
adc
push
shr
or
movs
and
ja
mov
mov
test
imul
fsubr
call
js
pop
inc
mov
push
or
shr
out
and
add
bnd
jmp
jnp
xchg
dec
ja
pop
and
xchg
cmps
into
lods
push
nop
sahf
outs
mov
shl
inc
xchg
shl
sbb
repz
shl
pop
movs
xchg
fdivp
scas
jmp
or
jbe
mov
test
movs
and
add
push
je
jns
stc
or
mov
add
add
imul
mov
or
lods
sub
pop
dec
(bad)
nop
enter
int
retf
cmp
mov
mov
or
mov
xchg
imul
jo
mov
ret
and
adc
aam
test
in
push
cs
das
or
mov
and
mov
and
mov
push
mov
mov
(bad)
aas
out
push
cdq
stos
push
adc
mov
adc
pop
call
in
shr
repnz
adc
or
inc
or
jmp
pop
popf
test
mov
es
inc
inc
mov
mov
inc
scas
mov
jno
cmc
das
mov
pop
(bad)
pop
or
cmc
inc
pop
mov
mov
cmp
or
jno
or
hlt
sbb
test
icebp
scas
icebp
cmp
js
adc
(bad)
xor
outs
outs
jae
cmps
dec
push
sbb
inc
cmc
mov
inc
faddp
inc
dec
jae
popf
mov
lds
fstp
mov
xchg
test
pop
in
jnp
pop
jge
out
xchg
push
add
pop
movs
sbb
loopne
cmp
push
pushf
or
stos
add
pusha
aam
cmp
sub
pop
shl
jge
inc
fisttp
pop
retf
sbb
and
dec
cmp
aad
daa
hlt
pop
sar
imul
das
cdq
out
push
mov
mov
push
lock
sub
mov
pusha
ror
dec
and
cdq
xchg
pop
xor
cmp
cmps
stos
xor
sti
push
test
cdq
dec
sub
gs
fadd
int
int
pop
pusha
sbb
inc
fdivp
sbb
aad
xchg
mov
fiadd
mov
inc
mov
xor
sbb
cmps
sbb
repnz
and
leave
and
cli
cmc
jle
cs
cmps
fcomp
dec
mov
jle
push
test
mov
in
iret
fnstsw
sbb
mov
lea
int
repnz
and
and
loopne
aam
cld
test
push
pop
in
xlat
call
test
stos
mov
or
adc
or
mov
and
sub
call
and
dec
loop
xchg
(bad)
mov
iret
sbb
outs
mov
cmp
jmp
mov
mov
fdivr
pop
shl
pushf
repnz
adc
loope
and
cld
je
sub
jb
inc
or
cwde
icebp
dec
jecxz
xchg
arpl
inc
bnd
sbb
sub
hlt
fcomp
fsubr
icebp
aam
jne
(bad)
repz
call
dec
sbb
mov
cwde
inc
mov
pusha
mov
push
mov
es
push
jp
lock
pop
ins
adc
stos
xlat
push
mov
mov
mov
add
or
neg
out
sbb
pop
imul
push
cmp
add
das
mov
retf
cmp
mov
test
iret
and
(bad)
cli
xor
dec
cmp
mov
xor
inc
sar
call
repz
jae
repnz
cmp
out
loop
mov
xchg
fidiv
jecxz
ffreep
jae
lahf
mov
and
jle
dec
cmp
icebp
mov
mov
into
pop
mov
inc
push
jb
mov
pop
je
adc
and
test
add
fwait
jne
in
sub
add
aaa
mov
push
dec
pop
adc
push
xor
sbb
icebp
dec
jne
push
fmul
add
mov
in
scas
ror
or
add
xchg
jg
dec
vpsrad
push
shr
sahf
test
push
cs
sub
sahf
and
push
sub
xchg
call
add
push
retf
fwait
pop
adc
mov
or
push
jle
idiv
add
pop
fsubr
loope
inc
stc
adc
ja
cdq
jmp
push
sub
lock
xchg
push
xchg
cmp
add
icebp
mov
ret
sbb
xchg
ja
test
repz
neg
cmp
lock
out
mov
xchg
mov
xchg
dec
pop
inc
dec
sbb
js
adc
sbb
mov
inc
xchg
lds
je
add
add
adc
clc
pop
in
mov
or
add
call
mov
push
rol
js
aam
test
int
retf
sub
out
sub
jne
lods
dec
cmps
in
cli
and
pusha
sub
sbb
dec
adc
lea
mov
test
movs
mov
wrmsr
es
xchg
popa
lock
xor
sub
lods
imul
pusha
iret
jecxz
xlat
rcr
push
leave
js
cwde
sub
stc
pop
sbb
dec
fs
pop
(bad)
pop
sub
fstp
inc
xor
jbe
push
or
aaa
inc
aam
sbb
fidivr
mov
cmp
ror
mov
mov
mov
into
mov
adc
data16
mov
jmp
xor
inc
mov
in
icebp
xchg
add
mov
sub
aaa
mov
test
in
aas
lods
fdiv
fwait
data16
mov
push
mov
add
dec
and
out
aaa
jg
xor
mov
fstp
sti
pop
bound
sbb
add
js
call
cmp
pop
repz
adc
and
xor
pop
iret
or
dec
bound
cdq
scas
pop
icebp
lods
repz
je
xchg
pop
add
int
and
sbb
xor
retf
add
adc
stos
test
add
test
(bad)
push
pop
mov
out
inc
and
cmp
fwait
fwait
xlat
pop
push
out
mov
inc
popa
push
jnp
push
sub
inc
inc
inc
inc
pop
push
js
sbb
sbb
repz
pop
adc
mov
pop
lods
dec
clc
sar
sti
pop
test
ret
aad
jns
aas
stos
stos
and
dec
jo
add
inc
add
xor
mov
push
out
lahf
xchg
mov
pop
movs
mov
push
pop
(bad)
push
adc
and
and
(bad)
adc
add
das
mov
cmp
and
ins
stos
pop
mov
push
popf
or
xchg
stos
lods
cmc
pop
cmps
pop
std
jecxz
xchg
pop
fistp
aas
shr
jne
mov
sub
inc
das
or
popf
push
mov
fild
sbb
xlat
adc
xor
sub
push
scas
cmp
ret
and
add
inc
fild
cdq
es
adc
shl
push
xchg
sar
lods
inc
push
mov
dec
in
lahf
das
inc
mov
push
aas
iret
or
int3
xchg
mov
nop
xchg
neg
lods
push
sub
loopne
push
xor
les
pop
xchg
ins
push
xchg
scas
and
jo
mov
outs
mov
inc
mov
sub
nop
cmp
cmp
push
mov
pop
pop
fidiv
xchg
cmp
and
dec
fistp
pop
test
(bad)
jmp
add
into
cwde
pop
or
ds
sub
adc
jbe
sub
cmps
push
add
stos
jmp
loope
sbb
(bad)
clc
push
mov
leave
(bad)
jmp
aas
retf
jmp
jnp
pop
and
jp
mov
ror
cmp
adc
(bad)
leave
ins
mov
xlat
sub
mov
ins
xchg
rcr
(bad)
arpl
(bad)
nop
jb
jo
xchg
mov
add
add
sub
enter
add
mov
retf
pop
aas
xor
fild
enter
cmp
sub
stos
adc
lea
mov
inc
or
arpl
icebp
ins
inc
test
leave
cmp
lea
lods
popa
cs
jbe
or
sbb
in
lahf
push
imul
retf
xlat
fdecstp
pmaddwd
in
je
sbb
fadd
fs
int
inc
pop
jge
mul
push
test
mov
inc
das
mov
add
xchg
and
xchg
sbb
dec
rcr
dec
sub
jb
or
es
mov
jb
add
mov
jns
daa
cmp
test
pop
add
repnz
pop
and
pusha
dec
push
scas
outs
out
pop
ss
stc
mov
dec
inc
(bad)
add
xor
mov
fninit
in
or
xor
scas
xchg
bound
imul
xor
adc
test
mov
jmp
jnp
enter
(bad)
repnz
mov
repnz
adc
and
in
test
add
mov
mov
or
push
test
and
and
mov
addr16
jb
out
mov
inc
push
push
or
(bad)
gs
mov
mov
into
sbb
mov
pop
mov
shr
ins
xchg
fistp
cwd
and
pop
push
push
jnp
push
jb
mov
jbe
mov
jg
pop
imul
fcmovnb
jae
sbb
jp
icebp
pushf
sub
xchg
push
push
adc
je
hlt
push
push
ss
jge
movs
or
pop
into
xor
push
ficom
cld
cmc
jmp
jge
jp
mov
mov
mov
dec
mov
jp
pop
lods
cmps
enter
or
(bad)
mov
(bad)
sub
mov
mov
jns
ins
add
inc
push
in
lock
jae
in
and
lods
xchg
fadd
adc
jnp
imul
imul
cmp
pop
imul
dec
xor
loop
dec
rep
mov
fnsave
mov
sbb
repnz
outs
push
xchg
in
add
pop
retf
push
pop
fst
idiv
rcl
ror
loop
inc
push
pop
fcmovnb
sbb
or
push
push
lds
in
xchg
(bad)
scas
xor
xor
cld
jecxz
jecxz
jle
movs
xor
mov
xor
add
ss
iret
pop
repz
les
int3
cmp
imul
inc
xchg
adc
cmp
add
minps
jl
push
fstp
aas
cpuid
int
std
test
aad
sub
pop
jg
fadd
push
addr16
and
mov
pop
fild
ret
loop
call
push
or
mov
ja
hlt
cmp
mov
jae
sbb
div
mov
retf
aaa
add
jge
cmp
and
pusha
cmps
inc
popf
adc
adc
ins
push
cmp
test
repz
shld
xor
loop
int3
sub
xchg
fsubr
lods
adc
sbb
jecxz
and
mov
idiv
sub
in
mov
mov
add
je
inc
cld
into
push
jne
and
mov
das
aaa
mov
loop
movs
sbb
pop
push
push
imul
sub
adc
mov
mov
jnp
aaa
push
dec
in
add
lahf
xchg
adc
add
dec
jmp
pop
mov
dec
mov
cmp
mov
fadd
fnstsw
test
(bad)
popa
ror
sbb
inc
pop
inc
shl
cmp
jg
xchg
pusha
adc
cmc
mov
adc
call
push
mov
ja
cmp
inc
retf
test
mov
cwde
into
in
push
call
fsubr
dec
mov
mov
cmps
mov
leave
cdq
in
sub
cmp
test
out
int
and
xor
shr
jmp
outs
ja
xor
gs
pop
(bad)
jle
push
pusha
add
fdiv
xor
mov
rcr
mov
cmp
and
inc
cmc
mov
addr16
dec
cs
popf
push
sar
ret
div
inc
dec
mov
xchg
jbe
call
clc
adc
std
mov
xchg
xchg
xor
cmc
sti
cmp
les
sbb
inc
adc
or
imul
xor
or
mov
test
stos
clc
fidiv
std
test
xor
xor
inc
in
sbb
ds
add
sbb
outs
fs
jo
sub
in
adc
inc
jle
jecxz
sbb
mov
sub
dec
imul
stc
jle
cli
lock
push
mov
push
lods
add
scas
aad
push
int3
out
cmp
xor
dec
repz
loopne
loopne
xchg
push
push
call
and
fdivr
xor
add
mov
test
adc
cmps
ss
int
mov
add
aam
and
or
std
daa
adc
dec
ret
jnp
nop
xchg
xchg
sub
aaa
stc
add
or
pop
out
aaa
fs
std
movs
stos
outs
retf
fld
ret
inc
sbb
mov
pop
adc
cmovnp
push
push
push
dec
loop
fmul
das
inc
mov
mov
imul
scas
cmps
sub
ins
mov
in
mov
fld
popa
sbb
in
xchg
cli
inc
es
sub
mov
mov
popa
movs
xchg
sbb
retf
leave
xchg
imul
fwait
into
jge
mov
movs
pushf
xchg
push
das
mov
push
sbb
pop
addr16
or
cli
sti
repnz
cmp
mov
jl
shl
inc
sub
sub
xchg
cmps
xor
dec
mov
xchg
and
(bad)
jmp
mov
loop
les
mov
lods
adc
adc
cmp
lds
sbb
and
fld
sub
repz
push
call
xchg
mov
xchg
imul
icebp
mov
mov
cmc
pop
xor
dec
or
xor
cdq
pop
inc
(bad)
jns
add
cmp
xchg
lahf
clc
les
pop
pop
retf
imul
cmp
fdiv
adc
cmp
mov
and
pop
lods
xchg
xchg
mov
cmc
iret
stc
in
iret
push
jmp
pop
mov
inc
ret
cmp
jb
mov
loope
rol
dec
and
(bad)
jnp
test
mov
add
adc
aas
dec
dec
push
rcr
xchg
push
mov
imul
jb
xor
mov
ret
fcom
fisubr
out
(bad)
(bad)
addr16
(bad)
fnsave
and
in
sub
cwde
add
jo
mov
or
cmps
lds
push
pop
inc
and
add
jmp
xchg
sub
jns
or
sti
pop
outs
or
mov
repz
dec
xchg
addr16
add
or
or
cmp
mul
mov
add
int3
push
(bad)
and
dec
xchg
or
jmp
mov
cmp
pop
cwde
and
addr16
push
mov
rcl
mov
frstor
outs
rol
sbb
push
sahf
sbb
stc
out
mov
xor
fisttp
lods
or
imul
enter
(bad)
call
mov
push
inc
pop
popf
pop
jns
xor
inc
mov
sbb
movs
push
cmps
sbb
xchg
add
ins
jno
xchg
mov
mov
ror
and
movs
in
adc
push
hlt
mov
xchg
sti
popa
jo
push
aas
xchg
push
or
aad
mov
push
push
rcl
mov
cmp
fs
retf
pop
jmp
sbb
fld
dec
sti
mov
xor
sbb
mov
mov
divps
fwait
jp
(bad)
(bad)
sbb
xor
pop
fwait
add
enter
stos
in
jle
mov
xor
cmps
xchg
sbb
pop
icebp
cmp
sbb
cmps
movs
jecxz
and
and
push
pushf
mov
cmp
sahf
mov
and
jo
jno
lods
lea
add
xchg
stc
sub
fst
ja
sbb
sub
test
repnz
leave
ins
adc
inc
push
jbe
pop
mov
int3
pop
ficomp
push
daa
(bad)
fild
add
xor
or
out
push
sbb
mov
in
dec
inc
cmps
inc
out
ror
add
mov
add
ins
lahf
jo
mov
int
sub
test
in
pop
jl
dec
cmps
ret
fstp
mov
xchg
mov
and
xchg
dec
out
es
fwait
stos
test
cmp
call
(bad)
sar
enter
jp
pop
xor
mov
and
fidivr
mov
mov
xchg
inc
mov
loope
mov
mov
cmps
mov
pop
mov
or
mov
stos
jae
mov
adc
add
std
clc
lea
(bad)
pusha
mov
icebp
dec
dec
xchg
cmps
jae
sbb
fcom
pop
cli
in
fidiv
fs
jecxz
add
jo
dec
push
fxch
pop
stos
push
cmp
cmp
mov
imul
fcomip
popa
jge
xchg
jmp
add
cld
push
xchg
sub
xor
fsub
(bad)
ins
cmp
pop
sub
cs
cmc
aam
test
daa
mov
cdq
jne
mov
pop
cmps
jmp
repnz
mov
in
add
add
mov
lods
test
jne
inc
and
sbb
or
lock
mov
neg
xor
cs
or
xchg
push
stos
xchg
mov
sbb
push
or
dec
leave
inc
ja
es
hlt
repz
std
rcr
push
jns
fnstsw
lods
(bad)
jo
mov
js
(bad)
mov
add
fiadd
cwde
or
mov
das
sub
xchg
mov
aad
ror
xchg
sbb
xchg
push
sbb
inc
xchg
mov
sub
adc
sub
in
frstor
fld
mov
lods
adc
inc
jae
shr
ja
adc
loop
jmp
dec
daa
in
mov
scas
nop
sub
loope
(bad)
mov
xor
adc
jecxz
inc
pop
(bad)
rol
add
fwait
aas
popf
xchg
loope
inc
data16
push
sbb
enter
mov
jb
inc
sbb
xchg
pop
lds
in
pop
push
dec
sar
cmc
add
sbb
repz
movs
outs
inc
aas
jb
adc
pop
adc
ss
pop
lea
pushf
gs
outs
shl
shl
xchg
mov
call
aad
leave
push
pop
or
cmp
test
xchg
cwde
mov
mov
jae
cmp
xlat
ja
shl
cmp
add
add
and
loope
add
push
retf
out
inc
ss
enter
loop
imul
jmp
test
xchg
pop
stc
push
cmp
loope
repz
js
shl
test
sar
and
sbb
pop
and
jne
es
(bad)
gs
mov
mov
mov
xor
jns
movs
outs
adc
sahf
mov
or
(bad)
cmps
cmc
xchg
jbe
loop
xchg
jae
dec
mov
lahf
data16
push
imul
or
add
sub
bound
lods
sub
arpl
retf
mov
xchg
jle
sbb
cs
daa
push
xchg
imul
fisttp
mov
pop
jnp
mov
int
loope
in
lods
xchg
inc
xchg
and
into
mov
xchg
fmul
repz
sub
xor
lock
ret
aam
je
push
cmps
push
shl
addr16
leave
addr16
shl
and
push
jecxz
sub
sbb
cdq
cmp
sub
icebp
and
mov
fsub
jns
pusha
lea
push
sbb
cmp
push
mov
(bad)
(bad)
push
and
into
or
je
xor
imul
mov
shl
push
mov
inc
xchg
sub
aas
fiadd
out
jp
xlat
sub
lock
xor
lea
push
clc
jne
out
enter
lock
(bad)
cli
in
mov
jae
dec
inc
clc
sub
mov
sbb
daa
aaa
push
aas
cmps
mov
jmp
icebp
loopne
inc
nop
jg
xchg
push
inc
xor
push
call
adc
xlat
addr16
jle
or
xchg
push
fsubr
xor
mov
stc
cmp
and
je
stc
mov
arpl
or
push
pop
not
jg
scas
(bad)
sub
out
fdivr
xor
cmps
ins
dec
inc
sub
pushw
es
lods
sub
dec
fcmovnu
(bad)
ins
in
pop
in
hlt
call
adc
adc
push
mov
(bad)
jecxz
mov
shl
fistp
loope
add
es
rep
out
movs
cmps
dec
pop
loope
sub
int
sub
or
mov
push
push
pop
add
scas
push
repnz
retf
push
mov
rcl
jp
(bad)
clc
mov
bound
(bad)
push
stos
stos
mov
stos
dec
ficomp
jno
push
add
daa
push
mov
adc
sub
cmps
xchg
and
jmp
hlt
in
xchg
jmp
into
or
dec
mov
adc
jmp
push
mov
add
dec
jnp
jp
pop
xor
stos
jnp
gs
movs
out
xchg
jne
in
lods
aaa
dec
std
jmp
into
and
loope
cmp
into
push
pop
sub
pusha
dec
jge
stos
pop
das
nop
cmp
(bad)
fadd
test
pop
dec
or
or
retf
fs
stos
and
add
add
icebp
cli
loop
fsub
pusha
xor
or
movs
jg
ret
mov
jmp
pop
(bad)
ret
lods
out
lods
pusha
stc
cmp
and
loopne
leave
pop
repz
xchg
dec
leave
xchg
dec
outs
movs
enter
push
or
mov
mov
in
jo
mov
stos
jge
dec
sub
rcl
gs
adc
xor
not
pop
pop
imul
or
out
mov
ret
jbe
sub
ret
ret
mov
pop
test
jae
mov
test
jg
arpl
sbb
push
cdq
mov
jne
xchg
enter
inc
push
loope
and
sbb
add
ret
scas
scas
cmps
ss
pop
clc
or
mul
xchg
pop
clc
xchg
mov
out
adc
xchg
ret
das
mov
xchg
dec
push
jmp
sbb
inc
push
test
cwde
pop
movs
dec
inc
out
mov
std
fadd
push
xchg
(bad)
mov
in
xchg
add
outs
xchg
push
es
push
mov
icebp
nop
sub
xor
in
std
push
ret
inc
add
pop
setno
jl
xor
adc
push
push
les
mov
mov
pop
pop
in
(bad)
xchg
or
adc
mov
and
mov
and
mov
in
dec
pop
movzx
cdq
sbb
xchg
and
or
or
ins
xchg
mov
jnp
mov
popa
cmps
push
in
sub
jbe
adc
or
int3
adc
clc
adc
push
sub
movs
inc
pop
mov
add
popa
pop
mov
adc
mov
sbb
mul
or
dec
adc
out
dec
sar
sbb
rol
es
gs
xor
scas
sub
jb
mov
cmc
push
popa
in
lods
jecxz
outs
adc
jno
inc
cmps
mov
cdq
sbb
imul
dec
cmp
xor
cmp
xor
sti
jl
je
cmp
sbb
mov
mov
aas
cmp
retf
inc
sbb
out
dec
rol
cs
pop
jmp
jnp
mov
inc
shl
aam
xlat
mov
jo
sbb
xchg
fst
sub
out
mov
cmp
push
mov
stc
mov
add
mov
inc
adc
nop
add
sub
sub
rol
inc
stos
sub
pop
pop
aaa
jne
dec
into
jbe
fnstsw
push
jge
push
comiss
lds
jo
int
xor
sbb
sub
sub
lods
js
push
inc
jp
call
sub
cld
stos
fnstenv
push
retf
out
imul
cmp
push
outs
adc
out
(bad)
mov
push
shl
cmc
(bad)
mov
aad
sub
mov
jle
cmp
jge
inc
lea
jp
movs
cli
imul
push
int
jmp
pop
dec
adc
pop
sbb
sub
dec
fsubrp
nop
je
(bad)
lds
xor
sub
jge
mov
ins
cmps
adc
and
ins
jbe
mov
lods
gs
cmps
mov
test
xchg
jl
mov
lods
push
dec
inc
push
sub
mov
sub
mov
jbe
repz
xor
dec
jo
pop
xchg
or
fnsave
jmp
stos
aas
cmp
hlt
xchg
hlt
xor
pusha
imul
sbb
ficom
cmp
scas
cmp
int
adc
(bad)
adc
pop
sbb
int
dec
ins
sub
dec
and
mov
push
fsubr
aas
jecxz
jb
cwde
add
arpl
fwait
cmps
or
pusha
fiadd
or
mov
outs
xor
in
aad
stos
sbb
jbe
ret
into
cmps
push
add
mov
jbe
mov
or
xchg
movs
es
out
mov
dec
xor
out
cmps
xchg
mov
out
out
sbb
cmp
add
push
jge
dec
jge
lods
push
dec
dec
icebp
mov
jnp
ja
ret
outs
fcomip
cmps
test
aam
mov
adc
pop
xchg
int
cmp
push
push
xor
adc
fmul
mov
fcmovne
push
popa
mov
ror
jmp
sti
(bad)
push
(bad)
std
sub
pop
lock
(bad)
ins
in
ins
sub
and
xor
ret
fsubr
jmp
mov
cmp
jl
jp
jecxz
add
pop
out
push
ins
test
sbb
fstp
xor
xor
in
paddw
(bad)
fcmovu
int
cwde
mov
out
xor
addr16
mov
dec
mov
or
jle
jno
test
mov
or
out
xor
(bad)
rcr
in
adc
adc
push
test
(bad)
jmp
shl
cdq
inc
xchg
jmp
fisubr
cmps
push
add
pop
scas
mov
js
sub
ja
and
sbb
into
loope
sub
push
fwait
pop
xchg
xchg
dec
stos
or
cmp
cmc
sub
push
cmc
movs
and
dec
sub
retf
ret
dec
in
loop
aad
lds
ds
fadd
or
mov
in
movs
add
push
imul
adc
xor
cdq
push
into
dec
adc
jge
mov
lock
into
pop
cmps
push
sbb
or
pop
xor
enter
jmp
adc
repnz
push
jo
test
icebp
adc
jecxz
pop
lock
js
pop
ins
add
and
and
jns
inc
dec
mov
in
adc
pop
jl
retf
shl
add
fiadd
arpl
and
stos
pop
adc
sbb
test
loopne
das
sub
out
pop
pop
cdq
dec
movs
mov
dec
test
stos
pop
xchg
fcomp
popa
sub
out
pop
inc
out
adc
xchg
cwde
sbb
ins
or
jne
cwde
repnz
push
pop
jnp
aam
inc
out
or
add
add
push
jbe
cwde
add
repz
ret
cmp
mov
popa
pop
es
cmc
add
repz
loopne
or
mov
mov
push
push
jge
and
int3
xor
cmp
lods
js
sar
push
xchg
dec
mov
adc
ret
hlt
inc
cmp
(bad)
leave
dec
jle
mov
push
cmp
mov
sbb
and
xchg
imul
inc
push
jl
mov
sub
dec
out
lock
and
mov
pop
push
dec
xor
fcmovbe
jg
das
and
inc
jge
addr16
in
fidiv
xchg
jnp
push
adc
cmps
mov
ret
out
add
call
jge
jae
xchg
jmp
pop
sbb
out
mov
das
cmp
and
sbb
jno
stos
xchg
push
(bad)
in
sbb
inc
loopne
sub
cs
adc
mov
(bad)
add
nop
lea
inc
xchg
mov
sub
sbb
ror
mov
es
mov
rol
popa
or
push
mov
fisub
xchg
or
cmp
sub
out
dec
dec
and
xchg
mov
or
fwait
push
int3
out
addr16
fisttp
dec
dec
sbb
sub
vunpckhps
mov
sti
in
cmp
cmp
nop
inc
call
and
repnz
dec
mov
jmp
ins
xchg
test
ja
(bad)
cmp
lea
mov
popf
dec
add
inc
popa
lea
push
xchg
xchg
xor
aam
jp
pop
fisubr
pop
inc
mov
in
sub
aad
jmp
mov
push
fmul
mov
push
aaa
stc
and
daa
fs
jno
jecxz
(bad)
adc
icebp
and
loop
mov
lock
sbb
fdiv
inc
(bad)
iret
mov
fsubr
add
sbb
xor
xchg
xor
mov
clc
and
enter
xchg
ror
jp
int3
pop
xor
mov
lea
movs
xor
je
mov
imul
jmp
clc
sti
imul
cmp
stos
cs
cmc
movs
sbb
outs
retf
outs
pop
sub
pusha
sbb
lahf
push
xor
jmp
retf
outs
add
mov
mov
shr
hlt
push
fiadd
popf
and
and
pop
mov
lahf
push
adc
adc
ins
mov
aaa
in
lods
mov
adc
mul
and
sub
retf
leave
mov
inc
cli
ja
movs
cmp
push
mov
sbb
and
fcom
mov
pop
ror
fs
xor
pop
out
dec
xor
mov
in
mov
push
adc
int
sbb
sbb
pop
out
pop
imul
rcl
fst
pop
mov
xchg
lahf
mov
ss
or
rcr
or
xchg
pop
cmp
adc
lock
mov
in
lahf
rol
sti
xchg
inc
cld
mov
dec
xchg
inc
pop
inc
fs
jecxz
(bad)
xchg
mov
and
xchg
xchg
outs
adc
xor
sbb
jns
mov
out
adc
mov
push
addr16
clc
pop
shl
das
dec
hlt
mov
(bad)
jo
add
xor
daa
push
add
outs
lds
mov
inc
lods
add
sbb
mov
cmps
ror
push
ja
pop
retf
rcl
dec
fimul
cwde
xchg
mov
pop
jmp
les
in
sbb
jno
fsub
rcr
or
pop
push
int
sbb
cmp
xor
iret
mov
dec
push
shl
jmp
pop
imul
(bad)
lods
imul
xlat
(bad)
scas
and
adc
cmps
pop
in
xor
xchg
out
adc
or
xchg
jnp
ret
in
ins
mov
call
lods
cmp
mov
adc
mov
mov
mov
sub
or
add
movs
outs
les
test
pop
cmp
loop
ss
dec
movs
xchg
mov
(bad)
sub
neg
mov
mov
xchg
fadd
pusha
lock
imul
or
add
mov
retf
dec
xlat
repz
push
lds
mov
mov
das
dec
movs
xor
lahf
test
push
arpl
cmc
(bad)
div
outs
adc
jo
(bad)
cmps
call
jo
out
jae
xor
jmp
mov
xor
mov
mov
repz
(bad)
sahf
call
arpl
push
aam
pop
rol
inc
aaa
adc
rcl
enter
pop
loop
int
cs
div
mov
sub
hlt
cmp
fstp
ret
jno
cmp
ret
jg
in
xchg
test
imul
xor
jmp
inc
push
pop
shr
push
adc
mov
ss
mov
mov
pop
and
and
cmp
sub
xlat
lea
jp
jmp
imul
sub
in
adc
sub
xor
sbb
fadd
test
retf
das
adc
jo
cmp
dec
sub
rcr
and
fild
out
add
into
pop
adc
adc
mov
test
pop
xchg
jmp
sub
mov
cld
data16
sbb
adc
mov
ds
test
xor
leave
(bad)
mov
cmp
cld
dec
data16
xor
push
pop
xchg
cmp
outs
cmc
(bad)
push
sar
push
(bad)
retf
sti
rol
test
aad
in
cdq
in
sub
mov
cmp
inc
dec
push
inc
mov
imul
adc
repz
mov
retf
fst
mov
shl
outs
mov
add
aad
xchg
jle
jge
cmp
cmps
movs
aam
mov
aad
adc
mov
xor
adc
neg
loop
(bad)
outs
sub
push
fsub
cmp
pop
sub
mov
pop
dec
(bad)
cld
adc
out
add
inc
ror
lds
data16
mov
add
jnp
jge
mov
ror
xor
adc
jns
fcomp
leave
xchg
inc
sbb
retf
cmp
dec
dec
push
jecxz
sbb
or
(bad)
pop
push
inc
mov
jo
pop
int3
pop
xor
adc
loope
jne
(bad)
mov
and
imul
cmp
je
fisub
lock
mov
or
pop
jle
fsubr
ret
jp
icebp
mov
ret
jb
sub
into
icebp
int3
ss
cmp
pop
shl
adc
(bad)
cmp
es
mov
repnz
clc
js
push
mov
dec
push
xchg
retf
psrld
jno
push
in
xchg
and
repz
aam
mov
addr16
std
ins
adc
xor
data16
jo
pop
sbb
test
in
mov
pop
cmps
xor
in
add
jae
push
retf
test
add
psllq
in
retf
jge
lock
aam
popf
inc
mov
test
std
in
ret
cmp
sbb
pop
ins
stos
push
adc
popf
dec
xchg
pop
enter
adc
push
pop
fcomip
pop
push
pushf
int
push
add
test
jp
cmps
xor
pcmpgtd
mov
sbb
jae
xor
mov
push
sti
sar
or
inc
xor
cmp
mov
dec
popf
and
fnstenvw
retf
sbb
sbb
push
add
fs
or
ret
(bad)
jle
sbb
scas
pop
cdq
jno
jnp
mov
sub
cmp
outs
cmp
(bad)
sub
shl
jae
push
inc
outs
push
or
stos
pop
in
add
data16
and
cmps
adc
xchg
or
test
shr
xchg
in
movs
jmp
mov
enter
(bad)
sbb
movs
data16
icebp
je
test
jge
fiadd
out
pusha
div
dec
push
jmp
jnp
adc
call
ins
jns
add
out
js
add
jp
xor
inc
dec
inc
xor
mov
push
(bad)
fimul
push
xchg
xor
sbb
imul
mov
inc
jmp
(bad)
addr16
jg
mov
sar
sub
pop
loope
(bad)
sahf
(bad)
in
mov
sub
and
xchg
and
lods
pushf
jp
mov
inc
and
inc
jecxz
loop
xchg
dec
jbe
std
ins
add
pop
mov
call
mov
add
leave
hlt
adc
daa
hlt
outs
repz
mov
jge
daa
jecxz
sbb
mov
int
das
add
push
cmp
xor
or
in
fxch
push
mov
add
or
dec
les
jo
mov
cmps
imul
das
retf
fcmovnbe
push
data16
in
adc
aas
loopne
and
sbb
mov
adc
js
mov
popf
movs
psubd
mov
mov
xor
(bad)
sbb
mov
push
movs
sub
dec
or
cmps
dec
push
or
inc
mov
cld
add
fisubr
cld
stos
inc
push
xor
aam
clc
lods
xchg
mov
mov
mov
and
jne
lea
(bad)
(bad)
call
or
inc
inc
jl
jbe
out
popa
movs
mov
mov
mov
aaa
jle
bound
adc
and
push
mov
push
scas
aad
out
scas
cmp
mov
(bad)
cwde
jno
test
mov
pop
sbb
fld
mov
jne
js
aas
mov
xchg
mov
adc
ss
in
jmp
or
mov
neg
pop
fwait
push
jle
dec
inc
or
sub
mov
(bad)
jno
ret
ja
push
mov
test
dec
into
(bad)
int
jae
mov
fiadd
outs
das
jne
sbb
jg
aad
loopne
sysret
pop
mov
dec
pop
mov
mov
xchg
sub
sub
gs
not
mov
mov
mov
pop
xchg
dec
fimul
adc
in
mov
jne
mov
ins
outs
fcom
shl
sub
hlt
push
adc
bnd
jge
push
jns
int
dec
pushf
aas
outs
fdivp
and
push
adc
mov
cmp
int
xchg
dec
jo
sti
push
jle
popf
add
mov
aaa
dec
retf
xchg
push
inc
(bad)
adc
(bad)
sub
jmp
jno
mov
inc
sub
mov
jbe
outs
jg
sub
xchg
jno
lods
pop
push
pusha
sbb
jno
pop
in
fidivr
lods
lds
sti
jnp
fwait
les
sub
js
push
adc
pusha
(bad)
aam
bound
jae
setg
sub
out
jnp
mov
mov
sbb
sti
jb
lea
mov
mov
jbe
mov
jl
hlt
xchg
jae
retf
inc
in
add
movaps
cld
(bad)
xchg
(bad)
mov
ins
sar
test
inc
data16
dec
and
out
repnz
sbb
push
or
ret
retf
stc
stos
fcomp
or
mov
ins
mov
push
into
into
mov
sub
mov
fild
jl
scas
test
or
loopne
pop
dec
fsub
mov
popf
imul
sbb
out
out
fcom
push
fcmovbe
inc
or
bound
adc
inc
sbb
sbb
push
ror
stos
or
scas
(bad)
jmp
pusha
ja
pop
in
js
jmp
pusha
test
jecxz
inc
and
loope
int
out
test
cdq
inc
(bad)
adc
adc
push
cld
xchg
xchg
or
inc
cmps
mov
shl
xchg
cmps
sub
mov
inc
add
xchg
adc
mov
scas
mov
fistp
ss
mov
dec
xchg
int
sbb
icebp
jno
out
push
xor
loopne
jbe
daa
xchg
ret
imul
pop
retf
adc
aam
cld
sbb
mov
(bad)
fsubp
imul
lahf
inc
out
inc
add
xor
dec
pop
shl
xor
mov
das
imul
shr
imul
adc
push
out
dec
jmp
adc
sub
pop
(bad)
mov
fisubr
arpl
fdiv
cwde
ror
jno
xor
sub
repz
retf
aad
xor
mov
test
inc
cmp
repz
ror
mov
ficom
retf
(bad)
les
inc
lock
push
fistp
jns
sbb
data16
in
push
cmp
dec
mov
ret
sbb
xchg
add
ret
movs
cld
mov
aas
mov
or
inc
daa
popa
loope
mov
xor
dec
pop
dec
mov
es
pop
mov
outs
pop
ret
addr16
std
dec
popa
cmp
pop
or
sbb
xchg
daa
enter
and
xor
dec
clc
mov
out
in
rcl
cmp
jmp
retf
pop
cdq
push
enter
jbe
add
rcr
push
mov
jmp
jmp
nop
ret
jle
dec
inc
in
cmp
movs
call
je
dec
mov
sub
lock
dec
xchg
fbld
sub
mov
iret
dec
mov
cwde
mov
push
int3
mov
fwait
inc
inc
les
das
outs
cmc
sub
stc
mov
pushfw
es
inc
pop
mov
dec
es
fwait
sub
xchg
fisubr
fisubr
mov
test
inc
dec
cmp
ss
sub
nop
rcl
mov
mov
sub
xor
std
pop
int
pop
mov
(bad)
and
test
call
scas
dec
into
or
mov
ror
xchg
std
xor
adc
inc
test
nop
adc
xor
outs
pop
xchg
fst
xor
push
out
pop
inc
loop
test
sbb
cmp
push
sub
retf
cmp
pop
std
call
mov
xchg
mov
mov
mov
les
retf
jge
repnz
(bad)
xchg
fucom
inc
sbb
imul
xchg
dec
dec
dec
xchg
ja
sbb
or
mov
dec
retf
in
and
add
(bad)
and
push
inc
loopne
es
mov
loope
mov
test
dec
sub
and
mov
sti
mov
test
pop
push
in
test
gs
and
js
inc
cmp
mov
addr16
push
adc
imul
or
sahf
pop
mov
inc
mov
call
call
mov
adc
adc
push
(bad)
cmp
xchg
pop
xor
scas
movs
push
sbb
lahf
mov
out
jecxz
mov
mov
and
pushf
bound
pop
shl
pop
cmp
lods
lods
jne
cmp
ds
pop
(bad)
ret
jns
in
les
pop
add
xchg
pop
lea
inc
add
adc
test
mov
arpl
mov
cs
sub
ret
and
or
test
cmp
jmp
and
push
js
loope
jge
push
pop
push
adc
mov
rol
fwait
add
jge
ins
sbb
inc
aaa
mov
inc
cmp
mov
movs
cs
xchg
(bad)
js
mov
jnp
cmp
ffree
les
scas
xchg
add
push
or
xchg
inc
sbb
in
xor
pop
iret
push
popf
loope
aaa
mov
sbb
push
test
mov
aad
xor
aas
sbb
add
out
mov
add
int3
and
xor
out
and
push
mov
pop
adc
xchg
loopne
jg
mov
rcl
and
adc
jg
adc
xchg
fsub
aaa
add
cwde
popf
int
mov
cs
pusha
(bad)
sbb
aam
dec
ja
dec
repz
add
in
repnz
jb
popa
jmp
mov
pop
outs
pop
mov
inc
add
aad
sbb
adc
shr
imul
push
dec
sub
xor
cwde
fwait
dec
push
jmp
jbe
into
pop
mov
cmp
fisttp
pop
sub
pusha
mov
nop
pop
xchg
rcr
hlt
shr
mov
hlt
clc
pop
jno
add
mov
lods
jo
sbb
mov
cs
and
pop
test
adc
cmp
ss
mov
jnp
rol
jmp
sub
mov
adc
ja
dec
adc
fucomp
mov
stos
jo
sub
sub
jge
in
add
mov
xchg
lds
jmp
jmp
pop
jecxz
fisub
aaa
call
mov
mov
push
aam
fbstp
push
xchg
mov
xchg
pop
cmp
mov
rcl
cmp
fmulp
(bad)
stc
imul
rcr
jg
outs
or
dec
daa
sub
sbb
sub
sbb
fucom
pop
fiadd
mov
in
cmp
add
daa
sbb
call
in
rcr
ficomp
push
push
les
mov
jmp
popa
inc
jmp
sub
fimul
cwde
pushfw
dec
mov
sbb
mov
ins
fsubrp
jge
inc
pop
movs
daa
mov
jae
cmps
mov
mov
daa
xchg
nop
fs
popf
pop
ins
jb
js
add
sbb
rcr
outs
call
ds
cmp
test
fldenv
rcl
iret
inc
cdq
sub
out
add
adc
iret
int
dec
mov
loop
call
cmp
cmc
mov
xchg
out
hlt
shr
(bad)
cmovle
das
cmc
stos
inc
push
pop
push
int
sub
mov
dec
in
cmp
push
mov
mov
cwde
mov
aad
sahf
sbb
arpl
dec
adc
loope
mov
xchg
fwait
leave
(bad)
sub
retf
retf
xor
gs
mov
ret
leave
inc
mov
push
adc
addr16
call
cmp
xor
pop
mov
test
int3
mov
xor
or
fiadd
jmp
jne
sti
scas
retf
pop
fcmovu
scas
jns
mov
or
cmps
cwde
stos
out
ins
push
jb
(bad)
sbb
mov
push
out
aaa
repnz
fisttp
inc
mov
repz
cs
mov
enter
push
sahf
cdq
pop
je
lods
push
inc
sub
inc
cmp
xchg
or
fist
loopne
(bad)
movs
jns
cmp
icebp
rcr
imul
mov
call
adc
adc
sub
and
dec
push
aam
dec
mov
cmp
lods
(bad)
sub
aam
push
pop
xchg
dec
sub
sbb
xchg
xchg
out
fsub
call
inc
loope
xchg
or
xor
daa
in
cmps
dec
inc
sar
xor
mov
push
xor
push
popf
cli
pop
pop
mov
and
fwait
mov
cld
push
xor
add
ds
ret
jae
push
repz
cld
cmp
xlat
das
push
int
mov
inc
stos
ret
xchg
cwde
pop
fnstenv
add
dec
push
mov
inc
push
pop
in
pop
sbb
shl
and
mov
mov
mov
lea
stc
jb
mov
cmps
imul
dec
push
mov
xchg
jmp
xchg
adc
mov
js
xor
ficomp
test
(bad)
mov
push
mov
fwait
sbb
inc
rcr
xchg
call
repnz
push
shl
inc
cmps
mov
mov
das
add
xor
pop
mov
push
or
scas
imul
shl
mov
popf
mov
pusha
repz
(bad)
adc
addr16
cmp
outs
pusha
hlt
xchg
call
mov
mov
xchg
dec
mov
test
adc
out
xor
fdiv
sub
fst
repz
out
cmp
xor
mov
push
out
xchg
shl
sub
dec
jae
sbb
pop
sbb
pop
out
adc
shl
rol
mov
xchg
add
mov
xchg
add
add
rol
popf
outs
out
sub
dec
mov
outs
repz
jp
mov
inc
fcomp
pop
clc
xor
inc
add
mov
jp
mov
xor
mov
jg
jns
inc
jmp
pop
mov
icebp
push
pop
iret
and
repz
mov
mov
in
or
movs
xor
cmp
inc
ins
sub
pushf
inc
dec
mov
js
and
push
clc
jmp
repnz
aad
adc
mov
adc
jo
or
and
adc
and
adc
add
xchg
jns
sahf
or
in
bound
jno
pop
and
add
push
pop
xor
test
lahf
mov
mov
mov
xlat
xchg
arpl
sbb
mov
pop
adc
jle
adc
movs
inc
mov
call
inc
mov
jno
xor
xchg
mov
mov
call
cmps
mov
push
xchg
sbb
les
sar
sub
pushf
and
adc
push
rcr
fld
mov
fistp
fnstsw
lods
mov
jmp
xor
test
cmp
pop
sbb
lods
cli
out
pop
retf
std
test
imul
outs
jmp
arpl
repnz
cmps
jb
(bad)
xchg
lahf
dec
mov
data16
push
pop
add
cmp
out
pop
mov
ins
js
push
daa
push
test
inc
dec
lock
scas
fwait
std
cmp
mov
fwait
sbb
xchg
mov
cmc
jg
mov
sub
aas
es
xchg
sub
lods
lock
adc
inc
mov
jmp
imul
push
mov
mov
sub
out
add
nop
cmp
loopne
movs
dec
pop
mov
sbb
and
(bad)
in
jb
pop
pop
xchg
cli
xor
mov
lods
popf
or
add
xchg
xor
pop
jbe
dec
call
test
and
test
nop
out
aas
jae
or
cwde
sbb
mov
pop
jmp
inc
mov
hlt
and
cld
jo
adc
mov
cmps
add
ror
mov
jns
dec
mov
ret
mov
push
add
and
sahf
ret
cmp
and
and
jo
lea
adc
pop
clc
inc
fadd
mov
loop
stos
mov
lods
jecxz
stos
es
add
iret
(bad)
xor
(bad)
jbe
retf
rcl
inc
int3
inc
cs
inc
xchg
test
xor
mov
dec
int
(bad)
sbb
mov
sahf
add
idiv
sub
mov
bound
loop
fidivr
dec
fwait
or
and
pushf
frstor
and
or
pop
test
js
sar
test
cmp
xchg
xchg
or
call
das
cmp
dec
push
xchg
jno
hlt
(bad)
jns
and
inc
ss
in
pop
jmp
push
cmp
and
movs
ret
add
ja
cld
pop
pop
xor
pop
ins
push
pop
pop
jp
mov
daa
movs
xor
mov
mov
cmps
fdivr
inc
xchg
adc
push
jl
xor
mul
pop
inc
pop
dec
fmul
adc
ret
sti
fistp
jae
xchg
or
rcl
cmp
stos
in
movs
scas
xchg
(bad)
pop
dec
loopne
mov
mov
cmp
pop
daa
push
hlt
mov
mov
xchg
repnz
and
jl
outs
(bad)
(bad)
push
in
pop
aas
sub
mov
and
scas
inc
(bad)
and
outs
mov
int
loopne
jno
and
arpl
gs
xor
js
rcpps
in
adc
neg
imul
div
push
(bad)
shl
sub
cdq
fidivr
loop
(bad)
sbb
std
mov
and
clc
rcr
into
jge
adc
aad
das
out
sub
xor
call
sti
mov
aam
mov
arpl
ja
aad
test
add
int3
jnp
pop
cmp
out
add
or
mov
enter
pop
sbb
or
xlat
sbb
pop
add
lds
mov
nop
ret
xchg
out
adc
adc
xchg
inc
rol
dec
stc
push
xlat
push
call
(bad)
push
add
pop
adc
loopne
or
call
xor
cmp
pusha
sets
pop
arpl
mov
xchg
jge
fwait
push
shr
(bad)
dec
aam
(bad)
in
jns
dec
dec
pop
xchg
jnp
add
mov
hlt
pop
jecxz
daa
sbb
pop
test
cmps
fcom
mov
jg
daa
clc
lods
and
int
sti
sbb
ja
xchg
lds
push
push
js
sub
ret
mov
mov
jge
cmps
dec
xlat
mov
daa
cmp
mov
jnp
jmp
es
shr
push
mov
(bad)
mov
mov
inc
mov
ins
jnp
mov
movs
cdq
fidiv
loopne
push
les
rol
pop
iret
pop
and
mov
ret
fs
pop
shl
movs
dec
mov
pop
imul
test
out
loop
in
lods
int3
sub
gs
repz
sub
(bad)
fld
test
pushf
cmp
fnstsw
(bad)
loopne
test
dec
jnp
xor
or
jle
inc
and
fwait
cmp
add
adc
dec
cmp
aad
adc
dec
cmps
add
add
add
jb
jge
movs
mov
cmp
js
xor
push
dec
int
repz
sbb
jae
rcl
adc
sbb
imul
scas
ins
adc
mov
dec
and
push
clc
test
cdq
or
int3
enter
push
jge
or
sbb
andnps
arpl
out
cmp
sbb
jmp
xchg
push
idiv
ret
cmp
cmp
mov
mov
call
in
sbb
inc
lock
mov
stc
adc
repnz
call
xchg
cmps
dec
sub
mov
inc
imul
push
adc
xchg
mov
pop
mov
xchg
mov
(bad)
add
xchg
sub
scas
sbb
bound
push
cli
inc
mov
shr
fimul
hlt
fisub
in
xchg
xchg
aas
nop
sbb
xchg
add
adc
enter
sbb
call
jbe
mov
xor
inc
ret
lds
mov
jmp
stos
lahf
outs
sub
scas
push
icebp
xchg
sbb
mov
lahf
leave
sub
mov
fild
mov
add
clc
sub
sub
add
sti
add
int3
lods
adc
push
push
aad
sahf
mov
xor
adc
jbe
fucomip
add
mov
mov
outs
mov
pushfw
xchg
mov
sti
jmp
js
lea
cli
js
xchg
xor
aam
in
clc
adc
das
inc
mov
test
mov
and
or
pop
(bad)
inc
jo
pop
cmp
in
add
cmp
loopne
adc
pusha
stc
test
ins
mov
fild
test
xchg
(bad)
jg
fadd
push
(bad)
out
fisttp
lahf
mov
push
cmps
stos
(bad)
mov
inc
cmp
fiadd
adc
xchg
mov
sub
adc
aam
clc
aas
jae
(bad)
lods
cmc
xlat
xchg
fmul
out
ror
or
xor
leave
sbb
inc
jp
add
fidiv
icebp
inc
mov
and
loop
push
outs
jecxz
(bad)
sahf
fwait
imul
xchg
pop
pop
dec
test
dec
xchg
xor
popa
data16
loopne
cwde
mov
or
fist
add
repnz
shl
bnd
mov
push
adc
pop
pop
dec
test
adc
fldcw
xlat
add
cwde
stos
js
pop
mov
adc
push
pop
add
pop
inc
xchg
jmp
call
xor
xchg
cmp
clc
push
popf
leave
mov
js
push
jge
in
inc
adc
dec
test
dec
aas
mov
push
inc
mov
adc
xor
push
add
dec
xchg
mov
pop
hlt
jbe
mov
mov
shl
sbb
inc
aam
idiv
cdq
pop
fwait
push
je
loopne
add
push
sbb
mov
sub
lods
jae
mov
and
pop
sub
gs
ss
or
mov
out
js
icebp
into
aas
cmp
push
sbb
mov
fidiv
ret
scas
enter
and
cmp
stos
iret
shl
fistp
pop
mov
and
cmp
add
and
ins
stos
into
out
fcomi
int3
sti
fs
arpl
push
pop
jp
add
inc
(bad)
jle
lods
leave
add
cmp
(bad)
das
add
fiadd
jmp
in
pusha
inc
jne
popa
jecxz
lea
or
mov
inc
imul
outs
jnp
jge
je
mov
adc
jp
fldenv
cmp
jle
jge
movs
push
or
rcr
loope
inc
pop
push
xchg
dec
cmps
scas
fs
cmp
call
adc
outs
dec
out
xchg
mov
lahf
mov
dec
push
mov
jae
ffree
and
jecxz
test
popa
or
or
mov
jnp
cmp
sbb
les
(bad)
scas
ss
xor
in
or
fsub
xlat
and
sub
dec
jne
movs
movs
and
jnp
repnz
xchg
pop
les
loop
adc
pop
pop
mov
mov
push
cwde
pusha
es
daa
(bad)
call
and
mov
adc
add
xchg
dec
pop
out
cmp
shl
jo
jecxz
ss
inc
div
dec
push
dec
mov
add
xor
lock
into
xlat
and
addr16
clc
adc
xor
jge
push
jo
pusha
sbb
jl
lock
jmp
daa
xchg
ror
inc
dec
mov
inc
cmp
mov
cld
xchg
ret
xacquire
mov
fcom
in
std
repz
dec
add
clc
pop
inc
cwde
rol
mov
popf
add
add
jp
cli
lods
cli
jmp
push
cli
mov
jnp
sbb
pop
xlat
xchg
sti
pop
or
jbe
push
adc
add
les
adc
(bad)
ins
mov
inc
mov
xor
mov
ss
jge
xchg
ins
daa
mov
shr
sbb
push
pop
or
shl
cmp
stos
(bad)
test
outs
xchg
lods
xchg
cmp
push
or
push
nop
and
enter
leave
stos
inc
std
out
sub
fild
adc
sbb
lds
loopne
imul
adc
in
in
xor
cmp
dec
adc
jo
int3
mov
push
fwait
mov
ret
and
imul
and
dec
sbb
jmp
and
frstor
dec
push
imul
pop
test
call
mov
jmp
push
adc
mov
inc
push
cwde
cld
daa
or
outs
lods
fcom
jge
mov
cmps
fnsave
mov
(bad)
jno
dec
enter
xor
in
int
enter
pop
jne
mov
jae
mov
adc
mov
ficom
mov
xlat
jbe
sbb
rcr
ds
adc
dec
leave
dec
bound
aad
cmp
mov
ins
mov
dec
mov
adc
mov
push
sar
(bad)
mov
out
xchg
sub
(bad)
iret
shl
jp
in
mov
push
mov
cwde
mov
loop
mov
out
mov
(bad)
pop
mov
cmps
add
sbb
adc
push
pusha
sahf
sbb
aas
das
push
fbld
pop
call
loopne
(bad)
dec
outs
mov
das
sbb
ficomp
(bad)
jnp
ret
pop
or
icebp
fst
adc
sub
cmp
mov
rcl
pop
dec
das
retf
dec
mov
hlt
(bad)
and
jno
push
retf
add
ins
loopne
js
sbb
arpl
out
pusha
(bad)
in
inc
dec
adc
add
inc
aad
jbe
cld
nop
mov
dec
pop
mov
xchg
jecxz
push
push
test
cmps
sar
dec
rcl
inc
out
mov
pop
lock
mov
enter
mov
bound
cld
sti
aaa
cmc
test
addr16
jp
adc
dec
adc
or
in
cdq
pop
call
jle
stos
pusha
mov
cmp
jo
int
mov
test
xor
mov
outs
std
inc
and
out
shl
scas
js
mov
stc
std
mov
or
cmp
jns
into
xchg
jo
add
cli
xchg
xchg
sbb
out
cmps
lods
aam
pop
cmp
call
shl
or
neg
cld
loop
push
sbb
dec
jbe
xchg
adc
jl
and
dec
jae
add
cmp
pop
add
cmp
repnz
call
cs
sbb
sti
shl
aam
add
lods
dec
xlat
ins
sti
xor
sbb
xchg
fld
data16
pop
cmp
mov
xor
dec
pop
leave
rol
dec
(bad)
jp
call
es
pop
out
jnp
ins
mov
sbb
inc
lods
sbb
dec
or
mov
dec
jl
(bad)
aad
cmc
hlt
pop
(bad)
sbb
ror
fcomip
test
fbstp
ins
out
xor
test
cli
mov
adc
xor
xchg
ficom
popa
fisubr
sub
push
test
sbb
stos
mov
push
data16
fs
sub
test
test
sbb
adc
ja
cmp
sti
add
mov
leave
js
ror
mov
mov
icebp
out
sar
xchg
pusha
jl
lods
jae
out
mov
ret
sar
mov
xor
add
call
sub
ss
aam
je
inc
dec
push
cs
xlat
call
outs
scas
pop
pusha
push
iret
cmp
pop
mov
ret
push
inc
xchg
and
mov
sub
push
icebp
call
jp
sub
pop
aam
cmp
cs
dec
popa
sti
stos
sbb
fstp
sbb
mov
mov
jmp
test
push
mov
sbb
mov
add
xchg
cmp
ss
nop
xchg
xor
cmc
pop
sub
jle
xor
lea
cli
pop
inc
add
imul
sub
arpl
int3
or
inc
push
xor
movs
push
popf
mov
inc
repnz
retf
xchg
mov
test
mov
cmp
enterw
pop
pop
xchg
and
cmc
test
ins
mov
ret
imul
arpl
(bad)
inc
shl
(bad)
lahf
imul
les
out
pop
icebp
arpl
mov
or
mov
pop
(bad)
lahf
fwait
or
mov
cmp
rol
xchg
mov
xchg
mov
retf
cmps
outs
scas
cld
(bad)
pavgw
rcr
xor
mov
dec
cmp
ss
shl
in
es
jae
mov
mov
and
mov
push
adc
lahf
in
cdq
cmp
add
das
js
jo
pop
test
int
addr16
xor
mov
cmc
call
xchg
xor
push
xchg
mov
shl
xchg
inc
scas
test
call
cld
test
xor
ja
in
repz
jmp
shl
push
mov
ss
pop
int
inc
xor
cmp
call
test
cmp
mov
push
inc
ss
lea
mov
(bad)
pop
xchg
outs
sub
(bad)
ror
xchg
test
cmp
jne
lds
and
lea
mov
jp
and
mov
cld
or
repnz
jg
sbb
mov
imul
adc
out
add
ffreep
ret
pop
fistp
jge
ins
js
lock
scas
int3
out
je
mov
mov
outs
sar
jne
rcl
enter
mov
out
fidivr
or
mov
sub
arpl
mov
mov
outs
adc
je
std
and
sbb
(bad)
lds
mov
adc
fsubr
shl
stc
push
push
and
pushf
inc
or
mov
test
adc
out
xchg
stos
jle
mov
not
jns
cmp
es
mov
popa
daa
sbb
dec
sub
or
push
pop
sbb
loope
add
jns
out
cmps
adc
loop
das
cmp
je
pusha
xchg
out
mov
add
retf
pop
cmp
cvtps2pi
or
setnp
jo
dec
and
push
jmp
das
pop
sub
mov
sbb
test
dec
adc
jae
dec
jbe
inc
cwde
mov
pop
push
mov
jl
out
pop
(bad)
sti
mov
sub
push
jp
pop
xchg
cwde
adc
sbb
leave
sbb
in
inc
imul
and
dec
(bad)
sbb
test
cs
fldenv
call
and
cli
xor
data16
test
and
push
mov
inc
mov
mov
mov
dec
bnd
inc
cmp
dec
int
repnz
inc
sub
ficomp
inc
cli
pop
inc
imul
inc
pusha
jge
inc
outs
loopne
aaa
sbb
xchg
pop
add
cmp
mov
xchg
mov
ins
cdq
fisttp
aaa
mov
in
add
jno
mov
cdq
xor
jl
and
jmp
sub
sub
jno
and
jge
and
and
lods
shl
jmp
repz
fbstp
dec
xchg
repnz
sub
jle
mov
mov
scas
in
mov
jne
ret
call
xor
inc
mov
jp
(bad)
push
and
repnz
mov
call
xchg
hlt
mov
(bad)
aas
jb
das
cwde
fld
adc
leave
xchg
sbb
ror
xor
add
stos
sbb
xor
push
test
jmp
ror
outs
or
sub
(bad)
cld
ret
mov
bound
add
mov
imul
mov
add
sub
jmp
or
xchg
es
jp
xchg
mov
or
xor
das
jg
sub
and
pop
adc
cmp
loope
sar
dec
scas
sahf
stc
retf
(bad)
push
push
mov
xor
movs
in
cwde
adc
scas
movlps
ss
mov
pmulhuw
inc
ret
inc
xor
imul
mov
sub
stos
bound
mov
xchg
adc
xchg
dec
(bad)
mov
jecxz
ins
sbb
aaa
test
lea
xchg
inc
xor
or
inc
dec
scas
cmp
retf
sbb
and
lods
inc
push
fisub
dec
arpl
aaa
jmp
dec
push
adc
fstp
(bad)
(bad)
dec
add
or
add
pop
pop
sub
mov
push
sahf
int
movs
jge
(bad)
fcomi
sbb
clc
fcom
add
imul
ss
stc
lods
leave
push
jmp
repnz
cmp
pop
mov
loop
mov
int3
iret
(bad)
jo
jmp
sbb
(bad)
cmps
(bad)
shl
pop
mov
and
(bad)
and
mov
stc
add
ret
dec
sbb
add
call
ret
icebp
mov
sub
call
xchg
ds
mov
dec
outs
(bad)
mov
subps
(bad)
ja
das
rcr
sahf
or
mov
lods
and
fisub
add
fldcw
into
dec
jnp
enter
fstp
(bad)
icebp
cmps
add
mov
pop
sub
push
mov
sub
pushw
fcomp
jmp
repnz
outs
scas
jne
dec
cmp
jl
les
les
push
div
ds
sub
out
jge
xchg
aas
sbb
xchg
add
cdq
or
stos
and
xchg
mov
ja
lods
jae
fcmovu
es
sbb
mov
out
mov
lea
push
mov
jnp
mov
xor
rcl
repnz
sbb
mov
xchg
hlt
fwait
jecxz
test
sub
dec
jg
xchg
movs
mov
cmp
add
xchg
int
cmp
and
fst
scas
pushf
add
jp
push
in
fsubr
cmp
retf
xchg
mov
inc
xchg
dec
sub
ret
jo
add
jbe
jmp
fdiv
add
jmp
retf
xor
std
sub
(bad)
mov
and
lods
mov
xlat
or
mov
sub
mov
push
loopne
push
sahf
inc
test
sbb
push
cld
movs
mov
jle
aaa
lds
jbe
cmp
stos
cmp
mov
fs
sbb
xor
popa
movs
stos
ss
pop
test
adc
mov
push
cmp
loop
jl
xchg
mov
mov
jmp
sahf
lahf
fidivr
arpl
xchg
add
mov
push
mov
ins
xlat
cmps
fwait
mov
xor
push
mov
xchg
fdivrp
adc
aad
into
xor
mov
mov
mov
sub
pusha
mov
push
xor
and
jle
mov
jmp
pop
(bad)
retf
push
sbb
jmp
push
je
imul
mov
jbe
inc
std
add
adc
lea
js
add
dec
dec
sbb
in
adc
xor
stc
pop
mov
mov
(bad)
int3
sbb
dec
inc
lods
(bad)
fdivr
push
pop
call
sbb
neg
add
loope
ins
shl
push
jbe
and
mov
mov
mov
mov
aad
or
jbe
dec
into
push
bound
les
jge
mov
cmps
cmp
dec
mov
ret
sub
pop
inc
cli
pop
in
aas
or
sbb
and
mov
mov
mov
and
push
popa
dec
(bad)
pusha
mov
fidiv
lea
jecxz
repz
ja
fucomip
jl
sbb
mov
push
scas
and
pop
dec
dec
jp
dec
xor
and
popa
jge
xor
sub
mov
mov
mov
ror
adc
repnz
add
mov
push
sahf
in
imul
mov
je
imul
(bad)
shl
xor
int3
push
gs
push
dec
and
cli
dec
into
rcr
mov
or
cmp
ret
sbb
or
ds
inc
xlat
fimul
add
ins
pusha
loope
jle
rcr
cmps
lock
cld
add
jns
leave
pop
in
mov
(bad)
or
verr
sbb
ret
fwait
pusha
sbb
repz
pop
and
data16
cmp
push
adc
ins
sbb
sbb
mov
repz
add
movs
sbb
repz
dec
sub
mov
int3
push
inc
dec
and
test
(bad)
xchg
xlat
mul
ins
test
jl
xor
jle
sar
test
pop
pop
mov
jnp
cld
xor
sbb
pop
cli
jbe
jno
gs
cld
pop
push
mov
push
xchg
into
xchg
popf
fdivp
movs
cmp
sbb
pop
rdmsr
jmp
jmp
fsub
or
cmps
pop
push
ja
lods
and
or
jno
call
cli
loopne
cmp
push
xchg
or
popf
in
imul
out
jmp
mov
pop
or
inc
jne
cmp
pop
pushfw
rol
pop
xchg
aad
popa
sbb
push
xchg
push
xlat
out
lahf
sub
popa
mov
daa
jl
ficom
je
dec
pop
lods
loop
(bad)
repz
add
in
mov
pop
add
pushf
fstp
jp
pop
mov
pushf
mov
(bad)
push
lock
mov
arpl
dec
xor
rcl
in
jo
adc
and
and
gs
push
mov
dec
pop
js
jg
mov
jmp
mov
pusha
call
or
inc
push
cdq
or
jp
adc
jl
mov
ins
push
(bad)
and
jno
push
xchg
xchg
sbb
cmc
pop
and
pop
push
pop
test
pushf
aaa
getsec
ja
adc
cmps
cdq
cmp
inc
mov
push
sub
xor
or
jbe
(bad)
mov
shr
retf
(bad)
hlt
fstp
push
in
mov
cwde
jae
xor
es
xchg
inc
lds
pop
inc
adc
add
jno
addr16
daa
dec
dec
js
fwait
sysenter
movs
jl
pop
or
fsubr
jbe
pop
sub
lock
retf
iret
push
leave
bound
inc
fistp
lods
scas
int
sahf
xchg
and
jmp
mov
test
popa
jmp
shl
mov
fsub
mov
fs
lea
les
not
push
xchg
inc
fimul
adc
outs
in
aam
outs
aas
cmps
shl
repz
xchg
jae
inc
xchg
out
(bad)
ret
pop
int3
xor
ss
mov
xchg
xor
jo
loop
xor
mov
hlt
mov
push
xchg
fwait
dec
lock
mov
cdq
repnz
repnz
push
push
das
rcl
xchg
sbb
or
adc
push
fild
dec
mov
mov
pop
fstp
xchg
(bad)
or
adc
sbb
pop
out
in
xchg
adc
push
repz
fcomp
adc
cmp
fst
xchg
dec
stos
mov
cmp
push
rol
xchg
pop
dec
xor
fisttp
xor
xlat
mov
out
int3
fdivr
ins
adc
cmp
test
xchg
fisub
xor
daa
jmp
jb
call
mov
mov
cmp
clc
add
sbb
ds
mov
gs
mov
sub
jmp
jo
lods
sbb
push
cmp
scas
add
sbb
sub
cmp
cld
loop
rcl
scas
push
sub
(bad)
sar
cmp
imul
push
(bad)
scas
sbb
cwde
jbe
gs
ins
xor
adc
xor
cld
mov
pop
cmps
sub
imul
lods
jecxz
fimul
inc
iret
dec
nop
aad
gs
sahf
xor
iret
mov
jb
xchg
inc
dec
push
xor
test
mov
imul
sbb
cli
aaa
scas
pusha
xor
scas
pop
std
mul
std
xlat
into
outs
and
push
cdq
sub
jb
repnz
lds
pushf
mov
pop
sub
jb
sbb
outs
dec
push
sahf
shl
or
ins
pushf
in
push
in
inc
adc
xor
jecxz
jb
cmp
ret
retf
ret
xor
test
lods
add
cli
loope
sbb
inc
jo
dec
stc
int
adc
push
xor
jp
add
xor
in
cs
dec
daa
int3
xchg
add
add
cmp
leave
test
xor
push
inc
movs
or
scas
pop
das
xchg
lea
lods
(bad)
retf
hlt
add
test
ror
leave
fsubr
imul
mov
inc
jge
add
(bad)
leave
dec
adc
fld
xchg
jmp
daa
mov
jp
pusha
pop
pop
jne
shl
cmp
cmp
mov
jecxz
iret
hlt
fcomp
cmps
push
lea
icebp
enter
movs
add
push
ffree
xchg
ret
inc
fadd
add
enter
cmp
sbb
mov
(bad)
mov
js
push
cmp
setle
mov
nop
push
pop
pusha
xor
mov
cmp
xchg
fstp
mov
xchg
xor
mov
aam
push
mov
es
sub
cmp
inc
and
cmp
loope
and
sbb
fmul
add
icebp
out
add
sub
jge
out
stc
mov
aad
inc
mov
cmps
xor
or
mov
cmps
je
in
sub
mov
out
pinsrw
and
inc
inc
cmp
(bad)
imul
sahf
xchg
dec
jae
xor
enter
pop
mov
popf
out
inc
out
pop
mov
and
cdq
add
mov
arpl
cmps
into
and
test
pop
(bad)
and
xchg
push
dec
fistp
cld
loope
fimul
cmp
push
push
mov
xchg
pop
and
inc
inc
jmp
pop
sub
push
out
cmps
arpl
ja
pop
push
mov
mov
dec
xchg
call
int3
addr16
fnstcw
pop
inc
cmp
std
mov
and
and
popa
adc
jg
jne
add
std
xchg
ds
push
aaa
test
cdq
inc
scas
xchg
fwait
jne
fldenv
inc
mov
dec
sbb
popa
into
or
xchg
shl
mov
call
mov
pusha
xchg
icebp
loop
mov
mov
xor
int3
out
cdq
mov
ret
xor
push
repz
mov
outs
data16
adc
mov
je
div
sar
or
lods
retf
push
jge
push
sub
sub
pop
loopne
call
cdq
sbb
sub
push
out
sar
mov
jmp
push
pop
pop
aas
cmc
add
mov
jb
sti
sub
pop
jmp
movs
sub
pop
xchg
xor
xlat
jmp
mov
fpatan
push
and
lods
(bad)
sub
pop
movs
cwde
gs
enter
scas
mov
fadd
jp
sbb
and
jl
rol
and
mov
cmps
mov
mov
or
in
(bad)
(bad)
mov
xchg
pop
push
pusha
fistp
fstp
jae
add
pop
jnp
gs
pop
dec
(bad)
pop
iret
pop
cdq
test
not
mov
sub
jae
cmps
or
jae
fs
retf
push
cwde
imul
jge
push
pop
je
adc
pop
adc
mov
clc
cmps
loop
jo
loopne
and
int
sbb
xchg
test
sbb
adc
mov
dec
mov
cmp
xchg
mov
pop
add
or
stos
das
pop
jmp
je
mov
lds
leave
add
mov
das
(bad)
das
aas
xlat
addr16
outs
jle
adc
ja
lods
lahf
ss
push
adc
vmovntpd
jg
xor
pop
scas
cmp
add
mov
je
jge
jmp
out
xchg
cli
retf
sbb
pop
cmp
pop
pusha
mov
pop
mov
loopne
dec
sbb
push
xor
sahf
add
and
mov
sub
mov
xchg
sti
ret
or
mov
and
or
jecxz
push
mov
jmp
(bad)
dec
jp
cli
mov
(bad)
out
daa
stos
push
pop
cmps
adc
shl
imul
jl
pop
xchg
movs
fcmovb
push
jp
inc
jnp
add
sbb
sub
aas
push
or
setae
je
fnstsw
xor
sub
jbe
add
push
jno
dec
fsub
lock
jnp
call
inc
cmps
retf
pop
out
xchg
mov
push
add
(bad)
xchg
dec
xchg
mov
jne
adc
add
pop
mov
inc
jmp
cmc
(bad)
addr16
in
pop
jns
inc
out
cmc
dec
mov
mov
xchg
in
sahf
xor
cmp
inc
sub
sbb
xchg
or
es
ror
jl
mov
push
adc
mov
mov
jecxz
or
retf
(bad)
mov
lea
adc
test
test
cmp
dec
dec
pop
inc
in
clc
fst
push
add
imul
jecxz
xchg
(bad)
push
push
loopne
pop
push
jns
xor
ret
stc
std
xchg
cmps
mov
cmp
leave
int3
inc
test
mov
movs
jno
mov
xor
jg
adc
gs
mov
pop
inc
jb
inc
fcom
sub
dec
sub
arpl
cwde
pop
mov
jge
xor
push
pop
sbb
aam
addr16
bound
cld
xor
das
pop
adc
addr16
(bad)
add
adc
push
adc
js
popa
push
or
(bad)
aam
mov
pop
mov
push
adc
mov
inc
add
dec
pop
adc
stos
sbb
clc
cmp
mov
push
jb
or
mov
sub
cmps
cli
jmp
cmps
or
mov
push
pusha
test
lea
push
test
push
xchg
pusha
or
add
mov
mov
and
fild
mov
pusha
imul
pusha
sub
arpl
popa
nop
cmps
outs
push
sub
mov
fnstcw
fmul
jb
dec
in
cmp
imul
pop
js
mov
sub
call
sbb
out
pop
bound
aaa
stc
add
jno
mov
fs
loope
cmp
test
shl
mov
in
xor
xor
cs
adc
mov
inc
imul
cmp
mov
pop
test
jg
xchg
inc
sbb
call
rcl
mov
fsubrp
cwde
stos
scas
push
dec
pop
mov
add
push
int
mov
cmp
xor
lahf
jb
jbe
jge
sub
push
mov
scas
hlt
int3
pop
outs
(bad)
hlt
jne
xchg
test
test
mov
sbb
xor
scas
push
pop
mov
xor
mov
test
jae
fbld
imul
outs
cwde
cmp
imul
sub
mov
rol
enter
pop
sub
adc
stc
mov
pop
or
(bad)
cli
dec
xor
std
cmps
mov
adc
dec
aad
jmp
in
rcr
movs
cmp
fsubr
iret
mov
dec
ret
sub
ja
cmps
sub
outs
jl
mov
pop
jns
hlt
pop
cmp
sbb
dec
sub
mov
adc
adc
pop
xor
cli
xor
inc
or
in
loope
out
xor
inc
jp
mov
out
retf
cmp
ret
inc
sub
loop
push
cmp
push
xchg
or
jl
xor
cmp
mov
gs
jp
fistp
push
test
repnz
mov
jmp
out
dec
jle
adc
mov
inc
loopne
push
jmp
xchg
xchg
push
sahf
adc
loopne
ret
mov
mov
imul
bt
pop
add
dec
retf
push
aad
out
es
or
mov
js
and
lods
fdiv
mov
lds
xchg
fnsave
mov
pop
fld
mov
and
cmp
mov
push
shr
aaa
jo
scas
xchg
sub
aaa
int3
cs
into
pop
and
lahf
and
shl
push
outs
pop
rol
in
scas
in
push
popa
mov
xor
push
(bad)
icebp
jbe
test
inc
xchg
adc
into
push
xchg
sbb
jecxz
jmp
lods
mov
cmc
std
mov
push
(bad)
pop
sbb
(bad)
mov
jno
ds
add
popa
mov
jp
ja
lods
sbb
or
xor
ret
pop
jo
xchg
or
fild
mov
sbb
mov
fcmovnbe
jg
or
fwait
sbb
rcl
mov
sbb
pop
mov
call
ins
ins
jle
div
idiv
dec
scas
cmp
sbb
and
sub
(bad)
int
sub
xchg
test
push
out
lods
inc
fiadd
mov
mov
fdivr
pop
movs
jo
fiadd
gs
pop
pop
mov
js
cmps
mov
stos
frstor
mov
dec
xor
cmp
and
push
daa
lock
fisubr
pop
xchg
or
push
xchg
cdq
scas
arpl
(bad)
mov
sub
sbb
push
adc
test
mov
retf
(bad)
call
les
test
(bad)
push
inc
or
mov
fimul
lds
and
inc
jno
(bad)
retf
pop
adc
cmc
xor
inc
aam
cmps
or
pop
lock
test
ins
dec
js
and
xor
inc
or
fwait
scas
mov
cdq
push
and
pop
les
(bad)
rcl
in
test
mov
dec
stc
jmp
jp
popa
sbb
xchg
xchg
inc
adc
xor
aam
loope
into
add
enter
jp
jo
in
adc
or
stc
sbb
and
mov
sbb
retf
cmp
es
and
mov
push
icebp
add
or
fbld
fisub
ret
je
(bad)
dec
int
aaa
mov
je
add
lahf
stos
mov
in
mov
pop
push
fidiv
cmp
cs
or
hlt
(bad)
repz
mov
sbb
retf
das
mov
sti
mov
pop
jecxz
dec
cmps
ret
jmp
and
in
pop
or
enter
jl
xchg
xor
jg
lods
out
mov
mov
adc
fwait
xor
push
neg
xchg
popa
ss
push
adc
and
movs
mov
cmp
fs
mov
push
in
push
jmp
jno
inc
push
sbb
dec
lahf
mov
test
push
jge
or
dec
std
mov
hlt
hlt
test
sub
mov
mov
outs
lods
aaa
call
push
clc
int3
and
je
mov
adc
xlat
ret
jb
stos
sahf
(bad)
xlat
cs
mov
and
test
xor
push
in
push
call
xlat
jle
repz
cmp
out
dec
jecxz
jge
dec
fsub
mov
push
dec
aaa
xchg
loopne
mov
lods
mov
addr16
sub
aas
dec
out
(bad)
scas
pop
mov
stc
mov
out
or
imul
out
and
push
push
jle
mov
cmps
add
arpl
pop
and
(bad)
mov
mov
push
js
jb
inc
stos
mov
push
sbb
movs
push
nop
pop
cmp
ja
and
mov
or
cmps
mov
inc
push
(bad)
retf
pop
std
add
ja
mov
xor
xchg
(bad)
sti
aaa
cmp
cmc
loopne
jle
xchg
dec
int
xlat
mov
adc
lahf
daa
push
and
outs
repnz
dec
pop
jg
dec
jno
pop
cmp
(bad)
push
mov
(bad)
xchg
stos
dec
sub
imul
inc
std
mov
sbb
inc
bswap
(bad)
sbb
sbb
mov
adc
pushf
jno
je
pop
pop
sub
jne
inc
add
loope
cmp
xchg
cmp
cmps
aas
and
rcr
mov
pop
pop
cmp
dec
stos
cs
pop
mov
push
or
ror
loope
sbb
ret
shl
add
fst
fist
xchg
icebp
fcom
daa
or
push
add
or
xor
xchg
mov
xchg
pop
and
call
and
xchg
push
adc
(bad)
cmp
xor
and
test
je
mov
push
pop
loop
sbb
cmc
(bad)
fisubr
inc
in
fs
cmps
ror
int3
mov
xor
stos
jb
call
fnsave
shl
hlt
cdq
push
push
mov
xor
mov
addr16
aaa
push
sub
dec
popa
ror
push
mov
pop
jno
stc
or
push
daa
aaa
cmp
xchg
push
cmp
cmp
imul
mov
loop
mov
loop
stos
shl
loopne
jg
jl
sub
ficomp
cli
sbb
stos
popf
inc
jmp
and
sub
xor
push
mov
adc
in
mov
xchg
and
pop
add
test
mov
jns
cmp
jno
xor
imul
dec
out
div
sbb
mov
std
mov
mov
movs
jo
xchg
clc
icebp
clc
mov
jns
add
inc
cs
pop
or
iret
jno
(bad)
pop
ret
push
popa
mov
adc
sbb
xor
mov
pop
fdivr
push
imul
cs
mov
inc
cmp
pop
mov
push
jecxz
loopne
or
mov
jp
cmp
or
pop
jl
pop
dec
cmp
ds
loopne
mov
js
fsub
movs
push
cmc
call
cmp
in
ffree
mov
pushf
int
mov
xchg
not
ins
imul
popf
push
ins
mov
(bad)
retf
xchg
adc
add
xlat
bound
or
add
ja
mov
sbb
test
cmp
scas
mov
dec
cld
jge
and
(bad)
mov
inc
(bad)
cdq
mov
and
push
sbb
scas
dec
sbb
stos
addr16
arpl
pop
movs
adc
es
mov
cwde
(bad)
leave
test
push
xchg
push
cwde
fcomp
out
pushf
call
aaa
mov
and
jecxz
pop
cld
sub
shl
fcomp
enter
push
mov
push
mov
add
mov
and
scas
rol
inc
lahf
in
mov
push
mov
inc
inc
rol
lds
mov
add
cmp
mov
push
mov
inc
xlat
out
shl
mov
mov
aas
in
(bad)
ja
pop
inc
ret
cmc
clc
jl
mov
ins
fs
push
iret
lods
daa
movs
in
cmc
or
mov
es
ror
mov
clc
and
test
adc
or
xchg
test
mov
and
jnp
fimul
mov
cwde
inc
iret
fsub
ins
test
jb
dec
xchg
loope
out
jmp
add
(bad)
mov
icebp
shl
out
push
aaa
jnp
test
jo
movs
stos
cdq
or
icebp
dec
jmp
repz
mov
out
outs
mov
stos
lods
xchg
pusha
xchg
jmp
fwait
adc
xchg
call
(bad)
ja
pop
dec
xchg
and
push
scas
jl
in
(bad)
push
pushf
or
lds
jmp
jb
sub
stc
push
(bad)
and
mov
jno
js
leave
enter
fmul
and
fstp
sub
dec
out
loop
xor
inc
fstp
xchg
jnp
dec
aas
dec
sahf
lods
xchg
js
inc
and
sub
aaa
inc
in
aam
lea
mov
and
hlt
sub
jnp
pop
inc
push
xchg
jns
dec
mov
xchg
ss
(bad)
lds
cmp
pop
ds
imul
xor
and
mov
test
xor
adc
enter
xchg
js
retf
mov
push
aaa
fsubr
jae
add
pusha
lock
push
and
cmps
pop
shl
stc
loopne
dec
mov
inc
add
mov
in
dec
add
je
sbb
ins
xchg
jae
es
loopne
jo
mov
cmps
mov
pop
cwde
ins
cmc
dec
jp
pop
je
lea
or
cmp
fmul
cmp
rcl
outs
ins
movs
dec
imul
pop
xlat
inc
or
clc
fbstp
sbb
aam
fild
pop
sub
sti
ret
xor
test
fwait
lahf
push
mov
rcr
ficomp
bound
mov
cs
cmp
or
jbe
fsubp
cmps
push
pop
sbb
inc
push
in
(bad)
xchg
sub
gs
aad
and
lods
imul
mov
in
aam
mov
add
(bad)
data16
and
repnz
(bad)
mov
retf
cmp
mov
mov
sub
mov
inc
aas
repnz
sbb
cmc
sti
push
cmp
(bad)
ss
xchg
dec
int3
sar
push
gs
shl
xchg
mov
cmps
mov
in
mov
popf
mov
call
pop
xchg
int
and
fstp
bound
push
mov
sbb
lock
hlt
mov
mov
jl
test
stos
xchg
mov
mov
lods
lods
add
(bad)
add
lods
imul
rcr
les
fist
cmp
(bad)
adc
mov
push
push
outs
daa
ret
aad
call
mov
pop
inc
cli
fs
mov
fldcw
jns
bound
or
call
dec
cwde
lock
xchg
mov
add
pop
into
xor
dec
sbb
es
fnstsw
test
fstp
mov
stos
test
fwait
popa
add
out
test
sub
jno
adc
ins
outs
ss
ret
pop
cdq
push
aad
xchg
jnp
int3
xchg
out
xchg
or
int3
shl
adc
call
outs
xor
and
mov
jnp
ret
push
leave
fld
es
push
out
cmc
xor
rol
dec
sub
dec
cmp
xchg
sbb
adc
pop
mov
ficom
jmp
mov
fsubr
imul
fmul
js
sub
lea
jns
lahf
sub
pop
call
push
in
sub
ins
mov
(bad)
fisttp
lahf
sbb
mov
push
and
into
popa
sbb
push
cmps
inc
dec
retf
and
xchg
dec
lds
or
int
repnz
ret
int
xchg
cmp
pushf
adc
pop
push
xchg
pop
inc
xchg
neg
(bad)
cs
pop
jge
pop
dec
(bad)
mov
fwait
ror
dec
in
or
add
aaa
loop
into
push
call
pop
add
mov
sub
setne
pop
xchg
(bad)
ficom
call
in
lods
cmp
xor
dec
pop
cmp
add
sti
cmp
dec
aad
stos
adc
(bad)
dec
jno
in
jmp
xor
jno
cmps
jl
dec
je
add
pop
mov
iret
scas
mov
icebp
push
(bad)
and
sub
adc
pop
lock
jmp
sub
or
sbb
js
cmp
bound
push
daa
dec
(bad)
jp
jmp
enterw
daa
add
outs
cs
push
iret
inc
call
fisub
or
enter
test
enter
in
adc
xor
and
test
sub
jp
mov
cmp
adc
(bad)
stc
retf
jge
fdivr
popf
ret
dec
jnp
mov
sahf
xchg
mov
xchg
jnp
aam
and
aas
aam
into
sar
push
mov
adc
add
push
outs
mov
popf
ret
adc
adc
out
dec
cmp
pop
(bad)
mov
cvttps2pi
out
and
jo
jbe
scas
enter
lods
loopne
jbe
adc
push
leave
cmp
repz
cmp
and
leave
int3
scas
xor
dec
shl
fldcw
jno
sub
sub
mov
mov
xlat
(bad)
leave
pop
test
and
sub
inc
sub
jl
inc
sub
add
cld
or
jle
mov
or
add
rol
xchg
outs
mov
xchg
sub
std
mov
push
pop
rol
adc
setle
popa
rcr
mov
add
(bad)
jp
pusha
xlat
add
or
mov
mov
mov
ret
scas
dec
and
mov
jae
fisubr
stos
jg
jle
inc
dec
lahf
repnz
pop
jl
pop
ins
outs
sub
call
add
mov
imul
adc
pop
mov
mov
sti
adc
mov
xchg
mov
inc
xlat
and
(bad)
adc
jno
adc
rcl
jmp
lahf
and
fs
pop
jb
inc
sbb
mov
xlat
dec
sbb
pusha
or
sahf
fistp
dec
test
sbb
mov
xor
xchg
mov
in
icebp
pop
gs
inc
xchg
add
sbb
fwait
adc
cmps
ins
inc
xchg
add
cld
je
inc
xor
jmp
or
push
mov
jmp
mov
(bad)
mov
sub
mov
push
mov
dec
test
xchg
push
mov
in
or
fnstenv
mov
sbb
sar
xchg
sahf
pop
xchg
jne
cmp
adc
xor
aam
jnp
and
mov
ins
pushf
std
clc
(bad)
(bad)
loop
call
add
fldenv
sbb
and
das
retf
push
imul
lea
pop
aas
jb
js
sub
push
int
hlt
cmp
sbb
dec
push
sti
mov
inc
sar
pusha
cmc
test
adc
(bad)
xchg
add
std
mov
movs
jl
mov
stos
xchg
xchg
xor
push
std
push
in
iret
mov
pushf
leave
cmp
cmc
cld
xchg
mov
jno
(bad)
mov
aad
sbb
cli
and
test
scas
mov
jecxz
jb
and
movs
xor
add
add
and
addr16
dec
sti
retf
dec
jbe
sub
xor
fist
inc
call
dec
jb
mov
mov
pop
cmps
imul
sub
mov
fcomp
push
jno
fisubr
(bad)
aaa
cwde
leave
retf
push
shr
lods
add
mov
mov
dec
inc
sub
xor
daa
imul
sub
in
inc
mov
fist
jno
push
xor
jns
das
adc
sub
mov
cmp
add
cmpxchg
mov
push
jne
xchg
push
enter
push
mov
hlt
aas
les
in
ins
sbb
and
pop
stos
cwde
and
mov
mov
mov
not
mov
mov
push
jne
(bad)
call
push
(bad)
xor
imul
mov
ss
push
rcl
lea
rcl
push
popa
and
push
repnz
or
pusha
jmp
mov
xor
aaa
or
mov
mov
mov
(bad)
icebp
and
jmp
adc
sub
mov
in
leave
adc
daa
inc
rcr
inc
push
jl
retf
ja
push
xor
jne
mov
std
push
ds
push
pop
fisub
inc
and
mov
ss
mov
inc
xor
std
repnz
inc
add
mov
xchg
test
sbb
ja
jecxz
sub
repz
inc
ror
pop
cmp
lods
ss
cli
push
xlat
adc
mov
lock
sbb
sub
xor
xor
js
popf
mov
and
xlat
adc
push
popf
fldenv
mov
or
and
xor
out
mov
inc
fsincos
adc
pop
inc
pop
fcmovbe
dec
movs
or
adc
fisub
call
ds
es
mov
jne
push
scas
call
fnstsw
push
lds
dec
sar
daa
scas
lea
jns
aas
fdivr
inc
loop
icebp
bound
push
xchg
mov
fstp
scas
dec
popa
adc
out
int3
cwde
std
xlat
jb
jl
dec
mov
sbb
in
ret
xchg
or
cmp
not
movs
add
lods
adc
loopne
cmp
nop
inc
ss
mov
aad
mov
icebp
add
lods
cmp
loopne
test
push
push
mov
sahf
pop
arpl
push
and
inc
add
test
xchg
test
add
arpl
ds
xlat
inc
xor
pop
inc
mov
jns
int3
mov
mov
sbb
pop
(bad)
sti
mov
and
test
mov
cmp
pop
scas
loope
push
int
stos
repnz
sbb
ds
and
arpl
mov
scas
dec
test
jecxz
jno
sub
lods
sbb
mov
dec
popf
cmp
adc
mov
sbb
ins
jge
pop
push
mov
jle
or
retf
mov
sbb
mov
adc
in
gs
add
std
push
sbb
popf
pop
nop
jns
in
(bad)
out
mov
push
in
in
lods
popa
push
jns
mov
cwde
or
jecxz
mov
adc
dec
movs
stc
dec
ror
cmps
(bad)
das
ins
dec
sbb
dec
ret
cli
jnp
inc
test
cmc
jne
(bad)
cli
jl
pushf
and
mov
sbb
fild
in
mov
iret
jo
(bad)
mov
dec
sub
mov
cmp
movs
cdq
mov
mov
mov
cld
dec
stos
jp
jbe
xchg
test
mov
and
jle
aam
ss
out
pop
or
jge
sub
inc
add
mov
mov
frstor
jns
push
lock
xchg
(bad)
mov
inc
xor
ja
lock
adc
mov
ror
test
mov
dec
loope
cwde
mov
icebp
mov
out
test
sar
sbb
cs
in
inc
jbe
mov
or
lds
loop
or
jge
shl
xchg
cmp
fst
pop
dec
add
or
mov
cmp
mov
jp
pushf
add
mov
jmp
(bad)
cmp
inc
das
add
dec
ret
pusha
shl
(bad)
icebp
out
pop
stos
(bad)
mov
aad
arpl
xor
xchg
out
fisttp
ficomp
mov
fldcw
fucom
dec
sbb
data16
icebp
push
gs
fisubr
jmp
popa
out
ror
pop
out
movs
xchg
mov
sbb
cld
xor
lods
push
pop
push
js
inc
sub
jno
push
pop
fild
xchg
sub
pop
lods
jnp
push
es
fwait
jns
cmp
hlt
pop
cmp
jge
mov
mov
ftst
adc
jne
sbb
mov
mov
cmp
sbb
gs
stos
sbb
fiadd
jle
dec
inc
xchg
cwde
test
mov
(bad)
div
loope
push
push
inc
jno
aad
adc
mov
fnstenv
in
mov
push
xchg
jae
cmc
mov
push
dec
aas
sub
popf
test
mov
and
xchg
aas
push
in
jmp
mov
loope
sar
cdq
sub
aaa
aad
leave
lock
pop
lea
out
adc
fnstsw
ret
lahf
add
mov
mov
addr16
push
mov
popa
mov
push
loopne
call
in
sub
arpl
xchg
mov
adc
cmp
lds
into
(bad)
push
adc
xchg
sbb
loop
pushf
(bad)
(bad)
jl
pop
cmp
cdq
jb
imul
and
adc
xchg
cmp
mov
ss
loopne
shr
loopne
fwait
jecxz
xlat
dec
cwde
ss
cmps
inc
int3
iret
pusha
cmp
sbb
jae
movs
jg
mov
and
adc
popa
ds
dec
aam
hlt
or
jb
pusha
adc
sahf
mov
(bad)
aam
jne
jae
dec
retf
test
cdq
mov
lods
shr
js
fisub
sub
dec
shr
cmc
fstp
mov
ret
pop
cdq
mov
mov
ret
push
in
out
sub
sti
xchg
ret
cmps
mov
cmps
aad
xor
sbb
xchg
cmp
(bad)
xor
shl
ja
mov
cmp
cmp
in
inc
adc
sub
test
in
fimul
sbb
sub
mov
ret
fidivr
cmps
pop
cmps
push
mov
ja
inc
ja
out
cmp
shr
xchg
movs
inc
inc
mov
push
ds
retf
mov
enter
sahf
jae
sbb
test
shr
cmps
call
stos
lock
mov
(bad)
shl
jne
mov
xchg
arpl
cdq
ficom
jge
clc
rcl
push
dec
jmp
in
pop
lods
mov
adc
mov
sub
fcomp
mov
ret
(bad)
in
aaa
test
add
bound
inc
mov
outs
mov
std
(bad)
sti
rcr
mov
dec
xchg
sub
xchg
out
push
jle
sbb
test
rcr
jg
mov
xchg
fmul
lahf
jg
add
push
loopne
sahf
iret
rcr
fs
mov
lock
jle
sub
and
test
nop
popa
mov
xchg
adc
add
xchg
fdivr
repnz
retf
fwait
add
sub
(bad)
out
jmp
xor
dec
sbb
sub
jo
adc
out
xchg
fidivr
fidivr
mov
int3
mov
cli
xlat
adc
xchg
mov
jge
js
aam
or
jle
or
imul
cmc
sahf
ret
movs
call
xchg
jns
mov
push
cmp
test
loope
add
and
sbb
test
loopne
in
inc
push
cli
popf
fcmove
xor
pop
cmp
aas
lock
and
xor
(bad)
and
or
sub
dec
nop
mov
mov
jmp
rol
shl
mov
sbb
ds
dec
dec
sub
add
xchg
inc
arpl
fidiv
dec
inc
push
xor
jno
and
xor
out
sbb
cmp
loop
pop
xor
jg
cmp
scas
mov
jp
(bad)
jge
mov
mov
arpl
sbb
hlt
sbb
aam
js
xchg
cmp
rcl
inc
pop
aas
or
sub
xchg
aam
sub
xchg
jecxz
(bad)
pop
xor
(bad)
test
rcl
mov
xor
inc
(bad)
cli
mov
rcl
cmp
jmp
neg
mov
out
cmp
inc
fst
neg
pop
mov
popa
and
into
push
add
jle
loopne
pop
push
add
stos
mov
mov
dec
stos
sar
std
(bad)
fidiv
mov
mov
nop
ror
cdq
pusha
arpl
cmp
xor
add
add
sub
in
hlt
pop
or
(bad)
movs
add
and
mov
cmp
xchg
and
pop
dec
call
xor
ds
xchg
push
dec
hlt
sub
jmp
and
mov
test
adc
jmp
and
aad
movs
xor
int3
into
cld
(bad)
pop
sub
mov
sub
and
fnstsw
xchg
xchg
cmps
ins
test
dec
jbe
addr16
push
mov
aaa
push
(bad)
test
push
out
pop
xchg
mov
ss
xor
mov
pop
pop
call
or
aaa
movs
loopne
dec
or
mov
mov
ins
pop
int
cmp
sub
sahf
ja
inc
jae
jmp
ret
mov
fimul
test
sbb
adc
mov
inc
add
adc
stos
mov
and
lahf
push
inc
fnsave
rcl
fadd
jmp
sbb
in
pushf
(bad)
data16
fwait
(bad)
dec
inc
fwait
sbb
and
jg
xor
adc
mov
and
ret
cmp
push
adc
push
lods
pop
scas
cmp
mov
fstp
push
push
retf
jo
sub
scas
and
mov
dec
sub
ja
fwait
and
sub
sbb
sbb
inc
xchg
(bad)
xchg
sub
daa
mov
push
ror
dec
cmp
pop
repz
popf
(bad)
jmp
mov
mov
and
std
call
jnp
and
test
sub
repnz
test
dec
xor
push
push
ja
in
cmc
dec
mov
mov
movs
sahf
push
pusha
xchg
lods
int
mov
push
(bad)
popf
inc
daa
dec
sub
sub
sub
inc
ret
sub
mov
inc
repnz
(bad)
std
nop
pop
jge
leave
and
cld
sub
in
or
repnz
lock
add
push
nop
nop
and
xor
cmp
hlt
push
inc
retf
scas
jl
mov
mov
mov
cmp
ins
pop
ss
lahf
jg
jmp
mov
mov
(bad)
icebp
pop
(bad)
cs
cmp
and
xchg
pop
pop
movs
gs
imul
xor
ret
pop
xor
mov
add
fcos
stos
inc
lahf
mov
jge
into
lods
adc
mov
test
neg
adc
(bad)
retf
sahf
cdq
push
and
pop
cs
int3
sti
aam
cmps
mov
push
sub
xlat
xor
cmp
pop
inc
ins
and
jmp
loop
ror
inc
cmps
adc
cmc
out
or
jo
push
icebp
cld
imul
jmp
adc
xchg
xchg
adc
scas
cli
lds
addr16
mov
add
test
sahf
and
sub
sub
(bad)
call
out
dec
and
mov
add
into
sahf
dec
mov
or
(bad)
out
push
sbb
sub
mov
gs
pushf
jb
adc
jl
out
dec
sbb
adc
test
stos
pop
or
cmp
pop
outs
(bad)
pop
sbb
cmp
loop
mov
outs
xchg
mul
jle
mov
leave
push
into
stc
out
loope
mov
inc
leave
aas
ins
add
xor
rcl
jge
enter
mov
dec
xor
mov
fbstp
sbb
les
(bad)
jg
cld
jb
pusha
cmps
cmc
outs
sbb
and
movs
cmp
jbe
mov
xchg
sti
movaps
sbb
mov
adc
push
mov
repz
and
js
dec
pop
adc
mov
cwde
mov
push
and
ja
movs
jmp
in
add
in
loop
mov
mov
inc
movs
loope
mov
dec
xchg
(bad)
xchg
mov
cmp
fcmovbe
enter
ins
lods
inc
cmp
inc
xor
into
scas
sub
mov
lock
mov
scas
adc
in
scas
cld
sahf
lea
clc
dec
mov
fwait
aam
shl
ins
in
scas
jmp
pop
inc
mov
jns
lea
fwait
mov
and
idiv
push
pop
xchg
xchg
(bad)
push
xor
ret
test
out
mov
mov
jo
call
push
std
cld
dec
loopne
das
mov
pop
dec
out
push
(bad)
clc
jnp
popa
je
lods
retf
pop
mov
dec
cwde
pop
adc
sub
dec
cmp
test
out
add
retf
(bad)
sahf
test
rol
outs
aad
adc
or
in
push
pop
loopne
or
xchg
mov
scas
popf
jle
push
je
test
and
or
jl
mov
ja
(bad)
enter
xchg
pop
adc
dec
fadd
(bad)
xchg
sbb
lahf
dec
vsqrtps
sub
dec
ds
push
push
enter
mov
clc
adc
jmp
mov
shr
dec
mov
addr16
xchg
xor
push
shr
inc
out
sub
icebp
mov
sbb
jb
std
dec
pop
movs
aad
scas
adc
jo
inc
jg
bswap
pop
popf
push
aaa
int3
push
inc
ins
sub
xor
dec
mov
jnp
rcl
dec
pop
sahf
enter
ret
jae
addr16
fstp
cmp
xor
add
adc
lock
dec
std
xchg
jg
fnsave
repnz
retf
rcl
xor
daa
ds
stc
cmp
cmp
sahf
xchg
adc
adc
mov
jb
push
not
out
nop
lea
dec
arpl
pop
loopne
adc
loop
add
loop
jmp
add
nop
fmul
mov
push
push
mov
or
test
mov
pop
leave
fs
jp
mov
test
xchg
inc
test
fucomip
mov
fsubp
dec
add
iret
gs
or
pop
mov
mov
xchg
cli
loopne
mov
adc
int
mov
(bad)
enter
add
xchg
jmp
xchg
aas
dec
rol
in
mov
aaa
jmp
jno
push
imul
sub
jge
mov
daa
jno
and
cmp
mov
or
mov
inc
mov
fisubr
(bad)
mov
nop
test
daa
ja
xrelease
fdivr
ins
stos
daa
in
mov
mov
mov
jg
or
popa
jl
xchg
cmc
push
mov
lock
adc
mov
in
and
mov
sti
and
je
data16
jmp
ins
imul
repz
mov
mov
ins
inc
mov
sti
push
inc
add
inc
lock
bound
push
push
test
enter
sbb
enter
xchg
mov
(bad)
adc
xor
dec
mov
test
push
cmps
pop
js
jge
popa
inc
inc
push
adc
mov
sahf
in
dec
pusha
and
and
cmps
int
mov
pop
jp
shr
inc
es
addr16
mov
pusha
out
mov
push
cwde
pop
xor
mov
mov
fisttp
ss
js
es
xor
in
(bad)
loop
dec
das
fidivr
nop
push
or
add
not
push
mov
xlat
cwde
mov
jecxz
shl
fcmovnb
mul
jmp
mov
xor
xchg
mov
mov
add
add
jnp
push
or
dec
call
or
aaa
fldenv
in
call
xor
ret
xchg
push
data16
pop
test
mov
add
and
ja
xor
dec
sub
pop
fs
mul
cs
push
mov
mov
cmp
pushf
sub
int
push
inc
push
aad
jne
xor
popf
mov
call
jae
cwde
xchg
movs
movs
xor
movs
ss
push
sub
fisubr
push
test
mov
dec
adc
pop
push
add
and
and
in
stos
les
inc
mov
aas
call
repnz
data16
pusha
add
pop
out
and
stos
popa
dec
sub
push
addr16
cmc
in
loop
int3
push
shl
ficomp
xchg
ja
or
jb
les
cmp
sbb
pop
mov
adc
clc
sub
icebp
aas
sbb
pop
outs
adc
xor
ds
test
jle
(bad)
cmp
or
and
jle
push
fmul
test
fld
xor
in
daa
mov
add
jl
or
jns
mov
(bad)
cs
mov
mov
sub
scas
adc
push
mov
imul
push
jb
(bad)
xor
mul
in
dec
and
mov
fdiv
ins
idiv
data16
mov
xor
(bad)
xchg
sti
into
ficomp
das
fcom
into
or
mov
ja
repz
cmp
jecxz
fcmovnbe
push
test
popa
scas
push
sub
mov
daa
mov
xchg
inc
ins
movs
mov
fcom
loopne
inc
mov
mov
and
mov
test
xchg
pop
jmp
shl
ficomp
jmp
mov
iret
fst
std
out
add
push
push
xor
xlat
pop
add
mov
push
jnp
mov
cmp
out
nop
lock
and
imul
mov
cli
in
jo
hlt
fidivr
std
sbb
dec
or
dec
fcmovb
test
push
cwde
popf
add
mov
imul
xor
mov
add
adc
je
jns
xchg
sbb
and
mov
lds
aas
int
inc
sub
mov
sbb
cmp
or
adc
pop
inc
test
fcomp
add
pop
lea
mov
sbb
aad
xchg
enter
mov
push
in
lods
cmp
and
enter
pusha
and
xchg
ror
shl
cwde
scas
into
mov
fbld
cld
aad
bound
aam
xchg
mov
adc
add
and
mov
stos
xlat
leave
and
ret
jbe
inc
or
and
pop
mov
pop
stos
pop
mov
ss
into
xor
xchg
sahf
ss
mov
and
retf
imul
imul
push
and
movs
in
sti
or
lods
add
cmp
in
push
cmp
clc
(bad)
xor
jp
out
pop
sub
bnd
jb
or
mov
mov
daa
add
pop
test
dec
xor
pop
sub
mov
gs
int3
xlat
cmc
lock
add
cmp
mov
pop
and
enter
xor
in
loopne
out
and
xor
fidiv
adc
cmp
pop
outs
repz
ret
in
fnstcw
cmp
sub
cmps
out
in
ins
dec
ror
push
adc
iret
imul
add
cmp
scas
movs
dec
jns
xlat
(bad)
pop
sahf
pop
int
jb
std
ja
lahf
mov
mov
mov
inc
stos
pop
int3
hlt
or
das
xlat
rdtsc
and
lea
rep
(bad)
ret
xor
out
mov
fistp
clc
(bad)
jl
xchg
and
mov
xor
int3
arpl
jno
test
or
sub
popa
pop
sub
fs
sbb
sti
aad
push
sbb
call
push
stos
adc
and
retf
pop
ret
jo
inc
das
sbb
adc
xchg
stos
loope
xchg
mov
clc
sub
movs
push
jno
pop
loop
jo
dec
(bad)
mov
mov
es
cmp
mov
pusha
fisttp
push
retf
adc
lock
test
sub
das
inc
add
pop
loop
fdivr
adc
jp
or
imul
scas
or
inc
add
in
fucom
test
fistp
sub
mov
adc
inc
jmp
pop
rol
cmp
or
xor
aas
add
sub
mov
sbb
adc
in
sar
pop
inc
in
add
dec
pusha
pop
or
add
push
les
sar
mov
mov
xchg
in
cmp
mov
and
mov
pop
mov
xor
int3
test
ins
aad
lods
loope
ret
xchg
dec
dec
mov
mov
pop
lods
pusha
retf
test
dec
xor
in
xchg
push
adc
std
pop
cmp
dec
sub
pop
popf
sti
sbb
mov
mov
pusha
jg
mov
xchg
adc
sbb
xchg
pop
shr
pop
cmp
jmp
inc
dec
jecxz
jbe
ins
pop
jmp
mov
push
adc
mov
(bad)
mov
ror
pop
jnp
and
shr
xor
dec
inc
pop
shl
stos
jbe
arpl
mov
mov
fdivr
push
mov
jae
outs
js
xor
ror
lock
das
mov
(bad)
push
leave
lahf
(bad)
(bad)
dec
xchg
loop
lea
pop
push
ins
out
inc
xor
cmp
sub
xor
push
aas
popf
add
mov
cs
adc
aas
pop
(bad)
ficom
mov
mov
or
fisubr
retf
shl
jecxz
es
xor
aaa
or
add
mov
and
test
mov
dec
imul
aam
int
cmp
pop
inc
jns
(bad)
pop
xchg
aam
(bad)
out
push
clc
mov
jl
arpl
test
push
mov
leave
dec
fwait
mov
cwde
(bad)
mov
sub
aas
mov
lahf
inc
mov
add
(bad)
jnp
outs
nop
adc
cdq
mov
in
add
loop
sti
push
retf
aad
push
xlat
and
aad
add
sar
loop
sbb
push
ins
push
dec
stos
out
out
jnp
adc
add
sub
jle
fistp
test
pushf
xchg
clc
xor
cmp
push
or
jmp
fistp
js
mov
add
in
mov
adc
lahf
xor
jno
outs
rol
adc
sbb
imul
and
inc
pushf
in
pop
push
cmps
dec
cmps
inc
sub
adc
mov
add
dec
sbb
ja
jmp
push
pop
fs
jmp
mov
ficomp
jl
or
adc
mov
lods
pop
cmp
aam
imul
mov
rol
aad
sahf
and
xor
cdq
mov
stos
repnz
scas
cmps
fidiv
daa
jmp
xlat
retf
sub
sbb
cmp
jbe
addr16
inc
adc
mov
icebp
sbb
cmp
sbb
addr16
outs
movs
in
inc
addr16
xchg
movs
fiadd
push
add
xchg
and
push
mov
xor
lds
xchg
loopne
ret
icebp
sub
and
sbb
mov
adc
cmc
inc
jae
icebp
push
mov
call
vpminsw
mov
xor
cmps
mov
cmps
repnz
sub
arpl
fld
out
fbstp
and
mov
dec
jp
fsincos
ffree
repz
pusha
and
call
push
or
sbb
push
mov
adc
pop
imul
dec
cdq
ror
mov
xchg
test
int3
mov
es
cmp
stc
ds
and
into
push
ret
inc
jl
mov
mov
repz
jno
adc
cmp
je
mov
inc
inc
scas
cmp
test
int
test
mov
xchg
inc
shr
retf
bound
and
stos
cmp
mov
and
(bad)
jb
enter
xchg
sbb
xchg
jecxz
fiadd
dec
sub
jo
(bad)
arpl
aas
ja
stc
push
outs
fild
cmp
in
movs
sub
push
sub
push
stos
mov
fimul
or
movs
push
mov
mov
sahf
(bad)
movs
jbe
inc
pop
cli
sar
sbb
dec
inc
dec
data16
out
mov
xor
outs
mov
mov
adc
jne
dec
mov
mov
loope
mov
lods
xlat
pusha
out
sahf
es
cwde
lds
push
sub
call
push
retf
mov
cmp
mov
mov
add
out
imul
sub
xchg
sbb
pop
push
dec
rep
push
repnz
in
or
movs
inc
pusha
cmp
imul
inc
shl
das
jge
xchg
push
iret
arpl
jo
sbb
outs
(bad)
(bad)
jo
adc
inc
sub
push
push
and
mov
icebp
aam
push
mov
test
addr16
fs
in
test
dec
pushf
add
xchg
ja
imul
les
aaa
loop
mov
sub
jmp
(bad)
scas
aam
xchg
xchg
out
inc
daa
aaa
sbb
data16
mov
and
push
sub
push
loope
xchg
das
das
xchg
jno
(bad)
fidivr
fmul
mov
out
bound
fsubp
jge
aaa
inc
inc
jae
adc
out
daa
mov
cmp
scas
popa
push
cmp
jmp
add
mov
sbb
jb
mov
ror
jne
ins
add
lea
mov
and
jns
xchg
push
mov
cvttps2pi
icebp
pop
stos
xor
rcl
inc
daa
lods
cmp
int
mov
dec
retf
dec
jno
ins
out
or
(bad)
out
les
pop
ins
or
pop
jo
ss
fwait
sbb
jb
data16
inc
cwde
or
cmp
imul
ss
adc
mov
cmc
cmp
sti
mov
add
adc
scas
push
fldcw
in
gs
adc
push
push
push
xchg
imul
mov
fild
mov
mov
out
movs
stos
gs
xor
adc
mov
retf
mov
mov
jo
js
add
mov
loopne
dec
daa
and
cli
sub
adc
sub
enter
or
aam
push
leave
inc
push
std
pop
sub
xor
or
sbb
push
js
mov
pop
mov
mov
adc
or
push
dec
nop
and
mov
pop
cmc
mov
pop
sub
lock
push
adc
(bad)
cmc
pop
sbb
mov
push
sbb
xchg
cmp
pop
shl
and
cmp
std
sbb
or
jbe
inc
mov
jl
sub
ins
fistp
cld
out
or
sbb
lahf
sahf
push
xchg
xchg
in
xchg
in
xchg
out
into
int
adc
inc
jno
add
pop
stc
stos
push
push
or
jp
cmp
and
sbb
fwait
enter
aas
hlt
into
icebp
push
push
xor
repz
xchg
adc
mov
inc
pop
aaa
into
push
test
adc
cwde
adc
test
inc
pusha
push
add
clc
ja
in
mov
push
sbb
enter
mov
rol
imul
sub
inc
(bad)
pop
xor
ja
shr
or
sub
sahf
and
pop
sub
jmp
pop
popf
ins
nop
rcr
mov
popa
cld
rcl
lods
imul
jp
jle
cmc
sub
in
sub
cwde
popf
push
mov
xchg
jecxz
test
mov
test
daa
cdq
cmp
(bad)
fdiv
retf
mov
ins
xchg
loopne
jl
pop
les
sbb
inc
hlt
nop
repnz
pop
fwait
test
inc
push
(bad)
push
inc
(bad)
in
mov
repnz
xchg
retf
dec
jb
xchg
inc
movs
test
mov
fldl2t
cmp
add
scas
cmps
sub
pushf
dec
es
lea
sbb
jmp
stc
push
pop
push
je
aam
(bad)
bound
and
mov
in
popa
popf
xchg
lock
adc
lea
dec
and
sub
adc
shr
lods
dec
sub
test
shl
fs
pop
fiadd
clc
cmp
sub
cmp
loop
mov
popf
outs
lock
xchg
sbb
push
in
stos
(bad)
dec
aaa
xor
mov
int
pushf
mov
mov
push
sub
add
shr
cmp
push
ja
cmps
leave
dec
aam
popf
push
dec
jl
or
(bad)
add
sub
cmps
int3
ins
inc
fucomi
(bad)
pop
xchg
into
(bad)
jae
int
mov
loope
inc
jo
add
inc
add
pop
xchg
mov
jmp
push
mov
pop
bound
bound
adc
dec
in
repz
into
rcl
mov
es
(bad)
jo
test
int3
mov
cmp
js
fxch
push
add
loope
cmps
cdq
sub
fldcw
xor
and
aam
sub
mov
dec
jno
fsub
sub
fisubr
lea
xchg
add
es
cwde
test
(bad)
push
lods
pop
adc
std
fcom
adc
push
dec
in
mov
mov
sub
xchg
scas
retf
shl
pop
inc
push
dec
dec
cmp
push
or
sub
xchg
xor
in
(bad)
jp
and
push
enter
xchg
or
loop
outs
fsub
adc
fcomp
sub
dec
(bad)
aam
jns
repnz
fsub
mov
cmp
and
and
mov
lock
sub
rol
mov
jle
xchg
fwait
sub
inc
test
fild
mov
pop
ds
push
pop
ja
gs
push
rcr
test
add
xchg
retf
jbe
push
push
and
jbe
aas
aam
push
repnz
loop
(bad)
retf
push
mov
loope
movs
jl
sahf
xchg
sub
ss
(bad)
mov
(bad)
adc
jp
push
sub
repnz
(bad)
sar
mov
pop
retf
pop
jl
inc
pop
stos
ds
loopne
push
fimul
loop
pop
test
xchg
jge
sti
adc
lahf
push
mov
jmp
cmp
xorps
fwait
inc
pop
mov
jp
xchg
fisubr
mov
cli
fld
(bad)
or
xor
mov
(bad)
cwde
fsub
xlat
sub
aam
sub
aaa
and
aad
frstor
lahf
mov
jmp
push
mov
scas
inc
mov
xor
(bad)
jne
push
add
sbb
retf
add
add
and
pop
out
fwait
dec
dec
popa
pop
imul
ins
push
jle
fild
xor
outs
sub
fisubr
ja
cmp
push
mov
pop
inc
add
imul
cli
sbb
test
fscale
jne
xchg
repnz
fidiv
movs
loopne
retf
mov
inc
aas
ja
shl
aam
adc
shl
lods
repz
and
neg
stos
pop
je
fisub
dec
fisttp
mov
and
xchg
hlt
cwde
jp
hlt
adc
gs
mov
jmp
call
mov
inc
(bad)
push
mov
or
mov
xchg
sbb
push
test
movs
pop
cmp
stos
loop
out
and
out
sbb
test
jo
hlt
adc
inc
mov
popa
dec
push
outs
std
call
sub
enter
cmp
loope
cmc
or
push
sbb
jecxz
adc
ins
inc
retf
pop
int3
lock
pop
xchg
mov
fidiv
and
and
retf
pop
push
fadd
inc
stc
sbb
iret
repnz
xor
or
push
xchg
xchg
adc
movs
pushf
sbb
fnstsw
repz
xor
and
movs
jbe
sub
stos
lock
pop
inc
pop
in
jmp
cmp
xlat
mov
jne
inc
inc
jbe
jge
adc
mov
out
lea
mov
pop
cld
jp
das
adc
shl
inc
xchg
add
push
out
cmp
xlat
inc
mov
in
xor
dec
xor
jl
loope
and
cs
mov
ss
or
cli
sub
cmp
fidiv
adc
scas
sti
mov
lods
out
add
cmp
cmc
fadd
mov
call
pop
jl
out
aam
cmc
dec
sbb
xor
jmp
icebp
jecxz
cmp
cli
xchg
call
add
pop
mov
inc
dec
xor
mov
or
adc
mov
push
add
cmp
sti
mov
sub
scas
adc
xchg
sbb
mov
fwait
imul
adc
lods
daa
dec
xchg
retf
inc
push
push
jge
sbb
aam
stos
mov
rcr
push
inc
(bad)
int3
pop
mov
jmp
mov
jl
rcl
xlat
jl
dec
or
int
inc
loop
pop
mov
retf
fsub
mov
mov
popf
dec
pop
xchg
xor
retf
lahf
mov
xor
mov
daa
cmp
not
addr16
fisttp
cwde
fisub
sar
mov
ins
pop
jle
lods
mov
or
movs
das
lds
jnp
in
jb
jb
inc
or
dec
test
ror
js
xor
std
mov
inc
add
movs
test
mul
or
jne
jg
pop
ins
cmp
bound
scas
xchg
das
add
add
fbld
cdq
pop
add
mov
xchg
or
repnz
add
stc
popf
(bad)
or
ja
fdiv
out
adc
rcr
sub
test
cli
addr16
inc
in
push
loope
fs
das
push
dec
je
and
inc
and
into
sub
clc
or
inc
fnsave
cld
xchg
(bad)
aaa
and
inc
sbb
cmp
mov
mov
jne
in
call
cmp
jg
mov
dec
or
das
jg
aam
ficomp
xchg
inc
popa
mov
scas
test
push
mov
pop
retf
stc
mov
xchg
cmp
into
xor
movs
(bad)
(bad)
repz
and
inc
daa
int
in
(bad)
and
adc
jno
cwde
enter
inc
in
das
add
dec
out
inc
out
(bad)
jne
mov
cmp
enter
sub
jecxz
sub
xchg
cmp
mov
je
pop
mov
aam
fisub
jge
mov
add
xor
xchg
or
push
int
imul
or
shr
pop
pop
xchg
xchg
mov
ror
cmps
cld
call
icebp
cmp
cmp
aad
xchg
gs
push
fistp
outs
cmp
mov
mov
test
dec
fsub
aaa
enter
retf
cmp
test
shl
out
arpl
pop
and
xchg
pop
enter
jnp
sub
mov
xchg
push
das
mov
sub
lods
push
xor
inc
and
ja
or
pop
fmul
shl
push
das
mov
(bad)
daa
xchg
mov
inc
repnz
mov
xchg
lods
into
sti
sbb
jns
adc
repz
mov
test
jl
std
xor
into
mov
sbb
gs
imul
das
and
aad
xor
test
enter
paddsb
sbb
int3
test
dec
sti
inc
adc
dec
lds
loop
pop
scas
pop
and
in
sbb
rcl
pop
sahf
leave
in
jns
pop
push
out
(bad)
mov
xchg
or
rcr
in
mov
pop
push
pushf
sub
add
sbb
dec
out
mov
mov
retf
push
fnstenv
jnp
(bad)
out
rep
stc
jbe
mov
sub
ret
jns
sbb
and
out
mov
pop
sbb
inc
xchg
idiv
lock
div
scas
mov
sub
pop
lds
add
div
aaa
aad
mov
or
sbb
call
add
lea
and
das
mov
data16
data16
movs
rol
mov
sar
mov
xchg
stc
nop
mov
es
sub
mov
sub
mov
inc
cmps
nop
push
jne
cmps
fmul
inc
clc
jmp
fcomip
lahf
add
out
xchg
or
mov
inc
(bad)
mov
gs
sbb
cmp
jo
mov
lods
mov
and
imul
or
jo
jbe
xchg
outs
sub
mov
push
pop
xor
sbb
ss
pusha
pop
repz
jecxz
into
mov
test
or
xchg
movs
xor
jbe
dec
or
dec
loope
push
pop
cli
cli
fs
push
cmp
fcom
jg
aad
mov
(bad)
fnstsw
mov
lock
iret
xchg
jns
mov
xor
nop
les
popf
fist
jmp
sar
xchg
sbb
sar
mov
scas
jge
inc
jno
jns
les
add
iret
pop
lahf
or
ret
movs
xchg
xchg
jmp
mov
adc
fwait
jle
adc
dec
mov
sub
fdivr
jb
jge
xchg
push
jp
cmp
sbb
add
in
add
frstor
cmp
inc
sbb
pop
xor
sti
fdiv
fmul
ins
(bad)
xchg
sub
pusha
sub
(bad)
mov
pop
(bad)
fstp
adc
push
int
push
sbb
hlt
jmp
or
mov
or
(bad)
xchg
xchg
jmp
cdq
out
sub
xabort
jbe
push
xor
outs
sar
xor
iret
movs
call
mov
push
and
ret
and
adc
pop
push
jl
das
pop
sbb
daa
or
push
cwde
xchg
mov
cmp
pop
outs
shr
sbb
inc
int3
ficom
mov
(bad)
mov
xor
inc
stos
sub
adc
inc
bound
pop
push
dec
mov
dec
hlt
adc
sti
and
mov
fs
rol
movs
push
inc
inc
xchg
int3
xchg
shr
bound
aam
out
jbe
ret
gs
loop
add
adc
ret
inc
mov
or
push
inc
pop
fs
cld
(bad)
inc
fiadd
mov
and
push
push
mov
je
push
ins
cmp
mov
push
cmp
pop
lea
sar
loope
fcomp
test
jno
mov
push
dec
jae
lods
pop
(bad)
hlt
out
push
mov
cli
xor
popf
xchg
in
add
xor
cmp
dec
daa
lahf
xchg
shl
jo
push
and
jge
push
mov
xchg
retf
leave
(bad)
mov
ret
dec
shl
movs
push
xchg
jb
es
push
mov
and
sub
xchg
mov
xchg
sti
retf
and
std
cli
das
cmp
shl
hlt
xor
mov
retf
sub
jnp
xchg
jecxz
sbb
test
imul
and
mov
leave
dec
int
push
sbb
mov
dec
lods
gs
call
inc
fucomip
mov
push
pop
gs
mov
jge
push
add
fcomp
mov
and
pop
mov
and
xor
ja
mov
out
xor
aam
(bad)
push
inc
xchg
adc
fdiv
jle
sbb
push
cli
sub
sahf
sbb
xchg
inc
mov
pop
(bad)
call
mov
dec
aam
mov
dec
push
xor
jno
sub
frstor
js
sbb
fsubr
mov
fnstenv
jp
jno
adc
or
cmp
sub
and
ret
out
or
push
jmp
into
dec
imul
sub
adc
cmc
loopne
and
jo
out
xor
push
or
sbb
arpl
into
or
lods
jnp
test
popa
sub
jl
cmp
xor
jnp
outs
or
std
jmp
jnp
adc
test
jae
outs
fwait
add
jl
inc
xchg
jne
inc
sub
fldenv
dec
shr
daa
and
mov
inc
ret
xchg
xchg
pop
cmp
ret
nop
enter
fs
mov
inc
jl
sub
pushf
pop
jl
jl
add
enter
movs
leave
cdq
xchg
cmp
ds
(bad)
or
cli
ret
iret
in
sti
fst
movs
or
fist
inc
xor
sbb
fisubr
pusha
clc
xchg
ins
(bad)
pop
test
adc
adc
xchg
sti
and
add
sub
push
test
outs
dec
add
and
push
arpl
imul
sub
push
aad
jl
push
inc
xor
fisubr
arpl
add
jo
inc
ja
into
push
dec
shl
sub
test
pop
pop
xchg
int
test
dec
jae
xor
or
ror
pushf
cmp
(bad)
jo
mov
mov
mov
xor
icebp
jnp
add
or
push
sbb
das
xlat
cld
push
sub
cwde
icebp
mov
sub
or
xor
and
(bad)
popf
movlhps
pop
and
iret
inc
cmp
cwde
push
sar
lea
lea
xchg
mov
nop
and
jle
shl
jmp
out
jb
push
int
aas
js
or
mov
pop
ja
xor
sar
fisubr
adc
mov
aam
hlt
scas
lods
in
retf
rcr
rcr
adc
fld
in
das
icebp
mov
push
sbb
lods
icebp
xchg
sar
popa
and
fcomp
pop
loope
stos
or
out
shl
cmps
cmc
hlt
sbb
xchg
inc
gs
pop
jns
dec
or
or
and
sub
push
push
pop
mov
ror
pushf
inc
and
jl
popf
xchg
add
test
fsub
pop
push
jae
sbb
clc
mov
jp
cmp
sahf
arpl
xchg
cmp
add
inc
popf
scas
mov
sub
jo
fcomi
out
jle
mov
jno
fdiv
mov
mov
mov
xor
clc
arpl
xor
mov
add
inc
cdq
jecxz
push
push
in
popf
mov
(bad)
out
mov
(bad)
xor
push
pop
push
lock
jo
(bad)
aaa
in
add
dec
inc
xor
or
pop
cmc
push
outs
jb
loopne
xchg
or
call
hlt
outs
ror
sub
mov
fnstcw
icebp
retf
dec
fmul
sub
rcr
cmp
mov
mov
and
jmp
xchg
sub
inc
(bad)
add
ja
inc
pusha
mov
dec
ffree
aam
push
mov
(bad)
loop
es
push
rcr
adc
and
in
sbb
add
xchg
sub
dec
mov
bound
sub
sub
jmp
xchg
sub
nop
fdivr
xlat
mov
xor
out
je
loope
and
daa
pusha
mov
ds
mov
mov
push
movs
cmp
jecxz
(bad)
jmp
sar
stc
jo
das
sbb
xchg
sub
sahf
shl
fwait
xchg
mov
(bad)
push
in
test
push
sub
adc
cmp
sub
ret
ret
loop
xchg
(bad)
dec
js
fs
imul
loop
pop
jbe
aam
jle
pop
mov
xchg
mov
xchg
jns
pop
imul
pop
sahf
mov
sahf
outs
rol
sbb
adc
sub
lock
jae
cs
dec
dec
loop
push
jb
shl
inc
ficomp
pop
sub
stos
xchg
das
xchg
pop
jmp
popa
mov
push
mov
out
jecxz
push
add
out
hlt
pop
(bad)
mov
test
out
fnstenv
cdq
sbb
ss
call
push
xor
(bad)
data16
fcom
shr
(bad)
or
jle
fdivp
push
add
pop
or
sbb
repnz
push
or
inc
mov
pop
mov
inc
sti
xchg
jo
mov
test
inc
and
sbb
mov
pusha
cs
pop
add
pop
xor
call
stc
lods
js
inc
and
clc
stc
cmps
adc
call
repnz
jmp
sub
rcl
test
inc
ror
fiadd
sub
sub
xor
mov
xor
stos
push
out
nop
add
hlt
in
xor
adc
xor
adc
fdivp
lock
js
xchg
lods
repz
loope
jmp
fs
enter
push
push
aaa
gs
sahf
je
enter
ss
add
out
cdq
pop
mov
fld
mov
lods
xor
sub
daa
mov
or
fiadd
mov
ins
sub
sbb
fbstp
gs
outs
(bad)
sbb
xchg
mov
out
inc
inc
sub
inc
mov
cmp
movs
add
int
mov
sbb
es
cwde
ins
lods
push
push
sar
(bad)
dec
movs
loop
mov
leave
imul
inc
and
jecxz
cmps
movs
adc
push
xchg
xchg
xchg
xor
enter
mov
addr16
lock
jl
adc
fiadd
aad
jnp
cmp
scas
xchg
mov
fistp
jl
mov
xor
(bad)
push
mov
sbb
add
pushf
add
push
(bad)
jmp
outs
aam
mov
ficomp
loop
adc
adc
mov
bound
mov
retf
popa
ins
repnz
ficomp
cdq
adc
(bad)
outs
retf
cld
push
pop
sbb
add
pop
aad
je
icebp
mov
imul
lock
lods
(bad)
and
ror
aam
pop
inc
xchg
jl
les
test
pusha
out
inc
sbb
mov
jo
test
das
mov
imul
cwde
loopne
fisub
jg
test
pop
mov
pop
dec
and
not
shr
jo
pop
ss
dec
push
pop
inc
add
cld
test
pop
cwde
ds
test
sbb
push
mov
jl
pop
cld
imul
es
fidivr
loop
jb
mov
xor
(bad)
mov
dec
pop
add
push
push
sbb
das
ret
jns
addr16
sub
xchg
mov
inc
std
rcl
fstp
adc
push
cmp
jp
arpl
xchg
xchg
add
nop
js
das
pop
std
idiv
inc
add
or
inc
or
daa
cmp
mov
sub
mov
in
sbb
ud1
sbb
clc
cmp
sub
out
ficomp
mov
cmc
repz
or
mov
cmp
shr
test
test
rcl
and
shl
movs
movs
dec
sbb
xor
bound
push
sbb
out
push
xlat
lods
je
pop
clc
mov
cmp
push
push
mov
in
mov
repnz
cld
push
pop
cmp
add
xchg
hlt
imul
ja
loopne
cmp
cld
outs
ss
and
loop
scas
fisttp
jb
jge
jmp
push
mov
jge
shl
adc
(bad)
mov
pop
sbb
mov
ja
cmp
dec
pop
aam
(bad)
jg
jbe
bnd
push
das
adc
jno
into
shl
inc
inc
repz
fidivr
fiadd
das
xor
std
sub
sub
or
pop
xchg
rol
out
sub
cmps
lods
cmp
mov
xchg
in
xchg
data16
cmps
data16
mov
jb
daa
inc
scas
inc
sar
ins
movs
in
mov
dec
adc
xchg
(bad)
ret
loope
mov
int3
scas
loope
dec
dec
imul
outs
loopne
jns
mov
cmp
pop
push
enter
lock
mov
or
js
adc
(bad)
push
mov
scas
loop
jecxz
les
(bad)
or
jle
jmp
jmp
out
cmp
cvtdq2ps
xor
pop
add
cmp
jno
repz
fimul
push
(bad)
xchg
ret
inc
stos
popf
add
lods
mov
sub
sbb
adc
(bad)
push
out
dec
ss
fs
in
mov
jmp
lods
mov
mov
inc
xor
push
inc
(bad)
pop
mov
aad
xchg
dec
stc
jge
int3
push
mov
in
mov
mov
test
aad
jmp
and
dec
div
cmp
mov
add
cmp
jecxz
mov
mov
dec
lahf
fwait
icebp
cmp
jmp
mov
push
es
jg
sub
cmp
inc
sti
mov
and
pop
popa
sbb
lea
cmp
xlat
in
jo
in
inc
mov
imul
pop
pusha
ret
mov
popf
mov
into
icebp
lds
iret
into
or
pop
jmp
sbb
inc
sub
das
xchg
cmp
dec
leave
arpl
(bad)
rol
cmp
dec
imul
fcom
pushf
cmc
cmc
ss
jno
and
icebp
ret
es
out
cmps
in
imul
mov
mov
adc
retf
std
dec
mov
pop
daa
jmp
sub
inc
sbb
les
push
aaa
retf
dec
outs
xor
ds
xchg
push
jmp
ins
mov
lods
lahf
pushf
lods
shr
retf
nop
scas
jg
sbb
sti
push
idiv
dec
mov
(bad)
mov
out
in
jmp
jno
test
ror
scas
or
sbb
push
xchg
int3
dec
dec
mov
aas
mov
push
jno
mov
push
mov
fdiv
lahf
adc
nop
adc
xor
or
mov
push
xlat
mov
(bad)
hlt
fcmove
mov
popa
lahf
(bad)
or
movs
aam
and
add
inc
adc
mov
push
or
test
jge
fild
push
sub
mov
out
loopne
test
cmp
add
inc
xchg
fistp
cmp
push
pop
inc
in
xchg
mov
and
in
dec
pmullw
cs
push
mov
test
mov
test
push
test
push
loopne
push
xchg
test
push
adc
push
sbb
xlat
int3
and
clc
xchg
sti
sahf
in
sbb
xchg
iret
loop
add
dec
scas
daa
push
bnd
pop
xchg
ret
adc
xor
fidivr
push
mov
in
mov
pop
cmp
imul
in
push
jnp
(bad)
adc
test
dec
add
in
hlt
mov
repnz
push
xchg
std
mov
movs
iret
mov
adc
pusha
call
inc
ret
stos
popa
cwde
dec
fwait
xchg
sbb
jns
and
xor
ds
leave
mov
cmp
lahf
mov
jmp
pop
dec
inc
lea
inc
cmc
fwait
repz
push
loop
xchg
sub
movs
or
jl
jae
lods
jge
jg
sub
mov
imul
mov
mov
addr16
outs
pusha
mov
je
pop
add
xor
mov
retf
pop
and
add
shl
fild
push
ret
push
xchg
sub
mov
clc
xchg
adc
lds
nop
bound
sar
(bad)
mov
pop
ret
pop
xor
loop
fiadd
es
mov
cmp
add
neg
jno
mov
sbb
(bad)
adc
cmp
sahf
dec
adc
repz
out
and
jl
add
ret
clc
scas
sar
mov
add
inc
in
fwait
rcl
aam
arpl
add
push
or
cmps
out
addr16
ror
dec
shl
(bad)
lods
add
sbb
loop
cmp
pop
adc
add
shr
out
std
icebp
push
mov
and
and
xchg
push
dec
jg
inc
cdq
aam
dec
jecxz
cdq
call
mov
data16
mov
gs
fist
out
fnsave
xchg
mov
fxch
test
sub
retf
iret
stos
dec
scas
xacquire
fisttp
les
ret
cmp
bound
retf
movs
sahf
push
cli
mov
jnp
int
cmp
add
cmp
jno
(bad)
dec
adc
imul
mov
cwde
rol
arpl
add
cli
imul
out
cdq
and
out
pop
and
xor
mov
or
sbb
cmp
sahf
mov
movntq
jns
fist
and
xchg
(bad)
rcl
pop
ja
push
add
cmp
fwait
nop
aas
xchg
mov
adc
mov
ret
jnp
fdivr
aam
(bad)
pushf
xchg
pushf
xchg
clc
xor
repnz
loope
jp
dec
mov
les
xchg
ins
sar
repz
jbe
in
mov
(bad)
mov
in
adc
xlat
mov
daa
out
sbb
pop
cmp
inc
loop
add
addr16
cli
popa
(bad)
out
mov
mov
sub
daa
fsubr
icebp
(bad)
mov
ficomp
cmp
mov
repz
inc
add
mov
int
xor
mov
test
dec
repnz
retf
fwait
imul
mov
shr
scas
retf
mov
ficomp
mov
mov
(bad)
cmovno
adc
cmc
jecxz
enter
cmp
xchg
jae
dec
add
sahf
idiv
in
push
push
fwait
jmp
and
in
jnp
stc
push
dec
xchg
cmps
xchg
xlat
push
adc
out
adc
or
cli
pop
xor
rol
arpl
jae
lea
mov
push
outs
pop
or
or
(bad)
ds
sub
cli
pop
nop
retf
fst
jne
and
add
cmp
mov
movs
or
mov
nop
popa
in
aaa
je
cmc
add
movs
add
xlat
(bad)
cmp
shl
test
cmp
mov
mov
inc
das
inc
arpl
fsub
and
(bad)
(bad)
icebp
fnstsw
popf
(bad)
ds
sti
stos
movs
stos
aaa
pop
jp
sbb
rol
pop
ds
int3
outs
adc
mov
or
fist
jg
adc
sbb
fnstcw
jg
test
jnp
enter
jg
lds
imul
xchg
mov
pop
dec
cmp
mov
jmp
push
xor
in
ret
add
stos
sbb
jge
(bad)
pop
xor
ds
mov
xor
mov
ret
(bad)
adc
inc
sub
in
push
dec
fild
push
ja
pop
jecxz
jl
jmp
adc
clc
dec
cmc
cmp
fiadd
stos
retf
iret
cs
mov
in
mov
mov
mov
retf
mov
cs
add
jns
adc
xor
add
cmp
pop
mov
jmp
lods
sbb
fnstcw
add
loopne
scas
add
arpl
cld
into
sbb
pop
stc
fidivr
inc
es
xchg
rcl
sti
test
lea
mov
sbb
test
test
xchg
enter
ret
sti
gs
and
mov
jecxz
mov
jl
ror
imul
xchg
add
mov
fimul
jo
retf
das
repz
aas
adc
ins
and
mov
(bad)
clc
(bad)
mov
test
push
jb
cdq
test
lock
dec
addr16
inc
cmp
adc
mov
or
je
push
fwait
dec
iret
popf
imul
dec
adc
xor
inc
xor
mov
outs
ja
sbb
cmp
push
jle
xchg
push
lock
shr
pop
cld
rcl
retf
inc
(bad)
push
fisub
xor
(bad)
xchg
mov
mov
fneni(8087
repz
sbb
xor
sub
xchg
jp
xchg
addr16
mov
push
pop
call
xor
push
mov
dec
lods
mov
sub
xchg
xor
mov
retf
dec
shr
loope
ds
pusha
sbb
mov
sub
cli
(bad)
iret
xchg
add
sahf
fdivr
push
push
mov
and
cli
aad
nop
or
jp
sbb
addr16
mov
adc
rcr
je
cwde
(bad)
inc
in
inc
xchg
mov
ss
xchg
sti
test
or
push
pop
fwait
inc
faddp
dec
xchg
adc
pusha
stc
mov
and
pop
push
push
out
lods
repz
mov
add
out
shl
push
rcl
mov
add
and
call
pop
enter
out
xchg
retf
adc
(bad)
aas
neg
enter
inc
ins
cmp
(bad)
dec
mov
nop
out
xor
jp
sbb
lods
xor
ins
mov
bt
ror
pop
call
hlt
inc
inc
(bad)
cmp
lea
cmp
push
pop
(bad)
mov
scas
call
inc
jle
fs
fwait
mov
jmp
shr
clc
pop
push
daa
add
in
cmp
mov
seto
enter
sti
or
mov
stos
push
cmp
icebp
movs
lock
fldenv
cmp
into
push
or
add
outs
jae
popf
popa
push
stc
adc
cmp
(bad)
out
nop
movs
adc
sbb
test
jmp
mov
movs
inc
cmp
test
and
adc
sbb
and
push
ins
push
es
into
sbb
idiv
nop
push
mov
mov
sub
pusha
xchg
cmps
mov
loope
(bad)
or
jmp
fsubr
or
sbb
add
pop
in
gs
ss
cli
mov
shr
stc
mov
push
scas
jl
fist
(bad)
mov
sub
test
mov
fwait
pop
in
mov
or
jmp
and
sub
mov
movs
aas
cdq
mov
push
loop
inc
(bad)
loopne
push
mov
jl
cli
jae
scas
jmp
fiadd
cmp
pop
push
in
hlt
xor
and
dec
jne
jbe
rcl
jmp
test
xlat
mov
mov
addr16
(bad)
movs
mov
aaa
xchg
pop
(bad)
out
adc
pop
mov
cmp
add
movs
arpl
sub
ins
out
rol
push
movs
fdiv
and
mov
into
push
adc
outs
and
mov
or
hlt
cmps
adc
(bad)
xchg
xor
cmp
xchg
pop
fwait
pop
dec
cmp
inc
jmp
sti
(bad)
loope
js
and
mov
and
rol
push
sub
inc
(bad)
mov
jbe
inc
(bad)
cwde
and
add
addps
add
jbe
xchg
mov
push
leave
mov
in
imul
outs
fs
fmul
movs
stos
lock
scas
out
in
mov
xchg
add
cmp
pop
xor
xor
sub
pop
les
push
daa
mov
data16
dec
test
std
push
xor
push
hlt
loopne
jg
jmp
out
pop
adc
imul
inc
jo
push
jbe
scas
in
dec
mov
es
imul
xchg
cdq
push
pop
fsub
pop
and
mov
pop
clc
mov
aad
push
dec
inc
and
mov
or
lea
test
pop
add
jmp
sub
xacquire
xor
inc
add
stos
(bad)
xlat
dec
xor
inc
jno
push
xchg
in
fcomp
aas
and
movs
repnz
inc
nop
and
not
push
mov
inc
add
xchg
popa
xchg
dec
mov
pop
xchg
cs
popf
clc
mov
test
push
mov
xor
cmp
pop
in
(bad)
sti
ds
out
aam
fstp
lea
mov
ja
pop
xchg
dec
loop
cmp
shr
repnz
jnp
fdivr
and
jbe
fs
aas
ror
inc
in
scas
add
jmp
xchg
aad
test
sbb
stc
nop
outs
icebp
mov
add
add
stos
aam
push
popa
fisubr
lods
inc
pop
push
sub
fstp
push
cmp
mov
push
sbb
push
dec
jmp
xchg
add
pop
je
cmp
push
push
adc
push
inc
jmp
imul
pop
repz
cdq
in
mov
fadd
and
cmps
lahf
adc
addr16
pop
arpl
xchg
and
dec
test
inc
nop
mov
pop
xchg
xchg
and
out
ss
mov
cli
aas
jecxz
iret
pop
and
xor
(bad)
dec
push
mov
sbb
popa
int3
ds
sbb
or
cld
dec
push
mov
mov
mov
dec
jmp
push
cmp
mov
jecxz
movs
data16
idiv
dec
loop
sahf
mov
popf
repz
vzeroupper
pusha
cld
pop
cmp
call
inc
pushf
mov
push
or
mov
icebp
out
xchg
daa
xor
pop
jnp
pop
cmp
jle
mov
sub
jge
in
(bad)
dec
mov
fsubrp
and
mov
sbb
ja
inc
mov
das
ret
pop
les
jns
iret
xor
sub
ins
cmp
push
inc
inc
inc
xchg
repz
pop
call
ret
lds
out
gs
sbb
lea
sbb
inc
add
js
mov
or
sub
mov
sub
into
xchg
in
js
adc
retf
pop
and
(bad)
cli
pop
mov
lods
rcr
aad
mov
int
(bad)
pop
pusha
inc
sti
adc
pusha
pop
fisttp
xor
jecxz
mov
je
dec
repz
rol
gs
cmp
push
arpl
inc
cld
dec
inc
loop
xchg
xchg
jl
test
pop
movs
dec
jp
stos
xchg
xor
pop
cdq
jne
fnstsw
adc
pushf
clc
outs
(bad)
(bad)
sbb
and
and
(bad)
daa
adc
int
aad
neg
aam
dec
imul
loop
ror
xlat
push
or
add
aam
pop
fwait
in
ins
add
inc
push
mov
dec
inc
cmp
mov
pop
in
es
xor
imul
lods
adc
jbe
sub
xchg
push
das
jmp
xor
sub
and
pop
inc
push
add
adc
out
hlt
ins
mov
mov
imul
imul
ss
popa
push
(bad)
clc
hlt
mov
std
jno
lahf
and
sub
and
repz
dec
mov
inc
mov
and
test
push
outs
test
sub
repnz
scas
or
dec
pop
rol
ja
lahf
clc
outs
outs
inc
jg
mov
out
ss
push
inc
xchg
cmp
leave
mov
dec
jno
neg
mov
jle
cld
int
cmc
fs
mov
push
(bad)
jmp
sbb
push
aad
sub
dec
aam
int3
sub
in
pop
or
(bad)
repnz
dec
jnp
into
jo
retf
xor
hlt
not
scas
xchg
mov
cwde
mov
or
jb
popa
outs
pop
mov
xchg
adc
call
jne
cdq
ret
mov
fnstenv
sbb
mov
fxch
xor
je
push
int
dec
(bad)
hlt
repz
sti
dec
add
cmp
cli
cmp
rol
push
pop
or
or
dec
pop
jg
add
sbb
mov
add
dec
stos
jno
popf
out
xchg
mov
shl
stos
aam
mov
cdq
push
les
jg
push
sub
loop
and
mov
pop
int
pop
mov
retf
pushf
mov
(bad)
cli
push
cmp
movs
and
xor
mov
das
inc
push
(bad)
ja
in
or
in
fidivr
test
mov
pop
mov
cwde
lock
mov
mov
jae
js
and
dec
fdivrp
cld
mov
cmp
xor
adc
sbb
sbb
mov
or
pop
mov
inc
repnz
mov
cwde
pop
stc
ficom
(bad)
leave
cmp
scas
xor
lds
test
pushf
movs
lahf
mov
jl
inc
sub
loope
stc
and
cmps
cmp
or
xchg
mov
sbb
xor
test
xor
enter
add
ficomp
add
inc
loop
or
sub
ror
test
dec
scas
ss
inc
or
and
mov
call
rol
push
mov
shl
xchg
inc
popf
sbb
and
in
adc
rcl
retf
adc
cwde
aad
rol
fwait
(bad)
test
not
dec
test
adc
cld
ja
shl
mov
cmc
outs
int3
push
ss
rol
clc
mov
sub
cmp
(bad)
int3
push
push
push
jnp
mov
fst
xchg
ficom
jnp
rcl
cmc
mov
xchg
add
mov
arpl
sbb
test
pop
jmp
int3
fld
cmp
push
stos
popa
add
iret
dec
fild
cmp
repnz
or
mov
cli
and
imul
xchg
or
into
daa
push
imul
fwait
sbb
je
aam
cli
fcom
shl
mov
sbb
aas
test
pop
xor
mov
mov
dec
addr16
in
dec
cli
inc
cmp
sbb
sub
jg
ss
fld
xchg
mov
sub
add
test
bnd
mov
clc
mov
popa
rol
xor
ds
mov
mov
getsec
mov
xlat
add
je
pop
call
call
xor
adc
or
jo
gs
mov
mov
nop
mov
xchg
loope
dec
imul
pop
(bad)
scas
hlt
test
push
xor
mov
jle
stos
mov
push
dec
jmp
ins
idiv
fldenv
sub
cmp
adc
xchg
inc
or
and
xor
fcomp
in
aad
popf
std
jg
pop
inc
cmp
cmp
mov
(bad)
cs
xchg
adc
xchg
rol
push
mov
sbb
test
fsubp
icebp
push
adc
shl
loopne
scas
(bad)
pop
cmp
push
fsub
fsubr
jb
les
mov
cmp
pop
movs
push
jbe
pop
(bad)
sbb
(bad)
pop
(bad)
dec
das
or
cwde
out
jg
and
jmp
ss
stos
mov
pop
clc
adc
jmp
adc
pop
sub
push
inc
or
push
xchg
lea
ror
movs
sbb
pop
and
or
or
imul
rol
xchg
mov
es
fcomi
aam
inc
xor
addr16
mov
inc
fimul
or
out
add
inc
jae
and
into
jmp
mov
and
xchg
pop
xchg
xor
jmp
movs
sbb
(bad)
std
xor
dec
sahf
or
data16
lods
sub
dec
scas
sub
ins
mov
and
adc
lea
stos
js
aaa
js
xor
nop
jl
pop
shl
stos
(bad)
add
or
cmps
scas
call
mov
dec
into
(bad)
dec
std
cmps
and
pop
fs
and
sbb
ins
fild
rcr
inc
aad
ins
pop
xor
sti
pop
movs
dec
daa
sub
xor
push
call
push
jo
repnz
je
in
pusha
cmps
cmps
jmp
ins
push
icebp
fisttp
add
pusha
push
(bad)
pusha
movs
pop
gs
pop
pop
add
fsub
fs
sbb
pop
jmp
mov
cmp
adc
mov
cmp
jmp
pop
icebp
adc
pushf
pop
mov
stc
fbstp
out
cmp
lds
sub
sbb
or
mov
mov
cmp
aaa
sub
div
sbb
xor
push
sbb
xchg
fsubp
dec
push
jl
push
push
scas
into
fsubr
popf
cmp
rcl
push
or
inc
je
or
cmps
add
cmps
push
ins
ins
dec
cmc
in
lahf
mov
cwde
pop
out
jg
xor
dec
xchg
mov
out
xor
clc
adc
add
inc
or
bound
sub
scas
sti
ret
dec
nop
(bad)
outs
jecxz
jns
mov
xchg
ss
cmp
das
ins
sbb
pusha
mov
mov
loope
mov
jg
fild
pop
jecxz
xchg
mov
enter
mov
add
lods
repnz
and
jo
xchg
cwde
xor
push
inc
or
cmp
xor
repnz
ja
test
mov
cmp
sahf
or
sub
xor
mov
out
xlat
aas
daa
mov
pop
fsub
outs
mov
mov
push
jno
cli
xor
push
clc
movs
fsub
cli
inc
cmp
pop
call
mov
jns
jg
pop
(bad)
inc
jp
jno
retf
sub
out
lds
movs
adc
je
icebp
nop
xchg
add
retf
pop
bound
fstp
dec
mov
stos
mov
scas
push
sub
aad
jecxz
lock
test
inc
imul
pusha
adc
mov
or
and
repz
cmps
or
jecxz
jmp
mov
mov
and
sub
popa
test
mov
push
outs
(bad)
pop
fbstp
cdq
inc
adc
xor
and
cmp
(bad)
pop
arpl
mov
cmps
iret
xchg
mov
ja
pop
and
xor
adc
xchg
mov
pop
(bad)
in
inc
cli
popa
repz
retf
lds
inc
daa
scas
sub
lea
or
and
sub
addr16
cli
or
lods
sub
adc
adc
mov
sub
xchg
pop
fsub
loopne
xor
push
pop
mov
gs
sar
mov
sub
or
mov
lods
xlat
pop
sar
je
mov
and
sti
jmp
retf
xor
retf
in
clc
addr16
fisub
and
icebp
dec
xchg
scas
mov
sub
(bad)
aaa
ror
fcmovb
loop
sub
iret
ficom
adc
inc
sbb
cmc
push
jns
jle
fmul
stos
das
xchg
cld
mov
mov
and
cld
mov
add
and
ins
call
shr
rcr
enter
call
adc
push
fwait
daa
loopne
pop
mov
and
test
push
sub
iret
xchg
mov
mov
mov
sti
repz
cmp
jg
mov
je
outs
test
inc
jo
data16
pop
mov
shr
popf
mul
mov
outs
ds
or
lock
mov
jno
pushf
pop
and
daa
jecxz
mov
fstp
xchg
dec
jo
sbb
popf
mov
add
mov
daa
inc
movs
adc
dec
jb
push
lahf
or
stc
lock
aad
mov
aad
leave
xor
pop
scas
ror
adc
test
inc
dec
dec
stos
mov
sahf
popa
call
or
scas
adc
inc
(bad)
push
icebp
cmp
call
cmc
fucomip
add
ja
fdivr
xchg
push
push
and
into
cs
fstp
push
sub
cld
cmc
stos
mov
loopne
pop
pop
cwde
adc
mov
push
in
sub
retf
jle
pop
add
das
and
mov
dec
mov
inc
rcr
(bad)
or
jg
dec
xchg
dec
or
imul
fnstsw
pop
mov
in
nop
add
aam
and
call
push
aam
jmp
repz
jno
mov
out
cmp
cmp
sbb
sub
sub
(bad)
stos
jmp
test
mov
popaw
dec
fs
push
mov
retf
inc
(bad)
pop
inc
xchg
in
hlt
mov
imul
mov
inc
pop
test
(bad)
pop
xchg
pop
test
xchg
adc
mov
lahf
add
into
aas
popf
cmc
xchg
mov
aas
in
add
sub
(bad)
out
mov
jbe
es
sub
inc
inc
pop
ins
mov
and
stc
rcr
in
dec
sar
scas
cmps
int
mov
in
rcl
push
sub
loop
pop
push
js
mov
into
inc
or
xchg
jne
je
pop
mov
cmp
inc
or
aad
dec
push
cmps
sahf
data16
mov
fistp
loop
jo
push
push
popf
pop
pop
or
xor
sbb
mov
or
mov
pushf
inc
push
loope
xchg
out
out
loopne
xor
fst
lock
xchg
aas
test
mov
ret
adc
mov
movs
fcomp
aas
inc
xchg
mov
jne
cmp
jne
ds
xchg
bound
pop
in
mov
mov
mov
adc
(bad)
fld
mov
fnstsw
gs
pop
pop
aas
xchg
jns
fdiv
dec
jnp
rcr
adc
movs
sti
adc
imul
add
xor
or
xchg
lea
pop
aas
jns
clc
or
call
daa
jle
xlat
sti
retf
mov
dec
(bad)
cld
sub
ins
add
mov
sub
push
sahf
xchg
repnz
mov
lock
or
pop
mov
mov
add
sub
out
cmc
in
sbb
aaa
in
jnp
out
xchg
cmps
push
push
sub
mov
mov
inc
adc
sar
mov
mov
jbe
mov
sub
xchg
push
push
cmp
pop
imul
pushf
std
pushf
xchg
push
push
jae
add
cmc
aaa
cmps
mov
sbb
cmp
jmp
xchg
and
das
ret
inc
inc
or
adc
retf
pop
adc
ja
fucomi
cwde
out
inc
add
mov
adc
dec
push
pop
adc
call
sub
pusha
push
(bad)
dec
lock
out
rcl
mov
push
cmp
and
and
jmp
and
inc
iret
iret
jbe
jnp
imul
sar
or
xor
cld
mov
adc
sahf
mov
mov
int3
iret
mov
mov
pop
cmp
mov
dec
iret
(bad)
adc
push
rol
xor
xchg
xor
fs
shr
shr
inc
in
in
std
mov
adc
(bad)
es
daa
loope
ror
cmp
pushf
daa
in
in
das
or
sub
lock
adc
inc
nop
sahf
sbb
push
aam
jnp
mov
xor
jl
jmp
xchg
pop
rcl
jo
(bad)
mov
cvtps2pi
out
stos
pusha
mov
pop
es
xchg
or
mov
jg
xor
imul
into
sub
cmp
jl
inc
add
sahf
push
retf
addr16
and
data16
or
cmp
mov
call
mov
and
or
out
xor
dec
std
dec
jae
lods
in
lahf
add
inc
sub
nop
xor
add
outs
ss
xchg
add
mov
push
test
cwde
jno
div
pop
test
call
xor
jb
jecxz
cmp
mov
push
mov
mov
push
adc
push
adc
cmp
aam
nop
or
addr16
xor
pop
fsubp
dec
jge
push
mov
mov
enter
jo
sbb
iret
scas
xchg
lds
aad
stc
and
stos
test
pop
(bad)
push
pop
or
mov
in
push
(bad)
arpl
mov
xor
jecxz
jnp
lods
xchg
push
jno
test
pop
(bad)
adc
shl
fld
fwait
jb
aas
cmp
xchg
jnp
lods
nop
(bad)
movs
fst
mov
xchg
pop
mov
adc
pop
out
ror
or
sub
retf
mov
sbb
xchg
sar
dec
sbb
and
jb
add
mov
cmp
call
mov
jmp
mov
sub
cmps
aam
movs
jno
fist
push
dec
adc
mov
adc
cmc
sub
push
jns
inc
ds
pop
or
xchg
and
cmp
xchg
xchg
enter
pop
jb
push
xor
je
dec
inc
mov
dec
adc
cdq
ja
pop
stos
loope
cmps
cmp
sti
fs
stos
stos
and
cld
inc
sbb
jo
mov
mov
jg
sbb
jp
in
es
aaa
gs
(bad)
call
jg
sbb
xchg
or
sub
test
xor
adc
ret
push
jecxz
mov
fimul
cmp
rcl
mov
cwde
out
(bad)
sbb
fsincos
mov
cld
pop
adc
frstor
in
out
cmp
test
les
mov
inc
jns
pop
test
repz
loopne
dec
ficom
aad
das
cmc
xlat
pop
aaa
add
xchg
nop
push
retf
or
jecxz
sub
imul
push
mov
mov
test
popf
std
inc
xor
in
adc
cmp
lods
push
into
int
stc
cld
repnz
vmovaps
cmp
daa
dec
push
or
lods
adc
(bad)
sub
(bad)
gs
repz
dec
leave
mov
lods
push
into
cwde
out
fadd
mov
outs
push
imul
mov
inc
sbb
loop
cmps
sub
inc
loope
fisubr
mov
popa
fcomp
and
cli
xor
test
inc
add
xor
or
mov
in
lahf
pop
cmps
leave
jmp
adc
repnz
lds
ficomp
test
mov
push
and
and
jae
inc
sbb
cmp
(bad)
xor
mov
(bad)
ficom
xor
add
xchg
test
sti
fdivr
(bad)
push
pusha
jmp
jmp
jae
jle
pop
fidiv
mov
xchg
push
add
lods
fist
out
cmps
inc
bound
sahf
adc
pop
xacquire
dec
movs
sbb
sub
lock
daa
clc
inc
(bad)
mov
xchg
test
adc
out
dec
stos
(bad)
das
push
ss
mov
stos
call
mov
stc
test
mov
cmp
imul
fld
mov
jbe
cmp
repz
std
adc
das
xlat
fnstcw
or
push
sbb
in
pop
lods
push
aam
and
and
push
pusha
and
push
xor
xchg
add
out
jae
cmps
ffree
pop
dec
imul
xchg
cmp
sbb
adc
imul
dec
std
cmps
jmp
and
je
dec
lods
mov
test
pop
add
into
fld
adc
pop
aad
or
(bad)
cmps
int3
jb
inc
push
lea
pop
aam
or
cmovo
mov
into
and
inc
or
adc
sbb
push
mov
and
cmp
aas
clc
hlt
stos
mov
fadd
push
cmp
sbb
adc
mov
rcr
loopne
leave
cli
dec
out
movs
pop
movs
out
pop
dec
aam
or
jbe
inc
mov
data16
jae
(bad)
int3
adc
and
mov
sbb
mov
and
sbb
xchg
push
je
das
cwde
pop
test
add
lahf
cmp
or
or
mov
cli
jb
xor
bts
sti
xor
mov
and
mov
imul
retf
mov
mov
push
xchg
ins
sbb
xor
cli
pushf
sub
inc
cmp
rcl
sub
push
shr
(bad)
xchg
ret
pop
int3
xchg
adc
or
sub
and
xor
(bad)
scas
shl
(bad)
aas
mov
xchg
push
jmp
jp
repz
push
or
sub
xor
xchg
(bad)
mov
inc
pop
inc
mov
xor
pop
(bad)
jle
sub
fcmovnu
sbb
inc
xchg
jmp
pop
in
mov
jl
add
repz
ror
dec
gs
xchg
jne
mov
sti
in
stos
pushf
jbe
jge
repnz
stos
dec
cmp
mov
mov
or
mov
div
stos
add
dec
data16
jecxz
dec
lods
loope
pop
cmc
add
inc
jmp
add
clc
(bad)
jecxz
stos
jo
jge
pop
sar
add
loope
in
and
mov
hlt
repnz
sbb
jmp
scas
pop
xchg
mov
pop
add
sub
sub
ret
call
cmp
mul
pop
and
test
pop
leave
jo
pusha
(bad)
clc
stos
push
dec
rcr
shl
lea
cs
dec
mov
cmp
jle
(bad)
pop
lahf
ja
loope
dec
dec
xor
retf
mov
jp
mov
ret
dec
ds
sub
push
xchg
les
fs
jp
xchg
mov
inc
jmp
mov
dec
shr
ror
into
xchg
cmps
sub
scas
jb
cmps
or
sub
xchg
and
ficomp
pop
pop
pop
cmp
jmp
(bad)
sbb
outs
xchg
mov
pop
sbb
in
mov
jne
loope
hlt
sti
pop
sub
les
add
loopne
jg
mov
jno
outs
mov
push
jae
sub
push
fisubr
pop
enter
test
sti
or
and
mov
call
or
jne
cld
adc
add
mov
add
fstp
call
int3
popa
retf
pop
shl
scas
push
xchg
sbb
cmp
sahf
adc
pop
mov
pop
and
call
jb
aam
fcom
nop
sbb
inc
sbb
mov
aad
sbb
int
push
scas
scas
mov
xor
and
or
jl
pop
inc
sbb
jl
push
stc
dec
push
mov
daa
std
push
shr
mov
cwde
loope
push
call
pop
ins
daa
iret
cld
push
nop
mov
xor
mov
mov
mov
mov
loop
int3
sti
out
jmp
std
jmp
xchg
retf
(bad)
or
in
(bad)
adc
dec
cmp
cwde
hlt
mov
add
and
adc
pop
ins
pop
dec
aaa
out
test
ficomp
mov
retf
sti
sub
inc
jg
outs
push
lahf
les
pusha
stos
xchg
xchg
sbb
inc
sub
push
(bad)
hlt
enter
dec
pop
xlat
mov
dec
adc
bound
ja
cmp
aas
inc
imul
cs
cmps
test
out
clc
mov
jo
sbb
cmp
mov
fwait
daa
push
xchg
enter
enter
pop
repnz
int3
jo
pop
mov
test
pop
test
mov
jne
loopne
xchg
imul
aad
lods
add
cmp
mov
sbb
add
out
or
das
lahf
ret
push
mov
jg
xlat
and
les
ss
cdq
cmp
inc
jmp
inc
add
jno
add
cmp
dec
bound
fstp
int3
cmp
pusha
aam
repnz
test
rcr
mov
mov
ret
add
and
cmp
inc
test
inc
xchg
inc
sub
xchg
aaa
xchg
(bad)
pusha
and
rcr
and
es
mov
pop
mov
mov
int3
mov
mov
outs
ret
enter
xlat
add
mov
mov
add
mov
dec
xlat
pop
idiv
add
mov
fidivr
rep
or
test
out
jmp
jp
sub
ds
hlt
ins
adc
adc
clc
(bad)
nop
sar
jb
mov
hlt
and
and
sbb
fist
in
add
mov
xchg
dec
call
rcr
aaa
add
popa
inc
pop
daa
ss
scas
mov
inc
xchg
push
cmp
enter
and
dec
test
fs
mov
je
arpl
jno
adc
test
add
add
das
or
pop
xchg
pop
mov
sub
out
inc
sar
scas
mov
fsub
xchg
outs
xor
fimul
retf
and
js
scas
push
adc
mov
fs
(bad)
mov
add
ins
mov
cmp
sbb
sub
fwait
mov
cmp
jmp
pop
(bad)
clc
inc
out
adc
rol
and
or
call
sub
or
test
retf
adc
dec
inc
mov
mov
jae
adc
lods
das
shl
fstp
cmp
adc
and
lahf
popa
cmps
jbe
dec
xchg
mov
add
mov
nop
pushf
fdivr
sbb
shr
cmps
adc
jb
mov
into
xlat
inc
adc
xor
push
mov
cmp
rcr
std
fbstp
dec
xchg
cmp
in
les
mov
dec
push
not
loope
ret
cmp
mov
adc
clc
mov
jns
inc
push
add
retf
mov
cdq
push
mov
pop
(bad)
push
enter
push
cmovl
hlt
sbb
xchg
push
test
outs
aas
mov
push
jno
xor
and
loope
rcl
sbb
fiadd
fnstsw
and
mov
inc
movs
xlat
(bad)
sbb
shl
push
jo
dec
sar
jp
mov
jb
ficomp
push
clc
jl
mov
loopne
repz
push
sbb
cdq
jo
sbb
loope
jne
push
inc
mov
sub
retf
loop
pop
inc
dec
call
xchg
cmp
pushf
inc
dec
mov
in
pusha
mov
not
shl
xlat
lock
pop
fs
cs
movs
cwde
ss
or
mov
or
add
xor
and
mov
dec
xor
into
fisubr
adc
jnp
mov
sbb
aam
jl
jo
jmp
mov
fdiv
pop
jg
mov
add
out
bound
mov
dec
dec
fistp
adc
cmp
dec
pop
call
adc
pop
inc
mov
jns
stos
mov
jmp
mov
cmp
outs
xchg
bound
call
mov
fstp
and
mov
cmp
repz
sub
sub
jecxz
inc
sub
pushf
adc
fwait
or
and
jns
sbb
cmp
cmp
inc
or
out
arpl
aas
adc
cmp
ss
test
mov
xchg
ins
xlat
sbb
ret
cmps
sbb
push
inc
adc
jge
sub
mov
sub
and
out
jecxz
clc
ret
pop
jb
stos
inc
pop
xchg
adc
stos
mov
push
mov
xlat
adc
inc
call
test
dec
mul
sub
pop
jne
mov
ret
mov
sub
iret
sbb
repz
pop
lock
sub
cs
(bad)
sbb
lods
add
cmp
(bad)
rol
push
push
sbb
dec
lods
cmc
sub
sub
mov
jmp
push
cmp
cs
push
dec
punpcklwd
push
les
out
popf
ret
xchg
inc
pop
or
js
pop
arpl
sbb
sub
pop
sbb
cmps
(bad)
enter
retf
jge
jg
stos
pop
mov
bnd
inc
ins
into
xchg
push
movs
cmp
sbb
(bad)
and
retf
imul
jnp
(bad)
jle
and
cdq
call
xchg
adc
imul
jp
jne
jno
dec
pushf
inc
push
mov
and
add
(bad)
fdivr
or
repnz
push
mov
pop
fcomp
shl
push
add
and
xor
dec
xchg
add
push
dec
pop
or
jne
mov
sar
pop
jbe
push
pop
mov
inc
fadd
push
sub
and
sbb
loop
out
cmps
aam
mov
sahf
cli
or
push
clc
xchg
scas
xor
xor
or
jbe
ins
fidivr
add
pop
jb
ins
mov
push
or
clc
sub
in
test
outs
test
or
repnz
shl
sbb
(bad)
rcr
adc
mov
adc
mov
push
adc
push
call
mov
das
pop
lea
icebp
clc
or
jmp
xchg
test
pop
fidiv
mov
cmps
ja
or
jb
push
(bad)
loopne
jo
xchg
inc
jne
mov
xchg
rcl
xchg
xor
jo
dec
mov
int3
mov
sbb
xor
and
icebp
les
adc
outs
clc
xchg
dec
or
cmp
(bad)
cwde
bnd
push
inc
xor
sbb
lods
mov
adc
dec
inc
jge
pop
in
or
scas
and
(bad)
das
adc
xchg
push
xor
leave
scas
jp
sbb
gs
adc
out
out
int
mov
ret
push
inc
pop
mov
cld
inc
and
imul
cmp
dec
(bad)
ja
xchg
movs
jle
push
mov
jo
and
push
ret
jnp
or
sbb
jnp
cs
arpl
mov
dec
(bad)
xchg
mov
imul
jae
retf
xor
fisttp
in
hlt
xor
or
jae
pushf
mov
mov
sar
cmp
xchg
or
lods
psubb
js
push
xchg
mov
inc
test
jbe
pop
or
add
inc
dec
ins
sub
or
fdiv
or
xor
mov
cmp
dec
in
loope
pop
inc
imul
inc
aam
mov
test
sbb
jl
or
push
fmul
push
repz
dec
jg
fistp
sbb
xor
retf
and
mov
int3
sar
or
dec
mov
jbe
sbb
loopne
push
(bad)
mov
stc
sub
shr
adc
xchg
xchg
popa
ret
(bad)
sub
xchg
cmp
test
sbb
push
dec
xchg
cmps
mov
and
jmp
es
icebp
ins
cld
nop
ret
aas
stc
bndldx
adc
neg
adc
xor
ja
ja
adc
cwde
dec
fst
jmp
and
adc
les
ret
into
sahf
push
std
add
or
outs
cmp
jmp
dec
jo
mov
mov
inc
bnd
daa
int
xor
(bad)
pop
shrd
in
add
mov
xor
sub
call
outs
xchg
sub
or
outs
loop
pop
not
xchg
hlt
test
add
fldcw
xchg
cmp
adc
mov
cmp
fsubr
cli
aam
fist
push
push
stos
sub
cs
loope
mov
mov
test
ss
shl
into
pop
icebp
xor
or
pushf
inc
loope
aad
fsubr
jbe
inc
pushf
push
mov
mov
jo
fdivr
cmp
pop
xchg
es
cdq
aam
inc
movs
ret
bound
adc
fcom
jge
std
pop
dec
cli
test
mov
sub
ret
or
pop
cmp
adc
in
inc
nop
scas
mov
lods
scas
dec
inc
dec
das
xchg
or
jmp
lods
out
daa
dec
je
(bad)
cmp
je
jmp
ficom
jmp
hlt
mov
mov
cmps
cmp
pop
xor
shl
imul
test
pop
jmp
dec
cli
pop
add
cli
push
les
cwde
jbe
xchg
sub
aas
out
ss
lds
repnz
mov
leave
mov
xchg
out
push
enter
lea
inc
jmp
xor
inc
imul
movs
and
cli
push
out
xchg
ret
loop
clc
shr
pop
mov
fs
jbe
inc
fbstp
ds
aad
add
test
mov
ds
push
cli
cmp
mov
(bad)
dec
lods
fucomip
adc
les
(bad)
cmps
and
sub
stc
pop
mov
push
and
cmps
mov
add
xchg
cmp
xchg
inc
mov
repz
mov
mov
push
movs
fcom
mov
mov
sar
xchg
out
jmp
fisttp
cwde
mov
mov
nop
sbb
int
pop
test
dec
ret
and
rcr
or
cdq
mov
xor
jle
or
lds
icebp
jns
mov
cwde
data16
xchg
sbb
push
cli
inc
pop
sub
cld
loope
mov
mov
xor
dec
fs
movs
outs
jmp
adc
sbb
popf
pop
mov
inc
lods
rcl
ret
xor
enter
xlat
mov
dec
pop
pop
push
pop
sbb
test
mov
sti
sti
push
jmp
test
xor
mov
loop
mov
shr
cmp
add
push
mov
sub
lods
dec
or
popa
mov
cld
scas
mov
sub
movs
stos
jl
xchg
inc
jns
das
add
add
bswap
inc
movs
cmp
xor
sbb
ja
bound
scas
xchg
add
jge
dec
sbb
repz
mov
or
daa
std
mov
xchg
adc
mov
and
jmp
mov
cmp
mov
gs
in
inc
mov
add
mov
push
popf
pop
outs
inc
mov
adc
cmps
sahf
adc
mov
not
jmp
aaa
jmp
cmp
mov
fbstp
addr16
sub
push
xchg
stc
ds
outs
dec
cdq
and
inc
dec
mov
xchg
(bad)
pop
pop
(bad)
nop
and
and
jne
retf
mov
mov
pusha
mov
test
adc
aaa
and
add
sbb
stos
neg
and
mov
mov
adc
pop
mul
mov
scas
mov
or
and
ret
adc
icebp
ret
push
and
mov
stos
pop
ins
xor
sub
jecxz
dec
enter
jge
jmp
iret
inc
out
dec
mov
mov
push
jnp
mov
push
sub
cmp
add
ds
(bad)
mov
mov
cwde
daa
add
dec
rcr
loopne
lods
lds
sbb
mov
dec
repnz
call
je
aad
stc
sub
and
pop
ds
adc
inc
cmp
fst
or
mov
jp
in
adc
jnp
or
in
inc
cmps
imul
add
lods
cdq
popf
mov
lahf
xchg
enter
and
pop
enter
scas
retf
rcr
dec
cmp
cmps
xor
retf
int3
add
out
mov
repnz
cmp
xor
and
loope
push
cmp
or
movs
cld
jmp
mov
push
mov
cmp
mov
cmp
in
fwait
cld
inc
hlt
pop
sar
or
jge
psllq
sub
lahf
push
movs
mov
sti
retf
pop
cmps
push
std
es
ins
sub
inc
mov
in
scas
scas
(bad)
mov
nop
stos
retf
inc
jno
cli
xchg
sbb
mov
sbb
mov
shr
cmps
ss
cwde
sbb
mov
into
jno
gs
scas
scas
cmp
pop
call
(bad)
mov
fstp
push
out
sub
in
fcmovnb
(bad)
out
mov
arpl
das
or
mov
test
jl
dec
(bad)
adc
pop
or
pop
pop
into
test
dec
ds
jbe
push
mov
push
xchg
inc
icebp
into
sub
inc
xor
enter
(bad)
jbe
and
repz
repz
xor
std
sbb
mov
dec
jmp
push
(bad)
out
cmp
lock
cdq
mov
inc
jge
iret
mov
mov
in
and
inc
aad
cdq
sbb
nop
lock
xchg
scas
add
jmp
loope
ret
push
lea
and
adc
mov
aas
and
lock
sub
es
(bad)
outs
add
mov
xor
ins
mov
loop
mov
pushf
jecxz
leave
mov
bound
js
shl
(bad)
fwait
push
xlat
xor
in
sbb
aad
sub
aam
cmp
xor
inc
fcomp
pop
mov
xchg
add
push
cmp
ja
sub
adc
dec
int
push
or
mov
sbb
pop
cmps
cwde
sub
xchg
pop
stc
sub
push
push
cmp
mov
dec
retf
scas
sub
mov
mov
test
push
popa
xchg
push
fdiv
stc
loope
stos
cld
retf
xchg
cli
lds
sub
ficom
mov
fs
movs
add
in
push
loope
jns
jmp
jecxz
in
adc
sti
xchg
cmp
cmp
pop
pop
add
pop
push
pop
jno
outs
movs
repnz
jg
mov
jl
dec
(bad)
popf
pop
sub
mov
adc
bound
mov
not
out
cld
cmp
adc
clc
jno
xchg
fwait
inc
jecxz
jno
out
ret
imul
arpl
or
xlat
push
movs
push
sub
pop
add
bsr
aam
cmc
stos
xor
sub
icebp
and
or
mov
lahf
cmp
cmp
(bad)
int3
aas
repz
mov
stos
cmp
dec
scas
clc
loope
add
xor
sub
mov
push
cmp
sub
cld
add
dec
iret
push
sub
into
push
fdivrp
cmpxchg8b
lock
and
pop
int3
imul
mov
scas
movs
add
mov
arpl
add
sub
push
pop
mov
shr
cmp
push
fisttp
in
pop
mov
in
mov
mov
retf
mov
dec
retf
mov
js
loopne
stos
out
in
out
fild
push
in
add
movs
xor
adc
fnstcw
or
js
cwde
inc
stc
je
add
add
fstp
imul
(bad)
dec
ins
loopne
push
loopne
rol
test
leave
call
fdiv
xor
add
adc
scas
push
jle
ins
jno
mov
xor
stos
push
mov
xchg
test
sbb
cs
cdq
xchg
xchg
sub
int
cwde
cli
adc
and
jle
xchg
daa
rcr
add
sbb
outs
xchg
xchg
mov
mov
int
mov
jb
stos
dec
add
pop
dec
(bad)
imul
imul
sub
inc
xchg
cmp
cmp
out
int
popa
sub
fld
cmp
mov
leave
inc
lds
mov
pop
mov
lea
mov
push
mov
pusha
retf
mov
retf
dec
stos
and
inc
xchg
pusha
cmp
sbb
dec
das
sbb
popf
mov
and
inc
dec
aam
jmp
and
ds
sbb
nop
mov
mov
add
fstp
mov
jno
leave
jb
mov
aas
and
movs
clc
and
or
shl
push
dec
out
sub
inc
pop
pop
sub
add
in
ins
xchg
fld
bnd
(bad)
in
mov
add
fisubr
or
dec
ror
mov
dec
and
sbb
loop
ficomp
xor
inc
enter
add
add
addr16
repz
mov
not
int3
shl
cmc
rcr
sub
into
cmp
test
xchg
aas
xchg
cwde
or
popa
arpl
vpcmpeqb
in
adc
mov
cdq
xchg
stos
push
pusha
sub
fmul
dec
in
test
jg
adc
call
out
arpl
test
xchg
and
not
sub
fs
push
and
or
dec
dec
push
test
jle
ja
les
(bad)
pop
repnz
out
fs
and
mov
addr16
jb
iret
outs
jno
mov
sub
imul
sub
mov
mov
or
push
pop
or
xchg
inc
gs
sahf
sbb
or
sbb
pushf
mov
inc
clc
pop
stc
int
xchg
push
cli
dec
mov
repz
xlat
cwde
fst
sub
xchg
kmovw
or
push
pop
popa
bound
jg
jbe
dec
inc
mov
in
adc
out
push
pop
mov
dec
imul
mov
pusha
test
mov
aam
(bad)
scas
cmps
mov
repnz
mov
xchg
int
push
mov
push
pop
enter
xchg
adc
pop
hlt
jbe
ret
dec
add
addr16
jns
xor
push
push
hlt
leave
jo
sahf
outs
jb
mov
sahf
pop
in
into
adc
mov
cmp
call
mov
out
ret
shr
rcl
cmp
repnz
cli
leave
outs
cld
rcr
cld
xchg
lds
retf
xchg
or
pop
mov
daa
inc
or
pop
fidivr
inc
in
mov
enter
(bad)
inc
mov
adc
xor
sbb
mov
pusha
mov
(bad)
adc
or
adc
in
out
lock
adc
call
jo
xchg
dec
push
mov
ds
ret
add
mov
mov
addr16
imul
cmp
jmp
pop
add
sbb
jmp
mov
mov
das
or
jp
ds
and
fmul
adc
test
adc
not
dec
ficom
leave
mov
inc
sbb
(bad)
sti
or
add
pusha
jge
retf
arpl
ja
(bad)
sti
or
stos
mov
int
pop
icebp
fmulp
iret
daa
mov
xchg
push
cli
jno
clc
push
push
adc
inc
jg
sti
arpl
cmps
lock
cmp
pop
inc
clc
rol
jp
push
jne
xchg
mov
repnz
xor
pusha
sti
nop
cli
dec
fisubr
cmp
cmp
inc
mov
shl
inc
call
rcl
adc
scas
fsqrt
fistp
cmps
jle
cmp
cmp
push
mov
cmps
push
scas
daa
cmp
or
arpl
mov
cmp
inc
inc
pushf
mov
repnz
mov
in
or
jno
test
mov
and
nop
add
in
cmp
mov
mov
add
push
xchg
rep
shl
jecxz
or
mov
adc
mov
mov
sub
adc
lahf
inc
push
test
sahf
add
push
jne
xchg
mov
ficom
(bad)
aaa
xchg
loopne
xchg
mov
dec
es
push
pushf
add
fwait
sti
sub
ja
inc
sub
add
ins
xchg
loope
push
jl
xchg
pop
sbb
mov
cmp
in
and
cs
pop
xchg
jnp
xchg
scas
and
retf
mov
push
mov
xor
cmp
adc
adc
jge
add
fnstenv
mov
movs
xor
or
and
sbb
and
cmp
lock
lds
add
sbb
imul
xchg
pusha
in
or
icebp
out
dec
push
pop
shl
int
rcl
div
dec
push
imul
adc
into
add
mov
sahf
idiv
push
sbb
ins
xchg
xsha1
cmps
(bad)
push
dec
aas
cmp
pusha
lds
and
sbb
loopne
xchg
fidiv
mov
dec
shl
cmp
lahf
(bad)
jnp
sub
aad
push
rcl
sti
leave
or
xchg
mov
test
and
cdq
sbb
xchg
daa
aas
jns
sar
(bad)
xchg
sub
pop
pop
das
cmps
adc
xor
pusha
gs
pop
xchg
mov
dec
jg
jo
out
cmps
jecxz
push
mov
mov
push
lea
adc
dec
inc
outs
or
dec
pop
sar
or
jecxz
dec
push
mov
push
sbb
cmp
(bad)
sbb
jo
sub
hlt
push
sahf
dec
and
sub
cwde
jo
adc
push
jmp
pop
(bad)
cmps
(bad)
inc
ret
adc
(bad)
bound
jb
cmc
or
sub
jo
inc
mov
cmp
ret
push
cmp
mov
and
mov
push
inc
push
stos
pushf
hlt
aam
out
std
ror
push
mov
call
dec
enter
adc
fwait
arpl
ss
adc
imul
movs
fcomp
iret
adc
mov
cmp
aad
mov
mov
in
inc
or
pop
adc
dec
xchg
jl
jl
pop
into
pop
popa
mov
push
rol
aaa
xchg
jg
loopne
in
sub
cld
xchg
in
arpl
xor
cmp
dec
cwde
inc
xor
jne
mov
mov
push
dec
jecxz
loop
pop
and
jg
push
xchg
bound
in
aad
mov
ror
jecxz
mov
fwait
and
inc
mov
add
jnp
xlat
ins
mov
lock
out
lods
push
jns
xor
cmp
cmp
adc
adc
cld
cli
mov
jae
add
mov
pusha
jmp
jb
pop
pop
cmp
cwde
into
mov
cmps
popf
or
mov
pop
loopne
xchg
inc
gs
xchg
outs
dec
pusha
in
add
pop
cmp
cmp
jp
mov
cmp
inc
xor
adc
sbb
out
pop
mov
mov
cmp
lahf
(bad)
or
push
sub
mov
xchg
pop
std
mov
lods
test
push
jle
imul
pop
xor
or
dec
sbb
and
(bad)
jle
cmps
dec
or
add
(bad)
dec
scas
xchg
mov
xchg
(bad)
imul
ins
sbb
cld
sub
push
aad
xor
aad
int3
mov
shl
xor
test
stos
stc
stos
cmc
test
add
pop
mov
pop
mov
xchg
imul
xchg
dec
pop
les
cmp
mov
sbb
sub
into
or
and
sbb
pop
in
jle
and
outs
or
jmp
das
cmp
xor
les
push
pop
ret
movs
scas
sub
jl
mov
imul
xor
inc
adc
nop
and
arpl
xchg
xchg
stos
imul
jge
stos
mov
inc
frstor
sbb
aad
and
ret
jns
jecxz
mov
xor
dec
xor
inc
sahf
imul
or
xor
in
xchg
mov
mov
push
push
and
popf
sbb
or
mov
scas
out
nop
xor
jne
les
gs
adc
cmc
or
mov
sbb
mov
or
jge
call
mov
xchg
mov
mov
mov
test
mov
in
jl
pop
mov
(bad)
adc
mov
(bad)
cli
jmp
outs
inc
(bad)
popa
or
outs
fstp
inc
add
(bad)
cli
add
pop
adc
bound
xchg
mov
retf
jns
je
scas
jmp
jne
add
pop
jl
sar
sub
js
sub
add
(bad)
push
lock
fild
push
mov
cmp
fwait
mov
dec
xchg
xchg
or
mov
call
not
rol
movs
mov
xchg
sub
inc
jne
repnz
les
and
or
in
shl
out
gs
scas
and
mov
(bad)
pop
xor
fistp
cmp
ss
and
or
(bad)
outs
in
adc
sub
xchg
adc
out
je
aaa
mov
xor
ret
sbb
(bad)
outs
out
add
inc
sahf
inc
xor
adc
lods
add
(bad)
test
pop
(bad)
stc
pop
(bad)
shr
jb
inc
mov
test
add
test
in
enter
cmp
lods
icebp
pop
movs
jl
add
or
and
cmp
scas
xor
(bad)
sub
adc
mov
iret
sub
jnp
mov
add
adc
add
mov
sub
xor
lods
pop
stos
add
push
sub
xlat
cdq
dec
stos
jmp
mov
sahf
sbb
jecxz
add
loope
xchg
(bad)
dec
fadd
aad
ret
pop
cwde
ds
int3
stos
fdiv
sub
lods
mov
in
mov
cmp
push
mov
sub
inc
not
outs
mov
scas
aaa
push
xchg
(bad)
std
loop
loopne
call
pop
push
cmp
jle
inc
sub
rol
dec
mov
int
inc
jae
xchg
jo
addr16
inc
ss
or
ja
cmps
sbb
(bad)
mov
das
jne
mov
sbb
call
jmp
(bad)
xchg
xor
addr16
cmp
xlat
mov
popa
mov
div
add
mov
inc
or
fmul
xchg
adc
into
lea
mov
add
sar
fwait
ret
imul
xor
mov
jge
out
pop
inc
out
jg
mov
dec
mov
jl
sbb
jne
add
rcl
in
sub
icebp
out
cmp
xchg
test
cmp
stos
sbb
adc
(bad)
sahf
addr16
stos
jb
xadd
into
cld
push
cmps
inc
mov
(bad)
ins
xlat
sbb
sbb
fdivr
xchg
or
iret
(bad)
push
shr
mov
loop
outs
das
and
mov
mov
sub
call
jg
cmp
mov
ret
and
sahf
lds
outs
arpl
inc
ins
imul
inc
mov
pushf
mov
scas
(bad)
ret
or
stos
or
fwait
daa
sub
(bad)
dec
dec
and
lods
push
push
in
jl
cmc
inc
pop
repnz
mov
bound
ret
lods
xchg
jmp
or
retf
and
imul
ins
shl
lods
sbb
jns
idiv
jl
test
mov
lea
dec
mov
pop
and
mov
xchg
leave
ss
xchg
push
inc
stc
icebp
in
loopne
fwait
movs
adc
daa
pop
sti
call
xor
adc
das
sbb
push
sbb
sbb
push
and
test
arpl
mov
dec
mov
icebp
outs
cmp
xor
popa
xor
sahf
push
cld
lea
sub
adc
loope
pop
shr
mov
lods
xchg
dec
int3
mov
sbb
jecxz
xchg
jne
out
push
hlt
mov
sub
out
pusha
mul
pop
push
inc
xchg
xor
pop
xchg
sbb
iret
ins
push
or
mov
sbb
inc
leave
and
sub
dec
mov
mov
mov
mov
add
fsub
rcr
cmp
jmp
ja
ds
jmp
xor
fst
jge
popf
push
jmp
inc
xor
xchg
xor
mov
mov
cwde
mov
pop
loop
fisubr
rol
adc
call
sub
(bad)
jne
rcl
xchg
push
mov
mov
push
and
add
mov
jo
sub
xchg
jno
xchg
sbb
jno
aas
iret
fwait
push
std
es
sub
leave
fisub
jl
(bad)
cli
adc
ja
push
loop
mov
lahf
loope
popa
jns
cmps
pushf
icebp
scas
pushf
jge
push
rol
je
popa
pop
or
add
jns
sub
cmp
and
lea
ret
inc
in
lea
fsubr
lods
sub
rcr
retf
add
daa
mov
mov
or
fiadd
push
sub
pop
push
xchg
ret
pusha
into
outs
jmp
jle
fwait
mov
sub
in
mov
xor
outs
add
jle
call
and
retf
out
dec
ja
loope
push
in
mov
(bad)
in
sbb
push
lea
add
or
aas
mov
mov
jle
out
mov
leave
(bad)
pushf
in
cmps
mov
push
mov
test
and
movs
in
sub
loop
add
mov
popf
cdq
mov
not
jb
xchg
push
mov
adc
das
sbb
xchg
inc
fwait
cmp
stc
mov
mov
test
in
mov
inc
xor
dec
ret
or
loope
pop
xor
mov
fnstcw
mov
push
adc
fadd
repz
mov
jp
xor
sub
and
ret
pop
xor
jmp
inc
cmp
dec
mov
push
bound
xor
loopne
shr
adc
mov
scas
retf
push
cwde
icebp
cmp
mov
fdiv
shl
scas
arpl
aas
sahf
or
hlt
jbe
xor
dec
scas
sub
loope
inc
sti
pop
fbstp
(bad)
imul
jo
xor
das
xor
mov
mov
xchg
ret
xchg
(bad)
fwait
test
jbe
inc
(bad)
je
mov
dec
mov
cmpxchg
aad
mov
ficomp
sbb
das
mov
push
ror
enter
push
or
jp
sbb
shr
rol
add
push
ds
sar
in
cmp
jno
mov
jmp
mov
push
(bad)
xor
cmps
sti
pop
dec
shufps
int3
push
sub
cmp
pusha
(bad)
push
pushf
test
sbb
inc
nop
enter
popf
fstp
sub
push
mov
mov
arpl
sub
frstor
mov
cmc
sub
cmp
cmp
fs
mov
cmp
fild
imul
(bad)
scas
dec
fnsetpm(287
push
shr
retf
mov
push
das
in
call
movs
es
pop
ror
test
inc
stos
adc
jnp
push
or
jge
xor
jmp
mov
mov
jl
fldenv
test
pop
fst
sbb
mov
addr16
js
call
sahf
mov
int
enter
out
dec
sbb
sahf
adc
and
imul
push
or
fisttp
ja
mov
dec
push
push
test
add
bound
jmp
mov
jmp
mov
mov
cmps
dec
(bad)
adc
je
xor
pop
shr
les
mov
lahf
adc
jb
cmp
cmps
repnz
mov
or
mov
lods
inc
fwait
enter
sti
(bad)
int
mov
and
repz
retf
ins
bound
lds
imul
mov
pop
adc
and
xchg
inc
out
add
cmp
cdq
push
add
clc
loopne
mov
sti
push
mov
mov
inc
mov
ss
pusha
inc
mov
ret
inc
inc
rol
and
std
cmp
mov
test
sub
push
xor
jns
retf
xor
push
jo
stos
mov
add
mov
aad
je
dec
addr16
int
lods
mov
(bad)
fdivr
dec
ss
scas
cmp
scas
jmpw
inc
add
cmp
cmps
sbb
imul
inc
stos
iret
fadd
out
repz
fsubr
icebp
out
jo
mov
lock
add
out
ficom
sub
loopne
je
xor
or
jecxz
lahf
or
das
jae
push
jl
xlat
sub
shl
cmc
imul
xlat
sub
shr
loope
cli
retf
mov
clc
mov
mov
movs
movs
add
or
aaa
cld
imul
aad
and
outs
jmp
bound
cmp
sub
push
add
cmc
movs
fcom
cmp
pop
add
mov
out
ret
mov
adc
xchg
jg
pop
stos
ret
xchg
into
int3
push
stc
sbb
mov
lock
sub
lods
adc
lock
in
mov
stos
(bad)
mov
add
or
pushf
pop
leave
adc
pop
mov
out
jle
mov
adc
paddusb
adc
mov
pop
lahf
sbb
int3
mov
repnz
jne
jg
fstp
aaa
xchg
pop
in
adc
std
inc
lahf
sbb
hlt
int3
or
inc
mov
pop
pop
push
xor
mov
or
lock
adc
dec
cmp
and
(bad)
adc
xor
jecxz
sub
out
dec
fs
jecxz
neg
mov
and
aam
lods
daa
xchg
daa
jnp
psubd
pushf
cmp
dec
push
sub
pushf
cmp
sbb
es
ja
and
fld
pop
mov
cmp
pop
sub
jnp
pop
loopne
inc
std
call
and
shl
ret
sti
mov
loope
pop
fbstp
mov
jo
mov
fild
cmp
fidiv
cli
and
nop
xor
(bad)
out
lds
es
es
cmp
ins
xor
repz
cmps
jle
and
pushf
out
adc
mul
xchg
cmp
pop
cwde
fsubp
cld
stc
lock
mov
outs
lods
ss
add
call
in
in
aad
xor
frstor
cmp
into
outs
adc
add
fnstenv
xlat
sbb
xor
ror
imul
xlat
fsqrt
cli
cmps
data16
pushf
push
aaa
xor
scas
cmp
jbe
imul
push
sub
cld
movs
mov
add
jmp
add
leave
jp
fld
mov
xchg
fistp
dec
jne
sub
sahf
cmp
cmc
in
fnstenv
add
adc
pop
(bad)
fbld
jnp
loopne
retf
jbe
sbb
test
sub
pop
jg
ja
addr16
(bad)
jmp
out
mov
repz
popa
cmp
imul
loop
or
xchg
in
scas
stos
push
sahf
mov
push
js
mov
scas
or
dec
(bad)
shl
pop
xchg
inc
add
loope
sbb
fdivp
sub
lea
movs
jne
sbb
fs
cmp
mov
push
add
retf
daa
sub
cli
lods
lods
sar
(bad)
mov
(bad)
adc
int3
push
sar
mov
or
xchg
test
imul
fs
frstor
addr16
and
fcomip
cmps
call
outs
or
xor
inc
std
cmp
lock
call
adc
inc
arpl
cs
dec
pop
pusha
data16
add
cs
hlt
retf
icebp
cs
lahf
mov
leave
and
outs
dec
jge
ja
sbb
mov
shr
adc
cmc
mov
es
inc
jnp
mov
stos
bound
mov
inc
loop
inc
cmp
hlt
inc
xor
jne
out
and
lahf
loop
cli
pop
jmp
pop
mov
jge
inc
xchg
sub
cdq
xchg
mov
in
ds
fld
add
dec
or
(bad)
fmul
rol
mov
or
xchg
iret
repnz
lock
daa
repnz
mov
or
sbb
jbe
mov
hlt
mov
shl
add
or
mov
cmp
cmps
je
dec
dec
push
in
adc
cmp
ins
cld
xchg
adc
add
add
mov
mov
jl
add
mov
movs
add
pop
out
loopne
mov
ss
ret
inc
xchg
sti
loope
cmps
add
(bad)
dec
clc
adc
int
inc
psubsw
mov
cli
pop
inc
mov
mov
xchg
test
dec
pop
ret
sub
xor
aas
sub
inc
mov
retf
fstp
push
shl
repz
jno
push
stos
push
jle
outs
push
mov
and
stos
xor
popa
push
xlat
js
test
pop
xchg
push
mov
into
jne
pop
sub
(bad)
jbe
or
das
test
push
push
mov
cmps
or
imul
mov
fild
fldenv
mov
cmp
jbe
xor
add
inc
out
fwait
mov
jl
es
mov
and
add
rol
test
cmp
out
jmp
imul
(bad)
dec
data16
jmp
push
les
inc
ret
dec
xor
mul
add
or
pop
lahf
and
aad
repnz
pop
inc
pop
xor
xchg
pop
pop
stos
scas
out
xchg
loop
pop
nop
pop
inc
mov
stos
hlt
add
mov
fidiv
fmul
shl
cmp
mov
cmp
mov
xor
mov
ret
pop
jl
push
div
push
and
sbb
ss
dec
in
cmps
popa
or
lock
dec
pusha
inc
and
out
fs
sbb
ds
ja
idiv
rcl
pusha
jns
inc
and
loop
or
mov
pushf
addr16
loopne
cdq
jae
rol
or
stos
call
out
mov
or
dec
loopne
and
pop
cmp
fidivr
(bad)
mov
movs
adc
fcom
lock
mov
cld
add
cmp
dec
dec
frstor
push
test
add
pushf
jle
or
shl
cmps
std
test
adc
mov
xor
leave
fsub
out
sbb
push
pop
ret
mov
icebp
mov
std
mov
jmp
fucomip
lahf
(bad)
imul
cdq
jnp
rol
mov
xchg
and
(bad)
jne
test
retf
adc
imul
cmp
jmp
pop
cmp
iret
fidiv
adc
and
ins
fidiv
pusha
pop
fs
jp
push
test
loope
mov
(bad)
push
lahf
aas
dec
mov
pop
ret
cli
ss
push
ins
mov
push
icebp
mov
jl
mul
jns
aaa
pop
lds
loop
inc
hlt
cmp
push
xchg
ja
stc
xchg
push
and
cwde
adc
and
in
mov
lds
and
sbb
lods
sbb
cmp
sbb
call
inc
icebp
jg
shl
imul
jns
pop
test
(bad)
lock
std
mov
outs
mov
and
outs
and
test
imul
clc
adc
aad
hlt
je
rcr
xor
mov
gs
lock
pop
mov
(bad)
es
pop
push
jb
int3
xor
outs
xchg
jmp
inc
div
stc
or
xchg
cmp
push
pop
xor
nop
push
out
(bad)
sub
inc
bswap
hlt
cmp
dec
aam
cmps
cmp
inc
call
jmp
leave
sub
dec
mov
prefetch
repz
mov
cld
mov
mov
lods
out
or
outs
out
jns
retf
stos
bound
outs
xor
mov
lods
fist
in
mov
adc
dec
fisubr
xor
cmp
xchg
pop
mov
cmp
sub
sub
fs
pop
mov
xchg
mov
sub
shl
in
cmps
pop
(bad)
mov
imul
push
scas
cvtps2pd
and
inc
jmp
jne
push
push
in
test
fwait
call
inc
fnstsw
cdq
enter
sbb
mov
cmps
movs
sbb
sub
nop
aaa
lods
into
mov
xchg
xor
sti
ja
clc
rol
not
shr
xlat
xor
mov
out
fs
add
sar
push
and
scas
ins
push
inc
(bad)
mov
lods
mov
fmul
ss
cdq
psllq
dec
jnp
cmp
mov
cmp
lods
loopne
jp
jbe
std
daa
jp
and
icebp
test
aas
pop
stos
dec
jl
pop
jg
jg
inc
and
mov
lock
shl
inc
stos
jl
loope
test
pop
sbb
imul
fst
jp
cmp
ins
dec
repz
or
sahf
retf
push
hlt
or
test
dec
retf
xchg
adc
pop
movs
fistp
fdiv
adc
or
scas
popf
push
pop
jne
add
ss
ret
inc
ret
add
bound
inc
aam
mov
test
ret
mov
sub
into
ret
fdivr
push
adc
out
ror
sti
push
pop
cld
out
stc
ins
or
scas
loope
lods
les
push
aaa
(bad)
shl
xchg
pop
das
std
movs
sub
push
sub
add
repnz
in
adc
movs
xchg
cwde
sbb
xor
cdq
inc
inc
outs
pop
shl
add
mov
dec
and
les
inc
mov
xchg
dec
pusha
jmp
cmp
xchg
cmp
mov
push
jmp
mov
lods
(bad)
sub
xchg
popf
neg
es
push
inc
dec
shl
imul
aas
jge
shl
xor
hlt
mov
(bad)
sti
xor
inc
cmp
pop
or
arpl
outs
pop
push
call
and
rcl
dec
(bad)
sub
pop
mov
add
push
arpl
loopne
and
pushf
in
xor
pushf
dec
cmc
sbb
shl
cli
imul
jmp
cli
xor
cmp
inc
xlat
mov
bswap
popa
jbe
fstp
es
push
mov
dec
dec
xchg
bound
adc
adc
les
shr
bnd
inc
jle
popa
xchg
mov
cmp
mov
jno
jle
jp
xchg
fwait
mov
sbb
ja
dec
mov
shr
sub
cmp
gs
out
retf
stc
ds
mov
outs
mov
(bad)
(bad)
mov
clc
mov
cmp
or
xchg
das
add
fs
push
fwait
shl
add
ins
mov
es
sahf
mov
outs
jl
mov
jo
add
fimul
das
pop
imul
xchg
pop
lods
ss
pushf
add
mov
mov
sub
jl
in
inc
sub
sbb
dec
sbb
retf
xchg
pushf
ja
inc
imul
(bad)
xor
out
sbb
test
fild
sbb
push
aaa
in
mov
push
jl
mov
ins
push
cmp
cli
jmp
cmp
mov
add
bound
rcr
xor
int
push
hlt
sub
push
in
mov
xchg
(bad)
mov
ins
stos
aad
arpl
out
jmp
pop
xor
int3
clc
gs
lods
lahf
inc
jecxz
ret
out
outs
loopne
mov
mov
pop
sbb
adc
pop
mov
in
test
inc
fwait
pop
imul
sub
lods
push
push
stos
fisubr
jmp
test
loop
or
mov
lock
push
popa
cmp
loop
stos
in
mov
push
inc
mov
aaa
ins
dec
gs
arpl
outs
ds
mov
push
dec
outs
cmp
xor
sbb
es
bound
inc
in
neg
xchg
dec
test
mov
(bad)
imul
xor
add
cs
cmps
cmp
jecxz
out
sub
or
ss
xchg
cmc
jle
sub
inc
mov
xchg
test
jmp
(bad)
(bad)
dec
nop
jp
xor
stos
or
mov
mov
pop
loopne
ss
stos
xor
mov
call
movs
das
xchg
xor
inc
adc
arpl
mov
mov
cmc
xchg
or
add
ror
mov
(bad)
sbb
or
sub
xchg
arpl
fnstenv
push
mov
adc
call
rcr
mov
xchg
movs
popa
js
out
sub
outs
xor
or
pop
dec
sysexit
push
dec
sbb
stos
nop
push
dec
dec
loopne
sbb
stc
dec
adc
xchg
popf
jmp
shr
lods
sub
gs
xchg
lahf
add
and
scas
adc
inc
arpl
mov
retf
aas
mov
aam
push
popf
mov
inc
jl
or
adc
mov
stc
outs
cmps
pop
sahf
inc
imul
inc
or
outs
xchg
adc
outs
lods
cld
push
jne
icebp
mov
adc
dec
int
cmp
and
sar
push
xchg
jae
cli
lods
iret
das
xchg
jg
and
jl
sub
sbb
loop
arpl
pop
jmp
mov
fcom
in
mov
out
test
adc
add
and
mov
mov
scas
and
pop
jle
test
movs
call
pop
aas
lock
inc
sub
push
inc
xchg
pop
fld
pop
fbld
fiadd
mov
adc
inc
test
inc
or
enter
adc
fmul
ret
dec
sbb
es
stos
pop
cmp
cmp
nop
scas
add
retf
xchg
sbb
repnz
cmp
cmps
shl
sub
mov
mov
mov
add
xchg
add
cmp
mov
aas
jl
pop
push
push
into
xor
and
or
scas
push
mov
cmp
jns
pop
test
push
sbb
mov
mov
fild
jl
cmp
out
sahf
mov
popa
sbb
in
out
lods
mov
idiv
jge
jle
push
pop
and
adc
mov
ins
loope
cmp
test
movs
pop
fs
mov
dec
jg
cdq
mov
cmps
test
mov
out
cmc
sahf
dec
cdq
shl
jmp
hlt
loop
adc
(bad)
or
lock
enter
rol
or
outs
ret
in
dec
(bad)
gs
call
jle
push
stc
cmps
jmp
mov
jecxz
and
sbb
nop
adc
add
ds
in
iret
adc
inc
cs
shr
ss
loop
aad
cmp
loopne
imul
int3
pop
pushf
iret
clc
es
add
leave
inc
stos
dec
cmp
leave
in
mov
cmp
bound
fcmove
ret
xchg
push
dec
and
std
and
dec
and
add
mov
and
sahf
shr
pop
jne
dec
cmp
les
scas
inc
rol
xchg
cdq
fsubr
push
stc
out
jmp
and
or
cmp
add
jle
xchg
sub
inc
ret
cli
or
icebp
fwait
in
mov
xchg
fs
push
loopne
jmp
(bad)
jp
mov
(bad)
sar
adc
and
(bad)
test
shl
in
xor
jb
sbb
xchg
sub
or
lock
sub
aas
xor
cmps
xchg
movs
ins
out
popf
outs
in
(bad)
clc
test
mov
les
inc
out
push
add
sbb
push
and
pop
stos
mov
imul
int
inc
mov
mov
adc
ja
nop
retf
stc
nop
out
arpl
sbb
(bad)
fidiv
dec
mov
je
test
mov
imul
sar
aad
fst
inc
jg
sbb
ret
sbb
bound
pop
dec
add
adc
add
or
push
leave
inc
shl
cmp
mov
fdivr
int
test
adc
(bad)
(bad)
fisub
retf
and
mov
icebp
and
ret
test
mov
and
jecxz
sub
je
or
push
pop
iret
aas
int
inc
mov
je
ret
mov
hlt
mov
add
ret
pop
push
xchg
mov
or
or
outs
or
hlt
mov
xor
adc
je
sub
adc
push
inc
addr16
jb
cmp
pop
xor
or
mov
jl
dec
push
outs
mov
dec
sub
xchg
inc
xchg
ja
fadd
sbb
xor
mov
fldcw
ja
cmp
add
xchg
ins
rcr
stc
push
les
jae
push
pause
fwait
js
jbe
jmp
idiv
imul
pop
sar
sub
jno
lea
fisub
sbb
and
fs
or
loopne
mov
js
mov
add
push
lahf
sbb
fsub
sub
dec
mov
xchg
fisubr
inc
out
out
pop
pushf
jb
sbb
scas
div
ds
mov
cmp
adc
rol
sub
inc
mov
aas
sbb
lock
outs
iret
out
jns
pop
das
sub
lock
sub
xchg
jnp
test
stos
bswap
mov
xchg
inc
sbb
push
inc
cmp
jle
ja
xchg
ins
nop
adc
add
das
mov
outs
jmp
jge
xchg
add
pop
jno
xchg
repnz
out
es
in
inc
add
rol
adc
push
in
jmp
les
loop
stos
out
cld
(bad)
aad
push
cmc
pop
xchg
jbe
aad
adc
in
popa
cmp
imul
clc
callw
jae
dec
lock
sbb
add
nop
stos
scas
sahf
shr
imul
mov
out
xlat
mov
hlt
mov
out
lahf
popa
retf
jle
dec
out
jle
adc
in
daa
mov
into
and
mov
cs
arpl
adc
loope
mov
and
sbb
mov
lods
sub
pop
dec
imul
call
icebp
xchg
jecxz
adc
jo
jns
sbb
or
out
or
popa
push
shr
mov
xor
jns
sub
mov
cmp
inc
stos
mov
rol
sub
push
and
xchg
out
and
sbb
fsub
jmp
sbb
add
retf
jns
mov
enter
mov
repz
adc
(bad)
cmp
fstp
fisubr
jge
cmp
ret
popf
aad
and
inc
cmp
scas
xchg
daa
stos
cmp
retf
pop
rcr
cmp
xor
or
sbb
and
add
jbe
sbb
enter
xchg
scas
cmps
xchg
jmp
faddp
(bad)
(bad)
or
repz
leave
es
dec
cmps
outs
cld
mov
mov
adc
adc
cmp
popa
inc
sbb
push
push
add
and
neg
punpcklbw
sbb
xor
out
jmp
mov
xchg
jmp
lea
or
nop
call
cmp
push
cli
out
test
pushf
xor
xchg
js
icebp
dec
xchg
(bad)
jmp
push
cmp
xor
(bad)
mov
cmp
das
rcl
xchg
adc
xchg
mov
mov
or
and
mov
cmp
jl
into
ss
sbb
les
ins
fldenv
inc
jle
test
sahf
jg
retf
push
into
cmp
repnz
pusha
ror
adc
dec
or
xchg
imul
arpl
cmc
les
mov
dec
repz
and
mov
pop
xchg
adc
rol
xor
pop
adc
cmc
iret
mov
dec
push
loope
ins
je
fldcw
jb
sub
stos
adc
ret
jnp
inc
sub
adc
mov
mov
sbb
int3
lock
leave
fdiv
loop
retf
mov
and
sbb
(bad)
mov
test
lods
mov
fnsave
mov
jp
push
ret
ror
cmovg
movs
pop
fisttp
inc
aad
jg
xlat
adc
add
and
pop
and
test
mov
ins
outs
in
out
sbb
cmps
out
pop
rcr
jmp
xor
popf
stc
scas
scas
push
adc
pop
div
push
push
std
or
arpl
jmp
jecxz
fcmove
mov
std
dec
aaa
pop
add
or
cmp
dec
xchg
mov
inc
out
push
xchg
mov
test
call
inc
mov
out
test
push
movs
enter
clc
call
repz
and
popa
aam
jb
ja
jno
not
adc
xchg
jo
dec
mov
mov
out
xchg
ror
mov
or
sar
inc
test
test
xchg
test
pop
or
(bad)
adc
hlt
sub
in
xchg
add
push
mov
in
add
jbe
sub
add
fnstenvw
add
(bad)
push
int
jg
mov
sub
imul
cli
aad
int
adc
xchg
bound
fistp
fdiv
mov
out
imul
ret
or
pop
aaa
xor
push
mov
xchg
inc
xchg
dec
cmps
shr
or
pusha
movs
and
int3
pop
int
out
push
jecxz
push
cmp
outs
and
daa
cld
dec
xor
xchg
add
cmp
je
adc
in
popf
mov
aaa
test
sub
xchg
ins
pop
jge
push
idiv
ret
inc
icebp
push
call
in
mov
lods
scas
aaa
pop
popf
jp
mul
push
sub
out
dec
inc
push
jo
bound
cmp
xchg
es
ins
push
mov
add
ins
xchg
addr16
mov
sbb
bound
adc
pop
rcr
imul
sub
inc
js
add
sub
into
mov
pop
sar
movs
nop
sub
test
inc
cdq
(bad)
addr16
adc
mov
repnz
rol
pop
or
pop
gs
sub
xchg
outs
sub
mov
jle
ret
in
loopne
retf
pop
inc
iret
push
sub
pop
std
xchg
imul
and
neg
jmp
jmp
cmps
cwde
adc
mov
repnz
dec
sub
and
loop
test
or
mov
xchg
test
push
push
mov
stc
ret
repz
jecxz
jge
mov
inc
jg
adc
mov
nop
loope
jb
mov
dec
mov
addr16
loop
sub
stos
inc
mov
gs
mov
out
xchg
xor
jle
push
out
mov
add
push
jbe
nop
ret
cmps
in
sar
clc
pop
fist
(bad)
jno
repnz
dec
ja
jp
sub
xor
out
xchg
ret
imul
sti
jmp
add
push
ins
lods
push
inc
pop
jae
fmul
jno
call
mov
rcr
jne
outs
stos
jle
lock
inc
mov
icebp
call
pop
cmp
outs
dec
int
das
(bad)
sub
call
sbb
cmc
aad
mov
ret
push
sbb
xchg
and
lock
xor
movs
test
sub
jge
xchg
mov
fld
and
outs
(bad)
push
push
xchg
sbb
sub
adc
xor
test
fldenv
icebp
retf
fild
out
xchg
mov
test
or
jb
je
xchg
dec
lahf
cmp
mov
sar
mov
jle
mov
mov
lods
mov
cwde
inc
inc
test
aam
pop
movs
jmp
std
dec
add
push
dec
adc
pop
and
xor
call
sub
adc
std
lods
add
cmp
xor
pmaxub
pusha
loop
fwait
inc
fs
add
rcr
ins
or
jo
and
sti
xlat
dec
idiv
fist
jne
dec
cmps
in
test
pop
mov
lods
sbb
xor
data16
xor
jne
jns
(bad)
into
call
push
add
imul
sub
retf
movs
sub
inc
jns
xor
push
out
imul
add
jl
mov
or
mov
ins
fs
xchg
fs
hlt
sbb
adc
mov
fs
jmp
dec
mov
dec
out
jg
imul
jecxz
movs
icebp
fisttp
ins
xor
mov
dec
push
xor
popa
or
xchg
ret
fcomp
les
adc
retf
jle
je
or
gs
mov
out
mov
sub
pop
stc
cmp
(bad)
in
inc
sbb
push
outs
push
ds
jl
or
fist
nop
out
add
adc
out
mov
ds
loope
and
mov
mov
nop
or
movs
outs
or
pop
sbb
stc
fdiv
test
mov
dec
rcl
aad
(bad)
dec
push
pop
and
jns
jmp
daa
mov
arpl
stos
ss
shr
lds
(bad)
fist
mov
in
lock
mov
push
push
jne
xor
mov
fwait
sahf
sbb
mov
rol
aam
xchg
pusha
ds
mov
push
js
movs
mov
mov
enter
pop
call
retf
int
in
sbb
xchg
pop
and
sbb
push
mov
jg
pop
mov
scas
test
mul
js
push
arpl
mov
push
sti
mov
adc
jne
lahf
stc
repz
lahf
and
mov
daa
inc
ret
inc
add
and
ret
mov
xchg
fcomp
mov
sub
or
dec
xchg
test
popa
inc
and
fidiv
add
add
retf
(bad)
jmp
pop
rcl
ret
popf
out
sbb
aam
xchg
scas
fisub
jmp
into
enter
das
adc
in
and
cvtps2pi
(bad)
fcomp
out
mov
bound
dec
adc
cdq
imul
sbb
lods
push
lods
push
push
inc
add
add
enter
daa
mov
aas
in
sbb
inc
dec
inc
out
lock
pop
(bad)
xchg
pop
pop
inc
pop
je
fisttp
push
iret
jmp
jbe
inc
or
xor
cmp
push
aad
test
inc
adc
mov
call
loope
push
leave
mov
sub
mov
nop
les
inc
jo
cmc
mov
mov
mov
mov
dec
vpcmpgtd
jns
sbb
rcl
ds
xor
mov
mov
push
lock
data16
xchg
(bad)
shr
dec
or
int
bnd
cmp
icebp
loop
pop
lea
dec
mov
push
and
xchg
shl
jecxz
mov
(bad)
icebp
les
pop
mov
jnp
xchg
popf
clc
retf
push
xor
push
inc
jb
jne
(bad)
call
mov
pop
xchg
xchg
adc
sub
scas
jg
xchg
stc
rol
scas
ja
ror
cs
mov
(bad)
push
cmp
scas
jo
push
jbe
pop
aas
adc
fwait
jecxz
xchg
jle
out
jp
xchg
call
xor
(bad)
mov
ds
mov
(bad)
das
(bad)
cmc
outs
mov
mov
cld
int
push
sbb
mov
push
xchg
jge
in
xchg
not
out
or
cld
adc
mov
fst
xchg
movs
ins
xchg
dec
in
sub
pop
sti
lods
cmc
inc
(bad)
(bad)
hlt
mov
jae
pop
leave
or
xchg
stos
call
loop
inc
enter
cld
and
aad
sbb
add
add
jecxz
jmp
shr
xor
xchg
adc
mov
sub
call
mov
cs
mov
jno
mov
inc
xchg
je
push
inc
or
jo
repnz
adc
into
inc
mov
dec
or
jg
inc
cmp
repz
and
mov
mov
lahf
or
xchg
lods
and
pop
cmps
adc
sti
dec
into
adc
dec
out
test
retf
cmps
dec
cmp
add
fdivr
lock
xlat
cmp
xchg
xor
pop
aas
ss
fist
(bad)
call
and
push
mov
sub
or
inc
jns
push
cmp
pop
and
jge
leave
mov
mov
or
and
popa
cld
sub
xchg
popa
cs
popf
push
mov
sbb
dec
stos
std
lods
loop
pushf
pushf
add
fimul
scas
pop
add
loop
xchg
loope
hlt
out
repz
outs
push
cmc
sahf
mov
mov
pop
xor
cmp
inc
fiadd
sbb
jmp
jno
stc
ret
xchg
jne
sbb
cmp
cmp
xchg
push
xchg
cmp
lods
daa
inc
cli
test
inc
ja
bound
sbb
test
dec
pop
xor
outs
cmp
popf
or
fisubr
movs
imul
xchg
or
je
(bad)
push
xor
bound
push
cld
add
inc
pop
cli
test
adc
sbb
mov
adc
adc
ds
sar
test
out
ins
adc
jnp
cmp
mul
mov
sbb
or
daa
into
(bad)
push
xlat
add
sti
dec
jb
les
mov
enter
or
popf
xchg
dec
fnsave
mov
test
xchg
mov
test
out
mov
sbb
lods
xor
xchg
pop
and
or
rcr
push
and
cmp
pop
mov
jo
or
jecxz
out
jbe
je
iret
fstp
cmp
mov
iret
adc
adc
jl
sub
dec
xor
or
xchg
mov
test
mov
push
dec
xchg
ins
cmp
sbb
sub
popf
jmp
fldcw
cmp
test
outs
add
pop
leave
push
pop
loop
(bad)
jae
mov
jns
xor
pop
retf
inc
gs
dec
inc
and
pop
mov
add
push
adc
in
jmp
leave
sbb
test
pop
out
shl
shl
(bad)
scas
cmp
mov
stc
and
sbb
sbb
pop
mov
ret
out
call
lock
fcom
jb
lea
movs
cmc
mov
push
jecxz
(bad)
push
mov
stos
lods
xchg
in
adc
das
cmps
xchg
jl
pop
test
mov
pop
fs
jnp
or
ins
xchg
retf
sti
mov
jl
adc
jmp
movs
(bad)
out
popf
aas
ss
pop
jne
out
add
sub
popf
mov
xor
std
mov
xchg
fild
mov
sbb
adc
sbb
rcr
cmp
mov
inc
out
xor
xlat
fmul
aad
lods
xor
sub
sbb
shl
xor
cmp
xchg
jmp
neg
fistp
fcmovu
out
sbb
cwde
pop
push
aad
mov
xchg
or
xor
mov
jge
cmp
or
and
outs
add
xchg
shl
nop
cmp
fadd
es
in
sahf
lahf
data16
and
mov
inc
call
push
mov
lds
mov
mov
cmp
adc
daa
xchg
sti
jge
jns
imul
mov
jo
inc
test
jo
sbb
lods
fwait
add
lods
sbb
pop
inc
aad
add
dec
pop
out
inc
push
mov
pop
not
push
test
js
xlat
cdq
add
mov
fmul
add
icebp
clc
xchg
fnstsw
jmp
leave
jo
mov
xchg
fbstp
push
(bad)
jmp
and
stc
jb
cli
in
repz
inc
mov
int
sbb
rol
xchg
jp
(bad)
pop
pop
sub
push
cmp
pop
aam
push
in
dec
jae
dec
inc
hlt
fst
dec
scas
push
clc
add
sbb
stos
or
dec
dec
popa
cli
jne
ficomp
inc
pop
pop
push
or
in
and
jmp
mov
out
fcomp
dec
iret
mov
movs
or
and
dec
xor
call
test
jo
xchg
(bad)
xlat
ins
pop
call
sbb
retf
mov
jl
or
stos
in
push
test
pop
sub
ja
out
(bad)
daa
mov
or
cmp
sti
inc
jbe
ret
xor
hlt
es
retf
rcr
adc
data16
jns
fadd
fadd
in
int
adc
mov
movs
xor
ins
mov
nop
push
inc
sbb
fs
add
xchg
in
movs
cmc
push
ret
fldcw
mov
cld
test
arpl
push
cmp
xchg
mov
repz
sub
shl
hlt
loope
mov
lods
out
hlt
icebp
and
in
pop
jae
daa
xchg
xchg
lods
mov
loope
dec
sub
add
pop
sbb
lahf
mov
add
mov
ror
pop
push
ins
ret
fst
jmp
xor
xchg
rol
cmp
cdq
clc
je
push
(bad)
retf
xchg
int3
scas
pop
mov
rep
aaa
ja
cwde
cmps
icebp
add
xchg
jmp
adc
sub
sbb
nop
cmp
pop
sub
fwait
sahf
movs
(bad)
enter
inc
dec
lahf
nop
cdq
lea
pop
enter
cdq
sub
or
pushw
jecxz
outs
xadd
fst
call
int
add
dec
jle
scas
fisttp
je
pusha
cmps
jl
int
ror
sbb
inc
jbe
cmp
mov
out
fidiv
mov
pop
stc
int3
mov
push
fs
pop
test
lea
mov
jae
stos
mov
mov
mov
pop
pop
push
mov
xchg
cmps
aaa
imul
and
inc
xchg
in
add
push
ror
imul
sub
add
dec
mov
pop
cwde
pop
xchg
test
ret
add
std
push
rol
clc
or
ja
or
jmp
fldl2t
mov
in
jl
mov
push
mov
jb
sbb
push
mov
rcr
gs
lock
aad
idiv
adc
lock
xor
out
mov
(bad)
loopne
and
adc
sbb
mov
clc
shl
mov
xor
fcom
ss
inc
out
ins
pop
xor
mov
sbb
push
cmc
pusha
dec
jno
popa
(bad)
scas
cmp
sbb
out
sbb
pop
mov
jle
clc
jmp
mov
out
stos
call
fwait
stc
std
mov
mov
push
call
sub
xchg
div
fbld
push
es
call
ss
std
ja
jge
jle
add
fidivr
mov
fucomp
mov
stc
inc
mul
adc
or
and
adc
inc
scas
das
sub
loope
adc
sbb
movs
add
adc
gs
ins
jp
jo
bound
and
pop
cmps
inc
or
imul
fstp
sar
and
mov
adc
stos
sbb
adc
jg
fld
fild
fstp
sub
nop
xchg
push
dec
sbb
and
sbb
outs
adc
repnz
mov
mov
mov
mov
addr16
xchg
jle
inc
xor
(bad)
push
shl
jl
retf
cmp
adc
mov
sub
sbb
outs
mov
xchg
xor
pop
ins
cmp
xchg
sub
enter
loope
jae
outs
inc
push
dec
test
fld
cmp
cli
repnz
push
neg
pop
test
push
test
mov
aaa
and
in
out
rol
daa
mov
mov
push
outs
xor
movs
and
repnz
in
pop
add
jb
push
or
and
lahf
xchg
push
ret
dec
imul
mov
mov
add
mov
into
jns
xor
mov
and
test
mov
inc
ret
outs
scas
(bad)
mov
es
jb
aam
loopne
adc
scas
rep
push
jnp
jo
push
cli
sbb
xchg
sti
jmp
jle
and
jnp
mul
xchg
sar
mov
jmp
lock
jns
mov
adc
dec
cmp
nop
mov
mov
xor
xor
movs
sbb
(bad)
cmp
mov
jle
shr
sub
retf
push
(bad)
cs
mov
adc
dec
cmp
ret
jno
int
jmp
(bad)
jns
sub
les
mov
pop
test
ins
sahf
nop
jmp
push
fwait
xchg
push
pop
sbb
loopne
mov
(bad)
in
sub
in
in
sub
pop
lea
cmp
in
movs
mov
in
or
mov
in
imul
sbb
mov
dec
mov
outs
ja
jae
dec
cmp
push
stc
or
movs
inc
sbb
pushf
imul
sub
(bad)
push
outs
xor
outs
mov
sub
aas
popf
jl
add
je
mov
into
fwait
sbb
xor
mov
aaa
sbb
xchg
inc
add
int
sbb
pop
sub
enter
fstp
ins
sbb
(bad)
pop
mov
les
fsub
cmp
mov
add
retf
push
(bad)
cli
jmp
xchg
and
mov
mov
push
push
add
clc
cmps
adc
loope
and
idiv
mov
fsub
cdq
outs
ror
jmp
xchg
dec
sub
arpl
mov
or
jbe
dec
adc
cmp
dec
popa
sbb
popf
jle
nop
es
call
test
bound
or
(bad)
cdq
js
mov
dec
cmps
stc
pop
cmp
jmp
dec
in
jne
sub
loop
(bad)
or
stos
jb
pop
jo
mov
sub
mov
scas
and
pop
xchg
(bad)
push
xchg
jo
in
mov
call
cmps
je
and
addr16
arpl
sub
inc
xchg
and
sahf
sub
xor
mov
in
xchg
add
mov
pop
adc
xchg
int3
adc
popf
adc
add
mov
cmp
in
pop
data16
arpl
pop
xor
in
cmp
mov
inc
mov
out
std
mov
addr16
jmp
sub
sbb
xchg
and
lock
push
loopne
xor
retf
mov
adc
fidivr
hlt
sahf
cmp
pushf
pop
push
or
add
hlt
cmps
and
adc
and
pop
mov
out
cmp
sbb
call
test
popa
sar
push
mov
or
mov
xchg
dec
add
cmps
nop
push
add
jno
or
gs
xor
lds
scas
ss
pusha
sbb
mov
popa
sbb
xor
mov
add
cwde
gs
jl
(bad)
stc
ret
pusha
inc
jp
pop
out
sti
inc
xchg
dec
je
inc
fidivr
movs
xor
les
in
inc
jno
lods
lds
stos
mov
mov
add
in
xchg
sub
gs
aad
lock
xchg
adc
adc
or
dec
inc
cmps
and
xchg
pop
ins
ss
jcxz
sahf
push
inc
(bad)
lock
adc
adc
jbe
jae
adc
xchg
and
cs
neg
push
int3
lods
mov
stc
sub
mov
adc
mov
jmp
rcl
call
out
push
xchg
retf
pusha
fs
mov
jb
jmp
shr
aad
or
gs
mov
cdq
mov
sub
rol
or
pop
movs
fsqrt
xlat
aas
pop
imul
ret
ins
sahf
adc
cld
call
mov
push
enter
cs
ret
add
jbe
xor
pushf
push
jbe
mov
loopne
xchg
cmp
in
sub
add
fimul
or
push
cmps
xchg
jnp
dec
ret
int3
daa
mov
mov
neg
inc
shl
stos
ins
push
nop
test
dec
push
add
gs
sbb
xor
cmp
es
test
fsub
push
mov
add
xchg
imul
push
pop
aaa
add
dec
nop
mov
xlat
and
mov
les
adc
sahf
fsub
xor
mov
xchg
jle
adc
outs
xor
aam
fstp
pop
cli
jb
pop
out
inc
(bad)
push
mov
aad
or
mul
xchg
sahf
mov
mov
cmps
mov
cmp
sbb
lods
idiv
pop
movs
cld
inc
(bad)
mov
cmps
shr
outs
mov
rcr
cli
or
psubq
jp
mov
jb
out
in
mov
es
fld
sahf
and
idiv
pop
pop
movs
xor
(bad)
cmc
outs
pop
ror
mov
stc
and
jo
data16
jle
jb
jbe
ret
adc
or
cmp
jne
mov
pop
mov
jmp
mov
adc
mov
and
data16
mov
test
out
rcr
mov
or
jg
inc
call
sbb
retf
pop
mov
mov
lahf
cmp
into
mov
stc
add
repz
xchg
out
push
jo
pop
int
push
or
std
xor
inc
xor
mov
cli
add
mov
sub
mov
iret
sahf
mov
and
retf
inc
(bad)
scas
or
cmc
pop
pop
or
jmp
lods
cmps
jae
mov
das
pop
stos
push
add
fsubr
das
aad
dec
pop
je
adc
xor
sub
mov
xor
push
cmp
aaa
jge
inc
cmp
dec
daa
sub
xchg
ds
push
bound
js
dec
adc
mov
pop
pop
xchg
(bad)
jmp
ins
cmp
pop
or
mov
or
inc
in
adc
cli
push
call
adc
cmp
xchg
gs
(bad)
jg
or
jnp
rcl
lods
loope
jge
movs
xchg
and
aas
js
mov
test
or
scas
xchg
leave
ja
fadd
dec
push
mov
hlt
sub
lea
pop
es
das
sti
dec
and
sbb
pop
gs
fcom
xchg
mov
cmc
cwde
mov
jl
rcr
adc
push
jge
sub
and
cmp
pop
sub
test
in
out
inc
imul
xor
popa
(bad)
mov
add
cdq
adc
outs
std
in
inc
cmp
and
(bad)
jns
xor
xchg
inc
(bad)
adc
and
xchg
or
adc
add
inc
pusha
dec
jmp
shr
inc
rcr
jg
aad
mov
cmc
sbb
mov
loopne
cld
loopne
sbb
in
not
mov
mov
push
pop
and
fs
mov
popa
pop
stc
mov
adc
mov
xchg
xchg
in
xchg
push
xchg
xchg
mov
scas
push
mov
lods
mov
sub
lds
popf
cmps
sub
cmp
and
push
mov
and
mov
in
test
jmp
jnp
add
push
pop
sbb
in
adc
xchg
sbb
enter
sub
and
movntps
lock
pop
add
iret
aam
add
mov
inc
jmp
mov
fidiv
xor
mov
xor
fisttp
movs
cdq
push
add
jecxz
pusha
jmp
scas
cs
jle
fild
dec
push
test
pop
fucom
pop
pop
pusha
jmp
sub
sbb
imul
bound
(bad)
in
out
dec
xchg
jno
jae
sbb
pop
in
sti
xchg
scas
adc
(bad)
inc
fnstsw
inc
shl
push
and
or
push
enter
inc
movs
add
dec
enter
sti
cmps
in
pop
arpl
lods
test
pop
mov
mov
jp
mov
sbb
mov
mov
in
(bad)
and
sub
data16
nop
xor
ds
inc
(bad)
fild
jmp
fstp
dec
shl
lods
fst
(bad)
jecxz
fwait
loop
mov
pop
xchg
push
xchg
and
cwde
(bad)
scas
sbb
pushf
lods
jmp
and
js
fbld
mov
xor
imul
add
xor
cmp
or
sub
and
xor
mov
shl
stos
inc
mov
push
ds
sbb
and
mov
push
sbb
xchg
dec
pop
clc
(bad)
jmp
cld
pop
repz
cmp
xchg
push
cmp
cmc
outs
mov
mov
push
nop
jbe
jecxz
pop
cwde
popa
in
mov
cdq
test
sbb
sub
cld
bound
cmp
fist
fiadd
mov
xchg
jmp
mov
add
test
cmp
jecxz
stos
inc
or
aas
fcom
ss
ret
inc
push
loopne
movs
sahf
jle
push
loopne
jmp
adc
pop
aad
into
add
iret
dec
movs
pusha
cld
xor
daa
push
adc
add
sbb
and
arpl
aaa
mov
ss
neg
xchg
add
out
jl
cmp
add
rcr
xchg
inc
cmp
sub
repnz
sbb
jmp
mov
xchg
les
pop
dec
fld
mov
sub
dec
mov
lock
es
inc
dec
not
jmp
add
pusha
mov
pop
and
sbb
icebp
adc
ja
jg
jle
shl
in
sahf
adc
push
adc
push
push
mov
pop
cmps
sbb
leave
ficomp
sbb
mov
mov
mov
inc
dec
sbb
sahf
xlat
gs
mov
jmp
lds
popf
mov
jo
(bad)
leave
hlt
sbb
dec
push
jbe
sti
inc
or
inc
cli
bound
mov
mov
mov
movs
mov
push
(bad)
sbb
jbe
sbb
or
mov
xor
or
xlat
scas
scas
cmp
cmp
xor
test
inc
mov
mov
xchg
in
adc
movs
dec
arpl
retf
cs
mov
ror
sub
mov
add
mov
xor
add
jmp
sbb
xor
or
clc
test
xchg
push
fmul
pop
mov
push
test
jmp
xchg
lea
mov
mov
cld
dec
cmp
cmp
cmc
jl
pushf
movs
pop
xchg
(bad)
ins
mov
pop
loopne
repz
xor
gs
iret
or
mov
lea
mov
and
add
repnz
and
cmp
mov
into
xchg
adc
imul
rol
les
arpl
pushf
jl
jecxz
xor
mov
cmc
add
jno
aam
movs
dec
adc
inc
jl
sbb
aam
push
push
adc
and
(bad)
sub
movs
(bad)
hlt
adc
fst
cmps
test
xchg
pop
mov
push
add
(bad)
popa
int3
inc
mov
imul
xor
into
push
std
dec
pushf
imul
mov
pop
cmp
ja
hlt
jl
mov
jmp
dec
ja
and
xchg
pop
mov
mov
xor
sub
xchg
jl
or
adc
jbe
je
(bad)
call
fadd
mov
adc
rcr
mov
leave
mov
xchg
rcl
fcomi
mov
mov
pop
xchg
xor
add
loopne
stos
mov
ss
movs
inc
fild
mov
test
jnp
icebp
ror
icebp
sbb
pop
dec
fs
es
mov
adc
loopne
push
cdq
push
add
cs
dec
std
sbb
mov
ret
xchg
and
cmp
pusha
pop
idiv
add
dec
push
imul
mov
test
adc
fadd
ja
jmp
push
cmp
ret
sub
mov
in
mov
inc
clc
cdq
xor
sub
pop
ficomp
cmp
sub
jge
adc
test
cwde
aad
xor
sti
inc
and
jae
pop
lahf
pop
and
add
mov
pop
jecxz
ins
cmp
xor
mov
mov
xor
adc
or
out
xor
sbb
mov
out
xchg
sub
ret
js
pop
in
xor
iret
popf
mov
sahf
(bad)
movs
rol
ror
push
adc
and
ret
(bad)
cld
mov
pop
mov
stc
popa
inc
sbb
mov
cmp
pop
sub
inc
xchg
in
aam
dec
outs
dec
dec
sub
add
sub
cmp
dec
mov
sbb
(bad)
(bad)
rcr
ret
(bad)
or
and
in
int
iret
imul
jno
bound
jb
fs
sbb
(bad)
movs
or
jnp
pop
int3
and
(bad)
and
push
gs
out
jge
je
pop
retf
inc
sub
add
(bad)
bound
sub
outs
xchg
mov
fs
adc
xchg
ds
sbb
xor
aas
mov
xor
mov
ins
or
jae
in
std
or
xchg
out
jnp
inc
or
dec
sbb
push
inc
add
stos
cmp
arpl
jp
mov
scas
(bad)
cmps
sub
mov
gs
addr16
xchg
cmps
shl
scas
cmp
cld
push
stos
popa
out
mov
stos
outs
sbb
icebp
stos
sti
(bad)
icebp
jno
jmp
imul
push
or
sub
add
mov
or
pop
sub
pop
mov
cmps
dec
pop
cld
dec
inc
add
mov
jbe
pop
dec
cmp
test
adc
xchg
js
jmp
test
cmp
mov
addr16
mov
mov
sub
repz
xchg
mov
push
or
jnp
sahf
pop
outs
test
xor
fdivp
sub
hlt
ror
mov
aad
push
ins
dec
xchg
mov
mov
enter
jg
call
cmp
or
lds
sbb
push
fdiv
out
in
mov
ret
(bad)
adc
jp
bound
js
iret
(bad)
fdivr
test
cli
mov
push
add
xor
(bad)
(bad)
js
scas
mov
cmp
jns
xchg
inc
dec
mov
sub
rol
mov
xchg
dec
dec
call
push
sti
cmp
and
les
jecxz
cmp
ss
sbb
dec
cdq
mov
mov
stc
cmps
sbb
cdq
push
xor
in
push
loope
mov
cs
ret
int3
fimul
xor
inc
xor
pop
xor
mov
adc
inc
jmp
int
ins
cs
sti
nop
ins
test
mov
and
test
cmp
or
js
add
enter
fdivrp
inc
std
mov
js
jl
icebp
nop
add
xchg
inc
das
(bad)
aam
(bad)
rcr
mov
shl
fldcw
lea
gs
cmp
and
call
ret
mov
jge
and
adc
not
stc
jecxz
and
cli
ret
ds
ja
popa
lock
mov
sub
sub
loopne
mov
ds
popf
push
ss
push
lock
mov
test
mov
mov
push
test
mov
repz
xor
and
ins
mov
push
popf
pusha
ret
add
mov
mov
sub
test
mov
jecxz
inc
in
dec
push
add
or
retf
push
adc
mov
adc
mov
adc
fnstenv
mov
loope
je
mov
push
add
popf
inc
enter
jle
mov
cld
sbb
add
scas
(bad)
les
popa
sub
pop
mov
aas
ficom
xor
fsub
inc
pop
imul
mov
jecxz
ds
lds
mov
add
repnz
int
nop
fisttp
xor
sahf
cld
jne
sub
icebp
outs
or
call
cmp
jbe
mov
clc
fisttp
jbe
mov
mov
pop
add
out
mov
aas
mov
xchg
(bad)
out
mov
lods
dec
add
xor
push
mov
xlat
xchg
ja
stos
adc
fnstsw
jg
inc
repz
ret
inc
sbb
inc
test
int3
xlat
or
fdivr
push
inc
mov
outs
add
in
xor
mov
das
and
out
je
mov
mov
lahf
mov
mov
and
loopne
fwait
mov
add
scas
pusha
dec
dec
fdivr
loopne
push
mov
outs
jmp
pop
mov
cmp
cmp
bound
push
in
sbb
jg
or
inc
xchg
jl
xor
jno
inc
repnz
or
cmp
and
aas
pop
jmp
push
xlat
fs
mov
repz
and
rcr
aas
js
dec
and
inc
retf
pop
stc
stos
shl
loopne
loop
add
mov
pop
das
imul
ficom
ret
mov
mov
enter
cwde
imul
mov
jle
into
jne
mov
pop
inc
mov
ret
xchg
cmp
lods
push
repz
and
or
mov
daa
mov
push
pop
ror
(bad)
push
inc
clc
fisttp
sbb
adc
outs
sbb
iret
push
je
repnz
xor
adc
sar
int
sahf
(bad)
sub
test
lds
fcomp
add
imul
mov
push
rcl
int3
xor
or
dec
add
fsubp
(bad)
retf
gs
xor
aas
xlat
je
sbb
loope
jns
cwde
popf
stc
sti
loop
inc
(bad)
sbb
or
rcl
daa
push
cmp
add
push
test
fcom
push
(bad)
paddusb
aas
pop
ret
fstp
add
mov
stos
pop
pusha
aas
iret
sbb
das
mov
les
xchg
cdq
ja
adc
fld
add
push
mov
test
or
xchg
xchg
call
iret
ins
sbb
jno
mov
ret
xlat
es
pushf
adc
push
xchg
int
jmp
sbb
shl
jmp
(bad)
mov
fstp
jb
ds
lods
scas
add
fnstenv
mov
mov
cmp
push
fld
dec
push
add
and
daa
test
add
mov
into
cwde
add
sbb
add
inc
out
push
pop
call
es
icebp
cmp
dec
jp
out
xchg
jbe
pop
sub
retf
mov
(bad)
repz
mov
(bad)
push
add
dec
bound
jno
ficom
repz
cmps
arpl
fsubp
fnstsw
push
jmp
add
test
cmp
ss
pushf
push
sub
push
xchg
inc
ror
cmp
adc
jae
fcmovu
pop
mov
push
dec
pop
mov
not
xor
out
xor
mov
xlat
sub
sub
push
inc
push
fdivr
pop
push
pop
popf
push
ins
mov
das
sbb
mov
mov
js
jle
loopne
inc
(bad)
jae
jne
and
add
xchg
sbb
mov
sub
icebp
es
mov
pop
jo
push
in
mov
data16
and
push
push
gs
scas
fist
outs
imul
test
mov
lods
mov
into
hlt
xchg
je
(bad)
fucomi
cmp
das
out
push
adc
pop
sub
cmc
add
xchg
mov
jo
(bad)
fs
fcomp
mov
outs
mov
dec
dec
sbb
and
cmps
ja
inc
dec
lods
mov
mov
inc
pusha
mov
or
aad
xchg
adc
and
xor
pop
pop
loope
mov
rcl
or
std
mov
ins
pop
dec
push
ins
movs
and
xchg
loop
int3
sbb
fnstcw
std
and
mov
shl
mov
xchg
jge
adc
mov
jmp
addr16
pop
cmps
ins
ss
imul
inc
cld
push
(bad)
stos
stc
jno
push
lods
xchg
out
(bad)
popf
sub
adc
mov
retf
mov
mov
adc
shl
pop
cli
mov
out
fsubr
mov
dec
repz
jbe
aam
ins
cwde
clc
xchg
fmul
sar
jmp
daa
lds
(bad)
mov
pop
add
(bad)
sub
fisttp
and
pop
pop
fld
push
add
inc
and
popa
cmps
ret
cmp
stc
jp
les
repnz
fwait
and
inc
pop
pusha
sbb
adc
pop
push
and
push
cmc
dec
dec
sub
cmp
rcr
js
mov
dec
in
int
lock
les
scas
fwait
pop
mov
jns
add
jae
(bad)
mov
iret
sbb
pop
into
ja
cdq
inc
das
or
xchg
fist
add
cmp
mov
or
add
xchg
mov
rcr
lahf
aaa
cmps
mov
fs
push
(bad)
adc
cmp
sar
data16
cmp
sub
outs
adc
pop
retf
xor
mov
dec
addr16
fnsave
sub
ins
retfw
out
mov
loope
repz
pop
mov
xchg
std
inc
mov
xor
ror
jmp
stos
inc
add
mov
add
inc
jnp
xchg
das
xor
mov
aas
jne
or
jbe
test
jg
cld
clc
cs
mov
aaa
jbe
cld
shr
add
cdq
data16
outs
cmp
lock
les
xor
rol
outs
dec
push
imul
xor
cld
les
sti
lahf
cmps
(bad)
mov
pop
mov
and
and
ins
jne
mov
cdq
pop
cmc
das
push
retf
push
test
mov
mov
xchg
ret
daa
mov
and
xchg
scas
dec
ret
(bad)
jne
cmp
sbb
jmp
fist
push
cmp
push
idiv
mov
das
push
pusha
gs
movs
fnstsw
aam
dec
sbb
and
adc
push
pop
push
mov
aad
sahf
aas
pop
fldenv
call
xchg
mov
icebp
rol
cmc
mov
dec
retf
shl
jl
call
mov
(bad)
int
mov
in
sbb
stos
mov
mov
inc
jl
nop
pop
cmp
shl
cmp
sti
sbb
xor
ja
cmp
stos
or
mov
sub
sub
jle
push
in
retf
dec
add
stos
imul
lahf
mov
push
repnz
xor
rcl
inc
add
jo
adc
outs
inc
call
movs
xchg
repnz
push
dec
sar
daa
dec
xor
ds
add
mov
dec
lds
or
test
std
mov
ins
shl
dec
leave
or
push
lods
jp
retf
mov
test
outs
jb
jns
lock
popf
sar
dec
iret
mov
mov
sbb
movs
push
rcr
sub
mov
inc
lods
int
call
fs
mov
sub
retf
and
repz
adc
mov
sbb
cwde
sbb
test
xchg
fwait
sbb
inc
dec
pusha
pop
sub
inc
adc
out
jne
push
adc
sahf
cmps
imul
ret
and
out
int3
sub
cmps
dec
sub
push
add
(bad)
lea
loopne
mov
out
idiv
stc
out
std
or
add
(bad)
retf
xchg
movs
xor
icebp
imul
mov
out
inc
inc
add
mov
stos
cmp
aas
add
fsubrp
push
cmp
cld
mov
jmp
fnstenv
repz
test
neg
mov
mov
pop
xor
adc
push
inc
(bad)
cmc
push
add
dec
dec
sbb
dec
cmp
sbb
xchg
in
push
(bad)
mov
repnz
xchg
(bad)
out
imul
hlt
push
repz
jb
std
test
shl
sbb
cld
sar
sbb
mov
fstcw
mov
pop
(bad)
inc
repnz
jl
mov
dec
lods
adc
es
xchg
test
nop
push
cld
into
sbb
in
not
cmp
xor
out
jb
mov
jmp
ja
(bad)
call
outs
or
ror
pop
dec
daa
pop
mov
iret
aam
enter
shl
aaa
xchg
shl
cmp
push
movs
mov
jmp
cld
ins
cmp
cs
push
jle
cmps
ret
sub
call
and
mov
or
scas
ret
aad
push
in
jmp
cmp
lods
repnz
xchg
cld
add
popa
jp
ja
cli
mov
push
fwait
push
stos
in
rol
jg
adc
and
mov
xor
fbld
pushf
test
test
mov
lahf
xchg
inc
push
dec
dec
push
(bad)
mov
mov
mov
mov
xchg
jmp
xor
push
shl
push
adc
aam
mov
cmp
cmc
repnz
add
mov
pop
pop
jle
fcomp
imul
mov
inc
shr
gs
or
and
and
inc
(bad)
loope
les
or
pop
jl
pop
je
lds
pop
push
icebp
test
push
xchg
xor
into
fidiv
push
dec
pop
xchg
(bad)
or
mov
lods
push
sbb
cs
pop
jg
push
nop
jns
add
sub
mov
jge
ret
imul
data16
mov
jge
mov
fwait
pop
inc
mov
mov
je
in
mov
sbb
pop
xchg
add
inc
lock
or
sbb
fld
test
ret
arpl
inc
or
adc
fisub
pop
push
add
inc
into
(bad)
add
and
mov
call
dec
sbb
call
stos
dec
scas
xor
mov
jae
std
and
mov
fistp
mov
fwait
enter
cmp
cmp
cdq
mov
jo
xchg
(bad)
movs
adc
ins
mov
pushf
or
in
loop
lods
into
mov
push
std
inc
idiv
and
and
mov
cmp
aas
or
cmps
(bad)
jp
lock
cmp
and
mov
loopne
out
(bad)
push
jnp
inc
pop
pop
or
pop
call
dec
stos
stos
fwait
scas
dec
dec
out
cmp
inc
ficom
xchg
xchg
lahf
push
and
push
add
fcmovu
sbb
popf
fcomp
ds
lods
push
xor
in
call
jno
fucomi
(bad)
pop
cmps
cmp
push
inc
fnstenv
leave
mov
or
add
test
cmc
sbb
push
in
cmp
jl
popf
(bad)
or
inc
movs
test
dec
ficomp
sub
pop
pop
sbb
imul
iret
inc
aad
sub
sbb
cs
repz
inc
jp
cli
pop
xor
mov
cmps
cmp
mul
jmp
xchg
mov
xchg
xchg
add
lods
pop
jns
js
adc
push
std
sar
jnp
(bad)
pop
(bad)
nop
rcr
std
add
mov
retf
addr16
and
pop
test
popa
jg
rol
cdq
lds
test
jno
outs
lds
pop
sbb
addr16
enter
push
mov
mov
pop
mov
movs
loope
scas
stos
xchg
dec
dec
mov
sysenter
xor
mov
div
test
pop
fsubrp
loop
push
push
xchg
call
push
mov
xchg
mov
out
imul
fdivr
retf
sub
lods
pop
pop
cmps
cmps
cmps
dec
imul
shl
push
xchg
stos
test
cdq
mov
or
enter
jle
cmc
add
jnp
test
xor
fsubrp
pop
out
addr16
and
repz
int
jge
sbb
adc
adc
dec
shl
jge
add
ret
jecxz
add
cld
rcl
out
push
pop
xor
dec
mov
in
dec
rol
inc
cs
in
pushf
push
ss
cmp
movs
adc
add
xor
mov
mov
ret
(bad)
data16
ror
mov
jne
sub
push
mov
lahf
scas
and
sub
loop
mov
jmp
pop
xor
aam
add
mov
add
fs
(bad)
idiv
sbb
xchg
or
popa
add
lods
cmp
jbe
mov
push
int3
jmp
mov
sar
mov
add
dec
and
out
pop
dec
cmc
(bad)
sti
push
inc
cmc
inc
sti
add
stos
daa
test
mov
lods
jnp
or
xor
cdq
xchg
ret
mov
jmp
and
cld
aaa
inc
mov
outs
dec
js
sub
pop
jae
test
test
sbb
jb
test
in
out
pop
test
das
cld
imul
les
sub
dec
in
mov
cmp
jge
and
mov
cs
cmp
sbb
mov
push
test
push
cmp
test
sbb
stos
mov
xor
aaa
gs
cli
fld
jne
mov
dec
sti
mov
xor
in
jmp
int
add
out
jmp
push
or
push
stc
add
daa
pslld
cld
mov
(bad)
(bad)
popa
xchg
push
mov
jae
hlt
pop
push
mov
enter
pop
xchg
dec
mov
(bad)
push
jecxz
and
sub
and
mov
mov
out
mov
sub
pushf
icebp
adc
cmp
cmp
(bad)
in
loopne
and
xor
xchg
call
mov
jo
mov
xchg
mov
xor
jb
repnz
dec
inc
cmp
ret
jo
(bad)
psraw
fist
xor
call
adc
mov
or
js
leave
bound
dec
xchg
out
xor
daa
mov
inc
(bad)
hlt
or
jp
inc
je
ret
repnz
ret
and
sbb
scas
pushf
jge
shr
sub
scas
and
je
ret
in
loop
sub
out
mov
push
adc
xchg
lock
movs
mov
lock
and
and
rcr
pop
mov
cmp
inc
inc
dec
mov
sub
mov
int3
add
(bad)
leave
cmp
adc
addr16
push
sub
aad
daa
jg
sub
dec
inc
jo
xor
repnz
retf
popa
pusha
xor
add
pop
dec
dec
out
adc
sbb
pop
or
cmp
pop
(bad)
shl
ficom
pop
adc
cli
mov
dec
inc
pop
mov
cld
sub
les
sbb
outs
inc
adc
jnp
jl
or
out
xchg
mov
and
pop
jae
int3
mov
fcom
(bad)
arpl
xchg
scas
shr
fmul
stos
jne
(bad)
push
sub
(bad)
(bad)
mov
push
jae
sbb
data16
push
cwde
pop
mov
call
call
add
push
jnp
popf
mov
sar
dec
sub
ins
xor
fsubr
repz
mov
add
mov
stc
sub
or
jns
mov
in
xchg
add
dec
sbb
or
ins
test
cmp
sahf
add
pop
jp
mov
in
add
inc
xchg
nop
adc
cmp
pop
es
mov
jge
xlat
push
leave
div
mov
cmp
aaa
cld
imul
and
cld
sbb
outs
cmp
cwde
adc
xchg
or
test
or
aam
enter
ja
mov
bound
js
jmp
adc
dec
cs
outs
sub
(bad)
sar
(bad)
push
pop
in
inc
jge
push
inc
mov
xchg
pop
sbb
scas
and
repz
(bad)
sub
(bad)
(bad)
clc
js
cwde
test
and
add
test
xchg
fmul
push
jmp
mov
aas
outs
aaa
xor
in
cwde
jbe
dec
fld
push
fs
jnp
jecxz
int3
add
sbb
jmp
scas
sti
pop
ds
xchg
mov
sbb
les
push
loope
xchg
test
sbb
mov
inc
pop
pop
mov
leave
jno
mov
fiadd
jnp
(bad)
adc
cmp
mov
ins
add
je
cs
pushf
sti
and
xor
push
ror
jmp
ins
(bad)
push
out
pop
shr
shl
sbb
scas
inc
sti
outs
add
xchg
loop
gs
inc
sbb
push
xor
pop
loope
in
mov
test
int
fs
rol
push
das
xor
cmp
popa
lods
inc
ins
fist
pop
(bad)
mov
mov
xlat
ret
scas
leave
and
mul
add
jae
es
and
inc
and
cli
cwde
inc
push
retf
or
dec
xor
adc
add
test
mov
pop
pop
inc
popa
jmp
leave
adc
les
sar
loop
ror
sbb
ss
sahf
cmps
inc
ja
fld
mov
lea
fsubr
jg
jmp
push
jmp
out
out
xchg
inc
mov
retf
adc
and
rcl
loope
and
shr
mov
(bad)
dec
movs
or
rcr
neg
inc
mov
out
and
out
xchg
ja
jae
mov
cmps
mov
fadd
pop
dec
sbb
and
lods
inc
dec
xchg
sar
call
cdq
lahf
pusha
mov
jo
dec
clc
cmp
lock
into
dec
add
js
jns
test
mul
loope
mov
dec
jae
add
adc
out
movs
sar
inc
mov
lods
push
jle
daa
xor
ja
mov
fcomp
fisttp
(bad)
sbb
jp
ficomp
inc
scas
jecxz
retf
test
mul
inc
inc
call
and
repnz
xchg
mov
cld
jmp
in
std
sub
pop
jo
sbb
int
xor
fdivr
hlt
outs
dec
and
pop
inc
mov
jo
cdq
cmc
outs
xchg
xor
out
pusha
data16
cmc
sti
lods
fnstsw
dec
jno
lea
sti
scas
and
outs
retf
or
jecxz
out
push
les
enter
dec
sbb
fistp
xchg
retf
mov
pop
push
data16
cmp
repnz
scas
lds
outs
cmp
ss
je
sbb
add
hlt
lock
popa
mov
mov
fs
cmps
mov
cmp
pop
or
mov
pop
mov
pop
sub
div
push
out
repnz
in
pusha
jb
pop
sub
dec
pop
ret
and
fcom
ss
jo
inc
sub
xor
(bad)
imul
xchg
pushf
sub
add
add
push
mov
inc
fisttp
je
fldln2
test
(bad)
xchg
mov
mov
or
mov
sbb
mov
loop
imul
inc
mov
repnz
loopne
rcl
fisttp
and
add
shr
inc
jnp
test
loope
or
dec
push
pop
test
jg
dec
enter
sti
in
ficomp
or
pusha
sbb
dec
cld
daa
xor
jns
mov
addr16
in
call
fs
sbb
or
lods
arpl
fild
mov
jnp
add
sub
xchg
sbb
mov
cmp
dec
adc
cs
add
call
ret
mov
ds
popa
add
fs
pushf
popf
sub
hlt
mov
xchg
mov
fcomp
mov
mov
stos
rol
fist
cld
jl
adc
loopne
pop
scas
lods
or
sbb
and
pop
out
push
aad
scas
cmps
sub
test
mov
ins
(bad)
mov
enter
xor
mov
mov
adc
loope
int3
fcom
imul
pop
stos
cmp
cmp
test
mov
push
popa
xor
sbb
sub
gs
cmps
addr16
out
hlt
push
nop
pmovmskb
cmp
sar
add
mov
push
or
or
mov
pushf
mov
sbb
mov
cld
out
cmp
push
push
fadd
sti
dec
lds
not
ins
jne
push
pop
out
out
retf
mov
adc
sbb
daa
cvtps2pd
inc
lods
inc
in
push
loope
loopne
xchg
lea
xor
jnp
and
jne
(bad)
cmp
xchg
xlat
push
push
lea
jns
pop
adc
ds
pop
sbb
std
pop
(bad)
int
sar
retf
popa
dec
movs
test
sub
cmp
in
out
sub
mov
sub
cmp
test
xor
vandpd
jecxz
sub
push
mov
sbb
in
mov
das
(bad)
out
inc
hlt
xchg
repz
cdq
mov
inc
or
xor
cmp
xor
stos
sti
ins
cmc
pop
sub
aad
rcl
in
xlat
mov
pop
rol
jnp
jnp
inc
jbe
fcmovnbe
mov
sti
mov
mov
mov
mov
rcl
jmp
xor
enter
cmp
jno
xor
idiv
popf
into
es
outs
xor
data16
sub
cld
scas
jmp
repnz
adc
pop
popa
mov
cdq
das
or
popf
addr16
or
ins
imul
xor
pop
add
mov
jp
gs
sub
jmp
adc
loope
imul
in
cmc
inc
sbb
pop
out
lock
cmp
mov
in
rcl
imul
mov
fidiv
outs
pop
(bad)
mov
mov
and
aam
sub
mov
dec
add
add
xor
out
add
dec
cld
aas
dec
out
pop
aaa
popf
(bad)
jmp
imul
jno
xchg
(bad)
push
nop
or
aam
mov
dec
inc
(bad)
stc
ffreep
das
add
mov
repnz
dec
loop
mov
or
cmp
aaa
sahf
inc
mov
inc
call
cmp
in
div
out
fbstp
stos
inc
ds
jbe
and
scas
push
ds
in
xor
lock
fidiv
out
outs
push
inc
ret
cwde
and
test
cld
(bad)
mov
mov
jecxz
mov
addr16
shl
push
jae
mov
cwde
xor
mov
cmp
jnp
jmp
outs
cmc
jae
outs
sbb
sub
xor
aad
jecxz
dec
stos
in
outs
shr
jb
mov
jmp
jnp
arpl
adc
xor
and
mov
sub
fild
ret
aad
jmp
xchg
(bad)
popf
adc
pcmpgtb
lea
sub
int3
sub
loopne
mov
cld
and
xchg
repz
cmp
sbb
fucomi
or
or
pop
lods
sbb
mov
mov
ins
adc
imul
(bad)
jno
sbb
mov
ja
adc
add
shl
adc
push
in
jbe
fstp
scas
mov
out
mov
mul
push
xor
pop
and
ja
retf
cld
pushf
rcl
lds
popa
sbb
out
jb
or
mov
loopne
mov
cmp
lds
mov
int3
push
xor
ins
mov
push
stos
ds
in
push
repnz
fld
sar
add
ror
and
pop
and
ret
out
and
add
xlat
shl
sti
or
xchg
mov
xor
lods
xor
mov
movs
call
mov
and
dec
fs
sub
adc
outs
cmp
jp
data16
test
mov
cmp
lds
add
into
retf
cs
cmp
add
sub
push
cmp
int3
dec
xchg
dec
(bad)
jne
std
cmp
test
test
adc
pop
add
jb
push
jle
xor
(bad)
cld
fist
and
and
cmp
call
add
add
xchg
out
fld
ja
lahf
arpl
jbe
mov
sbb
inc
pop
in
jmp
xchg
popa
and
dec
addr16
push
inc
fisttp
cmp
iret
bextr
add
jmp
dec
neg
pop
scas
cmp
(bad)
xlat
push
inc
fdiv
jno
rol
(bad)
and
jae
imul
push
out
push
mov
mov
cwde
sahf
mov
adc
mov
xchg
add
pop
shl
dec
xlat
iret
xlat
dec
je
adc
push
xchg
ins
dec
mov
rcr
inc
xor
mov
and
sub
mov
test
pop
xlat
xor
aaa
(bad)
mov
lock
mov
out
addr16
sbb
xchg
sbb
mov
push
mov
rcr
fisubr
push
rol
mov
scas
mov
test
add
cmps
push
ret
stc
mov
ror
dec
cmp
in
sbb
xor
mov
iret
fwait
js
jl
mov
dec
push
or
mov
adc
cmc
es
sub
stc
xor
pop
xchg
mov
es
call
mov
adc
jg
lea
es
aas
mov
sbb
loopne
xor
mov
xor
cmp
pop
inc
xchg
pop
ret
test
sbb
out
int
inc
jge
std
pusha
inc
mul
sbb
cmp
xor
loopne
xor
add
push
pop
fwait
mov
push
in
sub
mov
fist
scas
int
add
repnz
xor
iret
scas
call
dec
test
in
sbb
popa
mov
mov
jmp
in
ret
les
scas
gs
pop
push
mov
fistp
jno
inc
retf
and
mov
sub
jbe
dec
dec
fild
adc
pop
push
fdiv
pop
dec
adc
dec
jns
in
iret
pop
add
cmps
adc
sub
mov
out
push
push
sbb
dec
jo
xlat
mov
popf
into
call
mov
inc
xor
sti
xchg
(bad)
mov
shl
push
repz
pushf
sti
jae
jns
fcomi
fst
or
out
fwait
pop
mov
les
xchg
bnd
pop
inc
repz
push
or
cld
sub
call
or
leave
pop
sti
jmp
cmp
les
pop
push
repz
neg
lahf
clc
sahf
mov
xchg
pop
stos
int3
jl
push
xlat
push
(bad)
into
jl
jne
(bad)
jmp
js
popa
out
inc
call
push
jp
mov
inc
and
push
test
jo
imul
fs
xchg
mov
and
sbb
repz
and
jge
repz
inc
jecxz
imul
push
push
stos
or
sub
ret
outs
popa
aad
mov
mov
sub
cwde
loopne
dec
int3
pop
scas
shl
jmp
mul
sbb
pushf
dec
leave
idiv
pop
mov
xchg
inc
mov
mov
mov
popa
push
push
mov
and
stos
idiv
push
xchg
push
jb
dec
inc
lock
jmp
dec
mov
xor
and
loop
neg
mov
push
add
add
cs
mov
ja
int3
add
jb
cwde
jae
and
ins
sar
push
and
jo
repz
xchg
sub
(bad)
xor
pop
sub
mov
stc
pop
dec
lea
mov
fwait
stos
pop
fwait
push
dec
std
sbb
pop
cmp
push
sbb
je
fwait
adc
adc
inc
dec
in
in
stos
in
sar
jnp
or
jmp
int
jne
fadd
inc
sbb
mov
sbb
sahf
pop
mov
sub
inc
imul
xabort
(bad)
and
fistp
jo
in
inc
aas
fwait
adc
nop
shr
push
movs
jbe
inc
add
and
test
sub
loop
adc
inc
and
jo
mov
ins
in
push
inc
fcom
popa
dec
aas
(bad)
loopne
sub
loop
dec
(bad)
jl
xchg
into
js
adc
mov
sbb
pop
xor
leave
pop
dec
in
pop
add
cmp
mov
add
gs
mov
adc
mov
jne
aad
jns
mov
mov
adc
or
cmc
cmp
jecxz
repnz
cs
and
enter
(bad)
pop
jae
ror
and
stos
jp
mov
mov
xchg
fadd
arpl
mov
ins
adc
imul
loop
mov
or
push
scas
leave
and
int
aaa
pop
xchg
mov
xor
xor
inc
cmp
fwait
inc
scas
dec
xchg
jl
(bad)
lock
mov
inc
ret
pop
ret
cdq
xchg
mov
add
fsub
dec
sbb
clc
jmp
int
mov
out
(bad)
xor
jb
or
sub
sbb
dec
imul
in
xchg
sub
dec
call
xor
ret
dec
pop
mov
lock
loop
pop
add
loopne
cmp
lds
mov
dec
(bad)
xor
xsaveopt
cmc
fwait
sahf
xchg
test
mov
cmovb
fucom
mov
xor
jmp
sub
fwait
test
inc
pop
pop
in
cmp
add
or
(bad)
pop
(bad)
fwait
lock
pushf
pushf
adc
cmp
inc
xor
mov
aaa
jno
dec
xchg
imul
sub
mov
and
pop
sbb
int3
pop
or
scas
or
xor
inc
retf
adc
scas
mov
jmp
and
mov
lds
xor
int
retf
pushf
loop
pop
cmp
imul
xchg
xlat
mov
dec
mul
dec
cdq
cmp
cmp
push
int
or
dec
dec
mov
outs
jae
jbe
adc
icebp
es
mov
in
fiadd
or
neg
lock
cmps
cmps
push
pop
lods
rcr
stos
nop
pop
mov
xor
or
mov
cmovge
cli
out
xchg
jmp
cld
daa
add
jae
xchg
test
mov
xor
adc
enter
mov
xchg
mov
retf
mov
mov
xchg
mov
neg
sub
cmps
cvtps2pi
dec
jge
rcl
jle
aas
pop
fisubr
add
in
xchg
xchg
push
test
jp
pop
ret
in
scas
or
mov
xchg
sub
jmp
(bad)
mov
sti
outs
mov
push
sbb
test
in
mov
cld
sub
sbb
jecxz
enter
mov
and
lea
aam
inc
jno
push
and
fsub
add
loop
add
sbb
xchg
lods
cmp
cmp
cdq
mov
mov
add
jo
xchg
clc
dec
xor
rol
into
leave
adc
int
fbstp
jno
in
mov
sar
mov
pop
pushf
loop
cli
test
outs
pop
pcmpgtd
sub
xor
cmp
(bad)
jmp
icebp
xchg
xchg
test
ficom
pop
jo
mov
punpckhbw
xchg
sbb
or
call
clc
bound
lea
pop
lods
and
loope
adc
jg
fdivr
sbb
push
std
sub
loope
mov
rcl
pop
mov
sahf
shr
aad
adc
push
(bad)
mov
ror
push
out
int3
dec
loopne
aas
addr16
mov
push
cmps
in
in
jne
mov
adc
cmps
daa
push
popa
push
pop
imul
int3
and
inc
adc
jnp
in
pop
inc
sub
adc
lods
aaa
inc
(bad)
out
mov
in
cdq
and
sar
clc
mov
dec
pop
jbe
mov
inc
mov
push
outs
jne
hlt
or
xor
fwait
dec
mov
jmp
sub
xor
in
mov
add
lds
wbinvd
push
pop
stos
out
cmp
aaa
int
lods
push
and
mov
out
call
shr
pop
scas
lods
loop
xor
jb
inc
cmp
pop
mov
ins
inc
jmp
les
xchg
pop
cmp
add
jne
and
xchg
test
xor
pushf
xor
adc
adc
test
cdq
pusha
shl
mov
push
and
dec
pop
ret
mov
scas
pop
xor
(bad)
push
dec
jae
fld
outs
push
mov
adc
outs
mov
xchg
bound
jge
scas
sbb
jge
(bad)
dec
xchg
xor
sar
shr
add
xchg
dec
or
push
ja
(bad)
loop
mov
jbe
mov
add
cmp
jl
mov
xor
cld
(bad)
jl
out
sbb
mov
mov
jl
enter
sbb
push
sbb
mov
and
mov
or
cwde
neg
fmul
jns
jne
pop
(bad)
test
aas
or
xor
push
pop
iret
out
jg
mov
(bad)
jg
jg
xchg
adc
jne
and
pop
adc
dec
popa
call
fdivr
int3
inc
(bad)
js
fidiv
mov
mov
adc
lds
sub
(bad)
push
mov
hlt
fidivr
aad
push
dec
cmp
out
repnz
mov
sub
add
outs
mov
push
mov
rcr
retf
and
adc
stos
sbb
sbb
dec
outs
enter
push
mov
pop
idiv
jns
mov
cmc
cmc
out
pop
jns
mov
mov
inc
outs
xchg
in
adc
mov
shl
fcom
mov
mov
sbb
jecxz
dec
aas
(bad)
into
repnz
jp
adc
leave
add
in
(bad)
jmp
sub
sub
jns
fcom
and
fwait
out
jae
sub
mov
cs
dec
and
push
cdq
loope
push
xchg
or
test
lds
sbb
lods
sub
test
fimul
push
mov
icebp
fs
add
icebp
or
sbb
or
mov
jnp
call
ret
and
mov
dec
pop
mov
and
(bad)
retf
stos
and
mov
xchg
addr16
data16
xchg
push
xor
(bad)
mov
fldenv
push
(bad)
(bad)
cmps
pop
test
and
pop
enter
in
push
mov
es
ja
push
das
cdq
sub
pfcmpeq
(bad)
cmps
push
rcl
fild
stos
pushf
movs
sbb
push
cmps
loop
ss
jmp
sti
and
lahf
push
in
mov
nop
in
not
sbb
stos
into
jg
sar
cmps
fbstp
cmp
xchg
shl
pop
iret
and
cdq
adc
pop
enter
add
push
mov
push
mov
adc
cmc
sub
pop
mov
icebp
add
lods
mov
nop
cs
jns
bound
xor
or
mov
pop
pop
int3
xlat
jo
movs
rcl
dec
mov
shl
lods
out
xchg
test
(bad)
jg
faddp
call
in
neg
xor
ror
sbb
or
dec
push
mov
mov
fild
cmp
or
jae
dec
push
pop
fdivrp
in
out
dec
(bad)
pop
ins
leave
pop
lods
push
fisttp
cmp
pop
mov
xor
popf
popa
out
push
nop
ds
dec
aad
add
fs
scas
ficomp
sub
sub
retf
pop
sar
dec
and
xchg
xor
push
data16
ins
fdivrp
jne
loop
mov
xor
int3
mov
arpl
in
cmc
pop
mov
add
jno
dec
test
mov
int3
jecxz
shl
aad
cwde
dec
mov
mov
inc
push
sub
mov
xor
outs
inc
push
into
dec
and
not
loop
sbb
out
cmp
push
mov
push
mov
xchg
imul
pop
stos
adc
jo
cmc
add
mov
mov
jnp
ret
clc
mov
mov
mov
lock
cmp
inc
stos
mov
add
mov
js
push
dec
inc
sti
lock
pushf
fcomp
jo
xor
retf
shr
pop
mov
sbb
jne
call
aas
fsub
imul
sar
pop
not
jns
mov
mov
inc
mov
inc
and
fiadd
loopne
ins
xor
inc
movs
add
xor
stc
xor
scas
and
(bad)
popa
jmp
push
add
mov
ret
ds
pop
or
jp
adc
repz
xchg
jecxz
sbb
dec
pop
xchg
mov
or
push
call
jnp
inc
std
pushf
sub
cwde
jno
lock
xor
pushf
or
push
jnp
in
mov
jne
mov
call
je
inc
or
and
push
call
push
aam
mov
xor
loop
(bad)
and
cmp
lods
push
data16
jb
jg
mov
dec
sub
cmps
adc
bound
and
cmp
retf
jnp
loopne
sub
fdiv
xor
iret
aas
test
sub
fwait
test
push
imul
gs
xor
jnp
lahf
xor
test
cld
mov
mov
sub
sbb
pop
addr16
sbb
add
push
and
fs
mov
fwait
or
pop
les
inc
jbe
shl
and
push
jnp
(bad)
jns
jle
fs
or
mov
fidiv
ins
cbw
xchg
mov
sbb
dec
mov
fwait
mov
push
jb
jge
call
adc
cld
pop
push
shl
pop
xor
sti
jle
mov
dec
cmps
sbb
or
jnp
dec
add
scas
nop
fst
sub
cmps
into
jo
dec
loopne
sbb
sbb
scas
pop
or
dec
adc
movs
rcr
into
fninit
rcr
repnz
xor
ins
ret
cmc
dec
lods
shl
and
jle
div
jb
push
cmp
call
mov
(bad)
shl
in
adc
xchg
adc
push
arpl
clc
adc
xor
adc
xor
xlat
fdiv
jnp
inc
inc
movs
xchg
jnp
leave
pmulhw
dec
loope
xor
push
mov
daa
cli
xor
(bad)
test
push
fxch
mov
inc
dec
out
adc
aam
cmc
jae
ins
in
fucomi
cmc
test
mov
sbb
arpl
imul
out
jp
mov
mov
jo
fstp
inc
xchg
scas
ins
cli
(bad)
ins
jge
xchg
cs
mov
xchg
fstp
mov
push
retf
popf
and
cmp
sbb
out
retf
in
in
pop
inc
fs
or
and
jg
cmp
test
dec
sbb
nop
arpl
dec
iret
xchg
repnz
inc
movs
shr
dec
jns
imul
sbb
pop
test
mov
popa
inc
jmp
aas
mov
test
mov
cmp
push
dec
(bad)
ins
in
movs
dec
inc
es
(bad)
call
push
push
push
mov
add
das
mov
into
mov
cmp
xchg
mov
ins
lahf
arpl
add
addr16
sub
jae
add
push
jne
mov
aam
xchg
clc
pop
pop
xchg
loop
cmps
xchg
fdivrp
fiadd
adc
jnp
imul
(bad)
jge
adc
jne
aad
rcl
inc
mov
nop
inc
loope
fild
mov
pop
dec
add
cmp
inc
add
test
pop
scas
cmps
shl
in
cmp
adc
aam
out
cmp
xor
and
add
jp
loope
adc
out
pop
xchg
bound
cmp
mov
push
jbe
rol
sub
and
mov
sti
imul
sub
pop
adc
push
mov
pusha
int3
dec
jg
cmc
jb
pop
push
inc
jbe
cmp
lock
cmp
mov
dec
popf
fdivrp
or
jae
mov
rol
xchg
int
and
mov
xor
popf
adc
fs
aam
repnz
enter
rcr
jo
test
fnstenv
shl
outs
cmp
in
xor
push
sub
add
lea
mov
xchg
cld
test
jne
cmp
pop
and
adc
jg
jns
xchg
or
mov
cmp
xor
xchg
out
icebp
dec
sub
movs
jmp
jo
das
imul
mov
rol
mov
(bad)
jmp
dec
(bad)
jg
adc
retf
es
in
aam
sbb
and
pop
sbb
inc
ret
xchg
jbe
push
adc
mov
in
add
pop
ds
sub
or
xor
or
pop
inc
adc
daa
cdq
or
sbb
dec
ds
aas
cs
js
sub
xor
ret
xlat
shl
mov
in
add
fs
jb
add
rcr
(bad)
popf
das
call
inc
lock
ja
cmc
out
jnp
scas
cmc
test
xchg
jbe
aaa
in
retf
call
sar
out
push
aad
adc
arpl
ins
push
(bad)
les
xchg
lods
cli
mov
cmps
(bad)
popa
and
(bad)
push
adc
mov
or
lds
psrlw
add
ins
mov
lods
push
out
lds
pop
callw
and
adc
outs
loopne
mov
mov
xor
mov
pop
loop
xchg
in
rcl
les
inc
mov
pop
push
or
lds
mov
cmps
dec
into
xchg
int3
push
repnz
pop
mov
sbb
mov
xchg
xchg
cmp
pop
push
pop
imul
scas
mov
dec
mov
xor
adc
outs
arpl
pop
ret
push
sub
jmp
scas
push
cmp
jb
add
iret
xor
aaa
bound
or
sbb
mov
mov
mov
or
pop
fisttp
ins
add
(bad)
ins
sahf
aas
mov
or
(bad)
js
adc
cmp
(bad)
popa
rcl
inc
adc
pop
add
pusha
mov
mov
xor
out
add
sbb
mov
mov
sub
xchg
lock
ja
sub
adc
pop
push
cwde
mov
test
dec
mov
jecxz
retw
jmp
arpl
or
dec
mov
test
movlps
clc
xor
pop
inc
popf
or
sbb
stos
sbb
push
inc
in
dec
xor
ss
ins
jmp
popa
sbb
dec
fild
adc
push
and
test
pop
dec
mov
fcom
popa
rol
jmp
mov
sbb
xlat
mov
mov
push
push
repnz
adc
(bad)
xchg
inc
clc
pop
cmp
adc
clc
jg
int
or
jne
sbb
stc
xchg
call
das
in
push
mov
aad
dec
sub
ficomp
outs
inc
repz
rol
or
mov
mov
adc
ror
or
lea
inc
adc
pop
and
jnp
ds
pop
stos
(bad)
rcr
pop
add
xor
std
sbb
mov
das
xor
or
mov
(bad)
into
cli
sbb
stos
mov
dec
fs
jae
push
jle
push
push
scas
mov
pop
(bad)
mov
push
aaa
sub
pop
adc
inc
xor
scas
dec
mov
inc
call
push
mov
out
cmp
movs
and
mov
cmp
mov
lea
test
lahf
adc
sti
hlt
sahf
mov
test
nop
(bad)
imul
fisttp
outs
ins
jmp
push
mov
lds
jb
cli
lods
movs
lock
dec
jp
mov
or
cmp
fwait
mov
data16
jae
and
mov
sub
xchg
jmp
cmp
inc
bound
mov
mov
out
jge
shl
or
dec
ins
xchg
push
aad
jmp
mov
jg
ins
cs
arpl
mov
push
pop
cmp
push
ins
dec
fwait
les
movs
sub
std
xlat
mov
add
or
imul
dec
fcom
imul
mov
(bad)
nop
fsub
das
mov
int3
popf
xchg
aam
adc
and
adc
test
xchg
popa
fs
(bad)
imul
mov
hlt
inc
xchg
cwde
mov
(bad)
mov
or
rol
pop
and
jl
cmc
mov
cmps
into
fisttp
je
or
xchg
popa
cmp
xor
mov
scas
neg
aas
fbld
(bad)
sar
loop
lods
hlt
mov
jbe
jae
or
cmp
ins
sahf
pop
jo
imul
sub
out
stos
jo
(bad)
sub
xchg
mov
push
inc
adc
mov
shr
mov
dec
es
push
add
sub
(bad)
adc
dec
ror
mov
(bad)
push
mov
iret
out
fwait
mov
mov
(bad)
stc
scas
stc
rol
sbb
in
xor
push
out
test
stos
out
inc
mov
daa
jcxz
sbb
rcl
xchg
fcmovne
lock
xor
mov
call
rcl
pop
push
outs
enter
push
(bad)
stos
push
je
aad
dec
fld
xchg
in
cmp
pop
add
popa
cmp
hlt
repnz
lods
loop
pop
repnz
es
lea
xlat
lahf
mov
jnp
push
pop
push
outs
pop
pop
mov
pop
mov
push
xlat
sub
popf
sub
mov
push
sub
out
pop
je
mov
jns
sbb
test
cmp
mov
enter
fldenv
repnz
jl
or
cwde
hlt
in
push
mov
jge
mov
mov
cmc
pop
(bad)
dec
push
fcmovbe
mov
sbb
das
into
xchg
jae
adc
call
fdiv
or
stc
cmp
test
or
jns
aam
arpl
mov
scas
push
pop
push
jmp
cmps
xchg
add
popf
sub
movs
jae
inc
mov
mov
in
mov
push
jmp
arpl
jl
sbb
std
test
mov
(bad)
mov
jb
or
pop
in
ror
mov
xchg
mov
in
lods
push
inc
add
and
daa
shl
ds
lea
cwde
pop
sub
dec
jnp
cmps
adc
sti
cmp
sub
inc
xchg
sub
je
pop
mov
sub
inc
cmps
outs
pop
adc
mov
sub
and
popa
jmp
mov
pop
mov
xchg
test
leave
icebp
pop
xor
dec
pop
add
cmps
loope
pop
and
add
push
push
sti
push
outs
pop
fwait
jns
dec
seto
scas
loope
mov
int3
out
mov
les
aaa
mov
or
sbb
mov
jae
xchg
jbe
mov
in
jmp
dec
cmp
call
jle
xchg
jle
push
xor
cmp
repnz
or
or
xchg
adc
movs
mov
repz
outs
add
(bad)
and
sbb
lea
sbb
lods
addr16
xchg
int3
mov
sbb
push
mov
cmp
push
mov
jle
vpacksswb
inc
int3
loopne
add
cmp
imul
push
cmp
arpl
(bad)
cs
shl
in
adc
outs
(bad)
(bad)
mov
xchg
jg
popf
icebp
and
fcom
push
pop
xchg
cwde
adc
iret
xor
adc
sub
movs
jbe
mov
and
add
add
pop
sbb
lods
cli
mov
dec
lea
xchg
xchg
test
fwait
or
cmp
mov
push
cmp
adc
push
test
retf
push
scas
mov
inc
xor
mov
add
pop
dec
sub
shl
jno
sbb
(bad)
pop
sbb
stc
pusha
sbb
jl
pop
sbb
adc
cmp
cmp
jae
pop
xchg
inc
pusha
bnd
fcmovu
dec
inc
aad
aad
data16
mov
in
push
loopne
cwde
int3
repnz
push
mov
jge
cmp
ror
pop
cdq
or
jge
mov
cmp
xor
dec
gs
popf
stos
mov
pop
inc
cmp
cmp
cmp
pop
ret
(bad)
iret
dec
inc
cmp
div
xor
arpl
or
sub
nop
sbb
jl
lock
inc
pop
dec
jl
bnd
stos
mov
call
cmp
ins
push
retf
jecxz
inc
jmp
xchg
jo
sahf
jle
mov
push
fidiv
jb
ret
and
jb
push
xchg
aas
or
push
jbe
bound
test
mov
sub
push
out
xor
pushf
add
sub
add
cmps
push
stos
push
dec
inc
test
xor
aas
mov
rol
push
and
pop
xchg
imul
in
mov
mov
sahf
or
jge
(bad)
jle
xchg
nop
(bad)
jp
sub
add
xchg
into
aas
jae
stc
shl
pop
leavew
and
cli
ins
loop
rcr
xor
adc
mov
xchg
cmp
dec
dec
cmp
jmp
fst
or
and
dec
(bad)
enter
jecxz
inc
mov
push
aam
xor
jnp
xchg
leave
in
lds
call
cmc
ret
sbb
add
pop
scas
pop
sbb
(bad)
clc
dec
int3
sub
jb
sbb
aam
outs
pop
sbb
jne
mov
inc
xchg
and
mov
push
ins
or
push
mov
retf
pop
mov
sbb
xor
sub
sub
test
rcr
cmp
in
(bad)
sub
lods
lods
mov
add
retf
loope
add
jne
(bad)
push
and
mov
sub
jg
sbb
outs
cwde
inc
loopne
test
or
jno
adc
pop
xor
sbb
xor
je
cmc
add
iret
sub
pop
dec
fld
adc
jb
jbe
out
cmp
aad
aad
shl
cwde
or
aaa
lock
mov
push
arpl
lahf
fst
test
adc
sbb
add
xor
cmp
adc
pusha
pop
cwde
or
add
dec
xchg
jecxz
or
and
mov
js
dec
bound
xchg
adc
push
adc
dec
addr16
(bad)
cwde
cs
in
xor
sub
jbe
lea
dec
xor
cmp
and
or
pop
pop
adc
movs
in
sahf
xchg
jp
(bad)
out
jns
push
imul
jne
xchg
fistp
jo
jl
test
shl
aad
add
push
into
into
fdivr
les
or
dec
add
mov
sbb
xor
(bad)
xchg
inc
pop
pop
stos
or
popa
lahf
add
sbb
jp
adc
int3
lods
pop
loopne
jae
sbb
das
in
inc
rcr
mov
outs
pop
cmp
dec
loope
js
mov
adc
cmp
push
mov
inc
rcr
xor
add
outs
pop
xchg
pop
stos
cmp
leavew
mov
xchg
repnz
not
mov
sub
lock
jnp
sub
mov
stos
ret
inc
inc
lds
jecxz
add
or
scas
aad
arpl
pop
push
(bad)
dec
je
push
cmc
jns
add
ret
and
inc
call
inc
pop
mov
inc
mov
int3
lods
push
and
ss
pop
mov
sub
jle
xchg
mov
sbb
fs
pop
unpcklps
inc
out
mov
lds
cwde
arpl
mov
jge
adc
retf
outs
mov
jo
lds
xchg
xchg
scas
fadd
das
iret
inc
int3
adc
cdq
sar
in
pop
daa
mov
int3
ds
mov
fild
mov
mov
sahf
sub
rcr
fsub
inc
cld
mov
sub
cwde
xchg
push
adc
cmps
das
or
mov
inc
mov
iret
mov
xchg
dec
jmp
fcom
aam
pushf
cmp
pop
push
(bad)
mov
pop
add
retf
add
push
pop
test
ficom
jge
call
adc
jae
loopne
(bad)
push
and
call
mov
stos
pop
js
sub
mov
push
pushf
adc
mov
dec
fcom
dec
mov
push
dec
(bad)
test
push
addr16
jb
jns
pop
and
mov
dec
push
and
fimul
or
add
js
mov
idiv
fwait
mov
adc
sub
in
mov
xor
icebp
test
ret
outs
add
adc
mov
adc
imul
and
popf
jg
or
adc
es
sbb
mov
add
imul
iret
pop
test
cmp
aad
pop
imul
(bad)
jno
test
mov
std
jns
cmp
inc
mov
lea
xor
sbb
push
addr16
sbb
or
sahf
lods
repz
or
sub
cdq
ror
fld
rdmsr
inc
mov
mov
jge
xor
inc
ret
xchg
out
repnz
ja
int
sbb
jmp
leave
mov
div
push
mov
pop
pop
push
push
dec
push
repz
es
and
jl
push
sbb
in
ficomp
dec
push
or
mov
outs
cwde
dec
inc
retf
fisub
ins
sbb
ret
aas
fimul
(bad)
hlt
in
enter
hlt
inc
and
push
into
adc
es
push
movs
and
inc
(bad)
imul
push
xchg
or
or
add
arpl
sub
jge
out
sub
add
mov
ins
mov
jae
cmp
sar
jae
cmp
adc
js
sub
ins
mov
inc
fs
jl
es
icebp
ja
jmp
pop
clc
add
pusha
(bad)
push
xor
ins
ss
dec
pop
test
aad
jl
outs
nop
and
push
pop
ret
clc
cmp
sar
fistp
sub
sahf
shr
mov
ror
sbb
cmp
inc
add
fwait
dec
mov
jbe
push
lea
adc
inc
xchg
shr
cmp
fwait
add
and
sub
out
mov
inc
jns
(bad)
stc
iret
(bad)
cmp
aas
cmps
mov
ficom
inc
test
cli
xlat
pop
or
cmc
cmp
pop
mov
or
jo
add
fild
mov
mov
push
push
xor
jae
push
cmc
inc
sbb
jae
push
les
xchg
ins
and
stos
and
mov
or
mov
adc
push
mov
fstp
shr
xor
push
dec
xchg
mov
sub
ss
imul
cwde
aaa
nop
jno
mov
lahf
mov
xchg
sub
es
nop
inc
push
(bad)
test
pop
imul
loop
loope
mov
add
and
into
fwait
cmp
stc
or
dec
add
scas
test
dec
and
mov
jns
outs
pop
mov
or
(bad)
push
mov
mov
adc
sahf
add
cwde
jecxz
cdq
cmp
loope
dec
and
lea
(bad)
sbb
nop
aas
cld
xor
imul
ja
cmp
cmp
mov
mov
not
push
gs
test
pop
nop
inc
jle
hlt
add
add
clc
sbb
fild
sbb
sub
dec
arpl
add
stos
ja
xchg
mov
shl
enter
mov
xchg
pop
jmp
and
mov
push
sbb
outs
dec
clc
(bad)
nop
outs
imul
stc
rol
popf
dec
or
arpl
and
ss
retf
xchg
aad
or
ror
ja
xchg
clc
sti
jge
(bad)
dec
inc
cld
addr16
cmp
and
push
mov
mov
(bad)
mov
xor
jge
imul
jno
pushf
sbb
es
xor
ja
add
imul
aas
fcmovb
stos
xor
movs
push
stos
mov
cmp
stos
xchg
inc
in
cmps
aam
jbe
push
lods
out
pop
mov
(bad)
in
mov
pop
jno
jne
sub
aaa
dec
scas
jno
lods
adc
loopne
cmps
rcl
popaw
push
xor
ja
push
iret
add
lds
test
pop
adc
xchg
xlat
(bad)
xlat
jge
imul
aaa
inc
mov
fistp
fistp
or
push
push
and
push
cmp
sub
dec
fldenv
sub
repz
dec
jae
mov
and
push
sbb
(bad)
cmc
add
cmc
mov
sub
mov
mov
adc
stos
cmp
(bad)
hlt
and
xchg
xor
test
mov
(bad)
sub
and
cld
pop
xchg
stos
fist
xlat
test
pop
jo
out
ins
and
imul
jecxz
push
adc
loope
les
imul
fs
jmp
mov
or
das
adc
rcl
std
scas
mov
cmp
repz
into
test
cmc
push
jle
mov
and
lahf
or
aad
sti
jmp
pop
cmp
jge
cmp
inc
pop
pop
cmp
(bad)
mov
call
cmp
dec
sti
out
jmp
mov
mov
sbb
(bad)
sti
mov
in
lods
ds
mov
es
pop
inc
or
(bad)
pop
push
(bad)
mov
hlt
dec
out
(bad)
inc
in
jle
sbb
add
xchg
stc
dec
into
xchg
in
mov
add
lea
mov
add
inc
mov
out
and
ds
ret
pushf
(bad)
lahf
test
clc
pop
xchg
(bad)
into
jg
mov
popf
push
stos
in
mov
and
std
shl
push
ins
cdq
sbb
daa
aaa
add
leave
lods
mov
mov
add
iret
jne
call
dec
sbb
add
dec
int3
daa
mov
xchg
xor
pop
xor
ins
pushf
(bad)
inc
sbb
jecxz
and
out
mov
push
jecxz
mov
xchg
adc
cmp
mov
ds
sub
dec
xor
jle
(bad)
retf
dec
jmp
js
test
aad
push
mov
(bad)
or
(bad)
movs
and
ss
push
push
lods
or
(bad)
popa
shl
neg
sub
push
mov
mov
jmp
ins
std
iret
out
scas
add
xor
push
cmp
adc
lods
ret
jmp
xor
ins
mov
sti
add
push
in
add
loope
add
pop
fwait
loopne
in
(bad)
cmp
sbb
in
iret
jae
mov
daa
loop
(bad)
int
dec
push
int
or
(bad)
pop
cmp
adc
push
dec
jb
pop
adc
ins
outs
dec
lods
test
jl
mov
xchg
call
pop
lea
sub
mov
cmp
add
xlat
pop
call
je
inc
ins
fst
push
sbb
adc
out
fsubr
mov
retf
sub
addr16
mov
inc
cmp
xchg
fstp
dec
jno
pop
or
jae
push
sub
dec
push
add
xor
push
xor
cmps
sbb
jb
ja
out
scas
outs
jmp
push
sub
(bad)
mov
push
jecxz
jp
adc
(bad)
retf
shl
hlt
aas
mov
out
(bad)
xlat
enter
aas
pop
dec
std
sbb
sahf
in
and
rcl
movs
mov
lock
xchg
jb
in
jl
scas
jmp
mov
leave
push
call
mov
vxorps
fwait
lods
stos
cs
les
dec
fsub
or
pop
les
and
add
ficom
retf
xchg
mov
sahf
das
dec
mov
dec
test
daa
lock
lea
ins
add
or
lahf
inc
dec
xor
jecxz
ret
pop
test
xor
(bad)
ds
fimul
cld
pop
stos
and
ins
jne
add
not
sub
push
ss
out
aad
mov
popf
adc
jecxz
test
daa
movs
mov
(bad)
call
mov
dec
hlt
xchg
push
push
mov
mov
push
pop
push
push
push
iret
push
leave
pop
stos
repnz
push
call
dec
jae
and
dec
jbe
jge
repz
fild
pop
lahf
jecxz
fdiv
mov
mov
push
mov
push
mov
lods
icebp
repz
jge
jae
dec
call
sub
jecxz
xor
jmp
cdq
or
push
jecxz
stos
mov
add
sbb
xor
gs
das
mov
mov
or
pushf
mov
mov
ins
retf
shr
outs
xchg
sub
dec
and
pop
out
xchg
imul
xchg
shl
jo
inc
dec
fidivr
lea
xor
push
xchg
dec
mov
dec
cmp
pop
loope
int3
mov
xor
fist
push
cmc
adc
call
jmp
loopne
fst
xchg
call
xchg
leave
das
stos
ins
pop
cld
mov
outs
add
scas
add
push
sar
jo
adc
pop
ja
out
cmp
adc
pop
iret
inc
push
add
pop
gs
in
push
and
stos
sub
or
pusha
(bad)
out
(bad)
push
push
retf
enter
ss
jmp
mov
loope
jge
pop
(bad)
add
push
stc
jmp
xor
cmp
mov
add
and
repz
and
xchg
jno
arpl
loop
mov
push
push
sub
xor
or
adc
xchg
mov
inc
mov
mov
aad
test
inc
ficom
mov
arpl
loop
and
aad
bndldx
inc
enter
xchg
jmp
inc
xchg
cmp
pop
fist
lods
dec
mov
mul
adc
div
stos
test
sbb
xchg
push
int3
push
mov
or
xor
cli
or
ja
push
(bad)
sub
push
mov
dec
jnp
and
xlat
scas
dec
or
inc
in
jns
or
jmp
xchg
pop
out
dec
rcl
xor
xchg
and
icebp
and
mov
xor
mov
dec
adc
or
imul
lahf
xchg
fwait
out
mov
pop
jne
mov
fs
xlat
clc
not
movs
inc
mov
jb
push
push
xlat
sub
shl
sub
out
xor
data16
arpl
sahf
jbe
or
dec
jmp
cld
gs
fld
test
sbb
xor
popf
xor
ror
sbb
bnd
out
or
retf
call
les
ror
xchg
paddusb
pop
fs
dec
lods
sbb
fld
enter
and
test
adc
les
mov
enter
cmp
aaa
or
jl
test
test
hlt
jbe
aas
mov
das
hlt
and
inc
repz
mov
mov
outs
inc
rcr
ja
pop
(bad)
stos
rol
jne
fimul
(bad)
in
xlat
cmp
cli
fild
inc
pop
fs
inc
dec
dec
scas
shl
push
inc
test
call
pop
sbb
cmp
mov
cmp
retf
fwait
out
(bad)
xor
or
and
and
mov
mov
dec
out
int
dec
push
jmp
adc
shl
loope
sbb
and
push
sbb
dec
leave
lock
leave
sbb
push
bound
call
fsubr
cld
or
loope
mov
jg
outs
loopne
out
scas
in
mov
pop
ja
fild
cld
inc
cdq
rcl
cmp
rcl
pop
push
ficom
and
cli
cmp
lds
push
lahf
movs
retf
out
sub
fwait
ja
pop
xchg
mov
xor
sub
mov
adc
sbb
xor
and
jae
sti
sub
sbb
push
push
repz
cmp
in
les
cmp
or
sbb
push
test
cmp
adc
jno
and
js
sub
movs
jns
jmp
mov
cmp
scas
sub
pop
and
dec
into
movs
pop
cmp
jbe
fiadd
rcr
sub
out
lods
or
outs
sub
xlat
add
jge
icebp
xchg
jbe
inc
mov
dec
xchg
mov
jecxz
mov
xor
mov
add
das
push
cmp
xchg
leave
mov
nop
pop
mov
jmp
sub
mov
xchg
out
lock
pop
xchg
(bad)
add
xchg
push
popf
mov
popa
xor
dec
shl
je
cmp
mov
mov
lock
outs
jle
xor
mov
jmp
dec
jl
xchg
push
adc
pop
pop
sub
out
pop
int
or
inc
stos
sub
and
(bad)
jns
mov
and
add
mov
aas
(bad)
lds
mov
enter
in
fmul
push
(bad)
arpl
or
add
jl
push
push
sub
mov
cmp
jmp
jno
cmc
push
inc
mov
or
jg
aas
push
jae
imul
pop
xor
xchg
xlat
pop
je
mov
inc
(bad)
jo
cmc
psrld
imul
ficom
mov
sub
push
mov
sub
(bad)
stos
cmps
and
add
sti
fwait
(bad)
dec
mov
sbb
(bad)
adc
ret
fdiv
push
sar
push
jl
mov
vmread
push
dec
daa
mov
add
push
dec
jbe
jns
cmp
popa
xor
push
pop
pop
das
int
sbb
pop
ds
pop
or
jo
or
les
mov
stos
test
in
cwde
fdivr
dec
addr16
mov
(bad)
jmp
xchg
movs
sub
mov
je
std
xor
xor
loop
fld
add
dec
es
pop
pushf
data16
lea
mov
movs
and
fild
add
mov
ins
inc
xchg
idiv
daa
int
push
adc
in
add
call
push
mov
jecxz
mov
cmp
xchg
fdivr
pop
rol
frstor
pop
xchg
mov
pop
adc
hlt
mov
mov
pop
les
pop
add
jmp
movs
(bad)
int3
jge
mov
or
mov
xchg
sub
push
adc
jle
aas
clc
mov
mov
fadd
jle
jge
jbe
mov
out
pop
std
mov
adc
cli
jecxz
dec
retf
fistp
aaa
add
repz
sbb
scas
mov
retf
sbb
daa
jbe
cmc
mov
in
mov
sbb
or
jg
call
(bad)
lods
or
enter
jecxz
xor
stos
push
aam
mov
nop
dec
movs
jnp
and
add
aaa
dec
fwait
push
jbe
lock
jae
ja
cmp
es
adc
dec
jmp
cmp
and
dec
rol
in
mov
fdivr
call
loope
add
sub
mov
cmps
jmp
and
jbe
stos
(bad)
fnclex
xor
in
or
movs
ins
push
pushf
leave
(bad)
shl
je
ret
cmp
dec
rol
inc
adc
cmp
rcr
movs
stc
xsavec
xchg
mov
sbb
outs
mov
adc
cmp
(bad)
jmp
adc
ror
cmp
cdq
adc
push
pop
lds
ret
pop
xor
dec
add
out
xor
cmc
enter
ins
push
mov
push
scas
test
fld
ror
sbb
cmc
or
in
add
push
mov
test
popa
cmp
add
jo
jp
mov
sub
cmc
adc
movs
mov
stos
pop
pop
cmp
cmp
ja
mov
sub
(bad)
sbb
das
xchg
js
lods
pop
and
rep
xchg
lds
ds
aad
mov
mov
loop
sub
out
inc
pushf
add
xchg
lods
rcr
(bad)
or
inc
xchg
repnz
out
mov
popa
jle
sub
js
mov
les
cdq
cmps
ret
ror
sub
cmp
sub
fisubr
retf
out
push
iret
mov
test
sbb
popa
movs
rcr
or
push
inc
aaa
scas
cmp
popa
mov
nop
push
icebp
sub
adc
mov
xor
sbb
push
cmp
mov
mov
or
inc
psrlw
mov
pop
lea
sbb
jle
shl
nop
shr
cmp
or
push
cli
lds
cdq
adc
test
test
int3
push
fcmovne
or
mov
imul
dec
jmp
div
leave
mov
mov
adc
cmp
sar
pusha
push
sub
or
xchg
pop
xchg
mov
mov
inc
aaa
les
arpl
cmp
ror
sbb
xchg
aad
mov
aaa
in
cli
es
ret
(bad)
jne
movs
ror
(bad)
js
aaa
test
cmp
iret
sub
dec
arpl
and
cdq
scas
pushf
nop
outs
cmp
inc
xchg
mov
adc
bndldx
movs
adc
sbb
jb
ins
xor
fisttp
sar
es
lahf
test
mov
fsubrp
sbb
daa
pop
bts
sub
jle
mov
out
sub
xchg
lods
pop
mov
ds
push
push
pop
cmps
stc
(bad)
movs
jne
out
scas
push
or
dec
mov
hlt
les
lahf
jnp
mov
pop
pop
lock
jle
dec
and
fstp
and
cdq
and
shr
jg
(bad)
out
mov
push
mov
(bad)
mov
and
adc
or
push
enter
in
jmp
jae
ja
sbb
jecxz
lods
out
add
pushf
aad
mov
dec
fild
xchg
(bad)
outs
imul
or
pop
fsubrp
add
sub
fcmovne
repz
sti
xor
mov
mov
sbb
mov
(bad)
outs
and
das
test
imul
in
movs
test
pop
and
popf
rcr
jecxz
iret
fldenv
ret
in
mov
pusha
mov
jns
imul
jp
adc
mov
add
test
jecxz
leave
adc
dec
in
(bad)
bound
pop
or
xchg
sbb
clc
icebp
and
xchg
mov
int3
test
xor
imul
push
mov
sub
jmp
mov
mov
bound
xor
mov
das
mov
xchg
dec
and
or
dec
mov
aad
jb
fadd
push
jns
fld
sub
fldenv
into
popa
ficomp
je
mov
jl
gs
xchg
gs
dec
and
sbb
dec
in
fiadd
int3
adc
ins
push
aad
fucomip
cmp
stos
dec
dec
scas
cmp
les
push
cld
push
das
ror
mov
adc
push
rol
repnz
imul
sbb
call
pop
xchg
jl
cmp
imul
mov
dec
inc
ret
imul
jge
mov
gs
outs
pop
sbb
repz
xchg
sub
cmp
out
repz
mov
(bad)
jl
jge
jg
fcomi
dec
xchg
sbb
and
ficom
repz
jae
sbb
xlat
sub
sbb
(bad)
out
xchg
add
dec
out
pop
jmp
mov
nop/reserved
adc
dec
mov
cmp
xor
push
xor
mov
imul
test
scas
shr
cs
lds
imul
xchg
or
movs
aad
icebp
add
add
mov
(bad)
mov
pmaxub
push
and
fstp
ss
inc
push
lock
enter
loope
imul
clc
test
ja
fwait
mov
xchg
push
mov
outs
fstp
mov
mov
repnz
or
sbb
sbb
push
push
scas
(bad)
out
xor
push
ret
mov
mov
pop
int3
push
imul
aam
hlt
(bad)
test
mov
ret
mov
je
sub
int
pop
ds
lods
mov
ret
loope
jmp
xor
enter
stos
xchg
retf
fs
inc
retf
(bad)
mov
mov
push
out
lock
mov
jecxz
mov
int3
retf
add
or
adc
jl
adc
xor
loope
mov
aam
mov
outs
pop
shr
nop
mov
sbb
mov
add
xchg
jbe
mov
adc
in
bound
out
mov
fbld
push
daa
adc
leave
mov
cwde
push
xor
or
xor
pop
dec
lods
push
xchg
push
outs
mov
out
mov
xchg
fst
adc
sbb
adc
lods
fstp
mov
jmp
sbb
aam
leave
arpl
mov
or
pop
lahf
js
adc
inc
scas
xchg
sub
mov
out
fwait
in
mov
cwde
add
lock
pop
pusha
(bad)
mov
jo
in
inc
xchg
in
mov
js
ret
daa
add
dec
jbe
ja
(bad)
or
cli
dec
adc
int3
stc
(bad)
leave
les
inc
into
add
lahf
push
inc
int
add
fadd
movs
inc
add
or
cli
pop
inc
mov
mov
add
sbb
jnp
data16
cmp
fs
adc
(bad)
inc
fistp
dec
stos
or
popf
sti
xor
or
mov
adc
movs
pop
stos
and
or
add
jae
or
add
pop
icebp
aaa
jne
fild
pop
retf
mov
mov
jo
xchg
lods
nop
rcr
aam
sub
inc
mov
xchg
or
jecxz
xor
jne
fucomp
adc
lea
sub
mov
inc
fcmovu
adc
mov
mov
sahf
pop
fwait
push
adc
sub
sub
inc
clc
ins
jp
push
and
xchg
push
call
retf
xchg
mov
jge
cwde
fnstcw
(bad)
mov
rol
js
pop
pop
and
pushf
ror
shr
dec
cmc
and
mov
popf
in
jge
(bad)
xor
retf
cld
pop
les
pusha
mov
push
fcom
bnd
inc
push
idiv
xchg
lea
aam
test
inc
call
push
ret
add
mov
pop
mov
cwde
outs
out
(bad)
fcomp
retf
repnz
xchg
pop
int
(bad)
loopne
(bad)
stos
cld
cs
mov
(bad)
dec
bound
mov
push
aad
mov
mul
adc
push
adc
dec
std
inc
mov
sub
add
jle
pusha
(bad)
push
cmovns
mov
sbb
mov
pop
iret
je
in
and
mov
pop
fincstp
inc
add
daa
pop
lods
repz
and
sbb
mov
(bad)
cmc
sub
xchg
pushf
adc
push
loop
jp
pop
jne
(bad)
ds
or
sbb
mov
clc
and
or
sub
arpl
dec
mov
rcr
or
mov
sub
movs
popf
push
in
push
shr
sti
(bad)
adc
dec
nop
sub
jbe
scas
pushf
jg
pop
in
dec
sub
adc
pusha
call
imul
out
mov
ins
leave
(bad)
cdq
jg
arpl
rcl
jecxz
outs
stc
sbb
jno
inc
call
jg
push
(bad)
icebp
mov
inc
(bad)
pop
call
or
and
xchg
jmp
icebp
xor
xchg
jns
push
fistp
pop
loop
lds
dec
shl
pop
jg
and
int
xchg
sbb
cmps
dec
js
scas
cmp
test
pop
pop
pop
xchg
aas
xor
xlat
pop
setae
movs
mov
push
dec
bswap
outs
outs
adc
xor
ror
or
or
pop
pop
clc
leave
fnstcw
das
xchg
or
pushf
and
(bad)
mov
(bad)
stos
ficom
call
cwde
dec
sti
inc
push
test
mov
fild
mov
or
mov
push
jbe
mov
scas
push
mov
cwde
cmp
jnp
aaa
mov
cmp
fwait
push
in
xor
cli
cwde
and
aas
stc
stos
daa
ins
sub
mov
sbb
xchg
lock
(bad)
pop
jmp
mov
mov
stos
cmc
mov
aam
push
outs
iret
pop
std
jo
movs
jbe
fwait
xchg
mov
lock
sbb
call
xchg
arpl
jns
mov
jne
sahf
jo
jbe
push
out
nop
fcmovnbe
xor
push
dec
xor
jb
cmp
fld
fld
movs
(bad)
dec
mov
cli
gs
dec
rcl
or
xchg
or
stos
cli
xor
rol
out
pop
or
ret
lods
loope
mov
bound
in
in
aad
outs
pop
aaa
loopne
pop
mov
mov
push
fs
js
jl
and
ret
mov
stos
dec
jge
lods
jae
sbb
mov
dec
mov
rol
mov
stos
mov
mov
out
lahf
xor
inc
jns
cmc
pop
in
cs
jge
xchg
gs
fild
mov
cs
push
lods
sbb
fst
push
xchg
jo
addr16
xor
stos
inc
lock
hlt
xchg
or
lods
sahf
add
movs
iret
les
dec
cmp
push
xchg
fst
push
or
into
pop
stc
dec
int
dec
mov
fldenv
add
rcr
mov
inc
je
xchg
xor
fadd
jmp
jmp
in
in
idiv
push
jne
inc
scas
mov
adc
iret
mov
movs
mov
into
je
(bad)
xchg
xchg
mov
add
push
and
cmp
adc
add
ffree
jmp
sbb
pop
mov
hlt
mov
adc
push
outs
dec
sbb
jne
ret
repnz
mov
xor
mov
stc
jo
in
jae
ins
test
ins
(bad)
aad
ja
sub
jmp
fmul
mov
inc
sbb
aaa
and
(bad)
or
and
xor
fst
mov
ja
mov
mov
or
sub
mov
bnd
imul
cmp
xchg
xor
adc
and
sbb
mov
add
jno
cmp
pop
pop
cmp
add
icebp
pop
mov
ja
je
xlat
xor
(bad)
lds
(bad)
ja
adc
xchg
lods
or
pop
xor
jae
xchg
les
jns
push
cld
push
fdivr
outs
test
pop
dec
(bad)
fdiv
dec
pop
mov
jbe
xchg
dec
jle
inc
ror
jl
and
int
lods
dec
dec
and
in
mov
dec
lds
mov
out
mov
jo
adc
push
mov
mov
std
in
sbb
xchg
cli
push
sub
add
pushf
test
jnp
sub
scas
pusha
aad
retf
movs
cmps
jle
pop
fld
and
rol
test
loop
mov
int
out
loope
out
outs
fs
cmp
push
jnp
out
cmp
pop
ds
jecxz
in
mov
lea
les
sub
pusha
mov
mov
xchg
jmp
sub
arpl
xchg
cmps
xchg
ja
sub
jmp
arpl
in
add
clts
ja
cmp
adc
lock
cmp
sti
fadd
imul
lock
pop
in
jb
rcl
imul
sbb
adc
int3
in
or
sub
int3
cmc
xor
retf
repnz
test
pop
cmp
shr
pushf
nop
push
mov
mov
lea
fist
into
outs
arpl
rcr
xor
mov
jbe
cld
xchg
add
bound
adc
imul
adc
dec
pop
ret
bnd
addr16
dec
pop
clc
xchg
jb
rol
sub
adc
jmp
je
test
pop
pop
arpl
jns
shl
push
mov
pop
inc
pmulhuw
and
repz
mov
xor
stc
lahf
xlat
lds
aad
shl
pop
adc
lahf
and
lahf
fisubr
and
cmp
fldenv
arpl
jl
push
push
mov
sahf
fwait
jne
sahf
fwait
jmp
lods
cmp
sub
lods
jne
test
push
retf
or
inc
je
(bad)
mov
push
mov
outs
adc
adc
(bad)
fs
adc
sti
sub
das
int
push
ror
les
enter
pusha
pop
xchg
(bad)
cwde
dec
ret
and
xor
sub
inc
pop
dec
mov
lods
aad
cmp
test
test
dec
pop
pop
and
push
out
dec
or
jns
icebp
xchg
add
pushf
mov
(bad)
jbe
inc
in
push
in
jp
mov
ss
and
je
and
in
add
sbb
pop
bound
mov
ret
cmps
xor
fdiv
mov
test
test
pusha
sub
fstp
loope
aas
rcr
cli
add
jb
push
xor
adc
dec
and
cmps
adc
pop
outs
jmp
into
add
data16
jle
in
cdq
loope
nop
jmp
ret
push
or
pop
cs
dec
push
xchg
popf
in
movs
pop
mov
push
ja
jo
ins
push
sbb
loop
fmulp
fldenv
xor
imul
lahf
and
fistp
adc
or
imul
leave
imul
xor
add
out
in
aaa
fxtract
test
(bad)
xor
cli
and
inc
mov
jae
mov
xor
movs
lds
retf
mov
sub
xchg
mov
mov
sub
dec
mov
mov
mov
cmp
adc
lahf
mov
or
pop
cmp
(bad)
(bad)
int
pop
addr16
ficom
shl
add
jb
pop
add
mov
sub
xor
sbb
(bad)
adc
xlat
or
mov
movs
(bad)
jle
mov
adc
outs
rol
fucom
dec
cmps
(bad)
lock
or
lods
test
jns
sub
movs
xchg
add
les
jns
loop
cmp
cmp
sub
jae
sub
aad
pop
fisubr
mov
lahf
jp
push
cdq
xchg
ja
add
push
cmp
(bad)
xchg
adc
(bad)
push
jp
arpl
cwde
ror
test
dec
sbb
cld
sub
jnp
sahf
dec
aam
scas
cmp
jg
push
int3
(bad)
ds
mov
pop
inc
add
mov
stos
das
scas
addr16
cdq
es
leave
ret
xchg
dec
lds
and
jbe
cli
add
push
adc
scas
scas
push
dec
jno
scas
rcl
jl
outs
daa
mov
das
xchg
push
cdq
mov
ins
pop
jbe
test
push
inc
pop
xchg
cdq
into
mov
push
jne
outs
dec
lea
mov
mov
pop
push
or
mov
xchg
pop
cli
enter
mov
sti
xchg
sub
inc
test
sub
mov
in
pop
ficom
cmp
repz
outs
(bad)
scas
leave
sbb
pop
pop
cmps
arpl
icebp
mov
ds
or
leave
pop
or
mov
mov
retf
or
std
jae
pop
xor
ss
ss
dec
dec
cmp
test
int
jo
pop
mov
les
inc
push
retf
inc
and
dec
mov
retf
mov
ror
cld
out
lahf
pop
adc
ret
mov
ror
push
sub
mov
inc
sub
dec
outs
inc
test
js
jle
rol
adc
xor
nop
imul
push
add
adc
lock
xchg
icebp
cmps
push
(bad)
loopne
inc
shl
cmp
or
adc
test
repz
xor
dec
pop
std
test
jb
jl
push
sub
and
adc
outs
scas
xchg
call
dec
push
cmc
dec
imul
out
fstp
aad
and
adc
jb
add
cmps
stos
mov
xchg
cs
outs
and
xchg
int3
test
jns
jmp
iret
repz
iret
mov
call
out
mov
inc
scas
jb
mov
out
mov
call
ins
rol
cmp
sbb
je
jmp
mov
mov
imul
adc
and
aaa
sub
push
adc
cmp
or
cmps
jmp
jae
push
mov
lahf
scas
xchg
mov
add
add
push
jnp
sub
je
test
dec
jge
jmp
nop
aas
mov
add
call
push
into
dec
sbb
adc
dec
fstp
fisttp
fsubr
and
call
or
ds
(bad)
and
aaa
fstp
or
div
setnp
sbb
xchg
cmp
into
add
inc
imul
mov
mov
or
pop
mov
dec
aaa
push
pop
or
cli
add
lock
(bad)
or
mov
(bad)
xlat
mov
lea
ins
shl
push
aaa
stc
push
xor
jmp
pop
sbb
add
dec
call
push
push
aam
fmul
icebp
data16
cmps
pop
cmps
pusha
adc
ret
pop
stos
xor
pop
repnz
lock
or
mov
movs
push
jae
int
mov
(bad)
shl
test
jnp
mov
mov
leave
dec
test
cld
jl
outs
jle
pop
mov
test
in
jg
inc
and
cs
test
das
mov
push
jae
loop
es
cmps
jne
cwde
and
and
and
push
les
jns
mov
xor
ffreep
pop
and
xchg
das
xchg
dec
lods
(bad)
arpl
sub
pop
mov
pop
mov
outs
popf
jecxz
(bad)
and
xchg
(bad)
sbb
repz
sti
icebp
push
les
dec
push
pop
in
ss
cmps
test
std
mov
add
cld
mov
push
nop
sahf
adc
inc
xchg
in
and
sub
ins
mov
cmp
pop
ret
mov
adc
fs
jb
inc
mov
add
(bad)
add
and
sbb
retf
ret
jmp
jns
fs
cmp
nop
ins
(bad)
pop
scas
and
xlat
cdq
cmp
adc
(bad)
(bad)
mov
fsub
pop
add
das
sbb
or
pop
mov
sbb
sbb
shr
into
pop
cmps
mov
jo
adc
jno
jmp
sub
add
add
mov
xor
xor
inc
push
pop
pop
imul
and
scas
sub
sbb
mov
dec
pushf
sbb
je
and
jnp
call
in
shl
sub
lahf
js
(bad)
dec
sub
sub
cmp
jne
leave
jae
mov
clc
mov
inc
cmp
cwde
adc
or
nop
test
sbb
mov
ror
mov
push
or
or
jl
lods
xor
lock
pop
mov
pop
aaa
add
lock
sub
addr16
mov
cmp
adc
enter
or
mov
add
mov
sbb
mov
fbstp
jno
jp
or
fdivrp
xor
ins
(bad)
movs
and
adc
jmp
gs
xchg
dec
jl
pop
cmps
jp
jbe
data16
and
repnz
gs
shr
test
add
jp
xchg
sar
inc
cmp
ss
ret
int3
inc
xchg
stos
imul
push
adc
outs
fsub
xchg
pop
jnp
and
sub
and
mov
adc
mov
mov
xchg
adc
add
(bad)
sbb
ss
rcr
cmp
pop
enter
pop
cli
fxch
add
popf
dec
jno
add
cli
fst
fst
stos
test
cwde
or
scas
push
rcr
retf
jecxz
xlat
mov
inc
fisttp
push
xchg
mov
(bad)
xchg
sbb
mov
mov
and
pop
sbb
ss
(bad)
xchg
call
sbb
and
cwde
sbb
or
addr16
test
int3
jg
rol
dec
mov
push
mov
and
sub
and
lock
ds
ins
inc
aaa
xor
lea
xor
addr16
lock
imul
sub
retf
mov
mov
push
sahf
xchg
mov
xor
cmp
dec
and
mov
and
das
mov
xor
nop
movs
xor
bound
mov
or
pusha
movs
frstor
mov
inc
js
ror
loopne
ins
(bad)
push
scas
xchg
jmp
lahf
mov
pop
addr16
pop
sbb
shl
adc
sbb
push
jle
or
jb
and
cmp
sub
sahf
lods
add
out
dec
jmp
lahf
inc
cmp
fwait
ins
ss
fistp
sub
or
(bad)
mov
mov
cmps
mov
cmp
xor
mov
lods
addr16
pop
(bad)
leave
push
neg
lea
jmp
and
cmp
enter
add
movs
push
into
bound
pop
xor
mov
inc
je
push
test
xchg
out
gs
dec
lea
pop
xchg
mov
jbe
jno
(bad)
mov
ror
mov
int3
sbb
push
ret
movs
dec
daa
dec
sub
pop
mov
arpl
(bad)
cld
push
or
pop
data16
add
adc
shl
scas
add
popf
cmps
cmp
dec
jl
rol
push
loop
push
jnp
inc
jb
inc
inc
mov
mov
cmp
jp
in
xor
int3
xchg
inc
movs
jl
cmp
daa
std
call
mov
mov
add
pop
test
dec
xchg
inc
dec
aaa
mov
push
cmp
rcr
push
cld
mov
cs
std
rol
popa
mov
in
cld
and
cmc
inc
pop
dec
xor
sbb
int
stos
push
pop
lahf
shl
repnz
mov
sub
mov
add
mov
xchg
pushf
or
inc
xchg
test
mov
mov
ins
out
shr
jmp
cmc
cdq
jae
mov
mov
gs
mov
loope
xchg
jl
imul
cmp
dec
in
pop
sbb
mov
xor
xchg
adc
xchg
dec
in
mov
rol
mov
mov
mov
inc
xor
mov
dec
add
inc
or
jno
xchg
outs
out
lock
das
mov
dec
cmp
imul
icebp
aaa
xchg
aas
call
add
cmp
or
sub
lods
(bad)
dec
pop
mov
ror
fild
pop
enter
fisubr
aas
dec
and
cmp
aaa
mov
int3
test
into
shl
jle
rcl
or
test
inc
es
pop
inc
lahf
mov
outs
sbb
sar
addr16
je
(bad)
jle
jl
sub
test
sub
call
adc
(bad)
pop
fs
pushf
xchg
push
stos
cmc
shl
mov
stos
push
adc
mov
mov
inc
ins
mov
cmp
or
xor
retf
retf
jne
push
mov
aaa
push
mov
cmp
fcomp
jmp
dec
jl
xchg
sub
xchg
retf
xor
lock
in
sbb
int
sub
ror
pushf
cld
ret
cmps
jecxz
mov
lods
int3
mov
ja
ds
(bad)
imul
les
xlat
pop
dec
(bad)
or
cmp
mov
call
pop
adc
mov
cli
and
mov
shl
in
xchg
les
test
xor
adc
rcl
sub
mov
aam
and
mov
call
test
call
pusha
push
pop
fadd
sub
test
js
cmp
sbb
cmp
dec
pop
shl
pop
loope
scas
test
mov
aaa
sbb
mov
retf
loopne
leave
call
cmp
inc
pushf
in
fdiv
cmp
mov
test
gs
add
pop
ins
inc
lods
push
(bad)
clc
out
cmps
cmps
in
fisubr
cdq
and
(bad)
sub
fwait
xchg
popf
push
sbb
retf
fimul
mov
lahf
in
add
hlt
jecxz
pop
dec
popf
scas
mov
xchg
jnp
pop
inc
sub
xlat
stc
mov
add
(bad)
in
popa
sub
jns
lahf
jmp
fild
push
xchg
inc
xor
ss
mov
ins
cmp
popf
xor
pushf
mov
bound
cmps
and
cmps
nop
inc
in
into
bound
jecxz
daa
rcl
xchg
sar
pop
popf
mov
push
adc
add
push
std
jnp
dec
fcmovnu
jmp
xchg
adc
cmp
fcmovne
adc
pop
pop
test
stos
jae
or
mov
cmp
sub
scas
push
clc
pop
fs
mov
dec
push
(bad)
lea
add
jno
jbe
xor
mov
mov
dec
cmp
cmp
push
inc
cmp
test
mov
shrd
das
push
mov
and
push
pusha
or
jmp
push
lahf
test
push
into
mov
mov
out
xchg
dec
sbb
popf
xchg
mov
jge
popa
push
daa
cmp
sub
jbe
or
hlt
add
push
add
mov
dec
fild
test
aam
cmp
xlat
dec
sti
jl
push
cmps
rol
sub
and
jl
cs
sub
stos
xchg
mov
push
test
inc
push
ss
and
or
sbb
xchg
icebp
stos
movs
fild
cwde
jnp
mov
stc
cwde
sub
stos
or
cmc
stos
xlat
outs
xchg
loope
sbb
mov
xchg
arpl
xchg
retf
mov
lods
xor
push
in
fisub
cdq
mov
inc
shl
fild
or
add
or
inc
mov
popa
dec
jbe
xor
xchg
loopne
pop
fucomp
cmp
xor
dec
ret
enter
ret
dec
cmp
fs
pop
int
cli
xchg
jmp
fbstp
mov
movs
xchg
rcr
sar
cmps
cmp
in
jo
icebp
and
add
sahf
adc
data16
and
or
mov
js
mov
test
and
loop
mov
mov
shl
dec
addr16
xchg
jmp
pushf
pop
out
shr
sahf
cmc
in
jo
jge
je
xor
retf
ja
inc
(bad)
mov
pop
rcr
dec
fsub
fwait
sub
aas
movs
leave
xchg
jne
and
sbb
inc
mov
push
sub
inc
shr
adc
add
add
and
jp
fs
aad
adc
mov
xor
(bad)
daa
cld
pop
iret
add
aam
(bad)
enter
add
mov
icebp
xchg
adc
retfw
ret
jmp
por
adc
mov
sahf
cmp
jae
xor
push
inc
lock
xchg
iret
sbb
pop
movs
adc
push
ins
push
pop
push
xchg
and
out
shr
cs
scas
stc
ins
stc
and
and
fild
scas
jmp
mov
retf
push
shr
shl
push
repz
cmp
(bad)
push
jl
aas
and
pop
xchg
out
das
adc
push
inc
aas
push
adc
pop
scas
mov
lods
xchg
xchg
bound
div
test
inc
xchg
adc
pop
stc
push
scas
jmp
mov
sti
rol
and
mov
ror
or
test
jbe
xlat
mov
cmp
pusha
lods
jg
out
into
mov
les
mov
ffreep
push
pop
jae
add
and
push
shr
je
aad
lahf
jg
and
iret
sub
mov
mov
pop
sub
fnstcw
xor
inc
loope
pop
les
lds
das
aas
popa
cmp
popf
rcr
inc
shl
pop
aas
mov
inc
mov
test
jp
mov
les
f2xm1
sub
jo
ret
or
fwait
aas
mov
mov
xchg
mov
push
or
mov
call
ret
pop
dec
cmp
mov
add
adc
int3
enter
call
xor
pop
inc
arpl
pop
push
aad
mov
js
fs
or
pop
(bad)
fdivr
dec
mov
scas
pop
lods
mov
adc
ja
cmc
xor
je
adc
jae
in
jecxz
xchg
xor
ins
jb
pusha
sahf
cmp
push
xlat
leave
neg
(bad)
movs
lds
adc
nop
sbb
sub
sub
and
arpl
(bad)
cmc
sub
mov
int
imul
int
test
out
inc
pop
mov
(bad)
xchg
pop
push
imul
sar
sub
and
pop
cmp
pop
or
js
xchg
mov
shr
add
ins
ror
aad
xchg
cld
dec
std
xor
dec
push
loope
cmps
jp
add
mov
dec
jge
cwde
std
jg
and
adc
mov
lock
cld
push
popaw
pop
les
xlat
inc
sbb
test
xchg
sbb
mov
mov
jmp
xchg
sbb
ret
cmp
cs
scas
or
add
push
sub
movs
and
jg
sub
mov
or
add
aas
sbb
inc
ror
sti
push
mov
fldcw
aaa
arpl
jns
xchg
arpl
lock
dec
out
repz
sbb
and
inc
mov
dec
lahf
cs
inc
dec
push
and
push
in
or
pop
or
ret
cmps
cld
push
movs
cmp
popf
mov
mov
gs
add
les
(bad)
cwde
hlt
push
xor
push
imul
fst
movs
lea
cmp
add
mov
jb
(bad)
jno
pop
(bad)
ud1
add
pop
sub
pop
jo
int
sbb
pop
pop
or
jle
pop
pop
mov
add
out
lods
dec
jmp
add
out
sub
inc
sbb
aad
sub
xchg
pop
cmps
in
mov
repnz
loopne
ret
imul
mov
adc
jae
outs
mov
mov
add
jb
sbb
push
push
ins
arpl
dec
mov
dec
ins
rcl
cmp
imul
sub
js
not
cli
inc
and
aaa
leave
sbb
mov
mov
cmc
cmp
aam
cmps
fcom
pop
push
and
lock
(bad)
lock
jp
sub
sbb
pop
imul
pop
xor
cmp
xchg
fidiv
inc
call
cmp
jp
xchg
mov
in
xchg
leave
mov
push
(bad)
out
daa
retf
cmp
sti
call
ret
jecxz
xor
sbb
es
mov
inc
loop
jle
jl
mov
fsub
std
inc
cli
sub
pop
adc
add
inc
dec
mov
lahf
dec
lahf
push
mov
test
mov
test
or
pop
cdq
push
lods
mov
add
cmp
mov
inc
sbb
div
mov
or
push
cmp
int
ss
nop
push
inc
into
retf
dec
and
dec
mov
push
(bad)
sub
and
or
adc
xchg
and
icebp
cmp
and
outs
mov
loop
jae
lods
push
pop
lods
data16
mov
lds
jmp
es
pop
je
inc
scas
mov
pop
ins
gs
push
movs
lahf
or
cmp
jg
jmp
adc
rcl
es
rcr
pop
hlt
loop
pusha
retf
repz
pop
aam
xchg
out
or
mov
out
push
push
cmp
call
cmp
loop
cmp
mov
cs
scas
dec
or
data16
imul
ror
iret
mov
sbb
xchg
pop
test
int3
fst
out
jmp
fwait
stos
xor
pop
xor
mov
push
pop
repz
in
in
scas
pop
xchg
xchg
iret
xchg
mov
push
mov
mov
loopne
pop
sub
loop
mov
inc
xchg
cmp
sar
fisttp
call
mov
jne
test
inc
add
adc
and
mov
and
bound
das
fs
mov
mov
xchg
test
cmp
iret
ins
jle
fild
inc
pop
jmp
dec
cli
sbb
in
add
dec
add
xor
iret
push
mov
lods
aas
dec
cld
dec
mov
ror
pushf
movaps
test
aam
mov
and
mov
xchg
loop
mov
out
xchg
pop
aas
fs
or
and
mov
or
push
(bad)
ja
out
neg
test
and
xor
outs
retf
xor
scas
and
in
dec
adc
mov
jmp
or
mov
shr
cmps
cmp
jne
mov
icebp
scas
mov
out
stos
jecxz
push
loope
lds
sar
jge
xchg
mov
ret
lahf
mov
sub
fdiv
loopne
fbld
sbb
imul
test
ror
push
enter
xor
mov
and
xor
(bad)
pushf
out
push
and
mov
int
stos
and
std
aam
(bad)
pop
dec
cmc
pop
lahf
pop
lahf
retf
push
jp
sub
sbb
mov
movs
int
mov
adc
xor
sbb
sti
push
repnz
icebp
into
inc
xor
cmp
ret
sti
sbb
xor
hlt
scas
mov
lock
jns
lea
mov
dec
push
dec
aaa
int
xchg
popa
jnp
mov
inc
or
ret
push
mov
mov
xor
push
push
clc
sub
(bad)
aad
int
push
adc
sub
jg
and
pop
sbb
pop
xlat
leave
or
inc
inc
popf
xchg
icebp
inc
scas
lods
aaa
cmp
push
mov
daa
lea
pop
inc
jp
mov
add
push
push
js
aad
push
ja
mov
lds
movsx
push
sbb
dec
xchg
jbe
(bad)
mov
dec
in
pushf
dec
push
shr
stc
sub
mov
adc
sub
scas
(bad)
sbb
imul
(bad)
push
add
call
dec
add
xlat
lds
loope
inc
ret
adc
fild
inc
movs
adc
mov
xor
jecxz
jge
scas
retf
inc
mov
pop
jnp
movs
jae
xor
inc
pop
shl
std
(bad)
jp
das
cs
jecxz
in
retf
inc
fdivr
std
sub
iret
jns
sub
loope
lea
bound
push
inc
or
xchg
cmp
jmp
out
mov
in
mov
jmp
mov
in
sbb
fwait
cmps
mov
dec
cwde
out
adc
xor
push
mov
pusha
push
jmp
fldcw
add
jle
mul
inc
push
hlt
shr
scas
mov
iret
out
or
scas
mov
into
mov
pop
call
loope
in
cs
dec
shl
xor
ror
fadd
push
mov
mov
dec
or
jge
xor
pushf
call
cwde
inc
lods
adc
mov
cmp
dec
xor
lahf
das
inc
shl
jb
fwait
add
mov
xor
and
jae
mov
adc
into
and
paddusw
fisubr
cmp
outs
out
pop
inc
adc
mov
mov
pop
ror
lods
stos
cwde
and
ds
out
sti
fidivr
or
pop
push
add
mov
cmps
ins
add
icebp
or
cmc
cs
(bad)
and
push
outs
inc
mov
pop
cmp
mov
cli
clc
mov
xor
(bad)
sub
in
mov
xor
ins
sbb
or
mov
in
and
js
ret
sbb
sub
fnstsw
ror
pop
xchg
retf
pusha
cs
lods
add
cmp
aad
outs
mov
mov
imul
xchg
cld
(bad)
call
mov
dec
add
les
ret
jp
dec
movs
es
cli
mov
mov
xchg
mov
mov
cmp
xchg
mov
dec
jb
pop
loop
aaa
sahf
popf
xchg
jecxz
mov
jmp
mov
popf
or
mov
outs
cmp
lods
pop
or
pop
mov
adc
loope
or
mov
(bad)
inc
jl
in
stos
jmp
push
fwait
jae
add
inc
or
push
mov
push
stc
fisttp
sbb
data16
mov
mov
jnp
pop
mov
add
xor
daa
pop
push
fnstenv
dec
mov
in
stos
shl
mov
ds
aas
sub
aas
shr
ret
shl
movs
call
test
sub
pop
and
mov
fisttp
sub
imul
sub
ret
mov
xchg
xor
retf
cmp
loop
dec
xchg
mov
jg
stos
jmp
ret
cwde
cli
outs
adc
jmp
pop
mov
push
in
and
xor
or
add
inc
imul
adc
xchg
push
mov
xchg
push
add
jl
popw
mov
pop
leave
or
xchg
arpl
mov
cli
test
rol
test
jb
adc
arpl
jne
inc
add
je
push
rol
jge
repz
jbe
(bad)
xchg
(bad)
mov
icebp
loopne
adc
mov
push
bound
mov
addr16
repz
in
movs
jl
and
mov
push
adc
hlt
outs
les
cmp
adc
aas
jne
call
(bad)
cs
enter
mov
mov
inc
mov
in
test
js
cmc
shl
in
jno
mov
xor
int3
dec
inc
sbb
mov
mov
mov
dec
lahf
fwait
adc
ret
xchg
cmp
jmp
fadd
enter
stos
adc
push
mov
jle
or
or
dec
test
cdq
and
jne
(bad)
xor
adc
xchg
xor
push
test
ret
push
fnstcw
ret
pop
pop
push
mov
inc
fwait
xor
mov
mov
test
mov
add
pushf
into
ds
mov
hlt
in
push
add
push
(bad)
cmp
mov
push
les
and
aam
aad
inc
and
pop
neg
sbb
cmp
cmps
sub
xor
xor
mov
or
dec
push
mov
inc
addr16
iret
jg
and
pusha
pop
xlat
xor
mov
loope
inc
bound
mov
pushf
adc
loope
test
aam
and
sti
push
jne
ss
or
push
mov
mov
cmp
pop
mov
stos
xor
movs
cmp
xor
loopne
and
jmp
mov
sbb
repz
mov
pop
(bad)
push
dec
mov
add
xor
dec
scas
pop
inc
lods
adc
loop
scas
(bad)
jo
or
mov
add
pop
adc
inc
sub
inc
xchg
inc
inc
in
xchg
js
lahf
xchg
lods
jo
arpl
sbb
mov
loopne
xor
adc
in
mov
xchg
lea
rcr
cmp
push
daa
sbb
sub
push
mov
mov
jl
pushf
mov
enter
mov
sbb
push
fs
add
mov
in
adc
push
pusha
and
stc
mov
mov
or
fistp
xchg
xor
mov
mov
ins
dec
cmp
mov
sahf
xchg
mov
fstp
xchg
repnz
add
cmps
stc
lds
fwait
shl
imul
adc
lahf
not
xor
push
xlat
es
lahf
popf
jl
xchg
lock
sub
fiadd
jp
test
mov
in
push
add
mov
ror
mov
mov
in
push
xchg
cmp
sbb
std
xor
add
imul
out
stc
jg
cmp
hlt
(bad)
pop
adc
sar
dec
cmp
mov
add
mov
dec
mov
mov
(bad)
hlt
adc
jns
out
inc
test
(bad)
mov
add
repz
repz
shl
(bad)
lock
xor
cmc
adc
or
xchg
scas
dec
fist
aaa
add
sbb
and
lds
sar
inc
loope
test
mov
loopne
popa
ins
imul
pop
adc
dec
mov
xchg
ds
(bad)
or
mov
jge
repnz
retf
hlt
push
int
hlt
pop
sbb
xchg
movs
ror
jl
adc
(bad)
into
mov
adc
jbe
rcl
ins
test
mov
sbb
xchg
ret
ja
jg
shl
loopne
adc
inc
mov
push
sbb
mov
int
clc
fcom
cs
push
inc
aam
lods
mov
dec
aas
sti
clc
inc
nop
jle
jmp
std
in
outs
xchg
mov
js
or
adc
and
and
mov
pop
aaa
fdivr
xor
xchg
sub
push
push
jecxz
sub
jne
or
dec
push
pop
mov
xor
cmps
or
test
test
popa
mov
xchg
mov
push
pop
loop
pop
add
pop
xchg
dec
mov
call
dec
retf
in
hlt
and
add
cli
jl
dec
cmc
es
jle
inc
jne
mov
inc
popf
mov
test
aad
push
test
pop
inc
pushf
das
std
out
or
jne
in
cdq
pop
cmp
sub
setb
sbb
or
xor
sub
xor
in
(bad)
fisubr
jb
ss
stc
lods
cmp
ja
or
pop
mov
add
and
push
jne
je
adc
cmp
fwait
and
imul
test
int3
aas
mov
(bad)
icebp
add
push
xor
stos
mov
cmc
xor
js
outs
dec
xchg
sahf
pop
dec
scas
rcl
jns
push
les
jg
mov
push
call
in
add
or
repnz
or
xchg
dec
retf
and
sbb
mov
push
xchg
xchg
adc
in
xor
xor
mov
push
inc
push
jmp
popa
cld
dec
setl
fnstsw
lahf
jle
(bad)
inc
out
and
cmp
sbb
push
mov
js
cmps
mov
jns
call
sub
jge
inc
fchs
xchg
fstp
popf
retf
and
cmovno
mul
aad
add
adc
mov
push
jno
mov
rcl
inc
and
jb
pop
jg
mov
jle
push
add
pop
adc
pop
aaa
mov
fwait
out
mov
pop
xchg
inc
mov
pop
cwde
jb
out
xchg
loop
dec
and
xchg
out
subps
imul
cmc
inc
inc
std
js
or
repnz
jecxz
mov
adc
mov
dec
aad
mov
inc
cwde
push
repnz
ret
xchg
or
rcl
ds
push
int3
cmp
pop
push
test
div
loopne
jmp
cli
or
cmp
pop
mov
jne
stos
scas
jo
cmc
outs
sub
or
dec
rcr
add
xchg
inc
int3
(bad)
push
loope
mov
cmp
sub
xchg
mov
sub
pop
lods
push
or
pushf
ja
test
jmp
into
dec
fld
jne
fistp
sbb
test
in
cmc
ds
adc
mov
and
xor
jp
mov
in
or
mov
je
or
pop
cmps
mov
add
fiadd
mov
cmc
xchg
stos
je
xchg
mov
pop
xchg
adc
adc
push
stos
test
out
xor
mov
or
aas
jecxz
sub
leave
mov
inc
imul
mov
in
loopne
outs
dec
or
bound
int3
xor
out
xor
or
arpl
movs
neg
std
cmc
push
in
fwait
xor
int3
clc
sbb
aam
pop
ss
movs
arpl
jnp
xchg
loop
std
push
sub
inc
jge
in
pop
mov
test
repnz
(bad)
mov
jo
xor
lea
jg
icebp
loope
cmp
(bad)
mov
or
jb
sub
call
lock
dec
rcl
cmp
pusha
xor
out
xlat
xchg
ins
fisttp
xchg
(bad)
fcom
jmp
test
or
mov
pop
(bad)
out
dec
inc
movs
ss
push
push
icebp
fdivr
mov
push
cmp
in
xor
lods
jge
dec
mov
retf
test
cdq
icebp
cmp
cmps
inc
fwait
lods
aad
fcom
sbb
int3
lods
jle
or
pop
shl
jbe
mov
fnstcw
pop
and
or
mov
adc
or
jbe
nop
adc
ins
cmp
push
ja
call
or
inc
(bad)
cmc
jno
ds
mov
fisub
call
aad
or
mov
iret
test
push
out
test
mov
jne
and
popf
push
lahf
imul
and
mov
lods
bound
bound
lahf
xchg
inc
rol
aam
pushf
rol
add
xchg
iret
dec
repnz
int
adc
or
xchg
rcr
inc
jbe
xor
std
popf
jmp
mov
das
pop
fs
or
xchg
aaa
imul
pop
test
sbb
ja
loop
stos
jl
mov
(bad)
cmp
xchg
cmps
or
test
inc
je
in
es
inc
or
aaa
jns
and
jne
aad
xchg
and
mov
call
enter
sbb
cmp
stc
and
add
lahf
or
aam
jne
pushf
ins
dec
(bad)
cmp
ss
ins
or
or
das
popf
adc
mov
(bad)
mov
inc
hlt
fs
daa
ds
sub
mov
inc
movs
pop
sub
das
cdq
mov
xor
mov
add
out
adc
outs
je
adc
dec
or
pop
xor
test
sti
jae
sbb
das
inc
(bad)
fisubr
inc
into
out
cli
cmc
cmp
pop
dec
addr16
inc
stc
inc
and
lahf
lock
jmp
dec
cmps
xchg
mul
(bad)
jne
repz
retf
test
retf
ret
es
mov
scas
mov
sti
pop
inc
sbb
pop
das
out
(bad)
sub
cmp
push
imul
mov
jo
mov
jbe
jno
and
imul
push
repnz
xor
(bad)
lods
sti
jle
push
sub
mov
retf
std
mov
(bad)
jg
lock
sub
mov
adc
ret
(bad)
in
jno
push
fisttp
add
jge
js
sti
dec
mov
leave
in
loop
dec
mov
stc
stc
addr16
cmp
(bad)
shl
leave
xchg
sti
xor
(bad)
test
das
iret
inc
xor
lods
leave
inc
push
xchg
lea
xlat
lahf
dec
mov
call
(bad)
jbe
loope
push
sahf
mov
push
pop
fnsave
push
and
jge
mov
imul
mov
lods
cli
mov
or
pop
into
aaa
loop
pop
jle
sbb
pop
lds
xchg
or
mov
(bad)
mov
out
push
jmp
mov
out
or
cdq
icebp
sbb
push
or
les
fst
test
bound
jle
jae
push
jmp
jl
in
jge
or
cmp
(bad)
fisttp
xchg
les
fwait
iretw
shl
add
mov
test
or
inc
imul
jae
pop
rcl
pop
das
sub
lods
popa
add
add
adc
xchg
dec
pop
sar
retf
or
and
pop
aaa
gs
push
adc
scas
cwde
cli
and
mov
jae
ss
shr
push
das
mov
add
scas
rcl
mov
or
je
sub
cmp
adc
leave
and
lods
in
pop
imul
rcr
jmp
rcr
and
jl
add
cmp
sub
shl
mov
dec
xchg
stos
daa
cmp
shl
outs
adc
and
popa
dec
and
sub
lods
pop
xor
jns
pop
loope
mul
test
in
arpl
cli
lock
mov
push
mov
(bad)
mov
daa
inc
test
jo
lahf
imul
(bad)
fst
mul
outs
mov
mul
jle
mov
sub
push
push
aas
ret
scas
jo
dec
sbb
add
imul
fcomp
push
mov
popa
mov
jl
sbb
iret
imul
das
cmp
jp
push
(bad)
push
loopne
icebp
xor
mov
push
pop
in
jae
xor
mov
jg
test
sub
mov
or
pop
pop
xor
mov
(bad)
sbb
loopne
fs
and
mov
daa
lods
pop
dec
mov
push
hlt
cld
leave
xchg
adc
imul
retf
ror
pop
or
arpl
fstp
clc
sbb
retf
data16
rcr
pusha
push
sbb
mov
shl
xchg
and
jp
xor
or
dec
push
xchg
hlt
adc
push
stos
push
test
xchg
or
sub
xor
aad
popf
sbb
add
jecxz
xor
pop
adc
sbb
xchg
push
movs
adc
mov
pushf
push
and
push
cmp
leave
inc
popa
or
stos
imul
mov
fistp
cmp
mov
test
int
in
jmp
stos
mov
in
adc
cmp
mov
jno
cmp
mov
sub
push
cmp
loopne
popf
(bad)
ds
loopne
shl
or
pop
or
mov
sub
daa
inc
jmp
fld
adc
cmc
xchg
inc
into
call
mov
js
inc
into
icebp
mov
sbb
jb
lods
dec
jo
mov
jecxz
int3
jmp
lahf
inc
jns
inc
inc
nop
sbb
mov
inc
out
cmp
out
call
aas
mov
sbb
(bad)
fcom
shl
lea
movs
(bad)
(bad)
rol
add
mov
pop
jg
and
cmp
fimul
adc
dec
jbe
inc
inc
xor
mov
fstp
in
popa
dec
repnz
xchg
inc
fist
push
push
adc
dec
cmp
xchg
enter
sbb
xchg
pop
mov
fld
loop
div
sbb
sub
adc
stos
dec
push
jae
push
push
dec
and
xor
movs
arpl
lds
push
pop
sub
and
mov
outs
cmps
stos
or
xor
pusha
inc
sbb
cs
mov
mov
clc
mov
(bad)
(bad)
sbb
cmps
mov
sbb
cld
ins
rcr
jp
jp
add
(bad)
inc
jnp
jp
ss
stos
stos
jns
pushf
adc
lock
push
js
lods
cmp
imul
dec
std
push
add
xchg
dec
jns
retf
(bad)
xor
dec
scas
xchg
out
sbb
std
push
xchg
mov
mov
fidivr
add
scas
mov
outs
adc
pop
(bad)
or
test
pop
push
stos
mov
adc
imul
loop
retf
sub
xchg
mov
pop
fadd
fs
xchg
shl
(bad)
in
mov
mov
pop
mov
rol
inc
xchg
cli
in
xor
push
ja
call
xchg
aam
xchg
in
idiv
retf
push
add
dec
imul
jne
mov
mov
je
ja
adc
shl
fdivr
(bad)
nop
into
dec
fs
adc
push
stos
daa
call
jae
imul
jnp
test
cmp
sbb
lods
cmps
test
fwait
hlt
jo
dec
push
fcom
sahf
add
dec
jb
ins
add
retf
mov
popa
sub
xor
xchg
or
mov
inc
mov
sar
push
jns
jl
push
mov
mov
icebp
cmp
sbb
test
int
fisttp
and
push
cli
data16
jb
mov
lds
lahf
adc
lods
xchg
add
sahf
mov
jo
xchg
xlat
es
sub
std
mov
or
push
out
rcr
rcr
jl
movs
ds
fnsave
sub
out
movs
jmp
stc
adc
or
test
or
es
mov
push
adc
js
scas
std
sti
fst
data16
sbb
in
das
jge
or
icebp
xchg
(bad)
xor
xlat
outs
mov
mov
or
pop
or
call
fidiv
addr16
and
fdiv
nop
xor
out
inc
bnd
add
push
test
sub
xor
or
or
repnz
gs
fldenv
out
cmp
adc
add
inc
ror
jne
outs
sub
cmp
int
adc
test
sti
(bad)
imul
jno
mov
pop
into
jns
loop
ja
bound
retf
dec
sar
sub
icebp
imul
sub
or
daa
lahf
pop
and
(bad)
das
bound
xor
sbb
sahf
not
push
sub
nop
sub
jne
xor
pop
ins
adc
arpl
pop
mov
scas
in
xlat
sub
push
sti
das
sahf
dec
(bad)
test
sbb
sbb
inc
push
into
dec
out
push
fmul
mov
or
dec
leave
cmp
pop
xor
pop
aam
call
push
ret
loop
dec
add
dec
jle
dec
pop
ds
les
xchg
cmps
or
cwde
rcr
inc
mov
repz
call
scas
mov
pop
outs
ja
xchg
in
ins
into
inc
adc
popf
stos
or
add
clc
xchg
mov
cmc
and
xchg
repz
dec
or
xor
sbb
push
test
scas
movs
out
mov
sar
repnz
cmp
add
mov
add
add
mov
mov
cmp
xchg
adc
in
fadd
push
je
mov
or
mov
mov
rol
dec
push
pop
into
mov
push
mov
mov
ds
push
xor
and
out
add
xlat
xor
psrlw
xchg
rol
lods
sbb
pop
ds
pop
lods
stos
sbb
xchg
adc
enter
(bad)
into
scas
int3
mov
xor
mov
pop
mov
sub
xchg
sub
popa
inc
test
fsubp
inc
pop
and
pop
std
gs
push
push
adc
push
cdq
ins
add
arpl
(bad)
int
arpl
mov
imul
jge
ja
leave
out
push
add
movs
adc
test
mov
cwde
or
xchg
cmp
sbb
inc
je
or
pushf
mov
test
iret
push
mov
cli
sub
sbb
or
retf
shr
xchg
out
jns
out
fs
sbb
xor
fsubp
fmul
imul
sub
sbb
xor
sub
and
mov
xchg
clc
pop
mov
iret
stos
rcl
out
sub
cmps
sbb
pop
in
dec
xchg
or
mov
ret
mov
push
adc
inc
aaa
ja
cld
cmp
cld
aas
fisttp
imul
jge
xor
push
je
lods
pop
idiv
popa
add
aaa
fsub
mov
xchg
retf
or
ds
sub
mov
jmp
jl
out
ror
jbe
and
ss
sbb
push
dec
sub
test
icebp
bound
xor
and
les
cmps
inc
mov
sbb
xor
ucomiss
mov
cmp
push
jo
aaa
fisttp
fcmove
sub
mov
es
neg
leave
aaa
mov
cmp
icebp
aam
sbb
xor
(bad)
adc
les
jmp
inc
add
push
pop
nop
nop
adc
in
cmp
aad
xor
pop
stc
adc
outs
push
mov
popf
in
xor
push
ds
pusha
and
xlat
dec
sbb
dec
adc
lea
jge
xchg
(bad)
stc
adc
mov
or
test
(bad)
(bad)
fnsave
xor
jmp
mov
fnstcw
jnp
js
js
stos
stc
inc
es
jle
xchg
pop
aaa
mov
test
push
push
dec
inc
add
arpl
mov
jo
dec
fsubr
mov
xchg
xor
call
pushf
fistp
sub
je
adc
das
js
mov
pop
dec
stc
sub
add
in
hlt
call
sar
int3
inc
jp
outs
jmp
dec
je
arpl
or
arpl
lods
loopne
repnz
dec
popa
dec
out
or
test
jp
fsub
sub
add
in
loopne
cmp
not
hlt
mov
xor
scas
hlt
mov
inc
in
cmp
sub
or
das
add
mov
lock
add
(bad)
aam
lahf
xor
xor
(bad)
(bad)
leave
fldcw
jmp
sbb
mov
add
add
inc
jb
daa
(bad)
ret
xor
jp
adc
cmp
mov
retf
stos
push
dec
adc
leave
movs
call
push
jb
enter
adc
dec
fsub
outs
sub
mov
mov
mov
or
and
lahf
cmp
enter
sbb
push
mov
pop
mov
fs
cdq
fcmovu
and
pop
xchg
adc
jge
dec
(bad)
mov
popf
dec
push
cmps
and
js
cs
popa
sbb
inc
adc
dec
cmp
psubq
and
aad
adc
adc
imul
or
dec
pop
sbb
dec
mov
add
xchg
jae
cmp
sub
ss
jmp
stos
arpl
aaa
cmps
and
mov
test
sub
mov
aaa
int3
sub
lea
dec
adc
in
test
adc
les
adc
femms
mov
sar
or
add
fwait
xor
mov
xor
mov
daa
sub
inc
retf
sbb
cmp
imul
loopne
jmp
test
xchg
mov
gs
push
dec
repnz
mov
dec
in
inc
loop
aas
fsub
inc
mov
icebp
push
pop
mov
and
xor
hlt
cmp
mov
xchg
mov
push
jb
sbb
mov
jmp
and
out
dec
mov
adc
dec
push
adc
dec
mov
(bad)
into
push
lock
cmps
dec
push
pop
(bad)
xor
xchg
repz
cmc
adc
nop
sbb
call
jb
imul
push
call
(bad)
mov
into
ds
outs
out
xchg
jb
mov
sub
add
dec
(bad)
xchg
icebp
dec
lock
mov
sub
jne
int3
pop
outs
and
xchg
xor
neg
leave
pushf
cmp
aad
mov
sub
push
(bad)
xlat
fist
mov
xlat
std
sti
mov
mov
scas
out
movs
aad
push
mov
popa
(bad)
aam
push
mov
imul
mov
pop
out
mov
in
or
jecxz
xor
inc
inc
sbb
stc
and
in
ins
sub
daa
dec
aas
dec
fwait
dec
fcmovnb
cmp
adc
ja
sti
push
pop
jne
mov
cmc
mov
das
fmul
aam
push
fwait
loop
lock
repnz
cli
mov
pop
out
mov
xchg
xchg
enter
adc
sbb
inc
jns
add
jl
mov
pop
test
retf
pushf
(bad)
test
loope
mov
lods
ds
pop
adc
mov
inc
out
push
das
mov
lds
adc
mov
or
outs
aas
mov
xlat
(bad)
scas
shr
mov
call
mov
fmul
cmps
cs
xor
dec
hlt
push
in
push
sub
push
mov
repnz
int3
sbb
or
ret
inc
cmp
(bad)
rcl
popa
sbb
dec
repnz
or
cmp
pop
in
adc
(bad)
(bad)
pop
dec
leave
les
xor
ins
jp
fmul
pop
ret
mov
and
push
sub
out
xor
mov
adc
jp
dec
fs
cmp
cld
scas
mov
sbb
sbb
mov
inc
jne
mov
sub
xor
(bad)
jae
int3
cmc
and
es
inc
jge
dec
inc
push
(bad)
mov
pop
xchg
or
jp
and
and
mov
mov
sti
es
dec
add
adc
adc
cmp
es
leave
lock
sbb
dec
mov
sti
idiv
xchg
add
ins
mov
cmp
pushf
cmp
add
out
add
jb
ficom
mov
lock
mov
fidivr
rcl
lods
sbb
enter
fld
out
sbb
mov
stos
adc
hlt
pop
mov
icebp
imul
ins
leave
cmps
lea
sbb
test
cdq
xchg
add
mov
sub
sti
data16
sbb
and
push
enter
ds
ret
push
cwde
push
mov
sub
xchg
sti
nop
adc
xor
pop
adc
add
lods
sub
pushf
inc
ror
les
pop
das
cmp
popa
jmp
mov
mov
dec
cmc
sub
sub
sbb
sbb
or
and
mov
xchg
rcl
cmps
xor
arpl
sbb
inc
(bad)
xchg
or
sti
cld
in
xor
imul
jo
out
enter
push
dec
shr
xor
inc
xor
(bad)
pop
aaa
push
dec
inc
dec
jb
cmp
jg
shl
add
add
inc
test
out
sub
test
loope
add
add
fadd
xchg
call
(bad)
mov
ins
shl
lea
cmp
test
jecxz
pop
and
mov
mov
cmp
or
fmul
jne
mov
in
inc
gs
sbb
jecxz
push
shl
push
aad
sub
inc
scas
inc
outs
xchg
popf
mov
add
sub
cmp
jmp
ret
out
pop
cli
sbb
xor
rcl
cld
add
test
hlt
in
and
(bad)
or
sub
pop
mov
loope
arpl
xchg
dec
movs
push
rol
push
lods
les
lods
(bad)
pop
mov
into
popa
sub
push
shl
outs
xor
fdiv
test
imul
repnz
add
mov
adc
mov
cmps
arpl
or
sbb
fs
cmp
or
fsubr
sub
pop
stc
dec
cmp
push
popf
outs
int
aad
fdiv
sub
fisttp
add
fmul
int3
xor
(bad)
jno
sbb
xlat
sbb
mov
mov
push
jne
mov
js
mov
leave
push
lds
ins
call
mov
cwde
ins
pop
sub
icebp
mov
int
xchg
mov
xor
in
jbe
ror
push
in
and
sub
retf
cmp
leave
cs
add
cmp
test
retf
mov
jl
fbstp
or
push
mov
and
push
adc
jge
pop
movs
mov
fadd
cmp
lea
cli
ret
jb
daa
sbb
dec
inc
ss
push
ds
pop
and
jge
ja
xor
popw
mov
ret
js
and
cld
scas
sub
pop
sbb
add
outs
outs
or
rol
pop
or
movs
inc
pop
fs
popa
mov
mov
adc
add
fcomip
mov
or
sahf
or
pop
outs
aam
add
add
gs
mov
cmp
cmp
int3
adc
lods
and
repnz
nop
std
xchg
rcr
cmp
rcl
xor
sti
mov
call
call
rcl
daa
or
sbb
xor
or
mov
out
inc
sub
das
mov
jmp
sbb
mov
pop
push
xor
sbb
push
xchg
push
int3
push
push
adc
inc
in
jg
fcmovnb
add
mov
scas
std
mov
and
mov
sub
xor
mov
dec
pop
shl
jae
outs
xor
test
not
mov
fistp
(bad)
das
xor
xchg
add
xor
ins
sub
xor
rol
or
mov
push
mov
(bad)
movs
inc
retf
sar
(bad)
bound
jle
sbb
mov
leave
shl
pop
jno
sub
fld
lods
push
xchg
ins
shl
cmps
jmp
retf
xchg
and
push
dec
out
in
(bad)
mov
push
jmp
fiadd
mov
adc
push
stos
adc
cs
mov
mov
mov
(bad)
gs
stc
xchg
add
xor
arpl
or
pop
push
fwait
call
in
add
or
xchg
stc
xlat
or
dec
pop
mov
repnz
iret
inc
fdivr
inc
int
dec
call
adc
add
jne
sbb
int3
cs
mov
adc
je
stos
inc
test
in
retf
mov
pop
xchg
fs
push
xor
fild
icebp
mov
add
int3
fist
dec
(bad)
repz
into
adc
imul
sbb
fisubr
push
sahf
inc
mov
stos
xchg
lods
out
cli
pop
js
scas
jns
jle
sub
jl
xor
call
inc
popf
mov
lods
sbb
pop
push
shl
push
outs
xor
xlat
in
outs
gs
mov
lds
dec
and
sahf
xchg
test
inc
push
cmp
sar
loope
ficom
sub
add
sbb
or
test
(bad)
cmp
movs
sub
mov
inc
dec
loope
adc
ins
sbb
pop
push
loop
enter
mov
mov
shr
xor
rcl
jb
dec
and
(bad)
adc
mov
cmp
pop
ret
call
dec
and
mov
ins
mov
rcr
sub
dec
je
movs
das
sub
aaa
call
iret
(bad)
data16
sub
jae
call
data16
xchg
shl
push
sbb
adc
mov
dec
jmp
xchg
and
sub
push
mov
outs
test
ret
cmp
lahf
mov
repz
or
push
add
or
imul
sub
sub
sub
pushf
or
fnstenv
or
pop
mov
jne
xchg
das
movs
push
xchg
mov
sbb
inc
or
xor
xchg
pushf
dec
mov
mov
mov
sub
test
lock
retf
and
shl
dec
pop
ret
(bad)
(bad)
es
push
cmp
loope
dec
call
es
push
jg
mov
mov
idiv
ss
out
daa
jl
or
dec
pop
movs
imul
addr16
(bad)
(bad)
sub
push
adc
gs
and
sbb
sub
arpl
cmp
jnp
(bad)
push
xor
nop
and
jg
dec
rol
es
sahf
scas
push
xchg
inc
in
enter
fwait
int3
mov
dec
and
jmp
sbb
repnz
push
cs
es
and
xlat
dec
dec
xor
dec
jae
iret
fldcw
into
mov
push
aad
ins
in
push
repnz
cmp
jp
cmps
push
cmpxchg
mov
mov
cmp
es
pop
mov
jns
cmp
int
nop
or
loop
adc
add
scas
adc
jmp
imul
sbb
sub
leave
daa
jmp
push
stc
ret
ins
dec
cmps
imul
push
or
in
std
retf
or
aad
pop
or
jns
call
(bad)
in
cmp
clc
test
retf
dec
and
cmp
cmp
fdivr
inc
cwde
mov
jnp
daa
mov
(bad)
in
push
push
jmp
dec
cdq
sub
push
(bad)
mov
mov
mov
imul
call
dec
add
enter
icebp
push
jg
sub
scas
cmp
jne
fisubr
ror
frstpm(287
sub
dec
jecxz
dec
adc
pop
int3
xor
or
xchg
adc
js
cmc
lods
mov
and
add
loope
xchg
sbb
mov
xor
xor
jp
mov
pop
jge
add
mov
shr
cwde
fcom
lea
adc
xor
lds
jmp
int
jle
mov
psllq
rol
pop
add
test
ds
pop
push
scas
gs
jp
in
add
(bad)
sbb
aas
(bad)
loopne
mov
jb
and
repz
pop
retf
fwait
sub
retf
leave
aas
movs
std
(bad)
rcl
mov
call
fs
mov
xchg
xchg
cmps
fistp
pop
std
hlt
scas
jo
or
in
cdq
retf
sub
mov
mov
dec
loopne
cmp
sbb
push
in
push
es
out
pop
cwde
imul
lods
in
(bad)
dec
and
push
push
clc
cmp
xchg
add
mov
adc
cld
mov
pop
fptan
jg
dec
mov
call
rol
inc
and
dec
or
icebp
pop
pop
inc
mov
(bad)
mov
sbb
add
and
sti
pop
test
rcr
push
rol
je
inc
hlt
icebp
or
out
push
or
sub
or
loope
sbb
retf
inc
inc
or
xchg
pop
js
dec
pop
in
push
add
pop
fist
jae
jle
cmp
bound
shl
mov
repnz
jge
mov
mov
dec
aam
(bad)
fiadd
xor
dec
dec
iret
loop
push
clc
xor
cld
nop
rcl
pop
popf
in
sbb
cmp
(bad)
mov
es
sbb
and
and
push
aad
jbe
addr16
fnsave
pusha
fdivr
mov
ds
sbb
push
loopne
movs
add
stc
mov
cmp
cld
add
fisttp
and
addr16
cdq
sti
push
jae
mov
cmp
inc
pop
aas
inc
stos
sti
out
sti
mov
push
xchg
pop
xchg
ret
movs
push
push
loopne
and
sub
retf
pop
xchg
fld
adc
cmps
jo
(bad)
fwait
or
icebp
stc
stos
jne
jbe
ror
es
std
ss
loop
or
mov
sub
sub
jge
sub
mov
cmp
cmps
mov
or
xchg
js
into
addr16
movs
lahf
outs
js
xlat
sub
add
jmp
inc
xchg
mov
popa
cmp
fwait
in
retf
imul
push
popa
nop
inc
ds
pop
dec
sub
sbb
cmps
pop
mov
int3
fwait
mov
into
retf
pop
jns
or
xchg
mov
inc
sti
dec
and
mov
arpl
dec
pushf
mov
inc
jnp
(bad)
in
fild
sub
aas
xchg
cmp
xlat
pop
mov
ret
adc
jmp
xor
xchg
mov
cmp
xlat
mov
aas
pop
sbb
cmp
jecxz
imul
mov
retf
push
pop
not
out
or
mov
es
data16
dec
jp
pop
mov
dec
sbb
shr
out
ja
pop
out
enter
enter
mov
aam
mov
inc
mov
movs
(bad)
fbstp
xor
jno
(bad)
js
cmp
data16
inc
cwde
out
inc
push
push
push
fnsave
(bad)
xlat
(bad)
pop
jp
push
out
shr
call
cli
dec
push
pop
pusha
mov
arpl
imul
bound
cli
mov
xchg
mov
pop
mov
js
xchg
adc
push
and
xchg
pop
push
inc
pop
sub
pop
push
dec
pushf
mov
jbe
daa
inc
movs
iret
aas
mov
popa
mov
push
sbb
sti
imul
repnz
ret
jmp
aad
and
mov
pop
shl
aas
bound
or
push
jecxz
push
rcl
mov
scas
sbb
out
inc
xor
mov
in
adc
fld
int3
shr
push
push
fisub
pop
leave
mov
and
add
inc
bound
cli
movaps
test
imul
jg
xchg
mov
xchg
push
shr
or
and
cmp
cmp
mov
out
push
xor
push
adc
lods
popa
mov
xor
xchg
ins
popa
fmul
ret
cwde
popa
das
jge
mov
mov
mov
mov
loop
rol
cmc
int3
add
fcom
dec
sbb
pop
fmulp
popa
sbb
sahf
sub
fstp
sbb
scas
cli
mov
stc
push
icebp
loope
mov
and
in
scas
into
(bad)
inc
(bad)
mov
xchg
dec
cs
push
outs
icebp
push
inc
push
mov
mov
(bad)
shl
popa
inc
dec
leave
cmc
cmp
mov
in
add
fistp
sbb
out
gs
inc
jno
jecxz
and
loope
mov
dec
mov
add
or
mov
cld
cmps
retf
jns
movs
mov
jno
cmps
jne
test
pop
call
lods
xchg
fist
inc
mov
xchg
mov
dec
mov
xor
mov
cmp
div
mov
(bad)
test
inc
leave
jge
daa
cmp
push
add
mov
aas
pop
call
sbb
push
jecxz
cdq
xor
adc
test
fmul
shl
ss
dec
popf
test
mov
pop
test
inc
jg
mov
add
out
xchg
inc
scas
(bad)
jns
sti
or
mov
mov
mov
cmp
repnz
sub
pop
mov
sbb
sbb
int3
jle
outs
sub
adc
sar
ficom
cmc
dec
mov
pop
push
mov
scas
outs
add
mov
test
xchg
push
jbe
fld
or
outs
xchg
sbb
push
hlt
lahf
test
inc
inc
ins
lea
clc
mov
es
retf
rcr
je
and
xchg
dec
push
mov
push
mov
and
shl
sti
retf
and
aaa
xchg
sub
sbb
movs
and
aas
outs
ss
ss
(bad)
xchg
inc
or
jno
cmp
ins
imul
inc
jo
popa
xchg
ja
push
ret
mov
mov
into
jnp
and
outs
fstp
aad
mov
jp
jno
xor
fisttp
shl
sbb
(bad)
sub
arpl
out
test
shr
lahf
aad
inc
xor
jb
pop
mov
repnz
or
push
stc
std
(bad)
push
inc
jg
pop
cmp
and
sti
mov
xor
sbb
(bad)
dec
ret
outs
adc
mov
popa
retf
ss
mov
xor
call
dec
repz
sar
sub
cli
inc
mov
js
sub
scas
loopne
repz
cs
sub
pop
mov
fnsave
retf
push
call
jae
mov
mov
test
mov
das
enter
cwde
popa
mov
mov
div
gs
push
paddb
in
sub
mov
inc
xchg
mov
adc
dec
les
sbb
(bad)
rol
or
dec
push
jns
pop
stos
adc
hlt
mov
stc
aas
sub
stos
bound
sbb
add
push
ficomp
sbb
cmps
jmp
cwde
ret
mov
outs
cmps
dec
mov
xchg
adc
stos
pop
jmp
int3
mov
add
cwde
cmp
rcl
jb
xlat
inc
ror
sub
es
fwait
mov
xchg
neg
or
mov
xchg
mov
push
mov
push
or
add
xor
adc
mov
jp
jmp
and
std
in
and
sbb
sti
sbb
mov
adc
xor
jge
nop
(bad)
(bad)
xchg
jl
in
pop
inc
push
mov
inc
jp
lea
mov
dec
push
ins
aam
adc
stos
add
lds
xor
push
add
xchg
sub
and
push
push
or
sti
add
call
lods
push
cmp
mov
hlt
loop
aaa
mov
loopne
xlat
jb
cmps
pop
in
mov
inc
scas
jge
inc
nop
or
xchg
and
mov
or
mov
imul
out
mov
add
mov
sbb
icebp
inc
into
adc
inc
or
xchg
push
pop
and
adc
mov
pop
cmc
xor
out
mov
lods
jmp
ret
lds
pop
sbb
pop
gs
lods
outs
inc
test
(bad)
(bad)
sbb
sbb
jmp
or
or
xchg
jae
sbb
pop
popa
jo
jnp
inc
aaa
dec
push
cwde
jp
jmp
(bad)
data16
bound
movs
lods
cli
inc
leave
cmps
not
pop
mov
xor
mov
mov
pop
dec
cmc
jp
(bad)
out
inc
xor
popf
cmp
inc
enter
sub
sub
sar
and
mov
inc
cmp
adc
mov
pop
ja
cmp
ret
jmp
imul
add
mov
mov
dec
and
fbld
sbb
in
mov
div
push
pusha
jmp
fwait
ror
add
mov
mov
xor
leave
scas
bound
dec
push
mov
js
push
std
dec
pop
and
mov
dec
xor
arpl
ds
mov
and
jecxz
inc
add
cmc
adc
and
inc
push
fdivr
and
mov
loope
or
sub
xchg
cs
dec
dec
jp
and
mov
mov
out
aas
pop
into
ins
sub
ins
sub
or
lock
push
inc
adc
popf
(bad)
clc
bound
mov
imul
pop
add
push
jbe
push
cwde
mov
das
idiv
xor
in
ret
ds
pop
pop
cmp
les
jmp
add
aam
push
in
and
out
fwait
sahf
int3
retf
sub
dec
dec
inc
push
dec
xchg
fstp
(bad)
adc
imul
dec
cmp
cli
das
sysexit
test
jmp
dec
jmp
ins
sub
xchg
push
jno
or
int
movs
ror
repz
pop
arpl
ins
add
repnz
ror
fdivr
xchg
sahf
std
aas
push
test
sub
mov
cmps
ins
sbb
cmp
pop
dec
and
(bad)
aaa
ins
mov
jp
fsub
jbe
add
pop
adc
sub
addr16
cmps
xchg
xchg
pop
xor
pop
bound
or
test
or
jecxz
std
cmps
inc
scas
adc
inc
adc
out
cmp
pushf
sbb
out
inc
jmp
jmp
push
(bad)
and
repz
xchg
jmp
popa
in
xor
dec
xchg
div
aas
mov
mov
out
dec
fadd
aaa
and
inc
xchg
aam
enter
shr
sbb
out
sbb
ja
jmp
mov
stos
(bad)
in
xchg
ins
cmp
retf
les
js
mov
adc
(bad)
mul
dec
fstp
xchg
retf
loop
push
fnstsw
cmp
enter
and
fidivr
mov
mov
dec
cdq
out
scas
aad
dec
xchg
(bad)
adc
lods
inc
xchg
rol
jnp
jne
test
shl
ins
mov
dec
push
push
push
adc
je
lea
(bad)
call
push
(bad)
pop
stos
scas
mov
inc
dec
cmps
cmp
aas
xor
or
cmp
repnz
inc
sbb
mov
inc
or
stos
add
sbb
push
out
add
psrad
sbb
loopne
out
dec
(bad)
iret
pop
push
repnz
or
(bad)
out
add
pop
cli
adc
mov
sub
push
inc
inc
jb
aam
dec
mov
out
dec
sbb
ins
jg
jb
jb
xchg
pop
push
iret
add
scas
ret
dec
jmp
jle
push
pop
repz
js
xchg
xchg
xchg
jge
(bad)
ja
int
mov
xchg
popf
ror
or
stos
push
out
push
or
adc
stc
fidiv
xchg
outs
scas
xchg
(bad)
test
fcom
xor
inc
xchg
jle
xchg
dec
dec
movs
std
sti
mov
ja
add
int
inc
pop
rol
xor
loopne
lock
cmp
int
mov
bound
dec
xchg
mov
test
sub
(bad)
mov
mov
test
or
cmc
clc
mov
xor
add
cmp
bound
js
sub
xchg
dec
or
loopne
popa
(bad)
ret
aas
rol
xchg
mov
sub
in
pushf
mov
test
jo
dec
and
inc
sbb
stos
shl
mov
cmp
pop
mov
je
pop
mov
aad
fstp
fxch
cmp
enter
and
jge
(bad)
pop
mov
inc
pop
(bad)
out
ss
mov
clc
xchg
scas
jne
es
inc
ins
mov
inc
arpl
cmps
sub
mov
loope
add
shl
pushf
pop
or
mov
(bad)
mov
mov
inc
add
push
mov
and
adc
loopne
arpl
and
in
sbb
stos
jp
ficom
add
jmp
xchg
mov
jmp
retf
sbb
adc
rcr
ja
or
dec
cmp
push
and
fist
stos
xor
push
mov
xchg
femms
outs
mov
jae
and
test
adc
bound
int
fistp
xor
out
pop
cmp
add
aaa
test
pushf
stc
push
xlat
lahf
dec
cmp
mov
xor
push
pop
(bad)
mov
or
loopne
sub
mul
call
xchg
or
xchg
cld
test
imul
xchg
scas
push
fisub
ja
dec
mov
aam
xchg
adc
ds
and
int
fstp
mov
outs
jge
pop
adc
adc
inc
inc
enter
mov
xchg
arpl
mov
in
dec
les
in
adc
fs
jno
fsub
jns
jecxz
push
clc
inc
movs
sub
fs
jle
mov
xchg
mov
jnp
pop
cmp
je
(bad)
movs
ss
sahf
and
mov
add
sar
movs
rcl
jmp
push
push
xchg
add
xchg
mov
adc
push
ja
das
and
repz
cld
scas
pop
fwait
gs
movs
lods
mov
ss
inc
popf
(bad)
pusha
cwde
jle
loopne
mov
sti
and
sbb
dec
mov
movs
lods
xor
push
sub
or
dec
ss
pop
out
je
or
xchg
aam
popa
cmps
retf
test
xchg
push
xchg
fldenv
mov
pop
mov
jecxz
cmps
sub
sti
push
jge
iret
pusha
jecxz
in
(bad)
lods
mov
jo
imul
lahf
mov
ja
mov
pop
les
retf
call
mov
test
(bad)
mov
rol
inc
mov
sub
(bad)
sub
std
enter
push
outs
movs
dec
jae
push
lds
xchg
add
inc
imul
jb
or
cli
mov
hlt
pop
sbb
sub
dec
pop
sub
jmp
xor
stc
jnp
or
add
outs
nop
add
test
push
adc
mov
mov
test
cdq
repnz
adc
xor
loope
fsubr
sbb
cmp
fmul
and
fcomp
mov
(bad)
fstp
pop
push
jle
mov
sahf
cmp
loope
fimul
push
dec
dec
call
gs
mov
enter
mov
nop
add
sar
scas
cld
inc
or
push
test
mov
nop
in
lahf
cmp
lods
ret
add
push
xchg
or
xchg
lods
xchg
inc
enter
leave
in
icebp
mov
rol
outs
sub
adc
enter
cmp
retf
addr16
dec
sub
mov
dec
push
xor
loop
arpl
popa
aaa
fwait
icebp
push
je
push
outs
fist
pop
pop
sub
popf
sub
and
mov
int
sbb
aam
sub
xor
lahf
movs
sbb
mov
(bad)
jp
div
call
cmp
rol
cmps
mov
mov
in
jle
out
icebp
jl
pop
pop
jl
pop
retf
nop
pop
clc
cmp
inc
xchg
add
fadd
jo
ret
aas
xchg
mov
push
out
sbb
xchg
popa
repnz
cmps
fstp
mov
test
cwde
dec
in
or
or
daa
xor
mov
pusha
pop
dec
in
adc
cmp
dec
inc
outs
cld
ins
push
and
or
mov
jbe
pop
inc
jb
jb
cmp
inc
dec
mov
jns
scas
inc
imul
xor
and
ds
pop
add
xor
daa
push
jmp
adc
sbb
pop
test
push
pop
scas
fld
jmp
jbe
fprem
scas
jo
fimul
mov
add
xor
std
xchg
clc
push
(bad)
pop
sub
(bad)
data16
retf
cmps
das
iret
arpl
mov
pop
aad
jl
or
movs
arpl
iret
adc
fs
hlt
stos
sub
pushf
iret
jmp
nop
adc
div
add
jns
mov
fst
test
in
adc
inc
stos
xlat
lods
loop
popf
imul
shl
ss
retf
gs
mov
call
jle
mov
mov
sbb
bound
mov
adc
sahf
sbb
repz
(bad)
movs
outs
lds
jb
rcl
push
or
mov
ret
in
(bad)
mov
jmp
and
stos
adc
sub
shr
(bad)
dec
push
sbb
out
repz
cmp
add
ret
imul
shr
rcr
mov
mov
(bad)
mov
outs
inc
mov
test
xchg
(bad)
pop
imul
gs
and
scas
or
adc
jb
aaa
dec
cdq
inc
daa
cdq
daa
inc
xchg
sbb
pop
ret
push
ret
and
or
pop
jle
adc
mov
mov
out
(bad)
mov
add
inc
imul
cs
loop
scas
jno
lods
aas
in
cli
in
shr
jecxz
mov
adc
push
leave
neg
rcr
lods
inc
xchg
(bad)
in
xchg
fnsave
cmps
dec
enter
mov
in
sar
sbb
cmp
jg
call
mov
dec
leave
push
bsr
ret
imul
cmp
gs
call
mov
dec
sub
and
bound
mov
cld
add
jle
stos
pop
adc
aaa
cmp
imul
idiv
jb
loop
mov
push
mov
lock
cmp
rol
mov
inc
pushf
lds
mov
xchg
cmp
cdq
dec
addr16
sbb
(bad)
cmps
(bad)
hlt
ja
mov
pop
mov
daa
inc
mov
fdiv
rcr
xor
loopne
inc
fsubr
jg
cmp
mov
adc
dec
aam
xchg
pop
inc
(bad)
push
jl
pop
loop
clc
and
stos
enter
sub
sub
push
bound
push
jno
aad
icebp
(bad)
and
sar
mov
jbe
jp
push
fwait
cmp
adc
rol
add
addr16
or
dec
cdq
rol
add
push
mov
js
(bad)
pop
mov
pop
jg
test
fnsave
lock
pop
sbb
xor
ficomp
pop
cmp
jne
je
je
xchg
outs
dec
popf
dec
cmp
dec
cmp
loope
jecxz
in
xor
aad
pop
xchg
out
cs
movs
mov
hlt
mov
loope
adc
push
clc
ficom
mov
jp
mov
sbb
pop
dec
jnp
or
int
ins
loope
lds
loop
cmps
test
retf
dec
jle
mov
inc
jne
jns
dec
jnp
lahf
sbb
lahf
stos
sub
jle
inc
pop
adc
jmp
dec
cmp
ins
mov
mov
push
sub
sbb
(bad)
fidiv
inc
adc
jno
or
icebp
sti
sub
jno
lods
(bad)
cld
ins
cmp
fbld
jmp
jg
and
and
bound
aam
outs
ds
ror
jb
add
dec
loop
dec
mov
hlt
inc
jne
fistp
ins
ins
push
xchg
mov
dec
sahf
cmps
add
stos
add
test
dec
jge
lea
dec
and
movs
je
daa
and
mov
sbb
xor
jecxz
ds
frstor
repz
inc
jo
sub
ins
mov
js
mov
xor
not
jo
pop
sub
xchg
ds
imul
sub
dec
aaa
add
cmp
xor
out
cli
mov
das
outs
je
loope
jae
lods
call
add
mov
inc
loopne
out
jg
pop
push
jne
fs
aas
loop
mov
ret
xchg
mov
lahf
push
dec
mov
pusha
and
dec
iret
dec
jg
and
bound
add
mov
jl
and
add
sti
or
push
movs
loop
mov
out
jb
jmp
mov
(bad)
cmp
xlat
adc
in
or
add
mov
(bad)
les
adc
daa
add
add
mov
dec
mov
popa
out
ds
call
mov
clc
enter
push
aam
jmp
lahf
gs
(bad)
shr
sub
mov
gs
dec
jne
adc
jmp
nop
pop
test
addr16
mov
lods
inc
adc
cmp
fisub
and
or
jb
jp
test
imul
or
cmp
inc
pop
(bad)
mov
xchg
pop
push
pop
push
hlt
(bad)
or
xchg
sbb
sbb
add
out
shl
jmp
pop
adc
sbb
data16
add
out
leave
inc
(bad)
fdivr
mov
mov
push
sub
gs
ror
mov
jbe
pop
shl
cmp
push
fisub
aas
jg
cwde
pop
jo
out
push
cmp
imul
cmp
pop
lea
jnp
jo
ds
(bad)
cmp
and
push
cmp
mov
push
push
mov
mov
jne
cmps
outs
adc
adc
cmp
retf
mov
bound
or
in
ror
(bad)
push
push
sbb
push
sar
bound
pop
out
fs
lds
mov
push
repnz
std
pushf
stos
je
jne
(bad)
xor
dec
xchg
cli
arpl
lock
mov
adc
inc
and
adc
xchg
or
movs
inc
push
jle
jo
xor
jbe
imul
and
scas
and
dec
pop
rcr
cmps
aaa
jo
in
shl
sbb
xchg
leave
pop
daa
adc
cwde
shl
call
lock
stos
jmp
pop
test
sbb
(bad)
ins
pushf
push
jno
push
loopne
cli
add
ds
cmps
shl
lods
cmp
loop
fcmovu
daa
shl
ins
retf
hlt
leave
sub
(bad)
pop
jb
jl
stos
bnd
outs
ror
inc
shl
sbb
adc
xchg
push
push
mov
call
ficomp
cs
das
jbe
aaa
or
xchg
sub
movs
pop
inc
pop
jae
sbb
in
sbb
add
adc
adc
scas
rol
mov
dec
jmp
add
cmc
movs
dec
ss
les
and
add
enter
dec
inc
dec
push
mov
scas
cmp
(bad)
loopne
repnz
test
adc
cmp
lahf
cmp
fwait
fs
adc
fidivr
das
jae
sbb
(bad)
push
fcom
jae
in
jb
or
and
les
fs
pop
out
inc
add
call
(bad)
inc
cmps
xor
scas
aas
push
clc
sti
jnp
pop
mov
into
mov
daa
adc
outs
fsubr
loope
in
and
adc
test
or
enter
pop
fcomp
leave
clc
ja
test
mov
repz
push
sub
in
movs
sbb
push
and
js
xor
fs
mov
ins
sbb
jle
jmp
or
push
ret
test
pop
jae
add
aam
push
inc
int3
(bad)
fadd
je
dec
mov
xchg
cmp
jg
and
imul
and
ins
xchg
in
scas
and
cmps
ins
pop
sahf
outs
stos
add
ret
ret
ins
rcr
je
fiadd
xchg
pop
add
call
and
test
je
push
and
das
add
es
in
ret
mov
xchg
leave
enter
ficomp
scas
lea
repnz
jp
jno
das
sbb
mov
test
and
inc
and
dec
aam
test
(bad)
pop
test
adc
pop
add
sar
cmp
mov
pushf
adc
hlt
adc
or
mov
sbb
mov
or
push
jg
push
sbb
push
out
or
mov
sub
loop
fs
mov
hlt
pop
fs
enter
ret
enter
arpl
stc
xlat
inc
cld
(bad)
addr16
sub
cmp
push
(bad)
ret
push
jg
aam
sbb
push
or
into
xor
aaa
leave
outs
cli
test
jmp
aas
mov
adc
pop
loope
jns
add
and
pop
dec
mov
xor
mov
(bad)
inc
inc
mov
(bad)
pop
retf
cld
jns
sub
call
sbb
stc
cmp
fmulp
retf
dec
push
dec
or
clc
xor
add
mov
mov
fldcw
dec
pop
lea
stos
cmp
xor
and
xchg
js
enter
push
lds
ds
test
xchg
outs
ret
inc
xchg
xor
xor
cmc
pop
scas
addr16
xor
test
push
outs
xor
enter
icebp
dec
and
mov
jno
sbb
iret
sar
(bad)
mov
clc
int
(bad)
cmc
lods
add
mov
mov
in
or
cwde
js
ins
and
cmps
lea
out
outs
inc
lods
cld
and
and
jne
test
das
psrld
mov
jge
xchg
sub
sub
fadd
inc
mov
cmp
arpl
mov
mov
pop
jge
out
(bad)
jmp
aam
aaa
jmp
push
fcmovnb
retf
mov
nop
aam
test
sbb
adc
int
push
daa
and
cmp
cli
pop
outs
adc
iret
lods
mov
sbb
mov
and
xlat
sub
jp
xchg
mov
pop
lea
cld
aaa
push
rcr
xchg
push
pop
mov
push
dec
dec
aam
push
add
ja
and
(bad)
jecxz
add
xor
pushf
test
jecxz
pusha
retf
sbb
(bad)
loopne
jle
ins
adc
ja
ror
push
inc
sbb
(bad)
outs
cdq
or
(bad)
add
cwde
mov
ja
(bad)
add
mov
loope
or
out
in
jne
or
sbb
sbb
pop
stos
addr16
sbb
aad
xchg
data16
xor
mov
ss
(bad)
psraw
add
std
sub
fld
dec
push
xchg
call
adc
call
mov
mov
jo
xchg
neg
add
and
cmp
or
mov
mov
jmp
fstp
in
jae
ins
sub
mov
or
loopne
xor
or
mov
push
and
mov
into
sbb
pop
fidiv
es
shl
out
pop
shr
mov
sbb
cld
cmp
pop
into
ja
les
mov
repz
add
leave
call
dec
add
ins
test
gs
jbe
sbb
push
dec
and
jno
mov
mov
push
sub
pop
stos
repz
jo
test
dec
and
sbb
jmp
mov
jbe
(bad)
fstp
mov
mov
in
adc
scas
(bad)
add
div
dec
aas
dec
repz
icebp
xor
pop
jno
jno
rcr
inc
mov
nop
dec
jle
sub
ret
adc
(bad)
aam
aaa
lahf
inc
dec
nop
or
or
ret
pop
jmp
dec
mov
and
push
fnstcw
iret
xchg
jno
cld
mov
(bad)
clc
into
(bad)
sbb
sbb
hlt
push
dec
aam
cmp
sbb
dec
and
in
(bad)
cdq
adc
jmp
cmovle
stos
mov
or
sti
jo
into
dec
and
xchg
cmovbe
inc
(bad)
cmps
sti
fsubr
pop
xlat
mov
dec
and
lods
fst
repnz
cwde
jo
sbb
imul
cs
adc
stc
add
int3
push
jmp
fstp
ss
mov
call
and
call
ret
inc
scas
not
jecxz
mov
fwait
popf
call
dec
and
pop
fist
push
fbld
sbb
push
dec
int3
in
mov
popa
xchg
(bad)
cli
inc
imul
das
retf
inc
jg
cmps
popa
mov
mov
cmps
mov
call
loope
ja
rcr
outs
shl
je
or
xor
and
xor
shl
ds
movs
vaddsubps
pop
in
sbb
outs
or
stos
add
leave
jecxz
cmp
xlat
lahf
mov
xlat
fs
adc
rcr
ret
cmp
jnp
lock
fsubr
or
jne
sub
sti
mov
out
repnz
and
mov
iret
add
push
div
sub
or
(bad)
sbb
cmp
mov
adc
push
jle
mov
mov
sbb
jo
sbb
sbb
ins
sbb
and
aas
push
inc
adc
mov
jl
add
mov
jno
cmc
sbb
jp
stos
rol
add
jmp
xor
push
js
dec
mov
adc
jo
inc
test
test
cmp
push
fdiv
sbb
pop
pusha
adc
cdq
add
jo
jns
rcl
cs
pushf
ds
fidivr
(bad)
out
mov
sub
xor
inc
add
push
mov
daa
imul
ret
fidivr
jg
or
retf
pop
ja
out
movs
mov
clc
dec
call
(bad)
lea
cmp
or
sub
jge
push
pop
mov
lahf
movs
xor
inc
cmp
test
mov
fs
nop
clc
xchg
into
(bad)
adc
(bad)
cmp
mov
sbb
xchg
inc
add
stos
mov
cmps
xor
cwde
adc
sbb
xchg
fstp
and
pop
push
add
inc
cdq
outs
ror
in
call
popa
inc
sub
movs
leave
and
repnz
retf
pop
(bad)
in
popa
xchg
in
cs
and
mov
(bad)
xor
stos
jno
dec
sub
add
xor
add
cld
cmp
(bad)
scas
sub
call
repz
adc
inc
xchg
into
popf
or
dec
xchg
es
or
sub
dec
xchg
add
push
cmp
or
scas
cmp
(bad)
push
call
aad
sub
cmp
in
xlat
cmp
outs
mov
push
cs
inc
adc
inc
or
jo
leave
pop
leave
inc
mov
mov
fld
xor
xor
push
mov
outs
repnz
push
out
test
popa
stos
dec
pop
lods
xchg
fnsave
fimul
mov
mov
jae
jo
hlt
rcl
push
add
adc
inc
movs
inc
cmps
movs
sahf
xchg
cmps
and
sbb
sahf
cmp
push
stos
loop
call
jb
mov
pop
push
(bad)
lods
inc
pop
inc
popa
shl
push
hlt
xor
pop
xor
rcl
sbb
daa
xor
call
xor
push
jno
push
fwait
pop
(bad)
retf
and
push
jns
mov
and
data16
lock
hlt
xchg
lods
dec
add
jae
pop
and
cmp
mov
mov
movs
arpl
and
dec
retf
retf
sar
push
xchg
jmp
adc
dec
into
sti
xor
inc
aaa
and
dec
icebp
xor
push
fbstp
out
(bad)
pusha
sub
and
mov
dec
movs
js
mov
lods
cld
pop
mov
jmp
mov
xlat
inc
hlt
fcmovb
xor
enter
pop
sub
push
xchg
mov
sahf
in
ror
dec
push
jp
adc
dec
cs
bound
retf
xor
push
test
and
xchg
xchg
cli
mov
xchg
cmc
mov
cmp
jo
xchg
loop
imul
xchg
cmp
jg
or
stos
fmul
dec
ds
(bad)
pop
dec
out
push
jmp
jnp
fcom
sbb
scas
js
or
(bad)
fisubr
add
sbb
sub
mov
xchg
mov
cmp
sahf
mov
dec
or
push
fisub
dec
popf
ins
imul
popf
daa
scas
xchg
das
xchg
fs
lods
fsubr
pushf
aaa
leave
adc
adc
fwait
jb
inc
dec
js
xchg
scas
data16
xchg
(bad)
popa
idiv
pop
fwait
add
push
nop
xor
mov
or
cmc
mov
mov
or
imul
mov
fs
sub
mov
repz
das
mov
mov
jb
sti
imul
cdq
aas
pusha
sbb
pop
push
pop
shl
call
inc
dec
and
in
sub
fild
jns
and
or
daa
push
add
pop
xchg
xlat
push
or
test
es
mov
and
sbb
cld
push
mov
(bad)
mov
inc
push
loope
pop
repnz
ds
and
xlat
sub
cmp
and
sti
nop
jge
outs
mov
addr16
pop
stos
inc
sti
dec
(bad)
add
xchg
add
pusha
repz
popa
cmp
cmp
scas
or
pop
in
xchg
xor
mov
mov
lods
adc
ror
adc
outs
adc
(bad)
cmp
xor
cmc
pop
repz
fiadd
test
rcl
add
je
xchg
pop
inc
sub
mov
ja
movs
xchg
ins
scas
loope
popf
ret
xor
sub
mov
repnz
mov
and
imul
movs
mov
cld
inc
lods
sahf
cmp
loop
sbb
sbb
xchg
data16
int3
icebp
loopne
sub
jnp
xchg
jp
aam
mov
icebp
inc
mov
loope
and
push
mov
out
add
sub
dec
scas
xor
aas
int
cmp
xchg
xchg
jae
push
xchg
adc
jecxz
and
cwde
es
sub
(bad)
jmp
push
outs
push
test
add
xor
inc
cmp
cmp
mov
add
sub
je
addr16
mov
int
dec
sbb
aad
cmp
xchg
arpl
add
(bad)
cmps
fmulp
addr16
ins
in
push
sbb
out
clc
(bad)
rcl
sbb
mov
mov
cmps
pop
and
inc
ja
jl
xor
pop
jo
and
sahf
rcr
(bad)
aad
and
retf
pop
xchg
cli
ror
push
mov
fdivr
add
cmp
aas
or
outs
stos
adc
dec
inc
aas
das
mov
or
mov
push
ret
(bad)
std
dec
ror
xor
pop
mov
push
mov
imul
jmp
shl
jge
aad
add
leave
and
(bad)
jecxz
retf
pop
and
ja
add
xor
push
outs
cdq
ja
(bad)
cmps
ins
mov
jg
(bad)
adc
sub
add
xor
push
setl
retf
and
adc
adc
pop
test
aad
pop
imul
in
or
xor
cmp
pop
mov
adc
je
lods
sub
inc
mov
mov
leave
paddusw
xor
mov
pusha
or
inc
push
sbb
ins
ss
xchg
lds
pop
fcomp
mov
mov
fbld
inc
push
or
jb
call
mov
imul
lea
xor
inc
rcr
adc
(bad)
ficomp
inc
inc
arpl
fisubr
adc
push
cmp
fcom
add
jl
pushf
dec
test
cmp
mov
inc
inc
mov
imul
pushf
sbb
ret
sbb
pop
sbb
and
and
or
adc
push
das
outs
out
sti
mov
dec
jb
mov
xor
sub
mov
push
movs
push
movs
fwait
adc
inc
dec
shl
es
aam
stos
inc
fucom
xchg
(bad)
aad
aaa
jp
push
jecxz
push
inc
jnp
test
mov
retf
inc
enter
loop
aad
sub
fidivr
sar
ins
leave
xchg
call
jne
xchg
(bad)
mov
clc
into
mov
(bad)
inc
test
xchg
in
sub
jae
xchg
add
inc
push
cmp
inc
mov
out
shl
lahf
dec
push
outs
ret
sub
call
xchg
and
mov
aas
mov
sbb
cmp
jmp
add
not
sub
call
inc
jno
inc
mov
pop
dec
fistp
test
or
mov
daa
(bad)
lahf
cmp
and
inc
ss
mov
in
clc
pop
add
arpl
mov
add
dec
cmp
loope
lods
or
dec
lahf
call
add
mov
add
pop
movs
jo
out
(bad)
push
sbb
cmc
sbb
push
mov
ds
fwait
retf
rep
aad
or
mov
sti
sub
imul
xchg
xor
xchg
ret
mov
push
test
jmp
out
in
jmp
mov
ja
int
push
arpl
repz
xchg
mov
sbb
test
inc
sub
(bad)
jnp
mov
push
jmp
inc
int
mov
jno
mov
mov
sbb
out
js
pop
xchg
xor
sbb
jb
pop
(bad)
sbb
(bad)
pop
xchg
inc
cmps
jns
adc
mov
jo
pop
inc
xor
and
mov
cmc
push
mov
xor
cwde
dec
aad
mov
sbb
or
outs
int
lods
jmp
rcl
inc
add
and
sbb
enter
dec
mov
scas
xchg
pop
inc
rcr
xchg
in
outs
(bad)
rcr
rcr
fst
pop
xchg
lahf
push
test
lds
movups
or
cs
inc
data16
push
add
jmp
mov
and
jle
xlat
or
sub
aam
fucomi
cmc
fbld
test
push
mov
iret
mov
mov
arpl
(bad)
pop
out
icebp
or
shl
ret
mov
fist
lds
nop
call
cmp
xor
test
mov
inc
mov
dec
cmp
cwde
and
sbb
lea
cwde
and
pop
movs
dec
jecxz
pop
div
cwde
sub
xor
in
cmc
jge
scas
jle
pop
push
xor
jno
out
les
je
repnz
add
outs
inc
xor
add
es
inc
push
add
cmp
mov
push
repz
push
test
push
scas
call
stc
jne
clc
or
into
in
pop
mov
into
or
loopne
sar
cdq
mov
lahf
imul
mov
(bad)
add
mov
(bad)
pop
imul
sbb
enter
(bad)
jae
retf
fst
xchg
jecxz
out
push
inc
inc
sti
fild
inc
hlt
lds
xchg
dec
shl
mov
jge
in
call
sti
movs
dec
test
add
cmp
mov
nop
imul
sbb
and
jns
add
pop
mov
xchg
dec
imul
icebp
jmp
(bad)
ror
jns
retf
jmp
mov
das
xlat
stos
inc
repz
and
lea
pop
out
outs
lods
and
push
test
outs
loop
jecxz
mov
nop
push
pop
pop
not
into
push
xor
call
pop
imul
fild
stos
ja
inc
cmps
xor
adc
popf
cli
outs
add
dec
test
adc
xor
cmp
push
add
out
out
test
in
rol
adc
jbe
sbb
gs
mov
mov
add
jno
sbb
les
push
sbb
into
cmps
leave
mov
xor
fsubr
adc
sbb
mov
xchg
loopne
lea
sahf
fiadd
jmp
mov
lods
cmps
(bad)
addr16
xchg
push
out
rcr
retf
mov
and
jmp
daa
dec
sub
add
xor
call
and
push
push
test
adc
scas
push
aam
cmc
adc
mov
and
jb
jg
out
clc
icebp
adc
jne
jns
cmp
stos
jle
add
mov
cmp
inc
sub
not
iret
stos
dec
mov
pop
sub
add
xor
std
in
xor
rcr
sub
and
mov
sbb
movs
sub
ins
ret
stos
cmp
outs
mov
push
dec
dec
je
fucompp
add
movs
xor
or
jno
stos
pop
lock
or
mov
sbb
xchg
xchg
mov
test
mov
ja
aam
push
pop
cwde
out
std
fisttp
enter
bound
js
sub
inc
ret
add
push
imul
mov
mov
in
mov
add
jg
add
(bad)
in
or
data16
sub
in
loop
repz
inc
loop
cmp
push
mov
(bad)
call
push
xor
ret
jne
iret
loop
mov
cmp
ffreep
lea
push
inc
sbb
push
add
aam
or
pop
test
jecxz
push
inc
xor
mov
loopne
xor
retf
jno
push
and
fbld
je
test
xchg
cmp
das
sbb
xchg
and
or
push
add
add
push
(bad)
mov
inc
add
xchg
mov
push
push
nop
ror
mov
inc
jge
ss
inc
xor
push
push
adc
movs
inc
sub
test
dec
test
jle
out
and
mov
rcr
jmp
lods
mov
mov
leave
adc
mov
sbb
and
push
fs
cmc
mov
add
push
xor
cmps
adc
stos
scas
arpl
cmp
ins
cmp
adc
js
adc
push
popa
int
es
push
mov
cld
cwde
and
mov
mov
and
dec
mov
retf
das
js
push
and
fistp
push
mov
out
add
cwde
xchg
xchg
xchg
imul
in
jns
popf
jl
imul
fidivr
sbb
scas
pop
push
xchg
sahf
sub
sbb
into
arpl
mov
aaa
mov
fs
scas
loope
xchg
inc
xor
fnsave
pop
or
dec
add
pop
cs
bound
in
movs
xchg
cs
fbld
scas
push
es
pop
mov
mov
(bad)
add
stc
movs
stos
pop
ror
mov
pop
or
sbb
pushf
loop
in
loope
out
mov
adc
pop
dec
mov
and
inc
ret
jno
fnstenv
loopne
xchg
xchg
inc
inc
daa
or
or
dec
push
daa
loope
xchg
add
xchg
cld
scas
ins
sbb
mov
scas
js
mov
cmps
scas
mov
fld
nop
dec
and
cmps
pop
pop
mov
mov
arpl
sub
mov
rcr
(bad)
cmp
pop
xchg
or
(bad)
mov
les
xchg
bound
sbb
adc
push
pop
pusha
jmp
rcr
int3
clc
pop
addr16
ins
test
stc
jmp
stos
inc
xchg
out
inc
test
xchg
xor
xchg
lock
mov
fistp
xchg
push
mov
adc
gs
movs
push
scas
cmp
jnp
xor
mov
fs
inc
imul
adc
mul
test
dec
add
lea
xchg
das
or
dec
fistp
mov
mov
push
(bad)
cs
push
xor
jae
pop
cmp
nop
test
(bad)
sbb
jp
jmp
cmp
jecxz
movs
or
inc
mov
jmp
mov
rcl
pushf
in
push
rol
adc
jb
xchg
cwde
hlt
ds
jae
pop
jle
adc
push
add
push
mov
sub
mov
jg
push
cmps
mov
and
icebp
xor
jecxz
loope
inc
xor
or
in
jle
(bad)
xor
jbe
fs
sub
lds
cmp
pop
dec
ja
test
push
jmp
xchg
scas
enter
jbe
or
and
push
aaa
fs
jns
add
cmp
rcl
outs
pop
and
inc
pop
lahf
inc
push
cmps
movs
retf
daa
cmp
shl
mov
mov
add
xor
jnp
outs
retf
scas
test
sbb
mov
retf
sub
imul
cmp
mov
pop
int3
(bad)
fidiv
push
fidiv
mov
add
jecxz
mov
loope
push
call
cdq
stc
xchg
push
pop
popa
mov
fcmovnb
dec
fadd
xor
cmp
jecxz
jmp
test
and
sub
xor
mov
xchg
push
mov
or
and
scas
and
shl
lea
repz
cmp
iret
or
call
sub
outs
or
xchg
stc
aas
dec
arpl
mov
idiv
sub
fcomip
and
xchg
jge
(bad)
add
mov
aad
add
jmp
out
mov
sbb
cdq
cmp
lods
leave
fadd
mov
sub
mov
stos
jge
cs
sub
xchg
adc
(bad)
mov
cmp
pop
lods
dec
jecxz
jno
sar
enter
mov
(bad)
out
mov
sub
inc
aaa
xor
jne
jg
test
or
and
inc
fisub
fdivp
push
call
mov
pop
cli
mov
xchg
jl
mov
jle
das
push
push
out
sub
out
inc
inc
fwait
xlat
cs
shr
dec
add
(bad)
push
mov
dec
sbb
push
mov
or
adc
lds
or
or
add
sbb
sbb
imul
jnp
pop
mov
jns
imul
retf
cmp
pop
jo
clc
mov
dec
imul
xor
inc
push
or
outs
hlt
xchg
sub
sbb
cwde
mov
adc
pop
movs
in
cmp
and
pop
or
retf
ins
test
pop
mov
mov
push
xchg
push
inc
mov
test
push
test
or
aam
aas
jp
(bad)
ss
arpl
push
mov
dec
dec
stc
lds
and
popa
cwde
pop
(bad)
cmp
pop
repz
xchg
dec
xchg
add
jno
cmps
sbb
jo
mov
stos
das
nop
ins
icebp
dec
jo
cmc
shl
jo
inc
ss
mov
sar
mov
push
pop
lods
mov
test
(bad)
sahf
mov
cmc
jno
cmp
fsubrp
out
mov
or
inc
pop
ins
mov
ficom
call
rcr
test
dec
sbb
inc
(bad)
push
outs
lahf
inc
loope
fwait
stc
test
cmp
retf
push
mov
mov
out
lods
pop
sub
in
test
inc
js
aam
ja
test
retf
shr
lods
push
mov
es
dec
add
add
mov
loope
in
cmc
scas
mov
push
xchg
and
rcr
xor
shr
aad
add
shr
jnp
lahf
mov
mov
or
in
clc
mov
mov
sub
inc
fwait
(bad)
mov
jns
fld
stc
fistp
iret
retf
sahf
and
sar
jb
mov
outs
(bad)
add
push
outs
jne
dec
jmp
out
sbb
xor
in
inc
pop
popa
cmp
ins
jno
repnz
mov
rcr
fmul
lods
iret
lds
gs
nop
call
in
cmp
les
jnp
ins
in
xor
out
in
dec
ss
push
jns
cmp
mov
push
or
fidiv
xor
add
mov
call
aam
sub
jl
lods
imul
cld
mov
nop
or
pop
ror
fwait
add
fstp
sbb
retf
mov
ss
icebp
bsr
xchg
mov
push
inc
add
inc
inc
jecxz
int3
adc
mov
jp
dec
cmp
mov
add
ret
movs
movs
fadd
jnp
xchg
ins
daa
sti
xor
inc
clc
dec
stos
ret
jbe
adc
lock
mov
push
(bad)
aad
das
cli
aas
fmul
lods
push
mov
sbb
push
jmp
test
icebp
pop
dec
mov
jb
cmp
lea
adc
ins
inc
js
test
pop
gs
and
jge
pushf
test
cmps
fisubr
push
pop
sub
or
(bad)
ins
push
jo
sub
sbb
and
(bad)
in
inc
fdiv
arpl
std
xor
fwait
jae
(bad)
js
sub
mov
repnz
clc
adc
adc
mov
bound
(bad)
xor
mov
cdq
mov
push
cmp
jp
xor
sbb
pop
cmps
push
xchg
jmp
pop
adc
cmp
(bad)
imul
imul
adc
lock
jo
dec
sti
mov
mov
pushf
in
cmp
(bad)
cdq
test
cld
mov
push
inc
jp
pop
jg
push
int3
(bad)
and
icebp
pushf
dec
jmp
adc
push
sbb
or
loop
push
in
mov
cmp
push
js
jecxz
test
xchg
inc
and
mov
adc
dec
test
test
and
push
or
add
pop
pop
leave
or
pop
aas
push
loop
fcmovbe
or
pop
je
test
push
mov
sub
stc
xchg
lock
test
ins
or
popf
push
ins
add
bound
and
and
cs
or
jle
or
mov
sbb
jl
mov
jge
mov
sub
cli
mov
lock
dec
ins
push
push
xor
cmp
mov
sbb
push
mov
and
mov
adc
jle
jle
out
bound
dec
pop
mov
cmp
xor
hlt
outs
pop
or
mov
popf
(bad)
pop
mov
push
pop
jns
inc
mov
loop
bound
push
js
push
push
and
mov
dec
inc
int3
dec
aad
(bad)
jmp
iret
xchg
inc
adc
dec
imul
or
(bad)
rep
sar
(bad)
ficom
mov
dec
outs
das
int3
std
sub
rcl
imul
dec
sbb
adc
and
sub
add
push
out
jb
sbb
pop
mov
sbb
adc
sbb
aad
jns
adc
cdq
bound
and
movs
pxor
dec
push
cmp
rcl
jge
dec
cmps
enter
add
std
clc
jmp
mov
sub
jge
ins
test
mov
cdq
add
in
xchg
ss
test
stos
loop
inc
mov
cmp
xlat
cmc
push
mov
xchg
xchg
or
call
sub
sar
jl
into
mov
pop
jecxz
inc
(bad)
mov
pop
std
inc
xchg
adc
iret
mov
mov
scas
repnz
adc
cmps
pop
(bad)
daa
scas
xor
int
test
rol
psrlq
mov
jns
(bad)
shr
out
sbb
call
fwait
xlat
jl
in
sti
imul
jno
jne
or
mov
sbb
sub
pop
scas
les
pop
imul
jp
gs
dec
jmp
imul
call
inc
mov
xor
(bad)
mov
dec
push
in
push
addr16
fwait
jmp
jno
sbb
add
push
and
xchg
inc
repnz
mov
mov
adc
cmp
aas
adc
shl
xor
test
ins
jge
das
stc
(bad)
(bad)
sbb
in
test
jo
aas
adc
and
hlt
mov
cmp
movs
(bad)
test
aas
stos
icebp
jbe
push
and
aas
out
cmp
ins
cs
les
push
mov
not
cmp
sar
and
loop
jae
je
sub
inc
add
adc
xchg
pusha
sbb
es
rcr
movs
jne
stos
je
iret
int3
div
pop
pop
lahf
pop
les
sahf
xlat
sub
mov
mov
jp
ret
std
popa
inc
xchg
mov
ds
rcl
and
in
je
mov
addr16
or
out
add
shl
std
push
rcl
(bad)
loope
push
int3
fcom
leave
sbb
hlt
add
dec
and
inc
test
lock
mov
fld
pop
ja
sbb
dec
dec
pushf
test
les
mov
sbb
xor
add
sti
cmp
bound
ficom
hlt
scas
mov
cs
xchg
pop
xor
mov
mov
and
xchg
fsubr
jmp
inc
cld
out
lahf
test
out
adc
mov
push
or
(bad)
adc
xchg
cmp
jmp
mov
out
int3
xchg
cmp
jl
leave
jnp
xchg
xchg
lahf
dec
aad
push
(bad)
repnz
mov
inc
xor
sbb
sbb
jmp
adc
imul
jg
outs
jae
sahf
mov
rcr
xchg
jmp
dec
outs
loope
aad
push
mov
imul
dec
sbb
mov
ret
and
xchg
je
sub
fsub
fcmovnb
dec
sahf
sub
aaa
pop
jmp
mov
mov
push
xchg
mov
adc
repz
or
pop
pop
call
push
leave
enter
adc
sub
das
jecxz
dec
jnp
ficom
fwait
jns
jno
pop
mov
lea
arpl
dec
aad
scas
pushf
scas
scas
stos
ret
and
add
adc
inc
pop
inc
pop
test
and
inc
cmps
mov
in
xor
mov
xchg
sub
lock
and
(bad)
mov
int3
push
icebp
cmp
adc
pusha
es
and
sbb
jb
xchg
or
sbb
ds
ins
adc
movs
mov
lods
lods
in
jecxz
fisttp
jmp
xchg
and
cmps
retf
jp
jnp
(bad)
mov
lds
mov
mov
loopne
les
test
in
mov
test
call
ja
(bad)
movs
mov
(bad)
int
push
jno
cmp
fs
cmp
add
inc
inc
test
mov
js
mov
(bad)
outs
mov
repnz
dec
ficom
sahf
push
mov
pusha
(bad)
jno
cmps
sbb
xchg
loopne
xchg
add
add
js
adc
aam
or
adc
mov
jne
ret
hlt
pusha
ret
jns
cli
sbb
and
or
or
retf
sub
stos
or
call
push
push
mov
jge
pop
aaa
les
sub
rol
jmp
aaa
push
inc
inc
jmp
outs
bound
sub
mov
pop
das
xor
int
mov
stos
and
mov
or
inc
shr
jb
push
test
clc
mov
bound
fadd
sub
inc
jne
xchg
aam
pop
mov
shl
and
movs
and
outs
sbb
xchg
sub
or
xor
js
jb
or
enter
jne
shl
sbb
ror
lock
rcl
jno
add
repnz
mov
sub
sub
mov
inc
push
out
inc
mov
stc
outs
outs
loopne
call
mov
pop
les
inc
imul
or
mov
mov
mov
out
dec
adc
out
cmc
mov
xchg
int
pop
push
mov
and
in
or
inc
add
xchg
or
xor
xchg
std
jle
dec
and
scas
cmp
dec
in
push
aas
ins
push
rol
mov
push
lods
outs
(bad)
sbb
leave
push
sbb
xchg
mov
aam
add
xchg
fisub
add
sbb
mov
cmc
(bad)
repz
call
jne
(bad)
mov
mov
arpl
addr16
and
lea
push
inc
fwait
int3
mov
sahf
pop
add
test
sar
fs
adc
addr16
xchg
enter
and
pushf
call
daa
(bad)
inc
xor
inc
in
aad
pop
add
or
test
jge
lods
(bad)
cld
xchg
(bad)
icebp
push
pusha
pop
loopne
cs
cdq
mov
dec
or
jne
mov
sub
repz
or
adc
adc
iret
inc
adc
mov
and
add
inc
cmps
inc
sbb
mov
dec
pop
add
movs
ret
clc
xchg
fs
push
in
bound
jmp
adc
cmp
scas
fwait
call
test
arpl
and
sahf
cli
test
aad
pushf
mov
mov
push
mov
cmc
xor
xchg
ror
jno
rcl
test
lods
xchg
xadd
fnsave
push
inc
sbb
pop
jb
or
inc
or
sub
imul
aam
repnz
sbb
inc
mov
sub
cmp
jecxz
clc
cmc
pop
leave
call
jmp
xor
and
ret
mov
mov
adc
(bad)
lea
call
out
adc
es
in
out
mov
fsubp
out
pop
mov
gs
fisttp
fbstp
out
out
mov
adc
sbb
pop
mov
rol
rol
inc
fs
dec
test
fmul
jno
call
cmp
fild
nop
sub
mov
call
out
imul
out
mov
or
inc
mov
push
add
test
mov
push
xor
bound
push
jg
shl
adc
dec
cmp
push
inc
add
sbb
in
dec
leave
xchg
outs
adc
ret
fwait
dec
cwde
pop
leave
(bad)
lods
inc
and
call
rcl
stos
add
clc
cwde
stos
jmp
aaa
pop
and
sti
cmps
(bad)
jns
out
repnz
outs
adc
fadd
xchg
xchg
retw
or
in
xor
cld
imul
cld
aam
test
stc
push
test
and
cmp
test
mov
movs
sub
ret
retf
cmovs
xchg
sti
cld
fisubr
pop
jb
fwait
stos
jle
out
das
(bad)
cmp
inc
outs
cmc
mov
inc
sbb
adc
jae
or
sbb
inc
and
outs
and
mov
xor
mov
xor
sub
mov
or
cmps
pop
mov
stc
stc
and
out
inc
pop
jne
sbb
test
or
cli
pop
dec
shl
pop
fistp
retf
sub
cdq
bound
std
stos
inc
xor
pop
jnp
xlat
xlat
stos
push
fnsave
pop
xchg
pop
sbb
(bad)
push
mov
mul
pop
mov
mov
or
retf
outs
sbb
test
and
pop
mov
lahf
or
movs
pop
pop
inc
xchg
and
add
and
call
mov
je
sbb
pop
mov
shr
sbb
repnz
cmp
out
xchg
sbb
fistp
push
cmp
inc
call
in
cmp
mov
cmps
inc
add
pop
jg
outs
dec
or
adc
pushf
or
icebp
ja
fistp
(bad)
sub
and
sub
call
aad
or
jl
inc
es
inc
dec
cli
int
out
sub
xlat
add
sbb
cli
loope
int3
jnp
or
nop
and
nop
scas
js
sub
outs
outs
or
pushf
loop
fdivp
or
je
and
cmp
sub
sub
jmp
loopne
mov
mov
shr
rcl
clc
shr
loopne
sub
cli
inc
add
rol
jne
cli
cmp
inc
xchg
mov
icebp
test
xchg
sbb
adc
out
mov
fmul
or
pop
cdq
adc
leave
shl
lea
retf
cmps
pop
call
imul
jmp
sub
dec
call
ror
js
imul
xor
mov
or
add
jg
ror
inc
outs
sahf
add
xchg
dec
sti
shl
out
daa
and
cmp
dec
or
pop
ror
sbb
lds
jne
loope
je
inc
mov
test
jno
pop
xchg
add
push
outs
pop
fiadd
mov
pop
mov
push
aad
mov
fsub
ror
jg
ja
xchg
jle
push
dec
add
mov
jecxz
lods
cmp
mov
adc
jl
adc
or
adc
fsubr
dec
clc
shr
push
int
out
push
les
out
xor
sub
hlt
adc
fsubr
leave
sahf
imul
fsubr
inc
pop
add
jb
mov
jo
(bad)
jae
ror
in
inc
or
cmp
and
pop
pop
sbb
mov
sub
call
sub
inc
pop
(bad)
lahf
pop
lahf
pushf
imul
int
jmp
ins
inc
retf
push
imul
sbb
sub
adc
and
or
scas
push
cmp
pop
out
mov
sbb
js
shr
icebp
sub
xchg
hlt
loope
add
dec
cwde
imul
das
shl
jp
jge
fnstsw
sub
adc
xor
adc
repz
dec
mov
push
dec
lods
xor
mov
add
dec
jmp
mov
sti
outs
repz
gs
test
dec
aaa
pop
out
outs
sbb
scas
out
inc
jnp
pop
leave
test
xor
test
sbb
(bad)
jg
sub
add
retf
sbb
sub
cmp
daa
jle
repnz
pop
push
cmp
sar
dec
test
(bad)
adc
xchg
outs
dec
ds
lahf
or
aam
dec
inc
iret
mov
adc
cmp
popa
pushf
and
ds
mov
push
cld
in
(bad)
mov
(bad)
pop
mov
icebp
idiv
ds
inc
lods
xchg
mov
out
sub
cmp
mov
mov
dec
and
jns
sahf
xor
or
add
or
or
out
mov
test
jo
mov
shl
or
push
ja
pop
sbb
sar
xor
retf
sahf
mov
adc
jnp
jmp
adc
in
jno
inc
jle
popa
ins
mov
leave
mov
cmp
and
stc
xlat
cmps
xor
push
sbb
adc
push
mov
hlt
loope
cdq
sbb
mov
push
ins
shr
stc
ffreep
xor
mov
test
es
push
and
mov
and
aad
sbb
xor
xchg
mov
in
push
cmp
mov
pop
ins
and
movs
mov
adc
xor
loopne
cwde
mov
mov
out
fild
and
sub
popf
leave
rcr
cli
ret
push
loope
pop
nop
mov
(bad)
dec
stos
add
inc
cmp
inc
push
pop
jns
push
xchg
outs
jmp
dec
std
test
shr
out
out
fild
test
sbb
jnp
push
(bad)
xlat
xchg
aad
stos
repnz
leave
xor
arpl
in
adc
daa
fmul
or
test
sbb
and
loope
pop
xor
mov
inc
cmp
retf
xor
daa
das
push
jbe
mov
add
cmp
cs
rol
push
mov
ffreep
adc
dec
inc
inc
sub
outs
adc
inc
cmps
mov
jp
sub
jne
jnp
mov
rcl
or
xchg
dec
ja
sbb
adc
and
mov
test
pop
sub
sbb
jecxz
lea
es
aaa
push
sub
sub
cmp
scas
inc
shr
adc
dec
jb
jecxz
out
jnp
dec
clc
rcr
out
outs
dec
jg
cmp
sahf
xor
in
stos
test
push
pusha
or
nop
nop
leave
push
pop
sbb
push
mov
sbb
push
outs
jge
fiadd
test
sbb
sbb
(bad)
out
mov
sub
popf
enter
lods
inc
mov
adc
xchg
sar
jae
cwde
dec
sbb
mov
fsubr
sahf
xchg
test
imul
das
icebp
dec
fsubr
pop
test
and
add
loopne
and
imul
or
or
fwait
cld
retf
into
mov
xchg
jge
test
cdq
ins
(bad)
and
mov
fs
mov
adc
clc
lock
inc
jo
lds
aas
xchg
aad
das
pushf
push
jmpw
into
sbb
movs
push
push
ret
push
test
or
pop
add
pop
adc
popf
test
xchg
mov
xchg
xchg
repnz
je
int3
out
cmp
cmp
jb
rol
and
or
int3
cwde
sti
imul
repnz
mov
or
fadd
and
mov
dec
test
push
jno
mov
nop
cmp
cdq
push
or
sub
jbe
repz
mov
push
or
out
mov
(bad)
(bad)
sub
loop
leave
xchg
cmp
jg
call
int
repnz
cmps
and
mov
sub
neg
(bad)
xlat
jns
imul
push
pop
pop
hlt
je
push
cmp
jmp
xchg
scas
mov
mov
stos
imul
test
in
push
and
ror
lods
pop
pusha
ucomiss
retf
jae
cld
das
adc
jmp
rcr
adc
jnp
and
js
ja
mov
cmps
in
js
rcl
xchg
mov
dec
sar
movs
inc
cdq
mov
lahf
xchg
mov
std
mov
sbb
push
lods
inc
fbld
pop
and
(bad)
xor
inc
adc
das
ror
mov
mov
call
xlat
pop
popf
scas
lahf
stos
adc
mov
ds
cmp
dec
jecxz
and
shr
inc
add
jns
mov
add
aad
mov
aad
mov
add
push
mov
dec
sbb
add
or
and
stc
arpl
or
scas
lods
pop
sub
mov
push
imul
pop
shl
push
aas
jb
pusha
inc
out
jp
cmp
or
nop
cmc
loop
mov
mov
test
loop
mov
(bad)
sahf
pop
imul
mov
adc
dec
call
push
mov
lods
lahf
mov
scas
jae
xlat
div
jmp
mov
not
mov
mov
clc
pop
loope
ja
add
lds
cmp
mov
adc
adc
data16
jge
lods
stos
loope
rcr
xchg
jecxz
push
jl
jecxz
in
lds
mov
jo
jmp
inc
mov
xchg
xchg
xor
xchg
stos
(bad)
or
push
mov
and
adc
mov
and
adc
mov
pcmpeqw
sti
push
and
or
xchg
and
push
call
outs
ret
dec
sub
cld
jmp
dec
adc
in
sbb
or
int3
icebp
call
loope
or
mov
loop
xchg
pop
mov
call
call
jmp
adc
add
fdiv
dec
pop
push
shl
or
mov
sub
mov
rcr
mov
pop
and
mul
out
dec
cmp
jo
xor
out
cmp
and
jns
mov
cld
push
pop
jae
iret
push
mov
lahf
es
adc
(bad)
cs
test
and
xor
addr16
xor
scas
mov
nop
mov
xor
sub
dec
push
jae
in
dec
jb
jge
mov
sti
test
mov
fldcw
movs
push
inc
sub
xor
adc
pop
inc
sbb
loop
push
sbb
xor
pop
and
pop
jmp
or
mov
xchg
jnp
in
xchg
ficomp
xchg
pop
jne
mov
into
xor
mov
mov
jno
inc
ficomp
out
xlat
int3
and
sbb
nop
mov
sub
cdq
push
scas
adc
shl
bound
mov
test
push
ret
adc
xchg
sahf
jge
loope
mov
add
mov
jp
scas
and
movs
aad
shr
arpl
ins
stc
xchg
push
pop
xor
cmps
jl
mov
jae
cwde
fldenv
test
pop
inc
popa
mov
retf
ds
fiadd
mov
fistp
xchg
out
mov
mov
movs
adc
mov
sbb
or
add
xchg
push
adc
out
and
mov
jmp
pop
xchg
jmp
(bad)
xor
jl
adc
pusha
mov
int
outs
xchg
hlt
push
xor
adc
bound
xchg
sbb
cdq
pcmpeqb
mov
mov
test
dec
jb
imul
loope
test
inc
pushf
out
mov
fistp
pop
fistp
sub
add
or
shl
pop
icebp
sbb
xchg
nop
sub
loope
and
push
mov
cdq
in
push
sub
push
sbb
inc
jmp
imul
fadd
jl
dec
repz
sbb
(bad)
lds
in
imul
dec
sbb
and
fmul
push
mov
jo
sbb
xor
sbb
frstor
push
push
adc
push
rcr
fstp
dec
aam
(bad)
sub
inc
pop
into
mov
xor
xchg
popa
out
sbb
test
xor
mov
xchg
add
jns
adc
cmps
adc
sub
in
pop
push
adc
mov
pop
dec
cld
stc
cmp
adc
push
push
sbb
adc
or
call
xlat
int3
cwde
inc
test
test
add
pushf
nop
shl
(bad)
pop
shr
mov
inc
add
retf
movs
das
add
push
add
push
xor
and
dec
mov
xor
out
adc
pop
pop
mov
push
jecxz
loop
cmp
inc
mov
push
add
add
idiv
push
xchg
mov
jmp
dec
xchg
sbb
sub
or
mov
jbe
test
pop
cmp
mov
push
fmul
hlt
push
sub
sbb
dec
call
imul
cwde
pop
fwait
ins
jne
jg
lahf
rcr
icebp
inc
and
ss
jnp
mov
jbe
or
jl
dec
cwde
mov
sbb
adc
ds
jbe
adc
shl
into
add
loop
ins
pusha
xchg
xor
ja
xchg
fcom
out
cmp
or
xor
mov
ret
jge
popa
(bad)
in
sbb
mul
jno
fs
int3
gs
shl
cli
fst
(bad)
add
movs
dec
dec
or
je
fdiv
scas
add
jg
int
sar
repz
pop
scas
push
push
xchg
out
je
(bad)
loope
scas
push
mov
xor
inc
cmps
int3
ins
pop
cwde
lods
call
add
pop
sub
and
xchg
mov
xchg
add
mov
lahf
pop
lds
pop
sahf
dec
clc
or
pusha
mov
mov
or
pop
into
js
adc
xchg
pushf
test
jmp
js
inc
stos
mov
xchg
(bad)
cmp
push
lea
aas
scas
dec
in
push
sti
gs
xor
cmps
je
mov
and
(bad)
jmp
mov
or
cli
(bad)
ds
sbb
pop
ds
cmc
dec
sahf
dec
shr
pop
mov
out
pop
cmp
jecxz
out
hlt
jb
sar
int3
xor
clc
inc
cmp
sbb
(bad)
movs
fsub
fnstenv
add
mov
shr
or
add
mov
jg
sub
rol
add
inc
stc
int
xlat
mov
popf
icebp
xchg
pop
adc
jle
jmp
jle
xchg
getsec
aad
ss
sub
jne
mov
xlat
mov
test
lds
add
addr16
jae
jns
inc
stc
push
jnp
movs
jmp
test
pop
das
push
push
mov
stos
add
fwait
inc
mov
push
sub
test
xor
mov
inc
push
movs
aam
mov
fist
inc
sar
(bad)
push
in
pop
and
and
sbb
fwait
lahf
in
jne
mov
xchg
jns
ret
out
jecxz
and
cdq
jmp
mov
xchg
fsubr
ins
mov
mov
add
outs
lds
xchg
or
fwait
imul
push
fsub
imul
mov
add
cld
jmp
cmp
pop
mov
and
loope
and
loop
adc
cs
push
sub
xchg
js
mov
pop
or
loop
mov
(bad)
jg
lock
aam
sar
loope
out
ret
sub
aas
inc
or
in
into
fild
call
sbb
pop
mov
pusha
or
xchg
lods
call
jmp
ret
push
retf
test
fcomip
mov
mov
adc
(bad)
stos
adc
mov
adc
jmp
data16
xor
pop
push
retf
mov
hlt
dec
loopne
pop
test
fcom
shl
fimul
mov
xchg
inc
rcr
es
dec
jp
mov
ret
js
js
mov
or
es
mov
xor
inc
lods
je
add
sbb
iret
mov
and
or
dec
adc
inc
inc
mov
(bad)
add
loopne
mov
mov
rcr
daa
lahf
push
adc
add
jmp
or
mov
or
dec
std
das
cmp
push
mov
or
mov
mov
lds
sbb
adc
or
scas
push
popf
and
mov
mov
sub
in
cli
call
dec
and
lahf
mov
mov
sysret
mov
dec
push
jno
jmp
shl
sub
or
push
lahf
pop
in
adc
mov
pop
sub
(bad)
aas
repnz
jb
addr16
or
adc
es
push
mov
jl
lock
ret
xchg
dec
adc
popf
or
lock
dec
pop
aas
mov
adc
jge
pop
fs
lds
pop
xchg
push
inc
bound
jmp
mov
lds
mov
jecxz
pop
cmp
ins
adc
sahf
xchg
pop
xchg
push
in
(bad)
add
pop
inc
push
mov
dec
loopne
cmc
sti
mov
mov
arpl
or
jbe
xchg
aad
fstp
rcr
(bad)
cmp
shl
gs
ins
jnp
xor
aam
sti
fadd
ret
mov
jmp
inc
sti
inc
jae
or
and
or
js
mov
push
lock
adc
aad
add
lds
xor
xor
push
out
or
(bad)
cmp
addr16
(bad)
outs
adc
(bad)
sbb
adc
dec
fs
sub
sbb
sub
daa
sar
ret
fidivr
jg
push
sbb
jle
jno
fisubr
xchg
mov
cld
inc
add
mov
retf
sbb
jne
out
xchg
div
and
in
pop
pop
push
jae
mov
dec
mov
outs
and
jmp
daa
mov
xor
pop
cmc
fisub
add
dec
sbb
mov
jmp
jge
dec
test
push
cwde
xchg
xor
data16
scas
fadd
xor
fdiv
inc
sub
jecxz
jp
ja
push
addr16
add
inc
js
adc
out
mov
test
xchg
ds
(bad)
cli
aam
in
dec
cmps
add
adc
call
mov
fcom
sub
pusha
and
sub
xchg
aas
jp
dec
popa
cmps
cwde
bound
inc
push
fisttp
std
mov
cmp
retf
sbb
in
fst
pop
and
jge
inc
inc
movs
mov
xchg
xor
(bad)
jge
(bad)
retf
enter
push
aad
xor
(bad)
fdiv
add
xchg
mov
std
ins
je
test
mov
or
dec
movs
stc
jle
data16
repnz
mov
or
out
loop
ret
mov
in
enter
and
xor
dec
rcr
mov
inc
pop
xchg
jmp
push
cmc
inc
cs
mov
(bad)
pop
push
ror
mov
add
jo
fcomp
(bad)
neg
dec
mov
rcl
lea
mov
or
scas
rcl
dec
adc
sti
and
and
xor
mov
adc
jp
pop
std
rol
sub
std
push
repz
stos
and
cdq
in
pop
dec
xchg
jmp
mov
loop
ja
push
dec
sbb
(bad)
clc
aad
jns
cmps
add
lds
addr16
ss
repz
cmps
jae
push
in
jecxz
js
jecxz
add
mov
mov
pop
lods
pop
add
xchg
lods
adc
mov
sbb
sub
movs
push
mov
int
mov
dec
mov
sub
out
pop
adc
mov
pusha
icebp
cld
and
(bad)
das
mov
push
push
jmp
xchg
fimul
int3
(bad)
or
sti
xchg
js
jns
loope
outs
jecxz
dec
and
mov
mov
xchg
inc
test
ffree
adc
mov
inc
add
std
cmp
xchg
jno
mov
mov
and
out
xchg
int
(bad)
in
lods
jns
pop
xchg
int
rcr
adc
adc
mov
neg
or
nop
cmp
pop
in
cmp
xchg
popa
or
xchg
push
xlat
mov
into
jle
mov
and
cmp
cmp
xchg
pop
mov
xor
sub
cmp
jecxz
daa
into
loopne
pop
adc
mov
shl
je
sub
jge
mov
jb
mov
in
xlat
xchg
sbb
(bad)
scas
fcmovnb
bound
xchg
pop
ror
xor
add
xor
adc
cdq
mov
mov
nop
shr
and
fcmovne
mov
scas
add
mov
adc
dec
xchg
shl
(bad)
mov
sbb
inc
push
pop
stc
fistp
cld
jb
sub
xor
aaa
(bad)
cmps
(bad)
aaa
adc
jge
cld
and
aas
mov
dec
xor
in
mov
iret
dec
(bad)
dec
inc
jmp
xchg
cs
shl
xchg
in
jg
sub
fstp
lds
xor
ins
mov
mov
jmp
aas
or
sub
ss
ret
rcl
pop
jl
pushf
or
out
xor
xor
jbe
imul
jb
fldpi
int
xor
popf
adc
int
mov
stos
sbb
sub
fbstp
mov
sbb
in
fisub
pop
jmp
fstp
into
cli
dec
xchg
sbb
sar
dec
xlat
mov
pop
sti
out
popa
cmp
je
fmul
mov
jmp
push
rcr
mov
xor
stos
movs
cmp
cmp
sbb
dec
push
jle
cmp
jo
adc
test
cs
jns
es
push
adc
enter
lock
lea
or
dec
adc
mov
(bad)
adc
cmps
sti
dec
in
nop
xchg
(bad)
lods
pushf
inc
iret
inc
(bad)
xor
and
es
push
data16
cmc
adc
movs
rcr
stos
mov
scas
and
add
jmp
repnz
aaa
out
xor
out
xchg
adc
pusha
shl
enter
test
mov
or
and
fs
mov
ficomp
lds
jb
sbb
pop
mov
adc
cmp
inc
cmp
mov
aaa
push
add
adc
add
hlt
mov
es
cld
push
jecxz
mov
int3
xchg
jecxz
fldenv
daa
cld
xlat
shr
jbe
stos
inc
sbb
and
repz
ds
pop
xor
ja
int3
loope
dec
mov
push
push
loope
dec
daa
repnz
mov
push
push
mov
fisubr
test
push
sbb
in
sbb
mov
pop
push
retf
aaa
iret
jno
mov
loop
dec
xchg
pop
jmp
cmps
pop
xor
mov
sbb
aam
inc
movs
pop
into
int3
popf
cmp
mov
jmp
and
cmp
jecxz
enter
xchg
cmc
enter
mov
or
sub
rcl
addr16
jo
call
dec
push
loopne
retf
rol
mov
sbb
out
cli
(bad)
outs
in
sbb
dec
xchg
ins
push
add
push
(bad)
mov
mov
mov
xor
mov
shl
xlat
cwde
fcom
nop
mov
pusha
lods
fidivr
and
movs
add
adc
out
ins
pop
adc
mov
xchg
mov
cmp
push
inc
mov
inc
mov
add
shl
adc
rcr
fimul
sar
cmp
mov
addr16
or
push
pop
jecxz
outs
dec
out
daa
mov
xchg
push
dec
sbb
in
push
fs
stc
mov
jecxz
repz
jl
enter
cmp
xor
gs
sti
out
dec
into
call
stos
out
shr
jae
sub
add
fwait
sub
inc
lock
adc
pop
imul
pop
pop
int3
mov
dec
xchg
ins
pop
mov
nop
frstor
and
popf
fcmovu
mov
out
jge
mov
add
ficom
mov
(bad)
jne
mov
retf
inc
push
inc
fdiv
daa
stc
es
adc
ins
and
popa
xor
and
mov
xchg
pushf
or
fstp
pop
inc
dec
int3
add
cs
cmp
ja
sar
hlt
dec
cmp
fdiv
pop
push
into
call
movs
fdiv
cld
push
loopne
ret
inc
sti
mov
icebp
lea
into
je
ins
cmps
mov
hlt
mov
arpl
(bad)
dec
jno
outs
out
push
pop
lods
pop
jp
or
or
jno
imul
mul
stos
xchg
(bad)
int
sub
movs
or
ja
jg
repnz
fstp
push
and
mov
xor
fldenv
call
pop
dec
xchg
inc
cmp
mov
push
repnz
popa
aas
pop
and
cdq
in
stos
ins
mov
int3
push
data16
jne
or
repnz
fld
cmp
cld
outs
outs
lahf
test
fisttp
test
cmp
mov
(bad)
out
movs
data16
xor
jns
inc
test
sub
inc
bound
mov
inc
and
out
xchg
js
inc
push
shl
or
cmp
xchg
(bad)
aaa
clc
cmp
(bad)
shl
xor
mov
jb
das
cmp
or
add
ja
mov
xchg
add
pop
adc
pop
inc
je
inc
xor
sub
pop
xlat
jnp
scas
lahf
ja
pop
mov
or
mul
inc
into
les
push
jo
jmp
mov
xchg
clc
jge
jae
or
fidiv
out
(bad)
mov
push
pushaw
lds
call
sbb
lea
pop
mov
pop
(bad)
cld
shr
test
imul
xchg
shl
or
push
retf
daa
jbe
pop
adc
(bad)
pop
call
lahf
es
test
ret
imul
add
enter
loopne
test
bound
dec
sub
je
ret
sti
repz
cs
push
add
and
push
dec
fcom
add
push
rol
jp
outs
int
cmps
ficomp
call
sub
mov
jp
sbb
push
mov
out
sub
xchg
jle
pop
mov
cli
jg
arpl
mov
adc
movs
outs
int
xor
jno
xchg
js
pop
xchg
mov
dec
mov
cmp
pop
inc
inc
add
lods
or
mov
aam
or
rol
jno
lock
inc
dec
and
mov
adc
mov
hlt
and
sbb
test
pop
hlt
pop
pop
movs
pop
and
mov
or
mov
dec
mov
adc
add
sub
add
jl
sbb
rol
in
imul
mov
and
and
aam
adc
cmp
fistp
mov
or
cmp
pop
je
mov
push
frstor
push
mov
dec
imul
cmps
jbe
sbb
inc
aam
mov
mov
sbb
das
mov
jb
jle
fsubr
ret
pusha
xor
and
xor
sbb
je
stos
ja
pop
cmp
push
inc
adc
lods
loop
mov
xchg
nop
xor
xor
mov
pop
jmp
gs
out
fld
dec
sub
mov
pop
cld
sbb
test
ror
lods
mov
mov
mov
outs
sub
xchg
cmp
frstor
popa
mov
add
les
ror
aam
inc
leave
mov
jl
pop
(bad)
adc
push
mov
xchg
xlat
in
or
jle
movs
pusha
rcl
adc
mov
push
in
pop
sbb
mov
ficomp
(bad)
into
xchg
sbb
shl
lock
lds
dec
mov
(bad)
in
(bad)
fild
je
mov
mov
ds
jno
mov
xchg
cmc
cmp
push
jmp
lock
cdq
inc
ins
cmp
jne
add
rol
shl
outs
pop
xlat
bound
imul
add
push
(bad)
es
mov
repz
(bad)
pop
ficom
ret
jmp
cwde
jbe
shl
dec
sub
lea
jecxz
fst
sahf
xlat
in
jbe
or
repnz
jo
loop
pop
outs
jge
mov
mov
icebp
iret
cmp
sub
or
test
je
push
sti
pop
js
pushf
add
dec
scas
or
and
sbb
aad
sti
xor
and
popa
mov
rcr
lock
sbb
test
stc
loop
pop
mov
fwait
sbb
punpcklwd
fld
(bad)
hlt
mov
dec
pop
call
inc
cmps
fadd
scas
push
shr
jae
gs
pop
xor
stos
add
jns
mov
cmp
stos
ins
loop
ffreep
jae
and
ret
je
mov
fisubr
jle
add
and
fwait
mov
(bad)
xchg
or
xchg
dec
sub
neg
adc
mov
jmp
popa
mov
push
jge
mov
loop
mov
scas
std
pop
mov
retf
mov
stos
clc
cli
mov
jl
gs
dec
(bad)
or
jnp
mov
fsub
pushf
xchg
mov
fisttp
dec
pop
and
jae
xchg
sar
sbb
fwait
cmp
or
cmps
out
(bad)
fisttp
inc
es
div
sub
dec
cmp
fldcw
int
shl
shr
push
retf
mov
loop
xchg
add
test
iret
xor
inc
call
pop
arpl
(bad)
nop
push
scas
es
push
enter
add
push
cwde
push
enter
mov
test
push
mov
add
mov
pop
or
pop
scas
sbb
and
and
push
mov
mov
mov
fwait
test
in
in
and
data16
pop
xchg
mov
xor
cmp
adc
sbb
(bad)
jmp
xchg
mov
int3
fiadd
mov
pushf
jle
stos
xchg
xor
pop
nop
das
stos
jne
xor
jo
adc
push
mov
scas
jle
mov
dec
pop
out
pusha
in
lea
cwde
cmp
xor
out
add
or
xor
arpl
(bad)
(bad)
imul
jg
out
fidivr
(bad)
and
in
xor
icebp
cmp
lea
ret
cdq
in
inc
push
xchg
jb
outs
loopne
push
and
jae
fidivr
inc
xor
clc
and
loope
ins
dec
shl
bound
in
pop
and
or
sar
addr16
ret
retf
mov
add
inc
mov
rcr
retf
leave
xchg
or
cmp
retf
sahf
push
call
ss
or
fisubr
lds
cmp
mov
es
push
cmp
and
xchg
inc
xlat
and
push
jne
pop
push
mov
pop
out
cmps
inc
fwait
xor
xchg
sbb
cli
shl
inc
lods
sub
dec
adc
pop
sbb
mov
mov
and
ja
cld
out
mov
lahf
and
in
es
adc
retf
cdq
pop
call
push
add
sbb
push
int
nop
iret
mov
nop
(bad)
std
out
cmp
(bad)
int
scas
repz
and
or
pop
scas
cmp
outs
movs
into
rcr
adc
mov
push
arpl
in
movs
femms
cmp
in
repnz
loope
addr16
imul
cld
mov
mov
cmc
adc
push
pop
pop
cli
adc
jno
aaa
jno
call
or
mov
icebp
lods
mov
push
adc
mov
lock
push
test
enter
daa
lea
stos
sub
cld
inc
cmps
pop
fdiv
jecxz
movs
push
xor
mov
jb
test
mov
(bad)
out
int3
sti
jae
out
out
cmps
popa
test
push
les
mov
(bad)
fistp
dec
mov
leave
pop
cmc
mov
inc
adc
and
stos
sbb
pop
mov
push
daa
xor
push
adc
les
add
cmc
loopne
mov
jge
push
lods
mov
mov
mov
repnz
jp
push
mov
fdiv
ret
sbb
pop
stos
xchg
out
adc
xchg
mov
xor
imul
mov
(bad)
stos
imul
or
mov
rcl
sub
xlat
dec
push
dec
dec
retf
mov
pop
sbb
xchg
mov
xchg
out
mov
cmp
idiv
or
out
inc
je
(bad)
call
push
fwait
mov
(bad)
push
add
or
stc
stc
sub
sbb
dec
fild
dec
fmul
cmps
or
mov
cld
mov
fs
sbb
xchg
mov
and
sti
scas
es
retf
call
popa
mov
mov
ret
sbb
jns
bound
cwde
sbb
and
or
(bad)
in
imul
ss
xchg
inc
clc
push
outs
jns
shl
cmp
nop
aad
shr
test
cmp
jg
sub
call
iret
test
xor
jne
dec
dec
and
fld
add
sahf
mov
call
xchg
cmp
add
out
mov
pop
in
ins
jmp
es
fsub
hlt
(bad)
repz
(bad)
push
dec
gs
adc
aas
call
mov
or
in
lds
mov
jecxz
mov
xchg
cbw
in
(bad)
iret
imul
fs
push
xor
in
mov
aad
movs
inc
jbe
sub
shl
jb
and
pmuludq
in
push
adc
sbb
push
les
cmps
mov
inc
or
fiadd
mov
push
stc
pusha
mov
pop
fwait
enter
cmp
cs
shr
xchg
jb
in
ins
rcr
js
jb
hlt
data16
mov
dec
mov
sub
dec
adc
xchg
ins
push
sbb
cmp
(bad)
shl
adc
aad
jge
inc
movs
aad
cmps
sbb
stc
out
and
or
mov
stc
aas
ret
inc
stos
mov
sub
loope
mov
movs
pop
jp
inc
fiadd
dec
loopne
pop
lods
out
sbb
in
inc
sar
adc
mov
inc
test
or
inc
mov
sbb
sub
sahf
std
stos
pop
mov
dec
and
mov
push
int
inc
sub
xor
pop
ror
repz
xchg
cmp
fldenv
sbb
cld
nop
popa
push
xor
rcr
loop
xchg
test
and
mov
hlt
mov
jns
jl
or
dec
or
fadd
iret
pop
add
and
inc
jmp
in
nop
or
pop
popf
loop
jbe
xchg
nop
hlt
pop
xor
in
ret
adc
adc
cs
enter
xchg
rcl
leave
mov
ja
cmp
lea
xor
xor
add
fsub
pop
sub
cmp
inc
push
xlat
daa
sbb
xchg
inc
aam
jae
pop
(bad)
outs
pop
pushf
clc
add
mov
scas
in
adc
adc
inc
in
loope
lahf
shr
jp
cs
ror
(bad)
dec
cmp
inc
es
outs
repz
in
add
mov
pusha
push
jo
stc
sub
cld
leave
movs
lds
stos
retf
dec
retf
mov
les
or
push
mov
add
int
in
xor
loopne
(bad)
aaa
dec
jge
push
pavgb
shl
pop
out
and
push
sbb
cwde
jb
sbb
sar
jb
sahf
ins
sti
nop
nop
lock
hlt
addr16
hlt
pop
mov
xchg
aaa
fbstp
sub
lea
imul
adc
jae
dec
dec
add
sti
lods
xor
hlt
pop
arpl
inc
mov
rep
inc
aaa
lds
adc
sahf
mov
out
jecxz
pop
jbe
mov
push
(bad)
push
lea
mov
test
cmc
outs
add
mov
dec
rcr
shl
imul
mov
imul
jmp
inc
repz
test
int3
xchg
imul
test
sahf
shl
aad
fmulp
arpl
xchg
out
push
mov
rcl
mov
adc
jle
into
call
or
inc
cmp
scas
sbb
stc
sub
inc
call
push
lea
lock
or
dec
aaa
call
pushf
and
sub
test
vmread
ficom
pop
cmp
jp
sub
mov
lods
mov
add
fst
rcr
pushf
(bad)
in
jo
xchg
mov
push
leave
bound
dec
jmp
adc
fbstp
(bad)
mov
sub
cwde
add
and
sub
jmp
mov
adc
jle
and
mov
lods
pusha
repnz
mov
pushf
fwait
test
(bad)
out
popa
jne
add
pusha
ins
repz
sbb
repnz
mov
and
push
jmp
and
repz
icebp
cld
jns
(bad)
cmps
cmp
xchg
sub
add
fs
repz
dec
xor
and
cmps
and
bnd
jmp
loope
cmp
xchg
lods
push
push
cmp
fisttp
mov
sub
mov
cwde
in
(bad)
mov
das
(bad)
std
and
mov
lods
inc
out
icebp
jl
xor
add
aad
mov
(bad)
ret
or
sub
and
mov
jo
mov
lahf
ret
sbb
mov
cmp
xchg
push
fs
adc
push
adc
mov
ins
add
clc
sar
ins
jae
adc
ins
and
loopne
cmps
loop
mov
dec
jp
lahf
dec
mov
add
xor
inc
cmps
or
frstor
pop
or
mov
iret
cmc
adc
push
outs
and
cmp
imul
and
sub
cmp
and
sbb
dec
mul
mov
jp
sub
sbb
sub
sti
lock
or
push
cmps
into
inc
xchg
ss
xchg
mov
and
or
mov
xor
lods
stos
ins
sahf
jg
inc
add
leave
not
out
mov
dec
mov
adc
push
push
aas
sti
int3
pop
retf
pop
in
jns
inc
scas
loope
(bad)
(bad)
mov
push
inc
dec
xor
jp
mov
dec
mov
jb
sub
add
rol
fsub
repnz
shl
es
sub
in
xor
je
and
dec
adc
or
mov
lods
inc
mov
imul
shr
popf
lock
call
dec
or
mov
jmp
pop
push
fsub
mov
cmc
sbb
jge
sbb
fmul
ror
adc
loop
(bad)
(bad)
cmp
adc
mov
push
cli
arpl
out
enter
in
repnz
bound
ret
pop
inc
retf
outs
(bad)
cmp
(bad)
mov
shl
or
std
jmp
inc
fsub
imul
out
inc
jl
sbb
mov
shr
adc
leave
and
adc
add
add
fnstsw
and
fidiv
in
mov
push
and
sbb
mov
push
add
dec
sub
test
push
lods
je
mov
xchg
shl
push
scas
std
jmp
sub
xchg
test
inc
fnstcw
sub
jmp
fadd
shl
(bad)
and
(bad)
jae
ja
cmp
cmc
fwait
lock
stos
cmp
ja
mov
xor
mov
and
js
jne
jnp
js
xchg
xor
xor
in
jmp
daa
sbb
repnz
mov
and
pop
inc
sub
push
in
lods
cmp
adc
or
jge
movs
jge
inc
(bad)
ins
es
xlat
jo
push
stos
xchg
leave
mov
sbb
rcr
mov
retf
popf
jmp
push
xor
xchg
ins
(bad)
mov
ins
movs
xchg
mov
pop
xchg
cli
movs
push
sahf
cmp
ret
imul
cmp
sbb
test
fldcw
sbb
retf
js
or
pop
mov
jno
int3
sbb
dec
jne
xchg
popa
aaa
popa
mov
sub
pop
sbb
js
mov
mov
stos
add
jb
fstp
or
push
lea
fwait
cs
popf
in
rcr
inc
jg
iret
xchg
push
jl
xchg
retf
xlat
push
popf
adc
loop
aad
cmp
test
jecxz
push
ins
mov
es
loope
push
push
mov
imul
stos
addr16
inc
dec
mov
and
or
repz
out
jle
mov
jmp
push
dec
xor
push
cli
sub
and
dec
rcr
out
mov
cmps
stc
aaa
sub
jp
rcl
call
or
jb
int3
mov
mov
jmp
cmp
rol
add
xchg
mov
dec
cmps
dec
push
imul
in
cmp
out
mov
pusha
sub
pop
stos
scas
add
xchg
cmps
cmps
aas
and
mov
push
(bad)
lock
sbb
adc
adc
jecxz
outs
jne
test
inc
sahf
(bad)
mov
shr
add
or
push
mov
enter
cmp
imul
fcmovnbe
mov
data16
xchg
mov
out
adc
out
out
test
adc
int3
sar
sar
inc
xor
mov
mov
in
fnstenv
mov
inc
adc
loope
push
mov
or
add
js
out
ins
push
push
inc
mov
sub
out
imul
cmp
retf
sub
ret
ins
or
dec
mov
mov
mov
loop
push
sub
push
(bad)
push
jno
fist
xor
imul
xor
aam
into
pop
mov
xchg
rcr
in
jl
aaa
and
push
push
jmp
scas
add
sbb
sbb
test
xchg
add
in
aas
pop
std
call
pop
shr
(bad)
push
cmp
ja
mov
sahf
jne
ud1
inc
mov
(bad)
pop
imul
sti
in
xchg
jge
int3
retf
inc
scas
and
xor
inc
retf
loop
push
inc
cli
pop
movs
xchg
sub
pop
(bad)
fucom
jbe
adc
shl
xchg
pusha
sar
stos
jbe
out
fimul
outs
cld
inc
(bad)
xchg
scas
xor
(bad)
cld
fcompp
mov
mov
jne
neg
jae
into
push
cmc
pushf
push
fld
mov
sti
mov
push
mov
mov
push
sbb
in
stos
les
lock
out
cld
xor
adc
push
adc
push
(bad)
xor
sti
shl
mov
addr16
scas
and
in
rcr
mov
test
dec
inc
lods
fwait
in
sbb
push
mov
push
into
ficomp
retf
jmp
pop
lds
xor
add
mov
cwde
pop
cwde
test
inc
sbb
adc
mov
les
xor
ds
jae
fwait
int
push
sub
ret
clc
retf
mov
cmp
and
sar
in
das
(bad)
ja
not
mov
sbb
dec
pop
pop
call
mov
jae
pop
retf
jge
pop
in
cmps
jmp
adc
fcom
in
jmp
imul
pop
inc
or
push
cmp
pop
into
iret
xlat
aad
xchg
outs
fbld
sub
test
cmps
lock
xchg
cmp
mov
xor
movs
loop
mov
cwde
or
xchg
rcl
push
sbb
sub
lods
pusha
fst
in
enter
and
push
jp
mov
dec
in
test
in
arpl
or
lea
out
test
shl
fwait
push
push
xchg
push
in
sbb
cmp
dec
aaa
sbb
pop
mov
inc
push
pusha
stos
and
sub
cdq
mov
lea
call
movups
add
xor
jl
mov
add
cmp
adc
pop
jp
inc
ins
push
sahf
push
adc
adc
mov
les
sub
or
adc
es
push
sub
mov
pop
stos
js
sub
mov
stc
(bad)
ror
imul
dec
mov
rol
add
leave
push
scas
or
adc
or
mov
pop
inc
shr
sub
push
adc
xor
xlat
scas
cwde
pop
js
mov
ds
add
ret
jecxz
inc
aaa
test
ret
mov
mov
orps
clc
data16
(bad)
repz
add
xchg
jmp
sub
add
jb
dec
mov
xchg
dec
dec
push
fdivr
bound
das
out
jge
inc
scas
cwde
dec
push
scas
cmp
push
cwde
popa
repnz
popa
xchg
push
mul
push
mov
add
sbb
inc
rcl
xchg
and
jg
mov
inc
sar
sub
sbb
inc
mov
cmp
jbe
and
mov
movlps
push
adc
dec
pop
pop
sbb
out
sub
cwde
imul
mov
fnstsw
jl
adc
stc
add
std
stos
and
addr16
(bad)
cwde
mov
and
fsub
sub
sub
mov
jl
bnd
add
cdq
call
imul
jmp
repz
sahf
xor
movs
xchg
add
push
cmp
icebp
ss
gs
es
in
sub
add
adc
loop
dec
inc
jmp
jl
jns
xlat
pop
aas
imul
and
dec
imul
jmp
adc
nop
and
fnstsw
push
mov
fwait
jp
cmp
mov
xchg
cwde
push
jle
(bad)
iret
sbb
mov
xchg
popa
jp
adc
pop
jo
ret
lahf
ja
dec
or
test
int3
xchg
pop
mov
cmp
adc
stos
movs
inc
adc
xlat
cmp
lahf
cmp
es
jmp
out
lock
push
or
cmp
je
nop
xchg
mov
fcmovnu
mov
cwde
mov
pop
movs
imul
fcmove
cmp
loop
(bad)
push
dec
aam
icebp
mov
adc
repz
push
test
mov
xchg
or
jg
test
std
push
cdq
test
int3
int3
into
int3
mov
repz
sbb
fimul
inc
fnstsw
fild
pop
pop
push
ret
jnp
mov
(bad)
(bad)
popf
es
les
adc
out
aam
popf
lods
(bad)
iret
jbe
cdq
mov
push
in
push
or
shr
(bad)
mov
fcom
mov
inc
rcr
lods
repz
pop
adc
retf
leave
adc
jo
fstp
jle
in
shl
pop
nop
dec
cmp
mov
and
inc
pop
push
inc
push
stc
pop
fbstp
cmps
imul
sahf
adc
shl
jo
inc
ja
mov
push
cmp
dec
pop
push
pop
or
cmp
cdq
test
std
push
ss
fcmovnu
add
ss
aas
dec
in
xchg
ficom
xor
or
dec
sti
push
call
xor
repnz
loop
pop
push
cld
jne
aaa
inc
rcr
inc
cmps
adc
push
(bad)
push
aam
jmp
out
and
pop
mov
jmp
stos
inc
mov
mov
repz
and
xor
pop
loope
mov
mov
int
int
adc
xchg
mov
lock
push
imul
cld
pop
popa
xor
fnstenv
outs
jg
call
mov
shr
mov
mov
xor
inc
dec
mov
test
mov
mov
pop
int
xchg
push
call
push
or
in
mov
jns
mov
adc
in
mov
push
cmps
jb
jmp
lock
rcr
inc
cmp
loopne
push
cmp
idiv
icebp
sbb
ja
push
lods
pop
mov
lahf
pusha
mov
cmp
ficomp
sbb
addr16
sub
popa
fcmovnu
xchg
adc
xor
jb
test
cmp
or
stc
push
dec
or
mov
daa
pop
mov
jb
out
hlt
lea
popa
test
mov
mov
lock
aam
add
popa
aam
sub
ja
push
xor
scas
test
sti
pop
out
test
cmp
or
cmp
pop
loop
iret
js
ret
loop
cmp
outs
lods
out
loope
cmps
add
xchg
aam
arpl
cmp
pop
sub
int3
xchg
xchg
xor
add
icebp
cmp
fdiv
enter
stc
mov
dec
add
mov
xor
dec
mov
daa
stos
cs
adc
mov
jns
inc
imul
loope
stos
mov
and
pop
daa
sub
add
lock
hlt
xchg
(bad)
and
sbb
xchg
jns
(bad)
out
or
adc
cld
sub
jb
push
fwait
or
in
movs
aas
and
test
popf
stc
xchg
or
pop
inc
mov
or
fiadd
scas
or
out
dec
push
ins
pop
jnp
neg
or
inc
sbb
mov
loop
adc
add
adc
add
push
or
les
(bad)
push
mov
xchg
stc
fadd
sbb
shl
(bad)
pop
dec
mov
push
push
leave
sub
mov
mov
or
xchg
imul
loope
jae
and
adc
xchg
movs
sbb
mov
stos
pop
mov
ror
pop
or
dec
dec
cwde
fsubr
mov
inc
adc
cwde
cs
xchg
ror
inc
mov
inc
cmps
fldlg2
out
ret
(bad)
fisttp
inc
js
mov
mov
cmp
iret
test
loope
add
and
xchg
mov
inc
es
aaa
retf
popf
cmc
xor
outs
movs
js
in
jmp
mov
sar
inc
repnz
call
jle
jne
jl
fs
loopne
or
imul
imul
push
sti
and
shr
repnz
scas
loopne
sbb
mov
cmps
dec
cdq
out
stc
(bad)
(bad)
dec
(bad)
out
lods
adc
adc
xor
and
shl
sub
movs
push
out
mov
in
ins
add
call
push
fisub
outs
mov
jle
fnsave
dec
(bad)
std
mov
push
and
call
push
rep
repnz
push
add
xor
ins
idiv
(bad)
jg
or
sbb
shrd
mov
push
bound
sbb
das
daa
pop
cmps
fwait
retf
pop
push
mov
and
xor
aad
jecxz
mov
aad
xchg
call
lahf
stos
push
add
mov
test
imul
mov
cld
cmp
sbb
adc
cmp
pop
xchg
inc
pop
adc
(bad)
mov
xlat
scas
pop
data16
push
jecxz
mov
inc
mov
enter
call
(bad)
sub
(bad)
pop
mov
loop
jno
sub
outs
pop
cmp
and
clc
popf
jmp
pop
and
rcl
mov
or
cmps
(bad)
aaa
bound
jb
cwde
test
rol
jne
and
sub
(bad)
iret
rcr
inc
mov
dec
mov
xor
pop
jno
mov
cli
push
data16
inc
push
int3
daa
push
jmp
shl
push
mov
push
in
mov
xor
mov
push
mov
jno
ds
push
aam
xchg
push
push
push
das
(bad)
xchg
cmp
clc
test
repz
dec
fisub
ins
jne
out
shl
iret
fistp
xchg
in
outs
lea
and
pop
jae
stc
repz
stos
out
rcl
cmps
scas
xchg
xchg
jl
movs
gs
jmp
or
xor
push
xor
pop
pop
pop
popf
clc
shr
mul
jae
jnp
adc
std
mov
loope
sbb
xor
test
jecxz
loope
xor
outs
sbb
in
xchg
xor
or
leave
push
push
push
mov
xchg
test
aas
out
std
imul
fiadd
push
cwde
push
mov
stos
jecxz
push
sbb
inc
mov
push
pushf
stos
arpl
into
test
and
popa
fs
movs
(bad)
mov
fisttp
pop
loop
retf
sti
rcr
cs
scas
jge
arpl
int3
jmp
int3
out
mov
dec
xchg
fild
mov
mov
push
jmp
mov
inc
mov
les
cmp
push
adc
jb
xor
daa
push
rcl
sbb
sti
mov
mov
jbe
inc
pop
nop
fwait
mov
jmp
adc
sub
imul
in
dec
cmc
mov
retf
sbb
in
xchg
mov
jmp
add
jnp
push
sar
call
retf
nop
int
cld
and
adc
stc
and
cmp
mov
mov
jns
add
dec
loop
bound
fcomp
or
stos
mov
std
pop
inc
fidivr
scas
inc
jns
dec
jle
sbb
xlat
inc
daa
and
adc
mov
push
test
inc
in
fs
pop
into
in
popf
xor
and
or
jge
push
lea
int3
sar
aas
aaa
outs
adc
test
xchg
mov
je
push
lods
mov
int3
lahf
inc
mov
mov
and
jne
push
fidivr
adc
test
mov
repz
outs
inc
addr16
pusha
ins
jp
sbb
sti
in
and
(bad)
(bad)
data16
lahf
mov
jns
outs
shl
xchg
jecxz
rol
add
sub
push
enter
lahf
mov
hlt
xor
push
or
popf
jne
data16
leave
dec
mov
ror
out
ret
bnd
sbb
repnz
adc
dec
rcr
fld
cmc
call
(bad)
xchg
xor
jbe
adc
jp
mov
xlat
lods
test
inc
cwde
and
outs
inc
stos
cmp
ins
pop
xor
add
add
test
fsub
sub
adc
mov
jge
hlt
call
push
ds
retf
ds
pop
sub
outs
dec
mov
shl
or
retf
jecxz
pop
and
jmp
mov
cmc
sub
sub
in
cmp
or
imul
mov
aaa
fidivr
push
out
push
or
aaa
mov
mov
pop
test
jle
pop
mov
pop
es
fisttp
aad
mov
cs
imul
into
dec
std
sub
xchg
mov
push
add
add
lods
push
add
iret
dec
add
pop
add
repnz
test
imul
inc
sub
ja
test
sub
dec
arpl
sbb
pop
out
pop
jno
movs
call
pop
ss
cmp
pop
pop
(bad)
or
mov
inc
out
and
adc
daa
mov
and
jbe
xchg
lock
jmp
adc
mov
or
pop
ins
or
inc
sub
push
mov
(bad)
mov
inc
dec
frstor
jge
fwait
hlt
sti
enter
or
adc
out
fisub
or
xor
xchg
mov
pushf
push
xchg
jb
and
jmp
sti
jmp
lahf
add
jne
and
mov
mov
cmp
push
sbb
popf
mov
dec
pop
dec
(bad)
xor
mov
sbb
add
jl
ror
js
lahf
adc
cmp
sub
mov
jmp
bound
mov
jp
push
pop
cmps
bound
call
(bad)
cmp
add
fwait
pop
mov
pop
icebp
xor
les
leave
jne
push
ins
sbb
dec
pop
(bad)
mov
pop
ret
and
xchg
pop
fistp
rol
neg
lods
leave
aam
pusha
out
cmp
push
push
iret
inc
sti
mov
sub
jnp
(bad)
stos
jbe
gs
imul
xchg
loop
fisub
sbb
cmps
add
mov
push
cmc
mov
inc
cli
inc
cmp
scas
in
cmp
arpl
sar
scas
jp
add
movs
xchg
stos
int3
xchg
or
ficomp
js
and
xlat
mov
add
pop
lahf
or
cld
push
lods
(bad)
pop
ror
jl
cmp
(bad)
sbb
fidivr
(bad)
sub
mov
mov
mov
fcomp
jge
into
mov
jbe
mov
sbb
ror
sub
mov
sub
jecxz
fdivrp
add
dec
call
mov
pusha
push
inc
sub
push
pop
jb
ret
cli
push
xchg
push
stos
lahf
fcomp
repz
inc
push
scas
cdq
call
xor
(bad)
pop
mov
in
cmp
mov
cmp
mov
iret
js
frstor
std
mov
pop
das
retf
stos
into
and
sub
ds
or
dec
ss
pushf
or
test
and
fwait
stc
popa
les
repnz
lahf
xchg
call
mov
xchg
stc
daa
adc
dec
adc
push
push
xlat
aad
or
in
(bad)
jg
outs
push
popa
and
ret
pop
inc
addr16
xor
mov
fadd
mov
das
das
and
add
fcmovne
aaa
cmp
bound
mov
lahf
(bad)
mov
jge
aad
mov
enter
cs
nop
mov
sbb
push
in
cmp
mov
cdq
pop
mov
call
cmps
fistp
aad
loope
movs
mov
adc
arpl
cli
and
int3
xchg
or
sub
push
(bad)
out
arpl
and
popa
fsubr
clc
inc
retf
lods
ds
pusha
adc
mov
das
aas
pop
outs
or
addr16
push
jp
or
push
cmp
(bad)
pop
add
(bad)
loopne
popa
push
lea
fldenv
adc
das
sub
dec
jb
cld
xor
xchg
pop
bound
and
jo
adc
xchg
push
imul
inc
cmp
dec
fldl2t
out
dec
fstp
ret
daa
adc
(bad)
popf
pusha
mov
dec
dec
inc
out
add
mov
push
adc
movs
cmp
inc
(bad)
push
fisub
test
sub
imul
cmp
ins
sar
fst
imul
and
test
cmp
sbb
out
and
in
pop
pop
in
pop
lock
imul
sti
and
sbb
jbe
clc
cdq
test
in
pop
sbb
in
pop
or
sbb
loop
shl
in
sbb
aaa
mov
dec
mov
jne
mov
xchg
call
inc
clc
or
pop
cld
adc
pushf
mov
xor
adc
stos
mov
inc
or
imul
cmp
stos
aam
or
jl
das
popa
xor
call
mov
push
jmp
xor
jne
test
xchg
aas
data16
push
xchg
jg
sbb
sub
popf
outs
mov
fsubr
or
adc
shl
test
xor
jle
pop
jne
or
xor
mov
cmp
and
enter
add
sub
mov
mov
idiv
xor
cs
call
mov
or
test
mov
sbb
cwde
xchg
push
arpl
cmps
and
aas
(bad)
mov
lds
mov
fldcw
push
pushf
cs
mov
and
fcomp
mov
leave
or
scas
(bad)
stc
xchg
rol
adc
imul
repnz
cmp
stc
or
in
iret
dec
test
inc
popa
xchg
jb
cmc
lods
sbb
push
imul
mov
jno
pop
int
sbb
rcl
lock
dec
test
in
mov
pop
retf
push
pop
xor
add
mov
mov
pop
in
gs
lods
dec
inc
loopne
cmps
je
pop
popa
jmp
adc
mov
inc
xchg
and
(bad)
sbb
inc
sahf
inc
enter
and
pop
ins
sar
nop
call
nop
and
mov
jns
inc
add
jmp
xlat
pop
sub
enter
push
xchg
jno
sub
stos
mov
and
and
mov
cld
mov
out
push
add
(bad)
and
jg
stos
and
stc
loop
ja
xor
pop
js
mov
nop
or
pop
lods
jecxz
add
push
call
jmp
jnp
mov
sub
sbb
jno
sbb
retf
dec
jns
inc
outs
inc
sahf
sub
repz
imul
cdq
jecxz
push
mov
(bad)
stc
xchg
and
mov
and
inc
mov
std
loop
dec
and
mov
mov
dec
fist
jg
jns
pop
icebp
aad
mov
ror
add
into
gs
idiv
jns
daa
and
mov
setnp
push
sub
loop
dec
imul
jae
pop
mov
out
out
aad
call
cmp
xchg
das
daa
mov
sar
pop
jle
out
aaa
ret
into
pop
lea
(bad)
in
jmp
jecxz
mov
push
int3
jle
adc
xchg
shr
dec
aas
ret
push
aaa
leave
nop
pop
ror
jb
es
push
sbb
(bad)
cld
(bad)
je
popa
xchg
pop
adc
mov
cmp
inc
sub
add
ins
leave
test
cmp
inc
retf
sub
push
xlat
mov
jecxz
mov
std
imul
(bad)
xchg
mov
js
ret
mov
jmp
es
call
rdpmc
cmps
xor
rol
lods
fucomi
fimul
fwait
inc
pop
sub
sub
xchg
cmc
inc
and
mov
xchg
lock
xchg
xchg
pop
es
push
inc
mov
sub
movs
scas
leave
push
or
pop
push
mul
cmps
mov
push
fnstsw
dec
sub
push
out
xchg
and
add
scas
cmp
ror
mov
inc
test
pop
jo
movs
push
bound
imul
xchg
std
push
mov
ins
xor
je
push
pop
and
pop
fstp
xor
sbb
mov
movs
sbb
add
ja
inc
sub
out
jae
xchg
div
xor
or
push
push
or
xor
or
inc
push
daa
fdivr
das
cmps
and
rcl
cmp
clc
sbb
sub
jg
cmp
lds
inc
add
inc
mov
adc
push
bt
iret
dec
mov
or
es
fmul
mov
add
ror
mov
inc
sbb
dec
test
cdq
xchg
in
dec
jne
int
or
pushf
add
xchg
pop
mov
lds
ins
mov
and
sahf
stos
loopne
nop
xchg
(bad)
(bad)
xor
fmul
mov
xchg
ror
out
test
add
inc
lds
out
add
test
dec
or
mov
scas
(bad)
jp
icebp
ins
xor
inc
mov
adc
mov
cmp
fsubr
cli
in
mov
test
jecxz
mov
in
sbb
lods
div
and
mov
cmp
aas
pop
or
add
loopne
arpl
iret
jmp
mov
(bad)
pop
fst
jle
push
lea
cmps
and
adc
loop
xchg
nop
scas
jbe
sub
jae
mov
sahf
movs
stos
test
xchg
movs
ins
call
push
mov
lock
call
(bad)
mov
fptan
sbb
cwde
rcl
fidivr
sub
xchg
and
sar
mov
icebp
cmps
mov
push
push
jb
mov
rol
clc
push
add
push
rcr
push
stos
sti
jae
aam
add
imul
dec
add
push
inc
mov
push
mov
push
outs
test
xor
out
sub
xchg
shl
aad
pop
dec
add
sub
inc
jae
stos
add
hlt
rcl
(bad)
shl
mov
add
outs
hlt
jno
test
pop
xchg
or
add
lods
xor
push
imul
mov
call
adc
ja
fiadd
pop
cmp
inc
and
addr16
stos
movs
mov
cld
fwait
movs
repnz
dec
mov
dec
mov
push
out
dec
je
pushf
dec
out
xlat
mov
mov
xchg
mov
into
push
mov
inc
inc
andnps
je
in
xchg
scas
shl
xchg
mov
test
aad
dec
scas
not
fiadd
out
or
out
stos
aas
cmp
xchg
push
out
mov
cwde
out
and
scas
sub
xlat
arpl
fnstcw
aaa
(bad)
sub
mov
xchg
in
out
jns
das
mov
jo
leave
out
in
and
jl
stos
es
popa
daa
div
and
fdiv
dec
ds
leave
(bad)
ficomp
mov
loope
repz
enter
push
jae
gs
(bad)
cmp
xor
xor
fdivr
retf
pop
(bad)
dec
mov
addr16
aam
jnp
loopne
shl
or
mov
out
add
jp
jb
push
emms
out
fbld
mov
mov
add
movs
jns
pop
mov
pop
push
in
call
outs
repnz
jnp
push
in
mov
fistp
sti
xchg
dec
movaps
mov
(bad)
jbe
std
loope
(bad)
pop
inc
ins
inc
(bad)
hlt
icebp
sbb
add
repnz
(bad)
cmc
cdq
push
sbb
mov
fwait
rol
push
push
pop
das
rol
fld
loopne
scas
add
add
xchg
icebp
cmps
xchg
ror
pop
enter
push
rol
fcom
repz
pop
jmp
cli
pop
ds
movs
mov
xor
arpl
mov
ret
fmul
and
push
leave
lods
ret
jo
adc
pop
pop
ins
xor
sqrtps
fcomp
cmp
dec
in
and
xor
push
inc
mov
inc
cmp
mov
mov
jmp
sahf
loope
xchg
cwde
jne
cmps
jae
jns
addr16
and
xor
iret
cs
mov
or
test
test
cmp
add
inc
imul
hlt
push
push
or
mov
lahf
ds
pusha
mov
mov
retf
movs
push
sub
das
xchg
aas
mov
cs
lods
rol
pusha
jae
xor
test
cmps
fisttp
push
mov
stos
and
add
fimul
jno
xor
jge
sti
mov
popa
add
mov
pop
cmp
mov
loop
inc
xchg
jp
jnp
enter
lods
push
into
cs
mov
jmp
mov
pop
mov
mov
pushf
xchg
pushf
cmp
jno
dec
pop
popf
or
fst
rcl
ja
fs
mov
mov
mov
push
out
inc
enter
cli
scas
sub
sar
(bad)
or
cs
cmp
mov
mov
int3
dec
arpl
dec
xor
sbb
clc
(bad)
mov
cmp
cmp
xchg
jne
les
pop
stos
cmp
push
push
sti
nop
rcr
cmp
mov
lods
xor
cs
jne
and
test
into
aam
out
xor
push
dec
xlat
nop
cmp
xor
add
jne
inc
jnp
neg
retf
add
mov
and
rcr
jle
ss
inc
xchg
push
aas
push
movs
adc
xchg
xor
mov
(bad)
out
adc
sbb
lock
xchg
inc
or
repnz
mov
pushf
xor
add
mov
dec
lds
les
out
(bad)
les
imul
rcl
retf
xor
xor
adc
jmp
and
sbb
test
xchg
fisubr
test
xchg
loope
aaa
dec
cmp
addr16
aas
cmp
pop
or
dec
push
push
and
loope
jae
cmp
sbb
sub
push
sar
dec
sub
bound
adc
cbw
fs
aam
cmp
pop
aam
cmp
jnp
mov
and
pop
mov
sti
and
pop
cmp
push
pop
fs
pop
and
in
pop
sbb
arpl
mov
(bad)
cmp
add
daa
push
hlt
push
xor
or
outs
sti
dec
adc
fs
cmc
mov
lods
mov
pop
jb
rol
xor
mov
pop
jbe
dec
sar
imul
daa
test
push
repnz
leave
js
dec
jne
mov
mov
and
mov
aas
shl
jmp
dec
mov
cld
or
mov
xchg
cdq
pop
rcl
sbb
jecxz
push
ret
shl
frstor
ds
mov
mov
push
imul
add
ds
and
xchg
inc
repnz
test
fist
imul
dec
rol
scas
fstp
shl
adc
xor
mov
jmp
xor
or
enter
daa
adc
cmps
xor
dec
cmp
adc
lods
ss
fdivr
jnp
dec
outs
push
jns
nop
sahf
or
pusha
jmp
cld
je
(bad)
inc
pop
das
(bad)
fdivp
xchg
outs
daa
cmc
call
sub
xchg
and
jmp
and
fbstp
(bad)
movs
pop
fcom
pusha
mov
mov
xor
jmp
adc
stos
ficom
rol
xor
sbb
outs
out
arpl
test
sub
scas
clc
mov
jl
push
push
rol
in
pop
jecxz
lock
xlat
adc
jp
jae
sub
cmp
(bad)
mov
cli
ins
mov
movs
hlt
popf
out
push
cmp
mov
cmp
call
pop
adc
fcomip
or
retf
dec
inc
xor
add
push
mov
arpl
dec
cmps
pushf
daa
int
test
dec
daa
pushf
dec
fidivr
mov
into
jae
xor
sub
or
data16
fnstcw
stc
ror
ret
jge
mov
or
jl
outs
ins
rol
inc
ret
fist
jb
xchg
inc
or
dec
call
sub
mov
ret
mov
dec
out
test
movs
xchg
xchg
call
loopne
js
cwde
sbb
repnz
mov
push
sub
pop
and
jbe
addr16
or
je
xlat
hlt
cld
movs
out
sbb
psadbw
movs
jl
shl
ficom
cmp
sbb
ret
cmp
frstor
test
test
or
or
aas
xchg
inc
push
ss
inc
ins
loope
or
mov
lahf
out
jb
sub
jb
ret
test
ds
dec
(bad)
arpl
xchg
addr16
fisttp
fisttp
imul
cmp
adc
cld
shr
add
fmul
cmp
aad
and
mov
sbb
sub
mov
cwde
nop
sbb
cmp
imul
loopne
xchg
sbb
(bad)
out
aam
out
cmps
clc
sub
(bad)
mov
add
mov
stc
mov
aam
push
dec
ret
xchg
sub
ja
ficomp
inc
jl
sub
js
push
std
sbb
das
pop
call
sbb
xchg
and
dec
jg
push
movs
xchg
mov
ja
add
rol
xor
mov
shr
sti
sbb
or
add
sbb
dec
push
and
sub
and
imul
xchg
sbb
gs
or
adc
xor
pop
lock
mov
add
cld
adc
sub
and
dec
jecxz
cmps
push
sub
hlt
popf
xchg
cmp
jno
pop
sub
pop
push
stc
jbe
test
(bad)
(bad)
sbb
mov
mul
into
je
test
movs
push
jecxz
mov
in
adc
mov
dec
rcr
js
or
push
nop
je
cmp
loop
test
dec
push
mov
ret
push
jecxz
int
xchg
loope
jb
dec
dec
int3
rol
arpl
in
adc
xchg
cmp
pop
daa
aas
mov
fwait
or
cmp
in
or
push
call
stos
enter
and
sbb
movs
fidiv
and
and
stos
leave
xor
jno
nop
lds
inc
out
addr16
imul
xchg
dec
add
sub
jbe
push
sti
push
popa
shr
jns
out
imul
xchg
sub
sbb
fistp
gs
pop
adc
aad
outs
retf
sbb
and
sti
(bad)
cmp
add
push
aad
(bad)
xor
fst
stc
in
sahf
or
sub
mov
leave
jnp
or
in
mov
xchg
inc
jle
jae
add
imul
jl
pop
sbb
mov
mov
mov
mov
pop
call
jle
in
rol
jne
lock
arpl
adc
test
sahf
jp
cmp
xor
xchg
jmp
(bad)
and
add
les
ds
xor
xchg
cdq
push
push
add
jae
mov
adc
lahf
loope
cmp
icebp
xor
ror
sbb
(bad)
jmp
sub
rol
jl
mov
pushf
ss
push
dec
push
adc
mov
dec
clc
xchg
lea
inc
add
out
adc
sbb
or
jbe
jne
jae
dec
cmp
cmp
pop
sbb
fistp
xchg
mov
jl
int
and
fcmovnbe
cmp
sub
fidivr
ror
cmp
test
add
cmp
jp
mov
mov
jg
inc
in
cli
inc
cmp
inc
sbb
gs
lock
lock
or
cmp
dec
push
cs
and
jle
je
adc
mov
rcr
xor
inc
sbb
push
jg
outs
lds
fadd
in
movs
(bad)
lds
loope
push
mov
shr
xchg
and
lods
js
inc
jae
mov
call
inc
mov
sub
fsubr
and
loop
dec
mov
aad
ror
sub
in
and
adc
dec
mov
inc
mov
inc
rcl
xor
test
add
dec
cdq
bound
xchg
mov
jp
and
pop
mov
mov
lds
push
dec
mov
movs
mov
xor
xchg
mov
xlat
test
jg
icebp
mov
sbb
cmp
test
fdivr
dec
mov
jo
push
scas
(bad)
sub
stos
gs
and
movs
jmp
les
inc
cdq
jae
pop
add
xchg
xchg
jb
cmps
arpl
out
call
test
pop
pusha
pop
inc
mov
xchg
add
xchg
adc
ds
push
mov
xor
mov
cmps
aaa
clc
test
std
enter
adc
inc
cwde
leave
arpl
xor
sbb
int3
(bad)
fimul
leave
jne
push
pop
cmp
lds
xor
pop
xor
mov
xchg
leave
pop
adc
in
ss
jb
jmp
aas
shl
loopne
dec
in
mov
mov
xlat
mov
sbb
inc
ffree
cmp
jecxz
jl
movs
retf
sar
or
pop
loop
push
out
cmp
pop
out
sub
add
out
repz
leave
popa
imul
shl
cmps
jmp
xchg
in
and
cmp
cld
inc
cs
xchg
adc
push
mov
les
daa
push
xchg
cdq
sbb
outs
and
jecxz
fstp
icebp
jl
dec
ins
fsubrp
adc
aam
adc
es
sub
scas
fimul
leave
loope
inc
dec
mov
pop
add
aas
mov
push
sub
ss
popf
inc
pop
push
(bad)
jp
repz
xor
arpl
int
scas
(bad)
jo
mov
and
shl
mov
jge
stc
and
inc
mov
adc
jecxz
sub
mov
adc
fadd
jne
adc
jmp
inc
inc
push
jns
and
sub
sbb
pop
lea
xchg
in
or
xchg
mov
mov
movs
fsubr
imul
nop
cwde
js
xor
test
jmp
call
je
jnp
sahf
js
pop
(bad)
mov
inc
in
xor
pop
into
imul
push
ror
arpl
aad
(bad)
cli
repz
test
dec
fnsave
sbb
mov
(bad)
mov
(bad)
movs
int
cmp
gs
imul
mov
push
data16
and
pop
aaa
fwait
mov
mov
add
test
nop
pop
addr16
les
jg
into
jecxz
inc
mov
dec
and
lock
sub
sub
xor
xchg
sbb
push
in
outs
ror
outs
inc
std
fisttp
sub
inc
inc
popa
push
lea
push
or
sahf
imul
pop
into
cmp
dec
pop
push
daa
fld
sub
xchg
xchg
scas
or
and
mov
xchg
sti
(bad)
xor
rcl
jecxz
push
leave
pop
adc
inc
add
jge
dec
or
repz
push
mov
nop
test
test
pop
mov
pop
mov
imul
add
aas
repnz
movs
aad
cwde
sbb
mov
jmp
xchg
cmp
pop
mov
in
jl
sbb
xor
mov
mov
fwait
pop
mov
pop
cmp
(bad)
add
mov
mov
mov
lods
mov
pop
and
pop
jmp
jmp
pop
adc
loope
pop
push
sti
sahf
btc
cmp
inc
mov
adc
mov
les
xor
mov
dec
fnsave
push
cmp
hlt
cs
mov
add
div
movs
cmp
inc
dec
lahf
cmp
fmul
inc
dec
scas
ss
xor
(bad)
jg
dec
sbb
sahf
loope
jns
xchg
lahf
out
or
jmp
mov
mov
inc
jmp
cmp
mov
scas
xor
pop
hlt
loope
ins
pop
jno
jge
jbe
xor
jae
and
clc
jnp
and
je
adc
mov
arpl
push
std
mov
or
into
cmc
call
stos
out
neg
les
sar
inc
dec
call
cmp
dec
call
movs
mov
pop
int
adc
stc
push
mov
test
cmc
add
test
jecxz
mov
push
lahf
(bad)
jmp
lods
leave
aam
stc
pop
sar
pop
test
shr
and
mul
loope
les
int
fnsave
push
fmul
aam
cli
jmp
(bad)
mov
sti
pop
pop
push
cmp
mov
lahf
mov
mov
xor
sub
add
popf
xor
cmp
sub
dec
inc
pushf
out
stc
add
scas
sbb
inc
rcl
aad
fadd
push
pop
xchg
dec
push
test
lods
mov
cmp
test
stc
ret
push
fsubr
inc
movs
outs
sub
xchg
mov
inc
mov
jno
sahf
pushf
ds
push
mov
dec
imul
jmp
call
test
js
adc
jnp
(bad)
add
xlat
pop
js
test
xchg
in
mov
rcr
pop
push
ins
cmp
pop
mov
sahf
sbb
ror
dec
dec
imul
dec
or
sti
lea
movs
sbb
mov
xor
popf
mov
loop
mov
leave
cld
ins
bound
sbb
mov
mov
jge
aaa
xor
xor
into
popf
addr16
and
xchg
pop
push
adc
ss
bound
call
punpckhdq
aaa
xor
mov
mov
scas
js
add
popa
sub
mov
adc
adc
and
pop
cmp
test
mov
mov
pop
leave
dec
popa
add
lock
xor
ds
mov
daa
add
bound
aam
in
stc
movs
xchg
push
lods
repz
xchg
(bad)
stos
xchg
adc
(bad)
xchg
stos
dec
adc
inc
inc
push
lods
dec
mov
xor
pop
dec
ret
add
aaa
push
pop
out
out
fsubr
movs
rcr
out
push
or
movs
loop
inc
fidiv
daa
mov
mov
pushf
inc
or
and
inc
scas
mov
mov
mov
es
(bad)
fst
mov
mov
jo
xchg
inc
fiadd
(bad)
jmp
pop
in
xor
dec
xor
scas
inc
movs
mov
xor
stos
imul
(bad)
aaa
gs
mul
push
mov
mov
loop
pusha
loopne
jne
outs
dec
jne
mov
addr16
test
aaa
out
cmp
lahf
cmp
push
or
mov
inc
imul
pop
out
popf
jl
rcl
out
adc
xor
addr16
mov
cmp
sbb
scas
mov
jle
xor
clc
sbb
cmp
xchg
mov
dec
push
repnz
mov
push
and
cwde
adc
ficom
add
cmp
xchg
mov
cmps
aas
lods
stc
jmp
and
(bad)
cmps
or
fucompp
add
nop
fidivr
xor
adc
xor
lods
xor
and
push
mov
int
das
int
xchg
or
js
push
xor
fnstsw
mov
and
xchg
lds
sbb
pop
inc
mov
mov
inc
xchg
mov
and
mov
stos
dec
out
push
pop
mov
pop
hlt
arpl
popf
mov
xor
xor
or
push
push
cdq
jecxz
pop
mov
adc
adc
es
add
sbb
jne
sbb
mov
push
or
sub
push
ss
inc
mov
mov
dec
and
or
add
fidivr
lahf
inc
inc
ffreep
push
mov
sti
fstp
movs
pushf
cmps
mov
push
ret
cli
aam
pop
mov
push
test
shr
dec
cmp
sti
adc
jnp
jl
loop
cmp
aas
dec
xor
ja
mov
das
scas
xor
ds
push
rcl
mov
mov
dec
mov
shl
test
inc
pop
pop
loop
(bad)
stc
fist
repz
sbb
sub
dec
(bad)
adc
lock
cli
sbb
and
sbb
jl
out
mov
jo
js
int3
sahf
mov
mov
dec
inc
dec
adc
movs
xor
shl
loop
ret
jae
push
loope
mov
(bad)
push
gs
loopne
xchg
jmp
icebp
mov
retf
jnp
iret
dec
push
fstp
dec
repz
in
push
ret
xlat
cmc
push
and
in
out
arpl
in
cdq
inc
js
push
retf
push
sbb
les
repnz
rcr
xor
xor
pushf
out
es
xchg
mov
outs
mov
test
cmp
lods
push
dec
lock
dec
pop
test
pop
daa
push
jmp
inc
sub
das
xor
pop
xor
xchg
fimul
add
lea
pop
out
inc
imul
pop
add
arpl
dec
mov
out
sbb
ins
sbb
aaa
and
repz
sub
pop
imul
xor
jo
repz
imul
and
dec
xlat
jbe
push
pop
movs
les
ret
push
push
mov
jg
pop
push
mov
xchg
and
mov
push
leave
add
les
push
rcl
shl
xchg
sbb
lock
push
xchg
add
push
lahf
das
jae
repnz
sub
loop
add
icebp
pop
movs
or
outs
pop
loop
jae
std
jb
xchg
scas
sbb
mov
in
inc
sbb
mov
adc
fidivr
sti
rcl
in
xor
xor
das
enter
xchg
mov
mov
maskmovq
inc
push
xor
pop
cmp
mov
mov
and
leave
push
dec
stos
jecxz
inc
mov
out
jne
mov
add
pop
mov
repnz
inc
scas
sub
lods
add
push
fild
stc
jb
cmp
and
movs
mov
inc
pop
imul
cmp
pusha
pop
cmps
loopne
ret
aam
inc
or
ds
and
fidivr
imul
inc
test
mov
mov
xor
xchg
xor
in
and
fisttp
test
pop
push
cli
stc
movs
loop
rcr
cmp
pop
mov
or
cmp
push
call
jnp
int
(bad)
xor
sbb
push
fnstenv
dec
jne
jle
cmp
ds
sub
shl
inc
xchg
sbb
add
pop
shr
push
js
pop
push
jg
lea
loope
dec
in
mov
lock
fs
xor
aad
push
inc
xchg
ins
add
ret
in
in
inc
(bad)
cld
jg
jbe
jl
test
fisubr
push
je
inc
into
call
mov
pop
push
xor
sub
dec
sbb
sub
jp
(bad)
in
pop
and
popf
add
scas
pop
es
dec
in
jl
ins
or
xor
out
xchg
rcr
mov
adc
adc
mov
dec
cmp
lods
push
fldcw
jns
ds
adc
jmp
push
int3
fstp
xor
(bad)
jmp
cmp
inc
ja
jnp
cdq
sahf
mov
aad
sbb
das
inc
adc
pop
xchg
push
(bad)
outs
rol
popa
(bad)
mov
popa
sti
mov
inc
inc
cmp
scas
out
and
ja
push
call
push
jae
lea
mov
push
(bad)
mov
ror
mov
stc
ins
pop
mov
mov
aad
sbb
jae
jmp
test
scas
pop
ret
cmp
ins
sar
(bad)
aas
mov
in
mov
pop
xchg
ds
adc
cmp
rol
adc
mul
test
jo
out
xchg
fild
add
xor
xchg
div
std
mov
cmp
mov
xor
icebp
or
push
sbb
mov
lds
push
push
int3
adc
aad
fsubr
xchg
scas
pop
mov
sub
mov
mov
adc
in
pusha
push
mov
push
and
fwait
and
out
loope
xchg
mov
fwait
cwde
inc
mov
arpl
out
dec
mov
dec
push
jnp
inc
nop
xlat
adc
rcr
sub
pop
aam
fsub
rcl
adc
mov
data16
lock
out
repz
(bad)
(bad)
outs
je
mov
sbb
in
mov
pop
imul
jae
int
xchg
jg
sahf
jns
or
(bad)
add
and
jecxz
mov
mov
push
adc
fsub
adc
icebp
inc
mov
inc
adc
xchg
jle
aas
loop
fidiv
iret
or
nop
cmp
imul
cli
in
ficomp
inc
pop
push
push
test
dec
clc
pop
lock
ja
out
(bad)
lods
enter
inc
dec
into
add
lods
cmp
sub
cmp
push
adc
mov
push
scas
add
ret
fucom
test
add
sub
jg
push
stos
clc
fsubr
inc
push
(bad)
jmp
mov
inc
out
cmp
ins
in
lods
mov
ins
jle
jb
sub
shl
std
aaa
test
adc
push
in
ss
pop
cmp
cmc
mov
jl
icebp
xor
js
scas
bound
(bad)
sub
cdq
pushf
jne
sub
mov
test
in
cli
inc
scas
ret
mov
pushf
and
add
cmps
loopne
jbe
fnstsw
jge
repnz
xchg
ret
pop
mov
sar
(bad)
fsubr
push
jae
push
mov
dec
(bad)
push
lock
pop
push
in
into
adc
adc
mov
xor
inc
popf
mov
outs
push
es
sub
jns
or
pop
test
pop
cmp
jecxz
les
(bad)
mov
lahf
pop
sub
lea
xor
push
mul
(bad)
out
inc
mov
mov
inc
das
xor
lods
cmp
bound
movs
sbb
popf
add
jle
(bad)
inc
sub
cwde
dec
xchg
ret
cmp
test
and
retf
push
pop
adc
outs
mov
cmp
sti
and
aaa
pop
into
jnp
inc
jo
scas
push
cmps
clc
xor
cmp
inc
cmp
dec
enter
inc
mov
add
mov
jne
sbb
shl
dec
adc
push
cmp
inc
ja
mov
dec
fst
pusha
dec
pop
xor
cmp
push
pop
xor
cdq
clc
nop
or
mov
in
mov
loopne
in
mov
test
repnz
xor
or
cmps
mov
pop
ja
sub
cld
daa
jmp
out
ret
push
push
fsubr
mov
mov
stos
cmp
js
out
jecxz
out
outs
mov
inc
or
ret
sbb
inc
adc
sub
jo
nop
xor
mov
gs
fsub
test
xchg
pop
push
cmp
inc
add
xchg
xor
shl
mov
scas
outs
dec
stc
push
cmp
cmps
mov
pop
jnp
stos
push
mov
push
pop
xor
jmp
dec
xchg
push
rcr
push
sub
fist
push
loopne
nop
xchg
das
ret
xchg
xor
mov
inc
outs
mov
mov
sub
add
mov
loop
cmc
es
inc
addr16
dec
xchg
mov
js
xor
rol
jo
pop
pusha
enter
mov
outs
out
or
mov
jle
pop
leave
adc
mov
add
inc
stc
enter
push
mov
outs
dec
push
inc
mov
test
jbe
mov
add
cmp
pop
mov
adc
push
pop
inc
sub
ins
sbb
in
jmp
retf
and
push
fcomp
repnz
inc
cmps
inc
sub
(bad)
popf
or
cmp
xor
mov
mov
and
repnz
fs
(bad)
pop
test
mov
enter
lods
inc
push
or
push
popf
popa
xchg
push
cdq
bound
xor
pop
es
or
or
es
faddp
sar
imul
xor
or
sub
sbb
repnz
rol
xor
pusha
xchg
in
push
inc
xchg
lea
cli
ror
int
cwde
ss
scas
push
adc
xchg
or
test
xchg
mov
lea
sub
mov
sbb
mov
fnstsw
mov
aaa
xchg
fcomp
xchg
pop
mov
add
xor
int
cld
mov
les
test
cwde
ins
inc
ins
cmps
(bad)
int
mov
pop
sti
sbb
sub
js
in
dec
pop
or
sar
xor
mov
cwde
sbb
sub
adc
jmp
aas
js
adc
cmp
std
push
or
add
retf
fcom
(bad)
out
push
mov
mov
into
out
sbb
out
ror
aam
mov
xchg
ror
lock
push
imul
mov
out
dec
popf
or
bound
mov
sub
stos
jo
sahf
not
icebp
rcr
test
xchg
inc
rcl
ins
pop
sub
push
ret
mov
and
mov
and
xchg
cmp
inc
jne
inc
fisttp
pusha
movs
out
mov
repnz
sbb
scas
call
mov
xchg
loop
jo
movs
adc
dec
push
pop
ins
and
push
mov
div
dec
fsub
pop
les
out
mov
test
retf
shl
in
mov
sub
add
xchg
mov
lahf
fst
sahf
or
call
fs
push
ja
pusha
les
test
adc
add
push
popf
les
imul
fucomi
jle
pop
out
ret
push
sub
sar
jbe
outs
sub
jg
add
push
bnd
int
ins
out
(bad)
out
sbb
imul
cmp
jmp
dec
mov
sub
ss
(bad)
mov
ins
and
cmp
push
(bad)
jge
jb
cmp
pop
sbb
push
into
in
xchg
sar
sub
push
jb
stos
mov
(bad)
in
mov
pop
repnz
jae
add
test
in
in
movs
test
xchg
pop
or
xor
cmp
int
or
add
out
push
jl
sahf
fnstenv
fs
mov
iret
cmp
jmp
ficomp
push
pop
(bad)
mov
push
test
sbb
out
mov
push
push
in
jno
int3
sbb
loope
jp
scas
push
hlt
sub
jno
mov
jmp
mov
les
jmp
nop
int3
mov
push
ins
push
mov
pop
jle
sub
jle
mov
lds
jmp
out
mov
bnd
jg
jge
mov
xor
push
add
movs
into
mov
std
mov
movs
ja
dec
out
pop
bnd
xchg
jne
int
mov
dec
pushf
(bad)
f2xm1
out
push
mov
push
mov
jmp
xor
mov
retf
push
outs
dec
cmps
lea
push
dec
mov
test
mov
sub
mov
outs
fcomp
jb
mov
ficom
pop
cmp
adc
dec
sysret
jecxz
xlat
or
rcl
xchg
mov
or
add
sub
mov
add
sbb
retf
xor
neg
fsub
stos
clc
mov
lods
add
lods
inc
sahf
jecxz
mov
and
cmp
fidiv
cmp
inc
loop
cwde
stos
gs
and
mov
cmps
pop
imul
mov
dec
jge
pop
psllq
loope
adc
aas
cs
cmp
cli
loope
gs
sbb
out
push
mov
jle
sub
arpl
jp
out
sub
arpl
pop
pushf
xchg
mov
fdivr
dec
sbb
xchg
mov
cmp
sbb
push
(bad)
jmp
scas
jg
shld
jne
adc
mov
xor
pop
movs
sub
mov
mov
sub
hlt
mov
dec
push
rcr
push
jp
std
int
sub
xchg
inc
push
cld
jmp
sbb
xchg
es
fist
arpl
mov
cmc
cmp
(bad)
lods
loop
sahf
fwait
popa
mov
pop
xor
ret
mov
inc
adc
inc
inc
mov
sub
sub
inc
loope
(bad)
add
pop
and
sbb
adc
ret
xor
pushf
push
dec
jnp
sbb
jmp
fsubr
sbb
sub
cmc
mov
or
inc
fiadd
xchg
cmp
xor
push
push
stc
jg
adc
cmp
sub
sbb
rol
fisub
cmp
arpl
imul
out
jb
fcom
sub
push
mov
mov
sbb
mov
mov
popf
mov
inc
sahf
cmp
pop
cmps
pop
add
jecxz
xchg
scas
out
dec
out
jle
push
ja
cld
mov
dec
and
mov
aam
mov
cli
daa
(bad)
dec
or
mov
jnp
loopne
arpl
xor
ror
sub
add
in
jbe
loope
push
cmp
mov
cmps
pop
clc
mov
sub
popf
mov
ficom
jmp
mov
fcomp
inc
mov
xchg
adc
jnp
nop
into
into
daa
jecxz
cmp
sub
cmp
cmp
jmp
(bad)
ins
js
xchg
popf
aad
sahf
out
rol
sti
in
pop
mov
ja
sub
ds
call
cmps
cdq
mov
xchg
(bad)
scas
mov
fist
add
je
adc
adc
(bad)
xchg
mov
rcr
dec
jmp
cmp
jmp
jg
pusha
and
sub
jnp
fwait
sub
mov
xchg
cmp
pop
int
dec
and
fs
push
inc
xor
or
inc
inc
sar
push
mov
scas
pusha
pop
cdq
jg
inc
or
ja
repnz
ins
jne
aaa
jne
int
push
sub
jmp
shl
or
sbb
sub
push
lods
jmp
les
mov
pop
dec
dec
std
lock
loope
and
scas
sahf
jecxz
sub
xchg
mov
pop
fist
mov
dec
adc
pop
lock
pusha
movs
mov
loop
ins
push
ja
xchg
jb
loopne
cmps
xchg
adc
cmp
and
mov
and
xor
fwait
sbb
add
pop
mov
mov
add
inc
imul
ss
ins
cmp
sti
jnp
jmp
jl
lds
stc
mov
arpl
inc
clc
int3
mov
dec
jb
imul
add
jne
inc
jb
pop
pop
xlat
jle
div
adc
shl
(bad)
icebp
push
icebp
in
inc
push
popf
jg
nop
push
sbb
jle
mov
pop
mov
sbb
xchg
push
add
jbe
push
iret
imul
cmp
sub
int
push
push
fwait
addr16
or
in
movs
icebp
rcr
inc
cwde
lods
inc
jmp
test
xor
push
push
scas
daa
ins
mov
mov
nop
inc
mov
lds
add
inc
mov
sub
add
mov
jecxz
and
push
adc
pop
adc
push
inc
sub
jo
xchg
xor
test
inc
pop
sbb
shl
cmp
lea
aaa
(bad)
(bad)
sub
sub
inc
fstp
or
mov
ins
inc
mov
test
setne
inc
(bad)
pop
push
adc
mov
ret
test
xchg
pop
sbb
and
cmc
movs
lea
dec
outs
xchg
das
aaa
adc
sahf
xchg
stc
retf
ins
pusha
into
xchg
in
scas
or
inc
mov
add
add
out
fisubr
jmp
mov
inc
xchg
and
cmp
data16
xchg
fiadd
and
(bad)
cmp
or
mov
loopne
sub
pop
add
push
sub
adc
(bad)
vmovshdup
sbb
pop
mov
xor
test
adc
mov
mov
imul
cld
mov
dec
enter
mov
sub
adc
add
pop
push
pop
dec
and
or
ja
cmps
adc
sbb
movs
mov
popa
add
daa
aaa
mov
mov
out
adc
fwait
push
jb
inc
into
pop
imul
xchg
jge
sub
retf
xlat
cwde
repnz
pop
xor
push
mov
xor
cmp
repnz
out
arpl
out
mov
mov
jecxz
outs
aaa
sub
xchg
rcl
cmp
call
cwde
lahf
mov
out
jb
in
not
les
shl
invd
mov
xor
int
push
cmps
stos
add
stos
pop
or
adc
stos
mov
js
jmp
pop
pop
xlat
pop
inc
test
jbe
loop
shl
mov
loopne
pop
stos
push
out
leave
int
cmps
fimul
mov
cdq
out
jo
jns
ins
inc
popa
pusha
pushf
lods
pop
fst
push
dec
out
aad
xchg
jmp
pop
jno
cmp
push
push
repz
xchg
js
pop
dec
mov
cmp
adc
fnstcw
(bad)
data16
rep
pop
arpl
lahf
and
inc
push
mov
in
outs
pushf
fild
inc
add
pop
cmps
aad
add
addr16
xor
ja
cmc
xchg
fdivr
out
mov
int3
inc
call
pop
cli
push
cs
pop
push
sti
cmp
es
pop
rol
popa
push
jbe
add
jmp
scas
aad
mov
push
lock
xor
mov
imul
stc
(bad)
dec
jecxz
sub
ret
ins
xchg
icebp
and
push
xchg
cmovge
xchg
inc
(bad)
cmp
(bad)
imul
arpl
out
sub
push
and
imul
cmp
cmp
mov
pop
sahf
cmp
inc
(bad)
rcl
out
ins
pop
lds
gs
or
sbb
jnp
sti
or
es
add
repz
pop
or
in
xchg
dec
mov
not
aaa
test
in
dec
ins
movs
add
imul
(bad)
jp
call
std
je
cld
rcr
dec
repz
aas
cmp
xchg
rol
dec
idiv
fs
pop
add
out
inc
and
jp
jg
xor
lock
sbb
sbb
push
ja
add
xor
pop
inc
shr
cmp
pop
outs
jmp
jne
ds
das
xchg
jp
cli
inc
sbb
arpl
popf
mov
adc
test
out
mov
push
cld
js
mov
enter
mov
mov
scas
nop
jmp
stos
call
mov
and
xor
pop
xor
mul
(bad)
pushf
cs
das
das
inc
add
dec
ror
mov
pop
cdq
dec
test
out
popa
pop
sti
pop
and
sub
cld
scas
mov
push
pop
ins
dec
scas
or
int3
cmp
sti
pop
cmc
xchg
mov
test
int3
mov
xor
lea
jbe
jnp
(bad)
adc
cmp
into
mov
add
dec
or
mov
rcr
icebp
mov
jb
xchg
or
xor
out
call
(bad)
xchg
jnp
(bad)
je
pop
pop
ds
loopne
adc
mov
sbb
adc
pushf
and
outs
sbb
fadd
sahf
sbb
xlat
iret
movs
pop
jno
and
ret
test
rcl
dec
adc
clc
iret
les
aaa
jg
mov
call
jb
push
pop
jmp
leave
loop
sbb
cmp
push
cwde
dec
mov
ins
ret
xchg
nop
out
shr
push
out
sub
add
add
das
in
jg
inc
les
jb
pop
in
shl
nop
cmp
(bad)
clc
mov
mov
ss
es
das
add
sub
push
aas
pop
cmp
add
adc
loopne
loop
js
push
or
imul
retf
sub
mov
popf
push
mov
pop
out
cmp
sbb
pop
pop
push
retf
or
cwde
movs
jns
inc
std
jl
adc
push
imul
shr
cmps
fnstenv
adc
and
out
shl
jle
lock
mov
xchg
mov
mov
pop
loopne
mov
fisttp
cmps
xor
std
mov
sbb
bound
xor
push
xchg
ds
mov
add
mov
loope
cdq
fimul
aad
out
stos
pushf
aaa
fwait
cmp
jle
mov
dec
push
inc
cdq
daa
outs
mov
ror
jg
push
test
in
stos
mov
dec
pop
push
es
ret
mov
movs
adc
inc
push
jns
fild
cmps
ret
call
fnsave
cmp
pop
out
mov
adc
fs
mov
mov
retf
mov
mov
pop
mov
repnz
(bad)
pop
repnz
cdq
push
xchg
sbb
push
sbb
call
xor
fwait
adc
mov
idiv
or
xchg
call
cwde
int3
mov
(bad)
out
cmp
fnstcw
fmul
pop
pop
gs
into
dec
(bad)
xor
cmps
or
nop
add
iret
xchg
pop
es
or
add
pop
popa
fistp
dec
pop
ss
pop
in
jno
test
aaa
mov
lds
out
loopne
aam
or
pop
stos
retf
inc
int3
sbb
repz
push
mov
out
pop
fwait
push
mov
push
mov
out
fs
jno
daa
inc
lods
add
cmp
xor
cmp
xlat
push
cdq
das
jns
fwait
jno
mov
sbb
pop
push
push
push
xor
mov
push
xchg
xchg
and
jo
rcl
xchg
jnp
mov
pop
mov
cmp
je
xor
mov
mov
out
es
lahf
xchg
cmp
push
lds
leave
jnp
mov
and
rcl
inc
sbb
xchg
inc
mov
dec
xor
aad
cli
imul
mov
adc
in
sub
jnp
in
mov
(bad)
loop
pop
imul
or
sbb
ins
mov
lock
xchg
ret
mov
jns
cli
mov
add
pop
div
adc
jmp
jb
add
push
xchg
int3
jmp
sbb
sbb
imul
push
(bad)
popa
imul
push
xchg
pop
jmp
xchg
out
sub
stc
dec
daa
and
sub
mov
(bad)
ins
dec
loope
cli
adc
js
jnp
jmp
adc
call
pop
outs
ret
fmul
xchg
mov
lds
int3
enter
cmc
add
adc
push
adc
adc
aaa
lods
movs
adc
pushf
and
mov
test
popa
adc
xor
xor
in
sbb
das
jg
or
retf
jne
fisub
add
(bad)
jbe
clc
cmps
mov
in
jns
in
lds
inc
sub
sbb
dec
xchg
adc
in
lds
call
xchg
sbb
mov
mov
fsubr
sbb
add
jnp
mov
mov
test
xchg
jp
cmps
mov
test
jg
aaa
mov
ret
pushf
or
xor
jo
(bad)
hlt
push
ins
jmp
sbb
or
sub
xor
(bad)
sbb
jl
pop
push
add
or
adc
mov
ds
int
adc
lahf
inc
dec
and
sub
xchg
and
push
pusha
call
addr16
clc
stc
pop
lds
lds
(bad)
aas
mov
cmp
lock
popa
das
sahf
push
mov
add
push
or
fadd
out
rol
ficomp
jno
fsubp
int
pop
push
loope
pushf
into
xchg
stos
jmp
and
xchg
inc
mov
xchg
mov
aaa
pushf
lahf
mov
cwde
sub
pop
xor
pop
and
mov
mov
loope
push
jl
sbb
adc
outs
and
mov
dec
sbb
call
std
repz
ds
icebp
int
pop
out
cmp
pop
(bad)
xlat
in
in
dec
lahf
pushf
shl
cmc
repz
push
inc
test
xor
movs
push
daa
cmp
jbe
(bad)
jo
xor
adc
sub
sbb
lods
ret
loopne
push
(bad)
(bad)
in
scas
jns
mov
jp
ficomp
push
hlt
jns
in
lods
mov
mov
loope
(bad)
push
cdq
xor
lods
aas
test
(bad)
in
bound
mov
scas
lds
shl
and
and
jo
dec
stos
add
lods
in
fadd
addr16
pop
std
aaa
push
into
jns
mov
push
sub
xchg
add
pop
mov
lds
cwde
pop
and
sub
cwde
push
pop
jb
sub
jp
js
adc
or
ds
cmps
mov
sti
inc
ins
in
lods
pop
push
dec
(bad)
cmc
mov
xchg
push
shr
add
fcom
pop
cld
pop
(bad)
ffree
mov
retf
jecxz
mov
cld
or
xchg
push
adc
fdiv
push
xor
stos
mov
aaa
gs
or
mov
movs
dec
div
jbe
xor
test
or
outs
and
fiadd
cmp
(bad)
push
scas
test
stos
inc
push
adc
cld
pop
dec
mov
jne
nop
call
mov
adc
push
mov
mov
add
cmps
jle
mov
or
sahf
imul
cmp
dec
mov
repz
aaa
movs
imul
dec
pop
inc
popa
in
fidiv
mov
lock
push
cmp
mov
ror
loope
retf
and
fld
xor
(bad)
jo
dec
mov
rcl
inc
xchg
push
cmps
inc
in
scas
mov
mov
iret
sub
mov
scas
loop
inc
stos
cmpxchg
cs
das
push
js
aam
repz
popa
and
ins
sbb
mov
push
cmp
js
sar
in
scas
aas
pop
pop
nop
adc
repz
jnp
fsubr
pop
cdq
nop
fwait
out
inc
rcl
test
sbb
or
(bad)
or
or
push
ss
or
mov
lock
rcr
hlt
jno
fistp
add
or
popf
jns
lahf
lahf
rcl
or
imul
out
ss
add
sub
or
popa
aad
jo
sub
dec
mov
aas
adc
sahf
or
sbb
int3
out
outs
loop
dec
in
mov
sbb
jle
xor
sbb
js
push
xchg
sbb
out
ss
inc
mov
ja
adc
mov
clc
inc
shl
movs
xor
loop
or
inc
inc
sbb
test
popa
(bad)
jg
dec
adc
xlat
jbe
and
icebp
aam
pop
in
jecxz
mov
cld
push
loopne
jle
popf
cli
adc
outs
sub
aam
inc
cli
xlat
or
fnstcw
jl
pop
or
clc
jle
push
mov
inc
cmp
jp
push
xchg
push
mov
xchg
mov
jne
push
add
push
xchg
add
xchg
jp
std
ret
stc
pop
in
sbb
enter
fcmovu
jl
or
pop
fisubr
add
or
cs
jmp
mov
shl
repnz
aaa
push
or
mov
and
xchg
pop
xchg
fadd
sbb
push
jbe
ret
rol
pop
in
mov
mov
pop
xchg
neg
cld
jmp
je
mov
(bad)
adc
xor
cld
stos
dec
inc
outs
cmps
pop
and
inc
icebp
mov
pop
and
repnz
lahf
ja
cmp
fdivr
sbb
push
leave
aad
int3
(bad)
adc
mov
arpl
in
or
shr
and
retf
ret
pop
adc
dec
stos
mov
push
sti
push
js
aam
mov
loopne
daa
xchg
pop
pop
mov
jp
adc
rcl
jns
push
dec
fist
sub
outs
aas
fcmovnu
xor
sbb
icebp
push
cdq
fsubr
jb
jmp
in
js
mov
stos
jmp
fwait
and
adc
and
jge
mov
adc
loope
mov
add
dec
inc
and
repz
mov
das
jg
xchg
xchg
(bad)
xchg
mov
xchg
fidiv
sub
inc
add
lods
cmps
das
add
fst
sbb
push
iret
add
push
mov
inc
cmp
test
push
inc
stos
pop
cmc
cmp
stc
add
mov
jb
mov
pop
(bad)
jne
sbb
leave
dec
movs
stos
push
and
mov
movs
jo
cwde
add
fidiv
xchg
jno
inc
(bad)
mov
cmp
or
xchg
xchg
inc
in
das
ds
inc
jge
sbb
mov
add
mov
retf
scas
repz
nop
jno
mov
aam
mov
stos
scas
xchg
mov
jecxz
aad
mul
push
aad
pop
and
dec
out
pop
xor
mov
(bad)
pop
push
push
popf
rcr
cld
inc
sub
mov
(bad)
xor
mov
call
and
popf
pop
inc
imul
(bad)
jmp
fs
test
sar
mov
pop
pop
jle
jle
fmul
into
adc
xor
into
(bad)
mov
dec
lock
sbb
cmc
int
in
(bad)
push
cmps
mov
(bad)
stc
xchg
mov
ret
nop
adc
and
stc
pop
fnsave
sub
push
movs
sub
call
fnstcw
sbb
dec
push
loope
out
call
or
push
or
stos
and
call
mov
sbb
dec
outs
(bad)
push
mov
push
outs
xchg
bound
and
add
jg
sti
fisub
fimul
inc
das
mov
mov
icebp
lods
stos
inc
jmp
cmp
cmp
ja
pop
cld
sti
xor
add
sub
ins
clc
fidiv
add
test
xor
fwait
dec
rcl
add
add
std
or
pop
cmps
inc
lock
addr16
movs
jge
repnz
cmps
retf
daa
(bad)
(bad)
cmp
scas
pop
mov
cmps
(bad)
loopne
hlt
test
jae
mov
fisub
dec
push
xchg
imul
mov
mov
test
hlt
jns
jmp
or
(bad)
aad
mov
push
sbb
pushf
dec
and
repnz
mov
push
or
imul
xchg
and
shl
pop
cmp
jmp
out
and
and
das
mov
adc
sbb
fld
fstp
movs
jb
xchg
sbb
and
add
push
femms
fstp
jle
fisubr
xlat
xchg
popf
jbe
movs
scas
mov
aaa
pop
cmp
cmps
or
imul
clc
dec
xor
jecxz
add
loop
dec
xchg
sub
imul
mov
sub
mov
jp
(bad)
imul
inc
push
repz
cmc
sub
sbb
inc
(bad)
cmp
mov
mov
int
or
xor
cmps
lds
inc
push
jns
mov
cmc
push
sti
ss
xchg
lock
(bad)
push
jl
imul
xchg
jae
push
jmp
cs
mov
push
test
ficom
mov
adc
pop
clc
pop
dec
or
fld
dec
test
adc
and
and
shl
test
pop
mov
ds
cmp
push
ins
call
in
lock
add
imul
jo
jp
mov
imul
and
gs
ins
mov
mov
xchg
dec
sub
xor
push
xchg
fimul
sahf
retf
arpl
jg
push
dec
in
repnz
cmp
cld
mov
adc
or
xchg
fiadd
sbb
enter
cs
mov
loopne
inc
les
sub
push
push
push
inc
add
xor
inc
ins
mov
pop
push
ret
(bad)
iret
jae
call
ret
aas
and
dec
mov
popf
sub
cmp
ds
and
les
test
pop
cmp
dec
or
xchg
pop
xchg
and
sar
and
sub
repnz
into
mov
jge
dec
in
hlt
jne
xor
mov
xchg
jle
dec
rol
fwait
pop
push
xchg
mov
rcr
mov
enter
xchg
sbb
mov
xchg
jecxz
(bad)
pop
jecxz
dec
jle
mov
mov
xor
push
movs
iret
in
dec
inc
into
mov
lods
push
jg
push
push
iret
cmp
call
nop
xor
sbb
in
ss
inc
adc
ds
std
mov
xor
retf
(bad)
data16
push
cmc
(bad)
(bad)
ds
mov
pop
outs
or
cmps
adc
enter
add
jae
fiadd
mov
test
jl
dec
xchg
dec
inc
mov
adc
bswap
lods
(bad)
push
pop
mov
arpl
mov
inc
or
push
adc
and
pop
and
jl
les
test
retf
mov
or
pop
(bad)
sbb
pop
fld
bound
cmc
xchg
enter
test
inc
stos
and
leave
std
std
or
pop
data16
enter
hlt
(bad)
ret
dec
sbb
push
mov
clc
xor
jns
aad
mov
sahf
cmp
sbb
stos
ret
jns
jae
push
push
movs
xchg
jno
mov
jge
sbb
add
dec
xor
pusha
inc
repz
dec
shr
jo
rol
leave
mov
cmp
popa
arpl
pop
xor
nop
mov
and
adc
inc
or
jno
sbb
sbb
inc
push
mov
jl
(bad)
std
mov
jmp
clc
sub
fs
loopne
add
dec
ret
loop
arpl
pop
popf
fcom
jle
sbb
jge
call
cmps
xor
add
idiv
add
sbb
push
xor
sub
out
adc
lea
adc
out
inc
pop
pop
pusha
jbe
shr
fwait
call
sub
push
iret
scas
sub
sar
sbb
jecxz
scas
out
or
xor
cmp
push
(bad)
add
fistp
sbb
xor
pushf
shl
daa
jae
sahf
leave
popa
mov
test
xor
sbb
or
mov
popa
(bad)
push
(bad)
in
dec
aam
in
out
inc
(bad)
sti
or
lahf
mov
adc
fimul
pop
sbb
jae
xor
adc
jne
mov
mov
add
mov
jb
push
(bad)
arpl
xchg
pop
mov
pop
or
shr
pop
fmul
imul
fwait
sub
adc
sbb
loop
fwait
mov
imul
push
(bad)
pusha
adc
cmp
hlt
in
cmps
mov
rcl
or
dec
dec
cmp
xchg
es
sbb
push
fiadd
jmp
dec
in
(bad)
jmp
inc
les
dec
lds
pop
inc
std
add
jle
and
xor
fdiv
test
je
pushf
aad
rol
loop
push
mov
lock
xor
jmp
pop
(bad)
sbb
jmp
out
sar
xor
pop
loope
inc
imul
and
pusha
int
sbb
add
cmp
xchg
nop
int3
shr
push
pop
mov
imul
sbb
std
dec
push
pop
jg
div
inc
mov
push
jmp
push
shr
mov
cmp
scas
into
cld
das
mov
in
inc
xor
add
xor
inc
inc
jae
imul
push
(bad)
push
dec
lods
pop
fnsave
mov
ret
sub
aam
bound
xor
iret
cmc
mov
sub
imul
sbb
push
sbb
inc
ins
adc
add
loop
call
adc
cs
dec
enter
movs
jbe
test
push
mov
jg
or
and
das
dec
inc
gs
scas
mov
in
outs
push
mov
clc
stc
(bad)
ins
cmps
enter
cmp
jg
in
loope
push
xchg
in
icebp
and
push
mov
xchg
inc
xchg
sub
mov
xchg
xor
push
fadd
outs
fmul
add
out
sahf
jno
cmp
inc
or
enter
div
sbb
add
outs
or
cs
fsub
cmp
push
fs
xchg
icebp
and
dec
icebp
or
shl
mov
out
cmp
xlat
test
sbb
jecxz
adc
fisub
push
aaa
arpl
add
inc
sub
popf
mov
into
mov
stc
js
sbb
xchg
aas
adc
add
call
mul
jbe
push
sbb
mov
sub
in
nop
xlat
pop
mov
stc
add
nop
or
mov
das
mov
push
mov
leave
ins
js
push
push
call
int3
xor
dec
imul
or
div
sbb
imul
dec
mov
and
ret
mov
jmp
lods
arpl
sub
pushf
mov
push
sub
ret
es
xor
xchg
or
es
sub
push
lahf
xor
cs
adc
mov
stos
cld
repnz
push
push
(bad)
cld
daa
leave
xchg
xlat
out
mov
sub
jmp
cdq
shr
mov
adc
adc
jo
test
push
xchg
test
lods
mov
pxor
and
push
jne
jp
in
and
inc
out
inc
pop
cmp
aad
sbb
cmc
mov
imul
gs
pop
xchg
out
out
push
(bad)
xor
lea
mov
call
in
scas
dec
loop
jle
ins
call
adc
ja
pop
xor
lea
cwde
mov
adc
mov
rcr
repz
mov
hlt
jp
jno
cmp
jo
mov
movs
ficom
(bad)
sbb
jns
fiadd
cmps
add
pop
sub
mov
test
aad
add
add
cmps
mov
dec
or
mov
fwait
js
mov
fcmovnb
out
mov
pop
scas
pop
sbb
cmc
adc
dec
out
test
and
(bad)
push
mov
push
out
pusha
fcomp
dec
scas
icebp
loop
call
xchg
dec
mov
cmp
int3
cmp
ins
nop
xor
fst
mov
mov
hlt
ret
dec
xchg
pop
pop
das
inc
icebp
scas
push
push
sbb
ror
cmp
adc
sbb
mov
not
retf
add
dec
dec
cmp
jo
sbb
mov
push
xchg
popf
iret
retf
shl
sub
push
(bad)
add
mov
pop
popf
pop
cld
mov
mov
push
mov
test
sti
rol
xor
push
jne
xor
out
cmps
arpl
and
mov
icebp
loopne
mov
mov
shl
test
out
cmps
bound
or
add
pmullw
gs
js
in
mov
outs
sar
jmp
fsub
push
nop
adc
and
stos
fsubr
into
inc
push
cmps
jge
mov
pop
pop
clc
jecxz
add
fimul
(bad)
fcomp
daa
cdq
or
cs
popf
lahf
and
sub
mov
xor
inc
pop
lea
rcl
fldln2
add
adc
jp
adc
in
test
loope
jg
bound
fwait
call
test
sbb
xor
les
jae
pusha
mov
js
mov
sbb
mov
clc
nop
arpl
retf
pop
jno
mov
jmp
cmp
and
std
sbb
xchg
(bad)
ds
retf
lods
mov
jg
sbb
push
lods
push
mov
adc
jl
and
adc
push
xchg
stc
push
dec
frstor
out
movs
(bad)
call
lods
jg
cmps
fld
xor
mov
mov
xor
push
out
pop
sbb
js
mov
or
jne
cdq
jmp
lea
call
lahf
sub
imul
cli
jl
adc
cwde
xor
in
(bad)
shl
movs
or
ss
nop
dec
push
mov
inc
js
mov
jle
(bad)
push
sub
es
or
xchg
push
mov
inc
lock
push
test
in
repz
nop
popa
movs
xlat
adc
or
and
xchg
sti
js
addr16
loop
add
inc
(bad)
(bad)
push
or
aad
sbb
aas
sub
jbe
fwait
xor
pushf
xor
push
jge
ficom
dec
xor
repnz
cmps
xor
mov
ins
jb
movs
dec
push
inc
(bad)
dec
jmp
mov
sbb
bound
movs
mov
int
scas
cdq
xchg
ins
lds
add
ret
sub
dec
je
into
(bad)
pop
or
push
jb
xchg
dec
adc
push
in
push
pusha
frstor
or
nop
xor
les
test
loope
jne
cmp
gs
in
adc
cli
pop
or
js
and
cmp
test
outs
(bad)
jbe
fimul
and
jae
xchg
lods
pop
xlat
out
pop
and
sub
shl
pushw
pop
or
adc
add
jae
aaa
repz
hlt
add
sub
jp
adc
pop
push
jge
xchg
jecxz
call
mov
bound
aaa
fwait
leave
push
out
pop
cmp
aam
shufps
setb
or
adc
fisub
int3
aam
jg
outs
fsub
in
lahf
add
xor
sbb
pop
jg
inc
in
or
clc
mov
dec
imul
lahf
repz
add
data16
mov
mov
repz
mov
push
xlat
ror
rcr
repnz
loop
xor
fincstp
pop
or
mov
pop
imul
clc
add
mov
inc
mov
inc
cmp
jo
(bad)
lods
push
mov
adc
dec
aad
dec
cmp
cmp
push
push
pop
fcmovnu
cli
outs
pop
iret
sahf
pop
inc
mov
dec
mov
ffreep
cdq
mul
mov
adc
icebp
fstp
jne
jle
mov
(bad)
mov
push
(bad)
ins
cmps
fistp
jnp
jno
or
add
xchg
mov
not
mov
mov
lock
or
movs
mov
out
pop
jmp
inc
test
xor
pop
pop
aas
sbb
ret
fsub
add
xchg
lods
mov
mov
mov
(bad)
jmp
sbb
scas
(bad)
je
xchg
ins
push
sbb
dec
xchg
jae
pop
retf
mov
int3
sbb
push
push
push
outs
or
fnsave
daa
xchg
(bad)
jo
fiadd
inc
push
dec
sub
and
and
or
add
ret
int
out
inc
repnz
mov
mov
xchg
or
mov
loope
push
mov
adc
adc
popf
and
ins
adc
pop
aaa
jl
adc
loop
clc
fs
fcomp
push
push
movs
(bad)
aad
cmps
out
or
adc
ins
cdq
(bad)
pusha
sti
outs
aas
cmp
jbe
mov
(bad)
sti
sub
int3
aad
and
fild
call
jge
ins
xor
inc
fsubr
outs
fdivr
int3
dec
mov
rcr
movs
xor
(bad)
pop
xchg
pop
mov
mov
push
xchg
or
push
iret
cli
mov
adc
cwde
xchg
mov
aad
add
push
jle
out
push
(bad)
(bad)
jb
jno
div
jle
out
mov
fs
or
sub
lods
xor
jmp
mov
fisttp
adc
push
cs
dec
push
adc
pushf
pushf
dec
loope
mov
ret
dec
lds
leave
jne
cmp
mov
cmp
sbb
loope
(bad)
sti
leave
imul
sahf
movs
repz
dec
out
mov
xchg
jnp
jo
dec
and
add
fidivr
test
push
xchg
fidivr
push
ins
loope
mov
pop
mov
mov
ds
clc
pusha
out
aad
(bad)
jp
xor
repz
rcl
jecxz
sbb
iret
mov
mov
push
push
inc
pushf
movs
xor
pop
sub
aaa
xchg
xchg
xchg
(bad)
cs
push
shr
mov
xchg
les
xchg
and
xchg
jno
pop
sbb
push
jp
cmp
clc
jns
outs
mov
jge
mov
push
jae
push
push
mov
or
pop
pop
sub
push
inc
(bad)
stos
jl
adc
mov
dec
das
cmp
(bad)
xchg
movs
xor
xor
lea
cmp
inc
or
call
(bad)
movs
iret
cld
inc
(bad)
xlat
and
push
pop
imul
inc
add
dec
pop
dec
jmp
sub
imul
mov
iret
mov
or
mov
jecxz
pop
sti
mov
das
xchg
pusha
in
outs
shl
shl
jmp
push
sub
enter
push
ret
(bad)
inc
push
or
push
xchg
push
ja
mov
pusha
mov
scas
call
outs
ja
mov
inc
and
and
push
or
cmp
dec
(bad)
mov
and
ins
nop
sahf
pop
ins
cld
pop
xor
dec
mov
loope
loope
hlt
jecxz
sbb
outs
xchg
cmp
test
stc
test
in
cmp
aaa
fistp
mov
fcmovu
pop
or
leave
pop
and
adc
aas
(bad)
xor
inc
loope
pop
mov
in
jecxz
lods
mov
mov
in
jp
cmp
outs
retf
inc
mov
jge
aaa
cli
sti
cmps
adc
pop
retf
(bad)
adc
lods
call
cmps
cld
aam
pop
(bad)
aad
push
std
sub
cwde
icebp
jne
mov
adc
fist
xlat
imul
mov
retf
inc
adc
shr
add
les
test
in
xor
adc
cmp
std
push
fs
xor
xor
aam
sub
and
adc
lds
(bad)
movs
iret
enter
pop
or
xchg
imul
mov
or
(bad)
icebp
mov
inc
sbb
pop
pop
imul
xor
inc
jp
sub
stos
push
je
push
ror
int
push
ins
xchg
test
xchg
mov
adc
ret
call
lahf
cli
push
pop
sub
popa
sub
mov
in
sub
adc
outs
xor
adc
fwait
xchg
mov
fbstp
cmp
outs
and
hlt
jmp
xor
adc
pop
adc
gs
jmp
sub
cmps
clc
sub
push
in
mov
mov
clc
push
outs
mov
lea
ret
cmps
inc
les
sbb
xchg
stc
mov
aaa
je
mov
pusha
mov
xchg
in
fstp
dec
add
aas
inc
test
stos
cmps
fld
loope
add
dec
jmp
jns
es
(bad)
pop
retf
adc
push
not
push
adc
mov
mov
and
dec
add
push
xchg
or
test
xor
xchg
ret
jno
sar
movs
inc
push
out
addr16
sub
movs
cmps
dec
or
in
cmps
leave
pushf
sahf
hlt
hlt
daa
movs
pop
jp
test
mov
lahf
mov
into
je
jp
sar
dec
inc
add
sub
pop
test
jl
and
ins
loop
in
jge
pop
sbb
mov
int
push
cmp
test
ret
pop
inc
fdivr
stos
mov
inc
call
repnz
push
gs
dec
xchg
inc
rcr
push
mov
jnp
idiv
add
and
jmp
popf
arpl
(bad)
mov
sub
xchg
mov
fist
fisub
jge
push
sbb
or
adc
jnp
nop
movs
cmp
inc
sbb
lock
adc
in
add
dec
and
add
pop
fild
out
xchg
fs
fild
out
stc
loope
sahf
pop
cmps
push
aaa
fwait
sub
loopne
arpl
dec
fidiv
lds
call
int
sti
pop
sub
fcmovb
shl
ror
vucomiss
xor
push
scas
pushf
sub
stos
pusha
pop
popf
push
cmps
xchg
fwait
fs
mov
movs
outs
mov
aas
add
inc
out
stos
sbb
push
pusha
push
mov
ins
stos
stc
sbb
jae
std
retf
push
push
movs
jg
mov
pop
ins
jno
dec
mov
and
and
and
clc
or
pop
sbb
call
arpl
xor
pop
jnp
cmps
xchg
movs
inc
cmps
into
xchg
ins
out
or
gs
mov
test
or
sbb
std
and
adc
jl
cs
jle
push
mov
push
add
das
sub
cmps
sub
xor
lock
test
(bad)
rol
mov
sar
int
rcl
sbb
add
popf
push
mov
jp
iret
or
xlat
call
inc
loope
push
aam
nop
cmp
stc
fwait
inc
pop
gs
mov
dec
push
add
push
in
inc
adc
stc
push
dec
sub
jne
lea
mov
add
retf
lods
out
aaa
and
sub
add
mov
jo
mov
sub
dec
lds
dec
aaa
(bad)
inc
repz
sbb
cld
mov
push
aad
test
mov
stc
dec
sub
rcr
jp
outs
push
adc
push
mov
pop
cmp
stos
cmc
or
es
paddq
jns
xchg
sub
mov
imul
and
mov
movs
adc
mov
mov
(bad)
retf
sub
xor
aas
mov
loopne
pop
cld
mov
test
push
adc
jo
push
add
or
daa
neg
movs
gs
xchg
dec
aaa
xchg
je
pushf
das
outs
mov
shl
adc
fisub
(bad)
xchg
loopne
sub
cs
in
test
clc
daa
xlat
add
adc
or
sbb
pop
xchg
push
add
ds
sbb
pushf
imul
pop
jne
fwait
lahf
xor
xor
dec
lea
pop
push
sub
je
hlt
xchg
cmp
jne
mov
ror
jbe
(bad)
cmp
clc
(bad)
cmps
cmps
daa
pop
in
mov
dec
ja
sar
sbb
inc
dec
rcl
sub
push
into
mov
push
xchg
mov
jo
and
sub
push
pusha
dec
popf
adc
test
stc
mov
(bad)
stos
jecxz
or
shr
loop
mov
cmp
xor
dec
push
sahf
jne
jo
push
xlat
lods
and
ds
sbb
bound
adc
call
rcl
inc
inc
pop
lds
adc
pop
aas
cmp
mov
push
xor
cmp
jmp
ret
mov
call
mov
mov
lahf
sub
mov
xor
and
imul
pop
cs
xchg
test
jbe
(bad)
xchg
pop
(bad)
pop
mov
outs
xchg
es
nop
pop
inc
push
push
and
call
ins
xor
mov
dec
scas
ficomp
sbb
jge
and
stc
jmp
cmp
jne
ret
scas
pop
jecxz
fwait
mov
(bad)
or
sub
and
xchg
jb
cmc
jecxz
sbb
clc
ficomp
fs
pop
paddd
stc
cmp
aad
lods
inc
push
std
inc
ret
mov
imul
ins
aam
sbb
cmps
out
popfw
pop
mov
out
scas
js
and
fisttp
xor
inc
or
cld
push
push
clc
pop
mov
shl
fbstp
clc
int3
mov
test
(bad)
dec
jns
mov
jecxz
xor
xor
sub
dec
xchg
movs
es
call
retf
stc
sbb
and
(bad)
call
and
repnz
lea
fdiv
mov
faddp
xchg
push
pop
int3
cdq
addr16
xchg
data16
jge
push
icebp
sub
mov
push
fldcw
and
and
shl
(bad)
in
pop
sbb
mov
push
inc
and
xchg
mov
test
shr
jns
into
cmp
sub
adc
movs
mov
lock
lea
mov
or
dec
mov
clc
pop
jmp
add
sub
inc
call
and
jmp
mov
imul
xchg
mov
cmps
add
dec
add
mov
xor
cwde
int3
iretw
inc
call
and
gs
test
loope
pop
fsubr
ret
enter
shr
iret
jno
in
sti
pop
add
int3
daa
sbb
mov
sbb
shl
das
fdivrp
das
push
(bad)
aad
xchg
dec
xor
mov
pop
xchg
jbe
lock
jns
dec
popf
(bad)
enter
pop
mov
and
mov
pop
stos
dec
stos
mov
pop
fucom
adc
pop
shl
cld
push
sahf
arpl
inc
mov
xor
rcr
lods
fsubp
(bad)
js
inc
sbb
cmp
idiv
or
stos
cmp
mov
ja
adc
or
(bad)
ret
pusha
sti
dec
pop
mov
hlt
pop
shl
inc
addr16
sbb
outs
push
nop
mov
int
add
pop
js
out
outs
div
addr16
mov
lea
push
jbe
mov
adc
jl
inc
inc
stos
inc
in
test
sbb
sti
movs
pop
pusha
pusha
retf
jge
mov
pop
js
dec
mov
aad
push
je
and
pop
inc
sbb
or
adc
jl
push
or
es
std
addr16
jg
fs
mov
sub
cmp
inc
test
rol
cmps
xchg
lods
jle
shr
adc
xchg
adc
or
add
add
loop
push
dec
out
or
dec
lods
sbb
or
in
in
call
call
out
gs
adc
xchg
sub
push
imul
jge
(bad)
xchg
pop
dec
sahf
cmp
sbb
stc
push
mov
fucom
fdiv
xchg
mov
es
sbb
sbb
lock
mov
call
retf
ds
and
mov
sbb
fisubr
cmp
cmp
pop
xor
cmps
repnz
pop
dec
ss
(bad)
lods
sbb
gs
jl
push
int3
mov
mov
and
(bad)
jns
scas
pop
mov
inc
push
(bad)
cmpxchg
xchg
xchg
add
sbb
xchg
lods
cmp
in
out
and
add
jns
cmp
hlt
cmp
popf
fxch
mov
mov
jb
push
cmp
std
xchg
inc
cs
sub
jl
xchg
retf
push
shl
ss
shl
mov
je
fst
cmp
loopne
dec
lods
and
and
mov
xor
mov
and
xchg
add
fmulp
mov
test
push
stc
sbb
mov
sub
mov
sub
lahf
mov
push
push
cld
repnz
mov
dec
or
pushf
push
mul
mov
push
aam
mov
cli
aaa
fisttp
dec
inc
mov
aad
sahf
xchg
cmp
mov
sub
jmp
add
xchg
jne
(bad)
sti
loopne
stos
sub
xor
in
mov
dec
shl
pop
or
or
stos
cmp
xchg
mov
pushf
cmp
rcr
mov
int3
inc
inc
pop
dec
aaa
shr
add
ds
pushfw
mov
arpl
dec
mov
aas
inc
cmp
es
jbe
and
jmp
dec
cld
mov
jge
push
dec
jle
cdq
and
in
daa
addr16
fstp
popf
xchg
mov
xchg
aad
ror
add
dec
rcl
fcomp
cwde
scas
scas
dec
and
test
cmp
adc
and
sbb
push
ror
jecxz
ss
loopne
nop
js
push
pusha
sbb
mov
mov
leave
int3
loopne
and
imul
xor
push
call
push
fcom
mov
push
ins
dec
sar
(bad)
push
push
daa
pop
sub
mov
adc
ins
or
ja
fwait
jb
arpl
inc
dec
lock
ins
scas
data16
xchg
or
or
div
jno
cmp
rcr
push
push
sub
nop
pop
(bad)
mov
sbb
lods
cli
push
out
mul
pop
mov
pusha
mov
loope
dec
scas
jmp
scas
movs
into
push
mov
(bad)
cmp
mov
sub
sbb
xor
imul
sub
pop
jnp
xchg
rcr
scas
jecxz
test
adc
cmps
cmp
cmp
add
jg
adc
ds
inc
dec
lds
pop
push
std
push
ret
or
stos
cmp
stos
and
inc
push
shl
and
imul
xchg
sbb
and
dec
sub
mov
push
push
mov
mov
mov
loop
out
ss
sbb
push
add
mov
xchg
xchg
adc
and
inc
out
out
cwde
sar
adc
mov
scas
ja
fbstp
imul
pop
mov
xor
xchg
fadd
cmp
int
fcom
lods
repnz
data16
inc
inc
dec
aaa
dec
shr
out
mov
inc
movs
sub
mov
addr16
stos
js
loope
in
mov
outs
sahf
inc
inc
cmps
movups
call
sub
(bad)
sbb
push
or
mov
add
(bad)
sbb
lahf
inc
cmc
icebp
jmp
and
ja
mov
ret
jg
xor
scas
xchg
sub
and
mov
xchg
xchg
mov
daa
setp
aas
(bad)
rcl
sbb
ins
nop
rcl
mov
movs
mov
xor
adc
jne
mov
mov
jp
push
jns
mov
nop
jne
stos
adc
inc
cli
int
pop
add
sbb
cmp
add
pcmpeqw
cmp
test
pop
dec
in
js
loope
imul
pop
nop
in
mov
sbb
mov
jmp
inc
sub
add
pushf
shl
inc
sti
xor
(bad)
(bad)
stos
inc
(bad)
xchg
or
push
imul
lock
cmps
add
(bad)
jmp
loope
jno
jo
dec
ja
sub
add
sbb
lods
ret
lea
xchg
test
sbb
mov
adc
add
mov
xor
or
sbb
out
rol
fsubr
push
add
out
xchg
add
pop
dec
add
iret
(bad)
cmp
dec
jns
int
mul
mov
adc
loope
stc
jecxz
imul
daa
stos
jbe
stc
mov
mov
mov
sahf
push
mov
(bad)
(bad)
mov
out
pop
xchg
adc
int
arpl
push
jmp
mov
imul
sub
pop
int
push
or
jbe
sub
stc
sbb
mov
not
push
icebp
add
sahf
ficomp
xor
xchg
xchg
sub
pmaxub
xchg
fadd
dec
shl
sahf
and
push
sub
mov
scas
and
and
leave
(bad)
(bad)
xchg
mov
iret
mov
pop
mov
and
dec
inc
pop
jle
(bad)
jle
ja
dec
mov
out
sub
xlat
jno
js
add
aas
add
add
iret
sub
stc
aad
repnz
dec
jp
neg
sub
sbb
push
jbe
lock
push
arpl
loop
and
lods
inc
or
in
lods
dec
retf
ins
and
jnp
sti
jbe
imul
int
xchg
add
call
out
mov
sbb
jno
lahf
cmp
jno
fldcw
jae
jmp
(bad)
sub
or
push
(bad)
movs
out
xchg
test
test
pop
mov
ja
mov
dec
pop
pop
in
into
xchg
mov
push
lahf
hlt
fucom
pop
xchg
push
stos
sbb
pop
add
(bad)
in
ja
xor
cmp
adc
bound
dec
lods
(bad)
adc
imul
test
dec
outs
push
scas
or
mov
push
xchg
push
cmp
and
jbe
(bad)
retf
inc
mov
jecxz
mov
jae
cmc
dec
fadd
inc
sub
xchg
add
add
xchg
mov
adc
in
(bad)
dec
mov
ret
pop
mov
ja
stos
add
int
push
jbe
(bad)
fmulp
pop
inc
jp
cmp
fist
enter
and
loop
push
enter
cdq
cmp
mov
jmp
xor
adc
or
mov
and
mov
cli
popa
mov
sub
fcomi
sti
repnz
inc
inc
mov
and
or
sbb
repnz
cdq
push
and
fcomip
or
(bad)
mov
loopne
add
call
push
sub
cmp
aad
mov
dec
test
enter
cmps
jb
jmp
mov
jmp
dec
in
imul
mov
add
adc
inc
jg
push
bound
jo
scas
xchg
or
jae
repnz
cmps
repz
xor
test
jmp
(bad)
sbb
push
cs
jp
stos
sbb
retf
xor
fadd
repnz
mov
xor
mov
and
shl
push
ror
lods
xchg
arpl
retf
mov
cs
jno
daa
int
inc
sub
mov
adc
popf
cli
mov
and
inc
mov
pop
movs
jo
das
xor
mov
into
ja
cdq
test
and
push
jge
adc
in
cmps
adc
lods
pop
mov
inc
and
int3
push
lds
or
loop
in
fcom
movs
cmps
ja
adc
imul
jb
dec
and
dec
hlt
test
or
test
adc
cmp
pop
clc
push
ret
lahf
sub
mov
sub
mov
leave
fsubr
aas
adc
xchg
jns
jecxz
repnz
and
pop
cmc
jg
daa
push
retf
out
imul
into
jp
fs
adc
retf
fcomi
sti
jo
mov
adc
mov
adc
add
out
or
ds
fnstenv
inc
push
ins
dec
xchg
jae
js
xlat
cmc
pop
inc
mov
jne
clc
call
adc
ds
(bad)
or
mov
mov
(bad)
mov
push
int3
pop
in
out
mov
iret
daa
cmps
jge
mov
(bad)
ss
call
or
cmp
pop
int3
int
or
stos
out
xchg
into
adc
cmp
xor
xchg
inc
lds
cld
mov
push
scas
or
cld
dec
sbb
dec
push
(bad)
fucomip
jae
or
ret
sbb
inc
aas
jp
xchg
imul
or
add
mov
in
call
jmp
test
out
pop
mov
xchg
ja
push
call
jno
lds
mov
or
popf
call
fs
mov
add
inc
(bad)
adc
ret
pop
leave
fcomp
lock
mov
aas
push
mov
lods
push
cmc
push
inc
inc
popa
mov
out
add
je
adc
and
stos
add
push
mov
sub
cdq
xor
bound
mov
push
adc
sbb
adc
or
dec
call
push
lods
cmp
inc
shl
add
and
adc
dec
std
adc
out
inc
mov
ins
pop
mov
push
dec
neg
push
mov
fiadd
test
shl
pusha
dec
out
out
push
add
or
dec
(bad)
in
sub
int
in
push
inc
clc
jp
call
fldenv
fidiv
push
loope
out
fld
loopne
and
int
aad
or
cdq
shr
push
mov
js
fs
enter
arpl
inc
js
rol
bound
fmul
ja
dec
arpl
and
xlat
sbb
(bad)
mov
mov
cmp
test
push
push
mov
test
imul
jb
xor
aas
test
mov
dec
push
add
jbe
cmp
xor
inc
aad
cs
add
xchg
dec
jb
pop
loop
xchg
call
test
fcmovbe
jp
std
pop
sub
pusha
xor
dec
jno
adc
dec
mov
cmp
sub
cmp
lahf
inc
jmp
clc
(bad)
pop
or
xchg
fcmovbe
movs
push
shr
push
and
sti
xchg
movs
mov
out
xchg
jmp
cmp
mov
fcmovnbe
loop
lock
jb
sbb
test
add
aad
sub
push
fs
fcomp
cmp
adc
adc
in
icebp
xor
jle
dec
jno
push
(bad)
push
cmp
call
mov
popa
movs
or
sub
ss
out
aam
inc
enter
movs
outs
imul
jo
test
test
dec
mov
push
mov
inc
sar
js
xor
and
push
fisubr
cmps
sub
shl
jne
push
adc
fcom
pop
push
fld
int3
retf
sub
repz
adc
int
std
aas
jp
dec
test
into
mov
xor
pushf
cmp
and
mov
push
sbb
push
ret
add
jecxz
out
add
pop
sahf
cmp
lods
jge
icebp
sub
rcl
dec
imul
mov
jno
call
push
cmps
xor
mov
xchg
nop
(bad)
add
xor
xchg
add
pusha
cmp
shl
cwde
in
or
adc
gs
lahf
or
test
sbb
call
movs
sbb
hlt
sbb
mov
inc
lock
scas
push
and
dec
pop
outs
scas
dec
mov
add
cdq
adc
out
mov
xor
dec
jbe
imul
push
hlt
cmps
mov
mov
pop
add
rcl
sti
outs
mov
jl
(bad)
pop
sbb
jl
das
fidiv
adc
das
mov
(bad)
sar
mov
pop
(bad)
mov
sahf
mov
add
loopne
jmp
sbb
movs
mov
pop
jl
sub
pop
jl
inc
sub
jecxz
mov
mov
imul
loop
sub
inc
cmps
inc
lock
add
lock
out
mov
jmp
lods
xchg
mov
bound
push
rcr
push
rep
fisub
mov
add
or
ss
(bad)
loop
ins
sub
cmp
inc
sti
out
push
out
sbb
adc
mov
aam
and
imul
xchg
cmps
cli
movs
sbb
mov
jb
cmp
add
cmps
jns
add
cmps
shl
mov
enter
cmps
mov
mov
gs
scas
jmp
cli
mov
mov
dec
sar
nop
cmp
scas
and
jnp
arpl
in
outs
test
jp
bound
cmc
(bad)
fsub
(bad)
arpl
in
repz
xor
loopne
ins
push
jle
fcmovu
dec
(bad)
leave
sbb
mov
mov
dec
movs
(bad)
push
mov
mov
jne
fmul
je
jp
push
(bad)
imul
or
and
fmul
and
jne
mov
dec
bound
mov
sub
jns
clc
jecxz
in
or
int
fld
adc
push
data16
adc
rcl
je
sub
repz
jg
iret
xor
movs
push
mov
cmp
jae
mov
outs
push
adc
icebp
dec
add
das
mov
test
imul
aam
push
jno
xor
in
in
push
mov
push
and
pop
mov
pusha
pusha
movs
mov
(bad)
scas
out
call
xchg
int
adc
mov
dec
daa
fstp
aas
sbb
inc
aas
dec
jmp
pop
loop
pop
or
scas
lods
sub
fdivr
pop
jg
inc
inc
icebp
inc
gs
adc
lods
cs
(bad)
and
xchg
mov
cli
mov
lock
cmp
fsubr
pusha
push
or
adc
push
mov
xor
mov
sub
cmp
test
sbb
sbb
movs
jmp
sub
(bad)
jp
pop
aam
loope
adc
out
cmp
cmp
xchg
imul
js
mov
jmp
call
cmp
inc
push
or
dec
pop
push
out
and
add
or
sar
(bad)
push
add
je
mov
lahf
pop
push
adc
adc
dec
outs
dec
lea
jb
cmp
(bad)
mov
mov
cmp
pop
retf
mov
or
dec
and
xchg
shl
in
aaa
add
pop
sbb
inc
xchg
and
(bad)
jb
push
pop
nop
mov
loope
fcmovb
sbb
mov
sbb
cmp
jnp
mov
outs
cmc
cdq
scas
bound
and
jg
mov
jb
xchg
mov
sub
fisubr
pop
rcr
mov
fadd
not
dec
idiv
imul
adc
add
push
jmp
push
inc
mov
sbb
fs
pop
jp
mov
sub
mov
add
or
out
jg
in
fisttp
push
xlat
jge
cmp
cs
mov
add
add
jno
jbe
in
inc
pusha
enter
or
fiadd
test
mov
dec
mov
sbb
repnz
mov
inc
out
ret
cdq
sub
dec
mov
es
stc
sub
sub
dec
lods
in
adc
cmp
das
pop
jo
sbb
xchg
dec
inc
pop
sub
cli
dec
push
loope
daa
les
jmp
add
push
sub
mov
mov
scas
call
daa
xchg
push
sub
push
std
pop
and
mov
xchg
sub
lds
xor
in
cs
add
and
ins
mov
stos
(bad)
bound
out
add
leave
jl
inc
xchg
ss
xor
add
fwait
push
pop
movs
cmc
mov
or
and
ret
xor
call
cdq
xchg
push
push
pop
push
inc
fnstcw
mov
div
mov
and
pop
dec
(bad)
imul
gs
or
mov
scas
jl
cld
(bad)
xor
sti
cmps
in
push
dec
loope
lahf
pop
sub
pusha
sahf
inc
jb
stos
or
outs
or
jge
sbb
push
ja
jp
gs
call
jmp
out
xchg
test
adc
cli
repz
push
neg
lods
aaa
and
mov
test
icebp
leave
jg
push
sub
mov
fcos
pop
jp
cli
pop
push
push
sbb
iret
gs
sbb
test
out
add
mov
loop
and
test
loop
jnp
(bad)
repz
jl
je
add
sbb
mov
repnz
repz
xor
outs
call
and
mov
push
xor
ret
sar
adc
lods
(bad)
inc
xor
push
or
inc
dec
dec
adc
xchg
icebp
ins
sti
pop
cli
shl
lods
scas
scas
mov
or
(bad)
dec
xchg
jno
sub
scas
lods
fcos
scas
(bad)
movs
pop
xchg
loop
mov
in
sub
dec
mov
movsx
(bad)
loopne
(bad)
or
add
clc
pop
out
cmp
xchg
lock
jmp
push
cmp
pop
out
imul
xor
fs
jmp
adc
(bad)
jp
add
js
in
cmps
xchg
lock
push
or
push
shl
addr16
mov
pop
adc
push
mov
loope
frstor
out
ja
jo
out
aam
test
cmp
outs
inc
jnp
pusha
ds
add
xchg
mov
xor
outs
pop
pop
mov
mov
fnstsw
ucomiss
push
mov
jp
inc
out
inc
push
adc
nop
enter
xchg
sbb
mov
or
outs
mov
sub
clc
jne
mov
ds
or
cmps
push
mov
retf
retf
popf
push
int
jl
js
ss
in
imul
sysret
push
mov
xchg
lods
jg
xor
shl
clc
add
shl
or
inc
sbb
outs
xchg
add
frstor
add
lock
adc
xchg
in
xchg
dec
std
daa
loopne
mov
int
pop
retf
fst
cmps
push
xchg
ins
sub
nop
cmps
jmp
and
fisttp
data16
dec
ins
leave
pop
dec
fwait
jmp
sub
add
in
and
and
cmc
xchg
push
mov
sbb
push
pusha
repz
dec
xchg
inc
sub
inc
loope
xor
test
cdq
stc
lahf
cli
ficomp
cmp
jb
sub
data16
scas
adc
inc
repnz
cmp
cmps
je
loopne
cld
lock
pop
hlt
xor
add
dec
or
sbb
fs
cmp
shl
aas
add
inc
loop
inc
cld
dec
push
xchg
or
inc
and
push
mov
push
enter
dec
enter
test
pop
sub
repz
jge
adc
cmp
and
mov
cs
mov
inc
cmp
sbb
lock
or
push
icebp
mov
xchg
cmp
fnstsw
mov
pop
cld
fst
adc
or
jno
adc
cmps
cmp
mov
call
inc
mov
push
and
and
in
push
stos
dec
adc
(bad)
jmp
sbb
mov
(bad)
sub
rcl
xchg
mov
or
lods
cmps
test
sbb
and
and
jae
out
data16
mov
mov
bound
and
cmp
add
(bad)
mov
call
jmp
fisub
jo
mov
mov
ret
mov
fldcw
push
cmp
test
pop
ja
adc
sbb
repz
sar
shl
js
push
les
and
sahf
xchg
cs
imul
test
out
out
dec
xchg
lds
cmp
and
push
sub
cmc
xor
mov
rol
out
jbe
fmul
mov
or
test
sar
xchg
aaa
xor
scas
mov
js
and
adc
stc
dec
and
inc
mov
fwait
das
push
xor
jae
push
(bad)
mov
test
mov
cmp
in
pop
xchg
mov
mov
jmp
cmp
icebp
iret
retf
movs
arpl
pop
std
(bad)
in
adc
add
xor
pop
push
ds
dec
push
movs
imul
test
stos
fild
jbe
sbb
bound
xor
lds
add
das
arpl
test
sub
xchg
(bad)
neg
ja
sub
arpl
sub
bound
xchg
les
scas
(bad)
fisub
cmp
mov
mov
push
jo
test
popf
add
addr16
xor
shr
mov
test
call
sub
jbe
add
mov
das
mov
xchg
sub
push
lds
(bad)
sbb
jg
sbb
mov
mov
aam
mov
addr16
pop
bound
addr16
fdivrp
mov
xchg
ror
(bad)
xor
add
repz
add
or
jle
pop
adc
int3
mov
out
pop
ror
cmp
mov
or
mov
scas
mov
sub
fild
and
sub
mov
xor
pop
and
xchg
iret
repz
iret
xchg
add
pop
and
in
pop
hlt
sbb
fsubr
out
inc
rcl
(bad)
pop
dec
mov
inc
ins
out
scas
cmp
inc
cdq
icebp
jmp
inc
out
xor
mov
mov
xchg
jmp
pop
adc
xchg
pop
xchg
mov
ja
pop
xchg
mov
nop
or
stos
add
outs
jae
xchg
or
jmp
mov
dec
sbb
inc
es
push
pop
aam
jg
lds
lahf
jo
mov
xchg
scas
jns
cdq
xchg
into
mov
xchg
lods
jmp
retf
adc
xchg
cmps
push
or
pop
test
(bad)
sti
fiadd
xlat
repz
sbb
pop
pushf
pop
in
cmp
jns
rcl
mov
aam
cs
dec
cmp
cmp
repz
mov
adc
cmps
out
xchg
add
sahf
xchg
adc
dec
sbb
sbb
pop
cld
call
(bad)
loope
shl
dec
shl
sti
fdivr
pop
sbb
mov
iret
lea
mov
xchg
icebp
pop
pusha
pop
add
rol
mov
mov
loopne
scas
neg
push
jbe
stos
popf
xor
pop
jns
pop
ret
add
cmp
adc
add
nop
cmp
repnz
or
mov
loopne
jp
adc
sub
push
das
nop
in
ja
ret
cmc
dec
lock
ins
xchg
mov
lock
adc
pop
icebp
sbb
xchg
ins
sahf
sub
cmps
lea
das
sar
cmps
add
fwait
in
jge
dec
ret
pop
mov
sbb
popa
pop
and
in
add
out
data16
xchg
dec
(bad)
call
fst
and
retf
(bad)
fld
nop
(bad)
mov
bound
jae
adc
or
mov
push
lahf
pusha
lds
push
in
fild
enter
mov
xor
inc
mov
(bad)
push
xchg
(bad)
cmps
adc
pop
movs
sbb
inc
mov
into
aad
sub
leave
cmc
and
jnp
ror
pop
ss
mov
xlat
push
adc
xchg
sbb
ins
(bad)
dec
pushf
scas
fs
push
aam
sahf
fimul
or
test
popa
push
lods
(bad)
xchg
pop
pop
in
inc
jmp
mov
and
pop
aas
inc
pushf
std
popa
mov
adc
fimul
leave
pop
sub
cmp
cmps
push
outs
xchg
adc
mov
aam
scas
in
mov
pop
int
mov
adc
xor
pushf
pop
jp
mov
cmp
clc
and
scas
lods
call
rol
rol
add
je
inc
cmc
mov
jmp
inc
aam
xchg
icebp
adc
call
call
and
jl
pop
dec
push
dec
xor
mov
cli
ins
jp
adc
scas
pop
jno
adc
add
arpl
mov
add
inc
ins
pop
dec
cmp
jmp
sbb
movs
mov
rcr
jmp
loop
push
mov
lgs
mov
pop
inc
mov
mov
or
fidivr
push
xchg
popa
nop
in
cmp
push
cmc
imul
adc
push
and
fisubr
imul
dec
in
test
pop
mov
outs
ror
je
push
push
add
or
imul
rcr
or
or
xor
mov
push
ja
or
inc
xchg
jns
xor
adc
idiv
jbe
dec
sub
rol
retf
sbb
push
in
ror
xchg
xchg
int3
cmps
jb
inc
jge
stos
sub
outs
gs
addr16
les
sbb
mov
push
lock
mov
dec
pop
into
sub
out
test
jae
sub
jae
sbb
out
mov
or
iret
add
mov
or
push
mov
and
mov
fwait
call
movs
xchg
pop
mov
and
test
stc
dec
jecxz
data16
imul
sub
cmp
rcl
sbb
bound
nop
mov
push
repz
out
pop
pop
pop
xchg
mov
push
and
neg
xlat
sub
jmp
add
das
cmp
lods
aaa
mov
xchg
pop
fucomi
or
sub
and
out
test
stos
xchg
(bad)
aaa
sbb
lods
movs
mov
ret
div
mov
cvttps2pi
movs
cmps
sub
in
aas
xchg
inc
sbb
outs
loop
ret
mov
mov
std
test
mov
je
mov
ds
lds
mov
sub
add
into
je
adc
ret
mov
xor
xchg
sub
test
ds
loopne
or
adc
push
jns
mov
mov
repz
jne
jecxz
rol
pop
pop
push
sar
test
mov
retf
and
xor
cmps
jnp
sti
jo
xchg
movs
sbb
outs
add
jbe
test
sar
(bad)
mov
jmp
lea
inc
ror
xor
cdq
mov
aad
or
rol
loope
inc
loop
loop
mov
out
and
or
lods
mov
pop
and
pop
fs
and
dec
lods
hlt
xor
hlt
mov
pushf
fist
(bad)
push
push
push
dec
xchg
inc
sbb
push
push
fsubr
or
popf
dec
cmp
lea
push
out
retf
cmp
dec
cmps
out
mov
in
dec
push
pop
sub
push
mov
push
in
imul
push
pop
fcomp
and
lock
int3
xchg
or
adc
cli
mov
and
dec
add
sub
es
mov
mov
clc
push
xor
sbb
push
test
push
cdq
imul
push
xchg
aaa
ds
icebp
add
shl
and
xchg
mov
ds
lods
xchg
lahf
ja
loopne
sub
lods
sub
test
jmp
adc
adc
lahf
call
adc
xchg
repz
mov
popf
push
jbe
ret
pop
cmp
dec
mov
mov
ret
add
repz
and
pop
add
sbb
mov
pop
and
pop
ret
push
dec
inc
stc
jae
call
cmp
mov
(bad)
in
cmp
pop
push
leave
push
mov
out
test
adc
jbe
mov
ret
loop
inc
mov
aam
jl
pushf
mov
aas
and
push
push
call
inc
add
xlat
aaa
push
xor
(bad)
fnstcw
in
shl
es
lahf
and
add
xchg
in
cmps
push
cmps
int
(bad)
jmp
jnp
pop
cli
sub
dec
pusha
jg
mov
(bad)
icebp
jbe
das
loope
movs
mov
pop
mov
int3
push
cmp
call
mov
loope
aam
add
addr16
mov
fidiv
stos
xor
cli
fimul
in
push
jge
(bad)
retf
sbb
inc
jge
or
mov
push
or
xlat
aaa
div
addr16
fild
and
addr16
shl
pop
dec
repz
sbb
popa
int3
cmp
mov
mov
push
int
mov
(bad)
into
xor
out
xchg
int
or
imul
inc
mov
dec
fst
mov
idiv
nop
mov
ins
dec
dec
jg
shl
cmp
in
pop
sub
mov
and
idiv
fld
mov
pop
call
pop
pop
call
jmp
cmp
xor
das
sti
xchg
mov
jecxz
or
xchg
pop
or
hlt
jmp
mov
sar
push
mov
gs
lock
jp
mov
push
jno
add
cs
inc
nop
mov
int
xchg
cmp
sbb
jge
std
or
popf
pushf
out
cdq
fld
push
outs
dec
stc
sbb
push
test
daa
push
mov
xchg
call
retf
inc
sbb
jp
nop
mov
fabs
xchg
stos
(bad)
mov
lock
fdivp
inc
push
dec
and
sti
mov
(bad)
and
or
dec
xor
loope
std
cmp
stos
push
daa
pop
psubd
sbb
pop
fmul
jmp
mov
push
sub
mov
mov
ss
shr
shl
push
imul
adc
cmp
add
pop
pop
hlt
mov
js
pop
mov
ret
xchg
jge
mov
pop
xchg
pushf
pop
inc
mov
stc
les
pop
loopne
cwde
jnp
or
test
add
mov
add
ins
mov
cmps
in
out
nop
fistp
std
(bad)
jmp
int3
mov
ret
rol
pop
out
sub
iret
fdiv
jg
idiv
jecxz
sbb
jnp
mov
repz
out
push
xlat
jp
scas
sub
cld
cmp
mov
bndldx
jecxz
sahf
mov
leave
mov
test
inc
xchg
mov
call
and
add
fldenv
andps
arpl
iret
movs
mov
sbb
jb
lods
pop
push
(bad)
loop
cmp
sbb
fistp
pop
icebp
sbb
imul
ja
xchg
xchg
jecxz
and
test
mov
movs
xchg
fs
stos
mov
scas
movs
mov
xor
ror
add
imul
jno
push
int3
stos
mov
faddp
pop
jle
jp
rcr
les
xor
aam
aad
push
stc
xchg
loop
ror
dec
repz
dec
loopne
mov
or
scas
call
das
je
xor
icebp
mov
and
push
xor
inc
jbe
(bad)
cmp
cs
test
jnp
sbb
(bad)
std
inc
mov
and
punpckhbw
out
or
test
sub
daa
imul
or
mov
sbb
sub
dec
out
xchg
out
mov
arpl
xchg
inc
dec
lahf
dec
mov
sti
sbb
sti
xchg
pushf
std
shl
push
pop
loop
icebp
test
imul
iret
mov
and
popa
xor
or
jl
imul
movs
mul
cld
xor
fnop
lock
mov
dec
retf
mov
aaa
fmul
stc
das
jns
imul
popa
and
fmul
adc
sbb
int3
jnp
adc
lods
add
mov
add
mov
inc
inc
cmp
pushf
push
cld
xchg
fadd
retf
loope
jg
div
pop
in
push
sub
ud1
push
mov
push
push
daa
lea
adc
nop
ror
mul
and
inc
call
inc
cmp
pop
and
dec
dec
inc
xchg
in
push
js
lods
mov
int3
mov
out
test
xor
test
mov
sub
test
jns
pop
and
mov
pop
jns
xchg
and
in
lds
push
iret
or
pusha
xor
(bad)
(bad)
adc
loop
mov
jne
retf
ficom
jp
pop
icebp
add
push
fcomp
sbb
stos
mov
mov
dec
xlat
out
xor
mov
push
fbstp
xor
inc
sub
out
mov
and
jmp
and
adc
dec
ins
ss
jge
or
or
pop
add
loope
jmp
mov
clc
mov
popf
jo
inc
adc
les
sbb
ds
out
fnstenv
fild
ror
push
popf
and
or
mov
adc
or
inc
xor
scas
push
jmp
ja
data16
cld
adc
jns
add
pop
lods
push
imul
xchg
fistp
cwde
mov
fmul
xor
inc
mov
add
mov
xor
je
sbb
mov
adc
ret
jmp
jp
int3
xchg
aaa
xchg
pop
call
movs
lods
and
pop
imul
aad
xchg
xlat
(bad)
retf
imul
test
mov
fs
mov
push
sub
pop
test
add
pop
cmc
xor
mov
or
mov
test
imul
aam
dec
lahf
out
or
xchg
retf
inc
cmp
ror
in
jbe
jge
xchg
leave
adc
sti
mov
(bad)
jmp
adc
add
fadd
aad
jl
dec
mov
or
stos
sub
pop
sti
jmp
stos
jecxz
mov
cmp
or
popf
xchg
jae
cmp
test
pop
bound
es
outs
xchg
dec
jae
push
mov
stos
jl
in
mov
cli
inc
or
mov
loop
mov
pop
mov
ss
frstor
mov
jno
inc
sub
lods
shl
cld
ja
stc
xlat
int3
lods
mov
add
retf
and
pop
adc
cmp
push
sub
jge
pop
inc
cwde
int
dec
repz
sbb
out
outs
push
fidiv
cmp
ror
ret
pop
sbb
cmps
ja
scas
xchg
cs
and
push
jp
xchg
test
mov
loope
xchg
xchg
scas
pop
out
out
or
dec
jb
in
mov
icebp
in
scas
aad
sub
aaa
pop
fisttp
pop
inc
mov
icebp
sbb
mov
(bad)
out
push
dec
ret
mov
test
les
adc
outs
inc
xchg
popf
dec
or
lea
xchg
std
or
cmp
push
dec
mov
(bad)
call
ret
sbb
mov
aad
in
mov
clc
aam
mov
sbb
push
test
les
dec
fcomp
xor
(bad)
xchg
push
addr16
loope
ret
add
mov
or
mov
xor
(bad)
pop
jp
xchg
xor
add
lods
out
xor
cmp
icebp
test
mov
call
push
xchg
xchg
ja
pusha
add
dec
push
pop
imul
mov
iret
xchg
imul
xor
(bad)
fiadd
ins
ins
stos
ds
dec
ret
and
adc
or
push
jo
dec
(bad)
pop
popf
or
cwde
lahf
inc
test
lahf
leave
jp
fnsave
nop
(bad)
mov
xchg
addr16
xor
in
fidiv
(bad)
int3
jg
repnz
add
(bad)
jmp
xor
push
jle
sahf
sbb
mov
jmp
and
movs
xchg
mov
push
sub
out
push
mov
push
xchg
xchg
pop
jg
mov
inc
stos
adc
gs
sbb
icebp
jno
repz
mov
dec
bound
pop
cmps
rol
lahf
fist
dec
cmps
movs
pop
cmc
bound
xor
in
mov
pushf
cmps
(bad)
out
into
xor
jmp
stos
ins
jb
les
in
xor
pop
xor
neg
out
lea
jmp
jle
(bad)
pop
addr16
pop
dec
pop
inc
mov
cli
scas
sbb
out
xchg
jg
mov
jge
pop
scas
mov
pop
xor
test
xchg
adc
jb
rol
pop
cmp
inc
add
push
pop
bound
mov
jnp
test
mov
inc
repnz
mov
inc
or
add
call
scas
loope
pop
jl
rol
dec
loopne
pushf
in
outs
or
adc
fs
and
mov
test
clc
pushf
fwait
std
ror
ficomp
rcr
sub
sbb
addr16
lods
(bad)
aas
aam
xlat
aaa
or
cli
mov
cmc
or
xor
inc
icebp
lods
or
js
lock
sbb
loope
popa
xor
adc
push
iret
dec
inc
(bad)
jp
out
les
outs
lods
fcomp
mov
rcr
push
cs
repnz
and
cmp
int3
jp
dec
jmp
ret
cmp
jae
cmp
adc
imul
stos
sub
mov
jp
or
ja
push
cvtdq2ps
out
mov
cwde
push
push
xor
and
or
scas
(bad)
cmc
jg
(bad)
sar
shl
inc
pop
jp
ficom
packuswb
mov
inc
pop
xor
jge
repnz
cmps
push
inc
rol
dec
addr16
rcl
ret
pop
adc
sbb
push
add
sbb
fstp
test
lods
push
inc
sub
pop
daa
xor
push
adc
adc
mov
xor
pop
in
imul
cmp
jne
jmp
mov
hlt
inc
fiadd
inc
jmp
adc
fs
mov
popf
xor
pop
std
cmps
lods
pop
and
jmp
ins
sub
(bad)
adc
or
lock
pop
ins
enter
or
adc
xor
ins
pop
xadd
add
addr16
outs
enter
pop
pop
inc
push
stc
adc
xchg
leave
push
add
cmps
dec
loope
sbb
icebp
(bad)
cmp
repnz
sahf
xlat
add
xlat
das
push
cmp
mov
push
neg
push
mov
or
push
lds
push
dec
test
mov
cmp
ror
sbb
sub
jbe
test
push
xor
cs
lds
sbb
ret
mov
push
pop
mov
cmp
je
dec
aas
call
in
push
(bad)
js
std
mov
inc
cld
popa
push
imul
retf
and
dec
mov
or
or
and
inc
push
xchg
icebp
or
lahf
ss
or
repz
in
aas
mov
out
movs
push
test
jb
pusha
jb
inc
aas
xchg
dec
out
inc
mov
dec
nop
xor
dec
out
lds
mov
adc
inc
jae
push
pop
arpl
xchg
jle
xchg
cmp
rcl
fsubp
push
scas
cmc
sub
stc
jb
mov
mov
imul
jnp
or
xlat
lds
ret
es
aaa
scas
mov
mov
sbb
(bad)
ss
sub
inc
(bad)
sbb
jmp
in
mov
mov
inc
mov
pop
nop
mov
and
cmp
xor
sub
fs
rol
addr16
jb
inc
in
loop
cmp
and
dec
sub
mov
adc
nop
add
push
sbb
xlat
xor
dec
jmp
add
cmp
dec
or
jns
retf
jne
scas
cmp
sub
mov
or
push
cmp
xchg
or
dec
pop
and
(bad)
mov
inc
push
scas
sub
adc
sahf
js
mov
mov
retf
pop
adc
add
fsub
repz
inc
jmp
mov
retf
sbb
pop
inc
call
cwde
outs
inc
fwait
push
push
adc
test
addr16
stos
push
add
inc
cdq
mov
imul
jle
cmp
ret
jmp
jmp
jg
lds
xchg
jmp
fidivr
clc
add
mov
ret
imul
dec
adc
xor
cwde
pop
aad
ret
push
cli
xchg
imul
daa
aaa
cs
test
std
jg
jl
dec
std
stc
push
push
mov
out
jge
shr
leave
fbstp
lea
arpl
cmp
and
mov
mov
fs
pop
push
fldlg2
sbb
lods
pop
je
cmp
pop
pop
je
sub
arpl
jo
sbb
inc
dec
sub
(bad)
push
xor
inc
jl
repnz
nop
sbb
jg
cmp
mov
pop
jecxz
inc
push
out
addr16
test
inc
sub
xchg
adc
repz
push
sub
sar
jg
xlat
test
nop
push
in
inc
ins
sub
call
repnz
ret
popa
addr16
imul
mov
in
jmp
or
rol
shl
stos
xchg
xchg
mov
imul
rcr
ret
mov
sub
inc
repz
call
fidivr
lahf
test
sub
sub
call
add
test
aaa
aaa
or
pop
adc
sub
dec
sub
cld
push
sub
fild
dec
rol
imul
push
jge
(bad)
push
cmp
jle
xchg
xor
call
shr
lods
cwde
and
loop
mov
sbb
xor
data16
pop
cmp
add
mov
xchg
jb
iret
jo
ds
jb
out
cli
loop
xor
ss
jne
addr16
push
or
cmp
mov
rcl
mov
cmp
mov
lds
fdiv
xchg
lahf
call
arpl
imul
scas
pop
mov
mov
mov
and
stc
sahf
outs
push
sbb
sar
test
and
and
xor
retf
jge
dec
xchg
push
jle
cmp
mov
mov
cs
pop
jo
imul
xor
movs
mov
cmp
xor
mov
mov
div
out
and
xchg
dec
cmp
mov
mov
cmp
jge
mov
and
jge
int3
hlt
lods
push
(bad)
jo
ins
jecxz
(bad)
out
pop
jecxz
cwde
shr
stos
xlat
test
add
int
hlt
and
mov
sbb
cmp
cmp
mov
shr
push
stc
inc
pop
xor
lods
je
test
dec
in
or
jne
test
es
pop
outs
sub
popf
std
xlat
mov
(bad)
pusha
mov
sub
jbe
jno
fs
fistp
push
sub
fnsave
fs
into
or
adc
push
fdivr
neg
mov
xchg
dec
mov
into
imul
mov
sub
jno
or
sub
xchg
xor
stc
mov
repnz
pushf
mov
jnp
dec
repnz
imul
push
aas
xchg
js
sbb
mov
mov
and
add
shl
xchg
xchg
repz
aad
cmp
mov
mov
(bad)
out
call
das
jae
cdq
outs
data16
mov
das
dec
push
jae
inc
add
inc
pop
add
lds
fwait
(bad)
push
sbb
call
sbb
xchg
xor
in
or
xchg
lods
xchg
es
fwait
shl
aad
popa
pusha
(bad)
adc
bound
cmps
or
test
stos
rol
dec
pop
xchg
pop
jge
pop
outs
loopne
xchg
inc
add
adc
mov
dec
jg
xor
add
lahf
xlat
test
jge
loop
dec
sahf
or
jo
enter
enter
clc
pop
shl
pop
adc
xchg
add
es
sub
push
loop
gs
xor
lahf
adc
in
jb
in
loope
jmp
pop
add
mov
imul
(bad)
cmp
cmps
(bad)
mov
xchg
jg
or
fadd
inc
add
shld
xchg
(bad)
clc
and
fidiv
pop
dec
jne
(bad)
or
push
int
nop
into
xor
inc
fsubr
jge
pop
bound
xor
jmp
sub
ja
js
sbb
nop
jne
adc
mov
mov
sub
mov
sub
sub
in
mov
pop
les
dec
sbb
loope
(bad)
in
scas
mov
push
dec
test
fst
mov
ins
fnstenv
sub
movs
(bad)
pop
mov
and
shl
mov
scas
add
icebp
rol
cld
in
movs
in
add
enter
jnp
dec
mov
lods
mov
jmp
outs
sbb
and
hlt
fsub
ds
or
dec
das
lahf
dec
stos
mov
push
mov
or
call
mov
jb
add
cmp
or
jnp
icebp
das
nop
jecxz
sbb
dec
or
pop
jno
ret
into
mov
js
xor
iret
loop
(bad)
call
pop
push
cld
jnp
lahf
(bad)
shl
fld
add
push
cmp
(bad)
sub
fadd
cmps
fdivr
dec
dec
cmp
ss
push
xor
jmp
mov
aad
or
sti
imul
or
cmp
inc
push
push
add
sar
jnp
mov
mov
ins
movs
pop
adc
popa
dec
xlat
ret
sub
sbb
and
repz
add
push
out
fdiv
ins
pop
inc
xchg
int
outs
out
jl
(bad)
pop
dec
xchg
sbb
icebp
inc
idiv
ss
outs
sub
mov
dec
pop
mov
data16
scas
push
mov
arpl
adc
enter
xchg
dec
push
jl
mov
adc
mov
cdq
fistp
xchg
xchg
mov
call
outs
push
mov
adc
mov
mov
es
hlt
das
sub
call
sub
mov
aam
mov
call
xchg
imul
adc
lock
xchg
xor
pop
cld
pop
inc
push
imul
add
iret
hlt
retf
adc
add
dec
out
aas
push
jecxz
inc
call
mov
xchg
push
adc
sub
sbb
inc
scas
sub
mov
idiv
aam
cmp
ficomp
push
test
mov
sub
cdq
rcl
fsub
repz
sub
ret
lahf
test
mov
loopne
add
cmp
fisttp
cmp
adc
mov
pop
lock
aaa
call
test
rcr
push
cmc
fild
cmp
xchg
adc
inc
or
jns
jmp
retf
mov
mov
in
in
ss
cmp
jnp
mov
pop
aas
rcl
adc
dec
adc
pop
(bad)
mul
add
sbb
push
xor
fmul
inc
mov
and
in
push
lahf
xor
and
sub
or
xchg
pop
or
gs
retf
int
jmp
retw
pusha
push
(bad)
push
xor
jno
std
call
mov
shl
(bad)
xlat
and
pop
sub
and
cmp
dec
iret
xchg
mov
loope
shl
retf
bt
fisub
fcmove
jno
aas
xchg
outs
pop
jnp
pop
adc
cmp
mov
test
scas
in
add
sahf
mov
xlat
mov
shr
ror
mov
push
adc
cmp
loope
sbb
or
mov
mov
dec
int
out
repz
inc
add
sub
inc
mov
xchg
push
retf
mov
nop
lock
mov
add
jp
shr
mov
out
inc
sti
jmp
add
dec
push
test
mov
js
dec
jecxz
pop
xchg
fstp
sub
cmp
sub
clc
push
adc
mov
fwait
adc
loopne
imul
lea
push
or
jle
and
ds
rcl
adc
sub
scas
or
jns
test
ret
add
pop
add
or
test
(bad)
push
(bad)
stc
xor
mov
icebp
jge
addr16
fild
mov
lods
test
in
inc
push
call
push
push
ret
jg
int3
(bad)
imul
idiv
test
outs
adc
adc
mov
push
xor
lds
sub
adc
cmc
setne
and
jbe
and
cs
or
lds
leave
cwde
les
clc
push
push
sbb
mov
push
mov
xor
fiadd
add
out
test
rcl
cmc
adc
xor
mov
mov
sar
xchg
arpl
adc
lods
mov
pop
jbe
aam
lock
lds
call
dec
pop
and
lahf
ins
or
add
sbb
jecxz
fidivr
cli
stos
pop
or
mov
dec
leave
add
cmps
jmp
push
cmp
shl
xchg
and
xchg
retf
or
jecxz
aas
xchg
int
sbb
daa
pop
xchg
cmp
dec
stos
scas
jne
xchg
addr16
mov
xchg
fistp
cwde
rcl
sub
dec
mov
push
loopne
les
xchg
mov
int3
mov
mov
fisubr
aas
sar
xchg
push
sbb
daa
imul
cmp
push
and
adc
xlat
inc
mov
add
or
leave
ret
pop
sub
pop
addr16
sbb
adc
rcl
add
add
sbb
sbb
shr
add
jae
fidivr
stos
mov
imul
cmp
addr16
and
dec
mov
lods
stos
jnp
ins
retf
stc
pop
pop
fadd
lea
adc
and
mov
std
inc
add
mov
push
aaa
mov
(bad)
and
xor
sub
(bad)
sbb
ins
les
fsub
or
neg
dec
bound
cmps
mov
cmp
clc
hlt
fs
imul
pop
jge
pop
clc
std
fisttp
pop
icebp
dec
xchg
jp
lds
(bad)
fidiv
call
jmp
jecxz
xchg
mov
daa
(bad)
jecxz
std
adc
mov
jmp
jno
out
dec
mov
in
inc
push
mov
push
jb
cmp
mov
xchg
pusha
mov
sbb
push
cmp
sbb
test
jmp
leave
add
sbb
jp
les
inc
int
mov
adc
jne
or
pop
sub
jae
ds
scas
out
push
pop
test
fst
dec
inc
jmp
pop
mov
loopne
jmp
inc
retf
cmps
mov
iret
xchg
pop
cmp
lds
sub
ror
lods
(bad)
outs
arpl
ret
pop
rcl
sub
lahf
xor
push
xor
sub
enter
aas
aas
out
call
mov
adc
out
test
xchg
inc
push
in
push
hlt
addr16
fcomp
aaa
push
shl
inc
adc
jmp
sub
dec
and
int3
lea
cs
xchg
loop
jge
shr
pop
sub
lea
idiv
test
call
sbb
cmps
adc
pop
sbb
mov
ins
mov
aam
in
cmp
icebp
push
fisttp
cmps
push
clc
fnsave
pop
jmp
movs
inc
cmpxchg
out
loopne
inc
imul
loope
jns
add
(bad)
mov
nop
shr
and
in
dec
add
add
dec
pop
mov
pop
mov
ins
outs
mov
push
dec
push
xchg
dec
(bad)
xchg
mov
jmp
leave
js
rol
sub
cmps
cmp
xor
lods
arpl
ret
add
stc
leave
jns
ret
ds
sub
test
mov
inc
mov
add
dec
jns
push
push
and
ins
and
stc
(bad)
fcomip
adc
mov
pop
mov
scas
les
lea
sub
or
imul
inc
aam
mov
imul
fimul
test
popa
xchg
bound
or
ficom
setl
add
and
pop
ror
mov
aaa
ss
mov
fmul
(bad)
ss
fdiv
call
out
adc
fwait
call
aaa
sub
xor
out
aad
and
dec
cli
add
mov
pop
aad
jbe
into
dec
loop
cld
and
jmp
dec
(bad)
sbb
fidivr
(bad)
jp
sti
out
sub
mov
addr16
arpl
adc
sbb
mov
mov
daa
das
scas
cmp
add
sub
(bad)
mov
imul
sbb
jle
rcl
out
mov
repz
retf
stos
jnp
adc
cwde
cmc
mov
mov
test
mov
cmc
loop
sahf
jecxz
mov
aam
xor
xchg
retf
(bad)
jmp
inc
int3
xchg
ret
(bad)
push
xor
mov
pop
mov
sahf
clc
mov
out
xor
mov
mov
sbb
add
pop
dec
sar
repnz
call
dec
jnp
inc
movs
out
push
ja
xor
jns
aas
ficomp
cmp
and
call
dec
jecxz
jmp
shl
fisubr
stos
mov
ins
mov
adc
pop
fdivrp
dec
cmp
inc
mov
popa
xor
adc
sahf
jne
mov
lahf
inc
jl
into
icebp
scas
add
(bad)
jnp
inc
std
inc
test
stos
mov
lods
add
sbb
push
in
inc
inc
jmp
lock
in
stos
jbe
inc
fimul
inc
xchg
sub
add
jg
and
fiadd
jp
sbb
sbb
ss
js
inc
adc
xor
data16
mov
mov
in
(bad)
ds
mov
and
mov
mov
mov
call
add
xchg
mov
cmp
mov
iret
pop
push
das
add
add
scas
and
shl
div
jo
xor
inc
push
push
mov
push
(bad)
fsubr
mov
add
or
cmp
ret
or
mov
xor
stos
std
arpl
sub
cmp
mov
and
daa
lock
jbe
jmp
fst
movhlps
je
ds
and
inc
mov
(bad)
js
sbb
std
mov
out
(bad)
pushf
imul
lock
js
mov
and
pop
xor
dec
retf
loopne
dec
pop
cdq
mov
ja
mul
inc
pop
stos
push
and
retf
lock
xchg
mov
iret
scas
mov
(bad)
pop
mov
push
and
mov
xor
in
jnp
mov
ss
and
(bad)
in
and
icebp
call
bound
cmp
sbb
xor
(bad)
mov
aaa
dec
and
ror
sub
push
int
lods
fistp
mov
stos
xchg
out
(bad)
push
xchg
and
mov
retf
pusha
cmp
fsub
lea
jg
xchg
std
pop
or
push
(bad)
rcr
jle
nop
cmp
adc
xor
mov
cwde
pop
mov
xchg
pop
in
das
fisub
mov
fsubr
int
js
cmp
div
mov
movs
inc
not
sub
test
xor
cld
xchg
repz
dec
mov
and
mov
stc
out
sub
js
ret
(bad)
jmp
rcl
or
add
test
addr16
in
adc
mov
sbb
clc
push
dec
jns
cdq
and
push
out
call
mov
inc
dec
loope
cdq
jns
push
cmp
shr
shl
push
ficomp
xchg
pop
inc
in
pushaw
inc
sbb
les
jle
fcomi
ins
aas
mov
and
jmp
hlt
pop
adc
mov
cmovl
jmp
jle
xchg
mov
xchg
rcl
xchg
dec
fs
out
add
jmp
inc
cwde
push
fisubr
pop
mov
or
mov
bound
xor
mov
jae
cld
or
jge
div
xor
loope
pushf
adc
scas
icebp
pop
stc
outs
cli
sub
and
fwait
mov
adc
cmps
xor
sub
inc
dec
add
or
call
jbe
fcomp
test
mov
iret
aas
lods
adc
ror
dec
mov
jno
pop
jge
push
push
and
dec
dec
dec
jle
test
fldl2t
ret
rcl
hlt
mov
ds
mov
inc
sub
sbb
fnstsw
xchg
cmc
adc
jb
icebp
push
outs
mov
sahf
lahf
clc
sbb
imul
jp
mov
scas
scas
sahf
push
sbb
xor
in
pushf
int3
mov
push
push
loop
sbb
dec
das
inc
scas
sbb
pop
lock
xlat
mov
sub
iret
aaa
push
cmp
sbb
(bad)
mov
inc
comiss
cld
not
add
lods
xor
cmp
dec
stos
jle
or
and
popf
sub
dec
in
pop
div
dec
sub
and
xor
inc
loopne
movs
lahf
mov
fld
shr
mov
jl
push
xor
push
add
rol
dec
mov
fld
retf
fisubr
vphaddbd
arpl
(bad)
mov
pushf
(bad)
jl
jbe
loope
add
mov
mov
lea
pop
loope
int3
or
inc
jno
and
sub
repz
push
push
fdivr
pop
dec
test
test
mov
mov
fidiv
test
push
jb
js
and
xchg
cwde
les
add
movs
cmp
cmps
jo
(bad)
pushf
dec
jmp
adc
imul
xor
adc
jb
mov
sahf
jno
fwait
dec
push
je
push
sub
test
adc
jnp
imul
imul
mov
dec
add
xor
jp
out
sbb
push
test
je
or
mov
or
nop
lods
cmp
inc
pop
mov
mov
mov
push
sub
inc
dec
jbe
xchg
xchg
lahf
add
popa
mov
add
dec
pop
je
xchg
push
test
stos
dec
fwait
addr16
mov
(bad)
mov
add
or
push
pop
loope
popa
cs
pushf
add
xchg
jecxz
in
call
dec
dec
pop
in
in
xchg
cmp
bound
dec
push
retf
pop
stos
lods
jg
cmp
imul
dec
arpl
mov
inc
in
cmps
mov
or
movs
mov
(bad)
(bad)
dec
sbb
in
and
sub
ja
xchg
or
inc
test
dec
sti
aam
ror
dec
add
gs
fldcw
pop
shl
stos
(bad)
nop
outs
or
sahf
pop
pop
repnz
push
jne
xor
icebp
popa
mov
lds
bound
int3
mov
scas
test
or
icebp
and
daa
sti
ret
fwait
retf
in
outs
lock
aaa
xor
retf
xor
gs
xchg
and
inc
movs
xlat
jl
in
js
sti
push
jb
jns
or
test
xchg
mov
jp
sbb
retf
add
mov
adc
fld
jmp
xchg
je
or
or
data16
sbb
(bad)
jle
xor
mov
into
cs
pop
jb
(bad)
stos
cmp
push
pop
sahf
daa
rcr
fcmovnu
xor
adc
pop
ins
sub
ffreep
bound
fild
xchg
push
adc
stos
lock
gs
into
jns
push
pop
mov
or
push
sub
cs
jne
gs
inc
scas
in
stos
and
mov
out
mov
dec
aam
xchg
(bad)
mov
mov
mov
clc
pusha
shl
pop
test
sub
xor
shl
inc
dec
sub
adc
and
mov
(bad)
cld
cs
cmp
xor
and
cld
cmc
scas
sbb
jne
scas
rcl
clc
jmp
dec
xor
retf
ror
dec
cmp
js
add
ins
or
loopne
jnp
xlat
dec
iret
mov
inc
or
daa
pop
loop
stc
inc
out
cmp
pusha
mov
(bad)
inc
dec
daa
mov
jmp
mov
xchg
xor
push
and
inc
stos
sub
or
sbb
ds
push
dec
sbb
mov
cmp
adc
jmp
fwait
and
popf
retf
adc
fs
jne
push
add
int
adc
cdq
gs
out
or
add
pop
cli
lods
mov
mov
sub
mov
jb
sub
out
sti
push
inc
mov
daa
div
mov
dec
sub
jle
mov
push
jmp
lock
fistp
and
mov
or
jb
inc
retf
adc
mov
call
push
mov
add
push
out
cmps
dec
cmp
cmp
imul
std
retf
push
and
lods
pop
cmps
fnclex
push
push
leave
fld
or
pop
push
and
jl
shl
cmp
daa
xor
dec
cmp
scas
jo
(bad)
repnz
imul
sbb
icebp
xlat
cld
stc
scas
mov
xor
hlt
dec
and
lahf
mov
dec
cmps
and
enter
inc
enter
mov
xchg
add
fdivr
xchg
jle
ja
in
jo
mov
pop
mov
pop
imul
pop
icebp
(bad)
pushf
ins
push
test
cld
adc
sbb
mov
retf
cmp
call
lea
test
out
push
shl
mov
jno
sbb
sbb
pop
lea
cmp
or
fsubr
sbb
stos
mov
fs
add
sbb
xchg
mov
out
lods
js
cmp
loope
push
call
ja
cmp
add
movs
or
(bad)
aam
mov
mov
push
dec
aad
xor
dec
test
jmp
jmp
aam
call
popf
in
adc
fnstsw
inc
mov
cmp
jmp
push
xor
add
les
in
in
mov
inc
sub
pop
jle
in
es
gs
adc
(bad)
scas
imul
mov
cmc
mov
or
ret
test
pop
push
adc
xchg
add
pop
arpl
bound
retf
data16
shl
mov
or
imul
ficom
push
push
out
mov
mov
es
mov
mov
xor
xor
lds
inc
jg
jmp
enter
xor
push
push
pop
fs
in
push
fcomip
push
lock
or
dec
push
daa
int3
sbb
rcr
and
movs
add
xchg
fcomi
js
icebp
aaa
cmp
enter
je
push
imul
repz
cs
in
jle
jae
pop
mov
cwde
test
cmp
(bad)
out
enter
inc
sub
or
lods
popf
leave
jg
out
xor
inc
add
not
(bad)
js
stos
mov
pop
cmp
stc
call
lods
push
enter
xor
lods
jns
(bad)
out
popa
xchg
or
adc
jle
dec
mov
mov
loopne
cwde
dec
fidivr
rcl
call
out
cdq
dec
ss
pop
lods
adc
pop
jle
int
js
mov
pop
movs
or
xchg
xchg
aaa
shl
into
fsubrp
shl
inc
cmps
sub
iret
inc
sub
scas
xor
add
jl
mov
or
jne
or
ins
pop
arpl
push
sbb
pop
test
fld
dec
out
jg
fcomp
xchg
into
in
sbb
push
dec
mov
and
xor
lea
push
repz
and
mov
cmps
dec
jo
or
cs
jmp
sysexit
lods
ss
cmps
mov
sbb
int3
repz
xchg
retf
push
add
mov
test
lock
je
push
inc
bound
or
arpl
ss
lods
push
push
add
ins
rep
movups
mov
inc
dec
jmp
imul
add
jbe
enter
hlt
push
cwde
in
je
mov
fld
xchg
and
out
sbb
adc
inc
hlt
(bad)
fbld
push
mov
mov
xor
sbb
pop
loopne
stos
fcom
jle
mov
xchg
cwde
mov
push
inc
movs
mov
sti
push
add
lea
aas
xor
mov
shl
inc
in
mov
repz
std
in
nop
aad
adc
loop
sub
mov
mov
pusha
jae
addr16
(bad)
in
imul
jae
sub
rol
mov
ffreep
loop
aaa
cmp
call
mov
push
add
sbb
(bad)
leave
or
pop
mov
ins
jmp
lds
adc
(bad)
fld
cmp
les
jp
sbb
ret
fptan
adc
stos
pop
xor
pushf
cmc
and
xchg
inc
pop
cmp
jmp
pop
enter
adc
or
mov
imul
xor
imul
imul
add
fs
dec
mov
pop
in
ins
inc
mov
fcomp
std
fwait
mov
shl
dec
xchg
add
and
cld
fwait
test
mov
or
or
cmp
rcr
iret
iret
mov
mul
lahf
xor
xor
push
fnstcw
mov
and
mov
clc
mov
aam
in
inc
cmc
push
shr
cmp
int
mov
adc
pop
jne
push
push
lock
xchg
sbb
push
shl
fisub
enter
std
mov
shr
or
push
dec
int3
nop
(bad)
or
add
jb
push
sub
aam
aad
imul
push
xor
mov
cld
cmp
pop
sar
test
ja
fdivr
push
adc
test
test
inc
ds
popa
ins
pop
jo
mov
aad
cdq
dec
jg
and
add
sub
adc
inc
adc
data16
push
sar
pop
shr
sti
xor
int
xchg
xor
push
pop
loope
jp
inc
lea
push
pop
jmp
jge
push
jae
cmps
jg
jnp
dec
jmp
add
adc
mov
aas
sbb
jl
ret
sub
pop
es
add
mov
sahf
pop
sbb
and
or
data16
xchg
sbb
add
es
mov
pop
nop
sub
inc
xchg
sbb
retf
adc
jne
push
cmp
scas
pop
out
loopne
inc
cld
push
imul
retf
sub
mov
inc
xor
xor
jb
in
pop
ins
nop
xchg
test
jl
repnz
jbe
(bad)
and
add
lock
mov
cdq
das
or
cmps
adc
hlt
test
lahf
mov
pushf
pop
jb
aam
rcr
pop
out
lods
not
xchg
inc
mov
call
loop
push
mov
sub
outs
mov
daa
pop
je
xchg
xchg
and
ja
shr
popf
out
adc
rcl
push
pop
xor
aad
mov
nop
js
lahf
dec
xor
or
mov
sub
pop
xor
fnstcw
ja
jo
jle
jae
add
iret
xchg
sub
inc
dec
aas
mov
test
cmps
nop
test
dec
cli
cwde
int
(bad)
scas
xchg
sub
xchg
mov
enter
sbb
je
stc
inc
mov
in
sbb
test
xor
into
les
xor
imul
cmps
mov
iret
wbinvd
push
daa
or
mov
leave
jbe
dec
cmps
push
aam
and
xlat
push
adc
add
jle
lock
int3
inc
xchg
and
das
cmp
mov
leave
mov
ins
mov
and
movs
(bad)
in
rcr
push
fisttp
addr16
adc
scas
jmp
xor
jns
pop
inc
cmp
push
adc
push
sub
movs
int3
mov
not
cli
and
pop
mov
push
into
mov
mov
and
cmps
sbb
sub
dec
sbb
adc
or
shl
in
adc
jmp
mov
dec
idiv
data16
xchg
dec
mov
xchg
cmp
adc
jnp
add
out
xchg
jns
jno
dec
(bad)
jbe
mov
fs
jno
pop
xchg
inc
add
sbb
clc
mov
outs
sbb
inc
cmp
es
ror
xchg
inc
sahf
cmp
xlat
lock
js
inc
mov
push
cmp
xchg
jns
fstp
lahf
mov
mov
ins
js
sti
xor
popf
cld
xor
mov
cmc
loope
fs
xchg
pop
mov
xor
aad
add
into
adc
imul
add
mov
and
jnp
or
add
ret
in
(bad)
icebp
leave
fs
adc
add
rcl
pop
and
popa
aaa
or
pop
mov
pop
lods
mov
xor
pop
sub
pop
pop
mov
js
stos
shr
push
mov
rcr
movs
push
xor
adc
mov
sub
pop
sbb
fs
fs
aad
sub
call
xor
pop
inc
dec
sbb
adc
daa
mov
push
push
icebp
add
pop
movs
ins
mov
xor
rol
jmp
enter
and
mov
push
pusha
jns
adc
cmps
and
adc
add
push
mov
in
dec
in
or
pop
les
pop
dec
fsub
adc
into
cdq
sbb
out
jo
inc
stos
test
sub
imul
icebp
int3
mul
mov
pop
dec
ds
enter
push
mov
mov
dec
and
jecxz
adc
ffreep
lds
test
int3
aaa
pop
loopne
pop
bound
shl
pop
xor
xchg
test
pop
in
in
mov
and
cmp
push
adc
gs
cmp
in
mov
push
nop
enter
jmp
xchg
repnz
sub
mov
sbb
jmp
ds
stc
xchg
adc
fadd
ins
jbe
add
mov
xchg
dec
out
loopne
xlat
bound
mov
fcom
pop
dec
add
pop
dec
fwait
mov
and
aam
cmps
shr
mov
dec
xchg
out
scas
and
iret
lods
adc
or
push
or
retf
jg
and
das
int
or
cmp
add
test
jp
(bad)
mov
mov
jo
add
aaa
scas
sub
out
pop
jl
sub
scas
cs
leave
jmp
jl
dec
dec
jle
arpl
(bad)
mov
mov
add
jae
and
add
(bad)
push
in
pop
xchg
push
cmps
sbb
ret
popf
xlat
fdivr
sub
and
call
rol
xor
lock
sub
arpl
bnd
cdq
dec
gs
cmc
mov
push
sbb
leave
sub
mov
add
sti
inc
in
scas
add
das
retf
and
mov
popa
mov
mov
adc
xchg
lock
mov
gs
cdq
pop
dec
jne
jmp
and
jno
xor
pop
mul
inc
ins
retf
add
or
in
std
mov
jnp
cmp
fmul
js
inc
dec
aam
xchg
mov
out
cmp
outs
test
lods
popa
push
call
sbb
out
xor
lock
push
dec
and
inc
dec
xbegin
mov
out
hlt
xchg
pmulhuw
lods
pop
popa
dec
jbe
rcr
xor
inc
pop
pop
(bad)
mov
add
xchg
xchg
push
xor
ret
add
sub
xchg
mov
js
push
test
push
ret
push
aas
sub
or
in
inc
loopne
ds
xchg
inc
inc
lahf
pusha
or
leave
retf
or
dec
ss
jno
das
xchg
mov
in
mov
loopne
fadd
and
mov
jne
(bad)
in
jmp
dec
das
pop
xor
dec
call
hlt
ins
loop
dec
cs
dec
ins
movs
cmc
push
nop
dec
add
pusha
mov
cwde
or
es
cli
inc
or
pop
into
je
clc
xor
fist
jmp
mov
int3
xchg
sti
pop
fild
sub
pop
push
xor
xor
loopne
dec
cli
or
cmp
cmp
stc
pop
popf
out
(bad)
arpl
or
in
mov
cmc
rol
xchg
sub
mov
mov
stos
and
test
mov
out
jmp
test
popf
inc
cwde
div
outs
dec
cmps
in
in
jb
popf
cmp
into
mov
xlat
and
dec
add
sbb
push
shl
(bad)
(bad)
imul
jo
pop
in
add
add
adc
mov
cmp
popf
leave
imul
xchg
cli
ins
int
jecxz
mov
xor
and
aaa
jo
iret
gs
nop
jb
and
stos
push
jg
push
cmp
xlat
ret
xor
es
pop
cwde
xlat
scas
sbb
jno
jbe
push
ins
imul
xor
aas
adc
push
jg
(bad)
and
imul
ja
fiadd
stc
test
jecxz
mov
mov
pop
inc
pop
ja
lock
bound
xor
jnp
push
fs
jmp
js
xchg
sub
faddp
mov
and
xor
lea
lea
mov
add
pop
xor
cmp
je
xor
stos
int3
jmp
sub
cmp
les
jmp
dec
cmp
adc
fsub
fst
je
cmp
adc
pop
gs
jle
(bad)
scas
(bad)
pop
in
test
fs
xchg
int
clc
sahf
jb
push
out
out
imul
aad
lods
cs
mov
adc
mov
mov
loop
push
adc
mov
mov
ss
mov
les
ins
outs
adc
mov
imul
out
push
ror
(bad)
fnstcw
and
out
adc
xchg
out
inc
cdq
and
push
cmp
jnp
mov
dec
dec
repz
adc
jbe
call
mov
dec
jb
sub
ror
mov
mov
jnp
cmp
add
sub
popa
adc
mov
sti
loope
sbb
daa
pop
add
xchg
adc
add
daa
(bad)
xlat
scas
sar
and
(bad)
ja
xor
add
push
les
jae
repnz
ins
sub
stos
test
mov
ror
rcr
test
ds
dec
js
and
xchg
cmp
repz
xor
sbb
push
jbe
fwait
push
add
and
cmp
jns
or
jmp
sar
jno
inc
push
xor
shl
call
inc
aad
and
js
add
scas
daa
xchg
ds
fstp
xor
aam
push
fst
mov
popa
adc
cs
test
iret
pushf
cld
or
sub
dec
mov
mov
fnstenv
jg
stc
pop
rol
ss
loopne
dec
mov
ins
cmps
jbe
pop
stc
in
sbb
jmp
ja
xchg
mov
ret
data16
movs
mov
stc
mov
shr
gs
pop
bound
repz
call
pop
cld
xchg
movs
mov
jmp
or
cmp
cmp
call
sub
scas
dec
or
fs
fmul
cmp
ds
pop
aam
cmp
sub
mov
xor
movs
lea
xchg
ds
cdq
push
mov
clc
cmps
or
stos
dec
mov
dec
or
mov
ret
mov
fnstsw
xor
inc
add
jge
mov
and
or
mov
jo
mov
cld
rol
jge
or
arpl
mov
out
push
and
add
ret
dec
sub
jp
jae
cdq
std
push
jmp
mov
les
inc
leave
dec
mov
xor
hlt
ins
jb
sahf
mov
push
mov
lods
mov
movs
jmp
mov
shl
adc
dec
fnstsw
(bad)
imul
scas
in
or
es
pop
adc
adc
jnp
ficomp
lahf
fidiv
int3
div
fidiv
mov
cmp
js
mov
std
ins
sub
adc
shl
ficomp
leave
push
pop
fwait
sub
mov
mov
aam
(bad)
push
pushf
js
push
fmul
test
mov
and
and
loopne
fcom
mov
and
xchg
and
xor
lahf
push
test
test
pop
sbb
cwde
sub
test
ins
cwde
push
test
lahf
mov
sbb
fwait
fwait
mov
and
pop
mov
mov
mov
mov
cld
pop
jb
add
push
out
fiadd
add
sbb
xchg
jae
mov
imul
jg
mov
dec
xor
or
adc
fsubr
out
xor
pop
int3
pop
iret
(bad)
sar
pop
pushf
les
fcomp
cmp
mov
xchg
pushf
jg
pop
shr
call
sbb
stos
bound
xlat
shl
mov
in
sbb
push
or
(bad)
lds
out
daa
mov
mov
clc
ror
inc
ret
mov
mov
jb
push
inc
outs
mov
sub
ror
mov
sahf
inc
xchg
dec
arpl
xor
sbb
or
bound
pop
ss
addr16
pop
bound
sbb
sbb
fs
jae
mov
and
mov
js
test
xor
or
movs
mov
xchg
bnd
je
and
repnz
sub
fcom
je
iret
inc
inc
mov
inc
or
aaa
mov
mov
inc
outs
dec
imul
clc
fidivr
push
sbb
add
xchg
lods
nop
jg
shl
xchg
pop
mov
adc
xor
cmp
or
imul
and
push
mov
dec
add
xor
aad
push
mov
xor
push
retf
sub
stos
fcom
push
shl
push
inc
push
mov
sub
pop
int
push
data16
xchg
push
(bad)
cli
int3
dec
mov
jno
dec
popa
pop
mov
jne
ss
fsubrp
ss
sar
push
mov
mov
mov
dec
mov
mov
sub
loop
outs
push
mov
mov
add
in
ss
xchg
adc
sub
mov
aam
arpl
mov
adc
xor
cmp
add
loope
jne
rcr
xor
and
lods
mov
push
and
xchg
inc
or
cmps
outs
sub
imul
mov
out
imul
cmps
dec
and
jo
in
pop
mov
xchg
sub
mov
sar
(bad)
cmps
(bad)
cmp
cdq
adc
push
jb
cdq
dec
idiv
dec
and
cmp
pushf
jmp
sub
(bad)
sar
retf
adc
fcom
and
pop
popf
stos
rcl
or
cmp
(bad)
sub
lea
clc
push
(bad)
xor
out
retf
popf
sub
retf
and
ss
icebp
ins
push
mov
call
jl
shr
fcom
mov
lock
in
ret
pop
mov
xor
inc
rol
jmp
aaa
adc
stos
cs
cmp
stos
dec
adc
mov
mov
fimul
push
jae
icebp
nop
pop
xchg
dec
iret
jo
scas
(bad)
sbb
stc
xchg
xor
cmps
fnstenv
sbb
ins
jg
cld
(bad)
js
sub
inc
stos
popf
std
xor
hlt
rcl
sub
ss
push
push
mov
les
loope
ds
mov
cmp
sbb
cmp
daa
div
mov
popa
adc
jp
in
sub
clc
or
mov
pushf
cmp
sbb
sub
add
stc
ss
inc
lds
add
mov
fdiv
cmp
xor
pusha
pushf
jbe
push
and
rcr
movs
dec
xor
clc
push
jle
push
loopne
adc
bound
xor
out
cmp
cmps
rcl
(bad)
lock
(bad)
xchg
and
ret
sbb
lods
outs
retf
ja
adc
mov
push
int
cmp
test
add
xchg
adc
daa
fwait
mov
mov
stos
into
add
push
in
aam
jg
cmc
std
hlt
and
dec
stos
xlat
or
int
and
mov
jg
loop
jl
mov
lahf
mov
pushf
call
rol
cli
in
xlat
push
in
jle
dec
scas
out
cmp
retf
cmc
xchg
(bad)
scas
mov
mov
sbb
push
arpl
pop
inc
cmp
leave
xchg
ret
daa
dec
pop
out
dec
mov
jle
ret
cmp
out
or
mov
fisub
sbb
and
push
mov
inc
shl
mov
bound
adc
lfs
test
std
sub
test
test
xor
sub
outs
or
pop
loopne
test
out
aam
lods
loop
aaa
or
push
mov
rcl
fs
pop
and
cmc
add
dec
jg
mov
xlat
xchg
test
shr
jmp
xchg
inc
inc
loope
ja
popf
mov
jl
cld
inc
xor
movs
dec
mov
fwait
cmp
fmul
xchg
push
es
sbb
jb
pop
pop
iret
nop
cmps
xor
mov
sbb
jnp
jb
sbb
inc
mov
xchg
(bad)
adc
inc
ret
stos
clc
div
xor
test
pop
push
mov
push
jle
pop
xor
sub
icebp
outs
jp
clc
test
pop
int
ins
test
ss
(bad)
mov
push
das
mov
(bad)
js
jo
jno
call
push
cmp
cmp
xor
sub
adc
cmps
out
sbb
xor
mov
and
sbb
xchg
add
cmps
push
fsub
mov
pmullw
(bad)
cld
jbe
mov
xor
dec
jo
push
ret
pop
lods
mov
pop
adc
jle
cmp
aam
xor
sub
cmp
jne
outs
mov
push
rcl
aam
dec
aas
mov
jno
scas
int
cmp
jo
bound
scas
or
mov
popa
rcr
xchg
cmp
push
nop
mov
jo
cmp
(bad)
addr16
add
xchg
loopne
push
es
leave
xchg
mov
imul
lds
add
out
aaa
cmps
push
and
cmp
test
mov
bound
mov
popa
loopne
aad
xchg
xchg
(bad)
jb
sahf
leave
popa
sbb
retf
test
push
dec
mov
sub
or
mov
jns
inc
scas
(bad)
jno
test
std
adc
xor
(bad)
cmp
xor
(bad)
xor
dec
xchg
adc
jmp
xchg
xor
int3
test
std
fcom
in
scas
add
retf
jle
js
pop
xlat
(bad)
sti
adc
arpl
(bad)
enter
xchg
sub
rol
cmp
pop
test
ss
bound
cdq
pop
repz
push
push
jbe
in
cld
inc
push
cmp
(bad)
or
hlt
inc
jns
aaa
push
stos
pop
lock
les
icebp
sub
ss
imul
mov
adc
(bad)
ffree
pop
pop
imul
push
jmp
dec
dec
test
mov
aaa
mov
movaps
popf
xor
add
jmp
into
mov
xor
mov
aam
adc
pop
mov
int
adc
ss
ins
xchg
or
mov
mov
mov
xor
(bad)
inc
jae
sbb
fimul
xor
adc
test
xlat
add
in
jmp
movs
push
and
fwait
xchg
mov
xchg
push
fstp
rcl
mov
push
pop
mov
jnp
out
xor
movs
int
loopne
cdq
leave
adc
mov
sub
es
aad
loope
loopne
inc
in
pop
mov
xchg
mov
clc
iret
jne
fmul
popa
in
inc
cdq
jmp
jl
das
push
call
pop
jle
nop
jmp
dec
adc
or
cld
adc
jnp
cmp
call
jle
cmps
xlat
test
loop
cdq
(bad)
adc
repnz
rcr
cs
aaa
aas
mov
mov
push
pop
pop
jne
call
pop
pusha
rcr
push
push
retf
xchg
cmp
popf
loope
or
hlt
inc
mov
pop
mov
out
iret
mov
cmps
mov
jp
cmps
repnz
mov
or
xchg
pop
xor
in
xchg
cmps
ins
outs
jmp
sbb
and
mov
std
mov
cmp
mov
mov
or
ret
ret
pop
call
shr
rcr
fdivr
addr16
lea
xchg
mov
sti
popa
aas
mov
jae
or
adc
jbe
mov
stos
fs
gs
in
mov
icebp
fwait
jmp
fs
imul
clc
jge
sbb
dec
ja
dec
mov
enter
jp
cld
adc
cmp
and
mov
mov
mov
sub
test
mov
test
mov
jno
adc
ss
popf
pop
mov
mov
ror
(bad)
lods
in
je
ja
dec
jle
shl
sbb
adc
mov
movs
out
leave
fnsave
cmc
sbb
mov
jp
jge
fsub
inc
inc
mov
xlat
mov
aaa
sub
or
jns
dec
xchg
sbb
jg
aam
push
out
out
jp
std
push
imul
sub
aad
dec
xchg
test
js
mov
mov
jg
push
xor
mov
sub
jno
daa
nop
jle
je
jno
pushf
add
push
and
xlat
data16
icebp
ins
jae
fidiv
jge
lds
dec
rcl
inc
test
mov
es
sub
sbb
loop
repz
cmp
cmps
aad
push
add
mov
mov
inc
add
or
imul
fadd
push
call
adc
cmp
jnp
push
pop
push
fiadd
xor
sub
lea
ror
push
cmp
pop
xlat
push
ja
jno
les
xchg
mov
add
sbb
aaa
mov
or
mov
pop
xchg
test
rcr
adc
xor
xor
in
xchg
pop
dec
dec
arpl
mov
daa
les
frstor
mov
xchg
inc
test
pushf
push
mov
lahf
leave
mov
clc
aas
and
pop
push
adc
(bad)
hlt
or
cmps
mov
sbb
mov
adc
ins
in
and
mov
xchg
inc
ret
ror
ret
ins
mov
in
aaa
xchg
lods
cmp
or
mov
out
in
ret
dec
retf
jg
fisubr
pop
cmp
mov
xchg
push
int
mov
dec
mov
(bad)
xor
shl
int3
or
xchg
mov
dec
cmps
mov
stos
rol
xor
fs
mov
cli
aam
push
xor
ss
adc
rol
mov
jge
clc
adc
push
jmp
mov
add
rcr
ins
adc
xchg
jp
pop
stos
out
clc
cmc
inc
lock
lods
inc
mov
cmp
cmps
cld
or
dec
dec
mov
jg
aaa
inc
neg
push
mov
(bad)
jl
pusha
push
ins
je
cwde
push
cmp
sar
(bad)
(bad)
fldcw
fadd
mov
cwde
inc
jb
and
mov
cmp
out
pop
sbb
jmp
push
sar
mov
lods
jmp
jmp
lahf
mov
movs
das
add
mov
dec
and
jl
mov
dec
jg
jge
sbb
push
xchg
add
sub
add
dec
xlat
icebp
fstp
jns
test
jl
idiv
lock
in
sbb
pop
cmps
retf
add
mov
pop
aam
movs
shr
out
retf
ss
dec
inc
dec
dec
arpl
cmp
sub
ins
cmp
push
imul
push
mov
or
pop
rcl
and
jo
jg
and
mov
cmps
fistp
(bad)
mov
repnz
loop
loopne
mov
or
fdiv
push
cmp
test
jmp
sub
mov
or
and
icebp
cmp
lock
inc
aam
imul
stos
pop
push
retf
nop
cli
adc
pop
sub
mov
sub
push
rcr
sbb
lds
sub
inc
loop
pop
dec
sub
stos
mov
je
pop
mov
mov
das
out
test
ficom
xchg
leave
and
jp
in
pop
mov
in
fistp
sub
frndint
lods
and
int
repnz
dec
sub
(bad)
or
stos
lds
(bad)
pusha
dec
mov
outs
xchg
push
stc
in
jns
clc
sbb
sar
mul
jmp
cmps
nop
imul
pop
xchg
add
push
add
(bad)
into
ret
pusha
sbb
rcl
shl
icebp
cmps
inc
mov
cdq
jmp
mov
push
jge
dec
clc
(bad)
stos
add
loopne
out
(bad)
fs
fsub
sub
push
adc
adc
add
jmp
cmp
or
loopne
sbb
add
addr16
popf
sbb
out
mov
add
loope
add
stc
out
das
pop
fcmovnbe
(bad)
xchg
cdq
xchg
sbb
mov
repz
jmp
out
loopne
jmp
mov
and
xchg
movs
adc
push
test
cli
pop
push
mov
std
adc
or
jmp
data16
pop
into
in
(bad)
dec
cmc
xchg
repz
add
xor
xlat
xor
cwde
retf
ret
jmp
push
cmp
mov
mov
iret
ret
or
fs
shl
jno
pop
fldenv
jl
arpl
mov
xchg
les
movs
sbb
fild
mov
xchg
rep
int3
sub
je
add
fldcw
sti
sub
pop
sbb
test
cmp
std
inc
clc
inc
pop
cmc
add
movs
ja
cmp
mov
sbb
(bad)
(bad)
aaa
or
adc
in
pop
nop
lods
cmp
clc
ret
push
mov
retf
push
pusha
cmp
aas
mov
dec
mov
outs
sub
lods
push
add
add
cmp
xlat
call
mov
pushf
jl
aam
mov
xor
imul
push
push
out
jno
lds
ror
adc
xor
ret
cmp
jnp
inc
dec
aam
call
cmp
outs
and
pop
xor
dec
aas
jbe
je
fs
xor
pop
jne
mov
push
mov
adc
scas
mov
adc
sub
test
jnp
cmps
sub
pop
repnz
pop
inc
add
or
gs
in
mov
ror
fnsave
arpl
fs
gs
stc
mov
loop
movd
inc
mov
jo
retf
cmps
jae
mov
adc
push
and
daa
cmp
xor
cmc
add
hlt
sbb
or
pop
xor
repz
mov
std
shl
or
jmp
mov
inc
jmp
movs
mov
daa
daa
add
ret
pop
aaa
sbb
(bad)
mov
sub
push
push
push
mul
(bad)
cmp
and
icebp
xchg
xchg
mov
inc
sbb
sub
xchg
sub
fmul
sbb
jae
xchg
jl
sbb
xchg
in
add
and
and
ins
popf
push
imul
sub
mov
ffree
sahf
push
or
loope
test
pop
in
jno
jmp
outs
or
add
xor
mov
pushf
leave
bound
cmp
shr
and
adc
out
xchg
sub
pop
dec
adc
add
dec
sti
(bad)
cmps
fist
(bad)
ds
lods
fimul
aad
dec
lahf
enter
mov
inc
(bad)
dec
xor
rcpps
scas
(bad)
xchg
adc
jo
ror
out
ss
iret
(bad)
xor
xor
(bad)
push
dec
jp
add
test
mov
stos
mov
fnstcw
push
out
loope
mov
jns
add
xchg
movs
inc
in
bound
mov
and
inc
stos
es
rcr
xor
outs
mov
cmp
xor
mov
mov
mov
stos
gs
mov
mov
pop
in
jae
xlat
xor
inc
scas
sub
loopne
push
mov
sub
das
mov
daa
push
sahf
pop
out
add
ds
lock
push
mov
ins
xchg
ins
test
or
jae
test
push
in
jbe
pushf
push
mov
sub
xor
sbb
mov
xor
outs
cmps
cs
push
bound
loope
ret
test
push
iret
(bad)
fst
push
fist
jle
data16
(bad)
int
aad
ins
sbb
dec
jae
push
in
cmp
and
mov
loope
adc
xchg
in
scas
scas
jmp
leave
out
pop
jb
cmp
add
popf
sub
jno
test
clc
xchg
imul
cmp
sub
test
jo
sub
mov
jecxz
xchg
dec
fist
push
mov
stos
sar
jmp
movs
test
ja
xor
out
scas
lds
dec
add
in
ror
int3
dec
cdq
dec
push
cmp
adc
and
sar
in
mov
jnp
push
mov
in
mov
cdq
neg
out
jle
mov
mul
movs
sub
enter
pop
shl
mov
in
cmp
psadbw
cmp
retf
test
dec
clc
mov
sbb
jnp
out
jmp
lock
pop
mov
jecxz
push
ret
jle
retf
jmp
jp
add
ss
xchg
(bad)
rol
mov
dec
pop
push
fs
imul
bound
jmp
sub
xor
fadd
ja
adc
dec
push
test
cmps
pop
rcr
pop
sbb
jae
inc
out
xchg
mov
out
div
inc
push
in
enter
jp
cmp
mov
je
dec
cmps
mov
iret
or
cmp
mov
jmp
cmp
xor
leave
add
mov
fldcw
cmp
imul
shr
iret
dec
mov
dec
xor
dec
(bad)
xchg
cs
xor
push
(bad)
and
xor
mov
add
jge
retf
mov
cmp
inc
adc
adc
and
cmp
push
sbb
mov
daa
jb
jg
mov
mov
cmp
stos
sub
sbb
hlt
mov
fiadd
out
out
jae
push
and
inc
jb
mov
mov
xor
mov
test
inc
dec
nop
movs
aad
clc
mov
mov
retf
adc
test
jmp
dec
push
lds
fwait
xor
rol
push
jge
iret
adc
add
(bad)
pop
add
and
iret
icebp
xchg
std
pop
xchg
loope
(bad)
xor
stos
dec
fsubr
stos
push
std
jbe
pop
and
mov
mov
ja
xor
sbb
sbb
icebp
jl
out
cmp
inc
pop
(bad)
imul
test
push
out
mov
aam
ret
cwde
(bad)
sbb
add
ja
into
pop
lods
ret
lods
mov
dec
pop
sbb
into
or
int
je
push
mov
or
sub
jp
(bad)
xor
pop
out
in
push
enter
es
adc
or
scas
pop
test
js
mov
out
pushf
pushf
push
into
repnz
in
test
into
push
ds
push
add
scas
(bad)
int3
xor
adc
sti
sub
adc
shr
or
jne
push
cmp
dec
out
je
mov
repnz
add
fist
xchg
xchg
nop
std
in
das
test
or
mov
lds
inc
loope
in
test
mov
enter
jns
rcr
adc
loop
cmp
(bad)
fs
fwait
jne
movs
jp
jmp
in
das
push
mov
push
test
push
psrlw
inc
mov
push
pop
push
nop
push
iret
inc
mov
and
scas
cld
sub
mov
addr16
cmp
push
pop
mov
sub
ret
push
pop
call
cmp
sub
or
scas
lods
cld
inc
call
push
push
sbb
in
adc
out
mov
adc
push
sbb
cld
add
loopne
cmp
push
jle
test
daa
sar
mov
loope
div
xor
ins
cs
xchg
test
xor
mov
jmp
cwde
and
dec
ins
iret
sub
mov
jmp
xor
pop
iret
out
sub
inc
cmp
dec
fs
in
adc
jmp
(bad)
popf
icebp
popa
push
arpl
sub
cld
jle
sub
xchg
mov
mov
sub
push
arpl
imul
jno
push
inc
or
mov
jnp
or
ins
fild
cmp
sbb
jbe
or
(bad)
pop
daa
jae
int
in
jno
clc
pop
or
stos
lods
arpl
imul
mov
repnz
pop
dec
or
call
bound
std
mov
clc
pop
das
pop
sub
fninit
test
jnp
mov
(bad)
dec
sub
in
rol
scas
or
(bad)
ins
sbb
test
push
popa
ds
add
out
mov
dec
cmp
and
sbb
jle
test
aad
lods
mov
sbb
jae
push
daa
out
dec
cmp
mov
sahf
jo
add
or
call
sbb
cmp
cmps
pop
fild
movs
push
sub
mov
es
add
cmp
xor
mov
jmp
std
lods
mov
retf
sub
dec
push
jmp
fdivrp
sub
cdq
and
push
fcom
inc
pop
push
push
sbb
jns
jmp
sbb
in
pushf
pop
or
and
pop
lods
cld
(bad)
cmps
sub
push
or
jne
mov
jp
aad
gs
adc
xor
mov
mov
imul
pop
mov
xchg
mov
(bad)
out
sbb
inc
cdq
sti
adc
sar
aam
or
repnz
movs
mov
jnp
imul
arpl
inc
repz
push
sub
mov
shr
imul
inc
inc
int3
inc
ins
xchg
mov
imul
xor
daa
test
jl
inc
xchg
loop
out
dec
adc
xor
xchg
jp
cmps
inc
xor
stc
add
es
jns
outs
add
mov
stc
(bad)
sub
xchg
fadd
xchg
jo
stos
into
daa
mov
inc
add
sub
mov
xor
and
aaa
fnstsw
xor
sbb
push
ins
mov
xor
cmp
ret
loopne
in
pop
or
fild
jg
sbb
add
jae
mov
mov
ret
xor
lahf
nop
add
sub
inc
in
sti
jmp
dec
clc
ins
aas
push
fs
jl
stos
nop
jnp
push
jae
add
iret
idiv
sub
jge
lods
inc
call
jne
cmp
push
stos
sub
mov
ins
mov
lahf
loop
or
xor
(bad)
and
sahf
scas
dec
cmp
jnp
(bad)
daa
xchg
push
pop
push
mov
mov
mov
(bad)
jmp
jp
clc
xchg
call
sbb
push
xchg
mov
xchg
add
data16
call
(bad)
ret
data16
enter
add
les
aad
xchg
aam
push
and
add
or
cld
mov
fcmovnu
or
sub
dec
jge
test
sub
ja
lea
repz
jmp
pop
aam
inc
int
sub
ror
pop
(bad)
push
fst
sub
or
mov
xor
lds
enter
mov
(bad)
shl
xchg
mov
push
adc
jg
push
jle
inc
pop
fiadd
aam
pop
(bad)
retf
xor
mov
xor
into
pop
jo
jmp
pop
popa
movs
imul
mov
or
stos
xchg
fdivr
in
jnp
ret
dec
xchg
adc
into
push
test
inc
cmp
jg
jb
mov
sbb
je
in
ficomp
test
xchg
jmp
dec
fadd
test
mov
imul
test
sbb
out
mov
and
push
in
push
xor
jle
or
or
loope
retf
fist
sahf
sbb
xchg
aaa
cmp
sbb
xor
inc
mov
clc
ss
retf
idiv
push
mov
and
les
out
jl
ror
repz
cdq
jo
dec
inc
and
dec
(bad)
ds
div
sar
inc
xchg
pop
leave
jae
adc
cmc
add
dec
mov
into
dec
fcom
mov
(bad)
sbb
add
retf
jmp
aam
lock
movs
push
sti
mov
mul
fdiv
addr16
add
jle
xchg
js
dec
mov
ret
mov
or
xchg
mov
and
dec
lahf
ins
inc
hlt
sbb
pop
fs
mov
lds
fnstenv
mov
mov
(bad)
cs
dec
mov
cdq
in
xchg
jmp
scas
out
(bad)
cmp
mov
sbb
or
jbe
mov
aas
jl
ror
mov
mov
and
or
or
aas
enter
add
and
loopne
adc
scas
retf
repz
sub
mov
mov
xchg
inc
loopne
leave
inc
mov
jl
stos
jb
or
mov
inc
mov
aad
pop
push
adc
and
bound
fcomip
lahf
scas
push
push
movs
jecxz
add
lods
adc
sar
push
mov
fs
cwde
lea
fldcw
pop
pop
pusha
lds
push
and
push
(bad)
or
sbb
ret
jmp
add
dec
push
sbb
ret
xor
sahf
and
sti
iret
mov
jecxz
repz
test
jno
push
cld
clc
lds
int
and
jmp
dec
repz
rol
daa
repnz
jl
shr
mov
pushf
mov
(bad)
stos
mov
cs
mov
push
or
in
push
loop
rol
pop
mov
mov
sub
mov
add
mov
add
ss
int
ss
pop
retf
add
xor
test
push
das
add
js
test
mov
dec
scas
sub
ret
test
hlt
add
mov
dec
stos
mov
shl
cwde
out
dec
mov
mov
int3
into
enter
push
pop
push
add
sti
(bad)
loop
call
mov
ds
call
cld
mov
pushf
cdq
movs
mov
xchg
xor
dec
xchg
loop
push
jnp
mov
dec
into
fbstp
mov
out
adc
adc
mov
pop
adc
add
test
adc
mov
adc
xchg
sbb
imul
push
push
push
out
dec
icebp
cdq
cmp
imul
xchg
xchg
xchg
sbb
ret
jmp
repz
adc
xchg
loopne
add
in
leave
dec
pop
adc
xor
and
aas
sub
outs
arpl
or
pop
test
cmp
aam
out
movs
push
das
dec
jl
push
sub
fs
push
bound
xor
sub
ret
ja
inc
fisttp
retf
or
jns
out
retf
es
xchg
sub
hlt
add
inc
mov
mov
mov
xchg
je
leave
sahf
shl
mov
rol
and
out
mov
inc
fcom
mov
cmp
fisubr
xchg
and
scas
in
sbb
pop
popf
add
xchg
pop
adc
in
cs
inc
in
sbb
xor
sbb
sar
or
cmp
dec
sub
xchg
cwde
dec
mov
imul
lds
lea
movs
or
popa
push
out
aam
mov
push
cmp
mov
push
pushf
xor
xor
push
in
shr
inc
iret
jecxz
lock
daa
int
dec
push
aam
cld
add
mov
out
fisttp
mov
and
inc
loop
pop
arpl
pop
mov
enter
mov
in
test
stos
int3
push
mov
mov
(bad)
int3
iret
lods
push
movs
out
fnsave
mov
push
lods
dec
outs
outs
sti
nop
pop
movs
add
not
and
test
sbb
push
cmp
sahf
jns
jl
mov
mov
push
cmp
call
and
cwde
addr16
jns
addr16
cmps
fimul
daa
or
lods
sbb
rol
and
cmp
(bad)
fs
push
mov
(bad)
aaa
sbb
nop
inc
mov
cwde
pop
mov
pop
cmps
jmp
fdivp
imul
inc
jg
daa
xlat
fldenv
pop
retf
and
retf
and
(bad)
mov
and
shl
(bad)
pop
lods
stos
lock
adc
test
mov
xchg
add
xor
loopne
sbb
mov
ffreep
inc
push
adc
mov
lods
or
clc
mov
mov
or
stos
dec
jle
iret
sbb
cdq
movs
sub
add
jmp
in
fstp
je
daa
xor
fs
fwait
jp
mov
sub
mov
lods
shl
cmps
jecxz
pop
add
into
loope
push
fcos
not
outs
pop
mov
jmp
pop
add
loope
pop
xor
out
adc
jnp
pop
das
cmps
dec
jne
daa
movs
mov
push
xchg
fs
int3
stos
daa
xchg
or
mov
and
ss
aas
sbb
icebp
sub
pop
sub
xor
sbb
scas
fs
into
inc
out
movs
adc
mov
mov
data16
pop
retf
mov
neg
test
cmps
push
iret
mov
fist
ficomp
sub
ficom
inc
push
out
fdivr
mov
daa
xor
popa
xchg
mov
or
xor
imul
es
test
das
rcr
fsubrp
loope
rcl
push
add
cli
adc
push
rcl
or
cmps
imul
into
repnz
fs
and
sbb
minps
jb
dec
mov
xchg
jns
or
fs
mov
pop
shl
(bad)
mov
lock
data16
or
cmps
jmp
stos
cmp
popf
aam
ja
pop
aaa
aas
pop
jns
cmp
add
sti
(bad)
retf
(bad)
test
enter
xchg
stc
sub
retf
xor
inc
pop
add
int3
out
sbb
or
mov
add
pop
or
nop
rol
adc
jmp
retf
int3
mov
test
dec
imul
jo
(bad)
mov
or
lock
pop
xchg
cwde
fwait
jmp
call
adc
ds
test
jae
aad
outs
aaa
mov
fnsave
mov
pusha
jbe
(bad)
mov
mov
nop
push
lahf
jne
jl
mov
or
cwde
xchg
mov
pushf
lods
nop
gs
movs
jp
pop
pop
sar
xor
sti
ins
mov
dec
and
sub
in
inc
sbb
mov
push
cs
mov
icebp
mov
cmps
xchg
outs
mov
sbb
cmp
in
xchg
sbb
push
iret
lock
xor
mov
mov
or
inc
cs
stos
or
and
add
(bad)
xchg
(bad)
popf
jns
dec
cmp
adc
or
jge
pop
or
mov
mov
loop
ja
lahf
jecxz
jns
jb
test
stos
push
aam
jns
mov
dec
repnz
mov
xchg
repnz
popf
or
hlt
push
test
and
rol
sbb
cmp
sbb
movs
mov
inc
xchg
lds
cwde
test
mov
or
test
mov
add
xchg
pop
jne
xchg
cmp
mov
std
fisttp
std
dec
cmp
mov
adc
js
mov
cdq
cmps
xor
sbb
in
mov
out
xchg
les
loop
cmp
dec
loope
pop
push
rcr
xor
ret
push
pop
mov
ins
sub
push
push
lods
ss
dec
pop
pop
mov
cld
mov
pop
call
xchg
adc
cmp
pusha
stos
jne
jl
dec
mov
or
jne
or
lods
mov
pop
aaa
jge
ret
cli
push
not
dec
popf
push
mov
sbb
xchg
dec
inc
pop
pop
retf
push
call
(bad)
fadd
lods
inc
sub
or
popa
xchg
imul
push
and
cmp
jle
test
pop
or
pop
mov
xchg
addr16
push
xlat
jb
add
mov
push
dec
div
jecxz
add
sar
mov
test
hlt
(bad)
out
add
aad
sbb
jl
and
inc
retf
cwde
or
iret
call
mov
mov
imul
mov
in
ja
dec
lahf
sbb
das
lds
fidiv
shr
int3
int
lds
bound
or
add
popw
cmc
sub
cs
add
enter
pop
in
xchg
push
mov
xchg
jmp
hlt
ins
jmp
cmp
jp
pop
int3
call
jg
inc
adc
push
pop
pop
loope
outs
cmp
mov
add
sbb
sub
shr
dec
leave
loopne
inc
sub
jo
stos
xchg
test
imul
enter
jl
clc
inc
cli
ret
push
push
mov
jb
mov
jno
or
adc
and
(bad)
(bad)
jle
or
scas
mov
ins
outs
cmp
jmp
aam
ss
in
(bad)
jp
fisttp
inc
fdivr
sub
pcmpgtw
xchg
pop
adc
cwde
cmps
mov
add
cmp
mov
sbb
or
mov
xchg
js
pop
adc
jne
aas
fdiv
add
add
push
outs
loopne
addr16
add
xchg
cmp
ret
jmp
loop
adc
mov
dec
mov
add
cmp
sbb
loopne
adc
imul
(bad)
jmp
(bad)
(bad)
int
sub
sbb
or
dec
nop
mov
push
adc
mov
in
pop
jne
xor
adc
movs
outs
or
fcomp
dec
enter
push
ret
mov
cmp
call
push
shl
sbb
shl
cwde
or
stos
(bad)
xor
pushf
icebp
enter
xor
dec
je
test
sub
mov
push
push
lds
sbb
jle
arpl
adc
jae
mov
scas
mov
test
stos
cmp
(bad)
sub
xor
or
or
call
scas
scas
fldcw
in
dec
sub
and
sub
pop
cli
jle
(bad)
test
dec
cmps
mov
xchg
xor
add
out
sti
cmp
adc
mov
ds
fcomp
mov
(bad)
xlat
movs
cmp
adc
cld
shl
clc
dec
(bad)
jg
mov
mov
mov
inc
out
imul
or
into
jno
cmp
mov
mov
sar
sbb
leave
cmp
adc
imul
int3
mov
pop
add
fld
mov
retf
pop
inc
ins
ins
pop
ds
stos
sub
(bad)
pop
ins
adc
sub
call
or
icebp
adc
inc
mov
movs
adc
inc
mov
cmc
(bad)
sar
inc
mov
aaa
lods
jp
call
jecxz
mov
xchg
jo
push
es
imul
inc
jl
sbb
push
add
scas
adc
and
sbb
gs
loope
cmp
rcl
sbb
ja
ss
inc
scas
mov
cwde
ins
ds
in
adc
sbb
push
mov
dec
mov
call
enter
ins
aad
xchg
and
vphsubdq
xchg
rcr
adc
mov
retf
cli
inc
(bad)
hlt
lea
push
push
aas
sti
imul
inc
clc
and
sub
sbb
jl
xor
rcr
(bad)
mov
jae
sub
push
inc
xchg
fisttp
jge
adc
scas
add
scas
aaa
mov
ins
or
retf
mov
jns
or
xlat
pop
ins
rol
xor
mov
icebp
mov
xchg
sbb
clc
mov
pop
and
push
call
xchg
(bad)
hlt
dec
push
push
cmp
xor
ss
dec
add
xor
(bad)
fadd
out
hlt
pushf
sub
(bad)
bound
jg
pusha
shl
xor
add
popf
add
sbb
dec
ja
(bad)
pop
sbb
cmp
clc
dec
mov
mov
sbb
xchg
jnp
data16
imul
(bad)
jbe
jno
hlt
popa
xor
shl
mov
shl
and
ss
ds
push
adc
loopne
dec
fist
pop
out
fisttp
test
push
mov
(bad)
adc
dec
(bad)
ds
aas
mov
clc
in
push
cmp
loop
jecxz
and
dec
movs
fist
cmp
das
test
inc
push
sub
outs
adc
mov
dec
cmc
xor
pop
sub
mov
mov
xor
test
xchg
sbb
sbb
repnz
arpl
mov
push
mov
dec
and
into
or
ffree
sbb
daa
ins
iret
or
dec
push
mov
ja
inc
in
imul
aam
fwait
mov
and
stos
xchg
lods
lahf
(bad)
(bad)
fadd
mov
mov
mov
mov
ss
aas
push
sbb
imul
out
(bad)
aas
js
cmp
cld
or
sub
xchg
cli
sbb
mov
add
cs
or
test
rcl
or
mov
icebp
fcmovnbe
jns
dec
pop
mov
cmp
ror
jmp
aas
mov
ins
push
bound
pop
xchg
mov
mov
cli
and
out
fidiv
(bad)
sub
movs
dec
push
cmps
shr
sbb
pushf
aam
cmp
xchg
fmul
rcl
cmp
xor
loopne
ret
cdq
iret
ret
popa
pop
xor
pop
ficom
call
sahf
adc
sub
adc
std
mov
xor
adc
shr
cmp
jle
fisttp
fstp
mov
movs
push
bsr
cmp
adc
cld
call
fisttp
jg
fist
add
mov
inc
sbb
cmp
(bad)
jge
cmp
jno
jmp
jbe
stos
add
cld
pop
aaa
lea
sub
cmp
ins
scas
push
xchg
loopne
stc
sub
mov
loop
es
lahf
push
outs
mov
jg
dec
fwait
or
fild
add
dec
xchg
sub
scas
cmp
aam
sbb
cmp
adc
add
test
loop
movsx
ror
add
gs
pop
cli
not
(bad)
push
push
in
sub
int
fist
mov
ror
lods
push
stos
div
xor
jle
(bad)
in
cdq
test
ja
imul
or
adc
sub
cld
push
mov
mov
and
pop
adc
add
mov
stc
mov
call
ficom
add
cli
xchg
retf
ret
movs
rol
aas
jl
mov
(bad)
iret
fimul
ror
shr
adc
rcl
pop
nop
adc
mov
mul
movs
xchg
into
sub
adc
add
push
(bad)
xor
fnstenv
pop
aam
cmp
outs
stc
mov
cli
cmp
imul
out
xchg
cmp
pop
xchg
and
sub
mov
iret
push
cdq
fistp
xchg
lods
xchg
dec
jbe
aam
pop
mov
push
sbb
inc
push
inc
out
pop
jno
retf
cdq
lock
and
jl
repnz
fisub
stos
xor
nop
jb
xor
out
std
into
jae
adc
sub
jmp
pop
call
outs
aaa
mov
pusha
loopne
mov
fadd
jmp
les
outs
adc
test
or
lds
xlat
fnstsw
ret
sub
test
movs
mov
pop
mov
add
xchg
xchg
enter
iret
cwde
in
pop
(bad)
push
leave
enter
ret
movs
inc
add
cmp
add
push
xor
and
loop
or
ficom
ror
in
ins
mov
in
push
pop
jne
push
pop
lds
inc
jns
sti
not
dec
add
(bad)
daa
mov
jae
sub
shl
or
lods
mov
loope
push
adc
addr16
fmul
(bad)
jle
fnstsw
in
out
(bad)
mov
add
fnstsw
int
sbb
xchg
cs
int
jle
int
(bad)
fdiv
and
retf
cmp
(bad)
sbb
pop
scas
js
out
cmp
mov
xor
popa
popa
cmps
mov
and
jg
jnp
iret
pop
popa
sub
jge
iret
cdq
in
in
neg
std
adc
jno
sub
nop
push
jle
scas
pop
sbb
mov
mov
punpckldq
ret
xchg
push
mov
inc
call
sbb
clc
sub
(bad)
fisub
fwait
mov
cli
ss
test
sbb
adc
mov
sub
mov
sub
hlt
dec
mov
lock
fisubr
sub
mov
inc
jo
scas
mov
cs
push
jl
push
inc
jp
ss
jb
and
xor
xor
push
inc
push
call
ds
push
or
xchg
inc
sar
xchg
icebp
je
sub
xchg
in
pushf
call
push
shr
push
push
xchg
repnz
adc
adc
shl
sbb
loop
xchg
test
jmp
ins
imul
jge
adc
xchg
push
(bad)
sub
lods
es
sbb
inc
(bad)
ins
and
jmp
ss
mov
mov
xchg
xlat
mov
cmp
mov
xchg
pop
xor
scas
jo
iret
and
xor
call
stos
cmps
ins
movs
leave
adc
adc
imul
xchg
mov
push
(bad)
sub
mov
lods
pop
bound
xchg
cmp
fistp
jmp
fmul
adc
gs
sbb
sahf
jecxz
xchg
jecxz
add
cdq
gs
push
mov
cld
sub
nop
fist
outs
lods
inc
xchg
lods
xor
adc
xor
test
mov
rcl
xchg
fucomi
push
jnp
es
dec
inc
inc
movs
popf
ss
bound
ins
cwde
jbe
retf
daa
cmc
lock
arpl
dec
add
pop
jns
fstp
out
in
xchg
xlat
xchg
hlt
cmp
mov
in
jle
jmp
dec
rol
test
cmp
push
lock
jmp
cmp
inc
dec
mov
push
jmp
cmp
jb
retf
jmp
in
fsub
push
(bad)
popa
popa
inc
dec
aaa
or
es
ror
lea
into
movs
outs
inc
xchg
fwait
adc
dec
iret
jle
shl
sbb
addr16
dec
sbb
jecxz
call
sub
fcomp
jnp
out
dec
loopne
add
adc
test
mov
mov
popa
xchg
mov
js
xor
cli
xor
xor
aad
pop
pushf
fist
sub
sbb
sbb
push
fxch
push
or
mov
xchg
mul
scas
std
lock
xor
mov
dec
jo
mov
pop
cmp
clc
or
sub
shr
xchg
jno
fwait
inc
dec
adc
pop
sti
stc
fldenv
cs
pop
jnp
or
outs
mov
inc
sbb
sub
hlt
sti
and
lods
div
dec
retf
jp
jae
jns
scas
jl
pop
inc
and
sbb
sbb
cmp
scas
xor
adc
test
dec
hlt
push
dec
lods
and
loop
fs
aas
outs
movs
inc
mov
sub
push
sbb
xchg
jge
repz
(bad)
sbb
sbb
jo
(bad)
(bad)
mov
(bad)
addr16
adc
inc
retf
sti
ja
rcr
xor
into
jg
push
lock
outs
mov
stc
add
inc
into
jg
or
sti
int
mov
call
and
add
aam
inc
in
loop
adc
movs
ud2
mov
xchg
arpl
test
adc
dec
repz
dec
or
or
das
mov
and
dec
or
cmp
add
(bad)
pop
shl
cmp
mov
sbb
imul
and
or
cdq
icebp
jo
lods
retf
sar
loop
push
repz
(bad)
jno
mov
cdq
movs
and
aaa
add
xchg
push
cld
jg
add
cdq
(bad)
mov
pushf
pop
dec
and
lods
(bad)
outs
std
push
dec
pop
out
mov
dec
mov
movs
mov
test
jl
or
cmova
repnz
and
inc
cmc
(bad)
or
(bad)
rol
and
stos
setge
sub
shl
test
xchg
inc
mov
repz
std
je
xlat
fidiv
xchg
idiv
ds
xchg
pushf
xor
es
loopne
pop
nop
rcl
fistp
inc
fld
dec
dec
cwde
hlt
xchg
add
xor
inc
push
pop
out
inc
sbb
les
cmps
cmps
pusha
les
fnclex
cmc
pushf
cld
xchg
mov
push
shl
repnz
cmp
lods
pop
in
mov
sub
xor
and
setnp
daa
(bad)
fcom
in
sub
add
push
cmps
mov
mov
js
jle
fmul
mov
scas
sub
mov
inc
retf
sbb
arpl
mov
sub
sbb
dec
jne
add
cmp
cmps
xor
xchg
pop
sbb
mov
cmps
js
in
mov
gs
sub
mov
jo
adc
cmp
or
mov
scas
sbb
nop
fs
mov
movs
mov
outs
and
add
nop
cmp
push
(bad)
aas
cmp
div
mov
test
outs
iret
test
jb
jp
push
jbe
jl
dec
scas
scas
sar
enter
jbe
add
movs
and
jecxz
sub
mov
mov
sbb
ud0
jmp
fistp
retf
sar
sub
repnz
(bad)
and
fbld
sahf
jecxz
rcr
in
jmp
hlt
and
and
mov
popa
jbe
lds
jmp
das
xor
cmp
ret
loop
clc
cmps
and
jmp
push
jmp
ja
loope
jmp
lahf
mov
lds
cld
cmp
fdiv
retf
inc
in
xor
xchg
icebp
add
test
sbb
stc
call
push
dec
popf
and
push
cmp
mov
or
and
sub
sbb
add
or
mov
nop
mov
je
jmp
jb
mov
sti
shl
sub
pop
or
adc
addr16
lds
es
sahf
fdivp
fld
pop
lods
ja
cmps
popf
dec
out
sbb
lock
adc
lea
cmc
dec
loopne
es
pop
mov
(bad)
lahf
loopne
push
sub
sbb
mov
aas
push
mov
inc
cwde
mov
retf
push
xor
cmp
sbb
mov
add
outs
rol
addr16
pop
pop
jg
fist
sar
sbb
xchg
lds
test
or
pop
or
(bad)
sub
xchg
shl
ror
pop
dec
(bad)
mov
jmp
xchg
es
mov
sub
cwde
pop
enter
cmp
push
xchg
outs
inc
pop
mov
sbb
ja
sub
mov
or
ins
test
push
and
adc
fmul
(bad)
mov
mov
rcl
push
aas
cs
imul
mov
sahf
mov
lods
dec
jmp
add
push
or
mov
stc
jnp
mov
lock
ficomp
jns
pop
in
mov
push
lds
xchg
sbb
pop
push
cs
ficomp
pushf
sahf
std
test
jle
jne
repnz
loopne
push
inc
push
inc
inc
loopne
cwde
xchg
and
test
mov
inc
hlt
dec
fwait
fs
dec
sbb
(bad)
in
sahf
das
pop
movs
ja
ins
add
call
loopne
(bad)
fild
ja
pop
jae
imul
pop
jns
add
jnp
fs
(bad)
repnz
and
(bad)
jp
fst
pop
ins
iret
jbe
fild
popf
call
in
in
retf
add
ja
cmovge
mov
and
fst
nop
outs
imul
mov
dec
sar
adc
or
cli
sbb
add
push
xlat
pop
push
(bad)
xchg
stc
fcom
jle
jp
push
sti
pop
adc
aaa
sub
mov
psubw
retf
sub
xchg
push
and
sbb
fwait
sbb
jnp
out
and
push
sbb
add
pusha
ficomp
inc
lea
ins
fptan
imul
push
retf
xor
add
cmp
adc
scas
stos
xlat
pop
in
jle
sahf
xchg
stos
fsubr
test
sbb
shl
stos
push
in
pop
ror
stos
movs
mov
cli
shl
(bad)
xor
mov
or
or
jp
jmp
and
test
popa
inc
jmp
das
xor
fistp
repz
pop
add
adc
and
mov
xchg
mov
dec
jno
imul
adc
leave
dec
cmp
out
in
push
and
adc
pop
in
cmp
icebp
sbb
scas
inc
xor
(bad)
cmp
daa
xchg
sahf
es
call
std
les
and
add
scas
(bad)
sub
xlat
test
or
jae
jmp
mov
fist
in
stc
xchg
clc
ret
dec
cmp
pop
ror
sub
int3
push
cli
dec
jb
sub
loopne
outs
xor
or
movs
fimul
mov
add
test
repz
das
mov
xor
or
in
cmps
aam
mov
add
dec
rcr
rcl
nop
sbb
mov
mov
dec
int3
dec
hlt
jb
bound
movs
or
(bad)
mov
pusha
fwait
add
sti
cmp
pop
fidivr
jmp
or
mov
rcr
(bad)
test
push
cmps
mov
jl
(bad)
mov
jg
add
push
setl
sbb
movs
add
(bad)
loop
fisttp
sub
mov
xchg
inc
nop
jbe
ins
mov
push
scas
sbb
push
(bad)
out
outs
dec
push
sbb
std
or
mov
jno
inc
mov
dec
ins
repnz
sti
dec
fisubr
mov
aam
cmp
(bad)
mov
bound
sub
jno
outs
jp
pusha
fs
adc
and
jo
mov
pop
cmp
sub
xchg
push
outs
or
xchg
inc
inc
xlat
(bad)
adc
mov
dec
pop
pop
add
jle
mov
push
sub
mov
cmps
hlt
fcomp
push
(bad)
mov
sub
or
dec
mov
(bad)
das
cmp
jo
rcr
inc
dec
and
(bad)
into
cli
xchg
jmp
cs
arpl
pop
ss
fsubr
mov
push
loop
lds
mov
in
mov
inc
xor
push
fiadd
and
dec
mov
mov
dec
mov
imul
sahf
shr
hlt
outs
and
add
jecxz
cmp
inc
push
cmps
in
fsub
popa
pushf
mov
dec
imul
dec
js
xor
sub
lahf
push
(bad)
dec
mov
mov
ror
out
gs
cmp
adc
jo
sbb
outs
inc
cmps
rcl
cld
pop
xor
push
and
sbb
clc
mov
jmp
in
mov
rol
and
nop
xchg
hlt
push
pop
inc
fimul
add
cmp
jge
xor
xchg
cmp
fcom
cs
scas
(bad)
test
mov
mov
stos
out
xor
cmps
mov
cmp
cmp
sbb
mov
pusha
push
out
dec
push
dec
cmp
call
fwait
test
nop
ja
push
add
adc
mov
push
hlt
xor
adc
cs
xchg
mov
arpl
mov
fist
movs
stos
cwde
and
imul
jns
mov
dec
and
ret
es
mov
(bad)
inc
lahf
pop
inc
xchg
mov
(bad)
jae
mov
fsub
enter
dec
neg
jbe
adc
aad
nop
call
(bad)
in
mov
pop
push
dec
pushf
mov
sar
and
mov
push
std
bound
pusha
fcomp
test
sbb
adc
hlt
mov
ret
aam
int
adc
cwde
mov
xchg
xor
mov
sub
mov
dec
ja
xchg
shr
div
cdq
call
(bad)
cmp
xchg
jo
jp
pop
call
outs
mov
mov
add
push
pop
push
cdq
jo
stc
outs
add
push
inc
push
jns
fisttp
retf
xchg
sub
xchg
inc
mov
in
ror
out
dec
lock
test
jae
mov
fwait
pop
pop
cdq
std
imul
cmc
inc
sbb
and
ss
cmps
movs
mov
dec
inc
ror
push
inc
or
mov
xor
dec
ins
iret
push
(bad)
fidiv
adc
push
and
icebp
das
ret
mov
jo
mov
or
and
sar
(bad)
or
or
pop
retf
adc
dec
xchg
pop
xchg
fmul
arpl
inc
push
mov
cmc
lea
js
push
mov
adc
std
popa
mov
add
cmp
pop
mov
pushf
sbb
hlt
pop
jg
mov
aas
enter
push
pop
clc
xchg
test
xor
es
xlat
dec
call
jg
mov
js
pop
leave
daa
xor
das
cdq
mov
mov
outs
mov
shl
mov
jmp
push
daa
xchg
(bad)
mov
add
jae
jg
sub
mov
and
mov
mov
xor
cs
cli
in
mov
mov
push
sbb
in
xlat
dec
jnp
pop
xlat
mov
mov
dec
inc
(bad)
mov
pop
call
cmp
retf
mov
dec
fistp
not
out
dec
and
(bad)
cmp
mov
popa
aam
das
pusha
hlt
into
call
push
cmp
test
push
pop
hlt
inc
add
xor
and
inc
test
jmp
jns
je
and
fs
adc
js
jle
and
pop
clc
xor
sahf
mov
adc
mov
stos
mov
sbb
push
lea
dec
test
call
jge
test
inc
cmp
in
cwde
outs
jb
aad
fdivr
jno
jl
cmc
cli
pop
fsub
xchg
test
out
pusha
push
sbb
adc
cmp
xlat
inc
and
lds
add
cmps
rcr
dec
inc
push
and
test
aaa
lea
dec
inc
mov
pop
dec
push
jg
popf
adc
xchg
add
xchg
sbb
xchg
cmp
sub
ds
movs
dec
cmc
nop
je
lods
add
jo
aaa
push
ins
loope
xchg
psrlq
jbe
arpl
jge
pop
jns
cmp
mov
xchg
test
cs
aam
movs
mov
cmp
sub
js
add
movs
daa
popf
cmps
hlt
and
jp
dec
lock
rcl
sub
adc
xchg
sbb
push
add
inc
pop
mov
mov
sub
dec
sahf
mov
xchg
add
nop
or
movs
push
xchg
ficomp
pusha
jne
std
or
not
rcl
jge
dec
loope
jmp
repnz
imul
jmp
lea
dec
cmovnp
jne
push
movs
mov
xor
and
jmp
mov
inc
xchg
push
sub
adc
and
fimul
push
push
scas
(bad)
sti
dec
xchg
out
push
xor
push
lahf
int3
push
cs
ins
jg
(bad)
movs
inc
cmps
fadd
in
das
icebp
arpl
cmps
je
js
rol
bswap
mov
not
cmp
pop
sbb
xor
jbe
ret
bound
xchg
pop
or
(bad)
dec
loopne
push
xchg
sub
push
xchg
push
pmulhuw
xor
sub
jl
inc
inc
mov
jge
or
ret
sub
loopne
cs
mov
dec
aad
repz
call
call
je
mov
mov
(bad)
inc
arpl
ins
cmp
sar
retf
mov
mov
mov
and
sti
mov
bound
rol
gs
mov
fdivr
and
adc
test
sbb
jg
add
fcmovb
xor
cmp
out
rcr
sub
inc
dec
out
aas
mov
shl
out
dec
shl
ret
adc
test
daa
mov
dec
inc
and
mov
jp
std
cld
(bad)
push
or
fist
xor
sub
inc
dec
inc
mov
xchg
popf
loope
xchg
out
ret
xchg
push
sbb
inc
iret
push
xchg
mov
sahf
sbb
sub
pop
in
mov
dec
movntps
pop
and
dec
inc
movs
ins
out
call
lock
test
inc
daa
leave
fsubr
xor
rcl
fsincos
inc
xchg
mov
lock
retf
fnsave
ret
scas
cmp
pop
loope
retf
sbb
or
sbb
sti
or
test
xor
ss
ins
and
cdq
fistp
sub
fld
mov
dec
cmc
fs
or
dec
cmp
add
mov
imul
mov
mov
mov
push
lods
inc
fcmove
pop
xlat
jecxz
jne
mov
push
inc
cmps
imul
inc
cmp
jmp
mov
inc
xor
imul
stc
retf
pop
ss
push
js
sub
inc
mov
xchg
test
in
xor
(bad)
sub
sub
jne
std
xor
pop
scas
sbb
cdq
int
cmp
add
push
sub
fsubr
je
std
push
add
pop
pop
xchg
mov
test
pop
inc
in
xor
(bad)
jno
mov
push
call
sbb
sbb
add
xchg
mov
paddsb
mov
popa
adc
xor
fnstenv
ja
std
movs
gs
cli
popf
addr16
(bad)
push
xchg
jb
mov
imul
gs
or
adc
rol
jg
leave
dec
jne
out
popf
fbld
in
ins
or
mov
fldcw
jns
dec
jmp
sub
mov
or
ja
cmp
xchg
pop
fstp
jno
dec
push
and
in
pop
idiv
pop
js
cmp
mov
ror
xchg
xor
jb
inc
in
jecxz
sbb
xchg
outs
add
adc
fwait
inc
clc
das
sbb
sbb
sub
mov
(bad)
jge
or
shr
and
mov
test
cmp
lds
iret
sub
cmp
add
jecxz
jno
xor
loopne
icebp
jns
jno
out
fsubr
sti
jnp
std
sbb
stos
mov
xlat
xchg
sub
pop
jge
dec
pop
addr16
xor
sbb
push
adc
mov
outs
mov
inc
retf
pop
movs
add
dec
mov
das
jae
stc
mov
dec
push
lods
inc
sbb
pusha
mov
ja
xor
xchg
or
pop
mov
sub
jmp
test
ret
or
lds
adc
in
push
and
or
sub
ret
in
adc
test
add
dec
frstpm(287
js
add
xor
pop
pop
sbb
dec
fwait
call
test
test
scas
mov
cmc
mov
cmp
xchg
push
mov
add
push
data16
inc
lahf
(bad)
cli
je
test
fistp
pop
movs
xchg
xchg
push
jmp
sbb
lds
lock
xor
sbb
dec
inc
int
push
aad
xchg
fsubr
movs
(bad)
xchg
shl
mov
outs
ins
out
jb
xor
mov
add
int3
mov
adc
cmp
in
inc
in
add
xchg
inc
cmps
sbb
and
jo
je
cmp
push
jb
rcr
or
into
test
outs
and
ins
icebp
adc
enter
or
lea
and
inc
xor
adc
scas
dec
xor
mov
aas
dec
xor
jnp
pminsw
div
inc
cmp
ds
pop
fild
adc
jp
pushf
dec
pop
sbb
xchg
lahf
dec
xor
inc
jecxz
dec
loopne
je
jae
cmps
inc
add
int
js
mov
stc
add
in
jnp
iret
sub
add
xchg
cld
fiadd
mov
and
and
cmp
mov
jg
sbb
push
xor
lock
xor
out
fistp
cli
jmp
loop
inc
jl
leave
mov
retf
xchg
jb
rcl
xor
hlt
ret
rol
fnsave
add
adc
cld
pop
jmp
jecxz
add
int3
gs
xor
jno
xor
mov
mov
imul
cmp
js
mov
jno
sbb
xchg
dec
jb
aad
pop
sub
sar
add
clc
push
push
adc
cmc
jp
adc
(bad)
lock
fucom
push
or
xor
ins
jae
retf
adc
sbb
xor
xor
mov
lds
mov
jg
fstp
or
pushf
xor
xchg
dec
cs
mov
popa
cmps
cmp
icebp
fisubr
mov
outs
mov
push
add
jl
sbb
pop
and
shl
mov
dec
enter
loope
adc
adc
test
dec
and
cdq
js
arpl
cli
jns
div
aaa
adc
daa
jo
adc
mov
in
adc
das
(bad)
fsub
lods
push
inc
xchg
jb
ss
out
or
dec
sahf
mov
icebp
dec
mov
inc
stc
(bad)
or
mov
scas
mov
jge
ret
div
jle
mov
push
out
mov
cpuid
push
dec
outs
(bad)
or
movs
dec
jmp
pop
pushf
pop
call
(bad)
pmaxub
test
das
mov
rol
in
sub
rol
mov
test
in
into
xor
ret
sbb
xor
loopne
fbstp
mov
test
es
mov
push
add
dec
and
sub
pop
mov
mov
push
jno
xor
nop
sub
sahf
mov
(bad)
dec
lea
lods
pop
adc
ins
cmp
imul
in
sub
mov
retf
or
retf
and
cli
adc
stc
ret
outs
fst
dec
call
rcr
xor
pop
push
xlat
pop
and
adc
lods
call
sahf
ret
adc
int
nop
cmp
jge
and
push
sub
retf
and
jmp
xor
aaa
sahf
ja
sub
test
xor
mov
push
sub
shl
mov
cmps
inc
mov
or
retf
pushf
in
dec
pop
add
push
imul
pop
and
iret
push
in
enter
xor
xchg
xor
add
mov
jecxz
mov
jmp
mov
mov
sti
in
jmp
or
jo
xor
aam
imul
inc
pop
push
xor
push
xchg
sub
mov
nop
xor
sbb
int3
inc
imul
push
(bad)
inc
cvttps2pi
cwde
inc
cli
fadd
imul
dec
les
mov
fdiv
mov
adc
sbb
add
cmps
or
repnz
dec
xchg
fdivr
xor
call
daa
push
pop
mov
stos
ret
jmp
mov
cs
fsub
push
xor
es
mul
out
ret
out
push
enter
mov
pop
push
mov
cwde
imul
push
xchg
icebp
loop
and
ja
out
jp
data16
add
dec
adc
mov
cmp
mov
mov
xor
test
pop
jne
imul
mov
cmps
pusha
push
outs
cmp
pushfw
movs
xlat
push
mov
(bad)
cmp
ds
jo
dec
adc
mov
adc
sub
enter
pusha
mov
xchg
fdiv
fcomi
dec
fimul
mov
repnz
enter
dec
bound
pushf
hlt
stos
mov
cmps
popf
(bad)
pop
sub
fs
jne
retf
push
jns
gs
or
pop
pusha
pop
pop
cmp
pop
sbb
pop
adc
loop
sbb
int
cmp
mov
mov
hlt
pushf
(bad)
push
inc
push
sbb
xchg
inc
(bad)
lds
xor
test
mov
int3
int3
jns
sub
cmp
fsub
(bad)
adc
mov
leave
fucomip
ret
and
into
dec
imul
xchg
pusha
or
imul
les
xchg
(bad)
div
mov
inc
xor
test
fisubr
int3
or
fdiv
adc
cdq
inc
(bad)
xor
push
mov
out
xor
xchg
mov
pop
pop
fist
inc
aaa
mov
xor
es
aaa
jp
outs
ins
call
shl
inc
fimul
movs
arpl
ret
jns
lahf
mov
pavgw
or
cmp
loop
cli
add
pop
adc
push
mov
pop
dec
jbe
test
aaa
push
jno
div
ins
mov
adc
push
mov
sbb
out
sbb
dec
fbld
sub
int
daa
xor
jno
sub
nop
push
jmp
jecxz
stos
mov
fist
pop
sti
push
cdq
gs
inc
inc
push
push
shl
sub
ja
test
neg
adc
(bad)
jae
loop
pop
dec
out
or
sbb
lgdtd
retf
add
pushf
dec
and
sub
outs
es
popa
stos
mov
cmps
mov
out
sub
xlat
sub
pop
pop
jl
mov
fdiv
pop
xchg
push
jno
sbb
jg
aam
loopne
icebp
cmp
les
shl
mov
test
xchg
cmc
mov
aam
mov
repz
(bad)
fstp
or
jno
in
sub
pop
test
add
pop
sbb
fdivr
pop
fidiv
popf
xchg
xor
pop
mov
push
dec
push
outs
xchg
jle
jnp
test
scas
push
adc
add
inc
pop
mov
in
dec
aaa
lods
scas
gs
sub
jmp
into
clc
inc
dec
mov
dec
mov
loopne
cli
cmp
ds
mov
stos
mov
xor
mov
mov
sub
inc
call
xor
fisubr
mov
fbld
enter
shl
lods
adc
js
or
popf
fist
dec
and
and
daa
bound
jo
jmp
dec
sbb
mov
aam
sti
(bad)
pushf
xor
adc
push
cmp
add
cld
icebp
in
cmp
jp
xor
cmp
mov
(bad)
or
into
add
adc
inc
dec
cmps
mov
xchg
cmc
jmp
push
push
push
and
stc
adc
rol
test
push
movs
mov
mov
mov
outs
test
add
pop
jg
xchg
out
mov
popf
mov
dec
inc
sub
and
fbld
fadd
push
jle
mov
mov
cmp
(bad)
dec
jle
mov
cdq
lock
pop
or
ss
jmp
pop
imul
mov
daa
rcl
fwait
mov
rcr
gs
cmp
or
mov
ja
add
or
mov
fs
mov
xchg
xor
bnd
sub
repz
jnp
test
sbb
and
sar
inc
add
inc
xchg
leave
je
in
bound
addr16
mov
xor
or
xchg
pop
fs
pop
cmp
repz
loop
sbb
lea
push
js
cmps
jne
in
outs
ffree
sbb
mov
push
movs
shl
enter
popa
pop
sbb
fs
and
aam
cmp
ror
ret
jge
call
add
or
fnstenv
rol
leave
aam
pusha
aam
je
inc
lods
std
imul
add
mov
sahf
cmps
cmps
pop
not
and
sub
sbb
adc
sbb
mov
cmps
sti
test
cmc
cli
or
cmc
mov
xchg
ins
xor
or
pop
fistp
jp
sahf
dec
and
jle
repz
adc
mov
jnp
cli
jnp
xor
mov
adc
dec
adc
lods
push
cmp
in
setno
mov
mov
pop
out
jno
daa
in
sar
(bad)
shl
dec
imul
std
jo
in
sub
lea
iret
enter
add
cli
pop
retf
mov
jge
fst
and
stc
mov
add
and
adc
or
dec
vpsadbw
clc
popa
and
fsub
mov
je
arpl
xor
adc
ret
mov
dec
cwde
clc
test
rcr
shr
adc
cmc
sbb
loopne
ja
inc
int3
xchg
sbb
scas
mov
std
aad
je
outs
mov
cld
pop
rcl
aam
dec
mov
rol
cmp
scas
push
stc
imul
mov
cdq
lods
and
mov
test
adc
xor
mov
pop
and
mov
int3
mov
nop
or
and
ds
pop
cmps
mov
push
in
push
inc
pop
outs
cmps
jns
add
mov
inc
repnz
jmp
mov
jp
lock
stos
lock
popf
arpl
mov
shr
bound
inc
arpl
pusha
cmp
arpl
aas
ja
icebp
sbb
paddd
xchg
mov
mov
imul
add
iret
fst
dec
fcom
add
fild
xlat
(bad)
inc
in
sbb
nop
and
cmp
test
add
outs
mov
cwde
ins
inc
hlt
cld
mov
sbb
push
xchg
fwait
cdq
mov
test
inc
adc
(bad)
jne
cmp
adc
popf
(bad)
adc
out
mov
ja
adc
hlt
les
in
dec
outs
pop
cmp
jmp
ficom
sbb
in
adc
add
xor
(bad)
out
std
dec
shl
and
imul
pop
aad
mov
cli
cli
mov
mov
add
rcl
outs
dec
push
jnp
movs
std
dec
(bad)
repnz
pop
out
jle
mov
and
aad
addr16
and
stos
icebp
hlt
inc
loopne
popa
mov
out
adc
pop
cwde
sub
lahf
cmp
rcr
inc
punpckhbw
push
movs
fwait
rcr
jbe
scas
loopne
clc
jo
(bad)
call
fnstsw
cdq
ret
pop
ja
sahf
call
fisub
mov
add
mov
add
jnp
stc
push
je
inc
(bad)
shl
dec
mov
sub
mov
pop
sbb
xchg
mov
and
sahf
push
hlt
cwde
aas
lds
popf
pop
sub
push
test
mov
or
mov
xchg
sub
or
idiv
xchg
xchg
inc
scas
aam
jle
adc
jge
mov
test
pushf
mov
xchg
jge
rcl
jmp
cmp
mov
(bad)
sti
stos
jge
sahf
or
test
pop
bound
jle
test
lds
int
enter
adc
push
pop
sub
mov
mov
arpl
and
mov
ja
(bad)
jns
(bad)
cmps
lock
dec
and
(bad)
mov
lods
pop
popf
mov
pop
mov
int3
and
cmp
mov
mov
pop
xor
iret
outs
add
cli
push
jb
xchg
lods
call
push
pop
mov
adc
fcomp
fdiv
dec
mov
push
outs
xor
xor
jmp
sbb
ja
loopne
sbb
in
test
mov
popf
push
jl
xchg
sbb
sub
push
aad
mov
sub
inc
cmps
cwde
adc
jo
jecxz
test
fldcw
mov
adc
aam
push
imul
or
repz
fld
loopne
not
pop
add
mov
and
(bad)
mov
adc
data16
jl
mov
or
mov
mov
mov
std
pop
sbb
or
pop
cmc
push
ins
cmp
test
nop
adc
addr16
jg
aas
aad
(bad)
std
mov
push
and
stos
cmp
dec
icebp
into
jge
inc
fwait
pop
jnp
(bad)
mov
lds
xchg
or
pop
fld
test
in
ins
imul
push
(bad)
cld
inc
and
xchg
je
mov
add
dec
push
dec
cld
repz
xchg
jl
clc
add
cmp
jo
sbb
shr
add
mov
test
inc
lahf
fisttp
cld
inc
jnp
sti
jnp
jo
push
adc
mov
mov
loop
jns
daa
jo
cbw
or
mov
dec
inc
xchg
cdq
stos
neg
mov
fimul
xor
jecxz
sub
lods
mov
aam
or
fistp
js
loop
data16
xchg
mov
sbb
pop
push
aad
jae
sbb
shl
neg
in
cmc
(bad)
xchg
xor
dec
ds
retf
movs
inc
loope
enter
fisub
stos
xchg
jl
add
adc
les
stos
add
jecxz
mov
xor
mov
out
call
mov
into
int3
push
xchg
jns
xchg
sub
cmp
jbe
fdivr
nop
cmps
mov
mov
mov
gs
mov
add
out
adc
rcr
pop
push
popa
icebp
js
mov
pop
mov
int3
sub
or
ja
in
adc
sub
sub
jb
pop
arpl
repnz
pop
cli
not
fiadd
shl
mov
mov
or
jge
pop
adc
imul
push
aad
mov
jge
jp
bound
mov
jmp
or
add
shl
mov
jnp
jo
into
aad
lock
call
pop
lods
jmp
(bad)
inc
dec
imul
pushf
sahf
inc
outs
lea
(bad)
stos
xchg
icebp
push
inc
(bad)
loop
scas
ror
pop
aas
leave
pop
(bad)
mov
call
mov
mov
fst
mov
aas
adc
adc
call
mov
out
neg
adc
ret
aaa
jae
mov
ror
fs
xchg
cmp
and
test
pushf
adc
and
cmp
mov
mov
out
sub
cwde
push
(bad)
int3
jno
outs
and
sub
mov
xchg
pop
jmp
add
mov
mov
push
push
mov
pop
pop
pop
sub
nop
adc
leave
push
iret
fisubr
neg
in
inc
add
add
mov
hlt
aam
lea
test
in
xor
test
jne
mov
dec
add
dec
arpl
jg
movs
outs
in
jge
call
push
push
and
mov
push
dec
sub
call
sbb
repnz
add
leave
data16
pushf
in
pop
cmp
push
inc
or
and
jp
sub
push
ins
dec
out
data16
cdq
ficomp
lock
shl
mov
(bad)
jmp
sbb
push
pop
jo
setb
mov
loopne
repz
pushf
fldcw
sub
clc
mov
cmps
ds
sbb
popa
bsr
outs
popa
xor
test
xor
int3
gs
sub
sub
out
imul
fs
cmp
aad
push
aad
push
xchg
add
adc
or
lock
dec
fnstsw
jo
je
mov
icebp
loope
mov
add
jo
imul
pop
cmps
xlat
add
xlat
dec
addr16
dec
clc
sar
inc
push
test
mov
jmp
test
jmp
fsub
pop
js
inc
jmp
stos
imul
icebp
in
xchg
adc
icebp
jno
mov
push
sbb
hlt
sbb
pop
sub
shl
sbb
mov
mov
pop
repz
movsx
les
stos
jns
push
push
pop
enter
xor
int
hlt
sbb
push
test
jo
or
ins
adc
push
and
mul
lock
(bad)
inc
jge
xor
or
setge
stos
cmp
shl
popf
dec
jbe
(bad)
push
pop
mov
aaa
popf
cmps
or
or
or
sbb
retf
jns
push
xor
(bad)
cmp
movs
sbb
xchg
adc
pop
jge
or
std
sbb
sbb
rcr
mov
mov
retf
aas
in
jmp
clc
pop
or
sbb
and
push
out
mov
ins
inc
or
add
test
retf
mov
inc
fisttp
jp
test
and
fdivr
xchg
in
adc
pop
add
ins
push
out
ret
mov
daa
in
or
ror
sbb
push
inc
xlat
(bad)
mov
outs
jmp
loope
dec
(bad)
outs
inc
outs
shl
leave
ret
(bad)
mov
inc
jbe
cmps
xchg
add
mov
fsqrt
mov
nop
dec
das
mov
dec
dec
imul
je
cwde
loop
clc
fs
xchg
cmp
jbe
mov
inc
adc
out
push
loop
cmp
xor
add
jb
mov
pop
jle
sti
jae
je
cmp
rol
and
sub
push
lods
fild
jl
stos
and
mov
cs
cli
pop
icebp
or
push
or
pop
jg
jmp
jnp
scas
mov
out
mov
pusha
xor
in
lods
sbb
xchg
inc
xchg
inc
jae
add
jl
aaa
sbb
and
xchg
movs
add
pop
out
add
pop
imul
inc
imul
cs
dec
push
sbb
or
xchg
movs
aas
sub
pushf
and
jge
jo
push
push
sar
mov
ret
dec
repz
aad
mov
sar
call
sub
jmp
mov
jmp
jbe
add
dec
adc
and
ja
mov
sub
cwde
jmp
jmp
lods
imul
or
xchg
adc
xchg
(bad)
pop
mov
das
xlat
loope
jp
sub
adc
movs
xchg
movs
inc
sbb
push
mov
cli
xchg
push
mov
xchg
lods
or
or
mov
push
icebp
and
cmc
or
pop
mov
ret
scas
mov
iret
mov
inc
xchg
(bad)
xor
sub
mov
pop
or
push
push
xchg
mov
jne
jg
pushf
push
mov
dec
mov
mov
pop
push
outs
jo
mov
daa
ins
ss
ins
jle
test
adc
mov
push
cli
add
scas
movs
popa
inc
adc
cmp
and
adc
mov
jmp
add
cmps
xor
ror
adc
vpshab
jmp
pop
cmp
lods
or
mov
adc
out
xor
cmps
clc
fstp
fcmovnu
mov
movs
nop
scas
repz
out
(bad)
enter
jo
cdq
and
cmps
push
data16
outs
mov
(bad)
push
test
ret
inc
mov
sti
out
cmp
addr16
pop
mov
xor
loopne
pop
and
outs
stos
stos
inc
in
test
mov
into
ror
pop
mov
aad
cwde
cdq
jge
mov
std
mov
mov
pop
pop
popa
push
pop
sub
mov
push
mov
xor
sub
pop
jmp
xchg
xchg
fwait
or
jns
cmc
fdiv
xor
cmc
cmp
xchg
dec
cdq
lock
xchg
loope
mov
xlat
sbb
nop
xor
icebp
adc
cmp
ss
jo
inc
sar
xchg
inc
mov
mov
ds
mov
inc
or
mov
(bad)
loope
ins
shl
fcomp
ja
xlat
adc
pop
imul
cdq
and
inc
mov
ror
xor
stos
in
pop
(bad)
cmp
int
jle
std
mov
test
push
cdq
cmp
sub
sar
xchg
adc
push
sub
xchg
fxch
addr16
push
in
dec
sbb
in
lds
push
sbb
sbb
sub
mov
and
xor
stc
sub
cmp
push
pop
gs
add
adc
stos
in
mov
cwde
mov
mov
(bad)
cmp
sbb
inc
test
cmps
dec
iret
add
xchg
rcl
mov
outs
stos
das
lock
xor
pop
jl
mov
popa
loope
push
out
push
ins
dec
in
add
movs
das
push
iret
xchg
addr16
lea
mov
(bad)
fadd
mov
(bad)
jmp
xchg
xor
inc
pushf
cmp
and
mov
mov
sub
inc
js
pop
in
xor
mov
xchg
addr16
mov
imul
inc
sahf
fldcw
sahf
int
popf
data16
cmp
cmp
jns
and
inc
ja
add
out
cmc
xchg
in
mov
fidiv
outs
cmp
(bad)
jns
jmp
cld
pop
pop
push
dec
push
pop
pop
hlt
(bad)
jnp
pushf
mov
std
adc
sub
data16
enter
fidivr
add
lea
ins
cmc
jb
push
jmp
mov
lahf
fstp
adc
inc
inc
inc
jbe
push
(bad)
pop
xor
xchg
or
mov
jmp
jmp
repz
or
jo
pop
ret
xor
pop
pusha
mov
loop
xor
rcr
sub
popa
mov
fldenv
xlat
push
mov
inc
mov
add
mov
adc
lock
std
dec
push
sbb
xor
call
mov
mov
movs
fist
sub
sbb
data16
es
pop
fisttp
mov
pop
jns
cmc
or
cmp
xor
les
push
arpl
xor
addr16
adc
aam
sub
(bad)
out
xor
and
sbb
ins
dec
scas
xchg
xor
jle
jecxz
ins
fst
retf
(bad)
movs
pop
sub
ins
adc
push
jle
dec
push
adc
pop
pusha
jb
xor
cmp
test
pop
push
jmp
clc
dec
xor
mov
jb
addr16
pop
daa
repz
xchg
fld
call
arpl
call
dec
pop
mov
sub
and
hlt
pop
ss
(bad)
dec
mov
je
inc
push
pop
enter
fdiv
sar
push
in
rol
lock
fmulp
bound
jge
push
idiv
je
inc
test
sbb
out
sbb
mul
arpl
jge
pop
nop
pop
sub
jne
clc
inc
xor
xlat
test
inc
scas
ret
and
jg
bound
or
aaa
jae
or
xchg
cli
call
std
adc
call
sbb
dec
dec
jmp
jnp
sbb
pop
es
xor
sub
into
pop
jg
mov
sub
mov
cmp
les
iret
stos
std
sub
push
popf
xchg
push
dec
mov
call
mov
sub
dec
stc
sub
mov
cmps
inc
(bad)
pushf
and
sub
mov
adc
push
sbb
xor
inc
dec
push
or
push
sahf
dec
push
mov
retf
ret
add
xchg
dec
xchg
add
test
push
outs
out
xchg
add
sti
add
mov
xor
jp
adc
aaa
xor
add
inc
inc
arpl
std
popf
cmps
scas
daa
retf
mov
or
(bad)
je
adc
mov
mov
mov
xchg
out
outs
mov
cmps
(bad)
push
fadd
or
dec
push
mov
dec
lea
icebp
popf
repnz
mov
pop
fnstsw
cli
(bad)
daa
inc
and
push
std
pop
inc
push
test
push
retf
xchg
inc
ja
(bad)
test
fisub
cmps
cmp
in
sub
in
les
add
retf
ins
nop
lods
lods
xlat
xor
nop
push
setp
jae
or
loope
not
dec
jge
pop
call
mov
jns
inc
ss
jge
add
je
cdq
cmp
leave
stos
neg
in
aas
lea
sar
jae
push
mov
mov
int
jns
xor
push
cld
nop
cmp
data16
loopne
int
movs
inc
mov
ins
ins
js
repz
or
sub
mov
sbb
mov
cmp
(bad)
mov
cmc
aad
ss
push
ds
call
mov
dec
aas
sub
jmp
lea
sub
lods
inc
in
test
mov
mov
pushf
je
inc
daa
es
rol
mov
pop
js
scas
ret
aam
cmps
adc
dec
mov
inc
add
loopne
cdq
iret
mov
test
sbb
and
push
cmp
mov
std
or
shl
xor
nop
aam
mov
or
mov
ja
cmp
adc
pop
hlt
pop
leave
hlt
xor
inc
and
cmp
dec
enter
into
xor
adc
mov
(bad)
popf
cmp
jae
sub
out
add
mov
jo
jmp
mov
iret
lahf
dec
es
adc
and
push
sbb
ficom
cli
xor
repnz
pop
jns
arpl
mov
and
stos
mov
mov
fnstenv
fsubrp
sahf
add
in
cdq
iret
push
popa
js
add
retf
in
mov
adc
and
push
jnp
stos
ja
push
ss
pop
and
jb
(bad)
data16
stc
xor
in
push
and
push
cmp
jge
mov
pop
mov
mov
adc
cmp
xor
add
sub
adc
mov
xor
int3
push
sar
jle
adc
test
jl
ins
std
sbb
lea
pusha
je
adc
mov
inc
imul
sahf
lods
sbb
cmps
xor
ror
cmps
sbb
inc
push
imul
outs
scas
(bad)
sti
pop
aaa
scas
lock
pop
js
jl
add
push
add
cli
fsubr
sub
mov
dec
sub
add
leave
and
call
push
jmp
daa
mov
hlt
fisubr
pop
into
outs
xor
pop
mov
jp
jb
sbb
jno
in
ret
retf
jecxz
pop
add
fisttp
push
(bad)
aad
aaa
mov
push
adc
dec
jbe
aad
pop
xor
jl
pushf
retf
or
outs
out
scas
imul
mov
sbb
int
pop
dec
pop
les
outs
jle
out
xchg
jp
push
push
ret
add
scas
retf
push
and
xor
fistp
or
in
in
jg
pop
aam
pop
or
mov
adc
cmps
pop
push
push
sbb
cmps
test
mov
loope
push
adc
mov
inc
outs
sti
es
clc
ret
popf
fs
stos
pop
arpl
jle
jmp
neg
fsubr
mov
dec
jo
jl
add
js
adc
test
jmp
inc
mov
xor
sbb
ret
mov
pop
mov
sahf
sbb
jge
jb
xor
mov
fwait
test
xchg
push
or
(bad)
pop
test
mov
or
xadd
adc
sbb
fwait
jmp
add
test
adc
out
mov
mov
xchg
adc
icebp
xchg
jmp
push
mov
jmp
sub
cmp
(bad)
jo
mov
fdivr
std
jnp
mov
sub
lods
shl
(bad)
xchg
sbb
ins
fdivr
add
pop
mov
push
test
int
inc
test
mov
mov
or
push
pop
cdq
push
xor
jbe
xor
and
sub
icebp
and
inc
in
cmp
xchg
xchg
xchg
imul
and
cmp
and
xchg
out
and
dec
mov
or
movs
iret
sbb
pop
lahf
data16
mov
add
sub
jb
inc
xchg
movs
adc
mov
bnd
lahf
ror
push
add
mov
movs
dec
in
inc
push
ss
hlt
sar
jns
icebp
xchg
mov
out
mov
push
push
jecxz
cmp
out
pushf
mov
dec
dec
and
sbb
and
movs
pusha
sbb
push
push
retf
ins
js
sbb
mov
repnz
stc
add
pop
adc
arpl
xor
arpl
outs
hlt
ja
jl
xchg
sbb
pop
aad
mov
xor
mov
push
sub
sub
jmp
cwde
pusha
sbb
sahf
mov
xchg
bound
retf
mov
jnp
sub
pop
add
jbe
mov
dec
and
shr
sbb
leave
mov
popf
sub
and
add
inc
addr16
stos
push
jno
or
ja
int
jno
(bad)
in
push
pop
cmp
cdq
push
push
sar
mov
sub
outs
cs
bound
repnz
inc
mov
mov
pop
inc
adc
cs
or
(bad)
sub
in
inc
setno
xor
cmps
ret
into
mov
iret
mov
sbb
mov
sbb
imul
mov
jge
xchg
jp
adc
mov
xor
push
lods
dec
xchg
ret
add
repz
frstor
fidiv
mov
push
push
pop
mov
movs
neg
(bad)
out
mov
lahf
cmps
jle
dec
mov
adc
shl
(bad)
stos
mov
pop
out
leave
lahf
shl
jg
pop
les
dec
lea
popa
sbb
fucomi
bound
(bad)
cs
out
push
pusha
push
sbb
cmp
data16
retf
jmp
adc
aaa
or
and
das
lds
dec
imul
add
dec
mov
fwait
cmc
neg
scas
icebp
xor
cwde
xor
and
popa
dec
push
jmp
cmp
and
and
ret
pop
jg
rol
inc
test
(bad)
jne
mov
sub
icebp
fwait
jle
std
pop
mov
repz
sbb
xor
and
addr16
daa
cwde
mov
lods
lahf
push
fld
loop
inc
in
dec
(bad)
mov
mov
add
pushf
call
dec
jecxz
int3
push
xor
mov
mov
add
inc
(bad)
cli
popa
jne
pushf
or
popf
test
jo
pop
push
or
and
sar
mov
out
scas
mov
je
push
shr
cmp
sub
dec
ficom
call
add
loop
lea
push
ja
js
cmps
mov
xlat
(bad)
aam
push
js
cmp
cs
loop
int
mov
fs
push
xchg
cmps
repz
jle
sti
call
(bad)
add
daa
mov
nop
ror
stos
dec
mov
sbb
inc
retf
cld
push
push
test
cs
or
retf
dec
test
test
sub
fdivr
mov
jmp
jo
cwde
out
inc
mov
stos
test
mov
inc
add
xchg
fnstenv
mov
(bad)
inc
or
arpl
inc
scas
sbb
cmps
fnop
inc
outs
icebp
jle
(bad)
icebp
pop
in
out
mov
arpl
push
push
mov
ret
nop
out
cmc
mov
ret
cmp
adc
sbb
retf
movs
cmps
sbb
lds
adc
xchg
pop
shl
cs
sbb
scas
imul
daa
fstp
lods
ins
int
outs
clc
mov
scas
je
aad
loope
lea
icebp
xor
jno
jo
or
aas
ror
lock
add
sub
pop
mov
push
fucom
bound
jl
hlt
push
cdq
xchg
repz
scas
lea
mov
xchg
stos
cmp
xlat
fild
push
pop
sbb
fstp
popa
(bad)
into
ja
pop
lds
and
add
(bad)
cwde
loop
lods
movs
xchg
xchg
push
push
dec
xchg
lds
ins
mov
lods
sbb
xchg
mov
ss
xor
mov
xor
sbb
sub
push
xchg
sub
jnp
and
adc
or
xchg
dec
xchg
or
sub
nop
repz
or
movs
adc
fisub
push
test
jecxz
dec
mov
int3
shl
movs
mov
mov
outs
xchg
shr
pop
inc
dec
mov
sub
dec
pop
std
loopne
jg
dec
outs
push
and
addr16
int3
dec
fs
mov
rol
jle
push
xor
vsqrtss
sub
sar
ror
xchg
sub
adc
add
js
sbb
fsubr
mov
iret
jne
push
inc
cmps
sub
adc
sbb
out
stos
out
retf
ss
mov
xchg
sti
inc
push
mov
sub
and
enter
(bad)
sub
mov
mov
fiadd
xchg
movs
add
xlat
jne
das
push
mov
aaa
jge
cmps
fdivr
(bad)
dec
inc
mov
out
les
jecxz
and
xchg
mov
enter
scas
in
enter
add
jp
mov
add
jno
jb
xchg
hlt
sub
mov
ss
lea
repnz
add
stos
fdiv
gs
jmp
xchg
mov
lds
in
pop
scas
jge
push
lock
cmp
cmc
adc
sbb
xor
mov
(bad)
ins
icebp
fisttp
call
ja
inc
add
in
push
mov
cmp
dec
adc
cmp
jecxz
push
stos
and
cmp
daa
aad
mov
and
push
js
test
cmc
adc
rol
ret
imul
mov
sub
stos
sti
add
jp
pop
shl
mov
or
mov
add
ficomp
mov
jmp
movs
jo
adc
lock
cs
call
std
push
dec
sub
xor
ins
mov
and
sub
scas
or
inc
or
movs
jnp
rcr
mov
mov
repz
jl
or
adc
add
ja
outs
cwde
pop
aad
scas
xchg
push
ds
sti
dec
pop
inc
gs
cwde
jmp
in
xor
cmp
fiadd
lods
push
addr16
xor
sub
ja
mov
bound
jae
mov
mov
test
sti
arpl
jmp
mov
gs
cwde
add
pop
mov
outs
mov
xchg
xchg
out
jle
or
das
add
inc
std
les
(bad)
rcl
and
mov
pop
mov
cmps
and
outs
add
mov
add
xchg
out
mov
pushf
int
clc
lea
inc
sub
repnz
stc
loope
xchg
out
and
shl
int3
mov
div
ins
(bad)
scas
imul
dec
mov
icebp
mov
sbb
movs
jns
dec
fistp
mov
xor
sub
mov
push
enter
push
push
jmp
stos
jnp
sbb
pop
mov
(bad)
xchg
lock
and
jmp
in
pop
jge
sbb
xor
iret
outs
xor
push
ret
popa
ret
push
cmps
sti
cmp
into
dec
out
std
cmp
push
test
jae
add
pop
adc
cld
mov
shr
and
sbb
into
enter
(bad)
add
jp
in
idiv
adc
imul
dec
daa
ja
push
xchg
popf
xchg
xchg
scas
aam
jle
hlt
push
push
and
lods
test
ja
dec
int3
sbb
xchg
ret
cmp
adc
inc
inc
mov
lods
daa
xchg
push
pop
or
arpl
cmp
neg
out
mov
daa
inc
push
dec
aaa
call
fs
add
and
push
aas
xchg
jmp
dec
sbb
adc
sti
xchg
in
(bad)
ficom
mov
sub
mov
cdq
cmp
dec
icebp
adc
mov
jb
loopne
das
add
je
retf
add
pop
cmp
arpl
aad
cmp
xchg
cmp
mov
loope
xor
xor
push
mov
or
jp
neg
inc
xor
clc
and
mov
fisubr
mov
into
cmp
cmp
dec
cmps
mov
gs
push
push
fild
mov
push
jge
clc
sbb
fdivr
xor
cmp
mov
icebp
ds
daa
xor
or
cwde
inc
(bad)
jecxz
daa
pop
adc
sbb
adc
jne
sti
aad
fimul
imul
ins
inc
fist
fwait
cdq
xchg
retf
adc
sbb
push
xor
pop
dec
mov
push
test
sbb
loope
inc
and
push
aad
dec
popf
leave
or
cmc
pop
call
sbb
stos
adc
int
out
ds
or
add
into
cmp
inc
sbb
xor
lock
lahf
scas
sti
stos
cmp
ret
ja
sahf
ins
pop
jne
mov
push
out
movs
cdq
pop
dec
mov
and
pop
jae
movs
ds
or
jnp
cmp
scas
lahf
cmp
fwait
(bad)
mov
add
punpckhwd
mov
dec
inc
add
int
call
cdq
xchg
sahf
and
ds
pop
jle
lock
sub
push
ds
jp
out
cmp
xchg
loop
add
adc
cmp
push
adc
inc
test
mov
outs
add
jo
xor
xchg
jge
ja
lahf
push
jns
test
pop
xchg
xchg
pop
xor
xchg
pushf
push
cs
lds
or
leave
loopne
daa
sbb
mov
or
pop
add
test
adc
xor
push
xchg
and
cli
(bad)
fsub
add
push
fdivr
pop
mov
cmp
in
sbb
lods
cmp
xchg
int3
add
(bad)
or
(bad)
fwait
je
push
int3
frstor
ja
in
call
pushf
outs
push
daa
mov
and
scas
or
jo
mov
and
push
cmps
or
add
pop
mov
jmp
cmc
xor
in
int
sub
sbb
push
fwait
das
xchg
xchg
adc
pop
cli
mov
and
pop
adc
sub
sbb
hlt
das
and
jecxz
imul
mov
fnsave
rcr
popa
inc
inc
jmp
iret
push
and
hlt
sub
mov
scas
out
hlt
leave
inc
scas
and
stc
mov
stc
mov
xchg
mov
inc
imul
sar
jno
test
jb
push
push
stc
xchg
mov
inc
mov
sub
mov
repnz
sbb
popa
dec
lock
fst
out
pop
and
lods
scas
ret
sbb
jae
xor
ins
jne
inc
xchg
scas
bound
idiv
pop
test
fwait
push
jbe
inc
jnp
pop
dec
(bad)
jo
pop
pop
sbb
jmp
mov
dec
sub
call
mov
mov
or
inc
lock
sub
stc
(bad)
outs
leave
ret
std
jne
loop
bound
out
cli
cmp
fst
or
ja
neg
repz
cmp
minps
addr16
mov
scas
bound
aam
xchg
jne
pop
mov
xchg
adc
dec
push
jb
pusha
xchg
test
jne
std
not
leave
test
cmps
je
mov
push
xlat
add
dec
outs
and
das
pop
ret
add
shr
scas
push
push
pop
adc
jl
cmp
movs
mov
fcomp
jmp
fwait
push
push
rcr
xchg
ror
xchg
aas
in
xor
inc
pop
rcl
mov
push
inc
test
push
adc
fbld
xor
xlat
xchg
mov
es
mov
(bad)
cmp
cmps
shl
push
mov
cmps
mov
or
and
test
(bad)
add
repnz
in
or
(bad)
and
test
xlat
aad
inc
mov
int3
jbe
dec
mov
adc
mov
adc
iret
fadd
inc
sub
adc
mov
test
mov
sub
push
mov
xchg
push
(bad)
clc
push
cmps
mov
xchg
cmp
sub
pop
imul
mov
cmp
jae
js
mov
aaa
lds
mov
pop
lds
imul
dec
(bad)
cld
mov
jle
sub
arpl
inc
pusha
jne
pop
xor
stos
sub
jl
push
mov
sub
dec
xor
and
or
mov
out
xchg
cmps
pop
and
pop
test
ffreep
in
xchg
outs
xchg
and
inc
mov
call
jecxz
inc
push
leave
add
inc
dec
jmp
sbb
xlat
or
and
bound
mov
pop
xchg
dec
push
dec
cli
and
add
shr
jae
mov
out
pop
aaa
repnz
cdq
enter
scas
mov
push
mov
and
pop
fwait
imul
pusha
or
cmp
mov
jle
pushf
movs
mov
nop
pop
je
fstp
jmp
retf
xor
rcl
and
imul
and
pop
loope
xchg
call
daa
cli
pop
sub
cmp
pop
sub
inc
sbb
pop
lea
pop
or
es
sub
and
inc
stos
test
stos
fistp
or
or
js
in
(bad)
pop
les
adc
xchg
or
outs
mov
mov
icebp
sbb
fisttp
outs
mov
ds
(bad)
pop
aas
adc
or
cmc
mov
pop
jo
jae
xchg
pop
jo
and
sbb
sbb
and
mov
xor
push
test
xchg
jg
fisubr
imul
xor
push
dec
sbb
xor
mov
xchg
lahf
shr
jg
out
stc
or
push
cmps
inc
sub
mov
cmp
cs
daa
in
sub
inc
jnp
mov
int3
push
inc
xchg
cmp
pop
mov
adc
adc
mov
push
xor
lods
popf
mov
shl
iret
or
mov
sbb
lea
jle
pop
jnp
mov
mov
ficomp
sub
out
fldcw
in
imul
jle
push
cmp
test
jmp
sbb
inc
fild
adc
aam
pop
cmp
jmp
adc
outs
fmulp
call
or
xor
xchg
pop
leave
push
add
fwait
dec
aam
cmps
and
adc
gs
es
fnstsw
jmp
pop
xchg
(bad)
cli
into
scas
xchg
mov
and
ins
cs
mov
and
adc
movhps
xchg
mov
icebp
ins
rcr
out
xchg
aaa
cdq
icebp
fadd
lods
xchg
push
sbb
mov
xchg
jecxz
fwait
aas
mov
inc
outs
jmp
jg
xchg
mov
cmp
adc
adc
mov
ret
test
ds
and
sub
repz
jl
stos
and
pop
sti
push
jmp
jl
sbb
push
mul
jle
adc
aaa
les
fs
icebp
clc
ficom
sub
and
add
(bad)
jno
jno
ds
std
push
dec
adc
sub
push
or
cmp
mov
xchg
adc
adc
mov
(bad)
mov
sub
data16
mov
jp
shl
out
pop
fwait
jmp
cwde
loopne
addr16
mov
mov
sbb
cmps
cmp
mov
(bad)
jns
push
cli
or
js
mov
fmulp
mov
mov
push
push
add
mov
mov
inc
xor
push
nop
add
mov
add
mov
xor
sub
pop
pop
pop
lds
and
(bad)
sbb
xchg
push
fwait
lock
or
call
or
mov
jge
jmp
cwde
dec
push
test
xchg
popf
daa
xor
mov
ret
xchg
sub
dec
in
sub
cli
push
mov
cmp
push
imul
mov
imul
imul
jne
neg
xchg
aam
shr
mov
or
movs
sub
fs
pushf
int
das
(bad)
aas
mov
sahf
lods
out
js
adc
popa
jg
ret
imul
cld
push
lds
adc
(bad)
sub
outs
gs
mov
test
fwait
or
movs
or
adc
mov
imul
sub
jl
(bad)
mov
push
jb
xor
pop
xchg
mov
psllw
aam
add
adc
add
adc
js
xor
fs
gs
mov
leave
in
push
mov
push
cmp
std
ret
xchg
adc
cld
rol
sbb
fcom
mov
mov
push
aam
imul
int
inc
cmp
or
sub
xchg
mov
mov
pop
dec
pop
jle
ins
loop
loope
shl
jg
xchg
xchg
jne
or
mov
cdq
and
lea
push
xor
in
gs
xchg
movs
xchg
addr16
and
push
int3
repnz
stos
push
jle
mov
in
dec
fcmovnu
sub
mov
out
ins
inc
sbb
jmp
dec
hlt
adc
dec
dec
popf
stc
add
fimul
mov
repz
add
sbb
sub
daa
loope
add
mov
sbb
pushf
lock
gs
repz
inc
inc
rcl
dec
xor
lock
xchg
mov
leave
mov
push
imul
mov
cld
and
fiadd
pop
sbb
push
jmp
jp
mov
mov
mov
ins
jg
movs
add
pop
ss
mov
(bad)
in
jecxz
jp
rol
xor
pushf
in
or
mov
cmp
imul
fdivr
jl
cmp
cmps
or
out
cmp
test
push
sbb
in
pop
daa
(bad)
sub
arpl
imul
inc
arpl
jmp
and
scas
and
or
pop
add
stos
sbb
jne
sbb
movs
mov
and
enter
mov
js
pop
jo
outs
test
movs
pop
and
push
xchg
(bad)
mov
fwait
nop
cwde
(bad)
push
pop
cmp
ret
lock
xlat
scas
ja
fidivr
add
sbb
jmp
pop
mov
test
std
stos
cli
xor
xor
movs
cdq
dec
mov
xor
loopne
(bad)
sub
mov
sbb
jmp
inc
dec
dec
fcom
or
lock
hlt
fs
jns
xor
stos
and
sbb
and
mov
push
pop
scas
add
test
(bad)
call
ret
mov
stc
aas
xchg
loop
inc
aaa
mov
arpl
push
jp
pushf
sub
dec
shl
ror
mul
daa
test
inc
dec
enter
push
xor
and
dec
bound
push
test
xchg
mov
dec
mov
loop
icebp
and
in
aad
stos
push
retf
mov
pop
lea
rcl
(bad)
mov
or
push
adc
push
xlat
mov
loope
jae
movs
push
mov
lock
pop
xchg
rol
es
rcl
mov
pop
add
or
push
or
(bad)
mov
mov
jl
loopne
imul
mov
adc
dec
aas
xor
out
sub
xor
cmp
stos
dec
icebp
(bad)
add
cmp
scas
mov
mov
pop
push
xor
mov
push
call
xchg
xor
sub
rcr
retf
dec
adc
(bad)
mov
sbb
call
ret
adc
ins
mov
add
pop
sbb
in
mov
fwait
inc
scas
push
xor
push
inc
sbb
push
or
arpl
mov
call
retf
sbb
push
mov
adc
popa
fwait
cmp
movs
dec
push
stos
in
out
dec
ret
jbe
jl
push
mov
fcomp
ss
je
int
minps
test
call
lods
data16
arpl
mov
cmps
cmp
test
push
sti
push
mov
mov
(bad)
outs
movs
dec
pop
push
imul
xor
sbb
adc
clc
inc
add
fwait
scas
jmp
jne
inc
fisubr
add
push
les
(bad)
and
adc
jle
mov
enter
sahf
arpl
cmp
pushf
mov
mov
and
mov
pop
pop
dec
pop
cmp
clc
fnstcw
arpl
push
(bad)
jne
xlat
jl
mov
xchg
add
into
test
shl
mov
jp
into
lea
push
cmp
fistp
xchg
add
(bad)
xor
pop
jge
sub
sbb
xchg
jmp
(bad)
outs
and
mov
repz
out
imul
mov
cwde
fcomp
ds
sbb
(bad)
push
mov
pop
outs
mov
fld
xor
nop
clc
xchg
push
shr
std
retf
call
fld
inc
xchg
adc
retf
mov
jmp
dec
je
retf
cmp
(bad)
jg
je
scas
clc
inc
test
sar
jle
sub
add
mov
or
jmp
pop
cdq
xor
scas
push
(bad)
leave
sbb
fwait
pop
jecxz
and
pop
sub
cmp
cld
jae
mov
sbb
lods
dec
add
fwait
aad
jbe
xchg
dec
add
shl
neg
nop
push
xchg
inc
cmps
stos
or
sub
adc
cmc
inc
and
mov
push
push
sbb
cs
dec
bound
inc
jno
pop
retf
mov
es
gs
fdivp
in
sub
jp
repz
cmp
adc
test
sbb
neg
fwait
retf
cld
xor
nop
xchg
mul
mov
mov
fwait
sub
sbb
outs
jmp
stc
adc
test
call
jnp
push
cdq
jecxz
mov
sbb
jns
call
repnz
test
mov
(bad)
mov
ret
jge
jbe
test
mov
mov
(bad)
cmp
call
sbb
or
or
dec
dec
(bad)
jns
cmovs
js
dec
(bad)
(bad)
jl
push
into
push
jne
mov
retf
int
or
aas
add
mov
nop
push
lods
sbb
(bad)
mov
test
add
push
and
(bad)
arpl
dec
ret
xchg
mov
add
push
ss
add
lea
push
jmp
pop
fmul
jp
or
ins
out
pop
push
xor
rcr
pop
mov
leave
xor
mov
stos
xor
div
push
stc
xchg
outs
es
mov
add
sbb
jge
fsubr
and
fs
jbe
scas
(bad)
std
xchg
mov
popa
cmp
das
movups
sbb
int3
push
push
sub
dec
xchg
pop
loop
addr16
js
ins
jp
cmp
and
xchg
cld
rcr
push
adc
sub
pop
push
pop
inc
or
push
shl
jo
adc
pusha
(bad)
fnsave
inc
sub
sbb
out
mov
loop
ss
enter
movs
mov
gs
test
sbb
shr
xor
lahf
add
mov
mov
xchg
or
(bad)
add
in
hlt
je
mov
jge
loopne
mov
fsub
fimul
lds
addr16
jp
fisubr
int
pop
fild
adc
jns
pop
cmps
dec
mov
out
sti
add
and
sar
icebp
les
inc
inc
xor
jbe
popf
and
js
add
aam
push
fcom
push
pusha
les
mov
mov
fisubr
xchg
out
mov
movs
push
push
ins
scas
jno
dec
test
jle
xor
xchg
xor
js
jle
sahf
mov
addr16
call
int3
fcmovb
cmp
dec
sti
jae
clc
shl
sbb
sub
mov
jl
or
icebp
jb
je
bound
xchg
or
fisubr
push
mov
(bad)
fdivr
and
inc
shl
cmp
or
jno
jbe
pop
push
sub
adc
dec
ja
jmp
mov
xor
mov
movs
inc
mul
cmovl
aad
ins
add
int
out
dec
pop
pop
imul
sbb
xor
ins
xchg
ja
mov
push
push
sub
mov
push
das
push
add
lea
loop
push
add
or
xchg
push
jmp
pop
in
adc
push
stos
cmp
xchg
aad
sub
loope
int
and
icebp
jl
pmaxsw
outs
shr
or
in
and
jo
sbb
fistp
xchg
and
push
sbb
push
loopne
dec
dec
inc
dec
adc
sub
inc
push
xchg
push
mov
jecxz
cmc
jmp
test
inc
imul
test
mov
push
mov
mov
jle
in
ror
push
push
mov
icebp
sub
dec
adc
cmp
mov
popa
push
pop
add
cwde
cmps
inc
das
sub
jae
rol
dec
inc
jecxz
fs
sub
xchg
aas
inc
add
fdiv
inc
pop
adc
ds
jmp
fild
cdq
push
dec
fadd
add
ins
outs
out
add
mov
adc
and
test
sar
mov
addr16
xor
push
jno
ins
aas
popf
dec
shl
jecxz
and
mov
mov
sbb
sbb
fistp
sub
mov
jle
push
adc
xlat
bnd
(bad)
lods
cmp
push
mov
in
and
popa
mov
jl
gs
jle
int3
icebp
out
sbb
pop
inc
jp
mov
bound
mov
je
xchg
mov
shl
lahf
call
cmp
mov
cmc
dec
jbe
out
jmp
cdq
dec
inc
cmp
dec
out
adc
jnp
push
mov
jbe
adc
adc
imul
stos
cmps
mov
add
in
and
imul
mov
imul
inc
mov
inc
add
sahf
leave
popa
test
popf
pop
pop
(bad)
jns
test
add
mov
push
mov
xchg
movntps
(bad)
leave
jb
adc
(bad)
sar
sbb
arpl
fisttp
push
xchg
mov
enter
jnp
mov
cmp
or
cmc
outs
or
movs
cmp
stos
smsw
mov
fs
mov
adc
(bad)
sbb
push
std
mov
jecxz
xor
in
xor
dec
cmp
(bad)
inc
push
push
sbb
jne
push
mov
pop
ret
dec
mov
cmp
push
out
das
cmp
pop
mov
and
cmp
test
mov
add
out
pop
pop
sbb
and
ss
mov
add
popf
xor
pop
xchg
inc
sar
sub
cmps
cmp
and
pushf
mov
mov
icebp
jno
adc
dec
jmp
mov
jle
xor
lahf
xor
aad
dec
btc
pusha
mov
jns
fcom
xchg
into
xor
jp
ins
xchg
pop
lahf
pusha
mov
sbb
repnz
xor
mov
daa
mov
xlat
push
jmp
pop
into
mov
mov
mov
sbb
mov
xor
mov
aaa
add
jns
pop
out
push
xchg
or
jg
aad
push
mov
cmp
jb
adc
cli
push
mov
dec
test
es
les
shr
push
nop
sbb
push
add
add
call
dec
pop
mov
ror
jmp
in
push
daa
xor
add
fdiv
adc
jnp
lods
adc
mov
daa
cmp
dec
push
test
repz
loop
or
jge
and
mov
pop
sbb
add
sbb
sar
rol
xchg
jmp
(bad)
mov
sub
mov
ja
inc
xchg
adc
pop
fmul
test
xor
lahf
in
outs
lea
xlat
(bad)
dec
add
icebp
sahf
(bad)
aad
(bad)
(bad)
stos
dec
mov
cmp
jae
sbb
das
out
pop
retf
dec
push
pusha
int3
loope
sub
pushf
das
sti
int
addr16
jo
jmp
shr
and
xor
push
cli
dec
mov
(bad)
cmp
push
loope
fcomp
or
stos
sbb
shl
sub
or
cmps
mov
pop
jge
jb
sub
ffreep
push
ss
lods
push
sbb
hlt
ins
push
pop
fst
mov
out
lds
mov
dec
rol
mov
pushf
fcom
push
sbb
inc
xor
xchg
or
test
mov
int
mov
out
push
rol
adc
jmp
or
cld
mov
test
adc
push
lods
aam
inc
inc
push
repz
xor
aas
mov
sub
jo
jnp
or
mov
push
jg
stc
std
xchg
dec
push
loop
add
in
repnz
add
movs
popa
inc
ffreep
sbb
in
jo
and
mov
dec
cld
dec
xchg
push
pop
int3
add
retf
lock
nop
psubusb
out
dec
and
in
iret
pop
ins
xchg
push
repz
jno
dec
mov
jnp
les
sti
mov
stos
dec
pop
cli
jp
lods
inc
cmp
loopne
xchg
jb
xor
arpl
js
jecxz
in
push
mov
xor
scas
sbb
ror
adc
jge
push
rcr
cdq
lea
add
sub
sar
pop
or
leave
or
imul
xor
fisub
ja
fidiv
cmps
xor
cmp
(bad)
loop
push
fnstcw
mov
add
pop
sub
sar
jmp
call
cmp
xchg
lock
push
inc
daa
xor
das
add
fld
fnsave
fisttp
xchg
les
add
out
jg
mul
out
ret
shl
lock
xchg
add
mov
add
or
test
pop
jbe
loop
adc
dec
or
xor
push
dec
dec
arpl
push
ja
fldcw
cs
push
bound
aad
lods
sbb
pop
gs
cmp
dec
mov
push
cmp
and
leave
ds
jno
add
or
mov
and
xor
inc
cmc
fwait
mov
sbb
ins
imul
jae
inc
pop
(bad)
cmp
out
add
loopne
stos
jbe
call
lahf
xchg
sub
add
(bad)
or
xchg
xchg
test
js
and
inc
call
mov
cmps
out
(bad)
xor
mov
movs
mov
mov
les
xlat
ins
aad
jb
outs
cmp
pop
(bad)
cli
and
sbb
mov
pop
or
das
jge
adc
xchg
cmps
dec
inc
hlt
push
mov
ret
cmp
pop
mov
aas
pop
add
les
mov
ror
pop
or
out
cmc
call
das
and
movs
imul
inc
pop
rol
xchg
jge
lock
lods
ins
lea
enter
dec
ins
adc
push
pop
xchg
out
pop
(bad)
js
repnz
shr
retf
pop
in
ins
adc
push
add
cdq
cwde
sbb
or
push
shr
(bad)
push
div
enter
movs
fiadd
movs
push
stc
and
rcr
pop
(bad)
xor
(bad)
icebp
leave
or
nop
rcl
hlt
cmp
shl
aas
sub
es
sub
sub
fsubrp
dec
call
jmp
mov
fld
cwde
cmp
mov
dec
call
daa
mov
outs
call
push
dec
xchg
jmp
adc
mov
xchg
fiadd
(bad)
clc
mov
mov
inc
mov
push
outs
jmp
sbb
and
push
enter
in
xchg
push
call
mov
xor
outs
shr
gs
lock
and
jb
inc
loope
pop
cmp
jmp
cmp
mov
mov
cmp
pop
shl
sub
test
inc
push
aad
iret
xchg
call
pusha
mov
cwde
and
retf
lods
or
add
dec
or
xor
in
push
imul
outs
jmp
div
call
cmp
lock
cmc
scas
mov
neg
sbb
in
sbb
jmp
add
cwde
mov
dec
lahf
jmp
mov
push
xchg
mov
fsub
scas
lods
inc
pop
pop
fsubr
out
das
push
ficomp
enter
push
dec
mov
cmp
scas
jno
pslld
sbb
xchg
xlat
mov
adc
icebp
in
adc
mov
cmc
fcom
add
outs
dec
pushf
cmp
(bad)
test
dec
jns
pop
mov
adc
cli
(bad)
test
or
add
in
loopne
or
cmc
inc
cmp
shl
cmp
mov
(bad)
arpl
dec
out
fcom
xchg
mov
pop
jb
in
mov
mov
sub
add
inc
mov
pop
pop
sbb
mov
and
ins
clc
scas
sbb
das
into
cmp
jmp
call
movs
(bad)
retf
xchg
mov
xchg
add
das
fs
and
pop
mov
xchg
xor
js
xor
inc
jl
inc
ds
xchg
shr
mov
push
cmp
ss
and
mov
inc
lea
sbb
fldcw
mov
sbb
sbb
inc
(bad)
scas
fild
mov
outs
push
(bad)
push
sbb
mov
inc
(bad)
stc
mov
cmc
pop
xor
call
push
sub
mov
stos
or
aam
sbb
xlat
jg
ja
xchg
add
ret
out
fidiv
add
pop
into
imul
ftst
fucomp
les
fcomi
inc
inc
icebp
mov
pop
jae
mov
mov
lock
fistp
pusha
repz
mov
inc
into
aaa
push
call
or
push
mov
and
cdq
cld
mov
ins
fisttp
sahf
push
test
sub
pushf
mov
jae
hlt
(bad)
sti
mov
pop
push
xlat
mov
paddusw
push
leave
cwde
dec
sub
fs
movs
(bad)
dec
push
jae
pop
pop
aam
sub
sub
or
xor
sub
xor
fwait
cmp
scas
push
cld
xor
imul
mov
lods
out
mov
add
sti
xchg
pop
dec
add
mul
jmp
push
mov
dec
adc
xchg
sub
sbb
jge
xchg
mov
aas
pop
je
stc
or
cmp
push
dec
pop
mov
mov
mov
stos
dec
(bad)
les
inc
fnsave
out
fild
stos
retf
dec
fsub
pop
mov
inc
push
dec
mov
inc
ja
mov
sbb
push
leave
xlat
inc
fsubr
xor
repz
jp
push
pushaw
push
retf
pop
inc
xor
mov
or
outs
cmp
and
mov
dec
ss
movs
clc
test
lods
or
adc
adc
pop
in
cmp
aad
call
sub
jo
sahf
add
movs
mov
rcr
shl
jnp
retf
jmp
pop
push
dec
xchg
rcr
jl
jb
mov
mov
sub
push
and
mov
pop
nop
cmp
leave
sbb
dec
into
(bad)
ss
dec
or
ficomp
xor
dec
jle
inc
jmp
push
mov
mov
ss
adc
inc
mov
imul
rcl
loopne
mov
mov
pop
dec
pop
ds
xor
jl
adc
cmp
in
(bad)
aad
frstor
xlat
dec
ins
loopne
pusha
mov
add
mov
xchg
mov
mov
sbb
add
push
popa
fcom
xor
out
pop
cmc
lds
add
into
jns
add
add
xor
xchg
clc
mov
ss
and
xchg
jnp
(bad)
jns
jns
pop
call
sub
mov
ret
xor
cld
lods
stc
(bad)
push
sbb
mov
rcl
pop
movzx
shl
sbb
inc
leave
adc
jle
ficom
xor
scas
shr
clc
mov
int
sahf
dec
scas
(bad)
inc
test
cmp
in
jl
fild
outs
or
sbb
sbb
xchg
(bad)
outs
jp
sub
nop
adc
lahf
and
in
push
cmps
mov
fstp
inc
mov
nop
sub
pop
or
ins
mov
fidiv
sub
cld
cmps
push
dec
dec
jle
sbb
out
cmps
and
(bad)
pop
mov
add
add
and
sub
jl
or
mov
inc
loopne
or
dec
sbb
mov
lods
mov
in
ja
sbb
or
rcl
cmp
psrlq
(bad)
shl
daa
sbb
adc
pop
inc
loop
xlat
xlat
and
xor
jo
dec
fisttp
cmc
push
cs
inc
(bad)
pop
or
in
call
outs
sub
in
(bad)
push
iret
inc
dec
es
and
nop
sub
into
add
mov
call
(bad)
icebp
jnp
mov
sar
adc
mov
mov
call
inc
sub
inc
xor
mov
out
test
pop
push
sar
mov
xchg
out
call
jae
aas
sub
xor
xor
(bad)
adc
cmc
cdq
dec
int
mov
or
push
shl
push
les
jne
adc
shl
push
mov
jne
push
imul
push
mov
mov
idiv
repnz
xor
xchg
inc
test
sbb
lds
popa
jge
cs
jp
or
push
or
imul
popf
ficom
mov
mov
add
outs
push
xchg
add
fs
jl
retf
mov
inc
jle
loopne
xchg
sub
or
(bad)
sbb
push
jmp
das
mov
sbb
into
mov
jg
dec
jg
bound
in
int
retf
ret
push
(bad)
jecxz
je
mov
and
jne
push
enter
jno
cmp
adc
sbb
fidiv
aas
loope
popf
popf
cdq
lock
repz
fcomp
push
mov
lea
jmp
sbb
jmp
mov
push
imul
or
adc
repz
pop
or
mov
loope
push
js
arpl
jne
sub
loopne
sar
and
stc
retf
jg
cwde
mov
std
push
mov
jle
xor
mov
movs
xchg
cmp
std
inc
or
ret
push
inc
lea
mov
out
mov
pushf
or
jecxz
aas
sbb
push
push
jle
sub
push
push
jmp
icebp
jecxz
xor
daa
jmp
jno
test
xlat
fst
or
lahf
jno
cmps
push
inc
jbe
(bad)
shl
mov
push
dec
cli
and
xchg
popf
repz
xor
stc
cdq
sbb
inc
nop
leave
movs
das
in
das
aad
bound
sbb
xchg
sbb
pushf
adc
jo
jle
and
lods
(bad)
jnp
mov
clc
fcmovne
ret
fnstenv
loope
ret
or
and
xchg
mov
aas
sbb
ins
pop
ins
push
daa
jp
test
popf
inc
xlat
setp
mov
and
clc
push
lock
or
shr
jl
jbe
jbe
mov
arpl
retf
inc
outs
and
adc
jnp
fs
pop
sbb
outs
push
dec
aas
out
jmp
dec
xlat
jmp
sub
ret
cld
pop
pop
ds
xor
imul
cmp
xchg
rol
jl
std
jbe
pop
js
in
mov
addr16
mov
mov
repnz
jnp
sar
pop
pop
mov
jge
shl
cli
cmp
in
and
lods
hlt
bnd
and
test
jmp
dec
(bad)
sub
pushf
adc
dec
stos
adc
cdq
jge
stc
mov
push
dec
mov
iret
pusha
cmps
nop
aad
or
adc
push
mov
jle
cdq
test
cmp
pop
xor
and
addr16
jae
imul
mov
mov
push
jl
xor
dec
test
and
ror
ret
push
pushf
repnz
loope
addr16
mov
jg
ror
cmp
jb
dec
data16
imul
and
dec
in
or
stos
cmp
fistp
push
rcr
pop
in
fist
out
mov
enter
lea
cmp
das
arpl
jge
stc
lahf
add
fstp
dec
cdq
jmp
je
adc
add
pop
and
or
mov
sti
addr16
push
jne
mov
push
and
movs
push
push
cmc
sub
mov
mov
mov
add
setno
div
jne
fcom
xchg
imul
xchg
pop
mov
xchg
jno
ss
or
fisttp
push
inc
xchg
push
sub
aas
sbb
shr
cmps
push
les
push
xchg
inc
test
mov
(bad)
cmp
inc
int3
sahf
and
sar
test
fs
jo
jb
fwait
dec
movs
xchg
es
into
std
push
or
push
popf
xor
fsub
add
loop
mov
das
cmp
inc
add
push
loope
retf
sar
test
sub
stc
fadd
jmp
mov
mov
ficomp
cmp
in
mov
stos
stos
(bad)
imul
mov
mov
popa
mov
cmp
movs
and
shl
into
scas
aam
ins
imul
push
jo
test
(bad)
test
pushf
sub
or
clc
add
ret
mov
sbb
push
and
lahf
push
inc
push
shl
mov
sbb
fs
pop
rcl
xor
pop
in
lock
jp
das
pop
loopne
imul
pop
sub
push
jnp
(bad)
add
xchg
xor
out
(bad)
mov
std
push
xchg
repz
mov
and
ret
mov
jge
pop
or
test
in
cmp
daa
(bad)
(bad)
inc
stos
xchg
sbb
mov
pop
clc
cmp
xchg
pop
mov
add
(bad)
xlat
mov
aas
and
out
stc
scas
adc
out
lea
out
out
dec
cld
retf
cmp
popa
or
inc
pop
cmc
push
push
shl
cli
jo
add
stos
ins
out
dec
mov
repz
adc
cwde
inc
sbb
mov
out
cmp
dec
sub
pop
and
dec
std
int
sbb
pop
(bad)
test
mov
jecxz
outs
popa
(bad)
fimul
push
loope
and
add
sub
je
pop
loope
pop
aad
shr
push
inc
imul
lods
or
loop
nop
xchg
into
xchg
mov
cli
cmp
leave
adc
std
int3
inc
mov
xchg
pop
mov
jg
adc
jae
icebp
ret
sub
and
pop
push
outs
(bad)
mov
test
dec
lods
pop
leave
dec
icebp
pop
push
cmp
push
sub
lods
pop
test
loopne
push
jmp
mov
xor
test
jle
adc
es
std
imul
jp
and
and
adc
and
dec
fld1
dec
pop
addr16
retf
ret
sbb
jbe
xor
dec
scas
xor
push
gs
xchg
or
in
outs
pop
movs
mov
es
pop
(bad)
cmp
in
mov
jns
hlt
addr16
mov
jae
inc
push
jecxz
jnp
clc
imul
or
jmp
jle
addr16
(bad)
jmp
test
inc
add
shl
xor
mov
repnz
popf
or
call
mov
test
int3
jo
ficom
lea
mov
pop
pop
sbb
add
int3
out
mov
sti
lea
sbb
fs
add
ret
sbb
js
sub
push
pushf
dec
add
add
cmc
dec
pop
ret
xchg
icebp
push
(bad)
outs
mov
inc
aam
daa
ins
repnz
pop
cs
add
or
cmp
mov
and
xchg
push
jae
bound
mov
pop
and
xchg
cmp
pop
ret
jle
hlt
cmp
fwait
idiv
jl
jae
gs
sbb
dec
fmul
loopne
pushf
cli
mov
clc
add
mov
lods
mov
popf
dec
push
cmp
test
out
mov
add
hlt
enter
jmp
das
(bad)
es
mov
pop
adc
popf
pop
cmp
icebp
fiadd
sahf
jae
call
cmp
inc
jns
pop
xchg
iret
lock
fmul
xchg
cmp
arpl
aaa
sti
lods
das
out
mov
out
push
dec
test
dec
test
cmps
push
imul
cwde
lds
mov
jno
std
push
test
and
xor
push
push
push
adc
jecxz
xor
push
lock
neg
in
mov
mov
mov
and
retf
jg
inc
mov
or
iret
xchg
retf
mov
mov
fisttp
and
fdivr
mov
outs
outs
mov
sbb
js
xchg
add
pop
adc
sub
sbb
ss
pop
ds
sub
xchg
jbe
mov
(bad)
cli
mov
imul
or
outs
leave
add
inc
pop
(bad)
aad
fisttp
cmp
call
fisub
cmp
call
out
xchg
and
push
popa
cli
adc
push
pop
or
and
push
repnz
shl
or
pop
lahf
xchg
xchg
repnz
ss
(bad)
xchg
and
cmp
arpl
cwde
movs
sbb
and
dec
jb
mov
inc
arpl
ficom
pop
in
cmp
pop
inc
test
mov
iret
push
add
fcom
push
jle
xchg
xor
enter
adc
inc
sbb
sub
push
shr
div
imul
call
xchg
outs
sub
xor
add
jg
inc
call
xchg
and
pop
int3
fiadd
cmp
pop
mov
cld
mov
fcmovnb
mov
pop
mov
add
push
xor
pop
mov
xchg
jno
dec
adc
add
sub
add
repnz
movzx
add
push
xor
pop
call
icebp
cmp
fcom
inc
fst
cmp
das
jno
int
in
mov
scas
popa
or
mov
retf
inc
out
fisttp
movs
fwait
jmp
sbb
jno
lods
and
or
mov
outs
dec
lds
sbb
(bad)
aad
mov
cmps
cwde
mov
and
adc
push
jl
repz
push
into
pop
xchg
mov
push
or
and
test
add
scas
cmc
fwait
jmp
movs
das
cmp
pop
in
movs
or
cs
movs
mov
push
cmps
hlt
xor
mov
bnd
cwde
and
call
movs
mov
xor
test
cmp
add
sub
icebp
bound
push
in
sub
imul
dec
adc
ds
dec
scas
xor
jnp
leave
scas
add
(bad)
and
inc
shl
ficomp
test
cmp
xor
cwde
imul
cwde
scas
jns
and
test
cli
les
bound
mov
sub
sbb
add
add
pop
test
sbb
cmp
cmp
pop
in
adc
add
fisub
pop
div
add
or
dec
cli
sbb
cs
in
jo
inc
adc
mov
jae
rol
pop
inc
dec
and
cmp
push
hlt
mov
push
pop
(bad)
jo
and
fidiv
retf
lds
mov
cld
into
ret
(bad)
push
es
lea
loopne
jmp
push
mov
movs
inc
cmp
inc
icebp
push
clc
fwait
cmc
mov
sti
pavgw
push
mov
dec
test
icebp
(bad)
mov
ficom
mov
cmp
mov
icebp
xor
loope
sub
ret
popa
and
loopne
fistp
rol
out
movs
sbb
sbb
or
dec
adc
mov
push
xchg
fistp
xor
or
out
stos
cmp
fild
push
xchg
lock
xchg
clc
cmp
mov
popf
hlt
in
xlat
pushf
sbb
push
push
xchg
out
push
scas
cmp
mov
inc
icebp
pusha
cmp
or
and
cdq
daa
push
push
jge
fwait
nop
mov
pop
and
ins
add
test
cmp
movs
dec
sbb
sahf
repnz
out
cli
int
ins
fisub
sub
dec
sar
retf
or
push
mov
sbb
or
iret
retf
test
mov
push
leave
scas
mov
inc
adc
arpl
out
xchg
outs
xor
into
repnz
ins
dec
clc
mov
pop
push
inc
aaa
mov
pop
jb
in
adc
or
int
inc
daa
fadd
leave
jne
int3
rcl
out
ror
imul
jmp
in
movs
(bad)
dec
pop
fstp
cmps
xchg
movs
setb
push
outs
mov
mov
retf
jl
cmp
popa
cli
jno
cmc
mov
dec
jae
inc
mov
jl
enter
mov
push
out
frstor
mov
fst
mov
or
stos
or
fbstp
imul
jge
in
dec
and
popa
rcr
mov
mov
mov
popf
hlt
pop
lahf
mov
neg
aaa
repnz
fisttp
(bad)
adc
mov
fadd
shr
jmp
je
ins
push
xor
nop
mov
dec
js
add
jmp
pop
lds
stos
or
cmc
pushf
xor
imul
clc
sub
fst
xchg
and
jecxz
mov
stos
xchg
neg
adc
ss
push
hlt
cmp
mov
stos
cmp
xchg
push
mov
and
add
mov
dec
inc
xor
iret
xchg
cmc
xlat
push
stos
data16
retf
cmp
pop
push
jno
ins
repz
xlat
loop
fucomp
mov
push
call
and
stos
div
lock
mov
mov
shr
pop
aas
lods
sub
cmp
cli
test
mov
dec
mov
pop
arpl
inc
dec
imul
cs
pop
add
jnp
fs
push
lods
xor
cmp
inc
out
aaa
ret
imul
fsubr
xchg
add
cmp
cmc
cmp
cld
jne
xchg
loope
or
sbb
xchg
xor
in
lods
jg
mov
or
shl
(bad)
sub
in
adc
rcl
into
lods
lods
call
sbb
out
ins
mov
fstp
dec
popf
add
mov
mov
lods
retf
cld
mov
jbe
mov
or
lock
cmp
imul
(bad)
(bad)
lahf
mov
and
repnz
inc
int3
cmc
mov
xchg
dec
jmp
xchg
in
ins
and
ret
dec
xchg
mov
cld
ffree
stc
out
iret
jle
std
cmc
mov
sbb
test
jecxz
cmp
std
xor
pop
xor
push
mov
and
push
out
test
jmp
mov
jg
inc
push
and
sbb
popf
popf
xchg
mov
cmc
mov
inc
push
inc
mov
dec
xor
inc
jnp
pop
je
lahf
out
nop
cmp
pushf
rcr
cmp
adc
pop
mov
call
out
lea
and
(bad)
xchg
outs
mov
scas
sub
call
jae
mov
es
daa
jecxz
sbb
inc
cld
mov
jg
sub
cmp
(bad)
sub
add
int3
scas
dec
jno
push
out
loope
arpl
mov
or
jb
ret
call
cmp
push
(bad)
xor
test
sar
push
clc
out
xchg
es
sahf
inc
mov
push
mov
adc
enter
add
lods
aam
pop
(bad)
inc
arpl
addr16
xchg
cmp
ds
inc
popf
mov
pop
inc
test
(bad)
push
das
movs
inc
out
inc
(bad)
jnp
dec
test
jo
xchg
adc
push
mov
mov
int
rcr
hlt
popa
jg
ss
and
xor
in
ds
sbb
sub
mov
jg
xor
in
hlt
mov
ins
push
stos
sub
mov
pop
jnp
cli
scas
daa
loope
ins
shl
sbb
fiadd
movs
mov
jmp
jg
inc
xor
in
stos
cmps
push
cmp
movs
sbb
inc
jns
pop
lods
push
and
lock
sbb
dec
mov
test
push
loopne
dec
jp
inc
loope
jb
ffree
push
fstp
ffree
imul
inc
(bad)
out
gs
iret
in
xor
or
jbe
loopne
dec
jmp
inc
fist
jp
pop
add
sbb
std
jl
sub
lods
push
push
and
and
stc
pop
fs
test
rcl
adc
and
sbb
div
push
and
ja
and
data16
test
pusha
sbb
jno
adc
push
mov
add
(bad)
fist
inc
retf
scas
call
add
pop
dec
daa
mov
ins
cdq
test
das
ret
hlt
jmp
ret
jle
js
or
sub
pop
adc
mov
xchg
das
xchg
stos
adc
stc
fadd
jmp
sub
and
das
into
into
icebp
xchg
sbb
sub
lods
loope
jle
pop
pop
out
mov
dec
(bad)
inc
imul
jo
fst
stos
repz
dec
xchg
div
jb
cmp
mov
enter
sti
mov
jl
jo
repnz
jl
rcr
xchg
cmp
add
mov
push
int
or
imul
rcl
daa
loopne
mov
mov
call
add
pop
rep
sub
mov
shl
(bad)
cmp
hlt
and
out
mov
shl
cli
fcmovnbe
adc
inc
stc
bound
call
or
movs
sub
(bad)
in
clc
ror
scas
push
push
je
xor
gs
jae
xor
out
movs
dec
push
(bad)
sbb
mov
jns
sti
outs
push
out
mov
jp
imul
sbb
and
cmp
int3
mov
inc
mov
scas
add
(bad)
mov
in
and
push
fistp
(bad)
out
jno
cli
sbb
jne
xchg
fiadd
test
pop
and
popf
add
or
jmp
adc
and
inc
adc
popa
push
jge
push
lds
push
xor
retf
mov
cwde
aad
ja
in
je
loopne
aaa
test
lods
icebp
jb
dec
jb
mov
(bad)
mov
jae
mov
xor
sub
pop
retf
add
(bad)
bound
ror
inc
mov
xchg
sti
xlat
(bad)
(bad)
je
fcmovu
leave
in
sub
pop
mov
inc
cmp
push
cmp
mov
inc
push
frstor
nop
aas
jne
xor
bnd
scas
nop
pushf
out
or
les
push
or
cwde
inc
adc
scas
and
repnz
sbb
cmc
movs
fild
or
add
(bad)
jb
jb
mov
js
es
test
scas
jae
pop
data16
(bad)
dec
into
cld
adc
pushf
adc
pop
test
dec
or
jle
lock
aad
out
inc
xchg
ret
jns
mov
scas
outs
stos
and
inc
or
xchg
xor
(bad)
(bad)
ss
pop
inc
scas
pop
or
stos
adc
pop
arpl
push
imul
cmp
add
ins
sub
adc
or
mov
mov
cli
stos
pop
add
pushf
or
loopne
mov
mov
adc
push
push
push
pop
inc
test
lock
jle
pop
outs
fwait
push
fild
push
and
xor
mov
stos
cld
lods
gs
ds
mov
mov
mov
inc
rcr
xchg
xor
popa
pop
push
mov
rol
cmp
(bad)
out
test
jmp
jp
jmp
(bad)
in
mov
or
lods
das
jge
jp
ror
call
js
fcom
inc
pop
xor
pop
enter
fst
and
sbb
pop
loopne
inc
enter
and
pop
push
sar
jne
mov
aaa
mov
ins
dec
inc
push
xor
pop
movs
stc
add
(bad)
jae
jg
cmps
or
dec
shr
lds
cwde
xor
test
scas
shr
push
and
test
data16
pop
cmp
mov
xchg
add
out
popa
add
pop
sbb
and
jo
jbe
mov
push
xor
mov
mov
loop
enter
xchg
ins
sbb
out
adc
sti
dec
cmp
jb
(bad)
xlat
sub
sbb
mov
pop
or
popf
call
jmp
int
sar
adc
mov
retf
retf
or
fst
jnp
adc
daa
aad
int
jnp
repz
dec
add
and
jmp
pop
adc
aad
inc
or
push
and
xchg
cmp
int3
and
mov
adc
imul
and
jns
xchg
rcr
inc
jmp
(bad)
jle
cdq
frstor
xchg
dec
(bad)
adc
adc
aas
inc
pop
arpl
sbb
gs
sahf
sub
scas
or
inc
adc
neg
fsub
(bad)
lods
xchg
or
mov
jae
jg
popa
popf
icebp
rol
push
test
dec
lock
movs
mov
push
mov
dec
(bad)
in
mov
icebp
adc
loop
sub
push
jle
ror
mov
sbb
ins
mov
pop
sub
cld
lods
mov
mov
jo
mov
push
cmp
in
repnz
(bad)
aas
adc
sbb
into
pop
ud2
rcl
cmc
add
dec
xor
xchg
dec
std
sub
(bad)
pop
test
js
xchg
je
fist
bound
fdivr
adc
in
scas
jge
ins
push
mov
test
ret
dec
je
add
dec
jnp
imul
lea
mov
loope
dec
call
in
rcl
cmp
jne
cmp
std
test
(bad)
repz
scas
jge
mov
je
mov
lahf
adc
cmp
cmp
jecxz
stos
mov
mov
mov
in
out
inc
rcl
das
fdiv
dec
add
add
cmp
ret
pop
lods
push
sub
push
inc
jae
fnstenv
(bad)
ins
popa
jo
rcr
push
xlat
jmp
inc
sbb
cdq
sub
pop
(bad)
cmps
xchg
fstp
xor
mov
pop
cmp
fild
mov
xor
xlat
pushf
test
and
mov
inc
mov
nop
nop
sahf
fnstsw
sub
push
add
lea
push
jno
push
out
ds
movs
add
rcr
jmp
lea
ret
aam
js
xor
dec
cli
sub
test
pusha
icebp
xor
aas
inc
jge
push
in
stos
lods
mov
cwde
adc
repnz
pop
mov
jge
mov
mov
or
ss
sbb
adc
push
sbb
arpl
inc
mov
test
aad
loopne
dec
push
inc
sbb
mov
fsubr
inc
aas
hlt
push
imul
push
xlat
pusha
scas
cmp
addr16
sbb
cmp
shr
ror
movs
cmp
or
mov
gs
cmp
mov
pop
dec
or
pop
addr16
das
mov
fsubr
inc
ss
repz
call
jae
loopne
(bad)
pop
or
in
dec
or
pop
mov
mov
and
pop
xchg
into
jmp
pop
and
cmps
jl
sub
rcl
mov
retf
adc
cmps
scas
xchg
pop
pop
jno
mov
outs
repnz
loopne
cwde
ret
(bad)
dec
push
mov
in
lods
lods
mov
aad
and
pop
push
add
jo
inc
(bad)
inc
les
call
pop
inc
icebp
outs
mov
(bad)
xchg
pop
call
iret
sbb
int
and
das
(bad)
dec
arpl
iret
imul
adc
fbld
jmp
pushf
jo
rol
mov
call
sub
or
lds
inc
hlt
pushf
jmp
bound
add
outs
rcr
ficomp
sub
ins
mov
test
je
pusha
adc
stos
xchg
fstp
fstp
pop
repz
sub
jle
pushf
mov
pusha
pop
push
out
pusha
daa
xlat
or
pushf
shl
dec
cwde
sti
adc
fidivr
mov
scas
fwait
dec
loop
mov
adc
jne
test
xchg
adc
push
sbb
jns
ss
or
sbb
hlt
lahf
xchg
or
xor
ret
jno
add
fs
jecxz
and
ret
dec
pmulhw
shr
enter
not
stos
aaa
mov
xchg
and
jno
scas
pusha
push
cmc
in
xchg
int
cmp
or
mov
icebp
je
je
or
dec
mov
and
imul
pop
pop
jle
leave
sub
adc
data16
push
fiadd
movs
iret
xchg
cli
pop
pop
in
xor
inc
mov
sar
and
pop
dec
jl
lea
add
add
retf
(bad)
fld
xchg
pop
bound
ins
ror
inc
cli
aas
xor
push
sahf
add
cs
in
(bad)
scas
(bad)
aaa
sub
mov
pop
ds
test
xchg
in
stos
add
or
scas
std
cli
xchg
mov
mov
and
mov
out
cmp
iret
jns
fs
cmps
cmp
or
xchg
mov
pop
adc
inc
jp
sbb
dec
stc
not
push
adc
test
out
mov
sbb
push
bound
xchg
jl
arpl
adc
xchg
scas
sbb
ficomp
aaa
mov
movs
and
add
loope
sbb
adc
mov
dec
sub
adc
fld
cmp
loope
add
sti
and
hlt
xchg
fsubr
test
mov
lea
call
lea
mov
cmp
bound
mov
mov
pop
lea
xchg
cmps
inc
repnz
fwait
jp
add
pushf
outs
sbb
dec
mov
fs
jp
mov
aas
lock
cmp
outs
aaa
outs
mov
cmp
xlat
xor
stos
jecxz
aas
fdiv
sti
ret
mov
xlat
push
je
test
int
test
sahf
mov
jp
mov
js
fnstcw
inc
and
int
and
mov
pop
loope
inc
inc
push
test
out
sub
mov
mov
gs
sbb
push
lock
sbb
sbb
mov
fucomp
cmp
(bad)
aam
data16
mov
icebp
xchg
mov
(bad)
pop
out
mov
enter
popf
outs
or
lods
mov
xchg
stos
add
mov
jns
and
out
pop
arpl
jns
dec
jg
dec
std
push
mov
inc
sbb
imul
inc
(bad)
test
es
cdq
adc
push
ins
inc
fnstsw
out
sub
int3
xor
call
mov
adc
mov
mov
bound
pop
call
inc
and
pop
hlt
out
int
cmc
sub
jne
mov
dec
pop
dec
aad
dec
ins
into
test
das
inc
lods
test
stc
pop
es
int3
hlt
cmps
adc
add
inc
inc
pop
and
mov
dec
movs
cmps
and
and
add
sub
sbb
sbb
clc
dec
loop
sbb
mov
dec
ja
jge
cmp
cmp
pop
fcom
or
sub
jno
pop
and
pop
cmp
or
xchg
mov
mov
jl
xchg
jp
dec
and
inc
jo
cmp
std
inc
xor
imul
fst
lods
(bad)
mov
and
frstor
jmp
pop
mov
mov
cmp
xor
mov
cmp
add
sbb
mov
xchg
imul
push
add
xor
dec
sub
push
jg
and
or
bound
sbb
jmp
cmp
cmp
sti
iret
std
dec
sbb
push
jbe
push
adc
jmp
fwait
mov
(bad)
pop
mov
(bad)
shl
cdq
sar
pop
sbb
cmp
sub
outs
sahf
mov
loope
ins
mov
(bad)
std
les
and
cmc
sbb
mov
leave
jno
jb
fiadd
xchg
in
pop
(bad)
pop
out
jmp
pushf
ss
push
cmp
push
and
movs
jnp
and
sub
test
(bad)
cmp
sahf
ds
mov
fmul
mov
xor
mov
mov
rcl
dec
test
dec
call
or
lock
ins
lds
bound
jecxz
xlat
mov
jae
dec
dec
sbb
test
and
jg
pop
shr
xor
fild
mov
into
mov
sub
sub
mov
test
cmp
js
repz
adc
sub
cmps
and
inc
in
cmp
push
jecxz
adc
repz
test
push
fsubr
and
cwde
in
shr
push
mov
xchg
sbb
retf
cdq
sbb
lods
mov
stc
push
popf
dec
stos
xchg
jmp
out
fcomp
mov
inc
les
pop
sbb
add
xor
call
ror
add
mov
add
ja
add
cdq
and
fs
xchg
mov
mov
shr
push
das
sub
jge
fiadd
retf
xchg
test
imul
stos
inc
xor
test
xchg
arpl
push
(bad)
cmp
fld
mov
mov
mov
into
fnstsw
push
je
push
scas
(bad)
shl
repnz
test
push
(bad)
es
inc
mov
inc
popf
cld
imul
das
ret
mov
imul
jbe
sub
sbb
mov
fs
sbb
enter
jp
out
scas
popa
fwait
loope
or
sub
mov
push
fild
pop
xchg
mov
mov
outs
jl
push
jno
jmp
or
push
sub
jmp
pop
cmp
in
mov
fsub
inc
outs
cmps
dec
stos
in
sub
adc
outs
jmp
mov
stc
push
(bad)
jg
push
add
fwait
inc
and
fucomip
retf
scas
xor
popa
and
cmp
and
pop
cwde
push
jnp
mov
call
fld
adc
cdq
loope
mov
sub
push
inc
fild
les
scas
jno
or
sbb
jg
js
sahf
shr
cmp
xchg
xor
les
cmp
aas
adc
xchg
or
push
push
jge
xchg
daa
aam
mov
aaa
sub
mov
dec
inc
jmp
add
ins
fcomp
pushf
imul
pop
out
jns
loop
cmp
mov
test
or
mov
jae
jmp
test
cli
mov
(bad)
loope
inc
adc
inc
stos
cmps
mov
out
je
aad
xor
xchg
pop
xlat
pop
(bad)
push
mov
int3
cmp
jo
adc
in
and
fisub
loope
inc
mov
add
call
or
fsub
xchg
jmp
nop
(bad)
push
ja
les
cmp
jge
xchg
xor
jp
jge
sbb
lods
xchg
outs
(bad)
loopne
fwait
mov
nop
jb
push
adc
add
bound
inc
add
js
dec
mov
test
imul
xchg
or
push
fucomp
or
push
outs
inc
popa
loop
mov
mov
xlat
mov
xchg
jge
clc
mov
or
mov
jmp
jmp
cld
adc
rol
mov
mov
jne
shl
lahf
cmp
jg
xor
pop
nop
rcr
add
das
mov
push
mov
movs
jbe
scas
ja
xor
adc
jmp
popf
loope
lock
and
sahf
leave
push
mov
jmp
cmp
loop
adc
pop
jmp
gs
out
pop
adc
test
push
call
scas
jg
pop
mov
jle
jecxz
in
and
aad
stos
cmc
mov
cli
aad
mov
icebp
jae
(bad)
out
push
xor
imul
mov
jmp
and
repz
sub
push
sub
push
push
adc
ror
or
dec
inc
vmptrst
fmul
push
mov
mov
xchg
push
push
dec
nop
mov
addr16
ins
pop
xchg
sub
push
xlat
pop
mov
mov
push
xor
popf
adc
movs
int3
jecxz
xor
sahf
ss
(bad)
jl
pop
shl
adc
dec
dec
idiv
add
or
int3
xor
mov
ja
sub
ins
fwait
jmp
into
or
clc
mov
dec
pop
mov
push
and
mov
shr
push
mov
add
cwde
cmp
jmp
jne
push
adc
stc
imul
int3
ds
adc
test
fdivr
mov
sub
int3
cmp
icebp
inc
mov
pop
mov
ret
dec
retf
test
iret
mov
sbb
xchg
fdivr
icebp
sbb
xchg
push
addr16
add
jno
daa
adc
inc
cmp
cmp
mov
sbb
mov
mov
jno
mov
stos
call
bound
aas
hlt
xchg
jp
fcom
aaa
lds
and
mov
xchg
pusha
repnz
loope
pop
repz
xchg
mov
add
mov
mov
xchg
dec
je
ds
out
js
invd
adc
(bad)
adc
repz
ja
das
xchg
daa
idiv
(bad)
ja
movs
sbb
pop
pop
or
js
movs
cs
mov
call
sbb
sbb
add
cmp
mov
fisubr
xchg
sbb
jae
pop
bnd
fadd
(bad)
mov
dec
fdivr
mov
int
inc
sar
mov
scas
add
stos
dec
sub
(bad)
out
in
cmp
enter
arpl
std
inc
test
popf
in
retf
loopne
inc
xchg
and
xor
fstp
mov
div
sub
test
inc
pushf
mov
or
cdq
push
or
lods
or
(bad)
imul
mov
adc
bound
xor
div
xchg
dec
push
fld
add
js
(bad)
pop
das
add
xchg
cwde
sub
sbb
mov
sub
mov
mov
(bad)
nop
ret
mov
int3
sahf
push
sbb
jnp
call
(bad)
ins
mov
scas
dec
int
dec
adc
cld
push
cdq
sbb
adc
aad
mov
pop
mov
xor
icebp
add
cmp
cmp
not
stos
push
pop
pop
dec
aad
cmp
rcl
fs
imul
fldcw
jle
out
aam
dec
mov
inc
call
lods
outs
ret
xchg
je
icebp
bound
rol
out
inc
add
pop
mov
fmul
push
sahf
xor
mov
ficom
cwde
jmp
sbb
mov
inc
adc
not
out
push
rol
dec
ffree
mov
mov
daa
add
pop
or
mov
daa
std
cmp
lods
mov
in
dec
xor
pop
or
and
dec
xor
imul
imul
xchg
inc
jl
fiadd
outs
pop
fldenv
cmp
out
outs
popf
cli
movs
in
xchg
cdq
pushf
ds
or
jnp
jbe
lods
mov
push
popa
adc
mov
xlat
lods
into
and
jecxz
push
sbb
cs
mov
scas
arpl
push
xchg
push
inc
out
cmp
inc
cmp
cld
rep
cmp
fldcw
in
outs
xchg
mov
add
jecxz
out
cmp
push
xchg
and
imul
ret
xchg
mov
dec
mov
xchg
sbb
into
retf
add
movs
gs
test
test
(bad)
xor
(bad)
pop
push
pop
adc
xlat
cmp
xor
sub
cmp
enter
rcl
test
jae
jmp
jge
cdq
mov
call
pop
inc
jge
sbb
dec
bound
aas
inc
nop
out
outs
mov
push
dec
and
xchg
loope
cmps
cmp
dec
je
pop
jbe
sbb
clc
fs
aas
fnsave
addr16
fist
call
push
adc
mov
aas
push
out
inc
push
dec
leave
fst
push
dec
inc
cmp
lods
fist
icebp
and
aas
jbe
or
and
mov
int3
mov
ins
gs
jp
scas
popf
xlat
ja
gs
(bad)
pop
dec
mov
dec
iret
iret
or
inc
mov
imul
sbb
ds
das
pop
test
push
les
xor
std
jp
push
push
std
cmp
js
cmp
shr
dec
stos
fdivr
je
out
mov
pop
cmps
scas
fistp
or
xor
fcomip
fisttp
pop
push
movs
mov
int
cwde
xchg
and
pop
mov
inc
mov
fdiv
add
out
sbb
and
icebp
mov
or
shl
sbb
adc
call
xchg
arpl
inc
ret
shr
ds
adc
mov
sub
nop
cmps
inc
ret
and
cs
mov
aam
leave
daa
pop
sti
jne
push
dec
inc
or
add
cmps
ret
loopne
jp
dec
mov
movs
inc
cmp
in
adc
dec
ja
aad
call
and
dec
pop
loopne
arpl
xchg
nop
cmps
in
pop
cld
and
push
inc
movs
imul
cmp
call
(bad)
std
test
and
data16
fldenv
adc
sar
test
and
sub
mov
xchg
xlat
and
vmovshdup
xchg
mov
fcomp
ins
(bad)
rol
push
adc
inc
jne
push
xchg
lea
pop
mov
jp
rol
pop
mov
xchg
cmp
adc
shl
push
lahf
cmp
fbld
movs
clc
(bad)
pop
pop
imul
fnstcw
add
and
hlt
std
es
pop
cmps
cmp
cmp
cmp
inc
adc
adc
push
xor
cmps
cmp
jmp
rcr
xor
outs
shl
into
das
sbb
inc
push
adc
addr16
adc
jg
pop
dec
add
mov
ss
push
out
adc
cmp
stc
sti
sub
aam
movs
gs
sar
dec
add
lds
cmp
adc
push
mov
test
mov
imul
mov
pop
ins
test
xor
sbb
push
test
pop
or
retf
xchg
push
and
xor
xchg
mov
mov
loopne
push
cli
pop
pop
scas
jno
mov
push
xchg
jbe
fdivr
es
test
mov
push
imul
or
mov
imul
shl
xchg
fld
inc
ja
imul
mul
fild
cli
aaa
rol
shl
pop
pop
cmps
inc
sub
ins
adc
fiadd
retf
inc
pop
gs
jo
test
or
push
cmp
adc
cmc
pop
int
sbb
out
clc
jne
pcmpeqd
leave
popf
mov
or
pop
jle
(bad)
add
loopne
and
xchg
test
mov
mov
in
push
mov
xchg
jne
push
das
mov
adc
inc
pop
cmp
(bad)
cli
push
push
sahf
addr16
jge
adc
cmps
fistp
shl
mov
cdq
sbb
cmpxchg
sbb
mov
mov
xchg
int
inc
pop
lods
mov
sub
call
lock
add
mov
push
jp
dec
(bad)
jge
bound
dec
add
out
xchg
in
das
dec
das
scas
cld
das
in
xchg
xchg
xchg
leave
mov
rol
or
or
cmp
add
femms
mov
pop
cmc
icebp
ret
in
dec
ja
cmp
inc
bound
pop
or
loop
fsubr
xlat
adc
popf
sub
mov
aaa
test
(bad)
(bad)
lods
inc
je
fstp
xor
and
cmp
adc
int3
push
mov
in
mov
pop
pop
push
adc
arpl
dec
sti
int
repz
sub
jno
neg
sub
mov
clc
mov
ficom
mov
add
mov
pusha
mov
sub
fild
jns
ficomp
push
fisub
retf
cbw
push
fdiv
aam
les
(bad)
jmp
pop
mov
adc
sub
mov
ins
arpl
or
adc
pop
push
mov
sbb
cmp
mov
lds
rcl
mov
ds
sbb
repnz
or
stos
sbb
hlt
push
cmp
ds
mov
mov
in
xchg
addr16
fs
lods
push
xchg
jns
jo
mov
sub
add
pop
pop
fdivr
outs
lods
addr16
mov
jae
rol
out
jle
es
imul
xchg
jle
into
std
les
addr16
je
test
js
adc
imul
neg
xor
inc
push
loop
(bad)
dec
out
shl
dec
imul
loop
adc
mov
push
jbe
repz
xchg
xor
push
push
add
ja
(bad)
std
jmp
and
lock
jl
jno
adc
(bad)
pop
xchg
jle
ret
test
stc
shr
dec
cli
dec
lock
in
mov
dec
cmps
inc
mov
add
(bad)
jmp
and
and
inc
push
dec
adc
scas
enter
ret
int
cmp
inc
jne
and
push
cmp
xchg
cmp
push
adc
sbb
fbstp
cmp
pop
loopne
sub
add
sub
gs
pop
sti
aad
xor
push
pop
lahf
rol
mov
or
xchg
jecxz
sbb
(bad)
ror
int
fild
pop
pop
sbb
ja
mov
mov
cs
(bad)
pushf
outs
xchg
sbb
xor
in
lods
cs
(bad)
loopne
sub
sbb
(bad)
push
dec
test
mov
ins
outs
fyl2x
mov
outs
jb
adc
cmp
mov
mov
push
dec
cli
mov
inc
dec
mov
xor
pop
adc
xor
pop
shl
adc
or
fmul
mov
popa
out
lds
pop
push
in
and
cwde
cli
mov
fadd
push
fisub
cs
pop
call
lods
sbb
jne
xchg
(bad)
fsub
push
and
pop
mov
or
inc
addr16
push
ror
pusha
mov
stos
test
stos
xor
xor
es
pop
adc
add
gs
out
pop
repz
sbb
push
je
test
(bad)
mov
in
pop
ins
les
jns
popa
adc
add
(bad)
retf
clc
adc
push
mov
test
push
pop
sbb
dec
xor
dec
inc
push
inc
or
and
or
jmp
push
imul
add
or
clc
ins
loop
push
fdiv
icebp
jns
xchg
pop
inc
rcr
mov
jg
pop
sub
mov
sub
bound
pop
in
data16
mov
and
pushf
daa
push
push
lods
lods
shr
mov
fimul
stc
sbb
repz
jmp
ror
ficom
mov
xchg
mov
xor
cmp
push
and
test
cmps
xchg
xor
pushf
push
push
xor
inc
out
xor
je
adc
push
popa
sti
outs
pushf
fwait
(bad)
repnz
jl
adc
lock
cdq
int
arpl
jns
xchg
cli
(bad)
mov
push
std
mov
or
scas
ss
mul
cli
inc
push
push
sbb
ret
pop
jno
test
shr
pop
inc
fs
loop
int
shl
sbb
mov
xor
data16
movs
ret
xlat
inc
push
and
mov
add
fstp
adc
push
jo
inc
adc
xchg
push
cwde
pop
(bad)
cwde
mov
sbb
fmul
loopne
mov
and
jae
mov
adc
loope
sbb
xchg
xchg
jmp
movs
push
jne
repz
xchg
pop
and
mov
imul
mov
hlt
sub
retf
dec
add
inc
cmc
xchg
cmp
ds
and
adc
fwait
scas
sub
ret
out
popa
xor
fdiv
mov
and
das
sub
int
shr
mov
lahf
mov
mov
xor
inc
mov
movs
cdq
ds
in
scas
popa
adc
mov
or
sub
pop
into
xor
out
sub
inc
int
fcomp
xchg
repz
call
std
adc
add
push
ret
das
repnz
adc
in
or
(bad)
mov
pop
push
mov
mov
std
rcr
push
into
fisttp
mov
loop
sbb
xchg
jb
jl
rcl
icebp
mov
jg
pop
xchg
mov
cmc
sahf
stc
js
enter
xchg
cmp
mov
retf
pop
(bad)
pop
(bad)
mov
push
push
in
inc
push
jmp
in
mov
mov
fistp
pop
xchg
pop
mov
int
xchg
mov
out
jae
rcl
cmp
mov
jno
sahf
clc
push
mov
add
cmp
in
mov
ja
push
sbb
jbe
movs
aas
lock
inc
adc
pop
mov
push
mov
or
fisubr
(bad)
outs
xchg
ret
stos
jle
lods
icebp
mov
jb
jle
sub
pop
mov
add
xor
sub
jno
xor
adc
xor
xor
jp
adc
inc
jne
mov
cmp
mov
dec
fs
popf
jne
sub
jmp
loop
mov
enter
es
inc
sar
push
mov
push
pusha
jmp
arpl
cmc
pop
icebp
(bad)
adc
cmp
js
outs
mov
int3
pop
pmaxub
jmp
movs
popa
sub
out
or
xchg
fisttp
mov
push
pop
inc
xor
(bad)
jne
inc
inc
jbe
das
(bad)
or
sti
sbb
aaa
inc
dec
std
mov
pop
xor
mov
ins
xchg
test
imul
sti
pop
xor
jl
xchg
iret
add
sub
cmp
enter
(bad)
xchg
iret
ja
fsubrp
fisubr
shr
add
adc
push
adc
adc
test
test
inc
(bad)
div
mov
jb
out
shl
cmp
es
xor
sbb
lds
inc
jno
xor
xor
pop
cmp
mov
xchg
scas
(bad)
push
pop
cdq
pop
out
push
jmp
sbb
cmc
sbb
xor
inc
jns
mov
(bad)
xchg
movs
imul
jp
mov
jo
clc
inc
fs
xchg
out
jb
(bad)
pop
not
fstp
loop
aam
aaa
mov
call
mov
dec
jmp
mov
jle
add
neg
push
sbb
xlat
xchg
movs
cmp
or
lock
push
jae
push
loope
sbb
fidiv
mov
dec
jnp
ror
pop
jo
fbstp
jmp
cmps
clc
clc
add
jb
fsubr
push
ins
cld
dec
sub
or
or
pop
xlat
adc
adc
gs
push
shr
std
movs
sub
or
(bad)
push
fidiv
mov
ss
sub
dec
pushf
das
or
push
call
test
arpl
ret
ss
clc
(bad)
dec
test
jnp
(bad)
adc
xor
shr
sbb
and
std
dec
mov
xchg
xchg
mov
dec
pop
popf
js
loopne
int
(bad)
icebp
mov
adc
xor
xchg
movs
mov
and
inc
push
push
cmps
cmp
mov
ins
and
mov
cwde
jmp
sub
pop
jmp
retf
cmp
(bad)
fwait
lock
xchg
add
xchg
pop
fidivr
or
mov
hlt
or
pop
jp
fstp
test
and
push
push
pop
icebp
loope
inc
pop
cmp
push
test
dec
(bad)
out
push
pop
dec
jo
push
nop
clc
shl
dec
mov
icebp
add
lods
in
mov
dec
fisubr
test
dec
js
not
fsubr
pop
(bad)
lock
xchg
sub
stos
xchg
xor
imul
jecxz
pop
adc
ffree
inc
cs
and
xchg
inc
jle
lea
pop
add
arpl
lahf
sar
ret
ins
and
jmp
cmp
movs
fwait
pop
ja
lods
pop
jmp
and
repnz
addr16
jbe
cmp
test
fcmovbe
sub
es
neg
dec
jle
xchg
mov
xor
sub
sbb
lods
aaa
xor
shr
leave
xchg
push
mov
mov
jmp
test
sbb
jae
xor
pop
xchg
call
mov
jecxz
popf
in
pop
cmps
inc
enter
aaa
fs
inc
push
popa
xor
pop
dec
repz
sub
(bad)
inc
cmps
(bad)
xchg
lods
sbb
fdivr
retf
sbb
jmp
cmp
inc
xchg
sub
jge
pop
stos
in
movs
mov
dec
fsubr
dec
ror
cmc
aas
fwait
(bad)
cli
push
sbb
lods
xchg
xchg
add
call
repnz
call
movs
xchg
cmp
nop
mov
push
repz
adc
std
stos
fidiv
lods
aam
int
test
ins
loop
les
sahf
mov
inc
add
inc
jp
or
daa
test
mov
out
(bad)
push
mov
add
cs
xchg
sahf
aam
(bad)
std
jns
popa
jp
call
mov
imul
push
test
retf
push
jns
int
aam
test
hlt
push
push
push
std
test
push
scas
pop
or
fs
push
rcr
icebp
mov
shl
pop
and
loope
dec
fnstenv
mov
aad
pop
scas
lea
mov
pop
mov
dec
or
push
(bad)
into
(bad)
mov
xor
sbb
leave
test
cs
push
(bad)
ficom
mov
xchg
pop
outs
sti
out
aaa
pop
jo
lods
xlat
mov
cmp
cmp
pop
mov
mov
sbb
imul
lock
test
aas
cmps
cwde
adc
jg
push
mov
dec
(bad)
daa
dec
and
dec
cmp
or
shl
sahf
mov
inc
inc
sub
(bad)
aas
popa
outs
test
mov
or
cmp
test
test
or
and
std
dec
push
add
cmc
xor
je
jae
test
inc
mov
test
movs
push
imul
nop
mov
cmp
sbb
adc
jecxz
jle
adc
sub
lds
push
xchg
mov
in
shl
push
inc
mov
jns
cmc
xchg
sub
dec
int
out
or
(bad)
rol
inc
push
dec
loopne
xor
mov
movs
call
or
out
sub
aaa
jg
outs
rcl
cmp
mov
adc
and
push
inc
dec
imul
js
inc
push
jb
fcomp
mov
shl
cmps
cwde
pop
or
out
mov
mov
dec
fmul
mov
pushf
in
pop
and
ins
cmp
mov
jo
icebp
xor
call
mov
dec
clc
test
sti
or
retf
(bad)
jge
pop
xchg
xchg
in
aam
dec
nop
cmp
mov
in
mov
add
sbb
fsubr
xchg
int
sub
daa
mov
outs
mov
xchg
mov
pop
cli
lea
fcmovnu
mov
lahf
xchg
nop
ds
mov
jg
sbb
xchg
or
fistp
jnp
dec
dec
xlat
cmp
xchg
adc
adc
data16
pop
xchg
mov
jecxz
pusha
sub
nop
test
mov
pop
sub
push
mov
in
sub
xor
(bad)
xor
dec
xor
test
div
sbb
(bad)
cmp
add
hlt
push
dec
lock
xlat
adc
xor
sbb
les
jge
test
aas
test
sbb
sub
cmp
add
icebp
nop
clc
pop
jge
jecxz
sub
aas
push
mov
fwait
into
mov
imul
inc
adc
stos
jmp
outs
mov
cmp
xchg
call
ds
inc
(bad)
or
mov
inc
movs
imul
and
jne
or
aas
jecxz
jns
cmp
les
inc
(bad)
push
and
inc
sbb
test
mov
pop
inc
xchg
fsub
inc
adc
add
shl
fninit
shl
(bad)
stc
cmp
cmps
retf
pop
pop
xchg
scas
stos
cdq
sbb
or
pop
stos
mov
inc
cmp
(bad)
sbb
sti
call
ja
retf
hlt
test
mov
push
mov
mov
out
cmp
cmp
inc
sub
enter
xor
enter
fld
cmps
cmp
cmp
ret
push
xor
sbb
mov
mov
movs
gs
mov
daa
retf
add
push
xor
mov
hlt
cmp
and
xlat
cli
daa
call
push
fild
mov
nop
mov
clc
jo
mov
icebp
not
out
or
dec
cmp
cld
(bad)
sar
push
xchg
lock
stc
xchg
ins
mov
xchg
shl
das
mov
dec
lods
mov
pop
fisttp
push
es
sbb
xor
adc
aad
prefetchw
(bad)
sar
mov
call
call
ret
adc
push
xor
jge
add
pop
or
rol
push
cmp
iret
and
movs
adc
add
ret
jmp
sub
pop
sub
mov
ds
push
or
or
pushf
outs
cmp
stos
sub
imul
scas
mov
rol
pop
or
div
ja
test
mov
jae
ins
outs
clc
dec
das
gs
adc
add
cmp
data16
lds
mov
cmp
pop
push
or
inc
inc
mov
push
cmc
and
iret
cmp
or
cwde
outs
sbb
xchg
mov
push
inc
pushf
cdq
loopne
mov
loopne
adc
xchg
inc
lds
leave
retf
data16
addr16
jb
in
lods
inc
nop
sbb
popf
rol
(bad)
jo
out
sbb
enter
bound
sub
sar
or
pop
test
mov
sar
rol
sub
sbb
retf
cs
pop
retf
xchg
mov
ins
js
rcr
jns
push
(bad)
out
xor
lea
add
cmp
sti
jg
ja
adc
ins
xchg
xor
stos
inc
mov
mov
and
pusha
hlt
ins
loop
add
dec
sbb
mov
movs
jns
jp
lea
pop
adc
pop
inc
pop
call
inc
add
out
sahf
xchg
pop
push
or
leave
cli
push
lock
cdq
fs
inc
jecxz
(bad)
fwait
cmps
jecxz
iret
inc
and
mov
add
lahf
sbb
pusha
fsubr
lds
mov
or
cmp
mov
pop
xor
jmp
push
mov
pushf
cld
nop
jae
push
sub
frstpm(287
dec
cmps
push
dec
and
(bad)
mov
pop
lock
imul
inc
push
jne
and
jp
xor
out
jmp
ret
ss
imul
jae
jae
dec
loope
jle
adc
xor
sbb
xchg
stos
retf
(bad)
mov
outs
sbb
pop
addr16
ror
test
push
jge
lods
inc
and
ins
push
mov
jmp
jge
jl
push
and
mov
sbb
popa
nop
mov
xlat
push
and
and
(bad)
pop
xchg
cmps
(bad)
ins
leave
mov
sti
fld
push
sbb
jg
lock
aam
jg
sub
aad
arpl
inc
mov
fcom
into
mov
sbb
into
popf
call
push
pop
aas
es
iret
dec
and
lock
mov
out
cwde
and
dec
mov
cs
in
cmp
je
sbb
daa
push
xchg
jbe
(bad)
sbb
push
js
push
loope
dec
loopne
and
sub
test
or
cmp
int3
(bad)
icebp
pop
dec
add
in
push
in
cmp
in
sbb
xor
dec
jbe
xchg
push
jmp
popf
inc
mov
lahf
mov
in
int
into
movs
repnz
iret
scas
aas
fisttp
sbb
push
mov
push
(bad)
push
das
sub
and
mov
pop
pop
sub
retf
adc
inc
dec
xchg
or
cmc
dec
test
xor
fwait
mov
test
fnstcw
int
clc
test
dec
mov
call
mov
fwait
pop
jno
pop
xlat
ins
or
stos
bound
mov
adc
add
fild
popf
xchg
lods
nop
pop
pushf
rcr
sti
push
lahf
jle
out
icebp
jb
sbb
out
jae
aad
call
loop
(bad)
pop
fst
and
rcr
and
pop
push
fld
test
dec
les
mov
sub
xchg
movs
ret
pop
mov
out
adc
(bad)
out
cwde
aam
xchg
popf
pop
adc
unpcklps
dec
xor
or
push
push
jb
je
mov
ja
pop
inc
test
fisubr
js
push
jae
imul
test
icebp
pop
jnp
inc
cli
cmc
outs
and
ret
mov
adc
jno
or
inc
mul
int3
mov
mov
test
or
cmps
sub
aad
lea
repz
mov
outs
xlat
add
sub
leave
pop
add
aam
fbld
dec
nop
pop
fucom
data16
jb
outs
in
mov
inc
xor
in
add
outs
xor
hlt
push
jne
shr
movs
pop
and
and
call
lods
test
xchg
dec
call
xchg
ficomp
mov
jne
push
test
dec
aas
lods
xchg
ins
dec
inc
aam
jmp
mov
push
loopne
pop
repnz
scas
mov
jmp
dec
retf
in
xor
dec
sub
cmc
or
loop
xchg
fmulp
xchg
std
je
aaa
mov
or
outs
loop
and
pop
inc
cwde
push
sub
pop
int3
out
mov
xchg
fcomp
cmps
push
mov
dec
mov
cmps
dec
lea
mov
cmp
jge
pop
int
fwait
test
sbb
test
xchg
jb
scas
mov
add
dec
cwde
sub
sbb
pop
add
mov
inc
xor
repz
xchg
(bad)
jbe
ds
mov
loop
pushf
inc
cld
arpl
dec
inc
or
daa
mov
or
and
mov
shr
inc
pop
in
lods
xor
xor
mov
sub
les
test
test
push
ja
imul
add
pop
mov
ret
jnp
popa
cmc
movs
or
push
cmp
or
sub
out
ret
pushf
mov
je
dec
fnsave
test
sub
sbb
(bad)
clc
xchg
mov
repnz
pop
dec
jmp
(bad)
pop
ins
mov
cmp
(bad)
cmc
inc
mov
loope
in
jmp
sbb
sbb
jae
das
xchg
and
rcr
(bad)
test
pop
daa
ins
xchg
shl
xor
adc
cmp
ret
push
(bad)
adc
push
pop
(bad)
pop
shl
cmp
cmp
pop
cmp
ret
cmp
inc
mov
mov
out
and
xchg
adc
pop
xchg
outs
mov
imul
sbb
aad
jmp
xchg
in
jmp
les
ds
pop
clc
sbb
mov
in
fs
sub
dec
into
stos
jmp
mov
imul
and
dec
add
inc
pop
cld
add
rcr
ficom
xor
clc
scas
and
repz
add
lds
push
jb
sub
ins
mov
stos
test
fstp
rol
cmp
inc
mov
adc
mov
push
jmp
ss
mov
ins
adc
mul
sbb
cs
lods
or
aaa
jnp
test
test
nop
stos
and
jne
int3
bound
movs
fdiv
and
mov
shl
sub
xor
pop
or
jns
jl
sbb
imul
adc
fidiv
adc
mov
je
adc
or
xor
pop
or
retf
mov
aad
jo
sub
mov
dec
jp
adc
inc
pop
add
cmp
pop
adc
push
idiv
into
push
jmp
add
retf
daa
cmps
ds
(bad)
sbb
ret
mov
xchg
sti
lods
loopne
pushw
mov
xchg
cmps
ja
jecxz
inc
punpckhdq
imul
jb
or
cli
jnp
inc
mov
sti
in
xsavec
loopne
in
or
push
stos
lock
dec
and
mov
xchg
adc
push
ins
sub
ret
fisttp
and
(bad)
fwait
mov
dec
xchg
dec
les
xor
xchg
mov
xchg
sub
or
push
adc
push
rol
dec
call
pop
dec
dec
in
pop
call
and
in
sbb
outs
dec
fwait
jno
mov
cmp
xor
(bad)
mov
fmulp
xchg
adc
fidiv
ror
pop
mov
jae
not
jmp
mov
leave
mov
mov
dec
pop
outs
pop
and
lods
mov
call
aam
pop
push
adc
inc
hlt
cwde
fs
out
jle
aas
stc
pop
in
imul
ffreep
add
(bad)
push
inc
sahf
(bad)
lahf
xor
aaa
(bad)
js
iret
jo
sbb
jnp
aaa
mov
mov
ret
adc
mov
jo
fisubr
sub
mov
fs
call
jbe
push
aam
aaa
inc
movs
jp
in
jae
(bad)
push
aad
mov
mov
pop
ldmxcsr
add
sub
pop
mov
test
addr16
xor
stc
mov
int3
cmp
jbe
adc
stos
jl
popa
ins
or
cmc
sbb
pop
adc
ret
push
xor
xchg
cs
out
push
xchg
mov
mov
mov
fistp
mov
xchg
outs
and
mov
loop
out
aam
pop
popf
jb
inc
cmp
lea
loop
rol
loope
xchg
test
xchg
(bad)
mov
js
push
lahf
and
mov
inc
push
add
cmc
imul
jbe
xor
(bad)
out
sbb
pop
sub
jne
xchg
dec
aad
sub
(bad)
xlat
mov
mov
xchg
out
repnz
xor
xor
dec
loopne
sti
aam
add
in
adc
dec
cli
lea
mul
aad
(bad)
or
pop
xor
xchg
loop
push
adc
popf
ds
jmp
(bad)
cmps
push
imul
test
xchg
imul
mov
repnz
faddp
leave
pop
push
jmp
dec
lock
dec
sub
xor
pop
add
add
not
cmp
mov
cmp
loope
pop
mov
cdq
add
fistp
outs
shr
push
push
or
mov
mov
push
lods
movs
jo
push
xchg
dec
inc
add
adc
or
adc
cld
(bad)
dec
shr
out
fimul
cdq
pop
xchg
pusha
xor
adc
stos
dec
mov
sbb
xor
dec
adc
popa
cmps
or
jge
fnstenv
inc
mov
dec
xor
sub
fwait
lock
push
test
push
fs
fild
xor
bound
push
jg
in
jne
rcl
mov
leave
lea
leave
stc
mov
mov
lods
dec
mov
arpl
xchg
outs
addr16
(bad)
sbb
push
enter
cld
dec
sub
outs
push
pop
ror
inc
rsqrtps
cmp
push
add
mov
jb
ret
mov
nop
lds
mov
pusha
mov
sub
sbb
or
push
xchg
lea
es
enter
xchg
lds
lahf
add
retf
pop
add
xchg
mov
xchg
mov
cli
retf
inc
cdq
xchg
mov
push
cmp
(bad)
jnp
adc
mov
pop
fadd
imul
ret
jne
xor
and
test
push
jmp
pop
mov
cs
adc
xor
mov
daa
iret
push
jl
sbb
mov
mov
sub
cmp
dec
adc
adc
jbe
add
retf
(bad)
(bad)
ds
or
dec
out
ror
mov
and
mov
sub
dec
out
mov
movs
mov
push
xchg
pop
jge
je
(bad)
cli
cdq
push
fcom
xor
cmps
jg
mov
sub
cmp
sbb
jae
sbb
mov
imul
jno
pop
leave
push
push
es
sar
imul
(bad)
out
jae
dec
mov
mov
xor
idiv
loopne
inc
lock
or
mov
bound
add
sti
fisttp
mov
dec
(bad)
in
fldenv
mov
mov
call
adc
sub
xchg
mov
push
iret
pop
cs
jnp
les
dec
add
fstp
jno
outs
mov
shl
not
mov
jg
scas
stc
adc
cmc
jb
inc
sti
sbb
fstp
das
sti
ficom
shr
das
mov
in
xor
in
cmp
push
sbb
ds
(bad)
out
test
arpl
int
mov
call
fistp
pop
fsub
nop
fsub
sub
fist
add
cmp
cdq
daa
and
std
fcmovbe
adc
lahf
push
push
push
dec
mov
and
repz
sbb
pop
in
dec
jmp
sahf
pop
ficom
outs
and
pop
outs
sub
das
sub
xor
jno
or
arpl
mov
lock
std
add
enter
in
pop
cmp
and
xchg
imul
test
cmp
inc
out
icebp
ins
and
(bad)
fcmovu
push
xchg
in
xor
ins
lods
loopne
jp
repnz
and
dec
into
shr
imul
inc
pop
dec
and
and
aas
push
pushf
sub
and
bound
pop
push
jge
pop
jne
jge
ret
das
jnp
out
mov
add
mov
into
dec
sub
push
sub
popf
les
rcl
lahf
jne
aaa
mov
stos
xchg
mov
sub
push
jns
(bad)
sub
pop
xchg
imul
sub
arpl
and
mov
cdq
mov
pusha
xor
shl
push
jae
push
xor
movs
xchg
jp
mov
xor
adc
div
mov
xchg
sbb
and
inc
add
out
out
sbb
sub
lods
or
daa
mov
add
mov
movs
nop
ins
mov
jo
fwait
mov
add
xchg
push
sbb
out
sub
sub
mov
dec
dec
pushf
dec
ret
js
loop
adc
inc
sub
test
stos
out
mov
and
mov
ret
outs
sub
rcr
je
arpl
or
in
jmp
sub
or
out
jae
pop
add
or
push
out
(bad)
je
scas
jecxz
add
enter
dec
fdiv
lds
pop
xor
jg
xchg
jnp
inc
push
mov
repz
mov
lods
fidivr
xchg
or
pop
or
hlt
mov
add
mov
jno
in
jecxz
(bad)
ret
jle
mov
mov
or
or
inc
or
pop
dec
mov
ror
mov
and
xor
repz
je
add
sar
push
and
pop
sub
jge
fs
mov
xor
stos
mov
popf
clc
fsub
sub
add
pop
stos
and
dec
shr
sub
add
out
outs
ror
in
and
lds
inc
jb
sub
inc
popf
inc
xchg
call
lock
xchg
jbe
and
add
(bad)
add
sbb
test
gs
add
(bad)
adc
xchg
cmps
shl
push
mov
out
xlat
repnz
pusha
sbb
push
(bad)
push
push
dec
mov
dec
mov
xchg
push
and
lock
pop
mov
in
cmp
popa
in
mov
dec
add
mov
rol
out
xor
popf
call
stos
xchg
inc
and
inc
push
shl
div
jp
lea
jbe
retf
xor
mov
jp
dec
(bad)
push
push
push
shl
ins
jmp
outs
out
int3
ror
iret
gs
inc
cwde
mov
ficom
std
cmps
pop
out
popf
xchg
xlat
inc
dec
jbe
stos
shl
xor
test
add
xchg
and
pop
or
mov
test
iret
sti
ret
xlat
and
lea
cmp
loopne
(bad)
aad
and
in
mov
jl
iret
mov
mov
jmp
push
push
(bad)
sub
out
(bad)
hlt
adc
sub
xchg
or
(bad)
test
ins
mov
pop
inc
int3
mov
mov
cs
fdiv
or
push
dec
pop
and
leave
cmp
mov
fistp
mov
pop
sub
mov
enter
adc
inc
out
xchg
xor
retf
movs
bound
push
lahf
fxtract
pop
stos
push
inc
mov
jb
aaa
das
es
jge
xor
cmp
fimul
out
fild
pop
xcrypt-cfb
cmps
loop
and
adc
retf
(bad)
ret
mov
nop
sbb
xor
push
inc
xchg
xchg
popf
mov
cld
loopne
mov
aam
jns
add
loope
jmp
sbb
inc
pushf
mov
add
sbb
and
bound
stos
sar
cmp
sahf
inc
data16
retf
dec
mov
js
inc
out
fs
stc
mov
pop
daa
add
(bad)
int3
bound
cmps
add
push
ja
ins
push
pop
and
xchg
cli
retf
(bad)
mov
mov
icebp
fild
xchg
ret
dec
(bad)
or
mov
enter
imul
movs
call
(bad)
pop
jae
fwait
jge
sahf
in
out
sbb
cmp
loopne
or
xchg
dec
daa
pop
push
jle
repz
retf
xchg
jno
sub
and
imul
add
retf
aas
sti
and
jg
pop
icebp
jmp
ins
lods
add
inc
cmp
push
and
nop
mov
jae
or
mov
lahf
ret
into
cmp
inc
sbb
or
lock
je
call
fs
sub
xor
push
aaa
out
cdq
xchg
das
aam
dec
adc
adc
mov
sub
aaa
dec
in
inc
add
sub
xor
ds
les
or
or
daa
mov
stos
test
mov
stos
rcl
xlat
and
jg
mov
jmp
call
and
ins
ret
push
cmps
or
dec
jb
push
jbe
outs
adc
inc
sub
mov
enter
inc
sbb
movs
repnz
or
mov
mov
out
push
stos
add
into
sti
stos
mov
cmps
push
pop
jg
mov
(bad)
out
push
mov
shl
mov
jmp
arpl
shl
cmp
sahf
loope
in
sub
pop
jg
and
call
fwait
mov
inc
push
dec
test
xor
bound
inc
lea
adc
xchg
jmp
pusha
xchg
ret
mov
pop
mov
jg
test
out
aad
stos
ret
inc
retf
fsubr
or
addr16
mov
add
ja
ja
fs
xlat
mov
or
dec
cmp
daa
and
mov
je
fs
cli
push
js
sar
loope
iret
fcom
out
imul
(bad)
adc
dec
jp
mov
cdq
das
js
(bad)
test
(bad)
fcom
push
div
xlat
xchg
sbb
stos
(bad)
mov
jl
sub
movs
sub
mov
jmp
mov
in
push
mov
push
xchg
push
cs
xlat
ret
loopne
je
jo
mov
adc
and
retf
push
adc
mov
mov
int3
and
nop
fwait
xor
cmp
add
sbb
not
ret
adc
xchg
push
cdq
cmp
in
call
call
xor
aaa
fwait
mov
data16
cmp
je
fst
add
adc
dec
fwait
add
fs
sbb
or
mov
out
adc
dec
xchg
div
cld
push
sub
or
mov
movs
es
addr16
retf
mov
movs
adc
(bad)
or
sbb
imul
jbe
stos
(bad)
test
daa
cld
xchg
add
loopne
cwde
push
aas
mov
in
push
les
iret
and
jne
dec
loopne
in
mov
mov
add
ds
adc
mov
or
adc
inc
iret
xchg
out
sti
mov
mov
mov
je
fnsave
xor
adc
aad
add
adc
cdq
dec
cmp
icebp
cmp
test
mov
cmps
pop
xor
pop
mov
daa
sub
les
(bad)
jmp
ret
mov
cmp
fidivr
loope
arpl
sub
xchg
fwait
rcl
cmp
inc
or
sub
imul
popf
(bad)
adc
pop
cmp
int3
arpl
mov
sub
inc
or
bound
pop
mov
push
adc
rcr
fcmovnu
push
lea
dec
xchg
add
sbb
ret
dec
pushf
pop
push
pop
sub
lods
cmp
rcl
jo
and
outs
jle
inc
aas
lds
call
jne
pushf
popf
fistp
call
or
mov
call
arpl
imul
mov
add
movs
stos
cmp
cmp
repnz
jecxz
outs
inc
in
rol
mov
test
jecxz
mov
xor
inc
sar
xor
xchg
push
inc
inc
mov
mov
rcr
xor
repz
sub
ja
sbb
sub
pop
push
iret
pop
out
sbb
ret
jmp
sub
idiv
arpl
test
sub
sub
mov
fcom
fimul
pop
push
leave
push
ja
cs
in
dec
ins
jg
xchg
and
test
xlat
cmp
fild
cmp
into
mov
xor
ins
(bad)
or
jne
xchg
and
jge
xchg
(bad)
scas
fdivr
dec
icebp
dec
pusha
dec
xchg
ds
jae
cmp
inc
jno
fadd
je
adc
mov
dec
in
push
xchg
xor
popf
cmp
or
in
inc
ret
xor
scas
fist
push
push
inc
aad
sub
sar
cmovg
test
lds
or
mov
cmp
fbld
daa
adc
fld
shr
stos
ret
mov
in
and
mov
sub
mov
sti
xchg
scas
mov
out
mov
imul
icebp
push
scas
fwait
cdq
aaa
mov
rcl
cli
icebp
mov
test
test
ret
inc
call
xor
jmp
dec
loop
cmps
pushf
jo
sub
fsubr
xchg
or
xchg
push
dec
outs
stos
repnz
pop
mov
adc
psubusb
stc
sbb
inc
cld
push
out
inc
mov
cmp
mov
sahf
mov
mov
js
mov
mov
dec
gs
enter
sbb
pop
sbb
lods
mov
inc
mov
fcomp
mov
sub
fist
(bad)
in
xor
je
(bad)
repz
mov
jne
call
test
cld
test
jbe
lods
dec
fdivr
adc
cmp
int3
pop
xor
sar
popf
sbb
xor
ss
mov
add
adc
aaa
adc
cli
xor
or
xor
jg
shl
xor
dec
(bad)
sub
(bad)
sti
or
inc
ret
pop
xor
or
push
cmp
xlat
aas
in
lea
jne
mov
add
adc
sbb
lea
mov
mov
adc
and
push
mov
xor
push
fstp
js
pop
or
xor
addr16
push
(bad)
jae
call
jne
stos
and
je
aas
sbb
push
xor
lahf
mov
aad
cmp
(bad)
dec
cmp
xor
iret
daa
test
inc
sbb
fbld
movs
jne
into
hlt
stos
dec
retf
aaa
push
adc
cdq
jbe
sub
xchg
or
adc
aas
jno
lea
and
inc
push
out
mov
mov
push
out
sahf
mov
icebp
adc
sub
arpl
sub
pusha
push
push
sbb
sbb
not
in
stos
mov
cmps
leave
imul
retf
cld
inc
mov
push
outs
out
sbb
leave
mov
fmul
dec
jecxz
inc
test
jp
movs
jo
(bad)
mov
std
nop
js
pop
pop
gs
jmp
ret
arpl
xchg
mov
mov
enter
fnstsw
ja
add
xor
mov
arpl
fs
std
or
push
sub
cmc
mov
(bad)
loopne
jmp
dec
mov
sub
lods
rcl
mov
les
push
fs
xor
add
sahf
xor
push
sub
je
nop
jo
pop
out
test
cmp
aaa
add
and
sub
mov
aad
push
dec
ror
sbb
bound
jne
mov
(bad)
in
xchg
mov
add
or
or
mov
adc
mov
cmp
pop
sar
das
mov
std
fnstenv
retf
sahf
int
sub
(bad)
jno
mov
pop
push
retf
and
loopne
lods
pop
xchg
jle
addr16
add
sbb
or
inc
test
add
jecxz
or
dec
fmulp
sub
adc
pop
ret
and
xchg
dec
xchg
jle
inc
mov
adc
movs
dec
pushf
int
(bad)
repz
cs
aas
in
xchg
sub
jp
stos
imul
std
std
cmp
ret
adc
inc
js
and
icebp
pop
inc
dec
xlat
mov
cvtps2pi
pushf
cmps
test
dec
test
and
push
xor
mov
or
test
inc
ss
cmp
push
lahf
push
fxch
jbe
mov
xor
fstp
xchg
mov
mov
test
jle
pop
mov
sbb
cmp
push
test
mov
fist
fist
cli
icebp
or
lea
das
mov
xlat
xchg
xchg
mov
aas
xchg
leave
push
lods
and
jg
(bad)
xchg
sbb
xor
jl
sbb
inc
imul
xchg
(bad)
cmc
hlt
vpsllw
loope
aas
shl
inc
sbb
dec
dec
push
xor
mov
(bad)
cmp
pop
mov
sbb
inc
inc
dec
ret
lds
arpl
sub
pop
imul
inc
add
sub
sbb
repz
retf
sub
sbb
or
push
pushf
mov
inc
(bad)
in
add
or
std
adc
aas
inc
shl
xchg
int
sub
mov
push
cmp
xchg
popa
cmp
nop
aam
dec
pop
jno
int3
jo
push
fild
test
arpl
xchg
aas
push
int
mov
lods
lods
je
xchg
jns
aam
xchg
add
cmp
retf
loopne
movs
jle
inc
hlt
imul
push
pop
jp
js
cld
clc
dec
inc
inc
repz
cmp
xor
or
loope
xlat
popf
and
cmp
cli
mov
fcom
movs
inc
lods
inc
out
mov
je
mov
je
sbb
popf
popa
cmp
nop
push
push
popa
sub
mov
fld
lea
jb
mov
mov
clc
(bad)
lock
jl
clc
inc
mov
xchg
clc
sub
mov
out
xchg
sbb
fld
aaa
cmps
fdiv
jmp
jp
ret
rol
loop
mov
stos
inc
(bad)
push
fbstp
sbb
bound
jnp
fcmove
popf
push
jns
jecxz
(bad)
xor
jb
fs
(bad)
icebp
ins
shl
inc
inc
inc
outs
leave
mov
(bad)
jb
jno
add
in
test
pxor
lods
cmp
les
jecxz
pop
pop
dec
daa
lods
aad
mov
mov
sub
pop
bound
mov
adc
sbb
mov
aaa
in
dec
pop
hlt
aaa
pop
inc
inc
lods
ret
inc
out
and
fcom
pop
int3
repz
mov
scas
xlat
jo
cmp
mov
repnz
int
in
in
adc
out
add
arpl
jp
aaa
fcomp
movs
xor
jp
jno
fisttp
(bad)
das
pop
and
shl
sbb
daa
dec
test
(bad)
pop
or
cmp
inc
dec
retf
pop
shl
sub
mov
push
pop
mov
pop
(bad)
xchg
fs
add
mov
inc
mov
test
push
mov
gs
sub
dec
jo
pop
lds
ins
cdq
out
mov
and
push
data16
cmp
cmps
xchg
jmp
lea
(bad)
into
out
in
imul
add
clc
repnz
xchg
aad
stos
jmp
aam
pop
popf
xchg
inc
jmp
xchg
movs
(bad)
mov
aad
and
stc
sub
out
xor
fs
daa
pop
push
xchg
psllq
add
inc
add
in
loopne
push
and
daa
mov
xchg
mov
ins
data16
mov
sub
and
aaa
in
test
fdivp
xchg
mov
shr
fwait
ins
pop
push
pop
ret
aas
out
js
sbb
cmp
mov
and
jae
lock
sbb
xchg
loop
adc
fldcw
in
mov
lods
lahf
imul
ret
repz
movs
xchg
inc
dec
aad
jno
mov
sahf
repz
dec
arpl
and
pop
mov
je
in
in
dec
fucom
jecxz
pop
mov
cmps
push
jo
inc
pop
add
mov
rol
inc
into
mov
fs
retf
out
pop
lock
idiv
sub
sbb
push
mov
daa
test
xor
add
mov
push
(bad)
fsub
nop
hlt
or
dec
int
sbb
fild
dec
pop
sbb
mov
mov
stc
test
mov
cdq
add
dec
mov
mov
pop
ss
xor
daa
jno
add
pop
dec
call
xchg
inc
inc
ret
dec
test
pop
xchg
mov
dec
sub
ds
lea
xchg
imul
fldenv
shr
cs
not
jecxz
data16
and
fisttp
mov
mov
pop
fwait
shr
adc
or
cmp
cmp
test
jns
push
add
call
retf
out
xchg
jl
movs
push
daa
push
adc
sbb
sbb
mov
pop
pop
push
pop
xor
hlt
popa
push
add
and
xchg
mov
mov
and
(bad)
push
jns
adc
hlt
cmp
xchg
mov
outs
fdivr
inc
imul
arpl
cwde
xor
mov
test
pop
xor
push
cld
(bad)
sbb
ja
mov
xchg
jmp
int3
ins
daa
pusha
repnz
bound
mov
sti
and
ror
fnstsw
cmp
mov
lahf
add
xor
mov
les
bound
jl
loope
je
or
push
jp
ins
in
pop
pop
or
and
sbb
pop
push
enter
and
jmp
adc
mov
add
lods
push
fst
daa
out
mov
cli
jmp
mov
mov
cs
call
jge
ficomp
dec
ins
retf
fcmovnb
jl
scas
sahf
popa
push
out
test
push
inc
std
(bad)
aas
icebp
sbb
sbb
lds
(bad)
inc
(bad)
test
jmp
sti
stos
es
xor
(bad)
jns
and
out
add
mov
out
mov
fidivr
or
ror
adc
adc
mov
jbe
or
shl
jnp
stc
les
add
mov
adc
add
repz
daa
iret
loopne
es
shr
pop
dec
inc
dec
or
sub
add
sbb
cdq
push
loope
lds
dec
jnp
cmp
sub
mov
pop
jbe
out
and
fdivr
(bad)
(bad)
js
cld
dec
mov
jge
test
sub
dec
icebp
sbb
mov
sbb
and
std
jae
repnz
int3
pop
jbe
jno
mov
inc
fsubr
mov
add
xor
test
pusha
std
outs
std
cld
xchg
push
nop
adc
sbb
dec
push
test
push
sub
xchg
rcr
std
push
mov
sub
cli
adc
fimul
add
call
and
jae
mov
cmp
mov
leave
mov
movs
jecxz
inc
std
push
das
sub
hlt
in
cmps
sub
cs
std
jns
mov
retf
jbe
mov
or
dec
cld
stos
(bad)
fs
adc
into
fild
adc
mov
jno
lods
cli
fmulp
sub
gs
fdiv
cld
and
mov
out
inc
arpl
(bad)
adc
fcomp
pop
sub
inc
in
add
sub
das
ja
lds
xor
push
aaa
mov
mov
add
sbb
cld
or
dec
mov
scas
push
sahf
cwde
adc
cmp
mov
dec
lock
cmps
movs
xor
fld
push
pusha
cld
pop
add
push
ds
sub
(bad)
pop
mov
cmp
fwait
xor
mov
pop
cmp
push
stos
rol
test
out
xchg
aam
iret
stc
inc
sub
mulps
daa
mov
add
mov
in
lock
vminsd
in
jg
call
push
scas
pop
repnz
inc
cmp
sub
iret
rol
ds
jg
aas
jb
xor
jmp
ja
inc
cmp
les
loope
aad
lock
and
dec
loope
sbb
pop
in
ds
xchg
adc
jge
cmp
repnz
xor
push
xlat
cmps
dec
xchg
or
lds
in
dec
mov
fst
aad
cld
push
in
sti
cld
lea
test
pop
push
pop
sbb
sbb
sbb
popa
and
adc
push
cmp
jmp
cmp
movs
iret
nop
push
cli
mov
pop
add
shl
cmps
inc
aam
xor
pop
stos
xchg
shl
cmc
lods
adc
loopne
idiv
neg
push
pop
jb
mov
sbb
mov
ret
stos
std
lock
dec
ins
xchg
mov
mov
add
out
addr16
data16
sub
add
sub
sub
cmp
inc
cmp
into
test
xchg
lock
sahf
cdq
out
fist
ror
add
and
or
or
jne
lods
popa
ss
(bad)
mov
jmp
xlat
std
enter
loopne
icebp
or
fistp
jbe
pop
adc
fdivr
pushf
mov
fdivr
rol
test
xor
sub
les
ret
pusha
call
push
cmp
mov
push
(bad)
mov
daa
mov
mov
in
scas
fsubr
(bad)
mov
cmp
jl
fwait
jmp
pushf
mov
retf
xchg
cmc
aam
gs
jns
mov
pop
in
dec
ror
xlat
mov
shl
popa
xchg
push
inc
adc
mov
fdiv
and
sub
and
test
adc
and
dec
cli
addr16
aam
add
call
or
cmp
cmc
pop
inc
ror
jmp
add
leave
aam
in
ds
rcr
icebp
pop
sbb
jmp
push
fcmovnu
aas
cmp
jp
mov
xchg
jecxz
ret
cmps
stc
jno
hlt
mov
fstp
adc
ins
into
mov
mov
pop
ror
std
repnz
in
dec
imul
inc
push
dec
lock
sbb
sub
ins
adc
and
jle
dec
aaa
push
das
push
cmps
popf
jmp
pop
fist
ficomp
sub
sbb
shl
lock
jno
and
mov
or
inc
pop
mov
fstp
jnp
es
cli
es
(bad)
pop
lods
xchg
cmps
mov
sub
ss
cld
and
ins
pop
push
and
shl
icebp
(bad)
or
inc
mov
test
inc
data16
cmps
mov
lds
cmp
mov
retf
lods
mov
xchg
hlt
cmp
xchg
mov
les
push
fcmovu
nop
and
stos
and
inc
adc
rcr
adc
mov
mov
inc
and
cmps
and
dec
cs
ret
dec
jmp
jmp
xchg
or
or
mov
cmp
push
popf
sti
or
cmp
sbb
mov
pop
popf
sub
add
dec
bound
or
rol
adc
mov
out
jbe
ins
cld
xchg
mov
add
retf
lds
jg
clc
cmp
mov
addr16
xor
nop
hlt
cmp
pop
je
(bad)
or
dec
dec
ins
mov
adc
xchg
dec
fld
jne
stos
shl
outs
bound
jae
sub
ins
ins
pop
pushf
fcmovbe
inc
xor
inc
xchg
call
rcl
pop
not
cmp
mov
lahf
fdivr
push
scas
push
mov
cmp
xor
sub
jecxz
test
outs
xor
outs
bnd
and
dec
ins
ds
dec
add
popf
inc
jge
std
pop
mov
fimul
out
test
cli
adc
mov
imul
clc
pusha
or
pop
pushf
or
(bad)
cli
mov
sbb
lods
mov
into
pop
push
dec
jl
inc
dec
fcomi
test
adc
cmp
ins
popf
js
sbb
xchg
stc
mov
cmp
(bad)
stc
cmc
pop
cmp
dec
test
jge
fmul
int3
push
pusha
pop
adc
addr16
or
(bad)
gs
add
mov
jb
jo
xor
jp
loopne
xor
xor
pop
mov
arpl
rcr
xchg
pop
jle
mov
cmp
cmc
(bad)
fistp
ja
inc
(bad)
in
jmp
outs
sar
test
movs
sbb
test
jmp
jmp
adc
ror
idiv
inc
sbb
xchg
fwait
mov
outs
sub
inc
xchg
sbb
dec
jle
xchg
fldenv
(bad)
aaa
xor
pop
xor
push
and
mov
test
sbb
(bad)
popf
pop
movs
sub
sub
(bad)
popa
popf
pop
fild
mov
push
fild
leave
jns
loope
pop
pop
push
push
jecxz
xchg
in
sbb
xor
mov
mov
adc
das
jae
xchg
jl
pop
xchg
mov
fldenv
pop
dec
or
xchg
fs
loope
cmp
rcl
mov
push
fcmovnb
and
mov
andnps
push
in
outs
pop
ins
pop
jbe
jnp
cdq
sbb
aas
adc
cmp
rcr
pop
outs
inc
loop
cli
lods
adc
pop
in
dec
loop
and
adc
mov
xchg
push
xchg
jge
popa
dec
sub
aad
mov
jecxz
aam
mov
xor
arpl
rcr
in
out
adc
and
nop
ins
mov
fcomip
sahf
das
call
cmp
or
fisttp
icebp
ds
lea
lods
jge
add
xchg
sbb
xor
repz
mov
test
sub
data16
push
mov
push
stos
pop
dec
cwde
pop
and
and
push
out
sub
js
(bad)
pop
xchg
lahf
stos
ds
shr
fisttp
outs
cwde
loope
int
(bad)
mov
movs
lahf
mov
add
xchg
into
mov
or
call
loope
test
pushf
pop
cmp
out
xchg
push
mov
ins
sbb
push
sub
mov
or
sub
xor
sbb
pop
push
jb
clc
push
das
and
fisub
mov
adc
jle
xlat
sbb
mov
adc
pop
add
pop
sbb
arpl
dec
loop
lods
mov
movs
icebp
inc
xchg
(bad)
xlat
dec
xlat
add
and
or
inc
and
les
mov
repnz
xchg
and
mov
pusha
je
repz
imul
jmp
inc
jo
jmp
dec
icebp
ret
adc
sbb
fs
sti
sbb
jmp
mov
loop
lods
aaa
mov
mov
fidivr
shr
loopne
mov
les
or
xor
mov
mov
dec
clc
test
cmp
xor
mov
inc
jmp
pop
in
cmp
ins
bound
loope
call
out
adc
das
mov
jle
scas
adc
jmp
inc
pop
dec
dec
xlat
pop
xchg
repnz
out
movs
cmp
jg
in
pusha
lock
xchg
mov
or
das
cwde
sub
clc
adc
xchg
dec
loopne
(bad)
cld
sub
imul
mov
cmp
enter
mov
xchg
bound
lock
pop
jb
push
jno
xlat
std
ds
mov
inc
je
cmp
lock
sub
call
frstor
retf
sub
jae
xchg
jns
inc
pop
mov
and
mov
xchg
pusha
inc
stos
mov
xor
inc
mov
mov
mov
jmp
pop
pop
jmp
push
add
pmulhw
mov
pop
add
sub
stos
and
dec
push
imul
es
and
fdiv
inc
aad
ja
repz
fwait
lods
fsubr
and
xchg
popa
xor
mov
(bad)
jne
push
add
inc
jmp
jmp
mov
push
popf
mov
mov
push
cmp
xchg
das
or
ins
(bad)
jae
pop
push
jmp
lahf
ret
fsub
mov
call
push
call
jmp
jmp
push
sahf
das
into
imul
dec
push
data16
gs
xor
(bad)
jnp
or
in
mov
cmp
inc
pop
mov
leave
in
lock
shl
cmp
jne
iret
adc
leave
inc
retf
outs
xchg
stos
or
pop
arpl
and
xor
std
cmp
shr
daa
dec
xor
pop
mov
mov
lods
sbb
test
les
stos
jb
jle
(bad)
(bad)
lock
jg
adc
(bad)
cli
bound
jns
mov
jae
int
and
sbb
call
les
out
xor
jne
or
jns
outs
test
push
cmp
pop
xor
push
call
popa
jecxz
rol
sbb
repnz
adc
int3
mov
aaa
ins
mov
aad
cmps
js
ficom
dec
sub
or
mov
xor
cmc
sub
mov
inc
xor
cmps
jmp
shl
shl
add
inc
dec
jmp
xor
scas
daa
sbb
call
xor
stos
fstp
mov
push
or
in
xlat
pop
imul
xor
ret
int3
cmc
adc
cmps
jecxz
lds
fistp
(bad)
lods
fnstcw
dec
aaa
pop
mul
jecxz
jns
xor
dec
jae
sbb
sbb
movs
push
pop
leave
pop
push
fnstenv
mul
mov
adc
mov
pop
dec
movs
xchg
popa
scas
xchg
test
pop
add
out
push
and
or
ret
outs
and
lods
ds
cmp
pop
int3
int
jecxz
(bad)
or
int3
pusha
xchg
mov
repz
sbb
sub
out
pop
and
mov
scas
mov
push
call
pop
loopne
arpl
sbb
int
mov
push
sub
test
push
adc
pop
and
mov
clc
mov
outs
call
pop
or
in
dec
mov
dec
mov
pop
or
out
stos
inc
jle
jne
push
out
cmp
cmps
mov
mov
gs
adc
out
rcr
jle
or
xchg
dec
xor
movs
out
retf
sub
movs
xor
and
sub
or
dec
rcl
rcl
pop
jecxz
push
sub
icebp
xchg
push
shl
dec
push
mov
loop
mov
mov
mov
ss
aam
dec
dec
add
and
and
sbb
adc
fsubr
xchg
(bad)
lahf
stos
pop
mov
sbb
das
or
call
dec
sbb
outs
cmc
cmp
pop
int3
dec
dec
std
imul
scas
cmp
shl
or
inc
or
stos
inc
cmp
sub
into
jne
pop
pop
ins
repz
into
xchg
ficomp
lds
std
mov
aam
fs
mov
jno
adc
sub
adc
ins
jns
aam
jg
lods
iret
mov
rol
xchg
push
inc
pop
mov
cmc
adc
sar
pop
jl
sbb
fidivr
xchg
ror
adc
pop
push
xchg
mov
xor
mov
xor
scas
ret
mov
add
and
(bad)
shl
or
int3
daa
xchg
in
int3
xor
pop
dec
mov
inc
test
inc
cmp
sar
mov
dec
repz
jns
pop
dec
lahf
inc
sbb
xor
mov
xchg
xlat
mov
add
sub
test
dec
rcl
add
rcr
shl
aam
push
mov
mov
ret
or
adc
sbb
xchg
(bad)
test
push
daa
les
cdq
pop
sub
cmp
xchg
cmc
in
enter
pusha
lea
mov
repnz
jge
mov
int
test
cmp
pop
ins
repz
cwde
int
pslld
(bad)
shr
push
outs
push
rol
sti
push
pop
test
push
jb
inc
or
pop
mov
dec
pushf
xor
cdq
adc
js
outs
mov
scas
jp
les
cmc
dec
int
fdiv
aaa
push
jb
xchg
or
sbb
je
cld
pop
pop
jb
and
jns
fisubr
pop
bt
fld
dec
push
add
push
sbb
mov
int3
test
movs
inc
lods
test
add
retf
shl
jp
or
scas
cmp
or
push
shl
mov
sti
xor
mov
mov
add
aas
xor
push
mov
push
xchg
dec
push
xor
pushfw
xchg
inc
fbld
cmp
ss
div
push
dec
(bad)
ss
out
mov
mov
add
push
add
and
jb
adc
pop
test
retf
xor
ja
fisub
je
adc
lahf
jecxz
retf
mov
sub
mov
test
std
inc
leave
rol
push
sub
jmp
adc
xchg
inc
or
sub
jbe
jp
scas
leave
test
ret
mov
stos
sub
js
outs
mov
fdiv
test
ins
and
push
call
pop
cmp
cwde
xor
mov
adc
(bad)
xchg
adc
call
lahf
imul
stc
inc
jmp
rol
inc
or
or
lea
inc
sub
outs
add
pop
or
push
adc
mov
out
movs
jecxz
mov
cmp
inc
or
fs
jmp
pop
mov
cmc
pop
repnz
movs
movs
mov
or
pop
dec
cmp
bound
xchg
movs
(bad)
mov
inc
loopne
add
pop
in
sahf
loopne
ret
adc
mov
mov
sahf
(bad)
push
xchg
jo
hlt
(bad)
mov
neg
shl
mov
icebp
cmp
jmp
push
aas
cli
sbb
sbb
adc
fisubr
dec
ret
ret
dec
lock
mov
sub
jmp
xor
pop
mov
push
stos
and
inc
xchg
loope
pop
dec
outs
push
add
cmps
(bad)
(bad)
push
cmp
rcl
(bad)
nop
mov
out
int
inc
jmp
fsubr
cmps
bnd
aas
cs
ds
movs
add
jmp
hlt
les
fsub
jae
or
dec
ret
jmp
xor
dec
cmp
out
inc
js
daa
repz
jecxz
and
ins
xor
bound
mov
repnz
es
push
(bad)
fld
add
pop
ins
jne
push
xor
arpl
jns
xchg
push
pusha
shl
mov
fsubr
push
pop
pop
cmp
mov
pop
fmul
test
loopne
add
into
and
movs
int
jnp
mov
push
inc
or
outs
push
push
pop
pop
push
mov
mov
sahf
inc
push
cmp
and
and
int3
cmp
aad
dec
add
or
and
cdq
sahf
cmp
neg
cdq
icebp
xchg
jne
jg
mov
mov
xchg
ins
cmp
je
sti
scas
aam
stos
out
rol
push
add
sub
ret
jp
cs
mov
nop
sahf
retf
stos
pop
dec
add
dec
and
and
into
hlt
dec
jl
or
sub
(bad)
mov
jns
or
int3
lds
jle
loopne
cmps
pop
bound
fstp
jnp
push
cs
jecxz
jg
ins
aas
fs
pop
jnp
dec
xchg
sbb
xor
push
mov
xchg
jne
js
mov
mov
mov
popa
pop
aaa
mov
sbb
or
lds
in
stc
xor
inc
jb
add
mov
mov
push
aam
mov
push
xor
xchg
pop
mov
loopne
inc
fdiv
dec
ins
pop
scas
pop
(bad)
push
mov
push
mov
add
xor
add
jl
cmps
push
xor
je
inc
sub
fidiv
dec
adc
ror
mov
xchg
ins
dec
adc
fnsave
mov
gs
sbb
call
pause
pop
ret
std
lds
scas
dec
and
inc
or
int3
adc
in
aad
pop
or
stc
(bad)
dec
and
pop
push
jmp
jae
push
xchg
cmps
adc
jno
xchg
aas
(bad)
and
rcl
jae
ds
push
mov
mov
pop
repz
std
cmc
cmp
imul
sbb
pop
mov
xchg
les
add
pushf
call
mov
jmp
mov
and
ret
jo
ficom
cmp
lds
addr16
test
es
or
sar
repnz
test
scas
or
mov
stc
out
or
test
sub
mov
cmc
jecxz
xchg
ja
lahf
mov
ja
loop
xchg
call
push
push
adc
sub
lahf
dec
div
lods
mov
in
dec
dec
in
(bad)
sti
rol
ss
jmp
aad
pop
std
push
xchg
lods
adc
leave
mov
xor
or
and
in
pop
inc
into
mov
cs
scas
dec
call
ja
or
sar
and
mov
mov
push
xchg
out
pop
popf
js
mov
and
(bad)
stc
jo
pop
lds
fdivr
sbb
mov
xchg
jl
add
push
aaa
push
or
(bad)
jg
and
repnz
mov
or
mov
jae
xlat
test
fiadd
(bad)
mov
pop
jno
pop
jb
repnz
(bad)
enter
cmp
xlat
not
sub
sbb
jecxz
ja
loope
mov
dec
jo
pushw
push
mov
test
cld
or
push
mov
pushf
aam
movs
mov
sub
shl
out
jecxz
shl
add
ins
adc
mov
jnp
jmp
mov
imul
add
lods
mov
cmc
push
cmps
in
adc
gs
icebp
loopne
fisubr
lods
mov
cmp
push
mov
ret
pop
ret
loop
(bad)
pop
or
pop
adc
xor
mov
xchg
sub
retf
dec
and
mov
mov
ror
push
push
daa
pop
daa
xor
out
out
pop
jl
sti
test
in
sti
adc
ins
call
stc
mov
mov
adc
jns
sub
sbb
lock
pop
dec
jge
call
push
sbb
mov
sahf
push
sbb
movs
mov
pop
movs
pop
movq
inc
mov
lods
hlt
imul
into
fisub
and
xchg
push
pop
aaa
into
mov
push
gs
loope
dec
and
mov
add
xchg
es
das
push
mov
dec
(bad)
mov
mov
cwde
xor
hlt
mov
xchg
xchg
je
and
mov
or
dec
ret
push
in
and
fld
scas
ror
xor
sbb
mov
adc
adc
in
xchg
retf
mov
addr16
jbe
push
mov
inc
test
ss
gs
aaa
dec
scas
pop
fadd
jo
xchg
mov
push
test
add
fist
shl
aas
xchg
cli
jl
int
xchg
xlat
cs
jle
jno
in
mov
bnd
in
pop
sbb
loop
test
mov
or
(bad)
mov
pop
cmp
mov
je
push
sub
aam
stc
mov
(bad)
push
sbb
mov
jg
out
loope
sub
sti
mul
test
dec
sub
dec
gs
pop
imul
(bad)
in
fs
dec
rcl
mov
adc
pop
add
mov
ds
cmp
cmps
adc
mov
or
push
adc
in
aam
xchg
sbb
mov
or
pop
inc
aaa
jne
pop
or
push
jg
out
das
outs
push
push
push
or
adc
div
rcl
out
xor
inc
mov
or
pop
dec
scas
dec
into
and
cmps
(bad)
idiv
jmp
push
mov
xchg
iret
js
fs
pop
fcom
mov
jecxz
and
dec
iret
jns
loope
(bad)
pop
div
mov
test
sub
sub
mov
inc
mov
sahf
mov
fst
and
std
aaa
cli
stc
xchg
js
pop
and
pop
das
gs
add
lods
mov
jp
inc
std
enter
dec
adc
adc
aad
mov
sti
bt
push
inc
cmc
mov
ja
mov
aad
int
sbb
xor
adc
(bad)
nop
sub
pop
aaa
shl
es
mov
mov
xchg
sub
mov
or
inc
sbb
out
les
pop
sub
idiv
sbb
adc
outs
rcr
mov
outs
(bad)
popf
test
sahf
pop
push
dec
xor
sub
dec
add
add
or
das
and
and
jns
or
adc
or
cmps
jnp
aas
ds
xchg
arpl
and
sbb
mov
std
jno
and
test
mov
and
cld
push
jo
cli
pop
imul
lea
xchg
inc
pop
adc
xchg
fstp
adc
push
mov
nop
lds
mov
sub
pop
fcmovne
jmp
(bad)
mov
push
les
add
jl
and
add
sub
cs
or
adc
and
dec
out
push
jmp
or
mov
xchg
push
adc
std
mov
jae
mov
push
pop
inc
adc
jno
ret
and
ds
arpl
jnp
push
test
fstp
gs
ss
sub
cmp
stos
(bad)
mov
add
retf
add
jns
rcl
cmp
jae
repz
leave
xchg
inc
out
call
mov
push
test
out
lock
xchg
dec
ds
pop
xchg
ror
inc
jb
int
pop
rol
maskmovq
out
mov
mov
mov
adc
movs
push
pushf
inc
or
or
xchg
ds
lea
dec
(bad)
movs
retf
mov
pop
dec
lds
jae
cmp
shr
aam
xchg
imul
stos
push
rcr
popf
(bad)
xchg
xor
cwde
arpl
mov
mov
push
jl
scas
inc
inc
mov
dec
push
jp
dec
mov
push
inc
outs
mov
fild
icebp
enter
in
mov
or
and
aad
add
(bad)
pop
leave
mov
psubd
mov
inc
iret
aad
out
mov
shl
nop
loop
fs
pop
out
mov
cmp
xchg
lods
dec
ins
push
mov
popa
dec
out
out
out
ds
mov
xchg
sub
adc
int3
mov
test
inc
mov
int3
les
sahf
pop
push
out
inc
mov
in
(bad)
and
push
lahf
jno
xchg
pop
add
addr16
inc
push
dec
mov
minps
mov
adc
mov
and
movs
test
or
fcmovb
mov
ins
adc
cmps
xchg
jnp
ret
jge
pop
loopne
jmp
dec
cmp
aad
out
(bad)
xor
and
sub
pop
and
mov
xchg
add
dec
dec
ins
push
aam
popf
outs
dec
addr16
leave
(bad)
mov
bound
jecxz
mov
ss
push
pushw
fdivr
mov
mov
mov
ja
(bad)
fsub
and
inc
fs
in
mov
add
rcr
add
xor
fwait
repz
add
paddb
out
mov
scas
mov
sahf
sbb
daa
iret
xchg
mov
push
clc
pop
aam
dec
ss
cmps
pusha
fist
repz
jecxz
mov
mov
iret
mov
(bad)
imul
sub
retf
xchg
lods
jp
pop
lods
shl
mov
(bad)
int
jmp
in
sar
outs
or
imul
(bad)
mov
sbb
inc
fdiv
(bad)
pop
mov
jb
push
push
movs
adc
jle
push
mov
jmp
pop
neg
arpl
test
add
dec
mov
jle
sub
loopne
stos
pop
test
repz
dec
mov
pop
retf
sub
xchg
add
adc
mov
mov
jae
test
jp
outs
jge
jns
push
sar
dec
inc
dec
push
jno
into
out
push
xor
cli
xchg
imul
sbb
out
sub
daa
pushf
cmp
in
fisub
sbb
(bad)
jnp
jl
int3
sahf
(bad)
cwde
cmps
fstp
dec
shl
xchg
ds
retf
jb
test
fldl2t
das
stc
popa
jbe
mov
sub
retf
outs
fwait
sub
mov
jmp
and
popa
shr
in
mov
sbb
icebp
js
test
shr
gs
outs
sahf
mov
loopne
sub
jae
xor
or
iret
sub
nop
mov
jp
jmp
fcom
xor
js
loopne
xchg
rol
add
sbb
movs
ss
imul
push
fdivr
cmc
add
mov
shl
daa
sti
std
dec
and
call
jno
stc
inc
xchg
leave
adc
push
jecxz
in
push
push
ror
movs
fwait
cmp
dec
mov
aas
retf
or
push
test
push
mov
mov
in
bound
sbb
test
test
xchg
xor
mov
xor
hlt
push
rcl
push
adc
sahf
js
punpcklbw
mov
and
fbld
and
popf
jnp
mov
xchg
mov
mov
(bad)
mov
lods
jmp
sti
push
fsub
outs
dec
movs
jg
into
mov
jmp
movs
jns
xchg
xor
jmp
jo
in
push
cmp
pushf
stos
(bad)
dec
xor
jnp
xchg
xor
adc
je
mov
fneni(8087
cli
frstpm(287
add
mov
outs
xchg
adc
sar
into
pop
out
aas
and
cmp
xor
call
inc
fs
in
xchg
cmp
or
fiadd
inc
call
sbb
stos
mov
(bad)
mov
mov
movs
push
sub
lods
adc
icebp
dec
adc
in
loop
and
out
fwait
(bad)
lock
ja
repz
aam
fsub
cmps
mov
test
les
arpl
sub
push
and
pop
ss
jecxz
das
add
cdq
cmp
idiv
xchg
ja
or
arpl
cmp
jb
and
test
ja
or
call
pop
dec
loope
fucomp
xchg
into
xchg
jg
cmps
xchg
adc
cld
mov
jl
mov
sub
retf
in
push
mov
adc
in
in
ins
mov
adc
out
push
mov
in
pop
mov
xor
jg
push
xchg
mov
ficomp
push
sub
mov
pop
inc
sbb
or
mov
adc
sub
push
xor
adc
push
mov
push
test
or
js
mov
jl
sbb
aam
mov
jns
stos
lahf
imul
mov
mov
pop
movs
pop
adc
inc
das
jae
and
adc
aaa
or
hlt
hlt
nop
cwde
loop
sbb
mov
cmp
int
lea
cmp
je
mov
loope
and
hlt
cmp
loopne
int
bound
or
loope
inc
xchg
repz
adc
mov
call
and
in
sahf
mov
xchg
pop
mov
sbb
imul
sbb
push
or
repnz
mov
(bad)
nop
cmp
call
mov
fwait
adc
jb
rcr
mov
mov
arpl
inc
repz
sbb
push
jno
sub
jle
sbb
cdq
jae
leave
jne
daa
mov
pop
xchg
push
mov
and
and
(bad)
sbb
das
(bad)
(bad)
call
hlt
pop
xor
sub
push
enter
sahf
outs
mov
sub
xor
addr16
test
imul
sti
scas
cmp
mov
int3
(bad)
xor
jb
xor
pushf
addr16
in
aaa
and
mov
inc
lea
(bad)
ret
jb
loop
nop
not
nop
xor
mov
hlt
das
push
jmp
or
and
push
mov
adc
or
mov
adc
les
loop
loope
and
and
call
pushf
je
test
test
mov
lds
sbb
cmp
clc
(bad)
ds
sbb
dec
mov
mov
fadd
sub
sahf
ret
sub
rol
mov
sbb
pop
fistp
test
sbb
popf
mov
ins
js
iret
mov
fcomp
mov
jge
mov
loopne
xor
in
je
inc
or
call
mov
add
(bad)
xchg
mov
retf
and
jns
arpl
inc
mov
in
scas
frstor
test
mov
push
xor
dec
sbb
dec
or
xor
arpl
int3
add
das
jae
add
and
jmp
aas
ss
mov
ins
aas
xchg
pop
or
jo
popa
pop
push
mov
push
fnstenv
xchg
cmc
lahf
sbb
xchg
mov
cld
(bad)
stos
aam
movs
loopne
aam
adc
scas
dec
sub
movs
cmp
out
ret
imul
movs
pop
dec
adc
xor
loop
mov
ficom
xlat
and
sar
mov
inc
add
xor
dec
push
mov
jmp
in
adc
and
jbe
push
jmp
jo
clc
xor
(bad)
adc
jmp
mov
call
loop
mov
jb
ss
cmc
cmp
mov
les
lock
inc
or
dec
ja
push
cwde
call
call
xor
add
out
xor
repz
fs
shr
sar
jp
nop
sahf
cdq
loopne
and
mov
jns
jne
and
pop
jg
push
stc
inc
mov
cs
stos
pushf
in
imul
mov
jg
sahf
(bad)
jmp
inc
dec
int
div
mov
test
inc
fcomp
jl
dec
in
jecxz
jmp
ror
adc
adc
cmp
fsubr
jno
add
push
mov
mov
aaa
sahf
aad
ficomp
in
(bad)
icebp
imul
(bad)
shl
inc
dec
mov
cmp
mov
rcr
cs
pop
rcr
pop
cld
adc
sbb
sbb
gs
imul
aam
jae
sbb
push
or
ins
mov
in
dec
inc
lods
cmc
hlt
loop
std
cli
(bad)
mov
push
retf
sar
jle
or
in
(bad)
dec
cmps
out
inc
sti
sub
inc
xchg
mov
js
pop
cs
and
push
clc
aas
and
(bad)
je
jno
jae
data16
(bad)
push
xchg
xor
mov
jmp
arpl
cmp
into
aas
mov
mov
and
shl
popf
(bad)
(bad)
sbb
mov
sub
inc
pop
mov
xchg
pop
aad
push
fst
out
test
sbb
push
xor
arpl
sti
in
mov
shl
fld
aad
sub
mov
add
mov
out
sub
add
xlat
jnp
repz
daa
test
jnp
iret
and
fstp
fs
push
movs
es
xlat
sub
std
into
cmp
imul
lods
add
int
or
hlt
js
daa
stos
mov
ins
cmps
ret
in
adc
xor
cmp
adc
jl
das
jbe
or
lods
or
and
adc
jno
or
fs
inc
int
fist
rcr
pushf
cdq
lds
in
jno
jle
inc
xor
clc
mov
mov
push
mov
push
cmp
adc
push
fwait
jg
xlat
inc
adc
mov
xor
sbb
push
sbb
rol
repz
add
ss
repz
inc
repz
push
out
jmp
xor
push
lds
cli
cmc
mov
dec
push
inc
ja
leave
push
ja
ror
mov
loope
dec
add
icebp
outs
cmp
mov
add
mov
xchg
pop
test
out
int3
cmp
jge
push
aad
sub
xor
inc
cmp
out
je
les
(bad)
out
xor
int
ss
jl
rcr
push
push
mov
pop
xchg
mov
inc
out
jne
shl
outs
dec
inc
adc
(bad)
mov
or
jmp
push
cli
jns
mov
jge
add
push
pusha
movs
inc
sub
xchg
sahf
cli
loop
test
push
stos
or
fstp
test
or
sbb
mov
scas
or
jne
retf
scas
add
pop
dec
popf
sbb
scas
in
xor
pushf
popf
lea
int
xchg
mov
xchg
sub
jmp
data16
retf
into
cdq
std
adc
jmp
mov
add
loop
sbb
push
cmp
jmp
fnstenv
pop
js
mov
into
ins
inc
pop
or
dec
pop
xor
sub
pop
bound
dec
mov
ret
inc
dec
pop
cmp
or
int
pop
sahf
cmps
and
shl
in
jbe
sbb
movs
mov
popf
add
call
mov
xor
int3
addr16
adc
cmps
fiadd
pop
add
cmp
xlat
sti
and
jnp
push
outs
rol
xchg
mov
jno
mov
add
mov
lea
mov
scas
or
xor
cmp
cmps
ins
inc
mov
int
sub
and
test
and
mov
ins
inc
(bad)
ins
dec
dec
gs
cmc
add
(bad)
mov
mov
xchg
fcomp
stc
mov
inc
rcr
push
push
mov
ss
and
sub
loope
iret
push
in
ins
pop
jle
js
add
test
push
sbb
xor
repnz
adc
out
retf
sbb
jne
jb
sub
dec
cmp
xchg
cmp
ror
sbb
js
pop
fcmovne
outs
push
pop
in
test
jne
inc
scas
lods
mov
dec
test
stc
int
dec
jge
loopne
shr
and
cmp
ficomp
out
retf
mov
xchg
dec
inc
adc
add
shl
add
addr16
cmp
mov
xor
out
lea
pop
in
clc
inc
sbb
data16
pusha
xor
pusha
mov
adc
in
fwait
mov
pop
mov
mov
iret
mov
mov
push
(bad)
fisubr
in
movs
pop
xor
lods
imul
cmp
cmp
dec
push
adc
push
jmp
dec
sbb
sbb
lods
test
stc
aas
dec
gs
cmp
loopne
je
addr16
(bad)
jp
div
mov
shl
sbb
call
xor
or
mov
adc
lds
mov
sub
lahf
fs
xor
mov
cmp
cmp
ins
aam
xor
mov
ins
add
adc
jmp
sbb
fst
outs
mov
pop
test
and
xchg
sar
bound
mov
mov
int
enter
and
test
fstp
inc
mov
pop
jmp
ss
sub
adc
jbe
push
punpckhdq
sar
lahf
mov
add
mov
cmp
fidivr
sub
push
dec
adc
and
test
or
jbe
push
add
pop
push
jp
int
add
xlat
sar
mul
ret
int3
cmp
sar
jns
bound
daa
sbb
js
cld
push
dec
sub
sar
dec
inc
inc
add
lods
mov
or
fbstp
push
jl
fadd
mov
pop
test
cmc
xchg
mov
mov
daa
pop
mov
fistp
leave
cmps
xchg
and
xor
jns
or
loopne
xlat
int3
cs
xor
sbb
sbb
(bad)
aam
not
imul
jle
lds
les
or
pop
nop
mov
iret
ret
(bad)
sbb
mov
jle
shl
jmp
inc
test
pusha
sub
cmp
scas
pop
outs
(bad)
jge
mov
enter
dec
inc
push
mov
icebp
adc
jp
adc
cmps
sbb
cmp
cmp
clc
jne
adc
xor
fwait
cs
inc
mov
jno
mov
lods
sbb
loopne
cld
aaa
movs
scas
cld
jmp
test
and
mov
loopne
add
fstp
retf
ds
aad
adc
fs
sbb
data16
(bad)
jns
xor
mov
sub
fsubr
pop
cmp
fdivr
push
and
aad
shl
dec
sub
jns
js
lea
int
dec
jb
add
lock
fidivr
jno
ins
or
xor
xlat
jl
stos
push
cmps
fcomp
mov
adc
jae
or
push
adc
pop
dec
xchg
(bad)
mov
or
std
shr
add
jbe
stos
xor
or
push
mov
rol
dec
cmp
addr16
addr16
into
cld
or
cmp
ins
inc
xchg
pop
xchg
jp
sub
xlat
pusha
fmul
cld
repz
pop
mov
mov
sbb
pop
jno
mov
ds
out
call
in
rcl
(bad)
sbb
je
(bad)
fstp
mov
pushf
xchg
mov
lea
jo
mov
pusha
shl
je
and
sbb
mov
out
mov
js
cdq
add
cmp
gs
mov
add
push
repz
and
scas
jnp
std
push
rcr
mov
cmps
sar
xchg
ins
jo
cmps
push
sbb
out
inc
sti
iret
pushf
and
push
scas
mov
mov
push
cdq
xor
mov
popf
or
pop
dec
jno
cli
jmp
mov
imul
sbb
xor
and
test
add
ss
cdq
ins
call
(bad)
stc
out
ror
push
or
stc
mul
(bad)
shl
shr
data16
or
fsubr
es
jecxz
into
and
dec
sub
sahf
pop
dec
mov
sbb
or
rol
jle
(bad)
(bad)
mov
jp
mov
mov
dec
out
pop
addr16
std
jno
shr
ins
and
jge
bound
cmps
inc
inc
test
in
sahf
mov
push
mov
cmp
cmp
xchg
cmps
gs
push
xor
sahf
mov
mov
ja
push
push
pushf
cli
add
call
int3
and
or
mov
mov
push
mov
mov
dec
dec
mov
inc
adc
xchg
in
movs
retf
mov
pusha
lods
call
loopne
and
stos
in
jo
fld
push
shl
jge
or
inc
xchg
data16
mov
scas
je
xchg
mov
stos
jmp
add
xchg
js
in
push
mov
sbb
imul
fistp
pop
int3
mov
leave
push
push
mov
rol
mov
ss
dec
imul
pop
xor
mov
sub
xchg
dec
pop
xchg
xlat
and
lahf
popa
mov
imul
xor
adc
cdq
xchg
xlat
dec
je
fmul
add
retf
ins
push
ret
fdiv
pusha
dec
cdq
sbb
nop
call
ficomp
mov
push
cld
(bad)
xchg
jmp
pop
int
aaa
sub
repnz
mov
jle
xchg
push
scas
outs
xor
push
mov
call
sub
aad
(bad)
repnz
mov
and
std
push
jnp
cmp
inc
cmp
sbb
xor
mov
dec
mov
gs
data16
ss
ins
test
add
mov
or
inc
mov
dec
jae
enter
pop
adc
movs
leave
inc
pop
not
sub
retf
xor
cmp
push
and
leave
push
mov
cli
fwait
sti
dec
mov
mov
les
push
xchg
adc
cmp
call
mov
sub
push
pop
gs
or
neg
jae
dec
aas
push
mov
jl
sub
scas
stc
jg
hlt
je
cmp
add
aam
loop
mov
hlt
pop
daa
mov
sub
xor
daa
pop
push
mov
loope
cdq
and
(bad)
ror
in
jno
fisub
mul
(bad)
rcl
cmp
mov
retf
xlat
test
(bad)
and
adc
jne
adc
movs
test
scas
iret
or
sub
mov
jo
rcr
add
pop
mov
sub
or
leave
sbb
mov
(bad)
jecxz
div
fld
das
xchg
sbb
add
pop
sub
test
xchg
mov
out
or
cmp
loopne
loop
sbb
iret
add
js
pusha
lahf
adc
(bad)
adc
out
cmp
(bad)
loopne
adc
inc
popa
inc
and
gs
push
(bad)
ror
sbb
sbb
lahf
sub
out
adc
(bad)
(bad)
(bad)
push
push
cbw
dec
pop
and
setge
jle
popf
xchg
cmp
fsub
es
sbb
je
inc
outs
mov
pop
adc
xchg
mov
inc
arpl
dec
cld
sub
scas
push
test
out
cmp
inc
adc
adc
rcr
mov
sbb
mov
popf
mov
fscale
mov
cmp
xchg
(bad)
fbstp
jnp
jmp
dec
scas
into
cmp
or
jl
ss
jne
sub
sahf
push
nop
xchg
add
mov
fwait
inc
ret
cmp
dec
out
stos
nop
jmp
jbe
out
mov
inc
out
jp
fst
xor
dec
xchg
xor
dec
jecxz
(bad)
jecxz
loope
sti
pop
pop
xor
gs
jmp
jns
popf
or
and
cmc
test
mov
out
mov
xchg
subps
sub
imul
xlat
jl
imul
cmp
push
or
and
fs
or
sub
xchg
mov
pop
ficomp
inc
mov
and
stos
mov
jne
int3
dec
mov
push
test
and
xor
lahf
retf
cmp
ja
dec
push
rol
lahf
aas
adc
jns
push
push
out
scas
fimul
mov
add
push
shl
lods
mov
aaa
push
(bad)
test
adc
imul
cwde
fnstenv
adc
pop
push
test
out
jle
cmp
inc
sbb
das
movs
rol
fcomp
ret
cmp
mov
ret
ret
nop
push
sbb
addr16
or
mov
popa
add
inc
pop
pop
outs
push
push
mov
ror
mov
add
fidiv
add
mov
jmp
pop
dec
mov
dec
adc
nop
push
cwde
fisubr
fs
or
int
je
dec
mov
pop
imul
jmp
out
xor
mov
jge
xchg
ret
retf
or
retf
sub
adc
not
(bad)
adc
test
push
fmulp
fistp
mov
cmc
jg
pop
scas
je
repz
les
sbb
mov
test
cs
mov
xchg
push
(bad)
jle
je
pusha
sub
stc
add
aaa
mov
cdq
loop
std
mov
imul
adc
ins
dec
ins
and
pop
and
jno
mov
cdq
mov
mov
pop
sub
push
lock
fcom
xor
dec
repnz
test
add
or
dec
mov
sbb
inc
jge
lds
mov
out
jecxz
push
mov
repnz
fidivr
call
push
and
xchg
sti
test
sub
xor
inc
lods
push
stos
ds
inc
sbb
mov
leave
dec
test
mov
ffree
jl
mov
jmp
(bad)
cs
call
xor
pop
imul
pop
or
jns
jl
test
sbb
imul
sub
lahf
jae
cwde
jne
test
rcr
adc
(bad)
push
cmps
stc
fwait
jne
out
sbb
outs
imul
mov
popf
add
pop
xchg
nop
cmp
fistp
call
jo
sub
push
pusha
aas
test
mov
jecxz
mov
sub
sti
leave
js
fsub
mov
data16
mov
das
je
push
adc
jmp
je
push
(bad)
out
lock
mov
iret
add
(bad)
jmp
cmp
xchg
adc
lea
inc
adc
clc
jmp
and
fsubr
repnz
std
jg
call
xchg
ret
pop
xor
add
call
dec
sub
dec
movs
pop
or
push
adc
repnz
add
add
sbb
xchg
dec
in
mov
sar
int
pop
mov
mov
lds
push
mov
out
imul
into
cmp
(bad)
out
hlt
inc
or
inc
adc
jmp
sar
xchg
push
fisub
pop
pop
adc
test
or
pop
rol
sbb
lods
jle
bound
jb
sti
div
aad
ins
fdivr
sar
pop
and
mov
push
aaa
and
in
mov
pop
pop
push
ins
push
pusha
add
aas
mov
inc
adc
ins
add
aam
mov
jmp
mov
cli
jne
(bad)
add
jle
sti
inc
mov
loopne
sbb
aad
es
xor
pop
pop
leave
cmp
sbb
dec
shl
and
test
aaa
cmp
xor
addr16
sbb
outs
out
inc
jg
in
sub
xor
ret
adc
(bad)
jmp
sub
or
sbb
shr
hlt
push
and
mov
push
out
pop
mov
clc
(bad)
fcomp
inc
xchg
stos
jp
pushf
add
fldcw
xchg
jns
ja
and
mov
jne
das
loope
fucom
test
jg
lock
leave
mov
cmp
cld
mov
pop
(bad)
ss
add
idiv
add
(bad)
ficomp
jns
jne
outs
add
je
sub
mov
leave
sub
adc
or
lea
mov
pop
sbb
test
int3
cmp
dec
inc
cli
int3
sti
loope
cmp
mov
aam
pop
daa
test
mov
dec
sub
in
arpl
push
nop
add
xchg
sub
mov
inc
ss
mov
pop
ins
pop
push
int
sub
addr16
test
ins
mov
xchg
xchg
fs
mov
pop
cld
gs
fs
xchg
idiv
jns
push
sbb
loopne
jmp
jnp
mov
cmp
xor
in
cmp
dec
xchg
mov
rcl
sub
int
sbb
imul
hlt
xor
out
cwde
dec
pop
add
fisttp
mov
scas
mov
out
inc
adc
aam
mul
(bad)
imul
stc
test
mov
ud1
pushf
sbb
jne
(bad)
daa
imul
(bad)
int
imul
xor
push
scas
jns
push
rcr
push
xchg
or
in
mov
ret
push
pop
jmp
xchg
pusha
cdq
sub
repnz
scas
in
pop
push
ja
test
adc
add
int3
sahf
fbstp
jne
dec
mul
(bad)
ret
and
jns
cmp
or
ret
call
lock
or
xchg
cmps
inc
xor
xchg
inc
outs
aas
in
push
push
pushf
pop
out
lock
or
dec
dec
scas
inc
xlat
sbb
fs
pop
xchg
(bad)
cdq
push
cmc
test
js
sar
loop
xchg
sub
ret
cwde
inc
outs
xchg
gs
adc
cmc
repz
cs
test
nop
jle
(bad)
cmp
push
jo
ins
or
dec
loope
das
mov
dec
jmp
add
jmp
jmp
push
movs
stc
sbb
aas
call
mov
(bad)
call
dec
push
mov
dec
pop
lods
test
loopne
pop
inc
xchg
xchg
push
popa
adc
je
mov
inc
fcmovne
add
out
add
pushf
dec
jmp
jl
loopne
fs
xor
adc
sbb
sub
das
sub
cmps
(bad)
sub
jp
pusha
and
jno
push
stos
jnp
stc
add
add
mov
stc
mov
mov
ja
cld
std
mov
movs
repz
sub
gs
lock
inc
out
jno
jp
out
je
cdq
and
push
scas
mov
pop
mov
fild
jle
jle
sbb
hlt
inc
pop
fcomp
pop
nop
fidivr
adc
aad
dec
pop
in
sar
fcmovu
bound
jp
mov
adc
or
into
stos
ins
add
push
nop
popa
(bad)
add
nop
into
fiadd
or
fs
push
mov
das
xchg
out
rcl
aaa
cwde
jnp
jns
aad
and
xor
movs
mov
clc
ins
inc
ror
fdivr
std
sbb
mov
jp
lock
popa
into
mov
pop
(bad)
pop
xor
fwait
lods
cwde
and
hlt
sbb
jecxz
pop
add
xor
lods
(bad)
sti
enter
or
adc
xlat
out
pop
rcr
xchg
sbb
adc
add
xor
push
xor
div
inc
mov
(bad)
aam
mov
call
jns
(bad)
out
jns
or
les
icebp
arpl
xchg
lds
sub
fsub
(bad)
cmps
mov
repnz
or
lods
jns
inc
dec
inc
cmp
mov
ds
sub
cmp
jl
mov
ds
enter
pop
sbb
add
adc
(bad)
mov
call
jg
aaa
aaa
outs
jbe
stos
sub
push
dec
daa
jg
and
sbb
mov
neg
stos
pop
(bad)
jle
popa
mov
popf
pop
in
cld
stc
mov
pusha
repnz
cmp
xchg
push
bound
(bad)
mov
fiadd
cmps
xchg
mov
sub
out
cmp
loop
sbb
mov
inc
sar
call
mov
mov
and
cmp
stc
or
loope
bound
mov
dec
fdiv
add
data16
cs
in
mov
jno
dec
add
dec
xor
push
xchg
jno
mov
addr16
pop
fidivr
xchg
sti
call
daa
aaa
ret
jg
sar
gs
and
bound
pusha
leave
jmp
xchg
test
retf
mov
xchg
fld
cli
sub
cmps
aas
cdq
sub
dec
lods
add
(bad)
and
dec
sub
inc
or
adc
adc
repz
sbb
inc
pop
nop
adc
lds
gs
scas
sbb
xlat
sbb
jle
dec
enter
pop
adc
in
fsub
icebp
mov
lods
fsub
and
xchg
shld
dec
xchg
sub
test
cli
jb
mov
mov
je
fiadd
dec
jg
or
sub
ret
xchg
outs
adc
inc
aaa
out
rcr
cmps
popf
outs
(bad)
repnz
ins
fiadd
add
lock
xor
imul
push
sbb
lods
inc
int
push
or
pop
stos
bound
cwde
bound
mov
lock
xchg
mov
cmps
push
jbe
push
lea
imul
test
inc
adc
sahf
jmp
jbe
xlat
mov
pushw
mov
iret
pop
daa
push
add
pusha
rcl
xchg
pop
dec
aas
call
aas
fndisi(8087
jmp
cmp
mov
(bad)
xor
cmps
xlat
int3
mov
mov
mov
popf
pop
mov
shl
enter
fiadd
cmp
clc
idiv
adc
fisub
cmps
addr16
and
add
adc
sub
inc
test
mov
xchg
or
adc
dec
push
push
popa
add
std
pushf
int
mov
test
xchg
mov
and
in
je
fucomp
xchg
mov
or
imul
jp
and
es
and
test
or
xor
jnp
push
inc
or
cs
fild
mov
xchg
in
cmp
into
push
mov
sbb
mov
push
daa
add
(bad)
call
cmp
jno
(bad)
cmp
xchg
pop
xor
cmp
mov
adc
movs
mov
pop
movs
das
test
jmp
add
cmp
mov
push
xchg
mov
repz
sub
lds
sbb
cmp
cmp
add
or
fsubr
cmp
data16
jne
pop
ret
pop
leave
in
sub
out
mov
scas
icebp
sub
xchg
mov
add
or
stc
adc
retf
mov
mov
cmp
jno
jno
movs
test
sbb
das
ret
mov
cmp
lahf
ds
das
ja
jl
fstp
aaa
aas
mov
dec
mov
pop
loopne
pop
pop
ja
dec
jecxz
gs
inc
push
pop
cmp
jb
or
lahf
frstor
and
cmp
rcl
jmp
xlat
ins
retf
adc
push
sub
cmps
add
mov
pushf
mov
inc
cmp
dec
sbb
adc
dec
cmp
adc
es
xor
sbb
add
sub
inc
inc
clc
jge
cmp
mov
mov
ror
cmp
mov
shr
xchg
or
(bad)
ja
mov
sar
sub
int
add
sub
jl
loopne
fcomp
into
adc
mov
mov
(bad)
iret
or
sub
aam
push
cs
out
scas
outs
inc
xchg
xchg
push
ss
movs
rcr
inc
rol
sti
dec
push
call
movs
jno
fimul
test
or
(bad)
inc
push
dec
bnd
sbb
xchg
xlat
push
retf
in
mov
fstp
imul
push
out
sbb
sahf
dec
pop
loope
adc
lods
xchg
ins
stos
enter
gs
fsubr
inc
mov
dec
dec
retf
or
xor
push
adc
mov
mov
ss
aam
ja
repnz
xchg
adc
scas
mov
movs
inc
in
jmp
push
or
int
call
xchg
ret
xchg
inc
and
sbb
(bad)
push
push
sbb
and
dec
(bad)
aad
mov
or
jmp
jns
int
dec
adc
pop
pusha
pop
ds
mov
outs
xor
and
inc
cmp
movs
popa
xor
test
test
scas
gs
xchg
lea
jp
inc
xchg
ds
mov
add
stos
push
shl
xchg
mov
xor
sub
stos
jmp
pop
mov
js
xchg
jg
push
mov
mov
jae
xchg
adc
or
inc
(bad)
aad
sub
stos
push
mov
movs
scas
je
neg
nop
xchg
xchg
ins
loopne
and
pushf
imul
mov
scas
call
imul
hlt
mov
push
inc
inc
adc
neg
jbe
popa
cmp
push
jne
cmps
adc
mov
mov
dec
pop
rcr
out
test
cmp
mov
mov
pop
std
mov
adc
and
aam
cs
mov
xchg
inc
push
mov
hlt
and
jecxz
add
out
xchg
jle
gs
mov
retf
push
aaa
clc
xor
jecxz
fs
xor
adc
in
cmp
inc
xchg
call
movs
and
or
leave
and
les
(bad)
mov
cdq
in
mov
push
or
mov
out
jno
cdq
mov
shl
inc
cmps
int3
shl
ret
cli
repnz
outs
dec
out
xchg
and
jns
jae
push
add
pop
in
cwde
div
mov
mov
cmp
add
jp
and
das
xor
stos
std
inc
dec
fdivr
jnp
aad
idiv
jp
mov
out
fisttp
sbb
mov
and
push
mov
loope
mov
rcr
mov
xchg
or
call
mov
into
add
stos
xchg
pop
jb
mov
cmp
inc
pop
imul
xor
popf
popf
cli
cmps
push
push
xchg
bound
in
mov
mov
adc
dec
xchg
and
ds
mov
imul
(bad)
push
div
js
pop
and
into
push
jmp
jl
xlat
pop
sbb
add
mov
sbb
or
cmp
fld
mov
ja
call
xor
arpl
inc
shr
mov
pop
aam
push
aam
cmp
je
loope
je
popf
push
sub
dec
out
in
call
sub
adc
mov
or
pop
sahf
mov
mov
js
xor
ret
sti
cld
lock
xor
arpl
clc
stos
sub
add
jge
and
sub
adc
sbb
add
xchg
mov
mov
sbb
jmp
pop
ins
sar
shl
imul
mov
xchg
xchg
jae
outs
or
mov
clc
test
in
jmp
mov
mov
pop
aam
pop
jecxz
mov
cmc
sbb
nop
ret
mov
fucomp
dec
mov
lock
call
jnp
loope
push
fldpi
mov
mov
cmp
cmp
shr
nop
xor
outs
cmp
pop
lea
push
mov
pop
inc
cli
loopne
xchg
mov
push
cs
add
xchg
push
dec
or
mov
xchg
dec
aam
inc
push
jmp
test
pop
mov
pop
mov
sbb
int
fldenv
ins
enter
(bad)
jo
jg
pop
pop
add
imul
shl
and
mov
mov
cmp
and
cmp
scas
sbb
pusha
xor
addr16
rol
mov
or
mov
mov
dec
mov
pop
pop
add
mov
mov
cs
cmp
inc
aad
bound
in
pop
shl
iret
xchg
jg
fs
pusha
aad
lods
out
(bad)
fsub
int
inc
int
adc
sti
sti
daa
test
push
cmp
xor
jns
jl
leave
loopne
and
ret
xchg
cdq
pop
int3
sbb
pop
dec
ins
jmp
call
dec
stos
adc
outs
das
cli
addr16
mov
adc
add
sub
imul
sahf
inc
jb
sub
pusha
add
out
imul
mov
xchg
mov
xor
or
pop
sbb
dec
pushf
push
daa
retf
mov
jge
cli
xor
pusha
mul
lea
lds
gs
call
jne
(bad)
add
repz
xor
fs
scas
xchg
outs
inc
adc
test
mov
mov
or
add
dec
iret
push
mov
push
sub
xchg
mov
dec
mov
imul
jmp
mov
out
and
mov
cmp
(bad)
jmp
jp
push
add
in
mov
iret
xchg
cmc
iret
sti
and
and
sti
inc
pop
jg
pop
out
push
rcr
xchg
sahf
lods
mov
sub
popa
fld
mov
(bad)
sbb
jmp
sub
mov
popf
pop
(bad)
jne
(bad)
lods
stos
xchg
cs
clc
loop
pushw
sbb
sbb
mov
shl
xlat
rol
shl
xor
arpl
data16
into
cld
popf
sub
imul
out
xor
inc
inc
out
mov
pop
mov
and
push
test
cmp
cmc
add
test
fs
lahf
jl
data16
test
cmp
div
inc
xor
mov
adc
movq
jp
scas
push
movs
sub
xor
aas
cmp
adc
cmps
not
push
inc
shr
push
sbb
daa
fs
pop
retf
or
mov
mov
repz
push
mov
and
or
jg
mov
arpl
mov
cmp
mov
fdivr
out
mov
ins
cmc
and
loope
stos
jo
add
pusha
cmp
mov
stc
cli
mul
add
addr16
and
mov
test
scas
push
dec
adc
stos
push
inc
clc
mov
imul
(bad)
(bad)
out
bnd
mov
test
dec
add
stc
cs
jb
mov
sbb
mov
stos
cli
mov
cmp
dec
iret
nop
pushw
(bad)
mov
std
pusha
call
movs
jmp
fld
jg
pop
cmp
mov
jb
in
mov
pop
pusha
mov
cmp
bound
mov
or
inc
repnz
loopne
sahf
retf
das
jae
call
jo
scas
imul
jo
ds
cdq
jne
aas
lock
iret
mov
jmp
cmp
mov
cmp
jg
fsub
sbb
cmp
fnstenv
mov
stos
inc
pop
adc
push
and
mov
cmp
adc
stos
in
call
rcl
and
mov
sbb
loop
cld
movs
(bad)
aam
(bad)
add
push
dec
rcr
push
ret
or
jbe
jne
push
and
inc
or
adc
mov
int3
mov
popf
fdiv
mov
sbb
dec
xchg
xchg
loope
mov
movs
sbb
aas
mov
cmp
xchg
lods
mov
xlat
dec
xor
dec
bndstx
(bad)
xchg
dec
mov
fstp
(bad)
sbb
mov
mov
cwde
shl
xchg
(bad)
mov
mov
(bad)
sub
js
mov
maskmovq
neg
int
push
push
(bad)
ins
js
mov
xor
inc
add
(bad)
aaa
and
xchg
mov
xchg
ins
add
jg
jbe
pop
xchg
adc
jo
push
leave
fs
xchg
pop
push
imul
(bad)
sbb
push
push
mov
loope
xchg
cwde
imul
mov
mov
(bad)
jp
fadd
leave
enter
addr16
xor
xchg
inc
push
dec
lock
dec
scas
xlat
es
push
(bad)
cmp
mov
dec
xchg
repnz
pop
add
sub
retf
(bad)
cmps
into
cmp
fcomp
(bad)
sahf
rol
jle
mov
pushf
and
out
dec
aaa
push
lds
xor
loope
les
shr
call
jecxz
cmp
xchg
sbb
pop
jecxz
jmp
push
lods
xchg
pop
mov
dec
test
inc
mov
outs
add
jb
les
cdq
pop
mov
xor
loop
imul
call
lahf
fs
xchg
repz
xchg
out
inc
repz
jge
loopne
inc
das
fucomi
fiadd
sub
or
xor
sbb
add
in
stos
ja
add
or
and
scas
mov
xor
add
mov
cli
mov
cli
int
addr16
loopne
shl
ret
popf
jo
sub
push
xchg
adc
call
mov
and
xor
jmp
ss
sub
mov
lods
int
lea
adc
mov
call
inc
dec
test
xor
mov
pop
xchg
data16
ret
push
jns
push
ds
jle
pop
xor
dec
jg
sbb
or
lock
in
adc
inc
(bad)
shl
in
scas
div
fsub
jecxz
repz
lea
test
int3
push
into
cmp
pop
or
retf
mov
mov
adc
sar
aas
(bad)
push
sbb
out
shl
fistp
sub
bnd
sub
mov
out
pushf
mov
mov
inc
mov
aad
je
ret
pusha
add
cmp
xor
retf
cmc
lea
pop
sub
push
cli
(bad)
cmp
data16
xlat
jo
xor
dec
jmp
not
sub
fmul
jmp
test
imul
stc
rcl
shl
fdiv
mov
jge
xor
mov
mov
mov
test
add
cmp
cwde
ret
repnz
mov
cli
and
mov
xor
xor
xchg
dec
cmps
repz
scas
xor
add
cmp
test
aad
sbb
xor
push
jo
aad
pop
mov
cmps
sub
xchg
mov
inc
test
and
add
push
sar
xor
int3
dec
ret
mov
dec
xchg
adc
mov
test
ins
ficom
dec
in
test
fbstp
repnz
jecxz
repz
test
arpl
pop
add
push
jl
rol
stc
dec
xor
lock
inc
jne
popf
push
js
dec
push
outs
rcr
push
in
jnp
cmp
jno
fmul
cmp
pop
mov
or
dec
sbb
xor
mov
mov
ret
sub
pop
sub
cmp
pop
jmp
mov
adc
stos
xchg
fs
add
jp
inc
cwde
nop
mov
mov
jbe
mov
in
nop
repnz
nop
adc
dec
lea
push
jbe
fs
cmps
lock
bound
pop
(bad)
neg
ss
xchg
fdivrp
or
jge
adc
es
fidivr
mov
inc
lahf
add
sub
jae
clc
hlt
jno
jbe
mov
jbe
jns
fsubr
sar
into
pop
xor
je
jnp
lahf
jmp
fs
push
pusha
pop
leave
pusha
(bad)
push
aam
cdq
ror
mov
rol
xor
sub
jmp
sbb
push
pand
fst
jle
loopne
in
inc
int3
call
stos
ins
pushf
mov
rcr
int3
xchg
pop
lock
push
pop
rcr
loopne
int
adc
add
arpl
jl
add
movs
aam
shr
adc
std
sub
outs
(bad)
neg
mov
fs
mov
mov
rcr
inc
scas
frstor
pop
cld
dec
out
cwde
mov
push
mov
push
add
push
jl
lods
mov
or
(bad)
pop
icebp
rcr
push
retf
mov
or
pop
icebp
add
test
sbb
dec
fisub
adc
cmp
mov
in
cmp
in
aad
call
sti
mov
popa
mov
in
cld
popa
stc
ficom
jo
cmp
pop
out
lock
fistp
adc
fld
movs
sahf
dec
sub
jb
(bad)
stos
mul
xlat
das
mov
pop
test
call
sub
push
cmp
retf
add
ins
cwde
js
js
stos
push
mov
xchg
inc
mov
mov
bound
imul
xor
int
cmps
cmp
adc
jecxz
std
movs
icebp
leave
ja
dec
add
scas
outs
ja
sbb
dec
mov
xor
hlt
inc
inc
inc
shl
inc
addr16
xchg
jbe
jbe
xchg
aas
lea
xor
pop
add
movs
mov
cld
pop
jg
mov
in
in
push
rcl
iret
scas
shl
mov
mov
(bad)
cs
sbb
pop
and
call
bound
dec
xchg
nop
popf
xchg
pop
in
mov
jo
pushf
loopne
lock
mov
and
sbb
push
mov
inc
cld
data16
fwait
movq
xchg
loop
movs
ret
pop
in
push
bound
pop
pop
inc
xor
daa
out
jge
popf
cmp
out
inc
or
jmp
push
push
push
inc
push
mov
daa
or
stos
nop
retf
and
xor
xor
repz
repnz
sub
xchg
mov
xor
mov
pop
jmp
test
ror
mov
cmc
adc
sub
mov
loop
iret
loopne
push
xchg
(bad)
jae
cmp
mov
movlps
adc
pop
xchg
add
enter
lock
cmp
xchg
mov
sbb
ret
dec
pop
aas
dec
fcom
sbb
and
push
jnp
or
daa
(bad)
data16
sub
bnd
push
frstor
jnp
mov
out
jge
adc
pop
nop
mov
rcr
ja
pop
xchg
pop
fistp
pop
pop
dec
lods
mov
push
push
or
int
out
cdq
cmps
mov
js
nop
imul
mov
inc
or
cmp
jne
mov
imul
sbb
pop
cs
in
pop
and
ds
inc
data16
adc
mov
xchg
cmps
adc
inc
adc
nop
(bad)
mov
ss
ss
cdq
push
or
sbb
jl
stos
das
pop
cs
xor
or
mov
out
push
jne
and
inc
xor
jg
jae
stc
push
pop
aad
pop
jb
jb
test
(bad)
pushf
icebp
sbb
sbb
jae
xchg
or
cwde
loope
dec
sub
popa
xor
loop
or
dec
es
ror
xor
fwait
retf
or
xchg
adc
xor
mov
dec
ret
leave
in
cmps
nop
sbb
out
jns
mov
int
ror
push
pusha
mov
shr
repz
mov
pop
shr
jne
les
or
cmp
in
loopne
scas
or
inc
jb
aad
adc
and
fidiv
movs
jl
jne
adc
movs
cmp
adc
pusha
sbb
mov
and
jle
(bad)
xchg
cmp
dec
mov
lds
fldcw
out
fst
push
mov
sub
loope
sub
jp
jle
das
mov
pop
fwait
inc
test
dec
popa
mov
neg
pop
int
hlt
push
iret
pop
sbb
pop
push
and
push
xlat
jle
jmp
cmp
fldcw
outs
sub
hlt
cmp
iret
mov
in
call
push
out
movs
in
mov
pop
ror
add
stc
adc
fs
bound
jo
arpl
xor
mov
jmp
(bad)
out
mov
dec
lea
xchg
xor
push
xchg
fsubr
ret
cmp
(bad)
pop
push
cli
lds
or
(bad)
push
out
dec
inc
clc
repz
add
lock
mov
cmps
jg
mov
cmp
xchg
add
fild
outs
mov
loopne
jge
call
and
ficomp
cmp
adc
in
jns
rol
or
pop
sbb
repz
cmc
inc
inc
and
xor
or
ret
jg
inc
mov
and
adc
js
pop
pop
ficomp
sbb
ins
sti
mov
xchg
mov
xor
sbb
out
inc
loope
xchg
inc
mov
sub
add
mov
pusha
fcmovbe
es
xlat
or
cmp
arpl
push
and
es
mov
fnstsw
cmps
test
loope
pop
fdivr
lods
pop
retf
jecxz
scas
push
fst
in
movs
sub
mov
jno
xchg
mov
pshufw
xlat
pop
add
fidiv
inc
xchg
repnz
shl
(bad)
adc
add
dec
cmp
xor
jbe
mov
mov
sub
xor
addr16
xchg
mov
jle
aam
sbb
shl
arpl
ins
xchg
jbe
xlat
pusha
xchg
fdiv
in
add
pop
or
nop
cmc
inc
gs
mov
dec
loope
mov
popa
or
jmp
daa
in
(bad)
pop
add
imul
xlat
jg
push
and
or
pop
call
ins
retf
xor
retf
lds
adc
pop
daa
xchg
ret
(bad)
test
(bad)
shl
mov
mov
inc
(bad)
(bad)
popa
in
mov
test
push
sub
jmp
vpandn
jmp
and
inc
int3
imul
xchg
mov
dec
sub
call
stos
jmp
adc
pop
add
dec
nop
xchg
pusha
shr
lods
pop
pop
shl
push
push
mov
(bad)
jge
call
mov
je
dec
inc
jmp
test
push
stos
mov
inc
mov
push
push
xor
shl
retf
xor
jge
jo
test
cmp
fucomp
popf
or
or
push
add
fs
out
sub
(bad)
hlt
(bad)
fstp
jns
pop
(bad)
jmp
push
inc
shr
dec
add
push
push
shl
pop
xchg
pushf
retf
je
popa
pop
not
les
dec
out
out
pop
cmps
pusha
cmp
icebp
push
mov
stc
jno
add
clc
sar
scas
cmp
and
adc
cdq
cli
(bad)
aaa
retf
out
test
bound
sahf
in
dec
add
dec
add
ins
xchg
into
fiadd
jmp
add
sbb
cdq
adc
mov
or
xor
sahf
pop
adc
retf
fild
and
scas
aad
lods
ss
into
xchg
xchg
cmps
dec
xchg
push
and
pop
or
inc
pop
mov
imul
pop
push
adc
out
stc
cmp
push
or
mov
jnp
inc
bound
pushf
dec
and
ret
pusha
dec
(bad)
mov
push
inc
(bad)
and
cmp
adc
inc
mov
cmp
out
jecxz
sub
xor
and
push
fst
mov
addr16
call
mov
adc
push
add
movs
enter
xor
dec
and
and
ins
dec
addr16
jmp
push
sub
pop
ins
xchg
into
mov
scas
add
xchg
out
pushf
jecxz
outs
inc
leave
adc
fwait
loope
movs
adc
dec
fidiv
fmul
into
xor
movs
sbb
test
push
cmp
test
(bad)
jo
ficom
idiv
sbb
(bad)
adc
jle
mov
js
clc
stos
mov
mov
das
stc
adc
mov
pushf
mov
add
imul
or
or
popa
or
stos
push
cs
push
push
loope
in
sub
(bad)
repz
adc
(bad)
mov
shl
adc
das
pop
cmp
sub
std
popa
scas
shl
inc
jno
add
mov
adc
mov
sub
xchg
sbb
shl
cmp
xor
mov
jl
ror
push
jnp
sbb
mov
scas
lahf
pop
loop
stos
fs
sbb
leave
mov
sbb
push
or
jb
bsr
loope
div
xor
imul
cld
call
xchg
stc
loope
xchg
enter
pop
inc
add
dec
int3
lds
retf
xor
inc
bound
push
jecxz
lock
cld
mov
ret
sbb
cs
popa
jnp
mov
or
(bad)
(bad)
in
std
loope
pusha
push
push
fstp
xlat
push
call
jo
(bad)
fldcw
or
or
arpl
addr16
xor
sbb
ret
pextrw
adc
out
dec
mov
clc
push
dec
ds
rcr
jg
or
xchg
int
jle
inc
sbb
or
and
sti
and
mov
stc
fs
ret
mov
std
pop
shr
jnp
mov
sbb
adc
xchg
sahf
cmp
adc
pop
cdq
xor
pop
cmp
das
xchg
repz
mov
inc
sbb
sub
ds
cmp
movs
gs
adc
shr
dec
clc
(bad)
pop
in
mov
jnp
dec
js
scas
mov
mov
sar
jmp
leave
rcl
mov
aas
dec
xchg
inc
mov
lea
inc
inc
jp
outs
ds
(bad)
jae
ss
inc
mov
cmp
inc
mov
push
das
popf
bound
or
js
idiv
jne
std
xchg
adc
mov
rcr
xor
fidiv
xor
mov
retf
adc
mov
sbb
or
fwait
pop
dec
jo
jmp
push
sbb
fidivr
push
mov
cmps
pushf
jne
push
lahf
mov
add
(bad)
mov
push
ins
xor
xchg
ret
mov
es
add
inc
mov
test
stos
jns
inc
pop
stos
(bad)
fist
jle
push
cld
fidiv
pop
jl
clc
sub
ins
jecxz
inc
sub
das
mov
clc
mov
stos
push
aaa
mov
arpl
inc
sbb
(bad)
xchg
rcr
mov
mov
ja
push
sub
loop
rcr
(bad)
jmp
xlat
rcr
cmp
adc
out
leave
test
lds
cmp
lods
mov
add
jns
jmp
sbb
xchg
stos
fdiv
cld
js
dec
jge
dec
hlt
out
loop
out
les
les
adc
cmc
(bad)
inc
outs
cmp
neg
bswap
(bad)
es
enter
test
cld
sahf
mov
popf
adc
out
and
loopne
push
jno
lods
leave
aad
outs
mov
pop
mov
add
jb
ror
push
ja
shl
mov
jmp
out
adc
(bad)
icebp
pop
jnp
lock
adc
(bad)
mov
jae
xor
int3
cmp
loop
adc
xchg
mov
cmc
not
add
cmc
push
hlt
or
ins
sbb
into
retf
stos
xor
pop
jp
(bad)
add
cmps
add
retf
loop
adc
ins
sub
out
push
xor
loopne
call
pop
out
pop
mov
mov
mov
rcr
test
fst
mov
popf
mov
hlt
arpl
loop
cmp
shl
cmps
lds
ja
rcr
loopne
mov
cdq
dec
pop
sbb
or
pop
or
out
clc
movs
xchg
dec
dec
int3
sbb
pop
jg
inc
mov
int
xor
lock
loopne
(bad)
lods
pop
cmp
pop
lods
inc
jnp
stc
inc
addr16
cdq
cs
jbe
mov
int3
lea
pop
cmp
dec
jl
in
cmps
jnp
jp
int
mov
or
stc
dec
mov
ja
cmc
xchg
xor
push
int3
or
inc
in
imul
cli
pop
aad
or
sar
rcr
imul
scas
std
std
test
adc
add
pop
fbld
push
daa
push
in
ret
mov
jle
jae
sub
retf
mov
dec
test
addr16
cmps
mov
mov
sbb
in
fimul
dec
mov
call
mov
adc
xchg
test
or
shr
add
xchg
and
(bad)
(bad)
mov
xor
push
push
enter
jbe
inc
and
dec
aad
lods
xor
pop
pop
mov
inc
out
(bad)
fcomi
and
mov
xchg
xor
mov
fadd
push
fbld
xchg
mov
das
mov
clc
gs
xchg
cli
jnp
mov
enter
sbb
or
sbb
xchg
cmps
cmp
enter
push
(bad)
(bad)
jnp
xor
jmp
mov
sbb
(bad)
jne
push
loope
inc
pop
dec
sub
jle
pop
add
int3
sub
jmp
mov
es
hlt
add
push
add
fld
adc
loope
push
ror
aad
mov
mov
in
mov
xor
fst
xchg
dec
repnz
and
call
scas
fnstcw
xor
push
(bad)
add
jle
mov
push
inc
aad
jae
or
shl
aas
mov
add
or
cld
scas
out
into
cmp
push
imul
sbb
mov
loope
add
in
mov
lea
mov
cmp
push
jae
daa
test
mov
cmc
dec
inc
jp
(bad)
cmp
call
adc
dec
dec
fs
push
popf
in
cmp
cmp
int3
add
pop
jp
(bad)
pop
popf
(bad)
shr
call
(bad)
stos
out
push
sahf
or
stos
mov
enter
sahf
ds
ror
daa
inc
aaa
dec
push
jne
jnp
jb
ja
dec
test
inc
mov
ret
(bad)
je
pusha
adc
nop
jle
js
(bad)
shr
mov
sti
pop
pusha
retf
or
(bad)
adc
sub
mov
popf
scas
inc
or
adc
pop
pop
push
and
jae
aaa
loope
add
iret
mov
mov
retf
gs
fcom
sbb
jmp
xchg
jecxz
mov
je
cmp
push
push
(bad)
dec
retf
pop
test
pushf
jne
xchg
add
out
push
cdq
inc
and
in
jmp
dec
pop
push
stos
pop
jg
imul
sysexit
ret
and
sbb
xor
popf
retf
xchg
xchg
sbb
mov
mov
dec
sub
fistp
pop
loope
cmc
(bad)
pop
jg
xchg
dec
mul
push
inc
jo
test
(bad)
(bad)
mov
or
sbb
cmp
xor
fs
or
pop
std
pop
or
ret
in
cmps
loopne
stos
test
icebp
sbb
jle
in
inc
push
scas
xchg
jmp
enter
xor
mov
push
es
lock
aaa
fs
data16
sar
xchg
or
cmp
xchg
sar
mov
fs
dec
mov
push
pushf
fnsave
or
jns
sub
pop
cmc
push
int
sti
loopne
and
cmps
test
inc
fwait
push
pop
push
rcr
rcr
mov
mov
jle
mov
jno
xchg
loop
pop
pop
jmp
push
cmp
loop
cld
cld
cmps
xchg
pop
sar
clc
sub
xor
push
add
mov
(bad)
ror
mov
sbb
dec
(bad)
loope
jmp
cmp
cdq
jecxz
xchg
or
sub
jae
cmp
int
push
pusha
and
outs
fisubr
add
lds
adc
rcr
mov
pop
aas
adc
mov
(bad)
rol
jo
adc
in
or
cld
cmp
add
xchg
test
pop
mov
push
adc
scas
aaa
loop
out
add
mov
cdq
sbb
dec
imul
mov
shl
xor
enter
mov
sub
xor
jno
ret
ja
mov
xor
fwait
cmps
repz
mov
imul
ret
outs
dec
inc
jnp
pushf
pop
mov
xchg
addr16
mov
bound
pop
and
je
sub
paddusb
sbb
fbld
int
enter
popa
shl
xor
mov
push
push
inc
dec
xor
mov
fmul
imul
outs
xor
test
jne
cmc
repnz
aam
sbb
pop
jmp
cwde
retf
inc
xchg
fs
adc
sahf
mov
sub
jp
lods
inc
inc
adc
pop
xchg
repz
fwait
out
rcr
and
inc
cmps
outs
cdq
lock
sub
xchg
pop
sbb
(bad)
call
sti
outs
pop
loop
sbb
ja
mov
or
jns
adc
xchg
popa
mov
or
or
and
mov
and
jb
leave
arpl
rcr
ds
mov
pusha
mov
mov
shl
sbb
stos
enter
mov
stos
hlt
pop
jmp
cmps
aaa
fwait
pop
(bad)
push
daa
hlt
into
idiv
jle
popa
daa
inc
scas
lahf
(bad)
pop
int
cmp
ret
pop
hlt
paddw
iret
dec
xor
ss
xchg
adc
push
(bad)
loopne
mov
data16
inc
dec
lahf
push
sub
rcr
call
and
(bad)
rcl
inc
push
aaa
push
mov
(bad)
popa
std
pop
push
mov
hlt
dec
nop
daa
pushf
jmp
adc
inc
xor
jg
mov
outs
div
and
rol
shl
shl
js
pop
in
or
mov
sbb
mov
xchg
scas
clc
into
sub
div
adc
mov
or
dec
cmc
aaa
int3
pop
in
sub
aas
or
adc
out
sub
mov
and
retf
test
push
inc
test
push
movs
add
xlat
jnp
pop
clc
dec
add
lahf
cmps
jge
xchg
test
mov
mov
adc
popa
pop
add
or
push
fnstcw
lds
sub
mov
cmp
and
adc
fld
add
and
ins
jmp
inc
xor
pop
test
or
minps
fs
xchg
inc
(bad)
in
add
mov
int
fsub
sahf
int
and
fsub
push
mov
cmp
cmc
sbb
sti
sbb
push
mov
inc
loope
popf
out
pop
sti
mov
cmps
adc
(bad)
xor
sub
cmp
loopne
jae
and
mov
lds
stc
in
icebp
add
push
mul
xchg
xchg
out
test
push
mov
jnp
gs
daa
dec
adc
xor
shl
jge
sub
push
(bad)
dec
pop
movs
nop
or
dec
mov
mov
sti
jmp
out
pop
je
mov
mov
fisubr
xchg
xchg
pop
call
push
sbb
mov
pop
jg
je
sub
mov
pop
push
fild
mov
cmp
push
dec
inc
rcl
cmp
cmp
test
icebp
xchg
neg
mov
movs
inc
xchg
cmp
mov
pop
test
sahf
jb
mul
push
adc
fstp
iret
mov
adc
push
mov
mov
ror
imul
pop
shl
pop
data16
and
inc
mov
fisub
nop
mov
jl
sub
or
fcomp
jmp
jge
out
mov
or
cmp
int
cld
sub
mov
adc
push
sub
aas
xor
dec
xor
dec
add
mov
outs
repnz
dec
cmp
stos
inc
inc
adc
cs
jo
push
in
pop
xlat
scas
xchg
jle
sbb
push
jnp
xor
cmps
arpl
cdq
mov
inc
mov
mov
sahf
cmc
dec
jnp
jecxz
inc
call
push
ficomp
sbb
mov
xchg
fnstcw
mov
push
cmp
cmc
gs
or
push
scas
enter
in
mov
in
or
icebp
push
jl
mov
sub
pop
hlt
sbb
pop
outs
repnz
out
pop
retf
rcl
sub
ins
pop
cmp
sar
sahf
mov
fmul
arpl
jnp
adc
outs
add
data16
pop
push
fs
add
pushf
push
cmp
xchg
popa
mov
sar
loope
xchg
stc
push
fisubr
mov
je
xchg
iret
jbe
test
(bad)
into
mov
adc
fsub
inc
xlat
xor
mov
cmp
adc
add
retf
pop
aas
mov
imul
sti
test
ins
cmp
push
push
sbb
cs
or
pop
mov
jle
enter
mov
jmp
pusha
jbe
jns
out
daa
sub
jo
push
jb
out
fst
mov
retf
int3
mov
push
cdq
dec
adc
push
fcmovbe
outs
leave
xchg
lahf
stc
push
mov
cmp
rcr
jbe
jae
nop
adc
jo
inc
rcl
rcr
fs
add
mov
sbb
push
and
pop
in
inc
sub
mov
sub
jae
lahf
jnp
enter
js
mov
adc
pop
pushf
cs
xor
dec
loope
ss
addr16
jmp
dec
sub
inc
mov
out
pop
in
test
jo
adc
not
adc
fwait
add
ret
jl
xchg
cmp
xor
or
and
test
xchg
ss
fcom
ret
sub
repnz
inc
pop
je
mov
icebp
mov
fidiv
mov
(bad)
das
dec
mov
shl
iret
add
outs
xchg
or
sbb
test
jnp
retf
mov
mov
(bad)
repnz
ins
add
add
outs
(bad)
aad
mov
dec
mov
das
movs
fnstenv
movs
xchg
mov
call
fisttp
nop
xchg
xor
(bad)
addr16
sub
mov
test
mov
loop
mov
aam
sub
mov
ror
jg
fisttp
jmp
stc
into
jp
dec
mov
mov
cmps
jmp
aad
arpl
jle
rcl
jo
sbb
jp
in
inc
sbb
lock
push
add
push
sbb
xor
adc
mov
fcomp
mov
push
mov
scas
in
loop
mov
loope
shl
nop
cmp
(bad)
repz
cmp
cld
das
retf
fwait
adc
mov
gs
xchg
jno
xchg
xchg
pop
inc
mov
call
inc
stos
out
push
inc
mov
dec
add
mov
inc
mov
pop
ret
aam
dec
pop
push
loop
jne
stos
stc
call
sbb
cdq
fisub
sahf
mov
sub
repnz
(bad)
pop
js
test
ja
sub
js
mov
mov
jne
cmp
je
dec
aas
les
pop
xor
sbb
and
retf
scas
xor
popa
shl
jb
hlt
pop
loopne
pop
jbe
dec
cmp
outs
inc
rcl
fdivr
mov
adc
mov
xor
pop
or
jns
mov
stos
xchg
fidiv
xlat
paddb
add
sar
imul
fcmovnu
fcom
and
fcomp
shl
gs
or
ins
imul
cdq
push
and
mov
pop
sbb
push
movs
xadd
inc
dec
hlt
pusha
sbb
push
cmc
push
mov
push
cmps
stos
jae
addr16
xor
loop
loop
adc
add
jae
sub
mov
jp
pop
hlt
and
sti
jg
jmp
movs
and
inc
fstp
outs
or
jp
mov
cmp
ins
movs
sbb
push
push
das
mov
push
xchg
ret
cmp
mov
pop
pop
addr16
popa
stos
push
in
popa
pop
adc
repz
and
popa
ins
out
pop
or
jb
call
or
ficom
repnz
xchg
out
lahf
add
repnz
or
push
scas
ss
mov
inc
out
mov
xchg
xchg
loopne
cmp
fwait
outs
xor
cmps
mov
push
dec
test
repz
adc
sbb
sti
sbb
stos
sub
xor
add
lods
fwait
jns
test
adc
(bad)
sbb
fbld
loope
sbb
(bad)
mov
sbb
cmp
cli
cmc
dec
push
in
jp
dec
pop
in
jne
sub
and
repnz
and
in
sbb
mov
mov
lea
mov
push
stos
inc
cs
out
or
add
cmp
pusha
cmp
(bad)
mov
dec
enter
test
fisttp
cmp
or
mul
fsubr
fld
adc
mov
dec
idiv
adc
jne
add
(bad)
iret
mov
and
les
push
fst
retf
sub
and
fcom
jae
jbe
pop
ins
add
daa
cld
cwde
or
inc
cdq
xchg
(bad)
hlt
adc
ret
lods
outs
mov
push
test
pop
addr16
mov
adc
jae
inc
jmp
dec
outs
lds
sub
xchg
mov
mov
ja
fbld
ffree
in
aam
dec
inc
and
out
shr
fwait
and
dec
sub
fimul
add
(bad)
clc
fsubr
push
mov
add
push
pusha
std
jmp
pop
out
out
add
and
xor
xor
mov
fwait
dec
retf
imul
mov
imul
xchg
(bad)
mov
jge
jmp
imul
pop
sbb
(bad)
aam
jns
or
and
push
dec
shl
push
imul
dec
sub
retf
push
movs
into
sub
jns
jae
pop
mov
add
adc
test
ss
jb
jmp
add
in
xchg
add
add
ror
xor
and
pop
mov
cwde
mov
add
jnp
ret
jmp
and
sbb
mov
mov
addr16
dec
adc
imul
lock
ja
popa
fwait
mov
mov
shr
push
xlat
sub
xchg
cwde
jp
cmps
shl
and
jmp
fild
loope
stos
mov
ss
sub
push
push
push
mov
xchg
adc
inc
cmp
jmp
pop
rcl
pop
jno
mov
pop
pop
daa
sbb
pushf
xor
les
inc
adc
xlat
cmp
je
shl
outs
cdq
xor
loop
(bad)
(bad)
shl
pusha
xor
lea
pop
mov
scas
pop
cld
mov
mov
(bad)
jne
mov
rcr
stc
aam
jnp
mov
adc
test
mov
(bad)
sbb
(bad)
jmp
pop
dec
mov
ja
inc
xchg
cmps
pop
stos
jecxz
inc
pop
mov
cmp
xor
jns
rcl
pop
push
std
test
cwde
repnz
pop
or
add
pop
daa
std
ja
xchg
adc
sbb
mov
aam
or
sti
js
loope
neg
xor
sub
and
mov
ja
ss
xor
inc
mov
lods
loop
add
fwait
addr16
cli
xchg
jle
popf
sbb
sub
in
inc
rcr
mov
movs
mov
icebp
sbb
iret
xor
stos
in
std
mov
mov
fdiv
jne
adc
cmp
sti
fisubr
sar
je
push
jmp
pusha
dec
xor
fimul
loopne
xchg
dec
sub
jecxz
inc
push
movs
cmp
or
inc
ds
mov
pop
mov
daa
imul
iret
test
mov
mov
pop
mov
mov
mov
adc
sti
push
pushf
iret
lahf
or
scas
sti
fmul
jne
iret
jo
movs
cmp
scas
or
jmp
jbe
sbb
pusha
sar
inc
lods
loope
test
adc
pop
movs
cli
mul
push
jo
dec
pop
inc
int
dec
pop
or
mov
xchg
iret
loope
jo
pop
or
dec
inc
push
cld
fisubr
mov
xchg
xchg
in
rol
mov
arpl
mov
pop
mov
dec
xor
ret
push
pop
bound
add
sub
mov
sti
popf
xchg
movs
(bad)
push
lods
pop
inc
lock
xchg
xchg
lods
mov
cmc
inc
jno
adc
jb
pop
bound
retf
mov
lods
xchg
push
dec
xor
xor
cmp
stos
mov
jecxz
js
pop
fwait
shr
movs
or
or
jo
mov
clc
mov
inc
stc
sti
sbb
cwde
mov
stc
lds
das
jb
adc
rcr
loopne
aad
dec
push
push
pop
adc
imul
(bad)
arpl
add
pop
rol
add
jecxz
jno
aaa
ins
xor
cmps
int
cmp
(bad)
or
sbb
push
int3
fninit
pop
jo
mov
mov
push
movs
push
push
xor
xchg
cmp
nop
daa
jae
out
sub
or
add
add
pop
xor
dec
push
cli
mov
sbb
lods
call
mov
fwait
mov
icebp
mov
enter
or
mov
sub
mov
lahf
repz
in
cmp
dec
inc
jnp
pop
std
hlt
cmc
jge
cmps
push
cld
out
mov
movs
test
sub
fidiv
jb
mov
push
je
arpl
mov
sbb
push
cmp
data16
cmps
imul
jbe
nop
shr
mov
call
ins
cwde
mov
je
rcl
fst
pop
(bad)
xor
inc
push
add
sbb
xor
mov
jnp
mov
xor
aam
cmp
hlt
cmp
gs
xor
xor
mov
es
push
pcmpeqd
out
xchg
xacquire
ins
(bad)
fisub
sub
xor
inc
xchg
sub
mov
mov
in
xor
dec
fld
add
push
movs
sahf
sub
mov
or
retf
popf
mov
inc
cmps
mov
xor
sbb
fucomip
pop
dec
mov
push
sub
movs
cs
out
cmp
gs
sub
mov
xchg
dec
mov
add
icebp
lock
push
test
arpl
pop
lea
and
sbb
mov
(bad)
imul
je
lea
inc
push
fiadd
xor
inc
mov
sti
xor
add
inc
cli
dec
outs
scas
neg
je
and
adc
imul
or
dec
lahf
mov
cmp
out
cli
stos
push
and
dec
or
jno
dec
xchg
icebp
dec
outs
inc
inc
cmp
mov
add
lahf
lds
outs
mov
push
addr16
mov
out
imul
mov
push
repnz
out
sbb
out
fist
and
ss
xchg
lods
sbb
lods
in
dec
or
in
mov
push
fiadd
inc
scas
pop
aad
jle
gs
fst
loop
retf
shl
enter
sbb
and
and
push
inc
xor
or
fwait
daa
mov
call
(bad)
push
xchg
cmpxchg
push
xchg
push
jmp
push
and
jecxz
sar
dec
cmp
or
fsub
add
std
ror
fidiv
in
jns
jb
outs
mov
(bad)
lods
cmp
dec
jo
jo
ret
dec
movs
popf
push
aaa
push
or
sbb
shr
sub
pusha
xchg
(bad)
cmp
cmc
mov
pushf
mov
sbb
cwde
add
mov
aam
pushf
pusha
mov
xchg
or
js
push
inc
jmp
repz
jle
imul
adc
pop
call
js
sahf
test
call
mov
loopne
sbb
div
aaa
jae
inc
into
pop
or
pop
fist
mov
xor
inc
mov
pop
pop
cmps
daa
cwde
sub
popa
jnp
test
jmp
sub
pushf
jp
pop
loope
jo
adc
gs
mov
(bad)
mov
mov
popa
mov
iret
dec
(bad)
sbb
push
jbe
dec
pushf
and
jge
aaa
dec
cwde
cmp
fwait
xchg
je
push
adc
sbb
push
pop
aaa
popa
mov
enter
push
ret
mov
test
add
fs
mov
imul
das
lods
js
in
inc
xchg
hlt
ja
pop
mov
or
adc
jne
xor
cmc
xchg
mov
jnp
xchg
xchg
jnp
push
imul
nop
icebp
sbb
ds
je
std
ins
aaa
push
jne
sub
cmps
sbb
xchg
sti
iret
mov
not
cmps
adc
std
jg
sbb
mov
cli
xchg
dec
jnp
pop
mov
mov
fstp
xor
mov
test
scas
jns
fwait
xor
retf
pop
mov
cli
gs
nop
adc
inc
(bad)
clc
mov
fwait
mov
iret
sbb
pop
push
scas
nop
mov
scas
cmp
hlt
loop
enter
xchg
adc
stc
adc
push
dec
ds
cmp
adc
dec
clc
in
cmp
enter
lock
in
mov
(bad)
jg
test
(bad)
adc
test
xchg
ins
mov
cmp
pop
cmps
dec
mov
adc
sub
or
lods
and
aaa
std
xchg
sbb
pop
xchg
cwde
push
mov
(bad)
pop
stc
add
test
inc
add
ror
xchg
mov
mov
pop
loop
pusha
arpl
in
mov
mov
ds
cwde
cmp
mov
lds
scas
ror
pop
lea
jecxz
sbb
mov
int3
stos
dec
and
and
add
jbe
daa
in
mov
leave
test
aam
mov
dec
xchg
xor
cli
push
mov
and
mov
push
xchg
mov
cmp
cmp
test
mov
cmp
mov
push
xor
cmp
adc
pop
arpl
adc
js
in
pop
scas
std
and
xchg
(bad)
add
fdiv
or
xchg
xchg
(bad)
adc
arpl
dec
fbstp
or
cmp
mov
aad
inc
outs
jle
hlt
inc
inc
xchg
lods
xchg
xor
(bad)
imul
mov
movs
or
xor
xchg
subps
xchg
push
or
loopne
(bad)
aad
outs
in
inc
loop
aad
xor
pop
dec
int3
imul
dec
call
jno
nop
mov
rcl
mov
push
std
adc
nop
cs
sub
cmps
pop
pop
push
jne
or
enter
jg
out
adc
push
sub
clc
and
push
inc
inc
and
jecxz
xchg
lods
(bad)
cmp
and
cmp
outs
fcmovnb
cli
loopne
arpl
in
mov
push
popa
dec
jo
imul
sbb
shr
push
and
push
push
out
mov
jns
repnz
push
pop
mov
push
ret
int3
and
aam
popa
test
arpl
or
mov
cs
pushf
in
pop
or
(bad)
leave
loopne
rol
dec
fdivr
fist
add
dec
jbe
neg
mov
inc
adc
pop
ja
mov
xchg
push
int
push
and
adc
in
test
call
add
pop
ror
xor
ss
sbb
push
fadd
xor
or
aas
test
(bad)
add
sub
arpl
popa
add
xchg
cli
cwde
(bad)
dec
inc
lods
shr
out
xor
mov
jmp
aaa
push
xlat
je
jno
sar
mov
pop
sub
lock
mov
sub
push
push
jle
fdiv
adc
out
sbb
mov
popa
adc
or
cwde
adc
popa
ds
sbb
or
jb
loopne
dec
scas
adc
aam
(bad)
push
mov
repnz
daa
sbb
sti
inc
clc
mov
in
mov
xchg
mov
pop
in
comiss
jns
jbe
or
test
scas
sub
mov
cmps
push
dec
pop
push
inc
mov
mov
cwde
add
nop
inc
sub
push
mov
sbb
mov
test
(bad)
xlat
and
retf
or
sti
lods
add
dec
and
jb
xchg
pushf
fst
movs
add
mov
fwait
cmp
mov
je
jne
or
cmp
addr16
scas
mov
shr
and
add
pushf
aam
xor
gs
cmp
test
jmp
leave
dec
gs
sbb
ds
stc
ds
test
test
jo
add
adc
outs
add
push
or
enter
adc
stos
inc
iret
fwait
mov
adc
inc
jnp
addr16
sahf
push
mov
pop
arpl
js
(bad)
jmp
aam
add
aaa
mov
jp
pop
in
inc
push
inc
jne
mov
jg
ins
xchg
(bad)
jg
lock
in
int3
push
or
jl
hlt
pop
pop
ror
mov
adc
cld
xlat
push
or
jnp
push
test
jno
retf
jns
ja
jecxz
scas
and
ret
bound
movs
mov
xchg
jle
xor
lock
dec
in
and
mov
sahf
add
ja
sbb
mov
xchg
mov
pop
cmp
pop
pusha
or
lahf
daa
lahf
jno
adc
cmp
jae
xor
and
call
fwait
pop
xor
scas
test
or
call
or
fsubr
fwait
push
outs
jb
dec
cmp
add
xor
mov
inc
sbb
ja
out
mov
fdivr
ds
(bad)
retf
sahf
push
adc
pop
mov
and
std
iret
push
mov
movs
dec
movs
inc
xchg
xchg
add
lods
xchg
popa
sbb
outs
(bad)
aaa
mov
xchg
inc
and
jns
add
lock
jno
sub
xor
fwait
pop
rcr
daa
add
mov
xor
push
fwait
or
ret
mov
ror
jecxz
sbb
je
pop
fwait
jg
repz
ret
jb
lea
dec
mov
data16
mov
sbb
div
xchg
clc
in
test
add
push
pop
out
ss
cmp
dec
arpl
lds
dec
jb
into
rcr
cdq
adc
ficom
sahf
nop
mov
lahf
daa
mov
sbb
mov
and
es
arpl
mov
fsubr
sub
dec
stos
jmp
(bad)
xlat
clc
adc
loope
sbb
mov
jo
and
test
jne
(bad)
call
add
and
mov
in
jnp
mov
mov
push
pop
pop
adc
mov
push
sbb
retf
imul
xor
dec
outs
mov
in
das
in
cmp
mov
call
dec
into
sub
pop
ins
cmp
push
push
add
out
fcmovnb
cli
mov
(bad)
loopne
jge
pop
hlt
ss
mov
and
aaa
stos
mov
jg
repnz
xchg
xchg
mov
lods
cmp
lods
pushf
push
pop
lock
in
mov
es
jle
push
faddp
stos
(bad)
xchg
xchg
test
out
loop
aas
loopne
fsubp
test
mov
mov
test
idiv
int
clc
and
pop
aam
mov
jle
js
call
mov
loopne
imul
mov
pop
into
scas
or
mov
cmp
fimul
movs
cmp
popf
or
ins
movs
shr
add
xchg
mov
loope
cs
sbb
xor
xor
gs
xchg
in
jg
(bad)
iret
push
fcomi
aas
in
inc
(bad)
(bad)
scas
js
je
dec
and
int3
(bad)
fidivr
daa
shl
out
mov
mov
ret
popa
xchg
adc
mov
mov
mov
mov
xchg
stos
sub
sub
ins
out
call
imul
inc
and
mov
inc
jne
sbb
int
push
xor
mov
fld
mov
fdivr
das
inc
push
sub
daa
or
call
mov
xor
loop
aaa
add
lock
retf
jne
sub
clc
sub
sub
fwait
aam
sub
xchg
push
shl
mov
pop
push
jae
popa
cmps
(bad)
xchg
dec
jo
fimul
sbb
lock
or
mov
sbb
xor
popa
mov
repnz
mov
and
push
and
xor
jmp
adc
mov
push
and
adc
xchg
mov
outs
sbb
push
movs
sub
sub
dec
(bad)
test
jae
aas
ds
pcmpeqb
ja
sub
mov
xor
pop
push
std
inc
cmp
dec
xor
push
push
mov
fcomp
rol
int
call
and
and
xchg
mov
add
cmp
add
dec
inc
xchg
iret
jnp
sub
sub
sahf
sub
sbb
fild
int
inc
pop
cli
in
imul
cmp
in
popf
dec
sbb
sbb
sub
adc
xor
add
scas
xchg
or
pop
call
jp
sar
out
jnp
test
lods
imul
jle
aad
in
pop
out
dec
xchg
pop
lahf
xchg
cmp
push
mov
cmp
dec
push
adc
push
aam
mov
push
pusha
aas
pop
call
push
fwait
repz
into
xor
inc
jecxz
dec
es
call
mov
fwait
js
iret
pop
cmps
xor
into
into
clc
fstp
pop
sub
cmps
out
mov
jnp
lock
into
pop
out
sub
test
icebp
pop
leave
shl
das
cs
jg
adc
mov
jmp
call
ret
mov
xlat
fnsave
pcmpeqb
cmp
jp
mov
icebp
sti
mov
pop
jo
jne
sub
out
and
das
xor
mov
cs
stos
dec
lds
test
pop
ds
push
clc
clc
in
mov
jmp
cmp
jle
clc
mov
imul
imul
sub
adc
sbb
ret
xchg
mov
mov
imul
out
loopne
sub
pop
push
cmps
sub
inc
bound
gs
stc
mov
pop
lods
(bad)
pop
adc
xchg
and
sub
fist
and
scas
mov
dec
and
xor
leave
cwde
fmul
les
pop
movs
ret
in
sbb
add
mov
jl
sub
outs
ror
daa
add
dec
jo
jmp
cmps
push
adc
add
adc
jb
dec
mov
fisubr
ret
sub
dec
push
cmp
loop
movs
test
jl
outs
sahf
imul
sub
pop
push
pusha
not
div
popf
mov
pop
jg
call
xor
ror
clc
and
aam
adc
int
xchg
mov
movs
pop
clc
clc
pop
retf
add
xchg
add
out
(bad)
mov
and
mov
call
xor
in
aam
sbb
sub
mov
and
mov
pop
xchg
mov
cmps
and
fs
out
jmp
inc
xchg
push
mov
ss
dec
cs
inc
add
js
dec
cmp
xchg
aas
push
inc
out
xchg
dec
adc
stos
(bad)
push
or
mov
adc
add
sbb
mov
dec
mov
add
adc
fldcw
jg
dec
sub
push
icebp
ret
in
aas
xor
out
add
jle
mov
stos
or
fsub
add
lods
push
test
mov
adc
ret
sti
mov
or
pop
pop
xchg
loope
int
and
(bad)
mov
pop
call
test
dec
(bad)
cdq
aas
sub
out
mov
mov
lods
or
repnz
int3
pop
push
mov
shl
clc
pop
aas
mov
dec
into
(bad)
add
add
and
loope
push
pop
ja
fwait
in
ud1
lds
pop
mov
cmc
dec
xlat
das
mov
inc
lea
pop
pushf
sub
jp
rol
pop
cld
or
jle
mov
shl
hlt
bound
or
dec
nop
cli
pushf
or
or
(bad)
loop
mov
fadd
movs
cmp
out
jge
sti
xor
in
sub
ret
test
or
(bad)
sub
jmp
stc
idiv
loop
popf
icebp
cli
adc
out
int3
adc
dec
div
push
imul
xlat
jg
test
lods
scas
ds
or
aam
popf
cmp
dec
pop
inc
scas
scas
pop
push
mov
ror
loopne
test
js
mov
pushf
stc
cmps
xchg
mov
call
mov
test
out
inc
mov
and
mov
xchg
mov
xchg
push
shr
enter
mov
jnp
fcmovu
mov
aam
out
sub
and
leave
(bad)
adc
push
xchg
fiadd
inc
loope
push
in
out
les
fnstcw
add
xchg
fnsave
in
call
push
sahf
inc
cmp
jnp
xchg
mov
jne
in
outs
mov
aaa
cdq
ret
lods
inc
stos
or
ficomp
or
xchg
or
ds
(bad)
ss
jo
pop
fidivr
add
sub
outs
mov
pop
retf
sbb
and
(bad)
into
jns
pusha
cmp
or
iret
pop
or
push
cld
into
mov
xchg
cmps
out
es
ss
xchg
dec
xor
repz
mov
jecxz
dec
sbb
jns
pop
sub
lods
sahf
jb
sahf
add
xchg
out
xchg
push
adc
scas
push
(bad)
out
fs
push
in
mov
mov
jns
das
mov
lock
inc
fcmovnbe
test
pop
sub
xor
jecxz
add
loopne
pop
push
xor
sbb
jnp
neg
sub
cdq
js
pop
repnz
mov
dec
out
jp
movhps
(bad)
or
sar
rcl
lock
pop
cwde
xchg
repz
or
adc
cmps
pop
movs
mov
mov
dec
sub
in
int
retf
rcr
pusha
push
fadd
jle
movs
lods
repnz
hlt
adc
mov
xchg
mul
xor
int3
sbb
sub
jmp
and
xor
(bad)
xchg
inc
fstp
cmps
and
sub
inc
(bad)
pop
mov
call
xor
jge
jb
daa
data16
call
sar
xchg
das
ficom
xor
rcr
aas
mov
call
rol
(bad)
je
mov
test
jp
adc
or
dec
jne
inc
push
inc
enter
sub
shl
aam
xor
dec
inc
call
pop
cld
aad
sbb
pusha
fcom
cmc
or
cld
ds
out
fst
les
xor
pusha
jno
in
mov
push
jne
rcl
xor
rcl
sub
fcomp
jbe
retf
sub
push
fwait
pushf
loopne
fisttp
std
clc
jecxz
inc
popf
inc
fidiv
sub
dec
xchg
scas
fsub
popa
addr16
mov
pop
jnp
push
fsub
mov
(bad)
jne
adc
jg
cs
cmp
je
dec
sub
imul
jno
sub
outs
adc
cld
das
and
mov
dec
dec
daa
shl
push
(bad)
ds
inc
or
nop
mov
adc
mov
addr16
movs
pop
ds
aas
out
add
sbb
sub
fisubr
fsubr
call
mov
cdq
mov
push
inc
pop
inc
call
bnd
adc
xor
(bad)
or
ins
inc
mov
lahf
out
not
push
cmp
lods
out
out
fisubr
push
push
pusha
in
add
or
sub
mov
mov
movups
aam
and
inc
sub
pop
adc
inc
(bad)
icebp
cmp
popa
test
sub
icebp
stos
dec
mov
push
cld
cld
sar
sbb
mov
and
xor
mov
xchg
retf
les
sub
xor
cs
(bad)
pop
push
addr16
adc
repnz
div
rol
das
push
retf
pop
jecxz
js
pop
push
iret
stc
xor
shl
mov
push
movs
xchg
mov
lods
and
or
mov
xor
add
fwait
sbb
adc
cld
mov
outs
sub
pop
xor
scas
adc
mov
ja
mov
pop
out
xor
adc
mov
cmp
jno
jnp
out
lds
stc
sub
xor
jo
sbb
jmp
jecxz
sbb
sti
arpl
cmps
pushf
in
stos
add
ja
inc
pushf
stc
(bad)
dec
mov
pop
jp
xor
and
aaa
xchg
stos
push
or
lock
or
xchg
mov
fisttp
fidivr
push
movs
std
scas
leave
out
movs
bound
pop
jmp
test
adc
out
popf
mov
jle
mov
cmp
out
movs
bound
dec
cmp
in
cmp
inc
and
pop
xchg
or
jmp
(bad)
call
jmp
or
cmp
scas
je
xchg
iret
rol
dec
pop
jmp
adc
xchg
pop
push
mov
stc
(bad)
clc
std
pop
cld
xchg
xor
iret
jns
or
and
movs
jo
adc
xor
(bad)
fidivr
mov
xlat
cli
cmc
out
out
adc
or
popa
test
lahf
aas
dec
jmp
and
daa
or
cmp
mov
(bad)
sbb
pop
out
test
iret
fisub
sbb
dec
mov
outs
or
loopne
jae
adc
aad
je
mov
pop
fwait
mov
call
dec
outs
retf
cmc
fidivr
cwde
xchg
mov
or
ror
test
cmp
mov
ret
dec
fcomp
call
or
inc
dec
mov
sbb
inc
je
jmp
sub
sub
pop
mov
push
xchg
mov
ror
rol
(bad)
and
inc
mov
pop
push
dec
mov
in
das
jmp
inc
mov
or
ror
mov
lods
out
or
pop
aas
sub
inc
mov
addr16
popf
add
pusha
ins
pop
cdq
or
stc
in
jae
inc
pop
aas
std
cdq
jle
std
add
imul
push
clc
dec
(bad)
pop
pcmpeqw
(bad)
sbb
cmp
je
fs
daa
retf
mov
aas
in
call
lea
jne
adc
icebp
cmp
pop
mov
push
pop
sahf
cwde
xchg
pop
pushf
cs
inc
fistp
call
clc
jl
sbb
pop
adc
dec
and
retf
stos
jbe
sti
daa
stc
mov
iret
add
pop
jp
inc
xchg
in
cmc
inc
and
in
daa
push
adc
bsr
test
xchg
mov
sub
fcomip
sub
(bad)
lock
cmc
scas
leave
retf
mov
repz
mov
pop
(bad)
mov
in
es
inc
cli
ret
cmp
jb
out
jmp
in
sub
fs
lea
movs
in
scas
aam
mov
pop
popa
mov
popf
inc
dec
mov
shl
mov
fwait
les
aad
daa
test
pop
ror
sub
and
push
pop
cmp
cmp
mov
mov
push
test
jmp
jb
ss
jle
dec
in
mov
dec
add
sub
sti
mov
or
dec
movs
or
(bad)
lahf
add
inc
sti
stc
les
push
hlt
cmp
fstp
sar
or
test
je
imul
out
test
cld
dec
fistp
icebp
pop
pop
test
or
inc
mov
xchg
sti
das
mov
lods
test
cld
push
add
dec
inc
loope
sub
cmc
fwait
jmp
xchg
fs
push
shr
xor
xchg
sbb
cdq
lahf
or
daa
and
mov
xor
ret
ret
jns
dec
sbb
aad
add
test
dec
shr
mov
outs
popf
cmp
add
shl
nop
push
fild
push
sbb
push
dec
stos
popa
cmp
sahf
xchg
pushf
test
xor
dec
mov
pop
push
pop
and
fisubr
mov
sar
call
mov
pop
ins
dec
add
xchg
push
fsub
pop
jb
dec
out
dec
cmp
pop
mov
and
sbb
in
cli
inc
inc
dec
shr
stos
jns
cmp
xchg
pop
fcmovnu
xchg
dec
or
movs
(bad)
retf
dec
jmp
pop
dec
mov
dec
retf
dec
jecxz
sub
ins
test
mov
and
(bad)
sar
jmp
xor
or
popf
adc
sub
add
or
mov
jge
daa
sbb
or
arpl
mov
sbb
dec
jl
xor
xor
mov
adc
and
dec
popf
sub
aaa
lods
mov
inc
sub
or
jmp
les
xor
fist
and
stos
xor
test
cmc
xor
stos
pop
cli
addr16
inc
retf
adc
movs
into
(bad)
js
cmp
or
pop
in
mov
and
fbstp
xchg
fsubr
aas
cmp
test
aam
push
sar
es
pushf
sti
or
retf
adc
ror
data16
xchg
aad
jbe
cli
cmp
xor
cmc
jle
out
es
das
fscale
push
or
popa
test
cmp
cmps
lea
scas
in
je
inc
fcmovnb
stos
repnz
loope
movs
in
in
or
mov
xchg
xchg
mov
pop
cmp
push
cmp
popf
push
not
cld
stos
or
push
arpl
sub
rcl
test
adc
cmp
mov
lods
mov
sbb
xor
test
mov
jne
xchg
and
xchg
jns
nop
out
add
dec
dec
mov
jbe
scas
xchg
push
int3
inc
xchg
inc
dec
scas
ss
test
mov
and
ficom
mov
mov
fwait
mov
inc
and
pusha
mov
loope
jp
icebp
sbb
push
fdivr
int
in
xor
loope
xchg
icebp
in
mov
jb
mov
lock
sar
mov
daa
test
mov
add
pusha
in
lods
sbb
cmp
sbb
inc
bound
shl
addr16
jo
sub
sbb
stc
cmp
scas
idiv
(bad)
push
adc
mov
ja
jp
(bad)
sbb
aas
adc
mov
push
cwde
dec
push
sub
pop
in
add
xor
shl
stc
cmps
dec
jp
mov
lds
(bad)
and
xor
sbb
mov
pushf
mov
or
adc
clc
fcomp
mov
sti
out
ficom
push
cmp
adc
popf
mov
push
mov
dec
or
mov
push
mov
or
adc
or
mov
cmp
cmps
out
pop
je
fimul
sbb
fisttp
ds
addr16
and
jb
ror
fstp
inc
adc
add
and
push
cmps
add
inc
lods
ins
pusha
(bad)
sti
out
add
sub
aaa
xchg
popa
cmp
aad
pop
add
xchg
jmp
arpl
test
adc
data16
xchg
lock
hlt
pushf
les
mov
and
aad
popf
neg
push
cmp
ja
int
scas
loopne
repz
jnp
pop
ins
pop
in
outs
imul
push
sbb
sub
dec
push
aas
les
sti
sbb
pop
scas
inc
je
mov
out
ja
jbe
or
in
xchg
cmp
jno
jns
ret
fbstp
test
jl
es
dec
jp
cld
hlt
mov
or
mov
jo
scas
xchg
test
std
out
inc
pop
dec
js
jno
push
push
pop
movs
mov
retf
call
cmps
cs
mov
adc
sbb
inc
mov
mov
xlat
imul
dec
rcr
pop
inc
xor
mov
pop
mov
call
adc
rol
inc
sbb
hlt
cmp
xchg
pushf
loop
jmp
sub
int3
mov
mov
mov
mov
inc
and
push
mov
adc
xor
push
xchg
pushf
xor
test
add
fidiv
and
test
pop
imul
cmc
jo
dec
pop
nop
dec
sbb
mov
addr16
mov
les
and
jne
sub
movs
mov
push
sbb
xor
jp
out
out
clc
push
cmc
fisub
adc
cmps
jmp
sbb
fisttp
and
push
xor
nop
push
repz
inc
frstor
test
cmp
or
pop
sbb
addr16
cmp
push
and
adc
nop
push
shl
cmp
scas
(bad)
jecxz
movs
add
xchg
jo
sbb
jg
lea
add
xchg
fwait
jne
pop
adc
in
(bad)
sahf
fwait
mov
add
cmps
jg
mov
and
and
add
lahf
sub
pushw
jmp
hlt
mov
scas
inc
jle
mov
daa
pusha
ds
cmp
push
pop
mov
in
das
xor
cmp
ret
mov
outs
ss
in
mov
cmp
cmp
inc
test
pop
sbb
test
scas
cmp
mov
pop
rol
int3
mov
ss
cmp
cdq
hlt
jae
push
arpl
mov
jge
push
loopne
jo
jle
sub
push
ss
sub
inc
mov
(bad)
sbb
leave
adc
sbb
in
cmc
nop
aad
test
cmp
inc
dec
dec
ins
retf
mov
ds
xchg
fdivr
push
cld
rol
or
xor
mov
daa
in
lahf
pop
sub
or
stos
sti
xlat
or
sbb
mov
jo
or
ror
rcr
adc
push
pop
outs
push
loop
push
jmp
js
sbb
and
cmps
pop
xchg
fstp
fmul
mov
ins
cmc
loopne
mov
push
xchg
nop
xchg
and
ins
pop
scas
pop
or
cmp
ds
dec
jge
leave
cmc
jno
movs
test
jnp
bound
jne
jnp
leave
mov
lahf
add
cmps
jmp
fwait
stos
cmps
cmp
mov
sbb
xor
and
cmps
cmp
push
aas
jae
jnp
mov
nop
stos
(bad)
test
or
sti
sbb
and
or
jne
xor
lahf
dec
pop
es
inc
xchg
inc
fidiv
mov
(bad)
rcr
mov
lods
or
pop
inc
xchg
dec
cmp
jge
mov
mov
add
pop
sub
sub
push
mov
dec
push
out
sub
push
(bad)
out
pop
lods
outs
in
inc
xor
in
out
sbb
mov
mov
lahf
or
mov
mov
loope
xor
xchg
sub
fiadd
xchg
pop
das
scas
jmp
or
sub
xor
movs
add
push
mov
arpl
cmp
sbb
sub
sbb
sti
jb
push
add
lea
imul
sbb
int
iret
addr16
jmp
(bad)
shl
les
cmps
jg
cmc
mov
mov
push
add
xchg
push
repnz
add
xchg
fidiv
popf
fwait
sbb
shl
mov
jp
cmp
pop
pop
(bad)
std
sbb
adc
fdiv
dec
dec
sti
pusha
sub
gs
(bad)
adc
cmp
aas
daa
sahf
sbb
inc
or
stos
mov
ficom
fiadd
cmp
xlat
daa
push
data16
out
(bad)
repnz
mov
icebp
sub
sbb
mov
xchg
pop
stos
aam
push
shr
pusha
fdivrp
aaa
hlt
push
sahf
pop
xchg
psubb
inc
xor
nop
or
push
shl
mov
xchg
in
sub
inc
loope
xchg
int
mov
sbb
lahf
xchg
into
cmp
fsubr
mov
pop
xor
xor
jnp
test
jg
sub
add
inc
jne
jge
mov
(bad)
dec
xchg
mov
sub
(bad)
xor
push
loope
mov
push
shl
popf
cmp
jl
xor
mov
addr16
sar
or
adc
jmp
mov
xor
nop
and
cmp
pop
cmp
add
dec
lock
push
into
hlt
(bad)
aas
aas
jge
add
mov
jo
dec
sub
xchg
int
dec
(bad)
(bad)
mov
inc
call
repz
mov
add
mov
mov
and
popf
mov
inc
int3
pop
jle
stos
dec
push
sti
pop
(bad)
(bad)
xlat
imul
xor
xor
por
call
outs
fwait
je
cmpxchg
mov
jnp
push
jb
add
(bad)
arpl
into
or
inc
mov
pop
in
test
and
neg
les
inc
clc
into
je
sub
and
out
mov
ret
lds
sub
and
cmp
sub
mov
retf
cmp
push
sbb
je
xchg
jb
cmp
ficomp
jmp
push
sub
mov
push
movs
int
pop
adc
call
inc
mov
xchg
fidivr
je
add
and
sub
push
sub
adc
ret
into
mov
in
jno
push
jbe
xchg
imul
jl
sub
xor
sub
pop
std
pop
arpl
or
ret
mov
es
mov
mov
in
mov
ins
add
out
adc
jge
cdq
mov
push
push
jb
xchg
ins
xchg
or
hlt
js
leave
ror
xchg
fnstenv
clc
in
add
dec
aas
and
dec
ja
fdivr
pop
adc
call
ss
cmps
sahf
iret
xchg
add
inc
mov
push
stos
add
loopne
sbb
xchg
mov
dec
(bad)
pop
sbb
adc
(bad)
cmp
rcl
loope
pop
(bad)
sti
int3
call
xchg
mov
gs
popf
data16
mov
scas
pop
jns
jbe
mov
or
pop
ins
jle
out
test
imul
retf
movs
cmp
jg
imul
dec
xor
out
mov
mov
jmp
lea
jmp
and
ins
dec
sbb
add
mov
sbb
mov
adc
inc
mov
sbb
sti
imul
pop
mov
ins
jbe
in
shl
loope
adc
dec
sub
cld
xor
mov
sbb
adc
repnz
mov
xchg
and
mov
push
xchg
adc
mov
inc
ins
adc
and
sahf
jle
push
hlt
mov
fstp
test
pop
mov
nop
leave
dec
shr
in
sub
jae
outs
fst
loopne
ja
hlt
out
gs
les
mov
cmp
push
pop
sbb
or
int3
sbb
leave
sbb
and
sbb
dec
shl
xchg
xchg
pushf
adc
retf
xchg
mov
mov
sub
fldcw
pop
jnp
out
out
sbb
iret
jmp
mov
or
out
retf
arpl
mov
jecxz
add
cli
aaa
dec
retf
out
fistp
mov
aas
add
cmps
inc
inc
cmp
inc
inc
in
mov
inc
in
xchg
cli
pop
out
std
cmp
bound
pop
out
mov
sub
(bad)
repz
iret
(bad)
repz
mov
adc
pop
xor
push
movs
mov
xor
fnstenv
xor
mov
fcomi
outs
pop
xchg
mov
dec
(bad)
and
lgs
imul
clc
(bad)
mov
(bad)
mov
shl
daa
or
dec
fwait
xchg
cmp
push
jo
jle
ins
push
lock
fldenv
lock
mov
cli
mov
movs
js
into
adc
movs
aaa
inc
and
push
aad
test
arpl
push
into
jbe
mov
loope
in
aad
test
js
jns
out
mov
sbb
inc
lock
xor
pop
out
lods
jg
repnz
mov
out
shl
out
push
dec
scas
les
xor
inc
sub
pop
adc
xchg
nop
cmps
adc
ds
pop
call
ja
mov
pop
or
jmp
xchg
and
push
das
int
dec
xor
sub
fst
sub
push
sar
test
fwait
add
fwait
or
add
or
or
mov
in
mov
cmp
xor
cmp
out
leave
int
xchg
push
fisttp
jge
push
test
adc
push
mov
mov
pop
sahf
sub
sbb
lods
loope
fisubr
in
mov
inc
cmps
ins
add
lea
pop
and
aad
cld
push
ret
ss
(bad)
mov
mov
xor
cmp
hlt
fadd
mov
jge
dec
jecxz
cmps
lock
xchg
mov
jbe
xor
dec
lods
jae
aas
push
shr
or
xor
das
ja
sub
push
jg
repz
pop
mov
xchg
clc
jmpw
dec
dec
cli
fs
push
or
daa
or
mov
dec
mov
shl
xchg
int
ins
sbb
xchg
(bad)
dec
mov
jge
dec
dec
scas
test
sbb
and
out
ret
and
das
les
int
leave
fmul
mov
sub
xchg
aas
adc
pusha
add
adc
cli
adc
pop
xchg
je
retf
not
inc
sub
in
cmp
data16
xchg
sbb
xchg
fwait
dec
ficom
or
adc
and
or
jmp
adc
int3
inc
inc
sbb
icebp
cld
rol
or
mov
or
mov
(bad)
mov
mov
xor
imul
fnstcw
getsec
cmp
add
mov
lock
jg
jbe
pushf
ja
mov
sub
test
sti
push
not
cmps
sub
xchg
scas
test
pop
add
push
adc
xchg
dec
loop
cli
mov
movs
pop
xor
in
out
lock
test
push
ins
daa
dec
inc
aas
jns
jmp
cmp
nop
out
stos
add
call
mov
cmp
xor
repz
pop
out
fimul
shr
xor
arpl
call
mov
xor
sar
(bad)
push
cmp
and
xchg
lods
scas
mov
inc
std
fwait
(bad)
cld
pmuludq
jne
aaa
pop
push
cld
or
dec
pop
adc
or
sub
pop
rol
ficom
mov
aaa
clc
popf
xor
mov
cld
mov
jecxz
stos
repz
mov
or
jns
fisttp
xor
add
sti
mov
xchg
in
sub
nop
adc
out
add
fdivrp
or
dec
push
sahf
(bad)
(bad)
fdivr
es
shr
push
and
xchg
stos
mov
jl
pop
adc
nop
cmp
inc
jo
sbb
inc
fidiv
aaa
cmp
and
cmps
adc
jge
xor
inc
and
(bad)
into
xor
xchg
mov
adc
imul
imul
or
adc
cs
sub
mov
cdq
jno
fnclex
inc
push
cld
inc
dec
shr
pusha
test
cmc
loopne
stos
cmp
test
jo
cld
shl
loop
jbe
pop
push
xor
push
retf
iret
inc
cs
sub
icebp
outs
sub
popf
jno
cwde
add
sar
mov
retf
dec
jge
shl
stos
hlt
aas
dec
out
or
test
das
cmp
test
(bad)
lods
retf
arpl
adc
in
mov
shl
shl
popf
cdq
stos
mov
out
dec
add
ret
cmps
xor
sbb
push
mov
inc
test
dec
sbb
dec
inc
sbb
dec
or
pop
pxor
mov
xor
sti
add
cmp
mov
cmp
jge
loopne
in
arpl
or
and
inc
or
dec
fsubr
jge
jo
push
push
and
push
pop
js
pop
repnz
aaa
out
cs
mov
adc
aas
mov
jp
retf
jge
lds
ins
add
xchg
arpl
inc
xor
das
imul
jb
in
icebp
jnp
nop
out
test
fist
add
lds
xchg
or
data16
arpl
jbe
das
mov
cmp
pop
(bad)
ins
(bad)
jmp
or
rcl
sbb
jmp
sub
dec
push
lods
int3
aad
cmps
xchg
jne
mov
out
inc
cmp
test
ret
jecxz
(bad)
(bad)
je
sbb
mov
sahf
add
arpl
stos
inc
js
push
fmul
or
mov
push
push
xchg
pop
js
icebp
(bad)
pop
push
ds
lock
xchg
enter
int3
cmps
in
mov
add
ss
push
dec
nop
mov
jp
pop
mov
fs
push
adc
repz
sub
inc
outs
inc
in
mov
sub
cmp
loope
sbb
mov
jmp
cli
popf
(bad)
out
lahf
jge
and
mov
js
cmp
xchg
push
cmp
mov
jle
lahf
jns
test
jns
test
mov
xor
sub
pop
add
je
mov
mov
xchg
nop
sbb
repz
lock
mov
inc
pop
pop
pop
js
inc
push
mov
push
or
mov
and
push
xor
push
sub
idiv
cld
into
bound
(bad)
outs
pop
jmp
js
push
lahf
ret
(bad)
sub
mov
jo
retf
jmp
sub
pop
adc
push
xor
imul
fist
or
jno
jmp
cmp
xchg
loop
push
inc
jno
ds
test
inc
scas
push
push
fsub
or
jb
pusha
sub
push
imul
sub
adc
inc
add
inc
scas
mov
sub
sub
push
sbb
dec
push
pusha
mov
into
out
arpl
ss
cmp
add
inc
dec
adc
imul
test
add
pusha
dec
sub
(bad)
push
xchg
jmp
aad
inc
test
cld
cmc
inc
dec
xchg
jne
scas
push
fisubr
adc
xchg
cwde
push
jl
retf
xor
pop
cli
fwait
cmps
stos
lock
hlt
(bad)
icebp
mov
add
push
pop
popf
leave
bnd
movs
push
js
mov
es
sti
icebp
shl
and
push
pop
scas
mov
aaa
ja
push
lahf
stos
movs
mov
sub
xlat
not
dec
or
sbb
sub
ret
ret
pop
nop
adc
cmp
pop
push
inc
imul
mov
lods
in
push
retf
(bad)
sbb
cmp
aad
jae
lods
mov
pop
rcr
mov
push
sub
ds
jp
inc
add
and
jmp
adc
rcr
pop
gs
adc
loop
repz
fdivr
add
lods
push
mov
mov
into
or
and
test
add
or
inc
dec
sbb
lods
jge
cmps
ret
clc
xor
cli
inc
sub
call
cmp
std
cli
int
xchg
sub
cmps
rcr
mov
in
dec
dec
pop
push
sbb
mov
add
adc
adc
xchg
sub
(bad)
push
lahf
loop
sub
jmp
or
je
popf
xor
popf
cwde
mov
sbb
xor
in
push
add
sar
jmp
add
sbb
add
mov
dec
lods
fwait
test
xor
arpl
push
sbb
fist
mov
push
rcl
aad
mov
pop
xchg
pop
and
add
fstp
xlat
adc
test
retf
(bad)
xor
das
test
cmp
push
push
movs
mov
xor
je
mov
icebp
ret
adc
lods
pop
xor
inc
scas
test
add
out
pop
mov
test
data16
repz
ja
adc
cmps
cmp
je
inc
dec
movs
popf
add
cld
int
push
je
jl
mov
cmp
pop
neg
(bad)
lods
fiadd
popf
sahf
xor
lods
(bad)
adc
test
push
jg
xchg
or
out
fwait
std
jne
sar
jb
mov
clc
int3
fsub
mov
bound
push
cmps
push
lea
add
pop
leave
sub
adc
mov
movs
addr16
adc
push
xchg
add
cmp
xor
cmps
cmps
das
jae
inc
mov
ins
sbb
data16
ss
push
xchg
rol
cmc
and
push
sub
in
rol
mov
mov
bound
xor
mov
push
sub
clc
jecxz
xor
dec
mov
lea
data16
sub
or
neg
jge
add
lds
loop
and
jns
pop
push
rcl
xchg
cwde
dec
jg
data16
daa
test
push
call
jno
pop
test
sub
lods
and
or
test
lods
xchg
sub
(bad)
mov
popf
(bad)
adc
clc
push
out
push
sub
mov
push
daa
mov
stc
cmc
push
lds
mov
jecxz
scas
cli
jmp
mov
push
ret
mov
int
sbb
mov
push
adc
fst
stos
out
std
xchg
inc
or
jns
stos
cmp
mov
sbb
sbb
mov
pop
(bad)
mov
push
cmp
imul
pop
push
pop
rol
sub
std
outs
jg
jmp
add
test
scas
adc
aam
je
int
or
retf
scas
ror
inc
or
and
pop
shl
xchg
sub
mov
cmc
fcomp
push
and
sub
jmp
call
in
not
fimul
mov
ret
inc
out
sahf
mov
pop
xchg
xchg
inc
scas
push
iret
push
add
add
cmps
lods
inc
jmp
inc
jmp
mov
jp
mov
push
(bad)
xor
mov
push
mov
jg
xchg
ret
jns
dec
stos
ds
adc
sub
and
cmp
clc
sub
or
jae
and
inc
leave
scas
sbb
rol
jle
add
leave
ret
mov
retf
fs
dec
xchg
repnz
loop
pushf
adc
cld
add
shr
mov
addr16
inc
push
dec
in
mov
sahf
adc
mov
jns
lea
fs
cmp
xchg
loop
aad
sub
xchg
add
in
aam
push
fstp
push
loop
pusha
cs
lahf
(bad)
(bad)
push
sar
add
in
cmp
xchg
sahf
es
jge
dec
mov
pop
pop
dec
(bad)
xlat
int
mov
sub
ficom
xor
jmp
push
jmp
int
push
adc
ja
xchg
fisttp
cmp
outs
int3
jae
rcr
fld
in
movs
xchg
cmc
into
xchg
loopne
fdivr
xor
aam
push
sub
adc
adc
out
lods
mov
aad
mov
and
stc
push
movs
mov
pop
out
cli
cmp
std
js
stos
xor
and
inc
shr
jmp
mov
xlat
push
aad
xchg
mov
ret
out
sbb
cwde
or
jo
into
sub
cdq
cmc
lahf
inc
pop
sbb
and
ins
fcomp
mov
pusha
movs
or
fs
inc
arpl
lahf
push
(bad)
fwait
adc
addr16
dec
mov
mov
fldenv
mov
and
or
sbb
adc
es
pushf
or
shl
mov
mov
push
fcmovb
fsin
and
shl
or
pmullw
(bad)
out
loopne
mov
pop
fld
push
mulps
dec
mov
inc
xchg
mov
or
cmps
ret
dec
rcr
retf
imul
lea
pushf
push
and
sub
dec
and
mov
iret
imul
jno
or
icebp
hlt
jmp
jnp
add
outs
ss
dec
sbb
pop
test
jno
cmp
in
or
mov
leave
in
sub
das
sub
stc
xlat
mov
push
jns
xchg
test
jae
mov
cmp
dec
xchg
icebp
inc
jl
test
dec
dec
and
ret
cmp
adc
xor
paddw
dec
stos
mov
call
mov
push
(bad)
stos
nop
data16
adc
push
mov
inc
pop
mov
dec
in
data16
test
test
adc
in
daa
jmp
aaa
or
rol
dec
addr16
call
popa
iret
loop
adc
scas
push
cdq
test
and
dec
push
mov
mov
sbb
imul
inc
inc
shr
sub
mov
and
fcomp
push
arpl
cmps
push
lods
push
test
fnsave
push
xchg
add
shl
jb
ss
jp
dec
shl
jbe
sub
and
ins
sub
std
push
movs
cmp
jg
ror
dec
dec
mov
sahf
jae
pop
push
and
inc
mov
jno
daa
cmp
repnz
add
aad
adc
mov
cwde
dec
dec
lods
test
fs
jae
xchg
fimul
add
xchg
out
fs
lahf
je
push
sbb
or
mov
sub
(bad)
add
fadd
repnz
pop
int
int
lds
rcl
mov
sti
and
movs
je
sub
add
cld
mov
mov
fst
jp
std
sub
mov
imul
push
sub
movs
jmp
(bad)
push
sub
add
adc
repnz
mov
in
(bad)
out
(bad)
ins
test
rol
lods
xchg
cmps
push
mov
shl
dec
das
mov
push
ja
mov
outs
xchg
test
cmp
(bad)
jns
dec
int3
cmps
mov
mov
dec
jns
push
and
jnp
clc
push
das
gs
jne
enter
mov
popw
adc
dec
(bad)
outs
xchg
sbb
lahf
cmp
cmp
pop
xchg
imul
movs
mov
xor
pop
xor
mov
jge
mov
jge
into
jle
add
mov
lea
mul
aas
dec
nop
test
movs
daa
or
mov
adc
ret
js
test
push
imul
adc
dec
in
test
or
fs
js
je
rcr
je
mov
cmp
add
stc
imul
add
push
sub
cmc
outs
retf
jns
ja
jmp
in
stos
sbb
(bad)
jmp
lahf
das
push
xchg
data16
out
jp
mov
add
adc
loop
mov
ins
(bad)
mov
rol
xor
mov
sbb
nop
push
(bad)
pop
ss
push
into
lahf
mov
je
xchg
repnz
mov
in
mov
sub
dec
sbb
push
xor
daa
fisub
cmps
fldenv
pop
ins
(bad)
daa
setl
fisttp
jmp
imul
aas
mov
arpl
scas
cmc
pop
test
push
sti
stos
push
movs
xor
dec
aaa
(bad)
arpl
std
std
stos
push
stos
xlat
sbb
outs
dec
cld
fcmovnb
pop
push
sbb
cmp
mov
mov
xor
inc
jbe
pop
loope
jge
clc
lock
dec
(bad)
int
icebp
(bad)
add
push
or
ret
push
jle
cld
fild
push
jl
rol
jnp
dec
and
shr
rol
mov
(bad)
add
lds
add
ds
and
jmp
mov
xorps
cwde
ret
daa
ins
test
popa
stos
jns
retf
ret
mov
test
add
push
inc
or
mov
push
sti
jnp
adc
(bad)
sbb
mov
addr16
movs
xor
pop
cmp
jne
cmp
pop
sub
push
mov
jae
pop
fild
and
jo
fisubr
retf
cmp
mov
xchg
inc
(bad)
mov
sub
mov
cmps
ja
imul
adc
or
mov
enter
push
pop
(bad)
dec
pandn
mov
out
cmp
jmp
std
sub
pop
fistp
xchg
xchg
ucomiss
or
jbe
dec
add
shl
ss
aad
int
cld
push
pop
outs
pop
pusha
or
pushf
xchg
adc
mov
imul
fisttp
xchg
adc
mov
ins
sbb
outs
std
(bad)
adc
loope
xlat
mov
xchg
xor
adc
pop
shl
jmp
xchg
test
mov
mov
ss
dec
mov
aad
inc
jecxz
fs
loopne
aad
mov
xchg
mov
sbb
jg
popf
cs
ja
xor
fsubr
neg
mov
(bad)
push
push
pop
mov
fimul
inc
repz
push
ffreep
scas
and
jae
xchg
adc
cmp
std
data16
dec
ficom
retf
inc
xchg
adc
popa
out
xor
add
adc
xchg
jne
mov
cdq
cs
jmp
push
jp
lds
shr
mov
stos
xor
shl
mov
out
xchg
test
add
xchg
sbb
jp
mov
adc
rol
retf
xor
lahf
sub
inc
pop
popa
mov
lahf
pop
or
jnp
call
push
mov
sbb
rcr
test
(bad)
fsincos
int
and
aad
adc
adc
das
add
ins
push
ds
mov
and
mov
popa
outs
mov
movs
movd
inc
js
das
(bad)
cmp
mov
pushf
xor
aad
jge
mov
scas
push
les
call
mov
(bad)
loope
ds
das
outs
xchg
and
(bad)
cdq
jmp
jmp
adc
scas
(bad)
idiv
test
dec
stc
jbe
lock
dec
in
test
inc
ja
xchg
fs
fs
push
mov
into
mov
cld
inc
dec
dec
mov
xor
inc
jmp
(bad)
in
ficom
(bad)
xor
jmp
aas
xor
in
jge
loope
into
inc
ror
mov
pop
out
push
fild
sti
mov
aam
ror
sbb
int3
sti
lods
das
cdq
pop
inc
mov
rcl
ds
in
xchg
xor
xor
adc
jo
das
add
leave
enter
sbb
pop
jmp
and
popa
mov
loope
rol
and
sbb
(bad)
push
push
push
(bad)
rcr
int
pop
aam
push
dec
or
sub
fs
xchg
jmp
cdq
push
dec
into
add
sub
mov
call
hlt
dec
xchg
arpl
and
(bad)
gs
or
xor
fild
(bad)
xchg
aaa
mov
data16
mov
mov
add
scas
leave
ins
mov
pop
adc
es
mov
xchg
mov
stos
lds
aaa
loop
mov
arpl
mov
dec
sbb
pop
inc
adc
xor
mov
in
fcmovu
jmp
push
rcl
mov
push
pop
les
pop
imul
or
jae
lea
jge
icebp
pop
pop
xor
jl
cdq
not
xlat
loop
fidivr
fisub
jmp
pop
push
jns
scas
fst
add
adc
xchg
cmp
inc
mov
xchg
mov
sub
test
scas
lods
xchg
and
push
cmp
neg
inc
or
jge
xchg
in
sbb
mov
xlat
push
mov
push
(bad)
retf
fsubr
gs
shr
les
mov
lods
cmc
out
(bad)
cmp
or
and
test
jp
(bad)
fsubr
add
hlt
push
and
cli
fwait
ret
bound
and
dec
pop
cli
xchg
jp
add
push
xor
jl
in
jmp
mov
pop
xchg
std
dec
dec
int3
jle
jp
jo
cmp
or
test
push
xor
sub
nop
aam
inc
fiadd
imul
dec
ins
mov
pop
lds
adc
out
cmp
in
lods
das
inc
dec
adc
mov
inc
xchg
loop
jle
inc
xchg
(bad)
or
pcmpeqb
retf
adc
jge
jnp
jge
shl
xchg
cmp
dec
in
adc
push
(bad)
ficomp
cmp
das
add
push
adc
test
jbe
je
mov
inc
jge
sub
push
xchg
les
dec
sub
push
xor
mov
call
cmc
sub
adc
jno
jp
scas
or
add
jmp
inc
dec
xor
imul
sub
hlt
jno
jae
adc
jnp
int3
(bad)
ins
dec
les
call
fwait
mov
test
enter
mov
jp
scas
pop
mov
add
imul
push
cwde
jp
retf
or
adc
push
pop
xchg
pop
cwde
(bad)
movs
(bad)
push
jbe
jae
and
and
in
jmp
mov
xor
addr16
or
and
xor
cmp
leave
sbb
fwait
cmps
dec
out
cmp
jl
push
mov
les
(bad)
jge
lea
daa
mov
add
add
ror
sub
dec
aam
clc
mov
xchg
pop
pop
in
scas
cmps
dec
push
mov
mov
jp
mov
mov
or
mov
xchg
mov
jbe
aaa
or
xchg
or
cmp
stos
retf
mov
or
dec
(bad)
inc
movs
pmaxub
(bad)
xchg
popa
jno
int3
rcr
pusha
xor
add
mov
dec
cmp
add
inc
adc
sti
inc
out
scas
mov
push
xor
jns
std
inc
or
and
mov
cmp
ja
mov
fldenv
xor
xor
in
dec
cmp
mov
mov
shl
outs
dec
jge
pop
mov
or
setp
or
es
xor
xor
sti
repnz
popa
ja
push
mov
adc
nop
jl
cmp
ins
pop
shl
imul
pop
xor
or
retf
push
add
fdiv
mov
loop
pop
fild
mov
stos
arpl
out
iret
dec
xor
aas
add
nop
jge
add
mov
arpl
sub
push
scas
fsub
ss
aam
shl
cmp
pushf
xchg
sub
out
add
adc
sub
outs
jb
adc
fidiv
dec
or
add
lds
out
push
jns
inc
lock
xchg
outs
mov
imul
std
loop
fs
sub
pop
mov
mov
xor
lock
or
int
es
nop
outs
cmp
sahf
sbb
rol
es
mov
mov
movs
mov
jmp
stc
sti
mov
cdq
inc
movs
(bad)
cmp
inc
mov
pop
ror
jmp
jecxz
and
das
mov
outs
add
xor
sbb
fild
mov
or
pusha
(bad)
out
mov
ins
push
inc
dec
or
xchg
out
dec
and
sub
mov
(bad)
in
xchg
mov
(bad)
mov
sub
mov
cdq
iret
push
xor
imul
jbe
lock
outs
nop
mov
popf
popf
cmps
push
xor
inc
inc
jmp
push
inc
xchg
pop
imul
rcl
shr
lods
rcr
jge
push
mov
sbb
sbb
ret
sub
mov
aam
inc
mov
xor
jo
push
dec
inc
cs
aas
xor
push
aad
cmp
bound
ins
xor
pop
call
rol
stc
pop
xchg
test
sbb
ret
loope
inc
mov
fist
stos
aad
shr
or
or
cwde
mov
or
push
mov
mov
and
ror
in
fisub
test
inc
dec
clc
ucomiss
dec
cld
pop
jp
or
addr16
scas
lahf
movs
in
sti
or
jbe
cmc
cmp
and
je
sub
int
icebp
ret
xlat
xchg
iret
cwde
sub
js
mov
js
inc
adc
inc
add
cli
test
hlt
adc
mov
sbb
neg
call
sub
shl
mov
or
ret
jp
sub
cmp
dec
cmp
push
inc
outs
sbb
into
inc
daa
lods
jle
das
cmp
inc
sbb
xchg
mov
ret
daa
cmc
movs
inc
ficom
sti
xlat
sahf
mov
hlt
dec
daa
ret
(bad)
sahf
in
add
mov
das
jmp
dec
xchg
and
cld
and
pop
retf
shr
ins
add
sti
adc
and
and
jge
jecxz
mov
ins
enter
jmp
popf
inc
push
dec
sbb
sbb
idiv
sbb
add
cmp
rcr
pop
adc
pop
repnz
pop
popf
(bad)
ss
cdq
(bad)
adc
aas
test
repnz
imul
xor
ins
retf
pop
inc
mov
jle
cwde
gs
ss
(bad)
in
xchg
out
enter
push
or
lock
test
push
loop
cdq
fidiv
cmc
rcl
lock
or
sub
arpl
push
sti
sbb
fdiv
add
mov
int
mov
dec
push
add
xor
xor
dec
les
out
mov
cmp
popf
push
mov
mov
jns
or
int3
cmps
fisubr
mov
into
add
les
shr
inc
test
(bad)
push
dec
jecxz
mov
shl
push
in
mov
ror
out
cmp
psraw
sar
mov
movs
cmp
xchg
inc
inc
xchg
pop
xor
fs
jae
jb
dec
(bad)
aad
jle
mov
xchg
paddb
mov
mov
mov
ja
mov
nop
inc
ds
dec
and
pop
and
cmp
sub
mov
dec
cld
jb
daa
test
test
sub
stc
or
mov
jl
pop
inc
jno
mov
xor
dec
jmp
mov
cmp
int
sub
push
inc
pop
cwde
pop
xchg
bound
xchg
sub
adc
int3
mov
jp
pop
loop
movs
jmp
repnz
push
out
add
stc
inc
movs
(bad)
push
(bad)
adc
scas
scas
push
repz
pop
dec
push
dec
fdiv
sbb
pop
mov
clc
xchg
test
mov
inc
sub
nop
add
mov
inc
es
pop
dec
popa
or
or
fxch
(bad)
mov
sar
(bad)
data16
mov
mov
test
adc
fsub
adc
cmp
ror
inc
sub
fst
add
call
(bad)
jb
jmp
and
add
scas
(bad)
dec
mov
jle
xor
ret
or
daa
and
adc
int
pop
and
mov
scas
pop
pop
xor
call
mov
loopne
push
mov
jecxz
fnstsw
test
inc
shr
cmp
lods
pop
inc
lock
fld
xchg
and
and
data16
in
call
or
lods
xor
xchg
rcl
leave
sub
and
jle
xchg
and
ja
cmp
scas
jge
xchg
stc
cmp
in
pop
fidiv
arpl
sbb
mov
dec
sub
push
mov
test
xchg
outs
adc
ins
sbb
inc
mov
dec
imul
mov
das
enter
sbb
push
jmp
addr16
adc
push
outs
push
popa
daa
sti
cli
and
xabort
xchg
mov
loopne
outs
pop
in
jg
push
je
xchg
cmp
add
push
jecxz
inc
pusha
inc
int3
call
scas
pop
cmp
cwde
popf
push
inc
rcl
(bad)
cmp
fld
cmp
inc
repnz
and
nop
arpl
dec
sar
out
ins
in
push
push
pop
popa
jmp
ins
push
dec
repnz
div
mov
jo
pop
cdq
sub
jb
int
(bad)
call
test
sub
enter
jmp
lods
jp
lds
iret
stos
fild
jp
shl
xor
imul
in
dec
jnp
sub
xor
call
xchg
push
cld
imul
fwait
cmp
mov
push
hlt
mov
xor
mov
cmps
in
pushf
retfw
in
inc
lahf
cmp
test
scas
cwde
jno
jb
test
dec
mov
jg
fbstp
nop
in
lahf
push
ret
outs
inc
cld
iret
and
push
pop
ror
lds
in
ret
mov
push
sbb
jo
fwait
ja
jb
mov
loop
push
pushf
rol
shl
pop
(bad)
nop
inc
into
fnstcw
imul
lea
sub
inc
mov
shr
push
pop
aas
jb
sti
xor
cmps
sub
dec
sub
in
(bad)
adc
jle
mov
or
test
mov
gs
pop
scas
in
xchg
leave
inc
call
adc
sub
std
fild
jmp
idiv
add
sbb
out
cli
push
fldenv
and
pop
xlat
(bad)
jmp
sbb
(bad)
adc
sbb
test
inc
dec
aad
std
pop
jmp
int
lods
sbb
imul
and
fs
mov
or
sub
cld
lds
in
push
pop
cmp
mov
pop
fnsetpm(287
xor
xor
and
mov
sbb
outs
rol
call
jg
neg
xchg
dec
mov
or
push
or
ficomp
das
stos
cmp
mov
cmc
cdq
inc
adc
push
js
int3
mov
fwait
or
push
jmp
inc
leave
inc
aaa
dec
jge
jle
fwait
dec
sub
or
jnp
leave
mov
pop
lods
inc
les
sar
mov
pop
jp
loop
mov
mov
add
push
(bad)
outs
cmp
fsubp
mov
push
test
xor
jo
loopne
ds
mov
xchg
test
movs
mov
xchg
cmp
stos
pop
xor
lahf
dec
cmps
mov
mov
pop
cmp
test
(bad)
dec
retf
push
xchg
xor
xchg
daa
pop
(bad)
repz
xor
add
push
scas
sar
pop
arpl
pop
lods
mov
dec
scas
pop
daa
fistp
mov
rcr
dec
xor
sub
jb
add
cmp
mov
aad
sub
jl
push
test
retf
cmc
retf
mov
repz
fucompp
jge
int
jecxz
test
fstp
jge
in
fcomp
xchg
xlat
mov
mov
sbb
xchg
inc
(bad)
ficom
ret
jne
jo
iret
movs
xor
mul
sbb
test
pusha
ret
and
xor
dec
in
mov
or
(bad)
in
dec
das
jp
and
cmps
fnstcw
std
repz
icebp
xlat
mov
fstp
test
pop
push
cmp
pop
out
mov
cs
in
xchg
cmp
lock
adc
jl
shl
ja
icebp
xor
out
mov
stos
cmp
mov
ret
(bad)
mul
adc
mov
xor
movs
aad
pop
nop
(bad)
mov
ss
lods
fisttp
cmp
xor
cmp
das
or
loop
pushf
push
adc
imul
xor
in
fdivr
out
and
fild
outs
int3
int3
sbb
retf
jnp
mov
pop
cs
stos
or
(bad)
sub
mov
pop
ret
inc
dec
cmp
jmp
pop
test
jnp
xchg
pushf
into
xchg
mov
mov
fsub
inc
mov
mov
and
mov
xor
xchg
inc
pop
inc
mov
inc
data16
(bad)
fisttp
cmps
xchg
js
(bad)
fisubr
jg
retf
cmp
push
test
pushf
test
mov
sub
scas
push
imul
lods
loope
jmp
outs
stc
sar
mov
pop
push
pop
retf
sbb
(bad)
cmp
adc
xor
sub
pop
test
js
fs
xchg
xor
cs
push
nop
mov
fdiv
mov
cmp
jl
inc
out
adc
jge
mov
ss
xchg
push
cmp
cld
cmp
imul
push
mov
sahf
out
inc
cmp
mov
adc
fdiv
mov
inc
jge
stos
push
sub
retf
ficomp
xchg
push
and
stc
das
sbb
pop
enter
das
pop
jg
test
call
mov
(bad)
in
push
add
sub
jns
add
sbb
push
ins
aas
cmc
imul
mov
popa
pop
xchg
cld
sbb
aas
mov
sbb
or
push
xor
jne
mov
scas
lods
mov
stc
retf
add
psubsb
shl
push
xor
pop
ins
xor
mov
pusha
push
movs
mov
ins
dec
dec
enter
out
add
shr
cli
out
inc
popf
aad
push
push
mov
pop
push
sbb
and
(bad)
jo
loop
leave
call
retf
jns
xchg
adc
cld
jge
xor
sub
jo
rcl
xchg
daa
cwde
inc
cmp
push
lds
shl
cdq
sbb
jg
shr
popa
movs
mov
dec
xor
icebp
cmp
add
inc
ficomp
jmp
iret
xchg
imul
fistp
div
xchg
shl
push
dec
(bad)
lahf
pop
dec
sbb
dec
jg
cmp
jno
jno
aam
cmp
push
sub
mov
push
jge
cmp
xor
retf
xor
xchg
stos
call
mov
pop
fidivr
retf
das
mov
inc
xor
xchg
sub
stc
xchg
mov
rol
test
add
pop
xor
loope
aas
or
es
je
adc
movs
add
pop
popa
mov
gs
inc
inc
out
sbb
and
pop
xchg
mov
cmc
pop
push
fisubr
jl
pusha
fistp
mov
inc
inc
outs
loop
xchg
(bad)
cmp
or
mov
adc
popa
mov
sub
int
push
mov
cmc
and
xor
movs
repz
call
inc
mov
sub
mov
jg
ja
ins
mov
mul
and
mov
movs
push
fld
or
jmp
lock
repz
xchg
adc
jl
sbb
mov
sub
jp
cmp
cmps
add
inc
js
in
dec
daa
cmp
xor
xor
sub
inc
mov
rcr
fadd
in
in
cmp
fisttp
jmp
out
fwait
test
sub
ins
add
mov
mov
mov
sub
fwait
imul
push
call
xor
sbb
cli
mov
jbe
mov
cmc
ret
add
or
fimul
mov
jno
push
ret
sub
rcl
push
cmps
out
sbb
mov
lock
stc
clc
jl
sub
imul
jbe
and
mov
ret
scas
jbe
sti
xchg
and
mov
lods
xchg
scas
in
js
les
mov
ror
pop
movs
dec
imul
mov
(bad)
outs
pop
retf
sub
sub
sbb
mov
rol
test
xchg
int3
sbb
aad
add
jne
add
mov
(bad)
fbstp
aaa
pop
mov
mov
xchg
xor
das
aaa
jmp
push
out
push
popa
xchg
push
adc
inc
inc
sub
pop
or
fist
imul
data16
and
mov
sbb
adc
pop
imul
pop
fisub
and
(bad)
mov
test
arpl
add
push
or
and
jp
fcmovbe
or
sbb
lods
imul
jmp
xor
push
inc
inc
xchg
mov
ds
out
out
addr16
ins
and
xor
rol
xor
push
test
xor
inc
adc
inc
lea
gs
hlt
gs
jnp
jmp
add
mov
jmp
lock
les
les
mov
or
pop
fsubr
push
repz
pop
fst
fisubr
ds
mov
fcomip
test
push
push
jnp
mov
inc
jb
inc
sbb
test
adc
adc
xchg
js
jmp
call
stos
sub
cmp
mov
xchg
pop
call
aad
sub
jns
jnp
(bad)
mov
iret
cmc
cmp
aam
lea
sub
push
jle
mov
cmp
inc
div
inc
mov
fisttp
mov
jg
in
jbe
adc
push
sahf
fbstp
call
push
or
and
push
or
adc
push
mov
aas
fbld
cmp
dec
mov
adc
push
jmp
int3
xor
sti
je
fistp
inc
ins
xchg
mov
jl
adc
or
jle
mov
jo
lods
test
(bad)
mov
mov
sbb
into
xchg
int
bound
bound
xchg
xchg
cwde
xor
pop
shr
adc
mov
rcr
add
(bad)
std
mov
sbb
dec
stos
sahf
imul
add
xchg
dec
scas
jmp
fwait
add
ins
test
mov
dec
mov
pavgw
(bad)
cmp
scas
ja
retf
or
and
in
aam
ret
sbb
ss
inc
jg
repnz
push
sar
inc
sbb
dec
cmps
popa
sbb
lods
mov
jno
mov
shl
icebp
push
cwde
fs
push
mov
das
not
pop
cwde
mov
jno
fucom
sbb
adc
fisub
popf
sub
mov
fcmovbe
or
sbb
and
sub
jle
das
add
std
fidiv
adc
dec
iret
(bad)
(bad)
fs
sahf
loopne
pop
push
pop
push
push
xor
add
jge
icebp
scas
call
daa
call
in
add
test
lods
xchg
push
and
add
clc
jmp
xor
mov
(bad)
(bad)
int
cmp
and
stc
rcr
mov
add
mov
enter
int
push
imul
jae
cmp
mov
cld
xchg
cli
xlat
repnz
dec
out
mov
sub
cmc
sub
mov
inc
sbb
stc
fnsave
lock
dec
inc
and
add
lods
xchg
pcmpgtb
cwde
dec
jae
jnp
rcr
mov
xchg
xor
jb
push
sub
jne
jecxz
sub
pop
sbb
adc
ret
jecxz
dec
jae
sub
out
jnp
int
push
push
dec
add
adc
ficomp
push
dec
push
lods
xchg
mov
mov
mov
popa
call
cli
out
clc
add
(bad)
mov
xor
out
xor
leave
out
test
xor
and
leave
jo
ja
jnp
not
pusha
cmc
xor
aad
and
jae
mov
push
sbb
jg
pop
pushf
xchg
lahf
inc
shr
push
jb
dec
test
cmp
lahf
nop
movs
or
push
push
sub
mov
daa
xor
push
xlat
xlat
sbb
cmp
xchg
jmp
mov
adc
push
mov
pop
ja
not
ficom
icebp
lds
sub
fnstcw
lock
xchg
scas
inc
jg
push
sbb
int
push
fld
push
sbb
push
mov
and
and
dec
mov
mov
xor
lahf
test
ret
mov
and
inc
ja
mov
jne
fwait
or
arpl
cmp
push
es
shr
cmp
adc
sub
jp
aas
lods
mov
(bad)
rcl
push
or
repnz
scas
dec
inc
iret
xor
add
push
xchg
mov
mov
(bad)
push
pop
retf
cli
xchg
fst
mov
dec
sahf
xchg
imul
(bad)
sbb
pop
xor
xlat
fisubr
ret
push
movs
arpl
cmp
out
leave
ds
dec
mov
jo
and
push
mov
in
sub
rcl
mov
call
out
cmp
push
cmp
test
mov
jb
and
mov
pop
ret
ret
loope
inc
popa
or
cmp
rcl
(bad)
dec
test
fucomp
sub
jno
int
repnz
mov
push
out
in
dec
inc
mov
jae
test
push
arpl
imul
aam
push
jbe
imul
test
movs
adc
sbb
mov
cdq
pop
inc
add
retf
push
and
and
push
std
cs
mov
shl
imul
push
push
sub
in
dec
add
idiv
jmp
scas
mov
xchg
push
popf
sub
push
pop
xor
inc
push
mov
mov
jle
mov
and
sbb
add
cmps
or
dec
dec
xchg
iret
xchg
cmp
cs
jo
and
les
mov
jge
sub
ror
pushf
mov
shl
fld
(bad)
mov
lea
xor
ins
xchg
push
das
mov
jmp
repz
popf
loop
lods
fwait
leave
nop
shl
out
and
icebp
cdq
xchg
dec
enter
adc
cmp
clc
push
pop
retf
into
repnz
shr
sahf
jmp
xlat
mov
mov
jns
dec
inc
xor
(bad)
leave
push
add
sbb
mov
frstpm(287
(bad)
sti
sub
pop
jp
push
fdiv
outs
das
loope
iret
into
add
xor
mov
xor
jns
sub
pop
movlhps
add
adc
icebp
mov
dec
push
imul
mov
or
sub
mov
cmps
(bad)
push
pop
pop
mov
stos
xor
add
adc
xchg
push
vmulsd
loop
dec
push
push
ins
rol
inc
add
rol
fwait
enter
test
pop
and
push
sar
sar
dec
fiadd
popf
(bad)
fisub
jle
aas
lahf
xchg
pop
cmp
cmp
(bad)
clc
hlt
shl
call
mov
fwait
mov
pop
scas
test
and
mov
mov
in
aas
pop
mov
xchg
(bad)
sbb
sub
stos
mov
mov
ret
adc
mov
stc
xor
repnz
in
pop
cmp
ffree
inc
mov
hlt
jne
pusha
jmp
xor
xchg
add
adc
cmp
jg
push
pop
out
mov
cmc
mov
loopne
test
test
adc
call
js
or
and
push
out
call
adc
adc
or
inc
sbb
scas
pop
gs
frstor
ficomp
cmp
mov
add
xor
cmps
mov
sar
inc
sbb
fbld
mov
dec
test
ja
lock
loope
repz
loopne
inc
xor
pusha
push
add
cmp
mov
mov
sub
jge
cmp
cdq
(bad)
frstor
sub
xor
stos
les
mov
pop
imul
mov
ret
adc
cmp
pop
inc
pop
mov
or
push
shl
or
retf
sub
xchg
xchg
add
pop
cdq
test
fwait
jae
test
jge
fdiv
imul
mov
xchg
sti
push
lock
je
fs
loopne
push
sbb
mov
shr
xchg
pop
xor
inc
mov
fcomi
pop
mov
push
ins
repnz
adc
fwait
jbe
lods
ss
movs
xchg
nop
sub
test
loope
add
lods
stos
jnp
icebp
sbb
and
dec
icebp
pop
mov
pop
jle
(bad)
mov
lea
das
lods
scas
and
and
dec
int3
sub
je
or
pusha
inc
jg
inc
jne
mov
sbb
inc
or
mov
and
mov
jl
popa
call
into
pop
adc
mov
fld
adc
into
pop
xchg
xor
cmp
mov
inc
daa
sahf
call
jo
cmp
and
cmps
mov
xchg
push
xchg
pop
xchg
push
mov
test
mov
mov
adc
mov
pop
xchg
enter
xchg
mov
js
push
xchg
pop
xchg
sbb
in
daa
mov
stos
scas
data16
les
ins
dec
leave
sti
adc
add
iret
pop
stos
inc
cs
sub
sbb
mov
adc
push
sahf
and
inc
retf
sub
dec
add
cmp
mov
add
ins
fistp
xlat
cwde
scas
mov
sbb
inc
dec
out
idiv
xor
xor
repz
aaa
mov
sahf
add
adc
hlt
mov
sub
cli
aam
jbe
xor
mov
mov
inc
lea
push
mov
sub
mov
cmp
adc
or
mov
lahf
scas
ds
nop
outs
aas
mov
lods
add
add
or
push
xor
lea
inc
inc
es
push
jae
add
pop
xchg
repz
jae
int3
or
ins
mov
sbb
cmc
pop
and
jne
stc
or
(bad)
push
inc
daa
lea
pop
cld
test
sar
sar
mov
mov
(bad)
push
mov
mov
fild
ins
cdq
movs
cmp
xor
adc
repz
push
add
cmp
and
cmc
fist
xchg
out
(bad)
sar
mov
out
retf
(bad)
outs
imul
mov
mov
add
int3
popf
lock
push
xor
addr16
pushf
push
cs
inc
cmp
les
xchg
or
lea
xor
retf
out
mov
dec
ret
aas
xchg
ja
fild
dec
sbb
sbb
popa
popa
scas
mov
cli
mov
xor
std
push
xor
jb
lds
fst
xchg
stc
je
or
in
test
popf
loopne
dec
mov
aaa
adc
adc
jmp
test
dec
lods
aam
dec
ret
repz
cdq
cmps
cmp
shl
dec
outs
(bad)
out
stos
fcmovnu
enter
dec
dec
pop
and
cdq
cmp
or
push
mov
(bad)
mov
cmp
lea
xchg
daa
je
fwait
add
jmp
pop
pop
(bad)
pushf
or
pop
mov
fs
lods
(bad)
rol
daa
popa
addr16
sub
xor
inc
sub
fxch
adc
imul
cmp
les
inc
cmp
shl
lock
cmp
rcr
in
out
out
xor
call
adc
sbb
fucomi
sahf
xchg
mov
mov
xor
idiv
je
sbb
mov
test
push
in
aaa
and
aam
xor
out
or
sub
ss
push
jo
jmp
add
jb
je
xor
add
nop
sub
stc
cmp
imul
adc
jl
push
(bad)
adc
inc
lea
adc
lods
nop
xchg
(bad)
popf
and
mov
push
test
cmp
adc
or
and
mov
push
or
dec
cmp
pop
jae
or
lahf
mov
int
xchg
stos
mov
sbb
sub
test
ror
mov
setno
pop
les
pop
mov
imul
or
mov
clc
mov
push
mov
adc
xchg
jge
pop
xchg
nop
mov
or
cmp
xor
inc
loope
out
or
cdq
ret
js
clc
outs
loope
xor
ror
adc
daa
jge
in
xor
mov
(bad)
jnp
xchg
adc
pop
mov
adc
cdq
jmp
fmul
or
dec
int3
mov
fmul
test
scas
addr16
adc
cmp
(bad)
popf
add
mov
data16
mov
sub
test
xlat
cmp
into
(bad)
push
add
dec
xchg
cs
hlt
mov
jge
mov
cli
out
in
dec
sbb
dec
sub
popf
gs
inc
in
jmp
sbb
cmp
mov
imul
sti
cmp
xchg
mov
sahf
push
test
sbb
pusha
outs
test
mov
add
sbb
ret
push
cmp
sbb
in
inc
pop
mov
add
mov
sbb
jmp
lea
or
hlt
adc
scas
add
push
cmp
lods
fisttp
in
push
ret
xor
hlt
cmp
jmp
add
jp
(bad)
rcl
lods
jne
mov
sub
imul
nop
loopne
nop
sub
mov
addr16
rol
bound
imul
mov
shr
jecxz
cmp
aas
pop
idiv
fld
in
fist
rcl
retf
pop
sbb
in
push
fxch
push
mul
pusha
mov
pop
clc
xchg
xor
pop
dec
ror
rcl
or
imul
int
lods
ret
pushf
xor
mov
imul
jne
movs
inc
test
nop
cmp
mov
stos
mov
loop
add
xchg
cmp
add
movs
js
jne
mov
pop
cli
push
stc
push
mov
ror
aad
xor
int
repnz
dec
pop
xchg
sbb
int3
call
sbb
or
xor
aad
jl
icebp
imul
mov
test
pop
jecxz
iret
repz
std
call
sbb
arpl
call
push
rcl
dec
mov
pop
xchg
out
out
fcom
cdq
push
dec
mov
pop
movs
pop
rcr
pop
(bad)
and
es
stos
movs
pop
or
int3
inc
scas
dec
and
ss
lods
jg
xchg
push
jmp
sub
sub
loope
sub
data16
or
repnz
mov
out
repnz
mov
movs
mov
icebp
xor
adc
xchg
imul
repnz
es
dec
push
xchg
loope
inc
lods
pop
popf
xor
jge
imul
dec
js
call
dec
jae
lock
les
lea
sub
inc
sub
sbb
lahf
and
pop
mov
stos
scas
mov
fistp
in
fs
push
sub
mov
sbb
mov
out
jne
mov
sbb
mov
mov
movs
xchg
xlat
sahf
push
and
push
sub
hlt
mov
nop
pushf
sti
mov
(bad)
retf
loope
xchg
scas
xchg
jmp
outs
loop
jp
enter
inc
or
movs
cmp
(bad)
lock
push
dec
mov
xlat
lods
(bad)
adc
(bad)
fdivp
mov
stc
pop
loopne
out
pop
or
ds
ficomp
lods
add
retf
dec
mov
add
lea
aaa
jae
mov
inc
dec
les
dec
dec
imul
mov
sbb
lock
dec
mov
sar
lock
sbb
aad
push
mov
jbe
xor
shl
jno
mov
add
mov
aad
push
mov
(bad)
rcl
push
rol
add
xchg
lahf
into
xchg
xchg
xor
mov
sbb
dec
es
and
retf
stc
adc
push
inc
idiv
aas
dec
inc
rcl
stos
(bad)
push
stos
add
shr
xor
mov
mov
call
loop
mov
pop
mov
jnp
jmp
xor
jge
sar
ins
pop
int
in
add
stos
jg
pop
push
(bad)
test
imul
mov
icebp
xor
fldenv
test
push
and
pop
fstp
sbb
aaa
out
outs
sbb
hlt
push
pop
out
scas
dec
push
and
iret
jo
inc
jl
add
mov
dec
sbb
std
lods
dec
inc
ficomp
retf
icebp
and
mov
jae
shl
jno
jns
jae
loop
push
xchg
lods
mov
adc
outs
mov
cmovbe
cld
sti
add
add
lds
jge
fidiv
out
cmp
xchg
int3
push
js
pop
sub
adc
shr
mov
repz
or
es
ret
in
pop
inc
xor
or
inc
or
ja
pop
sbb
sar
jmp
test
cld
lahf
jmp
dec
scas
or
or
jns
push
(bad)
adc
adc
dec
popf
adc
retf
adc
and
div
pushf
push
cld
or
adc
mov
jne
loopne
jle
cdq
mov
inc
cdq
sar
xor
lahf
stos
push
xchg
pop
imul
xchg
cmps
popa
cmp
cmp
sahf
mov
inc
dec
jmp
inc
enter
stc
test
or
int3
jnp
pop
pop
cmp
(bad)
ja
jl
pop
mov
add
out
xor
or
sahf
sbb
popa
jo
and
jecxz
in
or
fmul
or
adc
or
ret
pop
fstp
ror
(bad)
xchg
mov
test
mov
repz
add
das
(bad)
jecxz
std
bound
and
pop
cmp
push
jmp
xchg
push
mov
scas
jne
popa
repz
mov
test
retf
lock
repz
push
sub
leave
sti
inc
kmovw
aam
scas
je
daa
out
loopne
adc
inc
rcl
imul
mov
pop
imul
jecxz
ret
push
out
cmc
and
adc
push
call
mov
ja
ins
push
jbe
cmp
fmul
mov
and
fcmovu
xchg
mov
inc
daa
in
jb
div
xor
inc
jmp
jno
mov
in
xchg
arpl
mov
inc
ds
lods
jg
add
ins
ins
enter
cmp
les
test
(bad)
and
xchg
jne
std
mov
ins
pop
sbb
aaa
inc
pop
push
repz
ret
xor
ins
jp
pop
pop
jl
sbb
sbb
sub
aaa
fnstsw
add
jmp
mov
xor
and
lods
enter
fld
std
sbb
add
xor
shl
or
mov
or
mov
sub
sub
test
xor
scas
and
int
mov
leave
mov
retf
xor
sahf
adc
inc
les
jne
jb
mov
mov
(bad)
or
daa
pop
imul
push
inc
retf
inc
jle
iret
add
and
aam
dec
cmps
mov
xorps
inc
int
cs
into
dec
jno
outs
rcr
repnz
imul
or
scas
in
mov
fdiv
and
xor
stc
mov
or
mov
add
dec
or
sbb
out
pop
sbb
icebp
xchg
xor
cmp
sahf
jbe
sub
xchg
mov
call
pop
xchg
pop
xor
cmps
mov
aam
es
push
sub
out
adc
cwde
cmp
jns
dec
add
pop
fcomp
push
mov
add
mov
addr16
sub
dec
ss
cmp
adc
movs
or
push
(bad)
mov
or
sbb
cmc
mov
mov
stos
cmp
int
adc
or
mov
adc
push
mov
cmp
xchg
aaa
adc
dec
fbld
test
push
xor
xchg
mov
nop
mov
sti
push
(bad)
outs
psubq
push
mov
ins
stc
in
xchg
ret
sbb
out
in
pushf
inc
pop
dec
mov
push
rcr
jns
mov
sbb
sbb
sub
mov
data16
pushf
shl
mov
dec
xchg
inc
jp
push
jnp
sti
push
pushf
inc
add
ror
xor
mov
pop
sub
push
movs
fidivr
test
xchg
and
dec
xchg
push
adc
push
jbe
stos
(bad)
xlat
pop
xchg
cwde
and
aas
je
jle
out
jecxz
icebp
mov
mov
ret
ins
popf
dec
and
xor
stos
cmps
jcxz
push
lahf
mov
xchg
mov
inc
jo
test
xchg
aad
dec
push
clc
out
aad
adc
mov
jp
ds
enter
push
cld
mov
dec
sub
std
jne
and
xchg
mul
stc
xchg
mov
scas
cld
and
lea
push
or
cmp
test
in
dec
call
sbb
icebp
push
retf
or
(bad)
xchg
inc
lods
mov
bound
fldenv
mov
lahf
leave
scas
fst
push
mov
test
xchg
xchg
jns
arpl
into
push
aam
(bad)
mov
clc
dec
imul
test
xchg
jbe
ficomp
fwait
les
mov
sbb
push
add
jnp
(bad)
cdq
jne
ret
imul
fiadd
neg
jae
stos
test
iret
ins
add
inc
xchg
mov
xchg
mov
rcl
dec
mov
pop
cwde
es
iret
nop
adc
shr
in
ds
cmp
pop
lods
pushf
mov
inc
pusha
scas
jle
sbb
adc
(bad)
les
sti
mov
inc
push
dec
inc
sub
and
(bad)
repz
test
fld
sbb
jnp
inc
adc
push
inc
lods
lods
and
jge
cmps
mul
dec
mov
bound
sbb
dec
call
xlat
test
leave
sub
mov
in
jecxz
jb
sub
cmps
test
ins
pop
mov
jmp
inc
mov
in
sbb
cmp
sub
(bad)
mov
mov
mov
jecxz
pop
jns
repz
test
pop
arpl
cs
inc
xchg
cli
cmp
sbb
inc
gs
out
jb
retf
pop
outs
and
and
or
int
or
adc
mov
mov
mov
xlat
xor
adc
mov
push
mov
push
push
outs
dec
or
aad
mov
in
int
or
xchg
addr16
inc
retf
pushf
add
test
adc
xor
ret
mov
sbb
in
nop
sti
std
lods
dec
sub
in
les
or
jle
dec
inc
pop
in
(bad)
repnz
xchg
addr16
xor
mov
jl
jge
test
shl
lods
mov
ds
inc
mov
mov
repnz
bnd
sub
imul
jns
aaa
aad
push
test
das
pushf
stc
adc
or
sub
cmp
hlt
ss
xlat
jnp
(bad)
inc
sbb
lds
rol
(bad)
and
push
adc
mov
(bad)
(bad)
test
xchg
xor
aas
or
push
mul
ins
fisttp
mov
jno
sbb
pop
loope
xor
fbstp
dec
dec
out
push
push
sbb
mov
mul
cwde
je
pop
sti
dec
out
in
sbb
xor
sub
aaa
hlt
add
retf
jae
sub
(bad)
pop
and
xchg
mov
mov
mov
sub
js
rcr
lods
test
xor
dec
cmp
add
pop
outs
mov
and
fs
push
sar
jnp
(bad)
into
outs
lock
inc
and
mov
jle
mov
dec
data16
cmp
inc
pushf
push
lods
sahf
rcr
cmp
jmp
xchg
in
dec
mov
jb
jb
jp
pop
hlt
test
loopne
call
push
stos
(bad)
cmp
add
xchg
xchg
or
cmp
dec
out
sahf
cmps
jmp
add
das
mov
repnz
and
mov
or
push
adc
xchg
mov
fwait
repz
cdq
shl
or
ret
add
dec
mov
dec
mov
outs
or
test
leave
jge
(bad)
es
jo
push
jbe
or
mov
sbb
mov
aaa
add
enter
sub
dec
mov
dec
into
enter
loopne
mov
hlt
bound
gs
mov
gs
xchg
scas
jae
rcr
push
jmp
mov
mov
leave
popf
push
jl
fsubr
inc
mov
in
push
and
hlt
lahf
sbb
dec
mov
sahf
mov
fs
test
xor
fdivr
ror
mov
(bad)
dec
sahf
(bad)
shl
ret
arpl
mov
rcl
shl
or
mov
adc
push
push
sbb
pop
mov
or
repz
mov
pop
int
xor
pop
push
mov
(bad)
not
imul
push
fldenv
test
sub
fstp
xchg
loopne
adc
lods
fisub
jnp
ds
setp
xchg
aam
lods
push
push
in
push
mov
pop
mov
aam
mov
push
mov
outs
add
cld
cmp
retf
pop
mov
shr
mov
cmp
jge
dec
jl
cld
mov
test
cmp
push
xchg
jge
je
add
adc
mov
cmp
adc
imul
jg
mov
fdiv
loopne
xchg
cmps
out
lea
sbb
scas
mov
test
mov
push
nop
lea
ss
mul
sub
push
js
jno
inc
(bad)
inc
imul
outs
sbb
es
enter
into
xchg
mov
mov
inc
pop
mov
xchg
jmp
cdq
push
xlat
jnp
sub
mov
fst
fadd
mov
push
sub
lods
jb
xchg
jne
dec
jl
std
add
push
push
or
xlat
ja
iret
cmps
data16
mov
fstp
int
sbb
dec
into
add
lods
or
int3
ds
pop
jg
fld
shl
sahf
mov
inc
retf
jnp
push
fstp
out
stos
jb
movs
xchg
test
mov
inc
dec
in
jne
cmps
loop
adc
outs
pop
mov
sbb
mov
jnp
dec
lock
push
jecxz
out
mov
mov
push
cmp
sub
test
mov
sbb
daa
sbb
outs
mov
popf
dec
test
and
sbb
out
mov
loop
(bad)
fprem1
std
add
ret
mov
pop
mov
ror
inc
mov
(bad)
pop
add
adc
int3
push
push
xlat
in
pop
into
inc
mov
and
push
xor
fisttp
mov
jle
test
push
test
xchg
jne
pop
ins
and
push
stc
inc
cmp
out
lock
fwait
or
ins
inc
jmp
(bad)
jecxz
pop
gs
cdq
dec
fwait
xlat
mov
cmp
push
sbb
cdq
imul
and
or
inc
and
dec
push
shl
or
push
jmp
sbb
das
mov
pminub
or
pop
mov
shl
aam
push
or
pushf
dec
retfw
fcomp
adc
stos
imul
ins
movs
push
(bad)
xchg
mov
xchg
test
ins
sub
lods
pop
stos
pop
and
mov
xor
(bad)
into
push
mov
enter
cs
xor
xchg
popf
pusha
repnz
pop
jbe
shl
test
ds
sbb
add
cmps
leave
jp
sar
sub
dec
lock
scas
mov
aad
arpl
fld
ficomp
and
adc
pop
mul
xchg
or
jns
xor
lods
cmp
retf
lds
mov
outs
mov
mov
imul
push
pop
dec
scas
cmp
ss
neg
dec
cmps
xchg
call
sub
rol
retf
pusha
test
ret
inc
cmp
cmps
push
xchg
jle
scas
cmps
repz
mov
or
in
add
dec
mov
jns
sub
ret
(bad)
es
test
or
lods
xchg
mov
pop
call
sbb
sub
sub
or
pop
cmp
sub
mov
mov
mov
push
mov
pop
dec
mov
mov
retf
stc
adc
pop
out
adc
imul
movs
or
mov
mov
mov
movs
inc
add
dec
int3
xor
retf
xor
sti
fsub
gs
pushf
mov
or
mov
stc
dec
add
mov
nop
(bad)
mov
mov
sgdtd
and
xor
or
cmps
dec
mov
je
mov
or
dec
pop
sbb
inc
or
jge
add
or
jno
imul
fld
inc
hlt
cmc
loopne
fcomp
rcr
sbb
jmp
lahf
push
aam
push
xchg
sti
in
ja
and
cwde
cwde
add
clc
aas
mov
cmp
and
mov
or
mov
pop
push
pop
fcomp
dec
lahf
outs
push
mov
and
pop
(bad)
outs
pop
fcomi
cmp
stos
sti
dec
pop
pop
pushf
(bad)
push
xchg
out
int
repz
loopne
or
sub
test
push
mov
mov
sti
idiv
mov
inc
mov
dec
mov
ins
scas
xor
mov
jnp
gs
rcr
repz
mov
sbb
int
pusha
pop
icebp
in
in
jmp
(bad)
imul
jg
fdivr
jbe
jns
xchg
sbb
or
sub
test
in
mov
movs
pop
push
jp
dec
pop
inc
push
xchg
mov
xchg
dec
cmp
in
add
stos
lea
repnz
push
(bad)
and
inc
mov
inc
aas
or
cmp
jno
dec
xlat
xor
cdq
stos
sub
lea
xchg
int3
pop
je
loopne
mov
pushf
pop
push
pop
(bad)
xlat
(bad)
jmp
fdivr
dec
xlat
in
test
xor
lahf
pop
pop
mov
cld
push
mov
je
test
push
imul
inc
adc
cmp
and
lahf
push
jns
inc
rcr
in
inc
push
movs
inc
retf
and
mov
sub
fidivr
dec
ret
mov
jno
adc
es
mov
test
lea
call
in
data16
jmp
jmp
and
pop
(bad)
aas
fnstcw
adc
and
sbb
jmp
push
aaa
adc
popa
test
dec
add
xchg
add
gs
fld
jmp
or
xchg
dec
sbb
dec
in
repz
test
stos
call
les
cli
aaa
in
xor
nop
sbb
fld
add
push
movs
sub
repz
stos
icebp
mov
mov
mov
jg
test
jmp
cmc
push
mov
mov
shr
pop
dec
cmp
or
jb
jno
aaa
lods
xchg
mov
pop
sbb
mov
mov
je
xchg
das
jmp
out
imul
sahf
iret
std
or
push
in
dec
lds
(bad)
pop
ror
mov
add
dec
xchg
in
mov
xor
bound
sbb
or
les
cmp
dec
cdq
sbb
popf
addr16
or
pop
add
xor
jns
xchg
mov
jmp
test
dec
xchg
out
data16
enter
imul
outs
in
retf
fs
cmps
pop
xchg
or
cdq
add
stos
sub
add
mov
mov
add
mov
imul
ss
add
(bad)
fiadd
jb
fidiv
(bad)
rcl
mov
mov
adc
xchg
mov
dec
xor
sub
add
push
jmp
and
sub
int
mov
dec
out
inc
jl
inc
imul
dec
cmp
loop
mov
in
(bad)
fwait
outs
repz
push
mov
mov
cmp
or
inc
sbb
imul
adc
fisubr
push
inc
das
xlat
bswap
jns
sbb
dec
mov
stos
(bad)
ds
cmp
cwde
ins
bound
test
push
adc
xchg
int
js
retf
mov
sub
imul
int
ins
(bad)
out
cmp
pop
pop
mov
mov
fild
aad
xor
push
mov
int
jge
repz
jmp
hlt
cmp
jb
dec
popa
hlt
int
cld
mov
fadd
imul
mov
inc
mov
adc
test
movs
mov
inc
inc
push
pop
movs
dec
xchg
icebp
stos
rol
sbb
push
cmp
aaa
sbb
in
popa
cli
popa
sub
clc
add
mov
xor
in
jnp
fst
fiadd
jae
sbb
lea
popa
cmp
adc
sub
sbb
(bad)
inc
xchg
pop
aam
inc
lods
sub
jmp
sub
das
pop
(bad)
pop
ins
or
je
xlat
sbb
mov
xchg
push
stos
in
mov
mov
ret
hlt
mov
push
ret
fdiv
rcr
cmp
jp
sahf
jnp
add
outs
xchg
cmc
bswap
mov
(bad)
sub
pop
xor
test
cdq
mov
cmp
xchg
mov
inc
aas
in
mov
test
xchg
out
mov
mov
mov
push
adc
(bad)
out
sbb
xchg
in
fimul
imul
les
retf
push
ret
movs
mov
xor
add
push
add
and
cs
jne
aam
mov
fisub
(bad)
leave
or
jo
outs
rol
dec
add
imul
adc
data16
xchg
mov
pop
xor
lods
popf
fisubr
jmp
or
iret
icebp
aaa
add
ret
and
sar
fld
mov
cmps
mov
pop
sbb
rcl
add
ror
ins
icebp
arpl
push
inc
not
retf
mov
sbb
ret
sbb
cli
loope
push
pop
fimul
sub
jle
jmp
in
sbb
movs
xchg
pop
cmp
inc
xor
rcl
adc
xor
push
shl
jg
aam
rol
mov
xor
and
mov
ins
mov
ret
(bad)
repnz
xor
sub
cmp
rcl
sub
inc
pusha
mov
inc
pusha
push
nop
mov
adc
nop
jae
mov
jne
push
shl
xchg
push
repz
cvtps2pi
sbb
push
sar
inc
mov
lods
ficom
mov
mov
inc
aam
mov
loope
pop
or
jecxz
test
push
mov
je
sub
and
inc
sbb
jl
fimul
leave
or
sbb
xor
add
sti
test
push
dec
cvtpi2ps
ds
or
lods
repz
mov
int
mov
mov
pop
lea
movs
cmp
jmp
xor
repz
inc
movs
out
test
in
dec
cmp
and
jbe
xchg
xchg
aam
push
sbb
push
mov
sbb
dec
cli
es
je
and
mov
mov
sahf
adc
es
add
inc
sahf
sub
adc
adc
push
or
aam
sub
ss
inc
pop
lea
add
daa
mov
mov
and
cmp
int3
lahf
fdiv
xchg
add
sub
mov
xchg
push
adc
arpl
xchg
aad
inc
div
adc
dec
fld
mov
sub
jo
out
xchg
mov
push
adc
jl
mov
inc
push
push
sbb
dec
lea
cmps
cmp
mov
ss
ins
sub
sti
xchg
leave
xchg
(bad)
sar
(bad)
call
or
imul
test
cwde
ds
out
iret
jmp
jmp
hlt
sbb
jecxz
or
je
jecxz
test
jle
lods
sbb
lock
xor
adc
aaa
sub
pop
push
jb
cld
push
ret
and
cmc
push
mov
mov
mov
outs
shl
jno
ficom
in
nop
push
pop
fstp
xchg
test
int
mov
bound
out
(bad)
icebp
inc
fwait
add
cwde
xchg
hlt
sbb
js
sub
out
cmp
mov
push
mov
test
and
ins
or
add
test
xor
scas
hlt
je
das
xor
sub
lahf
and
fdivr
pop
push
(bad)
das
(bad)
cmp
push
adc
sti
xchg
mov
and
jmp
xor
or
sub
sub
into
rol
jg
out
nop
dec
push
(bad)
cld
jne
push
xchg
lds
jbe
inc
inc
ja
pop
mov
test
mov
mov
es
add
pop
xchg
push
ret
sbb
leavew
das
add
dec
in
adc
cmp
inc
repnz
adc
mov
scas
jae
je
ss
call
les
shl
xor
iret
les
push
bound
test
cmps
jb
mov
jle
jmp
add
in
xor
xchg
outs
dec
test
cmp
ss
test
xchg
nop
mov
jo
xchg
or
xchg
(bad)
cmps
stc
push
gs
(bad)
sbb
dec
ficom
pusha
gs
daa
mov
dec
mov
call
xchg
jge
jne
mov
in
jne
xchg
sbb
pop
pop
ror
xchg
cmp
pop
adc
call
stos
pushf
ss
jle
push
jmp
or
dec
jmp
sbb
mov
sbb
sub
xor
fcomp
jb
mov
dec
lods
inc
push
retf
adc
and
fstp
outs
into
daa
ret
loopne
jmp
inc
lahf
dec
jecxz
rcl
stos
out
jmp
fnstcw
inc
stos
add
ss
xchg
pop
jmp
(bad)
ds
cmp
mov
in
(bad)
rcl
pushf
lds
cmps
adc
sbb
mov
sub
frstor
pop
hlt
mov
out
push
bound
push
loop
pop
jl
dec
mov
loop
aas
stos
les
dec
sbb
push
add
rcl
repnz
xchg
cmp
add
cmp
cmp
int3
(bad)
mov
xor
mov
sti
push
int3
imul
jp
neg
xchg
mov
in
loopne
fisttp
jge
popf
mov
add
cmc
dec
ss
sti
mov
push
or
sub
push
sar
repz
retf
add
je
jmp
jns
popf
movs
shl
and
test
lds
(bad)
clc
sbb
push
(bad)
push
int
stos
cmp
adc
dec
cdq
jg
push
jg
pop
mov
xor
cmps
jno
cmp
out
inc
xchg
or
pop
pop
call
mov
arpl
xchg
movhps
bound
dec
mov
jle
arpl
and
pop
jne
lea
ror
dec
popa
das
scas
xchg
neg
das
jbe
out
std
or
or
mov
push
or
mov
ja
push
jge
and
or
gs
inc
jg
cmp
push
rcl
xor
aas
and
outs
std
cmp
call
lock
pop
xor
mov
stc
dec
fisttp
fwait
daa
pop
sbb
inc
dec
push
pop
pop
ret
pusha
fsub
pop
imul
push
mov
int
dec
test
mov
sub
mov
sbb
and
sub
inc
movs
adc
and
mov
scas
in
(bad)
push
jecxz
ror
mov
call
push
push
or
mov
ror
dec
mov
(bad)
in
scas
jno
inc
nop
xchg
jl
dec
cmp
out
test
mov
loop
mov
push
pop
cld
lea
mov
fcom
dec
pop
lods
sbb
repz
mov
test
adc
push
fisubr
xchg
dec
mov
jmp
mov
pusha
xor
cmc
int
shr
sub
ffree
mov
jmp
push
jae
addr16
lock
out
fdiv
stos
stos
fisubr
fsub
mov
mov
push
dec
fadd
dec
xor
jle
test
ret
mov
pop
addr16
xchg
cli
cmp
or
inc
push
jmp
movs
std
sub
fnstcw
xor
jne
add
cmp
leave
sub
ror
setl
lahf
popa
push
push
loope
(bad)
xchg
outs
xor
nop
or
jae
scas
xor
inc
mov
bnd
shl
mov
cmp
cmc
pop
dec
mov
xchg
cmc
stos
sbb
(bad)
jle
sub
inc
push
(bad)
add
retf
or
pop
bound
stos
repz
sbb
inc
and
mov
jp
arpl
retf
inc
cli
fnsave
mov
mov
push
push
add
cmp
push
js
je
in
jno
popf
jae
ds
fcom
std
hlt
sub
sub
(bad)
shl
out
fsubr
lahf
scas
fbld
cmp
push
out
mov
xlat
dec
js
mov
xchg
dec
xchg
mov
or
adc
sub
cmc
inc
or
xor
mov
push
cld
sti
xlat
or
retf
mov
xchg
rol
pop
jp
gs
xchg
aam
or
sub
adc
out
(bad)
push
and
pushf
pop
xchg
cwde
out
in
(bad)
je
popa
adc
and
rol
cmc
add
ja
mov
add
icebp
mov
or
cmp
int3
cmc
fist
cmp
sti
jmp
ins
xchg
scas
lahf
lds
xchg
movs
fwait
ds
out
sahf
shld
or
rcr
repz
sub
stc
mov
mov
pop
mov
jae
adc
push
inc
ins
shr
xor
cmps
or
fs
and
pop
or
jmp
mov
jb
sbb
aad
mov
(bad)
mov
mov
jl
pop
push
inc
cmp
inc
xchg
jno
or
mov
and
fldenv
jle
mov
xor
ds
add
stos
es
cmp
jnp
and
(bad)
call
mov
mov
xchg
daa
outs
pop
sub
push
push
push
jge
sbb
mov
dec
icebp
or
cmp
mov
dec
repnz
aad
adc
mov
imul
popa
jno
jle
dec
retf
mov
jecxz
dec
pop
sbb
dec
mov
sbb
(bad)
xchg
push
mov
pop
fistp
retf
pop
xchg
shl
out
and
movs
(bad)
and
push
outs
adc
in
fsub
(bad)
(bad)
bound
das
dec
sbb
mov
adc
inc
mov
push
inc
enter
add
arpl
imul
xor
movs
push
inc
cld
es
pop
sar
das
or
aaa
push
into
sub
adc
mov
sbb
stc
pop
out
xchg
jns
out
lock
or
push
(bad)
jmp
cmp
xchg
fwait
dec
in
hlt
jbe
lods
dec
xchg
(bad)
es
mov
jmp
inc
xlat
dec
inc
jmp
fidiv
mov
js
fsub
cwde
lods
aad
mov
inc
sbb
push
jmp
mov
fdiv
dec
adc
and
arpl
pop
int
push
mov
outs
sbb
or
mov
add
push
rcl
mov
inc
outs
push
nop
lahf
dec
sahf
addr16
and
mov
mov
push
mov
dec
pop
imul
in
jmp
lds
repz
push
xor
aaa
add
(bad)
mov
cld
xor
jle
dec
mov
dec
xchg
push
dec
repnz
jge
aam
into
loopne
shr
mov
xor
add
(bad)
js
gs
sub
mov
js
xchg
out
iret
mov
aad
xchg
add
aam
inc
cwde
icebp
jge
jg
pop
loop
jb
scas
pop
or
out
mov
xchg
lds
jno
in
icebp
add
mov
and
xchg
clc
lock
pop
add
mov
push
je
push
or
pop
add
xor
mov
dec
mov
(bad)
fdivp
and
enter
pusha
out
push
sub
mov
dec
pop
ss
pop
pop
add
inc
popa
push
mov
dec
int
add
mov
mul
sbb
call
inc
fisttp
out
jo
jne
push
xlat
out
adc
inc
call
test
sbb
mov
aaa
push
mov
mov
dec
test
addr16
sbb
cmc
aaa
shr
sub
mov
cdq
repz
lea
fdiv
pop
pop
push
lods
std
shr
leave
inc
fdivr
mov
test
mov
mov
jae
sub
add
sbb
push
dec
retf
jl
xchg
loopne
adc
xchg
mov
call
(bad)
sub
lods
jecxz
clc
add
es
inc
and
cmp
mov
imul
mov
mov
cmp
jns
cmp
rcl
mov
dec
and
call
mov
inc
popa
adc
fnsave
mov
dec
lahf
movs
cmp
push
into
or
nop
cmp
mov
and
mov
out
xchg
dec
or
and
pop
xor
sar
or
fcom
fisttp
sbb
dec
dec
ja
int
pop
xchg
fs
scas
pop
outs
pop
stos
mov
lods
jo
int3
mov
add
dec
jp
xchg
sub
jbe
pop
adc
jmp
or
mov
cdq
dec
stc
add
lea
dec
xchg
pop
ret
inc
sahf
out
push
push
movs
jecxz
call
xor
fisub
popa
mov
push
(bad)
out
outs
mov
jecxz
outs
nop
sub
movq
xchg
es
and
out
xchg
adc
inc
test
inc
es
mov
aad
ror
fistp
fbld
shr
mov
xor
in
pop
push
xchg
xor
pusha
mov
and
sbb
mov
ins
aad
jo
adc
mov
ja
rcl
cmps
std
pop
cmp
cmp
or
in
push
adc
pop
dec
and
inc
jle
out
dec
xchg
call
push
mov
xchg
adc
mov
or
or
ds
add
loop
int
xchg
dec
pop
mov
or
sbb
adc
cdq
frstor
add
jl
shl
or
mov
pop
jmp
ds
neg
(bad)
jle
inc
stc
loope
in
in
test
fs
inc
clc
sub
push
out
packsswb
leave
(bad)
lock
or
mov
ror
jno
mov
mov
xor
cwde
jnp
rcl
dec
into
out
pop
cmp
fs
dec
cmc
aam
popf
sbb
xor
xchg
ins
cs
or
xchg
lods
jmp
or
xchg
dec
jae
and
imul
ins
ds
jne
popa
es
sub
inc
sub
jo
push
and
dec
movs
inc
dec
(bad)
bound
sbb
imul
addr16
and
xchg
add
jnp
dec
pop
xchg
mov
adc
mov
push
test
scas
jo
mov
test
fcom
sub
retf
pop
ror
sub
int3
sbb
jae
lods
fdivr
f2xm1
(bad)
nop
(bad)
ja
xchg
inc
and
push
sub
scas
xchg
pop
adc
ins
mov
dec
imul
xchg
adc
pop
(bad)
into
jns
je
lock
fst
ror
or
ja
add
imul
cmp
pop
rcl
sub
outs
jmp
mov
mov
and
add
xor
jo
aaa
mov
jge
ror
loope
mov
sti
mov
pop
cmp
aas
mov
add
shr
push
test
and
mov
clc
xchg
sub
movs
(bad)
lea
add
mov
or
jg
push
mov
mov
jb
xor
mov
ss
xchg
call
out
sub
ror
(bad)
mov
iret
fwait
scas
cmp
enter
inc
push
shl
or
scas
and
add
and
inc
call
sahf
inc
addr16
je
imul
push
enter
dec
pop
dec
test
inc
and
cmp
push
push
(bad)
test
push
out
mov
lods
xor
daa
movs
dec
inc
inc
adc
lods
jns
loop
fisttp
icebp
jle
dec
xor
mov
mov
mov
mov
xchg
and
sbb
push
iret
out
push
int3
jecxz
jo
and
div
mov
push
test
inc
pop
xchg
jno
std
dec
and
leave
and
loopne
pop
nop
shr
cmp
cs
xchg
cmc
cmps
sub
repnz
add
aas
popf
in
(bad)
rol
pop
dec
stc
and
add
pop
inc
dec
pop
test
clc
push
lock
gs
push
and
pop
mov
jmp
mov
mov
aas
push
ja
pop
push
nop
lds
or
out
sub
sbb
jge
inc
sub
mov
xor
mov
pop
jo
cmp
clc
iret
cmp
cmp
cmp
push
cmp
cmp
jae
dec
outs
mov
rol
sbb
stos
test
push
mov
mov
add
out
fidiv
mov
xchg
cmp
loop
nop
cs
sti
mov
inc
test
jp
aam
sti
jne
call
jecxz
jno
pop
adc
out
lods
cmp
mov
je
test
lds
jmp
push
enter
movs
ror
es
retf
fidivr
adc
ins
sbb
pusha
sbb
inc
mov
out
fsub
ss
addr16
sub
add
inc
mov
icebp
mov
xchg
js
mov
mov
in
(bad)
scas
jmp
fs
sahf
push
jge
mov
les
push
sbb
loope
movs
hlt
and
ret
jno
push
call
cmp
mov
sbb
retf
test
or
mov
mov
cmps
xchg
hlt
shl
fidiv
xor
push
sub
push
jmp
add
dec
es
popa
enter
sbb
pop
les
sub
loop
ins
mov
xchg
push
ja
int
fsub
out
fwait
xor
rcl
retf
xchg
movs
daa
call
xor
jp
dec
movs
push
leave
movs
or
dec
dec
js
cld
cdq
mov
or
jnp
int
push
std
xchg
jp
retf
ret
jo
pop
sub
mov
data16
mov
aaa
test
jns
push
push
mov
ja
mov
pop
dec
add
push
sbb
cmp
jl
shl
in
hlt
test
push
int3
mov
xchg
stos
sub
mul
jo
xchg
xchg
loopne
xchg
mov
xchg
sbb
or
sar
or
cmp
outs
xchg
movs
retf
loope
push
cdq
or
outs
pop
(bad)
jnp
test
xchg
mov
(bad)
jne
hlt
add
mov
(bad)
and
jae
mov
sbb
add
sahf
repnz
push
ror
add
shl
lock
icebp
shl
jp
cmp
push
mov
jo
clc
mov
fs
nop
int
out
dec
add
addr16
mov
cli
imul
call
inc
xchg
mul
jnp
lods
adc
outs
mov
retf
arpl
jp
imul
push
test
push
xchg
sbb
test
push
lahf
and
test
inc
arpl
out
cmp
cld
jns
dec
pop
rcr
dec
pop
push
pop
jo
inc
add
sub
mov
jmp
das
adc
sbb
enter
push
adc
outs
cmp
mov
(bad)
mov
jp
mov
sti
in
xlat
fnsave
sahf
dec
repnz
xchg
call
adc
nop
(bad)
mov
mov
daa
inc
inc
addr16
bnd
mov
xor
inc
xchg
into
ret
int
mov
sbb
out
push
push
and
jg
sbb
ror
xor
sbb
jmp
adc
clc
aas
fcomp
or
mov
xchg
or
push
lock
pop
jmp
mov
dec
push
fisub
lods
dec
cmc
pushf
xchg
xchg
mov
loopne
mov
jmp
inc
mov
(bad)
jb
mov
push
cwde
xor
cmps
les
jg
mov
pusha
jl
mov
or
xor
mov
clc
rol
push
sbb
fcom
pop
nop
push
adc
out
movs
pop
pop
fstp
aaa
aam
xor
(bad)
ror
jl
pop
pop
push
sub
out
mov
xor
mov
or
cli
xchg
ins
lods
adc
pop
test
xlat
das
pop
ds
daa
arpl
lock
(bad)
mov
adc
add
(bad)
mov
sub
mov
sbb
inc
fbld
add
mov
ret
mov
mov
aaa
loope
stc
adc
ror
pop
jbe
jae
pusha
jecxz
loopne
lds
mov
mov
sti
pushf
pop
jb
test
mov
stos
adc
scas
aas
(bad)
lahf
ret
xchg
mov
pop
mov
pusha
inc
mov
cwde
loopne
push
lods
pushf
sbb
lods
ficomp
mov
(bad)
mov
xlat
ret
ficom
sbb
push
push
fdivp
pop
imul
lods
aaa
xor
pop
mov
xchg
mov
rol
lock
push
pop
mov
loopne
test
shr
fwait
and
hlt
inc
dec
cdq
dec
pop
outs
push
in
and
cmp
cmp
dec
mov
mov
pop
enter
jl
adc
mov
jb
cmps
and
cli
xor
inc
std
adc
and
cmp
cmp
ret
loop
or
pop
data16
sub
ja
pop
ret
nop
sub
popa
sbb
push
dec
rcr
inc
stos
cwde
scas
mov
jmp
jno
and
cmp
lahf
jmp
scas
cmp
loopne
and
push
cmp
data16
cmps
pop
repz
inc
clc
xor
lods
in
in
into
jno
ret
and
nop
call
mov
and
sbb
leave
adc
ss
(bad)
and
adc
frstor
shl
call
cmp
cmp
idiv
sub
cmp
lock
xchg
xchg
out
adc
ins
inc
xchg
mov
fwait
lahf
int3
jns
mov
aad
cmp
in
stc
in
mov
sbb
adc
add
sbb
pop
sbb
mov
push
cmc
jmp
xor
push
lds
dec
mov
arpl
jp
ds
in
inc
imul
cwde
shr
mov
mov
std
bnd
aam
mov
dec
and
aam
pop
out
fwait
es
(bad)
icebp
sub
inc
mov
popa
xlat
call
ins
mov
cmps
push
mov
ret
iret
mov
popa
aas
fnsave
jge
pop
and
inc
sbb
xchg
adc
xor
push
mov
test
cmp
xchg
int
lock
jb
jbe
add
dec
push
es
(bad)
pusha
add
mov
or
pop
push
jmp
scas
mov
popa
retf
lods
jae
xchg
js
sub
sbb
jle
pop
aaa
popa
dec
repz
dec
push
aaa
xor
gs
das
xor
fistp
sbb
dec
scas
fld
aaa
cmp
pop
les
inc
in
shr
aad
popa
in
jp
sbb
or
aam
lock
sbb
inc
fnstenv
cs
aaa
adc
jno
adc
sub
iret
ins
rcr
and
hlt
pop
dec
inc
or
xchg
xor
sbb
nop
cmc
inc
inc
mov
int3
stc
imul
mov
xor
jae
push
mov
push
out
xor
xchg
fcom
mov
xor
sub
cmp
sbb
(bad)
aad
stc
lahf
add
pop
sbb
pop
(bad)
stos
test
and
mov
movs
adc
sbb
jl
loope
stos
mov
cmp
sbb
je
fs
mov
fmul
test
adc
ret
push
jp
bound
cmp
xor
xor
dec
add
xor
push
stos
jecxz
push
outs
in
cmp
out
imul
xor
push
ret
mov
xlat
jg
gs
out
pop
or
xor
data16
scas
xchg
mov
pop
stos
lods
mov
cmp
push
dec
or
inc
(bad)
pop
cmps
xor
xor
push
dec
xchg
mov
(bad)
mov
in
sub
dec
inc
pop
xor
xor
in
sub
(bad)
dec
int
cli
push
sbb
xchg
(bad)
(bad)
pop
fistp
(bad)
shl
xor
out
int
dec
dec
retf
pop
cdq
imul
in
or
in
hlt
pop
xchg
fsubr
shl
mov
adc
sub
pop
test
and
fwait
loopne
or
sbb
or
mov
test
add
add
loop
dec
xchg
sbb
mov
(bad)
pusha
aam
dec
aad
mov
loopne
cld
push
inc
mov
and
add
hlt
push
sti
fdiv
fist
ror
cmp
imul
pop
aam
mov
sbb
sub
ins
aam
adc
sbb
jnp
mov
fild
out
adc
jns
mov
cmp
mov
xchg
fcom
push
adc
cmp
jle
in
fiadd
lahf
add
fcmovne
inc
cmp
sub
shr
fcomp
in
jnp
mov
or
loopne
ins
jge
or
mov
push
sbb
xchg
dec
push
cmp
cmc
push
mov
xor
pop
dec
call
out
arpl
mov
ret
out
and
push
mov
sbb
sbb
mov
out
mov
add
cmp
and
or
sub
scas
ja
stc
push
sub
out
les
iret
add
in
dec
mov
retfw
mov
sbb
adc
call
and
jg
shl
and
shl
inc
jae
sahf
adc
ja
inc
and
scas
iret
jp
call
xchg
psubq
or
jbe
jge
xchg
add
sub
sbb
ds
jae
xor
mov
and
(bad)
rep
sti
jbe
pusha
scas
int
out
push
movs
(bad)
std
sbb
xor
and
fisttp
(bad)
push
xor
loopne
inc
push
and
xor
test
sub
jb
cwde
xor
adc
(bad)
dec
mov
and
cmp
popf
outs
(bad)
push
mov
jbe
pop
lds
inc
mov
dec
add
inc
out
add
aas
jno
mov
and
mov
or
bound
jo
xor
jmp
sub
pop
int
mov
inc
repnz
nop
pop
into
xchg
xchg
jmp
outs
call
mov
adc
out
(bad)
push
cwde
dec
pop
or
int
sbb
mov
or
mov
pushf
mov
ret
cmc
jp
scas
repnz
adc
aas
cwde
push
xlat
push
inc
push
fs
imul
pop
sbb
into
jmp
adc
push
fsubr
(bad)
xchg
out
ds
and
xchg
rol
shl
std
xchg
fnstcw
cli
sbb
or
cmp
mov
cmp
pusha
mov
push
push
cmp
and
(bad)
retf
xchg
push
les
out
shl
mov
sub
adc
cmp
inc
pop
and
clc
mov
xlat
push
(bad)
out
xchg
sahf
scas
xchg
jle
mov
ror
jge
movs
sub
jl
sbb
or
jnp
es
mov
mov
loop
adc
gs
iret
inc
stos
fisttp
mov
stos
retf
dec
retf
imul
inc
in
or
push
sub
cmp
in
lods
std
out
and
stos
clc
mov
xor
daa
ins
outs
mov
mov
je
jecxz
fmul
fwait
cmp
lods
neg
cmp
dec
adc
mov
neg
test
int3
mov
outs
gs
out
mov
cmp
mov
fdivr
sub
cdq
pop
sar
push
sub
mov
xchg
iret
mov
jo
out
fadd
dec
xchg
je
stos
dec
adc
mov
xchg
aad
push
jbe
mov
jb
cmps
cmp
cli
call
(bad)
aam
lods
aaa
aad
retf
cs
call
and
test
or
cs
dec
fdivr
ins
ja
jb
mov
(bad)
sub
xchg
sbb
dec
push
push
xor
ficomp
push
fsub
mov
fwait
jo
mov
(bad)
pop
mul
lods
push
jbe
jnp
int
ins
push
pusha
sub
mov
sti
xchg
popa
or
js
add
gs
out
pop
enter
mov
cld
sub
movs
inc
cmp
push
mov
out
and
sub
jecxz
adc
fimul
add
mov
cmps
out
push
cmps
mov
test
xor
mov
push
es
iret
stc
enter
fsubr
aas
dec
popf
push
gs
add
sbb
es
mov
inc
pusha
xchg
add
sbb
stos
jle
rol
cmps
mov
loope
sbb
and
ja
cmc
mov
xor
call
enter
or
jnp
(bad)
jmp
rol
scas
mov
imul
fstp
mov
scas
cmps
or
mov
xor
sub
or
sub
lods
int
daa
xchg
adc
sbb
jecxz
xchg
inc
sbb
adc
in
ret
repnz
test
mov
jp
push
mov
mov
cmp
dec
pop
outs
out
(bad)
dec
inc
ret
xchg
gs
lods
fwait
cmp
cmp
inc
cld
mov
mov
out
pop
add
ins
fisubr
push
add
lahf
(bad)
and
xor
pop
xchg
ret
push
mov
movs
das
imul
imul
(bad)
bound
sub
xchg
js
push
and
push
test
jns
jmp
lahf
push
ins
inc
rcr
xor
mov
adc
lds
sbb
cmp
adc
cdq
mov
(bad)
mov
(bad)
sbb
xor
jb
inc
std
(bad)
pop
jge
out
cld
mov
pop
jg
rcr
mov
and
sub
sub
ret
mov
std
add
xchg
outs
or
jg
add
dec
stos
popf
pop
repz
or
lea
xrelease
movs
mov
mov
inc
mov
jl
popa
test
inc
repz
mov
les
jecxz
and
fstp
mov
mov
mov
xor
cld
xchg
out
(bad)
push
or
cwde
loope
cmps
mov
(bad)
stc
hlt
sub
pop
sbb
add
out
xchg
lea
bound
daa
xlat
jge
scas
xor
xor
fcmovnb
idiv
dec
lods
addr16
inc
ret
shl
cmp
outs
daa
loopne
iret
cmp
mov
shl
mov
mov
cli
lods
cdq
mov
sbb
outs
mov
test
lods
jnp
js
mov
or
mov
sub
inc
ficomp
hlt
ror
daa
xor
test
inc
into
imul
mov
sbb
mov
mov
mov
add
inc
cmp
mov
mov
cmc
(bad)
mov
in
push
call
ds
mov
aaa
aas
jno
and
xchg
das
out
adc
push
sar
out
in
out
xor
jecxz
cmps
cmp
xor
mov
dec
push
outs
fisubr
aam
ret
xor
fcomi
mov
rcl
jle
dec
push
jmp
add
or
mov
out
and
xchg
jb
stos
idiv
mov
xchg
int
xor
xchg
pop
and
mov
and
imul
iret
jge
lds
mov
out
or
cdq
int
cmps
sbb
mov
jmp
test
inc
in
jmp
dec
ja
inc
pop
out
adc
fisub
mov
xchg
sbb
adc
dec
fnstenv
out
cmp
test
outs
inc
imul
dec
stos
mov
out
jns
rcr
push
or
dec
out
pop
outs
push
pop
xchg
or
arpl
(bad)
(bad)
xor
fild
pusha
dec
loopne
les
xor
repnz
push
les
js
and
shl
jo
mov
jecxz
pop
inc
fadd
sbb
push
xchg
adc
mov
dec
xchg
mov
and
jns
nop
pop
dec
jae
mov
xchg
popf
outs
mov
call
and
push
push
mov
push
sbb
sbb
push
fnstcw
jmp
xchg
inc
or
or
or
ffreep
push
repnz
dec
xor
and
sbb
dec
icebp
dec
pop
stos
cmp
push
inc
jmp
xchg
cmps
ins
push
xor
neg
pop
mov
jns
in
(bad)
int
push
xor
neg
loope
leave
dec
mov
mov
and
repnz
shr
jmp
push
mov
(bad)
mov
cmp
fild
sbb
ins
dec
and
adc
inc
pop
icebp
sbb
cmc
jle
out
mov
lds
pop
icebp
retf
lock
aas
xchg
test
test
jl
inc
ret
loopne
jbe
mov
jb
sbb
mov
sar
and
pop
lods
aas
aam
es
push
mov
cmc
lea
mov
xchg
pop
or
pop
inc
fisttp
mov
test
sub
cli
out
es
jnp
add
test
push
pop
stos
mov
mov
sbb
dec
fimul
pushf
jp
into
ror
cmps
xor
test
jne
push
in
(bad)
jp
dec
in
pop
test
push
pop
or
jp
adc
lods
and
fisub
jne
imul
pop
rol
in
cmp
inc
(bad)
dec
jo
daa
xchg
mov
in
inc
cmps
pop
cwde
jmp
sub
or
shr
and
xor
pop
(bad)
fs
ins
cmp
sub
stc
sub
xchg
push
addr16
mov
adc
stos
pop
loop
mov
bound
and
hlt
pusha
retf
(bad)
mov
sub
cmp
cli
gs
imul
xchg
scas
jns
cmps
sbb
add
enter
push
push
sbb
sbb
or
push
aaa
or
loopne
out
and
(bad)
pop
xor
dec
mov
(bad)
and
es
xchg
ins
or
mul
aam
iret
loopne
mov
pop
inc
int
cmps
aaa
scas
inc
iret
jno
push
xchg
add
add
not
outs
in
ja
sbb
ficomp
cmp
dec
call
and
and
cs
fisttp
adc
aas
dec
cmp
dec
fiadd
(bad)
jae
rcl
adc
ins
and
adc
cld
sbb
jb
jmp
retf
xor
icebp
jne
(bad)
fldenv
outs
repnz
jo
inc
movs
inc
push
or
and
adc
xor
mov
xor
sti
jge
mov
cmps
or
cs
je
loop
adc
retf
or
or
xchg
int
pop
push
pmaddwd
fisub
sar
clc
iret
lea
cmps
ds
cmp
ret
mov
enter
fbstp
in
ins
loop
or
sub
cmp
adc
shr
in
int3
sbb
mov
add
xchg
aas
jge
ret
push
lods
les
or
arpl
sub
cmps
and
cmp
test
mov
jo
jnp
fld
in
mov
pop
mov
add
sub
push
dec
cmp
(bad)
xchg
or
iret
call
outs
out
push
(bad)
push
je
or
in
out
lahf
icebp
or
xchg
inc
ret
movs
lea
inc
adc
or
retf
(bad)
scas
or
cli
pop
pusha
ret
jbe
pop
aas
sub
bound
rol
mov
xchg
push
fdivr
into
mov
test
je
cwde
xchg
jmp
pop
arpl
xor
shl
data16
jbe
inc
sar
movs
loop
dec
dec
jo
xor
in
mov
loope
push
ds
pop
out
fwait
int
fld
fstp
adc
mov
xchg
imul
mov
jge
jbe
movzx
inc
lock
xchg
xchg
and
adc
pop
sar
ret
cmp
xchg
or
lds
dec
hlt
sbb
xchg
out
sub
(bad)
and
and
shr
inc
xchg
sbb
fidivr
adc
scas
call
cmp
lea
cmp
mov
mov
mov
inc
stos
ins
loop
aad
stc
push
jl
cld
ret
aaa
(bad)
sbb
repz
xchg
pop
xchg
sbb
sub
shl
mov
xchg
lea
push
lds
push
push
cdq
lods
sub
std
ret
pop
popf
dec
ret
arpl
pushf
sub
les
into
gs
xchg
sbb
retf
aas
shl
je
shl
call
dec
lods
in
in
add
outs
xchg
xchg
out
test
xchg
mov
add
ins
cmc
iret
fcomi
push
fsub
inc
and
test
popa
inc
adc
xor
push
bound
gs
int3
and
cmp
imul
shl
inc
pop
or
adc
sbb
xchg
pop
mov
call
fld
jle
sbb
add
push
xor
les
lds
daa
and
iret
adc
fist
xor
(bad)
cmps
mov
jp
push
push
sub
mov
mov
dec
(bad)
ins
in
test
inc
mov
and
fcmovnb
jo
stos
push
addr16
push
sbb
shl
jbe
jecxz
daa
xchg
les
loopne
sbb
shl
jae
jae
sti
sbb
js
xlat
retfw
ds
mov
add
test
cmp
push
inc
add
pop
je
mov
out
sub
pop
xor
dec
retf
aad
cdq
or
in
cmp
mov
mov
retf
mov
jmp
mov
inc
xchg
into
mov
mov
movs
repz
xor
lds
mov
push
xchg
push
xor
or
int3
call
ret
push
out
int
fwait
push
add
add
dec
jmp
pop
mov
scas
adc
dec
xchg
enter
shl
dec
and
arpl
(bad)
and
loope
mov
aas
and
lods
(bad)
cli
iret
inc
sub
jo
js
inc
ror
mov
mov
jno
fmul
loop
les
dec
nop
(bad)
jne
xchg
dec
loopne
push
xchg
cmp
out
out
jp
imul
mov
jecxz
pop
popf
pop
lds
and
in
push
addr16
or
inc
leave
cmp
or
pusha
inc
push
cmp
xlat
ficom
push
mov
in
and
cmp
test
sub
sub
cmp
shr
fist
inc
sub
cmps
xchg
dec
xor
js
retf
mov
jle
push
add
ds
movs
mov
mov
pop
fs
jo
dec
loope
add
test
dec
dec
and
clc
add
repnz
ins
nop
mov
push
(bad)
imul
cs
rcl
pop
xchg
add
push
mov
rcl
dec
outs
or
pop
fadd
and
push
(bad)
fsubr
test
lds
aas
or
jmp
inc
std
out
js
into
cld
or
xlat
cld
addr16
inc
fmulp
mov
xchg
mov
mov
mov
ss
dec
mov
cmc
mov
cmps
xor
push
jnp
inc
aas
pop
movs
mov
dec
call
shl
fidivr
add
je
jbe
ins
mov
movs
loop
xlat
mov
push
sub
repz
and
loope
leave
inc
cs
pop
das
push
cli
stos
add
mov
inc
dec
pmaddwd
add
dec
mov
cdq
and
sub
inc
push
or
leave
jmp
xchg
ret
mov
push
das
outs
jl
fiadd
aaa
mov
movs
mov
xchg
hlt
sub
cld
mov
dec
sub
mov
xor
pop
(bad)
jge
ret
push
xor
mov
or
lods
fcom
lods
jg
xchg
jg
push
xor
xor
mov
cmp
mov
shl
lods
out
adc
jo
iret
call
repnz
in
frstor
rol
pusha
cmps
lds
xchg
in
lock
mov
in
push
sahf
loopne
xchg
int3
inc
fmul
xchg
cmc
cmps
sti
outs
in
dec
sub
mov
jb
frstor
retf
in
pop
scas
inc
cmp
xlat
and
xor
mov
xchg
jbe
jnp
fcmove
or
sbb
mov
enter
mov
jl
stos
test
and
outs
popa
out
or
aam
mov
fimul
ins
xchg
gs
mov
xchg
xchg
mov
inc
pop
pop
loop
into
dec
(bad)
(bad)
div
lds
std
stc
mov
pop
ins
inc
cmp
add
sbb
jmp
ret
loop
jge
iret
pop
mov
fisub
(bad)
sbb
test
das
xor
push
adc
fstp
je
aas
mov
sbb
pop
mov
jge
inc
and
xchg
or
stc
add
and
mov
pop
cli
je
or
pop
xor
ret
mov
rcl
jns
mov
xchg
jne
xchg
jp
push
or
inc
ficomp
bound
aaa
jno
out
or
jge
jo
inc
xor
enter
cmc
pop
mov
and
mov
std
in
lock
jo
or
mov
(bad)
pop
cmp
shl
push
outs
int3
call
sub
xchg
nop
inc
push
mov
xchg
adc
xor
mov
add
mov
movs
cmp
and
or
mov
pop
adc
(bad)
fadd
pop
stc
loope
jns
ins
dec
sbb
fstp
dec
dec
pop
push
mov
jns
lock
sub
xor
ins
popa
xchg
mov
sub
cdq
fisubr
xchg
mov
popa
jecxz
and
mov
mov
int
add
dec
dec
add
cmc
fisttp
lods
call
mov
jnp
jo
sbb
dec
jo
or
enter
enter
inc
mov
or
loope
mov
shl
add
jae
inc
mov
inc
mov
(bad)
int3
dec
outs
jle
mov
fcmovu
xchg
div
pop
cmps
mov
xchg
lods
lahf
cs
add
push
mov
mov
xchg
mov
les
(bad)
int
shl
sbb
sub
(bad)
jp
sbb
or
pop
mov
xor
fdiv
fwait
in
popa
dec
push
jle
mov
mov
std
dec
and
xor
ret
(bad)
xor
(bad)
(bad)
jge
shr
mov
pop
in
and
mov
xor
out
(bad)
jge
push
ror
push
mov
mov
int3
shl
or
xor
or
(bad)
fs
pop
ret
inc
add
mov
jnp
and
sahf
fs
popf
sbb
cli
mov
out
push
cmp
push
in
pop
clc
xchg
rcr
test
daa
mov
sub
mov
ins
cdq
jno
into
pop
std
in
mov
inc
fmul
pop
xchg
and
enter
out
arpl
add
lods
mov
ficomp
pop
sbb
leave
xor
push
and
retf
inc
out
ja
and
imul
jmp
sub
dec
retf
test
sub
mov
push
sub
and
sbb
(bad)
mov
mov
mov
ret
popa
je
js
sub
cmp
xchg
push
adc
inc
jl
jmp
bound
xchg
adc
cli
retf
(bad)
jns
xchg
xor
cmp
pop
cdq
imul
rcl
pushf
dec
lahf
std
loopne
clc
inc
je
js
xchg
mov
je
jmp
in
add
jle
sub
mov
aad
jecxz
cmc
add
out
repz
mov
mov
mov
pop
out
repz
cli
ficom
xlat
mov
jmp
dec
(bad)
mov
test
iret
retf
mov
inc
test
dec
dec
pushf
loop
iret
pushf
push
adc
ds
dec
popa
je
adc
and
lea
lea
ins
sub
pop
dec
fwait
stc
cmc
push
bound
pop
mov
ja
not
sbb
mov
or
jge
jg
mov
iret
and
mov
or
lds
adc
repnz
jbe
fstp
jmp
jecxz
push
xchg
fild
pop
pop
and
stc
icebp
int3
and
pop
sbb
inc
fisttp
and
test
pop
pop
jnp
stos
and
sub
mov
aas
jge
and
bound
pop
retf
xchg
out
sti
sbb
sub
xchg
mov
mov
mov
pop
neg
shl
dec
stos
adc
mov
outs
add
mov
or
or
out
scas
push
cmp
out
stc
cmp
jo
(bad)
and
cli
jb
loop
and
jecxz
cmps
rol
and
out
ror
cmp
xor
in
nop
call
add
(bad)
mov
mov
sub
mov
in
adc
aad
gs
sbb
aaa
pop
or
fidivr
and
xor
mov
jg
push
adc
les
jno
imul
sbb
jmp
scas
xor
cmp
arpl
outs
cmp
js
outs
sub
rol
mov
in
inc
xchg
mov
in
mov
cmps
jmp
mov
adc
sbb
jno
test
sbb
cmps
mov
sahf
ins
shr
and
fimul
bound
ins
cmp
and
push
push
loope
jns
add
(bad)
push
dec
dec
out
ret
repnz
lods
loopne
jmp
xchg
cmp
pop
xchg
push
push
xor
push
add
jo
and
add
idiv
adc
leave
push
lock
xor
cld
cld
ss
les
and
popa
sbb
inc
jmp
pop
mov
es
fidivr
inc
out
jle
lods
pop
push
pop
mov
jno
add
cs
jnp
cmp
stos
ret
mov
into
(bad)
adc
inc
jns
(bad)
imul
mov
in
xor
lock
pop
mov
(bad)
aad
jmp
push
mov
and
lods
dec
inc
or
xor
cld
sbb
mov
ss
scas
or
ror
(bad)
mov
popa
nop
movsx
dec
push
xor
lds
stc
sub
mov
xor
dec
jb
outs
adc
mov
(bad)
or
jge
and
sub
aas
add
pop
imul
cli
jne
daa
xchg
xlat
cmp
fisub
lahf
push
jae
xchg
push
daa
imul
cli
mov
add
push
adc
sahf
mov
movs
push
xchg
cmps
mov
call
repnz
xor
cmc
ror
cmp
fucomp
ret
scas
mov
fst
mov
sub
push
fnstenv
fild
dec
xor
ja
mov
pop
xchg
jbe
dec
ins
sbb
pop
add
pop
jb
push
ja
mov
cli
sbb
pop
xchg
push
cdq
xchg
jmp
popa
lods
loope
div
or
addr16
dec
inc
out
scas
mov
(bad)
sbb
js
mov
pop
scas
stos
lods
mov
mov
fisubr
int
jge
(bad)
mov
push
pop
lds
cld
add
jge
int3
pushf
mov
and
inc
mov
xor
icebp
mov
shl
enter
inc
and
call
dec
pushf
cdq
icebp
cs
in
pop
test
das
sub
imul
xchg
cmp
add
lock
out
mov
mov
cmp
imul
fs
rcr
addr16
xor
xlat
out
lods
nop
fnstcw
shl
cmp
jne
daa
mov
adc
push
cmp
adc
stos
pause
adc
jb
int3
mov
sbb
inc
ret
in
(bad)
push
sub
ror
xor
or
or
jbe
(bad)
fnstcw
pop
fldenv
out
push
call
inc
cmp
mov
adc
push
cmp
fsubr
dec
push
adc
lds
inc
ror
enter
jo
ja
cmp
faddp
xchg
shl
jmp
pop
mov
int
sbb
push
iret
inc
popf
push
dec
mov
mov
push
js
add
cdq
lds
sbb
xchg
adc
or
xlat
jge
push
sar
mov
mov
jne
and
repnz
xor
dec
arpl
inc
push
test
mov
mov
xor
mov
inc
movs
leave
push
aaa
xchg
call
inc
aad
sahf
loope
mov
js
cmp
or
jle
inc
sub
xchg
inc
or
in
repz
and
je
test
sub
jmp
mov
test
mov
mov
fstp
and
data16
in
fidiv
fist
in
pop
xchg
fld
cwde
out
shl
addr16
stos
sub
or
inc
aas
push
ins
inc
sahf
gs
mov
daa
imul
scas
sbb
cli
in
jns
imul
(bad)
sbb
or
mov
pop
mov
sub
jmp
cmc
sbb
sbb
xor
shl
lods
add
mov
xor
cs
mov
pop
rol
adc
xchg
sbb
mov
ja
sub
nop
test
aas
loopne
pop
ret
xor
xor
ret
cmp
out
push
jb
pop
movs
adc
mov
dec
pop
ret
push
fidiv
lods
mov
(bad)
jbe
test
or
addr16
mov
cld
dec
aas
mov
sar
test
stos
inc
jo
nop
cmp
cwde
int
cmc
adc
aas
sbb
loop
das
sbb
int3
retf
sbb
fwait
idiv
fcomp
aam
(bad)
cmp
retf
cmp
jo
and
sahf
sbb
mov
push
pop
fldcw
xchg
push
cmp
pop
dec
adc
clc
dec
jg
adc
dec
scas
scas
cmp
jge
xchg
test
es
mov
jbe
inc
add
lods
ret
neg
div
loope
lea
pop
sbb
ret
movs
mov
adc
pusha
js
ins
push
cs
push
and
ss
leave
stos
retf
xor
rol
int
leave
enter
(bad)
adc
jle
fdiv
inc
sub
stos
out
lods
test
enter
repnz
sbb
push
xchg
repnz
add
pop
jns
mov
cmp
jns
dec
mov
ss
and
lds
bound
ss
sbb
add
scas
or
inc
adc
leave
xchg
leave
cld
pusha
sub
mov
jmp
stos
cmp
js
imul
dec
in
xor
and
in
leave
test
sar
mov
mov
repnz
push
jg
sbb
ins
push
clc
lods
inc
outs
das
neg
xlat
inc
test
test
shr
rcr
jno
in
mov
sti
sub
ficomp
icebp
(bad)
aas
ins
cli
and
in
fucomi
mov
mov
clc
xor
sub
cmps
adc
inc
cwde
pop
cmp
pop
test
mov
pop
neg
mov
xchg
xor
push
(bad)
add
sub
js
nop
dec
xchg
aaa
out
or
out
or
sbb
lods
sub
inc
push
dec
cmp
push
mov
cmp
fldcw
or
jecxz
sbb
xor
nop
pop
mov
sub
add
lods
and
xor
repnz
dec
fdivr
cli
mov
or
retf
mov
fcom
sbb
inc
mov
adc
adc
pop
xor
inc
(bad)
cmp
xchg
dec
in
lods
cwde
pop
or
vaddpd
fisttp
mov
dec
cmp
cdq
lods
cmp
(bad)
mov
bound
push
fild
mov
pop
fidivr
ficom
xor
clc
push
mov
xor
inc
inc
call
xor
sbb
ror
loope
pop
or
aaa
xor
xor
hlt
xchg
(bad)
mov
mov
add
dec
pop
lock
jno
mov
fstp
shl
scas
adc
xor
daa
xchg
push
mov
add
ret
(bad)
scas
sub
(bad)
sbb
popa
icebp
pop
(bad)
sub
inc
xor
mov
loopne
cmp
ret
jl
mov
out
mov
sub
out
out
and
push
xor
mov
push
xchg
sub
(bad)
lock
sbb
data16
sub
scas
jb
mov
not
mov
adc
add
test
inc
and
mov
sbb
pop
(bad)
mov
bound
cmp
cmp
into
mov
sbb
sbb
and
xor
mov
in
sbb
jno
push
test
test
mov
outs
(bad)
sbb
jle
or
adc
stos
nop
imul
pop
ins
dec
xor
sbb
(bad)
xor
inc
pusha
mov
pop
mov
sahf
jo
jp
jnp
xchg
xchg
cmps
in
aad
sbb
adc
jbe
inc
add
and
or
adc
cwde
cmp
push
add
jle
sbb
add
push
push
xor
in
xor
jns
fsubr
lods
push
(bad)
fistp
sub
and
retf
push
pop
repnz
int3
mov
aam
xchg
mov
cld
or
jbe
jg
mov
jecxz
nop
fadd
call
fs
xchg
outs
(bad)
aam
popa
daa
pop
outs
outs
or
mov
and
mov
adc
mov
jp
xor
sti
popf
out
das
call
sahf
fistp
(bad)
and
jl
les
iret
mov
je
lods
sbb
int3
(bad)
into
fld
push
and
jb
mov
dec
add
ror
mov
outs
pop
push
fcmovu
and
mov
xchg
dec
mov
adc
movs
jb
daa
sub
inc
jg
ror
dec
ds
int3
mov
inc
xor
mov
inc
ss
or
jp
mov
mov
mov
jbe
popf
xchg
lock
dec
mov
(bad)
cmc
arpl
mov
aam
dec
mov
enter
xchg
mov
into
push
aam
and
test
pop
out
pop
jmp
or
pop
mov
pop
inc
sar
mov
stc
clc
dec
xchg
dec
cwde
pop
retf
mov
ror
mov
cwde
jle
(bad)
pushf
mov
lods
movs
icebp
stos
pop
lea
movs
(bad)
loope
pop
pop
or
add
mov
ins
xchg
or
outs
add
das
xor
push
xor
ins
mov
out
movs
xchg
xchg
xlat
retf
outs
mov
imul
jmp
inc
addr16
leave
loope
cmp
add
sbb
scas
xchg
cmp
adc
sub
sub
imul
pusha
movs
in
jno
mov
outs
pushw
jne
lds
ja
pop
in
test
xchg
cmp
mov
add
xchg
mov
stos
xor
mov
add
cmps
ja
shr
lods
sub
jmp
ss
mov
mov
dec
sub
jne
in
pop
aaa
xchg
pop
cmp
call
es
lds
movs
imul
xlat
addr16
movs
dec
in
pop
loope
inc
pop
daa
cwde
repnz
pop
or
cmp
jb
hlt
inc
sbb
add
jnp
lds
sbb
(bad)
movs
jge
lds
out
mov
add
xor
loop
daa
fisubr
push
mov
mov
sbb
mov
cmp
sar
adc
std
int3
inc
stc
adc
enter
jg
mov
xchg
sbb
enter
das
call
fstp
dec
jecxz
dec
pop
repnz
stos
inc
popa
push
sbb
cmp
outs
xchg
jae
or
mov
not
out
out
or
imul
bound
xor
mov
dec
jmp
push
sbb
inc
lea
jae
or
add
fild
ret
mov
outs
mov
add
push
repz
outs
mov
mov
inc
mov
frstor
mov
adc
dec
icebp
cld
sbb
mov
push
push
and
fwait
aad
push
xchg
stos
sar
popf
jge
cmp
lods
mov
sbb
or
and
jecxz
es
cmp
jmp
and
push
inc
ret
jne
les
adc
mov
add
xchg
lods
and
jne
imul
add
adc
popf
clc
xlat
cmp
out
xlat
iret
pop
cld
jle
stc
loop
sbb
pop
mov
mov
add
shl
add
jp
int3
pop
push
leave
or
push
in
jae
adc
sar
test
adc
inc
sbb
rol
daa
loope
xor
int
push
cmp
jle
repz
xor
sti
fucomip
das
cdq
xchg
inc
popa
fist
popf
sar
lods
mov
out
jg
mov
rcl
push
or
retf
js
cmps
xchg
test
or
stc
push
rcr
addr16
mov
call
cdq
mov
rcl
dec
or
ror
mov
pop
jb
xchg
add
push
xchg
xor
sub
cmc
xchg
and
sbb
test
fadd
in
js
aas
jns
ret
cmc
cmc
mov
loopne
int
cmp
in
mov
lock
sbb
sbb
xchg
leave
sbb
std
in
lods
mov
jno
mov
in
add
in
imul
or
inc
pusha
mov
sahf
out
dec
dec
sbb
xchg
and
lds
es
xor
add
popf
or
into
cmp
jg
(bad)
xlat
or
dec
retf
fadd
test
adc
mov
mov
mov
inc
xor
mov
add
inc
add
mov
jmp
cwde
pop
xchg
mov
and
(bad)
xchg
mov
ja
nop
scas
jge
mov
mov
call
out
sbb
ja
push
sbb
movs
mov
jmp
clc
jecxz
mov
aaa
xlat
iret
push
mov
cmp
loop
cmp
dec
push
dec
shr
push
and
xor
cwde
movs
sub
mov
popw
xor
sub
push
pop
test
jmp
call
ret
adc
cli
inc
out
sub
ror
pop
mov
rcr
jb
dec
or
dec
cmp
add
shl
mov
cmp
retf
fcmovnbe
xchg
or
dec
dec
(bad)
nop
mov
icebp
mov
imul
data16
jae
mov
dec
cli
mov
mov
sar
call
push
mov
(bad)
cwde
(bad)
aad
push
push
pop
sbb
data16
(bad)
mov
add
js
movs
cs
fsub
cwde
ja
movs
or
and
call
fs
or
lods
clc
push
cmp
push
iret
jecxz
arpl
aas
mov
enter
jmp
loopne
fucomp
outs
mov
mov
xchg
mov
call
dec
jmp
es
adc
nop
sub
aam
mov
pop
adc
shl
mov
sbb
hlt
pushf
out
aam
outs
push
pushf
dec
fld
pop
not
fwait
inc
sti
neg
pushf
sbb
cmp
aaa
iret
imul
sbb
mov
movs
sub
mov
loope
fcom
or
nop
lsl
sub
pop
leave
mov
outs
stc
cmp
ret
pop
mov
inc
out
scas
arpl
inc
lods
shl
and
push
or
cmps
push
jno
dec
adc
sub
jno
out
fucom
pop
lods
pop
addr16
sub
jnp
ret
cmp
xchg
push
lods
adc
std
dec
mov
(bad)
arpl
pop
xor
outs
adc
dec
mov
xor
call
adc
jecxz
mov
repz
sti
cmp
xchg
jmp
pop
or
ss
mov
fnstcw
ins
in
repz
ss
mov
mov
xchg
jmp
push
stos
push
push
movs
cmp
inc
and
jmp
or
sub
data16
mov
add
add
xchg
(bad)
ror
push
xchg
ficom
cmp
cdq
mov
imul
aas
mov
icebp
cwde
neg
pop
and
(bad)
xlat
call
out
push
jle
jns
mov
ficomp
stc
mov
mulps
outs
sub
push
inc
and
jae
nop
inc
in
sub
imul
sub
jg
cmp
add
shl
test
mov
es
dec
add
cli
adc
add
jle
mov
lods
hlt
rcr
enter
sti
add
jae
outs
xchg
xor
mov
pusha
mov
mov
add
xchg
mov
xchg
and
pushf
mov
enter
scas
or
loope
xchg
pop
ins
sti
clc
xor
jno
stos
xor
mov
pop
out
push
pushf
sub
ss
add
push
and
cwde
test
mov
out
cmp
hlt
es
cmp
sbb
cmc
and
jb
jge
lods
(bad)
das
mov
nop
rcl
fdivr
mov
mov
xchg
and
test
mov
popf
mov
mov
add
push
cmp
cmp
mov
lods
int
jno
rdpmc
outs
outs
popf
sbb
mov
jns
test
lahf
cmps
sbb
push
(bad)
jmp
adc
cmp
mov
xchg
iret
mov
inc
dec
push
leave
mov
mov
dec
dec
jno
mov
mov
fs
mov
add
inc
mov
clc
sahf
mov
ds
adc
daa
aaa
mov
xorps
pop
ficomp
mov
aam
cmp
ds
mov
repnz
xchg
inc
out
pop
pop
sbb
mov
into
aad
push
cld
fld
add
inc
jge
push
sahf
xchg
neg
(bad)
xchg
bound
aad
xor
into
lahf
cmps
dec
fcomip
push
ret
xchg
adc
loopne
ins
add
sub
jmp
icebp
jo
mov
fild
out
out
jno
mov
lods
inc
jb
pop
sti
test
push
loop
mov
jb
push
out
pop
aam
mov
cld
sbb
dec
pop
ins
cmp
xor
jge
cli
adc
xchg
mov
in
test
jb
xor
cld
popa
icebp
mov
repz
or
pop
xor
xlat
mov
push
dec
mov
xor
pop
mov
popf
sbb
and
lahf
dec
icebp
inc
fisubr
xor
push
sub
mov
out
cmc
into
movs
leave
or
int
and
adc
es
repz
jge
push
mov
shl
cwde
shl
add
push
xor
jns
mov
adc
cmp
and
cld
dec
test
js
mov
ficom
mov
lock
jmp
jp
outs
mov
in
push
lea
push
mov
retf
mov
or
pop
mov
mov
je
sub
cmp
push
xor
jno
sti
int
pop
and
nop
addr16
ins
mov
fmul
push
mov
mov
stc
add
ss
lods
adc
pop
mov
mov
cmp
not
cmp
arpl
xor
dec
je
xor
mov
inc
je
in
mov
cdq
out
adc
xchg
es
mov
call
mov
pop
push
dec
lahf
jno
loope
scas
sub
or
or
out
in
sbb
push
push
(bad)
fidivr
pop
mov
pop
imul
pop
popa
shl
adc
scas
jecxz
retf
(bad)
data16
push
addr16
push
adc
scas
push
vmread
je
mov
adc
xor
xchg
pop
mov
sti
xor
loopne
mov
pop
push
xchg
jns
push
and
sti
sbb
and
clc
das
sub
test
int
mov
bound
or
ins
pop
cmc
xchg
jl
sub
sub
jo
xor
(bad)
pop
jno
add
data16
mov
fadd
push
shr
pop
jmp
or
retf
dec
fimul
aas
icebp
inc
aam
int
pop
mov
into
push
push
pushf
dec
push
cld
fbld
popf
neg
or
fistp
rol
sub
test
gs
aam
inc
mov
je
or
les
loop
pop
push
xlat
or
je
ins
adc
nop
lods
dec
pop
arpl
jmp
cmps
adc
xor
inc
mov
stos
retf
push
add
fidiv
jmp
inc
lock
xchg
inc
loop
int3
push
addr16
mov
and
or
mov
sbb
stc
add
icebp
mov
dec
lea
clc
fwait
jmp
pop
popf
in
(bad)
js
cli
int
aas
fmul
dec
retf
sub
and
sbb
and
inc
ins
call
pop
sbb
rcl
dec
mov
sbb
push
mov
inc
mov
push
jmp
push
sbb
(bad)
shl
cmp
mov
mov
or
dec
leave
cmp
jle
repnz
xlat
xor
mov
dec
(bad)
out
xor
dec
jnp
add
mov
cmp
dec
xor
adc
js
dec
and
add
xlat
add
push
int3
shl
mov
fimul
sahf
push
out
jne
das
xchg
out
movs
xchg
push
push
adc
pop
xchg
mov
push
sbb
out
pop
sbb
dec
ficom
cmps
(bad)
xor
push
mov
xchg
aam
adc
push
sub
dec
fcom
add
stos
xor
in
enter
adc
mov
mov
sub
mov
inc
stos
mov
mov
xor
repnz
or
mov
(bad)
push
enter
push
cmp
cld
lods
add
mov
je
in
test
cmp
(bad)
bound
in
(bad)
sub
sbb
sub
xor
mov
jmp
xchg
ja
fwait
add
add
jmp
ror
enter
fs
jp
inc
mov
nop
and
aaa
pop
jbe
mov
add
push
xor
mov
xchg
mov
out
test
(bad)
adc
rol
sbb
xchg
popf
mov
mov
repz
jl
lahf
movs
cmps
dec
in
mov
cmps
ins
mov
(bad)
fwait
outs
pop
add
imul
xor
inc
outs
sub
cdq
and
or
ja
repnz
mov
inc
sub
pusha
sbb
cmps
inc
or
imul
ret
jmp
and
gs
push
adc
in
enter
jmp
push
jo
and
mov
shl
cmps
inc
xchg
in
xchg
and
ja
cmp
(bad)
pusha
pop
pop
in
dec
test
icebp
push
mov
add
or
int3
inc
stos
nop
jno
enter
push
pushf
jle
imul
xchg
dec
dec
jae
mov
test
fsubr
and
jmp
sub
mov
add
adc
pop
dec
or
inc
push
mov
lock
in
mov
dec
and
sbb
xor
lea
mov
imul
into
mov
stos
out
inc
push
jmp
inc
loop
retf
cmp
dec
dec
sub
out
push
cwde
jno
int
xor
cmp
fild
mov
icebp
int
hlt
out
mov
lock
mov
fld
out
add
loope
inc
lods
cmps
adc
adc
rep
cmp
aaa
adc
dec
cmp
sub
sub
xchg
ror
mov
scas
xor
xchg
mov
loop
sub
scas
mov
and
mov
jecxz
pop
dec
stos
lods
es
push
sub
test
aad
jl
stos
nop
adc
xchg
and
jl
jmp
cmc
arpl
xchg
test
(bad)
sahf
out
lock
ret
mov
ds
sub
fisubr
add
inc
dec
pop
push
cmps
inc
mov
xchg
mov
pop
jecxz
push
and
mov
cmps
sbb
out
jns
jns
sbb
push
push
stos
mov
sbb
ja
fstp
mov
add
push
ss
dec
mov
sbb
push
mov
pop
loope
xor
add
jno
push
sub
inc
sbb
push
fcmovne
cmp
dec
pusha
mov
mov
jle
pop
pop
es
and
push
imul
movs
(bad)
cmc
or
push
mov
xor
enter
sbb
out
sub
dec
or
sub
and
ins
and
dec
and
mov
fcomp
xor
mov
out
cwde
dec
sbb
sub
cmp
jo
fild
mov
arpl
mov
cmps
js
icebp
xor
add
fidiv
pop
cmc
adc
mov
fld
aam
(bad)
mov
cmp
bound
loopne
mov
mov
shl
push
ins
aam
mov
inc
xlat
loop
or
xchg
push
mov
clc
xchg
push
ret
in
fsubr
js
dec
cld
adc
not
lea
retf
inc
xor
(bad)
lock
es
mov
mov
mov
add
and
mov
into
retf
push
pushf
fucomip
mov
ja
cmp
sub
push
clc
int
xor
xchg
das
pop
sbb
fcmovne
sbb
mov
scas
retf
cmc
into
dec
xchg
and
xor
adc
adc
sbb
shr
es
cld
repz
dec
add
sbb
enter
sub
pop
daa
inc
xadd
in
or
shr
pop
cmp
pop
pusha
mov
(bad)
addr16
bound
inc
and
out
cmp
and
scas
adc
and
cmp
imul
inc
inc
(bad)
in
cmp
mov
in
test
clc
aaa
push
add
sub
pop
retf
and
shl
inc
xor
pop
sbb
or
sbb
leave
adc
ins
mov
inc
(bad)
rcr
dec
int3
shl
gs
sahf
sahf
jge
mov
dec
int
stc
mov
hlt
or
mov
pandn
mov
aaa
mov
push
imul
push
dec
fld
ret
push
add
out
sub
push
mov
or
sti
sbb
outs
mov
mov
ret
arpl
int
mov
ja
xlat
and
cld
mov
ss
lods
mov
je
leave
jnp
mov
dec
dec
sbb
sar
push
mov
aad
pushf
jle
or
repz
mov
and
add
jge
(bad)
lods
stc
jno
xor
sbb
xor
aam
or
ds
idiv
ins
cmc
pop
or
mov
add
xor
push
fstp
mov
inc
or
lods
clts
sbb
xor
or
pusha
mov
lahf
jle
ret
push
and
or
or
add
std
ret
js
push
shl
xor
jnp
clc
inc
and
mov
sbb
pop
leave
loope
scas
in
adc
xor
or
outs
lds
jae
lock
test
fstp
pop
xchg
mov
mov
cmps
jbe
repz
aam
pop
add
mov
rcl
leave
clc
mov
pop
cmp
and
retf
cdq
fild
imul
gs
mov
dec
cs
cmp
mov
cdq
dec
pop
mov
psllw
add
push
pop
mul
inc
rol
pop
gs
(bad)
jp
mov
cwde
aam
jo
or
xor
or
inc
mov
scas
or
adc
rep
xor
add
mov
popa
shr
in
mov
inc
jbe
popa
mov
fnsave
std
jne
js
mov
fistp
fs
aad
int3
sbb
cs
(bad)
mov
add
xchg
mov
les
sahf
mov
jg
jecxz
or
xor
mov
call
inc
jp
loop
or
add
sbb
xchg
shr
in
mov
cmp
sbb
sub
icebp
mov
cmps
push
enter
xchg
sub
loopne
les
dec
cmp
retf
mov
inc
dec
clc
out
stos
jl
jl
cld
mov
mov
test
int
movs
and
push
dec
push
aas
in
sub
push
mov
pop
xor
cmp
add
xchg
out
sub
add
mov
lahf
sub
push
iret
cmp
sub
add
dec
jle
aam
int3
arpl
sub
mov
retf
scas
gs
ficomp
(bad)
test
pop
pop
mov
mov
cmp
dec
mov
repnz
sub
or
xchg
int3
dec
shl
xor
mov
xchg
(bad)
in
and
inc
or
movs
mov
pusha
ins
imul
inc
fild
cmp
jl
mov
mov
inc
movs
or
cmps
sub
js
push
scas
out
cmp
shl
sub
mov
sub
(bad)
xchg
cmps
out
les
popf
cmp
ja
out
add
cs
sti
repnz
cmp
je
add
lds
jo
inc
inc
rcr
cmps
retf
mov
push
stos
(bad)
test
repnz
shl
in
fistp
pop
jbe
mov
loop
scas
or
inc
and
push
fst
nop
xchg
sbb
cmp
push
sar
and
cmp
xchg
cmc
fistp
add
push
add
push
dec
in
pop
xlat
xchg
test
or
fstp
retf
stos
sub
adc
pop
lea
xor
sbb
aas
addr16
inc
stc
loope
lods
mov
(bad)
int3
cmp
gs
sub
arpl
popa
adc
xchg
push
into
jg
sahf
leave
popa
cmp
mov
cwde
pop
cmp
cdq
enter
enter
mov
sub
std
jg
daa
test
scas
les
inc
imul
repnz
mul
mov
cwde
int3
lahf
rcl
adc
addr16
add
movs
or
daa
test
jl
out
test
adc
retf
pop
mov
aad
dec
add
mov
fidivr
jmp
lds
push
or
imul
cmps
xchg
into
and
inc
int3
or
inc
test
mov
ret
fnstsw
jmp
jl
mov
fld
mov
mov
in
pushf
movs
call
jecxz
hlt
out
outs
add
xor
popa
(bad)
fbld
push
mov
sahf
jmp
out
mov
sbb
cmp
pop
cmp
mov
mov
or
addr16
cmps
out
xor
cli
out
inc
sub
push
(bad)
in
push
fstp
jo
dec
leave
std
pop
call
loope
jbe
mov
xor
xchg
dec
arpl
push
jae
pop
sti
xchg
call
and
fmul
jp
xor
lods
xchg
sbb
push
xlat
jns
and
sub
xor
mov
xor
cmp
mov
inc
call
cmp
dec
and
inc
adc
push
or
push
cmps
sub
jg
test
adc
inc
cmp
std
mov
stc
loopne
inc
fst
add
fcomp
iret
pop
inc
retf
loopne
jo
jg
es
outs
dec
leave
lea
xchg
imul
loopne
mov
mov
cmp
call
ins
dec
xor
lea
sar
jae
shl
bound
into
inc
xor
cs
out
cmps
mov
shr
jae
push
xchg
mov
inc
ins
mov
sbb
jp
movs
sbb
imul
or
bound
or
jl
and
popf
int
jnp
mov
icebp
pop
lock
cmp
retf
adc
inc
cmps
addr16
jo
cmp
pusha
add
cmpps
xor
ret
retf
dec
daa
icebp
hlt
mov
add
dec
push
scas
push
mov
rcr
cmps
mov
mov
icebp
stc
mov
call
out
sub
cmp
(bad)
das
aaa
lock
repnz
mov
xor
jo
push
cmp
ins
pop
or
les
dec
and
cmp
data16
test
pmulhuw
ret
adc
es
and
fistp
mov
test
jae
mov
xchg
and
mov
fincstp
push
inc
mov
dec
mov
ins
sub
icebp
xor
add
lods
aam
pusha
sub
mov
jmp
pusha
adc
cmps
cmp
sbb
adc
adc
aas
stos
pop
mov
fsubr
dec
scas
mov
(bad)
adc
imul
push
push
(bad)
jl
ret
sub
xchg
mov
pop
dec
mov
mov
inc
scas
fwait
jae
adc
mov
pop
mov
popa
adc
jae
ss
pop
xchg
xchg
aad
mov
in
xchg
xchg
es
sar
int
xchg
xor
inc
push
movs
dec
pushf
and
push
mov
jg
pop
cmp
dec
xor
rcr
out
stos
mov
xchg
and
cmp
add
xor
jmp
icebp
mov
fiadd
push
mov
xlat
repz
pop
xor
cdq
inc
mov
jns
aam
sub
mov
cs
cwde
push
add
or
sbb
xor
and
stc
stos
jb
imul
retf
loope
adc
jmp
push
in
mov
sub
or
add
adc
push
push
and
call
add
hlt
mov
sub
lea
adc
sbb
jecxz
pop
je
jae
pop
inc
fsub
xchg
test
imul
inc
bound
jns
data16
movs
hlt
cmp
jmp
cmp
mov
and
mov
dec
inc
cmp
jae
popf
jmp
aaa
or
sahf
mov
gs
push
cmc
xor
add
aam
sub
movs
addr16
sub
add
add
stc
mov
pop
mov
shr
sbb
leave
push
stc
fild
mov
lods
shl
mov
jmp
cmp
imul
sub
jb
ja
jns
pop
xchg
pop
xchg
das
inc
loop
xchg
ja
dec
dec
sbb
adc
call
cwde
dec
ss
inc
sbb
ficomp
inc
sub
mov
aas
pusha
cmp
mov
scas
sbb
(bad)
sub
popf
(bad)
frstor
outs
call
jns
xor
push
mov
or
(bad)
leave
mov
pop
stos
lock
dec
jno
out
push
mov
adc
repz
test
popf
add
mov
cdq
pop
sbb
std
sbb
and
inc
cdq
test
sahf
lea
or
cli
sub
adc
mov
mov
enter
(bad)
cld
loopne
xor
or
lds
xor
push
scas
idiv
call
(bad)
mov
pop
and
xchg
or
fadd
push
and
xchg
pop
push
adc
sbb
add
sbb
fisttp
push
inc
aaa
retf
jb
outs
jne
mov
dec
call
sbb
jb
pop
xor
xchg
stos
imul
cmp
jnp
std
cmps
mov
sub
icebp
cli
mov
lahf
lds
jb
sub
lea
jns
dec
xchg
and
loop
or
jbe
push
pusha
xchg
mov
inc
(bad)
pop
test
adc
cmp
mov
xchg
out
xor
cmps
sbb
fisttp
mul
in
mov
sbb
retf
cmp
gs
mov
addr16
jecxz
arpl
std
cmp
dec
jne
or
mov
adc
push
add
into
outs
jmp
sub
ret
jle
pop
dec
test
cmp
not
iret
data16
movs
pusha
test
das
popa
lods
mov
enter
fdiv
inc
xor
ins
shl
les
sub
xchg
lock
xchg
pop
and
inc
hlt
add
dec
mov
loop
dec
test
sub
jae
push
cmp
ins
add
cld
(bad)
aam
dec
aas
mov
fwait
push
or
sub
dec
sbb
or
xchg
inc
mov
das
test
aam
or
in
xchg
mov
js
sub
lock
jae
int
jbe
int3
push
jno
imul
(bad)
fsubr
arpl
push
aaa
pusha
int3
adc
inc
lahf
sbb
ins
shl
(bad)
or
cmp
jae
xor
movs
add
and
xchg
push
popa
ror
xchg
mov
gs
fisttp
aam
cli
xor
pop
sub
or
push
out
dec
xor
xchg
sbb
xlat
push
or
dec
inc
inc
dec
test
aaa
add
ss
loop
cmp
pushf
pop
retf
cli
xlat
dec
mov
xor
pop
push
jge
ins
test
fisub
outs
jmp
cld
(bad)
jne
sbb
mov
popf
cli
in
ins
stos
or
xchg
retf
enter
sti
mov
jns
pop
dec
aas
outs
pop
pop
xchg
(bad)
xchg
adc
pop
push
xchg
and
sub
icebp
outs
(bad)
cmc
mov
mov
fdivr
mov
mov
xchg
xor
add
cmc
xlat
div
and
lock
jge
outs
in
dec
mov
rcr
idiv
mov
popf
mov
(bad)
pop
(bad)
fcmovb
add
stos
aas
cmps
jns
dec
aam
call
into
sbb
jb
or
shl
cld
fcomp
mov
xchg
pop
jno
push
push
(bad)
inc
les
push
(bad)
jmp
push
mov
or
xor
neg
mov
mov
xor
pop
or
pop
jb
jo
addr16
rcr
cmps
add
js
in
cmps
mov
dec
push
popa
loop
in
retf
mov
dec
pop
popf
mov
xchg
sub
lods
inc
lahf
xor
test
inc
and
out
fsub
pop
in
outs
cwde
pop
xor
pop
or
mov
ss
and
dec
lock
jg
frstor
or
pop
lods
adc
xor
movs
fnstsw
out
push
sahf
or
mov
dec
mov
pop
lahf
es
dec
ins
stos
push
jg
xchg
sbb
mov
cs
out
mov
(bad)
dec
out
xchg
les
mov
jl
inc
gs
mov
xchg
std
out
call
std
(bad)
loop
dec
lea
or
add
aad
mov
enter
clc
add
mov
cmp
adc
or
fucom
popa
popa
clc
sub
popf
fsubp
(bad)
pop
or
repnz
movs
dec
movs
cmps
outs
jg
push
cdq
sub
cmc
sbb
test
mov
add
and
frstor
retf
cmpps
mov
sbb
add
cmp
daa
shr
add
in
add
in
or
adc
xor
je
mov
xchg
clc
and
dec
jmp
dec
xor
call
shl
daa
mov
and
test
scas
jb
fisttp
fisttp
ret
add
div
leave
out
dec
sub
and
pop
sbb
ja
inc
mov
mov
xchg
popf
pop
ret
pop
mov
xchg
fild
mov
cmps
sbb
push
fnsave
lea
popa
retf
mov
sti
cmps
fiadd
ds
mov
xchg
aaa
push
inc
je
into
movs
addr16
push
(bad)
in
fisubr
aas
xlat
mov
pop
jo
std
mov
(bad)
cmc
dec
retf
mov
(bad)
jne
outs
add
out
cs
std
std
mov
(bad)
jp
mov
(bad)
sar
pusha
cmp
sbb
enter
mov
dec
stos
fwait
mov
mov
mov
ins
enter
sahf
sub
(bad)
fdiv
dec
xchg
mov
iret
add
adc
cmp
iret
sbb
popf
cmp
popf
adc
xchg
adc
fcom
xchg
inc
push
rcl
inc
popa
jmp
mov
sar
and
popf
pop
xchg
js
xor
xlat
int3
jmp
dec
stc
xor
test
loopne
mov
sbb
push
fxch
aaa
jo
dec
mov
hlt
jne
jmp
and
dec
xor
xchg
aad
icebp
aas
xor
int3
add
ss
sub
(bad)
mov
jmp
iret
gs
pop
push
hlt
movs
dec
inc
xlat
movq
jmp
xchg
jmp
cdq
retf
adc
(bad)
popf
lods
fwait
xchg
sahf
scas
test
mov
repz
fisub
push
test
or
dec
arpl
or
mov
(bad)
sbb
mov
daa
xchg
dec
das
dec
inc
xchg
pop
leave
call
ficom
push
dec
jae
dec
(bad)
dec
hlt
in
cmp
mov
ret
mov
fs
and
lahf
mov
sub
xchg
leave
adc
out
hlt
push
pop
and
pop
jle
inc
adc
mov
repz
in
push
mov
fs
mov
mov
in
repnz
mov
in
aaa
(bad)
and
(bad)
sub
and
push
out
xchg
push
cmp
adc
gs
out
add
mov
call
and
xchg
test
jb
out
enter
jbe
xchg
mov
adc
adc
adc
(bad)
cmp
ja
fbstp
or
mov
lods
pop
cmp
jmp
fwait
dec
sub
mov
shr
jmp
xchg
clc
xchg
test
pop
in
mov
add
and
pop
add
mov
dec
pop
loopne
jo
fst
xor
mov
mov
jge
inc
fdivr
xor
es
popa
aas
lds
and
xchg
mov
cmp
jns
leave
fld
mov
xor
mov
add
add
or
stos
hlt
mov
and
sub
call
pop
inc
call
cmp
xor
xor
jge
push
je
popa
ror
pop
push
into
out
xor
mov
mov
add
je
mov
jb
cld
call
sub
cmp
jle
data16
sub
leave
mov
ret
loop
jae
dec
push
jp
mov
xchg
mov
add
(bad)
shl
xchg
jb
dec
inc
clc
sbb
fucom
mov
dec
xor
outs
sahf
jg
sub
cmps
pop
cmp
pop
jno
cs
fistp
addr16
imul
xchg
call
fwait
mov
add
pusha
mov
push
dec
sub
sub
push
sbb
in
popf
test
shl
ja
and
xlat
stos
test
add
mov
add
cmp
xor
or
cmp
and
mov
push
imul
pop
pop
push
(bad)
retf
and
int
sub
repnz
inc
mov
stos
jp
sbb
fcom
ins
int
xor
and
add
gs
cwde
lods
ss
push
out
cmp
aaa
inc
loop
enter
jecxz
dec
add
in
inc
adc
adc
add
(bad)
(bad)
lock
iret
jns
add
repnz
and
pop
dec
jmp
out
xor
push
inc
adc
dec
mov
or
cmp
or
aam
cmp
ret
sbb
sbb
pop
push
stos
test
cmps
(bad)
aas
cmp
mov
push
adc
mov
aam
mov
idiv
pop
shl
fisubr
push
jl
popa
pop
mov
jne
clc
lea
mov
jmp
mov
pop
sbb
repz
xchg
or
xchg
imul
shr
movs
mov
cmp
out
int3
xchg
adc
add
dec
mov
iret
mov
enter
fnstcw
repz
imul
push
push
add
or
sub
sbb
mov
mov
xchg
aad
rol
fidiv
xor
daa
es
xchg
aas
jae
shl
jae
jb
cmp
mov
adc
xor
inc
pop
addr16
inc
mov
or
xor
mov
xchg
adc
(bad)
inc
fld
or
outs
mov
cwde
mov
mov
enter
mov
sti
aam
loope
mov
and
add
cmp
icebp
lods
or
scas
mov
fcmovnbe
or
dec
add
addr16
sub
in
push
or
push
movs
and
mov
jno
push
ins
push
fisub
and
aaa
in
mov
add
loope
arpl
mov
xor
out
xchg
retf
cmp
mov
fwait
xchg
xchg
jb
sti
loope
fimul
popa
cmp
data16
mov
mov
sbb
cmp
adc
and
cmps
nop
xlat
aam
mov
add
or
jmp
add
js
mov
xchg
lods
add
inc
xor
cmp
and
sub
in
pop
push
in
call
or
xchg
and
int3
jmp
xchg
mov
gs
(bad)
push
inc
push
push
and
daa
mov
jg
call
shld
xchg
cmp
in
adc
fwait
cwde
movs
sub
out
inc
ds
and
addr16
or
xor
outs
push
aas
mov
js
or
jle
retf
pushf
xor
aad
and
repnz
ret
dec
add
ja
dec
outs
(bad)
xchg
mov
test
push
adc
adc
mov
shl
lea
mov
pop
mov
pop
add
pop
movs
ja
in
jmp
or
out
inc
loopne
addr16
sbb
inc
mov
push
xlat
fnstcw
xchg
jb
xor
shl
jge
or
mov
ja
mov
jg
ss
cs
fnstsw
movs
jo
xchg
data16
jge
call
lods
cmps
test
cmp
scas
ror
mov
cmc
mov
or
jb
in
hlt
and
in
mov
jnp
xor
fbld
push
retf
and
dec
inc
data16
(bad)
push
mov
bsr
dec
ficom
mov
(bad)
outs
push
push
cmc
mov
cmp
test
cmp
pop
cmps
inc
out
dec
mov
jp
sbb
sbb
(bad)
(bad)
dec
mov
pop
fst
stos
push
pusha
inc
out
xchg
jbe
mov
mov
jbe
fwait
jmp
in
sti
adc
js
out
into
jnp
lods
lods
jp
xchg
push
and
clc
imul
arpl
and
test
cmp
add
mov
dec
ins
mov
pop
adc
mov
icebp
adc
pop
leave
pusha
test
aas
or
fmul
push
dec
sti
dec
push
inc
inc
leave
inc
and
lods
pop
daa
or
xor
adc
in
mov
loopne
or
test
pop
push
out
mov
daa
jle
nop
test
repnz
fisttp
fwait
mov
enter
push
clc
jbe
pop
test
aaa
push
jae
mov
(bad)
ror
sahf
jmp
call
add
and
scas
and
fadd
cmp
std
shl
cwde
jbe
dec
fs
leave
cdq
lock
fisttp
bound
cs
sbb
scas
pop
mov
mov
jp
inc
xchg
outs
inc
pop
daa
xor
sbb
or
icebp
push
sub
xor
mov
mov
arpl
stos
push
inc
call
ds
pusha
add
int
cmp
rep
cmc
int
jmp
and
mov
add
inc
mov
rol
stos
fadd
cmp
and
test
lea
in
vfrczsd
cmp
and
push
fadd
imul
popf
inc
mov
test
xchg
adc
xchg
scas
aam
or
std
push
push
bound
jecxz
pop
jg
int
ds
mov
xchg
sub
loop
sub
jb
xor
sti
push
push
jp
loopne
jle
ins
sub
sbb
or
mov
xlat
imul
push
sub
stc
xor
fnsave
or
jecxz
push
call
pop
stos
leave
mov
inc
movs
mov
pop
mov
inc
mov
mov
div
mov
int3
xchg
xchg
test
mov
sar
sahf
clc
and
sub
test
cli
cmp
add
ins
and
add
jg
add
stc
inc
jge
hlt
loope
repz
(bad)
xchg
in
adc
push
push
lea
(bad)
int3
mov
call
jmp
and
jb
push
mov
mov
aad
leave
lods
fst
retf
fdivr
mov
js
rcl
popf
push
ror
imul
scas
rcr
jno
inc
mov
jb
push
gs
pop
fmul
sub
movs
push
jnp
push
sub
loope
scas
test
and
inc
test
cmp
in
test
aas
xlat
out
jmp
push
js
outs
mov
in
(bad)
mov
clc
xlat
mov
push
adc
pop
sbb
ret
and
fs
mov
bound
xlat
push
loopne
cmps
test
aad
mov
jbe
mov
sbb
cmp
cmp
neg
sub
out
shr
test
jmp
fs
out
lds
fwait
jb
call
pusha
mov
mov
movs
inc
(bad)
je
pop
xchg
lea
sbb
pop
mov
pop
mov
sbb
sub
sub
mov
jmp
aaa
inc
bnd
mov
sbb
push
mov
mov
sub
and
cmp
xor
cmp
jp
cmp
xor
xchg
push
xchg
push
dec
pop
enter
test
test
mov
and
dec
sub
int
fimul
pop
(bad)
in
cs
mov
sbb
cwde
jae
push
inc
lods
jmp
mov
cwde
retf
scas
loop
das
jecxz
sbb
sub
stos
add
cmps
leave
xlat
xchg
pop
push
cmp
dec
mov
sahf
mov
ret
gs
call
data16
std
and
aam
das
cmps
or
out
out
jle
outs
pop
sbb
xchg
lahf
push
cmp
pop
add
mov
cmp
cmp
ja
push
xchg
add
sub
cmp
jle
and
add
test
imul
jecxz
push
ds
push
stc
push
inc
pop
lea
jg
push
(bad)
in
push
jo
mov
jecxz
aas
push
(bad)
(bad)
repnz
cmp
jmp
sbb
add
pop
js
mov
mov
ret
in
(bad)
iret
xadd
pop
call
sbb
jmp
xor
sbb
repnz
or
test
ds
out
mov
pusha
out
mov
or
pusha
loop
mov
outs
adc
out
ss
cwde
mov
and
mov
push
aad
adc
mov
xchg
idiv
jno
push
in
mov
jb
clc
mov
pop
or
dec
test
out
icebp
mov
movs
add
dec
jmp
mov
mov
jecxz
jmp
mov
push
push
mov
push
ss
jns
mov
pop
sbb
addr16
test
xchg
int
mov
in
enter
jns
lock
jmp
xor
leave
or
jo
push
in
jp
jne
xchg
xchg
fmul
push
or
dec
mov
js
(bad)
jmp
xor
dec
arpl
fstp
inc
xor
fmul
imul
mov
xor
retf
ret
call
push
or
inc
test
leave
xor
and
sbb
out
pop
out
dec
call
aam
loopne
and
push
adc
jle
jns
or
jmp
nop
fsubrp
out
mov
pusha
imul
in
das
add
scas
clc
sub
or
sub
ins
arpl
les
or
cmps
pop
aas
xchg
(bad)
std
sbb
mov
xchg
push
gs
arpl
mov
(bad)
(bad)
lods
mov
shl
iret
push
add
pop
lods
iret
cdq
rcl
into
sbb
or
add
je
dec
or
mov
xchg
pop
cmp
pusha
mov
icebp
jns
mov
data16
cmps
ror
ss
stos
pop
xchg
add
dec
mov
cmps
aad
push
adc
les
push
sahf
jb
push
xor
and
dec
scas
stos
fsub
pop
inc
ret
(bad)
bound
xchg
mov
mov
pop
adc
add
or
dec
push
inc
pop
cmps
and
lods
push
jmp
fyl2xp1
out
adc
add
test
jne
movs
cmp
stos
mov
jne
lods
jge
cmc
rcr
rol
dec
imul
mov
jae
sbb
or
loope
outs
dec
mov
jecxz
shl
xor
push
jne
cdq
mov
mov
jae
jae
movs
dec
les
and
or
and
(bad)
mov
fnstenv
stos
jecxz
xor
push
pop
pusha
out
cmp
cmp
stos
mov
jl
mov
pop
shl
sbb
std
pop
mov
gs
push
jmp
adc
mov
out
mov
or
sbb
loop
test
loope
adc
sub
add
mov
mov
cmp
in
test
ds
or
fld
(bad)
clc
cmps
sub
dec
mov
inc
jp
lds
cmc
jp
imul
mov
neg
lods
mov
idiv
cmp
inc
pop
(bad)
fucomip
dec
and
sub
or
xchg
xchg
hlt
push
mov
and
aas
mov
pop
dec
xor
loopne
pop
cli
dec
inc
(bad)
out
shl
push
jnp
fnsave
cmp
aad
daa
mov
iret
xchg
aad
out
sub
mov
mov
cmp
jbe
inc
push
inc
fs
xchg
std
sbb
and
pop
xor
repz
mov
daa
mov
mov
jbe
sbb
dec
adc
out
cli
xchg
repz
outs
mov
test
jb
xchg
gs
leave
push
jo
movs
push
xor
xchg
cmps
retf
in
(bad)
ins
cmp
mov
sbb
shr
in
adc
xchg
repz
adc
scas
pop
fwait
dec
ja
fmul
es
xor
ret
xchg
mul
xchg
jne
inc
cmp
cs
cmps
and
mov
fs
sub
inc
xchg
shr
inc
lea
lods
in
mov
repz
imul
lods
movs
icebp
hlt
xchg
mov
xchg
mov
pushf
in
rol
test
fist
in
and
add
push
arpl
lds
inc
mov
les
dec
repz
sbb
inc
int3
fnstenv
(bad)
jae
cmp
jg
mov
add
fs
adc
xlat
mov
mov
mov
cmps
xor
dec
outs
shl
aaa
fwait
hlt
push
sub
inc
pop
jns
add
dec
loop
call
repz
push
ror
pushf
jno
not
loope
dec
(bad)
xchg
stos
mov
(bad)
(bad)
hlt
arpl
repnz
push
pop
inc
mov
xchg
adc
sub
xor
out
into
in
lock
jp
jmp
inc
mov
leave
pop
les
gs
push
add
jns
(bad)
popf
inc
pop
out
lds
jle
leave
in
je
jno
inc
sbb
rcr
(bad)
out
mov
leave
mov
outs
lahf
iret
or
(bad)
or
movs
scas
and
cmp
or
cwde
dec
mov
in
icebp
sub
mov
inc
call
dec
mov
loopne
cmp
cmps
loope
out
pop
lods
sahf
mov
push
mov
adc
xchg
xor
and
out
or
rol
dec
push
in
nop
mov
mov
fistp
outs
xchg
and
in
rcr
rcr
aas
inc
jno
cmp
pop
sub
cdq
add
stc
rcr
mov
movs
or
adc
ins
test
mov
xor
ret
loope
inc
ret
pop
mov
jo
add
dec
popf
and
(bad)
mov
sbb
or
inc
pop
cmp
fild
push
retf
sbb
out
enter
gs
push
fsubrp
lods
lahf
ss
icebp
cmp
push
mov
dec
shl
stos
xchg
mov
mov
test
daa
push
int3
fdiv
pop
pop
mov
scas
inc
push
push
mov
xchg
adc
or
dec
adc
fnsave
(bad)
and
jmp
cmc
mov
push
les
scas
icebp
adc
call
js
jmp
cld
(bad)
(bad)
int3
dec
mov
sbb
ja
mov
xor
loopne
test
mov
stos
lds
fisub
push
mov
adc
cmp
je
jae
xchg
stc
gs
xor
imul
jbe
loop
(bad)
xor
(bad)
jmp
mov
shr
dec
inc
jmp
call
mov
cmp
xchg
cs
mov
(bad)
sbb
sub
xchg
stos
repnz
frstor
pop
rcl
bound
scas
js
arpl
cmp
pop
push
xor
dec
push
jmp
pop
jo
es
shr
xor
jno
dec
aam
push
xor
jmp
push
in
and
ja
and
dec
mov
int3
lea
dec
xchg
adc
sbb
xchg
lahf
call
xchg
sti
and
test
ret
cmp
xor
push
add
xchg
ins
loop
jp
out
xchg
adc
dec
in
mov
add
iret
jecxz
push
lds
fdivrp
sub
mov
(bad)
test
mov
ja
adc
push
rcl
cmp
adc
cs
mov
sub
cmc
push
pop
pushf
and
xchg
jmp
jnp
xchg
stc
mov
fisttp
sbb
jne
adc
pop
loopne
adc
pop
xor
jo
in
lods
shl
adc
lock
pop
out
xor
or
fwait
mov
(bad)
fiadd
bnd
mov
ror
ss
ins
rcl
mov
ds
mov
faddp
in
dec
sub
fisub
inc
inc
mov
into
adc
rcr
shl
mov
cs
or
fisubr
pop
in
test
sbb
je
push
xchg
sub
dec
mov
retf
rol
fmul
push
jge
cmp
mov
jl
jne
xchg
jmp
pusha
les
xlat
iret
aaa
add
retf
adc
out
int3
shl
jns
call
(bad)
mov
adc
shr
jmp
fcomip
movs
cli
dec
lods
adc
hlt
adc
or
retf
dec
mov
retf
scas
jp
fiadd
imul
jp
lods
adc
les
mov
and
inc
ins
xlat
rcr
xchg
xchg
fist
ficomp
push
xchg
dec
int3
inc
dec
push
addr16
push
mov
jne
push
mov
or
pop
ret
xchg
inc
loope
sub
pop
or
and
popa
mov
clc
fidivr
mov
dec
xor
movs
push
dec
lea
xor
jbe
cli
les
sub
sub
cli
push
inc
push
dec
ret
add
outs
xchg
gs
ss
dec
ficom
xlat
inc
mov
pusha
and
sbb
mov
pushf
xchg
inc
sub
loope
je
movs
mov
cmp
mov
bound
test
ins
in
(bad)
aad
gs
imul
xchg
mov
xchg
mov
(bad)
sbb
dec
pop
inc
pop
xlat
inc
push
add
orps
std
int3
mov
jbe
jmp
xchg
mov
mov
dec
inc
in
sub
adc
cmp
aam
xor
(bad)
cmc
mov
dec
mov
clc
mov
movs
std
sar
jmp
xor
movs
and
(bad)
repnz
pop
ficomp
add
test
stc
sbb
cli
data16
movs
mov
outs
push
(bad)
out
add
arpl
xor
push
push
fbstp
shl
push
nop
pop
adc
adc
icebp
cmp
inc
cmps
movs
adc
add
and
je
std
xchg
aam
and
add
aas
push
fwait
mov
sub
outs
out
inc
out
test
xor
test
aad
shl
imul
cdq
push
fcmovb
add
fild
inc
or
data16
mov
add
add
cli
in
outs
sub
lahf
das
or
repz
icebp
dec
xlat
jne
mov
imul
add
outs
pop
(bad)
inc
push
(bad)
cdq
adc
jmp
sbb
and
mov
lods
lea
sbb
inc
into
retf
inc
sbb
lods
cmp
sub
(bad)
mov
es
add
inc
mov
push
cdq
(bad)
or
mov
push
inc
loop
xor
dec
imul
div
nop
sub
repnz
add
stos
inc
repnz
add
les
pushf
sub
(bad)
jmp
inc
push
mov
xor
sar
cs
xor
cmps
inc
pop
and
ss
xor
(bad)
jnp
mov
int
int3
int3
cmps
mov
idiv
sub
sub
cmp
jno
xchg
ret
loop
pop
mov
mov
and
ret
sub
sub
out
push
pop
jno
jecxz
lods
lock
sub
sub
fstp
inc
and
mov
push
pop
enter
mov
xor
adc
and
adc
gs
aaa
das
rcl
shr
push
enter
(bad)
adc
mov
pop
mov
jg
jmp
pop
jb
leave
aas
mov
add
sbb
lods
push
pop
addr16
enter
cmps
adc
jno
ja
jbe
call
xor
ins
inc
adc
imul
arpl
sub
icebp
sub
clc
fmulp
out
repz
movs
cld
xchg
pop
in
or
int3
xor
mov
jle
jle
pop
pop
xchg
ins
jge
in
movs
mov
pop
data16
lods
test
pop
or
in
jo
push
(bad)
loope
in
repnz
stc
sti
push
in
aas
stos
xchg
jb
cmp
shr
cmp
xor
adc
sti
dec
push
mov
aaa
mov
in
add
push
adc
mov
(bad)
es
ins
add
mov
xchg
cdq
xchg
jecxz
out
repnz
out
fadd
push
cld
and
pop
mov
retf
addr16
cld
in
pop
dec
push
idiv
gs
sti
repnz
cli
dec
(bad)
jp
(bad)
lock
stos
mov
pop
shl
mov
inc
(bad)
es
call
xchg
int3
jmp
imul
jo
push
add
test
and
pop
test
cli
and
xor
sub
jae
pop
fnstcw
lods
in
cmp
out
pop
sbb
int
pop
cld
adc
pop
cmps
icebp
mov
dec
lods
or
popa
fld
dec
arpl
dec
jnp
bound
stc
adc
fldcw
fstp
add
ds
jbe
cmps
sbb
pusha
pop
mov
pop
xor
mov
add
mov
(bad)
retf
push
test
cld
jmp
sbb
or
jae
aad
jl
retf
inc
call
ss
add
cmps
push
sbb
jo
ror
aam
or
(bad)
jmp
ret
xor
lods
out
adc
and
scas
out
popa
scas
rcr
inc
mov
dec
push
jl
sub
outs
dec
mov
pushf
movs
(bad)
sbb
mov
and
dec
mov
cdq
and
outs
scas
pushf
xchg
and
xchg
lds
xchg
xor
pop
jle
pop
fcom
retf
sub
imul
mov
arpl
xchg
jle
js
add
rcr
jecxz
lea
dec
dec
lea
cmc
je
xlat
pop
xchg
sub
cli
movs
sar
dec
mov
pushf
inc
call
lods
jno
xlat
sbb
inc
(bad)
cwde
sahf
pop
sbb
pop
fld
idiv
sub
(bad)
xchg
popa
cwde
xor
(bad)
fisttp
dec
push
pop
push
or
call
fadd
in
push
pushf
lock
dec
mov
cmps
in
les
jnp
shl
div
sbb
aam
xor
xchg
jmp
add
jg
fwait
hlt
or
push
sub
clc
dec
into
out
inc
inc
lods
cli
add
adc
add
inc
ror
lahf
gs
retf
jmp
stc
rcl
adc
(bad)
aas
mov
and
movs
mov
div
fistp
stos
adc
sub
imul
inc
sbb
shl
pop
std
stc
sbb
outs
push
data16
adc
xchg
ret
stos
scas
push
inc
push
add
add
rol
sahf
popa
inc
sbb
or
mov
jne
jno
pop
inc
test
fistp
int
fcomp
sub
jne
adc
ficomp
sub
rol
jmp
or
cmp
pusha
sbb
jae
repnz
jmp
sbb
inc
loopne
test
xchg
jno
jmp
es
ficom
retf
dec
or
mov
adc
push
cmp
imul
pop
leave
call
iret
sbb
xor
not
cwde
shl
pushf
scas
adc
mov
sbb
fldln2
jbe
dec
enter
xor
mov
hlt
mov
adc
pop
call
jle
mov
cwde
mov
sbb
or
pushf
sar
cmc
pop
movs
in
out
mov
dec
stos
(bad)
das
pusha
movs
mov
mov
stos
adc
xor
add
fst
enter
cmp
and
push
pop
movs
out
(bad)
cmc
inc
int3
sub
cmc
arpl
push
repnz
jo
pop
stc
mov
les
lods
jg
fwait
jmp
pop
push
dec
jmp
jne
push
xchg
push
popf
repnz
rol
pop
shr
daa
call
push
retf
cld
ss
mov
daa
ret
adc
jns
fdiv
ret
bound
jmp
jb
jl
aaa
jle
outs
(bad)
push
nop
test
push
dec
xchg
ins
jae
jle
jmp
xchg
cmp
mov
or
test
or
jne
mov
les
mov
and
sbb
imul
lds
shl
bound
mov
xchg
shl
rcr
ds
jp
adc
adc
ss
mov
retf
mov
test
nop
cmc
xchg
adc
(bad)
xchg
mov
cmp
xor
and
add
fadd
mov
icebp
jbe
xor
nop
jmp
sub
scas
sub
mov
push
pop
nop
push
jo
lds
pop
xor
(bad)
call
and
dec
(bad)
int
push
cmc
aas
push
fmul
(bad)
iret
and
mov
cmp
fild
imul
fild
sub
(bad)
mov
std
out
or
xor
or
test
cmc
cdq
sahf
fs
retf
and
xor
not
daa
test
scas
loope
jne
push
xchg
or
rcr
mov
sub
popf
mov
xor
inc
xchg
icebp
add
or
xchg
push
push
pushf
xor
dec
es
inc
and
xor
dec
and
sub
xor
push
fwait
xchg
stos
addr16
aaa
dec
xchg
and
inc
in
pop
loopne
add
ss
add
lods
in
cmp
imul
arpl
mov
out
cmc
out
sbb
cmp
ja
dec
(bad)
mov
or
xlat
cmp
adc
test
(bad)
push
jo
dec
ins
jge
pop
sub
pop
mov
pop
add
mov
fwait
pop
add
xchg
inc
repz
ret
fisub
out
mov
test
shl
pop
stos
fnstsw
sub
lds
add
pop
cwde
aam
leave
stos
test
mov
cmp
cmps
mov
adc
aad
loopne
ffree
cmp
pop
cs
rcr
addr16
in
add
sbb
inc
add
sub
mov
mov
xchg
cmp
fild
sbb
in
cmp
pop
ss
push
inc
(bad)
outs
not
cmps
leave
xchg
inc
outs
lahf
lods
mov
mov
and
push
push
pop
xor
int
mov
push
xchg
mov
dec
data16
in
test
ficomp
call
cmp
jb
call
xor
sbb
pop
shr
sub
jecxz
out
push
imul
sbb
pop
pushf
movs
xor
jle
shr
inc
aam
jb
lods
setnp
arpl
iret
aas
push
mov
jle
out
xor
mov
lahf
aas
dec
or
jp
mov
hlt
test
push
inc
xchg
ret
addr16
sti
mov
add
or
retf
dec
push
mov
pop
add
dec
pop
mov
mov
cmp
js
dec
neg
xchg
stos
call
fstp
ss
adc
mov
add
sbb
pop
sub
jecxz
cmp
fisttp
mov
sar
stos
mov
mov
cmp
pop
iret
cdq
adc
rol
test
or
fdiv
pop
pop
mov
jae
push
inc
cmp
xor
mov
je
mov
and
mov
repnz
test
fadd
add
inc
sub
mov
inc
jae
xor
jmp
mov
int
and
fnstenv
cli
inc
pop
push
rcl
(bad)
cld
sbb
int3
lods
dec
pop
iret
xchg
setnp
js
(bad)
mov
cmps
mov
rcl
jb
fst
xor
test
and
js
pop
cmps
and
ror
xchg
adc
xchg
adc
sub
jne
(bad)
push
and
jge
jbe
mov
fldenv
mov
cld
sbb
mov
(bad)
(bad)
aaa
lock
or
xor
aad
jecxz
mov
mov
test
sub
bnd
ss
loope
pusha
xor
pusha
sbb
dec
xor
dec
inc
dec
shufps
pop
fimul
xchg
push
pushf
adc
aas
jge
dec
jae
pop
dec
adc
mov
pusha
(bad)
jne
ds
cwde
es
xchg
(bad)
jae
retw
sbb
fdivp
repz
mov
xchg
adc
inc
inc
jns
in
inc
sbb
(bad)
dec
sbb
es
pop
mov
mov
jmp
and
repz
cmp
xchg
xchg
int
mov
jl
fucomip
repnz
add
sbb
rcl
or
movs
cmp
sub
xor
inc
pushf
scas
sbb
pushf
mov
fwait
jb
(bad)
jne
sbb
scas
sbb
push
gs
jae
cmp
mov
dec
cmp
sbb
(bad)
dec
push
add
loopne
iret
mov
mov
aas
leave
xchg
je
sub
sbb
xor
or
cmp
inc
mov
cmps
xchg
out
dec
pop
movs
push
mov
cmp
push
mov
(bad)
gs
jmp
dec
mov
pop
jmp
cmp
jno
arpl
sub
outs
pop
jbe
das
pop
jnp
mov
std
inc
jle
mov
mov
fistp
int
push
mov
call
xchg
test
pop
loope
inc
test
inc
mov
jecxz
pop
dec
and
scas
popf
mov
aam
movs
and
push
aas
pop
push
add
ja
mov
call
outs
mov
repnz
jnp
repnz
inc
adc
jnp
(bad)
sub
aad
jmp
xor
jmp
sub
leave
xchg
dec
inc
clc
iret
adc
call
outs
inc
jo
ret
add
jae
jmp
jecxz
pop
xchg
in
sub
inc
jp
inc
std
test
mov
mov
fcmovnbe
stc
mov
ss
add
sub
ret
xor
outs
btc
inc
adc
jg
mov
mov
in
mov
sbb
lock
scas
jo
push
cmovnp
lahf
push
sub
sub
and
les
hlt
addr16
ss
add
dec
lock
(bad)
test
scas
mov
xor
(bad)
scas
mov
in
push
outs
xchg
and
cmp
les
xchg
iret
in
gs
pop
(bad)
lods
nop
mov
sahf
cmp
mov
add
(bad)
cdq
jmp
xor
pop
cmps
dec
dec
ret
xor
bound
mov
and
dec
mov
adc
test
or
and
ror
arpl
push
sbb
je
std
or
mov
popa
std
in
cld
or
lods
dec
(bad)
ret
or
in
cld
lds
lods
mov
or
ret
aaa
fdiv
(bad)
std
or
popa
daa
loop
in
sub
mov
cmp
inc
dec
push
repz
jno
mov
jno
pop
das
call
pop
push
cmps
push
ficomp
jp
push
mov
mov
dec
mov
mov
lds
cmp
sub
sub
adc
dec
sub
ss
cdq
inc
rcl
cmp
outs
mov
scas
inc
dec
jae
call
push
shr
pop
dec
or
lds
popa
mov
js
xchg
ins
int3
in
adc
sar
neg
jl
out
cld
test
jmp
xchg
lock
mov
test
aaa
pop
mov
sub
loop
push
dec
mov
inc
sbb
stos
or
ins
pop
movs
jb
test
movs
hlt
stos
ror
sbb
dec
sub
pop
into
out
dec
inc
fiadd
add
enter
sbb
cmp
(bad)
cwde
icebp
jg
dec
pop
into
push
rcl
push
and
xchg
in
and
test
jbe
and
jne
cmps
addr16
retf
sbb
push
pop
adc
dec
and
in
and
fmulp
mov
mov
fbstp
sbb
and
push
in
mov
dec
mov
mov
mov
icebp
mov
ins
icebp
xchg
mov
(bad)
pop
or
out
test
into
push
or
les
out
imul
xlat
cmp
mov
jb
in
push
retf
icebp
mov
pop
aad
sbb
(bad)
rcr
xor
inc
retf
pop
cdq
lock
inc
adc
dec
test
inc
mov
ss
nop
mov
mov
xchg
adc
adc
add
test
shr
xor
mov
lods
(bad)
dec
push
pop
dec
lods
sbb
shl
cmps
fbld
sti
inc
popf
mov
jmp
arpl
xchg
and
mov
xor
retf
mul
call
sub
pop
mov
push
mov
stc
cli
jmp
mov
ret
test
dec
add
dec
mov
repnz
mov
jb
xchg
pop
adc
push
lds
test
(bad)
fucomp
lea
push
pop
(bad)
mov
int3
push
les
and
cli
jae
inc
lods
dec
int3
sbb
imul
and
cmp
aas
fnsave
sbb
mov
nop
rol
(bad)
lock
out
call
and
sub
xchg
pop
mov
loop
test
mov
call
lea
jmp
xchg
mov
jle
aad
cmps
or
inc
and
sbb
cmp
fistp
stc
push
mov
sub
hlt
cmp
into
lds
add
js
mov
mov
jle
lods
mov
jb
push
pushf
add
cmps
mov
mov
sbb
repnz
cmp
scas
aas
jecxz
jnp
mov
sub
ss
jge
fs
cld
xor
xor
out
push
mov
cmc
sub
push
jns
retf
retf
push
shl
js
nop
call
rcr
xor
push
pusha
sahf
getsec
inc
(bad)
rcl
sti
(bad)
stos
lahf
push
xor
fidivr
or
imul
(bad)
(bad)
jecxz
icebp
(bad)
out
xchg
out
mov
sub
out
loop
add
inc
ror
cmp
inc
xchg
adc
cmps
dec
div
outs
mov
jl
inc
or
sub
or
or
repz
sbb
repz
stos
add
(bad)
mov
dec
out
dec
push
pop
retf
icebp
xlat
xchg
popa
xor
sub
xchg
xor
adc
cli
ss
mov
test
jne
sub
mov
in
add
push
(bad)
pop
test
jae
call
inc
add
outs
ret
retfw
mov
and
mov
(bad)
dec
mov
or
aam
pushf
sub
inc
mov
pop
inc
fmul
stos
enter
sub
lahf
dec
fnop
or
(bad)
xchg
mov
adc
hlt
adc
push
je
pusha
mov
jne
cmp
dec
int
inc
adc
adc
ds
adc
cld
xchg
leave
cwde
pop
jae
test
fbstp
in
push
and
mov
push
scas
add
xor
and
pop
cli
jb
neg
xlat
out
repz
in
arpl
dec
push
inc
mov
sbb
push
movs
ins
sub
bound
shr
mov
nop
or
ja
dec
mov
retf
sub
jmp
out
mov
jne
test
popa
mov
cdq
les
dec
cmp
es
pop
sub
daa
shl
daa
ins
sahf
gs
popf
shl
xor
das
shl
pop
and
jge
sub
xchg
out
dec
cmp
pop
push
(bad)
rcr
jb
inc
clc
sahf
jecxz
repnz
add
push
push
cwde
adc
cmp
xchg
jmp
or
dec
add
lods
in
cmp
push
mov
ud1
stos
div
mul
sbb
gs
fstp
mov
mov
mov
xchg
ret
punpckldq
dec
pop
movs
enter
movs
or
arpl
pop
test
cs
dec
dec
add
loope
dec
sub
sbb
and
lds
out
loope
sbb
cs
adc
mov
mov
push
js
mov
jl
mov
mov
inc
add
push
or
xor
mov
cmp
retf
test
dec
jg
stos
mov
test
iret
test
(bad)
cwde
sbb
inc
iret
int
add
mov
xchg
ret
test
mov
(bad)
jmp
mov
int
pop
ja
retf
cmp
repz
retf
rcl
mov
out
imul
pop
mov
(bad)
cmp
sti
adc
xor
xchg
sbb
adc
xchg
mov
fcmovnu
push
(bad)
sbb
aam
dec
in
adc
dec
xor
cmps
into
fidiv
adc
cdq
test
cmp
test
or
add
lods
fwait
stc
mov
add
inc
retf
sbb
dec
jo
inc
(bad)
int3
retf
xchg
xchg
cmp
mov
add
iret
and
or
xlat
pop
sub
je
pop
sub
mov
rcl
retf
les
or
in
cmp
stos
fdivr
arpl
and
sahf
pop
pop
sub
jge
push
stc
add
outs
xor
enter
test
es
leave
hlt
lods
icebp
mov
or
mov
push
das
cs
jp
mov
nop
lds
dec
(bad)
enter
mov
push
aam
dec
jbe
aad
mov
loop
ror
in
adc
pop
xor
sub
fsub
scas
dec
fdiv
adc
cmps
push
jp
pushf
push
add
or
adc
addr16
lods
sbb
jmp
mov
jmp
gs
lock
add
push
fisubr
iret
jge
inc
aam
rol
xchg
sub
push
xchg
pop
xor
mov
jg
sbb
pop
jbe
inc
lea
stos
xchg
fadd
int
push
lahf
mov
sub
jg
jno
sub
cmp
stos
mov
stc
arpl
and
jmp
jnp
fwait
in
mov
iret
dec
loop
rol
dec
cli
dec
jg
push
scas
inc
out
mov
xor
cmps
into
mov
mov
xor
cwde
data16
fsub
xchg
add
sahf
cmc
test
xor
xchg
or
mov
adc
hlt
loope
mov
or
lahf
inc
push
movs
pop
inc
xchg
push
lods
jmp
sahf
cmp
push
xchg
aam
mov
sti
(bad)
in
(bad)
je
mov
or
mov
add
jle
jmp
pop
daa
xor
xchg
ja
std
pushf
mov
sbb
xor
loop
and
mov
sbb
and
add
test
or
loope
lock
popf
retf
xor
mov
popa
adc
out
inc
mov
(bad)
jg
popf
dec
or
daa
test
sbb
pop
leave
pop
dec
cmps
mov
push
and
(bad)
push
addr16
cld
outs
push
mov
lods
mov
or
iret
adc
in
or
dec
jmp
dec
cdq
mov
stc
ja
mov
(bad)
(bad)
test
popf
or
out
sub
fisttp
repnz
mov
mov
add
stos
dec
retf
jmp
adc
push
xchg
int
or
cmps
push
jp
jnp
popf
adc
cmc
mov
idiv
mov
not
dec
pusha
dec
jb
xchg
or
or
pop
call
fstp
ret
add
(bad)
outs
xor
in
loope
dec
ror
rcr
xchg
mov
or
shl
test
fs
sbb
and
int3
sbb
inc
js
call
dec
add
bound
pop
add
push
sbb
mov
add
popa
mov
ja
push
inc
icebp
push
fdivr
jb
push
pop
and
lods
(bad)
loope
es
in
adc
and
psrld
shr
lods
vhsubpd
push
sub
sbb
sub
xor
mov
adc
stos
push
cmp
mov
mov
and
pop
mov
std
jae
test
ja
mov
dec
xor
push
sub
jp
cli
das
inc
jno
mov
fstp
cdq
pop
loopne
pushf
sbb
movs
pop
dec
adc
fiadd
ja
push
push
xchg
ror
jecxz
pop
jbe
ins
jbe
nop
ret
fldcw
mov
adc
aad
fwait
cmp
pop
push
test
and
in
mov
hlt
push
push
ins
call
out
xchg
xor
imul
and
inc
and
jl
xchg
pusha
pop
pop
dec
push
test
(bad)
mov
in
adc
mov
dec
and
movs
in
(bad)
xchg
fwait
dec
loopne
push
or
mul
aam
lds
ja
or
out
pop
jnp
or
cmp
mov
rcr
loope
sub
jnp
fild
popa
btr
push
in
and
(bad)
mov
adc
mov
jae
iret
jecxz
repnz
xchg
cmc
xchg
jo
popa
movs
mov
xchg
mov
test
call
fs
mov
in
ret
push
scas
add
adc
clc
xchg
stc
out
idiv
sbb
pop
xchg
or
icebp
fisub
cmps
sti
cld
push
in
sub
pop
mov
in
mov
mov
out
pop
out
xor
cmp
jmp
out
(bad)
mov
sbb
pop
pop
inc
movs
push
push
inc
fwait
mov
mov
jb
adc
(bad)
inc
dec
add
or
sahf
mov
adc
adc
les
mov
add
and
icebp
jne
mov
repz
(bad)
xchg
sbb
lods
add
mov
arpl
sub
inc
pop
je
dec
lock
jb
mov
ror
fs
mov
add
fisubr
fcom
mov
dec
imul
jnp
sti
and
dec
sub
add
jae
xchg
mov
(bad)
adc
fwait
clc
jne
test
xchg
rcl
imul
jmp
sbb
mov
iret
jnp
adc
dec
jae
fcmovu
rcr
cmps
out
sbb
xchg
scas
fsubr
push
xlat
or
movs
(bad)
shl
int3
rol
mov
push
mov
push
shr
mov
jnp
hlt
dec
or
fucomp
out
adc
retf
jb
jl
adc
cmps
ret
in
ins
cwde
cmp
fsub
push
in
and
jp
mov
adc
bound
int3
pusha
cmp
mov
out
adc
inc
cmp
shl
lods
sbb
mov
xchg
dec
outs
xchg
pop
push
movs
mov
pop
pop
pop
dec
aaa
inc
xor
mov
sbb
loop
pushf
int
mov
jb
mov
cmp
bnd
call
sub
mov
lea
ss
or
stos
in
arpl
push
fsubr
(bad)
cmps
test
mov
int
mov
mov
mov
mov
or
dec
adc
mov
out
sbb
vsubsd
retf
jmp
adc
out
xchg
xor
sbb
dec
mov
pop
in
fstp
pop
or
push
xchg
add
or
mov
cld
add
push
pop
or
leave
(bad)
aas
out
or
pop
jle
mov
dec
hlt
cmc
loope
pop
inc
sbb
inc
sbb
bound
xchg
shr
cld
movs
in
lds
push
leave
mov
push
add
outs
mov
stos
xchg
call
cli
retf
xchg
fchs
rol
popa
cs
dec
pop
pusha
pop
jl
into
mov
mov
out
adc
out
jmp
fmul
inc
mov
jmp
fidiv
add
pop
(bad)
out
popf
push
dec
push
jle
test
popa
fbstp
ds
xor
in
xchg
xor
inc
stos
in
(bad)
cmp
or
jno
cmp
add
push
(bad)
bound
add
sub
jg
ret
hlt
(bad)
pop
(bad)
xchg
push
(bad)
aad
xor
xchg
mov
je
xor
cdq
add
mov
or
pushf
xor
lahf
cmp
mov
sbb
cdq
jmp
pop
add
ja
mov
dec
int
mov
daa
sub
call
ficom
lods
rcr
push
jmp
pusha
mov
or
aam
cmp
dec
lock
cmp
cwde
mov
mov
clc
test
mov
dec
push
dec
aaa
cmp
mov
push
fild
mov
mov
(bad)
jo
or
or
xchg
push
scas
stc
xor
xor
mov
fwait
xor
cmps
push
add
cmp
dec
dec
fisubr
dec
test
xchg
jbe
aad
int3
fist
icebp
sub
inc
pop
int
push
aad
xor
clc
add
imul
push
mov
pop
repz
arpl
test
push
xchg
in
neg
fisub
mov
push
iret
xchg
(bad)
retf
daa
ficomp
push
jnp
push
mov
push
adc
dec
xchg
pop
mov
and
int3
stos
inc
mov
push
ret
(bad)
sar
dec
or
cmp
stc
cs
sbb
sbb
clc
aas
shr
cli
add
ffree
pop
push
scas
retf
aam
mov
or
clc
fwait
nop
and
push
mov
sub
jg
retf
cmp
or
pop
shl
mov
jne
sbb
pop
popf
ficomp
hlt
push
push
inc
int3
bound
scas
xchg
ins
mov
call
sti
das
(bad)
fucomp
pop
hlt
push
mov
sahf
adc
mov
push
ins
add
or
sub
and
push
xor
mov
mov
jge
mov
cmp
dec
call
movs
lock
and
fist
add
test
or
xor
or
dec
or
fstp
dec
and
cld
push
push
jg
cwde
out
xchg
push
scas
xchg
rcr
(bad)
dec
(bad)
mov
jnp
lods
pop
adc
ret
pop
jmp
inc
adc
stos
jns
fisubr
std
or
bound
sbb
jmp
cmp
fwait
out
inc
retf
stos
push
or
lahf
and
rol
add
stos
das
inc
std
ror
inc
inc
rcl
and
out
(bad)
mov
aas
push
jne
mov
pop
and
adc
xor
mov
popa
lea
mov
add
cmp
shl
push
inc
int
gs
adc
pushf
pop
push
daa
xlat
sbb
aad
xor
mov
mov
es
bnd
add
cmp
(bad)
and
mov
std
cwde
or
sahf
xchg
xor
pop
mov
jne
ret
stos
or
outs
sbb
cli
add
mov
sub
mov
ss
scas
mov
into
gs
push
pop
mov
test
fstp
dec
in
cmp
ins
push
into
inc
mov
push
mov
mov
mov
int
push
or
addr16
push
mov
inc
jne
nop
and
outs
pop
adc
jg
mov
push
jmp
sub
outs
dec
cmp
arpl
sbb
mov
push
dec
repnz
jg
sbb
cmc
and
mov
shr
xlat
jecxz
hlt
mov
retf
add
daa
mov
add
dec
xchg
mov
push
sahf
das
pop
popa
je
sbb
inc
clc
jo
out
mov
mov
jae
sbb
test
imul
es
pop
and
cmps
rcl
mov
jl
out
mov
mov
shl
push
inc
cli
les
scas
mov
hlt
arpl
mov
mov
dec
rol
jae
and
test
loop
mov
daa
pop
add
clc
je
das
jae
aam
push
into
mov
mov
and
mov
or
xor
loope
xchg
push
xchg
pop
push
ins
sbb
dec
sbb
cs
not
dec
jns
leave
mov
sub
aad
shl
mov
inc
clc
pop
inc
cmp
sub
(bad)
xchg
out
sahf
jbe
(bad)
rcr
test
jno
icebp
cmp
iret
jmp
loop
retf
pusha
cmp
mov
push
rol
test
outs
scas
mov
push
pop
in
jg
(bad)
cli
fistp
adc
pop
inc
or
ja
xor
ja
int
xchg
jnp
dec
adc
out
nop
push
add
inc
std
inc
sbb
mov
adc
aaa
push
sub
ja
jbe
outs
and
pop
or
xlat
pop
push
jmp
jg
jecxz
gs
or
push
pop
cmp
loop
jmp
cwde
xchg
in
sub
push
mov
mov
(bad)
iret
sti
sbb
pushf
retf
mov
jge
rcr
push
sar
gs
js
mov
ins
pop
cli
(bad)
sbb
mov
leave
or
and
adc
dec
xchg
stc
push
imul
js
dec
in
repnz
pop
pop
push
mov
jmp
cmc
ror
loope
fwait
pop
jp
ins
test
sub
inc
lock
pop
sub
jo
sar
xchg
inc
mov
pop
push
inc
out
dec
popa
dec
fwait
retf
add
mov
icebp
dec
jg
sbb
jo
data16
test
jno
add
mov
fcmovnu
clc
push
mov
out
call
xchg
sub
dec
ret
mov
fist
jmp
dec
or
add
and
and
mov
in
loop
mov
inc
push
xchg
mov
mov
inc
sub
mul
and
sti
push
mov
ds
mov
out
into
xor
fidiv
pusha
imul
lods
xlat
mov
aas
pop
in
shr
aaa
ins
cmp
sahf
inc
inc
aas
adc
in
jle
jo
hlt
cmp
sbb
inc
clc
mov
lahf
mov
dec
cmp
mov
mov
dec
push
xor
iret
mov
mov
test
hlt
je
push
scas
dec
out
test
jno
fisub
jbe
add
mov
(bad)
mov
scas
loope
mov
mov
call
mov
ja
popa
cmp
out
in
mov
test
out
out
mov
lods
(bad)
loopne
push
not
or
xor
jmp
retf
(bad)
fdiv
jp
sub
pop
pop
outs
test
(bad)
cwde
mov
rcr
cmp
in
retf
scas
inc
out
push
add
cld
gs
pop
adc
aas
mov
or
ficomp
fcmovnb
xchg
mov
fs
mov
or
and
push
adc
cmp
mov
arpl
js
and
scas
rcl
add
js
add
sti
loope
xchg
pusha
dec
(bad)
mov
int
lock
rol
fbld
or
dec
ret
or
xor
dec
fadd
cwde
out
xor
inc
push
adc
stos
and
movs
in
push
mov
sahf
pop
and
out
mov
mov
mov
jecxz
cs
outs
or
pushf
jne
repz
mov
iret
inc
sbb
es
jno
pop
fcomp
imul
or
cmp
in
jbe
xor
mov
jne
and
das
cmp
or
ror
cmc
mov
ret
push
nop
popf
xchg
xchg
dec
jmp
add
movs
lahf
enter
xor
out
(bad)
ds
aas
mov
ficomp
cmp
pop
jno
dec
shl
inc
xor
out
cmps
std
sar
popa
mov
inc
es
sbb
call
or
jne
mov
mov
popf
and
fnsave
pop
fwait
iret
jnp
dec
sbb
in
in
sti
add
repnz
xor
lahf
cwde
(bad)
or
inc
xchg
xor
inc
or
mov
inc
mov
sbb
pop
mov
fstp
les
leave
in
jno
clc
xchg
ins
push
cs
(bad)
mov
ret
and
fmulp
mov
pop
adc
and
stos
aad
shr
push
lea
loope
out
push
xor
xor
cli
stos
lods
mov
repz
inc
lock
mov
xor
or
loop
and
mov
in
nop
gs
cmp
std
or
jmp
ds
idiv
lds
in
div
popa
inc
rcl
mov
dec
gs
inc
xchg
in
adc
cmp
jge
xchg
add
cmp
xchg
outs
and
sbb
mov
pop
sbb
or
jl
out
dec
ror
shl
push
aas
mov
in
cmp
pop
hlt
jb
(bad)
mov
pop
dec
or
sbb
jge
and
pusha
sub
jmp
mov
xor
ror
fldcw
jge
mov
ret
ffreep
mov
jmp
mov
out
fcom
mov
push
ret
cmp
jmp
scas
(bad)
aam
inc
ret
sub
xchg
cmc
sahf
inc
(bad)
test
sbb
xchg
ss
jne
xor
xchg
mov
mov
xor
fdivr
add
cli
mov
or
dec
stos
or
mov
jl
pop
mov
test
adc
adc
out
icebp
mov
int
xlat
xor
lock
cld
movs
mov
ret
xchg
and
add
or
jp
xor
sbb
push
out
aad
clc
ret
mov
inc
push
dec
xchg
rcr
or
sti
xor
mov
into
arpl
and
gs
fisubr
jb
(bad)
call
repnz
push
fwait
jle
cmp
pop
imul
jnp
jg
xor
into
sub
jb
ret
add
push
xchg
out
xor
and
rcr
mov
cmps
bound
sahf
xor
inc
out
add
cld
retf
fild
and
inc
pop
add
push
mov
adc
or
inc
repnz
mov
ret
mov
xchg
cdq
jmp
mov
cmp
(bad)
fnsave
dec
dec
jp
mov
hlt
or
jge
outs
ret
fs
push
imul
sub
or
fidiv
fcmovne
adc
jbe
lods
sbb
lods
inc
jo
adc
ins
div
fs
cld
mov
or
push
pop
xchg
inc
jg
xor
adc
pop
add
in
inc
fisubr
cmp
jp
or
add
jle
adc
lock
mul
sub
popf
cmp
sahf
(bad)
scas
lds
dec
jmp
pop
cmp
cmp
mov
out
cmp
(bad)
rol
mov
pop
jbe
test
setg
imul
das
scas
test
cs
pop
fist
jo
pop
push
and
sti
mov
in
pop
lahf
pusha
push
nop
or
xchg
mov
(bad)
xor
jnp
aas
xor
push
mov
jl
cmp
mov
and
retf
imul
sti
dec
adc
and
das
jo
fidiv
jl
loop
fbld
push
andps
rcr
mul
and
cli
cmp
xchg
in
cmp
(bad)
lock
xor
add
cmp
jb
sahf
repnz
mov
mov
in
push
(bad)
out
test
sahf
hlt
adc
mov
retf
mul
mov
adc
dec
pop
sbb
xchg
in
in
sbb
ret
sbb
push
aam
fst
fcom
outs
cdq
adc
icebp
or
or
mov
sbb
ja
push
imul
mov
(bad)
push
sbb
scas
stos
push
lea
dec
and
push
mov
mov
sbb
add
xor
add
dec
cmps
test
pop
or
push
(bad)
iret
mov
push
xchg
pusha
call
jecxz
lds
ins
jne
iret
fisub
aam
in
(bad)
and
cmp
rcr
jmp
out
dec
inc
fisttp
mov
int
adc
mov
dec
call
(bad)
cwde
jg
cmp
pop
push
cmps
stos
pop
add
lods
mov
sub
cwde
shl
mov
inc
out
mov
inc
popa
push
xchg
jg
jge
imul
and
xor
or
and
dec
int
in
rcl
pop
cmc
enter
jns
arpl
mov
aaa
into
loopne
mov
and
pop
loopne
mov
mov
int
add
mov
sbb
dec
jno
hlt
or
xlat
or
adc
test
aaa
retf
mov
pop
mov
js
sub
jmp
or
cdq
sbb
dec
pop
mov
push
sti
fcomip
mul
(bad)
dec
hlt
pop
dec
daa
ret
call
outs
sti
jmp
pusha
popa
in
jle
mov
xor
and
sub
ins
pop
sti
and
xchg
push
push
sbb
and
in
ret
cmp
lea
ret
cmps
add
xor
je
mov
push
add
dec
jno
in
in
and
push
(bad)
fmul
gs
cmc
std
inc
int
adc
test
loop
sbb
ret
rcl
sub
fistp
vmread
mov
mov
sbb
cmp
and
dec
data16
xchg
mov
lock
pop
dec
cmp
mov
jg
dec
jmp
mov
dec
inc
out
movs
sub
sub
cmp
or
pop
fstp
icebp
in
add
popa
xchg
push
jecxz
sub
and
ficom
add
mov
outs
pop
mov
xor
push
outs
daa
pop
pop
repz
adc
test
fs
pop
clc
mov
sbb
push
pop
pop
sbb
or
lock
xchg
dec
mov
xchg
xchg
adc
mov
cmps
leave
retf
outs
or
adc
cmp
ja
adc
ja
retf
daa
cmp
jno
push
clc
cmp
xchg
cli
or
idiv
or
cmp
mov
sar
cmp
ss
inc
inc
out
xor
enter
out
or
or
ins
imul
and
js
sub
in
mov
pop
and
xchg
cld
rol
add
test
jg
hlt
es
or
push
nop
add
inc
lods
mov
sti
adc
mov
(bad)
sbb
dec
pop
mov
lea
dec
xchg
sub
test
pushf
retf
sbb
dec
pushf
daa
rcl
loop
mov
adc
jmp
mov
(bad)
addr16
popa
or
fisubr
cs
ins
aaa
and
pop
imul
cli
sub
in
out
out
pop
test
inc
arpl
push
lahf
ficomp
sbb
lods
imul
push
les
push
push
add
stos
rol
sbb
out
lods
into
lock
inc
pop
xor
cld
mov
mov
fistp
jg
test
cmp
adc
ficomp
push
cmps
cmc
shl
mov
int3
cdq
add
call
pop
movs
sbb
call
push
xor
sub
(bad)
imul
adc
(bad)
arpl
add
cmp
fst
xchg
pcmpgtb
mov
aaa
xchg
stc
(bad)
cmp
jecxz
push
xchg
repz
pop
scas
aas
inc
lods
sar
jecxz
or
xor
cmp
lds
gs
adc
cmps
mov
cdq
adc
add
lock
xor
ja
sub
pop
jno
mov
outs
jl
test
jo
push
mov
out
add
dec
fld
mov
pop
stc
(bad)
shr
or
ds
xchg
test
dec
add
sti
jmp
popf
movs
dec
adc
stos
sbb
pop
scas
stc
mov
aas
mov
xchg
cwde
leave
dec
mov
and
jne
or
jmp
sub
xlat
xchg
jb
leave
dec
and
jge
test
and
inc
xor
cmc
xchg
and
pop
add
dec
xchg
loopne
popa
sbb
out
xchg
mov
rcl
or
xchg
mov
mov
and
push
mov
adc
aaa
scas
mov
cmp
out
mov
lods
in
xor
pusha
(bad)
movs
jmp
lock
jecxz
sbb
xchg
dec
or
jp
mov
aad
and
ja
sub
mov
mov
adc
movs
dec
fldenv
addr16
fist
xchg
cld
movs
or
sub
arpl
inc
fcom
arpl
cmps
stos
out
xchg
push
repz
push
daa
bound
js
xor
adc
mov
nop
pop
jbe
pop
jbe
xchg
retf
loope
retf
data16
mov
data16
mov
adc
dec
pop
or
add
rcl
test
enter
mov
out
je
cmps
adc
retf
neg
scas
xor
push
test
movs
and
cmp
sub
add
jmp
aam
push
(bad)
cld
jmp
jg
fnstsw
cmc
dec
mov
cmovno
in
dec
imul
jecxz
xor
xchg
push
ror
adc
add
out
dec
jmp
cmp
arpl
std
sbb
lods
jbe
adc
cli
std
jl
ja
(bad)
sub
retf
fucom
mov
cs
add
sbb
mov
pop
push
loope
fisub
sub
pop
jle
repnz
push
push
push
(bad)
jle
ins
int
ret
ficom
into
inc
retf
lea
fbstp
or
xor
pop
lock
bound
dec
pop
pop
lods
(bad)
aaa
mov
or
and
leave
or
scas
(bad)
es
xchg
and
call
fidiv
sti
and
dec
push
mov
jb
aad
test
into
push
bound
bnd
out
ja
mov
(bad)
cs
cmp
mov
sub
pop
repnz
dec
int
mov
xchg
dec
out
addr16
pop
fadd
movaps
gs
jne
call
repz
lods
popa
pop
and
gs
inc
fwait
push
adc
inc
push
ds
vmread
ins
cmps
in
lds
aaa
cwde
mov
or
popa
repnz
lods
jbe
xor
sub
mul
xor
in
or
pop
fs
jecxz
(bad)
push
push
dec
cld
dec
xchg
push
mov
mov
push
fwait
xor
xor
cmps
push
jns
jo
xchg
pop
sub
push
jmp
xor
push
or
push
jne
sbb
ret
cmp
stc
scas
gs
sub
mov
or
daa
xchg
sti
stc
ror
pop
cwde
shr
inc
and
fisub
mov
in
jecxz
in
(bad)
je
mov
mov
add
mov
dec
sar
scas
xchg
xchg
add
dec
cmps
pop
dec
push
stos
mov
lds
pop
fcom
hlt
pop
jnp
aaa
mov
stos
(bad)
bound
jno
xchg
or
adc
scas
inc
imul
(bad)
adc
inc
scas
mov
hlt
mov
ss
jns
les
cld
cmp
jmp
push
mov
pop
dec
ret
mov
(bad)
mov
test
jge
loopne
jmp
push
dec
add
into
(bad)
dec
in
and
push
retf
nop
inc
test
call
out
imul
data16
fst
xor
pop
dec
mov
sbb
cmp
push
jl
cli
stos
sbb
cmp
push
out
cwde
lods
popf
adc
jp
(bad)
into
mov
leave
leave
and
push
add
inc
push
push
push
or
test
fcmove
pop
ins
cmp
pushf
leave
jge
sbb
pop
inc
inc
in
xor
(bad)
pushf
call
mov
pop
lds
mov
or
pop
dec
shl
sub
and
or
cmps
jmp
cmps
pop
(bad)
movs
fidiv
test
out
xor
(bad)
xchg
pushf
ds
and
cmps
je
xlat
xchg
pop
fstp
fdiv
and
pop
and
push
in
and
les
call
jecxz
push
pop
popa
loopne
pushf
mov
xor
data16
inc
(bad)
shl
pop
int3
test
mov
jb
inc
ja
out
test
xchg
inc
cdq
outs
retf
clc
or
or
jns
aas
jecxz
and
mov
xor
sub
jmp
in
sub
test
jns
adc
inc
adc
outs
ror
sbb
sub
or
stc
test
enter
mov
and
xlat
out
pop
jecxz
add
xlat
lods
loope
pop
(bad)
ds
mov
ins
xchg
mov
xchg
ds
xchg
ret
sbb
(bad)
dec
out
adc
daa
push
aad
jo
or
ds
sahf
pusha
mov
pop
pop
hlt
cmps
push
(bad)
lods
mov
outs
repz
out
and
push
xchg
sub
call
sar
lods
pop
dec
pop
(bad)
test
es
aad
(bad)
jmp
dec
and
loop
sti
hlt
jo
int3
inc
iret
loopne
sub
and
mov
push
(bad)
or
xor
ins
scas
dec
shr
mov
adc
outs
push
or
adc
adc
loop
mov
and
add
mov
(bad)
shr
fadd
ret
jge
lahf
jle
inc
mov
jno
sub
fisttp
out
mov
and
or
jp
arpl
(bad)
retf
out
or
xor
sti
and
rcl
daa
dec
hlt
pushf
test
jmp
inc
movs
outs
test
jae
cwde
push
mov
mov
add
inc
call
mov
mov
ror
cmp
inc
adc
adc
in
cmp
xchg
fs
adc
jg
sbb
test
shl
sar
nop
das
mov
sub
mov
xor
ficom
nop
mov
pushf
adc
movs
int3
test
mov
lods
adc
hlt
mov
jp
jne
cmp
in
pushf
xchg
xchg
cmp
push
fnstsw
icebp
repnz
xor
repz
psraw
xor
inc
fucomp
arpl
cdq
or
adc
cmp
je
fwait
call
enter
stc
xor
and
mov
add
sbb
aas
cmps
jnp
mov
sub
movs
xchg
xchg
out
mov
ins
(bad)
gs
mov
jge
rcr
stc
mov
cdq
mov
movs
sbb
cwde
inc
adc
adc
pop
jp
test
rol
and
mov
cmp
mov
(bad)
lahf
scas
xor
jg
xchg
pop
xor
cmps
xor
push
sub
dec
mov
push
adc
add
push
mov
jno
xchg
adc
les
adc
leave
shr
inc
dec
cmps
out
adc
pop
stos
call
daa
iret
and
mov
mov
mov
or
mov
add
jno
shl
sub
xchg
leave
ds
xor
sub
sbb
pop
mov
mov
and
cs
or
pop
jle
sub
(bad)
or
sbb
inc
test
test
cld
lock
arpl
cmps
inc
add
push
movs
aad
mov
cdq
shl
sar
push
sub
dec
jo
outs
(bad)
adc
jb
pop
ffreep
pop
jp
and
enter
adc
pop
or
outs
adc
les
push
in
fist
stos
enter
arpl
adc
(bad)
push
sub
pushf
icebp
add
out
xchg
adc
(bad)
dec
cs
xor
pop
jb
test
mov
fild
jl
daa
or
mov
loop
clc
jg
out
(bad)
cmp
retf
mov
cli
es
das
push
shr
in
sub
pop
imul
xchg
xor
add
daa
in
jge
nop
push
aam
cmp
xor
pop
cmps
jmp
inc
fcmovbe
leave
stos
xor
sti
sub
scas
fcomp
pop
or
retf
fcmove
push
cwde
aaa
bound
(bad)
cwde
inc
jb
adc
jge
lods
mov
mov
add
adc
js
inc
into
jecxz
repnz
sbb
rcr
in
mov
add
bound
sub
jle
in
sbb
pop
scas
movs
mov
jle
aam
adc
xor
adc
(bad)
jmp
mov
mov
and
xchg
aam
sti
dec
dec
mov
add
xchg
imul
mov
mov
sub
mov
adc
inc
jecxz
cwde
mov
push
sub
shl
loope
ins
fwait
mov
jecxz
(bad)
push
in
repnz
adc
mov
fs
mov
push
push
ins
add
test
jns
loop
push
or
jae
inc
xor
popf
push
pop
aad
mov
out
add
pop
jl
leave
sbb
popa
and
into
mov
adc
jl
pop
mov
mov
repz
xor
mov
(bad)
mov
inc
cmp
adc
xor
and
dec
(bad)
push
xchg
mov
add
call
jae
call
push
daa
ss
push
in
fsub
jne
adc
loopne
imul
xor
mov
or
cmp
mov
mov
push
cmc
(bad)
ficomp
ins
repnz
push
push
adc
(bad)
xchg
add
jg
mov
aam
mov
ins
test
mov
movs
jne
adc
or
mov
hlt
repnz
jno
xchg
imul
push
rol
or
cdq
arpl
mov
fcmovne
mov
dec
rcr
jmp
ds
pop
dec
add
xchg
pop
and
cmp
add
aaa
nop
jecxz
and
(bad)
imul
out
je
es
outs
imul
mov
inc
mov
test
popw
push
jl
mov
std
cmp
(bad)
in
push
dec
jno
sub
(bad)
in
pusha
popa
imul
sub
jg
in
sbb
jle
inc
jecxz
sub
inc
xchg
cmps
inc
mov
and
jno
loop
cmc
sbb
sub
(bad)
push
inc
mov
scas
push
pusha
pop
push
pop
xor
inc
dec
jg
(bad)
fld
adc
mov
push
jg
(bad)
into
xor
cvttps2pi
xor
test
call
cwde
cmp
inc
cdq
mov
arpl
ja
adc
je
cmps
data16
jmp
dec
lds
push
stos
push
xchg
add
inc
xor
xlat
(bad)
mov
mov
stos
cli
fdivrp
sub
bound
push
lea
mov
adc
repnz
sub
mov
add
sbb
sahf
jg
fnstsw
push
movs
mov
sbb
or
mov
call
movs
(bad)
lock
int
in
pushf
shl
cmp
jl
and
test
call
jmp
rcl
mov
daa
mov
scas
fstp
sar
cdq
dec
pop
enter
mov
ja
cmc
push
dec
dec
out
cmp
out
inc
mov
scas
sub
push
jp
cli
sub
(bad)
rcl
jbe
or
pop
je
setno
and
push
push
xchg
mov
imul
pop
cmp
rcr
inc
(bad)
stos
or
aad
mov
xchg
ror
aaa
fadd
jns
inc
js
data16
sahf
jg
dec
jg
adc
xor
adc
fs
lea
stc
mov
cmp
inc
cmp
dec
mov
movs
fsub
xchg
rcl
cwde
sub
xor
shl
je
out
int
popa
call
mov
jge
out
xchg
push
dec
pop
mov
mov
fs
pushf
(bad)
inc
stos
shl
adc
cdq
(bad)
std
aas
loop
push
scas
xchg
xor
mov
fisttp
xlat
dec
sub
fwait
jo
mov
js
ja
sar
lock
in
js
sbb
outs
dec
mov
or
push
pop
in
rcl
pop
jns
(bad)
je
xchg
add
addr16
aad
stos
test
sub
xchg
pushf
inc
dec
mov
ss
push
js
scas
inc
mov
(bad)
loop
mov
jp
adc
sub
push
add
pop
aaa
and
adc
test
sub
imul
push
pop
stos
lock
jmp
fdiv
imul
push
ins
scas
aad
mov
or
jno
jb
inc
pop
cmps
cs
fild
xor
imul
arpl
pop
mov
repz
jno
inc
sub
test
stos
and
sbb
cmps
mov
mov
gs
into
dec
sbb
add
jno
cmp
faddp
xor
in
leave
inc
loop
and
ret
test
in
test
push
movs
inc
icebp
push
lods
mov
test
pop
dec
cmp
jecxz
jmp
gs
mov
sub
jns
outs
pop
dec
mov
pop
ss
sub
aad
cmp
fst
jb
imul
aaa
(bad)
out
jl
jg
cmp
fsubr
adc
or
out
mov
and
subps
and
add
mov
sub
cmp
fisttp
in
dec
ret
or
gs
ret
xlat
pop
mov
push
jecxz
daa
(bad)
cld
jmp
fiadd
es
mov
jo
jne
(bad)
sti
iret
sub
es
pop
and
add
dec
gs
pop
cmp
jecxz
xor
pushf
ret
xor
and
jns
ror
or
pop
pop
cdq
and
and
aam
ja
jnp
lods
jmp
(bad)
popa
mov
mov
sbb
addr16
xor
std
or
in
xchg
stos
je
test
jnp
out
or
cmp
ret
mov
pushf
popf
xchg
(bad)
enter
adc
jg
add
xchg
and
mov
imul
mov
les
mov
xor
jmp
inc
inc
(bad)
es
loop
push
mov
jle
imul
or
ret
loope
dec
in
add
mov
or
out
dec
dec
fsubp
xor
lea
lea
xor
mov
sbb
lds
test
rcr
es
mul
mov
pop
dec
sbb
test
cld
pop
cmp
aaa
jg
loop
fisubr
push
ret
push
mov
int3
dec
or
call
(bad)
cmc
pop
pop
sti
xchg
add
adc
out
sysenter
or
jmp
jecxz
mov
push
cwde
ins
mov
shr
sub
mov
dec
push
out
sbb
aad
xor
out
pushf
fstp
(bad)
mov
add
add
in
inc
and
mov
jmp
xor
mov
(bad)
pop
fcom
daa
jp
in
mov
and
mov
inc
pop
jnp
mov
aad
das
adc
adc
inc
loop
daa
inc
dec
out
push
sbb
inc
add
stos
inc
popa
mov
xchg
push
fsubr
xchg
dec
mov
(bad)
adc
sub
or
arpl
les
sti
loopne
dec
xor
mov
mov
inc
test
test
popf
fcmovnb
test
aad
and
ret
mov
cwde
jl
xor
retf
shr
sbb
push
sahf
mov
add
rcl
iret
xchg
or
xor
popa
push
mov
dec
loopne
outs
mov
mov
clc
pop
xchg
and
ss
dec
cld
adc
and
daa
hlt
cld
cld
fist
adc
mov
or
std
jno
inc
dec
(bad)
retf
xor
imul
push
cmp
mov
dec
or
sub
sar
cmp
call
call
inc
inc
push
fcom
sub
out
clc
dec
adc
dec
out
je
call
mov
les
stos
inc
dec
sar
lods
mov
lds
cmp
sahf
pop
xchg
fcomip
fs
pop
xchg
add
das
loopne
(bad)
in
movs
les
cmp
push
pop
mov
xchg
and
xchg
cmps
ficomp
out
mov
and
pusha
cmp
or
cmp
mov
ret
xchg
pop
mov
hlt
test
aam
fs
push
mov
leave
enter
xor
sti
lahf
out
pop
cmp
pop
fidivr
lock
(bad)
daa
inc
inc
and
adc
dec
inc
lea
or
dec
add
lock
mov
cmps
ficomp
bound
pop
arpl
cld
out
cmps
(bad)
inc
mov
ins
jecxz
pusha
mov
cmps
sbb
adc
call
and
add
push
test
push
test
call
hlt
loopne
pop
out
adc
out
mov
sbb
xor
or
cmp
jno
test
inc
cmp
pushf
out
aas
jbe
test
gs
mov
sub
cmps
jp
jae
push
jg
inc
clc
push
cmps
fwait
ret
dec
adc
aad
outs
mov
pop
leave
popf
push
popa
arpl
jmp
sbb
inc
(bad)
inc
ds
fst
mov
cld
addr16
jae
adc
imul
sub
retf
and
sti
inc
out
sbb
outs
mov
popf
cmp
xsha1
cmps
dec
push
xor
sbb
jb
fisubr
fld
test
mov
fwait
dec
ins
jno
fldenv
pop
sbb
int
pop
ret
and
dec
movs
cmp
call
adc
push
hlt
xlat
push
jae
cmp
or
xchg
enter
inc
jp
pushf
or
xchg
mov
call
fmul
in
outs
inc
enter
mov
dec
stos
adc
aad
mov
stos
pop
retf
jbe
mov
inc
in
mov
fidivr
jno
inc
stc
xchg
stos
pop
and
cmp
mov
dec
in
and
rcr
(bad)
test
imul
(bad)
lahf
es
and
bound
adc
scas
cmps
fild
call
dec
xchg
in
mov
(bad)
(bad)
and
out
test
adc
or
into
mov
xlat
das
iret
jae
push
ss
jge
adc
fdivp
shr
icebp
xchg
in
inc
sub
inc
mov
xlat
scas
movs
mov
pushf
test
jo
mov
jmp
push
inc
fisubr
fdivrp
test
push
test
mov
fsubr
in
or
jns
mul
das
loopne
push
or
ds
push
xchg
push
xchg
or
sti
inc
cmp
sub
mov
mov
inc
ret
bound
mov
dec
outs
push
push
add
mov
and
cmp
sbb
and
mov
sbb
rcr
push
out
out
je
cmps
adc
and
cmc
test
enter
push
mov
sub
cmps
jbe
enter
mov
ins
outs
jmp
push
dec
mov
enter
xchg
aas
push
stc
push
fmul
ins
xor
ja
cdq
imul
in
imul
ins
sub
push
outs
ret
js
dec
ins
scas
cmp
jecxz
push
aas
ror
fimul
xor
xor
xor
gs
adc
int
and
or
sub
arpl
jne
stos
push
cs
mov
mov
shr
inc
jl
xchg
cmp
and
mov
inc
jmp
and
xchg
das
sub
bound
ds
sub
push
clc
jno
dec
outs
sub
jb
sub
sub
daa
out
mov
fwait
lods
bound
repz
std
aad
cdq
rcl
xor
cmp
dec
std
jg
stc
cs
rcl
test
xlat
lods
and
fcom
adc
out
or
ror
fldcw
or
mov
pop
pushf
mov
jmp
pop
mov
enter
jg
cmps
inc
(bad)
in
push
and
iret
dec
rcr
(bad)
clts
outs
xor
and
(bad)
daa
jbe
push
xchg
sub
xchg
repz
mov
jge
loope
out
jg
push
mov
cmc
out
add
(bad)
sbb
mov
mov
pop
pusha
movs
and
push
mov
sbb
rcr
xchg
inc
mov
mov
mov
jl
int3
mov
hlt
pop
add
popf
ss
or
rcr
add
(bad)
jmp
stos
mov
fwait
(bad)
sbb
and
retf
push
js
mov
xchg
lea
mov
adc
int
ss
jle
(bad)
fiadd
sar
pusha
inc
cmp
push
and
cmp
add
inc
cmps
nop
popf
jecxz
jo
loopne
dec
add
or
inc
lock
dec
pop
ins
xchg
jno
or
push
imul
xor
jmp
dec
xor
(bad)
test
mov
iret
jg
push
dec
xchg
cmc
sbb
cmp
nop
dec
(bad)
retf
fidivr
cmp
mov
call
inc
rol
cld
out
cwde
repz
mov
inc
jbe
jmp
lds
fst
sbb
inc
sub
pop
fucomi
mov
cli
fwait
push
(bad)
lods
inc
ja
inc
fld
sub
stc
aam
aam
sbb
jmp
jg
or
loop
jne
fcom
xchg
lods
add
push
das
clc
aad
add
stc
pop
je
mov
ss
daa
pop
dec
pusha
lds
enter
rcr
or
add
inc
into
xor
mov
and
(bad)
into
sbb
int
scas
(bad)
xor
mov
sbb
icebp
ficom
mov
and
clc
aas
pop
repnz
les
adc
fnstcw
aaa
mov
push
js
(bad)
das
xor
sbb
dec
les
jae
mov
imul
jnp
push
clc
shl
daa
sbb
movs
sbb
adc
mov
mov
shr
stos
xchg
outs
sbb
add
push
movs
or
ds
push
out
test
stos
out
sahf
pop
test
xchg
xchg
(bad)
push
shr
sub
xchg
imul
out
dec
mov
les
pop
mov
stc
fdiv
pop
dec
mov
scas
xor
js
(bad)
pushf
es
jge
fbld
mov
popf
pop
xchg
add
push
ja
fcom
add
(bad)
idiv
jbe
jne
dec
ins
cwde
ins
ins
or
xchg
and
push
shl
sub
jmp
xor
mov
pop
ficom
sar
dec
dec
adc
push
arpl
sbb
ret
call
and
outs
into
(bad)
sbb
clc
repz
scas
push
add
adc
imul
pop
outs
ficomp
mov
mov
and
jae
mov
fwait
xlat
pop
dec
out
jae
rep
xor
push
iret
pop
adc
mov
inc
adc
dec
cmc
iret
jge
inc
xor
mov
sub
push
mov
sub
lock
(bad)
mov
or
jae
cmps
into
stos
jecxz
xor
push
test
or
push
fxch
mov
fild
sbb
clc
xor
push
xchg
ficom
test
ds
dec
inc
pop
fisubr
das
xor
leave
adc
xchg
jmp
es
(bad)
cmp
int3
stos
push
loopne
adc
out
sahf
fwait
cwde
xchg
push
out
fst
cmp
rcr
imul
lods
rcr
test
out
mov
out
dec
xor
and
or
stos
mov
mov
sbb
lds
push
push
push
ret
mov
mov
mov
pop
dec
retf
dec
ins
jb
aam
fisttp
xchg
cld
in
sar
and
mov
jmp
je
retf
jge
xlat
push
push
sub
add
dec
and
ror
das
push
stos
mov
xchg
or
enter
ins
xchg
push
movs
ret
xor
test
cwde
fs
scas
fsubr
mov
xchg
push
mov
mov
pop
sub
dec
adc
retf
cmc
mov
lea
pop
mov
adc
adc
cmp
xor
and
fsub
push
cmp
sbb
sahf
push
mov
es
lahf
sub
retf
fs
add
fnstenv
jnp
inc
push
ds
jge
dec
lds
pop
aam
cmps
mov
clc
lahf
retf
call
and
adc
cwde
mov
lock
pop
das
sub
mov
nop
mov
out
pop
sbb
out
sub
jge
cmp
addr16
sub
test
pop
ds
cmp
cwde
les
sbb
addr16
jbe
and
ins
xor
inc
jae
mov
in
test
jno
lahf
jns
xor
add
xchg
jp
push
dec
fs
dec
adc
jmp
mov
test
fstp
pop
push
jae
mov
add
mov
push
adc
out
movs
scas
cmp
mov
jl
sbb
sub
arpl
int
test
out
dec
mov
mov
rcl
sbb
lahf
cmp
popf
xchg
jae
add
popf
push
cwde
clc
or
jg
sub
add
cmc
push
in
pop
pop
inc
mov
inc
inc
mov
cmp
jae
lahf
mov
mov
icebp
setne
dec
out
cmps
fwait
cs
jecxz
fild
stos
(bad)
lock
inc
jp
adc
inc
test
out
jno
jl
push
lds
inc
test
into
cmp
call
call
or
lods
add
sub
mov
mov
int
ror
aam
jns
lock
imul
and
sbb
cmp
lahf
add
inc
cmc
loopne
mov
jae
jns
bound
jle
mov
movs
scas
outs
xor
push
sbb
and
cmp
rcr
repz
fnstsw
or
pop
xchg
jo
add
loopne
adc
dec
push
loopne
dec
push
xchg
inc
dec
mov
loop
cmp
push
stos
push
push
dec
inc
mov
add
test
cmp
retf
test
jl
pop
in
lock
lea
fwait
(bad)
test
xor
call
add
push
aaa
adc
fisubr
or
sub
les
xor
nop
ds
imul
sub
ret
jnp
jbe
fld
push
popa
pushf
fistp
(bad)
enter
lds
ja
mov
sbb
je
xchg
pop
jb
(bad)
in
pop
pop
jb
jbe
ret
stos
xchg
(bad)
jmp
mov
lods
cdq
ds
sbb
mov
push
hlt
and
push
jle
push
add
mov
lds
xor
inc
push
int3
scas
out
jb
jae
arpl
mov
into
inc
sbb
dec
lahf
jle
xor
xor
add
sbb
jbe
repnz
in
ins
pop
lea
je
data16
add
and
cmp
mov
out
dec
popf
aad
cwde
imul
push
push
hlt
movs
xchg
movs
pop
xchg
push
das
gs
lea
test
(bad)
retf
daa
sub
int3
(bad)
addr16
in
mov
cmp
jle
mov
leave
dec
jmp
push
sbb
(bad)
dec
bound
xchg
mov
jns
xor
test
inc
cmp
fs
jb
pop
jmp
push
pop
jno
pop
inc
dec
je
icebp
gs
ins
inc
xchg
repnz
stos
pop
and
mov
sub
mov
mov
xor
or
push
sbb
int
pop
mov
mov
adc
retf
iret
xchg
aad
xchg
xchg
jne
or
mov
shl
cmps
psubsb
mov
push
cli
xchg
das
mov
and
std
aas
xchg
add
inc
push
iret
js
mov
cmp
cs
aam
sbb
or
xchg
gs
adc
pop
ds
jge
and
cmp
dec
cmp
fsubr
leave
xor
icebp
and
out
mov
sbb
push
in
pop
movs
es
pop
inc
push
test
clc
adc
sub
(bad)
jb
sahf
add
push
inc
mov
cli
fwait
(bad)
jg
cmp
fnstenv
mov
lods
xlat
test
test
shl
pop
fwait
js
ds
mov
sub
xchg
adc
cld
mov
ds
es
(bad)
mov
in
jbe
test
fstp
or
xchg
bound
or
shl
dec
pop
lock
aam
cmp
sub
jbe
std
jmp
pop
stc
test
fcmove
jbe
sahf
clc
and
jns
test
not
enter
cdq
jae
adc
push
sub
adc
push
hlt
pop
jmp
jo
daa
call
sti
add
aas
jnp
dec
mov
xchg
sub
adc
xor
mov
pop
or
add
jb
sub
(bad)
xchg
mov
pusha
shl
retf
xor
push
inc
inc
rep
adc
jno
adc
jmp
cmps
xor
icebp
xchg
nop
mov
pop
xchg
inc
cs
xor
test
mov
js
xchg
data16
(bad)
sbb
xor
add
retf
pop
lods
loopne
sar
out
hlt
mov
inc
dec
jae
jmp
and
push
daa
and
xor
iret
jmp
outs
ret
popa
test
jg
out
mov
mov
mov
sub
mov
inc
inc
mov
pmuludq
cld
fisubr
jo
xor
repnz
popf
or
mov
mov
xchg
dec
lods
hlt
ins
out
int
mov
movs
out
and
jle
cmp
imul
std
push
push
loop
mov
aaa
push
in
push
inc
addr16
mov
or
ror
push
movs
xchg
lds
pop
push
ins
mov
mov
cs
ins
jmp
clc
movs
(bad)
pop
push
out
inc
mov
arpl
lods
ins
jo
call
leave
es
xor
jne
sub
adc
test
adc
push
shl
cmps
xchg
pop
cmp
or
inc
lds
jns
pop
mov
jle
test
inc
and
sub
inc
mov
push
(bad)
cmps
(bad)
fdivr
outs
pop
iret
mov
sbb
dec
mov
cmc
nop
call
push
sahf
std
dec
leave
mov
jecxz
call
xchg
sub
inc
imul
aam
mov
ret
cmp
mov
or
out
mov
cmp
adc
dec
loopne
push
sub
mov
ja
jle
lods
mov
mov
pop
inc
ins
cmp
adc
xchg
sub
stos
je
jae
retf
(bad)
js
sbb
and
sbb
cmp
add
add
xor
sub
mov
push
imul
mov
or
retf
push
add
and
sub
and
and
frstor
push
aad
out
es
mov
sbb
rol
jp
stos
imul
push
or
popa
(bad)
(bad)
push
call
je
jb
mov
jnp
ja
outs
ret
jns
or
retf
push
aam
cmp
daa
jle
add
mov
xchg
sbb
dec
xor
lods
jle
adc
outs
ds
repnz
mov
add
mov
js
adc
les
dec
in
xchg
jl
pop
mov
push
xchg
test
(bad)
cmp
loopne
sbb
scas
inc
in
add
inc
sbb
mov
lods
jmp
inc
pop
push
push
js
leave
inc
xchg
shl
pop
and
lock
xchg
sub
lods
xchg
loopne
nop
stc
js
pop
add
xor
push
dec
cs
jl
add
mov
push
inc
xor
out
xchg
gs
pop
ret
sbb
and
fdiv
daa
fst
cmp
xchg
inc
mov
ds
mov
sub
mov
imul
xchg
jb
call
adc
lock
fadd
dec
fld
clc
jecxz
xlat
inc
fild
retf
sub
sbb
pop
xchg
ffree
int3
mov
ret
xchg
adc
js
mov
pop
mov
int3
fidivr
div
stos
dec
hlt
sub
js
pop
mov
into
sbb
push
jns
call
jno
retf
and
pop
retf
push
loop
cmp
xlat
pop
clc
fcomi
push
dec
jno
enter
loope
hlt
in
int
push
sub
dec
and
(bad)
sub
add
addr16
in
(bad)
clc
pop
dec
pop
push
dec
pop
dec
mov
cmp
je
mov
jge
or
jmp
js
imul
je
cld
cmps
das
xor
cmp
bound
lahf
popa
cmp
mov
hlt
xchg
dec
ja
mov
clc
leave
xchg
enter
addr16
pushw
(bad)
mov
imul
shr
frstor
sub
xchg
shl
je
leave
lea
dec
push
inc
jmp
inc
cmps
adc
or
sbb
pop
sbb
pop
out
shl
(bad)
push
outs
in
pusha
push
nop
(bad)
push
adc
jo
sbb
sub
jmp
mov
dec
int3
ds
add
test
push
push
rol
cmps
lods
in
or
sub
dec
(bad)
jmp
cmp
cmp
mov
adc
dec
cmp
push
scas
fidiv
cmp
mov
movs
mov
jecxz
in
jnp
push
push
sub
mov
xchg
mov
mov
lds
mov
xchg
(bad)
xor
mov
mov
dec
cmp
scas
retf
push
jl
push
cmp
dec
ins
dec
loope
les
cmp
inc
fist
jmp
add
(bad)
pop
cld
ret
enter
loop
(bad)
push
call
or
sub
aam
mov
test
sar
pop
loop
dec
sub
fucomi
jge
inc
sbb
pop
or
mov
je
dec
fst
pushf
scas
ins
in
xchg
mov
dec
lock
dec
mov
test
xchg
outs
shl
or
imul
xchg
je
and
out
mov
xchg
mov
jnp
(bad)
mov
and
aad
push
add
and
shl
outs
or
and
mov
jb
pop
sub
ficomp
mov
(bad)
pusha
sbb
loope
mov
lea
jnp
fxch
jne
or
pop
bound
fisub
adc
xor
call
mov
sar
mov
int3
xor
jge
jmp
mov
int3
pop
jmp
mov
jmp
retf
sub
mov
scas
xchg
clc
lahf
xchg
xchg
and
lock
inc
add
dec
pop
repz
loopne
lods
sub
pop
pop
cmps
pop
dec
push
movs
add
adc
push
add
jne
rol
in
sbb
pop
repnz
fs
push
dec
xchg
fiadd
imul
xchg
aam
es
stos
push
pop
push
fdivr
cli
xchg
(bad)
jnp
or
sub
xchg
syscall
push
js
lds
pop
clc
pop
cmp
sbb
in
repnz
test
popf
fwait
arpl
push
gs
shr
jb
popf
mov
fdivr
push
pop
mov
push
cld
jle
lods
nop
rcl
fnsave
cmps
xchg
push
xchg
pop
rcl
or
out
stc
fisttp
jnp
das
call
mov
add
std
popf
aad
aad
cmp
xor
aam
xchg
fs
or
bound
xor
ja
adc
adc
shl
jge
push
clc
inc
inc
cmps
jl
sbb
std
sub
sbb
sbb
stos
sbb
jp
cmp
data16
cmps
movs
lds
out
jo
(bad)
ins
leave
leave
xchg
inc
push
test
lods
cmp
push
cmp
fimul
inc
inc
std
or
adc
aam
mov
mov
loopne
cs
add
add
push
cmp
add
add
adc
fnsave
adc
xchg
test
pop
out
loope
cli
dec
gs
shr
pop
(bad)
or
ret
adc
adc
in
jge
(bad)
jl
(bad)
nop
(bad)
call
sahf
repz
mov
and
inc
or
inc
es
fisubr
jl
cmp
aam
cli
sub
add
xor
ds
lods
sub
push
pushf
daa
(bad)
in
ja
clc
data16
scas
(bad)
out
mov
xchg
inc
pop
ss
dec
push
sub
(bad)
fmul
sbb
iret
jbe
popa
inc
push
sti
aam
push
ret
mov
cmp
add
addr16
lods
enter
cmp
lds
dec
mov
add
cmp
icebp
daa
rol
push
fs
mov
cwde
leave
pop
sbb
das
inc
(bad)
mov
dec
cs
adc
fldenv
popf
leave
adc
ficomp
dec
jbe
dec
pop
xchg
sbb
pushf
mov
cmp
push
int
mov
ror
repz
les
imul
iret
lds
mov
outs
xchg
cdq
and
cli
int
cmps
cmp
loop
daa
xor
and
push
pushf
test
in
dec
cdq
adc
enter
or
xchg
int3
sub
or
add
and
push
dec
pop
push
jnp
cli
xor
int
mov
fisubr
adc
test
adc
cmp
movs
or
loop
xchg
mov
dec
test
mov
lods
(bad)
adc
xchg
test
out
sar
ror
xchg
cmp
lods
repnz
push
cwde
jle
or
fwait
jb
ss
repz
pop
movs
sbb
mov
aaa
jg
dec
push
ins
sahf
add
aam
outs
and
or
pusha
mov
das
in
mov
mov
inc
mov
call
jae
in
push
movs
and
pop
pop
das
push
popa
retf
sbb
push
xchg
mov
push
vprotq
sahf
and
mov
xchg
in
loope
lds
dec
push
xchg
add
loop
in
add
out
push
pop
in
retf
sub
push
pop
dec
ds
push
lods
adc
mov
pop
xchg
push
mov
mov
mov
aas
stc
int3
inc
fidiv
cmp
mov
ret
push
das
mov
pop
int
adc
lock
jns
daa
add
cld
jae
mov
imul
daa
cmc
ret
adc
in
(bad)
ins
and
and
retf
push
pop
jmp
loopne
icebp
shld
xlat
pop
gs
push
adc
inc
test
repz
inc
fcomi
loop
into
mov
fnsave
test
bswap
in
mov
(bad)
and
and
ins
arpl
push
push
mov
pop
lahf
mov
dec
mov
xor
pop
xlat
and
pop
jmp
daa
xchg
icebp
xchg
and
jae
add
pop
mov
cmp
push
pop
sub
pop
cmp
dec
fwait
aas
iret
out
dec
shl
inc
test
inc
sar
rcl
mov
mov
xor
mov
add
fmul
stos
shr
jb
inc
scas
jns
(bad)
popa
mov
in
jns
outs
mov
push
mov
pop
loope
outs
pop
movs
pop
(bad)
push
and
sbb
jmp
pop
leave
ins
clc
xor
sahf
mov
cmps
jbe
push
adc
shl
stos
mov
push
xor
daa
xor
mov
iret
and
into
hlt
xchg
movs
push
lahf
inc
ins
xlat
mov
jne
push
push
cmc
sti
adc
mov
imul
(bad)
popf
pop
pop
and
sbb
loop
(bad)
jbe
xor
xor
rcl
mov
xchg
inc
cdq
iret
and
mov
fadd
fst
gs
pop
mov
mov
xor
sar
lods
mov
int3
pop
stc
sub
ja
aad
adc
dec
adc
xchg
scas
sub
mov
imul
xor
push
xor
jns
mov
cmps
setne
add
mov
dec
push
stc
and
fisub
mul
js
(bad)
pop
push
adc
ror
out
xor
mov
push
xor
ror
loopne
std
in
(bad)
mov
fisttp
into
inc
not
lar
xchg
sub
hlt
sbb
fisubr
outs
xor
aam
mov
fmul
mov
in
in
shl
dec
fnsave
add
mov
cmps
pop
dec
add
xchg
xor
ins
fisub
mov
(bad)
retf
div
push
jg
loop
sub
das
xchg
stos
mov
ds
pop
cmps
addr16
push
xor
fs
push
ss
push
popa
test
mov
lds
cmp
std
or
mov
ja
cs
js
cmp
ins
xchg
mov
jo
test
pop
les
out
or
mov
ins
addr16
fwait
shr
jo
sahf
call
cmp
mov
fist
test
and
cwde
jne
jb
pop
in
jno
test
rcr
leave
mov
cmps
inc
mov
push
push
or
cdq
cmp
fbld
hlt
shl
inc
sahf
dec
xchg
daa
jecxz
inc
out
cmp
inc
cmp
mov
hlt
(bad)
or
pop
inc
inc
je
out
ins
push
int3
push
scas
jb
mov
movs
cmp
neg
(bad)
sti
cmp
jl
and
cdq
repz
mov
push
cli
hlt
mov
mov
mov
sbb
inc
push
push
fisub
xchg
aaa
inc
inc
xlat
arpl
scas
sbb
ja
adc
test
mov
mov
sbb
push
mov
jecxz
shl
hlt
push
mov
mov
jle
sbb
fcom
loope
and
adc
xchg
jo
sub
xor
mov
(bad)
xchg
jo
adc
mov
ins
cmps
mov
sbb
mov
inc
pop
fmul
and
inc
outs
xor
outs
jnp
and
(bad)
outs
sbb
push
retf
mov
xor
sbb
mov
push
out
dec
adc
and
lods
fld
cmp
iret
inc
xchg
mov
jo
mov
xchg
call
fnstenv
mov
mov
cs
sbb
jo
(bad)
fmul
mov
imul
mov
inc
mov
ss
mov
pop
mov
aaa
retf
daa
test
cmp
test
push
enter
mov
pop
pop
(bad)
cs
mov
loopne
sub
lods
or
push
sub
in
mov
jnp
push
jns
xor
dec
inc
jne
sub
pop
imul
cmp
(bad)
ret
loop
and
(bad)
xor
push
pop
addr16
dec
das
(bad)
outs
sub
push
xchg
sub
gs
mov
sar
sub
into
aad
call
gs
inc
retf
inc
adc
cmp
shl
pusha
or
jmp
mov
add
test
or
xor
gs
push
adc
sub
nop
loope
js
sahf
dec
mov
pop
xor
out
jne
neg
push
inc
cmp
pusha
gs
sti
mov
dec
jg
add
scas
sbb
push
or
aad
sub
in
ins
and
mov
(bad)
inc
add
xchg
cli
sub
retf
xchg
test
fcomp
shl
mov
mov
test
cmp
dec
cmp
es
push
sub
call
ins
(bad)
leave
cmp
fisubr
pop
adc
sbb
xor
sar
xor
xchg
mov
lds
mov
out
sbb
cmp
mov
xchg
hlt
dec
and
movs
ja
lahf
scas
mov
in
(bad)
adc
xor
cdq
ficom
shr
rol
mov
imul
mov
cmp
fmul
test
popf
xchg
aam
into
das
out
inc
jmp
jl
ins
in
fnstsw
inc
sbb
inc
int
push
btc
jmp
addr16
inc
je
adc
dec
jle
imul
pusha
ins
pop
jnp
daa
hlt
xor
mov
cmp
push
lods
mov
ret
add
into
push
dec
int3
gs
lahf
and
popa
pushf
in
add
hlt
ds
lahf
mov
test
out
pop
or
icebp
fstp
xlat
ret
stos
hlt
ss
push
repnz
ins
mov
call
(bad)
daa
or
xchg
add
dec
inc
mov
add
out
sub
bound
cmp
repz
mov
add
lds
sbb
fist
jge
shr
ror
mov
add
in
cli
xor
mov
add
mov
sbb
jmp
sbb
xchg
scas
movs
scas
cmp
into
mov
lods
push
fcomp
dec
adc
rol
jmp
xchg
push
cmps
jb
pop
adc
enter
bound
sti
add
or
ret
sub
(bad)
fdiv
lods
(bad)
icebp
add
iret
call
ins
into
std
scas
mov
and
pop
je
mov
mov
push
inc
into
int
mov
and
lahf
push
icebp
loop
dec
pusha
div
add
(bad)
cmp
jns
cmps
pop
sti
sar
(bad)
fsubr
mov
outs
inc
movs
lahf
adc
pop
in
mov
pop
mov
pop
enter
mov
inc
movs
cmp
sbb
shl
nop
inc
(bad)
ja
cmps
xor
test
xor
sub
scas
js
xchg
nop
je
xor
and
out
test
shl
scas
icebp
(bad)
scas
test
cmps
fnstcw
mov
mov
rcr
dec
adc
adc
test
dec
dec
inc
mov
fcmovnu
adc
fucomi
aas
(bad)
data16
sbb
int3
mov
push
sbb
cli
pop
jmp
jbe
out
xchg
(bad)
cmps
add
fucomp
jnp
and
test
cli
push
leave
repz
scas
jae
clc
push
mov
es
mov
popa
xchg
popa
jae
add
test
pop
or
mov
push
(bad)
mov
dec
in
adc
and
mov
out
imul
jne
fst
and
dec
test
jl
sbb
cmps
call
mov
out
test
(bad)
mov
mov
mov
pusha
push
mov
and
jmp
das
mov
arpl
das
pushf
mov
outs
bound
jb
jle
fwait
ins
pop
or
sub
fisttp
pusha
mov
add
les
push
pop
lods
pop
xor
adc
into
test
cmp
ss
dec
pop
je
push
push
or
inc
idiv
js
dec
xchg
sub
sbb
in
push
dec
lahf
jns
dec
sub
cli
or
jno
sub
(bad)
xor
int
xor
cmp
jmp
stos
sub
jle
fild
outs
push
mov
push
mov
pop
or
popf
retf
bndldx
js
repnz
pop
push
rcl
mov
aaa
add
cmp
pop
rcr
xchg
or
stos
lods
pop
and
xlat
xor
adc
pop
loope
imul
dec
cli
jmp
(bad)
dec
aam
cld
iret
xchg
add
xor
fwait
mov
shr
adc
mov
out
mov
mov
cmp
das
xlat
pop
cmps
jb
cmps
jmp
test
mov
mov
xor
adc
cmc
jmp
into
jecxz
sahf
iret
(bad)
mov
cmps
push
add
xchg
sub
cmc
mov
bnd
inc
icebp
addr16
add
adc
add
dec
stos
shr
movs
loop
pop
out
cmp
and
mov
or
dec
push
std
test
inc
dec
xor
ficom
stos
inc
in
icebp
mov
adc
clc
mov
pop
loop
push
retf
les
mov
repz
add
sbb
jmp
cmps
pusha
ret
iret
lahf
adc
mov
sbb
xor
pop
into
ss
(bad)
sbb
sar
adc
retf
retf
and
or
and
pop
jp
sbb
push
xchg
dec
retf
xor
inc
push
cmps
push
jp
ja
cwde
mov
mov
push
pop
in
mov
es
or
ja
sbb
inc
sbb
sub
push
xchg
cld
repnz
jae
addr16
lock
call
add
enter
ins
or
sbb
adc
jmp
(bad)
push
push
mov
adc
sar
xor
sbb
sbb
lahf
push
mov
cmp
movs
pop
dec
imul
aaa
push
pop
mov
sar
cdq
adc
test
retf
fist
add
mov
cld
outs
clc
aaa
mov
das
mov
data16
dec
xor
add
sbb
lahf
adc
add
mov
push
(bad)
test
test
in
xchg
fs
fs
mov
aad
stos
hlt
jle
push
stc
int3
(bad)
and
stc
xchg
jnp
cmps
jno
fistp
pop
and
loopne
xchg
movs
fcomp
inc
fwait
sub
repz
jg
movs
mov
loope
adc
mov
lods
fld
rol
mov
sti
xlat
mov
add
retf
mov
in
xor
(bad)
cld
and
pushf
and
cmps
nop
loopne
and
mov
inc
jb
sub
pop
(bad)
rcl
stc
pop
xchg
inc
sub
jns
dec
pushf
xor
aam
sub
sub
rcr
dec
dec
push
push
aam
ror
lods
(bad)
pop
dec
ja
mov
jae
add
xchg
push
retf
aaa
mov
fistp
cmc
pushf
jo
mov
cmp
retf
add
and
add
(bad)
jb
in
cmp
sub
imul
adc
stc
push
nop
adc
adc
cwde
scas
push
ins
pop
int3
stos
call
jecxz
and
leave
cmc
mov
jge
sbb
xor
jg
inc
push
xor
stos
loopne
xchg
push
out
mov
jmp
xor
inc
jecxz
sub
mov
inc
sbb
aaa
outs
sbb
lock
push
lods
adc
outs
imul
jne
adc
adc
jle
pop
mov
out
or
xchg
out
scas
push
rcl
icebp
ror
movs
push
dec
mov
lods
xor
(bad)
icebp
out
jns
dec
lods
ss
daa
mov
push
cdq
push
ds
outs
nop
dec
dec
scas
enter
in
aad
(bad)
push
test
mov
cmp
gs
sbb
xchg
and
jne
jno
pusha
or
mov
jns
mov
shr
pop
pop
xchg
push
outs
icebp
shl
out
mov
inc
jns
test
mov
fdivr
mov
mov
sbb
mov
out
je
aaa
out
aam
xchg
push
jbe
or
mov
lahf
jle
jmp
add
mov
lea
mov
sbb
push
pop
push
add
jmp
and
scas
push
and
sub
mov
cmp
cmps
cmp
cwde
inc
std
fwait
icebp
dec
xchg
es
sub
loopne
fcom
test
into
dec
out
movs
mov
cli
cld
in
lea
mov
jnp
xchg
cmp
in
outs
stos
mov
cmp
call
movs
repnz
imul
lods
clc
in
jge
lock
add
jp
and
jmp
mov
in
cmp
push
iret
in
(bad)
aaa
int3
push
xchg
and
(bad)
jmp
jb
popa
xlat
shl
int
repz
mov
sub
fnstcw
rcr
mov
fstp
fwait
ins
test
mov
ins
push
add
mov
mov
imul
mov
lods
repnz
(bad)
aaa
mov
mov
call
pop
inc
(bad)
xchg
jmp
push
pop
int
mov
(bad)
xchg
sar
inc
mov
icebp
popf
test
(bad)
mov
add
out
sbb
popf
sbb
lock
(bad)
outs
fcomp
mov
jp
shl
jbe
mov
ret
pop
dec
sbb
dec
cld
sub
jnp
loope
cld
cmp
cld
xchg
shl
mov
cdq
inc
dec
mov
pusha
push
ins
add
xor
out
sti
mov
mov
cs
jno
pop
mov
lahf
xor
mov
sub
fisttp
xlat
(bad)
fist
and
call
movs
push
icebp
shl
xchg
fdivr
fldcw
test
push
pushf
leave
or
ins
or
add
xchg
fdivr
jp
mov
outs
and
rcr
int3
mov
mov
add
push
xor
aam
mov
dec
push
int3
xchg
pop
sbb
jge
and
push
div
jb
out
mov
iret
lods
push
leave
aas
cmp
cmp
jnp
loop
xchg
int
cmp
inc
jmp
into
cmp
test
xor
arpl
dec
shl
jo
and
int3
lea
inc
cli
lods
pop
xor
imul
js
and
lods
dec
and
aas
push
pop
addr16
cld
shl
repz
data16
cmps
inc
call
sub
int3
cdq
mov
jo
dec
xor
add
adc
and
fsub
add
mov
in
push
mov
pop
and
mov
cmp
sbb
popf
shl
xchg
mov
xor
out
push
inc
(bad)
scas
std
call
das
sub
xor
(bad)
cld
loopne
fdivr
rcl
push
cmp
icebp
std
repz
aad
dec
aaa
lock
loopne
inc
movs
push
mov
ret
pop
leave
ror
pop
mov
jge
mov
cmp
mov
ins
xchg
and
ret
lock
sub
aaa
push
mov
inc
add
out
xchg
xor
xchg
icebp
sbb
xchg
repz
imul
mov
jp
in
adc
mov
lods
mov
jp
loope
test
mov
xor
jbe
mov
cmovae
sub
or
or
xchg
inc
call
stc
je
add
and
sub
mov
dec
imul
pop
nop
cld
mov
or
jp
pop
cmp
dec
jl
cmp
scas
xor
jl
rol
nop
add
jg
mov
jecxz
lods
xchg
ret
lods
sar
inc
lods
mov
int3
aam
div
movs
mov
mov
mov
adc
retf
mov
mul
(bad)
cmp
or
loope
add
aaa
dec
sbb
inc
neg
shr
mov
dec
lods
ss
sub
adc
call
adc
sbb
jb
jnp
and
outs
icebp
fwait
in
push
arpl
stc
jl
(bad)
rcr
std
add
fisubr
fstp
out
pusha
data16
add
adc
mov
call
push
addr16
fwait
mov
lock
xor
in
or
arpl
fwait
add
inc
cdq
enter
xchg
aas
sub
mov
push
sahf
cmp
ret
inc
(bad)
xor
je
and
imul
sub
xchg
out
pushf
mov
inc
and
xchg
push
mov
xchg
xchg
ret
ja
push
mov
outs
mov
dec
call
das
test
leave
jno
adc
mov
inc
push
mov
cwde
xor
sub
jmp
stos
retf
test
mov
mov
fild
test
out
or
mov
sub
xor
jno
retf
xlat
xchg
sbb
call
push
jmp
js
sub
cwde
pop
mov
push
(bad)
aas
fsub
cmc
jecxz
mov
xor
xchg
mov
stos
push
mov
xchg
inc
xchg
push
xchg
je
jle
repz
add
push
jecxz
and
addr16
in
ja
jb
mov
inc
out
fstp
push
xchg
jmp
add
dec
repnz
je
imul
(bad)
xor
ret
mov
aas
jmp
add
jp
sub
mov
xchg
imul
push
add
adc
ret
pop
sbb
push
mov
dec
sbb
dec
pop
inc
sar
jbe
jne
dec
adc
push
repz
in
xlat
xchg
adc
push
pop
inc
sbb
jle
nop
dec
push
in
jbe
xor
inc
hlt
call
add
in
xor
and
cmp
(bad)
push
xchg
mov
psrld
inc
ret
setns
in
call
adc
cmps
retf
aad
dec
jno
adc
mov
or
sbb
imul
fsub
xor
or
push
call
jne
add
jo
adc
rcr
xor
jle
call
pushf
(bad)
aaa
cmc
shr
jmp
(bad)
cmp
xor
or
cwde
jge
xchg
jle
outs
pop
mov
scas
sub
pop
(bad)
push
xchg
push
pop
mov
cmp
aaa
mov
sub
loop
pop
sahf
jmp
retf
adc
jp
jp
xor
lahf
mov
sub
jge
push
or
neg
cld
stos
fild
ins
push
iret
test
arpl
idiv
les
shl
or
and
stc
or
xor
outs
jge
rcr
aad
clc
mov
in
jb
arpl
ins
add
lods
scas
cs
shr
pop
or
int3
popf
retf
inc
jbe
pushf
out
and
lock
or
je
dec
je
out
push
jmp
push
pop
cs
bound
add
pop
mov
or
enter
mov
mov
les
dec
push
pop
(bad)
rcr
or
fs
xlat
ret
jae
jnp
ror
stos
or
sub
shr
enter
loop
fisttp
xchg
(bad)
dec
adc
inc
lods
add
dec
pop
mov
push
jb
adc
or
test
movs
hlt
jmp
(bad)
push
xchg
xchg
jbe
xlat
jmp
jmp
out
push
jns
xchg
cmp
outs
inc
popf
cmp
test
cmc
lock
jno
ja
push
popa
adc
test
dec
cmp
outs
mov
into
das
fwait
addr16
fild
or
aam
and
loope
dec
xchg
fmul
dec
test
and
and
mov
imul
ins
sbb
sbb
dec
retf
sub
mov
mov
or
mov
xor
(bad)
mov
push
lds
frstor
rcl
enter
ja
rol
pop
and
outs
movs
jnp
jmp
mov
dec
or
push
push
paddusb
xchg
mov
mov
cmp
sub
sbb
in
push
mov
shl
push
cmp
dec
into
and
xchg
mov
test
jns
or
sbb
add
stos
pushf
xchg
cld
xchg
stos
xchg
sti
je
sti
cmc
jo
addr16
add
das
leave
sbb
cvtpi2ps
in
cmp
clc
mov
pop
test
addr16
jne
retf
imul
pop
push
or
mov
dec
pop
out
scas
mov
and
adc
jle
sub
mov
jno
mov
call
jmp
adc
cmp
adc
mov
push
sbb
add
scas
or
inc
cmp
bound
dec
lea
and
mov
out
xchg
scas
rcr
jae
sub
mov
and
mov
mov
mov
cmp
mov
in
push
sbb
ds
mov
xchg
in
push
pop
jecxz
les
xor
pop
enter
xchg
into
inc
icebp
cwde
pop
mov
add
jmp
push
out
sbb
test
xchg
mov
inc
mov
jecxz
idiv
aaa
mov
mov
or
cmp
and
jmp
inc
addr16
cwde
out
scas
int3
mov
jne
inc
js
int
xor
repz
sub
hlt
sub
test
nop
loope
or
jae
xlat
je
push
sub
inc
(bad)
into
imul
rcl
lds
jnp
clc
je
push
mov
call
and
nop
enter
mov
test
ja
in
aaa
sbb
add
pop
adc
leave
aaa
jmp
pop
cmp
mov
mov
mov
sub
pop
jmp
sti
jnp
movs
pushf
jno
rol
std
pushf
ror
fs
inc
jge
jmp
mov
jmp
add
outs
cdq
das
pop
out
outs
lock
das
stc
push
inc
je
sbb
ja
sub
ins
(bad)
jecxz
lahf
sub
outs
enter
and
push
cli
ja
push
js
aaa
pop
pop
ds
mov
or
mov
movs
push
pop
mov
mov
lods
out
adc
idiv
mov
or
sub
inc
scas
mov
inc
js
movs
sahf
call
call
repnz
cmc
pushf
iret
imul
retf
ins
imul
outs
sbb
mov
sar
mov
out
mov
jns
rcl
and
push
xchg
or
fstp
mov
pop
or
sbb
clc
mov
rcl
movs
xchg
cmp
mov
outs
mov
push
push
out
loope
sub
add
adc
das
fnstenv
dec
dec
xor
mov
fimul
xor
js
aaa
mov
iret
jne
mov
sub
(bad)
neg
(bad)
mov
ja
sar
cmp
mov
xchg
shl
xor
sbb
push
sbb
mov
(bad)
in
push
mov
in
sti
xchg
or
pop
mov
xor
push
adc
sub
cmp
mov
jmp
lea
dec
aaa
xchg
mov
mov
scas
dec
cli
fadd
cwde
repnz
jge
or
in
adc
and
sbb
push
lahf
push
push
cmp
mov
sbb
not
and
mov
push
adc
repz
xchg
and
clc
loopne
xor
aas
retf
lock
mov
ins
push
gs
pusha
xchg
pop
mov
or
adc
xchg
dec
inc
pop
adc
add
pop
ss
(bad)
int3
jmp
jns
sub
(bad)
imul
ins
rcr
pop
ret
mov
les
movs
jmp
icebp
xor
mul
adc
pop
bnd
dec
or
loope
and
or
sub
scas
ss
sahf
fisttp
adc
pop
rcr
inc
sub
loop
sbb
stos
cdq
xor
cmp
xchg
and
lods
mov
outs
dec
out
add
pop
pop
add
cmp
shl
mov
and
enter
push
mov
cmps
loope
pop
stc
jnp
fcom
inc
arpl
and
cld
inc
std
data16
jle
mov
inc
sub
sub
mov
outs
mov
xor
cmp
jle
mov
mov
push
mov
data16
jno
test
dec
dec
push
mov
cmp
das
cdq
adc
(bad)
xchg
or
mov
repnz
push
iret
sbb
mov
mov
inc
mov
bnd
inc
int3
test
(bad)
pop
aad
xor
or
imul
int
fidivr
sahf
pop
or
(bad)
and
mov
std
out
cld
ins
fwait
popf
fbstp
gs
retf
cmp
pop
div
cmps
dec
xchg
xlat
push
pop
imul
fild
fwait
ret
pop
gs
int
loopne
cmp
adc
add
sub
pop
jecxz
bound
jge
lods
xchg
pop
call
inc
sbb
mov
loop
sub
stos
xchg
mov
retf
aaa
jo
adc
cs
retf
(bad)
mov
pop
push
lea
icebp
popf
and
xchg
inc
sub
xor
mov
xchg
(bad)
push
movs
push
or
lahf
rol
inc
dec
push
(bad)
push
outs
mul
inc
sbb
cmps
add
jl
jmp
retf
fidivr
pop
(bad)
into
sub
imul
and
aas
add
cmp
dec
jns
push
aad
bound
mov
sub
shl
test
adc
mov
mov
mov
ftst
cmps
loope
pop
ss
adc
int
or
stc
sbb
cmp
outs
and
fxch
and
mov
repnz
jge
sahf
xor
jl
sbb
loopne
sub
retf
xchg
push
fidivr
adc
push
dec
jp
fs
and
(bad)
mov
mov
inc
push
push
adc
mov
jbe
ds
aam
call
xor
and
aad
xor
ds
(bad)
sbb
lods
ss
into
push
pop
shl
push
cmp
mov
clc
pxor
xor
push
xchg
mov
xchg
lods
mov
clc
sar
or
das
cmps
inc
ins
call
or
ds
pop
in
out
arpl
cdq
or
push
xchg
mul
xchg
dec
in
lahf
dec
pop
inc
int
clc
fcom
in
(bad)
out
add
data16
nop
sub
out
fdiv
hlt
jl
sti
ret
push
add
mov
dec
xor
popf
dec
mov
pmulhw
out
pushf
pop
cmp
mov
sub
out
push
add
jnp
mov
scas
sbb
out
out
xor
inc
test
(bad)
das
pop
xor
mov
and
out
cmp
xchg
movs
inc
cmp
lods
dec
fcom
ss
mov
add
dec
in
inc
jb
jmp
push
stos
loop
call
cmps
jmp
daa
test
pop
loopne
aad
sbb
aaa
xor
jecxz
in
imul
int3
test
mov
push
loopne
or
pop
pop
iret
push
in
loopne
mov
sar
jle
sbb
pop
mov
shr
imul
dec
or
sbb
ja
adc
sti
mov
xchg
ins
stos
push
cmps
stos
int
inc
out
int
adc
fcmovnbe
sub
xchg
cmp
je
sahf
jg
and
or
jnp
cli
mov
xor
out
(bad)
cmp
lods
gs
sbb
es
xor
retf
fisubr
out
xchg
fld
dec
shl
popa
mov
shr
pop
mov
mov
(bad)
jl
popf
mov
jg
rcr
xor
outs
shl
add
rcl
jmp
mov
cmp
cmp
pushf
mov
call
push
ja
mov
jmp
pop
cmp
std
jb
mov
lea
ret
add
shl
cmps
mul
cmp
sbb
mov
sub
rcr
dec
mov
jle
repz
leave
jbe
std
jmp
jns
mov
dec
push
pop
test
sbb
dec
fs
sbb
test
push
dec
mov
ds
icebp
enter
call
mov
mov
lahf
adc
jb
mov
and
icebp
sahf
sbb
xchg
out
cmp
cmp
addr16
push
jg
inc
out
fdiv
call
imul
pushf
(bad)
cmp
dec
enter
mov
mov
out
mov
stos
out
add
ins
sub
adc
sub
push
fbld
ins
push
cs
(bad)
push
scas
cmc
(bad)
sbb
repnz
push
dec
or
ins
js
push
repz
mov
popa
pop
mov
xchg
addr16
mov
sbb
pop
sbb
inc
shl
pop
push
cld
(bad)
jb
push
sub
or
or
fwait
ins
ror
out
out
sub
push
ins
loop
inc
jmp
mov
mov
test
sbb
out
push
or
pop
adc
sub
icebp
aam
lds
xchg
ret
dec
stc
loop
sub
mov
pop
pop
cmp
sar
and
push
mov
pop
call
or
pop
jne
xor
call
mov
cld
(bad)
out
add
loope
inc
pop
pop
or
rol
test
xchg
sub
jle
cmc
clc
xor
outs
adc
and
sbb
cmp
xchg
mov
sbb
rcl
push
cmp
jmp
xchg
mov
xor
cmps
jns
cmps
sub
out
xchg
mov
push
fsub
fnstsw
cld
sbb
or
das
dec
(bad)
jo
and
jns
fld
retf
iret
pop
pop
into
leave
dec
sbb
mov
inc
(bad)
sbb
and
xchg
or
jo
fs
push
imul
push
je
pusha
in
xor
sbb
xchg
mov
test
sub
fild
retf
dec
dec
push
inc
enter
out
ret
fnstenv
loope
push
movs
lods
pop
push
mov
jmp
cmp
mov
and
push
and
mov
cmp
mov
xor
add
ret
mov
cmp
retf
xchg
push
and
loope
add
cmp
mov
(bad)
mov
inc
pop
pop
fsubp
pushaw
imul
imul
inc
pop
mov
(bad)
xlat
mov
inc
jne
xlat
call
xor
dec
imul
cmc
fsub
pushf
jmp
je
cwde
jmp
xchg
jmp
imul
inc
pop
out
inc
pop
cwde
popf
stos
pop
div
pop
pop
neg
pavgw
pop
imul
mov
inc
(bad)
in
dec
ins
jns
cmps
retf
pop
addr16
mov
jns
rcl
outs
shl
ja
test
cli
dec
jbe
out
cmp
(bad)
xchg
sub
sub
movs
out
push
popa
mov
xchg
push
jno
sub
add
into
sub
cmp
inc
movs
jl
fmul
cmp
loop
mov
add
enter
fcom
scas
clc
lods
jl
pop
das
dec
add
aad
sbb
pop
adc
mov
pop
pop
call
shl
fldenv
mov
dec
cs
sbb
pop
push
xchg
xor
mov
test
mov
xchg
iret
jg
dec
lods
xor
dec
mov
inc
pop
inc
fdivr
fiadd
xchg
cs
jbe
shl
popf
sbb
jne
fadd
pop
mov
xchg
pusha
jnp
cmp
les
int3
jne
xor
aam
into
xchg
(bad)
(bad)
(bad)
loopne
fdivr
xor
cs
rol
xchg
dec
dec
imul
jle
add
imul
ret
inc
push
out
jle
in
je
mov
movs
add
lods
lahf
gs
test
adc
jmp
cmp
jo
dec
sub
inc
cli
nop
or
aaa
daa
pusha
inc
xchg
cld
mov
push
js
int
xchg
enter
and
mov
js
mov
xor
shl
cmps
mov
(bad)
sbb
pop
(bad)
cmp
cwde
jge
ja
fsub
js
pusha
mov
bound
cmps
retf
aaa
and
std
outs
mov
js
pop
cmp
cli
push
daa
jne
test
xchg
xchg
adc
lods
jmp
push
ror
rcr
sbb
mov
mov
jns
rol
cli
push
(bad)
pop
pop
mov
int
pop
jne
adc
xchg
mov
std
push
xchg
fiadd
sub
je
fsubr
js
or
push
push
jb
dec
xor
mov
dec
int
loopne
push
xlat
jnp
push
mov
jae
or
cmp
stos
rcl
or
push
lahf
mov
pop
ins
js
mov
mov
inc
inc
mov
jnp
pop
mov
lods
stos
pop
add
xor
(bad)
frstor
in
jg
rol
adc
(bad)
mov
adc
retf
js
sbb
xchg
outs
pop
mov
jmp
test
push
mov
fmul
fisub
mov
inc
jae
xchg
xchg
sub
or
sub
push
loop
(bad)
inc
std
cmc
cmp
aas
shl
dec
jno
push
lock
mov
shr
cwde
ja
jmp
hlt
stc
loop
leave
and
adc
stc
xor
test
dec
push
and
adc
enter
out
cmp
jno
cmc
stc
pushf
ficomp
mov
jecxz
(bad)
(bad)
cmp
movs
pop
stc
icebp
inc
or
inc
outs
or
pop
fs
dec
scas
xchg
lahf
xchg
mov
cmp
adc
bound
pop
jmp
pop
test
stc
fidivr
stos
mov
xor
xchg
out
inc
ret
test
mov
cwde
push
movs
xor
icebp
scas
add
sub
push
es
movs
ja
aad
or
xlat
pop
jmp
jge
mov
xor
lds
idiv
(bad)
cld
mov
mov
push
jmp
fisub
pop
fcmovu
jno
pop
test
jle
nop
mov
shr
or
mov
daa
sbb
ins
test
and
pop
inc
xor
es
jg
mov
mov
pop
jno
push
add
mov
fdivr
in
add
lea
sub
frstor
pop
xchg
ss
xchg
pop
popa
push
xor
cvtps2pd
je
fwait
and
or
add
xor
jl
sar
sub
adc
clc
(bad)
fcom
or
in
jmp
jbe
dec
mov
mov
cmp
in
xchg
(bad)
outs
imul
(bad)
arpl
out
call
(bad)
in
les
ins
out
dec
xchg
inc
inc
jmp
jno
daa
repz
add
repnz
push
push
cmp
adc
jle
pop
xchg
int3
ds
cmps
jg
imul
pop
fldcw
cli
pop
fwait
jno
test
jl
outs
ins
std
in
loope
or
fisubr
call
call
push
or
push
fldenv
pinsrw
cmps
test
jo
or
or
mov
add
daa
repnz
shr
jno
dec
sub
xor
out
je
lock
jae
loop
es
jno
xor
inc
pop
push
movs
pushf
sbb
test
dec
pop
jl
jmp
lea
mul
mov
cli
jg
in
mov
inc
test
fucomp
sub
pushf
xchg
sbb
out
daa
stos
test
(bad)
mov
cmp
cli
mov
aas
or
push
test
push
(bad)
mov
xlat
mov
test
push
sub
xchg
shl
cmp
push
xchg
rcr
mov
dec
shl
scas
imul
retf
push
fnclex
aam
mov
mov
add
dec
mov
pop
test
in
pop
pop
ret
inc
into
(bad)
lock
jnp
jp
rcr
mov
mov
adc
push
test
sbb
cli
imul
(bad)
(bad)
pop
mov
push
mov
push
addr16
pop
dec
loop
nop
ret
sbb
inc
loop
int
test
mov
fxtract
pop
cmp
outs
dec
push
push
fisttp
ins
xchg
dec
mov
xchg
cmp
fnstsw
aad
cmp
ja
inc
fstp
rol
or
lock
or
fiadd
and
in
not
(bad)
call
push
outs
aam
jmp
js
sbb
in
push
fadd
es
cmps
jmp
xor
pop
mov
adc
retf
test
std
dec
or
xchg
add
popf
jns
into
xor
lods
jno
jno
jo
js
(bad)
stc
push
pop
les
stos
push
sbb
in
add
push
movs
pop
cmp
and
fwait
mov
cld
inc
test
stos
mov
cmc
call
inc
ss
mov
test
aad
les
sub
xchg
adc
repz
xor
adc
cmp
sub
mov
sbb
mov
jmp
xchg
aam
out
lea
movs
jecxz
int3
add
mov
mov
ror
in
je
movs
(bad)
push
loop
iret
(bad)
leave
ucomiss
mov
xor
aam
pop
(bad)
jle
test
lahf
pop
mov
xor
sbb
mov
mov
(bad)
lock
and
aas
sar
scas
push
add
jo
mov
les
inc
or
and
in
test
lods
mov
dec
pop
pop
in
sub
add
mov
movs
or
mov
out
or
test
cs
jmp
cs
cmp
mov
jbe
pop
mov
or
xchg
jge
jae
jmp
pop
fisttp
cmps
int
je
fadd
fwait
repnz
ss
call
add
iret
push
mov
jns
cmp
sub
add
ficom
add
or
scas
ror
push
loopne
or
adc
repnz
adc
add
pop
out
sub
retf
cmp
repnz
adc
dec
sub
es
mov
sub
fisubr
sub
xor
jnp
cmc
mov
jmp
push
inc
inc
or
ss
stos
jl
std
xchg
aam
xor
ins
fsubr
jecxz
les
test
pop
mov
lods
lock
in
xor
sti
ins
data16
push
and
mov
ins
inc
mov
rol
cmp
(bad)
push
xor
sar
add
rol
xor
xlat
mov
call
(bad)
call
mov
mov
comiss
cmps
ins
cmp
and
xchg
hlt
push
rol
jns
das
into
push
ds
sti
xor
fabs
mov
xchg
xchg
shl
xlat
xchg
jo
fiadd
ficomp
cmps
sub
mov
xor
fld
add
mov
in
ss
sub
mov
mov
xchg
mov
lahf
retf
aaa
enter
mov
mov
xchg
std
pop
mov
mov
lds
and
rcl
daa
imul
lds
or
ficom
adc
sub
pop
dec
repz
retf
sub
dec
mov
sbb
aam
(bad)
xchg
mov
repnz
ja
and
clc
lea
popf
addr16
jle
lods
imul
cmp
repnz
clc
jo
cmp
mov
cmp
jb
clc
iret
fidivr
ja
push
jae
dec
inc
aas
push
dec
xchg
xor
mov
mov
xchg
inc
sbb
xor
cmps
aad
adc
mov
pusha
lahf
and
cmps
call
cmc
jmp
into
xchg
and
fistp
mov
out
iret
clc
sbb
imul
add
mov
mov
lock
es
dec
outs
xor
xchg
movs
pop
adc
scas
ss
xchg
inc
fnsave
aad
pop
sar
add
mov
ficomp
or
test
or
in
pusha
jno
push
retf
(bad)
jo
xor
inc
mov
inc
jp
(bad)
in
lods
inc
pop
(bad)
cdq
mov
dec
mov
push
cwde
iret
push
push
outs
push
adc
dec
pop
fwait
mov
scas
pop
sub
push
push
mov
(bad)
mov
cmp
dec
dec
dec
push
jl
xor
out
mov
dec
rcl
xchg
cld
xchg
jno
std
scas
sub
adc
cmc
pusha
xchg
xor
daa
push
test
push
out
jnp
xchg
add
or
inc
adc
in
retf
push
ds
jbe
mov
in
sub
mov
ins
enter
call
cdq
test
mov
inc
jne
mov
push
or
fcom
loope
xchg
cli
xchg
jae
pop
shl
dec
add
mul
les
dec
scas
pop
popa
fld
stos
iret
fs
in
aam
mov
std
repz
dec
scas
inc
mov
sbb
jp
sbb
xchg
dec
sub
mov
jae
sub
cmp
in
jbe
into
jnp
inc
mov
cmps
loope
lea
jl
cmc
and
pop
in
mov
inc
mov
cmc
sbb
adc
jae
popa
mov
pop
imul
popa
mov
sub
ret
push
sub
push
lahf
mov
mov
xor
mov
call
lods
mov
leave
in
and
push
sti
clc
stos
push
mov
push
sbb
pop
sbb
xchg
push
lahf
adc
fst
shl
pushf
fidiv
pop
xor
xor
(bad)
mov
cmc
push
xchg
add
retf
shr
das
es
movs
mov
push
lds
scas
mov
ficomp
icebp
mov
fwait
sti
adc
adc
mov
mov
xchg
clc
cmps
test
loop
rol
popf
pop
and
jecxz
jecxz
sbb
jmp
std
sti
iret
sbb
add
xchg
mov
jnp
dec
and
or
push
shl
les
mov
(bad)
stc
adc
or
sub
jb
in
dec
or
sbb
movs
js
lods
jmp
int
mov
lahf
shl
cmp
imul
dec
inc
pusha
(bad)
push
jae
xlat
sbb
in
(bad)
ss
loop
outs
popa
jne
mov
sbb
dec
adc
sti
arpl
aas
push
jmp
iret
push
jg
std
and
xor
or
arpl
mov
or
lods
pop
fldcw
daa
and
ins
mov
xchg
xor
repnz
pop
jg
clc
call
mov
push
xchg
cmp
and
pop
mov
mov
inc
xchg
aad
mov
movs
jnp
mov
dec
jg
cli
nop
mov
(bad)
(bad)
aas
xchg
xor
xor
mov
mov
jl
lods
jb
jbe
cmp
(bad)
mov
mov
xor
sub
mov
rcr
in
pop
mov
sbb
retf
inc
mov
jle
out
loopne
rol
es
stos
and
xchg
in
xchg
loope
pop
sbb
xchg
sbb
movs
aam
push
idiv
ret
ror
fs
xor
cmps
ficom
push
in
xor
(bad)
sbb
cmps
mov
sub
nop
inc
hlt
fucomip
into
inc
jle
outs
dec
loopne
dec
inc
hlt
pop
mov
adc
mov
adc
loop
cmc
sbb
sbb
pop
sbb
mov
mov
pop
or
or
adc
fimul
mov
lds
pop
shl
imul
inc
lods
ss
fadd
pop
mov
fwait
or
mov
adc
(bad)
pop
mov
ja
inc
test
std
enter
add
mov
push
jle
mov
and
xor
sub
in
push
ret
mov
xor
movs
mov
pop
or
div
fldenv
cmps
push
xchg
iret
stc
mov
push
pop
in
movs
cli
inc
mov
pop
push
cmp
repz
repz
retf
mov
dec
lock
sti
inc
push
out
test
sbb
pusha
loopne
outs
pop
inc
jge
jbe
cmp
and
popf
aad
dec
dec
jg
inc
repz
xor
pop
das
push
stos
mov
mov
imul
mov
or
jmp
xchg
cmp
jno
inc
push
push
ja
xchg
mov
int3
fcomp
push
jg
xchg
xchg
jno
pop
xchg
cmp
xchg
or
xchg
sahf
jp
jl
adc
mov
push
jbe
stc
sub
jle
sbb
pop
outs
call
ja
push
std
pop
and
das
cmp
(bad)
fidivr
test
sbb
push
ficom
pusha
jl
push
bound
and
mov
(bad)
dec
sbb
jmp
cmp
ins
into
shl
clc
in
(bad)
iret
mov
retf
sbb
enter
mov
and
mul
push
fisub
xchg
or
jne
daa
pop
call
out
mov
dec
jle
div
cdq
gs
push
xor
retf
aas
cmps
imul
mov
jae
or
les
inc
sbb
rcl
stc
xchg
into
pop
scas
rol
sbb
jae
sub
sahf
jnp
and
adc
test
rol
inc
push
sahf
cli
(bad)
inc
or
xchg
cmp
fmul
mov
(bad)
xor
push
add
inc
(bad)
mov
adc
cld
and
and
retf
out
aaa
push
xchg
lods
aaa
shl
pop
popa
fnsave
pop
enter
xchg
ins
aas
hlt
in
push
xchg
push
ret
psubq
dec
and
jmp
(bad)
lock
popf
sbb
pop
mov
cmps
(bad)
in
and
and
adc
and
lahf
std
fs
xchg
sub
sub
and
bound
retf
sub
(bad)
adc
push
cwde
mov
xchg
sub
pop
cmp
fmul
mov
xor
sub
cmp
int
sti
test
jns
mov
out
cmp
ret
xchg
outs
ror
add
arpl
cwde
into
pop
outs
cmp
sbb
loopne
je
inc
ins
test
sub
add
fcom
jae
or
pop
lea
out
and
xor
outs
jmp
sbb
call
movs
in
shl
pop
out
dec
inc
call
and
xor
inc
int
fwait
jnp
inc
lds
je
pop
scas
push
shl
(bad)
xchg
sbb
iret
dec
dec
xor
(bad)
lock
imul
ins
daa
pop
out
adc
dec
ror
and
loop
pop
test
adc
xor
stc
imul
pushf
and
aad
push
mov
icebp
cmp
add
test
ins
cwde
sub
out
xchg
dec
and
pop
sbb
sbb
push
mov
fisubr
jno
ss
push
cli
jo
daa
xchg
out
or
pop
push
or
scas
dec
mov
addr16
or
shl
aas
ret
xor
ret
or
repnz
fnstcw
sbb
mov
lds
(bad)
sti
je
push
sub
mov
dec
rcr
dec
ret
cli
sbb
mov
(bad)
fidivr
call
inc
in
pop
test
movs
inc
mov
pop
aam
inc
int3
ins
adc
fisttp
jbe
mov
popa
fdivr
ret
cmp
fisub
clc
pop
in
xchg
movs
mov
xchg
lock
jb
sbb
les
daa
push
cld
pop
or
fmul
mov
mov
popa
jns
jl
cmc
lods
mov
dec
mov
cmp
pop
push
dec
mov
popa
popf
and
sbb
add
(bad)
mov
imul
cs
inc
pop
ret
(bad)
push
mov
cdq
das
jmp
ror
xchg
push
pop
mov
xor
jge
add
add
inc
fsub
dec
pop
mov
bnd
movs
jge
or
stc
fstp
jns
fdiv
(bad)
mov
sbb
loop
xchg
movs
cmps
rcl
jmp
or
push
inc
or
xchg
ds
cwde
(bad)
int
push
rcl
fwait
xchg
or
mov
mov
xchg
push
push
fadd
cmps
jno
jb
jae
push
bound
loopne
fist
cmps
sti
cdq
inc
push
push
das
add
movs
int3
xchg
pop
xchg
dec
mov
pop
fadd
lods
mov
jge
push
xlat
inc
jnp
shr
aas
stc
out
cld
adc
xor
pop
add
mov
ins
push
dec
push
xor
push
(bad)
call
(bad)
xchg
pop
fmul
aad
or
(bad)
cmps
and
and
pop
fsubr
popf
(bad)
leave
sahf
(bad)
jl
ja
ss
inc
cmp
jnp
mov
inc
shl
in
xor
mov
inc
cmps
(bad)
jmp
retf
xchg
ss
nop
cmps
ret
and
(bad)
mov
dec
ret
daa
jg
iret
test
(bad)
push
push
mov
sahf
inc
jg
inc
stc
pop
fbld
ss
mov
movs
push
sub
lock
rol
jb
fdiv
ja
jae
lahf
add
not
xor
push
aas
mov
xor
xor
enter
cmp
xor
or
mov
std
pop
jl
pop
outs
(bad)
cli
xchg
or
push
and
fs
sar
jecxz
icebp
sbb
add
cmp
xor
inc
test
jb
jle
add
aad
cli
xchg
mov
mov
in
mov
mov
dec
ret
xchg
jmp
push
sbb
xor
mov
mov
retf
pop
in
addr16
add
add
adc
push
loopne
sbb
jne
dec
(bad)
in
cmp
test
sbb
pushf
(bad)
shrd
scas
and
mov
(bad)
les
iret
push
mov
(bad)
rcr
mov
in
inc
xor
xchg
enter
dec
push
mov
dec
call
mov
push
xor
mov
cwde
fwait
pop
mov
xor
outs
daa
push
imul
clc
repz
cmps
mov
lock
ins
movs
shl
cmp
fadd
outs
jnp
sbb
in
adc
mov
retf
aam
xor
mov
in
push
push
and
test
rcl
adc
pop
jns
rcl
movd
sti
xchg
jecxz
imul
inc
addr16
jno
aam
gs
adc
sub
xchg
jmp
push
fs
(bad)
xchg
stc
mov
rol
ins
ud2
mov
cmp
adc
call
cmp
mov
call
loopne
mov
jl
dec
shr
inc
jp
mov
ss
sub
push
out
dec
rcl
call
xlat
fucom
inc
aas
sub
cdq
dec
cmp
jb
push
mov
and
jg
pop
stos
out
jg
sbb
and
jmp
mov
or
stos
sti
movs
mov
jo
sub
mov
mov
shr
and
sbb
mov
iret
sub
das
loop
push
mov
dec
push
sbb
push
in
jae
jne
call
cmp
cmp
hlt
jge
push
cmp
icebp
mov
jecxz
add
and
imul
mov
(bad)
call
inc
push
or
adc
sbb
dec
js
mov
ss
jnp
imul
int3
mov
jl
xlat
(bad)
xchg
adc
cli
sub
mov
inc
inc
mov
sub
test
dec
xchg
inc
lea
or
adc
lahf
ret
stos
pop
adc
hlt
ficomp
add
sar
push
cmc
(bad)
shl
call
mov
or
sub
pop
mov
retf
push
push
xchg
sbb
gs
scas
ret
sub
mov
xor
movs
retf
xor
fs
add
dec
(bad)
dec
clc
test
retf
rcr
mov
lds
lock
xor
lock
push
mov
call
leave
bound
jmp
fadd
popw
sub
out
and
pop
add
push
nop
or
jnp
clc
movs
adc
jmp
mov
push
xchg
push
mov
cmp
adc
cmps
pop
pop
inc
xchg
adc
pop
mov
dec
mov
lods
mov
je
and
fidiv
pop
leave
inc
dec
sub
xchg
adc
pop
sub
sbb
adc
fiadd
retf
(bad)
push
mov
pop
int
jbe
sub
adc
push
xchg
sbb
loopne
and
int
shr
mov
push
dec
xor
mov
xchg
mov
sbb
loopne
sub
test
and
jl
icebp
ror
lds
mov
neg
push
lods
bound
jp
xchg
jb
xor
ret
daa
sub
inc
ret
jmp
test
imul
mov
push
adc
push
ins
nop
pop
xlat
mov
xchg
data16
sbb
fwait
xchg
test
add
daa
mov
pop
jge
sar
inc
pusha
in
imul
xchg
aaa
and
(bad)
outs
mov
xchg
jnp
add
int3
nop
and
pop
nop
sbb
push
or
fwait
sbb
cmp
pop
mov
jge
scas
dec
mul
lahf
mov
ret
scas
cs
fdivr
fucompp
and
out
std
dec
je
mov
stos
popf
push
jge
fcom
mov
add
fisttp
xchg
and
adc
add
ror
sar
push
dec
or
push
loope
mov
imul
pop
xchg
dec
xchg
push
pop
mov
daa
dec
cmp
sub
in
mov
add
mov
and
mov
fldenv
pop
and
enter
or
int
rcr
push
daa
mov
ss
push
out
mov
out
sti
enter
mov
daa
ds
sar
sbb
adc
mov
cmp
push
into
pop
jl
hlt
pop
jle
sub
(bad)
cmp
jmp
sbb
outs
jmp
fdivp
ins
mov
enter
mov
test
test
adc
les
jo
ins
or
cmps
push
add
leave
mov
gs
dec
pop
jge
cs
inc
fptan
push
mov
or
sahf
adc
cmps
aad
ret
sub
mov
or
icebp
daa
outs
fst
pop
cmp
cmp
jmp
stos
mov
call
fs
leave
int3
pop
push
xchg
sar
and
mov
ins
or
aam
das
fnstcw
nop
dec
fs
and
push
inc
inc
loopne
jo
xor
push
pop
dec
call
push
(bad)
fldenv
ins
sar
mov
(bad)
rcl
(bad)
xor
dec
mov
sub
xor
xchg
outs
nop
fldenv
dec
inc
xor
jne
mov
mov
mov
xlat
(bad)
aaa
std
add
or
xlat
(bad)
icebp
out
mov
push
dec
popa
or
jns
test
mov
ins
jge
imul
pop
lock
inc
mov
loopne
sti
into
sbb
inc
sbb
cli
adc
pop
mov
xchg
mov
mov
ret
mov
dec
daa
mov
aad
mul
cmp
or
gs
mov
inc
pop
mov
hlt
in
daa
sysexit
(bad)
jno
sbb
xchg
push
sti
inc
mov
cmps
cmc
pushf
fidivr
es
cmp
call
scas
sbb
call
push
aaa
sub
mov
aas
sbb
push
test
dec
pushf
mov
repz
or
movs
push
xchg
popf
jg
int3
pop
add
icebp
add
(bad)
imul
cli
and
mov
js
mov
sbb
jbe
adc
rol
or
adc
cwde
xchg
dec
add
cmp
cmps
inc
leave
lods
scas
jne
pop
jb
fild
sub
xor
mov
inc
pusha
loopne
test
call
push
xchg
or
aam
mov
xchg
or
push
inc
test
loopne
mov
xor
or
push
ds
jle
in
les
sbb
ret
(bad)
push
mov
dec
mov
mov
into
stos
and
cmp
dec
das
jns
dec
jmp
inc
or
repnz
retf
push
daa
test
fbld
or
adc
imul
pop
mov
xor
add
shl
pop
repnz
jmp
jge
lds
shr
jecxz
adc
sbb
cmp
xor
mov
out
out
pop
sub
push
int3
dec
xor
mov
rep
jg
ret
jmp
pop
ret
sbb
push
sub
in
dec
rcr
and
(bad)
or
inc
cli
ror
cmp
out
jne
jmp
and
xor
mov
mov
jnp
arpl
popf
sbb
jne
jmp
pushf
test
sub
dec
jle
and
inc
(bad)
lock
push
sbb
mov
aaa
int3
mov
inc
stos
ror
(bad)
jg
popa
pop
mov
int3
jecxz
dec
jle
gs
repz
aas
sbb
in
inc
loop
jmp
jnp
sub
dec
or
xchg
nop
cmp
jne
sbb
(bad)
push
cmp
loopne
bound
fldenv
imul
ret
dec
mov
test
adc
push
and
scas
nop
arpl
aaa
xchg
jmp
or
mov
out
or
into
clc
inc
(bad)
xchg
sbb
mov
fs
aam
pop
ret
(bad)
loopne
push
sub
and
vaddsubpd
mov
xor
inc
adc
(bad)
xor
(bad)
jl
mov
xchg
inc
sbb
add
xor
out
xor
daa
push
inc
fist
push
sub
not
pop
mov
leave
(bad)
out
fcomp
mov
or
push
sub
ret
xor
or
inc
dec
mov
stos
adc
cmp
cs
bound
cmp
mov
adc
jae
into
jl
sub
cmp
sbb
(bad)
mov
push
cmp
xlat
fcom
lds
jns
mov
pusha
or
or
(bad)
dec
mov
in
(bad)
cmp
push
fdivr
add
xor
ds
(bad)
jnp
stos
mov
shl
aam
mov
js
mov
sub
test
push
retf
mov
lahf
dec
adc
inc
xchg
or
add
xor
xchg
ror
cs
and
cs
test
mov
pop
jns
or
jo
and
mov
sar
stos
fist
mulps
jae
cwde
xchg
jp
jl
stos
bound
push
fwait
push
xor
inc
iret
(bad)
or
shl
push
xchg
(bad)
mov
cmp
jmp
xchg
scas
jno
out
jb
inc
bound
lahf
aaa
rcr
push
or
jae
pop
inc
sub
dec
fistp
xchg
sahf
das
jle
lock
pop
test
xchg
repz
lahf
adc
xchg
fld
xchg
xchg
(bad)
adc
mov
mov
dec
push
pop
mov
adc
dec
jbe
xor
jb
cmp
push
jbe
fdiv
add
sbb
ret
sbb
mov
dec
lods
jbe
iret
sbb
jb
push
sar
enter
xor
jp
mov
xor
xor
(bad)
js
stos
xchg
push
(bad)
loopne
loope
out
movs
enter
stos
mov
push
pop
test
and
ins
mov
imul
hlt
aam
cmp
xchg
and
xchg
jno
outs
lods
mov
pop
mov
(bad)
add
lods
(bad)
int3
das
lods
js
adc
cmps
add
mov
mov
gs
xor
adc
movs
cmp
sbb
cmps
xor
fadd
dec
out
test
hlt
sbb
sub
jnp
imul
out
mov
mov
adc
sbb
out
jmp
jne
sbb
mov
mov
pop
inc
cmp
fwait
or
dec
and
bound
stc
inc
fimul
aaa
xchg
fisttp
shr
pop
ret
(bad)
xchg
stos
sbb
enter
mov
or
pop
pusha
adc
pop
pop
sbb
imul
xchg
cmps
push
mov
push
sahf
xchg
(bad)
jnp
adc
xchg
mov
(bad)
ins
fcmovnu
fs
loop
mov
loop
cmps
mov
and
js
jg
push
pop
repnz
inc
cmps
cmps
adc
fbstp
xchg
mov
xchg
out
gs
sub
cmp
mov
sub
xchg
jno
or
test
jno
and
dec
in
dec
jl
xor
lahf
mov
pushf
rcl
or
jb
retf
enter
pop
xor
mov
dec
mov
es
outs
add
ret
push
jns
xchg
les
adc
icebp
mov
xchg
repnz
repnz
ret
arpl
xlat
sub
nop
xchg
add
jp
dec
frstor
movs
imul
pop
ss
into
imul
cdq
mov
fadd
clc
adc
dec
xor
cmps
mov
adc
sub
test
sub
adc
and
add
sub
addr16
outs
and
pop
(bad)
and
xchg
cld
cmp
pusha
dec
test
jp
bound
inc
inc
dec
idiv
xchg
sub
rcr
mov
xchg
in
sub
or
div
xchg
cmp
add
mov
retf
adc
daa
and
sub
cdq
ja
ins
pop
fst
cwde
pop
sub
mov
(bad)
add
(bad)
mov
call
aad
adc
cld
push
js
outs
stos
mov
mov
and
movs
inc
pop
inc
inc
ja
lods
pushf
div
dec
in
mov
sbb
stos
imul
mov
je
xchg
es
mov
push
pop
sbb
sub
adc
mov
adc
push
cld
pop
(bad)
sbb
mov
stos
pushf
(bad)
or
ficomp
out
mov
adc
mov
shr
or
jae
mov
ret
in
jae
rol
imul
daa
outs
int
test
xchg
sub
push
adc
ins
add
dec
pop
js
out
or
out
add
push
mul
loopne
inc
(bad)
push
cmp
fld
inc
mov
fnsave
aas
cmp
ret
inc
fcom
fidiv
mov
sub
jne
mov
imul
hlt
sub
push
outs
sub
jnp
lods
sub
ffree
scas
movs
scas
cdq
aas
cmp
out
pop
sahf
arpl
movs
sub
dec
mov
loope
inc
mov
inc
call
sbb
mov
iret
sub
dec
popf
jecxz
sbb
xchg
mov
cs
out
jmp
jmp
xchg
jle
aas
xor
(bad)
xchg
pop
jle
cmp
pushf
addr16
in
mov
aam
inc
bound
in
mov
pop
(bad)
cld
jnp
std
xlat
mov
aam
mov
inc
in
das
jg
lahf
scas
xchg
pop
test
(bad)
add
push
out
jns
lods
jl
into
hlt
sbb
stos
loop
pop
cmp
fist
add
sub
jne
cli
or
mov
xor
pop
call
shl
or
outs
pop
jl
mov
jge
jg
rol
mov
stos
in
and
loop
sbb
inc
sbb
in
lods
mov
out
(bad)
inc
daa
mov
pop
shl
mov
leave
lea
mov
adc
add
and
cmp
pusha
mov
(bad)
mov
jbe
in
pop
sbb
xchg
pop
retfw
mov
pop
(bad)
jnp
leave
pop
xor
jne
bound
pop
sti
add
outs
shl
sar
add
ucomiss
adc
mov
or
mov
and
imul
nop
das
enter
cli
sub
fisttp
xor
retf
and
imul
test
retf
cmps
iret
pushw
in
adc
jle
and
mov
stos
inc
mov
adc
sbb
or
add
fmul
jp
or
push
(bad)
sub
push
lea
jo
pop
mov
or
imul
(bad)
fwait
inc
ss
push
mov
fwait
mov
mov
loop
fdiv
ja
cmp
jecxz
cmp
inc
xchg
pop
push
push
pop
pop
das
add
or
xor
jbe
mov
fwait
dec
adc
mov
xchg
jne
jl
mov
push
add
xor
sbb
add
aas
sub
mov
imul
ss
xchg
ins
and
adc
sahf
push
jmp
es
or
pop
adc
add
sti
adc
add
lahf
ror
sbb
in
shr
inc
pop
sbb
cli
dec
shl
cmp
movs
mov
dec
popf
sbb
out
call
jbe
and
icebp
xlat
mov
(bad)
xchg
jp
adc
mov
fidiv
imul
stc
imul
clc
movs
add
mov
mov
sub
sar
dec
jne
jns
xlat
jo
sbb
frstor
shl
mov
cli
push
pop
inc
repnz
xor
pop
inc
inc
cmps
jle
outs
ins
jmp
jne
popf
shl
test
adc
js
add
dec
jbe
sbb
push
movs
imul
out
dec
movs
mov
dec
outs
icebp
inc
jmp
inc
jbe
or
mov
cmp
mov
inc
xor
dec
(bad)
cld
jle
jne
pop
inc
enter
push
mov
mov
inc
shr
jae
mov
sub
jns
jbe
mov
stc
jmp
gs
retf
cmps
ret
xchg
push
lods
je
cdq
shl
daa
sbb
dec
sub
cmp
xlat
mov
ins
lds
xchg
loope
arpl
sbb
adc
cdq
ret
push
stos
push
xchg
daa
and
xchg
clc
jmp
jb
fistp
lock
sub
add
clc
mov
sub
mov
sar
out
mov
pop
xchg
sub
cwde
xor
ror
lods
ja
test
daa
jmp
icebp
mov
in
iret
inc
inc
jns
xchg
ins
test
loop
mov
(bad)
push
and
jae
daa
mov
popa
push
call
cmps
arpl
mov
push
sbb
jge
sbb
aaa
cmp
xchg
out
push
push
lock
fdivp
xor
loope
push
jmp
sub
add
pop
push
repnz
stos
xor
ss
lods
pop
xor
sti
lods
out
retf
clc
int3
fistp
sbb
into
mov
jecxz
in
push
daa
xor
lds
fisub
clc
jb
pop
xor
xor
outs
ds
mov
lahf
mov
ret
inc
jmp
cmps
dec
xchg
or
xor
test
imul
xor
cdq
and
es
repnz
iret
retf
cmp
movs
and
sub
pop
mov
in
adc
fstp
das
sbb
pop
out
sbb
mov
rcr
ret
cmc
and
or
or
dec
fidivr
xor
push
or
cli
fsubr
fcmovnu
pop
shr
cmp
and
clc
shl
aam
xchg
hlt
dec
xchg
imul
and
cdq
lds
aam
push
inc
dec
js
rdtsc
sbb
mov
pop
mov
inc
lock
inc
mov
cmp
inc
cmp
retf
mov
xor
cmc
xor
or
push
movs
jl
arpl
in
lods
aas
test
jecxz
push
loop
cmp
push
sbb
mov
add
gs
dec
adc
mov
lea
sub
jmp
dec
(bad)
mov
cmp
iret
xchg
mov
or
scas
jae
cmp
aas
sbb
mov
adc
push
int
push
pop
xchg
jbe
push
in
imul
jne
cs
push
inc
dec
bound
loop
clc
test
enter
in
mov
xchg
in
repz
push
int
xchg
rcl
pop
adc
cmp
movs
(bad)
retf
mov
imul
mov
sub
jmp
mov
mov
lods
pop
sar
push
shr
xchg
mov
adc
icebp
add
mov
jnp
ss
lahf
sbb
push
jmp
out
icebp
neg
mov
push
fsubr
fimul
adc
imul
int3
int
sbb
leave
aaa
sub
jb
fistp
dec
call
js
sti
retf
pop
pop
sbb
test
shr
adc
es
(bad)
xor
sbb
add
aam
push
shl
cmc
xchg
dec
popf
in
jecxz
push
sbb
cli
leave
xor
xchg
and
fdivr
rol
outs
xchg
sbb
inc
adc
xchg
cmc
pop
dec
mov
or
cmps
dec
aaa
fcmovnu
cld
dec
or
sar
aaa
dec
fadd
push
xchg
int
loopne
outs
scas
inc
or
push
fcmovne
xchg
push
call
inc
dec
push
dec
popa
xchg
add
gs
out
push
pushf
(bad)
cmp
cmp
lods
sbb
sub
sub
inc
mov
js
mov
mov
inc
hlt
dec
out
xchg
push
jmp
mov
popf
(bad)
push
aad
repz
fist
xchg
push
les
(bad)
mov
mov
call
jp
push
test
js
push
pushf
xor
add
or
inc
sahf
(bad)
push
or
push
sbb
cmp
add
inc
int
push
jb
loop
fistp
ror
gs
or
mov
(bad)
mov
es
neg
jb
mov
push
repz
ret
pop
loop
test
pusha
fstp
and
mov
rol
rol
bound
mov
outs
and
jp
stos
movs
add
in
fs
xor
cli
mov
dec
outs
ins
or
gs
jg
arpl
bound
sbb
xor
xchg
aad
push
push
push
jne
les
push
jl
sub
int
mov
cwde
xor
dec
sbb
das
and
sbb
repnz
and
cmp
neg
repz
add
neg
cmp
scas
inc
jnp
sbb
mov
inc
inc
xchg
(bad)
push
clc
shr
sahf
or
shr
gs
jbe
inc
daa
or
clc
pop
mov
jns
cmps
adc
push
retf
ja
mov
ja
mov
cld
fyl2xp1
pop
cmps
mov
mov
stos
fdiv
or
mov
out
mov
nop
xchg
xchg
ret
(bad)
popa
and
xor
inc
frstor
pushf
dec
sub
dec
dec
sub
mov
add
push
mov
mov
mov
pushf
popf
xlat
loope
icebp
std
sbb
inc
inc
push
add
add
imul
out
or
mov
push
leave
data16
scas
aaa
push
in
push
adc
ins
or
adc
cdq
sub
test
cmp
lods
ins
or
mov
gs
mov
xchg
imul
lahf
add
je
jae
in
rcr
cmp
mov
mov
lea
mov
xor
mov
imul
jp
pop
aas
adc
xor
xchg
pcmpgtd
stc
mov
stc
add
inc
lahf
push
fistp
fs
(bad)
push
bound
mov
adc
movs
dec
adc
bound
inc
xor
outs
push
add
lds
js
inc
loope
out
loope
inc
jno
xchg
lods
push
das
mov
dec
mov
push
mov
and
icebp
mov
add
aas
jg
xchg
test
stos
test
ret
jae
pop
iret
and
lahf
stos
jns
pop
sub
int
js
imul
push
mov
mov
pop
in
mov
lods
cmp
fnstsw
test
jp
mov
bound
xor
sbb
repnz
lds
iret
or
sbb
data16
jae
pusha
add
sahf
dec
mov
(bad)
test
pop
pop
jl
div
mov
inc
adc
pop
and
pop
test
mov
inc
or
out
sub
jne
ds
adc
mov
xchg
mov
sti
push
add
and
(bad)
ins
mov
or
sub
mov
dec
out
movs
ins
adc
inc
inc
push
and
sub
aam
inc
push
movs
push
inc
in
lea
mov
gs
test
cwde
test
xchg
ret
pop
sbb
cs
dec
mov
mov
sbb
adc
fidivr
retf
inc
inc
daa
(bad)
cmp
mov
stc
retf
inc
mov
push
inc
mov
add
imul
mov
in
inc
jmp
mov
data16
sar
rol
ret
shr
push
(bad)
nop
pop
adc
mov
mov
hlt
mov
or
and
out
mov
enter
repz
retf
ficomp
pop
cmp
hlt
test
imul
jns
enter
adc
push
jp
retf
out
cmp
sbb
cmps
ficom
test
mov
pop
sti
pop
jnp
pushf
cld
and
stos
adc
in
mov
shl
inc
lock
out
sbb
lock
pop
xor
fwait
cld
nop
cmps
(bad)
push
mov
data16
stc
ror
xchg
xlat
xchg
sbb
jmp
std
rcr
es
xor
arpl
arpl
pop
lea
add
pop
xchg
sbb
int
or
cmp
xchg
daa
or
add
fcmove
cmc
cld
cli
fstp
out
shl
xor
js
loope
mov
loopne
pop
inc
rcr
cmp
mov
dec
cmp
jb
int3
jle
mov
push
scas
dec
dec
mov
shl
dec
mov
imul
mov
ins
(bad)
and
int3
lods
test
sbb
mov
fisubr
xchg
jmp
cld
sub
(bad)
xor
movs
call
jle
imul
add
pushf
je
jle
xchg
mov
cdq
loope
iret
and
imul
pop
xchg
je
ds
fdiv
mov
inc
fsub
inc
ins
pop
push
arpl
bound
ins
clc
push
lods
cmps
clc
pop
mov
test
fxch
out
xchg
cmp
pop
dec
(bad)
push
mov
adc
rcr
or
add
in
dec
cmc
mov
fimul
pop
nop
xchg
sbb
stos
lahf
pop
ror
mov
sub
mov
cmps
dec
popf
sar
inc
cld
pop
sbb
outs
xchg
lds
mov
mov
adc
int3
popa
lods
shr
dec
lea
or
and
push
or
mov
aad
or
in
jb
ret
or
jnp
ficomp
add
cli
cwde
dec
dec
sbb
addr16
test
nop
je
or
loope
inc
js
mov
int3
push
vpmulhw
mov
jmp
into
mov
(bad)
mov
pop
popa
stos
push
mov
push
mov
repnz
(bad)
retf
mov
xor
jge
pop
in
rcl
sub
ds
stc
aas
push
jbe
clc
fs
(bad)
cmp
mov
repnz
fs
push
loopne
mov
inc
cmp
add
ins
dec
bound
ins
outs
mov
mov
inc
mov
add
lahf
popa
pop
mov
pop
pusha
fidivr
ds
mov
add
jmp
dec
std
pop
or
gs
mov
or
cmps
mov
mov
add
xor
mov
outs
mov
mov
mov
mov
les
jae
fidivr
dec
aam
(bad)
cmps
arpl
mov
call
call
jo
aas
push
push
cdq
loope
xchg
add
jno
call
fwait
inc
out
inc
(bad)
fimul
sbb
xchg
xor
call
scas
push
or
mov
arpl
pop
js
cmp
fadd
test
fcmovnbe
test
add
or
cmp
xor
mov
cmc
popa
add
cdq
outs
or
xchg
(bad)
jo
jmp
add
mov
shl
aas
dec
cmp
mov
loopne
and
jmp
adc
clc
(bad)
push
cmc
push
mov
ja
ins
fbld
jge
dec
sub
push
mov
out
jl
cmp
pop
adc
add
nop
iret
stc
cwde
xchg
es
loopne
mov
push
sbb
cld
xchg
ret
sbb
sub
ret
(bad)
mov
(bad)
stos
xchg
stos
mov
(bad)
inc
lods
and
out
mov
jmp
mov
enter
xchg
lock
inc
loop
xchg
xchg
mov
inc
cli
or
pop
sbb
out
js
popa
pop
cmp
pop
sti
(bad)
out
or
pop
test
cmp
aas
jp
mov
or
xchg
cmp
jle
cli
xor
and
out
and
push
cmp
cmps
mov
jne
push
dec
pop
cmps
clc
jno
enter
xor
xor
fdiv
sub
int3
or
or
mov
inc
xor
xor
mov
fimul
lods
out
std
dec
cs
or
jl
push
idiv
push
or
pop
adc
and
ss
out
or
cmp
jbe
retf
movs
jge
or
add
xchg
call
pop
dec
push
lock
ins
jne
pop
dec
pop
pop
lahf
sub
or
dec
ficomp
xor
pop
sbb
lods
mov
js
neg
mov
jo
cmps
mov
fsub
jne
int
(bad)
xor
mov
mov
test
(bad)
cmp
loope
push
jne
jnp
jmp
xor
and
jo
sub
mov
je
call
add
or
cmp
mov
stos
and
(bad)
and
dec
jl
push
jb
push
and
add
and
mov
inc
lods
out
test
imul
fiadd
stos
push
pop
icebp
out
push
mov
push
xchg
pop
ror
mov
add
in
sub
fs
popf
adc
lods
jmp
mov
js
fld
xchg
dec
pop
mov
imul
loop
mov
retf
fld
in
mov
sbb
sbb
test
movs
dec
aam
cmp
jge
imul
loopne
mov
shl
call
xlat
les
push
enter
repnz
sub
mov
nop
cmps
and
pop
mov
xor
movs
sbb
ja
int3
jne
add
cmp
and
mov
push
xchg
pop
stos
jb
mov
cdq
mov
sbb
std
push
out
or
dec
gs
fiadd
aas
movs
and
and
pop
test
pop
pop
iret
fstp
pushf
cs
lds
test
fiadd
test
mov
dec
test
jns
ret
lds
fsubr
cmc
pop
into
jle
in
(bad)
pop
sbb
pop
mov
xor
outs
push
inc
lock
fs
jae
dec
mov
fcom
push
jmp
push
mov
fnstsw
sar
add
jge
xor
jnp
ins
(bad)
test
mov
xor
xchg
jmp
xor
push
shl
push
call
pcmpeqd
mov
test
mov
ds
inc
mov
das
test
cmp
mov
lea
or
jae
vcmpps
test
clc
ja
cmp
loop
in
jg
(bad)
mov
jge
push
(bad)
dec
inc
mov
and
cmp
int3
retf
div
dec
adc
dec
and
jmp
ret
retf
sbb
dec
or
push
or
gs
xor
les
xchg
sbb
xor
mov
shl
add
loop
push
mov
stc
inc
(bad)
lods
xor
jmp
js
iret
mov
rcl
sbb
and
rol
jnp
jge
or
mov
push
pop
sbb
out
push
test
and
imul
rcl
cmc
mov
frstor
call
je
and
cwde
test
cmp
fdiv
adc
(bad)
mov
sbb
pop
xor
push
int3
jae
inc
sbb
sar
mov
lea
sub
(bad)
pop
data16
call
ficom
ds
mov
cmp
cmps
sub
xchg
icebp
cmps
data16
mov
mov
adc
repnz
inc
and
ret
loop
and
(bad)
aam
sar
add
mov
push
sbb
push
mov
call
jg
adc
pushf
cmp
or
popa
je
mov
into
jmp
cmp
cmp
xchg
cmp
aaa
fcmovnb
fsubr
cmp
dec
into
mov
and
jle
mov
adc
mov
stos
and
sub
fldenv
mov
dec
sbb
sub
cld
loopne
idiv
mov
push
loopne
mov
test
test
scas
mov
push
jns
pusha
sbb
(bad)
arpl
lock
mov
js
idiv
sub
je
push
inc
cmp
xchg
pop
sbb
rcr
mov
pop
jmp
in
sar
fbld
and
into
jl
mov
jns
retf
mov
and
jecxz
push
test
sbb
clc
xor
add
push
add
dec
imul
push
add
pop
mov
scas
dec
les
test
dec
pop
push
aas
call
stos
outs
dec
cdq
out
imul
add
int3
inc
jl
push
sti
inc
ds
cmp
cs
fs
loop
xor
test
dec
sahf
add
test
loop
(bad)
xlat
fnstcw
fwait
cmp
mov
mov
mov
out
push
inc
push
dec
xchg
mov
and
in
stos
lods
ret
or
imul
test
adc
std
test
mov
lock
movs
push
mov
test
ret
mov
push
jecxz
neg
or
out
out
dec
lods
mov
push
(bad)
daa
cmp
push
add
xor
xor
retf
and
xor
push
push
pop
dec
ret
gs
cli
mov
pmaxub
mov
mov
ret
ret
mul
in
dec
inc
pop
inc
jns
push
jg
pop
das
pshufw
aam
ins
sub
cli
mov
movs
leave
jle
mov
imul
ss
pop
sbb
vphaddbd
xor
fnstenv
dec
data16
push
repz
nop
repz
outs
sub
jge
sahf
iret
lea
mov
test
sbb
int3
into
adc
pop
imul
inc
outs
dec
fwait
cld
out
ins
mov
sti
sti
or
call
xchg
arpl
push
xchg
adc
cdq
in
aam
cli
or
xchg
push
cmovp
adc
int
dec
fst
int3
xor
inc
mov
adc
and
pop
daa
out
int3
enter
pushf
enter
mov
mov
cwde
sub
add
mov
sub
xor
jle
in
push
mov
sbb
inc
push
sub
test
push
arpl
ins
jl
ret
push
imul
mov
jo
ins
jo
ja
adc
(bad)
in
je
inc
mov
xchg
dec
mov
sbb
fcomip
cmc
ss
pop
push
jecxz
xlat
in
mov
mov
jbe
(bad)
in
hlt
jne
(bad)
mov
adc
mov
sbb
hlt
push
push
push
popf
cmp
icebp
or
(bad)
fmul
pop
pop
sub
sbb
jno
cs
adc
neg
push
sahf
ds
popf
data16
in
loop
pop
inc
cmp
dec
inc
xchg
pop
gs
inc
inc
(bad)
shl
and
(bad)
mov
mov
xchg
xor
push
je
xchg
(bad)
adc
pop
cmp
jae
aam
daa
pop
cmp
jb
pop
outs
xchg
pop
out
mov
adc
jge
sbb
dec
bound
cs
outs
test
xlat
hlt
dec
push
adc
xor
xor
lahf
lods
bound
test
dec
in
sbb
dec
push
leave
adc
imul
cwde
getsec
dec
dec
sub
test
bound
xlat
(bad)
(bad)
ror
and
jnp
into
pop
mov
mov
test
movs
mov
pop
icebp
rol
lods
sub
hlt
inc
test
mov
ret
and
mov
sbb
leave
aas
lahf
sbb
sbb
sbb
push
push
repnz
push
jecxz
jo
test
pop
int
fst
or
mov
sub
xchg
outs
neg
mov
out
imul
push
fisubr
jno
lods
pop
push
xor
pop
xor
and
ror
xor
pop
cmp
test
mov
test
test
(bad)
popf
jno
cmps
mov
outs
aam
push
push
repnz
lods
sub
aad
add
adc
add
jl
xor
mov
(bad)
(bad)
xchg
hlt
or
jge
mov
mov
test
and
xchg
mov
xor
or
jb
jnp
hlt
xchg
popa
jae
inc
jl
stc
mov
fwait
mov
scas
stos
clc
add
stos
add
fs
jge
inc
in
repz
(bad)
sub
sbb
xor
(bad)
adc
or
xor
imul
mov
outs
sbb
fidiv
cmp
lea
and
or
dec
loopne
mov
adc
inc
push
jbe
lock
out
mov
test
or
mov
push
sbb
sbb
and
sub
and
fdivr
and
mov
pop
and
outs
inc
inc
add
ror
std
mov
mov
test
(bad)
in
dec
mov
xor
cmp
jbe
(bad)
xchg
hlt
fadd
repz
loop
mov
jmp
jo
mov
mov
pmullw
std
cmp
lea
(bad)
out
mov
mov
mov
scas
test
in
dec
adc
cmc
iret
fbstp
jecxz
sbb
dec
aas
clc
dec
sbb
cmovle
add
(bad)
jnp
shl
fcom
jle
jnp
adc
fld
xchg
and
bswap
sti
mov
in
xor
or
cmps
dec
mov
sbb
fild
xor
xchg
xchg
fs
or
pusha
and
fmul
or
sbb
stos
and
ficomp
sbb
xchg
sahf
punpcklwd
and
dec
fstp
in
int3
push
(bad)
iret
gs
fs
and
cmp
dec
out
push
or
dec
mov
dec
(bad)
stc
aaa
icebp
push
out
mov
out
mov
adc
inc
jae
cdq
push
mov
bound
pop
jb
icebp
cmp
inc
loop
out
or
imul
inc
inc
dec
pushf
add
inc
ds
lods
in
mov
movs
arpl
adc
call
dec
dec
(bad)
dec
push
add
or
pop
hlt
dec
test
sbb
mul
cs
movs
mov
enter
cmc
mov
add
xlat
jne
fs
mov
jecxz
cwde
scas
jmp
push
mov
push
das
bound
add
or
push
mov
add
or
ret
ret
adc
out
xchg
adc
fcmovnu
bound
mov
addr16
nop
out
sar
mov
mov
add
sub
cli
stos
pop
unpckhps
xor
daa
pop
repnz
inc
lea
movs
xchg
inc
sub
(bad)
or
aas
call
push
in
xlat
xor
sub
into
aad
cwde
jbe
cmp
push
push
push
mov
adc
sbb
ret
pop
mov
dec
mov
je
or
mov
pop
aaa
mov
call
xlat
sub
or
jns
mov
sbb
repz
push
and
or
daa
int3
mov
dec
xor
add
shr
addr16
mov
pop
popf
pushf
and
pop
inc
or
mov
add
inc
pop
cwde
cmp
jle
mov
adc
int3
mov
test
int3
sub
icebp
(bad)
clc
rcl
adc
dec
aam
dec
xor
in
(bad)
mov
(bad)
lock
sar
xchg
or
pop
inc
enter
(bad)
inc
mov
jae
movs
mov
push
inc
mov
lahf
(bad)
and
xchg
shl
cmp
dec
or
xor
aad
test
xchg
fs
or
mov
inc
xor
scas
cmps
mov
clc
push
fnstenv
cmc
ror
mov
push
sti
xchg
mov
inc
xor
mov
fld
inc
inc
add
add
fmul
jne
cmp
lds
pop
aas
cmps
jge
sbb
mov
xchg
adc
mov
mov
mov
retf
test
div
pop
push
xor
inc
push
push
hlt
cmp
je
push
popaw
aaa
out
ror
ss
ret
loope
push
ret
xchg
pop
xor
retf
sbb
imul
aaa
sub
aam
enter
sbb
add
out
jnp
jmp
data16
(bad)
pop
aad
frstor
pop
bound
jnp
popa
in
cmps
or
loopne
dec
push
xor
rcr
stos
inc
test
daa
ss
cdq
add
scas
dec
(bad)
in
lock
loopne
(bad)
out
pop
imul
pop
pop
or
adc
stc
xchg
enter
(bad)
jns
jecxz
dec
clc
cs
sub
aam
xchg
retf
dec
jb
outs
movs
lods
fld
dec
mov
sbb
addr16
cs
outs
push
cld
pop
add
and
cli
in
lock
in
dec
fwait
jae
mov
mov
mov
xor
aad
xlat
int
fs
cwde
loopne
sbb
pop
out
cmp
fdivr
sbb
repz
cmps
shr
fdivr
or
inc
test
mov
fs
adc
ds
dec
out
xchg
mov
loopne
icebp
je
xor
mov
adc
mov
cmps
imul
movs
or
xor
or
addr16
dec
imul
retf
and
ins
mov
mov
xor
sbb
in
rcl
in
jnp
sub
push
xchg
push
xchg
adc
jns
inc
popf
pop
shl
add
mov
fnstsw
fiadd
cdq
add
shr
sbb
call
pop
pop
das
leave
scas
popa
popf
clc
movs
add
mov
pop
inc
xchg
mov
ins
enter
addr16
arpl
int3
add
cli
imul
dec
pop
pop
or
jmp
(bad)
lock
aad
test
pop
xor
leave
div
dec
and
xchg
mov
inc
out
arpl
sub
sbb
out
push
xlat
push
or
xchg
in
rol
cmc
dec
shr
add
cmp
sub
pop
movs
fist
jne
in
add
fs
jno
push
add
cmp
mov
and
aas
and
and
and
inc
cwde
inc
ds
mov
iret
cmp
or
stos
nop
xchg
pop
ja
fbld
cs
or
xchg
and
(bad)
mov
sets
add
enter
imul
cmp
loope
pop
loopne
out
std
(bad)
ror
push
xor
sub
arpl
push
jno
lea
and
cmp
ins
repnz
imul
push
je
(bad)
pop
jnp
hlt
cmp
mov
xchg
popf
out
fimul
cwde
dec
and
cdq
out
mov
(bad)
sbb
pop
ja
jp
adc
loope
aam
es
(bad)
jmp
das
add
int
nop
arpl
adc
pop
call
sub
push
ins
mov
repz
xchg
mov
popf
hlt
cdq
adc
sbb
jb
jge
push
test
rcl
mov
adc
sub
mov
sub
mov
push
xchg
out
mov
dec
aad
sub
out
inc
ds
and
mov
jb
xor
out
ret
jmp
or
fwait
sahf
mov
push
push
ins
das
fwait
pusha
xor
loop
aaa
adc
cmc
lods
pop
xchg
push
and
int3
scas
popf
xchg
shl
push
fst
in
mov
lods
cwde
mov
sub
cmp
cmps
mov
push
cdq
stos
daa
mov
mov
xchg
xchg
enter
(bad)
repz
jg
popf
cmps
into
add
in
mov
cmp
int3
inc
test
lock
stos
jge
dec
add
fisubr
xor
retf
cmp
sub
ja
popa
mov
es
jmp
ins
in
rol
daa
cmp
xchg
sahf
pop
test
cmp
xchg
dec
sub
bound
push
movs
fstp
mov
inc
in
pop
enter
or
ins
adc
in
mov
(bad)
int
(bad)
mov
pop
and
cmp
xchg
ret
cmps
xor
arpl
inc
xchg
mov
push
ss
add
xchg
es
cmp
jnp
mov
movs
addr16
xor
imul
fistp
inc
lock
(bad)
xor
inc
or
sub
cmp
add
imul
inc
sbb
push
inc
sbb
and
push
or
repz
sbb
xor
pop
ja
lock
mov
push
rdmsr
repnz
xchg
sahf
inc
mov
arpl
gs
and
adc
xor
jp
movs
popf
int
iret
mov
jge
fst
in
jae
(bad)
and
fild
jae
fcmovne
mov
mov
mov
mov
pop
xor
pop
add
repnz
in
or
fnstsw
loop
icebp
xchg
es
and
ret
add
sti
sub
inc
test
inc
push
rol
stos
adc
popf
cld
iret
sub
inc
arpl
cs
repnz
pop
cli
mov
push
cmp
dec
jo
sbb
sub
mov
idiv
and
test
leave
adc
ins
or
sti
adc
push
push
pop
(bad)
pop
mov
mov
imul
push
xor
retf
stos
inc
ret
dec
(bad)
push
mov
inc
push
pop
fwait
push
jecxz
mov
sbb
iret
dec
push
push
hlt
in
mov
or
hlt
sub
sbb
push
cmp
nop
bound
inc
cwde
mov
retf
es
adc
push
mov
jge
and
movs
add
cmps
add
adc
ret
mov
scas
and
outs
pop
mov
mov
xor
retf
sub
xor
sub
test
lea
into
pop
fwait
sbb
test
outs
aam
xlat
mov
lsl
add
lds
test
lods
movs
stc
push
ins
rcl
mov
inc
test
ss
cmps
les
jl
inc
inc
repz
sub
sahf
test
sub
xchg
clc
stos
bound
mov
int
(bad)
xchg
(bad)
and
mov
(bad)
scas
outs
leave
aad
inc
ins
push
push
xchg
adc
frstor
loopne
pop
jp
fdivr
scas
rcr
data16
mov
push
std
pop
adc
push
pop
cmp
ret
pop
gs
lock
mov
push
std
xchg
popa
scas
js
mov
ficomp
hlt
jbe
or
jmp
fnstcw
fisttp
jl
xor
mov
jl
inc
pop
popa
jo
adc
add
push
fwait
push
xor
out
cld
mov
popa
leave
iret
out
and
stc
and
adc
sub
cli
mov
inc
and
lea
pusha
adc
sbb
push
das
sub
sti
dec
mov
hlt
sub
push
lods
push
setno
jo
or
retf
cmp
jb
inc
fnstsw
push
rcl
mov
mov
aas
cmps
shl
call
shr
enter
fisubr
dec
cdq
shl
stos
jns
out
push
std
jno
stos
or
sar
outs
adc
sbb
fucomip
add
hlt
stos
mov
lods
dec
retf
cs
cmp
push
add
stos
mov
push
and
fs
addr16
ficomp
and
xchg
movs
arpl
jns
xchg
lahf
jmp
inc
in
(bad)
loope
push
push
push
call
or
push
sub
mov
xor
mov
xchg
(bad)
cmp
call
push
or
sbb
xchg
loop
or
xchg
or
adc
mov
(bad)
inc
ja
fild
cmps
mov
outs
cli
push
pop
adc
inc
jecxz
ins
pop
pop
push
int
test
mov
test
push
test
jb
dec
jg
add
jmp
imul
or
xor
dec
inc
dec
sar
adc
mov
pop
cmp
cwde
pop
cmp
jl
lds
mov
shr
fstp
jl
sbb
(bad)
jmp
push
rol
jb
inc
adc
hlt
pop
clc
jae
cwde
mov
shr
pop
out
stc
xchg
mov
jp
mov
call
out
xor
rcl
scas
icebp
outs
push
js
sbb
(bad)
xchg
fild
test
neg
loop
adc
sbb
xchg
push
xchg
popa
sbb
enter
jnp
sub
inc
jmp
fwait
movs
jnp
fdivr
mov
in
push
loop
adc
(bad)
adc
repz
push
add
jbe
cwde
mov
cmp
nop
fist
jp
mov
ret
mov
inc
mov
fld
mov
mov
add
pop
outs
js
stc
lahf
int
mov
sbb
div
and
dec
test
in
add
jb
and
adc
loope
(bad)
pusha
push
dec
int
scas
test
aaa
dec
or
outs
add
pop
inc
cmp
xor
sbb
ds
push
(bad)
sbb
enter
rcl
sub
jo
push
fdivr
xor
push
inc
sbb
xor
push
jo
mov
sub
into
mov
xchg
movs
adc
call
lea
push
add
jecxz
dec
ins
sbb
addr16
scas
or
or
add
mov
scas
adc
cmp
mov
in
fs
fstp
push
xchg
cli
lea
loopne
dec
in
repnz
mov
jo
push
jl
aaa
jle
mov
jg
test
sub
dec
push
push
dec
cmp
loop
mov
stos
hlt
ffreep
js
loope
in
cmp
mov
pop
test
pop
outs
imul
cmp
xor
inc
(bad)
lahf
lea
lods
rol
rcl
int
test
retf
dec
outs
dec
sahf
sbb
mov
jecxz
fsub
popa
out
rep
mov
bound
aam
jb
scas
rcr
mov
mov
or
mov
cmp
fucomp
fstp
mov
add
aad
dec
sbb
aad
pop
add
push
xchg
shr
pop
mov
and
in
jno
lahf
jns
xchg
mov
inc
sub
push
out
push
imul
mov
bound
dec
mov
lds
sbb
call
xchg
js
mov
aam
push
retf
test
mov
loopne
jb
dec
pop
or
scas
jno
mov
cmp
add
rcl
sti
dec
sbb
jge
cwde
dec
ror
daa
cdq
pusha
adc
inc
(bad)
cmc
pushf
push
mov
xlat
les
outs
std
cmc
in
int
imul
and
xchg
test
sub
sbb
rep
sbb
xchg
pop
jo
cwde
dec
add
imul
or
xchg
jo
jge
sbb
icebp
lahf
adc
test
int3
lock
enter
push
jl
outs
test
mov
add
mov
xchg
add
mov
mov
mov
cwde
and
and
iret
fwait
mov
mov
mov
(bad)
outs
int3
hlt
ret
jns
retf
jmp
data16
(bad)
movs
or
test
out
into
das
jp
mov
pusha
sbb
stos
xchg
jmp
and
int3
js
jnp
pop
inc
pop
fadd
push
clc
jmp
and
outs
shl
popf
bound
jo
mov
sbb
add
pusha
in
mov
xor
aas
enter
cmp
fisubr
outs
ja
xlat
mov
xlat
mov
test
inc
push
mov
dec
loopne
mov
sub
iret
shr
fadd
push
adc
mov
ins
pop
mov
pop
mov
adc
sbb
xor
or
(bad)
ds
repnz
xchg
sub
in
cmps
or
or
jmp
xlat
xor
lods
add
mov
sub
rcr
je
pop
add
ret
stc
mov
mov
(bad)
neg
sti
dec
add
fdivr
cs
ret
mov
rcr
mov
push
inc
dec
push
xchg
mov
clc
add
jp
retf
(bad)
and
inc
pop
dec
imul
jns
dec
es
sahf
xor
test
xchg
(bad)
fdiv
jl
xchg
call
movs
jo
jecxz
adc
(bad)
js
jl
mov
scas
test
adc
xlat
add
and
nop
mov
push
or
xchg
jns
add
lods
cmp
push
mov
lods
rol
cmps
sbb
mov
ror
ds
cld
pop
cwde
ror
(bad)
cmp
inc
inc
push
(bad)
sub
sub
test
outs
fst
cmp
clc
cdq
xor
aam
call
adc
jg
test
jmp
xchg
or
add
cmp
div
jge
ins
and
cmps
inc
and
js
loop
sub
jno
inc
aaa
retf
jg
test
push
sbb
aas
xchg
add
lock
dec
ficom
sbb
xchg
and
or
sub
xor
ror
mov
or
xchg
jae
movs
sahf
dec
into
and
ffree
cmp
inc
ret
ret
lods
pop
mov
xchg
sbb
(bad)
or
mov
sub
jns
call
into
aad
cld
je
lahf
mov
xchg
xchg
add
aas
call
inc
fs
jb
sbb
das
mov
push
(bad)
cli
pop
or
daa
xchg
xor
mov
rcl
mov
(bad)
in
xchg
jle
dec
bound
jle
sar
inc
ds
push
je
retf
xor
(bad)
test
jp
data16
inc
daa
cmp
push
ins
call
adc
aad
jne
inc
sub
xchg
push
pop
lahf
pusha
fcmovb
outs
sar
repz
cmps
xor
push
xchg
jp
arpl
ins
mov
inc
adc
push
icebp
dec
xchg
mov
fdivr
mov
sbb
retf
dec
arpl
cmp
dec
stos
sub
and
test
lods
pop
dec
mov
or
loop
xchg
scas
aaa
and
mov
sbb
dec
mov
call
loop
jns
pop
xlat
add
xor
or
imul
sub
xor
hlt
mov
dec
jo
jg
in
loopne
enter
and
sub
pop
les
ret
pop
outs
cdq
jg
xor
cmp
fwait
loop
sub
int
fcom
mov
(bad)
push
jnp
ficom
cli
xchg
retf
sbb
rol
inc
jae
pop
outs
cmp
sbb
inc
jmp
imul
sbb
clc
dec
cmp
fisubr
sub
mov
cld
pop
sar
inc
lds
inc
daa
mov
sar
ins
add
mov
sbb
jne
adc
push
xchg
cmp
mov
loop
mov
aaa
daa
aas
enter
push
inc
sbb
xchg
shl
sub
je
daa
(bad)
push
fldcw
sub
idiv
rcl
lods
cmps
sbb
(bad)
add
nop
xor
sbb
jbe
lods
sbb
stos
repz
push
mov
ret
mov
call
repnz
mov
jl
mov
jmp
xchg
out
add
scas
jb
inc
xor
mov
mov
cmp
loopne
cmc
addr16
mov
cmp
sbb
and
aam
mov
add
sub
out
popf
imul
out
ss
cmp
add
cmp
ror
fmul
inc
pop
scas
add
fwait
push
xchg
outs
adc
dec
cmp
or
shr
cmp
dec
mov
sbb
(bad)
aad
loopne
xchg
mov
repnz
addr16
mov
leave
dec
int3
ds
popa
lods
daa
ins
mov
dec
test
nop
outs
mov
scas
test
ret
fdiv
xor
in
(bad)
fdivr
not
std
fsubr
fdivr
pushf
pop
sahf
xchg
data16
push
jg
jnp
sub
inc
inc
add
sti
fwait
mov
sbb
xchg
xchg
and
ja
cmps
add
hlt
mov
imul
(bad)
bound
and
push
cmps
test
dec
adc
mov
or
pop
dec
pop
les
dec
retf
fcomp
loope
or
rol
or
sub
dec
mov
and
cmp
mov
push
retf
or
lock
mov
inc
cmp
(bad)
call
neg
sub
xor
stos
sahf
mov
jnp
lock
jmp
mov
mov
jno
adc
push
dec
ror
pop
adc
ins
daa
loop
fcomp
js
mov
jae
fisubr
jl
ret
dec
test
add
mov
aad
xchg
loope
pop
das
into
mov
jle
mov
mov
dec
pop
lea
sub
mov
mov
repnz
aam
idiv
retf
mov
pop
and
mov
test
ret
or
sbb
(bad)
add
sub
call
icebp
int3
add
shl
pop
and
sbb
xchg
arpl
xor
popa
imul
jb
into
shl
cli
js
sub
xchg
mov
inc
(bad)
xlat
lea
jbe
lods
jmp
ret
std
mov
mov
ins
add
lds
inc
sar
and
ds
sub
das
push
jl
rol
addr16
mov
xor
rol
jg
push
jae
and
jl
inc
mov
sbb
aam
xor
mov
fdivr
aaa
push
out
retf
adc
sbb
inc
cld
fs
xchg
adc
(bad)
(bad)
add
inc
mov
xor
adc
int3
pop
ret
pop
ins
ds
jle
and
mov
in
or
pop
mov
push
cld
cs
add
retf
inc
scas
mov
je
test
js
or
int
leave
mov
je
neg
hlt
xchg
je
sub
popf
cmp
add
xor
mov
or
in
add
dec
scas
idiv
ja
pusha
pop
pusha
retf
inc
push
mov
adc
stos
pushf
inc
push
out
or
xor
retf
dec
mov
or
cmp
jo
hlt
mov
mov
imul
pop
pop
xor
pop
mov
ins
(bad)
ds
ss
dec
xor
(bad)
and
popf
cmp
mov
dec
pop
test
add
imul
pop
push
test
daa
xchg
xor
inc
pop
cwde
repnz
mov
dec
jge
inc
std
jno
repnz
mov
inc
pminub
xchg
into
std
mov
ins
mov
loopne
dec
mov
mov
aam
scas
fldcw
lods
ret
ja
sub
inc
pop
push
arpl
pop
test
mov
inc
sub
sub
push
dec
jne
cmps
mov
test
shl
les
je
movs
adc
adc
add
nop
ret
iret
icebp
div
(bad)
mov
push
jl
xor
push
and
mov
sub
es
mov
(bad)
clc
adc
push
rcl
popf
inc
and
ret
int3
and
mov
mov
xchg
add
and
mov
push
aas
sbb
test
repnz
clc
xchg
std
retf
bnd
enter
retf
push
dec
dec
sub
jne
ins
repz
push
dec
fstp
jg
call
xor
xor
jl
or
cmp
pop
cmp
outs
xor
mov
jnp
xor
cs
or
ins
adc
adc
lea
add
mov
and
xchg
(bad)
pop
cli
or
jbe
call
xlat
fwait
scas
rol
rol
cmp
fucomi
inc
repz
sar
xchg
add
in
xlat
and
push
xchg
js
(bad)
jmp
in
fsubr
sbb
mov
loopne
or
shl
cld
and
repz
js
inc
mov
ret
ret
call
fisttp
xchg
popf
js
mov
movs
jg
pop
dec
or
push
adc
sub
mov
sbb
mov
inc
mov
outs
stos
mov
aad
in
mov
ficomp
scas
pop
rcr
jns
adc
invd
std
idiv
pop
mov
dec
pop
or
(bad)
pop
xor
mov
dec
clc
mov
retf
or
inc
sbb
mov
in
ret
sbb
frstor
cdq
inc
push
in
mov
ret
xor
outs
ins
sbb
outs
pop
xor
(bad)
cmp
int
fsubr
mov
das
inc
les
or
das
pop
xchg
cmp
test
daa
pop
push
out
adc
ja
std
out
jg
adc
movs
jl
(bad)
xor
shl
xor
repz
outs
stos
imul
inc
jnp
xchg
inc
jl
push
sbb
loopne
and
push
jl
inc
loopne
mov
xchg
daa
sahf
add
dec
sbb
mov
mov
and
sbb
and
mov
fdivr
or
popw
dec
iret
sbb
add
test
cwde
push
out
or
sbb
adc
and
nop
sbb
mov
je
in
jmp
cs
in
call
jns
push
mov
mov
fbld
dec
sbb
and
sbb
mov
aaa
jmp
mov
dec
lea
jbe
loop
mov
inc
sbb
xor
cmp
lea
pop
pop
inc
mov
or
xor
add
mov
fwait
jp
lahf
xchg
mov
mov
xchg
dec
mov
das
dec
sbb
retw
mov
(bad)
test
lahf
aam
push
add
adc
sub
out
into
int
sub
out
inc
mov
sub
pop
or
pop
pusha
out
test
out
xor
loopne
push
xchg
sub
imul
das
cmp
jg
or
adc
mov
lods
rcl
add
cmp
inc
xor
sar
mov
aam
xor
sbb
call
or
movs
push
ret
pop
pop
cwde
into
fst
movs
daa
movs
stc
into
data16
fs
push
sub
in
xchg
jge
mov
sub
sub
arpl
sbb
ret
clc
mov
fs
nop
xchg
popa
lds
rol
xchg
push
mov
mov
jmp
jecxz
sbb
retf
cmps
mov
sahf
in
js
idiv
pop
retf
cmc
push
xchg
in
dec
jns
mov
push
xchg
add
and
xor
sub
xor
dec
sbb
das
sub
mov
cli
sbb
aaa
sahf
push
lahf
adc
dec
pop
(bad)
jne
inc
inc
add
fdiv
and
pushf
sbb
add
pusha
(bad)
sub
sub
xor
and
dec
mov
scas
mov
hlt
push
push
loop
jae
xor
clc
cmps
push
add
cs
std
ret
aad
mov
lahf
int
cmp
jmp
cmps
pop
in
sbb
stos
cs
add
movs
xor
push
mov
stc
pop
(bad)
call
sub
sub
and
mov
jmp
scas
test
sbb
pop
push
out
inc
sbb
dec
cdq
pop
push
out
fimul
(bad)
mov
adc
mov
stos
scas
pop
and
test
out
loop
jb
push
sub
lahf
div
enter
lods
ja
fld
aad
loopne
lods
xor
jns
fwait
add
out
lods
cdq
int
adc
test
cmp
mov
cld
adc
fidiv
sub
call
push
cmp
jbe
jne
loopne
push
adc
scas
jno
(bad)
sub
idiv
sbb
inc
pop
int
cmp
inc
shr
jnp
js
bound
(bad)
push
mov
or
pop
lods
scas
jecxz
pop
sbb
mov
sub
jmp
and
jnp
rol
fbld
dec
sbb
dec
or
fucomp
xor
and
sbb
jmp
inc
sbb
adc
clc
retf
ret
test
dec
and
push
xchg
(bad)
jmp
sbb
int
adc
adc
push
movs
fcmovb
loopne
sbb
xlat
or
mov
outs
popa
cmp
cmp
clc
je
(bad)
in
push
add
jmp
xchg
pop
mov
and
and
push
pop
xor
sbb
jmp
push
pop
xchg
ret
gs
cmps
add
pop
imul
in
ret
cmp
pop
in
sub
add
in
fmul
sti
xlat
fsubr
int
or
cmc
aad
fistp
mov
cwde
sub
icebp
leave
pop
mov
iret
mov
dec
aad
ja
or
sbb
pushf
jne
xchg
out
push
cmp
or
sub
adc
pop
mov
inc
or
xor
pop
pushf
sahf
jb
pop
cs
push
sub
shl
leavew
sbb
fisubr
sub
sbb
test
dec
cld
and
and
sub
xchg
rcr
movs
out
je
sbb
gs
push
sub
or
fisttp
pop
repnz
jl
int
sub
inc
lea
push
call
cld
xchg
or
cmps
enter
or
mov
dec
and
jnp
jmp
xchg
aad
and
cs
add
es
fsub
jmp
dec
cmc
fmul
and
mov
mov
pop
sub
add
aam
dec
sub
fwait
div
mov
mov
sti
jns
xchg
jb
(bad)
fs
pop
movs
pop
sub
ret
cmp
adc
icebp
pop
in
inc
cmc
mov
mov
xchg
test
xchg
and
out
and
popa
xor
retf
in
pop
xor
push
sti
ins
fld
fwait
iret
ja
adc
rol
aad
push
test
add
pop
cmc
add
scas
add
xor
pop
out
cmp
pop
(bad)
push
dec
out
sahf
push
addr16
sti
push
or
push
adc
and
xchg
mov
lock
push
bound
iret
std
rol
sbb
popf
retf
outs
inc
mov
mov
sub
and
ja
lods
and
mov
push
add
or
sti
adc
mov
je
test
das
ret
jne
adc
xchg
(bad)
cmc
inc
pop
adc
arpl
sahf
and
cmp
clc
in
(bad)
out
push
mov
inc
test
cmc
adc
(bad)
loop
fwait
cmp
xlat
mov
cmp
mov
jle
jecxz
add
jo
ds
imul
adc
pop
js
adc
fisttp
xor
mov
(bad)
sahf
push
movs
mov
out
cmp
push
xchg
push
aaa
(bad)
or
repnz
scas
jmp
push
repz
stos
sbb
or
xchg
xlat
adc
mov
or
xlat
cld
leave
out
inc
dec
sbb
sar
pop
jae
aaa
pop
retf
xlat
mov
(bad)
push
jnp
and
or
idiv
movs
hlt
pusha
fbld
into
mov
adc
mov
adc
mov
xchg
dec
jno
pop
pusha
mov
dec
inc
or
dec
sub
xor
lock
sub
or
adc
pop
retf
jp
push
sbb
mov
pop
fbstp
dec
jbe
in
rcl
pop
test
sbb
leave
or
adc
jecxz
(bad)
dec
mov
jnp
mov
mov
inc
aad
or
cmp
xlat
je
out
out
mov
rcr
mov
add
adc
and
xchg
or
es
je
mov
fisub
cld
cdq
xor
push
cmp
int
cld
or
dec
aad
hlt
popf
dec
ret
mov
push
pop
jecxz
call
mov
ret
pop
mov
adc
(bad)
sti
mov
(bad)
jmp
mov
mov
pop
movs
inc
shl
fstp
popa
in
daa
pop
dec
pop
addr16
or
(bad)
out
addr16
push
mov
sub
lea
neg
xor
pop
or
xchg
inc
mov
or
inc
sbb
lds
call
mov
icebp
cli
cdq
fst
bound
mov
lds
mov
(bad)
push
fidiv
not
movs
add
icebp
fwait
imul
dec
std
aas
popf
xchg
and
ds
sahf
cmp
add
mov
push
xchg
inc
pop
pop
sbb
sbb
or
aas
sbb
ret
mov
fistp
xor
cmp
addr16
ret
and
push
stc
mov
sti
push
div
pushf
push
fld
inc
sbb
adc
fsub
mov
jae
outs
xchg
xchg
dec
xor
xor
mov
lods
fsubr
adc
daa
fld
test
loopne
mov
mov
sar
jo
xchg
xchg
inc
ja
adc
hlt
test
or
pop
ret
(bad)
loop
jmp
movs
push
rcr
ror
push
ds
leave
in
mov
sub
nop
fwait
mov
or
sub
xchg
sub
pop
addr16
jle
inc
imul
mov
xor
push
int
xchg
sbb
ds
add
cmp
inc
cli
(bad)
mov
inc
pushf
lock
push
jo
fisttp
xchg
cmc
dec
retf
sub
mov
aas
cdq
xor
or
out
rcr
mov
mov
fld
ret
cmps
ins
xor
mov
xor
sti
xchg
cmc
sbb
or
retf
jns
lahf
sub
mov
cmp
inc
stc
sahf
dec
push
bound
out
movs
mov
aad
in
adc
sub
ret
inc
aas
mov
in
jnp
cvtpi2ps
sti
hlt
xor
mov
push
push
mov
stos
jmp
dec
jne
popf
nop
jmp
lods
sub
(bad)
adc
in
mov
lods
jnp
add
movs
xor
scas
cmp
int
jl
mov
sub
push
in
xor
xor
push
mov
push
test
popa
jbe
mul
push
pop
das
push
icebp
das
(bad)
mov
jecxz
cmp
cli
mov
fsubr
aad
xor
mov
adc
(bad)
int3
aam
outs
dec
fs
data16
and
(bad)
adc
shl
pop
shr
jae
adc
jp
push
int
data16
cmps
js
bound
cmp
add
sahf
mov
dec
call
pushf
loope
sbb
ja
das
xor
or
xchg
inc
inc
mov
push
push
movs
int3
pop
dec
adc
cmp
dec
es
imul
jmp
pop
fwait
scas
cmps
call
clc
cmps
push
fimul
jo
sahf
mov
mov
std
adc
add
std
pop
xor
or
inc
push
push
mov
inc
shl
jl
mov
mov
ret
xchg
(bad)
ins
es
xor
lea
sub
(bad)
push
sbb
xlat
das
sahf
test
mov
test
xor
in
sbb
or
xor
mov
ret
jno
in
sub
add
popf
imul
arpl
jg
and
and
inc
cmps
fadd
lods
pop
or
jge
(bad)
je
shl
mov
push
inc
xchg
(bad)
inc
popf
test
jnp
and
shl
mov
jae
outs
stc
rol
mov
ret
push
test
dec
sbb
jl
dec
push
sti
jb
pop
fldenv
movs
xchg
jae
sub
cwde
push
das
or
dec
out
scas
push
mov
mov
pop
push
mov
mov
les
dec
inc
call
test
push
cdq
bnd
test
push
inc
rcl
stos
sub
test
cmp
dec
xor
das
xor
movs
jbe
xchg
xchg
loop
cmps
xor
nop
jnp
ror
sub
xchg
or
ss
inc
mov
add
push
add
dec
mov
push
add
inc
pop
lods
push
and
test
ret
mov
mov
xchg
xor
mov
xchg
sbb
jns
fwait
loopne
neg
push
sahf
mov
push
pop
add
xchg
outs
out
push
push
(bad)
mov
sub
mov
fdivr
fs
popf
pop
ins
cmps
cmps
sub
adc
mov
pop
mov
adc
mov
or
fistp
call
and
mov
out
push
lahf
dec
mov
mov
sub
pop
dec
mov
je
push
(bad)
mov
mov
mov
mov
ins
fmul
aas
sbb
cmps
ficomp
aas
(bad)
adc
or
dec
mov
sub
add
xor
lds
test
push
pusha
dec
mov
pop
pop
cmp
scas
xor
sub
(bad)
pop
(bad)
and
jp
in
mov
or
jecxz
in
in
stos
cmps
pop
ret
cdq
out
cmc
test
fisub
call
cdq
push
scas
and
and
iret
movs
in
and
pushf
sub
or
fsubr
inc
cmp
sbb
dec
xor
push
push
test
dec
mov
cdq
shr
enter
adc
test
and
addr16
nop
mov
push
cmps
cmp
lds
(bad)
xchg
pop
(bad)
cli
sub
int
mov
push
lds
loope
ret
sub
cmovae
sub
test
aam
test
jmp
sub
mov
daa
clc
gs
loop
lock
leave
inc
and
fcmove
mov
movs
imul
mov
aas
rcl
les
xchg
sub
ret
stc
fcomp
dec
popf
cdq
push
pop
cmp
fidivr
div
mov
addr16
cmp
outs
aas
ds
imul
add
push
movs
mov
mov
mov
stos
mov
jnp
repz
std
pop
lea
aad
xchg
clc
push
adc
push
into
aad
dec
loopne
ret
sub
fwait
dec
cmc
test
xchg
call
fwait
ja
jns
arpl
xchg
ret
movs
dec
add
stos
(bad)
inc
mov
ins
xchg
xor
daa
js
jg
popa
cmps
push
push
adc
pop
xchg
jb
and
rcr
imul
popf
jnp
push
and
or
adc
pop
cmp
sbb
or
dec
lods
push
xor
sub
rol
les
xor
jmp
cmp
addr16
scas
xor
cmp
pop
inc
(bad)
(bad)
jg
fadd
cmp
repnz
add
or
(bad)
cmp
call
pop
repnz
and
rol
es
daa
dec
ret
cmp
mov
mov
dec
inc
jb
jecxz
stc
or
cli
xor
xchg
pop
inc
jle
add
pop
fmulp
push
gs
fisttp
sar
std
outs
in
pop
lahf
push
aad
inc
inc
push
out
pop
sbb
idiv
ret
popf
xchg
loop
fisub
in
icebp
or
out
retf
fimul
push
fisubr
call
arpl
jmp
jg
(bad)
ins
arpl
or
je
pushf
jecxz
(bad)
push
sbb
pop
lods
loop
mov
int3
xor
dec
dec
dec
pop
mov
imul
mov
dec
mov
std
push
pop
xchg
je
pop
add
fmul
loope
loope
dec
jl
lock
int3
mov
sahf
popa
sbb
cmps
sbb
mov
mov
gs
(bad)
cs
jmp
mov
mul
sub
adc
(bad)
lods
out
hlt
lods
stos
jl
lea
jle
call
sub
jnp
and
jb
dec
pop
aad
(bad)
inc
sti
xchg
mov
push
jno
ins
xchg
sub
cli
sar
inc
repnz
pop
mov
jge
jbe
(bad)
in
add
mov
or
jge
sub
lods
jo
jns
inc
pushf
fcom
jbe
mov
add
stc
jnp
pop
test
mov
lock
ret
cwde
fcmovbe
cwde
mov
cli
adc
dec
sbb
loop
daa
xchg
pop
and
push
sub
sar
dec
jg
ret
mov
cmps
or
xchg
or
or
mov
dec
mov
jp
int
sbb
nop
ins
pop
ds
std
mov
pop
pop
mov
sar
mov
aas
fild
test
dec
pop
cmps
cli
or
lea
cs
push
xor
pop
pop
das
div
inc
dec
mov
ins
mov
add
popa
sub
cmp
cmp
(bad)
(bad)
and
cmp
cmps
retf
in
into
leave
jecxz
shl
xchg
adc
inc
ins
enter
push
mov
or
or
jbe
int
(bad)
cmps
add
pop
xor
shl
in
call
loopne
movs
pop
dec
ins
dec
push
xchg
and
ret
jmp
arpl
mov
pop
jne
ret
mov
jp
push
mov
std
dec
bound
cmp
jb
lds
dec
pusha
xlat
push
jg
out
jg
(bad)
out
stc
jnp
aad
cdq
mov
lock
(bad)
in
or
sbb
es
je
sub
xchg
imul
inc
inc
call
jp
xchg
popf
cmc
push
push
add
push
push
jno
rcr
xchg
fptan
inc
test
into
jb
dec
sub
push
test
sbb
out
out
sub
(bad)
xchg
fst
cmc
fwait
imul
jmp
xor
cmps
push
lock
jne
jp
push
enter
xchg
inc
out
mov
fimul
push
lahf
stos
push
pop
lahf
mov
dec
pop
sub
jne
dec
(bad)
push
cmps
mov
xor
xor
iret
push
imul
int
das
sub
cwde
aad
pop
mov
es
push
or
or
adc
ret
ins
dec
sar
jg
push
inc
cld
sbb
mov
ret
imul
pop
cmps
sub
pop
add
leave
jmp
xchg
pop
(bad)
cmp
cmp
idiv
rcl
sub
add
fsubr
(bad)
fneni(8087
mov
mov
mov
lods
dec
out
das
retf
or
inc
dec
in
pop
push
adc
shl
in
pop
sub
pop
arpl
ss
movs
mov
push
mov
mov
mov
sbb
mov
out
imul
jl
inc
mov
mov
xor
sti
repnz
push
push
ss
add
pop
repz
cdq
dec
and
shl
mov
and
sbb
add
sub
loop
mov
lods
out
fsub
mov
dec
repz
mov
scas
and
mov
aaa
sub
push
inc
and
das
mov
imul
or
sbb
mov
jmp
mov
lds
xchg
(bad)
mov
gs
ins
leave
adc
shr
add
fwait
aam
aad
mov
popf
inc
sub
mov
push
mov
dec
adc
cmp
js
inc
ret
aas
add
mov
js
repz
add
movs
mov
pop
js
mov
jmp
sbb
fmul
cmp
scas
fist
sar
push
aad
arpl
js
push
out
push
nop
push
push
(bad)
mov
pop
and
mov
pop
cs
jns
aam
mov
sahf
pop
pusha
out
lea
rcr
aas
icebp
pop
movs
mov
add
aad
lahf
and
dec
inc
adc
jp
inc
jp
clc
adc
mov
loop
fst
test
iret
mov
scas
xchg
sbb
mov
mov
mov
or
fidiv
xchg
and
enter
dec
popa
jne
fbstp
js
and
ins
lods
cmps
out
test
fld
movs
push
inc
test
int
add
ror
test
fwait
push
popf
arpl
lds
add
scas
or
pop
aas
mov
lea
xor
adc
add
dec
int
jg
imul
test
mov
push
xor
daa
movs
ja
cli
sahf
mov
jmp
jae
leave
das
xchg
mov
data16
fild
enter
add
fst
outs
pop
test
push
add
iret
outs
jl
pop
pop
jnp
jae
popf
dec
int3
sub
(bad)
xchg
sar
cs
mov
ficom
xchg
out
sbb
xor
jg
ret
and
inc
lea
cmp
idiv
pop
retf
cmps
fwait
call
aad
cmp
into
addr16
adc
test
push
mov
jle
popf
xchg
scas
sub
jl
scas
cmp
push
int
mov
mov
mov
cmps
xor
jmp
jo
jno
add
xchg
mov
sub
std
pop
dec
jmp
sbb
popa
mov
outs
dec
xor
mov
sbb
add
enter
mov
clc
inc
or
pop
iret
cmp
bound
es
xor
mov
imul
adc
inc
cli
sbb
push
outs
ins
scas
inc
inc
test
(bad)
jl
int
xor
pop
ds
dec
jge
jmp
jecxz
int
pop
pop
ror
mov
sti
ins
es
pop
xlat
mov
int
jbe
push
adc
mov
dec
pushf
lahf
mov
inc
add
clc
xor
loop
cmp
or
fsub
jmp
cmps
jb
sub
dec
mov
sbb
(bad)
mov
fild
inc
jno
jne
cmp
daa
sub
cmp
scas
dec
jo
addr16
sub
adc
lahf
call
(bad)
stc
dec
or
rol
lock
ds
push
and
adc
push
les
iret
fistp
fstp
imul
pop
mov
ja
and
(bad)
retf
scas
jne
movs
push
cmp
movs
ins
outs
ja
dec
and
jmp
cwde
sbb
mov
mov
outs
sbb
test
mov
jb
mov
call
xchg
sbb
sbb
cmp
movs
xchg
inc
mov
fdiv
je
out
retf
adc
mov
xchg
push
add
pop
mov
sbb
mov
xchg
mov
sar
int3
mov
mov
xor
xchg
mov
or
push
push
mov
retf
adc
addr16
or
mov
ds
outs
shl
jecxz
jbe
jo
adc
sbb
ds
lods
jge
pusha
add
movs
call
push
leave
std
xchg
adc
mov
pop
jae
xchg
fld
mov
push
add
sbb
mov
xor
push
test
xchg
push
cwde
adc
in
repz
mov
xchg
mov
mov
clc
int3
or
call
popa
fs
mov
push
psubusw
out
pop
sub
xchg
mov
jbe
outs
(bad)
and
cmp
enter
test
jbe
enter
cli
mul
(bad)
mov
pop
imul
jb
hlt
outs
int
scas
shl
aad
ds
mov
mov
mov
xchg
test
fadd
out
fs
les
nop
mov
sub
loop
les
jle
push
cmp
test
mov
dec
addr16
retf
fdivr
sti
cmp
(bad)
jb
arpl
add
and
mov
mov
mov
adc
mov
dec
outs
pop
inc
mov
jle
faddp
out
xchg
test
(bad)
mov
ins
xor
test
jbe
mov
scas
aas
mov
xlat
out
pop
jbe
or
pop
pop
sub
sub
enter
jp
push
aad
cmp
cli
sub
jne
jle
xchg
fsub
loope
rcl
fldcw
mov
icebp
jmp
jns
popf
(bad)
clc
fldcw
jg
rcl
sti
sbb
enter
jo
inc
test
shl
fmul
lea
daa
pop
std
test
movsx
xchg
pushf
cmp
daa
(bad)
aaa
bound
in
mov
pop
mov
addr16
add
inc
mov
mov
adc
hlt
push
push
mov
(bad)
clc
mov
test
nop
mov
inc
outs
sti
inc
push
jg
pop
jo
(bad)
lods
adc
call
int3
pop
out
push
xchg
xchg
cmc
inc
test
imul
push
pop
mov
enter
bound
push
push
push
cli
outs
sbb
sar
(bad)
lods
call
jge
gs
inc
ins
imul
fistp
mov
xchg
aam
cmp
xor
jg
aas
pop
fiadd
push
test
pop
add
xor
push
mov
cmps
mov
mov
mov
sub
call
into
add
add
jb
std
nop
(bad)
pusha
pop
xlat
inc
shl
add
je
add
xchg
test
add
fcomp
xchg
das
push
sbb
and
sub
fs
std
repnz
(bad)
dec
xor
pop
div
cmp
sub
xchg
cmc
or
xlat
enter
inc
(bad)
xor
stos
cdq
dec
mov
je
mov
push
adc
or
pop
clc
imul
es
mov
neg
add
push
dec
ins
adc
fcmovb
es
test
iret
ret
ss
ja
test
das
std
lods
call
adc
jmp
aad
sub
xor
imul
mov
mov
jg
fdiv
pop
mov
adc
jle
or
out
and
xor
imul
ror
or
jg
cld
test
(bad)
sub
hlt
mov
push
cmp
fld
xchg
mov
int
lea
shl
test
fisubr
cmp
mov
push
aaa
hlt
mov
fdiv
mov
mov
inc
cmp
retf
and
fmul
sti
idiv
sbb
enter
mov
add
cdq
cli
push
out
cmp
sub
xbegin
addr16
jp
push
push
fnstcw
mov
enter
xor
add
imul
jb
fist
out
sbb
dec
xor
adc
inc
daa
xchg
sub
fstp
adc
mov
mov
stos
mov
mov
and
jae
scas
and
xchg
jno
mov
sub
popf
adc
lahf
aaa
rcr
(bad)
lods
mov
sub
call
jo
cmps
cdq
outs
(bad)
fst
je
addr16
xchg
(bad)
jno
jg
sub
lods
or
mov
xchg
retf
adc
out
es
xchg
adc
push
cdq
mov
mov
or
sbb
in
shl
outs
inc
dec
add
xchg
push
aaa
cwde
push
inc
pop
pop
idiv
lock
repz
inc
pop
sbb
and
pop
lahf
jg
enter
mov
call
and
or
cwde
mov
adc
loopne
or
pop
retf
stc
jmp
mov
mov
mov
or
outs
(bad)
pop
dec
call
mov
cmp
jbe
dec
sub
sbb
movs
push
pop
mov
fadd
inc
loop
imul
push
pop
jmp
jb
daa
jmp
push
dec
push
in
push
push
leave
(bad)
xor
call
inc
enter
pop
dec
lahf
sub
sub
or
mov
sub
sar
std
pop
adc
int3
add
push
loope
repnz
pop
test
pop
into
add
js
xchg
test
mov
xor
mov
lods
add
sbb
sbb
outs
and
fwait
jl
out
test
neg
adc
ret
sub
push
call
imul
(bad)
push
movs
push
push
adc
fiadd
cdq
cli
mov
and
movs
adc
xor
(bad)
jle
out
test
cli
and
xchg
stos
push
pop
xor
cmp
mov
xor
pushf
mov
jb
dec
pop
loop
pop
jge
adc
mov
push
push
loope
jle
sbb
adc
dec
mov
jbe
icebp
je
pop
shl
std
dec
jo
cmp
cmp
das
xor
fsubr
mov
cmps
mov
leave
fidiv
xchg
data16
sbb
(bad)
xchg
pushf
loopne
ins
inc
int
ins
mov
xor
push
inc
inc
push
out
cmps
rcr
lds
stos
dec
lods
adc
popa
pop
addr16
ds
jb
sbb
cmp
xor
add
xchg
mov
jb
popf
pusha
retf
xor
cmp
div
mov
aad
push
xor
ds
or
test
mov
inc
test
test
cmp
lahf
into
jns
imul
imul
loop
int
lods
in
jmp
adc
cs
nop
fstp
cmc
mov
cmps
mov
neg
push
(bad)
(bad)
adc
inc
movs
mov
repnz
hlt
dec
ins
in
cmp
pop
inc
sahf
fiadd
xchg
push
(bad)
cld
icebp
rcl
es
cmp
dec
or
adc
dec
ret
sbb
add
std
or
jecxz
sub
sub
out
sub
into
hlt
jmp
sbb
pop
sti
stos
bound
xor
sub
cmc
fcmovbe
(bad)
adc
aam
fcomi
push
jge
leave
push
cmp
add
and
out
je
xchg
xor
jo
lea
and
mov
push
test
bound
jno
ficom
inc
ret
popf
mov
mov
fs
mov
jmp
shl
mov
int
in
call
xchg
mov
dec
loope
sub
pop
fldenv
mov
in
rcl
dec
adc
add
leave
outs
pop
gs
or
push
leave
(bad)
mov
pop
push
jl
loopne
scas
inc
lds
jne
cwde
jo
(bad)
icebp
loopne
(bad)
out
xchg
call
cmp
xchg
fs
bswap
sub
push
mov
and
scas
in
mov
imul
adc
shr
fisub
pop
lea
xor
and
leave
fwait
ret
cmc
daa
add
push
push
inc
adc
add
push
mov
push
stos
xor
or
push
mov
ror
gs
ja
das
and
and
cmp
mov
push
mov
cmp
aad
lea
cdq
dec
and
cld
and
mov
rcr
mov
xor
stos
shl
cmp
fnstenv
nop
(bad)
bound
jae
cmps
lahf
push
xchg
ret
sbb
and
add
loop
or
pop
push
ror
ficom
repnz
movs
pop
fisttp
rcr
push
icebp
fisub
and
adc
jne
push
mov
xchg
bound
(bad)
cmp
inc
pop
gs
sysexit
(bad)
comiss
cdq
(bad)
sub
jnp
dec
inc
mov
scas
pop
into
out
xchg
pop
add
arpl
jb
(bad)
into
cld
add
push
xor
xor
sbb
pop
push
(bad)
mov
jmp
or
add
stc
lahf
xor
fdivr
mul
inc
sbb
xor
int3
push
xchg
jbe
sbb
fiadd
inc
stos
mov
pop
out
test
and
xchg
pushf
xor
enter
push
mov
jo
mov
imul
xor
les
dec
loopne
sub
fcmovb
test
jb
in
in
arpl
and
xor
pushf
pop
sbb
pop
mov
and
leave
push
sub
dec
pop
arpl
or
adc
call
movs
nop
dec
repz
cli
pop
test
stos
clc
dec
loop
daa
outs
or
repz
push
push
mov
add
popf
in
cmp
fwait
push
fdiv
stos
jl
dec
mov
imul
enter
or
mov
adc
sbb
enter
ret
push
or
mov
lea
mov
add
sub
mov
sub
pusha
bound
into
test
jp
dec
int
into
xlat
call
aaa
retf
scas
into
push
inc
test
imul
or
pop
mov
push
adc
push
push
xchg
inc
push
push
push
retf
pop
mov
movs
xchg
sar
jmp
pushf
rol
lock
movs
mov
cmps
jmp
sub
push
jno
cld
cld
dec
sahf
sbb
outs
nop
pop
adc
addr16
aaa
dec
mov
aaa
out
dec
adc
scas
std
mov
pop
jg
pop
fmul
repnz
sub
outs
ror
inc
sub
out
dec
popf
adc
hlt
sahf
int
mov
cmp
fs
mov
(bad)
fwait
jnp
cmp
xchg
mov
xor
lods
clc
mov
inc
aaa
xadd
xchg
sbb
(bad)
je
test
mov
in
neg
(bad)
xor
cld
push
fs
cmp
push
sub
mov
push
aaa
outs
test
and
dec
test
sti
sbb
jne
movs
out
shl
lahf
jle
rcr
mov
mov
cs
cmp
in
mov
mov
mov
das
pusha
push
mov
adc
movs
pop
pop
inc
imul
call
xchg
cwde
pop
movs
mov
and
shl
arpl
dec
fs
out
cmc
xchg
test
in
sbb
(bad)
lock
les
dec
cdq
push
inc
sub
outs
sbb
(bad)
mov
rcl
or
enter
fnclex
push
call
inc
imul
stos
in
xor
ss
repnz
push
push
in
fdiv
shr
(bad)
fld
shl
lahf
xchg
mov
std
aam
outs
fsub
pop
push
out
jle
jo
loop
sbb
aad
nop
sar
cmps
mov
dec
jge
push
add
add
inc
neg
fistp
popa
mov
or
mov
mov
lea
inc
(bad)
jbe
jp
(bad)
js
je
mov
out
mov
inc
enter
out
or
lods
add
add
jo
jle
clc
pop
mov
adc
dec
jmp
dec
fdiv
jge
jl
push
sbb
xchg
popa
mov
push
ins
pop
cmp
rcr
push
inc
scas
out
dec
dec
jg
push
cmp
add
jp
add
movs
mov
in
push
loope
fs
in
(bad)
aas
pop
scas
(bad)
push
xchg
lock
add
push
imul
mov
inc
push
pop
xchg
adc
movs
jle
ja
and
mov
lahf
loope
es
scas
mov
outs
mov
mov
movs
lea
jb
inc
inc
adc
and
adc
movs
inc
shl
xor
inc
mul
loopne
push
add
shl
jle
cli
and
jno
stc
jnp
jbe
out
call
cmp
mov
lods
scas
lods
xchg
add
test
repnz
stc
cmps
ins
xor
test
inc
pop
retf
push
mov
mov
test
pop
lahf
mov
pop
jo
mov
or
fcmovne
fwait
jns
cmp
add
sbb
fld
fwait
(bad)
fisub
clc
iret
aam
inc
mov
sub
pop
(bad)
outs
repz
jbe
leave
add
inc
xor
and
sbb
addr16
neg
mov
idiv
sar
dec
inc
jo
ss
push
push
sar
cld
std
lods
(bad)
fdivr
(bad)
or
jns
or
not
pop
call
sub
fs
mov
inc
sbb
jno
arpl
outs
outs
out
dec
inc
loope
leave
mov
jae
(bad)
fsubr
jne
test
cs
mov
sub
xlat
ins
lods
push
adc
cmp
int
ror
js
in
xchg
jmp
mov
xor
or
mov
jg
pop
and
leave
fistp
inc
daa
sbb
mov
push
inc
jmp
shr
sbb
cli
jns
(bad)
stc
mov
jno
(bad)
daa
jecxz
int
fcmovnu
test
cmp
fcmovb
pop
sbb
xor
(bad)
pop
imul
js
push
repnz
add
push
cwde
mov
mov
clc
jle
pushw
leave
call
fdivr
es
popf
stos
pushf
jo
stos
push
retf
mov
retf
in
dec
jle
movs
adc
add
adc
pop
dec
add
ins
xchg
inc
pusha
mov
xor
pop
mov
xor
pop
enter
div
aam
outs
ins
inc
push
cmove
pusha
inc
mov
stos
lds
js
popa
shl
inc
or
std
daa
bound
imul
lds
(bad)
popf
cmp
push
cmp
(bad)
stc
add
ret
cli
mov
lahf
dec
into
inc
addr16
fistp
xchg
pop
ins
aam
aam
lock
sti
cmp
ret
outs
ds
pop
or
jbe
in
xchg
rcl
jo
or
and
fucom
push
add
ret
sbb
ret
(bad)
cmp
cmps
adc
sti
mov
cdq
ja
lods
bound
add
fsub
xchg
jne
sbb
cmp
mov
mov
in
cdq
cdq
mov
gs
dec
or
out
bound
cdq
int3
stos
add
mov
mov
int3
and
adc
sbb
mov
imul
cmp
cmp
sti
mov
jmp
add
into
inc
sbb
sub
sub
test
pushf
aad
xor
mov
xor
dec
pushf
xor
and
test
adc
test
mov
or
sar
mov
retf
mov
fcom
aam
test
sub
jg
movs
je
imul
inc
cmps
and
ins
cwde
dec
mov
and
cmp
mov
mov
pusha
fidiv
jp
je
fld
neg
adc
mov
and
xchg
inc
mov
inc
jne
in
sub
pop
mov
cmps
xlat
jl
fadd
add
shr
dec
cmp
fisttp
nop
out
sub
fwait
ret
in
int3
stos
loop
sbb
lea
add
cs
inc
stos
jmp
bound
loope
xor
fdiv
add
cld
add
push
jne
leave
jns
sub
push
adc
mov
add
mov
call
and
sub
mov
bound
scas
and
nop
outs
(bad)
pop
sub
lock
sub
xchg
fsubr
pop
stos
aas
ins
loopne
in
dec
in
(bad)
clc
jge
push
fimul
sti
jp
xor
sbb
push
cmp
aam
add
mov
ds
es
je
jno
xchg
int3
push
lahf
mov
cmp
and
mov
mov
(bad)
mov
cdq
popa
int3
lods
and
les
cmp
call
int
inc
movs
jle
adc
mov
out
ds
scas
push
in
ins
push
push
or
movs
dec
int3
sbb
das
pop
mov
aaa
fstp
mov
(bad)
or
movs
push
les
cmp
iret
test
cdq
xchg
dec
mov
out
and
dec
scas
jle
mov
shl
sbb
mov
(bad)
and
stc
mov
cmp
and
movs
mov
out
adc
addr16
adc
imul
or
jmp
arpl
call
mov
mov
dec
inc
sub
dec
aad
jae
scas
mov
test
cmp
cmp
or
fbstp
aam
dec
push
fiadd
mov
in
cmp
dec
xchg
sbb
sbb
sub
les
push
mov
inc
ds
dec
idiv
repz
lods
push
push
(bad)
xor
fldcw
(bad)
jbe
imul
and
mov
imul
and
add
and
sub
adc
test
adc
imul
sbb
sub
retf
jge
cmp
std
and
in
jnp
mov
mov
fild
push
rcr
jae
jb
call
stos
xor
xchg
and
and
sbb
outs
daa
ins
fdivp
jmp
push
xor
cmps
sbb
jl
aad
icebp
ror
or
ins
dec
int
jne
sahf
stc
inc
sub
ins
call
fcom
pop
dec
js
fidivr
ret
(bad)
popa
dec
ss
or
xor
iret
addr16
push
mov
loopne
xchg
pusha
clc
(bad)
jmp
aaa
popa
push
jns
ins
push
lods
add
jo
or
push
cmp
inc
scas
and
out
(bad)
xchg
mov
push
xchg
hlt
jle
pop
(bad)
jbe
inc
neg
add
int
and
scas
call
arpl
(bad)
jle
jb
(bad)
in
mov
mov
jp
pop
xor
scas
push
xor
or
stos
fwait
mov
mov
pop
movs
mov
add
mov
sbb
inc
lds
cmp
push
callw
or
xor
cmps
or
in
add
shl
retf
sar
retf
and
sbb
cmp
(bad)
pop
repz
jg
inc
iret
out
lds
mov
sub
ret
sbb
jp
shr
repnz
bound
(bad)
mov
sub
and
push
mov
(bad)
jg
lds
or
fwait
in
xor
jno
mov
mov
push
xor
std
pop
dec
ss
sub
dec
push
pop
icebp
movs
loopne
in
sbb
cs
and
xchg
push
cmp
cs
popf
jno
aaa
cdq
(bad)
idiv
(bad)
xchg
repz
push
in
xor
loope
and
lods
xchg
in
cmp
jg
jmp
sahf
int
fimul
mov
add
imul
icebp
hlt
push
jl
mov
int3
dec
xchg
ss
leave
mov
xchg
pop
cmp
fsubrp
mov
(bad)
call
cli
leave
xchg
sbb
test
cmp
pop
mov
dec
xor
iret
shl
push
mov
test
inc
push
ficomp
mov
clc
add
scas
pop
xor
scas
or
xchg
icebp
lods
out
adc
jnp
or
and
test
popf
mov
sbb
cmp
cmp
data16
mov
aaa
fild
imul
fistp
push
inc
xchg
add
jmp
and
sub
and
sar
inc
add
pop
inc
clc
jmp
and
loope
mov
cs
mov
mov
push
mov
pusha
and
sub
dec
xchg
mov
(bad)
sub
cmp
mov
hlt
adc
fsubr
shr
sbb
pop
push
enter
ret
push
sbb
mov
mov
jnp
xchg
shr
pop
push
inc
out
cmps
(bad)
jbe
jnp
jno
ins
(bad)
push
sub
clc
or
icebp
add
dec
or
bound
ins
push
sbb
cmp
mov
adc
test
dec
mov
call
imul
mov
in
adc
in
call
(bad)
mov
int3
sar
(bad)
imul
stc
mov
shl
add
or
out
call
jne
inc
mov
(bad)
jle
stos
in
mov
add
jb
jge
push
sbb
std
scas
outs
push
popa
stos
repz
jb
mov
xchg
aas
jle
adc
push
xchg
jae
bound
or
cmps
jge
mov
and
mov
xor
das
(bad)
int
iret
scas
add
sti
xchg
mov
movs
xor
cmps
cli
sbb
sub
das
stos
stc
jge
ret
jge
push
enter
fstp
in
test
sbb
lds
shl
and
dec
mov
inc
mov
xchg
adc
xchg
mov
inc
imul
jp
leave
lds
xchg
pushf
inc
cdq
xchg
cmp
aam
inc
xor
lds
outs
cmp
cmp
pop
lea
and
adc
mov
xor
xchg
cmp
cmp
das
ss
cmp
lods
mov
inc
mov
sbb
xor
fisubr
shl
scas
inc
jle
cdq
xchg
dec
xchg
push
cmp
int3
scas
dec
ins
pop
add
test
je
shl
mov
sub
sub
inc
mov
in
scas
aaa
jmp
scas
mul
inc
dec
es
xchg
or
pop
mov
rcl
imul
shl
or
pop
aas
sub
or
in
xchg
pop
(bad)
cld
inc
push
push
mov
call
push
lahf
imul
fimul
pop
pop
movs
cmps
ds
daa
lods
in
jl
clc
shr
pop
mov
sbb
adc
or
ins
mov
bswap
in
push
mov
fnsave
repnz
lock
gs
fucompp
mov
dec
ret
test
imul
pusha
push
rol
jp
adc
mov
adc
inc
call
fsub
rol
inc
aaa
sar
mov
loopne
je
movs
adc
add
aas
sbb
fs
mov
inc
adc
mov
jo
nop
jmp
jge
mov
sbb
cmp
imul
xor
into
pop
xchg
sub
add
xchg
out
mov
out
cmps
inc
add
fmul
pop
pop
sbb
cmp
stos
push
dec
cmp
xlat
cmc
imul
dec
das
lds
ins
ins
push
and
fimul
js
test
sbb
ds
sbb
ja
outs
mov
push
out
cmps
mul
push
cli
ss
gs
movs
popa
in
xchg
sti
inc
push
mov
aas
sbb
cmp
ficom
jbe
repz
or
jb
jp
sar
fwait
lock
push
rol
xor
sbb
call
repnz
jecxz
jle
inc
movs
pop
push
(bad)
std
ret
int
(bad)
loope
fwait
jae
in
in
ror
iret
into
mov
inc
jle
jmp
cdq
push
je
adc
jo
lods
js
mov
shl
ja
ss
add
(bad)
fs
and
jo
imul
sbb
js
or
push
dec
mov
jo
out
mov
stos
sub
mov
add
daa
add
xor
push
loop
icebp
xlat
mov
dec
sti
cdq
mov
xchg
add
sahf
mov
pop
(bad)
lahf
jecxz
repz
pop
mov
pop
mov
push
scas
leave
jns
sub
sbb
sbb
mov
in
retf
test
lds
ss
and
pop
cmp
push
push
aaa
or
add
mov
(bad)
in
neg
mov
sahf
aad
scas
lods
push
cmp
cli
das
mov
dec
mov
cli
adc
inc
call
cmp
in
fidiv
xchg
shr
add
xchg
(bad)
adc
add
inc
or
fcmovb
xchg
cs
jmp
fwait
sub
mov
pop
scas
push
sbb
dec
leave
shr
push
fs
clc
test
ss
dec
push
inc
adc
fsub
test
dec
fmul
gs
add
add
pop
xor
or
dec
jmp
or
mov
pop
out
fcomp
dec
loope
inc
xor
imul
lock
or
cmp
pusha
(bad)
mov
adc
pop
popa
dec
mov
nop
xor
jmp
mov
in
pop
pop
xor
pop
mov
test
ja
rcr
into
lods
mov
(bad)
fwait
add
adc
daa
jo
and
bound
jno
jno
push
sub
xchg
push
outs
movs
inc
in
out
(bad)
cdq
xlat
sbb
add
mov
mov
ins
xor
push
pop
ret
cmp
push
outs
jne
clc
jle
iret
push
in
in
dec
pop
rcl
jne
sbb
data16
(bad)
xchg
push
sbb
inc
movs
rcl
jmp
fst
xor
jmp
cli
pop
arpl
int3
and
test
aaa
jl
mov
adc
or
es
inc
std
push
push
cli
jge
addr16
vmovsldup
repnz
popf
cwde
(bad)
mov
xor
(bad)
and
loopne
ds
(bad)
cmp
scas
rcl
sahf
sbb
sub
shr
fwait
retf
mov
out
mov
xchg
inc
xchg
mov
jae
lea
js
sar
dec
imul
xchg
retf
mov
jmp
xchg
(bad)
ins
xor
mov
add
push
lock
in
push
rcr
imul
lea
adc
jo
jmp
dec
add
sub
sub
or
call
test
leave
retf
and
push
je
sub
cdq
int
je
pop
sbb
dec
xor
push
jb
(bad)
data16
stos
push
and
mov
xor
cdq
inc
test
stos
cmp
neg
adc
xchg
mov
in
stos
jmp
xlat
sti
mov
in
xor
cmp
fistp
mov
sbb
cli
cmp
test
loopne
ja
data16
dec
out
or
jo
lods
jnp
retf
push
scas
ret
pusha
or
movs
or
sbb
pop
push
pushf
xchg
dec
arpl
out
and
shl
repz
jg
fwait
or
inc
rol
xlat
mov
cdq
inc
stos
enter
add
pop
xchg
movs
cmps
ror
push
inc
(bad)
lods
mov
popf
shr
cdq
jecxz
(bad)
push
mov
fstp
and
xor
push
xor
shl
push
popf
mov
jnp
xchg
jno
out
xchg
out
ins
push
repnz
arpl
ins
sahf
test
jl
jmp
test
mov
call
lahf
retf
lahf
or
imul
mov
pop
mov
dec
iret
(bad)
pop
xchg
cmps
pop
lock
aas
ja
cmps
sbb
ins
scas
adc
or
push
inc
loopne
mov
sar
mov
(bad)
addr16
sbb
xchg
leave
sbb
or
das
jb
and
pop
stos
cmp
lahf
pop
add
push
pop
dec
mov
call
pop
add
mov
dec
sub
xchg
mov
sbb
stos
sbb
sub
pushf
movs
xchg
cwde
fcom
(bad)
sbb
gs
xchg
mov
(bad)
xchg
je
or
in
test
xchg
inc
xor
movs
cli
icebp
mov
mov
lock
cmps
outs
pop
sbb
js
push
inc
loop
stc
jns
hlt
add
xor
and
and
rol
icebp
in
mov
dec
mov
xchg
in
in
or
jmp
pop
cdq
call
int3
jnp
lahf
int
xchg
std
aaa
lahf
mov
les
shr
push
faddp
pop
mov
pushf
scas
add
dec
jb
add
add
jae
dec
(bad)
ja
movs
dec
adc
rcl
(bad)
dec
and
test
pusha
mov
(bad)
mov
push
jg
outs
fs
out
mov
nop
in
stc
jecxz
push
ret
push
sti
imul
dec
repz
cmc
adc
cmp
lods
mov
ja
xor
into
inc
xchg
push
dec
leave
jae
call
push
add
mov
xchg
mov
call
fild
fnstenv
stos
sub
pop
jl
ret
shl
shl
push
adc
fild
sbb
enter
jge
xchg
or
adc
cs
mov
and
adc
in
jle
aam
ret
cmp
mov
(bad)
push
mov
loope
std
cmp
sbb
clc
scas
aad
push
sub
lods
mov
(bad)
outs
or
sub
xlat
mov
jecxz
dec
push
cs
push
xor
repnz
aas
mov
and
test
imul
pop
xor
mov
(bad)
xor
fld
es
and
pop
arpl
pop
(bad)
fldcw
pusha
xor
test
add
mov
fild
popa
retf
into
push
shl
mov
adc
xchg
and
fld
mov
cmp
or
and
and
push
imul
jge
pop
push
and
jmp
cli
push
loopne
and
outs
int
mov
int
jbe
ror
dec
inc
int
xor
lahf
int3
call
inc
cmp
or
dec
ins
lahf
stos
adc
icebp
dec
(bad)
cli
mov
movs
cmp
inc
call
dec
loop
add
inc
or
push
out
push
push
pop
clc
fimul
pop
xchg
and
in
pop
and
or
in
dec
pop
repnz
pushf
into
add
push
imul
jae
cmps
data16
test
lock
inc
jmp
sbb
mov
push
fyl2xp1
xor
jg
fs
cmp
lock
stc
adc
test
loopne
dec
inc
add
fldenv
adc
clc
sub
mov
out
jecxz
or
cli
cmps
cwde
shl
leave
fcomp
ret
jg
sbb
aas
mov
cmp
dec
bound
cld
test
movs
ret
call
inc
cdq
outs
imul
inc
mov
mov
jp
xlat
test
push
fistp
das
push
js
inc
jo
(bad)
inc
cmp
mov
cmp
mov
sub
div
mov
dec
or
stos
loop
push
and
xor
mov
or
icebp
mov
mov
pop
mov
and
dec
mov
mov
and
movs
(bad)
or
cmp
inc
int
fnstsw
sub
mov
jge
sub
imul
or
daa
add
jnp
mov
xchg
movs
(bad)
loope
xchg
mov
lds
mov
aas
out
sub
jmp
gs
xlat
sbb
dec
les
icebp
and
sti
mov
jecxz
mov
xchg
loope
int3
mov
add
imul
aas
push
push
push
jp
nop
pop
jno
sub
cmp
mov
je
ds
mov
adc
shl
out
(bad)
mul
xchg
imul
xchg
pop
pop
adc
inc
cdq
sub
stos
iret
addr16
mov
push
pop
test
dec
into
push
sti
pop
pop
add
ret
cmc
push
add
js
add
out
add
mov
dec
mov
sar
clc
sub
pop
dec
adc
lds
(bad)
adc
ss
sar
adc
int
xchg
adc
sub
add
push
jl
dec
pop
shl
jmp
xlat
cmp
inc
push
sbb
mov
icebp
push
cmp
jno
sahf
mov
jp
xchg
test
out
jge
stos
jmp
call
xlat
int
add
jb
cmp
jbe
int3
cmp
push
mov
pop
ins
jno
add
sub
ins
and
mov
in
xchg
cli
push
cmp
adc
mov
call
scas
adc
lahf
mov
xlat
scas
cmp
fs
outs
je
dec
adc
loopne
fadd
out
dec
xlat
cwde
jmp
xor
aam
pop
jp
(bad)
retf
mov
ja
jecxz
sbb
das
xchg
mov
idiv
data16
test
hlt
dec
shr
and
mov
out
(bad)
xor
jno
sti
dec
test
sbb
scas
jmp
dec
or
mov
adc
push
xor
xlat
sbb
push
pop
add
imul
cmp
push
or
loopne
push
adc
aaa
daa
or
idiv
loope
jp
repnz
out
pushf
cmc
pop
or
ret
outs
loop
jns
dec
mov
mov
fcmovnu
xchg
inc
pop
mov
mov
or
movs
add
icebp
pop
jb
gs
add
int
dec
sbb
xchg
lods
cld
ja
adc
adc
or
xor
jmp
push
aas
std
sahf
jecxz
ret
pop
out
add
xchg
fist
xor
pushf
xor
jbe
clc
push
out
stos
mov
fidivr
(bad)
jo
test
add
js
iret
mov
pop
push
sti
inc
retf
js
imul
fs
jne
out
adc
cmps
mov
mov
cmp
dec
(bad)
or
xchg
dec
ss
sahf
and
jbe
gs
or
das
cld
sub
cmps
add
(bad)
(bad)
packsswb
jge
test
aaa
inc
shl
sub
add
int
cmp
add
jg
daa
jge
push
(bad)
mov
inc
fld
icebp
and
inc
nop
das
fdivr
inc
pushf
cmps
dec
cmp
cmps
xchg
cmp
sub
mov
aaa
jge
lock
imul
inc
xor
sbb
pusha
pop
mov
rol
lock
mov
adc
inc
mov
mov
pop
pop
rol
add
(bad)
jmp
call
push
mov
cmp
cld
jmp
pop
mov
cmp
dec
sub
shl
test
cs
pop
xor
inc
mov
dec
xor
cld
mov
pop
fcom
cmp
push
aas
xchg
nop
xor
imul
xor
clc
sub
in
leave
push
adc
stos
(bad)
js
mov
jno
jb
retf
bnd
out
pop
ds
in
stos
mov
stc
fimul
and
or
arpl
pop
lods
stos
jne
jecxz
push
add
xchg
pop
repnz
in
neg
lods
mov
cmp
inc
in
xchg
aaa
test
cmp
adc
push
aam
sbb
mov
mov
aas
push
into
pop
bound
push
fsubr
cmp
pop
movs
dec
stos
sbb
out
jbe
aad
jae
stc
repnz
lea
pop
ffree
cs
nop
das
add
and
cs
cwde
mov
push
mov
lahf
or
or
(bad)
sub
push
scas
mov
rcl
xor
fbld
and
dec
jmp
lods
jle
repz
add
add
ss
sub
retf
cmc
dec
stos
xor
cdq
push
push
in
call
mov
dec
adc
push
movs
aad
sub
mov
pusha
ret
stc
add
cmps
test
push
pop
push
arpl
adc
push
cli
pop
repz
mov
pop
mov
xchg
sub
leave
add
shl
fwait
aas
cmp
mov
mov
jl
add
ud0
sbb
pop
cld
cld
in
xor
ss
or
sahf
inc
and
into
fs
lods
inc
cmp
std
(bad)
mov
xor
in
lock
fmul
jge
(bad)
lea
xchg
mov
xlat
bound
jmp
rol
shr
aam
mov
push
vpmacssdqh
cmc
xlat
cmp
arpl
sar
dec
cmc
sbb
ins
push
jbe
sti
push
imul
lods
adc
jp
push
add
cmps
adc
sub
div
mov
popa
stos
mov
mov
cmps
and
(bad)
bound
xor
hlt
hlt
ficomp
push
loopne
test
test
pop
movs
sub
outs
jmp
js
jae
mov
addr16
or
mov
sub
in
push
mov
mov
lods
dec
fcomp
cmps
ror
xor
mov
fist
(bad)
push
loop
scas
or
add
push
jp
in
push
jmp
sub
scas
jb
xchg
mov
push
test
lods
addr16
sbb
dec
je
push
and
ja
xchg
mov
loopne
imul
icebp
add
cmc
sbb
push
and
sub
retf
xchg
xchg
pop
push
xchg
fs
xchg
dec
loop
aam
ins
push
or
mov
sti
sbb
jmp
push
aas
add
mov
push
out
ret
stos
das
cdq
ins
scas
retf
push
sub
sub
ror
ins
movs
mov
mov
outs
outs
mov
xchg
xchg
dec
mov
(bad)
hlt
bound
sahf
push
(bad)
jge
movs
cmps
addr16
popa
dec
aaa
sbb
popa
mov
pop
xchg
mov
xchg
pop
cmp
dec
sbb
fld
sbb
push
into
mov
nop
ret
sbb
lock
jl
cmp
xchg
scas
pop
xchg
xchg
adc
pop
imul
stos
into
aaa
imul
dec
mov
xchg
jle
fs
popf
outs
sub
adc
mov
jecxz
mov
mov
mov
jnp
adc
mov
mov
sbb
mov
mov
cwde
gs
xchg
loope
cmc
xor
jecxz
xor
dec
push
cli
mov
jmp
cli
pop
adc
bound
int3
xor
or
cdq
stc
aam
inc
call
push
pushf
daa
scas
mov
sti
pop
mov
lock
pop
das
(bad)
test
imul
mov
add
mul
dec
cmp
sbb
test
jb
sub
das
push
mov
cmp
mov
cmp
xchg
es
dec
jb
inc
sahf
sub
xor
xchg
xchg
out
pop
ds
jl
imul
jae
sub
xlat
sub
int
aad
and
mov
in
push
ds
inc
dec
mov
pop
test
ds
mov
sub
jb
repnz
outs
mov
jge
retf
xor
sahf
jmp
mov
clc
ret
push
sbb
lods
xchg
gs
xchg
movs
pop
dec
jp
cmp
dec
lods
cli
mov
push
das
mov
out
ret
cmp
in
out
cmp
cmp
pop
adc
or
(bad)
and
inc
cmc
sub
ret
js
dec
add
jg
jbe
sti
push
sub
movs
pop
mov
test
jp
jmp
push
and
xor
std
fst
push
jl
(bad)
test
xchg
jecxz
outs
out
xor
pop
dec
ror
or
pop
push
jg
push
and
fist
fistp
cmp
fcomp
adc
(bad)
das
in
sbb
adc
call
pop
sbb
pop
test
mov
xchg
dec
cmp
(bad)
and
dec
mov
fistp
loopne
mov
push
sbb
rcr
pop
mov
stos
push
fs
test
icebp
hlt
icebp
sbb
jb
and
mov
loopne
pop
adc
in
ds
clc
push
mov
lods
push
pop
test
sbb
mov
jmp
lods
daa
jg
mov
test
cmp
fdiv
cmp
add
loope
sub
shl
rol
jno
sar
cmp
rcl
sbb
icebp
pop
jle
dec
mov
jbe
and
outs
aas
jae
jle
xchg
xchg
in
shr
sbb
ins
mov
push
and
add
pop
into
shr
rcl
mov
jns
aam
pop
shl
test
std
les
aad
sub
mov
(bad)
cld
std
xor
sbb
iret
jle
sub
and
inc
xchg
dec
mov
std
in
test
jmp
jb
nop
out
arpl
sbb
sbb
mov
es
push
mov
test
scas
add
push
xchg
mov
jae
jl
(bad)
jecxz
ret
dec
cmp
xor
xchg
ds
sbb
jnp
lock
test
add
mov
sub
xchg
jae
push
addr16
and
inc
mov
and
mov
pop
jmp
push
sbb
mov
mov
sbb
jmp
mov
push
pop
xchg
inc
jg
or
sub
push
dec
out
push
dec
lahf
fwait
pop
out
xor
ffree
add
inc
sti
mov
push
dec
not
es
sub
sub
add
(bad)
aas
js
mov
push
xchg
mov
mov
inc
mov
mov
pop
bound
sub
fidivr
bound
inc
ja
fsubr
je
neg
push
sub
retf
jg
popa
push
shl
(bad)
(bad)
hlt
call
xchg
and
std
lds
jno
cmc
adc
jp
popf
sub
dec
rcr
sub
pop
inc
ret
inc
out
iret
(bad)
mov
enter
mov
in
cmp
cdq
sbb
repnz
inc
mov
add
cwde
inc
push
pop
jo
aad
pop
xor
jge
or
mov
cmp
ss
push
add
xlat
(bad)
stc
icebp
jmp
(bad)
mov
mov
sbb
jnp
sti
mov
ss
ret
hlt
pop
pop
inc
daa
push
hlt
add
push
and
push
push
pop
add
adc
int
and
jnp
ja
popa
and
mov
fcmovnu
cmc
pop
hlt
push
sbb
dec
(bad)
ficom
xchg
cmp
and
cmp
jno
or
fistp
push
pop
out
xchg
in
mov
or
dec
std
movs
push
or
imul
or
mov
add
mov
dec
xor
loopne
push
mov
cmp
imul
push
fnsave
sub
in
nop
mov
or
cwde
int3
jnp
jmp
or
into
mov
test
bound
mov
and
cmps
pop
mov
xor
test
(bad)
lea
cmps
and
(bad)
mul
or
clc
out
dec
fdivp
fdivr
mov
ret
test
sbb
jno
xchg
std
pop
mov
mov
xor
loop
pop
add
cs
mov
mov
fwait
adc
cmps
mov
aas
shl
cmp
add
cmps
push
test
pusha
cmp
mov
cdq
cwde
outs
push
sti
call
shl
sub
out
(bad)
and
(bad)
in
mov
shl
push
adc
add
mov
xchg
adc
dec
popf
and
inc
add
sbb
cwde
aam
in
sbb
push
or
test
jno
inc
sub
cs
dec
xchg
ror
lea
enter
mov
loope
sub
or
sub
es
lahf
dec
pop
jae
pop
sub
sub
mov
pop
inc
jmp
sahf
mov
push
sub
and
fwait
inc
lods
mov
inc
aam
outs
add
inc
cmps
into
imul
shr
cld
rcl
bnd
add
mov
ss
jle
popa
mov
(bad)
pushf
imul
mov
test
lods
test
addr16
repnz
pop
or
aam
bound
aaa
js
(bad)
jbe
dec
pop
ficom
dec
or
ret
and
leave
ss
cmps
push
(bad)
push
jl
cmp
ja
ins
inc
movs
call
repz
aaa
(bad)
jle
push
xor
xor
arpl
mov
sbb
mov
inc
xor
inc
movs
mov
mov
mov
loope
test
and
ins
lods
adc
inc
xchg
shl
mov
xor
push
sub
ficomp
aas
inc
dec
jmp
inc
sub
xor
cmp
test
jge
sbb
pop
ins
js
mov
sbb
int3
adc
adc
xchg
repz
sbb
cdq
mov
xchg
aam
xlat
inc
dec
dec
out
popf
jmp
cwde
lock
retf
stos
add
pop
fucomip
jp
mov
mov
or
xchg
fisub
sub
cli
xchg
adc
xlat
iret
or
and
cmp
or
movd
xchg
cmps
stc
arpl
xor
jl
jb
push
leave
scas
in
shr
sar
and
pop
mov
or
sub
cli
or
pop
cmc
sub
inc
pop
loop
pusha
repz
cld
cmp
mov
xor
shl
pop
outs
ja
daa
pop
gs
lea
adc
jns
jns
dec
mov
or
jmp
out
scas
mov
mov
or
test
mov
loop
adc
lds
mov
clc
leave
mov
arpl
inc
add
movs
je
inc
ds
ss
mov
aad
inc
pop
or
xchg
pop
leave
mov
mov
push
fwait
pop
sbb
sub
mov
add
push
pushf
data16
(bad)
cdq
rol
add
jb
bound
jecxz
enter
xchg
push
(bad)
jmp
pop
cmp
or
pop
push
and
xor
inc
(bad)
pop
cmps
enter
es
in
leave
out
push
push
mov
adc
cmp
(bad)
(bad)
and
dec
scas
jns
xor
pop
adc
stos
test
mov
aaa
mov
push
shl
mov
cmp
enter
ds
add
in
es
adc
fild
sbb
ja
inc
out
and
dec
add
pop
pusha
mov
lods
xor
push
push
movs
fst
cwde
push
and
xchg
(bad)
rol
aas
dec
mov
xchg
lea
mov
mov
pop
outs
leave
movs
sub
and
test
stos
jns
mov
mov
in
cwde
mov
and
js
aam
push
mov
jmp
xor
xchg
fcmovnb
outs
ins
sub
inc
popa
int3
and
mov
cli
or
pop
gs
adc
xor
sbb
push
push
bound
push
and
xchg
sbb
or
adc
dec
mov
pop
aaa
stos
mov
in
loopne
mov
mov
jnp
fs
mov
push
add
addr16
dec
scas
lods
sbb
out
clc
outs
retf
sub
arpl
(bad)
and
hlt
stos
repz
popf
adc
call
jne
or
cli
fisttp
inc
icebp
pusha
push
mov
mov
clc
ret
cmp
add
pop
xchg
movs
ds
cmp
mov
adc
icebp
mov
mov
jb
or
xor
xchg
fcom
and
aaa
call
(bad)
pop
mov
and
lods
push
mov
repz
imul
mov
jns
and
(bad)
cli
push
popf
aaa
daa
adc
(bad)
cld
(bad)
mov
mov
lea
mov
scas
xchg
xor
xchg
call
test
fist
jb
test
xchg
adc
(bad)
sub
(bad)
cli
fwait
push
lods
xor
jmp
jae
cs
scas
in
mov
retf
popfw
jo
dec
pop
add
add
inc
cmps
cmp
add
push
repnz
xchg
out
lahf
dec
jne
sbb
cmps
xor
jnp
mov
or
jp
dec
jmp
imul
mov
inc
add
or
sbb
and
enter
adc
outs
sti
jl
xchg
xor
iret
repz
and
sub
cld
test
nop
xor
movs
pop
ss
inc
and
cmp
dec
fild
(bad)
xchg
sbb
dec
retf
jo
xor
bound
dec
push
shr
movs
adc
test
loopne
jp
xchg
mov
sbb
cmp
inc
inc
fld1
cs
mov
sbb
ret
test
push
aas
punpckhdq
cmps
xor
adc
jl
dec
stc
stos
int3
mov
mov
adc
cld
dec
jb
xchg
pop
add
leave
and
arpl
out
mov
and
into
push
sbb
(bad)
xchg
adc
jecxz
pop
adc
outs
add
mov
das
or
int3
int
adc
mov
add
or
jno
jae
sbb
fbld
(bad)
mov
push
addr16
and
jecxz
(bad)
fimul
mov
jmp
xchg
jns
(bad)
mov
jg
addr16
loopne
jnp
adc
jge
push
add
stos
cmp
push
ror
div
mov
add
ret
push
add
test
add
bound
mov
repnz
adc
mov
inc
(bad)
jge
or
jmp
imul
cmp
inc
jge
ss
push
loopne
and
rcl
imul
retf
cmp
cs
push
cmc
mov
cmp
jg
or
ins
xor
add
mov
sbb
sub
out
mov
(bad)
jo
push
int3
jb
or
loopne
inc
adc
fwait
jmp
(bad)
test
stc
cmp
lods
dec
xlat
cwde
js
and
stos
ins
mov
inc
or
push
(bad)
pop
ins
pop
clc
or
ins
rcl
mov
aam
mov
mov
xlat
pop
cli
and
inc
mov
pop
ins
push
add
inc
sub
aad
mov
in
repz
nop
mov
pop
mov
cmp
fnstcw
dec
sub
cmp
rcr
push
sub
popf
scas
test
xor
pop
mov
dec
fstp
xchg
gs
movs
adc
mov
adc
mov
mov
(bad)
hlt
call
lahf
sbb
ror
xchg
inc
ror
je
sub
and
jp
jne
stos
mov
mov
push
cs
mov
lock
cmps
lea
xlat
jle
xor
sti
test
rcl
pushf
scas
das
sub
pop
mov
fs
sub
adc
and
ja
pusha
lods
int
in
in
repnz
cwde
adc
xor
pop
(bad)
fld
ror
inc
fisubr
push
dec
jnp
movs
ret
aad
data16
retf
in
push
vaddpd
and
jp
mov
movs
cwde
mov
test
adc
popf
test
pop
or
test
jae
lahf
sbb
fisubr
into
adc
sbb
call
movs
push
add
inc
stos
jg
hlt
adc
call
shr
gs
push
lods
ficomp
ror
pop
nop
cmps
xor
push
enter
or
in
or
add
in
add
inc
cmc
cwde
stos
adc
test
sbb
dec
psubsw
ja
and
js
sbb
stc
(bad)
pop
hlt
sbb
int
stos
pop
pop
pushf
cmp
or
jno
loopne
pop
retw
into
sbb
inc
out
push
inc
jmp
bound
mov
shr
(bad)
cmc
and
repz
dec
out
les
sub
movs
and
fbld
ss
adc
aam
sub
scas
pop
fild
cdq
and
rcl
shl
xor
mov
stos
popf
xchg
and
xor
and
jmp
test
mov
pop
mov
call
sbb
xchg
imul
mul
test
test
mov
pusha
sti
pop
jmp
mov
ds
push
mov
xchg
dec
mul
sbb
movs
loope
popa
sbb
daa
jo
cmps
rcr
iret
int3
sub
jecxz
les
sub
add
in
imul
loop
inc
inc
jmp
sub
jecxz
fnstenv
call
pop
jge
aam
sub
retf
cmp
lahf
cmp
ret
pop
mov
dec
and
jge
repnz
jmp
aaa
mov
xchg
xchg
(bad)
mov
cwde
ds
xchg
mov
xchg
xchg
outs
mov
xchg
adc
push
pop
sahf
fs
bswap
push
adc
icebp
mov
fstp
xchg
js
jns
pop
cld
push
adc
xchg
push
push
adc
mov
add
out
leave
mov
pop
enter
jnp
add
push
push
shl
or
sub
sub
lahf
rcr
call
cmps
in
dec
xor
stos
sbb
mov
test
arpl
adc
fwait
sbb
push
movs
retf
movs
enter
arpl
sub
je
aas
in
test
xchg
or
outs
mov
push
loopne
dec
cmp
mov
and
mov
arpl
xchg
cs
test
sbb
fld
icebp
add
cmp
jne
xchg
loop
or
mov
jl
xor
bound
dec
xchg
push
add
mov
or
inc
adc
cmp
mov
cmps
dec
fstp
jl
ins
aas
fcomp
call
movs
push
or
sub
(bad)
cli
pop
lock
pop
loop
sub
mov
movs
cmp
nop
mov
bsf
scas
mov
(bad)
outs
or
sbb
fidiv
das
push
or
push
(bad)
test
add
inc
imul
dec
xor
std
jo
push
inc
sub
jp
sti
das
fsubr
mov
aas
sbb
jbe
test
sub
loope
dec
inc
repz
sbb
vmwrite
imul
les
push
xor
loopne
es
push
in
cmc
scas
xchg
mov
mov
retf
fsubr
cmp
sub
push
jns
stos
sub
sub
sbb
inc
inc
mov
dec
push
cmps
push
add
or
cmp
out
jbe
lea
arpl
faddp
call
imul
jae
sub
call
adc
popa
jl
xor
movs
sub
push
(bad)
or
mov
in
imul
inc
xor
aad
inc
sar
sbb
aaa
in
imul
dec
dec
and
iret
cli
(bad)
daa
ja
mov
dec
add
inc
popa
push
cdq
sub
rcl
outs
fild
pop
add
xchg
mov
cs
cmp
ja
inc
popf
mov
je
aam
cwde
xchg
in
test
(bad)
mov
fmul
clc
(bad)
xor
pop
fdivr
test
dec
lods
jmp
inc
inc
mov
out
push
jmp
bound
push
xor
(bad)
jbe
neg
bound
sbb
dec
xchg
dec
mov
clc
mov
addr16
xchg
mov
mov
xor
push
mov
dec
ss
icebp
popa
jl
sbb
dec
aad
cs
fdiv
pop
sbb
adc
out
mov
cli
cmp
loop
mov
add
mov
(bad)
mov
adc
cmp
or
lock
or
sbb
dec
push
fisttp
cmp
dec
arpl
ret
jmp
or
adc
push
rol
jae
jnp
clc
imul
lods
out
xor
jmp
add
inc
xchg
or
push
push
jae
cmps
test
scas
sbb
sub
scas
arpl
retf
lahf
out
xlat
mov
sbb
shl
inc
xchg
ret
aas
mov
push
sub
movs
mov
js
das
aas
scas
push
xor
pop
scas
add
neg
inc
xor
sti
xor
sbb
dec
jae
push
cli
pop
scas
adc
imul
xchg
push
shl
in
outs
test
fld
jmp
jl
lea
sub
push
adc
jne
adc
les
mov
sub
(bad)
ja
je
mov
stc
and
xchg
not
jno
inc
add
adc
xchg
movs
ss
sub
out
jge
inc
dec
fild
sbb
cmp
xchg
inc
sbb
sub
mov
ror
loopne
jne
jne
mov
adc
cmp
pop
mov
dec
shl
xor
call
das
clc
or
pop
dec
jle
jmp
sar
jns
aas
add
mov
daa
sbb
test
lahf
arpl
scas
fnop
addr16
cli
rcl
leave
(bad)
jl
inc
hlt
cmps
mov
push
push
push
sub
(bad)
pop
arpl
rcl
pop
lods
pop
or
lods
adc
(bad)
xlat
(bad)
fst
or
or
cmc
xor
ja
or
stos
pop
jnp
imul
mov
repz
dec
mov
leave
fcmove
xchg
jmp
ror
in
inc
aaa
xchg
mov
(bad)
fiadd
sbb
int
loop
jo
arpl
jmp
test
add
cmp
xchg
mov
mov
mov
std
cwde
or
mov
and
bound
sbb
jno
mov
mov
dec
jne
sbb
cs
pop
ss
pop
jp
mov
(bad)
cmp
mov
test
xor
sub
xchg
adc
adc
pop
rcr
lahf
mov
jno
pop
push
or
mov
fidivr
push
jns
in
mov
(bad)
xchg
pushf
adc
cwde
sub
jnp
mov
inc
pop
mov
pop
fdivr
inc
ins
call
jno
jns
mov
call
pop
mov
shr
fwait
push
ret
ret
ins
cmp
pushf
sub
xlat
jns
mov
sub
xchg
mov
mov
pop
rcr
push
jge
inc
in
loope
mov
test
fsubrp
loop
cmps
test
popa
sub
out
jmp
jle
adc
sub
into
xchg
jbe
iret
cwde
pop
or
mov
arpl
test
mov
inc
out
outs
xchg
pop
mov
(bad)
sbb
or
cmps
xor
push
jae
pusha
xchg
dec
imul
loope
cwde
push
dec
icebp
dec
pop
stc
mov
push
push
or
idiv
daa
and
mov
icebp
sar
push
mov
shr
movs
mov
movs
out
push
xlat
push
out
pop
pop
push
pushf
xchg
pop
or
imul
iret
outs
inc
pop
mov
pusha
sub
cmps
or
add
xor
aam
xlat
sbb
in
daa
out
sub
dec
and
lds
lea
xchg
out
pop
ins
and
xor
push
into
leave
sub
call
mov
rol
out
and
or
pop
(bad)
clts
jp
or
mov
xchg
test
dec
pop
push
es
push
int3
adc
sar
lock
push
mov
stos
add
adc
jne
sbb
xchg
retf
mov
xor
cld
test
and
pop
cmp
mov
mov
pop
inc
xchg
sub
or
jbe
out
ror
mov
xchg
and
(bad)
and
addr16
out
mov
or
dec
jg
fcomp
push
movs
ret
inc
repnz
hlt
mov
call
cmps
loop
dec
push
jg
in
cmp
neg
sbb
repz
mov
push
out
test
xchg
sahf
jno
aad
js
cmps
push
and
push
mov
mov
pop
repnz
jle
fisub
and
in
lea
mov
std
outs
sub
pop
fs
shr
push
les
add
iret
inc
aas
cmps
and
xor
jno
mov
mov
jge
push
(bad)
movs
paddsb
cmps
sbb
sahf
out
ret
or
sub
dec
cmps
fcomip
(bad)
fnsave
inc
jbe
add
jbe
xchg
sbb
add
hlt
hlt
cmps
lods
(bad)
lods
in
lock
or
cs
aaa
sub
imul
push
bound
out
xchg
(bad)
fsubr
mov
mov
xor
in
fs
fidiv
mov
dec
outs
cmps
mov
shl
or
repnz
sub
or
loope
cmps
mov
ja
ds
sbb
sbb
lods
(bad)
jmp
aad
das
sahf
out
test
repz
add
cmc
call
sub
call
ret
movs
loopne
lock
add
and
test
rcr
js
mov
cli
pop
adc
and
push
call
bound
ja
mov
ror
mov
mov
adc
mov
pushf
nop
cmp
push
push
ds
dec
mov
and
fisub
mov
lock
xor
push
push
adc
inc
icebp
aad
or
mov
call
push
ror
pop
cmps
cs
std
int
out
cmp
cmps
idiv
push
inc
mov
lahf
popf
mov
pop
jp
call
ficomp
push
mov
xor
pop
sub
sbb
popf
sbb
es
cmp
sub
xchg
push
popa
loopne
adc
and
das
jl
pop
cmp
inc
(bad)
in
dec
xchg
popa
sbb
mov
ret
mov
push
xor
out
xor
pop
sti
sub
cli
pop
sbb
rcr
sbb
pop
mov
adc
js
cmp
repnz
(bad)
rcl
mov
jge
add
pop
aaa
cli
cmp
in
outs
inc
xor
inc
mov
movs
xchg
xchg
leave
pop
sub
imul
adc
mov
rcr
mov
or
stos
fcos
adc
mov
mov
inc
push
pop
push
ficom
std
movs
jmp
icebp
xchg
imul
inc
push
add
in
adc
shr
push
rol
jo
xchg
inc
idiv
push
jns
ins
(bad)
popa
scas
(bad)
jp
mov
or
mov
cmps
ja
jl
dec
dec
push
pusha
rcr
(bad)
out
push
cmp
loopne
clc
pop
scas
rcl
faddp
xor
pop
jle
push
in
test
cdq
mov
ret
js
bound
pusha
push
mov
xchg
test
sub
jo
jb
add
das
inc
movs
xchg
inc
fcompp
jno
outs
cmp
out
test
mov
leave
mov
stc
enter
dec
mov
push
and
xchg
sti
cmps
ret
jns
mov
sub
add
adc
lods
test
aad
es
ret
mov
clc
add
pop
cld
sub
sar
xchg
es
cmp
xor
adc
dec
pop
jbe
add
mov
xchg
stc
mov
dec
rcr
push
inc
enter
push
pop
or
add
inc
dec
(bad)
push
hlt
mov
or
cmps
jno
out
inc
movs
std
rol
add
rcr
ret
shl
(bad)
mov
mov
fldcw
inc
mov
loopne
mov
neg
jns
cwde
inc
popf
push
ret
sar
cmps
nop
push
jae
pop
dec
int3
in
jmp
pop
fdiv
ins
dec
xchg
sub
add
sbb
cmp
and
cli
mov
cmps
add
dec
add
call
cmp
pop
bound
retf
pop
std
inc
aas
lds
and
icebp
xlat
or
push
push
jp
packsswb
test
add
call
or
pop
(bad)
(bad)
(bad)
xchg
out
cmps
(bad)
sbb
push
sbb
push
jle
pop
jecxz
mov
jmp
sub
loop
in
mov
movs
fdivr
std
aam
jo
mov
test
sub
cld
pop
jl
out
(bad)
retf
rol
jg
sti
mov
mov
jns
mov
pop
sti
fnstcw
ret
enter
cmc
mov
add
pop
jl
xchg
dec
mov
mov
jbe
jge
(bad)
stos
retf
retf
xor
inc
pop
push
adc
ins
sub
cmc
shl
mov
(bad)
cwde
inc
fimul
sub
iret
js
stc
scas
cmps
jg
mov
sbb
cmps
out
jae
jns
cld
xor
sub
pusha
gs
cmp
fld
mov
pslld
ret
mov
in
bnd
call
iret
mov
pop
test
jecxz
stc
cmps
cmc
mov
sub
icebp
xchg
(bad)
std
sub
mov
push
aam
mov
out
rcl
pop
push
rol
loope
push
xor
adc
mov
sub
or
rcr
or
addr16
movs
cmp
jg
pop
and
jno
gs
mov
jno
sahf
jbe
test
test
mov
cmp
int3
add
xor
aam
inc
cli
fiadd
dec
inc
mov
mov
popf
and
add
inc
cmp
mov
jp
and
addr16
xchg
inc
fisttp
iret
or
and
mov
add
mov
daa
sub
inc
pop
sbb
rcr
and
pushf
ins
push
push
mov
clc
add
movs
push
add
dec
out
hlt
dec
xor
adc
(bad)
or
fiadd
arpl
cmp
cmp
pop
daa
test
stos
jno
add
mov
pop
iret
int
push
leave
popa
mov
pop
ror
mov
aaa
push
sbb
bound
rcr
out
xchg
popa
jecxz
mov
js
repnz
xchg
(bad)
xchg
fsubr
mov
aas
xchg
dec
rcr
adc
push
dec
add
cli
and
adc
mov
retf
(bad)
mov
les
pop
ret
mov
test
pop
popf
nop
(bad)
mov
lods
push
jmp
jp
sbb
mov
mov
movs
sub
cmps
xor
push
test
inc
dec
cli
imul
enter
aas
aad
and
sub
cmp
stc
adc
push
push
and
cmc
mov
fdiv
mov
ins
xlat
push
sti
jbe
int
outs
mov
adc
jmp
sbb
jle
pop
sub
and
mov
push
leave
jmp
pop
ds
mov
or
sbb
leave
imul
popf
and
pop
mov
mov
repz
mov
cmp
push
add
cmp
push
(bad)
and
ror
push
test
and
sub
mov
xor
jg
sar
xchg
stos
dec
and
shl
jnp
push
sahf
or
(bad)
lock
ret
lock
and
clc
mov
xor
jns
push
mov
pop
mov
fsubr
cmp
cmp
movs
inc
ss
dec
pop
jae
imul
fidiv
scas
or
mov
cmp
test
xchg
jp
pop
sbb
xchg
(bad)
lds
aas
sahf
sub
movs
cmp
loop
fimul
icebp
jg
jo
fs
push
scas
outs
mov
mov
out
mov
ret
outs
js
data16
push
adc
sahf
add
(bad)
std
lahf
push
jbe
pop
pop
scas
mov
xor
das
test
mov
js
imul
adc
jg
fmulp
das
mov
cld
jle
mov
adc
sub
jle
push
jle
fwait
cs
add
inc
jge
fadd
jo
lock
call
lock
sbb
imul
xlat
xchg
jge
mov
aas
mov
retf
xor
cmc
add
inc
call
and
js
ins
jns
pop
adc
in
inc
cmp
lods
shr
retf
imul
out
(bad)
jg
or
xchg
ret
or
aam
es
clc
or
addr16
cmps
rcr
or
nop
mov
adc
(bad)
cmps
stc
sbb
mov
add
ds
retf
add
xor
or
in
sahf
adc
mov
adc
in
cmp
mov
dec
adc
je
pop
jnp
sub
cdq
adc
pusha
sbb
retf
out
not
cmp
lds
fist
inc
add
mov
pushf
or
les
xor
and
xor
mov
adc
mov
cwde
ret
sbb
add
test
dec
push
mov
jmp
sbb
add
inc
sbb
xchg
fcomi
fnstsw
imul
and
or
out
test
sbb
push
iret
inc
fcomp
and
jecxz
mov
xchg
xchg
fwait
pop
sbb
mov
cwde
cmps
adc
push
sub
aas
rcr
int3
mov
xor
lahf
mov
inc
shl
xor
aaa
inc
mov
mov
xchg
xchg
aaa
imul
jnp
gs
inc
cmp
aas
xchg
jge
ins
retf
add
pop
and
ffreep
stos
push
pop
fnsetpm(287
cmps
mov
ror
into
adc
jecxz
leave
test
je
cmp
mov
inc
leave
test
enter
out
test
loop
test
cwde
(bad)
in
ss
cdq
fild
mov
in
(bad)
fcmovnb
mov
or
add
vmovntps
nop
add
lods
repz
das
jmp
xor
repnz
aaa
jp
fwait
mov
loop
cli
mov
std
sbb
xor
fnstenv
sbb
sub
loope
cmp
pop
push
inc
fdivr
popa
fst
xor
push
add
rcl
aad
enter
cmp
jp
add
loop
inc
and
call
sahf
imul
(bad)
sysret
mov
sub
pop
sbb
gs
rol
fucomp
scas
fidivr
inc
cs
add
or
js
movs
rcr
lea
mov
cdq
mov
add
test
aas
push
mov
fstp
inc
test
rcr
lock
ror
xor
mov
pop
sub
or
aas
retf
arpl
and
fstp
cmp
push
pop
scas
in
jb
enter
inc
jle
mov
mov
xlat
aaa
or
pop
shl
add
cmp
scas
dec
fbld
jbe
aas
iret
mov
fisttp
dec
push
inc
push
sbb
cmovne
aaa
mov
mov
mov
xchg
dec
sub
lods
sbb
jmp
mov
jnp
ja
fild
shl
test
jb
xlat
xchg
push
jmp
pusha
push
loope
mov
sbb
pop
into
popa
dec
je
test
cmp
inc
mov
data16
cmps
into
fcomp
adc
out
ins
(bad)
daa
mov
cmp
sbb
int
xor
aaa
cmp
xor
xchg
mov
push
push
sti
lahf
and
scas
sbb
dec
mov
in
arpl
loope
mov
mov
bnd
pushf
adc
rol
jle
xor
into
test
std
mov
nop
dec
cmp
and
adc
fbstp
lock
inc
pop
ror
sub
jl
cmp
pop
jbe
or
loop
(bad)
push
outs
cmp
arpl
retf
rol
fldl2t
mov
or
dec
mov
repnz
push
xor
aaa
retf
sbb
(bad)
adc
ds
add
jae
cmps
push
xor
outs
jge
bound
pop
push
into
adc
nop
imul
(bad)
cmc
sbb
mov
jnp
inc
push
jl
(bad)
test
(bad)
mov
(bad)
jmp
jmp
mov
mov
mov
push
pop
ins
or
xor
int3
sbb
aas
(bad)
pop
outs
ret
ret
pop
shr
sub
push
cli
or
call
sbb
call
inc
imul
mov
ds
sbb
mov
jno
xchg
inc
test
shl
and
push
jbe
push
scas
cmp
inc
jmp
mov
add
jg
and
inc
jne
or
sub
mov
popf
add
jmp
scas
jp
jb
mov
out
or
rcl
cwde
outs
and
retf
loop
loope
aas
repz
jp
pushf
mov
sub
pop
fcomip
shr
push
ds
mov
lock
cmps
ja
aad
aad
inc
inc
jns
cmps
je
lods
jp
sub
ds
es
repz
jg
int
dec
inc
dec
jle
add
sbb
iret
mov
xor
js
pop
stos
shl
ja
add
leave
cmp
data16
cli
test
sbb
sahf
sbb
push
push
jecxz
mov
or
or
lods
jmp
idiv
cli
cli
and
fdiv
sub
inc
add
adc
cmp
inc
pop
retf
aaa
sub
push
push
std
add
iret
call
int3
push
sub
sbb
and
dec
pop
push
adc
(bad)
(bad)
cmp
inc
ds
dec
xor
mov
fsubr
xor
add
inc
aaa
ja
sbb
mov
nop
sbb
push
repnz
push
(bad)
xchg
int3
dec
sbb
inc
jae
push
(bad)
call
and
add
push
sbb
mov
sub
out
rol
nop
jl
cmp
pop
pop
sar
(bad)
cmps
push
ror
cmp
movs
cmps
stos
jno
icebp
retf
mov
fiadd
xlat
xchg
and
dec
dec
vmovapd
jmp
sub
sub
sub
mov
ror
or
jno
pop
and
stc
push
adc
or
xchg
test
xor
popa
fistp
sbb
pop
leave
adc
adc
sbb
nop
fwait
mov
inc
adc
cdq
xor
jbe
jmp
lds
cld
sbb
sub
add
dec
pop
cwde
sar
mov
out
mov
mov
test
pop
neg
mov
adc
mul
jo
in
jecxz
add
daa
fisub
movs
ror
xor
ja
add
movs
mov
(bad)
repnz
(bad)
push
pop
popa
xor
push
rcl
xlat
pop
jo
or
pop
adc
cmp
movs
aam
inc
shr
mov
cmp
dec
cmps
cmps
mov
in
cwde
mov
scas
pushf
pop
or
pop
mov
lds
dec
call
or
shl
das
mov
test
jl
xchg
sbb
ret
lahf
rcl
vmovaps
es
sub
out
add
shr
lods
jae
cmp
cmp
daa
cdq
into
pop
inc
and
aam
push
xchg
xchg
fidivr
test
mov
push
cwde
ins
cmp
out
mov
sbb
out
ins
inc
test
jb
inc
sub
call
ret
sbb
and
gs
jns
jne
je
(bad)
shr
mov
in
sbb
fldcw
and
in
inc
xchg
adc
ds
xchg
retf
sub
or
(bad)
sbb
not
mov
xor
out
(bad)
imul
adc
push
not
dec
cmps
push
inc
cmp
ins
test
(bad)
cmp
mov
push
mov
mov
or
cwde
cmp
in
loop
xlat
xor
sahf
sti
int3
and
push
inc
adc
pop
data16
pop
mov
adc
mov
jae
outs
jl
xor
xor
push
mov
xbegin
inc
push
push
cmp
mov
iret
inc
xlat
mov
aas
push
sbb
jmp
pop
xchg
jge
jp
in
inc
xchg
ds
jp
retf
(bad)
iret
cmp
imul
dec
mov
nop
mov
arpl
gs
dec
or
arpl
outs
test
adc
popf
pop
out
mov
push
int3
sbb
cmc
mov
adc
or
mov
xor
cmp
and
(bad)
int3
fdiv
cwde
test
pop
data16
xor
inc
mov
stos
or
pop
dec
cli
cdq
add
scas
pusha
fdivp
in
sahf
std
pop
pinsrw
mov
mov
je
mov
jg
jnp
xchg
sub
push
push
push
(bad)
fdivr
sub
and
retf
mov
in
add
(bad)
lods
mov
inc
stc
add
lock
aaa
into
adc
mov
rcr
scas
jb
push
cmc
sar
jge
in
nop
in
push
loopne
sbb
test
jmp
aad
dec
fcom
sub
ret
out
jae
adc
cdq
imul
ret
mul
je
adc
bnd
xor
fisttp
in
repz
ins
mov
mov
retf
and
cmps
cmp
test
add
adc
out
mov
(bad)
push
dec
mul
and
pop
inc
inc
xchg
xor
and
ret
jmp
push
popf
pop
mov
out
sub
shl
lods
loop
mov
dec
jno
adc
inc
mov
repz
mov
ret
add
mov
imul
mov
stc
pop
adc
call
(bad)
push
xlat
cmp
or
push
add
cmp
push
jl
xchg
cdq
popa
test
or
jbe
js
xchg
xlat
mov
inc
rcl
mov
leave
mov
pushf
ins
scas
daa
aaa
pop
loopne
scas
push
mov
icebp
out
(bad)
enter
inc
lock
out
jmp
lea
jb
mov
rcl
imul
enter
cld
pop
or
sbb
xchg
in
(bad)
push
rcl
test
lea
sbb
sub
rcl
icebp
les
outs
mov
ror
fldenv
lahf
test
xlat
imul
xchg
inc
mov
sahf
adc
cmp
add
retf
mov
arpl
or
fcom
loop
add
es
(bad)
out
int
or
sub
or
push
movs
arpl
andps
iret
cmps
(bad)
sbb
mov
sbb
dec
pop
and
dec
push
jno
test
inc
mov
call
jecxz
mov
cs
adc
jge
sti
stos
js
push
ret
imul
in
stos
mov
and
loope
xlat
(bad)
inc
mov
cmp
dec
xchg
outs
jns
cwde
(bad)
lock
jmp
stos
scas
add
ds
cdq
mov
iret
cmc
test
ret
mov
fwait
jnp
fdiv
fwait
sbb
retf
jl
sti
scas
xor
data16
xor
sbb
out
cs
adc
js
push
(bad)
jno
enter
xchg
jmp
and
adc
add
fld
lahf
push
jns
lods
ret
pop
das
xlat
(bad)
pop
(bad)
ja
adc
(bad)
not
retf
(bad)
popf
aas
aam
add
inc
call
pop
dec
pushf
sbb
in
fbld
pop
xor
add
and
push
mov
mov
mov
repz
es
xchg
push
cdq
into
xor
dec
test
lea
test
mov
or
in
jno
mov
dec
stc
jge
push
out
data16
or
and
sbb
mov
shl
in
inc
lea
mov
fist
aam
ret
push
inc
mov
push
jmp
push
ja
lds
mov
mov
sub
fdivr
pop
dec
sti
retf
shl
leave
sti
in
mov
icebp
jnp
xchg
cmps
inc
add
pop
(bad)
not
adc
xchg
in
mov
and
ret
cwde
loop
fidiv
mov
fstp
fwait
dec
jl
shr
daa
jl
or
push
loop
dec
sahf
stos
adc
mov
std
out
mov
and
dec
xchg
pop
jge
in
lea
xor
int
rol
aam
in
(bad)
pop
add
inc
scas
or
jo
sar
jl
movs
inc
cmp
out
mov
pop
mov
call
mov
cmps
popf
movs
or
js
push
xchg
jp
sbb
or
mov
mov
mov
das
mov
shl
stos
adc
in
cmp
mov
fiadd
xor
cmp
inc
sar
clc
retf
loope
das
stc
jne
aaa
test
out
pop
add
cld
ins
fimul
or
jl
cmp
cmp
shl
stos
jno
adc
or
mov
mov
stos
pop
pop
cdq
add
dec
mov
(bad)
rol
sbb
inc
clc
dec
mov
fist
sub
int
and
cmp
movs
pop
adc
dec
in
add
test
mov
scas
fild
aas
(bad)
jecxz
lock
push
test
push
ror
sub
mov
xchg
(bad)
(bad)
mov
sub
add
lahf
out
push
loop
pop
outs
sub
mov
xor
pushf
test
sub
imul
div
std
add
cmps
stos
mov
mov
add
mov
dec
clc
inc
call
ins
adc
pop
fwait
inc
ffree
inc
fadd
mov
mov
jle
das
inc
or
aad
xchg
test
pop
into
inc
out
scas
pop
hlt
jmp
or
mov
mov
dec
aam
dec
scas
lock
xchg
lds
cmp
mov
(bad)
jo
lea
cmc
iret
movs
mov
push
or
and
mov
inc
jp
mov
cmps
push
adc
xchg
mov
mov
mov
pusha
mov
jne
test
(bad)
fisttp
movs
lods
and
dec
jl
loop
dec
js
fs
adc
pop
aas
push
pop
xchg
ret
ror
test
mov
call
(bad)
test
in
mov
scas
jbe
arpl
call
(bad)
xor
int3
cmp
(bad)
cmps
push
fsubr
aas
lea
mov
xchg
aam
stc
hlt
cdq
ins
push
push
lea
shl
adc
aad
popf
cmp
addr16
jb
dec
pop
ss
loop
out
lahf
sbb
shr
arpl
adc
mov
and
fwait
cmps
retf
movs
dec
jae
push
xchg
scas
cs
mov
dec
mov
dec
push
mov
movs
add
and
inc
cmps
ins
dec
sti
movs
xor
xor
dec
push
je
mov
idiv
retf
mov
mov
inc
xchg
pop
rol
mov
loope
push
inc
mov
mov
push
and
jae
out
out
jmp
xchg
call
outs
icebp
out
xchg
pusha
stos
push
ficomp
jge
(bad)
in
sub
cmp
cdq
add
or
sbb
lea
mov
cmp
fistp
push
mov
ins
popa
sbb
jle
jmp
or
xchg
mov
add
das
rcr
lock
daa
fs
in
rol
fld
jae
js
clc
call
mov
pop
dec
test
(bad)
rcl
cmp
xchg
inc
sub
rcl
scas
mov
mov
sub
or
xor
sub
xor
mov
push
and
call
jp
pusha
dec
fdivr
retf
push
mov
imul
jns
(bad)
push
cmp
xchg
pushf
(bad)
push
hlt
or
movs
xlat
repnz
je
lods
popa
cld
and
xor
rcl
popf
sub
idiv
sub
push
ja
addr16
sti
jmp
cmp
fcom
push
sbb
or
mov
push
mov
pop
jmp
mov
xor
int
sbb
sbb
test
repz
int
cld
mov
lahf
dec
es
rcr
mov
fwait
jecxz
xchg
and
movs
mov
dec
jge
aas
ss
ret
rcr
paddusw
push
retf
cmp
push
pop
ret
and
rcl
test
aaa
fpatan
or
sar
add
lahf
aaa
jge
jecxz
(bad)
into
icebp
iret
ficom
xchg
and
stos
loopne
sub
cmp
pop
sbb
icebp
add
push
in
out
mov
ret
adc
popa
sbb
and
sar
loop
jl
addr16
dec
in
sahf
adc
push
outs
scas
pop
sbb
out
ins
push
repz
cmps
pop
and
push
fst
and
ret
cwde
inc
pop
dec
or
mov
in
and
dec
fwait
cmp
stos
inc
mov
scas
out
and
pop
into
sbb
jbe
sbb
mov
int3
data16
mov
fst
or
repnz
add
out
adc
sti
mov
aad
and
addr16
(bad)
sti
mov
test
fwait
ins
inc
imul
adc
stc
mov
sahf
cmp
sbb
sar
mov
ret
push
les
cwde
mov
(bad)
xor
sbb
(bad)
xor
test
push
pushf
sub
imul
out
pextrw
lods
xchg
shl
mov
ror
mov
dec
sub
adc
mov
out
pop
addr16
jl
mov
push
cmp
fucomp
adc
rcl
inc
stc
les
(bad)
aas
mov
rol
jmp
sub
mov
jns
ds
push
xchg
xor
sbb
xlat
jmp
jb
lock
jns
xchg
or
xlat
std
and
dec
cs
cmp
add
fcmovb
or
not
int
clc
loop
jbe
dec
mov
leave
test
lods
dec
xchg
pop
cld
mov
adc
cmp
les
mov
dec
mov
sub
xor
imul
sti
push
popa
rcr
in
push
add
xor
aas
add
cli
dec
mov
es
xchg
xor
add
and
adc
popa
retf
pusha
cwde
sar
pop
mov
push
lods
jmp
mov
inc
xchg
push
push
xor
xor
mov
test
mov
mov
push
pop
in
xor
pop
mov
loop
sbb
aam
int3
shl
mov
sahf
mov
cmp
outs
pop
lahf
into
jb
rcr
and
xor
xor
push
movs
jle
xor
push
std
jecxz
xor
sbb
ins
xchg
mov
call
dec
inc
mov
mov
pop
pop
test
jmp
cmps
mov
vsqrtss
mov
popa
cld
pop
sub
mov
pushf
cmp
pop
mov
in
mov
cmps
pop
xchg
in
sbb
mov
add
stc
xor
shl
sbb
cmps
jae
jle
mov
dec
scas
sbb
lea
or
les
cmp
int
jmp
add
call
mov
mov
inc
div
pop
dec
loopne
movs
ins
shl
sbb
loopne
popa
sbb
jge
push
ss
push
aaa
in
lea
inc
xor
adc
sub
add
xor
imul
js
push
ret
jb
mov
les
push
addr16
jmp
lock
mov
out
mov
addr16
shl
lea
movs
push
hlt
jp
sub
jae
cli
lock
test
sbb
gs
stc
jle
std
arpl
int
sub
pop
xor
(bad)
pop
mov
(bad)
dec
enter
test
and
mov
xor
pop
jne
and
xchg
cli
mov
test
aad
xchg
stc
sahf
sahf
dec
pop
sbb
or
lods
int3
inc
retf
std
xchg
jnp
jl
(bad)
xor
retf
dec
retf
call
mov
jmp
and
loop
daa
lahf
cmp
fcmove
xor
push
mov
xchg
fwait
sub
sbb
sbb
ins
(bad)
call
les
dec
sub
in
repz
push
in
nop
push
(bad)
out
ins
dec
cdq
cli
mov
or
jb
push
call
pop
mov
ret
add
jno
mov
aad
cld
push
mov
fstp
scas
shr
or
mov
jno
pop
adc
inc
adc
jg
imul
scas
daa
pop
lock
adc
cmp
jb
iret
fnstenv
call
xlat
cmc
xchg
cmps
pushf
retf
jns
mov
cs
and
sbb
cld
sbb
movs
jmp
or
add
xor
into
mov
push
sbb
add
scas
call
sub
pop
jno
scas
std
mov
(bad)
loop
rcr
(bad)
push
adc
call
bound
sub
mov
inc
mov
or
sub
fld
imul
xchg
pop
ficomp
ds
into
xchg
lods
bound
mov
repz
lahf
aaa
mov
fmul
cmp
pushf
jmp
xchg
mov
aad
dec
cmps
(bad)
and
loopne
fbld
or
stc
cmp
cwde
cmp
stos
fsubr
xchg
xor
les
pusha
gs
mov
cmp
loopne
dec
daa
repz
mov
push
dec
inc
call
mov
and
xchg
lds
push
jg
data16
cmc
test
sbb
imul
xor
jp
xchg
pop
pop
push
or
inc
cmp
inc
pop
call
push
inc
push
cs
adc
xor
xchg
xor
test
addr16
dec
lock
jae
or
leave
test
jecxz
lock
scas
loop
(bad)
mov
xor
and
movs
mov
jo
mov
and
dec
push
lahf
scas
stos
adc
or
xor
aas
int3
mov
push
inc
push
or
mov
test
or
and
xchg
adc
xacquire
mov
push
or
jmp
clc
outs
cmp
inc
inc
inc
sti
imul
dec
sahf
push
hlt
mov
or
sub
ds
push
jne
imul
mov
inc
sahf
aas
adc
xor
mov
scas
jo
in
xchg
dec
add
inc
ret
xchg
je
int
cmc
cdq
pop
clc
popa
imul
pop
mov
out
or
pop
lea
pop
dec
js
xchg
xchg
xchg
xor
(bad)
or
(bad)
popf
xchg
arpl
jg
add
pop
dec
inc
(bad)
les
daa
pop
lods
sbb
in
cmps
not
mov
repz
mov
inc
jo
daa
fdivrp
(bad)
arpl
cmp
pop
stos
mov
jb
popf
imul
cmc
push
cmp
rol
fxch
ss
rcr
aad
jmp
push
inc
sub
jmp
mov
sbb
in
jle
dec
sti
push
nop
lea
push
adc
(bad)
and
movs
pop
cmp
xor
sub
aas
mov
popa
xchg
into
xchg
call
pop
test
or
cmps
xor
sti
and
adc
add
rcl
sti
lea
arpl
mov
call
xchg
pushf
adc
push
mov
out
xor
and
add
shr
int3
xor
call
(bad)
mov
loopne
inc
sub
fs
push
out
push
popf
bound
sub
ins
push
mov
push
adc
cld
cmp
(bad)
pusha
adc
fisub
add
mov
cs
mov
hlt
mov
dec
fdivr
shr
jmp
cld
ror
add
icebp
mov
sbb
push
imul
mov
pop
lea
arpl
mov
test
scas
mov
jae
jmp
loopne
nop
repz
or
sub
into
nop
pop
lock
(bad)
push
mov
(bad)
jp
mov
scas
jno
fwait
push
fwait
sub
jne
retf
mov
stos
fcom
xchg
add
cmp
data16
scas
je
or
in
xor
push
shl
pop
jo
xchg
sub
aad
dec
mov
les
shr
push
dec
adc
(bad)
cmp
fisubr
sbb
push
pushf
nop
push
or
in
(bad)
loop
or
ins
imul
ins
cwde
in
dec
sub
xor
pop
fistp
stc
add
ins
fistp
xchg
xchg
mov
ror
dec
cmp
ds
xchg
data16
mov
inc
fistp
mov
sbb
xchg
ffree
jp
ror
xor
mov
popa
jnp
in
push
fcomp
sub
mov
push
mov
mov
es
in
mov
mov
hlt
push
repnz
repnz
and
dec
mov
mov
stos
add
add
add
jg
fidivr
aaa
cli
dec
push
loope
dec
mov
jg
cmps
dec
dec
sti
aam
into
ret
xchg
aas
ret
loop
push
imul
pop
mov
lds
je
or
push
test
or
fadd
cmc
dec
mov
bound
lods
sub
ror
push
out
enter
fst
xchg
sbb
outs
in
cdq
adc
enter
repnz
and
ins
scas
jbe
mov
out
xor
xchg
pop
rcr
cmp
cmps
and
xchg
fisubr
rcl
adc
pop
icebp
push
outs
mov
(bad)
fld
push
cmp
mov
das
or
jmp
xor
in
sbb
add
stos
xchg
sbb
dec
rol
imul
mov
je
sbb
frstor
sar
xchg
test
xor
sar
aad
in
or
pop
mov
dec
dec
fsubrp
ss
leave
(bad)
fist
ds
cmps
stc
out
cmp
adc
cli
and
xchg
push
stc
test
paddusb
mov
cmps
sub
data16
pop
sub
pop
cmps
ins
aad
xchg
xor
adc
and
dec
inc
loopne
icebp
loop
mov
sub
mov
lea
jecxz
pop
fs
je
mov
into
cwde
sub
mov
aad
cmovg
mov
cs
pop
xor
jmp
sub
adc
popaw
lods
lahf
add
add
or
out
in
jl
mov
xor
(bad)
out
push
push
mov
or
xchg
ins
bound
or
push
gs
in
fist
push
outs
pop
jl
add
sbb
mov
je
adc
sbb
dec
xchg
sbb
inc
adc
mov
daa
push
cmps
add
pop
in
shl
dec
cwde
xchg
adc
push
cmp
sbb
mov
dec
mov
ret
call
jmp
push
out
xor
out
bound
imul
lods
ja
ficomp
push
dec
test
jmp
in
lea
fsubrp
in
rcr
push
cld
xor
xchg
jb
and
popa
cli
cwde
xchg
push
cwde
scas
dec
stos
enter
das
mov
add
sub
sub
mov
add
add
cli
lods
jg
fnstenv
and
dec
cmp
ds
sbb
fld
xlat
clc
int3
or
mov
adc
pop
cdq
xchg
mov
test
add
jo
pop
enter
jle
retf
jl
cmp
mov
mov
fs
or
and
(bad)
lock
sub
call
(bad)
adc
inc
xchg
mov
adc
repnz
inc
pop
fwait
pushf
pop
data16
push
jae
shl
push
lds
pop
scas
dec
xchg
outs
lods
adc
dec
rcl
iret
outs
pop
shl
repz
daa
sbb
mov
stos
mov
jge
adc
push
sbb
dec
add
cs
icebp
adc
dec
imul
mov
pop
test
dec
adc
cmps
mov
mov
adc
sbb
ss
imul
or
lods
adc
jecxz
pop
jae
mov
mov
popf
adc
shufps
(bad)
retf
mov
enter
lods
mov
(bad)
cmp
out
pop
cmp
mov
inc
mov
mov
xor
out
sub
mov
rcr
dec
xchg
repz
lahf
adc
sub
mov
jb
mov
xor
xchg
fild
lods
xor
dec
xor
mov
or
enter
cmp
inc
mov
outs
ins
inc
jns
inc
xchg
lea
pop
or
arpl
jge
dec
jbe
xor
mov
mov
mov
jno
mov
lea
mov
lea
fistp
dec
jmp
adc
jecxz
jl
sbb
push
fcomp
jp
das
inc
shl
push
mov
cld
pop
xor
sbb
xor
out
mov
dec
adc
ret
les
sub
sub
mov
lods
std
stos
lods
je
jae
in
aaa
ins
mov
sbb
inc
stos
or
mov
iret
gs
or
xchg
outs
add
stos
pop
test
call
out
outs
clc
mov
int
call
jae
ins
push
mov
mov
scas
mov
sub
adc
retf
out
add
call
adc
ja
cmp
dec
es
daa
fwait
clc
push
or
pop
rcl
ret
or
enter
sbb
ds
lods
adc
ror
lods
fnsave
and
arpl
mov
and
inc
retf
and
ret
push
sbb
add
mov
mov
add
loope
or
shl
fiadd
inc
sahf
sbb
(bad)
in
lahf
into
addr16
and
jmp
and
sub
movs
enter
push
call
int
fwait
inc
dec
in
dec
into
mov
xchg
mov
sbb
adc
imul
icebp
jo
and
in
icebp
xor
ret
or
cmp
ins
mov
mul
pusha
pusha
push
inc
sub
jno
mov
pop
aad
cmp
jnp
or
inc
imul
(bad)
(bad)
repz
jns
sbb
aam
int3
xchg
outs
inc
fs
sbb
shl
(bad)
jp
and
mul
je
mov
scas
popf
jp
pop
arpl
add
shr
mov
cld
test
sbb
add
repnz
retf
int
inc
in
lds
mov
inc
and
mov
sbb
inc
nop
jno
fwait
dec
pop
sub
fwait
mov
movs
imul
mov
data16
push
push
mov
jg
movs
popa
mov
mov
fdivr
cwde
cmps
inc
mov
in
lea
pop
std
sbb
gs
in
jle
cdq
adc
cdq
xchg
loop
push
jo
sbb
outs
push
push
std
add
call
das
enter
cmp
pop
sbb
mov
adc
push
fbld
sbb
jmp
repnz
div
cmp
pop
cmp
pop
adc
mov
scas
xlat
add
into
cdq
rsqrtps
sub
into
clc
nop
ret
out
aaa
popa
jmp
fstp
sub
pop
sbb
xchg
test
cmp
mov
mov
sub
ret
dec
jmp
adc
fist
adc
jmp
shr
push
sbb
cld
jmp
mov
out
aad
and
mov
aad
inc
sahf
and
mov
dec
jecxz
(bad)
cli
gs
leave
mov
in
and
jo
sub
stos
fimul
add
hlt
adc
xor
pop
pop
mov
xchg
stc
stos
inc
push
pop
frstor
mov
mov
push
push
and
or
cmp
dec
loop
add
and
push
adc
sahf
or
push
outs
movs
xchg
fwait
xor
jge
adc
push
das
push
mov
ins
call
and
aam
pop
xor
cmp
xchg
mov
not
aaa
cdq
repnz
int3
mov
fidiv
cmp
popw
addr16
xchg
fild
inc
jl
icebp
lods
push
iret
jne
fcmove
jg
add
xchg
jp
xlat
jg
or
pop
add
fadd
mov
enter
lods
inc
add
mov
iret
hlt
int3
xchg
and
pop
and
mov
(bad)
je
leave
pop
dec
aam
dec
xacquire
jmp
loop
cmp
adc
cmp
mov
in
mov
mov
daa
les
cmp
mov
mov
stos
jp
int3
into
das
call
pop
mov
push
mov
xor
stos
test
out
cmp
aaa
call
ds
jo
and
std
out
inc
(bad)
js
add
sub
jle
and
ja
pop
push
push
(bad)
into
add
ret
mov
inc
int3
test
ss
dec
cmp
push
mov
jmp
cwde
inc
call
rcl
ret
pop
xchg
sahf
adc
retf
and
(bad)
mov
out
movs
inc
xor
leave
pop
sar
pop
add
and
outs
dec
popa
aam
pop
mov
stos
and
cmp
mov
aam
jbe
mov
push
ror
fbld
xchg
int3
cmps
cmp
mov
mov
lods
ss
xchg
gs
(bad)
mov
push
push
xor
add
push
es
int3
xor
mov
adc
lods
sbb
push
ds
push
xchg
jl
sbb
mov
cmp
and
xor
int
cdq
repz
jb
int3
inc
dec
rcl
xchg
in
or
adc
dec
cmp
nop
mov
gs
fsub
in
sub
cmp
loope
xchg
or
dec
cmp
loopne
pop
retf
stos
xchg
jo
adc
xchg
rcr
and
ja
int3
fimul
fldcw
mov
mov
test
retf
mov
or
hlt
cld
sahf
in
dec
xor
adc
mov
iret
pop
adc
stc
ins
in
cmp
mov
mov
enter
sahf
cdq
in
hlt
sbb
add
dec
and
ror
imul
cli
cmp
test
test
int3
sbb
mov
mov
cmp
xchg
push
in
push
push
inc
and
dec
dec
js
imul
adc
aaa
je
jno
pop
popf
cmc
mov
stos
mov
cmp
psubd
ror
xchg
(bad)
cmp
dec
dec
jo
jp
(bad)
rcr
xchg
or
cmp
loop
fsubr
jmp
jl
rcr
add
pop
imul
jmp
icebp
sub
not
ficomp
lods
in
add
fld
fistp
cmps
inc
jge
pusha
mov
mov
push
jbe
dec
xrelease
xor
stos
lods
scas
lods
imul
pop
movs
cmp
clc
into
jmp
aam
xor
ss
push
mov
or
movs
es
fadd
push
or
retf
xor
jno
int
sbb
out
mov
or
jmp
cmps
dec
dec
xor
movlps
fwait
sbb
mov
add
ins
and
ret
test
jns
mov
shr
xor
lahf
outs
into
and
xchg
jmp
movs
pop
popf
iret
rol
icebp
call
pop
mov
mov
jle
scas
das
jmp
rcr
pop
pop
dec
retf
cmp
push
jne
fsubr
(bad)
aad
add
cmp
pop
push
div
dec
pop
sub
(bad)
scas
mov
je
xchg
and
shl
pavgb
enter
inc
and
adc
dec
mov
dec
out
cwde
pop
adc
xor
fwait
adc
gs
shl
mov
fwait
ret
scas
loop
inc
sbb
dec
mov
or
rcr
pushf
mov
xchg
push
jno
push
retf
(bad)
fcomip
scas
cmp
retf
push
std
int
adc
lea
fst
xor
rol
mov
aad
out
mov
movs
loope
fmul
jge
or
call
lods
mov
cld
cs
inc
mov
push
cmps
stos
out
lock
inc
fild
jbe
sub
jge
dec
int3
sbb
mov
out
call
inc
jl
mov
xchg
jp
mov
push
xchg
inc
add
ficomp
iret
dec
xchg
je
call
cs
ret
out
div
cmp
fidiv
aas
into
ds
xlat
fs
adc
jno
xor
adc
add
mov
(bad)
bound
fiadd
movs
cdq
mov
inc
jno
fist
dec
repnz
std
and
xchg
and
dec
in
lods
out
sbb
inc
dec
xor
and
jbe
bound
jl
dec
jns
in
shl
push
std
loope
in
jb
mov
mov
fcomp
xor
cld
sub
add
jmp
cmp
jno
cmps
shl
pushf
and
mov
jmp
leave
push
mov
sub
mov
cmps
out
or
in
(bad)
loope
dec
ja
lahf
in
jg
push
pop
xor
jnp
jnp
in
in
jae
out
sti
(bad)
and
fs
mov
fst
pop
fmulp
xor
push
daa
jns
sbb
aam
push
out
lds
adc
xchg
push
icebp
hlt
jns
add
loope
aam
jb
sbb
adc
cmps
outs
ds
and
lea
in
js
addr16
sbb
xor
push
pop
cmp
dec
scas
bound
cmp
aad
inc
push
dec
scas
stos
int
adc
(bad)
fst
push
xlat
xchg
or
fdiv
movs
add
sbb
add
cmp
dec
sub
ins
mov
ror
inc
add
xchg
mov
mov
enter
in
inc
aaa
hlt
(bad)
fstp
repz
add
cmc
xor
adc
jle
iret
mov
xor
popf
ffree
push
mov
shl
mov
popa
(bad)
(bad)
pop
test
add
mov
data16
out
out
sub
xor
stos
lods
fcomp
psubsw
push
movs
je
popa
(bad)
(bad)
mov
test
jnp
jnp
cdq
ins
jne
mov
ds
jl
and
mov
inc
jne
call
or
and
sub
mov
shl
xchg
sbb
jae
xor
or
mov
pop
arpl
mov
fbstp
movs
cmp
cmp
mov
fisub
xchg
adc
aaa
outs
or
out
cwde
xor
cmp
cmp
and
lock
rcl
pop
into
shl
jne
bound
inc
lods
inc
cmps
stc
xchg
shr
mov
data16
and
enter
mov
sbb
les
push
dec
shr
xor
lods
mov
adc
test
or
jbe
mov
ret
arpl
sub
stos
push
fild
nop
test
pop
inc
and
push
(bad)
loopne
push
test
add
cmp
out
mov
int
inc
dec
dec
pop
adc
cmp
and
or
dec
inc
cwde
(bad)
cld
xor
in
lods
loop
adc
xlat
out
xchg
and
add
jmp
lahf
or
cs
mov
imul
repz
pushf
or
sub
test
mov
sahf
(bad)
jmp
adc
cmp
push
dec
xor
add
daa
sub
inc
aad
dec
js
(bad)
sub
mov
jp
mov
inc
pop
mov
fistp
(bad)
outs
mov
lahf
xchg
push
sahf
pusha
jmp
add
rcl
jns
or
pop
outs
fwait
push
pusha
in
into
loop
hlt
sbb
sbb
sahf
inc
cmp
pusha
adc
es
call
repnz
pop
popf
and
adc
repnz
pop
ror
pop
outs
cmps
and
adc
lods
outs
test
bound
jne
xchg
retf
aam
lods
jmp
popa
pop
fbstp
pop
loop
jo
dec
pop
dec
add
sbb
movs
out
jmp
xlat
pop
pop
inc
and
mov
fucomp
stc
int
btc
aas
jnp
jle
push
jecxz
stos
dec
mov
lods
pop
or
retf
(bad)
stos
sub
push
mov
jmp
xchg
scas
test
clc
xor
movs
in
dec
add
ret
call
aam
xor
call
mov
outs
cmps
mov
ss
in
fdivr
mov
push
cwde
sbb
jnp
jmp
cs
mov
cwde
adc
test
arpl
and
inc
push
push
mov
ret
stos
adc
adc
jle
mov
sub
stos
sbb
inc
fs
repnz
leave
inc
mov
lods
add
test
sub
leave
jo
dec
inc
clc
call
jbe
sbb
and
push
test
test
sub
xor
cmp
sbb
push
je
jl
imul
inc
cmp
mov
jp
and
hlt
mov
jg
mov
pop
data16
test
dec
push
and
(bad)
cmc
xchg
or
push
and
mov
mov
addr16
or
push
push
dec
outs
mov
cmp
xor
xchg
sub
mov
sar
mov
jle
xchg
std
nop
loope
sbb
xchg
jl
mov
ret
jp
sbb
aad
pop
dec
push
div
lods
and
es
rcr
or
(bad)
xlat
cli
push
int3
or
mov
das
cld
dec
xchg
test
lds
(bad)
in
dec
and
imul
xchg
add
xchg
fwait
jg
aad
cli
jo
pmaxsw
cmp
mov
mov
arpl
aam
bound
sbb
mov
inc
and
jp
add
mov
and
or
jno
loopne
add
test
in
fimul
jb
push
push
jl
daa
into
ficomp
int3
sub
(bad)
mov
sub
xchg
(bad)
xchg
cmp
inc
mov
pop
cmp
add
mov
adc
out
stos
or
inc
or
jb
retf
and
inc
push
pop
outs
push
arpl
mov
inc
push
(bad)
and
xchg
repnz
fistp
test
inc
popa
xor
sar
lods
jg
or
jecxz
lock
adc
test
pop
je
movs
add
stc
outs
outs
push
into
xor
shr
mov
stc
outs
leave
xlat
loop
pushf
or
sahf
ret
cmps
mov
jnp
ss
ret
mov
test
mov
test
xor
arpl
psrld
jae
inc
jg
popa
movs
xchg
push
pop
jg
dec
jp
cld
jmp
xor
or
xchg
mov
sbb
hlt
mov
enter
xlat
(bad)
cmc
test
sub
dec
rcl
or
push
sub
popa
out
jl
push
(bad)
adc
xchg
mov
ror
pop
aas
dec
pop
scas
hlt
push
nop
xchg
das
loop
xor
fldenv
fcmovu
lods
fist
(bad)
pop
sbb
pop
xchg
lods
and
pop
add
cld
fst
cdq
sbb
rol
fcmovnb
(bad)
ins
or
push
(bad)
(bad)
pop
push
adc
(bad)
repnz
(bad)
fnstcw
jae
inc
sub
enter
aam
fs
mov
nop
dec
in
fstp
nop
mov
dec
xor
xor
mov
mov
stos
sub
(bad)
jns
outs
int3
or
xor
mov
outs
and
mov
xor
xchg
mov
cmp
xchg
in
lock
and
xor
push
mov
aaa
fist
mov
fldenv
pop
aad
shl
push
and
or
movs
loope
out
test
adc
xor
(bad)
jb
jnp
jbe
enter
ins
xor
in
out
(bad)
lock
push
adc
repz
stos
addr16
sub
push
out
or
mov
stos
xchg
pop
outs
ret
cmp
out
cs
jp
pop
(bad)
gs
or
nop
xchg
icebp
jo
inc
mov
sub
jb
fadd
ds
sbb
cmp
cld
sub
pushf
in
test
mov
fstp
xchg
lods
outs
retf
loop
rsqrtps
inc
test
cmc
shl
hlt
sub
mov
jl
daa
jg
dec
cmp
test
mov
rcr
or
pop
rol
loop
int
add
faddp
xchg
lahf
setge
lahf
jmp
das
lahf
mov
dec
cmp
js
sub
movs
lods
test
addr16
popf
add
mov
shl
dec
xchg
push
mov
fist
mov
mov
adc
int
pusha
sub
jae
jmp
repnz
xor
mov
into
scas
ins
push
mov
jbe
inc
mov
add
fldenv
add
(bad)
ins
leave
test
imul
jecxz
lds
loope
xchg
or
test
inc
mov
mov
xchg
mov
into
es
and
and
push
gs
xchg
push
int3
add
push
in
mov
jbe
push
data16
movs
sbb
jmp
aas
cs
mov
jecxz
mov
mov
xchg
jb
and
addr16
push
fs
xor
lahf
add
pushf
dec
cmp
adc
mov
mov
mov
clc
jno
imul
aam
fisub
and
or
outs
cmps
mov
repz
scas
in
ror
ficomp
jg
xchg
out
cdq
pushf
lock
xchg
pop
cmp
jnp
xor
out
mov
je
cwde
aaa
dec
loope
test
and
ins
mov
fsubr
cwde
ss
pop
mov
jne
arpl
mov
pop
cmp
jp
fdivr
push
js
mov
add
repnz
mov
mov
jmp
icebp
outs
popa
jb
push
jo
pop
jg
sbb
adc
sub
lea
cmp
fisttp
or
loopne
add
jl
mov
adc
push
cwde
hlt
sub
mov
into
xor
fist
shl
or
mov
fsubr
enter
sbb
pushf
mov
jb
mov
xchg
outs
xchg
inc
xlat
sbb
dec
fcmovu
add
repnz
and
cli
mov
bound
or
or
mul
mov
mov
sub
nop
sub
cdq
jo
fs
lock
cmp
dec
sub
outs
mov
or
in
out
fmulp
push
or
ret
xor
sbb
push
enter
adc
inc
stc
xlat
adc
jbe
pushf
push
sub
cmp
in
mov
pop
call
ins
jnp
fst
jg
add
sti
mov
sbb
xor
outs
imul
mov
mov
sbb
fild
ins
xchg
clc
mov
je
and
xor
adc
stc
(bad)
retf
jl
jmp
push
xlat
jb
mov
push
in
fadd
movs
xor
push
inc
or
ins
or
pop
add
in
rcr
cmc
pushf
pop
enter
or
loopne
lods
shr
(bad)
cs
xor
sub
gs
in
pop
inc
ud0
xchg
bound
outs
dec
xor
popa
mov
rol
out
jne
(bad)
xor
loop
or
cmp
test
fisubr
outs
(bad)
fadd
xor
and
movs
cli
and
ins
(bad)
jle
lock
or
dec
lds
call
test
inc
jmp
cmps
sub
cmp
push
mov
enter
es
pop
cmp
push
cmp
sub
cld
and
mov
sub
aad
add
outs
mov
outs
lahf
mov
jge
inc
xchg
nop
mov
aas
fimul
sbb
aas
lds
jge
jmp
push
mov
int
pop
fmulp
cmp
mov
lds
imul
call
fisubr
xchg
mov
call
and
ins
(bad)
and
jmp
mov
sti
test
dec
loop
out
add
adc
pop
popf
(bad)
popa
fidiv
inc
sub
and
dec
xor
ja
lahf
(bad)
call
jnp
xor
daa
mov
mov
fucomp
out
stos
xchg
test
stos
sahf
cdq
jnp
pop
test
addr16
stos
inc
jo
loop
jmp
adc
push
test
mov
inc
sub
(bad)
(bad)
jle
jns
mov
or
jnp
dec
cld
outs
fnstenv
leave
and
jp
stos
pushf
call
xlat
sub
inc
add
loop
adc
mov
mov
mov
push
xchg
dec
(bad)
xchg
sub
aad
fstp
mov
stc
jae
mov
add
xor
dec
not
cdq
cmp
int
or
in
icebp
push
dec
ins
add
mov
and
js
dec
cs
pop
sbb
dec
xchg
out
dec
mov
sbb
inc
jecxz
jns
push
fisttp
lds
outs
ja
jmp
xor
popa
rcl
shl
outs
(bad)
test
push
jnp
dec
imul
push
fadd
movs
mov
sbb
and
add
into
xor
outs
xor
mov
push
aam
inc
in
xchg
hlt
fcom
mov
adc
or
out
xor
cs
mov
lods
push
sub
and
cmps
pop
jg
loopne
out
mov
jmp
xchg
into
mov
(bad)
fwait
ja
pop
add
jl
fcom
movs
cli
sbb
sub
icebp
retf
xor
mov
mov
(bad)
lods
into
inc
ins
repnz
push
mov
loopne
in
push
mov
int3
push
call
push
dec
pop
call
jle
call
xchg
pop
imul
data16
pop
inc
mov
out
xchg
sub
push
add
sbb
xchg
xor
sahf
adc
xchg
pop
cld
int
or
jge
cmp
dec
adc
add
in
dec
xor
and
push
ret
mov
xor
sub
xchg
mov
cmp
xchg
jmp
(bad)
pop
jo
(bad)
popf
(bad)
jecxz
sub
mov
push
pop
pop
push
mov
in
and
push
fist
xor
mov
or
cdq
dec
test
push
cld
loopne
retf
es
pop
pusha
lahf
into
xor
inc
mov
push
cmp
sar
(bad)
and
adc
aam
test
push
aas
inc
in
stos
(bad)
fsub
fcom
and
adc
pusha
inc
sub
int
sub
and
(bad)
push
test
jno
add
aaa
bound
out
cld
shl
jno
mov
and
push
add
out
push
xor
(bad)
push
jl
push
xlat
das
test
sub
clc
mov
mov
pop
lds
test
push
dec
add
int
push
xlat
or
out
push
les
(bad)
movs
xchg
imul
push
add
dec
test
xchg
loope
ja
mov
cmp
mov
jbe
ficom
inc
jp
popf
cld
cmp
test
hlt
add
dec
xchg
jg
inc
popa
dec
sbb
mov
pop
(bad)
push
cld
ss
fwait
dec
xchg
cmp
shl
(bad)
je
add
push
test
push
cmp
mov
jb
stos
inc
cs
pop
sbb
dec
inc
mov
shl
sub
sub
adc
ficomp
cmps
push
pop
add
mov
mov
inc
inc
(bad)
push
es
xor
push
jge
pcmpeqb
jl
ss
cmp
or
sbb
call
lods
les
in
mov
and
inc
ins
and
xlat
push
inc
mov
ins
aam
xor
loop
int3
call
mov
jmp
xchg
xor
xchg
add
imul
mov
ins
and
cmp
mov
mov
pop
test
ds
mov
add
retf
pop
mov
movs
ja
mov
and
test
cmp
cmp
push
in
fsub
dec
pop
xchg
stc
mov
sub
cmc
in
lods
(bad)
nop
shl
xlat
cmp
test
cmp
cmps
xor
mov
ret
and
add
and
imul
lods
pop
mov
aaa
jge
in
mov
jmp
mov
test
xlat
jp
popa
mov
mov
and
dec
(bad)
fbld
test
(bad)
pushf
and
dec
inc
dec
mov
mov
mov
mov
outs
fiadd
cmp
xchg
cwde
fs
jo
fwait
out
add
js
pop
shl
pusha
and
or
cld
aaa
mov
mov
sub
rcr
stos
mov
adc
stos
and
cld
sbb
inc
popa
mov
mov
out
(bad)
fstp
sbb
cmp
inc
xor
clc
lea
xchg
stos
push
add
and
mov
push
shr
mov
movs
sub
(bad)
mov
js
pop
jmp
push
push
push
pop
gs
jb
pop
cli
(bad)
scas
gs
sbb
mov
jmp
push
mov
stc
(bad)
leave
jae
cmps
jl
xchg
push
or
test
fstp
adc
sbb
lods
inc
scas
mov
ins
ret
adc
cmp
sbb
std
mov
in
stc
dec
jo
popa
(bad)
retf
cld
lds
cmc
out
(bad)
repz
outs
int
sbb
add
les
or
in
xor
fcomip
jbe
cwde
outs
jge
scas
fistp
inc
jecxz
clc
jae
popa
xchg
shl
push
mov
es
nop
popf
hlt
mov
daa
or
sbb
loope
bound
mov
push
cmp
and
mov
push
or
gs
mov
scas
ins
jno
in
frstor
xchg
push
adc
(bad)
and
inc
or
mov
mov
aad
rcl
out
push
sub
es
xchg
add
retf
and
push
pushf
jmp
push
pop
xlat
or
mov
lock
xchg
push
jae
cmps
adc
outs
fadd
sbb
retf
inc
sub
inc
js
adc
or
xor
ins
popa
js
ins
fcom
mov
cmp
sbb
cmps
mov
mov
retf
(bad)
pop
xchg
mov
fidiv
out
rcl
and
loop
cli
or
into
sub
push
aam
push
inc
fisub
adc
pop
(bad)
aad
xor
sub
ds
std
ss
mov
jmp
jge
dec
cmp
fsubp
mov
sub
mov
pop
pop
aaa
es
mov
fcomi
jle
mov
or
sub
cdq
pushf
scas
rcr
(bad)
clc
sar
inc
imul
(bad)
rol
out
sti
mov
adc
pop
sbb
imul
sti
jns
adc
mov
adc
pop
ret
in
sti
and
dec
int3
ins
push
mov
aad
scas
jbe
sahf
and
dec
and
lock
aam
jo
dec
rcr
inc
into
clc
jmp
or
test
movs
add
cmp
adc
popa
stc
mov
dec
pop
ror
jp
in
ins
stos
ds
dec
push
fwait
lods
int
movs
arpl
fs
adc
mov
ins
pop
adc
mov
repz
div
pop
shr
loop
jmp
cmp
sub
mov
push
vpshad
sub
iret
adc
popa
mov
dec
mov
add
repnz
mov
adc
push
int
lock
cmps
jmp
loopne
jae
repz
movs
cli
arpl
mov
add
stos
mov
mov
(bad)
dec
pop
jb
es
push
pop
or
ja
add
sub
in
mov
mov
imul
pop
jnp
sbb
loop
stc
sbb
out
popa
or
adc
mov
mov
shl
into
jg
fist
mov
in
jb
fwait
sbb
jle
or
in
jmp
out
sbb
fnstcw
cmps
pop
lahf
pop
popa
ins
jns
mov
pop
xor
sub
sbb
push
pushf
sbb
mov
pop
and
jg
cs
(bad)
pop
daa
mov
jp
push
shl
inc
dec
and
push
(bad)
dec
dec
sbb
inc
mov
xchg
sti
adc
xchg
lock
xor
sub
push
pop
fld
inc
(bad)
mov
ins
stc
adc
mov
sub
pop
mov
push
pop
je
into
mov
mov
lea
movs
outs
js
push
xchg
inc
mov
sar
xor
xchg
adc
pop
pop
test
add
sub
ror
outs
sbb
mov
jmp
pop
in
mov
mov
leave
arpl
test
loope
xchg
aam
ins
jp
nop
int3
and
xchg
adc
in
ins
xor
mov
js
jb
pop
cmps
xchg
sbb
rcr
mov
popa
xor
xlat
stc
push
add
dec
mov
xchg
outs
into
and
or
ja
inc
xor
pop
in
sub
mov
jmp
loope
out
in
imul
lock
add
sub
in
es
mov
mov
adc
out
cmps
adc
imul
lahf
movs
inc
jb
cs
cwde
into
pop
push
lds
out
jnp
pop
jle
and
mov
test
and
sbb
cmps
xchg
and
and
pop
mov
and
rcr
outs
out
aam
lds
nop
sub
cmps
and
mov
jae
mov
fidiv
cld
pop
sbb
and
xchg
mov
in
sub
jo
push
pop
mov
add
push
fucomip
repnz
loope
dec
mov
mov
cli
or
rcr
inc
loope
in
test
aad
xor
dec
jns
addr16
cmp
test
fimul
out
rcl
fwait
add
repz
push
dec
inc
and
and
icebp
ss
xchg
stos
cmc
sub
cli
gs
pop
das
call
je
dec
loop
sti
add
and
push
int
xchg
aad
mov
sub
in
hlt
retf
aas
aam
adc
lahf
mov
jmp
push
push
push
dec
(bad)
outs
(bad)
(bad)
fld
mov
inc
bound
add
daa
cdq
or
xchg
sti
je
lds
jl
adc
(bad)
mov
dec
mov
inc
es
rcl
addr16
mul
(bad)
out
fidiv
outs
das
mov
adc
jmp
cmp
cli
shr
cmps
push
pop
rol
xchg
(bad)
fs
in
fmul
int3
aas
js
icebp
daa
xor
loopne
cdq
fidiv
mov
loop
cwde
ds
scas
test
xor
xor
sub
push
nop
xor
sub
or
mov
inc
mov
loope
fs
or
lds
aas
xor
call
inc
scas
enter
push
stos
inc
cmp
in
sahf
adc
mov
popa
inc
mov
mov
pop
mov
jle
pop
mov
mov
test
ror
mov
or
test
mov
nop
cdq
cmp
sub
xchg
sub
sbb
xchg
mov
pop
loop
adc
jne
fadd
jne
movs
push
lods
cmp
dec
dec
xor
loope
in
jge
shl
ret
inc
mov
ret
ins
cmp
movs
pop
fs
shr
pop
cmps
outs
cmp
pmuludq
in
mov
fbld
int
add
das
loop
add
arpl
int3
call
pop
cmp
push
cmp
sub
adc
(bad)
mov
xchg
sub
mov
arpl
shl
cmp
add
sbb
adc
ds
lock
pop
pop
in
push
adc
nop
pop
jno
lock
fiadd
sbb
fwait
ret
aad
sub
push
pop
iret
xor
sti
pop
xchg
cmps
stos
outs
mov
addr16
dec
mov
mov
jp
mov
and
mov
and
arpl
dec
fisttp
inc
mov
fcomi
loopne
shl
push
jmp
clc
xor
cs
call
stos
adc
fisubr
imul
sbb
push
pop
call
cmp
jns
(bad)
test
pop
xchg
and
inc
add
pop
or
add
pop
and
mov
inc
cmps
leave
adc
ss
and
daa
push
cmps
sbb
repnz
dec
lds
push
jb
or
xchg
dec
(bad)
aas
imul
fmul
out
inc
fcom
add
dec
dec
mov
or
not
outs
jle
lahf
adc
xchg
mov
push
pop
ret
push
or
and
adc
fcom
fnstsw
js
sub
loopne
push
pushf
jb
out
sbb
and
mov
(bad)
push
mov
jo
jmp
arpl
mov
dec
(bad)
mov
cmp
loop
je
or
inc
cmps
push
mov
sbb
movs
sti
rcl
out
mov
cmp
rol
outs
out
xlat
jbe
loopne
ins
nop
mov
sub
fidiv
test
dec
adc
and
pop
sub
outs
(bad)
repnz
inc
lahf
outs
jl
aad
ror
or
jne
dec
mov
cmc
arpl
jnp
(bad)
and
fs
cmp
mov
nop
jecxz
jno
jp
test
push
jne
jle
push
and
(bad)
iret
mov
dec
outs
stos
ins
ret
cmp
(bad)
loope
cmp
jmp
test
sub
ins
call
inc
stos
mov
fdivrp
sti
sub
ds
sbb
mov
push
pop
cmp
imul
mov
xchg
or
bswap
mov
retf
pop
and
xchg
add
and
inc
sbb
jecxz
aas
outs
stos
pop
mov
or
push
int3
cwde
shr
add
ror
scas
push
and
push
popa
or
scas
aam
mov
fild
dec
and
mov
jmp
outs
mov
in
inc
call
pusha
add
shr
loope
in
call
mov
dec
mov
sub
jle
cmps
enter
sti
ret
mov
xchg
not
in
pop
sub
fdiv
mov
ja
mov
aaa
mov
push
mov
imul
xchg
cmps
rol
rcl
in
and
fsub
adc
lahf
add
mov
outs
dec
mov
ja
or
mov
jecxz
mov
mov
xchg
shr
(bad)
pop
xchg
call
sbb
ja
arpl
mov
jo
xchg
xor
inc
xchg
mov
or
das
cwde
test
icebp
test
shl
gs
scas
and
cmp
add
lds
jne
nop
lods
(bad)
inc
mov
inc
jecxz
mov
imul
push
xor
dec
lock
and
inc
les
push
fucomip
inc
maxps
js
call
xchg
sahf
xchg
icebp
cmp
push
xor
mov
pop
out
mov
xlat
mov
cmps
fisubr
cmp
outs
push
data16
fisttp
ds
sahf
ror
push
sti
(bad)
shl
jns
cmp
daa
movs
loope
sti
cld
fwait
mov
push
cmp
adc
mov
sbb
cmp
push
fs
fcmovnbe
adc
xor
ja
mov
(bad)
pop
and
and
mov
mov
mov
push
out
stos
not
repnz
mov
xchg
pop
ficom
xor
loopne
or
mov
int
outs
sub
push
in
xor
cwde
sbb
ret
mov
jno
cmc
and
pop
sbb
rol
adc
or
lods
ins
fild
add
jecxz
and
mov
xchg
adc
int3
imul
daa
and
pop
nop
mov
xlat
ss
mov
jo
sbb
in
fs
mov
jne
out
or
in
xchg
jb
adc
adc
outs
out
ror
and
add
cmp
sub
jae
cmp
(bad)
sub
or
fdiv
in
sbb
out
push
dec
std
adc
cmc
cs
jae
and
xor
ja
sbb
push
sub
fmul
adc
and
dec
div
xchg
fidiv
mov
fldcw
stos
shl
jg
jb
pop
inc
inc
xor
adc
(bad)
das
data16
call
test
push
call
mov
jo
or
mov
(bad)
es
ror
mov
retf
(bad)
out
xor
mov
outs
mov
sar
retf
in
movs
rcl
mov
fisttp
sbb
ss
jg
xchg
inc
xlat
mov
or
pop
aas
adc
das
mov
sahf
mov
(bad)
lock
xchg
iret
adc
popa
sbb
and
sahf
mov
outs
sbb
rol
inc
lods
cmc
and
xor
fimul
pop
inc
stos
or
pop
pop
test
popf
int
mov
jecxz
dec
fucom
jg
jbe
push
pop
push
xor
fwait
hlt
faddp
dec
jns
jg
es
inc
imul
fsubr
les
cld
cs
ins
(bad)
push
add
jbe
adc
xor
push
xor
iret
inc
adc
test
jl
push
jmp
jmp
ins
add
in
(bad)
jmp
aaa
pop
out
ins
sbb
paddusw
jne
scas
push
pop
lods
fstp
aam
fistp
mov
cmp
mov
adc
(bad)
mov
iret
in
outs
test
mov
sbb
jecxz
fs
cmp
and
jmp
int3
cmps
sub
xchg
sahf
push
push
dec
hlt
ins
fcomp
repnz
gs
lods
ds
push
xchg
lahf
int
mov
pop
js
fild
mov
inc
sub
ret
cmc
scas
iret
and
loop
dec
pusha
xor
js
dec
(bad)
xor
fimul
cs
mov
mov
retf
cmp
lea
retf
idiv
mov
xchg
outs
mov
cmp
test
clc
mov
int3
jnp
leave
rcr
(bad)
out
xchg
sub
pop
and
pushf
mov
jno
mov
or
movs
add
retf
pushf
add
mov
cmp
aad
call
mov
stos
test
add
in
and
or
test
cmps
push
mov
das
mov
cmp
push
xor
pop
outs
dec
xchg
movs
sub
ror
shr
addr16
lock
outs
popf
xchg
loopne
hlt
icebp
inc
jmp
outs
stos
fdivr
jg
inc
pop
jp
mov
mov
xchg
pop
or
mov
lea
int
repz
jp
jnp
pop
ins
push
mov
cmp
xor
call
pop
std
xor
xor
rol
and
mov
lahf
nop
mov
dec
push
(bad)
fiadd
or
shr
call
push
sbb
test
inc
mov
adc
out
mov
cmps
inc
adc
push
jge
dec
out
push
scas
mov
(bad)
cmp
and
aam
inc
fcom
ins
push
ret
test
cmp
dec
mov
call
mov
or
ins
mov
or
cmp
retf
ins
es
fsubr
mov
data16
call
(bad)
pop
imul
mov
int3
pop
dec
xchg
inc
lods
aam
adc
xor
push
fimul
stc
xor
sub
jne
jp
std
and
sahf
mov
sbb
sbb
xchg
stos
xchg
hlt
(bad)
gs
mov
in
aad
adc
ret
add
add
push
pusha
imul
add
pop
push
jns
xchg
rcr
popa
cmp
hlt
hlt
jp
pop
and
mov
lock
sub
into
mov
xchg
xor
add
push
leave
(bad)
hlt
inc
cli
rcl
stc
mov
ret
imul
int
mov
in
add
popa
sub
imul
(bad)
sub
and
jle
sbb
enter
leave
jmp
or
repnz
inc
cmps
push
xchg
dec
inc
hlt
xor
les
inc
mov
neg
stc
xchg
ret
xor
jecxz
cwde
xor
pushf
dec
mov
or
loope
mov
bnd
adc
pushf
mov
or
fdiv
nop
push
shl
mov
add
shl
pop
mov
call
scas
dec
js
or
int
bound
cli
test
int
cs
mov
std
dec
fisubr
or
iret
pop
int
stos
xor
ret
dec
out
test
cmp
or
dec
js
das
out
mov
mov
sbb
mov
jmp
lahf
or
inc
push
sbb
push
inc
in
jo
mov
retf
sub
(bad)
loope
push
test
es
mov
ins
mov
push
(bad)
call
push
test
push
push
inc
xchg
pop
dec
jns
out
fild
bound
inc
sbb
cmps
lods
cwde
jbe
les
add
dec
daa
movs
and
inc
xchg
jae
lds
sub
retf
in
inc
popa
inc
dec
in
sbb
mov
push
dec
add
add
push
inc
add
push
cmp
cmc
adc
add
cs
dec
sub
and
jns
(bad)
jo
jb
fnsave
into
xor
jg
xrelease
jo
test
mov
nop
push
and
retf
sbb
sahf
pop
cmp
out
jecxz
push
and
dec
or
xchg
dec
sub
mov
pop
mov
std
pop
jg
sbb
dec
fcomp
jmp
dec
repnz
pop
inc
nop
rcl
gs
ins
lods
mov
push
mov
sbb
mov
and
push
pop
cmp
add
in
add
push
fiadd
lahf
mov
scas
jno
movs
fwait
mov
jge
in
pushf
outs
jecxz
movs
stos
ret
imul
out
jnp
mov
rol
or
mov
mov
neg
dec
dec
(bad)
leave
or
pop
jo
dec
ins
out
mov
popf
call
loope
repz
sbb
jno
dec
cmp
or
inc
fwait
test
stos
mov
repnz
ror
mov
js
cli
mov
hlt
jns
outs
adc
sti
mov
mov
adc
xchg
mov
stos
cmp
mov
push
xor
mul
adc
enter
and
and
push
pop
retf
adc
dec
sbb
jne
jno
iret
mov
call
push
push
cmp
int
repnz
test
adc
in
jae
popf
sbb
leave
sbb
xor
xor
and
rcr
inc
rol
stc
pop
mov
and
mov
into
retf
fdiv
mov
push
bound
mov
retf
neg
add
sahf
cmp
test
mov
adc
bnd
fcmovnbe
leave
mov
mov
mov
cli
les
ret
ds
jl
(bad)
je
cwde
pop
popa
nop
sti
push
add
add
outs
xchg
je
cli
dec
and
dec
pop
mov
stos
jecxz
add
sub
cli
rcl
ja
cli
test
into
sbb
pop
sbb
mov
ds
fs
out
sbb
and
push
pop
mov
adc
xchg
ror
inc
ficom
jne
jnp
xchg
int
mov
mov
mov
imul
retf
aam
jmp
dec
cmp
cmc
dec
dec
pop
adc
xchg
add
inc
xor
sbb
sbb
and
pop
cmps
pop
loop
sub
add
call
push
adc
test
out
and
push
jmp
push
test
xlat
sbb
popf
or
push
retf
cmp
cmp
pop
lods
ds
repnz
loopne
xchg
ffreep
pop
dec
ficomp
mov
xchg
jnp
je
sbb
in
pop
lods
sbb
sub
loopne
fisttp
or
loop
in
mov
cwde
jb
stos
sahf
add
push
pop
adc
pop
push
lods
pop
aaa
and
pop
lods
sbb
les
cmp
sbb
ja
and
mov
pop
loop
or
mov
sub
test
mov
outs
shl
retf
mov
push
or
mov
stc
fiadd
sub
sub
out
mov
jle
aad
pop
push
sub
pop
push
es
enter
xchg
mov
ds
add
push
mov
arpl
les
call
imul
xor
add
clc
jecxz
xor
popa
cmp
shr
xor
setbe
fsub
test
fwait
into
mov
push
mov
stos
(bad)
jp
push
stos
add
cmc
test
or
daa
cmps
test
imul
jne
pop
and
mov
inc
inc
sbb
push
sub
dec
jbe
repnz
scas
enter
aas
test
pop
sbb
mov
mul
sub
mov
scas
xchg
jno
push
cwde
cmp
and
cli
xor
mov
out
or
pusha
cmp
retf
mov
popf
lock
cdq
mov
cmp
xchg
lods
xor
mov
xchg
adc
lock
imul
rol
mov
dec
adc
inc
cdq
imul
(bad)
sub
xlat
rcl
icebp
dec
outs
test
rcr
or
lock
int3
cmp
mov
or
(bad)
or
mov
sbb
jns
data16
ins
into
scas
push
jne
sbb
data16
cmps
int3
or
dec
sahf
rcr
lahf
pop
pusha
cs
or
adc
add
dec
push
jno
(bad)
push
fcomp
jb
xchg
jg
shr
ds
cmps
pushf
cwde
mov
cmp
add
sbb
dec
pusha
xlat
xchg
inc
jecxz
icebp
and
out
popa
push
movs
repnz
arpl
(bad)
sub
(bad)
adc
mov
xor
jle
dec
mov
push
and
das
inc
cmp
push
cmc
jp
or
lods
xchg
call
sbb
std
leave
in
test
aas
or
sub
test
inc
ret
jl
pop
stos
mov
out
fwait
loopne
test
mov
xchg
mov
push
cmp
or
fcmovu
sbb
ss
mov
int3
pushf
adc
pusha
adc
in
loopne
in
and
xchg
mov
retf
lods
js
std
aaa
pop
clc
arpl
or
jmp
loop
into
scas
push
inc
call
scas
mov
cmp
loope
or
mov
xchg
lods
ror
outs
jge
push
in
sar
lahf
mov
push
popf
and
mov
arpl
mov
mov
pushf
stos
and
rol
mov
sub
pushf
test
add
fmulp
push
lss
fbld
push
mov
jbe
(bad)
mov
xlat
sbb
out
or
mul
out
out
cmp
sub
jmp
add
add
imul
or
pop
inc
test
adc
cdq
mov
dec
das
scas
ds
mov
mov
xor
xor
cmp
xchg
loopne
pop
or
in
fidiv
mov
push
xor
jns
sub
cdq
fwait
les
cmps
shr
fmul
loop
mov
stos
adc
les
mov
inc
jno
sahf
mov
push
out
and
test
sub
lds
hlt
pop
jecxz
jno
jl
push
inc
pop
repnz
(bad)
jmp
sub
sub
bound
inc
push
jl
xchg
gs
retf
stc
sbb
imul
and
push
es
inc
adc
addr16
ror
fwait
test
add
and
cmp
or
(bad)
cmp
in
push
cmc
jnp
push
mov
dec
and
push
inc
xor
mov
aam
add
add
and
pop
cmp
or
repz
mov
rep
addr16
pop
pop
into
in
sti
mov
ret
or
cmc
push
in
rcr
clc
sbb
add
or
xchg
or
add
std
add
or
xor
jo
jns
adc
fnstsw
(bad)
xchg
ins
fimul
sub
ret
mov
out
xchg
sbb
or
or
popa
mov
mov
push
stc
inc
ret
push
sbb
jb
jg
xchg
(bad)
call
loope
and
stos
lahf
leave
arpl
pmaddwd
pusha
cmc
jbe
mov
test
mov
retf
inc
cmp
pusha
test
cmp
aas
rcl
push
inc
add
fldcw
dec
pop
pop
stos
xchg
stos
sar
mov
cmp
jle
(bad)
sahf
lahf
loope
jge
stos
test
adc
in
sbb
push
sub
sti
mov
and
ret
lods
cmps
clc
test
ins
(bad)
and
je
sub
mov
aad
push
cmp
adc
mov
lahf
ret
daa
pop
or
or
sahf
arpl
rcr
shld
mov
jns
inc
mov
and
xchg
jecxz
cmp
push
cmp
cmp
xchg
movs
cmp
fyl2x
(bad)
call
call
push
arpl
jg
je
mov
or
xchg
adc
pop
das
out
js
imul
add
lods
mov
leave
xor
js
hlt
mov
jecxz
push
test
fimul
dec
mov
cmp
cs
int
cmp
fst
adc
mov
std
pop
sbb
and
push
sbb
sub
(bad)
sbb
mov
push
mov
clc
push
outs
pop
xor
sbb
hlt
xor
in
sub
push
out
leave
call
(bad)
repz
push
int
imul
mov
mov
inc
arpl
loop
je
fadd
fnstsw
fstp
cld
sbb
out
jnp
cmps
das
inc
stc
mov
sbb
or
jo
std
mov
ror
out
add
push
test
fild
sub
(bad)
sti
sti
loop
add
jg
push
jo
push
adc
fist
es
and
cmps
test
dec
cmps
adc
add
jno
mov
das
xchg
and
test
shl
add
dec
pop
or
cmp
mov
push
lea
mov
xchg
xchg
iret
pusha
fcmovnb
cmp
loop
es
pop
int3
ret
dec
leave
mov
scas
sbb
(bad)
leave
xor
lock
inc
popa
push
rcl
mov
cld
adc
ja
daa
mov
sti
fild
mov
mov
xchg
and
cmp
lds
sub
sub
pop
xchg
dec
hlt
xchg
dec
sub
cmp
mov
fwait
and
rcl
add
jae
or
mov
push
pop
mov
sti
mov
lahf
dec
int
sub
nop
stos
jle
jnp
xchg
sbb
mov
inc
(bad)
cmps
xlat
stos
push
jbe
jnp
mov
pushf
js
xor
mov
add
mov
sbb
int3
ret
out
shl
mov
jmp
bound
xchg
jmp
test
mov
(bad)
mov
dec
mov
pop
pushf
add
jbe
sub
dec
cwde
adc
or
dec
nop
data16
call
retf
gs
fs
or
out
mov
jg
push
pop
inc
into
sti
add
push
inc
mov
dec
js
xchg
mov
or
dec
movs
sub
xchg
movs
test
sbb
push
je
pop
je
push
jnp
cmp
cwde
fst
sbb
icebp
cmc
(bad)
int3
lds
xlat
js
or
jns
popf
rcl
add
scas
aad
ins
or
mov
xchg
cld
sub
(bad)
push
int
fdiv
jae
arpl
push
sti
daa
xchg
xchg
(bad)
loopne
mov
push
in
jge
dec
push
sub
inc
xchg
into
jp
icebp
gs
neg
ins
(bad)
mov
pop
mov
xlat
test
rcl
jge
rol
ret
mov
cmp
xchg
mov
(bad)
shl
pop
sti
dec
sub
(bad)
sti
jp
push
xor
aaa
int
ret
add
cmp
jl
in
push
arpl
mov
xchg
push
out
dec
retf
cmps
xor
fst
mov
mov
les
sar
dec
out
and
cmp
gs
nop
(bad)
sub
adc
jmp
mov
mov
cmp
adc
cmp
mov
ds
inc
mov
sub
call
and
jle
or
sar
and
push
(bad)
out
in
xchg
test
sub
add
pusha
ja
push
dec
rcl
popa
adc
mov
imul
dec
push
daa
or
jae
shr
jns
jno
xchg
sbb
js
ds
gs
lock
data16
scas
in
retf
fst
popf
adc
ins
ret
pushf
add
mov
mov
pop
popa
fs
movs
jmp
xchg
add
inc
inc
push
daa
loop
and
dec
or
xor
mov
add
out
add
xchg
stc
movs
push
push
jne
dec
or
xchg
jnp
cli
mov
in
adc
dec
cmp
or
mov
inc
xor
mov
inc
jmp
movs
xor
push
dec
jmp
cmps
add
(bad)
adc
inc
leave
or
dec
fdivr
aas
clc
and
mov
les
xor
fst
retf
cmps
and
nop
call
pop
adc
enter
adc
push
or
jle
dec
mov
jne
push
jae
push
add
in
cmps
std
sbb
dec
jnp
out
sub
inc
test
mov
add
jl
cmp
and
fstp
test
popf
into
sbb
ret
inc
jno
inc
pop
lods
mov
ins
add
push
lods
in
cmp
push
cli
retf
mov
xor
or
add
and
inc
mov
stos
neg
mov
xlat
push
fst
(bad)
mov
jmp
call
lds
fwait
xchg
xor
sbb
js
sbb
sub
rcr
cmp
in
mov
push
(bad)
mov
and
xor
aaa
xchg
frstor
fwait
pmaxsw
dec
ja
cmps
(bad)
jo
cmp
leave
pop
repz
mov
adc
fst
inc
or
cmp
push
adc
in
mov
jae
jns
sub
ins
xor
(bad)
mov
mov
or
into
std
xchg
push
sahf
and
mov
test
adc
mov
mov
cs
cmp
pop
add
dec
repnz
mov
pop
pop
and
jg
das
ffreep
or
movs
adc
lods
pop
jl
es
mov
dec
cmps
test
loopne
xchg
push
xchg
js
fimul
jne
(bad)
dec
cmp
(bad)
out
xlat
cwde
call
push
mov
cmps
pop
ins
popf
sub
jnp
out
mov
retf
pop
jecxz
sbb
arpl
retf
cmps
add
inc
adc
das
inc
out
push
icebp
jmp
mov
jae
xor
mov
cmp
jns
pop
inc
imul
leave
push
lock
sbb
push
sbb
push
sbb
ins
les
adc
push
mov
lods
jbe
rcr
mul
stos
(bad)
xchg
loope
fadd
cmp
stc
les
out
xor
int
inc
fbld
add
shr
jnp
outs
int
pushf
cmp
ss
adc
mov
mov
lahf
mov
pop
dec
ins
adc
mov
nop
ror
xor
faddp
cmps
sub
mov
jle
lods
inc
aaa
add
aad
mov
inc
mov
rcl
aad
imul
adc
push
test
mov
jle
cmp
bound
xchg
ret
sub
mov
jne
jmp
ins
lea
pop
jns
pop
mov
sbb
arpl
aaa
add
into
mov
dec
sbb
push
shl
pop
fldenv
int3
push
pop
in
pushf
mov
das
out
and
jmp
push
int3
imul
add
xor
fidivr
xchg
fs
xchg
ror
addr16
and
js
and
ins
out
imul
pop
into
pop
lods
test
lahf
jae
mov
mov
cwde
mov
add
clc
lds
mov
inc
mov
outs
push
add
jno
pop
cmps
mov
push
inc
mov
xchg
mov
mov
ret
xchg
loopne
(bad)
aad
xchg
mov
mov
call
lods
les
push
imul
push
int3
retf
and
packsswb
(bad)
out
or
cmp
shl
mov
in
xor
jne
xor
nop
enter
ret
movs
jle
(bad)
aam
mov
ss
rol
inc
jbe
fdivr
sbb
mov
arpl
ror
divps
das
les
das
retw
or
sbb
ss
ret
adc
adc
push
lods
(bad)
cmc
adc
into
sub
mov
push
sub
xor
mov
rcl
mov
mov
mov
pop
mov
outs
pushf
jae
xchg
(bad)
cmp
in
jae
int
daa
and
imul
test
pop
scas
sub
push
add
test
dec
xor
mov
aad
jno
sahf
out
mov
and
or
xchg
bound
popf
ja
xchg
sbb
imul
aam
inc
mov
test
in
imul
mov
sbb
movs
push
mov
add
mov
or
jbe
shr
sar
xchg
and
div
mov
dec
aam
jo
sub
add
adc
lock
dec
and
not
aad
loope
pop
mov
nop
xor
addr16
inc
xchg
mov
sub
test
leave
sbb
int3
out
mov
lds
mov
adc
mov
dec
jge
push
dec
or
fcmovne
dec
xchg
xchg
das
jae
scas
sbb
movs
push
mov
nop
test
xchg
sub
(bad)
(bad)
xlat
jo
bound
pop
xchg
jg
nop
sbb
test
stos
adc
pop
dec
add
popf
ja
add
add
pop
or
inc
in
and
jmp
sub
popa
out
sub
inc
lahf
sbb
cmp
push
jge
aad
jo
xor
push
jne
les
pushf
and
push
popa
fidiv
retf
mov
stc
rcl
adc
cmp
add
rcr
mov
sub
or
retf
xor
mov
ret
cmp
push
ins
push
idiv
sbb
(bad)
pop
nop
pop
movs
aam
pop
push
mov
cdq
push
pushf
mov
cmp
fild
bound
sub
jo
aam
shl
sbb
(bad)
out
xchg
aas
shld
inc
sub
mov
cld
pusha
sbb
sub
sbb
rol
fwait
xchg
cmp
das
mov
and
or
out
sub
(bad)
sub
pusha
or
jp
inc
pushf
ror
xchg
cdq
sbb
ja
add
add
ins
out
cmp
into
jmp
push
fadd
shr
push
xor
sar
lahf
sbb
push
mov
mov
mov
fidivr
adc
(bad)
mov
mov
jns
jnp
std
jmp
jae
mov
gs
push
xchg
xor
xchg
dec
add
int3
shr
ficom
xchg
add
jl
or
movs
scas
mov
(bad)
push
jge
iret
sub
add
sub
pop
les
or
ins
xchg
cmp
pop
adc
inc
add
fst
jne
cmp
mov
fmul
ret
or
test
lahf
adc
popf
sub
daa
pushf
test
cs
addr16
mov
xor
jo
push
mov
retf
ror
cmp
pop
and
adc
sbb
pop
repz
retf
pop
or
mov
stc
jmp
push
push
pusha
mov
lods
comiss
fwait
clc
xor
dec
inc
aas
pop
aad
adc
mov
sub
dec
cmc
leave
not
sbb
mov
jne
jmp
push
(bad)
aaa
test
fwait
sbb
mov
inc
mov
or
not
fild
jecxz
dec
mov
ins
push
jle
int
loope
and
push
mov
movs
push
fs
sub
imul
movups
retf
xor
mov
enter
mov
xchg
push
and
shl
cmp
outs
call
inc
retf
rol
pop
push
ins
popa
push
sub
cmp
jmp
add
jne
inc
mov
aad
inc
lds
cdq
mov
jmp
push
xchg
fld
nop
das
mov
loop
cmc
mov
mov
sub
aas
sbb
xchg
cli
fstp
mov
jnp
cmps
xchg
sti
add
push
ins
cmp
jne
test
popf
iret
pop
shl
fstp
adc
add
jp
and
inc
push
pop
xchg
out
inc
cmp
mov
sbb
clc
jne
xchg
rcr
adc
fadd
inc
cs
ret
adc
ror
sbb
sub
mov
fwait
aaa
cli
mov
push
jae
mov
inc
fdiv
dec
mov
or
mov
jmp
and
aaa
rcr
xchg
pop
imul
push
rol
jp
cmp
idiv
mov
push
xchg
cmp
sub
loopne
ins
push
ror
sbb
adc
sti
movs
cld
ss
scas
pop
out
mov
psrlq
pushf
push
sbb
bnd
fimul
cwde
cmp
and
clc
pop
adc
jl
mov
add
inc
ret
jl
xor
scas
or
mov
lods
nop
leave
(bad)
(bad)
fdiv
jo
cmps
sub
outs
push
or
(bad)
add
fdiv
loop
arpl
int3
inc
xchg
(bad)
int
push
mov
ret
(bad)
cmp
mov
mov
hlt
add
jnp
in
push
sub
xlat
aam
dec
or
sub
inc
jl
mov
jmp
sub
sbb
mov
pop
out
mov
mov
add
pop
adc
and
in
sbb
sahf
aad
mov
inc
aad
sahf
rol
leave
jne
add
push
mov
xchg
es
and
adc
xchg
pop
mov
pop
and
add
pushf
lods
cdq
add
jo
sub
std
mov
jp
add
mov
xchg
div
cmps
je
push
aam
loope
mov
or
in
mov
cld
jmp
mov
scas
or
pop
and
cmp
pop
push
mov
inc
mov
es
pop
jmp
dec
fucomip
adc
jno
inc
out
dec
mov
rcr
sbb
js
sub
loopne
dec
ror
sub
call
test
imul
cmp
mov
aas
push
(bad)
push
enter
push
loop
or
cmp
jo
xor
icebp
lock
cmp
aad
push
neg
add
jmp
test
aad
test
cmps
addr16
lods
xor
dec
lea
add
xor
(bad)
in
cmp
adc
push
(bad)
addr16
pusha
aas
out
fidivr
mov
and
xor
xor
cli
out
sub
sti
inc
or
sbb
xchg
mov
aad
or
dec
aad
jle
ds
jge
mov
shl
push
outs
mov
jl
cld
aam
cmp
clc
adc
pop
call
xor
repz
mov
lock
mov
sub
xor
dec
cmp
aas
add
add
cwde
xchg
aad
and
stc
mov
mov
jp
cdq
and
stos
mov
leave
stos
pop
loopne
fsubrp
sub
stc
pop
mov
imul
mov
mov
dec
(bad)
dec
lods
pop
enter
movs
icebp
jmp
loopne
shl
sbb
outs
jmp
fs
ds
sbb
adc
mov
imul
fwait
(bad)
mov
add
xchg
sub
mov
mov
inc
pop
push
mov
jo
sub
xor
pop
mov
nop
xchg
mov
push
ret
dec
lds
lock
xchg
and
std
retf
loop
cld
or
mov
add
retf
mov
in
test
lods
jecxz
and
cld
xlat
stos
popa
inc
mov
lds
test
mov
jmp
popf
cs
adc
jg
js
xor
mov
scas
js
jle
push
mov
outs
dec
push
mov
push
push
xchg
ret
outs
xchg
mov
add
sub
out
into
push
jge
imul
mov
or
xor
push
pop
call
out
and
and
push
movs
adc
push
addr16
icebp
retf
jns
mov
dec
pop
push
fist
cmps
cs
jae
cmp
int
adc
je
pop
data16
shl
cs
les
mov
test
nop
out
aad
adc
adc
mov
push
pop
aaa
rcr
fs
mov
ret
xor
in
sahf
cmp
add
aad
mov
add
lods
push
jp
shr
or
xchg
retf
test
fs
dec
std
cwde
scas
(bad)
cmps
int
mov
retf
xchg
push
add
dec
jp
push
movs
mov
or
push
(bad)
imul
stc
sbb
mov
js
jmp
call
fstp
aas
or
test
ja
mov
xchg
in
jbe
mov
int
loopne
cmps
add
cmp
push
push
lea
out
fmul
test
out
xchg
daa
test
sbb
inc
jecxz
and
les
gs
cmp
mov
xchg
or
jg
sub
gs
mov
jns
jp
movs
mov
aas
push
cdq
repnz
cmc
scas
push
icebp
(bad)
gs
mov
jg
cmp
dec
stc
mov
je
shl
xchg
movs
ds
loope
jge
shr
loopne
fwait
jbe
mov
test
gs
and
repz
scas
push
xchg
popa
mov
dec
adc
sbb
pop
sti
jl
sahf
leave
xor
xor
test
cs
(bad)
test
into
popf
out
add
outs
jno
jmp
adc
imul
(bad)
icebp
add
iret
pop
stos
add
into
push
fisubr
add
add
fisttp
(bad)
es
call
imul
pop
pushf
inc
dec
popf
scas
ins
pop
pop
mov
in
inc
pop
xchg
gs
pop
mov
cld
fmul
inc
sti
push
and
add
mov
call
and
mov
arpl
iret
fcmovu
adc
cmp
push
sahf
neg
inc
pop
ret
mov
repz
clc
popa
in
or
push
int
shl
or
movs
lea
cmps
jno
ret
cmps
ins
pop
je
pop
sub
push
ins
push
dec
xchg
push
outs
repnz
je
imul
push
adc
jnp
out
pop
lods
call
sbb
add
xchg
dec
cmp
xor
push
(bad)
and
test
fcom
jbe
pop
sub
mov
or
fsub
jecxz
sahf
fbld
xchg
inc
test
and
and
cmp
sbb
jmp
fsub
inc
bndldx
jno
movs
add
add
and
sub
inc
jbe
shl
neg
and
repz
cdq
icebp
pop
arpl
mov
xchg
and
je
sub
xor
mov
mov
pop
lea
cmc
xchg
xchg
jo
(bad)
jmp
mov
cs
rol
movs
mov
mov
cs
mov
xchg
jnp
or
out
dec
mov
add
jmp
push
cdq
pop
pop
dec
jl
ror
dec
xor
ins
dec
and
mov
xor
or
mov
in
sub
mov
gs
gs
jmp
ret
ins
stos
cwde
adc
adc
mov
mov
mov
mov
sbb
(bad)
or
push
xchg
mov
sbb
sbb
es
add
hlt
rcl
loopne
xchg
mov
into
dec
repz
pop
dec
cs
xor
nop
jp
fwait
rcl
dec
cmp
pop
xor
sub
int
mov
pop
(bad)
lock
bound
aad
xchg
sti
stc
int
int3
into
dec
push
loop
fcomp
mov
in
(bad)
jns
fsubr
out
(bad)
sbb
adc
mov
add
les
adc
clc
ja
sub
push
cs
scas
cwde
fisttp
cmp
cli
pusha
jp
jno
fstp
les
mov
sbb
and
adc
leave
pop
xor
addr16
cwde
test
inc
sar
shl
add
push
fld
xchg
scas
jg
out
pop
rol
dec
mov
and
(bad)
jmp
test
push
add
mov
stos
sbb
jne
push
xor
jl
xor
out
loopne
cmp
pop
ret
fcom
out
repnz
mov
jns
fwait
and
jl
dec
fwait
mov
fmul
xchg
(bad)
and
add
(bad)
push
or
mov
fisub
mov
fnstsw
adc
pop
adc
mov
jns
cmp
xchg
mov
cmp
lods
inc
dec
sub
or
addr16
mov
pop
dec
outs
cmp
pushf
call
mov
in
stc
mov
hlt
ins
enter
ficom
jne
es
sbb
cmc
fisttp
cmp
pop
pop
push
inc
std
add
push
mov
adc
jns
inc
mov
adc
cmp
jmp
jno
xchg
push
ss
fwait
aam
cmc
xchg
mov
into
movs
push
inc
(bad)
mov
stos
ret
leave
rol
dec
push
ret
xchg
fiadd
cmp
loop
jno
jg
pop
push
cmp
pop
into
out
pusha
hlt
cli
adc
fsub
mov
sbb
mov
jno
jmp
mov
adc
shr
lahf
daa
dec
xchg
jp
sub
in
(bad)
ja
retf
jno
call
mov
es
add
pop
fwait
xor
test
sub
ret
(bad)
jnp
xchg
ss
xchg
push
lock
cli
push
sbb
sbb
cmp
dec
mov
jg
loopne
sbb
(bad)
push
xor
inc
loopne
out
jge
cmc
aaa
(bad)
jmp
shl
ja
jp
neg
inc
add
pushf
iret
ds
adc
dec
pop
mov
rol
dec
xlat
arpl
cmp
sbb
xor
mov
(bad)
push
sbb
and
sub
test
sbb
and
xchg
mov
popa
push
mov
fwait
aad
lea
pop
mov
jae
std
adc
pop
aas
fisttp
ret
push
mov
test
push
pop
cmps
std
mov
push
mov
sar
jecxz
xlat
cdq
xchg
(bad)
or
in
aad
dec
popa
mov
xchg
add
aaa
js
and
adc
pusha
repnz
mov
mov
jmp
fild
add
sahf
mov
aad
dec
sub
aas
jl
jae
adc
imul
scas
iret
pop
rep
and
fstp
test
jmp
pop
jl
call
sbb
adc
shr
mov
jge
fild
sub
mov
jno
fnstsw
sub
outs
mov
movs
xchg
or
repz
sti
stos
gs
jp
(bad)
aam
xchg
leave
fdiv
fwait
pop
lahf
in
xchg
sub
addr16
cli
push
fucomi
inc
lds
jp
repz
out
jp
inc
dec
mov
adc
les
mov
out
(bad)
cmps
jge
xchg
(bad)
xor
push
sbb
cld
and
mov
daa
out
arpl
test
add
ins
(bad)
mov
loope
push
ror
not
xchg
dec
pop
add
nop
mov
in
pop
jns
xor
or
sahf
or
xlat
jmp
push
mov
pop
mov
(bad)
mov
ficom
and
xchg
sbb
retf
xor
cmp
jbe
inc
xor
pop
stos
xchg
add
outs
jae
sub
fistp
pop
aam
leave
dec
push
adc
stc
inc
adc
cwde
inc
dec
into
adc
pop
test
cmc
jle
push
mov
mov
inc
or
mov
shl
lds
cmp
mov
push
add
ror
fsubr
mov
and
sub
xchg
xor
call
mov
mov
(bad)
sbb
stos
sbb
(bad)
push
pop
loope
shl
test
(bad)
sub
ror
and
fsubp
xchg
retf
dec
test
gs
mov
mov
sbb
and
adc
int3
les
xchg
pop
or
push
mov
clc
mov
imul
icebp
fbld
and
ror
xlat
fwait
adc
stos
mov
push
jecxz
adc
and
mov
push
pop
inc
mov
loope
mov
jne
xchg
mov
fnstcw
(bad)
outs
movs
pusha
jns
pop
xlat
push
xchg
int
jp
out
gs
loop
inc
mov
out
shl
inc
sub
jp
add
fiadd
cld
sub
inc
ss
xchg
std
mov
inc
imul
mov
call
xchg
push
jl
fdivr
cli
jo
adc
mov
jne
idiv
daa
add
jl
(bad)
stos
cmps
mov
pop
mov
aam
pop
and
jle
stc
inc
enter
je
sbb
mov
std
pop
xchg
fmul
jb
popa
cmp
dec
ja
cmp
mov
jl
repnz
pop
xlat
xchg
jg
neg
pusha
loop
jecxz
or
fcmove
cmc
jecxz
cwde
mov
jg
enter
jb
lods
mov
fstp
repnz
ins
and
pop
scas
setne
or
jmp
cmp
add
dec
out
lds
jg
sub
(bad)
or
call
test
inc
stos
outs
pop
mov
jecxz
imul
push
mov
or
ret
ja
test
repnz
jb
push
cmp
cmps
jmp
into
xor
fwait
popa
retf
and
add
adc
hlt
adc
hlt
out
lahf
inc
xchg
xor
xchg
xchg
fld
je
fstp
cmp
dec
int
std
jg
xor
(bad)
fnstenv
mov
mov
adc
pop
and
or
push
pop
xor
je
inc
jno
mov
sbb
adc
mov
lods
shr
jmp
pop
cmps
sbb
rcl
retf
adc
stc
outs
iret
(bad)
iret
rcr
aam
fist
scas
lods
rol
sub
push
imul
xlat
jle
shr
cmp
ins
push
aam
xchg
and
mov
stc
cld
push
fisttp
push
dec
sar
inc
clc
stos
cmps
pop
or
test
cli
mov
cmp
call
or
movs
mov
push
outs
(bad)
mov
cwde
push
ins
mov
sub
push
aam
xchg
fiadd
fs
push
jmp
inc
xchg
push
(bad)
pop
icebp
jnp
mov
mov
out
test
cmps
aad
test
vmovq
in
push
inc
sub
repnz
sub
sti
add
in
sub
cmps
push
popf
mov
cmps
test
call
jmp
sbb
(bad)
sti
push
adc
jge
mov
jno
inc
sar
mov
mov
test
fdivrp
cmps
(bad)
mov
mov
pop
in
(bad)
lea
cmp
ds
mov
xor
popa
mov
data16
rol
mov
das
enter
push
ins
iret
es
into
xor
stos
cmp
sub
clc
or
cmp
mov
jmp
test
jbe
cmp
mov
scas
sbb
test
mov
jl
retf
mov
and
jae
cmps
lods
xor
or
(bad)
stos
xor
xchg
xor
mov
les
fdiv
xor
dec
out
add
or
pop
loop
sbb
in
outs
rcr
cmps
push
xor
push
fwait
and
int
imul
xchg
inc
and
xor
test
sub
mov
jo
imul
jbe
dec
js
push
add
sbb
popa
fidiv
pop
add
xor
pushf
xlat
mov
mov
mov
and
add
jb
arpl
mov
pop
or
xor
test
rcl
add
aad
call
aas
pop
mov
jle
add
cmp
mov
mov
jns
fadd
repnz
fwait
cdq
shr
mov
sbb
sbb
add
xor
adc
mov
out
sbb
xor
popa
dec
mov
jno
lahf
mov
mov
imul
loopne
mov
mov
cli
mov
xlat
out
(bad)
sar
pop
jo
sbb
sub
in
mov
leave
add
pop
cld
sub
sub
mov
dec
push
outs
inc
mov
sets
mov
fwait
mov
sbb
test
(bad)
cwde
and
adc
push
retf
adc
movd
int
xchg
bound
xchg
mov
sbb
jb
iret
jp
ror
or
in
ins
ins
(bad)
(bad)
xchg
inc
js
(bad)
mov
xchg
pop
mov
stos
sub
sub
pop
or
outs
stc
sub
arpl
jecxz
mov
addr16
push
mov
pop
sub
sbb
cs
(bad)
or
pop
xchg
sbb
mov
or
mov
fisub
adc
aaa
fwait
sbb
and
fimul
sbb
lock
cmc
and
pop
sar
mov
outs
or
call
mov
push
dec
hlt
gs
adc
sub
push
pop
ds
jb
push
mov
mov
add
dec
sbb
xchg
aaa
jne
xor
xchg
inc
or
mov
fxam
dec
test
mov
cs
das
outs
or
cmp
mov
mov
dec
call
std
or
mov
dec
jne
mov
dec
clc
loop
adc
mov
xor
clc
popa
ret
and
daa
jne
loop
clc
(bad)
mov
push
les
int
call
inc
xchg
add
popa
scas
aaa
imul
sub
ret
cdq
call
pop
mov
sahf
clc
fsubr
add
jae
in
xchg
pushf
and
fsubrp
push
dec
xor
adc
pushf
jne
cdq
xchg
rol
frstor
fldcw
fmul
and
adc
aaa
inc
jecxz
mul
mov
sub
and
lea
in
jle
rcl
mov
stos
dec
sahf
push
hlt
xchg
or
rol
jmp
and
pop
fist
or
arpl
or
mov
xchg
and
add
clc
lds
mov
pop
and
pop
push
je
mov
jnp
movs
shl
xchg
stc
mov
xchg
mov
movaps
ins
aad
outs
cmps
mov
test
mov
sub
es
shl
push
xor
push
mov
call
sbb
sbb
jecxz
sub
push
and
jns
enter
mov
sub
dec
(bad)
es
ja
add
inc
jnp
daa
inc
jne
inc
sbb
sbb
aas
push
cmc
shl
push
clc
stos
xchg
or
pop
jns
and
(bad)
mov
xchg
sbb
jl
jb
(bad)
cwde
mov
jecxz
movs
imul
loopne
jnp
(bad)
mov
stos
retf
or
push
mov
and
in
sub
imul
inc
mov
cdq
and
outs
cmps
xchg
inc
mov
mov
rol
call
xor
xchg
dec
and
adc
ret
add
call
xor
seta
test
stos
scas
mov
scas
repz
in
dec
push
hlt
or
xchg
add
hlt
fild
out
adc
mov
(bad)
ffreep
cmc
add
sbb
out
cli
xchg
sti
lahf
mov
push
and
cmp
cmp
add
jno
ins
fidiv
xchg
or
pop
or
mov
cs
cmp
mov
aam
(bad)
sbb
ins
out
mov
dec
jmp
push
or
mov
inc
fnsave
sbb
push
sub
cmps
fcmovu
sbb
clc
fbld
fisubr
sbb
push
and
pop
push
pop
push
jb
pop
push
pop
imul
pop
jne
test
jg
shl
adc
jb
push
jno
jmp
out
jge
push
aas
sub
call
sbb
dec
cs
sahf
mov
cli
sahf
add
mov
(bad)
call
mov
adc
pop
pop
sar
lds
adc
lods
cmc
cdq
movs
(bad)
sbb
mov
dec
sub
jne
(bad)
xchg
inc
mov
sub
call
cld
pop
in
pop
xchg
xchg
add
mov
push
inc
into
add
adc
(bad)
jg
inc
movs
push
cli
sar
jno
sbb
pop
pop
movs
std
in
loopne
ss
mov
bound
push
jmp
sbb
gs
fwait
js
cmps
fidiv
xor
push
sub
push
cld
cld
lea
fucompp
pop
pop
fsubr
pop
hlt
inc
push
sub
mov
or
shr
dec
dec
leave
out
call
shl
das
dec
adc
xchg
arpl
jg
loope
mov
mov
xchg
pop
cmps
lds
dec
dec
aam
or
mov
dec
lock
adc
cmp
xor
jae
fstp
sbb
popa
das
jne
out
js
xchg
jecxz
les
icebp
adc
rcr
mov
add
ss
aad
mov
jg
mov
(bad)
repnz
daa
test
aaa
lea
dec
mov
(bad)
es
ins
shl
aas
adc
and
mov
sub
call
iret
aad
adc
data16
pusha
or
iret
adc
aas
mov
test
mov
daa
xor
out
clc
mov
jb
out
push
mov
inc
inc
pop
out
mov
jle
ss
cmp
ret
add
xchg
outs
cwde
push
add
nop
push
or
mov
push
sbb
mul
addr16
cli
loope
(bad)
rcr
pop
movs
jno
sub
out
loop
and
mov
mov
and
sub
std
and
cmps
push
mov
xchg
mov
(bad)
cld
ins
scas
pop
scas
sbb
sbb
xchg
rcl
jle
jbe
cmp
not
xchg
aas
and
add
jns
sub
xor
mov
pop
retf
(bad)
out
mov
cmp
and
or
repnz
add
mov
cmps
push
dec
loopne
leave
pop
aam
sub
cmp
test
xchg
rcl
stos
sti
mov
leave
pop
not
iret
cmps
je
aam
push
test
loop
or
push
xchg
je
sbb
jmp
popa
scas
add
sbb
jno
fldenv
jmp
lahf
xchg
adc
rcr
dec
popf
cmps
or
(bad)
push
sub
mov
ins
add
lock
adc
cmp
mov
imul
nop
addr16
jno
not
aas
clc
fwait
call
jbe
mov
xor
ret
ins
das
adc
jp
push
(bad)
sbb
cmps
lods
xchg
in
retf
xor
iret
pop
xchg
das
mov
or
mul
xor
mov
sbb
inc
and
cmp
js
es
adc
jb
imul
iret
push
push
sahf
mov
pop
lods
cdq
(bad)
jle
(bad)
inc
arpl
xchg
int3
clc
leave
mov
cs
cwde
bound
pop
xchg
scas
test
loop
inc
out
sub
shr
cli
inc
shl
push
cmp
repnz
xor
xchg
fs
add
(bad)
pop
add
pop
arpl
repz
pop
mov
adc
repnz
ins
adc
movs
outs
popa
dec
xlat
inc
mov
jl
rol
outs
push
mov
fucompp
mov
in
add
ins
xor
js
jbe
cmp
and
mov
xor
add
pop
mov
aas
cld
cmp
sbb
enter
or
cmp
adc
pop
das
pop
add
jmp
lock
test
scas
test
imul
push
push
jl
mov
pop
pop
ret
(bad)
fild
fst
push
mov
xchg
add
push
sbb
jecxz
jp
dec
push
add
xchg
movs
push
mov
sub
addr16
stc
pop
ret
and
push
xchg
popa
and
cld
pop
lods
adc
inc
stos
mov
gs
test
dec
mov
test
xchg
mov
inc
sbb
sub
or
(bad)
push
inc
ins
push
mov
pminsw
jne
xor
sub
jb
loop
lea
shl
ror
push
inc
cwde
fisttp
adc
stos
fsubr
xor
(bad)
pop
neg
dec
pop
mov
sub
dec
out
cs
add
(bad)
(bad)
call
jle
out
into
repnz
out
push
arpl
sub
and
sti
or
jns
sub
or
jmp
inc
cmp
ror
mov
pusha
push
pushf
es
imul
clc
in
test
shl
sub
adc
and
retf
pop
sub
mov
push
xor
push
and
loop
xchg
imul
xchg
jb
test
xchg
test
adc
jge
push
stos
sahf
neg
adc
lods
loopne
sbb
xchg
add
sar
push
jno
jo
jne
outs
mul
icebp
sbb
(bad)
jg
iret
cwde
fisttp
daa
xchg
pop
jp
lods
mov
or
push
rol
pop
movs
jno
xchg
enter
push
les
mov
jne
cmps
lds
xchg
pop
xchg
repnz
jecxz
test
cwde
inc
sub
fild
pop
jns
sar
(bad)
pop
sti
mov
push
xchg
add
xor
sub
test
sbb
idiv
into
push
or
lods
shr
cmp
popf
clc
jge
jb
mov
xchg
stos
loopne
push
int
retf
sahf
mov
inc
iret
mov
sub
push
sahf
xchg
(bad)
cs
mov
pop
and
sub
inc
mov
(bad)
jge
pushf
sub
fwait
fwait
push
stos
mov
jne
dec
jb
lea
xor
mov
movs
jle
inc
mov
push
jmp
cmps
xchg
mov
jle
inc
xor
push
pop
push
fst
jl
loop
enter
out
sub
test
in
test
and
jmp
jne
jmp
jecxz
xor
pop
loop
pop
jb
icebp
adc
mov
mov
and
push
xor
sub
mov
dec
mov
mov
(bad)
dec
movs
into
xchg
xchg
sti
adc
adc
rol
jne
out
jmp
jo
pop
xor
frstor
cmp
push
or
cmp
ret
jno
test
mov
mov
sub
pop
jmp
ud0
mov
mov
xor
movaps
clc
mov
out
cmp
(bad)
test
aam
clc
xor
mov
sbb
sbb
pop
scas
mov
cmps
jae
and
ret
pop
int
sbb
mov
xchg
shl
jle
sub
sub
test
dec
jmp
popf
sbb
inc
lea
ins
pushf
or
jg
daa
push
cld
inc
cli
ss
jmp
or
test
push
and
cdq
push
cld
mul
push
in
pop
mov
push
stos
mov
or
popa
dec
inc
hlt
xchg
xor
pop
inc
(bad)
cmp
push
scas
cli
and
or
jo
test
test
or
pop
test
or
lds
mov
lock
pop
movs
test
sub
les
movs
or
lods
mov
pop
out
cmp
add
addr16
xchg
add
adc
aaa
xchg
fidivr
or
push
adc
or
mov
mov
xor
add
adc
arpl
fwait
repnz
mov
inc
inc
push
pop
xchg
push
popa
and
add
lods
mov
icebp
push
mov
repz
xchg
mov
xor
and
aaa
add
cmc
sahf
(bad)
(bad)
js
pop
mov
(bad)
retf
jmp
ror
jno
cmp
arpl
or
or
mov
lods
push
inc
(bad)
cmp
aas
sbb
sub
sub
daa
sub
adc
xchg
mov
arpl
shl
iret
jmp
dec
add
push
mov
xchg
sub
ror
push
sbb
outs
push
jns
pop
ja
cmp
xchg
xchg
adc
std
div
popa
mov
aam
and
into
mov
xor
call
or
sar
jns
in
fidiv
add
mov
sbb
js
sub
dec
sar
add
jnp
out
stc
gs
retf
mov
xchg
xor
cmp
mov
jecxz
test
add
dec
mov
shl
leave
inc
in
fnstcw
mov
(bad)
mov
mov
fist
(bad)
xor
iret
out
jb
add
iret
sub
aad
mov
test
xchg
in
mov
(bad)
dec
xor
xlat
repnz
stos
in
or
cmps
pop
and
jecxz
mov
sub
push
adc
dec
fidiv
or
xor
or
jbe
xor
jg
jge
pop
ror
push
ror
mov
inc
jne
jg
add
js
mov
shr
jle
fs
das
and
pop
les
or
stos
arpl
adc
inc
jg
adc
int
sahf
fwait
push
lock
into
mov
outs
test
and
sub
int
mov
and
push
lahf
mov
ja
xor
es
(bad)
ficom
jp
jmp
sahf
xchg
int3
mov
mov
mov
inc
not
mov
push
pushf
cmp
fcomp
cli
jmp
pop
shl
pop
jmp
and
(bad)
sub
jb
sub
mov
fldenv
lds
cmp
bound
(bad)
call
loop
fld
fs
xor
jbe
lds
xor
adc
ror
dec
mov
sbb
sub
das
loop
cmp
dec
dec
or
dec
xor
test
mov
inc
sub
fdivr
adc
stos
push
adc
jl
lds
cmp
sbb
sub
test
daa
jg
add
not
xchg
bound
int
lods
and
fwait
or
test
sub
cmp
sahf
cs
test
lahf
(bad)
pop
bound
jbe
repnz
into
and
out
movs
jecxz
repz
mov
sbb
pop
sbb
scas
xor
xor
fild
retf
mov
mov
pop
jo
or
inc
jp
dec
ss
or
mov
out
ja
cmp
fwait
mov
pop
dec
push
push
push
mov
sbb
cdq
ret
cmps
jge
or
and
cmp
or
sub
push
dec
ss
out
adc
gs
push
jmp
dec
mov
stos
mov
cwde
sbb
cli
enter
jns
adc
mov
xchg
xor
inc
push
fmul
gs
mov
inc
stos
and
xor
xchg
not
dec
mov
sub
mov
add
sub
sub
mov
(bad)
mov
dec
pop
dec
jno
mov
inc
ret
inc
daa
imul
hlt
arpl
popa
cmp
jle
in
aam
pop
push
icebp
jmp
mov
mov
mov
cmp
jb
cmp
icebp
adc
shl
and
push
retf
mov
and
mov
xlat
leave
(bad)
shr
mul
cs
test
cmp
sbb
or
push
leave
mov
mov
xchg
cld
pop
popa
sub
dec
sub
inc
cmp
psrld
mov
fild
or
cmp
or
call
rcr
mov
es
jl
jp
mov
adc
out
mov
cmp
icebp
inc
push
(bad)
mov
lock
adc
fcmovnu
ins
and
fild
push
pop
jl
cmp
cdq
xchg
sbb
loope
imul
ds
jp
ror
sbb
vpunpckhwd
dec
cld
mov
jno
mov
fwait
stc
hlt
test
push
push
cld
popf
jecxz
cmp
push
stos
popf
pusha
mov
cwde
leave
mov
sahf
jno
inc
cdq
sub
sub
dec
stos
mov
xchg
cmp
(bad)
das
gs
add
in
(bad)
xor
inc
xor
imul
lahf
popa
push
sbb
nop
mov
js
es
(bad)
push
pop
scas
repz
mov
sub
xchg
xlat
leave
adc
addr16
inc
cmps
pop
jge
sahf
test
inc
dec
lods
inc
push
mov
aas
sbb
jle
jo
lods
add
xor
mov
shl
and
add
jg
mov
sbb
std
adc
mov
pop
jg
dec
push
dec
ja
or
mov
dec
test
loop
mov
inc
mov
adc
pop
aam
sahf
fs
sub
dec
jle
das
test
push
jmp
inc
xor
test
movs
push
jge
sar
retf
push
push
pop
sbb
pop
pop
out
(bad)
mov
fwait
add
xor
pop
or
addr16
cmp
sub
shl
cmp
hlt
daa
test
mov
pop
outs
mov
neg
addr16
adc
pop
mov
mov
in
xlat
sbb
and
fbld
fs
push
or
test
mov
dec
and
push
adc
cwde
mov
clc
mov
jmp
call
and
pop
inc
xor
jmp
repz
jns
lds
sub
fs
cmp
jo
mov
fmul
lea
jo
cmp
scas
jge
std
mov
mov
xchg
cmps
sub
fucomp
popa
cmp
mov
cwde
dec
or
loope
iret
mov
cmp
push
ins
icebp
popf
pop
vcvtdq2pd
jmp
jns
xor
popf
(bad)
xor
inc
pop
loop
xchg
fcmovnu
push
stos
inc
mov
adc
stos
cmps
mov
cli
ja
and
xchg
out
es
ss
daa
dec
add
test
scas
in
add
cmp
add
mov
sub
jnp
adc
jecxz
test
push
adc
fs
xchg
pusha
(bad)
jle
push
outs
call
loope
lods
ja
lahf
cmp
sub
(bad)
gs
pop
push
or
cmps
rol
test
jns
inc
xchg
imul
pop
xor
adc
mov
inc
mov
pop
push
push
mov
jp
ror
add
pushf
test
int3
xchg
or
xchg
add
call
xchg
cmp
retf
mov
popa
aas
adc
ret
cmp
enter
fisub
jecxz
add
lods
lods
scas
loopne
and
sbb
mov
je
nop
lahf
cld
into
cmp
push
fcomp
imul
pushf
out
cmp
push
mov
test
jmp
js
mov
and
ror
dec
xor
dec
jb
mov
push
in
sbb
loope
jecxz
test
sbb
jecxz
mov
sub
mov
push
mov
inc
sub
ret
mov
pop
dec
dec
mov
pop
hlt
das
cmc
push
or
aam
stos
and
xor
sub
sub
or
push
sub
test
push
sbb
es
(bad)
xor
in
dec
mov
mov
xchg
dec
das
imul
mov
out
ins
pop
imul
je
sub
jl
jp
stos
mov
movs
cmp
(bad)
cmc
out
xor
xor
inc
mov
pop
ficom
mov
mov
arpl
push
xchg
scas
pop
ja
mov
dec
fsub
push
jne
loop
or
std
retf
and
dec
xlat
call
das
sbb
loop
lods
dec
add
jle
push
cs
push
mov
iret
fwait
dec
cmp
shl
sub
stos
mov
cdq
mov
mov
jmp
std
pop
adc
fisubr
hlt
add
(bad)
jle
aas
or
mov
jb
adc
loope
cmp
stos
cmp
test
mov
add
mov
popf
cli
nop
popa
shl
ja
jp
fdiv
xor
mov
xor
and
xor
test
push
push
je
mov
jmp
mov
adc
sbb
addr16
jle
mov
aas
scas
mov
mov
jnp
xor
pop
je
and
dec
push
pop
push
mov
xchg
inc
aad
fcom
sbb
ret
jmp
inc
push
lods
cmp
mov
xchg
aaa
out
pushw
cli
inc
sbb
addr16
popa
sbb
xchg
sub
mov
fld
mov
xor
xlat
leave
mov
jmp
or
fldenv
lds
dec
rol
repnz
fld
mov
(bad)
repnz
icebp
fbld
pop
lock
or
imul
ins
mov
dec
je
int
retf
cld
pop
and
int3
fcmovnu
es
pushf
sub
sub
(bad)
mov
out
push
and
test
scas
xor
in
inc
or
fadd
jo
(bad)
idiv
mov
xchg
in
push
sub
sub
(bad)
pop
cmp
mov
adc
retf
fucompp
mov
inc
into
cmp
add
gs
mov
in
mov
pop
(bad)
cld
clc
out
nop
sub
fcom
cld
sub
ins
aam
gs
xchg
jne
ins
dec
jbe
mov
xor
xchg
cmp
xchg
pop
push
clc
lods
xchg
jecxz
or
call
mov
pop
sub
scas
mov
xor
hlt
ret
and
call
lods
fst
push
repz
(bad)
push
dec
xor
ror
int
or
jecxz
int
fisubr
jle
xchg
in
in
mov
neg
jge
mov
push
add
cld
inc
mov
sar
inc
xchg
lea
(bad)
and
jle
dec
imul
mov
iret
sbb
xor
les
xchg
test
push
dec
push
adc
jmp
popf
mov
mov
fwait
ins
push
add
iret
mov
js
mov
dec
add
jnp
cmp
adc
test
adc
pushf
xor
out
stc
push
mov
xlat
adc
loope
mov
sahf
repz
dec
(bad)
(bad)
and
xchg
push
das
mov
(bad)
(bad)
jle
xchg
call
and
mov
xor
call
arpl
stos
mov
movs
(bad)
lods
sub
test
and
add
lock
jge
pop
push
(bad)
jg
enter
int3
mov
add
mov
dec
jp
pop
neg
cmp
xchg
stos
fstp
clc
popf
mov
movs
ret
push
movs
xor
adc
sbb
jle
(bad)
cmp
mov
es
jle
inc
cmp
cli
push
cmps
ffreep
jmp
xor
lock
lahf
jl
jle
addr16
mov
push
mov
xor
jmp
dec
fcomp
repz
push
loopne
and
imul
rcl
stos
xlat
ret
push
mov
fdiv
pop
mov
bound
push
xor
shl
(bad)
in
xchg
cmp
add
aaa
xchg
mov
mov
mov
dec
adc
mov
xor
push
dec
cwde
js
(bad)
test
sbb
call
shl
jno
fild
cdq
int
mov
ja
mov
call
cmp
dec
cwde
cdq
xor
pushf
les
push
aaa
push
rol
push
dec
pop
and
in
into
push
pop
push
test
inc
mov
sub
gs
mov
xchg
rol
clc
lods
loopne
leave
pushf
adc
fdivr
mov
loop
jg
call
or
ins
movs
ins
mov
mov
mov
sahf
and
inc
std
(bad)
test
ss
mov
stos
aaa
mov
xor
das
es
loopne
gs
test
pop
jo
outs
clc
aas
mov
and
mov
jge
lds
jecxz
in
or
mov
cs
test
jmp
daa
pop
loopne
jge
bound
mov
test
movs
mov
sub
call
jns
lods
jns
aad
icebp
stc
xor
mov
scas
adc
add
pcmpgtw
out
data16
ja
call
out
jecxz
ret
jmp
sbb
mov
scas
ja
mov
fadd
cmp
div
jg
in
sbb
loop
inc
ja
cdq
daa
pop
out
sbb
add
repnz
mov
mov
clc
(bad)
cs
dec
sub
outs
or
xor
std
cmp
iret
movs
arpl
push
and
sbb
std
push
movs
or
shr
adc
jecxz
cmp
add
sub
shr
pusha
aad
push
call
dec
xor
jecxz
sti
lods
fdivr
cmp
clc
add
or
xor
mov
sbb
jmp
adc
jle
pop
in
sbb
fwait
ins
cmp
jg
(bad)
in
cmp
mov
lods
call
pop
lea
repz
pop
mov
in
sahf
in
adc
fmul
mov
dec
mov
push
inc
mov
outs
gs
mov
jb
mov
outs
outs
and
scas
mov
ins
int
sbb
inc
(bad)
iret
pop
mov
or
add
cs
int3
movs
or
xor
gs
jno
call
fs
test
xchg
ret
and
sahf
lods
xor
mov
xchg
aad
test
test
sbb
ret
pop
xor
push
rol
je
sub
inc
mov
and
jmp
into
sbb
inc
loop
call
cmps
outs
push
mov
mov
fnstenv
js
pop
lods
test
fcom
cmp
cwde
sbb
pusha
pop
push
sbb
or
push
fnsave
gs
mov
add
sti
xchg
dec
or
pushf
xlat
jo
xchg
int
jnp
push
test
and
out
pushf
ret
cmp
pushf
inc
cdq
test
mov
std
stos
stc
dec
jmp
mov
jbe
pop
mov
movs
out
fstp
cdq
pop
sbb
test
fldcw
cdq
dec
mov
nop
pusha
sub
xor
addr16
xchg
mov
and
addr16
sbb
inc
clc
xor
sahf
push
sub
scas
xchg
sahf
or
ret
xor
into
les
and
popf
ror
mov
or
lock
dec
mov
les
jmp
cmp
and
or
cmp
xor
push
sar
mov
pop
shl
arpl
mov
mov
retf
(bad)
jmp
mov
xor
pop
out
dec
ins
fnstenv
push
fwait
add
(bad)
test
fwait
enter
inc
pop
in
mov
cmp
scas
es
test
call
and
sub
mov
or
xchg
inc
push
icebp
mov
imul
mov
xchg
cli
push
scas
imul
dec
push
lahf
cmp
ja
fmul
call
lds
idiv
sub
js
push
push
adc
inc
fistp
mov
fild
lods
test
enter
pop
shr
inc
push
fidiv
cwde
nop
jmp
fcmovb
call
mov
test
sub
fld
mov
imul
mov
pushf
mov
fsubr
and
test
sbb
xor
call
fst
movs
jmp
adc
shr
ret
stc
pop
mov
icebp
test
inc
add
outs
sar
rcr
push
cmps
loope
gs
fst
xor
jmp
sbb
jno
nop
lds
and
cmps
ja
std
mov
movs
xlat
sub
dec
pop
add
adc
aam
cmps
out
jmp
in
jae
adc
out
(bad)
push
sub
std
add
scas
cmp
mov
adc
lods
(bad)
cwde
dec
or
jge
call
es
dec
jl
cmp
or
scas
mov
ret
push
cmps
mov
push
pop
dec
inc
les
ins
lods
sub
push
ret
dec
push
mov
jle
ss
xor
cld
(bad)
hlt
sub
mov
clc
frstor
inc
mov
(bad)
call
push
cs
js
jno
(bad)
sub
fisttp
clc
push
push
rcr
test
in
sar
and
xchg
repz
mov
add
lock
clc
rcl
add
xchg
push
cwde
sahf
push
ins
test
daa
mov
sub
pusha
cld
push
loopne
mov
add
(bad)
daa
pop
int
cdq
and
imul
fwait
arpl
or
dec
daa
repnz
push
xor
cdq
scas
sbb
xchg
ds
cmc
xchg
fidivr
jno
arpl
popf
inc
xor
neg
or
retf
dec
out
mov
and
js
or
repnz
xchg
adc
mov
(bad)
jge
stc
jb
dec
jmp
outs
lock
int3
popf
mov
xor
mov
inc
pop
pop
mov
xchg
or
test
mov
jge
sbb
ins
mov
call
cli
pushf
sar
mov
fdivr
outs
sbb
mov
loop
inc
jp
xchg
mov
pop
inc
jns
cmp
fldenv
inc
retf
push
push
sahf
add
shr
clc
pop
jl
jle
fcmovne
mov
call
adc
jo
push
scas
outs
sub
xor
pop
je
add
jo
dec
jo
mov
popf
enter
movs
sbb
sbb
das
hlt
add
jnp
pop
cmp
cmc
ds
push
out
bound
mov
stc
dec
jo
mov
test
shl
cmps
scas
dec
pop
mov
add
inc
inc
push
cmp
jecxz
scas
or
daa
cs
and
mov
mov
adc
div
xor
int
xor
ds
cmp
jp
cwde
xlat
adc
cmp
(bad)
push
and
icebp
hlt
nop
inc
dec
mov
lahf
push
xchg
push
push
fld
dec
or
dec
inc
mov
(bad)
jg
cmps
mov
cmp
mov
cmp
sub
clc
push
or
loop
outs
cmc
ds
retf
or
cmc
sub
sbb
fidiv
addr16
stos
and
shl
cmp
mov
add
sub
xlat
dec
xchg
mov
aad
fidiv
xor
jo
mov
push
sub
ds
lock
sbb
int3
loope
pop
mov
(bad)
push
les
jmp
jnp
and
cs
inc
jmp
push
outs
popf
or
mov
add
idiv
cmovae
popa
in
retf
popa
cmps
mov
pop
out
and
rol
ret
jecxz
jbe
and
push
mov
call
xchg
cmps
lock
adc
xlat
pop
sahf
test
outs
cmp
in
mov
cmp
loope
dec
cmc
mov
out
dec
dec
add
xor
iret
and
push
bound
and
mov
and
les
xor
jg
and
fwait
push
and
fisubr
mov
das
pusha
mov
mov
fisubr
call
sbb
mov
iret
pop
jge
jmp
xchg
mov
mov
test
cmp
frstor
xor
sub
mov
cmps
retf
mov
cmp
push
mov
xchg
js
lods
cld
cmp
adc
adc
xor
lods
xlat
(bad)
jmp
cwde
dec
clc
mov
ss
aas
ja
retf
sbb
popw
pop
movs
inc
iret
lods
in
sub
push
(bad)
repnz
jbe
inc
stc
mov
pop
xchg
sti
mov
pop
jp
or
push
xchg
xchg
push
jl
cmp
(bad)
jp
mov
aad
sar
and
shl
mov
xor
jl
mov
ror
mov
ret
into
or
es
or
fidivr
movs
lea
pop
int3
daa
inc
sub
dec
ror
pop
shl
mov
into
mov
sahf
mov
mov
stos
or
je
push
cmp
mov
add
fstp
js
sub
mov
dec
or
in
call
leave
cmp
and
mov
mov
sbb
movs
push
mov
or
dec
or
addr16
inc
movs
repz
leave
mov
jb
and
movs
and
shr
inc
movs
hlt
or
push
int3
in
and
push
shl
inc
add
sbb
call
shl
push
test
push
sub
jns
inc
pop
out
sub
(bad)
(bad)
adc
inc
push
ror
hlt
mov
call
xor
shr
jno
inc
ins
xor
lods
dec
jnp
dec
iret
mov
adc
neg
xor
call
loop
out
out
jne
daa
std
adc
mov
fnsave
push
push
outs
sbb
mov
add
ds
(bad)
out
mov
(bad)
fcmovu
test
xchg
pop
test
movs
jmp
inc
mov
mov
mov
adc
scas
cmp
mov
push
jmp
int3
hlt
xchg
stos
outs
pop
shl
js
ret
int
inc
and
das
jo
and
mov
fiadd
jge
mov
lods
ins
mov
mov
jbe
jecxz
shl
loopne
aas
es
inc
add
xor
and
jle
jmp
push
loopne
inc
or
ficom
mov
in
mov
jge
push
sar
inc
retf
dec
retf
pusha
or
cmc
pop
in
int3
mov
mov
mov
ja
fwait
lods
test
pushf
xchg
cmps
outs
ret
icebp
call
dec
dec
outs
jnp
int
mov
and
mov
int
(bad)
pop
call
and
push
out
test
mov
cmps
test
xor
jmp
ret
push
add
push
shr
push
cmp
xchg
sahf
loopne
je
(bad)
cdq
fild
add
xchg
xchg
push
cli
adc
es
push
pop
call
push
cmp
cmp
add
jns
adc
pop
movs
(bad)
(bad)
lahf
(bad)
movs
add
jecxz
retf
dec
or
add
sub
mul
loopne
dec
dec
pop
in
rol
mov
xor
cmp
sahf
test
bnd
ja
fucomip
cwde
shr
imul
mov
mov
test
out
test
mov
cmp
mov
mov
add
pop
cmp
cmp
ret
mov
cmp
retf
jbe
xor
push
shl
cmps
or
retf
xchg
cmps
sti
pop
cld
repz
dec
cmp
dec
cwde
sub
or
div
lea
mov
sub
inc
xchg
adc
cmp
call
inc
inc
scas
xchg
adc
int3
xchg
fild
test
idiv
mov
aad
dec
push
mov
cmp
mov
mov
(bad)
dec
leave
mov
xor
push
pop
test
test
adc
leave
cmc
aam
mov
jmp
and
sbb
mov
imul
popf
(bad)
js
xlat
mov
mov
mov
(bad)
adc
inc
stos
pop
sub
pop
dec
arpl
shr
hlt
ds
mov
xchg
dec
je
not
test
or
ret
movs
inc
(bad)
std
je
nop
sub
push
(bad)
and
cmp
add
pushf
push
and
sbb
or
and
test
int3
scas
xor
jae
mov
ret
das
jnp
movs
in
push
movnti
les
xchg
jecxz
aam
repnz
fist
ror
dec
repz
inc
cdq
adc
jl
sbb
adc
xor
push
or
call
outs
dec
sbb
test
cmp
loope
push
gs
mov
fistp
inc
sub
inc
dec
mov
retf
retf
inc
cmc
out
pusha
adc
dec
sbb
test
into
and
ja
out
sub
xchg
es
in
(bad)
outs
(bad)
push
pop
sub
shr
in
lahf
pop
bound
mov
cmp
fsubr
jp
dec
jns
imul
mov
les
scas
push
or
push
cs
es
cmp
jmp
imul
add
sbb
gs
dec
test
stos
mov
mov
mov
xlat
mov
add
lock
cmp
dec
or
sub
in
shl
cmc
jmp
gs
out
inc
stos
js
pop
repnz
stos
dec
xlat
cmp
mov
add
gs
sub
mov
mov
in
nop
std
or
xchg
dec
dec
adc
add
mov
(bad)
dec
in
inc
js
(bad)
mov
jmp
mov
(bad)
neg
push
or
xchg
or
rcr
jecxz
sub
and
jns
shr
mov
mov
cmps
mov
int
mov
mov
scas
repz
add
xchg
aam
pop
or
cmp
stos
shr
sbb
(bad)
mov
mov
adc
(bad)
lea
pop
and
or
mov
shr
(bad)
ja
jle
cmp
mov
cmp
int3
xchg
aad
or
mov
je
cmps
push
rcr
add
xchg
cs
inc
jg
or
cmp
mov
inc
cmps
sbb
or
add
retf
mov
(bad)
aam
int3
into
push
stos
ss
pop
retf
inc
dec
pop
(bad)
movs
and
push
jns
push
mov
jns
mov
xchg
dec
jb
hlt
(bad)
xchg
js
div
lods
mov
cs
cmps
test
push
(bad)
aas
mov
lahf
mov
mov
push
iret
jecxz
xor
push
and
inc
pop
mov
shr
adc
inc
mov
fcmovne
mov
sub
rcr
outs
mov
std
data16
cmp
adc
jp
and
mov
add
xlat
push
jge
rol
sub
cld
push
into
pop
adc
dec
sub
mov
sub
mov
xor
inc
rcr
inc
pop
adc
adc
push
jmp
cmp
(bad)
jmp
cwde
jo
and
push
push
pop
ins
call
mov
icebp
mov
or
mov
and
mov
sahf
sub
scas
sub
xchg
cmp
ins
adc
inc
cs
fistp
inc
push
mov
and
(bad)
jl
std
inc
cmps
out
mov
and
push
shl
and
ins
mov
and
adc
mov
push
adc
xor
(bad)
leave
sbb
xchg
and
ins
retf
pop
xchg
ins
imul
xchg
test
add
and
dec
retf
(bad)
push
pop
outs
imul
jnp
add
ins
fiadd
icebp
push
xchg
lods
jnp
into
xchg
mov
retf
fist
call
pop
xor
inc
cmc
mov
lods
xchg
dec
mov
pop
call
push
or
ds
add
inc
mov
or
ret
(bad)
push
xor
test
pusha
pop
ds
add
jbe
aaa
cmps
and
mov
fidivr
and
movs
test
dec
out
cmps
and
cmp
loope
cmp
push
mov
or
mov
sbb
jmp
out
repnz
scas
sbb
jbe
lods
or
pushf
pop
loop
add
dec
ins
dec
lahf
pop
xchg
lahf
sbb
or
mov
cmp
mov
fidivr
cli
or
xchg
mov
test
mov
test
xor
popa
dec
jns
sar
cmp
mov
sub
add
jle
push
jp
ins
call
shr
cmp
pop
test
lock
pushf
xchg
ret
jae
cs
or
or
retf
add
mov
in
loopne
repz
pop
sbb
or
push
mov
fsub
cld
stos
ja
hlt
xor
cmp
iret
push
lfs
clc
pop
nop
add
mov
xchg
sbb
call
lods
mov
inc
xor
adc
jp
push
mov
jns
xchg
pop
xchg
test
pop
scas
mov
mov
cmc
and
mov
xor
and
int3
(bad)
scas
test
xor
lea
mov
jl
push
bound
mov
sbb
adc
mov
add
repz
(bad)
fcos
into
dec
mov
outs
mov
sub
mov
xor
and
sar
push
pop
dec
jns
mov
popf
mov
cmc
out
xlat
xlat
push
gs
push
push
jnp
outs
lods
lea
test
daa
push
in
adc
xor
lahf
mov
pop
sbb
or
mov
retf
lds
mov
pop
fstp
hlt
cmp
loopne
jl
stos
pop
lods
clc
pop
push
scas
addr16
or
mov
mov
cli
idiv
sbb
mov
xlat
fld
jno
inc
sbb
mov
sbb
mov
xchg
cwde
dec
ficom
cmp
lds
or
icebp
loop
lods
data16
lods
loop
adc
call
repnz
emms
mov
idiv
pop
mov
and
push
adc
cmp
sbb
fsubr
push
in
mov
jecxz
(bad)
retf
mov
mov
cmp
mov
popa
repz
xchg
bound
je
into
dec
mov
test
mov
outs
and
test
stc
pop
shl
div
push
addr16
add
jbe
lds
mov
mov
movs
pop
retf
fidivr
jno
loop
mov
and
cdq
push
dec
jp
mov
cld
popa
mov
sub
call
add
mov
jbe
push
ret
int
mov
add
inc
cli
inc
or
mov
test
push
pushf
push
aas
xor
and
test
sbb
mov
out
pop
std
push
int3
sub
je
cmp
adc
icebp
js
mov
and
xchg
in
xchg
sbb
add
out
out
jae
xchg
xchg
adc
aad
jecxz
mov
cmp
sbb
xchg
mov
fild
(bad)
and
jns
add
push
movd
cmp
add
loopne
imul
cmp
outs
mov
les
es
jp
retf
push
inc
movs
sbb
xor
lods
push
jnp
gs
jle
adc
jg
xchg
lea
repnz
add
call
jl
xlat
inc
fimul
pop
in
imul
and
and
mov
sbb
jmp
or
sub
mov
add
ret
out
xor
jo
mov
into
inc
test
xchg
sbb
adc
aas
(bad)
sbb
movs
sbb
xor
and
ins
out
fst
cli
in
repnz
retf
inc
or
cwde
mov
inc
cmp
cmc
push
leave
pop
(bad)
jmp
and
popf
sub
adc
mov
cli
xchg
jg
sub
out
sub
das
add
pop
lods
stc
add
xchg
scas
xchg
sbb
cmp
pop
mov
adc
jb
push
mov
fiadd
sbb
lock
int
pop
pushf
lods
call
jns
fidiv
shl
sub
icebp
adc
outs
jo
and
fistp
or
imul
pushf
es
iret
jg
into
jbe
adc
fwait
lds
pop
fucom
mov
lods
movs
cmp
and
sahf
adc
sbb
lds
push
push
dec
xor
jge
icebp
xor
jp
mov
xchg
out
adc
dec
cmp
cld
cmp
xor
cmp
dec
jge
js
sub
sub
sbb
mov
stos
rol
inc
inc
(bad)
mov
pop
(bad)
pop
scas
imul
jno
iret
les
lea
xchg
cmp
pop
add
call
mov
clc
jae
call
in
rcl
xchg
inc
pop
cdq
pop
aaa
xchg
test
push
xchg
ins
fdivr
lea
mov
mov
inc
push
adc
adc
jae
enter
xchg
pop
neg
inc
cs
push
xchg
movs
inc
cs
cld
movs
repz
mov
xchg
mov
xchg
pop
cld
push
cmp
xor
cld
cli
es
xor
scas
repz
fnsave
jmp
and
(bad)
mov
cmc
adc
sbb
ins
or
arpl
and
mov
add
mov
out
inc
clc
inc
adc
mov
out
pop
mov
push
pop
fwait
lea
xor
and
xlat
mov
jae
dec
outs
add
scas
add
or
movs
jmp
mov
or
(bad)
fistp
lods
inc
sahf
ins
add
cmp
jo
outs
adc
jecxz
(bad)
sbb
icebp
xchg
mov
pop
add
mov
sub
ror
out
leave
js
or
xor
xor
cmps
movs
dec
into
xchg
fcomp
pop
push
xchg
xor
test
jge
mov
fneni(8087
int
jbe
sub
idiv
fs
mov
ins
scas
sti
cdq
test
xchg
sub
mov
es
in
pushf
mov
adc
adc
mov
xor
movs
popa
sbb
ds
xor
push
pop
orps
shl
jo
int
leave
xchg
int3
test
mov
mov
jno
not
sar
lds
mov
retf
or
add
sahf
sbb
out
call
dec
xchg
hlt
cmp
test
pop
xchg
inc
mov
lahf
add
bound
mov
js
hlt
lds
lds
cmp
shl
adc
or
sbb
xor
lahf
arpl
test
pusha
mov
dec
mov
pop
bound
dec
cmp
mov
pop
pop
adc
dec
pop
or
les
sub
mov
std
sub
jl
es
movs
xchg
push
out
mul
sbb
mov
jne
js
test
mul
test
push
xchg
in
test
nop
mov
aaa
bound
leave
(bad)
repz
rol
movs
pop
in
pop
push
popf
jno
push
inc
aaa
pop
inc
ret
loopne
mov
and
xchg
push
mov
inc
sahf
(bad)
shl
dec
xchg
pop
cmp
push
ins
and
jle
mov
push
dec
jecxz
ror
push
mov
jbe
repnz
sti
cdq
sub
sub
mov
(bad)
xlat
shl
rcr
fidiv
push
dec
test
shr
and
js
data16
push
mov
mov
push
xchg
out
jecxz
test
aad
mov
pop
or
push
pop
imul
mov
adc
in
and
imul
ins
and
adc
icebp
pop
add
mov
mov
xor
mov
popf
mov
in
inc
ins
(bad)
(bad)
les
xchg
(bad)
aas
mov
mov
dec
push
test
mov
imul
pop
add
mov
rcr
and
sub
sub
aam
and
jmp
adc
ror
mov
(bad)
movs
fbld
outs
lds
ins
in
xchg
in
retf
sar
jb
xor
cli
pop
cmc
in
fwait
lods
push
add
ror
dec
push
ret
int
jns
pop
mov
cwde
inc
rcr
fstp
call
ja
push
inc
dec
out
adc
mov
jbe
mov
stos
or
out
and
leave
adc
cmp
adc
fwait
ret
ror
mov
and
aaa
jle
jl
lods
dec
test
imul
dec
dec
scas
pop
jmp
push
cli
mov
outs
and
mov
das
daa
fcomp
add
clc
sub
cs
fild
std
mov
pop
addr16
test
jbe
pop
jp
xchg
je
hlt
test
and
das
mov
and
es
mov
sbb
push
hlt
out
adc
push
pop
int
push
inc
retf
add
pop
cwde
cmp
test
pop
sbb
push
sahf
cmp
lods
sbb
mov
or
xor
call
mul
dec
sti
sub
nop
adc
cmp
out
sub
sbb
inc
cmp
inc
mov
adc
cmp
outs
test
dec
ret
jg
outs
pop
sahf
push
out
(bad)
dec
pop
xor
retf
not
call
xor
push
xor
xchg
dec
mov
lods
mov
outs
out
adc
dec
ror
pop
imul
pop
cs
sub
mov
pop
in
fisub
or
mov
mov
and
fs
dec
xchg
aas
sbb
das
push
cmp
pop
and
enter
shl
mov
push
xchg
push
jno
cdq
pop
push
add
(bad)
hlt
or
lfs
ret
xchg
nop
xor
retf
dec
sub
cmc
cmp
push
adc
and
in
int3
rcl
jne
pop
cwde
mov
js
vucomisd
cmp
jge
sbb
ins
jp
cld
jmp
jle
aaa
call
jnp
add
mov
call
in
jecxz
mov
shl
rcl
sub
jo
test
out
scas
jp
jp
pop
test
ret
adc
mov
fild
cwde
int3
das
repz
sub
mov
out
ret
sub
out
pop
out
lea
std
add
inc
jge
inc
cdq
into
gs
sahf
jg
mov
xlat
cdq
(bad)
add
adc
mov
sti
in
pop
add
pop
sbb
movs
pusha
aas
gs
cmps
mov
ins
or
repnz
mov
sub
sbb
imul
push
sub
dec
(bad)
(bad)
cld
and
out
inc
mov
jp
neg
mov
cmps
nop
pop
stos
stos
popf
jle
out
test
aad
mov
or
xchg
jle
mov
bound
and
idiv
sbb
mov
xchg
push
dec
cmc
test
pop
test
push
mov
call
mov
mov
hlt
out
mov
je
cmp
cwde
ret
(bad)
xor
lods
jo
adc
mov
mov
dec
sbb
dec
aas
adc
adc
jno
pcmpgtw
mov
das
out
xchg
loopne
xchg
lds
jecxz
out
js
cmp
sbb
push
aam
push
int3
mov
mov
mov
push
loope
jge
and
add
out
jle
imul
xchg
mov
sbb
mov
or
out
inc
jp
pop
mov
xchg
xor
xchg
xchg
jbe
xchg
inc
loop
mov
adc
push
fsubrp
setnp
cmps
icebp
add
add
inc
movs
jno
and
pushf
mov
inc
sub
adc
jmp
or
adc
dec
pop
in
jmp
adc
or
and
inc
sub
xchg
cmp
cmp
adc
and
leave
movs
repz
stos
cmps
push
std
fcomp
dec
lds
inc
(bad)
ror
clc
jmp
fchs
aas
and
sub
sbb
xchg
dec
int3
fwait
mov
inc
mov
push
mov
pop
dec
psubsw
or
adc
dec
ins
js
xor
cmps
sub
mov
int3
push
dec
aad
or
into
sub
mov
inc
std
stos
cmp
xchg
sbb
adc
mov
test
dec
dec
add
and
mov
call
aaa
inc
adc
adc
fisttp
call
or
mov
test
jmp
xchg
cwde
add
and
xchg
jmp
outs
mov
ja
adc
pop
or
adc
mov
jmp
mov
inc
and
and
sbb
(bad)
(bad)
mov
aaa
pop
je
je
pop
shl
and
cmp
push
(bad)
push
inc
(bad)
out
pop
daa
je
jg
add
nop
sub
cs
xchg
cwde
(bad)
cmp
add
dec
jmp
xlat
mov
test
xor
cmps
jg
imul
lods
es
out
inc
das
sbb
mov
test
ret
push
sbb
dec
mov
push
jg
lahf
fadd
cmc
push
sub
mov
das
pop
popa
mov
inc
mov
inc
mov
bnd
and
cmp
out
mov
mov
jno
out
xor
mov
xchg
xchg
and
call
jns
xchg
xor
int
cs
aas
outs
jmp
movs
outs
mov
fbstp
mov
int3
xchg
clc
add
inc
mov
sub
cmps
es
jno
adc
fucomi
lds
hlt
jno
mov
mov
inc
imul
sbb
push
jnp
cmp
sub
icebp
cmps
sbb
pusha
adc
or
loopne
fild
mov
and
nop
xchg
and
arpl
aas
dec
sbb
dec
sub
xchg
ins
push
inc
add
pop
sub
repz
cmc
imul
in
loop
pop
push
cs
mov
xchg
scas
cmp
std
(bad)
xchg
or
mov
aam
jmp
sbb
movs
pop
test
les
inc
sbb
sbb
jns
sbb
scas
movs
push
shl
push
jnp
jnp
int3
mov
and
mov
enter
mov
out
sets
push
ret
fadd
inc
mov
mov
movs
dec
and
mov
inc
push
ja
xor
sub
aas
in
cmp
xchg
inc
xor
imul
cdq
add
ret
add
je
retf
lea
push
mov
pop
add
iret
push
repnz
mov
mov
rol
pop
inc
movs
mov
lock
mov
xor
loop
in
jecxz
inc
ret
adc
push
jecxz
enter
not
call
mov
shl
cmc
aad
xchg
fstp
and
jmp
pop
ins
mov
xor
jb
jb
dec
push
call
fcomp
daa
stos
sbb
adc
cmp
push
repnz
cli
lahf
sar
mov
mov
retf
aaa
rol
sub
(bad)
push
pop
pop
mov
add
lods
jb
push
lea
icebp
sbb
aaa
mov
jecxz
sub
fisubr
ret
cdq
inc
shl
test
in
add
cwde
or
enter
mov
jno
inc
sbb
shl
movs
xor
test
inc
int3
jmp
and
inc
push
aaa
fsub
pop
aam
(bad)
dec
aam
cli
cmp
outs
aam
jmp
and
sbb
inc
dec
in
adc
push
mov
or
hlt
pushf
adc
aad
fs
jecxz
xor
jmp
sub
lods
or
jo
out
popf
jno
movs
mov
aaa
ins
jle
xlat
fcom
daa
dec
aaa
inc
ins
push
xor
mov
std
adc
or
loope
gs
pop
fnop
push
xchg
dec
cmc
or
lea
mov
(bad)
mov
xchg
adc
jbe
or
cld
jne
push
mov
sub
sub
and
rcr
sub
in
ja
mov
inc
out
pop
sub
retf
push
jg
xchg
mov
adc
adc
cmp
mov
scas
jg
cld
adc
dec
mov
js
stc
push
add
inc
and
cld
xlat
mov
mov
popa
hlt
stos
pushf
stos
adc
mov
ret
cdq
and
add
or
pop
(bad)
xor
out
inc
movs
xchg
cmp
pop
fistp
aas
add
pop
fidivr
dec
mul
(bad)
lds
dec
and
js
sbb
pop
cmp
aas
mov
adc
lahf
jmp
fld
dec
ds
sub
or
cmp
mov
fdiv
xchg
imul
ret
mov
fcomi
(bad)
push
push
and
xor
add
xor
aam
sub
dec
mov
push
cli
and
rcr
and
rcr
sbb
(bad)
leave
dec
(bad)
loop
popa
out
call
leave
sbb
shl
cs
mov
sbb
fcom
xchg
leave
imul
(bad)
jl
out
sti
out
(bad)
or
lods
xchg
xor
jnp
mov
xlat
sbb
mov
test
or
push
and
adc
mov
shr
repnz
dec
mov
jle
pop
sub
dec
jmp
mov
fwait
or
fwait
ins
mov
add
arpl
push
jecxz
addr16
out
scas
push
dec
push
mov
popa
fsubr
xor
mov
cli
rol
mov
mov
mov
sub
cmp
ror
in
and
and
push
add
jg
mov
inc
xchg
das
and
push
push
ficomp
and
mov
iret
into
adc
loopne
aam
hlt
es
jb
icebp
ror
mov
gs
pop
(bad)
das
cdq
in
jmp
jb
dec
dec
ins
inc
int
pop
push
pop
add
dec
add
loop
mov
add
jno
adc
call
push
add
outs
dec
inc
cmp
push
and
int3
xchg
and
or
aas
(bad)
enter
push
or
xchg
xchg
icebp
shr
adc
fist
xchg
add
xor
mov
cld
aas
pop
je
addr16
mov
jne
push
iret
mov
cmp
ret
pop
xchg
sub
mov
or
push
xor
and
mov
(bad)
jmp
rol
xchg
cmps
push
inc
mov
cmps
adc
in
fld
adc
retf
and
xor
in
ret
jmp
sub
sub
in
cmp
stc
pop
retf
mov
mov
shr
cmps
lods
(bad)
jnp
shr
push
sub
jg
push
in
dec
in
gs
mov
mov
gs
pusha
lock
inc
xchg
mov
mov
pop
fiadd
add
icebp
cmp
inc
repz
sub
lock
jg
pushf
into
mov
scas
cmps
cmps
push
mov
jl
dec
xor
xchg
sub
cmc
jmp
xlat
mov
fcmove
add
imul
out
dec
push
in
push
jp
jecxz
pop
push
adc
mov
cmps
pop
pop
fiadd
xchg
mov
shr
sahf
pushf
imul
and
add
fiadd
out
(bad)
and
movs
or
loop
sahf
xchg
cmp
stos
(bad)
sti
jo
mov
mov
cmp
in
mov
ret
popa
popa
mov
stc
cmc
mov
cmp
or
lahf
mov
pop
mov
dec
xlat
cmp
out
dec
mov
lahf
cmp
mov
jns
push
out
add
std
add
mov
(bad)
or
stos
mov
jnp
mov
test
cmp
mov
aas
push
push
inc
cdq
das
xchg
cdq
cmc
cld
jmp
dec
pop
xchg
or
inc
data16
nop
pop
rcl
jl
xlat
dec
dec
mov
movs
call
push
xor
arpl
mov
ins
sub
or
jae
adc
fcomp
jg
(bad)
mov
lds
fneni(8087
xchg
fwait
pop
fist
push
and
xor
mov
cmp
mov
aaa
inc
inc
pop
les
xor
adc
rcl
imul
fldcw
(bad)
push
gs
mov
push
in
xlat
sahf
cwde
mov
fsubr
clc
add
mov
jp
jbe
dec
inc
cld
js
adc
mov
in
lods
push
add
adc
adc
or
xor
lahf
lods
pop
cli
in
mov
jmp
mov
bound
and
movs
mov
out
cmp
aad
cmp
enter
jb
and
imul
shr
lods
jge
and
iret
xor
fisttp
dec
cdq
lahf
into
jne
lds
xchg
inc
dec
jo
push
movs
shl
xchg
and
(bad)
sbb
or
test
bound
ret
cmp
or
in
pop
pop
sti
mov
repz
mov
and
push
into
out
(bad)
mov
sub
fist
adc
mov
out
data16
jno
out
dec
scas
sbb
sub
arpl
aas
dec
cmps
cmp
push
jecxz
push
lahf
mov
and
movntq
cli
mov
lods
nop
adc
add
push
inc
fld
into
test
cdq
cmps
push
(bad)
mov
push
fwait
xchg
lds
fisttp
(bad)
jne
repz
retf
pop
push
or
add
and
xchg
js
push
cmp
aad
bound
pop
int3
and
in
add
xchg
mov
mov
sub
in
jne
sar
cli
xchg
out
inc
(bad)
imul
retf
fadd
sub
jns
xchg
add
ins
sbb
or
pop
inc
gs
clc
or
int3
xchg
cdq
mov
and
cwde
pusha
push
mov
pop
stos
sbb
bound
cmp
and
mov
and
fisub
inc
cli
imul
mov
lods
(bad)
hlt
out
xor
(bad)
jecxz
sub
push
dec
cmps
dec
mov
sar
sti
(bad)
test
xor
mov
out
mov
repz
test
int
jns
pop
mov
fsub
mov
cmc
lock
jp
push
(bad)
call
cmp
int3
cmp
aaa
lahf
and
addr16
retf
and
cmp
inc
dec
fsubr
rol
pop
push
sub
fadd
mov
ins
jmp
xchg
not
mov
inc
(bad)
(bad)
out
outs
icebp
inc
inc
fimul
fidiv
das
pop
xchg
or
adc
add
inc
stos
sahf
(bad)
mov
sub
jl
sub
xchg
stos
push
aas
fbstp
fbld
nop
xor
mov
cmp
pushf
out
xor
mov
xchg
xchg
movs
fld
inc
cli
jmp
call
call
aaa
sub
pop
test
arpl
mov
mov
leave
not
cld
xchg
pop
out
aam
xor
pop
out
mov
rsm
inc
faddp
jnp
push
repz
inc
inc
inc
(bad)
fwait
test
mov
bound
xchg
and
iret
in
fld
shl
aaa
iret
and
iret
and
dec
jecxz
pop
adc
aam
jne
jae
cmp
inc
call
int
std
adc
sub
pop
mov
bound
(bad)
cwde
cmp
dec
jne
or
getsec
out
adc
xchg
push
mov
xchg
adc
pop
lock
jne
int3
pop
lahf
rcr
in
xchg
(bad)
jg
ds
dec
in
lock
sub
div
out
mov
test
add
fsubr
loop
add
cmp
mov
mov
ret
push
(bad)
shl
mov
mov
jmp
jecxz
mov
leave
pcmpeqw
add
in
inc
sub
hlt
cmp
das
pop
pop
pop
inc
xchg
push
sub
or
nop
pop
push
adc
pusha
cmp
int
mov
or
ins
mov
mov
dec
inc
fs
loope
cmps
movs
rcl
movs
xchg
push
sub
push
adc
cmp
aaa
sbb
xor
jb
mov
pop
(bad)
dec
int3
or
jmp
mov
rol
or
test
and
outs
stos
mov
popf
clc
das
add
loopne
sbb
add
outs
inc
(bad)
fnstenv
mul
or
outs
clc
daa
sbb
mov
cli
dec
cmp
fs
push
repz
mov
and
mov
push
jl
ins
rcr
add
push
mov
add
ins
cmc
ds
dec
pop
in
or
adc
add
sbb
mov
or
ds
mov
xor
in
outs
pop
dec
push
test
cmc
cli
int
rol
xor
xchg
sbb
adc
push
add
scas
pop
adc
outs
dec
inc
ins
inc
and
jae
xor
cs
popa
dec
lea
jecxz
imul
repz
adc
mov
jbe
jno
loope
jno
jae
dec
jnp
(bad)
cdq
or
push
pop
popf
and
and
mov
sbb
dec
adc
push
pop
lds
mov
or
fcmovb
pop
sahf
xor
sahf
pushf
lahf
jp
les
out
xchg
in
pop
dec
sbb
add
dec
sahf
dec
or
pushf
push
add
not
xor
enter
jg
call
or
pop
xor
mov
push
inc
aam
mov
push
adc
imul
mov
outs
jnp
push
dec
and
test
pop
leave
xchg
sbb
popf
jecxz
cdq
jmp
xor
and
cmps
mov
daa
push
data16
std
sub
sti
xor
pop
imul
pushf
dec
mov
gs
jmp
cdq
stos
mov
das
rcr
xor
cld
inc
popf
or
mov
in
mov
aam
and
shr
cmp
aam
jne
aad
retf
ds
in
fmul
shr
mov
xor
and
inc
cmps
mov
sub
adc
(bad)
aam
cmp
mov
sbb
mov
nop
jbe
push
adc
or
cli
inc
movs
into
ror
(bad)
and
call
pop
ss
test
out
imul
adc
sbb
xor
mov
mov
xchg
xlat
or
rol
push
js
xchg
jnp
pushf
fwait
fwait
pop
aad
inc
lods
cwde
mov
call
retf
or
cwde
ds
xchg
xor
mov
mov
sbb
mov
sti
push
mov
mov
inc
sub
pushf
push
cld
cs
bound
push
xchg
jne
jb
imul
inc
hlt
jmp
adc
and
dec
mov
(bad)
and
call
mov
lahf
cmp
outs
vpmacssdql
push
sbb
cmp
loope
lahf
xchg
ds
ds
mov
loope
dec
jecxz
pop
mov
(bad)
pop
fmul
mov
sbb
(bad)
fwait
add
or
pusha
iret
mov
adc
jge
cwde
push
mov
add
pusha
mov
xchg
out
inc
loope
mov
shl
mov
jbe
xchg
add
cmp
pop
xchg
ins
dec
add
test
ds
shl
sti
xchg
jno
cmp
or
pop
mov
inc
fcomp
cli
out
jl
mov
mov
xor
push
lea
cli
mov
push
pop
mov
das
mov
dec
jnp
xor
xchg
pop
xchg
mov
xchg
icebp
dec
xor
out
pop
cmc
adc
jmp
mul
pop
outs
xor
push
sub
add
lahf
es
sub
loopne
xchg
mov
xor
(bad)
retf
hlt
aad
aad
pop
push
sbb
iret
aas
dec
jle
pop
(bad)
xchg
add
jo
jmp
popa
adc
or
mov
pushf
sub
aad
xchg
push
test
push
push
int
push
ror
popa
add
dec
inc
stc
and
hlt
pop
or
lock
pop
inc
shr
jno
inc
and
lods
mov
repnz
rcl
push
test
bound
in
stos
jbe
pusha
xchg
loop
jge
sub
ror
in
ja
xchg
mov
push
aam
fs
fld
cs
repz
xor
mov
sub
adc
test
dec
xor
add
in
dec
dec
push
pop
lock
mov
dec
lea
cmp
add
rol
jb
ds
nop
cmp
adc
add
inc
lock
add
and
in
test
pusha
cmc
sar
mov
cmp
cli
mov
push
shl
push
mov
and
leave
xchg
test
fldenv
add
call
mov
je
mov
(bad)
in
xchg
or
push
cmp
jmp
gs
sbb
add
inc
cmp
jmp
add
push
call
sub
dec
pop
add
and
das
push
inc
push
sahf
jmp
outs
rol
stc
or
jno
dec
leave
ins
ins
cmp
push
imul
xlat
pop
mov
(bad)
cmp
and
xor
inc
aas
movs
sub
(bad)
and
pop
and
cmp
div
cmc
jge
ss
loopne
ss
fst
sti
js
dec
mov
mov
lds
stos
aad
dec
push
mov
ins
or
jns
shl
xor
add
call
cmps
cdq
adc
sti
push
cmp
ins
cs
fcomp
shl
add
mov
pop
add
shr
fcomp
icebp
push
add
inc
popf
pop
lods
or
leave
test
xor
pop
ins
shl
push
lgs
inc
pop
mov
daa
into
sub
das
in
adc
mov
cmps
xor
pushf
sub
outs
jle
dec
stc
jmp
mov
(bad)
dec
test
in
outs
dec
int
fst
and
call
icebp
(bad)
mov
in
hlt
inc
pop
sub
iret
jo
push
out
sar
scas
mov
cmp
cmc
out
mov
inc
lds
mov
fisub
or
add
add
pop
add
in
dec
fld
dec
int
or
scas
xchg
outs
jnp
cmps
or
cmp
in
xchg
xchg
or
adc
push
das
dec
movs
imul
cmp
sbb
gs
xchg
adc
push
or
cmp
mov
(bad)
mov
adc
lds
push
mov
sti
mov
mul
ins
lods
loopne
or
jge
cmp
pop
es
repnz
mov
dec
dec
cmps
aad
add
outs
dec
add
jle
mov
and
dec
cdq
arpl
adc
mov
out
ds
and
arpl
retfw
pop
push
inc
cmps
clc
jmp
adc
add
push
mov
jne
cld
or
mov
sbb
inc
mov
adc
or
and
movs
xchg
das
loope
es
xor
cmp
xor
clc
or
pop
nop
out
sbb
mov
call
repnz
loop
push
dec
cmps
xchg
adc
jmp
jae
lock
push
sbb
sbb
hlt
mov
or
fcom
ss
retf
clc
sub
mov
je
repnz
xchg
ja
ffreep
mov
add
adc
sbb
sub
push
jecxz
das
scas
pop
mov
sbb
jno
dec
stc
lea
lods
loop
shr
test
push
gs
in
inc
test
nop
mov
call
sub
jge
inc
sti
pop
adc
imul
fisubr
dec
jo
sbb
jmp
cmp
(bad)
div
mov
rcr
pop
pop
sub
fsubr
aaa
mov
push
out
(bad)
cmp
sahf
xchg
int
pop
fld
and
leave
call
jecxz
fnstsw
mov
jno
into
retf
mov
mov
mov
sub
and
pushf
outs
repz
push
movs
xor
sbb
dec
outs
push
arpl
jmp
mov
in
loop
int
or
cdq
cmps
(bad)
adc
pop
scas
(bad)
sub
mov
add
or
loop
je
test
push
test
push
into
(bad)
sbb
push
and
adc
mov
stc
cwde
js
adc
jno
and
iret
xchg
and
(bad)
fs
das
rol
jmp
dec
and
stos
cmp
stc
mov
pusha
cmp
sbb
mov
shr
mov
inc
iret
sub
xchg
mov
fidiv
lods
sbb
and
xor
pop
in
or
aam
dec
mov
retf
cmps
call
cmps
movs
loop
dec
retf
out
xchg
cmp
sub
mov
movs
jae
lea
add
repz
xor
pop
jb
cmps
jle
stos
push
sub
sub
(bad)
sti
dec
leave
bnd
sub
repz
xor
jmp
loop
addr16
das
cmp
stc
sub
xchg
fmul
add
in
repnz
xlat
imul
stos
jle
sub
add
push
bound
xor
js
adc
mov
sub
mov
sbb
and
mov
iret
push
repnz
pushf
scas
call
mov
mov
mov
(bad)
sbb
ja
mov
xchg
mov
stos
loop
push
xchg
jno
fwait
cmp
push
mov
pop
push
fwait
sbb
pop
imul
bound
pop
inc
adc
pop
cwde
mov
dec
or
inc
scas
xor
clc
cli
dec
imul
sbb
cmp
pop
sub
je
out
mov
jno
outs
addr16
or
mov
mov
xchg
call
mov
test
push
sbb
pop
jb
js
dec
pushf
scas
ror
in
das
jo
dec
xor
into
xor
jp
loopne
mov
sbb
pop
adc
lods
scas
out
push
mov
(bad)
cmp
lock
(bad)
jmp
shl
dec
mov
push
adc
or
xor
in
fadd
cs
lods
pop
out
cmp
imul
loopne
imul
mov
cmp
cmps
mov
ror
int
or
in
pop
cli
sbb
mov
aam
movs
cmps
add
dec
jle
push
rcl
fcmovb
cld
sub
sub
fnstsw
fisttp
sub
and
mov
aaa
sub
adc
lods
leave
and
inc
je
sbb
push
jb
dec
es
cli
xor
xchg
mov
cmp
inc
and
adc
sub
mov
cmp
xchg
cmp
iret
mov
iret
sbb
jg
or
in
sbb
scas
jmp
cs
dec
test
jp
sbb
mov
add
jb
push
adc
ret
xchg
add
inc
adc
mov
adc
test
ret
fbld
(bad)
shl
data16
sbb
int
cli
sbb
push
pop
dec
jecxz
push
fmul
push
(bad)
es
iret
xchg
and
xchg
test
jp
and
dec
pop
mov
aas
aam
mov
mov
add
loopne
scas
ins
ja
mov
mov
cmp
add
sbb
xor
ss
or
jbe
push
mov
in
mov
cmp
sbb
(bad)
and
add
push
ja
mov
inc
push
sbb
inc
xchg
jmp
outs
mov
daa
sahf
in
mov
(bad)
stos
cmp
pushaw
mov
adc
pop
cs
rcr
sbb
fdiv
retf
push
imul
loop
in
sub
int3
mov
shl
mov
stos
cld
das
in
mov
repz
fstp
add
or
xor
sbb
sbb
jmp
je
repz
test
mov
mov
shl
or
mov
or
(bad)
or
out
cmps
adc
gs
nop
es
rcr
pusha
in
dec
int
es
retf
data16
lea
fcomp
xor
inc
popa
jge
loopne
cmp
pop
scas
xchg
test
jp
push
lahf
stos
pop
test
inc
int3
pop
aad
mov
xchg
push
loopne
data16
and
jp
push
std
hlt
test
inc
or
mov
push
mov
and
inc
xor
lock
retf
lods
jnp
push
dec
adc
leave
test
fmul
scas
lods
xchg
adc
and
scas
aas
out
cwde
pop
add
icebp
js
mov
sub
jp
xchg
sbb
fmul
mov
ss
xchg
jp
cmc
cmp
loop
dec
jp
aaa
sub
lea
dec
jmp
cmp
add
leave
push
imul
add
iret
pop
pop
fwait
ins
call
or
push
lods
test
mov
nop
test
and
ins
mov
add
(bad)
fsubr
out
pop
clc
dec
jle
mov
aaa
(bad)
and
and
sub
aad
int3
test
in
outs
ret
sub
push
xor
rcr
ins
inc
(bad)
mov
scas
add
mov
div
add
sub
test
or
dec
and
dec
icebp
es
xchg
cmp
jl
cli
xor
pushf
dec
sub
jo
jnp
push
mov
jp
movs
fldenv
and
dec
adc
cmp
mov
iret
sahf
jns
cli
jo
pop
push
fmul
jb
std
shr
scas
mov
pop
in
retf
test
rcr
xlat
cld
popa
sub
sete
xchg
data16
sub
pop
fdiv
or
push
jg
inc
ins
in
aad
mov
test
jle
aas
imul
stos
push
mov
dec
and
xchg
mov
mov
cs
lahf
jl
or
fidiv
fidivr
aam
in
rol
cmc
push
xor
xor
fisubr
jecxz
jge
in
ins
jns
in
gs
mov
js
ins
stos
inc
adc
test
sbb
in
lea
push
mov
bound
sbb
test
push
pop
sbb
dec
outs
push
test
aam
pop
xchg
xor
jg
mov
push
sar
and
cmps
xchg
pop
push
dec
loop
add
cmp
add
sbb
dec
ins
and
ins
(bad)
cld
sub
mov
xor
mov
(bad)
fnstcw
dec
dec
in
mov
fcmovb
pop
out
(bad)
push
aaa
sahf
add
jmp
cmp
movs
test
mov
(bad)
out
hlt
call
fadd
ds
sar
bnd
and
out
adc
mov
mov
dec
ins
sbb
lds
test
hlt
(bad)
mov
jmp
xchg
xchg
jmp
sub
stc
inc
imul
or
sub
(bad)
jl
mov
or
xchg
call
(bad)
(bad)
fsub
inc
mov
jp
pop
xchg
gs
sub
loope
xor
popa
es
rcr
fist
xor
(bad)
mov
mov
loopne
mov
jns
adc
test
mov
ja
jp
mov
jbe
pop
adc
mov
cwde
sbb
add
fild
stos
mov
inc
add
mov
mov
mov
dec
push
rcr
ret
pusha
or
cmp
movs
dec
pop
cdq
mov
sbb
jnp
and
mov
mov
mul
mov
ret
ja
lahf
mov
ja
push
xchg
pop
js
leave
test
outs
push
js
in
push
pop
push
xor
je
call
sub
or
lea
sub
xchg
mov
pop
xchg
fnsave
ds
or
test
inc
mov
ror
loopne
daa
mov
bound
enter
push
mov
mov
stc
inc
lahf
test
rol
xchg
mov
pop
and
dec
sbb
cs
imul
fisub
cwde
int3
xor
aam
jg
xor
mov
xor
lock
test
xlat
(bad)
retf
dec
out
out
out
test
jmp
fild
pop
mov
push
(bad)
mov
mov
fnstenv
in
lods
jg
mov
pusha
mov
sbb
jbe
pop
adc
loope
(bad)
lods
pop
cld
cmp
imul
xor
ss
dec
mov
jmp
mov
inc
mov
clc
in
arpl
xchg
xchg
sti
sbb
(bad)
or
cmps
test
in
add
lds
inc
(bad)
adc
idiv
mov
dec
pop
pop
or
cmp
sub
(bad)
mov
xchg
xchg
xchg
cmp
adc
fucom
xchg
enter
pop
mov
fs
test
or
inc
mov
inc
cmp
jecxz
inc
pushf
xbegin
push
mov
je
lock
outs
pop
shl
adc
stos
mov
and
xchg
mov
rcl
mov
fild
outs
inc
jno
jmp
mov
push
pushf
and
mov
push
int3
and
xor
push
sti
jnp
pop
jbe
js
push
ret
shr
adc
cmps
xor
mov
add
jle
loope
pop
iret
push
lahf
add
xor
mov
sbb
fcomip
inc
stc
mov
in
scas
and
or
jbe
fisub
pop
sub
ins
iret
stos
outs
or
scas
sbb
fsubr
adc
lods
call
mov
fst
and
das
ret
dec
xchg
in
sub
enter
add
arpl
scas
sub
aaa
mov
loop
nop
inc
loop
xor
cdq
inc
cli
call
cmp
fidiv
stos
inc
mov
gs
lea
scas
mov
je
idiv
push
or
sbb
sbb
cmp
pop
loop
sub
cmps
out
and
lahf
mov
xor
test
adc
es
out
fld
pop
inc
adc
push
push
and
jne
mov
pop
stos
jg
jnp
or
sub
in
jnp
cdq
dec
adc
dec
jmp
ds
dec
xor
outs
imul
inc
and
push
or
push
loop
adc
dec
repnz
fwait
mov
jns
sbb
test
sub
std
pop
scas
add
mov
sub
pop
and
add
mov
cmp
retf
and
loope
or
mov
inc
popa
or
mov
dec
cmp
test
xor
mov
xor
push
test
cmp
dec
rcr
out
dec
ins
cwde
add
inc
xor
jge
xchg
mov
lds
sar
adc
rol
sub
dec
push
stos
jno
mov
sbb
or
jae
retf
inc
sbb
(bad)
rcl
push
sub
xor
scas
inc
jnp
sub
cwde
pusha
mov
jecxz
mov
mov
cmp
fdiv
adc
inc
cdq
or
call
add
pop
sub
in
inc
push
inc
fmul
scas
pop
stc
mov
push
js
arpl
arpl
jg
adc
test
(bad)
call
sub
repnz
cmp
pop
xchg
sub
sbb
push
push
ss
icebp
inc
push
cs
int3
fnclex
mov
movs
dec
shl
call
fimul
inc
xor
test
inc
or
lods
out
sub
or
inc
inc
js
(bad)
fsubr
fisub
push
test
sbb
xchg
int
or
rcl
adc
dec
mov
jmp
cli
imul
xchg
xchg
ffreep
sti
mov
enter
hlt
jecxz
data16
jle
call
add
jp
xor
ret
icebp
cld
cdq
lods
jne
adc
or
mov
cmp
dec
out
loopne
and
gs
fld
pushf
rcr
sbb
test
push
or
xor
push
push
pop
test
das
mov
pop
jmp
aaa
fdiv
add
dec
xor
es
mov
out
dec
xchg
push
cmp
dec
jp
and
div
push
rcl
dec
adc
xchg
push
xchg
test
test
sub
or
cmp
fwait
cmp
inc
or
hlt
inc
sbb
mov
jo
jae
or
adc
sub
adc
clc
adc
or
add
pop
retf
xor
mov
sbb
hlt
data16
inc
rol
sar
cs
mov
mov
leave
retf
mov
sahf
mov
rol
jl
into
test
or
dec
bndldx
push
fstp
scas
jecxz
leave
lods
lods
movs
jge
and
gs
cld
outs
push
adc
dec
inc
test
ret
pop
(bad)
jg
sbb
inc
mov
adc
addr16
jl
sbb
sub
mov
vmwrite
lock
jo
popf
lock
pop
das
and
xchg
jbe
mov
push
pop
xor
arpl
mov
dec
ja
add
cmps
cmps
lahf
popf
dec
jmp
add
jge
outs
dec
cdq
repz
stos
pusha
jge
inc
imul
add
sti
xor
xchg
js
add
(bad)
cmp
pop
add
mov
call
int3
push
shl
or
iret
push
adc
push
mov
loope
pop
mul
xlat
jo
cwde
add
adc
gs
push
adc
xor
or
loop
xor
mov
cmp
pop
mov
inc
mov
cmp
pop
jg
movs
loope
ror
jp
pop
adc
out
aaa
in
nop
inc
xchg
retf
clc
call
bound
gs
enter
jle
mov
xor
movs
sbb
ins
sub
popf
outs
jmp
ins
xchg
mov
cmps
push
jecxz
mov
inc
js
addr16
jg
and
pop
add
mov
aas
inc
add
callw
and
es
out
mov
mov
addr16
mov
popa
mov
hlt
int
cmp
push
mov
retf
jns
sahf
inc
or
out
mov
or
push
call
pop
xchg
jge
pop
xchg
pop
xlat
sbb
push
push
push
leave
or
cmps
cmps
add
sahf
jns
dec
cmps
stos
out
out
add
xchg
ret
jae
pop
jno
xchg
xor
jne
out
and
mov
mov
sbb
and
bnd
or
mov
outs
mov
fidiv
and
mov
sahf
push
cmp
imul
call
neg
mov
jno
mov
sbb
jmp
mov
pop
(bad)
jne
in
ss
les
cmp
hlt
dec
cmp
sbb
mov
inc
les
jns
mov
mov
es
xor
xchg
jmp
fcomp
add
mov
add
sbb
add
or
cmc
test
xchg
clc
stc
sub
dec
call
mov
sar
fstp
daa
or
jb
or
xlat
sbb
test
fs
or
in
or
gs
cmps
jmp
xor
jecxz
pop
popa
and
test
jns
dec
out
dec
and
jecxz
jbe
mov
jle
(bad)
outs
test
and
push
pushf
add
stos
mov
push
(bad)
cmp
pusha
call
jg
and
scas
xchg
inc
rol
add
pop
rcr
inc
std
jg
loope
test
push
sub
dec
adc
retf
gs
dec
mov
idiv
sub
icebp
(bad)
push
cmp
pop
mov
into
cdq
lods
sub
jae
mov
adc
sti
and
pop
jae
xor
leave
out
cmc
pop
xchg
jl
dec
cmp
jge
inc
xor
in
sub
(bad)
mov
pop
pop
push
ss
aam
mov
clc
inc
js
shr
lea
or
das
cmp
and
shl
cwde
and
add
jmp
dec
or
cmps
jbe
cmp
add
aad
ret
cmp
ror
in
mov
or
mov
call
(bad)
sti
dec
rol
push
push
cmp
jg
push
test
popa
jne
xchg
mov
sub
xlat
sub
pop
pop
xlat
scas
mov
fstp
mov
pushf
cwde
mov
xchg
mov
arpl
mov
xchg
cmp
jns
iret
jno
out
sahf
int3
add
sub
or
xchg
dec
fmul
mov
jae
xor
sub
test
(bad)
aad
dec
mov
stc
mov
ins
repnz
cmp
ror
cmc
sti
mov
add
mov
fld
cmp
push
mov
int3
mov
loopne
cmp
cwde
cmp
daa
lea
dec
push
pop
mov
pop
rcl
sahf
adc
push
gs
packuswb
mov
repz
ins
test
sub
add
shl
outs
mov
das
out
gs
test
mov
fdiv
sub
outs
stc
push
or
jp
imul
int3
es
and
dec
push
mov
pusha
sbb
jl
not
dec
std
cmc
popf
push
jbe
dec
pop
jae
neg
inc
mov
leave
shr
and
mov
mov
jmp
pop
push
shr
sub
stc
sbb
inc
xchg
and
ror
jnp
(bad)
retf
repz
dec
test
retf
stc
ss
stos
mov
jmp
jmp
sbb
jp
jg
jno
js
sub
fcmove
mov
push
pop
adc
xchg
and
aam
sbb
dec
ins
cmps
shl
push
fst
scas
stc
fnstcw
lea
fwait
sbb
ror
xor
fs
pop
adc
or
sti
int3
mov
jmp
imul
cmp
xchg
aaa
mov
cmp
lds
mov
das
jecxz
out
arpl
(bad)
sbb
mov
cmc
push
scas
jg
adc
scas
add
jno
and
pop
hlt
aam
out
out
pop
xchg
jae
test
and
int3
or
shl
mov
ja
mov
(bad)
js
imul
jl
mov
jl
retf
jbe
jbe
jmp
and
(bad)
ds
fidivr
add
pop
jae
imul
push
lods
xor
mov
xlat
pop
ffreep
fild
aad
sub
mov
adc
jbe
cmp
jns
jmp
inc
mov
imul
pop
dec
or
outs
cmp
imul
repz
push
ins
jne
sbb
cmc
mov
lds
push
mov
add
aam
es
in
mov
dec
je
jmp
mov
sbb
mov
mov
and
stc
dec
dec
lock
je
lods
xlat
arpl
cmps
out
ins
sbb
xor
cmps
mov
fcom
ret
ret
adc
retf
stos
loop
adc
cmps
xor
push
daa
ss
inc
push
(bad)
mov
push
mov
mov
xchg
sub
add
xchg
bound
xchg
xor
mov
jae
ficom
int3
mov
push
ins
fs
sbb
sar
and
pop
sbb
imul
ficomp
sar
and
mov
mov
mov
stos
dec
jo
int3
sub
mov
xchg
bound
inc
dec
ins
stc
cs
xchg
mov
or
pop
movs
test
fimul
push
stos
and
and
dec
xor
lahf
enter
lods
(bad)
mov
outs
rcl
sti
sub
sbb
int
shl
retf
jne
call
jecxz
out
jmp
sbb
push
xor
sub
test
pushf
retf
adc
inc
lahf
cmp
inc
test
push
outs
xlat
ret
fild
sahf
sub
mov
js
pop
in
jns
mov
icebp
mov
leave
dec
repz
pop
inc
lahf
jle
out
mov
sbb
scas
adc
jmp
push
or
or
pop
dec
std
lds
cdq
retf
or
or
xchg
mov
inc
xor
movs
and
adc
cmp
push
jle
cmp
dec
and
inc
test
lock
lock
fdivr
arpl
and
add
jl
ins
popf
inc
retf
or
es
inc
mov
aaa
in
mov
loop
leave
push
mov
shl
cld
jge
mov
sbb
repnz
sub
(bad)
jnp
jno
dec
mov
test
jge
movs
jo
retf
inc
rcr
pop
call
and
mov
ficom
sbb
xchg
test
jb
pusha
call
jp
fadd
pop
mov
mov
mov
or
cmps
dec
xchg
bnd
idiv
scas
imul
retf
sbb
xchg
sbb
(bad)
ins
movs
bound
jle
dec
mov
sbb
jl
popa
test
jns
cld
imul
inc
sbb
xor
jp
jno
sar
push
fisub
mov
les
cmp
call
mov
loop
mul
sub
stos
cmp
rol
and
daa
das
push
lea
add
stos
sub
leave
inc
idiv
xchg
xor
call
imul
add
add
(bad)
mov
popa
out
adc
cmp
in
ja
int3
mov
mov
mov
jmp
call
mov
fldcw
in
sti
in
cmp
xchg
jle
lahf
xchg
jp
adc
lods
test
dec
and
movs
repz
dec
call
sbb
std
fs
cmps
fnstsw
stc
mov
or
fisttp
fistp
add
stc
pop
push
jmp
and
nop
test
sub
push
adc
scas
les
sahf
mov
dec
data16
or
shr
xor
pop
in
scas
push
push
movs
jp
push
movs
xchg
pop
mov
pop
xchg
cli
jle
in
sub
adc
xchg
add
sahf
addr16
xchg
cli
out
push
mov
mov
test
lds
fisubr
into
inc
aas
shl
cmps
ret
dec
sahf
addr16
rcr
jae
sbb
aaa
cmp
sub
nop
xor
add
push
fisub
xor
cmp
arpl
mov
fmul
add
jne
mov
ror
out
mov
cld
stos
dec
rcr
push
lods
aam
clc
fs
cmc
or
ficom
sqrtps
imul
add
in
loope
and
int
std
mov
push
add
inc
jbe
add
dec
movs
push
inc
pop
push
sub
jns
jl
movs
push
xor
push
scas
dec
dec
sub
loope
js
jno
mov
xchg
pop
fisub
mov
nop
xchg
gs
ins
jns
(bad)
stc
lea
into
imul
scas
test
mov
dec
lods
loop
mov
iret
sub
iret
inc
in
and
cmp
sbb
icebp
add
out
mov
out
fs
or
fisub
inc
retf
dec
std
or
into
rcl
aad
out
push
inc
je
repnz
(bad)
xchg
xor
jns
push
jns
or
pop
lds
cmp
or
pushf
leave
inc
pop
rcr
hlt
fimul
jp
into
inc
mov
and
addr16
hlt
xchg
(bad)
je
sub
pop
faddp
stc
mov
call
pop
addr16
mov
dec
(bad)
in
in
call
cs
fimul
cmp
and
xor
dec
xchg
mov
rcl
inc
jecxz
mov
add
xor
imul
adc
imul
aas
jle
jo
push
adc
loopne
int3
test
nop
adc
mov
cmp
adc
ins
dec
adc
push
or
xor
and
fst
retfw
clc
mov
outs
pop
sbb
ror
sbb
test
imul
inc
or
and
inc
inc
ins
loope
pop
in
ins
out
aad
jno
mov
cmp
fs
cmp
mov
xchg
adc
(bad)
mov
mov
shr
mov
sbb
jl
mov
cs
dec
push
mov
inc
add
(bad)
mov
xchg
js
icebp
into
adc
adc
cmps
popf
ja
in
push
mov
and
rol
fisttp
mov
nop/reserved
test
dec
rcr
jno
out
loop
in
gs
cmps
daa
adc
loopne
jb
ds
xchg
repnz
jae
dec
test
call
pop
int
cmp
gs
shr
lds
(bad)
pop
push
ds
sbb
pusha
cmp
xor
push
(bad)
push
pop
pop
mov
cli
dec
in
pushf
xor
test
cmp
sbb
scas
shl
ret
outs
cmps
or
inc
sub
mov
js
in
test
(bad)
stc
popa
mov
scas
and
outs
mov
cmps
addr16
jns
cld
lock
inc
cmp
and
idiv
fcomp
je
loopne
(bad)
loope
xor
adc
push
xchg
cmp
jl
push
enter
pushf
test
das
adc
fidivr
xchg
fdivr
push
push
aad
ret
jp
ds
fild
fimul
int3
xor
mov
dec
xchg
mov
dec
adc
xor
loop
aaa
add
push
lds
nop
aam
sbb
inc
adc
outs
das
cs
inc
mov
dec
dec
ss
inc
rcr
test
sbb
push
dec
jns
fdecstp
xchg
adc
retf
lahf
(bad)
push
adc
pop
and
push
xor
sub
movs
nop
into
mov
push
cmp
mov
jb
std
pop
shl
pop
std
or
les
js
cwde
in
jg
inc
add
sbb
inc
mulps
jmp
ja
out
push
fild
mov
mov
push
push
push
lock
int
leave
inc
stc
cdq
add
mov
aad
loopne
shr
adc
xor
push
push
mov
ins
pop
xor
jp
and
stc
jecxz
sbb
sub
push
sub
sbb
stos
mov
cmp
sahf
and
movs
xor
inc
jmp
sub
adc
cmp
add
jae
and
lods
and
fwait
js
sbb
dec
xor
sti
dec
daa
imul
jp
shr
test
sar
call
sti
add
clc
xlat
or
ficomp
and
ds
daa
add
sub
or
fimul
test
dec
pop
adc
xchg
loope
pop
ja
push
mov
cs
pop
xor
add
or
and
mov
dec
gs
aad
rcr
gs
shl
outs
int
push
imul
into
ja
push
jg
pushf
and
scas
lock
or
stos
add
jp
ds
test
(bad)
add
and
cmp
cmp
xor
scas
mov
inc
ret
inc
ins
cwde
dec
je
pusha
push
adc
fldcw
shr
test
sbb
mov
jmp
pop
inc
mov
cli
retf
aad
pop
je
hlt
or
test
pfacc
xlat
test
xlat
call
pop
lock
sub
or
cmp
fs
inc
fdivr
push
(bad)
sbb
movs
repz
jne
ins
jmp
cwde
inc
(bad)
pop
jp
xor
mov
aad
mov
add
jb
xor
dec
scas
xchg
dec
scas
fucomp
xchg
xchg
xchg
adc
xchg
repz
std
ds
jle
or
cmp
outs
cdq
push
jg
das
and
sbb
jno
aam
adc
icebp
mov
popf
nop
ret
sti
or
jno
nop
inc
clc
scas
xor
cmp
pop
stos
and
mov
dec
stos
jmp
aad
stos
xor
aam
cmp
and
sbb
outs
outs
add
lds
xchg
xor
lock
pop
mov
jl
pop
popa
sti
and
pop
dec
and
inc
adc
pop
lea
add
push
dec
xchg
ins
push
sbb
ins
adc
mov
mov
sub
mov
sar
mov
es
mov
(bad)
pushf
lds
outs
jo
or
sbb
pop
xchg
cmp
push
jmp
ret
loop
xchg
xor
or
jl
rcr
(bad)
ror
mov
ss
rcl
adc
mov
lock
loopne
in
loope
xchg
int3
jmp
xor
addr16
(bad)
sbb
sbb
enter
scas
popa
lahf
pop
xor
aaa
daa
inc
test
push
lahf
mov
pushf
aas
push
sbb
fidiv
sub
imul
inc
and
adc
shl
cmp
cld
mov
add
ds
fs
imul
dec
push
call
mov
arpl
mov
xchg
cmps
cmp
mov
cmp
mov
mov
pushf
ror
jns
push
(bad)
lods
mov
fidiv
jle
dec
xor
lock
out
lods
push
aaa
jmp
push
test
jae
and
retf
jno
adc
sbb
in
dec
popa
push
pushf
fidivr
test
icebp
mov
mov
ins
stos
mov
jne
loop
(bad)
outs
sub
push
fxch
jae
add
pop
sub
mov
lahf
rcl
xor
inc
add
call
test
cmps
adc
mov
lea
xor
and
outs
dec
dec
mov
in
add
pop
cdq
push
aas
popa
inc
adc
popa
(bad)
sub
addr16
fs
push
mov
and
dec
addr16
mov
xlat
cmp
push
daa
cmp
mov
sbb
(bad)
(bad)
pushf
pusha
pop
mov
adc
mov
ret
inc
inc
inc
cdq
jge
jne
or
int3
pop
jmp
je
fcomp
fnstsw
pop
icebp
mov
mov
inc
stc
pop
lods
int
push
jno
dec
mov
sub
scas
mov
and
call
fsubp
stos
pop
inc
jae
pop
call
fiadd
movs
in
dec
dec
iret
jecxz
adc
xchg
mov
cld
scas
inc
inc
xor
test
push
inc
or
jecxz
jl
out
ret
stc
scas
push
and
pop
and
push
arpl
popa
mov
inc
int
xchg
bound
mov
sub
sbb
ins
cmp
xlat
xor
arpl
dec
cmp
inc
call
in
xor
inc
das
sahf
xor
jne
sub
add
mov
adc
push
dec
push
xchg
add
jno
loope
sbb
xchg
cmc
mov
int3
pop
pop
(bad)
lock
pushf
push
je
xchg
fiadd
xchg
test
cld
pop
cs
or
ss
push
mov
scas
adc
dec
push
stos
and
(bad)
imul
icebp
mov
retf
pop
fild
(bad)
icebp
outs
retf
cmp
or
idiv
rol
xchg
fstp
fwait
inc
mov
xchg
pop
pusha
out
or
das
scas
sbb
xlat
lods
push
into
push
inc
inc
out
mov
adc
retf
cmc
cs
cmc
jbe
(bad)
frstor
inc
jle
jnp
pushf
test
cmc
jle
mov
mov
out
es
(bad)
loopne
jmp
je
jge
addr16
xchg
push
and
mov
and
or
into
and
sbb
xchg
or
lock
jl
lahf
ins
mov
test
push
stos
sub
lahf
jp
pop
push
sbb
fisttp
mov
popa
out
fst
fdiv
cs
cmp
lock
adc
(bad)
in
lods
pushf
jbe
mov
xchg
jge
fst
(bad)
(bad)
std
push
cdq
and
push
lods
fnsave
pop
jp
mov
les
int
out
and
xchg
loop
push
sub
loopne
jp
xchg
imul
xor
fsub
cli
mov
movs
sbb
and
dec
adc
dec
add
inc
mov
stos
inc
mov
shr
cmc
cmp
mov
pushf
mov
mov
test
cmps
jae
xchg
sbb
xor
mov
movs
in
push
(bad)
mov
xor
sub
add
aad
imul
and
out
imul
mov
sbb
in
call
int
mov
scas
add
mov
fsubr
and
xchg
fisttp
xor
adc
fs
sbb
xor
movs
mov
or
idiv
loop
es
push
lds
or
push
fist
pop
gs
cmp
mov
mov
sbb
addr16
adc
mov
movs
loope
xlat
stc
inc
pop
mov
mov
jmp
fwait
iret
movs
gs
mov
ret
jg
inc
add
xor
test
pop
xor
sbb
jl
xchg
dec
imul
lods
push
mov
or
jp
jno
ins
push
xor
adc
imul
mov
jb
sbb
push
cs
mov
add
rcl
mov
dec
adc
dec
imul
and
call
fdivr
fimul
sahf
icebp
dec
out
dec
jp
cmc
sbb
jne
pushf
call
add
sub
ja
sbb
dec
mov
dec
lahf
mov
sub
xchg
add
cmp
lahf
mov
in
mov
xlat
dec
mov
add
or
jb
mov
lahf
outs
pop
pop
gs
push
loopne
aam
xchg
cmp
fiadd
test
xor
mov
push
mov
mov
cs
jg
repnz
xchg
(bad)
(bad)
iret
mov
aad
pusha
or
inc
retf
ja
jbe
ds
out
push
push
push
call
sub
lds
retf
push
mov
xchg
and
mov
aam
loope
inc
ss
inc
pop
mov
data16
mov
jbe
fist
daa
sbb
and
jg
add
xor
mov
jge
add
test
push
jp
cmp
sbb
rcl
mov
aad
or
sub
mov
ja
fnstsw
xlat
xor
xor
std
sbb
in
nop
xchg
pop
cdq
dec
xor
xor
fnop
finit
add
cmp
jne
movq
jmp
add
sub
emms
pop
add
sub
mov
push
pop
mov
movq
mov
push
pop
mov
push
pop
dec
cmp
jne
add
sub
mov
movq
mov
emms
inc
add
sub
mov
inc
cmp
jne
nop
cmp
jne
movq
dec
dec
xor
mov
add
sub
push
emms
call
push
pop
mov
movq
mov
emms
xor
emms
add
sub
push
nop
mov
movq
xor
add
sub
call
emms
adc
push
pop
test
je
pop
movq
jmp
emms
mov
emms
nop
add
sub
emms
push
pop
nop
xor
push
pop
emms
movq
emms
push
pop
emms
ret
call
sbb
dec
imul
lods
xchg
dec
imul
mov
inc
clc
(bad)
nop
dec
jl
add
fstp
add
cmp
add
pop
fld
fiadd
pushf
retf
xchg
dec
les
(bad)
lods
ins
jnp
dec
int
lods
pushf
retf
dec
scas
xchg
dec
xchg
mov
sbb
js
fst
lods
leave
cmps
mov
pop
dec
jl
jp
push
xchg
pop
cmc
and
dec
jl
jp
push
xchg
adc
js
dec
jl
inc
push
mul
xchg
cmps
cmp
pop
jl
jp
jl
xchg
sub
mov
dec
jl
sbb
jl
stc
inc
das
push
inc
push
xchg
imul
adc
xor
dec
jl
push
and
push
inc
adc
mul
xchg
sbb
call
push
cmp
call
shl
cld
xchg
xchg
inc
clc
xchg
dec
jle
xchg
dec
jae
mov
sbb
dec
mov
ret
and
(bad)
stc
dec
push
lods
les
jl
push
mov
lods
xchg
lds
xchg
sbb
lods
les
pop
scas
xchg
dec
jae
jbe
jl
adc
jl
pop
xchg
jge
xchg
lds
test
xchg
adc
movs
or
xchg
mov
leave
xor
lods
xchg
int
test
retf
pop
scas
xchg
dec
mul
xchg
cmps
pusha
mov
jnp
jl
sbb
fsubr
xchg
dec
jl
push
out
jl
xchg
and
push
push
out
jl
xchg
jae
test
dec
jl
jp
imul
cmps
ds
and
lods
mov
and
push
push
fidivr
push
sub
inc
jae
lods
xchg
push
or
outs
or
mov
rcr
dec
cmp
dec
jl
sbb
or
int
jl
leave
cmps
push
mov
xchg
and
(bad)
xchg
and
inc
int
jl
jp
imul
xchg
dec
es
ret
inc
jl
sbb
push
add
(bad)
cmp
mov
cmps
push
mov
pop
xor
xchg
adc
mov
dec
jl
(bad)
outs
mul
xchg
cmps
icebp
mov
lahf
inc
jl
sbb
pop
fimul
pop
xchg
idiv
jb
xchg
(bad)
cmp
jmp
cmps
xchg
mov
mov
cmp
xchg
adc
je
dec
jl
(bad)
jle
loopne
cmps
and
pop
inc
jl
sbb
dec
fimul
mov
jnp
jb
xchg
(bad)
cmp
sbb
js
cmc
pop
jl
leave
cmps
fisub
ffreep
xor
xchg
adc
cmp
ss
popf
xchg
hlt
jp
push
sub
dec
jl
push
lds
test
xchg
adc
fcomp
inc
push
test
xchg
es
xchg
dec
push
lods
stc
mov
clc
fwait
(bad)
mov
lods
(bad)
push
cmp
jo
xchg
dec
jl
xchg
mov
movs
xchg
dec
jnp
retf
cmps
out
xchg
dec
and
lods
leave
cmps
push
mov
ret
cmps
cli
mov
pop
pop
jl
leave
cmps
mov
sbb
loopne
xchg
dec
xchg
xchg
(bad)
xchg
sub
sar
pop
das
push
inc
(bad)
xchg
dec
jl
imul
push
mov
cmp
mov
xor
mov
push
sbb
pop
movs
sbb
and
idiv
xchg
dec
mov
lods
xchg
inc
push
in
sti
dec
dec
lods
xchg
sbb
lods
stc
mov
clc
fwait
int
test
jp
cmp
xchg
sar
jp
push
xchg
sar
jp
ins
lods
xchg
sar
jp
ins
lods
xchg
sar
jp
imul
inc
clc
out
dec
jl
mov
jl
retf
int
lods
out
xchg
xchg
add
add
test
pop
pop
jl
retf
xchg
ins
jge
popf
ret
mov
xchg
push
xchg
or
dec
jl
fld
lods
jp
imul
jp
imul
mov
push
mov
dec
mov
inc
out
jl
sbb
jo
push
(bad)
lods
push
dec
xor
dec
es
ins
pop
jl
retf
lds
push
xchg
imul
jge
pop
push
jg
xchg
mul
aaa
dec
jl
jp
outs
lods
xchg
adc
dec
lahf
dec
jl
sbb
fsubr
or
lods
xchg
movs
outs
test
inc
lods
xchg
dec
mul
mov
cmp
xchg
inc
ins
mov
push
out
js
(bad)
push
adc
push
inc
jl
sbb
jo
ins
iret
mov
and
inc
imul
lahf
mov
(bad)
shl
sbb
xchg
dec
imul
scas
lds
mov
shl
test
jnp
jo
xchg
lds
cdq
sbb
mov
repnz
dec
jl
sbb
jp
sbb
mov
xor
jl
sbb
mov
bnd
(bad)
jecxz
xchg
dec
jl
int3
sbb
xor
jl
adc
jl
xchg
(bad)
sti
mov
adc
jge
xchg
(bad)
sti
mov
dec
jl
int3
jb
outs
imul
sbb
ins
movs
xchg
dec
cmc
push
adc
dec
jg
sbb
jo
dec
push
sub
inc
jl
enter
mov
sbb
cmp
xchg
sbb
inc
jl
ins
sbb
imul
stc
push
adc
mov
inc
je
xchg
mov
lods
fwait
dec
jl
ins
mov
movs
adc
sub
mov
ins
cmp
inc
jg
xchg
sub
or
jnp
ja
xchg
pop
jmp
cmova
xchg
inc
jl
out
sbb
inc
jl
ins
cmp
and
je
xchg
cmps
xor
xchg
dec
mov
lods
xchg
mov
mov
adc
push
mov
xchg
pop
neg
xchg
lods
sbb
jl
xchg
dec
jge
xchg
xchg
mov
push
dec
jo
xchg
sbb
jl
adc
jo
xchg
int
lods
pushf
retf
xchg
dec
jg
xchg
inc
jl
sbb
ins
es
jo
xchg
retf
mov
mov
adc
jo
xchg
jg
sti
sbb
jl
xchg
dec
jg
xchg
inc
jl
xchg
mov
and
lods
adc
jle
mov
fs
or
je
xchg
int
scas
sbb
push
lods
sbb
ins
mov
xchg
inc
jl
int
(bad)
sti
sbb
(bad)
sbb
dec
ins
mov
lods
sbb
push
lods
sbb
ins
mov
xchg
inc
jl
int
(bad)
sti
sbb
cs
dec
xchg
ds
jmp
dec
push
ins
mov
movs
cwde
dec
jl
iret
inc
jl
adc
and
pushf
retf
xchg
dec
sbb
dec
jl
sbb
jo
rol
ror
dec
or
xchg
dec
xchg
test
dec
jl
xchg
(bad)
xor
sbb
jl
xchg
dec
cmc
fisttp
dec
jl
jecxz
call
retf
dec
or
sbb
jl
mov
dec
jl
xchg
dec
sub
add
lods
shl
movs
xchg
dec
jg
lahf
push
push
push
ins
sbb
adc
js
xchg
dec
or
mov
lods
lahf
dec
jl
stc
dec
sbb
inc
jl
sbb
jl
xchg
dec
sub
ins
mov
int
fldcw
xchg
inc
jl
test
jl
ror
std
addr16
sub
sbb
gs
jb
inc
out
mov
jo
(bad)
dec
mov
pushf
gs
push
jno
add
ror
and
sbb
loopne
lds
call
mul
ret
(bad)
repz
cmc
push
adc
jmp
xor
fcomp
ins
inc
dec
jl
sbb
cmp
fimul
mov
add
xchg
mov
and
es
adc
dec
jl
(bad)
and
push
xchg
mov
lods
xchg
lds
cmc
sbb
push
xchg
cmp
(bad)
sbb
cmc
scas
dec
movs
retf
push
push
push
test
xchg
adc
mov
in
sbb
and
(bad)
xchg
and
(bad)
xchg
and
(bad)
xchg
lds
(bad)
and
shl
sub
mov
push
sbb
or
das
pop
jl
leave
cmps
sahf
movs
xchg
dec
sub
pop
inc
jl
sbb
or
in
jl
leave
cmps
mov
xchg
dec
cmc
jmp
jl
fidivr
xchg
inc
or
jnp
je
xchg
mov
test
mov
es
xchg
dec
sbb
dec
jl
ins
cmp
fadd
pushf
ins
sbb
sbb
lods
leave
and
es
mov
stc
ins
cmp
push
in
idiv
fwait
mov
push
les
push
xchg
inc
stc
sbb
sbb
(bad)
xchg
mov
stc
ins
cmp
les
lahf
ins
sbb
dec
jae
push
dec
jl
sbb
(bad)
in
pop
push
lods
sbb
outs
imul
cmc
cmc
push
lods
cmc
inc
shl
cmps
push
loope
div
xchg
stc
rol
mov
sbb
je
mov
mov
mov
xchg
sub
push
xchg
xor
fcomp
lods
xchg
dec
jge
sbb
or
aas
inc
jl
leave
cmps
xchg
stos
xchg
dec
sbb
lds
movs
ins
cmp
push
inc
int
lods
pushf
retf
arpl
mov
(bad)
xchg
mov
es
dec
jl
adc
je
mov
dec
jae
dec
jl
sbb
ins
sub
(bad)
jl
xchg
lds
test
mov
ds
ds
dec
jl
jnp
jnp
xchg
mov
mov
loope
cmp
jl
push
mov
xchg
int
push
pushf
dec
jl
out
mul
xchg
cmps
shl
repz
jl
sbb
je
push
inc
sbb
lea
lods
xchg
dec
das
(bad)
xchg
es
xchg
dec
sbb
lds
movs
ins
jge
clc
repz
lods
fwait
dec
jl
xchg
dec
jl
fidivr
xchg
out
pushf
dec
jl
jnp
jnp
xchg
and
les
fist
dec
jae
retf
lods
sbb
js
xchg
inc
jl
leave
cmps
jle
xchg
dec
cmc
sub
dec
jl
sbb
jl
ret
movs
ins
jl
jge
icebp
sub
dec
jae
stos
mov
push
adc
and
inc
jle
xchg
lds
test
xchg
adc
ins
xchg
dec
jl
adc
jge
xchg
lds
test
xchg
adc
add
xor
xchg
lds
test
xchg
(bad)
sti
sub
adc
jge
xchg
arpl
dec
cmc
sub
dec
jl
sti
mov
lods
xchg
mov
xchg
dec
jl
sub
jge
xchg
dec
jae
pop
dec
jl
sbb
loopne
xchg
dec
inc
push
xchg
dec
mov
lods
xchg
jae
push
jle
jae
cmp
lods
scas
sar
clc
xor
dec
jl
pushf
retf
xchg
dec
inc
push
pop
(bad)
jl
xchg
jae
lods
xchg
mov
in
dec
jl
scas
or
or
out
inc
cmp
jae
lods
xchg
into
or
scas
pop
jl
push
cmp
nop
fiadd
aas
dec
out
inc
into
loopne
pushf
(bad)
jae
lods
xchg
into
or
scas
dec
jl
push
inc
clc
sub
dec
jl
out
xchg
lahf
adc
in
lods
xchg
dec
jns
pop
dec
jge
xchg
and
push
push
fidivr
es
xchg
dec
sbb
dec
jl
ins
stc
call
cmp
dec
jl
jp
adc
adc
xchg
dec
cld
push
and
jge
xchg
mov
cmp
xor
xchg
movs
popf
lds
stc
in
xchg
dec
sbb
dec
jl
ins
fld
lods
xchg
dec
xchg
gs
dec
jl
xchg
mov
xor
and
jge
xchg
mov
rcl
(bad)
xchg
dec
jl
imul
adc
xchg
cmp
xchg
sbb
ins
lods
xchg
mov
test
mov
leave
aam
xchg
dec
cmc
call
push
cmp
xchg
sbb
clc
lods
xchg
dec
sbb
dec
jl
sbb
je
mov
dec
jl
xchg
mov
xor
and
jge
xchg
mov
rcl
out
lods
xchg
(bad)
cmp
out
jl
shl
and
jge
xchg
mov
sub
int3
inc
sbb
mov
push
stc
dec
push
push
ins
sbb
push
and
les
lahf
ins
sbb
xchg
mov
push
jp
jb
xchg
adc
inc
leave
xor
lods
xchg
lds
xchg
stc
mov
or
xchg
ins
xchg
lds
mov
jg
daa
xchg
mov
scas
dec
or
sbb
(bad)
hlt
retf
int
lods
out
sbb
test
cs
dec
sbb
lods
mov
scas
adc
jo
pop
cmps
xor
xchg
(bad)
stc
add
cs
lods
xchg
dec
jae
jl
jl
sbb
pop
mov
sbb
lods
xchg
dec
jl
dec
(bad)
mov
es
inc
jge
pushf
mov
jae
push
inc
adc
pushf
xor
pop
adc
xchg
inc
jmp
test
retf
sub
xchg
dec
jae
add
jl
sbb
jo
out
push
nop
xchg
dec
dec
sub
lods
xchg
(bad)
jo
jb
dec
jbe
xchg
sbb
scas
(bad)
pop
jl
sbb
and
mov
std
push
xchg
dec
jl
out
ds
dec
jge
xchg
xor
int3
push
or
lods
xchg
dec
jl
out
inc
std
push
jae
lods
sbb
dec
mov
pop
arpl
sbb
and
sbb
popf
popf
or
dec
sbb
jo
push
mov
xchg
add
sub
lods
xchg
mov
xchg
scas
xchg
dec
xchg
mov
dec
jl
adc
fadd
lea
dec
das
push
out
xchg
aaa
xchg
dec
jl
mov
lea
dec
das
push
out
xchg
sub
inc
std
outs
xchg
pop
jl
ror
lods
sahf
dec
jl
jnp
jns
xchg
(bad)
mov
lods
or
sub
lods
enter
sbb
mov
test
or
jno
lods
xchg
lds
mov
xchg
dec
dec
jg
pop
div
adc
jl
jl
into
mov
stos
dec
or
xchg
mov
cmp
mov
jnp
xchg
adc
fcomp
dec
jl
sti
push
jl
xchg
and
(bad)
sti
dec
jl
adc
jl
push
jmp
lods
xchg
mov
test
adc
js
stc
dec
push
lods
jp
jnp
xchg
push
sub
in
cmp
int
lods
pushf
retf
add
mov
mov
mov
mov
xchg
lds
push
xchg
nop
xor
(bad)
imul
adc
data16
push
or
push
or
push
or
push
or
sbb
jo
ins
iret
mov
sub
dec
outs
lods
xchg
cmps
arpl
mov
mov
jl
iret
dec
jl
retf
cmps
popa
lods
xchg
dec
neg
lahf
iret
mov
(bad)
xchg
and
(bad)
xchg
and
(bad)
xchg
es
xchg
pop
sub
outs
cmc
push
cmp
push
mov
lods
xchg
and
sti
sti
into
jge
xchg
int
test
mov
cmp
cmps
outs
lods
xchg
dec
mul
lahf
iret
mov
daa
add
in
adc
jl
popa
lds
mov
xchg
dec
push
lods
stc
dec
push
scas
stc
dec
push
lods
sti
dec
jl
adc
cmp
(bad)
mov
imul
cmp
(bad)
cmp
xchg
sbb
pop
mov
jl
les
sub
push
(bad)
lods
sbb
inc
lods
dec
lds
sbb
lods
xchg
dec
mov
cdq
fwait
ja
fcom
push
je
(bad)
lds
mov
xchg
dec
push
lods
stc
dec
push
lods
stc
dec
push
scas
sti
dec
jl
rcr
cmp
(bad)
mov
imul
sub
dec
std
imul
lods
lds
cmp
sbb
cmps
xchg
dec
and
xchg
int
lods
pushf
retf
ins
mov
in
pusha
mov
daa
mov
arpl
aam
inc
lods
out
mov
sub
ror
cld
xchg
xchg
cmp
mov
mov
stos
mov
mov
stos
mov
popf
outs
imul
dec
lods
xchg
dec
imul
add
xchg
push
jg
es
push
retf
adc
ja
out
sbb
jp
cmc
arpl
out
lods
xchg
dec
imul
mov
push
xor
(bad)
sub
inc
xchg
(bad)
lea
push
dec
sbb
xchg
xchg
xchg
pop
fisubr
jge
mov
inc
idiv
adc
jl
bound
mov
dec
mul
mov
idiv
mov
div
mov
stc
fs
imul
fcmove
mov
data16
imul
dec
lods
xchg
dec
imul
lahf
lds
sbb
cmc
mov
sbb
pop
test
out
neg
sbb
repz
lds
xchg
nop
div
jmp
js
xchg
xchg
cmc
imul
push
add
mov
push
nop
dec
pop
sub
sbb
inc
adc
mov
dec
nop
mov
enter
rcr
lods
rcr
and
mov
mov
cs
push
mov
std
(bad)
es
xchg
dec
sbb
mov
mov
xchg
dec
jl
push
push
mov
lods
xchg
dec
or
sbb
jl
sbb
lods
xchg
dec
jmp
(bad)
jg
push
int
test
xchg
(bad)
fwait
dec
jl
jp
div
xchg
inc
jl
sbb
sub
sub
mov
xchg
inc
(bad)
and
inc
jge
xlat
inc
jns
push
or
add
call
mov
lods
xchg
sar
imul
dec
lods
xchg
dec
imul
lahf
lds
sbb
cmc
mov
dec
call
ins
daa
xchg
fmul
jbe
fnstcw
popf
rcr
and
es
push
adc
das
(bad)
shl
jl
or
int
lds
sbb
je
xchg
xchg
es
je
xchg
lds
xchg
xchg
sbb
pop
jl
sbb
jl
stc
dec
sbb
inc
jl
ins
stc
jl
xchg
dec
push
push
ins
sbb
lea
pop
lea
iret
add
out
std
shl
cmp
sub
push
lods
xchg
mov
repnz
pop
sub
(bad)
mov
add
shl
cmp
sub
push
lods
xchg
or
xchg
adc
pop
in
xchg
dec
sub
mov
dec
dec
int
jle
shl
cmp
push
lods
mov
xor
xchg
jle
fstp
dec
xchg
mov
xchg
movs
jb
xchg
dec
jl
js
(bad)
lea
(bad)
div
lahf
iret
mov
(bad)
ins
cmp
inc
cli
mov
push
sbb
jo
push
dec
popa
lods
xchg
sbb
jl
shl
ins
sbb
jo
xchg
push
jl
push
dec
je
shl
daa
daa
add
movs
ror
cld
xchg
xchg
cmp
imul
push
lods
stc
dec
push
lods
stc
dec
adc
xchg
dec
cmp
ins
sbb
lds
mov
xchg
dec
push
lods
lds
mov
cli
ins
sbb
ins
sbb
inc
std
imul
push
lods
stc
dec
sub
xchg
and
push
(bad)
push
mov
es
push
lds
lods
ret
sbb
je
sbb
pop
test
out
dec
fs
js
scas
test
rol
push
mov
lea
lods
xchg
dec
das
(bad)
shl
jl
xchg
dec
sub
ins
mov
int
lds
mov
(bad)
outs
outs
xchg
dec
sbb
dec
jl
sbb
jo
rcr
lods
sbb
ins
sub
dec
ins
lods
xchg
lds
imul
sbb
ins
xlat
push
and
push
and
push
and
int
mov
js
das
cs
das
(bad)
ins
mov
imul
add
jl
sbb
pop
test
nop
or
shl
mov
xchg
into
inc
adc
xchg
dec
or
xor
idiv
xchg
int
cmps
mov
dec
jl
shl
fcomp
or
inc
inc
out
call
xchg
dec
or
shl
mov
adc
fsubr
call
xchg
pop
or
int
scas
out
and
mov
iret
pop
test
scas
or
ror
lods
xchg
dec
cmc
(bad)
xchg
push
jmp
mov
lea
pop
jl
push
mov
jnp
adc
sbb
sbb
js
popf
xchg
pusha
jl
xchg
add
cmps
and
mov
lods
ret
dec
sub
xlat
dec
cmp
lods
scas
dec
jl
jnp
xchg
push
ins
sbb
add
jae
lods
xchg
cmps
mov
enter
iret
stc
sbb
pop
nop
mov
push
enter
loop
and
into
out
pop
(bad)
sti
sub
sar
pop
int3
out
adc
mov
jno
cld
sub
(bad)
sti
sub
sar
cmp
imul
pop
lods
jnp
test
ins
push
lea
ins
push
lea
dec
xchg
jae
mov
(bad)
fmul
sub
rcr
icebp
fisub
pop
(bad)
cmp
sub
std
sub
(bad)
adc
fsub
cmp
ret
out
sbb
loopne
adc
iret
or
loope
das
(bad)
adc
idiv
icebp
xchg
cmps
scas
push
ins
mov
fptan
cmp
fsub
dec
xchg
push
mov
lods
xchg
dec
jl
xchg
dec
jl
xchg
dec
jl
xchg
dec
jl
xchg
dec
jl
xchg
dec
jl
xchg
dec
jl
xchg
dec
jl
xchg
dec
jl
xchg
dec
jl
xchg
dec
jl
xchg
dec
jl
xchg
dec
jl
xchg
dec
jl
movs
movs
adc
sbb
cmps
push
inc
ins
mov
(bad)
fldenv
das
or
stos
dec
xchg
jg
mov
fsub
sub
sahf
mov
mov
call
sti
cmp
int3
neg
adc
ficom
mov
enter
ret
adc
lods
jnp
xchg
push
ins
or
(bad)
sub
(bad)
out
or
cli
and
ret
xchg
xor
cmp
and
fcmovu
sub
(bad)
jmp
jl
pop
movs
adc
xor
jecxz
or
xchg
cmps
mov
enter
int3
jecxz
sbb
loopne
adc
cld
dec
xchg
jnp
mov
int3
idiv
sbb
lods
jnp
xchg
push
ins
sbb
retf
sbb
fsubr
add
inc
pop
movs
adc
sbb
out
push
aam
das
adc
test
in
xchg
cmps
mov
ins
mov
enter
ret
aaa
enter
inc
jnp
add
cmp
enter
lods
jnp
xchg
push
ins
sbb
psubusw
cmp
ret
xchg
jb
mov
(bad)
idiv
cmp
loope
push
loopne
sub
lods
jnp
xchg
push
ins
sbb
rcl
adc
lock
ins
sbb
rol
adc
imul
xchg
ret
jns
sub
sub
shl
jl
std
movs
adc
adc
shl
xchg
sub
mov
push
das
sbb
cli
and
lods
jnp
xchg
push
ins
or
(bad)
daa
adc
shl
enter
inc
ins
mov
sar
sbb
repnz
shl
xchg
cmp
sub
cmp
ret
sub
out
xor
(bad)
sub
push
ins
or
fnop
and
shl
sbb
cli
and
cli
xchg
cmps
xchg
mov
fcomip
das
or
ret
cmp
into
idiv
xchg
cmp
out
add
out
adc
neg
push
ret
pmaxub
mov
enter
ret
repnz
std
loope
pop
enter
inc
sahf
mov
adc
jmp
(bad)
cmp
ret
out
xchg
cmps
popa
mov
out
cld
and
(bad)
std
cmp
jmp
(bad)
cmp
ret
out
xchg
add
(bad)
jmp
sbb
xchg
cmps
sbb
ins
mov
(bad)
adc
jns
cmp
sub
rcl
sbb
out
sbb
xchg
cmps
mov
and
lods
jnp
xchg
push
ins
add
hlt
cli
sub
leave
(bad)
ss
out
adc
sub
jecxz
sbb
(bad)
out
sub
loope
or
inc
sbb
cld
cmp
lods
jnp
mov
add
jmp
sbb
out
adc
imul
sbb
ins
add
out
loope
sbb
shl
xchg
xor
and
push
push
ret
pop
fld
daa
push
(bad)
das
adc
mul
adc
jmp
jecxz
sbb
adc
div
or
sti
cmp
int3
test
jecxz
sbb
fsubp
and
stc
sti
cmp
int3
test
jecxz
sbb
shl
sub
idiv
xor
shr
fsqrt
and
lods
jnp
mov
or
iret
out
cmp
enter
into
idiv
xchg
push
ins
sbb
enter
lods
jnp
xchg
push
ins
or
fdivr
sbb
ficom
mov
enter
sar
pop
lods
jnp
xchg
push
ins
cmps
cs
mov
xchg
cmp
jl
sub
jl
jnp
xchg
push
ins
dec
jl
xchg
cmps
lock
ins
mov
lods
xchg
dec
xchg
jge
mov
enter
lods
jnp
xchg
push
ins
(bad)
loopne
mov
or
fcom
dec
or
(bad)
xchg
ins
lds
test
cmp
aaa
cmp
in
icebp
ins
clc
and
dec
(bad)
xchg
gs
adc
test
and
(bad)
ja
xchg
mov
dec
imul
add
ds
faddp
cmp
aad
fistp
pop
dec
or
adc
mov
xchg
sub
in
xlat
push
into
cmp
sub
cmps
inc
xchg
mov
(bad)
pop
xchg
hlt
jge
push
ins
mov
daa
ss
test
mov
movs
push
mov
inc
cmc
and
ja
scas
icebp
mov
data16
and
dec
outs
cmp
out
mov
dec
cmp
cwde
dec
addr16
pop
adc
jnp
jns
jns
mov
adc
clc
mov
inc
ret
cmps
ja
les
les
pop
fbstp
repz
jl
xchg
dec
xchg
xor
sub
adc
adc
fidivr
cmps
mov
lods
xchg
dec
xchg
push
jnp
sub
mov
jl
jnp
(bad)
push
ins
dec
jl
xchg
cmps
rcr
jl
xchg
dec
xchg
xchg
bound
jl
cmps
adc
jl
jnp
xchg
push
ins
dec
jl
xchg
or
neg
jmp
pusha
xor
or
adc
jae
jmp
mov
in
mov
(bad)
xchg
xchg
dec
rol
and
les
add
scas
mov
xor
out
push
cmp
fldcw
xchg
mov
xchg
pop
adc
mov
stos
mov
pop
mov
mov
test
ins
sbb
div
in
repz
call
adc
fstp
neg
cmps
neg
in
loopne
jb
push
out
add
retf
sbb
mov
test
scas
sahf
rol
and
pop
sbb
cmp
cmp
in
aam
jns
outs
adc
jg
pop
mov
imul
sar
in
sub
jge
xchg
or
cmp
fisub
and
inc
lds
lahf
sub
xor
push
test
add
push
inc
in
dec
xchg
adc
sub
xchg
(bad)
lock
rcl
inc
sbb
push
das
push
push
in
in
mov
ret
js
jg
daa
jl
mov
xlat
xchg
jne
jno
mov
dec
test
stos
je
fsub
lea
mov
sub
sbb
push
mov
ja
jl
add
addr16
pop
xchg
pop
mov
push
mov
nop
or
cmp
repz
dec
retf
dec
or
adc
dec
inc
sbb
xor
dec
sbb
retf
xor
mov
fmul
push
mov
dec
jbe
imul
sub
push
(bad)
ins
adc
(bad)
popf
add
scas
jnp
in
lock
mov
(bad)
loope
pop
xor
inc
sub
into
push
xchg
cmp
adc
addr16
jg
cdq
data16
inc
mov
rcr
repnz
xor
iret
or
(bad)
movs
inc
retf
pusha
mov
dec
loopne
mov
push
jne
xchg
xchg
xor
fiadd
push
push
or
aam
stos
imul
mul
push
jnp
mov
jecxz
cmp
popa
movs
(bad)
mov
jle
and
jns
and
pop
stc
mov
push
arpl
leave
dec
jmp
scas
lods
jg
mov
xchg
dec
dec
mov
xchg
mov
fwait
test
jp
fistp
cmp
mov
jl
push
cmp
xchg
es
jp
adc
adc
mov
stos
mov
pop
mov
sub
and
mov
stos
call
mov
cld
mov
and
test
rcr
sbb
push
mov
pop
outs
xchg
pop
jo
out
jmp
jmp
adc
bound
sub
inc
shr
ins
xchg
in
scas
dec
adc
jbe
xor
stos
in
jmp
(bad)
cmp
nop
and
je
(bad)
mov
cmp
movs
jae
ret
syscall
dec
ss
push
loope
(bad)
fisub
jl
daa
fsub
mov
pop
retf
dec
in
push
push
(bad)
sti
add
dec
cmp
push
and
nop
pop
or
pop
xchg
cs
mov
jle
ret
pushf
sbb
and
(bad)
div
mov
xor
(bad)
movs
inc
jnp
dec
in
es
xor
xchg
pushf
out
xchg
and
lock
adc
xor
inc
std
push
mov
mov
aaa
inc
test
sub
sub
adc
adc
add
(bad)
sbb
xchg
stc
pusha
leave
add
stc
lahf
mov
pop
aas
arpl
add
int3
stos
sbb
xchg
test
movs
push
mov
jns
jno
cdq
mov
jp
jne
ret
bound
jge
movs
out
aad
sub
rcr
sub
daa
repz
lods
movs
cmp
or
sub
xlat
scas
and
test
dec
dec
bts
xor
sahf
cmp
mov
jg
mov
or
dec
fadd
xchg
mov
retf
mov
pop
mov
das
push
fwait
sub
push
test
in
xchg
mov
jmp
add
and
xor
popf
pop
mov
adc
pop
fist
and
pusha
jae
ss
cdq
xchg
arpl
push
inc
daa
xchg
push
sub
mov
aam
mov
add
mov
fdiv
mov
daa
cld
jmp
popa
pop
js
push
movs
mov
stc
lds
xchg
dec
test
jo
jmp
mov
pop
movs
and
mov
push
xor
pop
retf
repz
or
add
jle
xor
pop
out
pop
fdiv
fsubr
aas
push
fild
and
pop
lea
rol
add
push
movs
leave
outs
or
push
adc
xor
mov
scas
repz
jp
jns
xchg
mov
dec
(bad)
or
sub
cmp
xchg
data16
cli
into
or
pop
lds
dec
inc
(bad)
jmp
(bad)
adc
rcl
push
mov
dec
xchg
adc
xor
and
xchg
xchg
mov
ror
xchg
xlat
out
push
jmp
mov
ret
xor
hlt
and
test
stos
or
push
dec
jmp
xchg
int
cmp
mov
mov
pop
jp
xchg
adc
and
xchg
sbb
and
sub
dec
lahf
dec
(bad)
or
clc
mov
mov
jge
inc
dec
fisubr
loopne
pop
push
pop
(bad)
xchg
nop
outs
fdiv
jp
mov
push
and
sbb
cmp
dec
aam
scas
cmp
and
push
pop
in
fiadd
ret
loope
jg
push
cmp
sub
pop
lock
inc
xchg
outs
push
sub
bound
and
sbb
fimul
pusha
pop
mov
push
retf
mov
dec
mov
cli
dec
cmc
jg
dec
int
ret
nop
loopne
pop
sub
in
movs
mov
mov
dec
or
sar
loope
add
fiadd
inc
jnp
dec
js
outs
ret
sub
mov
mov
xchg
out
add
cmp
bnd
cmp
in
aaa
xor
xchg
(bad)
(bad)
rcr
pop
inc
xor
imul
ret
hlt
mov
fistp
test
(bad)
add
call
mov
shl
jns
aaa
push
loope
and
adc
mov
test
clc
mov
out
mov
pop
scas
and
mov
fist
xchg
(bad)
frstor
pusha
out
pop
cmp
mov
push
sub
icebp
xlat
je
in
test
scas
push
xor
dec
push
js
cdq
dec
or
mov
xchg
mov
sahf
xchg
cmp
sub
es
push
pop
test
jp
aas
dec
cwde
sub
shl
ins
dec
lods
mov
pop
or
cs
daa
and
sub
sbb
xor
popf
pushf
fisttp
push
sbb
xchg
adc
and
cdq
pusha
bound
out
dec
fsubr
adc
ja
addr16
or
add
outs
bound
rol
out
mov
retf
cwde
push
ss
out
repnz
repnz
mov
cmp
xor
ja
xchg
mov
leave
push
or
loope
dec
out
mov
lds
gs
and
adc
xchg
sub
push
xchg
push
leave
iret
or
push
pushf
sbb
repnz
into
mov
(bad)
fs
(bad)
or
mov
cdq
lds
or
jno
jmp
fwait
push
aas
mov
mov
movs
jp
int
mov
fst
aaa
(bad)
pop
stos
leave
lods
ja
out
mov
cmp
gs
stos
and
ja
cmc
std
or
(bad)
fcmovu
pop
push
clc
sub
pop
fcomp
je
sbb
bound
jmp
cs
xchg
aas
enter
mov
sub
sub
test
ds
pop
cld
fucomp
push
test
(bad)
aam
popf
out
mov
mov
dec
test
jl
dec
jns
outs
ret
jo
arpl
sbb
jno
sub
inc
fs
add
cmp
push
xor
sbb
enter
push
mov
xlat
add
js
push
(bad)
sub
leave
dec
in
or
(bad)
stc
add
dec
cmp
dec
and
pop
pop
int
or
xchg
repz
imul
cmc
mov
push
inc
std
mov
xor
jns
inc
jecxz
and
push
mov
push
pop
daa
movs
iret
and
and
inc
sub
push
dec
mov
addr16
in
jmp
mov
into
dec
stc
call
cmc
outs
(bad)
mov
mov
aad
inc
inc
mov
sbb
les
xchg
nop
cmp
dec
test
test
pop
inc
cmps
adc
xor
sub
push
inc
retf
xor
das
push
pop
scas
jl
sbb
retf
repz
xchg
sbb
push
pop
jbe
adc
popf
fs
imul
mov
xor
and
(bad)
jmp
enter
push
movs
xor
adc
cwde
jp
ja
mov
jns
stos
mov
clc
fsubrp
xchg
xor
cmp
xchg
int
imul
jp
cmp
push
loope
or
and
ja
jmp
xor
push
adc
ror
dec
mov
fwait
sbb
sub
sbb
adc
cmps
push
dec
sbb
add
inc
push
xchg
xlat
out
mov
rol
mov
dec
mov
jl
jno
xchg
xor
outs
pop
loope
movs
or
addr16
xchg
mov
sub
cmp
and
mov
dec
xor
add
add
sbb
inc
xor
pop
ins
mov
ins
sub
dec
dec
mov
mov
adc
mov
movs
int
cmps
(bad)
es
lds
jp
and
push
neg
fs
aad
je
mov
and
mov
cmps
inc
in
stos
fist
xchg
fld
loopne
jle
sub
(bad)
mov
loop
lock
cmp
jmp
test
les
push
xchg
mov
cdq
(bad)
out
mov
adc
inc
aas
ret
dec
cmp
and
or
dec
pop
ret
mov
mov
into
jo
pop
ret
dec
push
xor
outs
jb
call
or
lods
(bad)
ret
lahf
mov
(bad)
dec
rcl
jns
in
pop
and
pop
mov
push
fsubr
xchg
jb
jecxz
bound
rdtsc
jnp
(bad)
xor
add
dec
jae
jmp
mov
xchg
add
shl
jb
lock
add
test
jp
int
mov
sbb
push
stos
js
enter
xchg
fcmovnb
sub
stos
rol
dec
jno
mov
std
mov
cld
push
call
iret
sbb
outs
dec
sbb
jecxz
mov
xchg
cmps
pop
std
dec
and
hlt
fsub
lods
mov
add
ret
mov
leave
mov
cmps
jle
shl
cmp
push
cmp
jnp
repz
pusha
jmp
loopne
inc
(bad)
lahf
or
jmp
or
loopne
ja
jmp
movups
rcl
dec
mov
adc
adc
pop
fld
sbb
adc
repz
add
inc
push
xchg
xlat
out
mov
jle
jae
mov
xor
cmp
scas
icebp
xor
mov
outs
out
fisttp
sub
stos
xor
in
mov
scas
inc
sti
push
in
fimul
cwde
cld
xlat
mov
pusha
fs
and
adc
xchg
inc
fcom
retf
inc
xchg
add
push
pushf
adc
popf
mov
jae
inc
into
lahf
ret
mov
jno
or
mov
std
push
jg
call
push
aas
jbe
mov
repnz
loope
fsub
ss
test
push
mov
stos
mov
out
mov
leave
jecxz
add
cld
cli
adc
push
hlt
pop
or
sub
fstp
push
idiv
push
loope
jae
sbb
popa
cs
retf
or
int3
rcl
sub
movs
push
pop
sbb
test
mov
sbb
jmp
pushf
outs
mov
(bad)
mov
nop
fidivr
inc
ret
sub
jmp
pop
pop
arpl
xchg
lahf
inc
in
add
out
add
leave
sbb
enter
div
fwait
mov
icebp
fist
js
inc
fcmovnbe
sub
int
ret
or
clc
(bad)
cmp
dec
retf
dec
shl
and
pop
pop
std
iret
or
xchg
repnz
mov
and
inc
icebp
hlt
aaa
pusha
push
fdivr
mov
xor
js
jecxz
rcl
movs
and
mov
call
xor
add
rcr
push
dec
call
in
clc
aad
retf
cmc
out
(bad)
inc
int3
or
rol
pushf
sbb
movs
xchg
(bad)
cmp
xchg
jne
jno
mov
lahf
inc
or
dec
pop
inc
fcmovnbe
out
jnp
jo
xchg
mov
adc
xor
mov
jns
jmp
cdq
ret
adc
jne
ret
sahf
mov
xchg
dec
adc
cmp
xchg
sub
repz
lods
cmps
xor
nop
sub
push
cmp
jp
(bad)
xor
push
add
dec
jb
jmp
enter
and
add
add
call
rcl
int3
jns
inc
jg
retf
in
push
pop
stos
test
pop
rcr
and
out
test
in
fs
stos
mov
(bad)
pushf
pop
out
pop
loope
add
push
and
popa
je
aaa
in
pop
xchg
arpl
daa
xor
sbb
jge
sbb
add
push
sub
icebp
mov
fst
std
ja
out
sub
push
mov
lods
cli
dec
fidivr
dec
xor
(bad)
jae
cmp
adc
stc
cs
cmp
dec
and
mov
push
data16
mov
fwait
retf
mov
push
mov
add
push
add
dec
pop
jmp
mov
rcl
adc
fst
ins
and
pop
add
imul
xchg
cdq
popa
ds
mov
or
jl
cli
push
mov
push
(bad)
xor
mov
fwait
out
fisub
daa
out
outs
push
arpl
test
xor
test
cmp
retf
xor
neg
ret
xchg
push
fld
sub
shr
ror
(bad)
sbb
test
jp
cmp
and
dec
popf
mov
mov
xor
mov
clc
ror
adc
lahf
jl
jno
jae
mov
or
lds
mov
cmp
loopne
dec
jnp
cmps
aaa
(bad)
aad
sbb
cmp
lods
mov
aas
cmc
push
fidiv
sbb
xchg
push
in
gs
xor
leave
jne
push
push
(bad)
dec
mov
rcr
je
sbb
cli
pop
inc
sub
fdivr
mov
iret
call
into
retf
pop
jnp
ds
inc
jmp
xchg
enter
lods
aad
dec
jae
mov
(bad)
mov
fistp
rol
xchg
jbe
sbb
cmp
jecxz
sbb
in
add
or
sub
jecxz
imul
iret
add
inc
push
dec
mov
mov
stos
sub
mov
cmp
mov
dec
cmc
mov
(bad)
in
and
sub
mov
sti
add
jmp
loopne
pusha
or
xor
pop
loop
jp
push
dec
call
adc
sbb
dec
rcl
mov
das
push
sbb
ret
inc
mul
add
icebp
push
mov
(bad)
and
les
mov
outs
or
adc
xor
ss
sub
movs
frstor
int
jno
data16
xor
pop
mov
lods
dec
add
out
mov
(bad)
sbb
xor
std
cli
into
les
cmc
pop
lds
push
clc
jle
pop
loop
xor
ror
bound
mov
or
jge
sti
cmps
add
push
aas
ins
mov
(bad)
out
xchg
pusha
or
pop
jns
call
cmps
or
into
(bad)
sahf
jnp
jo
xor
sar
xchg
fbstp
dec
jmp
jmp
rcr
sub
mov
mov
(bad)
pop
cmp
loopne
xor
sbb
inc
adc
adc
sbb
and
inc
xchg
mov
add
mov
std
fs
int3
cld
mov
dec
pusha
inc
(bad)
xchg
dec
es
repnz
test
rcr
hlt
movs
in
jae
(bad)
adc
mov
and
push
adc
xchg
cmp
jl
cmps
aaa
(bad)
aad
sbb
outs
pop
sub
mov
adc
xor
xchg
repnz
push
mov
adc
or
jne
push
adc
dec
inc
lahf
in
inc
mov
rcr
in
jg
push
jno
sub
add
neg
add
inc
fcom
and
cmp
inc
add
mov
mov
lahf
call
xor
jae
mov
scas
mov
leave
add
repnz
ficomp
jbe
popf
in
jge
out
shl
xlat
xor
pushf
shr
xor
sub
push
add
or
adc
ins
xor
loopne
jns
push
repz
fsubrp
push
xor
retf
inc
cmp
test
outs
add
push
test
jne
hlt
cld
les
add
outs
lods
ret
fnstenv
sar
lahf
adc
pop
dec
mov
ja
lahf
xor
test
or
lods
rol
cmp
or
xor
ret
dec
jno
jmp
call
jl
hlt
push
stos
out
cdq
mov
test
and
push
jns
retf
js
inc
jle
retf
push
gs
add
les
out
cs
daa
imul
popa
aam
stos
mov
lds
push
add
pop
jmp
cdq
in
cdq
pusha
arpl
jmp
xchg
daa
xchg
movs
inc
sbb
pop
sub
in
add
dec
or
cmp
lahf
cmp
or
xchg
jbe
mov
cld
ja
out
gs
repz
mov
stc
dec
jb
dec
xor
cmp
adc
jno
js
jge
inc
nop
popa
fisttp
imul
add
gs
mov
call
test
add
jle
xchg
int3
dec
shr
jmp
adc
(bad)
mov
cmp
push
cdq
xchg
push
test
xor
sbb
repz
retf
xchg
in
test
out
das
call
in
(bad)
daa
out
les
test
sti
test
jno
inc
cli
adc
fidiv
or
stc
rcr
hlt
loop
push
(bad)
sub
rol
sub
test
lds
or
pop
std
jae
outs
clc
add
inc
jno
imul
loop
movs
pop
jne
shl
in
pop
adc
xchg
mov
mov
lahf
jo
call
dec
pop
shl
hlt
or
icebp
in
cmp
push
nop
sbb
and
sbb
imul
fs
cmp
pop
xor
shr
xchg
(bad)
mov
xchg
int
popf
retf
adc
cmp
mov
pop
mov
add
fld
fdivr
int3
lds
cli
dec
out
mov
pop
mov
sub
xchg
xor
lock
cmc
jne
std
fistp
fcom
mov
leave
adc
fistp
push
clc
cwde
and
jmp
nop
popa
dec
inc
mov
push
in
cli
pop
xchg
and
daa
int
cmp
xchg
and
xor
je
add
add
cmc
dec
cmp
daa
mov
cmp
repz
mov
adc
mov
xor
cli
sbb
cmp
mov
sbb
cmps
jmp
lahf
es
inc
(bad)
xor
popa
nop
push
stos
js
push
push
add
pushf
mov
mov
pop
jmp
cdq
in
cdq
pusha
arpl
push
xchg
daa
xchg
int3
movs
inc
sbb
and
ret
out
add
sbb
or
cmp
add
jne
out
repz
and
jp
fwait
test
xor
or
sub
and
inc
fistp
and
push
fstp
fwait
and
shl
sbb
pop
dec
or
inc
mov
jge
xchg
sub
pusha
or
aad
out
pop
js
cdq
clc
or
pop
aad
cmps
pop
out
xor
mov
rcl
xor
cmps
sub
jmp
outs
pop
ret
sub
inc
arpl
dec
lahf
mov
stos
scas
cmps
cmp
enter
xor
inc
sub
ds
adc
cmp
push
test
xchg
and
inc
inc
mov
add
jp
inc
jmp
cmp
in
cld
mov
dec
pop
dec
fcompp
icebp
jge
jb
xchg
nop
xor
and
rcr
push
jmp
fnstsw
les
movs
pop
bound
cmp
loopne
aad
cdq
mov
sbb
and
ins
xchg
icebp
ins
push
xor
leave
xor
push
push
or
in
adc
push
inc
lahf
pop
inc
mov
rcr
jmp
imul
mov
push
cmp
(bad)
cmp
add
xor
sub
outs
inc
sub
(bad)
cmp
std
push
int
mov
out
xor
ins
ror
lods
mov
leave
lahf
sbb
xchg
pop
pop
add
jne
pushf
in
adc
push
sub
dec
sub
fwait
iret
sbb
and
jmp
sbb
sub
inc
push
adc
repnz
push
mov
idiv
dec
fnstsw
xor
leave
jbe
aas
cmp
test
and
bound
cmp
adc
or
pop
ret
lahf
in
(bad)
add
inc
scas
and
adc
sub
push
xchg
aam
inc
xlat
les
adc
imul
mov
jmp
pop
mov
jo
scas
xchg
lahf
addr16
cmp
cmps
call
and
test
mov
imul
sub
sub
cmc
je
imul
jne
mov
add
cmps
js
xchg
add
loope
add
movs
adc
pop
enter
pop
fisttp
xor
xor
(bad)
push
retf
and
mov
(bad)
gs
dec
int
out
push
cmps
cmp
iret
(bad)
cdq
xchg
mov
cmp
pop
mov
push
push
dec
mov
xor
xor
scas
cmp
retf
in
inc
shrd
xchg
loop
adc
and
test
jb
add
dec
arpl
mov
xor
scas
mov
pop
jge
xchg
adc
mov
lahf
adc
add
(bad)
lds
mov
mov
enter
es
dec
loope
shl
retf
bound
xor
shl
test
pusha
(bad)
clc
xchg
sub
sub
outs
xchg
rcl
mov
cs
rcl
adc
movs
and
cli
mov
(bad)
cmps
in
xor
imul
cdq
jno
add
aam
leave
int
cmp
mov
mov
jp
push
popa
mov
inc
das
xchg
xor
std
movs
imul
(bad)
xchg
pop
or
aam
cmps
pop
ja
cwde
imul
ds
mov
cmps
or
pop
outs
jb
cdq
mov
or
repz
out
pop
das
test
and
jmp
or
jl
imul
not
pushf
outs
xchg
inc
mov
push
xor
sub
mov
push
jns
xchg
adc
call
fwait
sti
xchg
iret
jecxz
int3
rol
ret
xor
jl
inc
dec
(bad)
faddp
pop
adc
movs
adc
mov
repnz
mov
call
sub
xchg
in
in
inc
add
pop
fidiv
sahf
loope
mov
pusha
loopne
cli
sbb
mov
push
je
and
call
xchg
sub
sub
popa
cmp
scas
(bad)
xor
adc
pop
lods
add
dec
pop
sbb
mov
xor
add
cmc
fwait
test
std
xlat
(bad)
cmps
xor
out
aad
outs
mov
shl
sahf
sbb
xchg
cs
arpl
lods
sahf
sbb
xchg
pop
enter
pop
xchg
pop
mov
dec
fwait
jmp
(bad)
shr
or
(bad)
cmp
or
mov
aaa
call
(bad)
or
mov
push
(bad)
ins
xor
fbld
mov
and
jl
popf
stos
psllw
xor
inc
pop
sub
inc
loope
mov
retf
mov
or
or
fbld
popf
and
cmps
je
adc
ret
jmp
mov
adc
push
out
sbb
out
cmps
mov
movs
pop
inc
fucomip
push
test
sbb
sahf
sub
add
dec
pushf
shl
aad
jp
outs
les
fistp
mov
in
test
add
and
in
movd
pop
ss
lds
jno
test
push
pop
pop
xor
out
xchg
ret
stos
dec
dec
xchg
clc
into
mov
xor
mov
mov
retf
xchg
xchg
mov
mov
dec
addr16
push
sbb
sbb
xor
lods
xor
shr
ds
test
jmp
fst
jmp
or
jge
imul
mov
pushf
outs
xchg
inc
mov
push
in
sti
pusha
xchg
stos
mov
push
jns
push
adc
fwait
dec
or
pop
cld
xchg
mov
lahf
mov
jle
les
xor
hlt
call
sbb
cmp
data16
jb
outs
xor
adc
xor
inc
int3
lock
xor
lahf
repz
adc
sar
xlat
and
xor
push
xor
and
call
or
cmc
pop
jns
imul
arpl
fucomip
xor
jbe
call
es
stos
outs
jnp
pushf
stos
push
js
xchg
mov
adc
mov
test
retf
dec
push
mov
in
push
and
pushf
and
ret
daa
pop
div
xlat
push
xchg
leave
add
outs
xlat
adc
imul
mov
xor
dec
jg
pop
adc
gs
xchg
sti
inc
xchg
cmp
cmps
cdq
pop
inc
clc
cmp
jne
push
iret
sub
sbb
mov
inc
mov
movs
ins
inc
shl
xchg
ja
dec
add
movs
cmp
jne
lods
mov
aas
sbb
adc
movs
pop
(bad)
xor
xor
mov
retf
cmp
mov
int3
je
add
out
maxps
(bad)
jle
mov
pop
push
add
push
cmp
pusha
dec
xor
aad
sahf
cmp
inc
outs
bound
and
pushf
adc
xchg
pop
test
sub
pop
(bad)
adc
fs
cmps
lahf
jno
inc
mov
push
xor
sub
ds
sahf
dec
xchg
xchg
mov
call
sbb
inc
test
jae
(bad)
mov
mov
mov
loop
dec
sbb
iret
ror
popa
sbb
add
test
adc
mov
lahf
xchg
sub
xchg
mov
call
fdiv
mov
fs
push
and
push
pop
and
fisub
frstor
aad
retf
call
adc
xor
imul
sbb
mov
cmp
aam
adc
popa
sbb
inc
mov
movs
cs
std
jl
jno
xor
sbb
ficom
and
ds
(bad)
aam
and
lods
lock
inc
lods
pop
test
subps
or
mov
pop
push
xor
pop
out
jg
icebp
aam
imul
loopne
jo
test
movs
add
call
mov
into
into
inc
les
sbb
xor
dec
pop
shl
mov
mov
div
sbb
int
hlt
mov
(bad)
adc
xchg
dec
popa
xor
fadd
in
(bad)
repz
into
pop
sbb
mov
(bad)
lock
or
push
adc
mov
adc
dec
push
jmp
push
int
xchg
shl
mov
xchg
push
out
or
mov
push
or
push
stos
stos
sub
test
ins
in
xchg
pop
and
dec
sub
ret
cmp
or
fisub
pop
push
mov
ins
add
mov
out
and
dec
rcl
push
(bad)
fsub
lods
imul
and
mov
mov
inc
push
and
mov
xor
push
push
repz
inc
jp
int
stc
sbb
ss
push
ds
scas
xor
lahf
cmp
inc
outs
arpl
addr16
pop
adc
push
push
std
addr16
cmp
outs
and
test
jno
dec
mov
push
icebp
xchg
arpl
hlt
aas
es
rcl
(bad)
retf
push
aaa
sub
pusha
arpl
inc
fisub
cmc
mov
jp
inc
das
pop
jl
sbb
push
std
(bad)
mov
push
mov
loopne
pop
inc
sbb
push
sub
sbb
mov
and
add
jne
hlt
dec
pushf
icebp
add
push
sub
jo
mov
in
out
add
lock
(bad)
jle
and
pop
push
jge
(bad)
mov
sub
mov
pusha
aas
mov
test
push
rcl
out
clc
popa
ret
test
fmul
dec
inc
mov
and
jge
sbb
pop
retf
ret
imul
ja
mov
dec
data16
scas
sbb
cmp
xor
pop
dec
sar
stos
outs
cmp
fwait
pusha
mov
fs
xchg
pop
jmp
rcr
jl
sbb
out
movs
imul
mov
pushf
in
xchg
inc
xchg
scas
push
sub
pop
cmp
sub
js
dec
bts
xor
lahf
cmp
imul
cdq
cmp
push
or
jns
outs
ror
inc
dec
dec
out
int
call
in
sub
retf
lock
xor
cmp
loopne
repz
pop
(bad)
dec
cmovs
cmp
fsub
xor
and
imul
lods
mov
inc
pop
lea
(bad)
das
js
lds
inc
dec
inc
jo
call
ficom
mov
int3
cdq
cmp
jbe
out
stos
adc
outs
jp
fwait
test
mov
leave
sub
(bad)
addr16
mov
in
fisub
sahf
dec
cmp
sub
pop
mov
jl
add
sub
rcl
push
sub
add
mov
fisubr
sub
sahf
shr
lock
xchg
mov
mov
jmp
mov
clc
and
cmp
leave
and
(bad)
(bad)
mov
hlt
push
test
mov
sbb
(bad)
fld
pushf
push
add
leave
push
jecxz
ins
lock
in
(bad)
xor
leave
(bad)
call
mov
addr16
and
mov
sbb
pop
retf
lea
mov
sahf
pop
(bad)
cmp
mov
xchg
mov
popa
sub
jne
inc
shl
mov
mov
mov
outs
test
nop
add
lock
fcom
jbe
out
fs
jnp
jno
mov
sar
rcl
push
dec
data16
ret
out
or
sub
inc
nop
popa
fmul
push
mov
imul
push
sbb
(bad)
or
xchg
pop
mov
push
aad
out
push
pop
stos
cmp
ror
pushf
xchg
jb
sti
jg
mov
fidiv
test
leave
jp
shr
popa
xchg
lds
lods
inc
adc
and
mov
jbe
nop
scas
ja
fucomi
or
mov
xor
clc
ss
sbb
and
retf
icebp
stc
rcr
jl
daa
(bad)
mov
pop
retf
data16
dec
mov
cli
dec
test
imul
loop
movs
pop
cld
mov
je
fwait
cmp
movhps
frstor
div
inc
repz
pop
lea
dec
add
and
in
sbb
adc
add
ins
pushf
inc
pusha
lods
std
(bad)
in
add
jle
es
out
out
xor
and
shl
or
xchg
inc
mov
sti
out
je
dec
fcom
es
ds
and
jae
repnz
test
xchg
daa
ss
jnp
into
mov
push
outs
aas
nop
xor
ss
repnz
ffree
int3
xchg
jno
pushw
aad
mov
daa
lods
cmps
dec
pop
mov
std
mov
ficomp
pop
into
and
push
pop
and
arpl
(bad)
dec
shl
int3
imul
dec
sub
push
(bad)
mov
ja
pop
pop
sbb
stc
dec
aas
mov
mov
cli
outs
adc
jnp
jno
or
call
scas
xchg
add
leave
adc
pop
push
jmp
sub
out
jns
sbb
rcl
adc
rcl
fwait
inc
jb
pushf
cs
test
scas
ror
cmc
mov
fdiv
push
jmp
(bad)
cmp
dec
mov
jle
dec
(bad)
xchg
push
xor
loop
out
or
and
sbb
xchg
movs
dec
jmp
pop
das
hlt
or
xchg
push
daa
mul
add
jno
xor
cmp
add
cdq
add
and
outs
mov
outs
sub
dec
or
mov
sub
mov
or
aam
out
pop
js
cdq
clc
or
pop
aad
cmps
pop
in
xor
cmp
mov
aaa
nop
dec
xor
sub
jmp
outs
pop
ret
sub
inc
arpl
dec
lahf
mov
stos
ss
or
push
lahf
ja
out
or
repnz
fidivr
in
pop
fisttp
adc
or
ffreep
add
jb
ret
cmp
(bad)
lods
mov
inc
or
or
xor
push
push
icebp
shl
inc
js
retf
enter
je
pop
mov
jb
lds
fnstsw
les
movs
pop
bound
cmp
fbld
jnp
sub
aas
cmc
out
scas
test
hlt
setb
shl
cmp
xor
push
push
or
in
adc
push
inc
sahf
loope
ds
add
push
repnz
test
xchg
daa
ss
jl
iret
jnp
inc
sbb
push
retf
ffree
int
jno
pushw
aad
mov
sub
mov
(bad)
mov
ficomp
rol
inc
retf
sbb
bound
je
arpl
cmp
or
dec
sub
fwait
iret
sbb
and
call
sbb
sub
(bad)
fist
add
repnz
mov
mov
dec
fnstsw
xor
leave
jne
aas
cmp
(bad)
cld
xor
add
dec
sub
arpl
push
int
out
rsqrtps
sub
rcl
repnz
xchg
sbb
(bad)
popf
lahf
cwde
das
in
into
and
jbe
loope
pop
sub
and
and
stc
mov
mov
ss
(bad)
cmp
push
and
mov
jnp
repz
js
xchg
ja
push
jge
retf
inc
fs
leave
and
std
xor
leave
(bad)
ins
dec
fldenv
xchg
ret
mov
and
sar
dec
outs
adc
(bad)
xchg
jmp
inc
add
push
xchg
xchg
cmp
mov
sahf
mov
jne
fmul
mov
test
xlat
or
pop
pop
jae
outs
push
mov
aas
cmp
mov
shr
or
jbe
mov
es
call
pop
lea
dec
cs
lds
cmp
sbb
(bad)
pop
adc
(bad)
ja
inc
and
sbb
xchg
push
add
ins
dec
lea
cmp
push
cmp
(bad)
push
stos
rcr
cli
retf
jb
fnstsw
sub
cld
pop
imul
icebp
mov
pusha
adc
sub
mov
stos
inc
icebp
ins
scas
jecxz
pusha
cdq
fimul
(bad)
in
adc
inc
push
xor
mov
bound
clc
test
or
push
rcr
repz
push
fst
sub
iret
inc
les
sub
neg
int
cmc
push
ret
(bad)
pop
or
ror
movs
pop
je
xchg
hlt
jmp
adc
mov
std
fdiv
div
adc
jo
xor
inc
add
and
xchg
imul
pop
shl
into
pop
sbb
bound
std
popf
imul
xor
js
adc
out
in
xchg
mov
iret
dec
mov
xlat
mov
mul
outs
xlat
cmp
or
fisttp
cld
(bad)
push
dec
ret
hlt
mov
fisttp
add
pop
cmp
fstp
retf
les
out
mov
pop
dec
cwde
sub
clc
test
nop
mov
hlt
jmp
(bad)
ficomp
mov
pop
(bad)
not
fidiv
pop
jae
in
and
lods
or
push
sub
out
push
stc
loopne
mov
ins
add
inc
enter
mov
aad
jg
lods
cmp
jne
ds
jbe
mov
adc
mov
fs
shl
dec
add
jle
cs
inc
jb
mov
das
(bad)
sub
xor
push
stos
fwait
adc
dec
xchg
pop
jb
icebp
in
cdq
nop
bound
cmps
add
retf
mov
das
pop
jl
ret
add
daa
sbb
push
or
imul
movs
dec
stos
repz
mov
das
mov
jb
cmp
sbb
jge
hlt
enter
test
mov
and
add
fs
ins
dec
lea
xchg
or
cmp
cmp
dec
int3
mov
or
push
sub
mov
xor
dec
adc
push
mov
loopne
add
cdq
mov
push
out
scas
ins
shl
push
lahf
push
outs
in
outs
loop
cmps
scas
add
jnp
and
jmp
mov
daa
pop
xor
jmp
iret
rcl
stc
in
jb
dec
(bad)
punpckhbw
or
add
rol
scas
jno
xor
cmp
add
and
cwde
inc
or
pop
popf
push
mov
shl
in
push
icebp
enter
ret
outs
xchg
fs
sub
jb
les
lods
fdiv
ret
jg
mov
cmp
cwde
movs
ffreep
aam
sbb
cmps
ds
push
(bad)
xchg
das
cmp
imul
xor
add
in
adc
inc
add
imul
lods
icebp
pushf
rol
(bad)
add
pop
into
jp
inc
sbb
add
push
int3
leave
popf
dec
fadd
sub
aam
dec
jb
mov
(bad)
mov
std
pop
push
fiadd
(bad)
xor
sbb
je
push
jne
and
fwait
bound
cmp
or
cmps
dec
pop
aaa
call
inc
jg
sbb
or
cwde
mov
ficom
(bad)
jns
icebp
addr16
neg
jmp
xor
dec
jne
dec
aaa
int
loope
bound
xchg
sti
xor
and
xchg
arpl
dec
jge
sbb
bound
addr16
mov
popf
nop
xchg
out
push
push
xchg
cmp
sub
adc
lods
ds
scas
xchg
cs
int
cwde
jne
std
sbb
nop
(bad)
loopne
pop
sub
and
inc
hlt
clc
cmp
retf
mov
add
cld
jo
mov
cmc
xor
cmps
cmp
fisttp
sub
leave
pop
push
lods
je
mov
add
movs
cmp
cld
shl
mov
or
out
pop
(bad)
xor
xor
mov
add
je
lea
jbe
outs
retf
xchg
out
aam
shr
sti
icebp
popa
sbb
mov
icebp
mov
jae
or
dec
or
sub
jb
jmp
fstp
cs
add
outs
mov
inc
cmp
fbstp
fstp
mov
jl
lods
adc
sahf
dec
xchg
xchg
mov
call
sbb
inc
test
jae
(bad)
mov
mov
inc
push
loopne
jg
lds
iret
ror
popa
pop
xor
push
cmc
test
adc
mov
lahf
xchg
sub
xchg
mov
call
in
pusha
cli
jp
add
and
xchg
sub
iret
adc
pop
std
sahf
and
mov
mov
push
mov
and
xchg
jb
mov
xlat
mov
mul
jo
cmp
enter
cld
mov
repz
add
clc
sahf
mov
sbb
ficom
and
cmp
(bad)
lods
jns
sub
xor
cmp
pop
mov
sbb
pop
or
mov
pop
add
jg
lock
sub
clc
pop
or
push
call
mov
dec
stc
jmp
fimul
push
and
or
aad
and
sar
mov
test
cmp
dec
xchg
ror
retf
pop
adc
sti
int
movs
adc
jnp
adc
mov
and
stos
ins
icebp
sbb
mov
imul
inc
(bad)
call
popf
loope
mov
out
fild
out
and
sub
push
and
call
dec
mov
rol
sbb
pop
dec
movs
pusha
dec
mov
std
sub
ja
inc
call
bound
cli
rol
xchg
dec
addr16
xchg
(bad)
int
inc
pop
rcr
push
xor
and
je
mov
bound
pop
push
push
(bad)
popf
sbb
nop
push
pop
add
adc
bound
repz
or
cmps
inc
sub
call
xor
jle
sbb
mov
sub
xchg
ret
mov
or
sub
push
mov
scas
mov
fstp
dec
xor
test
ss
pushf
test
call
jg
dec
xchg
jp
dec
es
pop
popa
mov
fsub
mov
pop
retf
dec
out
push
push
(bad)
sti
add
xchg
xor
sub
movs
push
sbb
push
in
movs
mov
test
jmp
sub
sbb
mov
and
add
std
cmp
in
mov
aam
cs
fidiv
sbb
in
out
add
lock
(bad)
jle
and
lahf
xchg
add
mov
xor
xor
xchg
inc
xor
sbb
mov
imul
cmc
mov
add
or
adc
push
gs
jecxz
mov
div
sbb
mov
xlat
and
outs
fdiv
sbb
ret
cmc
or
repz
cmp
xchg
pop
jmp
rcr
jl
sbb
out
movs
push
data16
mov
fwait
jne
retf
sbb
fsubr
mov
push
js
dec
bts
xor
sahf
cmp
mov
pop
repnz
or
dec
fadd
xchg
mov
retf
mov
pop
mov
das
push
fwait
sub
push
test
in
xchg
inc
xchg
mov
add
and
xor
popf
pop
mov
adc
pop
fist
and
pusha
jae
ss
call
mov
loopne
in
push
pusha
les
xchg
inc
dec
inc
jo
call
ficom
mov
int3
cdq
cmp
jbe
outs
inc
xor
xlat
cmc
add
inc
btc
daa
mov
cmps
pop
in
lds
push
mov
in
bound
mov
test
sti
dec
jecxz
lods
sub
fmul
push
jno
xchg
push
sti
or
pop
outs
fidiv
adc
or
jae
or
mov
(bad)
imul
xchg
(bad)
js
ins
push
aaa
mov
sub
repz
addr16
jae
lods
dec
add
sbb
mov
je
stc
xchg
(bad)
mov
pop
stc
jg
pop
jecxz
xor
aam
retf
mov
cld
arpl
dec
retf
jae
add
pop
in
inc
pop
inc
push
fld
pusha
jp
fwait
cli
icebp
inc
sbb
mov
je
pushf
mov
jge
jae
or
fnstsw
les
jno
les
sub
push
outs
mov
aas
cmp
mov
xchg
icebp
xchg
je
in
fs
push
xor
adc
dec
sete
cdq
shl
mov
mov
jb
outs
mov
mov
neg
pop
cmp
ror
cmps
pop
xor
mov
jmp
xchg
mov
xor
jb
sar
pop
icebp
mov
xchg
daa
adc
sbb
into
cld
sbb
mov
and
mov
sub
cmp
or
mov
xchg
dec
int
and
cmp
mov
jns
mov
repnz
mov
xor
dec
jbe
dec
cmp
leave
stos
xor
dec
jmp
mov
shl
push
mov
push
test
hlt
mov
rcl
sub
xchg
xchg
xchg
or
add
pop
lea
push
sahf
out
jle
lock
pop
pandn
lods
or
mov
cmp
xor
or
pop
movs
push
jg
inc
push
adc
outs
xor
push
mov
xor
movs
ss
push
mov
jns
xchg
mov
dec
fucomip
push
xor
xchg
inc
cmp
xchg
data16
xor
cmc
std
lds
dec
inc
cs
(bad)
xor
shr
dec
mov
adc
js
sub
xchg
cmps
shr
ror
cmps
pop
inc
loope
push
xchg
pop
sbb
mov
sbb
mov
std
daa
push
lahf
ret
push
hlt
mov
(bad)
mov
loope
movs
or
je
mov
jmp
adc
sub
enter
cwde
inc
and
sbb
and
sub
dec
lahf
ins
or
dec
clc
mov
mov
and
fisubr
test
push
and
xchg
xchg
nop
daa
fnstsw
(bad)
pop
mov
push
and
and
(bad)
(bad)
jmp
add
ins
outs
je
jb
push
imul
xor
add
sbb
add
pop
push
add
movs
or
add
add
add
add
add
push
outs
gs
add
pop
dec
add
add
add
outs
add
add
je
push
add
imul
adc
add
add
add
add
sbb
add
popa
outs
fs
push
cmp
sbb
add
add
add
add
add
add
fs
add
add
push
fwait
or
or
add
add
add
add
add
addr16
jb
gs
adc
or
adc
add
inc
pop
add
add
outs
outs
outs
outs
je
add
add
mov
mov
add
and
add
pop
or
inc
gs
outs
je
gs
add
add
or
add
sub
inc
add
add
adc
inc
ins
jb
push
imul
add
add
dec
jb
jo
outs
addr16
data16
add
dec
or
push
adc
inc
cmp
add
or
add
jb
outs
jne
add
add
push
(bad)
add
sbb
dec
jb
popa
outs
imul
jae
gs
gs
jae
outs
jae
adc
add
add
or
push
imul
ins
xor
pop
add
add
add
push
add
add
push
push
add
add
add
or
push
gs
imul
ror
xchg
adc
add
add
lods
dec
add
lods
dec
add
inc
add
(bad)
(bad)
inc
add
add
lods
dec
add
add
add
lods
dec
add
lods
dec
add
lods
dec
add
add
add
add
add
pushf
sbb
(bad)
(bad)
(bad)
inc
add
add
add
and
dec
add
lods
dec
add
add
add
add
add
add
or
inc
add
(bad)
(bad)
inc
add
add
lods
dec
add
add
add
lods
dec
add
lods
dec
add
lods
dec
add
add
add
add
add
dec
and
add
(bad)
(bad)
inc
add
add
lods
dec
add
(bad)
(bad)
inc
add
add
es
add
and
dec
add
es
add
inc
add
xchg
dec
add
es
add
add
xchg
dec
add
es
add
dec
add
es
add
sub
call
es
add
sub
in
xchg
dec
add
es
add
sub
lock
dec
add
es
add
sub
hlt
xchg
dec
add
es
add
sub
clc
xchg
dec
add
es
add
add
xchg
dec
add
jmp
in
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
push
call
push
push
call
mov
call
cmp
je
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
lea
lea
call
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
cmp
jne
jmp
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
lea
push
lea
push
call
push
call
call
jmp
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
cmp
jne
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
fld1
push
push
fstp
fld1
push
push
fstp
fld1
push
push
fstp
fld
push
push
fstp
call
fstp
fld
call
mov
push
call
mov
lea
call
push
call
fstp
lea
mov
mov
lea
push
lea
push
call
lea
push
call
fstp
lea
call
fld
call
fstp
lea
push
call
mov
mov
lea
lea
call
push
push
lea
push
lea
push
call
mov
lea
call
lea
push
lea
push
push
call
add
mov
mov
push
push
push
push
lea
push
call
mov
mov
lea
lea
call
lea
call
push
call
mov
lea
call
push
call
mov
lea
call
fld
push
push
fstp
call
movsx
mov
fild
fstp
push
push
push
lea
push
call
lea
lea
call
push
lea
push
call
lea
lea
call
push
call
mov
mov
mov
lea
lea
call
lea
push
push
call
mov
lea
call
lea
call
push
call
mov
lea
call
fld
call
fstp
call
mov
lea
call
push
lea
push
call
lea
lea
call
lea
call
fld
call
fstp
lea
push
call
lea
lea
call
push
push
lea
push
lea
push
push
lea
push
call
lea
push
call
mov
lea
call
mov
mov
lea
push
lea
push
call
lea
lea
call
lea
call
push
lea
push
call
lea
lea
call
push
call
mov
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
call
movsx
test
je
mov
lea
call
fld
call
fstp
mov
mov
lea
lea
call
lea
mov
mov
lea
push
lea
push
call
mov
lea
call
lea
call
lea
push
call
lea
push
lea
push
call
push
lea
push
call
lea
lea
call
lea
call
lea
call
push
lea
push
call
lea
lea
call
lea
mov
mov
lea
push
call
mov
lea
call
mov
mov
lea
push
lea
push
call
lea
lea
call
lea
call
push
lea
push
call
push
push
call
call
call
mov
fwait
push
jmp
lea
call
lea
call
lea
push
lea
push
push
call
add
ret
lea
push
push
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
sahf
sahf
sahf
sahf
ins
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
mov
or
ret
add
mov
fimul
or
mov
add
push
mov
sbb
add
add
add
pop
add
add
add
add
mov
test
add
mov
mov
or
add
mov
mov
aam
or
lar
sub
or
test
or
or
push
mov
sub
or
mov
mov
adc
add
or
leave
add
sbb
cmp
add
mov
pusha
add
and
and
or
int3
mov
fmul
add
or
repnz
add
or
push
lea
lea
cmp
add
inc
lea
bound
add
bound
add
jo
or
jp
or
sbb
add
mov
add
xchg
lea
and
add
test
or
mov
add
add
push
inc
push
dec
xor
inc
dec
dec
add
add
pop
pop
jbe
popa
push
cmp
js
xor
add
add
dec
arpl
add
add
pop
popa
fs
data16
popa
outs
add
add
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
inc
outs
add
add
pop
popa
fs
imul
xor
add
pop
pop
jbe
popa
push
cmp
outs
add
add
pop
popa
fs
data16
gs
xor
add
pop
pop
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
add
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
fs
imul
xor
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
popa
fs
imul
imul
popa
fs
imul
xor
imul
dec
jae
outs
add
add
pop
pop
jbe
popa
inc
push
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
add
jbe
popa
push
je
inc
ins
jo
add
inc
ins
ins
inc
jne
arpl
outs
inc
popa
ins
ins
add
add
fs
data16
je
outs
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
add
pop
inc
dec
jae
jb
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
add
pop
pop
jbe
popa
inc
js
gs
dec
popa
outs
fs
gs
add
add
jbe
popa
inc
popa
je
push
je
add
add
pop
popa
fs
data16
gs
add
add
pop
popa
fs
imul
ss
add
add
jbe
popa
push
popa
jb
imul
jbe
popa
inc
push
inc
js
gs
imul
pop
pop
jbe
popa
push
je
push
popa
jb
popa
ins
add
add
pop
pop
jbe
popa
inc
popa
je
push
popa
jb
add
add
dec
ins
outs
add
add
pop
pop
jbe
popa
dec
gs
add
add
fs
imul
xor
add
add
fs
imul
xor
imul
jbe
popa
push
je
inc
outs
jo
add
add
pop
popa
fs
imul
xor
add
add
pop
popa
fs
imul
add
pop
pop
jbe
popa
dec
xor
popa
jb
add
add
jbe
popa
push
popa
jb
fs
add
jbe
popa
push
popa
jb
jne
add
add
dec
popa
je
outs
add
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
popa
ins
ins
ins
jne
add
add
dec
je
outs
add
add
pop
inc
dec
gs
add
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
