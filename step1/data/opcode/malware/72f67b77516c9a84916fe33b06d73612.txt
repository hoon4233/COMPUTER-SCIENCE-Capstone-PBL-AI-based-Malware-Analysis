adc
add
add
dec
add
add
add
add
add
add
add
add
push
mov
add
mov
add
add
xor
push
add
add
add
adc
sbb
add
or
add
outs
push
add
or
add
or
outs
adc
add
imul
push
mov
adc
add
fimul
or
or
add
or
push
sub
add
or
add
add
sub
add
jae
add
or
sub
add
add
add
adc
or
add
add
xor
add
add
adc
add
add
sub
add
or
add
or
add
jo
sbb
add
or
sbb
sub
add
or
pop
jb
add
jo
add
add
or
outs
sbb
add
adc
lea
add
add
add
add
add
add
or
fimul
pop
sub
pop
outs
adc
add
(bad)
or
sub
push
outs
adc
add
(bad)
dec
or
add
adc
outs
sbb
push
add
or
pop
add
jo
adc
add
or
pop
add
jo
adc
add
or
add
or
and
add
fiadd
sub
add
add
add
and
sub
or
add
add
add
add
pop
add
gs
add
add
add
add
dec
add
add
add
add
mov
inc
and
jge
mov
add
add
add
add
push
gs
gs
gs
or
and
add
add
add
sbb
leave
jl
pop
int3
fmul
add
jl
pop
int3
fmul
add
jl
pop
int3
fmul
add
shl
mov
pop
jbe
ins
fild
ins
(bad)
ins
(bad)
je
dec
shl
jl
out
(bad)
fistp
mov
sbb
stc
out
mov
lods
push
cmp
or
add
add
loopne
and
clc
call
(bad)
jg
add
add
or
vcmpps
icebp
xchg
pop
cmp
inc
adc
inc
pop
pop
and
pop
and
jns
and
cmp
jp
js
outs
inc
push
adc
add
scas
dec
call
ja
add
add
add
cld
(bad)
ja
lock
adc
cmps
call
push
std
xchg
add
pop
sbb
test
std
sti
stc
das
std
jmp
mov
pmuludq
mov
push
lock
(bad)
repnz
dec
test
imul
jno
(bad)
stos
pop
adc
jg
(bad)
outs
adc
hlt
mov
inc
cmp
repz
sub
out
mov
out
push
pop
scas
jns
rcl
(bad)
test
push
call
cmps
inc
add
add
jmp
les
add
adc
jmp
ins
jecxz
add
add
into
inc
push
ret
jb
pop
add
inc
and
adc
push
les
out
test
les
add
arpl
enter
push
jg
sub
add
clc
pop
enter
outs
xor
adc
pop
loope
dec
or
aaa
hlt
mov
aam
add
pop
jns
scas
add
lods
mov
mov
push
mov
cmp
xchg
jg
cmp
popa
(bad)
cld
pop
sbb
xchg
push
or
jg
adc
pop
pop
push
push
aaa
push
jecxz
sbb
cmp
cmp
mov
(bad)
mov
add
call
jbe
(bad)
mov
pop
fimul
fistp
ja
add
pop
and
jg
es
pop
sub
pop
shl
mov
out
add
jg
inc
inc
sbb
in
pop
ja
mov
fs
retf
jecxz
imul
add
cld
add
fwait
cmp
mov
inc
std
sub
or
call
ss
mov
xor
shl
pop
jns
shl
out
pop
out
pop
jmp
sub
(bad)
imul
pusha
(bad)
enter
sub
and
sub
and
mov
sub
cmps
and
sub
sbb
push
scas
ds
repnz
imul
leave
leave
movs
(bad)
loope
mov
jbe
xchg
push
rcl
test
push
dec
fucomip
sbb
cmp
fcmovnbe
es
test
addr16
dec
cld
aaa
cdq
push
enter
cli
sub
je
aam
mov
mov
dec
pop
sbb
or
sti
mov
dec
fcom
pop
lods
in
or
jp
dec
or
rol
adc
dec
dec
mov
stos
ret
xchg
mov
scas
cmp
fmul
ins
sbb
dec
rol
mov
fcomp
jecxz
test
aam
iret
mov
fimul
push
mov
outs
std
jle
push
(bad)
iret
mov
addr16
mov
rol
nop
push
in
xlat
or
les
out
push
push
sbb
ret
fs
mov
aad
or
(bad)
jmp
cdq
mov
bound
pop
inc
hlt
ins
stc
lock
mov
adc
les
sbb
aam
push
jp
add
sbb
sbb
cmp
push
sub
(bad)
sbb
fistp
pusha
outs
add
mov
ins
mov
ret
xor
xor
in
mov
mov
test
clc
and
lods
add
add
add
add
mov
test
push
(bad)
int
add
mov
and
sbb
ret
sbb
mov
enter
jecxz
out
into
or
call
xchg
sub
jge
cmp
push
and
gs
sbb
jns
sub
jns
inc
inc
call
jmp
and
int
stos
in
dec
fxch
jne
fwait
(bad)
stos
xchg
ss
cmp
fwait
ss
push
fwait
adc
psubb
mov
mov
pusha
lds
inc
jbe
popf
mov
mov
repnz
jle
lahf
inc
(bad)
jp
clc
enter
ret
movs
inc
sub
test
in
loopne
out
push
hlt
ja
out
mov
sbb
xor
ss
mov
sbb
pushf
mov
push
mov
mov
mov
ins
inc
jo
mov
push
adc
sti
mov
mov
push
loope
(bad)
inc
frstor
push
jbe
pop
inc
xlat
or
shl
jmp
fucom
pop
fstp
pop
imul
imul
push
adc
aas
in
jno
jbe
xlat
lods
arpl
ror
xor
mov
pop
and
push
fidiv
cld
xor
jg
js
mov
mov
push
ficomp
outs
dec
shr
shl
cli
cli
not
mov
push
repnz
add
push
fadd
add
mov
test
mov
fmul
jns
icebp
jl
in
fst
popf
sahf
pusha
add
mov
pop
push
ffreep
or
mov
push
xchg
(bad)
or
pusha
rcl
shr
xor
scas
cmp
push
test
mov
or
or
(bad)
or
cmps
add
adc
in
or
in
xchg
psrad
push
pop
inc
js
div
push
bound
psubsb
inc
mov
cdq
sti
sub
shl
xlat
pushf
jmp
inc
mov
shl
mov
dec
pop
mov
jno
pop
test
nop
add
inc
(bad)
sbb
sub
mov
sbb
dec
loopne
sbb
cmp
xor
sub
push
retf
jbe
and
push
fmul
and
div
xor
(bad)
rcl
lahf
push
ret
pop
add
sub
push
cmp
cdq
ret
out
xchg
fnstsw
out
xchg
movs
imul
add
push
ret
and
shl
jmp
xchg
iret
test
(bad)
push
xor
sbb
pop
mov
(bad)
mov
fild
push
retf
xchg
add
xor
jle
stos
jno
pop
into
mov
inc
dec
in
test
ins
push
sbb
inc
nop
dec
leave
xchg
xlat
add
(bad)
xchg
icebp
mov
xchg
(bad)
int
mov
lods
imul
test
test
icebp
xchg
push
dec
lock
cwde
jno
and
sti
push
sbb
jae
dec
xor
adc
cdq
into
xchg
aas
inc
stos
cmp
cwde
cmp
lds
jae
stos
(bad)
lock
jo
or
mov
jb
sti
cmps
mov
pop
cvtps2pd
sbb
lfs
sar
mov
sbb
leave
jg
pop
or
bound
push
lods
cmp
pop
pop
pop
jp
push
jbe
xlat
jmp
ins
enter
inc
jmp
dec
(bad)
cli
push
and
inc
ret
cmp
mov
push
and
scas
pop
jp
cmp
or
enter
add
stos
mov
pop
dec
jmp
je
cdq
xor
xor
jb
add
imul
sar
dec
and
fidiv
stos
mov
inc
sub
xchg
cld
xor
and
inc
push
inc
cmps
cmp
fmul
out
call
sub
lahf
jmp
jne
xchg
jbe
xchg
push
sbb
pop
mov
push
imul
lods
cdq
push
(bad)
leave
mov
arpl
int3
lea
clc
retf
loopne
lods
sti
jbe
cli
loop
inc
xchg
sub
(bad)
inc
es
fs
pop
add
xor
add
cdq
cmp
xchg
fprem1
cmc
and
fs
or
mov
das
inc
add
lods
aas
jg
push
mov
mov
push
inc
jg
mov
inc
sbb
xor
mov
sti
ja
popa
mov
cmp
mov
add
lahf
das
xchg
jg
lock
adc
dec
push
imul
repnz
jae
jg
cmps
inc
mov
(bad)
out
stos
cmp
mov
pop
sbb
inc
mov
or
(bad)
sub
test
idiv
cmps
divps
outs
mov
jecxz
xor
cs
xor
xchg
(bad)
fninit
push
sub
sub
cld
out
mov
jge
mov
pop
in
and
and
mov
(bad)
jae
lods
pusha
xchg
repnz
push
cmps
cld
ficom
push
loop
in
imul
loope
outs
mov
or
stos
lods
pop
cmp
sti
push
lods
push
and
inc
xchg
and
xchg
mov
cwde
push
cs
xor
(bad)
dec
imul
mov
push
ins
cld
xchg
or
ss
sahf
fsubr
ds
retf
mov
enter
imul
test
sub
int3
mov
ja
pushf
dec
cmp
dec
sbb
push
clc
aaa
mov
adc
outs
fild
imul
cmp
jbe
push
cli
mov
out
pop
cmp
and
(bad)
or
lea
stos
sti
xchg
mov
or
cmps
cmp
(bad)
or
out
loope
inc
xchg
cmps
movs
rcr
out
pop
push
mov
ss
stos
xor
or
in
lea
jmp
push
lods
sub
add
ins
ins
pop
inc
inc
or
in
out
int3
pushf
int
cmp
mov
or
and
pop
mov
sub
test
and
retf
mov
sbb
mov
into
mov
inc
mov
push
mov
cmc
pop
mov
mov
dec
mov
pop
cmp
out
push
inc
adc
sub
and
ficom
push
pop
and
out
and
push
xor
pushf
xor
xchg
push
adc
(bad)
fwait
and
daa
in
push
xchg
sub
or
lahf
test
stos
fmul
dec
pop
popf
add
mov
jmp
cmps
leave
jo
and
ins
lea
(bad)
mov
lock
fist
cld
sti
and
push
into
ror
sar
sbb
cmp
fisubr
cmc
loop
or
dec
je
push
xchg
pop
mov
aas
popa
push
stc
fcomp
cmps
lock
fadd
enter
mov
inc
sbb
mov
test
push
and
pop
push
xor
int3
push
pop
lods
sbb
ror
into
xchg
dec
inc
dec
outs
stos
pop
or
fld
int3
out
enter
xor
pop
add
rcr
sbb
push
xchg
xor
dec
imul
cmc
lods
pop
mov
xchg
sbb
cmovb
adc
mov
scas
xlat
jns
jns
cs
mov
out
pop
jmp
xor
loop
sbb
dec
stc
cmp
jg
xor
aaa
xlat
sub
mov
jge
pop
mov
mov
dec
aad
lock
pusha
jl
pusha
call
cmp
es
loop
push
icebp
inc
xchg
push
sbb
inc
fimul
jecxz
lock
xchg
and
sbb
mov
pop
aam
aad
lock
pop
out
push
mov
mov
pop
sbb
arpl
xor
jecxz
jge
fdiv
mov
jge
cmp
cmp
adc
mov
mov
inc
mov
leave
push
rcr
ficomp
leave
imul
dec
ds
stos
into
push
scas
xchg
jne
mov
fst
fcomi
jbe
and
jo
mov
das
mov
mov
into
in
adc
pop
mov
lods
jg
loopne
div
cli
push
adc
je
jmp
dec
ror
loop
mov
and
pusha
cmp
xchg
dec
test
(bad)
mov
fadd
mov
xchg
adc
pop
pop
mov
arpl
aam
xchg
jg
leave
test
test
jl
pop
(bad)
fbstp
movs
gs
cmp
add
mov
dec
add
sbb
(bad)
loop
push
mov
sahf
sbb
mov
shr
ret
popf
imul
imul
sub
dec
ja
push
and
outs
imul
inc
fcomp
arpl
lods
mov
movs
inc
sbb
and
sbb
repz
sbb
sbb
int
outs
jae
(bad)
push
sub
mov
dec
daa
mov
xchg
push
or
ss
lahf
jp
popa
repnz
pop
popa
bnd
cmp
mov
mov
xchg
inc
lds
pop
jbe
cmp
or
jae
jbe
imul
scas
into
repz
lods
or
test
sub
mov
rcl
pop
inc
stos
xchg
cmp
sbb
and
call
jecxz
hlt
mov
mov
sbb
adc
sub
mov
retf
das
outs
ror
xor
jmp
mov
lock
add
mov
popf
sbb
fwait
pushf
mov
or
test
and
repz
or
lea
mov
pop
cli
fwait
push
clc
aad
and
pusha
ror
xchg
push
xor
cmp
inc
loopne
lock
add
loope
movs
idiv
push
pop
jb
not
jno
and
jne
dec
(bad)
sti
pop
sub
rcr
pop
lods
and
hlt
or
loop
push
adc
fxch
push
mov
dec
jnp
mov
add
test
nop
push
std
inc
dec
xor
enter
ret
mov
cmc
clc
xchg
or
scas
push
mov
or
or
jne
and
xchg
inc
pusha
pusha
sub
in
les
pop
outs
pop
mov
xchg
dec
sub
movs
in
data16
sub
or
push
or
inc
(bad)
ss
cli
cwde
mov
sbb
das
sub
sbb
xchg
gs
movs
leave
mov
popa
pop
retf
loopne
test
push
adc
(bad)
(bad)
mov
cmp
inc
lea
inc
push
jae
int3
(bad)
std
push
xor
jmp
retf
push
(bad)
jns
cld
data16
xchg
rcr
popf
sti
or
inc
or
idiv
xor
(bad)
mov
push
cmp
lock
xchg
or
jmp
movs
dec
dec
mov
sahf
into
jne
hlt
xchg
add
dec
push
(bad)
and
xor
cwde
retf
push
and
cmp
xchg
rcl
daa
dec
into
jns
xor
movs
xchg
outs
aas
lods
scas
push
(bad)
sub
pushf
cmp
and
leave
jb
xor
mov
int
inc
mov
hlt
lock
cmp
test
in
sub
jmp
mov
inc
xor
lea
iret
jno
(bad)
movs
sbb
(bad)
cmp
ror
lods
xor
jb
(bad)
out
les
cmps
xchg
test
push
mov
dec
adc
xor
xor
xchg
ret
fwait
jns
imul
outs
pop
sub
ret
sub
test
not
push
(bad)
mov
add
add
xchg
sub
or
sahf
mov
lahf
nop
pushf
jne
movs
xor
(bad)
fst
dec
push
adc
stos
push
mov
fdivr
and
movs
sbb
je
pop
add
xchg
sbb
push
test
xchg
stos
xchg
jb
inc
sub
nop
in
xchg
or
and
jmp
jns
push
adc
lods
idiv
out
les
in
es
cmps
cmp
fimul
cmp
in
addr16
(bad)
pop
lea
or
inc
into
lods
cmp
lock
test
sub
mov
xchg
mov
jge
and
mov
(bad)
fs
mov
push
cmp
mov
cwde
push
sub
call
mov
in
mov
adc
repz
jnp
inc
out
adc
movs
cld
mov
xor
pop
bound
or
xchg
jns
loopne
test
ret
dec
rcl
stc
(bad)
pop
loopne
je
xlat
and
fst
stos
aaa
pop
mov
not
(bad)
scas
mov
push
xchg
mov
(bad)
(bad)
lods
pop
add
mov
adc
int3
clc
addr16
imul
jge
mov
ds
in
sbb
je
inc
jno
jae
in
into
cli
ret
xchg
adc
cmp
fs
adc
push
imul
imul
adc
lahf
inc
ja
mov
and
xchg
adc
cmp
popa
lods
mov
(bad)
cmp
fist
inc
pop
mov
lods
mov
fwait
jle
xchg
popa
xor
adc
sub
sbb
cmp
mov
xor
inc
out
sbb
and
xchg
inc
cmp
push
cmps
jmp
sub
popf
mov
mov
and
gs
scas
(bad)
in
dec
daa
lea
push
cmp
mov
xchg
or
mov
jecxz
xchg
pop
dec
je
jno
fsub
add
and
push
ds
mov
mov
push
xchg
movs
inc
jnp
stc
and
push
push
push
inc
push
push
mov
cmc
pop
jne
out
dec
jne
push
aas
mov
xor
pusha
cli
adc
sbb
add
cmp
nop
dec
sub
movs
or
out
cmp
int
out
fcomp
mov
push
sub
push
dec
fsub
mov
xchg
in
add
mov
or
and
(bad)
push
xchg
mov
inc
pop
inc
mov
adc
xchg
jo
jmp
not
mov
(bad)
lock
mov
and
and
mov
test
into
sar
lahf
push
(bad)
ds
lea
sahf
inc
xlat
inc
pop
inc
test
pop
test
stos
jmp
jno
xlat
ins
out
popf
fadd
retf
add
ins
ja
sbb
sti
sbb
ds
and
ror
rcl
jo
pop
test
or
mov
push
xor
or
cmp
psrad
sbb
cmp
lods
imul
mov
outs
inc
int
lods
imul
jle
fcom
adc
xor
mov
and
sahf
pop
in
cmp
xor
dec
imul
arpl
push
nop
pop
addr16
loop
sbb
fisttp
xchg
and
fild
jnp
xchg
jbe
cmp
pop
les
movs
xlat
push
sub
std
push
aaa
div
mov
xor
not
cwde
sbb
pop
jnp
setle
mov
fwait
adc
mov
into
push
adc
sbb
fadd
fsubr
cmp
mov
outs
shl
fisub
ins
push
inc
fnstcw
push
mov
hlt
inc
fst
test
in
mov
and
pop
into
cwde
push
ror
rcl
enter
les
push
mov
fs
and
bound
into
call
cwde
ins
pop
inc
mov
stc
mov
mov
out
js
in
xor
call
jmp
jns
push
xor
mov
pop
inc
pop
jg
retf
mov
dec
sar
(bad)
mov
out
xor
loop
xchg
cld
dec
push
lea
test
inc
stos
test
pop
pop
ins
out
and
sub
pop
and
ret
neg
cmc
push
ins
mov
shr
sbb
dec
inc
or
imul
(bad)
das
xchg
sbb
(bad)
fxtract
add
xchg
mov
inc
push
in
sub
or
push
jg
(bad)
pop
aad
pushf
add
mov
mov
xchg
pop
pop
repz
loop
(bad)
mov
push
mov
jmp
in
xchg
adc
iret
push
xchg
pop
push
push
btr
fild
cmp
lahf
inc
jne
pushf
arpl
add
out
mov
test
mov
sahf
and
push
sbb
mov
xlat
imul
pop
retf
mov
xor
adc
xor
xchg
and
(bad)
int
test
in
test
inc
pop
movs
xor
popa
mov
and
adc
sub
jmp
dec
cmp
mov
mov
mov
jmp
dec
aam
adc
out
(bad)
daa
inc
retf
loop
xor
jge
ror
cmps
jne
imul
jo
pop
gs
std
adc
(bad)
sbb
imul
jge
in
cmp
adc
push
jnp
sbb
(bad)
jns
xchg
in
nop
ds
and
fmul
or
into
jmp
pop
dec
adc
push
adc
push
sub
inc
or
mov
cmp
and
sub
jmp
lds
pop
jne
arpl
fdivp
and
jns
pop
pushw
jl
sub
mov
loope
cmp
loopne
outs
jl
inc
or
stos
cmp
jbe
sub
adc
fidiv
rol
pushf
loopne
inc
cmps
pop
mov
cmps
jp
imul
sub
xor
dec
push
pop
pop
retf
inc
shl
in
icebp
(bad)
and
mov
push
xchg
sub
js
inc
mov
pop
and
pop
popa
nop
iret
or
pusha
add
fcomp
pop
fnsave
rcr
dec
fcomip
xor
in
lods
in
cmps
adc
in
in
and
nop
mov
jns
or
mov
cmp
fdivr
loope
jo
add
jge
inc
mov
inc
cmp
outs
add
mov
add
neg
cmp
aad
jg
aad
ins
gs
repnz
push
stos
push
lahf
adc
call
mov
movs
imul
cwde
push
das
add
div
jmp
mov
jp
xor
neg
sbb
pushf
inc
(bad)
cmps
(bad)
test
xchg
cmps
je
fs
addr16
into
xchg
jbe
mul
pop
and
push
cmc
inc
mov
pop
inc
int3
fwait
or
rcl
mov
(bad)
movs
pop
stc
retf
fidiv
retf
out
int
mov
(bad)
mov
push
stc
outs
xchg
es
into
dec
add
ds
dec
mov
scas
bound
sub
adc
pop
inc
and
xor
test
aad
mov
mov
repnz
mov
jp
xlat
cdq
mov
jp
add
into
cld
int3
movs
stos
mov
jmp
dec
jl
rol
test
scas
ins
shr
mov
loopne
xchg
test
xor
xchg
jp
sbb
iret
(bad)
adc
aas
mov
xchg
and
inc
xchg
jmp
into
or
cmps
dec
std
dec
dec
jg
cld
cmp
pop
std
sbb
ins
mov
mov
iret
cmc
xchg
call
hlt
mov
cmc
xchg
cli
sub
adc
inc
pop
mov
mov
scas
adc
jae
cmps
sti
mov
repz
dec
sbb
imul
cld
adc
test
inc
(bad)
repnz
and
mov
adc
repz
xchg
xchg
mov
ss
mov
into
mov
dec
stos
pop
mov
pop
sbb
fstp
inc
shl
arpl
mov
cmp
stos
pop
outs
frstor
sbb
inc
add
mov
cwde
cli
jno
push
out
jno
cmp
test
sbb
arpl
outs
ins
hlt
mov
add
mov
loopne
push
lods
mov
shl
push
cli
jg
jb
pop
movs
cmp
cmp
mov
push
push
int3
sub
or
push
imul
mov
push
push
push
mov
(bad)
in
scas
push
sbb
scas
xchg
pop
sahf
push
xchg
push
xor
push
jmp
enter
movs
push
mov
mov
dec
sti
jne
addr16
mov
test
xor
xchg
mov
dec
out
mov
gs
pop
mov
adc
cmp
inc
mov
test
dec
shl
bound
pop
gs
call
ss
and
aaa
xchg
adc
ins
push
fdiv
sbb
ins
add
sbb
outs
in
jns
dec
out
pop
cmp
js
mov
sahf
(bad)
fsubr
gs
xchg
inc
leave
pushf
sub
ja
call
les
push
push
mov
mov
or
inc
mov
test
or
loope
push
push
ds
lods
sbb
sahf
jo
cmp
inc
pop
es
pop
mov
xor
pop
outs
mov
xor
mov
popf
div
mov
xlat
pop
pop
aad
xchg
ret
enter
or
cmps
pop
add
jle
mov
idiv
jno
(bad)
push
mov
push
sub
xor
imul
out
mov
(bad)
sub
or
add
fcomp
and
adc
inc
lds
cmp
adc
push
jae
popa
clc
rcl
in
ja
cdq
dec
js
xchg
dec
xchg
cmps
stos
imul
jns
repnz
lods
jno
ja
nop
dec
(bad)
test
cmp
jae
outs
stos
pop
scas
lds
call
pop
inc
cmp
shr
or
jne
out
mov
popf
adc
pop
push
mov
or
in
lahf
inc
nop
xchg
jb
jnp
pop
pop
ror
addr16
xor
retf
out
mov
mov
or
jo
jmp
test
xchg
ins
aaa
(bad)
xchg
jle
sub
gs
in
adc
inc
cwde
movs
movs
call
xchg
jns
dec
sbb
js
push
push
std
cld
cmp
ja
jle
fwait
cmp
imul
jmp
dec
sahf
jo
inc
adc
jmp
mov
inc
xor
xchg
sbb
add
pop
jns
jnp
pop
add
daa
lahf
pop
outs
aas
fisttp
jae
cmp
cmp
xor
cmp
loope
mov
pushf
test
out
inc
std
push
sahf
out
adc
or
lahf
aas
add
mov
and
jb
in
cmp
pop
ds
fild
test
dec
outs
popf
inc
jno
lods
push
test
push
pop
mov
enter
xor
call
cmp
dec
mov
mov
sub
mov
int3
sti
sbb
xor
bound
sbb
xchg
in
xchg
fdiv
sbb
pusha
icebp
xchg
outs
sub
shr
lahf
mov
jl
rcl
je
mov
mov
movs
mov
sbb
mov
retf
nop
and
and
pop
jns
jb
or
xchg
add
lds
fistp
mov
xchg
or
ins
xchg
dec
popa
les
adc
loopne
cmp
div
ret
sti
cld
jl
mov
test
pop
inc
lock
enter
popa
in
push
mov
in
mov
and
adc
sbb
test
adc
pop
or
fiadd
push
fisubr
mov
add
in
sub
xchg
icebp
es
mov
jno
aam
mov
or
jmp
mov
les
cld
mov
in
jle
add
in
sbb
les
mov
scas
jp
cld
and
inc
mov
add
aas
in
ja
cli
(bad)
hlt
or
arpl
iret
popf
cli
mov
xchg
jmp
clc
push
lods
mov
mov
dec
int3
or
push
lods
aaa
call
mov
fiadd
bnd
mov
mov
pop
retf
movs
mov
xchg
(bad)
sti
fnstenv
and
mov
sti
mov
inc
jl
cmc
cmp
push
(bad)
outs
in
push
sbb
out
sub
arpl
adc
cmps
push
xchg
sbb
leave
inc
cmps
jmp
xor
push
js
cmp
pop
fadd
out
fmul
pop
cmp
add
adc
nop
call
xor
loopne
or
ret
out
mov
cli
add
cs
ror
xor
pop
std
popa
mov
mov
mov
daa
(bad)
adc
xor
mov
test
jl
test
mov
mov
cmp
xor
mov
stos
(bad)
ds
mov
(bad)
loop
push
popa
jns
daa
es
cld
popa
bound
iret
adc
adc
ret
pop
ret
mov
and
cmp
popf
push
lahf
je
sahf
in
inc
movs
outs
stos
into
iret
fcmovne
sbb
jge
sti
sbb
cmp
cmp
xor
xchg
sbb
pop
push
push
test
test
adc
adc
jecxz
mov
inc
movs
xchg
dec
jno
(bad)
rcl
(bad)
retf
xor
addr16
mov
leave
stc
push
jl
fidivr
fmul
fs
dec
and
dec
(bad)
in
ficom
outs
mov
and
arpl
(bad)
inc
dec
inc
mov
ss
mov
adc
mov
mov
cmp
call
fidiv
aaa
in
sbb
stc
lahf
ins
cli
xor
ins
ret
mov
dec
mov
sbb
pop
cdq
jbe
mov
xchg
add
jg
out
imul
add
cli
rcr
mov
das
dec
dec
sbb
dec
sub
repz
scas
jle
arpl
add
stos
dec
sbb
cmp
cmps
and
test
or
jp
jp
cdq
fistp
sub
aaa
sbb
mov
adc
ins
les
movs
mov
jp
pushf
js
mov
add
jns
lea
je
cmps
pusha
inc
dec
enter
dec
cli
int3
punpcklwd
xchg
mov
aad
das
sub
and
mov
cmp
sub
xchg
(bad)
pop
xor
repnz
adc
mov
aas
shr
jg
ficom
test
jp
xor
mov
adc
dec
cmp
cmp
dec
xor
or
into
lock
mov
hlt
add
call
test
and
sbb
hlt
jmp
mov
mov
pushf
and
mov
cmp
jb
jge
cmc
jge
inc
xchg
inc
jge
in
push
mov
mov
mov
fst
inc
inc
pop
fdivrp
sbb
add
int3
popa
push
imul
popf
popa
mov
test
fs
inc
or
mov
xor
and
mov
loope
(bad)
mov
ins
and
aad
out
sub
mov
sbb
fst
sbb
and
dec
or
push
dec
push
mov
fdiv
push
jnp
pop
cmps
fdivr
enter
xor
les
(bad)
pop
ins
je
inc
scas
out
call
xchg
push
outs
and
adc
loopne
pusha
add
out
in
popa
pop
neg
enter
dec
fsub
or
and
fdiv
ret
push
lahf
jno
cwde
(bad)
(bad)
ror
push
fild
cmp
retf
jbe
in
xlat
sub
shl
inc
ficom
aam
mov
fmul
push
mov
sub
pusha
jno
mov
cmp
xor
pop
js
in
fsubrp
icebp
xchg
and
jle
dec
mov
div
movs
repnz
lock
pop
bound
retf
aad
in
and
mov
imul
into
dec
clc
add
ror
dec
pop
mov
mov
mov
mov
retf
test
sbb
daa
repnz
into
mov
ror
lods
cmc
sub
je
(bad)
(bad)
and
or
xchg
xchg
aas
mov
mov
fwait
or
ins
pop
jp
mov
ret
ret
cmp
adc
loopne
ror
add
retf
jne
mov
in
lahf
test
add
loop
in
push
in
jmp
jg
cmovs
movs
sub
pop
jp
pop
pop
ins
xchg
pop
fmul
clc
add
xchg
push
(bad)
out
jecxz
cmp
pop
iret
xchg
mov
outs
or
xchg
mov
iret
mov
mov
push
xlat
cmps
adc
(bad)
jmp
and
cmp
add
fs
(bad)
fwait
dec
shl
pop
mov
dec
jnp
sub
mov
sub
clc
mov
jae
mov
mov
adc
mov
lock
inc
cmp
cmp
ret
pop
je
or
jmp
inc
and
lea
jnp
enter
jbe
xchg
xor
pop
std
cdq
pushw
mov
outs
fdivrp
(bad)
shl
out
push
pop
sti
mov
push
ffree
cld
mov
iret
dec
mov
loop
das
jbe
xor
lock
dec
push
lods
cli
stc
pusha
sahf
out
mov
int
push
shl
jb
mov
int3
(bad)
scas
mov
lahf
out
rcr
cli
xchg
out
loope
dec
xchg
push
cmp
push
cwde
lahf
mov
lods
retf
mov
popa
push
retf
sbb
fucom
jnp
popf
or
or
and
mov
rcl
or
xchg
adc
mov
loopne
loop
pop
push
cmp
fsubp
mov
int3
adc
xchg
ret
minps
popa
sub
nop
mov
das
and
fsubr
jno
jbe
(bad)
loop
mov
fs
add
jns
pop
pop
enter
outs
aad
xor
mov
cli
or
adc
jmp
add
ins
mov
adc
add
ins
loopne
pop
aad
mov
pop
les
or
mov
pop
xchg
dec
test
(bad)
sub
ins
test
lahf
jg
repnz
sub
fimul
sbb
bound
call
pop
cmps
or
ss
iret
push
fwait
dec
int
push
jp
in
xchg
loopne
retf
dec
pop
(bad)
xor
rcl
sbb
loopne
xchg
out
inc
jae
pop
dec
(bad)
mov
leave
std
mov
aad
dec
adc
mov
pop
mov
jg
mov
popa
push
adc
push
push
test
and
ins
fild
js
or
dec
mov
jle
aas
scas
lods
dec
push
sti
loopne
dec
or
mov
hlt
add
out
cli
mov
or
adc
mov
adc
ja
and
fsub
push
mov
or
xchg
or
into
mov
jnp
jo
cmp
or
jle
das
lock
sbb
dec
inc
mov
scas
inc
mov
push
ror
rcl
sahf
stc
ss
and
or
jp
neg
popf
xchg
dec
pushf
ficom
into
sbb
pop
call
fst
fsub
dec
aad
pop
or
scas
call
aaa
(bad)
jmp
sub
push
mov
jne
pop
fmul
or
(bad)
out
mov
inc
outs
jl
lahf
fs
fldcw
aas
push
xchg
sbb
mov
jp
(bad)
into
pop
iretw
jnp
inc
scas
xor
and
xchg
jl
xlat
movs
push
mov
loope
or
or
or
mov
mov
repz
and
je
push
or
xlat
jle
mov
lds
or
imul
xor
cmc
jge
pop
in
or
std
inc
inc
jmp
push
out
leave
ins
push
(bad)
fisttp
mov
xchg
push
mov
call
push
dec
inc
and
mov
mov
mov
shr
pop
and
jns
rcl
out
sbb
jb
xchg
xchg
push
and
imul
arpl
inc
pop
sahf
and
jno
fld
add
dec
test
in
lea
clc
rcr
rol
and
mov
jne
es
sub
inc
push
aam
and
sbb
popa
xchg
imul
in
mov
xchg
adc
cmps
adc
(bad)
lahf
js
cmc
sub
dec
xlat
out
push
push
(bad)
pop
retf
xchg
and
cs
inc
in
lock
pop
pop
mov
inc
inc
mov
arpl
xor
pop
mov
xor
cdq
data16
das
lods
and
fiadd
xor
fwait
xchg
lods
dec
out
pop
pop
cli
push
jp
outs
mov
mov
pusha
push
les
out
push
enter
ja
ins
push
mov
in
xchg
lods
mov
lods
pushf
ins
inc
cmp
das
xrelease
and
sbb
and
sub
xor
dec
dec
inc
jg
(bad)
dec
aas
xchg
int
jle
pop
lds
fsub
sub
(bad)
call
sar
mov
lock
dec
clc
xchg
and
xor
mov
jl
xchg
loopne
in
fdivr
ss
loop
mov
repnz
push
je
adc
jge
cmp
pop
inc
mov
call
xchg
sub
mov
jbe
or
mov
xchg
stc
call
(bad)
jmp
fwait
lds
xchg
ror
xchg
or
daa
inc
cmc
dec
adc
mov
push
jae
adc
popf
xchg
gs
dec
sub
pop
mul
frstor
sbb
xchg
sbb
int3
push
mov
cmp
les
aaa
jo
inc
les
shl
in
push
mov
int3
shr
repnz
jmp
fwait
(bad)
push
(bad)
in
sbb
xchg
clc
sub
xor
add
jge
and
(bad)
out
push
out
fistp
push
rol
ja
mov
(bad)
lods
setg
mov
cmp
inc
loop
hlt
adc
loopne
dec
dec
cmp
test
cmc
mov
sub
adc
push
push
aas
add
ret
xchg
mov
pop
xchg
and
ficomp
jne
test
jb
and
pop
or
mov
jb
movs
aaa
sub
lods
and
xchg
clc
shl
test
xchg
ret
(bad)
out
icebp
test
jbe
stos
loop
lods
movs
(bad)
inc
je
repz
cdq
in
adc
dec
mov
loop
sub
or
dec
mov
jle
jge
ja
fxch
inc
xchg
push
jnp
test
xlat
int3
lds
push
mov
nop
add
test
xchg
ret
leave
sbb
mov
cmps
adc
aaa
je
lds
and
fadd
inc
les
fwait
ins
sub
cmp
test
xchg
xor
jbe
pop
fdivr
or
push
inc
addr16
mov
push
test
cmps
mov
(bad)
std
pop
dec
adc
js
fnstcw
repnz
fld
push
aad
jmp
adc
push
mov
(bad)
das
lods
movs
test
das
sbb
inc
cmp
mov
iret
pop
fisttp
mov
aaa
test
mov
mov
aad
mov
jbe
sub
movs
xlat
loop
rol
movs
(bad)
cs
xchg
cmp
repz
xchg
pop
cli
push
faddp
in
ret
loop
dec
lods
mov
cmp
pop
sub
jp
sbb
fdivr
cmp
xor
or
mov
(bad)
call
mov
movs
push
jnp
nop
or
push
mov
adc
cmc
daa
scas
addr16
mov
mov
ss
cs
lahf
cmp
leave
ret
mov
jmp
pop
rol
and
jp
xchg
xchg
ret
xchg
jl
xchg
lea
dec
pop
jp
xor
inc
jne
mov
inc
xlat
lock
nop
outs
mov
xchg
loope
jge
repz
loop
test
(bad)
(bad)
pusha
sbb
imul
push
stc
fild
stos
movs
xlat
or
and
in
hlt
enter
ds
lea
retf
mov
popa
mov
sub
sub
xor
pop
xchg
sub
hlt
dec
(bad)
jo
test
loope
sbb
sub
ds
push
mov
cmp
pop
and
icebp
and
je
mov
(bad)
idiv
push
xor
movs
outs
stos
sahf
lock
inc
fsubp
loope
cmp
lds
retfw
dec
mov
lods
cmp
ret
and
data16
cmp
add
ja
ds
cmp
inc
push
add
sub
mov
jg
outs
mov
lds
out
add
sub
hlt
push
jmp
xchg
out
movs
add
pop
dec
aam
jle
dec
out
and
add
inc
js
pop
sub
jbe
push
inc
jg
je
cld
data16
leave
pop
pop
mov
pop
outs
adc
adc
imul
inc
or
xchg
jmp
push
(bad)
unpcklps
jge
inc
dec
cmps
mov
pop
inc
test
pop
sti
fnstsw
mov
iret
loop
pop
retf
aaa
mov
les
lods
sub
xchg
sbb
sub
or
sub
and
jg
aas
arpl
aas
xor
ins
jns
xlat
mov
mov
mov
scas
adc
mov
cmp
mov
aad
xchg
js
test
jecxz
pop
mov
(bad)
cwde
in
dec
pop
icebp
int
popa
stos
mov
pop
rol
pop
pop
sahf
pop
fsubrp
or
mov
inc
jl
dec
and
inc
ja
cld
pop
jmp
outs
xchg
fisubr
outs
repnz
pop
mov
jge
jl
jo
jns
lock
shl
cli
mov
ret
push
int3
mov
inc
mov
addr16
cmp
push
pop
call
mov
or
addr16
mov
inc
out
es
or
mov
inc
mov
dec
mov
jg
jbe
cld
mov
cmps
clc
or
(bad)
mov
jg
movs
jl
ins
ret
mov
dec
fcomp
jl
jp
daa
int
out
icebp
or
(bad)
out
call
mov
gs
xchg
movs
loope
adc
aas
stos
sbb
lahf
repz
pop
mov
mov
sub
arpl
call
mov
xor
mov
sbb
mov
fiadd
xchg
es
xchg
rol
lods
imul
mov
jbe
fbld
add
push
push
dec
je
jns
ds
mov
xor
loope
sti
enter
xor
test
sbb
pop
or
mov
scas
jne
js
dec
popf
pushf
(bad)
xchg
dec
and
xchg
stc
mov
sar
out
jnp
cmp
or
pop
cdq
and
imul
nop
mov
jmp
aad
fucomp
mov
arpl
cmp
repnz
sbb
jecxz
add
sub
mov
mov
jnp
mov
add
xchg
retf
and
and
xor
test
sbb
add
dec
and
ret
cmp
bnd
add
repz
or
lods
pop
mov
retf
add
ror
in
in
mov
dec
lds
fidivr
stos
(bad)
lock
xlat
(bad)
push
in
movs
push
hlt
xchg
jnp
repz
rol
jecxz
add
add
xchg
fidivr
ja
sahf
loopne
xor
loopne
iret
mov
aad
inc
lahf
iret
cmp
aam
xchg
nop
in
imul
js
movs
popa
movs
test
das
mov
pop
jge
mov
lds
dec
and
arpl
aas
mov
ja
outs
out
into
cmp
in
out
pop
cmp
std
add
mov
cld
push
push
arpl
leave
outs
aam
mov
dec
(bad)
ror
cs
push
and
je
mov
pop
shr
and
into
jo
js
pop
dec
addr16
mov
mov
inc
xor
pop
cmp
sti
dec
mov
sub
push
mov
dec
jmp
jmp
push
in
jmp
int
mov
cdq
icebp
icebp
add
fdivr
adc
jmp
cmp
sub
mov
js
ja
add
fistp
les
pop
mov
add
into
or
jb
(bad)
pusha
or
in
shl
and
cmc
cmps
push
mov
popf
mov
xor
cmp
push
fstp
js
or
mov
loopne
sub
(bad)
sub
push
or
call
push
jle
pushf
xor
imul
sbb
inc
test
not
sbb
movs
fmul
dec
ror
dec
pop
sbb
cmp
lahf
fcomp
fst
xor
iret
push
sbb
iret
dec
popf
(bad)
push
xor
and
(bad)
cli
nop
cmp
fistp
(bad)
stc
ror
dec
cwde
test
sub
mov
test
loopne
addr16
rcr
push
push
(bad)
cld
xor
jb
sub
ins
ins
movs
xor
retf
mov
es
add
dec
mov
retf
pop
shr
test
mov
ins
clc
stos
icebp
sar
adc
movs
cld
inc
jo
sti
adc
lods
std
inc
out
les
mov
sbb
mov
es
ins
dec
int3
sub
das
inc
pop
into
fcom
(bad)
xchg
xchg
out
xor
(bad)
jmp
add
mov
or
adc
and
jmp
icebp
mov
cmps
fdivr
test
jle
jg
xor
pop
adc
xchg
fs
mov
pusha
xchg
xchg
or
dec
and
sub
adc
inc
or
adc
(bad)
shl
lock
xchg
call
push
sar
outs
lods
mov
movs
pop
xchg
(bad)
test
dec
fwait
jecxz
repz
xchg
(bad)
push
mov
jp
jg
out
fsubr
cwde
jmp
cmps
adc
push
cmp
pop
daa
stos
stos
(bad)
ret
jo
out
ins
sbb
ret
dec
das
mov
(bad)
mov
idiv
sub
xlat
out
in
cmp
mov
aaa
mov
shr
inc
dec
gs
mov
jl
push
int
movs
push
or
psubd
add
xchg
pop
test
jne
int3
mov
mov
xor
scas
cwde
mov
or
std
dec
(bad)
in
retf
mov
ins
out
sub
cmp
pop
inc
inc
pop
jbe
jle
adc
sub
icebp
push
inc
and
(bad)
cmp
out
and
xchg
sbb
lds
(bad)
pushf
sahf
mov
xchg
push
dec
rcr
mov
xchg
mov
es
and
and
stc
and
adc
sbb
dec
ds
sbb
nop
out
daa
cmp
mov
mov
pusha
mov
cs
and
sti
ins
sti
in
addr16
sub
cmp
sbb
mov
sbb
mov
xchg
aam
out
adc
retf
cli
inc
jbe
fisubr
outs
scas
enter
mov
xor
outs
fadd
jmp
retf
push
cmc
jae
jg
xor
dec
fmulp
mov
push
dec
mov
adc
lds
push
jmp
gs
jne
mov
loope
shr
mov
jmp
outs
xchg
sub
mov
xor
outs
mov
jmp
retf
fs
xchg
xor
pop
add
sbb
dec
push
imul
aam
loopne
mov
xchg
addr16
test
mov
jmp
adc
pusha
jno
fucomi
fisubr
dec
push
(bad)
push
les
xlat
sub
imul
out
pop
cdq
push
mov
dec
lods
inc
int3
push
nop
movs
jb
jl
out
sub
xor
stos
push
(bad)
xchg
loop
mov
adc
xor
inc
mov
and
add
or
movs
xchg
pop
popa
adc
inc
lds
dec
pop
jg
push
mov
leave
cmp
out
jp
test
(bad)
xchg
dec
out
stos
out
mov
mov
jnp
movs
cmc
shl
stos
ss
add
push
xor
aaa
lods
dec
mov
mov
fldenv
ss
fcmovnu
dec
xor
inc
sbb
inc
jnp
stc
pop
mov
ds
je
cs
bound
cmp
loopne
cli
push
xchg
ss
repnz
ins
adc
mov
pop
ficomp
xor
push
neg
mov
mov
mov
mov
inc
je
popa
fs
xlat
mov
(bad)
in
xchg
js
mov
mov
icebp
pop
jno
call
mov
xchg
cmp
stos
dec
cdq
push
mov
inc
out
xchg
inc
sbb
xchg
add
xchg
fisttp
and
retf
out
(bad)
or
push
or
into
lods
adc
leave
mov
jmp
xor
sub
int
fisttp
cmps
rol
xor
xchg
frstor
inc
lea
dec
cdq
cdq
pop
dec
mov
cmp
into
adc
aam
xor
movs
out
pusha
jle
into
sahf
ja
jnp
outs
xchg
push
jmpw
inc
lock
pop
fwait
dec
div
stos
sbb
inc
cmp
mov
or
jb
and
xchg
aaa
xchg
cs
les
jg
pop
xchg
or
stos
into
push
dec
mov
xchg
pop
xor
pop
dec
(bad)
adc
stos
xchg
int
call
ficom
xlat
xor
jae
inc
push
mov
push
movs
loope
mov
mov
mov
dec
push
test
outs
in
mov
push
mov
shl
das
jae
fmul
jo
add
sbb
xchg
jnp
icebp
loopne
adc
mov
sar
mov
pop
mov
dec
mov
inc
push
scas
rol
push
push
sbb
pop
jmp
and
cdq
or
jbe
mov
enter
pusha
inc
cmp
inc
cli
repnz
bound
nop
test
pop
mov
call
inc
push
aad
sub
stos
or
xor
or
or
sbb
popa
dec
mov
loope
push
push
lea
lea
lock
fidivr
sub
and
jns
mov
push
pop
dec
mov
(bad)
sub
lods
(bad)
and
pextrw
push
push
std
hlt
cmp
les
push
cmp
pop
ret
add
into
add
push
(bad)
jmp
stos
call
ror
les
push
push
add
das
pop
repnz
mov
cmp
sbb
and
ret
cdq
es
es
fnstsw
fimul
lods
lods
pop
(bad)
cmc
push
(bad)
into
in
push
pushf
mov
sti
cmp
aam
xor
inc
int
sub
mov
xor
xchg
or
(bad)
test
jbe
scas
push
lods
push
hlt
mov
les
(bad)
out
xchg
pop
mov
add
in
pop
aad
or
jecxz
cmps
mov
inc
ins
sbb
mov
repz
ror
jmp
or
pop
cmp
mov
sbb
dec
cmps
dec
cmc
and
mov
pop
lock
inc
loop
jge
mov
mov
fidivr
dec
xor
mov
jnp
das
fist
inc
jmp
jns
jmp
jnp
add
shl
mov
mulps
sbb
enter
idiv
jnp
ins
or
xor
dec
push
test
sub
aam
xchg
icebp
push
inc
aam
mov
mov
cld
das
lea
jns
mov
ret
dec
push
jbe
cwde
pop
jns
xor
add
es
adc
sub
popf
ret
mov
call
enter
fimul
jns
mov
cmp
jne
popa
xchg
movntps
xor
imul
or
shr
shl
or
and
(bad)
mov
int
addr16
dec
pop
push
(bad)
jp
xor
imul
aas
cmp
mov
mov
push
rcr
sub
push
pop
inc
jns
dec
xlat
outs
cdq
fild
int3
mov
cmp
mov
ficom
sub
push
gs
mov
sbb
add
lods
and
dec
inc
dec
add
in
sbb
mov
pop
push
and
sahf
and
push
inc
jecxz
push
ins
sub
xchg
inc
ret
test
icebp
dec
xchg
fwait
repnz
add
rcr
pop
je
mov
(bad)
mov
sahf
arpl
ret
stos
ins
adc
dec
dec
aaa
shl
mov
xor
ja
push
cmp
retf
sub
jo
jb
jmp
cs
daa
or
les
aad
loopne
ss
and
in
pusha
push
scas
adc
push
push
xor
sub
shl
mov
mov
sahf
div
fldcw
pop
xchg
jge
dec
popf
cmp
pop
and
pop
retf
push
mov
adc
inc
jl
ret
fnsave
fs
dec
or
xor
mov
xchg
shl
fdivr
out
das
fcmovnb
add
fstp
fcom
jno
inc
fwait
inc
fsubrp
inc
js
repz
or
sub
call
fdiv
test
push
aam
enter
sbb
add
movs
xchg
add
sub
xor
ins
aas
xor
out
pop
out
jl
(bad)
adc
xchg
movs
cmps
sbb
jmp
push
fild
loope
mov
cwde
imul
cli
cdq
fs
cmps
dec
or
(bad)
lea
lahf
sahf
into
mov
test
sbb
cmps
xacquire
and
idiv
sbb
les
mov
movs
push
arpl
inc
lods
ja
dec
sbb
cmp
cs
fild
ret
jmp
xlat
inc
jb
es
(bad)
mov
rcl
lods
xchg
stos
lar
push
bnd
push
push
je
mov
retf
mov
inc
sti
hlt
sub
and
push
sbb
sbb
xchg
mov
cmp
xchg
sbb
fstp
imul
sub
or
and
lods
fcom
fucomip
mov
pop
xlat
or
cmps
dec
call
ss
mov
push
jbe
pop
adc
xchg
pop
cwde
and
adc
xchg
nop
lds
ret
cld
xchg
retf
cld
fwait
or
inc
sar
push
sub
retf
xchg
scas
mov
mov
mov
jb
clc
push
push
push
out
jns
sbb
inc
jecxz
mov
inc
mov
div
pusha
jge
gs
call
lea
pop
mov
mov
or
pusha
pop
aas
mov
jg
sub
pop
pop
dec
popf
mul
or
mov
leave
es
repz
les
in
or
inc
xchg
(bad)
add
mov
loope
scas
jg
xchg
mov
das
(bad)
fcomp
and
in
inc
or
fisub
add
test
push
test
add
cmp
push
push
scas
push
aaa
jmp
fcom
sub
cmp
inc
(bad)
fiadd
mov
mov
repnz
test
pop
mov
mov
test
push
repnz
mov
xor
fs
sbb
xor
stos
cld
mov
lea
or
sub
in
in
push
neg
(bad)
dec
fimul
cli
rcl
lods
push
test
aaa
mov
jno
stos
das
pop
sbb
push
push
adc
imul
xor
jns
cld
mov
jae
push
loopne
mov
dec
cmp
in
pop
fisubr
jns
outs
xchg
xchg
jns
aas
cmp
mov
retf
inc
add
adc
retf
sub
ins
mov
fadd
push
xchg
jp
and
ror
data16
add
inc
data16
in
or
(bad)
shl
pop
cmp
push
xlat
inc
mov
mov
or
mov
jbe
or
cli
sbb
jns
scas
add
add
std
mov
les
lods
adc
mov
scas
xor
mov
xor
ins
or
push
neg
xchg
sbb
stc
jb
and
push
dec
or
cmps
push
hlt
imul
les
add
add
fwait
mov
stos
dec
jne
adc
dec
rcr
cmp
push
xor
sub
movs
adc
cli
sbb
rol
sub
xor
fisub
call
ret
cld
sub
repnz
data16
mov
inc
arpl
(bad)
les
(bad)
sub
call
je
bound
in
inc
fwait
mov
pop
xor
push
retf
jmp
arpl
xlat
adc
or
push
push
and
mov
jmp
sbb
xchg
into
xchg
fcomip
enter
mov
xchg
xor
bound
and
mov
push
pop
daa
(bad)
int
xor
sti
sar
mov
in
xchg
jge
sbb
std
xchg
div
loope
jge
jg
fcom
loope
daa
rcl
xor
dec
push
enter
xor
ins
fist
movs
mov
mov
int
push
repnz
lahf
or
mov
pop
pop
(bad)
push
nop
xlat
dec
jns
stos
and
dec
mov
cmp
dec
xlat
pop
retf
shl
(bad)
sbb
aad
dec
xchg
or
popa
stos
mov
in
dec
or
ds
jmp
clc
push
scas
sahf
and
aam
rcl
mov
and
lods
mov
or
fbstp
cmp
mov
fucomi
les
in
jb
jne
(bad)
ficomp
rol
jmp
xor
sub
stos
out
(bad)
test
sbb
arpl
mov
xchg
adc
mov
fistp
inc
icebp
jo
sub
push
sub
int
bound
mov
sub
mov
fisttp
ss
not
js
imul
ins
inc
inc
and
test
cmps
mov
hlt
popa
repnz
cdq
adc
mov
std
xchg
mov
fstp
call
pusha
cmp
pop
dec
xor
xor
sbb
(bad)
movs
sbb
mov
xchg
and
dec
idiv
fidivr
scas
aas
aaa
mov
mov
mov
push
push
add
xchg
push
imul
adc
or
mov
and
ins
ja
and
pusha
inc
add
add
inc
cmc
cdq
jnp
enter
xchg
scas
iret
xor
out
call
mov
pop
mov
out
dec
(bad)
mov
pop
xchg
lods
leave
aas
stos
fld
sbb
shl
test
jmp
(bad)
mov
mov
jmp
out
xor
jno
lods
cdq
push
ss
jmp
adc
lahf
mov
(bad)
(bad)
xchg
imul
mov
call
xchg
addr16
(bad)
(bad)
xlat
jmp
out
push
jge
push
imul
lock
jae
mov
push
adc
into
jnp
js
jne
cmp
out
jmp
(bad)
gs
popf
lock
xchg
stc
mov
outs
xchg
bound
stc
lods
lds
xchg
(bad)
idiv
sahf
daa
neg
ss
jle
pop
xchg
cdq
ficom
fst
lods
js
(bad)
adc
mov
clc
ret
xchg
imul
scas
push
(bad)
jne
mov
fisub
aas
cld
mov
leave
mov
sbb
cli
movs
aaa
outs
scas
aas
pop
pop
jmp
mov
inc
jmp
push
jmp
sub
movs
icebp
inc
les
(bad)
mov
shl
stc
sub
fidiv
fcomp
dec
mov
and
rcr
loopne
jp
xor
pop
cmp
lea
imul
inc
aaa
std
xor
mov
mov
cdq
enter
fwait
push
icebp
les
inc
fisub
cmps
xchg
sbb
push
pop
shl
imul
mov
imul
xchg
ja
xchg
cmc
jg
ins
adc
shl
(bad)
cmp
lock
mov
xor
in
jle
test
mov
sub
and
cmp
dec
fwait
jmp
(bad)
scas
test
gs
push
stc
and
mov
xor
xchg
push
mul
or
cmc
jno
push
das
sbb
sbb
(bad)
stos
jge
(bad)
sub
pop
pop
dec
xor
rcr
xchg
aad
pop
cmp
test
ins
xchg
xchg
xchg
aam
imul
mov
mov
inc
inc
mov
push
retf
fisubr
je
xor
pop
rcl
movs
sahf
aam
dec
xchg
fsub
sub
lahf
inc
sti
cmc
add
mov
push
mov
lods
fsubr
loop
inc
adc
addr16
cmp
sbb
(bad)
int3
jecxz
mov
sub
imul
mov
sbb
xchg
pop
cmps
stos
ja
imul
xlat
(bad)
repz
nop
xchg
pop
icebp
test
das
sub
jo
into
and
sub
jnp
add
mov
loopne
cmp
int
sbb
mov
push
mov
jl
ret
sub
xchg
ret
pop
out
jl
fld
hlt
stc
retf
mov
mov
aad
xchg
aam
scas
pop
dec
jae
mov
jae
das
cmp
jo
(bad)
loopne
xchg
mov
pop
rcr
imul
xor
push
dec
jbe
arpl
cmc
dec
out
aaa
in
iret
jge
mov
pop
shl
push
mov
stc
mov
dec
mov
push
in
jmp
jno
mov
pop
repz
nop
adc
push
fldcw
std
aad
pop
inc
mov
(bad)
stc
sub
pop
repz
loop
inc
mov
icebp
outs
call
xor
frstor
fwait
in
and
mov
cmp
ret
(bad)
sbb
dec
cmp
scas
data16
into
(bad)
je
retf
pushf
popa
sbb
push
scas
cmp
pop
repz
(bad)
sub
push
jnp
jge
mov
pop
outs
jg
mov
cmc
hlt
lods
or
out
jge
test
mov
mov
imul
mov
cmp
jnp
mov
xlat
sbb
test
(bad)
cmp
pop
mov
inc
popa
outs
pusha
test
inc
mov
fdivr
fisubr
(bad)
pop
mov
in
(bad)
mov
pop
mov
rcl
mov
aad
cmps
imul
imul
(bad)
dec
xchg
lea
mov
lock
stc
cmp
pop
fild
dec
sahf
out
ja
leave
movs
sub
cmps
aaa
pop
je
xor
jl
push
jns
mov
mov
inc
ss
xlat
cdq
into
scas
retf
push
pop
xor
addr16
cmps
loope
xchg
xor
fcomp
(bad)
das
(bad)
in
loopne
pop
mov
dec
mov
stos
dec
mov
scas
mov
cli
imul
sar
sub
jbe
mov
pop
sti
xchg
mov
fwait
xchg
jno
mov
mov
into
xor
and
inc
mov
in
dec
mov
add
jecxz
lods
xchg
scas
dec
ficom
adc
mov
dec
pop
sub
xchg
jmp
ficomp
movs
push
fnstsw
mov
scas
clc
loop
mov
pop
ja
jmp
out
mov
shl
out
(bad)
(bad)
xor
jmp
mov
push
rcl
aad
xchg
cwde
push
test
sbb
dec
jp
mov
sub
cli
jmp
pushf
es
aam
movs
jecxz
pop
cmp
jne
mov
xlat
jmp
jge
cmp
sbb
mov
in
jo
ins
jg
dec
(bad)
int3
mov
mov
out
retf
sbb
in
int3
dec
dec
fild
mov
push
mov
inc
jb
cld
mov
loop
data16
aam
pop
fld
jle
mov
scas
loope
xchg
test
out
mov
aam
pop
mov
imul
push
aas
mov
test
lea
ds
gs
jbe
mov
aas
jo
dec
inc
mov
jmp
test
or
into
out
sub
xor
hlt
sub
jg
cmp
xor
jae
arpl
scas
xor
loop
icebp
adc
or
out
rep
pop
rcl
mov
aas
sub
dec
mov
mov
scas
(bad)
xor
mov
std
mov
fabs
ja
daa
js
lahf
loop
(bad)
mov
dec
adc
pop
pop
xchg
jnp
push
mov
ficomp
test
mov
repz
leave
dec
rcr
stc
cs
xor
movs
dec
mov
not
neg
gs
jmp
gs
je
mov
sub
mov
(bad)
pusha
mov
add
and
sbb
out
lods
out
mov
stc
imul
movs
pop
in
mov
or
test
push
mov
xor
push
jo
retf
test
mov
dec
stos
mov
xor
mov
mov
je
xor
retf
jmp
dec
pop
mov
fcomp
neg
mov
(bad)
gs
gs
push
mov
inc
cwde
inc
pop
(bad)
mov
ja
pop
or
mov
sub
cs
or
(bad)
jmp
cmps
or
outs
jge
mov
and
repz
out
push
scas
stc
push
div
ret
inc
xchg
xor
in
push
retf
repnz
xor
dec
call
pop
scas
mov
imul
mov
rol
psrad
add
add
mov
in
(bad)
enter
or
adc
stos
or
pop
mov
jno
push
xchg
xchg
mov
fisttp
mov
xchg
mov
popa
adc
stos
arpl
xor
pop
mov
mov
call
cmp
sqrtps
push
xchg
cmc
adc
test
sub
adc
ror
and
fmul
jno
rcl
push
cmova
sbb
jno
loopne
adc
inc
adc
ins
mov
mov
lock
call
dec
rcl
jno
mov
(bad)
loope
add
cmp
lods
cmp
adc
std
pop
inc
or
adc
out
pop
dec
xchg
inc
and
mov
imul
jnp
test
jp
jmp
lock
push
and
sbb
push
and
inc
or
adc
xchg
jmp
inc
nop
or
xor
(bad)
rcl
inc
pop
sbb
cmp
shl
inc
push
mov
inc
cld
add
inc
pushf
push
(bad)
inc
pushf
add
sbb
test
add
repnz
dec
or
jle
and
push
cmp
xchg
and
push
iret
addr16
cmp
xchg
mov
inc
pop
cwde
dec
fadd
mov
inc
adc
push
dec
jnp
mov
das
mov
or
xor
fldenv
dec
(bad)
rcl
inc
adc
add
jb
pop
pop
or
adc
sbb
(bad)
cmc
push
(bad)
pop
sahf
or
test
fmul
push
enter
sub
clc
xchg
push
and
aaa
iret
inc
sbb
inc
in
inc
fs
add
sub
or
cmp
adc
mov
or
inc
fst
(bad)
lock
xchg
sub
pop
mov
push
scas
and
and
nop
sbb
mov
pusha
mov
pop
sbb
or
and
loop
popf
out
in
(bad)
test
add
dec
loope
or
retf
(bad)
fbstp
cmp
test
std
sahf
loope
add
xchg
cmp
inc
push
mov
iret
bound
shl
lock
sub
int3
push
adc
dec
inc
mov
or
call
aaa
ret
iret
inc
or
test
mov
das
in
repnz
sar
and
adc
push
retf
repnz
out
cs
add
daa
out
(bad)
sbb
scas
mov
push
loopne
dec
icebp
div
fiadd
cwde
aas
push
push
pop
arpl
sub
sub
mov
cmp
push
inc
mov
(bad)
inc
pop
rol
adc
syscall
and
and
pop
push
add
xor
or
test
ins
adc
or
icebp
jne
or
call
sbb
adc
sub
xor
or
bound
pop
sbb
rcl
inc
push
mov
sbb
push
xor
xor
push
pushf
jo
inc
addr16
adc
sbb
or
or
mov
cmp
xor
push
retf
movs
xor
add
inc
test
js
daa
mov
push
lds
inc
sti
dec
mov
xchg
push
jbe
test
inc
xor
fs
popa
xor
sbb
shl
add
push
arpl
cli
add
int3
add
inc
loope
sub
sub
or
push
int3
mov
adc
ror
push
(bad)
xor
pop
add
adc
jno
in
fld
gs
jne
xlat
mov
sar
mov
mov
dec
out
out
lahf
mov
pushf
lods
or
in
fs
test
and
sub
or
inc
dec
sbb
popf
in
and
enter
pop
rol
push
push
add
jns
inc
pop
push
adc
xchg
mov
sbb
sahf
in
inc
mul
(bad)
xchg
inc
lock
adc
mov
sbb
rol
mov
push
pop
arpl
jmp
push
je
sbb
adc
pushf
cmps
xchg
mov
movs
stos
sub
push
test
and
cld
data16
fstp
pop
push
lods
sub
ins
and
sub
push
jbe
stc
adc
mov
dec
mov
sub
jge
je
lods
(bad)
call
shr
or
mov
mov
inc
test
sti
bound
or
mov
pop
inc
pop
push
gs
cmp
fldcw
jecxz
mov
cdq
nop
xchg
xor
leave
cmps
adc
add
ds
add
or
lods
pop
xchg
imul
shl
mov
sbb
repz
scas
adc
out
arpl
cmc
jo
dec
movs
ret
test
adc
dec
xor
mov
retf
outs
mov
xchg
imul
jle
cmp
xchg
loopne
mov
ss
addr16
mov
test
jl
xchg
sub
or
enter
test
xchg
mov
push
out
xor
push
lahf
add
fs
daa
clc
dec
loopne
sub
cmp
nop
cmc
(bad)
iret
mov
sbb
(bad)
cmc
add
mov
movs
mov
rcr
sub
push
xor
fld
sbb
in
jmp
lock
bound
inc
sub
jmp
xchg
lea
cli
xchg
adc
shl
lock
popa
rcl
pop
adc
mov
neg
test
jno
es
cld
sar
imul
adc
(bad)
aas
push
cld
aaa
mov
add
add
add
add
add
mov
inc
sbb
ja
xchg
add
add
add
pop
inc
outs
outs
je
outs
je
push
jns
gs
cs
ins
or
and
add
add
add
sbb
or
cli
pop
int3
fmul
add
sbb
pop
int3
fmul
add
sbb
pop
int3
fmul
add
xor
inc
pop
mov
sahf
ins
loopne
adc
or
mov
sbb
inc
dec
mov
inc
mov
repz
sti
dec
ss
xchg
js
dec
mov
add
cmc
or
out
stos
and
sub
jo
dec
jbe
fldenv
jl
or
(bad)
ds
dec
mov
out
cwde
sbb
mov
jmp
outs
pop
retf
mov
push
data16
and
cld
jmp
(bad)
dec
add
sub
add
add
mov
inc
and
jge
mov
add
add
add
add
add
push
gs
gs
gs
or
and
add
add
add
sbb
leave
jl
pop
int3
fmul
add
jl
pop
int3
fmul
add
jl
pop
int3
fmul
add
add
sub
add
add
mov
inc
sbb
ja
xchg
add
add
add
add
cld
dec
add
pop
inc
outs
outs
je
outs
je
push
jns
gs
cs
ins
or
and
add
add
add
sbb
or
cli
pop
int3
fmul
add
sbb
pop
int3
fmul
add
sbb
pop
int3
fmul
add
add
add
add
add
add
add
push
add
add
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
movs
add
add
push
je
imul
add
push
add
pusha
add
add
push
push
add
add
add
add
inc
push
dec
inc
add
add
add
add
add
inc
ins
outs
bound
add
add
add
add
add
inc
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
and
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
xor
or
imul
add
add
xor
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
push
add
xor
push
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
and
push
add
add
add
and
push
add
add
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
adc
add
les
add
add
xchg
add
sbb
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
sbb
clc
add
adc
or
mov
icebp
add
add
add
cdq
add
add
cdq
add
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
data16
stos
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
push
add
add
pushf
add
add
add
add
cmp
outs
fs
gs
jb
gs
gs
add
push
add
arpl
ins
imul
gs
add
push
arpl
jns
je
ins
cs
gs
arpl
outs
add
jae
ins
bound
push
imul
popa
jae
add
jae
gs
cs
dec
cs
popa
arpl
imul
imul
add
popa
imul
ins
bound
imul
outs
outs
inc
je
jb
bound
add
arpl
add
jae
ins
bound
gs
imul
imul
jae
gs
bound
jne
je
jb
inc
je
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jb
gs
jo
jne
push
jb
add
imul
popa
arpl
addr16
popa
jb
add
je
popa
jb
add
jae
gs
cs
dec
add
jb
popa
ins
add
je
je
gs
ins
add
je
dec
outs
addr16
add
je
add
popa
add
imul
ins
add
jo
jae
add
add
jb
outs
add
outs
arpl
add
addr16
outs
je
js
gs
imul
push
push
inc
je
jb
bound
add
addr16
push
jns
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
jae
gs
bound
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
ins
gs
outs
fs
ins
gs
arpl
jae
add
outs
add
je
outs
fs
outs
outs
add
je
inc
outs
je
jns
outs
imul
push
jae
add
jbe
imul
js
gs
imul
push
jns
add
ins
bound
dec
outs
outs
add
je
dec
popa
ins
add
je
dec
gs
popa
add
je
push
je
arpl
jb
arpl
push
jns
je
ins
cs
imul
inc
outs
jb
jae
dec
gs
popa
addr16
outs
js
inc
imul
jae
ins
je
push
push
cs
jo
add
add
push
add
popa
add
ins
add
and
je
outs
add
add
add
add
add
jae
jae
add
bound
ins
add
cmp
and
add
popa
add
add
imul
das
add
add
jbe
add
add
js
add
add
add
add
add
xor
inc
mov
sub
mov
pop
push
sbb
mov
xor
dec
xor
or
or
add
add
add
add
or
and
add
and
add
adc
and
adc
inc
add
add
dec
add
add
pop
and
or
add
adc
sbb
push
push
push
or
add
add
adc
add
add
add
add
adc
imul
and
adc
or
add
or
adc
and
adc
and
sbb
sbb
adc
and
push
add
push
push
add
adc
push
adc
or
sbb
add
add
add
add
adc
pop
and
xor
xor
cmp
cs
xor
xor
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
push
jl
add
and
add
jl
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
