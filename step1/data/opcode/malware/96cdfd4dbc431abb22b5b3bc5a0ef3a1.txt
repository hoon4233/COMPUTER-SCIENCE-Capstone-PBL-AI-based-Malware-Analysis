cld
test
mov
hlt
push
pop
pop
jno
dec
test
ins
(bad)
ficomp
inc
pop
fadd
push
rcl
add
mov
fist
add
xor
(bad)
rcl
sar
les
sub
fxch
(bad)
loope
sub
mov
scas
cli
outs
or
pop
shl
shl
aam
pop
xlat
or
scas
adc
add
cli
lods
or
mov
ins
hlt
into
lds
movs
data16
imul
cwde
cwde
cmps
mov
movs
ja
test
xchg
popa
pushf
faddp
into
xchg
pushf
or
sbb
mov
mov
jb
aaa
jnp
ret
ret
jp
loope
pop
add
inc
movs
fistp
xor
je
ret
in
fisttp
pop
call
(bad)
shr
pop
(bad)
cmps
adc
nop
cmc
imul
hlt
addr16
xor
cmp
stos
aas
ds
aad
cmp
pop
xlat
push
jno
add
scas
test
cmp
inc
aam
lods
add
sub
xchg
and
sti
xchg
mov
mov
mov
inc
xor
pop
mov
push
(bad)
fnstenv
in
xchg
(bad)
pop
mov
xor
xor
jecxz
cmc
stc
popa
push
lahf
pop
mov
mov
jge
add
(bad)
aad
into
fadd
mov
setp
in
lods
mov
stos
sbb
mov
fdivp
fistp
dec
add
mov
add
add
out
sbb
sti
adc
jg
pushf
dec
scas
out
jno
(bad)
out
les
cmp
inc
call
push
stos
cld
stos
push
in
test
imul
push
xchg
and
jp
loopne
xor
fs
ret
sar
pop
inc
inc
adc
xchg
xchg
cmps
mov
retf
cmp
adc
sub
cmps
dec
push
ins
xchg
jne
inc
iret
ret
pop
add
or
js
push
sub
add
push
imul
daa
shl
adc
cdq
jno
jle
cmp
std
nop
jno
and
les
icebp
and
sti
out
xor
push
pop
jmp
mov
in
dec
loope
aas
and
push
mov
or
test
shl
jo
pop
enter
mov
imul
mov
pcmpgtd
mov
add
adc
push
(bad)
xchg
inc
push
in
lahf
sbb
jae
pushw
popa
jge
mov
into
(bad)
ja
push
stos
push
ja
and
out
dec
out
inc
mov
sbb
inc
cmovl
cs
scas
or
pop
cmc
push
and
enter
jmp
daa
daa
jp
scas
int
inc
neg
or
xor
fmul
cmp
cmc
retf
mov
xor
sbb
rol
popf
jg
or
in
mov
(bad)
shr
push
cmps
(bad)
loop
(bad)
addr16
adc
sub
jle
xchg
jge
fild
dec
fs
popa
lock
int
scas
loope
mov
mov
xchg
out
jae
fisubr
mov
cdq
sub
retf
icebp
jnp
jb
dec
add
rcl
int
neg
loope
xchg
push
xor
frstor
daa
call
push
sti
fsubr
mov
cmps
shl
pop
or
push
cs
push
std
sub
lds
dec
sub
push
cld
jmp
push
mov
adc
add
xlat
add
arpl
pop
cmp
fimul
ficom
fild
sbb
cmp
jmp
rcr
xor
loop
lahf
dec
pusha
scas
das
fsub
scas
inc
pop
dec
jo
and
dec
ins
lahf
sahf
bound
sub
mov
add
dec
(bad)
jns
mov
mov
dec
cmp
pop
cmp
mov
mov
sahf
fs
xchg
clc
pusha
shr
push
adc
mov
inc
jb
xor
inc
hlt
xchg
test
jmp
lds
clc
adc
xchg
jbe
(bad)
(bad)
dec
mov
add
movs
ret
xchg
lods
gs
pop
mov
ficom
inc
jno
jne
sti
pop
fist
mov
add
bound
xor
pop
add
ror
pop
sub
imul
xor
xchg
repnz
push
imul
sbb
mov
or
into
xor
rcr
add
movs
cmp
cmp
div
jecxz
mov
mov
mov
jl
adc
inc
or
repz
pop
mov
push
aam
jle
aaa
xor
pop
push
add
out
xchg
cmps
sahf
int
push
(bad)
outs
xchg
push
(bad)
adc
sub
push
neg
fwait
lahf
imul
bound
addr16
in
out
and
outs
das
push
xabort
push
lock
jne
cdq
scas
(bad)
int
scas
out
daa
retf
sub
das
icebp
scas
push
or
dec
mov
xchg
jg
in
jbe
inc
pop
cmps
and
and
sbb
jno
pop
and
xchg
mov
fld
test
in
xchg
mov
jb
xlat
sbb
jnp
mov
jecxz
inc
popf
xchg
test
ror
js
add
retf
mov
cld
push
out
aad
dec
jno
shr
gs
cli
xchg
push
add
int
and
shl
and
add
mov
mov
jo
jle
test
les
(bad)
fmul
bound
and
int3
sbb
xchg
or
mov
xchg
call
pusha
sub
rol
or
stos
lds
cmp
mov
pop
rcl
sub
(bad)
xchg
(bad)
pusha
or
mov
mov
shl
adc
push
aam
ficom
xor
mov
call
jmp
clc
inc
cmp
clc
out
inc
mov
ins
cs
adc
push
push
fwait
xor
movs
xor
fiadd
popf
cmp
xchg
sar
test
jno
or
cld
dec
and
inc
mov
cmp
jns
call
mov
pop
loope
clc
mov
sbb
jmp
xchg
push
cmp
cmps
dec
repnz
add
ret
dec
pop
dec
add
push
mov
or
aam
jmp
push
mov
inc
add
scas
hlt
loop
aas
sub
cdq
xor
mov
shl
or
mov
or
movs
dec
sub
mov
push
mov
xor
sbb
sar
stc
xor
push
pop
fidiv
cs
psraw
mov
ins
out
stc
xlat
xor
ins
ins
mov
jae
mov
rcr
jb
js
gs
aas
pop
push
sub
(bad)
xchg
pop
ins
mov
ins
pop
push
in
stc
jne
test
mov
movs
ins
cmc
adc
mov
or
inc
aas
test
push
scas
jge
xchg
mov
sub
mov
add
les
jae
cmove
pop
clc
call
xchg
leave
rcl
mov
xchg
push
or
sbb
repnz
adc
out
jge
mov
add
or
inc
jbe
idiv
(bad)
add
inc
sub
or
cs
lahf
cmp
aaa
(bad)
mov
rol
(bad)
sbb
xor
add
xchg
and
sbb
add
and
(bad)
pop
sbb
mov
mov
hlt
inc
jl
adc
int3
stos
pop
test
(bad)
cld
lods
nop
add
push
mov
dec
rcr
lahf
sbb
imul
jno
rcl
dec
sbb
xor
fwait
outs
pushf
int
imul
dec
or
push
mov
or
jns
cmp
repz
push
fs
in
fisttp
push
div
sbb
enterw
retf
lods
mov
icebp
fsubr
hlt
pushf
sbb
push
pop
push
add
mov
inc
cmp
cmp
push
jbe
sub
outs
rep
inc
cdq
inc
cmp
add
mov
sub
mov
lock
jmp
addr16
popf
add
rcl
and
gs
cs
ror
call
nop
outs
adc
ins
call
shr
dec
(bad)
neg
pop
in
js
xor
aas
mov
outs
xchg
ins
cmp
outs
jb
xchg
push
test
ja
dec
(bad)
icebp
xchg
add
call
fdivr
sub
(bad)
push
aaa
popf
out
mov
pop
inc
dec
sbb
mov
(bad)
mov
in
aas
mov
int
jno
iret
xor
jmp
scas
sbb
mov
sub
adc
(bad)
or
out
(bad)
mov
xchg
hlt
es
js
add
mov
shl
adc
pushf
jl
mov
loope
xor
fld
dec
fwait
pop
pop
xchg
cmps
sbb
repnz
les
lahf
mov
xor
push
loopne
pop
loope
pop
dec
mov
in
push
stc
cmps
jle
jle
mov
and
loopne
add
fsubr
jl
and
xor
jne
mov
icebp
dec
mov
mov
sub
cli
(bad)
mov
push
push
arpl
jmp
cs
pop
cmp
add
xchg
loopne
push
in
sbb
(bad)
sti
sahf
mov
stc
or
scas
cli
in
and
data16
jmp
mov
push
hlt
push
(bad)
dec
div
xor
clc
jb
hlt
aad
lahf
inc
mov
pushf
xlat
pop
dec
jmp
inc
clc
jl
fwait
shl
and
fsub
xlat
mov
data16
popa
out
xchg
clc
pop
lea
mov
pop
imul
(bad)
(bad)
mov
shl
punpckhdq
or
inc
push
jmp
iret
clc
inc
(bad)
mov
pop
mov
aas
pop
pop
repz
lods
dec
cmp
mov
lahf
xor
xchg
pop
mov
pop
xchg
(bad)
sahf
jbe
xchg
jns
(bad)
mov
push
iret
cmp
jns
fimul
rcl
fst
mov
xchg
cli
adc
leave
cld
cmpps
push
jl
(bad)
jns
jo
xor
enter
jp
cmps
mov
out
stc
retf
push
ss
inc
mov
test
ja
daa
std
sbb
sub
test
inc
add
ins
sahf
fild
xchg
or
xor
fxam
or
pushf
push
out
int3
jle
test
mov
dec
mov
or
mov
in
aam
push
push
in
pop
adc
loop
pop
shl
pop
push
xor
loope
and
mov
imul
ds
neg
mov
inc
js
sbb
xchg
fdiv
jb
loope
repnz
mov
cmps
push
nop
neg
nop
test
fild
fcomi
div
adc
xchg
(bad)
fsubr
cmp
inc
repz
xchg
sub
sbb
mov
loop
sub
push
jae
adc
clc
xchg
(bad)
fsub
outs
xchg
xchg
and
inc
mov
adc
sbb
movs
add
mov
or
cmp
inc
adc
jle
sbb
sbb
push
or
add
out
cmps
push
(bad)
out
into
test
inc
loop
cmps
lods
push
in
push
sahf
mov
sbb
fld
shr
arpl
push
dec
mov
aad
sub
fistp
xchg
and
ret
jb
jg
jo
lods
cmp
ss
les
mov
adc
xor
nop
je
pop
lods
jae
push
aas
ficomp
xchg
(bad)
and
ins
imul
inc
push
xor
outs
jns
enter
sbb
cdq
aad
repz
push
icebp
pop
(bad)
fcomi
popf
scas
pop
shl
push
push
rol
fimul
out
mov
sbb
lods
rcr
ins
add
jl
jmp
sbb
sbb
in
push
(bad)
jmp
jns
sbb
fcmovb
dec
inc
cli
xchg
clc
mov
inc
lahf
stos
xor
loop
dec
cli
gs
(bad)
adc
dec
popa
out
repnz
push
or
repnz
pop
cld
xor
daa
xchg
sbb
and
mov
sbb
cwde
adc
mov
bound
pushf
sbb
mov
mov
xchg
mov
cmc
pop
pop
les
lock
add
mov
push
pop
and
leave
fild
cmps
add
fild
push
push
outs
aad
cmc
imul
jo
js
sbb
add
cmps
js
cwde
jnp
mov
mov
jmp
mov
cmps
mov
cmp
mov
xor
jbe
(bad)
pushf
call
adc
mov
inc
pusha
adc
icebp
(bad)
fsub
retf
jmp
and
or
ins
dec
test
mov
ins
mov
addr16
mov
pop
jl
je
add
or
cld
movs
loop
ret
jb
mov
cwde
mov
push
adc
dec
(bad)
or
push
rcl
and
cmp
push
fbstp
push
sub
or
popf
xchg
in
inc
pop
rcl
(bad)
nop
sub
inc
mov
push
add
ret
xchg
mov
popf
jbe
fwait
sbb
sbb
add
jecxz
retf
mov
xchg
push
frstor
bound
sub
adc
inc
mov
scas
aas
lods
dec
pop
pop
rcr
test
into
das
(bad)
lock
cmp
out
mov
fld
push
sbb
mov
movs
fisttp
pop
add
push
mov
call
fs
and
cld
aaa
inc
ret
ja
sahf
sbb
lock
les
pop
movs
in
add
out
scas
(bad)
pop
gs
add
inc
stc
mov
mov
push
xchg
rcr
mov
aas
icebp
call
sahf
sbb
or
xchg
dec
jge
outs
jecxz
imul
add
xor
lock
xchg
test
ins
das
cmps
push
movs
ss
sahf
sbb
fld
fisub
xor
cmp
push
ret
pop
aad
push
add
cdq
jg
xchg
std
ins
(bad)
pop
push
xor
pop
sti
jmp
out
movs
call
jbe
mov
loope
arpl
std
dec
inc
mov
pop
mov
adc
jl
shl
(bad)
shl
and
or
std
jns
loopne
sbb
inc
xor
je
push
mov
in
iret
in
mov
into
aas
int3
jnp
pop
mov
into
or
xchg
xchg
adc
jg
and
out
jmp
ret
call
sub
xchg
leave
xor
cmp
out
sub
aad
pop
scas
iret
rcl
pop
cdq
adc
push
pavgb
jns
dec
stc
ror
stos
push
arpl
popf
dec
ss
ja
(bad)
out
wbinvd
imul
cmps
outs
aam
sub
cmp
and
div
xchg
retf
(bad)
xor
aas
mov
adc
jmp
mov
xor
push
sbb
in
or
push
xchg
clc
jb
mov
add
iret
es
repnz
imul
inc
sbb
stc
std
push
cld
or
enter
repnz
outs
push
xlat
pop
sub
dec
in
jo
jp
ror
and
sub
sbb
pop
mov
loopne
fist
icebp
ret
fld
cmc
clc
outs
push
loop
adc
out
jae
sbb
test
div
sub
inc
in
lock
or
je
movs
xchg
ds
jmp
jb
push
call
cmc
cwde
and
mov
cwde
inc
pop
(bad)
push
fwait
xchg
popf
test
and
int
dec
add
retf
pusha
daa
cmc
sbb
mov
rol
dec
pop
shl
xchg
sub
daa
sbb
in
in
xor
or
int
in
imul
adc
out
add
popa
xor
xchg
mov
pop
cwde
pop
jo
int3
mov
and
mov
fldenv
mov
mov
mov
clc
adc
ds
mov
jo
jmp
push
faddp
fistp
mov
lahf
popa
fbstp
retf
rcl
mov
cmps
fadd
push
ret
sub
test
aam
mov
sahf
pop
adc
leave
stos
movs
jae
jmp
mov
mov
push
sub
cmp
into
sbb
popf
dec
adc
jmp
dec
fidivr
sub
jp
mov
retf
popf
adc
dec
cmc
and
sahf
inc
in
ja
imul
dec
sub
test
add
xchg
and
or
xlat
sar
mov
gs
mov
inc
adc
mov
test
mov
lods
sbb
xor
push
aas
jbe
dec
fnsave
jmp
inc
and
mov
push
dec
dec
jnp
mov
popa
or
jle
xor
out
pop
loope
adc
mov
jns
and
icebp
cmps
xchg
cli
xchg
mov
ja
pop
sar
cmp
push
sub
pop
mov
shl
imul
pop
(bad)
es
data16
shl
stc
arpl
xor
jns
test
dec
xchg
add
pop
icebp
icebp
int
imul
pop
inc
sbb
dec
in
jbe
movs
push
ja
jmp
mov
cwde
jns
inc
add
out
xor
mov
movs
imul
mov
ins
and
and
popf
pop
pusha
sbb
ja
sbb
(bad)
mov
adc
fidivr
mov
pushf
push
das
mov
xor
cmps
jmp
sub
inc
push
shl
add
mov
xchg
ins
aas
fmul
pushf
inc
stos
mov
mov
jne
(bad)
dec
repz
(bad)
cld
rcl
call
lods
mov
ins
push
outs
loop
out
pop
fiadd
cmps
xlat
dec
jns
ins
lahf
rcr
cwde
loop
fild
push
add
bound
xchg
add
iret
inc
ss
das
push
das
bound
xor
ja
mov
mov
sar
shl
push
cmp
sub
push
test
pop
adc
cmp
loope
or
jne
(bad)
(bad)
mov
(bad)
sti
out
or
xchg
dec
dec
pop
movs
fmulp
outs
js
jns
into
rol
xor
addr16
sahf
jb
icebp
je
clc
call
dec
cmp
add
cmp
(bad)
xor
cmps
ret
inc
sbb
xchg
xchg
pushf
mov
icebp
mov
xor
xor
sub
sar
(bad)
push
mov
pop
adc
sar
and
les
out
retf
dec
sub
inc
sbb
hlt
pop
shl
rcr
fdivr
test
push
je
ds
xor
mov
in
add
mov
cs
pop
or
out
(bad)
mov
sahf
dec
push
retf
fwait
std
ret
sbb
movs
mov
gs
jl
les
add
ins
cmp
sbb
inc
mov
and
(bad)
push
mov
addr16
mov
movs
mov
dec
xor
xor
movs
mul
mov
xchg
cmps
dec
lds
call
xor
ror
dec
pop
stos
mov
mov
adc
fild
cmc
xchg
or
sub
cmp
xchg
push
aaa
add
adc
cmp
test
mov
pushf
sti
aas
lods
push
out
pop
daa
sbb
sbb
sti
dec
push
xor
lods
fbstp
mov
pop
push
ins
mov
push
mov
add
and
aad
rcl
inc
lods
inc
adc
(bad)
in
sbb
push
ins
xchg
vpsubsw
test
out
sub
rcl
leave
enter
jl
call
push
push
dec
xchg
aad
push
mov
jle
jmp
test
xchg
xchg
in
sbb
jnp
in
shl
test
call
fist
jo
sbb
pop
pop
lods
push
lods
leave
inc
push
cmps
cmp
retf
pop
das
xchg
lock
jnp
cld
mov
jmp
sbb
aam
imul
in
stos
pop
js
push
(bad)
shl
mov
jmp
fstp
mov
ja
cmp
inc
div
les
or
dec
mov
jns
loop
sub
test
ret
mov
test
neg
pop
stos
es
xchg
shr
outs
and
inc
pop
addr16
in
sub
mov
sar
test
mov
jmp
mov
push
jmp
(bad)
jle
xchg
fsub
adc
or
sti
shl
hlt
lahf
sub
pop
inc
push
sbb
iret
imul
dec
enter
pushf
sbb
cdq
mov
xchg
xchg
and
push
hlt
sti
into
dec
cmc
jmp
icebp
mov
mov
mov
pop
fs
jp
pop
stos
pop
loope
inc
cmp
lea
arpl
sar
fwait
mov
add
add
xor
xor
out
fnstsw
clc
ret
int3
ret
and
stos
dec
jge
adc
inc
es
test
xchg
ss
(bad)
or
jmp
ja
and
dec
pop
shr
pop
push
and
push
mov
mov
repnz
adc
scas
pop
fistp
je
jl
cmp
test
ficomp
push
adc
out
xchg
jnp
shr
lahf
ss
mov
xchg
lock
test
icebp
cwde
sub
mov
in
mov
arpl
inc
dec
and
mov
and
iret
cld
in
mov
pusha
retf
dec
mov
ss
add
sti
js
adc
push
dec
xchg
data16
ja
inc
inc
mov
loope
jbe
pop
(bad)
mov
test
mov
xchg
fadd
mov
hlt
add
mov
pop
mov
push
stos
or
popf
xor
jo
outs
jle
fs
push
xor
dec
xor
jb
ins
dec
jbe
popf
cmp
push
xor
mov
leave
movs
lds
enter
cmp
lds
jle
dec
stos
xor
ret
test
cli
add
retf
xchg
scas
push
sahf
cmp
push
jo
mov
adc
xor
cmp
xor
stos
mov
mov
clc
cmp
popa
or
xlat
mov
push
sub
js
cwde
sahf
mov
movs
xchg
xchg
dec
data16
pop
scas
arpl
pop
imul
or
ins
mov
or
xor
mov
push
popa
xchg
ds
hlt
sbb
lock
jne
repnz
cmp
dec
icebp
add
in
cmp
and
inc
in
pop
int
in
mov
cs
out
sub
aam
into
or
bound
push
loop
add
pop
or
dec
inc
sbb
pop
outs
add
test
aad
call
sahf
mov
xchg
stos
cmps
push
and
xchg
adc
mov
lods
scas
add
xchg
sbb
sbb
aad
push
mov
mov
jp
scas
mov
shl
add
pop
je
inc
cmp
scas
mov
pop
ja
mov
pop
cdq
jns
cmp
sub
sbb
mov
arpl
cld
push
(bad)
sub
(bad)
jmp
jmp
fsub
fidivr
add
adc
push
mov
cwde
mov
lods
out
jno
or
mov
xchg
fmul
test
mov
xchg
lea
jno
mov
pop
mov
xor
xchg
add
sub
fsub
mov
inc
add
cdq
xchg
mov
push
xor
mov
call
push
mov
sub
ins
xor
add
enter
adc
dec
push
sbb
pop
pop
cmc
frstpm(287
or
adc
jae
cmp
pop
pop
mov
xor
dec
aad
pop
adc
icebp
mov
cwde
cmp
gs
nop
pop
pop
pop
je
jmp
lds
cs
cwde
xchg
or
dec
sbb
shl
xchg
rcr
jno
aas
xchg
jp
les
xchg
push
repnz
xor
inc
es
in
adc
mov
cmps
jns
iret
cmps
jbe
mov
xchg
push
test
inc
ss
mov
sbb
sub
fcomp
add
or
scas
xor
pop
repz
cld
pop
mov
or
ins
add
mov
pushf
fldenv
sbb
out
pop
mov
test
pop
xchg
push
jp
sub
adc
retf
push
mov
sbb
fs
push
mov
sub
(bad)
cdq
adc
jmp
adc
stos
xchg
int
inc
fs
addr16
xor
mul
mov
int
xchg
mov
jns
mov
gs
adc
fmul
pusha
out
(bad)
sbb
in
push
aas
pop
ins
mov
sub
retf
repz
jge
call
inc
inc
in
adc
out
pop
stc
fisttp
mov
mov
sub
loopne
ret
call
movs
repnz
retf
fcomp
cmp
out
xor
aas
fild
pop
movs
in
adc
xchg
sti
dec
jb
mov
jecxz
xchg
iret
and
mov
or
pop
(bad)
dec
inc
mov
dec
neg
push
aas
sar
mov
cmp
jg
dec
and
or
mov
mov
xchg
ss
fwait
dec
add
adc
xchg
mov
shl
pop
gs
xchg
out
loopne
mov
jp
repnz
mov
mov
inc
xchg
mov
mov
test
jecxz
adc
jmp
push
dec
mov
xor
pop
mov
sub
scas
inc
shr
call
and
mov
sbb
or
scas
out
push
push
push
mov
and
in
test
cmp
push
das
cld
mov
jns
stos
adc
adc
xlat
push
add
mov
and
xor
ins
out
jle
and
sub
imul
call
inc
(bad)
cld
stos
rcr
adc
(bad)
clc
(bad)
mov
add
pushf
add
cmps
push
stos
into
fbld
mov
pop
mov
inc
imul
jno
bound
in
jp
mov
and
mov
mov
imul
bound
or
mov
repz
int
xor
mov
mov
or
sbb
sar
cmc
outs
test
cmc
dec
outs
dec
mov
stc
xor
xor
inc
xchg
repnz
pusha
fsub
sub
push
sar
pop
push
or
mov
xchg
mov
mov
sbb
loope
or
lahf
push
xchg
(bad)
and
inc
add
(bad)
clc
inc
lods
and
or
jbe
push
mov
push
add
stc
mov
mov
push
cmp
test
adc
mov
pop
mov
mov
adc
jmp
dec
lods
sub
lods
bound
xchg
(bad)
ja
cmp
ds
dec
or
ins
in
fwait
ja
sub
push
mov
into
xor
je
inc
adc
sbb
repz
stc
mov
dec
add
dec
cli
or
sbb
adc
jo
xchg
mov
in
cmps
iret
(bad)
fldenv
mov
or
js
xchg
std
pop
or
sub
pusha
xor
inc
sub
ins
(bad)
push
add
out
and
test
inc
stos
mov
mov
pop
adc
sbb
cwde
les
aaa
jecxz
outs
mov
(bad)
push
fisubr
nop
(bad)
and
lea
sti
pop
cmc
repnz
pusha
ins
sub
pop
pop
jbe
push
fiadd
pushf
sbb
test
lds
add
idiv
cs
lock
and
push
sysret
dec
push
sbb
ds
jns
cmp
or
(bad)
mov
shl
ret
enter
lods
xor
push
inc
or
outs
and
fisubr
rep
shl
mov
push
or
add
adc
(bad)
mov
outs
sub
outs
ins
mov
inc
ins
or
mov
fidiv
(bad)
xor
test
je
jno
pop
xchg
loope
inc
jmp
mov
xor
adc
pop
in
inc
pop
imul
(bad)
sahf
dec
lds
out
mov
cmp
adc
sahf
jge
xchg
out
nop
int
jnp
jo
dec
and
mov
ret
xor
loopne
out
cmp
cmps
mov
pop
add
inc
push
retf
out
fistp
scas
or
xchg
lahf
dec
push
movs
ss
lds
pop
sahf
dec
lds
cmp
mov
loop
imul
loope
mov
cmp
in
movs
push
call
jge
dec
push
shl
std
out
inc
popf
and
dec
fiadd
lods
fdivr
mov
mov
out
add
push
adc
pop
jle
pushfw
inc
xor
xchg
xor
jbe
call
retf
aad
std
mov
pushf
jne
iret
shl
or
movs
aas
mov
or
fwait
test
mov
sub
pop
pop
sar
js
pop
pop
lock
scas
push
ret
or
sbb
nop
pop
cmp
(bad)
shr
or
outs
or
mov
xor
cli
dec
and
push
cmp
pop
cdq
mov
sbb
aaa
fist
xchg
ror
adc
sbb
lock
or
cwde
lea
(bad)
frstor
mov
bound
jecxz
mov
cmps
cmp
clc
push
or
push
das
mov
adc
sub
mov
(bad)
mov
sbb
popf
adc
cmc
sar
xchg
cli
fild
add
and
lar
das
pop
mov
dec
adc
dec
jl
and
dec
cmovae
sub
sahf
(bad)
sub
push
mov
aad
std
jp
jp
into
into
add
adc
sbb
xor
ja
daa
test
push
and
pop
iret
stos
mov
push
shl
and
retf
(bad)
adc
jecxz
test
leave
push
jnp
in
fmulp
jae
mov
or
xchg
mov
stos
jmp
pop
mov
cld
mov
shl
adc
popf
or
xchg
jmp
mov
mov
pop
idiv
add
push
cmps
xor
pop
inc
jg
enter
mov
jg
test
adc
mov
jmp
jb
xlat
mov
mov
loop
(bad)
(bad)
test
jno
push
rol
push
mov
sar
jb
inc
in
in
mov
repnz
and
mov
mov
hlt
shl
push
movs
mov
std
les
(bad)
ficomp
sti
mov
jne
test
pop
push
popf
clc
mov
(bad)
pop
sar
loop
ins
cld
sub
popa
mov
(bad)
mov
jecxz
dec
hlt
and
push
sbb
lods
daa
out
iret
fstp
daa
and
dec
sub
adc
nop
in
mov
fldcw
adc
sbb
pop
adc
ror
jl
mov
push
fmul
movs
jmp
stos
push
dec
out
cmp
jge
aaa
(bad)
mov
sbb
jmp
out
popf
push
xchg
push
cmp
sub
push
push
sub
mov
xchg
out
aas
test
cmp
scas
mov
test
adc
std
cli
aas
push
not
(bad)
add
mov
arpl
popw
pop
sub
dec
in
(bad)
in
adc
sbb
mov
sbb
repz
mov
stos
mov
and
cmp
outs
jne
mov
lahf
dec
xrelease
sbb
mov
push
stos
dec
cwde
dec
inc
pop
loope
fmul
repnz
stos
lods
add
jno
jecxz
sbb
aas
cmp
mov
mov
cwde
pusha
popf
pop
neg
in
xor
add
dec
sub
mov
adc
and
and
sbb
(bad)
cli
fidivr
inc
leave
mov
mov
hlt
dec
ja
adc
lods
cdq
dec
or
loopne
inc
dec
jmp
pop
movs
mov
jle
push
ins
adc
aas
pop
cwde
and
adc
and
shl
imul
sub
(bad)
xchg
test
int3
xchg
mov
push
call
arpl
pop
mov
mov
mov
dec
cmp
dec
js
add
push
mov
lock
in
adc
dec
sub
jmp
jnp
fadd
scas
movs
vmwrite
aam
mov
add
aad
xchg
ds
cmp
pop
ror
cmp
jns
sub
adc
sahf
inc
out
or
or
mov
jmp
cli
dec
push
inc
xchg
adc
push
fsub
mov
inc
hlt
and
jb
dec
dec
cli
popf
or
call
jecxz
pop
or
sub
mov
cmps
push
push
pusha
xchg
sub
xor
jne
dec
or
mov
mov
or
std
mov
mov
jb
ficom
push
rol
jmp
sub
mov
dec
xor
pop
mov
out
and
arpl
push
popf
add
mov
inc
aaa
and
das
sub
fcom
or
imul
jge
ds
ss
stos
adc
add
fcomip
push
cmp
mov
pop
jge
mov
push
ret
fsubp
jmp
call
call
xor
and
sub
pop
adc
sahf
cmps
fimul
mov
mov
test
pusha
push
push
sub
xchg
pusha
ret
push
and
pop
or
(bad)
adc
(bad)
jae
in
(bad)
aad
ret
mov
std
and
mov
add
or
mov
jecxz
nop
mov
pop
fnstsw
mov
dec
or
daa
pop
mov
scas
and
pop
hlt
add
sbb
mov
push
ja
cmps
addr16
xchg
mov
jb
pop
shl
lea
out
call
add
and
hlt
pop
icebp
je
sub
pop
fild
bound
inc
sbb
jle
xor
cld
and
and
sbb
sub
sbb
leave
mov
daa
shl
out
(bad)
adc
mov
or
cmp
pushf
sub
cmp
or
pop
mov
(bad)
sbb
adc
imul
jmp
cld
sahf
lds
xchg
in
loope
pop
mov
fdivr
pop
in
loopne
ss
cmps
mov
int
mov
mov
or
sub
outs
cmps
and
les
adc
push
inc
push
or
mov
enter
js
lds
cmp
mov
es
into
popf
ret
out
add
mov
pop
mov
jnp
xchg
lahf
and
dec
sub
inc
rol
or
icebp
scas
test
cmp
mov
mov
mov
jl
mov
mov
pusha
jo
test
cwde
mov
aas
(bad)
in
jns
add
lahf
ret
(bad)
scas
mov
xchg
xor
or
mov
aam
jno
loopne
data16
inc
and
leave
dec
aam
mov
aad
ror
mov
rcr
scas
addr16
dec
push
jge
ins
retf
fisubr
imul
out
and
sub
mov
adc
fstp
xor
sub
xor
push
push
add
jmp
ja
es
mov
dec
add
mov
cmp
inc
mov
pusha
sbb
loope
and
pushf
sbb
mov
adc
xor
cmps
mov
sahf
test
leave
push
inc
lock
jns
add
mov
sbb
push
lods
dec
push
pop
add
loop
(bad)
std
or
sub
jb
fnstsw
pusha
mov
xchg
inc
inc
sti
inc
sbb
inc
test
cmp
bound
std
shr
mov
(bad)
mov
and
xchg
mov
mov
xor
adc
fdiv
ins
jge
mov
mov
mov
pop
or
jno
ins
test
sahf
push
jg
cmps
fsub
sar
aas
leave
mov
call
imul
push
or
cmp
ins
sti
cmp
cli
int3
pop
fist
ror
cwde
and
(bad)
stos
mov
pop
inc
xor
int3
add
mov
lea
cli
dec
aaa
pop
les
push
ds
add
neg
pop
ss
daa
outs
xor
fmulp
dec
clc
jmp
push
and
sbb
xlat
sub
in
popf
ffree
daa
in
not
hlt
mov
ror
into
ror
mov
enter
stos
mov
loopne
adc
in
icebp
movs
mov
xor
dec
xlat
fsubp
dec
cmp
cmp
dec
shl
push
add
mov
add
xor
dec
mov
stos
(bad)
test
xor
pusha
add
shl
ds
and
(bad)
out
jns
test
pop
jmp
mov
sub
push
test
mov
mov
mov
movs
dec
mov
xchg
xlat
test
push
jmp
repnz
mov
dec
inc
xor
gs
xchg
mov
push
mov
push
pop
test
inc
(bad)
adc
push
mov
mov
or
pop
lds
jp
sar
mov
rol
nop
pop
mov
outs
jo
xlat
inc
popf
mov
jg
popf
mov
jne
jmp
dec
pushf
jne
sahf
jno
in
int3
adc
into
pop
or
scas
in
adc
test
dec
push
popa
cld
cdq
xor
jmp
jns
jp
call
arpl
and
(bad)
adc
leave
pop
xchg
adc
inc
jnp
cmc
mov
mov
mov
mov
push
das
inc
inc
fldcw
aas
xor
test
pop
mov
or
mov
jg
push
sub
xchg
aas
ss
mov
dec
leave
add
pop
adc
or
mov
push
mov
xchg
shr
adc
imul
mov
or
and
pushf
jmp
imul
mov
push
fild
jmp
mov
cmp
xchg
add
jo
mov
aas
retf
adc
pusha
leave
cmps
icebp
adc
rol
mov
pavgb
and
push
call
lods
pop
mov
mov
fs
lahf
adc
cmp
mov
fcmovnbe
and
(bad)
enter
dec
or
mov
fbld
inc
mov
push
push
fcmovbe
std
sti
xchg
and
mov
mov
mov
imul
ds
dec
ja
dec
loope
lahf
cmps
in
retf
lods
mov
mov
shl
int3
xor
jl
aaa
ja
jb
cmps
ja
dec
pop
int
mov
adc
dec
xor
mov
jbe
sub
ins
ss
pop
cmp
adc
rcr
nop
movs
fidiv
inc
xor
sbb
clc
fimul
or
xchg
inc
in
retf
dec
xchg
lock
rcr
xchg
pop
mov
stc
jecxz
rol
test
jmp
and
xchg
call
pop
jg
xchg
icebp
add
push
les
pusha
add
shl
mov
sar
std
ja
pop
and
xchg
xchg
push
loope
and
or
popa
(bad)
cmp
cmp
xor
cmp
and
shl
icebp
in
jmp
pop
cmp
stos
mov
test
(bad)
imul
ror
mov
ret
sbb
std
xor
mov
aas
iret
ret
sar
(bad)
mov
and
sub
ins
xchg
mov
lds
xchg
push
iret
add
dec
hlt
repz
jecxz
in
xor
(bad)
(bad)
mov
rol
xor
in
mov
adc
repz
adc
xchg
push
xchg
(bad)
cli
mov
aad
cmp
push
fcom
cmp
fucompp
xchg
and
xor
sub
mov
je
addr16
dec
or
xchg
arpl
adc
inc
inc
push
icebp
push
icebp
xchg
jg
stc
loope
retf
imul
xor
cmp
dec
cdq
jb
arpl
iret
dec
movs
inc
dec
fbstp
(bad)
call
cmp
fiadd
nop
sub
mov
js
cs
cmc
xor
fwait
jmp
es
pusha
repz
xchg
and
jp
out
jecxz
push
mov
lahf
inc
ja
popf
push
mov
inc
sbb
std
test
loopne
repnz
pop
jge
int
loop
(bad)
xlat
cmp
jnp
sbb
popf
js
leave
cmp
fs
xchg
dec
std
dec
mov
mov
mov
not
sbb
mov
sub
xor
and
aam
dec
iret
stos
push
ja
pop
outs
cmp
inc
clc
and
push
jge
pop
mov
or
mov
(bad)
or
mov
fidivr
lods
daa
cli
adc
push
shl
mov
cli
lahf
mov
pushf
stos
pop
dec
mov
out
ret
inc
cmp
jl
push
not
std
cmp
cwd
mov
mov
enter
mov
inc
push
jmp
lock
inc
out
lea
(bad)
data16
rol
mov
pop
sbb
xchg
mov
add
das
jnp
lods
ins
out
inc
pushf
push
and
rcl
in
les
outs
stos
rcr
push
push
ins
xor
out
jmp
pop
scas
push
mov
fwait
and
aas
pop
popf
jns
jecxz
fcmovnb
push
sub
stos
add
out
adc
sbb
neg
lea
repz
push
mov
shl
ins
lea
push
jae
push
push
stc
push
shl
pop
push
inc
neg
push
ins
ficom
xor
mov
sbb
xor
je
scas
fdiv
pop
adc
pop
shr
hlt
or
sub
mov
adc
cdq
mov
in
sbb
push
jbe
in
das
jbe
icebp
fmul
mov
in
sub
mov
outs
ins
fs
dec
adc
dec
push
repz
cmc
mov
nop
sbb
leave
mov
sbb
cmps
push
lods
ins
or
(bad)
cmp
div
inc
sbb
and
cld
push
stc
cwde
push
(bad)
cmp
dec
jnp
shr
fimul
daa
jle
jns
xor
pop
inc
call
fld
or
data16
shl
and
mov
mov
pusha
xor
test
call
popf
sbb
mov
rcl
cmp
dec
sahf
leave
dec
sti
shr
jb
aaa
mov
cmps
mov
sbb
outs
adc
ja
jae
and
nop
in
aas
ja
xor
rcl
mov
jg
(bad)
iret
jmp
add
mov
jg
dec
iret
xor
fild
inc
mov
sub
lahf
pop
pusha
les
repnz
add
out
xor
cmp
sub
adc
mov
mov
or
add
and
jo
or
mov
(bad)
push
mov
aad
test
dec
iret
nop
xchg
int3
xchg
outs
adc
jp
mov
or
out
(bad)
fiadd
test
lods
adc
mov
arpl
inc
mov
sbb
adc
add
xacquire
(bad)
pop
mov
fwait
or
test
in
jl
nop
ret
into
into
in
mov
gs
and
mov
jne
rol
dec
test
in
sub
fwait
out
aaa
or
jmp
mov
mov
cmp
inc
icebp
jecxz
fst
cmc
jmp
jbe
cmps
pop
mov
mov
jge
mov
adc
cmp
gs
xor
lea
jp
and
xchg
push
mov
inc
pop
arpl
imul
mov
dec
mov
gs
je
cmp
push
or
sbb
xor
push
shl
cmps
and
xor
mov
jne
jle
movs
clc
sbb
aaa
xor
push
(bad)
jl
call
(bad)
movs
sub
test
dec
jno
or
cld
sahf
call
imul
arpl
lock
sub
sub
mov
fcmovu
push
mov
jns
dec
inc
int
mov
call
sub
mov
nop
push
mov
sti
cmps
mov
outs
scas
dec
mov
aam
mov
mov
loop
ins
inc
push
mov
and
pop
push
aas
out
ins
cld
data16
js
sub
ins
dec
pop
ret
outs
push
repnz
in
(bad)
cmp
fwait
daa
in
sub
ficom
xor
adc
fcomip
std
aas
xor
adc
in
push
mov
fisttp
add
and
je
enter
popf
cmp
xchg
sbb
and
movs
inc
pop
arpl
cmps
cmp
fwait
mov
inc
or
mov
adc
mov
stos
mov
iret
pop
mov
push
push
stc
lds
movs
add
leave
(bad)
adc
cld
jl
popa
(bad)
push
shl
xchg
pop
cwde
and
jecxz
popa
sbb
lock
adc
xchg
and
cs
and
mov
lahf
mov
xchg
and
jne
mov
dec
mov
pop
fs
js
and
cmp
out
push
inc
shl
cmp
cdq
xchg
loopne
cmps
xchg
adc
sub
xchg
mov
rcr
aad
add
xor
add
fbstp
out
je
lods
addr16
push
iret
xor
out
mov
sub
dec
cmps
popa
out
mov
jmp
cmp
pop
push
ss
(bad)
cdq
mov
xchg
pop
and
popa
out
add
jae
jp
mul
push
push
inc
push
cdq
mov
(bad)
fwait
out
push
loopne
js
call
outs
or
xor
xchg
dec
cdq
iret
pop
repnz
mov
pushf
lahf
jno
(bad)
mov
mov
psraw
popa
jo
test
jns
and
pop
int
xchg
cmp
clc
push
out
stos
add
xchg
sub
cmp
call
ja
cmc
lds
add
test
cmp
fninit
pushf
ret
repz
ss
je
adc
(bad)
lahf
xchg
imul
rcr
dec
mov
push
mov
int
cmps
inc
frstor
mov
in
xor
cmp
push
add
push
add
dec
stos
sub
imul
sbb
jae
lds
test
loop
fstp
ror
in
pop
pop
aam
inc
mov
inc
scas
inc
inc
loopne
and
pusha
push
push
mov
adc
scas
scas
add
stc
xor
daa
mov
push
sbb
push
mov
out
dec
jnp
inc
rcl
ins
je
push
push
adc
sub
or
xor
and
pop
test
sti
xchg
pop
push
pusha
and
nop
sub
addr16
not
mov
call
int
fisttp
ret
jne
in
sbb
xor
iret
hlt
or
and
or
xchg
pusha
inc
sbb
push
cdq
or
mov
(bad)
cmp
mov
sub
cmp
adc
and
(bad)
xor
inc
(bad)
push
cmc
add
pop
mov
call
aam
pop
ret
mov
mov
xchg
add
push
fmul
mov
mov
les
and
rcl
movs
repz
rol
xor
sbb
sbb
mov
inc
sbb
lock
hlt
push
dec
sub
mov
or
pushf
dec
or
fwait
sbb
inc
jge
cmps
stc
and
sbb
mov
(bad)
pop
loope
jbe
nop
dec
add
mov
and
jbe
ror
(bad)
xchg
mov
cwde
adc
mov
sar
inc
lahf
cli
int
popa
in
adc
gs
rcl
lods
xor
inc
mov
cs
mov
cmp
aad
jno
xlat
add
mov
ror
push
cs
jle
mov
movs
and
mov
pop
in
xlat
(bad)
js
cmps
jecxz
sbb
fcmovne
push
mov
adc
sbb
cmovle
xor
arpl
jbe
sbb
sar
sbb
cmp
sbb
cmp
jp
xchg
cmp
aas
sahf
mov
mov
jnp
retf
add
mov
xchg
mov
ret
mov
push
stc
sbb
(bad)
loop
ins
push
aaa
cld
jns
fst
in
mov
or
mov
add
jo
jle
xchg
push
push
jecxz
cmp
sub
out
pop
pop
push
(bad)
sbb
sub
test
movs
js
add
or
in
test
sbb
cli
xchg
cmp
cmp
inc
outs
leave
mov
jge
ja
pop
push
mov
or
es
js
cmp
dec
nop
push
pop
mov
ret
cmp
or
or
pop
adc
adc
cs
pop
and
dec
fucomi
push
or
jns
inc
(bad)
data16
sbb
push
adc
imul
daa
push
adc
sbb
jle
pop
add
dec
jmp
add
scas
sub
sub
stos
add
push
pop
imul
jp
in
movs
retf
inc
lods
pop
jmp
sub
dec
xor
sbb
mov
pop
movs
sbb
(bad)
pop
adc
out
in
pop
pop
adc
cwde
mov
sub
dec
jmp
dec
sbb
mov
iret
xchg
and
mov
sbb
mov
mov
jecxz
push
shl
dec
xor
test
aaa
(bad)
mov
jno
lock
push
mov
cmp
mov
or
inc
es
in
das
inc
call
pop
cwde
sahf
dec
cmc
add
jae
push
call
test
out
das
xlat
add
fwait
mov
xor
adc
out
cmp
lods
repz
xchg
mov
in
imul
je
jmp
sbb
fldcw
sub
inc
clc
and
ins
aad
cmp
ud0
or
xchg
movs
nop
movs
inc
jns
dec
je
cmp
cwde
mov
nop
cmp
rcr
mov
in
add
pop
xchg
xchg
dec
ins
xor
adc
in
bound
cmp
sub
jne
fdiv
jmp
out
(bad)
inc
lahf
xor
sahf
mov
push
xchg
sub
call
xchg
lahf
or
stc
inc
push
push
hlt
mov
or
lds
imul
adc
inc
paddw
imul
fs
mov
enter
jne
pop
inc
xchg
enter
fstp
cmp
std
jge
pop
out
das
cmp
adc
xor
xor
or
add
push
cmps
ja
and
xor
cmc
inc
push
in
dec
jno
jmp
stos
dec
inc
cmc
imul
mov
cmp
dec
jns
jne
mov
dec
sbb
adc
outs
add
or
cli
push
sar
push
push
cmp
mov
xor
xchg
in
loopne
fwait
rcr
or
inc
add
mov
xor
add
inc
aaa
dec
pop
push
pop
dec
dec
and
or
pushf
js
enter
ins
sbb
repnz
in
rcl
aaa
push
and
mov
int
xchg
pop
lds
outs
mov
mov
punpckhdq
lea
(bad)
or
or
out
shl
ds
mov
bts
xor
cmps
cmp
adc
imul
adc
sbb
ss
push
xchg
int3
xchg
push
or
fsub
jp
fdiv
cli
aad
scas
es
test
add
xchg
xchg
mov
(bad)
add
fnstcw
pop
jge
movs
and
(bad)
stos
imul
retf
aas
loope
xlat
fdivp
movs
add
jae
loopne
call
mov
imul
sbb
dec
out
jle
pop
ss
sbb
cld
push
cli
push
push
fcom
or
push
add
js
xchg
sbb
add
push
or
scas
clc
in
pushf
push
test
dec
fxch
aam
cmp
rol
cmc
stos
push
sahf
test
sub
adc
dec
adc
inc
fmul
les
adc
aad
pusha
fdivrp
daa
cwde
mov
test
arpl
push
jns
mov
dec
mov
scas
xor
icebp
mov
push
cdq
dec
fcomp
pop
push
xchg
icebp
fs
mov
enter
in
jae
sbb
daa
push
pop
rol
or
jae
mov
xor
movs
push
adc
ret
adc
aaa
cs
or
in
(bad)
and
pop
mov
pop
mov
test
dec
cmp
fwait
cmp
xlat
jno
mov
fistp
inc
xor
imul
push
in
mov
xor
imul
aam
mov
mov
xchg
adc
rol
cdq
xchg
ja
clc
jle
clc
jp
pop
loopne
pop
nop
xchg
add
mov
out
retf
jne
sbb
scas
fcom
pop
bound
das
and
mov
jl
add
retf
movs
test
pop
jmp
ja
push
int3
ins
scas
pop
gs
comiss
xlat
xchg
sub
shl
cmp
inc
fistp
retf
fist
stc
popf
lods
into
out
imul
inc
ins
adc
arpl
dec
inc
iret
pusha
(bad)
es
loopne
jl
sbb
inc
ss
cmp
xchg
cmp
or
out
xor
add
adc
out
push
push
sub
mov
sti
push
xchg
call
jg
and
xchg
fsub
jle
ins
xor
jmp
dec
pop
(bad)
xchg
out
int3
sub
adc
and
enter
(bad)
cdq
rcl
fnsetpm(287
or
neg
cdq
hlt
lahf
cli
xchg
sti
xchg
xchg
les
popa
outs
or
dec
cdq
cmp
xchg
outs
and
dec
dec
std
ficomp
aas
std
bound
xlat
or
test
and
mov
fsubr
aaa
mov
pusha
pop
xor
mov
sbb
not
shr
enter
cmps
mov
in
adc
and
nop
adc
cs
push
outs
xor
dec
imul
xor
xchg
stos
sar
repnz
ja
dec
test
hlt
rcl
sbb
fst
or
outs
xchg
push
mov
mov
xor
loop
xchg
jg
cli
mov
jb
into
dec
push
sub
fmul
add
loopne
movs
adc
jmp
out
fcom
stos
daa
ins
ss
or
mov
not
mov
imul
fcmove
add
mov
push
sbb
sbb
lds
cmc
add
sub
adc
shr
data16
ja
pop
add
sbb
stos
xor
cmp
sbb
cdq
movs
mov
test
mov
dec
mov
xor
add
lods
outs
test
out
scas
dec
movs
cmp
rcr
mov
sbb
fwait
cwde
retf
stos
dec
ins
in
push
inc
cwde
jb
fisub
and
pop
les
xchg
xor
mov
sbb
and
test
adc
xchg
call
sti
test
imul
mov
jp
jae
mov
adc
push
cmp
mov
sub
retf
cs
(bad)
sub
mov
pop
mov
mov
dec
pop
pop
rol
add
inc
jmp
lea
test
ss
jae
hlt
pop
icebp
cmp
pop
mov
cli
fidiv
push
outs
mov
movs
mov
sti
test
scas
and
outs
add
xor
cld
pop
lods
jge
ret
sub
test
inc
lock
loope
or
cmp
xor
xchg
sbb
mov
pop
sahf
cmp
mov
pop
(bad)
add
sti
push
out
push
adc
mov
lds
jl
add
inc
iret
add
call
lods
data16
adc
test
add
mov
and
adc
xchg
fisttp
lahf
cmp
daa
(bad)
outs
stc
jmp
sub
repz
inc
ja
mov
rcl
push
dec
fdiv
outs
mov
cli
cmc
sbb
jnp
inc
test
push
int
cmps
sbb
push
test
daa
movs
mov
retf
retf
adc
int3
retf
aam
add
addr16
inc
mov
sbb
and
mov
inc
lahf
jg
mov
pop
dec
cs
ror
inc
sbb
xchg
inc
cli
xlat
sbb
pushf
shl
test
xchg
ret
push
out
mov
leave
mov
sbb
xor
dec
sub
dec
(bad)
and
js
stc
xlat
pop
cmps
test
xor
jg
dec
js
adc
icebp
bound
or
loop
add
nop
pop
push
sbb
test
xor
retf
xor
mov
leave
push
imul
mov
sub
std
arpl
sub
call
fmul
mov
call
or
xchg
pop
jns
or
loop
xchg
into
mov
gs
cmp
fsub
stc
add
pusha
adc
xlat
lods
and
and
xor
add
push
xchg
or
out
sbb
enter
loopne
les
and
ins
(bad)
mov
mov
mov
xor
xchg
or
ds
mov
iret
clc
push
movs
stc
mov
int3
mov
leave
fs
pop
jbe
push
int
cmps
pop
jne
test
out
neg
pop
mov
xchg
(bad)
aas
ds
mov
push
mov
stos
dec
inc
sub
mov
xchg
pop
ds
gs
cmp
(bad)
lea
pop
psubsw
mov
push
ja
push
jne
pusha
adc
retf
out
popa
xchg
sbb
in
jp
test
push
out
dec
cs
js
mov
jecxz
add
sbb
pop
out
dec
push
scas
aam
jmp
dec
je
stos
cmps
imul
(bad)
retf
jmp
call
pop
shr
dec
pop
xor
push
cmp
inc
jb
pop
outs
icebp
jmp
or
jp
mov
sub
std
jp
shr
jecxz
jbe
sbb
pop
fld
daa
shl
push
aad
fimul
div
mov
loop
mov
jns
neg
icebp
dec
rcl
imul
into
xchg
out
fadd
lds
and
pop
ins
scas
mov
push
jmp
ins
ins
test
mov
imul
sbb
push
sbb
push
push
popa
fcmovnbe
adc
pop
ins
fisubr
sbb
jle
ja
or
inc
xchg
and
jmp
fcomp
or
cld
hlt
mov
scas
stc
mov
pop
mov
add
ins
dec
pop
inc
aas
loop
fwait
dec
jmp
loopne
mov
mov
cmps
popf
mov
jne
sbb
push
inc
sub
int
adc
mov
(bad)
or
push
jp
xchg
js
cwde
imul
push
pop
add
push
sahf
or
push
mov
(bad)
mov
sti
dec
xchg
test
mov
stc
ficom
or
add
jns
pavgb
scas
inc
ins
aad
mov
mov
cdq
add
call
or
lock
and
call
pop
pop
xor
pop
mov
push
mov
fbld
and
inc
shr
in
ror
ins
cmp
xlat
ins
and
add
xchg
int3
(bad)
test
jl
cs
stos
je
cld
retf
and
fcmovne
rcl
jl
imul
mov
sbb
fsub
xchg
fldcw
dec
ins
(bad)
vpshuflw
cmp
es
loope
ret
pop
daa
les
enter
les
push
and
add
out
mov
outs
mov
popf
pop
jo
xchg
dec
sub
inc
cmp
ins
mov
mov
adc
jecxz
or
or
mov
loop
jmp
cmps
lock
dec
shr
or
push
xchg
mov
jecxz
scas
frstor
mov
imul
nop
xor
cmp
fs
and
movs
or
div
jns
std
into
ficom
jb
dec
and
fcmovnb
push
mov
popf
test
and
movs
(bad)
aaa
xor
or
inc
popf
pusha
cmp
cmp
addr16
and
setle
inc
imul
shl
call
cmp
push
rcl
call
and
scas
(bad)
push
cli
aam
fs
cld
add
std
ss
mov
and
mov
dec
add
arpl
cmp
iret
mov
cmp
punpckhdq
lock
mov
push
mov
out
adc
das
adc
arpl
enter
mov
(bad)
and
sub
loope
popa
(bad)
mov
adc
dec
test
push
xor
mov
aad
scas
cli
add
pushf
pop
jl
xor
mov
ret
dec
gs
push
fstp
mov
repnz
add
xchg
clc
and
jne
mov
or
fwait
adc
push
cmp
cmp
out
pusha
enter
pop
mov
movs
stc
inc
cmp
or
fld
repz
pop
mov
jb
mov
sub
shl
in
div
(bad)
out
mov
mov
(bad)
fist
jne
(bad)
cmp
popf
or
sub
int
loope
test
mov
mov
jle
popf
sub
repz
sbb
adc
lock
ja
or
js
or
pop
add
push
dec
mov
(bad)
popf
ror
or
fcomi
cmps
sub
mov
xchg
inc
sub
add
sub
imul
push
push
sbb
sbb
lock
cld
mov
ins
aam
xlat
cmp
push
stos
iret
pop
push
cmp
lods
adc
fld
neg
push
mov
push
and
stc
out
or
jo
bound
inc
push
add
mov
scas
retf
push
jg
lds
jne
sub
mov
fwait
xor
movs
fcom
xchg
std
fadd
int3
pop
(bad)
pop
sbb
push
int3
add
mov
movs
call
xchg
cmp
fcmovu
ss
ss
adc
stos
mov
mov
pop
(bad)
in
out
push
adc
mov
not
stc
pop
inc
xor
add
rol
sar
or
inc
fwait
jnp
sahf
jmp
dec
ficom
imul
mov
push
xchg
mov
gs
hlt
fistp
xchg
cmp
cmp
sbb
mov
or
and
aaa
ret
and
sbb
mov
push
jp
lea
mov
lods
in
shr
or
(bad)
je
fistp
ret
sbb
into
pop
mov
je
jg
xor
jmp
pusha
std
add
push
scas
out
or
pop
lea
inc
aas
pusha
mov
int3
daa
push
and
(bad)
test
push
lods
xchg
or
(bad)
cmp
cmps
fisttp
imul
cmc
mov
pop
cmp
pop
adc
inc
sub
xchg
(bad)
jp
push
dec
fist
xchg
fisttp
cmc
mov
(bad)
std
cmp
ret
iret
xor
xor
sbb
jge
xor
or
dec
add
inc
cmp
mov
fiadd
or
outs
and
nop
pop
icebp
ss
mov
and
les
es
jns
not
cmp
pop
scas
pop
into
mov
mov
in
aad
jl
inc
pop
mov
mov
mov
mov
(bad)
xor
dec
or
stos
push
add
sahf
sub
add
and
push
sbb
dec
jge
fdiv
sub
jle
arpl
(bad)
cld
and
movs
mov
out
bound
arpl
cld
aam
inc
dec
and
cs
mov
jne
rcr
fist
(bad)
sub
sub
add
xchg
lock
xor
push
xor
xchg
pop
outs
or
(bad)
xor
xchg
mov
xchg
addr16
retf
mov
aad
cmp
pop
jne
inc
pop
mov
xchg
hlt
dec
int
sub
icebp
mov
jne
adc
sub
jns
fmul
outs
jmp
mov
loope
cmp
xchg
jb
push
hlt
lahf
adc
or
fstp
xor
pop
stos
fdivr
dec
sahf
(bad)
mov
retf
inc
rcr
or
mov
divps
loop
fstp
sbb
mov
jae
repnz
mov
push
cmp
pusha
dec
leave
cmc
pop
pop
add
ins
ror
fsubr
out
lea
lock
mov
jnp
ficomp
push
pop
cmp
xchg
sbb
repz
hlt
jne
mov
mov
inc
in
in
jecxz
pushw
lahf
shr
mov
daa
dec
cmps
push
rcl
xor
sub
stos
(bad)
push
(bad)
mov
js
push
imul
mov
xor
mov
mov
fsubrp
or
enter
iret
xor
iret
inc
dec
imul
dec
imul
pushf
jmp
imul
add
clc
(bad)
fst
call
fadd
out
inc
sub
push
xor
mov
sub
popf
out
sbb
aam
in
aam
out
pop
fild
sbb
loopne
stc
push
cmp
pop
jbe
stos
mov
arpl
arpl
ins
or
dec
in
and
cld
push
int
imul
or
mov
or
mov
aaa
inc
jecxz
jnp
mov
gs
xor
sbb
mov
mov
xor
jmp
mov
and
mov
or
pop
fldcw
lahf
mov
leave
mov
sub
cdq
push
and
iret
jb
imul
push
xchg
add
push
jp
je
xchg
pop
les
repz
jb
jb
adc
mov
loope
push
and
cmp
or
test
jp
jecxz
cmp
cmps
mov
sub
(bad)
je
ins
pop
push
and
jb
mov
sahf
inc
inc
sbb
xor
cmp
and
mov
pop
or
push
mov
mov
sbb
pop
pop
call
mov
scas
pop
cmc
add
in
repnz
dec
jecxz
mov
sbb
cmps
repz
xlat
cmp
xchg
mov
adc
sub
fs
add
jb
scas
dec
or
push
cli
clc
je
icebp
jmp
cmp
(bad)
retf
pusha
mov
or
cmp
sub
cs
bound
ror
add
fisubr
inc
retf
les
cmps
jns
test
mov
jns
and
mov
clc
pop
mov
jno
test
adc
push
mov
xor
rcl
mov
fucomi
jecxz
cdq
xchg
dec
xchg
inc
xor
pop
adc
in
outs
les
iret
cmp
pop
dec
jl
cmp
sub
mov
aam
inc
es
sbb
jp
cmp
inc
aam
mov
inc
or
inc
push
add
fwait
dec
movs
mov
stc
repz
mov
sbb
out
mov
out
adc
js
mov
adc
pop
movs
hlt
sub
inc
push
fcmove
bound
aaa
hlt
ins
test
fistp
add
out
cli
retf
es
jmp
or
push
jnp
dec
hlt
inc
push
cli
or
mov
mov
push
les
or
outs
leave
addr16
in
fidiv
shl
mov
pop
mov
lea
and
pop
sar
sbb
scas
mov
pop
xchg
not
fidivr
and
jmp
jmp
test
inc
cmp
ja
in
jp
and
inc
into
dec
mov
(bad)
outs
push
mov
pusha
retf
mov
stos
push
jmp
sbb
and
ins
pusha
pop
aas
push
xor
ret
jle
mov
and
pushf
in
sbb
ins
stc
jmp
ja
lods
int3
mov
push
xchg
fistp
sub
fsubp
retf
dec
cmp
test
xor
dec
scas
fld
jg
gs
xor
cmps
rcr
sbb
ds
sub
mov
int3
daa
xchg
dec
ss
cmp
imul
out
dec
sbb
xchg
rdpmc
daa
mov
lods
stos
outs
popa
pop
leave
inc
into
loopne
fbstp
xchg
addr16
in
dec
jle
adc
push
lock
mov
in
dec
cmps
dec
inc
into
xchg
adc
(bad)
mov
rcl
jnp
adc
out
and
loop
sbb
dec
cmp
mov
scas
mov
sub
enter
icebp
mov
lods
fnstcw
sbb
repz
pop
sbb
(bad)
sbb
ror
inc
xlat
call
push
pop
mov
push
add
out
pop
push
out
ds
(bad)
pop
or
xor
cmps
cs
pop
pop
sub
out
lahf
test
scas
mov
popf
pushf
pop
cmp
ins
lods
sahf
out
and
xchg
mov
xor
dec
test
adc
jne
mov
fist
pop
or
xchg
gs
and
sahf
int3
dec
(bad)
xor
(bad)
in
and
mov
xchg
mul
aas
dec
cmp
and
cmp
mov
outs
cmp
mov
repnz
lock
jl
movs
xor
sub
push
call
or
mov
(bad)
and
mov
mov
frstor
pop
xchg
sbb
or
outs
jecxz
leave
push
push
in
push
out
arpl
add
mov
or
fnstenv
dec
out
and
aam
pop
les
out
push
outs
test
cwde
out
stc
pop
repnz
mov
iret
jnp
cs
lock
mov
or
(bad)
aam
push
push
je
add
pusha
xor
rcr
movs
lods
jp
push
sub
push
or
sbb
ins
sbb
sbb
lock
push
stos
pop
in
ins
(bad)
jg
mov
add
shl
adc
call
loope
pop
ficom
in
xor
cmp
ins
mov
(bad)
imul
add
and
mov
push
jno
jbe
and
or
in
push
rcl
aas
test
imul
mov
or
cmc
xchg
mov
test
mov
je
add
daa
fsubp
and
into
popa
repz
add
xchg
ret
pop
inc
in
je
shl
jmp
mov
cmp
sub
aaa
(bad)
and
int
mov
mov
sar
sub
jl
pop
nop
imul
mov
xchg
and
pop
neg
mov
xchg
fwait
es
retf
aad
xor
fdiv
xor
mov
xor
test
mov
cmp
lods
in
fist
xchg
ins
leave
jb
xor
mov
lock
dec
fwait
mov
pop
dec
cli
repnz
dec
pushf
nop
push
mov
out
mov
jg
and
(bad)
cld
or
loope
cmp
cld
ret
dec
push
push
lock
add
fcomp
mov
(bad)
fcomp
inc
jnp
pop
mov
leave
and
pop
das
mov
pop
add
sub
mov
cdq
xchg
push
out
cdq
scas
jbe
sub
or
mov
out
aaa
xor
push
mov
push
icebp
push
add
jns
and
mov
iret
fs
xchg
outs
scas
sub
fisub
mov
ror
jg
push
fstp
(bad)
xlat
xchg
fnstsw
xchg
movs
sbb
xor
pop
sub
mov
test
shl
ins
iret
into
(bad)
clc
xchg
ss
ss
push
in
in
test
scas
mov
repnz
jae
cs
adc
lahf
test
jecxz
(bad)
mov
out
add
and
add
jmp
sub
mov
pop
dec
aad
retf
adc
add
aam
aad
and
cmp
sub
xor
add
scas
push
add
xchg
mov
adc
push
or
sub
sub
mov
lods
inc
sbb
leave
fiadd
jns
inc
xchg
push
push
sbb
sti
push
ret
std
jne
test
adc
mov
ja
mov
cld
jmp
outs
xchg
inc
rol
bound
cld
adc
(bad)
cs
pop
setae
lahf
(bad)
or
push
mov
or
pop
popa
mov
xor
and
sub
pop
sbb
add
sbb
cmp
or
cld
sahf
mov
xchg
push
ins
mov
sbb
cmp
adc
mov
inc
(bad)
jae
dec
xchg
dec
gs
jmp
pop
cmp
mov
pop
lahf
jle
or
add
and
mov
jno
in
or
pop
jo
or
and
neg
ja
aam
call
mov
cmp
loopne
or
xchg
aam
test
sbb
loopne
fs
dec
add
inc
inc
sub
pop
sahf
bsr
arpl
mov
mov
mov
mov
push
into
hlt
adc
bound
xchg
cmp
std
int
dec
or
getsec
mov
aam
adc
add
jo
mov
test
or
push
out
jmp
lods
xor
inc
clc
cli
mov
lock
cmp
jecxz
jns
fnsave
cwde
dec
cdq
out
mov
pop
mov
cmp
and
(bad)
out
faddp
hlt
in
into
xlat
pushf
lods
in
mov
shl
adc
xor
sub
inc
mov
push
aad
inc
dec
aad
cmp
leave
lock
and
ror
sbb
retf
(bad)
pop
ja
sub
pop
push
fwait
aam
test
(bad)
data16
push
sbb
loopne
push
push
pop
ja
dec
test
add
sbb
js
mov
mov
sbb
into
xor
nop
mov
xchg
loop
repz
loope
dec
inc
cmc
cmp
xlat
pop
pop
push
mov
arpl
ret
and
adc
mov
out
and
sbb
cdq
lods
and
int
pop
arpl
mov
mov
ds
outs
cmp
mov
xchg
jmp
or
(bad)
xor
mov
ret
jo
das
sub
outs
data16
fld
jecxz
cmc
(bad)
repz
fistp
in
movs
mov
daa
ja
xchg
add
fadd
mov
mov
and
mov
xor
add
popa
jge
xchg
pop
pavgw
(bad)
sub
in
inc
xor
iret
ror
mov
pop
and
mov
in
ror
mov
cmp
pop
jl
add
outs
or
pop
pop
xchg
push
xchg
inc
mov
mov
bound
push
jne
or
retf
sti
jmp
add
dec
aaa
addps
(bad)
out
mov
test
fwait
push
add
arpl
pop
mov
mov
test
and
fdiv
mov
xor
mov
mov
xor
imul
cld
out
dec
pusha
hlt
inc
pop
int
shl
out
dec
test
xor
jno
pop
popa
xor
or
mov
test
outs
data16
idiv
enter
sub
shr
aaa
(bad)
cmp
xchg
push
fisubr
cmp
lea
stos
fiadd
add
sub
xchg
movs
sub
scas
push
(bad)
xlat
xchg
cmp
jo
out
daa
leave
js
inc
fidivr
pop
bound
inc
lods
adc
jno
push
cmp
out
movs
dec
lock
pop
cmp
repz
cld
loopne
lock
push
pop
popf
xchg
push
inc
dec
movs
xor
jl
xchg
fstp
repnz
mov
js
pop
rcl
inc
and
sub
push
xchg
ss
pop
dec
icebp
cmp
adc
or
ror
out
mov
call
rol
push
pop
aaa
inc
in
arpl
mov
push
mov
pop
cdq
in
aad
jmp
jp
adc
shr
fild
cmp
pop
lods
sahf
dec
adc
or
mov
iret
mov
sbb
or
lock
or
call
out
(bad)
pop
nop
movs
fadd
retf
and
aaa
xor
mov
loope
xchg
scas
or
inc
test
dec
rcr
outs
(bad)
inc
add
push
xchg
in
mov
movs
retf
add
inc
ins
std
sahf
xor
les
mov
or
shl
mov
rol
sub
fisub
jge
add
cwde
outs
push
(bad)
popf
das
cli
mov
fadd
rol
mov
pop
push
loope
sub
or
ret
out
cdq
stos
icebp
sub
push
adc
(bad)
aaa
push
test
loope
cmc
ud0
cmpps
daa
jmp
rep
and
test
ret
sbb
mov
into
je
pusha
mov
mov
ficomp
inc
mov
add
test
stc
sub
ins
das
scas
test
sbb
js
out
sar
sub
mov
mov
mov
inc
mov
mov
loop
xchg
loopne
test
inc
lods
mov
call
loope
inc
(bad)
(bad)
xchg
rcl
pop
enter
sbb
add
xor
test
adc
(bad)
pop
lds
xchg
and
push
cmp
push
mov
adc
mov
shl
push
int
fistp
and
mov
cmp
les
push
inc
push
adc
ret
sbb
shl
out
enter
push
aad
movs
in
sbb
sbb
push
dec
daa
jmp
xchg
sub
push
movs
dec
mov
mov
movs
cs
cmps
jo
xchg
dec
xlat
pop
dec
xchg
loopne
jo
stc
jmp
std
pop
push
or
loopne
test
mov
cmps
pop
repnz
mov
mov
shr
sub
imul
xor
push
adc
loope
fs
mov
test
xchg
icebp
push
outs
xchg
outs
pop
sub
icebp
adc
pop
cdq
jle
sti
int3
cmps
shr
xchg
jnp
push
addr16
pusha
out
mov
adc
xchg
cmps
popa
xchg
retf
jp
push
sbb
(bad)
sub
xchg
aas
mov
or
pop
cmp
ins
test
shl
jns
mov
bound
cmps
(bad)
fiadd
and
test
dec
data16
jae
xchg
jmp
movs
push
and
mov
sbb
je
loopne
lds
mov
or
adc
sub
std
js
dec
mov
cmp
std
cmc
stc
pop
popa
fdivrp
scas
fbstp
mov
cmp
jne
sub
xor
loopne
sbb
sub
push
dec
push
push
cmp
sub
sar
sbb
imul
mov
lahf
pop
(bad)
jo
cs
mov
push
shr
ss
inc
push
xor
(bad)
xor
rcl
pop
outs
and
vmovss
jle
xlat
fisttp
sbb
ds
repnz
pop
fcomp
inc
nop
inc
mov
and
popa
cmp
mov
adc
xor
cmp
or
fld
out
add
xchg
sub
idiv
stos
jmp
cmc
lock
push
xchg
ins
pop
cmp
std
mov
push
xor
push
dec
mov
push
push
call
mov
cdq
push
push
adc
add
and
dec
fcmovnu
xlat
scas
jne
jp
and
outs
pop
and
ins
fldenv
in
cmp
push
and
xchg
jno
cmp
cli
jp
fs
dec
pop
inc
pop
pop
xchg
loopne
cdq
add
fsub
mov
xchg
call
repnz
inc
dec
jle
mov
aad
xor
repnz
test
pushf
dec
pop
fdiv
pcmpgtw
xchg
jle
inc
(bad)
sbb
push
cmps
lea
sar
jp
test
dec
or
dec
xchg
sbb
sbb
outs
loop
push
push
js
mov
imul
call
push
adc
sbb
mov
sub
imul
dec
inc
retf
(bad)
dec
out
mov
mov
mov
push
and
pop
xor
cmp
xor
fs
xchg
push
shr
pop
int
cmp
mov
push
test
inc
enter
int3
shl
mov
pop
jl
test
scas
es
ins
mov
rcr
lods
pop
jns
(bad)
mov
hlt
adc
push
out
inc
sbb
shr
sub
adc
fmul
gs
cmps
dec
lods
inc
aas
aaa
fmul
dec
movs
cwde
sbb
mov
cmp
cmp
pop
repz
addr16
xor
mov
fcom
in
retf
pop
repz
dec
and
mov
daa
icebp
aam
push
adc
inc
inc
mov
jl
mov
xchg
stos
movs
call
cmp
scas
jae
ffree
pusha
dec
std
loope
out
repz
or
xchg
push
arpl
lods
and
leave
mov
nop
mov
test
in
and
xchg
outs
dec
adc
shl
(bad)
xor
and
ret
push
xchg
or
jb
das
and
into
mov
pop
xor
add
xor
shr
cli
int3
out
push
jns
mov
push
call
hlt
inc
stos
xlat
fiadd
inc
pop
cmp
clc
push
cli
or
inc
call
pusha
xchg
fisttp
fmul
sar
jno
mov
mov
clc
cli
bound
mov
push
push
fdiv
ja
mov
sub
pop
les
inc
cld
jmp
sbb
pushf
mov
jge
dec
pandn
ret
push
add
icebp
fwait
mov
imul
pop
dec
ins
lods
cmp
xchg
xor
mov
and
mov
(bad)
repnz
je
lods
icebp
and
test
rcl
cmp
pusha
mov
stos
xchg
sbb
sub
adc
inc
xchg
icebp
test
push
test
mov
ror
jl
mov
rcr
pusha
sahf
out
out
ret
bound
inc
dec
pop
mov
movs
mov
pushf
xchg
out
out
sbb
ja
sbb
(bad)
stos
adc
sahf
mov
sub
add
dec
mov
dec
cmp
dec
add
pop
cli
pop
idiv
es
and
test
leave
jmp
inc
xchg
jb
int3
pop
jb
mov
push
inc
mov
mov
add
pushf
push
sub
div
dec
sbb
int
out
cmps
test
and
xchg
mov
or
jg
xchg
push
inc
push
inc
push
xchg
mov
dec
add
cld
mov
jecxz
loopne
dec
mov
cli
out
xchg
ds
push
dec
cwde
pop
imul
pop
xor
xlat
pop
or
pop
clc
and
cmp
push
xchg
out
clc
inc
cli
and
movq
jnp
mov
lock
inc
push
pop
loope
pop
cs
xor
fsubr
sbb
movs
pushf
mov
jl
and
mov
test
pop
addr16
popa
loop
hlt
sub
and
call
mov
xor
jmp
push
inc
lahf
outs
add
test
ds
mov
jp
jo
mov
retf
inc
mov
shl
jb
push
inc
and
jl
push
setbe
ds
cmp
pop
enter
sub
jmp
adc
fcomp
jmp
ja
jp
cmp
dec
dec
ror
adc
or
fsubr
shl
inc
mov
cli
(bad)
sub
arpl
jge
sbb
arpl
fldcw
repnz
push
lea
or
icebp
stos
jns
aaa
jmp
out
pop
jo
xor
mov
fist
(bad)
pop
xchg
outs
inc
add
adc
ror
mov
and
sti
add
das
sub
nop
repz
xchg
mov
iret
add
sar
dec
mov
ret
push
jns
iret
cmps
adc
shl
or
aas
in
mov
or
inc
in
or
adc
sub
ficomp
jne
out
cmps
ss
jmp
mov
xchg
jne
inc
xor
add
bound
(bad)
mov
inc
push
add
mov
push
cmp
jp
sar
test
pop
jo
sbb
pop
dec
pusha
mov
xor
sbb
add
repnz
enter
(bad)
xor
xchg
mov
lahf
mov
inc
call
jbe
out
adc
sbb
fs
sub
dec
call
outs
inc
or
dec
dec
stos
(bad)
lock
scas
(bad)
dec
in
sbb
xor
ins
ins
jnp
retf
inc
mov
mov
xor
das
movs
fwait
(bad)
sub
sbb
push
outs
pusha
sidtd
cdq
leave
pop
jge
neg
or
mov
mov
aam
in
imul
or
outs
push
inc
adc
mov
cmps
ficom
adc
stos
cmp
std
jmp
popf
scas
in
pushf
aam
cmps
push
jne
mov
xchg
dec
push
or
sbb
es
xor
in
push
push
out
cmp
or
pop
(bad)
repnz
(bad)
jmp
and
lea
in
inc
adc
aaa
fdiv
aam
mov
int
jmp
mov
jg
add
add
push
sbb
push
test
sub
dec
push
movs
test
es
sub
pop
(bad)
pop
cdq
sar
pop
pusha
in
imul
test
xor
mov
outs
and
or
jp
dec
mov
adc
test
mov
movs
leave
lea
add
xchg
push
in
and
and
fist
in
xor
(bad)
xchg
jmp
ds
cdq
(bad)
(bad)
sub
mov
retf
mov
xor
sbb
in
sub
iret
cmp
sti
jg
inc
cmps
push
xchg
leave
sub
fcom
es
(bad)
jno
lods
popa
lds
and
sbb
repz
xchg
loopne
popf
ins
popf
pop
scas
add
(bad)
hlt
lea
mov
lock
shl
mov
add
jl
in
std
xchg
add
lds
sti
jmp
(bad)
mov
pop
inc
mov
or
lock
add
dec
sub
inc
jmp
and
aam
push
cmp
mov
addr16
jl
mov
xlat
loopne
sub
add
push
mov
outs
jmp
repnz
dec
inc
daa
test
cld
jle
push
shl
(bad)
push
ss
or
test
dec
dec
mov
loop
mov
or
(bad)
pop
rcr
xor
xchg
jno
sbb
jae
out
imul
mov
jbe
jmp
hlt
push
rcl
and
inc
mov
int3
cmp
in
xchg
pop
cmp
test
popf
not
sbb
mov
adc
or
dec
aas
pop
push
jmp
dec
xlat
adc
pop
daa
mov
jo
mov
push
stos
pop
cwde
cwde
sbb
in
mov
pop
cmp
lea
push
mov
fs
lahf
ja
gs
test
sbb
lea
adc
mov
mov
adc
and
outs
or
jg
es
outs
in
sti
std
shl
call
xor
lods
ror
mov
xor
adc
lods
dec
adc
mov
jl
gs
inc
mov
aaa
and
or
jecxz
sub
push
xchg
sbb
into
sar
add
pop
jb
lods
jno
add
jae
fs
inc
pop
mov
jmp
lods
add
push
mul
retf
jo
ds
adc
mov
pop
sub
sbb
pop
hlt
cs
mov
adc
mov
mov
pop
sbb
adc
(bad)
loope
or
stos
(bad)
test
dec
sub
cmp
shr
ss
push
outs
pop
sahf
and
das
adc
sbb
xor
dec
mov
in
lods
pop
mov
or
jmp
pop
or
cmp
in
mov
loopne
fmul
xor
call
xchg
fs
mov
dec
pusha
retf
jge
and
fistp
ss
mov
repz
mov
test
mov
cs
or
arpl
sub
popf
pop
or
fistp
jbe
lea
mov
xor
fcomp
call
jo
in
leave
es
pop
stos
or
je
pop
push
adc
out
xchg
fs
mov
mov
stos
retf
and
inc
mov
scas
and
pushf
outs
daa
rcl
and
or
lds
clc
inc
jecxz
call
jp
fst
xor
push
add
shr
mov
out
dec
aaa
int3
addr16
add
cmp
xchg
std
jle
inc
push
and
xchg
stc
popa
(bad)
cs
push
and
scas
inc
stc
outs
sbb
and
sub
mov
icebp
daa
mov
xchg
fisubr
sub
int
push
cmp
sub
mov
cwde
scas
pushf
rcr
dec
lea
aas
popf
sub
mov
jp
mov
cmp
adc
sub
pop
mov
mov
mov
or
fcom
push
fwait
mov
bound
not
cdq
push
push
lods
xor
fs
rol
into
cmp
leave
test
inc
pop
(bad)
std
fisttp
and
adc
lods
xlat
aaa
inc
cmp
hlt
scas
(bad)
mov
iret
fldenv
mov
leave
adc
push
lods
push
lock
out
(bad)
in
fcomi
out
cmc
dec
imul
outs
jp
call
cmp
(bad)
pop
fcmove
cmp
cwde
sbb
fdivr
push
pop
xor
push
dec
and
test
mov
xchg
aad
inc
pushf
jle
xchg
cmp
mov
jmp
int3
lock
(bad)
cmps
aam
lea
push
pop
cmp
shr
adc
(bad)
test
mov
stc
retf
push
push
aaa
xchg
push
or
mov
movs
add
nop
inc
bound
jbe
fcmovnbe
jmp
push
idiv
push
fcomi
loope
loopne
ins
xchg
lds
cmp
ins
sbb
push
push
push
jb
fsub
add
push
outs
push
aad
xor
adc
and
and
mov
in
dec
adc
dec
cdq
mov
ficomp
mov
push
pushf
fmul
(bad)
shl
push
lock
loop
in
ret
shr
inc
lock
cli
jecxz
mov
inc
cmp
sbb
jmp
add
cmp
mov
in
popa
ret
mov
mov
inc
test
in
sbb
dec
and
jo
sbb
in
mov
and
mov
cmp
cwde
call
outs
xor
add
push
ret
and
jns
rcr
out
pop
(bad)
scas
lods
add
fdiv
or
inc
fisttp
movs
arpl
jecxz
pop
xchg
and
pop
stos
push
daa
sub
pop
sub
or
rol
(bad)
jp
xor
repnz
mov
in
fst
cmp
xor
movs
out
out
lods
xor
mov
mov
in
loopne
gs
lods
lahf
add
mov
fisttp
push
ficomp
mov
ss
pop
mov
mov
inc
stc
sbb
movs
ss
cs
push
inc
mov
inc
mov
xor
std
les
jne
xchg
pop
sbb
cmp
out
loopne
in
fcom
push
sar
push
pop
sub
jmp
std
xor
cmp
xchg
repnz
dec
inc
push
scas
sbb
sar
add
push
icebp
sub
mov
cmp
cmps
daa
or
or
xor
pop
out
ret
push
jle
mov
xchg
ficomp
push
arpl
and
(bad)
int3
out
adc
outs
pop
fld
add
dec
inc
int
pushf
or
repz
mul
mov
lea
jo
jp
add
aaa
movs
mov
aad
mov
fs
mov
add
mov
les
fld
and
mov
repnz
or
mov
mov
add
and
cmps
mov
ror
adc
push
adc
jmp
or
xchg
inc
xor
sbb
pop
fsub
add
fldcw
xchg
fcmovb
out
or
dec
out
or
aam
jmp
cmp
out
inc
mov
push
nop
cmps
ffree
pop
inc
inc
jge
mov
sub
sahf
fistp
jp
xchg
fst
cmc
push
loopne
push
es
fdivr
ins
jae
pop
cli
or
pop
inc
dec
mov
fist
mov
push
mov
fimul
dec
(bad)
std
push
xchg
fiadd
loop
push
ret
mov
dec
dec
and
push
inc
test
movs
push
sbb
mov
sbb
or
mov
mov
sar
xchg
sub
add
push
or
or
imul
xchg
bound
pop
and
or
stc
call
jecxz
xor
mov
(bad)
and
push
mov
repnz
arpl
lock
sbb
push
mov
push
xchg
inc
inc
pushf
sub
and
popf
adc
ror
icebp
inc
xor
outs
jecxz
pop
or
jge
xchg
or
icebp
clc
mov
fnstsw
push
xchg
inc
or
inc
dec
cmp
daa
xor
scas
pop
mov
stc
push
jnp
outs
ret
imul
lahf
das
xchg
(bad)
sub
add
ins
cmp
sahf
movs
lods
imul
pop
div
pop
dec
dec
pop
jb
cdq
and
inc
stos
adc
leave
dec
dec
and
add
mov
mov
mov
lahf
jbe
cwde
call
pop
pop
push
mov
repz
into
xor
mov
outs
adc
cs
and
fs
daa
out
cmc
pop
push
add
fist
lock
mov
mov
adc
enter
mov
movs
add
sub
cmp
idiv
rol
cdq
jae
push
mov
jbe
adc
ja
adc
mov
dec
adc
jmp
nop
pusha
sbb
xchg
xor
or
rol
ret
ins
(bad)
imul
xor
pushf
lds
jmp
push
movs
xor
cs
jecxz
mov
call
cmovge
pop
cmp
dec
sub
pop
pop
lock
inc
pop
xor
adc
outs
dec
shl
in
loop
cld
mov
cmp
xor
in
jmp
mov
shl
pop
shl
fisttp
test
cmp
(bad)
aas
inc
in
push
and
xlat
adc
imul
push
jnp
lds
push
repz
ds
mov
shl
push
in
daa
mov
mov
mov
out
sbb
jg
adc
aaa
xor
pop
and
mov
cdq
or
aaa
inc
(bad)
mov
push
fimul
adc
push
test
loop
push
push
test
es
dec
ror
pop
and
test
imul
mov
jno
jg
push
bound
jmp
xchg
and
loopne
mov
pop
pop
das
sbb
dec
sbb
push
jno
pop
sbb
shr
test
add
mov
pop
aam
or
ret
out
adc
push
retf
call
pop
cs
dec
jae
xchg
shl
mov
in
jbe
sub
test
dec
ss
push
mov
mov
and
lods
rol
cwde
xchg
mov
jb
retf
push
outs
icebp
shl
sub
(bad)
int
mov
xchg
in
(bad)
jbe
adc
xor
pop
mov
or
xor
in
sahf
cld
add
jno
dec
xor
stc
std
pushf
retf
stos
ror
pop
popa
mov
test
and
mov
dec
dec
and
or
std
xchg
dec
jns
jge
sub
jmp
fisubr
scas
pop
outs
dec
int3
dec
push
pop
rcr
neg
out
push
sub
sar
test
shr
cmc
adc
cmp
scas
cmp
dec
xchg
adc
sti
imul
or
jno
(bad)
push
pop
call
ror
repz
cmp
pusha
fnstcw
adc
mov
leave
inc
xchg
js
out
ret
jmp
inc
js
xor
dec
stc
sub
mov
cmp
push
sub
call
lods
pop
cmps
in
sub
or
mov
xchg
pop
add
mov
pusha
(bad)
dec
and
das
(bad)
popf
mov
xlat
pusha
jb
pop
push
cmp
and
pop
cld
sub
or
outs
add
mov
or
cwde
dec
xlat
das
mov
(bad)
and
xor
mov
jmp
fisttp
adc
into
sub
popa
xchg
and
mov
xchg
cmp
xor
or
mov
push
retf
sbb
out
or
jae
inc
xor
fldenv
sbb
mov
jne
leave
pop
xor
or
into
mov
or
arpl
sub
aas
lds
jge
mov
icebp
and
call
and
and
sub
sub
mov
cdq
mov
mov
adc
lahf
sub
aad
popf
int
push
sub
push
mov
jne
out
cmc
das
lods
in
adc
mov
and
jb
fbld
push
push
test
pop
mov
in
in
dec
test
sub
nop
cmc
enter
in
into
pop
and
lods
aas
pop
lea
rol
or
loope
in
jg
lahf
(bad)
pushf
push
cmc
dec
fistp
mov
cmp
push
inc
sub
out
push
ins
pushf
pop
stos
inc
ins
(bad)
popa
push
and
imul
push
outs
retf
and
aas
stc
stos
add
sbb
fwait
dec
or
sub
dec
sub
int
out
aas
sub
fstp
in
pop
fdivrp
cmc
les
xor
bound
mov
or
and
hlt
inc
jge
push
mov
xchg
mov
arpl
mov
xor
cdq
retf
push
enter
in
jp
call
cld
mov
sbb
lods
test
cmp
or
fnstcw
and
repnz
inc
fdiv
das
pop
sub
cmps
cmp
inc
push
xchg
cli
lods
enter
cdq
mov
xchg
out
leave
xor
loop
(bad)
jmp
mov
jle
xor
push
add
lock
add
sub
aad
idiv
inc
leave
fldenv
adc
cmp
push
jl
xor
pushf
nop
inc
and
out
leave
jmp
data16
jne
jl
test
(bad)
cmp
push
xor
das
js
lods
jbe
sbb
sti
sub
xchg
mov
cmp
rol
(bad)
jae
aaa
scas
fmul
mov
icebp
push
mov
mov
test
xchg
in
push
shl
add
sub
xchg
and
es
(bad)
pusha
mov
push
cmp
sar
in
aad
into
sub
call
xor
mov
push
or
cmp
call
xor
loopne
ja
xchg
add
push
inc
pop
cmp
lods
adc
and
xchg
loop
xchg
(bad)
and
lahf
mov
xchg
mov
(bad)
pop
dec
cmp
mov
jle
outs
fsincos
and
jnp
gs
add
add
vorps
test
test
cmp
out
push
sub
pop
adc
movs
xor
sbb
cmp
fild
mov
aaa
push
(bad)
inc
or
and
stc
xchg
adc
adc
(bad)
dec
dec
lahf
iret
mov
or
mov
xchg
push
xchg
cmpxchg
fnstcw
mov
es
outs
repnz
ficom
xor
lock
popa
xor
xor
pop
and
mov
fild
xchg
mov
mov
cld
es
dec
xor
mov
fld
leave
(bad)
dec
and
ret
or
sti
cmps
cmps
mov
and
cmp
movs
mov
cmp
(bad)
movs
or
mov
sub
add
dec
dec
inc
arpl
and
sub
push
(bad)
mov
loop
adc
jnp
sbb
loop
in
shl
cmc
les
inc
jo
ins
lea
call
retf
fnstsw
bound
mov
test
cmp
dec
push
out
or
mov
sbb
mov
xchg
push
fcom
shl
je
sub
mov
psadbw
mov
jl
push
add
jecxz
mov
jecxz
jne
fldcw
mov
or
xchg
pop
adc
lods
bound
aaa
add
mov
stos
cmp
cmp
push
add
mov
inc
xor
sahf
pop
pop
or
cwde
sbb
shr
scas
pop
sahf
xchg
stos
loopne
or
into
leave
(bad)
retf
or
rcl
cmp
ins
jns
xor
and
test
in
sbb
pop
sar
or
call
mov
nop
inc
gs
xor
stos
shr
cmps
jp
mov
fldcw
data16
sbb
test
mov
pop
out
inc
daa
scas
div
rcl
jae
in
cld
and
xchg
mov
loopne
sub
or
or
inc
ds
rol
movs
lock
out
aas
or
stc
jmp
leave
pop
dec
std
sti
and
xchg
adc
inc
fwait
mov
cmp
lods
cmps
popf
sbb
or
jo
scas
cmp
repnz
not
sbb
sbb
in
cs
leave
sub
retf
int
mov
push
xor
cli
ds
xchg
mov
sub
leave
adc
fld
or
xor
mov
arpl
out
fs
xor
or
mov
out
fdiv
es
call
push
imul
cs
xor
and
lods
jl
mov
xchg
test
das
cmp
js
mov
repnz
xor
add
sbb
dec
ror
aad
add
mov
bound
cmp
call
xlat
pop
shl
push
mov
out
and
je
add
out
sub
xor
sbb
(bad)
fsub
push
jbe
mov
sub
test
sbb
jge
fsub
mov
push
dec
jmp
pop
test
inc
(bad)
or
xlat
cdq
dec
rcr
inc
loopne
sti
pop
cmps
dec
sub
not
test
push
std
or
ja
(bad)
(bad)
not
xchg
shl
mov
and
and
pop
sbb
sbb
ja
(bad)
and
mov
ror
pop
cmc
movs
and
aas
add
ds
pop
or
sub
mov
movs
dec
fimul
(bad)
xor
iret
push
sub
(bad)
repnz
mov
inc
sbb
push
mov
fwait
sbb
mov
pop
and
inc
push
jecxz
mov
add
mov
jbe
cmp
sub
arpl
nop
inc
sbb
sbb
jp
jmp
cdq
mov
(bad)
sbb
test
sbb
pop
sub
test
cs
or
jae
and
mov
in
loopne
push
jnp
nop
mov
dec
jns
test
aas
mov
imul
les
dec
cli
adc
xchg
stos
sub
pop
or
cmp
pop
or
pop
out
jbe
cld
push
add
and
mov
stos
jae
add
xchg
mov
mov
(bad)
sbb
mov
js
mov
cli
shr
test
pop
outs
add
pop
pop
jmp
cs
int
push
mov
adc
adc
cdq
mov
nop
sbb
aam
fcomp
call
cs
imul
adc
sahf
pusha
jmp
loope
dec
mov
mov
mov
push
(bad)
lds
and
rcl
test
movs
sahf
push
es
fistp
dec
adc
stos
pusha
ret
inc
push
cmp
push
jmp
jb
and
imul
xchg
and
adc
jmp
scas
fidivr
or
fwait
cmp
adc
stos
or
mov
xchg
dec
add
aas
jno
retf
arpl
(bad)
mov
js
ins
cmps
bound
mov
in
aaa
mov
repz
and
cmp
fwait
jmp
ret
stos
or
std
stos
rcr
sbb
rcl
outs
add
sahf
test
sbb
sub
fcmovu
out
ins
retf
call
imul
pop
fisttp
xor
and
out
js
mov
sub
(bad)
dec
test
pop
(bad)
xchg
adc
fmul
mov
mov
mov
movs
ds
iret
loop
pop
pop
aaa
in
movaps
retf
fiadd
aam
mov
xchg
das
sbb
sar
movs
test
ss
add
jo
dec
dec
mov
movs
adc
inc
in
sub
push
sub
dec
sub
sbb
loop
xor
pusha
shl
call
push
sub
(bad)
xchg
mov
sahf
inc
jns
nop
out
ja
lock
sar
pop
dec
inc
enter
retf
xchg
ret
movs
dec
gs
scas
lock
loope
xor
out
ficom
scas
std
cld
mov
and
lds
cmps
jle
mov
es
xchg
sub
mov
cmp
inc
scas
dec
dec
int3
aam
cmc
add
add
aad
push
mov
lods
pop
mov
adc
mov
xor
in
mov
hlt
ss
jmp
out
push
xchg
jmp
lods
sub
sub
xchg
lahf
cmp
jmp
(bad)
sub
outs
pop
icebp
add
push
xor
xchg
repz
lea
data16
into
xor
dec
out
dec
nop
leave
mov
inc
out
inc
btc
xor
fld
xchg
inc
outs
(bad)
jmp
leave
inc
pop
in
mov
pop
ins
mov
jo
jmp
cmp
mov
inc
sub
adc
adc
inc
pop
add
movs
dec
in
in
out
arpl
xor
bound
adc
jmp
sbb
dec
xor
out
rcl
mov
loope
pusha
test
sub
xor
xchg
push
xor
sub
out
cmps
loop
fisub
call
fbstp
imul
jae
aaa
mov
test
lds
aam
ins
ja
sbb
push
daa
popf
mov
inc
call
and
call
frstor
pop
in
mov
mov
in
xchg
inc
sbb
mov
mov
out
mov
push
int
pop
xor
push
mov
inc
jmp
fwait
pop
cmp
adc
fcomp
cmps
mov
sub
adc
and
mov
bound
mov
cmp
jnp
pop
push
inc
and
movs
fwait
dec
in
mov
enter
lds
dec
in
out
push
pop
mov
pop
sbb
mov
loopne
mov
mov
mov
enter
test
div
push
mov
cs
sbb
inc
xor
and
je
cmp
gs
es
pop
xchg
add
aad
pop
jnp
mov
pop
(bad)
jbe
mov
add
or
je
cmp
pop
mov
mov
ins
popf
mov
fstp
mov
adc
mov
cmps
cmp
push
fld
mov
push
xchg
sub
outs
aas
sbb
js
or
xor
mov
retf
mov
out
sbb
cmp
pop
xor
xchg
fidivr
pop
mov
adc
mov
test
sub
nop
sbb
sbb
fldz
test
cmp
dec
shr
jg
sahf
mov
xor
(bad)
fdivr
int
sbb
stc
cwde
push
cli
mov
push
inc
pop
js
inc
jmp
out
stos
xchg
cmp
fsubr
repnz
aad
inc
dec
popa
xchg
jbe
out
add
sub
aas
scas
aad
jge
adc
and
in
mov
mov
ret
push
lods
cmp
in
scas
inc
enter
test
lods
pushf
mov
mov
ja
dec
iret
into
in
pop
cmp
out
std
movs
cli
dec
adc
in
sub
adc
(bad)
fxch
or
xor
neg
jo
push
push
inc
icebp
mov
xor
and
mov
push
aad
ret
(bad)
mov
in
adc
inc
pop
cmp
push
jecxz
mov
push
aaa
mov
pop
mov
fsubr
loope
(bad)
fist
aad
mov
add
mov
lock
push
test
adc
or
xor
push
loope
std
sbb
mov
call
and
sahf
xchg
adc
or
mov
xchg
dec
push
cmps
push
mov
mov
test
mov
(bad)
(bad)
shl
inc
icebp
lock
cli
cmps
mov
sbb
sbb
(bad)
mov
in
and
retf
jg
adc
cmps
ins
andps
jp
das
mov
cmc
push
xchg
(bad)
daa
mov
push
test
mov
push
push
scas
sbb
or
lods
movs
rol
cmp
leave
shr
or
mov
push
mov
aad
pusha
xor
sbb
adc
or
jns
or
fstp
bound
xchg
jmp
dec
repnz
pop
pop
ret
leave
xchg
jl
es
popf
movs
sub
sbb
mov
push
scas
js
jns
cld
xchg
or
retf
lds
es
shl
dec
xor
ja
xchg
mov
imul
into
adc
jge
popw
xor
xor
rcr
pop
pop
js
adc
adc
mov
dec
in
pop
push
or
sahf
inc
les
add
in
or
or
ds
mov
mov
mov
add
dec
mov
jo
sar
ret
mov
test
and
iret
or
out
push
je
mov
pop
lods
adc
sar
daa
retf
in
shl
jl
push
push
cmp
cli
inc
pop
cmp
xor
rcr
(bad)
inc
test
cmc
pop
xchg
jp
mov
xchg
xchg
pop
(bad)
jmp
mov
and
xchg
out
push
push
mov
add
pop
mov
mov
jecxz
push
push
retf
jg
adc
jg
mov
push
mov
xchg
inc
(bad)
pop
adc
push
retf
lods
outs
or
push
xor
and
push
pop
imul
mov
adc
mov
movs
dec
xchg
pop
cmc
sub
int3
add
mov
into
sbb
pop
pop
pop
mov
pop
std
bound
int3
scas
popa
das
int
xor
sar
mov
adc
pop
mov
cmp
dec
mov
jns
inc
cld
(bad)
in
dec
nop
jns
push
mov
nop
push
dec
cld
test
lahf
inc
ja
mov
mov
rcl
sti
jae
mov
out
add
or
sub
mov
fdivr
adc
aaa
aas
scas
inc
mov
sub
test
adc
stos
xlat
das
inc
cmp
shr
mov
mov
jl
ss
shl
jae
inc
or
rol
push
mov
jb
call
repnz
push
jno
jge
lods
xor
lea
ret
or
push
cmp
ja
call
loop
es
ret
jmp
in
add
adc
aam
inc
test
pop
jl
cmp
xor
(bad)
jne
cmp
xchg
icebp
sbb
js
in
push
and
fcmovne
xchg
daa
cld
pop
lock
pop
mov
(bad)
stc
enter
or
xchg
mov
sbb
mov
retf
retf
not
ins
jmp
sbb
pusha
pop
das
aas
idiv
add
adc
jne
aaa
xchg
sub
rcr
jne
xor
ins
push
mov
push
repnz
rcr
add
call
cmp
ficomp
add
sub
lea
fcmovb
fidivr
scas
sbb
inc
and
adc
repnz
sar
jl
cli
test
ins
xchg
add
sbb
ja
inc
fistp
in
test
scas
lock
mov
xor
pop
sbb
push
and
push
and
cmp
push
mov
jge
call
push
lea
mov
sahf
push
mov
sbb
clc
ror
lds
adc
and
sar
shl
stos
or
aam
ret
ficom
test
pop
retf
inc
push
inc
(bad)
arpl
aad
mov
into
(bad)
shl
aas
xchg
pop
arpl
(bad)
fmul
sahf
jne
mov
test
in
popf
xor
xchg
aas
xlat
hlt
arpl
int
(bad)
mov
pop
mov
xor
out
outs
loopne
xor
rcl
mov
in
mov
retf
pop
cmc
into
and
fist
das
sbb
jl
dec
add
aas
xchg
and
imul
push
leave
xchg
dec
push
test
aam
pop
jb
xor
add
in
xchg
sahf
dec
add
mov
test
mov
in
and
pop
retf
mov
jnp
and
call
or
add
fs
inc
out
mov
adc
sub
add
ins
scas
aas
dec
adc
xor
jl
test
in
push
ror
xor
jae
into
(bad)
inc
int
out
pop
popf
pushf
mov
retf
movs
popf
inc
add
ins
mov
jmp
repz
hlt
sti
mov
icebp
add
inc
mov
jmp
imul
jl
popa
outs
lahf
pop
test
cdq
jmp
xor
push
shl
xlat
cdq
fld
inc
xor
mov
jmp
arpl
sub
std
or
mov
sbb
sbb
push
sti
and
mov
(bad)
jnp
push
cmp
inc
xor
daa
dec
pop
mov
dec
dec
data16
push
cmps
push
loop
(bad)
in
ja
adc
push
loop
cmc
sahf
push
cli
sbb
ret
pop
movs
xor
fsubr
and
push
adc
adc
outs
loopne
and
stc
push
and
mov
jmp
sbb
aam
call
in
sbb
inc
push
mov
stc
int3
adc
outs
push
data16
inc
sbb
and
in
dec
jmp
cdq
jg
mov
mov
ja
push
mov
sub
into
xchg
push
loope
(bad)
fldenv
test
fwait
adc
ds
push
jle
xchg
adc
push
adc
stos
lds
pop
inc
mov
ins
add
adc
test
ret
mov
sbb
pop
push
imul
dec
aaa
rcl
sti
pop
leave
adc
inc
pop
xor
clc
push
jo
ins
mov
fsubr
rcl
xchg
and
and
imul
stos
or
jae
movs
inc
ret
push
and
cmps
scas
std
xor
dec
jno
and
arpl
mov
sub
pop
xchg
shl
in
(bad)
in
inc
lods
pop
and
es
adc
es
outs
in
xor
push
xchg
mov
sar
mov
and
sbb
add
inc
jle
ins
ins
sbb
popa
neg
call
dec
js
sbb
outs
or
call
sub
push
jno
mov
cli
mov
lock
pop
sbb
xchg
push
xchg
(bad)
xchg
test
jmp
and
push
and
or
sub
push
inc
fucomp
rcr
adc
into
inc
int3
mov
sub
(bad)
imul
push
int
icebp
into
dec
jb
sti
cld
mov
jo
aaa
test
sbb
dec
call
(bad)
(bad)
push
in
sub
clc
push
outs
pushf
call
adc
cmp
cs
sub
imul
test
lds
test
iret
js
test
call
xchg
dec
jb
shl
mov
inc
and
out
push
out
mov
std
in
fbstp
jo
dec
(bad)
pop
mov
scas
push
jg
(bad)
nop
xchg
inc
(bad)
mov
mov
mov
sub
dec
adc
or
sbb
icebp
pop
and
nop
xchg
aam
fild
scas
fadd
nop
xchg
xor
inc
jno
mov
cli
dec
xchg
popa
dec
lahf
adc
inc
cmps
or
dec
in
bound
(bad)
mov
mov
popf
or
aam
(bad)
std
push
in
mov
int3
mov
push
push
arpl
pop
ja
xor
add
(bad)
(bad)
cmc
pop
push
(bad)
ja
and
jg
cwde
pop
add
fld
jmp
adc
pop
fdivrp
test
jne
dec
in
scas
ds
cmps
int3
xchg
jmp
movs
movs
xchg
rcr
cmp
or
pop
fstp
mov
cmp
push
popa
jmp
mov
sub
dec
mov
cmp
shl
(bad)
stc
adc
mov
cmps
mov
fdivr
push
lods
loopne
sbb
adc
sub
sub
mov
inc
inc
and
lock
ins
adc
add
int
out
jnp
dec
xor
cmp
push
ret
cmps
push
aam
mov
adc
and
or
inc
inc
sbb
mov
and
push
inc
out
sbb
xor
or
push
cmps
stos
popa
stc
pop
xchg
pop
add
fidivr
pop
ror
mov
mov
in
sub
xor
daa
in
add
aaa
jnp
cmp
retf
mov
inc
xor
jno
out
lea
ins
push
aaa
cli
xor
dec
call
push
popf
mov
ret
aad
call
fadd
pop
movs
es
les
loop
adc
dec
ds
adc
in
push
fimul
out
sbb
out
addr16
retf
or
mov
mov
arpl
add
xchg
mov
nop
adc
jnp
xchg
test
inc
fs
fiadd
bound
in
add
jg
add
es
jl
cmp
dec
cmp
dec
cmp
jmp
pop
lods
(bad)
nop
cmps
mov
mov
addr16
and
adc
mov
jecxz
icebp
mov
pop
(bad)
loope
inc
and
or
or
scas
ds
(bad)
cmp
popa
sub
and
movs
es
clc
lods
pop
jmp
inc
mov
lea
imul
adc
outs
pop
retf
adc
sub
sbb
sbb
inc
aam
retf
and
or
rcl
xchg
mov
jmp
xlat
pop
retf
push
or
mov
lods
sti
fcomp
(bad)
mov
movs
fdivr
ss
cs
stos
movs
adc
cmp
ins
and
daa
xchg
dec
cmp
xor
cmp
mov
push
xchg
sbb
les
or
int
xor
call
hlt
dec
call
xor
push
fsub
call
push
xchg
push
pop
imul
mov
push
or
push
neg
sbb
popf
scas
and
ins
shl
clc
out
call
sbb
push
or
dec
mov
mov
arpl
sbb
jl
and
sub
int
sbb
retf
xchg
fstp
mov
jnp
xor
pop
mov
pop
ds
add
ins
sbb
lds
loope
xchg
inc
push
nop
mov
icebp
popa
pushf
out
mov
imul
aam
stc
push
dec
fcmovb
add
out
mov
xchg
into
push
sbb
xchg
ror
sub
inc
sbb
lock
inc
push
outs
repz
(bad)
cwde
iret
pop
cmc
lock
ins
pop
sbb
imul
pop
outs
mov
push
dec
xchg
mov
hlt
lock
repz
sub
cmp
mov
addr16
pop
push
cmp
inc
add
pusha
out
fwait
xchg
dec
fwait
mov
xchg
cmp
cmp
data16
mov
push
sub
ret
push
adc
in
pop
cmp
xlat
lock
mul
out
sbb
xchg
in
and
ret
mov
lahf
loop
sub
mov
aad
cld
js
mov
imul
push
mov
sahf
inc
xchg
pop
pusha
leave
dec
jmp
inc
cs
mov
(bad)
push
adc
push
mov
or
in
pop
(bad)
lods
pusha
mov
xor
and
and
lods
push
int3
into
adc
(bad)
enter
cmps
jecxz
dec
adc
ret
cmc
inc
inc
lods
and
cdq
les
pushf
out
gs
xor
aam
aam
aas
cmp
xchg
lds
ins
cmp
mov
aaa
or
push
add
inc
scas
adc
jecxz
add
outs
mov
dec
push
outs
push
xchg
jmp
adc
dec
adc
push
xchg
pop
icebp
fild
out
retf
sub
js
and
mov
pop
test
sbb
push
loopne
jecxz
arpl
xchg
ja
pop
loop
jnp
test
in
scas
popf
push
cwde
mov
ret
nop
add
popa
iret
cwde
cli
lods
mov
lds
fisubr
jo
aas
loope
mul
call
add
(bad)
mov
pop
and
ins
xor
xor
pop
dec
in
push
lods
(bad)
fimul
fidivr
(bad)
mov
ret
fimul
push
sbb
sbb
aam
sahf
aas
pop
xlat
dec
aam
xchg
pop
xchg
dec
mov
and
or
lea
loop
pop
xchg
(bad)
int
xchg
call
xor
sub
add
mov
scas
and
xchg
or
call
shl
xor
outs
clc
in
pop
pushf
xchg
pop
pop
cmps
loope
cli
rol
jle
fmul
clc
pop
sbb
(bad)
xchg
test
add
aad
scas
int3
add
pop
aas
sub
pop
je
jg
leave
sub
call
push
dec
pop
ss
xchg
dec
pop
add
pop
je
sbb
aam
fadd
popa
dec
jg
and
and
dec
clc
xchg
inc
adc
addr16
movs
mov
dec
mov
cs
jmp
xchg
stos
xchg
push
cmc
test
sub
push
mov
xchg
jae
jmp
push
xor
xchg
sar
packuswb
stos
xchg
lahf
or
xor
rcl
mov
aas
lea
fwait
xchg
bound
add
sub
pop
pusha
mov
shl
adc
jle
pop
fsubr
fbld
clc
test
add
stos
pop
call
push
ja
outs
lods
push
je
jo
cmps
fdiv
sub
imul
xor
shr
movs
mov
fwait
push
leave
cmps
and
inc
push
inc
pop
lods
outs
repz
mov
in
out
xchg
pop
(bad)
(bad)
lods
fwait
mov
inc
(bad)
mov
dec
mov
aas
icebp
jmp
jecxz
cs
in
adc
int
(bad)
(bad)
dec
(bad)
das
push
add
popa
pop
and
clc
push
adc
(bad)
out
pop
jae
push
and
xor
loopne
mov
lea
fdivr
push
frstor
xlat
sub
in
cmp
or
sub
(bad)
sti
push
ficomp
sub
mov
fwait
ret
shl
retf
div
push
xor
fimul
neg
sbb
cld
xor
mov
je
inc
cmc
pop
push
add
xor
fs
lock
mov
jae
mov
mov
popa
xchg
cmp
ror
adc
ror
ja
cmps
call
imul
pop
data16
jge
sub
lods
mov
aam
call
(bad)
mov
jne
sub
xor
int3
jge
test
sbb
leave
xor
test
out
jae
stc
sub
shr
test
fwait
test
and
cmp
ss
mov
pop
push
jmp
lods
ins
call
test
jnp
lods
or
(bad)
into
pop
mov
sbb
in
daa
mov
lea
cdq
pop
jbe
jge
push
mov
iret
bnd
mov
cmp
shl
xor
out
pop
push
gs
lahf
ds
in
imul
daa
in
cld
sub
stos
out
sbb
data16
stos
je
mov
jbe
and
cmps
xor
outs
outs
int
bound
in
push
fistp
(bad)
dec
cwde
adc
rcl
xor
sbb
mov
pop
(bad)
sbb
popa
add
and
jecxz
cmp
mov
out
aaa
outs
retf
and
(bad)
pop
xor
mov
push
xchg
or
rol
mov
mul
sbb
iret
fwait
daa
jae
cdq
stos
lea
cld
mov
fwait
pushf
popf
push
mov
call
fst
ds
cmpxchg
dec
test
fist
fbstp
add
and
test
push
or
or
jnp
fnsave
add
cli
movs
icebp
adc
dec
in
retf
pop
push
scas
or
dec
adc
push
dec
xchg
out
pop
inc
int3
gs
in
setns
aam
gs
imul
outs
jo
(bad)
jmp
daa
mov
test
sub
hlt
loope
cmp
add
cmp
adc
mov
enter
test
add
cmp
fnstsw
dec
pop
push
movups
mov
shl
mov
and
cdq
shl
mov
ins
loope
or
cli
pushf
and
xor
out
sar
dec
into
retf
add
lock
push
jns
or
mov
cmp
lds
lds
pop
jnp
mov
addr16
iret
pop
aam
aam
push
outs
jae
mov
cmps
mov
sbb
adc
stos
and
mov
fucomi
cmp
or
scas
lds
rol
and
imul
test
test
xor
int
push
out
test
or
jl
add
dec
adc
retf
push
mov
sbb
sub
clc
jno
push
fld
sti
rcr
mov
mov
inc
inc
sti
loop
and
xchg
mov
or
out
pop
jecxz
and
mov
dec
mov
jnp
mov
fidiv
aad
xchg
mov
loopne
(bad)
fiadd
dec
jg
cmp
sbb
fstp
sbb
jo
icebp
push
dec
sbb
int3
xor
sub
add
gs
mov
lea
sub
pop
adc
inc
jge
push
popf
dec
mov
pop
mov
test
jmp
jecxz
add
push
dec
inc
push
int
out
mov
jg
and
mov
and
fwait
mov
cmps
and
xchg
inc
cmp
ror
dec
lea
jle
lahf
pop
or
shl
sbb
and
cmp
jnp
mov
inc
out
ins
and
in
adc
imul
cmp
ret
cld
std
sub
clc
cmp
and
xchg
(bad)
scas
ret
push
aam
xor
lea
mov
popa
mulps
(bad)
call
xchg
jge
ds
test
inc
and
es
pop
mov
and
sbb
pop
shl
stos
cdq
sbb
hlt
push
and
fdivrp
repnz
inc
int3
loopne
add
mov
jns
mov
pushf
adc
fnstenv
add
sub
dec
dec
(bad)
lock
mov
cmps
mov
addr16
ret
ror
add
xchg
jb
and
add
and
and
ror
inc
or
movs
lds
push
or
ss
cwde
mov
outs
loop
nop
add
jp
sub
mov
xchg
call
gs
test
mov
xchg
out
aad
bound
f2xm1
popa
int3
adc
add
and
dec
test
mov
and
stos
popf
or
lds
iret
lods
or
sbb
lods
xor
sahf
mov
inc
mov
dec
stos
cmps
js
dec
cli
fldenv
mov
lods
dec
push
dec
push
out
mov
lods
inc
adc
xor
jmp
ja
es
fadd
lods
push
js
push
aad
test
mov
mov
fst
xor
pop
dec
aaa
pop
imul
push
xchg
(bad)
int3
push
jbe
rcl
cmp
xor
cmp
inc
push
sub
hlt
ds
cdq
pop
popa
ins
push
fiadd
inc
psrlq
mov
mov
sbb
jnp
popa
bound
ret
ja
loopne
pop
xchg
stos
xchg
shr
xor
push
enter
inc
popf
lea
arpl
retf
clc
add
add
or
(bad)
in
mov
test
std
cld
mov
push
repnz
call
icebp
xchg
jo
jns
jbe
loope
inc
aam
jmp
jl
jle
xchg
(bad)
loopne
push
and
mov
popa
and
mov
xor
push
popa
mov
sub
jl
pop
jmp
adc
adc
push
cmp
adc
mov
xchg
lea
test
jne
ins
mov
div
retf
push
fnstcw
mov
sbb
sti
js
mov
outs
push
cmp
adc
pop
(bad)
xchg
or
mov
xor
mov
aam
pop
xor
pop
xchg
(bad)
out
or
cld
add
or
add
push
scas
stos
mov
xchg
mov
jp
push
push
iret
call
aad
jb
mov
idiv
mov
or
int3
xchg
mov
cmps
test
push
out
adc
pop
movs
mov
adc
repnz
mov
and
sahf
sbb
bound
jb
es
jmp
cli
xlat
xchg
popa
push
pop
fstp
mov
jmp
xchg
xor
mov
sbb
cmp
adc
(bad)
xchg
jo
dec
cld
ins
retf
ret
pop
xchg
daa
xchg
pop
push
add
xor
cmp
mov
or
cmps
in
out
ins
and
jne
and
push
test
cmp
pusha
mov
or
sbb
pop
mov
je
jb
push
gs
dec
inc
jo
dec
into
mov
or
ret
inc
mov
jno
bound
mov
xor
dec
sub
mov
dec
icebp
sahf
adc
aaa
sbb
in
test
xor
xchg
push
cmp
cmp
aaa
ins
popf
sub
pop
pop
aam
pop
mov
ins
push
mov
dec
js
(bad)
lea
sbb
mov
mov
sub
push
jnp
mov
stos
jns
enter
mov
(bad)
mov
mov
loope
and
mov
mov
repz
rcl
imul
aad
(bad)
std
lds
mov
iret
jl
nop
pushf
iret
fisttp
nop
test
cmc
adc
scas
in
ins
mov
pop
pop
stc
daa
sbb
mov
rol
fld
pop
xchg
addr16
jne
push
xchg
add
aaa
jo
rol
sbb
lods
mov
call
jecxz
pop
fcmove
sbb
ins
je
call
inc
xchg
aad
mov
xor
mov
add
push
pop
push
cmp
jno
pop
xchg
ja
xchg
loop
test
push
sti
dec
pop
(bad)
(bad)
pop
xchg
int
movs
out
sbb
cli
(bad)
out
test
and
adc
pop
retf
jnp
hlt
int
loopne
fs
jmp
(bad)
bound
fidivr
ja
add
inc
and
fsub
inc
icebp
mov
xchg
test
fmul
xchg
jae
in
gs
mov
sub
push
ins
fs
pop
loopne
xor
xchg
or
mov
rcl
inc
gs
mov
arpl
adc
pop
aam
enter
pop
push
lods
in
mov
cwde
ret
aam
mov
or
add
push
or
sub
cmps
retf
out
in
sahf
dec
(bad)
push
shl
cmp
ja
jnp
fidivr
cmp
mov
inc
xchg
xchg
and
pop
cld
cs
cmp
gs
clc
dec
popf
push
scas
call
test
popa
jmp
ret
movs
push
dec
xchg
add
movs
dec
retf
movs
sbb
lea
imul
pop
add
mov
test
adc
mov
xchg
fsubr
(bad)
dec
lods
inc
(bad)
movs
paddd
jo
loopne
in
xor
cmp
shl
je
fimul
cmp
sub
add
out
loopne
rol
inc
jp
mov
cld
mov
pop
cs
call
inc
je
(bad)
shl
aam
mov
cmp
mov
mov
lods
(bad)
nop
add
xchg
xor
retf
cmp
and
sub
xchg
out
scas
cmps
xor
mov
jb
shl
ret
xchg
push
mov
imul
into
mov
test
sti
push
pop
jo
pop
fld
lods
retf
pop
xchg
ror
xchg
int3
push
pop
(bad)
and
pop
pushf
jecxz
mov
(bad)
hlt
ds
das
cmovp
mov
sbb
loopne
jmp
xchg
leave
adc
sub
mov
sub
int3
call
scas
sub
xchg
and
fnstsw
lea
mov
cmc
xchg
sbb
nop
or
dec
imul
retf
jl
cmp
xchg
data16
not
add
or
repz
adc
mov
jae
cwde
sar
mov
push
out
inc
aam
cli
jl
mul
js
xchg
ins
add
sbb
fnstcw
test
cdq
mov
inc
movs
shr
fnstcw
push
movs
add
int3
inc
test
add
stos
aaa
inc
xchg
fstp
sub
jmp
add
rol
cmc
cs
jmp
dec
mov
push
mov
clc
push
test
mov
(bad)
mov
mov
xor
lea
xchg
jmp
retf
test
ror
mov
adc
cmp
(bad)
sub
or
sub
fsub
inc
jbe
gs
sbb
sub
call
pop
pushf
push
xchg
cmp
(bad)
push
sub
mov
xchg
mov
push
out
retf
cdq
xor
mov
pop
lods
test
inc
loope
xlat
sub
cmps
jl
push
mov
jb
mov
sbb
or
push
and
fucompp
inc
pop
mov
(bad)
or
sbb
sbb
int3
xchg
shr
fs
movs
add
clc
mov
add
cdq
data16
adc
add
sbb
(bad)
stos
enter
mov
popf
mov
inc
push
(bad)
out
je
popa
add
les
lods
test
test
inc
retf
test
ret
mov
das
pusha
adc
and
xlat
push
sub
stc
push
je
shl
popf
push
call
rcr
cmc
xchg
lods
dec
test
ins
inc
mov
inc
aad
jno
in
xchg
cwde
hlt
ins
ins
in
popa
xor
mov
imul
jmp
pop
sbb
fcomp
push
jle
das
mov
cmp
test
xor
push
jmp
jmp
es
mov
and
or
and
jecxz
inc
fsub
test
aaa
je
rcr
pop
mov
jne
inc
sbb
pop
ins
xchg
xor
jo
and
fdivr
(bad)
daa
not
jmp
mov
lds
pop
mov
dec
mul
fst
inc
ficom
sar
sbb
or
nop
mov
pop
xchg
bound
mov
cli
inc
mov
mov
mov
shl
inc
rcl
push
and
mov
xchg
test
lods
imul
mov
add
jg
call
cmp
daa
in
mov
sbb
xor
and
outs
jmp
lea
push
push
cmp
sbb
adc
cmp
ja
daa
add
shl
call
ins
int3
xchg
(bad)
fbstp
rcl
mov
sub
mov
sub
mov
cdq
pushf
(bad)
xchg
bsr
adc
and
sbb
add
outs
and
outs
cmps
dec
push
cmps
xchg
mov
sar
mov
fcmovb
fisttp
movs
arpl
das
mov
sub
int3
add
nop
jbe
mov
js
mov
xchg
push
pushf
push
fcom
jg
loop
retf
mov
iret
add
and
clc
add
adc
mov
add
loop
xchg
out
pop
std
in
adc
pushf
dec
js
leave
fstp
xor
js
push
in
mov
clc
push
jmp
ss
loopne
xchg
(bad)
call
icebp
push
stos
mov
mov
imul
dec
xchg
xchg
push
lods
xor
addr16
call
fisubr
sub
retf
and
push
push
jno
jnp
cmp
call
dec
sub
pop
bound
out
cmp
sbb
call
scas
fcmovu
aaa
retf
ret
push
jbe
mov
icebp
sar
xlat
retf
aad
xchg
push
jmp
pop
ffreep
pop
movs
pop
movntq
mov
push
pusha
cmp
push
into
fild
cmp
inc
test
aad
shr
retf
xchg
push
(bad)
fild
xchg
mov
fist
mov
push
xor
push
xor
mov
lods
cmp
inc
jmp
or
cmp
cs
in
test
sbb
je
cmps
dec
outs
dec
loopne
mov
ja
bound
lods
(bad)
mov
sub
stos
mov
mov
mov
or
push
andps
push
push
push
int3
(bad)
test
ja
xor
xor
add
pop
mov
scas
mov
(bad)
icebp
std
bound
add
push
adc
mov
iret
push
dec
lock
mov
or
(bad)
mov
jne
les
aas
dec
mov
(bad)
cmc
sub
dec
sbb
popa
and
pop
jge
jnp
cmps
inc
xor
mov
xor
icebp
adc
jb
ins
jbe
cs
sbb
imul
jb
mul
xchg
inc
stos
jg
mov
cs
rcpps
mov
nop
jmp
sub
adc
repz
shl
shl
push
in
xor
cmp
xor
xchg
mov
(bad)
call
ficom
cmps
cmp
add
push
loop
pop
sub
mov
retf
sbb
inc
jmp
push
das
cmp
jno
cmp
fabs
pop
dec
push
fs
fs
out
or
lahf
pop
xchg
mov
call
js
neg
pop
aas
mov
pop
inc
aaa
test
ja
outs
cmp
ret
push
fist
mov
fwait
pop
out
test
bound
inc
adc
add
sub
shr
mov
out
cmp
mov
ss
jb
into
jl
sbb
outs
(bad)
sbb
mov
mov
xor
and
aaa
adc
or
mov
or
cmp
into
jmp
(bad)
call
and
add
inc
jle
adc
push
push
lahf
mul
or
cmp
sub
cs
ins
ja
sbb
popa
aaa
pop
pop
push
imul
jne
mov
xchg
xor
ret
test
push
test
mov
xchg
adc
xor
(bad)
aam
mov
fidiv
mov
xchg
dec
jnp
test
in
(bad)
in
jbe
xlat
je
aas
push
mov
daa
icebp
cs
ret
call
xor
jp
jmp
aas
jnp
and
cmp
(bad)
and
pop
lds
sbb
loopne
das
push
out
xor
loope
popa
loop
push
sbb
adc
int
retf
das
(bad)
cmps
stc
movs
aad
push
pop
add
(bad)
add
mov
pop
mov
push
fbld
dec
inc
xor
cmp
jnp
ret
stos
fcmovne
jp
xor
out
inc
or
dec
imul
xchg
test
fmul
int3
lock
call
repnz
add
push
fidivr
pop
push
repz
xlat
or
imul
aad
lods
movs
sbb
inc
mov
xchg
inc
jle
popa
(bad)
fbstp
cmp
xchg
or
icebp
loopne
pop
mov
jbe
sub
sub
fisub
out
lahf
mov
outs
push
daa
fstp
pop
adc
stc
cmp
push
call
adc
sbb
or
xor
add
mov
add
pop
pop
push
mov
xor
mov
inc
push
xchg
out
in
pop
add
call
and
mov
test
dec
pop
mov
push
out
(bad)
push
adc
leave
nop
jb
jb
jecxz
and
int
test
adc
push
mov
aad
movs
outs
inc
pop
dec
loope
ficomp
loopne
fcom
in
popa
sbb
fwait
retf
das
dec
test
mov
iret
loop
cmp
xchg
les
sbb
rcl
(bad)
sbb
daa
lods
add
(bad)
repz
leave
or
xor
pop
and
leave
push
iret
or
fild
push
ins
mov
mov
imul
(bad)
jo
mov
adc
imul
call
adc
les
pop
mov
pop
loop
sbb
jmp
aas
cmp
jnp
jp
or
cmp
cmp
not
push
lea
lods
mov
lods
inc
cmp
sbb
lods
popf
adc
push
and
leave
in
push
sub
mov
xchg
adc
scas
(bad)
cmp
out
lods
add
xor
stc
out
mov
jecxz
(bad)
adc
mov
xor
mov
mov
(bad)
push
inc
out
xchg
les
lods
or
in
leave
cmp
jo
inc
dec
dec
cmc
(bad)
jle
mov
repnz
imul
cli
or
mov
sbb
push
cmp
cld
addr16
cmp
sub
imul
sub
mov
neg
and
push
dec
jns
pop
lods
test
add
and
cli
call
in
mov
sub
(bad)
or
mov
(bad)
ds
jmp
dec
sbb
hlt
fimul
movs
std
arpl
cmp
mov
(bad)
shl
cmp
inc
xchg
add
mov
repz
ja
dec
call
popa
xor
aas
pop
(bad)
fisubr
mov
jl
jmp
push
push
xchg
inc
mov
or
jnp
stos
fadd
hlt
dec
xchg
in
mov
or
imul
test
lahf
push
out
pop
cld
mov
mov
dec
or
scas
in
ds
fild
push
add
stc
push
mov
jmp
test
es
adc
xor
call
push
push
mov
js
test
imul
pop
mov
inc
in
jbe
test
xchg
dec
inc
in
ror
rcl
inc
adc
data16
push
dec
xchg
pop
cmc
fwait
mov
sqrtps
sub
jecxz
clc
cwde
add
sub
push
(bad)
jecxz
dec
mov
add
mov
mov
outs
add
enter
sub
push
scas
in
push
cld
(bad)
jp
jmp
lds
not
mov
mov
leave
inc
add
push
push
xchg
fadd
jbe
cs
xchg
xlat
js
fwait
retf
scas
inc
ins
and
mov
adc
dec
aaa
mov
outs
dec
fs
adc
adc
or
dec
sbb
adc
stos
push
leave
mov
out
sub
bnd
add
dec
mov
fs
stos
dec
gs
and
adc
jo
cmps
lahf
cmps
sahf
xchg
jg
ss
sub
adc
sub
sub
out
push
sub
int3
inc
xchg
inc
inc
mov
add
jbe
mov
mov
xor
in
and
fild
jnp
jmp
sub
mov
sbb
inc
or
or
bound
das
scas
cmp
xor
in
push
das
test
dec
push
push
nop
(bad)
out
scas
jno
cmp
or
mov
push
call
in
push
jbe
mov
fbld
loop
scas
mov
mov
pop
nop
call
(bad)
or
xor
mov
(bad)
jae
inc
push
pminub
sub
les
test
xor
xchg
(bad)
sbb
popa
ret
cmps
adc
jecxz
fld
pop
loopne
jbe
call
gs
hlt
ds
daa
xchg
xchg
and
sbb
or
repnz
jmp
xor
mov
call
int3
neg
inc
lds
dec
jmp
inc
clc
shr
mov
iret
inc
mov
out
out
sbb
and
dec
jno
aad
movs
adc
mul
push
or
sub
aam
mov
sub
call
aaa
ins
cmp
xchg
iret
in
not
mov
scas
sbb
mov
pusha
pop
fcmovnu
popa
je
imul
dec
stc
inc
sub
cmp
ds
dec
mov
or
in
ss
jo
inc
mov
rol
xchg
shl
pop
clc
aaa
js
cs
lds
jp
out
xchg
in
(bad)
test
and
stos
jle
jle
popa
xor
xchg
dec
call
pop
lods
ja
add
lds
inc
pop
loope
xchg
popaw
jns
cmp
icebp
ss
ja
lods
bound
fnstcw
test
mov
sub
repz
inc
sub
aam
jp
mov
jae
or
mov
mov
call
lds
arpl
pop
imul
jmp
fucomi
rol
xlat
dec
and
stos
sub
jns
and
stos
loope
mov
outs
mov
push
sbb
loop
sar
xchg
fild
hlt
cmp
ss
pop
cmp
loopne
aam
mov
cmp
test
in
pop
fmul
push
pop
pop
pop
cmp
in
push
and
mov
push
mov
cmp
fs
inc
jmp
retf
enter
movs
mov
adc
sub
retf
cmp
xchg
movs
out
pop
jg
mov
mov
push
(bad)
mov
test
push
test
stos
mov
or
mov
or
jns
or
mov
(bad)
fmul
or
jl
dec
pop
stos
ja
and
mov
pop
daa
rol
xor
lods
pop
mov
jae
or
sub
stc
movs
pop
cmc
into
sbb
js
shr
dec
mov
lods
test
stos
out
enter
out
jge
inc
cwde
ins
mov
dec
into
cmp
mov
in
dec
pop
les
out
movs
ficom
and
cld
dec
mul
and
or
xchg
jno
aaa
mov
out
outs
dec
sbb
dec
bound
movs
dec
mov
sub
adc
arpl
fidiv
sub
js
xor
lahf
test
das
add
jb
jmp
lods
mov
or
int3
push
sub
xchg
jo
ins
jecxz
outs
or
jge
mov
cld
ins
ds
test
inc
fcomp
adc
lods
mov
push
jnp
push
loop
jl
daa
leave
add
or
loope
(bad)
push
dec
ror
ja
mov
sub
cmp
aaa
repz
adc
and
loopne
nop
push
out
sub
mov
xor
out
cmp
in
outs
rcl
mov
and
nop
sub
es
mov
ficomp
xchg
push
retf
and
and
ss
or
out
hlt
lahf
mov
ds
push
push
adc
xchg
call
mov
sahf
sbb
cmp
shl
mov
aad
and
mov
mov
mov
pop
outs
inc
xchg
add
or
and
xor
mov
xchg
iret
push
cmp
repz
fs
aas
cmc
push
retf
mov
push
movs
and
lds
sub
fmul
cld
pop
les
bound
lahf
stc
mov
pusha
jne
shl
test
sub
mov
sbb
cmp
or
pop
sbb
sti
das
mov
inc
imul
into
mov
leave
dec
enter
jp
in
lds
pushf
jp
fistp
aad
add
aas
cmp
push
and
and
add
ss
push
ja
sub
sahf
aad
jecxz
add
aaa
xchg
push
push
adc
jg
enter
out
jecxz
pop
sti
inc
call
or
pop
jmp
jae
adc
out
idiv
inc
dec
push
mov
cs
mov
sub
ror
push
scas
push
xor
bnd
aad
iret
mov
jmp
in
xor
mov
shr
pop
rcr
loopne
inc
shl
(bad)
cmp
push
enter
pop
mov
inc
mov
add
adc
dec
(bad)
adc
and
push
les
sub
push
and
push
or
xor
aam
int
mov
jle
movs
or
lahf
inc
xlat
push
inc
or
int
into
mov
push
pop
int3
(bad)
mov
mov
pop
fldcw
sbb
pop
mov
xor
cld
sbb
cmp
mov
sbb
xor
inc
popa
call
imul
gs
pop
cdq
out
scas
jecxz
adc
cmp
push
cs
mov
inc
or
dec
xor
or
cmp
dec
push
xchg
pop
jp
cmps
xor
mov
out
xor
pushf
mov
xchg
add
push
fidiv
jb
cmp
stos
iret
mov
call
inc
push
adc
arpl
leave
rcr
mov
xchg
(bad)
nop
mov
stos
fsubp
mov
add
(bad)
call
add
int
inc
cmp
stos
mov
inc
mov
adc
lahf
mov
or
(bad)
fldcw
xor
mov
xchg
pop
cmp
jl
xchg
cmp
in
xor
push
sbb
xor
cmp
push
repz
mov
test
movs
sbb
xchg
test
mov
cmp
dec
iret
pop
in
rcl
test
cmc
out
icebp
pop
add
and
(bad)
imul
into
scas
ins
(bad)
or
xchg
push
movs
jbe
jmp
inc
sbb
adc
and
xchg
or
mov
dec
adc
imul
xor
out
xor
fild
fdiv
in
dec
xchg
out
mov
xchg
out
leave
and
es
mov
hlt
push
sahf
arpl
xor
(bad)
xor
adc
mov
jbe
jb
cwde
xchg
jb
inc
outs
cli
xchg
out
stos
adc
add
ror
inc
in
or
popf
pop
iret
clc
es
int
aad
stos
mov
rol
cmp
pop
dec
adc
xchg
loop
cmp
leave
jmp
pusha
jp
adc
aam
test
int3
fld
inc
cmp
jmp
add
cdq
stos
pop
dec
repz
or
aam
pop
aam
arpl
daa
test
add
and
fisubr
in
pusha
xchg
(bad)
mov
rol
mov
jo
adc
mov
pop
pop
mov
pop
mov
push
outs
(bad)
jnp
jae
mov
idiv
fist
mov
xchg
sub
pop
clc
sbb
add
or
je
push
mov
mov
outs
push
out
pop
xchg
loop
cmps
sbb
out
sahf
pop
pushf
jle
test
mov
retf
ins
mov
or
sbb
jmp
iret
outs
push
and
fild
call
fnstsw
cvtps2pd
or
rol
mov
dec
bound
loopne
rcl
inc
or
mov
pop
xor
(bad)
adc
and
pop
mov
add
movs
adc
dec
cli
jecxz
fcom
cmps
mov
push
jb
mov
push
gs
sub
pop
or
and
adc
cmp
mov
mov
loopne
cmp
in
fisttp
sar
pop
lods
clc
out
push
mov
mov
xor
fld
mov
pop
push
jnp
sahf
add
jl
popf
call
mov
xchg
inc
add
stos
test
jno
sbb
cmp
das
xchg
repnz
push
jbe
rcl
xor
mov
cmps
in
add
ffree
and
xchg
jmp
xor
pusha
in
retf
cmps
push
(bad)
jmp
mov
pop
repz
xchg
cmp
lods
popf
sbb
sub
(bad)
fisub
les
cmps
jbe
test
aam
push
jg
bound
out
cdq
cmc
outs
inc
test
add
jo
(bad)
lock
sub
out
and
test
mov
fnstcw
je
in
mov
add
dec
push
adc
mov
addr16
sbb
sub
sbb
sub
(bad)
push
popf
push
xor
fsub
push
imul
lock
lock
push
pop
mov
inc
test
addr16
loop
sahf
movs
jmp
mov
jecxz
inc
and
jnp
inc
xor
shl
gs
getsec
sub
jnp
adc
not
jno
push
xchg
mov
push
mov
sar
mov
mov
jg
or
or
(bad)
test
in
ret
repz
test
dec
cmp
jnp
cmp
pop
mov
rol
pop
sti
shl
push
sbb
in
add
aas
xchg
xchg
jae
cmp
dec
jno
mov
scas
mov
loope
push
sbb
je
fistp
and
stos
xchg
call
push
ins
jmp
jne
cwde
mov
in
sbb
movs
shl
mov
fidivr
arpl
or
aad
sbb
mov
add
cld
pop
mov
or
and
iret
sbb
mov
aad
sbb
div
dec
and
into
adc
dec
sahf
dec
pop
push
neg
pop
mov
cmp
sbb
or
pop
dec
cmps
scas
xchg
and
mov
or
aaa
mov
mov
dec
push
mov
dec
inc
adc
mov
ficom
adc
jns
pop
addr16
pop
test
xadd
(bad)
enter
(bad)
je
add
and
sbb
cs
retf
jmp
xor
in
xor
rol
push
retf
das
aam
movs
sbb
cmp
test
jg
out
ss
jnp
shl
mov
rcl
or
mov
sub
inc
or
cmp
jmp
xor
int
retf
xchg
out
dec
lds
pushf
fimul
stos
xchg
xchg
jns
mov
inc
icebp
int
cmp
xchg
aaa
xor
es
fsub
vpaddsw
inc
sti
sub
stos
inc
xor
push
jo
cmc
xor
push
nop
mov
test
ret
fs
gs
out
adc
and
(bad)
shl
rcr
or
sbb
(bad)
ror
mov
leave
(bad)
into
mov
loop
push
lea
cmp
dec
rcr
adc
rcl
cmp
cs
pop
mov
sbb
pop
outs
sti
pop
push
cdq
pop
or
xchg
inc
adc
pop
jg
mov
xor
push
dec
in
loope
push
sub
imul
mov
aaa
retf
mov
push
cld
(bad)
jp
jle
sub
xor
mov
xlat
imul
dec
fiadd
repnz
not
cmp
xlat
ja
ror
xchg
leave
popa
jp
(bad)
xchg
jp
mov
cld
mov
idiv
outs
mov
lea
dec
pop
fistp
shl
xor
jno
mov
push
imul
int
and
add
mov
mov
and
mov
cmc
lods
cmps
xchg
xchg
sbb
cmp
fwait
imul
test
or
adc
(bad)
ror
push
das
repnz
push
xchg
dec
fwait
push
inc
mov
jle
push
and
mov
or
aaa
ja
sti
push
mov
inc
add
enter
sub
in
call
inc
and
push
dec
clc
rol
adc
inc
pop
sbb
adc
cmps
pop
or
stos
(bad)
push
and
inc
maxps
dec
js
imul
inc
xor
icebp
shr
push
dec
mov
mov
inc
push
aam
sub
push
bound
mul
mov
pushf
jmp
pop
daa
imul
xor
pop
sbb
mov
push
mov
pop
adc
ss
sub
mov
lods
arpl
gs
or
push
rol
mov
cwde
mov
jne
mov
gs
or
icebp
pushf
mov
popa
lods
push
das
inc
js
test
add
int3
jae
cmp
movs
mov
lahf
pop
jge
lea
(bad)
xchg
bswap
push
int3
add
push
jo
call
test
push
sub
xor
push
cmp
aam
test
mov
iret
mov
mov
add
or
ins
sub
iret
and
jle
lahf
or
or
jne
xor
xchg
mov
and
lods
mov
sub
mov
fsubrp
(bad)
aas
mov
ret
aam
mov
js
fcomp
mov
add
addr16
dec
xor
adc
ret
or
inc
out
arpl
fs
push
inc
test
cmp
in
pop
iret
mov
fwait
lahf
dec
xchg
fsubr
sbb
or
and
movs
in
xchg
(bad)
ss
add
mov
sub
lock
mov
mov
jne
repz
addr16
mov
clc
call
mov
sbb
cmp
sbb
pop
mov
cli
pop
adc
push
add
scas
jb
mov
iret
push
xchg
xchg
add
cmp
fiadd
jb
test
fld
movs
enter
jo
and
rcl
scas
iret
jg
addr16
cmp
push
aaa
and
enter
mov
dec
in
(bad)
(bad)
pop
es
cmp
xchg
fisub
lods
push
sub
sbb
or
rol
shl
out
cmp
mov
dec
loop
xor
dec
stc
out
shr
in
fisubr
and
push
les
cdq
cmps
daa
in
jno
pop
pop
ss
or
js
mov
fistp
dec
push
das
popa
lahf
jmp
mov
add
mov
rol
pop
jge
inc
mul
(bad)
(bad)
pop
pushf
jnp
repz
dec
sbb
inc
jnp
std
sub
cs
mov
std
xchg
jno
outs
cmps
mov
repnz
lea
or
mov
jns
mov
(bad)
std
(bad)
loopne
pusha
pop
ret
dec
inc
out
cmp
push
loopne
inc
popa
xchg
call
xchg
and
and
mov
call
fmul
sbb
out
sub
stos
loope
clc
rcl
xchg
bound
mov
loopne
int
push
cdq
jl
iret
fmul
loop
jae
sbb
pop
outs
pop
dec
mov
add
test
cmp
jecxz
and
stos
xor
ret
lods
out
cmp
or
jbe
paddd
mov
in
pop
xor
or
adc
shl
mov
bound
ins
cmp
loope
or
repnz
mov
adc
lds
push
mov
movs
inc
add
sahf
imul
leave
xchg
pop
mov
aad
jecxz
xchg
dec
jl
inc
pop
dec
sub
bnd
mov
mov
(bad)
pop
out
iret
mov
stc
lds
inc
retf
and
in
stos
push
in
icebp
pushf
arpl
push
fnsave
bound
pop
call
jle
cwde
icebp
fwait
sub
imul
dec
push
add
cs
fdiv
movs
xchg
xor
fwait
mov
mov
jo
dec
retf
ror
stos
outs
pusha
fcom
jns
inc
sub
cmps
push
movs
shl
icebp
stc
sub
loope
imul
int
test
fidiv
pop
pop
xchg
or
jo
test
(bad)
or
push
cmps
imul
sahf
fidiv
outs
cmp
jns
pop
js
sbb
dec
and
add
add
sbb
mov
pop
xchg
xchg
call
ss
pop
adc
pop
jbe
js
dec
push
fisttp
dec
cmp
or
xor
xlat
sub
dec
xchg
(bad)
pop
mov
and
sub
cdq
inc
sbb
add
adc
repnz
add
lock
call
cli
clc
cmp
pop
hlt
fisubr
push
push
xchg
jmp
push
mov
retf
stos
shl
mov
xchg
lds
or
lock
rcl
mov
sub
addr16
repz
xlat
add
dec
out
out
repz
rcl
(bad)
call
cmp
cdq
cmp
add
adc
mov
jl
dec
push
dec
xlat
out
mov
xchg
pusha
bound
fistp
jae
out
clc
push
cs
fdivr
sbb
mov
fistp
push
sti
arpl
mov
ss
adc
cli
out
dec
jl
jo
leave
in
cmp
mov
mov
vxorps
int
mov
in
or
jno
xor
pop
xchg
into
rcl
mov
push
inc
sbb
adc
je
mov
repz
pop
test
dec
add
xchg
fnstsw
inc
and
inc
dec
xchg
sbb
mov
jno
and
sub
cdq
cmps
pop
(bad)
push
push
lods
popa
add
jle
mov
inc
push
test
adc
cmp
push
test
xchg
push
mov
add
mov
movs
jecxz
movs
inc
sub
pop
ficomp
addr16
scas
in
xor
xor
lock
loopne
inc
(bad)
test
jo
loope
sbb
aam
daa
outs
and
jg
ins
imul
movsx
js
mov
or
test
jmp
push
mov
push
or
das
push
push
inc
pop
js
lods
inc
repnz
sub
cmp
call
gs
fadd
dec
ins
in
mov
pop
xchg
inc
sub
test
repz
neg
dec
out
gs
dec
lods
jnp
test
stos
sub
test
inc
jmp
jno
mov
enter
out
mov
mov
push
or
inc
xchg
ret
mov
sbb
fimul
xchg
and
mov
and
ins
int3
rol
jl
jle
stos
add
or
pop
xchg
(bad)
outs
push
hlt
aaa
sbb
mov
ror
enter
cmc
sbb
movs
les
bound
out
push
movsx
dec
out
arpl
inc
fmulp
cmp
call
add
inc
ficom
inc
jae
stos
stos
xor
dec
pop
jecxz
mov
cmp
ins
cmp
in
out
mov
(bad)
xor
or
neg
push
pop
scas
fwait
imul
inc
into
jbe
pop
out
pop
cwde
das
cld
jl
inc
imul
sbb
mov
and
mov
sbb
or
jge
mov
int3
lea
inc
inc
cmp
int3
ins
jp
stc
(bad)
adc
add
sbb
jmp
popf
into
xchg
ror
xor
add
xchg
neg
pop
scas
pop
je
aaa
pmullw
sbb
dec
fs
pop
push
xchg
dec
pusha
sub
xlat
jae
xor
add
or
icebp
sbb
(bad)
mov
xor
fbld
or
sub
xor
or
out
pop
pop
jns
cli
or
leave
aaa
ins
fcom
dec
mov
addr16
add
out
mov
pop
(bad)
pushf
jmp
pop
lahf
dec
cwde
or
rcr
dec
sahf
(bad)
ja
xor
mov
push
push
ss
jno
and
pushf
in
out
dec
xchg
into
loop
shl
aaa
cmp
pop
aam
mov
fwait
sahf
icebp
sbb
shl
push
pop
in
mov
adc
test
in
pop
or
(bad)
cmp
jg
call
dec
mov
fs
call
movs
xchg
dec
test
(bad)
sahf
mov
jle
iret
lahf
cmp
xor
ins
lahf
sub
xchg
(bad)
in
mov
bound
dec
push
jg
mov
cmp
xor
cdq
xor
into
mov
repnz
(bad)
xchg
aad
push
inc
aam
enter
stos
push
or
outs
ins
and
ins
call
cmps
dec
adc
jmp
pop
jmp
xchg
mov
mov
fdivr
iret
pop
enter
adc
and
stos
add
test
pop
sub
lods
int3
push
cmps
jl
jmp
int3
adc
or
sbb
ins
jmp
ja
lar
jmp
jg
dec
dec
fistp
and
mov
fwait
sbb
dec
fs
ja
addr16
xor
test
into
scas
clc
lock
and
fisub
addr16
xchg
push
(bad)
jb
cmps
adc
daa
mov
cmp
(bad)
mov
fs
sti
pop
jl
rol
adc
outs
in
ffreep
dec
retf
outs
dec
jne
sub
push
pop
mov
int
pop
icebp
xchg
das
(bad)
push
push
and
jae
jmp
mov
jbe
jmp
pop
(bad)
mov
icebp
mov
add
mov
call
mov
mov
fstp
mov
xor
cmp
fistp
or
fiadd
fsub
inc
dec
(bad)
out
mov
inc
imul
nop
mov
ins
sub
xchg
in
outs
(bad)
fnsetpm(287
push
lahf
inc
leave
and
cmp
(bad)
mov
sbb
xchg
(bad)
fcomip
push
aad
mov
int3
xchg
ret
xchg
arpl
clc
(bad)
mov
out
pop
inc
xor
es
(bad)
enter
and
stos
mov
mov
sub
or
call
sub
jmp
lods
(bad)
pop
fwait
jb
push
call
cdq
jmp
fnstenv
push
dec
in
in
or
push
orps
jmp
adc
scas
std
adc
mov
(bad)
xor
mov
cmp
push
hlt
cwde
add
xor
test
and
fcmovnb
pop
test
std
daa
shl
ret
movs
fst
dec
cwde
pop
mov
js
sbb
je
add
fdivr
gs
push
fbstp
sbb
xchg
inc
adc
xchg
push
cmps
(bad)
(bad)
imul
xchg
jb
cmp
in
test
dec
jns
pop
jecxz
std
movs
scas
sub
xchg
repz
inc
jnp
mov
or
loopne
ja
leave
sbb
stc
mov
ret
stc
lea
test
popf
push
int
mov
add
out
hlt
loop
adc
mov
jns
das
scas
scas
fbstp
xor
mov
cmc
jo
(bad)
dec
mov
or
and
clc
js
outs
or
sbb
sub
fsubr
dec
cli
iret
loop
dec
std
shl
inc
mov
or
in
(bad)
rcl
mov
lea
enter
idiv
out
sub
inc
ror
imul
cmp
scas
mov
outs
movs
add
xor
push
mov
and
ja
rep
mov
(bad)
cmp
dec
and
call
sub
cs
mov
mov
(bad)
push
mov
dec
add
push
xor
adc
mov
xor
mov
stc
add
or
push
dec
inc
mov
xchg
jne
and
adc
je
in
sub
stc
ss
ss
cs
inc
xchg
(bad)
mov
outs
dec
cmp
jns
test
or
daa
cwde
xor
sahf
xchg
mov
mov
xchg
jmp
cmp
jbe
jle
popf
data16
lods
clc
stos
push
and
lock
inc
mov
fst
inc
cmp
repnz
(bad)
rol
loop
sbb
cmp
mov
ss
adc
xchg
lods
in
outs
leave
jle
cmp
adc
cmp
xchg
mov
stc
push
jmp
mov
lahf
(bad)
add
movs
inc
or
mov
clc
pop
xchg
mov
neg
fstp
sub
pop
sub
imul
call
cmp
aas
imul
jl
adc
in
loopne
cwde
and
inc
mov
xor
shl
es
ds
ja
cmp
or
(bad)
push
dec
stos
movs
pusha
sub
jle
dec
sub
mov
xor
jne
test
clc
std
xchg
push
push
mov
xor
mov
jb
popa
jae
imul
loopne
popf
repz
add
xor
mov
dec
fstp
stos
(bad)
add
je
push
cmps
xor
pop
add
jns
mov
jae
adc
push
cmp
repnz
lea
xor
jae
les
sub
arpl
push
mov
aad
jl
add
push
loop
or
pop
push
imul
pop
je
push
pop
ins
pop
pop
(bad)
adc
jbe
lock
pop
xor
dec
inc
cmp
icebp
cli
int3
jmp
mov
pop
iret
mov
repz
fadd
fwait
ins
push
add
sbb
dec
dec
dec
mov
mov
jge
push
sub
pop
sbb
rol
cmp
pop
jg
mov
dec
test
add
scas
push
jmp
(bad)
test
fisttp
jae
outs
jp
repnz
stos
sbb
sbb
ret
(bad)
and
pop
jno
jge
sti
jne
sub
push
(bad)
mov
mov
inc
stos
and
pop
scas
jbe
out
sbb
clc
push
repz
(bad)
test
push
fistp
jns
xchg
jmp
mov
in
mov
enter
adc
aaa
enter
daa
cmp
pop
ss
adc
and
int
ficomp
pop
dec
mov
push
in
sti
aas
js
sar
das
mov
popf
pop
dec
hlt
sbb
and
lahf
cld
dec
out
push
cdq
inc
xchg
leave
cli
js
jg
mov
cwde
fs
lods
xchg
mov
inc
mov
mov
scas
sbb
scas
repnz
gs
leave
push
out
sbb
outs
sar
mov
or
xor
adc
fcom
arpl
into
dec
data16
pop
sbb
stc
cmp
int3
movs
xchg
cmp
pop
jp
into
fistp
sub
and
fnstsw
inc
xchg
cmp
cmp
dec
jmp
repnz
mov
mov
or
arpl
js
retf
mov
inc
mov
std
sbb
into
mov
sbb
push
popa
mov
(bad)
push
call
adc
shl
mov
shl
int3
fs
fistp
dec
call
jecxz
icebp
add
sub
repz
in
jb
repnz
xlat
or
add
fidiv
js
or
ja
lock
xchg
pop
ret
rcl
jno
(bad)
pop
mov
dec
in
cmp
and
or
mov
ror
sbb
add
out
cmp
pop
xlat
push
xor
sbb
dec
pop
outs
call
pop
sbb
in
nop
jmp
call
loopne
sbb
sub
sbb
das
es
jns
ror
fcmovnbe
mov
rcr
(bad)
mov
shrd
jl
sahf
mov
push
adc
stos
sahf
repnz
pushf
add
mov
add
rcr
loope
dec
jmp
jge
(bad)
retf
mov
sbb
cmc
js
mov
xchg
pop
sbb
loopne
sub
loope
repz
cld
dec
setno
sti
cmp
ins
movs
mov
xlat
loopne
mov
ret
xor
outs
mov
addr16
sahf
sbb
push
movups
mov
sbb
ror
mov
sbb
mov
dec
repz
ds
inc
dec
push
in
test
mov
popa
mov
jb
ret
scas
ror
sar
fstp
icebp
in
aaa
ret
mov
xchg
mov
aas
xor
js
push
mov
pop
scas
stc
dec
jnp
inc
rcl
out
cmp
lods
add
xlat
adc
clc
mov
cmc
dec
mov
or
int3
imul
mov
add
enter
enter
push
fcom
movs
fist
push
aas
int3
mov
pusha
in
inc
in
push
shl
xchg
cdq
mov
mov
mov
iret
repnz
xlat
cld
pop
ja
scas
inc
or
aam
or
xchg
loop
pop
mov
push
push
xchg
and
dec
popa
push
xchg
adc
dec
push
ja
mov
or
bound
adc
idiv
cwde
ins
popf
inc
fwait
xchg
push
mov
in
jb
test
push
addr16
mov
pop
cs
std
adc
shr
mov
mov
shl
inc
sbb
inc
inc
jb
or
or
je
lahf
jnp
cmp
adc
aad
xchg
push
and
add
pop
adc
push
in
jbe
adc
lods
mov
lahf
or
jmp
fs
gs
fwait
ret
(bad)
fstp
inc
outs
mov
xchg
out
or
mov
ror
push
inc
sbb
fs
stc
dec
mov
repnz
das
cmp
cmp
xchg
add
dec
push
sahf
and
mov
sbb
push
ins
ins
push
(bad)
xlat
(bad)
in
add
ins
sub
mov
cmc
add
fbstp
test
in
sub
repz
fmul
repz
jmp
inc
xchg
push
test
test
inc
mov
popa
in
ret
enter
mov
mov
leave
pop
test
lahf
pop
xor
xchg
mov
dec
lods
imul
pusha
test
mov
cmp
mov
push
arpl
jno
cdq
int
test
outs
cdq
sub
mov
aam
xchg
cmp
adc
pop
xor
inc
jmp
mov
popf
addr16
je
jno
fst
scas
popa
and
cli
add
mov
fisttp
add
cmps
mov
stc
fdivr
inc
add
mov
mov
pushf
add
xor
push
aas
jmp
js
sar
jecxz
sti
mov
fstp
and
ror
mov
cmp
push
xchg
jmp
pushf
ss
sbb
mov
mov
hlt
std
mov
das
push
ins
(bad)
pop
xchg
test
retf
aam
push
add
adc
int
pop
xchg
dec
and
imul
repz
push
jp
jmp
dec
fwait
pop
jmp
mov
bound
jecxz
cwde
gs
mov
push
xchg
jb
pop
and
mov
jl
in
jg
jo
xchg
mov
sub
and
mov
push
sbb
mov
inc
sub
imul
jne
jno
(bad)
sbb
mov
sbb
cmps
inc
jg
aas
sub
add
add
test
(bad)
(bad)
jno
mov
mov
repz
fwait
jl
aaa
jg
into
mov
(bad)
(bad)
lods
ins
icebp
(bad)
pop
pop
pop
outs
cmp
and
daa
jbe
retf
dec
xor
mov
push
xchg
out
in
jne
stc
outs
sub
sahf
lea
lock
sub
sub
enter
sub
je
dec
imul
or
jns
adc
call
and
cmp
and
inc
pusha
inc
mov
pusha
add
scas
or
xchg
mov
cmp
mov
push
std
movs
ins
lods
mov
xchg
jmp
pop
cdq
popa
pushf
add
sbb
jns
outs
test
fwait
push
jbe
or
xchg
push
xor
cmc
and
test
inc
adc
cdq
pop
(bad)
push
or
loop
xchg
jne
lahf
pop
xchg
jg
in
xor
out
imul
push
enter
nop
pop
mov
jo
xor
addr16
xor
push
push
pop
pop
fwait
(bad)
clc
stc
stos
(bad)
(bad)
iret
inc
fldenv
fld
xor
(bad)
and
fpatan
outs
push
out
stos
int3
fcmovnb
push
stc
push
aam
test
xor
addr16
xor
pop
mov
and
leave
mov
mov
ret
fcom
fwait
xor
pop
push
adc
add
dec
sub
ss
not
rcr
mov
rol
inc
jbe
push
push
mov
cmc
push
(bad)
jp
push
(bad)
mov
jge
(bad)
rep
movs
imul
fist
retf
pop
stos
xor
push
std
jae
mov
xlat
jne
push
dec
jo
popf
adc
mov
push
loope
xor
ss
xchg
test
mov
or
call
(bad)
or
lods
call
test
jmp
out
and
daa
jmp
mov
inc
das
push
or
loopne
retf
inc
xor
sahf
mov
movs
scas
clc
cmp
outs
inc
rol
jne
jp
ins
pop
fwait
and
imul
aad
mov
sub
cmp
mov
pushf
faddp
pusha
dec
ds
cli
mov
movs
pop
pop
xlat
dec
jmp
fistp
dec
(bad)
xor
adc
dec
jecxz
es
cdq
ins
lea
dec
or
add
punpckhdq
sar
loope
lods
shl
repnz
outs
(bad)
adc
dec
pusha
icebp
or
xchg
mov
xchg
mov
in
adc
push
xchg
pushfw
xchg
ja
mov
inc
and
and
and
mov
cli
pop
xchg
mov
stos
fistp
pop
mov
jo
retf
mov
push
ds
jb
pop
xor
rcr
repz
gs
fiadd
or
(bad)
push
mov
lahf
push
mov
adc
mov
xchg
cmp
(bad)
inc
xor
(bad)
cmps
pop
pop
or
repz
dec
sahf
xor
rcr
adc
pop
xchg
fist
push
mov
movs
push
jecxz
rcl
mov
repnz
les
aas
push
retf
cmp
push
lahf
inc
inc
cdq
push
push
mov
xor
out
jl
lea
jcxz
scas
push
pop
mov
call
retf
ds
(bad)
movs
dec
xchg
pop
mov
sbb
add
fs
cs
sbb
scas
add
inc
cmps
neg
ret
(bad)
sbb
push
test
(bad)
sub
add
dec
mov
outs
xchg
inc
jmp
stos
sbb
mov
lahf
out
and
and
mov
stos
mov
sahf
add
in
retf
add
pop
jo
xor
sub
arpl
out
cmp
(bad)
scas
add
xor
enter
or
es
aad
pop
or
lock
sar
fadd
xchg
sub
and
hlt
adc
stc
add
test
and
inc
xor
sub
add
dec
sbb
adc
lock
jge
mov
push
push
push
imul
cmps
push
mov
mov
in
pop
jmp
test
sbb
dec
pop
cmp
imul
adc
xchg
jo
or
fwait
push
adc
mov
int3
js
sub
test
inc
add
mov
aad
icebp
xchg
(bad)
pusha
jp
pop
add
sbb
fwait
std
sahf
lods
movs
push
das
ss
or
cmp
inc
sti
int
and
arpl
out
xor
(bad)
jmp
(bad)
add
sbb
lock
cmp
(bad)
sbb
push
fistp
imul
cmp
jno
popw
inc
imul
dec
jp
mov
pusha
xchg
test
shl
sbb
fwait
jle
mov
and
xchg
je
lods
rsm
(bad)
ret
aad
mov
adc
lods
repnz
xlat
(bad)
iret
jmp
push
mov
int
sti
fsub
mov
sub
mov
mov
xchg
xor
movs
(bad)
repnz
and
jge
add
sub
repnz
lods
leave
xor
or
jmp
ins
(bad)
xchg
mov
jbe
jae
sbb
push
pop
sub
ins
in
popf
into
nop
cdq
lds
xbegin
call
sbb
mov
mov
int
cld
fidiv
(bad)
cmp
jp
movs
xchg
je
or
js
jmp
es
retf
dec
movs
ror
dec
sub
stc
lods
fstp
aas
cli
dec
mov
in
sbb
hlt
fwait
in
cmps
mov
pop
fstp
js
mov
(bad)
jle
dec
cmp
out
mov
and
repz
xor
mov
jecxz
test
sub
into
sub
mov
dec
inc
cld
xor
je
or
fs
cld
jb
lods
mov
pushf
loope
js
mov
push
jno
into
push
adc
ja
sub
lea
aam
(bad)
into
jbe
outs
pop
dec
cmp
push
jecxz
(bad)
js
retf
lods
lahf
xchg
inc
add
mov
imul
mov
mov
mov
xchg
cli
or
es
popa
(bad)
xchg
fsub
jp
push
mov
jo
pop
cli
(bad)
push
sti
(bad)
jae
xlat
mov
ins
pop
int
sub
adc
pop
push
and
fisttp
test
inc
jbe
xchg
scas
(bad)
push
inc
pushf
jle
push
pop
dec
mov
mov
stc
mov
sbb
pmaddwd
xor
pop
xor
ins
sbb
hlt
outs
fadd
stos
or
mov
imul
jno
test
jbe
dec
iret
cmp
adc
inc
xor
call
xchg
push
icebp
jne
inc
push
jp
mov
cmp
pop
enter
fisttp
fist
inc
movs
mov
mov
test
mov
dec
shl
rol
in
add
mov
pop
or
mov
pop
cmps
and
xor
push
je
sar
push
mov
pop
add
sub
inc
les
xchg
xor
imul
dec
fsubr
fdivr
sub
cmp
shl
in
jbe
(bad)
sbb
jmp
inc
in
(bad)
or
push
and
stos
in
jbe
adc
aad
push
loop
seto
mov
rcl
scas
and
ds
dec
sbb
leave
sub
pop
stos
mov
fnstsw
mov
jmp
imul
xor
sbb
in
and
xchg
into
mov
sub
mov
add
(bad)
aaa
fwait
sbb
and
pop
outs
cmp
push
imul
pusha
inc
sbb
inc
xor
fs
adc
xchg
mov
inc
pushf
ja
daa
frstor
sbb
loop
inc
enter
int
es
daa
inc
jo
(bad)
jmp
jl
shl
sbb
mov
add
inc
test
ja
jle
jg
loopne
call
sbb
and
cmp
xchg
pop
sbb
out
push
jne
pusha
dec
movs
pusha
push
(bad)
fcomi
fst
push
hlt
inc
jmp
dec
dec
pop
push
test
in
outs
pushf
ds
jmp
and
xchg
sub
test
xor
mov
imul
inc
push
outs
push
in
jmp
pushf
inc
sub
out
add
aaa
adc
test
mov
lods
cmp
jg
out
inc
fadd
neg
and
xchg
jmp
data16
add
ds
rcl
cmp
shr
std
add
sbb
into
lea
adc
rcl
jmp
push
pusha
sub
stos
add
loopne
cmp
leave
mov
cld
and
out
lahf
test
push
ror
ss
or
or
add
xchg
fidivr
adc
dec
dec
outs
ror
and
and
mov
icebp
sub
dec
inc
inc
aam
mov
arpl
mov
and
dec
push
movs
pop
test
mov
mov
xlat
mov
dec
loopne
push
lods
mov
rol
xchg
repz
mov
in
sbb
dec
dec
mov
inc
or
test
push
jle
mov
leave
and
mov
and
dec
in
neg
pop
movs
sahf
in
dec
pop
aas
push
shl
lock
call
push
and
adc
es
jb
mov
pop
jecxz
ds
int
cmp
dec
mov
ds
xchg
dec
(bad)
fwait
cmc
or
out
cdq
xchg
cmp
rcr
sbb
hlt
inc
add
adc
in
call
ret
inc
pop
dec
mov
adc
shl
xor
ficom
inc
xor
popf
lods
ret
leave
jne
je
sti
jp
outs
outs
icebp
sbb
pop
push
(bad)
fdivrp
push
ret
shl
jns
pop
lock
cmp
sub
mov
xor
enterw
cmp
mov
mov
sbb
push
adc
cmp
lds
fwait
ins
push
out
mov
jl
cld
sar
rcl
pop
jno
xor
retf
push
or
dec
or
jle
call
sti
popf
adc
lahf
sbb
dec
ja
rcl
in
into
pop
push
frstor
bound
push
dec
dec
dec
int3
sub
(bad)
jae
ins
fdivr
push
lea
push
adc
fs
hlt
mov
leave
out
adc
mov
call
inc
mov
jae
jb
jmp
imul
and
jne
xchg
sub
mov
not
out
sub
rcl
sub
scas
pop
inc
mov
rcr
xor
out
lds
addr16
push
mov
stos
sbb
lods
jbe
sti
adc
xchg
dec
pop
mov
lods
fidiv
and
iret
jl
mul
pushf
dec
mov
fmul
mov
bound
pop
or
pop
mov
mov
mov
not
mov
jae
int
je
retf
mov
push
or
mov
mov
shr
pushf
xchg
pusha
sbb
dec
fdivr
shr
clc
jmp
sti
push
pop
mov
adc
jne
xlat
xor
inc
cli
xor
adc
fistp
(bad)
out
jb
test
lahf
push
(bad)
mov
sbb
(bad)
cmc
pop
or
inc
mov
xchg
adc
push
mov
add
mov
jge
in
inc
xchg
faddp
and
in
push
mov
cmc
xor
push
sub
stos
mov
push
inc
dec
mov
pop
xor
lock
and
fist
sbb
popf
cmps
mov
xchg
mov
aaa
or
push
dec
pop
arpl
out
mov
mov
in
pop
aas
adc
cmp
jns
jo
(bad)
stos
jb
sub
inc
pusha
jo
and
in
jbe
fsubr
nop
pop
push
push
mov
aad
pusha
(bad)
ds
push
es
in
sbb
das
(bad)
es
arpl
scas
mov
js
sub
sbb
or
aad
sbb
sbb
test
in
sub
mov
movs
les
add
xchg
cmp
in
inc
push
xchg
leave
jp
sub
or
rol
jge
push
shl
mov
sub
inc
dec
push
lods
stc
paddusw
loope
nop
lods
scas
clc
adc
xchg
repnz
test
repz
scas
es
jp
and
jo
scas
icebp
xlat
jge
or
adc
mov
shl
push
and
lds
(bad)
push
cmp
push
jae
ins
push
fcomp
mov
dec
(bad)
inc
mov
xchg
movs
and
cmps
ins
inc
shl
jmp
and
xor
or
push
(bad)
jne
or
aas
xchg
and
call
mov
adc
dec
xchg
(bad)
call
out
loope
cwde
sti
aas
lahf
icebp
(bad)
test
fld
cs
or
mov
or
sub
(bad)
mov
(bad)
mov
mov
xchg
lds
test
loop
pop
cmp
ficomp
jge
leave
and
jns
mov
xor
imul
and
ficomp
jg
mov
imul
mov
dec
inc
xor
test
std
or
inc
in
jno
rcl
sub
faddp
sbb
jb
fst
stos
(bad)
call
enter
bound
jb
add
push
out
jnp
mov
sub
cmp
xor
add
lea
bound
call
or
xchg
and
xor
jmp
or
loopne
xor
mov
(bad)
out
retf
sahf
pop
lea
xor
mov
les
sbb
in
adc
ja
push
in
lods
int
xchg
dec
cmc
sti
pusha
xchg
sbb
dec
cmp
jb
sub
aad
shl
not
jb
or
test
or
aad
jne
loopne
push
in
shl
ins
pop
add
sub
mov
xchg
loopne
add
ins
mov
sub
inc
mov
test
das
cdq
cwde
cmp
and
mov
adc
dec
xor
ds
in
inc
(bad)
or
push
fisub
test
dec
aad
mov
push
es
sbb
lock
stos
call
sbb
je
adc
or
sbb
mov
stos
pop
gs
les
mov
push
fs
clc
mov
push
mov
fdivr
push
lea
pushf
xchg
fcmovb
cwde
in
mov
push
cmps
rcr
sub
jecxz
jo
scas
mov
fnstsw
jecxz
aad
inc
push
inc
aad
lahf
jge
adc
jp
int3
jno
xchg
add
xchg
sti
inc
call
cmps
jmp
adc
push
aad
sbb
pop
into
fwait
ins
mov
cdq
inc
(bad)
in
add
fcom
sbb
ins
add
add
sub
ins
sub
pop
aaa
xchg
cld
inc
sbb
dec
clc
mov
aaa
retf
jb
and
outs
test
inc
imul
inc
call
inc
loopne
cld
cli
sbb
mov
sbb
push
cmovae
ret
sbb
push
jo
mov
mov
dec
dec
mov
dec
push
int
and
or
inc
mov
adc
xchg
xor
pop
lock
dec
adc
xchg
xchg
xor
in
(bad)
les
mov
inc
cmps
adc
add
pushf
test
sbb
adc
fcom
lods
or
mov
cwde
out
iret
loope
ins
xchg
data16
adc
xlat
sbb
ds
mov
int
call
test
sub
loop
xor
and
fnstenv
or
jo
jbe
jne
cdq
imul
sbb
sub
sub
scas
or
test
push
mov
jmp
pop
fcom
pop
add
inc
(bad)
dec
or
sbb
ret
dec
inc
repnz
into
or
fidiv
jb
jge
push
sar
daa
mov
test
jns
or
pop
and
mov
pop
dec
ds
add
sti
jno
push
jp
inc
adc
add
xchg
sub
icebp
ins
jge
aaa
in
push
mov
mov
adc
jb
xchg
mov
sahf
mov
mov
outs
aad
in
icebp
push
ffree
lods
mov
mov
icebp
retf
push
sbb
xchg
into
sub
add
inc
inc
lds
out
jnp
or
data16
sahf
cdq
arpl
mov
out
fild
popf
loop
je
into
out
mov
test
call
pop
pop
dec
call
or
lea
clc
push
mov
lds
dec
add
xchg
std
dec
sti
xor
add
xor
jmp
and
and
xor
and
pop
or
sbb
push
pushf
sub
imul
cmp
pop
add
sbb
aad
cmp
sbb
push
fmul
pop
rcl
ss
sub
add
mov
jecxz
(bad)
les
cld
lods
(bad)
iret
xchg
sbb
adc
xchg
fst
repz
push
cmp
adc
out
sahf
push
mov
jmp
out
and
arpl
cmp
dec
and
ja
retf
cmp
icebp
mov
mov
jmp
cmp
mov
jp
mov
fcmovbe
fld
xchg
xchg
je
cmp
adc
xor
or
pop
das
mov
retf
xor
mov
(bad)
(bad)
ins
aad
les
inc
mov
lea
cmp
add
int3
sub
fwait
dec
out
ja
ins
and
sbb
repz
daa
dec
add
push
inc
aaa
pushf
adc
add
out
sbb
in
xchg
test
push
xor
jle
ficom
clc
(bad)
cmps
out
jns
mov
mov
mov
les
out
dec
fmul
jmp
movs
xchg
(bad)
int3
lea
nop
mov
sbb
repz
push
push
cdq
iret
dec
cmc
rol
in
cdq
xchg
sub
out
push
sub
push
stc
imul
pop
cld
jle
jg
in
retf
sbb
out
jp
lea
cmp
es
inc
xor
xor
mov
dec
ja
jo
jecxz
into
jp
aaa
aad
inc
mov
lds
test
popf
shl
xchg
mov
jne
inc
xchg
inc
or
(bad)
adc
inc
out
mov
xchg
push
mov
popf
and
pusha
jnp
mov
test
cmp
push
push
cmp
bound
adc
and
out
shl
loope
enter
jo
inc
repz
or
mov
cmp
pushf
xor
shl
sub
and
ins
mov
mov
or
sbb
repz
xchg
push
sub
cmp
mov
pop
retf
mov
xchg
dec
fcomp
push
dec
ja
(bad)
mov
enter
mov
sbb
jnp
out
dec
adc
push
sub
ret
mov
cmps
lods
inc
out
movs
stos
xor
stos
inc
xchg
popf
rcl
das
sbb
retf
push
cld
push
fbstp
add
enter
sbb
cmp
into
fs
mov
mov
es
movs
in
add
add
test
mov
cmp
mov
xor
outs
out
pop
into
dec
inc
pop
(bad)
loope
push
and
sub
dec
mov
in
xchg
lea
aad
ret
sbb
add
ror
daa
or
call
lods
enter
inc
sbb
int3
popa
aas
pop
push
sub
sbb
xlat
pop
dec
ret
adc
retf
lea
fwait
ds
cmp
xchg
sti
jne
add
push
sbb
push
push
mov
xchg
or
int
lods
add
adc
ins
xchg
mov
xor
pop
inc
push
sbb
pop
out
lahf
cs
sbb
pop
xlat
cs
ds
push
fcom
rcr
pushf
aaa
xchg
test
popf
dec
retf
jmp
dec
xchg
pop
mov
or
mov
dec
aam
mul
pop
mov
clc
aam
sub
scas
test
lds
add
xor
dec
jae
mov
or
cli
out
bound
jmp
push
sub
jne
jmp
jno
xchg
mov
add
bts
push
jo
inc
in
outs
add
jp
dec
pop
inc
in
int
add
push
mov
aas
lahf
leave
jne
sti
and
and
out
rcl
out
and
xor
mov
push
mov
pop
ficom
call
add
xchg
push
or
adc
out
cmp
jg
cmp
loop
and
cwde
nop
mov
cmp
ss
jae
fist
mov
dec
pop
pop
mov
popa
jmp
dec
test
std
or
pop
jae
sti
inc
fstp
(bad)
xlat
pop
pop
push
fsub
retf
stos
cmp
dec
jae
aam
(bad)
or
cli
ss
or
add
xor
dec
sbb
and
dec
test
aaa
lock
sbb
push
jl
js
or
jge
ds
jg
jns
aad
cmps
inc
mov
call
jno
jns
ret
push
std
add
adc
(bad)
jnp
je
pop
int3
imul
out
jnp
jbe
retf
loop
inc
hlt
lock
rcl
(bad)
loop
push
mov
adc
pop
cwde
iret
scas
nop
dec
shr
loope
in
fdivr
test
out
dec
(bad)
in
fldenv
sub
rdtsc
dec
xchg
adc
jecxz
nop
push
fwait
xchg
sbb
outs
mov
xchg
pop
ret
inc
xor
aaa
cmp
push
retf
inc
retf
cmp
sub
jmp
pop
push
sub
sub
addr16
repz
push
movs
adc
dec
mov
cmovge
pop
test
fwait
mov
adc
addr16
dec
aam
lock
addr16
pop
sub
mov
loop
or
cli
ins
into
iret
mov
mov
(bad)
hlt
(bad)
mov
enter
add
ror
mov
inc
ja
ror
add
xchg
sbb
loop
sbb
jmp
xor
fwait
mov
rcl
pandn
xor
jo
int
xor
shl
pop
inc
call
sub
ficomp
fs
sub
add
and
sahf
movs
mov
in
(bad)
pusha
mov
push
leave
mov
loope
loop
adc
fidivr
retf
loopne
jmp
sub
das
mov
jp
pop
sbb
shl
xchg
sbb
mov
push
ret
test
push
or
xlat
dec
cld
popa
adc
call
into
dec
add
push
fmul
out
out
imul
sti
out
xchg
mov
bnd
xor
cmp
rcr
in
pusha
aas
cld
jnp
popa
or
imul
out
inc
mov
mov
imul
add
xor
dec
test
out
scas
in
data16
data16
in
xor
retf
cmp
mov
pslld
jp
ins
adc
cmp
test
div
cmp
sbb
cld
xstore-rng
cmps
sbb
into
jo
ss
stc
cmc
fsub
test
loop
cs
aas
sub
mov
int3
subps
xor
xchg
push
mov
je
(bad)
sbb
inc
icebp
and
pop
cmps
leave
or
mov
sbb
(bad)
dec
jo
mov
es
in
mov
fld
jmp
pop
or
rol
xor
fidivr
mov
add
div
xlat
push
sbb
jno
nop
fiadd
mov
iret
mov
aaa
in
(bad)
stc
sub
cmp
pop
inc
add
mov
shl
push
or
aas
aam
mov
jl
dec
jno
adc
push
dec
jl
shl
jp
pushf
jle
ret
lds
lods
xchg
pop
ja
pop
in
gs
test
ficom
popa
cmp
or
sbb
imul
adc
jb
lahf
test
add
pop
leave
cs
ret
les
mov
icebp
(bad)
retf
add
pop
dec
ror
jmp
cmp
sub
sbb
(bad)
aad
push
dec
sub
je
mov
or
jle
cwde
mov
lea
int3
xchg
jg
xchg
sbb
outs
cld
cs
cmp
xchg
gs
ss
js
sub
cmp
movs
or
(bad)
mov
retf
(bad)
ja
ret
sub
jmp
add
jmp
in
inc
fild
cs
loope
or
loopne
pop
ds
out
and
ffreep
and
out
outs
jo
jne
pop
add
cmp
sbb
xchg
cld
movs
imul
movaps
ins
jae
jmp
adc
sub
aaa
inc
xor
jns
dec
xor
(bad)
out
popa
cmp
ds
push
fwait
jae
push
in
pushf
call
lods
jl
pop
inc
dec
pop
imul
adc
sub
sub
shl
mov
outs
popf
push
jns
pop
xchg
(bad)
mov
or
stos
movs
add
mov
test
rol
stos
outs
ins
ds
in
xor
dec
ins
gs
hlt
sbb
daa
xchg
sbb
xchg
adc
test
mov
and
cmc
movs
aam
(bad)
cld
ds
push
sbb
sub
mul
retf
or
mov
out
imul
scas
stos
fsub
mov
fcomp
push
cwde
xchg
adc
and
push
fmul
rcr
test
dec
or
loope
std
icebp
(bad)
mov
push
pusha
adc
lahf
sar
sbb
adc
int3
int3
mov
dec
inc
jmp
test
or
fstp
out
mov
adc
add
jb
push
xor
std
xlat
test
dec
fst
sar
call
outs
clc
or
fadd
sbb
xchg
sub
sub
les
(bad)
shl
test
clc
add
xor
sbb
jnp
sub
and
pushf
fs
jb
xor
add
jmp
mov
(bad)
xchg
lds
div
xlat
xor
(bad)
scas
mov
dec
fisubr
sub
mov
lods
retf
push
xor
push
shr
mov
mov
out
sbb
mov
loope
outs
je
xlat
mov
push
fld
retf
cmp
xchg
fld
mov
shl
or
call
xchg
loopne
xor
mov
adc
hlt
mov
push
dec
push
repnz
into
out
mov
int3
icebp
xor
das
loope
idiv
(bad)
push
test
imul
call
ja
mov
and
mov
push
or
das
push
push
and
push
(bad)
jb
fs
js
push
(bad)
jnp
pushf
mov
pop
das
jmp
or
mov
sub
in
ror
std
dec
cs
pop
adc
mov
add
dec
loope
or
test
mov
xor
adc
popa
ins
pop
mov
retf
cmp
neg
cs
loop
stos
sub
or
jb
shl
and
mov
icebp
daa
mov
imul
pop
cmps
mov
icebp
mov
push
cmps
mov
jecxz
rcl
lods
dec
stos
mov
dec
mov
pop
shr
leave
ss
hlt
or
cmp
mov
or
call
sub
adc
push
pop
cmps
mov
test
cwde
or
push
dec
cli
jo
ret
(bad)
mov
or
scas
mov
push
or
fld
cmovae
adc
mov
cmps
ret
push
mov
mov
add
or
xor
and
mov
clc
imul
add
ins
shl
cmp
add
fsubrp
cmp
and
jl
xchg
lods
or
scas
das
and
ds
mov
inc
dec
ror
lock
dec
push
mov
inc
cwde
inc
pop
mov
add
ja
scas
das
inc
and
cmp
test
mov
in
mov
sub
leave
sbb
push
add
sbb
sbb
imul
mov
pop
pop
push
push
loope
popf
mov
cmp
sbb
inc
into
xchg
arpl
stc
(bad)
movs
mov
push
sub
push
or
jp
aam
shl
xchg
ins
dec
aam
inc
les
cmovge
add
in
pop
sub
stc
mov
test
and
aam
out
and
mov
or
pop
sbb
jbe
retf
inc
fst
addr16
cmp
out
cmp
pusha
sbb
test
mov
fld
sbb
fwait
cmp
and
stos
push
in
jl
mul
mov
cmp
aam
mov
sub
imul
mov
pop
(bad)
shr
enter
pushf
mov
jb
nop
sub
pop
xchg
jg
mov
int
test
cmps
aam
rcr
and
int
pop
jl
cdq
arpl
mov
jp
mov
pop
xor
adc
daa
mov
jmp
mov
movzx
ss
or
sahf
data16
frstor
push
sub
data16
imul
mov
gs
push
mov
dec
ins
sbb
cdq
jae
mov
int3
xor
icebp
(bad)
mov
add
inc
inc
out
rcl
cs
inc
pop
dec
aam
dec
adc
xor
sub
ficomp
inc
mov
and
xor
dec
fcom
test
nop
call
scas
mov
inc
mov
out
stos
mov
mov
imul
mov
mov
sbb
mov
retf
dec
cmc
xor
xchg
dec
mov
pop
in
jnp
das
xchg
out
int
jno
dec
jae
xchg
stc
popa
inc
test
adc
jge
xchg
cmp
cdq
outs
dec
push
sub
fisub
xchg
jl
fwait
cmp
pop
push
jne
retf
mov
hlt
and
sub
adc
mov
sbb
mov
xchg
jl
stos
sbb
inc
gs
cmps
mov
jmp
jecxz
jnp
inc
xchg
dec
adc
sti
outs
or
xchg
std
out
jmp
repz
rcl
stos
mov
mov
jmp
adc
fild
cmp
arpl
jge
sbb
lock
jo
xchg
rol
mov
sbb
adc
lahf
sub
out
dec
(bad)
cmp
adc
and
cmp
call
or
(bad)
ins
jno
pop
cmp
lahf
idiv
jecxz
xor
aaa
sbb
pop
xchg
xor
mov
add
mov
mov
jmp
mov
mov
or
xchg
pop
dec
mov
loopne
adc
xor
jmp
sbb
pop
in
scas
cdq
cmp
and
les
sub
xchg
push
fisub
loopne
arpl
mov
out
stc
add
mov
sahf
push
sbb
test
dec
mov
mov
sbb
ret
or
aas
jo
lds
xchg
mov
mov
jmp
retf
aas
lods
push
mov
out
pop
cmp
and
sub
loope
(bad)
pop
mov
out
loop
std
sub
sub
stc
jae
and
mov
cmp
aas
test
push
push
cli
mov
pop
gs
leave
adc
into
in
aaa
or
outs
mov
lock
jno
inc
sbb
lods
mov
jo
ss
ss
(bad)
test
jp
xchg
aam
xor
pop
fwait
mov
rol
push
aad
je
es
and
and
push
fcomp
test
lds
push
mov
leave
xchg
dec
cld
aaa
stc
push
sub
(bad)
lahf
push
aas
fisubr
into
push
in
sub
or
rol
jnp
mov
sbb
mov
call
or
movs
add
jbe
aam
aaa
pushfw
mov
jns
cwde
push
(bad)
ror
or
jg
cwde
out
jbe
retf
dec
xor
jge
cdq
inc
pushf
ja
cmps
push
xor
cmps
dec
(bad)
pop
jl
dec
xor
pop
(bad)
xor
cmp
ins
sti
call
pop
and
pop
push
push
xor
out
in
xlat
pop
cdq
in
xchg
inc
xchg
dec
pop
js
shl
imul
scas
adc
push
mov
jno
jmp
int3
test
cmp
fcomp
or
mov
fistp
cmc
sbb
push
inc
mov
jp
mov
and
xchg
pop
mov
mul
cdq
cmp
movs
ret
adc
xor
xchg
into
dec
js
ins
jno
js
pusha
test
mov
mov
push
aas
xchg
fsub
pop
jmp
js
add
icebp
std
or
out
mov
(bad)
out
lahf
fbld
xchg
cmp
arpl
mov
cs
dec
(bad)
xchg
xor
xor
xchg
idiv
xchg
loope
xor
out
retf
sti
cld
cmp
ss
daa
mov
xchg
dec
shr
mov
cld
cmp
imul
fwait
cmc
(bad)
mov
fs
test
sbb
inc
cli
call
data16
arpl
xchg
mov
jns
push
inc
fld
mov
repnz
add
xchg
out
dec
cs
mov
loopne
mov
xor
lods
mov
xor
stc
movs
sub
fbstp
xchg
mov
fdiv
add
fsubr
(bad)
enter
push
sbb
xchg
ret
jne
mov
repnz
mov
pop
mov
fidiv
xchg
mov
pop
dec
in
daa
mov
pop
mov
cmps
jns
sbb
imul
pop
cmp
sbb
repz
stc
in
(bad)
fistp
jno
inc
rcl
mov
int
scas
dec
adc
(bad)
dec
jge
sbb
or
lods
dec
sbb
addr16
or
push
in
mov
mov
adc
ret
xchg
mov
xor
jmp
and
loope
stc
inc
mov
das
fld
in
cmps
out
fistp
xchg
inc
hlt
cmp
daa
pop
test
in
or
cmp
shl
jp
xor
icebp
add
mov
stos
xchg
add
call
repz
daa
xchg
mov
adc
shl
jbe
cwde
fmul
ss
xor
fld
rcl
into
mov
or
mov
nop
mov
xor
aam
call
mov
jmp
shr
cs
loopne
(bad)
push
cmp
sbb
movs
push
jmp
aad
pop
leave
cmp
push
sahf
rcl
dec
fs
je
cmps
int
cmp
mov
test
sub
ret
dec
or
movs
fs
xchg
in
scas
lds
clc
(bad)
mov
jp
jns
ss
imul
push
jns
mov
or
mov
dec
fsubr
pop
test
fimul
(bad)
outs
jb
push
ret
imul
inc
xor
popf
popa
push
pop
push
mov
dec
fistp
fdivp
mov
(bad)
cwde
je
scas
add
fsubr
and
jae
dec
in
std
cmps
push
ficomp
in
cs
stos
dec
nop
(bad)
xchg
pop
dec
mov
icebp
jp
mov
retf
xchg
arpl
lock
data16
push
not
or
or
jo
imul
mov
dec
repz
mov
dec
xchg
push
loope
cmp
dec
dec
or
xchg
scas
dec
xchg
mov
inc
daa
rcr
cmovge
inc
imul
leave
sahf
pop
inc
push
(bad)
imul
jl
popf
arpl
inc
xchg
xchg
mov
inc
nop
icebp
daa
stc
ret
data16
scas
add
inc
dec
neg
shl
add
push
mov
xor
frstor
or
ret
gs
mov
push
enter
cld
cwde
jb
out
xchg
push
adc
adc
jle
movs
or
mov
ins
sub
fucom
imul
inc
sbb
xchg
adc
xchg
test
in
stc
adc
test
jl
pop
xor
pop
push
cli
fild
je
inc
fidivr
fild
pop
dec
(bad)
cmpxchg
(bad)
sahf
adc
xor
or
mov
or
xchg
call
xchg
lock
(bad)
xchg
xchg
cld
add
adc
jmp
mov
pop
shl
mov
movs
lea
test
sub
retf
and
sti
jb
arpl
adc
jecxz
ins
add
dec
mov
das
call
adc
out
in
push
ret
out
pop
in
ret
jecxz
mov
mov
lods
ret
fadd
int
sar
push
sbb
fwait
cld
jg
movs
pop
repnz
xor
dec
cmp
shl
push
cmps
movs
push
mov
cs
shl
inc
sub
adc
cmps
xor
xchg
repnz
adc
dec
inc
jo
out
imul
add
xlat
dec
rcl
ror
aaa
retf
mov
mov
sub
push
xchg
sar
jge
push
or
cmps
call
xor
inc
add
or
dec
test
cld
or
pop
mov
pop
out
mov
(bad)
addps
repnz
dec
pop
adc
dec
xchg
data16
scas
sub
iret
xchg
hlt
xchg
outs
pop
call
aam
pop
mov
cld
pop
mov
push
push
loop
out
(bad)
sub
pop
ins
mov
call
jge
data16
mov
icebp
cli
xor
in
mov
dec
mov
popf
pushf
push
pusha
push
jns
or
cmps
enter
cmps
cld
mov
or
mov
fwait
repz
ret
icebp
cmp
loop
xchg
sub
pop
sub
jae
retf
xchg
jp
(bad)
enter
loopne
cmp
clc
jo
cmps
cwde
inc
mov
adc
jl
cmp
push
jbe
jg
out
dec
(bad)
mov
(bad)
jmp
mov
jb
cmp
into
mov
dec
mov
xchg
data16
pop
les
mov
and
xchg
fcom
in
or
int3
mov
sub
and
js
cmp
pop
cli
pop
add
adc
xor
das
mov
mov
out
lods
inc
pop
into
xchg
inc
jae
aaa
pop
sbb
xor
mov
mov
retf
cmps
fmulp
into
sub
popf
shl
adc
pop
mov
idiv
(bad)
cmps
cmp
jo
lahf
fbstp
retf
call
lods
sub
mov
inc
push
cmp
(bad)
fucomi
inc
xor
push
dec
add
aad
jmp
mov
fisttp
jle
or
leave
pop
xor
push
push
(bad)
mov
pop
adc
lahf
push
fs
xor
aam
test
sbb
or
jmp
dec
jp
or
dec
sahf
es
outs
pop
and
xor
mov
(bad)
in
mov
pop
shr
pop
mov
mov
call
sahf
xor
sub
mov
sbb
nop
shl
xor
mov
sbb
pop
enter
addr16
les
cdq
push
ret
ror
jg
(bad)
movs
cmp
push
adc
and
push
and
mov
ret
mov
sbb
inc
shr
or
pop
and
cli
ss
dec
sar
or
addr16
mov
lock
neg
mov
xlat
jl
in
rcr
shl
xor
(bad)
xchg
sub
iret
mov
lock
inc
sub
ret
call
stos
std
pop
in
repnz
push
push
mov
mov
jno
aas
lods
dec
pop
les
sub
loope
aas
(bad)
aaa
aas
or
fcomp
iret
lds
sub
shl
test
in
mov
push
daa
imul
jno
fs
mov
mov
test
adc
ror
adc
int3
out
mov
in
lock
movs
jne
mov
push
inc
or
mov
sub
inc
daa
add
lods
dec
(bad)
fcomp
gs
cmp
fstp
push
sahf
(bad)
pop
sahf
add
and
call
mov
xlat
out
cmp
xor
sbb
pop
dec
mov
call
dec
not
retf
clc
lods
lods
(bad)
or
or
mov
idiv
(bad)
cld
cmp
sub
out
hlt
fld
adc
push
and
xor
adc
shl
out
retf
sub
ds
cld
cmp
mov
repz
fstp
lds
jo
jmp
mov
push
cmps
mov
mov
mov
das
sahf
fwait
movs
lahf
cmp
or
iret
jmp
out
mov
pop
jbe
and
pushf
push
pop
cmps
cmp
clc
mov
sub
test
push
out
ficomp
fcomp
in
jnp
xor
add
mov
adc
pop
jns
xor
mov
out
fdivr
pop
mov
(bad)
(bad)
xchg
sub
xchg
push
cmp
cmp
ror
pop
push
cld
(bad)
aas
enter
pushf
dec
mov
mov
movs
mov
xor
xchg
in
dec
call
xchg
xchg
in
jo
and
adc
sbb
mov
xchg
inc
pop
dec
or
scas
jecxz
dec
shr
jnp
inc
daa
cdq
retf
dec
xchg
movs
sti
mov
sub
movs
dec
cwde
(bad)
inc
test
enter
and
dec
js
arpl
jmp
mov
dec
imul
xchg
movs
mov
inc
and
xor
xchg
xchg
test
push
push
pusha
cmps
jmp
gs
push
sbb
jae
popf
pop
div
push
add
(bad)
push
shr
or
test
xor
lahf
mov
pop
xor
stc
in
dec
aam
not
push
fdivrp
mov
xchg
jp
xchg
pop
fst
dec
mov
imul
push
mov
mov
adc
push
mov
retf
mov
ja
dec
pushf
dec
or
sub
stc
icebp
jl
and
or
data16
sahf
xor
retf
dec
mov
sbb
int3
js
mov
pop
lock
sub
rcr
icebp
push
pop
sub
sub
ret
push
sti
outs
cmps
cmp
mov
movs
out
fwait
mov
inc
mov
jno
dec
clc
in
fistp
add
add
mov
repz
lds
shl
je
pop
pop
mov
enter
mov
mov
sbb
push
pop
push
xor
dec
dec
sub
pop
shl
xchg
stos
mov
xchg
retf
and
mov
or
jmp
cld
mov
lahf
scas
inc
popa
test
in
mov
push
stos
out
ror
movs
or
sahf
lock
pop
pop
push
ficom
pop
je
xchg
mov
das
movs
sbb
sbb
mov
outs
xor
adc
retf
sub
enter
cmp
in
sahf
fimul
inc
ret
stc
jmp
or
or
retf
jne
mov
cmp
scas
aaa
into
sbb
call
dec
push
add
cmps
jbe
sbb
xor
adc
ret
pop
dec
out
mov
xchg
fmul
pop
fidiv
cmps
mov
cld
xchg
pop
xchg
call
add
cs
mov
mov
jo
fsub
inc
jg
inc
or
scas
push
repnz
call
iret
(bad)
iret
pop
popf
sahf
sub
daa
jl
add
lods
out
or
add
cmps
clc
das
shl
movs
dec
dec
cmps
(bad)
(bad)
cld
mov
sub
dec
mul
and
scas
or
inc
push
sbb
dec
int
adc
adc
out
lds
sbb
sub
pusha
sub
retf
shr
sbb
or
jo
xchg
rcl
sbb
adc
mov
or
sbb
xor
iret
xchg
mov
in
sbb
(bad)
data16
popa
out
jmp
push
inc
dec
and
xlat
push
adc
or
in
cld
inc
das
stos
or
icebp
fisttp
pushf
mov
clc
push
mov
cli
push
pop
xchg
sub
xchg
out
jle
aad
repz
fwait
sti
movs
xor
mov
and
jno
mov
lods
sub
cmp
pop
stc
std
stos
les
mul
fs
xchg
dec
adc
mov
and
inc
scas
jne
adc
jae
nop
popf
mov
inc
inc
push
mov
or
mov
dec
xlat
push
pop
xchg
fldz
pop
adc
lods
ins
sub
sbb
jo
sub
call
lds
pop
imul
and
xchg
cmc
cmp
mov
in
test
jge
aas
(bad)
shl
mov
out
jl
push
imul
push
js
retf
xchg
call
jp
add
rol
and
jmp
or
sbb
int
addr16
outs
mov
mov
mov
ss
stc
call
sub
aas
mov
mov
jno
mov
les
fsub
inc
and
push
mov
lock
cmp
cmc
push
jmp
adc
adc
mov
inc
push
lock
movs
stos
repz
hlt
xchg
pusha
jmp
or
pop
mov
dec
dec
lods
xor
rcr
push
push
sahf
xchg
into
mov
jo
push
xor
cmps
push
outs
lds
cmps
popf
aaa
or
adc
repz
fdivr
mov
cwde
jge
in
mov
aad
sbb
sti
lahf
sar
icebp
push
int
stc
sbb
dec
inc
scas
jmp
jb
popa
sar
imul
cmp
mov
ins
mov
pop
dec
lahf
inc
leave
jne
mov
sub
sar
sub
lds
sub
(bad)
lock
and
test
push
ret
in
sub
jge
cwde
adc
mov
or
push
mov
mov
xchg
lods
scas
cmps
xchg
iret
push
sub
mov
test
jne
pusha
(bad)
mov
mov
(bad)
stos
(bad)
pop
pushf
mov
nop
lahf
sub
mov
pop
mov
jb
ret
sbb
mov
popa
jae
fs
mov
mov
xchg
inc
sub
mov
sbb
in
mov
aam
adc
mov
test
in
sub
mov
sbb
add
addr16
xchg
sbb
mov
or
leave
test
js
mov
fstp
mov
packuswb
shl
repz
add
sbb
bound
les
push
int3
mov
(bad)
sub
mov
shl
xor
and
lods
adc
xchg
push
push
inc
dec
adc
movs
pusha
jo
mov
mov
push
cwde
and
mov
add
out
mul
add
jg
sbb
je
cmp
xor
movs
adc
jecxz
jno
cmp
gs
hlt
out
fs
sbb
repnz
loope
ins
ss
daa
jmp
(bad)
and
daa
scas
adc
dec
out
stos
pop
mov
mov
or
pop
or
pop
out
dec
arpl
fist
xchg
mov
jl
add
xchg
ja
pop
xchg
sub
mov
lods
xchg
jno
cmp
in
stc
jg
test
je
ins
sub
xchg
or
mov
xchg
pop
les
dec
in
jle
add
jns
sbb
lahf
pop
xchg
(bad)
loope
(bad)
mov
mov
sbb
mov
xor
fsub
adc
xor
retf
sbb
mov
push
sbb
push
mov
dec
out
inc
pop
adc
test
dec
add
mul
inc
xchg
cmps
daa
xor
and
movs
pop
mov
(bad)
mov
mov
cld
jge
sub
test
mov
inc
pop
fcmovne
push
sub
popa
stos
or
sub
inc
dec
dec
jp
loope
into
shr
cli
(bad)
mov
(bad)
xchg
es
dec
push
je
clc
cmp
mov
fcomp
mov
es
repnz
xor
daa
scas
inc
cs
add
push
add
mov
test
shl
mov
les
pop
fild
fild
pop
ds
and
push
jns
jge
jecxz
(bad)
jmp
nop
mov
xchg
jne
rol
sbb
sahf
je
aas
xor
inc
fcom
inc
test
add
inc
sti
lds
xor
sbb
mov
fstp
shl
jmp
repnz
add
bound
(bad)
sub
cmp
shr
or
add
daa
mov
mov
or
mov
bound
cld
jo
js
pop
dec
int
cmp
fwait
cmp
xchg
dec
std
xchg
not
dec
std
(bad)
pop
adc
jl
sbb
sbb
dec
shl
jmp
sub
push
sub
mov
inc
sahf
mov
mov
jp
xchg
xor
add
imul
jmp
and
rcr
sbb
cdq
xchg
inc
jns
loope
cmps
sbb
int3
fwait
and
xchg
ins
mov
dec
cs
push
jb
push
pop
pushw
push
mov
xchg
jo
shl
mov
add
mov
mov
fadd
ds
das
cwde
pop
fcomp
or
mov
lahf
repnz
cmp
jae
nop
cmp
jmp
ja
retf
popf
(bad)
scas
jmp
and
mov
test
cmp
inc
dec
adc
mov
and
cmp
mov
icebp
fisttp
movs
pop
fidivr
pop
daa
stc
test
ret
(bad)
xlat
adc
ds
jle
fsub
in
jo
data16
add
imul
xchg
seta
imul
cdq
nop
cli
add
jl
push
out
sbb
movs
sbb
pushf
adc
retf
pop
call
sbb
in
push
fistp
inc
sbb
add
or
mov
por
mov
cmp
mov
add
fisttp
or
lea
pop
nop
imul
jne
jecxz
loope
add
push
jo
(bad)
cmc
ret
ja
sbb
dec
aas
jg
arpl
push
dec
out
repz
push
mov
stc
lods
and
out
(bad)
push
mov
inc
loopne
js
repnz
mov
adc
add
mov
movs
or
lods
rcr
xor
inc
cmps
outs
outs
add
movs
sbb
jge
iret
je
cmp
push
sar
mov
jg
(bad)
xchg
jl
adc
mov
in
jmp
xchg
shr
test
sub
add
pusha
jle
sbb
hlt
mov
aam
adc
ret
cwde
mov
fistp
iret
push
stos
(bad)
out
sub
sahf
jecxz
icebp
(bad)
or
psubsb
test
test
in
jo
test
lahf
fwait
pop
jle
push
cdq
nop
shr
push
pop
dec
je
mov
xchg
je
(bad)
call
and
adc
dec
and
push
jle
or
mov
jge
retf
jno
pop
push
sub
and
out
stc
xlat
loop
pop
call
xlat
imul
rcr
mov
push
fisubr
scas
bswap
xchg
sbb
mov
out
sub
stc
push
jae
popa
xchg
xor
movs
cli
mov
test
mov
mov
cwde
jb
pop
inc
ins
sar
imul
cmp
jecxz
mov
(bad)
nop
xor
loopne
cmp
(bad)
fsubr
dec
ficom
(bad)
mov
mov
call
inc
jmp
stos
dec
xchg
aad
sbb
ror
lock
push
ror
ja
lods
mov
jno
stos
mov
adc
es
and
retf
push
jmp
xchg
cmp
xor
iret
rcr
cmp
jmp
push
sar
inc
xor
mul
xor
pusha
sbb
mov
movs
test
sbb
or
scas
retf
fwait
mov
sub
mov
or
xchg
or
fnstenv
xchg
pop
ficom
test
sub
iret
aad
jbe
clc
add
push
out
pop
in
stos
fld
push
dec
or
mov
and
pushf
popf
lods
fwait
push
sbb
sbb
int
and
fstp
adc
push
fbld
fistp
movs
add
pop
xchg
fst
mov
mov
pop
jns
loopne
popf
aam
(bad)
cli
mov
test
xchg
ja
pop
cmp
into
fisubr
mov
test
mov
mov
pop
das
out
movs
adc
inc
ds
call
or
xchg
daa
ja
out
fstp
(bad)
mov
or
mov
or
fs
sbb
test
and
push
jbe
xchg
movs
fldln2
xchg
mov
mov
mov
dec
xor
pop
add
repnz
cmp
xchg
jbe
out
into
mov
das
stos
cmp
cdq
inc
adc
lock
cmp
pusha
push
pop
fidivr
loope
sbb
inc
dec
rol
adc
or
adc
and
mov
push
call
pushf
adc
mov
mov
mov
xchg
stos
inc
cmp
cmp
add
pop
hlt
out
jmp
lods
imul
arpl
jne
dec
jp
and
or
inc
push
(bad)
jge
or
mov
aam
test
sbb
enter
add
inc
data16
out
push
mov
mov
jae
mov
aas
std
fldpi
xchg
sub
mov
jns
adc
stos
dec
out
hlt
add
scas
mov
test
call
(bad)
pushf
xchg
scas
mov
jecxz
idiv
popa
cmp
loope
or
fcom
xor
jno
mov
fldpi
sti
test
pop
rcr
xchg
repnz
push
gs
sub
lahf
mov
sti
in
xor
popf
inc
repz
js
jo
jb
test
push
ja
dec
shl
jae
pop
daa
cmp
cmp
retf
out
outs
cmps
inc
ror
shl
fiadd
jne
dec
shl
imul
or
push
or
cmp
add
lock
dec
nop
bound
mov
dec
xchg
aad
inc
aam
cld
inc
ror
xor
fisttp
jns
jbe
fcomp
xor
mov
jo
mov
adc
clc
nop
out
pusha
sbb
sti
fild
int3
sub
cmps
jge
push
push
(bad)
in
dec
pop
dec
sti
inc
sbb
xor
add
out
(bad)
mov
mov
test
push
push
inc
stos
sub
dec
es
js
push
sar
sti
popa
(bad)
iret
sub
shl
loopne
loopne
pop
mov
sti
jmp
scas
jne
out
mov
scas
je
in
jge
inc
jmp
dec
xchg
push
sub
xchg
mov
add
add
ficomp
add
ins
ror
pusha
jle
jmp
and
jg
and
dec
enter
and
into
repnz
dec
dec
lahf
push
xchg
stc
sar
xchg
vfrczps
pop
into
dec
push
(bad)
repz
pushf
icebp
fimul
or
add
dec
(bad)
(bad)
arpl
mov
sbb
mov
xchg
ret
imul
xor
shl
bound
adc
and
inc
out
sub
and
add
mov
popa
cmps
enter
sub
or
int3
lods
cli
pushf
call
mov
xor
xlat
repnz
pop
xlat
mov
adc
movs
xor
and
adc
rol
lea
out
not
xor
and
lds
in
jg
inc
movs
imul
lods
push
pop
data16
push
sbb
es
jno
xor
adc
nop
mov
jmp
out
push
jae
stos
jmp
retf
mov
fdivr
mov
pop
test
dec
pmaxub
add
add
test
std
(bad)
fdiv
adc
jl
imul
hlt
addr16
and
rcr
jmp
mov
cmps
test
dec
push
add
lahf
and
push
cwde
lahf
mov
daa
mov
scas
fimul
add
push
inc
mov
add
dec
jae
aaa
push
(bad)
les
lea
or
cmps
sti
sub
push
adc
pop
stos
jge
lea
adc
jp
sbb
sbb
out
dec
arpl
daa
movs
push
mov
xlat
test
fucompp
test
jns
add
cmp
pop
dec
mov
cs
cmps
lods
test
cmp
(bad)
test
push
inc
dec
dec
(bad)
(bad)
pushf
in
push
mov
in
out
inc
nop
aaa
pop
aam
xchg
push
dec
std
fiadd
loop
cmp
cdq
jno
lods
imul
inc
push
jns
adc
scas
add
mov
xchg
ror
sbb
adc
push
imul
shl
dec
ret
push
xor
dec
xchg
(bad)
sbb
push
imul
inc
lock
xor
adc
loope
inc
jecxz
adc
std
imul
xchg
jle
and
stos
nop
pop
lock
(bad)
cpuid
push
dec
adc
test
dec
call
fnstenv
cmp
lods
mov
or
sub
mov
mov
cwde
pop
xchg
sahf
fld
or
fistp
mov
add
xor
sbb
xor
repnz
aaa
mov
stos
mov
mov
xchg
or
stos
call
pop
mov
cmp
pop
push
dec
mov
shl
jmp
pop
xchg
jae
xor
(bad)
mov
sar
inc
sbb
rcr
in
or
jge
fstp
pop
xchg
adc
int3
into
daa
cs
mov
aam
add
into
movs
lahf
iret
mov
jno
and
dec
cli
jbe
push
int3
popf
fnsave
inc
jbe
xchg
mov
xchg
jge
pop
xrelease
repnz
gs
out
jnp
sub
sub
mov
inc
fs
mov
cwde
jp
lods
es
jg
mov
imul
dec
arpl
jno
cmp
pop
es
mov
and
stc
mov
cmovg
jb
jae
mov
and
sbb
jnp
sti
vmread
adc
mov
ret
jp
nop
rcr
(bad)
adc
sbb
fstp
popf
push
and
dec
aam
jnp
sbb
icebp
sub
jecxz
dec
fbstp
add
data16
dec
sub
xchg
lahf
push
sub
pop
jge
mov
daa
nop
shr
jbe
xor
jo
retf
add
ja
push
inc
iret
mov
or
pop
xchg
xor
leave
mov
push
pop
(bad)
mov
in
ror
jmp
fadd
xchg
in
loopne
stos
add
sub
iret
mov
in
ds
hlt
ret
in
pushf
xor
inc
mov
jb
or
call
inc
push
es
ss
jne
dec
sbb
and
mov
jle
and
push
xor
std
ret
pop
fs
pop
in
and
jg
dec
lahf
inc
jne
inc
inc
lea
div
lods
xor
cdq
stc
(bad)
(bad)
js
jne
jnp
or
das
scas
dec
cld
js
cdq
rcr
sbb
pop
push
push
test
scas
jle
(bad)
arpl
lds
dec
mov
or
in
(bad)
mov
mov
mov
pop
dec
gs
fwait
mov
adc
dec
adc
mov
or
jne
push
and
dec
mov
shl
out
cli
cmp
sub
cmp
dec
push
push
dec
lds
jle
repz
adc
push
scas
jno
mov
jno
jbe
inc
mov
dec
addr16
jae
scas
(bad)
fld
jmp
test
inc
mov
jns
stos
cmp
ret
or
push
jge
jns
clc
sti
in
sbb
xchg
mov
fldcw
dec
or
mov
push
jecxz
mov
ror
sar
mov
inc
cmp
dec
mov
mov
mov
sub
xchg
cdq
stc
jae
xor
and
push
(bad)
xor
jns
cmp
pop
ret
dec
jbe
ja
xor
call
cmp
push
cmps
jle
cmp
out
push
loopne
movs
push
dec
xchg
or
retf
movs
mov
cmp
int
repz
data16
sahf
dec
push
aas
inc
ja
xchg
in
mov
push
sar
jbe
loop
inc
ror
in
mov
ins
retf
cmps
cmps
fs
and
popf
test
cmp
jnp
cmp
cmp
aaa
mov
loop
cmp
mov
clc
mov
dec
neg
je
(bad)
ds
and
pop
cs
pusha
jb
jae
std
fsubp
push
or
pop
das
repz
mov
(bad)
dec
mov
cmps
cdq
jno
mov
ror
adc
xor
cmp
push
xchg
add
icebp
repz
test
ror
mov
sub
xlat
add
xchg
sub
push
popa
mov
outs
or
push
jle
stos
mov
push
out
lock
lods
add
sbb
jg
fwait
in
add
xchg
jbe
stc
cmp
mov
xchg
(bad)
icebp
out
adc
das
sub
mov
jbe
mov
mov
mov
xchg
jns
adc
mov
pop
and
retf
fimul
pop
inc
xchg
jmp
daa
xchg
dec
out
call
sbb
daa
cmp
test
and
pop
inc
xor
cmp
dec
cs
xchg
or
mov
mov
or
fstp
ins
ficom
push
out
stc
aas
cwde
inc
jns
jp
enter
inc
xor
mov
mov
addr16
xlat
fmul
mov
stos
pinsrw
push
sbb
mov
xchg
std
pop
cmp
(bad)
mov
jl
jle
xchg
pop
sub
push
int3
inc
fcomp
jg
lock
stc
jl
pop
ins
mov
cmp
call
add
loopne
fcmovnb
or
ss
xchg
sub
stos
mov
xchg
retf
mov
push
sub
cmp
or
nop
aas
aas
and
loopne
dec
mov
xchg
stos
not
into
frstor
jmp
xchg
mov
arpl
fidivr
mov
ss
mov
jecxz
mov
int
pop
cmp
push
mov
sbb
loopne
div
jb
mov
inc
ins
pushf
and
dec
mov
mov
cmp
int3
ret
jmp
outs
sti
and
jl
sbb
mov
pop
xor
cmp
push
lea
push
adc
(bad)
fmul
jo
mov
jle
adc
js
mov
pop
daa
sbb
lods
inc
push
cmp
scas
xor
std
sbb
sar
dec
fild
mov
pop
test
dec
pop
stc
ret
xchg
push
fisub
(bad)
cmp
int
cmps
fimul
pop
mov
xchg
mov
mov
jmp
cmp
inc
jae
push
(bad)
out
mov
jns
sub
xchg
pop
sub
(bad)
into
cmp
cmp
sbb
fsub
cmp
pop
fcmovb
pop
inc
fs
ret
sub
add
cmp
pushf
xor
dec
cwde
xchg
push
pop
leave
imul
into
inc
hlt
les
cdq
push
in
push
mov
pop
dec
pop
repnz
dec
add
adc
xor
mov
ss
xor
and
sbb
stc
adc
daa
je
jno
and
sbb
js
pop
pop
les
pop
lds
call
cs
sti
sub
mov
sbb
or
das
adc
ins
cld
jae
retf
(bad)
mov
adc
sbb
or
retf
into
out
fiadd
xor
aas
add
jecxz
jne
dec
cmc
shl
fcom
jb
jae
into
pop
and
(bad)
sti
nop
retf
pop
fcom
jb
xchg
shl
cmp
push
sub
aaa
inc
jbe
xchg
addr16
loopne
push
cmps
gs
xchg
scas
mov
rol
lds
adc
cmp
xchg
xchg
shl
and
int3
jp
loopne
std
int3
test
inc
stc
adc
loope
jmp
jno
dec
cli
jnp
inc
push
mov
mov
stos
cmp
pop
popf
out
imul
push
cs
mov
mov
jp
loope
xchg
xor
outs
add
xor
out
outs
adc
inc
test
mov
or
xor
out
inc
push
jb
pop
aas
call
enter
xchg
cwde
sbb
(bad)
retf
imul
ins
jl
movs
jmp
int3
adc
bnd
call
pop
push
cli
std
inc
(bad)
xchg
outs
xchg
fwait
cmp
ret
or
push
pusha
xor
pusha
add
or
xlat
fld
shr
mov
jb
retf
sub
xlat
sub
cdq
mov
and
sar
cmps
adc
shr
mov
sbb
bswap
in
pop
add
sub
call
add
fucomi
dec
cld
mov
in
push
or
xor
sbb
shl
aaa
and
not
in
adc
mov
outs
mov
mov
popa
rcl
mov
cmp
or
push
inc
clc
add
test
(bad)
shl
movs
sub
icebp
(bad)
jnp
push
push
popa
and
cdq
mov
or
sub
dec
clc
inc
inc
cmc
push
and
xchg
sbb
fnsave
mov
leave
(bad)
dec
cmps
mov
jo
popa
sub
add
xor
add
aad
xchg
cmp
retf
clc
jnp
fsub
rol
mov
gs
inc
fild
daa
pusha
int3
leave
xchg
(bad)
in
mov
lock
cmps
aas
jle
inc
out
inc
mov
xlat
dec
ficomp
push
inc
mov
or
xor
jno
mov
inc
pop
add
mov
popf
loop
stos
push
and
push
jbe
test
inc
mov
in
mov
mov
inc
loope
push
push
and
cli
neg
call
dec
push
pop
(bad)
jecxz
mov
iret
rol
sti
fisttp
(bad)
mov
dec
pop
lods
ja
in
dec
mov
pusha
in
push
fdivr
test
push
xchg
scas
iret
ds
and
in
fld
(bad)
in
and
in
inc
shr
stos
dec
sub
inc
cmp
(bad)
mov
inc
cmp
or
dec
mov
lods
lahf
retf
ret
aam
adc
jge
and
sbb
cmp
adc
jmp
outs
iret
div
(bad)
mov
cmp
xchg
es
push
xor
jae
adc
xchg
ins
js
or
(bad)
out
ret
or
push
or
in
push
sub
xchg
add
lock
adc
movs
jae
retf
test
sahf
and
sbb
jmp
and
sub
fxch
das
ret
shr
mov
xor
ffreep
xor
repnz
adc
loope
dec
loop
xor
add
popf
ss
cli
mov
cdq
ret
sahf
pop
and
inc
jecxz
leave
add
or
outs
jae
das
push
ins
cs
hlt
add
xor
(bad)
mov
(bad)
enter
mov
push
rcl
(bad)
retf
stos
dec
hlt
push
sub
mov
adc
aaa
sub
xor
pop
cmp
cdq
stc
sar
push
int3
mov
ror
(bad)
xchg
add
xlat
inc
test
cs
loope
push
pop
test
movs
mov
imul
arpl
sub
in
mov
inc
pop
stos
or
fst
and
mov
xor
rcr
pop
dec
inc
sti
mov
ds
int
add
pop
ds
loop
(bad)
js
push
clc
xchg
mov
cli
xchg
pop
pop
mov
ret
(bad)
push
in
pop
sbb
xchg
scas
repz
mov
cdq
jb
mov
cmp
cmp
pop
lods
lea
xchg
sbb
push
lds
pop
lea
inc
jecxz
xchg
into
(bad)
das
pop
retf
sbb
in
mov
xor
mov
push
fnsave
out
push
arpl
pop
and
sub
xchg
xchg
mov
popf
loop
xor
arpl
pop
mov
xlat
pop
(bad)
jmp
jle
inc
iret
(bad)
ret
popf
into
ja
sub
lahf
or
inc
jno
pop
mov
xchg
daa
pop
popf
sahf
xchg
scas
pop
xchg
imul
push
push
jge
xor
add
jle
aaa
or
shr
(bad)
and
shl
xchg
iret
and
sbb
idiv
call
retf
movs
enter
pop
int3
gs
xchg
out
xor
data16
sub
push
xchg
test
xor
and
push
jl
and
retf
ud1
mov
cwde
mov
add
jno
popf
aas
xor
inc
pop
dec
mov
outs
push
cmps
das
sub
jg
cli
cmp
outs
ds
mov
ret
push
pop
and
push
mov
push
sub
inc
mov
add
aas
inc
cmp
or
sahf
mov
and
pusha
mov
imul
outs
cmc
inc
sbb
cmps
fld
das
retf
(bad)
xchg
pop
dec
outs
push
xor
or
pop
lahf
shr
jae
out
mov
push
ret
cmps
jnp
xchg
jb
or
jno
xor
add
xchg
(bad)
jge
xchg
(bad)
sbb
ss
pop
push
jne
sub
dec
rol
dec
sti
hlt
(bad)
cmp
and
jmp
xor
out
sub
out
(bad)
jb
arpl
xlat
in
jne
ds
xchg
not
xor
or
xchg
mov
cmps
shl
lock
jl
mov
sub
(bad)
retf
(bad)
adc
mov
outs
pop
(bad)
pop
test
mov
jecxz
lahf
mov
daa
outs
jno
(bad)
(bad)
and
adc
cdq
mov
push
push
movs
fiadd
or
jns
xor
and
pop
(bad)
sbb
sub
push
xor
push
xchg
stos
xchg
pmaxsw
(bad)
cmp
sbb
inc
lahf
pop
or
lods
les
xchg
cli
adc
inc
mov
xchg
xchg
out
inc
stos
and
int
xchg
inc
shr
jg
outs
push
in
add
xor
xchg
mov
iret
dec
and
xchg
jl
fdivr
or
sbb
movs
fstp
pop
jns
not
mov
adc
inc
les
cmp
or
and
aad
pop
not
mov
stos
jb
lahf
enter
enter
add
call
sbb
call
jl
int
mov
sub
fwait
jecxz
push
into
arpl
pushf
add
jns
jmp
push
sbb
adc
int3
retf
retf
inc
jmp
fisttp
pop
imul
adc
std
out
loopne
dec
mov
js
(bad)
cwde
call
sbb
sub
sub
bound
stc
call
mov
pxor
inc
mov
dec
push
je
pop
neg
shl
push
mov
add
out
xor
jo
pop
test
rol
jle
clc
das
sub
sar
mov
push
cmp
aas
push
xchg
rcpps
sti
sbb
and
(bad)
cli
inc
xor
and
sahf
sub
inc
cmp
cmp
lods
rcr
leave
jmp
add
in
add
xor
pop
push
nop
and
ror
xchg
fadd
out
mov
popa
into
data16
bound
cmp
popf
int3
ret
std
(bad)
cmp
cli
fcomi
and
push
add
push
or
mov
scas
dec
movs
or
cld
jno
dec
stos
pop
out
shl
and
sub
in
scas
and
clc
inc
push
jb
push
inc
in
inc
mov
mul
cdq
jmp
test
xor
mov
xor
test
ror
arpl
cmps
jno
pop
jb
mov
mov
iret
dec
pop
pop
cmp
pop
ror
sub
lahf
retf
sub
test
push
mov
mov
mov
xchg
stc
movs
popf
stos
jg
add
arpl
mov
mov
mov
ror
mov
(bad)
stc
sbb
mov
push
adc
xor
xchg
jb
cmp
adc
movs
in
call
ficomp
(bad)
xchg
push
sbb
stos
nop
sub
(bad)
std
push
out
(bad)
mov
push
pop
test
fldcw
xchg
mov
cmp
int
jecxz
in
cs
call
idiv
in
add
and
or
ja
inc
pushf
or
sub
jae
call
ins
push
das
xchg
mov
cmp
push
rcl
or
push
cmps
stc
and
lock
add
dec
out
call
fwait
cmp
test
jl
cmps
mov
inc
xchg
jbe
mov
push
das
popf
sbb
fst
push
in
in
fimul
fdiv
inc
clc
inc
push
cmp
bound
xor
mov
pushf
pop
test
push
cmp
xor
add
sahf
xor
das
adc
jp
dec
in
in
cmp
lods
jecxz
and
loope
gs
call
in
jae
stos
les
push
push
adc
jo
lahf
pop
jbe
lock
rcl
dec
aaa
dec
ins
dec
or
hlt
das
cdq
jae
lock
xor
mov
ja
pop
xor
repz
jmp
fld
mov
adc
mov
inc
pusha
call
inc
pop
std
dec
jge
test
dec
add
xor
ds
lea
ret
sbb
inc
test
(bad)
mov
mov
arpl
fadd
int3
out
out
xlat
retf
mov
xchg
movs
mov
repz
add
adc
pop
adc
jnp
pop
scas
mov
shl
mov
adc
fstp
pop
sahf
xor
out
test
add
mov
ret
xlat
fisub
shl
dec
or
mov
xchg
sahf
in
je
enter
jle
loop
xor
sbb
add
mov
ds
sbb
retf
rol
sub
mov
fld
push
mul
sub
push
jmp
mov
adc
cmp
jecxz
adc
jne
das
xor
and
jmp
mov
ror
push
fcomp
std
and
sbb
mov
ds
out
or
pop
xchg
std
jp
cmp
int
xchg
addr16
scas
mov
inc
cmp
cmp
mov
jbe
or
dec
sbb
mov
xchg
(bad)
lahf
inc
dec
int
and
lds
sti
cmp
daa
or
fld
fld
rcr
jmp
stos
mov
and
push
pop
pusha
and
xchg
mov
inc
js
scas
mov
mov
in
arpl
aaa
inc
shl
jecxz
jmp
sahf
ss
pop
retf
es
inc
jecxz
mov
push
popf
imul
push
sahf
iret
xchg
mov
add
mov
mov
adc
push
gs
jae
out
jb
mov
xchg
add
repz
jmp
pop
inc
cmp
mov
sub
cmp
dec
cmps
cdq
pop
cmps
mov
std
(bad)
xchg
icebp
mov
or
adc
inc
mov
push
or
pop
jge
pop
icebp
pop
push
jge
xchg
sub
pop
fmul
cmps
mov
jno
pop
fcmove
dec
mov
mov
leave
mov
jns
(bad)
add
movs
out
and
adc
dec
jge
push
inc
adc
pop
xor
add
bound
mov
jae
push
cld
in
(bad)
push
add
adc
xor
ja
mov
loop
pop
adc
xor
push
daa
jmp
add
in
sub
push
shl
sub
dec
iret
into
out
arpl
mov
jmp
and
or
mov
repz
and
push
call
xor
repz
ds
cs
xchg
sub
add
cld
add
mov
loop
cmp
int3
jmp
adc
add
out
popa
lahf
xchg
mov
sbb
pop
rcl
stos
in
cmp
call
(bad)
jecxz
mov
pop
xchg
pop
sbb
scas
and
xor
mov
xor
pop
pop
adc
xchg
xchg
movs
mov
mov
push
mov
cmp
jns
or
out
aad
clc
pop
jno
lahf
add
repnz
dec
repz
and
(bad)
cmps
cmp
ins
jmp
movups
jge
mov
dec
xlat
push
sub
shr
mov
mov
ret
popa
mov
loopne
mov
xchg
and
sahf
sbb
dec
cmp
sbb
mov
xchg
xor
xor
leave
mov
imul
shr
fs
dec
dec
mov
movs
sti
ins
fild
ret
mov
jb
std
sub
shl
mov
test
adc
mov
(bad)
jae
xor
or
in
lods
inc
punpckldq
popa
cwde
(bad)
mov
(bad)
push
mov
inc
popf
repz
dec
jecxz
stos
xchg
jg
fdiv
sar
pushf
fisub
pop
inc
and
jb
push
int3
adc
adc
jno
repnz
stos
jb
pop
cmp
jmp
enter
(bad)
adc
lods
mov
(bad)
aas
or
cdq
ret
stos
test
and
add
repz
pop
lods
mov
addr16
push
pop
jno
cld
in
xchg
imul
iret
out
xor
jmp
test
pcmpeqd
fiadd
cs
jmp
pop
mov
add
xor
mov
push
xchg
sbb
sar
inc
pop
add
neg
cmp
mov
mov
add
cs
lods
nop
mov
sbb
pop
sbb
fsub
vmwrite
push
nop
(bad)
arpl
push
scas
retf
cmp
inc
cmp
aaa
push
jl
imul
cld
jae
shl
cmps
jae
mov
ds
inc
rol
xor
in
xor
in
fldenv
cmp
inc
push
lar
int3
clc
mov
fisttp
cmp
cs
sub
jb
add
jmp
not
mov
and
mov
add
and
aam
bound
or
movs
dec
test
inc
ret
scas
mov
xlat
das
sub
mov
add
into
ret
cli
repnz
jbe
inc
lea
enter
mov
mov
fdiv
xchg
mov
repnz
out
add
or
faddp
jo
jmp
ss
sub
repz
jmp
jnp
stc
outs
cdq
(bad)
mov
mov
cmc
sahf
ins
and
into
jno
lahf
aas
cdq
ds
mov
jp
cmp
arpl
or
popa
add
rcl
ret
xlat
pushf
stos
icebp
cmps
ret
adc
mov
pop
add
and
pop
sub
adc
das
jne
popa
xchg
sti
je
fdiv
add
jge
cmp
rol
ficomp
fs
xchg
rol
lods
mov
push
push
and
ins
sbb
sub
dec
(bad)
jmp
test
fcomp
cdq
imul
xchg
mov
fdivr
mov
cmp
fs
lock
addr16
movs
lods
jns
adc
gs
(bad)
add
inc
sub
and
mov
outs
mov
pop
xlat
fidiv
(bad)
loope
adc
(bad)
xor
test
les
arpl
fsub
and
jg
sub
push
mov
push
and
dec
push
out
adc
ja
out
xor
jl
pop
xor
xor
movs
adc
into
cmp
fstp
fbstp
sub
dec
pop
fsubr
repz
popa
xor
add
pop
neg
fs
inc
aas
push
pop
daa
cmps
stos
arpl
lods
inc
pop
inc
push
ins
(bad)
fsubr
mov
add
xor
out
mov
lahf
sbb
dec
mov
fwait
hlt
shl
std
test
test
repnz
mov
mov
push
and
ins
xor
sub
stc
(bad)
in
cmp
into
fsubrp
ins
mov
cmps
mov
das
jecxz
fistp
or
and
pop
pop
fild
mov
aaa
xchg
sub
icebp
adc
daa
inc
rcl
xchg
cs
pushf
xchg
xchg
jecxz
dec
and
hlt
jo
dec
sub
sub
int
and
jo
lea
adc
jmp
push
mov
mov
push
test
inc
sub
and
lods
push
out
jle
and
mov
jne
pop
repnz
and
xor
popa
pushf
jae
mov
in
jp
mov
cli
rol
aaa
jg
jmp
xchg
inc
lds
out
imul
movs
adc
xor
mov
int
push
sbb
pop
enter
ins
add
cmp
cmc
lds
js
mov
jne
sbb
test
pusha
cmp
jno
mov
jle
jmp
sar
retf
inc
and
pop
sbb
sahf
mov
push
push
jno
sahf
mov
xor
dec
cmovs
aaa
push
mov
retf
cmps
jno
loop
sbb
clc
sub
movs
imul
lahf
cmp
push
mov
mov
adc
(bad)
adc
ins
sbb
fld
cmp
cmp
xchg
cli
rol
aaa
hlt
rol
shr
mov
hlt
fwait
jp
shl
adc
data16
mov
lods
out
ins
fs
mov
xchg
mov
lods
movs
inc
mov
inc
xchg
sub
pop
lahf
fwait
cmp
push
mov
cmp
sbb
xchg
fsub
sbb
pop
sti
adc
mov
push
xchg
add
movups
jp
mov
(bad)
outs
pop
adc
mov
pop
dec
stc
jo
mov
inc
hlt
inc
push
mov
mov
rcl
daa
ss
jmp
sub
rcr
ror
xchg
(bad)
shl
test
fsub
xor
rcr
in
jmp
xor
std
mov
adc
mov
imul
adc
aam
dec
sbb
cmp
jge
gs
mov
dec
inc
pop
push
lods
stc
in
mov
call
neg
mov
adc
mov
pop
loop
pop
mov
and
add
push
dec
inc
mov
fwait
sar
fldenv
fisub
lods
jae
mov
nop
ins
pop
dec
loop
sahf
sub
xor
pop
hlt
push
enter
icebp
jecxz
in
(bad)
lods
out
stos
hlt
mov
adc
adc
sub
cmp
xor
int3
leave
and
or
rol
addr16
jbe
cld
xchg
jp
sbb
rcl
test
jecxz
cmp
cs
and
fld
push
movs
iretw
jp
and
scas
or
pushf
add
pushf
adc
out
and
or
lods
adc
cld
cwde
push
aam
fs
push
sti
nop
sub
sahf
sub
sub
inc
inc
push
shr
mov
adc
jno
pop
pushf
cmp
add
mov
lds
xlat
int
rcr
sbb
stc
mov
(bad)
in
sub
pop
jmp
jmp
sbb
sbb
lea
icebp
arpl
sub
call
adc
adc
adc
xchg
sub
sti
icebp
fiadd
sub
adc
movs
imul
lock
pop
sbb
icebp
in
sbb
push
and
dec
sub
sbb
pop
adc
mov
adc
movs
add
out
cmps
out
out
outs
mov
cli
inc
fsubp
shr
push
js
call
cmp
aas
mov
and
ret
cwde
jbe
xchg
adc
inc
mov
sub
into
das
sub
ret
out
jg
out
aas
pop
mov
inc
mov
fs
cs
jbe
jmp
add
adc
hlt
push
aam
bound
cmp
add
not
mov
xor
jle
repnz
cmp
arpl
popaw
lahf
icebp
das
inc
scas
push
mov
out
push
mov
js
mov
movs
mov
pop
mov
test
fnstcw
inc
test
fisub
je
ss
pop
retf
stos
inc
ret
aam
pusha
adc
push
ds
mov
xchg
inc
adc
mov
sar
inc
rcl
icebp
fild
mov
test
lods
cmp
jnp
push
jl
(bad)
sub
jmp
lahf
stc
add
adc
mov
cmc
in
pop
adc
adc
jle
js
iret
mov
dec
test
fcmovne
jmp
and
mov
cmps
and
add
in
cmp
ja
pop
dec
cmp
dec
xchg
icebp
daa
lock
lods
lock
push
pop
mov
lods
test
sub
push
shl
inc
push
call
call
call
call
cmp
jp
push
(bad)
mov
push
xchg
add
sar
dec
jo
mov
sar
mov
jmp
fwait
out
scas
popf
rcl
add
mov
push
pop
ds
shld
cs
and
mov
fcmovu
dec
and
pop
repz
or
arpl
and
imul
adc
adc
and
(bad)
minps
jb
daa
rcl
retf
pop
mov
add
mov
and
xlat
pop
mov
and
pop
push
and
mov
out
in
inc
mov
or
mov
adc
add
sub
int
xchg
cmp
jp
test
xlat
fisttp
rcl
sub
gs
fmul
fnstcw
xor
inc
jmp
cmp
sbb
pop
mov
cmp
les
and
pop
mov
int
sbb
cmp
push
(bad)
mov
(bad)
fs
cmp
adc
mov
jo
pop
std
jo
xchg
sbb
pop
cli
mov
mov
adc
push
in
jo
pusha
fs
sar
dec
movs
and
outs
inc
and
cmps
addr16
sbb
stos
arpl
inc
inc
xchg
jbe
jo
pop
aad
(bad)
xchg
movs
gs
out
xor
in
cli
(bad)
mov
retf
mov
js
(bad)
call
pop
inc
mov
xor
nop
add
nop
lahf
iret
or
ret
test
or
xchg
das
stc
out
mov
ffree
mov
dec
xchg
and
jecxz
jo
and
idiv
scas
or
test
aas
stc
mov
sub
stos
out
lods
fcom
outs
scas
ds
sub
adc
jmp
jmp
in
jle
fucom
aad
sbb
in
mov
or
std
add
jle
loope
pop
cmc
rol
push
xchg
pushf
xlat
ret
cwde
cmp
push
js
jmp
add
in
out
add
dec
popf
das
cmps
lods
cmp
lds
aas
sbb
xlat
and
sub
stos
sbb
xor
lahf
sar
mov
xchg
pop
aas
mov
jecxz
clc
cmp
mov
push
out
jmp
enter
imul
jmp
sub
add
xchg
stc
fst
(bad)
jo
in
lods
ret
add
enter
icebp
and
push
adc
test
ret
rcr
cs
ss
retf
jmp
lea
push
and
std
and
adc
adc
fcom
out
xor
dec
hlt
add
adc
ret
xor
jge
and
push
jne
(bad)
enter
loope
fbstp
jp
iret
in
fistp
das
scas
jmp
aad
sub
push
daa
mov
mov
sub
mov
repz
aad
sub
cmp
iret
cmp
imul
inc
outs
clc
jmp
lds
data16
pop
sub
inc
pop
cmp
mov
push
push
rol
xchg
inc
ins
sbb
aam
inc
(bad)
and
cmc
cmps
lea
xchg
xchg
cwde
mov
scas
lea
mov
mov
xor
in
pop
pushf
jmp
enter
leave
fst
shl
adc
fs
(bad)
mov
pop
xchg
(bad)
jnp
imul
jno
push
mov
mov
in
seta
pop
mov
call
xchg
div
cmp
into
mov
jg
and
lea
out
add
mov
mov
out
jo
mov
imul
movs
xchg
jle
(bad)
jecxz
cmc
push
mov
cmc
es
sub
in
xchg
data16
jae
sbb
pop
cdq
(bad)
rcl
mov
push
leave
adc
jbe
inc
dec
push
jmp
push
dec
out
call
pop
shl
repnz
xchg
mov
xlat
(bad)
bound
ins
push
xor
cld
mov
cmp
movs
xor
sbb
inc
add
cmps
mov
push
inc
repz
je
inc
call
daa
or
dec
rcr
sub
fucomi
mov
dec
jmp
clc
or
and
lahf
or
mov
idiv
mov
or
mov
fld
xchg
ins
movs
add
addr16
sub
inc
imul
aam
ret
rcl
adc
cmp
int
cmp
push
xchg
repnz
xor
dec
pop
std
inc
cmc
icebp
and
mov
jbe
sub
mov
imul
lods
mov
sub
outs
push
in
dec
add
jns
shl
(bad)
sbb
cld
loopne
loop
fsub
or
sub
popf
out
mov
pop
xchg
stos
xchg
movs
bound
cmp
mov
mov
(bad)
aas
aam
sub
and
mov
mov
cmps
sbb
adc
ins
sbb
and
retf
(bad)
cmps
movs
rol
cld
in
jmp
ins
lods
jp
and
jp
push
fiadd
mov
dec
retf
test
pop
jmp
dec
xor
aas
mov
fwait
leave
mov
cwde
pop
pop
pop
paddsb
scas
and
inc
add
out
cmp
es
sahf
xchg
xchg
mov
add
jne
ins
shr
mov
mov
jne
dec
push
jmp
jl
das
in
or
add
nop
push
dec
out
adc
jno
jecxz
repnz
aad
es
jns
in
call
and
mov
call
push
sbb
std
das
stos
or
mov
push
sub
pop
adc
fcmovne
or
stos
xchg
xchg
stos
(bad)
adc
loop
sub
push
in
lock
lahf
mov
bound
jne
pop
mov
out
out
leave
cmp
cs
popa
or
aam
test
call
cwde
in
dec
call
dec
mov
mov
into
js
sub
dec
jmp
cmp
scas
outs
out
test
cmp
jae
pop
pop
fwait
retf
and
cmp
test
jae
(bad)
push
dec
sub
pop
shr
add
call
shl
mov
adc
popa
add
loope
xlat
sti
dec
mov
sub
or
repnz
jl
xor
pop
cmp
sbb
imul
pushf
cmp
test
xor
in
in
(bad)
sub
jo
cmc
mov
push
and
(bad)
sbb
outs
push
push
dec
push
ficom
add
test
push
stc
or
shl
mov
es
mov
xchg
or
add
mov
aad
dec
adc
cmps
mov
in
or
pop
movs
out
inc
loop
daa
cld
popf
xor
(bad)
sub
je
outs
jo
add
inc
pop
xor
push
lods
das
inc
cmp
mov
sub
out
xor
push
adc
repnz
mov
out
push
jnp
add
jb
adc
inc
movs
jecxz
push
jg
adc
or
push
daa
jns
stc
jl
dec
sub
sub
pop
(bad)
in
popa
mov
leave
adc
dec
loopne
int
push
cwde
inc
push
inc
shl
jns
add
in
not
xor
mov
je
fwait
jbe
daa
jmp
and
inc
jae
cmp
lock
sbb
fidiv
retf
and
push
mov
cmps
cwde
push
push
push
test
push
repz
push
push
popa
and
jmp
lods
push
in
mov
push
enter
inc
sub
jne
out
test
retf
and
repz
popa
inc
out
and
xor
call
jmp
or
adc
cdq
cmps
inc
adc
arpl
dec
in
out
imul
nop
push
jno
mov
dec
ins
cmp
gs
jb
mov
call
dec
pop
mov
in
leave
pop
nop
xchg
ins
call
data16
lds
mov
adc
xchg
sbb
inc
fidivr
pop
dec
sbb
out
xchg
test
imul
lock
add
mov
xor
xchg
icebp
pop
je
inc
lahf
or
fiadd
popa
cmp
add
fwait
jmp
in
mov
(bad)
xor
icebp
mov
retf
xor
(bad)
fwait
ret
gs
sti
mov
sub
xchg
in
xor
not
sbb
loop
into
outs
sub
das
ret
pop
jge
mov
scas
pop
js
pusha
mov
push
in
mov
test
sub
fs
repz
mov
icebp
cmps
mov
ds
aad
adc
ins
sar
loopne
pop
cmps
jae
mov
stos
dec
xchg
rcr
mov
(bad)
push
xchg
sahf
or
sbb
sbb
push
int3
or
ror
cmps
jle
inc
inc
movs
sahf
in
jno
cmp
test
adc
enter
cld
sti
xchg
jg
push
jmp
mov
cmp
sbb
aad
xchg
out
inc
jp
mov
push
into
loopne
xchg
loop
inc
mov
mov
inc
mov
push
out
mov
test
dec
pop
popf
adc
popa
hlt
out
cmc
addr16
sahf
lock
jbe
pop
mov
lahf
mov
fcomp
add
out
add
jno
xchg
ss
pop
in
stos
jae
fwait
jnp
jecxz
add
mov
push
jae
loopne
jb
movs
or
jnp
out
cmp
xchg
add
(bad)
fsub
lods
inc
jb
xchg
lea
std
loopne
enter
mov
mov
jmp
jp
sbb
or
loope
loopne
sti
fsub
dec
in
sub
jae
xor
push
jae
test
push
or
pop
jmp
in
jle
cmp
mov
and
jbe
sti
cld
pop
inc
xor
xchg
pusha
dec
scas
ret
cmps
dec
sbb
mov
ret
pop
dec
inc
(bad)
sub
repz
fimul
imul
push
adc
xchg
nop
loop
adc
stos
mov
enter
fimul
jae
cmp
popf
cwde
dec
jmp
and
mov
jmp
push
or
div
adc
pop
adc
sbb
and
and
lahf
pop
mov
and
mov
not
adc
mov
cmp
push
adc
ins
ins
sub
inc
add
push
or
les
jmp
sub
aad
push
lds
xchg
sahf
pop
lock
mov
in
ss
(bad)
call
retf
adc
sbb
sub
leave
shl
mov
and
int
mov
fwait
dec
daa
imul
out
fnsave
leave
pop
inc
iret
sub
mov
dec
mov
movs
mov
mov
jb
cs
es
rol
cld
daa
jne
loop
imul
pop
jne
xchg
push
shl
cmp
dec
cld
test
jb
test
mov
xchg
mov
stos
xor
in
scas
int
mov
add
xchg
das
or
pop
int3
and
pop
dec
jns
lea
data16
inc
(bad)
ficom
xor
test
in
imul
mov
fimul
fld
les
push
fmul
ins
test
inc
sbb
(bad)
sub
xor
inc
daa
adc
inc
push
add
bswap
fwait
ss
jmp
nop
in
jecxz
ja
fdiv
jno
push
xor
arpl
adc
xor
cmps
mov
push
test
jl
push
loop
cmp
mov
inc
lahf
push
cmp
jmp
xchg
adc
out
outs
movs
inc
push
ja
sub
cmp
movs
out
(bad)
cmp
xor
cmp
mov
adc
sbb
outs
mov
nop
mov
rcl
xchg
neg
cmp
test
and
pop
add
sub
adc
clc
pop
push
iret
in
movs
xchg
mov
sti
movs
cwde
inc
jmp
jb
fcomip
xchg
add
clc
adc
adc
movs
daa
call
mov
jp
data16
xchg
sbb
xchg
pop
xlat
and
bound
and
or
inc
loopne
push
in
adc
cmp
clc
mov
sub
fiadd
mov
and
pop
mov
push
fwait
jo
movs
jp
nop
adc
out
cmps
ds
cli
hlt
and
in
gs
ja
mov
xor
push
inc
pop
mov
das
and
mov
aad
sbb
pop
dec
or
add
mul
lock
fwait
jmp
lods
ror
mov
dec
sbb
out
and
cmp
std
je
pop
cmp
outs
bound
lods
mov
pop
jge
cmp
mov
mov
push
das
jo
inc
aam
jns
mov
pop
fbld
add
cmps
mov
(bad)
dec
inc
xor
push
pop
push
jne
mov
xor
xchg
mov
cld
test
ret
xchg
fild
scas
jp
lahf
jbe
test
stc
cmps
jge
cmp
bound
pop
push
pop
xor
out
call
mov
not
mov
cld
pop
rcr
sub
pop
xor
not
setb
pushf
xchg
jmp
loope
inc
push
loop
add
sub
inc
inc
ds
das
fs
test
mul
inc
retf
outs
int3
or
lds
or
cmp
scas
call
jb
push
xchg
jmp
pop
call
mov
div
pop
cwde
enter
popf
pop
jnp
pop
(bad)
in
out
mov
add
sti
xchg
(bad)
pusha
adc
or
out
js
inc
lea
sbb
push
ret
sub
js
jae
or
cwde
mov
aad
and
fild
sahf
dec
pop
push
fcmovnb
addr16
es
or
xor
stos
add
cdq
push
cmps
push
or
int3
fisub
retf
mov
sbb
xlat
iret
mov
xor
cmp
call
sub
stos
(bad)
aad
or
jle
inc
imul
xlat
mov
dec
adc
jmp
sti
nop
ret
cmp
repnz
mov
shl
std
int3
popa
push
push
rol
in
(bad)
repz
cmp
inc
aaa
add
mov
in
pop
inc
mov
xor
pusha
and
or
push
mov
push
jmp
in
aaa
cld
dec
loope
sahf
(bad)
cdq
js
cld
out
pop
mov
xor
shl
jg
loop
imul
ja
inc
cmps
jnp
push
pop
cmc
pop
popa
cmp
mov
adc
test
push
jge
dec
or
sub
and
pop
adc
jno
dec
idiv
push
mov
out
push
cmp
push
loop
repnz
cmp
pop
cmps
in
pusha
fild
stc
icebp
add
test
aas
push
out
sahf
fld
cmps
xlat
push
mov
movs
xor
jecxz
or
mov
adc
sar
ss
ds
aam
mov
jo
xor
sbb
inc
adc
outs
jg
xchg
xor
push
push
ficom
mov
outs
jge
mov
mov
cmp
shr
xor
(bad)
xchg
sbb
pop
pop
(bad)
fcomp
call
mov
inc
pop
movs
shl
clc
jo
push
and
ds
pusha
test
mov
bound
adc
adc
mov
and
xor
fwait
mov
sbb
xor
mov
ins
test
jmp
adc
loop
xchg
jne
pop
fdivr
mov
shr
xchg
sub
jmp
push
add
ins
nop
xchg
leave
mov
inc
(bad)
xor
loope
leave
gs
adc
sub
mov
int3
dec
xlat
in
mov
fwait
sti
push
aas
mov
mov
loop
jns
stos
scas
mov
push
xchg
mov
push
ret
ret
ret
lods
lods
xchg
sub
aas
jne
jo
sub
ins
or
jno
test
es
(bad)
sar
inc
xchg
fdiv
jmp
test
push
test
inc
jne
mov
and
xchg
(bad)
loope
dec
inc
mov
cmc
mov
sub
out
test
xchg
out
loopne
and
mov
hlt
dec
in
push
retf
push
xchg
inc
das
scas
(bad)
jmp
icebp
clc
out
ret
and
ss
adc
out
stc
movs
jne
das
push
dec
add
adc
out
cmp
loope
mov
pop
dec
xor
loop
xchg
mov
push
mov
sahf
mov
cmp
loopne
test
adc
adc
jne
xchg
leave
(bad)
iret
add
push
loope
ja
dec
sub
ins
fwait
xchg
cli
or
sub
mov
fcom
adc
in
and
in
xchg
sub
cmp
rol
sub
cwde
pop
pop
sub
enter
cwde
dec
jb
mov
mov
loopne
or
sub
fdivr
jmp
sub
fstp
dec
daa
rol
push
stc
mov
add
dec
fwait
jge
retf
jns
sub
pop
cmp
cdq
jne
stc
add
inc
mov
retf
bound
add
add
push
out
arpl
stos
sbb
add
lds
loop
push
popf
mov
push
std
enter
and
repz
sub
sbb
xor
call
sub
enter
mov
inc
mov
dec
xchg
and
int3
dec
shl
shl
or
mov
mov
adc
fwait
fs
xlat
mov
push
xchg
clc
repnz
xchg
dec
in
daa
hlt
ret
inc
mov
test
cld
sub
into
retf
inc
mov
sub
test
or
pusha
outs
mov
(bad)
pusha
and
sub
jecxz
cmp
inc
mov
(bad)
sbb
or
mov
repz
sbb
push
aas
xor
inc
fwait
test
repnz
cmps
call
mov
retf
pop
fnstsw
rcr
xchg
adc
add
sub
out
cwde
push
mov
xchg
push
sub
inc
jnp
xor
(bad)
mov
or
test
retf
jns
test
jns
jnp
fwait
div
jbe
xchg
cwde
in
sbb
jmp
in
lock
jmp
or
retf
mov
sub
pop
out
test
adc
fs
mov
pop
dec
retf
repz
adc
or
cdq
scas
mov
mov
xchg
pop
sub
lea
dec
js
push
xor
xchg
xchg
dec
mov
ins
lds
xchg
and
dec
pushf
sub
fidivr
push
mov
out
loopne
jnp
mov
in
rcr
jb
mov
ins
rcr
inc
(bad)
rol
dec
push
sbb
lods
ins
in
test
out
popf
mov
add
popa
inc
(bad)
mov
movs
dec
sub
xor
xor
mov
jne
xchg
push
shl
sbb
jg
jae
ss
jmp
cmp
push
stc
mov
dec
repz
and
or
call
inc
jae
push
call
test
ss
jp
mov
xchg
push
punpcklwd
popa
push
jl
mov
mov
jbe
inc
clc
push
and
pusha
jle
int
jns
adc
inc
aam
scas
xchg
add
and
test
ret
add
mov
nop
cmp
inc
sub
div
or
iret
sub
test
out
cmp
add
cdq
sbb
cmp
push
push
inc
jnp
not
pop
push
push
test
ins
loop
push
sub
popa
pop
lods
sbb
adc
out
dec
std
jb
cmp
fst
dec
jno
sub
pop
xlat
out
xor
push
js
je
inc
repz
mov
add
(bad)
mov
retf
(bad)
push
icebp
scas
jno
stos
mov
push
mov
xor
popf
cmp
ja
inc
cmps
mov
add
fcomp
fdiv
scas
jmp
jbe
(bad)
jae
out
movs
pop
fst
cwde
xchg
aas
std
enter
xlat
call
fld
push
adc
mov
retf
mov
pop
pop
pop
fadd
sti
retw
fwait
cmp
fidiv
jl
pop
mov
outs
outs
mov
enter
pop
mov
pop
inc
adc
xor
jo
jns
cmps
or
bswap
xor
inc
rcr
test
cmp
test
push
mov
xor
xchg
lods
fincstp
repnz
mov
or
es
aam
paddq
mov
dec
xchg
mov
bound
mov
lods
cs
push
adc
dec
ror
in
js
aaa
stc
inc
movs
or
mov
xlat
and
je
pop
inc
cld
aad
sub
stc
or
stc
outs
xor
fucomi
xor
leave
sti
mov
adc
scas
lds
lock
lods
inc
(bad)
imul
lods
push
ja
rcr
lds
imul
mov
jo
jmp
mov
(bad)
lds
mov
lahf
bound
repz
out
pop
(bad)
pop
ret
mov
cli
in
adc
cdq
test
xor
addr16
mov
jae
pop
sahf
nop
adc
mov
dec
cli
ss
call
jecxz
adc
push
iret
jecxz
popf
outs
inc
cdq
xor
int
push
pop
push
push
add
and
scas
retf
(bad)
xor
scas
jns
(bad)
js
jge
test
jo
ja
fbstp
aaa
xchg
cwde
in
scas
jg
sub
xchg
mov
aam
pop
sbb
daa
push
in
mov
push
xor
pop
in
dec
pop
loopne
pop
not
mov
pop
sub
mov
out
mov
pop
push
xchg
sar
jl
jns
loop
mov
dec
jg
inc
or
(bad)
mov
cmps
cmps
sbb
mov
inc
dec
ffree
imul
out
cmps
mov
fstp
mov
sub
mov
mov
xchg
fisttp
ins
ins
xchg
xchg
jge
je
outs
xchg
sub
in
daa
call
out
mov
lods
retfw
add
aad
ins
cs
test
push
add
xor
mov
and
inc
cmp
(bad)
call
and
adc
pop
scas
xchg
es
lods
or
add
int
sub
cmp
and
jecxz
dec
jmp
mov
sti
ins
mov
std
mov
sub
jns
sbb
cmp
and
lds
ret
in
dec
(bad)
or
loop
xchg
adc
and
mov
mov
dec
sub
xchg
pop
out
xor
mov
lods
ret
jb
jno
add
dec
sub
les
mov
cmc
pusha
jno
int3
push
test
xchg
aad
inc
adc
add
inc
push
stos
outs
movs
and
test
sbb
jge
call
cli
add
popf
xor
(bad)
jl
jl
cmp
push
mov
ror
or
or
and
sub
jg
sub
ret
mov
pop
mov
inc
mov
repnz
nop
fdiv
jns
jmp
rcr
and
fs
daa
test
ficomp
pop
shl
daa
adc
push
and
sub
std
adc
xchg
add
shl
aaa
dec
lock
repz
xchg
add
arpl
mov
fisttp
push
push
mov
aam
int
mov
mov
jb
lahf
inc
or
sahf
ret
sub
sub
into
pusha
fisubr
jno
jp
aad
and
sub
fstp
jecxz
xor
xlat
out
pop
cmp
les
inc
aaa
cmp
enter
cmp
mov
jae
push
dec
in
retf
jns
nop
inc
ins
loope
dec
jae
call
jns
xchg
and
sub
push
inc
add
out
inc
dec
shl
jo
ins
adc
movs
aam
retf
(bad)
loopne
mov
push
dec
cld
sub
adc
mov
sub
sub
fidivr
mov
retf
and
cmps
stc
add
popa
push
or
jno
stos
ret
xor
sbb
or
stos
es
fstp
jns
dec
mov
stos
adc
or
inc
xchg
xor
jp
jo
xchg
jmp
test
mov
fs
(bad)
fucomp
outs
nop
inc
mov
test
ja
adc
xchg
loope
jmp
leave
or
add
jns
nop
mov
repz
pushf
sbb
je
and
popa
add
inc
mov
xchg
sbb
shl
ret
stc
test
lds
and
repz
in
cmp
(bad)
cs
mov
sbb
jg
popf
lahf
shl
mov
bswap
mov
leave
jmp
out
push
stos
inc
jle
mov
mov
sbb
dec
in
in
mov
repnz
repnz
(bad)
mov
pop
repz
popf
pop
mov
or
imul
clc
add
outs
inc
mov
cli
ror
mov
aas
lock
shl
lahf
and
or
sub
fsubr
sbb
adc
push
shr
push
fwait
mov
push
mov
stos
je
arpl
and
movs
push
jle
repz
aam
cmp
jnp
mov
mov
dec
loop
loope
lods
or
int
out
mov
(bad)
push
dec
mov
sahf
sbb
(bad)
repz
dec
fisub
add
punpcklwd
add
shr
xor
cmps
cmp
sub
and
add
inc
pop
cli
scas
or
mov
pop
sahf
jl
(bad)
mov
pop
addr16
dec
push
ss
adc
jge
push
sbb
adc
add
mov
mov
or
(bad)
mov
sbb
mov
sub
int3
lods
pop
js
pop
or
scas
out
jmp
mov
mov
inc
retf
iret
aas
lea
jmp
movs
mul
outs
ja
jmp
mov
jno
cmp
out
dec
and
jecxz
jmp
and
outs
push
ret
pop
mov
ss
mov
mov
push
loop
xchg
je
adc
sub
cmp
pop
popa
push
inc
ins
lock
and
xor
repz
sbb
pushf
stos
out
jge
clc
mov
ret
cmps
inc
mov
div
mov
mov
sub
mov
jbe
mov
dec
cmp
js
scas
test
add
add
mov
jp
pop
je
popa
(bad)
mov
and
not
in
pusha
pop
jae
loope
aaa
push
sub
jl
std
jp
fucomip
xchg
xchg
sub
imul
fadd
pop
into
cmp
sbb
out
jb
inc
cmp
ret
rcl
lods
mov
and
scas
(bad)
ds
ss
in
sbb
cmp
leave
jl
scas
jno
lds
mov
mov
mov
fadd
in
pop
sub
jmp
jge
movs
mov
(bad)
rol
xchg
pop
icebp
inc
(bad)
daa
(bad)
neg
jle
stc
daa
pop
and
inc
dec
xchg
dec
in
jae
into
movs
jne
sub
push
sbb
out
sbb
int3
(bad)
cs
jns
mov
lahf
pop
fsub
clc
jmp
ret
mov
mov
lods
ret
les
loop
dec
out
dec
jns
push
(bad)
mov
shl
mov
mov
fscale
add
aas
or
adc
mov
xchg
or
test
fcomp
gs
cld
mov
push
jno
pop
xchg
mov
call
adc
pop
cmc
nop
sub
and
push
adc
add
(bad)
pop
cs
out
arpl
sbb
loope
xor
inc
into
sub
dec
rcl
xchg
or
jmp
dec
mov
cdq
inc
push
jnp
add
nop
add
pop
stc
or
inc
jl
lods
dec
leave
fist
leave
dec
add
mov
dec
sahf
(bad)
or
das
div
push
pop
sar
pop
(bad)
push
push
sbb
loope
out
je
sbb
and
ret
out
arpl
push
add
sbb
in
adc
and
pop
mov
pop
mov
pop
popa
cs
out
add
nop
xadd
add
dec
xchg
inc
fs
mov
mov
arpl
mov
cmps
add
xchg
enter
and
fild
cs
mov
fisttp
(bad)
mov
mov
jns
inc
js
xor
lods
(bad)
into
ins
div
sub
lds
int
add
imul
cli
mov
dec
cmp
fptan
fmul
jecxz
sbb
adc
push
dec
pusha
or
ds
stc
pop
pusha
push
(bad)
ins
nop
inc
and
lods
sbb
int3
icebp
add
aad
call
add
dec
mul
pushf
sub
sti
sub
out
fisub
jbe
jne
xor
cmp
dec
jmp
iret
adc
sti
pushf
fdivr
add
movs
push
dec
cmp
mov
add
jge
sbb
jp
ror
add
aaa
data16
mov
jno
jae
jmp
mov
out
sar
adc
daa
rcl
jg
sbb
pop
pop
add
test
out
and
div
adc
jae
aam
jg
fwait
xchg
mov
dec
xor
and
pop
push
int
dec
and
mov
retf
sub
push
adc
mov
mov
fwait
jle
push
jnp
cwde
pop
dec
dec
fwait
jb
adc
(bad)
mov
hlt
fstp
ss
in
hlt
repnz
sar
mov
mov
mov
stc
sub
ja
mov
xor
mov
cmc
in
fsub
ret
les
sub
adc
rcr
mov
sbb
fisttp
es
sbb
mov
adc
xlat
dec
enter
mov
stc
fs
sbb
sub
dec
inc
sahf
stos
sbb
es
mov
sar
lds
cmps
cmp
push
test
mov
cmps
sub
cld
stc
fnstenv
cmps
mov
and
in
xlat
pop
fadd
adc
sbb
test
sub
sub
pop
sbb
imul
mov
mov
test
or
fist
data16
dec
jecxz
imul
(bad)
xor
call
sub
push
push
outs
pop
mov
mov
xchg
loopne
ins
cmp
js
adc
mov
rcr
pop
movs
lods
ds
dec
push
adc
je
add
jne
cmp
jg
test
inc
outs
popf
mov
mov
push
mov
outs
popf
xchg
dec
jbe
pop
pusha
sub
cdq
sbb
cmp
cdq
mov
sub
and
stc
rol
xchg
sbb
aad
sbb
sbb
out
dec
mov
sub
mov
jbe
mov
dec
shr
fisub
mov
xor
cld
jbe
jg
dec
neg
pop
call
adc
out
sub
mov
mov
ins
xor
jnp
jo
addr16
data16
cmp
xor
add
mov
add
mov
mov
das
fmulp
dec
test
push
jns
and
dec
push
test
mov
shl
loope
add
dec
stos
ss
sub
lods
cmp
mov
fs
ror
cdq
(bad)
iret
in
jae
daa
dec
bound
arpl
call
stos
(bad)
(bad)
xchg
xor
or
push
xchg
cmp
dec
jp
loopne
or
movs
mov
mov
test
cmp
pop
inc
inc
dec
aam
hlt
cmp
shl
mov
push
mov
pop
pop
imul
xor
dec
cmp
mov
xor
pushf
pop
ror
add
(bad)
pushf
pop
mov
shl
aad
ret
cmp
cmps
mov
pop
jns
or
add
sbb
pushf
ret
aaa
mov
or
retf
mov
pop
ds
rol
xchg
xor
xor
xlat
mov
jecxz
neg
and
clc
lds
jno
call
test
(bad)
int3
idiv
in
sub
in
fsubr
ins
lock
jmp
cld
jmp
and
out
sub
test
xchg
push
mov
mov
jns
(bad)
mov
jo
jno
repnz
xor
mov
cmp
sbb
aad
pop
addr16
test
outs
sbb
push
mov
arpl
or
les
cmp
push
sbb
(bad)
(bad)
adc
ins
mov
mov
xchg
aad
dec
cmc
ret
jno
mov
adc
jmp
test
mov
xchg
rol
aaa
xor
cmp
jecxz
push
dec
shl
mov
push
push
and
pushf
out
cdq
lods
mov
es
inc
mov
cmp
and
pop
daa
mov
jne
(bad)
and
cmp
nop
rcl
add
jmp
retf
test
ins
movs
ins
mov
dec
sahf
sbb
xlat
cmp
imul
ret
shl
lods
mov
test
pop
cmps
adc
jmp
adc
je
xlat
ins
sbb
push
jb
ret
ins
mov
jb
loopne
pop
dec
ficomp
test
xchg
add
jno
inc
mov
xchg
mov
mov
xor
inc
dec
pop
mov
addr16
loop
add
xchg
push
fwait
ins
jne
ss
lods
bound
sub
out
mov
mov
repz
xchg
mov
push
pusha
pop
ret
adc
aas
es
xchg
mov
pop
jbe
clc
shr
in
add
fstp
dec
pop
not
sbb
mov
ins
icebp
or
in
lods
mov
(bad)
(bad)
xlat
and
xor
sbb
lahf
(bad)
or
mov
aas
push
mov
push
sbb
dec
cld
(bad)
cmc
mov
lock
push
cdq
js
push
mov
jmp
push
sti
scas
repnz
movs
and
idiv
inc
pop
xchg
shl
jb
jae
cmp
aam
scas
in
nop
jnp
into
and
jno
cwde
xor
jmp
pop
or
mov
(bad)
adc
pop
dec
mov
mov
xchg
jno
and
and
int3
mov
jne
pop
fisttp
sbb
mov
retf
imul
adc
or
add
mov
sub
xchg
dec
add
xor
retf
mov
cmp
pop
sbb
jmp
pop
jg
mov
cmp
int
cmp
int3
sub
ror
dec
add
adc
call
jne
add
test
push
ja
int3
fcomp
fstp
mov
and
push
sbb
sub
cmps
adc
pop
int
sub
xor
mov
shl
push
or
je
push
stos
aad
cmp
in
inc
push
ds
or
in
jp
shl
inc
inc
xor
retf
arpl
les
push
aaa
retf
and
mov
xor
je
sbb
mov
adc
jle
sbb
dec
jge
lds
repnz
ret
sbb
cdq
psrad
or
rol
test
xor
mov
mov
pop
xor
or
ucomiss
sub
lea
test
popf
mov
sbb
xor
scas
retf
popf
sar
jmp
push
dec
(bad)
fdivp
xchg
mov
push
pop
or
sub
or
jno
jp
inc
add
repz
and
ins
jo
push
push
jnp
mov
mov
lods
pop
and
sub
xlat
xchg
cmc
adc
mov
imul
cmp
sbb
pop
add
ror
dec
into
ret
jge
jb
aam
mov
fwait
mul
test
sar
scas
daa
mov
dec
push
dec
mov
lods
mov
jno
(bad)
cmp
sbb
add
add
cwde
stos
push
dec
ret
frstor
cld
loope
imul
xor
add
push
mov
push
xchg
sbb
mov
hlt
adc
popa
and
lock
sbb
push
xor
cmp
test
fwait
adc
rcr
fst
dec
(bad)
xlat
xchg
aaa
(bad)
sub
rcl
adc
add
pop
inc
pop
int3
add
fild
(bad)
scas
rcr
or
jne
lahf
enter
xchg
add
aad
add
jnp
ins
fdiv
mov
pop
inc
bound
jo
mov
sbb
or
sbb
pop
imul
dec
dec
xchg
cmps
push
adc
pop
nop
cwd
cli
mov
hlt
repz
imul
dec
xlat
push
clc
push
test
cmc
add
cmps
push
movsx
sbb
pop
idiv
sar
mov
push
(bad)
loopne
es
or
mov
add
or
xchg
cmps
clc
nop
mov
cmp
pop
shl
retf
sbb
imul
inc
inc
cwde
aaa
std
push
xlat
retf
repz
mov
inc
out
jge
mov
enter
and
stos
and
in
dec
ret
push
push
dec
or
push
lods
or
jbe
xor
xor
mov
ins
mov
fld
dec
imul
jl
imul
xchg
or
mov
popf
retf
cmp
xchg
cs
cmp
sub
sbb
push
mov
sbb
mov
prefetcht2
push
jmp
addr16
adc
in
arpl
data16
sub
push
mov
popa
rol
js
daa
push
add
dec
and
push
cmp
add
scas
push
in
mov
(bad)
stos
jo
xlat
sysexit
call
xchg
mov
adc
lods
sbb
mov
(bad)
aad
repnz
push
std
outs
pop
sbb
inc
fst
sbb
clc
cmp
or
mov
faddp
(bad)
popa
push
lds
pushf
call
fild
pop
aam
mov
inc
sar
jg
jle
pop
push
into
cmc
(bad)
mov
inc
push
hlt
ja
pop
jae
sar
imul
jg
lea
sub
jg
jecxz
xor
mov
add
mov
outs
sti
mov
sbb
fsubrp
xchg
sar
fwait
jl
popa
mov
cmps
push
rcr
xor
push
pop
scas
push
add
imul
mov
hlt
(bad)
jmp
cmp
mov
cmp
aaa
mov
enter
sysret
fadd
ret
xor
push
popa
mov
arpl
cmp
inc
and
cwde
mov
loopne
add
adc
aas
push
lock
push
mov
(bad)
sbb
dec
adc
les
movs
ret
lods
sbb
mov
sub
push
mov
sbb
in
stos
jb
xchg
outs
cmps
cmp
adc
addps
mov
cmc
adc
pop
inc
mov
(bad)
mov
jmp
push
add
ror
(bad)
push
popf
out
clc
lea
std
add
mov
and
mov
push
fs
retf
inc
jno
test
or
xchg
xchg
push
sub
xchg
jbe
addr16
int3
(bad)
jae
in
mov
mov
inc
rol
mov
mov
addr16
push
loopne
jecxz
dec
rcr
adc
jns
aam
xchg
xchg
cwde
stos
stos
pusha
test
test
fist
in
sbb
pop
retf
imul
dec
mov
lock
loopne
scas
mov
leave
ficomp
sub
jl
pusha
out
sar
adc
mov
xlat
jne
push
xchg
lea
das
sbb
(bad)
fild
fdiv
jg
addr16
sbb
stc
jl
push
sbb
pop
sbb
sahf
mov
sahf
and
mov
mov
out
mov
xor
and
std
sbb
ins
add
xchg
sahf
jo
bnd
rcl
shr
(bad)
cmp
dec
pop
xchg
xor
jno
ja
mov
sub
sbb
jmp
jle
mov
xor
mov
addr16
push
sub
gs
ja
bndldx
or
hlt
xchg
cli
out
and
enter
sub
mov
call
push
test
clc
imul
nop
lods
mov
imul
sub
and
mov
loopne
loope
ins
popf
sar
hlt
push
movs
push
fcomp
mov
mov
retf
xchg
movs
stos
adc
cmp
lahf
inc
push
and
xchg
cmp
neg
push
dec
popa
push
or
sahf
cmp
js
popa
or
mov
mov
imul
sbb
rcr
jbe
or
mov
hlt
sti
mov
and
push
test
ret
and
ss
jno
adc
xchg
push
fidiv
loop
ins
je
cli
scas
out
cmps
adc
pop
test
jmp
aaa
test
pop
pushf
lea
bound
(bad)
sar
mov
gs
shl
mov
rol
rcl
cmp
xchg
mov
sar
nop
ror
xor
xchg
adc
out
daa
popf
pop
dec
lahf
out
adc
xchg
faddp
mov
mov
sub
call
jne
ss
adc
mov
pop
or
sbb
inc
cwde
jnp
add
mov
mov
loope
and
or
(bad)
aam
mov
xchg
push
inc
jg
push
mov
dec
and
icebp
inc
je
mov
inc
out
cdq
jns
nop
push
movs
lds
dec
inc
stos
mov
ja
imul
pop
xlat
pop
inc
or
les
jo
in
pop
mov
std
xchg
adc
rcl
or
sti
fs
mov
mov
aaa
mov
and
aad
pusha
add
cmp
sbb
cdq
pop
fwait
outs
fisub
stc
imul
jecxz
push
outs
sub
mov
dec
repz
cmp
dec
inc
sub
and
pop
cmps
loope
pop
mov
test
cdq
ret
mov
xor
push
das
sbb
pop
mov
xor
sub
aam
xchg
xchg
or
sar
jmp
jecxz
in
jmp
out
stc
fbstp
push
and
stc
mov
cmp
in
inc
sub
out
pop
(bad)
les
fisttp
xchg
int
sub
sbb
and
mov
and
mov
or
jecxz
gs
mov
mov
mov
clc
int
or
dec
imul
aad
mov
stc
push
mov
sti
add
xchg
cmps
cdq
mov
add
mov
lods
test
sbb
mov
xchg
mov
push
xor
rcr
mov
pop
inc
sbb
and
call
adc
pop
add
xchg
in
sti
shr
xor
mov
fcomp
test
xor
jl
mov
pop
shr
stos
fs
pop
leave
icebp
add
fdiv
push
and
pushf
std
inc
xor
fsub
retf
cmp
xchg
std
movs
cmp
inc
push
aam
inc
popf
mov
push
adc
xor
add
test
data16
dec
push
test
add
push
dec
adc
retf
xchg
test
cmp
sub
mov
clc
imul
and
inc
xor
pushf
sub
mov
sub
jne
popa
call
loope
xchg
das
setb
push
mov
fwait
mov
jecxz
xor
lahf
mov
shl
cs
in
inc
mov
inc
sub
les
ror
loope
jp
mov
nop
cmp
xchg
nop
dec
jmp
xchg
aas
neg
lock
div
mov
add
dec
and
push
xlat
(bad)
xor
ffreep
fist
pop
adc
and
sbb
in
out
aaa
xchg
pop
pop
pop
inc
push
jb
mov
(bad)
xchg
jg
or
add
add
fwait
pop
cmp
mov
ret
sbb
xchg
loopne
outs
cli
test
add
xlat
inc
ins
mov
enter
or
mov
cmp
pop
mov
inc
cs
repz
xor
pusha
pop
add
in
lahf
scas
dec
stos
je
dec
daa
jge
cmp
(bad)
dec
jae
inc
imul
sar
cwde
movs
(bad)
mov
add
cli
repnz
cli
fwait
mov
push
push
xchg
mov
pop
(bad)
cmp
lds
or
gs
icebp
cmp
idiv
push
scas
mov
sbb
jns
mov
mov
or
add
jmp
sbb
mov
lods
jl
sbb
(bad)
sub
fld
jo
pop
sbb
sbb
std
retf
xchg
xchg
test
icebp
jnp
movs
cmp
lea
mov
aam
or
xlat
sub
scas
add
stc
ret
dec
mov
enter
loop
cmp
call
add
arpl
shl
mov
inc
adc
push
stos
scas
(bad)
fild
pop
pusha
ret
sbb
adc
ins
pop
cmp
sti
mov
imul
cmc
out
das
into
push
cmp
(bad)
cmp
push
or
or
lahf
cwde
das
mov
or
idiv
mov
pusha
ins
push
mov
mov
(bad)
pop
out
xlat
sbb
inc
icebp
adc
xchg
push
pop
dec
fldcw
sub
sbb
pop
xor
xor
sub
js
stos
mov
jg
clc
dec
jo
div
jne
mov
int
jmp
in
add
jne
jb
aad
sub
fnstsw
lods
dec
adc
xchg
aad
shl
sahf
cmp
mov
pop
push
cli
dec
pusha
inc
popf
cmps
adc
jnp
sbb
push
pop
aad
jne
sar
hlt
mov
retf
call
imul
add
ret
add
cmp
dec
mov
push
stos
xor
inc
or
mov
jb
inc
pushf
lahf
mov
lahf
int3
int3
sti
dec
push
mov
neg
or
xchg
push
or
mov
dec
pop
(bad)
test
cwde
arpl
ret
ins
mov
(bad)
in
shl
(bad)
cmp
out
xor
inc
push
push
sub
push
inc
cmp
push
mov
in
add
loope
mov
cmp
in
nop
jns
fxch
leave
fldcw
out
xor
mov
cmps
adc
jg
mov
lods
leave
cmps
lds
mov
ret
mov
neg
mov
add
test
fs
dec
pop
gs
mov
sbb
scas
iret
inc
mov
mov
mov
pop
jecxz
lahf
fmulp
jmp
adc
push
pop
xchg
(bad)
loopne
sub
push
loopne
cmp
leave
(bad)
rcl
cli
ds
stc
paddusb
add
dec
mov
lock
fs
dec
inc
rol
aad
mov
xor
shl
test
push
setne
test
dec
mov
mov
fcom
dec
cld
outs
vphaddbq
stos
fsubrp
fstp
sub
shr
jne
lods
adc
popa
outs
movs
cmp
adc
or
cmp
repnz
mov
call
and
or
add
test
and
sbb
dec
push
jno
push
mov
loopne
cli
outs
add
inc
adc
mov
jae
inc
cmc
call
sub
sbb
rcl
inc
add
es
sub
add
dec
das
xor
add
mov
jns
shl
aam
mov
test
lahf
fs
aas
cwde
xor
scas
push
cmp
arpl
ja
pop
mov
les
in
fmul
fs
int3
cmps
loopne
fist
scas
enter
and
nop
sbb
cld
enter
cdq
mov
ins
jne
jae
cld
aaa
bound
cmp
test
loope
mov
mul
dec
xchg
popa
scas
repnz
out
or
cmp
and
popa
mov
(bad)
addr16
aas
jle
aaa
xchg
push
add
xor
sbb
popf
mov
mov
gs
inc
or
adc
sahf
out
imul
gs
fwait
sahf
jbe
jb
mov
lahf
or
(bad)
repnz
mov
dec
in
xchg
and
pop
leave
sub
sub
aad
adc
std
push
shl
mov
or
out
je
retf
sbb
mov
xor
xchg
int3
cli
xchg
jbe
mov
jno
mov
mov
dec
adc
sub
(bad)
and
jbe
cmp
stos
loop
ss
xchg
or
stc
call
lahf
cmp
jb
inc
call
scas
xchg
and
idiv
xchg
das
mov
xchg
ret
test
std
xor
scas
pop
bound
retf
mov
mov
mov
push
in
jne
test
or
cmp
mov
xor
stc
push
inc
push
xor
and
mov
add
aas
aam
sbb
xchg
fcmovne
retf
ja
cmp
adc
sbb
ins
pushf
or
and
in
jno
jbe
out
pop
in
xor
add
pop
sbb
cmps
or
pop
sahf
rol
pop
dec
cmps
inc
mov
aad
repnz
movups
popf
sbb
cmp
sbb
and
into
test
popf
jge
es
cmp
xchg
push
xchg
or
(bad)
shl
fmul
out
shl
pop
pop
cmps
out
jl
xchg
inc
mov
ins
pop
(bad)
push
dec
pushf
dec
sub
and
test
jl
push
and
mov
scas
mov
jecxz
xchg
loopne
xchg
movs
dec
test
pop
add
(bad)
icebp
inc
dec
mov
pop
sub
fnstenv
stos
and
(bad)
out
and
inc
xor
mov
jmp
cmc
fs
push
adc
adc
mov
into
movs
shl
arpl
not
aas
out
dec
mov
jmp
mov
mov
cld
mov
push
xor
call
cld
cmp
test
push
rcr
jle
push
pop
mov
jne
fst
sbb
gs
push
and
xchg
and
call
jns
add
dec
rcr
xor
fbstp
push
push
pushf
mov
cs
jmp
sub
inc
shr
shl
stos
ror
dec
adc
adc
mov
and
pop
sahf
ins
aam
mov
inc
mov
rcr
mov
cwde
push
lock
lahf
hlt
fxch
dec
push
call
cld
cmc
adc
popf
(bad)
out
neg
jl
xchg
mov
icebp
out
dec
stc
push
jmp
jb
pop
fsubr
cmc
pusha
or
dec
dec
mov
mov
jae
cmp
adc
sbb
(bad)
or
xchg
fsubr
fnsave
(bad)
and
aas
mov
movaps
hlt
mov
popf
sbb
and
imul
xor
push
dec
fst
ds
and
dec
hlt
shr
aad
int
fsubr
sbb
push
sbb
jmp
pop
arpl
push
ja
popa
cdq
mov
jle
xchg
in
jp
test
scas
sub
and
jb
adc
mov
xchg
test
jge
icebp
sahf
fiadd
fdiv
je
xor
loope
inc
pop
jp
leave
push
loope
cli
test
(bad)
frstorw
add
sbb
push
cdq
enter
icebp
in
push
sub
inc
ror
sbb
mov
in
pop
fstp
mov
xchg
cmc
icebp
enter
adc
xchg
cmp
inc
xor
jl
jno
inc
pushf
and
add
fs
pop
out
inc
jge
sbb
add
test
pop
sub
cmps
xchg
xor
sub
mov
int
fisubr
test
sub
fwait
ror
cmps
mov
fcmovnbe
out
fnsave
and
cmps
mov
movs
jmp
(bad)
cmc
mov
mov
cmp
movs
push
mov
movs
cmc
mov
rcr
cmps
xlat
fcomi
mov
retf
xor
scas
mov
cmps
(bad)
repnz
cdq
jbe
fidivr
arpl
cdq
adc
push
cli
inc
xchg
push
jne
xor
addr16
rcr
xor
or
push
nop
push
cmp
sbb
mov
mov
repnz
(bad)
pusha
mov
test
pop
pop
retf
jne
inc
ret
outs
gs
push
lock
cmp
in
scas
bound
aas
sub
xchg
repz
cdq
scas
sbb
sub
sbb
jne
scas
xor
xchg
imul
push
mov
jnp
retf
dec
sub
mov
sbb
stos
call
out
pop
or
out
(bad)
cmp
push
dec
or
ds
sbb
mov
dec
sub
dec
mov
(bad)
or
mov
lock
bound
inc
cmps
test
mov
add
rol
or
xor
mov
(bad)
sbb
inc
jae
in
sub
sub
or
mov
movs
cld
out
jle
(bad)
pusha
push
out
test
sbb
movs
xchg
mov
loop
pop
jae
adc
icebp
aas
mov
mov
(bad)
addr16
retf
enter
call
retf
dec
std
and
rcl
(bad)
js
xchg
jge
iret
sub
mov
dec
jmp
ins
rcr
jle
frstor
and
mov
lock
(bad)
sar
stos
push
sub
mov
jle
jbe
loopne
mov
les
arpl
dec
mov
cvttps2pi
push
or
das
mov
cdq
xchg
nop
cmc
repnz
cmp
mov
bound
sbb
sbb
pop
icebp
jns
mul
xchg
lea
mov
stc
push
loop
nop
jecxz
mov
mov
addr16
enter
aad
pop
sbb
xchg
(bad)
xchg
inc
retf
stos
aas
sti
es
mov
and
jo
dec
cmc
sar
cmp
fdivp
pop
xchg
or
movs
jae
xor
jmp
pop
out
es
mov
mov
xchg
rcr
sub
retf
cmps
adc
stc
aad
mov
push
in
fwait
push
push
adc
test
cmps
aad
or
jne
ficomp
retf
cmps
das
pop
xor
xor
xor
xlat
jno
pop
mov
sub
ins
out
mov
rol
iret
xchg
xor
xchg
jns
push
iret
xchg
mov
cli
inc
and
fwait
adc
lods
mov
aad
into
pop
fild
(bad)
jno
int3
pop
mov
ret
xor
test
mov
mov
sub
mov
and
pop
popa
pushf
and
cmps
cmp
jae
push
(bad)
push
pop
ror
push
rol
mov
(bad)
or
shr
aad
sub
in
test
js
into
sbb
jno
fidiv
or
mov
pop
jnp
adc
cmp
scas
mov
cmp
gs
pusha
dec
and
dec
dec
push
movs
and
bound
add
repz
(bad)
jnp
xchg
or
push
sub
and
mov
sub
pushf
movs
pop
xchg
in
sub
jecxz
mov
aas
mov
push
xchg
int
ja
cmp
pop
pop
xor
(bad)
cmc
xor
dec
jmp
sub
or
std
mov
mov
pop
(bad)
cmp
jbe
push
adc
das
and
cmps
popf
arpl
jg
cmp
inc
shl
mov
inc
or
push
rcr
popa
mov
pusha
out
call
ds
or
popf
sbb
cmc
mov
push
add
out
mov
dec
in
or
(bad)
out
inc
ins
scas
scas
mov
cmp
int
cmp
fstp
int
jecxz
cdq
xchg
cmc
mov
ror
call
in
enter
xchg
clc
push
xor
call
xor
ds
outs
cdq
ror
pop
fnsave
sub
cmp
push
fisubr
sub
push
add
mov
fstp
sub
fcomp
mov
cmp
aam
and
idiv
ss
in
(bad)
push
std
(bad)
push
ret
jns
and
sbb
ins
test
in
jle
lods
mov
push
mov
ret
movs
jmp
dec
xor
jne
xchg
mov
nop
jmp
sbb
jo
in
pop
push
cmp
popf
rol
dec
daa
test
mov
jg
mov
popf
mov
ds
cmp
in
stos
(bad)
jne
push
and
add
dec
lea
jno
lea
jae
cld
sbb
iret
je
je
cmp
jmp
xor
enter
dec
sbb
jecxz
imul
(bad)
jp
xor
dec
stos
lods
inc
add
test
(bad)
xlat
jne
jl
aaa
sub
mov
or
jle
jns
mov
cmp
movs
sar
lea
int3
jg
sub
xchg
mov
mov
mov
push
(bad)
cmc
test
sub
fistp
or
clc
and
push
cmps
or
int3
(bad)
jecxz
nop
aas
lea
push
xor
inc
cs
xor
dec
pop
sbb
pop
mov
jae
xor
loopne
dec
jns
sbb
fcomp
sub
loop
lahf
or
push
add
hlt
lds
mov
jno
test
cld
js
jg
(bad)
sub
dec
mov
sbb
adc
int
(bad)
jle
in
push
inc
lds
cmp
pop
cmp
pop
jne
pop
mov
cmc
mov
jb
cmps
fsubr
inc
enter
jnp
mov
mov
adc
cmp
xor
adc
xchg
dec
jbe
jae
dec
in
stc
jecxz
mov
das
pop
aad
clc
pop
imul
and
pop
dec
dec
push
pop
and
xchg
ret
cld
adc
add
neg
and
mov
mov
pushf
xchg
sbb
cmp
ins
add
pop
cmp
mov
xor
shr
xchg
sub
inc
or
mov
mov
mov
push
jno
add
loopne
push
lods
out
movs
popa
cli
mov
xchg
je
mov
rcr
sub
or
and
sbb
or
inc
pop
jp
movs
outs
jnp
xchg
int
jle
dec
loop
mov
jb
daa
push
in
pop
sbb
retf
inc
leave
jl
mov
nop
lea
mov
data16
pop
pop
pop
inc
in
sbb
sub
mov
pushf
cmp
repz
in
mov
les
and
imul
inc
xor
out
sahf
mov
out
test
movq
xor
cmps
mov
sub
and
adc
xchg
sbb
dec
add
pop
in
pop
sbb
push
imul
inc
retf
and
dec
mov
icebp
movs
icebp
(bad)
hlt
mov
mov
xchg
movs
dec
cmp
jae
push
sbb
pop
(bad)
or
pop
cdq
cmp
add
movs
sbb
popa
(bad)
popa
test
dec
sbb
dec
dec
fldenv
jl
add
ret
aas
pop
and
xchg
stos
test
push
test
(bad)
retf
test
aad
loop
xor
pop
sbb
cmp
xor
bnd
jmp
sub
sub
cmps
icebp
mov
lea
cmps
stos
pop
adc
pop
or
clc
test
jmp
or
(bad)
add
push
push
outs
xor
xchg
cmp
dec
rcl
or
in
mov
idiv
jmp
pop
xchg
sbb
sub
shl
out
mov
or
fnstenv
addr16
paddusw
retf
push
daa
mov
cmp
pop
imul
lahf
sub
mov
or
mov
xor
test
xchg
add
jmp
jbe
xchg
je
test
or
mov
xchg
xor
push
and
out
lahf
iret
pop
popa
xchg
adc
xor
and
pop
rol
inc
fsubr
std
sub
out
xchg
sbb
inc
mov
shr
cmps
mov
call
arpl
data16
in
mov
push
sahf
pusha
mov
(bad)
ss
jmp
xor
ins
imul
xchg
aaa
repz
cmc
pop
leave
jo
push
pop
xor
push
cmps
or
and
mov
out
aaa
sub
and
cmp
test
addr16
imul
mov
loope
cli
imul
scas
es
adc
(bad)
lods
loopne
and
mov
shr
test
imul
inc
loope
sub
cmp
std
ins
add
mov
pop
mov
pop
or
stc
mov
int
push
cmps
popa
sub
pop
call
xchg
rol
sbb
mov
shr
std
inc
push
retf
outs
loope
inc
cld
icebp
outs
pop
int
inc
adc
ja
cmp
mov
daa
dec
fs
pop
add
ficom
sbb
cmp
mov
lods
mov
mov
mov
aad
mov
stc
inc
jns
sub
fisub
dec
jmp
fadd
ficom
mov
nop
xor
ret
or
(bad)
jno
fdivr
stos
sub
cmp
cs
adc
movs
mov
lea
xor
mov
mov
xchg
shl
aaa
(bad)
cld
xlat
mov
loopne
mov
or
mov
mov
push
sub
daa
std
push
dec
retf
not
repnz
test
fnstcw
dec
pusha
xor
lea
(bad)
adc
xor
dec
out
inc
call
xchg
nop
sbb
stos
and
stc
mov
ret
clc
gs
dec
hlt
shr
inc
enter
dec
sbb
(bad)
into
(bad)
int3
push
in
or
add
repz
push
push
push
pop
pop
lahf
movs
stos
shl
add
mov
add
leave
jae
repnz
(bad)
mov
mov
int
add
pop
mov
xor
pop
xchg
repz
xor
push
call
or
inc
loop
mov
ret
sar
push
(bad)
ss
ja
out
mov
imul
jae
cs
pop
fwait
xchg
out
adc
call
test
int3
jb
sub
mov
nop
ret
pop
(bad)
(bad)
fistp
movs
push
cld
or
inc
mov
out
inc
mov
test
xor
jbe
dec
and
push
jmp
and
cs
push
push
xor
in
nop
loopne
mov
xchg
shl
pop
neg
add
dec
mov
inc
sar
clc
iret
lods
adc
pop
or
dec
sub
daa
rcr
sub
mov
push
aaa
mov
jns
sbb
mov
in
out
mov
int
dec
dec
arpl
mov
sbb
je
pop
pop
sub
mov
cmps
adc
mov
or
add
xlat
ror
jns
jbe
and
mov
dec
jnp
cwde
push
mov
movsx
and
sbb
imul
in
push
cs
and
les
pop
repnz
enter
adc
mov
sbb
pop
inc
call
ret
mov
aas
push
mov
shr
xor
pop
test
push
pop
out
mov
cmp
out
and
jb
dec
jno
outs
dec
fdiv
iret
inc
fld
sbb
or
cld
das
push
inc
mov
ins
push
and
rcr
xstore-rng
cmps
inc
add
xchg
xchg
mov
xor
(bad)
cmp
mov
aaa
fwait
movs
fdivr
out
pop
inc
jo
pop
push
scas
popa
jp
in
adc
aam
cmp
xor
jbe
jne
mov
jmp
xchg
inc
lea
push
(bad)
push
or
les
add
push
out
leave
or
or
add
out
repz
leave
mov
and
pop
inc
xchg
neg
jp
xchg
stos
out
inc
add
aas
xchg
inc
mov
int
je
pop
fidivr
outs
and
in
(bad)
(bad)
fdivrp
ss
pop
bound
test
add
aam
gs
nop
mov
sbb
mov
sbb
jne
(bad)
adc
movs
push
add
cmp
mov
cs
dec
int3
rcl
dec
inc
cli
std
sub
mov
mov
add
push
int
dec
mov
cs
pop
push
cli
or
movs
stos
or
mov
mov
(bad)
int
scas
lods
inc
or
idiv
data16
or
mov
mov
mov
aam
sbb
pop
ins
in
lock
jge
pop
lods
pop
cmp
imul
mov
inc
push
add
mov
mov
clc
fist
cmc
test
mov
sbb
xor
push
inc
mov
ins
pop
nop
data16
je
jo
xchg
jno
cld
pop
mov
jno
std
xchg
stos
xchg
inc
inc
sub
fsubr
aad
stc
imul
mov
push
mov
bound
movs
jno
push
add
mov
movs
dec
add
or
(bad)
lods
xchg
jle
out
pop
xchg
mov
xlat
pop
xchg
mov
xchg
adc
dec
xor
dec
(bad)
and
mov
dec
xchg
mov
lea
jp
sub
xchg
cmps
fwait
jmp
push
fs
adc
gs
xchg
clc
mov
stc
mov
inc
dec
or
test
add
sbb
jmp
sub
ins
aaa
test
out
pop
daa
rcl
nop
cmps
dec
jae
add
fst
sub
jbe
cs
cmps
pop
stos
xor
call
not
and
in
mov
mov
inc
test
enter
(bad)
cmp
adc
inc
and
(bad)
adc
jae
jae
enter
sbb
mov
stos
aam
mov
dec
out
mov
mov
mov
int
inc
xor
or
outs
pop
sub
movs
sub
xchg
mov
movs
cs
les
call
inc
shl
add
xor
inc
ss
jge
dec
add
stc
fistp
xchg
sbb
int3
movs
or
pushf
mov
mov
mov
mov
jecxz
(bad)
jnp
push
jne
out
lods
mov
enter
push
cmp
xchg
popa
out
dec
adc
inc
jno
rcr
xor
sbb
stos
inc
xchg
xchg
mov
cmps
jge
cli
dec
jbe
cmp
retf
mov
lods
jo
out
repz
rcl
sbb
sar
add
jle
dec
adc
dec
stos
jb
sbb
sbb
movs
dec
sub
pop
int3
jp
das
jmp
push
mov
fsubr
dec
mov
adc
sub
or
push
sub
bound
out
xlat
pop
js
add
cmp
or
dec
mov
loope
(bad)
cmps
sbb
imul
je
(bad)
nop
pop
add
push
(bad)
data16
sub
shl
jae
jbe
pop
ret
push
xchg
add
adc
in
lsl
cdq
xor
cmc
mov
adc
clc
ret
loope
push
imul
sub
popa
hlt
xchg
xor
mov
dec
cmp
call
loope
and
repnz
mov
mov
push
add
lea
lods
add
jae
imul
loopne
mov
fcmovu
xchg
adc
pop
xor
inc
rsm
mov
jo
cmps
pop
push
dec
mov
addr16
inc
push
and
lods
and
sar
xchg
lock
and
outs
mov
mov
mov
popf
jg
mov
lods
std
jb
dec
jnp
adc
cmp
mov
jae
hlt
repnz
adc
fstp
js
leave
sbb
je
adc
and
mov
pop
adc
adc
jmp
sbb
and
or
jg
es
jl
les
std
nop
mov
in
adc
mov
outs
ret
ins
in
jnp
dec
sub
int
sub
and
imul
lods
xor
xor
frstor
retf
int3
xor
test
call
push
cli
xchg
hlt
shl
movs
sbb
neg
gs
out
mov
imul
xchg
mov
xchg
dec
xor
cmp
push
add
pushf
mov
add
ret
xor
inc
pop
dec
mov
jl
adc
cmp
mov
fld
sahf
test
inc
pushf
jmp
sub
pop
push
fnsave
mov
mov
jl
add
push
xchg
aas
int
loopne
pop
(bad)
jmp
scas
jb
mov
adc
mov
mov
xor
outs
dec
cmps
add
call
test
loope
ror
or
call
sahf
sub
ret
sbb
and
push
gs
in
movs
cwde
sbb
inc
push
xchg
mov
dec
movs
cld
movs
or
and
loop
add
repnz
xchg
in
pop
into
inc
sub
aad
aam
mov
add
dec
mov
icebp
mov
jnp
jecxz
out
mov
inc
jmp
pop
mov
popa
xchg
inc
cs
mov
cwde
xchg
ficomp
daa
lds
outs
pop
adc
sbb
add
nop
data16
sub
xor
aam
js
cmps
out
test
add
mov
inc
(bad)
adc
call
in
icebp
lods
test
mov
add
push
cmps
mov
ror
xchg
int
push
inc
sbb
adc
pop
sub
inc
cmps
(bad)
mov
(bad)
(bad)
loop
call
pop
jmp
call
rol
or
cmp
push
inc
nop
mov
cmp
or
(bad)
sbb
test
jns
aad
sub
cmp
xor
kmovw
movs
sub
add
dec
sbb
movzx
retf
push
loop
push
jns
push
xor
xlat
sub
and
sub
jb
and
lea
mov
popa
mov
ds
mov
jg
imul
jae
fiadd
ret
in
and
sub
dec
add
cwde
es
cli
lea
jne
sub
sub
add
mov
popa
jl
mov
in
xchg
scas
and
push
fadd
repz
fwait
or
inc
ins
inc
pushf
imul
add
mov
ret
fldenv
imul
ror
std
mov
in
jno
pop
jle
add
jns
xor
pop
lahf
jecxz
pop
jne
les
push
(bad)
in
xor
les
mov
inc
jmp
fs
retf
push
in
jmp
gs
cmp
fwait
mov
stc
rcr
pop
movs
rcr
in
std
xchg
inc
leave
push
sub
shl
push
fsubr
(bad)
xchg
jae
fidiv
pop
add
shl
or
iret
inc
clc
scas
push
mov
inc
xchg
jge
add
test
jbe
and
retf
fwait
(bad)
fnstsw
ins
push
mov
mov
sti
add
pop
int
sbb
xor
sub
into
mov
neg
inc
call
pop
xchg
in
pop
aaa
pop
add
je
gs
loope
ins
enter
ret
lods
(bad)
push
jnp
pop
dec
sahf
pusha
ins
enter
fcmovbe
push
adc
mov
aas
mov
mov
mov
add
dec
fisub
leave
cmp
fwait
cmps
imul
pop
dec
loope
and
adc
xchg
pop
xlat
push
push
jb
retf
xchg
ins
mov
(bad)
aam
aam
xor
push
enter
aad
clc
cld
cmp
xchg
fld
lea
in
mov
inc
xor
push
adc
mov
jns
push
mov
mov
xchg
popf
(bad)
stos
inc
xor
pop
popf
fsub
mov
push
xchg
mov
mov
imul
cli
adc
push
add
cmps
gs
mov
add
mov
mov
or
cmps
mov
outs
jns
in
xchg
pop
mov
inc
inc
and
shl
push
sub
or
mov
test
(bad)
out
inc
adc
pop
ins
sti
scas
call
jg
pop
mulps
jno
inc
ins
shl
and
xchg
lods
jb
pop
and
aam
cmps
enter
jmp
daa
sar
aaa
dec
call
xchg
and
shr
jmp
or
inc
out
addr16
into
mov
nop
out
pop
jecxz
pop
adc
mov
(bad)
hlt
push
xchg
and
ret
into
test
fs
xchg
adc
mov
mov
das
xchg
xor
out
mov
cmp
adc
scas
sub
xchg
fisttp
mov
nop
cmc
adc
push
sbb
out
lock
sub
xchg
push
pop
cli
bound
(bad)
ds
loop
pop
out
rol
mov
scas
and
ffreep
or
jp
out
mov
fcmovnb
shl
fisub
pop
add
xchg
inc
cwde
adc
sub
es
mov
xchg
les
push
outs
addr16
xor
dec
cli
popf
mov
or
in
mov
mov
rol
mov
xor
imul
out
retf
xchg
inc
pop
dec
scas
sbb
(bad)
jp
iret
push
mov
in
mov
and
loope
mov
adc
mov
mov
repz
sti
fistp
xchg
sbb
call
loop
push
sbb
jmp
sub
jmp
sar
mov
mov
loopne
jno
(bad)
neg
jle
das
and
xchg
inc
sar
mov
ja
fwait
repz
ror
pop
add
xlat
icebp
jmp
jnp
call
inc
adc
jb
pop
mov
(bad)
das
add
pop
mov
xchg
jg
and
hlt
aad
or
std
sub
push
mov
mov
inc
xchg
bound
cmc
mov
and
not
inc
popa
daa
fcos
out
dec
pop
or
xchg
stos
xchg
and
loop
adc
gs
jne
jns
shl
dec
mov
mov
jmp
jo
push
mov
in
(bad)
sbb
fisttp
jmp
pop
xor
cmovle
pop
mov
jmp
div
mov
(bad)
jmp
stc
shr
call
mov
cdq
sub
dec
loope
dec
lods
or
inc
pop
mov
pop
daa
pop
into
scas
cmp
sub
or
adc
fisubr
sbb
in
inc
xor
adc
aad
pop
sar
and
jg
push
fldcw
mov
out
or
adc
icebp
pop
xor
jne
enter
mov
jecxz
stos
or
icebp
cmp
xchg
xchg
and
fidivr
(bad)
sbb
mov
movs
pop
test
xchg
xor
fist
push
dec
es
or
int3
adc
cli
movs
push
enter
dec
cmps
stos
test
ins
lods
mov
out
mov
and
das
int3
and
dec
jnp
jmp
add
ss
aas
push
call
inc
dec
inc
mov
cmp
mov
fld
push
push
jno
test
or
cld
xor
(bad)
call
mov
adc
clc
adc
add
ds
loope
ror
or
fcom
mov
jb
sub
jge
and
push
pop
js
femms
and
mov
ret
inc
cmc
xchg
jle
sbb
lock
fidiv
loopne
cmp
neg
jmp
jbe
out
es
cmp
pop
cwde
sub
push
jp
add
scas
pop
jo
outs
test
ins
and
les
jne
push
mov
test
inc
pop
xlat
add
cmps
ror
pop
pop
sbb
or
push
push
(bad)
mov
repz
ins
iret
jns
pop
pop
xchg
mov
mov
adc
test
mov
push
mov
inc
push
inc
imul
rcr
fst
mov
ror
or
(bad)
push
cmp
dec
or
jg
cmp
push
pop
fadd
out
add
mov
dec
sub
mov
call
out
inc
test
adc
clc
add
xchg
clc
mov
mov
mov
out
jle
pusha
cld
mov
xchg
inc
fisttp
test
sahf
push
push
or
pop
(bad)
dec
pop
push
(bad)
repz
jge
mov
test
inc
pop
sbb
ss
mov
mov
ds
imul
out
out
dec
loope
or
pop
or
dec
fadd
inc
sub
fidivr
mov
push
(bad)
sar
shl
call
cmps
add
aas
or
mov
in
repz
push
lahf
ja
out
rol
mov
ins
mov
aad
pop
jg
test
call
push
cmps
movs
sub
jg
aaa
pop
sub
int
call
call
movs
xchg
in
shl
fdiv
jle
jmp
xchg
popf
mov
and
mov
push
pop
mov
(bad)
out
jmp
cs
bound
js
call
retf
pop
push
fidivr
faddp
mov
loopne
push
in
fist
rcr
(bad)
in
call
popa
add
xlat
add
sub
and
call
add
bound
add
add
pushf
shl
cmp
in
or
mov
adc
mov
imul
or
ins
cwde
scas
imul
and
ret
cmp
xchg
inc
inc
pop
sbb
adc
mov
mov
mov
repnz
xchg
push
inc
pop
aas
aad
loope
or
dec
mov
imul
neg
xor
cmp
cmc
inc
sti
inc
sub
add
or
or
retf
jno
outs
jo
(bad)
jg
imul
dec
in
shl
out
mov
xchg
lds
push
sahf
cs
push
test
movs
fisttp
mov
ret
sub
test
scas
jae
enter
add
jmp
dec
in
pusha
ins
bound
cs
inc
imul
cdq
adc
adc
mov
mov
sbb
movs
rol
xor
int3
lock
repnz
pop
cmp
and
push
push
pop
daa
jno
ja
xor
shl
scas
sahf
xchg
and
sahf
pop
add
rol
push
add
push
cmp
out
popf
pop
inc
scas
aad
retf
push
pushf
xor
rcl
movs
xchg
popa
xor
jge
sbb
push
mov
xlat
mov
cli
addr16
fidiv
cmp
aaa
outs
loopne
and
lds
fidiv
inc
cdq
test
imul
movs
push
movhps
inc
and
outs
mov
je
mov
repnz
dec
pop
sub
shl
sbb
sar
dec
mov
inc
repz
cmps
push
out
lds
ret
ss
(bad)
neg
(bad)
call
in
dec
jo
jge
dec
mov
sti
rol
test
repnz
dec
sahf
xchg
jo
cmp
daa
cmp
push
add
sub
ins
aad
mov
pop
xlat
imul
and
and
add
not
inc
and
add
into
dec
dec
cmp
adc
imul
xchg
stos
mov
mov
jp
xchg
push
jle
pop
cmp
fadd
test
adc
and
adc
aas
adc
mov
sub
ins
jne
dec
lock
dec
ret
push
mov
movs
add
lea
sahf
mov
and
mov
mov
add
mov
push
bound
clc
dec
push
mov
shl
arpl
(bad)
dec
je
mov
mov
push
(bad)
in
xor
int
psubsb
retf
xor
arpl
mov
stos
xor
clc
push
or
mov
sub
int3
out
addr16
pop
dec
pop
add
push
inc
inc
ds
mov
rcr
sbb
jp
rcr
mov
bound
mov
xor
mov
movs
retf
cdq
mov
mov
ret
dec
clc
je
and
dec
ret
jg
mov
jb
xor
and
(bad)
stc
adc
pop
(bad)
loope
mov
jo
mov
fsub
mov
mov
cli
inc
add
sbb
in
and
pop
and
push
mov
daa
push
movs
mov
sub
sub
dec
aaa
lock
mov
xchg
xor
out
outs
jno
bound
fnstcw
or
popa
xor
xchg
arpl
in
out
xor
nop
popf
cmp
jae
test
mov
mov
ins
pop
retf
sbb
repz
mov
pop
sub
push
rcr
call
mul
mov
dec
xor
outs
mov
add
cmp
enter
adc
mov
or
loope
jb
cmps
fbstp
push
xor
mov
mov
push
fcom
sbb
fstp
loope
jmp
mov
and
dec
push
dec
push
retf
jmp
repnz
sub
sub
sbb
or
and
sbb
clc
or
sub
mov
repnz
loop
jmp
inc
inc
shr
aad
lods
mov
cmp
fstp
js
jb
ins
mov
jmp
mov
ficomp
addr16
inc
xor
sbb
call
ret
ss
(bad)
cmp
pop
xchg
ja
adc
sub
(bad)
lods
out
inc
js
jb
xlat
mov
dec
cli
or
push
cmp
mov
pop
das
sbb
ret
lds
dec
push
mov
or
pop
pop
into
mov
sbb
jg
jno
out
or
fnsave
rol
(bad)
std
sbb
mov
mov
retf
and
dec
lahf
pop
sub
sub
sub
or
cmp
aam
and
clc
push
adc
lds
(bad)
sbb
fs
push
nop
loop
xor
js
pop
enter
push
jecxz
pop
cmp
ja
loop
dec
cmp
lahf
mov
xchg
fs
mov
xchg
popa
jb
inc
jo
push
push
xchg
or
stos
pop
stos
mov
add
jnp
lods
pop
popf
or
dec
loop
ins
jl
ror
sub
lods
enter
pop
mov
or
outs
(bad)
int
lock
retf
fidivr
inc
neg
shl
mov
cmp
dec
jp
jbe
pop
push
pop
loop
add
inc
loop
cmps
shl
pop
xchg
dec
or
xor
test
jp
int3
das
adc
(bad)
lods
ror
test
or
out
(bad)
cld
mov
aam
mov
inc
cmp
adc
sbb
mov
and
mov
jae
scas
scas
sti
add
xor
movs
hlt
fstp
outs
clc
fistp
xchg
adc
or
mov
xlat
inc
cwde
fsubrp
ficomp
not
lahf
jno
lods
in
xchg
inc
sbb
and
push
int3
xchg
psubusw
pushf
xor
xor
mov
(bad)
jmp
and
xchg
cwde
retf
clc
lock
jbe
sub
push
xlat
lea
push
xor
add
popa
sti
pop
inc
push
sub
std
sbb
outs
mov
ins
jle
scas
cs
dec
fwait
arpl
mov
adc
xor
jmp
push
fidivr
mov
pop
pop
pop
inc
jecxz
jne
adc
ja
test
leave
mov
and
frstor
cmp
xor
in
push
xor
add
lds
jne
add
pop
xchg
stos
sub
pop
ret
data16
je
add
cmp
cmps
mov
movs
pop
or
inc
pop
dec
sbb
or
mov
cmp
pop
or
jno
or
push
push
xlat
sub
dec
cmp
mov
retf
test
sbb
push
cmp
fcom
(bad)
adc
jne
sub
ins
cmp
popa
xor
add
pop
adc
out
ret
xchg
mov
jae
bound
popa
mov
mov
movmskps
xchg
push
(bad)
ror
cmp
xchg
pop
mov
dec
dec
js
ss
sub
sub
sti
push
dec
cmp
jmp
addr16
push
cmps
mov
sbb
ins
mov
pop
out
mov
adc
sbb
jl
pop
mul
or
imul
cmps
push
mov
and
push
and
cmp
ficom
xchg
push
jb
lea
scas
jnp
and
je
and
retf
ss
pop
sub
mov
cmp
or
xor
push
out
xchg
enter
push
sub
inc
lock
aam
outs
or
popa
jge
(bad)
sahf
jmp
(bad)
nop
mov
push
nop
nop
imul
aaa
fld
inc
dec
into
jecxz
call
inc
cmps
pop
and
lahf
sub
(bad)
fimul
mov
(bad)
in
cmp
mov
push
(bad)
nop
shr
pop
arpl
dec
arpl
and
icebp
ficom
and
jmp
clc
jns
sbb
ins
ds
xchg
pushf
sbb
fcomp
dec
aam
mov
push
mov
adc
sub
push
cmp
jmp
jmp
sbb
fcmovu
or
add
fcomp
adc
mov
push
jg
cdq
cmc
fsub
jge
test
ja
xchg
in
xchg
clc
xchg
mul
sub
dec
mov
mov
adc
jne
dec
mov
inc
add
ds
xor
pop
dec
ret
mov
(bad)
xlat
sbb
add
inc
inc
int
scas
aaa
dec
in
xor
sti
sub
sbb
add
inc
(bad)
mov
ins
and
idiv
loope
idiv
add
movs
call
mov
add
xor
enter
sbb
outs
mov
loop
les
mov
cmp
call
add
pop
jmp
or
movs
adc
or
stos
sahf
test
icebp
sbb
out
scas
or
push
push
in
popa
test
inc
pop
mov
dec
in
inc
xchg
or
cmps
push
lahf
(bad)
dec
retf
jmp
push
movs
retf
sar
maxps
repz
dec
cmp
sub
fiadd
sti
sbb
jle
sub
jle
mov
sub
xchg
dec
lods
ins
sbb
jle
pop
int3
dec
inc
js
arpl
jne
test
mov
xor
dec
jmp
pop
xor
push
jl
dec
cmp
(bad)
mov
pop
sahf
jl
rcr
ins
je
dec
adc
push
fstp
in
dec
fsub
cmp
jb
xor
inc
into
mov
(bad)
xor
inc
xchg
pop
call
xchg
xchg
pusha
cmp
mov
scas
xor
dec
cli
lds
test
in
push
js
adc
sahf
fiadd
and
(bad)
aam
in
stc
mov
mov
lods
dec
cmp
sbb
psrld
stos
mov
or
bswap
xchg
xchg
jbe
iret
ss
add
push
push
inc
mov
and
inc
ret
(bad)
or
shl
idiv
fsub
adc
(bad)
xor
sub
stos
jb
aaa
fwait
xchg
icebp
xchg
fstp
data16
jbe
arpl
mov
cmps
stc
pop
pop
lock
jbe
addr16
add
inc
enter
jo
stc
sub
int
or
test
mov
pop
pop
cmp
out
in
outs
pop
add
in
nop
stos
cmps
and
test
lea
lea
iret
xchg
cmp
outs
movs
push
xchg
dec
xchg
loope
sahf
repz
nop
sub
xor
outs
aas
fisttp
mov
stc
lods
pop
jae
mov
sub
fldenv
fmul
xor
push
mov
(bad)
and
jae
pop
pusha
jbe
cmps
mov
inc
fsub
sub
mov
hlt
js
push
cwde
jl
push
sbb
cli
loop
or
idiv
test
cpuid
stc
stc
call
iret
pop
xor
test
jne
mov
xchg
popf
mov
es
scas
push
mov
push
cld
inc
dec
(bad)
mov
and
mov
mov
jmp
call
ja
pop
push
hlt
mov
lods
mov
loop
xor
xchg
inc
ror
pop
cmp
and
(bad)
retf
out
ret
sahf
cmp
imul
sbb
inc
push
xchg
jne
jmp
in
repz
xchg
out
test
or
hlt
loop
daa
sbb
sar
rcr
imul
ret
or
cmp
movs
enter
pop
fs
mov
test
or
mov
xor
div
call
rsqrtps
in
inc
fnsave
dec
sbb
mov
add
cdq
jne
cmp
and
rol
fdiv
xchg
fbstp
jle
push
adc
push
cmp
sti
movs
pop
repz
cs
jne
mov
xor
sub
stc
pop
ins
inc
push
sbb
mul
jp
push
aaa
(bad)
mov
into
out
loopne
leave
stos
or
pop
sub
jle
jne
leave
inc
js
jmp
sar
xchg
mov
je
push
jmp
push
mov
cli
(bad)
nop
mov
jnp
mov
adc
arpl
fsub
sahf
mov
daa
fadd
gs
and
dec
sbb
ret
enter
(bad)
push
cmc
in
out
in
sbb
xor
push
jle
test
loop
xchg
xchg
sub
jnp
loope
pushf
mov
inc
dec
aam
mov
push
push
mov
bound
jne
sub
xor
movs
cmp
dec
dec
clc
cmp
cmps
xchg
leave
mov
or
cmp
aad
jp
rol
pop
xchg
int3
enter
pop
dec
cmp
push
push
bound
push
xchg
push
stc
out
inc
xor
(bad)
cli
mov
jge
out
js
shl
loope
xor
rcl
lahf
int3
retf
mov
mov
jo
daa
jmp
aam
pop
mov
mov
and
fdiv
iret
inc
cld
out
adc
test
fs
mov
int
sub
jp
inc
or
ror
jbe
shl
arpl
call
data16
outs
cmp
jae
sbb
push
mov
imul
mov
lock
fs
xor
push
jmp
add
jo
add
rdpmc
dec
xrelease
popf
test
push
fst
(bad)
inc
push
hlt
icebp
les
cmp
neg
retf
push
je
jne
push
stos
cmp
jb
test
cmp
lods
sbb
dec
pop
or
cli
sub
call
add
fwait
retf
(bad)
mov
dec
push
sbb
jmp
popa
cmp
fnsave
imul
push
sar
mov
jle
dec
mov
dec
mov
jo
call
into
xor
and
adc
xchg
out
xchg
adc
pop
test
aas
sub
cwde
add
xor
push
movs
jo
add
ret
enter
ror
stos
arpl
mov
test
and
xor
pop
xchg
mov
mov
push
adc
adc
mov
xchg
mov
xchg
mov
adc
xor
sbb
cmp
cs
mov
inc
adc
pop
mov
pop
xchg
push
mov
dec
iret
test
adc
cmp
imul
fistp
shl
retf
jp
and
xchg
repz
rol
and
pop
imul
adc
mov
jge
test
xchg
pop
leave
xor
imul
lods
fisub
and
sub
aad
jmp
movs
ret
sbb
fmul
sbb
outs
push
xor
enter
popf
stos
xor
popf
add
out
sub
std
(bad)
fcomip
add
(bad)
xor
xchg
xor
mov
test
data16
inc
(bad)
push
add
movs
pushf
inc
push
aad
cdq
push
ins
(bad)
mov
fbstp
push
or
xor
mov
push
loop
daa
xchg
cwde
push
inc
inc
movs
mov
inc
fwait
xor
dec
lahf
sbb
rcr
sbb
aas
je
sub
not
pop
push
sub
push
aad
fsub
sti
gs
ins
xchg
jns
xchg
add
ja
(bad)
loope
repnz
loop
daa
cmp
sub
icebp
dec
add
movs
dec
xchg
fiadd
stc
push
mov
retf
call
in
pop
push
push
inc
fiadd
lahf
pop
pusha
mov
out
in
es
stos
push
movs
leave
mov
sbb
mov
ret
fyl2x
rol
shl
std
mov
retf
lea
or
push
adc
pop
aas
(bad)
adc
lock
xchg
sbb
push
cmp
addr16
data16
sub
into
test
rol
(bad)
and
imul
icebp
fwait
js
addr16
imul
nop
xchg
int
sti
push
in
and
mov
xchg
sub
mov
inc
cdq
xor
icebp
mov
adc
xor
inc
std
push
div
xor
pop
jmp
pop
mov
enter
out
sbb
push
or
(bad)
lods
call
iret
sahf
push
out
xchg
div
loop
mov
or
dec
(bad)
outs
push
sub
add
adc
xor
data16
addr16
xor
xchg
sbb
fmul
xchg
popa
fldenv
push
ret
(bad)
or
dec
mov
or
mov
sub
or
dec
mov
mov
cmp
push
mov
out
jns
in
or
shl
cmps
jmp
sub
mov
mul
std
jo
lods
pop
sub
fadd
and
sti
pop
jl
aas
pushf
cmps
push
lea
enter
jl
sbb
sub
mov
mov
sbb
test
dec
fs
ds
push
sub
jmp
mov
sub
push
pusha
pop
into
retf
repnz
div
push
clc
or
push
xchg
cmc
push
jg
and
fwait
xor
(bad)
pop
push
sub
repz
inc
and
jne
pop
aas
test
inc
pop
add
fdivr
test
cmps
inc
pop
ins
iret
popa
aam
mov
xchg
or
xor
les
call
ret
mov
jg
jg
hlt
out
fisubr
pop
inc
push
out
sbb
mov
jg
mov
sbb
and
jo
sub
xor
cmps
cdq
test
call
cwde
sub
push
sti
popf
ins
test
xor
or
clc
rol
retf
(bad)
pushf
pop
sahf
dec
gs
mov
pushf
mov
sbb
div
je
loopne
pop
sbb
sbb
aas
call
outs
mov
jmp
imul
not
leave
scas
push
sub
test
xlat
outs
push
jecxz
mov
cmp
inc
ror
ror
cmp
sub
sub
outs
jl
int
push
lahf
in
in
jne
adc
mov
inc
mov
push
mul
add
jne
mov
sbb
popa
pop
jb
xchg
(bad)
sbb
clc
push
fs
mov
push
call
dec
adc
repnz
fnstcw
pop
push
test
int
cs
into
push
fs
fisttp
pop
push
das
or
or
push
mov
cs
jecxz
xor
(bad)
int
xor
out
pop
mov
shl
mov
inc
xor
ret
xlat
adc
ret
lods
jb
or
adc
mov
loopne
pop
popa
(bad)
mov
adc
dec
les
(bad)
push
retf
cmp
sbb
pop
and
enter
xchg
fs
xchg
jge
fadd
retf
fnstcw
int
or
and
jo
adc
or
ss
shl
imul
int3
xor
jae
push
mov
leave
pop
add
jne
(bad)
xlat
inc
xor
mov
je
leave
daa
xchg
push
icebp
jg
add
in
outs
mov
sub
retf
aam
call
jno
(bad)
pusha
add
or
and
mov
retf
adc
push
fstp
cmp
addr16
popa
cmc
loop
or
stos
pop
fimul
mov
xlat
ret
das
and
push
pushf
fnstcw
jns
xchg
add
pop
bound
and
mov
neg
cdq
mov
icebp
fstp
adc
mov
pop
test
out
test
sub
(bad)
and
es
mov
pusha
test
call
aas
jbe
jmp
mov
xlat
fstp
outs
les
fisttp
pop
dec
mov
aaa
fsubr
mov
xchg
and
jmp
ja
leave
out
fcomp
pop
mov
inc
int3
fild
and
inc
popf
(bad)
leave
push
inc
sbb
outs
mov
jle
and
mov
dec
or
cmc
aas
jnp
sub
mov
xlat
xor
add
jbe
dec
sub
push
adc
call
test
or
sbb
xchg
or
jo
jmp
fstp
shufps
ins
adc
cmp
and
inc
and
ss
inc
push
sahf
jle
mov
rcl
cdq
mov
mov
mov
adc
gs
cli
mov
sub
sbb
jge
cmp
xchg
popa
fsub
pop
cmp
and
scas
pop
(bad)
sbb
adc
xor
or
xor
push
xor
hlt
adc
(bad)
mov
xchg
mov
scas
push
(bad)
xor
or
sbb
add
icebp
add
divps
dec
inc
sti
pop
adc
and
out
or
pop
push
call
clc
cdq
inc
adc
and
adc
pop
sti
gs
loope
adc
pop
sbb
lds
adc
sub
(bad)
cli
mov
jns
mov
xlat
mov
jae
stc
and
inc
sub
mov
inc
(bad)
adc
adc
inc
call
add
inc
data16
mov
push
scas
mov
jno
xchg
xchg
into
(bad)
adc
jmp
loop
sub
loop
and
and
adc
mov
and
sub
mov
mov
jae
(bad)
out
sbb
gs
mov
imul
fld
sbb
xchg
xor
loope
fwait
push
call
pop
and
xchg
mov
hlt
push
movs
cmp
sub
lahf
xor
xor
xor
out
pop
push
sub
dec
rcr
mov
div
or
cwde
repz
push
sub
and
dec
mov
jecxz
push
xchg
rol
cmp
clc
retf
fnstenv
xor
aas
push
test
mov
adc
push
int
jp
(bad)
sub
les
inc
scas
pop
pop
xor
push
les
lock
repnz
dec
sbb
or
pop
xchg
sub
ret
xchg
je
cwde
ja
enter
add
jecxz
xlat
mov
sahf
fs
mov
dec
inc
stos
ins
jmp
(bad)
push
pop
pop
test
pop
into
aam
lods
std
daa
mov
inc
lods
or
(bad)
jnp
outs
xor
adc
xchg
fld
sbb
std
mov
xor
scas
out
(bad)
icebp
xchg
loopne
jp
xchg
sbb
xchg
in
and
call
loopne
std
lods
imul
xchg
jb
and
sbb
push
sbb
dec
push
test
inc
in
sbb
data16
dec
adc
xor
add
ficom
call
jo
(bad)
cld
scas
jl
lock
push
xchg
xlat
frstor
leave
shl
mov
add
loope
inc
xor
sbb
or
enter
pop
inc
push
push
cmpxchg
repz
mov
pop
fwait
cwde
sub
call
adc
rcr
data16
cmp
mov
push
shr
jg
or
pop
test
dec
and
jge
mov
sbb
xor
or
out
aam
jmp
jnp
mov
push
stc
push
xchg
dec
mov
xor
xchg
mov
cmp
fdiv
ja
fwait
push
jo
adc
xor
test
push
mov
loop
pop
xchg
sbb
outs
and
cmp
push
in
sbb
cmp
or
mov
cmps
lock
popf
daa
enter
add
push
push
in
out
push
xchg
fprem1
outs
mov
or
movs
ret
std
inc
test
sbb
or
mov
loope
mov
outs
imul
push
fs
cli
and
and
rcl
xor
push
sub
dec
jmp
mov
cdq
scas
imul
test
or
retf
and
adc
xor
jns
push
call
pop
xchg
popa
push
dec
mov
jbe
pop
jne
xor
xchg
pop
add
fs
in
xchg
and
sbb
jo
(bad)
xchg
or
lock
ds
out
jne
mov
and
mov
retf
ret
imul
or
in
mov
popf
loopne
adc
mov
pop
mov
inc
dec
cmp
sbb
and
adc
mov
push
or
mov
outs
cmp
clc
jns
loope
out
push
push
(bad)
ret
and
sub
fcmove
push
or
jnp
ins
sub
mov
inc
fdivp
into
lods
retf
mov
cmp
int
inc
cmp
pushf
test
in
pop
xchg
fidivr
jo
mov
mov
add
adc
ror
mov
dec
fbstp
or
push
jl
addr16
ins
mov
fisub
cs
mov
shr
bound
repz
cmps
pop
inc
dec
pusha
into
push
out
inc
in
lods
dec
inc
push
gs
stc
mov
add
cmc
inc
out
jl
push
dec
pop
mov
call
and
jbe
enter
mov
mov
and
int
jb
jmp
aas
dec
repz
retf
mov
es
aas
int3
adc
mov
mov
or
loopne
push
jo
xchg
sbb
lods
mov
sbb
xlat
lods
repz
or
mov
jmp
xor
(bad)
sub
rcr
xchg
mov
cld
je
ror
mov
mov
mov
cmc
leave
cwde
test
or
jne
push
jmp
bound
xchg
dec
pushf
push
cmc
cdq
adc
imul
inc
aas
int3
retf
inc
in
cmp
jp
mov
jns
cmp
sbb
std
cmps
mov
dec
add
popf
fdiv
(bad)
imul
add
sbb
shr
push
jecxz
loope
cmp
jge
cmp
popf
jmp
pop
pop
fcomp
nop
sub
pop
pop
add
and
xor
je
xchg
inc
xchg
inc
pop
sbb
jle
es
dec
push
stos
pusha
xlat
adc
in
pop
jecxz
les
jmp
add
mov
mov
or
icebp
jbe
adc
out
push
cwde
cwde
mov
and
cmps
push
in
imul
int3
call
pop
mov
adc
ret
cs
mov
jae
rcr
inc
dec
cmps
retf
mov
fcmovnbe
push
shl
(bad)
cli
in
arpl
pusha
sbb
cld
inc
push
test
xor
pop
jl
push
fisttp
sbb
stos
rol
aas
scas
pop
or
pushf
dec
and
es
push
dec
stc
mov
sbb
scas
ficomp
stos
push
jno
mov
and
nop
jecxz
sub
lods
mov
movs
test
cld
sub
pop
xchg
test
jmp
inc
inc
or
test
mov
dec
jb
fidiv
and
xchg
addr16
mov
adc
(bad)
aas
retf
sub
add
nop
loop
in
into
xchg
sub
mov
cmp
jo
jl
pop
int
cmps
idiv
cmp
mov
push
sbb
or
xchg
ror
jno
popa
ret
sbb
jo
(bad)
mov
adc
cwde
push
movs
neg
dec
or
push
pushf
idiv
xchg
cli
sub
es
loop
sbb
or
mov
outs
rcr
push
movs
mov
pop
xor
pop
stos
fdiv
dec
pusha
int
mov
sub
sbb
iret
ins
cmps
inc
pop
stos
enter
pop
retf
test
adc
daa
push
ret
cmp
push
inc
mov
push
and
push
cdq
sub
pop
outs
hlt
outs
sti
adc
outs
mov
dec
sub
add
test
push
out
int
rol
es
aam
aas
inc
mov
pop
mov
pop
xor
jmp
mov
or
xchg
dec
jmp
mov
mov
sub
xor
pop
cmp
add
mov
clc
mov
mov
jne
jbe
mov
jge
mov
int3
dec
ja
push
add
and
and
ficomp
sub
call
push
add
mov
add
and
cmp
and
dec
fdivr
mov
cmp
adc
xchg
mov
jns
ret
xchg
(bad)
retf
jb
lods
inc
and
in
dec
adc
fsubr
and
nop
and
popf
cmc
xor
inc
jge
movs
popa
ins
es
jmp
push
test
fadd
retf
mov
pop
fstp
aas
dec
pop
pop
and
xchg
cmp
jne
jp
aam
pop
imul
fidivr
dec
imul
bnd
imul
out
jle
ret
ret
jb
ss
shl
idiv
out
retf
cmp
call
icebp
jns
fidiv
ret
jle
sbb
add
adc
and
das
stc
int
push
call
in
movs
or
div
fist
lahf
cli
retf
pop
push
add
call
inc
xchg
pop
cli
sbb
sub
imul
les
mov
(bad)
sub
xor
xchg
aas
mov
jmp
adc
das
(bad)
mov
push
pmulhw
cmp
add
popa
jle
aam
mov
fmulp
add
jmp
scas
or
cmps
std
or
mov
pop
xor
sti
sub
xor
push
sbb
mov
pop
jge
rcr
mov
lahf
ins
pop
or
xchg
mov
mov
ins
ja
ins
xlat
jl
inc
mov
call
lock
repnz
inc
sahf
jl
mov
sbb
fcom
and
(bad)
sbb
cmp
push
mov
jae
rcr
data16
mov
cmp
or
mov
mov
push
dec
pop
jg
pop
or
jo
jae
xor
cdq
jle
mov
sub
inc
sub
mov
shl
xor
nop
xor
dec
clc
fwait
push
retf
or
test
enter
ins
sub
sbb
ins
in
adc
mov
mov
jbe
sbb
mov
xor
jmp
or
out
mov
push
adc
jl
xchg
or
adc
pop
fmul
imul
sbb
imul
pop
aad
(bad)
pop
mov
dec
aaa
or
jp
xchg
in
mov
test
cld
and
sbb
div
mov
jbe
test
loop
movs
cwde
repnz
add
sub
call
rcl
add
addr16
sahf
aas
shl
(bad)
dec
or
ret
fmul
pop
retf
loop
hlt
icebp
shr
add
jb
mov
ins
cli
xor
mov
inc
rcr
stos
stos
retf
add
je
mov
neg
push
jmp
test
test
xchg
retf
dec
mov
fistp
outs
scas
daa
dec
or
fimul
mov
mov
mov
mov
xchg
or
shl
movs
in
(bad)
cmc
popf
xlat
inc
stos
push
fsub
and
data16
enter
cld
sar
sub
sub
imul
(bad)
cmc
mov
dec
js
sbb
fucomi
shl
jbe
inc
popf
shl
lock
adc
adc
gs
lds
iret
dec
push
sub
inc
aad
cmp
add
pusha
out
dec
inc
aas
mov
mov
addr16
int3
lock
int
sub
aas
aad
inc
sbb
or
test
sar
push
(bad)
pushf
ja
addr16
das
das
pop
hlt
aad
data16
jno
dec
push
cmp
mov
iret
sbb
xor
dec
xor
adc
mov
stc
lods
rol
xchg
push
mov
rol
mov
xchg
mov
test
lods
inc
cmps
les
(bad)
popf
push
sti
(bad)
(bad)
lods
xchg
cmp
mov
rcl
dec
mov
cmp
stos
xor
bound
add
or
dec
movs
test
cmp
(bad)
in
dec
mov
or
push
adc
movs
fcmovnu
int
jl
test
fdiv
push
test
ret
js
mov
cmp
sbb
mov
pop
add
lea
retf
mov
sub
popf
or
sub
hlt
retf
cmp
rcr
test
mov
mov
daa
add
jmp
or
inc
inc
adc
sbb
fisub
leave
cmp
and
imul
or
sub
inc
pop
lds
mov
mov
xor
mov
add
mov
lahf
pop
fistp
scas
test
outs
jge
mov
fistp
call
dec
dec
repz
sub
inc
scas
or
and
jg
(bad)
jmp
mov
dec
lods
push
in
jae
gs
jnp
mov
sbb
(bad)
dec
xor
jp
pop
push
pusha
and
inc
or
mov
add
mov
sub
jae
sbb
mov
mov
inc
push
mov
sbb
push
fdiv
repnz
xor
cmp
mov
inc
fnstcw
dec
push
pop
pop
mov
or
pop
ret
push
adc
rol
(bad)
push
popf
jg
fsub
pop
imul
sub
sar
pop
dec
fdivp
and
mov
out
test
fcomp
inc
bound
adc
mov
mov
mov
cmp
cmp
pcmpeqb
inc
idiv
repz
dec
pop
int
xchg
xchg
test
sti
ins
mov
(bad)
pop
and
xchg
pop
int
pop
and
popa
nop
int
mov
or
sbb
outs
mov
pop
lea
ins
icebp
xor
aaa
xor
sub
cli
bound
sti
loop
imul
ja
xchg
push
repz
add
pop
push
idiv
test
mov
pop
mov
in
imul
ror
sub
iret
test
pop
dec
aam
cmp
(bad)
(bad)
in
les
pop
shr
sar
mov
jns
push
cmp
xor
mov
push
aam
jb
jle
adc
sbb
jnp
pop
sub
inc
push
and
pop
xor
dec
fwait
sbb
sbb
cmp
dec
mov
rol
scas
mov
or
loop
ss
arpl
push
fbld
addr16
out
scas
aas
sbb
cwde
int
vmovaps
sbb
ins
and
jo
and
push
dec
mov
dec
jmp
jecxz
sbb
outs
std
lock
inc
outs
(bad)
out
push
leave
icebp
fs
mov
adc
icebp
jge
push
mov
mov
retf
fadd
(bad)
repnz
adc
jo
jp
cmp
xchg
mov
cmp
sub
cdq
jmp
pop
push
outs
sub
jnp
(bad)
jbe
ret
dec
movs
pop
jl
cmps
leave
adc
jne
stc
not
dec
xchg
outs
fs
test
mov
push
or
pop
movups
repz
inc
test
rcl
xlat
pop
(bad)
xlat
(bad)
ds
sbb
inc
std
pop
and
sbb
test
dec
pop
icebp
retf
pop
mov
mov
jno
push
pop
dec
adc
outs
push
cdq
std
push
cmp
shl
test
fdivp
pop
movs
(bad)
or
mov
ret
mov
mov
pop
cmp
xor
dec
push
and
mov
cmp
clc
dec
push
jle
mov
sar
mov
jb
pushf
sub
push
cmp
cmp
mov
add
(bad)
hlt
mov
mov
inc
sbb
(bad)
adc
add
iret
repnz
sbb
add
push
inc
adc
sub
xchg
(bad)
hlt
cmp
dec
imul
(bad)
fadd
xchg
jne
xor
out
sti
inc
xor
or
jle
cmps
sub
xlat
sub
into
retf
lahf
in
dec
fsub
mov
scas
mov
call
xor
std
push
jne
mov
rol
xor
arpl
ja
call
inc
push
cli
les
sbb
dec
add
pushw
(bad)
mov
dec
sti
jb
imul
dec
push
mov
jns
jb
shl
sub
mov
push
retf
mov
jbe
sar
(bad)
sub
sub
push
adc
mov
not
ss
aaa
(bad)
outs
loop
bound
cmps
xlat
pop
icebp
xchg
scas
inc
cld
push
xchg
ds
xchg
cdq
in
sbb
or
leave
inc
jecxz
push
bound
in
mov
mov
add
or
out
repnz
mov
jne
ja
fst
leave
enter
mov
or
mov
xor
ins
jmp
test
js
pusha
inc
mov
in
aam
mov
add
(bad)
add
retf
sbb
and
inc
arpl
mov
xchg
mov
adc
sbb
fiadd
sub
loop
pop
mov
out
int
add
add
jmp
lahf
addr16
retf
push
and
(bad)
int3
in
stc
pushw
ss
cs
mov
js
inc
in
in
fbstp
cmps
lock
clc
aad
or
dec
ds
xor
cmp
mov
pop
and
dec
rol
mul
pop
mov
mov
daa
add
mov
dec
pop
(bad)
in
test
fidiv
sub
add
cmp
add
jmp
movs
push
(bad)
in
out
dec
cmp
paddw
and
adc
sbb
shr
sar
inc
push
xchg
in
jmp
retf
or
jge
adc
add
or
shl
popf
push
stc
mov
sar
fidiv
mov
bound
jo
out
daa
stos
movs
jne
mov
es
retf
xor
in
sbb
push
jge
cmc
retf
inc
sub
int
sbb
sub
in
and
sbb
cmp
retf
aas
mov
mov
or
cld
outs
repz
fnstsw
dec
rol
pusha
std
jg
jle
push
loopne
jno
int
aas
inc
push
scas
pop
mov
in
out
inc
call
jl
into
nop
test
and
sysenter
out
ret
(bad)
mov
jle
xor
cmc
stc
fcomp
mov
jp
add
xchg
sub
dec
xchg
mov
stos
out
xor
jp
shl
(bad)
fldcw
mov
ucomiss
and
(bad)
push
rcl
popf
mov
in
xlat
pop
adc
test
jnp
outs
xchg
popa
aaa
ja
push
xlat
loop
xlat
sub
dec
add
aaa
lods
mov
push
push
and
fnstenv
mov
(bad)
retf
test
mov
fwait
(bad)
sub
cmp
jmp
icebp
push
push
cwde
ret
(bad)
push
pop
xchg
inc
jne
ret
pop
push
sbb
mov
or
test
xchg
call
fst
jmp
mov
or
bound
sar
push
fs
pop
push
(bad)
push
jae
add
icebp
popf
pop
inc
clc
scas
cmp
(bad)
sub
aad
mov
cmp
mov
ss
mov
mov
inc
mov
test
idiv
adc
ins
ret
gs
outs
mov
add
ins
je
imul
in
dec
and
mov
ja
in
jb
neg
jmp
aas
adc
sbb
in
sub
fcomp
cmp
cld
jb
pop
adc
jle
arpl
mov
mov
jg
cwde
push
xor
jae
sbb
jne
ficomp
xor
xor
pop
fwait
push
sub
(bad)
jmp
sti
push
cs
imul
mov
loop
aam
pop
das
mov
cmp
and
enter
(bad)
les
pop
nop
lahf
push
xor
cs
push
lock
popf
sbb
ds
jge
xchg
push
(bad)
mov
cmps
in
push
mov
mov
(bad)
dec
in
mov
sbb
mov
jno
inc
pusha
xchg
enter
jno
jnp
mov
fwait
mov
(bad)
aad
push
push
jl
lock
xchg
in
mov
loopne
inc
mov
mov
or
fdiv
cmp
push
sbb
hlt
adc
mov
dec
les
pop
adc
jmp
punpcklwd
(bad)
xchg
mov
lock
xchg
mov
fwait
sbb
test
mov
push
loope
jmp
xchg
imul
mov
xor
push
ficom
jbe
sti
xchg
cmp
cdq
repnz
(bad)
not
sub
xor
mov
call
inc
loopne
or
neg
xchg
dec
cs
retf
movs
sub
test
ja
rol
adc
loop
dec
outs
lds
push
or
or
pop
pop
push
mov
xor
wbinvd
jns
enter
outs
cmp
iret
call
cmps
je
out
sbb
pop
push
jg
mov
mov
mov
pop
xchg
xchg
mov
jmp
test
out
add
and
movs
rcl
sbb
iret
loope
test
cwde
and
sbb
and
pop
pop
ret
and
aaa
sbb
int
and
call
call
stos
daa
ins
fwait
nop
in
(bad)
dec
pop
mov
retf
jmp
cmp
fst
fdivrp
shl
sbb
fistp
push
mov
or
les
movs
rcl
adc
dec
movs
neg
les
xchg
and
dec
cs
and
mov
mov
in
pop
loop
out
jl
fisubr
(bad)
aas
mov
inc
xchg
and
mov
cmc
add
hlt
push
mov
addr16
cmp
out
jecxz
in
div
imul
sbb
cmp
xor
sub
movs
pop
icebp
popa
das
sahf
dec
xchg
add
ss
cli
fwait
test
fdiv
mov
jbe
or
dec
rcl
cmp
inc
jl
inc
mov
pop
not
(bad)
and
pop
mov
pop
(bad)
sti
ret
shld
(bad)
sub
iret
push
push
movs
imul
and
ja
mov
out
lock
lahf
pop
add
js
retf
stc
leave
cld
aas
and
pop
jo
xchg
add
lea
sub
mov
shl
outs
shl
enter
cmp
xchg
out
sahf
jnp
gs
sub
pop
inc
sub
leave
inc
xchg
mov
ins
not
clc
add
jne
sub
inc
mov
add
imul
test
jle
add
and
and
jl
xlat
jb
and
mov
xor
push
mov
xchg
bound
test
push
push
lds
movs
pop
inc
and
(bad)
hlt
jae
inc
enter
dec
adc
fnstsw
mov
or
cmc
movs
fwait
sbb
and
dec
out
inc
repz
mov
ins
inc
(bad)
sub
mov
sti
jmp
stos
cmp
xchg
imul
mov
or
push
add
adc
dec
ja
or
cwde
iret
mov
sti
push
sbb
xchg
lds
add
add
jns
xlat
sub
add
dec
out
inc
cmp
pop
dec
add
pushf
push
mov
mov
cmp
aaa
mov
jecxz
addr16
mov
jno
add
dec
(bad)
std
(bad)
aas
mov
test
inc
adc
xchg
out
pusha
fs
pop
ret
sub
push
xlat
ss
pushw
sub
fstp
test
ss
icebp
adc
outs
push
sub
jb
jo
jno
push
cmp
jnp
out
fimul
mov
pop
push
mov
into
cmp
mov
and
cmc
and
pop
jno
pop
ret
jno
pop
and
repnz
test
es
popf
dec
ins
cwde
mov
push
cmp
push
data16
test
jns
aas
addr16
adc
(bad)
ins
cmps
imul
pop
retf
add
sub
pop
adc
out
outs
pop
xlat
inc
nop
outs
adc
pop
and
inc
out
(bad)
bound
mov
mov
jmp
add
inc
dec
test
xchg
lds
arpl
clc
adc
scas
add
dec
push
fadd
dec
adc
dec
shr
inc
add
test
push
pop
das
inc
xor
call
arpl
je
cwde
xchg
js
loope
push
mov
fadd
push
push
aam
mov
add
popa
jmp
aad
hlt
or
mov
mov
cs
(bad)
out
int3
xor
or
and
sub
adc
dec
xchg
rcl
mov
cmp
adc
pop
shr
jecxz
adc
cs
push
jmp
movs
icebp
arpl
jmp
popf
ret
cmp
repz
sbb
mov
or
retf
retf
mov
retf
mov
sar
cmps
(bad)
or
scas
and
dec
push
xchg
inc
(bad)
cmps
inc
je
push
leave
dec
test
inc
xchg
(bad)
and
mov
int3
jno
jne
aad
add
outs
adc
bnd
gs
and
mov
xchg
stos
sahf
shl
inc
add
loopne
retf
jmp
and
les
sbb
add
jmp
(bad)
iret
xchg
jmp
into
mov
and
aam
outs
ins
outs
sub
mov
mov
pop
mov
and
fsub
mov
(bad)
pop
push
jg
fstp
repz
mov
push
push
stos
fwait
movntq
jg
fcom
in
div
add
enter
add
jb
inc
ret
mov
ss
call
inc
std
test
pop
xchg
mov
mov
ja
jl
mov
mov
loop
jp
addr16
ret
lock
inc
and
das
adc
jmp
mov
mov
movs
fisub
push
sbb
cmp
add
int3
and
inc
cdq
pop
xor
mov
push
xchg
dec
fld
cmps
data16
movs
int
fadd
in
popa
adc
mov
adc
das
dec
fld
ins
sti
mov
jmp
sbb
xor
sub
cmp
and
xlat
push
pop
xor
sahf
cmp
gs
or
xor
inc
xor
ja
xlat
ja
mov
xor
xchg
repnz
xchg
in
ja
mov
sub
shr
mov
fbld
rol
mov
mov
push
out
xor
xor
stos
or
xor
add
shr
or
hlt
les
mov
push
add
(bad)
jns
mov
pop
pusha
jns
mov
and
int3
bound
add
add
js
push
loopne
jae
(bad)
mov
jmp
or
xor
pusha
mov
daa
sbb
cmp
jge
add
popf
mov
(bad)
mov
pop
inc
xchg
cli
or
fcom
jl
ret
pop
lds
loop
dec
sbb
mov
cmp
adc
push
test
fnstcw
stos
inc
clc
pop
and
call
inc
mov
mov
aam
fld
enter
scas
outs
xor
mov
pop
jo
mov
add
popf
shr
and
sub
aam
inc
cdq
xchg
(bad)
xchg
cwde
pop
dec
pop
aam
mov
pop
mov
xchg
inc
stos
cmp
xchg
lock
and
fcmovb
mov
out
xlat
sbb
fsubr
cmp
(bad)
jmp
sub
call
aas
lods
pop
or
adc
xor
inc
inc
jbe
mov
loope
jmp
pop
and
inc
pusha
xchg
ret
jmp
and
outs
jecxz
or
test
mov
cld
xor
push
pop
jl
leave
fimul
or
or
lds
loopne
aaa
stos
mov
fidiv
jmp
or
sar
leave
jl
repz
out
fld
push
into
imul
sbb
mov
jmp
movs
inc
xchg
dec
fwait
mov
stos
mov
ins
arpl
mov
sub
fsubrp
scas
shl
xchg
xor
jg
cmp
jmp
aad
outs
xchg
add
mov
and
xor
dec
mov
mov
add
xchg
fnsave
xchg
xchg
xchg
pop
cmps
ret
mov
pop
movs
sub
push
jns
mov
lods
outs
pushf
pop
cmp
stc
arpl
retf
fdiv
pop
rcr
or
inc
and
test
sar
jl
cmp
xor
ins
mov
mov
pushf
inc
aam
addr16
fs
pushf
or
aaa
std
fist
inc
retf
jp
fnstsw
(bad)
dec
dec
mov
jmp
cmp
lahf
(bad)
enter
mov
add
jmp
loopne
or
iret
cmp
shl
outs
inc
dec
js
cmc
pop
cs
and
repz
add
inc
adc
sub
xchg
das
sub
je
and
add
lea
jmp
sbb
push
xchg
int
cwde
cli
fidivr
sbb
jmp
adc
fcmovnbe
sub
(bad)
xlat
inc
jecxz
out
fcomp
stos
ins
add
jecxz
arpl
or
test
mov
sub
inc
aam
xchg
add
pushf
mov
and
jae
fild
add
repnz
xor
inc
fisubr
repz
movs
pushf
jecxz
push
cmps
jae
push
or
js
cs
loopne
jmp
fucomi
xor
push
adc
mov
xchg
popa
cwde
xor
std
and
ror
ret
sub
add
mov
mov
jmp
and
mov
ja
jmp
mov
lea
lock
aam
push
mov
xchg
pusha
add
jbe
dec
xor
fcomip
das
sar
xor
jge
inc
sahf
dec
mov
retf
xchg
sbb
sbb
or
push
stos
adc
fisub
retf
cmp
and
rcr
ret
push
(bad)
xor
mov
mov
xor
jle
mov
mov
loopne
cmp
scas
push
push
xchg
fst
fwait
sti
add
std
dec
mov
mov
xchg
sbb
xor
fld
cdq
(bad)
aam
cmc
inc
mov
daa
adc
stos
add
fidivr
into
stos
ss
jae
xchg
int3
inc
inc
pop
imul
out
push
clc
mov
jge
aam
rcl
push
mov
outs
imul
movs
push
xchg
popf
add
sbb
fimul
push
cmp
sbb
or
jne
inc
jmp
ins
jmp
mov
mov
bound
lahf
cmps
mov
mov
or
gs
sub
lahf
ror
cmp
sub
pop
icebp
or
jp
aas
adc
dec
sub
dec
mov
xor
mov
sub
and
mov
mov
in
test
shr
add
stos
fistp
cdq
leave
jl
push
xchg
push
dec
pusha
add
add
inc
shl
mov
inc
xor
out
out
push
or
call
cld
mov
mov
sub
jg
push
jbe
dec
jp
popf
iret
dec
rol
mov
scas
mov
nop
xacquire
pop
shl
iret
aad
adc
pop
inc
and
and
daa
mov
loopne
adc
mov
cmp
jge
xchg
gs
add
xchg
mov
clc
inc
push
popf
ss
mov
dec
pop
mov
lods
sub
pop
in
movs
pop
mov
jae
clc
popa
jne
xchg
push
ss
and
into
fwait
lods
test
(bad)
and
push
adc
fcom
lods
sbb
mov
scas
aaa
iret
jl
or
dec
inc
dec
dec
dec
and
int
popa
std
fbstp
mov
push
das
jmp
sbb
mov
ret
cmps
sub
bound
mov
mov
movs
dec
sbb
repz
repz
stos
push
cmp
xor
and
imul
mov
int3
lea
out
fcom
ret
inc
rol
ffree
pop
xor
repnz
add
pusha
mov
mov
mov
ins
enter
cs
jnp
inc
sub
repnz
and
bound
test
sub
push
xor
xor
out
add
fwait
out
sub
or
pop
leave
sbb
sbb
call
sub
outs
xchg
mov
loope
and
and
ret
sbb
bswap
mov
mov
adc
clc
leave
mov
mov
rol
inc
sahf
addr16
or
(bad)
mov
cmp
cmps
push
and
xchg
sbb
fisttp
movs
neg
(bad)
ror
xor
cmp
popa
nop
sub
xchg
adc
aad
cmp
xor
jmp
push
pop
leave
rcl
jbe
cmp
cmp
push
(bad)
pop
adc
mov
pop
adc
or
inc
pop
jns
xchg
sbb
jmp
ja
test
rcl
jno
shr
enter
arpl
and
dec
inc
jp
div
or
icebp
xchg
fimul
call
stos
pop
out
mov
jno
int
xchg
fstp
mov
cwde
ret
xor
add
sbb
jmp
(bad)
iret
mov
cmp
jbe
mov
jg
add
mov
jb
sub
sar
int
sbb
inc
and
push
rol
push
(bad)
fwait
jecxz
lds
inc
daa
lods
sub
(bad)
je
mov
test
push
outs
pop
call
adc
fadd
enter
sbb
dec
jge
mov
dec
loop
adc
aas
lahf
inc
test
jmp
sbb
jae
mov
cmp
gs
mov
mov
mov
inc
jg
iret
rol
or
mov
jmp
and
enter
mov
repz
dec
push
fnsave
popf
lock
push
push
adc
aas
pop
sbb
adc
ja
rcr
sar
lock
adc
dec
add
mov
iret
pop
add
add
cmp
jmp
gs
mov
xor
sbb
je
hlt
mov
mov
fsub
mov
retf
adc
pop
aas
jmp
inc
mov
cdq
ja
ficomp
sub
xlat
xchg
xor
addr16
les
stos
pop
jnp
loope
mov
or
data16
in
imul
dec
or
or
xchg
(bad)
(bad)
iret
jecxz
sti
dec
jl
popf
mov
dec
add
shl
and
aaa
ds
mov
jp
or
ror
push
fidivr
int
push
out
and
xor
adc
dec
rcl
ror
dec
pop
lods
lds
bound
stos
pop
lds
cdq
unpckhps
push
xchg
sbb
mov
add
mov
(bad)
test
xchg
cmp
pop
add
push
pop
and
das
mov
out
out
jne
popa
jb
in
push
xchg
jns
(bad)
setg
jns
jae
cdq
push
je
imul
dec
or
dec
fcmovnb
mov
xchg
jl
jecxz
retf
push
adc
test
cmp
retf
cs
stos
retf
test
mov
add
cmp
out
xchg
test
cmps
dec
dec
mov
pop
int
cmps
inc
(bad)
push
pop
pop
cdq
(bad)
pop
add
cmp
ins
in
mov
enter
fcomp
push
leave
sti
test
sti
mov
cmp
das
sbb
xchg
(bad)
mov
sbb
aad
div
push
cs
xchg
fs
push
and
out
adc
arpl
push
xchg
add
shl
mov
mov
mov
fldenv
cmp
ss
mov
push
in
add
into
icebp
rcr
pusha
outs
mov
adc
(bad)
xlat
add
mov
mov
add
cwde
dec
scas
out
dec
jmp
nop
xor
outs
imul
sti
je
ds
xor
or
dec
push
mov
les
aas
in
push
xchg
cmp
push
sbb
cmp
lahf
sub
mov
scas
cdq
dec
lods
in
xchg
test
push
dec
and
hlt
jb
stc
cli
loopne
push
rcr
mov
stc
dec
rcr
cld
ss
dec
inc
mov
out
std
(bad)
cli
mov
(bad)
xor
ror
push
jle
(bad)
xor
arpl
mov
or
cwde
jg
iret
sti
push
out
inc
dec
add
les
xchg
sbb
sbb
js
movs
cmc
jge
sbb
jo
inc
push
std
or
xor
popf
jmp
sbb
xchg
mov
jmp
test
sahf
add
movs
add
cmp
xchg
jge
mov
lods
inc
outs
fs
mov
retf
inc
adc
and
fs
jno
retf
inc
clc
les
jge
iret
mov
lods
es
sbb
fdiv
pop
pushf
dec
cwde
jp
pop
mov
retf
dec
loope
outs
jg
adc
not
arpl
xlat
lods
mov
out
add
push
xchg
scas
fwait
pop
mov
sub
mov
in
aad
cld
lea
mov
(bad)
pop
aaa
pop
xchg
or
dec
mov
jnp
jmp
pop
addr16
ret
push
pusha
xor
pop
sbb
movs
sahf
cdq
daa
fsubr
pop
xor
js
ds
mov
jb
mov
dec
mov
test
es
cmps
outs
dec
and
(bad)
mov
ds
sbb
push
or
jbe
cmp
add
dec
sar
pushf
retf
mov
jmp
mov
adc
add
xchg
mov
add
xchg
ja
and
sub
jo
imul
cli
xchg
out
mov
test
loopne
aad
inc
jp
test
inc
and
xchg
dec
push
adc
mov
aas
xor
cmp
or
push
in
mov
xor
inc
lea
push
sub
push
pushf
sbb
call
inc
mov
lock
mov
sub
icebp
cmps
sti
std
adc
mov
js
pop
sub
mov
jne
jmp
test
cs
push
jo
dec
jno
pop
or
mov
push
ror
iret
enter
jl
jmp
add
add
push
jno
push
push
out
aam
movs
je
jmp
(bad)
ins
inc
mov
mov
rcr
and
adc
adc
mov
sbb
daa
(bad)
je
xchg
adc
daa
dec
adc
inc
add
fsqrt
in
mov
out
cwde
mov
aad
sbb
retf
dec
mov
test
cwde
rcr
test
dec
test
test
mov
ficomp
add
data16
out
mov
pop
out
shrd
addr16
mov
(bad)
mov
stc
test
enter
jecxz
jno
pop
rcl
sub
sbb
pusha
dec
xlat
dec
inc
leave
idiv
es
mov
xchg
jb
inc
xchg
(bad)
data16
shl
out
sub
loop
or
jge
(bad)
fnstcw
cmp
xchg
lds
mov
inc
lds
int
adc
or
push
dec
xchg
mov
scas
dec
aad
jns
test
lea
lahf
test
lods
fwait
push
scas
out
add
cmp
jns
movs
shl
imul
mov
fwait
push
sub
sti
ss
add
loopne
(bad)
xor
and
arpl
or
mov
aam
jle
dec
or
out
fdivr
sub
pop
mov
mov
xlat
sub
sbb
cmp
gs
or
xor
mov
mov
(bad)
cmp
xlat
jno
(bad)
(bad)
pop
pop
mov
into
out
adc
ret
cmp
jp
stc
jbe
cwde
fs
or
xchg
xchg
or
pop
mov
xor
inc
retf
sbb
and
push
fsub
shr
push
mov
ins
in
add
loope
in
repz
jbe
and
jge
call
xchg
sub
dec
mov
rcr
add
(bad)
repnz
test
jo
and
add
inc
movs
and
add
inc
stos
mov
enter
cmp
dec
lea
xchg
jecxz
lods
cs
repnz
repz
mov
pop
inc
aad
sahf
jae
imul
mov
push
and
pushf
ins
and
adc
push
cmp
ins
clc
inc
sub
je
sub
sbb
fild
xchg
jb
ja
sti
fsub
xchg
dec
mov
lock
arpl
popa
inc
mov
push
and
clc
mov
sub
pusha
sbb
(bad)
out
mov
stos
add
add
xor
repz
push
shl
out
inc
jge
in
(bad)
mov
pop
adc
lock
or
retf
adc
adc
movs
enter
icebp
mov
adc
pop
movs
adc
js
mov
fsub
jg
out
or
mov
fcomp
dec
lock
push
or
mov
sub
sbb
mov
dec
fist
and
fs
cmovno
stos
mov
fadd
fwait
sub
mov
push
inc
xlat
enter
repnz
adc
in
bound
push
cmp
out
jmp
aaa
mov
out
out
inc
pop
xor
in
mov
call
pop
movs
scas
and
sbb
movs
mov
gs
jecxz
or
push
cs
dec
mov
sub
cmp
scas
call
outs
inc
hlt
fisubr
mov
rol
mov
lea
ss
dec
loop
cli
lods
(bad)
ins
(bad)
fld
and
sub
in
rol
dec
xchg
push
cs
outs
sbb
cmp
fidivr
ja
test
mov
jno
test
jno
sub
loop
scas
scas
stos
test
fcomp
adc
push
and
mov
sub
fsub
jg
mov
xchg
icebp
xor
or
push
cmp
pop
cli
push
nop
dec
out
retf
and
shl
pop
mov
sbb
repz
push
movs
pop
adc
sub
arpl
xor
push
cmp
push
mov
cmp
cmc
add
jge
sub
push
mov
std
test
cmp
fisub
jecxz
mov
jmp
dec
jg
mul
in
rcr
add
loope
pop
jbe
test
sub
push
jbe
rcl
cmp
jae
imul
xor
adc
cmps
idiv
fsub
ret
sahf
jl
sti
push
jno
xor
add
fisttp
jns
adc
loopne
mov
mov
outs
push
jns
ror
test
stos
es
sbb
pop
stos
in
jno
stos
stos
jb
and
mov
jecxz
(bad)
js
repz
xchg
out
cld
mov
mul
xor
ret
mov
aaa
out
mov
dec
js
lea
dec
fdivr
mov
pop
mov
scas
aad
add
push
mov
or
test
xor
jl
loop
push
int3
mov
xchg
movs
sbb
(bad)
xchg
inc
sub
jle
in
pop
retf
xchg
mov
loope
retf
xchg
cmp
and
xchg
(bad)
fmulp
pop
leave
cmp
enter
mov
cdq
xchg
loopne
cs
lds
std
jmp
jo
xchg
imul
jns
pop
ror
outs
pop
ss
add
xor
jbe
mov
loope
scas
out
or
aas
or
push
sbb
sub
pop
cli
in
cmp
mov
jbe
fbstp
mov
(bad)
adc
inc
push
or
retf
stos
mov
jecxz
in
cmp
pop
mov
xchg
loop
xor
arpl
and
push
jmp
ret
adc
ficom
enter
test
lahf
movs
sub
mov
mul
mov
jge
push
lods
or
push
push
or
fidiv
bound
test
jns
and
sub
call
xor
int3
cmp
(bad)
loop
ret
pop
pop
mov
pop
mov
jne
test
cmps
dec
dec
inc
push
ins
sti
cmp
je
fistp
int3
mov
mov
cmp
or
rol
mov
xchg
sub
xor
cmp
or
retf
(bad)
mov
adc
cmps
jecxz
stc
or
lds
repnz
xchg
mov
pop
sbb
or
into
xchg
je
(bad)
(bad)
dec
xchg
xchg
push
mov
dec
data16
call
inc
nop
outs
hlt
and
movs
mov
or
inc
pop
and
cmps
ja
(bad)
xchg
or
pop
mov
in
jge
pop
adc
ins
(bad)
call
and
pusha
adc
retf
mov
xchg
xchg
pop
sbb
(bad)
jbe
jb
out
loop
lock
ficom
mov
mov
pop
(bad)
loop
in
call
stos
xor
and
xchg
ins
mov
int3
jg
stos
daa
cs
push
inc
mov
mov
pusha
out
and
dec
not
or
cmp
mov
or
xchg
xchg
das
mov
cmps
xchg
push
scas
xor
shl
sub
outs
out
xor
cmps
mov
lods
out
fsub
les
adc
dec
inc
pop
je
and
inc
push
xchg
lock
xchg
(bad)
retf
mov
mov
in
dec
ss
sbb
in
pusha
inc
sahf
repnz
mov
or
pop
call
sbb
xchg
jne
pushf
mov
jmp
mov
mov
xchg
jecxz
ja
push
sub
rcl
fdiv
cdq
and
inc
stos
pop
ins
(bad)
add
lock
push
xor
leave
cmps
and
sbb
arpl
addr16
int
hlt
cli
repnz
sbb
jbe
not
jg
mov
adc
xor
pusha
gs
popa
push
call
add
inc
inc
cmp
inc
xchg
dec
dec
out
mov
mov
push
inc
mov
int3
and
xor
adc
add
je
iret
jmp
adc
jp
repnz
popf
or
xor
jno
pcmpeqb
or
dec
or
imul
jmp
ins
es
outs
sub
mov
div
test
mov
cmp
lods
js
popa
push
stc
xchg
retf
out
pop
add
or
cmp
lock
aaa
pop
xchg
add
fsub
cmp
pop
idiv
fstp
ds
das
shl
adc
(bad)
jg
(bad)
sub
mov
jo
idiv
lods
sub
sbb
jl
popa
mov
mov
mov
leave
pop
es
ins
aam
xor
cld
fbstp
sbb
out
xor
xchg
jnp
aad
ror
stos
push
pop
imul
sbb
and
dec
xchg
pop
jl
add
mov
cmc
dec
pushf
test
sbb
cs
fild
fimul
adc
mov
add
pop
xor
and
adc
jo
jbe
push
mov
pop
mov
retf
jbe
lods
jl
test
jae
jp
imul
add
fstp
sbb
inc
clc
jmp
pop
mov
fist
inc
out
lods
cmp
inc
inc
mov
sar
inc
jo
fidiv
jp
inc
sub
lock
fiadd
add
xor
(bad)
pusha
xchg
sahf
cmp
add
stos
push
sar
enter
rcl
pop
pop
mov
ja
add
pop
and
mov
daa
cmp
js
lock
jae
enter
loopne
cli
aaa
and
xchg
ins
mov
mov
pop
adc
mov
adc
je
imul
sub
and
sahf
jecxz
jbe
mov
push
push
dec
aad
mov
add
cmp
mov
xchg
cmps
ins
mov
push
push
scas
xchg
adc
mov
mov
ins
sbb
push
jle
jp
cmps
mov
mov
mov
aas
call
je
fild
cmp
mov
or
mov
mov
or
push
shl
cmp
xor
cwde
iret
or
mov
aam
cmc
and
or
xchg
call
sahf
sbb
shr
adc
sub
iret
jle
movs
addr16
rcr
das
cs
and
cmp
fist
std
xor
int3
push
pusha
sub
shl
pop
loopne
mov
addr16
jmp
inc
jmp
sbb
push
ins
cmc
loop
cmc
out
or
loop
or
xchg
and
sbb
inc
lods
ins
jp
into
jns
popa
mov
mov
jne
add
stos
mov
scas
shl
pop
fisttp
std
ror
stc
(bad)
into
sti
and
push
jp
sbb
sbb
ins
mov
gs
lods
movs
xchg
add
pop
and
sbb
pop
jbe
into
cs
mov
xor
adc
in
inc
sbb
cmp
aaa
inc
cwde
aaa
cmp
jnp
std
mov
add
cld
or
xor
scas
ret
(bad)
mov
movs
repz
xchg
push
dec
int3
ins
push
xor
sub
(bad)
jg
xor
test
test
add
cmp
xchg
add
jns
push
cmp
mov
lods
pusha
cmp
cmp
ins
inc
fstp
cs
and
test
test
cdq
scas
push
jecxz
shl
mov
imul
add
std
push
(bad)
sub
cmps
jae
fs
dec
fsub
iret
repz
jmp
jmp
sbb
out
mov
ja
fldcw
mov
push
(bad)
adc
test
pop
icebp
push
out
mov
pop
aas
pop
pusha
pushf
sub
retf
inc
dec
push
aad
sub
ret
dec
retf
retf
jb
ins
push
mov
push
mov
fist
cld
ficomp
frstor
mov
icebp
mov
jmp
sbb
dec
jmp
out
jne
xor
mov
push
mov
jne
scas
sbb
imul
cmc
int3
push
or
mov
leave
daa
pushf
les
xor
imul
inc
jae
inc
test
std
sbb
mov
ror
lahf
jo
call
sub
ret
push
sti
and
(bad)
cmps
vcvtsi2ss
mov
and
and
add
jne
loop
pop
adc
xor
(bad)
aam
cmp
pop
pop
loope
jl
dec
frndint
cli
or
icebp
dec
cld
pusha
mov
jno
fnstsw
jbe
add
jp
push
adc
sbb
loop
pop
jb
cli
nop
mov
jne
inc
xchg
sar
push
mov
arpl
leave
cmp
(bad)
imul
adc
gs
call
into
inc
jp
add
push
pop
(bad)
neg
adc
mov
sub
aas
stos
jp
(bad)
test
jl
xchg
sbb
test
in
inc
imul
dec
sbb
(bad)
arpl
(bad)
jecxz
cmc
pop
sbb
xor
call
mov
aas
push
repnz
push
pop
push
inc
sbb
pop
xor
mov
push
jmp
sub
fsub
fnsave
xchg
and
adc
rol
mov
mov
xchg
repnz
fld
call
stos
test
cmp
pushf
fldcw
sub
sbb
sbb
retf
mov
push
dec
imul
xchg
stos
or
xor
mov
std
pop
adc
lea
(bad)
test
pop
fsubr
ss
cmp
or
cmp
fidivr
mov
add
sbb
pop
mov
dec
iret
mov
sbb
lea
call
pop
or
dec
iret
cmps
sbb
imul
and
popa
adc
je
pop
mov
fwait
push
loop
inc
cli
cdq
xor
mov
ds
cmp
mov
mov
dec
add
xchg
imul
jmp
sub
cmp
dec
loope
scas
xor
in
cmps
adc
fnstcw
jbe
jnp
dec
scas
out
pop
call
dec
inc
repnz
cmps
scas
lods
shl
mov
mov
inc
leave
por
push
jle
sub
mov
movs
inc
jbe
add
ret
jmp
sbb
fdiv
idiv
mov
xchg
mov
test
loop
cmps
push
(bad)
jnp
lods
mov
ja
adc
sub
push
sub
jno
mov
pusha
add
lea
test
shr
pop
push
std
mov
dec
pop
cli
pop
mov
loopne
pop
inc
xor
pop
scas
fcom
inc
xor
sbb
(bad)
and
or
(bad)
jmp
dec
mov
rep
cdq
cmp
mov
mov
fsubr
inc
cmps
clc
sbb
(bad)
push
enter
fadd
test
mov
adc
ins
mov
fwait
cwde
test
add
lahf
adc
mov
clc
aad
inc
cmp
mov
std
sub
mov
outs
pop
xchg
out
addr16
les
lock
add
pop
adc
rcr
das
jne
mov
pop
add
push
shl
add
es
mov
addr16
cmps
xchg
jo
lock
adc
push
adc
mov
(bad)
imul
sub
inc
jg
mov
xchg
fnsave
dec
sahf
xor
rcr
dec
pushf
retf
mov
mov
sbb
push
jo
fld
cmp
and
neg
(bad)
(bad)
std
xor
test
loop
jns
test
fisubr
jg
mov
into
test
jae
push
xchg
inc
dec
pop
fnstenv
cmp
ja
das
movzx
ret
ret
cmp
pop
jnp
jmp
xchg
(bad)
das
dec
push
mov
fadd
es
cld
pop
mov
in
sub
push
or
mov
call
stos
dec
cmp
jmp
sub
sub
jp
(bad)
cld
test
xchg
sub
out
and
mov
cdq
sbb
or
popa
mov
fld
add
dec
xchg
in
inc
or
into
mov
inc
ret
sbb
mov
loop
xor
pop
fstp
ret
xor
mov
out
scas
pop
nop
mov
stos
jmp
sub
je
push
jmp
dec
dec
out
push
test
cli
(bad)
shr
enter
pop
jg
leave
stos
call
repz
jp
iret
icebp
cli
and
fist
xchg
call
mov
push
test
(bad)
dec
inc
in
call
inc
daa
pop
mov
cmp
mov
ror
mov
and
mov
cmp
fmul
or
jb
ds
in
or
imul
xor
fsubrp
dec
add
push
xchg
ins
jae
test
jg
outs
mov
addr16
jne
cdq
dec
je
push
imul
fmul
dec
lsl
or
jbe
sub
mov
ss
xor
inc
fbld
scas
mov
(bad)
mov
leave
jp
clc
fadd
test
sub
sbb
out
sbb
sbb
gs
jecxz
mov
int3
jmp
pop
cmps
dec
repz
mov
add
push
and
xor
test
sbb
sbb
mov
loopne
movs
(bad)
rcr
or
test
call
cmps
aam
sti
into
retf
mov
ss
jo
fmul
rol
sti
jne
shl
add
adc
icebp
pop
xchg
sahf
adc
lea
jecxz
add
mov
cli
lods
int
gs
mov
aas
dec
ret
sbb
fwait
in
scas
jmp
lods
jb
ror
ja
push
mov
pop
outs
xor
test
(bad)
mov
sbb
sbb
fild
stc
pop
rcr
xor
ror
push
xchg
add
add
imul
cmp
inc
cmp
fs
pushf
mov
fdiv
call
(bad)
mov
(bad)
in
add
pop
mov
sbb
lds
xor
into
iret
(bad)
pusha
sub
and
xor
xchg
popa
popa
mov
scas
iret
ins
mov
enter
(bad)
sbb
add
ds
xchg
aas
fwait
mov
push
inc
jp
loope
xchg
jmp
jb
mov
ja
fstp
adc
pushf
lock
add
sbb
mov
mov
jmp
popf
movs
add
popf
and
add
movs
jo
mov
cmp
stos
adc
add
mov
fldcw
dec
lds
daa
retf
push
lods
jl
les
and
lods
or
(bad)
mov
adc
stos
cli
sub
addr16
sbb
inc
cmp
and
push
inc
and
xor
aaa
dec
and
jle
cmp
mov
mov
cmp
add
mov
push
add
call
aas
lods
jns
fidivr
test
mov
sbb
int
(bad)
fwait
les
jmp
jg
mov
test
pop
popa
ins
popw
cmp
std
(bad)
movs
mov
push
dec
dec
mov
mov
pmaxub
cld
xor
in
push
sahf
pop
stos
push
int3
out
mov
pop
js
or
add
xchg
xlat
pop
push
inc
fcomp
and
loop
sub
sub
jl
iret
icebp
jbe
push
and
jge
pcmpgtw
mov
int3
stos
jl
sub
fdivr
xor
inc
jo
add
test
push
sub
aas
fisttp
pushf
fild
jge
jns
mov
(bad)
popa
retf
jne
sub
push
stos
push
in
and
test
cdq
lahf
movs
leave
inc
and
or
retf
leave
loope
dec
or
or
jno
mov
dec
add
mov
outs
mov
movs
inc
pop
add
and
cmp
sbb
mov
int3
sbb
mov
jno
shl
mov
stc
call
ror
repz
xor
xor
repz
test
cmc
aad
sub
adc
add
out
lds
mov
adc
sbb
dec
into
outs
arpl
xor
inc
ins
outs
push
ins
aam
jg
movs
aas
stos
cld
ja
adc
icebp
sub
inc
into
push
sbb
xor
mov
add
sub
stos
mov
popf
aaa
dec
xchg
(bad)
nop
gs
xchg
cmp
call
(bad)
xchg
adc
mov
mov
push
jbe
jmp
or
mov
xchg
out
(bad)
and
jne
xor
dec
pop
mov
adc
push
into
mov
jg
cmps
pushf
push
retf
out
dec
aas
mov
clc
xchg
jle
lods
and
mov
stos
xchg
xor
xchg
cmp
shrd
sbb
retf
add
add
pop
and
xor
scas
int3
fcmovnbe
push
mov
push
cmp
add
loope
retf
ficomp
ins
inc
mov
int
adc
mov
or
test
scas
xor
imul
xor
lods
cmps
inc
mov
adc
shl
sbb
shl
gs
cmps
pop
aad
inc
fistp
movups
mov
mov
gs
fist
mov
sbb
outs
in
mov
(bad)
in
data16
cmps
aaa
and
push
fwait
push
data16
cmp
in
push
stc
push
aam
test
stc
or
sti
and
push
not
test
loopne
in
xor
push
cmps
xchg
mov
popf
push
sysret
outs
mov
pusha
pop
data16
cld
push
(bad)
adc
loope
cmc
retf
fidivr
aam
jns
sbb
(bad)
sub
lahf
repnz
popa
pop
pop
loop
bound
(bad)
out
jle
pop
cmp
xlat
in
push
lods
cli
movs
and
lods
push
pop
mov
jns
lahf
cmp
in
or
sbb
sti
sbb
and
inc
lea
add
push
scas
pusha
push
xchg
fstp
mov
xor
adc
lea
test
add
and
fild
fstp
pusha
nop
push
push
loop
jno
ret
sbb
mov
mul
leave
or
fist
enter
fs
mov
push
mov
in
push
adc
sbb
js
push
xor
add
pop
fdivr
mul
dec
ret
rcl
out
pop
pop
jbe
call
loop
sub
sbb
rol
mov
lahf
sbb
adc
imul
hlt
inc
add
pop
loope
sar
test
fisubr
sbb
pop
sbb
or
test
sbb
jo
add
or
stos
sahf
push
into
stc
dec
or
inc
jb
or
add
aad
pop
mov
xchg
hlt
sbb
pop
dec
dec
adc
dec
rcr
fsubr
sbb
aam
rol
xchg
adc
pop
xor
popf
(bad)
retf
and
lock
jns
and
jg
enter
sbb
sub
cmp
lock
dec
pop
cmp
add
out
xchg
dec
imul
cmps
les
out
es
call
xchg
sbb
sbb
mov
push
push
and
lods
jmp
push
mov
and
push
jno
mov
mov
jns
sti
and
jnp
add
dec
scas
sub
and
adc
lods
adc
mov
mov
pop
or
retf
sbb
pop
fneni(8087
xchg
fcmovu
inc
jl
fwait
retf
in
fwait
aam
add
pop
push
cmps
and
and
and
inc
sar
push
cmps
fsubr
cmp
stc
repz
mov
fadd
rol
cmp
cld
stc
data16
or
push
pusha
pop
shrd
xor
es
and
sub
inc
test
ficomp
jecxz
movs
ficomp
imul
push
sbb
out
fcmovnbe
mov
rcr
push
pop
mov
shr
push
shl
sub
adc
push
inc
jns
mov
(bad)
push
jg
sub
cli
dec
mov
mov
pop
xor
pop
outs
pop
es
cmps
inc
adc
mov
leave
sbb
add
aam
pop
dec
inc
outs
ror
xchg
inc
jns
lahf
pop
rep
inc
aaa
imul
sbb
adc
out
jecxz
adc
mov
lods
enter
xor
push
stos
popf
in
test
xlat
out
mov
mov
dec
jmp
mov
jge
sbb
adc
mov
inc
bound
sub
movs
dec
dec
mov
and
ins
test
sub
ins
hlt
cld
xchg
mov
js
jno
and
mov
icebp
sub
push
out
pushf
add
xor
jecxz
push
pop
adc
push
jmp
xchg
adc
iret
dec
inc
mov
sub
push
jg
shl
jnp
adc
sbb
and
pop
inc
(bad)
out
jge
push
xchg
popf
in
cld
repz
out
adc
sbb
mov
push
sbb
scas
jge
outs
jmp
sti
idiv
arpl
add
stc
(bad)
jb
stc
and
sar
xchg
xchg
sub
ins
jno
add
lods
in
add
jl
dec
cmp
pushf
stc
pop
jle
push
call
ret
mov
int
pop
pop
ror
xchg
push
push
cmp
shl
dec
jg
or
sub
xor
pop
xchg
mov
ins
dec
imul
dec
mov
retf
jmp
cs
std
sahf
test
add
repnz
and
fld
mov
sub
scas
xor
mov
xor
pop
cmp
and
sub
clc
lods
pusha
add
ins
int
mov
into
stos
jmp
loop
aas
xor
sub
adc
sub
or
pop
dec
pop
xor
popf
adc
cs
mov
add
and
bound
imul
inc
sahf
mov
daa
pop
ret
enter
mov
loope
xor
scas
mov
mov
adc
js
popa
add
dec
cmc
fcomp
lahf
mov
int3
gs
mov
push
outs
sub
daa
movs
call
rcl
mov
adc
cmp
es
call
lea
shl
cmp
jbe
jmp
fimul
or
fnsave
nop
or
pop
aad
add
imul
xchg
mov
cmps
and
nop
push
push
in
add
push
(bad)
jno
mov
inc
test
mov
add
sbb
cmp
movs
jae
cwde
or
shr
sti
mov
xchg
scas
push
push
xchg
popa
jmp
cmp
ds
and
xor
dec
mov
aam
mov
in
stos
adc
cmp
ins
jb
cmp
clc
xor
push
iret
adc
(bad)
enter
dec
pop
sbb
add
xor
aas
cmp
iret
sub
lea
adc
push
jl
jne
and
stos
outs
add
mov
sub
(bad)
sub
push
xor
in
fidivr
je
popa
lock
das
rcl
cmp
mov
stos
int
mov
sbb
push
int3
adc
ror
and
vpackssdw
sti
(bad)
jecxz
mov
pushf
add
cs
fisubr
mov
xor
sbb
xchg
sbb
fild
mov
into
push
xor
push
cmps
sbb
test
sub
test
ficomp
mov
shr
out
pop
mov
(bad)
imul
lods
pop
add
cmp
adc
push
cmp
jmp
dec
cmp
xchg
push
push
icebp
into
jmp
mov
out
bound
mov
jl
and
mov
aad
sar
push
cdq
xor
enter
scas
(bad)
shr
fdivr
add
scas
xchg
hlt
mov
cmp
scas
out
cmp
push
inc
pop
pushf
sbb
mov
or
pushf
or
cdq
xor
mov
rol
adc
adc
jg
stos
jmp
jge
inc
jns
scas
cmp
out
sub
adc
sbb
jns
rcr
jg
fisub
stc
ss
out
std
jbe
add
repz
cmp
dec
xchg
xor
push
cwde
adc
shl
jo
add
into
push
fldcw
xor
mov
fimul
add
pop
pop
or
xchg
sub
push
mov
xchg
cli
aaa
xchg
push
(bad)
cmp
ret
repnz
pop
iret
xor
xor
in
stos
aaa
daa
int3
lahf
ins
mov
inc
into
sbb
cmp
push
mov
gs
xchg
jmp
shl
xlat
ja
xrelease
outs
aas
adc
cmp
add
ret
aaa
std
mov
jge
test
das
loope
xchg
mov
mov
adc
imul
mov
(bad)
fdiv
mov
cmp
or
and
imul
stos
pushf
adc
xchg
mov
retf
sbb
jp
cwde
and
adc
rol
jmp
and
int
imul
dec
(bad)
in
neg
xchg
ins
push
inc
sub
push
mov
jmp
mov
shl
pop
jns
test
and
cdq
arpl
cs
ftst
ja
inc
ja
(bad)
and
pop
jmp
sahf
loopne
lea
call
fldcw
mov
cld
mov
dec
cmp
or
sbb
repnz
adc
xor
sti
xchg
mov
adc
and
popf
xchg
or
in
push
xor
or
pop
test
call
jle
jp
sar
sbb
push
mov
pop
mov
pushf
repz
(bad)
xchg
loop
pop
adc
out
xchg
add
lds
push
mov
adc
stos
fdivr
mov
xor
stos
mov
in
loope
icebp
adc
ds
mov
jo
test
imul
call
pop
push
fisttp
jae
cld
cmp
inc
movs
je
lock
dec
rcl
inc
fwait
inc
jmp
dec
jge
and
sbb
aaa
rcr
test
adc
add
inc
pop
retf
jno
jp
in
cwde
shl
mov
xchg
int
scas
xor
cmp
add
(bad)
stos
nop
xchg
and
add
adc
out
(bad)
push
cmp
int
jno
and
sub
add
popf
jle
(bad)
fxch
mov
retw
adc
add
sbb
cwde
imul
out
inc
shl
cmps
push
outs
dec
aam
inc
lock
jp
je
loopne
push
cmp
and
stos
das
cmp
pop
dec
pop
fs
sub
clc
das
xor
xor
mov
inc
jne
inc
mov
inc
out
aad
(bad)
cld
mov
adc
xchg
mov
popa
stc
jle
push
push
icebp
fstp
cwde
out
test
imul
and
test
enter
dec
mov
push
cs
aas
add
xchg
aas
call
sahf
mov
adc
ret
jmp
out
icebp
jle
xchg
in
aas
lock
pusha
push
jae
sbb
in
xchg
ss
push
push
cmps
and
push
pop
sub
in
pop
push
xor
cmp
hlt
test
enter
mov
sbb
jae
fs
jmp
sar
imul
mov
xchg
cmps
push
jle
lea
jge
ret
sbb
test
int3
lds
adc
and
and
dec
cmc
mov
enter
dec
pop
adc
mov
retf
pop
adc
test
xor
mov
das
cmps
ror
xchg
test
mov
mov
idiv
lods
in
mov
and
push
aam
and
out
or
rol
jae
ds
add
mov
lahf
lds
mov
imul
scas
fcom
mov
ins
jmp
fdivr
mov
sbb
ja
push
out
or
push
std
inc
out
mov
cmp
inc
stos
call
inc
shl
call
in
mov
dec
sub
pop
push
dec
inc
mov
in
push
cmp
cmps
and
jo
xchg
ja
xor
shl
adc
test
sbb
cmp
neg
leave
je
dec
scas
rol
sti
fnsave
std
cwde
pop
or
test
pop
lea
and
inc
enter
scas
repz
sbb
xchg
imul
jns
mov
popa
std
sar
call
cwde
(bad)
fstp
std
sub
out
test
cmp
outs
lods
movs
in
push
mov
ret
add
(bad)
mov
pop
jb
ret
imul
dec
das
jge
xchg
popf
add
fistp
fwait
je
jge
and
aam
rcl
shr
and
imul
outs
rcr
jnp
fdivp
pop
pop
mov
jno
adc
mov
aam
jns
stc
add
pusha
xor
cmp
fadd
stos
repnz
stos
mov
repz
mov
icebp
push
in
cmp
jl
cmp
pop
mov
mov
ins
imul
cmp
pop
dec
dec
orps
cwde
sbb
pop
lock
(bad)
out
popf
(bad)
cmp
mov
mov
sub
lods
repz
loopne
stos
cmp
mov
stc
cmc
ret
push
cmp
adc
lock
sbb
lock
sbb
push
aam
or
test
inc
jno
(bad)
mov
jg
mov
mov
pop
fdivr
add
xor
mov
pop
cld
and
xor
add
mov
fsubr
lods
leave
cmp
xor
push
fcomip
stos
and
xor
cmp
stos
jmp
jle
and
pop
sar
push
push
cmp
jge
mov
shl
push
in
repz
fwait
je
outs
ins
jbe
mov
adc
iret
imul
ret
and
mov
xchg
dec
ret
jne
add
adc
inc
imul
mov
pop
push
addr16
scas
cmp
stos
mov
test
popa
mov
mov
lahf
push
aad
sbb
jp
aam
popf
popf
or
add
ja
(bad)
arpl
movs
in
aad
retf
sbb
(bad)
push
test
arpl
push
cmc
cdq
dec
stc
jecxz
adc
data16
into
or
pop
xchg
dec
std
fcom
movs
cli
neg
call
mov
lods
mov
push
mov
mov
int
mov
repz
pop
in
in
xchg
call
or
cmp
push
jge
(bad)
jo
les
fwait
mov
lods
neg
leave
adc
add
(bad)
ror
and
stc
pop
sub
mov
pushf
mov
mov
in
les
movs
int
mov
sub
push
lahf
jbe
pop
mov
fadd
and
loopne
or
rol
xchg
test
mov
inc
popf
and
gs
sub
pop
adc
jecxz
in
iret
xchg
rcr
add
test
push
xchg
es
inc
xchg
and
jle
sbb
pop
arpl
repz
and
rcl
pop
ins
sbb
inc
dec
mov
or
sbb
imul
fcmovnbe
xor
xor
cwde
scas
addr16
out
push
push
cmp
mov
sar
xor
aad
adc
scas
push
aad
stos
pop
push
mov
lods
dec
jp
sbb
push
imul
sbb
out
xlat
dec
rcl
push
dec
xchg
mov
add
dec
(bad)
mov
jo
xor
(bad)
std
scas
outs
adc
fs
add
push
ja
into
sti
pop
mov
stc
inc
bound
jle
js
pop
sub
js
xchg
mov
push
adc
(bad)
jle
sub
and
sar
mov
fbstp
fcomp
cmp
adc
idiv
mov
or
jo
xchg
push
xor
stc
mov
mov
inc
push
or
lahf
cmp
rcl
outs
dec
js
mov
jb
fmulp
jmp
xor
pop
inc
sub
int
les
mov
pop
sbb
mov
nop
ror
mov
ror
xchg
jle
adc
sbb
adc
cmp
dec
lock
aam
es
or
xchg
jbe
xor
or
stos
into
xchg
cmp
into
call
ret
push
and
and
iret
mov
test
mov
aad
fdiv
sbb
jecxz
cmp
mov
adc
scas
mov
xchg
ins
and
(bad)
pushw
cli
(bad)
sbb
push
adc
stc
mov
and
xchg
jecxz
mov
ja
mov
in
add
sub
cmp
pop
call
iret
adc
ret
pop
pusha
adc
sti
xor
inc
stos
mov
stos
xchg
out
and
into
fiadd
push
xchg
(bad)
or
in
pop
mov
jno
scas
inc
jp
loop
jnp
fwait
xchg
dec
xor
sub
gs
add
js
adc
jmp
cmp
addr16
jo
addr16
xchg
dec
xchg
push
aam
loop
adc
aas
(bad)
jl
push
test
jl
ffreep
mov
(bad)
arpl
call
aad
aas
cwde
cmp
jg
push
jne
int3
sub
(bad)
outs
xchg
cmp
xlat
xor
xchg
mov
mov
loopne
add
cmp
xor
sub
ins
push
xchg
shr
aaa
xor
add
test
ficomp
or
inc
clc
call
ss
je
dec
(bad)
push
or
sub
xlat
cdq
cli
mov
or
rol
inc
mov
pop
fs
es
adc
ret
(bad)
mov
(bad)
ret
aad
pop
sbb
adc
jge
loop
stos
inc
xchg
xor
pop
int3
out
fst
add
and
mov
cdq
push
add
data16
push
or
stc
mov
xchg
(bad)
(bad)
sbb
lahf
or
imul
ret
mov
in
sub
mov
stc
hlt
js
jbe
cmp
sti
and
das
mov
stos
jbe
add
or
pop
scas
std
adc
dec
(bad)
dec
aas
sub
das
jecxz
call
jp
push
imul
adc
xlat
xor
js
cmp
xlat
icebp
(bad)
adc
or
jne
stos
in
pop
stos
mov
cmps
lds
in
shl
retf
inc
outs
sahf
fiadd
push
mov
xchg
mov
mov
mov
fnstenv
outs
adc
cmp
push
push
xchg
hlt
sbb
xchg
jo
leave
popa
test
sub
int3
add
and
add
sbb
lods
jno
mov
fdivr
sbb
pop
adc
sub
or
push
iret
mov
dec
imul
pop
xor
ja
mov
cli
sub
jne
add
outs
inc
xor
sbb
push
and
test
or
push
jge
push
pop
test
dec
sub
(bad)
dec
cmc
xor
mov
nop
repz
lods
pop
push
jae
sbb
fidivr
dec
jmp
xchg
and
std
xor
cmp
inc
movs
mov
add
lds
enter
retf
call
jp
or
or
jae
lahf
jo
fld
mov
mov
mov
sub
lock
ss
dec
lahf
xor
das
ret
ficom
(bad)
das
inc
mov
leave
xchg
aas
rcl
das
lods
push
cmp
xchg
jbe
push
dec
jg
mov
jae
mov
cmps
cwde
jge
cdq
outs
push
mov
pop
repnz
jle
lods
pop
mov
jno
je
push
test
daa
stos
xchg
jae
mov
mov
lods
sub
xor
movs
cdq
push
jmp
into
daa
inc
es
test
inc
repz
inc
jbe
(bad)
iret
mov
or
mov
sbb
in
adc
or
pop
gs
nop
mov
and
jne
in
cmp
adc
(bad)
inc
mov
das
imul
mov
out
aad
sub
(bad)
jmp
sub
cmp
mov
repnz
mov
adc
hlt
ss
dec
ss
add
movs
push
cmp
xchg
lods
sahf
sub
addr16
sub
lahf
outs
inc
repnz
rcl
push
je
xchg
cmps
mov
pop
iret
in
aam
leave
mov
push
daa
mov
lahf
jne
sub
cmp
sar
sahf
cmps
or
std
(bad)
dec
jg
js
imul
movs
adc
push
push
retf
loop
xor
bound
ins
arpl
dec
rol
and
pop
jg
cmp
fiadd
cwde
popa
mov
test
outs
sub
xchg
aam
clc
and
(bad)
xchg
fcom
pop
lods
mov
mov
rcl
pop
cmps
ret
cld
push
cld
mov
nop
out
loopne
push
and
push
sbb
retf
retf
adc
mov
pop
lods
push
add
popf
inc
or
loope
sbb
cmp
sub
movs
imul
mov
movs
xor
mov
cmp
xor
xor
sub
das
add
jb
arpl
lea
xchg
sbb
push
es
ss
dec
xchg
push
lods
mov
cmp
in
mov
(bad)
cdq
mov
(bad)
fcom
ds
mov
into
dec
rol
inc
test
sahf
cmp
int3
push
scas
std
or
mov
out
dec
dec
jnp
pop
in
sub
call
imul
sub
pop
xchg
push
(bad)
mov
enter
xor
rcr
das
mov
dec
jnp
and
mov
or
stos
into
xor
loope
xor
fcom
addr16
adc
pop
popa
jecxz
push
mov
push
mov
mov
loopne
adc
add
repz
loopne
arpl
ja
sub
xchg
or
cmp
pop
jnp
jg
and
dec
jl
shr
out
xor
jl
aam
fadd
mov
mov
mov
xor
imul
dec
add
mov
mov
cli
jge
and
aaa
leave
out
mov
pop
push
inc
xor
mov
adc
mov
in
add
lea
sbb
popa
mov
(bad)
sub
clc
ja
dec
and
push
mov
sbb
pop
sub
pop
sbb
hlt
cmp
push
lea
mov
test
aam
retf
mov
pop
loop
dec
imul
xor
nop
imul
xor
aam
in
cmp
mov
mov
cmp
dec
loope
and
or
mov
xor
xchg
sub
push
hlt
retf
push
push
mov
popa
jae
jmp
sub
int3
dec
scas
cmp
or
mov
and
cmps
ret
lods
int3
ja
div
xchg
jnp
push
cmp
test
sbb
popf
dec
pusha
or
loop
mov
mov
mov
lods
fnsave
int
fdiv
jg
ins
xchg
or
adc
jecxz
jge
sub
test
mov
or
push
sub
jmp
fadd
sub
outs
sub
or
mov
out
push
mov
pop
(bad)
ins
sbb
pop
fwait
int3
aam
add
mov
es
mov
dec
mov
jb
rol
cmp
dec
xor
popf
ja
inc
and
jge
mov
mov
stc
nop
popf
cld
push
push
mov
jge
push
aam
dec
mov
mov
push
clc
pusha
bound
or
popf
cmp
push
repz
adc
lock
push
imul
pop
aas
fisub
out
pop
js
jae
iret
pop
mov
or
mov
add
jl
lock
jmp
std
scas
in
cli
aam
loopne
lds
icebp
inc
or
cs
add
cwde
and
stos
test
popf
cmp
ret
inc
es
mov
mov
int3
retf
addr16
xchg
or
(bad)
mov
aad
or
aas
sysret
fnstsw
and
pop
push
rep
adc
push
mov
je
jle
in
and
adc
outs
retf
(bad)
popa
lock
out
cmps
test
xor
in
sub
xor
loop
inc
test
cmps
fidiv
sbb
rcr
push
cld
rcr
pushf
repz
enter
mov
mov
stc
lods
scas
fwait
adc
mov
sbb
mov
pop
(bad)
cmp
pop
mov
jo
adc
fsubr
adc
sbb
lods
addr16
fild
jbe
ins
rcr
out
fistp
mov
pop
es
mov
test
mov
fiadd
pop
stos
pop
mov
adc
pusha
rcl
pop
sub
les
sub
stos
je
mov
shl
cwde
mov
mov
mov
in
jnp
cmps
dec
mov
lock
xor
xchg
or
or
mov
ret
idiv
push
mov
je
pop
popf
mov
ficom
mov
mov
fsubr
hlt
sub
inc
iret
lahf
test
not
xor
into
daa
dec
push
and
scas
push
lahf
(bad)
ja
movs
sbb
fbld
jmp
dec
ds
pop
rcr
outs
ret
xchg
test
daa
and
or
and
xchg
dec
les
add
or
or
xor
mov
inc
scas
push
ds
imul
hlt
xor
sbb
(bad)
mov
xchg
inc
arpl
inc
lds
je
adc
test
retf
ja
mov
mov
stos
mov
push
dec
shl
cmc
and
xor
int
cmovae
into
gs
int3
ret
pop
mov
inc
dec
mov
inc
jno
jge
mov
fist
xchg
cmc
(bad)
fild
arpl
rcpps
in
enter
lds
push
lods
adc
in
sub
js
rcl
call
and
mov
sar
inc
and
outs
mov
lahf
mov
pop
inc
push
pop
div
retf
sbb
(bad)
and
and
jne
or
jbe
popf
ins
xchg
push
push
cs
or
jg
adc
push
sbb
sub
popa
and
ret
in
pop
mov
cmps
xchg
test
fs
mov
gs
or
rcr
stos
cld
pop
(bad)
mov
jnp
shl
ret
jo
out
mul
out
xchg
(bad)
cld
into
gs
or
lahf
jo
std
aad
int
dec
push
test
dec
mov
add
jge
lea
(bad)
fadd
mov
push
dec
aaa
aam
jns
push
mov
enter
nop
inc
nop
inc
(bad)
push
and
mov
push
(bad)
lods
add
pop
retf
jo
mov
inc
adc
sbb
jg
pop
jg
add
mov
sub
xlat
sbb
fwait
and
mov
icebp
mov
mov
mov
inc
hlt
into
adc
push
test
jnp
lods
outs
sbb
adc
and
add
push
hlt
adc
hlt
push
add
das
xor
inc
lea
jae
ret
into
shl
mov
(bad)
outs
xchg
inc
cmp
pop
push
dec
movs
mov
xor
add
iret
sbb
div
sbb
mov
mov
sbb
jmp
jne
jle
mov
sbb
inc
int
push
mov
daa
adc
sbb
fsubr
sub
loop
inc
fist
mov
jmp
popf
fldcw
repz
pushf
cmc
mul
pop
test
(bad)
into
cwde
lahf
adc
sbb
add
mov
xchg
fimul
or
inc
mov
jne
jae
xor
inc
pop
in
xor
in
lock
xchg
retf
enter
(bad)
push
adc
(bad)
out
pop
ret
(bad)
sbb
lods
fcmovne
jmp
adc
sbb
jle
xchg
sbb
rol
and
inc
add
cmps
sbb
retf
jge
sbb
rol
test
clc
dec
jnp
mov
shl
dec
dec
sbb
fdiv
dec
pop
daa
cdq
hlt
int3
mov
xchg
andnps
add
push
adc
jge
ss
cmp
xchg
outs
mov
ja
call
or
out
xchg
cwde
adc
mov
jns
in
and
pop
ds
cmp
cmp
js
pushf
test
xchg
mov
and
lahf
sub
out
std
pop
jge
adc
iret
and
xor
cmps
pop
sub
cld
in
sub
push
cmp
repz
adc
adc
(bad)
outs
xchg
sbb
xchg
cli
imul
adc
sar
cmc
push
mov
pop
push
pop
call
sub
cmp
jle
push
xchg
loope
in
or
sti
(bad)
ins
dec
in
out
ror
xor
fild
ror
inc
clc
pop
mov
repnz
adc
adc
xchg
outs
pop
rcl
push
fist
and
mov
sbb
jae
mov
adc
sbb
adc
das
or
cwde
popa
rcl
cmc
rcl
mov
jle
mov
and
pop
push
pop
jae
jmp
sub
lds
(bad)
(bad)
shr
xchg
loopne
(bad)
test
push
cmps
inc
push
outs
inc
push
adc
mov
inc
or
popa
inc
hlt
or
outs
xchg
lds
repz
inc
mov
jo
bound
in
mov
push
add
jl
stos
das
push
jo
mov
lea
dec
repz
arpl
xchg
(bad)
rol
jmp
loopne
push
sbb
imul
fldcw
or
ja
add
add
into
pop
bound
mov
sub
mov
mov
lahf
xchg
fadd
lods
sbb
stos
xor
jno
dec
leave
dec
xor
add
xor
and
sar
stos
data16
and
pop
loop
scas
je
in
sub
(bad)
(bad)
out
sub
aad
cmp
rol
cmp
in
push
loope
jecxz
adc
adc
in
or
xor
mov
mov
cdq
inc
sbb
xor
xchg
(bad)
push
sbb
ficom
cld
mov
icebp
pop
aaa
add
ror
push
xor
imul
pop
fstp
call
mov
pop
lods
gs
mov
fist
das
leave
jg
xchg
dec
mov
lahf
mov
loopne
add
loopne
xchg
or
and
adc
loopne
mov
sub
or
sahf
xchg
mov
and
fisub
nop
ret
fidivr
shl
retf
enter
mov
cmp
mov
movs
iret
or
(bad)
outs
sub
cmp
or
ja
test
pop
adc
leave
or
data16
fs
add
hlt
rcl
mov
sar
lods
cdq
test
clc
lods
xchg
xchg
push
mov
mov
mov
sub
push
cwde
retf
lea
and
mov
and
jmp
nop
push
xchg
cmps
rol
lahf
mov
jmp
ins
fs
and
sub
shr
inc
jnp
(bad)
movs
xlat
fdiv
xor
bound
ret
mov
mov
mov
mov
inc
jb
cmovo
cdq
dec
fcom
std
push
out
mov
neg
cmp
mov
ins
add
push
int
pop
jmp
pop
lds
xchg
push
inc
adc
setnp
(bad)
cmc
add
(bad)
pusha
adc
dec
rcl
sub
sub
lock
int
(bad)
dec
ffreep
xchg
jg
pop
mov
retf
sbb
sbb
fdivp
jg
bound
xchg
movs
or
jge
hlt
or
aam
jge
sub
pop
ins
scas
or
bound
out
push
ss
sub
xchg
jnp
adc
mov
cmp
movs
xchg
cmp
mov
jns
cmp
jno
retf
mov
add
in
mov
in
fsub
popf
jg
ret
out
out
stc
mov
mov
xor
in
dec
jne
jmp
aad
out
jb
add
mov
add
popf
sub
adc
ins
pop
adc
(bad)
popa
test
(bad)
(bad)
int3
lahf
adc
ficomp
mov
pop
(bad)
dec
cmps
mov
popa
stos
mov
jp
rol
sbb
mov
dec
sub
(bad)
push
push
or
jb
mov
push
xchg
xor
leave
dec
inc
push
sbb
mov
sbb
and
mov
ins
ret
mov
and
repz
dec
xchg
popa
sbb
aad
inc
cli
shr
test
push
pop
mov
push
xor
push
fstp
xor
mov
mov
jle
add
dec
jmp
es
cwde
fst
dec
add
sbb
xchg
jecxz
mov
mov
mov
pop
aas
push
mov
adc
adc
fisubr
out
fsubr
leave
mov
scas
icebp
xchg
sub
inc
pop
ret
out
stc
cmc
inc
stos
test
cmp
ss
call
frstor
in
(bad)
mov
shl
(bad)
jo
push
and
xlat
dec
in
dec
not
mov
mov
push
xor
xor
int
pop
push
test
adc
adc
and
shl
jecxz
jns
call
jmp
jl
adc
add
push
in
data16
push
jp
inc
call
add
adc
cmc
(bad)
(bad)
adc
or
inc
das
xlat
outs
int
fisubr
mov
loop
inc
xchg
addr16
dec
int
stos
ret
xchg
pop
mov
mov
pop
jo
xchg
lods
or
in
cmps
hlt
mov
arpl
sahf
clc
in
es
mov
test
mov
fidiv
mov
mov
sub
mov
int3
aas
inc
xchg
mov
xchg
sub
xchg
and
mov
pusha
je
pop
test
and
repnz
or
data16
shr
sbb
(bad)
jns
cld
scas
push
imul
nop
movs
push
lock
fmul
jmp
sbb
cwde
(bad)
das
mov
jns
inc
outs
dec
cdq
sti
sub
fwait
xchg
int
cmp
add
stos
(bad)
push
cld
fild
add
sub
lods
lea
nop
xor
fcmovb
jmp
(bad)
das
and
ss
xchg
jbe
sbb
loope
inc
adc
and
(bad)
loope
scas
pop
ret
iret
ret
out
inc
adc
repz
call
sar
mov
clc
pop
jmp
call
aas
pop
push
mov
sar
loop
cmp
data16
mov
rcr
and
iret
mov
iret
retf
in
and
jae
cmp
in
aaa
lahf
(bad)
iret
mov
hlt
iret
es
retf
es
adc
mov
adc
jg
gs
add
xlat
imul
xor
popa
xor
inc
ss
test
xor
pop
cmp
loopne
push
and
and
repnz
sbb
xchg
xchg
sub
or
scas
ret
fld
add
out
hlt
mov
dec
adc
add
aas
inc
push
fcom
xchg
cld
(bad)
jb
adc
cdq
dec
xchg
outs
mov
outs
adc
ss
std
adc
ror
jle
popf
and
stos
fiadd
xchg
sub
xchg
stos
pushf
adc
outs
jne
sbb
shr
fldz
pop
add
sub
enter
mov
jp
or
xchg
mov
pop
idiv
xchg
(bad)
fld
mov
push
and
lock
gs
outs
leave
mov
int3
xchg
outs
xchg
jmp
mov
ret
push
cdq
repz
ins
push
mov
jmp
sbb
sahf
xchg
aas
cmps
add
pusha
retf
dec
dec
div
test
ins
fwait
cld
imul
pusha
sbb
push
out
ret
mov
sub
dec
xor
fstp
stos
fcom
add
jecxz
pop
hlt
popa
dec
or
ror
push
dec
fs
pop
mov
lock
mov
push
addr16
pushf
push
add
clc
sti
fild
mov
sub
inc
lds
adc
out
(bad)
sbb
jnp
or
cmp
adc
xlat
mov
xor
mov
push
les
dec
stos
rcl
test
test
cmp
inc
inc
idiv
add
arpl
arpl
fistp
imul
rcr
vmovd
push
pop
inc
jl
pushf
fwait
into
add
sbb
loopne
fsub
test
and
aaa
shl
push
inc
push
rcr
ins
inc
fs
call
pop
inc
xlat
movs
test
cmps
sti
sbb
xor
mov
cmp
adc
fdiv
mov
xchg
bound
cs
mov
jne
pop
push
fwait
shr
dec
sub
ds
dec
out
es
and
test
aaa
jne
imul
sub
mov
test
mov
in
in
fst
in
push
stc
rol
or
jne
mov
sub
aaa
inc
push
std
or
cld
mov
xchg
push
mov
push
popf
(bad)
push
imul
xchg
add
jp
into
das
outs
adc
sub
jnp
arpl
cs
int3
push
(bad)
out
xor
inc
ss
mov
mov
sbb
lea
fcomp
add
push
call
fsubr
sub
rcr
jnp
icebp
call
leave
dec
int
xchg
test
je
les
fwait
shl
jbe
sbb
or
out
rcl
ins
and
jle
inc
cli
sub
lods
pop
pop
test
(bad)
cmp
xchg
(bad)
nop
mov
mov
pop
and
jmp
xchg
mov
daa
and
inc
cld
fstp
imul
ret
test
sub
push
push
sbb
sub
aam
mov
out
std
mov
dec
adc
pusha
cmps
jg
mov
in
test
stc
fcmovnu
pop
jge
clc
sub
jmp
xchg
(bad)
xchg
out
mov
repnz
xlat
cmc
(bad)
xchg
icebp
lods
mov
ja
fcom
fcom
mov
xchg
nop
lock
(bad)
jecxz
jmp
movs
into
in
mov
js
sbb
inc
mov
cwde
sti
xchg
pop
sbb
pop
or
adc
fs
mov
jle
pop
mov
popf
add
sub
mov
ret
cdq
xchg
sub
inc
mov
push
fsub
or
mov
pusha
aam
xchg
sbb
imul
aad
ret
mov
ss
sbb
out
movs
adc
sub
sbb
dec
(bad)
jle
fild
push
loope
add
sahf
xor
sub
lock
push
cmp
test
stos
add
icebp
arpl
add
xchg
push
cmp
push
push
sbb
jle
dec
xor
fisub
(bad)
pop
test
leave
lahf
imul
ins
push
bound
or
jnp
mov
test
stos
mov
and
xchg
dec
xchg
shl
rcl
ins
jb
dec
jne
push
les
retf
push
mov
mov
jns
xor
ins
sahf
nop
out
enter
sbb
or
cli
push
movs
enter
ds
xor
fs
mov
jge
sbb
bound
pop
lahf
iret
mov
cli
or
pop
sub
xor
push
test
jg
jmp
fisub
mov
jecxz
fnstcw
fisttp
ret
sbb
stos
push
(bad)
pusha
inc
inc
xchg
mov
sub
jb
std
ins
das
push
dec
cdq
ss
iret
cwde
xor
sub
sub
inc
sti
sub
loope
push
mov
pop
out
pop
(bad)
xchg
xor
call
test
iret
xor
out
inc
jg
push
xchg
call
arpl
or
popa
test
repz
mov
jb
mov
mov
shr
daa
mov
cmp
dec
pop
sbb
sbb
mov
cmp
mov
adc
dec
cmp
shl
pop
push
lea
inc
dec
xor
loopne
dec
jb
mov
jge
or
mov
jbe
lock
(bad)
(bad)
ins
mov
into
out
movs
sub
repz
xchg
(bad)
dec
cdq
xchg
jmp
or
int3
sbb
in
add
add
adc
test
cs
sub
div
jns
pop
add
cs
and
inc
pop
dec
call
pop
pop
dec
shl
pop
cld
into
cmp
stos
mov
pop
kandnb
imul
fs
mov
fwait
sub
add
sub
fisubr
mov
cmp
or
adc
xchg
(bad)
sbb
mov
dec
jg
scas
inc
and
jns
xor
icebp
sub
stos
bswap
pop
mov
mov
sub
inc
out
sbb
fwait
test
jmp
dec
push
stos
mov
cld
test
or
sti
rol
xchg
repnz
into
xor
arpl
(bad)
cli
dec
popf
mov
fsubr
scas
lahf
sub
cmc
sar
xor
out
push
repnz
mov
shl
call
dec
mul
outs
pop
mov
sub
shr
movs
xchg
ins
fnsave
and
jb
push
jle
or
cmp
test
jp
sub
icebp
dec
pop
out
sub
imul
outs
sub
into
popa
adc
add
xchg
mov
or
mov
add
xor
clc
or
inc
mov
xlat
pop
jge
jae
sub
cli
into
ds
sti
gs
popa
cli
dec
jp
mov
add
adc
mov
out
push
mov
or
or
call
outs
popa
mov
or
jmp
je
pop
adc
sbb
leave
(bad)
mov
fild
fdiv
sbb
cs
retf
faddp
mov
shl
cmp
cmp
stc
mov
sbb
pop
dec
jecxz
out
xlat
adc
in
push
cmp
in
push
aad
lods
stc
inc
adc
not
xchg
ret
adc
ss
jno
mov
ret
aas
dec
cdq
or
test
pop
std
in
pushf
push
out
sti
cdq
jmp
rol
js
pop
dec
add
sub
push
ret
add
dec
pop
xchg
dec
jno
pop
mov
in
xor
jno
and
xchg
pop
int3
retf
clc
fs
push
xchg
pop
dec
cli
push
sbb
ins
push
js
inc
jp
movs
lods
lds
dec
mov
sbb
xor
ss
pop
aad
sti
jg
test
sbb
sti
mov
std
push
out
add
mov
outs
sar
movs
(bad)
out
test
ficom
daa
and
lods
add
mov
lahf
imul
cmps
xchg
rol
cmc
imul
mov
lock
pop
sub
jecxz
push
dec
mov
jb
call
hlt
push
add
popa
add
jecxz
mov
xor
mov
rcl
inc
cmps
xor
int
xchg
push
jo
jp
sub
scas
mov
push
lods
jle
or
pop
dec
push
xchg
rcl
jle
cmp
or
sysret
(bad)
push
xrelease
or
inc
push
stos
pop
push
(bad)
clc
jb
lea
(bad)
jmp
ins
mov
push
mov
push
rol
lods
inc
jo
ds
xchg
push
or
and
out
pop
jmp
inc
jmp
sbb
mov
pop
scas
movs
call
xor
std
adc
call
sbb
lds
mov
jmp
mov
jb
mov
jmp
popa
mov
bound
adc
jae
test
mov
(bad)
std
stc
pop
movs
ror
(bad)
scas
sub
push
scas
loope
xlat
pop
mov
dec
mov
(bad)
mov
push
mov
scas
jb
xchg
mov
pop
and
jp
leave
and
repz
loope
enter
fisttp
and
jns
aaa
sahf
push
(bad)
(bad)
ins
pop
inc
xchg
idiv
cwde
lahf
(bad)
push
ret
daa
dec
or
inc
or
shr
scas
repz
cmp
dec
sbb
in
movs
enter
xchg
out
and
cwde
mov
and
adc
loop
std
inc
lods
les
sbb
in
inc
fisttp
xor
test
test
inc
in
movs
mov
xor
sbb
mov
scas
shl
or
add
and
not
(bad)
xor
hlt
pop
in
into
sub
movs
jo
pusha
cmps
xchg
mov
and
mov
out
xchg
jo
cwde
scas
sahf
xchg
inc
in
call
pop
enter
fs
and
add
popf
add
jae
sbb
cli
(bad)
or
mov
cmp
lock
mul
stos
outs
jp
sbb
xchg
pop
jp
mov
cld
lahf
jns
mov
mov
in
sub
les
arpl
loopne
stos
adc
mov
dec
call
sbb
xor
mov
sti
cdq
loopne
push
fst
jnp
xor
pop
iret
adc
and
mov
xchg
loope
jb
loopne
in
in
retf
jmp
xchg
aam
sar
jle
jmp
push
jne
cmc
je
scas
test
inc
adc
push
(bad)
into
sbb
xchg
mov
mov
fwait
push
push
or
mov
push
pop
mov
pop
(bad)
shl
fwait
test
daa
push
inc
ss
sbb
add
imul
pop
pop
jg
not
pop
repz
ror
repz
xor
push
mov
shl
mov
jmp
inc
sub
movs
push
inc
xchg
jle
jg
dec
push
mov
mov
iret
jmp
xchg
jge
sbb
in
pop
sub
hlt
fs
cmc
add
popf
sub
sbb
push
aaa
daa
repnz
(bad)
lds
jns
repz
(bad)
int3
jno
push
in
xchg
loopne
inc
scas
push
mov
push
add
push
fs
leave
mov
out
std
sbb
xchg
push
pop
mov
push
dec
sbb
push
push
or
bound
inc
pop
out
xchg
jmp
mov
std
mov
jb
mov
sahf
shl
clc
xchg
cmp
mov
in
cmp
aaa
pop
mov
sub
(bad)
shl
pop
fisttp
mov
add
xchg
pop
std
loop
adc
push
call
sbb
mov
(bad)
(bad)
mov
test
es
in
in
test
sbb
jle
mov
or
pop
in
cmp
in
mov
rol
jb
xchg
pop
sub
into
cmp
popf
xchg
stos
arpl
or
add
sbb
cmp
or
(bad)
repz
fnstenv
jnp
pop
add
into
std
repz
xor
inc
clc
inc
pop
in
add
mov
aas
push
push
adc
out
aaa
rol
add
jb
add
jmp
or
mov
push
ss
and
push
into
idiv
sbb
daa
hlt
mov
push
mov
dec
fldenv
jbe
push
sar
pop
sti
retf
movs
cmp
jnp
xor
xchg
out
test
stos
jecxz
loope
inc
mov
jle
jmp
stc
ret
lahf
mov
sbb
imul
jl
into
sbb
pop
outs
add
test
ror
in
ret
and
pop
into
popa
(bad)
retf
pop
pop
adc
fmul
dec
mov
xlat
hlt
rcr
and
mov
ins
mov
jns
adc
dec
xlat
mov
pop
cmp
out
outs
mov
push
es
mov
mov
popa
bound
les
(bad)
xor
sub
lods
fsubr
mov
dec
(bad)
pop
sub
adc
(bad)
jns
test
and
fdivr
pop
cmc
and
jl
mov
adc
test
add
out
nop
jg
push
jle
ins
mov
fbld
loopne
das
xchg
ret
push
outs
push
adc
inc
enter
shr
or
lock
lods
test
pop
aaa
xchg
lock
repz
popa
mov
test
pop
adc
pop
ret
push
adc
fsub
add
xor
jno
aad
leave
or
dec
xchg
pop
mov
jbe
jns
ss
pop
aam
cld
sub
scas
cs
fwait
aas
test
stc
mov
inc
loope
dec
inc
repnz
bound
inc
jge
movs
dec
cmp
adc
loop
jg
pushf
bound
cmps
movlps
retf
imul
mov
inc
and
in
push
mov
imul
in
ret
mov
push
sar
daa
fist
pop
sub
push
cmp
icebp
gs
mov
mov
in
mov
pop
fnstsw
cdq
leave
lods
nop
or
cmc
jns
sbb
cmps
or
ret
pusha
clc
loopne
pop
xchg
fucom
jno
mov
or
dec
or
add
(bad)
push
and
retf
ja
cmp
call
pop
pusha
pop
ret
dec
sub
push
jno
je
fldcw
jmp
and
addr16
xlat
push
dec
test
(bad)
int
retf
in
das
cdq
jmp
into
es
jg
push
out
adc
fisubr
push
sub
push
inc
lea
mov
cld
mov
sub
in
lock
retf
jo
push
prefetchnta
xor
lea
out
jo
cmps
dec
int
mov
mov
(bad)
out
sbb
and
jns
inc
hlt
jo
(bad)
jns
push
loope
cmps
mov
shl
or
pop
pop
pop
int
test
clc
ss
jmp
xchg
bound
fiadd
call
rcl
or
mov
loop
retf
mov
retf
call
sbb
mov
sbb
jecxz
ja
push
test
sub
add
pop
fsub
xor
adc
adc
das
fwait
pop
xor
mov
sbb
xor
and
xchg
repnz
or
out
jmp
and
ins
pop
mov
pop
lahf
mov
jle
neg
mov
cmps
nop
test
sbb
push
int
mov
call
jl
mov
lahf
or
adc
xor
push
rcl
and
add
rcr
pop
sub
pop
mov
sbb
pop
mov
popa
or
out
out
test
xchg
enter
jmp
and
mov
addr16
adc
test
je
das
pop
mov
push
inc
add
or
sub
cs
jbe
jge
sub
inc
lock
cdq
iret
xor
(bad)
xlat
into
shl
mov
push
xor
push
jne
lea
pusha
or
add
mov
pop
jo
test
jp
sub
iret
or
inc
jecxz
outs
fldcw
push
scas
arpl
lods
and
out
sbb
cmp
cld
dec
xor
popf
lock
dec
pop
xchg
and
mov
push
add
or
pop
mov
std
mov
loopne
fcomp
out
push
adc
mov
in
jno
enter
ror
lds
adc
es
int3
dec
push
stc
and
fdiv
and
sbb
sub
arpl
cmps
out
inc
push
out
add
fdivr
and
popf
call
int
je
jns
in
aaa
and
adc
push
pop
jo
pop
int
adc
cli
cmp
leave
add
push
mov
jb
sub
push
(bad)
es
out
mov
stos
(bad)
cmp
pop
mov
loop
sti
mov
xor
adc
jge
push
sub
and
xchg
out
dec
add
xchg
jbe
ins
adc
icebp
in
out
and
adc
mov
enter
dec
popf
mov
xor
sbb
daa
xchg
push
ins
adc
jae
sub
mov
xchg
ret
in
fld
dec
pop
sbb
das
pop
sub
and
(bad)
pop
es
push
cld
ret
mov
je
cmps
aam
je
sbb
loop
cmp
xchg
adc
shl
rol
push
mov
inc
adc
pop
fnstsw
ins
cld
sub
sahf
dec
fwait
xchg
movs
sub
xchg
jns
adc
jp
out
aad
(bad)
sbb
jns
pop
loopne
pop
mov
mov
imul
sbb
mov
mov
pop
scas
jo
call
sub
xor
aaa
inc
mov
div
shl
add
jb
push
push
xchg
test
mov
stos
test
or
fist
mov
(bad)
lods
sub
cmps
or
sahf
push
or
iret
or
pusha
push
mov
push
and
xor
into
movs
mov
int
sbb
jb
mov
push
cmp
ret
scas
and
mov
mov
popa
or
sub
sbb
inc
pop
xchg
sub
out
scas
imul
scas
jne
ins
jne
mov
xchg
out
jo
adc
push
aaa
jnp
(bad)
(bad)
sub
movs
cmp
cld
jmp
stos
cli
mov
sbb
xchg
call
imul
pop
mov
enter
clc
dec
shl
cmc
add
push
inc
push
mov
mov
xor
push
jmp
push
pop
xlat
push
and
pop
mul
xor
add
inc
dec
jp
jns
aaa
idiv
cmc
jo
jbe
aas
add
sbb
dec
cli
call
stos
push
std
push
sub
mov
es
test
push
daa
jl
push
frndint
xchg
cld
inc
stc
fdiv
pop
add
ret
jp
cmp
in
push
inc
jno
sub
test
push
repnz
jb
cmp
mov
mov
or
or
cdq
test
mov
mov
aas
or
sbb
shl
stos
or
pop
in
and
shl
js
icebp
js
xor
push
or
adc
dec
inc
retf
test
movs
mov
dec
and
xor
mov
mov
fs
and
mov
sbb
call
pusha
in
jle
push
ret
mov
neg
xor
stos
mov
enter
std
and
pushf
sbb
mov
(bad)
cmp
xchg
iret
fild
push
push
repz
inc
ss
dec
out
dec
inc
std
call
xor
pop
inc
sub
jecxz
push
pop
xor
add
mov
push
jmp
mov
js
mov
pop
fdivrp
sbb
retf
jge
(bad)
mov
test
mov
outs
dec
mov
das
sbb
cli
enter
cli
fdiv
adc
mov
int3
test
sbb
cld
jp
dec
adc
fnstsw
movs
popa
jno
mov
push
into
adc
fwait
in
jno
xchg
stos
jne
jg
aam
or
sbb
mov
lahf
shl
mov
xor
sar
adc
fs
dec
sub
scas
icebp
dec
dec
dec
iret
cli
cmps
or
pop
cdq
pop
add
push
xlat
jae
or
mov
cli
leave
lods
cmp
imul
inc
and
ins
int
jmp
jo
js
aaa
test
int3
push
cmps
pop
pop
mov
push
pop
dec
pop
push
mov
scas
xchg
out
rcr
push
icebp
popa
pusha
mov
fsubr
dec
cmp
loopne
jae
sbb
or
or
pop
(bad)
js
adc
xor
sub
push
or
cmc
adc
jae
aas
movs
push
shr
mov
jne
inc
imul
dec
rcl
sbb
cmove
out
jl
and
aad
in
or
mov
and
pop
pushf
loopne
cmp
fdivp
scas
sldt
cmp
xor
jmp
aam
outs
inc
xlat
in
sar
pushf
jg
leave
jmp
dec
repnz
(bad)
xlat
scas
xor
xor
out
mov
gs
int3
sbb
jg
imul
lods
cmps
outs
xchg
lods
xchg
sbb
mov
lahf
clc
mov
stos
sub
adc
mov
push
mov
inc
xchg
aad
movs
stos
jmp
ret
jp
cmc
nop
push
mov
loopne
sahf
push
sub
jl
rol
xchg
add
rcl
arpl
cmp
sbb
test
jbe
fisttp
(bad)
aaa
and
cmc
fnstsw
mov
cld
push
rcl
pop
add
call
std
and
pushf
add
sub
jmp
push
scas
mov
inc
adc
mov
fs
int3
xor
pop
loope
jmp
into
dec
sub
xchg
push
mov
push
scas
lock
dec
adc
dec
xchg
repz
pop
or
stos
mov
cdq
sub
push
add
scas
mov
jnp
call
bound
xor
shl
mov
mul
into
jae
or
popf
fst
sti
cmp
inc
lods
and
and
lock
mov
sub
xchg
xor
lods
(bad)
retf
daa
jne
mov
mov
sub
ds
lods
in
pop
dec
fdivr
cmp
adc
push
in
call
lods
xor
xor
pop
pop
push
shl
repz
sar
jp
push
mov
ins
js
or
sbb
xchg
xchg
xor
pop
push
outs
xchg
sti
fidiv
mov
add
int
enter
adc
into
sti
pop
movs
push
lock
and
push
mov
lock
loope
inc
push
fsubr
mov
xor
out
pop
mov
jo
pop
inc
cmps
adc
and
dec
fwait
or
pop
jmp
xor
retf
sahf
loop
sbb
test
cld
push
lahf
test
shl
retf
adc
in
cwde
xor
jo
jmp
std
(bad)
rcl
lds
add
mov
out
ret
test
cmc
jl
add
cmp
rcr
or
in
aam
nop
retf
push
shr
imul
into
hlt
pushf
jo
push
in
hlt
mov
test
inc
ins
push
cli
pop
test
es
mov
dec
xchg
pop
mul
push
pop
loope
repz
in
mov
(bad)
(bad)
mov
push
stos
out
pop
or
stos
icebp
mov
repnz
adc
mov
push
fimul
xchg
xchg
and
xchg
inc
cmp
cmps
push
jns
and
aaa
jmp
lock
mov
add
pop
xor
xchg
mov
inc
cmp
add
push
jne
rcr
fld
nop
inc
sti
inc
inc
dec
pop
nop
xor
and
cwde
adc
xor
dec
pop
bound
outs
dec
es
bound
icebp
xor
add
xor
retf
int
push
jge
icebp
sahf
jo
push
dec
pop
enter
add
jae
scas
in
jnp
add
mov
mov
mov
sbb
test
outs
xchg
test
cmp
stc
and
xor
in
(bad)
loop
fwait
cmp
fwait
jle
xchg
je
or
adc
test
test
push
rol
fwait
cmp
movs
ins
call
sbb
add
pushf
mov
xor
sbb
push
lods
mov
and
loopne
mov
sub
in
inc
cmps
inc
les
(bad)
stos
(bad)
(bad)
and
or
sahf
cmc
sti
dec
pop
loope
sbb
ficomp
adc
push
in
scas
fwait
jge
mov
stos
loop
push
lds
dec
mov
push
mov
pop
xor
lods
jmp
adc
fs
mov
arpl
mov
push
inc
ja
xchg
int3
sub
popa
jno
out
stos
stos
movs
jecxz
dec
or
cmp
jne
test
xchg
js
psadbw
xor
inc
movs
sbb
xor
fst
sbb
jnp
test
enter
fisub
fcomip
jne
xor
pop
pop
jmp
jecxz
jp
js
nop
xchg
ror
repnz
mov
mov
aam
fild
ss
je
mov
xor
add
fist
(bad)
mov
add
xor
mov
dec
neg
in
retf
sub
dec
hlt
ficom
jg
addr16
or
mov
push
add
in
mov
sub
movs
inc
sub
call
imul
sbb
xor
adc
pop
dec
add
movs
inc
push
or
or
cmp
in
(bad)
jmp
imul
fld
retf
aam
mov
push
bound
pop
xor
pop
cmp
dec
sbb
pop
popa
xchg
ror
sbb
lods
or
dec
test
mov
or
fisub
sbb
sub
dec
iret
cmc
cmc
test
xor
fistp
adc
cmc
repnz
and
push
les
mov
jo
xchg
fldcw
fsubr
mov
outs
fwait
ss
out
sbb
pop
ins
xchg
xor
test
clc
sub
call
dec
mov
out
movs
add
jne
cmc
add
ja
sbb
or
xchg
cmps
mov
call
dec
sbb
or
xchg
jecxz
aam
(bad)
enter
shl
xchg
cmps
and
test
into
xchg
xchg
movs
pop
cmps
xor
enter
xchg
aaa
push
or
mov
lahf
xor
push
retf
in
jge
sub
inc
dec
mov
into
cmp
sub
mov
inc
mov
rol
or
hlt
mov
pop
or
subps
leave
jg
sbb
(bad)
gs
xchg
(bad)
lods
push
push
xchg
loopne
sar
scas
ret
or
push
les
push
int3
int3
fild
lods
or
lea
mov
xor
or
sti
das
bound
pop
(bad)
push
xor
cmp
sbb
mov
mov
cdq
inc
mov
(bad)
stos
sub
push
xchg
xor
js
fld
(bad)
loopne
xor
sar
inc
daa
repz
gs
ins
mov
xor
xor
rcl
cmps
add
int3
stos
mov
in
or
ret
cmp
push
mov
jg
pop
mov
sbb
inc
loop
popa
es
aad
push
je
cmp
mov
inc
mov
pop
mov
fadd
jnp
adc
xchg
sbb
jle
loop
in
xchg
jmp
and
outs
fistp
adc
jmp
aam
es
fwait
pushf
pop
sbb
xchg
sbb
sar
sub
or
into
lea
popf
les
add
sub
xchg
retf
dec
jnp
das
mov
loopne
cli
xlat
ins
in
inc
mov
jp
imul
mov
fst
hlt
and
jb
rcl
sbb
sbb
ins
shl
cmp
daa
ins
pop
cdq
sbb
(bad)
or
sbb
movs
xchg
fstp
hlt
jbe
retf
mov
xchg
pushf
add
aaa
and
popf
sbb
icebp
jg
ins
mov
bound
jmp
(bad)
cmp
pop
xchg
ss
push
sti
cmps
fs
mov
(bad)
mul
ss
jae
adc
sub
adc
push
inc
sahf
jo
pop
dec
bound
rcl
lahf
rcl
xchg
adc
cld
and
and
iret
pop
jb
inc
leave
enter
aam
nop
das
in
sub
cs
cs
jmp
repz
repz
ror
in
mov
add
movs
xchg
sbb
inc
mov
ror
xchg
or
sub
jp
xchg
xlat
sbb
and
cmc
cld
pop
add
push
push
jb
jnp
xor
ins
adc
jg
rcr
jmp
outs
(bad)
std
repz
dec
loope
cld
xlat
xor
test
lods
cld
pop
nop
dec
jno
rcl
add
xor
out
inc
inc
fs
je
cmc
dec
push
or
js
or
sub
jge
push
rcl
fnsave
sbb
sbb
test
sbb
xchg
call
xchg
imul
xchg
movs
inc
aam
stos
(bad)
sub
sbb
loope
sub
call
test
mov
and
retf
addr16
pop
mov
push
ins
sub
ins
mov
xlat
mov
and
jne
fs
mov
jne
data16
jp
inc
xor
xor
jp
xchg
daa
(bad)
daa
and
jb
out
(bad)
aam
add
dec
jmp
enter
jo
cmc
or
leave
cmp
adc
mov
inc
mov
mov
dec
push
add
sub
or
iret
or
clc
icebp
ins
inc
xchg
jo
or
pop
push
push
xchg
es
adc
xchg
leave
sub
or
dec
add
pusha
(bad)
int3
int
cli
inc
add
stos
int3
(bad)
sub
inc
sbb
dec
or
sub
inc
lock
push
rol
lock
cmp
leave
dec
pop
mov
mov
or
ss
pop
cld
mov
add
stos
push
xor
lea
adc
stc
push
sbb
sbb
xchg
jmp
ja
push
out
stc
mov
and
es
inc
mov
add
test
bound
or
inc
pop
jne
pop
xor
repz
add
mov
xchg
fs
fadd
adc
jmp
and
dec
mov
stc
test
idiv
mov
repz
fucom
xchg
mov
mov
rcl
movs
out
push
mov
in
jge
jnp
dec
xchg
div
inc
inc
mov
inc
or
int3
sub
mov
jae
jbe
out
push
call
mov
or
iret
mov
and
das
pop
loop
mov
or
xchg
mov
mov
dec
xlat
daa
and
push
pop
loop
jno
cmps
lods
fimul
push
inc
xchg
pop
jmp
push
jbe
mov
scas
push
mov
aam
sbb
and
cld
add
fwait
push
jae
int
xor
add
ins
mov
jecxz
mov
mov
fst
mov
add
test
call
push
popf
fiadd
ret
push
aam
add
jp
(bad)
jle
loop
jnp
and
mov
pop
xchg
retf
dec
fwait
pushf
fisttp
sbb
sbb
and
sub
out
lock
xchg
js
addr16
mov
inc
pushf
xor
sub
jmp
std
cmp
and
push
pop
jp
out
jecxz
sbb
mov
mov
xlat
sub
aaa
mov
in
loope
test
adc
xor
xchg
nop/reserved
xlat
mov
jl
push
dec
mov
out
cmp
jl
mov
mov
in
mov
repnz
pop
fs
mov
fcomp
and
neg
fdivr
mov
sti
push
lock
rol
bsr
jg
push
dec
ss
iret
sti
fs
mov
stos
bound
stc
dec
aaa
jae
dec
jmp
dec
pushf
bound
push
mov
in
or
popf
imul
jo
daa
cmp
hlt
lods
push
sbb
add
push
pop
mov
lahf
cmps
push
not
test
and
add
cs
popa
add
les
ret
imul
and
(bad)
(bad)
mov
jmp
cmc
leave
(bad)
dec
movs
outs
jmp
out
add
mov
(bad)
ds
jo
leave
cmp
daa
sar
loope
xor
or
es
mov
mov
ins
inc
out
in
jbe
unpcklps
push
sbb
mov
lahf
ja
sbb
cmp
fisttp
rol
mov
fcom
sbb
repz
push
data16
cmc
push
push
push
xchg
mov
clc
int3
stos
ja
mov
aas
mov
jecxz
ds
(bad)
dec
xchg
jno
test
sar
mov
mov
arpl
xor
nop
dec
inc
push
pushf
jns
inc
add
mov
or
fwait
in
fiadd
push
mov
out
xchg
mov
pop
lock
add
aaa
inc
jecxz
jbe
movsx
dec
outs
fcmove
sbb
inc
cli
inc
dec
daa
pop
je
retf
aad
mov
jae
push
mov
jg
sub
inc
mov
popa
shr
repz
pusha
xor
adc
add
lock
mov
adc
daa
scas
lea
retf
mov
loope
or
inc
xor
mov
push
or
mov
scas
(bad)
push
inc
push
outs
ins
inc
adc
mov
imul
mov
and
ins
test
cmps
or
xchg
mov
xchg
movs
and
retf
mov
or
test
sbb
adc
and
fist
or
arpl
or
scas
adc
rcl
je
ins
mov
adc
sahf
bound
cdq
sub
inc
xor
test
outs
ins
and
xor
pop
push
in
lods
pushf
inc
popf
push
mov
xchg
xor
xor
or
sub
out
or
imul
xor
outs
or
mov
scas
fisubr
xlat
std
xchg
jmp
push
mov
lea
pop
adc
retf
call
or
ins
std
nop
gs
sub
adc
inc
sub
stos
test
dec
outs
movs
lahf
(bad)
mov
sbb
inc
and
(bad)
or
mov
(bad)
stos
loope
enter
push
mov
push
mov
(bad)
xor
or
inc
in
sub
loope
arpl
and
sub
mov
mov
sbb
inc
fistp
cli
pop
aas
cmp
into
cmps
call
jae
push
jge
es
sub
sbb
and
repz
in
aas
data16
popa
xor
jp
out
pop
mov
and
jae
add
sar
scas
lods
sbb
pop
outs
test
out
xchg
sbb
adc
jge
movs
in
das
lds
imul
xchg
addr16
or
xchg
push
xor
test
mov
mov
lds
scas
jl
fmul
jno
shl
sbb
sahf
xchg
in
cmp
cs
mov
lods
dec
cmc
adc
jne
xchg
ror
enter
or
ds
leave
sbb
adc
call
cmp
cmp
or
xchg
aam
sbb
push
inc
jg
jl
mov
scas
sub
pop
cli
push
ja
cmp
imul
bound
arpl
sub
mov
and
stc
xchg
jns
mov
or
(bad)
cdq
sub
stc
add
icebp
and
lock
add
mov
iret
push
or
jl
and
or
pusha
retf
aas
(bad)
mov
or
jmp
cs
jbe
jns
cmp
jbe
je
test
lds
stos
xchg
adc
add
add
stos
aad
pop
hlt
adc
push
and
dec
leave
inc
dec
aad
cmp
sti
bound
iret
stos
enter
ins
xlat
xchg
jg
hlt
pop
push
xchg
fdiv
gs
cmp
loop
dec
shl
mov
(bad)
pop
ror
call
mov
fnstcw
sbb
icebp
stos
sbb
jno
pop
sub
jbe
adc
cwde
arpl
shl
call
jge
nop
mov
or
test
in
sbb
pop
inc
rol
add
cmp
inc
push
mov
cmp
pop
test
mov
in
movs
fcomi
or
leave
test
sub
dec
loop
fcom
or
pop
loopne
test
shl
nop
cs
ret
push
(bad)
jbe
push
pop
inc
daa
in
in
test
pop
stos
fdivr
pop
stos
dec
push
popa
jno
out
pushf
adc
pusha
out
push
(bad)
and
sub
lock
icebp
add
es
and
inc
ror
inc
or
sbb
and
mov
and
cli
xchg
mov
cwde
push
mov
xor
and
or
add
ss
inc
fild
adc
(bad)
jg
fidiv
push
mov
sbb
inc
in
ficomp
mov
sbb
cwde
bound
mov
iret
ins
add
inc
push
jb
mov
mov
sbb
mov
cmp
and
(bad)
popa
call
mov
cmp
bnd
je
int3
loop
dec
leave
pushf
ret
sub
in
test
inc
sub
or
mov
mov
leave
mov
xor
inc
nop
shl
ret
xor
movs
adc
ins
cmp
jae
imul
sbb
push
outs
adc
xchg
(bad)
mov
in
xchg
hlt
jle
xchg
in
jp
cmps
push
xchg
or
std
cmps
jecxz
mov
xlat
jns
mov
xchg
pushf
jl
dec
add
test
retf
and
mov
mov
push
pop
mov
test
fild
jae
mov
popa
and
mov
xchg
pop
mov
ret
pusha
into
mov
call
movs
dec
stos
movs
xor
out
sbb
jae
adc
or
icebp
fldpi
repnz
mov
stos
and
sub
sub
pop
fmul
sbb
push
xchg
movs
bound
xor
mov
in
cmp
cmp
jne
or
add
add
mov
add
xchg
inc
jle
aad
push
mov
cdq
dec
test
ror
add
fistp
mov
outs
mov
or
inc
into
xchg
imul
xlat
retf
movs
inc
push
push
xchg
xchg
push
mov
add
fs
xchg
push
lock
pop
dec
test
dec
lods
fstp
and
or
adc
mov
adc
lea
mov
adc
mov
push
enter
jae
and
push
add
pop
gs
mov
call
mov
sub
cmp
dec
test
and
jg
pop
xchg
mov
jl
jno
movs
nop
(bad)
mov
hlt
inc
pushf
loope
adc
fcom
scas
popf
pop
xchg
stos
lea
xlat
inc
jp
push
sub
mov
scas
xchg
sub
into
mov
xor
dec
push
shl
adc
push
dec
cs
pushf
push
dec
inc
hlt
dec
mov
fs
cmp
ret
add
jnp
cs
clc
xchg
cmps
int3
dec
xchg
jmp
les
jl
mov
and
out
mov
or
into
sub
mov
cmp
add
repz
stos
leave
je
retf
sbb
std
pop
adc
out
dec
push
into
shl
jne
xchg
sbb
stc
jno
int
push
cld
dec
inc
(bad)
call
fadd
jge
add
xor
cs
cdq
in
je
xchg
mov
jno
jmp
adc
sbb
add
nop
enter
mov
lods
mov
pushf
push
pop
push
popf
push
jae
mov
adc
xor
cmp
lock
push
fbstp
arpl
lea
cs
sbb
jno
jno
call
xor
scas
mov
imul
jns
jge
inc
inc
sbb
mov
push
dec
inc
int3
out
mov
push
dec
xor
out
std
push
cmc
test
pop
repnz
or
mov
outs
addr16
clc
in
clc
inc
movs
add
add
icebp
arpl
sub
and
push
cs
(bad)
cmp
adc
retf
sub
pop
add
cmps
or
sub
sub
sbb
sbb
in
test
mov
cmp
in
ins
push
leave
aam
stos
adc
inc
loop
push
xor
adc
fsubr
(bad)
sbb
fstp
in
cmp
push
lods
and
fistp
xchg
push
loop
(bad)
jge
retf
imul
push
cmps
int
pop
and
jl
pop
inc
xor
or
cmps
out
sub
or
push
je
ror
mov
push
mov
push
jne
jmp
mov
mov
xor
fsubr
pop
xchg
cmp
cmp
jp
mov
mov
jmp
aaa
dec
shr
adc
mov
or
std
push
xor
cli
jmp
mov
aam
popa
jo
mov
das
xor
dec
out
pop
cmp
data16
sbb
add
cmp
hlt
push
retf
test
fwait
mov
mov
jae
dec
fbld
loope
push
and
sub
dec
cmps
jmp
repz
aad
mov
xor
hlt
push
push
fidiv
mov
and
bound
add
mov
ins
fadd
mov
in
nop
fadd
jne
jp
push
or
jg
dec
xlat
addr16
xchg
stc
add
(bad)
neg
mov
lock
push
mov
push
push
jbe
shl
inc
inc
fnstcw
cmps
pop
jns
retf
xor
push
sub
adc
rcr
jmp
xor
inc
push
test
test
add
mov
(bad)
fcom
dec
xchg
jg
pusha
ja
rcr
clc
shr
out
mov
movs
test
hlt
sbb
jo
inc
mov
push
outs
gs
lods
jnp
adc
rol
pop
fidiv
cmc
hlt
xchg
mov
push
add
retf
sbb
sub
inc
neg
js
sbb
mov
pop
cdq
gs
sub
cld
arpl
sti
std
(bad)
push
sahf
xor
jns
lea
stc
jl
mov
fidivr
pop
sbb
mov
pop
ja
(bad)
jge
mov
(bad)
inc
ds
xchg
aas
inc
in
into
jns
sbb
outs
adc
rol
es
inc
pusha
lds
fs
jmp
lds
fld
addr16
fidivr
cmp
loop
aam
pop
mov
xchg
dec
mov
or
or
adc
jmp
mov
clc
dec
or
test
and
sbb
cdq
jecxz
jmp
mov
sahf
data16
rcl
pop
jmp
pop
inc
xchg
mov
cs
pusha
cmp
push
scas
movs
inc
xchg
retf
and
xlat
pop
les
sub
sbb
fwait
add
hlt
js
adc
jae
out
mov
in
mov
aas
adc
retf
fwait
ror
pop
sbb
retf
sbb
into
(bad)
push
retf
adc
dec
push
repnz
or
add
or
test
xor
out
sbb
test
mov
push
jle
pop
loopne
pop
sbb
nop
cmp
mov
adc
shr
ss
out
daa
inc
add
mov
dec
retf
aad
ret
shl
icebp
jg
scas
out
adc
cdq
fldcw
mov
call
pop
and
test
(bad)
shl
scas
inc
xchg
lahf
popf
add
je
ficom
pop
lahf
data16
xor
xchg
jl
aas
sbb
sbb
xor
cmc
mov
xor
loopne
pop
in
ret
dec
cwde
add
test
jns
mov
ror
popa
jne
lahf
jmp
cmps
fnsetpm(287
sahf
add
aad
push
gs
cmc
es
shl
outs
sub
add
push
mov
sbb
sub
in
pop
movs
add
repz
jae
mov
(bad)
push
fwait
or
ss
xchg
push
mov
scas
mov
mov
jns
bound
push
cmp
and
pop
mov
mov
cwde
sub
inc
mov
nop
mov
sbb
and
dec
mov
and
idiv
push
loopne
shl
and
jl
and
jmp
xchg
sbb
cmp
and
adc
add
mov
lods
test
push
shr
push
rol
std
sub
fs
dec
jg
ret
jecxz
jnp
mov
(bad)
ficom
jo
mov
cld
arpl
cmc
push
fdiv
jo
jmp
movs
xchg
or
or
mov
push
cmp
addps
out
or
sti
jo
jno
push
vmovntpd
pushf
movs
mov
mov
std
xchg
lock
and
movs
mov
imul
lds
mov
xchg
(bad)
adc
sub
loopne
mov
adc
mov
popa
push
sbb
or
push
cmc
cmp
jbe
mov
add
jb
adc
fs
cmp
mov
nop
and
mov
xchg
arpl
mov
xor
cld
push
fs
leave
push
mov
mov
stos
sbb
inc
cld
dec
pusha
icebp
mov
(bad)
mov
sub
or
xor
repz
xchg
popf
out
mov
push
imul
into
(bad)
in
cdq
or
movs
add
mov
adc
aaa
sub
(bad)
out
sbb
out
cdq
mov
push
sub
leave
pop
pop
ss
loopne
pop
out
pop
sar
lock
lds
jns
out
jb
mov
outs
idiv
addr16
leave
push
bound
sti
mov
aas
in
and
aaa
cmp
fisubr
xchg
inc
dec
push
test
loope
push
add
mov
outs
das
outs
push
adc
mov
cld
lea
or
outs
ret
test
inc
mov
xlat
test
(bad)
xor
and
aam
jbe
loop
dec
adc
jnp
xor
inc
adc
rcl
mov
das
push
loop
ins
fsub
sbb
jp
jo
lea
xor
fstp
add
call
mov
jmp
stos
int
stos
xadd
jp
mov
mov
push
iret
sbb
pop
xor
fisttp
pop
push
push
int
xchg
pop
and
jns
cwde
lds
pcmpgtb
retf
gs
and
sahf
mov
ret
int
outs
leave
mov
mov
dec
xchg
in
daa
cmp
cmp
jmp
fst
push
pop
jmp
inc
bnd
cld
sbb
dec
fistp
xor
mov
not
cld
mov
xchg
pop
sub
aas
pop
les
dec
adc
outs
leave
adc
mov
ret
sbb
icebp
(bad)
addr16
ja
mov
fisub
inc
pop
mov
mov
in
retf
ins
ja
cs
inc
pop
mov
ret
xchg
stc
push
js
dec
in
out
xor
push
or
in
push
sahf
mov
sbb
bound
and
xchg
lock
inc
(bad)
rcl
adc
inc
sbb
xchg
shl
ins
jmp
rcl
xor
fld
push
mov
sub
pusha
sbb
les
cmp
cdq
fwait
mov
pop
cmc
mov
ss
push
sub
inc
repz
or
push
fadd
cmp
rcr
in
inc
dec
cs
jns
mov
fistp
mov
pop
cmp
pop
dec
pop
mov
inc
inc
fcmovne
(bad)
leave
mov
cs
not
rcl
int
and
xchg
aas
mov
mov
push
sub
mov
dec
add
mov
pop
popa
enter
pop
xchg
popa
outs
inc
cs
fist
sbb
int
jle
mov
fs
sahf
or
outs
ins
stos
repz
sub
sub
inc
xchg
push
dec
fsub
dec
push
cld
mov
shl
stos
out
(bad)
movs
jp
enter
cmp
fnstenv
test
sbb
lods
mov
fcomp
xchg
(bad)
(bad)
and
mov
jge
or
pop
mov
jle
mov
and
int
or
cld
dec
sub
mov
gs
dec
adc
xchg
sahf
test
adc
fnsave
retf
repnz
mov
popf
ret
sub
or
push
fist
(bad)
call
out
add
movs
test
sbb
mov
iret
inc
dec
pop
push
daa
xor
bound
adc
stos
dec
lods
gs
pop
add
fs
jge
(bad)
push
xor
and
test
dec
fnstsw
push
in
out
ins
call
cmp
pop
in
loop
outs
mov
into
sub
adc
push
stos
pop
mov
and
and
mov
out
xchg
rol
mov
retf
add
and
sub
outs
xchg
ss
and
popa
push
hlt
pop
cdq
movs
inc
in
nop
push
jb
movs
jnp
push
dec
jo
mov
outs
fnsave
call
jnp
push
xchg
arpl
sbb
cmps
add
mov
xchg
xchg
push
jmp
lds
fdivr
int
cmps
dec
and
add
pop
adc
xor
lds
imul
dec
out
cmps
sahf
dec
add
arpl
aad
(bad)
mov
adc
inc
loop
inc
mov
jmp
jno
mov
cli
loopne
ins
pop
adc
add
es
dec
xchg
in
addr16
sub
add
adc
mov
ja
jl
jnp
cmps
test
xchg
xor
je
(bad)
call
xor
add
jmp
push
cwde
call
daa
shl
movs
xchg
dec
test
clc
clc
cdq
xor
jo
dec
out
pushf
mov
fist
cmps
movs
mov
pop
cld
pushf
sbb
out
inc
outs
and
sub
mov
dec
inc
stc
fild
push
mov
pushf
push
jb
pop
mov
mov
cs
int3
popa
dec
mov
aas
push
cmp
sbb
out
outs
push
mov
jmp
add
add
addr16
adc
inc
push
mov
xchg
cmp
add
push
lods
js
adc
xchg
add
or
xchg
in
out
or
mov
cmp
aaa
fisubr
movs
pop
mov
fs
retf
daa
jne
(bad)
mov
adc
shl
test
lods
mov
or
mov
jb
pop
(bad)
mov
arpl
add
add
mov
fs
shl
push
adc
mov
fdiv
mov
pop
ins
dec
cs
push
mov
test
add
or
in
in
xor
call
sbb
lahf
movs
xchg
outs
xchg
push
xor
mov
mov
fsub
dec
xchg
retf
scas
fidiv
xor
push
jl
xor
inc
dec
or
mov
dec
les
sub
xchg
pop
mov
pand
daa
dec
push
scas
xchg
push
rol
test
mov
jns
fisubr
sahf
movs
jns
popa
test
mov
xchg
xchg
lea
sbb
out
xchg
loopne
(bad)
aaa
ror
imul
neg
data16
imul
sahf
jnp
mov
add
inc
push
std
xlat
sub
gs
lea
repnz
outs
test
xor
inc
mov
mov
pop
xchg
std
pop
jb
jns
pop
mov
jge
adc
sub
movs
cmp
mov
push
push
test
push
loope
xor
daa
mov
(bad)
mov
adc
mov
movs
lods
inc
push
clc
mov
dec
and
cmc
xchg
outs
jo
cmp
fwait
jecxz
jp
test
cmps
sbb
mov
enter
dec
push
pop
leave
neg
icebp
adc
imul
and
inc
sub
addr16
or
dec
out
xchg
es
shl
or
inc
ins
outs
out
mov
fwait
out
enter
adc
aas
test
pop
dec
fild
adc
repnz
xor
and
or
sub
add
inc
into
test
jp
xchg
ins
nop
imul
sub
sbb
movs
adc
fistp
mov
xchg
dec
or
imul
mov
lods
cli
out
cmc
or
ret
add
cld
pop
sbb
mov
xchg
pop
push
sub
sbb
aad
icebp
test
push
or
jp
lods
fisub
xchg
dec
and
call
xlat
pop
and
icebp
movs
in
sub
das
sbb
xor
xchg
jbe
and
jnp
xchg
add
hlt
sub
jge
mov
inc
and
add
sbb
pop
rol
aas
(bad)
retf
and
or
mov
in
(bad)
movs
sub
shl
cmp
xchg
shr
cmp
xor
pop
sub
dec
out
ins
fdivr
mov
jg
sbb
sti
test
xor
mov
mov
pop
mov
or
cli
fisubr
push
dec
in
outs
pop
mov
pop
jbe
cmp
adc
outs
sub
mov
mov
pop
or
retf
xchg
mov
int3
inc
jb
test
mov
das
je
xlat
push
bound
mov
or
add
sbb
fild
(bad)
add
scas
sahf
mov
iret
xor
dec
pop
cmp
aad
or
push
(bad)
cmc
mov
fist
pop
pop
out
js
(bad)
sahf
shl
mov
mov
daa
jmp
mov
loope
sub
jge
cmp
adc
imul
add
jge
jbe
in
cmps
stos
cmps
add
fistp
stc
inc
lahf
aad
dec
dec
repz
cld
xchg
xchg
bound
es
dec
loope
and
xchg
aad
mov
movs
icebp
push
in
(bad)
sbb
xchg
popa
mov
rcl
and
sbb
dec
leave
ja
sbb
add
sbb
pop
ins
dec
aas
jno
mov
movs
rcr
add
sbb
mov
dec
test
mov
outs
and
cmp
xor
(bad)
ins
inc
mov
dec
clc
lahf
gs
push
xchg
sub
cwde
pushf
mov
mov
adc
mov
pop
add
jns
cmp
cmp
inc
ins
inc
dec
cmps
cdq
ror
pop
fbld
outs
sbb
mov
dec
fistp
(bad)
leave
cmps
stos
xor
lods
(bad)
cmp
or
mov
and
inc
iret
inc
xor
pop
popa
rol
cdq
faddp
xor
cli
pop
sbb
jmp
sbb
add
cmp
jns
pushf
xchg
scas
mov
mov
xor
je
mov
pop
pop
mov
inc
mov
rcl
std
std
xchg
mov
ja
jb
scas
sub
add
scas
inc
inc
cmp
mov
and
aam
or
and
dec
pop
ja
jmp
aad
or
sbb
imul
xchg
push
dec
ret
in
test
out
sahf
pop
nop
sub
addr16
xor
add
cmp
mov
das
mov
xchg
mov
outs
fsub
push
push
bound
movs
add
inc
pop
stos
jge
jmp
les
push
imul
std
mov
jmp
mov
frstor
push
add
out
jg
inc
cmp
push
in
jge
fild
fcom
iret
xchg
xchg
sbb
cmp
cmp
sbb
sbb
lahf
repnz
sub
(bad)
jbe
test
sbb
out
imul
std
xlat
pop
ins
mov
jle
cmp
aam
ins
aas
and
sub
xor
lock
mov
ins
xchg
rcl
sbb
sub
pop
xchg
lea
ror
mov
and
arpl
imul
or
and
or
inc
icebp
adc
mov
fcomp
sub
lahf
mov
mov
adc
mov
push
pusha
cmp
into
mov
sar
sbb
cmp
das
stos
cmps
jb
jae
sahf
stos
fist
xor
ret
push
movs
int3
mov
dec
std
ins
call
xor
inc
(bad)
sahf
ds
in
or
inc
jmp
enter
stc
or
mov
push
jmp
adc
push
cmps
sahf
push
out
shl
or
shl
call
push
push
sub
lea
sbb
dec
ja
mov
jo
adc
test
lock
stos
xor
rcr
jp
mov
adc
sahf
dec
sbb
dec
cli
xchg
sbb
adc
xchg
cmp
and
fidiv
repz
dec
xlat
movs
rol
movaps
(bad)
(bad)
movs
adc
out
mov
pop
jnp
push
add
add
mov
cmp
xor
jmp
xchg
arpl
stc
je
cmp
cli
adc
mul
dec
add
dec
or
sbb
inc
repnz
inc
retf
inc
inc
inc
mov
xor
ins
push
iret
and
test
mov
or
jmp
into
std
ss
xor
and
mov
jg
fs
imul
and
xchg
inc
bound
mov
dec
xor
jmp
mov
inc
sub
scas
into
push
mov
cmp
daa
cmp
cmp
mov
rcr
xor
adc
jge
ins
jb
sar
jb
jge
adc
sahf
push
mul
enter
xor
pushf
(bad)
mov
adc
push
aam
fsubr
mov
dec
cwde
stos
sub
xchg
dec
icebp
mov
push
jge
out
or
(bad)
loope
push
in
test
xor
sbb
mov
xor
adc
push
jle
adc
test
leave
test
sahf
mov
mov
dec
xchg
sub
scas
inc
retf
add
jg
cmps
ret
pop
mov
or
sti
shl
out
xchg
jno
div
dec
pop
(bad)
cwde
add
fisubr
dec
imul
adc
adc
mov
xchg
mov
cmps
mov
arpl
fmul
les
shl
inc
sbb
pop
jo
inc
dec
pop
push
cdq
int
lds
jbe
int
sub
out
out
or
imul
es
adc
les
add
mov
and
int3
fsubr
jns
mov
cs
das
sbb
lods
jo
jne
int3
in
lahf
(bad)
and
cs
in
fsubr
in
push
mov
lea
pushf
fisttp
or
jmp
mov
and
mov
ss
out
mov
add
mov
mov
fild
lock
cmp
sbb
(bad)
sub
sbb
xchg
cmp
dec
and
xchg
data16
vmrun
mov
in
inc
scas
mov
test
mov
inc
xchg
mov
dec
and
xor
inc
dec
jmp
ret
adc
jp
inc
push
jno
aad
and
adc
popf
shl
and
xchg
cmp
stos
pop
jle
imul
ror
jno
inc
xchg
push
sub
sub
jecxz
stos
xchg
repz
and
ins
imul
je
mov
or
xchg
dec
adc
mov
imul
or
add
mov
sub
pop
xor
int3
mov
nop
xchg
cmp
repnz
test
pop
mov
mov
stos
fldcw
mov
cli
inc
sub
sbb
in
les
push
push
test
cmp
mov
fsubr
fdiv
cmp
out
fidivr
(bad)
std
(bad)
std
in
fisttp
lahf
rcr
xchg
sub
or
jl
(bad)
and
ret
fisttp
jae
outs
dec
popf
inc
test
xchg
pop
push
cmc
leave
cmps
test
ror
div
icebp
pop
loop
sti
pop
sbb
cmp
call
(bad)
and
lahf
adc
lods
clc
movs
push
jle
addr16
mov
dec
xor
(bad)
or
shl
jg
inc
test
mov
xchg
or
xchg
mov
adc
in
fdiv
pop
enter
mov
xor
in
aaa
dec
cmp
mov
xlat
out
push
ins
rol
xchg
xor
adc
stos
mov
mov
pop
cmp
adc
movs
mov
mov
cmp
adc
ret
es
sahf
or
lds
push
sar
push
stos
popf
xchg
push
clc
or
and
mov
xchg
(bad)
int3
push
xor
aad
bound
mov
mov
inc
cmp
(bad)
loope
xchg
mov
sub
cmp
inc
aam
push
stos
sbb
pop
jp
push
(bad)
repz
jns
lds
scas
pop
sub
dec
jp
cmp
ins
out
syscall
and
lock
(bad)
pop
push
push
iret
fnstenv
dec
ss
or
and
pop
enter
sub
add
or
jbe
pushf
xor
push
sub
inc
jp
jne
in
cmps
mov
out
icebp
pop
rcl
push
repz
cmp
jmp
mov
cmc
sahf
stc
test
icebp
pop
inc
inc
jp
mov
cmps
push
clc
add
sbb
arpl
jne
fidivr
lea
daa
ss
mov
jmp
sbb
xlat
imul
cwde
xor
lea
mov
add
mov
mov
xchg
sbb
or
push
lea
int
push
pop
xor
rcr
repz
xor
(bad)
jle
bnd
ficom
imul
test
cdq
cdq
div
js
lea
dec
mov
xchg
mov
ret
jmp
add
idiv
adc
inc
mov
test
sbb
xchg
bound
(bad)
cs
(bad)
nop
test
arpl
out
pop
shr
mov
cmp
fdivr
pop
jae
popf
cmp
inc
mov
out
iret
xor
stc
gs
and
cmps
cmp
dec
into
ret
mov
add
mov
pop
imul
data16
retf
(bad)
dec
sub
mov
add
lods
sar
jo
loop
data16
mov
inc
mov
loopne
inc
lea
or
inc
inc
cwde
imul
add
dec
movs
cmp
fld
mov
push
adc
add
ss
pop
mov
cmp
cmps
xor
arpl
je
pop
pop
xchg
sub
or
dec
sar
mov
call
test
aam
and
mov
adc
and
(bad)
loop
les
mov
scas
sub
add
icebp
cmps
push
dec
mov
and
and
mov
mov
jg
rcl
in
das
loopne
enter
xchg
das
fs
mov
cli
pop
jp
cld
jb
cmp
jne
jle
or
sub
push
out
sbb
xchg
shr
cdq
pop
mov
in
lock
mov
dec
cmp
div
and
add
mov
push
mov
push
jne
jle
lds
adc
inc
cs
lods
int3
adc
and
dec
out
mov
add
sbb
xor
cmp
(bad)
sub
in
rcr
and
push
out
ret
add
inc
xchg
lock
mov
mov
sti
add
pop
outs
jmp
ret
xor
stos
cmp
aam
and
cmp
sbb
je
adc
in
jnp
and
pop
sbb
lds
(bad)
and
shr
adc
adc
push
mov
shl
mov
cdq
sti
mov
cmps
sub
adc
sub
dec
aam
jo
daa
lahf
jle
addr16
or
mov
mov
mov
mov
mov
out
aas
sub
popa
xor
pop
lahf
(bad)
cmp
fcom
out
fbld
or
out
out
int3
inc
les
mov
and
ret
icebp
scas
and
push
repnz
lods
xor
jmp
cmp
mov
div
rcr
add
out
cld
mov
push
inc
addr16
pop
test
xchg
xchg
pop
mov
iret
punpckhdq
(bad)
lock
(bad)
push
mov
repnz
in
pop
imul
xor
mov
sahf
dec
jg
mov
test
cs
add
or
mov
sub
cdq
enter
pop
lods
sub
xchg
stos
iret
xchg
movs
jne
push
cld
(bad)
mov
stos
lods
ins
sahf
mov
test
pop
cld
test
sbb
xchg
jl
mov
das
ins
xor
add
cli
bnd
cmp
jecxz
cmp
fsubr
retf
stc
jl
and
push
sti
xlat
lock
xor
mov
push
imul
pop
mov
ja
sub
pop
sub
push
pusha
mov
mov
pop
jge
adc
mov
inc
scas
dec
ds
(bad)
imul
int3
retf
or
jb
ret
xor
fcmovu
rol
cmps
lea
pop
jns
iret
add
pop
out
movs
aad
jb
dec
das
or
(bad)
call
xor
xor
mov
ret
xchg
data16
jno
adc
mov
leave
mov
pop
int3
iret
cld
pop
ret
sub
mov
movs
push
ss
sar
inc
cmp
jae
daa
pop
jno
out
or
(bad)
sbb
ror
call
pop
mov
xchg
jnp
loopne
(bad)
hlt
aam
lock
test
mov
das
stc
pusha
dec
or
xor
call
add
in
xor
pushf
jg
mov
arpl
xchg
and
cli
sub
jle
cmp
ss
jno
fcmovu
xor
lods
mov
(bad)
fdiv
int
fidiv
mov
dec
jno
jle
fwait
push
out
sub
fwait
imul
xor
aaa
outs
iret
scas
xor
icebp
inc
inc
dec
not
lods
push
iret
and
aad
es
mov
mov
pop
das
lds
jbe
leave
cmp
mov
ss
retf
pop
lods
into
cdq
fdiv
pop
sbb
aad
mov
hlt
scas
mov
mov
pop
cmp
mov
and
mov
(bad)
jns
mov
xchg
cmp
mov
xor
mov
rcl
popa
and
dec
pop
rcr
fidivr
pop
push
cdq
sub
mov
mov
in
jl
push
sahf
(bad)
shr
lods
dec
shl
push
and
lock
push
xor
dec
cmovns
push
jbe
push
repnz
sbb
xchg
cmc
xchg
icebp
in
mov
pop
and
aaa
push
icebp
pop
and
popf
lods
rcl
xor
xor
repz
rcr
(bad)
xchg
out
push
sbb
lods
jl
int
test
out
inc
or
bound
xlat
cwde
neg
mov
adc
jp
jmp
mov
adc
rcr
fstp
lods
jg
int3
imul
lds
mov
push
sub
inc
outs
push
xor
inc
cmps
pop
or
scas
gs
into
mov
jnp
add
inc
sub
pop
or
add
mov
(bad)
pop
(bad)
ret
and
ror
add
scas
xchg
mov
xor
jl
xchg
dec
jp
aam
sub
mov
push
(bad)
in
adc
xor
push
loop
sar
add
mov
retf
xchg
pop
and
push
adc
and
in
sbb
repz
cmp
sub
aam
pop
ins
pop
test
out
adc
xchg
inc
enter
retf
mov
hlt
dec
scas
push
inc
in
cmp
jl
push
adc
lock
stos
into
mov
mov
in
xchg
mov
outs
shl
jns
pop
rcr
sub
sub
jg
xor
adc
mov
(bad)
mov
aam
inc
arpl
mov
sub
pusha
cdq
int3
sbb
jae
dec
mov
shl
mov
xchg
inc
or
mov
xor
shr
pushf
ret
or
add
movs
arpl
nop
jg
inc
fmulp
cmp
(bad)
sub
daa
inc
aas
push
mov
(bad)
dec
and
sub
cmp
jb
mov
stos
pop
mov
pop
gs
int
mov
xor
xlat
xchg
sahf
cmp
es
nop
ret
or
gs
push
rcr
ss
mov
stos
lds
push
aad
(bad)
(bad)
push
mov
sub
in
daa
push
test
mov
pop
jmp
int3
mov
push
jge
scas
out
pop
ins
rcr
xchg
push
cmps
xchg
sti
jbe
xor
add
fst
jmp
movs
mov
mov
retf
ja
daa
cld
add
mov
and
pop
cmp
or
pop
add
outs
jae
sub
nop
cmp
pop
cmp
daa
(bad)
hlt
xor
mov
pop
xor
loope
mov
ins
cli
loope
xor
and
adc
in
std
call
movs
mul
out
jge
rol
ret
fist
mov
fld
call
sub
mov
mov
daa
xor
int3
(bad)
jp
mov
arpl
pop
es
(bad)
xlat
sub
lods
ret
(bad)
lock
(bad)
arpl
and
(bad)
cs
sub
ins
out
jnp
outs
push
lds
add
push
sub
arpl
jnp
mov
cli
test
clc
mov
and
inc
cs
call
adc
int3
fild
pop
fldl2e
aaa
xchg
adc
das
xchg
idiv
ret
addr16
xchg
jmp
loopne
xchg
ds
sub
mov
sub
pop
pop
mov
in
dec
in
xchg
movs
dec
mov
jg
aad
cmp
mov
jmp
jbe
rcr
mov
jno
nop
dec
mov
xor
mov
adc
inc
pop
aaa
xor
push
sub
inc
sahf
out
mov
imul
and
dec
xor
sub
or
xchg
fisttp
sbb
aad
mov
lock
mov
ret
xor
push
ror
es
xlat
sbb
sub
jo
js
repz
mov
push
popf
cs
or
and
mov
jnp
mov
mov
call
movs
fld
dec
test
push
cmp
aas
dec
bound
pop
inc
xor
ja
test
ds
adc
(bad)
mov
adc
push
out
jo
test
inc
dec
ja
add
in
pop
outs
popf
test
clc
push
iret
fsub
clc
xchg
xor
add
adc
ins
(bad)
pop
jg
sbb
add
cmps
data16
or
adc
ret
mov
loop
add
jg
int
popa
hlt
ss
xlat
ss
mov
sub
jmp
sub
or
sbb
cdq
inc
aaa
mov
xchg
dec
jnp
stos
add
not
sahf
fstp
outs
in
cmc
push
mov
inc
sub
xor
loope
dec
out
cmp
pop
xor
call
fwait
retf
mov
test
pop
sbb
xor
fsubr
loop
pusha
addr16
stc
mov
out
sub
ds
cli
loop
jne
xlat
mov
cwde
mov
fisub
or
cmp
imul
repz
lahf
out
(bad)
(bad)
loop
mov
(bad)
mov
adc
test
or
inc
mov
lds
stos
imul
mov
cdq
or
out
movs
out
lds
lods
xor
pop
data16
mov
mov
loope
pop
sti
adc
mov
pop
out
xchg
fnstsw
pop
call
ins
retf
mov
dec
pop
inc
pop
xor
scas
jle
adc
and
cwde
add
adc
sbb
imul
js
lock
jp
inc
mov
retf
call
cmp
cmp
mov
push
jg
add
jno
lea
fld
ret
iret
jmp
aas
aas
das
daa
xlat
sub
aam
xchg
push
cmp
sub
dec
ffreep
pop
xchg
icebp
dec
into
push
xor
stos
movs
bound
cmp
sbb
push
add
sub
push
ss
(bad)
jmp
sub
out
jno
int3
ja
stc
xor
pushf
xchg
sub
jp
ror
jnp
pop
cld
adc
pop
or
adc
pop
mov
inc
xchg
adc
mov
cmp
or
jae
js
add
and
and
dec
jge
rol
loopne
fsub
js
xor
leave
adc
test
jno
mov
js
mov
(bad)
sub
outs
jge
pop
mov
dec
mov
pop
sar
cmps
xor
sub
cmps
inc
and
rcr
dec
mov
and
jmp
call
mov
xor
xchg
jmp
in
mov
and
mov
cs
pop
push
xchg
push
push
out
cli
clc
xchg
cmps
clc
les
inc
sub
ror
mov
mov
(bad)
cmps
cmc
dec
pop
or
cmc
mov
cmps
xchg
fcomp
(bad)
xor
test
fadd
cmc
daa
repz
loopne
out
inc
mov
cmc
test
mov
mov
mov
inc
push
cmp
inc
imul
bound
mov
cmps
jge
inc
xor
call
fsubr
pushf
(bad)
ds
sbb
jbe
push
jnp
loopne
jne
cmp
aaa
std
test
ss
mov
push
aaa
sbb
jmp
jno
fwait
into
inc
retf
add
cli
xchg
xor
xchg
out
sbb
mov
cmp
or
repnz
push
cmps
scas
or
or
and
ds
inc
lahf
sbb
pushf
fnsave
xor
(bad)
xlat
jbe
xchg
jmp
sub
jne
popf
xlat
icebp
call
or
out
sbb
les
jne
push
cli
mov
cmp
mov
pop
ins
rcr
sti
xor
arpl
push
pop
(bad)
(bad)
test
adc
inc
dec
pop
(bad)
push
and
xchg
call
movq
mov
dec
and
repz
fistp
and
jg
fist
xchg
dec
retf
push
mov
jecxz
cmp
jmp
xchg
loope
out
cmp
pop
add
test
inc
sub
cmp
xchg
fild
imul
cld
sub
cld
dec
ss
jnp
push
test
sub
push
add
jno
and
test
or
cwde
retf
dec
xchg
int
imul
shr
hlt
push
pop
inc
or
(bad)
and
mov
adc
mov
sub
test
test
adc
test
cmp
out
out
mov
out
scas
dec
mov
add
lds
xchg
lahf
aaa
or
call
pop
jbe
adc
xchg
inc
adc
cmp
xor
xchg
mov
add
push
pusha
or
repnz
xchg
daa
outs
cwde
sahf
idiv
jle
addr16
inc
ja
inc
pop
push
outs
call
sbb
inc
test
jbe
adc
dec
fs
shl
cdq
loop
pusha
pushf
retf
mov
jge
lods
pop
imul
dec
sahf
(bad)
fld
daa
cs
rcl
imul
call
dec
mov
mov
xlat
mov
jecxz
push
sahf
les
stos
scas
jae
jl
push
sbb
add
or
xchg
pop
add
inc
repz
enter
pop
in
repz
and
sub
in
popf
jmp
aas
fs
xchg
popa
cmp
mov
pusha
sub
sahf
sbb
fiadd
or
cmps
add
(bad)
les
repnz
sbb
jmp
pushf
test
idiv
loope
mov
dec
mov
dec
xchg
and
and
into
(bad)
stos
dec
cmp
mov
or
(bad)
xchg
aas
jb
inc
mov
and
or
inc
stos
shl
push
lea
imul
xor
cmc
inc
fimul
push
addr16
repnz
daa
sub
scas
popf
xor
leave
fdivr
sub
(bad)
push
inc
(bad)
jno
inc
jae
dec
cld
sub
add
xor
in
add
mov
stc
pop
xchg
cmp
jmp
into
xchg
sbb
dec
or
xchg
out
js
inc
jmp
adc
(bad)
out
(bad)
cli
xor
aaa
mov
mov
sub
pop
fild
jmp
cmp
(bad)
xor
or
movs
push
hlt
stos
scas
push
inc
not
mov
pop
out
xchg
ror
sub
inc
pop
pushf
fimul
fmul
sub
sbb
cmc
mov
adc
pusha
daa
push
cmp
js
jmp
sbb
ror
jge
jnp
pop
adc
pop
or
mov
ret
into
add
out
inc
sbb
fistp
cld
out
lahf
push
repnz
outs
scas
pop
lods
icebp
data16
push
adc
mov
xor
fcom
push
lods
out
in
mov
(bad)
std
in
repnz
cmp
pop
pop
mov
and
cmps
mov
icebp
imul
retf
pop
mov
scas
push
in
daa
pop
fadd
jnp
sti
das
rol
into
push
mov
call
ret
mov
xor
dec
aaa
push
xchg
jle
dec
push
jnp
jecxz
jnp
ss
mov
iret
dec
mov
fs
pushf
fld
movs
in
fbstp
pop
leave
pop
or
push
stos
adc
pop
push
cdq
pop
fidivr
loopne
rcl
iret
pushf
pop
push
jecxz
movs
mov
jp
xor
dec
push
mov
inc
idiv
scas
xor
adc
inc
mov
jb
jp
xor
mov
in
push
pop
jns
pop
xor
fild
pusha
cwde
cmc
leave
push
es
push
rcr
push
xchg
pop
cmp
jo
and
ja
bound
enter
data16
bound
xchg
cmps
or
or
ror
shr
iret
pop
je
(bad)
xor
sbb
inc
sbb
imul
add
stos
ja
fisttp
shl
outs
icebp
and
push
cmp
mov
jg
inc
inc
mov
pop
sub
cmc
inc
push
lfs
sbb
out
out
popf
sub
and
repz
in
dec
ror
shl
mov
sbb
dec
push
fcmovnu
fs
mov
data16
mov
pop
jnp
in
mov
xor
push
aad
mov
push
inc
dec
js
popf
xchg
cmp
popa
arpl
mov
sbb
mov
cs
cwde
and
das
jecxz
ret
xchg
or
push
js
and
ins
dec
mov
inc
jns
movs
sahf
daa
push
sbb
inc
xchg
aad
pop
add
std
nop
imul
and
mov
cld
call
mov
nop
mul
(bad)
dec
call
clc
push
pop
mov
daa
push
in
icebp
inc
call
test
rcr
mov
cmps
test
xor
inc
mov
mov
sbb
jp
jb
push
leave
jae
aam
mov
adc
rol
mov
jg
pop
sahf
lods
push
jmp
call
mov
jae
mov
mov
aas
mov
cmps
push
clc
jne
mov
dec
sub
adc
dec
div
mov
out
jbe
(bad)
ds
jae
jecxz
cmps
pop
adc
xchg
aad
xchg
cmp
outs
push
popa
and
mov
mov
jg
stos
sub
jmp
mov
fbld
sbb
ja
push
lahf
adc
ja
loopne
jmp
movs
js
sbb
lods
rol
pop
mov
push
push
dec
daa
mov
gs
imul
mov
out
mov
mov
test
sub
call
jmp
mov
mov
gs
add
inc
sub
test
test
push
fild
xor
mov
push
inc
repnz
test
lds
jmp
es
mov
out
jb
bound
sbb
or
cmp
inc
sub
dec
cmps
sbb
cmps
mov
int
call
or
ficom
jmp
clc
std
or
mov
mov
xor
in
mov
out
xchg
lock
push
(bad)
test
sahf
adc
add
pusha
call
aas
data16
add
mov
iret
xchg
ret
call
and
inc
cli
or
inc
dec
mov
fidivr
dec
mov
outs
aam
push
ds
je
jmp
jp
xor
stc
or
or
call
retf
test
dec
cmps
sahf
adc
out
into
lock
pop
stc
pop
sahf
sub
jae
sub
mul
push
cmp
in
jo
cmp
repz
cli
mov
adc
push
mov
out
movs
or
mov
ret
adc
(bad)
pop
inc
dec
test
(bad)
sbb
adc
aaa
xchg
xchg
repnz
push
retf
xor
push
mov
pop
lods
mov
cmp
xchg
ds
std
cs
and
jb
jecxz
popa
cmc
pop
pop
fimul
push
call
pop
mov
mov
sbb
xor
xor
test
movs
pop
fcomp
or
mov
mov
popf
scas
ins
cld
ror
icebp
mov
iret
lds
loop
sub
leave
int3
adc
add
xor
sub
outs
mov
mov
cdq
stos
jne
movs
fs
mov
dec
jg
int
or
mov
test
mov
or
scas
ret
jle
add
push
and
outs
aad
mov
movs
loope
pop
cli
mov
inc
pop
or
xchg
out
(bad)
es
or
nop
out
fnstenv
xchg
mov
adc
jp
outs
fwait
ds
int3
sub
std
movs
ja
fidiv
outs
loopne
cmp
js
lods
adc
pop
ins
arpl
pop
pusha
scas
arpl
jmp
cmp
not
cmp
cld
pusha
fld
add
or
xchg
repz
xor
cwde
call
cli
stc
push
mov
aam
loop
dec
or
hlt
and
add
sbb
fist
popf
dec
dec
ss
shr
sub
fldcw
or
xchg
xchg
enter
xor
sbb
cmp
loop
mov
rcr
mov
mov
stos
add
ss
shl
int
cmp
nop
sub
xor
outs
(bad)
movs
mov
inc
(bad)
dec
push
loopne
adc
popa
cmps
fistp
hlt
sar
stos
out
ins
(bad)
in
sub
cmp
lods
pop
mov
mov
sub
lods
jl
xchg
pop
or
pop
add
test
mov
dec
fnstsw
movs
loope
fsubr
pusha
movs
jl
cmp
sbb
mov
xchg
pop
ror
push
aad
dec
mov
pop
popf
out
sub
movs
pop
fcom
ins
mov
sub
stos
add
sbb
and
sbb
pushf
not
pop
test
push
mov
cwde
cmp
mov
test
jno
sbb
or
mov
xchg
aas
test
add
jns
sbb
adc
ret
mov
in
cmp
inc
inc
sbb
add
add
jo
pop
call
dec
and
clc
mov
sub
out
leave
xchg
sub
inc
jecxz
aad
gs
push
sub
int
mov
loope
jb
(bad)
out
test
mov
call
xor
inc
push
push
xor
and
jmp
fxch
push
mov
inc
pop
or
sbb
cwde
jno
and
data16
ror
fdivr
outs
push
xor
or
(bad)
jne
in
mov
dec
daa
mov
clts
xchg
test
push
xor
sti
cmps
xchg
or
loope
sbb
mov
(bad)
loopne
add
jg
pop
test
aam
lods
pop
add
pop
jae
mov
stos
or
lahf
inc
popa
je
jmp
push
dec
add
mov
dec
mov
mov
jnp
inc
or
push
wrmsr
test
movs
push
cmps
inc
dec
mov
dec
inc
popa
or
das
call
cs
stc
mov
adc
lds
mov
mov
je
jmp
ret
out
shl
push
fwait
sbb
inc
xor
add
aam
mov
adc
call
in
daa
inc
mov
sbb
or
(bad)
in
mov
cmp
imul
leave
cld
or
add
sbb
int3
cdq
popa
push
mov
jo
cmp
or
shr
add
clc
je
push
mov
(bad)
nop
push
mov
push
pop
xchg
mov
call
push
cmp
retf
dec
mov
cs
add
retf
push
clc
repnz
jmp
mov
sbb
pusha
fs
pusha
mov
xchg
cmp
mov
mov
sbb
cmp
xchg
stos
int
mov
xlat
es
push
popf
inc
push
fiadd
dec
jl
and
in
and
xor
adc
leave
pop
jle
aaa
jge
je
pop
cli
stc
repz
nop
jp
aaa
sbb
(bad)
ja
and
xlat
mov
inc
fdivr
sub
push
ja
popa
(bad)
nop
shl
imul
mov
cdq
cdq
jne
push
rcl
push
push
dec
mov
retf
mov
movs
sbb
mov
in
adc
loope
add
pushf
imul
jae
mov
pusha
aad
mov
sahf
or
rol
dec
xchg
loope
inc
mov
mov
dec
movs
sahf
and
cmp
adc
sbb
pop
mov
mov
inc
cmp
in
or
sbb
inc
inc
test
pop
fnstcw
mov
aaa
and
popa
mov
jl
cmp
aas
cdq
jae
out
jecxz
and
scas
xor
jb
lods
dec
rcl
push
push
(bad)
daa
repz
aaa
out
and
cli
push
pop
jge
push
mov
mov
jecxz
and
loope
ins
push
dec
push
jbe
add
addr16
mov
mov
xchg
push
cmp
cmp
jp
ret
movs
shl
pushf
neg
add
scas
xlat
lods
(bad)
push
mov
fwait
out
mov
cmp
mov
mov
add
mov
out
sub
rol
and
movs
or
(bad)
fwait
fwait
jbe
mov
xchg
in
mov
mov
mov
arpl
dec
sar
sbb
inc
mov
cdq
sbb
sub
sub
add
imul
or
cmp
dec
sub
adc
push
outs
push
mov
stos
sub
jp
push
add
pop
mov
sbb
mov
sbb
jmp
xor
push
jl
inc
outs
es
sar
add
or
push
cmp
fimul
add
test
cmp
cs
push
shr
sbb
mov
pop
sahf
test
loop
and
loopne
push
cmp
pusha
sti
dec
sub
jns
imul
(bad)
or
ret
xor
test
(bad)
mov
cmc
cmp
sbb
retf
sub
push
shl
outs
mov
gs
push
shl
(bad)
jmp
xor
adc
dec
push
lahf
in
call
inc
js
adc
pop
jecxz
xchg
mov
pop
cmp
clc
out
out
stos
inc
jns
jne
and
adc
xchg
pop
adc
ret
mov
mov
enter
adc
mov
push
sahf
int
xor
(bad)
(bad)
mov
mov
repnz
xor
push
outs
mov
pop
in
mov
sub
and
xchg
add
or
into
mov
into
push
mov
inc
inc
push
push
cwde
ds
sbb
out
(bad)
lods
xchg
pop
jns
jle
xchg
cmps
(bad)
xchg
das
lods
nop
shl
xchg
inc
mov
fwait
sub
inc
dec
lods
jnp
dec
add
hlt
arpl
mov
xchg
sbb
sbb
pop
aaa
dec
or
jge
add
dec
pop
lahf
dec
lods
mov
pop
adc
mov
inc
jp
aam
adc
pop
pop
in
in
push
sub
push
pop
sbb
hlt
inc
push
ret
mov
retf
hlt
test
jns
or
cmp
sbb
cmc
cmovl
inc
sub
inc
mov
icebp
and
sbb
stos
ja
xor
cdq
xchg
push
mov
pop
cwde
retf
pop
xor
mov
xor
dec
nop
out
aaa
jmp
sbb
mov
mov
mov
neg
int
into
dec
pop
mov
call
fs
out
bound
out
and
adc
mov
mov
xor
and
xor
xor
es
mov
xlat
icebp
sub
mov
gs
jecxz
pop
or
cwde
mov
add
or
test
and
mov
repz
mul
adc
loop
cdq
les
push
in
repz
dec
out
inc
push
ss
mov
pushf
adc
push
xor
jns
test
ins
int3
mov
test
(bad)
ins
loop
and
test
int
(bad)
aad
in
sbb
or
int3
sub
sbb
jnp
jge
shl
mov
not
ret
or
js
clc
adc
push
iret
mov
adc
adc
dec
ins
into
(bad)
fdiv
sub
push
retf
fcmovb
jne
fmul
lock
shr
sub
iret
mov
(bad)
cmps
(bad)
mul
sahf
push
and
loopne
mov
and
movs
in
push
aaa
pop
push
sbb
nop
push
adc
pop
push
and
mov
push
lds
pop
test
scas
and
je
fldcw
in
add
lock
push
jns
or
jno
jl
or
inc
lea
pop
clc
sub
lods
mov
ds
shr
mov
lds
stos
or
pop
leave
fcom
sub
rol
out
jecxz
sub
in
xor
mov
inc
test
sbb
int3
shr
inc
inc
das
movs
(bad)
sub
sub
mov
movs
(bad)
dec
ret
sub
mov
xor
xor
sub
dec
outs
fiadd
mov
adc
jnp
pushf
ds
fild
repnz
mov
jle
push
xor
pop
xor
ins
imul
inc
mov
adc
mov
dec
cmp
out
mov
adc
jge
inc
aaa
lock
add
movs
push
adc
adc
xchg
int3
inc
inc
rcl
scas
mov
out
pop
cmps
cs
push
mov
mov
add
aas
and
sahf
pop
and
mov
aas
lock
out
cmps
pop
rcl
cmp
les
and
out
mov
cwde
call
mov
add
shr
and
cmp
out
pop
add
ds
or
lea
cmp
fist
in
jns
push
jnp
xchg
int
jne
mov
fadd
mov
scas
out
xchg
xchg
pandn
and
leave
ds
and
adc
jmp
sti
retf
cmp
and
movs
push
mov
in
pushf
movs
jbe
enter
dec
push
ins
fs
mov
xor
mov
jge
addr16
push
jmp
inc
push
or
shr
jbe
cmc
or
jne
ja
in
rcl
stc
(bad)
sbb
jb
(bad)
jle
(bad)
pop
(bad)
cmc
dec
xchg
popa
jmp
sbb
mov
test
xchg
jmp
sub
repz
std
popa
ret
jo
in
out
aas
inc
fcom
push
and
jb
dec
out
mov
jecxz
xchg
or
mov
jle
test
jl
idiv
fsubr
push
jnp
dec
sahf
jp
test
das
xchg
movs
xlat
jge
sbb
not
addr16
sbb
ins
cwde
fisub
dec
test
jg
pop
xchg
arpl
jl
js
cmp
pop
mov
xor
inc
inc
adc
pop
pop
pop
es
dec
out
pop
mov
mov
fidivr
rcl
popf
popa
jl
test
and
iret
ins
popf
mov
sub
out
imul
pop
cmc
jb
idiv
jns
pop
xchg
add
xor
clc
inc
dec
add
push
sub
or
mov
xchg
pop
mov
mov
arpl
inc
mov
and
push
jle
cdq
nop
inc
cmp
xchg
cwde
mov
jle
iret
mov
jae
outs
mov
iret
mov
lea
loop
add
or
cli
in
ret
stos
xchg
mov
je
xchg
pop
imul
inc
push
daa
xor
inc
repz
imul
push
leave
das
scas
mov
dec
cmps
icebp
(bad)
aad
or
push
jecxz
inc
sbb
inc
inc
mov
int3
dec
and
loop
mov
or
dec
aaa
daa
sub
jae
mov
xor
fisubr
lahf
inc
leave
fld
adc
lea
cmc
inc
adc
cmps
sub
retf
in
and
in
dec
movs
pop
cs
or
xor
mov
movs
cdq
addr16
push
bound
push
mov
sar
pop
mov
jne
dec
jb
or
sti
(bad)
int3
clc
popf
les
cmp
pop
and
xchg
retf
jae
push
or
push
sub
or
cwde
scas
fmul
pop
adc
or
bound
jae
repnz
mov
inc
push
addr16
aad
inc
sbb
loopne
out
jl
imul
sbb
add
ds
dec
loope
add
lahf
retf
mov
push
cdq
xchg
ins
cmp
inc
test
inc
cmp
in
(bad)
fcmove
mov
xchg
cwde
test
adc
cwde
push
pop
mov
fstp
mov
sub
cmp
inc
jmp
mov
jg
mov
adc
add
mov
in
arpl
sub
mov
ins
inc
stc
rcl
and
mov
pop
lahf
add
test
add
fsubr
sahf
dec
sbb
jno
in
mov
add
or
cmc
inc
inc
lahf
pop
jbe
mov
adc
jg
sub
pop
aad
dec
jl
jns
and
icebp
xchg
inc
test
mov
push
pop
ret
mov
arpl
outs
retf
cmp
xor
lods
clc
inc
cmp
cmp
mov
in
push
hlt
ret
sahf
dec
mov
mov
js
jne
mov
push
sub
sbb
pop
loopne
xchg
pop
lods
adc
adc
mov
push
retf
bound
add
ficom
push
sahf
xor
xchg
lods
sbb
test
adc
sub
pop
(bad)
js
inc
pop
jge
icebp
push
out
mov
mov
push
movs
outs
scas
daa
push
or
push
inc
sti
add
mov
xchg
adc
mov
or
xor
cmp
imul
or
aas
shr
nop
add
in
jns
xor
and
pop
cmc
sbb
into
shr
clc
jb
jg
fmul
inc
cli
xchg
lods
add
sbb
in
jmp
push
sub
rol
jl
jp
ins
sbb
jmp
jmp
aam
mov
idiv
xchg
fnsave
retf
add
div
ins
inc
and
and
js
jmp
or
ja
jle
shr
jl
in
xor
jmp
(bad)
inc
mov
mov
pop
mov
dec
inc
sub
push
sub
mov
add
mov
mov
sar
out
out
repnz
in
xchg
xor
push
int3
lods
fsubr
leave
adc
jns
and
inc
mov
inc
repz
test
aad
xchg
sbb
mov
xchg
dec
dec
xchg
add
push
cli
ins
cmps
enter
sbb
es
jbe
xchg
popa
xchg
bound
aas
jge
dec
add
xor
mov
test
inc
fs
add
inc
cmp
ins
xchg
adc
out
lea
sub
in
(bad)
xchg
sub
mov
cmp
sbb
pop
add
sub
loope
outs
fstp
call
fwait
jp
mov
add
jmp
push
fsubr
rcr
loope
jle
pop
test
lds
mov
(bad)
das
adc
sbb
repnz
sub
sub
or
(bad)
xor
pop
mov
sbb
in
fwait
pop
sbb
sahf
mov
sbb
pop
add
pop
jecxz
hlt
out
push
jmp
addr16
xor
mov
inc
out
fist
ja
das
push
mov
cmps
and
std
mov
je
adc
ficom
sahf
stos
pop
mov
xlat
mov
and
push
mov
cmp
adc
adc
mov
lock
push
test
(bad)
mov
fbld
sar
mov
lahf
test
rol
push
aaa
push
mov
mov
lods
mov
inc
inc
fwait
inc
xchg
and
sbb
(bad)
hlt
int
mov
xor
movs
cwde
hlt
push
repnz
fcomip
mov
mov
(bad)
cld
xchg
or
test
aam
mov
les
rol
push
test
retf
xor
frstor
(bad)
aad
and
lds
das
pop
aaa
jb
cdq
std
loope
lods
stos
lea
lods
mov
inc
inc
mov
lock
loope
push
mov
cmps
rol
cmp
in
cmc
jae
ins
fisub
cmp
pop
dec
int
lods
dec
add
fnsave
mov
push
fistp
sti
movs
fwait
jne
push
dec
icebp
fs
xchg
retf
inc
(bad)
in
dec
pop
pop
daa
and
out
retf
push
mov
test
les
mov
pushf
jmp
pusha
int
xor
pop
adc
pop
mov
icebp
stc
sub
(bad)
out
or
in
or
mov
sbb
popf
js
retf
ins
mov
xor
sbb
push
sbb
retf
push
pop
ja
pop
lods
cmp
xchg
push
dec
sub
push
xchg
(bad)
and
call
jbe
in
jb
test
mov
fdiv
sahf
sub
xlat
sbb
inc
push
hlt
imul
mov
unpcklps
shl
sahf
ror
xchg
enter
enter
or
jg
in
xor
fdivr
mov
add
jo
jne
push
xchg
add
ds
ja
test
fcmovnbe
repnz
mov
inc
adc
adc
std
inc
fisttp
out
adc
mul
cmp
not
ja
inc
mov
mov
int
lahf
xor
test
idiv
xchg
mov
das
lods
xor
popf
fisub
push
jne
mov
mov
rcr
(bad)
xor
mov
call
out
enter
sub
or
gs
dec
and
sbb
into
pusha
xor
mov
int
add
pop
inc
int3
lods
imul
imul
add
inc
push
test
lods
in
loope
push
(bad)
(bad)
sub
int3
cmp
movs
lea
mov
push
push
or
mov
packssdw
shl
inc
ja
jmp
inc
stos
cmc
pushf
mov
imul
aas
idiv
loopne
call
mov
cmp
xchg
int
mov
and
jbe
lahf
dec
shl
jl
push
mov
jbe
rcr
mov
arpl
fadd
add
push
inc
inc
ds
fimul
sar
adc
lsl
(bad)
cld
pop
lods
xchg
popa
adc
cmp
fldcw
push
(bad)
mov
inc
pop
jno
lods
xchg
xchg
(bad)
cmp
jns
int
(bad)
in
fcom
xchg
jae
dec
xchg
out
inc
repnz
repnz
shr
inc
jbe
jmp
fdiv
mov
adc
stos
out
add
cmps
bound
jecxz
lods
dec
cli
jp
add
and
ins
push
add
jo
sbb
xchg
adc
imul
sub
xor
mov
rol
add
mov
and
pop
pop
jg
dec
jo
cmc
add
shl
fisttp
fsubr
out
hlt
mov
(bad)
xor
imul
ja
bound
add
jnp
mov
mov
or
cmps
sub
pop
pop
dec
(bad)
lds
inc
mov
fcomp
xor
or
or
jp
and
clc
push
adc
add
in
mov
retf
js
in
sbb
enter
push
sbb
or
loop
inc
mov
or
aas
cmp
in
xchg
call
fimul
and
pushf
ja
mov
test
add
inc
into
sub
jne
ds
adc
imul
sbb
push
pop
mov
cmc
push
ret
lods
ss
imul
fnstsw
adc
retf
xor
cmp
pop
shl
outs
xchg
add
xchg
(bad)
(bad)
mov
movs
cmps
movs
sbb
daa
loope
jp
mov
out
and
cmp
fcom
ret
aaa
cmp
je
hlt
xchg
inc
sub
sub
div
(bad)
cmps
pop
fs
ds
ror
mov
ja
adc
js
and
lods
add
add
dec
cmp
push
movs
mov
mov
lea
test
and
or
push
or
outs
lds
shr
mov
call
push
ss
lods
movs
and
pop
cmp
xor
fisub
cdq
push
das
mov
cwde
ret
xor
std
jo
in
or
nop
fsubr
movs
cmp
adc
adc
add
xor
js
ds
jns
pusha
call
pushf
lods
jo
ja
std
push
lods
mov
ret
imul
gs
jg
aas
in
daa
pusha
mov
mov
inc
cmp
or
ds
and
leave
stos
test
or
sbb
out
adc
mov
movs
popf
xlat
enter
adc
inc
je
(bad)
mov
mov
or
sub
test
sub
sar
inc
sahf
xor
sbb
addr16
push
cdq
add
dec
retf
jnp
push
sbb
mov
pop
inc
add
mov
jo
sbb
adc
pop
adc
inc
mov
mov
mov
jne
and
scas
push
(bad)
sbb
pop
ins
data16
clc
push
cli
push
cmp
fadd
dec
mov
(bad)
movs
sti
popa
out
out
cwde
xor
xchg
xchg
pop
(bad)
jp
ficom
inc
test
ins
sar
jns
jae
inc
call
cwde
dec
mov
lods
aas
adc
ss
int
les
gs
(bad)
mov
enter
pop
xchg
pop
jecxz
in
mov
cmp
rcl
iret
retf
adc
popa
xor
adc
cmps
push
aam
push
sub
xchg
and
leave
es
cs
cwde
fcom
sub
cs
jle
jns
sbb
mov
jmp
shl
or
cli
pop
add
ds
push
cmp
inc
mov
adc
test
or
mov
xor
inc
aad
lds
dec
or
inc
and
mov
loopne
sbb
jl
and
les
shl
and
jnp
in
xor
xchg
(bad)
jl
xlat
mov
ficom
daa
xchg
lea
out
ds
sub
mov
mov
mov
mov
outs
pop
jmp
sub
push
aam
and
addr16
push
add
sbb
mul
mov
adc
fisubr
pop
out
jge
cmp
movs
or
xchg
sahf
cmp
sbb
pop
jg
test
loopne
nop
dec
(bad)
mov
jecxz
ins
test
add
mov
jno
xchg
arpl
fstp
stc
jns
xchg
dec
mov
cmp
rcl
rcl
mov
mov
or
cmp
dec
pop
or
add
aaa
pushf
ret
jmp
jmp
mov
cmp
add
rol
mov
xor
call
mov
jecxz
dec
std
test
xor
xchg
call
aad
je
loop
jnp
lods
into
(bad)
mov
dec
out
mov
movs
leave
xchg
test
xor
inc
cmps
out
lds
jge
sub
mov
push
and
nop
jns
cmc
pop
cld
(bad)
stos
outs
pop
inc
in
xchg
test
push
pop
inc
mov
pusha
arpl
or
jnp
and
cmp
mov
mov
nop
cmp
push
xchg
ins
or
icebp
jl
inc
mov
pushf
lea
dec
adc
cmp
pop
sbb
call
call
stos
das
sbb
xchg
cmp
xchg
mov
push
mov
fild
ss
dec
add
jno
push
push
ss
cmp
imul
push
cmp
(bad)
jbe
(bad)
jge
jg
mov
inc
enter
retf
inc
cmp
xchg
pusha
cli
sbb
shl
(bad)
mov
loop
imul
inc
and
jnp
xor
xchg
and
stos
outs
aad
ss
push
sbb
dec
inc
and
push
dec
aas
cmp
jecxz
and
leave
neg
fcomp
mov
imul
mov
dec
sub
mov
push
add
cmp
add
and
sbb
jl
jl
dec
nop
push
(bad)
sbb
xor
fwait
rcr
addr16
test
repz
dec
mul
xchg
test
rol
pop
push
sbb
bound
mov
cmp
mov
adc
test
cli
cmc
ins
mov
mov
in
jge
aas
ja
(bad)
outs
hlt
je
nop
or
pop
in
fwait
outs
xchg
in
jb
push
lock
add
xor
mov
or
lds
aad
and
in
sbb
inc
loop
and
rcr
ja
pop
jns
jnp
push
jge
loope
call
scas
mov
pop
int
dec
inc
neg
movs
push
shl
push
lea
sub
mov
mov
test
sub
xchg
pusha
fdiv
ja
movs
add
aas
cld
or
test
out
or
js
mov
lahf
in
test
loop
cdq
movs
hlt
out
outs
test
aas
jnp
inc
daa
sbb
push
cmps
jae
cmp
jl
fimul
mov
push
repz
cmp
push
jbe
push
lea
ret
jle
aam
popa
sahf
retf
scas
cmp
push
mov
pop
pusha
clc
mov
mov
sub
xchg
jle
icebp
inc
push
adc
ror
cs
stos
sub
dec
dec
mov
push
lahf
jnp
(bad)
retf
mov
cli
add
mov
shl
mov
cmp
sbb
lahf
push
jp
imul
fldcw
sbb
mov
or
add
mov
stos
jo
test
xor
sub
xor
imul
xor
in
aad
mov
jge
(bad)
call
fsub
push
and
mov
retf
xchg
sbb
pusha
addr16
push
cmp
(bad)
out
mov
out
or
fucomp
mov
add
imul
jb
cmp
aam
dec
pop
mov
pop
leave
imul
daa
pop
out
and
sahf
xchg
ja
jae
sub
adc
fld
cmp
ins
les
push
dec
sbb
fs
sbb
sub
jle
popa
xchg
mov
imul
mov
lahf
adc
mov
mov
rol
jge
sub
cmp
arpl
mov
out
adc
fsub
add
mov
xchg
daa
xor
pop
(bad)
jp
out
pop
shl
cmp
popf
adc
sbb
leave
jo
xor
scas
stos
aad
sbb
fwait
dec
in
cmp
jecxz
lods
xchg
and
mov
pusha
xchg
mov
iret
jbe
push
and
in
or
sbb
dec
jg
sbb
popa
ins
adc
outs
ret
inc
clc
dec
fsubr
popa
sbb
mov
outs
mov
cwde
add
sub
xchg
inc
fst
and
call
sub
sbb
xchg
dec
xchg
fstp
movs
cmp
xor
rol
jnp
adc
pop
mov
mul
jb
mov
mov
adc
sub
rcl
pop
xchg
lahf
stos
xchg
dec
mov
and
retf
sub
push
pop
shl
push
leave
mov
push
pop
adc
mov
jge
popf
inc
ror
mov
xchg
mov
dec
les
push
cli
and
loope
cmp
ficomp
jl
xchg
mov
jle
pop
(bad)
xor
(bad)
push
mov
jg
push
jne
xor
xchg
inc
xor
and
in
mov
inc
inc
div
lock
imul
scas
or
ins
mov
pushf
push
pusha
pop
jl
stc
imul
in
add
loope
cld
dec
adc
xchg
jmp
loopne
cmps
xor
out
cmp
sbb
scas
cs
cli
cmc
idiv
mov
jmp
add
shr
loopne
lahf
pop
daa
jg
dec
mov
add
sub
xor
xchg
inc
div
sqrtps
xchg
cwde
(bad)
in
(bad)
sahf
jno
jb
push
test
jp
sub
out
sub
loope
jno
retf
mov
inc
sbb
in
pslld
pop
add
mov
into
and
pop
icebp
ror
loop
ins
pop
push
call
add
ficom
in
sbb
stos
scas
push
lock
jns
ret
or
jp
mov
xor
sub
ret
les
mov
ja
push
arpl
scas
in
les
mov
movs
scas
and
enter
dec
std
imul
scas
xor
dec
adc
ror
mov
dec
test
inc
adc
in
cmp
add
xor
lock
xchg
mov
inc
mov
stc
sti
shl
or
test
es
mov
mov
inc
jno
in
push
jmp
repnz
pop
into
sub
stc
adc
loope
jo
add
cs
ins
mov
or
pop
call
(bad)
arpl
mov
scas
mov
jmp
cmps
and
push
int
aaa
push
aad
shl
js
int3
fild
jbe
add
add
(bad)
cdq
loop
inc
push
and
enter
jmp
xorps
xor
cwde
aaa
lds
test
jbe
arpl
pop
out
sub
arpl
enter
xchg
jbe
cwde
adc
pop
jecxz
loope
jns
imul
xchg
retf
sahf
ins
pop
retf
push
stos
pop
dec
stc
jnp
mov
das
mov
pop
mov
add
xor
xchg
mov
aaa
ret
test
neg
movs
xchg
fstp
hlt
or
pusha
and
daa
aaa
adc
jg
cmp
mov
jg
fucomip
jp
gs
(bad)
loope
xor
data16
retf
aad
outs
popf
ins
ror
adc
mov
mov
sub
pop
js
push
sbb
jl
or
jbe
hlt
add
jo
popa
stos
out
add
js
lods
(bad)
and
inc
pop
imul
sub
daa
and
xor
sbb
mov
loop
in
jp
pop
fadd
sbb
pop
jo
out
imul
shr
dec
popa
dec
add
pop
mov
gs
es
or
dec
jmp
cmp
ja
sbb
inc
xor
clc
inc
push
xchg
xchg
arpl
xchg
cmps
pop
push
out
xor
arpl
sbb
retf
xchg
mov
mov
loop
add
pop
xchg
clc
mov
ror
out
jle
daa
sar
cmp
mov
fadd
dec
lds
jbe
test
outs
fst
enter
pop
(bad)
div
or
leave
cs
popf
and
(bad)
cmp
mov
pop
mov
bound
jle
cwde
stos
jo
mov
jo
(bad)
push
rol
lahf
jmp
xor
hlt
ja
retf
cmp
sub
sub
inc
int3
std
je
add
aam
in
loopne
and
lods
test
data16
(bad)
push
ja
dec
push
mov
data16
dec
jle
xchg
shl
xchg
add
das
pop
sar
push
push
xchg
push
mov
shl
xchg
pusha
push
cmp
lods
jmp
sbb
push
data16
mov
movs
mov
inc
xlat
sbb
pop
and
mov
ss
and
popa
clc
dec
cmp
enter
xchg
rcl
adc
pop
adc
les
cwde
inc
add
fnstsw
js
sti
xor
out
retf
sub
test
inc
cmp
fist
and
jle
push
je
jmp
sub
in
cmps
sti
hlt
popa
fldenv
ja
mov
and
in
mov
pop
xchg
sub
loop
jg
sub
cmc
jmp
(bad)
or
push
add
mov
jl
mov
cmc
mov
fdivr
push
imul
ja
je
mov
push
test
mov
ins
xor
mov
jno
jne
cwde
retf
or
out
or
and
popa
cdq
ins
inc
leave
push
push
xchg
mov
scas
movs
cmps
stc
fild
(bad)
push
mov
inc
(bad)
push
mov
jecxz
stos
ss
mov
outs
cmp
clc
cwde
add
stos
ret
push
cmp
scas
jne
js
dec
cli
jmp
inc
loope
cmps
pop
lods
inc
or
inc
fisub
mov
out
push
aas
aam
mov
jbe
xor
rcl
jae
push
cdq
mov
or
das
aas
push
jp
sbb
and
cwde
fwait
sub
retf
loope
xor
dec
adc
xor
inc
das
hlt
pop
retf
repz
stos
leave
xor
nop
jb
sbb
outs
and
ss
sub
int3
adc
cld
enter
jnp
das
imul
cmps
enter
jl
cmp
(bad)
fild
dec
pop
jbe
xchg
rcr
push
imul
add
inc
leave
(bad)
aas
in
mov
xlat
mov
out
mov
and
sbb
jp
ds
mov
out
in
iret
adc
xor
test
icebp
dec
or
mov
xor
push
lahf
iret
nop
(bad)
sahf
or
inc
lods
retf
sbb
push
neg
ret
cli
pop
pop
dec
adc
dec
outs
lds
aam
inc
(bad)
xor
outs
adc
int
xchg
add
sbb
neg
adc
enter
rcr
movs
xor
push
push
pop
cmps
stos
dec
sub
(bad)
mov
(bad)
sar
in
sti
dec
jnp
dec
lahf
movs
push
inc
call
int
cmps
pop
stc
ret
mov
jmp
add
jbe
sub
pop
push
stos
(bad)
imul
mov
shl
sbb
jne
pop
push
or
inc
in
xor
cmps
outs
mov
in
repnz
cmp
pop
add
add
cdq
cmp
jmp
call
repz
or
sub
mov
test
dec
in
or
lahf
in
sub
ror
inc
cmp
addr16
add
stc
clc
jg
lods
(bad)
mov
pop
sbb
fnstsw
push
test
adc
pusha
bound
outs
mov
aaa
js
pop
add
pop
push
js
je
dec
js
call
push
daa
mov
dec
jnp
mov
shr
sbb
jle
in
sbb
test
test
icebp
aas
das
fwait
sbb
loopne
cmp
adc
in
loopne
mov
test
xor
mov
test
pop
add
test
xor
int
pop
cmp
sub
pop
mov
retf
adc
push
xor
in
dec
fwait
call
stc
sti
push
mov
jns
pop
inc
sbb
repz
std
(bad)
fadd
cli
js
jne
add
xor
pop
dec
es
cli
out
shl
cdq
dec
dec
ret
cmp
push
(bad)
pop
(bad)
scas
enter
(bad)
sbb
jp
mov
aas
sub
fbld
push
add
push
and
mov
outs
and
cdq
imul
jo
dec
pop
popf
loopne
test
scas
adc
push
inc
aaa
and
or
call
dec
in
or
rcr
mov
xchg
jge
icebp
test
and
add
neg
je
fdiv
out
jno
call
fsubr
cmp
outs
hlt
cdq
push
mov
mov
xor
push
daa
inc
mov
fcmovu
nop
mov
mov
push
jge
add
(bad)
(bad)
lock
xchg
adc
sub
mov
jae
sub
gs
add
daa
dec
ins
xor
stos
sbb
push
cmp
push
lods
jo
and
sbb
retf
cdq
push
xor
xlat
dec
out
lock
bound
pop
or
jmp
add
adc
adc
stc
mov
test
jb
rcl
(bad)
movs
sbb
mov
rol
or
sahf
push
and
daa
inc
dec
cli
pusha
adc
cmc
imul
sub
jp
(bad)
test
call
cli
or
ins
push
xor
ror
jmp
jmp
fidiv
fisub
push
addr16
cs
sub
add
stc
push
adc
and
mov
xchg
mov
arpl
jno
cmps
mov
dec
repnz
shr
fadd
(bad)
js
inc
aam
(bad)
sub
xchg
xchg
push
cmp
lods
xor
das
jg
ror
and
fadd
daa
mov
enter
mov
shl
mov
sahf
jbe
dec
or
rol
scas
mov
sbb
out
nop
xchg
jg
outs
jnp
cmp
pusha
pop
adc
mov
ror
lahf
mov
push
data16
ja
pop
in
ficom
push
mov
call
arpl
xchg
and
(bad)
jb
movs
out
mov
jno
mov
popf
ret
nop
popf
loopne
xor
in
sub
xor
movs
lods
jne
pop
sbb
jns
sar
test
sub
(bad)
cmp
jbe
inc
lods
lock
sbb
dec
in
(bad)
cmps
add
push
sahf
iret
out
jg
cld
nop
loopne
mov
mov
mov
push
jnp
sub
xchg
std
arpl
adc
shr
cdq
dec
cmp
int3
jmp
add
popa
iret
outs
lds
call
lds
in
leave
stos
add
xchg
mov
sub
mov
mov
lahf
ret
clc
fld
mov
stos
cli
(bad)
adc
js
inc
mov
sub
rol
mov
mov
push
inc
ja
xchg
xor
js
jno
sub
out
xchg
stos
fwait
in
mov
inc
sbb
mov
retf
mov
add
in
gs
inc
push
imul
dec
jmp
daa
jle
and
int
iret
inc
push
adc
fidivr
pop
aas
adc
xrelease
lods
call
rcr
and
xor
cmps
jne
(bad)
sbb
inc
pop
loop
mov
push
mov
pop
inc
push
inc
outs
mov
test
add
cmc
jb
retf
test
jp
dec
sbb
jno
daa
jmp
jecxz
jp
fsub
inc
adc
ds
in
mov
mov
push
mov
mov
test
mov
jns
push
sbb
jg
test
sbb
sub
in
mov
push
pop
(bad)
sti
sub
int
adc
push
fst
xor
stos
enterw
xchg
pop
dec
add
sub
mov
jl
pop
enter
mov
stos
jb
outs
sbb
jp
inc
cmp
arpl
jecxz
std
in
ds
mov
cwde
pop
sub
sub
pop
pop
shl
pop
stc
(bad)
shl
test
idiv
cmps
xor
push
mov
outs
jmp
int3
iret
ins
cmp
sub
rep
push
mov
cmps
pop
xchg
shld
adc
pop
push
in
rcl
mov
outs
sbb
popf
and
adc
(bad)
xor
dec
fist
dec
xchg
xchg
mov
in
sub
mov
clc
clc
xor
push
leave
xchg
daa
add
call
push
inc
lea
pop
mov
stc
push
add
in
lds
fs
retf
cmp
(bad)
jae
push
outs
leave
ret
(bad)
mov
clc
sub
add
inc
add
jmp
lods
pop
inc
(bad)
hlt
push
es
xor
sub
lock
and
pop
cmp
jg
cmp
jmp
das
loop
js
push
pop
xor
pop
push
and
and
jmp
pop
xchg
stc
push
int3
adc
push
stc
sub
in
shl
out
add
outs
adc
out
xor
pop
mov
mov
ret
scas
add
addr16
int3
sbb
dec
mov
aam
adc
sbb
nop
(bad)
aad
xchg
push
cli
in
movs
pop
bound
jecxz
cs
jp
scas
stc
mov
jae
lea
mov
cmps
mov
inc
test
mov
in
lock
xor
loop
mov
pop
in
pusha
hlt
mov
movs
xchg
and
push
jl
fistp
adc
stos
dec
mov
push
mov
cmps
retf
jb
call
aad
cs
adc
pop
mov
xchg
and
pop
mov
lds
xchg
dec
stos
adc
push
cli
ret
pop
jp
test
and
retf
jp
sahf
lds
in
out
add
pop
fdivr
dec
bsf
daa
mov
sahf
pop
or
es
pop
cwde
jns
xor
sbb
and
push
gs
mov
mov
push
fs
add
add
xchg
cmps
(bad)
pop
(bad)
mov
pop
inc
mov
sar
movs
fwait
mov
or
fwait
popf
jmp
mov
daa
mov
mov
mov
inc
jle
sbb
cmps
fwait
jp
movs
(bad)
sbb
sbb
mov
push
test
adc
sub
pop
outs
jge
mov
jle
adc
xor
mov
sub
or
sahf
popa
int3
ins
cmp
and
pop
and
ins
inc
push
lea
cmp
add
cmp
cmp
add
xchg
ss
cmp
sub
pop
daa
or
sub
cmp
das
dec
(bad)
or
and
jle
outs
sub
scas
sub
stos
cmp
ret
cmp
xor
mov
xor
mov
loope
jnp
fcom
adc
out
push
les
es
or
xor
pop
imul
lds
jb
cmps
cmp
or
das
loope
mov
cwde
lahf
pop
mov
dec
add
adc
mov
loopne
fisubr
mov
cwde
jbe
nop
ret
sar
mov
fs
(bad)
loop
inc
xor
push
inc
push
xor
pop
inc
rcr
in
dec
pop
push
ret
cmp
aas
dec
or
xchg
xchg
xchg
inc
(bad)
clc
dec
fcomp
mov
and
lock
mov
mov
pop
adc
inc
sbb
or
sub
cld
push
loopne
pop
push
fs
lods
mov
(bad)
mov
out
retf
leave
pop
mov
add
(bad)
clc
xchg
leave
add
mov
inc
mov
dec
rol
xchg
aad
and
stc
or
jns
ds
pop
lock
or
ss
test
dec
mov
xor
mov
test
push
aad
mov
packuswb
and
pop
mov
mov
push
ret
call
aam
bound
aas
scas
mov
jnp
sub
pushf
mov
jbe
retf
in
jb
fist
sub
je
and
push
out
iret
test
cmps
inc
mov
inc
jnp
sbb
jae
repnz
xchg
adc
dec
test
mov
cmps
mov
dec
sbb
adc
in
push
in
mov
jno
or
ret
and
pop
mov
and
and
ss
pop
push
repnz
adc
ins
sti
ins
adc
shl
ins
ror
dec
lods
bound
jns
adc
jo
into
mov
or
out
popf
pop
jg
shl
call
jmp
adc
xchg
(bad)
cwde
test
stos
jle
sub
cmps
imul
or
repnz
jns
add
mov
dec
ret
movs
pushf
mov
cmp
sbb
ss
mov
inc
pop
push
push
jno
sbb
iret
imul
adc
adc
js
push
sub
je
mov
mov
jo
jnp
repnz
jae
xor
mov
add
lock
mov
add
lock
sub
leave
sbb
call
nop
dec
add
inc
xchg
xchg
dec
loope
and
add
push
or
push
loopne
mov
pop
cli
call
xor
add
pusha
lea
icebp
(bad)
sub
sbb
fdivr
ds
or
mov
cmp
out
sbb
movs
xchg
shl
popf
or
dec
mov
fidiv
adc
jp
(bad)
jo
and
inc
mov
(bad)
ds
xor
pop
xchg
sti
fsub
pusha
fwait
(bad)
mov
or
mov
out
dec
lock
(bad)
in
and
call
inc
sbb
mov
(bad)
repz
push
mov
mov
repz
mov
or
sbb
xchg
jns
jg
mov
dec
adc
mov
push
xor
push
mov
adc
dec
push
push
(bad)
or
rcl
call
ds
add
loope
cmps
xor
adc
arpl
inc
movs
sub
xor
pop
in
or
int3
lods
(bad)
jbe
daa
or
packssdw
repz
lods
mov
pop
sbb
mov
adc
xchg
xchg
into
out
fs
sbb
jo
sbb
push
mov
call
or
sub
retf
xor
mov
pop
mov
fisttp
in
adc
in
(bad)
loop
mov
mov
div
mov
inc
pop
mov
stos
cld
(bad)
out
stos
rol
or
inc
shr
rcl
data16
out
mov
xor
xor
ret
push
movs
in
or
outs
add
iret
stos
aas
imul
in
cmp
pop
adc
fisub
fiadd
pop
ja
mov
hlt
jle
mov
push
mov
adc
mov
jg
mov
outs
mov
(bad)
shl
xchg
adc
aam
(bad)
jnp
lea
jae
mov
pop
test
div
xchg
call
push
push
inc
jecxz
ss
pop
shl
rol
xor
mov
stos
jno
icebp
sub
dec
xlat
test
scas
pop
mov
dec
inc
into
popa
out
push
xchg
pavgw
jne
lahf
adc
movs
mov
pop
xchg
jo
or
push
arpl
je
push
pushf
add
aam
add
and
shl
xchg
and
xor
aad
mov
std
rol
out
lods
sub
fisttp
lahf
sbb
nop
int
icebp
inc
in
sub
pop
(bad)
push
retf
and
pusha
inc
pop
lock
addr16
adc
aaa
sub
pop
in
call
push
mov
jmp
mov
lock
xlat
(bad)
sub
iret
inc
cmp
mov
mov
mov
mov
jmp
nop
and
add
sbb
adc
les
in
packssdw
xor
mov
add
(bad)
int3
push
jnp
adc
test
call
mov
or
rol
ja
inc
mov
and
mov
daa
fisubr
inc
add
xchg
(bad)
(bad)
cmp
and
jmp
ret
pop
mov
call
jmp
cmp
inc
push
pop
inc
test
retf
loope
pop
jl
mov
and
aad
mov
mov
cmp
pop
in
dec
mov
or
test
gs
or
test
and
push
mov
and
sbb
mov
xchg
shl
and
test
and
adc
push
lock
fs
jo
cdq
cld
and
shr
cs
push
cmp
xor
pop
cmp
inc
inc
jno
push
add
mov
ss
ja
shl
xchg
lea
dec
xchg
adc
xchg
clc
mov
jne
dec
inc
inc
fsubr
(bad)
popf
ret
and
repz
dec
or
call
or
cmps
aas
push
icebp
push
adc
sahf
jge
(bad)
int
dec
inc
cwde
push
or
mov
outs
xchg
cdq
jmp
adc
and
mov
or
fs
mov
xchg
or
ss
lea
xor
xor
xor
cmps
gs
or
push
imul
leave
jmp
imul
retf
cld
cdq
mov
or
fsubr
loop
jg
mov
sti
loop
push
into
sahf
cmp
rcr
lods
push
and
add
xchg
mov
clc
dec
push
cmps
scas
or
int3
mov
int3
inc
rol
hlt
xchg
ja
sub
xchg
or
iret
ja
(bad)
stc
dec
lahf
mov
mov
dec
pop
jo
scas
mov
xchg
(bad)
cmp
loope
sub
cmp
test
or
xchg
bound
iret
addr16
mov
jge
scas
pop
push
das
fs
sub
jnp
mov
inc
dec
arpl
adc
jmp
es
rcr
push
sbb
adc
fiadd
mov
loope
movs
out
and
test
xchg
(bad)
enter
scas
adc
jo
out
dec
call
in
adc
xchg
jnp
sub
(bad)
and
sbb
jg
add
ins
outs
mov
mov
aad
(bad)
add
std
cs
cmp
cmc
rcr
sbb
push
inc
sahf
mov
out
xchg
das
cmp
in
sbb
inc
inc
push
daa
lds
out
mov
hlt
sti
mov
ret
enter
push
sbb
bound
lock
enter
ret
mov
shr
and
push
add
push
pop
cmp
sbb
push
push
ret
lods
int3
repnz
aam
inc
movs
xor
mov
jno
imul
adc
int
push
leave
mov
sti
push
pop
ins
inc
aas
xor
pop
add
popa
fistp
add
or
sub
imul
dec
cmp
rcr
rcr
iret
push
std
mov
(bad)
rcl
out
fcom
sub
mov
sbb
into
sti
dec
(bad)
sub
mov
mov
push
xchg
loop
hlt
ds
imul
lahf
and
mov
(bad)
(bad)
das
dec
sub
test
xchg
xor
gs
shl
push
adc
(bad)
ja
aas
mov
(bad)
mov
mov
in
mov
jecxz
xchg
std
push
sbb
or
push
in
mov
into
gs
(bad)
xor
inc
pop
add
push
mov
add
dec
cmp
in
(bad)
repz
mov
imul
arpl
and
nop
and
mov
mov
(bad)
pop
(bad)
loope
cmc
xor
stos
ror
sub
adc
jae
pop
movs
dec
sub
aaa
mov
not
addr16
sub
lock
mov
sub
add
sar
pop
mov
packsswb
xor
shl
dec
fistp
aam
test
push
imul
arpl
ds
pop
dec
sub
jp
mov
mov
in
fstp
mov
jge
cmp
cmps
movs
add
int3
and
pop
adc
rol
or
rol
dec
xchg
xchg
xchg
mov
jbe
outs
cmp
jl
push
data16
jae
stos
stc
and
mov
sbb
ret
mov
mov
sub
jnp
in
inc
and
and
add
pop
scas
movs
cld
sahf
out
add
mov
scas
mov
adc
fmul
xchg
xchg
inc
push
sub
and
or
ins
mov
xlat
jnp
inc
pusha
test
or
into
jp
or
shl
cmp
inc
popf
(bad)
imul
int3
jo
jl
mov
inc
cmp
neg
inc
jno
pop
inc
sar
inc
cmp
fdivr
pop
mov
adc
sbb
sbb
mov
xor
sbb
ja
(bad)
leave
dec
aad
pop
test
in
mov
(bad)
ins
xchg
std
addr16
dec
cs
fs
outs
sbb
cli
aam
(bad)
fdivr
leave
add
into
dec
mov
sbb
in
push
sub
add
sub
pop
add
fistp
mov
mov
(bad)
cli
pop
sub
loopne
dec
sub
pop
mov
jae
(bad)
cwde
(bad)
pop
push
push
les
mov
mov
inc
scas
in
adc
inc
mov
hlt
mov
ret
daa
in
shr
out
adc
clc
push
pushf
jmp
or
pop
cmps
stc
lahf
adc
adc
add
movs
inc
or
sub
jl
jmp
or
and
popf
and
xchg
frstor
sar
jmp
and
jge
not
jmp
jo
jmp
mov
sub
daa
jns
sbb
mov
xlat
test
(bad)
push
hlt
jle
into
mov
std
les
pop
xchg
inc
fidivr
mov
call
mov
cmps
push
(bad)
sbb
ds
inc
stos
add
sub
iret
dec
xchg
push
(bad)
ja
lahf
(bad)
pop
test
mov
mov
jl
mov
cmp
add
stc
loop
aaa
lods
and
lahf
movs
mov
sub
sbb
lods
mov
adc
xor
call
out
mov
or
call
and
or
push
mov
or
jle
fsubr
fcmovnbe
push
fwait
jmp
cmps
dec
movs
aad
adc
or
xor
or
ret
fld
pop
in
pop
cmp
pop
inc
dec
mov
jecxz
dec
addr16
xor
pop
dec
fst
jg
(bad)
pop
clc
jmp
jmp
lahf
aam
adc
popf
and
or
jb
dec
sbb
rol
(bad)
jg
jo
popa
cmp
fwait
nop
je
sahf
enter
in
dec
xchg
cmps
or
add
(bad)
sbb
fwait
push
push
push
popa
mov
sbb
push
mov
mov
aaa
mov
pop
pop
scas
test
sub
(bad)
inc
mov
in
dec
lea
(bad)
stc
jmp
add
inc
xor
jo
cmc
cs
adc
add
inc
addr16
imul
and
enter
mov
mov
ins
stos
push
cmps
sub
fadd
jecxz
adc
ins
popf
retf
shr
mov
popf
rcl
push
add
mov
inc
cmp
push
add
ja
lahf
cwde
in
pop
addr16
and
call
jecxz
(bad)
icebp
ins
adc
dec
pop
pushf
add
inc
js
sbb
sbb
add
pop
push
loopne
pushf
repz
shl
mov
shl
sub
in
pop
inc
int
vxorps
cmps
pop
retf
sbb
and
jae
xor
inc
adc
xor
bound
push
cmp
cmp
sbb
add
pop
pushf
mov
push
js
or
mov
fnstcw
and
jp
inc
sti
mov
loope
jge
bound
and
test
add
fwait
mov
mov
cmp
popf
les
stos
enter
test
loop
or
sbb
jo
mov
mov
push
jnp
push
mov
sbb
and
test
and
add
pop
inc
stos
mov
xchg
bnd
(bad)
fldcw
add
inc
into
add
les
sub
mov
xchg
test
inc
jge
mov
mov
xor
pop
mov
fisubr
outs
js
xchg
dec
sahf
ja
or
push
mov
ja
mov
int
rcl
ss
pop
inc
cmp
fist
add
repnz
pushf
jg
mov
mov
enter
cmp
dec
iret
repnz
and
jp
je
(bad)
aad
fs
or
ror
xchg
cmp
nop
cmp
inc
or
dec
in
outs
out
mov
push
cmps
loop
or
or
pop
sub
cld
(bad)
popa
mov
adc
fmul
sub
daa
test
cmps
sub
sbb
or
das
mov
nop
adc
inc
test
or
mov
iret
imul
sar
sbb
out
std
inc
arpl
test
lods
movs
call
shl
add
jmp
xor
aaa
cli
fsubr
pop
and
fs
dec
test
lods
repz
ins
imul
fcom
inc
jl
pushw
adc
scas
lock
cmp
inc
mov
pop
jecxz
cmps
aas
cmp
lds
mov
inc
das
push
and
jle
xor
test
les
popa
add
push
push
ins
lahf
xchg
jb
(bad)
scas
push
sbb
loope
lock
or
retf
jl
cmp
xor
movs
jbe
pop
dec
rol
loop
cmp
mov
or
mov
or
cmp
cwde
sbb
lock
mov
ss
movs
pushf
retf
push
(bad)
sbb
mov
arpl
jbe
retf
aaa
lods
dec
mov
jnp
sbb
ja
das
inc
sti
cmp
test
and
jl
cmp
sub
push
mov
mov
les
pop
sub
xchg
pop
push
add
xor
mov
loop
or
mov
ret
ja
lock
into
or
push
sbb
adc
xlat
dec
sbb
sbb
mov
add
aaa
mov
cmp
mov
(bad)
movs
test
xchg
ficom
fsub
sbb
cmp
pop
dec
cdq
clc
(bad)
xor
int
gs
stc
mov
retf
mov
inc
mov
(bad)
out
jb
vmwrite
lods
test
fwait
sbb
js
inc
jmp
ins
pop
mov
icebp
lods
mov
adc
inc
pop
aas
lods
push
mov
ret
mov
inc
out
icebp
inc
mov
adc
lods
out
in
mov
adc
or
mov
cld
adc
out
fwait
mov
sti
adc
pusha
js
sti
(bad)
call
lds
shr
out
mov
sar
sbb
into
push
jne
lods
loop
(bad)
retf
mov
and
loopne
inc
aaa
stos
push
cwde
pop
int3
test
sbb
mov
sahf
imul
lods
xor
in
test
stos
mov
mov
movs
add
arpl
dec
leave
sub
in
adc
sbb
fistp
js
cmp
and
sbb
sbb
dec
push
int3
js
mov
pop
out
div
add
addr16
add
jge
and
mov
scas
mov
ss
add
sbb
mov
jecxz
and
xchg
cdq
jns
icebp
jmp
sub
js
in
or
sbb
dec
mov
and
test
xor
loop
lods
pop
sub
jo
dec
std
or
outs
dec
add
enter
inc
rol
outs
or
mov
push
outs
call
dec
loop
aam
inc
aad
bound
retf
gs
mov
call
xchg
mov
push
pop
xor
jmp
mov
fdivr
lods
fld
pop
lods
mov
mov
call
jmp
push
inc
out
jle
push
sbb
pop
push
xor
lea
add
xor
jmp
cmp
stos
xchg
dec
sub
(bad)
add
or
fwait
adc
lock
fist
pop
xchg
jp
jl
out
inc
cmp
xor
dec
adc
icebp
out
stos
movs
mov
pop
jle
aas
scas
lods
inc
frstor
loopne
jo
cmp
jns
lods
inc
int
test
and
or
xchg
shl
xchg
mov
and
pop
popa
aad
xor
and
call
gs
clc
mov
push
mov
test
push
ins
movs
jg
out
repnz
sti
mov
jo
fbstp
ret
(bad)
lahf
call
arpl
in
fnstsw
stos
fcomp
out
sub
rcl
aam
shl
iret
pavgb
push
mov
adc
cmp
test
adc
jbe
xor
xchg
dec
shl
(bad)
cwde
add
fwait
mov
or
(bad)
jmp
jae
xor
jecxz
fild
dec
pop
das
cld
ror
and
push
jmp
test
xor
nop
into
jp
mov
sbb
nop
and
xchg
in
lods
ficomp
inc
in
jno
push
in
xor
xor
lea
jne
xchg
pop
push
push
add
inc
or
sub
xchg
es
scas
mov
dec
adc
jmp
pop
cmp
sub
bswap
jmp
scas
pop
or
in
(bad)
in
test
mov
push
ins
outs
mov
jmp
cwde
pushf
(bad)
mov
cmps
inc
add
jbe
and
add
jbe
sbb
das
stos
sahf
in
push
stos
mov
and
pop
jmp
xor
imul
adc
(bad)
retf
xchg
jmp
int
shr
cmps
daa
jmp
fcomp
push
xor
mov
call
outs
mov
in
sahf
sbb
movs
sub
std
scas
sbb
stos
icebp
in
cmps
add
loop
shl
sbb
push
lahf
sahf
fisubr
xchg
push
or
ins
cdq
or
xchg
mov
loope
inc
dec
dec
out
fimul
add
jge
mov
ja
jne
jmp
inc
fcomp
push
pop
sahf
test
cdq
add
ret
dec
and
cmp
pop
stos
mov
movs
es
neg
dec
pop
fwait
adc
adc
out
movs
rcr
pop
fnstcw
sub
fmul
das
mov
js
mov
mov
pop
out
jg
popa
js
sar
xchg
ins
inc
mov
mov
hlt
out
test
inc
test
iret
mov
jg
or
jb
daa
jo
xchg
dec
icebp
mov
inc
movs
aad
sbb
movs
fst
ficomp
lea
cwde
lods
mov
and
adc
add
imul
repz
movs
in
and
sub
cmp
sub
icebp
push
outs
or
neg
push
jbe
addr16
repz
sbb
pushf
sbb
(bad)
adc
sub
xchg
cmc
jmp
cmp
fistp
jge
test
sar
gs
aaa
mov
out
aam
test
mov
sub
lea
mov
bound
fisttp
loope
pop
add
adc
mov
out
add
stos
xor
inc
loopne
scas
(bad)
push
xor
daa
retf
mov
add
mov
lea
jmp
cmp
jle
mov
inc
into
ins
xor
lahf
jl
daa
xchg
lds
enter
sbb
jle
and
inc
je
pop
jae
sub
repnz
pop
fnsave
vpminsq
int3
sar
mov
ret
add
aaa
cmp
not
jns
retf
dec
stos
mov
rcl
js
add
cmp
fdiv
daa
sub
or
stos
ret
(bad)
push
rcr
fs
dec
dec
or
adc
sub
mov
in
xor
mov
mov
ror
push
xchg
cdq
(bad)
outs
jmp
or
mov
and
loope
bound
aad
jl
retf
imul
mov
xchg
and
pop
push
not
adc
stc
out
xor
cmp
test
cmp
sti
pop
mov
and
add
sbb
lods
call
cli
dec
jnp
dec
in
mov
mov
out
xor
in
mov
cdq
movs
aam
push
inc
aas
retf
jns
nop
repz
pop
inc
add
and
fild
cld
ss
mov
cmps
and
sar
ss
xlat
and
nop
or
cmp
dec
xchg
pop
inc
jecxz
push
jl
pop
(bad)
cmp
lods
xchg
fbstp
mov
add
pop
(bad)
and
inc
mov
movs
xlat
mov
cmps
in
scas
jns
xlat
mov
jle
cmp
mov
sub
ja
and
sub
sub
(bad)
lods
call
pusha
mov
add
cmc
and
imul
sub
mov
shl
arpl
jge
adc
ds
xchg
stc
inc
pop
scas
(bad)
dec
shr
sbb
ret
and
mov
adc
retf
sbb
in
stc
rol
mov
jb
stos
sbb
xchg
cld
test
outs
xor
cmp
mov
sbb
ins
xchg
pop
stc
int3
mov
push
add
call
push
cmp
adc
cmp
dec
cmp
popa
ror
icebp
mov
mov
fiadd
cs
or
add
inc
jp
sub
mov
xchg
mov
mov
or
daa
push
inc
fcomp
fidivr
bound
cdq
pushf
nop
icebp
(bad)
mov
push
cmps
jle
cmps
std
inc
jne
into
sub
add
xor
in
add
je
cmp
mov
in
lea
cmp
xchg
or
in
push
std
loopne
xchg
icebp
xchg
popf
fnstsw
adc
or
xor
mov
xchg
jp
pop
sbb
jo
and
out
jb
or
fisttp
out
je
stos
lahf
dec
loopne
pop
mov
jp
fsubr
sahf
jnp
test
mov
(bad)
add
add
and
mov
dec
sub
in
fcom
(bad)
inc
jo
dec
(bad)
push
sbb
(bad)
xchg
fs
add
cmp
ds
dec
fs
and
dec
out
es
dec
fisttp
(bad)
xlat
and
dec
call
inc
xor
or
pop
mov
aad
dec
or
push
fs
pusha
jp
lea
or
aas
icebp
sub
inc
ret
loope
out
call
push
jno
mov
in
(bad)
and
jmp
mov
movs
mov
jae
fbld
cmp
repnz
fsqrt
jb
imul
add
pusha
mov
sar
outs
push
je
ja
(bad)
jg
pop
adc
sbb
out
mov
imul
scas
fild
stos
fisub
int3
sar
out
div
push
add
adc
adc
sub
aaa
push
push
std
xchg
adc
out
xor
add
shl
outs
inc
push
lea
(bad)
outs
fcmovne
or
cli
clc
sbb
add
jge
gs
cld
jnp
jns
jns
cwde
push
and
test
adc
add
fidivr
arpl
cmp
fdiv
push
mov
bound
push
and
pop
gs
movs
out
lahf
jns
jp
dec
psrld
push
mov
push
or
ds
(bad)
mov
jo
push
mov
test
inc
push
repz
and
shl
sbb
jmp
(bad)
dec
and
sahf
outs
jo
fst
inc
and
mov
xchg
push
and
dec
stc
shld
popf
sbb
adc
mov
out
pushf
mov
sub
test
icebp
jle
ins
pop
mov
arpl
and
or
push
sbb
push
mov
mov
lds
inc
adc
cwde
out
or
jecxz
lahf
xor
mov
sbb
push
pop
and
movs
push
xor
adc
js
pop
data16
cdq
cmp
lahf
aad
mov
cmps
out
(bad)
push
ror
sbb
sbb
aas
neg
sub
inc
mov
dec
repnz
dec
das
mov
rcr
sub
das
and
add
sbb
push
shl
lods
xchg
and
sub
stos
xchg
xchg
rcr
shl
jo
rol
daa
dec
or
sbb
xchg
and
mov
outs
and
xor
inc
pop
jp
sub
xchg
pop
xchg
sub
xor
fcomp
cld
mov
movs
mov
mov
call
sub
inc
xor
dec
jl
mov
test
int3
push
push
and
mov
sub
sub
or
(bad)
jbe
inc
bound
add
loop
add
jecxz
pop
int3
inc
sub
cmp
xor
out
enter
out
out
adc
pop
aam
fnstenv
mov
stos
ror
imul
push
out
mov
dec
(bad)
add
(bad)
sahf
push
cld
pop
(bad)
rol
loop
inc
scas
push
cvtdq2ps
pusha
ror
imul
cmps
pop
pop
frstor
call
in
sbb
jge
add
shl
lahf
and
jo
jecxz
cmp
outs
aas
or
push
mov
pop
push
or
jp
stos
xor
and
mov
adc
aaa
daa
test
pop
retf
xor
call
mov
std
popf
push
adc
sbb
lock
clc
mov
adc
call
pop
jp
out
retf
jne
(bad)
lahf
int3
sub
mov
sbb
aaa
xchg
fst
or
popa
pop
mul
scas
movs
cmp
push
fsub
imul
in
jmp
mov
mov
pop
mov
mov
adc
ror
loop
cmp
fcomp
clc
push
jo
movs
pop
jmp
cmp
inc
xchg
mov
adc
mov
repz
ins
xchg
leave
sbb
jmp
outs
mov
mov
sub
add
retf
gs
dec
sbb
push
xor
dec
call
jmp
xchg
cs
lods
test
loopne
dec
mov
push
mov
xchg
cwde
scas
bound
cmp
fidivr
cmp
pop
pop
sbb
push
mov
cmp
jo
pop
mov
jns
inc
in
mov
shl
mov
out
cmp
dec
pop
lds
lahf
(bad)
mov
movs
pop
push
in
out
ret
int
ss
pushf
das
mov
push
push
ficom
icebp
and
outs
cdq
push
pop
mov
scas
(bad)
mov
add
retf
popa
push
fild
dec
xor
mov
nop
lods
cmp
test
push
dec
push
sahf
sub
push
pop
push
xor
push
push
push
push
adc
cmp
or
retf
lods
inc
(bad)
push
pop
test
movs
jnp
into
and
and
popf
sub
mov
loop
jns
jg
test
mul
dec
retf
push
out
add
mov
or
mov
pop
(bad)
pop
ret
pop
arpl
outs
sub
adc
push
push
or
out
in
mov
push
icebp
mov
mov
sub
pop
mov
xlat
cmps
ret
mov
lods
push
push
mov
fisub
ret
adc
mov
push
and
cmp
bound
dec
repz
dec
xchg
shr
jecxz
xor
fldcw
fcomp
pop
loop
(bad)
cmp
mov
int
icebp
jmp
rol
mov
or
dec
pop
rcl
xchg
mov
push
movs
jmp
fnstcw
dec
mov
(bad)
ins
sub
or
in
cwde
and
sub
jmp
push
inc
stos
or
and
jp
sbb
stc
cvtdq2ps
and
push
bound
hlt
in
sbb
sbb
dec
test
jp
mov
icebp
sub
add
popf
lock
dec
mov
pop
scas
xor
push
pushf
jle
push
ss
test
rcr
xor
push
arpl
aam
add
fucomi
rcl
data16
fisttp
or
mov
inc
xor
stc
push
push
pop
mov
in
js
(bad)
ret
cdq
not
dec
jo
push
popf
arpl
pop
popf
lods
nop
fiadd
pusha
push
or
cdq
inc
xchg
repnz
sbb
nop
sbb
and
mov
xchg
push
outs
(bad)
sbb
fcomp
popf
xchg
cli
popf
outs
push
cmp
mov
fisttp
dec
call
out
dec
es
adc
add
xor
int3
aam
std
mov
add
push
xor
inc
cmp
mov
aaa
push
push
and
push
inc
adc
adc
sahf
adc
(bad)
push
fist
sbb
mov
into
and
sbb
enter
icebp
mov
push
dec
push
cmp
sbb
xlat
mov
div
mov
sub
nop
(bad)
jp
cdq
sub
mov
sub
cmc
pop
aam
fimul
test
xchg
(bad)
jno
jmp
mov
dec
pop
add
stos
outs
jne
mov
inc
xor
sahf
ficom
or
das
and
jmp
or
mov
and
sub
ja
push
inc
call
add
les
inc
rcr
cld
ins
adc
pop
jecxz
dec
mov
sar
stos
mov
je
jecxz
pop
(bad)
(bad)
(bad)
int
cld
sub
pop
mov
mov
popa
je
pop
push
daa
mov
pop
enter
in
popa
mov
mov
stos
mov
push
test
test
fs
pop
sbb
ret
xor
test
popa
xchg
call
jecxz
(bad)
fcom
lea
pop
lahf
adc
ja
iret
cmc
sub
add
xlat
or
fwait
clc
mov
and
mov
sbb
int3
out
jb
lods
popf
push
mov
mov
sbb
and
xchg
mov
ins
gs
fcom
imul
div
mov
cmps
push
inc
mov
sub
mov
jne
sbb
mov
pop
xchg
mov
or
or
ja
out
popa
ret
push
test
xchg
ss
cmp
cmp
sub
mov
popf
mov
inc
ins
mov
push
xlat
aas
ja
(bad)
dec
jo
mov
inc
in
push
sub
js
int
xor
idiv
jb
fsubr
mov
dec
sahf
mov
(bad)
xchg
push
out
mov
in
rcl
les
out
push
cmps
call
fbld
cli
shl
sub
push
ja
mov
pop
inc
jp
inc
pushf
nop
fisub
pop
adc
cmp
xchg
mov
xor
or
out
mov
and
pop
cmp
mov
cld
(bad)
out
pop
push
mov
push
or
call
xchg
mov
cs
rcr
es
in
pop
sub
xchg
add
or
jl
clc
ror
sub
jo
push
out
xor
fisub
popa
or
std
add
imul
dec
and
xor
dec
xor
and
shr
cwde
mov
and
add
or
popw
test
pushf
dec
sbb
inc
push
test
dec
pushf
push
cmp
mov
stos
arpl
popf
iret
add
cmc
mov
fwait
push
ret
xlat
out
retf
ret
fadd
sub
mov
mov
cs
push
(bad)
sar
leave
or
shl
psllq
cli
ret
test
in
inc
adc
jg
jmp
div
sub
loop
sub
mov
mov
sbb
ds
fsub
xchg
xor
mov
jbe
fidivr
loope
inc
or
aas
retf
test
sbb
jmp
sbb
xchg
jnp
xchg
jecxz
fscale
jno
dec
or
lock
(bad)
xor
sub
(bad)
out
clc
push
xor
fist
in
bound
xor
cmp
call
inc
call
dec
xor
cmps
mov
pusha
or
xor
mov
adc
rol
dec
or
and
jnp
ret
xor
das
outs
popa
hlt
int3
cmps
mov
repz
inc
mov
add
pop
lods
stc
sti
cmps
mov
add
push
outs
lods
or
push
retf
add
lahf
xchg
push
(bad)
je
add
fwait
push
sbb
(bad)
fprem
xchg
add
dec
stos
mov
push
pusha
loop
pushf
dec
xchg
fnstenv
push
sbb
bound
xchg
cmps
sbb
loope
jl
pop
repnz
pop
(bad)
lods
mov
or
cdq
cs
sub
fldcw
adc
int
sub
mov
and
jb
(bad)
inc
xchg
shl
sub
popaw
cmc
sbb
fisttp
or
ror
mov
inc
test
mov
jb
xchg
ret
xchg
push
dec
ds
into
bound
xchg
sub
nop
icebp
jl
cmp
add
stos
mov
mov
mov
inc
or
add
mov
cmp
adc
inc
add
out
mov
add
call
inc
inc
cmps
sub
(bad)
cmp
xor
cmp
ds
inc
xor
xchg
fisubr
out
cld
icebp
out
les
cmp
mov
rcl
enter
ds
pusha
and
and
data16
imul
mov
pop
(bad)
outs
shl
outs
mov
sbb
jl
inc
stos
fcomp
xchg
call
sub
retf
mov
movs
dec
fistp
cld
iret
clc
mov
scas
jmp
mov
repnz
dec
ror
mov
fiadd
mov
jne
adc
cmp
(bad)
mov
cmp
lahf
stos
mov
add
dec
jb
cmp
inc
sub
dec
jns
sbb
xchg
sub
inc
imul
inc
sbb
fdivr
xchg
sbb
jae
push
sbb
(bad)
lock
inc
cmp
outs
push
push
xchg
call
in
mov
and
js
push
bound
adc
push
fadd
or
pop
add
xchg
and
mul
rcr
push
arpl
push
ds
xchg
je
mov
pop
stos
movs
test
pop
mov
xchg
push
leave
shl
in
(bad)
sahf
lea
xor
add
cli
push
(bad)
jb
fimul
adc
(bad)
jge
xchg
(bad)
mov
movs
sub
outs
adc
and
jne
pop
xor
xchg
loop
cmps
or
test
xor
lds
adc
mov
dec
ins
fadd
sbb
mov
sub
and
(bad)
(bad)
cli
(bad)
std
shl
lds
je
dec
mov
add
xchg
aad
scas
push
cmps
loope
mov
adc
inc
adc
fwait
push
loop
mov
dec
stos
idiv
es
test
sub
and
cmp
bound
pop
jg
add
fild
sub
xlat
(bad)
mov
lea
icebp
pop
cmp
neg
pop
aas
(bad)
out
aam
add
or
or
out
jb
push
mov
and
dec
push
pop
or
cdq
adc
cli
xchg
add
(bad)
mov
jno
ja
out
sub
sub
test
outs
cld
xor
xor
adc
fisttp
dec
jle
aad
or
pop
pop
in
push
push
lahf
nop
aas
mov
out
push
jmp
retf
cmps
jecxz
inc
ret
ja
jge
test
xchg
popf
ds
fmul
cmc
enter
dec
jle
dec
sbb
(bad)
icebp
cld
imul
aad
fs
js
je
inc
and
or
xor
std
push
xor
mov
push
pop
jb
lods
in
dec
jle
jmp
adc
jmp
or
push
sub
inc
ja
pop
adc
and
rol
push
call
iret
daa
jle
mov
shl
xchg
or
addr16
(bad)
jns
sahf
pop
ins
sub
xchg
(bad)
js
pusha
xlat
dec
mov
pushf
push
or
mov
xor
gs
retf
test
lds
and
in
xor
dec
and
inc
push
sub
push
mov
lods
xchg
push
push
(bad)
ss
and
push
loope
in
sar
mov
frstor
push
sbb
sub
jge
icebp
mov
dec
add
pop
xchg
nop
shl
std
mov
or
and
jp
iret
in
in
cmp
scas
push
test
clc
and
int3
add
call
jl
mov
adc
mov
mov
imul
fs
xchg
jmp
mov
mov
sub
pop
or
mov
cld
fwait
xor
push
sar
(bad)
push
adc
pushf
jno
lahf
or
pop
sahf
add
add
push
les
leave
jp
xchg
in
jne
das
adc
fld
test
adc
push
cmps
push
adc
fisttp
push
inc
sub
leave
mov
fld
adc
mov
std
les
xchg
add
inc
(bad)
mov
push
mov
jns
pop
rol
mov
inc
sbb
jmp
sti
or
nop
or
adc
xlat
inc
movs
iret
cmc
inc
sub
dec
scas
add
push
retf
mov
mov
push
jge
in
hlt
ja
mov
mov
jmp
aam
bound
push
lods
mov
dec
(bad)
cmp
sub
inc
sbb
cli
xchg
mov
aam
or
stc
pop
mov
mov
cwde
and
out
je
cmp
mov
enter
mov
enter
push
das
aaa
mov
cmp
or
mov
pop
popa
add
nop
fdivp
or
repz
lahf
mov
adc
jnp
(bad)
mov
and
mov
aam
mov
ss
imul
outs
fs
push
xchg
sbb
pop
jmp
rol
dec
sar
pop
les
jmp
sub
ins
psrad
movs
xchg
imul
and
mov
rcr
push
push
add
stc
aas
pop
push
push
sub
in
(bad)
pop
jmp
jb
add
out
mov
jg
loopne
pop
or
and
call
pushf
call
(bad)
out
jns
add
sti
adc
and
dec
fldl2e
mov
jns
sar
mov
sub
(bad)
pop
not
ret
jno
sbb
ret
and
inc
stos
mov
(bad)
(bad)
lods
nop
shr
je
mov
std
movs
xchg
inc
jge
xchg
mov
push
and
cmp
cmp
test
mov
cli
push
out
adc
popf
cmp
js
cmps
xlat
cli
or
or
and
sbb
sub
pop
xchg
sbb
popf
jp
inc
jae
imul
inc
mov
push
xchg
popa
pop
jnp
scas
lahf
call
adc
pop
das
add
inc
mov
rol
scas
adc
jno
adc
dec
pop
aaa
or
jp
sbb
movs
jmp
or
mov
adc
adc
hlt
bound
lea
int3
adc
lahf
cmp
xor
cmps
sub
pop
xlat
mov
xchg
test
cmp
mov
js
repz
lods
cmp
aad
fisubr
inc
not
jo
mov
mov
push
sahf
xor
pop
mov
stos
test
mov
cwde
jle
xchg
icebp
retf
push
pop
pop
repz
addr16
ins
in
loope
pushf
mul
push
sbb
mov
or
int3
lea
mov
or
mov
repnz
popf
cmp
cmp
mov
aas
stos
sbb
cwde
xor
mov
mov
add
adc
jg
pop
mov
pusha
cwde
jne
xor
xchg
lea
scas
xchg
test
ja
mov
int3
aam
gs
int3
mov
xchg
shr
ret
nop
dec
imul
shl
into
enter
and
jl
xchg
or
xchg
mov
dec
adc
retf
or
jns
imul
mov
(bad)
aad
daa
push
(bad)
jne
mov
aad
inc
iret
sub
fistp
mov
mov
cld
aas
pushf
in
scas
mov
pop
dec
in
cmp
push
bound
dec
jbe
mov
(bad)
pop
pushf
fmul
jge
and
loope
push
push
sub
inc
xlat
(bad)
fwait
pop
inc
push
scas
pop
mov
inc
push
cdq
(bad)
out
leave
xor
sbb
out
fwait
xor
fwait
mul
mov
jbe
paddsb
into
adc
pop
movs
pusha
pop
daa
lods
xchg
es
dec
add
popa
pop
dec
bound
jnp
ficom
pushf
xchg
mov
out
jle
mov
lods
shl
mov
mov
inc
jns
pop
fsubr
loopne
pop
(bad)
stos
cmp
jle
inc
and
inc
popa
xchg
cwde
mov
mov
(bad)
or
test
cwde
xor
ret
mov
es
fdivr
(bad)
mov
pop
jns
mov
xchg
ins
dec
sub
movs
mov
and
add
cmp
cmp
mov
sets
imul
sbb
into
push
ja
cmc
push
movs
inc
lods
and
fstp
call
sbb
or
mov
sub
jnp
mov
xor
int
jbe
xor
fimul
lds
dec
push
(bad)
jae
jle
in
out
loopne
movzx
jb
sbb
rcl
lds
nop
orps
mov
xor
jne
inc
dec
aam
inc
nop
rol
push
movs
clc
arpl
push
and
out
add
jmp
xchg
push
ja
icebp
pop
mov
dec
ss
adc
jno
jmp
sbb
xchg
test
adc
repz
mov
jl
and
or
in
repnz
into
mov
sti
scas
mov
cs
(bad)
ficomp
adc
mov
inc
mov
jae
push
pop
dec
jge
inc
shl
mov
xor
or
or
js
ins
inc
or
lods
and
pop
mov
jecxz
push
add
mov
mov
add
fld
pop
mov
pusha
jmp
pop
test
xor
push
xchg
cmc
outs
stos
mov
(bad)
xor
clc
dec
cmps
cmp
mov
and
int3
lods
jmp
sub
jmp
push
iret
in
es
(bad)
out
mov
ds
loop
push
xlat
adc
inc
sub
into
cs
xchg
and
mov
fstp
shl
sub
pop
repz
inc
bound
add
out
jge
push
fs
test
add
push
fld
(bad)
mov
xor
xchg
lds
mov
ss
sbb
sub
repz
xchg
pusha
jbe
fs
or
jno
jecxz
mov
(bad)
lahf
pushf
js
(bad)
xchg
sub
(bad)
sahf
xchg
cli
aas
movs
mov
pop
push
jnp
sbb
(bad)
aaa
loope
inc
mov
mul
sbb
movs
hlt
sbb
popa
adc
pop
fcmovne
cmp
push
sbb
icebp
daa
call
jmp
jg
pop
std
aam
or
mov
fst
shl
push
lods
fmul
mov
cmp
test
out
mov
add
push
push
mov
or
gs
icebp
push
dec
xchg
adc
test
loope
push
push
xchg
cmp
cmp
stos
mov
or
data16
jl
ror
pop
jae
out
imul
hlt
xchg
enter
or
jmp
pop
dec
xor
adc
mov
js
in
push
js
pop
rcr
lds
mov
clc
jns
pop
in
adc
addr16
repz
or
stos
xor
sbb
into
retf
sar
dec
paddw
cld
(bad)
std
jecxz
(bad)
fnstcw
push
jl
pop
(bad)
retf
mov
pop
mov
fldcw
xor
bound
push
cmc
stos
add
sub
bound
mov
jmp
jb
cmp
repnz
push
retf
add
push
pop
outs
sbb
aam
test
or
xor
fisubr
(bad)
dec
(bad)
xchg
scas
mov
popf
cli
cmp
frstor
cmp
outs
mov
cmps
jno
cmps
add
mov
jnp
icebp
fcmovnbe
dec
mov
cli
pop
xchg
pop
ss
out
push
xchg
cmps
inc
retf
pop
xor
mov
stc
vmread
sbb
mov
inc
mov
retf
mov
outs
sbb
inc
sbb
mov
or
dec
pop
daa
push
out
mov
daa
cdq
stos
push
cmc
dec
mov
add
cs
loope
sar
aas
out
cli
leave
xchg
mov
(bad)
jl
and
push
ds
nop
cs
fs
mov
jmp
jo
push
mov
out
sahf
sub
jo
lods
iret
rcl
pusha
mov
sbb
jmp
xchg
shr
inc
(bad)
cmp
cmp
stos
sbb
push
and
sbb
push
mov
xor
xor
std
(bad)
movs
js
pop
aaa
xor
jp
xchg
pop
jg
push
test
imul
sub
mov
xor
mov
movs
jl
push
sbb
es
cmp
retf
inc
(bad)
fisttp
jo
push
popf
in
pop
mov
dec
dec
or
xchg
jbe
cmps
adc
cmps
mov
ins
push
sbb
mov
jo
ss
pusha
pop
mov
pop
sbb
mov
jle
jl
outs
mov
dec
jmp
retf
inc
or
add
idiv
dec
and
gs
sub
cmp
push
jg
mov
push
add
inc
and
or
repnz
jmp
loope
not
adc
jo
sbb
lock
mov
(bad)
jp
cmps
sbb
dec
les
pop
mov
push
setno
loope
aas
(bad)
mov
repnz
aam
ret
adc
retf
mov
imul
out
shr
push
xchg
lods
(bad)
hlt
fwait
xor
sbb
and
out
fldenv
hlt
shl
sub
mov
vmwrite
out
mov
leave
mov
push
popf
mov
dec
cli
arpl
push
aam
int3
out
ret
xchg
dec
mov
out
repnz
clc
sub
and
clc
fsqrt
das
les
jecxz
cld
in
imul
xor
and
lock
idiv
inc
cmc
adc
cs
and
push
jnp
test
cmps
clc
movs
xchg
push
inc
cwde
sub
scas
popf
push
ss
adc
retf
adc
cld
pop
mov
(bad)
sub
das
cmp
std
fstp
imul
cmp
push
imul
cmp
ins
push
mov
sbb
and
mov
and
and
sbb
mov
cmp
push
cli
xor
ins
add
dec
xchg
pop
mov
inc
push
mov
xor
out
outs
jae
inc
pop
xor
loopne
mov
sub
mov
icebp
ds
cmp
stos
sub
jl
shl
mov
loope
jns
xor
xchg
xchg
dec
loopne
push
push
jg
test
mov
idiv
xchg
mov
scas
rol
pop
inc
shl
mov
inc
sub
test
stos
repz
and
mov
push
leave
cdq
push
jl
push
stos
xchg
sbb
jns
jecxz
cmps
nop
sub
jmp
jo
mov
test
pop
sahf
jmp
rcr
push
in
(bad)
fstp
cmp
jge
mov
xchg
idiv
mov
pop
(bad)
pop
ret
and
stos
popf
clc
jmp
cmps
jno
data16
mov
test
sub
mov
fcom
lock
mov
(bad)
and
js
scas
xchg
jnp
pop
jno
rol
dec
iret
popf
mov
shl
std
sbb
xchg
fnstsw
repz
enter
aam
push
mov
adc
mov
cmp
and
cs
sar
jae
lds
stc
mov
add
xchg
test
push
call
sbb
xchg
das
pop
xor
add
xor
mov
jo
xor
ss
(bad)
mov
inc
(bad)
movs
aam
stos
xor
je
inc
jb
sahf
fnstenv
ds
outs
mov
(bad)
mov
popa
imul
cld
sbb
daa
push
or
add
add
fldlg2
inc
int
xor
sar
jg
fiadd
stos
fwait
push
dec
and
fimul
add
(bad)
mov
sub
xor
xor
fsub
outs
mov
cmps
repnz
pop
mov
rol
movs
scas
cmp
fmul
push
es
adc
jge
ja
in
stos
pop
in
ficomp
ss
add
pop
mov
fistp
or
pop
push
cmps
call
cmp
xchg
push
fcom
jge
mov
pop
jnp
popf
aad
jp
(bad)
leave
std
movs
les
clc
cmc
sbb
stos
sbb
jecxz
jecxz
jp
cmc
jno
lods
out
jecxz
inc
push
inc
pop
mov
call
jae
jmp
jb
arpl
xchg
mov
rcl
xor
rol
add
cmps
call
cdq
out
adc
add
jmp
mov
mov
jmp
mov
adc
mov
xchg
xor
fidiv
mov
mov
sub
rcr
inc
mov
jb
scas
push
(bad)
hlt
jns
mov
or
xor
stos
out
jmp
daa
test
aad
scas
mov
mov
mov
xor
jl
xchg
dec
cmp
mov
not
call
push
and
inc
test
jg
and
and
pop
lods
dec
push
pop
imul
stc
xchg
dec
in
fadd
es
push
std
das
mov
jne
call
push
test
out
add
push
cmp
push
mov
add
mov
lds
aaa
jb
pop
sbb
xor
pop
icebp
loope
jae
mov
iret
adc
scas
jg
sub
aad
pop
(bad)
hlt
ds
in
xor
cs
or
adc
in
push
add
jbe
sahf
pop
inc
ss
loopne
push
repz
push
inc
adc
xlat
sar
inc
(bad)
stos
sub
adc
sub
addr16
sbb
mov
fisttp
rol
xor
push
loopne
das
fwait
mov
cmp
xchg
movs
jg
push
push
jecxz
retf
pop
in
fnsave
fist
dec
hlt
cmp
rcl
ror
hlt
and
fstp
das
into
pop
rcr
dec
xchg
push
popf
and
or
push
add
nop
mov
pop
cdq
int
scas
push
stos
adc
mov
loop
(bad)
or
das
in
dec
dec
xchg
scas
test
jo
dec
leave
enter
retf
clc
mov
retf
je
jb
xchg
add
mov
fdiv
or
mov
repz
icebp
pop
fwait
push
push
jbe
fld
jmp
jmp
jae
or
fcom
xchg
and
xchg
mov
loopne
mov
or
shr
fild
mov
pop
inc
ins
mov
pop
mov
mov
push
or
mov
popa
(bad)
in
in
jne
repnz
push
ror
push
ret
retf
fild
imul
push
push
or
inc
cld
pop
and
ins
mov
ret
adc
cwde
xchg
retf
fldlg2
jge
jnp
pop
mov
pop
dec
mov
stos
sbb
fisttp
pop
imul
dec
movs
adc
test
mov
jo
push
mov
scas
stc
cmp
inc
mov
cld
mov
sub
fdivr
adc
out
or
and
or
pop
mov
adc
jge
cmp
adc
js
push
xchg
xchg
xchg
xchg
add
add
in
arpl
ror
jge
cs
xchg
pop
lods
mov
sub
mov
test
imul
mov
push
push
sub
test
xchg
lock
sub
cmp
adc
mov
add
ins
mov
call
jp
icebp
fdiv
jge
dec
or
jg
mov
dec
fldcw
aas
xor
pop
cdq
push
sub
movs
ds
sbb
je
je
jge
jle
cmp
push
mov
mov
xchg
int3
lahf
(bad)
push
popa
inc
and
inc
ins
inc
aam
xor
xor
mov
inc
xchg
ficom
adc
xrelease
sbb
popa
movs
and
jo
(bad)
sti
aas
test
xchg
or
push
sti
push
push
stos
into
nop
dec
neg
stos
push
push
or
xor
cmp
inc
cmp
arpl
pusha
xchg
leave
pop
pushf
je
jns
sub
mov
dec
adc
xchg
push
mov
push
push
lods
push
nop
icebp
in
nop
add
push
sub
js
cmps
add
out
repnz
sbb
adc
push
cld
pop
in
jle
in
inc
ins
push
loopne
mov
sub
mov
xchg
xchg
jge
and
fwait
in
jle
and
and
mov
sub
mov
add
int3
enter
jns
ficom
fnstenv
dec
and
in
fwait
jno
xchg
pushf
dec
aaa
xchg
sbb
jge
std
stc
xor
scas
outs
inc
sub
bound
sbb
xor
imul
call
and
jne
xchg
push
add
mov
mov
mov
not
fwait
cmp
push
or
cmp
add
push
xchg
es
in
shl
or
or
or
call
out
mov
into
ds
stc
or
(bad)
in
ds
movs
inc
push
jmp
test
sar
cmp
mov
xchg
pusha
push
repz
xchg
jle
sbb
or
add
sbb
inc
cmps
fs
outs
ss
add
pop
fdivr
or
mov
pop
adc
cmp
data16
sti
and
xor
inc
test
nop
push
pop
inc
mov
dec
ins
loopne
jae
mov
push
pushf
push
pushw
mov
add
and
mov
std
sub
pop
pop
xchg
sbb
loop
cwde
sub
inc
aaa
add
leave
and
cmc
nop
pop
dec
xchg
adc
mov
lods
jne
leave
add
(bad)
daa
mov
mov
sahf
rcl
aad
cs
dec
inc
push
add
adc
mov
sbb
ins
mov
xor
jne
mov
aaa
xor
mov
push
inc
ficom
sbb
icebp
inc
test
scas
cli
jmp
stos
loopne
popf
and
pop
mov
mov
push
outs
dec
(bad)
fstp
mov
and
sbb
rcl
std
(bad)
cmp
into
imul
aaa
packuswb
xchg
adc
out
jbe
rcr
pop
sub
int3
clc
mov
or
movs
ficom
pop
dec
jl
mov
mov
outs
inc
(bad)
mov
pushf
stos
or
sbb
push
adc
lock
int3
aaa
push
int3
or
push
xor
mov
cli
das
into
add
les
sbb
xchg
dec
addr16
lahf
(bad)
mov
retf
imul
test
mov
pop
leave
aaa
lea
ficomp
sbb
xor
mov
aad
mov
test
jp
retf
jl
sub
in
movs
xchg
(bad)
mov
jo
sub
aam
push
jecxz
imul
(bad)
test
mov
loop
jp
loop
xchg
or
xchg
adc
movs
or
mov
and
push
cmp
sub
xor
enter
xchg
sub
lock
cmps
mov
mov
out
outs
mov
repnz
stc
test
push
push
in
cmc
jmp
mov
sbb
cmp
mov
test
mov
jmp
fbld
xchg
sbb
sahf
call
dec
push
loope
push
fcomp
and
mov
xchg
cli
ret
mov
les
rol
sub
dec
cmp
adc
mov
mov
dec
loopne
iret
mov
shl
loop
jmp
unpckhps
mov
nop
int3
inc
jg
jge
(bad)
(bad)
fdiv
mov
jmp
xlat
xchg
ret
imul
xor
test
push
mov
inc
mov
xor
sub
push
outs
sub
xchg
pop
and
fs
inc
clc
cmp
nop
push
mov
sub
sub
dec
in
cmp
xchg
es
(bad)
push
lock
sub
push
pusha
popa
mov
push
popf
mov
sub
cmps
xor
dec
out
inc
xor
jmp
dec
addr16
sbb
adc
jl
gs
xor
int3
or
mov
push
push
aad
sub
ret
pop
inc
sbb
mov
push
idiv
sti
retf
push
adc
outs
jne
mov
add
jecxz
and
mov
je
inc
dec
jg
(bad)
jmp
scas
mov
adc
cmp
add
nop
addr16
mov
add
push
inc
add
repz
pop
outs
out
iret
mov
out
icebp
mov
daa
mov
(bad)
cmc
xchg
or
adc
jns
cs
sti
push
cli
pop
int3
call
out
aaa
mov
shl
shr
ss
or
xchg
inc
jb
cmp
bswap
sahf
xorps
cmp
bound
rcl
xor
adc
sar
mov
test
test
test
(bad)
iret
sub
or
adc
or
jns
pop
mov
xchg
fstp
ret
jge
jno
jnp
mov
cmp
jmp
sbb
xchg
popa
jecxz
lock
push
inc
inc
mov
aaa
enter
pop
cmps
adc
fiadd
pusha
mov
loope
xchg
or
xchg
mov
mov
jge
retf
outs
fs
xor
and
jmp
leave
lea
push
dec
dec
ss
movs
pop
and
pushf
pop
add
imul
rcr
adc
fwait
retf
adc
or
test
lds
scas
es
dec
mov
mov
xchg
ins
push
jmp
retf
ins
dec
and
pop
xchg
rcl
xor
out
std
and
jge
ins
nop
xchg
mov
push
test
pop
pop
sahf
mov
sbb
aad
ret
outs
cmp
adc
jmp
or
cmp
loopne
xor
imul
mov
neg
es
xor
fnstcw
and
clc
in
add
(bad)
aaa
adc
pop
nop
inc
xor
ret
pop
mov
pushf
pushf
test
scas
retf
lahf
push
(bad)
out
(bad)
push
fld
dec
ds
dec
mov
rcl
stc
add
out
ret
mov
jg
xor
inc
cmp
jnp
repnz
mov
xor
or
cmp
arpl
sub
cs
mov
movs
sub
enter
clc
dec
xchg
ret
add
inc
dec
jns
sub
jg
mov
jno
hlt
jb
sar
push
and
push
scas
or
inc
fwait
or
mov
enter
ja
cmps
in
mov
cmc
lahf
mov
sub
mov
push
lds
cmp
inc
inc
dec
mov
shl
add
cwde
dec
in
pop
push
adc
nop
add
cmc
jb
jno
push
or
inc
icebp
cld
mov
ret
dec
lods
pop
or
fs
nop
xchg
add
sub
sbb
inc
adc
leave
pop
outs
aas
push
xlat
dec
pop
xor
mov
data16
scas
retf
out
mov
and
sbb
lds
add
mov
retf
ror
stos
mov
sbb
int3
dec
xchg
ret
adc
jg
or
pop
bound
sbb
sub
pop
pushf
or
sti
mov
jge
fdivr
adc
add
xor
mov
out
fcom
scas
out
push
jno
in
fcomp
mov
sub
lea
jns
push
pop
xor
mov
mov
jne
add
(bad)
rol
add
scas
mov
push
pusha
icebp
mov
test
loop
add
retf
xchg
adc
data16
jl
jmp
mov
push
std
jl
push
mov
pop
test
sub
sub
adc
pop
loope
add
into
xchg
add
mov
clc
in
xchg
arpl
(bad)
out
cmc
icebp
dec
int
call
scas
xor
ja
and
mov
inc
sub
retf
shl
aas
in
pop
bound
and
leave
mov
mov
test
leave
jl
enter
jl
mov
test
out
test
pop
nop
jbe
lahf
add
or
pop
pop
xlat
inc
test
jg
jb
test
movups
push
jbe
clc
jmp
pop
sub
call
and
mov
push
test
mov
push
sahf
jle
in
push
sub
and
xchg
jmp
jmp
push
inc
cmc
sub
and
and
into
js
sub
aas
ds
mov
mov
sbb
add
and
scas
movs
or
test
iret
xor
fsub
(bad)
movs
pop
(bad)
and
pushf
add
call
repz
mov
div
or
mov
pop
cld
arpl
push
ins
popf
sbb
jmp
popf
mov
sbb
jecxz
add
or
call
ficomp
xchg
jg
mov
push
adc
sub
ja
out
jns
mov
or
push
stc
cmp
ret
cmp
pop
icebp
xor
pop
ror
(bad)
pop
sbb
cmp
xlat
std
xor
mov
ja
(bad)
mov
idiv
dec
push
mov
movs
adc
movs
jl
mov
fdivr
in
sahf
jmp
aad
xchg
aam
sahf
movs
jns
pop
scas
jbe
mov
xchg
xor
repnz
or
inc
hlt
popf
dec
mov
sub
inc
les
lahf
xchg
int3
mov
add
sbb
cmp
push
push
retf
fs
cmp
mov
push
ds
jbe
daa
push
or
jecxz
shr
(bad)
sbb
gs
and
movs
and
lahf
pusha
inc
pop
mov
fdivr
into
std
mov
xchg
clc
xor
(bad)
dec
cwde
jo
mov
xchg
dec
xor
cmp
inc
cmp
data16
mov
add
adc
jmp
mov
pop
fwait
jge
rcl
icebp
pop
inc
test
fsub
in
push
jl
stos
cmp
and
mov
push
sbb
cmp
pop
(bad)
mov
jl
jp
repnz
iret
jp
push
xchg
pop
lds
cmps
xchg
mov
in
push
cli
and
sbb
mov
inc
xchg
sahf
cmp
ins
xor
loope
jmp
fmul
jmp
in
aaa
pop
int
ds
lods
xor
dec
cdq
shl
dec
arpl
cmps
jnp
xchg
loopne
xchg
test
mov
mov
or
cmp
dec
and
outs
push
mov
inc
daa
pop
in
cmps
bound
cmp
retf
shl
js
lahf
push
mov
iret
nop
push
(bad)
outs
pop
stc
dec
sti
test
or
xor
not
or
lods
push
iret
dec
cmp
hlt
xor
and
push
aas
clc
add
(bad)
(bad)
adc
jne
into
mov
xlat
rcl
popf
inc
mov
and
push
shl
sub
leave
dec
push
jo
cwde
test
mov
lahf
movs
call
jb
xlat
mov
rol
fisttp
into
in
dec
add
push
pop
loope
fcmovnb
dec
xor
addr16
inc
adc
sub
mov
xor
gs
pop
inc
add
ins
outs
retf
scas
adc
out
retf
sar
iret
data16
jle
add
dec
push
mov
push
(bad)
lods
(bad)
enter
shl
push
or
mov
cld
nop
pop
add
sub
scas
adc
sbb
jo
ja
cli
add
pop
add
or
pop
push
push
scas
shl
push
cmp
test
push
les
xor
sub
movs
xor
clc
jmp
sbb
push
jno
ds
addr16
cmp
xor
stos
(bad)
bnd
mov
inc
mov
xchg
dec
retf
(bad)
neg
add
ja
ror
inc
(bad)
dec
mov
jmp
mov
push
repnz
push
mov
pusha
lds
mov
mov
pop
icebp
dec
mov
inc
jne
gs
jmp
add
das
aam
movs
jg
jmp
repz
out
fbstp
mov
fsub
and
pop
xchg
sub
dec
jb
out
test
sub
adc
cli
in
pusha
loopne
pop
pop
and
sbb
add
call
jo
pop
inc
inc
icebp
lds
pop
mov
mov
push
dec
add
shl
mov
loopne
jne
pop
xlat
fdivr
fbld
fidivr
adc
in
movs
jl
jnp
jmp
push
mov
add
xchg
inc
test
inc
lock
jno
mov
mov
mov
movs
jecxz
leave
dec
xchg
add
push
mov
and
les
gs
xor
scas
aaa
mov
cmp
je
xlat
shr
sar
dec
inc
lea
out
in
movs
jno
sub
mov
sub
adc
jne
hlt
push
sbb
mov
add
or
xor
xchg
shr
adc
push
push
movs
mov
sahf
lods
les
vsubps
icebp
stos
inc
adc
fs
rcl
push
iret
pop
xor
jmp
rcl
cmp
out
mov
mov
and
(bad)
cmc
mov
jmp
in
fs
aas
cmp
push
into
fwait
push
sbb
push
les
jecxz
add
adc
adc
aas
or
es
pop
inc
std
xor
push
test
sub
bound
adc
cmc
sub
div
cmc
and
in
lods
mov
and
test
xor
push
outs
jnp
ja
jno
jo
mov
das
ret
hlt
aas
movs
test
mov
test
or
das
xlat
jecxz
shl
stos
mov
add
or
mov
test
jle
leave
sub
test
xchg
out
cmova
and
and
jbe
jbe
int3
dec
pop
push
mov
scas
push
cld
cmp
cmp
cmp
push
(bad)
in
jge
mov
jl
ror
ja
xchg
stos
shl
xchg
xor
add
jno
adc
neg
xchg
mov
in
push
push
pop
add
ja
pop
push
jp
xchg
sub
icebp
push
xor
add
mov
lds
fcomi
sub
inc
jl
icebp
push
jb
cmps
mov
cli
(bad)
adc
dec
int3
mov
jb
dec
cli
(bad)
cdq
fidivr
test
mov
and
xchg
mov
pusha
sub
sbb
or
dec
cmc
push
scas
jecxz
mov
cmp
push
sbb
push
into
sbb
fistp
movs
xchg
out
adc
mov
mov
shl
and
sti
pop
in
adc
pop
xchg
inc
sub
mov
cmc
or
cmps
into
sbb
sbb
(bad)
lock
adc
cmps
inc
arpl
ror
mov
jns
mov
daa
dec
jmp
imul
cmp
sbb
sbb
xor
sbb
xor
jno
dec
sbb
jne
repnz
cli
inc
ret
jmp
sbb
xor
adc
or
sahf
stos
or
or
xor
sti
dec
lock
sub
and
jmp
xchg
aad
jmp
mov
fucomp
xor
jns
sbb
add
ja
pop
(bad)
fnstcw
sub
pop
push
add
xchg
xor
(bad)
(bad)
aad
scas
push
aad
push
pusha
and
and
push
mov
dec
in
push
cmps
(bad)
jo
(bad)
lahf
pop
xchg
xchg
mov
int
jno
test
jns
test
fwait
add
aas
xchg
daa
xchg
enter
daa
jg
ror
lods
pop
inc
xchg
sbb
push
xor
sub
aas
mov
(bad)
leave
add
fiadd
inc
sbb
outs
inc
imul
pop
dec
sbb
repz
sbb
test
sar
xor
mov
retf
xchg
mov
ret
inc
sbb
dec
popa
stos
sub
stc
push
adc
int3
inc
aas
dec
or
arpl
inc
sub
inc
push
jo
mov
shl
pop
inc
cmp
popf
(bad)
into
out
dec
(bad)
cmc
cmp
and
ret
gs
mov
push
int3
or
vphaddubd
in
enter
inc
sub
addr16
scas
(bad)
jmp
push
mov
adc
out
shufps
and
add
inc
cld
lahf
jle
mov
repnz
push
jle
pop
add
sbb
std
mov
jecxz
ret
sar
push
and
daa
inc
enter
(bad)
in
mov
loop
push
outs
add
add
cmp
test
push
daa
inc
sub
mov
in
into
ret
add
cmp
and
iret
ins
(bad)
ja
inc
inc
movs
pop
popa
sub
sbb
lahf
sub
outs
add
jno
test
mov
xchg
fs
int3
xor
jno
movs
cs
cli
xor
mov
aam
aas
cld
add
dec
mov
pop
push
cdq
or
cmp
out
(bad)
jmp
ret
stos
into
out
push
cdq
xor
xor
outs
movs
lock
loopne
xchg
mov
and
jl
mov
push
ins
loop
aam
fldenv
fstp
mov
dec
pop
add
mov
push
int
sub
dec
fadd
movs
rcl
pop
pop
push
fucomi
push
mov
out
jecxz
in
arpl
xor
mov
cmp
fild
xlat
jl
or
push
and
ret
adc
ret
pop
mov
mov
test
mov
pop
adc
imul
outs
in
in
shl
movs
jo
adc
push
int
or
into
fwait
xchg
loop
sub
cdq
xlat
dec
push
out
cld
jecxz
adc
or
sub
repnz
push
js
test
ficom
(bad)
das
or
cli
into
mov
add
and
sbb
xor
mov
bound
adc
add
xor
adc
xor
push
sbb
jmp
push
mov
div
mov
sbb
addr16
xchg
ins
div
js
lds
xor
mov
std
cmp
icebp
jb
xchg
cmp
sbb
call
push
sbb
out
fistp
mov
inc
imul
mov
cmp
jmp
xor
sub
sbb
pusha
and
xchg
dec
fadd
fs
mov
fimul
stc
and
mov
out
scas
xchg
inc
push
cli
mov
dec
rol
imul
out
mov
mov
mov
xor
fs
sbb
test
push
xor
loop
dec
sub
mov
es
(bad)
sbb
pop
jbe
repnz
loope
dec
cmp
cmp
jo
mov
jg
test
push
jmp
lar
push
or
mov
vrcpps
imul
or
in
data16
mov
imul
rol
ror
dec
fstp
int3
shl
outs
add
lods
sub
sub
out
cmp
and
test
add
pop
out
mov
inc
ffree
pop
shl
fnsave
rol
mov
aas
mov
inc
aam
push
lahf
cmp
shl
inc
daa
xlat
arpl
sub
mov
repnz
and
sbb
ds
out
stc
retf
es
cmc
mov
data16
repnz
adc
dec
outs
lfs
pop
pop
cmp
sub
out
stc
imul
jbe
nop
fs
ror
inc
clc
cmp
es
push
fiadd
pop
stos
imul
(bad)
fcomp
or
dec
sti
call
sti
(bad)
std
shl
loopne
dec
pop
mov
xchg
addr16
adc
push
jle
(bad)
stc
ins
dec
dec
sub
(bad)
arpl
jnp
pusha
gs
call
rol
jmp
xchg
retf
mov
inc
mov
inc
test
mov
add
dec
and
aam
mov
or
xchg
mov
add
or
xchg
jbe
adc
iret
and
push
sbb
fisttp
inc
mov
ja
push
pop
ss
mov
pop
dec
pop
push
and
jp
call
jb
or
shr
mov
xchg
std
imul
scas
cmp
sub
lods
test
cmps
push
data16
out
bound
push
cmp
call
dec
in
cmc
shl
add
xchg
sub
int3
pop
push
mov
sar
(bad)
jbe
push
jle
std
dec
fcmovnu
lods
mov
sbb
retf
sbb
dec
idiv
call
mov
scas
ret
xchg
mov
clc
mov
pop
movs
cmp
and
lock
out
push
sti
js
fnstsw
movs
fisttp
sub
add
sti
jge
popa
stos
cmps
sub
enter
test
js
xchg
mov
add
or
sbb
pusha
call
pop
mov
call
mov
adc
iret
dec
add
in
mov
outs
add
pop
icebp
or
adc
inc
mov
mov
jg
fist
inc
ret
push
mov
or
ds
xor
cmp
jb
es
add
sti
or
aad
or
mov
ins
ror
pop
pop
mov
cmp
aaa
jb
and
ins
(bad)
inc
inc
sub
call
inc
xchg
mov
inc
aaa
in
push
push
push
mov
mov
pusha
sub
(bad)
mov
mov
sub
ja
jecxz
repz
sar
mov
clc
or
ins
mov
lea
mov
nop
cwde
xor
push
aaa
dec
call
ret
pop
hlt
inc
pop
dec
jecxz
xor
jno
mov
adc
icebp
mov
bswap
adc
dec
cmp
gs
ficomp
outs
lea
xor
pop
aas
push
jno
xor
fidivr
sub
add
xor
iret
mov
out
sahf
mov
jo
and
push
call
aam
mov
pop
imul
scas
mov
jns
push
jl
call
fwait
push
repnz
(bad)
ins
test
and
(bad)
in
es
mov
pusha
pop
and
cmp
and
add
ss
or
jb
mov
mov
popa
pop
xchg
jae
push
aam
daa
mov
add
mov
lock
xor
xchg
adc
push
cmps
sub
loope
mov
pusha
gs
adc
push
and
fisttp
(bad)
jl
iret
cs
cwde
movs
loop
xchg
push
popa
sbb
pop
or
xchg
shl
dec
mov
mov
in
pop
adc
ss
jmp
or
sub
dec
repnz
loope
jne
scas
sbb
inc
jae
nop
jmp
pop
pop
sub
sub
sub
xor
xchg
jle
xlat
cmps
lods
or
pop
pop
pop
mov
inc
ins
aam
push
arpl
ficom
xor
adc
add
xchg
inc
cmps
xchg
cmp
imul
add
mov
aad
inc
cdq
retf
cmp
add
and
push
in
hlt
outs
cmps
push
xchg
jbe
ss
aad
arpl
rcr
movs
js
loopne
cmp
test
push
jbe
movs
aas
hlt
mov
jmp
lahf
cmp
push
jmp
jl
enter
jns
mov
popf
ins
call
test
cmps
cmps
icebp
xchg
jne
mov
xor
push
sbb
ds
dec
push
push
sbb
std
jmp
retf
in
mov
inc
jmp
mov
pop
out
outs
pushf
mov
fs
push
ds
mov
cmp
loope
sub
mov
fwait
movs
movs
into
pop
fsub
jae
int
or
cdq
jns
ss
test
jge
xchg
test
inc
mov
jg
aaa
(bad)
mov
xchg
iret
xor
adc
cmp
popf
push
ja
pop
mov
add
and
jne
call
int
add
dec
test
(bad)
fisttp
mov
movs
cmp
push
jg
mov
out
xchg
lock
jns
(bad)
jecxz
sub
(bad)
retf
ret
mov
dec
inc
mov
push
pop
push
or
xor
adc
mov
dec
fiadd
hlt
jmp
loop
out
sub
push
sub
adc
dec
scas
out
arpl
pop
cmp
push
retf
push
mov
out
fistp
clc
or
fldenv
adc
add
jnp
gs
in
cwde
and
xchg
add
push
and
leave
out
outs
sbb
push
js
retf
sub
inc
rcl
pop
popa
xor
dec
pop
sbb
lods
mov
(bad)
aaa
sbb
xchg
(bad)
call
and
inc
cmp
sub
or
out
inc
in
dec
adc
dec
ins
adc
retf
ret
mov
(bad)
adc
pop
xchg
mov
mov
add
jae
mov
mov
cld
outs
xor
fwait
push
fsubr
test
sub
lea
sub
xlat
sahf
ins
jg
mov
shl
shl
out
inc
cmp
sub
in
out
push
shr
bound
or
xor
jbe
sub
es
add
out
ror
or
or
fmul
test
pop
loopne
bound
pop
loopne
fistp
adc
mov
cmp
leave
repnz
cld
test
sbb
ss
fmul
leave
mov
clc
push
push
cli
fiadd
out
jg
sti
js
sbb
cwde
test
jmp
cwde
mov
add
rcr
pop
add
mov
fs
adc
or
popf
jo
adc
shl
xchg
mov
call
sbb
gs
es
push
xchg
push
push
test
mov
je
push
mov
push
cmp
xchg
fsubr
fdivrp
or
xchg
gs
jo
ss
and
push
push
(bad)
or
mov
gs
sbb
cmc
jbe
(bad)
out
mov
sbb
xchg
add
xor
test
mov
(bad)
jle
adc
push
(bad)
iret
push
jnp
adc
enter
outs
cmc
add
push
enter
sub
xor
in
fnstsw
dec
dec
or
cmp
je
jnp
lock
cmp
adc
mov
pop
jnp
dec
mov
(bad)
inc
jg
cmp
rcl
cmp
sub
or
idiv
inc
dec
push
fisttp
mov
push
gs
cld
add
iret
fdivr
xchg
mov
xchg
and
add
mov
lods
pop
aaa
sahf
adc
fcomip
mov
cdq
inc
xor
rcr
mov
aas
aas
jle
ror
mov
mov
je
pop
mov
test
sti
shl
xor
fs
ret
aas
cmp
xor
add
mov
adc
je
jl
xchg
cmp
inc
push
xor
pop
sub
sar
push
push
or
cmp
mov
inc
daa
sbb
mov
adc
out
dec
mov
sbb
sbb
and
sbb
jo
out
daa
je
lea
adc
std
repz
adc
jp
inc
inc
push
mov
sbb
xchg
xchg
ss
xchg
or
test
std
(bad)
or
xor
inc
retf
dec
in
daa
pushf
adc
ss
call
lea
push
mov
sbb
add
inc
out
fbstp
cmp
add
mov
sar
jle
mov
int
je
fidivr
ins
repz
outs
or
inc
mov
clc
sbb
fstp
sub
scas
(bad)
ds
ins
out
push
cmc
out
jo
push
std
mov
rcl
std
jno
sub
cmp
dec
out
xchg
aas
mov
inc
adc
retw
ins
js
adc
fist
jge
pop
ins
movs
mov
xor
pop
sar
ffreep
in
sahf
sbb
mov
or
jne
sbb
ins
imul
outs
and
xchg
lods
ror
rol
mov
adc
sub
js
mov
xchg
push
xor
neg
jmp
lds
jle
push
cmc
leave
mov
lahf
and
xor
frstor
xchg
cmp
xchg
retf
adc
ror
xor
inc
and
icebp
xchg
ja
pop
pop
sti
sbb
test
repnz
div
or
fstp
(bad)
or
nop
pop
pop
pop
js
fisttp
(bad)
push
mul
and
mov
jns
test
add
mov
inc
pop
mov
sbb
(bad)
shl
fidivr
rcl
sti
inc
mov
jp
jmp
leave
je
xchg
jns
call
jo
ror
dec
pop
push
sub
aaa
bnd
(bad)
out
cmps
push
jbe
and
jge
mov
mov
js
cmps
jp
jecxz
push
into
xor
sbb
push
jmp
repz
out
and
sahf
clc
dec
mov
mov
repnz
xchg
adc
jge
mov
aam
inc
jo
mov
sub
ja
xchg
in
jo
shr
or
sbb
jae
add
pop
out
jns
rcr
mov
call
inc
pop
stos
mov
mov
daa
fcom
or
movs
shl
pop
pop
repz
jle
imul
sar
xchg
adc
and
mov
clc
fld
cmps
scas
adc
popf
ss
fmul
xor
dec
or
stc
cmp
sub
jo
hlt
cmps
pop
jmp
or
push
pop
or
gs
mov
arpl
or
add
(bad)
pop
sbb
dec
out
or
daa
fcom
xchg
mov
stc
pop
icebp
fisubr
mov
rcr
es
push
inc
ja
sub
clc
ja
or
test
leave
cmps
jle
clc
lods
pop
xor
(bad)
pop
jmp
ins
rcr
test
or
rcr
fisubr
icebp
div
lods
(bad)
mov
lock
sub
xchg
pop
adc
mov
jg
hlt
rcl
ret
sti
sub
rol
clc
jbe
mov
add
(bad)
(bad)
(bad)
cmp
inc
cdq
xor
cld
cmps
int
mov
sbb
movs
scas
pop
dec
jo
lods
sub
popf
(bad)
aad
dec
or
or
jne
clc
sbb
iret
popf
sbb
cmps
xchg
loope
push
jmp
shl
dec
(bad)
jle
in
dec
cmp
xor
cmp
lock
jmp
retf
movs
idiv
cdq
adc
test
ins
in
mov
jecxz
pushf
daa
(bad)
xchg
mov
and
stc
gs
(bad)
sbb
shl
in
mov
adc
mov
outs
adc
es
dec
jne
mov
mov
or
inc
jnp
fwait
and
scas
int3
in
in
lods
adc
inc
jbe
xor
sbb
test
ror
int
cwde
push
push
pop
cdq
xchg
sqrtps
gs
pop
mov
fs
imul
faddp
scas
in
pop
loope
jb
fcmovbe
cmps
adc
imul
call
jl
enter
sahf
(bad)
xor
mov
jecxz
inc
dec
inc
jo
inc
jbe
(bad)
in
imul
xor
ss
dec
mov
iret
sub
retf
icebp
sbb
ins
and
call
aam
imul
fwait
mov
aad
sbb
int
jbe
fwait
adc
ror
add
clc
rcl
into
cmps
xchg
sbb
ss
xchg
or
pusha
fsubr
xor
cmps
mov
dec
retf
pop
mov
adc
sub
mov
and
into
fidivr
xor
mov
repz
sbb
frstor
or
dec
pushf
out
es
adc
and
rcl
movs
inc
loope
mov
imul
(bad)
cli
fmul
mov
jmp
mov
dec
dec
fist
stos
retf
int3
cmp
neg
inc
das
sbb
jae
sub
mov
test
mov
fnsave
adc
and
or
mov
lods
lahf
call
sub
push
sub
cwde
xchg
(bad)
loopne
and
lods
add
ror
leave
bound
out
cmps
pop
add
ret
or
fcmovnb
push
(bad)
aad
gs
jmp
clc
es
movs
jecxz
sbb
repz
int
sbb
sub
sub
outs
cmp
xor
scas
adc
call
push
and
jb
or
aad
fwait
xchg
xor
mov
inc
and
outs
test
loop
sti
ds
ins
jns
movs
sbb
inc
push
mov
cmp
movs
mov
mov
add
scas
leave
jnp
stc
push
jbe
outs
cmp
fmul
sbb
mov
daa
pop
mov
add
mov
add
test
movs
adc
lock
out
aaa
sub
and
hlt
push
(bad)
bound
sti
or
dec
dec
mov
call
test
push
dec
pop
in
ret
add
push
or
fild
sbb
jle
stos
in
nop
dec
popf
shl
imul
and
cmc
push
pop
mov
retf
dec
cmps
cmp
dec
push
popf
push
daa
imul
je
out
repz
inc
stc
inc
lods
dec
js
scas
sti
inc
pop
adc
lds
in
push
test
popa
jg
xchg
pop
xor
addr16
xor
mov
sahf
shr
cmp
pop
xchg
out
mov
mov
adc
stos
push
in
popa
and
fsubr
das
inc
fwait
pop
push
lods
leave
jle
fld
xchg
pop
inc
ret
pop
lock
xchg
test
mov
in
or
push
test
jo
pop
xchg
fcomip
dec
push
movs
rcr
fidiv
pop
outs
out
lock
push
inc
xchg
mov
shr
xchg
sbb
movs
test
lods
jg
jno
call
push
repnz
test
dec
dec
outs
jns
out
outs
or
push
jmp
adc
pusha
imul
cmp
nop
pop
add
dec
pop
bound
daa
and
lds
mov
dec
(bad)
cs
inc
jl
test
adc
push
jb
aam
out
outs
rol
stos
or
or
push
stos
mov
es
mov
pop
or
mov
inc
mov
in
retf
cdq
mov
cmc
in
lods
push
lods
test
jp
push
pop
mov
pop
rol
jb
shr
adc
test
mov
xlat
je
dec
in
addr16
dec
mov
mov
cmp
sbb
stos
jmp
push
add
imul
jne
jecxz
push
(bad)
cli
and
test
sub
ds
jne
shr
iret
int3
je
(bad)
mov
shr
xchg
sub
cwde
jp
test
ins
and
fisttp
inc
enter
xor
adc
mov
int
adc
xchg
into
pop
push
cs
and
push
test
xchg
sbb
push
(bad)
adc
sbb
xor
dec
xor
fnstsw
xchg
clc
add
fsub
and
mov
inc
pop
mov
cmp
fs
adc
xor
cmp
add
into
mov
mov
and
test
sbb
cmp
sbb
scas
sbb
push
(bad)
jl
bound
sub
sti
pop
fnstenv
aam
sub
pop
adc
aad
pop
mov
bound
imul
cmps
and
push
mov
movs
dec
or
in
mov
aas
dec
jp
mov
push
fwait
cmp
jo
dec
sbb
jb
aaa
cmps
inc
outs
and
cmp
or
sbb
jbe
xchg
call
sub
lea
push
int
jp
out
ror
lds
stos
xlat
and
in
pop
add
mov
ret
mov
jnp
inc
in
jo
push
xor
(bad)
xchg
cdq
call
inc
cmp
sahf
test
cmp
xchg
push
push
out
pop
icebp
and
xchg
out
pop
jle
cmp
or
lahf
xor
or
fcom
jge
fwait
loop
add
sar
cmps
out
lods
mov
and
inc
mov
sub
adc
jno
iret
out
loope
loopne
push
or
mov
adc
add
shr
out
cwde
ja
cmps
or
adc
dec
in
clc
dec
(bad)
sbb
jb
clc
sub
add
cwde
push
mov
jle
cli
mov
mov
jp
xchg
pop
pop
(bad)
loop
inc
inc
inc
mov
mov
and
loop
pop
ret
push
push
or
push
nop
jnp
aad
out
inc
test
(bad)
pop
pop
pop
push
pop
sbb
outs
push
lods
div
push
lods
cli
cmp
test
and
scas
mov
jg
fimul
dec
pushf
jl
cwde
(bad)
loopne
mov
je
mov
cs
int3
cdq
cmp
fisub
into
in
cmp
fwait
mov
push
and
ins
lods
mov
xchg
sbb
sbb
aaa
fwait
lods
mov
lods
jp
mov
test
push
pop
int
jp
(bad)
icebp
(bad)
ja
loopne
sahf
clc
add
mov
retf
push
jno
jns
pop
jmp
in
sub
sahf
in
add
mov
mul
bound
ret
sar
retf
sbb
(bad)
push
shr
and
stos
fwait
push
dec
mov
stc
jno
icebp
lss
lock
movs
addr16
scas
fsub
leave
std
test
retf
test
popf
pop
mov
jno
movs
or
nop
ret
push
test
inc
dec
inc
inc
popf
std
sbb
jge
xor
add
mov
xchg
adc
and
retf
clc
arpl
daa
push
lea
xor
mov
and
loop
pop
mov
in
sub
sti
daa
pop
retf
pop
ins
mov
sbb
into
(bad)
daa
xchg
cmp
leave
hlt
lods
jl
arpl
adc
sub
jg
jbe
add
fbld
and
repz
jae
ret
cmp
repz
(bad)
mov
xor
mov
data16
loopne
les
sub
(bad)
mov
data16
mov
xchg
cld
sbb
ret
int
jne
ins
repnz
sub
jnp
pop
pop
push
test
and
dec
jne
jecxz
dec
xchg
push
(bad)
shl
es
stos
adc
push
fs
jns
test
leave
pop
pop
mov
xchg
pop
call
and
out
(bad)
clc
lds
or
inc
cdq
aas
mov
xor
lahf
xor
push
scas
test
add
jg
inc
cmp
in
push
dec
mov
mov
test
imul
jmp
nop
pop
xchg
call
xor
cmps
sub
repnz
mov
mov
bound
jge
fnstcw
mov
aas
jge
test
jecxz
out
jmp
ror
pop
fwait
enter
inc
dec
imul
dec
mov
jge
(bad)
ins
push
jo
mov
jmp
cmc
inc
scas
push
cli
arpl
jb
(bad)
imul
pop
dec
and
sbb
push
jecxz
dec
dec
dec
sub
das
dec
push
out
loopne
repnz
in
aam
loope
rcr
mov
fdiv
or
xor
jl
stos
xchg
jecxz
dec
movs
loop
sbb
fcom
push
movs
in
mov
or
movq
mov
daa
or
and
aaa
adc
pop
ss
or
xchg
shl
push
mov
dec
sbb
lods
adc
push
std
je
ds
ret
movs
xor
sub
sbb
adc
leave
jge
pop
push
add
pop
popa
inc
jl
dec
inc
repz
loope
mov
fwait
cmp
bound
daa
or
arpl
mov
push
push
adc
add
loope
fs
ds
cmp
xchg
int3
dec
pop
dec
leave
xchg
imul
sub
push
jmp
aaa
out
out
mov
sbb
ror
push
call
mov
jecxz
dec
retf
stos
xchg
call
int
mov
pushf
pop
or
in
mov
rol
clc
inc
mov
nop
(bad)
stos
jmp
mov
xchg
imul
adc
shl
push
adc
and
sbb
cmc
mov
add
or
pop
jmp
repnz
loop
lods
pop
or
fmul
aam
mov
push
xchg
(bad)
or
adc
xchg
daa
mov
retf
dec
hlt
push
mov
add
outs
cwde
xlat
addr16
jecxz
xchg
xchg
adc
jae
lods
mov
mov
std
ins
mov
dec
lods
(bad)
(bad)
jl
pop
into
sub
jp
mov
rdmsr
loop
fsubr
xor
mov
fld
fld
adc
pop
(bad)
stos
movs
xchg
test
pop
hlt
mov
dec
xor
or
dec
push
pop
cmp
shr
movs
stos
xor
xchg
ins
xlat
das
fbld
rcl
stc
jge
aam
enter
jns
gs
xor
or
out
xor
and
scas
mov
mov
(bad)
dec
cmp
pushf
(bad)
jge
inc
lds
xor
fcmove
fild
in
push
test
call
push
sbb
push
cmc
mov
sbb
dec
sbb
aad
cmp
shl
jbe
xchg
mov
fld
hlt
mov
cld
jge
cs
aad
xchg
add
test
push
test
jge
int
gs
sub
hlt
shl
and
push
mov
or
gs
jg
lods
(bad)
jb
mov
jp
fnstcw
mov
pop
test
enter
movs
xchg
pop
lds
adc
into
cli
loop
loope
pop
data16
and
arpl
push
jecxz
jge
ret
cmps
sbb
jge
sbb
adc
adc
jge
out
push
xor
bnd
jl
rcr
mov
add
or
movs
ins
pop
or
xlat
daa
jb
cmp
data16
retf
lds
pop
jne
inc
mov
add
xchg
jmp
push
sbb
stc
ds
sub
dec
enter
aaa
inc
lods
jno
push
push
sbb
int
mov
inc
sub
ins
xor
add
dec
mov
mov
sar
call
cmp
std
lods
fcmovne
aaa
pushf
push
out
pusha
add
pop
push
cmp
stc
(bad)
push
test
movs
xchg
aaa
data16
sub
or
push
fiadd
mov
sub
inc
dec
pop
adc
push
xor
mov
ret
leave
or
sub
sub
xor
mov
pop
pop
cdq
icebp
mov
lock
hlt
cmps
fwait
dec
aas
add
outs
test
not
pop
(bad)
mov
mov
nop
pushf
and
sub
outs
cdq
rcr
je
test
and
dec
int3
repz
add
inc
loop
sbb
in
add
sub
inc
jle
pop
iret
sbb
dec
mov
jno
stc
ins
pop
stc
aad
test
mov
outs
jmp
imul
and
dec
ja
fild
sub
jmp
sbb
cmp
aas
push
leave
add
stos
jb
mov
push
mov
mov
mov
mov
(bad)
cwde
mov
paddb
out
leave
push
or
jnp
imul
arpl
sub
sbb
cld
retf
xchg
and
sbb
dec
movs
xor
in
cmp
pusha
inc
test
and
dec
jmp
loopne
inc
cmp
or
push
arpl
aad
cmps
jecxz
xchg
pop
mov
xchg
or
push
cmp
sub
or
xchg
push
push
dec
cmp
cmp
mov
and
jge
cmp
and
(bad)
int3
jo
or
dec
or
xor
loop
jnp
lahf
rol
scas
(bad)
out
mov
xchg
jbe
pop
mov
pop
sahf
cmp
xor
jno
ret
push
jp
sub
jne
cli
mov
mov
out
into
mov
adc
xor
shr
jg
lods
hlt
dec
shl
pop
mov
out
div
rol
jg
nop
pop
add
loope
adc
or
mov
repnz
or
or
aas
mov
cmc
fisubr
fwait
sbb
push
pop
mov
jl
push
repnz
jnp
dec
adc
xchg
cmp
inc
(bad)
outs
adc
idiv
push
cmp
or
call
test
popf
push
sbb
fwait
out
inc
mov
dec
sub
je
inc
dec
(bad)
cmp
xchg
and
sbb
dec
lds
fist
xchg
mov
les
cmps
scas
dec
xchg
call
mov
mov
pushf
sub
out
cmp
inc
inc
sub
and
outs
je
and
xchg
(bad)
sbb
pushw
pop
jb
jp
cmps
int3
call
mov
sub
adc
xor
mov
jp
inc
or
xlat
jecxz
cli
push
std
scas
lahf
sbb
test
adc
test
repz
test
add
sbb
std
mov
cmp
add
in
ror
movs
adc
and
not
pushf
pop
add
pop
nop
loopne
jmp
xor
or
das
ret
lahf
pop
ss
add
leave
pusha
sbb
enter
cmps
fild
pop
add
add
pop
loop
aam
pop
mov
shl
push
and
int3
xchg
pop
jl
lahf
jmp
cmp
jl
push
ror
in
(bad)
stos
pushf
cmp
push
aaa
cld
add
jne
out
scas
xlat
outs
cmps
dec
ror
out
dec
aaa
xor
aaa
sbb
cmp
push
xor
dec
loopne
xchg
xor
ins
pusha
xchg
sar
fnstsw
and
and
xor
ficom
mov
icebp
cs
cmp
cmp
outs
push
jbe
iret
shl
rol
adc
mov
push
xor
in
(bad)
jg
inc
daa
push
jp
or
shl
xchg
mov
(bad)
sub
push
mov
aad
pop
imul
js
push
test
cmp
mov
sahf
shl
mov
idiv
and
xchg
clc
cs
xor
dec
lds
jne
gs
add
or
mov
shl
mov
fistp
mov
fsubr
add
pushf
fstp
repz
jp
add
in
adc
addr16
mov
push
dec
aaa
jecxz
cs
cmp
mov
sbb
fwait
dec
fs
or
aad
iret
dec
jge
pop
sbb
leave
aam
mov
push
fcomp
nop
jo
(bad)
mov
jecxz
add
retf
pop
(bad)
mov
or
adc
das
pop
pop
inc
fcmovu
fldenv
and
cmps
cmps
pop
cmp
aam
cdq
mov
inc
sub
icebp
shl
mov
sub
and
mov
mov
adc
ret
push
sbb
lock
xchg
mov
add
cmps
ins
mov
mov
out
fmul
sub
pop
cmps
(bad)
fmul
lahf
mov
pusha
inc
adc
ret
test
pop
fs
xlat
pop
fs
mov
loop
cs
jns
inc
pop
mov
push
mov
sar
imul
jno
mov
jo
xlat
jo
pop
out
pop
rcl
adc
neg
mov
fs
loope
mov
mov
mov
cmp
push
outs
cli
icebp
jne
data16
into
mov
mov
pop
push
jp
data16
add
pop
xor
and
push
xor
push
jae
dec
mov
adc
sbb
push
mov
xchg
push
in
pop
lods
iret
inc
ret
xchg
jo
retf
inc
adc
mov
sub
pop
xor
adc
sub
sub
or
ds
in
retf
pop
loopne
fdivrp
jae
das
pop
mov
mov
and
int3
push
(bad)
mov
(bad)
neg
mov
or
lea
add
ficomp
mov
push
mov
push
add
adc
dec
cld
pop
in
mov
xor
xor
iret
jge
test
or
outs
pop
add
(bad)
jo
sbb
pusha
xchg
daa
pop
mov
cmps
in
cmp
cmp
jmp
push
in
mov
inc
cmp
mov
xor
mul
(bad)
retf
data16
cmp
aas
pushf
and
pop
add
mov
and
stc
or
mov
scas
pop
jl
push
mov
mov
sbb
retf
jecxz
xchg
arpl
addr16
lea
push
fldcw
mov
test
loope
outs
or
and
mov
and
ins
xchg
add
cmc
lds
cmp
retf
imul
aad
xchg
cmps
pop
push
iret
outs
mov
jle
xchg
sbb
mov
pop
cmp
mov
push
or
sbb
fcmove
sbb
(bad)
pop
ins
xchg
or
dec
gs
fisub
cli
repnz
iret
sub
xchg
fidivr
cmps
mov
xor
adc
lahf
es
mov
adc
xchg
in
sub
nop
sub
pop
jg
rol
inc
mov
les
rcr
push
inc
inc
jl
jo
push
bound
aaa
push
ja
sbb
fwait
aas
push
out
call
sbb
ss
js
jo
push
jp
dec
jnp
jmp
pop
call
mov
push
imul
pop
inc
push
aaa
leave
imul
lds
pop
and
loop
movs
cld
mov
repnz
in
rol
xchg
add
call
rdmsr
ret
fidivr
popf
pop
dec
out
hlt
call
fs
rcl
movs
or
(bad)
cmp
xchg
mov
fcom
dec
je
cmp
lods
or
or
push
sbb
push
cld
sub
in
into
sbb
and
nop
or
enter
and
or
call
mov
sbb
shrd
dec
ret
ficom
dec
stos
stc
jle
mov
and
sub
dec
pusha
mov
fcmovnb
jl
dec
mov
pop
das
test
xor
push
mov
ja
xchg
jnp
jbe
pop
add
lods
pop
cmp
in
sbb
sub
xor
mov
test
push
xchg
clc
dec
dec
jne
cmc
ficom
and
call
ins
(bad)
sti
adc
add
lea
push
push
retf
shl
dec
push
fsub
mov
in
mov
jecxz
fwait
dec
adc
pop
mov
mov
mov
std
add
sbb
pop
lods
inc
int
inc
adc
and
ret
(bad)
mov
(bad)
int
jmp
js
jp
xchg
or
mov
rol
xchg
push
lods
or
std
jle
ss
xor
repz
push
test
or
add
and
jl
add
aas
pop
mov
mov
int3
aaa
mov
(bad)
ffreep
inc
mov
bound
push
dec
push
cmp
pop
adc
shr
scas
inc
jge
jecxz
jmp
stc
push
push
rol
add
add
inc
add
les
or
sub
or
sbb
jbe
jecxz
adc
mov
add
push
or
xor
scas
fist
loope
jmp
jecxz
mov
mov
adc
das
or
push
inc
add
fcomi
(bad)
lea
pusha
mov
lods
test
push
arpl
push
or
pop
lds
dec
cli
call
mov
out
mov
or
mov
shr
jbe
aaa
in
push
xchg
outs
add
popa
pop
ins
pushf
into
out
unpcklps
imul
fadd
pop
xor
shl
out
pop
mov
adc
add
dec
xchg
cmp
sub
sub
sub
dec
adc
and
in
or
jl
or
fimul
dec
cmp
cs
mov
jb
sbb
jp
ret
push
jmp
cmps
imul
std
in
and
jbe
fwait
arpl
mov
dec
add
pop
fsubr
pushf
fucomip
add
xchg
stc
js
ss
test
ficomp
icebp
xor
loop
mov
ins
aad
test
add
push
adc
aaa
mov
leave
rcl
add
and
ins
add
cmp
inc
ja
inc
jmp
mov
push
jb
sahf
sbb
xchg
mov
cmp
jne
(bad)
test
add
and
daa
xchg
dec
and
adc
xchg
(bad)
fwait
(bad)
push
sbb
pop
pop
mov
jge
jg
inc
loop
retf
stos
mov
or
je
in
mov
and
popa
in
es
(bad)
out
jno
not
xor
mov
cli
fsub
or
scas
enter
imul
jbe
int
int3
out
xlat
pop
scas
fldenv
mov
add
adc
pop
mov
addr16
pushf
pop
mov
into
(bad)
mov
jbe
hlt
xor
inc
and
mov
mov
dec
aad
(bad)
lods
cmp
xchg
ins
imul
and
loop
cmps
xor
cmps
fcmovnu
pop
jecxz
mov
add
sbb
ror
clc
cmp
add
jle
out
or
fs
(bad)
fld
jmp
std
adc
add
test
sub
clc
pop
cmp
add
(bad)
iret
xchg
jl
sti
lds
in
(bad)
sub
jge
in
inc
add
push
xor
mov
add
xor
cmp
cs
mov
(bad)
and
aaa
xchg
lds
into
retf
repz
aam
(bad)
movs
mov
pop
inc
stc
pop
add
pop
dec
leave
(bad)
sahf
dec
xor
add
and
pop
dec
sbb
pusha
lods
sbb
iret
rcr
xchg
mov
popa
(bad)
mov
xor
mov
mov
adc
outs
or
rcl
add
add
or
sub
mov
test
fdivr
push
cmp
ret
inc
aad
pop
sbb
lods
pop
scas
fcomp
inc
cs
jg
dec
bound
xor
(bad)
cmp
fist
call
mov
inc
or
lods
sbb
jp
cli
xchg
pop
xor
or
cmp
jo
fcom
xor
call
loope
inc
inc
das
jae
mov
or
dec
jns
outs
stos
lods
bound
js
scas
push
mov
mov
inc
sub
movs
pop
jne
les
mov
xor
sbb
(bad)
jmp
add
shl
mov
mov
repz
cli
pop
outs
xchg
mov
iret
mov
mov
xlat
adc
or
sub
out
push
cmps
cmp
xor
addr16
cmp
cmc
or
or
stos
ds
sub
adc
in
cmp
sbb
pop
xchg
fdiv
mov
push
cli
(bad)
popa
xchg
and
int3
test
sbb
cmp
pop
xchg
div
jo
and
push
sbb
das
fwait
repz
shr
and
fimul
pop
ja
fcom
ins
jge
mov
cmp
dec
(bad)
mov
jle
push
test
pop
cmovae
js
or
push
and
push
sbb
daa
sahf
fldcw
cmp
cs
xor
and
xchg
call
hlt
repnz
shl
test
lea
std
mov
cmp
fnstcw
sub
push
jmp
mov
jle
pop
mov
fwait
mov
push
cmp
mov
inc
mov
sahf
xor
cmp
add
inc
cmp
cld
add
cmp
xor
adc
movs
fdivr
imul
mov
cmps
loop
jmp
int
call
sbb
cmp
mov
icebp
mov
push
cmovb
sbb
xlat
or
pop
jle
cld
mov
adc
ret
and
jp
add
cdq
fwait
leave
mov
sbb
pushf
push
inc
jno
cmp
mov
push
stos
pop
in
pusha
push
data16
in
push
cmp
pushf
in
sbb
jmp
jns
out
jnp
xor
repnz
or
push
push
jmp
jmp
stos
mov
adc
(bad)
fisttp
mov
out
rcl
mov
out
push
adc
xchg
mov
jbe
dec
popa
ds
pop
ret
imul
xchg
or
out
add
imul
cwde
mov
pop
dec
or
mov
pop
push
push
mov
rcl
push
sti
cli
push
and
nop
cmp
xchg
retf
jg
jbe
cmp
retf
(bad)
lods
dec
xchg
xor
imul
(bad)
push
(bad)
cmc
nop
cmp
mov
sbb
sbb
in
cmp
dec
mov
ins
cmps
mov
stc
jmp
jecxz
out
push
cld
cmp
jae
mov
test
jbe
loopne
push
push
out
int3
imul
stc
in
xchg
jnp
loope
jae
pop
ret
pushf
jg
retf
mov
pop
ds
sti
cmp
or
and
or
es
sub
imul
mov
cmp
scas
jg
add
cmps
imul
jo
inc
mov
add
xchg
pushf
and
icebp
lahf
jb
jp
push
repz
aam
push
or
pop
jp
dec
jge
mov
idiv
mov
stos
or
sub
psrlq
inc
mov
pop
jb
mov
scas
les
dec
ins
dec
or
iret
retf
dec
cdq
out
or
mov
(bad)
retf
push
cmp
or
fstp
ret
mov
jl
loop
aam
call
nop
mov
cdq
clc
sub
mov
mov
dec
in
dec
mov
mov
xchg
nop
out
add
push
sub
add
mov
dec
nop
mov
cmp
pushf
jns
mov
push
xchg
sar
out
pop
xor
bound
dec
clc
push
hlt
imul
fldenv
sub
add
mov
sti
das
sbb
jo
lds
mov
jne
sbb
int3
or
fptan
ja
loop
xor
lea
cmp
stos
xchg
adc
arpl
jmp
mov
je
aad
js
xor
mov
popf
test
sub
pop
adc
pop
das
imul
(bad)
and
int3
xor
xchg
jmp
pop
mov
sub
xchg
ss
ss
popf
inc
call
fs
xchg
mov
in
dec
ret
xor
push
mov
jge
das
mov
ds
xor
cmpunordps
sar
out
iret
ins
sbb
scas
jmp
es
jl
hlt
je
test
dec
enter
pop
retf
hlt
sahf
jbe
movs
xchg
mov
rcl
mov
xor
mov
push
fsubr
push
loopne
mov
mov
mov
xor
leave
xor
jo
sbb
div
cli
fnstcw
and
sbb
sti
sub
int
std
(bad)
jbe
mov
mov
jl
sar
inc
xchg
das
jno
dec
mov
pop
lahf
inc
inc
adc
sub
xchg
cmp
push
sbb
es
adc
xchg
in
push
fmul
in
mov
rcl
dec
mov
xor
mov
jns
das
adc
jmp
push
add
into
ds
sbb
adc
test
dec
ds
ret
data16
or
out
neg
movs
bnd
repz
fimul
dec
pop
xlat
cwde
adc
sub
xchg
inc
inc
sub
jmp
inc
adc
inc
call
out
xor
aas
dec
lods
jmp
mov
jbe
jbe
aas
xchg
ja
(bad)
and
cmc
rol
clc
ret
dec
jmp
mov
retf
leave
jp
or
(bad)
pop
aad
xor
sbb
xlat
repz
xchg
retf
sub
mov
jmp
adc
mov
add
dec
stc
jns
push
cmps
fst
or
test
aam
popf
mov
xor
popa
fcom
in
xlat
lods
pop
enter
mov
mov
cmps
cmp
cmc
and
mov
ret
mov
out
int3
shr
sahf
pop
std
aaa
lea
jle
cld
sub
lea
std
and
push
xchg
mov
push
cmp
dec
stos
push
cld
std
dec
adc
imul
dec
inc
sahf
push
loopne
pop
or
jno
fimul
xchg
add
fmul
out
pop
sub
pushf
std
sub
test
mov
and
dec
mov
add
and
xchg
mov
retf
popf
sahf
jg
mov
xor
ja
(bad)
pop
cdq
and
lock
cmps
dec
das
std
adc
add
(bad)
sub
popf
jo
pop
jb
loopne
jmp
and
pop
pop
mov
add
in
adc
mov
fadd
dec
(bad)
sbb
push
call
lahf
stos
inc
sbb
cmp
loop
pop
pop
mov
(bad)
loop
ins
mov
das
dec
and
lds
sub
in
xchg
ret
mov
leave
sub
push
or
out
sub
sar
popa
test
icebp
adc
sub
fldcw
or
dec
aad
cmp
dec
out
dec
xchg
push
push
or
out
cwde
push
call
in
ins
adc
loop
leave
adc
xlat
ins
clc
ja
dec
imul
iret
adc
cld
mov
inc
add
fstp
sub
inc
mov
nop
lahf
mov
jns
push
push
dec
xchg
mov
and
add
sbb
arpl
retf
(bad)
inc
loopne
loop
pop
fcmovu
test
fimul
fild
xor
xor
gs
push
js
scas
call
sub
mov
cmp
ins
xlat
fdiv
loop
rcl
lods
sbb
jnp
jno
inc
sub
dec
sbb
test
popa
add
pop
pop
cmp
loopne
mov
jp
outs
or
in
lods
fcom
adc
retf
lea
cmc
(bad)
les
loop
dec
xchg
jmp
mov
cmovl
xchg
push
mov
test
cdq
jb
dec
fnstenv
and
scas
shl
inc
pop
ja
outs
pop
outs
sub
sub
dec
repz
movs
xchg
sbb
mov
out
(bad)
retf
mov
test
fdivr
inc
push
and
ins
ror
mov
cld
out
nop
repnz
sbb
rol
(bad)
dec
xchg
push
sbb
in
shl
mov
push
or
test
leave
mov
dec
imul
or
hlt
pop
movs
dec
test
rol
movs
jo
or
in
test
and
pop
sbb
test
xchg
ror
xchg
sbb
mov
pop
fistp
inc
inc
xor
add
cwde
test
cmp
cmps
mov
jp
mov
add
fs
jmp
xor
cmps
jg
std
xor
pop
add
shr
inc
ret
mov
xchg
cdq
inc
in
lds
jo
and
hlt
pop
outs
push
ficomp
popf
ss
pop
aas
sub
nop
sbb
jno
sar
pop
out
int3
dec
sbb
jg
fst
paddsb
rol
pop
adc
mov
mov
xlat
inc
retf
cmp
mov
add
addr16
adc
adc
fnstsw
(bad)
inc
les
mov
xor
mov
or
add
and
mov
aad
sub
or
xchg
adc
gs
loop
sbb
gs
pushf
mov
outs
shr
mov
jno
in
inc
sbb
jmp
dec
dec
jb
mov
jnp
pop
movs
push
inc
cli
xor
fs
and
mov
ja
pop
pop
mov
jne
pusha
jmp
pop
pop
and
jmp
mov
icebp
cmp
movs
push
xchg
inc
jne
arpl
in
out
(bad)
sbb
call
bound
mov
imul
hlt
push
sbb
inc
adc
nop
jb
mov
loop
sub
and
xor
inc
fstp
or
pop
push
daa
push
xchg
lahf
mov
into
loopne
cmp
scas
cdq
cmp
sti
mov
js
cmp
push
in
fcom
pcmpgtb
and
pop
pusha
repz
std
mov
adc
fdiv
test
fimul
out
xchg
adc
pusha
jb
push
popaw
xchg
ss
mov
mov
repz
sub
push
xor
inc
ret
sub
push
rcr
mov
je
mov
adc
and
pop
ss
call
call
aas
iretw
sub
aas
popf
fwait
xchg
mov
push
pop
push
hlt
fdivr
jmp
mov
pusha
xchg
js
mov
cld
cmp
mov
cmc
sub
mov
pop
pushf
pop
or
pop
xchg
and
test
or
pop
sti
shr
data16
dec
push
cmp
sbb
dec
or
mov
cmp
push
lock
xor
cmps
les
loopne
jmp
dec
lods
sub
dec
test
dec
add
xor
sar
daa
(bad)
or
mov
push
test
mov
sbb
pop
sub
in
mov
push
jmp
push
scas
push
pop
shl
jne
outs
mov
and
outs
sub
mov
cmc
inc
push
xchg
cmp
mov
inc
(bad)
(bad)
xchg
or
xchg
mov
(bad)
mov
mov
div
dec
cmp
mov
sub
leave
adc
(bad)
cld
imul
unpcklps
xor
lods
adc
xchg
push
enter
pusha
(bad)
ins
push
je
mov
jge
imul
sub
test
xchg
add
iret
adc
inc
lea
push
adc
dec
lahf
ret
dec
and
mov
cdq
retf
cdq
dec
jno
xor
je
add
movs
cmp
jge
adc
cdq
jp
neg
jb
int
das
jl
inc
adc
xchg
ins
test
jle
imul
or
aam
sahf
inc
push
lahf
outs
lods
dec
xchg
retf
mov
test
iret
(bad)
mov
jg
mov
and
dec
jnp
or
test
add
push
mov
movs
and
xchg
(bad)
inc
sub
or
add
xchg
jp
test
scas
(bad)
addr16
test
shl
(bad)
aas
inc
and
push
nop
enter
imul
push
repnz
xchg
test
dec
sahf
arpl
pandn
jnp
cmc
sti
and
sub
mov
daa
dec
mov
jecxz
jno
mov
fwait
hlt
push
inc
or
lock
lahf
cmp
out
(bad)
sub
inc
mov
imul
sub
sbb
fdiv
mov
aas
sbb
jmp
jae
jo
daa
push
mov
mov
push
xchg
icebp
icebp
xchg
stos
into
pop
out
cmp
sbb
int3
cmps
dec
xor
and
lahf
pop
cmp
cmps
out
mov
js
xlat
fcomp
xchg
jmp
pusha
push
ins
inc
not
outs
lock
jb
sti
inc
or
xchg
mov
test
je
shl
fadd
mov
pop
ror
push
sbb
sbb
push
fimul
rcr
xchg
cmp
popa
or
xchg
adc
pop
leave
cld
int
push
push
mov
cmp
and
pop
push
dec
inc
shl
in
rep
mov
jne
mov
adc
fs
out
iret
arpl
(bad)
rol
jne
mov
aas
(bad)
adc
ja
pushf
and
pop
cld
cwde
jge
(bad)
std
pop
nop
test
cmps
mov
xor
mov
add
fidivr
in
bound
test
adc
cli
xchg
adc
sahf
cmp
popf
mov
dec
push
(bad)
std
mov
rcr
mov
push
mov
xor
inc
out
mov
idiv
xor
cmp
iret
mov
pop
cmp
retf
and
cli
pushf
mov
push
mov
push
mov
push
out
jo
push
(bad)
push
adc
mov
mov
and
iret
inc
retf
push
xor
or
or
cmps
popf
(bad)
adc
mov
push
shl
cmp
jb
stc
test
test
mov
fidiv
jae
xchg
das
mov
pop
and
pop
and
into
(bad)
das
call
pop
xchg
mov
xor
mov
cmc
cmp
jns
dec
push
rol
inc
aas
adc
cld
movs
into
out
ins
mov
loope
out
std
or
ds
aad
cld
(bad)
hlt
jecxz
and
jmp
sub
jmp
fdivrp
mov
dec
dec
xchg
inc
fisttp
jnp
mov
adc
and
dec
gs
retf
aaa
call
inc
sbb
sar
aad
or
mov
xor
loop
sbb
scas
stos
jecxz
jge
imul
data16
cld
fldenv
pusha
and
push
mul
mov
lods
sbb
sbb
push
inc
push
inc
mov
lods
xchg
pop
sub
cld
push
call
sbb
xchg
xor
and
sub
push
push
xor
ins
cmp
outs
(bad)
mov
popf
ins
test
mov
sar
pop
push
mov
dec
pop
push
pop
sbb
into
dec
int
sub
push
fild
sub
div
mov
stos
pop
imul
sbb
sub
sbb
call
sub
pop
call
push
ror
int3
je
data16
mov
sub
cmp
mov
dec
mov
mov
mov
dec
pop
xor
ds
push
mov
xchg
shr
ins
vcmpltps
jae
in
mov
pop
bndstx
fidivr
jnp
sti
mov
dec
mov
dec
or
rcl
lahf
mov
jmp
mov
iret
ja
outs
jno
sub
sbb
cmp
sahf
cwde
lea
jge
rcl
inc
push
inc
das
xchg
push
aas
add
xchg
jp
inc
jo
hlt
push
out
and
mov
adc
ja
ins
cld
mov
iret
or
int
push
cli
stos
mov
or
pop
cmp
mov
call
sub
jo
sub
xor
lock
outs
shl
mov
ins
ret
adc
scas
mov
xor
mov
cmps
sbb
xor
cmp
sbb
into
(bad)
fdivr
test
int3
jle
mov
loopne
cs
sbb
scas
sbb
test
inc
gs
mov
dec
cmp
ins
test
xchg
inc
in
cmps
test
jb
pushf
cli
sbb
jb
sub
push
out
into
jae
ret
test
std
push
into
mov
mov
jo
and
pusha
out
push
loop
or
add
retf
xor
xor
mov
repz
mov
or
jg
int
mov
jbe
outs
(bad)
test
push
mov
and
and
add
enter
pop
sbb
jmp
sub
xchg
and
and
retf
ins
pop
mov
(bad)
jle
adc
xchg
gs
xor
xlat
xchg
mov
mov
inc
in
scas
mov
lea
popa
fmul
shl
je
rcl
mov
mov
mov
cld
mov
aas
dec
inc
es
jle
in
or
push
push
and
pop
mov
cmps
mov
ds
setg
pcmpeqd
leave
dec
mov
adc
mov
sub
addr16
aam
pusha
shl
std
cmp
popa
xor
cld
sub
xor
iret
or
rol
ror
push
inc
sbb
inc
push
mov
out
pop
shl
jne
scas
aam
mov
or
xchg
adc
jno
dec
dec
push
ins
pop
inc
imul
pushf
outs
fcom
push
add
in
mov
cmps
mov
mov
fneni(8087
inc
cmp
pop
ret
mov
aaa
ins
and
in
clc
sub
retf
iret
cmp
dec
push
mov
aam
fwait
adc
inc
ficomp
outs
pop
mov
jnp
sub
iret
mov
inc
and
push
es
jmp
jg
aas
loope
shr
retf
inc
and
out
mov
bound
mov
mov
or
outs
inc
push
jmp
add
stc
or
lods
inc
jno
jo
push
pop
retf
sub
adc
push
clc
pop
bound
scas
add
jmp
mov
sbb
add
lea
sub
mov
fild
stc
aas
pop
push
xchg
outs
adc
sahf
pushf
pop
aas
rcl
lods
fstp
loopne
lods
lea
ret
push
adc
xlat
mov
xor
adc
mov
xor
xchg
push
sub
int
cs
jp
xchg
scas
mov
cs
jl
xchg
mov
mov
out
jb
xor
pop
sbb
mov
stos
fcom
sub
or
dec
scas
xor
cmps
ins
les
sbb
aad
xor
push
sub
jle
xor
shl
jg
int3
int3
test
push
dec
mov
ins
(bad)
xchg
push
ss
jae
rol
movs
jno
sub
cli
(bad)
scas
ja
add
adc
jl
not
mov
retf
xchg
xchg
pop
dec
mov
cdq
pop
mov
aad
xchg
aaa
lods
clc
aam
xchg
loopne
in
cmps
mov
jge
xchg
rol
das
push
cmps
(bad)
loop
and
xchg
inc
cmps
loop
mov
dec
leave
inc
fwait
sti
mov
sub
push
sbb
add
je
out
mov
cmp
push
std
scas
js
leave
fsub
mov
cmc
fdivr
xor
neg
int3
sbb
or
imul
push
pop
and
xor
pop
inc
mov
jmp
jmp
test
push
cwde
pop
xchg
scas
ror
cmc
mov
aam
adc
mov
pushf
addr16
lods
imul
repz
movs
sbb
(bad)
mov
adc
pop
mov
cmp
add
lahf
dec
out
mov
loop
adc
push
(bad)
ja
out
and
push
push
shr
mov
jmp
or
or
push
cmps
aas
nop
inc
test
into
xchg
fistp
stos
out
popf
sub
call
lock
(bad)
pop
inc
hlt
mov
pop
sbb
fucomp
jg
(bad)
cmp
inc
stc
jge
dec
jmp
fcom
in
cdq
gs
cmp
jg
jg
jb
and
pop
sub
cli
inc
sub
call
add
aam
je
jge
cwde
push
add
outs
gs
(bad)
fidivr
lea
(bad)
sti
pop
mov
stos
adc
xchg
xor
pop
mov
je
pop
je
push
xlat
pusha
(bad)
push
hlt
scas
cmps
dec
mov
sti
inc
jecxz
xchg
inc
shr
push
or
push
sub
(bad)
lea
adc
push
mov
mov
in
pop
pop
xchg
dec
adc
mul
pop
jns
in
leave
stc
dec
add
push
xor
xor
clc
out
dec
jecxz
int
inc
push
dec
mov
or
mov
jns
add
xlat
test
sub
leave
add
inc
out
call
inc
cdq
loop
retf
test
in
retf
cld
mov
sbb
mov
lds
aam
scas
cmps
push
add
sbb
test
jle
pop
mov
jecxz
mov
adc
int3
jne
loop
xchg
jo
jge
js
pop
(bad)
jle
dec
inc
xchg
je
and
mov
adc
hlt
cdq
mov
aaa
push
ds
add
mov
call
lea
lock
sub
mov
adc
data16
jle
test
int
jmp
xchg
aaa
xchg
lods
jae
loop
ficom
xor
sti
or
push
push
std
gs
daa
pop
mov
push
mov
dec
add
push
and
adc
sbb
mov
(bad)
fisub
fist
jl
scas
icebp
inc
imul
stc
jl
mov
push
arpl
aam
jmp
dec
out
mov
push
ss
sbb
add
(bad)
adc
sub
inc
movs
arpl
xchg
fwait
test
ret
mov
mov
and
fwait
xchg
sahf
push
sbb
jecxz
add
hlt
add
stos
mov
pushf
fucomp
jmp
and
fsub
or
add
dec
and
mov
loop
adc
mov
mov
in
out
mov
retf
dec
push
adc
cwde
bswap
inc
out
retf
mov
out
pop
pop
call
adc
int
adc
imul
jecxz
js
ret
add
push
push
mov
mov
pop
pop
jge
sbb
cdq
(bad)
ss
jge
lods
leave
pop
lahf
(bad)
aam
sbb
add
jne
push
call
repnz
mov
es
in
ins
mov
jmp
adc
fisttp
sbb
dec
xchg
adc
xchg
mov
add
and
jge
pop
and
aaa
pusha
cli
ret
test
add
inc
pop
shr
mov
pusha
repnz
fidiv
in
and
sbb
cmp
mov
xchg
push
imul
push
aaa
ja
fwait
test
or
mov
popa
movs
rol
pop
jbe
push
mov
(bad)
mov
nop
jmp
hlt
in
sbb
iret
sub
(bad)
in
xor
repnz
cmp
test
mov
and
call
dec
dec
add
mov
bound
(bad)
cli
not
cmp
dec
jmp
jge
mov
dec
mov
push
pusha
mov
fidivr
ins
add
mul
inc
scas
mov
and
or
imul
mov
or
clc
jnp
inc
push
ins
jae
mov
out
mov
pop
out
push
shr
popa
shl
push
mov
ins
fmul
imul
cld
shl
ja
cmp
pop
bound
das
or
and
fadd
rcr
jecxz
out
xchg
icebp
push
mov
je
dec
int3
dec
sbb
sub
mov
jne
dec
xor
out
xchg
push
or
dec
jg
pop
jge
dec
fld
loopne
cdq
inc
mov
pop
and
loopne
mov
or
jl
out
mov
retf
loope
inc
cmp
sub
pop
dec
jmp
adc
and
push
mov
fwait
mov
outs
sub
mov
int3
stos
mov
iret
add
fadd
xchg
inc
aad
jg
rcr
jns
inc
dec
shl
dec
data16
sahf
pop
pop
adc
pop
iret
stc
fidiv
jle
pushf
mov
dec
or
cmp
sbb
mov
rcl
dec
cwde
lods
sub
fnstenv
(bad)
fs
mov
mov
push
pop
add
pop
adc
clc
sbb
add
add
cmc
loopne
inc
fimul
mov
mov
lods
(bad)
mov
mov
xor
movs
sbb
push
in
gs
xchg
adc
mov
aad
fwait
shl
loopne
or
mov
adc
sub
dec
or
sbb
cmc
mov
add
lock
mov
jnp
scas
sbb
push
push
cmp
dec
xor
mov
out
enter
clc
inc
dec
cli
daa
sbb
ja
push
jl
pop
test
pop
pop
movs
and
and
in
popa
leave
mov
std
ja
and
mov
or
stos
mov
jb
mov
pop
adc
xchg
inc
mov
or
mov
dec
sar
xchg
and
out
ror
ins
sub
xchg
(bad)
pushf
push
fbstp
lea
jae
movs
imul
adc
mov
pop
mov
(bad)
dec
xchg
jmp
(bad)
loop
in
adc
stos
fisttp
ror
movs
mov
mov
xchg
lock
lock
hlt
inc
(bad)
cwde
jle
jge
mov
data16
in
push
jne
and
mov
jle
movs
ds
xchg
cs
pop
std
pop
jnp
fstp
test
arpl
sahf
cmps
pop
loope
pop
int3
(bad)
fnstcw
adc
mov
mov
mov
cdq
pop
and
pop
(bad)
push
mov
dec
mov
outs
pop
retf
iret
retf
mov
lock
mov
xlat
or
icebp
popa
popf
jns
sti
call
add
fstp
cs
cs
jae
call
sbb
cmp
xor
push
or
mov
pop
ja
pushf
daa
lock
arpl
pop
sar
sahf
mov
dec
xchg
(bad)
test
or
push
stc
dec
scas
scas
xchg
mov
xchg
and
push
dec
xchg
fld
pop
sbb
push
imul
addr16
dec
ins
dec
test
cli
sbb
dec
mov
pop
pushf
ja
pop
push
xchg
push
jg
add
jne
mov
call
dec
not
sahf
ror
xchg
and
loope
dec
inc
cld
add
cmps
out
xor
mov
scas
in
sbb
popf
and
imul
clc
cld
nop
xchg
jae
test
scas
mov
ja
cmp
mov
pusha
dec
lock
inc
mov
retf
in
ret
neg
push
sub
or
dec
pop
or
repnz
js
mov
loopne
repnz
cdq
add
out
xor
xor
cmc
jns
lods
sub
mov
out
and
out
dec
xchg
pushf
sbb
xor
stc
lahf
mov
push
(bad)
adc
jmp
inc
in
aam
jno
dec
pop
int3
push
pop
ror
data16
add
inc
cmp
add
and
cmp
mov
jp
sub
in
mov
jl
pop
je
add
jmp
cdq
inc
sbb
sbb
push
pop
xor
sub
stos
sub
pop
stc
jbe
mov
pop
xchg
in
and
test
fild
shl
stos
icebp
push
popa
and
mov
movs
loopne
jg
push
int3
mov
sbb
into
retf
jmp
sbb
pop
std
xchg
mov
cmp
push
sub
sub
iret
cdq
push
jl
(bad)
sbb
jns
xor
mov
pusha
xchg
enter
cmp
and
dec
test
loop
stos
inc
jmp
add
jmp
ja
jnp
loopne
push
push
xor
mov
jbe
inc
jp
sub
push
sbb
jp
push
push
jg
mov
mov
leave
push
pop
shr
lods
adc
popf
and
imul
int3
or
movs
push
outs
or
icebp
nop
add
mov
xchg
outs
xor
xor
mov
jge
cmp
test
int3
and
add
cmp
test
fisubr
dec
(bad)
dec
or
imul
sahf
ss
loopne
in
pop
jae
lds
test
aad
mov
stc
inc
jae
int
jo
jg
lock
mov
sub
and
sbb
imul
mov
adc
lea
es
and
adc
ins
iret
push
movs
test
mov
jmp
mov
push
jne
and
outs
sub
sub
mov
xchg
mov
xchg
sbb
aas
lahf
mov
imul
mov
ret
bound
dec
das
jmp
scas
dec
cmps
aas
imul
push
jae
sub
push
push
inc
ret
test
jae
rcr
dec
stc
pop
mov
retf
inc
push
push
xchg
aam
div
and
movs
jo
ret
and
dec
call
xor
ficom
loop
jo
push
das
inc
stos
les
add
xchg
imul
sti
mov
sbb
add
pop
xchg
pop
push
outs
jmp
xor
outs
imul
(bad)
data16
fld
stos
xchg
xchg
or
sahf
cwde
mov
stos
rcl
pop
das
outs
dec
xor
mov
scas
iret
jmp
jge
mov
jb
mov
jp
add
cmp
push
or
xor
movs
sub
mov
ja
rcr
pop
sbb
push
into
fsubrp
lods
cmp
cdq
jmp
xchg
sar
jae
stos
pop
dec
push
pop
stc
jne
cmp
push
je
fisttp
addr16
cmps
leave
or
hlt
dec
jg
xor
mov
enter
out
xor
mov
pop
enter
inc
push
addr16
mov
push
push
inc
add
dec
mov
pop
and
cli
test
scas
jp
fucomip
cmp
cli
lock
sub
cli
or
or
stos
xor
sbb
stc
adc
xchg
call
popa
jle
int
push
nop
adc
sbb
inc
add
mov
or
inc
sbb
stos
fistp
mov
(bad)
pop
movnti
pushf
pop
and
call
xchg
and
sub
cli
add
pop
mov
retf
stos
add
retf
xchg
retf
jp
(bad)
iret
and
adc
aad
mov
and
mov
pop
mov
fucom
push
inc
pop
xor
sbb
pushf
jne
lea
inc
mov
les
jge
adc
cmp
out
pop
or
sbb
adc
pop
pop
call
push
xchg
mov
xchg
(bad)
call
(bad)
sbb
(bad)
mov
inc
daa
sahf
stc
jp
or
push
pop
pop
push
mov
sbb
popa
int3
das
or
push
add
push
cmp
aad
jmp
lock
dec
test
mov
not
or
mov
(bad)
js
fnstenv
call
arpl
icebp
pop
jne
js
into
sub
xchg
ja
arpl
(bad)
or
jle
rol
test
push
test
sub
pop
pop
test
in
mov
(bad)
fdiv
jb
hlt
xchg
push
xor
mov
sbb
enter
popf
int3
add
and
mov
jmp
in
cld
test
jae
sbb
pop
sbb
jae
add
xchg
in
and
clc
popf
push
pop
arpl
ins
adc
in
imul
ret
pop
addr16
ds
sbb
ja
or
adc
test
data16
pop
sti
fwait
mov
idiv
lods
cmp
or
ret
retw
and
aaa
mov
loope
int
(bad)
push
nop
mov
arpl
cmp
pop
dec
fldcw
je
mov
push
add
stc
retf
fcmovnu
add
rcl
movs
xor
std
push
jecxz
fwait
fwait
push
push
xchg
xchg
push
sbb
(bad)
movs
in
fsub
add
pcmpeqb
jb
jnp
cli
repnz
retf
push
push
ja
mov
bound
mov
ret
je
cmps
xor
push
adc
std
jae
leave
out
dec
aaa
movs
sub
popa
iret
test
test
aad
test
lahf
sbb
jae
jns
ins
loope
cmp
sub
into
(bad)
and
ins
rol
cmps
and
shl
pusha
out
add
bound
test
fidivr
push
aam
loopne
adc
int
popfw
mov
dec
(bad)
mov
enter
cld
stos
test
jmp
cmp
xchg
pop
add
cmp
jg
(bad)
mov
fld
dec
inc
ja
movs
in
sbb
mov
adc
dec
and
stc
dec
and
mov
iret
dec
pushf
mov
jmp
cmp
outs
mov
imul
or
pop
inc
lahf
loop
retf
mov
shl
outs
sar
jge
cmp
adc
lea
lahf
mov
or
fnsave
jp
pop
xchg
lock
ret
or
xchg
mov
jmp
mov
daa
pushf
arpl
jmp
mov
ds
mov
in
and
aad
mov
ja
pop
ror
jl
push
mov
xchg
pop
jbe
fwait
lods
sub
jle
mov
dec
nop
cwde
add
mov
jg
add
mov
pop
sbb
retf
je
fisttp
retf
push
mov
or
push
and
and
push
enter
sti
mov
stos
dec
xchg
outs
xor
jo
xchg
loopne
rcr
enter
movs
or
jnp
xchg
repz
jns
movs
pop
and
lds
dec
sub
dec
mov
sbb
loope
mov
leave
in
jo
dec
or
add
pop
in
cmp
imul
aad
pop
scas
add
leave
adc
jg
ret
sub
inc
push
xchg
cmp
xor
cmp
mov
xor
jl
sti
test
mov
rcr
gs
pop
mov
inc
mov
imul
push
addr16
aam
push
push
pop
scas
sbb
repnz
repz
jae
or
clc
xor
and
idiv
icebp
stc
ins
or
iret
mov
cdq
pop
adc
mov
mov
adc
jmp
or
popa
mov
inc
pop
adc
in
mov
pop
hlt
xchg
aam
and
or
xchg
repnz
mov
into
(bad)
pop
push
sbb
pusha
xchg
sbb
pop
adc
or
movs
sti
sub
lea
rol
push
call
jno
data16
das
pushf
add
(bad)
cs
or
inc
cdq
out
aas
dec
and
fld
adc
(bad)
(bad)
mov
test
mov
jae
mov
jg
push
xchg
add
push
sahf
xchg
ins
scas
mov
sub
call
ss
push
xor
sub
pop
inc
mov
jmp
inc
popa
nop
dec
push
xchg
push
mov
pop
jp
push
pop
xor
inc
cs
pop
sbb
shl
sub
mov
inc
test
scas
and
in
mov
iret
or
push
cmp
loope
es
clc
nop
call
test
ret
add
sar
or
pushf
jle
sbb
addr16
xor
pop
aad
inc
ret
sbb
rol
or
arpl
mov
push
push
or
jae
dec
pop
add
aaa
movs
push
js
xor
repz
xchg
sub
neg
in
(bad)
jnp
lock
xchg
jmp
fdivr
fisttp
pop
cmp
add
stos
gs
int
cdq
gs
inc
add
arpl
xchg
pop
retf
jmp
jecxz
push
mov
cli
jmp
xlat
sub
xor
jl
clc
pushf
dec
ficomp
and
cmp
(bad)
jmp
aam
pop
in
inc
call
jae
jno
(bad)
pusha
or
mov
fidiv
push
retf
test
fldcw
scas
inc
add
(bad)
out
and
xor
(bad)
push
pushf
mov
lea
cld
ret
xchg
sub
mov
aam
aas
cmp
push
repnz
jge
cmp
test
jmp
pop
es
imul
adc
imul
scas
mov
jne
fbstp
cdq
xchg
pop
aas
sub
and
lock
dec
xor
cwde
sbb
fst
fcomp
daa
or
fxch
dec
mov
xchg
sti
push
pop
sub
or
imul
pop
pop
cmc
inc
pop
adc
imul
mov
fwait
rol
fwait
and
mov
xchg
sub
retf
icebp
pop
les
xchg
into
nop
or
pop
push
data16
std
push
dec
inc
into
pop
jnp
lods
dec
test
xor
sbb
dec
mov
out
or
leave
pop
dec
adc
jmp
dec
and
movs
inc
arpl
jg
pop
out
sti
xor
int3
bound
gs
push
popf
mov
inc
jle
push
js
fcmovne
out
inc
sbb
add
cmc
xor
pop
ret
sub
inc
mov
mov
mov
sbb
rcl
rcl
into
sbb
mov
shr
pop
arpl
push
jmp
or
or
or
xchg
sbb
leave
movs
mov
push
mov
mov
leave
dec
fwait
sbb
inc
and
push
addr16
add
push
jno
out
sub
xlat
es
push
mov
jbe
fcmovbe
pushf
les
dec
dec
lahf
leave
daa
sub
cld
rol
mov
jne
fs
out
jno
call
jmp
je
jecxz
sub
test
mov
fld
les
jns
xor
sbb
push
add
xchg
cs
stos
pop
mov
inc
and
cmp
cmps
cmp
iret
out
add
test
jnp
push
and
rcr
aad
dec
mov
mov
mov
cwde
mov
fucomi
pop
scas
mov
gs
fimul
icebp
and
xor
inc
push
cs
je
jmp
lock
dec
xchg
dec
aas
mov
adc
add
in
fcomp
bound
fdiv
test
jne
out
stos
sub
mov
mov
sbb
das
add
enter
xchg
lahf
inc
movs
mov
jne
cmp
jp
mov
fdiv
sbb
stc
test
adc
pop
fadd
(bad)
jo
pusha
sahf
jns
add
cwde
lock
sbb
pop
mov
loope
(bad)
mov
cli
adc
loopne
xor
scas
mov
mov
mov
fiadd
jecxz
mov
pop
sub
(bad)
mov
cmps
adc
dec
stc
out
dec
inc
aaa
or
sub
mov
xchg
or
mov
dec
sub
jl
cmp
repnz
xor
int3
shl
cmc
or
push
(bad)
ins
sbb
outs
mov
ret
dec
fstp
jno
pop
add
cmp
mov
xor
into
mov
add
dec
and
adc
inc
fsubr
fidiv
jns
adc
rcl
dec
sub
xor
(bad)
inc
fidiv
xchg
sbb
jne
leave
adc
mov
jge
loop
aad
ror
sbb
fist
and
arpl
add
push
cli
cmps
mov
div
(bad)
sar
mov
dec
sbb
gs
enter
je
rcr
pop
dec
jmp
cmps
jb
push
push
popf
ds
push
shr
jl
and
test
jl
into
addr16
fsubr
adc
sahf
dec
(bad)
rol
movs
shl
fdivr
pop
push
sbb
add
and
and
dec
(bad)
sbb
loope
xchg
dec
lea
mov
mov
jnp
out
popf
xchg
into
xor
fisubr
add
xchg
xor
outs
outs
lods
push
pop
mov
out
adc
inc
test
(bad)
xor
int
sub
jne
iret
sbb
jmp
and
clc
cmp
mov
or
lahf
sahf
aam
push
push
mov
inc
icebp
ds
test
fdiv
test
or
iret
pop
test
xor
not
imul
in
repnz
(bad)
std
aam
xor
xlat
popa
call
or
cmps
xor
jne
add
out
cmovno
shl
push
jmp
(bad)
fild
sub
mov
add
in
test
addr16
leave
pop
sub
push
std
fcomi
das
xor
push
mov
rol
adc
add
mov
test
xchg
cs
or
adc
or
movs
mov
leave
cmp
fld
fstp
pusha
dec
adc
outs
add
cmp
sub
xor
push
cmp
jg
push
call
adc
xor
push
sbb
and
leave
in
sbb
add
call
push
mov
clc
sbb
aad
fwait
xchg
in
leave
movs
adc
iret
cwde
mov
sub
scas
and
add
js
arpl
in
mov
repz
pop
cmp
stos
ja
xor
sub
and
pop
adc
cdq
stos
sahf
inc
cmp
ja
icebp
in
mov
rcr
(bad)
xor
push
mov
jg
repnz
add
scas
fucom
push
in
adc
sbb
mov
sub
movs
aad
mov
xchg
outs
movs
sbb
add
fs
fsubr
lods
ja
cmc
imul
scas
mov
mov
call
push
sub
push
test
ss
mov
xor
push
(bad)
sbb
mov
aas
pop
mov
inc
mov
dec
dec
mov
test
je
add
adc
sbb
sbb
stc
cmp
and
ficomp
lea
(bad)
cmp
daa
pop
dec
xchg
mov
jge
lahf
jg
inc
inc
cld
clc
inc
sbb
jmp
(bad)
jb
xor
mov
in
in
pop
hlt
inc
sub
inc
jmp
adc
mov
ror
pop
sbb
dec
nop
(bad)
xchg
mov
adc
mov
pushf
mov
call
das
lock
xchg
sbb
and
rol
push
jbe
or
xchg
mov
popf
pushf
loop
repz
jo
les
mov
das
gs
loope
iret
aaa
mov
in
xor
xchg
or
or
bound
sub
jns
ret
push
cs
fisub
sub
jmp
xchg
xchg
pop
test
xor
aaa
jge
test
add
inc
sub
into
call
push
(bad)
dec
pop
out
dec
lock
xchg
js
push
inc
fwait
in
ret
or
popf
stos
loope
pop
outs
or
mov
xchg
sti
push
out
movs
(bad)
xchg
xchg
fisttp
in
jle
jmp
imul
vsubss
rcr
push
jne
mov
xchg
xchg
cld
sbb
adc
cmp
pop
push
dec
adc
(bad)
pop
mov
lods
repz
call
ret
movs
mov
dec
sbb
aam
out
add
or
inc
sbb
or
fist
jne
push
and
add
jns
mov
cmps
(bad)
out
push
and
add
ins
stos
inc
and
jge
xlat
add
sub
jge
(bad)
scas
jmp
shr
test
sbb
cld
dec
mov
leave
aaa
je
mov
call
in
xchg
pop
mov
push
outs
mov
and
and
ds
rol
fstp
fmul
(bad)
in
mov
enter
fucom
ja
sbb
loopne
cmp
out
pusha
mov
adc
and
jo
cmp
cmp
dec
push
sbb
push
or
inc
pop
mov
addr16
cli
leave
push
adc
call
es
bound
int3
js
dec
pop
and
adc
jae
(bad)
sub
ficomp
dec
push
inc
adc
sahf
repz
lock
push
js
mov
inc
xor
stc
pop
fwait
retf
cmps
pop
adc
dec
push
pop
sti
xor
in
stos
das
inc
ins
out
or
push
mov
sbb
nop
aad
push
aaa
ins
and
mov
xor
mov
sub
xchg
ret
outs
hlt
adc
ficom
cld
inc
(bad)
or
push
adc
aaa
cmp
xchg
(bad)
daa
out
shl
loope
mov
int3
xlat
fdiv
(bad)
les
or
jne
retf
fcom
push
les
jno
movs
jne
shl
(bad)
cld
mov
cmp
cmps
call
xor
mov
daa
sti
jg
jae
or
popf
shr
adc
mov
adc
mov
hlt
or
adc
cmps
test
jnp
push
jecxz
add
mov
scas
(bad)
jae
pop
out
mov
sbb
jle
pushf
or
das
mov
das
aam
repnz
mov
inc
scas
aaa
xor
jl
sub
or
xchg
dec
(bad)
push
jb
cmp
lds
jmp
jmp
inc
std
les
mov
dec
fwait
and
test
jne
mov
inc
enter
inc
sub
adc
out
jl
xor
pop
cmp
push
push
xchg
mov
movs
loope
imul
pop
jmp
jne
jnp
rcr
ins
xchg
sbb
dec
add
popf
outs
ins
cmp
mov
add
inc
and
pop
jmp
jbe
out
adc
je
pop
popa
aas
or
or
pushf
outs
adc
push
inc
retf
(bad)
nop
lock
pop
inc
fiadd
push
xor
dec
jge
test
(bad)
or
test
(bad)
in
cld
out
jecxz
push
ret
xchg
leave
and
call
jl
pop
xlat
pop
aam
pop
mov
pop
push
mov
xchg
das
fiadd
enter
cmp
scas
dec
push
dec
xor
or
push
dec
cdq
mov
aas
and
cmp
mov
xchg
or
mov
sub
pushf
stos
scas
mov
dec
mov
mov
cli
loopne
xor
(bad)
retf
inc
xor
outs
cmp
inc
push
and
outs
rol
mov
dec
int
pop
shl
xor
call
cmp
cmp
scas
inc
adc
dec
jne
jo
ror
movs
and
push
pusha
aam
sub
dec
mov
mov
xchg
lods
shr
fidivr
jne
bndldx
adc
mov
dec
in
jbe
mov
push
mul
dec
loopne
inc
icebp
jge
mov
cs
xchg
nop
xor
fwait
mov
mov
mov
and
add
jle
or
(bad)
push
mov
fisub
push
shl
push
or
in
mov
jno
sahf
inc
daa
mov
ss
dec
pop
mov
test
idiv
pop
jmp
cli
shr
inc
mov
inc
cld
inc
jb
xor
mov
jnp
add
test
in
adc
mov
and
xchg
cmp
call
je
pop
ror
cmp
pop
dec
mov
mov
jecxz
push
mov
in
mov
ret
sbb
cmp
mov
cli
lods
xor
loope
and
iret
add
leave
ficom
xchg
push
sbb
pop
sar
rcl
sbb
mov
pop
cli
sbb
call
ficomp
cmp
sbb
and
cmps
jae
sbb
sub
popa
scas
xchg
pop
test
sti
cmp
push
les
aaa
fisub
inc
jge
jl
call
mov
rol
sub
popa
jno
sbb
adc
mov
in
pop
lods
push
ret
pop
fbld
(bad)
icebp
scas
lds
mov
mov
jbe
nop
repnz
jge
jb
or
scas
rcr
jle
push
lods
jecxz
cli
out
mov
sar
dec
mov
in
test
add
add
cld
fwait
shl
dec
sub
jno
sbb
mov
mov
push
hlt
pop
pop
push
div
outs
cmps
dec
dec
or
inc
sbb
int
imul
push
mov
sti
leave
daa
(bad)
idiv
inc
movs
or
fld
jbe
imul
in
pusha
and
ret
out
lock
and
repz
pushf
das
xchg
pop
pop
pop
jg
fidiv
mov
sti
xchg
fadd
jb
scas
jae
and
aad
xchg
sub
push
gs
sub
mov
dec
or
mov
out
or
fwait
sahf
and
mov
daa
dec
pop
test
pop
pop
xlat
cmpxchg8b
or
mov
lds
xchg
out
mov
call
and
inc
mov
inc
aaa
inc
sbb
sub
ds
or
aaa
ror
retf
cmp
scas
imul
cmp
xor
retf
in
push
jns
pop
(bad)
aas
scas
mov
jnp
jg
jno
dec
push
sub
dec
icebp
cld
cmp
out
outs
mov
iret
mov
sbb
mov
mov
mov
jmp
inc
sub
retf
test
inc
les
loop
movs
rol
aam
ds
pushf
jno
aad
lock
jmp
sbb
push
fst
adc
xchg
sahf
lods
pop
push
sub
mov
(bad)
inc
push
mov
push
xchg
outs
pushf
daa
and
cmps
das
cmp
cmp
cmps
aaa
mov
mov
mov
lds
or
fcomip
aaa
pop
loope
bound
test
bound
pop
pop
and
icebp
push
sbb
mov
test
rcr
adc
es
jb
mov
push
jmp
gs
cld
in
cli
add
ficomp
cli
(bad)
frstor
cmp
jp
(bad)
in
enter
and
outs
add
test
inc
clc
enter
adc
cdq
jno
stc
in
fldenv
fdivr
push
cwde
add
movs
hlt
repz
push
fcmovnu
sub
and
xlat
jo
cld
add
gs
ret
leave
jecxz
add
jmp
jle
mov
fldenv
dec
cmc
cmp
push
lock
sub
xchg
pop
imul
mov
push
push
sub
out
xor
mov
(bad)
xor
cmp
push
ror
and
pushf
daa
call
(bad)
les
adc
cmp
out
mov
ins
cmp
pop
repnz
push
sbb
int
movs
psraw
xchg
and
mov
dec
in
dec
out
fs
add
inc
mov
test
call
add
out
clc
cmp
call
lea
inc
xchg
loopne
test
push
pop
mov
push
cmps
pop
lods
cmp
scas
rol
adc
jmp
sub
jecxz
popf
jb
jmp
addr16
mov
xor
and
data16
xor
cli
and
xor
cmp
fcmovnbe
in
out
out
(bad)
in
push
cmp
mov
jno
cld
enter
and
cmp
int3
bound
add
aad
shl
test
movs
pop
sbb
in
scas
cmp
int3
and
adc
and
ja
mov
push
enter
(bad)
mov
pop
ds
xchg
sbb
test
out
js
fwait
and
inc
mov
icebp
ror
cmp
fucomp
adc
cmp
fist
rcl
xchg
xchg
movs
mov
cs
jae
sub
xchg
jno
mov
outs
push
pop
jecxz
fwait
sbb
mov
push
retf
pop
xor
retf
test
test
dec
push
jo
cld
push
addr16
xor
outs
std
jp
pop
(bad)
aaa
(bad)
adc
mov
stc
mov
aaa
cmps
test
sub
ds
lahf
mov
clc
fdivr
push
xor
dec
push
cli
ds
ficomp
mov
mov
push
and
retf
imul
iret
icebp
clc
test
sbb
nop
mov
mov
gs
adc
mov
jae
mov
bswap
gs
sbb
sbb
not
shl
jb
cmp
mov
inc
pop
push
imul
push
or
shl
scas
add
add
test
add
out
push
adc
fild
jge
xchg
repnz
xchg
bnd
jg
mov
jbe
jecxz
mov
cmp
fisttp
int
jno
ss
add
loopne
shl
popa
inc
int3
and
inc
fld
xor
sar
mov
jmp
xchg
(bad)
mov
call
iret
adc
std
cs
push
add
out
shl
scas
lods
xchg
mov
imul
(bad)
ss
push
cs
dec
and
iret
or
int3
shr
movs
sar
retf
fld
mov
push
test
sti
mov
dec
movs
inc
cmp
push
mov
pop
sahf
gs
clc
mov
push
xchg
outs
jb
repnz
mov
jp
push
pop
pusha
adc
add
pop
or
xchg
xchg
push
icebp
sysexit
mov
(bad)
cwde
stc
sub
cwde
test
fist
test
and
xchg
es
xchg
cld
mov
sub
sbb
dec
test
je
stc
jmp
inc
push
push
(bad)
lock
popa
inc
icebp
movs
sbb
jp
aam
xor
cmp
cmps
leave
xchg
dec
imul
mov
xchg
inc
adc
repz
dec
push
pop
mov
adc
mov
das
mov
test
adc
imul
fisttp
mov
(bad)
mov
push
and
stos
scas
inc
movs
adc
sub
xchg
or
push
mov
ss
jmp
push
sbb
(bad)
jp
inc
cmp
xor
add
jno
cmp
dec
adc
jo
mov
enter
xchg
in
add
inc
pushf
and
lds
mov
dec
lock
arpl
mov
vcvtps2dq
(bad)
push
inc
int3
pop
bound
cmps
call
test
or
mov
pop
jb
iret
retf
cmp
mov
and
adc
dec
inc
sbb
push
or
enter
ja
add
add
jle
jle
adc
inc
sub
or
fadd
mov
mov
push
outs
(bad)
movs
lea
inc
or
mov
mul
add
adc
jge
cmp
cli
scas
inc
xor
gs
dec
cld
cmp
push
mov
in
and
enter
(bad)
movs
sti
ret
cmp
mov
or
jmp
sbb
mov
imul
fs
popf
and
xchg
jl
sub
shr
notrack
lods
xor
or
retf
sub
cld
adc
sbb
sub
sub
(bad)
xor
push
cwde
test
fmul
sbb
stos
mov
xchg
add
repnz
nop
cmp
xor
sbb
aaa
fwait
dec
(bad)
jne
repnz
add
mov
ja
cmp
(bad)
nop
int3
cmp
sub
mov
cmc
dec
and
inc
daa
cdq
cdq
add
dec
mov
repz
or
sbb
jbe
inc
add
jecxz
dec
cmps
add
jmp
fsub
popf
jge
xchg
adc
hlt
add
or
mov
adc
mov
mov
pop
out
test
push
lods
adc
xor
addr16
imul
inc
push
jmp
xor
pop
stos
dec
pop
gs
sahf
stos
xchg
test
add
outs
cld
jno
(bad)
test
cmp
mov
or
(bad)
aas
jb
fmul
cmp
in
pop
push
dec
ret
aam
icebp
push
fs
sti
xchg
lahf
div
mov
dec
js
sub
daa
call
addr16
loope
inc
lods
cmps
loop
cwde
dec
and
mov
loope
fst
and
test
dec
ds
jl
aaa
push
leave
leave
lock
fnstenv
mov
movs
sub
xchg
bound
and
sbb
sub
dec
jns
sbb
and
std
sub
pop
lahf
and
stos
iret
enter
dec
movs
inc
pop
and
xchg
test
out
push
lahf
cmp
sbb
out
sbb
xor
and
scas
into
pop
inc
jecxz
sub
das
jmp
pop
dec
and
arpl
jne
test
fcom
mov
fcom
(bad)
(bad)
pushf
cwde
xor
sub
inc
in
ret
rcr
int3
inc
ret
es
pop
sub
in
test
sbb
sbb
jmp
movs
pop
stc
(bad)
fsubr
pop
sbb
cmp
xor
es
stos
in
adc
lods
push
js
repz
sub
ins
out
push
push
fucomp
adc
cmp
sti
cld
mov
push
push
jne
popa
inc
gs
loop
inc
popa
mov
test
cld
jmp
and
adc
retf
inc
or
xor
clc
cmc
and
jbe
dec
ret
fisubr
fisttp
lahf
or
fucom
cdq
test
jbe
repz
bnd
and
mov
sbb
imul
jmp
(bad)
or
push
push
hlt
fisub
mov
int
jmp
mov
mov
or
sbb
sar
test
out
jp
add
jnp
repz
test
ret
aad
pop
adc
test
jb
enter
xor
mov
lods
jecxz
popa
push
and
and
aas
in
mov
cmp
dec
and
dec
push
xchg
pusha
ror
enter
xchg
fist
push
mov
adc
sahf
mov
jl
push
test
test
push
fsubr
stc
inc
jmp
xor
sbb
mov
mov
mov
push
dec
aam
sti
mov
xor
xor
scas
sbb
sub
sar
outs
int3
loopne
inc
ss
out
mov
jmp
std
sub
sub
sub
pop
enter
loop
pop
lods
lods
add
jmp
cmp
(bad)
pushf
push
inc
test
pusha
or
sub
adc
xor
adc
xchg
push
les
jae
push
lods
jb
ins
xor
rcr
sub
add
mov
mov
adc
cwde
les
mov
stc
sbb
test
push
sub
sbb
push
(bad)
mov
inc
cmp
sbb
das
push
push
sbb
mov
(bad)
int3
call
lock
xchg
es
pop
and
popf
imul
bound
jmp
stc
stos
or
jmp
fidiv
dec
lods
push
shr
(bad)
rcl
mov
(bad)
cld
mov
jns
push
xlat
mov
fsub
(bad)
out
push
std
fisttp
mov
pop
mov
xchg
sahf
inc
fucomi
xchg
jl
inc
or
jo
jmp
add
or
jge
movs
xor
and
add
pop
in
jp
mov
jmp
mov
dec
pop
sbb
fisttp
mov
les
jmp
pop
push
ins
pusha
sbb
(bad)
cli
cmp
imul
cmp
cmp
aaa
retf
inc
(bad)
fisub
arpl
sbb
and
into
jmp
loopne
jmp
leave
sahf
in
mov
aam
xor
outs
sbb
xchg
and
dec
inc
jo
aaa
pop
jmp
mov
ror
ret
mov
jecxz
mov
pop
js
imul
fsub
or
and
and
mov
js
inc
mov
xchg
jne
sub
jo
enter
pop
lea
xor
dec
or
lods
xor
sbb
sar
lods
xor
out
sub
jge
test
adc
mov
mov
dec
aaa
mov
mov
cmc
push
bound
and
(bad)
gs
adc
movs
or
sti
fs
out
mov
aaa
jmp
pop
out
or
pop
dec
arpl
inc
xchg
shl
cwde
jp
sar
push
fimul
leave
xchg
fwait
ins
ret
cwde
mov
mov
jg
jmp
sbb
dec
or
and
cdq
and
xor
ins
inc
dec
xchg
add
retf
xlat
clc
(bad)
mov
push
sbb
adc
clc
scas
xor
js
ret
outs
fcomi
call
(bad)
jmp
repz
movs
inc
mov
cmp
test
bound
gs
inc
sbb
sbb
gs
ins
js
imul
js
mov
jbe
or
in
popa
xor
xchg
std
sbb
fldcw
idiv
mov
lock
pop
(bad)
xchg
jle
(bad)
push
add
xor
or
ins
xor
sub
xor
or
adc
push
mov
and
repz
das
les
xor
mov
inc
xchg
jns
ret
xchg
and
lods
sti
add
out
xchg
cmp
xchg
test
dec
lahf
pop
retf
sahf
ret
cmp
mov
test
(bad)
xlat
repnz
les
cld
mov
adc
jg
add
jns
fisub
stos
mov
push
pusha
xlat
mov
adc
and
pop
and
scas
lea
icebp
adc
mov
lods
xor
arpl
mov
and
pop
dec
pop
in
inc
push
fisttp
scas
xchg
dec
pop
aaa
into
push
repnz
leave
in
push
or
pop
(bad)
mov
xchg
arpl
hlt
or
outs
mov
and
pop
adc
sahf
div
or
mov
out
mov
adc
icebp
mov
sbb
rcl
adc
and
lods
pusha
xor
(bad)
rcl
mov
inc
xchg
mov
push
neg
mov
aas
leave
jge
call
ins
xor
dec
arpl
and
pop
dec
cmp
jmp
add
mov
mov
jns
in
xor
cs
cmp
inc
push
pop
dec
jmp
pop
xchg
jbe
mov
mov
adc
fdivp
push
mov
fild
push
mov
mov
(bad)
sti
pop
leave
adc
iret
xchg
push
call
jnp
xor
mov
add
into
jecxz
rol
es
sbb
xor
adc
iret
cmc
in
sbb
ret
mov
adc
pop
jae
out
xchg
scas
and
in
and
mov
hlt
outs
dec
mov
inc
(bad)
mov
push
mov
fbld
dec
push
cmp
pop
mov
cmp
inc
or
aad
cmp
cmp
mov
xor
in
movs
ficomp
(bad)
das
xor
xchg
adc
out
xor
or
or
push
loopne
push
sub
adc
out
jbe
out
callw
daa
imul
mov
adc
push
aad
cmp
inc
inc
nop
nop
mov
dec
imul
xlat
xlat
outs
xchg
mov
and
ins
inc
fadd
dec
sub
imul
fsubr
ins
unpcklps
test
shl
pop
pop
ror
das
ins
sub
push
in
pop
retf
loopne
xor
xor
jle
mov
and
(bad)
leave
sbb
jg
sbb
xchg
fwait
(bad)
call
(bad)
inc
mov
xchg
add
pop
mov
mov
pop
add
pop
cs
ficomp
mov
pop
in
mov
inc
jb
repnz
lahf
loopne
push
mov
xchg
cmp
mov
sub
leave
pop
sbb
dec
pop
push
(bad)
jmp
or
xor
push
mov
das
jbe
adc
fst
xor
rol
lods
and
pop
(bad)
lds
add
jmp
xor
jl
dec
mov
call
repnz
enter
or
sbb
xor
cs
call
int
xchg
add
mov
add
dec
ins
inc
mov
rcl
cmc
add
add
adc
xchg
xlat
and
push
clc
push
jmp
je
inc
jmp
mov
pop
out
dec
pop
adc
les
inc
sbb
adc
out
push
cmps
mov
add
icebp
adc
jl
aaa
test
(bad)
sahf
stos
mov
ret
hlt
fdiv
inc
mov
or
ins
mov
xchg
(bad)
ins
mov
icebp
adc
push
fwait
in
push
cmp
es
test
mov
pop
pop
adc
mov
mov
ja
cmovbe
shl
sbb
sub
xor
and
int
mov
adc
lods
ins
outs
fmul
jno
rcr
jns
xor
mov
jmpw
aas
loope
cmp
xor
lods
popa
adc
mov
out
pop
icebp
mov
aas
xchg
mov
(bad)
popa
mov
jnp
inc
xor
sbb
sahf
mov
cmp
or
fsub
mov
fdiv
push
xchg
iret
aam
and
adc
xchg
shl
fsubr
div
retf
mov
mov
mov
js
cmp
mov
or
out
inc
xchg
mov
push
adc
inc
dec
mov
pop
inc
push
inc
in
push
int3
movs
lods
sar
leave
cmova
cmp
mov
das
loop
inc
cmp
or
pop
or
sbb
(bad)
mov
inc
push
daa
dec
or
std
push
mov
mov
adc
jbe
fisttp
outs
test
cwde
aad
mov
mov
jb
loop
outs
shl
cld
lods
ins
mov
fs
das
xor
out
adc
mov
pop
je
outs
and
loop
push
fst
xchg
aam
inc
add
pop
test
fild
jle
sbb
pop
mov
mov
nop
jne
mov
xchg
fs
fbld
(bad)
scas
jl
dec
lahf
pop
dec
ins
dec
mov
mov
aas
xchg
cdq
imul
xor
leave
sub
dec
clc
hlt
ins
mov
mov
push
lods
and
push
les
jb
sti
(bad)
out
pop
jmp
pop
adc
imul
jmp
xor
mov
or
add
scas
cmc
mov
loope
stos
div
sbb
mov
or
jb
scas
inc
lds
cmp
rol
inc
int
mov
fnstsw
dec
inc
or
sbb
sub
aad
stos
push
or
cmp
lea
dec
inc
push
jbe
jge
shr
inc
(bad)
out
adc
loopne
test
mov
out
mov
inc
pop
mov
test
fdiv
into
xchg
mov
inc
movs
or
dec
test
pop
xlat
out
aad
in
xchg
and
pushf
ror
(bad)
aas
mov
enter
or
(bad)
xor
cmp
jno
mov
in
xchg
sbb
jg
mov
push
adc
xchg
sub
xor
jbe
out
sub
xor
mov
lods
pop
mov
add
ffreep
mov
outs
push
cmp
jnp
aas
cmps
inc
ds
mov
and
xor
call
xchg
popa
adc
in
fld
js
cmp
adc
dec
or
dec
addr16
sar
adc
mov
fwait
dec
dec
dec
sub
jne
lods
sbb
adc
jnp
jg
fs
cmp
jb
mov
xchg
fidivr
push
fbstp
dec
aam
push
pop
pop
mov
jg
imul
jmp
mov
sub
push
popf
loope
aam
das
das
xchg
idiv
push
stc
test
mov
(bad)
div
mov
xchg
mov
in
mov
pop
loop
aam
cli
add
not
shr
stos
shr
retf
pop
and
lods
cli
ret
shr
sub
test
add
add
dec
fisub
jp
inc
(bad)
lock
clc
xchg
or
mov
mov
or
ret
push
dec
jmp
aas
xor
mov
scas
sub
je
test
(bad)
dec
ins
pop
xchg
les
or
inc
dec
mov
xor
dec
icebp
ds
inc
les
pop
prefetcht0
push
push
mov
stos
push
in
stos
jmp
pop
(bad)
mov
fdivr
pop
mov
push
mov
pop
dec
leave
pavgb
fiadd
push
xchg
std
pop
adc
mov
out
aam
push
in
xchg
inc
push
jno
loop
sub
mov
xor
and
push
mov
int3
setb
leave
xchg
in
mov
mov
inc
pop
cmp
jp
jmp
add
or
xor
std
test
mov
pop
dec
or
fcomp
sahf
test
add
dec
dec
mov
adc
movlps
adc
sub
test
je
rcl
push
inc
xor
(bad)
sti
adc
dec
outs
push
jmp
rcl
inc
std
ffreep
mov
repz
mov
mov
mov
shl
ja
cmps
lds
mov
retf
jg
xchg
mov
arpl
sbb
ja
stc
push
aaa
lock
shl
xchg
jnp
pop
neg
out
daa
ret
or
adc
mov
mov
mov
push
dec
pop
xchg
cwde
pop
stc
clc
sub
jmp
cmp
mov
mov
das
sub
cmp
dec
mov
into
xchg
call
pop
outs
stc
jmp
stc
retf
stos
inc
jge
xchg
push
mov
cwde
cmp
push
lea
les
aas
cmp
test
iret
add
popa
fstp
xor
dec
pop
loope
add
push
or
dec
xlat
loope
sti
cmps
jne
sub
cmp
xchg
daa
scas
jp
call
inc
cmp
dec
pusha
repnz
sub
inc
sbb
jno
lock
not
test
movs
push
jg
lock
cs
gs
addr16
test
mov
and
mov
jne
sbb
ja
cmp
add
mov
mov
(bad)
xchg
jbe
jl
loopne
into
mov
pop
test
aad
daa
in
aaa
fstp
addr16
sbb
cmps
bound
mov
mov
pop
sbb
outs
or
arpl
add
arpl
test
lahf
clc
push
cmp
jp
cmp
dec
adc
sub
mov
push
cmc
mov
xchg
add
cmp
mov
push
dec
ret
add
and
shl
or
cmp
lds
retf
dec
mov
inc
push
pop
aad
pop
movs
lock
and
clc
xor
rcr
jb
ss
adc
dec
or
ds
add
fidivr
push
adc
fucomi
mov
repnz
retf
xchg
call
push
mov
sbb
pop
in
and
pop
jb
fdiv
or
pop
mov
out
dec
sub
cwde
xor
sbb
(bad)
mov
jmp
xlat
inc
ds
sbb
push
cmp
jp
inc
xor
adc
mov
xchg
inc
sub
and
fcomip
rol
mov
imul
sbb
cmp
cmps
inc
jae
mov
dec
outs
ss
sub
out
mov
dec
hlt
sub
xchg
or
push
jns
mov
out
push
data16
stc
adc
addr16
ins
das
fdivr
cmp
sar
jbe
jne
or
addr16
add
jmp
add
mul
add
jge
arpl
and
aaa
(bad)
inc
and
xor
sub
mov
sub
sub
mov
pop
pop
dec
adc
iret
adc
sar
fs
nop
pop
scas
mov
xor
pop
movs
adc
cs
scas
push
jns
data16
or
fiadd
xchg
add
jmp
jmp
das
mov
jmp
mov
fld
in
sub
dec
pop
and
ret
mov
jne
test
jecxz
aaa
loope
cld
pop
shl
dec
fbstp
add
cmps
in
into
aad
dec
out
or
loope
sar
bound
iret
fs
test
bound
es
in
ret
sbb
int3
dec
push
pop
fwait
add
mov
mov
imul
mov
sub
add
retf
cli
adc
jae
and
xor
dec
pop
sahf
jecxz
(bad)
sbb
stos
adc
jmp
stos
mov
and
cmp
cwde
(bad)
and
dec
jecxz
pop
mov
popf
ret
mov
mov
test
xor
dec
jecxz
add
jae
xor
jae
push
movs
cmp
and
or
xlat
je
push
(bad)
fcomp
lock
push
mov
dec
pushf
les
push
cdq
and
fxch
cmc
pop
sub
ds
pop
ficom
addr16
mov
add
or
jge
dec
pop
popf
xchg
in
mov
rcl
(bad)
xchg
mov
push
ja
clc
and
out
call
mov
ss
loope
sbb
hlt
mov
push
add
pop
ja
cmp
jl
dec
inc
test
fdiv
jbe
jmp
xor
push
jno
lahf
cmc
pop
int3
inc
das
and
mov
jno
lock
(bad)
add
lahf
ja
aas
xlat
push
jp
xor
xchg
mov
bound
inc
pusha
sbb
mov
mov
pop
rcl
xchg
mov
xor
or
inc
pop
xor
hlt
cmps
data16
mov
pop
and
cli
pop
jecxz
jle
cdq
cmp
stos
mov
xor
es
push
jl
pushf
cmps
faddp
xchg
xor
sahf
push
push
sbb
sub
sub
lods
scas
jo
cmp
cmp
jnp
adc
shr
idiv
sbb
imul
sbb
ss
cld
adc
dec
fbld
ja
push
xlat
and
sar
push
add
mov
inc
lds
repz
mov
dec
stos
enter
sub
cmp
rol
adc
xchg
fcmovne
call
(bad)
adc
xchg
fist
jg
nop
dec
cwde
aad
mov
es
pop
pop
popa
inc
aaa
push
or
sbb
mov
int
xchg
inc
into
push
(bad)
sub
and
push
test
mov
in
or
lfs
xor
and
jns
test
cld
mov
adc
(bad)
call
mov
xchg
and
mov
mov
xchg
out
sbb
mov
xor
cmp
rcl
in
or
arpl
sub
pushf
mov
jp
stc
loop
jge
test
add
push
test
dec
cli
mov
add
call
gs
fidivr
sbb
inc
or
jmp
pushf
mov
xor
cmp
repz
mov
aam
std
sti
mov
inc
mov
cmp
and
ret
outs
(bad)
(bad)
or
into
fild
stc
cwde
add
xchg
pop
loopne
mov
pop
fcomp
push
(bad)
push
mov
mov
ret
mov
int3
push
jg
sbb
shl
cwde
push
retf
in
das
inc
jbe
popf
xchg
lods
ret
push
push
cmp
lds
xchg
rcr
xchg
dec
or
push
inc
cmp
movs
enter
ds
outs
xchg
pop
retf
mov
hlt
add
or
mov
adc
add
fidiv
sub
outs
xchg
rcr
push
mov
daa
stos
fnstcw
push
jle
add
mov
inc
add
xor
dec
popa
rcr
cmp
inc
add
fs
adc
push
std
xor
xor
(bad)
sbb
xchg
jmp
(bad)
xor
and
jno
jb
mov
in
xchg
loop
fimul
adc
jge
imul
cmps
cmp
adc
int3
lahf
or
mov
push
pop
or
pop
sbb
cli
jge
jg
(bad)
(bad)
dec
aad
cmp
cmps
int3
repz
lahf
add
in
xchg
sbb
mov
cmp
xchg
xor
push
jns
jo
mov
aam
or
daa
mov
lahf
test
xchg
fcmovnu
imul
mov
out
jbe
push
mov
ins
sbb
add
push
xchg
aaa
pop
(bad)
mov
(bad)
push
push
push
mov
cld
xor
jae
jg
sub
fstp
je
fistp
cmc
inc
icebp
pop
imul
inc
xor
js
mov
or
call
inc
or
adc
dec
sbb
leave
push
jns
call
js
pop
mov
pop
shl
idiv
out
jg
sbb
sbb
and
adc
js
xchg
pusha
retf
pop
inc
sbb
loope
ret
sbb
or
jno
inc
pop
and
retf
add
mov
mov
jmp
lods
into
jp
iret
xchg
jbe
outs
iret
add
sbb
pop
das
mov
or
out
or
mov
in
retf
add
fcom
or
inc
sbb
int
sahf
repz
push
jmp
mov
call
push
int
fcomp
sub
xchg
ins
loop
test
mov
sub
sub
or
or
push
mov
xchg
mov
jno
ret
bound
push
push
ja
and
stc
std
lods
xchg
xlat
dec
in
adc
nop
xchg
mov
aaa
iret
shl
outs
add
jmp
out
push
sub
enter
mov
add
adc
xchg
in
fcomi
adc
in
dec
add
adc
repz
and
dec
loop
loop
sti
sbb
sbb
sbb
push
in
inc
xchg
ins
pop
leave
fild
lds
lea
xor
imul
jle
into
aam
mov
pop
push
iret
(bad)
jmp
popf
ins
sub
xchg
pop
lahf
jns
add
jo
lods
xchg
(bad)
sbb
iret
aad
or
(bad)
cwde
mov
ds
push
pop
movs
cmc
cld
lahf
std
dec
js
jmp
inc
outs
inc
jle
pop
in
xchg
pop
pop
je
add
inc
in
pop
pop
and
popf
mov
sub
inc
stos
fwait
out
inc
mov
xchg
idiv
xor
arpl
mov
jns
dec
sbb
pop
and
mov
stos
sub
and
nop
hlt
(bad)
pop
sub
aad
jle
jecxz
sti
pop
data16
ins
hlt
imul
in
or
bound
in
cdq
test
rcl
dec
int
mov
pop
shl
jl
push
add
cld
test
(bad)
sbb
addr16
stc
xchg
test
mov
outs
gs
push
dec
addr16
scas
mov
mov
sbb
sub
adc
aas
push
mov
cmp
inc
icebp
push
cmp
pop
int3
aad
mov
xchg
and
movs
pop
pop
add
int3
inc
jl
repnz
push
fs
aad
pop
push
mov
clc
push
imul
ret
or
mov
std
sahf
cmps
adc
(bad)
loopne
es
sub
mov
xor
int
mov
gs
scas
test
test
stc
pushf
cmp
std
xlat
ins
xchg
inc
jle
pop
mov
pop
pop
xor
enter
mov
sti
bound
aas
jmp
aas
daa
inc
dec
add
mov
push
std
push
mov
iret
jbe
ins
loope
jne
mov
cmps
sbb
mov
stos
xor
mov
repnz
or
push
mov
lock
cs
pop
inc
push
push
push
test
js
inc
or
cmc
sbb
hlt
jns
xlat
iret
rol
enter
sbb
retf
(bad)
sbb
or
pop
push
shl
ret
xchg
jl
and
jae
ja
xor
jecxz
hlt
xchg
std
cs
add
aas
mov
push
xor
(bad)
jecxz
cmp
ret
mov
dec
mov
popa
push
mov
jmp
push
or
sub
xor
mov
(bad)
fsubr
in
je
xchg
xor
mov
lods
dec
nop
xchg
lds
jmp
and
ficom
and
cmps
xor
in
adc
nop
inc
sub
pop
mov
mov
inc
enter
shl
cmp
ret
shl
sti
arpl
xchg
inc
scas
fild
aad
push
fisubr
add
cmps
mov
sti
outs
aad
lds
movs
out
mov
sti
jmp
mov
cmps
mov
mov
mov
test
shl
popf
dec
rcl
add
popf
adc
popf
ret
popa
pop
xchg
bound
and
push
ins
in
jae
and
(bad)
ror
jo
inc
mov
push
push
outs
repnz
out
cmps
push
retf
fiadd
xor
sbb
test
ss
mov
icebp
in
addr16
retf
add
cli
das
add
sar
and
push
repz
(bad)
jl
mov
test
add
ffree
jmp
add
sub
fstp
stos
inc
adc
sahf
mov
das
nop/reserved
out
and
test
imul
in
cli
pop
pop
aas
mov
or
loopne
or
popf
call
add
fnsave
imul
je
push
mov
or
mov
retf
mov
dec
adc
in
mov
mov
ins
xchg
pop
nop
imul
dec
outs
inc
mul
dec
int
stos
mov
sar
cdq
js
cmp
in
scas
fbld
retf
pusha
mov
ror
(bad)
(bad)
jmp
add
jno
dec
xchg
imul
ja
mov
adc
jo
push
mov
lds
repnz
push
and
ja
lock
inc
and
dec
sbb
adc
xlat
sbb
scas
in
scas
lods
clc
imul
fst
inc
push
lods
xor
pusha
dec
xor
leave
mov
jne
inc
jno
jb
aam
lods
dec
(bad)
leave
cmp
jmp
dec
retf
jecxz
mul
out
nop
pusha
pop
scas
mov
dec
(bad)
das
jmp
gs
mov
mov
test
(bad)
imul
out
(bad)
repz
and
sub
or
fild
sub
or
mov
adc
mov
cmps
or
jp
call
sbb
stc
sbb
ins
int3
daa
pop
xchg
cdq
push
or
lahf
jnp
out
int
sbb
pop
fisub
xor
arpl
movs
jmp
add
xor
cwde
mov
ins
fcom
shl
test
daa
int3
ss
dec
pop
daa
adc
xlat
xchg
and
cwde
out
movs
push
or
jns
fs
xor
out
arpl
dec
xor
sub
inc
inc
call
jp
pushf
jmp
sbb
adc
cdq
(bad)
cld
push
xchg
pop
mov
in
clc
pop
and
push
add
mov
jle
dec
sbb
inc
add
cmp
jae
xlat
call
mov
mov
cwde
fdivr
loop
add
lock
or
ror
jns
xor
xchg
pop
(bad)
cmp
dec
xor
jp
inc
rcr
imul
fst
int3
push
pop
jb
mov
test
test
add
sub
shl
mov
push
push
add
paddusb
or
cmp
repz
mov
xlat
xor
mov
daa
dec
mov
mov
imul
xor
inc
sbb
repnz
sub
test
pop
nop
int
call
(bad)
stc
jbe
movs
dec
mov
jmp
push
push
shl
mov
cmps
sub
cmp
pop
stos
clc
inc
push
sbb
add
(bad)
adc
and
mov
jp
jg
pop
sahf
scas
adc
dec
xchg
sahf
jae
push
imul
aas
push
jns
sbb
rcr
addr16
popa
in
jp
fst
mov
xchg
jnp
inc
into
lods
xchg
or
jmp
dec
cli
cmp
push
cmp
adc
push
mov
pop
pop
jge
inc
pop
aas
gs
cmps
inc
cmp
push
stos
jle
inc
(bad)
js
jae
jns
mov
ds
repnz
dec
push
ret
leave
imul
xchg
je
mov
mov
xchg
js
xchg
mov
push
or
jne
push
call
or
cmp
cmp
push
call
or
cmp
lock
xor
mov
mov
shr
mov
(bad)
or
mul
pop
mov
mov
ins
outs
jge
add
mov
jo
je
arpl
or
pop
mov
push
xor
sbb
dec
outs
push
pop
xlat
sbb
adc
imul
stos
inc
xchg
mov
cli
sub
lods
ins
aaa
fcomp
imul
push
sub
sar
xchg
out
add
mov
sub
stos
rcl
sub
adc
and
mov
xchg
out
sub
je
leave
xadd
sub
fcomp
mov
dec
jbe
mov
cmc
and
pop
test
mov
shr
ret
sbb
mov
jg
dec
mov
sub
jno
lea
mov
iret
mov
xchg
xchg
mov
cmp
movs
adc
cs
ficom
push
inc
xor
mov
movs
cdq
push
test
xchg
(bad)
or
pop
sbb
clc
xchg
mov
xchg
jl
fisttp
pop
mov
pusha
das
jbe
ins
rol
out
and
xor
pop
xor
mov
call
adc
xchg
mov
sar
dec
sbb
add
sub
inc
(bad)
lods
into
and
add
leave
sub
mov
sbb
ret
sub
repnz
or
jno
pop
sti
aas
mov
ins
mov
pop
add
or
movs
imul
mov
xchg
mov
mov
cmc
call
cwde
cmp
or
retf
mov
xchg
rol
rcl
lea
mov
pusha
arpl
sub
retf
sbb
push
bound
pop
std
dec
in
jl
inc
inc
fbld
(bad)
(bad)
fcomip
mov
pop
or
adc
pop
xor
sub
jmp
sbb
ds
movs
out
sbb
mov
loopne
xor
dec
(bad)
not
sahf
push
fnstsw
xchg
in
and
cmp
ret
and
rcl
leave
arpl
adc
xor
inc
xchg
mov
lods
jg
inc
inc
(bad)
sub
(bad)
mov
mov
cmp
scas
adc
test
xchg
ins
outs
sbb
pop
cld
test
add
rol
lds
pop
in
inc
lods
dec
jae
sbb
jmp
add
(bad)
mov
sub
mov
or
push
inc
ret
gs
repz
loop
push
jno
mov
dec
shl
mov
pop
push
outs
std
nop
sub
and
lock
jecxz
les
clc
adc
sbb
mov
movs
out
push
loopne
fdivr
test
daa
scas
loopne
sbb
sbb
mov
aas
(bad)
rcl
pop
add
push
mov
lods
mov
loop
loopne
add
cmp
xor
test
scas
cmp
and
ss
cmps
mov
sub
jb
and
das
mov
mov
pop
stos
mov
xchg
jno
ret
test
movs
loope
jle
pop
mov
sbb
sbb
cs
jp
retf
xor
nop
cmp
jp
fprem
pop
push
jg
aad
mov
call
and
or
dec
mov
xor
mov
jb
fisttp
arpl
and
aas
(bad)
stos
inc
js
or
icebp
gs
adc
push
call
lds
xlat
cwde
mov
mov
idiv
mov
test
add
mov
push
repnz
lods
call
outs
repnz
lods
jne
cmp
inc
test
push
mov
push
stos
add
push
fs
out
mov
jne
mov
push
xor
dec
push
(bad)
sar
(bad)
push
rcl
jo
clc
inc
call
cmp
xor
adc
sbb
jl
push
cdq
sub
jnp
adc
pop
add
xchg
add
jecxz
outs
dec
fisub
xchg
retf
sub
add
push
aam
sbb
ficomp
test
sub
and
cmp
or
lahf
aaa
stos
repz
out
retf
pop
jle
lods
int
bound
pop
cmps
in
sub
jb
lea
push
mov
mov
or
and
mov
jnp
inc
inc
loopne
sbb
and
pop
int3
lahf
(bad)
cwde
and
jg
and
pop
or
xor
std
jp
sahf
cmp
jle
es
xor
mov
dec
ror
repz
lods
sbb
adc
movs
adc
dec
mov
sbb
push
jb
outs
jg
xchg
cmp
push
out
loop
popa
mov
jmp
xchg
repz
push
sbb
cmp
je
out
leave
cs
cdq
mov
lea
test
pop
cmps
je
jne
pop
iret
jmp
or
or
daa
in
fstp
adc
inc
stos
xchg
pop
mov
push
pop
scas
adc
mov
pop
pop
fstp
movs
add
pop
dec
into
jp
push
or
mov
mov
pop
xor
sub
neg
adc
daa
sub
in
cmp
push
jnp
stos
pop
dec
sahf
or
aas
rcr
inc
aad
hlt
mov
inc
(bad)
jg
aaa
jne
int3
fs
lds
cmp
fisttp
gs
push
mov
jae
xchg
int
mov
cs
and
jns
loope
sbb
xor
pushf
sub
or
inc
mov
es
pusha
xchg
cmps
xor
sub
push
pop
push
mov
movs
or
pop
inc
dec
xchg
or
lods
and
out
push
mov
xchg
sbb
mov
mov
inc
add
int3
fsub
pushf
xor
iret
xchg
rcr
mov
pop
int3
jae
xchg
push
sbb
icebp
imul
stc
adc
cmp
clc
movs
push
verr
in
stos
push
jl
inc
hlt
scas
lahf
mov
sbb
in
and
pop
xchg
stos
push
sbb
fucomi
inc
stos
jmp
xor
jg
mov
or
test
cmc
mov
out
xor
cmp
sub
test
xlat
movntq
push
leave
or
push
scas
jae
pop
and
inc
in
icebp
mov
sbb
fdiv
jns
dec
mov
mov
movs
jnp
fistp
sub
es
push
div
adc
paddusb
sbb
test
push
popf
cmps
sub
test
push
das
jae
js
xchg
stos
push
dec
rcr
mov
std
pop
sub
xchg
cli
sahf
fistp
mov
cli
sbb
fwait
popf
(bad)
jmp
and
bound
push
jg
outs
mov
mov
dec
(bad)
jbe
call
cld
rol
imul
stc
in
dec
cwde
ret
ret
mov
scas
(bad)
icebp
push
jne
mov
sub
xor
cmp
fst
push
and
mov
push
mov
div
jecxz
mul
pop
jp
push
jnp
lahf
xchg
les
pop
or
popf
pop
jnp
cld
pushf
jnp
xor
push
cdq
leave
popa
(bad)
loopne
and
daa
xor
push
aad
ffreep
adc
outs
cmc
jnp
mov
mov
pop
add
ins
adc
in
sar
jl
imul
out
je
scas
jmp
retf
adc
pop
jae
ins
test
mov
icebp
jle
out
adc
jno
jp
int3
adc
xchg
cwde
sbb
cmc
sub
mov
cmp
inc
add
ins
stos
loope
fmulp
mov
sbb
sub
cli
pushf
shl
push
push
mov
hlt
outs
stc
or
inc
mov
xchg
xlat
gs
mov
jns
int
push
std
(bad)
shr
loopne
jb
xor
outs
sub
dec
lahf
sahf
gs
mov
cmp
xor
xor
das
out
xchg
pushf
sti
sbb
jmp
jae
scas
mov
pop
xchg
mov
retf
arpl
mov
cmc
xor
loop
adc
add
add
jle
pop
fmul
add
ret
adc
inc
xlat
push
movs
pop
aad
ds
mov
in
test
retf
sub
sti
clc
sbb
sbb
dec
sti
add
mov
dec
aaa
or
xchg
cmp
imul
push
es
cmc
imul
jnp
data16
cdq
bound
fisubr
popa
fs
mov
add
dec
or
push
mov
and
sub
sub
push
pop
sbb
push
push
cwde
mov
and
sub
in
mov
test
adc
xchg
cmp
and
jno
adc
loope
and
add
iret
jecxz
fwait
mov
mov
arpl
mov
push
mov
outs
sbb
fbld
call
mov
in
mov
rol
pop
aaa
mov
icebp
sbb
inc
mov
popf
gs
mov
xor
imul
dec
popa
mov
cmp
dec
mov
push
scas
mov
jo
mov
aas
fnstcw
cmp
lods
(bad)
or
imul
aam
adc
ret
movs
lods
scas
xor
sub
adc
(bad)
mov
call
xor
outs
int3
dec
add
jo
adc
loope
jbe
outs
push
add
cmp
jp
xchg
or
lods
pop
test
rcr
jmp
add
dec
add
fcmovnb
mov
mov
adc
jb
call
sbb
xchg
mov
adc
mov
lods
mov
outs
test
xchg
push
inc
sar
adc
stc
jg
xor
push
adc
cmp
scas
mov
jl
sub
xor
gs
inc
mov
adc
rcr
or
das
(bad)
cmc
push
xchg
sub
pushf
xchg
(bad)
pop
adc
sub
add
mov
scas
lods
xchg
div
dec
jecxz
lock
std
xchg
push
std
cmp
ins
sahf
clc
sbb
adc
retf
xchg
adc
mov
jle
(bad)
movs
pop
fidiv
mov
dec
out
leave
test
sti
imul
sub
inc
scas
mov
jmp
push
popa
xor
sbb
xchg
pop
sti
jne
adc
and
xor
sub
stc
ds
fwait
cmp
cs
adc
adc
jae
rcr
cmp
sbb
jle
sar
cli
add
loope
and
mov
sub
sti
cmc
push
inc
push
push
mov
clc
cli
ins
stos
jle
call
out
cmps
fmul
mov
popa
neg
hlt
mov
stos
das
(bad)
leave
gs
mov
call
popa
out
(bad)
mov
pop
dec
call
out
sti
imul
cmp
test
add
cmp
xor
xchg
add
imul
dec
fs
and
dec
adc
cmp
add
push
loope
inc
in
iret
ds
mov
push
es
(bad)
lahf
dec
int3
dec
lock
add
ins
xchg
or
xor
fiadd
nop
jae
lahf
dec
mov
add
das
push
in
xchg
ss
aaa
ret
sbb
mov
mov
shl
xor
test
(bad)
out
add
adc
test
mov
sbb
xchg
push
mov
xlat
xchg
xchg
int
test
out
stos
ret
gs
jae
mov
pop
clc
cmc
jle
mov
xchg
mov
rcl
xchg
cmps
jg
cmp
adc
and
add
or
mov
inc
in
into
sub
inc
sub
sub
and
adc
aad
mov
into
in
fnstenv
pushf
xor
cs
arpl
inc
stos
and
mov
xchg
or
mov
mov
push
ficomp
fucomi
aad
out
lods
imul
and
dec
xchg
push
in
xchg
add
xor
sbb
fwait
mov
sub
repnz
jl
sbb
mov
xchg
int
fsub
pop
push
mov
lea
stos
stc
or
sti
mov
dec
dec
cmp
push
mov
jno
sub
mov
xchg
sti
outs
in
out
out
jne
fwait
sbb
xchg
das
jno
push
pop
pop
pop
add
cmp
add
adc
pop
test
xchg
add
sti
popf
cmp
mov
(bad)
mov
in
cwde
pop
(bad)
and
int3
stc
adc
cmp
addr16
fist
mov
lock
int
jb
or
lahf
jp
xchg
clc
jb
add
fdiv
pushf
push
sub
xor
mov
inc
and
fnstcw
retf
ss
arpl
inc
aam
stc
(bad)
popa
std
fs
(bad)
clc
jge
adc
cmp
fcmove
les
je
xor
pop
dec
cwde
add
mov
push
inc
add
jno
int
gs
push
repnz
jb
(bad)
or
lods
test
and
xor
add
adc
fst
mov
cmp
xor
and
inc
cmp
jae
inc
data16
xor
inc
add
inc
and
mov
inc
(bad)
cld
retf
nop
inc
daa
add
loopne
fadd
or
sub
mov
inc
pop
pushf
and
nop
(bad)
mov
dec
mov
add
and
ret
xchg
push
jne
inc
adc
inc
push
xchg
div
inc
dec
jmp
iret
mov
(bad)
(bad)
cmps
inc
bound
rol
daa
jmp
sub
and
(bad)
jmp
push
sti
lods
jecxz
jle
xor
or
call
lods
add
jp
push
movs
out
jp
ja
add
call
in
and
mov
fxtract
cmp
cmp
push
imul
test
mov
jle
neg
and
push
fsubr
or
aad
mov
push
and
sbb
and
adc
add
mov
test
pop
xchg
cdq
and
addr16
imul
sub
sbb
aaa
pop
lods
push
out
movs
lods
push
aad
xor
fcmovnu
inc
dec
dec
ret
sub
mov
cli
into
cmps
push
and
int
jo
mov
cli
sbb
mov
push
dec
add
cs
pop
jne
or
mov
clc
or
addr16
ret
fwait
outs
cmp
ror
out
test
jmp
dec
mov
ficom
sbb
cmp
cmps
jg
test
dec
outs
repz
push
scas
in
push
sbb
(bad)
loope
sub
pop
xchg
adc
cmp
(bad)
cld
xchg
test
ss
cmp
or
cwde
(bad)
jmp
cmc
inc
shl
sub
int
add
pop
sar
sbb
icebp
adc
out
push
jb
mov
mov
cmp
neg
mov
pushf
stos
loop
adc
test
in
dec
sbb
repz
or
jl
adc
xchg
bound
xchg
out
mov
dec
int3
xchg
mov
jnp
push
jns
push
xor
fadd
mov
enter
pop
sub
mov
icebp
loope
pop
xor
(bad)
pop
(bad)
retf
xor
cmp
cli
(bad)
sbb
sbb
xchg
(bad)
ja
sahf
pop
cmp
push
(bad)
outs
lahf
jns
jbe
mov
mov
aaa
xchg
into
mov
in
aam
fld
test
add
add
sbb
imul
inc
mov
and
xor
cvttps2pi
daa
push
cld
add
or
add
pop
xchg
mov
aaa
stos
xchg
fs
xchg
jg
xchg
adc
stos
fadd
or
dec
lahf
dec
xchg
cmp
sbb
int3
dec
push
add
rcl
mov
jmp
pop
out
cmp
ds
(bad)
scas
push
push
or
xor
and
out
pop
scas
cmps
iret
push
mov
dec
pop
mov
inc
dec
sub
retf
cli
pop
add
xor
in
ds
popf
and
aas
enter
popf
(bad)
jmp
jg
xor
cs
inc
and
sub
std
js
inc
out
xchg
jge
mov
enter
mov
movs
call
jb
mov
jle
pop
or
outs
gs
dec
cmp
push
mov
cmps
loope
sti
mov
sub
xchg
push
add
pop
lods
ss
add
mov
mov
test
dec
mov
mov
inc
jno
fmulp
call
mov
add
xor
sub
adc
push
xchg
imul
dec
loopne
ret
gs
mov
dec
stos
dec
cmp
inc
sahf
push
fs
mov
mov
xchg
xchg
ins
adc
stos
jmp
dec
pop
jo
cmp
jo
mov
adc
push
pop
xor
and
add
call
jo
dec
add
(bad)
ja
mov
aaa
(bad)
pop
xchg
mov
and
cmp
test
pop
dec
adc
fs
xor
sbb
lahf
movups
push
les
sbb
jmp
cmps
popa
and
popa
int
js
mov
mov
or
das
in
dec
xchg
loope
jle
push
not
bound
adc
jns
int
sti
int3
jge
pop
pop
sbb
icebp
mov
fdivr
fild
fnstenv
and
adc
add
stos
cs
jnp
xchg
(bad)
imul
and
data16
jb
lock
(bad)
int3
int
mov
out
xlat
sub
adc
xchg
xor
sti
leave
xchg
jno
xor
int
(bad)
(bad)
xchg
add
dec
xor
lea
mov
lods
cs
xor
sar
les
hlt
ret
popw
int3
rcl
add
mov
cli
xchg
(bad)
int3
call
xchg
sub
xchg
cmp
and
test
fs
outs
sbb
mov
mov
mov
push
add
push
ret
retf
mov
psubusb
mov
out
push
imul
inc
xor
leave
movs
mov
adc
cmovb
jbe
aas
add
adc
clc
sub
dec
pushf
cwde
pop
dec
push
and
clc
dec
and
daa
js
or
ds
loop
sbb
test
add
retf
mov
shl
pop
mov
mov
xchg
mov
mov
fild
sub
and
dec
in
into
icebp
lea
std
and
pop
xor
je
dec
popa
cmp
jmp
sar
in
jmp
arpl
loope
inc
push
push
cmps
xchg
or
leave
pop
jge
clc
pop
scas
adc
test
xor
cmp
fwait
or
movs
sub
cld
gs
sub
movs
adc
sbb
mov
pop
cwde
jmp
adc
and
adc
aad
gs
lock
(bad)
ret
iret
mov
pop
das
ins
arpl
jecxz
xchg
xchg
mov
sbb
push
push
jl
xor
pop
shr
and
inc
adc
call
dec
inc
and
iret
nop
or
mov
jo
push
sti
in
cmp
or
ins
and
push
jmp
std
shl
xor
cli
enter
jnp
mov
gs
mov
sub
repnz
sub
mov
pushf
inc
scas
jle
std
lods
mov
fistp
adc
sbb
push
add
out
jl
(bad)
test
rcr
pop
int
nop
mov
dec
xchg
cmp
mov
push
dec
add
out
xchg
push
inc
lock
(bad)
test
pop
push
push
push
outs
sbb
in
jl
jecxz
and
fld
mov
aaa
(bad)
xchg
dec
loop
jns
add
mov
dec
xlat
(bad)
xor
mov
mov
rcr
ds
adc
add
out
arpl
lahf
fst
rcr
sti
aam
leave
pop
ins
(bad)
aad
dec
xchg
sbb
mov
fsub
outs
xor
push
dec
add
cmp
in
sbb
mov
je
lea
sahf
loopne
cmps
pop
cmps
mov
stos
cmp
cli
ss
sbb
sbb
xchg
xor
in
and
out
mov
xchg
mov
pop
arpl
adc
and
arpl
jp
adc
add
imul
dec
stos
adc
shl
and
fst
adc
or
mov
fistp
aad
dec
ficom
fdivr
scas
ins
cmp
jnp
mov
faddp
lahf
out
imul
stc
sub
push
js
rol
popf
inc
les
addr16
stc
jl
push
dec
mov
stc
in
push
popf
call
jne
cs
and
bound
scas
(bad)
loope
imul
and
lock
add
call
adc
xchg
sbb
into
dec
push
arpl
int
sub
pop
popa
clc
add
push
in
in
sub
mov
das
cli
in
add
lods
lods
or
pop
(bad)
bound
data16
xor
hlt
(bad)
mov
xor
inc
jo
popf
imul
mov
cmp
in
fld
je
mov
pop
sub
pop
out
jg
xor
jge
std
stos
inc
(bad)
xchg
js
retf
jne
sbb
test
mov
mul
ss
popf
cmp
imul
adc
mov
sbb
data16
mov
pop
and
retf
inc
(bad)
jecxz
add
call
nop
add
adc
add
mov
mov
repnz
ret
pop
mov
das
int
in
(bad)
jle
mov
xor
mov
xchg
movs
outs
mov
ins
push
test
nop
les
fild
jmp
ret
outs
cwde
stos
sub
sahf
xchg
cli
in
movs
ja
inc
dec
cmp
dec
push
jmp
xchg
and
out
adc
and
add
sbb
call
xor
jb
or
push
js
cmp
pop
shr
jae
pop
dec
addr16
jb
xor
or
push
jmp
push
or
pusha
enter
mov
jns
xor
sbb
xchg
mov
add
(bad)
add
xor
mov
cwde
ds
fwait
or
sbb
jo
xchg
inc
outs
out
push
pushf
(bad)
aad
add
aad
inc
sbb
mov
(bad)
jg
repnz
cmp
mov
imul
lods
add
fwait
js
js
iret
jo
popa
idiv
loope
fwait
ja
jge
test
pushf
sub
mov
ja
lods
mov
push
or
xor
loopne
stos
(bad)
loopne
ds
dec
adc
inc
add
fdiv
dec
(bad)
sar
ins
or
fnstsw
not
(bad)
mov
xor
aaa
or
xchg
adc
js
leave
cmp
or
lea
fisubr
mov
pusha
push
into
mov
mov
mov
pop
pop
xchg
mov
movs
pop
dec
jae
iret
pop
aam
loope
xlat
mov
jbe
lahf
xchg
fsubr
pop
jmp
int3
push
jmp
sbb
push
les
sar
dec
ds
mov
retf
ins
dec
nop
int
jecxz
mov
sbb
data16
ds
sub
sbb
into
lods
cdq
lods
(bad)
push
xor
pusha
fcmovnbe
shl
loop
xchg
jecxz
push
lahf
cwde
add
push
cmp
jmp
sbb
or
mov
(bad)
rcl
pop
jno
sbb
scas
mov
jg
or
gs
or
mov
add
fs
xchg
cmp
enter
mov
cmp
in
mov
test
mov
sub
aaa
or
push
loop
sbb
pop
fs
fwait
jbe
scas
je
jne
std
imul
xor
sbb
addr16
icebp
sti
push
xchg
and
push
xor
in
enter
lds
and
add
sti
and
jle
into
dec
ror
idiv
aam
or
loopne
cmp
mov
stos
adc
sbb
(bad)
jle
inc
adc
ror
cmp
out
sbb
xchg
dec
mov
push
outs
pop
push
xor
out
ret
iret
inc
sahf
mov
dec
xchg
ret
jmp
adc
and
mov
scas
pop
scas
ds
sub
push
xor
shl
push
mov
xor
lods
repnz
in
(bad)
mov
imul
in
cmp
cld
ins
daa
cmp
lock
sbb
push
xchg
mov
lds
pop
jmp
fimul
or
or
lahf
rcl
(bad)
mov
jmp
nop
adc
stos
ret
leave
push
jmp
xor
sub
ret
cmp
sub
cld
pop
test
pushf
(bad)
dec
jno
scas
outs
imul
xchg
add
fisttp
mov
jl
pop
ret
sbb
and
jbe
add
mov
cmc
or
imul
inc
adc
or
sbb
(bad)
inc
iret
repz
enter
fst
add
or
mov
imul
mov
in
mov
std
or
idiv
iret
mov
retf
in
sbb
jnp
mov
push
test
push
sbb
adc
cdq
xchg
cwde
pop
jnp
mov
inc
sbb
add
pop
xor
mov
dec
out
push
dec
ds
cdq
aas
pop
por
in
xchg
sub
and
fsub
test
movs
jmp
sbb
test
adc
jp
mov
loop
mov
cli
xchg
loop
das
and
movs
or
and
adc
pop
psraw
(bad)
and
dec
cld
cmps
cmp
ss
xchg
dec
rcl
push
jle
jmp
scas
popa
stos
inc
cld
jmp
out
and
push
lahf
loope
fidiv
push
and
ss
pop
fisttp
out
push
data16
(bad)
mov
fsub
fistp
mov
pop
fsubrp
(bad)
sti
ss
xchg
or
push
dec
ins
sbb
retf
fidivr
sbb
fnstcw
jo
mov
lea
mov
sbb
lahf
enter
mov
(bad)
icebp
sbb
out
dec
add
jmp
cli
sbb
pop
jl
pop
dec
xchg
jne
sbb
dec
mov
jmp
nop
dec
push
gs
shr
mov
mov
test
mov
pop
inc
retf
fst
pop
fist
lock
ret
sbb
retw
push
shr
shl
sub
(bad)
jmp
mov
push
push
cmp
mov
das
ins
push
sbb
xchg
retf
push
sbb
mov
outs
enter
mov
xchg
(bad)
icebp
sbb
inc
and
cwde
jg
popf
dec
aam
out
mov
rol
aad
test
iret
mov
pop
pushf
into
fsubr
inc
fnstsw
into
std
mov
jnp
mov
ror
inc
call
sbb
add
in
(bad)
out
push
icebp
stos
mov
(bad)
iret
pop
retf
jb
jo
in
add
fnstenv
pop
(bad)
push
mov
jmp
dec
jbe
xchg
repz
stos
retf
xor
push
xchg
aad
jl
xor
and
jmp
dec
xchg
leave
out
xchg
pop
adc
aam
arpl
push
cmp
cld
stos
fcmovbe
or
xor
fstp
adc
pop
(bad)
movs
pop
bound
ins
jle
in
dec
pop
aas
mov
xor
dec
adc
mov
int
lods
lods
lahf
jg
enter
push
in
fcomp
inc
push
cmp
pop
fnstsw
mov
xchg
fimul
or
pop
je
clc
loope
data16
sub
push
jmp
(bad)
push
xor
inc
int
mov
jge
mov
call
mov
movs
sti
push
mov
cwde
xchg
pop
iret
je
jnp
movs
jle
xchg
out
push
sbb
in
add
retf
das
dec
add
in
and
sahf
xor
and
and
stos
fwait
or
cld
ficomp
pop
lahf
cmp
lahf
fisubr
loopne
lock
adc
movs
ds
aad
xchg
fst
scas
or
xchg
and
inc
popf
lds
xchg
test
jmp
inc
jo
or
fnop
mov
lea
jno
push
inc
ss
out
mul
or
and
dec
bound
int
and
out
inc
cmp
std
cmp
cmp
daa
mov
out
clc
mov
ret
pushf
fistp
ror
ror
adc
xor
dec
scas
ror
rcl
int
or
jl
mov
imul
lds
call
push
iret
adc
add
or
pushf
lock
retf
cmp
(bad)
(bad)
lds
mov
js
std
aaa
xor
inc
ret
rcl
fimul
pushf
or
push
cmp
sub
mov
scas
jmp
fild
imul
jno
repz
sbb
or
mov
loope
lock
sahf
dec
sti
in
xchg
fdivr
(bad)
push
or
in
rol
push
push
mov
add
pop
(bad)
push
sub
mov
std
out
test
mov
jle
cli
pop
ror
retf
jle
sub
pop
adc
push
dec
pop
mov
mov
stos
mov
or
add
cld
fsub
test
push
add
and
std
imul
ja
movs
repnz
mov
xchg
jmp
jb
stos
xchg
xchg
scas
mov
popa
jne
dec
les
daa
ret
cs
xchg
outs
mov
inc
ror
pop
pop
mov
and
inc
shl
fidivr
sub
jae
sar
sub
inc
aad
dec
arpl
add
cdq
sti
jl
inc
ret
ins
add
mov
dec
arpl
test
loope
and
pop
mov
imul
and
les
sub
daa
in
icebp
cmp
or
mov
fwait
jbe
pop
jle
mov
(bad)
std
pop
pop
mov
or
fbstp
popa
mov
sbb
inc
bound
cdq
lods
daa
mov
es
repz
lahf
sbb
push
std
mov
scas
popf
std
cmp
inc
cdq
xchg
outs
mov
add
dec
daa
push
push
sbb
inc
mov
push
popf
lods
jmp
xchg
hlt
sar
js
dec
or
scas
or
inc
nop
call
sbb
mov
pop
mov
xchg
mov
retf
(bad)
lods
repz
push
pop
push
xlat
mov
push
dec
xor
fbstp
test
or
push
scas
lahf
shr
xchg
enter
xlat
ins
add
mov
dec
jnp
call
sbb
adc
cmps
push
add
dec
push
call
pop
mov
icebp
in
and
xchg
rol
adc
cmp
and
das
mov
xchg
pop
jmp
xor
mov
aaa
cmp
and
or
pusha
lds
xor
imul
push
arpl
mov
int3
nop
lea
xchg
inc
jecxz
rcl
mov
push
les
int3
adc
jns
xchg
lods
jmp
ins
adc
mov
push
cmp
inc
bound
arpl
(bad)
leave
inc
mov
retf
sub
sbb
or
out
xor
sub
xlat
push
and
pop
shl
cmp
and
hlt
stos
cmc
push
sbb
in
pusha
lock
cdq
and
les
frstor
add
ret
push
mul
cmps
ins
not
fcomp
or
dec
daa
push
add
and
bound
and
mov
xlat
xchg
cdq
sbb
cli
int
push
jnp
mov
inc
(bad)
cmps
fs
add
pop
push
cmp
xchg
sbb
sub
add
push
pop
stos
cmp
in
adc
mov
adc
ror
inc
or
mov
mov
mov
and
les
xchg
sahf
not
cmp
cmc
sbb
lods
sbb
sbb
enter
test
aaa
push
out
push
add
mov
dec
jmp
or
sti
mov
xchg
sub
cmc
loop
ret
pop
fcmovu
pop
(bad)
pop
movs
int
pop
adc
fstp
shl
ds
cmc
(bad)
adc
call
xchg
jae
and
(bad)
into
cmp
mov
cmp
add
add
cwde
or
mov
inc
outs
mov
dec
aaa
jae
cwde
fdiv
and
jp
stc
repz
and
ja
mov
nop
sub
mov
movs
push
dec
daa
xor
fisub
cmp
mov
cwde
or
jnp
add
jmp
loop
sar
mov
js
addr16
add
shl
sub
(bad)
iret
jae
dec
sub
retf
loopne
cmp
fist
mov
dec
shr
pop
popf
xor
sbb
or
adc
out
xor
shl
das
cmp
xchg
inc
cld
cmps
pop
(bad)
or
scas
xor
test
push
and
loope
push
je
inc
mov
ja
dec
push
cdq
push
mov
cmp
jg
xchg
xchg
or
sub
ficomp
scas
mov
and
call
ja
jne
inc
clc
jmp
leave
mov
pop
inc
add
dec
or
inc
mov
mov
movhps
mov
fisttp
add
popa
inc
cmp
mov
dec
dec
fld
jb
jne
loope
nop
and
inc
dec
sbb
mov
movs
sub
(bad)
mov
ret
cmp
aam
aaa
mov
sbb
dec
jnp
sub
in
sub
repz
lods
or
clc
jns
xlat
icebp
sbb
adc
rcr
js
inc
lods
outs
jp
sbb
mov
mov
or
jle
loope
pop
push
imul
ins
sub
fisttp
jne
std
(bad)
mov
in
aad
mov
push
or
jno
inc
ret
jbe
dec
mov
pop
mov
jmp
leave
loope
add
test
sub
iret
ret
mov
ret
je
push
not
pop
int3
int
nop
es
inc
outs
push
mov
push
sub
cmp
jecxz
repnz
loope
jmp
xor
dec
lea
sub
mov
jl
push
mov
xor
cdq
jb
sbb
push
inc
sbb
inc
pop
lods
jns
xchg
jo
add
(bad)
cmp
or
mov
sbb
add
rol
jmp
jmp
inc
and
sbb
les
popf
sar
out
nop
pop
dec
adc
loopne
and
adc
dec
jno
and
mov
cli
enter
lods
jmp
cwde
xchg
inc
into
sbb
cmp
ja
loope
enter
mov
pop
sbb
push
jge
es
aad
xchg
shr
and
fdiv
movd
and
mov
(bad)
in
repnz
or
push
fptan
cmp
xor
test
sbb
sahf
sbb
cmp
sbb
xchg
cmp
scas
jmp
mov
jne
retf
add
and
or
movs
jmp
repnz
xchg
dec
xchg
mov
cmp
xchg
cmp
jecxz
sbb
mov
sbb
mov
bound
aas
call
mov
stos
and
aas
in
out
mov
cmp
repnz
mov
cld
ret
nop
adc
retf
cmc
xchg
lea
cdq
sbb
adc
sub
mov
inc
mov
in
test
sti
lahf
sti
inc
aam
int3
jnp
shl
(bad)
jns
aas
add
ins
cmp
pop
add
es
xor
nop
xchg
add
imul
xor
push
mov
mov
xchg
adc
pop
movs
xchg
and
cmp
inc
jno
(bad)
repz
or
cmp
xor
outs
ss
movs
imul
mov
in
popa
fwait
in
push
xchg
call
sbb
lds
sti
jecxz
das
xchg
movs
aas
push
xlat
dec
out
and
rcl
sti
and
xchg
jno
cli
add
jg
xchg
jns
sub
inc
sahf
movs
pop
les
js
cmps
add
dec
call
cmp
test
inc
mov
inc
dec
fstp
repz
adc
repz
cmps
mov
sbb
ret
sbb
jecxz
push
js
sbb
in
ret
cmp
pop
fimul
pop
xchg
xor
mov
sbb
in
ret
xchg
sbb
mov
dec
pop
dec
out
ret
and
xchg
iret
into
push
add
sahf
call
push
arpl
pushf
inc
add
adc
dec
movs
push
(bad)
mov
inc
xor
add
push
cmp
or
sbb
rol
fcmovnu
std
in
shl
pop
pop
fnstenv
loope
and
shl
or
jbe
cmp
xor
mov
mov
imul
shr
sbb
xchg
arpl
mov
jmp
popa
mov
fldlg2
adc
mov
rol
dec
scas
xchg
gs
pop
cmp
ror
and
test
je
int3
or
sbb
xor
sub
push
data16
test
stos
push
outs
(bad)
xchg
cmps
jge
mov
mov
push
or
push
cmps
sbb
sub
jno
sahf
adc
inc
inc
cmps
lods
sub
mov
loopne
ficomp
or
in
sub
inc
hlt
stos
or
and
add
pop
test
sub
idiv
or
dec
xor
cmps
test
ret
sar
clc
ror
je
mov
sti
ss
movs
mov
arpl
fisubr
pop
push
mov
les
pop
sbb
push
scas
sbb
test
push
mov
sahf
dec
(bad)
xchg
imul
cmp
in
ret
dec
adc
stos
pop
inc
xor
iret
inc
pop
fadd
les
ret
mov
loopne
aaa
add
mov
pop
push
sbb
rcl
ret
in
leave
sbb
pusha
mov
add
jnp
aaa
rcr
sub
xchg
sahf
(bad)
push
aas
xchg
cmp
jb
push
nop
ret
pop
xchg
fs
mov
fsubr
add
ins
dec
mov
cdq
adc
std
mov
cmc
inc
push
in
test
pop
pop
dec
mov
fdiv
fwait
mov
inc
fisub
int
mov
jbe
lods
je
out
ds
push
cdq
and
daa
jmp
push
inc
stc
or
sbb
xchg
jo
xchg
dec
imul
adc
mov
jne
arpl
aam
mov
mov
hlt
sar
xchg
and
mov
cmp
push
enter
xchg
mov
and
push
mov
sub
(bad)
mov
out
sbb
mov
ret
sub
(bad)
into
and
outs
mov
in
cld
sbb
or
or
ds
sti
retf
stc
sbb
into
mov
stos
rcr
inc
sahf
mov
inc
(bad)
lods
imul
movhps
mov
add
aad
push
test
adc
jbe
sbb
mov
xchg
rcr
inc
jecxz
lods
pop
sar
inc
mov
les
pop
iret
(bad)
cmps
mov
push
mov
icebp
test
loop
cmps
int3
mov
ret
idiv
addr16
inc
xchg
out
add
mov
rol
push
jbe
mov
adc
xchg
inc
and
or
stc
jmp
data16
test
xor
dec
add
sub
push
stos
dec
pop
cld
push
push
or
mov
xor
mov
pop
imul
adc
stc
or
push
ds
iret
stos
scas
in
xor
mov
pop
iret
xchg
frstor
xor
cmc
mov
stc
inc
pop
mov
gs
outs
dec
sahf
mov
das
ror
daa
sbb
mov
nop
mov
sub
mov
imul
and
xlat
adc
add
sti
sbb
xor
neg
es
out
mov
in
fild
ja
loopne
popa
dec
mov
dec
mov
lds
sbb
ins
fs
xor
mov
fs
mov
in
push
daa
jno
(bad)
mov
cmp
rol
sbb
int3
sub
xor
shl
mov
lahf
sub
mov
gs
ret
fs
adc
sub
lds
and
mov
mov
inc
xchg
and
rcr
cmp
cwde
cdq
jg
jmp
fisttp
fmul
jl
jo
jg
jl
rcr
push
in
std
cmp
(bad)
jbe
and
xchg
sahf
inc
repz
jns
mov
pop
push
cmp
add
shl
movs
mov
push
scas
add
cwde
jne
add
sbb
mov
ja
(bad)
sub
cs
in
cli
dec
dec
xchg
imul
xchg
aam
jle
stc
push
in
inc
mov
mov
js
mov
jno
shl
ins
inc
xchg
push
pop
ds
stos
fcom
ss
out
add
inc
stos
mov
std
pop
stos
fnstsw
xchg
dec
nop
aas
inc
mov
clc
mov
test
jbe
mov
push
lds
arpl
push
pop
or
lds
es
sbb
xor
retf
adc
mov
lods
pop
dec
dec
pop
inc
stc
mov
pop
xchg
std
inc
push
jnp
jle
mov
or
jecxz
int
xchg
in
dec
mov
jns
push
das
es
mov
cmc
xor
aad
inc
jle
call
add
mov
jb
mov
mov
cmp
icebp
cmp
scas
(bad)
inc
ja
lahf
pusha
je
bound
ret
sub
dec
imul
fbstp
dec
xor
cmp
mov
leave
dec
pop
lods
mov
fs
int3
or
lahf
loopne
dec
(bad)
sbb
aad
mov
daa
cwde
mov
in
jae
push
mov
mov
mov
stos
sub
cmp
and
push
ins
mov
push
mov
xchg
es
icebp
xor
out
js
mov
mov
add
pusha
cmp
jge
push
iret
or
adc
jmp
pop
lea
or
xchg
and
in
jp
stos
mov
or
cmp
addr16
and
int3
mov
or
or
and
jle
iret
fsubr
dec
pop
jae
cmp
mov
dec
nop
aad
loop
add
and
shl
out
js
jbe
xor
cmps
or
pop
mov
repnz
add
movs
nop
movs
mov
mov
push
les
aas
iret
mov
mov
in
scas
xor
xchg
xchg
movs
cmps
mov
pop
fld
lahf
push
pop
pop
mul
inc
sub
jbe
add
pop
xor
ret
les
push
int
(bad)
enter
imul
retf
adc
bound
pop
pop
jmp
sahf
xchg
test
call
push
add
mov
ins
push
fld
push
and
dec
jg
movs
leave
xchg
bound
icebp
shl
cwde
mov
movs
(bad)
loope
psubb
pop
inc
out
mov
adc
pop
xchg
sub
nop
push
leave
xlat
adc
retf
imul
sbb
xchg
jne
and
mov
ficomp
int3
aaa
dec
add
fcmovnbe
retf
push
mov
test
push
xchg
call
int
imul
push
push
inc
lods
adc
popa
std
xchg
pop
jnp
fcmovne
into
push
inc
jle
mov
lahf
inc
sub
mov
popa
xchg
mov
bnd
and
mov
(bad)
or
mov
sar
push
pop
shld
imul
sub
leave
ins
lods
pop
or
popf
cli
xor
cmovg
push
xchg
pop
and
test
ret
mov
movs
mov
enter
je
or
je
lds
(bad)
stos
fild
inc
add
adc
mov
(bad)
hlt
into
int
jg
inc
cdq
pop
xchg
out
and
aam
aad
pushf
and
(bad)
fnstcw
dec
sub
add
sbb
xlat
shl
fwait
push
inc
adc
into
hlt
mov
jp
and
xchg
add
in
lods
jg
daa
gs
std
fsub
push
mov
pop
cmp
adc
cmp
sbb
pushw
shr
pop
adc
sbb
push
xchg
movs
sbb
mov
retf
rol
fiadd
scas
sub
stos
dec
cdq
xchg
call
jnp
and
inc
jle
xchg
pop
and
sbb
inc
xor
dec
pcmpeqw
xor
push
pop
jl
hlt
or
cmp
and
loope
mov
jmp
adc
fist
xlat
dec
popa
cmp
inc
jmp
sbb
mov
int
xlat
add
cld
in
sbb
mov
push
push
movs
sahf
push
mov
mov
inc
ins
js
adc
stos
ss
fmul
adc
fwait
mov
xchg
mov
in
repz
cmp
ja
sub
or
xor
aaa
ret
stc
xchg
sub
je
mov
cli
movs
lea
icebp
xchg
mov
cmp
repnz
xchg
imul
push
and
inc
in
mov
or
test
call
sahf
mov
cs
or
jmp
push
mov
cmc
and
ds
call
js
popa
jg
adc
sbb
mov
mov
test
cs
mov
cmc
inc
sbb
adc
pushf
mov
xchg
push
xchg
scas
sahf
arpl
jg
sub
lods
cmc
ss
inc
mov
cwde
sti
lds
arpl
push
add
pop
ins
push
fist
or
sbb
int3
and
sbb
adc
pop
test
arpl
pop
mov
mov
and
cwde
jno
jmp
pop
jge
ins
lds
in
mov
out
ds
and
xchg
mov
dec
and
sub
ss
aad
repz
lds
jg
pop
xor
sbb
pop
sti
psubusw
lods
(bad)
(bad)
push
inc
xor
jae
int
sar
or
inc
fdiv
rol
pop
jne
lods
shr
pop
mov
xor
xchg
ret
sbb
sbb
or
out
mov
test
mov
jne
scas
xchg
xchg
ret
inc
icebp
mov
sub
dec
push
push
jmp
xchg
rol
push
fbld
(bad)
xchg
pop
ficomp
inc
dec
gs
mov
iret
adc
mov
inc
xor
sbb
pusha
scas
sbb
(bad)
xlat
test
cmp
sbb
mov
mov
aad
inc
fs
pop
push
ret
and
sub
pushf
jae
fsubr
bound
loop
xlat
or
add
test
adc
adc
cmp
popa
or
sub
shl
inc
cmps
fst
pop
(bad)
push
mov
test
inc
pop
(bad)
imul
loopne
ins
idiv
dec
jbe
jp
lods
mov
int3
in
repz
xor
jb
lods
and
jmp
daa
hlt
cwde
or
lock
or
leave
pop
push
shl
xor
adc
sbb
rcl
leave
stc
outs
mov
xor
pop
xchg
mov
or
daa
rol
and
cmp
(bad)
push
mov
add
push
aaa
jne
adc
and
push
mov
and
inc
mov
jno
xchg
into
jecxz
sub
mov
pusha
shl
fld
sub
xchg
pop
loope
sbb
xchg
fistp
retf
lahf
retf
test
call
or
pop
mov
mov
outs
sub
cmp
mov
or
rol
jbe
loopne
movs
into
push
sbb
sbb
inc
cmp
push
xor
jb
xor
push
mov
ins
ds
lea
push
std
cld
test
or
icebp
fst
ss
push
sbb
test
test
inc
pop
(bad)
ret
not
mov
jmp
call
es
and
fsubr
xor
add
test
rol
stc
xchg
(bad)
in
loop
cmp
iret
out
das
or
mov
shr
push
jb
repnz
cld
imul
push
jae
call
jp
out
sub
pop
repnz
nop
xchg
sub
fwait
pushf
xor
fild
and
enter
jb
icebp
sbb
dec
sbb
xchg
and
adc
sbb
inc
(bad)
aaa
mov
pop
adc
mov
xor
icebp
lods
push
fimul
retf
or
xchg
daa
fwait
int3
call
xchg
pushf
dec
adc
sbb
mov
imul
inc
push
loop
scas
popw
icebp
stos
push
ins
je
js
push
in
or
xlat
or
or
mov
stc
fst
lods
inc
mov
dec
jne
in
push
or
ds
lock
mov
nop
dec
outs
jne
mov
cld
pushf
stos
push
das
dec
(bad)
(bad)
sub
popf
imul
outs
push
loope
sbb
cmps
mov
push
in
sub
sub
fwait
push
ja
and
sub
mov
in
adc
fnstcw
fadd
test
outs
mov
imul
jge
xor
and
xchg
and
jmp
cmp
ds
fstp
repz
or
mov
jo
mov
xchg
xchg
sbb
or
sub
daa
imul
cmp
aas
cmp
add
xchg
test
jne
ficom
scas
adc
xchg
sbb
nop
adc
adc
jmp
push
cmps
cmc
cmps
jae
in
inc
ss
aaa
xchg
pop
movs
pushf
xor
fldenv
xor
ins
xchg
test
ins
fisub
pusha
std
js
jne
ret
wrmsr
bound
shrd
or
push
add
aam
sub
imul
mov
popf
lea
nop
jo
pop
dec
xor
mov
mov
fdiv
rol
call
pop
mov
dec
lods
call
add
dec
sub
neg
push
pop
(bad)
mov
popa
rcl
repnz
add
sub
fldenv
xor
mov
bound
or
icebp
aas
nop
sbb
sub
sub
mov
mov
ret
les
les
sahf
sbb
xchg
leave
sbb
mov
ss
inc
xor
jp
pop
ss
ins
and
stos
cmp
jle
lahf
test
sub
mov
ds
pop
sub
inc
les
push
and
rcr
jae
(bad)
aad
call
into
aaa
push
in
jg
jge
jae
les
shr
int
cmp
call
lds
bnd
fcomp
push
daa
addr16
adc
into
jecxz
adc
idiv
fisub
adc
sub
dec
js
dec
rcl
popf
ins
mov
mov
dec
adc
(bad)
inc
add
xchg
scas
cmp
push
sbb
mov
sbb
xor
add
or
stos
pop
adc
sub
sub
ret
into
shr
imul
jecxz
mov
lea
je
pop
or
das
rol
push
js
sub
pop
jnp
stos
mov
inc
jge
xor
test
mov
or
arpl
cmp
mov
xor
mov
(bad)
xchg
leave
jl
jecxz
adc
mov
fadd
xchg
es
inc
pusha
mov
jecxz
push
sub
or
jmp
sub
out
mov
cmp
or
push
test
pop
in
ror
push
xchg
xchg
lahf
push
test
mov
cwde
sbb
repnz
add
cmp
mov
sbb
dec
or
mov
gs
(bad)
mov
sub
xor
dec
gs
mov
neg
inc
lea
out
or
mov
arpl
neg
repnz
out
sub
imul
push
cmp
dec
arpl
out
out
inc
inc
popa
xor
data16
add
mov
mov
fcom
lods
pop
inc
jno
(bad)
and
or
nop
outs
or
retf
aas
inc
hlt
pop
cmps
jecxz
hlt
cmp
fst
and
dec
ret
(bad)
xchg
pop
cld
push
push
pop
jne
mov
call
mov
ds
mov
jmp
push
cld
test
shl
jp
jl
mov
cmp
push
pushf
xor
imul
inc
push
mov
mov
or
outs
stos
inc
pop
cmp
dec
cmp
(bad)
popa
or
pusha
sahf
mov
jae
imul
leave
mov
jne
or
ins
push
push
leave
jecxz
scas
pop
jae
xor
push
icebp
add
inc
dec
rol
addr16
adc
mov
mov
cmp
mov
jne
mov
or
mov
imul
loopne
mov
ss
sti
ret
dec
push
mov
inc
test
cmp
out
add
pusha
ja
mov
push
icebp
dec
pop
data16
in
mov
aaa
neg
sbb
mov
cmps
out
data16
pop
shl
or
repz
xchg
add
push
les
shr
dec
or
div
pushf
hlt
jo
sbb
ins
out
pusha
adc
lods
jg
adc
retf
cs
jbe
inc
jg
xchg
jg
hlt
adc
xchg
jbe
jns
movs
sbb
or
movs
xor
dec
je
adc
jp
jp
ror
in
hlt
das
call
int3
xor
or
add
xor
lea
data16
mov
add
xchg
push
repnz
mov
cli
mov
cmp
dec
clc
add
sar
imul
jp
add
sub
sbb
push
add
push
xor
and
mov
(bad)
fsubr
loope
scas
xlat
sub
or
out
jp
cld
and
mov
lods
xchg
test
add
in
sbb
in
mov
xchg
(bad)
movs
call
pop
lea
scas
add
outs
out
out
push
ret
arpl
daa
cmp
pop
mov
mov
stos
push
pop
loope
mov
push
das
cmp
push
and
mov
jne
push
xchg
mov
sub
cmp
int3
aam
sahf
(bad)
jae
aas
mov
xor
add
outs
nop
and
inc
std
outs
jno
or
add
jl
dec
xchg
aas
sbb
(bad)
sbb
dec
cs
cmp
sub
jo
mov
fmul
xor
mov
lahf
adc
mov
xlat
mov
inc
cmp
xchg
jmp
and
in
fcmove
jnp
xchg
mov
arpl
repz
fdivr
mov
xchg
sbb
jb
in
xchg
ss
inc
(bad)
jmp
or
mov
call
js
loopne
xor
scas
ins
xor
ror
lahf
rol
jp
les
pop
fmul
(bad)
bound
idiv
sbb
sbb
aas
dec
adc
push
xchg
xor
popf
dec
std
mov
mov
sub
push
jl
jb
retf
jb
inc
pusha
jbe
push
push
inc
and
rol
mov
cmp
in
jno
jmp
fdiv
aad
fsubr
(bad)
std
mov
sub
(bad)
ret
loopne
cmps
jp
fsub
data16
sbb
lods
mov
add
sbb
add
in
cmp
arpl
or
mov
repnz
and
sti
and
push
lods
add
cmps
into
xchg
push
mov
add
sbb
add
xor
xchg
scas
cmc
mov
loope
test
imul
mov
popf
pop
rol
(bad)
cdq
sbb
sbb
ret
pop
mov
jo
fwait
rcl
pop
pop
leave
enter
movs
ins
lods
mov
scas
fidiv
hlt
imul
push
(bad)
lods
pop
adc
dec
mov
or
jle
nop
cmps
jo
sbb
lahf
pop
fwait
aas
xchg
add
fild
inc
clc
das
cdq
call
retf
jecxz
add
jmp
mov
jmp
test
cmp
and
inc
push
or
clc
push
sub
(bad)
and
test
jae
mov
push
sbb
xchg
cmp
imul
popf
cdq
jmp
in
push
aam
xor
mov
sbb
mov
aam
(bad)
lods
ins
xchg
or
jae
jmp
les
shr
mov
push
pop
(bad)
cwde
xchg
jmp
cmp
(bad)
ins
xchg
aam
loope
sbb
mov
mov
clc
ret
sub
fdivr
inc
sub
mov
sbb
test
pop
dec
inc
leave
dec
mov
ja
jl
adc
add
rol
sbb
std
(bad)
fdiv
gs
shl
shl
and
jno
out
out
lock
jmp
lock
mov
fsub
ja
sub
inc
xor
mov
jle
cmp
adc
jae
sub
stos
js
cmp
or
dec
out
lods
div
adc
xchg
add
jg
gs
sbb
psrld
imul
cmps
inc
adc
hlt
psubusw
(bad)
nop
xor
js
aas
clc
jmp
sbb
xor
js
sbb
scas
jecxz
mov
pop
jae
popa
xor
push
xor
and
out
add
dec
cmps
sbb
hlt
mov
(bad)
push
aad
test
mov
jns
pop
or
jle
xor
cdq
mov
or
stos
adc
movs
mov
repz
jb
js
cmp
xchg
adc
aam
push
push
scas
add
int
push
and
(bad)
mov
xchg
in
dec
pop
rcr
pushf
or
xor
mov
je
popf
cmp
dec
or
xchg
cmc
nop
jne
jne
int3
inc
xor
movs
test
ins
test
lea
adc
(bad)
mov
push
out
pop
pop
leave
jecxz
mov
adc
pop
push
lock
ror
mov
mov
ss
jno
xchg
das
jne
hlt
repz
mov
js
into
adc
push
mov
pop
(bad)
fimul
xor
pop
adc
ror
sar
sub
or
sar
mov
outs
outs
push
test
stc
jle
sbb
jne
lods
add
pop
out
popf
(bad)
retf
inc
adc
pop
out
xor
jno
ret
popa
pusha
sub
sub
scas
mov
jle
pop
add
mov
ror
xor
sbb
mov
ss
jo
pusha
test
std
sahf
ss
retf
inc
xchg
add
enter
cmc
in
push
mov
mov
and
addr16
fs
jle
or
(bad)
xor
inc
sbb
icebp
add
pop
outs
adc
xlat
cmp
lea
push
mov
js
sbb
sbb
pop
icebp
fistp
pop
popa
xchg
out
pop
xor
call
jnp
fdiv
aad
stos
(bad)
clc
adc
scas
out
scas
cli
xor
js
out
into
in
add
push
and
lea
jne
sub
cmp
sbb
jge
mov
pusha
jno
pusha
js
xor
imul
mov
(bad)
xor
push
push
inc
std
cmps
xor
cli
xor
or
mov
jbe
jbe
out
add
in
inc
sahf
sub
xchg
sub
(bad)
test
xchg
dec
cmp
std
and
repnz
or
push
xlat
sti
daa
into
adc
dec
mov
outs
inc
mov
loop
mov
or
inc
and
inc
xchg
hlt
mov
jg
jnp
movs
push
xchg
xlat
pop
and
mov
out
jno
or
sbb
push
daa
fsubr
rcr
mov
mov
(bad)
mov
jmp
pusha
stc
int3
mov
adc
iret
jae
pop
div
or
push
inc
cmp
jecxz
stos
inc
ror
xchg
cli
int
test
and
mov
pop
adc
jle
lahf
jno
into
ret
and
sub
jge
or
add
in
int3
sbb
pop
ret
sbb
pop
data16
in
jmp
and
cmps
retf
and
cmp
pop
and
xor
pop
xchg
jb
dec
mov
inc
sbb
scas
sahf
bound
adc
rcr
mov
push
pushf
pop
fld
(bad)
cwde
mov
movs
mov
loopne
(bad)
gs
int
jnp
call
mov
sbb
sbb
repnz
inc
sub
cmp
ror
sbb
push
jl
push
leave
mov
xchg
jae
and
inc
enter
into
std
cmp
lahf
je
cdq
fld
imul
clc
test
jno
mov
push
adc
imul
in
jno
xchg
je
dec
pop
call
test
sbb
std
icebp
xchg
lods
jp
jnp
inc
arpl
jb
mov
test
lahf
xor
dec
mov
inc
stc
jl
dec
push
sbb
clc
mov
fiadd
(bad)
das
inc
mov
test
repz
xor
sbb
std
and
add
or
mov
mov
sub
pop
test
lods
popa
lock
or
ja
mov
sub
repnz
or
fldcw
aaa
das
pop
out
arpl
adc
sbb
movs
jle
ins
add
fucomi
pop
xchg
sbb
icebp
jge
cmp
sbb
test
jmp
mov
ret
xchg
xchg
inc
push
and
dec
xor
or
jae
pop
ret
std
sbb
aaa
push
xor
pop
sahf
int
xchg
mov
addr16
(bad)
mov
mov
clc
push
fbstp
iret
mov
retf
ficom
or
call
push
movs
xchg
aas
jmp
inc
arpl
std
jae
xor
push
clc
sbb
loop
(bad)
cmps
mov
(bad)
lods
xchg
fiadd
sub
jns
lahf
mov
mov
(bad)
mov
mov
push
or
and
add
out
pop
mov
imul
ret
push
mov
fidivr
pop
rcr
dec
bound
cs
pop
cmp
test
call
ret
cdq
clc
lods
(bad)
inc
push
dec
pop
movs
adc
push
test
dec
and
int3
cs
fmul
xor
push
aam
mov
pop
das
cmp
std
sahf
hlt
jns
imul
shl
dec
mov
jno
aas
push
mov
mov
and
mov
sub
shl
je
test
or
sti
sub
sub
imul
dec
mov
scas
add
cmps
out
leave
cwde
repz
mov
or
mov
shl
mov
sbb
pop
inc
mov
xchg
inc
add
pop
sub
adc
repz
add
out
sbb
inc
mov
lock
test
push
mov
bnd
sti
retf
or
int
dec
pop
xor
add
fcmovnu
jge
mov
cmp
lea
mov
retf
out
data16
push
and
mov
cmp
daa
sub
paddq
lock
into
fisubr
popf
cmp
lahf
sbb
ja
or
sbb
xor
inc
ror
inc
outs
pop
cmc
mov
add
loop
pop
fcmovnu
and
or
shl
iret
xchg
push
or
movs
lods
jmp
or
or
push
or
arpl
mov
mov
cdq
adc
adc
in
call
and
dec
(bad)
and
and
fidiv
jnp
push
sbb
ins
iret
shr
or
aad
mov
stc
cmps
push
mov
dec
mov
cmc
cmp
ins
sti
add
(bad)
sti
out
push
cmp
lds
and
and
jg
sbb
xor
das
push
jo
push
inc
mov
pop
add
dec
inc
xchg
addr16
ins
mov
sbb
mov
shl
add
pushf
or
jg
pop
sbb
test
(bad)
in
cwde
cmp
lds
mov
xor
xchg
addr16
stos
inc
sbb
movs
retf
xor
pop
sub
int3
jge
aas
push
cld
adc
call
lods
sbb
aad
js
inc
mov
dec
xor
sahf
popf
jb
inc
iret
(bad)
dec
(bad)
out
test
xor
imul
mov
mov
jbe
mov
xor
ss
or
dec
sub
adc
sti
or
daa
mov
cld
and
imul
xlat
xor
jmp
in
mov
retf
jo
sub
xchg
adc
jmp
test
adc
and
xchg
dec
loope
jbe
dec
cmp
jle
xor
jecxz
or
pusha
test
iret
pop
and
add
cmp
jle
leave
adc
mov
repnz
mov
and
test
(bad)
test
lock
daa
adc
jle
loopne
push
push
inc
adc
xchg
test
imul
inc
popa
scas
jnp
out
sti
sbb
mov
addr16
mov
js
fsubr
xchg
lea
sbb
ja
and
les
cmps
ret
outs
add
mov
sar
sub
jge
mov
mov
neg
mov
retf
add
jmp
pop
pushf
fdiv
cld
sub
out
jmp
je
push
icebp
sub
pusha
add
rcr
pusha
sbb
pop
or
or
repz
push
sbb
xor
jg
jle
jne
inc
in
jg
ficomp
mov
cld
aaa
sub
push
repz
adc
aam
mov
fs
mov
adc
sbb
lds
enter
lds
xor
xchg
sbb
push
xchg
pop
or
loope
imul
jmp
movs
pop
mov
bound
and
out
ret
xchg
in
je
in
and
icebp
cs
ss
bound
cdq
dec
js
out
fcom
jo
cmps
cmp
push
push
aam
pop
mov
loopne
xor
jmp
pop
enter
ret
fisub
mov
xlat
adc
lds
stc
sbb
or
imul
push
cmc
mov
sbb
outs
mov
in
xor
push
jge
push
sub
retf
gs
pop
sub
cwde
int3
cmps
mov
push
push
dec
loope
mov
(bad)
test
sub
jecxz
test
ret
mov
mov
dec
mov
mov
mov
int3
mov
mov
mov
loopne
mov
(bad)
js
adc
pop
daa
ja
test
pop
sub
imul
(bad)
ins
xchg
push
call
scas
cmp
inc
inc
test
add
fnstcw
mov
imul
pushf
mov
lahf
or
(bad)
stos
jge
aas
push
(bad)
inc
gs
outs
fsubp
pop
push
mov
(bad)
aas
jmp
mov
cmp
imul
jmp
movs
push
bound
mov
jae
jmp
pop
sbb
aad
sub
xor
mov
inc
or
xchg
test
inc
int
jl
xlat
in
jmp
(bad)
jle
imul
pop
cmp
jl
jmp
out
mov
jo
sbb
(bad)
push
(bad)
mov
fs
pop
out
dec
dec
jp
xchg
fs
in
inc
add
loope
test
push
jmp
sbb
jno
mov
jbe
scas
dec
(bad)
and
movs
out
arpl
out
cmps
ds
cmp
pop
and
xchg
sub
call
jmp
mov
into
or
in
push
arpl
pushf
dec
mov
xor
test
jl
inc
push
aad
fs
js
sub
or
push
add
(bad)
cmp
xor
add
and
out
js
cli
sub
fistp
and
or
add
mov
dec
mov
data16
mov
mov
iret
mov
rcl
adc
movs
inc
or
jmp
(bad)
sub
fadd
xchg
sbb
out
repz
cli
aad
scas
sub
mov
mov
push
adc
mov
cmps
push
aas
icebp
mov
sub
jno
leave
rcr
push
aam
cmc
mov
aaa
mov
jo
ja
jno
or
push
sbb
icebp
dec
out
cmp
(bad)
stos
out
or
mov
inc
xor
jg
mov
mov
in
mov
ins
push
test
sbb
jb
push
imul
push
cdq
sbb
hlt
mov
sbb
cmp
dec
or
retf
dec
arpl
in
in
jns
cdq
out
dec
dec
cmps
xchg
mov
dec
dec
dec
xlat
add
pop
push
dec
lea
iret
cmp
cli
push
push
rcl
and
or
dec
(bad)
outs
in
loope
daa
mov
leave
xchg
push
inc
ss
fs
jmp
jmp
out
jmp
cdq
jl
stc
add
mov
inc
xchg
(bad)
pop
into
into
and
int
or
jne
mul
mov
out
xchg
dec
adc
outs
ror
dec
(bad)
shl
adc
xor
fsubr
cmp
or
push
push
mov
xor
or
jl
loopne
fwait
mov
mov
inc
loope
fdiv
mov
cld
pushf
xchg
popa
adc
in
pop
add
and
scas
clc
rol
ds
ret
aam
scas
clc
jno
sub
retf
mov
xor
mov
mov
dec
pop
xchg
imul
inc
inc
jo
mov
in
and
sbb
xor
bound
ins
call
dec
xchg
dec
sub
xor
outs
retf
xor
inc
xchg
clc
cwde
mov
cmps
xor
in
(bad)
mov
into
loope
ret
mov
mov
mov
cmp
mov
popa
enter
mov
movs
push
jl
mov
or
push
out
cwde
cmp
hlt
in
or
inc
pop
in
and
jnp
pop
sbb
and
pop
jbe
add
or
adc
push
jns
dec
inc
lods
fistp
dec
arpl
nop
js
sbb
inc
add
cmp
cmp
xlat
jae
sub
cwde
out
adc
dec
mov
and
mov
jg
jp
lds
and
pop
ins
jae
out
dec
dec
inc
imul
jmp
ret
scas
push
pop
add
enter
test
mov
dec
pop
test
ror
inc
mov
mov
pushf
xor
fstp
call
es
push
jecxz
mov
sub
aad
retf
adc
lahf
jge
outs
mov
shl
imul
inc
inc
cmp
mov
pusha
pop
mov
jmp
jg
fisttp
fstp
aaa
pop
lahf
sbb
inc
jg
das
pop
xchg
cmps
pop
fs
lods
cmp
inc
cdq
enter
(bad)
or
or
rcl
cmp
scas
mov
mov
je
call
lea
ds
or
jle
adc
mov
push
test
(bad)
fld
mov
arpl
fs
mov
into
pop
adc
xlat
adc
dec
jb
imul
xor
cmp
out
dec
in
cld
test
retf
fld
hlt
xlat
icebp
aam
iret
mov
push
push
sbb
mov
add
and
ret
mov
cmp
int3
arpl
push
sar
rcr
sub
ret
and
xchg
cmp
fwait
mov
loope
imul
cwde
mov
das
adc
ret
data16
add
gs
pop
into
fcom
mov
mov
inc
outs
gs
adc
xlat
push
sbb
sbb
and
daa
or
mov
push
fcomp
clc
loopne
cli
xchg
add
pop
nop
xchg
pop
and
jmp
mov
stos
mov
or
pop
and
xor
dec
cdq
pusha
jns
mov
mov
mov
popf
test
rcr
jle
and
add
ins
adc
xchg
out
xchg
mov
or
mov
outs
lahf
sbb
not
mov
mov
dec
jg
jl
push
add
inc
fwait
cmp
clc
outs
xor
pop
test
aam
mov
push
push
pop
out
push
(bad)
clc
dec
push
jns
jb
cmps
push
push
jae
push
push
mov
xor
(bad)
fwait
fwait
adc
scas
or
cmp
ins
shr
dec
scas
loopne
stos
jmp
stos
and
jnp
lods
jbe
es
iret
out
cli
repz
popf
cwde
cmp
clc
or
pop
xor
adc
inc
add
sbb
call
nop
mov
xor
aas
hlt
push
mov
sub
int3
and
frstor
and
sub
inc
call
out
mov
mov
adc
cmps
inc
mov
inc
mov
(bad)
out
movs
rcr
and
xchg
rcl
jns
jb
ds
push
mov
fwait
mov
mov
push
sahf
jb
adc
mov
scas
cmp
hlt
push
jp
sbb
xchg
xor
stos
or
loope
imul
out
cld
outs
into
aam
sbb
jno
or
in
add
inc
sub
push
cmp
cmps
push
out
adc
xchg
mov
in
lods
addr16
xor
cmp
sub
ins
leave
iret
mov
cdq
inc
shr
pop
jmp
push
scas
xchg
sub
(bad)
(bad)
pop
outs
sub
lods
stos
xlat
jp
fild
ss
mul
(bad)
dec
sti
test
jmp
mov
aas
and
ja
or
sbb
mov
xchg
out
call
hlt
ss
std
cwde
adc
jmp
js
jg
mov
inc
push
in
and
dec
loopne
or
out
ds
loop
inc
pop
(bad)
stos
xchg
pop
repnz
or
fst
pop
mov
dec
cwde
adc
mov
(bad)
sbb
popf
leave
cmp
loopne
aaa
out
push
cli
pop
jge
jecxz
inc
out
popf
mov
xchg
cmp
or
ins
pop
adc
ja
mov
test
scas
and
jns
pop
jge
call
(bad)
ins
popf
push
sub
mov
xchg
popf
mov
cmp
addr16
mov
ja
jmp
retf
out
fdiv
xor
cmp
xor
mov
mov
mov
iret
jno
outs
fisttp
repz
fld
sub
outs
sbb
jbe
jmp
sti
and
cmp
push
inc
call
push
pop
jnp
dec
aas
cmp
xchg
ja
mov
sub
or
push
dec
call
dec
dec
mov
lock
mov
cmps
rcl
add
push
dec
sub
jle
sbb
sahf
and
dec
(bad)
jb
movs
(bad)
jmp
popf
jne
repnz
out
ret
sbb
(bad)
shl
mov
outs
add
jge
int
fiadd
pop
test
pop
push
sub
inc
add
loop
push
sar
jb
fcomp
adc
stos
iret
mov
xlat
mov
xchg
imul
dec
mov
cmp
aad
add
retf
shr
mov
movs
fisub
adc
push
loopne
mov
dec
out
pop
lods
cwde
pusha
mov
int3
jg
sub
sbb
cmp
xchg
arpl
jg
pop
push
imul
jns
pop
sub
or
outs
xchg
arpl
cmp
xor
sub
(bad)
test
lds
cdq
stos
rcr
aas
xchg
inc
aas
adc
hlt
clc
rol
pop
fcomp
inc
jo
clc
in
push
sub
mov
xor
cs
add
in
retf
in
aaa
cmp
or
ror
sbb
test
mov
mov
and
int
aaa
pop
mov
adc
bound
mov
mov
js
push
jne
push
fisttp
imul
cmps
cmp
pop
fwait
leave
mov
adc
add
adc
int
and
jmp
jb
repz
ret
inc
xchg
or
(bad)
or
stos
push
or
jb
cmp
jbe
push
lahf
jno
cmp
xor
jle
xchg
push
loop
daa
add
pop
mov
sub
xchg
stos
shl
(bad)
inc
call
out
pop
cmp
ss
cwde
loop
cmp
xchg
add
or
push
cwde
add
(bad)
push
sbb
cmc
outs
sbb
add
push
scas
or
sbb
and
sbb
dec
rcl
fisubr
pushf
rcr
data16
pop
rcr
cmp
outs
or
sub
lds
add
pop
daa
popa
sub
push
or
mov
movs
pop
pop
cs
push
repnz
sbb
(bad)
jmp
dec
xchg
xchg
and
lahf
cwde
outs
xchg
sub
sub
(bad)
nop
inc
fnsave
cmp
mov
sbb
scas
inc
pop
jmp
cmp
daa
pushf
or
and
clc
nop
mov
shr
dec
or
ins
inc
mov
mov
adc
pop
push
fadd
bound
sbb
adc
xor
test
mov
add
fcom
ins
ja
push
ja
jbe
pop
ds
jns
fldcw
enter
loopne
ja
mov
push
jmp
popf
rol
call
lods
(bad)
xor
in
cmps
jmp
lock
xchg
mov
or
push
inc
add
pop
xchg
mov
jmp
popf
xor
jae
lea
mov
leave
add
xor
loopne
setbe
(bad)
int
fwait
sbb
push
adc
lock
or
test
fcmovne
stc
scas
push
popf
mov
dec
push
dec
inc
dec
xchg
pop
xlat
stc
dec
mov
push
enter
pop
jnp
nop
out
aam
fisttp
mov
out
test
pop
inc
add
mov
mov
scas
mov
fadd
rcl
out
xor
in
or
mov
pop
or
ret
and
mov
pop
inc
cdq
mov
sub
sub
add
add
leave
pop
xchg
scas
sbb
jecxz
push
push
fsubr
mov
jle
mov
cmc
or
jo
(bad)
lods
outs
lock
sub
test
lahf
or
xchg
das
cmp
ds
movs
fcomip
xor
sbb
dec
jl
and
bswap
push
mov
xchg
xchg
shr
inc
add
fadd
test
enter
cmp
adc
pop
fld
repz
ss
cmc
inc
js
pop
int
xchg
(bad)
ds
cmps
jne
rol
imul
push
out
popa
outs
push
cmp
mov
sub
clc
sbb
in
xor
mov
popa
sub
sub
retf
call
push
aam
cmp
xchg
push
push
(bad)
cli
xchg
xor
fisub
lea
ja
sub
adc
std
sub
pop
imul
es
sub
retf
adc
sbb
iret
(bad)
addr16
aam
xchg
pop
(bad)
cli
dec
or
jg
test
sbb
fstp
push
punpckhbw
mov
mov
outs
mov
movs
jnp
pop
enter
push
cmp
or
out
and
(bad)
idiv
pop
cmp
lock
bnd
test
cmp
les
dec
shr
jb
mov
dec
lahf
jb
mov
pushf
cdq
mov
mov
fs
jge
stos
nop
ds
bound
outs
lock
adc
fst
sar
out
fild
stos
push
pop
xchg
out
xor
aas
sbb
hlt
test
addr16
pop
ror
cdq
sahf
jmp
mov
mov
pop
mov
leave
mov
ror
enter
mov
xchg
xor
into
mov
scas
xchg
shl
ins
lds
push
cs
lahf
or
push
fs
pop
test
imul
in
xchg
dec
inc
jae
les
pop
mul
jmp
std
dec
mov
in
movs
xor
lds
inc
in
test
pop
cmp
dec
cmp
shl
iret
int
jo
sub
test
call
in
and
aam
push
xchg
mov
xchg
pop
fist
in
jecxz
fs
lock
test
test
ins
sub
faddp
popa
sbb
push
in
lods
cli
xor
xchg
cmp
dec
and
jb
mov
xchg
adc
jne
out
push
test
pop
cld
imul
jbe
ret
mov
cmp
xor
sub
ficomp
xchg
sbb
clc
jp
call
out
push
xor
cmp
jo
sbb
in
aad
cs
mov
xor
icebp
fisubr
jg
jb
into
adc
jbe
btc
xchg
test
ss
ds
dec
inc
call
push
int
pop
pop
outs
mov
mov
clc
mov
in
adc
sub
inc
fst
xchg
xlat
iret
scas
adc
jmp
inc
mov
mov
arpl
adc
mov
scas
nop
dec
and
je
fidivr
xor
repz
repz
imul
stc
jmp
stc
dec
(bad)
xor
inc
xor
fistp
stos
push
pop
cmp
rcr
mov
push
add
leave
loope
mov
mov
or
pop
add
and
inc
cmp
xchg
xchg
jle
test
ins
out
add
push
mov
pop
push
xchg
pop
enter
mov
ret
jb
pop
dec
push
fild
sahf
cmp
pop
cmp
mov
cmps
(bad)
fst
pop
fcom
dec
mov
sub
lahf
cmp
js
scas
dec
(bad)
das
cwde
int
push
es
sub
cli
fwait
adc
scas
(bad)
int3
pop
jbe
in
cmp
cmc
cli
cmp
sbb
repnz
leave
add
cmps
jmp
adc
ins
idiv
int3
inc
cmp
das
xor
inc
dec
xor
sbb
fcomi
int3
not
adc
mov
dec
lods
ds
ret
jne
je
pop
mov
xchg
jg
aas
or
jmp
retf
jl
fs
fmul
jns
cmc
sub
ror
clc
add
loopne
mov
and
mov
and
inc
fs
mov
pop
test
arpl
jo
xchg
fild
mov
sbb
or
ss
sar
xor
jne
inc
stos
push
xor
jo
xchg
lahf
pop
or
or
xor
pop
fisttp
sbb
lods
pop
dec
cmps
cmps
retf
in
adc
fnsave
cmp
(bad)
(bad)
dec
mov
mov
sbb
(bad)
pusha
loopne
xor
push
fcmovnu
adc
shl
dec
add
sbb
cs
add
loop
ficomp
cwde
adc
sub
inc
(bad)
out
in
test
add
jne
cmps
sub
mov
pushf
mov
mov
jno
mov
les
xor
push
neg
xor
pop
(bad)
fs
out
jo
outs
push
xor
xchg
mov
cmp
je
icebp
sti
cmovbe
mov
test
jl
retf
and
mov
popf
outs
ins
bound
in
(bad)
lock
popa
test
and
mov
fisttp
lea
test
or
mov
ficom
mov
cwde
jno
cmp
inc
popa
shl
cdq
jg
push
xor
cmps
sub
movs
cli
inc
dec
popf
cmp
mov
add
rol
(bad)
in
add
xchg
jno
jns
push
sub
inc
adc
mov
xchg
inc
ss
mov
cdq
jg
jp
xor
test
add
rcr
iret
and
sub
call
idiv
pop
pop
dec
mov
mov
sbb
nop
push
mov
push
stos
jno
push
push
xor
and
out
or
les
adc
inc
push
cmp
add
in
mov
fst
in
mov
or
dec
jbe
pop
dec
(bad)
xchg
or
fbld
imul
jmp
xchg
and
push
mov
call
push
pop
ret
adc
rcr
les
mov
rcl
lock
sbb
lea
mov
jmp
ja
jmp
pop
xchg
xchg
jae
cmp
jae
dec
int
fnstsw
iret
xchg
xor
jmp
xchg
imul
pop
test
pop
loopne
adc
ins
xor
xor
test
dec
lods
xor
jno
jmp
in
inc
or
push
loope
xchg
movs
stc
jl
dec
gs
mov
aad
xchg
sub
fistp
pop
cmp
shl
pop
adc
lahf
sub
sbb
xor
dec
mov
sahf
imul
xor
enter
lahf
jne
mov
jbe
inc
or
adc
sbb
enter
dec
inc
jno
nop
mov
mov
icebp
jo
xchg
mov
shl
and
jecxz
xchg
cld
rol
(bad)
xchg
icebp
sbb
loop
dec
mov
sahf
mov
add
idiv
xchg
xchg
mov
cmps
imul
sub
mov
in
dec
push
mov
ror
add
push
and
inc
iret
jle
call
div
popa
pop
adc
lahf
xor
icebp
xchg
retf
cdq
or
call
dec
cmp
lds
sub
inc
shl
test
(bad)
in
push
pop
imul
xchg
push
(bad)
enter
loopne
adc
sbb
cmp
sbb
fisubr
shl
rcr
add
cmc
xlat
push
into
nop
sti
xor
les
dec
xlat
cmc
ret
xchg
pop
xor
retf
dec
(bad)
stc
cmps
(bad)
loopne
sub
cmp
out
mul
ss
fcomp
call
push
ss
fucomi
pop
jne
fs
mov
ror
adc
(bad)
(bad)
dec
jmp
sti
pop
repz
mov
scas
out
and
jmp
and
lods
xor
test
ficomp
adc
add
aas
or
add
push
jmp
xchg
sar
mov
cmps
les
jo
test
test
popa
stos
aaa
les
pop
mov
(bad)
scas
jno
adc
xor
jge
add
leave
inc
bound
in
shr
mov
in
mov
add
data16
rcl
clc
in
or
pushf
fist
fld
scas
cdq
clc
xchg
xchg
cmc
dec
mov
sub
cli
shl
mov
dec
in
ins
imul
ins
sar
(bad)
ss
cwde
data16
jl
push
int3
out
lock
mov
pop
and
popf
push
adc
mov
movs
jae
fiadd
dec
into
daa
mov
and
or
sbb
psubsb
dec
(bad)
jmp
fcom
div
push
ret
in
jo
or
aaa
and
mov
fdivr
test
and
sti
dec
in
push
lahf
xor
shr
sbb
cmps
lods
lea
push
mov
sbb
xor
ins
ja
xchg
aaa
adc
inc
loop
or
rcl
or
pop
push
cmp
xor
mov
dec
rcr
mov
mov
(bad)
fistp
sbb
ja
lock
push
fnsave
movs
push
mov
inc
jno
mov
mov
movs
out
mov
sbb
mov
dec
sbb
pop
jo
adc
xor
pop
or
cmp
xchg
pop
(bad)
xchg
inc
imul
dec
sbb
inc
cwde
dec
fs
lea
jl
jmp
adc
out
mov
adc
dec
stos
mov
pop
pop
(bad)
stc
jp
fidivr
xchg
sub
sub
xor
seta
ja
scas
jne
fnstenv
rol
inc
jne
pop
jmp
add
xor
ja
mov
(bad)
ficomp
dec
sti
stos
ins
jbe
retf
dec
xchg
aam
out
retf
sub
fwait
adc
arpl
cmp
rcl
sahf
xchg
mov
jne
adc
sbb
in
xor
in
mov
(bad)
fstp
shl
adc
mov
dec
and
pop
(bad)
rcl
xchg
xor
cmp
ficom
jns
cmp
mov
and
xchg
pop
cwde
scas
push
fld
movs
(bad)
shl
loopne
fidivr
ja
adc
adc
test
(bad)
out
sub
xor
cmp
xlat
sbb
jae
jecxz
adc
in
xor
push
dec
fadd
lea
push
pop
fist
sar
pop
mov
arpl
outs
stos
sbb
adc
inc
mov
popa
gs
(bad)
cmp
in
pop
push
adc
xchg
repnz
push
xchg
div
movs
dec
bound
(bad)
sub
scas
jnp
xchg
or
int3
mov
sub
pop
mov
mov
stos
inc
mov
(bad)
xlat
hlt
xor
inc
add
cmp
jns
std
mov
(bad)
rol
jae
or
movs
iret
or
pop
jmp
mov
imul
loope
test
les
xchg
sti
jo
sub
in
test
cwde
je
(bad)
sbb
sti
jnp
rcr
push
xor
or
call
ja
repz
aaa
add
popa
push
sub
dec
and
pop
dec
or
ds
ficomp
xchg
xor
xchg
or
fstp
push
cli
sbb
inc
sub
lea
xchg
cwde
push
movs
call
lock
(bad)
movs
test
and
rol
sub
scas
mov
and
mov
cmps
xor
dec
mov
sahf
sub
ret
add
in
(bad)
dec
fstp
dec
mov
out
pop
adc
push
and
sahf
out
xchg
or
mov
inc
sbb
mov
das
pop
ret
neg
add
pop
or
xlat
mov
push
mov
cmc
call
out
mov
inc
or
jle
xor
mov
or
bound
adc
mov
mov
imul
sub
and
pop
scas
mov
(bad)
ds
and
stos
(bad)
out
fmulp
jae
add
jl
xor
jno
fwait
ss
int3
xchg
push
popa
cmp
cwde
inc
jmp
add
imul
aam
push
mov
mov
nop
jmp
pop
fild
into
cmp
call
fdivr
pop
push
jb
jne
ds
or
ins
mov
ja
call
jg
dec
shl
jp
xchg
in
adc
pop
adc
shl
cwde
jmp
adc
je
and
sbb
je
adc
ja
mov
or
mov
push
inc
sub
xor
cmp
rcl
mov
repz
sub
pop
out
idiv
xor
jmp
jmp
ficomp
sub
jns
or
retf
mov
sbb
or
sub
loopne
pop
and
push
enter
pop
adc
xchg
pop
ficom
or
mov
sub
add
mov
loop
movs
sbb
sbb
mov
sub
shl
aad
mov
push
mul
stos
cmps
mov
sbb
dec
sbb
cmp
aad
rcr
push
in
mov
xor
inc
pop
call
rcl
int3
(bad)
in
inc
xchg
push
push
imul
es
sbb
xchg
xor
adc
in
(bad)
push
mov
loope
or
neg
mov
sub
ret
push
dec
xchg
test
daa
dec
and
repz
and
pusha
outs
retf
dec
aam
add
mov
out
mov
inc
and
push
adc
xlat
in
js
pop
pop
sbb
out
ins
inc
pop
loop
xor
fld
div
push
popa
scas
in
push
dec
ja
mov
mov
pusha
sahf
js
cwde
(bad)
push
sbb
pop
mov
jmp
jnp
jae
mov
dec
cmp
mov
pop
xor
ret
(bad)
out
outs
fisttp
dec
mov
push
adc
stos
xchg
cmp
cmp
and
shl
mov
fld
mul
adc
aad
in
(bad)
das
mov
call
jmp
inc
jno
xchg
push
sub
ins
outs
(bad)
cmp
xor
adc
or
ss
aas
push
add
mov
outs
and
push
fdivr
ja
jecxz
xor
and
add
sahf
or
jecxz
or
dec
lods
xchg
jae
std
jae
js
fnsave
retf
into
ret
ret
sar
mov
aaa
inc
lods
and
pop
xchg
push
in
stc
loopne
mov
pop
test
lea
ficom
data16
inc
call
pop
push
mov
adc
pop
loope
push
lods
xchg
inc
xor
dec
(bad)
pusha
out
lock
fdivr
jns
das
mov
sbb
adc
cwde
inc
out
sbb
jae
xlat
(bad)
jmp
mov
ja
pop
mov
imul
outs
xchg
mov
rol
shl
sub
add
add
out
ficomp
pop
enter
pop
mov
sbb
lods
and
sub
ja
xchg
int
xchg
jno
arpl
mov
icebp
and
cdq
add
and
js
xor
mov
cdq
psraw
pop
(bad)
cmp
pop
xor
retf
xchg
xchg
xchg
fst
test
inc
into
mov
repz
mov
inc
xor
jmp
mov
jno
enter
fmul
mov
js
pop
repz
add
push
leave
in
cli
dec
sub
xchg
stos
sbb
jle
es
lock
mov
into
mov
mov
es
or
add
in
jne
lock
dec
mov
fstp
pop
es
test
shl
imul
stos
loop
rcr
jp
int
jl
shl
or
fmul
and
push
shl
pop
stos
sub
push
dec
outs
addr16
sbb
(bad)
mov
dec
fild
pusha
in
pusha
push
jns
(bad)
(bad)
or
mov
movs
lea
stos
fidiv
sahf
add
sub
retf
aad
and
ins
mov
lods
push
push
push
and
arpl
cld
cs
nop
fidiv
mov
pop
xor
jbe
(bad)
sbb
outs
pop
pop
and
jns
dec
inc
mov
popf
xor
mov
sbb
lock
or
mov
lods
mov
mov
mov
shl
pusha
inc
sbb
fidivr
cmp
adc
inc
cmp
adc
mov
mov
dec
(bad)
xchg
jne
or
mov
and
jb
sub
imul
xor
cdq
dec
push
push
lock
les
jnp
inc
inc
cdq
pusha
daa
adc
aaa
movs
loopne
dec
mov
out
xor
shr
push
pop
es
add
in
dec
add
aas
adc
dec
cmp
addr16
push
mov
icebp
and
stos
pop
imul
mov
sahf
lea
mov
adc
movs
pop
loope
bound
adc
(bad)
cmc
jl
mov
pusha
int
sahf
mov
adc
scas
xchg
or
repz
push
cmp
and
test
loope
xadd
mov
sbb
(bad)
push
adc
test
call
lds
jp
sub
es
mov
(bad)
jne
hlt
cmp
mov
lock
cmp
jge
cmps
sub
leave
and
pop
and
xchg
dec
or
popf
mov
pusha
pop
mov
push
ror
xchg
aam
adc
aad
(bad)
icebp
cmp
stos
push
shl
mov
test
mov
repnz
mov
sub
gs
cdq
ret
pop
adc
(bad)
xor
adc
or
mov
mov
jno
ret
jbe
lahf
cmps
rcr
fistp
pop
dec
cmps
mul
call
shl
ret
movs
es
push
jecxz
fcmove
idiv
sub
aad
mov
(bad)
xor
sbb
test
ror
xchg
add
retf
mov
arpl
fstp
mov
inc
push
adc
outs
add
jno
jmp
cmc
pop
cmp
(bad)
loop
add
mov
movs
lock
cmp
jge
mov
add
popa
int3
pop
jmp
int
mov
call
enter
mov
sub
jg
aam
outs
pop
adc
fnsave
dec
mov
xchg
loop
(bad)
mov
int3
scas
stos
ins
push
call
(bad)
jg
test
iret
adc
dec
mov
gs
outs
adc
xor
int
jno
mov
xchg
test
jp
mov
out
int3
jle
sbb
cmp
push
or
iret
fmul
jmp
mov
mov
out
jb
(bad)
mov
dec
mov
out
ror
mov
push
aaa
mov
repnz
mov
or
add
test
add
xchg
cmp
(bad)
in
scas
jl
adc
inc
or
jo
pop
jmp
(bad)
outs
ret
int
xor
or
stc
jbe
mov
xchg
pop
test
out
aas
fst
pop
mov
mov
pop
push
aam
and
cli
lods
sub
or
cs
xchg
stos
inc
ror
push
dec
inc
sbb
in
dec
xchg
jnp
popf
inc
enter
das
mov
jmp
pop
xchg
loopne
jb
jmp
mov
dec
out
jae
shl
push
imul
pop
fadd
sbb
cmp
cs
sbb
scas
add
repz
sbb
jmp
xlat
push
imul
(bad)
jbe
jb
(bad)
dec
jne
xor
xchg
push
loop
xchg
cmp
xor
cdq
daa
mov
jge
xchg
cmp
call
stc
jp
je
lahf
push
rcl
jne
dec
gs
jae
fdivr
(bad)
cmc
sbb
pop
fs
mov
loope
ins
push
in
pop
push
jno
add
pop
pusha
aam
dec
clc
mov
outs
dec
mov
mov
sbb
dec
sub
xchg
lea
add
and
(bad)
sub
addr16
in
cmp
cs
jno
push
xlat
test
push
jae
cmp
cmp
test
sbb
mov
inc
mov
add
in
xchg
pop
cs
ss
lahf
cld
cmc
in
not
jmp
xor
xchg
cdq
fcmovbe
adc
and
sahf
xchg
xchg
icebp
(bad)
mov
cdq
repz
(bad)
or
push
inc
add
jecxz
xlat
mov
cmp
sub
test
test
rcl
jge
mov
sub
sbb
dec
clc
mov
dec
xchg
xlat
add
test
sbb
dec
leave
mov
nop
push
(bad)
in
pop
rcr
and
ins
or
fstp
cli
inc
mov
out
adc
loop
(bad)
cld
ret
cmp
mov
packsswb
mov
std
pop
fcomp
mov
(bad)
int
jbe
fnstcw
shl
sbb
les
cmp
(bad)
add
pop
xlat
lea
dec
sbb
in
push
idiv
inc
fcmovu
aas
test
dec
ret
push
and
ds
or
popf
pushf
mov
xchg
(bad)
out
push
and
and
gs
pop
fnstenv
pop
jecxz
xor
adc
js
xchg
test
push
push
int
inc
or
inc
mov
xchg
cmp
aad
es
or
or
ret
add
inc
dec
inc
inc
inc
sub
sub
sbb
xor
out
sti
int3
adc
dec
mov
and
xchg
test
and
adc
inc
fs
cmp
dec
stos
push
sub
ins
dec
adc
mov
cmp
jb
push
call
sbb
jo
jmp
retf
xor
cmp
sbb
retf
lds
rol
adc
aad
fst
ror
sbb
pop
mov
xchg
ss
xchg
xor
xor
xchg
rol
pop
std
jp
int
inc
lods
je
and
fwait
push
shl
adc
dec
pop
sbb
scas
and
mov
jge
rol
neg
call
retf
sbb
jecxz
cmp
in
in
ror
pop
ret
xchg
cmp
jmp
xor
add
pop
int3
dec
aas
jmp
addr16
adc
fcomp
(bad)
push
xor
lods
lods
mov
mov
push
scas
inc
sub
pushf
sbb
repnz
cld
je
and
shr
or
icebp
push
and
test
scas
dec
mov
inc
sub
xor
and
rcl
lods
or
mov
inc
call
std
jle
sub
mov
repz
into
retf
cmp
addr16
cmps
xor
fbld
or
jb
or
add
sub
mov
js
aaa
test
(bad)
shl
lods
sbb
out
push
scas
xchg
(bad)
ins
mov
in
shl
(bad)
out
push
loop
pop
adc
fiadd
arpl
pushf
mov
fdivr
xchg
sar
fxch
lods
mov
shr
shr
or
outs
mov
or
pop
daa
pop
mov
mov
xchg
dec
mov
ds
jmp
cdq
pop
popf
push
cmp
jae
out
mov
or
rol
or
aad
push
xchg
imul
pop
mov
push
cmps
dec
mov
stc
inc
push
add
cmp
jno
cmps
sbb
push
xchg
adc
cs
icebp
aad
mov
daa
and
(bad)
das
sti
out
movs
call
push
xlat
cmp
cmp
or
jns
addr16
shl
ja
ja
cmp
push
jge
jmp
mov
in
mov
(bad)
and
mov
mov
in
xchg
and
in
dec
arpl
push
dec
inc
cld
movs
pop
adc
rep
lds
adc
add
jle
mov
outs
mov
in
push
push
dec
dec
push
pop
das
jmp
std
push
jecxz
jno
(bad)
or
xor
xor
or
movs
mov
inc
cli
ins
daa
scas
imul
call
lds
cmp
pop
rcr
xchg
scas
leave
stc
sbb
add
ja
test
adc
test
clc
sbb
fcom
jmp
pop
cmp
mul
mov
cmps
sub
sub
dec
fs
ror
inc
pop
dec
jno
dec
and
(bad)
push
fcmovnu
push
(bad)
idiv
pusha
or
lds
mov
imul
aad
mov
and
je
stc
loop
dec
inc
je
inc
inc
imul
pop
aaa
xchg
cmp
xchg
fdiv
sbb
fisub
sub
pop
dec
sbb
retf
xchg
xor
mov
repz
sbb
adc
sar
and
rcl
xlat
shr
cmp
mov
popf
pop
sub
sbb
and
jmp
add
inc
ficomp
ss
fnsave
sub
cmc
pop
mov
fwait
int
jmp
(bad)
and
das
call
mov
out
ds
jle
xchg
mov
div
mov
or
ins
test
(bad)
ss
push
push
push
xor
sub
dec
pop
fsubr
cdq
mov
js
(bad)
sub
jne
jns
gs
mov
fdivp
rol
lods
aas
hlt
mov
cmps
stos
mov
sub
mov
dec
pop
pushf
hlt
jmp
cmps
cmp
(bad)
lock
loopne
jl
call
stos
dec
aam
push
in
sbb
add
stos
add
mul
repz
js
add
dec
test
rcl
and
lds
sub
cmp
loopne
jmp
pop
push
int3
xlat
daa
inc
push
pop
add
cmp
pop
stos
mov
lahf
xor
cmp
push
neg
and
mov
and
movs
rol
mov
add
jmp
adc
mov
cli
lea
mov
push
mov
xlat
adc
daa
push
mov
or
xchg
xor
jge
and
daa
pop
lock
(bad)
js
mov
jns
adc
clc
js
xchg
and
sbb
mov
(bad)
push
mov
pop
pop
jmp
fcomp
cld
jmp
adc
jbe
cmp
retf
cs
std
fwait
movs
es
fcom
or
cdq
inc
mov
adc
add
xchg
mov
ss
and
cmp
adc
push
into
inc
xchg
sub
mov
std
sahf
inc
lock
in
ror
and
cmp
hlt
inc
sub
mov
ret
xchg
mov
jo
sti
fnstenv
add
mov
ret
sbb
cmp
popf
(bad)
mov
mov
scas
js
mov
xor
push
ret
movs
ins
pop
or
or
arpl
sti
(bad)
stc
ja
push
mov
aaa
fcomp
popf
(bad)
mov
and
and
shr
adc
mov
mov
fs
jmp
js
pop
adc
cmp
mov
jmp
sbb
fdiv
pop
mov
sbb
dec
lods
arpl
fwait
and
aaa
lods
xchg
push
dec
out
dec
mov
(bad)
pop
jbe
fst
pop
mov
mov
(bad)
js
jbe
or
and
leave
hlt
xor
loopne
sub
jnp
int3
or
mov
xchg
lods
sbb
in
dec
das
inc
sbb
or
and
sub
dec
dec
in
loop
repz
and
paddsb
popf
jle
ja
and
mov
cmp
lods
xor
xchg
mov
ds
(bad)
cmp
rcr
jne
loope
mov
cmp
xchg
mov
dec
mov
jp
sub
mov
cmp
aad
lea
idiv
mov
out
ret
test
std
repnz
int
xchg
repnz
cmp
mov
xchg
(bad)
push
ret
fstp
sub
retf
cmp
mov
inc
rol
inc
pushw
fdivr
or
test
int3
push
xchg
and
ins
stos
and
mov
test
xor
xchg
xor
pop
fsubr
inc
jb
or
pushf
int
jp
and
not
daa
lods
enter
iret
push
xlat
or
pop
xchg
packssdw
xchg
cmp
or
pusha
test
js
cmps
sbb
addr16
repz
sbb
repz
lods
mov
sbb
jge
and
lds
aaa
pop
jno
push
inc
outs
adc
mov
add
adc
sbb
mov
sbb
cmp
test
jecxz
sbb
inc
cmp
mov
pop
pop
jne
adc
das
mov
pop
add
inc
movs
dec
pop
push
inc
jns
cs
lahf
and
leave
mov
js
das
repnz
push
not
jmp
push
inc
ja
sub
lds
fild
pop
mov
cmps
iret
mov
push
jle
mov
inc
test
dec
sub
sub
fcomp
sbb
sbb
jbe
dec
or
push
and
call
cwde
(bad)
xor
cdq
out
hlt
or
es
in
dec
gs
inc
mov
lea
lea
ret
mov
sbb
sub
jmp
loop
popa
cld
cmps
jo
dec
add
jle
push
daa
ss
popf
jns
js
cmc
fld
and
int
je
(bad)
xlat
ret
dec
and
xor
add
ffreep
addr16
aam
enter
pop
pop
stc
test
test
nop
outs
jbe
push
pop
or
les
mov
popf
cmc
test
das
test
cmps
dec
data16
retf
imul
cmp
push
pushf
adc
xchg
and
push
cmp
sbb
push
inc
frstor
outs
mov
loopne
in
je
xchg
jnp
scas
xchg
pop
mov
fsubr
pop
popa
scas
pop
mov
addr16
cli
loopne
dec
movs
add
loop
clc
or
mov
ins
mov
(bad)
je
lds
(bad)
xor
das
dec
mov
cmp
cmp
test
std
out
scas
push
push
mov
lods
and
pop
add
mov
jbe
lahf
sub
xchg
lahf
dec
ret
mov
jecxz
inc
jmp
inc
fnstenv
push
lods
jg
and
inc
cmp
(bad)
in
cmps
jle
outs
std
mov
fdiv
fsub
ret
mov
dec
out
in
rcl
pop
cmp
cmp
jmp
xchg
out
dec
mov
push
inc
mov
pop
adc
sbb
cdq
test
xchg
mov
push
and
add
fimul
jp
inc
pop
imul
rol
ja
sbb
mov
xchg
ret
loope
imul
aad
xor
outs
jge
mov
dec
mov
mov
mov
icebp
outs
out
dec
jo
movs
arpl
push
or
xor
cmps
and
jo
mov
jbe
jbe
enter
cs
lds
imul
rcr
sbb
cmp
cmp
xchg
add
test
mov
push
int
sub
outs
cmp
sar
outs
sub
dec
movs
movs
ret
out
add
pop
or
inc
dec
call
mov
aas
dec
loop
jne
fidivr
xchg
add
loop
mov
leave
jmp
out
sbb
jno
or
loope
cmp
clc
pop
xor
mov
cmp
dec
fadd
arpl
mov
adc
ja
call
jmp
popa
mov
and
lock
rol
add
and
mov
or
mov
mov
push
push
in
pcmpgtw
cli
ins
fs
xlat
lea
aam
push
cwde
jae
or
push
or
cmp
dec
jo
lahf
inc
cdq
add
(bad)
cld
rcr
sbb
shr
lahf
les
sub
pop
inc
jo
pop
out
in
imul
inc
(bad)
sub
iret
mov
pushf
ins
cmp
icebp
cdq
shr
lahf
push
test
and
and
and
add
mov
cmp
jb
xchg
icebp
movs
inc
(bad)
fcomp
push
not
push
neg
push
sahf
xchg
adc
ds
or
cli
sbb
in
sbb
test
ins
je
fisub
movs
mov
iret
sbb
and
mov
sbb
xor
sbb
jbe
inc
pop
jg
xor
enter
nop
sub
push
not
les
jo
inc
xchg
push
loop
loopne
daa
loop
clc
(bad)
push
out
mov
add
pusha
dec
dec
ds
sub
sti
jnp
cwde
data16
cmps
mov
retf
lds
sub
nop
sbb
and
push
les
pop
xor
dec
iret
sahf
mov
mov
outs
les
inc
cs
xchg
or
add
pop
push
fcmovb
pop
mov
dec
pushf
out
enter
push
or
cwde
inc
call
lar
xor
(bad)
mov
int3
sahf
pop
mov
(bad)
jle
fwait
push
pop
leave
sub
push
inc
adc
mov
xor
mov
je
add
fdivr
cmp
pop
adc
jo
out
sti
js
pop
sub
hlt
popa
mov
repnz
adc
fs
outs
jle
pop
enter
cs
mov
imul
dec
adc
cmp
jl
dec
adc
movs
aad
shl
inc
popf
and
push
and
cwde
and
push
repnz
cmp
push
push
pushf
xchg
cld
das
fnstsw
or
jbe
mov
(bad)
jle
mul
movs
mov
pop
cmp
stc
je
pxor
and
cmc
jns
inc
hlt
or
test
sub
sbb
mov
or
cld
sbb
dec
mov
xor
push
push
add
imul
sub
mov
mov
xchg
push
adc
and
xchg
iret
sbb
add
dec
sub
call
cwde
mov
fs
cmp
test
and
fmul
enter
dec
mov
push
jle
sbb
pusha
lods
cmps
xor
fbld
push
xor
mov
stos
ret
outs
jo
inc
ja
xchg
push
ror
jmp
lods
ret
clc
sub
xchg
in
push
in
aam
xlat
jbe
ret
jecxz
icebp
aaa
cmp
dec
loop
mov
dec
pop
inc
in
and
pop
das
push
and
inc
dec
pop
div
outs
popa
adc
sbb
aaa
pop
dec
xor
cld
cmc
imul
ss
outs
push
fst
mov
and
inc
call
(bad)
cmps
add
mov
clc
mov
aas
in
xchg
cli
idiv
sub
xor
mov
xor
push
mov
adc
dec
and
adc
js
inc
pusha
fisub
loop
out
enter
lods
adc
push
lods
std
imul
mov
add
adc
js
mov
and
(bad)
cli
push
xor
xor
push
mov
inc
push
dec
cmps
xlat
call
pushf
push
xchg
ins
mov
dec
xor
mov
pop
shl
cmp
jl
pushf
add
sub
or
xchg
mov
cwde
adc
cwde
jne
aas
(bad)
shl
adc
repz
(bad)
pop
push
retf
in
ss
pop
out
push
adc
jne
es
sub
or
mov
addr16
add
push
mov
push
enter
xchg
popa
repz
sub
inc
fidiv
mov
rcl
inc
mov
imul
ret
jg
sti
dec
push
js
call
shr
repz
and
mov
xchg
mov
dec
les
addr16
arpl
push
or
loope
je
pop
pop
(bad)
cmps
imul
iret
in
jge
mov
fild
(bad)
mov
das
cli
inc
adc
test
jle
push
jne
jle
cmps
sub
xchg
mov
aam
push
jmp
(bad)
(bad)
lock
ss
jmp
mov
sub
adc
jmp
push
mov
jge
inc
push
sahf
cmp
out
jae
sub
dec
jne
jp
mov
adc
imul
xor
pop
mov
xor
clc
mov
(bad)
and
inc
and
test
ja
mov
in
push
(bad)
cld
mov
xchg
jo
xchg
inc
leave
dec
mov
adc
adc
pop
rcr
pop
test
pop
js
mov
repnz
iret
mov
(bad)
pop
push
in
inc
or
fwait
test
dec
cld
dec
adc
aaa
(bad)
(bad)
out
out
inc
push
shr
lods
fadd
in
pop
cmc
lock
add
and
inc
add
repnz
inc
cld
pusha
(bad)
and
mov
jmp
sub
sti
jl
xchg
add
mov
(bad)
outs
xchg
pop
daa
pop
sub
jb
xchg
jg
arpl
shl
sub
dec
stos
je
inc
pop
mov
test
mov
sar
xor
ds
popf
ror
pop
and
js
mov
arpl
rcr
jns
mov
pop
mov
pop
ret
xor
jmp
stos
push
out
lahf
(bad)
sbb
imul
mov
or
daa
out
push
jge
mov
xchg
xor
repz
xor
icebp
or
adc
adc
lds
pop
and
test
jae
mov
mov
call
fdiv
rcr
inc
adc
outs
rol
xchg
outs
(bad)
into
in
jnp
xchg
ss
or
jb
or
mov
pop
enter
leave
test
adc
imul
push
clc
sbb
out
add
test
shr
fdiv
pusha
aas
sar
shl
cs
mov
ins
dec
out
hlt
add
push
pop
movs
test
(bad)
fcmovne
test
sbb
mov
pop
dec
jmp
mov
mov
(bad)
jecxz
shl
stc
cmp
jae
jg
or
std
ins
sbb
mov
jb
rol
ins
xchg
loope
inc
or
cmp
sub
shl
xchg
dec
retf
or
sbb
push
fstp
add
stc
movs
jmp
cmc
cmp
dec
jne
lods
pop
inc
xchg
cld
pop
pop
in
cmp
aaa
or
sbb
push
div
mov
adc
loopne
lahf
mov
or
adc
mov
xor
mov
int3
sar
jnp
mov
mov
lock
lods
lahf
xlat
cli
inc
jae
push
(bad)
mov
jle
and
cmp
dec
cmp
ret
nop
cs
mov
lahf
lods
mov
clc
and
cmps
push
outs
data16
xchg
xor
(bad)
mov
push
or
inc
xor
leave
push
cmps
jno
ins
pop
and
or
and
js
cmp
cmp
ret
pop
mov
test
ss
test
ss
jo
pop
das
sahf
adc
jmp
add
mov
arpl
ds
jp
and
push
xchg
push
jp
inc
cmp
leave
cmp
js
jo
jne
cmps
das
mov
call
push
leave
and
mov
in
xchg
aaa
add
cdq
jno
jns
fbstp
lds
jno
mov
jl
mov
(bad)
leave
stos
adc
jle
outs
push
push
pop
sbb
mov
fs
jge
adc
xor
pop
sub
dec
retf
arpl
mov
fst
aas
xor
inc
adc
push
inc
push
fcmovnu
(bad)
cwde
cmp
inc
sub
test
je
pop
push
das
fsubrp
das
sub
loop
sub
ins
xor
mov
movs
dec
push
aas
mov
jmp
jp
push
(bad)
out
movs
(bad)
mov
stc
loopne
mov
xor
shr
movs
in
ret
dec
dec
mov
mov
xor
arpl
ss
mov
loope
and
cld
sub
push
std
les
(bad)
int
cmc
adc
scas
cli
and
dec
jns
pop
xchg
stos
js
and
dec
cwde
and
js
dec
das
popa
pop
add
xchg
xchg
popf
xchg
repz
xchg
cmp
movs
iret
pusha
movs
sub
xchg
sbb
mov
xor
cmp
js
ds
shl
shl
into
mov
scas
jmp
pop
sbb
stc
into
(bad)
rcl
dec
inc
add
dec
(bad)
ins
sub
sti
in
mov
xor
sti
lds
shl
mov
adc
pop
hlt
add
or
xchg
xor
fcmovnbe
daa
sbb
xchg
mov
sub
cmp
cmp
shr
push
pop
pop
sti
mov
and
movs
rcr
test
fsubp
fsub
popf
mov
cmp
mov
rol
stos
add
int3
(bad)
cmp
hlt
push
inc
jbe
out
mov
test
and
loopne
or
inc
stos
dec
sub
sub
loop
sbb
mov
xchg
sbb
into
out
push
inc
adc
outs
es
xchg
ja
test
or
adc
jnp
gs
inc
int3
cmp
jg
push
wbinvd
je
add
scas
or
(bad)
push
pushf
fild
push
sti
rcr
push
inc
dec
sub
or
jne
xor
sub
mov
pushf
fwait
jns
cmp
mov
mov
dec
cli
push
sub
popa
cmp
adc
inc
add
sti
xchg
rcl
adc
pop
ret
das
out
pop
repz
es
movs
or
sub
mov
popf
mov
add
ins
sub
xor
cld
rcl
jne
dec
aaa
sahf
adc
sbb
mov
inc
mov
pop
bound
fs
cmp
pop
sahf
pop
cmp
xor
mov
in
pop
pop
fidiv
mov
repnz
leave
pusha
fisub
mov
mov
push
aaa
mov
adc
cmp
pop
nop
loope
mov
fadd
and
mov
jp
pop
clc
or
aaa
mov
mov
adc
gs
cmp
push
mov
sbb
call
mov
shl
or
adc
int3
push
sub
jg
aas
xor
mov
shl
pop
and
mov
jae
jne
xor
mov
jge
hlt
add
mov
aas
cmps
mov
scas
jns
lock
(bad)
mov
test
in
xchg
cmp
mov
mov
ins
xor
ss
sbb
leave
inc
fwait
mov
push
pop
push
loopne
xor
aam
shl
shl
pop
test
pop
mov
and
loope
fsubr
mov
sub
sti
sbb
hlt
retf
xchg
inc
push
rol
xchg
in
repnz
mov
jecxz
cmps
inc
fist
imul
push
adc
ja
mov
jp
aas
stos
push
stos
adc
adc
push
ja
retf
cs
cmp
mov
ror
pop
rol
retf
mov
ds
je
imul
xchg
sti
cmp
mov
popf
lock
es
gs
lahf
add
push
push
out
inc
int
into
pop
adc
jnp
(bad)
stc
add
jmp
stos
mov
lds
aaa
adc
clc
sbb
(bad)
aas
clc
xchg
mov
mov
mov
and
push
add
jnp
je
mov
or
xor
jo
call
ret
pop
cmps
add
jae
fisub
je
cwde
test
sbb
xor
adc
mov
push
push
(bad)
mov
add
jb
fld
push
inc
push
add
sbb
adc
cs
dec
popf
push
sub
test
(bad)
push
jmp
sub
cwde
jmp
out
mov
sbb
les
sub
inc
dec
loop
sbb
aas
(bad)
dec
jmp
in
mov
jno
jp
pop
outs
push
or
jl
pop
setg
xchg
mov
dec
in
aas
aam
mov
add
enter
inc
or
mov
jnp
xor
in
or
out
fwait
jne
out
test
rol
sub
loopne
jns
into
(bad)
pop
mov
and
aaa
clc
jge
(bad)
(bad)
jae
fisub
adc
or
ins
lahf
mov
aad
jno
push
into
add
xchg
rcr
mov
sub
dec
lods
mov
out
push
pop
aas
jg
or
and
inc
icebp
jb
jno
pand
xchg
pop
jg
push
inc
push
pop
std
jae
dec
pop
repnz
sti
bound
jns
jmp
and
push
dec
pop
xor
cmp
ficomp
mov
jmp
test
push
mov
xor
in
pop
arpl
daa
mov
or
call
scas
sub
or
gs
jle
and
(bad)
bound
mov
das
push
(bad)
clc
pop
shl
mov
xor
xor
xchg
or
add
call
xor
jbe
mov
pop
xor
scas
add
stc
movs
dec
sbb
xor
ret
add
loopne
mov
inc
out
or
push
ror
cmp
mov
inc
mov
ror
adc
adc
ror
sub
pop
inc
dec
in
sub
shr
pop
mov
sub
add
dec
push
nop
dec
dec
xor
add
inc
dec
sub
xchg
div
addr16
cli
test
jae
mov
outs
or
aaa
sahf
fwait
adc
sbb
(bad)
repnz
xor
cmp
jecxz
inc
add
mov
stos
std
add
xchg
pop
jbe
shr
adc
xor
adc
test
cwde
shl
imul
dec
popw
js
fldpi
mov
sbb
rcl
jge
xlat
mov
mov
repz
adc
inc
jae
xchg
das
sbb
cdq
retf
mov
out
mov
jg
xchg
ds
push
fld
mov
add
inc
clc
dec
ss
jae
stos
jmp
std
mov
and
sbb
ins
xor
(bad)
arpl
int
call
mov
inc
jns
adc
add
aaa
cli
mov
xchg
and
addr16
adc
adc
and
hlt
or
mov
rol
mov
inc
jmp
es
jno
adc
ins
loope
mov
daa
es
jne
out
mov
fisub
xor
dec
dec
retf
and
in
sub
jl
ss
mov
scas
fild
jecxz
cmps
jns
fdivr
inc
and
not
mov
mov
mov
xchg
xor
in
fld
and
pushf
bound
or
push
test
aaa
fwait
xor
add
jbe
mov
xor
push
xchg
or
adc
scas
leave
cmp
mov
loop
sbb
pop
(bad)
mov
mov
add
adc
pusha
xchg
mov
mov
push
cmp
lock
aad
jmp
cs
jmp
pmaxsw
cld
jl
jb
jg
sahf
loop
icebp
daa
hlt
push
div
nop
and
mov
retf
ins
rcl
adc
test
cmp
add
add
inc
pop
fld
iret
mov
imul
pop
adc
add
jno
sti
xlat
cmps
mov
mov
or
or
push
imul
loope
bnd
dec
outs
mov
jl
(bad)
adc
daa
jge
push
cs
add
jmp
xchg
int3
retf
or
retf
fld
pop
fwait
shr
fwait
call
pop
cs
sbb
gs
xchg
mov
mov
sub
inc
arpl
ret
mov
xor
dec
pushf
nop
inc
stos
mov
adc
shr
jge
pop
stc
fldcw
aad
xchg
mov
call
add
mov
jp
mov
stos
jnp
jnp
push
movs
sub
push
iret
sub
repnz
sar
outs
xchg
mov
push
jmp
bound
push
mov
clc
nop
das
stc
sbb
rcl
rol
jmp
hlt
repnz
push
fidiv
movs
xchg
cmps
xchg
(bad)
jp
add
mov
movs
icebp
adc
xor
cmps
outs
sar
dec
push
retf
scas
mov
repnz
pop
jb
out
cmps
fwait
std
dec
(bad)
inc
push
add
cmps
icebp
aas
xchg
dec
pop
jbe
jnp
pop
shl
xchg
das
mov
scas
sar
xor
aas
push
inc
mov
sbb
iret
dec
fldenv
dec
or
jecxz
or
ret
mov
pop
fwait
sbb
mov
inc
jle
push
shl
inc
in
xchg
inc
pop
add
add
cmp
xor
sti
inc
jge
pop
nop
(bad)
mov
xor
fst
xchg
xchg
push
fs
sbb
in
mov
or
outs
cmps
dec
test
je
jmp
popa
loop
in
add
and
mov
(bad)
mov
ins
idiv
(bad)
cwde
into
shl
call
(bad)
push
icebp
lods
cmps
hlt
push
pop
push
stos
fs
fidiv
sahf
repnz
mov
sbb
xchg
cli
and
movs
inc
xchg
dec
sahf
dec
aaa
ds
xlat
inc
sti
pop
sbb
stc
retf
mov
rcr
mov
dec
push
mov
leave
sub
int
je
ror
ja
push
std
lahf
or
ja
cmps
and
aam
sbb
mov
std
repnz
in
gs
shl
mov
xchg
jp
sub
cmp
fs
fwait
cmp
adc
dec
jle
cmc
add
mov
jmp
sub
fisub
bound
fisttp
and
shr
xchg
sbb
adc
aad
add
shl
imul
shl
mov
push
pop
aas
cmc
dec
pop
enter
add
push
push
and
add
call
out
jo
xor
cld
cld
pop
fstp
adc
jp
fwait
push
dec
ja
shr
jo
push
fwait
ins
inc
cmp
cdq
cdq
or
mov
jecxz
outs
loop
js
mov
sbb
push
loope
jne
inc
mov
in
mov
add
mov
dec
test
lea
lea
jbe
dec
mov
adc
sub
in
int3
xchg
xor
call
pop
iret
mov
es
push
xor
lds
rcl
hlt
out
in
sbb
pushf
jbe
dec
jo
mov
test
int3
mov
mov
in
xchg
sub
movs
cdq
pop
mov
ret
les
mov
mov
sahf
inc
and
cmp
xchg
jb
xchg
jmp
sbb
fsubr
shl
mov
icebp
pop
out
outs
push
movs
mov
add
xchg
movs
inc
and
cmp
push
xchg
pop
sbb
es
in
test
ins
stos
call
xchg
jne
add
bsr
adc
shl
js
stos
push
cmp
addr16
loope
xchg
push
cmp
dec
jnp
fistp
clc
loop
aad
fistp
fs
lods
ret
push
adc
mov
xlat
mov
lea
jns
pop
leave
inc
inc
ins
loopne
jo
add
inc
(bad)
stc
pop
ror
iret
adc
mov
or
jae
in
push
repz
(bad)
cmp
loopne
lahf
dec
(bad)
jl
stos
xchg
sbb
sub
or
cld
mov
daa
les
outs
jnp
add
push
aam
cmps
or
inc
(bad)
les
popf
mov
bound
cmp
xor
sti
xchg
(bad)
xor
lods
sbb
dec
sbb
pop
inc
jmp
cmp
sub
xor
repnz
enter
fnstsw
inc
cmp
sub
ins
fisttp
rcr
(bad)
fdivr
jmp
movs
sbb
scas
mov
test
into
jmp
loopne
scas
loopne
icebp
cs
or
(bad)
push
sub
movs
frstor
rcl
mov
xor
pop
enter
jg
or
sub
mov
adc
(bad)
fstp
ret
and
inc
outs
sub
dec
repz
push
sbb
xlat
fcmovne
popa
sti
push
add
jne
push
test
int
sbb
jo
jl
out
sub
test
inc
fadd
cmp
ja
pop
xor
push
dec
sar
jg
test
movs
ror
mov
xor
stc
mov
and
or
call
cs
mov
or
das
pusha
call
sub
scas
imul
mov
push
inc
lds
sub
cmp
add
and
gs
icebp
sti
lock
retf
pushf
dec
jecxz
sbb
or
sub
cmp
mov
and
jo
inc
jle
mov
jmp
arpl
jg
jb
pop
popf
adc
in
out
lahf
pop
or
mov
mov
scas
sub
mov
jmp
cs
daa
inc
push
out
stc
xor
jge
aas
or
imul
cld
lods
movs
scas
mov
and
push
mov
jl
mov
and
fs
sti
inc
mov
call
xor
cli
shl
sbb
mov
cmps
and
popa
pop
xchg
pop
sbb
inc
sbb
shl
sub
shl
push
or
push
outs
adc
call
mov
push
add
xchg
lock
inc
stc
inc
jle
mov
adc
sbb
xchg
fidiv
mov
cmp
dec
dec
xchg
(bad)
xchg
inc
jo
(bad)
pop
inc
mov
mov
pusha
push
into
cmps
call
aas
(bad)
daa
cli
fld
ss
add
dec
movaps
(bad)
xor
pop
jb
shl
(bad)
fisubr
jp
jnp
pushf
(bad)
das
pop
cmp
scas
pop
pop
xlat
xlat
ror
sub
movs
daa
jge
xchg
xchg
int3
cdq
mov
jns
rol
fs
in
outs
pop
push
add
mov
lea
cmp
sub
sbb
inc
retf
or
xor
fs
jno
mov
and
lea
inc
xor
stos
ret
sbb
jnp
or
adc
bound
inc
push
xchg
sub
dec
mov
shl
push
mov
les
add
dec
cmp
push
jns
jmp
outs
dec
sbb
mov
test
sahf
adc
jns
xchg
stc
dec
adc
jbe
sub
daa
jecxz
adc
sub
ret
xor
cdq
dec
pop
xchg
js
inc
andps
inc
jmp
outs
adc
xchg
add
cmps
adc
in
icebp
sub
sub
xchg
push
xchg
sbb
in
mov
mov
inc
leave
xor
test
scas
les
sub
clc
dec
fs
mov
rcr
clc
push
cli
and
js
and
daa
adc
int
sar
das
mov
push
push
fsubr
stos
stos
mov
or
inc
test
sbb
jl
popa
fdiv
je
test
mov
push
jl
pop
sub
sbb
jmp
aaa
adc
dec
push
pop
mov
jg
enter
sbb
jno
mov
hlt
mov
in
cmp
rol
cmp
xchg
lahf
mov
lods
imul
ror
adc
loopne
and
test
loope
or
mov
or
pop
jecxz
lea
add
cmp
add
sbb
popf
or
mov
mov
xchg
pop
retf
add
imul
adc
xor
ja
(bad)
test
mov
xchg
mov
popa
or
retf
jb
out
es
adc
aaa
cld
push
push
loop
fcomp
iret
out
or
not
mov
adc
sub
add
add
cmp
fld
fwait
add
scas
dec
shr
sahf
loope
jmp
jbe
and
popa
sub
clc
jae
jecxz
(bad)
xchg
rol
movs
dec
cmp
stos
sub
loope
adc
sbb
faddp
push
inc
mov
ds
stos
mov
push
jmp
inc
repz
xchg
retf
or
(bad)
fist
push
ja
dec
into
jb
pop
(bad)
pop
fisubr
retf
mov
xor
mov
jbe
pop
pop
loopne
xchg
or
int3
pop
mov
and
mov
cmc
gs
mov
xor
adc
sbb
push
add
das
test
adc
xchg
lods
std
dec
xchg
aaa
scas
pop
fldcw
mov
push
(bad)
stos
mov
fwait
sbb
ffreep
cmp
xlat
dec
pop
retf
pushf
test
cmp
jp
or
adc
cld
rcr
aas
push
cmps
or
pop
mov
lahf
xchg
sbb
(bad)
mov
sbb
dec
or
pop
pop
inc
cmp
(bad)
(bad)
push
jmp
add
push
je
mov
sub
test
sub
std
xchg
fnstsw
jp
dec
(bad)
outs
shl
xchg
daa
sub
dec
cmp
add
pop
jle
jg
xor
push
icebp
or
aaa
lahf
mov
out
les
aad
sub
dec
cmp
sar
cmp
pop
dec
add
push
mov
mov
dec
mov
push
mov
mov
jnp
mov
popa
adc
fsubrp
aad
cli
inc
jne
lods
sub
mov
aam
mov
xor
xlat
sbb
xor
movq
mov
bound
mov
mov
es
push
mov
xor
dec
jmp
mov
nop
sti
and
stos
and
xchg
cdq
mov
jae
cdq
loope
in
and
sub
sahf
xchg
mov
lock
ins
dec
fs
mov
inc
add
mov
push
inc
fwait
shl
jmp
push
add
push
xchg
inc
out
jb
or
jcxz
push
jg
bound
outs
fild
movs
cmc
dec
imul
dec
scas
lds
mov
dec
push
or
dec
rol
adc
je
sti
lock
fs
sbb
adc
jmp
hlt
lds
fcom
add
add
ss
mov
pop
fwait
call
mov
mov
pop
mov
cmp
adc
aad
fcomi
cmp
je
vmaskmovdqu
jmp
mov
push
mov
inc
js
das
mov
ss
call
sbb
xchg
push
add
fld
jbe
sub
fimul
bound
icebp
add
pushf
shr
mov
cs
mov
cdq
dec
mov
inc
add
cmc
clc
jg
inc
fcmovnu
mov
mov
enter
fwait
mov
mov
movs
cmp
mov
mov
movs
push
xchg
inc
adc
loope
dec
dec
test
in
loopne
push
cmps
xchg
mov
cmp
cmc
push
xor
xchg
outs
je
or
xor
clc
inc
nop
test
jmp
add
sub
xor
call
jecxz
push
rcr
lods
fstp
jmp
cmc
dec
push
ins
adc
sbb
(bad)
cmp
ror
jge
data16
mov
xchg
mov
dec
xchg
pop
xchg
mov
test
out
lods
and
mov
xchg
mov
(bad)
fstp
jge
icebp
lahf
adc
ds
imul
dec
cmp
aad
cwde
daa
in
push
test
ins
pcmpgtd
leave
out
shr
add
or
dec
fcomip
outs
adc
clc
in
(bad)
lock
test
xor
js
retf
rol
mov
addr16
sub
jmp
mov
and
xchg
imul
sbb
mov
and
xor
mov
xor
clc
pop
adc
add
and
popf
pop
sub
outs
cmc
bnd
movs
repnz
xchg
pop
mov
push
cmp
pusha
jl
sub
ret
fsub
inc
das
and
push
and
aaa
loopne
fisttp
mov
loope
xchg
mov
push
sbb
mov
adc
(bad)
and
test
cs
ss
ror
retf
sbb
js
mov
mov
pop
lods
sbb
mov
iret
or
stos
add
sbb
ret
xor
and
xchg
and
mov
mov
pop
adc
fmul
fld
xcrypt-ecb
cmps
mov
sub
mov
bound
mov
shl
add
shl
fwait
stos
(bad)
dec
and
les
jae
(bad)
jmp
mov
pop
mov
das
mov
sbb
loopne
stos
cmp
aaa
call
mov
fcmovbe
push
arpl
adc
xchg
dec
lahf
(bad)
jp
js
retf
jp
leave
push
out
xor
std
test
popa
sahf
fisttp
hlt
popf
imul
out
adc
cs
mov
mov
jl
rcl
pop
jnp
aaa
jo
std
pop
pop
and
sbb
loope
mov
dec
inc
inc
pop
push
pminsw
jo
call
xchg
repz
or
dec
jmp
imul
mov
xchg
repz
sub
xor
das
out
sub
or
jae
aam
fist
gs
(bad)
push
sub
retf
ss
adc
stos
cmp
push
dec
push
int3
lods
stc
js
xor
adc
out
stos
dec
or
pop
inc
pop
cmps
cmp
cmp
sti
rol
outs
dec
sub
mov
add
mov
hlt
dec
inc
bound
hlt
jns
test
rcr
pop
cmp
mov
mov
stos
add
xor
scas
or
clc
sbb
inc
leave
and
adc
sub
xchg
sub
data16
mov
int3
iret
daa
in
les
inc
xor
retf
push
adc
xchg
jmp
in
push
pushf
mov
or
push
push
cmp
in
and
mov
fsub
or
test
xchg
dec
xchg
enter
sar
adc
popa
inc
nop
jbe
fild
test
pop
out
adc
xor
int
xchg
ficom
scas
inc
or
dec
sub
inc
in
sbb
cmps
cmp
jb
jmp
pop
in
in
aad
mov
mov
ins
int3
mov
in
add
jo
dec
sti
inc
jnp
mov
sbb
push
mov
jg
or
outs
hlt
and
xchg
arpl
cld
bound
jne
dec
addr16
adc
add
out
sbb
xchg
ins
jmp
aad
mov
sub
test
sub
jno
outs
jo
jmp
data16
push
jmp
cs
leave
cmp
adc
int
sbb
lds
xchg
cwde
lea
mov
out
into
jo
in
mov
nop
ss
cmp
jecxz
mov
sub
arpl
(bad)
mov
shl
dec
mov
fwait
mov
aam
rol
mov
scas
jmp
pop
inc
js
xchg
fldenv
mov
jnp
add
je
adc
and
lods
mov
jge
push
call
pop
cwde
sbb
adc
push
outs
push
sub
dec
jmp
fs
sbb
out
in
mov
sti
inc
pop
mov
iret
into
inc
cmp
pop
ins
xor
dec
cmps
or
mov
vdivsd
mov
cmps
loop
mov
or
movs
sbb
in
fs
jmp
repnz
dec
cmp
mov
test
push
fscale
xchg
and
cmp
push
lods
les
xchg
xor
stos
jne
daa
push
pop
sub
sub
dec
mov
mov
push
push
les
push
or
int3
pop
out
pop
add
add
cmp
pop
cli
mov
and
js
push
dec
adc
cwde
loop
fisttp
sar
jmp
pop
rol
sbb
xor
inc
ss
and
scas
mov
aad
adc
pop
push
aad
sub
lea
xchg
mov
adc
stos
add
xchg
push
loop
jmp
cs
shr
mov
leave
add
cmps
mov
add
ss
aas
cdq
mov
and
xchg
in
mov
shl
sbb
lods
mov
in
in
push
pop
adc
mov
pop
inc
loopne
rol
daa
add
jne
fstp
jl
sbb
mov
js
cmp
mov
ror
sbb
push
and
aas
adc
mov
mov
cmp
adc
aad
jecxz
push
sbb
push
in
enter
int
js
ffree
nop
jmp
stc
cmp
cdq
sub
jp
jge
pop
aam
pop
dec
call
or
pop
adc
mov
jp
jg
jmp
mov
inc
push
(bad)
shl
xlat
dec
pop
hlt
call
pop
dec
inc
xchg
fimul
pop
adc
daa
sar
sub
ins
fidivr
sahf
nop
jl
int
xor
sbb
sar
inc
jno
cdq
xchg
gs
gs
jecxz
mov
pop
sbb
in
pop
push
mov
and
lock
pop
repz
mov
xchg
or
mov
or
pop
inc
xor
and
dec
movs
jle
inc
lods
outs
test
idiv
sub
data16
out
mov
push
aas
arpl
dec
inc
xor
fsubr
mov
gs
fcom
call
xor
or
jmp
sbb
sahf
ret
mov
mov
call
cdq
xchg
(bad)
and
repz
movs
adc
dec
xchg
aam
jae
pop
xlat
fiadd
imul
int3
pop
popa
in
in
xchg
mov
dec
sub
nop
leave
dec
xchg
mov
dec
pop
int
inc
jae
xor
(bad)
jge
cmp
(bad)
fisubr
cmp
les
xchg
and
sahf
mov
scas
sbb
lds
int3
icebp
movhps
fist
scas
mov
and
imul
jnp
popa
pop
int
fst
lock
fcmovnb
fnstenv
add
pop
dec
inc
xchg
jo
fcmovnu
dec
or
shl
push
data16
add
mov
enter
sbb
(bad)
out
push
(bad)
in
pop
sub
push
or
jle
into
dec
lods
sbb
inc
and
jae
je
rcr
cmp
dec
ret
xchg
jae
pop
loope
jecxz
jp
in
and
popf
adc
lods
fld
test
stc
jae
shl
push
out
pop
inc
sbb
out
sub
push
cmp
(bad)
cld
sub
ins
enter
leave
sbb
in
sub
or
push
les
dec
(bad)
xchg
push
lea
fwait
or
(bad)
xchg
mov
retf
popa
and
hlt
es
mov
add
adc
retf
and
push
clc
jb
cmc
xsaves
je
mov
mov
jmp
mov
pop
movs
std
mov
push
xor
loop
jo
fistp
dec
(bad)
xor
test
ins
arpl
pop
xchg
mov
(bad)
mov
mov
inc
and
sti
int3
sub
push
lea
fcmovnu
cmp
idiv
mov
in
push
push
jl
push
outs
adc
sub
fadd
adc
xchg
(bad)
cmc
cmp
mov
loopne
xchg
loop
and
dec
cld
push
les
inc
stc
mov
jg
xchg
mov
ffree
popf
xlat
lea
inc
cwde
push
add
scas
js
gs
test
push
imul
ret
or
ror
xlat
lahf
or
dec
mov
jno
mov
dec
jge
into
aas
jge
cmp
sbb
jmp
imul
push
or
js
test
mov
adc
add
xor
cmp
xchg
xchg
dec
test
pop
aad
jp
(bad)
sti
xchg
add
mov
sbb
jmp
icebp
mov
mov
fsubr
jo
xchg
ror
(bad)
std
dec
psubd
repz
stos
retf
shl
stc
dec
in
ret
in
lds
push
and
ins
test
xchg
or
and
xor
push
mov
(bad)
call
or
xchg
pop
cmp
data16
lods
mov
xor
pop
pop
popf
or
repnz
adc
add
or
pop
pop
sar
or
out
adc
aad
pop
js
mov
jmp
int
hlt
push
pop
pop
out
sub
mov
push
cmps
je
or
xlat
stos
sbb
nop
jno
xor
fcomp
test
sub
stos
call
inc
jge
icebp
inc
jge
retf
fcomi
pop
mov
pop
or
ins
and
inc
ret
sti
out
pop
add
fcom
test
outs
or
dec
mov
push
push
repz
and
shl
jl
mov
mov
mov
lea
xor
xor
ja
aad
jl
pop
shr
lods
mov
xchg
xor
xchg
push
adc
imul
stc
pop
shl
xchg
fnstsw
mul
call
mov
dec
div
xor
mov
mov
add
jge
rol
pop
push
and
xchg
mov
movs
cmp
out
cmp
out
aaa
and
jno
(bad)
test
repz
cmp
fisub
popa
mov
popa
cmp
loopne
addr16
and
jp
call
xor
sub
and
dec
adc
ins
stc
fwait
test
add
ror
push
push
adc
lahf
inc
sbb
cdq
aaa
sbb
dec
imul
pushf
(bad)
sbb
mov
lods
(bad)
je
jmp
and
scas
push
test
adc
sub
ins
dec
adc
(bad)
jno
pop
xchg
hlt
arpl
jmp
add
dec
pop
cmp
and
call
sbb
xchg
lods
sbb
mov
add
stos
movs
addr16
push
mov
xor
sti
out
fcomp
in
xchg
mov
stos
in
cli
sar
mov
mov
data16
add
iret
push
xchg
cmp
stc
or
push
dec
aas
inc
xor
mov
inc
mov
xor
dec
push
js
retf
dec
iret
mov
jecxz
pop
mov
lods
xchg
test
or
mov
pop
(bad)
pop
inc
sbb
dec
nop
pop
(bad)
push
xchg
(bad)
jecxz
mov
pop
jmp
dec
xor
les
and
mov
aam
scas
jae
cs
outs
mov
inc
cld
cmp
adc
adc
mov
or
mov
div
push
xor
mov
imul
sbb
stos
retf
rcr
jg
out
loopne
lods
sbb
sbb
imul
inc
inc
hlt
jge
mov
xor
lds
pop
or
addr16
add
pop
jne
mov
sti
adc
pushf
in
xchg
jecxz
shr
jle
enter
push
into
pusha
pop
push
pop
xchg
js
and
xor
adc
popa
mov
clc
int3
popa
ins
loope
mov
arpl
arpl
mov
lock
sub
int
push
stc
push
mov
faddp
jge
sub
out
inc
jae
mov
add
popf
int3
push
push
inc
inc
mov
lahf
jp
sub
sub
mov
cli
or
ret
cdq
fistp
or
outs
add
cwde
xchg
xchg
push
imul
pop
add
dec
xor
dec
inc
inc
jns
retf
push
jge
push
test
jp
leave
inc
xchg
sahf
pop
xlat
add
mov
ins
cs
mov
mov
inc
hlt
or
adc
(bad)
dec
xchg
push
mov
push
mov
sti
adc
rcr
stos
mov
mov
and
push
xor
ror
xor
push
and
pop
ins
push
add
ss
fld
push
or
jle
push
call
push
sub
ss
retf
fld
inc
xchg
fimul
mov
sbb
ins
jmp
cmp
iret
push
mov
sbb
in
adc
lea
jb
push
push
retf
add
xlat
cld
sbb
jp
lds
ins
nop
in
lods
ret
pop
mov
repz
inc
mov
adc
mov
mov
loop
xor
jle
or
push
stos
xchg
push
inc
pop
call
fs
xor
cdq
xor
mov
xor
mov
dec
mov
cmp
sti
mov
jbe
ss
dec
mov
mov
(bad)
and
and
xor
xchg
mov
mov
(bad)
popf
adc
pusha
mov
inc
test
leave
fwait
int
push
mov
jle
lea
push
les
repnz
jmp
lds
retf
xor
pop
imul
cmps
lods
popf
shl
or
ret
mov
fwait
test
fisubr
aaa
shl
mov
shl
stos
inc
test
fnstcw
cs
or
add
mov
or
jl
xor
fmul
and
sub
jg
fmul
sub
test
test
mov
jl
dec
inc
sub
frstor
mov
pop
sub
(bad)
xor
jge
sti
loopne
sub
sbb
jae
or
add
push
jo
mov
cdq
xlat
js
rcl
xchg
mov
xchg
mov
imul
mov
inc
out
movs
mov
jb
ja
fcomp
test
mov
cmp
std
outs
shr
adc
sub
mov
std
inc
cs
jg
es
xchg
or
fnstsw
jb
dec
out
xchg
dec
push
jno
aas
bound
mov
jae
(bad)
cmp
fistp
jp
outs
stos
shr
imul
ins
push
call
jo
jne
jno
mov
push
stos
mov
loop
rol
(bad)
call
ss
xchg
call
inc
bound
sub
cmps
pop
cmc
push
adc
hlt
ror
inc
fldenv
push
pop
das
ss
xor
jmp
mov
mov
pop
sbb
jmp
jmp
jmp
or
mov
shl
adc
fld
out
xlat
mov
fwait
adc
sahf
xchg
jmp
in
mov
xor
cmps
test
leave
mov
adc
enter
shr
inc
jbe
push
enter
pop
mov
pop
imul
add
into
xlat
inc
pop
jl
cmps
into
jbe
not
mov
add
inc
mov
xchg
daa
mov
and
sbb
push
repnz
inc
(bad)
jp
shl
push
inc
icebp
in
sub
mov
pop
popa
or
inc
sbb
or
in
sub
in
mov
and
inc
xchg
test
ins
fs
outs
in
test
or
cdq
hlt
sub
add
movs
lock
jmp
add
sahf
sub
rol
or
mov
cmp
push
add
jecxz
clc
lds
inc
ins
neg
jns
mov
sub
xor
mov
imul
cwde
or
inc
pop
je
xor
jmp
iret
add
shl
sbb
and
xchg
out
pop
dec
jno
mov
inc
mov
popf
mov
push
movs
push
mov
stos
leave
mov
mov
aaa
mov
adc
pop
adc
rcr
test
ss
enter
push
push
sti
(bad)
fcomp
sub
inc
les
cmp
hlt
or
dec
lds
movs
repnz
cmp
std
mov
fwait
dec
pop
inc
sar
cmp
xor
push
mov
es
rol
ins
pop
xchg
sub
fbstp
sbb
loop
push
pusha
mov
cdq
mov
xchg
jmp
add
fs
sbb
adc
jp
dec
push
out
jmp
add
cwde
mov
and
inc
lods
or
and
fwait
mov
mov
hlt
push
lods
or
mov
movs
jne
pop
(bad)
adc
ror
sub
ret
jae
call
push
not
popa
cs
push
addr16
jg
jbe
ja
and
pop
and
push
xchg
test
daa
sbb
inc
mov
(bad)
or
arpl
cmp
push
das
inc
loope
(bad)
sub
lods
scas
(bad)
inc
arpl
nop
out
mov
jae
cdq
xchg
cmp
fs
mov
cs
lea
neg
jmp
adc
pop
mov
cmp
ins
les
neg
xchg
pop
repnz
cmc
pop
push
test
push
shl
in
jle
or
lea
pop
aaa
jecxz
sub
aaa
ret
sahf
mov
in
cmp
icebp
jg
(bad)
mov
push
xor
push
push
cmp
into
or
mov
jecxz
pop
push
pop
mov
mov
mov
inc
jno
ret
adc
sub
mov
jbe
add
mov
push
btr
jb
pushf
inc
mov
pop
cmps
fiadd
adc
aas
pushf
fwait
cdq
cmp
or
xchg
xor
xor
pop
fwait
mov
(bad)
cmc
cmp
cli
out
out
jnp
fmul
mov
inc
stc
sub
dec
push
inc
sar
inc
sbb
mov
pop
inc
add
outs
(bad)
jns
retf
jle
in
clc
shl
and
fcom
and
xchg
inc
stos
lods
mov
inc
xor
adc
dec
aam
movs
jb
(bad)
add
mov
jg
lea
xor
and
adc
(bad)
sbb
enter
imul
push
xor
ror
test
aam
jbe
mov
hlt
js
or
js
and
or
imul
or
fiadd
sti
jmp
rcl
xor
sbb
jbe
sti
add
sub
sub
ins
call
dec
inc
fisubr
scas
stos
mov
pop
stos
mov
cwde
pop
xchg
dec
mov
xchg
outs
les
mov
neg
mov
or
clc
inc
(bad)
adc
and
dec
int3
(bad)
xchg
outs
sbb
xor
push
leave
jmp
or
aad
(bad)
cmc
inc
xchg
xchg
pop
mov
dec
inc
xchg
sub
inc
and
out
and
inc
cli
test
jae
xchg
add
push
repz
cmp
int
lods
fcmovb
or
sub
jnp
adc
inc
xor
sub
xchg
das
dec
and
lahf
jl
jge
popa
cli
xchg
mov
or
lahf
(bad)
pop
sbb
out
pop
jae
cli
int3
ins
push
minps
scas
xchg
(bad)
hlt
inc
mov
jg
jno
nop
in
jecxz
push
pop
jmp
xor
scas
mul
mov
dec
mov
fsqrt
mov
xchg
adc
pusha
mov
cmp
lock
or
pop
cmp
fwait
jbe
cdq
mov
or
mov
in
xchg
test
xor
jne
jmp
cmps
sbb
ja
and
aaa
lahf
pop
mov
add
cs
xchg
gs
popf
and
int3
mov
scas
cs
fnstcw
xchg
add
cld
outs
addr16
pop
gs
cmps
sub
js
fst
ss
in
mov
pop
in
add
fimul
int
pop
pop
test
ja
cmp
call
sbb
cmp
int3
push
jnp
mov
jmp
(bad)
sbb
or
xchg
mov
mov
movs
inc
(bad)
enter
out
loop
xchg
fcomp
xor
jne
dec
(bad)
ret
adc
ja
ins
xor
in
popf
test
inc
mov
lods
test
adc
and
mov
test
mov
and
int3
out
movs
in
add
(bad)
daa
pop
lods
mul
push
push
movs
loopne
pusha
add
push
and
jl
popf
pusha
add
jge
mov
xor
fs
add
inc
inc
xor
sub
dec
inc
test
and
adc
fld
mov
xor
cs
sub
repz
mov
int3
jnp
and
mov
stos
mov
icebp
jo
into
sbb
aam
pusha
sub
jecxz
sub
imul
in
jge
les
mov
movs
nop
add
or
mov
call
xor
jl
sub
sbb
mov
jne
xchg
fs
dec
idiv
std
inc
outs
inc
xchg
xchg
mov
fwait
outs
pop
bound
sbb
cmp
sti
ret
pushf
or
fnstcw
xlat
shl
(bad)
in
inc
push
cwde
outs
pop
aas
push
mov
pop
cli
mov
pop
cmp
inc
mov
mov
daa
xchg
in
add
test
ficom
mov
loope
sti
loopne
div
mov
sub
rol
xor
fld
cli
push
push
(bad)
std
mov
dec
repz
fmul
je
imul
sbb
(bad)
xor
inc
pop
ds
pop
xchg
cli
cld
jp
inc
cdq
(bad)
fisttp
xlat
sub
rol
cmps
out
ja
adc
mov
(bad)
in
fadd
xor
test
sahf
dec
dec
repnz
fimul
leave
xor
call
dec
mov
sar
push
(bad)
and
mov
fwait
(bad)
arpl
inc
mov
out
mul
adc
dec
rcl
xchg
inc
lahf
cmps
pop
outs
out
pop
addr16
mov
pop
ret
nop
add
ret
xchg
cs
xor
adc
and
and
fs
jl
fidivr
pushf
(bad)
mul
mov
add
inc
outs
push
mov
sub
cmps
iret
test
push
clc
and
add
mov
ror
and
pop
jb
int
or
aas
pusha
and
jne
jmp
les
aas
jl
cli
pop
dec
rcl
ret
adc
addr16
dec
lds
mov
push
pop
push
imul
pmuludq
sub
cmp
das
in
lods
ret
or
ss
or
dec
inc
xchg
test
int
dec
mov
jmp
sbb
hlt
imul
fidivr
fidiv
mov
out
sub
mov
sbb
fnstsw
out
popa
add
push
rol
jmp
jle
mov
les
ret
int
into
add
cwde
cmc
mov
add
jmp
xchg
ss
in
lods
adc
sub
call
pop
xor
add
in
jae
imul
mov
ins
dec
xor
test
ss
mov
pop
xor
xor
push
inc
pusha
dec
push
jecxz
pop
jns
and
push
stos
mov
mov
jnp
mov
dec
cdq
jge
(bad)
stc
js
idiv
std
adc
push
xor
xor
(bad)
enter
mov
mov
dec
mov
into
xchg
lods
lahf
sbb
inc
out
push
pop
push
out
mov
nop
out
mov
xchg
lods
xchg
inc
xchg
fst
xor
test
or
popf
icebp
lds
push
xor
test
movs
stos
inc
(bad)
mov
les
fwait
or
int3
or
xchg
inc
mov
pusha
mov
mov
push
mov
ins
mov
leave
fsub
scas
ret
mov
lods
(bad)
repz
xor
out
cld
ja
xchg
xlat
int
lods
data16
addr16
fs
mov
jp
sub
lgs
lea
test
mov
das
or
xchg
inc
push
add
and
push
pop
mov
sbb
fnstenv
popf
ja
push
mov
and
push
inc
repz
push
icebp
cmp
imul
add
pop
and
mov
cmp
in
out
js
loope
not
enter
pop
mov
xor
sbb
xor
cmp
shl
repz
mov
mov
sub
inc
shl
int3
mov
inc
(bad)
jne
enter
je
adc
enter
cmp
cmp
lods
push
loopne
dec
mov
and
xchg
jb
daa
iret
inc
loopne
pop
inc
stos
mov
xchg
out
mov
arpl
out
adc
xchg
aas
outs
das
jno
aaa
xchg
sbb
pop
xor
shl
sub
pop
mov
jmp
jb
dec
leave
sbb
outs
aad
pop
adc
xlat
sti
mov
mov
loop
ret
retf
out
mov
cmp
push
push
aad
jbe
or
sbb
pop
fmul
loop
movs
(bad)
mov
jmp
dec
add
cmc
test
shl
push
xor
mov
and
sti
out
ret
mov
sti
cmp
in
inc
pop
xchg
jne
les
dec
mov
jl
jno
retw
pop
shr
sti
sub
jo
mov
xchg
inc
pop
push
sub
daa
pusha
ficomp
add
sub
mov
fidivr
jnp
push
push
int
dec
popf
dec
shr
lods
popa
push
ret
pop
xor
test
pop
mov
mov
stc
rcl
jp
out
sub
push
dec
and
jo
addr16
je
add
or
mov
repz
sti
shr
mov
fs
sub
xor
mov
sub
into
mov
js
cmp
rcl
aam
js
xlat
cli
adc
(bad)
pusha
into
loopne
fcmove
mov
clc
pop
(bad)
out
and
outs
aas
inc
and
in
pop
cmp
pminub
mov
cmp
repz
les
pop
push
inc
xchg
(bad)
inc
sub
and
dec
mov
ret
leave
cmps
jne
cmps
push
cmp
jmp
jg
xchg
pushf
shr
cmp
and
add
cs
and
(bad)
in
pushf
cwde
inc
push
aad
jl
xchg
inc
adc
daa
adc
jmp
sti
bound
gs
jno
mov
adc
sub
jmp
shr
cdq
ficom
(bad)
jp
sbb
retf
aad
mov
in
sbb
loope
lods
out
or
ja
inc
inc
call
gs
lahf
rol
sbb
or
jno
add
mov
jle
jb
mov
imul
mov
jle
inc
and
into
adc
out
inc
les
ja
mov
sahf
mov
cmp
sub
sbb
ss
push
add
outs
xchg
pop
pop
lahf
out
fimul
adc
sub
xchg
sbb
or
xor
jp
rcr
shl
pop
inc
imul
jb
sti
xchg
jnp
(bad)
(bad)
out
inc
mov
sub
inc
xor
repnz
xchg
ror
mov
retf
fnstenv
and
pop
xor
sti
sub
xor
sub
mov
ins
sub
test
test
jo
sub
inc
inc
mov
and
aaa
adc
aam
arpl
sub
mov
into
leave
adc
and
mov
push
mov
ins
fsubr
cmp
or
dec
pop
sahf
adc
push
and
or
js
and
inc
jo
adc
cmp
add
xchg
test
inc
sub
pop
loopne
xor
xlat
leave
dec
rcl
sbb
xchg
pop
inc
sbb
pop
jns
mov
pop
ins
addr16
dec
jmp
out
fild
sbb
dec
dec
scas
and
aas
inc
pop
dec
push
add
mov
sub
jnp
test
and
dec
push
repnz
adc
les
inc
dec
sub
cs
push
cmp
jg
inc
pop
or
and
xchg
mov
or
shl
jle
pop
adc
inc
adc
xchg
sub
addr16
add
fdivr
fld
jo
push
dec
dec
inc
out
pop
or
outs
pop
jo
xor
pop
jle
push
dec
icebp
enter
push
mov
jl
push
cmp
add
iret
arpl
mov
cmp
dec
mov
xchg
add
xchg
dec
gs
data16
sti
inc
xchg
iret
push
ins
lea
fs
jns
cdq
xor
in
xchg
into
rcr
cmps
mov
inc
popf
shl
stc
ja
inc
dec
mov
jo
shr
loope
xor
leave
mov
mov
imul
lods
mov
pop
or
in
outs
mov
mov
inc
jo
push
adc
sub
mov
add
test
pop
add
outs
and
lahf
add
pushf
(bad)
sub
inc
movs
neg
cmp
mul
loope
xchg
and
(bad)
jno
xchg
cmp
push
add
push
sub
push
and
mov
xor
cmp
nop
lea
inc
pop
scas
test
stos
jnp
push
inc
ffree
jno
mov
mov
push
ret
ja
test
push
mov
mov
js
or
cwde
mov
(bad)
outs
jbe
fxch
leave
jns
or
cld
inc
rol
mov
retf
retf
enter
cld
in
cmovs
outs
ins
scas
int3
(bad)
(bad)
lods
pop
jb
pop
dec
lahf
add
cmp
sub
ret
cmps
clc
lahf
in
adc
arpl
je
cmc
xchg
push
mov
psraw
(bad)
sub
jmp
popa
push
xchg
cli
lahf
loope
es
pop
(bad)
jb
ja
or
sub
in
pushf
sub
(bad)
jmp
mov
mov
ins
pop
mov
fbstp
invd
into
icebp
cld
sbb
jge
imul
xor
ret
push
call
pop
and
retf
fst
xchg
pop
in
call
mov
les
icebp
iret
std
mov
xor
jo
inc
sub
push
add
jnp
cmp
xchg
(bad)
jae
jns
and
pop
daa
stos
out
mov
push
inc
sbb
mov
xacquire
mov
sbb
or
pop
mov
in
imul
(bad)
push
(bad)
lods
or
sbb
dec
into
push
or
stos
nop
and
xchg
sub
fist
or
daa
jecxz
jecxz
add
scas
inc
mov
mov
fcom
in
out
rol
in
mul
retf
rol
jo
icebp
mov
aad
xchg
push
and
or
mov
mov
ss
push
rol
cmp
dec
jno
cld
sbb
xchg
cmp
into
out
test
add
repz
cmp
cwde
xchg
jno
push
or
dec
adc
rol
adc
sahf
dec
mov
push
xchg
das
xor
pop
pop
xor
rcl
leave
ror
and
loop
xor
jmp
dec
out
out
dec
ficom
jne
aad
jmp
shr
jb
in
mul
sbb
iret
xor
or
adc
mov
pop
xor
(bad)
pop
nop
adc
scas
fisub
cmp
call
mov
or
ds
xchg
rcr
int3
jle
xchg
xchg
mov
(bad)
test
rol
outs
push
cmp
xor
push
add
and
adc
adc
and
mov
shl
mov
int
pop
loope
pop
xchg
cmps
jnp
les
adc
push
push
mov
dec
sbb
out
and
sub
push
in
mov
movs
iret
push
outs
xor
bound
or
and
mov
sub
pop
xchg
cmp
int
fiadd
jmp
jns
inc
neg
rol
adc
mov
(bad)
fistp
cmps
and
lods
xor
mov
sbb
aas
pop
in
cmc
cmps
pop
push
movs
cmps
icebp
xor
xor
inc
inc
add
xor
repnz
or
mov
or
jnp
jne
iret
je
mov
(bad)
scas
add
jecxz
out
fild
pop
pop
data16
xor
mov
sub
xor
int
bound
icebp
and
jb
dec
adc
shl
push
stos
(bad)
cld
jnp
push
xor
in
call
shl
mov
push
imul
test
das
jle
sub
add
pop
call
inc
inc
rcr
cmp
popf
ror
pop
aad
outs
push
jmp
pop
pushf
popf
push
cmps
clc
test
mov
aad
stos
idiv
scas
xchg
lds
xchg
lods
mov
div
jno
fild
test
dec
mov
jno
mov
test
jle
in
push
add
out
repnz
sbb
sub
xchg
pop
jp
dec
xchg
scas
mov
ret
fabs
enter
sub
pop
clc
and
test
pop
int3
mov
and
stos
mov
mov
mov
retf
cmp
outs
dec
or
dec
(bad)
fnclex
cmp
jae
jmp
rol
int
hlt
jae
cs
imul
sub
mov
xchg
repz
jne
loope
fidiv
xchg
mov
nop
or
pop
adc
mov
push
xor
(bad)
or
inc
sub
test
and
xor
inc
mov
xor
test
popf
test
outs
out
xchg
or
lea
imul
mov
add
ret
mov
push
lods
add
mov
stc
or
call
push
cmp
push
jmp
or
jne
sbb
push
push
loop
xchg
dec
cmps
scas
dec
daa
retf
sbb
sub
imul
and
sbb
jo
dec
sar
fwait
ucomiss
jae
std
inc
imul
cld
retf
ret
pop
gs
arpl
pop
dec
cld
lock
test
add
or
xor
mov
pop
mov
sbb
pop
add
or
sbb
xchg
jp
nop
or
mov
inc
xchg
or
(bad)
lods
aad
jmp
rcr
test
xchg
lods
dec
les
dec
pop
jne
mov
pop
cmps
dec
rcl
aaa
xlat
mov
sub
imul
xchg
mov
int3
cmp
mov
or
jg
fadd
mov
(bad)
loope
push
dec
sbb
sbb
iret
jbe
xchg
fadd
mov
cmp
aaa
dec
pop
jae
imul
push
adc
retf
or
mov
sub
xor
cmp
fisubr
sub
arpl
inc
mov
or
adc
call
inc
push
popf
push
pushf
lea
pop
stos
test
push
push
(bad)
fdivr
xchg
fcom
fcmovnb
adc
repz
inc
scas
dec
mov
dec
inc
loop
dec
movs
iret
mov
aas
addr16
mov
pop
cmove
neg
or
aaa
pop
and
lods
add
loop
sbb
mov
ret
fs
popa
xor
pop
mov
mov
adc
out
cmps
dec
(bad)
sbb
inc
pop
sub
push
jge
jbe
aaa
pop
xchg
fdiv
icebp
movs
int
mov
sbb
addr16
jge
in
jle
mov
mov
push
adc
inc
sbb
inc
jle
fdivp
gs
and
inc
(bad)
not
sub
fild
jbe
mov
adc
inc
or
add
sub
(bad)
sub
popf
into
add
add
xor
fmul
mov
jns
out
repnz
ja
pop
cli
int
lock
mov
mov
fisttp
cwde
daa
pop
pop
lock
clc
cs
int
jmp
mov
enter
shl
mov
xchg
cmc
adc
call
jnp
mov
vpsadbw
sbb
cli
jne
and
test
arpl
fnstsw
outs
sbb
cmp
sbb
xchg
fnstsw
sub
int
adc
add
inc
mov
imul
jle
aaa
push
dec
loopne
xor
mov
pop
sbb
cmc
xor
pusha
and
div
dec
enter
cmp
push
ins
jb
dec
dec
xor
push
aaa
outs
aaa
jp
sbb
cmp
cdq
into
mov
cld
or
dec
push
(bad)
aas
sub
inc
call
fstp
in
in
push
out
inc
mov
and
pop
xlat
mov
outs
lahf
sub
shl
mov
push
mov
jp
movs
std
mov
mov
imul
(bad)
repnz
xor
mov
adc
or
(bad)
push
mov
adc
ret
movs
jne
retf
add
stos
sub
jmp
xchg
dec
sub
jne
lods
stc
int3
jne
ror
pop
cmp
mov
inc
xchg
movs
(bad)
repz
push
aad
das
add
xchg
mov
cmp
shl
fs
xor
cmp
jl
out
les
aaa
lahf
mov
push
and
paddsw
call
inc
mov
sbb
push
xchg
add
loop
pop
jae
daa
lds
neg
and
ins
adc
or
inc
fisttp
mov
mov
add
cmp
pop
fdiv
add
mov
repnz
pop
xchg
popa
call
out
jbe
and
test
and
imul
loopne
jmp
pop
stos
or
sbb
cs
sub
adc
add
(bad)
cmps
sbb
push
gs
mov
mov
iret
js
aam
xchg
js
dec
mov
sub
mov
sbb
or
mov
leave
sub
jne
mul
int
push
inc
push
mov
arpl
mov
arpl
cmp
out
clc
fwait
and
and
xor
in
lock
out
xor
inc
cmp
ins
out
ffree
jecxz
sar
hlt
cmp
popa
shl
ins
inc
lds
push
test
pop
(bad)
fistp
add
rcl
mov
js
lock
push
inc
(bad)
mov
adc
call
inc
int
in
adc
lahf
retf
xchg
and
cmps
xchg
cli
mov
pop
inc
rol
daa
rcr
mov
fwait
pop
push
push
jmp
xchg
nop
ja
xor
lock
imul
mov
mov
out
mov
sahf
mov
retf
popa
inc
sbb
mov
fld1
mov
jmp
(bad)
inc
xlat
or
icebp
popf
neg
cmp
or
cs
push
push
cdq
push
lea
cmp
inc
aad
stos
rcl
or
pop
push
int
mov
ins
xchg
jp
ja
movs
frstor
xor
out
jno
int
mov
push
ins
inc
jge
in
jo
inc
not
stc
jns
(bad)
lods
mov
stc
xchg
xchg
mov
sub
inc
pop
and
test
jg
push
sub
cmps
loop
xchg
lahf
mov
repz
mov
ja
jmp
ss
leave
stc
push
cli
pop
jp
cs
das
data16
sbb
inc
jo
dec
jg
inc
jo
push
retf
sub
ror
(bad)
or
push
jns
pusha
shl
out
mov
xor
jg
(bad)
pop
test
cmp
ret
pop
std
in
and
and
out
sbb
xor
inc
mov
or
xor
or
repz
nop
pop
adc
or
cmp
add
nop
es
pop
or
or
add
adc
iret
aam
(bad)
pop
(bad)
sub
cmp
cmp
arpl
and
out
cmps
shr
pop
movs
cmp
sub
sbb
inc
xchg
pop
jmp
jp
mov
jmp
jns
or
push
ffree
or
xchg
or
into
dec
sbb
stc
dec
ret
(bad)
aam
fdivr
push
fnstcw
shr
jno
lods
dec
outs
cld
cdq
push
xor
add
fs
mov
adc
addr16
push
pop
cmp
dec
inc
and
or
fs
mov
in
xor
xchg
inc
ret
push
scas
repnz
push
hlt
ret
stc
xor
les
stos
je
js
call
pop
push
call
daa
cwde
jecxz
pop
stos
jbe
and
xchg
lods
int3
xchg
xchg
hlt
lahf
mov
(bad)
mov
ins
mov
adc
pop
retf
imul
dec
cmp
inc
adc
mov
xor
shr
sbb
scas
scas
mov
push
mov
movs
push
xor
sbb
jae
adc
xchg
dec
jmp
sbb
mov
(bad)
je
and
mov
rcr
mov
mov
adc
pop
push
xchg
add
js
(bad)
(bad)
addr16
mov
out
mov
div
pop
mov
fistp
sbb
sbb
cmp
cmps
push
inc
retf
iret
sbb
sahf
ins
sbb
retf
mov
jo
mov
pop
fcomp
dec
mov
and
cmp
cld
or
adc
pop
cwde
popf
stos
test
jecxz
inc
retf
retf
je
sbb
scas
in
inc
pop
xchg
fcmovne
iret
call
or
cmps
sbb
push
popf
sub
xor
or
call
outs
lahf
cdq
std
jnp
or
pop
ds
pop
and
enter
xchg
std
out
je
not
std
lock
jle
xor
and
push
and
(bad)
fdivr
push
ins
dec
xor
adc
dec
xor
mov
jae
fdivr
pushf
ins
jae
mov
inc
hlt
jo
ror
inc
test
stos
dec
pop
xchg
xor
pop
test
imul
add
das
inc
mov
fcmovnu
mov
push
pop
repnz
xchg
test
repnz
stos
and
and
mov
inc
stc
pop
test
pop
je
xchg
xchg
test
cmc
mov
xor
or
pop
das
ret
out
or
pop
fidivr
clc
mov
loope
leave
enter
push
xlat
xchg
in
jbe
push
jecxz
repnz
in
scas
mov
jne
sahf
lahf
(bad)
mov
imul
jae
pop
cmp
fld
sbb
pop
dec
add
or
push
xor
rcr
stos
outs
jbe
mov
sub
mov
sub
jb
loop
xchg
addr16
mov
or
xor
push
cmp
jbe
in
jmp
int3
lea
and
(bad)
and
mov
in
push
imul
cdq
pop
mov
sbb
add
or
jnp
xchg
cmp
(bad)
jl
mov
mov
xor
loop
jbe
cmps
nop
jbe
inc
sub
xor
rol
pop
jg
adc
mov
ins
mov
and
cmp
aas
inc
shl
outs
sbb
cwde
sbb
shr
or
ds
cmp
jae
push
movs
jg
popf
stc
mov
js
cld
adc
push
call
inc
lods
movs
cmc
mov
mov
frstor
mov
sbb
(bad)
and
in
dec
bound
adc
xor
int3
in
jne
xchg
outs
imul
push
hlt
inc
(bad)
jp
xor
xor
test
mov
lds
fsub
mov
mov
(bad)
scas
push
sbb
adc
call
loope
jae
pop
cwde
pop
int3
or
sub
xchg
push
mov
pusha
jb
mov
push
mov
push
fmul
cmp
xchg
movs
outs
test
sbb
ss
hlt
and
and
cli
or
ja
sub
int3
adc
out
sub
mov
xor
push
xchg
jns
cmp
sbb
fwait
shl
jmp
jle
cwde
ss
mov
cmp
lods
jns
xor
popf
call
mov
scas
data16
mov
clc
fiadd
inc
xchg
retf
pop
mov
js
out
cwde
xor
loopne
and
mov
outs
adc
fnsave
cmp
sub
or
movs
es
sti
sbb
adc
inc
xchg
in
push
dec
in
and
and
je
mov
mov
lods
ins
es
pop
dec
nop
mov
retf
in
aas
jp
stos
dec
imul
push
mov
scas
mov
movs
and
data16
xlat
gs
hlt
int
out
imul
push
add
mov
xchg
mov
das
fwait
mov
(bad)
scas
fs
sbb
sahf
aam
imul
jmp
or
cmc
push
add
dec
shl
push
pop
int
sahf
fprem1
mov
mov
sub
push
shr
xor
mov
movs
add
pusha
xchg
push
jl
test
fadd
fs
xchg
fwait
jmp
in
hlt
test
jmp
dec
jmp
out
call
sbb
cmps
jp
fs
sar
lock
pop
push
dec
hlt
mov
mov
fild
xor
xor
(bad)
jns
sub
jle
jge
push
aad
pusha
into
and
pushf
jnp
repnz
stos
fdivr
adc
add
push
xor
fisubr
jne
rcl
jbe
(bad)
sub
adc
outs
test
inc
imul
and
pop
movs
outs
into
dec
ret
adc
lea
pop
push
popf
xor
bound
sub
jp
sub
in
retf
scas
mov
cmp
add
iret
enter
inc
fidiv
icebp
pusha
xor
pop
mov
cld
retf
ss
ins
loop
sbb
lds
and
in
ret
push
xor
fisubr
mov
test
mov
push
in
imul
adc
cmp
add
imul
mov
(bad)
movs
push
jnp
test
mov
sahf
fnstenv
in
iret
loop
addr16
mov
popa
xchg
and
sbb
dec
fld
stos
dec
(bad)
lahf
jp
repnz
sbb
xchg
push
lods
mov
push
push
pop
(bad)
pop
add
stos
leave
and
xchg
lea
fld
adc
adc
jg
fadd
xor
stos
movs
ins
push
lahf
cmp
leave
or
adc
fsub
adc
cli
icebp
sar
sbb
mov
leave
push
fcmovnbe
or
mov
mov
mov
xor
push
push
fldcw
ss
cmp
pop
test
sbb
mov
loop
popf
rol
push
arpl
hlt
(bad)
jge
add
nop
sbb
retf
jb
mov
cmp
cmp
mov
aas
push
or
xchg
sub
das
call
or
aas
add
dec
mov
ftst
cmp
jmp
jns
mov
scas
rol
dec
push
std
inc
sub
xchg
sbb
les
or
jb
adc
push
fwait
pop
das
(bad)
sbb
dec
ss
mov
inc
out
add
mov
push
xchg
add
mov
lds
xor
ret
frstor
push
dec
and
or
jno
and
call
xchg
sub
call
cmp
and
add
cmp
sub
push
xlat
pushf
ror
call
sbb
jb
pop
pop
neg
aaa
mov
enter
ret
push
call
push
add
out
cmp
ret
popa
sub
hlt
out
adc
adc
xlat
and
cs
sbb
xor
sbb
gs
jl
inc
pushf
inc
jno
imul
in
sti
(bad)
std
call
dec
(bad)
out
mov
lods
in
shr
xor
ss
mov
pop
loopne
loope
icebp
in
cmp
repnz
int
fucom
bound
and
cmps
dec
test
sar
xor
fst
test
mov
mov
mov
ds
xchg
xlat
xor
movs
push
sub
add
push
hlt
cli
xor
lods
or
push
aad
ss
dec
in
mov
into
popa
pop
cld
mov
cwde
push
in
(bad)
idiv
or
pop
arpl
out
fwait
adc
ror
std
ins
or
cwde
les
dec
call
addr16
or
xor
push
hlt
cmp
sbb
icebp
push
jmp
pop
pop
es
and
sbb
jge
inc
push
repz
lahf
or
std
loopne
sbb
dec
ret
pop
jmp
adc
dec
push
mov
(bad)
aad
push
xor
push
sbb
(bad)
xchg
call
movs
rcr
push
pop
ror
pop
jnp
or
mov
call
cli
sbb
mov
movs
inc
mov
aad
xchg
pop
xor
or
jg
(bad)
xor
in
fadd
pusha
fisttp
fnsave
ficomp
jnp
cmps
outs
pop
dec
fisttp
fist
mov
in
or
inc
sub
into
jmp
mov
mov
scas
lods
jae
cmp
cwde
push
mov
ret
fwait
out
mov
push
(bad)
mov
cmp
call
not
imul
fisubr
out
sbb
scas
sub
sbb
or
push
ret
mov
xchg
fdivp
cmps
mov
mov
iret
dec
cmp
pushf
addr16
push
add
out
jp
jl
dec
jo
push
sub
xor
xchg
dec
cs
jns
mov
push
sub
sub
imul
mov
jl
xchg
mov
mov
pop
mov
call
adc
fucomi
aam
and
cmp
psrlq
add
rcl
mov
xchg
dec
(bad)
inc
sub
sahf
stos
fld
cmps
xchg
aam
xor
loop
add
mov
mov
and
aad
movs
test
sbb
out
xlat
mov
scas
out
repnz
rcl
fldcw
xor
loope
push
movs
pushf
jb
and
popf
gs
mov
jns
das
adc
(bad)
aad
mov
inc
addr16
jb
lock
dec
leave
xchg
pushf
mov
sbb
mov
push
fisttp
rcr
inc
mov
fnstsw
movs
dec
sub
xor
add
hlt
sub
stos
mov
xchg
adc
test
inc
scas
ficomp
pop
cmps
into
movs
inc
cmp
clc
fwait
mov
div
xchg
int3
adc
lahf
sub
push
xchg
dec
push
test
mov
jmp
test
pop
jnp
mov
sub
es
cmps
push
imul
in
(bad)
out
aam
sbb
scas
popf
je
out
inc
jnp
mov
stos
fcomp
push
sahf
out
push
and
sub
inc
mov
jno
rol
pusha
imul
shl
mov
into
push
sub
call
gs
xchg
leave
push
mov
enter
hlt
iret
add
pop
sbb
ret
aas
push
mov
pop
jmp
jmp
(bad)
dec
xor
gs
cdq
aas
pop
(bad)
fst
sbb
stos
adc
imul
sti
scas
adc
dec
sbb
enter
imul
adc
mov
mov
mov
jp
dec
lahf
add
sub
xcrypt-ctr
cmps
fnstcw
call
xchg
cmps
inc
cmp
(bad)
cmps
(bad)
mov
hlt
mov
mov
push
inc
adc
xchg
jno
mov
test
mov
push
push
hlt
(bad)
and
es
cwde
push
push
hlt
or
push
jg
pop
dec
(bad)
nop
notrack
xchg
mov
or
cmc
mov
dec
cmp
push
mov
neg
es
imul
nop
mov
loopne
pop
or
xor
pusha
shld
push
jb
mov
xchg
fsubr
mov
add
jmp
mov
test
cmp
sar
in
pop
lahf
loope
popf
cmps
call
movs
inc
mov
adc
test
mov
xchg
imul
leave
lock
loope
cld
mov
pop
jo
nop
les
dec
icebp
lds
pop
jg
data16
cmp
and
xor
xchg
in
inc
jle
inc
or
data16
mov
cmp
test
daa
rcl
push
icebp
call
sti
(bad)
mov
es
pop
ret
movs
fnstenv
adc
stos
(bad)
out
or
sbb
and
jmp
out
aam
pop
jg
cwde
aaa
sbb
out
cli
(bad)
dec
jecxz
outs
cmp
mov
sbb
cmps
push
mov
iret
lock
cdq
xchg
dec
inc
test
sub
or
cmp
pop
pop
sub
mov
loopne
cld
inc
cdq
aas
jle
lock
aad
push
cmp
ss
push
push
cwde
inc
mov
les
push
aas
jle
dec
(bad)
ficomp
das
pop
lahf
xor
mov
add
pushf
sub
shl
lods
pusha
lods
mov
daa
adc
fcom
sahf
pop
mov
aas
(bad)
push
add
sub
jne
sub
in
mov
rcl
aad
movs
sub
repnz
push
dec
into
loope
mov
mov
push
repnz
lahf
shl
mov
jmp
cld
and
outs
sbb
fild
jno
dec
call
sbb
add
lock
cli
inc
rcl
fmul
xor
mov
test
xor
inc
test
push
pop
sbb
sub
push
idiv
bound
xchg
out
lods
adc
js
and
(bad)
and
mov
outs
(bad)
rol
enter
jecxz
sbb
xlat
adc
pop
and
fs
(bad)
retf
mov
pop
(bad)
mov
xchg
(bad)
mov
inc
push
and
js
call
and
jno
movs
sub
fucomi
adc
(bad)
call
movs
mov
fucomip
mov
sahf
or
jmp
daa
xor
fisubr
mov
jp
cdq
inc
test
es
xor
ds
push
in
fidivr
sbb
push
lahf
sti
(bad)
nop
jge
daa
dec
dec
sbb
les
xor
jnp
xchg
(bad)
dec
into
push
psllq
sar
dec
fwait
sub
jmp
rcr
jmp
pop
mov
in
jmp
pop
and
pop
sub
pop
outs
pop
jge
and
mov
jg
sub
ret
cmp
adc
bound
aad
nop
retf
pop
int
movs
sbb
ins
adc
test
cmc
out
retf
dec
mov
inc
mov
or
pop
fmulp
lods
inc
sbb
sub
aad
dec
leave
mov
test
fld
outs
fsub
jmp
xor
xchg
lea
add
adc
mov
and
jnp
cmp
xor
cmps
out
dec
pusha
pop
sahf
pop
out
mov
int3
aam
xchg
movs
enter
shl
cmp
mov
jo
mov
test
inc
pop
mov
enter
inc
ds
xchg
icebp
cmp
and
imul
push
jecxz
sbb
nop
es
inc
(bad)
and
imul
mov
mov
aaa
dec
mov
sbb
sub
mov
not
sbb
gs
out
push
fistp
mov
test
mov
dec
mov
gs
int
xchg
cdq
jge
imul
retf
push
sub
sub
cmp
dec
jne
iret
cmc
call
sub
retf
fisub
xchg
push
mov
mov
jl
lds
push
and
push
sbb
arpl
cmps
sbb
jns
sub
ins
lahf
ds
pop
and
xchg
mov
paddsw
pop
ds
in
sub
mov
mov
xor
dec
iret
movs
mov
(bad)
push
pop
in
jmp
ja
repz
cmp
mov
js
jge
rcl
ds
sbb
movs
jl
inc
in
mov
dec
lock
jae
pop
jb
in
mov
(bad)
stos
xor
data16
sub
lock
loope
inc
aas
ins
push
inc
lods
adc
(bad)
pop
adc
adc
mov
(bad)
imul
pop
push
pop
out
mov
xchg
push
scas
in
movs
sbb
xchg
outs
aas
inc
xchg
add
out
jae
and
mov
fcomip
sub
gs
scas
push
and
xchg
les
ins
mov
ds
adc
pop
or
dec
int3
xchg
repnz
jb
pushf
movs
xchg
sbb
cmp
sub
movs
ds
push
ins
xrelease
ss
nop
aaa
(bad)
dec
pop
mov
and
dec
fidivr
aam
fistp
imul
imul
push
lods
xchg
lods
cmps
inc
mov
jg
pop
sti
pop
dec
pop
(bad)
addr16
xchg
jns
push
test
mul
dec
inc
rol
es
(bad)
movs
inc
mov
js
call
mov
mov
pushf
popf
imul
test
push
mov
nop
jl
stos
sub
imul
sub
scas
aas
shr
jp
jmp
cmp
scas
lahf
mov
xchg
cmp
pop
pop
xor
dec
outs
movs
adc
lods
xor
jbe
pop
xchg
out
(bad)
fst
mov
mov
push
jae
iret
push
dec
mov
ja
mov
xchg
push
jecxz
push
stc
or
das
mov
gs
push
(bad)
int
dec
movs
push
dec
push
cs
mov
bound
and
sbb
cmp
inc
sub
arpl
popf
pushf
popa
dec
dec
das
jb
jo
adc
call
call
das
lahf
test
mov
div
or
xchg
and
stos
inc
je
leave
xor
bound
mov
lods
mov
ss
adc
lods
sar
dec
push
sub
cld
cwde
adc
leave
retf
xchg
imul
aam
(bad)
mov
lds
leave
adc
or
mov
mov
cmps
push
popa
adc
sbb
and
mov
cwde
scas
and
mov
movs
dec
or
loop
xlat
cmp
mov
retf
xchg
mov
xchg
scas
data16
jbe
dec
retf
push
jp
jmp
push
dec
shl
popa
stc
cmps
push
and
cmc
pusha
push
imul
loop
sar
nop
sahf
xchg
test
or
sbb
(bad)
(bad)
xor
mov
imul
aaa
sbb
fdiv
jg
punpckldq
pop
(bad)
fcmove
cli
in
repnz
dec
hlt
enter
jg
arpl
and
add
dec
cli
or
cmc
xchg
and
xchg
retf
in
mov
jno
ret
js
test
loop
jmp
cmp
ret
js
outs
mov
arpl
push
cmps
sbb
fst
in
call
jns
dec
xchg
inc
cmps
je
jle
dec
dec
pop
cld
test
test
adc
and
es
icebp
push
xor
daa
pop
push
jae
scas
(bad)
and
(bad)
aaa
jmp
loope
movs
scas
xor
aas
fld
xor
sub
sub
adc
ret
ficomp
mov
out
or
adc
cmp
xor
and
jno
sub
pushf
js
mov
add
mov
pop
stos
sub
mov
xor
bound
mov
xchg
(bad)
stos
pop
test
popa
mov
aad
aad
ja
fwait
ret
mov
nop
dec
and
add
add
sbb
xchg
sbb
inc
in
jno
jecxz
jns
pop
arpl
fld
sahf
pop
lods
mov
mov
jmp
pop
xchg
xchg
lds
mov
dec
dec
dec
in
mov
mov
cmc
outs
mov
sub
rol
mov
inc
cmp
sub
cmp
inc
test
xor
mov
outs
adc
int
push
sbb
mov
mov
stos
jnp
hlt
sub
push
add
push
js
cmp
push
jg
ins
add
fs
cmps
jo
mov
outs
xchg
dec
dec
out
rol
shl
mov
dec
popa
cwde
aam
push
addr16
xchg
sbb
call
cmp
jl
xor
inc
mov
adc
xchg
mov
aas
jp
frstor
jnp
push
push
add
mov
aaa
add
imul
ret
leave
loopne
sbb
xchg
xchg
jecxz
mov
pop
add
cmc
movs
dec
pop
adc
sub
jmp
pop
pop
rcr
cmp
push
and
add
xor
or
out
sub
inc
fcmovb
std
pop
adc
cmc
movs
push
jns
push
add
cwde
and
popa
push
adc
and
push
(bad)
aad
dec
inc
hlt
sbb
mov
inc
mov
sahf
adc
out
mov
mov
sub
aaa
mov
pop
mov
xor
inc
push
ja
stc
fiadd
cs
dec
call
jno
stos
aaa
and
dec
mov
bound
mov
push
dec
lods
or
cmps
dec
ja
xor
in
nop
push
xchg
xchg
in
mov
add
sbb
inc
mov
je
es
outs
popf
dec
int
xor
xlat
and
inc
cwde
sub
fs
bswap
call
push
test
fcomi
xchg
iret
pop
test
leave
dec
jns
out
add
jne
lds
and
sbb
xor
jb
sbb
(bad)
(bad)
adc
pushf
mov
in
jb
rcl
sbb
and
dec
das
iret
inc
(bad)
xchg
scas
mov
aam
xchg
inc
inc
mov
mov
push
pop
push
mov
repz
int
mov
mov
mov
xchg
jbe
push
inc
sbb
out
nop
jnp
xchg
push
push
dec
imul
mov
mov
movs
fwait
adc
pop
test
repz
sub
(bad)
and
dec
mov
xchg
out
dec
adc
sti
shr
jno
xchg
in
ret
ds
cmp
mov
jge
les
inc
push
add
jmp
sub
pop
retf
push
xchg
dec
mov
shr
ins
repz
out
pop
in
cwde
jecxz
sub
hlt
push
xor
add
xchg
xchg
movaps
mov
test
and
js
jns
cmp
(bad)
stc
fucomp
cmp
mov
scas
xchg
sahf
mov
cs
or
call
rol
int3
cld
xor
xor
into
test
cmps
inc
push
mov
inc
out
hlt
imul
mul
pop
cmp
or
loop
aaa
out
cmp
push
cmp
(bad)
sar
scas
imul
or
cld
xor
mov
in
dec
fs
cmp
dec
mov
inc
gs
movs
cmp
shl
mov
stos
mov
aam
and
xchg
add
jle
ins
inc
push
mov
stos
test
push
inc
cmps
loopne
cmps
adc
adc
dec
inc
jb
bound
fucomip
xor
pop
push
cs
mov
stos
pop
mov
or
pop
mov
sub
mov
mov
fsubr
mov
les
and
push
mov
jp
je
and
pop
jg
dec
iret
sar
add
icebp
pop
and
retf
jmp
mov
push
mov
ret
sub
jge
ret
shl
jne
ret
adc
lods
loopne
stos
cmps
enter
pusha
xor
outs
fstp
sub
inc
cli
lea
lds
sub
aad
mov
mov
sahf
inc
(bad)
ja
ja
dec
jne
out
shl
push
out
imul
aam
push
aam
fadd
outs
cmp
jnp
(bad)
(bad)
jmp
dec
jae
sub
cmp
icebp
lea
ficom
push
lock
jns
cdq
jmp
add
loopne
(bad)
cmp
es
popf
xlat
xor
xor
xchg
cwde
and
mov
int3
nop
sub
leave
dec
(bad)
jo
lock
data16
jl
sub
test
(bad)
cli
xchg
and
faddp
sub
outs
or
adc
or
movs
mov
sbb
sub
dec
xor
mov
repz
jp
fwait
(bad)
push
pop
pop
jmp
movs
scas
mov
or
lahf
lea
cmp
cmp
xchg
dec
mov
arpl
rcl
or
out
jne
xchg
mov
sbb
xor
pop
mov
inc
fisub
mov
call
mov
gs
and
inc
(bad)
cld
adc
xchg
fisub
(bad)
rcl
frstor
scas
out
pop
and
adc
(bad)
push
into
bound
retf
test
jle
popa
pop
in
mov
jae
xchg
add
jl
retf
fwait
push
cwde
movs
mov
inc
inc
mov
cmp
cmc
inc
fs
mov
fcomp
mov
sub
push
mov
popf
add
push
ds
mov
jmp
dec
loop
test
mov
test
xor
sub
jbe
gs
fs
mov
lea
es
gs
mov
adc
loopne
cli
jge
xor
imul
cmpps
test
data16
push
(bad)
jne
push
xor
ins
les
(bad)
popf
inc
pop
push
movs
pop
push
addr16
xchg
sbb
ret
iret
mov
fadd
in
pop
mov
in
pop
sub
outs
ret
cmp
xchg
and
bound
je
xor
(bad)
xchg
rcr
xor
and
jae
and
rol
enter
xor
jne
or
xchg
das
test
mov
idiv
mov
mov
fld
mov
adc
lea
xor
cwde
xchg
(bad)
shl
in
(bad)
cmp
jb
inc
mov
sbb
fisttp
xlat
dec
aas
xchg
pminub
mov
imul
mov
test
pop
fsubr
imul
mov
sbb
cmp
or
idiv
fst
shl
clc
out
inc
or
fs
and
les
bound
and
push
pop
pop
jg
add
push
and
or
mov
(bad)
mov
dec
ins
xchg
or
jb
xor
and
dec
cmps
clc
aam
sub
cli
xor
jmp
sbb
mov
push
in
cmp
and
add
imul
cli
stos
push
xchg
(bad)
retf
mov
int
cdq
cmp
call
and
repnz
cmp
test
dec
cs
cwde
push
inc
sahf
test
jb
shl
pop
movs
xchg
outs
enter
mov
ret
(bad)
shl
sbb
scas
movs
sub
inc
fnsave
jecxz
pusha
xchg
test
cs
pop
jnp
out
inc
jge
jnp
inc
inc
xchg
xchg
jns
add
mov
pop
dec
enter
lds
icebp
fdiv
popa
leave
sub
mov
pop
dec
fstp
outs
or
push
pushf
cmp
jge
mov
(bad)
xchg
out
xor
inc
std
push
mov
pop
scas
adc
mov
cmc
ror
sub
jbe
mov
stc
xlat
add
and
leave
imul
loop
jo
push
pop
stos
push
sub
(bad)
fs
inc
dec
and
ret
sbb
int
movs
adc
loopne
(bad)
out
out
imul
xchg
jmp
les
pop
call
dec
jl
or
out
out
inc
lds
add
gs
add
arpl
push
pop
xchg
dec
cmps
sbb
cmp
sbb
dec
mov
mov
sub
jb
iret
leave
bound
mov
test
stos
arpl
inc
sub
adc
clc
mov
popf
adc
sahf
fisub
jl
lods
icebp
push
mov
mov
dec
dec
jl
and
mov
dec
iret
dec
fwait
mov
pandn
mov
popf
cdq
scas
inc
pop
inc
or
jae
mov
je
shl
test
pop
inc
adc
sbb
pop
pop
inc
sahf
and
test
xor
icebp
and
adc
ja
adc
loop
fidiv
mov
adc
push
inc
adc
sbb
call
and
jp
push
or
xor
dec
inc
inc
sub
shl
gs
or
adc
push
pop
rol
cmps
outs
xor
mov
mov
aam
nop
inc
addr16
push
imul
in
jo
mov
sbb
scas
stos
jnp
repnz
lahf
sub
and
scas
das
xchg
(bad)
mov
mov
pop
stos
pushf
retf
or
cmc
cli
fimul
in
pop
je
pop
mov
hlt
imul
xor
and
push
mov
dec
movs
mov
mov
cmp
and
mov
mov
dec
int
aad
mov
and
js
or
stos
aad
nop
dec
xchg
lahf
push
shl
jge
and
push
lods
xor
sbb
nop
xchg
push
cmps
cli
(bad)
cmc
push
jmp
lods
(bad)
fadd
or
(bad)
mov
stc
inc
lock
sbb
sub
lods
ret
call
add
ja
movs
dec
out
mov
in
scas
out
loop
hlt
add
push
inc
repz
in
sbb
retf
popf
push
outs
push
jge
in
fnstcw
es
sbb
int
sahf
xlat
jl
and
sub
data16
push
and
test
push
or
and
pop
add
fcmovnu
add
lods
mov
jle
jno
in
rcr
cli
js
add
in
xchg
push
jae
icebp
je
jecxz
sub
inc
dec
add
mov
loope
int3
add
out
mov
adc
mov
out
adc
js
test
idiv
cmp
jae
mov
jns
push
cld
mov
loopne
ror
popf
adc
adc
pop
adc
pop
cmp
fild
das
dec
fidiv
add
pop
push
sub
(bad)
xlat
(bad)
in
pop
mov
cmp
popa
(bad)
mov
in
jmp
pop
xor
adc
cmp
push
lahf
xchg
xchg
cmp
push
xchg
and
mov
mov
mov
in
jmp
jbe
sbb
les
out
push
out
xchg
mov
push
shl
mov
pushf
mov
inc
inc
aad
jno
cmps
push
xchg
es
js
mov
inc
sbb
dec
push
cwde
push
sbb
mov
(bad)
mov
out
jbe
aas
ret
pop
ja
(bad)
pop
inc
inc
adc
jo
ins
out
jmp
fdiv
mov
jg
loop
in
or
call
lea
shr
shl
sbb
dec
cmps
clc
icebp
and
xor
jne
sub
lahf
cmps
cmp
adc
mov
add
cmp
push
idiv
pusha
xchg
or
out
and
leave
pop
push
or
cmp
xchg
and
fdivr
mov
out
test
add
mov
xchg
xchg
mov
add
lods
fisub
push
inc
jae
leave
outs
(bad)
fucomi
cmps
fbstp
xchg
loop
pop
leave
js
loope
sbb
mov
outs
out
inc
leave
movs
pusha
rcl
jbe
dec
stos
stos
ror
clc
cmp
mov
or
inc
mov
ret
jns
jl
adc
stc
(bad)
mov
xor
add
call
mov
inc
or
retf
sub
push
aaa
ret
adc
sub
push
faddp
and
jmp
jne
mov
add
jp
pop
xor
cmps
or
rol
and
xchg
or
sbb
leave
xchg
xchg
dec
jnp
and
push
pop
jno
gs
or
stos
mov
push
or
addr16
shr
sbb
mov
fstp
js
jmp
out
xor
ror
faddp
and
add
(bad)
outs
cmps
jbe
fiadd
sar
sub
xlat
mov
cmp
stos
into
sub
jo
xor
pop
cmp
mov
(bad)
cmp
xchg
scas
bound
mov
jg
(bad)
nop
retf
jbe
imul
repz
sahf
pop
cli
mov
jnp
add
popa
mov
xchg
pop
sub
jno
call
adc
loop
mov
and
es
call
(bad)
lahf
and
les
scas
inc
fnstsw
pop
jb
xchg
ins
xchg
outs
fstp
jp
mov
clc
pop
mov
ins
in
ret
inc
outs
inc
push
outs
(bad)
aas
(bad)
mov
and
jnp
icebp
loope
fstp
sub
test
add
into
push
es
loop
xlat
fisttp
fimul
ja
cmp
out
stc
add
sbb
push
into
mov
test
inc
mov
leave
(bad)
dec
adc
mov
call
cmc
jae
jmp
cs
movs
bound
mov
xlat
fbstp
(bad)
in
mov
je
rcl
mov
test
retf
mov
sub
aas
retf
inc
mov
push
inc
cmc
pushf
ja
mov
sub
or
popa
sahf
aaa
stos
mov
loopne
es
xor
or
(bad)
ja
inc
ja
push
test
inc
and
popf
lock
nop
cmp
pop
(bad)
cmp
add
cmp
xchg
adc
movs
call
and
xchg
cwde
cwde
or
out
pop
mov
and
stos
mov
movs
jmp
mov
data16
bound
sbb
push
add
dec
int3
inc
cmc
push
nop
gs
test
push
mov
sbb
dec
mov
push
ins
aaa
or
sub
sar
pusha
loop
push
push
inc
pop
dec
test
(bad)
out
test
mov
(bad)
jno
test
call
mov
ja
mov
stos
or
xor
(bad)
into
inc
push
and
iret
gs
fild
(bad)
cmp
fcomp
inc
mov
leave
loop
mov
sub
in
adc
add
xchg
into
dec
icebp
cmps
or
test
addr16
dec
outs
mov
jge
xor
loop
add
mov
pop
fs
test
bnd
into
dec
sub
jns
dec
xchg
or
int3
(bad)
sub
jle
and
push
mov
hlt
es
sub
jne
lods
mov
fild
mov
inc
(bad)
cmc
push
daa
test
jmp
je
xor
mov
sbb
dec
pop
push
sub
aam
mov
inc
jnp
ret
mov
or
adc
cmp
or
lahf
mov
call
pop
cmc
add
adc
fs
inc
sbb
shl
sub
xor
cmp
scas
test
inc
mov
movs
dec
mov
pop
push
sbb
cs
push
(bad)
call
xchg
mov
mov
scas
mov
xor
xor
or
repz
mov
sbb
adc
cmp
lea
js
push
sahf
out
stos
test
pushf
push
aam
fcmove
sti
push
cmps
jp
pop
stos
lds
mov
div
in
mov
and
pop
mov
fs
xor
(bad)
aam
aas
ret
pop
push
int3
clc
xchg
or
inc
push
push
cmp
cmps
stc
add
sub
icebp
sbb
cmp
mov
in
stos
inc
jmp
sti
sbb
fiadd
and
adc
jp
sbb
shl
push
in
lock
dec
add
or
retf
dec
outs
dec
div
mov
mov
aad
mov
clc
popa
test
cmc
sbb
(bad)
sbb
push
xlat
out
mov
sar
or
mov
jo
arpl
xor
mov
in
pop
or
xchg
jmp
pop
jb
xor
cmp
sbb
call
mov
push
and
cmp
cld
movs
mov
jne
adc
mov
or
mov
(bad)
xor
lahf
ins
sti
ficomp
das
(bad)
jno
and
mov
in
jge
fdivr
mov
or
je
sti
sub
add
push
in
adc
cmovl
jmp
mov
in
cmp
aas
es
(bad)
jne
ret
outs
xchg
stc
(bad)
xchg
aam
aam
jno
out
sbb
aad
xchg
xor
push
sbb
leave
stos
cmps
and
test
retf
bound
sbb
fisub
xor
pop
jecxz
ficomp
rcl
aad
stos
daa
scas
mov
std
dec
adc
jmp
ds
lds
mov
adc
sbb
add
aas
dec
ss
and
mov
mov
mov
sti
mov
xchg
cmps
add
adc
cmps
lgs
adc
push
add
xchg
int
shl
adc
jmp
movs
jg
cmp
retf
jne
push
pop
push
mov
push
ins
repnz
icebp
leave
add
and
or
stos
stc
xchg
dec
adc
imul
and
jbe
out
or
or
push
shl
xor
add
and
not
mov
xchg
ja
repnz
repnz
lahf
out
test
or
out
jo
scas
or
ret
xor
and
mov
loop
idiv
std
adc
fwait
(bad)
ss
in
pop
scas
push
push
icebp
mov
mov
dec
or
(bad)
push
cmps
std
fadd
sbb
into
out
jns
arpl
and
loop
push
and
or
dec
push
jmp
mov
shl
sub
int3
inc
jno
dec
popf
fldenv
mov
pop
inc
shr
movs
or
dec
inc
pop
sbb
pop
stc
cmps
cmp
sub
shr
dec
dec
pop
sbb
in
rol
sbb
scas
mov
mov
inc
shl
push
adc
stos
dec
mov
mov
adc
xchg
js
sub
push
cmp
(bad)
stc
push
adc
cmps
add
xchg
add
lahf
jmp
dec
xchg
loop
sub
mov
mov
add
leave
aam
popf
(bad)
cmc
pushf
lods
mov
xchg
xchg
mov
mov
in
gs
test
shl
jb
gs
mov
dec
xchg
data16
cs
scas
(bad)
fbstp
jmp
fild
or
jecxz
adc
cmp
mov
add
xchg
cmp
xlat
mov
sbb
stos
lds
dec
push
xlat
shl
adc
mov
mov
(bad)
xchg
mov
inc
in
(bad)
xor
imul
xor
xor
in
(bad)
push
mov
xchg
or
loopne
xchg
mov
daa
xchg
sub
pop
xor
(bad)
sahf
sahf
leave
les
push
(bad)
stc
nop
add
sbb
iret
mov
movs
das
or
jmp
loopne
lods
popf
inc
mov
pop
jge
jmp
push
addr16
ret
pop
mov
aam
xlat
pop
aas
in
pop
cmp
push
jae
test
pushf
data16
push
xchg
jmp
mov
mov
(bad)
adc
test
lds
das
mov
push
je
or
pushf
(bad)
rol
in
ja
cwde
jmp
nop
cmp
loopne
fidiv
bound
xchg
mov
pop
nop
jbe
shl
cmp
mov
loope
sbb
dec
addr16
imul
pop
mov
(bad)
mov
mov
jmp
in
loope
inc
mov
jg
neg
adc
cmp
and
xor
daa
jae
not
cdq
jo
aam
jns
das
mov
jo
stos
test
div
inc
inc
addr16
mov
mov
adc
fadd
jecxz
add
mov
add
call
gs
repz
sbb
and
cwde
es
sub
adc
sub
lods
push
cdq
call
xchg
cmp
fnsave
sub
aaa
(bad)
jmp
sub
fs
sbb
sbb
xchg
leave
nop
test
fs
lds
xchg
test
mov
jns
jmp
das
enter
les
xor
fst
cmp
or
jle
das
cdq
pusha
into
jnp
aaa
outs
sbb
sub
popa
stos
imul
cld
sbb
retf
ret
int
aam
lea
push
mov
mov
add
repnz
xchg
gs
rol
jmp
jnp
sub
imul
mov
jle
mov
shl
mov
xchg
or
bnd
or
movs
pushf
scas
nop
in
lods
push
push
add
adc
les
(bad)
adc
inc
xlat
adc
in
arpl
xor
add
sbb
arpl
test
test
loopne
dec
cwde
addr16
iret
jno
inc
jmp
in
xor
push
jmp
je
enter
rcl
retf
mov
shl
in
movs
cmp
mov
pop
fs
enter
test
fdiv
daa
jmp
lods
int
pop
hlt
popf
int
loop
mov
jecxz
dec
mov
cdq
das
mov
call
and
pop
sbb
test
sbb
cmps
test
imul
xchg
cli
imul
xor
aas
bound
sub
jle
inc
(bad)
push
in
call
bound
xor
cdq
pop
test
inc
cdq
mov
or
dec
cwde
popf
aas
fiadd
int3
hlt
inc
arpl
std
sar
xor
jecxz
jns
and
out
enter
inc
cwde
shl
shr
pop
ror
pop
lods
mov
or
ins
addr16
and
jmp
and
sub
mov
imul
dec
pusha
sbb
xchg
mov
sub
mov
in
sbb
pushf
pop
inc
cs
dec
adc
pusha
out
arpl
xchg
idiv
lods
sub
xor
in
js
jmp
lahf
push
xchg
movs
sbb
mov
mov
adc
data16
aad
ret
add
outs
inc
and
push
mov
sahf
and
pusha
lods
xor
pop
xchg
or
adc
jmp
push
jbe
mov
shl
les
lahf
push
bound
in
cmp
enter
pop
jno
inc
dec
loop
cmp
nop
mov
mov
cmp
stc
mov
pop
sbb
pop
dec
xor
mov
adc
neg
out
addr16
sbb
jne
mov
aam
mov
push
xchg
jo
test
dec
fldenvw
sbb
xchg
inc
scas
out
jl
mov
out
dec
dec
and
add
inc
mov
ror
push
sub
data16
out
adc
imul
xor
xchg
rcr
or
xor
mov
sub
jle
push
push
cmp
lods
retf
jl
pop
mov
repz
push
or
in
aaa
movs
pop
cmp
xchg
jbe
out
xchg
add
dec
stos
fadd
sub
cmps
xor
push
pop
cmc
push
ficom
repz
nop
cmps
hlt
adc
sbb
pop
sub
or
mov
jne
mov
(bad)
gs
ja
push
arpl
push
ds
pushf
in
data16
dec
arpl
mov
sahf
scas
push
xchg
or
in
fdiv
sub
jnp
mov
daa
sahf
jns
in
in
sub
mov
aad
mov
fidiv
(bad)
pop
mov
mov
imul
jno
push
jmp
ins
push
out
and
ret
lods
scas
mov
mov
test
mov
or
retf
and
lock
dec
nop
or
ret
(bad)
or
loop
xor
cli
and
pop
xor
cmp
sbb
jge
xlat
xchg
pop
mov
sub
in
call
add
imul
dec
mov
gs
pop
mov
adc
fbstp
test
push
out
adc
cmp
mov
xchg
pusha
pop
in
sti
jg
(bad)
ror
int
rcr
mov
adc
es
adc
jbe
sub
js
shl
cmps
popf
fdivr
rol
stos
dec
stos
pop
aam
pop
js
xor
sbb
jno
repnz
or
out
jl
mov
xchg
retfw
mov
int3
xchg
xor
inc
add
shl
test
das
mov
sbb
jl
bound
adc
mov
xor
push
pop
add
push
push
xor
out
fmul
popa
inc
xchg
or
xchg
dec
sub
dec
mov
aaa
(bad)
jg
ret
mov
pop
fsubr
scas
inc
and
not
inc
mov
sbb
push
mov
jecxz
lahf
repnz
mov
int3
neg
ins
fidiv
neg
lock
xor
push
pop
mov
mov
dec
cmp
into
outs
jbe
out
jo
push
xlat
add
inc
repnz
dec
sbb
das
xor
jp
test
popa
(bad)
pop
mov
jecxz
adc
xor
movs
pop
inc
sub
pop
xor
js
mul
push
lods
dec
daa
adc
int
sti
gs
js
leave
and
pushf
retf
ret
js
data16
fs
int3
push
enter
repz
test
jmp
and
out
dec
test
pushf
or
jnp
pop
rcr
push
jle
sbb
add
dec
imul
sub
mov
or
ja
iret
xchg
(bad)
fst
hlt
xchg
add
push
gs
or
mov
or
pop
add
stos
sub
pop
cmc
test
mov
jmp
or
stos
dec
jae
mov
movs
cwde
cli
pop
lods
ds
shl
inc
les
fild
dec
inc
neg
pop
jge
ss
xor
inc
pop
cld
cld
aas
cmps
addr16
mov
push
mov
pop
mov
adc
xor
mov
ds
clc
xchg
pop
aam
pop
inc
mov
and
push
cmp
sub
jns
scas
mov
and
sub
inc
mov
mov
jg
dec
add
push
cdq
movs
aad
cdq
std
(bad)
shl
and
dec
sub
pusha
jmp
ss
call
cmp
xchg
inc
icebp
sub
addr16
pop
xchg
pop
xor
mov
int
shl
mov
push
scas
out
sti
sbb
iret
ds
mov
aaa
inc
jle
gs
scas
out
and
adc
push
ins
(bad)
in
mov
ret
dec
lods
fist
add
lods
mov
and
cmp
mov
rcr
cwde
sub
cmp
dec
push
jo
lock
out
add
imul
mov
(bad)
or
ror
mov
retf
push
add
or
stos
pushf
(bad)
mov
mov
sub
mov
in
or
sar
prefetcht1
xor
test
sbb
mov
cmc
dec
push
xchg
sub
aam
jle
or
push
push
cmp
and
call
xor
pusha
cmp
jg
(bad)
mov
fdivr
xchg
jbe
sbb
fwait
out
and
pop
jo
cmp
jnp
sbb
jl
ins
iret
gs
jl
fstp
or
shl
cmp
xchg
push
(bad)
xchg
inc
xchg
out
adc
push
jmp
stos
lods
push
fwait
xchg
inc
add
or
aam
or
cld
add
das
fisub
mov
add
or
or
add
stos
ja
fld
shl
movs
scas
jnp
lahf
rcr
and
retf
hlt
pop
sub
jne
inc
mov
cmp
fs
pop
std
cmp
or
out
dec
sahf
inc
hlt
pop
imul
inc
cdq
jbe
dec
shr
push
loopne
lods
or
dec
outs
sbb
mov
push
jmp
jae
jbe
mov
add
stos
pop
mov
inc
movs
add
sub
aas
ror
adc
stc
enter
loop
inc
adc
in
cmps
not
retf
es
movs
and
clc
fild
not
and
add
imul
push
or
outs
dec
inc
sub
dec
mov
std
mov
jl
adc
push
movs
dec
scas
jbe
int3
xor
popf
dec
data16
sub
sub
pushf
push
loopne
inc
push
xor
xlat
mov
scas
popa
iret
bound
cmp
push
es
and
pop
xchg
(bad)
mov
cmp
test
imul
sbb
pop
rcl
add
fld
xchg
rol
xchg
xadd
or
push
pop
int3
mov
js
test
dec
jno
mov
popa
lock
inc
aad
mov
je
jns
jbe
xor
push
bound
xlat
cmc
shl
test
xchg
mov
stos
ret
popa
inc
mov
xor
pop
mov
mov
pop
loop
leave
mov
fnstsw
in
scas
or
lds
mov
push
fdiv
sbb
fistp
push
or
(bad)
(bad)
popa
into
call
in
in
sbb
fist
and
popa
xchg
mov
pop
neg
sbb
pop
mov
adc
inc
popa
div
icebp
jae
shl
jae
icebp
add
(bad)
aad
mov
sbb
mov
icebp
jmp
imul
pop
sti
xchg
mov
mov
and
(bad)
sar
in
fisttp
adc
dec
retf
and
cmps
fiadd
cmc
(bad)
cmps
xchg
bswap
xor
xor
aad
or
pop
js
mov
enter
inc
call
fcom
push
iret
fistp
daa
out
add
mov
pop
push
inc
mov
pop
(bad)
out
mov
out
mov
aam
je
and
out
daa
push
aad
xchg
xchg
inc
imul
sub
faddp
test
sbb
fstp
jle
stos
fidiv
pop
xchg
fs
sar
or
lods
sbb
sbb
sbb
iret
ret
cmp
movs
ins
mov
loopne
lds
(bad)
mov
jo
xchg
stos
lods
push
mov
push
and
gs
mov
or
pusha
sbb
ins
fwait
je
mov
push
jmp
es
pop
add
xchg
dec
add
ins
fidiv
ret
dec
sbb
imul
icebp
push
loop
or
ret
ret
dec
neg
pop
adc
cmp
mov
adc
test
lds
push
mov
adc
inc
adc
and
clc
pop
sub
leave
jg
(bad)
fwait
and
mov
dec
jns
adc
add
add
sti
push
mov
not
daa
lock
adc
jecxz
dec
adc
push
push
icebp
loop
gs
pop
mov
or
ins
loopne
push
leave
push
out
adc
xor
inc
inc
not
addr16
dec
fcomp
ret
inc
imul
clc
push
add
lods
inc
stos
shl
jb
mov
fwait
mov
stos
sbb
loope
es
cmc
mov
push
or
int3
cwde
pop
jnp
xor
test
mov
inc
jne
adc
cmp
daa
sbb
add
mov
push
ins
test
pop
movs
and
sbb
inc
addr16
or
cmps
add
push
sbb
hlt
add
hlt
xor
jnp
or
or
adc
pop
dec
call
mov
fild
dec
hlt
out
add
mov
adc
mov
sahf
mov
xor
popa
hlt
and
cmps
test
ret
jmp
add
push
lods
pop
xchg
imul
lea
idiv
mov
js
cmps
ins
dec
jmp
sbb
repnz
adc
xor
or
xchg
mov
sub
mov
cmp
int
dec
(bad)
fstp
aas
pop
jne
enter
mov
mov
enter
pop
nop
inc
pop
adc
fldcw
lods
jnp
shr
or
push
adc
aas
jae
push
mov
xchg
mov
mov
fmul
fisub
fiadd
inc
push
shl
jmp
call
jl
sub
xchg
imul
(bad)
jg
xchg
jae
dec
push
test
ins
pop
addr16
jbe
inc
mov
cld
push
pusha
dec
sbb
stos
mov
(bad)
sub
push
inc
int
xchg
aaa
xor
add
mov
loop
aaa
inc
add
and
stos
addr16
fist
xchg
mov
push
sub
je
movs
pop
cdq
xchg
in
daa
cmp
mov
gs
adc
xor
cmps
neg
call
mov
mov
lea
mov
pusha
jb
sub
scas
pop
stos
inc
sub
push
cmps
xlat
jne
inc
xchg
ja
dec
adc
sbb
inc
cmp
mov
pop
into
push
pushf
(bad)
sti
xor
inc
daa
fmulp
aas
xchg
test
and
or
call
sahf
push
mov
repnz
adc
int
sub
or
ja
int3
mov
das
(bad)
(bad)
in
sub
inc
xor
mov
test
ror
add
add
int
adc
daa
mov
mov
push
out
loope
xlat
scas
cmp
inc
fnstsw
adc
push
pop
and
bound
arpl
mov
inc
mov
retf
inc
test
ret
imul
mov
cmp
in
lods
in
outs
or
loopne
xchg
dec
add
xor
mov
or
inc
aam
cld
lock
scas
xor
hlt
push
jb
mov
shr
xlat
mov
dec
aaa
mov
mov
xor
jae
(bad)
inc
cmp
adc
inc
pop
scas
iret
mov
ins
into
or
cmps
mov
fdiv
add
xor
jo
mov
dec
dec
out
dec
mov
out
mov
outs
pop
mov
div
iret
fcomp
cmps
fsub
ja
call
ret
fsub
dec
enter
mov
outs
lea
jns
push
stos
arpl
aad
cld
pop
xchg
adc
pop
dec
cli
loope
add
popa
stos
daa
imul
cmp
adc
ins
cld
cdq
dec
out
outs
pop
scas
repz
and
fs
add
adc
std
jl
mov
cmc
fsub
jg
xor
(bad)
(bad)
sbb
jl
xor
int
jge
dec
dec
or
in
sbb
inc
cs
clc
cdq
mov
fcom
nop
xchg
pusha
mov
enter
(bad)
mov
mov
cmp
sahf
add
stc
fidiv
ins
out
ds
aad
(bad)
rol
repz
xchg
(bad)
pop
cdq
in
push
add
daa
cmp
push
sbb
mov
sahf
adc
stc
fdivr
xchg
jmp
ds
cmp
ret
or
fnstcw
pushf
scas
push
mov
repnz
or
inc
push
sub
jmp
in
pop
push
cmp
add
cdq
in
jp
out
stos
mov
cmp
shl
out
jl
test
push
cmp
add
fptan
inc
aam
jecxz
add
out
bound
aas
fsubr
inc
and
ror
xor
inc
addr16
sbb
pop
pop
cli
jge
cmp
fwait
dec
xchg
xchg
lea
cmp
fdiv
shr
jle
ja
mov
pop
jb
adc
push
inc
sub
dec
jo
sbb
xor
shl
cmps
jno
out
test
push
adc
cmc
ffree
cmp
push
in
dec
in
mov
pop
shr
cmp
sbb
xor
clc
pop
mov
adc
add
mov
sahf
iret
sahf
stos
xor
mov
xchg
imul
scas
aam
fisttp
push
jmp
arpl
dec
int
addr16
pop
popf
es
inc
test
dec
repz
pop
outs
and
and
mov
sbb
int
loope
xchg
daa
jmp
shl
loopne
push
jl
inc
clc
xchg
push
jns
out
sbb
fwait
mov
push
sbb
arpl
push
jnp
mov
xor
pop
and
arpl
fwait
pop
sbb
arpl
(bad)
js
sub
js
repnz
addr16
hlt
stos
(bad)
pop
cmps
aas
and
fwait
cmp
add
add
dec
leave
inc
mov
scas
and
mov
shr
popa
inc
scas
xchg
or
shl
push
and
push
mov
sub
lahf
inc
loope
xor
inc
scas
inc
push
cmps
jecxz
bswap
retf
imul
mov
sti
mov
(bad)
mov
shl
je
xchg
(bad)
or
adc
mov
dec
das
dec
lods
sub
test
push
xchg
(bad)
jecxz
inc
js
(bad)
cmps
not
dec
fld
ins
ins
push
dec
mov
dec
jo
and
or
sbb
int
add
lods
je
shl
xor
inc
cmc
jmp
(bad)
mov
(bad)
xchg
cmc
adc
outs
nop
arpl
loop
xor
fistp
stos
mov
and
std
lods
jb
sub
jg
mov
xchg
test
mov
fdivrp
mov
scas
(bad)
or
fdivr
test
loop
(bad)
icebp
cdq
push
stc
int
push
aad
inc
push
repz
dec
cmp
ins
mov
push
fisubr
dec
sub
dec
jb
pop
cdq
jnp
pop
xchg
fisttp
ins
adc
mov
xor
xchg
aam
jge
mov
neg
jle
addr16
pop
lods
lods
(bad)
jns
sub
add
add
and
push
stc
jmp
sub
and
sar
xchg
sahf
shl
push
inc
ret
outs
outs
mov
dec
js
lods
push
xchg
fs
idiv
mov
icebp
call
aad
sbb
xchg
add
mov
and
cmp
xchg
mov
popf
in
pop
movs
jnp
jbe
push
es
add
call
xor
mov
xor
ficomp
or
sub
dec
in
and
add
jmp
inc
mov
inc
ins
add
mov
lock
movs
xor
jmp
sti
pop
mov
das
jo
dec
jb
fcom
dec
or
movs
mov
hlt
mov
mov
sar
jb
not
int3
pop
rol
jmp
les
cli
in
icebp
jno
repnz
xlat
and
mov
and
dec
sub
pop
inc
sub
stos
ret
retf
jge
hlt
mov
out
fidivr
int3
mov
fdivr
std
dec
ins
mov
xor
add
mov
std
or
xchg
cmp
xchg
cli
fs
jb
jb
sti
in
sbb
js
dec
mov
in
and
mov
xchg
mov
ficomp
xchg
nop
mov
jg
mov
adc
pushf
out
aad
cs
sahf
mov
jp
rcl
xchg
add
out
ds
adc
lods
stos
pop
mov
mov
cmps
mov
jmp
ret
aam
adc
pop
test
fistp
les
out
jnp
xlat
mov
push
(bad)
sbb
dec
jp
test
jle
xor
pop
or
and
(bad)
mov
test
mov
(bad)
inc
mov
mov
loop
push
push
jg
fst
mov
pop
fimul
xor
shr
push
ret
fnsave
xor
les
out
and
(bad)
fnstenv
sti
in
add
dec
aaa
push
shr
icebp
je
dec
retf
int
call
minps
jne
xchg
ret
out
sbb
fwait
cwde
popa
cwde
or
fbstp
aam
hlt
cmp
nop
das
jmp
add
in
in
cli
(bad)
fnsetpm(287
jg
inc
push
(bad)
xchg
in
xchg
and
mov
daa
mov
adc
pusha
xlat
jmp
mov
and
leave
loop
adc
sar
aas
dec
pop
movs
lea
sbb
add
and
mov
pop
inc
xchg
cmp
cwde
sub
arpl
(bad)
call
and
jnp
ins
rol
or
in
sbb
xchg
movs
add
das
xor
or
add
outs
or
cmp
(bad)
xchg
pop
and
mov
cmp
push
cdq
mov
adc
or
icebp
cmp
stc
rol
fstp
push
cmp
adc
and
fcom
mov
sub
jmp
dec
push
xchg
scas
pusha
shl
jle
sub
sub
sbb
aad
outs
fisttp
icebp
daa
mov
sbb
jb
mov
jbe
jg
xchg
mov
shl
(bad)
jge
mov
into
mov
dec
or
push
pop
sti
clc
push
popa
mov
sub
int3
lods
xchg
je
lock
outs
jl
sub
inc
push
test
or
aaa
js
popf
fwait
ss
jg
cmp
cmp
adc
sub
jecxz
push
xor
xor
sub
xlat
test
inc
fdiv
popa
pushf
daa
dec
mov
sub
fsub
dec
cld
adc
ins
(bad)
xchg
xor
fwait
stos
or
into
cmc
dec
stc
mov
mov
les
add
add
mov
adc
pop
enter
xor
mov
imul
icebp
in
cmps
xchg
out
xor
inc
jbe
push
(bad)
(bad)
repz
hlt
mov
mov
fst
icebp
daa
push
adc
fst
dec
jo
jo
jp
mov
mov
leave
jmp
pop
push
mov
es
pop
dec
mov
and
nop
xor
inc
mov
or
inc
dec
push
pop
inc
xchg
loope
test
mov
xchg
sub
icebp
mov
(bad)
test
and
pop
shr
inc
xchg
in
mov
movs
inc
jae
push
dec
pop
jle
imul
push
ret
jmp
add
cmp
mov
test
add
pop
fldcw
pop
pop
aam
cmps
iret
adc
loope
js
clc
cmp
and
pop
icebp
sbb
xchg
jp
xchg
fwait
inc
in
cmp
pop
jle
and
in
aas
sar
inc
inc
mov
xor
in
cmps
xchg
aam
inc
mov
or
iret
lods
aad
movs
je
and
push
push
pop
les
into
jnp
mov
xlat
cdq
outs
jne
mov
sub
loope
lahf
add
or
sub
test
(bad)
mov
scas
sub
into
(bad)
jl
mov
inc
and
mov
lea
not
jge
call
adc
inc
fidivr
add
out
and
and
pop
sahf
pop
or
js
jno
and
scas
jmp
ret
xchg
pop
jmp
cmp
scas
or
or
aaa
dec
pop
clc
push
pop
test
bound
mov
add
add
push
add
or
add
sbb
(bad)
fst
retf
vzeroall
lock
add
dec
adc
ins
outs
dec
adc
lahf
jnp
out
inc
and
arpl
test
ins
in
lds
push
and
pop
and
or
add
push
push
in
retf
arpl
inc
xchg
mov
inc
mov
dec
pop
pop
xor
fcom
dec
inc
and
mov
clc
out
mov
retf
clc
scas
retf
bound
mov
fstp
sub
aaa
dec
popf
popa
ins
dec
retf
cmp
cmp
idiv
sub
dec
pop
int
daa
pop
mov
pop
outs
ins
add
loopne
jne
not
nop
aad
push
push
add
into
mov
cmp
xchg
int3
(bad)
pop
mov
push
push
lods
data16
push
push
mov
mov
stos
movs
jg
ret
add
cdq
jne
pop
push
xlat
mov
inc
psrad
adc
aaa
push
lods
repz
scas
push
and
xchg
sbb
mov
add
push
mov
sbb
sub
dec
jle
dec
mov
shl
in
push
in
pop
xchg
(bad)
mov
sar
cmp
adc
push
add
cmps
int3
jg
lea
inc
push
repz
xor
mov
sub
movs
and
cld
push
and
fmul
inc
rcl
mov
sub
stc
(bad)
movs
stos
inc
int3
stc
inc
pop
retf
fucomi
movs
and
ins
aad
cmp
cld
in
mov
sbb
and
add
xchg
cdq
lahf
and
popf
repz
inc
xchg
aam
outs
mov
push
xchg
(bad)
scas
cmp
inc
les
mov
mov
call
xor
sbb
out
stc
ins
iret
in
lods
je
aaa
pop
push
retf
xchg
div
xchg
push
and
push
push
sbb
sti
in
fs
push
xchg
test
jl
add
dec
mov
pusha
mov
lods
dec
mov
enter
addr16
sbb
push
std
lock
lahf
(bad)
push
dec
mov
and
push
aam
gs
aad
outs
ins
cdq
outs
scas
sbb
dec
xor
icebp
std
xchg
sub
inc
stos
sar
jp
pop
jbe
call
cs
jae
jle
jmp
outs
or
fldcw
aas
ficomp
addr16
cld
(bad)
lods
add
cld
adc
(bad)
jo
and
scas
mov
fdiv
cmp
push
rcr
pop
fstp
rol
fcomip
pop
imul
lock
popa
cmc
js
xor
cmp
pop
sub
jnp
cmp
ror
out
inc
or
ins
or
stos
lock
sub
mov
in
ins
mov
mov
mov
mov
cdq
popa
adc
jbe
ss
mov
mov
sbb
mov
shl
repnz
fisttp
mov
mov
lds
loopne
out
pop
lock
sub
nop
scas
daa
sub
pop
loop
and
or
sbb
bound
and
test
mov
test
cmp
lock
jle
sub
repnz
sub
xor
test
cmp
fstp
sbb
mov
jge
mov
push
aaa
mov
sar
inc
dec
add
adc
mov
cmps
shl
call
fcmovnbe
shl
add
add
sub
mov
dec
int
(bad)
jmp
mov
sbb
add
mov
adc
or
(bad)
aam
mov
dec
mov
sar
inc
push
xor
ret
pop
xor
xor
jmp
sbb
call
jne
stos
or
mov
dec
and
call
lahf
in
dec
mov
sub
neg
mov
int3
outs
rcl
dec
and
jno
jmp
loopne
pop
mov
mov
or
arpl
mov
sahf
repz
adc
jo
retf
ror
sub
scas
and
mov
frstor
jmp
dec
and
and
sbb
dec
mov
and
imul
shr
jno
cli
or
sub
sar
cmp
clc
jbe
rcl
daa
push
adc
cli
inc
inc
fcomp
fsubrp
(bad)
xchg
and
mov
mov
and
dec
cmp
les
(bad)
pop
xchg
inc
movs
inc
or
cmp
les
fistp
popa
dec
iret
ror
movs
out
aaa
js
xor
mov
int3
mov
sbb
jmp
ss
inc
out
jmp
cmps
retf
fdivr
jnp
push
retf
sti
or
(bad)
enter
test
imul
cmp
jp
lods
es
cld
jno
out
ja
cli
div
aaa
outs
std
or
in
jmp
add
pushf
mov
adc
ins
(bad)
sbb
movzx
inc
dec
(bad)
rcr
aas
out
aaa
fbstp
into
xchg
enter
add
sbb
gs
mov
add
jo
retf
repnz
int
dec
mov
mov
and
mov
test
test
mov
daa
rcr
fmul
gs
jmp
shl
and
test
mov
push
pop
mov
popf
mov
mov
or
push
(bad)
into
or
or
xchg
ror
lods
pushf
cmp
pop
mov
adc
dec
es
scas
scas
arpl
(bad)
fst
jae
adc
fcomp
je
mov
dec
mov
aas
inc
cmp
gs
pop
push
mov
mov
mov
xchg
sbb
xchg
paddw
jp
push
in
dec
dec
dec
mov
add
scas
cmp
and
push
cwde
mov
push
movs
xor
cmp
scas
dec
sbb
fisttp
xor
jnp
out
std
mov
fldcw
cmp
icebp
adc
fimul
dec
addr16
pop
or
stc
mov
mov
xor
pushf
dec
push
sbb
adc
mov
shl
sub
test
pop
ss
mov
mov
adc
xor
inc
mov
ja
inc
daa
(bad)
sbb
xor
add
cmc
(bad)
int
out
rol
xor
(bad)
int
clc
adc
jl
(bad)
jmp
pusha
pushf
push
fisttp
movs
int3
xchg
dec
cmps
pop
pop
adc
cmp
xchg
not
jae
mov
adc
cmp
pop
mov
mov
ret
cmc
mov
stc
adc
pusha
ret
ret
mov
fadd
sti
mov
test
mov
xor
push
imul
stos
xchg
adc
pusha
ins
hlt
mov
pop
(bad)
ror
es
cli
add
scas
sub
ret
ret
adc
dec
imul
jne
shr
prefetch
call
shr
outs
test
mov
jae
ja
nop
pop
push
push
pop
enter
daa
jmp
out
ins
in
test
retf
(bad)
loopne
mov
sbb
cmp
in
shl
pop
inc
pop
push
mov
daa
add
repz
scas
pusha
fs
stos
jp
cmp
jle
ja
into
pop
in
ins
cmp
js
call
or
movs
test
pop
sti
mov
adc
(bad)
xlat
movs
xchg
loopne
stos
std
xchg
fidiv
in
fiadd
mov
push
pop
dec
hlt
inc
dec
out
popa
pop
jne
ret
jnp
xlat
xchg
ret
es
stc
cmp
test
mov
std
inc
(bad)
addr16
add
call
(bad)
gs
dec
adc
rcr
arpl
lea
fwait
repnz
push
ret
jle
push
test
sahf
mov
test
and
xchg
adc
adc
xchg
int3
mov
pusha
sub
push
out
cmp
ss
shr
mov
aas
enter
mov
push
fucomi
and
cs
cmps
jmp
ja
jge
dec
retf
xchg
(bad)
fstp
and
cmp
dec
or
add
cli
dec
dec
clc
imul
push
loop
or
ror
sub
pop
adc
fs
add
popa
fcom
jmp
inc
push
dec
or
adc
xor
movs
mov
sub
icebp
ss
mov
xchg
dec
push
or
cmc
cmps
jbe
aam
sbb
sub
cmc
(bad)
sahf
sub
inc
and
iret
sub
clc
cs
in
pop
jecxz
mov
pop
xchg
out
pop
test
sub
sub
mov
sbb
inc
fmul
mov
lds
pop
dec
mov
out
sbb
test
lock
not
popf
sbb
cmp
mov
movs
or
iret
mov
or
and
jno
pusha
(bad)
(bad)
stc
shl
pusha
int3
jae
cmp
pop
dec
cmp
mov
enter
loopne
xor
dec
xor
add
scas
fldl2e
pop
hlt
xchg
out
push
arpl
mov
and
js
mov
cmp
lods
adc
lock
dec
dec
xor
jg
addr16
and
push
fist
mov
push
pop
stos
sbb
mov
cmps
add
dec
test
sbb
cld
mov
pop
lds
pop
pusha
int3
aam
mov
push
cmps
nop
lods
pop
retf
mov
dec
loopne
ficomp
dec
xchg
and
or
xchg
pop
test
cmp
stc
adc
push
call
push
repz
jne
or
inc
aas
xlat
jbe
jge
mov
fdiv
sbb
mov
or
clc
mov
call
adc
fs
das
xor
arpl
movs
or
int3
lock
lock
add
mov
xchg
xor
hlt
leave
sub
add
push
mov
jl
or
or
(bad)
out
mov
mul
out
rcl
test
push
and
sbb
dec
add
xchg
inc
outs
es
xchg
inc
retf
jmp
and
out
das
pop
ror
sbb
(bad)
repnz
jmp
sub
lock
mov
std
hlt
repnz
movs
cmp
mov
into
xchg
push
test
add
add
mov
jmp
push
repnz
and
adc
mov
ret
jp
pop
jb
pop
outs
and
int3
push
sub
clc
icebp
and
test
inc
cmp
fadd
add
mov
jmp
mov
lock
inc
jne
sub
pop
xchg
pop
pop
cdq
cmp
sar
(bad)
out
xchg
xchg
xlat
pop
cmc
and
sti
pop
ja
dec
fnstenv
xor
test
mov
fsubr
imul
in
pop
arpl
movs
dec
imul
push
loope
gs
in
xchg
inc
push
lods
lock
repz
nop
and
fsubr
je
mov
call
movs
cmp
xchg
xchg
pop
cmps
les
(bad)
add
dec
loopne
fst
fsubr
xchg
fnstcw
mov
test
pushf
and
pop
sti
mov
mov
and
mov
cs
add
mov
and
xchg
loop
add
aad
jmp
test
out
or
push
dec
adc
add
icebp
jae
repz
in
or
fistp
pop
jp
mov
in
leave
ss
push
adc
xchg
xor
xor
jl
push
jle
clc
repnz
push
ja
xlat
push
xchg
sub
inc
and
(bad)
aam
push
xor
mov
and
sub
pop
adc
pop
int3
fcom
(bad)
stos
fstp
test
sahf
mov
push
stc
jle
enter
mov
inc
call
jp
stc
jbe
data16
les
push
sbb
mov
mov
dec
xor
out
cmp
test
and
mov
cmp
xchg
ret
ins
jae
fnsave
push
mov
and
(bad)
fsub
sti
into
mov
ds
nop
or
ret
pop
(bad)
(bad)
scas
jmp
xor
arpl
mov
pushf
cmp
ins
movs
jbe
cli
scas
cli
xor
push
pop
and
and
jns
stos
mov
lahf
test
test
ficomp
cmc
stos
inc
dec
cmp
(bad)
pop
add
dec
mov
xchg
popa
jmp
jnp
cmc
sub
or
fst
cwde
xor
or
sbb
popa
dec
aad
movs
ret
std
xchg
and
loope
xchg
and
int
(bad)
cmp
(bad)
and
adc
std
es
xchg
mov
shl
fs
pop
repz
xchg
cs
enter
jbe
adc
inc
cmp
rcl
fld
push
xor
repnz
inc
clc
test
mov
shl
add
mov
mov
xchg
pop
fwait
dec
pop
jl
cmp
mov
push
push
cmp
cdq
out
sub
jns
pop
mov
and
sub
sub
dec
retf
xor
adc
or
inc
out
popa
(bad)
xchg
not
jp
aad
int
mov
mov
stos
mov
daa
pop
push
dec
pop
in
lea
sbb
pop
loope
add
imul
scas
rcr
rcl
cmp
xor
rcr
adc
mov
dec
pop
arpl
add
call
jb
lock
scas
adc
adc
repnz
inc
push
jecxz
mov
ret
fadd
and
or
outs
mov
fistp
repz
aaa
mov
sar
ja
push
mov
pushf
sub
js
(bad)
test
jae
test
imul
xchg
popf
fisttp
pop
gs
test
mov
aad
xchg
mov
jmp
fisubr
pop
sbb
adc
mov
and
mov
pop
(bad)
cmc
sbb
xchg
cli
test
cs
fstp
pop
jge
sti
jmp
dec
sub
fisttp
pop
nop
adc
cmps
xor
in
cmps
rcr
cmp
rcl
lods
es
jl
jo
xchg
mov
test
push
ins
xchg
cli
outs
or
jno
mov
xchg
call
jmp
shl
aaa
mov
jecxz
mov
(bad)
loope
shl
mov
sti
sar
push
pop
sahf
ret
mov
ds
jge
dec
ins
jecxz
test
xor
in
int
jb
outs
enter
mov
loopne
or
mov
push
mov
mov
xchg
call
push
sbb
sub
dec
cmp
int3
stc
mov
cmp
add
repnz
sar
dec
in
pop
repnz
stos
mov
retf
mov
push
add
mov
loop
xor
in
mov
add
stos
sbb
popa
push
mov
scas
adc
pop
js
dec
retf
outs
cmps
call
movs
dec
pop
cmp
or
movs
out
int
mov
stos
lds
jmp
iret
jnp
(bad)
mov
aas
and
jno
loope
pop
out
ret
pushf
push
adc
repnz
mov
cmp
jl
imul
inc
xchg
popa
sti
pop
xchg
int3
cmp
lds
jecxz
xor
lds
inc
mov
mov
inc
les
push
cmp
mov
imul
mov
js
xchg
(bad)
je
shl
bound
ret
and
int
(bad)
xor
mov
out
fisub
outs
cdq
arpl
sub
jo
int3
add
lods
sahf
and
or
scas
add
out
xchg
add
ror
fwait
cmp
js
(bad)
cmp
shr
mov
push
loope
pop
jp
std
push
mov
cs
xchg
aaa
lea
mov
xor
loope
leave
add
push
int
sub
jle
jl
icebp
push
movs
je
push
cwde
(bad)
push
or
xor
push
repz
iret
sub
xchg
movs
(bad)
cli
add
push
fmul
addr16
cmp
pop
sbb
ins
adc
jmp
lea
sar
and
xchg
xor
cld
lahf
xchg
xor
sbb
add
cld
mov
ror
sbb
push
jmp
mov
cmps
sbb
aam
adc
ja
rol
js
mov
shl
xor
xchg
mov
mov
push
test
imul
xor
ja
adc
not
or
movs
jnp
or
scas
adc
mov
dec
clc
mov
dec
fidiv
stos
fwait
dec
push
mov
jle
inc
je
cmp
xchg
test
push
cwde
sbb
cwde
pop
mov
test
mov
xchg
jno
(bad)
push
rcr
jne
shl
out
push
ds
adc
loope
add
imul
mov
in
ss
int
cmp
mov
jp
int
jle
inc
fst
cwde
(bad)
jmp
inc
aad
sbb
icebp
xlat
data16
retf
push
inc
xacquire
add
lahf
mov
ins
inc
mov
or
jecxz
pushf
mov
cld
lods
and
inc
cmps
jb
iret
rcr
mov
and
push
jge
fist
inc
mov
fwait
mov
xchg
pop
js
inc
push
pop
movs
scas
(bad)
add
adc
mov
add
mov
xchg
fs
jle
xor
arpl
jp
cwde
test
repnz
cmc
movs
mov
sbb
lock
fld
std
xor
xchg
ja
pop
test
inc
sti
repnz
adc
pop
mov
xlat
xchg
mov
das
push
and
xchg
mov
lock
scas
hlt
jmp
test
cmp
(bad)
std
dec
ss
test
gs
add
int3
push
scas
ss
fsub
pop
or
or
stc
in
pushf
out
xchg
outs
outs
sahf
repnz
inc
xchg
in
ins
loop
xchg
pop
adc
sbb
lds
cmp
or
push
add
mov
icebp
cmp
xchg
mov
(bad)
push
cmp
daa
jno
cmp
arpl
stos
ins
js
push
mov
bound
mov
popa
push
fwait
adc
retf
in
sbb
and
push
cmp
add
inc
push
push
jg
(bad)
adc
shld
out
fisub
jae
push
xchg
pop
pop
lods
cmp
dec
pop
leave
inc
xchg
xor
leave
and
arpl
loop
cmc
push
(bad)
sbb
mov
sar
enter
mov
or
xchg
mov
add
repnz
add
sub
shl
sar
dec
ret
fmul
cld
arpl
pop
inc
ins
fadd
jmp
ret
xchg
mov
or
jge
adc
cmp
test
add
jmp
xor
dec
aam
sahf
sub
push
lds
inc
stos
push
xchg
mov
sar
(bad)
sub
adc
push
adc
lea
popf
in
xor
mov
sbb
adc
push
sub
mov
imul
popf
cmp
fdiv
adc
lock
in
sub
xchg
stc
pop
movs
outs
mov
cs
mov
xchg
jge
add
pop
push
stc
pop
dec
pop
xchg
mov
cld
cdq
clc
xlat
add
push
(bad)
and
mov
aaa
lds
sub
inc
fsubr
loop
xor
xor
mov
pop
mov
test
test
lds
aad
mov
xor
loope
mov
pop
in
push
sahf
stc
inc
mov
stos
sub
lods
sti
inc
push
mov
add
out
call
out
sbb
pusha
mov
sbb
mov
pop
push
add
cld
cmps
cmp
shr
xor
mov
(bad)
sti
fdiv
es
mov
inc
ss
inc
mov
jbe
xchg
ds
popf
into
push
add
xor
rol
jge
in
jae
jmp
neg
xchg
adc
pop
and
les
push
xor
mov
out
stos
outs
add
and
stc
out
sahf
rol
mov
or
xchg
in
sub
xchg
lds
lock
push
push
mov
sti
retf
fwait
seta
ret
mov
out
add
dec
cwde
xor
std
fiadd
ret
xchg
loop
int
and
clts
fwait
push
ins
mov
imul
inc
scas
dec
loope
xor
aam
lahf
das
sbb
mov
test
xor
loop
inc
dec
pushf
and
mov
dec
sbb
jae
rol
mov
cwde
(bad)
adc
adc
sbb
pushf
aas
test
loope
push
mov
test
bound
repnz
jnp
in
xchg
sub
lods
jne
test
dec
sub
pop
leave
sub
mov
dec
xchg
popa
or
cmp
jmp
shl
cmp
jae
pop
icebp
bound
adc
icebp
mov
out
ins
dec
fwait
jmp
ficom
sub
mov
les
inc
pop
js
jno
pop
jnp
mov
je
xor
cmps
sbb
mov
xor
push
leave
in
dec
aam
xchg
adc
popf
dec
rcr
sub
add
in
jmp
iret
pop
in
pop
inc
imul
imul
inc
cmps
sti
xchg
daa
inc
sbb
adc
cwde
outs
les
lahf
cmp
push
imul
jns
sbb
mov
and
mov
cmp
xchg
repnz
pop
jnp
fsubr
add
mov
mov
pop
push
mov
(bad)
xor
pop
test
out
call
sbb
push
and
add
in
or
mov
lahf
sbb
js
mov
mov
outs
inc
sub
cmp
inc
pop
pop
clc
sub
jl
fs
jge
push
and
gs
jl
xor
push
repnz
shl
and
out
les
in
adc
push
mov
jg
mov
dec
mov
sub
jg
pop
mov
fidivr
div
jp
fisub
push
mov
pop
push
shl
shl
add
jb
push
sub
mov
std
sbb
add
int3
in
xchg
push
jg
fild
lahf
rol
jae
mov
popa
leave
mov
shl
mov
ins
jecxz
ins
pop
out
popf
repnz
push
and
push
fiadd
inc
repz
push
push
xchg
mov
xchg
adc
xor
cmc
test
mov
cmps
xor
add
into
mov
jecxz
test
imul
xchg
fnstcw
add
pop
dec
jns
mov
adc
pop
and
rol
daa
leave
and
jo
mov
dec
jmp
pusha
push
leave
sbb
push
adc
addr16
pop
sbb
call
fild
stc
ins
test
inc
jb
add
stos
pop
int
inc
movs
scas
inc
nop
push
imul
in
push
push
ret
jbe
outs
and
push
pusha
cwde
sbb
xor
xchg
cmc
or
retf
lahf
mov
adc
(bad)
aad
inc
push
sub
push
jl
pop
jno
push
mov
or
pop
cld
mov
adc
sbb
or
jno
mov
pop
cmp
xor
mov
in
and
test
mov
inc
mov
and
mov
xchg
imul
retf
repz
and
hlt
lods
push
adc
jno
jge
repnz
pushf
enter
add
pushf
inc
xchg
bound
mov
ss
mov
mov
and
popf
mov
dec
add
in
(bad)
xchg
imul
(bad)
cmp
jg
ins
jnp
mov
stos
mov
outs
mov
lea
mov
pop
sbb
(bad)
gs
pop
(bad)
and
cmps
rol
sti
mov
push
setno
out
ja
add
inc
aas
adc
rcr
mov
or
adc
les
xchg
iret
adc
aad
mov
int3
add
add
test
jbe
outs
or
loop
mov
xchg
lods
add
lds
adc
inc
stos
loope
jb
das
call
cmp
and
xchg
or
movs
into
push
loope
sub
push
add
mov
ds
dec
es
outs
inc
fwait
dec
or
and
out
push
out
xchg
cld
adc
(bad)
out
outs
mov
in
mov
ret
call
mov
jns
or
ds
lahf
icebp
mov
jne
adc
push
fdiv
sub
ret
push
js
mov
cmp
mov
sub
jb
sub
mov
xor
arpl
(bad)
pop
push
and
mov
cmp
(bad)
imul
push
inc
aad
sbb
int3
mov
push
test
lods
and
out
adc
push
retf
add
aam
push
push
add
xchg
adc
xchg
dec
arpl
fwait
push
pop
loop
mov
dec
fs
xor
jne
adc
(bad)
jmp
adc
mov
fbld
push
xor
fiadd
push
pop
sbb
or
xlat
shr
mov
lds
sbb
xchg
sub
sti
lods
les
push
test
test
xor
imul
push
mov
ret
sub
outs
and
out
fdivr
in
cmps
pusha
and
es
repz
cld
scas
cdq
loope
fadd
xor
call
dec
mov
test
pop
lods
test
fucomip
xchg
aaa
and
and
call
shl
into
call
and
mov
retf
gs
leave
loop
push
mov
lea
jecxz
ret
sar
cld
xchg
mov
push
push
cs
pop
pop
pop
rcl
push
jb
neg
and
mov
fdivr
push
bound
psubsb
rcl
scas
fdiv
out
popf
cmps
mov
jno
aaa
pop
xchg
out
stos
sbb
pop
int
pop
loopne
pushf
cdq
sub
ins
jmp
sbb
mov
mov
xchg
stos
xchg
sbb
dec
and
or
fidivr
shl
aas
mov
out
xchg
or
ror
out
sbb
lea
adc
mov
inc
repz
into
in
pop
mov
jle
pop
addr16
lahf
pop
test
xchg
xchg
xchg
and
enter
mov
ret
push
retf
xchg
call
xor
xchg
xlat
mov
fcmovnb
jge
cmp
sub
xor
sbb
jp
mov
bnd
mov
mov
xchg
xor
mov
cmp
aam
call
imul
or
pop
inc
es
mov
adc
ss
jnp
jmp
jl
fnsave
jo
imul
repz
pop
adc
jb
stos
adc
sbb
cli
sbb
jbe
(bad)
fwait
push
(bad)
mov
iret
je
xchg
inc
pop
sub
jo
xor
inc
xchg
jmp
mov
lods
lods
mov
pop
mov
add
jg
push
sbb
aaa
shl
leave
bound
mov
(bad)
int3
mov
test
sbb
out
mov
xchg
inc
xlat
jns
mov
cmp
clc
mov
stos
xor
enter
js
pop
ror
hlt
jge
cmp
dec
xchg
cmp
dec
out
cmp
daa
adc
fstp
inc
les
dec
or
call
push
std
xor
imul
loopne
push
dec
mov
and
sar
loopne
gs
loop
jecxz
in
push
pop
mov
shl
xor
test
mov
out
pop
inc
pop
push
pop
das
jne
xchg
retf
mov
dec
mov
out
sbb
call
dec
(bad)
mov
js
fisttp
sub
lahf
repnz
lahf
dec
ds
cmp
or
jno
and
sbb
jp
adc
push
xor
sub
lods
mov
push
loop
sub
push
mov
mov
(bad)
mov
sub
ret
dec
jg
scas
jno
inc
push
mov
les
(bad)
fxam
movs
sub
jmp
dec
jg
jb
mov
or
adc
gs
mov
and
or
pop
push
movs
rol
sub
bound
dec
pop
adc
push
cmp
aaa
in
pop
push
sbb
popa
mov
mov
aaa
jmp
mov
lods
mov
add
jmp
push
inc
and
cmps
mov
jmp
cld
xlat
pop
inc
or
sub
xor
je
push
cmps
sbb
and
js
sub
adc
xor
xor
and
loop
test
add
add
jb
dec
jecxz
sub
aas
push
sahf
and
mov
sbb
jne
call
call
add
retf
rcl
mov
fadd
fcomp
out
dec
jnp
test
pushf
jno
lds
jge
aam
js
fwait
xchg
xchg
fnsave
push
xchg
daa
loope
cmp
adc
xchg
shr
sbb
xor
test
mov
sbb
mov
pop
cmp
sti
out
cld
fcmove
jl
push
cmp
inc
scas
fdivr
sub
inc
sbb
pop
pop
pop
hlt
loopne
mov
pop
fwait
add
fwait
pusha
shr
aam
mov
popa
ja
pcmpeqd
jg
or
cmp
xchg
jnp
sub
cmp
lahf
pop
jb
xchg
xchg
and
push
sahf
rcr
repz
sahf
jnp
clc
shr
adc
test
fwait
mov
push
xchg
sub
mov
out
in
mov
lahf
out
adc
stos
sbb
mov
push
ror
mov
imul
ror
xor
jno
fwait
mov
dec
aas
pushf
inc
pop
mov
stos
pop
shl
out
fdivr
mov
(bad)
jnp
ins
jb
imul
pop
dec
mov
mov
mov
xor
xlat
sub
jmp
inc
rcl
mov
pop
retf
fisttp
mov
cmp
sub
mov
pop
jle
retf
adc
jecxz
mov
enter
dec
xor
xor
fcom
jmp
fadd
bound
and
aam
fcomp
stos
mov
jbe
pop
inc
into
fimul
ins
shl
ret
sub
lock
ins
inc
mov
fadd
pavgb
and
jmp
mov
cmp
inc
mov
(bad)
bound
mov
mov
add
in
mov
retf
adc
sbb
je
pop
dec
sub
int3
pushf
ud1
aas
loopne
cmp
push
pop
xor
js
nop
nop
sub
cmp
(bad)
test
fwait
and
and
jmp
mov
test
movs
add
fcomip
xor
test
cdq
scas
cld
cmps
adc
xor
test
cmps
dec
out
cld
scas
shl
jl
mov
mov
jo
nop
add
add
mov
jbe
mov
jb
(bad)
jmp
ret
and
push
mov
bound
push
adc
loop
ins
and
or
lock
out
mov
push
jp
pusha
ret
stos
iret
sbb
xchg
gs
cdq
push
stos
movs
adc
maskmovq
not
aad
jns
fwait
xor
mov
jne
jge
fwait
cs
jge
shl
add
shl
loopne
mov
rcr
jae
cmp
sti
retf
jb
call
cmp
call
sbb
test
retf
(bad)
push
mov
mov
imul
add
and
or
arpl
push
sahf
fdivr
xchg
fld
imul
xor
out
jb
loopne
add
sub
test
test
xchg
fiadd
cmc
stc
nop
and
pop
pop
push
(bad)
cmps
xlat
mov
adc
mov
xchg
xchg
dec
test
sub
jno
cli
pop
pop
inc
xchg
push
leave
inc
ins
sub
test
push
push
mov
dec
stos
pop
in
fsubr
rcl
xor
and
movs
ret
sbb
ret
daa
mov
fdiv
jg
jecxz
out
inc
test
sbb
dec
dec
cmp
push
xor
pop
xchg
jl
add
push
fild
pop
(bad)
xchg
neg
xor
stos
or
jle
sbb
mov
cmc
dec
mov
scas
and
jnp
hlt
rcl
xlat
sbb
cmps
loop
jbe
sti
sahf
push
movs
jecxz
xchg
sub
cs
or
repz
dec
scas
push
test
pop
xor
stos
jne
dec
inc
fcomp
sbb
int
inc
mov
out
cmp
xchg
xor
cmc
mov
daa
mov
xor
lahf
xchg
push
mov
fwait
push
mov
sti
dec
xchg
call
std
pop
jne
and
(bad)
jae
mov
jbe
xchg
enter
repz
xchg
jo
ja
or
or
ret
xor
jmp
mov
xor
inc
int
repz
inc
mov
mov
jmp
push
clc
xchg
fimul
inc
mov
and
and
or
add
rcl
loop
pop
adc
lods
add
or
jmp
mov
test
(bad)
iret
fld
mov
inc
fist
and
aad
mov
adc
fimul
addr16
neg
call
or
dec
iret
out
ffree
(bad)
ror
das
xor
or
popa
jo
adc
pop
les
cli
adc
es
mov
adc
ds
or
xlat
test
push
mov
int
mov
mov
retf
push
retf
test
xchg
pop
or
test
add
add
test
dec
mov
xchg
loopne
fwait
push
sar
pop
outs
adc
fwait
cmp
into
lods
(bad)
ds
push
xchg
pop
xchg
gs
ss
add
(bad)
push
ret
(bad)
cwde
xchg
mov
add
fs
inc
into
or
xor
and
inc
call
inc
jae
adc
or
into
inc
loopne
inc
xor
loop
cmp
in
(bad)
pop
or
(bad)
scas
jmp
sub
jge
or
sbb
cmp
imul
stc
inc
mov
xor
dec
lods
in
in
aas
pusha
retf
mov
arpl
stos
mov
outs
push
mov
sti
xchg
jg
pop
and
int3
loope
fwait
pop
fs
cmps
in
test
fwait
adc
pushf
xchg
lock
add
es
xchg
(bad)
jge
push
mov
ins
mov
adc
hlt
daa
xor
repnz
fnstenv
mov
cli
repz
(bad)
xchg
fadd
retf
cmp
scas
sbb
jns
clc
jp
loopne
jcxz
(bad)
jae
sub
(bad)
sbb
repz
aas
adc
les
mov
ins
mov
je
bound
inc
push
sub
push
jge
fld
scas
xchg
sbb
sub
imul
imul
in
(bad)
stos
xchg
stos
mov
jae
gs
push
fucom
sahf
icebp
add
cmps
jb
fimul
inc
mov
popa
hlt
data16
sbb
xlat
jp
mov
or
push
add
add
xchg
push
(bad)
clc
mov
loope
cmp
sbb
daa
xchg
test
xor
sbb
ja
mov
lea
push
inc
test
mov
lock
shl
mov
sub
pop
dec
mov
fadd
mov
inc
aas
pop
data16
mov
sbb
stc
rol
dec
jns
push
jns
mov
movs
cli
pop
cmps
(bad)
lea
cmp
pop
int
movs
in
mov
jl
repnz
imul
gs
jne
and
pop
std
sbb
jo
ds
inc
inc
adc
add
sub
xor
in
int3
test
cmp
and
cmp
mov
idiv
es
enter
xchg
mov
mov
fistp
pop
in
jecxz
xchg
pop
adc
or
add
pop
add
mov
(bad)
in
ins
int3
push
xchg
sub
ins
dec
ins
lock
out
jnp
and
fs
lods
rcr
ret
gs
out
mov
cmc
or
mov
push
scas
adc
jno
mov
add
lea
jge
mov
mov
fdiv
jg
push
or
pusha
push
xor
daa
out
jnp
mov
or
leave
(bad)
mov
std
fidivr
pop
stos
stos
mov
add
xchg
(bad)
sub
pop
es
in
call
push
cwde
jmp
out
jae
mov
push
fmul
cwde
pop
sti
retf
sub
imul
pop
jmp
or
loope
pushf
cmps
imul
mov
call
out
add
pop
mov
sbb
mov
jle
mov
xchg
jl
(bad)
mov
div
inc
add
pop
pop
push
bound
lods
ins
pop
sar
div
xchg
lds
outs
test
imul
mov
call
aad
gs
icebp
sub
or
mov
push
push
push
inc
jle
cmp
jg
mov
test
or
clc
push
sbb
mov
mov
inc
xchg
(bad)
pop
sti
xchg
inc
jmp
xor
scas
mov
inc
outs
pop
pushf
and
in
popf
mov
sub
jne
ins
pop
test
clc
sar
xchg
rol
mov
fisttp
xchg
add
aad
ins
adc
inc
or
repnz
jecxz
test
imul
idiv
out
push
sbb
scas
je
cmp
(bad)
cmps
cmp
mov
adc
xchg
sbb
icebp
dec
(bad)
mov
mov
(bad)
mov
sub
pushf
jecxz
inc
retf
mov
push
(bad)
sbb
les
mov
xchg
fidiv
xor
add
and
mov
lea
retf
sbb
cmc
or
arpl
add
daa
dec
mov
in
mov
popf
pop
adc
or
add
jge
nop
cmp
push
adc
inc
cmps
cs
and
sub
mov
push
sahf
frstor
mov
push
jne
mov
retf
mov
or
mov
int
js
scas
xchg
fild
push
mov
push
mov
nop
jae
ret
push
mov
inc
test
mov
adc
les
movs
xchg
or
(bad)
push
adc
shr
add
outs
mov
jbe
movs
inc
jo
scas
jb
pop
hlt
cdq
adc
and
jecxz
push
push
sbb
aas
mov
rcl
lea
jg
dec
ds
enter
inc
(bad)
faddp
xor
into
retf
cmc
cmc
nop
xor
pop
and
outs
fdivr
out
jp
inc
(bad)
ss
sbb
sbb
inc
push
das
(bad)
cmps
scas
push
push
dec
into
loope
(bad)
in
pop
mov
aad
outs
sub
sbb
ja
call
jp
mov
lahf
es
and
pop
loop
jmp
add
mov
addr16
sar
mov
in
push
cmp
icebp
ret
inc
(bad)
in
push
sbb
(bad)
stos
shl
mov
sbb
scas
test
xchg
clc
jg
(bad)
xchg
icebp
call
mov
sub
dec
jmp
(bad)
(bad)
dec
push
cli
cwde
lock
add
mov
inc
inc
aaa
inc
popa
xchg
mov
and
xchg
sbb
inc
mov
inc
adc
ret
repz
mov
push
fidivr
xchg
mov
repnz
cs
and
mov
pop
pop
xchg
cld
cwde
stos
popf
data16
pop
push
stos
loopne
rol
mov
and
and
mov
shl
lds
adc
call
(bad)
mov
cmp
call
xor
scas
inc
out
lds
adc
fnstcw
ja
pop
xchg
popa
ja
ret
adc
push
pop
xor
movs
xchg
movs
add
movs
sar
into
push
and
fiadd
scas
data16
(bad)
clc
xchg
xor
out
add
jmp
sar
mov
inc
mov
adc
fidiv
push
(bad)
idiv
mov
bnd
dec
fimul
pop
ins
sub
dec
mov
mov
fnstenv
scas
jle
and
gs
push
dec
mov
inc
ss
pushf
or
lock
add
jb
push
leave
mov
frstor
ss
jle
pop
cmp
in
mov
(bad)
jecxz
mov
inc
push
out
push
mov
and
xchg
mov
adc
test
and
jle
jnp
lds
jae
int3
fwait
call
cmps
and
inc
add
xor
(bad)
cmp
aam
stc
fld
ja
lods
adc
retf
push
in
cwde
jnp
cmp
loopne
(bad)
retf
mov
or
lods
ja
sub
push
sub
test
test
cmc
mov
xchg
popf
cdq
push
adc
push
xchg
mov
pop
mov
adc
jle
loop
xchg
dec
mov
sbb
outs
mov
out
sbb
sub
lea
xor
(bad)
xchg
inc
into
adc
aad
lods
xor
in
pop
out
loope
cmc
and
xor
idiv
mov
addr16
xchg
fidiv
imul
pushf
inc
mov
xor
cmp
add
hlt
cmc
outs
stos
mov
imul
ret
or
test
stc
retf
es
or
mov
pusha
std
push
leave
sahf
movs
adc
icebp
clc
fsub
pop
test
lahf
jmp
mov
ret
sub
mov
test
cwde
adc
out
add
test
bound
or
pusha
dec
ds
shl
repnz
sti
mov
mov
push
or
adc
inc
pop
dec
add
inc
loop
inc
push
lahf
jl
out
bnd
test
shl
stos
ret
mov
call
or
or
scas
push
cmp
jg
rol
jecxz
push
call
inc
push
jmp
mov
mov
pop
test
xchg
mov
scas
in
and
in
iret
call
mov
pop
jb
pop
pop
xchg
pop
inc
loopne
retf
sub
ins
jo
lods
push
add
xor
xor
inc
sahf
shl
fbstp
jno
xlat
fstp
and
mov
(bad)
in
ret
retf
xor
xor
add
and
push
hlt
or
xchg
sub
loope
mov
push
lods
daa
fidivr
test
adc
xchg
push
pusha
lahf
gs
jecxz
dec
daa
stos
xor
(bad)
popa
adc
psubb
loope
or
cld
xor
mov
sub
movs
sub
pop
and
cmps
fisttp
nop
dec
loopne
setne
arpl
sbb
mov
sbb
cdq
movs
out
fadd
xchg
jne
add
dec
enter
cmp
sbb
sub
inc
xor
bound
pop
adc
stos
lods
push
leave
mov
inc
(bad)
sub
push
xor
mov
jae
add
fdivr
sbb
cdq
lock
iret
clc
dec
in
ins
int3
sub
adc
or
cdq
adc
adc
xchg
or
jns
shr
push
lods
mov
adc
sub
push
mov
(bad)
lods
push
repnz
mov
xchg
fdivr
inc
lds
test
push
test
pusha
rol
das
fstp
sbb
mov
and
mov
sahf
es
xchg
push
push
lock
jp
mov
xchg
in
mov
stc
aad
leave
repnz
in
add
pusha
movs
add
dec
ja
push
into
jb
int3
les
(bad)
cmp
add
cmp
or
pop
gs
fadd
push
call
leave
out
push
push
or
in
cmp
mov
cbw
mov
in
push
push
xchg
adc
sub
or
pop
mov
pop
add
add
scas
call
ins
lds
rcl
fdiv
dec
dec
adc
icebp
add
add
shl
std
mov
jno
mov
in
cwde
jae
pusha
cli
sub
and
xchg
je
xchg
sub
mov
xchg
cmp
jle
inc
arpl
imul
pop
aam
or
jno
mov
jns
les
adc
gs
fwait
(bad)
xor
stos
mov
mov
push
aaa
push
xchg
aam
mov
jnp
push
fisttp
xchg
lods
xchg
jmp
mov
cs
stc
jp
adc
adc
ret
sbb
jnp
xchg
add
aas
pusha
dec
nop
xor
dec
sar
sar
ret
xchg
xchg
jl
sbb
aas
leave
iret
push
xchg
lea
sub
outs
inc
cmc
fmul
retf
ins
cmp
pop
in
jle
jl
movs
jbe
xor
es
std
and
lock
ror
cmp
mov
test
loopne
jo
jmp
sbb
sar
jne
cmp
pop
add
cli
ret
sbb
adc
and
mov
or
jg
rol
fwait
retf
inc
push
ss
ficomp
(bad)
mov
in
ins
cdq
mov
push
jmp
pop
stos
enter
xchg
(bad)
popa
and
push
pushf
(bad)
xor
test
jl
ja
test
xchg
inc
popf
push
js
mov
adc
mov
inc
retf
cmp
out
cmp
push
(bad)
retf
jecxz
les
aas
inc
scas
mov
add
mov
inc
cmc
xchg
aas
(bad)
ins
div
pop
dec
mov
adc
lahf
mov
inc
das
cld
adc
mul
mov
clc
sbb
ror
cmp
bound
or
movs
mov
mov
scas
jne
jb
or
clc
fdiv
ffree
cmps
sub
inc
test
jmp
jmp
imul
outs
daa
es
sub
fmul
dec
test
mov
push
in
js
xchg
rcl
iret
call
out
movsx
xchg
cmps
fidivr
or
xchg
dec
mov
aad
retf
cmps
mov
inc
inc
iret
push
add
out
xchg
mov
test
push
dec
inc
sbb
sub
(bad)
call
jmp
lds
cmp
popf
aaa
repz
aad
adc
ret
and
mov
dec
ror
xor
inc
push
adc
mov
lea
imul
mov
jge
dec
arpl
jbe
in
mov
aad
in
jle
inc
fs
dec
cmc
lds
cmp
js
xchg
aad
repz
stos
mov
scas
fisubr
jns
push
pop
sub
(bad)
jbe
jmp
add
gs
cmp
mov
jb
enter
ret
je
mov
dec
mov
mov
gs
ins
inc
retf
sub
bound
mov
(bad)
iret
fld
ins
fsubr
mov
fneni(8087
ins
add
(bad)
push
pop
fistp
js
mov
retf
cmp
into
or
mov
adc
pushf
in
stos
sub
bound
push
ins
xlat
sub
dec
daa
mov
cdq
test
xor
or
or
add
or
pop
mov
cmp
inc
and
pop
xchg
xchg
ror
and
adc
loope
or
fistp
imul
and
repz
dec
sbb
arpl
ret
imul
and
xchg
sub
mov
imul
rcr
gs
dec
iret
xor
stc
fist
pop
popf
jg
frstor
sub
mov
stos
scas
xor
jb
fnstenv
les
scas
mov
test
pop
dec
jp
aad
aas
movs
cmp
scas
retf
jns
or
and
and
adc
push
(bad)
push
dec
out
add
retf
mov
xchg
push
mov
lds
sbb
adc
or
sahf
adc
je
cld
(bad)
test
sbb
adc
add
ins
push
xchg
(bad)
movs
cmps
add
ret
call
movs
or
sub
and
sub
push
jmp
lahf
pop
mov
icebp
lock
mov
nop
sub
jo
iret
pop
mov
inc
bound
pop
adc
movs
sbb
adc
in
add
nop
jge
test
dec
sbb
adc
out
aaa
pop
xchg
push
addr16
sbb
jecxz
repz
xchg
addr16
xchg
mov
jmp
loopne
fcomp
fnstsw
cmp
aaa
loope
cmc
adc
push
out
repnz
inc
push
mov
ret
pop
xor
dec
push
repnz
sub
cld
inc
fdivr
pop
int3
(bad)
push
or
push
xchg
cmp
and
jg
call
(bad)
aaa
or
sub
arpl
cmp
sbb
inc
and
mov
mov
outs
add
xchg
shr
ret
push
pushf
imul
std
jb
(bad)
shl
xor
or
pop
mov
add
jnp
xchg
pop
(bad)
sti
cmps
xor
scas
jae
push
jae
push
jp
inc
dec
fdiv
pop
cli
leave
xor
sub
ret
inc
or
shr
imul
cmp
into
or
inc
fidiv
push
add
and
outs
jge
push
movs
pop
iret
jbe
jmp
pop
xchg
test
inc
mov
push
push
dec
fs
sub
ds
getsec
and
mov
inc
adc
nop
shr
sbb
push
hlt
js
jb
xor
sbb
jae
repnz
sbb
mov
or
retf
inc
mov
jl
xchg
ja
and
dec
mov
loop
int
pop
inc
out
sbb
imul
add
test
test
xchg
sub
add
dec
add
mov
out
ins
mov
rcl
pop
enter
test
push
jns
(bad)
enter
lahf
mov
out
test
xchg
pop
int
cmp
ss
sub
xor
dec
sti
mov
lods
pop
(bad)
retf
mov
and
mov
stc
jle
sbb
jle
jmp
mov
push
inc
or
xchg
idiv
inc
test
or
sub
retf
dec
mov
nop
sub
fiadd
pop
cmps
mov
inc
adc
mov
jns
out
jle
mov
in
add
(bad)
mov
imul
mov
mov
ffree
mov
movs
mov
push
dec
or
xor
ins
ja
jg
push
or
int3
cmp
push
add
mov
leave
es
add
xchg
ror
sub
cmp
adc
cmp
aas
retf
adc
in
arpl
adc
hlt
push
push
mov
cmp
shr
inc
push
in
xor
dec
leave
mov
daa
adc
enter
mov
inc
fwait
arpl
sbb
mov
int3
and
inc
arpl
mov
movs
pop
sbb
nop
sbb
inc
cmps
jg
ror
mov
das
xchg
mov
push
rol
push
mov
aaa
jnp
out
dec
ds
pop
div
mov
jge
aaa
jae
jae
add
rcl
nop
jp
ret
cmc
int
push
call
mov
mov
inc
mov
retf
xor
adc
popa
fisubr
popf
push
pop
mov
cmp
sub
les
sub
(bad)
mov
scas
mov
push
rol
pop
stos
retf
outs
mov
jns
cmp
dec
add
ds
cmp
and
ja
sub
ret
ds
loop
ins
js
xor
push
mov
(bad)
or
cmp
jecxz
js
jns
mov
out
mov
enter
ins
lds
rcr
mov
xchg
cmps
scas
(bad)
mov
add
inc
addr16
mov
push
add
ror
les
xor
and
push
jno
pushf
inc
jmp
sbb
cmp
psubq
adc
push
dec
(bad)
xchg
maxps
popa
popa
inc
out
sbb
inc
push
sub
call
cmp
pushf
xor
lods
lahf
xchg
mov
jns
stos
add
in
xchg
push
mov
mov
arpl
pop
icebp
xchg
mov
daa
cwde
jbe
inc
xchg
push
in
pop
adc
(bad)
mov
dec
addr16
ins
push
loop
push
into
pop
mov
push
jl
inc
cmps
movs
popf
or
inc
out
or
sahf
cdq
hlt
adc
test
pop
popa
xchg
popa
sbb
push
xchg
mov
test
addr16
jle
mov
jne
add
xchg
xor
iret
add
dec
pop
inc
push
les
das
dec
xchg
aam
push
cld
clc
and
or
cmp
push
push
pop
xchg
rcr
or
xor
mov
daa
(bad)
in
mov
mov
adc
fsub
gs
(bad)
xchg
pop
pop
das
(bad)
inc
push
mov
call
lods
psrld
dec
loop
or
popf
push
mov
or
xchg
push
popf
inc
xor
ins
adc
cs
sub
cmp
dec
xor
fcomp
jle
aas
sub
sti
inc
push
jg
ds
xor
loopne
jbe
push
inc
lods
mov
movs
jecxz
je
cdq
hlt
fucom
data16
imul
mov
clc
pop
inc
jno
push
mov
mov
mov
ds
push
shr
cmp
mov
dec
stos
sbb
add
rcr
dec
sub
mov
or
cmp
xor
je
ja
mov
aad
push
jmp
or
and
je
jle
out
hlt
je
mov
shl
leave
fst
lock
das
ins
ror
outs
and
inc
outs
lds
dec
scas
fidivr
stc
shl
ds
mov
ficomp
icebp
sub
fcom
sub
call
(bad)
adc
mov
or
pushf
jmp
sub
pop
scas
sub
mov
pop
mov
adc
bound
pusha
and
push
daa
ror
jno
cs
adc
outs
rol
cmp
cmp
int
push
or
add
dec
jae
xor
inc
mul
push
pop
std
int3
adc
out
and
push
bound
outs
or
add
test
and
out
pop
fadd
add
inc
int3
and
or
mov
xchg
cld
dec
and
fild
pop
cli
cmp
jge
popf
mov
mov
add
xchg
cmps
adc
pop
out
lods
shl
mov
mov
mov
xchg
arpl
inc
and
fwait
ins
call
das
in
lock
dec
retf
mov
xchg
(bad)
out
pop
mov
scas
into
fbstp
mov
aaa
(bad)
int
pop
mov
mov
gs
imul
mov
data16
pop
mov
sar
sar
or
sbb
icebp
inc
test
(bad)
out
xchg
(bad)
sub
mov
cs
dec
pop
mov
retf
out
adc
pop
les
imul
iret
mov
int
mov
dec
mov
das
dec
inc
sub
fst
cmp
and
push
xchg
test
pop
jl
sbb
inc
add
sar
fsubr
inc
pop
mov
mov
jle
movs
push
mov
(bad)
jo
cmp
pop
jns
cmp
cwde
ins
fs
jo
cmp
(bad)
mov
sub
fwait
pop
ins
jb
xchg
mov
mov
inc
add
js
cli
mov
ins
dec
fbld
mov
jae
mov
adc
aas
and
push
addr16
shl
or
int3
mov
mov
div
pop
and
lods
push
push
push
lds
in
out
add
cmp
xor
in
and
or
fisttp
inc
sub
push
xchg
adc
in
mov
(bad)
mov
inc
xchg
int
mov
add
xor
dec
fwait
repz
cmp
in
jl
fcmovb
add
sub
mov
fisttp
lods
and
test
xor
int
adc
xor
add
inc
dec
mov
push
in
mov
adc
cmps
mov
sub
xor
stos
pop
push
retf
and
repnz
pushf
sbb
push
adc
or
push
jge
inc
(bad)
aad
in
push
les
lods
ret
jae
cli
sbb
jns
jp
not
sub
and
sub
pop
jmp
xor
mov
mov
test
xor
pop
push
imul
push
(bad)
(bad)
jae
xor
xchg
jns
xlat
in
dec
xor
movs
mov
sbb
outs
and
mov
shl
pop
mov
int3
test
sub
and
(bad)
fild
fwait
int
aam
adc
pop
rcr
inc
mov
das
jecxz
scas
aaa
cmc
movs
push
mov
outs
cli
cs
sub
mov
cdq
mov
pop
cmp
js
retf
and
sbb
sbb
data16
pusha
sub
and
ja
sub
xchg
js
mov
push
inc
sub
mov
sbb
jno
sbb
inc
xchg
popf
mov
mov
push
lods
fwait
loop
pop
cdq
faddp
push
outs
add
aaa
push
fwait
(bad)
lods
cmps
lock
sbb
aas
aas
mov
xchg
pop
or
ret
jmp
hlt
popa
or
pop
not
es
sub
daa
imul
or
sbb
xchg
mov
sub
xor
dec
out
fld
add
test
aad
and
dec
(bad)
out
push
ficomp
add
dec
out
std
mov
das
xchg
cmp
lea
movs
pop
xchg
retf
in
mov
fwait
xor
push
cmp
pop
out
xor
adc
stc
sub
inc
mov
out
mov
mov
clc
jecxz
xlat
sub
in
add
js
sub
cmp
(bad)
cli
call
mov
mov
(bad)
pop
sbb
pop
jo
xchg
sahf
pop
outs
dec
scas
push
jmp
arpl
cmps
inc
icebp
dec
cmp
(bad)
fisub
push
jns
sti
adc
cmp
repnz
lock
je
repnz
adc
addr16
pop
inc
mov
mov
sbb
fldcw
test
mov
xor
cmp
xchg
fidivr
xchg
jge
or
mul
and
fwait
sbb
sub
or
in
sbb
mov
or
popa
hlt
aaa
fcom
cmp
adc
add
mov
or
mov
jns
mov
fldcw
adc
popf
mov
lea
push
(bad)
repz
cmp
outs
das
pop
adc
pop
test
adc
mov
movs
mov
pop
es
mov
xor
xor
cmovno
add
fs
outs
stc
scas
(bad)
clc
int3
loope
test
and
inc
cdq
fcmovu
sub
xor
outs
frndint
jae
pop
mov
inc
outs
retf
(bad)
xchg
push
jmp
push
add
pusha
fadd
gs
xchg
or
inc
stos
sbb
test
inc
ss
mov
mov
dec
mov
pop
mov
mov
addr16
outs
add
push
xor
out
xchg
ret
popf
mov
jbe
das
les
stc
sbb
mov
mov
scas
jne
lds
sti
fucomip
enter
in
mov
scas
les
fs
adc
mov
or
mov
retf
ins
sbb
sbb
pop
les
inc
jbe
clc
das
mov
aam
pop
mov
mov
xchg
das
gs
pop
(bad)
outs
add
xor
sub
loope
dec
inc
mov
mov
jmp
mov
add
xlat
bound
repz
push
push
adc
int
shl
sub
pop
aad
push
ds
hlt
dec
sbb
ret
mov
mov
adc
jo
jbe
mov
in
mov
cmc
mov
adc
inc
xchg
xchg
sbb
lock
dec
cli
sbb
xchg
or
pop
xchg
inc
push
out
inc
fs
mov
add
out
inc
fbld
iret
push
sub
push
sbb
test
mov
jno
lock
and
sub
inc
mov
nop
dec
add
add
xor
mov
or
pop
push
and
adc
call
hlt
inc
inc
dec
push
xchg
retf
ja
mov
lds
stc
lea
pop
nop
test
int
xor
mov
cmp
fprem1
inc
nop
(bad)
rol
in
and
sbb
aad
repnz
fsub
inc
or
sti
ja
xchg
ror
jnp
pop
movs
std
push
cli
add
xchg
push
clc
call
retf
dec
sub
mov
out
ficomp
ret
popf
push
add
adc
fdiv
mov
test
pop
call
xor
mov
hlt
cmp
inc
cmp
scas
jmp
int3
movs
xlat
sbb
mov
ds
bound
cmp
stos
popa
push
push
or
pop
mov
out
jnp
imul
and
jmp
or
movs
icebp
or
fidiv
jo
int
push
push
rcl
fadd
push
test
xor
int3
mov
push
out
sbb
call
add
jg
outs
inc
push
adc
arpl
adc
push
out
jge
popf
push
xor
mov
or
and
and
fwait
not
scas
imul
addr16
xchg
fcomp
addr16
ror
jecxz
xchg
stos
or
pop
adc
je
das
push
xchg
cmp
sub
and
sub
popa
fsubr
das
fadd
inc
adc
cli
add
fimul
jns
sar
fdiv
cmp
mov
push
call
push
jns
nop
inc
dec
mov
pushf
lahf
xor
nop
xor
push
sbb
sub
sbb
sub
pop
push
and
ret
out
xchg
and
or
jl
(bad)
in
stc
push
mov
and
or
or
outs
(bad)
mov
retf
jns
mov
jmp
stos
ror
sbb
mov
sub
in
inc
fstp
mov
push
in
xchg
pop
xor
icebp
jge
add
test
les
push
add
movs
or
sbb
sub
pop
scas
lea
push
in
inc
cmp
div
mov
fwait
adc
xor
repz
jae
test
enter
gs
cwde
cmp
push
cdq
shr
mov
jno
in
mov
stc
mov
inc
push
push
ficom
add
es
mov
cmp
bound
jge
push
test
push
repz
iret
stos
jb
shr
arpl
fld
add
xor
sub
mov
leave
hlt
xchg
loope
dec
dec
inc
out
cmp
aas
mov
bound
mov
xor
mov
pop
sahf
nop
push
fldcw
dec
out
push
add
out
movs
dec
(bad)
call
push
(bad)
push
or
xor
icebp
mov
cmps
mov
mov
dec
shr
mov
inc
mov
mov
ret
push
pusha
popf
and
or
jb
push
pusha
inc
sahf
(bad)
sti
inc
sub
jg
les
inc
xchg
ins
pop
iret
fwait
in
adc
sar
inc
loop
stc
fsub
in
das
and
sahf
iret
pop
xchg
dec
aam
push
jmp
jae
pushf
push
xor
mov
push
arpl
retf
push
mov
icebp
mov
les
push
sub
pop
sahf
mov
movs
mov
cs
add
add
sar
mov
or
(bad)
loope
arpl
cwde
cld
shr
call
cdq
jno
pop
push
aaa
shl
mov
cmp
and
add
lea
out
(bad)
cmc
stos
adc
mov
mov
in
add
bound
fild
jge
add
call
push
movs
into
(bad)
xchg
mov
add
psadbw
add
and
lahf
test
cmp
dec
fwait
mov
jmp
repz
scas
jb
mov
mov
(bad)
pusha
imul
out
loope
and
pminsw
out
push
jecxz
xchg
into
push
daa
(bad)
aam
push
xor
mov
bound
and
push
xlat
xor
jb
ss
mov
push
xor
xchg
push
jp
das
sub
jae
pop
ror
ss
test
cmp
xchg
sub
shl
sub
(bad)
into
add
and
sbb
clc
(bad)
mov
mov
fwait
arpl
sub
push
mov
pop
shl
arpl
lds
pop
pop
pop
imul
(bad)
ror
cmp
mov
mov
pop
mov
pop
in
xchg
leave
and
jg
imul
jne
mov
arpl
jae
idiv
fucomi
mov
push
cmc
sbb
pop
jns
or
mov
fild
mov
pop
xchg
mov
lods
xchg
mov
mov
inc
mov
jle
xchg
jg
pop
pop
rcr
rcr
mov
inc
sbb
cmp
inc
mov
mov
out
mov
mov
cmps
mov
jl
cs
sbb
and
jg
jbe
popf
lea
dec
fldcw
stos
adc
xchg
adc
push
cdq
in
jnp
dec
cmp
jl
or
mov
iret
pop
push
out
bound
retf
jl
or
inc
fdivr
popaw
out
cmp
retf
push
add
jecxz
sbb
mul
es
lods
daa
in
in
cld
jbe
out
mov
and
adc
(bad)
xchg
inc
xor
stc
cmp
test
inc
adc
add
call
push
fs
bound
mov
inc
pop
lods
xor
mov
icebp
sbb
xor
jecxz
cmc
out
sahf
xor
ja
or
in
fs
into
retf
loop
adc
cwde
shl
inc
xchg
sub
loop
lahf
cli
ror
ror
movs
adc
sub
mov
cmp
out
ja
xor
jo
call
jo
xchg
xchg
test
push
sti
or
nop
test
(bad)
gs
sbb
arpl
xor
sbb
les
sbb
mov
inc
out
pop
and
mov
sub
pop
cmp
shl
outs
arpl
mov
mov
jae
dec
sub
mov
inc
popa
stc
add
bound
cmps
loope
jl
xlat
outs
push
or
sahf
aad
fs
dec
call
in
xchg
test
mov
aad
inc
jmp
xchg
jmp
outs
int
lods
aas
jo
sbb
xchg
(bad)
rcr
fwait
mov
jg
push
out
xor
mov
in
sbb
xchg
and
cmp
jmp
or
jb
div
jbe
fsub
add
or
ss
retf
push
es
jp
or
inc
sbb
ja
fstp
lods
ins
aas
stos
aad
lock
push
jb
call
in
or
mov
fneni(8087
dec
inc
fdivr
xchg
ror
xlat
jae
xchg
pusha
popf
jmp
test
nop
xchg
adc
jno
out
mov
push
jle
push
scas
add
inc
adc
mov
je
jp
add
push
in
mov
push
sbb
rcl
mov
pop
xlat
ficom
inc
sar
push
or
loop
xchg
inc
jmp
popf
xor
clc
sahf
test
das
pop
lock
adc
pop
push
(bad)
jl
mov
dec
mov
mov
and
js
mov
adc
ins
pop
sti
cmp
and
retf
pop
gs
mov
ss
dec
aam
and
adc
push
push
jg
jnp
add
in
or
jbe
jmp
mov
cmp
pusha
mov
aam
sub
retf
sub
cmp
dec
daa
mov
shr
(bad)
inc
cli
cmp
hlt
imul
lock
xchg
nop
and
push
imul
test
mov
xlat
stc
jp
mov
push
(bad)
jmp
lods
mov
mov
or
inc
clc
sbb
fisub
and
pop
cmps
inc
outs
or
sbb
cdq
movs
mov
sub
fistp
push
jp
xchg
lods
mov
stc
pop
fmul
popa
push
cmp
pop
jbe
mov
loopne
aad
jg
rcl
or
adc
cli
test
ja
xor
enter
cmp
imul
push
add
dec
retf
xchg
mov
cmp
out
jg
jno
pop
dec
cmps
mov
and
adc
or
rcr
inc
sub
scas
mov
out
pop
std
mov
mov
mov
jmp
ja
mov
and
sub
int
xor
cdq
jo
js
mov
xchg
inc
cmp
dec
fucomip
std
test
push
in
pop
je
adc
arpl
(bad)
shr
dec
jg
cmc
sbb
cmp
dec
mov
jmp
lds
cmp
add
js
xor
clc
sub
cmps
je
fist
outs
xor
rcl
(bad)
mov
pop
and
or
fcom
dec
cdq
mov
out
or
ss
push
shl
mov
retf
repz
(bad)
adc
pop
jmp
iret
outs
lds
and
dec
add
(bad)
out
stc
fdivr
adc
popa
sbb
ins
mov
mov
mov
loopne
pop
je
in
cmp
idiv
adc
das
mov
xor
inc
cmp
retf
neg
pop
daa
pop
jno
lea
cmp
mov
and
enter
fisub
inc
xor
fwait
out
mov
jp
aas
jle
rol
adc
pop
mov
push
in
xchg
sub
jecxz
jne
xlat
jne
dec
shr
test
mov
movs
ror
cld
stos
xchg
adc
cs
clc
fs
lods
mov
test
dec
jb
cmp
test
or
sub
rol
fwait
icebp
cmp
dec
mov
aas
jb
cmp
pushf
pop
sbb
ss
data16
inc
pop
mov
sub
mov
mov
(bad)
ror
push
mov
outs
ret
jp
sti
js
sbb
ins
fisttp
push
mov
sub
mov
ret
jp
push
adc
fistp
ret
(bad)
sar
mov
arpl
sub
mov
or
fwait
inc
int
pop
scas
or
fdiv
dec
or
sbb
push
sub
addr16
sub
push
scas
loop
pop
cmp
and
adc
sbb
add
ins
adc
xlat
jbe
and
(bad)
dec
push
adc
add
push
js
fldenv
scas
mov
mov
xor
ds
repz
mov
cdq
bound
int3
icebp
mov
out
std
xor
xor
push
mov
jb
nop
or
sar
stos
into
push
push
fistp
repz
add
fadd
dec
and
pop
fdivr
cli
ffree
xor
fild
inc
lock
mov
cs
adc
add
popf
push
cld
push
mov
loop
and
pop
or
mov
or
xor
and
mov
add
test
and
adc
popf
mov
inc
int3
mov
xor
jnp
pop
push
ror
add
scas
or
aam
adc
push
and
push
cmp
lds
ret
lock
mov
fstp
push
pop
aad
in
movs
pop
popf
out
pop
outs
jle
jg
std
push
mov
imul
mov
pop
into
test
push
in
out
pop
ds
leave
pop
pop
adc
stos
inc
(bad)
(bad)
cwde
pop
jo
mov
add
dec
pop
pmulhw
inc
jecxz
mov
ss
in
dec
mov
sbb
ins
ins
xchg
pop
not
outs
mov
mov
ja
jecxz
data16
and
leave
cmp
cmp
popa
vandnpd
jmp
cmp
mov
aam
popf
loope
jns
push
add
in
jo
push
pop
ret
fwait
sti
push
xchg
xchg
pop
addr16
add
inc
adc
xor
scas
dec
retf
push
xor
(bad)
enter
push
test
or
mov
(bad)
retf
inc
cmp
idiv
cmp
pop
jae
fild
pop
inc
bound
add
jnp
fistp
push
inc
lods
fwait
call
cs
cmp
mov
aas
mov
dec
dec
gs
into
inc
into
pop
jmp
shl
xor
dec
sub
pop
mov
pop
sbb
je
xor
mov
imul
test
inc
dec
dec
jg
ss
push
mov
fild
das
imul
push
mov
inc
popa
sbb
mov
or
ja
call
push
fs
pop
mov
dec
pop
mov
sbb
sub
in
lea
xor
pop
jno
pop
mov
iret
ins
xor
movs
pop
and
dec
imul
pop
out
pop
sub
out
jo
test
fld
push
fist
mov
sbb
cmp
pop
pop
popf
stos
inc
mov
dec
outs
hlt
sub
sub
stc
xchg
sub
sbb
pop
push
rcl
mov
int
jne
jg
pop
sbb
adc
(bad)
(bad)
mov
adc
shl
pop
mov
pop
out
xchg
pop
mov
push
scas
mov
add
adc
xchg
retf
push
movs
(bad)
jle
push
and
mov
arpl
or
test
dec
pop
aaa
call
jae
pop
fld
and
mov
cdq
push
(bad)
ins
mov
dec
loop
aaa
in
mov
ret
sar
push
push
push
imul
ja
in
stos
lods
mov
shr
mov
push
stc
mov
out
test
jns
push
xchg
mov
shl
sub
and
push
and
and
aas
cmp
aas
in
jl
es
mov
or
mov
pushf
sbb
lods
inc
fisttp
inc
xchg
data16
mov
in
push
push
inc
or
jno
(bad)
stc
scas
mov
cmp
loop
mov
dec
addr16
mov
ins
push
adc
jmp
mov
sub
repz
fidiv
(bad)
int
xor
and
in
or
xchg
xchg
adc
repnz
mov
arpl
xchg
add
fnsave
mov
sbb
out
push
mov
popf
enter
mov
xchg
cs
(bad)
js
mov
aaa
movs
mov
out
retf
fld
or
sub
iret
fadd
inc
dec
push
stos
js
mov
(bad)
pop
lock
mov
push
fcmove
and
movs
sub
cmp
ret
repnz
pop
das
jmp
hlt
fimul
xchg
shrd
imul
mov
div
gs
jge
call
ror
jp
inc
fs
fldcw
pop
mov
test
cmps
fdivr
cmc
or
mov
xchg
cmp
push
or
int
ror
daa
xchg
inc
mov
dec
mov
(bad)
(bad)
cmp
ret
cmps
pop
out
movs
aad
xchg
sub
aas
pop
inc
cmc
mov
scas
das
xchg
mov
xchg
adc
movs
pop
pop
adc
sub
dec
xor
mov
mov
dec
gs
rol
cmp
rol
out
es
cmps
aam
(bad)
xlat
cmc
lea
fstp
mov
sbb
jae
sub
ds
inc
mov
mov
shr
xor
cmc
jle
add
mov
mov
inc
adc
in
arpl
jbe
fs
inc
nop
jne
lock
popf
mov
add
jle
xor
inc
ret
or
sub
jp
repz
out
xor
pop
fld
stos
inc
xchg
int3
xchg
dec
ficom
loopne
xor
cmp
out
outs
not
mov
test
xor
mov
pop
or
xchg
cmp
cmps
adc
ja
push
arpl
add
xchg
inc
dec
icebp
adc
das
jg
cli
push
mov
push
mov
sbb
pop
mov
ss
lahf
inc
out
retf
sub
ins
cmps
mov
in
sub
jp
je
int
std
push
mov
inc
in
mov
stc
(bad)
dec
hlt
inc
adc
mov
rol
mov
outs
imul
or
jns
addr16
aad
cmp
jp
xor
mov
jmp
daa
and
sbb
sbb
cmc
pop
sub
icebp
je
or
data16
fsub
cdq
xchg
mov
adc
popa
out
xchg
add
pop
mov
ror
inc
cmp
jae
jle
mov
mov
aas
xchg
push
add
sub
push
retf
ins
scas
and
jno
sbb
arpl
movs
loop
adc
or
cld
push
rcr
fwait
pushf
(bad)
int3
jge
jbe
aam
inc
sbb
jp
pop
mov
jp
xchg
sbb
outs
xor
xchg
or
imul
xchg
push
or
and
mov
neg
mov
fldpi
push
xor
sar
dec
sub
nop
stos
movs
mov
mov
leave
nop
xchg
xchg
les
jns
test
xor
mov
push
xchg
(bad)
aaa
call
or
xlat
mov
lods
inc
mov
dec
jge
test
cmps
ja
inc
sub
or
enter
and
push
sbb
mov
pop
jge
mov
inc
mov
icebp
cli
fsubr
cli
fnstsw
outs
mov
mov
sbb
jmp
stos
pushf
imul
push
xchg
aam
xchg
outs
lods
or
cli
mov
hlt
mov
fist
sub
mov
fimul
jnp
popa
xor
mov
push
movs
aas
shl
sub
test
pop
in
fwait
(bad)
ins
hlt
lds
cmp
mov
pusha
sbb
aad
inc
mov
(bad)
pop
xchg
sti
mov
pop
imul
data16
mov
(bad)
int3
dec
cdq
sets
push
xor
mov
sbb
stc
inc
mov
cmp
loopne
ins
push
daa
jbe
std
test
or
lods
es
dec
fisubr
xor
inc
daa
mov
inc
daa
and
lea
push
ja
vmovaps
inc
ins
out
int3
pop
je
push
addr16
pop
pop
fdivr
out
and
aas
fisub
iret
dec
syscall
mov
cmps
rcl
push
aam
cld
outs
gs
(bad)
dec
sar
mov
or
or
fsubrp
cmp
add
xor
in
out
fwait
out
lahf
dec
jns
mov
pop
or
pop
and
push
sbb
mov
and
or
cs
pop
in
pop
int
arpl
in
mov
cmc
outs
cmp
and
int3
adc
daa
scas
ds
jp
fcmovnb
mov
int3
inc
daa
mov
out
cmps
retf
adc
pop
pushf
sbb
xchg
inc
sbb
(bad)
xchg
es
inc
test
movs
sar
cmps
aas
cmp
push
mov
jbe
push
daa
mov
into
dec
add
outs
adc
shr
mov
shr
mov
mov
add
sar
test
adc
or
pop
fmul
les
(bad)
loope
sub
inc
stos
ror
add
push
push
(bad)
mov
push
je
lods
pusha
adc
fwait
mov
mov
dec
pop
bound
div
hlt
jg
pop
ins
xchg
jmp
pop
aaa
scas
bound
imul
mov
fld
pop
mov
push
mov
jnp
xchg
dec
add
xchg
add
std
add
ins
pop
pop
es
imul
mov
jmp
pop
ret
mov
(bad)
test
ror
lahf
test
dec
mov
inc
inc
rcl
pop
leave
enter
lods
das
or
test
jp
mov
nop
sub
xchg
sub
clc
fisubr
mov
sbb
mov
jle
aaa
aam
into
rcr
sbb
(bad)
mov
out
scas
div
mov
inc
loop
jae
ds
inc
dec
fisttp
sahf
imul
rol
dec
pushf
xchg
xchg
mov
lahf
pop
sub
sub
aad
out
xor
mov
imul
push
push
pop
push
(bad)
arpl
imul
mov
mov
lock
ror
fistp
add
xchg
mov
dec
in
imul
pop
add
ret
mov
push
pop
pop
sub
stos
fcmovb
fbstp
lahf
fstp
add
and
jns
lock
mov
push
lock
imul
pop
jnp
push
dec
xchg
stc
xchg
pop
pop
les
mov
lods
into
jp
add
mov
call
hlt
mov
into
mov
mov
stc
cmps
addr16
data16
movs
push
pop
adc
mov
jmp
mov
push
dec
add
jmp
loopne
js
cmps
out
mov
mov
shl
sahf
aaa
xor
xlat
in
xor
test
call
adc
pop
call
pop
pusha
push
and
shr
fiadd
inc
test
push
pop
jnp
inc
fsubr
sub
cmps
js
jmp
das
and
xchg
ffree
dec
stos
pop
sub
push
test
sti
sub
inc
retf
shr
loope
adc
dec
sbb
ins
cmps
(bad)
sti
pop
adc
test
ins
daa
ds
jb
and
jns
xor
push
dec
push
outs
stos
push
test
sbb
cwde
imul
je
cmc
push
adc
loope
sub
xor
adc
pop
sti
out
inc
push
mov
mov
adc
(bad)
aas
jns
dec
pop
test
loope
(bad)
adc
push
sahf
aam
in
test
movs
push
xchg
cmc
out
scas
ror
pushf
xchg
jl
sar
mov
sub
test
inc
xchg
jnp
dec
cmp
mov
add
clc
aas
movs
jae
mov
mov
outs
test
call
and
fdivrp
mov
in
inc
in
aam
in
repz
sub
inc
outs
push
fld
arpl
shl
out
stos
xchg
or
cmp
popf
or
inc
shr
sbb
mov
push
jns
cwde
enter
xchg
inc
(bad)
lock
pop
dec
(bad)
rol
add
lahf
pop
xor
mov
shl
dec
aam
icebp
and
pop
and
sub
arpl
sbb
js
int3
jg
imul
ins
inc
fwait
push
loop
xchg
or
pop
sidtd
mov
(bad)
push
pop
in
lea
(bad)
or
loopne
(bad)
gs
push
inc
fs
cwde
xor
ja
adc
clc
and
out
(bad)
(bad)
mov
call
iret
jbe
and
mov
mov
outs
hlt
ror
push
mov
adc
inc
jnp
mov
adc
int3
(bad)
sub
jns
mov
mov
push
lods
repnz
push
mov
mov
rcl
cmp
push
jmp
xchg
push
and
add
imul
(bad)
ficom
hlt
mov
cli
dec
repz
aad
pop
or
mov
pop
test
adc
push
dec
mov
cmp
xlat
dec
push
addr16
adc
scas
dec
lock
movs
pop
dec
jae
mov
xchg
push
mov
shl
adc
push
mov
addr16
jbe
jmp
mov
and
inc
pop
mov
or
not
mov
xchg
retf
dec
jl
mov
adc
fsubr
lock
ss
shr
push
faddp
adc
imul
push
shl
cwde
cmp
cs
es
push
push
test
es
sar
cmp
push
nop
(bad)
pop
cmp
xchg
adc
int3
sbb
iret
cmovne
push
pop
outs
(bad)
fwait
mov
sbb
pop
cwde
mov
push
or
dec
or
dec
push
enter
call
sbb
or
sub
nop
dec
pop
fst
int
into
(bad)
scas
shr
mov
in
jmp
jnp
or
cmps
adc
in
jo
(bad)
jbe
out
mov
cs
in
lds
push
call
mov
shl
and
jno
adc
sub
or
push
ds
and
out
or
cmp
pop
push
outs
and
mov
retf
xchg
adc
adc
dec
mov
push
cmp
iret
dec
(bad)
sbb
mov
adc
and
loope
frstor
daa
cdq
xchg
aam
xchg
pop
retf
and
test
xchg
cmp
or
mov
jbe
push
jmp
mov
inc
add
loope
cmp
xchg
shr
mov
jmp
inc
push
pop
xchg
pop
inc
aaa
les
(bad)
adc
push
lock
ins
es
mov
or
pop
ds
out
and
fisttp
aad
cmp
loopne
out
jns
shl
vcomiss
addr16
(bad)
fucomi
adc
fsubr
pop
jae
sbb
jns
pop
loopne
jns
in
scas
in
nop
pop
hlt
bnd
sub
add
stc
(bad)
cwde
sub
fstp
call
ds
xchg
fdiv
adc
stc
cld
add
loopne
jne
popf
mov
popa
ja
(bad)
jns
jp
push
push
pop
pop
mov
push
add
inc
test
jne
jns
sub
in
scas
adc
das
test
jecxz
in
dec
jb
mov
int
sub
inc
or
jae
push
les
test
mov
jbe
jb
pop
popf
add
add
push
dec
scas
call
mov
fisubr
std
leave
jg
je
imul
jg
cmp
xchg
jmp
pop
inc
mov
iret
xor
sub
or
xchg
mov
pop
(bad)
and
dec
mov
mov
fcmovb
cmp
cmp
xchg
pop
ror
ss
jb
test
nop
je
sbb
popf
add
inc
aaa
add
inc
inc
nop
cmp
lahf
and
retf
sbb
pusha
mov
adc
ss
fnstenv
movs
cld
stos
ret
push
(bad)
pop
std
mov
xchg
pop
addr16
dec
arpl
cmc
jmp
cmps
mov
imul
pop
mov
jne
sahf
and
ss
lea
call
repz
inc
cmp
cmp
(bad)
mov
lods
add
retf
repnz
retf
repz
push
outs
nop
xchg
xor
ds
in
cwde
and
xchg
lock
and
addr16
imul
add
mov
push
pop
nop
or
inc
stos
test
jae
loop
cmp
xor
stos
leave
dec
cmps
and
or
xlat
les
xchg
mov
lods
push
arpl
push
fistp
jmp
xchg
test
aaa
sub
pop
mov
cmps
or
sub
mov
jmp
cmps
mov
push
cmp
jb
push
pop
dec
pop
sbb
das
inc
dec
jp
dec
sbb
cmc
add
cmp
sti
sbb
mov
push
lea
mov
jmp
adc
lahf
mov
jge
ins
jae
dec
outs
adc
clc
bound
fadd
sub
adc
sbb
daa
sub
push
ja
push
sbb
(bad)
xchg
jae
mov
push
jno
stos
cmp
cmps
dec
sbb
ins
(bad)
push
loope
jl
pop
sar
lods
xor
(bad)
xchg
(bad)
sbb
scas
movs
sub
inc
jl
sub
jne
iret
jecxz
outs
retf
xlat
push
cmp
popa
repz
loopne
out
loop
dec
adc
imul
lock
inc
and
inc
xor
cmps
aas
inc
cmp
aam
adc
pop
dec
jp
retf
mov
xor
pop
xchg
pop
dec
aaa
in
cli
movs
mov
lds
fwait
push
dec
mov
(bad)
xor
adc
and
dec
mov
mov
out
rol
and
pop
fistp
call
in
sbb
push
pop
inc
push
xchg
lahf
fadd
xor
inc
sub
sti
mov
and
popf
pusha
sbb
inc
xchg
not
mov
les
ss
xor
ret
es
lods
out
nop
push
call
loop
cmps
and
std
pop
(bad)
pop
and
fdiv
(bad)
and
inc
movs
inc
xchg
fxch
add
push
movs
and
mov
pop
inc
dec
outs
xchg
stos
inc
or
aas
retf
jmp
sub
sbb
cmp
outs
jecxz
xor
fimul
pop
push
jno
push
push
test
lahf
push
dec
mov
pop
mov
fdivr
jno
pop
mov
call
dec
and
shl
jp
pop
rol
cmp
xor
mov
mov
icebp
stos
or
cmp
push
cmc
xchg
shr
sbb
outs
mov
mov
hlt
in
mov
fnstenv
mov
sbb
test
sbb
push
mov
test
ins
test
lahf
cmp
mov
in
add
in
pop
mov
jmp
lahf
jne
fisttp
sti
dec
les
xchg
xor
xchg
mov
push
in
stc
push
in
mov
or
adc
mov
ror
xor
jno
ins
shl
orps
popa
aas
mov
(bad)
in
jmp
add
and
popa
test
cmp
sbb
mov
jmp
push
push
or
out
push
repz
les
dec
mov
push
dec
jmp
push
(bad)
cli
pop
mov
(bad)
xor
adc
fstp
call
xor
stos
daa
cmp
adc
imul
xlat
movs
retf
and
push
sub
push
int3
test
dec
stc
ror
std
scas
loopne
sub
ficomp
out
iret
test
mov
aas
mov
in
dec
out
and
cmp
pop
pop
test
inc
push
sub
cs
xchg
and
out
scas
scas
jmp
pop
sar
or
cmp
jle
jmp
out
jnp
test
mov
adc
cdq
push
or
xor
pop
and
jns
xor
and
sbb
mov
arpl
aam
ins
push
pop
mov
out
sbb
push
das
aas
out
fist
aas
adc
mov
retf
inc
adc
sub
das
xchg
bound
adc
xor
jecxz
out
jp
inc
push
mov
dec
neg
repz
adc
cld
nop
pushf
xchg
jecxz
cmp
xchg
das
xchg
out
mov
sub
or
ins
adc
loopne
jl
add
mov
and
dec
and
rol
test
retf
clc
fst
retf
in
mov
jl
sub
cmp
mov
adc
push
je
sub
rol
leave
dec
ss
imul
dec
mov
pop
or
bnd
sbb
lods
and
xor
pop
mov
inc
call
ja
pushw
fwait
mov
fbstp
lock
pusha
ds
or
inc
enter
(bad)
dec
int
add
int3
xchg
pusha
or
sbb
lahf
ret
out
aam
adc
out
push
data16
jle
jbe
jo
(bad)
lods
xchg
outs
lods
dec
ret
cdq
pop
xor
sbb
aas
mov
fist
mov
bound
push
fiadd
ins
outs
pop
in
lods
jp
fld
cwde
nop
xor
lea
xchg
mov
push
fidivr
int
add
sahf
rol
jl
popf
je
mov
ret
out
inc
xor
repz
fwait
adc
(bad)
inc
sbb
push
int3
outs
lods
lahf
mov
jnp
and
xchg
push
(bad)
mov
sbb
push
adc
inc
sahf
xor
sbb
psubsw
icebp
pop
or
retf
push
in
xlat
aas
in
and
lods
test
mov
inc
fidiv
jecxz
sbb
addr16
fwait
fs
retf
add
movs
mov
inc
or
adc
je
adc
retf
cmp
cs
push
fdivr
ficomp
shr
shl
adc
xbegin
or
sbb
test
or
xchg
dec
jb
mov
and
jmp
scas
cmp
(bad)
out
aaa
push
stos
inc
xor
xchg
jnp
out
mov
das
outs
ret
out
ins
sbb
loope
cld
mov
push
shr
sbb
mov
in
dec
jecxz
adc
cmc
dec
cwde
ss
ins
dec
sbb
pusha
mov
mov
imul
test
xor
and
outs
loop
jle
shl
imul
dec
sbb
test
loopne
imul
dec
sub
out
inc
aad
sub
mov
jb
test
sub
sub
mov
push
pusha
rcr
xchg
in
fisttp
leave
sub
fist
out
xchg
jae
or
lea
scas
int
(bad)
es
out
js
ffreep
bound
inc
fwait
add
mov
lods
pop
icebp
sbb
sub
test
push
outs
mov
fld
or
outs
add
inc
adc
pop
(bad)
adc
iret
push
mov
(bad)
mov
in
push
loopne
popf
sub
lods
or
div
addr16
lds
ja
ror
pop
out
pop
in
lahf
jle
adc
shl
sub
or
rol
cdq
cmps
cmp
lds
lahf
aas
rcl
repnz
add
and
stos
(bad)
aad
xor
mov
cli
ret
rcr
push
mov
inc
retf
and
cmps
mov
mov
arpl
pop
sub
mov
cmc
idiv
(bad)
out
pop
pusha
fcomp
add
adc
jecxz
xlat
jge
pop
stos
jns
push
sti
mov
jle
call
fistp
inc
popf
repz
mov
call
sbb
cld
jp
call
std
mov
jns
sub
(bad)
aas
sti
test
daa
aad
sti
imul
push
adc
in
(bad)
or
mov
mov
jmp
movs
mov
xchg
cmp
aas
xor
adc
fdiv
daa
mov
loope
sar
call
jbe
retf
or
aam
sbb
sbb
in
ds
or
pop
push
add
gs
push
xchg
in
es
(bad)
jl
das
inc
sub
cli
lock
push
popa
xchg
pop
mov
popf
mov
dec
mov
xor
mov
inc
ret
adc
stos
ret
jmp
dec
inc
fs
retf
cmps
mov
addr16
add
add
lock
sub
inc
test
mov
jmp
pop
shr
or
(bad)
dec
pop
or
xchg
sar
dec
ins
in
push
pop
ja
mov
daa
out
cmp
rcr
mov
pop
test
inc
nop
inc
fiadd
mov
or
push
cmp
cli
aam
jb
xchg
loope
jo
fisttp
loopne
mov
jnp
cmp
inc
xchg
stc
out
jmp
lock
sub
mov
daa
bound
outs
pusha
fdiv
(bad)
scas
push
test
xor
sub
and
sub
cli
daa
pop
adc
sbb
out
cmc
add
jp
jns
mov
or
daa
add
repz
xchg
cmps
inc
sub
pop
outs
pop
call
or
inc
xchg
(bad)
or
fidivr
mov
mov
call
mov
retf
or
jecxz
jge
mov
jo
xchg
in
mov
aaa
scas
hlt
add
fadd
add
out
je
popf
jg
push
out
xchg
push
addr16
xchg
je
daa
push
adc
inc
mov
mov
pop
sbb
rol
arpl
mov
sti
lods
stos
adc
adc
sbb
inc
out
dec
enter
imul
repnz
sbb
stos
fbstp
inc
call
dec
in
not
jo
jno
cmp
or
(bad)
jne
(bad)
test
inc
lock
ss
les
icebp
mov
xchg
loop
mov
jns
jge
fwait
sahf
mov
iret
out
push
jecxz
or
push
jo
sbb
retf
test
loop
icebp
mov
jb
ins
or
addr16
fs
scas
and
fldz
test
es
jno
inc
in
mov
clc
ret
cmp
out
jp
or
dec
shl
jmp
pop
addr16
aad
pop
pusha
jge
jl
es
loopne
fdivr
pop
js
sub
ja
or
mov
addr16
mov
lahf
(bad)
cmp
fdivr
popaw
pop
inc
daa
cwde
adc
in
pushf
mov
out
dec
pop
add
cmp
mov
test
mov
adc
add
pop
dec
adc
push
push
mov
scas
xor
adc
mov
ins
jne
(bad)
and
jl
stos
mov
stos
in
cli
jnp
jmp
push
fs
cmp
push
int3
shr
jmp
mov
popa
jb
sbb
ror
jne
les
gs
stos
into
sub
add
adc
dec
bound
aas
test
getsec
dec
shr
aad
test
mov
inc
addr16
cmps
xor
and
enter
xchg
jecxz
xchg
test
jns
push
xor
xchg
ss
mov
sub
rol
outs
aas
stos
or
dec
xor
push
movs
add
mul
jb
loopne
sub
xchg
pop
mov
fisubr
mov
and
icebp
cmp
retf
ret
mov
mov
dec
jle
and
(bad)
lock
sbb
xchg
cdq
xor
jbe
imul
and
das
sub
push
jae
push
pop
mov
in
nop
les
ins
inc
xchg
fnsave
cld
into
ret
je
ja
jecxz
scas
add
mov
mov
mov
jns
out
sar
mov
scas
stos
push
jmp
mul
(bad)
jmp
or
cmp
sub
sbb
fdivr
mov
out
jge
push
or
push
aam
es
or
in
xchg
leave
sbb
inc
sbb
fcom
dec
add
stos
test
and
mov
in
sbb
xchg
mov
and
aaa
jnp
aam
hlt
jecxz
push
xor
popf
(bad)
xor
or
dec
push
retf
xor
mov
pop
inc
or
jnp
nop
pop
and
lahf
(bad)
int
and
sub
int
sti
pop
sbb
out
xor
mov
jp
in
leave
movs
popf
lock
lock
xor
mov
inc
das
mov
mov
jne
jecxz
push
inc
mov
add
int3
aas
jb
add
in
and
ja
shr
mov
sub
jg
push
dec
push
ds
(bad)
loopne
pop
(bad)
ror
jmp
jae
cmp
into
xor
pop
dec
inc
test
sbb
fs
jbe
xor
mov
ret
gs
add
cmps
fisttp
pop
push
push
push
adc
sbb
jns
mov
pop
cld
test
jae
inc
in
mul
std
mov
out
iret
stos
in
loop
out
into
dec
lahf
bound
inc
xchg
loop
idiv
pop
xor
jbe
repz
ss
inc
mov
cdq
sub
fnstenv
mov
leave
sbb
hlt
mov
jl
mov
int3
fcmovu
aaa
cmc
leave
aaa
(bad)
int3
push
leave
sbb
push
inc
xchg
mov
add
dec
dec
out
in
inc
mov
mov
shl
jbe
movs
loop
mov
push
or
and
mov
cli
fs
out
imul
pop
ins
imul
lahf
lock
movs
xor
inc
lods
add
jnp
and
xchg
aaa
int3
and
jne
out
movs
(bad)
call
cmc
daa
out
and
sbb
adc
mov
xchg
aad
adc
outs
(bad)
mov
mov
add
adc
stos
out
icebp
cmc
int
popf
(bad)
jbe
and
pop
ret
pusha
adc
ins
ja
cmps
jmp
and
or
out
loope
dec
aas
inc
int3
cmc
in
test
mov
and
lock
test
out
sub
jl
push
je
cmp
mov
sub
jbe
into
stc
movs
cli
(bad)
inc
popa
mov
xchg
in
fbstp
or
add
push
sbb
sbb
aaa
inc
sti
pop
push
aam
lahf
xchg
xor
popf
and
dec
lods
sbb
jg
mov
sbb
sub
mov
cld
dec
adc
mov
in
inc
sbb
adc
clc
add
cmps
mov
mov
ins
or
xor
pushf
mov
in
stc
and
or
jno
shl
enter
push
cld
add
jbe
mov
cwde
mov
sahf
scas
add
jl
or
jge
ror
rcl
lea
or
cmp
dec
ds
push
cmp
iret
idiv
imul
btr
and
in
push
cdq
test
and
into
enter
fild
movs
xchg
cmp
mov
adc
or
xor
clc
jo
xchg
jmp
xchg
stos
or
pop
add
xchg
pop
mov
test
dec
ss
int
or
xchg
aaa
sahf
gs
cmp
adc
xor
jne
mov
push
dec
daa
or
mov
mov
loopne
mov
cmp
jp
leave
sahf
jmp
scas
adc
mul
inc
pop
sti
push
dec
ins
push
out
callw
shr
add
out
or
cmps
sub
js
adc
jbe
aad
data16
out
mov
repnz
cmp
sbb
arpl
movs
addr16
dec
shl
xor
cmp
and
mov
les
adc
sbb
adc
arpl
dec
aam
dec
mov
push
cmc
inc
lock
xchg
int
les
pop
cli
mov
mov
iret
ss
cmc
cli
and
sub
sbb
lods
aaa
imul
push
test
js
enter
and
xchg
inc
addr16
or
mov
sub
push
jge
xor
aas
(bad)
xor
or
rol
arpl
int
cmp
xchg
(bad)
adc
call
pop
mov
xor
in
mov
inc
jp
popf
mov
or
pop
push
in
xor
dec
jne
mov
rcl
(bad)
jecxz
mov
push
push
dec
pop
xchg
in
mov
xchg
or
(bad)
adc
or
cmp
shl
dec
cmc
xor
or
adc
test
and
push
inc
inc
psubsw
cmp
sub
xchg
dec
fs
sbb
stos
retf
cmps
cmp
clc
ins
fstp
push
mov
jmp
adc
(bad)
jmp
cmp
xor
in
sbb
out
cmps
test
dec
add
cs
fnstcw
fcomp
test
bound
sbb
mov
sbb
arpl
daa
jle
mov
ret
lahf
outs
sbb
mov
test
call
mov
xor
shl
xor
mov
push
add
out
xor
mov
fidivr
(bad)
mov
or
cmp
mov
inc
rol
aad
mov
push
cld
in
sbb
cmp
sbb
aad
adc
test
sahf
in
xchg
and
pop
mov
popa
in
bound
enter
das
mov
hlt
and
or
push
or
and
rol
das
sbb
pushf
sti
adc
push
test
in
xchg
je
jne
add
gs
xor
fst
(bad)
out
test
adc
aam
not
mov
push
mov
pop
out
jmp
jg
xor
test
sub
stos
das
and
sub
ss
scas
dec
push
imul
inc
hlt
dec
sub
add
and
sbb
pop
jae
(bad)
in
push
sbb
cmps
out
mov
push
shl
mov
push
pop
cmp
cmps
cld
cmp
aas
out
add
pop
xchg
mov
ins
aam
dec
xchg
repnz
jmp
jmp
ins
stos
sub
retf
not
cmps
das
div
stos
mov
mov
jg
cmps
push
inc
and
mov
cmp
xchg
iret
adc
sub
cs
loope
dec
pop
iret
sub
mov
pop
stos
jp
jno
and
jne
xor
cmp
lock
add
dec
and
or
mov
pop
in
sub
arpl
inc
ja
mov
dec
adc
push
mov
retf
xor
out
pop
xor
(bad)
in
or
sbb
pop
inc
or
pushf
pushf
in
and
loope
(bad)
sub
dec
or
sub
cmp
xor
or
jecxz
je
push
lds
adc
fdivr
popf
pop
cmp
retf
inc
dec
enter
int3
inc
xchg
xchg
loop
stos
outs
dec
gs
cmps
dec
in
in
and
ins
sub
dec
scas
cmp
stos
retf
scas
les
das
jmp
mov
mov
retf
aas
les
repz
test
pop
inc
int
cmp
int
mov
arpl
mov
xor
js
ja
movs
out
adc
inc
fucomi
(bad)
retf
mov
int
jmp
arpl
pop
jge
pop
dec
jmp
cmp
jmp
adc
fisub
cmp
cmp
lahf
jns
mov
jp
fcmovnbe
mov
shl
adc
addr16
jg
mov
mov
jo
fsub
or
push
pop
fsub
in
jo
mov
push
mov
mov
in
mov
and
sbb
sar
cmp
mov
rcr
and
mov
shr
and
in
pop
call
jecxz
push
and
pop
mov
jp
sub
test
cld
add
push
or
adc
adc
inc
fmul
dec
push
jecxz
fsub
in
jmp
dec
shr
push
cmps
jbe
popa
sbb
jne
in
stos
(bad)
push
mov
push
daa
pop
lods
aas
addr16
adc
xor
bound
bound
sbb
inc
jb
adc
xor
mov
adc
jne
push
aaa
or
jl
mov
lock
leave
sub
push
retf
(bad)
hlt
enter
in
or
or
out
fwait
out
push
mov
cmp
fcom
sub
retf
cmp
hlt
ja
hlt
sub
jne
mov
xchg
mov
cmp
xchg
ss
mov
xor
call
inc
hlt
test
cmp
and
push
cmps
mov
cmp
out
add
sub
retf
clc
adc
inc
xor
mov
sub
stos
retf
(bad)
xacquire
mov
lds
inc
test
scas
dec
mov
mov
aad
push
ret
inc
vzeroupper
mov
push
adc
xor
jecxz
mov
pop
loope
and
data16
push
xchg
ret
push
inc
jmp
pop
ss
adc
rcl
fwait
and
fmul
jge
jmp
mov
and
icebp
pop
dec
int3
pop
arpl
daa
push
lea
pop
and
jns
or
stos
iret
push
ja
fistp
cmp
or
cmps
hlt
jp
cmp
dec
les
jnp
push
pop
rcl
mov
fld
ins
sti
test
aam
imul
mul
sbb
pop
icebp
pop
stos
and
jmp
sti
mov
(bad)
push
mov
or
inc
xor
retf
dec
sbb
xchg
mov
dec
jg
jmp
jno
sbb
push
sbb
jb
in
xchg
sub
iret
ret
sbb
lds
call
pusha
retf
fld
lds
cld
and
pop
cdq
and
sbb
jo
arpl
out
pop
pusha
sub
push
pop
test
jne
cdq
inc
or
cmp
push
outs
inc
call
cmp
xchg
pop
adc
xchg
mov
pop
xor
adc
mul
loop
scas
fcmovnb
or
mov
xor
jp
mov
push
or
xor
pop
push
push
pusha
loope
in
pop
ret
xchg
mov
pushf
mov
js
or
xchg
jmp
inc
test
popf
jno
jbe
mov
arpl
xchg
mov
in
pop
cmc
ror
fisub
inc
jecxz
jae
xchg
xchg
popf
mov
inc
inc
js
push
arpl
ret
inc
xchg
dec
sbb
mov
bound
jae
jge
cmp
retf
mov
pop
idiv
das
mov
mov
cmp
jp
arpl
es
xchg
mov
mov
imul
imul
loopne
scas
sub
in
dec
bound
loop
pop
adc
neg
inc
call
sub
sub
je
xchg
sub
cmps
in
addr16
imul
mov
les
mov
jecxz
je
fs
shl
out
and
in
mov
mov
adc
adc
mov
cmps
xor
xchg
ret
dec
arpl
xor
cdq
in
out
in
dec
inc
adc
sbb
xor
jne
pop
jnp
inc
jl
pop
retf
aaa
mov
cmp
jnp
retf
and
dec
fadd
rol
mov
shl
sub
jbe
pop
mov
push
jae
stos
xchg
pop
jbe
xchg
imul
das
loopne
or
adc
fisubr
cmp
int3
push
mov
pop
lods
dec
jle
push
mov
repz
movs
lock
inc
leave
das
les
mov
jp
dec
stc
jmp
mov
xor
lea
jb
imul
jl
add
cdq
test
jns
jnp
call
call
out
stos
xlat
(bad)
mov
aam
dec
add
and
push
int
inc
idiv
ret
dec
sbb
cmp
sbb
(bad)
and
cwde
retf
mov
xor
addr16
jecxz
push
call
pop
cmps
in
inc
jo
fidiv
mov
fidivr
les
imul
mov
push
pop
call
and
push
sbb
call
imul
pop
dec
jne
int3
std
jg
pop
mov
add
sbb
jbe
or
lea
mov
jmp
fadd
je
inc
jne
push
inc
sub
push
xchg
fidivr
lods
mov
jbe
(bad)
push
cwde
sbb
xchg
ds
jnp
sub
inc
cli
or
sbb
(bad)
pop
cmovle
sbb
pushf
adc
add
dec
cwde
cmp
push
imul
or
xchg
mov
shl
movs
scas
xor
sub
xchg
dec
xchg
pop
stos
ret
sub
cmp
jge
dec
inc
jg
sub
(bad)
call
or
jns
mov
xchg
jg
sbb
or
cs
or
mov
aaa
cmc
dec
in
call
iret
(bad)
sbb
inc
and
std
jg
rcr
jle
stc
pop
sbb
js
dec
mov
test
sbb
mov
loope
out
sub
(bad)
xor
add
mov
std
add
int
push
mov
div
retf
mov
jg
inc
fdivr
pop
add
and
sub
cdq
ins
gs
jns
and
push
push
inc
call
outs
sysenter
jl
jmp
call
inc
movs
pop
and
jb
out
test
pop
dec
push
rcl
test
aam
sbb
aad
push
mov
cld
and
xchg
fiadd
leave
cmps
in
stos
or
dec
loope
mov
and
or
pop
(bad)
test
push
xor
cmp
mov
sub
jmp
fnsave
jecxz
jno
test
in
jecxz
dec
cmps
pop
mov
jge
sub
loope
adc
dec
hlt
int3
sbb
sar
test
xchg
vpunpcklwd
pop
enter
push
sub
(bad)
rol
fcmovne
js
cmp
call
and
cdq
int
fldl2t
pusha
pop
call
jbe
mov
gs
xchg
(bad)
fisttp
ins
inc
jg
adc
xchg
shr
outs
retf
lock
push
dec
or
in
(bad)
push
sbb
shl
lds
and
in
sbb
movs
jg
mov
jp
mov
push
int
out
imul
movs
or
push
adc
(bad)
fmul
jns
cmp
movs
(bad)
xchg
xor
or
jno
mov
jge
mov
(bad)
sbb
xchg
jnp
add
jmp
jmp
dec
pop
push
xlat
xchg
pop
jo
push
mov
fist
call
cld
push
mov
cli
jmp
xor
jo
inc
dec
jns
jns
iret
dec
lea
or
dec
jp
into
dec
mov
inc
add
jle
push
mov
mov
dec
and
mov
mov
sub
sub
or
cmps
dec
adc
push
pop
inc
xor
in
push
or
scas
xchg
jae
inc
push
imul
add
fild
data16
add
sub
adc
rol
adc
mov
xor
add
retf
and
or
push
jl
mov
enter
jbe
add
jno
loop
sar
fld
add
inc
arpl
(bad)
das
pusha
pop
retf
sub
fstp
mov
shl
gs
lock
adc
xor
jmp
and
mov
mov
(bad)
loopne
ja
sbb
in
scas
adc
aas
sbb
push
dec
in
cmp
and
(bad)
sub
out
xlat
add
scas
dec
jbe
fs
and
mov
fld
in
push
int3
cmps
bound
xor
mov
shr
dec
std
xchg
mov
scas
mov
in
out
lods
mov
xor
pop
cmpxchg
mov
push
sbb
fwait
ins
jecxz
stc
cmps
shr
(bad)
pushf
(bad)
mov
pop
push
sub
push
pop
cld
sbb
fmulp
mov
push
mov
jns
sub
cmp
mov
ss
aad
push
mov
idiv
shl
(bad)
xchg
sub
pushf
sub
sub
out
enter
sub
add
sbb
(bad)
mov
mov
mov
shld
stos
(bad)
cmps
fld
iret
lahf
jg
iret
dec
out
das
lods
loope
pop
inc
loopne
adc
pop
imul
sub
push
cmp
pop
movs
jle
mov
pavgb
dec
sbb
cmp
xchg
push
scas
inc
hlt
(bad)
paddsb
enter
push
mov
loope
stc
aad
sbb
inc
out
aas
arpl
in
mov
inc
push
adc
jle
pop
pop
xchg
xchg
add
xor
dec
mov
gs
pop
aas
jp
jge
xor
mov
(bad)
daa
push
xor
jmp
mov
aaa
pop
fmul
dec
repnz
(bad)
add
lods
cmps
sub
push
xor
dec
mov
jmp
dec
and
pushf
mov
cmp
pusha
das
inc
jge
(bad)
aaa
pop
jge
inc
sahf
sub
sub
mov
pop
or
test
out
xchg
and
vpor
in
test
idiv
add
fimul
(bad)
xchg
jg
sub
cmp
(bad)
mov
or
stos
fild
lsl
sti
sub
cmc
xor
je
jg
ins
mov
lds
ficomp
bound
dec
pop
ss
retf
int
inc
shl
ret
adc
push
adc
lods
dec
xchg
retf
imul
js
or
adc
jno
psubsw
scas
fdivr
dec
fld
test
add
pop
iret
iret
xchg
ret
stc
imul
out
xchg
fs
int
ins
call
pop
inc
push
ficom
jge
add
daa
int
and
aam
repnz
gs
xchg
nop
cs
xlat
nop
enter
jg
dec
fild
aas
mov
cmps
and
cld
test
dec
out
jle
into
dec
push
fadd
inc
adc
data16
aaa
retf
xchg
push
jmp
sar
sahf
fnstcw
add
ja
jp
popa
mov
es
and
aas
imul
ss
cmp
inc
lods
adc
int
mov
stos
jo
aam
or
dec
sub
inc
movs
xchg
pop
test
jmp
fnstenv
xchg
add
xor
sub
repz
or
jl
mov
cmps
xor
jno
mov
pusha
add
sbb
pop
jge
aam
xor
test
lds
retf
outs
mov
pop
and
or
in
mov
push
ss
mov
dec
sbb
jecxz
xor
(bad)
stc
xchg
dec
cs
adc
mov
pop
pop
mov
push
data16
dec
sbb
xchg
inc
and
nop
mov
jmp
in
ret
or
mov
push
cmps
idiv
imul
xor
adc
sar
shl
out
dec
push
(bad)
pop
lea
push
int
es
add
inc
xor
int3
jo
pop
mov
cmp
pop
add
push
call
in
jg
mov
sbb
cmps
push
pop
push
test
cmp
dec
or
retf
mov
sbb
add
xchg
test
movs
sbb
xchg
sub
pop
pop
(bad)
stos
pop
add
in
push
dec
cmp
sub
xchg
hlt
or
pop
jp
push
adc
(bad)
(bad)
mov
sbb
sub
aaa
fdivp
pop
out
outs
shl
cdq
loop
ins
sub
cmp
xchg
sbb
movs
and
cwde
stos
fnsave
inc
repnz
cmp
mov
je
add
xchg
out
cld
data16
ret
pop
rcr
jo
push
ins
jg
repnz
xor
push
lods
es
xchg
out
aad
push
ret
cmc
loope
add
int3
or
pop
ins
out
pop
(bad)
inc
es
xchg
inc
cmp
sbb
cli
sbb
retf
aaa
nop
xor
xor
mov
sti
arpl
inc
scas
and
pop
jle
add
xchg
(bad)
outs
add
xor
into
ins
std
and
dec
loope
and
imul
fwait
add
xor
and
add
jp
aam
inc
mov
(bad)
mov
lods
jno
imul
sub
je
ds
lods
aas
xchg
jnp
sub
and
mov
sti
cmp
not
mov
xchg
cs
jmp
jecxz
mov
jecxz
js
add
bound
addr16
dec
ret
and
lods
sub
stos
test
and
and
aam
mov
sbb
int
fadd
repz
mov
adc
mov
mov
adc
push
ret
jo
(bad)
jne
stc
mov
mov
out
sbb
push
aas
in
sub
mov
jae
cmp
ja
test
imul
cmp
retf
sub
psubusb
fcom
push
sbb
add
lock
add
or
adc
(bad)
icebp
outs
jo
sub
(bad)
outs
push
lea
add
scas
aas
mov
inc
popa
dec
push
dec
ins
sub
sbb
push
add
add
shl
push
hlt
stc
sub
push
loope
sub
outs
adc
push
(bad)
call
mov
div
pop
mov
pop
mov
aam
add
dec
sub
add
je
xor
gs
cmp
test
xchg
xlat
fld
add
mov
mov
add
jbe
ret
adc
dec
popf
icebp
into
push
aas
ds
mov
add
shl
repnz
out
push
add
(bad)
outs
mov
retf
jecxz
pusha
sti
and
cmp
into
xchg
(bad)
inc
dec
sub
push
(bad)
dec
dec
lea
sbb
lea
mov
int3
and
pusha
push
inc
or
xchg
jb
dec
and
mov
jmp
and
and
or
test
jns
adc
iret
fs
dec
push
lds
addr16
fsub
add
add
in
outs
xor
mov
push
mov
xchg
push
push
push
push
pmaddwd
pop
std
jecxz
ins
or
call
mov
mov
pushf
pop
jno
or
lods
test
iret
loope
imul
call
push
xor
mov
(bad)
jle
hlt
or
inc
int
add
out
fdiv
cmc
adc
ja
mov
(bad)
fldcw
jp
jmp
jnp
daa
add
inc
mov
test
xlat
shl
fld
pop
in
mov
adc
pop
mov
(bad)
(bad)
cmps
cdq
adc
aam
adc
test
stos
fdivr
lahf
xor
(bad)
xor
pop
or
mov
loop
or
cmp
cmp
push
aad
js
pushf
pop
pusha
jecxz
mov
xchg
mov
retf
cdq
pop
sbb
ins
stos
jge
repz
jg
dec
push
sub
sti
mov
arpl
dec
xor
repnz
ret
mov
xor
sar
loopne
jnp
fadd
nop
mov
pop
call
fdiv
inc
hlt
mov
sbb
retf
lds
add
pushf
mov
adc
jmp
mov
les
stc
cmp
dec
out
jl
pop
jg
adc
daa
in
and
pushw
dec
mov
push
das
push
lds
adc
in
dec
mov
dec
std
dec
cmp
(bad)
dec
pushf
dec
dec
cmp
mov
inc
call
fld
mov
inc
fdivr
mov
aad
nop
ins
lock
fbld
call
cld
sub
hlt
xor
jno
fucom
mov
mov
jmp
mov
mov
leave
imul
call
add
movs
jno
adc
loop
sbb
loop
test
movq
out
or
retf
leave
adc
or
inc
retf
add
imul
sub
outs
pop
popa
fiadd
rcr
sbb
sahf
in
ficom
aas
inc
arpl
xchg
in
add
dec
aam
outs
std
dec
push
je
gs
mov
inc
fnsetpm(287
inc
push
mov
arpl
xchg
xchg
femms
test
jl
sub
or
loop
aad
out
push
and
add
stos
pusha
gs
repnz
fimul
sbb
mov
std
hlt
mov
out
test
and
mov
xchg
xor
pop
fsubr
pop
adc
or
sub
stos
ret
cmps
xor
les
sub
dec
(bad)
loop
push
adc
or
cmp
into
cdq
xchg
mov
or
mov
jbe
mov
repz
fmul
add
mov
jecxz
ja
mov
sti
xchg
data16
xor
popf
adc
je
sub
push
and
sar
adc
jb
jp
mul
inc
pop
or
arpl
shl
xchg
sbb
mov
jne
repnz
mov
mov
xchg
ja
mov
mov
das
into
ins
std
rcr
add
fs
add
movs
pop
dec
ja
cmp
push
jp
pslld
adc
mov
push
dec
pop
adc
push
leave
xor
(bad)
popa
cld
mov
xlat
cld
ret
jns
mov
nop
loopne
rcl
hlt
xor
xor
popf
cmps
jne
mov
cmc
test
(bad)
or
fistp
cmp
pop
sar
cwde
sub
test
xchg
(bad)
scas
sbb
lock
lea
(bad)
cdq
and
push
dec
pop
xchg
xor
jbe
mov
mov
sbb
sub
sbb
mov
mov
add
aad
xor
xchg
or
arpl
int
retf
jmp
pop
inc
pop
aaa
jp
adc
das
movs
or
stos
inc
test
data16
in
(bad)
out
push
lods
sbb
sahf
and
aas
int3
mov
adc
sbb
xor
push
mov
call
pop
sbb
adc
dec
nop
fs
inc
push
add
fnstcw
int3
xchg
xor
push
mov
mov
adc
cld
mov
sbb
fdiv
and
sub
xchg
or
sti
repnz
les
or
mov
xor
data16
push
and
mov
mov
cmp
movs
ja
xor
(bad)
(bad)
mov
stos
test
jle
ins
jnp
jg
pop
jp
aam
cmp
push
int3
outs
adc
aam
jns
sbb
jl
mov
cmp
mov
xor
dec
mov
aam
sub
aaa
fcomp
add
xadd
add
(bad)
jecxz
xor
movs
mov
popf
daa
push
test
mov
clc
mov
lods
and
xor
aas
and
mov
xor
gs
call
je
mov
mov
mov
loopne
or
sub
jecxz
push
lock
cmp
pop
fsubrp
fs
fcmovb
pop
shl
shl
iret
in
das
fs
mov
pop
mov
popf
adc
popa
xchg
out
add
cmp
dec
jmp
or
cld
sbb
add
leave
xchg
pop
sub
mov
pop
push
fsub
mov
jl
sar
iret
repz
leave
(bad)
sub
or
xor
ret
movs
or
adc
int
push
popf
js
inc
xchg
push
adc
push
sub
sbb
js
clc
imul
cmps
in
pushf
sub
out
xchg
in
(bad)
popa
call
repz
shl
adc
retf
lea
xor
int3
(bad)
repnz
jge
and
mov
jno
sub
or
inc
sbb
loop
pop
mov
adc
push
ds
std
mov
repz
sub
into
lds
adc
sub
xchg
int
and
out
and
inc
xchg
sbb
ins
mov
ins
xchg
pop
mov
sub
cmp
ret
sbb
and
in
jl
jno
cdq
dec
xchg
push
inc
or
std
sti
xor
jns
pop
jmp
int3
inc
jbe
popa
das
pushf
mov
jmp
xor
cmp
push
cdq
stos
pop
mov
push
push
outs
gs
in
ret
cwde
push
push
iret
mov
pop
mov
mov
cmps
sahf
call
or
dec
stc
(bad)
sti
jecxz
and
cmps
push
ror
idiv
push
jle
bound
imul
movs
lods
mov
xor
mov
mov
js
pop
(bad)
xchg
dec
dec
std
sub
xchg
mov
sub
scas
sub
fistp
jno
push
lods
mov
mov
movs
cli
inc
jecxz
pusha
sbb
leave
data16
in
icebp
xor
sub
loope
dec
(bad)
or
inc
mov
jecxz
cli
mov
ret
rcl
sub
out
jge
out
fucomip
or
push
mov
sub
mov
pop
enter
out
jl
dec
sbb
jne
rol
jno
nop
(bad)
lock
inc
mov
(bad)
div
jl
xor
(bad)
call
pop
xchg
ds
out
shl
mov
mov
xor
jnp
lods
inc
hlt
jno
test
or
loope
dec
(bad)
xlat
xlat
test
iret
in
data16
or
lds
xor
cmps
adc
loop
mov
push
push
xorps
sub
mov
or
xchg
xchg
ret
call
inc
mov
(bad)
lea
scas
mov
sbb
cmps
cmp
aas
packssdw
xchg
jae
fnstenv
or
ds
add
pop
xor
mov
aam
mov
adc
(bad)
test
fidiv
push
out
(bad)
out
inc
jmp
in
fst
test
mov
push
mov
pusha
jo
and
(bad)
jae
jl
add
push
push
out
shl
cld
push
test
test
cmc
ss
outs
in
mov
sub
int
sub
cmp
mov
xor
inc
fiadd
push
mov
mov
loop
nop
xlat
jb
mov
mov
test
pusha
test
add
mov
pushf
out
int3
sub
cld
jg
inc
les
jne
in
and
xchg
jbe
int
and
int3
imul
or
mov
jmp
jge
rcl
loopne
rol
add
cmp
repz
test
jb
js
fisttp
jl
adc
push
cmp
pop
or
sub
mov
imul
push
sub
mov
jae
pinsrw
shr
inc
fsub
je
pop
push
mov
(bad)
push
retf
std
leave
mov
lock
lock
sbb
xor
pop
mov
fistp
pop
or
sbb
push
mov
retf
scas
das
push
inc
dec
pop
push
dec
jmp
sub
mov
imul
call
mov
mov
movs
jne
(bad)
xor
and
push
movs
jo
push
call
mov
lods
or
(bad)
mov
push
mov
jmp
add
push
push
jne
fnclex
adc
retf
aas
movs
xchg
aam
dec
jle
(bad)
loop
pop
push
in
jg
cmp
bound
inc
pop
push
(bad)
xchg
xor
push
cli
fsubr
mov
div
mov
addr16
add
dec
mov
addr16
mov
pop
lods
mov
mov
xchg
inc
in
fisub
mov
adc
mov
jns
xchg
out
sbb
inc
repnz
or
loopne
pop
repnz
or
sub
adc
mov
jne
mov
adc
lods
push
repnz
xor
pop
push
ja
outs
test
fsub
(bad)
clc
xchg
jge
xor
(bad)
out
lock
cmp
test
push
add
test
retf
mov
mov
xlat
jle
aas
mov
in
or
test
test
xor
sbb
mov
sbb
gs
or
sar
lea
dec
in
cmp
xchg
and
gs
stos
cdq
push
pop
sub
(bad)
lahf
inc
loope
(bad)
in
sbb
pop
popf
cdq
inc
cdq
push
lods
pushf
cmp
in
popf
pop
cld
or
xor
pusha
adc
aad
add
outs
xor
inc
popa
and
pop
mov
pop
inc
ds
jnp
hlt
je
ds
sbb
xor
lea
or
add
(bad)
rcr
inc
jl
int
stc
add
mov
rcl
call
add
push
in
mov
out
sbb
imul
xchg
stc
mov
adc
jbe
stc
les
fs
ret
ficomp
dec
int3
mov
ss
pop
fsub
mov
das
adc
jecxz
and
lods
xchg
pop
in
in
cmovae
enter
xchg
add
mov
mov
sbb
imul
leave
fild
mov
adc
adc
(bad)
arpl
adc
stos
cmc
mov
cwde
push
ins
les
sahf
push
cmp
aam
mov
jne
scas
mov
cmp
sti
sahf
js
retf
in
out
dec
xchg
xchg
mov
mulps
popf
scas
fwait
lock
xor
pop
push
mov
and
xchg
pushf
test
js
fwait
sti
ja
fxch
mov
and
(bad)
movs
xchg
fwait
inc
adc
scas
stos
pop
daa
dec
mov
mov
xchg
sub
repnz
outs
mov
or
mov
jne
inc
sub
ja
push
mov
mov
lock
ret
movs
aas
jg
dec
pop
loop
stos
mov
mov
or
adc
iret
hlt
pop
jle
xchg
cmps
clc
cmp
fldenv
lods
mov
adc
pusha
ins
push
jge
mov
ds
and
ret
sub
pop
jmp
imul
inc
movs
push
push
dec
xor
hlt
shr
xor
dec
rcr
cmp
(bad)
sub
push
retf
inc
stos
out
inc
cwde
(bad)
mov
push
xchg
adc
mov
pop
imul
xchg
mov
or
xchg
dec
push
mov
inc
sar
pop
sti
and
jle
(bad)
jmp
fsub
fs
cdq
adc
aas
cmp
and
cmp
aaa
pop
shl
repz
(bad)
mov
adc
test
sti
cmp
xchg
loope
js
test
stc
xchg
mov
sub
ja
adc
xchg
mov
cmp
pusha
sub
loope
mov
mov
mov
xchg
repz
mov
mov
mov
adc
push
inc
retf
adc
and
sar
imul
adc
mov
je
fs
iret
push
jle
gs
pushf
in
xor
jb
jne
add
push
popa
inc
add
js
(bad)
ja
cmp
or
inc
pusha
loopne
mov
mov
mov
lahf
push
xchg
arpl
push
jno
popa
les
sbb
popf
fcom
xchg
push
mov
ins
repnz
pop
or
stos
cmps
sar
jg
in
and
sbb
pop
leave
and
ins
daa
in
and
(bad)
sub
lds
xchg
cli
shl
popa
std
mov
fist
cmp
pop
jecxz
sbb
sbb
sti
pop
lock
add
fld
push
push
jp
inc
adc
je
xor
sbb
icebp
pop
mov
mov
xchg
cmp
add
les
test
sbb
(bad)
lea
xchg
inc
dec
push
mov
inc
jp
addr16
sbb
dec
out
push
add
dec
arpl
cmp
push
or
pop
adc
push
pop
jne
and
cs
sub
icebp
in
adc
leave
mov
jecxz
sub
xchg
std
xchg
sbb
popa
jge
lods
adc
ins
or
cmp
sub
out
mov
retf
shl
add
adc
mov
stos
sbb
inc
je
jge
shl
sub
xor
test
adc
out
dec
popa
ds
imul
sub
mov
rcl
imul
or
ja
(bad)
cli
push
clc
out
ror
or
scas
cmp
jl
mov
push
pop
ret
sbb
test
xlat
xchg
mov
int
jl
jnp
in
out
inc
fucomi
push
in
pop
mov
adc
mov
pop
inc
push
scas
mov
sti
push
sti
and
cmp
adc
dec
or
call
mov
and
repz
dec
xor
dec
push
sbb
je
jge
mov
add
or
pop
mov
ror
lock
hlt
rol
inc
retf
mov
(bad)
adc
inc
xor
mov
lds
pop
les
pop
bound
sbb
or
lods
scas
xlat
sub
jbe
cmp
sti
retf
xor
add
fsubr
cwde
cld
cmp
mov
add
movs
outs
sbb
fwait
movs
push
(bad)
mov
sbb
imul
jmp
inc
ror
(bad)
test
xchg
pop
mov
xchg
jnp
push
fs
sbb
mov
rcl
push
das
mov
scas
pop
mov
mov
pop
mov
cmp
(bad)
ficomp
add
fcmovu
and
popf
fcomi
addr16
mov
(bad)
dec
cmps
mov
in
aas
pop
movs
(bad)
jecxz
test
dec
push
mov
add
push
movs
cmc
ja
imul
or
adc
cdq
cmp
mov
repnz
mov
repz
sbb
push
(bad)
mov
shl
push
cli
into
cld
or
cmp
cmp
shr
loope
jmp
in
jno
cmc
jmp
sbb
dec
mov
jp
and
aas
xor
retf
div
pop
cdq
mov
std
jo
cwde
xor
mov
adc
enter
(bad)
sti
mov
mov
jge
hlt
mov
mov
jecxz
add
dec
add
mov
int3
add
loope
xchg
loope
mov
ret
push
mov
add
xchg
mov
xor
sub
xor
inc
jns
(bad)
push
neg
iret
xchg
ret
cwde
pushf
out
gs
mov
cmp
mov
stos
(bad)
mov
mov
arpl
mov
add
jmp
(bad)
loop
in
outs
or
mov
lods
mov
(bad)
bnd
push
call
test
cmp
int
cmps
push
fwait
call
pop
or
rcl
test
xlat
hlt
cmp
iretw
(bad)
and
imul
mov
pop
xor
or
movs
imul
out
xchg
mov
pop
(bad)
push
mov
mov
add
sbb
dec
pop
jl
(bad)
add
inc
repnz
nop
call
inc
xor
xor
pop
xchg
jge
aaa
push
push
cwde
jle
sbb
loopne
sbb
sub
gs
in
jmp
mov
dec
mov
arpl
jge
mov
es
dec
rcr
xchg
call
jnp
enter
(bad)
mov
push
dec
pop
mov
cmp
fbld
ins
in
lock
ret
mov
adc
jbe
test
(bad)
pop
sub
popf
mov
cmp
push
out
cmp
add
jge
or
int
mov
add
and
loope
sub
das
and
inc
pop
or
pop
aad
sets
movs
fstp
xchg
int
(bad)
pop
push
mov
push
jns
mov
xchg
(bad)
bound
stc
mov
cmp
pop
mov
movs
dec
adc
pop
add
(bad)
dec
xlat
cmp
mov
push
pusha
pop
sub
aam
mov
mov
int3
push
loopne
jl
lea
inc
in
mov
loope
push
push
push
push
jnp
jno
ja
lock
adc
(bad)
retf
jge
lods
in
loope
pop
pop
popf
push
pop
hlt
inc
sub
mov
cmp
pop
mov
daa
lock
sbb
popa
fsubr
gs
add
jo
cmp
fcmove
les
cmp
pushf
jnp
inc
xchg
je
mov
out
mov
das
adc
sahf
pushf
inc
(bad)
xchg
add
retf
rcr
mov
xchg
push
or
popf
lea
mov
ins
jae
mov
cmp
les
jbe
sub
ret
inc
mov
arpl
(bad)
jmp
xor
xchg
xchg
fsub
stos
sbb
ja
add
sahf
jb
les
adc
sbb
ror
mov
(bad)
fst
jns
xchg
jmp
and
out
xchg
(bad)
jecxz
and
push
(bad)
int3
std
jae
retf
lods
cmp
xchg
pop
outs
test
push
out
xor
enter
and
hlt
cwde
std
retf
and
xor
jle
clc
inc
aad
test
sbb
cwde
call
mov
in
push
push
(bad)
cmp
(bad)
outs
and
lods
dec
out
aaa
dec
es
cmp
add
std
add
jns
sar
mov
jns
mov
pushf
dec
stos
gs
mov
xchg
sti
mov
jl
stos
test
je
test
mov
lahf
test
in
and
aaa
and
xor
sbb
(bad)
xchg
repz
dec
jl
xor
lods
xchg
jp
jmp
cs
jbe
mov
ja
pop
out
sbb
stos
out
out
adc
fwait
aas
inc
sub
mov
cdq
adc
xor
(bad)
and
mov
adc
xchg
sub
xor
push
cmp
cmps
adc
fwait
cmp
or
bound
mov
cs
fld
xchg
(bad)
cmp
push
add
xor
and
add
fcmovb
mov
mov
int3
sub
imul
jbe
out
mov
pusha
daa
mov
sbb
mov
(bad)
pop
xchg
idiv
push
ret
push
scas
inc
or
xchg
in
test
sbb
leave
pop
cli
(bad)
ror
jl
jne
push
stos
or
add
in
ret
lea
jno
cmp
push
int3
pop
adc
sub
enter
mov
cmps
mov
dec
dec
iret
add
cs
dec
fdivr
mov
push
xchg
repnz
std
cmp
pushf
push
jge
sti
cdq
rol
retf
popa
dec
cmps
xchg
push
rcl
pop
xchg
outs
xchg
stos
inc
mov
cmc
out
or
mov
cwde
cmp
sbb
dec
jb
jne
jl
or
jmp
or
sbb
ins
aas
aaa
lock
sbb
add
jo
jp
mov
mov
lods
dec
add
aaa
bound
xchg
fnstenv
dec
sahf
outs
retf
dec
fadd
stos
and
mov
sahf
push
mov
mov
(bad)
aaa
pop
xor
repz
ja
in
daa
xor
in
mov
pop
(bad)
(bad)
je
adc
inc
adc
cdq
add
xor
mov
imul
mov
mov
fstp
xchg
and
xchg
mov
mov
or
ror
neg
pop
lods
mov
mov
lds
movs
or
js
and
dec
sar
push
fimul
aas
sub
jae
in
mov
movs
xchg
int3
outs
(bad)
mov
mov
sub
test
fiadd
leave
mov
out
xor
js
or
push
loope
mov
ins
add
repz
jo
push
pop
sbb
pop
jae
iret
jg
ja
or
es
shl
(bad)
push
scas
xor
test
lahf
dec
cli
or
sub
sbb
clc
cmps
arpl
int
and
adc
pushf
(bad)
call
outs
xchg
pop
jmp
ror
mov
mov
push
inc
jecxz
idiv
lahf
push
repnz
mov
sahf
add
mov
adc
fnstcw
fsubr
test
loop
cld
sbb
test
test
adc
test
mov
xor
xchg
cmp
jp
xor
xchg
ss
ret
shr
lds
push
in
mov
inc
sbb
jb
or
(bad)
out
rol
adc
push
rcr
jmp
inc
and
test
add
gs
push
xor
(bad)
xchg
(bad)
sub
mov
popw
dec
inc
jbe
push
fld
repz
push
jecxz
icebp
int
push
daa
addr16
add
out
mov
xchg
lds
cld
rcr
mov
jp
xor
pushf
bound
jns
push
cmps
out
pusha
mov
push
test
mov
aaa
rcl
push
aaa
in
sbb
daa
and
mov
and
rol
sub
mov
sbb
and
push
frstor
(bad)
test
test
add
sbb
aaa
idiv
mov
ror
popa
lds
jae
or
or
stos
sbb
inc
mov
push
or
mov
or
jmp
sbb
cli
rcl
into
fmul
dec
mov
pop
int3
cs
jno
pop
inc
jmpw
fidivr
pop
push
sub
arpl
lds
add
xor
cmps
push
rol
inc
out
mov
xchg
ds
jbe
adc
add
imul
add
dec
loope
jle
neg
sub
je
cmp
cld
dec
xor
pop
mov
sbb
mov
xor
xor
lds
daa
mov
das
xchg
icebp
adc
stos
xlat
pop
adc
pop
dec
mov
adc
xor
push
das
xchg
or
xor
fstp
nop
push
popa
(bad)
mov
pop
stc
jg
loope
das
aad
hlt
push
adc
cld
loop
sub
mov
jno
mov
cdq
sar
bound
jmp
(bad)
scas
pop
push
ds
test
and
adc
lahf
or
loope
jnp
mov
jmp
dec
push
bound
cmc
mov
cmp
leave
rcr
dec
je
aad
sbb
data16
ss
fwait
mov
mul
popa
and
ja
in
or
popa
push
pop
mov
xchg
jmp
aam
iret
out
jg
xor
push
mov
mov
cmps
ss
lods
xchg
inc
jnp
sbb
out
out
push
mov
loopne
adc
(bad)
jg
sbb
cmps
jp
scas
leave
pop
das
mul
mov
mov
push
js
cmp
cmp
fidiv
xor
jo
pusha
dec
xchg
mov
aam
push
jae
movs
and
arpl
movaps
pop
xor
lahf
pop
(bad)
scas
jno
push
inc
jmp
pop
xchg
iret
xor
aaa
movs
ja
es
dec
sar
lahf
push
das
xor
call
mov
add
mov
add
loopne
cmp
add
imul
cmp
cmp
lods
jb
cmp
(bad)
fist
inc
mov
sbb
jle
adc
invlpg
fsub
sbb
es
out
xlat
adc
add
jl
call
inc
xchg
add
les
scas
outs
scas
xchg
and
push
pop
inc
or
call
fnstenv
cli
repz
push
(bad)
mov
je
and
outs
xchg
jno
adc
mov
pop
or
ins
mov
clc
jbe
rol
jae
mov
enter
mov
leave
sub
xchg
sbb
test
and
sub
call
mov
pushf
aaa
xchg
mov
shl
xchg
inc
mov
iret
pop
rol
add
add
mov
aad
inc
call
arpl
mov
in
mov
repnz
cmp
pop
enter
sub
repz
pop
std
push
dec
iret
push
sub
call
add
movs
xchg
test
pop
xchg
inc
jbe
lds
stos
jp
mov
scas
fisttp
mov
fld
xchg
jne
fwait
ja
mov
push
(bad)
out
adc
jb
add
inc
enter
jle
(bad)
jns
push
push
leave
mov
inc
xor
call
cmps
call
sbb
xchg
mov
dec
repnz
jns
add
and
aam
aad
xchg
push
ins
jge
jle
icebp
cdq
jo
pop
jge
xchg
sub
xor
std
pop
call
cmp
cmp
xor
dec
push
das
add
jecxz
clc
or
dec
cmc
nop
jbe
xor
ss
mov
jae
leave
mov
push
test
into
bound
mov
test
sbb
xchg
aam
cmp
pop
popa
dec
and
mov
loopne
jge
pop
push
dec
lahf
stos
std
hlt
int
inc
pop
dec
adc
in
xchg
ds
add
in
push
jge
xor
movs
cdq
pop
repz
mov
push
dec
imul
pusha
int3
int
bound
out
test
fst
xchg
pushf
retf
scas
lods
xchg
pop
sbb
sbb
dec
sbb
pop
jb
mov
add
add
add
rcr
inc
daa
and
sti
xor
fadd
push
add
popa
and
fs
mov
sub
push
fst
and
(bad)
add
cs
loop
shl
mul
ret
mov
retf
mov
pop
cmp
retf
push
xchg
push
mov
adc
push
cdq
push
clc
cdq
push
js
xor
pop
sbb
hlt
in
mov
retf
cmp
div
xor
(bad)
stos
pop
xchg
jl
mov
adc
les
es
pusha
sbb
pop
or
mov
ja
jne
pop
ins
aam
in
mov
test
ret
hlt
jecxz
pop
ret
scas
dec
inc
push
je
cwde
sti
sub
inc
dec
in
dec
lahf
ror
in
inc
out
push
push
stos
cmps
jo
sub
into
mov
stc
sbb
pop
jecxz
in
adc
js
push
fidiv
sti
arpl
sbb
les
loopne
jne
dec
imul
jg
das
or
mov
ss
arpl
adc
mov
push
dec
jne
in
outs
lods
aaa
jne
or
mov
test
stos
clc
pushf
lds
push
in
fs
(bad)
push
cdq
arpl
inc
std
std
xchg
cli
cmc
adc
adc
xor
jae
ficom
lea
add
shl
sub
inc
arpl
jle
inc
or
and
mov
sbb
push
test
add
adc
mov
out
xlat
cli
xchg
daa
and
inc
cmc
mov
mov
mov
cmp
cmp
aaa
sbb
popa
lods
and
adc
jae
mov
xchg
out
pushf
or
cmc
add
mov
mov
fs
fbld
cdq
daa
stos
mov
jmp
dec
sub
jge
cwde
lahf
fadd
scas
mov
fcmove
(bad)
sub
dec
leave
cmps
cmp
pop
mov
pop
cmps
test
push
arpl
sub
inc
call
and
add
stos
sub
and
or
inc
dec
call
ud2
jnp
push
addr16
push
push
imul
cmp
add
and
cmp
fild
fdiv
jne
jbe
dec
enter
xchg
xchg
and
(bad)
stos
add
lea
popf
adc
push
pop
mov
pop
and
mov
pop
cmp
retf
repnz
ret
je
test
dec
or
inc
bound
cmp
lods
pop
and
dec
push
ins
(bad)
jne
dec
inc
ja
cmp
dec
outs
dec
inc
dec
xchg
imul
lods
arpl
xchg
in
xrelease
ja
mov
imul
push
sbb
daa
cmp
add
clc
gs
mov
push
xchg
scas
loopne
xchg
mov
jmp
pusha
and
dec
cmp
xchg
nop
or
outs
ficom
xlat
jp
call
xor
cmps
rol
sbb
(bad)
es
cmps
rcl
movs
push
cdq
mov
mov
ror
and
push
loopne
inc
test
pushf
dec
dec
les
sbb
rcl
jecxz
sbb
and
sub
and
jmp
push
jle
loope
cmp
enter
dec
adc
js
fwait
leave
gs
cs
mov
jbe
das
out
push
xor
push
jmp
cdq
test
fiadd
into
add
dec
enter
cmps
jg
repz
dec
fcmove
pop
jb
mov
test
arpl
test
and
mov
sbb
imul
and
and
imul
call
or
outs
xchg
das
leave
outs
test
adc
lock
mov
shr
dec
stos
rcr
or
out
jge
call
out
aas
outs
(bad)
(bad)
call
std
mov
aad
inc
div
call
pop
pop
loope
scas
popa
aam
fidivr
pop
aaa
xchg
(bad)
out
pop
pop
lock
inc
push
xchg
cmc
out
out
inc
mov
xor
js
ror
add
test
or
repz
xor
test
adc
push
adc
stos
in
xchg
xor
addr16
sbb
fist
adc
fs
icebp
fstp
jg
push
xchg
outs
push
xchg
pop
jle
loope
repnz
setg
add
iret
fisubr
push
mov
in
aam
inc
mov
outs
xchg
sub
mov
je
push
adc
sti
mov
iret
jg
add
lock
(bad)
ds
in
gs
add
xor
xlat
sbb
push
and
sti
repz
mov
lods
mov
sub
fwait
or
cs
dec
or
and
sub
mov
cli
loop
into
outs
cmp
cld
data16
repz
mov
call
dec
sbb
or
add
out
ror
outs
das
push
xchg
js
test
xchg
sub
sti
movs
icebp
cli
pop
or
fisub
push
aas
fnstsw
ins
test
into
xor
jo
xor
jo
cmp
cmp
mov
outs
(bad)
aam
lods
lea
mov
lds
pop
loopne
or
push
jns
scas
adc
jge
clc
mov
adc
adc
dec
jnp
and
repz
mov
in
xchg
(bad)
fld
mov
cmp
aas
inc
mov
sbb
jns
xor
iret
mov
inc
cdq
pop
mov
fnsave
lods
mov
int
data16
push
mov
aaa
(bad)
aad
push
stos
xchg
push
test
inc
xchg
sahf
adc
les
shl
dec
dec
sub
mov
mul
cmps
xchg
dec
mov
into
push
out
mov
out
xchg
adc
pop
shl
aas
dec
repnz
push
mov
mov
inc
out
movs
outs
popa
mov
in
mov
mov
jns
dec
xor
dec
jle
call
pop
mov
add
out
ins
pop
shr
inc
and
ins
mov
jg
push
mov
dec
out
(bad)
jb
movs
movups
push
pop
inc
retf
jno
in
gs
outs
retf
or
inc
mov
xor
out
addr16
mov
sub
inc
dec
leave
jecxz
out
and
adc
mov
mov
xchg
mov
pop
mov
jno
mov
adc
jnp
mov
inc
ror
repz
mov
lock
cmp
add
movs
popa
xor
or
xchg
sbb
cmps
ins
push
idiv
scas
push
mov
cmps
pop
dec
je
xchg
jo
sti
mov
pop
cmps
pop
adc
test
cmp
inc
mov
(bad)
std
addr16
rol
push
rol
idiv
fwait
ins
data16
pop
out
ja
sar
pop
sub
sbb
int3
stos
jl
imul
jo
gs
xchg
and
adc
cmps
jns
dec
adc
sbb
iret
sbb
pop
mov
das
les
push
clc
bound
lahf
fadd
sahf
pusha
cmp
ss
or
and
cmp
out
mov
jne
push
rcl
int3
push
ins
sar
sub
xchg
sub
cmp
mov
cmp
add
jl
pop
xlat
pop
cli
scas
jae
jmp
add
jecxz
add
inc
loope
lea
lahf
xchg
inc
std
dec
mov
je
arpl
cs
add
xchg
stos
cld
pop
dec
jg
js
cmps
dec
in
add
lea
pop
movs
add
inc
sub
xchg
adc
pop
in
sbb
ss
inc
or
jg
or
inc
inc
sahf
(bad)
out
mov
dec
loopne
push
mov
call
mov
mov
inc
scas
scas
mov
pop
fs
imul
outs
inc
mov
jno
popa
in
xchg
shr
mov
das
lods
repz
jl
ins
add
sbb
xor
sbb
adc
(bad)
mov
mov
add
pop
retf
nop
jae
pop
xor
leave
push
sbb
in
loope
jo
jmp
sub
cmp
loope
jle
sbb
pop
mov
(bad)
ds
outs
add
jmp
pop
jmp
les
mov
sahf
jnp
sub
clc
pusha
xchg
retf
and
sbb
inc
fs
or
sub
call
loop
xor
sub
add
and
jno
call
repnz
ds
or
call
or
mov
pop
cmp
adc
and
and
jo
inc
cmp
inc
and
sar
dec
aaa
cli
push
mov
and
in
jns
repz
cwde
iret
in
mov
fisub
add
call
mov
and
fcom
inc
sbb
xor
mov
jle
imul
dec
data16
sbb
and
mov
pop
xchg
(bad)
out
push
sahf
hlt
cli
in
aam
lock
fnstenv
mov
test
pop
add
stc
rcr
mov
xchg
mov
mov
inc
jmp
pop
xchg
inc
cmp
mov
les
xlat
aam
aas
popf
and
jno
sbb
fwait
(bad)
cld
inc
leave
dec
mov
mov
scas
fbld
sub
mov
push
in
mov
jge
adc
mov
sbb
dec
sbb
jp
cmp
xchg
mov
mov
or
popa
inc
fisubr
cmp
ds
ret
aas
test
leave
jnp
test
and
mov
movs
adc
(bad)
int
sahf
cwde
icebp
fwait
test
dec
sbb
push
or
(bad)
cmp
mov
mov
sbb
scas
dec
pop
add
dec
dec
inc
arpl
sbb
sub
inc
push
xor
cwde
inc
iret
jmp
sub
cmp
jmp
pop
mov
jns
mov
les
push
pop
cwde
dec
repz
sbb
mov
leave
push
cld
push
add
inc
mov
aad
jp
dec
fild
push
int
ror
dec
dec
mov
inc
push
jo
inc
jmp
cmp
dec
cmp
sbb
mov
push
mov
daa
sub
sahf
clc
and
mov
inc
or
cmp
aaa
retf
mov
das
clc
push
(bad)
sbb
std
mov
aaa
cs
jbe
(bad)
mov
or
cmp
inc
sub
sub
(bad)
pop
pop
and
loopne
xchg
jmp
daa
sub
js
sub
ror
enter
jecxz
mov
mov
fstp
stos
xchg
mov
retf
ins
icebp
pop
push
mov
push
adc
pop
mov
fs
cmps
aaa
push
movs
int
ins
aas
sub
shl
pop
movs
arpl
add
fwait
lds
add
mov
push
out
mov
shl
push
dec
mov
ins
mov
dec
fbstp
jbe
mov
mov
(bad)
xlat
in
es
push
pop
fisttp
ins
add
cmps
pop
sub
fimul
or
popf
clc
mov
or
cmp
mov
cmp
sub
add
pop
pop
arpl
sub
cli
test
dec
add
mov
mov
ins
cmps
call
es
dec
sbb
xchg
dec
es
dec
sahf
jno
pop
mov
stos
int3
xor
cmp
dec
sbb
loop
adc
ins
loopne
iret
mov
inc
sbb
dec
add
stc
sbb
mov
jbe
cmc
std
(bad)
fiadd
push
cmp
stos
iret
cmp
stos
mov
xchg
xchg
xchg
fadd
lahf
pop
inc
jmp
pop
test
inc
cmps
push
js
ret
mov
pop
adc
pusha
dec
push
hlt
inc
imul
loop
xor
loop
nop
cld
push
dec
test
and
sub
add
jle
aaa
loope
adc
into
fiadd
stos
stos
pop
retf
aam
ds
std
retf
sub
test
int
in
lds
scas
sbb
out
ja
xor
pop
inc
sbb
in
sbb
les
dec
in
mov
inc
mov
inc
mov
mov
xchg
fs
and
test
test
adc
fs
lahf
fsub
xor
lahf
or
(bad)
iret
inc
or
inc
imul
adc
mov
xchg
add
fld
fadd
jae
cmp
cmp
iret
sub
adc
adc
sub
pushf
retf
test
and
mov
ins
loope
or
mov
dec
(bad)
mov
jge
xor
xlat
push
fwait
mov
cmp
dec
imul
retf
daa
test
les
rol
rcl
cmps
stos
in
add
push
and
fdiv
jp
inc
mov
or
std
mov
ins
cmp
push
mov
pop
lock
pushf
pop
or
sti
push
jbe
dec
xor
cs
jnp
rol
sub
pop
(bad)
(bad)
adc
cmps
sub
xchg
popf
mov
pop
and
xor
test
xchg
sbb
jg
mov
fwait
lods
shl
push
pop
sbb
retf
mov
xor
dec
test
nop
pop
pushf
dec
sbb
or
cdq
xchg
das
xchg
retf
jp
cmc
fidiv
mov
xchg
cli
shr
mov
pop
jns
popa
and
fsub
call
mov
es
ret
es
enter
test
loopne
and
cmp
mov
loop
repz
jl
xor
jl
push
pop
imul
fdivr
ficomp
rcr
and
into
ja
ror
add
adc
shr
pop
std
movs
pop
imul
pop
jo
mov
repz
pop
pop
jmp
and
(bad)
repnz
sbb
icebp
popa
das
and
dec
and
push
sbb
xchg
(bad)
fimul
int3
and
and
lea
shr
sub
ins
pop
cmp
or
cmp
push
add
mov
test
clc
lods
cs
xor
xchg
sub
adc
add
ins
sbb
loopne
mov
test
js
fs
xchg
dec
jb
pop
sti
xchg
int3
sub
leave
jle
shl
jle
ins
adc
lea
push
add
or
mov
add
int
aad
push
test
push
add
push
mov
mov
and
jp
cwde
movs
sub
loopne
es
adc
ror
aaa
push
dec
push
mov
movs
or
adc
cmc
xchg
mov
push
jb
shl
jmp
jge
inc
sahf
pushf
cs
jp
sti
push
add
jbe
mov
clc
cmp
pusha
jecxz
push
out
add
mov
in
test
hlt
sub
lock
shl
in
mov
lods
ins
mov
or
jae
in
pop
dec
add
and
ret
aam
mov
mov
fs
adc
les
inc
fdiv
jns
out
in
call
or
scas
sub
movs
aam
aam
test
test
test
loop
adc
cmp
or
hlt
aas
ds
mov
fsubp
out
les
into
jmp
xchg
push
test
(bad)
mov
ja
mov
jmp
dec
es
sub
push
mov
jbe
(bad)
cld
ret
fadd
push
jecxz
movs
imul
add
push
push
out
mov
das
(bad)
jecxz
sub
(bad)
fldcw
sbb
pop
inc
sub
je
push
mov
adc
and
xor
sub
in
ss
(bad)
mov
sub
icebp
out
dec
in
add
pop
mov
int3
mov
mov
in
aad
jno
xchg
ins
push
push
inc
fst
push
cdq
je
out
cmc
scas
aas
xchg
push
ins
dec
ja
cmc
sub
dec
and
popa
adc
jnp
mov
dec
sbb
sub
jae
mov
and
inc
repnz
pop
mov
test
pop
enter
movs
pop
add
(bad)
clc
xor
jbe
sbb
dec
fwait
lds
jp
inc
movq
jle
cli
jl
mov
sbb
mov
inc
push
and
imul
dec
xlat
push
call
xchg
or
mul
adc
in
jbe
in
je
jbe
mov
cs
ret
loopne
call
loopne
scas
div
popf
mov
xchg
jge
cld
adc
mov
iret
mov
xchg
test
stos
mov
imul
inc
test
or
sahf
mov
dec
mov
cmp
push
push
mov
push
push
in
cmp
inc
xchg
ret
neg
int3
cmp
pop
adc
mov
xchg
pop
cmp
xchg
mov
jge
pop
in
sub
mov
fsubr
pusha
(bad)
fmul
fist
and
scas
call
test
out
xor
sub
cmp
adc
stos
sub
repnz
in
sub
stc
inc
pop
rol
add
pop
lock
or
push
pop
adc
scas
push
and
cmps
inc
mov
push
push
mov
aas
std
les
aaa
adc
out
je
retf
mov
or
adc
mov
sbb
mov
es
sahf
enter
icebp
out
fucomp
adc
mov
test
jns
jmp
gs
mov
add
lods
push
das
aad
int3
ror
pop
loope
pop
sub
outs
ret
xchg
adc
repz
stos
out
cmp
jo
stc
xchg
repz
dec
jmp
xchg
cmp
in
data16
inc
fisub
mov
push
fisubr
call
mov
ins
aas
lock
or
jp
sub
data16
or
jns
push
scas
pushf
push
shl
push
xchg
rcl
xchg
or
ret
mov
scas
lods
out
inc
test
pop
ins
push
(bad)
xor
ret
test
cs
outs
aaa
cli
cdq
pop
enter
dec
popa
push
mov
call
in
lds
adc
cwde
inc
mov
add
dec
cli
clc
fwait
mov
inc
xor
jmp
adc
out
mov
and
ret
mov
(bad)
inc
inc
adc
les
push
cmp
add
xor
and
fst
dec
and
in
mov
xor
dec
mov
adc
add
dec
mov
add
dec
and
enter
es
pop
cmc
rcl
imul
in
sbb
xchg
outs
ficom
ins
(bad)
sub
add
retf
xor
mov
inc
mov
imul
sti
and
pusha
ins
jne
xchg
scas
cdq
inc
cmps
jo
xchg
out
bound
jecxz
pop
and
mov
js
test
in
stos
icebp
mov
sbb
outs
and
into
sub
cld
adc
daa
inc
add
xchg
dec
es
cmovne
push
loop
popa
mov
fprem
or
cwde
add
lds
(bad)
pop
scas
mov
lea
dec
popa
addr16
pop
pushf
ins
mov
cmps
mov
xor
xchg
leave
pop
lods
jmp
int3
lock
ret
adc
mov
cmp
inc
add
sub
iret
inc
lea
sar
sub
jbe
mov
mov
dec
sbb
xor
in
ins
xchg
ds
call
das
cmp
mov
cmps
ret
xor
mov
push
pop
outs
ret
iret
loop
adc
push
mov
addr16
lahf
cpuid
test
mov
sbb
fimul
sub
int3
jecxz
mov
cld
add
mov
push
pop
imul
xlat
mov
jg
enter
xchg
xchg
pop
arpl
mov
mov
adc
fdiv
in
sar
fdiv
inc
inc
movs
add
cmp
mov
mov
mov
mov
inc
(bad)
adc
jb
in
push
pop
cmp
mov
test
test
(bad)
mov
sbb
mov
push
and
or
js
pop
and
mov
movs
or
and
repz
daa
arpl
loop
pop
mov
stc
std
cmp
push
dec
inc
ins
fwait
iret
mov
xor
mov
test
add
or
iret
jecxz
(bad)
inc
inc
lods
push
xor
adc
fsub
sub
fwait
mov
(bad)
push
loopne
adc
adc
sti
leave
inc
in
fdivr
sbb
sbb
inc
sub
pop
add
pop
imul
call
push
lods
rcl
push
daa
cmc
adc
xor
xor
jb
sub
mov
mov
loopne
loopne
loope
jo
add
mov
stos
stos
sub
sahf
clc
xor
div
test
inc
ss
cwde
test
pusha
je
in
dec
cmc
pop
mov
(bad)
iret
lock
push
aad
cwde
(bad)
pop
scas
sbb
stc
ds
fsubr
sti
and
cwde
push
mov
imul
and
aaa
out
sbb
cmp
dec
rcl
cmp
jp
or
aam
ins
test
gs
cmps
mov
and
add
pop
cmc
(bad)
sbb
push
mov
or
pop
inc
(bad)
xchg
mov
rol
sbb
sbb
mov
xchg
cmp
call
call
mov
push
sti
xor
into
enter
push
pop
sub
mov
sbb
(bad)
pop
gs
jl
sbb
or
repnz
mov
inc
and
icebp
push
cmp
cmp
sbb
adc
bound
sbb
inc
ss
js
bound
aas
push
sti
fs
popf
add
test
push
cmp
pop
enter
push
fnstenv
inc
mov
pop
enter
retf
test
das
mov
push
add
rdmsr
pop
mov
push
lahf
cmc
in
nop
jne
cmp
mov
add
das
mov
adc
mov
add
out
inc
test
test
sbb
mov
fisttp
adc
mov
lds
mov
xchg
fisub
das
push
ret
mov
nop
mov
shr
push
add
pop
jg
and
hlt
(bad)
(bad)
inc
dec
bound
fldcw
cmp
sar
mov
ins
outs
add
test
ja
xchg
mov
adc
sar
jp
xor
loopne
sub
in
adc
cmp
adc
jb
pusha
lods
in
lods
es
leave
dec
ds
mov
and
mov
rcl
jo
dec
das
pop
cli
sbb
xor
stos
les
or
mov
jae
int3
mov
pop
cmps
mov
fld
push
add
les
repnz
cmps
mov
movs
stos
jbe
jmp
sbb
test
jne
mov
cmp
push
mov
and
cmp
ss
ins
jb
iret
push
movs
aad
(bad)
stc
shr
mul
das
adc
gs
inc
test
sbb
adc
adc
dec
int
add
push
dec
push
int
(bad)
jecxz
ins
test
std
xor
(bad)
dec
push
ret
add
xchg
adc
pop
call
jbe
mov
pusha
jns
inc
jmp
and
das
sub
push
adc
xor
cmp
mov
(bad)
adc
cmp
inc
scas
jo
js
add
fcomi
inc
repz
test
in
into
pop
or
data16
adc
scas
xchg
inc
cmc
pushf
cs
repnz
cmp
mov
(bad)
jns
dec
(bad)
test
sar
mov
into
out
xchg
push
mov
int3
push
push
lods
xor
fcom
add
(bad)
inc
(bad)
dec
pop
and
sbb
dec
pop
repnz
fs
sub
in
(bad)
in
shr
dec
jae
sbb
jmp
dec
xor
mov
fbstp
mov
scas
jmp
and
lds
mov
gs
cmp
cli
imul
pop
cmp
cmps
shr
daa
and
out
pushf
jo
les
and
or
aaa
xchg
jb
xchg
and
sub
adc
sahf
fistp
dec
and
(bad)
dec
lods
rcl
pop
retf
aas
and
mov
xchg
adc
xchg
or
dec
or
aas
sti
sub
popf
pop
cmp
out
xchg
xchg
mov
ret
sbb
jne
pop
mov
clc
nop
int
mov
lds
fwait
pop
jl
inc
aaa
arpl
sub
popa
cmc
mov
and
xchg
pop
or
test
stos
adc
inc
mov
push
jae
nop
les
add
push
adc
mov
cdq
aam
loopne
aaa
or
arpl
stc
sbb
cwde
sub
cmc
repnz
xchg
add
test
and
jno
xor
lods
jge
inc
xlat
jmp
mov
dec
dec
pop
ja
dec
and
mov
jle
mov
xchg
mov
sub
rcr
jl
mov
adc
js
(bad)
mov
add
daa
outs
pop
mov
mov
shr
sbb
add
loopne
jae
call
jmp
cmps
out
cmp
pop
adc
jle
cmp
push
int
sub
stos
retf
nop
jo
sbb
dec
int3
add
jle
mov
or
push
cmps
push
stc
leave
pop
adc
sbb
lods
sub
mov
pop
mov
jle
ja
pop
adc
jb
stc
pusha
mov
jnp
jg
and
loopne
dec
inc
inc
test
rcr
and
loope
jge
das
(bad)
movs
retf
dec
mov
pusha
jnp
movs
jne
mov
push
add
fdiv
int3
xchg
scas
mov
fcmovnb
cld
fcomp
ins
mov
xchg
pop
inc
das
inc
push
fs
sbb
repnz
adc
mov
call
cdq
lea
add
mov
mov
retf
aas
mov
xchg
xchg
push
repnz
or
iret
fdiv
pop
or
ret
or
mov
repnz
sub
or
test
and
ins
push
retf
outs
aad
push
hlt
test
add
push
out
in
neg
test
xor
loope
fsub
pop
sbb
movs
lods
jge
xchg
hlt
repz
jno
arpl
nop
mov
add
(bad)
mov
addr16
add
pop
inc
xor
ror
iret
stos
ret
stc
jecxz
inc
test
or
cmp
jnp
sar
popa
jno
sub
lea
mov
outs
arpl
mov
pop
cmps
cmc
stos
enter
stc
or
dec
push
cmp
ds
xor
and
jbe
mov
popf
imul
push
retf
aas
adc
or
icebp
cmp
sbb
jno
(bad)
and
push
or
cdq
push
rcr
scas
scas
sub
and
(bad)
outs
cmp
hlt
retf
fistp
inc
rcr
shl
in
dec
pop
xlat
inc
sub
into
inc
mov
adc
pop
sub
shl
mov
mov
add
sbb
hlt
call
fadd
xlat
cmc
stos
mov
das
hlt
pop
mov
gs
sbb
test
out
or
movs
pop
cmp
sahf
xor
and
not
inc
xor
inc
arpl
push
fdivrp
xchg
sar
jo
dec
and
xchg
cmps
mov
pop
xchg
retf
add
arpl
push
and
xor
jb
js
in
adc
cmp
mov
popa
fdiv
add
pop
mov
daa
dec
int3
retf
push
(bad)
and
imul
push
sbb
loope
rcl
pushf
push
dec
dec
popa
call
jo
movs
sbb
xlat
mov
out
bound
and
dec
pop
mov
pop
and
jmp
jno
movaps
hlt
scas
(bad)
stos
or
sbb
xor
push
xchg
gs
sub
lock
bound
les
pop
popa
adc
mov
sbb
test
jne
inc
jge
imul
lods
xor
push
inc
mov
sub
push
mov
call
outs
in
mov
mov
jbe
and
cmp
cmps
nop
ss
fiadd
div
dec
pushf
or
add
mov
pop
std
mov
lock
pop
pop
mov
xor
push
stc
stos
inc
inc
daa
or
stos
cwde
addr16
adc
retf
inc
pop
push
scas
xchg
jp
dec
pop
xlat
lds
(bad)
in
cmp
cli
inc
push
or
mov
adc
neg
sbb
(bad)
mov
imul
movs
jo
jno
mov
bound
loopne
fistp
mov
cli
retf
sub
or
pop
lea
dec
ins
aad
mov
push
or
mov
into
sbb
cmps
pop
ror
and
idiv
mov
call
mov
outs
(bad)
mov
adc
add
xchg
or
(bad)
icebp
jmp
xor
adc
mov
push
fs
sub
inc
sub
dec
adc
inc
sub
mov
outs
arpl
aaa
test
mov
adc
test
mov
gs
mov
fiadd
fadd
movs
jb
mov
sti
mov
in
into
mov
and
sbb
inc
in
sub
push
mov
aam
test
seto
jne
xchg
xor
mov
lahf
mov
mov
cmp
push
sub
ffreep
dec
cli
mov
mov
add
push
or
inc
pop
outs
leave
rol
xor
cmp
push
scas
xor
fadd
stos
call
sub
dec
inc
int3
jp
outs
xor
adc
mov
mov
inc
sub
cmp
nop
mov
iret
call
call
loope
fscale
sbb
movs
xchg
lds
push
lds
xlat
jnp
push
(bad)
iret
pop
stos
jle
jle
sub
mov
loope
and
repz
cmp
dec
lds
cwde
popf
pusha
push
loopne
gs
xor
or
leave
xlat
fcomp
add
lds
mov
std
fnstsw
dec
stos
or
popf
loope
shl
neg
bound
fadd
push
inc
pop
inc
stc
call
xchg
int3
movs
jo
dec
xchg
in
mov
push
adc
cwd
pop
ret
fwait
neg
cmp
stos
in
xchg
xchg
in
mov
pop
test
pop
jl
adc
into
leave
mov
inc
and
loope
clc
mov
mov
jge
cmp
add
inc
stc
aam
rcr
rcl
jno
mov
or
cs
and
sbb
mov
pushf
int3
and
cmp
test
cld
inc
xchg
lahf
out
iret
outs
subps
test
cdq
outs
dec
mov
jbe
ss
pop
imul
xchg
sar
js
stc
fidivr
aam
pop
inc
fs
js
jg
pop
jmp
and
add
mov
mov
(bad)
cld
out
push
mov
inc
aas
jb
test
je
nop
imul
call
mov
adc
cmp
jae
push
dec
jnp
aad
mov
int3
ds
lock
or
push
cmovge
mov
aaa
push
sbb
lock
mov
mov
rdseed
jae
aad
js
inc
rol
js
(bad)
mov
scas
es
cmp
mov
inc
and
(bad)
in
cmc
or
jmp
mov
mov
test
push
cmps
test
or
dec
and
inc
and
arpl
or
push
ret
rol
lods
out
or
data16
xchg
dec
mov
hlt
cld
dec
inc
or
mov
gs
cmp
jmp
push
dec
mov
lods
push
mov
sub
mov
push
hlt
jge
adc
dec
add
xchg
xor
and
push
imul
add
dec
push
fstp
call
icebp
in
(bad)
shl
cld
mov
push
scas
in
xor
push
mov
jl
cmp
jl
adc
lds
test
pop
dec
mov
xlat
add
fbld
(bad)
or
mov
imul
mov
adc
mov
mov
xchg
push
icebp
clc
pop
mov
or
repz
mov
aaa
call
je
jo
js
leave
pop
pop
std
fisttp
cmp
ja
push
stos
(bad)
fnstenv
push
test
dec
sub
fcom
repz
mov
idiv
lahf
loop
push
icebp
ss
out
or
jno
jmp
syscall
mov
rcl
ret
sbb
add
fild
popf
or
adc
(bad)
icebp
dec
pop
fcmovbe
cmp
aad
fst
(bad)
dec
dec
dec
sub
push
stos
push
fsub
pop
pop
(bad)
out
or
test
inc
mov
fs
jmp
cmp
fcmovbe
pop
or
jmp
nop
cmp
cmp
jl
xchg
gs
add
jle
or
sbb
jmp
dec
call
nop
cmps
addr16
ret
mov
sub
pop
xchg
add
clc
adc
add
mov
shl
je
mov
fwait
dec
lea
rol
call
xchg
lahf
xchg
sbb
addr16
xor
(bad)
sbb
jmp
cs
push
mov
sub
ss
push
lock
xchg
(bad)
adc
retf
ja
repz
xor
scas
into
repz
xor
mov
add
mov
mov
cmc
clc
ins
loope
sahf
jae
mov
xchg
ja
mov
and
mov
repnz
push
arpl
inc
mov
mov
cdq
cld
mov
add
adc
daa
popf
adc
pushf
in
jmp
cmc
dec
cld
xor
adc
scas
jno
fsub
cmp
rcl
retf
jge
imul
(bad)
test
inc
mov
or
xor
les
push
push
out
dec
cmp
outs
mov
pop
dec
add
sbb
repz
fwait
dec
jo
retf
jnp
gs
lock
cmp
hlt
pop
cli
push
ja
push
mov
jmp
adc
loop
les
fist
mov
pop
mov
test
cmc
sbb
fisubr
cli
dec
clc
xchg
xchg
dec
inc
add
adc
xor
mov
jecxz
cmp
imul
jno
cmc
stc
and
mov
pop
xchg
ret
iret
ja
jmp
lds
inc
loopne
pop
inc
adc
(bad)
out
pop
xor
sub
jg
add
out
push
mov
clc
pop
cmp
out
mov
mov
sub
pop
mov
test
or
pop
mov
cmp
sbb
fxch
add
outs
clc
add
xchg
adc
adc
jno
add
xchg
xchg
cmp
mov
mov
push
pusha
push
stc
in
call
je
xchg
aam
outs
test
icebp
xor
inc
pop
adc
push
xchg
or
inc
pop
adc
or
mov
ins
outs
and
xor
push
jge
push
movs
(bad)
mov
push
nop
clc
ins
or
shr
call
and
ins
mov
fidivr
mov
pop
cli
outs
int3
inc
mov
push
lods
lds
inc
(bad)
in
mov
mov
pop
inc
push
cmp
adc
dec
xchg
adc
clc
xchg
sub
nop
add
test
sub
jae
jp
sahf
test
test
push
xchg
in
xor
inc
sbb
inc
enter
addr16
(bad)
lds
mov
aad
fstp
mov
call
xor
mov
aas
daa
dec
aam
jmp
stos
cmp
inc
jmp
jle
ss
cdq
in
(bad)
aaa
les
mov
dec
retf
cmps
mov
test
mov
push
push
enter
push
fcom
loope
out
rcr
outs
in
pop
mov
mov
jge
shl
xor
xchg
push
cmp
pop
mov
cmp
push
sbb
ret
xor
dec
sbb
cmp
dec
and
movs
or
or
lods
rcl
cmp
xor
pushf
shr
mov
popf
pushf
mov
addr16
(bad)
push
popa
ins
mov
push
adc
inc
mov
and
out
test
cmp
xlat
inc
dec
dec
cmps
push
imul
fsub
test
lds
jmp
sbb
jbe
inc
cmp
das
pop
push
sbb
xor
mov
loopne
sti
lock
pop
sub
and
add
movs
sub
into
pop
aas
xchg
aas
inc
xor
pop
push
mov
stc
mul
push
inc
dec
pop
pop
(bad)
(bad)
add
push
jno
push
sbb
loope
cmp
scas
lea
dec
and
dec
and
pop
mov
aas
sub
adc
xchg
cmc
fld
scas
fiadd
repz
stc
pop
push
inc
jo
dec
pop
inc
mov
shr
push
call
(bad)
lods
and
ret
cmp
es
and
add
out
jmp
stos
cld
cmp
or
and
je
mov
cmps
fdivp
scas
push
fisubr
hlt
es
(bad)
and
mov
jnp
jmp
arpl
imul
push
jl
aas
daa
mov
dec
mov
mov
call
fucom
pop
mov
xchg
popa
and
dec
mov
xchg
ja
mov
jg
mov
jmp
test
cmps
mov
push
shl
jae
jne
mov
fistp
outs
jle
stc
dec
xor
cmp
les
(bad)
push
movs
ins
jnp
mov
shr
xchg
rcl
sbb
rcr
inc
dec
mov
or
popa
sbb
scas
(bad)
das
dec
inc
(bad)
xor
mov
ss
jecxz
ror
in
add
push
sub
push
out
push
xchg
(bad)
sbb
cli
retf
and
lods
push
ret
jp
sub
mov
stc
push
jle
mov
push
mov
loop
add
xchg
dec
add
jmp
mov
mov
imul
sub
sub
in
mov
or
sbb
dec
inc
fwait
loope
ss
imul
into
and
push
ds
in
test
les
inc
in
mov
xchg
imul
fisub
adc
out
in
je
lock
movs
fisttp
fwait
lds
add
mov
pop
cdq
lea
mov
add
ret
lea
iret
sub
add
aas
lods
enter
loopne
mov
into
jp
aaa
lea
dec
bnd
push
mov
je
loope
hlt
je
jb
mov
std
jmp
pop
push
add
xor
popf
mov
cwde
pop
xor
test
mov
imul
jb
sbb
inc
into
inc
mov
mov
sub
mov
dec
push
sahf
cli
or
add
add
sbb
pop
sbb
loop
jno
nop
cwde
in
xchg
inc
sub
or
(bad)
push
fcom
mov
sub
lea
mov
aaa
pop
pop
dec
jle
ss
leave
pop
lock
inc
aam
dec
jno
or
aas
lds
pop
popa
mov
xor
jo
mov
dec
movs
ja
aaa
push
cmc
(bad)
mov
or
ds
stos
mov
dec
nop
xchg
std
test
les
sahf
xchg
mov
imul
popa
sbb
loop
add
sbb
fidivr
adc
in
enter
addr16
xlat
pop
in
cmp
jmp
mov
or
mov
jle
mov
lds
(bad)
mov
xor
cmc
in
clc
push
cwde
xor
cmp
out
int3
cmps
pushf
out
cmc
data16
adc
jo
push
sub
enterw
ret
jg
xchg
xor
add
ins
mov
push
push
rcr
ret
mov
jp
out
shl
jg
xchg
mov
sub
repz
mov
mov
push
mov
jno
sbb
int
sub
xchg
cmp
cmp
mov
sub
sub
iret
add
dec
div
dec
cmp
ret
pop
cmc
in
loope
fild
outs
imul
or
pushf
in
leave
ds
popf
(bad)
aam
imul
xor
mov
xlat
and
std
loope
inc
lock
push
dec
jns
out
inc
neg
inc
cmc
ror
int
cmp
pop
(bad)
push
xor
sbb
inc
sar
mov
xor
cli
(bad)
jmp
jge
push
enter
movs
mov
push
pop
push
jne
clc
popa
mov
and
jae
nop
xlat
pop
fadd
lods
cmc
push
mov
push
fmul
std
xchg
fsub
(bad)
jnp
adc
mov
hlt
daa
or
fiadd
mov
sub
jo
pushf
ficom
mov
cmp
jg
fild
imul
mov
xor
dec
push
sub
mov
sbb
fmul
test
push
push
stos
imul
xchg
popf
inc
imul
mov
cli
movs
and
xchg
cmp
test
retf
xor
cwde
push
or
out
retf
and
shr
add
xchg
or
(bad)
jno
sbb
rcl
inc
or
pop
sbb
(bad)
popf
push
push
mov
dec
test
or
in
outs
test
mov
icebp
test
out
add
sub
inc
(bad)
sub
and
xor
push
push
cmc
cmc
push
fmul
or
add
fcmovnu
or
mov
movs
(bad)
jmp
inc
adc
sbb
xchg
leave
xchg
mov
enter
sahf
js
sbb
or
int
hlt
jmp
jmp
mov
mov
fmul
pop
and
lahf
je
push
jnp
mov
mov
inc
mov
div
sbb
out
mul
out
enter
mov
ja
cmp
adc
dec
movs
xchg
mov
xchg
pusha
mov
mov
daa
fdiv
or
push
or
clc
or
add
mov
adc
mov
stos
add
stc
imul
clc
or
mov
movs
les
nop
dec
popf
inc
cmps
push
adc
outs
jle
mov
mov
adc
iret
cmc
adc
xlat
sar
lock
or
neg
pop
jno
fs
jmp
gs
dec
out
retf
mov
lea
cmp
inc
lods
icebp
dec
jge
ds
rol
mov
arpl
sub
fdiv
dec
jle
retf
js
fnop
loopne
cmp
pop
sbb
inc
mov
dec
mov
enter
pop
iret
push
mov
pop
aad
mov
push
movs
fs
jmp
int
pop
xchg
frstor
cdq
add
and
test
fiadd
stos
jmp
xchg
shr
dec
sub
lahf
push
cs
jecxz
lds
or
rcr
pushf
adc
sbb
addr16
mov
mov
mov
inc
ror
and
push
pop
cmps
add
test
cld
dec
mov
xchg
ficomp
jno
daa
inc
xchg
nop
fst
lock
sbb
cmp
mov
add
shl
nop
jae
sbb
pop
hlt
push
or
and
out
push
push
lods
cmp
mov
adc
and
(bad)
jg
retf
inc
movs
add
fsubr
leave
inc
rcl
add
cmp
mov
iret
in
push
dec
aad
add
inc
sub
stos
aam
dec
sbb
sub
lods
je
std
or
mov
iret
cmc
leave
or
jp
inc
and
sbb
mov
lss
push
jecxz
mov
outs
(bad)
or
arpl
sbb
pop
(bad)
sbb
push
imul
pop
neg
push
lahf
xchg
xor
ins
or
dec
(bad)
ret
mov
popa
mov
pop
xchg
push
pop
mov
(bad)
mov
push
les
call
les
jno
xlat
mov
sub
add
xchg
jmp
or
push
ret
outs
mov
movs
daa
sbb
daa
pop
lea
sbb
aaa
imul
mov
dec
pusha
xchg
arpl
adc
cmc
dec
(bad)
cmc
aas
sbb
push
or
fucomip
(bad)
adc
mov
jae
mov
adc
or
sub
add
xor
aam
scas
push
inc
jle
rcr
outs
cmp
jmp
popa
push
aam
mov
ins
mov
(bad)
cmc
inc
shl
mov
jmp
pop
cmp
or
pop
ret
mov
bound
ins
inc
jne
mov
ss
loop
into
cmps
ins
add
in
push
faddp
push
(bad)
adc
mov
and
add
mov
aas
sbb
repz
cmp
scas
jno
mov
xor
add
ror
mov
xor
clc
mov
scas
ins
cmp
pop
inc
cli
mov
cmp
repz
adc
stos
mov
inc
mov
aam
sub
and
loope
in
and
cld
(bad)
aad
pop
cmp
add
sbb
aad
mov
movs
xchg
data16
push
mov
mov
push
js
xchg
ins
movs
push
dec
jne
cmps
in
icebp
push
mov
pop
sub
cwde
push
ins
push
and
push
jb
push
nop
mov
pusha
aam
mov
in
cmp
out
xchg
mov
inc
sub
enter
push
in
call
mov
test
pop
or
xlat
xlat
cmp
sub
adc
imul
mov
add
scas
jbe
ret
sub
ror
or
or
pop
jp
retf
clc
pop
cmp
sti
adc
test
push
cmps
dec
aam
fistp
dec
sbb
lods
mov
pop
nop
repz
ret
push
sahf
push
or
clc
pop
xchg
mov
and
ins
cwde
pop
shl
adc
mov
xchg
cmp
in
xchg
(bad)
xlat
icebp
loope
repz
inc
outs
shl
adc
push
int3
xor
das
xor
push
sti
aaa
jae
push
ret
fs
inc
fwait
popa
out
push
loop
in
adc
adc
leave
pop
xchg
adc
aam
leave
cmp
sahf
mov
(bad)
out
imul
push
das
xlat
adc
xlat
in
ficomp
in
xchg
sub
jle
cmp
stos
sbb
cmc
data16
in
xlat
push
mov
add
push
cmc
test
out
cmp
pop
jbe
(bad)
cmp
ins
push
rcl
scas
pop
inc
clc
sbb
les
cmp
loop
mov
cmp
xor
or
js
adc
pop
jg
sub
arpl
dec
not
push
mov
xchg
test
adc
lds
fistp
push
shr
xchg
push
das
and
hlt
jecxz
xchg
pop
xor
call
in
cmp
cmp
nop
out
inc
lods
lods
and
leave
cs
jl
out
add
movq
pop
test
arpl
imul
and
jge
retf
inc
or
dec
push
fcmovnbe
cmp
cmp
fild
hlt
neg
in
sti
es
jbe
imul
in
adc
pop
ins
pop
fmul
mov
mov
loope
sti
or
(bad)
adc
test
repz
mov
push
clc
fsub
std
pop
imul
mov
mov
data16
bnd
cmp
retf
aaa
xor
or
daa
icebp
arpl
pop
pop
jg
add
xor
repz
in
sbb
ja
(bad)
int
jg
repz
lock
dec
xor
push
test
jg
sbb
inc
dec
mov
mov
das
fmul
jecxz
les
cmp
push
cmp
gs
mov
sub
leave
lahf
out
pmullw
mov
push
and
mov
std
outs
out
push
xor
pop
mov
cmp
add
dec
mov
xor
push
and
mov
jmp
mov
sbb
movs
popf
je
sub
fwait
mov
dec
mov
inc
cmp
pushf
dec
cmp
pusha
and
dec
ss
jbe
lahf
xlat
pop
cmp
mov
sbb
mov
mov
jno
and
inc
sub
mov
push
mov
jge
sti
repnz
dec
hlt
out
add
sbb
mov
js
ins
in
es
inc
xor
jnp
push
fbld
out
adc
xchg
hlt
add
ins
sub
int3
add
(bad)
fimul
sub
add
icebp
(bad)
push
xor
ds
pop
pop
mov
push
sbb
repnz
cmp
pop
jmp
mov
or
ins
lahf
je
lods
and
jmp
inc
scas
test
jmp
push
pop
cs
in
cdq
daa
bound
cwde
dec
pop
or
xchg
and
push
(bad)
into
(bad)
repnz
cmc
add
or
ss
jo
dec
imul
inc
int
and
imul
inc
call
lds
and
les
or
repz
je
mov
or
fcomp
or
stc
jne
jp
dec
test
mov
bound
mov
movs
pop
in
hlt
fldcw
ja
adc
adc
ins
outs
add
fs
sbb
jns
push
mov
xchg
add
xchg
xor
sbb
out
jbe
cmps
jmp
arpl
loopne
and
(bad)
popf
test
mov
pop
mov
sahf
cmps
fdivrp
inc
xchg
push
jl
jb
cmp
hlt
pop
cmp
in
push
xchg
mov
xchg
pop
loopne
scas
jb
fsubr
mov
out
pavgb
xchg
sbb
mov
pop
xor
dec
xor
(bad)
iret
pop
mov
scas
jns
mov
cmp
adc
dec
adc
cmp
jbe
cmps
xchg
xor
cmps
test
ret
out
imul
adc
cdq
jns
cmps
and
jne
sbb
add
mov
push
mov
mov
or
jae
push
jge
push
mov
xchg
mov
scas
push
push
inc
(bad)
clc
xor
inc
retf
rcr
xor
fnsave
xor
pop
push
jno
mov
jp
inc
pushf
and
sbb
inc
xchg
icebp
xchg
sbb
adc
aad
mov
loopne
or
int
aas
xlat
fcomp
aas
sahf
fcomp
or
mov
xlat
test
out
cmc
push
inc
out
arpl
dec
pop
das
loop
add
lock
loopne
mov
pop
pop
adc
mov
test
add
xlat
fistp
sub
mov
out
fbstp
in
pop
mov
and
or
cmc
stc
adc
and
jns
dec
or
jo
xor
data16
aaa
out
repnz
sub
jae
jbe
sub
mov
push
js
dec
inc
sub
push
pop
adc
pop
add
inc
inc
and
push
jnp
call
call
js
test
cmc
lock
(bad)
jne
sub
std
adc
xor
ins
push
push
jno
imul
lea
cmps
mov
pusha
adc
(bad)
cmc
jl
(bad)
mov
ss
pop
jno
into
(bad)
icebp
mov
jne
jecxz
fiadd
call
cmp
sub
xchg
mov
out
in
mov
dec
pushw
pop
loope
iret
cmp
repnz
std
jns
xor
sbb
xchg
sub
fucomp
popa
jmp
movs
pop
sub
in
adc
jo
rol
iret
rol
cwde
lahf
pop
div
ret
mov
sub
adc
cdq
into
jl
fsubr
mov
xor
(bad)
les
push
aas
push
xchg
iret
xor
mov
dec
and
xor
xchg
mov
dec
ss
pop
jmp
outs
hlt
sbb
mov
aaa
cld
jp
adc
xor
mov
mov
jno
sub
dec
mov
sbb
shl
pop
dec
arpl
jecxz
cmps
int3
mov
ret
jmp
cmp
pop
je
push
sub
fcmovbe
pusha
loope
outs
imul
ret
xor
mov
mov
aaa
pop
fldcw
and
push
add
push
mov
lods
mov
mov
outs
push
push
jbe
mov
jl
jp
jmp
lea
shr
push
pop
pusha
pushfw
outs
cmp
leave
add
les
xchg
jns
pusha
ss
arpl
or
inc
std
sub
and
loope
iret
or
ins
outs
lods
lods
xchg
xor
(bad)
pop
lahf
pop
cmps
enter
test
cwde
in
sbb
popf
xchg
jnp
das
dec
mov
or
imul
or
shl
in
inc
push
retf
jmp
ds
stc
and
imul
mov
das
test
xchg
pop
arpl
das
cwde
or
and
mov
sahf
movs
and
mov
aam
xchg
imul
test
pop
std
and
data16
sbb
dec
(bad)
out
(bad)
push
movs
(bad)
lahf
pop
std
imul
jb
test
fdivr
xchg
or
test
pop
dec
mov
movs
mov
das
pop
ss
loop
xchg
jne
pop
cmp
add
mov
mov
mov
call
push
jg
push
out
sbb
fldcw
out
scas
aas
sbb
sti
inc
fsub
xchg
cdq
mov
jns
jnp
xchg
in
cld
xchg
push
jecxz
xchg
mov
sar
add
js
or
cdq
cmp
inc
clc
mov
mov
and
rcl
stc
push
mov
or
cmp
xlat
mov
pushf
cmps
push
adc
(bad)
or
push
stc
loope
jmp
pop
xchg
xchg
out
inc
je
mov
adc
nop
push
daa
gs
sti
fidivr
jge
xlat
pop
mov
das
(bad)
and
push
mov
xchg
jg
mov
inc
mov
hlt
lea
pop
sub
add
hlt
mov
adc
mov
push
fwait
pop
call
cmp
inc
xor
shl
lahf
push
pushf
push
mul
sub
fwait
xchg
mov
xchg
pop
loope
cli
pop
xor
push
enter
nop
int
repnz
jb
mov
push
or
pop
test
xor
mov
outs
lahf
sbb
cmp
pop
pop
das
loop
xor
into
leave
(bad)
mov
dec
and
test
faddp
icebp
jmp
xchg
and
jge
mov
in
mov
loop
add
cs
scas
cdq
loopne
inc
sar
add
neg
inc
push
test
shl
test
jno
cs
sbb
mov
lahf
in
ins
push
pushf
not
imul
call
stos
call
int3
clc
arpl
xchg
loop
outs
out
inc
stos
out
jmp
push
aad
popf
adc
jp
pop
in
dec
mov
fsubr
pop
push
and
dec
(bad)
in
inc
jb
xor
je
movs
dec
mov
jne
xchg
push
push
pushf
ds
loopne
stos
fimul
and
sub
inc
ja
jle
inc
jo
rcr
(bad)
or
inc
in
clc
rol
sahf
xor
fsub
and
movs
add
mov
pushf
cmp
sbb
aam
push
dec
mov
imul
scas
adc
(bad)
(bad)
cmp
fcom
mov
mov
push
dec
and
push
rcl
gs
nop
mov
inc
jmp
and
aam
adc
pop
adc
sbb
sar
faddp
push
mov
inc
les
cmp
and
cwde
jle
int
and
daa
scas
push
retf
(bad)
xor
push
cmps
rcl
mov
stos
(bad)
jle
js
shr
push
cmp
gs
addr16
ja
mov
jnp
mov
repnz
jmp
(bad)
mov
add
inc
mov
push
rol
imul
jns
mov
ret
pusha
gs
xchg
repnz
mov
xor
mov
dec
xor
je
cmp
sub
mov
mov
fwait
hlt
lock
jns
push
jge
pushf
es
sbb
test
dec
add
jp
sti
xchg
mov
cs
pushf
and
jbe
pusha
mov
push
aad
mov
sbb
aam
xchg
adc
aas
fisubr
mov
mov
ins
sub
out
adc
push
or
(bad)
xchg
in
rol
and
mov
mov
xor
mov
jecxz
call
scas
push
jnp
std
pop
aas
mov
cmp
xchg
ins
or
ret
sub
push
(bad)
pop
xchg
push
cli
call
push
mov
ret
jmp
or
and
xchg
or
mov
mov
in
jae
dec
xchg
scas
cmp
push
cs
icebp
or
in
stc
inc
cdq
ja
push
outs
jae
jcxz
retf
out
and
test
and
rcr
and
cmc
adc
rcl
les
iret
ret
ss
addr16
pop
mov
jns
das
adc
pop
std
sbb
leave
rcr
pop
sbb
mov
xor
mov
imul
xor
jo
add
mov
pop
(bad)
dec
jge
clc
pusha
lea
aam
test
pushf
jl
out
mov
push
jecxz
loop
mov
push
adc
sub
mov
inc
inc
mov
sahf
xor
sahf
in
jp
pop
and
mov
sbb
sbb
adc
sbb
js
and
jo
movs
and
xor
aaa
mov
mov
jmp
jmp
out
mov
lock
add
sub
xchg
jo
pop
sar
sub
int3
or
xchg
adc
mov
add
mov
adc
das
js
(bad)
out
das
jmp
add
and
sub
mov
nop
jnp
push
xchg
call
scas
les
test
xchg
loope
xchg
shr
inc
leave
leave
pop
stos
adc
pop
ret
(bad)
cmp
add
pop
and
movs
into
loope
push
adc
sahf
jmp
enter
popa
imul
add
mov
jb
dec
pop
dec
gs
jae
dec
add
mul
fld
js
pop
cli
cmp
mov
cmc
lahf
iret
jnp
jp
movs
arpl
es
xor
les
dec
leave
popa
pop
outs
add
test
xor
inc
or
out
loop
inc
jbe
xchg
push
stos
inc
jbe
out
fld
sub
stos
sub
add
jnp
pop
pop
mov
cmp
adc
cmp
adc
shl
in
mov
mov
popf
mov
mov
pop
movs
fwait
dec
imul
in
mov
pop
(bad)
dec
inc
push
push
ins
sar
sbb
(bad)
scas
pop
adc
inc
nop
xor
jmp
in
jecxz
push
sub
jbe
fisubr
dec
aas
push
stc
inc
push
sub
pop
dec
fs
sahf
call
lock
ret
pop
inc
inc
es
fsub
or
scas
test
add
aaa
fldcw
sbb
aam
xchg
xor
pop
mov
dec
lahf
stos
sub
add
mov
jecxz
gs
lock
xchg
fdiv
or
xchg
jle
fdiv
repnz
in
cmp
add
adc
pop
cdq
cmps
xchg
mov
int
pop
and
jnp
xor
push
call
je
arpl
arpl
sbb
push
retf
xlat
push
pop
in
jnp
cmp
neg
aas
and
stos
popf
adc
push
ror
in
or
mov
int3
bound
dec
xchg
xor
mov
jnp
fs
mov
or
int3
sub
add
lods
icebp
push
shl
lods
push
popf
mov
pushf
arpl
xchg
fs
xchg
lods
mov
jp
mov
jp
out
jnp
dec
adc
cmc
sbb
sbb
das
or
popa
dec
add
dec
cmps
sti
cmp
mov
mov
cld
dec
retf
add
jmp
mov
mov
popf
dec
imul
and
inc
stc
jb
or
sub
sbb
aaa
cmc
out
in
dec
in
pop
sub
lods
mov
cdq
rcr
sbb
add
mov
add
adc
pop
mov
add
cld
sbb
pop
sahf
icebp
sub
(bad)
(bad)
mov
adc
into
dec
sub
push
adc
fist
mov
ret
and
cmp
stos
out
in
sub
stc
arpl
sbb
movs
fst
jle
xchg
cmp
dec
inc
jg
adc
xchg
jl
mov
test
cdq
nop
(bad)
jnp
and
enter
out
mov
loopne
jae
mov
rol
dec
sub
test
mov
sub
sub
cmps
cmps
aam
push
outs
dec
stos
out
nop
lahf
push
js
cmp
mov
dec
jg
jo
dec
sub
sar
mov
std
sbb
sbb
fild
adc
jl
mov
out
mov
jae
je
nop
adc
std
jmp
pcmpgtw
or
cmp
mov
and
sbb
in
and
push
fs
dec
loopne
pop
mov
jg
xor
mov
(bad)
cmps
add
mov
int3
cmp
inc
mov
imul
dec
(bad)
mov
add
sub
push
xor
mov
adc
test
mov
in
aad
sub
push
adc
adc
call
mov
push
or
rcr
dec
scas
mov
sbb
mov
inc
stc
cli
sub
add
das
call
mov
inc
aam
out
fwait
test
vpcmpeqd
das
mov
mov
mov
sbb
xchg
mov
sti
(bad)
jl
das
pop
dec
mov
cs
mov
cmps
test
popf
cmp
inc
jmp
jo
in
push
push
add
sbb
movs
test
mov
and
nop
push
sbb
aaa
cmp
or
or
push
or
stos
ja
ret
dec
cmps
cdq
ja
pop
or
in
mov
faddp
pushf
sbb
xor
mov
jmp
adc
add
mov
out
or
mov
(bad)
int
sub
(bad)
pop
add
xor
push
cmps
cdq
dec
aas
push
xchg
enter
ins
fwait
jo
loop
ins
sbb
popa
push
loope
sbb
jb
inc
sub
fwait
(bad)
cmp
das
mov
fst
out
push
mov
mov
and
mov
xchg
fwait
pop
lock
jae
outs
or
lods
or
push
popf
sbb
mov
iret
cli
sbb
jae
xor
xor
dec
(bad)
mov
ins
bound
enter
movs
ins
outs
es
cmp
(bad)
pop
adc
mov
aad
outs
jo
mov
dec
sub
(bad)
fisub
(bad)
int
movs
(bad)
test
sbb
mov
ins
fnop
into
dec
cmp
ins
outs
inc
cmps
xchg
enter
and
xor
outs
cmp
push
or
push
shl
or
pop
sti
or
adc
sbb
or
pop
cmps
lods
imul
cmps
xchg
icebp
leave
dec
mov
jbe
xor
pop
xor
jle
sub
xor
mov
xor
push
pop
lods
sbb
cmp
push
arpl
xchg
cli
xchg
sbb
mov
sbb
adc
inc
xchg
inc
cli
arpl
outs
jmp
shl
mov
sub
fiadd
push
or
fs
popf
int
test
mov
inc
in
movs
fwait
sub
ins
lock
vaddsubps
cli
or
add
call
out
mov
xchg
cmp
or
fdivr
xchg
jbe
add
xchg
push
cdq
add
ret
fst
pop
jno
mov
and
lds
mov
jo
popa
shr
adc
push
and
or
popf
inc
jmp
xchg
cmp
sub
ror
pop
sbb
adc
scas
xchg
push
int
inc
mov
inc
or
(bad)
sar
add
xor
mov
dec
jne
mov
or
stc
jg
js
mov
scas
int
lods
mov
mov
retf
dec
mov
cs
sar
outs
rcr
iret
out
dec
add
cmp
mov
fild
sbb
adc
cs
mov
into
loopne
pop
fs
jecxz
inc
ins
push
jbe
clc
pop
adc
call
js
int3
add
clc
lds
cmp
lods
adc
aas
popa
and
dec
xchg
retf
pop
jl
push
jge
imul
mov
jnp
into
fld
sti
shr
and
lods
dec
dec
mov
sbb
xchg
cwde
ss
fwait
test
les
add
mov
clc
call
adc
test
pop
out
stos
jnp
das
idiv
int
and
popf
adc
ficom
outs
cmp
hlt
in
or
mov
in
mov
lahf
add
xor
leave
sbb
imul
push
(bad)
and
xor
xchg
jmp
stc
mov
enter
xchg
push
mov
mov
addr16
jle
and
mov
enter
jmp
dec
jl
ja
in
sub
loopne
push
mov
push
jmp
call
jecxz
sub
jmp
sbb
aad
xor
push
cmp
adc
iret
adc
lods
(bad)
sbb
push
add
xchg
dec
dec
ret
push
fisttp
mov
data16
out
or
mov
dec
add
out
add
mov
mov
and
push
add
jb
nop
retf
sub
das
adc
jmp
retf
ins
jmp
mov
aas
xchg
mov
arpl
icebp
icebp
sub
stos
rol
mov
fsub
mov
gs
icebp
and
dec
and
xor
jp
movs
jnp
arpl
fimul
and
pop
mov
cmc
xor
stos
mov
jns
out
in
outs
ficomp
xor
cmp
sbb
and
push
dec
mov
push
pop
and
mov
jecxz
jp
dec
into
retw
fucom
sahf
xor
jae
push
push
add
xchg
retf
sub
loope
fcom
cmp
std
xor
sar
xchg
pushf
sub
xchg
adc
pop
and
sub
stos
sub
out
rcl
test
mov
jle
out
es
test
pushf
or
lods
xchg
icebp
fiadd
push
lds
and
xlat
ret
push
push
int3
mov
xor
jno
(bad)
das
stos
jg
movs
fcomp
and
xor
mov
out
or
jmp
(bad)
ret
pop
ds
xor
nop
cmp
movs
xor
lods
cmc
sbb
stos
or
loope
jns
xor
ret
sub
xchg
jmp
jl
out
sub
js
pop
sbb
cmps
retf
dec
test
jecxz
lea
dec
ret
inc
xchg
cmp
data16
outs
sbb
aas
push
xor
mov
arpl
sub
mov
and
mov
aad
sar
ret
repnz
in
pop
push
dec
and
popa
sub
xor
jns
add
xchg
add
sub
arpl
inc
jg
sub
shr
shr
aas
nop
xor
pop
repnz
jnp
test
cmp
jg
retf
sub
fisub
imul
xchg
mov
pusha
jne
(bad)
jns
inc
inc
(bad)
mov
mov
push
stos
sub
add
sub
loop
mov
or
aaa
xchg
push
call
jmp
retf
pop
xlat
int
mov
push
leave
sbb
inc
into
dec
in
xchg
add
scas
fisubr
sbb
xchg
mov
jae
xchg
sub
push
pushf
mov
imul
mov
mov
int
test
out
cs
ror
pop
mov
(bad)
in
sti
out
xlat
movs
rcr
push
inc
xor
clc
add
add
into
dec
sbb
aam
mov
xchg
xor
out
outs
femms
popf
mov
out
adc
mov
cmp
inc
sub
(bad)
mov
rcl
sbb
inc
pushf
pop
or
mov
test
mov
xchg
jno
jb
rol
int3
(bad)
adc
or
add
adc
into
mov
push
stos
sti
pop
clc
test
pop
out
add
aas
mov
fcomp
test
mov
dec
or
cmp
mov
ret
inc
ss
loop
iret
jb
lahf
arpl
inc
mov
movs
test
mov
inc
adc
or
cmc
and
aam
jg
mov
inc
sahf
add
xor
ins
aaa
lock
mov
jb
movs
and
repnz
retf
dec
mov
dec
dec
xchg
sbb
(bad)
int3
sbb
mov
jmp
fwait
dec
mov
or
or
rcl
call
push
and
mov
or
push
sub
mov
mov
dec
cdq
fst
push
cmps
retf
fdiv
and
shrd
sbb
lods
cmp
out
div
push
aam
shl
or
inc
push
es
and
aam
xchg
into
xchg
cli
fldenv
loop
sbb
stos
dec
bound
pop
scas
pusha
fcomp
pushf
sub
in
add
dec
jne
imul
mov
mov
mov
stc
outs
inc
das
or
sub
rol
leave
(bad)
xor
mov
mov
clc
mov
cmp
xor
xor
inc
js
or
mov
sub
int3
in
nop
and
add
push
mov
and
inc
jno
sbb
or
or
sub
mov
jle
fstp
outs
xlat
in
xor
push
sub
xlat
out
add
or
cmp
js
mov
out
adc
out
mov
sti
xchg
inc
(bad)
retf
stos
int
lods
int3
and
sub
jo
int
fst
int
mov
call
das
nop
aam
push
sti
pop
je
cmp
rol
fisttp
ds
sbb
xchg
movs
add
cdq
xchg
push
icebp
mov
jg
lea
fldcw
adc
scas
ror
inc
ja
mov
mov
add
in
inc
push
rcr
fisttp
dec
fstp
in
adc
push
pop
movs
jmp
mov
mov
pop
shl
lds
mov
(bad)
fist
inc
lods
or
lods
js
and
push
cdq
stc
jl
add
jl
fistp
dec
pushf
cmp
div
lock
dec
adc
pop
(bad)
iret
cmp
xor
out
pop
mov
xchg
adc
mov
es
(bad)
imul
add
or
push
scas
jp
dec
in
jb
mov
data16
add
add
cmp
popa
push
xor
aam
js
ins
es
call
repnz
(bad)
movs
jne
sti
push
jmp
std
outs
sti
and
mov
cmp
inc
inc
and
fisttp
adc
ss
scas
arpl
and
sbb
arpl
cmps
push
std
mov
sbb
mov
fistp
xchg
sub
xchg
imul
jo
mov
lds
cmp
and
pop
sbb
jle
dec
sbb
mov
ja
(bad)
jmp
adc
fstp
and
xor
out
daa
xor
wbinvd
je
add
pop
mov
arpl
and
out
clc
mov
push
popf
lods
fist
jge
inc
lea
jae
and
cli
jl
aad
loop
jne
mov
bound
mov
inc
jb
jg
add
jle
pusha
cdq
push
xor
push
popf
inc
mov
ror
out
iret
xor
push
pop
mov
and
adc
not
fild
in
mov
and
cmp
mov
xor
inc
repz
xor
das
push
cmp
(bad)
sbb
mov
std
xchg
or
jmp
and
out
fist
mov
cmps
pop
movs
jmp
out
pop
aad
sbb
aam
mov
dec
fist
push
mov
adc
rcl
dec
and
dec
ins
or
fcom
xlat
mul
stos
pop
sbb
add
in
fisubr
pop
or
shl
in
pop
xor
popf
xor
fisttp
push
call
dec
rcl
in
xor
cmps
cmp
mov
push
in
(bad)
fisttp
fdivr
cld
(bad)
sti
gs
dec
adc
out
ret
(bad)
mov
cld
loop
fstp
cmp
enter
sbb
ret
test
imul
lods
adc
lock
add
movs
aad
dec
ins
stc
lods
shl
sbb
mov
cmps
sub
lods
arpl
loope
rcr
int
push
push
pop
xchg
or
mov
cdq
mov
sub
data16
pop
pop
imul
cdq
xchg
ret
hlt
jl
cs
out
mov
cwde
mov
stos
cmp
xchg
sub
ret
(bad)
mov
add
adc
xor
(bad)
out
out
js
jb
(bad)
call
fisub
aas
mov
adc
lahf
or
mov
daa
lods
inc
ret
inc
test
mov
fwait
xor
mov
out
sbb
cmp
cs
adc
mov
sahf
cmps
clc
jmp
in
outs
push
cmc
mov
mov
pop
fdiv
dec
dec
push
iret
loop
retf
pop
mov
sti
xchg
cmp
dec
call
add
inc
stos
enter
jb
or
add
jp
data16
push
fisub
add
xchg
push
mov
push
adc
xchg
mov
loope
sub
sub
std
adc
loope
cmp
xchg
lods
adc
and
cmp
icebp
mov
daa
cdq
pop
ins
dec
jg
mov
jmp
in
pop
inc
scas
cs
pop
pushf
inc
test
aaa
push
mov
repnz
pop
pop
push
into
xchg
(bad)
adc
popf
adc
aas
scas
dec
and
ds
jns
push
cmps
adc
test
enter
sub
je
test
lds
outs
test
sbb
jmp
loopne
clc
dec
adc
ror
inc
stc
mov
out
mov
jp
fnstenv
add
xor
ins
inc
cmp
(bad)
lahf
pop
dec
(bad)
sub
and
stos
data16
loop
mov
mov
or
cmp
inc
add
hlt
lea
jp
iret
xchg
add
movs
sub
cmps
in
jbe
sbb
icebp
retf
std
mov
dec
mov
jo
adc
xchg
mov
sub
sbb
imul
(bad)
scas
jmp
ins
stc
xor
push
dec
pop
mov
imul
add
mov
mov
shl
aaa
mov
xchg
push
mov
inc
fwait
push
xchg
bnd
push
rcl
scas
in
sub
push
sbb
mov
shr
inc
mov
add
pop
inc
test
rol
rcl
inc
jl
jmp
sub
sub
dec
(bad)
ja
gs
hlt
adc
ss
xor
call
or
dec
retf
gs
mov
xchg
or
jnp
jge
dec
sbb
adc
add
pop
in
or
mov
cmp
sub
movs
call
lock
pop
movs
mov
pop
fsubp
adc
nop
xchg
loopne
addr16
clc
cmp
sub
retf
jle
inc
cmps
scas
or
push
xor
xchg
add
mov
mov
inc
mov
xchg
int3
xchg
repz
inc
inc
or
ja
pop
or
and
stos
jmp
jmp
loopne
fst
or
aaa
cs
les
lahf
jp
(bad)
pusha
jmp
lds
shl
xchg
pop
es
out
mov
in
mov
sub
mov
cmps
fdivr
jmp
adc
repnz
out
rcr
sbb
jbe
xchg
shl
and
(bad)
lea
dec
out
mov
nop
fcmovb
mov
fsub
jns
sub
add
ins
push
push
faddp
sbb
dec
pusha
and
arpl
push
mov
mov
and
or
cmc
push
push
sbb
(bad)
cmp
clc
pop
inc
int
adc
shl
fdivp
push
(bad)
aam
fs
rcl
inc
aaa
push
adc
mov
jmp
push
fsubr
inc
dec
ror
mov
push
dec
or
retf
in
cli
stos
inc
jp
mov
xor
shl
sub
stos
retf
std
mov
mov
jecxz
sbb
enter
mov
dec
jne
in
mov
xor
rcr
xor
pop
sub
cmps
xchg
xor
cli
jle
jne
fsub
mov
lds
fwait
sbb
sub
xor
lahf
push
mov
movs
add
fs
in
mov
enter
call
fistp
xchg
(bad)
aam
adc
lds
inc
clc
(bad)
aam
and
pusha
mov
lods
push
stc
or
add
and
hlt
fidivr
jne
mov
cmp
xchg
in
idiv
fbld
push
and
xor
cwde
xchg
dec
das
out
addr16
adc
sahf
sub
adc
add
bound
jge
dec
pop
cs
ror
sbb
aas
call
das
stc
out
pop
push
pop
sub
push
je
xor
and
out
(bad)
sbb
stos
clc
cmps
dec
test
repz
mov
sti
pusha
das
in
jmp
cmp
xchg
daa
(bad)
xor
and
jmp
mov
cmp
out
fstp
iret
scas
mov
dec
dec
test
adc
add
retf
or
jmp
mov
push
jns
push
dec
adc
jmp
jecxz
xor
xchg
jo
xchg
rol
call
cmp
mov
or
lock
movs
fsub
in
cmp
lds
call
cli
int
je
mov
mov
fadd
xchg
lods
ffreep
inc
sub
sbb
sub
jmp
jo
xor
or
and
push
leave
ror
mov
fsubr
rcl
jmp
out
int
not
pop
xor
mov
sbb
cwde
es
or
sub
xor
(bad)
sub
aad
jmp
icebp
inc
cmp
mov
pushf
mov
sub
out
adc
mov
je
xor
push
shr
les
mov
push
aas
mov
and
sbb
out
adc
xor
sbb
outs
loop
push
icebp
gs
dec
lods
ins
imul
fldenv
fdivr
dec
movs
daa
repnz
cmps
mov
push
sbb
jne
mov
mov
fnstsw
es
dec
out
sbb
cli
jbe
add
test
jno
arpl
and
fdivr
psllq
sbb
in
pop
pusha
inc
cmps
jnp
pop
mov
in
movs
imul
ja
les
aaa
imul
arpl
push
push
nop
pop
rcr
jno
inc
rcl
xor
mov
pushf
cmps
xor
xchg
shl
sub
jae
cmp
scas
pop
repz
mov
ss
jecxz
jmp
loope
(bad)
(bad)
mov
nop
inc
in
adc
jae
(bad)
sub
jno
dec
mov
mov
aaa
pop
push
popf
inc
inc
jecxz
popf
cs
hlt
movzx
imul
inc
adc
fcomp
cs
or
xchg
jl
arpl
jp
arpl
xchg
push
xor
jle
out
mov
mov
adc
aas
fisttp
mov
jne
adc
mov
call
lods
repnz
pusha
xchg
sub
add
call
ds
rol
cmp
sbb
jns
sub
xor
lea
pop
aam
out
pop
dec
in
loope
adc
ds
or
jmp
xchg
sbb
int3
inc
mov
mov
je
stc
cli
ror
or
pusha
pop
xor
cmp
sub
std
mov
mov
cs
adc
or
push
mov
rcr
cmps
cmps
adc
rcl
pop
fdiv
fdivr
xchg
ficomp
ret
les
pushf
lahf
mov
jbe
test
sub
sub
es
(bad)
dec
test
retf
arpl
ins
add
sbb
inc
sbb
hlt
in
adc
into
ins
call
xchg
dec
sbb
jmp
cmp
in
fsubr
std
sbb
in
lahf
inc
movs
jmp
iret
out
xor
enter
test
das
xlat
push
imul
lahf
enter
sub
pushf
adc
sub
mov
adc
mov
jmp
sbb
add
xor
mov
inc
mov
sub
(bad)
mov
(bad)
pop
jl
std
(bad)
shl
stos
mov
mov
adc
ret
fistp
mov
jge
out
sbb
mov
outs
sub
popa
or
sbb
imul
rcr
mov
pop
ins
mov
and
ins
fstp
jns
adc
into
and
mov
(bad)
in
inc
mov
movs
jmp
hlt
cmp
mul
mov
adc
stos
sub
add
cmp
mov
out
push
mov
adc
and
mov
xor
sahf
ja
out
mov
sbb
push
or
push
not
inc
aam
test
fucomi
test
mov
not
push
jp
jle
xchg
and
xchg
xchg
adc
jbe
add
jbe
call
cmps
lds
xchg
shl
mov
mov
dec
les
dec
repz
or
push
or
push
jp
pushf
stc
sub
and
pop
ss
test
in
inc
out
pop
movs
cmp
imul
scas
mov
dec
xchg
fild
retf
add
movs
ror
sub
out
sub
int3
mov
lock
xor
inc
add
arpl
xchg
pop
pop
pop
rcr
sbb
aam
call
inc
inc
popa
mov
dec
inc
dec
push
lods
call
nop
es
movs
jp
clc
inc
call
mov
sar
ss
outs
add
adc
sub
mov
in
xchg
movs
arpl
repnz
cs
xor
add
push
mov
and
rol
dec
ror
sbb
adc
mov
pop
xchg
neg
inc
xor
dec
xchg
jb
push
cld
and
ror
pop
and
dec
in
fldlg2
add
(bad)
fdiv
mov
mov
push
imul
dec
jg
jg
push
mov
fisttp
mov
cld
jmp
dec
mov
sub
jge
mov
out
dec
adc
dec
ins
and
pop
add
test
rcl
mov
sbb
cld
mov
push
das
sbb
hlt
mov
mov
push
xor
add
es
pop
or
pusha
push
fmul
es
lods
mov
xor
or
or
xor
fucomi
(bad)
retf
mul
iret
repz
mov
out
rep
rcr
jb
fcmovu
and
les
dec
push
inc
adc
fs
push
or
mov
jbe
sbb
xchg
and
xchg
jp
sub
sti
addr16
ret
pushf
and
lock
cmp
pop
pop
in
(bad)
loopne
sub
cmps
daa
fist
sbb
gs
inc
sbb
aad
or
and
idiv
(bad)
dec
lea
jb
mov
dec
jbe
dec
mov
lods
sub
xor
pusha
int3
mov
push
aaa
repz
dec
mov
jg
mov
popf
aam
out
dec
xor
or
and
xchg
sub
in
test
rcl
add
ret
push
sbb
ja
jb
add
push
shl
pop
sbb
fsub
adc
ficomp
and
jne
dec
cmp
sti
lock
aam
mov
mov
adc
adc
mov
call
mov
imul
or
mov
jbe
jae
add
and
cmp
pop
imul
mov
mov
shl
add
xor
aaa
push
data16
outs
jmp
dec
adc
not
jge
sbb
jbe
or
xor
es
ja
push
cld
or
mov
adc
aad
mov
xchg
jmp
fidivr
adc
xchg
in
loope
punpcklwd
xor
cld
push
(bad)
adc
push
mov
xor
sbb
xor
xchg
push
sub
jle
int3
add
jmp
mov
stos
push
lods
push
dec
das
sbb
xchg
fisttp
push
xchg
imul
int
fimul
ror
mov
mov
out
outs
les
push
pop
cmc
(bad)
pusha
jo
and
test
pop
fdivr
pop
xchg
lods
add
je
sub
or
fcomip
cmps
lods
mov
(bad)
adc
or
(bad)
mov
cmps
loope
xor
repz
test
cvtpi2ps
aas
mov
mov
xchg
cmp
fstp
adc
popf
mov
cmps
out
xchg
mov
sub
fistp
stos
cdq
pushf
ins
ds
and
adc
scas
jnp
inc
imul
and
xlat
lock
jecxz
jg
stos
and
lock
mov
xchg
mov
int3
xor
sub
adc
add
push
aam
nop
popf
retf
push
dec
xor
sub
and
add
lock
loope
xlat
sub
sub
(bad)
push
fs
fdiv
fcomp
std
fsub
cmc
pop
xor
sbb
jno
xor
fnsave
push
lods
xor
loope
adc
idiv
cld
mul
fidivr
aas
sahf
nop
cmps
retf
xor
cmp
push
add
(bad)
je
int3
enter
mov
jmp
scas
loopne
xchg
aaa
jne
scas
and
push
sbb
or
and
lds
mov
jbe
ja
stos
shl
xchg
jo
mov
add
ret
cmp
add
lods
mov
or
mov
or
lahf
cs
fdiv
cmp
movs
(bad)
(bad)
jge
add
sub
mov
out
mov
or
pop
pop
imul
bswap
loope
or
push
sti
imul
or
jo
add
jecxz
int
mov
fisub
sub
jmp
adc
out
ret
xor
sbb
dec
in
inc
mov
addr16
sbb
push
mov
mov
rcl
fdiv
popf
push
jmp
scas
mov
outs
(bad)
sahf
cld
shl
sbb
stos
xchg
test
out
clc
pusha
sub
mov
or
pop
(bad)
sti
mov
pop
arpl
lock
cmps
adc
stc
dec
retf
sbb
ins
xlat
pop
ror
popa
jp
loope
aas
cld
shr
mov
add
leave
mov
mov
pop
pop
inc
cmps
repnz
mov
inc
gs
in
push
fs
fwait
retf
sbb
cmp
mov
or
xchg
stos
mov
xor
adc
mov
int
lahf
loop
cld
(bad)
retf
addr16
fdivr
fiadd
mov
outs
js
xchg
sub
adc
repz
es
test
pop
xor
repnz
mov
and
sbb
ins
jnp
ret
cmc
adc
mov
shr
jb
inc
cmps
jle
scas
fadd
sub
das
jl
nop
xlat
dec
pop
stc
cli
mov
and
sbb
inc
inc
nop
jae
add
dec
test
nop
repz
and
nop
dec
test
(bad)
or
push
sar
aaa
imul
sar
ror
adc
push
mov
inc
retf
add
sbb
add
movs
enter
int
sbb
add
fxtract
push
inc
ins
out
cdq
in
in
jo
push
dec
cmc
dec
jns
ss
xchg
push
and
imul
cwde
jae
or
dec
sub
fidiv
dec
aas
call
cs
pop
jo
scas
adc
jbe
adc
cdq
adc
jle
xor
xchg
mov
xor
mov
inc
les
retf
sbb
dec
leave
xchg
xlat
mov
mov
inc
sbb
pushf
xchg
mov
shr
fwait
adc
cdq
push
adc
outs
es
jnp
dec
jmp
retf
loope
call
cmp
fdiv
mov
lods
jbe
cs
inc
xor
lock
xchg
adc
addr16
adc
mov
mov
ins
mov
inc
stc
scas
mov
sahf
ret
sub
push
ret
les
sub
adc
inc
inc
pop
sbb
ret
leave
jne
mov
jnp
inc
test
mov
in
out
sbb
sub
and
cmp
mov
jb
adc
dec
push
push
mov
daa
sahf
push
pusha
sahf
mov
dec
mov
pop
scas
lds
dec
cwde
and
cmp
int
les
push
hlt
xchg
(bad)
sub
aad
dec
jns
jae
icebp
sti
aas
dec
shr
mov
sub
add
loope
fnstenv
int3
push
stc
add
js
lahf
mov
jl
scas
jbe
mov
imul
lds
sbb
add
push
test
pop
cli
push
arpl
adc
pop
mov
cmp
sub
dec
lahf
retf
sbb
in
add
dec
out
loop
jbe
mov
retf
push
jp
cmp
push
xor
iret
pop
mov
cmp
xor
fwait
jbe
stos
xlat
xchg
fcom
lahf
sub
adc
sub
adc
outs
or
xchg
or
jno
xor
jmp
jmp
cmp
nop
test
outs
pusha
not
xor
add
xchg
push
shr
das
jne
sub
stos
jmp
sub
sahf
cmp
dec
mov
xchg
jae
not
scas
jl
jecxz
ins
push
rsm
dec
xor
sub
ja
mov
adc
(bad)
cli
pop
call
push
out
fild
cs
fsub
mov
jle
mov
mov
(bad)
gs
in
or
fld
and
add
rol
scas
cmps
(bad)
(bad)
lods
and
add
in
jae
mov
fnstcw
imul
jne
mov
mov
mov
dec
pop
cmp
repz
mov
out
xchg
pop
inc
iret
repz
mov
pop
scas
jno
mov
inc
push
and
sub
xchg
loop
dec
add
movs
mov
jle
and
pop
js
mov
mov
push
movs
cwde
add
nop
ror
in
scas
fcmovb
(bad)
shr
mov
xor
leave
bnd
call
ja
cmps
xchg
sub
sub
into
push
(bad)
in
lea
inc
adc
enter
shl
sbb
adc
mov
(bad)
pop
jo
stos
mov
pop
dec
in
xchg
jne
test
scas
adc
xor
aam
lods
push
imul
mov
ror
and
push
cmc
int
mov
mov
ja
mov
and
iret
sti
ja
push
push
add
or
adc
pop
in
sbb
test
pop
cmp
stos
jb
sbb
add
pop
lea
daa
mov
sub
adc
dec
mov
ficom
in
pop
jb
pop
adc
clc
shl
arpl
jge
adc
add
test
lods
inc
jnp
pop
adc
mov
shl
popa
ret
pop
or
pop
ret
xchg
loope
ins
in
rol
jmp
pop
xchg
test
sbb
lods
(bad)
ss
jo
in
test
std
add
into
pushf
jmp
add
sbb
fisubr
or
pop
pop
rol
not
push
mov
sbb
fs
loope
pop
cmp
mov
neg
ins
das
inc
shr
stos
adc
jae
push
pop
cmp
gs
(bad)
adc
vsqrtsd
push
loope
push
retf
or
ins
fidiv
pop
leave
mov
scas
or
push
test
nop
stos
inc
xor
xor
add
jg
xchg
add
mov
loop
cwde
adc
sar
mov
(bad)
jmp
xor
jl
or
test
pop
xor
or
mov
push
inc
xor
cwde
cs
add
(bad)
lea
jecxz
inc
repnz
and
and
imul
push
pop
dec
xchg
int3
pop
inc
push
in
sahf
pop
lea
js
mov
mov
stos
sbb
fld
fs
adc
dec
cli
mov
jbe
and
call
nop
or
add
xor
xchg
(bad)
jnp
sub
mov
or
int3
jle
mov
fimul
nop
icebp
sub
or
add
xchg
or
loope
jne
cmp
(bad)
jmp
jle
push
popf
push
push
mov
enter
rsqrtps
mov
sbb
mov
sub
jg
sbb
push
lock
daa
arpl
push
jae
jb
jae
jnp
lock
sbb
xor
inc
jmp
out
jb
and
xor
jle
and
inc
mov
xor
or
dec
rep
add
inc
cmps
gs
add
add
mov
cld
das
cmp
pop
lock
push
idiv
sbb
mov
inc
mov
cdq
mov
call
mov
push
inc
mov
pop
aam
daa
pop
push
cld
out
dec
add
cmp
push
push
pop
in
and
call
repnz
aaa
outs
movs
sbb
or
pop
in
sub
out
adc
and
cmp
test
pop
sbb
cmp
sbb
dec
test
push
std
mov
xchg
mov
push
aam
repnz
pushf
cdq
xor
sbb
fst
add
lods
nop
movs
test
push
xchg
push
push
jnp
test
ins
pop
inc
mov
(bad)
push
das
jmp
ja
leave
es
ins
data16
xchg
inc
dec
xlat
push
push
sbb
cmp
mov
mov
or
inc
jmp
xchg
push
fstp
loope
bound
mov
pop
and
push
ret
fnstsw
dec
dec
mov
xor
call
push
dec
repnz
in
jmp
dec
ret
xor
jge
lea
out
aaa
and
in
mov
js
es
push
bound
jmp
mov
stos
and
lds
push
les
xor
jp
or
add
pop
je
mov
push
scas
adc
push
das
or
jp
daa
cmc
inc
mov
mov
xor
mul
cdq
dec
mov
xlat
scas
test
mov
fs
sbb
mov
ja
fwait
pop
popf
dec
arpl
bound
les
clc
(bad)
call
aam
ins
add
retw
in
inc
xor
(bad)
cmp
into
jae
cmp
lahf
ficom
sbb
and
inc
enter
push
repnz
(bad)
xlat
fmul
shr
ficom
fcomip
add
sbb
outs
out
cmp
and
jle
mov
imul
into
hlt
scas
xor
xchg
xchg
fadd
sub
add
shl
add
mov
and
pop
jmp
(bad)
sub
retf
sbb
mov
mov
add
inc
mov
test
fwait
jecxz
sbb
jl
aaa
mov
loopne
pusha
addr16
push
fimul
adc
pushf
out
(bad)
and
cmc
mov
es
cmp
not
shr
dec
mov
je
es
xchg
test
hlt
sub
in
fnsave
jle
fadd
fdivr
xor
xchg
add
shr
hlt
inc
lock
cmp
int
adc
idiv
mov
xlat
dec
cdq
fs
pop
push
push
xlat
ror
in
inc
xchg
push
mov
jne
call
inc
cmps
jge
mov
inc
jge
std
aam
jbe
pop
and
xor
xchg
lock
je
add
sub
addr16
neg
push
ds
stos
jne
sahf
aaa
rcr
add
pop
es
div
push
imul
rol
mov
out
retf
dec
inc
mov
mov
ret
or
hlt
test
xchg
sbb
stos
fbstp
or
ret
or
fcomi
fisttp
or
fimul
fld
mov
sub
cwde
std
and
mov
xor
retf
into
fucomi
mov
out
dec
les
mov
sbb
cmps
sbb
pop
or
out
push
mov
sahf
outs
mov
ins
mov
ins
or
icebp
pop
das
lea
dec
sbb
popa
add
clc
mov
jecxz
ds
(bad)
call
cmps
scas
les
mov
jecxz
dec
jae
cmp
xchg
int
shl
test
bound
fcmovne
mov
push
popa
push
stos
or
cmp
sub
sub
mov
jle
xor
mov
push
pop
inc
sub
(bad)
push
adc
adc
in
xchg
leave
stc
sbb
cmp
fsubr
jns
push
push
jne
jne
sbb
aam
hlt
mov
mov
push
fsub
mov
mov
addr16
push
push
cmp
aad
dec
adc
mov
mov
xor
cmp
stc
imul
gs
out
imul
jmp
out
fsubr
adc
test
jge
xor
out
rcr
pop
out
lods
vmread
cmc
popf
lahf
cmp
ds
sub
adc
mov
test
ja
in
push
mov
addr16
(bad)
mov
mov
imul
cmp
mov
sar
mov
fisttp
sub
jne
jp
pop
cmp
pop
cmc
add
jg
jbe
call
(bad)
clc
in
mov
and
cmp
mov
out
out
push
cwde
aaa
dec
or
inc
imul
mov
fwait
cdq
aam
push
and
cwde
jbe
adc
xor
push
fld
jle
mov
or
dec
xchg
rcr
add
xor
fidivr
popa
cdq
nop
test
int
lods
dec
ret
(bad)
gs
out
shr
mov
aam
stos
into
xchg
mov
adc
arpl
push
jo
push
jle
shr
jge
stos
sti
(bad)
jae
jno
rcr
sbb
cli
cmc
dec
lea
stos
jl
mov
fst
dec
stc
pop
jne
pop
sub
mov
inc
cmp
push
mov
out
add
dec
mov
sbb
and
xacquire
sub
pop
add
shl
(bad)
lahf
iret
sbb
mov
xchg
mov
inc
and
shr
outs
push
in
fwait
mov
shl
and
rcr
outs
push
repz
mov
mov
jg
add
(bad)
adc
mov
mov
movs
int
test
cmp
mov
xchg
rcr
inc
mov
push
mov
xor
mov
adc
mov
dec
add
data16
retf
sbb
es
test
jecxz
jmp
imul
pop
retf
xchg
and
inc
scas
lds
les
fsubr
nop
cld
pop
pop
in
ret
data16
xchg
movs
div
mov
rol
scas
movs
shl
and
clc
repnz
jmp
push
outs
or
pop
push
shl
push
repz
cmc
es
bound
retf
mov
dec
and
push
mov
mov
push
adc
stos
sub
or
in
push
sti
leave
int3
leave
adc
test
xchg
movs
pop
ins
aad
call
push
sbb
jbe
mov
jge
aam
leave
jecxz
mov
in
mov
out
fcos
sti
ret
loope
xchg
loope
push
std
in
fild
xchg
pop
movs
dec
arpl
mov
out
packuswb
pop
xor
stos
fs
fldcw
sbb
inc
in
add
mov
adc
nop
sub
ret
cmc
jne
lds
pushf
repz
mov
in
retf
(bad)
or
and
outs
call
fdivr
push
ja
cmp
xchg
xor
aas
mov
push
push
stos
pop
cmp
mov
(bad)
cmc
(bad)
fadd
inc
jecxz
popa
xchg
push
int3
(bad)
mov
aad
retf
or
scas
cdq
xor
dec
jae
dec
int3
js
leave
dec
push
adc
push
mov
sar
dec
in
push
ja
lea
add
jp
or
pop
inc
pop
rcl
mov
cmps
adc
in
mov
fwait
jmp
icebp
stc
push
loope
outs
dec
pushf
mov
jmp
out
test
lea
jb
push
cld
ins
sti
lea
in
sub
adc
pop
cmp
clc
fs
sti
(bad)
or
cmp
sahf
xchg
or
push
mov
mov
pop
sbb
adc
out
sbb
ret
sbb
cmp
(bad)
mov
mov
nop
jno
push
push
stos
jns
mov
lods
xchg
scas
inc
add
data16
fidivr
pop
imul
bound
jbe
int3
pushf
or
rcl
xchg
cs
(bad)
sti
adc
pop
ret
lock
aas
mov
adc
adc
dec
retf
dec
ds
add
out
inc
mov
in
cdq
xchg
mov
xchg
and
jns
lahf
mov
mov
cmp
stc
nop
or
push
sti
lea
xor
xchg
cmp
fld
and
jns
movs
jo
adc
mov
jo
lahf
push
pop
loop
inc
cmp
out
mov
ffreep
adc
outs
sbb
inc
mov
add
mov
sub
xchg
adc
jbe
mov
jecxz
xchg
xchg
or
xchg
lds
push
pop
dec
mov
mov
in
call
out
sub
dec
jmp
adc
jl
ret
xchg
mov
xchg
outs
sub
cli
push
inc
sbb
mov
das
ret
sub
stos
imul
mov
mov
sub
xchg
fstp
xor
inc
xchg
sub
aas
fist
mov
mov
lea
repz
mov
pushf
(bad)
pop
jecxz
add
aas
clc
sbb
push
cs
jl
mov
xchg
(bad)
mov
test
dec
jo
jp
dec
sbb
(bad)
cld
or
jl
fs
sti
pop
pop
xchg
test
xchg
(bad)
rcr
sar
xchg
xor
prefetcht2
mov
xor
test
xchg
mov
xchg
or
scas
cmp
movs
cmp
pop
adc
repz
pusha
addr16
scas
lea
jbe
push
xor
inc
push
mov
add
push
retf
jbe
sub
sub
pop
mov
test
pop
inc
mov
in
out
xchg
jmp
fucom
mov
xchg
cs
or
jmp
popa
stos
cmp
pop
dec
jne
cmps
fdivr
jnp
aas
ds
cs
dec
jnp
jp
jne
inc
jg
add
ret
ja
jmp
sahf
xchg
loope
cs
mov
mov
mov
mov
mov
std
sbb
ins
xchg
setnp
dec
cmp
jo
pusha
mov
xchg
and
(bad)
(bad)
pop
call
push
je
scas
out
cmc
sbb
mul
add
add
push
mov
push
pop
les
scas
push
cld
stos
sbb
inc
fucomip
mov
jno
push
das
mov
test
mov
jecxz
mov
loop
or
cmc
pushf
je
add
pop
neg
(bad)
int
ss
or
sahf
pop
mov
adc
(bad)
fistp
in
clc
in
sti
mov
jnp
dec
push
xchg
out
into
shl
mov
test
mov
int3
fistp
xor
mov
mov
push
bound
jmp
in
(bad)
in
aam
mov
adc
aam
(bad)
lock
es
outs
cmc
mov
movs
popf
push
dec
mov
add
mov
xor
mov
xor
dec
inc
and
push
ror
pop
cmp
jecxz
or
jb
jbe
fidivr
mov
cwde
(bad)
movs
jo
jmp
shr
shl
cdq
(bad)
sub
scas
cli
mov
dec
fadd
sub
add
frstpm(287
xchg
or
mov
jo
int
pop
mov
cmp
push
fcom
mov
jbe
das
outs
arpl
ret
in
xor
sub
inc
pusha
les
clc
dec
pop
add
movs
push
add
out
in
int
pop
push
retf
and
mov
fimul
inc
test
inc
adc
mov
(bad)
sub
dec
(bad)
lock
jge
retf
xchg
movhlps
xor
xchg
mov
pop
xlat
push
aad
movs
and
retf
movs
xchg
(bad)
push
addr16
shl
inc
lods
mov
dec
popa
jg
stos
ins
bound
icebp
sub
outs
sbb
mov
(bad)
sar
pop
pop
add
pushf
jmp
test
cli
test
sub
or
mov
cwde
loop
xor
(bad)
mov
push
out
sbb
push
(bad)
adc
xor
and
fisub
mov
or
icebp
pop
out
push
pop
mov
sub
neg
faddp
hlt
ret
pop
mov
loopne
xchg
int
xchg
mov
push
adc
popf
fcom
mov
push
jg
aas
out
or
arpl
js
ins
cmp
push
adc
out
aad
inc
(bad)
daa
dec
bound
stos
mov
enter
dec
dec
into
push
pop
sbb
sub
dec
into
sub
or
push
jno
push
int
shl
dec
cli
jb
pop
cmp
aam
test
loop
call
xchg
mov
lahf
push
mov
hlt
je
mov
pop
adc
imul
hlt
out
push
jp
les
sub
scas
sar
ins
mov
push
dec
mov
push
aad
xchg
inc
cmp
jb
outs
push
mov
popa
movs
dec
arpl
(bad)
popa
push
sar
pushf
scas
push
inc
lock
adc
adc
or
inc
mov
sbb
xor
cdq
mov
aaa
inc
cld
jmp
sub
int3
jmp
and
shr
mov
jb
outs
and
test
(bad)
cld
add
ja
mov
adc
add
iret
call
les
cmp
jmp
jmp
xor
stos
push
xor
jl
xchg
add
xchg
sbb
js
or
add
in
push
mov
dec
mov
mov
mov
sti
cmp
icebp
and
dec
das
cmp
iret
mov
jmp
xchg
jno
mov
mov
jo
push
cld
les
push
mov
test
mov
out
and
jo
pop
push
inc
sub
es
mov
stos
push
xor
or
adc
xor
and
mov
rcl
inc
cmp
stos
add
cmp
ds
xchg
adc
sbb
sbb
mov
mov
push
add
call
mov
aaa
retf
repnz
inc
inc
stos
and
dec
gs
sbb
out
cli
in
xchg
push
jmp
outs
mov
sbb
(bad)
cmp
in
push
pop
jecxz
or
int
fst
pop
cwde
and
adc
(bad)
(bad)
stc
std
sbb
sbb
repz
es
push
sahf
push
pop
fadd
mov
push
cmp
jg
ins
mov
(bad)
ja
cmp
js
jno
adc
mov
fwait
lahf
sub
out
sbb
mov
push
cdq
pushw
inc
popf
stos
imul
mov
add
mov
cmp
fst
std
mov
outs
mov
and
imul
int
outs
lods
push
outs
cmps
push
pop
pushf
in
mov
pop
push
in
(bad)
xchg
rcr
rcr
fldpi
call
out
bound
push
retf
test
dec
sar
or
arpl
scas
ret
out
mov
dec
cmp
aaa
mov
mov
sub
xor
cs
inc
jnp
sub
mov
or
push
stos
and
mov
push
sub
push
jbe
bound
movs
(bad)
stos
or
mov
shl
sub
inc
cwde
out
pusha
ds
lods
pop
or
imul
cmp
add
inc
mov
xor
(bad)
data16
(bad)
fild
xor
jns
rcr
les
loope
out
xlat
sub
in
pop
lods
pop
sbb
shr
sbb
adc
inc
call
xor
fmul
in
ins
out
and
pop
fsubr
or
cmc
fst
and
mov
rol
js
inc
mov
fcomp
and
xor
cmp
xchg
cmp
cmp
inc
stos
add
jae
and
inc
scas
out
push
das
mov
shl
fcomp
(bad)
fimul
inc
and
inc
loopne
push
mov
out
fwait
scas
(bad)
fistp
sub
pop
push
cld
shr
or
jmp
pop
shl
pop
pop
lea
call
jne
popf
xchg
out
hlt
pop
jns
and
pusha
push
test
push
dec
lods
aas
pop
sti
sbb
jl
or
pop
and
and
cmp
add
ja
jp
cld
lock
pop
lock
cs
outs
add
lahf
movs
adc
stc
mov
mov
fsub
stos
push
mov
lock
fcmovbe
or
or
in
xor
sbb
xlat
icebp
pusha
pop
cmp
mov
es
outs
jmp
fcomp
pop
mov
cmp
pop
jecxz
out
test
test
retf
addr16
stos
xchg
stos
xchg
fidivr
and
jo
add
jae
xchg
je
mov
leave
btc
push
out
inc
push
addr16
jb
(bad)
mov
fdivr
jecxz
mov
mov
js
adc
test
push
cmp
mov
in
sbb
add
add
pop
in
xchg
test
stc
fisub
sbb
push
aaa
bound
cdq
pushf
stc
cwde
test
or
int
cmp
sbb
adc
and
pusha
stos
out
je
push
xchg
xor
mov
mov
sbb
(bad)
adc
int
cmp
int
(bad)
outs
cs
cdq
adc
rcl
xor
outs
ret
fiadd
jne
pop
adc
xchg
ficomp
dec
inc
pop
jns
cmp
cmp
mov
jecxz
or
add
jl
neg
stos
(bad)
ds
cmp
push
jb
push
cmc
in
and
out
jmp
repz
or
pushf
mov
push
int
loopne
ss
xor
adc
(bad)
cmp
xchg
lods
mov
xchg
adc
mov
dec
fwait
imul
or
and
(bad)
cmp
cmps
and
mov
pop
xchg
repnz
(bad)
sar
jo
gs
fldenv
pop
mov
je
dec
es
movs
pop
test
xlat
adc
aaa
adc
inc
fwait
push
scas
cmp
mov
inc
test
outs
imul
jecxz
add
cmp
cmp
mov
lea
sbb
ret
sub
sub
movd
mov
pop
test
jle
lods
imul
adc
stc
inc
dec
or
sub
test
inc
aaa
jl
xchg
inc
or
or
mov
(bad)
and
mov
(bad)
sub
ror
cmp
adc
and
mov
cmp
add
sub
mov
aas
inc
jmp
adc
mov
test
push
test
or
mov
xchg
mov
stc
int
and
nop
xchg
xchg
pop
dec
adc
mov
jmp
jmp
rcr
mov
pushf
fdiv
inc
sbb
inc
jecxz
es
pop
and
and
ficomp
adc
ss
imul
rol
mov
out
(bad)
pop
and
xchg
sbb
jbe
adc
inc
mov
mov
pushf
mov
inc
and
leave
dec
dec
xlat
xor
push
inc
or
cwde
sbb
fmul
sub
into
loope
ins
sbb
and
cwde
cmp
mov
and
test
les
jae
es
sub
imul
adc
(bad)
cmp
std
nop
les
inc
mov
pop
call
sub
out
mov
data16
add
sidtd
int
push
add
push
inc
cdq
adc
mov
and
mov
std
and
fisub
sbb
popa
sbb
fxch
shl
(bad)
sub
into
pop
add
mov
pop
add
outs
fnsave
sbb
jne
gs
repnz
(bad)
call
adc
adc
mov
pushf
xchg
mov
add
jle
add
daa
sbb
xor
add
scas
ret
mov
retf
jne
into
mov
sub
dec
fwait
xchg
sub
sbb
call
adc
mov
or
(bad)
lock
nop
xchg
jle
int
xchg
mov
adc
js
js
push
idiv
out
mov
jb
push
add
mov
aaa
jbe
push
jge
push
dec
mov
mov
adc
ffree
jmp
enter
(bad)
mov
mov
sar
xor
xor
jno
fidivr
mov
dec
daa
(bad)
imul
xor
fs
shl
add
cmc
jmp
test
sar
popf
adc
jo
icebp
icebp
dec
inc
mov
sti
ror
add
pushf
sub
out
jae
ficom
lock
mov
pop
or
xchg
in
sub
fs
mov
mov
xchg
ds
sub
icebp
(bad)
and
mov
movs
sub
std
cmp
adc
cmp
xchg
dec
add
stos
cmps
jmp
(bad)
push
adc
sbb
jnp
xchg
ins
cmp
fsub
mov
adc
sub
std
repnz
and
cld
mov
sbb
sar
sub
jns
mov
adc
cdq
loop
shl
call
fwait
pusha
fcomp
ins
out
rcr
es
in
mov
shl
sar
retf
mov
jge
adc
ret
push
and
cwde
mov
call
inc
dec
inc
mov
(bad)
sbb
push
mov
sbb
fwait
mov
add
cwde
sahf
ss
int3
cmp
hlt
dec
xchg
adc
leave
xchg
enter
cmp
aaa
add
push
sti
cmps
sbb
push
in
clc
stc
mov
jecxz
call
pop
mov
inc
mov
lahf
fist
test
in
into
cmps
ss
push
sbb
out
int3
movs
dec
ins
push
ja
cmc
ss
sub
sahf
push
inc
sbb
test
test
sahf
jg
sub
xchg
pop
imul
stc
out
pop
imul
popa
std
ins
mov
adc
call
outs
add
xor
xchg
adc
sbb
xchg
dec
and
fst
(bad)
cmps
adc
(bad)
ins
mov
ror
(bad)
fist
sbb
dec
add
mov
and
inc
repnz
add
sbb
push
rol
or
repz
push
shl
aad
mov
mov
mov
and
push
loope
push
mov
cmp
dec
shl
mov
outs
mov
div
mov
dec
ins
inc
cmc
cmp
add
out
mov
push
dec
push
fwait
mov
loop
sbb
test
nop
pusha
cdq
mov
sahf
sub
out
mov
retf
add
xchg
lahf
mov
mov
add
jo
and
pushf
mov
nop
popf
dec
mov
fld
push
(bad)
add
jnp
xchg
(bad)
shl
aad
call
xchg
mov
rcr
sbb
push
stos
enter
dec
gs
mov
data16
mov
push
neg
aad
jne
xchg
jae
cmp
cld
icebp
jl
or
xor
pushf
jmp
mov
out
push
adc
inc
popf
int3
mov
or
sbb
out
ja
mov
mov
or
rcl
sub
test
jbe
mov
mov
push
call
or
test
adc
(bad)
mov
push
add
mov
adc
clc
in
jmp
iret
mov
push
mov
popa
xor
daa
mov
lea
icebp
mov
bound
jl
ja
sar
loopne
jg
inc
inc
bound
movs
jo
inc
mov
push
(bad)
mov
mov
fmul
cmp
mov
scas
(bad)
ja
test
sbb
cwde
cmp
adc
push
push
movs
out
test
cwde
jmp
hlt
xor
mov
cmp
and
add
pop
pushf
jmp
imul
mov
popa
loop
jmp
pop
mov
std
cmc
repz
icebp
mov
mov
and
inc
fistp
pop
stos
gs
or
sub
lds
push
hlt
fsincos
and
mov
sub
pop
pop
rcl
out
(bad)
jnp
test
and
mov
inc
xchg
or
test
out
xchg
fistp
stos
cmp
aaa
lea
push
not
xlat
aaa
pop
out
jnp
mov
pop
add
aas
(bad)
or
fs
test
imul
push
(bad)
xlat
fistp
lock
sbb
outs
es
xor
sub
sub
or
pop
int3
dec
lods
outs
push
mov
inc
jecxz
cmp
and
mov
loopne
int
inc
inc
pop
mov
rcr
mov
js
inc
pand
adc
popf
outs
mov
sbb
out
jle
or
rol
sti
int3
inc
popa
xchg
cdq
(bad)
jmp
push
and
shl
arpl
movs
ficom
xor
or
dec
push
push
dec
punpckldq
pushf
add
and
outs
ss
adc
xor
and
clc
out
dec
pop
in
ret
jbe
jb
adc
sub
xchg
in
push
pop
imul
xor
mov
cmps
mov
mov
xor
mov
mov
mov
sbb
mov
mov
and
pop
retf
cmc
shr
es
sub
adc
retf
lds
or
ffree
movs
in
xchg
mov
cmp
xor
rcr
mov
xchg
je
or
(bad)
dec
out
xchg
mov
and
idiv
jno
mov
std
daa
sub
xchg
fsubr
xlat
adc
xchg
in
sub
inc
add
sub
xlat
sbb
and
jge
pop
stos
call
cmp
ins
pop
sbb
lds
xchg
in
inc
jle
mov
rol
or
cld
test
repnz
jb
mov
dec
ins
pop
pop
lahf
mov
(bad)
fisttp
es
test
sub
and
stos
cmp
and
mov
rcl
mov
push
mul
les
push
add
inc
inc
sbb
mov
popa
push
adc
(bad)
and
or
retf
adc
adc
dec
mov
neg
add
ds
xor
dec
and
inc
pusha
test
out
cld
das
sub
sar
ret
jne
not
xor
push
into
sub
outs
aad
in
mov
mov
mov
lods
sti
mov
cdq
mov
add
loopne
jle
cmp
or
mov
jb
repz
jl
pusha
sbb
imul
push
je
inc
jmp
mov
cmps
cld
or
cli
mov
sub
mov
dec
movs
lods
stos
retf
adc
mov
cmp
xchg
sahf
dec
test
popa
add
sti
or
mov
add
lods
mov
sub
sar
pop
inc
call
dec
out
stos
adc
fld
lea
(bad)
rcl
gs
ins
add
(bad)
(bad)
sub
add
ret
bound
jo
pop
jp
stc
mov
scas
ins
bound
and
mov
cmps
push
in
popa
adc
pop
xor
ror
out
inc
and
clc
ret
daa
jg
cmp
aam
add
pop
test
adc
les
cmps
stos
int
js
jno
fsubr
aad
iret
inc
add
xchg
inc
jmp
sub
scas
(bad)
jl
movs
daa
mov
shl
sbb
sbb
arpl
mov
js
adc
cmp
mov
jno
dec
(bad)
mov
jl
push
jg
out
xor
iret
cmp
sub
jle
adc
inc
jmp
sub
dec
repz
or
xchg
(bad)
in
test
ror
(bad)
cmps
adc
popf
inc
jo
jns
and
adc
add
mov
adc
mov
adc
leave
maxps
dec
pop
cmp
int3
out
daa
repz
and
js
xor
cli
scas
cld
sti
dec
mul
test
sbb
and
xchg
or
or
(bad)
pop
inc
ins
mov
cld
pop
dec
dec
jmp
cmc
dec
xchg
repz
cdq
out
retf
xor
or
mov
jb
add
fbstp
dec
xchg
sub
jns
sar
hlt
ss
call
or
cmp
lds
inc
ficom
push
imul
(bad)
in
cmp
dec
inc
dec
inc
test
jmp
cmp
mov
push
dec
(bad)
mov
popf
adc
gs
shl
pop
test
dec
addr16
in
cld
pop
pushw
popf
pushf
fadd
sbb
pushf
or
out
pop
or
sbb
xor
mul
gs
xor
pop
xchg
ja
shr
imul
outs
sub
ins
(bad)
and
and
sbb
mov
mov
(bad)
mov
sahf
(bad)
sbb
or
jl
rcr
and
sub
shr
cmp
push
cmp
mov
lea
sbb
xor
adc
jmp
cmps
out
hlt
out
inc
inc
fisub
lahf
iret
inc
jl
add
fmul
xchg
lock
push
xchg
outs
push
inc
ins
and
imul
mov
aam
mov
push
inc
xchg
fldcw
lods
sub
sbb
or
out
mov
mov
idiv
ret
xchg
xchg
pop
mov
sub
sub
adc
lods
test
outs
scas
adc
push
and
repnz
mov
shl
and
xchg
not
daa
(bad)
cs
pop
leave
mov
or
xlat
shl
outs
ins
aam
inc
jmp
jne
aas
sub
les
js
mov
adc
pop
mov
clc
cmp
(bad)
in
xor
inc
mov
cmp
scas
(bad)
mov
(bad)
mov
dec
adc
inc
cmp
in
xor
popf
pop
enter
pop
mov
scas
adc
sbb
sbb
scas
movs
out
mov
fwait
cmp
inc
mov
imul
jmp
es
and
xchg
inc
and
(bad)
add
xchg
cmp
push
mov
lock
lods
daa
xor
cmps
cmp
push
in
stos
push
add
out
mov
mov
inc
mov
mov
sbb
das
jnp
jno
in
or
call
sub
ds
xchg
push
add
cmp
mov
add
call
xchg
lods
xor
mov
push
add
adc
jo
push
loope
(bad)
mov
(bad)
and
inc
mov
jns
inc
push
and
call
out
mov
or
jle
dec
pop
xchg
jmp
movs
cs
xchg
push
cwde
fimul
xchg
in
or
inc
lahf
ret
push
cdq
sub
ins
and
lock
mov
push
lea
jle
mov
repnz
das
(bad)
call
jge
out
imul
hlt
xchg
mov
retf
ror
or
int3
call
xchg
and
dec
sub
mov
sbb
out
mov
jns
loop
arpl
mov
mov
jecxz
ja
xchg
inc
aam
outs
out
cmp
in
adc
out
int3
push
inc
in
dec
xor
dec
mov
pop
pop
add
sub
das
pop
pop
lahf
pop
das
shr
push
xchg
jmp
inc
(bad)
leave
add
in
bound
call
les
shl
cmp
xor
and
jne
shl
jecxz
aas
lods
or
inc
dec
outs
push
cmp
sar
test
(bad)
pop
jns
xor
mov
pop
aam
or
loop
xlat
shr
leave
sar
and
xor
inc
in
sar
mov
lds
test
pop
jne
(bad)
sbb
ins
(bad)
mov
test
cmp
add
in
loope
adc
push
dec
dec
dec
jmp
(bad)
xchg
xchg
jmp
push
movs
cs
dec
mov
(bad)
or
jmp
pop
cmp
sbb
mov
adc
adc
sub
xor
pop
setle
lds
sub
retf
test
cld
adc
push
cmp
idiv
les
call
repz
sub
xchg
mov
movs
movs
(bad)
mov
cdq
push
pop
cdq
loopne
lock
sbb
scas
test
ja
cmps
add
lock
scas
mov
out
inc
xchg
mov
xchg
add
push
cs
xor
popf
test
movs
test
mov
dec
daa
data16
mov
add
mov
xor
cmp
mov
arpl
and
rcl
(bad)
cli
imul
mov
sbb
pop
cmp
cs
(bad)
sar
out
cmps
fwait
shl
call
dec
std
push
scas
out
and
inc
daa
jbe
dec
adc
fdiv
les
xor
fs
aam
cld
pop
mov
mov
jo
mov
call
xor
sbb
gs
push
cmc
mov
leave
pop
in
stc
sub
or
repz
lods
faddp
lock
inc
sbb
xor
inc
or
dec
repz
inc
shl
push
sub
mov
std
cmps
ss
adc
cmp
lahf
cmps
mov
out
add
cs
dec
(bad)
jo
out
fs
pop
fld
mov
fwait
or
xchg
aas
mov
push
cmps
rcl
iret
sbb
test
and
pusha
jecxz
bound
mov
push
add
and
sub
sub
jp
mov
jecxz
or
outs
push
cdq
out
(bad)
cmp
mov
lods
mov
jno
inc
call
arpl
mov
cmove
jmp
scas
dec
push
std
push
pop
pop
adc
cmp
sub
(bad)
movs
in
add
inc
into
(bad)
pusha
fsubr
add
js
pop
dec
xor
adc
sub
dec
(bad)
dec
lods
pushf
sbb
push
mov
(bad)
(bad)
aaa
jnp
xchg
push
push
mov
sti
out
imul
imul
stos
xchg
call
loopne
cmc
test
pop
mov
mov
pop
cmp
je
adc
add
cmp
in
aaa
sub
cmp
jbe
outs
mov
adc
ret
scas
fmul
and
and
hlt
cmc
or
cmp
sub
xchg
or
xchg
xor
test
je
fst
pop
retf
das
lea
inc
fs
pop
int
xlat
cs
repnz
mov
jne
sbb
push
div
cdq
dec
lods
push
push
xchg
std
cs
mov
sbb
sti
outs
popw
xchg
(bad)
adc
data16
in
adc
stos
fst
xor
mov
xor
cmp
lods
jge
test
iret
cmp
aam
pop
bound
loop
clc
sub
retf
fs
imul
push
ret
or
mov
xchg
scas
fsubr
jne
imul
pop
addr16
sub
pop
push
inc
mov
int
js
adc
sub
enter
leave
scas
popa
sbb
shl
repnz
call
push
or
jne
leave
lea
cmp
inc
ficom
dec
in
nop
and
fcmovnu
sbb
adc
dec
push
inc
adc
jmp
mov
popa
out
sub
std
aam
repnz
jmp
int
into
ins
mov
iret
push
adc
adc
aaa
pop
shl
xchg
push
dec
pop
pusha
std
sbb
test
in
or
bound
jnp
fdivr
pop
sbb
frstor
adc
enter
into
xlat
rol
xchg
imul
and
lea
adc
sub
stc
jne
iret
lahf
sub
push
push
xor
inc
int3
jmp
fstp
call
mov
test
aaa
aam
inc
sbb
mov
and
mov
stc
aam
movs
mov
pop
jns
shl
and
add
aad
inc
jmp
icebp
mov
push
jg
std
aaa
int3
cmp
or
js
xchg
mov
cld
mov
sahf
enter
int3
ds
inc
addr16
inc
push
icebp
retf
mov
mov
mov
aam
js
sahf
fbstp
adc
lods
adc
lods
inc
cmp
dec
mov
fmul
jnp
int3
add
mov
fmul
mov
(bad)
fstp
and
add
test
add
ins
jmp
xor
(bad)
or
jl
and
xlat
xor
pop
mov
retf
mov
push
shl
test
in
test
xor
in
sbb
movs
not
adc
loope
bound
jg
jnp
or
adc
sbb
add
in
scas
and
push
mov
push
dec
sub
dec
inc
ins
into
adc
(bad)
out
ss
adc
aam
fincstp
mov
mov
sbb
xlat
adc
jle
outs
mov
xor
inc
push
jg
cmps
mov
shr
test
push
or
outs
adc
test
les
dec
sbb
fisub
cmp
push
in
in
dec
inc
sub
fisttp
xlat
(bad)
inc
cmp
nop
(bad)
ja
movs
aam
sub
and
mov
mov
mov
ret
adc
xlat
imul
dec
xor
jne
or
dec
loopne
cmp
(bad)
out
fs
js
xor
mov
(bad)
clc
xchg
inc
mov
or
data16
loope
sub
aaa
ret
xchg
pusha
rol
push
add
dec
push
jmp
shl
inc
jne
sub
add
mov
ins
cmps
adc
cmp
dec
pop
not
std
sbb
(bad)
pushf
jmp
sub
stos
clc
mov
xchg
or
shl
sub
jns
pop
inc
lds
and
daa
loope
add
je
fistp
leave
adc
lock
ins
mov
inc
cmp
xchg
fadd
mov
addr16
mov
cwde
adc
in
mov
dec
mov
jge
pop
in
lods
push
adc
jmp
pop
(bad)
stc
inc
retf
jmp
adc
in
mov
adc
xor
mov
mul
jb
adc
xchg
and
int3
mov
fild
mov
push
add
dec
retf
mov
jp
inc
retf
outs
adc
sub
in
sbb
and
sbb
ja
movs
stos
mov
sbb
in
adc
mov
cmps
dec
aam
stos
fmul
mov
rol
pop
cld
(bad)
jmp
adc
sub
leave
pop
xchg
pop
mov
hlt
bound
inc
xor
sti
inc
push
dec
aas
dec
enter
push
(bad)
fbld
pop
or
cld
cli
lock
int
mov
mul
clc
and
lods
into
in
movs
mov
sahf
loopne
add
adc
rcl
movs
xor
movs
fwait
jns
fwait
test
mov
das
repz
into
add
(bad)
fmul
cwde
loopne
xchg
retf
xchg
shr
or
fsub
inc
(bad)
push
sysret
adc
fistp
shl
ret
cmp
ret
dec
pop
retf
imul
cmps
mov
fmul
stos
hlt
cmps
(bad)
pop
add
pop
cdq
jmp
call
xor
rcr
push
test
out
mov
(bad)
push
adc
sbb
rcr
shr
mov
retf
mov
sub
mov
aas
cmp
jne
jae
call
cmp
int
sbb
outs
mov
test
and
ins
in
std
xchg
out
push
data16
pop
mov
imul
aas
mov
je
cmp
mov
mov
(bad)
std
push
jge
mov
(bad)
fsubrp
test
out
xchg
test
inc
outs
jne
sub
(bad)
xchg
call
push
lds
sub
dec
push
(bad)
xlat
mov
mov
jns
inc
jb
ss
pop
jp
bound
(bad)
and
push
cmp
add
adc
out
mov
dec
sbb
jg
out
rcr
and
fimul
lock
test
add
mov
fild
scas
call
test
test
repnz
mov
daa
add
inc
sahf
sahf
cmp
fdiv
and
sbb
xor
mov
push
mov
jo
pop
outs
sub
cmps
jg
cwde
mov
jecxz
push
pushf
aas
cmc
jbe
ror
push
sti
movs
sub
inc
jnp
fwait
push
mov
push
sbb
or
imul
pop
mov
inc
pop
int
xchg
add
mov
mov
int3
shl
mov
cmp
jo
jecxz
cmps
pop
xor
mov
loop
dec
mov
mov
div
out
jae
jp
xchg
in
or
shl
add
xor
dec
fnsave
mov
outs
imul
lahf
ror
ins
jb
hlt
xor
cmc
jecxz
or
push
mov
jge
pop
mov
and
mov
cbw
ja
scas
lock
jb
sbb
fmul
or
in
mov
jns
das
loop
or
pop
imul
mov
sub
sti
cwde
ror
popa
adc
call
in
movd
cmp
aas
add
dec
mov
aam
adc
in
jge
fdiv
ja
push
push
scas
mov
in
or
pusha
in
and
in
adc
int
mov
inc
aad
aaa
cmps
out
sbb
test
push
jne
test
add
cdq
push
push
sbb
cmp
jno
bound
movs
movs
sbb
aas
lahf
sar
in
test
mov
shl
inc
jbe
pop
cs
retf
ins
and
jmp
xchg
stos
popf
int3
fisubr
or
jle
push
sti
(bad)
jnp
push
jns
and
cwde
xchg
mov
adc
pop
cmps
mov
ficom
loop
shr
xor
jmp
or
bound
icebp
mov
in
adc
shl
inc
cmp
stos
jp
(bad)
jne
pop
sar
(bad)
jge
xlat
and
xchg
and
sub
shl
mov
sub
je
mov
jl
dec
mov
loope
mov
test
mov
mov
mov
or
xchg
retf
out
outs
xchg
dec
ja
jl
xor
movs
in
push
test
out
cld
push
popa
pop
push
xor
adc
pusha
mov
in
jmp
mov
adc
out
mov
popa
sahf
sub
divps
leave
sbb
cmp
jbe
sbb
pop
in
and
mov
dec
pop
inc
nop
cwde
in
aam
jmp
jns
jno
lahf
aas
sub
jne
aam
ss
push
push
mov
push
sub
arpl
ret
retf
mov
movs
retf
mov
fdiv
rcl
dec
jle
dec
xor
add
inc
(bad)
ds
outs
jb
or
fdivrp
daa
mov
fwait
sbb
pop
lock
jae
inc
mov
pusha
mov
and
out
dec
jno
cs
les
push
cwde
fcomp
lds
push
push
mov
test
mov
aad
jp
add
scas
test
inc
out
cli
inc
hlt
mov
rcr
and
lods
inc
loop
ucomiss
mov
(bad)
pop
adc
jo
jae
xor
sbb
scas
aas
ror
xchg
(bad)
rcl
mov
jmp
out
lock
(bad)
push
jg
dec
lock
xchg
emms
cmps
jo
fld
adc
std
jno
pop
cmps
push
lea
adc
scas
cmp
loopne
fmul
add
ins
jbe
mov
push
repz
das
ret
je
hlt
xchg
inc
cmps
sbb
pop
(bad)
or
or
pop
push
rcr
dec
call
and
leave
lods
push
in
inc
icebp
and
loop
leave
xor
cs
das
pop
mov
push
mov
xchg
sti
dec
fcmovnu
mov
imul
test
out
mov
lods
mov
mov
jnp
sbb
mov
cmp
sub
(bad)
into
cmp
dec
fistp
push
cld
rol
pop
jmp
shl
pop
in
outs
pop
nop
adc
daa
adc
and
and
retf
xchg
or
or
leave
dec
call
(bad)
mov
cmp
adc
jns
arpl
lahf
je
pop
sbb
icebp
add
jge
mov
sahf
xchg
retf
xchg
inc
xor
pop
loope
adc
cmps
into
sbb
mov
jo
and
ins
mov
stc
sub
in
mov
xchg
jmp
std
inc
mov
pop
sub
push
movs
cmc
jl
mov
stc
add
jl
(bad)
fcmove
xchg
mov
sar
test
cmp
mov
(bad)
mov
loope
mov
adc
add
xor
sbb
jg
shl
pop
cmp
mov
xlat
or
and
bound
out
push
cld
(bad)
jno
inc
sti
push
imul
jle
push
call
dec
sar
sbb
lahf
data16
or
sbb
jno
hlt
sub
mov
out
les
add
popa
pop
pushf
add
mov
adc
push
adc
ficom
mov
test
cmp
je
or
pop
jmp
mov
xchg
ficomp
cs
inc
fdivr
sbb
mov
int
mov
adc
and
inc
xchg
and
adc
out
arpl
dec
xchg
mov
enter
into
pushf
jbe
fs
fidiv
repnz
mov
cmc
push
mov
repz
or
adc
mov
and
mov
dec
retf
jecxz
cld
mov
sub
stc
add
xchg
sub
mov
cmc
pushf
rcr
mov
ss
mov
and
not
stos
imul
stc
and
cmp
pop
scas
adc
popf
ds
loopne
shl
add
dec
bound
xor
test
fcom
mov
out
cwde
and
test
xor
xchg
shl
mov
mov
and
out
or
xor
scas
movs
leave
push
enter
lods
xchg
and
add
movs
lea
adc
dec
aam
in
mov
mov
iret
adc
jle
pop
add
cwde
addr16
inc
icebp
xchg
and
aaa
inc
mov
inc
push
sub
mul
gs
adc
out
out
ret
pshufw
xor
(bad)
mov
test
test
repz
mov
lahf
imul
xchg
jmp
lock
icebp
sbb
pop
sbb
jnp
and
pop
ror
push
imul
dec
hlt
or
aaa
and
dec
int3
fstp
movs
xchg
sbb
mov
retf
test
jne
ret
popa
retf
pop
or
inc
nop
clc
cmp
dec
leave
stc
scas
stos
dec
je
lods
lahf
(bad)
mov
sbb
call
ja
stc
retf
mov
inc
dec
mov
mov
jle
iret
jle
push
xchg
jne
jge
aad
lds
push
sahf
adc
in
in
mov
mov
jecxz
mov
sbb
add
inc
lods
mov
push
pop
mov
sub
outs
retf
xor
or
sbb
mov
jno
mov
xchg
or
mov
lock
aaa
test
lock
push
mov
adc
pop
mov
jb
xor
or
xchg
or
imul
pop
pushf
movs
pop
cmp
jb
(bad)
popf
out
dec
push
add
popa
ins
jecxz
jno
mov
and
xchg
shr
xlat
xchg
mov
adc
mov
sar
cmc
repnz
jle
sub
stc
ss
in
add
inc
inc
mov
fisubr
scas
push
les
jmp
jae
popf
mov
arpl
inc
xchg
call
mov
popa
outs
out
dec
mov
cmp
pop
push
jge
pop
dec
arpl
int3
mov
lahf
(bad)
sub
and
repnz
(bad)
cmp
cwde
scas
jns
(bad)
or
or
xchg
xor
bound
dec
and
dec
sbb
jecxz
mov
bound
out
data16
ret
aad
sbb
or
push
iret
test
shl
(bad)
in
jne
mov
lods
dec
sub
loop
xor
and
inc
shl
inc
sub
scas
gs
enter
and
mov
rcl
loope
inc
test
cli
pushf
mov
mov
xchg
mov
pushf
and
xchg
fsub
or
jae
mov
xchg
mov
sub
gs
cmp
push
push
xor
sbb
pcmpgtw
inc
call
je
xor
jmp
pop
jnp
repz
movs
sbb
lods
test
cmp
popf
push
retf
mov
xlat
xchg
js
movs
pop
xor
pushf
push
push
sub
xchg
stos
(bad)
and
mov
xchg
rcl
icebp
es
cmps
cmps
adc
inc
mov
leave
es
mov
repnz
(bad)
call
mov
les
cmps
adc
repnz
sub
int3
repz
mov
dec
jbe
imul
jmp
dec
shl
sub
mov
add
jnp
and
mov
out
in
cmp
adc
xchg
test
arpl
and
jmp
dec
or
dec
call
(bad)
and
mov
and
jbe
mov
idiv
fidivr
rcr
aas
mov
sbb
stos
retf
jnp
movs
push
rol
or
pop
add
int
movs
mov
shr
sar
pop
jmp
fist
dec
or
pushf
mov
jo
stos
fimul
in
ret
enter
dec
dec
jge
test
inc
es
arpl
jbe
enter
das
sub
jg
push
mov
inc
sub
in
jbe
loope
sub
rcl
pop
daa
mov
dec
jb
mov
sub
ins
and
cmp
dec
std
ds
mov
xor
(bad)
test
ja
loope
dec
or
lds
ins
pop
add
xchg
sti
mov
jno
xchg
xchg
mov
push
jae
fdiv
int3
fisttp
ds
movs
fs
rcr
dec
jmp
mov
imul
fld
mov
adc
jne
retf
pop
xchg
mov
cmp
cvtps2pd
loope
pushf
jge
pop
pushf
dec
xchg
adc
(bad)
lock
sub
cld
jbe
cld
mov
(bad)
xlat
or
int3
loope
cli
stos
mov
sub
das
fimul
out
ins
clc
or
mov
mov
xchg
mov
cdq
jmp
test
push
out
mov
push
fmul
dec
cdq
bnd
mov
mov
gs
xor
(bad)
scas
xchg
gs
pop
xor
or
or
inc
data16
scas
in
or
jp
lods
xor
(bad)
pop
loopne
pop
jno
add
jae
pop
cmps
aad
push
xchg
lea
xchg
jp
outs
xchg
mov
adc
cmps
rol
push
jb
push
or
mov
ja
mov
sbb
add
ret
cmps
mov
(bad)
mov
out
or
xchg
adc
lahf
add
sbb
dec
movs
cmp
cmps
inc
mov
pushf
pushf
addr16
inc
outs
in
outs
jb
ret
dec
xchg
shl
xor
je
mov
fstp
xchg
(bad)
or
sti
or
xlat
lods
out
cli
(bad)
mov
and
repz
mov
nop
sbb
mov
pushf
fiadd
add
adc
(bad)
cmc
(bad)
fdivr
loopne
cmp
fmul
push
shr
fst
repz
ret
mov
push
call
and
std
mov
ret
imul
jns
js
mov
iret
pop
clc
fiadd
pop
imul
pushf
adc
push
inc
mov
mov
into
xchg
not
ins
add
icebp
loopne
(bad)
fstp
popa
add
pop
mov
and
movs
add
pop
test
ss
and
jge
mov
std
test
movs
cs
add
lock
adc
dec
inc
(bad)
cmps
aam
and
cdq
add
sub
popa
adc
cdq
push
aad
mov
cmps
push
aaa
xchg
push
mov
call
mov
sub
dec
sbb
mov
ror
jg
push
xlat
cmc
and
cwde
clc
stc
fmul
pop
and
dec
or
mov
add
into
adc
cld
jnp
dec
xchg
mov
dec
jne
pop
(bad)
jnp
sbb
(bad)
stc
pop
mov
and
dec
xchg
cmp
std
cmp
sub
or
jae
sub
and
mov
mov
add
jmp
int3
mov
sub
pop
outs
repnz
or
lahf
sub
ficom
and
mov
movs
jecxz
push
fmul
(bad)
xchg
jmp
dec
(bad)
loopne
push
mov
add
idiv
jg
daa
outs
adc
mov
inc
push
fdivr
imul
cmp
ins
in
test
inc
xor
xchg
dec
pop
pop
inc
fcomp
push
inc
shr
les
push
sub
neg
mov
es
leave
adc
pop
xor
dec
adc
jmp
imul
xlat
mov
js
xchg
cmps
rol
loope
dec
call
mov
(bad)
aaa
fs
jb
clc
mov
fisub
jbe
and
xchg
cmp
pop
loop
inc
jg
push
pop
and
push
dec
mov
pop
nop
jp
rcr
adc
sbb
clc
jmp
add
mov
sub
repnz
push
cld
sub
add
mov
mov
cmp
xchg
mov
or
adc
fisubr
add
mov
xor
hlt
std
mov
popf
mov
ja
inc
add
movs
adc
sti
icebp
inc
adc
cmp
cmp
push
inc
xor
xor
fcmovnb
es
sub
hlt
retf
idiv
inc
cwde
jno
test
mov
imul
shl
mov
pop
in
xor
add
mov
jge
das
stc
push
push
out
mov
and
sbb
test
push
aad
cld
mov
test
jl
mov
test
and
sub
data16
and
in
imul
out
repz
sbb
ror
xchg
les
ret
add
je
pop
(bad)
sti
mov
jne
pop
(bad)
in
mov
push
mov
mov
sub
cmp
xor
ret
cdq
pop
(bad)
add
cmc
inc
xlat
fld
mov
aas
push
(bad)
mov
push
jbe
cmp
or
jno
push
idiv
xor
adc
fcomp
dec
sub
xor
rcl
push
add
ror
sbb
je
jbe
inc
mov
xchg
push
sar
aaa
ret
push
sub
push
push
cmp
mov
mov
scas
xlat
sbb
test
push
je
jo
mov
ficomp
jecxz
(bad)
iret
add
sub
sbb
xchg
jg
push
and
mov
ds
add
fild
push
fwait
or
in
std
fcom
push
jbe
mov
xchg
add
add
sub
idiv
xchg
(bad)
js
ds
js
jge
mov
pushf
mov
xchg
adc
inc
(bad)
in
ret
inc
aas
fisubr
not
mov
cmp
dec
dec
jge
mov
outs
(bad)
enter
scas
je
cdq
xchg
jo
or
push
jns
pop
and
mov
sub
adc
es
imul
inc
shr
dec
mov
sbb
bound
dec
mov
inc
(bad)
xor
or
mov
jg
ja
rol
dec
jle
push
mov
mov
fs
dec
loope
xchg
mov
xor
movs
push
int3
dec
mov
lahf
xor
pop
xchg
repnz
and
and
xor
out
jo
dec
icebp
inc
ja
movs
cmps
push
mov
sub
pop
imul
jg
cmp
sbb
jmp
into
jnp
push
mov
xlat
or
mov
outs
mov
adc
sub
lahf
or
lods
lahf
mov
cmps
mov
xor
leave
test
sub
jg
push
outs
sub
sbb
mov
adc
adc
repnz
dec
leave
xchg
mov
out
test
cdq
inc
cmp
sub
(bad)
cmp
push
imul
cwde
in
and
call
sub
push
inc
shr
push
xor
pop
xchg
add
jae
add
(bad)
xchg
xchg
dec
mov
push
rcr
(bad)
pushf
cmp
test
imul
and
jno
push
or
cmp
or
xchg
cmovp
pop
cmp
adc
fcomp
xchg
pop
or
outs
outs
push
or
sbb
mov
aas
mov
xor
pop
pop
sar
fimul
daa
daa
jl
mov
jns
scas
jno
test
(bad)
or
sbb
sti
retf
outs
lds
(bad)
retf
add
je
xchg
fs
idiv
lahf
mov
push
sbb
cli
mov
push
add
dec
fcom
hlt
push
into
stos
xor
test
ins
dec
call
les
or
mov
fist
push
jle
shl
scas
xchg
or
fsub
(bad)
fst
jle
jle
cmp
aas
add
sub
pop
out
aas
xchg
xchg
lds
dec
mov
dec
inc
rol
and
jae
test
sub
mov
sbb
test
inc
cmp
imul
sub
sbb
mov
repz
jae
test
adc
sub
bound
mov
pop
dec
fstp
xchg
mov
add
cld
cdq
movs
and
into
jbe
push
sub
mov
xchg
jne
push
jge
and
and
push
cmp
xchg
ss
inc
das
cmp
std
or
cmp
cmps
add
dec
in
push
sub
or
sbb
add
push
mov
cmp
mov
fwait
lds
dec
mov
ins
add
aas
aaa
jmp
mov
xchg
or
sub
shr
fistp
xor
es
and
xor
push
adc
cmps
push
xchg
sbb
dec
jae
jae
in
nop
into
mov
call
pop
mov
xchg
cmp
or
xchg
inc
pop
(bad)
repz
std
dec
xor
or
daa
(bad)
pusha
lea
jl
out
add
xor
sbb
cmp
aas
push
adc
mov
(bad)
in
es
rol
mov
nop
xchg
fisubr
loop
lea
mov
sbb
cmps
xor
jmp
mov
lods
jns
pop
scas
add
inc
imul
icebp
dec
mov
xchg
mov
imul
mov
adc
(bad)
les
jbe
pop
mov
clc
pop
lock
pusha
popf
jp
sub
add
dec
arpl
inc
movs
mov
ret
int3
mov
stos
imul
inc
aaa
mov
fmulp
dec
stc
stos
add
fcomp
loop
enter
cmps
push
jmp
xchg
mov
mov
aaa
outs
stc
add
jo
fwait
ret
inc
and
xor
js
xor
in
mov
dec
les
mov
fldcw
xchg
jae
andps
cmc
scas
xor
push
cld
add
jbe
aas
push
adc
pop
cmp
mov
in
jnp
push
in
in
fsub
mov
mov
popf
mov
mov
mov
jmp
sub
loop
rol
test
imul
push
pop
bound
movs
pop
xchg
push
pop
mov
fpatan
jae
int3
sbb
cmp
and
cmp
icebp
ds
mov
xchg
sar
mov
shl
mov
sbb
push
jl
adc
dec
pushf
adc
aas
cwde
(bad)
pop
fsub
mov
push
add
push
cmp
cmps
leave
movs
rol
mov
xchg
ja
cdq
movs
mov
fdiv
xchg
mov
movs
jns
mov
sub
stos
xor
fidiv
cmp
and
(bad)
sbb
daa
popa
mov
mov
setl
sub
sar
lds
call
xchg
int3
stos
fcmovne
adc
loope
cmps
retf
ror
jns
jb
std
mov
pop
mov
inc
loope
fnsave
adc
add
sbb
inc
jb
das
das
jg
popa
push
cli
lods
dec
and
fbld
test
movs
push
inc
push
ds
pop
push
pop
out
push
repz
into
adc
pusha
fsubrp
aas
cdq
push
retf
shr
ret
mov
dec
ja
(bad)
cmp
mov
fstp
or
data16
addr16
push
ins
(bad)
je
movs
dec
cmp
sub
add
stc
cli
hlt
pop
int
dec
dec
add
pop
(bad)
loop
dec
imul
push
add
cld
popa
cmp
add
gs
inc
hlt
fwait
mov
push
jns
out
ins
stos
imul
movs
pushf
stos
rcr
gs
loopne
jne
pop
sbb
fisttp
icebp
cmp
mov
jg
mov
mov
das
cmp
push
fs
or
imul
add
gs
scas
mov
cmp
push
jnp
sbb
xlat
xchg
xchg
mov
dec
ds
imul
bnd
lods
stc
outs
xchg
aad
into
or
and
mov
push
ss
xor
and
imul
jae
mov
shl
(bad)
pop
push
cmp
mov
inc
xchg
push
xchg
mov
adc
jmp
push
gs
sbb
sub
ret
in
stc
inc
adc
or
xchg
jb
repz
mov
je
and
hlt
mov
and
add
pop
shl
out
adc
pop
lahf
xchg
xchg
aas
movs
add
into
jae
dec
into
cmp
scas
ins
in
jb
jg
mov
shr
loopne
imul
jecxz
dec
pop
scas
mov
pop
ror
fsubr
or
popf
stc
and
mov
repnz
inc
mov
pop
mov
dec
xor
adc
jno
retf
ja
sub
(bad)
fisttp
mov
rcr
xchg
leave
out
mov
push
dec
mov
movs
and
pop
xor
cmps
loop
sub
movs
mov
cmps
mov
jg
and
and
xchg
and
push
or
cs
jb
cli
adc
shr
or
imul
pop
xor
push
mov
enter
cmp
jge
inc
jns
stos
es
test
jno
jo
sbb
or
mov
ss
ins
xor
push
shl
jl
mov
jle
bnd
mov
stc
fld
mov
cmps
push
repz
inc
repnz
and
mov
adc
xor
mov
bts
xrelease
ret
xchg
sbb
jecxz
sub
in
sub
lahf
pop
mov
and
pop
jmp
or
test
call
pop
loop
jbe
fsubr
das
xor
in
sbb
xchg
in
out
lahf
and
cli
pop
mov
inc
push
xchg
inc
mov
icebp
icebp
sbb
pop
bound
cmp
aaa
mov
retf
sar
or
rcr
test
ins
fwait
mov
xor
loope
ror
scas
and
call
mov
out
loop
add
or
mov
cmps
and
into
and
outs
adc
jo
adc
jo
stc
mov
jg
push
pop
xor
inc
or
out
arpl
arpl
fwait
mov
pop
pop
inc
adc
lods
sub
ds
xchg
jge
jl
add
adc
out
and
lahf
cmp
cli
shl
js
call
mov
and
mov
xor
sbb
jno
and
cmp
adc
mov
jo
mov
imul
xor
es
add
scas
std
popa
pop
or
stos
cs
cmp
and
rol
loope
pop
and
popa
hlt
inc
js
cmps
fwait
retf
xchg
daa
xchg
(bad)
jmp
test
rcr
cmp
add
push
mov
jmp
mov
push
into
nop
cmc
xchg
xor
stos
xor
leave
pop
jae
sub
xor
xchg
jmp
pop
gs
sub
fwait
xlat
aas
jge
test
sub
add
(bad)
rol
mov
sub
xchg
popa
out
mov
inc
or
imul
pop
movs
xor
xor
ins
xor
jecxz
sub
test
inc
sbb
push
lods
popf
push
jl
or
fstp
arpl
das
adc
mov
cmp
inc
data16
nop
cmps
add
and
sub
mov
gs
call
sahf
and
sbb
inc
pop
cmp
test
add
sub
xchg
imul
arpl
xlat
neg
xor
pop
xchg
pop
call
push
jbe
das
ins
jmp
mov
push
adc
outs
sub
cmp
jb
inc
fistp
and
dec
and
gs
stc
mov
mov
xor
sub
push
dec
and
test
ins
adc
adc
pop
mov
test
and
fsubr
xchg
adc
lock
mov
leave
fdiv
mov
pop
mov
mov
mov
xchg
xchg
shr
jo
dec
sti
ret
repnz
aad
ficom
xor
mov
loope
out
xor
ret
in
shl
pop
popa
stc
cmps
dec
dec
ds
mov
cmp
jae
add
shr
pop
data16
xchg
push
jle
addr16
mov
(bad)
leave
pop
aas
add
fimul
ss
test
pop
dec
or
sub
scas
lds
mov
xchg
adc
xchg
xchg
fist
iret
mov
neg
(bad)
mov
js
sbb
xlat
aas
xchg
and
int3
cmp
sbb
pop
push
mov
test
dec
push
or
pop
and
(bad)
dec
or
jecxz
jp
xchg
jg
pusha
idiv
les
stos
cmp
xchg
cmp
jne
(bad)
movs
scas
cmc
idiv
dec
mov
out
arpl
and
into
jns
xchg
mov
jmp
ds
pop
jo
mov
adc
dec
in
inc
addr16
repz
ins
sti
stos
sbb
jle
pop
mov
retf
cmp
and
cmp
mov
(bad)
xor
movs
adc
mov
cmp
lea
das
imul
xchg
(bad)
call
xchg
sahf
dec
movs
xor
mov
lds
adc
fcmovb
pop
addr16
or
aam
int3
sub
shrd
std
fdivr
mov
push
and
inc
sub
fistp
dec
pop
mov
add
sub
hlt
sbb
(bad)
movs
jecxz
xor
jl
xchg
faddp
push
ret
sub
or
gs
mov
enter
fidiv
push
mov
or
mov
cmps
popf
or
je
enter
jmp
popa
jne
inc
imul
mov
cmps
xor
enter
cmp
mov
jmp
pop
and
mov
cmp
pop
fisubr
ja
inc
mov
lea
cs
cmps
sti
pop
or
inc
push
lea
or
dec
mov
pop
jae
sub
stos
pop
cs
jno
push
sti
cmc
cs
data16
fldln2
pusha
dec
xchg
fsubp
push
adc
lods
push
in
inc
fcom
cld
call
adc
pop
xor
repz
sbb
pop
mov
pop
stos
shr
mov
mov
jmp
enter
or
xor
adc
push
mov
xchg
cmps
ss
jns
cmc
mov
dec
mov
(bad)
sbb
sbb
mov
std
scas
not
mov
fs
das
(bad)
sbb
stc
outs
mov
stos
icebp
call
mov
mov
add
jge
popf
call
mov
fwait
dec
aad
lods
sub
dec
jg
inc
push
repnz
data16
push
(bad)
in
cmp
int
cmps
inc
cmp
fistp
adc
in
inc
xchg
xchg
test
jbe
jb
cmp
rcr
pop
cmp
mov
std
inc
sub
aas
int3
mov
int3
stos
xor
push
je
iret
jo
mov
add
in
push
stos
inc
mov
iret
and
sbb
iret
push
fldcw
(bad)
or
lahf
test
imul
xor
cmp
dec
add
or
sbb
lock
inc
cmp
mov
and
sbb
out
pushf
call
cmp
mov
push
iret
inc
shl
jne
dec
add
js
and
ret
push
pop
ins
out
sbb
jmp
mov
jecxz
addr16
(bad)
push
sub
push
pop
sbb
in
nop
pop
mov
mov
mov
fs
in
in
jbe
xchg
lahf
outs
inc
add
mov
sub
jle
push
dec
and
iret
mov
mov
cmp
in
mov
(bad)
loop
mov
sub
add
push
pop
mov
mov
repz
cmps
test
push
mov
mov
int
(bad)
or
mov
adc
adc
mov
stc
and
sub
imul
cli
and
icebp
add
mov
pop
sub
in
mov
repnz
mov
and
cmc
xchg
(bad)
addr16
xchg
xchg
fst
inc
dec
repnz
dec
data16
or
jb
or
lahf
xlat
data16
xor
iret
shl
jmp
and
push
retf
jno
and
cmc
xor
bound
dec
cmp
push
and
xchg
sub
rcr
pushf
cmps
or
(bad)
fld
jnp
mov
xchg
jae
mov
and
cmp
jecxz
adc
cmp
imul
mov
ds
fwait
add
push
mov
add
cdq
xor
mov
mov
adc
mov
push
cmc
pop
fwait
dec
bound
rcl
push
aam
imul
shl
cs
test
test
data16
daa
ins
jnp
loopne
(bad)
sub
mov
inc
fld
inc
imul
jp
in
imul
mov
jae
addr16
ds
dec
xchg
jno
(bad)
xor
mov
test
push
es
dec
out
push
or
push
outs
lods
adc
mov
pop
es
inc
fadd
inc
call
add
arpl
das
jmp
sahf
adc
cmp
mov
pop
pop
shr
or
dec
in
fcmovbe
das
push
lods
rol
ins
loop
push
xchg
push
and
cmps
leave
fwait
mov
dec
mov
push
or
sub
cmp
es
mov
adc
inc
mov
or
ret
cmps
cli
mov
addr16
es
scas
xchg
aaa
outs
cmc
or
cmp
mov
mov
fnstenv
jns
cdq
jp
or
pop
mov
xchg
mov
xchg
cmp
cmp
retf
sti
push
xchg
stc
sub
test
pop
dec
mov
rcl
or
sub
fimul
adc
adc
xor
xchg
mov
neg
inc
cwde
pop
inc
xchg
mov
(bad)
popf
sub
cmps
dec
retf
inc
push
dec
xchg
stos
xor
lahf
cwde
add
dec
xlat
cwde
mov
into
ja
data16
mov
xor
sub
mov
das
fmul
mov
push
in
jmp
in
fst
push
add
push
test
ins
jecxz
adc
fiadd
je
(bad)
in
mov
xor
nop
ret
sbb
movs
dec
xlat
sar
div
mov
outs
inc
stos
or
jno
xchg
cmps
push
inc
push
out
lahf
aad
std
jge
shr
push
push
fxch
in
pop
pop
data16
mov
and
cmp
push
fmul
repz
mov
div
(bad)
jg
adc
mov
data16
sbb
xchg
sbb
cmp
push
xlat
es
outs
push
mul
iret
sbb
lock
push
sbb
xor
test
mov
mov
lods
ret
addr16
mov
sbb
out
mov
cs
jecxz
mov
xchg
das
and
aas
call
aad
test
das
push
mov
(bad)
scas
and
jmp
sbb
popa
or
or
lods
outs
mov
aad
enter
scas
and
popa
dec
nop
out
sub
add
imul
gs
dec
add
pop
or
pop
lds
stc
leave
call
aam
shl
add
inc
addr16
push
lds
out
push
lds
jp
stc
inc
xor
cs
adc
mov
sbb
int3
data16
aas
les
inc
jl
test
pop
or
xor
out
mov
mov
inc
sub
push
icebp
aad
cmc
add
pop
inc
ins
and
cmp
or
jecxz
pop
stos
test
jmp
repz
inc
cmps
push
mov
ret
lahf
xchg
jge
retf
outs
and
(bad)
out
ins
adc
sar
mov
adc
jbe
sahf
mov
in
push
add
cmp
ins
movs
aas
into
js
outs
jge
mov
and
sbb
jne
ja
(bad)
add
dec
clc
xor
adc
adc
inc
mov
aad
mov
fistp
outs
ds
sub
cdq
outs
dec
xor
out
repz
outs
popf
push
stos
inc
push
xlat
xchg
jno
jl
jae
or
icebp
push
shr
cmps
test
mov
ror
xchg
hlt
add
(bad)
push
sbb
mov
test
jle
or
out
xchg
loope
xchg
xor
sbb
sub
outs
mov
xchg
shl
imul
sahf
fld
lsl
imul
retf
mov
xor
sub
lods
dec
inc
(bad)
pop
pop
nop
cmc
rcl
out
mov
loope
adc
mov
leave
adc
or
test
push
cmps
in
pop
mov
je
ins
mov
dec
xor
sbb
or
push
(bad)
cld
iret
das
(bad)
addr16
scas
jno
or
and
in
js
sub
nop
xchg
cmp
popf
mov
or
addr16
push
dec
fadd
data16
or
push
jle
add
sbb
mov
push
pop
cmps
adc
jno
dec
and
pop
inc
mov
imul
rcr
sub
(bad)
in
sahf
add
sahf
sar
xor
mov
int3
pop
and
cmp
sar
jecxz
out
movs
push
push
lds
or
xchg
xchg
mov
xor
imul
sbb
fistp
(bad)
cli
adc
repnz
ja
int3
push
adc
adc
xchg
push
mov
sbb
jne
jns
and
adc
idiv
mov
lods
mov
inc
xchg
xor
pop
mov
loopne
icebp
push
xor
push
or
cmps
loope
repz
sbb
stc
nop
cmp
xor
xor
or
push
retf
xor
add
xchg
mov
fs
pop
sbb
jmp
dec
in
mov
out
jmp
sbb
fidivr
sbb
test
jne
jecxz
bound
jno
out
dec
xchg
mov
scas
aad
mov
or
cmp
repnz
sub
xchg
fisubr
ror
stc
lds
xlat
int3
lds
les
sahf
std
test
lahf
and
aas
xchg
push
jecxz
sbb
fist
dec
test
imul
lds
or
mov
dec
dec
xor
les
cwde
enter
sbb
int3
adc
xchg
push
bound
outs
jne
sub
fdivr
push
add
xchg
repnz
mov
outs
lock
add
shl
jmp
fild
lds
push
retf
(bad)
mov
inc
mov
push
mov
ret
or
mov
jmp
mov
push
out
adc
push
add
out
sbb
sub
mov
inc
scas
ss
stos
in
sbb
leave
mov
test
push
jns
dec
push
or
call
jo
cmp
cld
inc
push
sub
adc
adc
mov
jne
rol
(bad)
repnz
das
mov
sbb
test
jg
xchg
(bad)
push
lods
push
(bad)
jl
cmps
sub
outs
mov
lock
ja
pushf
and
imul
or
cvtdq2ps
mov
jecxz
(bad)
fwait
into
lods
pop
jmp
jg
cmp
les
adc
mov
cmp
inc
scas
pop
leave
imul
out
cmp
cld
in
push
data16
ds
inc
out
jecxz
adc
sbb
call
push
add
aaa
fs
sub
mov
push
jge
dec
pop
cmps
clc
mov
pop
add
mov
mov
pop
call
loopne
call
xchg
adc
movs
xchg
nop
lods
xor
imul
pop
xchg
pop
(bad)
mov
scas
leave
daa
setle
bound
xor
aas
jo
cmp
xchg
imul
loop
mov
jmp
js
ret
call
dec
xlat
(bad)
aaa
mov
dec
fs
xor
cdq
int
push
mov
repz
jae
or
mov
(bad)
and
push
push
ss
jl
xor
and
sahf
xchg
(bad)
test
and
jmp
dec
lds
push
and
push
out
cmp
addr16
lea
pop
test
bound
cs
inc
adc
loop
adc
out
lods
shr
sbb
ds
out
retf
jnp
or
xchg
test
cwde
jnp
xchg
je
retf
(bad)
dec
mov
xor
fdivr
push
jbe
int3
scas
aam
mov
pop
scas
adc
fadd
dec
lds
idiv
aaa
int3
add
xchg
and
nop
jmp
ror
sub
cmp
mov
es
cmp
xor
xor
ror
jmp
or
sub
addr16
jl
dec
mov
(bad)
loopne
mov
inc
mov
sar
xor
mov
dec
sub
pop
dec
gs
push
add
(bad)
outs
mov
cmp
es
push
inc
or
outs
cmp
in
imul
adc
xor
loope
xchg
dec
shr
add
das
(bad)
fsubr
icebp
outs
addr16
jge
add
push
loope
int3
or
pop
dec
and
mov
outs
pop
cmp
push
mov
mov
xchg
sbb
sbb
xchg
mov
gs
or
repnz
sub
scas
jb
jecxz
cmp
dec
cmps
lods
add
cmps
adc
add
ss
mov
ficomp
(bad)
cli
cmp
loope
leave
popf
cmp
pop
int
or
pop
pop
daa
and
stos
and
js
(bad)
pushf
lea
mov
iret
dec
rcl
sub
mov
popf
cs
cmps
add
rol
mov
xor
pop
sbb
cmp
outs
mov
movs
(bad)
aam
pop
sub
xchg
cmp
adc
mov
fisubr
mov
out
cld
aas
cdq
stc
mov
fstp
cmc
dec
fucomp
stc
rol
push
jle
pushf
pop
repnz
(bad)
std
jb
cmps
imul
push
cdq
sub
cmps
mov
call
clc
test
or
push
add
jmp
pop
pop
call
jge
sbb
and
pop
stos
fs
icebp
repz
retf
das
mov
cmp
jle
sub
lds
ja
mov
call
jne
aam
cmp
xor
lahf
cmp
mov
jnp
and
push
in
les
push
push
xchg
out
push
inc
mov
push
pop
fs
jecxz
sub
and
popa
sub
xor
shl
push
js
adc
iret
push
mov
xor
gs
(bad)
sub
cmps
or
mov
repnz
dec
sbb
and
add
movs
retf
test
push
and
pop
jb
data16
scas
cld
js
outs
leave
rcr
fwait
dec
shl
mov
and
leave
sbb
nop
leave
mov
cmps
sub
push
xor
add
test
jb
or
aas
imul
or
out
mov
adc
push
ret
push
dec
daa
jle
inc
jg
add
int3
daa
(bad)
cmc
push
rol
push
into
sub
mov
outs
das
mov
rcl
scas
sbb
and
sbb
ret
retf
sub
and
jae
ficom
mov
std
mov
clc
mov
stos
mov
dec
sbb
nop
or
cmp
or
inc
enter
ds
push
lods
test
push
jge
das
sbb
adc
adc
lods
add
sub
mov
call
jne
jo
dec
and
mov
in
xchg
into
jg
pop
les
xlat
sub
ja
scas
les
sub
mov
mov
retf
or
loope
and
call
jb
js
dec
pop
xchg
push
xchg
data16
sub
outs
je
fild
or
mov
xchg
sbb
sti
add
cmp
adc
sbb
out
loope
scas
retf
or
pop
imul
pop
test
xor
in
pop
and
pushf
bound
dec
mov
or
push
pop
rcr
test
add
xchg
add
leave
hlt
(bad)
and
push
retf
stos
pop
bswap
ficomp
inc
out
xchg
or
lahf
pop
aas
in
cmps
nop
inc
jmp
mov
inc
adc
fild
pop
inc
add
cmp
mov
sub
mov
outs
(bad)
pop
mov
jge
pop
mov
imul
scas
cmps
aam
mov
shr
or
pusha
mov
inc
scas
test
scas
scas
nop
mov
xchg
test
out
sub
pop
cwde
pushf
retf
inc
adc
int3
mov
sbb
rcr
call
fld
ret
pop
shl
push
in
push
inc
in
fmul
push
lahf
mov
imul
shl
bound
jmp
pop
sti
gs
popa
mov
add
in
cmps
xchg
adc
xchg
aas
scas
cwde
movs
neg
jge
cmp
jmp
pop
ror
jecxz
and
enter
mov
js
aad
sub
nop
imul
dec
inc
fsin
push
test
sub
outs
xor
add
jb
ja
xchg
mov
pop
dec
inc
ret
push
pop
sub
push
push
mov
popf
inc
into
xor
js
inc
dec
sbb
enter
cmc
sbb
jnp
xor
sbb
adc
fs
jmp
jecxz
push
movs
adc
in
xabort
cmps
xchg
mov
pop
call
sbb
fcomp
loop
mov
pop
scas
xor
sti
aas
stos
inc
sti
xchg
xor
dec
shl
pop
sbb
xchg
test
enter
aaa
fcomi
fist
out
sub
jb
fmul
mov
ret
and
jno
dec
fs
dec
in
sahf
dec
fcmovbe
pushf
inc
test
sbb
mov
mov
loopne
repz
mov
idiv
and
out
loope
fsub
jge
dec
dec
stos
(bad)
rcr
mov
aam
push
cld
mov
dec
pop
inc
pop
mov
inc
ss
shr
rcr
fisubr
xchg
aas
jge
xchg
iret
in
adc
mov
aad
out
adc
das
jo
jne
cdq
inc
or
mov
imul
shr
daa
arpl
cmp
jmp
fs
aad
push
push
fwait
sub
xlat
xchg
jl
aas
mov
ror
inc
retf
jb
mov
rol
jne
mov
sbb
cmps
out
adc
enter
xchg
and
out
mov
sar
test
push
dec
sub
xchg
xor
push
packuswb
outs
jbe
push
out
iret
mov
xor
xor
stc
out
sahf
or
inc
xchg
xor
(bad)
out
xchg
mov
(bad)
fdiv
test
mov
mov
push
push
out
mov
jecxz
push
inc
jns
fcmovnbe
imul
pop
stos
dec
fidiv
aad
dec
cmps
add
scas
in
sub
jo
mov
mov
test
mov
jmp
jge
aas
pop
cmc
ss
or
adc
retf
pop
inc
repz
push
push
jae
mov
jno
movs
leave
movs
xchg
push
mov
cmp
pop
sbb
fdiv
shl
or
ins
movs
rcl
xchg
mov
dec
push
add
and
jmp
adc
daa
icebp
div
aaa
xor
dec
icebp
scas
je
or
mov
or
or
jns
scas
adc
jae
add
sub
shld
into
or
cwde
in
sti
out
sub
data16
mov
mov
jmp
and
jb
loope
aam
daa
mov
mov
mov
jo
idiv
(bad)
data16
dec
mov
pusha
pop
push
dec
push
push
jnp
dec
mov
fimul
cmp
stos
push
mov
sub
into
mov
sub
push
pop
mov
adc
pusha
test
stc
inc
(bad)
bound
jg
dec
scas
mov
and
fldcw
bound
cdq
inc
retf
sub
sar
or
pushf
push
mov
movs
push
arpl
dec
and
mov
pop
sahf
push
loopne
fdiv
xchg
aam
in
gs
cld
fs
xor
mov
add
add
inc
xor
sub
xchg
mov
sub
shr
mov
dec
add
cmp
jnp
or
pop
xstore-rng
cmps
lds
add
fisub
repnz
icebp
aaa
lds
imul
(bad)
pop
in
dec
mov
or
into
push
aam
ss
cmc
rcl
jmp
xchg
sub
pop
push
pusha
fwait
inc
inc
sbb
dec
adc
inc
jge
xchg
sbb
out
dec
dec
add
push
push
mov
push
cmps
mov
fwait
scas
mov
dec
mov
rcl
or
xchg
frstor
je
test
test
(bad)
mov
mov
pushf
sbb
ja
popf
(bad)
mov
xchg
adc
ret
sub
out
cmp
(bad)
imul
mov
je
xchg
(bad)
test
push
call
xchg
pshufw
adc
pop
arpl
inc
dec
ds
pop
or
and
mov
(bad)
mov
inc
jb
es
add
std
icebp
rol
jle
imul
push
dec
jo
push
jnp
ret
xchg
mov
and
shr
add
mov
or
loope
and
mov
sub
xchg
repnz
xor
leave
push
out
into
fsubr
push
ss
ins
imul
dec
sbb
pop
dec
rcl
pop
inc
pop
sub
push
lds
push
js
mov
inc
xor
dec
xor
(bad)
fdiv
mov
jmp
dec
mov
cdq
retf
sub
ins
into
sub
xchg
and
xchg
dec
iret
mov
cdq
loopne
mov
ss
jecxz
daa
cwde
stos
and
xor
jl
mov
loope
faddp
cmp
(bad)
scas
inc
and
xor
sub
jmp
js
cmp
jecxz
mov
imul
hlt
add
dec
cmps
push
outs
mov
dec
mov
repz
test
scas
lods
push
xor
cmp
nop
mov
cli
cmps
push
gs
xchg
rcl
mov
pop
(bad)
jb
retf
jno
push
jle
aam
int
pop
cmp
cwde
fdiv
cld
leave
jne
jecxz
xor
jns
jno
sbb
scas
add
ret
jbe
cmc
rcr
inc
xchg
clc
push
push
into
xchg
fwait
iret
mov
push
lahf
pop
das
cmp
and
mov
test
push
jp
jmp
ret
pop
sub
test
inc
stos
or
xor
adc
lock
ins
cmp
into
fnstenv
adc
and
into
mov
ins
mov
(bad)
in
xlat
lahf
mov
add
das
shl
fwait
adc
push
dec
jge
sub
movs
or
out
jbe
fadd
loope
cmp
test
xor
jmp
mov
inc
push
jmp
sub
stos
cmp
xchg
es
mov
push
mov
jecxz
imul
jecxz
xchg
sbb
pop
(bad)
ret
aad
loope
add
cmps
mov
cmps
sbb
sub
or
fidivr
imul
fstp
movs
arpl
ins
aas
mov
mov
(bad)
xor
mov
neg
pop
jecxz
inc
add
mov
ficom
or
mov
mov
mov
dec
xchg
pop
sub
leave
cmps
adc
xor
into
cmps
nop
cmp
(bad)
jns
hlt
outs
inc
mov
xor
(bad)
rol
sbb
mov
cmp
dec
hlt
ret
loop
and
jbe
cwde
jmp
pop
aam
jb
mov
fwait
push
loop
xchg
dec
ins
test
push
mov
out
lea
xchg
es
jnp
jl
sar
outs
xor
ret
xor
into
xchg
push
xchg
loopne
mov
mov
jne
loopne
push
xor
fwait
xor
in
mov
std
icebp
pop
push
xor
daa
rcr
inc
mov
scas
pop
jno
loop
ja
push
add
dec
cmp
or
call
pusha
dec
and
add
push
push
es
lock
bound
test
jmp
out
mov
sar
stos
lods
adc
xor
cmp
push
cmc
jmp
loope
cmc
leave
out
rcr
pop
in
pop
xchg
stos
sub
int3
scas
jmp
xchg
retf
mov
xor
ret
lods
daa
aad
sahf
jb
lahf
sub
dec
xlat
mov
mov
scas
and
mov
(bad)
call
ret
aaa
pop
(bad)
imul
arpl
pop
cmp
xor
repnz
pop
inc
add
mov
adc
in
aad
mul
mov
mov
push
frstor
sahf
mov
push
add
mov
pop
mov
jo
popf
cmp
jns
hlt
hlt
dec
lods
in
test
imul
xchg
dec
sub
jbe
scas
inc
mov
adc
aaa
sub
ret
movs
cmc
jecxz
aas
adc
fbstp
rol
cmp
les
jmp
popf
jg
aaa
jno
ja
repnz
loop
or
or
mov
mul
sbb
mov
add
outs
and
jg
pop
ret
cmps
adc
or
pusha
cmp
loopne
imul
in
out
xchg
out
xor
clc
fdivr
lods
cmp
punpckhbw
jnp
pop
cwde
mov
push
add
mov
and
and
push
xchg
and
cmc
test
or
mov
movs
sar
or
push
ret
xor
mov
jg
jg
in
test
sbb
and
jmp
ins
jae
jp
arpl
push
out
and
out
dec
(bad)
call
hlt
adc
and
cvttps2pi
ss
(bad)
push
sbb
cmp
jp
pushf
test
faddp
pop
shl
pushf
or
adc
sub
push
adc
leave
fwait
lea
and
dec
pop
out
mov
sub
cs
jge
addr16
and
push
cmp
adc
mov
cmp
cwde
loopne
add
shr
push
lea
mul
inc
ins
or
stos
xchg
aas
mov
xchg
cli
jp
hlt
stos
jg
jns
sub
mov
jmp
mov
fmul
enter
dec
fs
cmp
arpl
sbb
(bad)
mov
jg
addr16
(bad)
das
push
outs
sub
aaa
mov
cmps
(bad)
aaa
fbstp
popa
sub
std
dec
xor
ins
sub
dec
add
daa
jo
hlt
or
loopne
pop
daa
mov
pop
adc
out
xchg
and
hlt
dec
shl
int3
in
bound
pop
aam
out
addr16
ins
mov
xor
inc
xchg
test
push
std
cmp
inc
mov
in
leave
daa
mov
cmp
push
pop
mov
mov
ins
in
not
add
jno
inc
cld
adc
movs
(bad)
adc
mov
inc
fs
fldenv
retf
sbb
fdiv
or
or
sbb
or
push
jae
jbe
cli
adc
dec
daa
hlt
sbb
out
pop
pop
std
add
das
int3
mov
pop
xchg
lds
popf
(bad)
pop
xchg
push
aas
and
mov
sub
idiv
aas
movs
sub
bound
cdq
or
jae
retf
rcr
lods
cli
gs
loope
xchg
adc
pop
pop
push
push
xor
and
push
ja
ss
ja
xchg
inc
sub
adc
lahf
mov
jno
pop
adc
in
pop
mov
fdivrp
retf
rcl
or
rol
push
mov
icebp
jne
xchg
gs
mov
aad
std
adc
jmp
ret
mov
xor
aam
sub
xor
mov
(bad)
xor
int3
xchg
les
out
aaa
and
jno
cld
push
cmps
adc
movs
jmp
xchg
jb
mov
inc
xchg
sar
aaa
sbb
cs
(bad)
into
out
and
xor
lds
loop
or
push
rcr
xchg
in
or
mul
test
push
outs
sub
imul
xchg
adc
mov
lds
pushf
jo
push
lahf
int3
aas
jbe
(bad)
cmps
mov
popf
jnp
movs
movs
nop
cwde
xor
(bad)
ja
dec
pop
jmp
sbb
dec
inc
leave
push
and
sar
sahf
(bad)
pop
inc
dec
xor
sbb
addr16
stos
sar
and
mov
sti
push
inc
movs
inc
pop
pop
adc
jb
out
add
jb
lods
stos
mov
jmp
sub
lock
sbb
jp
sbb
icebp
int3
ins
mov
loop
dec
stos
inc
sbb
cs
mov
pop
cld
inc
movs
callw
add
sti
jle
xchg
and
loopne
(bad)
popa
bound
push
sahf
jl
es
enter
mov
and
fnstenv
sub
dec
out
imul
push
lock
sti
xchg
add
loope
and
xchg
es
xlat
(bad)
adc
icebp
inc
jecxz
lahf
push
jg
mul
aad
loop
les
das
jo
jecxz
stc
mov
fwait
retf
rcl
jl
bound
push
jmp
retf
adc
xor
ins
pushf
call
and
mov
clc
jbe
lods
inc
rcr
push
ret
push
jmp
mov
xrelease
or
jae
retf
fstp
retf
dec
xchg
loope
stos
or
adc
imul
dec
dec
les
mov
pop
xchg
xchg
out
fiadd
ins
sub
jne
das
or
movs
inc
imul
pushf
add
mov
cmp
add
call
inc
mov
pop
push
push
retf
and
mov
mov
scas
dec
jno
test
mov
shr
mov
pop
xor
in
inc
sbb
or
lods
dec
push
std
pushf
jle
fdiv
inc
cmp
inc
sub
jp
push
add
icebp
shl
aad
imul
(bad)
test
add
mov
inc
icebp
std
mov
loope
outs
pop
lea
jmp
outs
inc
rcr
jecxz
cli
or
mov
iret
and
or
inc
test
(bad)
es
je
lea
outs
mov
mov
push
popf
mov
and
cmp
xor
xchg
jle
push
in
(bad)
jb
pop
call
adc
mov
cs
seto
push
sub
pusha
add
pop
dec
stos
jne
pushf
out
inc
cmps
push
shl
jp
out
(bad)
js
bound
push
jae
mov
gs
add
(bad)
or
xor
rol
xchg
int3
imul
fdiv
jmp
jae
ss
aas
push
mov
(bad)
dec
ror
sbb
xor
retf
fucomip
and
cmp
mov
fidiv
push
fldenv
inc
push
pop
cmps
daa
inc
lods
and
clc
sbb
push
sbb
jns
or
lea
ins
inc
outs
sar
xchg
lock
sub
lea
mov
xchg
add
out
sub
dec
pop
aad
loopne
dec
mov
dec
fisttp
movzx
sub
ins
jne
fisttp
adc
in
sub
fdivr
jmp
jmp
mov
dec
push
sar
sub
ins
sbb
pop
cs
ds
std
iret
lds
mov
sub
arpl
pop
sbb
mov
adc
addr16
xchg
aaa
mov
sub
rcr
sar
or
and
in
or
xor
and
push
ins
push
push
push
stc
push
into
sub
inc
add
xor
xor
cmps
mov
push
mov
dec
inc
iret
movs
in
sbb
and
nop
mov
mov
mov
pop
mov
push
push
aam
call
sbb
push
loope
mov
ret
(bad)
vpaddsb
shl
cwde
aaa
jmp
hlt
jnp
pop
xchg
pop
jnp
mov
sbb
xor
xchg
pusha
bnd
inc
shl
xlat
dec
push
sbb
xchg
(bad)
sbb
aas
adc
lods
(bad)
movs
jo
xor
retf
scas
loopne
(bad)
add
aaa
and
daa
push
in
add
hlt
sub
mov
cs
pop
push
into
jae
add
popf
out
rol
sbb
mov
nop
or
jmp
dec
std
pop
mov
cwde
in
icebp
lea
sub
push
push
jle
xor
push
mov
xlat
ins
adc
lock
stc
stos
(bad)
daa
and
ss
fs
add
and
cmp
(bad)
fisubr
mov
aaa
jb
ret
or
adc
adc
and
imul
dec
xchg
or
push
sahf
dec
dec
mov
xchg
mov
hlt
popa
xchg
dec
pop
xchg
pop
imul
je
es
sub
mov
cmp
sahf
mov
xchg
rcl
ja
sub
and
add
inc
jb
dec
scas
mov
mov
clc
stc
popa
push
dec
pop
jmp
lea
xor
cmp
mov
jle
and
in
push
pop
jle
das
sbb
xor
sub
addr16
jo
into
out
inc
cmp
ja
es
add
xor
push
in
movs
push
inc
lahf
dec
das
or
popa
jmp
add
jbe
sub
gs
adc
test
loopne
mov
push
(bad)
dec
lahf
addr16
push
push
aad
repz
hlt
test
cs
xchg
das
or
pop
push
(bad)
loope
nop
cmps
add
popa
mov
sub
aas
call
inc
jecxz
lds
mov
jecxz
(bad)
stc
(bad)
mov
(bad)
push
sub
dec
sbb
mov
clc
fimul
mov
ret
dec
pop
nop
call
push
stos
and
jno
test
pop
(bad)
les
xchg
mov
pop
mov
hlt
pop
xchg
ror
iret
or
cmp
push
sub
xor
xchg
push
add
mov
cs
pop
inc
(bad)
adc
(bad)
xor
adc
sti
jmp
loopne
call
call
dec
sar
mov
jmp
ja
add
or
shl
(bad)
xchg
xchg
fwait
in
or
mov
sub
inc
mov
imul
aad
test
jmp
xor
xchg
test
addr16
mov
rol
mov
and
adc
jb
ret
ja
ret
jb
cwde
or
jecxz
inc
pushf
sub
mov
pusha
popf
cmps
aas
or
xor
sbb
mov
mov
mov
shl
pop
iret
in
aam
inc
aaa
mov
jbe
push
mov
jge
das
inc
shl
cmp
test
test
jne
lds
sti
dec
cmp
push
dec
dec
push
inc
ret
mov
jge
xchg
lods
cmc
mov
aam
pop
dec
push
pop
in
clc
dec
jle
or
inc
movs
mov
xchg
adc
rol
sub
ret
pushf
or
inc
xlat
movs
sbb
fwait
mov
fbld
movs
push
stc
in
icebp
push
jg
in
push
popf
inc
pop
out
jb
dec
lds
imul
jge
addr16
xchg
das
inc
mov
xchg
mov
xor
repnz
mov
out
test
dec
xor
jae
sbb
data16
ret
rol
movs
mov
out
inc
popf
retf
clc
cmp
mov
mov
sub
xor
pop
daa
ins
adc
xchg
fst
pusha
test
fld
mov
inc
inc
cld
mov
pusha
cmp
dec
data16
mov
shl
cmp
sbb
or
mov
or
js
adc
arpl
lods
jae
mov
pop
scas
jne
cmp
sub
jge
cmps
jle
xor
adc
ss
push
fdiv
int
cli
add
sub
pusha
and
jae
sti
push
ror
retf
in
(bad)
inc
pop
cmps
aas
adc
xchg
sti
and
imul
mov
adc
cmp
fimul
lds
hlt
out
popf
out
into
jno
or
jb
xchg
mov
inc
ins
es
jae
jl
(bad)
pop
in
inc
inc
or
push
jae
sti
push
aam
imul
lock
fwait
scas
dec
je
dec
and
push
xchg
mov
xchg
enter
hlt
popf
es
call
jge
dec
cmp
jmp
call
push
jmp
fwait
add
aaa
xchg
add
xlat
push
adc
(bad)
mov
push
cmp
add
inc
or
fsub
inc
fild
jnp
mov
ror
add
imul
push
outs
mov
(bad)
test
test
sahf
cli
jae
retf
daa
adc
or
adc
mov
adc
stos
pop
mov
popf
ret
pop
push
(bad)
ret
sub
push
fisttp
and
int3
data16
repnz
sbb
fstp
sbb
loop
xchg
loop
lahf
scas
add
fcmovnbe
and
idiv
hlt
out
mov
or
es
lds
test
out
xor
mov
push
mov
out
in
add
jbe
add
ins
pop
into
sahf
inc
jno
jl
aad
fs
cmps
pop
in
mov
movs
mov
push
sub
add
mov
mov
dec
mov
nop
push
inc
movs
mov
sahf
xchg
test
mov
ja
mov
int
xchg
and
sub
adc
cmp
or
add
add
mov
and
pop
mov
xor
cld
jmp
and
cmp
sbb
sub
hlt
inc
aas
xchg
xor
cmc
jmp
in
shr
(bad)
in
jnp
push
out
hlt
into
das
sbb
cmp
sub
(bad)
push
dec
ficomp
mov
fidivr
sbb
add
and
jp
rcl
in
mov
je
mov
inc
mov
out
xchg
add
sbb
js
jl
shl
inc
mov
mov
dec
sub
dec
xchg
icebp
shl
push
dec
movs
xor
xchg
jecxz
mov
(bad)
lea
xor
mov
nop
dec
es
int
lea
xlat
add
or
test
and
dec
jle
cmp
cmp
or
mov
sbb
mov
inc
push
xchg
jns
sub
or
or
repnz
jecxz
cmp
fstp
mov
or
dec
or
ja
adc
adc
mov
or
scas
adc
int3
pop
imul
fmul
hlt
rcr
sub
dec
jg
movs
les
movs
js
xchg
das
mov
(bad)
ss
scas
mov
and
push
movs
or
fist
xchg
pop
adc
ja
push
or
and
mov
pop
sbb
movs
pop
push
retf
cld
cmp
mov
jne
push
repnz
out
mov
and
std
jne
add
jge
lods
cli
call
jne
xor
pop
sbb
and
inc
cmp
ret
imul
jo
push
sbb
inc
les
pop
or
add
or
xor
and
es
jecxz
jns
mov
and
test
xchg
das
pop
(bad)
push
cs
or
call
xchg
cmp
out
adc
mov
mov
mov
outs
inc
loop
bound
xchg
daa
xchg
aas
adc
bound
ins
cwde
jecxz
pusha
jbe
mov
cmp
jge
adc
mov
mov
mov
xchg
retf
rcl
push
fstp
or
and
push
je
xor
cwde
adc
out
call
inc
(bad)
cmp
xchg
je
scas
xor
outs
sbb
jecxz
sub
mov
call
rep
inc
rcr
sbb
dec
or
mov
pop
mov
cld
xchg
or
pop
adc
jp
mov
imul
push
pop
imul
jns
or
fild
lods
mov
mov
std
push
ds
or
or
inc
int3
pop
add
aam
adc
jmp
jns
mov
add
jns
cwde
mov
sbb
xchg
xchg
fcmovnb
sbb
vmwrite
jbe
ficom
js
popf
cld
jmp
(bad)
dec
push
and
jbe
mov
sub
sbb
cmp
in
and
aam
jmp
fst
mov
xlat
mov
jnp
sub
and
xchg
addr16
adc
mov
out
sbb
cmp
cs
mov
and
aad
mov
retf
mov
(bad)
setbe
sub
pop
test
fistp
add
inc
loop
popf
sbb
jmp
or
out
inc
inc
ret
cmp
ss
in
cmp
outs
pop
pop
(bad)
sbb
test
test
call
pop
jns
or
mov
push
jbe
xchg
int3
cmp
pop
fstp
jbe
push
test
inc
dec
mov
xor
popa
jo
cmp
inc
(bad)
xor
hlt
jp
sahf
shr
jbe
mov
dec
cmps
mov
sub
push
xchg
push
gs
sti
out
pop
gs
ror
jl
sbb
mov
jnp
cwde
or
pusha
cli
mov
mov
pop
jp
or
mov
mov
adc
dec
std
xchg
or
sahf
adc
scas
xchg
out
loopne
jp
sbb
retf
sbb
enter
xchg
fldcw
jg
push
mov
jl
mov
sbb
aad
xor
scas
xchg
je
dec
and
inc
and
mov
fwait
stos
mov
cmc
sti
push
push
and
jle
repnz
xchg
xlat
loopne
xor
lahf
pop
and
add
or
xchg
ret
inc
sbb
test
mov
pop
xor
push
retf
in
stc
xor
clc
jmp
mov
in
sbb
int
inc
mov
lock
pop
cli
mov
push
call
jno
cmps
repz
mov
xlat
aad
xchg
in
retf
rcr
mov
leave
das
xchg
pop
in
push
js
xchg
stc
lahf
enter
mov
inc
adc
push
xor
icebp
mov
cmp
cmp
xchg
add
into
movs
aaa
stos
loopne
daa
test
cli
jmp
sbb
mov
sbb
and
push
xchg
imul
sbb
sbb
or
enter
cmp
ds
aad
adc
jno
mov
cld
pop
push
jg
cmp
fcomp
imul
in
mov
xchg
mov
(bad)
in
push
add
cmps
push
loope
push
adc
popa
(bad)
cmps
movs
push
xor
rcr
jg
xchg
add
jg
add
ins
push
rcl
addr16
pop
iret
es
sub
lea
jp
mov
outs
dec
inc
popa
sub
and
fcomp
adc
dec
add
push
mov
shr
sar
add
jnp
in
jno
dec
cmp
jne
mov
stos
aas
ins
popa
fldlg2
loope
icebp
inc
jge
or
mov
sti
sbb
xchg
jl
les
cdq
scas
dec
sub
push
fcomp
mov
cmp
popa
frstor
mov
mov
loop
pop
push
cmp
pop
mov
xor
dec
ins
out
popf
js
repz
jmp
cmp
xchg
loopne
push
nop
mov
push
pop
into
aad
xchg
std
cmp
lock
sub
aas
ret
dec
(bad)
test
sbb
mov
and
pusha
loopne
jbe
pop
cmps
push
mov
outs
mov
iret
rcr
xchg
mov
fistp
xchg
jp
adc
pop
gs
mov
int3
xor
es
inc
mov
sahf
ret
pcmpeqd
xchg
or
jle
sub
pop
addr16
jl
mov
mov
bound
and
stos
ss
test
(bad)
cmp
movs
dec
and
sub
xor
push
jns
retf
je
daa
dec
inc
pop
xor
scas
push
mov
aas
adc
lds
xchg
pop
pop
xchg
outs
push
fsubr
std
xchg
jp
mov
cld
out
jmp
add
call
test
inc
mov
add
jno
or
cmp
test
lods
out
jmp
outs
push
test
push
test
sbb
sbb
add
push
imul
mov
cwde
cdq
pop
mov
in
shl
pop
int3
ret
div
enter
xchg
aam
sbb
dec
lock
mov
rcr
and
std
idiv
rcl
lds
xlat
enter
inc
repz
mov
cmp
jp
int3
xchg
and
add
jo
loop
inc
hlt
pop
es
loop
ds
daa
add
jmp
icebp
mov
sbb
adc
mov
shr
daa
add
or
fmul
mov
add
pop
mov
cmp
xchg
lods
cmps
jge
cmp
or
add
sbb
(bad)
mov
mov
mov
xor
cmp
dec
popa
push
xchg
repnz
test
cs
dec
jmp
pop
and
data16
push
fistp
mov
in
adc
mov
fild
jbe
xor
cmp
out
(bad)
jnp
ds
inc
push
into
jno
sbb
int
int
mov
sti
push
loope
sub
out
pop
inc
sub
stos
mov
pop
clc
(bad)
jmp
repnz
xlat
test
and
or
cli
sbb
dec
xchg
sbb
dec
(bad)
gs
int
jmp
push
xchg
inc
out
xor
(bad)
cld
inc
sub
dec
rol
sub
cmp
pusha
mov
xchg
xor
jl
fldenv
jae
movs
into
adc
outs
ficomp
(bad)
fnstcw
mov
shl
sar
jmp
ficom
loope
add
mov
out
stos
cld
mov
adc
dec
jnp
fwait
pop
add
retf
sti
xchg
sub
jle
cs
add
ret
add
movs
cmc
mov
cvtpi2ps
sbb
shr
adc
fs
popf
in
jge
test
repz
and
mov
shl
and
add
sti
cmc
pop
lods
xchg
pusha
repnz
es
(bad)
enter
and
mov
je
jecxz
aaa
movzx
sbb
scas
loop
xlat
aaa
push
int3
das
dec
loop
in
mov
mov
les
pop
fmul
iret
enter
shl
xor
movs
inc
mov
ins
iret
pop
fidivr
fistp
mov
ja
xchg
sub
xchg
pop
aas
cmp
mov
inc
stos
and
jae
cmp
cli
into
not
and
cmp
hlt
xchg
(bad)
enter
mov
mov
xor
pusha
lahf
ret
(bad)
mov
cli
inc
test
lods
push
sahf
push
pop
lods
lods
addr16
jle
or
outs
jl
movs
mov
jb
jge
pop
or
sub
adc
xor
pop
dec
xchg
push
jg
xor
bnd
setg
add
cmp
lods
daa
and
fst
jmp
(bad)
mov
mov
mov
jo
add
cmp
mov
mov
dec
repz
bound
jge
popa
ins
(bad)
fidivr
test
sub
xchg
stos
sti
sar
mov
sahf
add
push
xchg
out
sub
loopne
cmp
mov
outs
popa
xchg
push
mov
fiadd
daa
ja
retf
jne
int3
dec
cli
out
jge
or
loope
popa
stos
int3
test
mov
add
xor
test
xchg
ins
pop
jns
mov
loope
sbb
cli
retf
js
div
mov
pop
inc
stc
dec
mov
mov
lock
or
aad
movs
inc
pop
cld
ja
inc
mov
jp
ss
pop
dec
adc
and
std
mul
aaa
xor
scas
ins
mov
pushf
outs
icebp
mov
sub
(bad)
adc
cmp
adc
push
movs
in
mov
inc
lahf
jmp
sub
xor
and
sub
inc
inc
mov
arpl
push
fidiv
or
cli
aaa
ficomp
jne
inc
ret
jle
fcmovnbe
or
jno
cmp
int
stos
loop
mov
fs
sub
mov
pop
sbb
inc
push
jg
loope
es
push
jle
movs
retf
cmp
and
mov
pop
bound
pushf
xchg
retf
ins
jge
or
adc
or
mov
adc
inc
or
lahf
loope
lahf
gs
add
inc
jge
pushf
sahf
inc
loopne
es
int3
jl
add
push
adc
push
fisub
xor
push
jp
fmul
mov
ja
jmp
test
or
dec
mov
cmp
dec
xor
gs
mov
pop
das
mov
cmc
out
fild
sbb
add
or
push
mov
sub
sub
xor
hlt
mov
mov
out
xchg
in
in
test
jns
loop
fs
mov
mov
push
push
lea
nop
jb
je
mov
out
pop
and
into
cmc
and
cmps
mov
mov
fldenv
mov
pushf
fcomp
and
jp
xor
xchg
repz
ins
data16
(bad)
xchg
jg
sti
sahf
inc
mov
ret
ret
dec
mov
loope
repz
pop
out
sub
xor
stos
and
test
sbb
pushf
fsubr
cmp
or
cli
mov
ins
ret
(bad)
fist
fwait
call
mov
fwait
movhps
dec
rcr
and
rcr
aam
xchg
pop
mov
xchg
pop
sub
inc
xchg
repnz
popf
cmc
data16
jp
dec
and
into
aas
shr
cmp
mov
repz
adc
jns
loopne
sbb
imul
iret
ret
in
mov
out
sbb
adc
shl
dec
xchg
mov
push
sub
push
sbb
cmp
clc
sar
mov
sub
fnsave
push
mov
adc
sub
push
arpl
pop
inc
sti
outs
cmp
pop
mov
xor
test
mov
inc
nop
hlt
jl
inc
add
je
add
inc
hlt
jge
sahf
cli
ret
mov
lods
out
int3
mov
mov
inc
sub
in
xchg
sahf
int3
pop
call
lahf
xchg
imul
rol
xchg
or
jo
test
jle
ficom
call
add
ss
loop
mov
adc
and
mov
ret
neg
loopne
jecxz
push
dec
es
sub
xchg
lds
iret
inc
gs
inc
mov
mov
or
pop
paddw
xlat
mov
cwde
xchg
into
dec
test
pop
in
sti
ja
in
cmp
jle
and
dec
inc
or
(bad)
sbb
movs
fcomp
jbe
loope
(bad)
mov
rol
mov
adc
(bad)
dec
sub
cmp
cmps
pop
pop
push
fcom
inc
xchg
clc
fadd
jg
out
fucompp
imul
dec
(bad)
fldenv
and
cmc
test
push
mov
stos
adc
dec
mov
fadd
mov
mov
mov
fucomi
jmp
jbe
out
es
pop
adc
xchg
mov
xlat
hlt
xor
inc
imul
ins
fisub
cli
adc
mov
pop
out
jmp
add
mov
mov
or
sets
sbb
add
push
jmp
scas
add
and
xchg
bswap
daa
jmp
fstp
ret
lahf
popa
add
cmps
xor
mov
lock
xchg
test
pop
pop
fadd
cmc
shl
pop
and
jp
mov
sub
cmps
out
into
cmp
ins
dec
(bad)
push
mov
dec
sub
pusha
fld
mov
pusha
jmp
push
adc
outs
pusha
mov
cwde
repz
cwde
(bad)
cmps
ins
mov
and
and
cwde
loope
sbb
xor
pusha
repz
push
mov
sbb
(bad)
xor
push
int
movs
sbb
cmps
cs
rcl
repnz
xor
or
ins
lea
inc
sbb
sbb
pop
das
leave
dec
mov
mov
jno
inc
sbb
mov
test
test
repnz
pop
or
cmp
dec
ins
pop
outs
sti
xor
or
sub
mov
data16
arpl
test
add
jle
jae
adc
ds
jnp
fchs
mov
and
outs
outs
lods
outs
mov
fisttp
or
dec
(bad)
scas
test
pop
(bad)
jg
jmp
jp
sub
pushf
inc
xchg
call
pop
pusha
or
rol
cwde
sub
fucom
popf
or
add
push
or
inc
xor
das
sbb
mov
add
or
jmp
mov
jmp
ds
mov
or
ds
mov
inc
rcr
adc
xor
xchg
mov
sar
movs
sbb
lds
fwait
push
add
lods
cmps
rcl
push
xchg
ror
(bad)
adc
retf
int3
imul
mov
inc
mov
push
inc
sub
ficomp
cmovle
int
test
adc
call
imul
push
cmp
les
adc
push
lea
or
scas
xor
add
add
mov
enter
cmp
push
int3
jp
mov
lods
cmp
fstp
sahf
in
xor
retf
popf
cmp
xchg
pusha
add
jl
mov
sbb
clc
pop
bound
int
nop
fs
aas
jo
pop
(bad)
xchg
les
sahf
test
jo
adc
nop
je
jae
cld
fisttp
scas
xchg
inc
add
xor
movs
mov
imul
mov
sub
mov
daa
inc
dec
sbb
mov
inc
inc
cdq
lahf
jg
loope
adc
or
out
adc
ins
test
std
xor
jns
pop
xchg
inc
cmp
imul
mov
retf
in
add
out
out
push
std
icebp
pushf
cld
jmp
sub
jae
and
(bad)
xchg
cmps
aad
sub
pop
popa
ja
leave
(bad)
pop
out
shr
sbb
int
xchg
and
mov
lahf
aad
test
ins
add
xchg
clc
cdq
cmps
xlat
xor
outs
shr
mov
add
add
and
jbe
push
push
mov
retf
enter
out
(bad)
push
test
mov
or
les
jecxz
cs
nop
(bad)
and
adc
cmp
pop
jbe
leave
hlt
mov
sbb
int
or
test
pop
loop
idiv
mov
add
in
aas
imul
push
loope
(bad)
fiadd
adc
xor
cwde
jo
sbb
call
test
(bad)
adc
mov
sti
jae
fld
aam
push
inc
mov
adc
fst
jecxz
gs
pop
pop
push
mov
cmc
pop
jb
or
inc
push
inc
sub
push
pop
sbb
aad
std
pop
pop
jl
jecxz
je
cmps
mov
pop
jp
or
add
icebp
jno
fisttp
lock
ss
fisttp
jae
into
jmp
pop
jg
pop
pop
and
and
shl
pop
or
int
mov
jmp
leave
call
les
loopne
and
pop
and
cmp
(bad)
icebp
iret
mov
sub
push
out
stos
fbld
fwait
xchg
jmp
and
nop
dec
fstp
pop
pop
lods
rol
cli
loope
pop
std
inc
lea
mov
pop
ror
sbb
xor
cld
repnz
in
(bad)
rcl
retf
imul
jge
or
pop
shl
mov
gs
nop
sbb
test
mov
leave
icebp
sbb
jo
(bad)
fwait
fwait
je
lea
lea
shr
clc
outs
mov
pop
inc
push
test
adc
mov
adc
jg
mov
mov
ret
sub
shr
(bad)
scas
inc
push
pushf
cmp
ret
ds
out
mov
js
jmp
cmp
loope
fist
repnz
adc
sub
and
push
or
mov
cmps
inc
aad
imul
xchg
hlt
mov
or
sub
ret
sahf
add
icebp
cmp
rol
jmp
add
jo
int3
or
out
dec
in
fwait
mov
gs
xor
sub
mov
add
dec
or
mov
lahf
test
pop
push
popf
sbb
pop
push
inc
scas
hlt
sub
loop
aaa
ins
in
int
mov
shr
fimul
and
out
ficomp
dec
ss
xchg
stc
lock
mov
xchg
inc
test
push
mov
out
sbb
xor
stc
fld
mov
cmp
push
or
mov
adc
pusha
push
pop
inc
xchg
or
rcr
iret
imul
in
jne
sub
stc
add
mov
ds
push
mov
test
fcmove
mov
inc
fiadd
adc
add
xor
mov
scas
imul
inc
pop
pop
hlt
test
out
adc
sub
retf
sti
retf
push
xchg
adc
push
and
and
arpl
(bad)
xor
in
mov
adc
into
pop
pop
jbe
leave
push
mov
mov
(bad)
push
ret
fstp
stc
mov
or
sar
jmp
iret
xchg
scas
or
scas
sub
movs
je
mov
call
ret
pop
sbb
stc
add
cmp
pop
loop
pop
(bad)
ins
add
sub
test
aaa
fadd
pop
bound
mov
xchg
mov
and
loop
mov
pop
sbb
ds
call
xor
cmps
push
jno
mov
stc
cmovs
mov
repz
push
dec
gs
and
gs
lea
cmp
xor
jmp
(bad)
dec
and
(bad)
cwde
rcr
leave
or
rcr
cdq
pop
into
or
shl
xchg
rcr
pop
ret
int
or
inc
xchg
xchg
test
xor
cmp
add
scas
in
(bad)
jecxz
mov
push
dec
mov
retf
inc
scas
lock
aam
and
sub
and
pop
adc
adc
and
adc
add
dec
sbb
cmc
cmp
imul
mov
cmp
test
pop
aam
xchg
push
popa
enter
popf
mov
das
cmp
pop
retf
mov
das
cmp
dec
into
sbb
inc
dec
jge
mov
(bad)
loop
dec
inc
jg
sub
test
cmp
test
stos
and
mov
icebp
mov
js
mov
cmovle
cld
fidiv
das
pop
add
or
sub
sub
jp
pop
gs
retf
rcl
imul
fst
fdiv
cmp
fisub
sub
(bad)
xchg
call
je
in
jns
pop
mov
add
mov
inc
fbstp
cmp
push
push
div
cmp
jp
cmp
jl
cli
dec
adc
dec
mov
retf
inc
jb
mov
mov
cmp
bound
sub
test
adc
mov
nop
inc
loop
xor
cwde
sbb
icebp
jnp
out
jp
xchg
inc
mov
push
push
loopne
stos
add
shl
addr16
push
pushf
push
or
hlt
stos
mov
sar
mov
in
mov
loop
sub
ins
xor
inc
jmp
pusha
cli
xchg
or
ffree
mov
not
in
pop
je
popf
sti
mov
mov
and
sahf
dec
imul
(bad)
dec
(bad)
xor
rcr
test
sub
sar
xor
mov
xor
mov
jae
xchg
into
and
adc
into
(bad)
pop
or
jne
call
stc
mov
in
fs
sbb
mov
jno
inc
es
shl
xchg
test
cmp
lea
xlat
and
cs
ins
mov
stos
adc
iret
jl
popf
add
daa
popa
xor
jmp
loop
into
out
in
add
shl
mov
gs
cwde
sub
cmps
test
add
sbb
xchg
adc
jae
cmps
call
scas
jmp
pop
pop
in
jb
jle
sub
neg
call
pop
xchg
sbb
out
xchg
mov
add
mov
repnz
adc
push
loop
or
pop
mul
jge
pop
mov
in
mov
leave
inc
xchg
test
lods
fcom
(bad)
push
test
mov
sbb
clc
outs
pop
loop
xchg
fist
shl
dec
mov
mov
cmc
or
cmps
xchg
into
cli
sub
fild
pop
sbb
fisttp
pop
nop
dec
std
retf
lods
add
dec
inc
or
es
ins
ins
not
jnp
mov
inc
jg
pop
pop
aas
add
xlat
fidivr
repnz
(bad)
aas
outs
mov
in
mov
cmc
sbb
xlat
arpl
adc
xchg
popa
add
pop
inc
lds
outs
pop
mov
ins
inc
adc
lock
push
pop
push
scas
jle
or
addr16
inc
ins
das
sub
add
gs
push
jbe
idiv
mov
xchg
mov
sub
push
or
inc
mov
xchg
and
int3
xchg
mov
int
imul
and
cmp
inc
adc
pop
popf
xchg
and
pop
jno
icebp
test
cdq
in
mov
pop
retf
fstp
jmp
icebp
mov
mov
push
scas
add
ds
jl
fwait
lock
call
adc
ss
(bad)
fiadd
jle
push
mov
pushf
jg
clc
les
in
mov
mov
adc
jl
sahf
inc
push
cdq
fidiv
mov
aas
sbb
test
imul
and
dec
fs
jge
and
es
inc
fstp
inc
pop
fst
pushf
nop
hlt
ins
icebp
push
jecxz
iret
lea
cmps
pop
and
das
sbb
push
cmp
mov
lock
ret
push
push
mov
iret
jnp
retf
mov
in
push
pop
add
ror
push
mov
fnstenv
push
fdivp
(bad)
jge
mov
xor
mov
jne
hlt
or
pop
lods
add
xchg
in
adc
xchg
or
out
mov
sbb
mov
stos
popf
outs
and
fisubr
xor
in
into
mov
push
pop
stos
cs
scas
pop
push
cmp
mov
stos
fs
push
xor
(bad)
cmc
add
inc
sar
lods
adc
jmp
mov
in
das
cmps
jnp
sbb
mul
push
lods
mov
sbb
rol
(bad)
mov
popa
test
or
adc
adc
mov
dec
sar
fsub
mov
or
ins
mov
mov
mov
xchg
movs
or
and
pop
lea
jae
lods
sub
mov
movs
mov
ins
(bad)
rcr
and
or
pop
popf
jg
mov
xchg
cmps
(bad)
add
pop
cmps
dec
outs
xor
cmc
cmp
retf
mov
or
xor
or
sahf
mov
xor
mov
push
daa
out
pushf
add
xchg
mov
xor
repnz
inc
jmp
mov
mov
mov
pushf
ficomp
int
or
test
out
sub
gs
xchg
push
lea
pusha
and
mov
cld
sbb
xor
xor
movs
test
jmp
ret
(bad)
adc
mov
nop
shl
sub
dec
push
repnz
adc
div
add
(bad)
jnp
dec
icebp
and
lea
jb
in
sbb
cld
xlat
test
pop
push
jecxz
dec
cmp
cwde
xlat
sub
dec
push
addr16
sbb
es
repnz
loop
shr
mov
cdq
(bad)
cmp
xchg
mov
arpl
inc
jb
cmc
and
std
daa
ins
cli
cdq
xor
mov
js
push
fstp
xor
aad
test
test
enter
mov
imul
or
sbb
enter
pop
test
shl
xchg
pop
jl
bound
xchg
test
add
ret
dec
ins
xchg
ds
xchg
dec
or
jl
mov
outs
cmp
out
sub
add
dec
call
fcmovnu
sahf
add
xchg
inc
and
ins
xchg
shl
or
sahf
jnp
pop
mov
fwait
repz
cmp
mov
iret
(bad)
sub
mov
retf
push
pop
push
fdiv
add
jo
lods
aas
inc
fs
out
pop
mov
mov
rep
xchg
sbb
add
in
cld
pop
pushf
sar
mov
js
icebp
pop
cld
hlt
lods
jecxz
(bad)
sar
mov
pop
or
push
fwait
inc
in
or
jo
xchg
jb
cdq
(bad)
mov
jmp
xor
pop
pushf
js
xchg
sti
sub
jmp
push
sbb
pushf
dec
lods
ret
push
shl
cs
dec
push
mov
xchg
mov
idiv
pop
cmc
aam
aad
dec
(bad)
ins
push
and
cwde
mov
jmp
stc
int
sub
in
xchg
inc
data16
push
scas
daa
test
pop
lock
lods
push
mov
or
je
shr
out
sub
pop
(bad)
neg
retf
add
sub
jl
inc
into
xor
daa
nop
xchg
in
jbe
adc
shr
inc
and
loopne
dec
or
dec
cdq
or
stc
stos
lods
or
adc
scas
jg
dec
scas
dec
dec
adc
inc
lea
xchg
aaa
mov
icebp
lods
in
cmp
fdivr
push
fsubr
mov
jae
ret
stc
jae
ret
mov
cmps
mov
jge
das
fldl2e
loopne
jbe
push
scas
jg
inc
fld
into
call
inc
xchg
sbb
scas
mov
rcr
cmp
popa
adc
mov
into
xor
cmps
mov
adc
gs
cmps
mov
jl
stc
add
mov
(bad)
sti
and
and
mov
push
sub
xchg
js
aam
retf
and
sbb
add
sub
pusha
cmp
push
jp
xchg
mov
push
int3
out
jne
lds
dec
mov
push
out
xchg
dec
mov
out
adc
pop
call
jns
in
les
cmc
into
mov
lods
push
nop
adc
mov
stos
out
xchg
mov
dec
shl
retf
test
fld
ret
aaa
mov
test
dec
popf
arpl
pushf
mov
cs
repnz
(bad)
es
loope
aad
jp
pop
adc
arpl
ficomp
or
int
pusha
push
pop
repz
out
rep
pop
or
xor
stos
sbb
push
icebp
lods
xor
(bad)
xchg
adc
push
adc
fwait
jno
sub
sub
sbb
int
mov
pushfw
sbb
push
push
push
xor
loope
push
mov
imul
mov
in
retf
popf
cmp
pop
pop
pop
pop
jge
loop
fnstenv
jmp
push
lds
in
cmp
pushf
jl
jno
pop
outs
cmp
cmp
jecxz
movs
ds
mov
(bad)
xor
mov
push
(bad)
sub
mov
test
icebp
push
enter
pop
imul
xchg
mov
or
enter
mov
dec
jbe
adc
sbb
ins
sub
fldcw
retf
cmps
sbb
popa
test
mov
dec
jno
xchg
cmc
mov
and
(bad)
cmp
xchg
mov
sub
xchg
daa
and
mov
jge
mov
retf
gs
call
mov
outs
popf
iret
cmc
fisttp
lods
dec
add
push
fisubr
fld
mov
aam
cmp
push
pop
lods
mov
push
pop
cdq
ins
cmp
(bad)
mov
cs
aaa
push
stos
mov
clc
mov
pop
and
sub
imul
fcmovnu
xchg
fmulp
bound
ror
ret
inc
fistp
nop
inc
popa
pusha
pop
jge
jb
pop
sub
dec
xor
pop
xchg
rol
popf
sub
dec
dec
add
jmp
nop
dec
fdiv
push
jne
xor
test
pushf
mov
add
push
mov
sub
sahf
cmovg
mov
sub
stos
jbe
scas
idiv
add
jmp
xchg
pop
out
int
cld
mov
loop
or
adc
adc
xor
push
or
fiadd
cmp
ffreep
adc
cs
dec
shr
icebp
sahf
outs
cmp
adc
and
or
bound
aaa
jmp
leave
movs
mov
xchg
inc
out
adc
jg
ret
shr
js
sub
pop
and
(bad)
pop
xor
push
mov
jns
xchg
xor
pushf
xor
pop
aas
loope
pop
call
dec
sub
inc
movs
repz
(bad)
imul
inc
test
pop
add
and
dec
in
cmp
out
arpl
mov
push
stc
inc
xor
mov
adc
mov
cmps
sahf
mov
(bad)
shr
mov
out
sbb
pop
lods
mov
out
xchg
xchg
or
mov
sahf
cld
push
fs
push
sbb
les
mov
mov
dec
dec
pop
fsub
outs
gs
push
inc
clc
mov
pop
mov
push
imul
push
xor
xchg
pushf
inc
imul
inc
ror
push
sub
mov
scas
ins
sti
jnp
push
or
xchg
sbb
push
cmp
mov
aaa
cmp
jno
add
enter
loopne
cmp
add
push
and
shl
jns
das
popa
mov
xor
pop
mov
scas
pop
mov
mul
mov
and
adc
mov
jnp
(bad)
cli
popa
and
sbb
out
mov
mov
jno
out
mov
or
call
dec
lahf
cdq
in
inc
xor
push
dec
add
jl
mov
jbe
fisubr
pop
hlt
shr
leave
fcomp
(bad)
into
cmp
out
jle
cmp
and
jnp
jae
push
or
jbe
lds
mov
ficomp
jmp
lds
aas
and
(bad)
adc
outs
or
mov
jge
fisub
sub
cmps
jmp
and
or
sar
or
lea
inc
ret
inc
mov
inc
aas
imul
ins
push
cli
sub
jg
call
sbb
jmp
aas
mov
inc
adc
les
xchg
mov
push
retf
add
jle
mov
mov
mov
mov
push
sbb
inc
adc
sbb
mov
aam
or
mov
addr16
inc
aaa
cmp
icebp
or
pavgw
add
(bad)
xor
cdq
not
xor
sbb
fiadd
pushaw
dec
and
fnsave
jne
ja
std
into
bound
idiv
movs
sub
jno
lods
icebp
pop
rol
pop
mov
retf
js
cmp
or
fcomp
sub
pop
cld
popa
inc
mov
inc
mov
xchg
jnp
dec
inc
cmp
retf
(bad)
sbb
ret
add
sti
cmp
pop
dec
stc
ficom
outs
mov
or
and
and
dec
inc
add
adc
sbb
movs
and
stc
dec
test
repz
mov
mov
inc
pop
lods
add
mov
pop
and
ja
aas
mov
dec
pop
and
aas
sbb
(bad)
hlt
stc
jnp
es
pop
pop
xchg
scas
sahf
outs
cmp
sbb
std
adc
int3
sub
nop
push
and
jno
pop
cs
les
out
repz
mov
xchg
dec
int
not
in
shr
sti
inc
xchg
das
dec
ret
movs
mov
scas
push
add
sbb
repnz
shl
cmp
aaa
or
ja
mov
ds
xor
aad
lea
mov
daa
and
bound
sbb
js
or
pop
mov
outs
lds
jge
into
jne
sbb
push
or
xchg
out
fbstp
fsub
xor
xlat
jle
inc
into
sub
gs
cmp
cmp
test
mul
aaa
xchg
das
xchg
retf
jecxz
jbe
mov
xchg
jnp
aam
xchg
sub
push
xor
(bad)
std
cdq
stos
out
xor
cld
or
std
adc
repz
jo
lods
scas
into
lods
xor
call
out
mov
inc
push
call
(bad)
mov
cli
enter
pusha
das
stos
mov
movs
out
js
push
in
and
fnstcw
movs
sbb
jmp
pop
ret
repz
mov
fcmovnu
xchg
in
sub
repnz
push
aas
push
jecxz
cmp
mov
jo
push
lods
dec
ret
lock
ins
add
in
inc
aam
inc
and
fst
pop
or
cmc
xchg
jns
dec
cmp
xor
fistp
loopne
test
cwde
mov
retf
adc
scas
aam
cmc
pop
mov
sbb
push
inc
mov
mov
sbb
jbe
cmp
add
push
mov
xchg
xchg
in
(bad)
mov
sub
sub
call
cmps
sbb
xchg
mov
fild
iret
out
stos
push
push
adc
cmp
mov
shl
mov
cmp
scas
xchg
popa
pop
cmp
cmc
xor
fs
iret
test
fstp
add
icebp
(bad)
icebp
pop
mov
sbb
fucomip
mov
adc
jne
adc
es
mov
iret
les
adc
pop
aad
aad
jo
adc
mov
btc
movs
dec
xchg
xor
adc
inc
enter
popa
pop
push
out
int
mov
cmp
ds
loop
addr16
jns
mov
fidiv
push
or
loopne
mov
sub
jb
fidivr
adc
fmul
nop
mov
in
jp
dec
cmp
cs
add
and
cdq
ja
cmp
adc
push
jne
loop
rcr
icebp
mov
mov
inc
(bad)
imul
sub
jb
pop
popa
push
outs
sbb
push
ret
cmp
xchg
or
outs
jg
lock
and
pop
jp
call
int
lahf
push
mov
push
cs
mov
jle
mov
aam
inc
ss
ds
xor
sub
lods
scas
test
dec
mov
cmps
inc
imul
add
cmps
push
imul
mov
push
fisttp
out
ss
jmp
add
lods
shl
cli
push
leave
aas
mov
daa
pop
sub
bound
mov
push
push
inc
xor
sub
jg
aas
xchg
fisttp
test
les
enter
data16
add
sar
scas
or
pop
push
xor
push
pop
fsubr
push
fcom
inc
xor
inc
fucom
outs
add
test
add
ins
add
mov
push
sub
cmp
call
and
fld
cwde
mov
jns
sub
lock
mov
and
out
mov
pusha
sbb
sub
xchg
xchg
or
push
pop
or
adc
push
inc
(bad)
jmp
icebp
or
cld
lahf
aad
inc
mov
inc
out
mov
(bad)
mov
cs
lock
push
mov
mov
loopne
je
jg
inc
add
or
(bad)
call
mov
cs
inc
dec
push
and
fist
sub
outs
or
mov
inc
stc
inc
shl
adc
movs
je
(bad)
out
adc
push
mov
mov
inc
mov
test
xor
das
push
push
(bad)
mov
mov
pop
lahf
add
cmp
mov
(bad)
out
sbb
ins
aas
dec
mov
addr16
fild
arpl
int
mov
xchg
int
js
adc
jp
dec
pop
add
fild
or
je
xor
jns
pushf
pop
lods
mov
cmps
imul
mov
out
jmp
xor
xor
and
out
dec
push
jecxz
sbb
(bad)
xor
test
pop
ror
xchg
fsubrp
ds
add
add
mov
test
xchg
adc
pop
adc
clc
or
outs
stos
dec
popf
stc
xor
jecxz
cmp
arpl
in
in
stos
mov
aad
cmp
mov
xor
pop
test
popa
out
mov
fcom
iret
sub
out
mov
mov
sub
xchg
cmp
mov
or
push
int
pop
jne
aas
jmp
mov
in
mov
mov
test
mov
leave
jge
push
enter
stos
mov
out
xchg
add
into
or
cdq
xchg
mov
imul
fist
fiadd
mov
ret
add
mov
ret
fadd
sbb
ja
jge
push
sub
pop
test
mov
cmp
test
mov
or
pop
hlt
mov
adc
or
push
call
mov
jmp
xchg
and
leave
sbb
(bad)
pop
(bad)
push
jnp
and
cmp
aaa
mov
mov
add
inc
movs
out
dec
add
sbb
into
int3
push
and
sbb
dec
(bad)
(bad)
sbb
push
xlat
pushf
aam
sub
push
fwait
popf
add
cmp
mov
cmp
movs
mov
or
(bad)
fldenv
lea
(bad)
sti
in
outs
mov
mov
iret
add
cmp
adc
imul
add
pop
xor
adc
mov
ret
jns
sub
(bad)
imul
loopne
outs
(bad)
in
cmp
popf
cmp
imul
mov
adc
data16
inc
hlt
rcl
adc
icebp
lods
into
jne
bound
ds
int
in
xor
add
out
mov
rcr
es
outs
bound
sub
cmps
push
push
fwait
sub
push
dec
sub
dec
aas
push
ss
in
dec
test
pop
add
push
gs
aaa
popf
mov
pushf
xchg
push
dec
(bad)
call
test
add
xlat
js
cmc
push
aad
mov
sbb
mov
pop
mov
inc
sbb
ins
loopne
cmp
xchg
rcr
push
or
xchg
inc
shr
jae
out
sar
pop
jecxz
sub
mov
inc
xchg
mov
push
rol
js
rcl
push
mov
pop
jno
jbe
ds
xchg
int
adc
ins
add
sub
push
in
mov
repnz
add
addr16
inc
xchg
jg
jecxz
xor
or
(bad)
stos
lock
enter
pop
mov
push
movs
xlat
sub
rol
add
pop
lods
pop
mov
push
push
push
and
icebp
lods
call
add
aad
xor
or
xchg
dec
stc
sub
mov
mov
jno
mov
sbb
sub
jecxz
mov
jmp
movs
test
in
rcr
inc
add
lods
and
clc
inc
cmps
cmp
outs
cmp
inc
int
or
sbb
pop
xchg
sbb
in
je
add
jl
and
fsub
inc
jge
les
call
jnp
popf
xlat
imul
sub
arpl
test
aam
lds
fmul
inc
xor
std
push
dec
mov
mov
lds
jmp
shl
mov
pop
inc
sbb
jl
int
sbb
add
mov
inc
xchg
into
sbb
add
and
pop
inc
repz
mov
ss
test
or
imul
mov
xor
jbe
add
test
arpl
mov
add
mov
sub
mov
cdq
adc
shl
data16
sub
scas
adc
push
out
test
inc
dec
jne
fnstenv
(bad)
out
mov
out
stos
xor
inc
or
cmp
les
iret
loop
call
xchg
mov
adc
jp
(bad)
jmp
push
leave
cmp
lahf
push
(bad)
dec
repnz
clc
hlt
pop
out
fwait
mov
mov
into
adc
test
jo
bsr
sbb
lds
push
and
inc
fwait
into
sti
cmp
mov
sub
ss
pop
outs
cmp
sbb
scas
or
and
mov
sbb
xor
inc
jae
jno
sub
pop
js
std
push
sbb
pop
call
lock
hlt
sti
add
jmp
mov
outs
pop
mov
cmp
clc
pop
cmp
pop
cs
test
dec
add
dec
inc
sbb
inc
mov
add
adc
iret
loopne
or
cld
adc
fidivr
xlat
arpl
jnp
mov
gs
mov
jne
adc
xor
adc
xchg
aad
call
pop
cwde
pop
push
bound
and
mov
mov
or
sub
mov
push
icebp
push
mov
mul
xchg
imul
mov
lods
fimul
sbb
pop
jl
add
retf
sub
jmp
mov
cwde
loopne
xor
lock
int
push
cmp
sbb
(bad)
push
cmps
cmp
pop
popa
leave
addr16
or
pop
ja
aaa
arpl
sbb
shr
loope
int
sub
outs
push
into
fild
or
and
(bad)
shl
xchg
ja
mov
cs
push
sbb
xor
stos
fcom
in
pop
fisubr
add
push
dec
jp
mov
(bad)
(bad)
sub
pop
inc
pop
xchg
(bad)
xor
lds
fld
aas
sub
int
pusha
jno
push
mov
loope
call
dec
and
imul
pop
sub
cmp
xor
movs
xchg
daa
shl
sti
lahf
fcom
movs
mov
hlt
fbld
adc
add
jp
es
test
and
mov
push
mov
dec
mov
cmp
test
inc
pop
dec
les
rcl
xchg
lds
movs
xchg
mov
inc
sub
mov
add
and
popf
xor
add
mov
or
dec
jbe
jne
cwde
jne
imul
mov
(bad)
repnz
xor
iret
sbb
pop
push
sub
je
pusha
out
xchg
jmp
das
or
retf
iret
(bad)
fldcw
inc
cmps
push
ds
mov
std
and
(bad)
fmul
jl
jns
inc
cdq
sbb
mov
mov
dec
xchg
mov
mov
sbb
jmp
xor
pop
test
and
mov
sub
mov
mov
xchg
cli
test
test
pop
sbb
imul
jle
es
cs
adc
adc
jno
scas
ds
add
pop
test
retf
dec
cmp
in
loopne
mov
adc
mov
sub
mov
lods
push
in
repnz
mov
jb
mov
adc
adc
lea
in
bound
shl
pop
aaa
mov
mov
cdq
add
movs
mov
es
and
or
mov
adc
sbb
cmp
stos
imul
jbe
mov
jle
js
add
imul
mov
sbb
iret
clc
mov
icebp
push
cmps
gs
fnstcw
data16
mov
jne
stc
xor
std
addr16
lock
mov
call
mov
sar
inc
xor
jl
mov
mov
test
sub
fld
shl
mov
pop
add
sub
hlt
in
push
adc
mov
loop
mov
push
adc
rcr
cs
mov
mov
in
mov
out
cmp
(bad)
sbb
jno
or
xor
push
mov
dec
cmps
scas
fdiv
arpl
aaa
data16
lods
pop
fidivr
push
jle
ret
push
and
mov
push
xchg
adc
mov
sub
in
xor
adc
mov
jl
mov
cmp
and
lds
outs
mov
pop
out
aaa
or
mov
pushf
cmp
or
in
dec
call
imul
shl
lock
xor
fistp
fimul
xor
vmwrite
adc
jle
pop
or
inc
mov
mov
jns
pop
dec
adc
lahf
sbb
movs
xchg
sub
mov
xor
into
sbb
jno
push
outs
cwde
sbb
jecxz
rcl
(bad)
push
sub
rcr
movs
sbb
jbe
imul
loop
dec
jge
cmp
lea
mov
(bad)
fist
retf
mov
mov
stos
sti
adc
cmp
mov
sub
mul
mov
inc
jae
pop
push
icebp
ret
enter
jge
push
inc
ret
ja
sub
mov
(bad)
add
jge
and
push
(bad)
mov
jge
pop
pop
xor
mov
pop
push
scas
stos
fadd
inc
(bad)
push
adc
fsub
shl
or
inc
daa
retf
mov
jbe
sti
or
adc
fld
icebp
push
es
sub
xchg
inc
mov
xchg
mov
ins
retf
out
push
add
sbb
push
mov
push
push
cwde
outs
movs
push
sub
(bad)
imul
jno
xor
push
inc
xor
pop
cmc
loope
cmc
add
test
fisubr
or
mov
popa
and
(bad)
imul
fisubr
adc
aam
stos
push
jae
cmp
mov
inc
cdq
shr
xor
scas
dec
push
out
scas
push
push
shl
gs
pop
loope
leave
inc
jb
leave
push
outs
pushf
mov
xor
cmc
fwait
mov
jmp
push
sahf
fwait
inc
sbb
push
es
loop
movs
cmp
popa
shl
xor
xchg
adc
add
pop
push
or
aad
sti
(bad)
cdq
test
call
mov
aad
xchg
and
mov
imul
pop
jo
(bad)
xchg
adc
jecxz
or
(bad)
pop
push
xchg
(bad)
cmp
scas
imul
arpl
xchg
inc
rol
and
push
push
icebp
inc
mov
pop
pop
pop
inc
bound
add
jle
mov
sub
push
call
cmp
sub
add
pop
jge
leave
icebp
int
xchg
adc
or
xlat
pop
int
sub
cmp
sbb
push
inc
(bad)
mov
add
jmp
jmp
inc
leave
cmp
hlt
call
adc
outs
lea
inc
outs
aam
xchg
pop
fnsave
fbld
pop
lea
out
and
retf
pop
push
loopne
mov
fwait
imul
push
pusha
je
cmp
dec
sbb
cdq
xchg
fnstenv
(bad)
popf
mov
jo
inc
shr
sbb
in
data16
adc
xor
sbb
out
cs
or
call
mov
push
dec
xchg
xchg
mov
adc
push
jmp
je
sbb
xchg
xchg
test
mov
sti
(bad)
leave
scas
xchg
pop
test
inc
adc
pop
sub
leave
pop
sub
add
dec
loope
sub
bswap
mov
test
mov
out
and
mov
add
pop
fbld
sar
sbb
sub
dec
movs
cmp
ja
and
loop
pop
mov
ins
xchg
jno
jmp
cmp
icebp
inc
fld
mov
push
mov
mov
ret
call
shl
mov
icebp
std
pusha
dec
push
cmc
mov
pop
scas
adc
inc
in
jns
pop
adc
repnz
cmps
(bad)
push
push
sbb
mov
shl
lods
add
adc
pusha
loop
loop
pop
pop
xchg
xor
jne
ret
int3
mov
jae
addr16
mov
inc
and
mov
sbb
cli
lods
mov
lock
aad
dec
cmps
mov
mov
pop
or
cdq
lods
inc
and
lods
adc
(bad)
push
gs
fs
sbb
adc
jnp
movs
fsub
test
xchg
jecxz
dec
(bad)
ins
(bad)
pop
cmp
aaa
in
mov
push
jle
psubw
adc
arpl
and
mov
push
dec
sbb
pop
jl
ds
xchg
inc
ror
jecxz
inc
shl
das
call
adc
add
cmp
mov
and
cmp
sub
push
into
and
add
sbb
sub
ficom
loope
push
xchg
xor
outs
sbb
and
mov
xchg
(bad)
jge
out
popf
test
xchg
je
push
mov
push
cs
scas
push
lds
jl
mov
and
or
(bad)
xbegin
jmp
and
sbb
mov
xor
aad
out
fild
fimul
mov
jp
pop
cmp
in
out
sbb
xor
mov
in
push
jmp
nop
imul
js
dec
and
ja
test
jle
int
add
and
shl
xor
add
in
gs
xchg
jns
fcomp
xor
ins
sbb
shl
adc
or
cs
in
adc
pop
pop
mov
pop
ffreep
sub
xchg
lock
enter
in
sbb
xor
dec
mov
imul
pop
in
fprem1
jp
cwde
add
into
or
xor
pushf
in
cs
sbb
clc
test
shl
clc
hlt
sub
loop
hlt
inc
clc
mov
imul
fsub
repnz
push
jp
mov
ficom
nop
mov
in
sbb
cmp
repnz
call
xchg
xchg
bound
lea
mov
dec
es
dec
mov
das
lds
and
in
fs
push
xchg
mov
or
data16
sar
jnp
repnz
ret
cmp
rol
hlt
cmp
mov
dec
test
jnp
xchg
(bad)
cmp
or
jl
sub
and
add
xchg
mov
mov
dec
cmp
movs
mov
ja
inc
neg
mov
int3
test
cmp
aas
aaa
xchg
out
mov
ss
shl
sbb
(bad)
lds
mov
or
outs
pop
clc
sub
aam
xor
pop
or
dec
into
mov
fist
cmps
sbb
jo
or
imul
mov
inc
mov
push
repnz
adc
inc
mov
loopne
daa
int
in
fadd
movs
cmp
in
jns
xchg
push
stos
(bad)
xchg
pop
jg
pusha
mov
cmps
mov
dec
mov
pop
jnp
call
loope
and
out
sub
into
mov
popa
ins
aas
cs
xor
jb
adc
jg
cmps
fs
cmp
dec
xchg
fldenv
jbe
mov
out
rol
dec
jns
sti
cmp
cmp
sub
mov
rcl
mov
sbb
(bad)
les
lods
movs
les
(bad)
fstp
repnz
push
mov
push
jo
xchg
push
jno
sbb
or
mov
gs
(bad)
cli
add
or
mov
es
test
xor
cmp
mov
pop
aaa
bound
(bad)
push
test
aad
scas
ret
mov
mov
arpl
and
int
retf
jg
xor
es
jecxz
shld
pop
cmp
xor
xchg
cmp
test
cmp
adc
test
mov
lock
mov
adc
shl
dec
fcomp
push
lahf
or
popa
cmc
and
inc
out
pushf
adc
and
ja
pop
arpl
test
mov
pushf
mov
push
lds
pop
jl
pop
std
dec
or
mov
jmp
xor
push
shl
push
push
(bad)
ins
sbb
dec
lods
lock
jp
dec
movs
add
or
ja
xchg
shr
pop
mov
lock
sbb
adc
sbb
daa
jno
idiv
inc
mov
xchg
in
push
xchg
fnstenv
sbb
mov
cmp
imul
int3
adc
mov
daa
jo
lods
or
dec
cmp
and
js
fs
sub
ins
in
jg
arpl
inc
sub
aam
std
or
mov
push
push
loope
push
sub
xor
sub
inc
jecxz
sbb
loope
daa
pop
jae
les
push
outs
mov
fs
cmp
adc
jg
mov
add
hlt
push
je
jle
cmps
les
push
pushf
xchg
sub
adc
sbb
loopne
jno
adc
cdq
push
movs
jns
cld
jbe
in
jbe
sub
and
mov
sbb
(bad)
test
in
data16
add
int
sbb
fsub
push
cmc
icebp
add
mov
ror
fcomp
fadd
out
leave
push
ds
gs
mov
sar
xchg
aas
jo
push
cmp
dec
fsub
xchg
cmp
repz
in
dec
pop
scas
lahf
fisub
nop
jle
das
xor
cmp
xor
xchg
add
stc
jne
pop
and
(bad)
pop
es
loop
in
pushf
inc
lock
movs
or
jecxz
and
jp
sbb
inc
sbb
jb
ret
pop
adc
or
add
pop
inc
sbb
scas
jbe
(bad)
pop
push
mov
jno
jmp
inc
mov
mov
sar
push
outs
and
cmps
add
prefetch
mov
mov
mov
push
cli
ja
sbb
out
push
retf
out
popa
rcr
js
sbb
stos
shl
adc
mov
xor
sub
out
sub
jae
mov
mov
mov
in
xor
rcr
fdiv
dec
and
mov
jo
mov
loopne
repz
sbb
adc
mov
push
fdivr
jo
fisubr
dec
push
cdq
fsub
adc
inc
or
dec
(bad)
and
popa
xor
adc
cmp
test
mov
or
mov
div
pop
pop
test
push
fisttp
ret
add
clc
cs
jmp
inc
repz
xor
inc
iret
outs
ror
test
push
sti
pop
ss
and
inc
jne
xor
mov
jp
sbb
jns
gs
outs
jae
cmp
icebp
ss
or
fdiv
add
sti
add
mov
or
icebp
mov
in
test
jge
retf
mov
mov
imul
inc
fwait
jmp
sahf
push
test
les
pop
(bad)
in
mov
inc
mov
dec
push
jno
pop
fnstcw
(bad)
mov
cwde
inc
lahf
pop
dec
pop
test
push
inc
pop
add
mov
jns
and
mov
int
pop
jl
jno
cmp
xchg
mov
fcomip
sar
shr
inc
and
call
es
mov
add
push
lock
pop
mov
(bad)
(bad)
jp
mov
int3
jge
dec
hlt
xor
or
loope
or
mov
mov
cmc
mov
(bad)
lds
cli
addr16
ds
adc
inc
cmp
mov
lea
enter
xchg
punpcklbw
fwait
adc
push
push
xchg
imul
je
addr16
test
xchg
imul
jmp
es
fist
cmc
cmp
mov
imul
(bad)
ds
xchg
push
jecxz
xor
aas
xor
std
aam
mov
sbb
pop
leave
cmp
rcl
repnz
retf
outs
mov
dec
ret
in
jns
xor
xchg
xor
loope
sub
jle
pop
aad
cmp
call
mov
mov
jnp
mov
imul
outs
inc
jg
sub
cmp
retf
add
mov
push
or
jle
and
inc
and
sub
cs
inc
cmp
ret
and
pop
enter
outs
shl
ret
in
test
mov
shl
inc
xchg
(bad)
and
(bad)
iret
mov
jp
movs
popa
sbb
test
fiadd
lds
mov
(bad)
fs
sti
xchg
adc
ja
in
out
aaa
adc
cli
and
adc
ficomp
dec
popf
stos
popa
dec
call
aaa
cwde
pop
sbb
mov
xchg
xchg
and
test
mov
mov
pop
test
push
(bad)
(bad)
js
or
jo
add
add
mov
cmp
inc
ret
imul
pusha
and
scas
sbb
ins
sbb
jmp
or
mov
imul
sbb
retf
retf
xchg
mov
pop
stc
cmp
jmp
iret
pop
(bad)
mov
lds
or
jo
popf
sbb
int
mov
xchg
mov
dec
xor
scas
lahf
popf
dec
fst
(bad)
and
sbb
xchg
push
mov
aad
(bad)
push
jnp
loop
sub
push
(bad)
aam
jne
popf
(bad)
leave
push
mov
data16
mov
iret
sbb
lods
call
xchg
xor
ins
xchg
pop
mov
dec
sub
shr
mov
xor
mov
xor
cmps
pushf
mov
push
fwait
pop
data16
aam
test
dec
lods
and
por
inc
add
mov
jl
mov
into
xlat
inc
inc
mov
sti
sbb
movs
pop
lahf
fstp
cs
outs
pop
ds
out
fild
dec
dec
pop
icebp
cwde
adc
outs
and
cmp
cdq
sub
in
sahf
in
int3
outs
jae
or
xchg
jmp
jne
cdq
cmp
xor
mov
adc
sbb
outs
add
mov
(bad)
jl
jmp
int3
daa
or
or
(bad)
nop
lea
inc
add
lea
inc
in
daa
mov
push
ja
jp
js
cdq
dec
test
push
or
inc
into
dec
lahf
add
loope
ds
sbb
or
xlat
adc
mov
loope
push
jp
into
(bad)
xor
popf
sbb
xchg
cmp
or
inc
and
out
hlt
call
or
and
push
pop
test
movs
mov
jns
jo
pop
mov
movs
cwde
sub
pop
test
and
cmps
les
cli
cld
imul
inc
arpl
scas
push
dec
mov
rcr
gs
cmc
push
jmp
push
mov
mov
add
iret
ror
mov
or
dec
out
ficom
hlt
push
sahf
xchg
push
pusha
pop
mov
cmp
or
scas
xor
in
sti
cdq
in
movs
leave
aaa
popa
mov
retf
es
mov
push
sbb
cld
test
cmp
stos
fimul
lahf
ret
xchg
popf
mov
sub
lods
repnz
jecxz
mov
dec
gs
mov
xor
or
pop
xor
stos
pop
aad
call
or
cmps
mov
outs
inc
and
adc
daa
and
jae
pop
xchg
dec
pop
jbe
out
fs
adc
sbb
jge
fcom
mov
cmps
daa
push
fsubp
mov
dec
repz
push
jnp
cmp
mov
add
adc
and
das
ret
enter
fs
cmps
pop
xchg
stos
cld
out
call
fmul
sub
pop
mov
xchg
mov
and
xchg
mov
add
int3
dec
cmp
cmp
xchg
fldenv
jle
pop
push
call
stc
or
imul
(bad)
dec
adc
pop
std
xchg
cmp
loop
(bad)
aam
inc
xlat
pop
fiadd
pop
test
jno
or
aam
mov
sbb
cld
popf
jbe
cmp
jo
push
or
push
dec
inc
or
lods
add
xchg
fiadd
mov
adc
mov
rcl
ret
push
sar
sbb
cdq
mov
sub
(bad)
in
retf
cmp
mov
aam
pop
sahf
retf
arpl
mov
repz
in
in
imul
icebp
mov
(bad)
push
inc
dec
aad
das
mov
outs
shl
push
jmp
dec
mov
or
jecxz
std
sbb
arpl
push
shl
sub
imul
pop
je
in
mov
mov
push
or
lahf
shl
mov
mov
popa
imul
ds
shl
xchg
aam
mov
cmp
push
xor
movs
ins
push
lock
mov
ror
jo
out
push
push
inc
iret
dec
or
or
sub
int
es
sbb
enter
(bad)
mov
les
xchg
(bad)
bound
cmps
add
mov
dec
into
adc
outs
push
add
adc
in
scas
in
loope
out
lahf
xchg
pop
adc
scas
sbb
(bad)
adc
jno
(bad)
test
cmps
xchg
retf
mov
jmp
sbb
scas
dec
fisttp
push
int3
cmp
int
dec
mov
mov
shr
sbb
sub
adc
dec
pop
jo
cld
sub
dec
retf
xor
into
sub
adc
stos
push
push
js
push
mov
cmp
out
jge
add
push
jae
arpl
pop
jmp
cwde
add
and
loope
es
pop
bound
mov
call
add
adc
sub
mov
xor
xchg
adc
mov
push
mov
std
adc
inc
scas
push
hlt
push
iret
(bad)
cli
inc
imul
inc
mov
stc
xchg
add
mov
int3
lods
and
sub
repz
dec
fdivr
cmps
and
xchg
xchg
movlhps
dec
out
outs
(bad)
mov
adc
inc
out
test
out
and
pop
sbb
adc
sbb
add
(bad)
sub
stc
pop
add
xchg
cdq
neg
or
(bad)
lock
jb
mov
scas
jno
pop
dec
dec
cmp
or
xor
and
xor
ret
out
jmp
sar
push
int3
scas
(bad)
mov
call
mov
sub
dec
test
jle
push
iret
cli
loopne
mov
cmps
jge
add
inc
cli
or
int3
push
out
in
jecxz
inc
cmovp
imul
shr
and
jb
dec
test
add
out
mov
movs
sub
cmp
push
xchg
jns
sub
inc
pop
out
clc
js
loop
repnz
mov
adc
lds
adc
or
fld
fwait
hlt
repz
test
adc
mov
and
mov
mov
stos
test
cld
out
fs
adc
jne
xchg
pop
rol
enter
dec
imul
pop
add
pop
(bad)
fidiv
mov
das
retf
push
push
xor
jnp
mov
retf
std
adc
outs
mov
mov
js
cdq
cmp
xrelease
xchg
xchg
add
lock
jb
fadd
push
shr
xchg
test
cli
test
mov
rol
stos
sub
mov
inc
cdq
jle
pop
cdq
add
(bad)
xchg
sahf
call
push
es
mov
mov
or
movs
push
and
bound
mov
sub
sbb
adc
mov
cmp
rcl
mov
jae
mov
fwait
jl
and
xchg
cmp
icebp
jmp
pop
xchg
mov
push
gs
das
mov
xor
or
ret
mov
nop
shl
cmp
mov
inc
inc
sbb
cmps
scas
cdq
sub
xor
hlt
sub
xchg
mov
pop
imul
das
je
lock
out
xchg
inc
ds
mov
and
ds
inc
outs
mov
gs
repz
adc
adc
dec
sbb
movs
scas
cmc
mov
or
ss
(bad)
mov
(bad)
cmp
popa
cld
dec
mov
add
jb
(bad)
adc
mov
push
dec
xlat
mov
inc
mov
ret
ret
fwait
shr
xor
icebp
inc
add
mov
pand
bound
loop
mov
retf
test
fstp
xchg
and
sbb
lods
shl
dec
loope
and
imul
call
cld
mov
or
ins
ja
jbe
(bad)
fnstsw
add
fmulp
imul
ficom
mov
or
ja
pop
scas
mov
das
mov
mov
sub
mov
jmp
and
mov
xor
push
cli
add
add
or
out
pop
mov
jp
fmul
adc
pop
loope
outs
pop
fwait
test
push
mov
mov
mov
daa
ror
or
in
lea
je
repz
mov
out
ins
cmp
pop
dec
add
push
test
(bad)
and
xor
xchg
not
call
test
mov
retf
fcom
ret
mov
jae
push
ja
jne
jge
ret
daa
in
pop
(bad)
das
ss
retf
push
dec
mov
add
cmps
rcl
mov
dec
pop
and
jnp
out
mov
jg
add
cdq
call
add
jne
sub
cmps
xor
mov
ins
fnstcw
lods
mov
add
jbe
loop
pop
jl
mov
xor
cli
xlat
sbb
in
fs
mov
xchg
scas
int
mov
es
jbe
sub
mov
cmp
out
mov
cmps
adc
xor
push
mov
dec
call
dec
adc
repnz
jle
xor
aas
movs
jns
mov
push
outs
cmps
data16
call
pop
jge
imul
mov
shl
push
loope
repnz
and
(bad)
mov
sar
adc
test
stos
adc
gs
rcr
pop
ret
xor
mov
mul
push
call
retf
adc
ins
outs
sub
pop
lock
in
sub
in
pop
pop
mov
mov
icebp
pop
scas
retf
out
retf
mov
int3
popa
push
pusha
mov
mov
push
pusha
aaa
or
xor
xor
pop
out
test
jl
and
loopne
fild
daa
xor
loopne
xchg
and
sub
jbe
cmp
out
and
cld
pop
sub
sbb
mov
imul
fwait
fs
das
push
pop
cwde
sbb
or
add
fbld
fild
outs
inc
test
pop
sub
xor
lahf
pop
mov
leave
popa
movs
jg
ror
aas
jnp
ins
cmp
fmul
rcr
sub
call
or
pop
dec
out
call
leave
imul
arpl
mov
ss
add
mov
out
stos
(bad)
mov
xchg
xchg
(bad)
push
enter
repz
cmps
push
or
hlt
je
adc
dec
mov
repnz
cmp
fwait
(bad)
popf
or
inc
sub
int
pop
dec
out
nop
pop
jns
btr
sbb
jo
stos
clc
inc
daa
outs
or
call
mov
dec
ret
movs
ret
lods
fwait
dec
and
push
add
mov
retf
fwait
loopne
inc
loopne
lods
neg
mov
ins
push
push
add
xchg
lahf
adc
cmp
lea
dec
hlt
mov
fmul
jae
retf
test
push
pushf
pop
(bad)
ror
not
call
adc
ins
mul
push
add
in
shld
push
test
xchg
ds
sbb
dec
je
sahf
mov
push
repz
(bad)
and
pop
cmp
in
adc
and
jb
cmp
or
jp
enter
fs
xchg
loope
dec
scas
xchg
mov
shr
xor
aad
mov
dec
jne
ud2
inc
int
fst
mov
mov
mov
aad
mov
lds
xor
(bad)
out
jno
dec
out
mov
mov
fisttp
mov
push
adc
outs
scas
jbe
xor
fcomp
into
xchg
clc
sbb
cmps
jnp
hlt
sub
jl
into
call
push
and
scas
and
clc
jmp
lods
mov
rcr
ss
rcl
mov
jo
out
out
jo
pop
into
pop
add
or
xor
int3
adc
cmp
leave
jmp
push
and
jne
sbb
mov
ror
ja
inc
mov
jnp
mov
(bad)
scas
pop
xchg
xor
lahf
jg
outs
aaa
scas
ret
mov
(bad)
xor
cld
into
(bad)
xor
aas
pop
sahf
xor
cs
xor
adc
lock
loopne
div
push
or
shl
ds
test
mov
cmp
call
dec
aaa
sti
pop
jb
pop
addr16
ret
adc
dec
fadd
xchg
pusha
jmp
jmp
fs
or
inc
es
int
or
stos
or
pusha
jp
test
adc
fwait
movs
lock
mov
or
je
lock
inc
enter
xor
pop
add
leave
cdq
inc
leave
mov
and
or
(bad)
push
stos
mov
jmp
mov
add
arpl
sbb
popa
repz
or
dec
or
clc
inc
cmp
ror
mov
retf
(bad)
fadd
outs
into
dec
stc
dec
sbb
inc
imul
aad
mov
adc
xor
add
cmp
ins
popa
pusha
loop
in
xor
and
shl
jmp
popa
(bad)
inc
cmps
push
jmp
mov
call
jl
mov
gs
and
or
fwait
mov
or
jae
(bad)
and
inc
stos
mov
lods
bound
mov
dec
out
or
test
into
xchg
xor
jne
pop
fdivr
xchg
es
scas
xchg
dec
add
jl
in
cmc
jl
fistp
add
jns
mov
pop
cmp
enter
fcom
call
cmp
dec
scas
jmp
push
ficom
and
xchg
enter
xlat
ret
iret
mov
fbld
jp
nop
fs
push
mov
or
sti
adc
(bad)
jmp
sub
and
cdq
push
add
out
and
cmp
pusha
ds
xlat
xchg
std
push
fwait
pop
dec
(bad)
mov
dec
mov
scas
push
dec
fnstcw
sub
repz
mov
lahf
and
dec
inc
pop
mov
neg
jg
jl
imul
lods
jg
or
addr16
repnz
cmp
div
fcmovu
inc
mov
add
cmp
and
into
fld
mov
cmp
lds
or
std
and
push
lea
cmp
(bad)
imul
mov
dec
adc
pusha
dec
xor
push
imul
mov
add
sar
mov
jae
fsubr
lahf
dec
stos
dec
imul
bound
shl
dec
mov
and
fmulp
xchg
sbb
jae
push
test
les
mov
jle
fnsave
jmp
sahf
mov
imul
pop
sbb
xor
shr
outs
jbe
jg
xor
mov
aad
adc
shl
sbb
add
sbb
mov
mov
jns
xor
enter
pusha
icebp
cdq
sbb
in
or
mov
iret
repnz
hlt
pop
lods
push
inc
mov
sub
ret
sbb
mov
add
add
cs
in
inc
cli
xchg
jbe
xchg
imul
outs
xor
add
jge
add
pop
cmp
xlat
inc
push
push
and
jl
mov
push
mov
mov
ficomp
imul
pop
int3
lods
sbb
xor
in
inc
dec
leave
add
xlat
mov
and
mov
and
mul
pop
jb
bound
fistp
daa
adc
ror
and
(bad)
pusha
fisub
cmp
jmp
ret
mov
mov
add
mov
push
punpckhwd
dec
daa
les
in
pusha
ins
dec
mov
sbb
test
pop
mov
mov
out
or
sub
cdq
in
call
je
stos
cwde
push
inc
mov
push
mov
lahf
cmp
jle
ds
mov
or
imul
xchg
sti
test
sub
mov
in
inc
loop
inc
or
fdiv
outs
inc
adc
icebp
mov
pop
push
clc
adc
scas
and
int
ja
rcr
loopne
in
mov
(bad)
jo
les
pop
shl
xchg
inc
test
cmp
jle
and
aam
mov
sbb
mov
mov
push
adc
mov
ja
scas
stos
mov
test
sub
xchg
or
xchg
jmp
and
pop
popa
js
gs
add
retf
ffreep
call
test
inc
mov
mov
jge
stos
out
xchg
(bad)
enter
bound
test
sub
xor
dec
xchg
call
loope
pop
ss
lea
inc
add
iret
mov
xlat
lea
pop
out
popf
jnp
lods
cmp
xchg
stos
jmp
sbb
fisub
inc
xchg
jmp
mov
pop
repz
jns
je
stos
fwait
xchg
stos
adc
push
jp
sbb
icebp
and
mov
and
mov
mov
jl
inc
repz
arpl
icebp
add
adc
cmp
mov
and
loopne
arpl
(bad)
retf
jae
inc
xor
push
and
adc
jmp
adc
imul
xchg
sbb
test
push
add
imul
mov
pop
std
inc
push
and
lahf
push
xchg
cmc
dec
out
add
jmp
shr
cmp
mov
mov
xlat
call
jns
sbb
retf
leave
and
pop
(bad)
mov
es
bound
xor
and
mov
dec
call
xor
add
adc
loope
pushf
xor
pop
fwait
pop
fs
adc
xor
stc
add
mov
sub
cwde
clts
pop
sar
sbb
push
lock
or
retf
movs
scas
xchg
(bad)
test
cmp
es
xor
repnz
xor
jge
lods
dec
adc
push
dec
xchg
and
push
ja
xor
sbb
pop
std
test
xchg
cli
or
mov
adc
dec
push
pop
data16
(bad)
call
shr
(bad)
ins
dec
in
int
stos
leave
push
xchg
push
(bad)
cmp
sbb
sub
or
adc
xor
push
(bad)
aam
pop
mov
hlt
ret
je
or
pop
xchg
or
shl
adc
in
pop
outs
cmp
cmps
imul
sbb
adc
test
mov
test
loop
jo
adc
test
hlt
sbb
mov
inc
das
in
stos
xchg
sub
pop
neg
pusha
push
shr
push
call
sahf
sbb
das
add
fimul
mov
jp
scas
arpl
cwde
hlt
scas
sar
or
aas
fsub
xchg
scas
push
ja
pop
and
pop
xchg
movs
mov
add
ret
jecxz
cwde
push
xchg
ret
clc
bound
je
mov
add
or
in
leave
or
mov
xchg
pop
jle
scas
xor
mov
mov
or
(bad)
outs
cdq
xor
xchg
adc
or
loop
js
cli
sbb
push
iret
iret
loopne
push
or
or
mov
sbb
push
jmp
into
imul
retf
repz
mov
jl
ins
jmp
xor
stos
pop
in
mov
addr16
fwait
mov
ret
and
cmp
call
sub
lock
adc
lea
fsubr
pop
or
ss
cmp
rcr
cmps
call
mov
adc
scas
(bad)
push
inc
ja
out
mov
pushf
xor
inc
pop
into
pop
sub
mov
sbb
mov
(bad)
fdivr
pusha
jge
les
repnz
dec
sbb
xchg
sbb
mov
xor
jae
adc
inc
lds
mov
add
rcl
loope
and
clc
cdq
fcomip
loope
movs
rcl
xchg
imul
aad
pop
mov
into
adc
sbb
ja
test
add
cs
ret
mov
cmc
mov
mov
mov
sti
loop
scas
(bad)
cmc
scas
xor
and
mov
inc
or
sub
and
pusha
scas
loop
popf
sbb
je
xchg
sti
(bad)
mov
fstp
pop
sub
push
and
fwait
(bad)
jne
and
out
or
fisub
inc
pop
js
enter
mov
mov
mov
mov
mov
cmps
iret
pop
pop
cmp
dec
int3
push
(bad)
rol
or
sar
out
dec
ss
sbb
test
int
fld
ja
icebp
sbb
in
jmp
push
clc
and
jne
mov
dec
and
sub
icebp
dec
mov
jge
lea
mov
dec
xchg
bound
jnp
lods
in
add
inc
sahf
aaa
retf
fild
shl
call
xor
mov
jnp
movs
adc
or
jne
ds
cli
xor
test
push
cmp
xchg
push
sti
sbb
xchg
fcomp
jmp
add
outs
pop
scas
call
push
mov
in
(bad)
mov
push
or
sbb
es
in
and
cmps
int3
dec
add
inc
dec
mov
sub
push
and
sbb
sub
test
push
add
mov
(bad)
hlt
jmp
loop
jb
and
add
repnz
cdq
call
arpl
pop
mov
inc
cmps
mov
retf
fucom
pushf
outs
or
pop
int3
push
cmps
loope
push
add
jge
mov
sbb
xor
dec
outs
xchg
imul
outs
aaa
imul
dec
xor
pop
or
stc
jmp
xchg
aam
lahf
neg
mov
std
jno
cdq
movs
call
int3
push
xchg
inc
push
or
scas
mov
fidivr
js
fdiv
aaa
xlat
fisub
mov
inc
jns
cmp
je
ror
pop
js
sbb
push
sbb
jl
push
outs
daa
jae
mov
hlt
and
mov
sbb
inc
push
jno
neg
out
out
jmp
imul
dec
int
push
test
xchg
mov
mov
push
retf
(bad)
pop
dec
sub
push
jle
inc
jecxz
fwait
sahf
pushf
frstor
push
adc
cwde
push
push
pop
scas
jbe
stos
mov
cmp
pop
or
clc
sub
add
push
dec
ja
rol
ins
hlt
xchg
or
or
jg
(bad)
rcr
sbb
in
ins
mov
(bad)
fild
lds
push
or
inc
jbe
(bad)
jns
push
add
mov
jb
dec
stos
ins
ja
dec
jge
lea
mov
cs
cmps
push
mov
jg
cmp
mov
mov
(bad)
pop
inc
mov
push
jae
ret
jecxz
push
add
mov
call
outs
mov
sti
scas
ins
pusha
les
sti
nop
push
inc
and
stos
mov
or
ds
sub
pusha
or
xchg
push
push
and
daa
xor
pop
mov
(bad)
and
mov
jp
pop
cmp
scas
jbe
xor
pop
daa
je
(bad)
sub
cmp
pop
jns
push
or
call
or
adc
aam
gs
outs
adc
push
jno
and
aam
sub
mov
pop
inc
retf
clc
hlt
cdq
or
repz
scas
retf
push
push
in
mov
mov
push
ficomp
xchg
shl
and
dec
cmp
sbb
jl
icebp
pop
push
ss
mov
push
ud1
and
mov
sbb
and
jmp
mov
call
pop
cmps
mov
add
fsub
dec
cmp
(bad)
std
fisubr
das
mov
mov
scas
xchg
test
in
ja
imul
fistp
out
test
push
bound
(bad)
mov
(bad)
xchg
test
sahf
fwait
ins
es
sub
fnsave
int3
daa
adc
inc
test
cld
jge
mov
xor
sub
and
and
stos
jmp
(bad)
jl
mov
cmp
sub
push
stos
sub
xor
das
or
sbb
or
fsub
xor
mov
xchg
adc
xchg
call
pop
or
fcmovu
lds
push
sti
mov
or
cmp
popa
repz
mov
outs
sbb
inc
mov
out
or
or
sbb
add
movs
rcl
xchg
push
addr16
push
lds
pop
adc
and
push
ror
and
pop
fistp
and
add
xor
push
clc
pop
int3
retf
cmps
inc
sub
lock
out
rol
sbb
sub
mov
repnz
inc
out
mov
test
retf
das
mov
aad
jns
(bad)
in
movs
mov
adc
loopne
and
dec
push
ds
xor
inc
xor
xor
cmp
add
mov
(bad)
dec
popa
xchg
stos
mov
mov
cmp
fdivrp
ret
mov
lea
fneni(8087
out
xchg
popa
daa
jnp
sub
inc
add
lods
push
xchg
xchg
xor
adc
cmp
and
and
mov
hlt
sti
mov
pop
cmp
inc
pop
lock
in
mov
out
cmp
loop
sbb
sar
mov
daa
(bad)
out
or
push
movzx
leave
in
or
dec
sbb
jmp
jb
lods
test
push
cli
ss
mov
mov
(bad)
fst
ds
add
xor
sub
fwait
or
sbb
or
cmp
(bad)
adc
std
lds
dec
mov
inc
retf
pop
xor
mov
xor
pop
sahf
out
pop
sub
pusha
add
icebp
cmp
inc
sbb
lds
movs
mov
or
lock
jnp
loop
xlat
sbb
xor
push
add
cdq
outs
(bad)
cmps
cmp
sti
mov
icebp
je
jns
cmps
sbb
push
or
std
mov
pop
inc
sti
mov
pushf
call
xchg
shl
mov
idiv
fcom
fs
or
xor
inc
bound
mov
sub
(bad)
xchg
cmp
push
jno
lods
cmp
mov
inc
imul
pop
pop
dec
push
inc
aas
stc
mov
movs
jo
push
sub
int3
adc
inc
jecxz
arpl
xor
repz
xlat
retf
xor
xlat
popa
mov
cmp
push
mov
popa
out
je
ins
ja
or
xchg
call
adc
mov
(bad)
loope
in
pop
push
sub
cwde
xchg
clc
push
das
add
mov
dec
mov
cmp
or
call
sub
mov
inc
xor
in
imul
add
mov
fistp
mov
jmp
add
(bad)
push
pushf
push
(bad)
(bad)
xchg
ins
shl
inc
add
mov
and
stos
cmp
and
sub
fwait
rol
inc
test
mov
push
xchg
shl
jg
neg
loop
or
cli
scas
neg
lods
cdq
shl
adc
cmp
or
sbb
fadd
inc
add
mov
mov
fst
pop
int3
test
cmp
std
xchg
sub
bound
es
cli
jp
or
stos
add
adc
ins
std
adc
(bad)
cmp
xor
jl
push
mov
fadd
pop
push
pop
shl
push
or
inc
sti
ror
pusha
lahf
sbb
sbb
daa
pop
fs
adc
cmp
mov
fwait
xchg
fist
enter
jo
sbb
in
xchg
pusha
imul
je
pusha
xchg
loopne
jae
movs
aaa
push
xor
jmp
fstp
or
ja
les
jns
adc
enter
inc
ins
ja
mov
and
test
cmp
popa
and
xchg
and
sbb
mov
aad
dec
adc
movs
lods
sti
loop
nop
jecxz
rcr
jle
jecxz
pushf
adc
cwde
ja
xor
pop
aaa
fxch
sub
retf
(bad)
sbb
jnp
movmskps
mov
mov
addr16
rcr
push
jl
push
cmps
retf
mov
or
mov
push
mov
aas
pushf
push
and
in
jle
lods
or
dec
push
rol
mov
gs
fisubr
adc
loopne
xlat
xor
sbb
addr16
push
sub
jge
jbe
jmp
lods
mov
mov
pop
(bad)
xor
test
(bad)
(bad)
cvtdq2ps
mov
ror
dec
scas
mov
call
test
cwde
fmul
ins
and
sub
stc
ret
mov
popf
pop
fidiv
movs
gs
int
stc
sub
ficom
nop
shr
test
loop
add
jnp
xchg
fwait
sub
mov
mov
scas
(bad)
cmp
ins
add
test
push
sub
repz
aad
mov
(bad)
loop
cmp
pop
test
sbb
push
test
inc
retf
xchg
lock
iret
sti
int
mov
xchg
cmp
rol
sbb
and
fwait
pop
ret
mov
retf
jb
sub
gs
push
push
aad
pusha
stos
adc
ins
iret
out
bound
aaa
xchg
scas
sti
mov
icebp
stos
and
adc
arpl
js
cmp
call
ss
sahf
mov
dec
or
bound
lock
pop
push
(bad)
mov
xchg
jmp
lock
dec
inc
push
fwait
popf
fnstenv
jmp
pop
cmp
xchg
xchg
popf
inc
mov
cmp
dec
enter
mov
sub
scas
mov
adc
pop
aas
imul
out
ins
mov
mov
adc
pop
push
bound
test
inc
xor
out
dec
lods
cdq
inc
mov
fsincos
jo
bound
retf
jne
mov
sub
jnp
jae
cmps
push
push
scas
(bad)
call
jo
cmp
hlt
pop
shr
fidivr
in
leave
add
sbb
dec
iret
xlat
pop
movs
rol
stos
cli
mov
fwait
lea
sub
xor
mov
ds
jmp
sbb
sub
inc
test
repnz
mov
loop
pop
cld
and
push
stc
mov
mov
and
xchg
xchg
mov
outs
adc
jg
xor
jmp
js
je
pop
(bad)
lahf
pop
mov
into
lds
(bad)
add
repnz
and
js
shr
leave
out
adc
daa
mov
sahf
cmp
mov
add
and
adc
fsub
(bad)
mov
lahf
xor
cmp
sti
or
jecxz
(bad)
mov
push
mov
cs
fwait
imul
outs
or
repz
jno
cmp
mov
outs
inc
pop
mov
jbe
repz
test
fild
call
popf
dec
pushf
jb
mov
sti
cmp
cmp
ins
dec
push
mov
aam
ja
out
xchg
loope
pop
loopne
jbe
mov
std
adc
adc
inc
mov
add
mov
xchg
fdiv
sub
mov
pop
push
aam
loop
jno
cmps
int3
mov
retf
jae
or
cmps
sub
test
xor
add
and
sub
mov
xor
cmp
jle
enter
(bad)
stc
cdq
test
mov
inc
ret
inc
pop
retf
mov
outs
jbe
and
rcr
ror
push
das
cmp
jns
cmps
and
fadd
fisttp
mov
inc
shl
and
add
or
aaa
sbb
in
pop
push
jb
pop
popf
jg
xchg
xor
icebp
jmp
sti
(bad)
jl
outs
inc
icebp
das
fld
sti
(bad)
out
in
mov
mov
sbb
mov
xor
popa
sbb
sbb
jge
call
movs
sbb
dec
out
iret
loop
test
out
xchg
call
push
pop
push
call
xchg
lock
push
out
repz
xor
(bad)
adc
dec
cmps
jp
fwait
xchg
or
stos
mov
inc
sub
test
bound
out
inc
jecxz
mov
mov
and
out
cld
jbe
fisubr
out
adc
test
pusha
jo
mov
xor
mov
les
js
stc
rcr
retf
loope
xor
sahf
les
bt
sti
mov
dec
ds
in
sub
stos
mov
hlt
scas
cmp
ins
jns
push
or
adc
push
jge
mov
mov
mov
push
into
gs
shl
push
mov
pop
mov
(bad)
adc
mov
nop
jmp
mov
ret
loope
dec
cmp
les
sub
jmp
inc
js
shr
add
xchg
xor
pop
add
inc
in
mov
int3
enter
js
xor
adc
fisub
and
mov
add
call
and
lahf
or
es
jo
clc
mov
stos
bound
lods
imul
in
push
stc
aad
jl
fidiv
sbb
xor
jmp
adc
sbb
pop
movs
dec
int
and
cmp
call
push
in
aaa
aaa
xor
pop
add
xchg
stos
add
jl
or
sbb
mov
adc
enter
sahf
and
lods
and
and
dec
out
and
test
and
cdq
aaa
ds
push
nop
cmps
test
rcr
mov
push
jne
movs
push
xchg
cmp
dec
sar
pop
mov
test
cmp
xchg
aam
jge
cmc
push
movs
js
cmp
stos
dec
(bad)
mov
stc
sbb
jg
sbb
sub
int
test
jns
inc
(bad)
or
in
lahf
sub
sub
or
push
push
test
loop
pop
xchg
add
pop
ss
out
xchg
mov
les
imul
test
mov
xlat
inc
int
lds
adc
fdivr
or
xor
or
das
shl
jne
inc
jbe
sti
inc
xchg
std
and
js
jl
mov
int
jg
jbe
pop
test
ret
clc
pop
adc
inc
jne
inc
jnp
and
jle
sub
add
jbe
sbb
pop
imul
adc
inc
stos
mov
imul
movs
fs
fsubr
jg
iret
fnstsw
sub
push
cdq
fadd
push
inc
out
xchg
jp
xor
add
int3
pop
mov
icebp
fstp
mov
xchg
loopne
xor
xchg
lods
mov
stos
inc
sub
jge
ja
scas
mov
add
mov
add
shl
das
lock
stos
push
jecxz
in
pcmpgtw
jecxz
or
das
inc
movs
(bad)
fwait
cmp
xlat
pop
inc
cld
std
inc
xchg
inc
lods
imul
fsub
mul
pop
add
mov
push
push
xchg
cmp
adc
ret
rcr
add
cmp
pusha
dec
movs
dec
or
lods
call
jmp
inc
out
mov
ret
push
xor
and
xchg
stos
mov
fldcw
in
sub
ds
sbb
in
jno
aas
push
push
jp
les
xor
int
xor
add
js
push
push
lds
retf
add
push
push
dec
or
iret
jo
out
mov
test
mov
cmp
in
repnz
jmp
ins
test
inc
cmc
gs
es
or
push
les
dec
dec
pusha
inc
inc
pop
outs
ss
and
mov
pop
loope
imul
mov
sbb
dec
test
ret
pop
dec
push
cmp
mov
ror
cmp
dec
sti
in
aam
jmp
fwait
add
out
dec
mov
(bad)
pop
jae
xchg
cmp
retf
push
cmp
adc
add
dec
xchg
sbb
in
lea
(bad)
xor
daa
pslld
sub
push
push
push
push
sbb
xchg
pop
sub
adc
inc
jmp
(bad)
movs
hlt
cs
mov
out
iret
xchg
sahf
lods
cmp
mov
nop
push
cmp
push
enter
popf
pop
sub
xchg
sbb
fistp
jg
div
int3
mov
pop
shl
jl
xchg
loop
xchg
hlt
loopne
(bad)
mov
inc
sub
dec
addr16
les
fild
xchg
stos
out
cmp
push
or
ins
and
mov
mov
mov
mov
jmp
push
adc
mov
adc
adc
cmp
jg
pop
xchg
mov
cmp
sbb
cmp
mov
sahf
adc
pop
lods
pop
aas
adc
push
mov
aas
aaa
or
cwde
fbstp
dec
rol
mov
test
(bad)
jl
aaa
fistp
outs
mov
int
mov
cdq
xchg
(bad)
cld
push
mov
rcr
fidiv
xlat
push
cmps
adc
cmp
imul
add
sar
(bad)
gs
and
push
cmc
fcmove
(bad)
push
es
add
bound
(bad)
push
cmp
inc
push
gs
pop
jne
hlt
mov
pop
or
add
pop
rol
cmc
ins
mov
push
push
mov
or
call
xchg
mov
xchg
xchg
mov
cmp
cmp
cmps
jae
cmps
jo
cmp
mov
mov
cmp
push
hlt
mov
lea
jns
aas
and
inc
ret
ja
jbe
movs
xor
mov
cs
jmp
loop
pop
pop
dec
stc
movs
addr16
jb
call
cli
cmp
jb
push
fiadd
scas
jo
add
and
mov
jg
ret
jge
add
setl
dec
push
mov
cmp
out
xchg
ins
xchg
inc
ja
imul
lods
test
push
jno
xor
dec
enter
inc
out
push
push
aam
aam
div
popf
mov
mov
fbstp
jp
mov
fs
aam
repz
jmp
jg
in
leave
out
enter
mov
loope
inc
add
lahf
and
aas
mov
out
jns
sub
jp
rcl
test
int3
sub
cmp
outs
dec
cdq
mov
ins
mov
mov
fisttp
ja
scas
test
inc
and
jl
jbe
ja
dec
xlat
push
cli
call
(bad)
pusha
lock
push
popa
lea
xchg
inc
xlat
mov
sub
hlt
fild
push
sbb
push
(bad)
loope
xchg
fwait
data16
(bad)
repnz
movs
push
(bad)
iret
dec
or
imul
icebp
add
xlat
sub
out
aam
xor
movs
out
adc
stc
gs
adc
push
test
cmp
rol
sbb
push
int3
jae
ds
mov
ds
xchg
jns
stos
cmp
sahf
rcr
dec
stc
sub
scas
cmp
dec
push
stos
and
jb
push
les
fist
jecxz
je
push
mov
pop
push
cmp
dec
mov
xor
sub
in
pop
and
mov
mov
pop
cmp
push
div
cdq
push
test
dec
dec
(bad)
in
call
test
push
and
leave
jno
sbb
mov
cmp
mov
inc
pop
xchg
and
or
sar
out
mov
cmp
mov
add
xor
je
sub
scas
inc
sub
fsub
(bad)
repnz
addr16
sub
sub
nop
mov
stc
fsubr
test
in
pop
inc
add
mov
dec
(bad)
bound
add
cmp
sbb
inc
repz
in
lds
fdivr
jo
loopne
sub
sbb
xchg
mov
mov
jmp
call
rol
jmp
imul
xchg
mov
dec
cmp
jmp
es
push
dec
add
dec
not
mov
out
mov
pop
sub
ss
(bad)
into
pop
stos
fucomp
pop
add
into
sbb
inc
std
jecxz
movs
jl
sti
in
mov
or
test
or
and
add
pushf
cmp
aaa
lds
(bad)
push
pop
xchg
mov
and
les
mov
sub
in
lods
mov
jge
test
mov
into
loopne
clc
enter
xchg
sbb
xchg
sbb
cmps
mov
retf
push
leave
sbb
std
push
cdq
ins
cwde
aas
imul
or
push
and
pop
repz
and
lock
(bad)
sbb
jecxz
mov
loop
outs
dec
inc
lock
jmp
int3
jle
inc
addr16
cld
xchg
pop
push
repz
push
in
data16
js
in
or
xchg
aas
mov
stos
sub
inc
xor
clc
cs
sti
mov
cmp
fisttp
in
cmp
mov
sahf
adc
jb
pop
pop
ficomp
addr16
inc
sti
int3
(bad)
pop
fnstsw
cmp
imul
xchg
gs
loope
(bad)
xchg
fnstcw
in
dec
clc
sbb
repz
stos
mov
cmp
test
sub
cli
retf
add
mov
cld
add
fwait
sbb
pop
out
into
es
jns
jbe
mov
sbb
sbb
sub
test
inc
gs
jb
cli
in
arpl
stc
pushf
rcl
cmp
mov
fild
pushf
pop
pop
mov
mov
xchg
or
fstp
mov
push
ja
and
mov
loop
sbb
aam
xchg
and
(bad)
pop
dec
pop
ret
int
and
mov
popa
sbb
test
nop
bound
call
adc
push
mov
add
and
mov
pop
dec
cmps
add
mov
push
jecxz
int
fisubr
pusha
mov
(bad)
pop
dec
push
pop
xchg
mov
sub
je
out
and
in
or
test
scas
push
xor
repz
push
(bad)
call
call
adc
or
out
test
sub
xchg
aaa
jns
mov
rcl
add
(bad)
push
(bad)
pop
cmp
fild
popf
adc
inc
fistp
sub
jl
cmc
or
inc
cli
ss
cdq
inc
gs
adc
sbb
jns
pushf
gs
loopne
jae
or
or
jmp
and
jne
cmc
fs
fstp
ss
or
stc
xchg
pop
mov
scas
ds
push
mov
and
mov
ret
inc
and
jno
je
mov
push
adc
mov
pop
add
out
xor
xor
loope
mov
sub
retf
jecxz
cmps
movs
adc
inc
push
xchg
int
push
dec
mov
es
add
sbb
or
call
sahf
(bad)
hlt
mov
xor
sbb
sbb
outs
adc
outs
jns
xor
adc
fst
mov
mov
xchg
sahf
sub
jno
or
(bad)
aas
call
sahf
into
or
leave
in
sbb
add
or
test
xchg
(bad)
iret
scas
mov
(bad)
jmp
add
aam
test
jg
push
pop
out
outs
fsub
mov
test
rcl
retf
sub
or
inc
lods
int3
ret
ficomp
push
push
inc
(bad)
mov
sub
push
jno
(bad)
fnstsw
mov
lds
xchg
push
out
movs
ret
cs
cmp
mov
dec
or
mov
mov
or
push
push
int
or
in
adc
movs
test
add
add
arpl
xor
xor
or
cmc
and
xor
jmp
outs
xchg
(bad)
daa
ret
dec
or
fdivr
mov
push
xor
ret
sub
imul
or
mul
sub
push
cld
push
push
xchg
mov
lods
push
push
mov
icebp
mov
fnstsw
add
mov
inc
shl
retf
int
rol
fs
pop
lock
inc
pop
xchg
ins
gs
cmp
movs
stos
cmp
mov
and
lock
and
jmp
dec
inc
in
mov
push
mov
pop
imul
pop
shl
jecxz
push
inc
arpl
pop
adc
lds
mov
sbb
dec
and
pop
popa
ds
adc
push
arpl
jnp
adc
lahf
push
int
into
mov
pop
xor
ss
adc
call
mov
add
and
jl
jp
dec
adc
add
test
nop
cmp
cmp
inc
pushf
jecxz
xor
scas
mov
cdq
add
data16
icebp
pop
shr
nop
mov
ins
popf
pushf
dec
int
mov
mov
jbe
test
or
dec
popa
pop
nop
dec
jg
test
out
sub
push
movs
call
out
add
adc
inc
cmp
fmul
hlt
test
out
jb
int
adc
and
dec
cmps
adc
pushf
inc
in
mov
dec
das
adc
pop
js
ret
jge
push
stos
js
hlt
repz
xchg
popa
mov
inc
ret
repz
inc
push
imul
das
sub
call
js
call
push
cli
inc
in
jl
js
inc
sub
pop
inc
push
mov
or
xor
jg
sar
leave
push
and
aam
xlat
dec
inc
loope
sub
daa
jecxz
mov
jo
idiv
aaa
mov
sar
test
jp
retf
push
cli
xor
icebp
js
sub
lods
js
pop
mov
mov
fistp
(bad)
retf
and
jge
fcomp
xchg
push
and
sbb
inc
xor
cs
mov
sub
pop
jnp
je
jg
dec
xchg
mov
int
mov
cmp
sub
jl
sbb
xchg
cmps
push
aas
ss
xchg
inc
and
pop
add
popf
adc
ins
sub
inc
pop
add
add
push
ja
adc
gs
add
pop
xchg
dec
sbb
mov
adc
adc
push
out
popf
xor
mov
pop
jle
fcom
pushf
cmp
loopne
sub
adc
mov
in
fwait
lods
fmul
popf
sub
jle
cmp
icebp
sub
rep
mov
pop
sti
fmul
loop
jo
not
cmp
add
data16
and
push
cmp
scas
xchg
scas
mov
jo
mov
lock
sti
and
je
dec
dec
mov
xor
xlat
(bad)
and
sbb
xor
cmps
repnz
imul
fs
mov
inc
shr
mov
mov
add
sar
fcomp
aam
mul
out
retf
int3
push
dec
adc
outs
aad
ss
cmps
fnstcw
in
jmp
and
sbb
rcr
pop
push
out
js
imul
xor
pop
sub
add
jns
loope
fld
jbe
into
push
xchg
mov
mov
xchg
loope
xchg
adc
fcomp
sbb
hlt
ss
sbb
call
dec
jbe
das
xchg
test
popa
mov
mov
test
psrlq
or
push
test
test
repz
pop
(bad)
or
mov
std
add
pop
sbb
je
cs
pop
or
cmp
aaa
sub
outs
ds
adc
add
imul
xchg
movs
scas
inc
outs
inc
outs
ds
adc
sbb
dec
rcl
sub
pop
ja
jle
and
or
lods
push
pop
jbe
mov
ins
jl
jo
(bad)
cmp
mov
cmp
cmpxchg
xchg
dec
fwait
or
add
scas
lds
ss
arpl
data16
and
and
bound
mov
das
mov
jmp
test
pop
or
push
test
pop
jns
inc
lods
dec
sbb
mov
sbb
ins
push
lock
add
sbb
xchg
and
cmp
dec
or
bswap
int
popa
pop
dec
xchg
lds
stc
cmps
pop
xchg
push
xor
pushf
pushf
and
loope
mov
sub
mov
jns
test
fdivr
or
dec
call
aam
daa
test
fdiv
add
loopne
cmp
push
jl
iret
in
loope
test
in
inc
aas
in
dec
push
jnp
lds
inc
push
mov
int3
movs
repz
ret
cmc
(bad)
out
aad
or
rol
dec
les
and
or
std
push
mov
jle
fcmovnb
cmps
retf
add
sbb
jo
ja
and
popf
imul
mov
xor
and
pop
jnp
pop
jg
xor
cmps
iret
sbb
and
iret
in
cmp
bound
mov
leave
mov
hlt
dec
dec
pop
sbb
shl
pop
dec
pop
jmp
imul
push
push
inc
cmovb
arpl
iret
adc
enter
sub
add
fcom
xlat
retf
mov
xor
repnz
mov
ins
pop
inc
add
int3
fwait
sub
nop
cdq
adc
add
lds
sub
dec
pop
inc
std
mov
xchg
mov
adc
mov
retf
ds
and
popf
xor
scas
cmp
xlat
fst
inc
inc
lds
aam
cld
adc
cmp
(bad)
jno
or
sub
pop
mov
mov
xchg
std
cmp
(bad)
lock
loop
adc
call
(bad)
cmc
cmp
mov
xchg
cmp
fadd
inc
dec
mov
aaa
sbb
pop
into
push
dec
adc
call
xchg
pop
xchg
push
scas
cmps
pcmpgtw
push
fucomip
addr16
stos
ja
call
push
sbb
push
jge
clc
ret
pushf
cmc
int3
pop
adc
ret
xor
dec
pop
cli
mov
jp
add
inc
xchg
lock
adc
adc
ret
out
adc
add
xor
mov
push
ret
pushf
or
push
push
fs
jbe
rol
stos
adc
cmc
leave
stos
call
inc
adc
mov
inc
(bad)
lock
fxch
sahf
sub
or
push
mov
movs
(bad)
pop
stos
mov
call
inc
sub
mov
xor
data16
xlat
dec
xor
aam
ror
ins
dec
inc
movs
adc
pop
jecxz
into
into
out
ror
inc
dec
clc
cdq
pop
xchg
mov
retf
sahf
sti
js
sti
lahf
jb
loop
repz
xchg
movs
jl
adc
loop
imul
add
shr
or
sbb
jno
outs
ret
int
mov
gs
dec
pop
out
repnz
mov
iret
cmps
jp
or
sbb
outs
jne
add
xor
jmp
inc
adc
jo
add
sbb
sub
mov
mov
push
sub
call
sub
ss
pop
xor
sbb
xor
ds
cmp
hlt
es
cmp
pushf
add
call
mov
jle
add
dec
test
into
or
xchg
int3
cmp
outs
mov
mov
cmp
fst
mov
sbb
pop
lods
bound
fmul
fld
ret
mov
(bad)
push
inc
sbb
test
pop
aad
pop
push
leave
(bad)
cmp
push
sbb
cwde
ja
(bad)
sub
lahf
cli
mov
push
pop
push
jle
(bad)
dec
stc
dec
dec
xor
icebp
sbb
push
xor
push
jns
scas
mov
outs
out
out
sub
mov
push
(bad)
ficom
xor
and
out
scas
mov
fistp
retf
ret
jl
xor
gs
mov
mov
mov
dec
sbb
ja
nop
mov
adc
ret
mov
js
dec
cdq
fs
cmp
mov
mov
push
outs
loop
neg
jg
or
jle
mov
dec
mov
push
cmp
push
ret
lds
cs
push
dec
cmp
dec
inc
inc
inc
adc
xor
mov
ret
loopne
ficom
cmp
fs
adc
mov
sti
ret
pop
stos
fdivr
std
fisttp
repnz
mov
inc
push
mov
jno
or
inc
in
xchg
cmp
cmps
arpl
pushf
inc
jbe
pop
mov
inc
pop
push
or
push
or
jp
cmp
mov
pop
inc
pop
arpl
add
adc
jne
cmp
xchg
jecxz
jns
lea
adc
adc
stos
loopne
xor
mov
or
shl
jp
mov
rcl
sbb
ror
pop
test
sbb
cmps
jmp
cmp
push
cmps
add
sub
mov
lahf
loop
out
mov
fidiv
cmp
sub
xchg
inc
dec
sbb
mov
movs
pusha
xchg
xor
int3
inc
mov
adc
inc
pop
cmp
push
push
pop
aad
xor
(bad)
xchg
mov
call
adc
push
call
stos
xlat
mov
and
mov
je
in
mov
ret
xchg
cwde
popf
and
rol
and
retf
mov
add
xchg
mov
push
out
xor
mov
ds
in
sbb
push
or
xchg
mov
mov
ins
ret
jb
into
sub
cmp
es
rep
mov
xor
aam
jns
sbb
push
not
or
or
in
adc
sub
ins
mov
cmp
(bad)
movs
inc
enter
xor
mov
mov
inc
sbb
in
sbb
retf
dec
ss
repz
and
mov
or
fwait
sbb
jmp
jmp
scas
pop
push
pop
lock
cmp
xchg
push
jmp
push
sub
mov
add
retf
fldcw
stos
mov
mov
bound
mov
int3
dec
dec
les
cmp
popa
dec
out
inc
xor
cli
mul
jmp
(bad)
popf
inc
xchg
jmp
sahf
mov
call
xor
inc
dec
stc
rcl
and
mov
das
and
ins
mov
shl
mov
cmp
ss
xor
fiadd
std
mov
adc
jno
inc
(bad)
adc
mov
xor
inc
sub
movs
movs
inc
and
push
fs
jne
jg
pop
sbb
lea
push
push
(bad)
jb
jbe
add
into
std
cmc
pop
test
out
fucomip
cmp
(bad)
lock
lahf
adc
push
or
inc
cli
aad
jnp
push
add
xchg
push
cmp
and
pop
es
cmp
mov
sbb
outs
jl
fisttp
and
mov
in
jl
daa
pop
xlat
leave
sbb
add
daa
ins
repz
dec
jle
leave
ror
cs
iret
int
mov
adc
pop
lahf
xchg
adc
dec
leave
retf
iret
sbb
push
sub
inc
int
push
not
retf
or
daa
xchg
push
or
adc
sub
les
data16
adc
ins
cli
int3
ret
inc
xchg
or
inc
sahf
loopne
in
fst
push
pusha
pop
loopne
add
dec
xchg
mov
imul
jne
push
pop
xor
add
sub
cld
pop
popf
in
mov
add
daa
xchg
cmp
jp
sub
loopne
adc
(bad)
mov
adc
adc
inc
loopne
into
stc
jle
(bad)
scas
call
and
adc
xor
or
test
sub
mov
fs
cmc
sub
or
jl
nop
push
call
sbb
mov
cmps
in
ror
retf
xchg
mov
add
cs
retf
fld
mov
sub
inc
and
mov
in
xchg
imul
pop
pop
xchg
aad
pop
pop
retf
pop
xor
test
fcom
movs
fbstp
xchg
mov
mov
mov
out
mov
popa
(bad)
das
pop
sar
repnz
mov
rol
pop
or
adc
mov
stos
dec
add
test
cmp
cdq
jo
out
adc
aas
sub
xchg
adc
cld
or
dec
movs
xchg
pop
or
repnz
jecxz
push
jecxz
test
int3
jp
xor
mov
inc
xchg
ins
cmps
(bad)
icebp
sbb
pop
xor
je
in
rol
idiv
add
test
or
pop
cmps
cwde
pop
push
mov
sbb
push
mov
call
mov
test
sbb
test
movs
xchg
in
pop
jo
adc
sub
cli
add
cwde
add
and
and
call
or
ds
mov
and
and
cmps
jbe
sub
outs
test
dec
movs
ror
popf
inc
xchg
push
shl
test
cwde
xchg
mov
fwait
enter
jo
cs
mov
xchg
repz
mov
aam
push
sub
inc
scas
arpl
push
and
lods
mov
clc
lsl
stos
imul
out
and
movs
lahf
fwait
stos
adc
stos
inc
fwait
jns
sub
jecxz
pop
imul
add
cld
cld
push
pop
mov
scas
mov
and
call
xor
mov
sbb
shl
xchg
add
cld
jns
fcomp
repnz
not
jp
sbb
fld
push
fnstsw
test
push
daa
mul
ud1
jnp
mov
xchg
jmp
mov
(bad)
iret
adc
jne
clc
add
sbb
cmp
push
dec
neg
mov
and
dec
frstor
ret
cwde
iret
inc
pop
ins
lea
int3
pop
dec
dec
inc
inc
addr16
fldenv
adc
lods
je
lds
imul
cmp
in
push
adc
pop
or
rol
xchg
ret
inc
xchg
xchg
add
jns
mov
sbb
mov
sub
and
jle
mov
sbb
or
ins
jmp
iret
add
jb
jle
cli
into
sbb
xor
fsubr
stos
std
cmp
repz
ins
adc
cmp
ins
or
mov
cli
mov
test
xor
lods
outs
lock
sbb
add
aad
xchg
or
popf
mov
xor
lds
pop
gs
cmp
jecxz
cmp
jne
xor
cmp
mov
xlat
scas
and
icebp
jge
pop
out
call
rcr
xchg
mov
cmp
pushf
xchg
scas
mov
pop
add
(bad)
popf
inc
ficomp
add
inc
mov
outs
(bad)
pop
arpl
mov
sbb
fsub
add
xor
adc
xor
cli
dec
sbb
jle
call
repnz
and
stos
cmp
xor
jae
and
xchg
adc
imul
ins
out
add
jb
sbb
xor
cwde
sub
add
xchg
call
std
ja
in
shr
adc
std
add
scas
jmp
lods
jge
xchg
enter
(bad)
or
add
xor
outs
jo
retf
xor
push
jle
or
pusha
sbb
sub
mov
jmp
js
adc
sbb
hlt
jmp
mov
sub
aas
es
mov
xchg
out
data16
outs
sbb
inc
dec
in
inc
pop
sti
mov
test
(bad)
fmul
pop
ret
mov
cmp
aaa
mov
jo
cmp
jns
mov
ss
xor
xchg
push
jae
add
icebp
mov
loop
jle
push
dec
inc
into
lahf
dec
call
inc
mov
inc
xor
ss
and
add
(bad)
aas
inc
fisub
fnstenv
and
dec
push
test
or
jg
adc
ja
pop
dec
repz
mov
ret
push
dec
xchg
sti
lahf
sub
sti
mov
lea
cmp
cmps
cmp
shl
mov
pop
sub
sahf
mov
inc
push
dec
fwait
ss
sbb
push
adc
rol
rol
sub
fcomi
ret
mov
lock
nop
ficom
mov
add
sub
scas
rcr
jne
call
cwde
mov
sub
xor
xor
movs
dec
add
xchg
xchg
cld
jp
fwait
ret
in
xor
popa
clc
adc
clc
pop
xor
push
cs
push
add
sbb
imul
ffreep
mov
cmp
in
adc
in
xchg
in
addr16
(bad)
jg
fwait
hlt
mov
cmp
push
xchg
cmp
sub
es
mov
lods
(bad)
cdq
daa
out
sub
and
jle
mov
sbb
or
les
cmp
js
dec
pop
int
cmp
repnz
cli
xchg
push
jmp
xor
out
repnz
push
push
jge
mov
pop
call
adc
xchg
jae
pop
push
mov
cmp
pop
mov
call
pop
mov
ja
pop
mov
shl
outs
inc
and
iret
mov
ins
sbb
jle
adc
ins
jmp
jno
cmc
pusha
out
sub
pop
xchg
mov
jbe
pop
das
fld
mov
loopne
movs
ror
pop
pop
iret
dec
hlt
jmp
rol
addr16
ss
aas
icebp
or
jns
push
(bad)
mov
(bad)
rcl
dec
out
sub
cmp
lods
cwde
jnp
ret
sub
cli
popf
dec
stc
call
jno
push
jp
sbb
sbb
jge
or
mov
inc
mov
pop
add
fwait
pop
ret
mov
data16
xchg
cmp
push
int3
ss
mov
jb
jge
jne
ret
adc
(bad)
push
add
and
mov
call
jnp
gs
jmp
aam
mov
xor
mov
mov
sub
cli
or
js
adc
mov
dec
inc
inc
lods
movs
pusha
int
cmp
mov
push
xchg
test
(bad)
aad
shl
xchg
clc
gs
adc
sahf
xlat
xor
add
pushf
jno
push
int3
(bad)
or
sbb
adc
jmp
(bad)
push
inc
dec
pop
mov
std
jmp
and
adc
xor
cmp
cdq
and
mov
popf
mov
jne
jle
stc
push
or
mov
mov
clc
adc
inc
mov
inc
repnz
pop
inc
xchg
jp
dec
push
fdiv
cmps
mov
in
jnp
cmpxchg
mov
xchg
cmps
push
xor
aad
jp
sub
ret
aam
adc
sub
xchg
mov
mov
pop
xchg
test
add
out
iret
jo
mov
cmp
or
leave
push
fidiv
mov
bound
inc
dec
xchg
test
mov
xor
retf
mov
retf
lahf
push
xor
xchg
jmp
sti
mov
sar
mov
push
dec
fisubr
add
pop
pushf
mov
(bad)
mov
iret
shl
mov
xchg
inc
ins
mov
or
jl
gs
mov
arpl
cwde
outs
push
pop
cwde
or
out
cmp
push
rol
bnd
add
jl
push
mov
and
cmc
adc
pop
dec
pop
(bad)
punpcklwd
pushf
xor
fs
dec
pop
ss
mov
pop
test
jo
or
retf
arpl
mov
jg
and
adc
aaa
jle
hlt
sub
out
out
add
mov
pop
lock
pop
test
adc
add
mov
push
pop
daa
lock
jmp
cmp
retf
ja
int
in
aam
dec
cs
sub
xchg
inc
and
lahf
mov
rcl
loop
dec
arpl
jo
or
es
loop
or
adc
xchg
aas
not
inc
ret
add
test
mov
aas
(bad)
fidiv
jo
(bad)
mov
fist
mov
jecxz
push
dec
neg
mov
mov
sub
push
jo
in
dec
mov
push
xchg
cdq
jae
shr
mov
fnstenv
jp
push
mov
adc
mov
ss
jo
jae
or
xchg
sbb
xlat
cmc
or
outs
daa
jmp
out
aaa
sar
push
xchg
xor
push
xor
dec
sub
in
cmp
mov
inc
inc
bound
into
movs
test
and
push
in
lods
and
pop
dec
jns
mov
int
push
jg
push
xchg
in
add
cdq
mov
pop
popf
aad
push
inc
mov
fidiv
and
call
bound
push
push
cmp
push
mov
push
cwde
cmp
mov
push
mov
or
into
icebp
(bad)
test
and
cmps
scas
repnz
daa
adc
push
ret
mov
frstor
mov
push
sti
sahf
addr16
cmp
sbb
push
push
push
std
outs
arpl
fld
fsub
mov
pop
out
rol
clc
sti
mov
cwde
int3
fistp
mov
movs
dec
jle
les
popf
popf
ret
cli
leave
xlat
nop
sbb
adc
adc
mov
add
hlt
inc
out
test
mov
xor
adc
inc
or
mov
inc
push
sti
dec
fs
xor
fs
mov
mov
sti
imul
mov
mov
jne
outs
pop
jne
call
mov
ja
fdivp
pop
outs
cld
add
sub
stos
cmp
fistp
fistp
push
inc
mov
movs
push
jo
rcr
sbb
mov
mov
daa
icebp
xchg
aad
repz
jecxz
cli
xor
adc
pop
lods
jmp
pop
mov
mov
inc
fistp
idiv
ret
(bad)
jge
lods
hlt
bound
sub
out
fcomp
mov
push
and
mov
(bad)
xchg
pop
xchg
pop
mov
cmp
mov
call
stos
cwde
sub
mov
aaa
dec
mov
cs
ficom
out
lds
out
push
dec
mov
cmp
das
out
div
cli
inc
(bad)
retf
loop
push
jecxz
(bad)
adc
data16
mov
in
and
lea
adc
imul
and
loop
inc
lea
mov
pop
dec
aas
push
adc
sbb
sbb
push
out
mov
outs
addr16
and
xor
mov
mov
movs
ds
jmp
enter
(bad)
in
fwait
pop
fld
imul
add
xchg
mov
push
outs
xchg
outs
mov
add
es
getsec
mov
icebp
add
sahf
xchg
mov
jne
push
pop
(bad)
dec
push
pusha
mov
jns
mov
in
test
mov
push
int
test
mov
cmp
mov
xchg
pop
adc
mov
shufps
and
and
adc
popa
dec
sub
lds
dec
cdq
xor
jg
push
xor
mov
add
sub
xlat
sbb
je
fs
mov
(bad)
mov
(bad)
adc
fwait
xchg
mov
ja
into
aad
push
push
sahf
hlt
cmp
bound
inc
loope
fwait
jge
pop
movs
or
jns
mov
aas
or
jecxz
cmp
pop
xor
or
inc
shr
xor
or
mov
and
jmp
cmp
inc
sub
sar
jmp
(bad)
outs
mov
out
nop
or
jnp
jmp
cmp
daa
pushf
fsubr
pop
test
cli
(bad)
sbb
lahf
sbb
dec
pop
sar
aam
(bad)
in
mov
(bad)
fistp
fidiv
sbb
das
loope
inc
sti
cmp
dec
or
imul
push
sub
outs
(bad)
push
je
mov
ffreep
mov
and
in
in
fucom
call
sbb
mov
retf
adc
in
jmp
xchg
cmp
outs
jbe
adc
dec
push
fist
mov
cmp
jp
jmp
or
add
push
jge
ins
and
jne
sub
mov
adc
stc
sbb
and
sbb
(bad)
dec
adc
sbb
fsubr
fnstenv
push
in
dec
adc
rol
xchg
leave
sahf
mov
hlt
xchg
imul
mov
inc
retf
push
mov
adc
inc
cs
pop
cmp
mov
repnz
ret
sbb
sbb
xor
test
scas
ss
xlat
addr16
gs
clc
dec
or
out
ret
and
dec
xor
mov
out
test
cmp
adc
inc
mov
imul
push
leave
xchg
(bad)
stc
fwait
sbb
(bad)
cmc
in
push
mov
xchg
and
add
xchg
js
je
stos
sub
sub
sub
in
push
sahf
mov
xlat
neg
sbb
ret
mov
xor
pop
or
push
sbb
xor
lods
sbb
sbb
or
lods
bound
and
xor
fidiv
mov
test
std
inc
mov
out
jle
addr16
add
in
call
sub
clc
or
loopne
rcl
xor
and
inc
icebp
inc
enter
jne
mov
sub
dec
bound
int3
mov
mov
xlat
add
into
push
push
in
mov
arpl
lods
outs
ins
xchg
cmp
ja
aas
sar
mov
mov
jb
imul
and
pusha
xchg
or
xor
add
cmp
dec
fild
lds
mov
jmp
inc
push
neg
ds
pop
push
stos
arpl
pop
mov
push
aad
cmps
jle
inc
ja
or
movhlps
xchg
les
mov
mov
jge
pop
frstor
fs
adc
dec
fdivr
push
aas
inc
ror
mov
movs
mov
sub
das
iret
push
cmp
lahf
dec
mov
retf
outs
sub
adc
pop
cmp
popa
add
and
inc
(bad)
adc
sbb
imul
das
sub
idiv
dec
inc
or
scas
xchg
add
out
aam
jnp
add
mov
push
cmp
loopne
in
or
outs
fst
cli
sub
in
pop
add
in
inc
mov
stos
cld
pop
int3
jno
daa
popf
cli
es
or
ret
retf
or
bound
ficom
jmp
mov
pop
in
(bad)
loop
dec
ins
add
fs
(bad)
int3
xchg
add
loope
leave
mov
pop
(bad)
scas
xor
outs
test
cli
int3
adc
add
(bad)
fsubp
cmc
neg
cmps
lods
popa
adc
out
stos
pop
xor
mov
mov
lods
add
dec
ret
jge
mov
mov
arpl
xchg
jbe
out
fstp
shr
mov
fxch
add
movs
out
adc
pop
or
bound
movs
(bad)
leave
jae
cdq
movs
and
lods
repnz
ds
jae
lods
popa
pop
add
xor
mov
inc
mov
imul
(bad)
cdq
mov
jo
pop
add
fidiv
pop
fs
pop
jb
test
add
in
and
mov
std
stos
mov
fcmovb
dec
aad
test
mov
leave
shl
cld
mov
xchg
call
and
mov
sbb
sub
loop
mov
test
sub
inc
mov
retf
adc
retf
mov
mov
clc
jmp
(bad)
and
clc
enter
pop
nop
leave
push
(bad)
xor
mul
xchg
test
cli
(bad)
or
push
add
das
dec
push
mov
shl
and
sub
mov
add
cld
cmp
push
pop
push
sub
push
cmp
mov
in
pop
xor
retf
and
mov
cmps
iret
rcl
movs
inc
sbb
ror
sti
mov
rol
or
stc
inc
hlt
ins
mov
xor
push
std
rcr
sub
(bad)
addr16
inc
ds
in
dec
dec
mov
pop
mov
pop
pop
mov
sbb
call
out
fsubr
xchg
daa
mov
sbb
xchg
adc
mov
mov
inc
sar
push
mov
cmps
imul
mov
fmul
or
lock
aad
out
ds
add
xchg
cmp
add
outs
out
mov
jnp
pop
mov
jno
and
jno
movs
call
pop
pop
jns
(bad)
int
push
stc
cmc
test
adc
(bad)
mov
repnz
mov
dec
mov
adc
mov
mov
sbb
xchg
daa
push
mov
lahf
sbb
in
mov
add
call
and
xor
into
jp
push
outs
or
rcr
push
loop
mov
loope
into
sub
mov
adc
jnp
out
scas
mov
mov
pop
and
fsub
hlt
fcom
pop
gs
es
push
sub
adc
imul
mov
xchg
xchg
cld
ins
xor
pop
std
pop
inc
hlt
xor
mov
(bad)
adc
imul
fsubp
sbb
xor
hlt
mov
mov
mov
arpl
cli
xchg
mov
fistp
cli
dec
call
clc
mov
xchg
mov
push
jmp
daa
outs
xor
sub
lods
rol
pop
push
push
add
sbb
call
into
cmp
imul
imul
jl
clc
lahf
pop
sub
dec
fcmovb
mov
rol
lahf
ja
stos
aad
inc
mov
in
aam
xchg
mov
test
cs
push
mov
lods
sub
repz
popa
daa
in
ja
dec
int
push
dec
lahf
(bad)
and
iret
push
loop
call
sub
cmps
in
addr16
mov
mov
xor
jae
js
nop
repz
shr
mul
mov
dec
adc
adc
movs
inc
in
ret
test
pop
outs
test
adc
out
outs
repnz
dec
mov
loopne
movs
loop
jl
sub
clc
inc
test
mov
sub
xchg
loope
mov
hlt
sbb
mov
pop
retf
std
push
mov
mov
jg
fdivr
lahf
pop
(bad)
nop
repnz
repnz
jl
xlat
cdq
bound
sbb
outs
inc
(bad)
jno
xor
jbe
dec
pop
dec
mov
mov
mov
push
adc
retf
aas
imul
out
dec
les
pop
xor
mov
sbb
mov
cmps
mov
dec
xor
shl
test
sbb
xchg
movs
push
fld
cmp
or
mov
stos
xor
inc
and
mov
push
les
pusha
neg
shl
adc
iret
sub
sbb
push
scas
stos
sbb
fadd
addr16
test
jae
sub
adc
mov
ja
pop
jge
add
push
adc
mov
cld
fiadd
cwde
in
mov
xchg
pop
stos
or
arpl
jns
dec
mov
jl
in
neg
popa
icebp
pushf
fist
movs
std
data16
add
int3
das
adc
lock
mov
outs
and
or
in
retf
popf
leave
mov
retf
popf
xor
adc
mov
ror
rol
jg
adc
xchg
or
add
push
loope
fwait
jbe
add
out
dec
or
dec
js
adc
mov
mov
cmp
xor
inc
sbb
pop
mov
(bad)
loop
dec
loope
dec
adc
jae
jg
push
xchg
push
fsubr
imul
mov
retf
jno
xor
das
aas
cmp
adc
mov
iret
xchg
(bad)
sahf
push
sahf
jb
mov
inc
(bad)
or
inc
inc
push
lods
dec
icebp
cs
ror
adc
aad
imul
in
adc
enter
fist
stos
or
pop
push
stc
jnp
loope
nop
or
int3
mov
xor
pop
pop
les
enter
outs
int3
xchg
inc
add
jmp
dec
xchg
add
lock
adc
out
sub
adc
xchg
int
shl
popa
dec
adc
int
mov
mov
jns
sti
sub
scas
sbb
int
bound
popa
cli
jnp
cmp
mov
push
and
adc
sub
or
(bad)
push
scas
or
and
fcmovbe
cwde
or
pop
aaa
and
add
aam
push
in
ror
leave
int3
dec
mov
vunpcklpd
cwde
(bad)
in
push
pop
iret
inc
mov
xor
sbb
std
inc
jg
movs
sar
push
sbb
sub
mov
cmps
(bad)
mov
imul
retf
fxch
cli
jbe
int
mov
jl
dec
sysenter
dec
rol
popf
pusha
add
stc
sahf
mov
mov
or
add
or
imul
(bad)
loopne
sbb
ret
add
repnz
jnp
fdivr
xchg
shl
aas
scas
fmul
sbb
scas
xor
scas
sub
push
retf
popa
aam
ss
jno
jmp
sbb
xor
mov
inc
icebp
fstp
mov
mov
sbb
cmp
adc
dec
xlat
push
xchg
ins
fbstp
fs
add
repz
mov
aas
dec
xchg
in
rol
add
or
and
push
adc
imul
stos
imul
jns
mov
cli
ror
jg
(bad)
jmp
xor
div
dec
push
in
or
das
ins
scas
inc
adc
jecxz
and
dec
dec
(bad)
in
xor
pop
loopne
push
sar
and
shl
(bad)
dec
aam
jg
sub
popf
je
sub
jle
retf
push
data16
rol
inc
xchg
(bad)
int3
loop
adc
and
pusha
push
sbb
inc
cmp
push
cmp
mov
cmps
inc
cmps
xchg
stos
inc
xchg
aam
in
(bad)
call
cmp
in
xchg
iret
into
dec
loope
aad
jg
cmp
pusha
jle
ret
mov
es
fdiv
mov
addr16
ror
jae
ss
sub
jb
(bad)
aam
aas
fdiv
inc
cmps
inc
pop
adc
lods
retf
scas
push
add
cli
ror
mov
jae
jp
pop
fsub
retf
adc
sub
out
and
(bad)
sar
cmp
sub
lods
test
cld
xchg
cmp
fsub
sbb
data16
popf
xchg
shr
fsubr
add
in
sbb
scas
add
bound
xchg
mov
inc
pop
cli
mov
mov
dec
aad
call
mov
dec
xchg
movs
out
leave
(bad)
js
jl
dec
add
sub
sbb
dec
jge
mov
lods
adc
shl
pop
and
adc
daa
adc
or
add
mov
aad
xchg
xor
sub
xor
daa
jnp
xor
out
cmp
mov
cld
aam
scas
sti
cmp
pop
jmp
mov
cmp
dec
jecxz
sbb
adc
gs
cwde
fs
jo
loopne
fnstenv
sub
pop
add
pop
sub
add
add
outs
xor
lds
ins
call
fiadd
mov
xor
sub
pushf
mov
lahf
mov
push
cmp
cs
cmc
mov
repz
in
bound
pusha
fiadd
cmp
pushf
aaa
clc
or
in
fnstsw
stc
and
addr16
add
add
jo
dec
in
fidivr
mov
sub
xor
(bad)
mov
pop
in
and
shl
test
mov
jae
mov
cli
or
sub
cmp
aad
arpl
mov
mov
mov
inc
or
cmp
ins
ins
adc
test
outs
and
pop
jg
add
scas
daa
ret
jmp
repnz
pop
icebp
adc
enter
xchg
jmp
add
adc
inc
(bad)
int3
rol
push
adc
cwde
sub
ret
outs
hlt
mov
and
push
jae
jmp
lods
lds
in
cmp
popa
jmp
mov
jg
lock
inc
fisttp
adc
xor
int
jl
adc
jmp
jg
mov
sub
popf
call
aas
xchg
add
sub
mov
mov
push
test
sar
jp
add
add
repnz
mov
jg
mov
pop
cmps
into
stos
push
cmps
scas
shl
adc
rcl
ret
lods
nop
jl
dec
in
mov
out
mov
pop
out
es
fistp
ins
(bad)
bound
arpl
mul
rol
or
cmp
mov
xor
cmc
outs
ror
mov
cmp
xchg
sbb
cmp
stos
mov
mov
or
or
test
int
pop
jo
xchg
xchg
cmp
popa
ins
pop
les
dec
lock
mov
movs
int
adc
mov
out
daa
aad
xor
mov
(bad)
mov
popf
lahf
jle
add
sbb
sub
outs
pop
out
int3
(bad)
mov
fsubr
sahf
popf
repnz
std
mov
jp
add
or
fwait
adc
lods
cmp
sub
iret
jmp
fistp
mov
xchg
jno
call
inc
lahf
sbb
mov
pop
popa
and
add
jle
lods
dec
stc
xor
jl
retf
inc
adc
pop
sub
jno
push
mov
inc
out
les
sbb
jnp
pop
jl
fs
lods
mov
scas
mov
sbb
movs
mov
(bad)
cmc
pop
and
adc
dec
cmp
out
paddsb
data16
aas
fcom
imul
adc
scas
or
stos
or
fidivr
repz
(bad)
push
repnz
adc
push
ret
add
or
leave
gs
xor
xchg
mov
in
xchg
data16
call
pop
jecxz
loopne
cmps
jmp
cmps
div
call
pop
fcomp
mov
jle
sub
jl
jne
and
cvtps2pd
jg
(bad)
bound
mov
clc
int
adc
and
xor
xchg
mov
and
pop
sahf
mov
mov
mov
ret
xor
jg
mov
mov
dec
mov
ret
ins
and
push
pushf
ret
sbb
add
and
mov
test
clc
adc
jge
or
push
xor
das
rcr
inc
ja
dec
sahf
pop
and
sbb
aad
in
xor
ins
mov
adc
scas
call
push
outs
push
pop
inc
leave
adc
xchg
clc
push
cdq
nop
pop
out
imul
xlat
xchg
enter
cli
call
fs
iret
push
xchg
in
sub
shl
mov
push
pop
lock
idiv
mov
outs
push
pop
mov
(bad)
movs
test
jb
or
xchg
push
lock
mov
mov
mov
add
xlat
jle
les
sbb
(bad)
shl
mov
mov
test
pusha
add
or
rcr
loop
pushf
push
shl
pop
and
sbb
xchg
cmps
neg
jecxz
arpl
dec
test
xchg
mov
outs
mov
hlt
add
ret
es
dec
xor
cmps
loope
aad
or
ins
push
mov
sbb
and
ins
test
inc
loop
adc
popf
xchg
cmps
sub
inc
out
repz
sbb
imul
inc
stos
mov
inc
jo
mov
mov
push
adc
jp
shl
cmp
jns
les
push
inc
push
xchg
ins
push
mov
or
xchg
je
ret
in
mov
movs
aam
out
xchg
neg
push
test
cmps
pushf
test
ins
outs
popf
mov
aaa
or
and
leave
mov
bound
ficomp
movs
pop
in
(bad)
xchg
push
repz
cmc
add
mov
jne
jb
lods
push
inc
movs
fwait
inc
or
aas
idiv
dec
imul
fadd
popa
(bad)
pusha
inc
aad
retf
jae
jns
gs
sar
mov
mov
cmps
outs
xor
adc
xchg
xor
(bad)
push
xlat
fist
and
push
mov
mov
out
fldenv
jnp
mov
lds
aas
jle
pop
or
imul
enter
bound
scas
xor
pop
ror
cs
cwde
ficomp
jp
idiv
jge
pop
or
mov
enter
leave
dec
cmp
sub
nop
pop
push
mov
cmp
inc
jge
adc
inc
mov
jbe
push
mov
lahf
pop
call
add
mov
jo
out
rol
jp
mov
adc
and
dec
add
out
xchg
ins
(bad)
jle
push
sub
sub
cs
mov
jae
mov
test
or
(bad)
sub
fwait
xor
retf
adc
je
lock
xchg
add
jb
scas
scas
cmp
add
sub
and
daa
and
sub
inc
(bad)
pop
mov
add
mov
mov
sbb
leave
xchg
sub
(bad)
pop
repz
xor
dec
and
lahf
xor
add
xchg
add
jmp
int
xchg
sub
lahf
dec
mov
out
out
push
or
pop
pop
repz
fild
cwde
out
fwait
push
jbe
xchg
test
jp
cmp
mov
pop
xchg
and
sub
push
sub
jb
jge
aaa
int3
movs
adc
into
in
mov
jne
add
(bad)
sub
mov
rcl
in
pop
jb
push
mov
fsubr
and
push
aam
repz
movs
dec
and
push
push
jle
loop
mov
xchg
retf
aam
mov
fnstcw
push
hlt
fadd
xchg
sub
adc
mov
xchg
jg
loop
dec
lods
sbb
jmp
and
adc
int3
xchg
push
aaa
aad
int3
push
mov
xor
popf
mov
cmc
jg
mov
fisub
addr16
push
iret
push
xchg
mov
(bad)
pusha
rol
test
out
inc
jg
mov
jmp
dec
and
and
ret
test
test
sbb
cmp
mov
leave
cdq
mov
mov
adc
cs
inc
je
mov
mov
push
retf
in
pop
add
mov
stos
js
sub
mov
imul
sub
adc
leave
push
shr
in
push
test
call
(bad)
push
leave
dec
fild
jo
cdq
outs
cmp
sbb
icebp
inc
add
pop
mov
(bad)
imul
idiv
(bad)
sti
scas
mov
jno
jno
push
push
mov
pop
push
scas
xchg
mov
fisttp
fidivr
lea
add
call
pop
aas
inc
sub
fcomp
inc
pop
adc
ins
cmps
dec
xchg
cmp
xor
pop
(bad)
fnstcw
add
ja
test
mov
in
fwait
xchg
inc
adc
mov
mov
inc
jmp
cmp
pop
xchg
jnp
arpl
es
imul
fiadd
lods
mov
mov
pop
shl
mov
xor
push
lea
pop
out
pop
cli
and
addr16
adc
cmp
mov
adc
lea
(bad)
shl
popa
add
cld
cs
and
mov
mov
xor
cli
adc
dec
test
imul
or
jo
mov
bound
aad
hlt
mov
lahf
mov
mov
add
aad
arpl
in
mov
push
dec
cmp
sti
xchg
shr
or
mov
pop
xchg
or
mov
(bad)
jno
jmp
mov
fild
(bad)
fwait
pop
xchg
out
jmp
xchg
xchg
outs
xchg
mov
stos
ja
cmp
jmp
sub
sbb
push
mov
out
mov
mov
lds
pop
mov
mov
(bad)
dec
jl
and
mov
(bad)
out
int3
ins
push
mov
enter
out
(bad)
jo
call
push
push
std
leave
pop
mov
idiv
sub
xchg
std
and
and
icebp
add
test
icebp
scas
clc
pushf
(bad)
adc
push
sbb
pushf
stos
sbb
inc
arpl
mov
lahf
mov
fwait
xor
out
or
mov
mov
jo
xor
jmp
or
test
es
push
(bad)
or
xor
hlt
pop
and
sbb
enter
inc
adc
add
lods
push
je
sahf
test
in
movs
aaa
inc
(bad)
xchg
cwde
sub
retf
popf
sbb
test
inc
fsubr
fcomip
(bad)
cmp
cmp
fcom
mov
(bad)
aam
xchg
mov
stos
mov
scas
pop
ss
call
daa
push
xor
jp
ins
cli
sub
xchg
in
fst
mov
int
test
rcl
sub
or
cmp
mov
das
cs
std
mov
aas
aad
repnz
in
mov
movs
pop
scas
jmp
or
push
leave
(bad)
bound
cmps
dec
fmulp
dec
sub
mov
das
popa
popa
xlat
movs
dec
pop
mov
jmp
das
mov
fsub
and
cmp
cs
dec
fnstsw
test
mov
xor
cmp
push
and
pop
mov
in
popf
idiv
lds
inc
or
push
ss
inc
sub
pop
(bad)
shr
dec
leave
xchg
ds
loope
xor
dec
xchg
cs
mov
sbb
push
stos
nop
mov
sub
mov
or
bound
jne
es
clc
dec
fsub
push
lods
sti
xchg
mov
lds
and
mov
inc
mov
sar
jge
push
sbb
or
jle
and
xor
push
pop
jge
mov
push
retf
call
stc
mov
mov
push
lock
inc
test
pop
sbb
xor
mov
leave
je
call
dec
fdivr
sbb
sbb
aaa
xchg
imul
and
sbb
pusha
jp
mov
inc
inc
cli
sub
mov
add
pop
inc
inc
je
(bad)
loop
popf
mov
pop
lahf
xchg
jne
jmp
in
enter
aam
std
out
push
mov
fst
cmp
mov
jge
rcr
out
pop
stos
mov
pop
xchg
(bad)
aam
push
xchg
in
xor
push
(bad)
das
sbb
pop
add
mov
adc
mov
jmp
shl
mov
addr16
ins
xor
cmps
ret
inc
sub
mov
hlt
or
pop
dec
int3
xchg
mov
fcomp
(bad)
dec
loop
(bad)
int
or
aam
pop
out
push
pop
jmp
aam
xchg
fmul
outs
mov
jae
adc
mov
popa
push
addr16
jl
jle
cmps
cmp
xchg
jmp
outs
inc
mov
enter
add
jne
retf
xchg
fist
repz
std
dec
add
xor
fdiv
cmc
mov
mov
rcl
add
mov
fwait
xor
fs
adc
inc
dec
leave
ret
dec
bound
pop
fsub
lock
sar
pushf
arpl
sub
in
or
and
add
fdiv
lahf
mov
pop
retf
(bad)
xchg
popa
retf
mov
xchg
mov
scas
cmp
pop
shl
mov
cmp
adc
sub
repz
in
in
push
xchg
mul
and
inc
xchg
jo
mov
mov
cmp
cmps
jecxz
gs
cmp
mov
lods
mov
lods
add
pop
push
loope
or
lea
mov
inc
out
mov
fdivr
jle
fnstcw
push
cdq
mov
fidivr
jne
push
into
jbe
pop
jns
sbb
or
add
adc
cmp
and
push
mov
enter
jnp
dec
pop
sub
mov
sbb
xchg
mov
add
scas
das
es
(bad)
cwde
lods
ret
loopne
inc
dec
sbb
inc
in
and
and
xor
pop
sub
fldcw
jno
and
mov
cwde
es
in
xor
lea
inc
push
(bad)
add
sub
gs
outs
sub
not
and
cmc
cdq
mov
jb
xlat
jg
iret
mov
xor
sbb
adc
sti
pop
xlat
mov
cmp
mov
jecxz
xchg
xrelease
test
sub
into
or
stos
mov
imul
and
out
mov
adc
and
mov
ret
mov
or
std
or
cmp
ret
fcomp
xchg
pop
les
cli
scas
pcmpeqb
clc
out
mov
or
out
push
test
jnp
pop
push
mov
add
rol
mov
movs
sbb
out
add
mov
stos
dec
fld
jnp
jnp
xor
xchg
inc
dec
adc
fcomp
ss
xchg
dec
mov
shl
inc
push
test
add
xchg
jno
cmps
in
int
dec
jno
fld
repz
push
pop
call
pop
fadd
jp
loope
adc
cmp
xor
stos
outs
retf
sub
or
loope
rol
mov
xor
jl
mov
xor
sti
pop
xor
adc
inc
mov
cmp
jo
cmc
ret
fwait
sub
pop
push
ja
into
mov
scas
adc
xlat
or
test
mov
cmp
dec
cmc
aaa
xor
je
(bad)
sbb
movs
lea
loope
stos
xor
sub
cmp
inc
and
pop
xchg
sbb
mov
mov
cmp
or
das
adc
or
mov
adc
mov
cli
stos
xchg
push
cmp
(bad)
rcl
mov
cwde
or
in
ja
xor
loop
in
push
push
cwde
and
aas
or
fdivr
jo
xor
ja
and
sahf
je
inc
out
xchg
mov
or
dec
leave
xchg
pop
sbb
push
test
jmp
inc
fiadd
cmp
and
jle
mov
xchg
jmp
mov
stos
out
icebp
jp
rol
daa
jmp
ins
add
fld
xchg
jmp
xchg
sbb
and
mov
cmp
adc
add
vcvtsi2ss
out
icebp
or
mov
adc
ss
data16
xor
push
and
mov
cmp
dec
icebp
es
imul
mov
sub
jl
xchg
repnz
sti
pusha
mov
jp
outs
inc
int
js
mov
adc
mov
jbe
cmps
popa
xor
leave
inc
mov
inc
dec
adc
test
in
fdiv
or
dec
push
shl
and
addr16
mov
mov
in
addr16
mov
repz
jmp
ret
lods
dec
mov
gs
adc
retf
pop
data16
outs
jmp
or
pushf
gs
mov
cs
ins
outs
xchg
dec
neg
jle
test
sub
int3
in
sar
mov
leave
inc
(bad)
outs
sar
pop
sbb
mov
cmp
fstp
aas
(bad)
and
popa
jns
addr16
mov
pushf
call
cld
or
call
xchg
and
xchg
out
icebp
cmp
jne
mov
mov
mov
jl
test
jae
shl
fist
out
repz
ss
clc
pop
xchg
add
bound
int3
stos
push
pop
mov
popf
out
in
sbb
out
(bad)
ror
in
aam
jmp
dec
pop
pop
lds
cmp
enter
mov
inc
cli
jge
xor
std
inc
mov
out
iret
xor
test
aaa
dec
in
cmps
and
cmp
and
leave
dec
mov
push
push
pop
and
int
loop
mov
sbb
pop
cli
icebp
scas
sub
dec
sbb
inc
or
bound
std
out
add
test
loop
pop
xlat
or
popf
mov
jl
test
fmul
xor
(bad)
pop
(bad)
xchg
iret
jmp
clc
inc
movs
ja
retf
push
js
(bad)
(bad)
fbld
xchg
rol
mov
mov
add
cmp
in
cmp
test
or
mov
xchg
sub
mov
call
(bad)
inc
sbb
fcomp
mov
test
outs
mov
push
dec
and
adc
mov
in
retf
lds
stc
jp
mov
mov
test
mov
imul
fs
pop
fnsave
clc
dec
aam
or
bound
jp
mul
in
and
cvtps2pi
mov
loope
test
mov
sub
sub
mov
dec
jmp
xchg
mov
je
pusha
test
lods
jne
adc
cmp
(bad)
xchg
mov
fmul
or
add
les
stos
stc
adc
sbb
aad
bound
aad
mov
adc
sahf
fadd
pop
iret
adc
pop
cmp
pop
xor
fist
mov
add
call
sub
sbb
retf
jle
push
cld
das
rcl
sbb
pop
sbb
adc
sub
mov
mov
int3
or
fadd
xchg
sbb
dec
mov
pop
adc
imul
or
sub
scas
jo
jle
push
fsubr
xor
and
leave
fisub
sbb
ins
jl
push
xchg
pop
ficom
into
add
sub
push
and
xchg
enter
je
bnd
cmps
jo
mov
cdq
sub
jo
movs
pop
mov
jns
sub
(bad)
cmp
sti
inc
mov
mov
call
sbb
mov
mov
lds
not
and
xchg
int
dec
xchg
sti
xor
jns
enter
retf
retf
test
ret
rol
cmp
movs
adc
pop
mov
push
fpatan
jnp
ret
rcl
xchg
std
je
and
cmp
jne
daa
pop
inc
cdq
nop
mov
push
add
add
jecxz
out
cmps
jb
push
pop
rcr
int
ja
outs
jmp
inc
into
sbb
or
adc
inc
mov
arpl
hlt
adc
das
stos
and
pop
repz
pop
push
dec
sub
jmp
lock
push
cwde
test
mov
nop
fstp
aam
dec
imul
enter
xor
pushf
or
repnz
je
in
cmps
test
ja
mov
cmps
loop
cli
mov
retf
pop
mov
(bad)
not
jge
scas
xchg
fstp
cs
call
pop
adc
dec
xchg
mov
neg
or
xchg
push
cld
scas
scas
xlat
mov
(bad)
cmp
outs
loop
and
ret
rol
xchg
icebp
lahf
mov
and
sbb
pop
add
icebp
imul
test
jle
mov
jb
mov
and
xchg
xor
les
das
pop
fsub
fstp
jge
jg
test
mov
mov
sbb
and
xor
sub
mov
ins
outs
adc
jne
pop
hlt
jne
or
cdq
or
retf
or
call
jle
jbe
mov
gs
xchg
int
popf
ds
adc
icebp
ins
mov
mov
fxch
jmp
jmp
mov
jl
scas
mov
popa
in
or
push
sub
retf
cmp
and
ret
mov
xchg
popa
pop
cwde
jg
(bad)
sbb
dec
and
push
push
add
out
into
fs
fistp
out
imul
lods
aad
mov
cmp
sbb
adc
adc
imul
int3
(bad)
lods
fild
sbb
cmps
xchg
push
and
ss
outs
or
jecxz
cmp
outs
jb
imul
outs
xchg
fdiv
cwde
ror
adc
(bad)
cmp
scas
fmul
xor
push
je
jnp
retf
or
das
pop
ins
jne
(bad)
cmps
imul
cmp
xchg
ja
pop
mov
pop
adc
retf
and
sti
repz
sub
inc
xor
dec
jmp
ds
mov
fisttp
rcl
inc
adc
fisttp
int3
test
sti
dec
jo
mov
push
call
pop
movs
repz
fcom
cld
mov
sub
xchg
popf
(bad)
jle
mov
pop
aas
retf
fiadd
sub
gs
and
popa
shl
jl
sahf
cld
jp
dec
xor
pop
mov
push
inc
addr16
cmp
leave
xchg
or
mov
mov
test
and
add
ja
loopne
sub
fcomp
xchg
sahf
enter
adc
add
leave
cs
je
and
lds
or
or
cmp
lods
dec
sbb
sbb
stos
add
pop
(bad)
gs
or
test
xchg
js
stos
xlat
dec
cli
in
enter
das
push
cdq
or
les
sti
les
add
sub
cmp
test
imul
or
and
rcr
je
jno
jae
cs
arpl
push
pop
pusha
mov
nop
adc
stc
(bad)
in
and
and
mov
cdq
jle
enter
das
iret
sbb
es
xor
in
push
in
cs
xor
test
pop
movs
sbb
shl
push
(bad)
movs
loope
outs
cmps
test
or
sar
sbb
enter
fsubr
jnp
xor
int3
aas
(bad)
not
mov
mov
sar
and
jge
sub
mov
xor
in
jge
jge
or
(bad)
jnp
(bad)
fs
cmps
pop
fldenv
rol
mov
sbb
push
repz
scas
cmps
cmovnp
jb
clc
mov
(bad)
sbb
dec
std
(bad)
out
fisttp
cmp
sti
clc
fadd
out
iret
sbb
add
jp
fild
jmp
mov
jmp
jp
stc
xor
lock
xlat
push
bound
xor
push
icebp
aaa
sub
in
shl
std
sbb
in
(bad)
stos
adc
xchg
adc
ficom
add
jecxz
mov
bndstx
fcom
xchg
add
xor
je
ret
clc
sub
xlat
ds
sub
mov
jmp
imul
pushf
mov
call
push
cmp
push
inc
scas
sbb
or
or
retf
pop
lea
fstp
push
das
out
loop
add
adc
add
(bad)
cwde
stos
mov
mov
pop
push
or
adc
sbb
mov
mov
add
inc
mov
test
jge
movs
push
out
loope
jmp
das
bound
mov
cmp
lea
dec
(bad)
sbb
rcl
ss
stos
enter
imul
retf
xchg
xor
or
inc
cmc
outs
dec
call
jne
mul
mov
adc
addr16
sbb
mov
adc
hlt
shr
iret
adc
loop
sub
lods
popf
mov
pop
nop
aam
inc
jo
xor
mov
js
add
(bad)
dec
ins
arpl
jecxz
test
in
and
jg
mov
inc
ja
fwait
xor
sar
leave
sbb
sbb
and
or
outs
aam
cs
lahf
sub
add
dec
arpl
cmp
stos
xchg
sbb
add
imul
jno
mov
push
shr
inc
shl
and
test
aad
xchg
(bad)
clc
or
rcl
fld
imul
test
and
icebp
int
ror
xchg
adc
div
mov
pop
retf
stos
or
movs
clc
ins
mov
(bad)
dec
test
inc
push
pop
ss
sub
xchg
mov
cmc
ror
imul
fcmove
sub
in
outs
arpl
ss
je
push
and
mov
sti
out
push
or
lods
add
mov
cmp
mov
sar
loopne
adc
xchg
aad
jg
mov
jl
out
xchg
(bad)
push
mov
enter
nop
das
sub
dec
hlt
jle
inc
jecxz
mov
xor
popf
cmps
mov
rcl
ins
mov
gs
cmps
sbb
clc
fmul
jmp
in
cdq
pop
cmc
inc
inc
cld
jg
cwde
cmp
loop
add
loope
test
pop
out
inc
out
icebp
out
jg
and
dec
push
call
jne
ja
xchg
shr
mov
pop
sub
sbb
jle
jp
mov
aaa
or
lods
mov
cld
push
sub
pop
xor
movs
inc
cmp
sbb
mov
pop
neg
xchg
repz
and
mov
daa
mov
add
leave
cmp
push
jmp
pushf
sub
je
or
out
sub
xor
or
adc
pop
ret
out
sub
(bad)
retf
loope
mov
mov
loopne
aas
sbb
xchg
cmp
dec
outs
xchg
xchg
cmp
xchg
mov
ja
jmp
push
pop
rol
shl
sub
ja
push
mov
sbb
test
sti
and
mov
cli
idiv
loope
stos
leave
in
test
adc
hlt
sahf
xor
cmp
arpl
imul
mov
hlt
lea
sti
ret
cld
fsub
mov
sbb
cmp
dec
mov
inc
mov
push
test
mov
and
(bad)
jb
sbb
push
sbb
sahf
jb
(bad)
fisubr
test
pop
jmp
mov
mov
in
pop
jnp
push
xchg
inc
sub
mov
mov
jmp
call
mov
mov
jle
fincstp
scas
inc
xor
repz
sub
inc
call
imul
push
in
xchg
xor
adc
dec
jmp
jmp
adc
hlt
icebp
les
or
cmp
inc
popf
jo
mov
test
rcl
rcl
retf
mov
loopne
pop
into
push
mov
mov
mov
adc
and
das
sti
sbb
xlat
push
inc
aam
jmp
prefetcht1
das
es
jle
ja
neg
ret
adc
sbb
xor
mov
(bad)
push
adc
ret
xor
les
rol
jg
sub
jno
adc
aaa
loop
pop
xor
pop
test
add
mov
ficomp
push
leave
or
xchg
cmp
(bad)
push
mov
inc
sbb
call
mov
es
cmp
test
fwait
push
jae
leave
fistp
adc
jmp
cdq
mov
outs
(bad)
fimul
mov
cmp
adc
daa
dec
iret
and
mov
mov
ins
das
jb
pop
sub
mov
dec
push
mov
adc
push
push
fchs
fldz
xchg
ss
ret
mov
add
pop
mov
mov
inc
movs
push
mov
cmc
pop
fistp
jle
adc
adc
and
std
pop
jns
shl
mov
or
jl
jle
fwait
push
add
fcomp
shr
movs
sbb
shl
inc
das
pop
push
push
dec
icebp
je
icebp
test
adc
push
lods
push
pop
loopne
mov
pop
lock
loop
mov
sub
xchg
sbb
jg
jmp
or
ret
inc
jbe
into
ficom
pop
mov
jecxz
les
nop
mov
adc
inc
(bad)
mov
lods
xchg
inc
ret
jmp
mov
outs
in
dec
repnz
leave
ja
mov
jo
inc
xor
pop
xchg
push
pop
bound
jge
push
cmp
js
dec
push
mov
stc
push
lods
inc
retf
push
push
pop
cld
inc
popa
shl
bound
dec
scas
sub
movs
(bad)
sti
das
adc
pop
retf
and
rol
jnp
js
ins
sbb
sbb
push
sbb
in
popa
sar
pop
in
daa
lahf
jb
pop
rcl
jp
fwait
lea
mov
je
out
pop
fnstenv
lods
push
cmp
push
mov
dec
daa
xchg
lods
ficomp
call
jge
dec
fwait
mov
lds
or
div
adc
pop
inc
cwde
mov
or
cmp
int
(bad)
lods
or
mov
shl
cmp
jmp
sub
mov
test
mov
cmp
movs
pop
jne
fwait
add
imul
push
cmps
add
call
rol
ds
call
cwde
test
imul
pusha
pop
cld
mov
mov
je
loop
push
push
bound
push
test
xchg
loopne
jne
sahf
add
add
(bad)
inc
add
lahf
and
cmp
dec
mov
cld
sti
adc
or
jae
cmps
push
adc
push
mov
inc
leave
xchg
dec
mov
jl
popa
inc
jne
movs
and
js
cld
push
lods
icebp
and
aaa
jb
sub
ret
mov
sbb
loope
dec
repnz
mov
fdivr
and
xchg
push
mov
jae
popf
jae
mov
pop
push
push
outs
sub
inc
mov
pop
frstor
leave
pop
push
and
or
ds
mov
aas
popf
fnstcw
cwde
push
push
pop
mov
ror
mov
mov
inc
xchg
jne
cs
fcmovb
sbb
cmp
adc
jl
imul
out
pop
jg
mov
hlt
pop
jmp
jne
cmc
stos
gs
dec
jo
add
jle
sbb
fsub
pushf
xchg
aaa
sbb
lds
into
push
stos
rol
jb
movs
xchg
sbb
sbb
xor
lods
cmp
outs
mov
pop
(bad)
arpl
and
jne
mov
dec
or
inc
lahf
push
sub
aas
cli
sbb
adc
adc
pop
stos
xchg
ror
aam
in
es
and
bound
adc
push
cmp
sub
jl
ins
test
mov
and
mov
retf
mov
adc
pop
sbb
jns
call
in
jns
and
push
dec
push
xchg
cmps
lods
xor
repz
dec
push
in
loop
test
movs
ss
push
stos
pop
xchg
int
pop
(bad)
es
add
fwait
add
mov
cmp
popa
sbb
push
fmul
mov
rol
sar
add
rcr
or
add
mov
xor
lock
popf
out
loopne
jmp
das
pop
sub
cmp
xlat
stos
pop
aaa
inc
jl
jmp
mov
pusha
mov
rol
imul
inc
sub
rcr
movs
in
mov
scas
xor
jmp
(bad)
adc
add
mov
inc
fdivr
inc
stos
mov
jle
xor
nop
inc
pop
mul
sbb
mov
dec
xor
mov
fs
sbb
or
js
aad
pop
mov
dec
push
inc
outs
sti
bound
int
push
(bad)
sub
stos
lahf
dec
pop
or
inc
mov
shl
jmp
jno
mov
sub
or
dec
(bad)
cmp
nop
xchg
cs
mov
call
lods
iret
sbb
mov
loope
shr
jmp
les
add
mov
iret
mov
scas
adc
aad
xor
movs
scas
mov
push
lock
fild
mov
inc
shr
cmp
xchg
stos
(bad)
aas
imul
pop
call
sub
pop
cmp
or
pop
ja
sbb
sbb
lods
and
ins
lahf
pop
mov
(bad)
loope
daa
mov
jnp
fwait
and
sub
and
mov
sbb
out
and
fst
sub
fsub
xchg
lods
xor
mov
hlt
out
adc
pop
and
mov
mov
adc
add
sub
stc
inc
pop
push
add
jmp
xchg
mov
outs
ds
jg
cmps
cmp
inc
pop
out
push
jecxz
mov
dec
mov
mov
ins
xor
dec
inc
imul
sub
or
xchg
xor
es
mov
inc
pop
or
lods
(bad)
xor
in
xchg
or
inc
sbb
in
iret
cmp
push
or
popa
bnd
popf
in
sbb
jmp
nop
nop
pop
(bad)
xor
dec
or
out
fmul
aam
push
loop
outs
pop
dec
shl
cwde
xor
ss
test
inc
jge
or
out
clc
sub
jmp
leave
pop
(bad)
cmp
mov
imul
push
shl
ret
cwde
shr
adc
and
cdq
jge
pop
(bad)
mov
pop
sub
outs
lods
push
add
and
jno
inc
lds
out
sar
sub
in
test
mov
jl
imul
outs
xlat
jnp
out
or
divps
out
pop
fstp
fsubr
sub
mov
popa
push
retf
add
fild
mov
in
fild
inc
jge
push
bound
(bad)
in
loop
and
cmp
and
sub
lods
fisttp
shl
sub
push
call
mov
xor
daa
stos
xchg
icebp
push
dec
bound
xchg
jnp
mov
das
inc
test
cmp
mov
mov
jns
and
dec
mov
inc
(bad)
push
xlat
lds
sbb
addr16
pop
aam
add
adc
mov
cmp
les
push
ja
or
daa
push
xlat
xchg
push
mov
jnp
mov
outs
out
cmps
mov
sub
xchg
cmp
div
xchg
mov
fld
sub
or
mov
(bad)
icebp
xchg
fnstcw
outs
xchg
cdq
lods
fs
jo
sub
outs
pop
dec
push
lds
sbb
lock
in
test
mov
sub
cmp
dec
push
mov
retf
xlat
mov
or
push
pop
fild
popa
xchg
mul
pop
aaa
xor
adc
dec
sar
cmc
lds
movs
jecxz
imul
dec
icebp
cwde
xor
dec
adc
rcl
neg
or
test
(bad)
rol
jmp
repz
mov
fisub
push
aad
ret
cmp
cmp
(bad)
call
xor
jp
popa
adc
popf
imul
bound
sub
leave
dec
cwde
xlat
mov
sub
mov
ds
mov
retf
pusha
xchg
mov
fisttp
inc
mov
sbb
fcmovnb
movs
sahf
or
xor
sub
inc
push
jb
dec
movs
add
ror
iret
(bad)
dec
sbb
in
jge
jmp
test
cmp
xchg
aaa
in
pushf
dec
mov
(bad)
push
test
sub
mov
jmp
leave
pushf
push
loop
dec
mov
sbb
mov
aas
inc
cld
dec
dec
loope
cmp
clc
(bad)
and
cmps
xor
cwde
ret
sbb
mov
xchg
arpl
xchg
mov
xor
pop
inc
mov
cmp
fcom
jno
imul
pushf
cmps
cwde
sbb
cmp
jb
lods
in
xchg
add
daa
in
inc
add
jae
lock
cmps
jmp
ror
das
push
pop
stc
iret
fist
test
adc
ins
and
push
in
push
mov
sub
xor
xor
cmp
aad
lea
mov
cmc
xchg
stos
and
inc
push
lahf
add
xor
into
(bad)
xor
jo
stc
shr
jp
test
inc
xchg
sub
pop
and
mov
cmp
xor
mov
pusha
jecxz
push
icebp
push
lea
inc
(bad)
sbb
mov
in
out
daa
xchg
adc
dec
mov
push
sbb
or
and
fadd
dec
iret
add
test
(bad)
je
adc
mov
imul
loope
dec
pop
into
xchg
test
ins
cmps
pop
out
jp
je
xlat
xor
mov
pop
xchg
push
or
leave
ret
stos
dec
dec
inc
pop
mov
push
into
mov
(bad)
mov
stos
xor
dec
imul
jl
push
fcomp
scas
clc
movs
sbb
mov
sub
sar
ins
stos
or
xchg
mov
into
mov
sub
aas
and
pop
dec
loop
push
xor
sar
adc
mov
std
or
sahf
mov
lahf
and
mov
shl
jne
add
idiv
jae
cmp
mov
xchg
mov
jp
loope
or
and
pop
jge
sbb
mov
repz
add
adc
xlat
and
(bad)
mov
lods
ins
rcr
push
(bad)
scas
dec
mov
add
push
and
in
mov
fst
in
sbb
push
dec
js
sub
pushf
jb
cmp
xchg
mov
add
push
add
push
test
mov
and
jno
movs
fiadd
mov
add
adc
and
loop
movs
(bad)
and
mov
mov
jmp
sbb
fisub
cmp
imul
and
scas
mov
mov
fstp
stos
cmp
sub
inc
cmc
jmp
addr16
dec
push
ret
fbstp
add
outs
daa
xor
mov
xchg
and
mov
dec
xchg
sti
(bad)
xlat
and
cmp
xor
mov
daa
cmp
xchg
and
fcomp
push
scas
xchg
push
sub
add
push
mov
arpl
(bad)
add
bound
fist
jl
push
mov
div
sar
sub
jb
mov
adc
cmp
inc
pop
cmova
retf
sbb
lods
xor
mov
adc
ins
into
popa
mov
cmp
shl
pop
xchg
scas
xchg
sbb
test
or
xor
xchg
dec
iret
inc
int
or
leave
dec
out
mov
enter
out
icebp
call
pushf
popf
inc
dec
loop
pop
jp
lahf
cs
push
fs
mov
sbb
mov
js
int3
stos
cmc
movs
pop
xlat
popa
push
xchg
push
or
sub
lea
mov
cld
sbb
mov
and
adc
stc
repz
pop
sub
sbb
fidiv
jbe
cwde
pop
popf
mov
loope
ss
in
shl
adc
or
(bad)
mov
jmp
aaa
xor
(bad)
ficom
loop
mov
lock
push
cmp
ins
mov
fisttp
les
pop
xchg
add
loope
mov
(bad)
in
dec
mov
mov
aas
or
test
cmps
sub
outs
mov
mov
in
imul
or
mov
mov
and
mul
sti
ja
test
mov
push
lahf
inc
ret
dec
sub
ror
loop
inc
push
xor
xor
fdivr
loopne
enter
ficomp
ror
fistp
retf
dec
jbe
sub
out
jmp
movs
fisub
dec
mov
shr
push
mov
or
fst
or
sub
and
cdq
dec
sti
mov
leave
dec
fist
mov
ret
(bad)
cmp
out
pop
pop
jecxz
pop
push
inc
int
dec
fild
sub
dec
or
cmp
inc
jl
cmps
lahf
ror
aam
add
and
(bad)
jmp
mov
mov
imul
frstor
mov
aad
out
push
shl
aad
rcr
out
ret
out
adc
cmp
fidivr
imul
(bad)
mov
loopne
scas
cmc
not
test
and
fsub
pop
xrelease
pop
in
repz
push
jp
aaa
imul
cmps
(bad)
imul
sahf
scas
pop
mov
jle
mov
inc
cmp
mov
cmp
test
lea
xchg
dec
add
ins
and
stos
aad
dec
mov
shl
jne
pop
in
outs
popf
stos
adc
and
popf
mov
push
xor
xchg
pop
movs
clc
and
outs
mov
add
sar
cmp
sbb
xor
mov
inc
lock
test
and
xor
fcmovnu
pushf
retf
inc
jge
test
push
mov
adc
inc
add
(bad)
fsubr
and
daa
push
sub
dec
adc
cmps
test
jmp
out
mov
push
ja
mov
jno
lds
out
aam
and
repz
cmp
pushf
and
enter
jecxz
fild
mov
push
(bad)
rcr
jne
adc
addr16
(bad)
cmp
daa
arpl
je
adc
out
inc
sub
pop
scas
pop
imul
and
dec
loope
rcl
and
ins
mov
cld
push
ror
dec
dec
fcomp
mov
enter
cmc
xchg
jnp
shr
push
add
in
adc
out
pop
mov
adc
jmp
add
popf
data16
cmp
aam
sub
dec
lds
fs
pop
xchg
jns
bound
sahf
mov
movs
ror
ss
cmps
cmp
pusha
(bad)
jle
lahf
sbb
aad
(bad)
push
fild
loopne
mov
sbb
or
in
jecxz
add
and
mov
xor
sbb
xor
cld
cli
(bad)
and
mov
retf
dec
pusha
and
je
fcmovu
aad
pop
pushf
jbe
inc
or
iret
dec
xor
(bad)
lea
mov
cmp
cwde
nop
loop
arpl
push
or
push
es
pushf
mov
lods
dec
mov
cmps
ret
(bad)
(bad)
popf
pusha
int
inc
mov
je
cli
aas
ja
mov
and
and
out
pop
cmp
mov
fst
and
xor
inc
add
cdq
cmp
jle
cli
test
pusha
mov
pop
sbb
pop
cmc
mov
jge
fwait
stos
ins
add
vpsubd
push
lahf
fsubr
jmp
arpl
xchg
nop
xor
dec
arpl
push
in
sub
xchg
mov
pop
rol
(bad)
jle
adc
int
stos
xor
into
inc
scas
jge
mov
inc
sbb
push
inc
outs
pop
sar
lds
cmps
std
lods
mov
jmp
inc
in
dec
mov
jb
sbb
es
das
sbb
jl
and
or
leave
aam
push
and
pop
retf
push
and
push
push
inc
dec
sbb
push
xor
pop
mov
xchg
sti
shl
sub
shl
inc
push
or
mov
scas
into
pop
and
pop
dec
arpl
mov
inc
mov
retf
test
sub
daa
sbb
mov
test
imul
xor
pop
les
shl
outs
xor
jb
iret
pop
lods
aam
push
dec
mov
pop
fnstcw
test
mov
xchg
popf
sub
popa
push
and
call
leave
inc
push
fbstp
push
sub
jmp
cmc
mov
and
stos
jo
int
inc
adc
pop
jge
arpl
sbb
sub
xor
rol
cmps
iret
push
add
and
push
(bad)
sbb
push
rcr
int3
jmp
adc
mov
ficomp
sub
mov
stos
lds
mov
and
arpl
mov
aam
test
test
ins
or
xor
stc
mov
jne
outs
dec
xchg
inc
into
(bad)
sub
adc
nop
stos
lods
dec
lods
das
push
mov
fcom
rcl
fcmovb
cld
or
or
call
lea
stos
sbb
nop
jmp
js
jno
xor
ror
ins
pop
xchg
lahf
jb
xlat
in
(bad)
push
jp
rcr
arpl
cmp
out
xor
addr16
or
mov
push
cdq
das
jmp
inc
cmp
inc
inc
sbb
ins
dec
popa
clc
cmp
(bad)
clc
bound
dec
loope
jl
xor
adc
sahf
xlat
jnp
sar
mov
push
shl
out
rol
sub
std
mov
(bad)
xchg
adc
ja
fstp
xor
iret
int
xchg
pop
sub
sub
pop
inc
in
jmp
inc
push
fdivr
(bad)
mul
cs
loop
lds
mov
xor
icebp
stos
mov
in
aam
(bad)
scas
push
xor
mov
outs
xlat
pop
pushf
or
(bad)
mov
adc
rcl
lds
inc
ficom
imul
adc
push
lds
(bad)
fisubr
push
dec
jb
or
pop
daa
(bad)
pop
dec
push
dec
nop
mov
xchg
push
mov
mov
mov
and
idiv
iret
hlt
(bad)
xchg
and
cmp
mov
xchg
ds
pop
jo
and
jl
push
or
and
jae
stos
aam
mov
pop
scas
int3
xchg
(bad)
sub
or
test
inc
adc
adc
dec
in
push
lds
mov
in
fild
add
push
scas
leave
sub
test
repnz
cmp
les
fisttp
out
inc
cmc
push
aas
cmc
mov
sbb
cmp
add
cmps
rcr
aas
adc
push
push
cli
(bad)
jmp
adc
ds
lods
test
(bad)
push
dec
xor
popf
push
fist
int
xchg
push
nop
xchg
push
pop
or
fmul
rcr
lds
xchg
lahf
sbb
mov
(bad)
fisubr
mov
and
data16
pop
imul
std
adc
loopne
imul
cdq
and
leave
mov
xchg
imul
sub
inc
les
sub
bound
jg
pop
bound
test
std
(bad)
jne
jmp
neg
sbb
pop
push
loop
aas
pop
jmp
add
mov
jp
jle
cmp
in
mov
mov
cmp
push
or
sub
leave
pushf
mov
push
es
jae
aas
sub
jmp
aam
rcl
and
sar
scas
lods
out
inc
sbb
add
(bad)
adc
fs
pop
sbb
mov
cs
je
stos
out
retf
mov
lods
cmp
adc
mov
(bad)
dec
ss
cli
mov
add
scas
movs
mov
mov
imul
aad
shr
jno
lock
ret
dec
push
loop
enter
jo
shl
sbb
out
xor
movs
push
mov
jge
jo
inc
adc
aam
or
cmp
das
into
mov
push
inc
sub
inc
sbb
pop
mov
sbb
jge
out
or
xor
repz
jmp
or
mov
dec
pop
(bad)
jmp
popf
in
pop
xchg
dec
imul
add
mov
inc
push
xchg
xchg
lea
in
mov
aad
jne
mov
leave
out
fistp
or
xchg
pushf
add
icebp
sub
or
out
mov
movs
out
les
popf
mov
movs
cmp
mov
das
mov
sbb
dec
and
fisttp
stos
in
xlat
mov
inc
fiadd
xor
adc
xchg
or
movs
mov
retf
cmp
sbb
loope
inc
cs
jb
rcr
mov
aad
sbb
jno
jmp
mov
push
into
mov
test
or
rol
jmp
adc
push
inc
fsub
outs
or
xchg
mov
cmc
mov
and
xchg
outs
mov
adc
popf
cld
dec
jp
push
ins
cmp
inc
xor
std
mov
enter
loopne
mov
and
in
fisttp
xor
fadd
lods
ret
mov
shr
cdq
push
xor
test
getsec
mov
popf
not
js
aas
inc
fdivr
sub
sar
add
retf
inc
jbe
adc
icebp
(bad)
jb
push
mov
enter
fld
push
xchg
or
or
sub
xlat
gs
push
xor
stc
mov
arpl
mov
sbb
dec
or
cmp
icebp
xchg
pop
pop
aas
fisttp
ins
sbb
cmp
out
fistp
retf
add
jnp
arpl
fmul
daa
fwait
daa
dec
sbb
push
or
ret
mov
pop
shl
sub
dec
inc
call
repz
dec
ret
cld
das
pop
cdq
add
data16
push
sub
shr
mov
test
pop
popa
stos
jl
aad
icebp
mov
fisubr
add
sub
inc
(bad)
pop
dec
push
sbb
mov
pop
mov
jmp
ret
add
ret
dec
mov
add
imul
cdq
jp
sbb
sbb
or
scas
(bad)
gs
push
popa
dec
dec
xor
add
jmp
or
ins
test
call
(bad)
pop
and
jle
sub
ins
mov
push
out
in
rcr
ror
xor
dec
xchg
outs
cmp
lds
test
ret
or
mov
mov
ret
ffreep
pop
sbb
add
cld
add
inc
movs
pushf
movs
sti
jle
add
shl
add
fwait
xchg
cwde
mov
cmp
mul
sar
xchg
sti
pop
inc
cmps
xchg
mov
mul
sar
in
dec
cs
adc
jle
sahf
stos
inc
pusha
imul
in
mov
movs
jno
retf
jnp
test
sub
cmp
mov
mov
xor
or
push
ins
sti
in
add
repnz
pop
movs
push
sub
jmp
sbb
addr16
enter
std
cli
call
addr16
cmps
pop
xchg
mov
adc
mov
outs
in
mov
xor
add
adc
cmp
push
adc
lods
(bad)
pushf
jo
shr
mov
fwait
mov
dec
daa
or
pop
or
cmp
ja
repnz
mul
sbb
dec
push
mov
cdq
mov
loopne
iret
mov
imul
std
sahf
cli
dec
test
ror
pop
jo
ins
lock
leave
xchg
push
dec
cs
xchg
js
xor
jae
adc
adc
cmp
js
pusha
std
clc
cmps
sub
pop
retf
jb
(bad)
push
cmc
scas
mov
xchg
jo
xchg
clc
push
aam
lods
pop
(bad)
sti
hlt
jno
xchg
ds
dec
call
scas
jp
nop
sub
repz
xchg
sub
movs
or
jl
pop
out
stos
xchg
mov
gs
add
lea
clc
movs
mov
(bad)
push
cmp
pop
sbb
sbb
das
add
mov
or
sub
push
push
stc
arpl
test
adc
test
cmp
pop
cmp
xchg
push
outs
into
or
mov
loopne
cmp
data16
xchg
or
fcom
cmp
cdq
mov
loope
fs
js
call
push
cwde
jbe
fadd
out
not
(bad)
loopne
pop
arpl
xchg
pop
mov
shr
test
adc
loope
cmp
and
adc
rcr
test
repnz
mov
fistp
(bad)
cs
into
cmps
add
nop
xor
push
cmp
int
add
cmps
aam
sub
retf
sbb
out
js
js
pop
mov
xor
jge
imul
mov
int3
sub
adc
jno
push
xchg
push
add
out
cmp
in
dec
dec
arpl
mov
push
sbb
pop
xor
xchg
pop
xchg
mov
jmp
xchg
mov
dec
xor
or
push
loopne
adc
or
mov
xor
data16
mov
fstp
dec
pop
ror
je
dec
pop
movs
adc
aaa
icebp
push
xor
bound
push
test
pop
(bad)
fmul
cmp
cmp
mov
sahf
arpl
pusha
jno
aam
mov
xchg
sub
adc
mov
cdq
adc
sbb
inc
pop
and
fs
mov
es
mov
out
idiv
adc
fdiv
sbb
and
fcmove
test
test
mov
push
or
inc
lods
test
pop
xchg
jns
xchg
mov
push
cdq
stos
int
adc
(bad)
ret
fistp
and
dec
xchg
pusha
retf
or
xchg
loop
outs
cmps
fsub
or
lods
popf
shr
push
cmc
imul
idiv
jnp
mov
and
jl
fistp
aaa
es
cmp
jnp
adc
lock
push
mov
or
push
out
outs
das
pop
je
rol
fdiv
ret
lock
sbb
or
and
sti
add
jns
add
and
dec
xor
cld
or
jmp
jnp
popa
lods
sbb
ds
daa
repz
rcr
push
iret
add
add
pop
add
pop
(bad)
jmp
ffreep
not
je
imul
movs
pop
(bad)
jb
or
cli
lea
adc
dec
inc
inc
pop
ja
mov
push
(bad)
(bad)
ins
stos
pop
add
or
test
(bad)
sub
shl
mov
and
cmp
xor
cmp
int
mov
(bad)
nop
dec
adc
in
or
les
or
jmp
mov
stc
and
ja
mov
jmp
jb
inc
push
addr16
(bad)
retf
or
xchg
cmps
mov
cld
jae
pusha
and
inc
xor
pop
aad
cmp
dec
pop
es
repnz
pop
stc
lock
mov
push
fnstsw
xor
das
mov
ss
pop
sbb
sbb
jle
jmp
mov
add
or
jmp
hlt
div
les
mov
sbb
and
cwde
push
xor
ret
in
and
jbe
cmp
sahf
loopne
sub
xor
push
inc
rol
retf
popa
sub
gs
dec
jmp
lds
mov
jno
pop
mov
push
clc
popa
out
xor
mov
scas
cmp
xchg
call
repnz
jae
cmc
cmp
mov
arpl
inc
ficomp
xchg
mov
pushf
ds
or
and
jnp
aad
pop
dec
sti
xor
(bad)
dec
scas
inc
popf
fsubr
lock
scas
outs
xchg
out
jno
or
out
jno
mov
add
adc
scas
inc
fwait
adc
scas
or
sub
movs
push
cmps
outs
loopne
push
aad
pop
inc
test
and
jne
mov
out
xor
movs
dec
push
(bad)
dec
add
cdq
mov
sbb
push
shr
sub
push
inc
stos
leave
call
adc
xchg
lahf
push
sti
pop
cld
(bad)
in
cld
(bad)
ja
into
mov
(bad)
cmp
xor
ss
push
(bad)
sbb
jbe
out
push
add
loope
loop
sbb
push
pop
xchg
aam
sbb
add
fldln2
mov
stc
hlt
fdiv
pushf
push
jmp
out
mov
outs
loopne
loope
sbb
shl
push
push
dec
aaa
mov
fld
shl
movs
aaa
int3
lds
imul
cld
nop
adc
stc
push
(bad)
retf
fs
mov
sbb
xchg
(bad)
not
imul
jb
es
div
sbb
rcl
mov
or
lock
iret
add
in
push
fisttp
and
or
in
aas
pop
(bad)
nop
out
fmul
jo
loop
cdq
hlt
adc
or
mov
sbb
mov
or
cmp
jno
in
or
push
push
inc
or
scas
and
inc
ret
ret
push
shr
mov
xor
idiv
jno
pop
push
xchg
outs
ja
push
into
fwait
and
ret
sub
mov
inc
sub
jns
enter
leave
jmp
jbe
test
jae
cmp
push
aad
cmps
push
mov
loopne
dec
in
fst
mov
add
dec
sbb
shl
push
or
push
clc
test
repnz
jecxz
sub
add
fcom
mov
and
call
inc
mov
rcl
push
aaa
jp
das
out
mov
cmp
test
mov
cdq
scas
idiv
imul
fsub
pop
mov
jnp
fsub
sub
push
mov
mov
mov
loope
lods
popa
(bad)
lahf
into
jo
add
ins
or
int
loop
sub
inc
shl
xchg
xor
hlt
jmp
stos
push
clc
push
mov
jmp
inc
mov
inc
adc
pop
mov
pop
fnstenv
push
fsub
sub
xchg
lahf
jo
jecxz
aad
jge
add
pop
shl
dec
rcl
movs
(bad)
(bad)
je
(bad)
xchg
jge
inc
int
in
aaa
or
sub
cmp
add
sbb
pop
inc
mov
mov
pop
jle
sbb
daa
push
push
and
sub
popa
mov
pop
enter
inc
cli
pop
in
jg
jb
imul
cdq
loopne
popa
test
fsub
int3
je
call
xchg
out
push
loop
sub
(bad)
test
gs
pop
fisub
(bad)
mov
not
scas
dec
jo
xor
mov
inc
jae
and
or
xor
sti
or
scas
jne
pop
cmps
addr16
ficomp
jmp
mov
adc
sbb
popf
addr16
fdivp
ffree
in
inc
inc
jge
jne
mov
cmps
rol
aam
and
xchg
push
inc
scas
and
leave
in
in
xchg
popf
popa
pop
sti
aaa
pop
cmp
sbb
repz
mov
pop
or
cmp
jo
add
cs
adc
xor
daa
push
bswap
es
iret
cdq
mov
addr16
jmp
sbb
adc
add
dec
mov
pop
dec
(bad)
test
mov
xchg
retf
push
rcl
addr16
xchg
cmp
mov
add
sti
sbb
dec
dec
dec
fmulp
jle
fxch
(bad)
or
sbb
out
and
xchg
dec
jbe
(bad)
jb
nop
xlat
inc
sbb
dec
pop
mov
cld
fistp
popf
xchg
or
out
xchg
movs
call
sbb
and
mov
adc
call
imul
shl
jmp
imul
and
mov
outs
sub
jmp
xchg
je
in
gs
call
scas
add
mov
sub
(bad)
mov
mov
bound
(bad)
imul
inc
(bad)
xchg
cli
lds
test
inc
imul
sub
sub
test
ficom
xor
fs
in
sbb
jnp
test
cmps
lods
in
or
sti
pop
mov
mov
(bad)
xlat
lock
mov
mov
mov
cld
rol
outs
mov
test
aad
test
adc
sub
out
push
cmp
xor
cwde
test
stos
lock
adc
mov
and
retf
out
sbb
je
out
out
outs
push
retf
cmp
ficomp
and
out
cmp
cmp
fsub
and
sub
mov
xchg
lsl
inc
lock
scas
dec
and
stc
pop
push
outs
sbb
(bad)
xchg
sub
or
jo
ret
adc
ins
ret
sbb
les
xchg
sbb
aad
call
jo
and
(bad)
or
cld
repnz
or
sbb
jne
loope
loopne
add
call
jle
sub
(bad)
es
or
ret
ins
sbb
xor
cdq
dec
mov
and
(bad)
popf
or
ret
sub
fs
rcl
mov
or
gs
mov
mov
and
ret
push
retf
inc
mov
sahf
(bad)
xchg
out
xor
xchg
(bad)
inc
mov
retf
add
sti
sahf
ja
outs
adc
inc
push
mov
xchg
scas
hlt
stos
fbstp
sub
pop
dec
xchg
pop
fs
pop
cld
in
fld
loopne
(bad)
xchg
in
sub
push
sahf
repnz
jle
push
pop
add
test
pop
mov
pop
and
mov
div
and
pusha
dec
sti
cli
sbb
ins
repnz
jae
call
pop
sub
loope
xor
inc
repz
mov
inc
sahf
sub
ds
inc
adc
or
out
mov
jmp
xor
out
cld
jge
pushf
jecxz
shl
pop
mov
in
or
sub
sub
mov
fiadd
pusha
push
or
loope
xor
pop
push
pop
push
add
scas
and
mov
loopne
(bad)
aam
icebp
xor
popa
in
push
pushf
mov
sahf
aaa
(bad)
mov
fidivr
inc
mov
les
sbb
xlat
push
jge
jmp
cmp
test
inc
ret
xchg
stos
neg
mov
xlat
stos
fdiv
stos
mov
jg
inc
fimul
sub
addr16
jmp
or
or
jns
div
dec
add
(bad)
push
cmp
mov
xchg
or
je
jns
hlt
mov
loop
nop
fdivr
repz
mov
mov
mov
cs
stos
jle
mov
fild
add
jns
or
sub
test
jmp
jns
sub
push
pop
test
into
(bad)
jns
push
inc
in
cmp
in
shl
lahf
repnz
cmp
fistp
loopne
rcr
ins
or
sbb
loopne
in
mov
pusha
cld
int3
(bad)
sbb
jg
fnstsw
sub
jl
adc
jle
mov
dec
fistp
ret
mov
sbb
aaa
or
test
and
hlt
xor
dec
mov
push
or
lods
les
adc
jae
lods
or
inc
cli
sbb
sar
test
out
mov
aas
stos
sbb
mov
adc
or
xchg
mov
and
mov
cmp
mov
ficom
lahf
and
pusha
ja
ss
mov
sub
add
adc
mov
pop
jb
ret
pop
xor
mov
xchg
pop
data16
test
jmp
mov
sbb
sbb
ins
jg
ficomp
in
retf
scas
sub
ret
fimul
iret
ins
pop
dec
push
sbb
xchg
aas
stos
int
scas
test
push
sub
fisub
mov
aam
mov
ins
(bad)
mov
push
nop
adc
popf
leave
mov
in
add
dec
cli
pop
stc
xor
ficomp
aam
or
daa
sbb
shl
pop
or
into
in
xchg
pop
or
dec
sar
inc
stos
mov
push
push
inc
or
jo
xchg
or
sahf
sbb
mov
mov
xchg
cmp
adc
sub
cmp
mov
jb
in
add
dec
std
aaa
cmp
xchg
pop
or
adc
dec
cmp
adc
lds
shl
js
sbb
and
mov
movs
mov
inc
test
adc
dec
ds
dec
outs
out
sub
mov
xor
stos
movs
pop
cmp
mov
mov
psubb
dec
dec
xor
loop
outs
retf
pop
dec
mov
mov
out
into
push
mov
stos
mov
scas
xchg
jecxz
lahf
cmp
jo
lds
and
xchg
xchg
adc
xor
cmps
sbb
aaa
jns
add
xlat
fist
fstp
sub
ss
jp
sub
cmp
jne
push
or
fwait
inc
cmp
punpckldq
int
gs
and
je
gs
test
or
cmp
cmp
pop
loopne
int
or
jle
mov
retf
inc
xchg
(bad)
dec
shr
repz
leave
cli
retf
xor
or
movs
out
adc
mov
dec
popa
jmp
cmp
ret
mov
cli
fwait
jl
lock
retf
mov
(bad)
movs
pusha
sub
pop
ja
movs
leave
inc
push
shl
sar
icebp
jae
out
int
sar
adc
xchg
add
cmp
(bad)
movs
out
mov
mov
adc
or
fdiv
stc
ins
xchg
cmp
jp
mov
out
inc
dec
cs
inc
push
jge
jle
cmp
ror
xor
mov
fs
pop
mov
xor
inc
mov
mov
fsub
dec
popa
xor
cmc
lahf
dec
clc
jmp
in
repnz
shl
jmp
es
rcr
cmp
and
cwde
sbb
stos
mov
pusha
inc
in
adc
cmps
aaa
xchg
mov
pop
pop
dec
stc
push
mov
sahf
mov
mov
mov
mov
and
fcmove
data16
je
jl
adc
cmp
jbe
lahf
jecxz
frstor
stc
aad
mov
xchg
pop
cs
push
cmp
sbb
scas
push
add
xchg
mov
ins
icebp
push
add
loope
jp
(bad)
outs
cmp
cmps
sar
add
ror
push
popa
int3
inc
mov
ret
sbb
sub
outs
and
aaa
push
push
int3
or
int
and
loope
mov
xchg
nop
pop
push
mov
mov
xchg
xor
sub
xchg
(bad)
iret
push
js
add
push
outs
mov
sbb
movs
adc
or
xchg
aaa
jmp
test
push
mov
adc
cmp
and
cmp
xchg
jmp
push
sbb
hlt
add
sbb
sub
(bad)
sar
inc
pop
std
outs
mov
lahf
scas
jb
in
adc
into
lods
mov
mov
icebp
shl
push
push
clc
(bad)
ds
ss
sub
cmps
push
add
adc
test
sub
sti
in
ins
rcl
stos
cwde
lods
ja
sub
add
inc
movs
repnz
jae
xchg
and
or
fild
pop
test
icebp
push
cmp
cmps
adc
push
imul
hlt
and
int3
imul
pop
cmp
movs
jl
idiv
jl
sub
out
mov
stos
in
mov
dec
dec
ins
fsubr
mov
mov
inc
mov
out
cmp
mov
xor
or
sbb
mov
aas
leave
dec
add
sahf
lahf
mov
xor
dec
pop
sub
mov
bound
jnp
ss
lahf
cmc
clc
or
xchg
les
cs
popf
xor
leave
mov
call
sub
inc
lds
dec
bound
jle
and
pop
mov
js
pop
jne
adc
nop
cmp
adc
cmps
ins
(bad)
in
int
mov
mov
fiadd
dec
or
jmp
cli
call
mov
mov
rol
pop
pop
jmp
jg
inc
shl
xchg
cld
sbb
cmps
and
xor
jbe
mov
das
sti
jp
fstp
cmp
jbe
enter
test
mov
inc
pop
cmps
adc
push
jecxz
add
pop
sbb
add
jne
push
(bad)
xor
dec
ret
popa
inc
std
pushf
jb
aas
and
mov
mov
iret
fcom
jecxz
fsub
aad
xchg
test
fist
lock
adc
in
lock
xor
mov
adc
push
test
test
aam
jb
xchg
xchg
(bad)
push
outs
(bad)
jl
pop
lock
or
lahf
mov
xchg
sbb
fs
sub
push
(bad)
mov
jmp
jge
sbb
(bad)
xor
cdq
imul
cli
inc
fwait
and
cmps
mov
push
fdivr
aaa
mov
xlat
mov
je
push
inc
mov
lds
push
xlat
xchg
sbb
mov
out
fldcw
dec
sub
mov
pop
arpl
mov
adc
movs
pop
bound
mov
scas
jnp
add
(bad)
ret
int
dec
mov
repz
call
std
sbb
dec
adc
je
xor
cmp
iret
movs
es
xor
push
sar
or
cmc
and
add
movs
(bad)
jnp
ss
rcl
cmp
call
push
sbb
pop
push
lock
xchg
loopne
pop
and
lods
xchg
stos
xchg
and
dec
inc
das
jae
push
xchg
gs
and
dec
add
into
xchg
cwde
or
pop
xor
xor
dec
mov
push
clc
mov
push
xchg
mov
and
sbb
mov
pop
(bad)
imul
je
jg
dec
imul
xchg
jg
sti
sub
inc
neg
mov
jg
outs
daa
inc
mov
imul
inc
mov
hlt
and
cs
stos
cli
sub
jl
and
inc
and
adc
cmp
repz
mov
pop
and
mov
mov
mov
mov
cmp
cmp
fcom
sar
sub
ret
mov
test
inc
addr16
and
std
clc
xchg
jp
repz
pushf
dec
xor
mov
aas
push
jne
push
add
inc
std
pop
iret
(bad)
jne
mov
ins
inc
stc
add
fsub
jge
add
xor
adc
rol
fsub
stos
test
sub
or
test
scas
push
loope
js
xchg
icebp
pop
xchg
shr
push
mov
sbb
and
jmp
xchg
pop
imul
lock
not
mov
push
pop
push
popa
loop
cs
shl
out
jge
dec
sbb
and
(bad)
js
sub
cmp
das
mov
in
xchg
xchg
dec
mov
jno
iret
jns
(bad)
jle
ret
lds
es
jns
inc
aad
pop
push
sbb
or
pop
fild
call
jp
(bad)
jae
out
pushf
push
inc
mov
pop
aad
dec
bound
or
mov
cmp
idiv
retf
lods
fiadd
fadd
add
pusha
push
lahf
xor
fs
loope
(bad)
imul
mov
test
cmp
call
fisub
xor
push
lods
lea
sub
push
dec
in
mov
add
mov
jg
jnp
shl
repz
(bad)
aad
ret
xchg
sahf
ja
aad
scas
sar
enter
lock
stc
fnstenv
clc
scas
into
mov
push
push
pushf
push
stc
scas
shl
test
mov
push
lock
ror
enter
xchg
outs
push
jp
adc
pusha
cmp
in
sbb
ror
inc
push
or
fild
inc
pop
lods
xor
pop
mov
or
jbe
push
addr16
add
fld
aaa
mov
daa
fsubr
xchg
ja
aas
xchg
cmp
or
cmc
xor
leave
jns
pop
sub
push
and
movs
(bad)
jmp
add
xor
loop
push
std
cmp
or
adc
mov
clc
daa
stc
mov
inc
xor
cmp
gs
push
shl
stos
test
in
inc
sbb
jne
test
dec
pushf
repnz
add
mov
xor
nop
or
push
test
(bad)
jecxz
xor
sahf
pusha
pop
repz
adc
bound
iret
pop
mov
xor
in
adc
xchg
fidiv
jmp
outs
rol
stc
cmp
mov
cmc
xchg
or
fwait
mov
sub
xor
jmp
mov
add
ret
mov
repz
xor
or
mov
ret
les
scas
int
sbb
cmc
sbb
clc
call
ja
ins
lods
and
je
ret
add
dec
jae
push
aaa
(bad)
jmp
mov
nop
inc
jg
test
mov
rcl
div
push
mov
jmp
pop
cdq
mov
jle
pop
jbe
xor
pop
ja
mov
or
mov
(bad)
xchg
mov
dec
lods
xor
movs
inc
call
imul
mov
cmp
ins
push
movs
mov
sbb
call
fnsave
jno
test
mov
das
test
neg
xchg
cmps
aam
aam
cwde
sbb
int
(bad)
inc
aas
xor
test
jmp
jnp
sahf
or
cmp
fst
xchg
(bad)
ins
inc
nop
jecxz
rcl
adc
sti
adc
movs
inc
stc
loop
pop
inc
data16
scas
push
xchg
cmovo
sbb
movs
out
push
inc
sti
lahf
pop
test
push
dec
xchg
sub
sub
and
cmps
retf
scas
jl
enter
and
add
retf
dec
jp
imul
(bad)
cmps
jg
(bad)
fbld
addr16
retf
data16
dec
arpl
xchg
outs
clc
neg
std
sub
imul
nop
ds
sub
fmul
or
add
cmc
int3
cdq
inc
mov
pushf
ror
jge
mov
sbb
xchg
pop
adc
lahf
jecxz
shr
inc
cmp
adc
jmp
loop
mov
mov
adc
xor
jnp
loope
loopne
add
inc
pop
aaa
cs
adc
jmp
cwde
retf
mov
inc
pop
pop
mov
sub
hlt
dec
addr16
xor
cmps
retf
jp
sahf
push
mov
call
arpl
push
popf
mov
in
clc
pushf
aas
jns
(bad)
clc
dec
mov
add
(bad)
sbb
popa
mov
push
cs
repz
and
cmp
fist
xchg
rcl
and
(bad)
in
dec
adc
scas
pop
test
movs
call
cld
cli
and
sub
addr16
cmp
sar
add
les
fild
in
xchg
xlat
ss
mov
cdq
ins
in
je
mov
cmp
xchg
xchg
cmc
nop
jb
movhps
fisubr
rol
mov
xchg
aam
xchg
out
push
arpl
retf
jb
je
shl
out
cmp
cmp
fistp
imul
mov
les
jo
call
fsub
sbb
mov
lods
retf
es
retf
cwde
ret
fwait
mov
add
inc
pushf
retf
stos
or
arpl
ins
push
sub
mov
push
les
loop
xor
cmps
push
pop
mov
push
stos
mov
hlt
push
scas
sbb
mov
scas
jne
leave
jle
jp
jmp
sbb
loopne
xchg
sub
test
xor
aaa
xor
mov
xlat
add
sbb
and
rcr
mov
sbb
or
lds
cmp
add
das
imul
ds
pop
inc
or
or
cs
push
jp
sahf
xlat
adc
sbb
mov
xchg
out
and
add
icebp
ss
addr16
push
sbb
ja
mov
enter
pop
daa
mov
ins
push
xor
test
mov
movs
mov
das
test
sbb
add
mov
pop
xor
cmp
in
push
xor
xchg
jb
xchg
loopne
cmps
in
push
or
mov
ror
jo
cmp
fsub
fild
dec
ret
push
xor
cmp
jle
add
cmp
push
test
aam
mov
jmp
fs
das
imul
add
jmp
mov
cmp
shl
and
xor
jecxz
out
cmp
mov
call
(bad)
(bad)
xor
jae
jl
pop
lds
ss
jno
jbe
jne
mov
xchg
outs
xlat
ins
dec
adc
push
and
inc
hlt
js
or
imul
cwde
and
mov
sbb
pushf
icebp
push
pop
in
dec
add
cmps
sbb
adc
cli
jae
test
push
in
shr
adc
scas
clc
popa
add
scas
cmps
pop
shl
fdiv
add
ret
adc
and
clc
sar
cwde
inc
addr16
cdq
shl
into
mov
das
fwait
mov
nop
xor
push
add
add
jmp
or
(bad)
add
mov
sbb
cwde
ret
add
inc
test
pop
mov
pop
or
(bad)
adc
sti
popa
dec
(bad)
lods
or
xchg
loope
mov
mov
jl
sbb
jl
xchg
stos
sub
cmp
xor
call
(bad)
lods
cmp
and
or
inc
mov
xor
lahf
leave
push
mov
lods
mov
push
cmps
ins
cmps
pop
xchg
fsubrp
icebp
sti
loopne
imul
bound
(bad)
jo
lods
movs
rcl
jmp
mov
icebp
adc
fild
mov
mov
cld
repnz
mov
fmul
and
xchg
shr
int
shl
mov
xchg
push
aaa
int3
clc
cmp
aaa
jmp
mov
jp
mov
mov
rcl
in
dec
repz
pop
loop
adc
push
dec
push
js
pushf
add
mov
inc
fild
jmp
pop
jo
sbb
test
xor
cmp
gs
ror
sub
xchg
pop
sub
loop
mov
aaa
fmul
ror
iret
sub
mov
stc
cld
and
push
bnd
jecxz
sub
out
push
je
jne
cmp
push
sub
add
xor
(bad)
push
mov
mov
adc
es
bound
ror
call
clc
and
mov
inc
std
xor
inc
pop
mov
cs
mov
and
jp
pop
cmc
push
sbb
retf
mov
push
push
fwait
repnz
jle
push
mov
popf
mov
push
add
dec
cmc
mul
dec
iret
nop
sub
xchg
cmp
jae
ins
sbb
mov
mov
shl
xchg
adc
pop
pop
ret
sahf
cmp
adc
popa
pop
mov
xchg
xlat
dec
loope
and
test
cld
pop
fild
dec
int3
inc
cmp
retf
mov
mov
jne
fdivr
cmp
push
push
(bad)
aas
push
xchg
pop
nop
xchg
xchg
add
shl
pop
add
sub
and
lea
inc
pop
inc
mov
sti
jo
cmp
stos
(bad)
jp
push
std
sar
int3
das
mov
inc
and
xchg
hlt
or
enter
pop
pop
popa
test
setle
or
or
fsub
xor
dec
dec
gs
gs
icebp
outs
push
xor
mov
push
sahf
ins
cdq
out
and
add
sbb
xchg
test
pop
xlat
sbb
jne
mov
in
retf
das
sti
cmp
cmp
push
not
push
adc
cdq
or
loopne
sub
sbb
fist
ja
mov
mov
sub
popf
loop
jo
lahf
xchg
jb
or
aad
imul
fistp
pop
xlat
xchg
mov
dec
add
ret
(bad)
aas
or
mov
fiadd
and
mov
mov
or
in
lahf
sub
popa
jb
jnp
fiadd
adc
mov
hlt
jmp
pop
sbb
es
nop
xchg
stos
pusha
xchg
sti
xor
and
ins
xchg
arpl
push
inc
mov
add
cmc
test
outs
mov
mov
xor
and
xchg
dec
or
add
sar
jbe
mov
in
mov
(bad)
jl
inc
fwait
in
mov
loopne
mov
cmp
add
rcr
pop
or
dec
mov
jmp
jle
mov
fsubr
arpl
test
(bad)
mov
stc
fadd
clc
lds
les
pop
xchg
inc
out
xchg
out
daa
rcr
inc
jmp
xchg
std
cdq
dec
ins
push
pop
or
addr16
and
jne
cwde
xor
jge
mov
aas
stos
iret
pusha
sahf
loope
push
xchg
pop
jmp
sub
inc
push
sub
push
pop
hlt
push
mov
fidivr
sbb
sub
push
add
push
cmp
push
cmp
retf
jns
pop
je
add
jbe
test
iret
adc
les
int
mov
xchg
mov
add
jbe
and
out
adc
lahf
mov
mov
add
xchg
inc
and
cwde
xchg
outs
add
out
add
call
fnstsw
push
call
add
mov
pop
mov
or
sbb
pop
mov
mov
push
pop
arpl
enterw
mov
pop
push
cmps
lods
fld
fcomip
inc
out
cdq
and
jp
test
xchg
mov
xor
pop
sbb
xchg
inc
bound
xor
and
and
pushf
popa
mov
shr
push
inc
adc
(bad)
push
aam
push
les
and
mov
repz
call
ja
and
call
dec
jo
push
(bad)
pop
mov
push
out
out
dec
add
mov
pop
movs
sbb
xor
pop
in
dec
xor
fwait
rcl
out
ins
sub
fist
in
mov
sahf
mov
div
nop
adc
out
or
xchg
cmps
mov
xchg
mov
adc
mov
dec
mov
out
mov
sbb
ret
loop
dec
in
cmp
inc
push
scas
inc
outs
fs
and
dec
call
inc
pusha
cmp
jbe
out
and
shl
enter
aaa
out
ins
(bad)
hlt
int
mov
ret
test
pop
js
jns
add
in
push
test
and
add
add
dec
adc
retf
cmps
lods
xchg
fistp
sar
pop
cmp
mov
ret
mov
clc
les
js
and
pop
fmul
call
cmp
out
out
add
add
adc
mov
or
fs
lods
ret
cmps
sbb
je
imul
ins
out
mov
xchg
ins
pop
ja
mov
and
pushf
in
cmps
daa
movs
bound
xor
lods
adc
in
mov
adc
bound
out
cdq
call
sub
aad
jne
pop
je
mov
icebp
loop
cs
xchg
ficom
je
mov
sub
sub
mov
test
aas
cmp
push
xchg
cmp
jne
add
inc
outs
or
(bad)
in
jmp
dec
sub
adc
mov
xchg
dec
cmps
fild
pop
pop
rcr
pop
add
xchg
cli
lea
jg
jmp
sub
xor
pop
div
in
ficomp
lods
mov
mov
xchg
js
neg
shl
ja
xchg
je
movs
movs
sahf
retf
leave
fcomp
fstp
hlt
inc
shr
push
cmps
popf
push
cmp
out
test
sub
in
(bad)
adc
imul
shl
dec
in
push
push
push
xchg
jbe
scas
frstor
xor
jae
retf
aas
cdq
xchg
clc
ins
bound
jb
out
xor
sbb
(bad)
or
fs
aam
fisub
push
test
(bad)
xchg
shl
jmp
jp
(bad)
adc
aaa
push
cmps
inc
daa
jnp
xchg
in
sbb
mov
femms
imul
pop
sbb
sub
cdq
pop
out
outs
cmp
loopne
adc
sbb
pop
push
gs
aad
or
shl
nop
stos
out
ins
xchg
call
cmps
jo
sbb
fnsave
std
lods
cmp
pop
mov
stos
ss
jne
fisub
scas
stos
cli
dec
scas
or
es
add
sub
or
out
dec
ds
hlt
ds
cmp
and
cdq
test
dec
push
shl
ret
adc
dec
xchg
push
push
sbb
sub
cmp
mov
and
push
mov
pop
xor
(bad)
xor
mov
sbb
cld
stos
js
xor
mov
into
xor
dec
and
subps
jmp
(bad)
and
push
leave
sbb
in
nop
pop
dec
addr16
lahf
lea
popa
and
in
jge
aaa
mov
push
sahf
xor
mov
xor
int
das
test
sub
dec
and
inc
xlat
cli
div
mov
fldenv
pop
out
stc
adc
fsubrp
test
loop
pop
ss
movs
test
push
sbb
shl
mov
jno
jge
out
adc
adc
mov
and
cmp
mov
pushf
adc
stos
mov
ja
stc
push
cmp
xchg
or
shl
sbb
mov
sbb
push
imul
and
push
cmp
das
popf
repz
fwait
pop
es
nop
jg
and
dec
shr
fidiv
jge
mov
xlat
push
xor
ins
cmp
jecxz
and
aad
and
xor
icebp
outs
mov
call
in
(bad)
shl
frstor
push
dec
test
pop
jle
push
pop
jecxz
ret
fnstsw
and
adc
nop
ret
in
sbb
or
push
add
das
inc
push
ins
outs
pop
adc
jb
stos
clc
loopne
and
rcl
rol
push
sbb
mov
outs
xchg
fild
fnsave
cmps
lahf
mov
in
icebp
sub
mov
sub
imul
push
sub
daa
adc
in
test
push
scas
jno
adc
push
les
nop
pop
mov
mov
jo
add
fidivr
add
rol
fldenv
imul
push
ror
or
cmp
(bad)
mov
mov
stc
and
int3
out
out
hlt
cmps
push
mov
xchg
mov
cmp
adc
jns
sub
add
std
mov
movs
femms
or
pop
mov
cmp
iret
adc
imul
inc
sahf
adc
and
(bad)
xchg
retf
pop
sub
out
bound
data16
loop
adc
mov
in
xchg
ret
add
push
dec
jle
cmp
sbb
mov
lea
pop
mov
lods
lds
adc
imul
mov
data16
push
mul
bound
mov
lahf
popa
aas
ins
mov
sbb
sub
fistp
push
retf
sbb
inc
pop
dec
mov
jle
out
mov
lds
(bad)
add
cs
neg
jmp
jg
jns
pop
mov
pop
fcomp
xchg
push
rcr
mov
dec
adc
adc
jnp
mov
hlt
or
(bad)
out
push
movs
or
xor
push
sar
lock
or
push
mov
inc
inc
loopne
xchg
mov
cmps
sub
mov
mov
stc
cmp
(bad)
leave
push
inc
loopne
or
sub
cmps
stos
inc
xchg
adc
push
push
inc
outs
shr
dec
int3
mov
shr
xchg
cmc
shl
rcr
add
sub
xchg
push
inc
shl
and
or
cdq
pop
out
imul
fldenv
mov
push
ret
mov
dec
xchg
xchg
add
xchg
ds
stc
sbb
jno
stc
test
scas
mov
mov
add
mov
cs
int
neg
xchg
mov
icebp
mov
lods
or
imul
adc
dec
mov
sub
push
pop
sbb
aas
xlat
fidivr
dec
aad
fs
xchg
cmp
fsub
jg
mov
mov
in
test
mov
neg
adc
jl
fwait
nop
add
push
xor
in
dec
pop
test
jae
retf
jge
mov
loope
stos
pushf
sbb
mov
mov
stc
add
inc
cld
pop
dec
scas
sub
movs
(bad)
ja
das
push
mov
dec
and
pop
xchg
sub
mov
jmp
mov
xlat
pop
stc
cmps
sub
xchg
jo
sub
add
mov
test
xchg
mov
inc
adc
mov
ret
jecxz
fst
add
(bad)
test
and
and
sub
cli
outs
lods
stos
jle
loope
inc
push
test
call
aad
int
mov
retf
jge
fwait
out
lods
pop
call
das
and
jnp
loopne
fxch
enter
pop
or
stos
jl
adc
mov
jns
mov
mov
inc
and
and
lea
in
or
daa
push
cmp
push
iret
add
ins
cmp
hlt
mov
add
movs
mov
or
aaa
cvtps2pi
sub
and
sub
sub
lods
mov
mov
jp
(bad)
sub
dec
(bad)
js
cmp
jnp
or
xor
sbb
fwait
push
in
sahf
adc
xchg
arpl
neg
nop
push
push
sbb
addr16
sar
jb
cmp
jae
js
movs
inc
pop
(bad)
imul
add
adc
sub
jmp
jl
or
imul
leave
gs
mov
push
movs
push
stos
add
retf
sbb
aam
jnp
test
push
(bad)
xchg
fs
ret
leave
inc
jl
and
icebp
fistp
jl
sub
sbb
shr
in
mov
fidiv
cmps
push
jecxz
jmp
out
cld
repz
xchg
(bad)
jle
in
dec
movs
jne
adc
test
cwde
sar
pmulhuw
adc
cmp
stos
fiadd
icebp
xchg
mov
loope
rol
add
xchg
lods
adc
pop
nop
cs
dec
(bad)
inc
das
popa
pop
cmp
cld
mov
std
pop
imul
retf
shr
cmps
xor
xchg
jbe
out
ret
addr16
inc
scas
adc
and
aaa
push
jmp
jmp
ret
lods
fidiv
aam
int3
jae
mov
push
inc
inc
jge
bnd
sbb
pop
jle
dec
inc
cmp
repz
cdq
iret
int3
fs
loopne
mov
mov
xor
adc
in
add
push
pop
aad
stc
scas
fldcw
mov
dec
stc
(bad)
sbb
mov
mov
ret
add
addr16
bound
int3
cdq
sub
or
loope
xchg
dec
or
pop
aas
xchg
ins
jo
xchg
or
xor
into
sbb
mov
xor
cmp
stos
push
test
push
daa
ret
adc
aaa
hlt
call
pop
lea
inc
add
mov
add
or
or
dec
add
stos
aad
push
popf
mul
jnp
cmp
ret
sub
fisubr
dec
ss
daa
inc
cmps
push
repnz
mov
lea
pop
ja
lods
sbb
int
out
mov
xchg
aam
cmp
test
stc
and
jbe
mov
cmp
xchg
js
std
and
test
mov
push
lods
aaa
or
mov
pop
std
loopne
push
sahf
xchg
cmp
adc
out
imul
sbb
cdq
repz
sub
in
and
dec
ret
sub
std
cmp
enter
int3
push
repnz
xchg
jb
(bad)
push
mov
imul
icebp
push
inc
jmp
add
bound
retf
cmp
inc
ret
jg
cmp
leave
clc
inc
inc
and
cwde
mov
inc
cmp
movs
loop
aad
cmp
jns
sub
test
add
das
bound
out
fdivr
outs
sbb
mov
jne
out
scas
fwait
mov
push
and
out
mov
jns
scas
push
jmp
sub
jae
(bad)
fcom
mov
xchg
and
adc
mov
pop
jle
mov
mov
repnz
lods
call
out
push
lods
retf
sar
call
add
pop
shl
cdq
movs
adc
pop
xchg
push
pop
push
arpl
jne
mov
mov
int
outs
(bad)
gs
stc
xlat
in
push
sbb
push
popa
test
add
mov
sbb
add
adc
fst
ret
jg
ins
cmp
shr
fcom
popa
mov
sbb
(bad)
jp
cwde
mov
pop
jno
mov
xchg
pop
imul
pop
outs
shl
rcr
mov
push
shl
pop
xchg
pop
jns
ja
cmp
icebp
fisttp
out
data16
(bad)
hlt
sbb
xor
mov
dec
gs
or
jle
xor
stc
sub
in
not
pop
inc
daa
xchg
sbb
xor
movs
mov
repnz
lods
inc
adc
sub
and
pop
add
test
cwde
fwait
xor
ins
lods
xor
mov
push
jmp
js
sub
bound
sub
jmp
mov
pop
retf
cwde
into
scas
sub
or
das
push
not
mov
sbb
pop
repnz
(bad)
je
test
pop
outs
daa
xchg
jmp
add
xchg
pusha
jecxz
popf
and
daa
xchg
mov
add
inc
fstp
sbb
mov
(bad)
mov
arpl
jnp
mov
aam
retf
cmc
not
mov
push
stos
lods
shl
mov
jecxz
mov
mov
aaa
xor
lods
xor
in
xchg
jno
adc
cmp
xchg
loope
xchg
fisttp
pop
fucomp
(bad)
icebp
lods
stos
fmul
test
pop
or
mov
ret
xchg
sub
inc
mov
push
std
inc
ins
cdq
into
out
pop
mov
lea
rcr
push
dec
(bad)
sbb
and
test
(bad)
inc
cmp
sahf
or
inc
fs
scas
leave
mov
loop
lods
adc
cwde
cwde
loopne
call
mov
shl
xchg
push
pop
lds
cs
adc
loop
sub
mov
inc
sti
loop
bound
xchg
stos
leave
(bad)
(bad)
xchg
push
xor
push
xor
jl
outs
mov
inc
push
cwde
or
push
dec
icebp
addr16
sbb
cmp
dec
ficom
jb
or
jle
or
mov
retf
(bad)
mov
xchg
dec
add
cmp
mov
movs
in
xchg
repnz
xor
fstp
and
dec
(bad)
mov
pop
les
stos
xchg
je
cmc
iret
or
jg
sar
mov
popa
loope
push
call
inc
jbe
push
dec
push
int3
mov
mov
ins
pop
arpl
rcr
add
bound
add
addr16
ins
xchg
inc
push
je
mov
push
xor
inc
cmc
cmps
mov
xor
in
mov
mov
mov
cli
(bad)
lahf
push
scas
inc
(bad)
mov
cs
push
mov
jb
cli
sbb
je
cld
push
xor
dec
addr16
push
mov
push
xchg
fldcw
push
les
fnstsw
pop
push
xchg
mov
mov
jo
sbb
inc
jb
arpl
push
pop
xchg
mov
push
dec
mov
setne
xor
and
push
sti
push
and
cmps
mov
jne
dec
xchg
into
sahf
lds
xchg
ja
cmc
inc
pop
cdq
inc
sbb
pusha
movs
add
mov
aad
adc
push
xor
sub
xchg
(bad)
mov
rcr
pop
in
test
mov
fs
scas
ja
xchg
test
movs
adc
jo
pop
mov
push
mov
inc
mov
(bad)
nop
fs
jne
cmc
push
push
lea
ja
fisttp
pop
imul
jmp
lods
pop
cwde
mov
js
mov
pop
mov
xchg
aad
xor
fbstp
jae
mov
std
dec
jge
xchg
jo
ret
stos
pop
aas
fcomi
sub
or
sti
loope
into
xchg
out
jbe
test
push
fist
mov
mov
mov
jmp
dec
stc
scas
shr
(bad)
push
into
jge
leave
leave
add
in
scas
sub
or
mov
aaa
cmps
cmc
in
cdq
sahf
ja
popa
aas
push
lods
sbb
mov
and
daa
sub
rcr
neg
test
mov
xchg
push
fiadd
mov
rol
in
out
inc
gs
int3
mov
inc
push
repnz
ret
and
sbb
shl
repnz
aaa
test
xchg
mov
fisttp
sub
test
jmp
ja
adc
xor
mov
cli
adc
sub
mov
sti
lods
mov
arpl
dec
mov
mov
loope
lock
imul
test
adc
lea
sbb
jmp
pushf
lock
jae
repnz
arpl
retf
push
clc
clc
pop
mov
mov
inc
pop
pop
sar
mov
adc
and
(bad)
loopne
int
mov
sbb
idiv
lds
push
xchg
mov
shl
in
data16
mov
pop
jb
jle
es
das
xor
mov
push
in
jae
(bad)
dec
test
mov
add
or
jge
stos
iret
push
retf
or
mov
jne
and
sar
jmp
push
cmp
ss
xchg
(bad)
add
(bad)
ins
xor
xor
cmps
inc
iret
movs
(bad)
retf
xor
ret
leave
push
pusha
pop
das
mov
mov
fidiv
jp
xor
aad
cmps
je
add
in
push
pop
xchg
imul
xchg
ins
lods
setg
inc
add
ins
push
mov
ret
push
fdivr
add
adc
sti
and
push
fcom
mov
add
cmps
pop
dec
mov
mov
xchg
sysexit
les
outs
jno
test
ss
add
push
repz
aaa
or
aad
shl
or
mov
int
xchg
xor
inc
retf
std
inc
cmp
mov
sbb
sbb
inc
into
or
mov
adc
or
inc
inc
mov
ds
mov
adc
scas
sub
retf
in
and
sti
mov
or
ins
fnsave
jmp
add
test
cld
cld
aad
jae
mov
(bad)
dec
fld
dec
and
retf
mov
xchg
iret
jmp
cli
adc
iret
inc
push
cmp
push
imul
mov
xchg
fisub
pop
nop
cmp
outs
call
fcomp
icebp
int
or
mov
jl
push
in
int3
add
or
call
xor
cdq
test
sbb
jo
sbb
push
imul
xor
mov
pop
stos
jbe
dec
or
jl
and
mov
push
sahf
push
shl
adc
jmp
push
and
jnp
loop
push
inc
(bad)
ss
in
pop
out
inc
sbb
push
xchg
fst
sub
in
ret
mov
cmp
fmul
mov
test
cld
xchg
push
xchg
and
cmovns
push
mov
jecxz
fst
lahf
and
mov
dec
cmp
pushf
cmc
xor
push
xor
sbb
test
(bad)
test
jo
xchg
neg
add
pop
jno
mov
xor
jmp
xchg
repnz
sub
ret
xor
(bad)
mov
push
das
nop
sbb
cs
xchg
inc
and
fbld
cmp
addr16
out
pusha
sub
cmp
es
outs
aaa
loop
div
dec
mov
adc
hlt
mov
sbb
daa
mov
aas
das
ja
mov
and
mov
repz
mov
stc
es
sub
stos
xchg
bound
sub
fistp
shl
loop
lahf
mov
fistp
out
mov
xor
dec
xchg
push
clc
idiv
xor
xlat
jns
imul
retf
cmps
cmc
in
cmp
scas
xor
sahf
mov
sti
xchg
jge
stos
push
nop
sar
popf
ret
sub
imul
or
icebp
inc
mov
stc
mov
(bad)
mov
and
xor
jno
mov
mov
sahf
(bad)
jp
add
mov
(bad)
jmp
cmps
in
or
jae
push
push
stos
xor
outs
mov
cmp
and
jae
std
pop
pushf
jmp
fs
bound
inc
and
sbb
cld
icebp
dec
nop
or
sbb
mov
mov
(bad)
(bad)
and
jo
jmp
dec
movs
jne
retf
lods
mov
lods
imul
imul
ss
test
shl
out
push
sub
arpl
jl
xlat
and
mov
iret
rcl
pop
push
pop
into
call
pop
jl
repz
push
xchg
stos
repnz
(bad)
fidivr
ss
xchg
push
in
or
not
int3
out
fld
outs
fist
jp
shl
out
jno
inc
iret
cs
mov
dec
ret
ret
fsubr
push
aas
xor
adc
pop
loope
pop
xchg
outs
mov
sbb
nop
xchg
and
pop
push
mov
and
enter
xor
xchg
mov
and
pop
les
and
out
and
(bad)
cmps
pop
movs
mov
dec
mov
mov
or
jg
dec
dec
jb
out
retf
(bad)
cmc
es
pushf
jp
icebp
lods
cmc
pop
fsub
sub
mov
lods
adc
stc
mov
xor
mov
mov
fwait
add
mov
retf
mov
daa
sub
adc
cmp
sbb
pushf
loop
cmps
mov
aaa
iret
add
mov
mov
outs
cmps
inc
test
mov
pop
add
cmp
push
pop
sub
(bad)
arpl
and
lea
xchg
arpl
adc
popa
push
es
mov
mov
ins
fdivr
mov
mov
jb
jp
ja
lea
add
mov
ss
lds
(bad)
cld
in
out
test
jmp
cli
stc
out
cwde
int
sub
sub
pop
addr16
outs
fisttp
mov
fisub
fcomp
mov
jne
ror
inc
cmp
add
das
sbb
leave
sti
hlt
scas
jbe
dec
test
mov
mov
daa
or
pop
test
aam
and
fisttp
xchg
int
dec
push
or
adc
fucom
xor
(bad)
movs
hlt
dec
or
fld
addr16
pop
adc
mov
scas
iret
pop
adc
out
xchg
jmp
xchg
out
xchg
inc
movs
nop
lahf
push
int3
dec
mov
push
jmp
mov
push
adc
fsub
mov
loop
or
out
dec
pop
ins
jnp
icebp
ss
inc
dec
gs
push
xchg
ja
retf
dec
inc
ins
push
movs
pusha
push
sub
popa
xchg
push
mov
rol
ins
or
push
mov
or
jo
cmps
rcr
into
std
mov
outs
in
out
ins
std
cmp
stos
lods
sub
pop
sub
outs
lea
ror
retf
sub
adc
ret
xor
sti
mov
lahf
mov
mov
jmp
retf
popf
and
repnz
fs
adc
xor
xchg
ficom
mov
pusha
push
push
lahf
xchg
sbb
sbb
(bad)
jo
fdiv
push
popa
imul
lds
inc
jle
mov
popf
jne
mov
test
aad
test
(bad)
mov
mov
jae
mov
jmp
in
push
rcl
inc
mov
add
sub
(bad)
cmc
push
push
push
mov
(bad)
adc
dec
add
jle
cli
mov
inc
push
jp
cmc
nop
je
shl
jge
jecxz
jmp
cmp
in
rcl
call
xchg
pusha
and
jp
pop
mov
lods
lods
mov
jle
jecxz
adc
ret
rcl
inc
push
and
scas
aad
pop
jo
mov
fimul
xchg
pop
test
inc
mov
out
addr16
cmps
scas
int3
test
loope
shr
popa
(bad)
sub
inc
mov
dec
jg
mov
inc
stos
fild
scas
call
push
add
out
test
jge
loopne
icebp
popa
icebp
outs
adc
jg
xchg
pop
mov
mov
outs
pop
jne
outs
sbb
xchg
sbb
mov
xor
push
popa
in
mov
and
pushf
int
push
sub
adc
dec
dec
ja
jne
dec
mov
add
and
or
mov
jmp
mov
cmp
sub
fmul
sbb
mov
imul
int
xchg
pop
adc
cmp
add
inc
addr16
xor
mov
scas
adc
arpl
xor
call
push
xchg
cmp
add
sahf
ds
adc
fwait
jp
lods
daa
inc
dec
push
(bad)
les
mov
movs
enter
daa
retf
js
dec
andnps
ins
sub
mov
movs
adc
push
test
std
fsubr
sti
aaa
jbe
imul
jle
cli
and
sbb
add
jecxz
in
cmp
inc
mov
jmp
pop
(bad)
fcomp
mov
push
pop
loope
mov
stos
add
popa
inc
rcr
hlt
shl
xor
sub
scas
dec
std
call
sub
out
std
xor
jge
fstp
push
mov
ret
imul
or
or
lahf
mov
or
xor
(bad)
ror
clc
(bad)
sub
int
loopne
sbb
shl
sahf
and
loope
out
mov
xor
pop
push
cmps
js
push
mov
mov
xlat
ret
pop
and
repz
mov
xchg
dec
push
cdq
int3
xchg
mov
xchg
push
cli
sahf
stos
jo
shl
outs
dec
fcmovnu
clc
ins
mov
sub
or
mov
rcl
pop
push
mov
and
popa
stos
rcl
enter
or
pop
stos
jo
mov
push
imul
popf
pop
fwait
sahf
fsub
iret
and
jp
lahf
retf
cmps
mov
jo
mov
fimul
xchg
jbe
add
add
mov
ffree
and
xchg
and
js
mov
clc
mov
repz
out
jmp
pop
add
leave
jmp
xchg
pop
ins
iret
loop
and
int
outs
jbe
inc
and
adc
mov
pop
xchg
lock
into
sub
fisub
cmp
push
mov
push
lds
out
ror
xlat
ins
inc
xchg
jg
loopne
ror
movs
pushf
outs
std
adc
loope
gs
sbb
pop
inc
mov
push
cld
jmp
stos
stc
in
test
cmp
data16
imul
repz
and
cs
mov
shl
lock
(bad)
push
sti
dec
cld
sbb
js
sbb
inc
movs
xchg
data16
shr
or
cmp
fbld
aaa
pop
inc
mov
mov
inc
fdiv
xchg
mov
jno
pushf
loope
cmp
lahf
pop
fdiv
pushf
mov
test
jno
add
xor
lahf
js
cwde
ror
daa
les
pop
dec
and
popa
imul
cmp
ror
stos
mov
adc
mov
icebp
dec
lods
cmp
cmp
mov
sbb
mov
xor
stos
imul
pop
stos
jmp
xor
inc
jae
mov
das
daa
call
outs
push
or
lahf
sti
xor
rcl
jbe
cmp
mov
xor
repnz
jne
xchg
je
jo
fucomp
mov
xchg
cdq
xchg
jge
test
or
wrmsr
xor
jb
outs
aam
and
push
gs
stos
ret
xor
xchg
and
stos
and
jle
pop
cmps
fnsave
retf
fild
jge
cmps
mov
out
out
pop
jnp
aad
fidiv
sub
inc
pop
sbb
mov
dec
out
data16
ja
jle
loopne
sbb
fwait
xchg
pop
lods
sbb
pop
xor
(bad)
adc
loope
sbb
fwait
addr16
jecxz
mov
lds
in
inc
popf
xor
scas
bound
inc
pusha
adc
mov
fst
mov
xor
mov
sbb
loope
mov
or
mov
popa
ficomp
jmp
hlt
mov
popf
inc
jmp
enter
xchg
into
cmp
inc
jp
xor
jecxz
pop
push
mov
shl
out
sahf
clc
push
xlat
sti
push
adc
and
ret
dec
or
in
in
sbb
test
(bad)
cmpxchg
ins
cmp
mov
jle
xchg
stos
cli
push
mov
mov
jl
aas
fld
dec
jne
ins
icebp
jae
or
mov
mov
rol
(bad)
xor
outs
sub
int3
mov
add
sbb
mov
ds
pop
es
repnz
push
and
pop
lods
ja
sbb
movs
mov
sub
in
daa
push
out
fadd
shl
ins
inc
mov
xchg
pusha
cmp
cwde
fnstsw
ror
xor
(bad)
mov
sub
aas
mov
test
popa
(bad)
out
fwait
add
push
fidiv
push
push
sub
in
sub
xlat
and
push
repnz
push
in
into
adc
xchg
idiv
iret
sub
inc
pop
cmp
sub
mov
sub
mov
nop
pop
pop
arpl
shl
cwde
inc
je
pop
xchg
aam
mov
(bad)
cmp
rcl
stos
inc
iret
test
out
adc
xlat
jmp
xchg
into
std
sbb
jbe
lahf
adc
sub
cmp
lods
call
(bad)
push
les
add
lds
jb
dec
cwde
hlt
push
pop
push
add
es
sub
jno
daa
mov
test
aaa
(bad)
and
out
jne
shr
jne
shl
jle
adc
inc
dec
enter
jo
je
stc
adc
ffreep
shr
cmps
pop
movs
adc
push
xchg
push
mov
(bad)
loope
scas
loopne
cmc
fcmovu
or
enter
mov
sub
add
xchg
mov
xchg
pop
jecxz
dec
rol
mov
jle
dec
or
xor
imul
fisttp
xor
cs
pop
shld
mov
stos
in
or
push
cmc
inc
out
in
and
jmp
pop
jg
pavgw
inc
js
add
pop
ins
pop
xor
std
retf
xchg
jne
pushf
hlt
pop
clc
jnp
jecxz
pop
test
dec
xchg
and
inc
mov
dec
mov
add
sub
jnp
xchg
sub
dec
and
pop
cmps
out
inc
jns
jo
push
idiv
retf
adc
mov
adc
pusha
iret
retf
dec
sbb
popf
in
mov
cdq
or
pop
(bad)
fldenv
sub
fisub
movs
sub
sbb
fbstp
test
jnp
call
lods
popf
jb
cdq
mov
data16
jno
xchg
inc
fadd
pmaxub
mov
mov
cdq
or
jb
jp
nop
mov
adc
and
adc
jl
mov
outs
cmps
int
test
or
mov
scas
inc
inc
jbe
cld
xchg
add
(bad)
data16
arpl
and
jmp
nop
lock
or
ds
leave
dec
mov
sub
data16
adc
js
gs
cdq
in
pop
mov
out
pop
xchg
xchg
cmp
or
pop
push
sub
sti
loop
or
call
aam
fisubr
pop
jne
add
fsub
push
and
jmp
outs
push
mov
inc
mov
sbb
in
cmp
out
push
adc
call
lahf
mov
rol
shl
push
nop
ins
dec
dec
xor
or
scas
add
outs
sbb
xor
xchg
sar
sub
rcr
pop
(bad)
daa
mov
lahf
and
inc
(bad)
jmp
sub
or
and
enter
push
and
jbe
fsubr
pop
(bad)
sbb
icebp
popa
lds
test
lock
push
mov
or
xor
mov
cmps
cmp
test
mov
adc
mov
pop
icebp
ret
jns
sbb
mov
retf
xor
ror
xchg
iret
call
imul
push
cmp
test
addr16
xor
aad
lock
cdq
push
pop
cmp
xchg
xchg
cmp
push
nop
enter
and
sub
lock
adc
mov
mov
movs
ret
gs
mov
es
inc
movs
push
dec
sbb
retf
inc
dec
les
xchg
jb
cmps
mov
mov
sbb
inc
dec
les
dec
jmp
loopne
mov
add
or
pop
fneni(8087
rol
fisttp
mov
xor
mov
mov
ds
cdq
push
jns
sub
mov
sbb
stos
outs
sbb
inc
mov
sbb
or
out
repz
fxch
int3
push
nop
pop
iret
bound
pop
fwait
xor
dec
cmp
stc
inc
movs
sbb
jl
cmp
mov
popf
aas
gs
jb
scas
popf
push
repnz
or
sub
out
nop
jbe
lahf
out
(bad)
mov
popa
sub
test
pop
mov
mov
inc
repz
mov
sub
fdiv
add
dec
push
sub
inc
into
nop
push
push
inc
inc
ins
pop
pop
in
jge
inc
cmp
dec
or
lock
mov
imul
push
push
push
into
pop
sub
fnstenv
popf
push
mov
dec
icebp
inc
dec
mov
mov
mov
mov
xchg
in
(bad)
movs
or
ins
xor
int
mov
xor
daa
test
sub
lea
aad
fld
jbe
nop
or
mov
aam
fisubr
xor
iretw
cmp
dec
jmp
push
sub
mov
mov
add
data16
or
xchg
jmp
in
invd
mov
and
not
mov
jmp
push
shl
jne
bound
test
xchg
and
je
mov
jo
popa
(bad)
loopne
sbb
mov
adc
jmp
data16
aas
pop
xor
fcmovnb
fsubr
test
scas
dec
idiv
pop
(bad)
sub
mov
ja
aam
sub
rcr
sbb
das
addr16
xchg
ret
stos
pop
mov
cld
pop
adc
es
loop
or
movs
fwait
inc
leave
in
mov
popf
cmp
stc
or
fistp
add
bound
int
cld
xchg
mov
icebp
mov
test
dec
(bad)
pusha
sub
loopne
xor
xor
std
add
sahf
das
push
mov
call
jmp
dec
and
shl
sti
add
cmps
int3
ret
cmp
out
or
cmp
neg
out
ins
push
mov
popa
test
fcmove
add
daa
or
push
stos
push
ins
je
cs
popa
inc
sbb
lahf
repnz
aad
mov
ret
and
scas
cmc
cdq
outs
popa
test
ret
fdivp
je
into
fadd
or
test
cmps
aaa
cld
mov
pop
pop
xchg
fbstp
adc
xor
dec
ins
out
mov
out
outs
inc
das
fild
sub
clc
int
mov
sub
hlt
iret
mov
das
pop
mov
stos
jg
in
mov
repnz
sahf
aaa
xor
inc
mov
(bad)
stos
xor
clc
loope
ret
and
jbe
sub
cmp
sbb
jmp
sub
adc
repnz
fs
or
int3
lods
out
pop
adc
icebp
push
or
aaa
(bad)
dec
push
mov
mov
inc
fimul
mov
cdq
xchg
retf
or
sbb
neg
mov
ret
mov
sar
in
fwait
call
data16
cmps
pop
imul
push
mov
jno
push
inc
adc
dec
sub
in
gs
loop
jle
test
push
cmps
je
xchg
inc
push
xchg
shr
xor
inc
mov
push
les
pop
add
in
ins
dec
jle
nop
mov
cdq
add
popf
pop
inc
jge
add
movs
(bad)
cli
shl
jae
and
push
scas
call
setbe
lock
in
js
pop
cmps
mov
data16
fucomp
cwde
adc
jmp
inc
cwde
cmp
sub
jbe
push
and
sub
pop
push
(bad)
adc
mov
aam
jg
mov
dec
in
mov
mov
aaa
xor
dec
aas
out
lods
repnz
jecxz
or
inc
xor
(bad)
clc
(bad)
dec
ja
mov
mov
pop
xor
or
sbb
pusha
mov
sar
(bad)
jae
adc
jnp
stc
push
loop
(bad)
dec
sub
rcr
ja
pusha
lods
(bad)
sahf
sbb
stos
ror
and
nop
rol
jmp
out
cmps
jl
repnz
in
mov
xchg
call
clc
xchg
push
mov
push
fistp
mov
cmps
sub
xchg
pop
jno
out
mov
shr
lds
das
push
mov
adc
ins
jl
xlat
movs
or
cmp
popa
jmp
lock
xor
inc
jg
in
mov
xchg
mov
cmc
inc
inc
int3
outs
fisub
mov
cli
ret
(bad)
push
push
adc
pop
clc
and
imul
lea
dec
(bad)
rcl
pop
xor
in
pop
arpl
push
and
xor
pop
adc
cmps
push
sbb
cmc
adc
jmp
and
jbe
and
push
enter
retf
je
std
loope
call
and
pop
cdq
mov
outs
stos
mov
jns
inc
loopne
xchg
push
aam
inc
jle
sbb
xor
push
fimul
sbb
ror
inc
push
add
cmp
jae
je
jnp
mov
xchg
and
(bad)
push
mov
test
in
push
mov
inc
loop
pop
shl
stos
shl
sahf
pop
sub
pop
fisub
push
mov
or
mov
(bad)
xor
jp
scas
mov
push
push
inc
out
mov
aad
mov
call
cmp
sbb
mov
cmp
xchg
xor
sub
mov
scas
sahf
pop
in
mov
call
fbstp
mov
pop
xor
js
sbb
shl
pop
rcl
pop
scas
mov
mov
xchg
mov
leavew
ficomp
leave
out
ds
sbb
adc
and
mov
mov
xor
call
outs
push
or
lea
mov
sub
std
daa
push
xor
lods
push
push
inc
cmp
jbe
movs
sbb
cmp
popf
loop
pop
or
ret
mov
mov
pop
or
pusha
shl
cmp
jbe
add
je
pop
ins
jb
repz
xchg
adc
xor
call
scas
inc
les
outs
adc
je
xchg
repnz
movs
sbb
loopne
add
call
push
addr16
arpl
mov
cmp
or
xchg
pop
cmp
inc
mov
mov
ds
pop
ss
mov
call
fstp
fs
jne
mov
jg
lea
xlat
cmp
xor
sub
call
cmp
in
fiadd
in
or
xchg
xor
adc
or
jno
call
stos
js
call
inc
mov
cmp
mov
cmp
xchg
lock
jae
mov
sbb
pop
data16
lods
push
push
push
(bad)
fsub
cli
mov
popf
(bad)
mov
or
jmp
mov
xchg
mov
out
inc
movs
(bad)
mov
xor
mov
mov
fiadd
out
(bad)
dec
dec
mov
ins
sub
or
inc
test
ins
mov
xor
and
xor
push
jne
into
mov
adc
or
outs
push
xchg
div
int
ret
(bad)
ficom
movs
push
ret
sbb
xor
mov
cmp
mov
dec
ficomp
ins
push
clc
scas
mov
cmc
lea
aam
retf
arpl
sub
push
cmp
dec
iret
jge
or
jo
jae
and
or
push
push
daa
(bad)
lods
xchg
je
jae
in
ret
add
push
rcl
push
cmp
add
push
out
fsubr
xchg
add
adc
jmp
call
test
push
cmp
mul
pop
xchg
lahf
pop
mov
pop
std
jnp
pop
pop
inc
sbb
das
fild
int3
stc
lahf
cmps
test
movs
pusha
cmp
(bad)
cs
aam
in
cmps
xchg
stc
inc
cmp
jmp
pop
mov
xchg
hlt
push
cmp
cmp
mov
pop
or
pop
test
cdq
jns
addr16
nop
mov
adc
or
inc
fild
pop
add
adc
bound
out
clc
neg
call
stc
jecxz
and
jb
add
cmp
(bad)
fcmovu
sub
cmp
cmp
dec
cmp
loop
in
fsub
mov
pop
push
hlt
add
test
xchg
shl
push
adc
adc
xchg
into
inc
cmps
dec
mov
adc
pop
rcl
jp
movs
retf
lahf
repz
push
and
cld
push
lock
mov
push
sti
push
inc
adc
sub
mov
dec
cmp
jnp
ins
movs
movs
repnz
inc
mul
xor
outs
enter
mov
(bad)
sub
dec
pop
inc
xor
loopne
add
push
xchg
pop
into
jge
stos
and
xor
lods
mov
sub
rcl
aaa
push
pop
xchg
mov
jne
push
mov
in
int
(bad)
in
repnz
mov
fstp
ds
test
or
cmp
lods
pop
inc
push
sbb
lahf
int3
jmp
popf
retf
stos
xchg
inc
pop
xor
test
sub
or
imul
xchg
xchg
rcr
(bad)
xor
nop
aad
(bad)
out
sbb
outs
push
div
inc
sub
icebp
out
scas
mov
cmp
sub
popa
xchg
jb
sbb
sub
movs
and
mov
or
mov
jl
mov
and
dec
aam
add
push
sbb
es
clc
fdivr
inc
adc
and
mov
mov
adc
clc
sbb
leave
popa
sahf
aas
fs
pop
xor
sub
pop
imul
into
out
push
mov
cld
jno
xor
pop
pusha
out
pop
outs
inc
inc
arpl
mov
push
jg
xchg
hlt
in
sub
jbe
mov
push
cmp
inc
shr
mov
gs
loope
xchg
cmp
sbb
sbb
dec
push
in
sar
pop
in
mov
sar
(bad)
imul
cs
mov
das
push
jmp
jge
test
int3
bound
sub
ins
xor
pop
frstor
xchg
dec
movs
(bad)
cmc
dec
inc
fadd
test
icebp
jp
mov
push
sbb
ret
xchg
into
dec
mov
pop
cmp
imul
xchg
int
outs
add
push
jle
in
ss
dec
fiadd
sbb
data16
clc
lods
sbb
movs
(bad)
(bad)
sub
xchg
cmp
push
stos
mov
xor
leave
xor
add
dec
out
addr16
scas
bound
repnz
in
cmp
add
cld
ret
cdq
inc
inc
push
inc
out
jb
jno
sar
pop
and
jns
xor
movs
outs
inc
imul
inc
cwde
add
xchg
movs
mov
push
mov
scas
aaa
mov
aam
jmp
or
adc
out
mov
add
jge
mov
cmc
inc
test
mov
inc
cmp
cmovb
(bad)
dec
ja
mov
pop
imul
lods
sub
xchg
jl
ret
addr16
mov
ret
mov
xor
adc
push
test
cmps
push
in
push
add
mov
fistp
jns
retf
sbb
mov
lmsw
inc
ud1
cmp
inc
cmc
sbb
xor
jnp
ja
xchg
pop
std
test
pop
sbb
mov
ins
pop
jp
(bad)
add
ja
imul
lods
push
rol
dec
mov
xor
arpl
popf
(bad)
fld
gs
pop
xchg
je
xor
test
jnp
pop
les
and
add
add
fldenv
mov
push
nop
push
shl
gs
sub
push
push
xchg
jno
adc
jb
test
mov
push
mov
in
push
mov
mov
adc
or
dec
imul
add
add
int3
push
add
sub
sti
hlt
xchg
cmp
lahf
(bad)
mov
jmp
cmovl
jg
add
inc
push
out
rcl
pop
inc
xor
dec
add
ss
es
mov
sbb
pop
inc
stos
(bad)
test
jbe
mov
mov
fcom
sub
outs
shr
out
and
adc
popa
jnp
xchg
dec
jnp
sbb
in
mov
rcr
xchg
adc
sar
lds
adc
mov
out
sub
aas
add
test
mov
retf
add
jl
aas
cli
rol
xlat
jnp
call
mov
ror
cmp
xor
scas
dec
pop
rcl
shr
push
lods
test
cmc
pop
(bad)
stos
mov
inc
shl
pusha
iret
lahf
sar
mov
jmp
pop
(bad)
inc
in
mov
pop
nop
mov
je
push
xchg
xor
xor
test
outs
iret
pop
out
stc
dec
push
mov
cmp
outs
fxch
cmp
jb
or
stc
shr
test
loope
xor
test
mov
scas
xor
les
cmc
inc
sti
fiadd
rcr
jbe
mov
test
lea
dec
fs
sbb
fdiv
enter
cwde
dec
loop
imul
cmp
daa
add
dec
xor
cmp
mov
xor
ret
pop
lock
jne
ret
xchg
in
aam
push
jo
and
sbb
and
dec
ja
inc
jecxz
(bad)
out
pop
sbb
push
dec
rcr
stc
mov
xor
inc
mov
jle
rol
mov
call
push
cmp
fiadd
js
leave
fld
shr
mov
jns
lea
jmp
cld
stos
push
sbb
cwde
ret
out
mov
add
retf
sbb
mov
retf
sub
fisub
pop
xchg
sub
inc
sub
and
mov
mov
jmp
sub
cwde
jmp
lods
inc
adc
lds
push
xor
movs
xchg
adc
stos
dec
cdq
xor
fsub
cmp
(bad)
in
mov
add
fimul
fisttp
push
lods
xchg
in
bound
lock
(bad)
dec
je
add
fild
ins
pushf
xor
adc
adc
retf
cdq
cmp
pop
sub
and
xor
push
gs
jle
stos
add
pop
cmp
sti
lahf
xchg
and
add
ja
popa
dec
es
mov
ret
and
jmp
ins
adc
inc
lahf
iret
pop
xor
mov
sbb
rol
gs
pop
cwde
ds
clc
movs
xchg
outs
xchg
and
out
lods
mov
ins
aaa
fidiv
movs
ficomp
lods
pushf
dec
fnstcw
jne
mov
movs
ret
adc
pop
or
dec
xlat
xlat
mov
popa
sub
movs
bound
inc
xchg
jo
push
push
cmp
add
mov
add
xor
mov
or
and
loope
xchg
cmp
push
in
test
push
mov
cmp
jns
jns
xor
or
jl
nop
mov
xor
dec
ss
sbb
sbb
push
jae
cmp
dec
or
inc
mov
jmp
out
lahf
repnz
inc
retf
sub
mul
lds
addr16
or
repnz
cmp
fild
ins
gs
icebp
mov
add
pushf
in
lds
sbb
jmp
xor
std
daa
rol
jmp
or
jne
push
jb
mov
cmp
fwait
sub
mov
rol
in
arpl
or
repz
int
jnp
ins
mov
(bad)
jnp
jmp
test
add
push
out
mov
sub
out
or
fs
xchg
add
popa
mov
or
popf
mov
sbb
out
cmc
leave
sbb
enter
rcr
adc
retf
dec
xlat
out
jmp
loope
mov
cmps
and
or
addr16
inc
sub
cmp
mov
ret
cmps
add
ret
or
adc
ret
mov
cs
sub
dec
cmps
stc
fcomp
lods
or
fs
pop
movs
inc
jbe
fwait
cmp
pop
ins
pop
xchg
retf
fcomp
xchg
pop
popa
fimul
xchg
jb
call
or
out
es
sub
aad
scas
ret
mov
setl
or
cmp
hlt
jp
mov
sahf
cwde
jbe
adc
lock
sub
fisubr
ret
pushf
push
leave
inc
mov
adc
push
stos
test
out
push
movs
xchg
inc
or
push
pop
sbb
hlt
in
out
aad
ret
cdq
fcmovu
inc
test
mov
cmp
mov
cmp
mov
pop
bnd
or
mov
jbe
mov
test
arpl
mov
les
test
(bad)
adc
or
cli
out
imul
mov
adc
out
and
jnp
push
sbb
xor
imul
inc
sahf
call
or
mov
or
pusha
jl
ins
inc
jno
sub
popfw
mov
adc
out
call
out
push
pop
sbb
jmp
fistp
mov
pop
sete
mov
mov
movs
inc
clc
scas
(bad)
dec
call
mov
fnstcw
xor
mov
shl
cli
fisttp
retf
jge
enter
push
test
and
stc
mov
sbb
xchg
sbb
mov
sub
mov
fstp
lds
(bad)
push
in
mov
mov
scas
adc
ins
mov
popa
adc
dec
sub
mov
cs
sub
jns
pushf
dec
aam
call
push
adc
fbld
adc
sti
mov
or
mov
jmp
mov
ins
(bad)
popa
mov
and
or
stos
cmp
add
sub
adc
shl
loope
cs
mov
outs
mov
shl
bound
push
inc
add
call
or
out
fild
fs
push
jmp
or
push
stos
fild
movs
mov
jae
std
lock
and
mov
push
mov
mul
xchg
into
out
jp
cmc
fist
je
pop
inc
sbb
inc
in
es
nop
xor
mov
ret
cmp
movs
iret
xor
mov
fwait
dec
or
(bad)
fild
xor
sub
lods
aaa
pop
mov
adc
fisub
inc
and
xchg
push
out
pop
rcl
sbb
pop
pop
icebp
mov
mov
sbb
add
and
leave
pop
dec
cmp
loopne
inc
jmp
gs
(bad)
jecxz
pop
push
add
mov
gs
lahf
inc
das
mov
sahf
mov
adc
jp
hlt
loopne
in
jno
dec
cmpxchg
test
int
fistp
test
clc
sbb
(bad)
jl
xor
fldcw
lea
cli
xchg
data16
push
dec
(bad)
daa
jno
mov
cmp
xchg
cmps
icebp
aam
fist
in
leave
mov
xchg
rcl
es
out
mov
add
das
dec
jno
add
and
cmp
ficom
(bad)
mov
pop
sbb
lock
xchg
test
(bad)
fsub
in
movs
jle
ss
pop
cmp
icebp
sub
std
jo
dec
adc
fisub
mov
mov
stc
sbb
repnz
add
out
mov
xor
inc
lahf
imul
sub
add
imul
jg
mov
aam
adc
movlps
retf
push
or
imul
dec
test
retf
les
add
add
sub
outs
mov
shl
ret
ret
xchg
inc
mov
sbb
mov
jle
mov
in
mov
cmp
mov
pop
xor
daa
js
mov
shl
pop
ficomp
imul
push
test
out
jo
retf
fidiv
sub
dec
xlat
mov
adc
sar
popf
sbb
sbb
inc
test
(bad)
jo
nop
test
enter
fimul
add
out
mov
jl
loop
adc
mov
xchg
dec
fdivr
xchg
cmp
add
dec
clc
loopne
push
jmp
push
dec
retf
jb
mov
xor
in
scas
bound
rol
shr
call
inc
popa
xchg
xlat
out
js
adc
xor
test
call
dec
fsqrt
imul
push
sbb
ss
mov
mov
mov
jno
pop
aam
cmp
imul
and
sbb
sub
adc
mov
jno
in
and
shl
add
and
pop
inc
mov
loope
xchg
(bad)
mov
sub
mov
xchg
cld
(bad)
cs
mov
out
push
sbb
push
aaa
add
mov
aad
jae
repz
jge
jle
repz
add
sbb
scas
out
xor
cmp
pop
rcl
pop
mov
stos
xchg
loopne
dec
xchg
adc
leave
mov
sub
sbb
jecxz
mov
in
ss
sar
into
stc
xchg
jne
std
retf
in
or
dec
jg
mov
jge
scas
or
jmp
hlt
pop
repnz
fsub
pop
mov
push
jo
ja
mov
cmc
(bad)
call
pop
jg
add
out
jmp
inc
sbb
jl
sbb
mov
inc
jns
(bad)
out
push
cmc
popf
test
mov
mov
inc
jg
cld
push
lods
adc
push
ins
or
jecxz
mov
jle
pop
outs
inc
sub
loopne
nop
(bad)
or
lock
das
scas
aaa
jb
les
addr16
sbb
pop
push
rol
xchg
or
or
mov
(bad)
sbb
adc
xor
test
std
data16
xlat
stos
adc
in
retf
fnstenvw
jno
and
fs
imul
xor
xchg
mov
push
sub
stos
xor
xlat
add
rol
aad
stos
in
in
ret
push
push
outs
sbb
sub
test
imul
mov
adc
adc
and
pop
(bad)
and
dec
jmp
push
dec
cmps
jg
cmp
pushf
xchg
aam
fstp
shr
push
cmp
and
les
lock
pushf
js
outs
xchg
movs
mov
push
sbb
mov
add
sbb
div
fwait
jmp
jnp
push
stos
test
push
xlat
pop
add
mov
dec
mov
sbb
add
sbb
and
mov
jmp
adc
pop
shl
scas
xchg
mov
enter
dec
push
mov
pop
xchg
cmp
cmp
mov
out
inc
dec
mov
clc
jecxz
out
ins
dec
movs
and
jnp
push
retf
cvtps2pd
ins
sbb
jmp
cmp
cmp
(bad)
cmps
push
repnz
ja
mov
loope
mov
nop
ins
nop
test
pop
push
add
das
xchg
push
inc
and
sub
jmp
xchg
push
int
hlt
retf
retf
mov
scas
lods
movs
(bad)
bound
dec
mov
push
xchg
push
(bad)
mov
fdivp
xor
in
lds
imul
push
in
adc
leave
test
cdq
xor
or
repnz
(bad)
je
or
mov
ja
idiv
and
mov
(bad)
sub
aad
mov
mov
outs
int3
push
xor
daa
minps
sti
pusha
dec
inc
cmp
imul
sbb
cmps
(bad)
mov
inc
into
xchg
add
push
inc
in
push
icebp
cmp
std
mov
outs
es
cmp
aam
adc
shl
add
ror
jmp
rcl
mov
sub
mov
adc
maxps
mov
push
cli
push
ins
jmp
int3
or
pop
jns
call
xchg
enter
inc
xor
scas
sbb
iret
jl
inc
pusha
daa
and
ss
jmp
mov
jg
sub
jo
pop
out
jnp
inc
mov
rol
mov
pushf
xor
rol
pop
push
out
pop
cmp
rol
mov
rol
adc
jg
mov
mov
test
fidivr
lods
lahf
sbb
and
sbb
retf
pop
xchg
add
push
xor
cmc
rol
lahf
out
out
mov
mov
popf
addr16
xor
retf
jb
lds
mov
jle
sub
add
sbb
and
sub
lds
dec
lds
cdq
mov
mov
frstor
int
adc
push
jg
ror
and
shl
retfw
(bad)
hlt
mov
stos
push
sahf
or
add
pop
mov
mov
pop
out
and
xchg
pop
or
rcr
fsubrp
sbb
fdivr
xor
clc
xor
std
mov
mov
and
test
mov
cwde
push
sbb
push
jecxz
ja
rcl
scas
mov
cwde
cmp
js
aam
push
retf
movs
dec
dec
mov
out
aad
lods
inc
xchg
push
loope
add
cmc
inc
mov
das
cwde
in
pusha
dec
jp
mov
add
or
movs
icebp
icebp
or
ret
mov
cli
push
pop
mov
jo
pusha
sbb
(bad)
mov
add
or
pop
and
inc
nop
inc
and
jl
mov
sbb
jle
pop
and
jbe
adc
cmp
inc
scas
mov
dec
push
cli
(bad)
cmp
fwait
in
jge
xchg
out
push
jns
xchg
lds
mov
(bad)
mov
daa
sub
xor
fcom
leave
xchg
movs
scas
pusha
inc
outs
and
shr
mov
fwait
movs
pop
dec
aam
les
cs
aaa
jge
jmp
sub
inc
push
mov
dec
push
stos
mov
lea
stos
adc
dec
stos
sub
and
and
(bad)
out
pop
fcmovb
xlat
mov
inc
jnp
inc
xchg
leave
call
push
sbb
xor
cli
inc
lods
leave
int
cli
movs
(bad)
pop
xlat
fwait
mov
ja
adc
outs
pop
popa
test
ins
pop
pop
xor
add
adc
ja
mov
ins
cmp
movs
sbb
push
xchg
out
int
rcr
rcl
xchg
movs
shl
push
xor
dec
int
push
and
xor
dec
inc
stc
rcl
cdq
cli
ins
inc
push
outs
mov
shl
retf
out
pop
mov
cmp
popa
lds
shl
push
add
(bad)
loop
mov
sahf
fcomi
and
test
in
rcl
out
fistp
add
mov
repz
aam
inc
push
inc
ins
call
loope
cdq
loop
gs
lock
sub
add
mov
xchg
call
sbb
mov
jmp
scas
xchg
mov
sub
sbb
push
ror
jecxz
jo
std
(bad)
sbb
xchg
dec
sub
aam
imul
mov
inc
cli
pop
dec
xchg
imul
ret
sbb
or
stos
fmul
mov
in
hlt
leave
xor
jnp
(bad)
mov
mov
out
cld
fidiv
fs
lea
sub
mov
enter
sub
repnz
lahf
and
pop
popa
cli
lods
mov
jmp
stc
test
add
(bad)
(bad)
mov
cdq
jg
out
mov
rcl
xacquire
test
loop
sbb
repz
js
fs
je
lock
addr16
mov
cmp
inc
jge
sbb
pop
mov
dec
push
inc
into
gs
(bad)
popf
cli
in
jmp
icebp
aas
jne
fyl2xp1
cmp
xchg
hlt
xchg
addr16
sbb
loope
idiv
test
xor
add
mov
mov
pop
pop
mov
sub
(bad)
ja
lea
jg
inc
pop
add
out
xchg
xor
and
shl
mov
js
pop
(bad)
out
inc
test
xor
or
xchg
clc
ins
imul
out
push
jbe
jno
das
inc
cmp
jno
and
pop
bswap
push
dec
xchg
jnp
mov
pop
rcl
pusha
js
movs
sub
dec
pop
mov
mov
in
retf
stc
(bad)
inc
es
movs
lods
fstp
mul
or
scas
push
stos
push
sub
fcomp
les
jmp
cmc
shr
mov
xchg
jbe
ja
sbb
inc
jb
aas
data16
push
mov
xor
xor
push
inc
pop
es
enter
retf
xor
pop
stos
add
mov
test
push
adc
push
pop
std
jo
cmc
lahf
push
ins
jbe
mov
je
clc
into
(bad)
sti
pop
jecxz
or
aaa
cmp
push
(bad)
push
inc
mov
sbb
sbb
pop
adc
frstor
lea
outs
push
mov
mov
xchg
(bad)
push
fs
adc
fs
sbb
jmp
(bad)
dec
pop
dec
or
mov
push
xchg
mov
push
cmp
mov
cmc
int3
xchg
pop
jecxz
jle
popa
(bad)
sub
mov
(bad)
in
in
dec
pushf
ficomp
aam
push
js
mov
lods
add
pop
pusha
sbb
add
push
stos
xchg
xor
or
mov
and
add
push
pop
retf
out
pop
adc
pop
xchg
adc
in
inc
nop
mov
jae
shl
pop
xchg
out
std
outs
adc
jg
in
ss
(bad)
push
in
push
sub
sar
std
aaa
push
xor
loope
ret
arpl
neg
jns
mov
movs
arpl
or
sbb
jbe
loop
shl
dec
fmul
iret
rcl
mov
enter
call
fcmove
dec
jle
sub
das
pop
call
enter
movs
in
call
jo
stos
retf
xor
adc
(bad)
push
push
dec
mov
xchg
cmp
push
scas
push
sub
push
cmp
add
cmp
sub
mov
sbb
mov
stos
imul
pop
bound
sub
aas
dec
fwait
pop
movs
push
sbb
fst
dec
dec
dec
bound
add
mov
sti
into
sub
repz
aaa
mov
push
and
push
test
in
and
outs
popf
sub
inc
movs
push
(bad)
xchg
retf
fst
ins
push
ins
dec
dec
mov
sub
push
popf
test
mov
in
out
mov
sbb
ss
jge
lock
add
hlt
add
in
cmp
or
jmp
cli
lea
js
int3
sbb
add
sub
ins
push
xchg
dec
adc
push
mov
xchg
add
push
hlt
in
adc
pop
and
ret
sub
ins
pop
pop
xlat
sub
push
ret
mov
lahf
gs
cmp
lahf
mov
stos
mov
imul
sbb
inc
adc
je
jne
pop
test
ret
dec
or
mov
mov
jo
retf
call
xor
ins
lods
pop
sub
cmps
jecxz
(bad)
jo
xchg
xchg
push
fidiv
daa
lock
out
ret
mov
jl
(bad)
cwd
mov
cdq
jg
popf
add
popa
add
js
sbb
cmp
(bad)
fwait
or
sahf
and
add
ins
inc
sbb
xchg
adc
aam
push
push
retf
xchg
test
mov
stos
sbb
lock
xchg
inc
xchg
adc
(bad)
adc
ds
and
(bad)
lahf
shr
adc
jle
push
adc
sub
lahf
xor
mov
or
(bad)
shl
cmp
mov
cmp
ds
movs
cmp
add
jb
outs
les
cli
jl
mov
jecxz
push
and
js
cmp
pop
stc
and
sub
(bad)
imul
popa
and
stc
cmps
outs
fdiv
retf
repz
xor
or
pop
mov
gs
inc
or
push
arpl
stc
xchg
cmp
call
cld
ss
dec
dec
mov
pop
pop
test
xor
aam
ja
movs
ds
push
xor
ins
add
xchg
jl
inc
pop
mov
dec
jno
movs
cmp
lods
ret
pop
std
sbb
sub
xchg
dec
add
es
jae
pop
mov
icebp
cmp
push
jmp
sar
jne
inc
mov
and
dec
sbb
mov
and
ins
rcr
in
std
pushf
cdq
mov
add
dec
add
pop
call
fidivr
arpl
sar
cmp
adc
jg
repnz
stos
pop
aad
icebp
mov
loop
test
mov
test
sbb
adc
icebp
cmp
fistp
iret
in
inc
mov
mov
and
xchg
and
mov
sbb
sub
test
shr
movs
xor
xor
or
inc
ins
bound
call
xchg
mov
gs
cmp
arpl
test
pop
mov
mov
jmp
test
lea
mov
mov
add
jb
fnstsw
pop
push
xchg
cmps
rol
mov
and
mov
and
cmp
pushf
xlat
outs
jne
mov
sub
xchg
jnp
jne
add
repnz
ret
jge
movs
add
cmps
bound
pop
call
lods
mov
cmp
xchg
sahf
jmp
cmps
mov
scas
dec
cmp
jl
lahf
jno
adc
mov
dec
jmp
dec
push
out
xchg
repnz
out
inc
sub
push
mov
jp
stos
push
sbb
xchg
call
aad
cmp
ja
sti
addr16
fldcw
push
ja
rcl
jns
dec
jns
push
hlt
jbe
das
fs
mov
aam
adc
neg
call
push
pop
adc
retf
xor
mov
ds
cmp
imul
push
pop
loope
cld
inc
int
mov
test
cmps
xor
add
push
ins
out
sbb
imul
cmc
ja
retf
inc
dec
fiadd
hlt
ror
inc
enter
jmp
(bad)
retf
inc
or
jmp
inc
imul
pop
fist
fmul
int3
inc
xor
mov
out
fiadd
sub
outs
test
xor
aam
sub
fnsave
(bad)
mov
inc
icebp
sar
pop
inc
pop
inc
pop
rol
sub
call
sbb
(bad)
aas
jo
retf
int3
mov
bnd
(bad)
xor
in
xor
cmps
lea
fnstsw
out
and
leave
push
pop
clc
shl
out
movs
add
xchg
pusha
mov
in
in
add
sub
dec
pop
int3
inc
mov
sub
jl
mov
gs
push
or
enter
sbb
sub
in
nop
xor
out
ret
and
mov
pop
add
hlt
xor
pushf
push
mov
push
mov
sub
pop
pminub
movs
div
lahf
call
or
mov
(bad)
fdivr
test
clc
cmp
push
repz
fisttp
push
mov
lock
xor
pop
xchg
out
or
movs
in
cdq
inc
xchg
dec
icebp
sub
jp
mov
push
mov
das
xor
sub
or
sub
add
mov
stos
dec
cmp
lods
out
cld
test
xor
jnp
inc
aas
jge
bound
and
icebp
dec
push
aad
cli
push
loope
sahf
out
sub
pop
jo
stos
cmp
iret
mov
add
jns
xor
test
dec
mov
call
mov
sub
cmp
cmp
pop
out
inc
mov
cmps
xor
or
and
dec
rcl
shl
jbe
test
retf
nop
jmp
pop
pop
xchg
gs
es
pop
rcl
push
rcl
lods
repnz
inc
popf
cld
pop
jb
jp
adc
cmp
test
cdq
stos
leave
retf
into
movs
or
stc
dec
and
test
sbb
inc
lock
mov
gs
loop
sub
les
push
and
add
cmp
push
mov
or
imul
into
mov
push
mov
in
sahf
xor
jno
push
xor
leave
inc
gs
int3
mov
mov
inc
mov
repz
fsubr
lahf
dec
popf
ins
call
cmp
or
pusha
(bad)
pop
stc
cmp
(bad)
pop
mov
cmp
(bad)
scas
lods
imul
and
retf
cli
sbb
aad
in
jmp
imul
fild
inc
pop
push
test
int
fmul
sahf
fistp
out
cdq
adc
lock
mov
push
xchg
sub
(bad)
mov
mov
mov
mov
or
mov
retf
nop
pop
fwait
pop
xchg
pusha
(bad)
push
jo
or
jmp
add
int
or
jo
add
dec
mov
push
leave
cmp
lods
sbb
add
xor
outs
and
and
xchg
xor
in
clc
add
(bad)
in
add
ror
pop
daa
and
shl
cmp
or
cld
mov
add
jne
int3
mov
push
not
pop
cs
test
xchg
loopne
cmc
out
mov
add
sub
clc
sub
mov
adc
cs
inc
les
push
cdq
test
inc
mov
adc
pop
add
test
cli
mov
jbe
fsubr
jae
inc
mov
xor
jne
pop
sbb
sub
mov
mov
or
mov
cmp
inc
sub
stos
sub
popa
adc
cs
stos
test
(bad)
test
dec
lods
popf
cdq
mov
dec
je
dec
enter
jecxz
fxch
iret
fld
push
inc
push
mov
dec
or
push
outs
cmc
cmp
inc
in
mov
stos
lds
pop
(bad)
es
inc
in
push
test
je
popa
push
pop
jecxz
sbb
push
movs
pop
dec
mov
mov
pop
xor
nop
push
xchg
jo
in
jmp
loopne
xor
mov
cs
push
jmp
fsubp
into
adc
cmps
stos
add
in
repz
loope
xchg
jge
cld
push
std
out
push
neg
test
mov
pop
lock
xchg
rcr
pusha
and
ins
mov
cmps
out
mov
mov
fidivr
push
int
jmp
ds
movs
pop
dec
int
adc
mov
pop
adc
pop
loop
cmc
iret
stos
test
mov
or
jno
add
out
adc
add
sub
jl
cld
add
xlat
or
ja
mov
ds
and
or
mov
sar
cdq
fisttp
fld
cld
cld
call
mov
mov
dec
fiadd
(bad)
stc
arpl
jno
and
mov
mov
loopne
jecxz
xor
dec
sbb
mov
inc
in
bound
ds
pop
or
inc
mov
loope
lods
pop
xlat
jb
into
(bad)
out
push
daa
jns
and
shl
jae
out
gs
iret
jbe
or
xchg
sbb
mov
jge
mov
cmp
cdq
dec
xor
push
push
jnp
adc
fdivr
inc
xor
jmp
and
cli
pop
fstp
sbb
fs
out
inc
(bad)
xlat
cli
sar
stos
(bad)
xchg
xor
sub
inc
inc
daa
jnp
jecxz
push
cmps
out
popf
xchg
or
(bad)
push
inc
fdivr
call
and
in
fwait
xchg
pop
test
cwde
je
jecxz
xchg
mov
adc
imul
add
adc
bound
pop
imul
rcr
pop
rol
push
or
in
dec
mov
mov
xchg
fistp
out
inc
inc
mov
adc
jnp
push
mov
cmp
push
aaa
xor
mov
xor
push
cs
cmps
aaa
mov
jle
dec
xchg
mov
aas
test
xchg
mov
stc
int
gs
pop
mov
inc
icebp
aam
outs
push
arpl
mov
call
mov
dec
rcr
rcr
scas
in
adc
mov
std
push
leave
or
sbb
dec
je
je
mov
push
pop
dec
pushf
pushf
mov
jno
jb
enter
pusha
cmc
push
xor
repz
cdq
es
dec
daa
ror
lods
cs
xchg
leave
mov
and
xor
or
stos
push
ja
mov
outs
dec
cli
dec
popa
push
jb
push
cdq
icebp
add
stc
(bad)
mov
in
mov
ss
mov
xchg
pop
xchg
mov
out
xor
cs
fiadd
or
aam
push
std
add
jne
sub
mov
loope
and
pushf
cmp
arpl
ret
in
adc
inc
lods
aas
pushf
popa
ins
mov
mov
fucomip
outs
(bad)
imul
loop
inc
mov
fild
adc
shl
mov
mov
jns
int
stos
add
out
cdq
rcl
add
push
push
cmp
rcl
rcl
je
outs
nop
(bad)
faddp
push
mov
sub
dec
stc
test
jge
jbe
cmp
mov
jmp
add
icebp
out
pop
movups
and
add
mov
call
add
sub
xchg
add
or
outs
je
lahf
cmp
mov
loop
jmp
retf
retf
and
sub
or
jb
mov
fs
in
jecxz
jbe
jge
and
cmp
adc
mov
mov
push
outs
cs
fstp
dec
pop
push
add
ins
add
xor
add
or
cs
mov
retf
mov
pop
or
ret
in
(bad)
mov
daa
in
inc
dec
out
gs
call
int
test
mov
pop
xchg
xor
fs
mov
sub
push
ja
mov
push
mov
add
dec
xor
lahf
sub
loope
popa
aas
mov
nop
cmovg
loope
call
mov
jne
in
test
push
fstp
inc
out
cdq
fsub
push
xor
fdivp
mov
fist
das
sbb
cmp
stos
in
pop
mov
jl
out
xchg
cmp
fdiv
lds
or
cdq
pop
loopne
je
push
fisubr
jnp
xor
scas
pop
mov
or
scas
inc
mov
mov
retf
pop
add
fstp
sahf
outs
data16
jbe
jbe
in
fist
ds
push
cmc
add
sahf
or
adc
shl
in
jmp
xchg
inc
add
add
pop
sbb
mov
rcl
dec
jecxz
inc
popa
and
adc
cmps
es
shl
enter
das
inc
push
dec
shl
inc
jno
pop
dec
rcl
cmps
out
lods
jno
dec
push
das
into
sti
dec
add
ficomp
add
ja
ds
cmp
pop
and
mov
sub
lods
fisub
in
adc
sbb
adc
jno
ror
scas
imul
ss
test
dec
nop
mov
mov
sub
repnz
jne
or
sbb
mov
shl
cmp
pop
vsubss
xchg
xchg
mov
mov
mov
cmp
cmp
in
mov
push
xlat
cmp
dec
dec
pop
and
jle
sub
lds
ja
jp
je
or
adc
mov
(bad)
in
jno
(bad)
mov
loopne
jb
xor
inc
push
xchg
xchg
lahf
(bad)
sub
test
cmps
ins
icebp
enter
data16
push
retf
stos
adc
dec
das
fcomp
and
push
inc
cmps
ins
cmp
cmp
mov
aam
pushf
cli
mov
mov
cmovge
push
add
or
fisttp
out
fcmovnbe
repnz
es
xchg
cmp
cdq
push
xchg
inc
and
pushf
adc
mov
nop
fidivr
push
repz
mov
xchg
mov
in
int3
adc
(bad)
push
fs
stos
stos
icebp
and
dec
fdiv
stos
mov
outs
dec
inc
jno
jb
inc
xchg
shr
mov
out
rcr
retf
xor
inc
cmp
jl
mov
cmp
mov
xchg
add
xchg
aad
xchg
xor
xchg
inc
loopne
test
fld
xchg
mov
cwde
mov
xchg
mov
lods
fnstcw
jns
xchg
cmps
in
fbstp
jmp
cli
jne
jl
xor
xchg
ror
inc
adc
inc
dec
cmp
mov
sub
loope
pop
lods
rol
pop
mov
data16
add
jmp
push
out
ret
xchg
sub
pop
mov
xor
xchg
test
push
or
add
in
popf
xchg
test
dec
mov
push
jl
das
fdivp
addr16
or
sub
in
or
jb
mov
gs
nop
mov
mov
(bad)
movs
dec
test
jmp
push
dec
mov
add
out
cmp
test
stc
dec
pop
mov
jno
cmp
mov
fst
sbb
and
jmp
out
movs
jae
push
cmps
xlat
stc
fsubp
jmp
inc
mul
mov
aaa
xchg
sbb
xor
mov
loope
cwde
xchg
dec
repz
dec
test
inc
inc
aad
ret
sbb
das
ret
mov
leave
or
fisttp
and
add
sahf
fadd
pop
mov
cs
cld
sti
or
cli
loop
cmp
aad
inc
sub
sbb
in
mov
sub
cmp
mov
ja
movs
mov
test
call
jge
inc
fmul
cmps
pusha
jbe
addr16
test
daa
and
jmp
std
pop
fcmove
das
mov
mov
mov
popa
push
mov
js
dec
std
jae
mov
call
fisub
shl
sub
push
push
movs
sub
xlat
ss
xor
xchg
cli
dec
adc
xchg
xor
or
sbb
push
cmc
and
sub
ficom
mov
je
(bad)
icebp
adc
cmc
jne
jbe
mov
mov
iret
daa
dec
mov
daa
sbb
(bad)
xor
cmc
dec
sbb
mov
imul
les
mov
cmps
in
jp
xchg
and
add
loopne
cmp
sbb
inc
test
neg
(bad)
dec
and
stos
mov
test
lock
pop
cmp
sti
and
jo
jnp
loope
test
inc
and
aam
aad
arpl
xchg
cmovno
loopne
in
hlt
adc
popa
out
cs
adc
pop
adc
mov
int
xchg
daa
mov
test
mov
pop
call
mov
mov
arpl
push
jo
jae
jb
mov
cmp
xor
inc
mov
arpl
cld
cmps
data16
in
fmulp
adc
add
adc
ins
out
mov
das
stc
arpl
jae
sar
or
add
outs
mov
out
jmp
(bad)
retf
pop
bound
lahf
lahf
idiv
(bad)
or
jnp
cmps
dec
xchg
mov
mov
xchg
fld
mov
pop
rcl
xchg
into
jl
inc
(bad)
pop
hlt
and
leave
test
push
push
(bad)
jae
shl
imul
inc
jne
jbe
jmp
jo
je
mov
fdivr
push
mov
repz
mov
pop
sub
cmp
xchg
or
jecxz
cmp
fsub
cmp
inc
and
and
inc
sub
mov
adc
jns
dec
out
popf
and
dec
cs
lods
dec
out
xor
into
inc
add
dec
stos
int
xchg
mov
ret
data16
jnp
xor
cmp
test
cmp
or
push
out
sbb
mov
mov
mov
sbb
in
push
shl
mov
add
push
push
icebp
jbe
and
and
mov
ins
mov
xchg
ins
lock
pop
inc
sbb
xor
mov
add
(bad)
sahf
ret
repnz
add
aam
xor
pop
mov
jg
in
cmp
pushf
sti
js
xor
and
mov
leavew
mov
jnp
idiv
pop
popf
in
imul
loopne
fmul
sub
inc
fistp
push
into
loop
int
nop
es
xchg
or
into
aaa
retf
call
cmp
mov
loopne
popf
xor
pop
sbb
dec
lods
push
jmp
in
jge
xchg
je
scas
pop
loope
int3
jo
jge
jmp
mov
pop
xchg
mov
jg
ret
or
or
push
sbb
push
test
jb
adc
xor
xor
test
in
hlt
popa
cli
(bad)
stos
mov
mov
addr16
mov
jge
mov
mov
pop
pop
in
repz
hlt
mov
mov
cmp
ins
add
pop
cwde
sub
jb
mov
push
leave
inc
mov
cmp
shl
repnz
push
xchg
cmp
sub
daa
add
(bad)
mov
out
xadd
mov
fsubp
jmp
pop
mov
adc
test
push
pop
loope
xor
xor
xchg
or
mov
and
mov
je
jmp
push
mov
inc
inc
pop
xor
popf
add
xor
mov
test
jg
into
sbb
fst
xchg
cld
ins
aam
pop
adc
icebp
int3
xchg
mov
mov
fist
in
and
sub
int
jbe
ret
push
xor
loope
add
shl
(bad)
add
(bad)
jg
jb
loope
push
push
int3
xchg
and
aas
push
or
dec
push
lds
xor
mov
fild
out
and
fisubr
jns
into
test
nop
inc
pop
scas
mov
xor
call
sub
push
mov
icebp
jbe
call
cmp
shr
add
adc
xchg
aam
or
out
outs
mov
mov
dec
cs
dec
adc
mov
fisub
add
imul
jo
mov
jnp
and
int
loope
jecxz
lahf
jp
add
mov
bound
aas
jp
ds
and
lods
add
jp
sbb
das
test
and
jge
sub
hlt
out
mov
mov
or
or
mov
mov
add
mov
jae
dec
jl
(bad)
sbb
iret
cmp
inc
dec
sbb
dec
movs
dec
(bad)
cli
and
and
fucomi
push
pop
cmp
pop
repnz
mov
pop
lods
jnp
das
push
mov
fmul
ds
sbb
outs
dec
cmp
cmps
push
rcl
ret
out
lods
sahf
jno
sub
or
sbb
iret
cmp
add
sub
es
shl
scas
pop
jmp
lea
daa
das
std
jecxz
popf
mov
or
mov
stos
xchg
faddp
pop
ja
mov
pop
fcomp
mov
and
mov
jnp
int
mov
mov
enter
push
mov
mov
cmps
sbb
pop
retf
in
cmp
and
into
fnstsw
mov
cmp
xchg
push
cli
ss
(bad)
cmp
push
fcom
lock
or
sar
gs
mov
data16
dec
or
dec
xchg
(bad)
xchg
sahf
out
in
sbb
inc
call
lea
add
jmp
cmps
xchg
test
sub
xchg
cmc
mov
add
out
iret
mov
test
mov
ficom
data16
push
jns
aaa
(bad)
mov
bound
add
add
or
mov
add
pop
or
sub
mov
mov
stos
mov
mov
iret
adc
es
and
jbe
pop
cdq
dec
inc
push
and
mov
push
add
dec
cs
push
nop
(bad)
mov
inc
inc
sahf
fyl2xp1
scas
add
div
int3
lods
lods
xor
adc
lock
add
dec
dec
imul
fdivr
mov
and
int
xlat
adc
push
add
xor
sub
xchg
mov
sbb
mov
add
call
imul
into
inc
xchg
aam
push
jge
jle
(bad)
loopne
test
es
xlat
aas
out
sbb
out
loope
lods
(bad)
adc
xchg
dec
sahf
cs
call
mov
dec
xor
inc
mov
in
add
pop
inc
scas
movs
inc
int3
and
jno
lods
int3
call
loopne
fiadd
movs
push
cmp
mov
push
xchg
daa
jb
jle
mov
jp
mov
scas
mov
push
cwde
retf
mov
imul
clc
adc
fstp
enter
push
arpl
cmp
div
es
mov
or
push
dec
loope
call
fwait
add
cld
jb
iret
mov
mov
add
retf
cs
xor
push
adc
retf
jne
push
dec
push
clc
shl
mov
jge
retf
lock
shl
sti
jnp
fcom
add
mov
(bad)
mov
mov
add
xchg
dec
mov
inc
pop
jg
push
sub
fisubr
mov
inc
fs
push
shr
aam
mov
ds
jmp
and
je
cmp
out
pop
js
mov
mov
pcmpeqw
fsub
sbb
lods
imul
xlat
jge
pop
imul
cmp
and
and
push
lods
test
ror
test
xor
aas
ror
dec
(bad)
and
mov
adc
xchg
and
je
push
sub
ins
iret
mov
xchg
call
mov
mov
sbb
fcomp
jne
clc
add
or
mov
int
adc
gs
jl
movs
sub
sbb
scas
das
add
cmp
and
xor
xchg
lock
ret
jo
mov
adc
adc
(bad)
movs
std
or
in
push
cmps
pop
add
mov
pop
pop
mov
outs
fimul
movs
mov
ror
ret
sbb
rcr
mov
mov
clc
xlat
push
mul
sar
adc
cld
in
sar
(bad)
popf
mov
mov
push
(bad)
pop
jno
inc
in
pop
pop
cld
js
popa
mov
into
mov
(bad)
(bad)
xlat
push
sbb
aas
aad
sbb
popa
jnp
arpl
jns
jge
pop
add
push
mov
cmps
xor
push
out
mov
(bad)
fidivr
ins
dec
rol
pop
and
stos
xadd
jecxz
jecxz
ins
faddp
xchg
leave
add
cmps
sub
jmp
and
push
push
not
push
scas
jbe
sub
push
dec
mov
rep
xlat
fsub
int
mov
jl
xor
sbb
push
inc
mov
fnsave
ins
hlt
std
sbb
(bad)
pop
jnp
sbb
loope
ret
mov
xor
jb
cmp
jo
or
or
mov
retf
stos
push
inc
add
sbb
stc
rcr
aad
add
js
jnp
bound
xchg
add
xchg
adc
fsub
aas
das
mov
fcmovnu
bound
dec
xor
or
cmps
pusha
jb
out
call
mov
and
adc
scas
pop
not
or
sbb
retf
test
jle
push
clc
cmps
dec
xchg
stc
jle
sbb
sbb
pop
cmc
push
loope
or
test
push
fimul
push
sub
or
push
stos
mov
push
mov
mov
mov
lods
loopne
pop
(bad)
int3
ins
ja
in
lods
and
sbb
push
mov
push
push
jmp
sub
shl
shr
call
xchg
out
je
dec
out
ficomp
nop
mov
iret
and
lds
push
je
xor
inc
cdq
and
push
(bad)
out
xlat
ja
xchg
mov
into
test
pop
push
sub
pop
(bad)
shr
aam
std
jbe
sqrtps
adc
movs
add
aaa
push
ret
call
scas
ror
push
adc
aaa
loope
jno
test
sbb
xor
aaa
cmp
test
ds
ror
repz
in
push
adc
in
push
das
xor
in
test
cmp
mov
sbb
fimul
or
xchg
scas
lea
fdivr
lods
adc
xlat
lods
xchg
xor
lahf
pop
and
stos
sar
and
push
pop
test
lds
call
fnstsw
pop
or
mov
ret
xor
pop
sahf
jne
pop
fst
pop
sti
push
(bad)
in
pop
les
dec
aad
test
dec
or
mov
hlt
sti
ins
mov
push
shl
call
push
cdq
cmp
jo
mov
xor
iret
mov
daa
mov
iret
pushf
jecxz
cdq
adc
arpl
add
test
adc
sbb
loop
fimul
jns
push
mov
add
jecxz
loopne
(bad)
mov
lock
dec
push
leave
mov
mov
outs
outs
mov
pop
jg
xlat
or
or
mov
fwait
sub
push
push
cmp
push
jmp
data16
fs
outs
push
mov
dec
mov
sbb
or
lods
dec
sub
xchg
fsubr
mov
xor
or
jecxz
(bad)
or
les
inc
out
jg
xchg
cld
ins
js
add
aam
xchg
jge
dec
cld
les
jmp
jae
movs
push
mov
popa
sub
clc
mov
movs
sbb
pop
mov
cdq
aas
add
adc
retf
pop
sti
mov
inc
adc
bound
ds
xchg
retf
(bad)
dec
cli
inc
lea
das
repz
xor
push
nop
loope
out
ins
mov
jnp
mov
xchg
or
sbb
movs
cmp
push
out
(bad)
retf
dec
mov
jbe
jmp
cmp
sbb
push
(bad)
mov
loopne
call
imul
or
push
mov
and
rcr
mov
into
outs
push
test
sbb
mov
imul
lods
fcmovnbe
xor
xchg
mov
pusha
dec
inc
jmp
fnstcw
(bad)
fwait
xchg
pop
xor
cmp
mov
adc
mov
or
sub
ret
jo
pushf
ret
pop
sub
cmp
or
pop
inc
into
pop
cmp
sub
jmp
(bad)
dec
or
dec
out
das
aam
xlat
sbb
aas
leave
and
sbb
cmp
adc
xchg
jg
mov
push
aas
cli
adc
jmp
jmp
mov
mov
inc
fiadd
push
rcr
fld
stos
ins
out
dec
rol
ins
sub
dec
retf
and
test
xchg
ror
test
mov
sub
and
mov
push
inc
adc
rcl
pop
(bad)
xor
ins
repz
jmp
popa
daa
xchg
retf
pop
fisttp
scas
mov
fild
in
repz
add
push
dec
call
repz
push
movs
pusha
mul
inc
ins
sbb
test
pop
test
ss
repz
xchg
push
push
adc
xor
les
dec
xor
inc
jae
sti
pop
les
out
cmp
fldl2t
fldenv
push
les
fnstsw
sti
dec
mov
stos
out
loope
test
push
xchg
cmp
pop
ret
in
inc
in
daa
sub
mov
call
xchg
cmp
into
mov
pusha
test
ret
lods
in
mov
into
adc
and
and
adc
sar
loop
out
and
ins
sbb
mov
pop
out
sub
bound
in
lock
mov
push
lock
shl
mov
xchg
stos
pop
xor
(bad)
mov
and
push
fldl2t
mov
rep
jo
pop
push
sbb
ror
dec
lea
sbb
and
and
and
push
(bad)
pop
cmp
mov
pop
or
movs
adc
imul
in
icebp
test
lock
xchg
repnz
gs
lock
push
dec
jmp
xor
rcl
or
jns
mov
test
out
adc
xor
dec
js
inc
or
xchg
ss
pop
and
stc
clc
in
(bad)
mov
inc
push
pop
mov
mov
mov
inc
test
mov
or
mov
in
out
test
and
mov
fld
scas
mov
and
out
iret
pop
or
pop
pop
push
xchg
(bad)
mov
add
test
ss
pop
fwait
cdq
bound
in
mov
outs
ins
pusha
(bad)
and
sub
inc
sbb
push
outs
jbe
sar
out
cli
sbb
ret
outs
push
mov
jmp
cmps
enter
dec
clc
cwde
sub
aam
std
lahf
sub
(bad)
cmp
xchg
sar
inc
fcmovu
movs
push
mov
movs
imul
int3
push
pop
inc
ret
shr
aas
cmps
jecxz
loope
inc
jb
leave
or
cmp
cs
(bad)
shl
add
push
(bad)
call
sbb
inc
xchg
out
fnsave
mov
sbb
fisub
xor
mov
adc
int
sbb
lea
adc
in
ficomp
mov
je
cmp
pop
pushf
shr
push
sub
in
stos
or
pop
xor
sbb
bound
pop
call
sub
pop
inc
adc
sbb
ins
les
daa
lods
mov
xor
sbb
test
div
test
add
sub
cdq
popa
ins
adc
fiadd
inc
out
fdivr
out
fcom
xor
push
popa
mov
add
popf
call
enter
push
(bad)
in
jns
out
sbb
dec
sahf
out
push
popa
je
out
mov
ror
ds
inc
pop
rcl
push
repz
pop
mov
jmp
in
mov
xchg
movs
(bad)
dec
ins
sub
sub
cs
out
jnp
repz
cs
jnp
xchg
xor
cs
or
push
adc
mov
add
je
retf
sub
cli
cs
lds
cmp
add
mov
xor
sub
or
fs
mov
inc
pop
(bad)
sbb
sbb
add
adc
rep
stc
enter
adc
stc
out
bound
cli
cli
mov
mov
in
inc
int3
mov
and
into
pop
and
add
dec
mov
inc
iret
retf
dec
xor
aad
xor
push
dec
or
or
jo
mov
ins
ret
sbb
push
or
sbb
aaa
dec
dec
dec
div
scas
enter
sub
pop
scas
sbb
inc
lods
mov
imul
(bad)
inc
test
rol
jns
jno
push
push
mov
xor
pop
neg
sbb
push
fstp
out
add
sub
std
add
jmp
sub
mov
fidiv
shr
mov
jmp
daa
(bad)
pop
sbb
mov
mov
mov
call
ror
mov
test
ins
xchg
xchg
dec
xor
push
movs
xor
xor
sub
mov
push
sar
and
retf
dec
mov
lea
and
inc
inc
jge
in
pop
movups
into
lahf
in
imul
cmp
inc
fist
xchg
push
push
fs
icebp
shr
stc
frstpm(287
stc
ss
nop
cwde
xchg
cmp
mov
pushf
(bad)
fisub
int
int
mov
test
mov
dec
and
sti
mov
pop
test
mov
xchg
add
lods
and
out
mov
movd
icebp
loope
rcr
mov
push
or
xchg
js
pop
xor
lock
movs
jecxz
jnp
mov
xchg
in
pop
mov
sar
xor
jl
fs
add
xor
sub
js
jg
mov
mov
pop
jns
push
pop
int
push
lock
aam
in
test
fist
sbb
xor
loop
add
sti
pop
aad
sub
dec
sti
inc
pop
aas
out
push
test
add
dec
pop
mov
icebp
aam
fwait
aaa
cdq
out
(bad)
dec
sub
lahf
pop
fs
pop
mov
iret
xchg
mov
dec
cmp
mov
xchg
(bad)
fisub
(bad)
jmp
(bad)
clc
popa
out
add
jns
ret
imul
(bad)
pop
pop
and
jle
imul
sub
nop
adc
mov
jbe
cmp
or
mov
and
lods
sub
xor
sbb
xor
cld
mov
and
cli
out
cdq
test
std
mov
xor
cmp
add
retf
retf
imul
pop
imul
jb
outs
push
movs
inc
sbb
in
push
add
aas
mov
push
stos
pop
inc
push
adc
cdq
fdiv
out
mov
mov
cmp
push
(bad)
mov
xor
mov
enter
mov
adc
mov
push
push
int
ds
xchg
and
test
lods
cmp
mov
mov
pop
dec
fcmove
mov
hlt
dec
mov
jl
xchg
dec
test
lods
jg
push
push
scas
cli
and
rol
push
(bad)
push
or
adc
fidiv
dec
popf
cli
dec
push
mov
mov
mov
xor
es
sbb
jp
js
adc
out
push
and
popa
das
and
inc
in
push
push
add
cmp
or
or
xor
add
pusha
push
leave
xchg
dec
mov
xor
out
jo
mov
sub
mov
inc
or
push
daa
and
adc
and
mov
push
call
cld
lahf
pmaxub
push
push
mov
sub
or
cwde
mov
xchg
inc
xchg
loopne
add
push
out
pop
mov
jg
arpl
stc
or
(bad)
(bad)
out
push
jp
pop
fnsave
repz
adc
enter
jno
xchg
mov
aam
and
ffree
clc
mov
cmps
pushf
fs
iret
cmps
(bad)
inc
sub
adc
cli
daa
inc
jmp
outs
jg
cmp
fcom
aad
shr
daa
push
shl
das
retf
sbb
sub
xor
stos
adc
xor
cmc
movs
test
inc
pop
pushf
ins
stc
pop
sbb
inc
and
cmp
mov
and
xor
add
jmp
adc
sbb
jbe
pop
dec
aad
pushf
lods
adc
cld
inc
loop
cmp
xchg
int
fcomp
(bad)
mov
dec
(bad)
bound
shr
add
pop
jge
shl
je
movs
test
call
jge
fidiv
loope
iret
lods
sub
ins
aas
cdq
stos
repnz
(bad)
icebp
stc
call
fadd
ror
dec
mov
sbb
pop
out
jp
push
mov
adc
push
(bad)
(bad)
dec
movs
loope
push
xor
rol
inc
xchg
adc
daa
add
movs
push
dec
and
pop
movs
jbe
dec
(bad)
outs
xchg
out
add
in
cmp
sub
out
notrack
and
sub
push
xlat
fistp
movs
call
cli
jnp
(bad)
jae
in
sub
sub
hlt
int3
jno
xchg
push
and
cmps
sbb
mov
aad
loop
inc
mov
pop
inc
pop
outs
ja
and
push
fist
leave
(bad)
in
xor
xchg
adc
mov
push
shl
and
leave
and
push
xchg
rcl
jecxz
pop
cmps
fldenv
dec
add
mov
push
imul
add
push
inc
jmp
add
ja
dec
sbb
icebp
mov
jno
jb
and
push
mov
mov
fwait
pop
cmp
pop
xchg
inc
sub
daa
test
not
push
push
and
pop
out
and
sbb
adc
aas
sub
xchg
xlat
dec
jo
jp
test
or
cmps
mov
daa
ret
xchg
and
mov
xor
push
xchg
gs
pop
mov
lods
lods
mov
pop
pop
hlt
mul
vpavgb
(bad)
jb
push
inc
(bad)
xor
push
out
inc
xchg
fld
lods
in
sar
adc
add
mov
mov
dec
add
pushw
cmp
inc
push
mov
cmps
sbb
rcl
int3
je
mov
pop
fs
sub
aas
das
in
cmp
fild
mov
scas
dec
(bad)
dec
or
in
jae
sti
int
mov
sahf
xchg
add
cmp
enter
(bad)
(bad)
adc
sbb
mov
or
mov
ins
lock
mov
add
dec
push
pop
popf
repz
fidivr
xchg
cmp
(bad)
jns
call
pop
cmp
gs
loopne
mov
pop
xchg
dec
add
xlat
sbb
cld
retf
out
mov
fild
cmovl
dec
imul
sub
repz
lods
clc
mov
xchg
pop
or
stos
fld
out
jle
lock
xchg
mov
jae
rcl
adc
ror
retf
shr
ja
push
movs
xor
mov
mov
inc
gs
jmp
nop
jo
arpl
xchg
retf
(bad)
nop
dec
jmp
fsub
in
jle
jmp
and
retf
sub
mov
pop
sbb
pop
jne
retf
xchg
hlt
out
rol
xchg
fidivr
mov
push
and
retf
and
push
cmp
mov
xlat
pop
push
dec
clc
and
pop
out
inc
cmp
(bad)
fcomp
lea
sub
or
nop
mov
mov
sub
div
or
fwait
repnz
out
popa
cs
xchg
out
xchg
repz
mov
retf
stos
add
adc
int
je
push
cmp
xchg
dec
mov
jo
cmp
ss
pusha
fdiv
push
dec
nop
cmp
push
lea
ror
push
(bad)
lds
(bad)
mul
or
shl
dec
fs
mov
ds
gs
ficomp
dec
xchg
inc
pusha
add
mov
xchg
enter
mov
mov
call
daa
out
cmps
push
repz
or
stos
aaa
rcr
cmp
and
add
retf
add
shl
push
pop
mov
fidiv
cdq
dec
cmp
mov
adc
xor
dec
mov
cmc
loope
shl
sti
out
cs
xor
add
stos
ds
sub
xchg
or
inc
cld
(bad)
es
cli
add
je
(bad)
int3
sbb
lods
pop
cld
xor
sub
lea
adc
cvtps2pi
repnz
retf
add
xor
cld
mov
sbb
inc
(bad)
add
cmp
xchg
sar
cwde
adc
sbb
inc
mov
xlat
mov
jle
pop
pop
ds
add
sar
inc
xchg
jge
(bad)
adc
add
test
dec
and
ins
sub
nop
sbb
inc
jne
hlt
aaa
or
jne
mov
cwde
inc
pop
mov
mov
cmp
xlat
enter
fimul
fstp
(bad)
imul
or
mov
xchg
xor
jle
or
retf
mov
cwde
or
pushf
pop
mov
in
inc
inc
ror
sar
rcr
push
or
in
lock
pop
fisub
cwde
rcr
cmp
mov
call
stos
cmp
add
test
int3
(bad)
iret
or
pusha
mov
inc
push
enter
sbb
or
push
inc
push
sub
dec
mov
jb
enter
adc
sub
mov
adc
int
fwait
ret
mov
push
js
test
outs
add
xchg
sbb
xchg
push
push
pusha
push
mov
push
ror
jnp
jle
sti
pop
xor
pop
cmpxchg
dec
inc
mov
mov
addr16
xor
mov
loope
sahf
ds
test
addr16
div
inc
or
(bad)
bt
jns
adc
cmp
lods
in
cmps
cmp
push
jbe
dec
sti
arpl
and
(bad)
mov
in
dec
popa
(bad)
and
inc
mov
pushf
fwait
(bad)
ud2
outs
sub
xor
(bad)
xor
add
out
(bad)
or
sub
jle
jl
xchg
add
and
mov
(bad)
mov
sbb
add
mov
jo
mov
fnstsw
pop
push
test
mov
jbe
repz
shr
sti
and
lods
icebp
xor
sbb
dec
aam
jmp
js
test
sbb
jmp
pusha
dec
sub
call
mov
ret
shl
mov
sti
cld
ficom
mov
jl
loop
sbb
ins
mov
daa
jbe
fild
nop
cwde
xor
call
dec
push
push
push
ret
xchg
sub
shl
enter
sar
ja
or
sbb
dec
push
cdq
fisubr
cmp
mov
sub
xchg
dec
sub
adc
jbe
retf
btc
lods
(bad)
(bad)
xor
add
push
xor
xlat
mov
cmove
fdiv
mov
pop
pop
fidiv
aam
sub
call
dec
ja
and
pop
cmp
nop
inc
mov
das
mov
jbe
dec
cmp
add
jno
fwait
jo
push
mov
mov
push
lahf
stos
out
retf
push
push
loopne
jmp
lock
inc
lods
jle
mov
arpl
call
inc
sbb
js
mov
lds
(bad)
xlat
fsub
nop
fadd
add
fs
mov
imul
inc
dec
pop
jmp
jnp
call
push
ret
lods
ret
mov
or
ret
out
out
inc
fmul
mov
sub
sub
xchg
sub
mul
xchg
mov
mov
ret
fdiv
add
iret
arpl
pop
push
into
mov
cmp
in
or
outs
sbb
ret
dec
enter
scas
(bad)
mov
xor
imul
and
xchg
xor
fiadd
sahf
test
nop
push
es
lock
fnstenv
test
into
xchg
dec
mov
fnstenv
hlt
push
outs
or
sub
dec
sbb
lahf
in
stos
pop
mov
das
xchg
rcl
add
mov
jge
jmp
dec
mov
jnp
adc
xchg
scas
push
add
or
push
inc
aad
xor
push
sti
shr
je
test
dec
cli
inc
or
push
push
xchg
cmp
adc
mov
(bad)
and
lods
mov
int
rcr
mov
cmp
cmc
xor
lock
add
inc
pop
adc
sub
bnd
scas
mov
xor
aad
push
or
ret
push
dec
das
pop
pop
rol
aad
cwde
mov
scas
fs
cld
mov
and
sbb
sub
sub
push
and
jbe
aad
in
mov
std
jle
cmp
xor
fdivr
int3
mov
out
icebp
mov
inc
dec
pop
pop
popf
pop
into
mov
(bad)
mov
xlat
and
stos
pop
xor
jge
and
ret
jnp
or
ins
sbb
dec
pop
lods
jae
mov
pop
lea
push
mov
or
xchg
jmp
aam
mov
push
and
adc
sbb
scas
imul
xchg
clc
shl
cwde
mov
add
add
push
fsub
les
mov
dec
nop
fwait
and
jns
stos
ret
sub
inc
xchg
xchg
(bad)
std
jl
mov
push
and
sub
(bad)
cmp
sub
jg
int3
pop
and
ins
stos
lock
retf
xchg
lods
inc
gs
cmc
ret
mov
ins
xchg
pushf
jae
dec
paddb
lods
movs
pop
xor
sub
jb
push
popa
outs
iret
ins
pop
jb
scas
mov
mov
adc
ret
mov
mov
cmp
xor
xchg
je
dec
xor
fcomp
mov
and
jb
xor
dec
out
call
sar
push
jno
dec
out
lods
enter
pop
sub
into
stc
mov
jecxz
push
xchg
fild
loope
mov
cmp
dec
jne
sub
ss
es
clc
in
clc
jo
fidiv
sbb
add
int
dec
in
fisttp
test
scas
movs
adc
cmps
mov
sti
adc
push
push
sbb
xchg
jne
cwde
fwait
push
cmp
aas
imul
aaa
test
xor
xor
xor
dec
mov
retf
iret
xor
pop
hlt
jg
jge
loope
retf
jo
pop
mov
jp
pop
das
lock
cdq
mov
mov
test
xor
punpckhbw
adc
out
and
ds
std
inc
push
or
jp
into
sbb
pop
sbb
test
mov
mov
stc
push
(bad)
les
mov
icebp
push
loop
and
mov
fisttp
repnz
mov
jge
pop
mov
and
jmp
xchg
xor
sub
jo
jge
ret
cli
or
xor
inc
stos
jge
(bad)
repz
jae
fbld
ror
retf
mov
test
ror
aaa
fwait
pop
aam
and
sub
out
and
mov
inc
xor
(bad)
jge
mov
in
mov
daa
adc
mov
ror
(bad)
and
popf
leave
data16
icebp
and
fmul
stos
mov
push
ja
or
mov
or
push
xchg
lods
ret
test
cwde
push
and
lea
sbb
mov
popf
pop
mov
mov
pop
add
mov
cli
sbb
aam
test
out
outs
pop
adc
aaa
mov
xor
mov
js
clc
stos
test
dec
iret
mov
inc
inc
cmps
jo
pop
fidivr
add
pop
aam
or
call
cmp
mov
ins
add
pop
es
fld
les
aad
cwde
add
adc
daa
push
jle
xchg
pop
xchg
add
les
aam
aam
push
xchg
stc
xchg
es
xchg
dec
sub
leave
xor
pop
outs
data16
sbb
loop
int3
jnp
imul
add
mov
stos
adc
popf
clc
add
scas
enter
adc
or
aas
and
xchg
cmc
or
jnp
push
out
sbb
push
mov
sbb
adc
je
dec
iret
cmps
js
ret
in
mov
das
and
mov
repnz
cdq
push
mov
and
test
jmp
jecxz
lahf
out
jne
mul
adc
xchg
cs
es
aaa
cmp
(bad)
test
add
pop
xchg
(bad)
dec
jmp
repz
or
fs
adc
scas
pop
mov
in
pop
mov
adc
into
into
mov
push
mov
cmp
or
adc
js
loope
push
ret
jmp
add
sbb
jnp
mov
mov
sti
adc
movs
pop
xor
(bad)
sub
out
and
sbb
push
or
sar
mov
dec
or
inc
mul
scas
push
mov
scas
adc
mov
inc
sbb
mov
and
jecxz
fsubr
popf
jg
js
aam
inc
pop
in
adc
ror
(bad)
pop
jae
xchg
inc
and
into
adc
jnp
mov
jle
out
xchg
stos
aaa
adc
xchg
stos
mov
inc
and
ja
bound
test
hlt
pop
sbb
cmps
and
inc
mov
sub
mov
ret
add
sub
aaa
or
outs
jmp
mov
sahf
in
adc
shl
mov
mov
push
iret
js
loopne
cld
fst
sbb
push
fsincos
and
ins
inc
das
cmp
mov
retf
mov
sub
int3
lods
int3
hlt
in
dec
outs
bound
imul
retf
push
clc
cmp
sahf
inc
adc
push
pop
mov
test
jp
jle
pop
pop
nop
or
xor
fidiv
add
mov
mov
xor
push
push
ja
retf
pop
daa
inc
pop
mov
repz
jl
outs
ret
in
cmp
jmp
std
in
dec
xor
push
or
iret
dec
data16
loope
ins
std
idiv
call
vpmovm2w
mov
sub
call
mov
int3
pusha
and
jbe
dec
pop
xchg
or
xchg
ins
mov
sub
cmp
mov
in
pusha
iret
dec
nop
cwde
jmp
mov
addr16
retf
stos
test
adc
scas
cmp
aad
fsubp
shr
and
dec
sub
jne
adc
cmp
and
in
test
or
outs
mov
lea
add
inc
pop
xchg
test
out
mov
push
jmp
or
sbb
pushf
sub
xchg
ret
fstp
add
push
dec
mov
jae
push
ret
gs
or
cmp
dec
scas
dec
pushf
fnstenv
(bad)
out
xchg
psrld
xor
jnp
test
mov
popa
pop
lds
outs
add
dec
push
outs
jmp
jae
push
mov
call
xchg
test
sub
pop
outs
mov
lock
test
test
test
cmp
adc
mov
pop
xchg
sbb
test
clc
in
xbegin
loop
or
push
add
inc
test
fsubp
ins
xor
pop
mov
shl
jp
cmp
jno
mov
jg
out
std
loope
aam
loopne
jecxz
sti
push
xchg
mov
cmp
inc
fisubr
mov
inc
jae
out
pushf
or
mov
stos
jp
retf
ja
sub
js
mov
call
bnd
mov
icebp
pop
cmp
cmps
ja
repnz
aaa
stos
sub
jns
jnp
shl
cmp
in
mov
xchg
fnstsw
dec
jle
jb
xor
arpl
int3
mov
mov
mov
ret
ins
ret
mov
loop
adc
aas
dec
(bad)
rcr
sbb
mov
dec
test
fs
mov
pop
sar
int3
mov
dec
lahf
adc
pop
pop
mov
pop
outs
adc
pop
imul
jmp
bound
jg
out
mov
(bad)
hlt
cmc
popf
ds
jp
test
mov
cs
sar
or
or
sub
push
pop
les
mov
mov
call
lods
mov
sbb
sub
out
(bad)
adc
lock
jmp
js
out
dec
mov
jge
iret
pop
sub
pop
xor
push
cwde
mov
and
push
push
shr
inc
push
iret
mov
iret
aas
xchg
mov
adc
(bad)
push
mov
out
cmc
and
(bad)
sbb
cmp
and
add
and
xchg
jno
inc
test
stos
push
pop
add
dec
retf
xchg
cmp
jge
aad
popa
pop
scas
pop
arpl
(bad)
cli
jecxz
ror
jmp
mov
xchg
cmc
sub
or
sbb
fnsave
inc
jo
sbb
lods
sbb
lods
movs
xor
inc
(bad)
call
push
shl
xchg
aad
mov
push
lock
repz
test
cmc
es
loopne
ins
cmp
ffree
push
fadd
(bad)
mov
dec
pop
sbb
add
dec
jbe
aaa
xchg
loope
pop
push
mov
icebp
in
push
and
movs
js
jne
or
xchg
push
jecxz
ret
cwde
sar
mov
dec
push
pop
sar
and
pop
xchg
inc
cs
std
aaa
push
lods
dec
cmp
fistp
mov
mov
movs
and
jnp
mov
push
xchg
xchg
xchg
and
and
jecxz
xor
out
mov
pop
fnstsw
into
mov
pop
dec
inc
cmp
(bad)
out
lods
or
mov
adc
xchg
cld
dec
popa
mov
retf
cmp
dec
dec
cld
sub
int
push
mov
je
cmp
les
jb
and
add
or
fild
mov
inc
loope
stos
fdiv
sub
ret
mov
sub
aas
push
adc
fidivr
ja
cmp
jle
adc
pop
and
fdivr
xor
push
test
push
adc
push
sbb
sub
neg
ret
and
sub
and
inc
or
or
mov
mov
xor
aad
jmp
fwait
or
clc
std
stos
frstor
pop
xor
data16
imul
fstp
call
in
fdiv
xchg
js
je
and
add
hlt
repnz
pop
fcom
ss
int
push
sbb
hlt
(bad)
jg
push
sbb
add
pop
xchg
jbe
xor
xchg
aaa
into
mov
add
or
mov
add
dec
xchg
clc
ins
mov
or
imul
test
mov
mov
lods
push
adc
int
adc
jae
mov
mov
inc
add
mov
cmp
dec
mov
sbb
push
dec
in
or
lods
dec
or
data16
ins
and
sahf
and
mov
hlt
(bad)
mov
mov
and
push
and
(bad)
sub
je
into
mov
mov
sub
xor
jle
push
mov
push
cdq
mov
pop
(bad)
or
mov
sub
sbb
pusha
mov
xor
push
cmps
push
hlt
popf
jle
stc
pop
retf
pop
shl
sbb
into
push
mov
je
in
call
loopne
mov
mov
dec
sbb
mov
test
or
sbb
mov
je
daa
sbb
data16
pop
ror
push
popa
inc
inc
leave
imul
sub
fucomip
or
or
fld
in
pop
leave
inc
dec
mov
fs
mov
sbb
ret
xor
mov
sahf
popf
cdq
sbb
not
ja
dec
das
mov
sub
xchg
mov
mov
dec
xchg
test
pop
cmp
mov
sub
sbb
sbb
mov
fld
inc
pop
cmp
int3
stos
into
(bad)
popa
es
xchg
jp
push
jne
mov
test
mov
jno
lods
sbb
hlt
shr
ret
imul
jmp
push
push
fsubr
mov
retf
xchg
xchg
cwde
bound
pushf
mov
icebp
sub
mov
sub
cwde
test
add
into
test
jo
mov
call
mov
pop
dec
sub
fisub
call
and
cmps
push
test
fstp
jo
aas
loopne
jge
pop
pusha
fstp
in
cmp
into
sbb
(bad)
and
clc
add
ret
in
mov
mov
mov
cli
clc
pushf
add
add
call
mov
mov
rol
jns
cmp
sbb
retf
repz
push
sbb
mov
ret
xchg
les
jo
es
lods
ins
adc
ds
jne
xor
stos
mov
fistp
or
bound
pop
(bad)
or
gs
imul
xchg
mov
jge
push
push
add
add
fcmovb
pop
(bad)
rol
pop
jmp
pusha
aas
imul
fsubr
mov
es
stc
xor
and
fwait
sub
retf
jmp
inc
or
test
mov
adc
pusha
ret
mov
popa
retf
inc
test
push
test
inc
int3
pop
mov
out
aam
into
mov
pop
pop
shl
mov
popa
xchg
dec
mov
mov
mov
(bad)
adc
sbb
mov
and
mov
sbb
ret
out
pop
iret
nop
(bad)
pushf
stc
dec
push
xchg
(bad)
jl
sub
inc
pop
enter
pop
in
ficomp
imul
inc
popa
dec
pop
in
pop
std
xchg
shl
add
dec
call
movs
pop
push
push
(bad)
popf
pop
inc
icebp
or
js
sub
xlat
mov
pusha
pushf
cwde
jmp
(bad)
mov
call
xor
pop
xor
nop
leave
pop
(bad)
xor
int
pop
sti
mov
pop
adc
clc
jbe
arpl
xchg
lahf
mov
inc
icebp
retf
dec
xor
into
jmp
ja
fisttp
in
test
repnz
cmc
adc
mov
jmp
xchg
jo
add
sbb
shld
ds
cmps
adc
or
div
cmps
cmp
je
jp
neg
push
xchg
push
jmp
mov
lahf
adc
fdivp
pop
adc
fwait
lock
cmp
aas
js
cmps
and
das
cmp
retf
mov
rcr
sbb
xchg
mov
or
and
push
push
aam
sbb
js
xchg
lods
scas
xchg
dec
dec
je
pop
pop
and
int3
xor
js
aad
sbb
adc
mov
jno
cli
ficomp
sbb
adc
std
add
cmps
adc
sub
popa
mov
popa
inc
sahf
jecxz
popf
fiadd
addr16
pop
xchg
mov
mov
pushf
pop
jg
dec
inc
daa
mov
loope
cmp
pminub
jbe
(bad)
and
mov
push
test
(bad)
jmp
add
sub
ret
fst
pusha
shl
stos
fwait
retf
jmp
jno
fst
and
and
mov
scas
add
xor
daa
dec
outs
lods
gs
lods
movs
dec
pop
mov
fidiv
(bad)
xlat
adc
enter
dec
imul
repz
mov
icebp
jmp
sub
inc
xchg
(bad)
retf
pop
aam
jno
inc
lahf
dec
jl
je
inc
mov
cld
sub
jle
mov
movs
hlt
add
fsubrp
clc
fisubr
cmc
scas
xchg
or
dec
pop
retf
(bad)
daa
ficomp
adc
call
jne
ins
hlt
adc
rol
fstp
sar
clc
cmp
ds
rcl
(bad)
ins
jne
pop
sub
push
sbb
idiv
imul
sub
or
pop
outs
mov
push
fld
adc
mov
mov
pop
fist
push
fld
jmp
pop
xor
es
xor
mov
xor
or
mov
push
(bad)
xor
cmp
sar
dec
mov
pop
cmp
cdq
lds
gs
xor
mov
aam
rcl
mov
pop
mov
daa
cmps
sub
or
cdq
dec
iret
ins
mov
inc
push
leave
fimul
and
push
mov
sub
mov
pop
and
jmp
jmp
pop
xor
jl
test
dec
(bad)
(bad)
push
lods
clc
(bad)
out
mov
movntps
daa
inc
jb
cmp
(bad)
jb
cmp
and
cmp
imul
mov
adc
rcr
inc
les
repnz
adc
cdq
cmp
mov
cmp
imul
mov
mov
cli
sbb
jmp
in
jecxz
push
mov
imul
sar
pop
inc
jmp
call
cs
arpl
sahf
mov
jle
(bad)
fsubr
mov
les
xchg
iret
sar
rcl
and
ins
inc
pcmpgtb
mov
mov
or
ja
shl
pop
lock
or
sbb
(bad)
gs
sub
inc
push
enter
or
cmp
xchg
cmp
cmp
hlt
jns
pop
iret
mov
(bad)
sub
in
jns
nop
inc
xchg
adc
push
xchg
push
int
xor
dec
lods
in
xchg
test
mov
and
pushf
mov
mov
inc
ret
mov
mov
jo
and
ror
les
(bad)
retf
push
cmp
stos
add
jo
mov
int
or
pop
(bad)
(bad)
iret
add
jnp
jnp
mov
sub
ss
lods
add
mov
add
mov
jge
das
add
fstp
and
cmp
mov
add
fwait
into
sub
jo
sub
neg
les
les
lods
mov
std
mov
(bad)
das
dec
pusha
jmp
xor
popa
stos
add
jge
test
nop
or
push
sub
ss
dec
stos
dec
or
movs
and
dec
leave
repnz
mov
push
stc
and
cmp
jmp
mov
daa
pop
fidiv
xor
retf
xchg
or
and
loope
retf
jmp
jmp
adc
dec
mov
(bad)
(bad)
and
jns
in
jbe
cdq
or
pushf
cmp
pop
ror
pop
imul
clc
mov
test
ins
pop
push
stos
in
pop
pop
add
retf
gs
and
xchg
jl
in
shr
lock
jno
pop
push
rcr
fmul
in
inc
(bad)
mov
in
rcl
mov
or
sti
clc
mov
jns
push
fwait
ret
sti
in
inc
jb
and
js
dec
jp
rcr
out
icebp
jp
cmp
push
pop
mov
je
(bad)
retf
ja
push
jecxz
cld
mov
dec
pop
repnz
mov
nop
adc
jecxz
push
(bad)
in
adc
aas
dec
sub
fmul
call
jb
pop
test
dec
xor
sbb
lods
daa
jo
call
pop
xchg
mov
push
test
mov
cmp
in
or
mov
cmp
fcomp
fidivr
lahf
xor
int3
outs
and
xor
lea
daa
dec
add
cwde
clc
push
dec
xchg
jmp
and
fld
outs
inc
sub
in
scas
lods
xor
pop
and
retf
xor
sub
js
jmp
add
in
xor
mov
push
fild
test
push
sub
dec
pop
sub
cmps
enter
inc
(bad)
and
mov
jecxz
xor
sbb
sub
push
pop
mov
mov
scas
and
adc
add
test
and
jmp
cld
dec
or
pop
sbb
cmp
es
mov
das
and
push
arpl
or
(bad)
shr
jle
sub
cwde
sti
inc
int
mov
clc
cmp
data16
mov
push
fadd
cwde
sub
aas
push
jmp
aam
fistp
scas
push
xor
(bad)
aad
and
sbb
dec
lods
loopne
xchg
dec
pop
aad
dec
fistp
push
adc
(bad)
cs
dec
std
(bad)
jecxz
lods
mov
lahf
jmp
lods
xchg
dec
sti
mov
ror
mov
xor
mov
mov
rcr
shl
sbb
push
push
jle
mov
fisttp
(bad)
ficom
dec
xchg
lock
pushf
out
xchg
pop
cmp
jnp
aam
ins
inc
mov
push
jnp
sahf
cdq
fstp
xlat
dec
cmc
inc
ficomp
and
mov
fmul
xor
data16
xchg
dec
je
push
xor
les
test
and
mov
add
inc
clc
mov
xchg
cmp
push
jle
repz
test
fs
push
(bad)
adc
ffreep
mov
mov
mov
mov
mov
jb
lods
popf
or
cdq
jg
mov
inc
or
arpl
retf
adc
push
jge
xchg
and
dec
imul
je
add
hlt
stos
xchg
hlt
outs
jmp
jl
mov
pop
mov
arpl
jmp
aam
rcr
xchg
in
fsubrp
push
mov
arpl
stos
ins
adc
sub
test
jle
add
popa
jge
sbb
ins
mov
xchg
outs
mov
clc
inc
jecxz
test
adc
push
inc
jecxz
sbb
inc
xor
je
jmp
repnz
loope
xchg
push
inc
jb
mov
int
or
sbb
inc
xor
add
(bad)
icebp
fild
pop
add
lahf
retf
sbb
push
and
dec
mov
cwde
movs
adc
adc
jo
sub
aas
cmc
aad
pop
dec
inc
jmp
mov
mov
inc
pop
or
jge
jl
jmp
adc
mov
adc
mov
jg
gs
inc
ins
sbb
cmps
xchg
pop
inc
xchg
mov
retf
mov
aas
out
nop
xchg
scas
xor
(bad)
dec
sub
test
push
xchg
jmp
xor
loop
or
loopne
inc
add
add
loope
daa
rcr
jmp
mov
leave
mov
lahf
call
cmc
scas
push
or
jo
lahf
and
je
dec
arpl
adc
mov
cli
loop
call
add
xchg
(bad)
xchg
xchg
repz
pushf
ja
adc
(bad)
cmp
test
in
loope
std
jbe
dec
adc
dec
push
ror
mov
adc
push
jl
mov
(bad)
adc
jae
fst
loop
cli
imul
(bad)
ins
cmp
push
mov
mov
sub
or
mov
fadd
xor
or
xor
dec
pop
aas
aas
fnstenv
test
aad
mov
pop
or
call
jne
in
inc
repnz
xchg
outs
and
and
popa
push
pop
jle
xor
and
cwde
xchg
pusha
fs
ds
sub
mov
fldenv
fwait
cmps
and
jmp
sub
test
pop
adc
push
and
sbb
mov
pop
fs
lock
call
xchg
add
repnz
and
pusha
xchg
xchg
mov
scas
data16
cmps
jge
add
sahf
stos
dec
mov
push
in
into
loop
sub
div
pop
(bad)
push
push
dec
out
aam
shl
xchg
jg
pop
xchg
push
jmp
call
enterw
inc
sub
pushf
inc
repnz
cdq
and
mov
jb
(bad)
aas
jbe
addr16
mov
cld
dec
das
pop
std
jecxz
test
and
retf
and
clc
xor
call
push
mov
dec
cdq
cli
fs
mov
retf
iret
cmp
and
call
outs
(bad)
xchg
xor
mov
stos
cmp
int3
mov
lods
dec
mov
pusha
icebp
in
in
mov
xchg
sub
inc
sub
cld
jno
inc
sbb
call
push
les
mov
jb
sahf
push
les
mov
jb
xchg
jb
mov
clc
push
aas
mov
aam
scas
xor
iret
loope
or
test
sbb
out
jge
(bad)
call
mov
push
jge
and
pop
popa
push
dec
arpl
ja
pusha
fs
mov
aaa
push
scas
pop
dec
loop
mov
mov
xchg
lea
out
sub
push
jns
scas
push
into
in
jle
inc
sbb
mov
cdq
push
fwait
xor
xor
mov
dec
xor
pop
fisttp
jae
fs
shl
mov
retf
bnd
push
(bad)
jp
jl
aaa
jle
adc
mov
outs
cwde
in
loope
pop
xchg
jecxz
sar
dec
or
repnz
call
popf
cmp
aad
clc
jno
mov
call
in
mov
add
imul
stc
sub
or
adc
jno
ins
sti
cmps
mov
lods
push
ficomp
call
shl
sahf
rcr
sar
fisttp
leave
inc
out
mov
jb
mov
fstp
add
mov
loope
cmps
mov
push
pop
das
sbb
mov
mov
sbb
cmp
inc
shl
jmp
test
enter
xor
fcom
pop
inc
int3
jbe
cmp
push
mov
or
ret
outs
pop
sub
fsubr
push
sub
jmp
mov
pop
and
fs
xchg
push
ins
imul
je
leave
mov
adc
pop
mov
cs
shr
jne
sub
mov
ins
xchg
imul
scas
adc
(bad)
jmp
icebp
dec
jg
jg
icebp
out
sbb
pop
mov
imul
movs
nop
mov
retf
out
dec
sbb
inc
gs
push
loop
pop
stos
fist
cmp
loopne
or
xchg
fmul
data16
jno
cmp
dec
call
mov
add
or
ret
jle
aaa
call
outs
(bad)
loopne
fnstcw
(bad)
hlt
dec
mov
xor
mov
fiadd
mov
bound
xor
jge
jmp
fld
pop
add
jp
jo
pop
xchg
stos
or
jnp
push
adc
add
retf
mov
dec
(bad)
sub
fcomi
dec
sti
sub
outs
fs
xchg
lea
jecxz
add
xchg
test
dec
and
cdq
jo
jno
outs
out
imul
popf
sub
dec
pop
jl
pop
push
sub
and
in
add
test
jmp
cmp
scas
idiv
shr
js
inc
jne
or
jbe
add
movs
pop
and
add
inc
push
add
dec
leave
mov
out
mov
cmp
mov
cmc
test
or
shl
jne
inc
sahf
cli
jae
gs
loop
inc
call
push
stc
loopne
out
sbb
pop
stos
mov
jle
leave
mov
jo
cs
adc
xlat
sub
in
retf
imul
sub
mov
mov
mov
fwait
nop
movs
or
outs
xlat
add
lock
or
mov
aam
sbb
pushf
bnd
pusha
mov
movs
pop
sbb
lds
leave
ret
(bad)
repnz
je
mov
xchg
cmp
jb
and
mov
xchg
sbb
mov
aam
mov
adc
(bad)
bound
stc
pop
inc
pop
std
sub
cwde
xchg
in
push
repz
test
xchg
test
(bad)
repz
sub
adc
std
pop
sbb
push
cmp
inc
xchg
cmp
pop
mov
jno
rcr
and
cwde
fwait
mov
pop
cli
dec
pop
iret
cmp
and
sub
jmp
mov
xor
dec
inc
pop
hlt
movs
adc
pushf
jae
push
enter
cli
es
add
jae
dec
push
popf
imul
int3
and
(bad)
fild
cmc
jp
(bad)
jbe
stos
push
xor
push
dec
lods
lahf
pop
cmp
mov
fistp
inc
in
mov
sbb
popa
add
mov
int3
push
or
pop
vzeroupper
pop
rcr
data16
dec
loopne
jbe
pop
sar
cmp
sti
mov
mov
sahf
leave
and
mov
jge
and
add
xchg
jnp
and
mov
and
arpl
daa
inc
adc
mov
inc
(bad)
push
or
ss
pop
popa
jp
and
xor
sbb
lods
pop
js
xor
jae
dec
mov
mul
imul
dec
and
loopne
ss
inc
test
pop
fadd
sub
inc
iret
sar
stos
sub
pop
jg
push
pop
aas
aam
sbb
sub
(bad)
mov
int3
lock
mov
jae
sub
pushf
arpl
inc
in
pusha
in
or
mov
xchg
fcmovb
push
cmp
outs
into
mov
xor
bound
sbb
cwde
mov
rol
shl
cmp
mov
ret
add
cmp
rcr
pop
sbb
cmps
dec
aas
iret
loope
jmp
mov
and
push
cdq
jmp
push
mov
add
push
push
jge
cmp
addr16
pop
pop
mov
xlat
rcr
std
mov
call
cmc
push
or
adc
xchg
retf
int
loopne
ins
addr16
dec
cmp
nop
fidiv
in
add
xor
pop
shr
(bad)
jle
push
sub
test
pop
mov
fimul
mov
pushf
jnp
ds
mov
mov
ror
mov
std
loop
adc
jae
mov
or
or
mov
and
or
fwait
stos
mov
cmp
pusha
aam
pop
push
add
out
ja
sahf
sbb
lea
and
sub
popa
or
jb
(bad)
xor
pop
cwde
rol
fsubr
ins
jne
cmc
sub
jmp
xchg
fyl2x
mov
sub
mov
daa
pop
aaa
sub
and
xchg
and
jns
jae
cs
outs
cs
loope
ins
adc
fs
pop
mov
push
cs
mov
daa
pop
mov
enter
nop
(bad)
xor
test
mov
cli
xchg
(bad)
les
movs
mov
cli
ja
sbb
sbb
mov
or
mov
shl
mov
add
or
popa
mov
mov
mov
movs
jb
add
aad
xchg
inc
fdivr
retf
mov
mov
push
pop
xchg
mov
aaa
ss
into
adc
push
xchg
hlt
ins
cmp
adc
sub
pop
jb
sub
xchg
xchg
arpl
cmp
add
or
push
or
loop
shl
fisttp
mov
mov
lds
pop
std
sub
mov
push
leave
sbb
dec
in
and
inc
pusha
mov
in
test
mov
dec
fild
dec
je
(bad)
xchg
leave
sub
jae
add
mov
or
lock
imul
ja
xchg
xchg
sub
xlat
je
cmp
test
mov
push
outs
push
inc
dec
and
sub
sbb
ins
adc
in
mov
adc
mov
inc
lock
psraw
aaa
loop
sub
test
das
inc
cmp
jo
cmp
and
xchg
aaa
push
xor
cld
out
jne
dec
adc
(bad)
out
rol
xor
or
repnz
out
xchg
add
xchg
push
mov
neg
jg
test
out
inc
inc
push
rcr
(bad)
or
jno
inc
cmps
sbb
dec
sub
mov
dec
xchg
push
add
imul
rol
call
aad
test
sbb
jge
jge
hlt
(bad)
pop
int3
xlat
add
in
inc
stos
popa
in
adc
jp
and
mov
retf
add
cli
shl
stos
mov
mov
ss
cld
lahf
xor
repnz
scas
ds
or
mov
jmp
mov
pop
nop
iret
sbb
add
mov
hlt
mov
mov
mov
pop
mov
jp
cmp
in
add
daa
cmp
dec
cmp
xor
fiadd
mov
pop
xchg
imul
push
sub
rcl
test
stos
xor
mov
adc
hlt
adc
xor
loop
add
movs
jg
mov
jne
fs
loop
test
cmps
jmp
pusha
mov
xlat
pop
mov
mov
dec
shl
or
pop
cmp
and
push
stos
dec
mov
lock
rol
xchg
stos
and
stos
enter
cmp
mov
mov
call
(bad)
lahf
jle
(bad)
adc
gs
(bad)
hlt
popa
cmp
inc
mov
stos
test
push
das
test
cmp
mov
jbe
add
lock
ja
pop
std
sti
scas
pushf
outs
mov
test
jno
shl
int3
push
pop
data16
retf
add
(bad)
sbb
retf
jp
out
sbb
push
jo
das
int3
mov
xchg
pop
pop
arpl
or
xor
ds
mov
in
sbb
cmp
mov
popf
or
adc
dec
cmp
out
les
das
add
in
in
jle
es
retf
arpl
into
jns
jl
in
cmp
cmps
rol
mov
dec
repnz
test
mov
loop
mov
lahf
sti
or
push
adc
push
adc
and
dec
add
mov
(bad)
js
jo
pop
cmp
mov
rep
sbb
pop
dec
adc
out
and
test
in
dec
repz
cld
popf
hlt
mov
ds
shl
popf
or
out
jle
cmps
fxch
cs
mov
or
xchg
sbb
push
in
iret
xor
movs
lea
bound
imul
mov
mov
cmc
jmp
push
in
movs
jo
xchg
mov
shr
push
push
cmp
cmps
adc
dec
js
test
push
jmp
cld
enter
lods
sub
pushf
rol
or
ins
xchg
mov
cmps
mov
cmps
xor
mov
xor
imul
inc
mov
mov
cmps
in
iret
xor
xlat
pop
mov
scas
fsubr
mov
mov
and
sbb
push
push
fsubr
inc
push
dec
adc
mov
std
call
inc
dec
lods
(bad)
stc
jecxz
lds
sub
scas
push
pop
sbb
mov
inc
inc
mov
inc
adc
push
mov
test
cmps
leave
xor
jnp
in
sub
dec
lods
mov
adc
add
repnz
stos
mov
inc
mov
arpl
cmp
inc
imul
jbe
lods
test
mov
mov
(bad)
push
mov
jl
imul
mov
std
(bad)
sbb
xchg
sub
test
cmp
or
popa
mov
push
jo
add
icebp
imul
xor
inc
inc
fnstsw
xor
int
mov
sub
lds
mov
mov
mov
lahf
lods
nop
dec
dec
add
xchg
push
pop
cmp
cli
retf
icebp
sbb
ret
scas
int3
cmc
jb
mov
and
clc
(bad)
jnp
pop
dec
ret
ja
pop
aaa
(bad)
jmp
push
jg
inc
add
pop
and
clc
mov
push
adc
cmps
test
pop
xchg
cwde
pop
dec
mov
or
retf
mov
xchg
mov
stc
push
sbb
fcmovbe
mov
push
in
icebp
mov
pop
xor
(bad)
cmp
mov
jg
sbb
cmps
push
or
in
shr
mov
das
sub
mov
jb
sbb
enter
adc
mov
inc
or
inc
add
out
dec
pop
cdq
add
bound
sbb
mov
into
or
and
out
sar
push
rcl
or
aam
mov
and
out
xlat
cmp
push
cmp
inc
fisubr
jno
or
mov
out
xor
mov
sbb
cmps
fistp
inc
test
call
push
stc
mov
rcr
mov
call
jns
and
rcl
mov
lods
mov
and
(bad)
rol
int3
cdq
sar
addr16
retf
sub
imul
in
adc
fdivr
and
add
test
repz
cmp
xchg
movs
ins
fs
test
daa
sub
push
out
xor
push
repnz
data16
lods
ret
cli
mul
mov
(bad)
stos
(bad)
rol
popa
adc
xor
sbb
and
jmp
pop
pop
(bad)
scas
mov
inc
rcr
and
inc
out
adc
sahf
or
add
mov
dec
mov
inc
call
or
mov
and
std
int
imul
lods
mov
xor
(bad)
cmp
(bad)
lods
dec
push
ins
sub
into
mov
pop
sbb
inc
push
out
mov
push
out
add
add
or
cmp
popf
jge
enter
push
and
call
movs
cmp
inc
cmps
sbb
inc
movs
daa
lea
add
loopne
sti
fs
je
movs
mov
loopne
and
push
cmp
push
(bad)
sub
xchg
pop
or
jecxz
jp
(bad)
fdiv
shl
test
inc
push
push
mov
cmc
retf
push
loop
mov
stos
or
xchg
std
mov
jne
imul
sub
stos
pusha
rcr
add
lahf
mov
mov
cmps
out
lea
xchg
jg
mov
jmp
shl
fmul
push
jmp
jmp
inc
bound
add
mov
aad
and
mov
data16
loop
or
cmp
clc
data16
and
lods
cwde
xchg
or
adc
fiadd
mov
cwde
xchg
loopne
and
adc
mov
xor
and
mul
iret
sbb
dec
xor
xor
idiv
test
pushf
(bad)
psubb
call
xor
inc
add
push
jb
inc
sbb
xor
(bad)
test
test
jns
add
dec
xor
dec
or
ja
and
mov
stc
jns
sub
(bad)
jno
or
rol
nop
in
aaa
ss
imul
xor
or
out
sub
xchg
fidivr
pop
pusha
dec
shr
int
xchg
sahf
fwait
mov
or
jle
aaa
out
sub
ret
pop
iret
gs
add
or
mov
jle
ins
push
jecxz
add
addr16
les
imul
cmp
pop
and
fs
and
and
lds
cmps
jbe
add
mov
fsub
pusha
mov
in
dec
push
pop
cs
(bad)
cmp
or
inc
cmc
mov
js
into
xchg
and
cld
xor
das
cmc
sbb
inc
fcmovne
pop
xchg
sub
mov
shl
addr16
std
into
add
pop
movs
in
test
scas
xor
mov
jle
jb
aas
es
pushf
ja
loope
movs
lods
xchg
inc
xor
xlat
cli
add
push
mov
mov
push
push
lock
adc
mov
repz
inc
retf
daa
mov
sub
dec
add
popf
and
pusha
fist
push
mov
aam
je
and
push
mov
mov
addr16
mov
repz
mov
mov
jle
lea
xchg
scas
fild
xor
aad
aad
sub
xor
repnz
jecxz
data16
cmps
adc
bnd
pop
lds
loope
sbb
xchg
mov
push
inc
loope
mov
push
xchg
stc
push
jle
sbb
push
das
imul
or
and
and
daa
fwait
mov
or
push
aad
ror
push
icebp
aam
sbb
adc
inc
outs
xchg
nop
es
cs
mov
add
popa
enter
into
out
xchg
push
add
popa
mov
and
stos
sahf
lods
addr16
(bad)
cmp
cmps
enter
in
es
cmp
(bad)
push
sbb
repz
mov
(bad)
mov
aas
fst
outs
pop
outs
in
out
mov
ret
ss
cmps
fwait
dec
cmp
inc
jp
mov
jecxz
pop
popf
repnz
pushf
mov
cmps
(bad)
cmp
jg
mov
pop
out
jecxz
push
mov
push
sbb
add
inc
cmp
sub
cdq
out
cmps
adc
adc
jp
rol
pop
jne
or
pop
adc
xor
pop
jno
ret
inc
cmps
xchg
push
fstp
std
ins
push
add
and
xor
sub
adc
ja
adc
xchg
jo
int3
add
jmp
or
mov
jo
dec
xchg
sub
sbb
stc
shl
jb
fs
jmp
cld
cmps
mov
and
retf
sbb
popa
sbb
lock
(bad)
push
mov
aad
adc
push
jae
repnz
in
dec
adc
(bad)
rol
stos
fstp
(bad)
loope
inc
xor
mov
mov
outs
xor
stos
mov
lods
cmp
cmp
pop
out
sub
test
mov
rcl
mov
xor
or
cs
stc
outs
cmp
add
cmp
cs
stc
fs
pushf
aas
fcomp
mov
push
cmps
mov
(bad)
adc
retf
clc
into
into
mov
mov
mov
xor
shr
xor
sbb
mov
jg
mov
out
and
lods
xchg
xor
cdq
xchg
sbb
fsubr
push
jmp
push
scas
jnp
inc
retf
imul
sub
inc
mov
bound
lods
fnstcw
sbb
leave
cmps
out
push
adc
repnz
lods
or
inc
jbe
fwait
jg
dec
leave
sub
mov
mov
xor
pushf
je
jns
jnp
stc
fcmovnbe
int3
inc
stos
into
sub
and
aaa
and
mov
and
pop
sbb
dec
icebp
shl
lock
xchg
xor
hlt
xor
int3
xor
dec
mov
sbb
pop
lahf
cmp
int3
(bad)
adc
pop
(bad)
(bad)
xchg
iret
sbb
adc
(bad)
and
xor
mov
mov
out
cmp
adc
jp
imul
and
xchg
(bad)
popa
cmp
test
data16
int3
test
xchg
sbb
movs
int3
xor
add
push
jae
push
repz
ret
cwde
xchg
xor
sbb
dec
aad
idiv
pop
mov
dec
mov
cs
jbe
cdq
sub
mov
lods
xchg
jb
sbb
ret
into
popf
jle
inc
out
sub
xrelease
push
retf
imul
and
ret
mov
mov
retf
data16
ret
outs
sbb
fdiv
aaa
ficomp
push
adc
sbb
sbb
movs
sbb
cli
xchg
sub
imul
and
retf
adc
test
popa
add
mov
cmp
pop
cmc
xor
xchg
jo
int
mov
mov
pop
mov
sbb
movs
scas
adc
push
leave
int3
test
xor
dec
je
add
ds
sub
xchg
inc
hlt
push
rcl
int3
push
jbe
aad
daa
cmp
jo
mov
out
xchg
pop
push
mov
xor
pop
fld
sbb
fdivrp
pop
push
xor
mov
xchg
or
mov
je
cdq
mov
hlt
scas
out
push
call
jae
xchg
mov
out
lods
adc
pop
stos
out
jg
pop
jmp
dec
pushf
sbb
dec
cdq
stos
pop
inc
pop
mov
js
cmp
es
jg
pusha
sub
fistp
test
ins
fadd
fld
pop
ja
rcr
and
jp
or
popf
mov
or
iret
inc
iret
je
pop
fwait
jno
dec
out
(bad)
stc
inc
sbb
ror
dec
pop
out
mov
fs
movs
(bad)
mov
leave
pop
mov
int3
and
push
mov
es
mov
ins
fnstsw
pop
adc
mov
nop
in
inc
xor
sub
jbe
mov
repnz
adc
push
push
jp
outs
push
jecxz
push
jecxz
(bad)
in
push
(bad)
sar
test
test
sbb
xchg
cmps
sub
sbb
mov
adc
mov
pop
sub
das
push
push
lahf
and
or
sub
add
jge
rcr
jg
gs
aaa
outs
ins
mov
adc
pusha
scas
push
or
frstor
fsubr
cwde
push
scas
add
pushf
(bad)
ficom
in
mov
lds
xor
repz
or
push
loop
fld
push
jge
dec
maskmovq
mul
adc
(bad)
jge
inc
call
mov
or
push
mov
dec
ror
xchg
or
push
jmp
std
(bad)
pusha
cld
push
stos
and
mov
cmp
and
lahf
(bad)
test
jbe
inc
fdivrp
jg
daa
add
xchg
fsubr
cmp
out
cmps
imul
jmp
(bad)
mov
jecxz
ror
pop
(bad)
out
cwde
mov
xchg
les
rcl
scas
sbb
fdiv
nop
loopne
and
leave
sub
mov
mov
xor
jne
mov
pushf
mov
ins
jp
push
pushf
in
xchg
jmp
fst
out
or
retf
retf
or
movs
cmp
dec
mov
add
or
mov
cmp
add
add
sub
enter
push
mov
out
and
jo
mov
sar
pop
mov
cld
cli
mov
xchg
push
mov
outs
jl
(bad)
mov
icebp
jno
stc
cmp
push
xchg
repz
pusha
push
mov
or
mov
dec
jne
clc
bound
jle
and
fild
mov
add
aam
cmp
(bad)
sub
mov
xchg
mov
clc
xchg
cmps
inc
test
cmps
mov
sahf
pop
ror
jmp
lods
fs
dec
iret
mov
push
jmp
or
daa
pushf
sub
jns
push
mov
repnz
xor
es
and
xor
sub
scas
out
cmp
out
xor
sahf
cmp
mov
aaa
mov
dec
lods
add
cmps
inc
fbld
sub
jno
jne
mov
xchg
and
push
sbb
lods
mov
outs
xlat
cmp
cmp
pop
adc
mov
rdmsr
(bad)
clc
iret
xchg
push
adc
aad
dec
sar
cmp
pop
fs
shr
sbb
cmp
neg
pop
adc
mov
shl
imul
jmp
cmp
adc
push
pop
adc
lods
cmp
jle
fdivr
test
cmc
mov
mov
or
out
sbb
sbb
and
mov
lods
ja
push
xchg
test
mov
jno
jo
mov
inc
push
imul
fsubr
data16
xor
push
sub
and
leave
call
sbb
xchg
fild
in
xchg
push
xchg
jmp
(bad)
pop
xchg
pusha
and
ror
inc
mov
or
mov
add
sub
or
add
xlat
pop
adc
push
aam
jmp
in
dec
dec
jo
add
xor
inc
push
div
js
inc
dec
movs
popa
inc
pop
sub
pushf
xor
mov
repz
ins
jnp
bnd
adc
push
sub
(bad)
mov
and
sbb
jnp
clc
jne
dec
jl
lea
fbstp
(bad)
fldenv
inc
or
dec
test
popf
cmp
cdq
iret
pop
scas
cs
dec
stc
adc
data16
inc
xlat
cmp
cmp
imul
(bad)
push
lods
mov
ret
mov
add
std
hlt
mov
and
scas
and
sub
mov
arpl
jp
sbb
lahf
jle
call
sbb
xor
and
push
fstp
ja
dec
jmp
mov
jo
sbb
pop
ret
mov
cdq
not
jge
adc
jg
retf
sbb
(bad)
dec
mov
out
pop
pop
push
dec
and
jmp
cmp
sbb
add
cld
fistp
js
cmp
or
dec
iret
xlat
pop
repz
mov
cli
mov
cs
adc
out
push
jmp
mov
shr
adc
ins
lock
dec
ja
je
add
dec
or
push
in
add
pop
push
movs
pop
gs
imul
xchg
fdiv
xchg
xor
adc
jg
shl
xor
into
jg
dec
or
fisub
mov
add
sub
test
mov
mov
(bad)
ins
pop
and
cmp
and
cmp
or
sub
and
xlat
inc
jo
jae
cmp
push
xchg
mov
cmp
jns
adc
movs
xor
pusha
(bad)
push
jle
aam
fiadd
outs
jo
jp
iret
push
aaa
push
js
rcl
(bad)
ins
dec
test
fcom
ins
mov
ror
fild
pushf
adc
pop
test
icebp
pop
(bad)
fadd
data16
push
and
mov
int
xchg
ins
jns
xchg
bound
xor
fiadd
das
sahf
lahf
dec
aaa
test
xchg
sbb
icebp
outs
retf
adc
sbb
cmps
inc
stos
sub
add
addr16
jne
xor
sub
push
outs
inc
js
pop
ins
jb
imul
imul
pop
sub
mov
test
scas
mov
fdiv
mov
pop
push
test
dec
stos
invd
xor
inc
push
push
jae
fnstsw
lods
xchg
push
jae
or
int
sub
sub
lds
jg
dec
dec
xchg
and
into
shr
jns
xlat
ins
adc
cmovl
add
pop
sbb
in
add
int
push
movs
inc
clc
adc
inc
cmp
jle
popa
xor
pop
adc
shl
movs
(bad)
push
and
xor
and
popf
and
ja
cmp
cld
inc
scas
xchg
stos
sti
cmp
mul
popf
ins
das
(bad)
and
push
enter
pop
xor
loopne
(bad)
retf
mov
pop
push
mov
sbb
mov
cmps
gs
add
dec
xchg
jmp
jbe
retf
inc
jae
inc
lock
xor
sub
movs
mov
dec
jge
nop
outs
lahf
fbld
inc
bnd
pop
(bad)
cmp
mov
sti
out
adc
js
adc
pop
jbe
mov
in
mov
mov
mov
inc
adc
xor
lahf
mov
int
push
retf
adc
sar
mov
and
sbb
cli
and
xchg
out
push
rcr
mov
js
sub
inc
jb
push
cs
rcr
mov
mov
aam
out
cmp
and
cmps
inc
push
into
adc
test
jmp
std
dec
pop
in
xor
fwait
scas
jmp
repz
pop
inc
jl
xchg
sbb
pop
mov
das
push
ins
xchg
mov
cmp
push
cs
inc
aam
loop
ficom
cld
cmp
or
add
out
lods
xor
int3
jmp
xchg
push
cmp
mov
cmp
aas
fnsave
sub
sub
add
jge
inc
call
and
packssdw
mov
xchg
sub
dec
es
aam
ja
xchg
cmp
(bad)
pop
mov
xchg
pop
push
shr
int
xchg
cmc
jle
fild
jmp
push
push
dec
mov
test
mov
inc
fwait
es
fnstenv
frstor
hlt
data16
jle
push
cmp
test
mov
stos
scas
cmps
fidiv
push
retf
je
cmc
mov
mov
add
popf
push
or
and
jne
push
loop
or
sbb
js
jne
inc
xlat
jb
fild
sbb
mov
or
(bad)
pushf
cmps
xor
sub
test
adc
sti
mov
ret
jmp
or
cdq
push
lds
sbb
mov
jmp
and
xchg
or
mov
test
cmps
sahf
dec
push
inc
and
les
lock
hlt
xchg
nop
fild
pushf
cmc
sbb
(bad)
fs
call
psraw
sahf
push
sub
mov
jmp
mov
and
cmp
pushf
or
test
mov
xor
push
les
fiadd
pop
mov
scas
push
push
mov
mov
xchg
mov
adc
pop
fimul
jmp
jo
retf
call
jle
nop
push
xor
adc
dec
sbb
(bad)
lahf
adc
repnz
nop
shl
stos
leave
pop
outs
pusha
mov
adc
xchg
out
mov
pop
test
add
(bad)
outs
hlt
aas
push
pop
mov
mov
inc
xor
lods
cmp
mov
jmp
adc
pop
(bad)
xor
jno
bound
inc
(bad)
retf
xchg
push
lea
inc
pop
pop
cmp
sbb
mov
ss
outs
hlt
push
inc
jg
mov
mov
shl
inc
inc
cmp
lods
sub
ret
jge
(bad)
fwait
pushf
and
cs
aam
sbb
jmp
outs
mov
xchg
fnstsw
outs
mov
mov
ret
jno
add
cld
stc
sbb
and
jbe
mov
(bad)
jo
inc
sahf
xchg
mov
pop
rcl
xor
leave
jno
out
call
push
inc
ret
out
mov
jmp
test
xor
push
rcl
test
cmp
mov
fst
mov
in
xor
stos
jbe
lock
ins
adc
std
xor
mov
enter
dec
or
sub
or
and
xor
shl
daa
adc
cmp
sti
pop
mov
fstp
bound
mov
in
jge
adc
out
jns
dec
or
popf
(bad)
iret
sub
jb
imul
rcr
mov
lea
cmp
call
or
mov
in
in
sar
xchg
mov
int
cmc
xchg
fadd
xor
mov
clc
in
ret
jl
mov
lock
mov
push
push
adc
mov
cld
ret
loopne
dec
out
or
test
pop
cmp
cmp
div
iret
and
sbb
and
dec
out
sahf
es
jl
in
loopne
call
inc
push
dec
rcr
aaa
(bad)
scas
dec
adc
mov
fwait
sbb
scas
mov
lahf
pop
add
pop
mov
xchg
mov
and
and
pusha
sbb
ret
jnp
stos
or
shr
lds
movs
nop
out
fwait
cmp
jmp
les
std
dec
pop
adc
jp
lds
je
pop
(bad)
loope
adc
vorps
dec
sub
xchg
push
jmp
lahf
mov
add
sbb
scas
sub
stos
cli
shl
fiadd
in
xor
aam
int
mov
fs
cmc
xor
push
jle
xor
jo
jnp
fs
xchg
mov
mov
retf
leave
jbe
dec
jle
jo
mov
xchg
stos
xchg
rol
out
sub
pmovmskb
retf
jnp
call
push
movs
inc
cmps
add
adc
sub
rcl
sbb
lods
ins
sbb
xchg
pop
ja
fdiv
mov
fs
inc
arpl
inc
out
icebp
add
push
cmp
mov
mov
adc
lahf
xor
add
loop
sbb
mov
dec
and
out
data16
add
jns
out
imul
stos
mov
and
push
push
movs
sub
xor
xchg
pop
xchg
push
pop
mov
mov
cmp
lea
dec
sbb
dec
fs
aad
push
shl
lods
mov
add
(bad)
push
sub
les
pusha
adc
mov
and
outs
xor
push
and
retf
push
shr
retf
not
cmp
mov
fdivr
sbb
sbb
cmp
xor
aam
cmp
inc
ins
in
fst
pop
jb
sar
cmp
mov
fwait
(bad)
fisubr
add
or
inc
xor
ret
daa
sub
fmul
scas
lods
fsubr
repnz
call
retf
sub
add
inc
fst
jge
fcom
les
mov
leave
int3
pop
(bad)
(bad)
dec
pop
add
ror
inc
(bad)
fs
into
mov
fdivp
pop
push
in
in
popf
out
sar
ja
leave
pop
fs
scas
adc
loop
cmps
lahf
(bad)
cwde
ins
xor
add
leave
rcr
sub
push
sti
adc
pop
in
fild
sar
test
mov
push
add
cld
adc
movs
jecxz
mov
and
cmc
push
or
ins
out
pop
aam
mov
push
mov
mov
cmp
cmc
and
popf
jg
lods
fsub
rol
fmul
fild
fs
adc
dec
push
call
(bad)
sbb
sub
xchg
push
add
jle
inc
xor
int3
frstor
jmp
pop
retf
rol
or
call
sbb
and
dec
push
push
mov
loope
ror
mov
jbe
rcr
popf
clc
sub
adc
movs
mov
mov
jnp
push
movs
imul
sub
aam
mov
adc
popf
shr
and
adc
(bad)
jmp
loope
shl
fwait
hlt
jmp
(bad)
mov
pop
bound
(bad)
cmp
ret
mov
xchg
cmps
out
mov
jecxz
cwde
adc
xor
adc
ficom
out
cmp
sbb
jmp
mov
mov
xchg
iret
push
cmp
(bad)
cmp
cmp
jmp
pop
mov
test
enter
shr
rcr
adc
out
mov
ins
mov
push
stos
loopne
pop
jb
adc
dec
movs
mov
adc
scas
inc
lock
or
jno
out
jl
and
js
in
sub
(bad)
sub
popf
cmp
cdq
loop
(bad)
clc
sub
pop
(bad)
jnp
shl
add
cmp
imul
mov
gs
dec
adc
stc
add
out
mov
mov
in
ss
popf
jbe
mov
cmp
or
mov
mov
pop
dec
ss
icebp
pop
pop
jg
hlt
jg
cmp
xor
xchg
push
stos
imul
and
iret
jb
mov
imul
cwde
retf
sbb
lea
dec
or
mov
lods
call
pop
cmc
shl
jb
jp
test
inc
xor
sbb
retf
inc
and
xchg
call
cwde
cmp
xchg
cmp
cmp
pop
int
cmp
ins
or
push
(bad)
ffree
pslld
out
ret
xor
mov
into
mov
out
push
mov
data16
cwde
imul
nop
(bad)
push
stos
and
adc
or
mov
cmp
enter
adc
frstor
arpl
adc
or
sbb
inc
mov
pop
or
ss
aad
cwde
test
mov
dec
(bad)
ds
lahf
dec
nop
shl
pop
add
and
in
cwde
mov
leave
mov
adc
and
xchg
sti
jp
in
jle
add
pop
add
inc
xchg
push
sub
or
dec
sbb
fs
aaa
xchg
out
cdq
lods
jp
xor
or
mov
pop
pop
je
sub
clc
ja
cli
out
enter
mov
or
pop
push
push
sti
lock
dec
add
cmp
call
dec
clc
aaa
(bad)
loope
outs
jmp
add
imul
mov
mov
fwait
jbe
jnp
xor
fisub
pop
adc
adc
push
sar
jne
and
stos
vfmsubpd
in
jne
xor
jecxz
mov
pop
in
cmp
das
cmp
pop
lock
sub
cmp
daa
adc
sub
sub
adc
in
nop
push
mov
test
out
cs
dec
je
out
xchg
gs
or
fsubr
sbb
dec
jmp
dec
fisub
test
mov
xor
sub
add
xor
and
cs
mov
stos
inc
lods
inc
bound
adc
push
adc
xlat
gs
shl
scas
aam
div
icebp
cmp
dec
dec
or
cmp
fnstcw
ret
aaa
aad
repz
push
mov
xlat
les
stc
ins
stc
or
lods
mov
dec
retf
dec
pushf
cdq
adc
xchg
sar
sbb
(bad)
shr
cs
lea
xor
out
aaa
adc
add
std
adc
cmp
mov
daa
pop
mov
retf
mov
loope
add
enter
(bad)
cmp
shl
cmps
xchg
fbstp
and
jg
gs
icebp
outs
scas
add
fs
ja
dec
cwde
pop
sub
in
mov
jge
sbb
sahf
int3
out
out
xor
test
out
lods
mov
arpl
sbb
xlat
dec
cmp
not
pop
pop
pop
ret
dec
ins
xchg
enter
xor
add
add
xor
and
push
sub
or
inc
jno
repnz
test
pop
or
ret
out
jb
pop
xor
stos
ss
jne
mov
dec
cwde
in
mov
add
div
mov
pop
jno
xchg
push
arpl
ins
inc
sub
mov
cmp
push
cmp
fdiv
div
mov
cwde
add
cmps
xchg
mov
xlat
pop
cmp
mov
ficomp
lods
ds
inc
and
adc
sub
in
pop
push
push
mov
scas
sbb
in
sub
loopne
aaa
cmp
xchg
ins
jge
stos
mov
mov
push
rcl
fst
(bad)
cmp
dec
dec
dec
fwait
outs
xchg
xchg
push
sub
test
jecxz
lds
mov
inc
xchg
cmp
(bad)
iret
aas
pop
scas
lea
or
out
imul
xor
sub
pop
push
sar
dec
dec
or
add
bound
jae
nop
out
add
(bad)
fmul
jp
ins
pop
pop
cmp
loope
dec
fwait
lds
dec
out
jb
push
repnz
xor
test
dec
ret
and
cmp
fimul
ror
rcr
test
xor
xor
lahf
shr
cmp
rcr
xchg
jne
xchg
or
out
ins
xlat
push
scas
mov
xlat
je
cmp
retf
inc
push
cld
xchg
mov
mov
mov
retf
jecxz
adc
pop
mov
adc
push
sub
loope
icebp
pusha
inc
fiadd
adc
icebp
add
scas
out
ret
cdq
fiadd
mov
xchg
cmp
aaa
add
repnz
add
dec
pop
rol
xchg
pop
pop
hlt
push
add
add
xchg
and
push
or
pop
cmps
pushw
pop
pop
push
inc
cmp
sbb
mov
mov
sti
enter
(bad)
mov
nop
rcl
sub
not
xchg
pop
rcr
movs
xchg
imul
in
pop
dec
xor
lods
xor
mov
aas
inc
mov
aam
scas
add
ja
rol
mov
pusha
retf
dec
scas
sbb
xchg
mov
push
ds
inc
and
rcl
mov
push
jb
das
sar
inc
xchg
ins
enter
outs
add
add
imul
nop
imul
pushf
test
into
mov
add
pop
inc
xchg
sbb
pop
ss
repz
sbb
daa
xlat
adc
(bad)
cmp
out
push
repz
add
retf
and
fadd
mov
test
pop
out
or
cmp
add
xor
ss
mov
pop
inc
jl
loope
xchg
sub
mov
adc
jl
sbb
rol
sbb
jno
jae
je
cmp
or
or
pop
and
adc
rol
dec
aam
lods
dec
mov
mov
dec
lods
inc
aad
std
jecxz
sbb
xchg
push
push
cmp
add
fcmovbe
jno
add
fbstp
ficomp
mov
pop
stc
sbb
inc
push
test
push
(bad)
jle
out
pop
dec
mov
inc
push
movs
jbe
adc
test
cmp
mov
mov
fwait
or
lock
lds
js
iret
xchg
xchg
rcr
xchg
bound
sbb
cmp
repnz
movs
dec
xchg
and
movs
ss
pop
mov
xchg
pop
jnp
or
pop
and
or
or
push
fwait
out
leave
jge
pop
lods
xor
push
pop
aas
sbb
cmps
cmc
dec
mov
cmp
and
mov
div
or
add
adc
xchg
rcr
lock
loope
mov
adc
cmps
out
push
pop
dec
dec
in
jle
cmp
mov
bound
js
ror
into
pop
push
mov
jecxz
xchg
dec
data16
xor
cmc
xchg
mov
stos
lock
mov
mov
hlt
shr
cmp
das
scas
sub
call
mov
test
mov
leave
stos
aad
mov
ins
dec
dec
(bad)
mov
xchg
cmp
cmp
xor
imul
test
fwait
jae
nop
mov
pushf
lahf
std
jbe
push
jl
mov
movs
jle
fwait
lea
jl
fbld
jp
pop
jl
pop
mov
retf
outs
cmp
pop
sbb
jecxz
into
int
adc
cld
sub
and
fwait
dec
pop
mov
stc
js
jmp
es
scas
xchg
out
(bad)
imul
pop
jbe
gs
daa
add
sbb
addr16
xchg
enter
sub
retf
xchg
sbb
xchg
data16
inc
scas
shr
hlt
(bad)
dec
mov
xor
arpl
stc
xor
dec
sar
out
scas
fild
int3
cmp
xor
sar
jo
jmp
retf
dec
idiv
and
out
xchg
xlat
fnstenv
push
push
xor
sbb
ret
inc
pop
add
inc
(bad)
xchg
js
popa
xchg
push
pusha
lea
pause
lods
lods
cmp
std
dec
aam
sahf
mov
and
test
cwde
xor
cmc
imul
jns
fwait
mov
ret
cli
sbb
loope
pushf
cmp
mov
mov
mov
pop
add
addr16
imul
sahf
mov
gs
xchg
lods
and
adc
mov
jmp
pop
mov
lock
cmps
adc
movs
xchg
sbb
push
icebp
cli
xor
ror
push
fisubr
adc
icebp
nop
mov
lahf
loopne
mov
daa
push
sahf
lea
jno
dec
and
in
adc
iret
mov
imul
xor
in
inc
mul
push
out
mov
or
shl
int3
(bad)
adc
test
adc
in
push
fdivr
aam
push
jo
lea
enter
dec
mov
jne
mov
pusha
ret
out
cwde
add
xchg
fstp
ret
fdivr
mov
add
pop
adc
ds
and
movs
adc
les
arpl
int
in
jl
inc
sar
pushf
and
lahf
imul
xor
stos
and
dec
cmp
pop
xor
sbb
xchg
sbb
gs
jmp
(bad)
mov
dec
movs
call
fcom
mov
cmp
inc
lahf
movs
scas
xchg
(bad)
leave
and
movs
shl
xchg
add
call
and
fadd
mov
xchg
lock
add
push
fmul
or
sbb
in
pop
and
mov
lds
xor
jns
jb
pop
sub
jno
rcl
mov
imul
xchg
shr
dec
sub
adc
imul
sar
adc
inc
int
inc
sub
shl
jmp
hlt
pop
push
test
idiv
mov
push
stos
inc
mov
cmps
jp
mov
mov
xchg
iret
and
outs
xchg
jbe
push
icebp
mov
inc
test
pop
xlat
and
test
adc
push
arpl
jecxz
inc
or
(bad)
(bad)
pop
mov
adc
not
pop
add
icebp
das
jno
aaa
push
push
push
push
jb
out
outs
add
xchg
and
dec
xor
stos
out
mul
inc
in
jecxz
mov
push
ja
idiv
shl
cmps
test
sub
cmp
scas
push
jo
retf
mov
jmp
test
jae
(bad)
ret
int3
movs
inc
(bad)
inc
div
sbb
and
or
adc
jle
je
aas
or
and
test
test
ret
pop
int3
fmul
adc
stc
stos
es
xchg
(bad)
cmp
jns
inc
push
sbb
xor
mov
out
mov
or
ins
out
mov
fwait
pop
(bad)
jle
mov
cmp
imul
popf
inc
dec
out
inc
(bad)
stc
mov
cdq
ins
ins
call
jl
aam
in
out
jle
stos
test
(bad)
test
mov
cmp
pusha
int3
ret
and
push
pop
neg
scas
push
out
pop
iret
sbb
or
dec
les
leave
xchg
and
mov
hlt
bound
dec
cmp
js
mov
pop
dec
aam
pop
out
adc
cld
or
in
and
push
loop
repz
pop
mov
mov
or
mov
adc
add
add
stc
imul
and
mov
and
call
stos
jmp
ja
pop
push
mov
aam
sub
jns
cmc
cmp
fdivp
rol
jo
mov
xor
out
cmp
jmp
xchg
(bad)
mov
into
push
cmp
nop
push
test
mov
push
retf
dec
aas
popf
inc
cmp
adc
push
repnz
sbb
cmp
cli
mov
add
push
sti
xchg
inc
and
or
mov
ret
xchg
xchg
mov
push
es
out
punpckhdq
dec
clc
jp
fst
fistp
xchg
mov
pop
dec
jns
ins
dec
cmp
lock
(bad)
pop
add
xchg
inc
jb
mov
enter
and
jle
mov
sbb
dec
jne
sub
nop
in
mov
gs
ds
cmps
push
aas
ds
inc
pop
sub
jno
daa
mov
aas
push
push
mov
call
(bad)
and
push
sbb
adc
mov
lods
jno
inc
repnz
or
xchg
dec
sub
mov
push
daa
leave
push
lea
int
sbb
fdiv
or
sub
inc
fcmovne
fdivr
dec
adc
dec
shl
add
inc
int3
mov
outs
scas
dec
das
mov
je
dec
scas
dec
hlt
sbb
mov
push
xchg
mov
imul
xchg
imul
std
imul
call
push
mov
aas
js
inc
shl
fs
mov
repz
mov
loopne
in
retf
jmp
cmp
aas
sub
inc
arpl
dec
enter
adc
fst
dec
arpl
xchg
add
sbb
stc
push
in
or
mov
rcl
adc
push
add
test
xchg
pusha
ins
mov
test
ins
xor
push
ds
mov
xor
data16
test
fwait
mov
mov
sbb
jp
clc
pop
adc
pop
xor
jp
cmps
pop
call
push
stos
mov
xadd
stc
je
ins
mov
(bad)
and
lods
in
pop
sbb
push
mov
popa
aaa
int3
mov
mov
out
cmp
add
arpl
sub
fnsave
(bad)
sub
call
addr16
int
aam
(bad)
xlat
fld
xlat
push
sti
clc
add
retf
test
je
push
repz
pusha
adc
pop
cmp
pop
(bad)
scas
fwait
cmc
jmp
sub
in
shr
mov
fucomp
jl
movs
mov
int
and
daa
shl
xor
ds
adc
jno
cli
fnstsw
shl
out
cmp
loop
movs
inc
pop
push
out
push
lahf
fisubr
in
mov
or
sub
and
mov
mov
inc
fwait
xchg
pop
lahf
sbb
inc
hlt
fwait
push
mov
nop
or
(bad)
pop
add
inc
outs
pusha
fbld
inc
dec
inc
mov
movs
mov
mov
int
(bad)
mov
jb
adc
jno
add
xchg
repz
push
sbb
dec
ds
aas
mov
loope
dec
les
cmp
rcr
add
lds
and
fucomi
add
jno
scas
push
dec
lods
sub
repz
push
out
addr16
mov
mov
adc
xchg
cli
in
and
jbe
rcl
or
leave
stc
pop
repnz
xchg
push
add
jmp
xor
ins
mov
xchg
retf
xor
popf
inc
add
les
test
cmp
xchg
call
aad
sbb
mov
push
je
mov
mov
push
xchg
push
movs
mov
mov
mul
push
(bad)
call
mov
hlt
sti
ins
mov
(bad)
cmp
fld
xor
icebp
ins
mov
les
aaa
and
dec
shl
adc
icebp
cmp
out
adc
cmp
add
add
xor
mov
test
lods
xor
test
cmps
sub
pop
adc
lods
cld
enter
mov
outs
popf
push
retf
inc
adc
pop
rcl
lds
cmc
popf
nop
mov
xchg
aad
fmul
xor
cmp
out
pop
jb
adc
jmp
xchg
mov
jmp
push
fild
test
cmp
lds
add
push
jp
mov
xchg
mov
mov
sub
out
xor
and
push
pop
inc
les
jg
inc
hlt
mov
pop
push
xchg
push
xchg
jo
inc
jnp
xchg
jb
pop
rol
test
icebp
je
adc
mov
jae
fcomp
jp
add
test
enter
movs
mov
cmps
sbb
lea
hlt
stos
jmp
mov
xor
add
stc
xchg
cdq
mov
div
popf
push
pop
loope
cld
and
mov
and
mov
push
int
mov
rcl
sub
mov
lock
cli
fistp
sub
scas
aam
cs
dec
sbb
inc
mov
popa
fs
xor
sti
and
cmp
imul
das
ss
arpl
inc
dec
inc
out
push
js
pop
std
sub
mov
xchg
or
and
stos
movs
and
fidiv
pushf
sub
pop
add
(bad)
sub
sbb
out
in
fnstcw
adc
push
stc
repz
mov
dec
fidiv
rol
sub
add
dec
mov
out
push
push
dec
mul
in
(bad)
div
stos
adc
sti
pusha
jle
dec
or
and
jno
(bad)
push
aaa
inc
mov
sub
js
push
mov
pop
sar
sbb
clc
stos
inc
jle
fwait
cwde
lock
xchg
and
test
sahf
push
and
mov
or
pop
sbb
mov
pop
data16
out
popa
lods
(bad)
and
bound
lds
gs
outs
ror
repnz
movs
xchg
cs
cmp
out
push
mov
daa
add
cld
into
mov
sahf
jge
push
clc
out
xchg
(bad)
retf
out
mov
dec
lods
ficom
ins
push
or
lods
dec
sbb
jbe
cwde
cmp
jae
out
and
arpl
xchg
inc
mov
xlat
push
mov
jo
arpl
add
sbb
leave
dec
in
cmc
push
fidivr
push
in
lods
mov
pop
and
(bad)
out
not
sbb
neg
int3
or
fwait
dec
xor
shr
fisttp
cmp
scas
scas
adc
jmp
imul
arpl
outs
adc
enter
and
inc
(bad)
mov
ret
sub
and
out
test
and
sar
je
bound
addr16
out
dec
ret
mov
lds
shr
pop
mov
cmps
cmps
in
nop
pop
xor
inc
aam
sbb
popa
add
adc
ffree
adc
loopne
cs
sbb
test
movs
mov
dec
dec
idiv
hlt
adc
fbld
out
push
sbb
bnd
test
adc
or
mov
(bad)
mov
mov
pop
pop
(bad)
mov
wbinvd
push
jo
popa
jae
adc
popf
or
inc
cld
dec
push
push
or
sbb
out
retf
push
fst
push
xchg
mov
cmp
outs
mov
mov
and
adc
mov
sbb
xchg
xor
cmp
cmc
je
push
repz
or
aaa
arpl
mov
das
pop
mov
call
ror
fcom
adc
jae
loop
and
shl
sar
retf
sbb
scas
dec
jmp
or
sahf
pop
cmp
clc
mov
ins
faddp
sub
mov
push
sti
ss
stos
(bad)
sub
outs
sbb
rcl
sbb
popf
jle
imul
mov
pop
xchg
mov
test
(bad)
jns
bound
hlt
std
jp
retf
ret
imul
repnz
dec
and
jbe
cmps
mov
jno
sahf
add
pop
cmp
fcom
sub
add
mov
cld
mov
inc
dec
loop
stos
cmp
jns
or
mov
call
ds
add
aam
mov
cmp
call
daa
int
test
out
adc
pop
(bad)
lods
gs
ja
cmp
cmp
sub
ret
in
cmp
cmp
adc
js
(bad)
test
xchg
pop
aas
mov
(bad)
mov
and
and
daa
int3
adc
adc
inc
jecxz
pop
ror
push
out
jecxz
test
adc
call
movs
retf
not
add
pop
pop
jecxz
int
outs
mov
inc
in
test
mov
or
xor
loopne
adc
mov
pop
cs
and
aas
add
mov
jns
inc
imul
out
idiv
jge
inc
sub
clc
and
cmp
lea
inc
mov
sub
aaa
aaa
lds
test
pop
in
pushf
or
jl
mov
dec
mov
lods
pop
sub
xchg
sub
enter
sbb
xchg
rol
cmp
sbb
jno
inc
mov
push
clc
mov
movs
xchg
loop
shl
or
fdivr
mov
cdq
cmp
cmp
cdq
jo
rol
popa
in
out
shr
ins
cmp
mov
mov
shr
push
inc
sub
retf
push
dec
and
pop
fistp
ret
cmp
movntq
jnp
adc
inc
jmp
mov
xchg
xchg
adc
mov
stos
push
movs
push
fidiv
lea
push
cwde
jns
sbb
icebp
mov
xchg
push
cdq
retf
loope
sbb
out
push
dec
(bad)
dec
or
ins
inc
int
xchg
xor
push
push
(bad)
xor
lahf
dec
pop
sahf
or
adc
fmul
sub
repz
mov
cmp
dec
add
jbe
in
lea
mov
shl
inc
into
sbb
jg
xor
xchg
mov
lods
mov
mov
fidiv
lock
(bad)
call
lods
sar
mov
scas
fst
push
pop
sub
jle
ret
add
pop
pop
jmp
push
sbb
push
daa
add
je
cld
mov
or
mov
mov
or
in
jnp
ret
xchg
lock
out
and
ins
adc
push
in
mov
cs
mov
adc
aad
mov
pop
test
or
(bad)
jbe
push
fwait
stos
or
mov
das
pop
mov
out
shl
imul
movs
in
repnz
loopne
jo
jge
(bad)
push
ja
fwait
xor
das
loope
sbb
mov
pop
clc
ins
retf
cmps
leave
daa
cld
movs
cmp
in
cmp
pop
inc
xchg
fldcw
mov
out
mov
mov
mov
rcr
xor
call
rol
jl
jbe
sbb
xor
imul
call
adc
push
inc
inc
fwait
ja
jb
es
sbb
jnp
fs
iret
idiv
mov
cmp
popa
dec
inc
xor
imul
test
jne
push
push
inc
dec
push
adc
sub
jmp
xchg
movs
mov
outs
jo
dec
rcl
lds
cmp
ret
lods
out
pop
dec
gs
das
test
imul
cld
add
popa
mov
push
add
iret
pusha
mov
xlat
stc
mov
jnp
xor
gs
xchg
and
and
xlat
xchg
mov
(bad)
neg
xlat
loopne
retf
sbb
ret
sar
out
in
inc
jne
and
inc
pushf
popf
inc
and
cmp
push
outs
inc
cmp
sub
dec
mov
sub
iret
xor
loop
ss
sbb
loopne
movs
sub
out
add
adc
shr
cmp
stos
retf
(bad)
xlat
mov
mov
jmp
adc
add
pminsw
fbstp
mov
stos
xchg
push
cmp
xor
jp
mov
cdq
pop
(bad)
fxch
and
fst
mov
jo
push
mov
in
pop
into
cdq
and
ret
aad
pop
pop
int
xor
mov
mov
cli
inc
rcl
les
mov
test
in
mov
pop
add
pop
stos
hlt
add
cwde
inc
mov
div
ffreep
pop
neg
mov
sbb
mov
into
int
sub
push
fnstsw
push
xchg
mov
mov
mov
cmp
jg
and
in
pop
push
test
mov
rol
mov
jl
mov
or
addr16
jmp
add
pop
sahf
mov
cmp
mov
call
popa
mov
loopne
adc
sbb
push
add
aaa
jmp
inc
sti
sar
(bad)
enter
outs
xlat
add
pop
(bad)
mov
shl
pop
loopne
fistp
pop
adc
sbb
add
cs
pop
push
stos
js
pop
push
ss
aam
pop
sbb
dec
sti
push
popf
cmps
imul
mov
imul
ins
push
jnp
or
stos
aas
mov
js
idiv
xchg
mov
sbb
sbb
hlt
cli
mov
and
je
retf
xchg
mov
cli
sbb
inc
pop
pop
into
aam
or
mov
xchg
iret
aam
sub
popf
scas
gs
inc
rcl
inc
call
mov
mov
pushf
lahf
jle
fcom
aam
jmp
pop
or
inc
mov
rol
or
sub
arpl
mov
adc
mov
jne
hlt
xlat
nop
push
pop
imul
ins
pop
or
or
or
inc
sbb
push
into
call
push
push
push
popf
dec
add
push
sub
sbb
lds
cmp
iret
(bad)
sbb
cmp
or
movs
or
(bad)
stos
push
push
jle
jle
inc
jmp
pop
je
pop
jecxz
and
jmp
jbe
inc
jp
int3
aas
in
or
cli
imul
adc
fwait
dec
xchg
jl
pop
dec
out
cld
add
popa
jb
popf
iret
and
mov
cmp
fwait
jb
push
hlt
xchg
add
leave
dec
push
xor
inc
and
cmp
jge
imul
push
(bad)
and
popf
test
movs
jno
and
lahf
and
push
movs
nop
repz
loop
stos
pusha
mov
dec
jge
aaa
adc
ja
xor
mov
cmps
scas
mov
ins
push
rcr
or
les
popa
push
cmp
add
leave
(bad)
push
xor
ins
pop
in
aaa
movs
xor
cdq
mov
mov
add
push
adc
popf
mov
aam
rcr
cmps
xor
xchg
fs
dec
adc
jne
shl
adc
push
stos
dec
push
aam
mov
addr16
add
mov
jle
pop
push
repz
sbb
lods
enter
pop
mov
xchg
jbe
or
into
jnp
je
loopne
popf
push
jp
lds
daa
cli
xchg
out
mov
outs
jno
inc
es
dec
push
stos
xchg
fadd
sbb
cmp
mov
jmp
or
add
or
ins
dec
call
sbb
xchg
mov
push
dec
aam
push
fisub
dec
das
mov
in
stos
pop
dec
mov
or
sbb
je
cmp
sbb
pusha
mov
pop
add
xchg
fnsave
fwait
sbb
repnz
fcomp
dec
loop
jb
in
xor
(bad)
into
out
iret
cmp
rcl
push
dec
ja
daa
adc
dec
push
mov
popf
mov
in
cmp
lods
inc
jno
sub
loop
mov
mov
push
xchg
inc
push
mov
imul
or
mov
gs
sahf
scas
fwait
mov
dec
leave
inc
cdq
sbb
scas
inc
pop
and
fs
sbb
jp
imul
iret
sar
call
test
mov
aam
mov
imul
cmc
xchg
mov
in
dec
dec
pop
(bad)
sti
aam
es
and
sbb
dec
sub
pop
sub
push
xchg
add
jmp
xchg
js
or
or
fwait
data16
xchg
movs
sub
or
mov
cdq
mov
inc
ds
inc
mov
jmp
rcr
repz
inc
(bad)
movs
mov
adc
outs
adc
retf
push
inc
xchg
ss
jle
cmp
cmps
cli
or
repnz
in
add
pop
in
mov
push
clc
test
scas
into
adc
dec
(bad)
push
ret
(bad)
push
pop
mov
iret
xor
rol
stos
dec
es
in
add
pop
dec
inc
fnstsw
(bad)
push
dec
stc
test
out
test
scas
rcr
fchs
ror
daa
cdq
push
and
adc
add
xor
pop
xor
xchg
add
mov
aad
or
jnp
aam
cli
mov
outs
enter
outs
gs
dec
sub
mov
push
or
out
sbb
inc
fstp
ins
ror
test
mov
add
stos
add
dec
jbe
dec
popf
add
fst
std
push
pop
(bad)
cmp
arpl
xchg
sub
fstp
and
out
(bad)
out
ins
and
adc
enter
sbb
pop
adc
xor
call
ins
adc
mov
mov
xor
retf
mov
add
fisttp
cmp
xor
mov
mov
rol
into
add
xchg
jbe
ror
or
das
mov
push
pusha
outs
movs
xchg
xchg
xor
adc
jge
or
arpl
sub
jae
daa
jg
dec
jge
jecxz
sbb
cmp
stos
xchg
and
stos
and
xchg
mov
jmp
xchg
jmp
je
add
enter
mov
push
sbb
pop
adc
mov
popa
mov
retf
add
cld
pop
jp
mov
cmc
fstp
lods
outs
and
call
enter
rcr
push
cld
sbb
mov
movs
jno
(bad)
sahf
gs
(bad)
retf
xor
push
mov
retf
mov
ins
sahf
in
mov
pop
mov
(bad)
repnz
cmp
jb
push
mov
xchg
jmp
fs
cmp
fistp
push
(bad)
jne
(bad)
mov
test
or
(bad)
aaa
pop
and
add
int
outs
dec
movs
mov
push
adc
das
and
inc
out
pop
call
bound
into
mov
sbb
ja
test
sbb
adc
and
sbb
and
lods
mov
mov
sahf
cmp
(bad)
cld
hlt
stc
and
fldenv
xchg
jno
mov
fwait
dec
es
push
rol
xor
in
icebp
and
mov
popa
popa
jp
cld
or
xchg
adc
push
push
stos
clc
jmp
cmp
mov
sar
ret
addr16
cmp
push
xchg
loop
mov
adc
test
jnp
add
jecxz
lea
mov
ret
adc
aaa
test
aam
push
xor
ret
jge
lds
stos
xor
inc
dec
in
sbb
je
mov
jmp
call
call
cmp
pop
sub
arpl
fld
rcr
es
ds
dec
mov
ret
pop
stos
dec
aam
call
inc
pushf
fisubr
inc
pop
pop
mov
(bad)
sub
clc
cli
xchg
in
je
stos
add
xor
jge
dec
cmp
imul
lods
jle
popa
cmps
popf
pop
in
adc
ss
push
adc
push
sar
lds
retf
mov
push
shl
mov
daa
pop
adc
xor
pop
mov
lods
mov
sti
jmp
int
xor
pushf
shl
dec
or
movs
mov
mov
mov
mov
out
icebp
sysenter
cmp
loopne
jl
out
(bad)
cmp
fsub
sub
neg
xchg
mov
je
aad
mov
lahf
sbb
pop
neg
or
pop
adc
mov
dec
sbb
rcr
test
movs
rcr
mov
sbb
or
lahf
fs
test
inc
sub
or
adc
push
pop
jae
push
inc
cmp
jle
or
xor
arpl
lods
scas
add
in
mov
pop
and
ror
sti
inc
pop
lods
adc
retf
mov
pusha
in
pop
add
pop
call
xchg
or
dec
fmul
add
mov
outs
sub
int
add
xlat
mov
lods
and
and
inc
pop
xor
cwde
outs
push
jno
jmp
xor
lds
fisttp
add
sub
pop
pop
sbb
and
(bad)
mov
pop
adc
pop
popa
cld
in
cmp
adc
imul
lods
xchg
js
lds
les
mov
xchg
cs
ja
sub
outs
pop
aaa
xchg
pop
mov
repz
mov
mov
scas
or
int
cs
sahf
es
jp
(bad)
nop
mov
test
ret
ins
mov
dec
sbb
push
add
cmp
fmul
hlt
imul
pop
jge
push
arpl
or
dec
or
dec
or
arpl
nop
mov
cmps
jo
or
mov
sbb
popf
(bad)
push
iret
mov
sub
mov
(bad)
retf
lea
in
fist
pop
inc
mov
push
add
mov
aam
iret
push
es
jae
xchg
push
add
sub
sbb
je
xor
out
inc
adc
loop
lea
shr
push
xor
push
dec
push
mov
jns
aaa
cmps
dec
sahf
mov
cmp
pop
add
mov
push
xor
les
pop
aas
or
wrmsr
data16
leave
fcmovnb
mov
int
fimul
loop
xchg
dec
xchg
inc
push
scas
ins
cmp
pushf
retf
rep
xchg
bound
xor
aas
dec
adc
mov
(bad)
stc
mov
pop
mov
movs
mul
xor
mov
stos
adc
sbb
jl
add
fisubr
int3
stos
xchg
add
call
mov
ret
sbb
sub
jno
or
adc
mov
call
cs
cmp
jno
rcl
push
sub
bound
mul
shl
adc
fs
jp
imul
scas
mov
adc
les
mov
xchg
or
adc
and
or
mov
pop
jbe
mov
bound
adc
std
ficomp
sbb
and
fbld
mov
mov
fist
popa
add
out
dec
jle
adc
push
ret
mov
sub
(bad)
pop
sbb
cmp
jno
scas
dec
add
imul
lahf
mov
pop
jp
xlat
sbb
cwde
mov
pop
add
adc
fistp
push
shl
test
ja
pop
es
icebp
fsub
jmp
mov
jmp
xchg
leave
jmp
ins
ins
cli
out
test
mov
sbb
test
fidivr
aam
mov
add
imul
mov
fistp
lock
jnp
nop
pop
mov
cmp
dec
push
cld
mov
add
mov
pop
popf
and
push
shl
xor
mov
push
out
(bad)
movs
cmp
push
call
xor
pop
cwde
enter
retf
inc
mov
push
or
das
loope
cmp
mov
sti
(bad)
mov
or
inc
mov
dec
out
shr
aam
mov
lods
outs
cdq
mov
cmp
icebp
xadd
cmps
mov
test
adc
mov
add
sbb
bound
dec
loop
and
cdq
inc
imul
addr16
jne
push
mov
sbb
xchg
sub
and
das
or
mov
or
or
not
jbe
fild
out
add
int3
out
mov
add
mov
(bad)
iret
test
sub
fdiv
adc
popa
adc
int
loope
xchg
pshufw
loopne
sti
add
ds
ret
xlat
add
call
jo
and
or
xlat
shl
loop
(bad)
ror
jb
fs
pop
pushw
add
mov
lds
and
mov
cmp
pop
add
push
int
or
and
xchg
lahf
test
cs
pop
jl
(bad)
scas
and
sar
inc
es
inc
inc
loopne
xor
outs
rcr
xchg
pop
mov
mov
pop
xchg
mov
lea
nop
mov
xor
jnp
sar
push
mov
jecxz
fwait
pop
add
mov
pop
mov
(bad)
mov
scas
mov
adc
xchg
push
sub
lods
call
dec
in
aam
push
sub
fld
repz
add
xchg
in
pop
movs
pop
jno
(bad)
xchg
scas
push
mov
jnp
jnp
lods
fcom
(bad)
mov
sub
pop
and
and
pop
mov
scas
sbb
cmps
cmp
call
inc
std
sar
inc
(bad)
pusha
fisttp
into
loope
pop
mov
mov
mov
lock
xchg
test
jb
fmul
jmp
dec
or
dec
dec
into
mov
push
or
push
popf
adc
in
adc
push
stos
or
push
jecxz
fld
xchg
(bad)
xor
mov
adc
retf
xchg
dec
dec
fstp
fst
push
jo
inc
fs
test
mov
fdiv
stc
cwde
sbb
inc
cmc
jle
dec
test
stos
and
or
push
pop
adc
sub
mov
cmp
sub
mov
add
mov
fidiv
pop
mov
pop
pop
push
lods
jo
pop
in
dec
and
shl
in
aad
mov
out
fist
aaa
pop
inc
adc
jmp
jle
sbb
mov
cdq
push
adc
and
mov
inc
retf
xor
dec
or
lods
pop
jl
scas
xor
inc
daa
gs
ins
adc
pop
(bad)
neg
push
(bad)
cld
pop
xor
in
into
pop
xor
adc
popf
and
(bad)
pop
push
in
cmps
out
cld
xchg
jb
sub
bound
test
dec
dec
pop
push
dec
mov
bound
lods
and
loope
stos
sti
cmp
jmp
pop
daa
cmp
test
test
out
cwde
cmc
mov
cmps
add
inc
icebp
call
push
push
pop
lock
pop
icebp
mov
lds
xor
push
int3
popa
lods
mov
mov
push
xor
sub
dec
arpl
cdq
movs
lea
push
loop
mov
test
mov
jmp
in
shr
popa
inc
rol
dec
cli
shl
std
dec
xor
and
push
or
out
push
mov
or
mov
sub
or
cmp
jmp
fiadd
outs
xlat
dec
and
mov
pop
repz
xor
rol
inc
call
(bad)
iret
xchg
cmp
test
shr
cmp
shl
mov
arpl
addr16
jmp
ret
(bad)
std
call
stos
movs
mov
iret
xor
lods
mov
dec
sti
test
mov
pop
and
jno
leave
sbb
and
pusha
lds
mov
and
jl
inc
or
xor
mov
dec
out
push
push
inc
imul
jno
fcomp
test
jp
pop
xchg
cld
xor
enter
sub
xchg
lods
mov
push
pushf
inc
shr
fcom
ror
xlat
xchg
and
and
jecxz
leave
cwde
xor
retf
xchg
test
dec
stos
(bad)
adc
(bad)
lock
cmps
in
push
test
(bad)
fistp
or
into
mov
retf
or
push
and
cmps
inc
adc
rcl
cmp
lods
in
into
inc
xor
adc
sub
cmp
out
hlt
into
fst
jle
(bad)
mov
lahf
fbld
out
jecxz
mov
adc
lods
out
mov
add
rcl
sbb
inc
mov
cwde
call
xor
(bad)
jmp
inc
cli
adc
mov
and
sub
cli
das
mov
sub
pop
adc
push
mov
dec
dec
or
out
lock
xor
adc
rsqrtps
xor
sub
push
or
test
mov
mov
addr16
mov
and
push
test
in
sbb
(bad)
mov
mov
popa
int3
sbb
fisttp
cmps
das
loop
push
stc
add
(bad)
fcomp
cdq
push
push
mov
xor
fwait
sbb
mov
or
or
frstor
push
mov
ret
and
adc
cmc
mov
nop
add
or
pop
pop
out
test
sbb
stos
movs
mov
mov
loope
mov
or
stos
cmp
dec
push
jmp
mov
jne
scas
mov
lods
test
pop
icebp
lods
inc
ins
out
in
retf
lds
movs
inc
dec
mov
add
jg
ins
mov
fsub
push
cld
push
xchg
(bad)
sti
pop
add
xchg
mov
rol
fimul
cld
stos
int
jp
sub
ds
mul
bound
push
loop
adc
mov
(bad)
test
outs
(bad)
repz
iret
cld
aaa
inc
imul
or
jno
pop
dec
sar
fdiv
retf
inc
mov
test
rol
sbb
movs
dec
pop
sub
mov
out
cwde
add
out
jmp
call
jbe
into
xchg
idiv
neg
movs
pop
cmps
xchg
add
cdq
sbb
gs
cmc
push
les
(bad)
ror
pusha
fbstp
popa
fidivr
fsubrp
adc
out
and
xlat
(bad)
test
in
pop
pop
sbb
pusha
dec
mov
fucomip
push
push
xor
or
(bad)
push
addr16
push
pop
test
(bad)
adc
cmps
xchg
push
test
pop
aas
jmp
test
movs
(bad)
cdq
sahf
jp
mov
xchg
test
shl
dec
retf
and
xor
in
nop
pop
jl
(bad)
jl
push
xchg
mov
xor
inc
sub
das
jae
push
jo
aad
fwait
dec
push
push
fsubr
pop
push
fstp
div
fcomp
sub
shr
mov
neg
inc
outs
cmc
ds
push
rol
sub
sbb
and
jp
jo
lea
jp
jge
push
aaa
movs
out
add
push
cmp
mov
mov
xor
jne
fstp
adc
data16
jmp
sbb
inc
and
mov
loopne
ss
add
sbb
mov
xchg
outs
rol
nop
sbb
sbb
fcom
push
pop
(bad)
fs
jb
sahf
inc
mov
cli
xor
out
mov
and
jl
or
ins
into
pop
dec
push
retf
int
popa
inc
and
jmp
cmp
loope
pop
pop
mov
leave
and
xlat
mov
xchg
inc
jbe
cmp
scas
jmp
push
stos
jg
(bad)
push
dec
push
icebp
dec
out
push
jmp
lahf
sub
xchg
mov
or
mov
icebp
cmp
scas
mov
je
mov
add
test
in
jmp
mov
cs
and
cmp
fsub
xor
mov
lods
cmp
and
adc
imul
xchg
retf
mov
inc
dec
pop
fs
mov
hlt
push
sti
sbb
imul
inc
xchg
fdivr
xchg
jg
cmp
imul
xchg
sub
jo
(bad)
ja
fdivr
lods
movs
sti
enter
or
daa
xor
push
out
std
inc
shr
xor
call
mov
xchg
sub
and
jl
mov
out
mov
(bad)
cs
mov
fldz
sbb
rol
push
pop
cmovbe
inc
aaa
iret
mov
mov
mov
push
jecxz
and
lods
repz
xor
ds
lds
popf
int3
dec
aad
test
ficomp
jne
mov
jnp
rol
mov
out
movs
jge
jns
xchg
or
xor
aas
jb
dec
(bad)
jmp
inc
div
cmp
cld
pop
push
nop
push
repz
cmp
jl
jmp
sbb
or
pop
sbb
mov
xor
jge
icebp
pop
fisubr
ja
sahf
stos
shl
xchg
test
adc
jmp
(bad)
mov
add
jg
xor
jmp
ds
jp
shr
dec
popw
call
push
das
ror
jle
mov
scas
pusha
test
rcr
das
inc
lods
les
out
aas
fs
pop
mov
in
ins
pop
cli
jno
add
lds
lahf
xchg
mov
push
push
mov
call
fld
push
mov
xchg
jp
push
sbb
dec
cmp
lods
adc
cmps
jecxz
push
scas
not
cmp
loope
fistp
je
inc
hlt
mov
iret
mov
add
xor
inc
cdq
ret
lock
mov
sbb
xor
cld
lods
lock
sbb
pop
or
mov
add
hlt
cmp
and
mov
pop
stc
xchg
stos
push
call
fcom
jp
cmp
std
inc
clc
inc
icebp
adc
sub
scas
pop
jge
cmp
xchg
jp
mov
(bad)
jmp
(bad)
cmc
retf
inc
pushw
sbb
add
dec
jmp
cwde
loopne
ror
loop
jne
imul
lea
and
add
fcom
lods
test
dec
xchg
outs
out
retf
add
fwait
pop
jmp
shr
mov
jmp
xor
sbb
cmp
nop
push
call
sbb
xor
shr
dec
cmp
add
jbe
aad
pop
out
dec
mov
adc
adc
sbb
(bad)
leave
lds
pop
ficomp
cdq
fisttp
inc
retf
inc
xchg
fsub
sbb
xor
mov
fistp
(bad)
out
lods
sbb
scas
jp
popf
xchg
sub
pop
cdq
mov
dec
lods
dec
push
xchg
push
and
inc
sbb
stos
retf
std
jbe
sbb
shl
cmp
inc
pop
mov
(bad)
ds
cmps
xlat
mov
add
xchg
imul
mov
cli
int
cmp
xchg
xchg
lea
cmp
aaa
and
inc
mov
test
aaa
push
and
lock
xchg
add
pop
icebp
loope
lods
add
mov
pop
dec
xchg
iret
(bad)
sbb
rcr
sub
fld
xor
xlat
xchg
cmc
daa
mov
pushf
dec
call
imul
cbw
jg
inc
popa
lea
loope
loope
enter
cmps
(bad)
fcomp
jg
sub
ret
pop
scas
mov
mov
std
xchg
jp
push
sar
sti
jae
jne
cmp
xor
mov
in
sub
aaa
sar
jg
jnp
push
popf
mov
adc
jecxz
or
mov
and
in
(bad)
in
inc
nop
sub
ss
jmp
or
out
sbb
jl
xor
push
dec
jmp
inc
push
call
ins
pop
rep
mov
jecxz
sub
jmp
lock
stos
(bad)
out
sbb
pop
mov
jmp
aad
rol
inc
push
imul
cmp
pop
pusha
hlt
sub
iret
rcr
inc
icebp
xor
mov
data16
(bad)
jmp
jbe
mov
int
mov
je
sbb
fst
and
mov
repz
std
sar
pop
out
data16
push
(bad)
out
inc
call
fdiv
add
mov
xchg
jnp
fld
rcl
pop
sbb
mov
mov
mov
adc
or
sbb
jl
aas
mov
push
pop
mov
push
mov
add
pushf
(bad)
out
or
dec
lahf
imul
push
and
lds
in
push
fwait
xchg
inc
jbe
stos
xchg
mov
and
pop
lds
scas
not
or
outs
loop
ror
stos
pop
fbstp
inc
add
mov
push
mov
cld
out
cmps
inc
retf
neg
jno
gs
repnz
push
sub
mov
sub
fcmovne
jne
rcr
push
(bad)
pop
retf
mov
nop
rol
cdq
jmp
data16
mov
mov
sbb
sub
dec
mov
cli
stc
cmc
mov
or
ins
jns
nop
or
xor
int
scas
mov
sahf
mov
out
shr
stos
jmp
shr
rol
inc
sub
inc
(bad)
jmp
add
cld
pop
jl
mov
in
xchg
pusha
push
je
xor
lods
push
lods
retf
cwde
mov
cmp
loopne
fst
in
stos
push
sub
imul
jl
fs
and
mov
movs
sbb
or
popf
add
or
jo
jl
cmp
cmp
xchg
sbb
pushf
push
jmp
push
or
pusha
or
out
jge
xor
push
sbb
xor
xor
inc
dec
jno
push
les
xchg
mov
aaa
and
fimul
dec
pop
add
or
call
xchg
adc
stc
out
scas
rol
gs
out
dec
cmp
test
sub
inc
mov
cld
dec
(bad)
xor
mov
in
adc
push
scas
mov
lds
mov
scas
bnd
jg
enter
bound
mov
xor
mov
and
jnp
das
test
inc
(bad)
mov
gs
jl
mov
lds
outs
pop
loopne
scas
pop
hlt
call
push
pop
dec
cmp
call
or
jb
xlat
test
adc
nop
pushf
jno
(bad)
push
fcomp
jns
push
cli
push
push
fst
ret
xor
mov
cmp
frstpm(287
retf
fmul
jo
xchg
mov
cmp
sbb
cs
xor
ss
adc
imul
adc
call
jb
popa
(bad)
aas
mov
mov
xor
lds
cwde
and
inc
cmps
ret
xchg
icebp
mov
mov
and
out
cmpxchg
or
(bad)
dec
or
or
xchg
xchg
xchg
icebp
sbb
pop
mov
cli
out
jge
dec
(bad)
fsub
scas
or
dec
xchg
out
retf
test
and
xchg
imul
clc
cmp
push
jo
rcr
fst
cmp
pop
jmp
ftst
bound
out
addr16
lds
mov
xlat
ror
clc
fimul
inc
pop
stos
pop
std
sbb
test
cmp
xlat
ret
out
cmp
(bad)
jge
sub
pop
je
and
movs
(bad)
pushf
addr16
(bad)
je
xlat
and
lods
sbb
sbb
(bad)
cmp
cmp
push
jg
jecxz
test
and
data16
mov
inc
sahf
mov
cdq
xchg
sub
mov
sub
push
addr16
push
dec
xchg
inc
pop
push
sub
inc
inc
scas
repnz
mov
mov
and
adc
fist
repz
std
repnz
mov
loopne
lea
jmp
fidivr
adc
fs
push
sar
adc
into
movs
fs
lods
int
jb
ins
mov
ja
jnp
sti
in
jp
lds
xchg
lock
out
movs
gs
outs
sub
iret
or
inc
in
push
sbb
sbb
fisttp
scas
cmps
push
test
add
or
mov
in
pusha
rcr
movs
mov
pop
clc
not
test
cdq
mov
int3
das
cld
cli
(bad)
cld
jno
in
rol
dec
movs
mov
(bad)
(bad)
cli
std
jl
dec
cwde
jb
pop
sbb
fwait
dec
repz
pop
dec
and
lock
cmp
push
lods
in
pop
sbb
scas
xchg
xchg
fcomi
rcl
test
add
adc
jo
mov
or
mov
dec
int3
(bad)
cmp
mov
loopne
out
lahf
mov
xchg
sahf
xor
jp
cli
hlt
gs
dec
into
cmc
xchg
hlt
xor
scas
ret
pop
call
pop
addr16
inc
ror
in
jp
jecxz
adc
cmps
popa
push
push
xchg
into
into
(bad)
push
xor
cld
out
mov
mov
mov
or
arpl
push
and
or
mov
das
jg
or
dec
loop
mov
jne
je
dec
push
imul
xchg
inc
in
movs
into
rol
push
push
sbb
xchg
test
movs
imul
sbb
loopne
cld
inc
xchg
int3
inc
xchg
pushf
sub
fs
out
adc
fldcw
add
fistp
call
cs
push
mov
ret
loopne
and
xchg
cs
sbb
adc
int
aad
xor
and
sub
dec
(bad)
or
adc
or
pop
or
imul
push
add
clc
mov
jecxz
retf
cmp
pushf
mov
in
es
mov
inc
mov
cmp
repnz
popa
pop
mov
or
iret
xchg
inc
push
mov
mov
(bad)
mov
mov
add
call
mov
in
mov
stc
or
pusha
mov
xor
mov
out
mov
and
add
inc
fwait
sub
movs
push
out
mov
jp
into
cmp
inc
xor
test
lods
test
lods
xlat
out
mov
je
pop
pop
sti
sub
cmc
adc
xor
or
adc
mov
xor
repnz
adc
mov
mov
call
jnp
lock
mov
and
sub
js
enter
jo
adc
sub
movs
dec
mov
xchg
fs
ds
jecxz
mov
loope
int3
div
aaa
in
gs
movs
push
int3
aam
sbb
scas
sub
jne
cli
push
fnstcw
repnz
popf
mov
cdq
bound
in
lahf
mov
mov
nop
pop
fmulp
je
add
sub
into
dec
cmps
jo
and
jg
retf
repz
lods
cmps
inc
mov
ins
sbb
jo
lea
js
(bad)
mov
push
xchg
sar
in
push
push
inc
cs
cmp
dec
call
dec
out
or
hlt
out
pop
sbb
mov
jns
scas
dec
jae
xlat
sbb
icebp
(bad)
lahf
or
xor
pop
repz
add
mov
or
or
or
fdivrp
clc
inc
orps
mov
loop
jne
inc
pop
sub
or
rcl
stc
mov
push
fnstenv
xchg
gs
(bad)
js
sbb
fstp
dec
retf
mov
mov
dec
test
fild
adc
fwait
adc
jge
cmps
add
push
retf
mov
mov
mov
cmp
adc
inc
dec
aam
add
mov
das
cmp
(bad)
retf
lds
lods
fisub
mov
icebp
scas
(bad)
sbb
or
inc
inc
sbb
movs
cs
je
addr16
sub
jl
or
or
retf
or
ret
std
les
add
push
ja
push
sar
inc
mov
div
mov
sbb
in
fwait
or
ret
daa
push
fisubr
adc
call
arpl
jmp
fsubp
call
in
lds
jp
lods
inc
xor
test
and
adc
mov
dec
xor
inc
jp
mov
(bad)
je
stos
ins
shr
outs
dec
and
aad
stos
nop
mov
fstp
aad
pop
mov
jo
inc
fcomip
test
(bad)
xchg
inc
dec
mov
fwait
and
enter
cwde
in
retf
mov
fsubr
add
cli
mov
xor
sub
pop
dec
inc
or
xchg
addr16
push
sbb
bound
jno
push
jbe
jmp
loope
in
xabort
popf
mov
mov
loop
cwde
xor
xchg
cmc
adc
lds
lods
adc
jne
pop
pop
jae
leave
cld
pushf
inc
outs
data16
sub
jl
lahf
stos
xchg
in
dec
sbb
push
shr
jmp
bound
mov
repz
jecxz
cmps
push
scas
pop
scas
fcomp
outs
sub
mov
mov
ucomiss
stc
push
xchg
das
pop
or
scas
mov
push
mov
jns
cmc
or
xchg
cdq
and
jmp
inc
cld
mov
push
jmp
loope
adc
sahf
lods
cmp
lea
push
in
ficomp
jmp
mov
jae
stos
jle
inc
ret
jo
jno
div
fs
push
push
pop
push
popf
fiadd
ins
mov
push
dec
mov
mov
neg
stc
sbb
outs
fnclex
mov
xor
enter
sti
stc
outs
out
ja
sti
mov
inc
fist
(bad)
dec
or
cdq
into
popa
lods
or
add
repnz
mov
mov
je
inc
out
cmp
or
add
lahf
xor
sub
xchg
daa
cdq
mov
cwde
gs
adc
loopne
push
js
mov
sti
mov
(bad)
in
mov
in
add
int
fdivr
int
mov
cmp
mov
nop
movs
in
mov
bound
popf
mov
bound
jns
fnstcw
mov
jmp
aas
xor
and
mov
jmp
push
sub
push
inc
iret
mov
and
cs
xor
push
push
or
mov
es
mov
dec
iret
scas
or
les
inc
jl
test
je
mov
push
cmp
mov
mov
mov
scas
in
jnp
push
xchg
out
clc
jmp
jge
sti
lods
mov
aad
retfw
mov
sar
push
sti
gs
or
jle
fdivr
movs
fcmovnbe
arpl
out
(bad)
jbe
(bad)
jmp
mov
sbb
xlat
bswap
push
mov
cmp
cmps
(bad)
dec
adc
loopne
mov
retf
lds
xor
jno
daa
adc
mov
out
daa
bound
mov
jo
xor
rol
jecxz
xchg
mov
mov
inc
cmp
push
clc
sub
inc
mov
push
add
dec
push
dec
gs
cmps
imul
xchg
aad
daa
in
and
mov
ds
adc
aas
fist
mov
pop
out
int3
push
mov
dec
aam
sbb
(bad)
cmp
icebp
xchg
cmp
mov
push
shl
in
push
adc
dec
je
mov
(bad)
unpcklps
sub
repz
mov
and
int
jne
or
dec
jne
add
jmp
loope
pop
push
(bad)
scas
das
xor
lods
jg
stos
dec
inc
or
dec
mov
test
test
adc
xchg
inc
push
or
call
pop
sub
adc
ins
daa
inc
jne
add
clc
xor
push
and
dec
pop
loope
int3
adc
in
and
scas
cmp
cmc
lods
add
addr16
mov
cmp
mov
mov
inc
mov
mov
cs
mov
mov
add
std
movntps
sub
pop
xchg
or
out
outs
adc
push
(bad)
test
fcomp
xchg
mov
adc
xchg
ds
push
cwde
mov
mov
pop
push
pop
and
push
rol
loopne
bound
ud1
mov
sbb
mov
call
pop
lods
inc
push
dec
ret
pop
inc
dec
pushf
push
mov
rcr
daa
into
jg
movs
lahf
stos
mov
fild
jge
scas
loopne
cmp
test
push
gs
sub
lods
pop
sub
leave
mov
sbb
out
iret
cmp
fstp
sub
xchg
mov
adc
aaa
scas
popf
sbb
xchg
push
xchg
mov
dec
add
jnp
adc
nop
icebp
jl
dec
idiv
add
into
and
pop
cmp
int
repz
clc
test
push
retf
xor
xchg
enter
sbb
test
inc
jmp
ds
ficomp
call
sbb
icebp
mov
xor
pusha
(bad)
movs
fsub
jae
pop
gs
pop
mov
dec
mov
mov
(bad)
pop
jl
outs
push
mov
mov
nop
cmp
pop
xchg
arpl
inc
jo
mov
aam
les
xchg
xchg
jne
sub
stc
mov
ins
in
xlat
cmps
hlt
pushf
ret
push
and
lods
xor
or
call
rcl
push
cmp
sbb
xchg
sbb
jp
lods
into
fist
clc
pop
xchg
sub
aas
out
mov
and
xchg
sub
in
or
push
mov
mov
dec
leave
mov
cli
rcr
shl
loope
ret
jae
adc
jno
(bad)
rcl
xchg
inc
jge
cmc
sub
ins
jg
push
mov
into
pop
jb
ds
aas
push
into
xchg
test
bound
cli
sbb
inc
dec
mov
and
mov
out
sahf
out
jle
aam
pop
rcl
push
push
daa
bound
inc
jo
mov
jecxz
fcomp
int
outs
add
mov
adc
mov
pop
pop
ins
cs
scas
fwait
sub
(bad)
lods
adc
jnp
xchg
xchg
into
or
jnp
bswap
or
movs
dec
and
cwde
lock
dec
in
and
popa
repz
add
int
std
out
mov
push
and
es
hlt
pop
mov
das
cld
mov
mov
stc
inc
xor
push
loop
sbb
push
test
das
add
sbb
outs
shl
div
fimul
mov
es
dec
dec
or
je
push
inc
(bad)
out
mov
xlat
es
inc
cmp
sahf
clc
jns
sbb
sub
in
or
aad
ja
jno
cmc
sub
adc
jno
aas
add
cmp
adc
jnp
pop
sub
xchg
shl
in
scas
adc
aam
or
loop
inc
xchg
sbb
or
xlat
std
sub
test
icebp
add
sbb
push
inc
ss
or
ds
movs
stos
mov
sbb
mov
push
mov
mov
mov
popf
shl
mov
ror
nop
adc
inc
neg
(bad)
jo
je
ins
out
and
mov
dec
lock
fwait
jbe
stos
xchg
mov
ja
(bad)
stos
and
jmp
(bad)
bound
pusha
sbb
shl
dec
xchg
mov
data16
mov
jl
and
repnz
cmp
adc
mov
out
add
popf
out
mov
pop
cli
ror
jns
jne
loopne
aaa
sbb
cmp
mov
jo
xor
mov
sub
leave
fpatan
mov
xor
ror
ins
dec
sbb
div
mov
adc
and
xchg
xor
mov
out
push
in
pop
in
std
mov
and
out
(bad)
aam
or
cmp
(bad)
outs
shl
shr
push
mov
pop
cmp
fisubr
popf
cld
add
lods
retf
aas
out
xchg
inc
(bad)
push
iret
pushf
sub
sub
cmp
cs
out
sbb
lahf
aaa
pop
cld
mov
movs
dec
mov
pushf
(bad)
call
pop
jmp
fisub
fcomi
ret
pop
pop
xchg
je
adc
fimul
jle
out
push
xor
jmp
mov
ss
cwde
xor
adc
ror
jmp
jmp
out
adc
sub
pop
test
fcomp
cs
mov
jg
pop
call
stos
pop
push
nop
(bad)
stos
aam
je
mov
jmp
stos
add
xchg
push
test
lods
dec
sti
xor
data16
(bad)
xchg
jne
icebp
stos
mov
out
loop
mov
gs
xchg
inc
in
pusha
cld
add
lea
jmp
jmp
repnz
cwde
lods
loop
mov
nop
adc
out
dec
lods
(bad)
scas
gs
adc
ja
stos
sub
jno
shl
pop
pop
inc
call
xor
ror
push
push
mov
cdq
das
mov
imul
add
hlt
sbb
xor
jns
mov
jo
pop
fst
je
mov
dec
and
loopne
fwait
jbe
pop
pop
xor
xor
(bad)
dec
jmp
int
inc
xchg
and
call
mov
jg
inc
inc
push
ds
hlt
pop
(bad)
cmc
add
sub
jmp
cs
mov
rcl
cld
xor
pop
fsubr
jg
loope
xchg
(bad)
xchg
xchg
(bad)
adc
ret
jle
(bad)
ret
lahf
dec
push
cli
stos
sbb
cmp
inc
push
jecxz
movs
dec
and
mov
jns
jmp
mov
sub
sub
dec
jge
inc
adc
popa
jb
scas
(bad)
xchg
inc
mov
xor
add
stc
jg
test
hlt
ss
in
mov
ds
popa
adc
daa
mov
pop
dec
sub
les
(bad)
jno
mov
shl
sub
and
inc
mov
adc
mov
jbe
and
(bad)
ds
repz
fwait
sbb
cld
fldenv
push
jl
out
loop
push
test
fmul
rol
popf
dec
pop
ins
in
lods
cmc
dec
push
movs
mov
xor
(bad)
sub
inc
lods
add
ins
mov
mov
and
mov
sub
mov
cmp
shl
test
push
test
das
ss
mov
sub
cli
push
repz
xor
add
hlt
dec
sbb
mov
int3
jno
sbb
inc
dec
dec
push
jns
dec
and
mov
(bad)
retf
push
out
(bad)
fcomp
repnz
xchg
fild
repz
icebp
rol
jecxz
icebp
push
or
or
test
xor
dec
and
or
push
mov
shl
sbb
repnz
push
adc
es
mov
arpl
add
cmp
pop
dec
add
lock
jmp
inc
jno
out
mov
jmp
gs
push
mov
mov
mov
aaa
xchg
ins
add
inc
jp
adc
fmulp
test
inc
mov
jmp
jbe
mov
aaa
cli
dec
mov
cwde
daa
movs
cmp
cmp
imul
xchg
pop
fnstenv
jbe
jne
add
xchg
popf
dec
xor
pop
das
push
mov
mov
jb
add
push
repz
lock
mov
bound
mov
test
mov
or
scas
dec
add
shl
sub
sbb
jmp
aam
pop
enter
pop
pop
sbb
out
int
cwde
sub
sub
ficom
inc
shr
sahf
xor
add
jecxz
mov
aad
mov
leave
sub
and
push
mov
inc
aas
(bad)
mov
into
push
push
mov
das
xchg
out
leave
addr16
retf
loopne
aas
(bad)
ins
in
adc
clc
fwait
mov
add
sbb
into
rol
jno
dec
push
dec
cld
push
mov
and
jmp
inc
jae
das
ins
push
xchg
jnp
in
sub
mov
push
mov
sbb
hlt
pusha
inc
cwde
jne
cmp
outs
push
repz
mov
in
push
and
stc
or
or
icebp
outs
call
sbb
add
or
inc
mov
out
adc
imul
sbb
jecxz
mov
add
and
unpckhps
ds
mov
or
mov
push
dec
sbb
pop
popf
cli
xchg
xor
cmc
jo
mov
xor
aas
mov
adc
inc
cmp
test
cmps
es
test
push
mov
dec
mov
inc
inc
and
daa
pusha
in
jbe
cmps
push
int3
jg
nop
sahf
retf
sar
jbe
xor
and
pop
rcl
stos
lock
lock
scas
dec
adc
ds
ret
or
add
jle
sbb
test
out
les
retf
adc
enter
dec
test
sub
(bad)
dec
push
pushf
test
jmp
fcmovnbe
sub
call
sub
fiadd
cmp
sbb
mov
push
jo
or
mov
in
push
(bad)
add
dec
sahf
jle
lds
jae
xchg
leave
inc
inc
dec
xor
push
mov
call
xor
xchg
jns
xor
and
leave
loop
cmp
fstp
xchg
fld
aad
inc
sub
arpl
(bad)
leave
and
xor
mov
scas
stos
aad
inc
jae
lds
test
stos
dec
ds
rcr
or
pusha
cwde
test
repz
data16
fistp
jge
xchg
sub
shl
xchg
(bad)
xchg
xor
ss
(bad)
icebp
add
clc
cld
(bad)
push
cmc
xor
leave
mov
test
or
dec
fs
jp
das
sbb
xor
sub
jmp
cmp
mov
lock
cmc
xchg
sbb
test
xchg
movs
cmp
shl
ret
int3
dec
or
retf
inc
(bad)
out
or
sbb
lds
mov
ds
sub
and
cmp
sub
adc
fidiv
cmp
sbb
push
imul
adc
fst
jns
push
xchg
mov
inc
add
scas
push
not
loopne
enter
(bad)
out
(bad)
int3
cmp
adc
(bad)
adc
cdq
sbb
mov
stos
popa
mov
cwde
adc
outs
(bad)
push
retf
cmp
test
xor
verw
sub
jns
fcomp
ins
in
mov
mov
jmp
sbb
mov
adc
jnp
(bad)
or
or
aaa
mov
cld
(bad)
cmc
fs
mov
or
push
mov
or
dec
mov
(bad)
int3
inc
xchg
xor
sbb
mov
stc
test
cmps
stos
cmc
mov
xchg
xchg
out
inc
dec
(bad)
fdiv
add
cmp
xor
cmp
hlt
in
fwait
sbb
test
int
xlat
sbb
jp
add
or
mov
sub
sbb
fimul
das
or
in
mov
and
jecxz
push
call
push
fcomp
push
pop
(bad)
jmp
daa
repz
xor
cmp
outs
mov
dec
adc
(bad)
and
(bad)
pop
push
in
inc
or
jl
out
xor
mov
sub
sbb
mov
cld
stos
jnp
(bad)
jmp
icebp
shl
retf
and
lods
mov
sbb
outs
cmps
ds
cmp
sbb
fucom
icebp
inc
dec
shl
stc
push
inc
cmps
inc
out
push
sub
mov
inc
dec
leave
outs
add
jecxz
pop
inc
mov
adc
out
std
jns
jmp
add
retf
adc
add
jo
add
sbb
dec
cwde
lock
push
add
mov
xchg
cld
aad
and
aaa
hlt
pop
daa
push
push
mov
std
xlat
ss
fcmovnbe
xor
add
jb
outs
xor
xor
jns
mov
rcr
push
mov
mov
nop
(bad)
dec
shl
pusha
or
pop
push
mov
xchg
aam
add
mov
xchg
cdq
pop
push
pop
mov
out
cmp
xchg
mov
in
ja
lock
cmp
jns
push
dec
mov
inc
xchg
mov
cwde
xchg
int3
adc
sahf
xchg
or
icebp
and
ss
push
mov
and
shl
mov
jle
arpl
sahf
(bad)
or
stos
xor
aad
push
pop
jg
std
pop
add
xchg
add
(bad)
sub
sbb
cmps
movs
pop
pop
jae
inc
jp
sub
adc
pop
out
lods
or
xchg
arpl
and
movs
clc
ss
movs
pop
or
push
push
imul
repnz
jge
cld
imul
inc
(bad)
repz
or
cmp
or
push
push
in
cld
xor
das
push
push
sub
sub
and
lods
pop
fcmovnbe
push
repz
das
call
test
in
mov
rcl
(bad)
mul
jle
fdivr
cmps
inc
fdiv
jbe
cmc
cmp
push
inc
xchg
mul
retf
lods
push
clc
or
outs
add
arpl
std
nop
adc
imul
mov
pop
jg
add
out
push
push
mov
fnstsw
in
jg
mov
fs
fiadd
lds
(bad)
and
and
fild
add
scas
cmc
retf
rcr
sbb
aam
jbe
pop
lods
pop
pop
(bad)
jnp
push
cmps
adc
xchg
cs
xor
cld
adc
push
(bad)
outs
pushw
mov
add
add
arpl
jne
out
mov
je
mov
pop
iret
or
cmp
jb
ins
cs
in
add
std
ret
and
cli
cli
retf
out
retf
movs
add
mov
xchg
mov
push
inc
xchg
jge
test
adc
cmp
ror
and
mov
cs
outs
mov
gs
or
addr16
inc
sti
and
ss
xor
cmp
and
call
pop
cmp
addr16
push
push
test
pop
out
or
fdiv
adc
jbe
outs
sub
scas
push
les
mov
iret
(bad)
fs
cmps
mov
dec
adc
push
fcmovne
pop
xchg
inc
mov
lahf
pushf
lods
sahf
rcr
add
cwde
aaa
mov
push
loope
mov
das
jecxz
das
ss
xchg
and
cld
fcom
sbb
xor
lea
loopne
fidiv
loope
add
scas
popf
(bad)
pop
mov
std
mov
mov
mov
adc
repz
and
mov
(bad)
push
pop
out
call
lds
mov
lahf
mov
ja
mov
ins
movs
mov
jecxz
out
cli
push
sub
rcr
inc
popf
xchg
inc
in
and
popf
jecxz
adc
cwde
jnp
stc
pop
dec
(bad)
out
vmread
push
jbe
stos
pusha
xchg
inc
aas
mov
mov
fistp
test
jns
push
fld
push
cmp
test
push
(bad)
(bad)
(bad)
pop
int3
pop
adc
mov
sub
ret
mov
jp
scas
rcr
xchg
popf
push
pop
add
and
lsl
cmps
fadd
imul
cmps
mov
(bad)
in
in
jbe
fs
mov
add
gs
shl
adc
leave
iret
xor
stc
ins
mov
ins
and
mov
or
push
push
push
in
jne
mov
div
or
test
test
sub
test
ins
(bad)
cmc
dec
jno
xor
rcr
fwait
jae
mov
jmp
cmp
add
sahf
add
cmp
popa
push
and
jmp
xlat
dec
or
mov
loop
mov
out
push
(bad)
popa
and
aad
cmp
adc
enter
push
pop
bound
test
jae
int
sahf
mov
and
je
adc
ret
mov
pop
stos
adc
pop
into
outs
mov
adc
ins
xacquire
push
push
inc
push
mov
xor
div
jns
pop
mov
push
push
mov
inc
and
daa
repz
cmp
in
mov
inc
jb
cmp
jmp
or
loopne
mov
retf
dec
ins
push
dec
in
iret
cmps
add
jne
cdq
lds
rcl
inc
jmp
movs
aad
adc
test
sbb
fwait
adc
ss
jno
push
cs
sti
test
push
push
push
and
loopne
sub
cs
mov
fdiv
pushf
sbb
xlat
cmp
fyl2xp1
(bad)
in
add
inc
call
and
inc
xor
jg
mov
add
cmps
add
in
lods
jp
in
push
and
out
pushf
mov
cmp
ins
in
repz
retf
xor
(bad)
cwde
pusha
cmp
and
mov
dec
mov
xor
add
pop
xor
out
nop
clc
in
add
mov
xchg
mov
dec
mov
cmp
jmp
pusha
retf
add
jbe
test
mov
or
mov
ins
es
not
iret
sbb
cmp
inc
cmps
mov
inc
cmps
or
out
jecxz
jmp
mov
pop
aas
ss
fisubr
shl
jmp
or
cli
leave
mov
test
add
sahf
popa
pushf
int
sub
jp
pop
test
lods
mov
push
jge
dec
iret
mov
add
mov
sub
mov
daa
and
sub
shl
mov
cmp
call
xlat
mov
int3
cmp
pushf
cli
sbb
scas
aaa
xchg
add
out
(bad)
jle
lahf
ins
push
clc
imul
xor
sbb
out
movs
lock
sar
and
jp
xor
fist
int
dec
out
je
sub
test
push
out
out
mov
sbb
or
test
jnp
cli
int
test
iret
push
sub
xchg
mov
stc
(bad)
dec
inc
xor
dec
dec
mov
mov
int
lahf
arpl
bound
stos
mov
pushf
mov
cmc
jo
pop
jp
xchg
cwde
pusha
test
jmp
movs
jo
cmps
jne
aaa
popf
fwait
mov
dec
xor
sbb
or
aas
popa
aad
push
or
jo
push
jmp
push
out
and
and
xchg
xchg
imul
mov
jmp
in
push
fimul
mov
out
jmp
cmp
lds
ficom
jecxz
add
call
jb
dec
jmp
rol
or
sbb
jmp
mov
adc
in
xchg
nop
and
add
dec
sub
in
pop
sub
jg
mov
retf
sbb
dec
in
aam
call
fwait
pop
pop
jnp
iret
hlt
push
int
cmp
bound
aad
cmp
jnp
sbb
popa
push
dec
lods
fmul
sbb
repnz
hlt
jne
pusha
imul
inc
add
loop
adc
mov
push
popa
lds
out
xchg
fadd
movs
aaa
push
jno
push
jmp
scas
and
dec
out
mov
mov
adc
adc
push
push
mov
in
addr16
xor
into
ds
in
xchg
mov
lea
xor
js
pop
stc
ja
add
pop
clc
ret
stc
clc
sub
jae
in
dec
sbb
adc
test
stos
add
jae
sbb
pushf
cld
popf
retf
in
loop
push
jge
push
pop
push
inc
std
sub
rcl
adc
or
js
mov
push
dec
mov
xor
mov
scas
daa
in
mov
ins
add
stos
outs
cmp
das
xchg
mov
jmp
popf
std
push
jbe
xor
(bad)
push
mov
out
dec
call
push
fwait
and
mov
mov
test
fimul
sub
cmp
in
pop
jae
xor
sub
mov
push
xchg
inc
(bad)
push
mov
nop
add
out
fisubr
std
mov
or
(bad)
push
push
ja
inc
inc
addr16
push
mov
jmp
aaa
loopne
inc
cli
mov
mov
iret
fs
jp
adc
push
adc
mov
or
fstp
gs
xchg
pop
cmps
inc
mov
jmp
sar
mov
imul
dec
jmp
imul
and
repnz
sub
rdtsc
push
gs
gs
bound
jnp
or
stc
sub
std
push
mov
jae
push
jecxz
loopne
dec
lods
stos
cmp
sub
dec
add
cmp
ins
mov
das
jg
nop
jb
xchg
cmps
sub
lds
les
test
imul
mov
jl
and
addr16
cmp
mov
dec
das
fidiv
pop
aam
ficom
loopne
pop
mov
dec
call
dec
(bad)
sbb
dec
mov
repnz
cmps
fidivr
pop
sbb
add
sar
xchg
jmp
aad
loop
add
or
and
sub
push
loop
inc
dec
inc
arpl
xor
ret
js
jno
adc
ja
xchg
jg
sbb
jecxz
push
jle
mov
mov
inc
(bad)
cmp
push
test
(bad)
cmp
jmp
pop
mov
fadd
je
or
push
push
jne
or
int
mov
xchg
es
ror
jmp
jb
int3
dec
adc
rcl
js
(bad)
lods
xchg
sahf
push
sbb
jl
jge
test
push
cmp
cmovg
gs
add
out
xchg
or
cwde
fcom
sti
mov
push
mov
or
add
fdiv
out
pop
shl
fnstcw
mov
(bad)
test
add
ss
push
xlat
dec
inc
rcl
aas
nop
iret
xchg
fwait
cwde
movs
sub
js
adc
out
add
sbb
xlat
sar
in
rol
or
repz
call
mov
mov
add
and
out
sbb
cwde
test
inc
std
inc
jne
add
ret
sub
fnsave
sub
jno
and
call
jge
(bad)
enter
add
ins
mov
loope
movs
das
fnstcw
sub
imul
inc
bound
mov
leave
shl
fucomp
or
dec
cmp
mov
jne
dec
(bad)
les
mov
(bad)
shl
jle
mov
pop
mov
mov
outs
fldenv
sbb
mov
push
jno
repz
fiadd
movhps
ins
cmc
or
aam
xchg
(bad)
fsubp
jb
enter
daa
inc
rol
(bad)
and
test
jg
xchg
pusha
pop
in
and
dec
in
push
jecxz
xlat
jp
popf
sbb
mov
addr16
and
fs
sub
popa
xchg
cmp
popa
outs
cmp
mov
stos
xor
aas
(bad)
xchg
aad
lods
(bad)
mov
out
inc
push
push
int3
and
sbb
xchg
pop
cmps
jmp
adc
add
inc
into
push
xchg
fsubr
cmp
mov
cmps
pop
retf
inc
test
out
ret
mov
sbb
or
dec
ja
es
cli
adc
or
in
xchg
sub
and
sbb
mov
inc
shl
nop
mov
scas
and
push
mov
jp
repnz
adc
(bad)
aaa
pop
test
sbb
cmp
fwait
jp
(bad)
neg
inc
jno
sahf
movs
cli
mov
les
pop
repz
(bad)
into
sar
fisubr
lods
mov
xor
or
fucom
or
lods
mov
and
sub
iret
mov
(bad)
out
arpl
sbb
push
sahf
cs
adc
movs
ja
js
push
adc
jecxz
add
or
xchg
jl
mov
and
shld
inc
into
pop
sti
bound
sbb
or
sbb
leave
lea
fnstenv
in
inc
push
sub
sar
mov
dec
add
nop
dec
fisttp
cs
pop
cmps
aaa
xchg
(bad)
inc
cmp
xchg
rcr
(bad)
(bad)
bswap
jge
sbb
cld
repz
stos
fcomp
inc
cmps
jl
and
call
cmp
sbb
les
inc
div
(bad)
dec
xlat
outs
mov
lock
retf
push
jno
mov
std
rcr
jmp
or
fidivr
cs
fsubr
cmp
and
lods
or
scas
out
cmc
add
sbb
ja
xchg
pop
push
xor
adc
and
cmps
push
test
jmp
outs
pushf
add
rol
int
dec
mov
xchg
mov
xor
out
sub
out
or
test
sub
outs
xchg
dec
xchg
(bad)
retf
das
retf
or
xchg
cmp
or
or
mov
add
xlat
sti
pushf
ins
mov
jmp
rcr
pop
leave
add
cmp
mov
into
pcmpgtw
cdq
or
mov
test
call
fsub
dec
cmp
xlat
or
inc
mov
mov
js
aas
out
inc
dec
sbb
push
fcmove
jmp
add
gs
(bad)
xor
bswap
xchg
int3
test
pop
stos
cmps
jmp
cld
ins
imul
xor
into
adc
leave
mov
or
or
mov
pop
ffree
push
adc
aaa
sub
fisttp
and
lods
push
xchg
xor
ja
rcl
sbb
cmp
shr
loop
mov
(bad)
(bad)
in
adc
mov
aam
sub
push
sbb
movs
icebp
cmp
in
mov
mov
push
jnp
pop
xor
clc
or
adc
mov
call
loopne
inc
dec
pop
dec
sbb
test
jb
mov
mov
clc
stc
inc
sti
fldenv
or
jo
dec
add
je
ins
mov
aas
xchg
test
movs
add
jb
jb
xchg
movs
mov
mov
inc
xchg
ret
ficomp
xchg
dec
cmp
(bad)
mov
inc
shr
sub
mov
aad
stos
and
inc
jmp
cli
daa
inc
mov
mov
mov
pop
mov
mov
mov
int3
xchg
pop
add
in
inc
pop
push
xor
popf
or
bound
test
mov
push
test
xchg
and
(bad)
mov
fcomp
jmp
imul
aam
(bad)
movs
add
sub
test
cmp
test
lea
and
(bad)
sub
in
pop
dec
jmp
add
jb
mov
push
xchg
rol
jecxz
imul
sub
jmp
mov
xchg
push
push
cmp
push
mov
mov
jne
mov
xchg
push
xor
add
jnp
sbb
cmps
and
sub
hlt
lds
sub
add
fistp
push
pop
fcomp
xchg
and
sbb
out
mov
xor
sti
mov
cmp
pop
add
outs
sbb
pop
adc
ins
dec
test
sbb
xor
sub
movq
int
or
pop
push
mov
jmp
lods
mov
xor
and
arpl
mov
ss
mov
bound
rdmsr
sbb
inc
push
test
fild
(bad)
jmp
call
mov
xchg
push
inc
cdq
aaa
sbb
inc
mov
sbb
and
sbb
sub
sbb
sahf
xor
dec
push
jno
fcmovu
adc
jmp
dec
and
push
mov
dec
test
outs
fsub
sub
ss
mov
sub
mov
mov
scas
imul
loop
xchg
stos
pop
sbb
addr16
xchg
pop
dec
loop
(bad)
iret
jmp
(bad)
stc
mov
adc
add
fisttp
(bad)
(bad)
adc
inc
cdq
mov
call
xchg
(bad)
or
mov
mov
xchg
fsub
mov
sub
dec
sub
add
ficom
retf
xchg
out
mov
dec
std
sub
and
mov
dec
sub
adc
ret
push
xor
aam
fnstsw
(bad)
pop
fcomp
movs
xchg
(bad)
inc
and
push
gs
in
inc
mov
int3
test
mov
jno
jge
adc
pop
jae
leave
jbe
popf
xchg
add
jo
xlat
stos
cld
mov
jbe
dec
in
outs
add
cmps
or
push
pop
inc
mov
js
jecxz
(bad)
xor
out
dec
mov
(bad)
lock
push
sub
push
pop
jbe
xor
mov
loopne
test
pop
mov
(bad)
xchg
xchg
sahf
retf
pop
mov
cmp
stos
xor
fisttp
or
pop
je
loopne
pop
or
lds
or
dec
int
xchg
shl
movs
push
loope
pop
mov
daa
lea
imul
repz
mov
jp
push
loope
xchg
test
jns
sar
sbb
daa
gs
addr16
mov
sbb
mov
rcr
jp
fnstcw
lods
jg
aad
cmp
mov
inc
or
dec
std
mov
sub
loope
mov
or
dec
jmp
data16
scas
xor
and
sbb
add
xchg
cli
sub
lahf
or
cmp
cmp
xor
xchg
cmp
push
mov
push
movs
dec
add
xor
mov
push
(bad)
jns
ins
push
out
mov
call
je
retf
mov
cmp
(bad)
stc
out
pop
mov
inc
jecxz
xchg
in
repnz
dec
in
inc
sbb
push
adc
mov
pushf
in
(bad)
imul
sub
ret
cmp
mov
and
call
sub
pop
ss
mov
cld
xchg
xchg
div
lods
mov
mov
xor
jb
das
push
mov
in
push
pop
push
add
aas
inc
push
outs
std
jno
repz
add
mov
and
dec
push
outs
pop
jmp
hlt
jae
call
repz
xchg
cld
add
ins
popa
mov
fsubr
mov
push
loope
mov
mov
dec
movs
mov
pusha
xor
pop
fsubr
jo
aam
(bad)
(bad)
aad
in
pop
jo
or
sysret
jmp
xlat
or
nop
stos
out
imul
cmc
pusha
ds
jne
inc
scas
pushf
jle
add
int3
enter
add
aas
mov
pop
sub
sbb
setne
xor
mov
jmp
inc
push
mov
pop
fild
lock
sub
or
add
sbb
pop
xchg
mov
test
test
pop
scas
popf
push
and
orps
cld
cmp
sbb
push
mov
pusha
and
inc
adc
add
push
adc
dec
ds
popf
mov
stos
jo
push
cmp
mov
dec
pop
add
loop
add
(bad)
sahf
inc
adc
mov
add
mov
cmp
lods
dec
repnz
bound
mov
bound
push
sbb
push
mov
pop
lahf
sbb
push
lods
sbb
in
or
popa
add
cwde
jmp
clc
and
mov
test
push
inc
mov
cmp
push
pop
push
dec
fwait
out
inc
xchg
arpl
sub
es
xlat
mov
mov
sbb
xor
les
pop
cli
jp
sub
int3
mov
icebp
sbb
add
pop
xchg
dec
mov
add
mov
cs
sar
std
or
jno
gs
in
jae
into
out
fcom
mov
fst
cs
sahf
addr16
xor
push
jp
rol
arpl
repz
xor
cmp
sub
clc
test
mul
aas
cmp
aam
pop
pop
iret
call
add
clc
loop
cmps
mov
pop
sbb
add
push
xchg
scas
loopne
and
xor
inc
jecxz
(bad)
jns
fwait
xchg
cmp
out
cmc
cs
xchg
push
nop
cdq
mov
in
push
shl
aas
adc
xor
xchg
push
nop
inc
and
mov
mov
mov
xor
mov
sub
hlt
aas
lock
sar
(bad)
leave
fisubr
movs
in
adc
rol
push
(bad)
lea
outs
adc
xor
jns
jb
mov
and
in
adc
jmp
fmul
or
cmp
ja
push
mov
adc
push
mov
(bad)
daa
xlat
retf
pop
xchg
jbe
lods
or
xor
sbb
xlat
dec
push
or
mov
jmp
addr16
add
cmp
mov
jae
movs
push
xchg
sbb
sahf
cmps
pushf
cmp
sbb
scas
ds
xlat
adc
enter
scas
sub
int
mov
aad
into
mov
fdivr
inc
test
jecxz
cmc
add
or
or
mov
add
jo
cld
test
push
jns
retf
fld
aaa
in
outs
call
push
inc
test
shl
ret
inc
pop
push
imul
mov
fdiv
push
out
arpl
jmp
or
cmp
mov
icebp
push
or
stos
(bad)
movs
xor
pop
icebp
sbb
pop
ficomp
rcr
imul
push
dec
pop
ror
and
pop
mov
push
cmp
cmp
fild
cmp
and
xchg
mov
sub
stos
mov
sahf
loopne
lahf
movs
ja
push
xchg
or
ror
pop
push
aam
fdiv
idiv
xchg
pop
xor
mov
jno
jecxz
adc
pop
aaa
sub
push
shl
pusha
cs
aam
retfw
jmp
iret
inc
and
push
and
popa
lods
add
call
cmp
(bad)
jmp
fcmovne
or
leave
cli
cmp
retf
into
sbb
cmp
fidivr
aaa
call
movs
pop
aad
loopne
sahf
sub
out
xor
pop
cmp
xor
dec
mov
call
pop
ret
jno
into
scas
daa
das
inc
mov
or
aas
aas
jg
mov
cli
dec
loopne
push
mov
fiadd
ror
mov
das
test
and
fisttp
mov
lock
push
sti
xor
adc
and
and
cmp
jmp
out
push
pop
rcl
jns
push
and
cmps
add
mov
mov
inc
and
and
test
mov
out
mov
mov
fistp
sbb
jp
lods
or
pop
in
adc
scas
mov
dec
pop
das
aas
jg
rcr
stos
adc
adc
std
mov
enter
scas
jns
mov
pop
add
int
sbb
lods
mov
jge
mov
mov
mov
ret
vpmacssdqh
xor
xor
jge
test
adc
loope
int
or
lahf
adc
in
movs
fisub
sbb
ja
pop
xchg
stos
mov
bound
sahf
mov
(bad)
pusha
popf
cmp
lods
sbb
iret
dec
push
ins
ins
lods
in
push
pusha
inc
imul
dec
cs
retf
mov
in
jns
test
inc
add
dec
sub
sub
xchg
sub
lds
push
adc
mov
inc
int
inc
ret
push
jg
or
push
jb
xor
pop
dec
fnstsw
sub
int
lock
mov
icebp
lock
xchg
mov
push
mov
adc
ins
fwait
or
mov
jmp
mov
in
imul
xchg
mov
enter
call
movs
fsubr
xor
mov
pop
icebp
(bad)
ficom
fstp
push
xchg
inc
shl
jg
adc
popf
into
inc
mov
dec
mov
push
pushf
call
mov
repz
pop
mov
mov
imul
arpl
fcomp
rdmsr
push
dec
pop
mov
adc
in
jmp
jne
adc
push
aad
add
imul
dec
pop
mov
jo
(bad)
fmul
jmp
and
ret
or
push
pop
mov
gs
in
(bad)
(bad)
jmp
jmp
ss
jbe
inc
out
and
jbe
call
retf
rcr
sahf
lods
jne
test
sub
xor
xor
fcmovnu
hlt
push
retf
or
repz
pop
dec
and
(bad)
(bad)
mov
adc
add
inc
mov
test
in
rcr
call
or
out
call
xor
cmp
data16
lea
push
call
cmc
dec
push
mov
xor
fwait
mov
pushf
mov
add
dec
jle
adc
adc
cmp
(bad)
ins
cmps
call
push
pop
bound
or
xchg
popa
test
inc
fs
and
fdiv
clc
mul
bound
jmp
ins
jmp
dec
fucomp
clc
cs
out
cld
mov
dec
loope
mov
or
imul
inc
jl
ret
cmp
jmp
popf
mov
lea
sbb
aaa
neg
xor
out
and
add
push
into
jae
xchg
sbb
dec
sub
push
jmp
pop
out
js
jle
jle
call
mov
sti
lods
aas
enter
xchg
xchg
stos
aam
push
dec
cmp
xor
scas
loope
push
inc
outs
add
pop
mov
int
jge
mov
mov
jb
test
pop
jne
mov
movs
test
jg
sub
add
jge
dec
jb
std
push
fidiv
dec
pop
mov
je
dec
imul
mov
movs
pop
mov
cmp
xor
cmp
mov
sub
jp
mov
sub
fwait
jo
or
arpl
push
js
pop
jo
ret
aas
and
push
jg
sbb
fisttp
jbe
push
dec
ja
imul
inc
xchg
cld
(bad)
xor
jb
add
clc
cmp
pop
dec
add
jecxz
arpl
sub
push
or
adc
cmp
ror
or
xor
cdq
aas
enter
not
or
jp
(bad)
cmc
xchg
in
shr
imul
push
xchg
mov
jmp
xchg
(bad)
mov
xor
push
xor
jo
mov
popf
lods
inc
push
xor
xor
jnp
sub
(bad)
and
test
mov
push
add
xor
sub
push
sub
adc
or
jno
mov
sahf
(bad)
int
and
push
push
js
push
js
jp
(bad)
pusha
jecxz
mov
pop
xor
xchg
inc
and
out
add
and
jae
xor
lds
jge
mov
iret
pop
push
bound
sbb
pop
jo
retf
add
lahf
pusha
inc
iret
dec
loop
xchg
(bad)
pop
xor
clc
pop
push
aam
aad
shl
sahf
add
xchg
(bad)
mov
mov
ret
pop
mov
inc
addr16
sub
fdivr
leave
fstp
ins
xchg
mov
cmp
in
sub
xchg
aaa
cwde
lods
retf
and
loope
push
ret
or
shr
int3
mov
jne
adc
xor
fld
or
mov
mov
jns
sbb
push
lahf
pop
ret
or
or
je
jle
repnz
push
rcr
and
xchg
sbb
(bad)
xchg
aas
dec
std
scas
mov
mov
push
or
sbb
xchg
outs
jp
test
and
add
popa
push
sub
push
rcpps
jmp
pop
fidivr
inc
adc
mov
push
pop
leave
inc
shl
(bad)
sbb
movs
and
sbb
shl
scas
test
xchg
fadd
mov
sbb
aam
jb
xor
stos
enter
dec
mov
jno
push
popa
mov
fstp
test
xor
cmps
mov
push
div
pop
cmp
aad
call
cmc
jae
retf
and
dec
ficomp
jg
sti
aaa
out
dec
cld
add
mov
add
repz
stc
scas
or
add
inc
pop
mov
mov
xlat
dec
ror
cmp
dec
dec
test
mov
es
pop
ret
imul
(bad)
fmul
fdivr
aas
jle
aad
mov
popf
xor
and
les
jmp
je
aam
repz
push
jl
test
jbe
arpl
cmps
icebp
mov
(bad)
dec
pop
ds
jmp
cmp
adc
push
add
or
pop
jo
je
mov
cmps
out
mov
aad
xchg
dec
out
jne
and
dec
add
fmul
in
mov
pop
pop
shl
lods
fild
bound
test
cmp
push
(bad)
out
or
test
call
jmp
sub
popf
adc
scas
mov
and
or
sti
imul
call
sbb
lods
pop
imul
adc
in
mov
adc
out
xchg
mov
neg
push
int
sub
sbb
iret
dec
xor
jmp
jmp
loopne
cmp
test
mov
add
add
imul
jno
cmp
xor
inc
mov
leave
jl
lock
pop
jae
loope
imul
sub
lock
inc
pop
dec
adc
jecxz
mov
xor
loope
jge
fsubr
int3
push
out
out
xchg
pop
sbb
pop
(bad)
lods
mov
xor
out
xor
xor
in
outs
leave
sub
adc
push
shl
iret
pop
mov
jmp
addr16
sbb
mov
pop
stc
and
scas
push
xchg
inc
pop
push
push
cmps
call
daa
mov
mov
mov
stos
add
or
rcl
fisttp
les
pop
pop
cli
aam
arpl
xor
out
jns
or
add
mov
cmc
and
add
test
pop
jb
fild
iret
dec
inc
xor
pop
pusha
adc
pusha
cmp
mov
mov
add
fistp
aaa
fdivr
xchg
sahf
pop
daa
xor
jnp
jae
pusha
push
jmp
dec
inc
pop
add
outs
ror
cmp
pop
add
push
cmps
cmps
mov
cmp
dec
dec
cwde
and
mov
jns
inc
pop
or
cdq
pop
add
stos
cmp
rcr
jo
int3
xor
fdiv
cmps
out
int3
jbe
inc
rcr
mov
retf
and
js
sbb
loop
retf
push
jmp
adc
imul
sub
sbb
push
dec
cdq
pop
sub
jno
leave
cmp
mov
mov
add
loop
cmc
fadd
ror
fisttp
jp
adc
inc
inc
aas
ss
lods
xor
test
mov
iret
sub
mov
push
out
sub
dec
mov
cmp
cmp
idiv
mov
mov
mov
mov
mov
retf
aas
ja
rcl
(bad)
rcl
jns
lock
mov
mov
xor
cmps
and
cdq
adc
jmp
jmp
loop
shl
pop
cli
imul
and
inc
lds
sub
dec
mov
dec
loopne
sti
frstor
(bad)
sub
call
and
sbb
xchg
sti
jl
data16
jl
mov
imul
aam
xchg
mov
pop
and
lock
ins
je
iret
je
dec
mov
cdq
add
xchg
mov
mov
jns
cmp
dec
(bad)
in
cmp
sub
push
dec
in
fcomi
jne
jp
and
mov
cmp
bound
int3
cli
push
xchg
add
push
js
jbe
push
in
mov
push
mov
(bad)
pop
push
call
adc
sahf
aam
pusha
mov
dec
add
jbe
or
inc
mov
jmp
in
adc
dec
sbb
push
pusha
and
cmp
mov
ds
ds
pop
fisttp
mov
mov
ins
xor
jmp
ja
jo
jmp
sbb
or
js
or
sbb
popa
adc
add
jle
call
(bad)
imul
sub
pop
nop
jae
cmp
popa
fs
out
add
call
(bad)
int
std
cmps
push
cmp
or
pop
(bad)
and
clc
hlt
mov
xor
mov
(bad)
sub
dec
xchg
jp
jnp
ja
inc
pushf
mov
daa
pop
add
push
pop
mov
fisubr
fcomp
jmp
jge
pop
xchg
outs
lock
lock
xor
out
xchg
das
hlt
jne
mov
dec
and
pushf
div
inc
leave
fmul
adc
repnz
mov
int
mov
(bad)
mov
cli
les
inc
fwait
(bad)
lods
inc
mov
cmc
jge
mov
and
addr16
adc
repz
cmp
mov
stos
pop
sub
mov
mov
js
lea
int3
fild
jbe
ins
popa
sub
jnp
pop
jge
les
cmp
ret
in
fwait
sbb
adc
rcl
ds
inc
movs
jg
enter
int3
pop
in
cdq
ins
jmp
in
stos
hlt
add
mov
inc
pop
iret
and
or
mov
retf
es
popf
mov
inc
jl
cdq
xor
mov
mov
inc
iret
loopne
jmp
fdivr
mov
pop
repz
icebp
out
and
sti
rcl
hlt
xor
movs
sub
sahf
popf
dec
data16
jecxz
je
cmp
push
aaa
stc
pop
mov
aaa
leave
mov
or
iret
fdiv
stos
xchg
jge
cmp
adc
sub
inc
int
dec
mov
mul
and
clc
xor
ja
xchg
aas
stos
cmp
add
sbb
mov
jns
dec
cmc
clc
cs
stos
ror
out
cmps
mov
add
movs
fmulp
mov
xor
mov
test
mov
dec
xor
add
enter
inc
and
jnp
push
dec
dec
xchg
jno
xchg
call
mov
test
(bad)
movs
mov
cmp
daa
sahf
sahf
dec
and
and
jl
popf
adc
dec
fsubrp
adc
call
test
(bad)
add
call
es
xchg
pushf
xchg
push
sub
add
mov
cmc
popf
test
and
xor
jmp
test
xor
fwait
sub
test
(bad)
mov
sahf
mov
xchg
sar
dec
cli
adc
aam
xchg
hlt
mov
and
retf
adc
daa
push
push
std
add
sbb
add
jns
xor
cmc
pop
pop
sbb
aam
xor
loop
in
es
push
pop
jle
inc
cs
inc
clc
mov
jmp
imul
pop
push
lds
inc
mov
xor
or
fidivr
loop
rcr
or
fistp
mov
sbb
test
pop
inc
imul
punpcklwd
out
out
and
push
sti
pusha
dec
ja
imul
sti
dec
adc
test
daa
aad
dec
fisub
inc
(bad)
cli
push
push
jl
pop
out
(bad)
es
cmp
mov
xchg
out
pop
test
cmps
imul
adc
adc
jo
xor
test
into
xchg
lods
je
fcmove
sbb
in
pop
jge
add
mov
pop
(bad)
mul
inc
mov
xor
mov
cmps
xchg
inc
loopne
adc
cmps
mov
retf
jne
ret
fsubr
and
std
retf
enter
pop
shl
sahf
ja
pop
shl
ja
adc
test
cmp
jmp
sub
std
jne
repnz
jne
int
sub
dec
lds
jbe
sub
fwait
cmc
rol
ds
mov
mov
cmp
dec
jmp
sub
or
mov
nop
push
lods
in
aas
xor
mov
and
add
dec
loop
mov
movs
cmp
fstp
shl
mov
cmp
mov
call
jge
inc
cs
shr
dec
fistp
xchg
pop
repnz
cs
daa
lock
imul
xor
(bad)
adc
cmps
arpl
bound
out
lds
sub
out
rcr
mov
cmp
and
sub
ins
or
leave
pop
cmps
push
jl
in
repz
and
out
add
push
test
sbb
addr16
dec
mov
xor
ret
mov
fmul
xchg
ja
xchg
push
pop
mov
add
stos
lock
neg
mov
push
sbb
ret
jl
jl
or
xlat
gs
aaa
test
or
pushf
repnz
add
test
jl
addr16
mov
mov
stc
in
cmps
js
push
or
stos
out
push
pop
inc
dec
fisubr
cs
repz
and
jl
fistp
gs
xor
cmp
arpl
in
pop
xchg
int
xor
stc
inc
mov
add
dec
or
test
cmp
repz
(bad)
jge
push
(bad)
adc
aas
mov
and
push
je
xchg
rcr
(bad)
xchg
sbb
je
dec
push
inc
dec
mov
(bad)
nop
clc
popa
aam
sbb
(bad)
cmp
pop
add
btr
dec
retf
sbb
inc
scas
test
daa
or
dec
dec
outs
and
and
fist
push
or
ja
jl
inc
(bad)
or
leave
or
fdiv
pop
fwait
or
jmp
and
cmc
xor
or
lds
mov
sub
imul
inc
xchg
adc
lods
mov
pop
jmp
adc
fdivr
xor
push
xor
add
outs
sub
xchg
cwde
dec
and
aam
repnz
out
xchg
fs
or
lahf
and
das
mov
xor
movs
mov
mov
(bad)
ror
xor
cli
inc
repz
pusha
push
xor
mov
cld
mov
mov
loop
adc
loope
and
mov
push
mov
adc
push
push
adc
(bad)
in
adc
cld
sbb
ins
nop
pop
icebp
adc
inc
jge
gs
add
pop
add
cmp
out
fadd
cmc
rol
pop
into
xor
cmp
int3
cwde
or
je
in
pushf
rol
repnz
fnstenv
mov
push
scas
jmpw
pop
adc
mov
cmp
scas
push
pop
clc
(bad)
mov
sbb
outs
adc
push
std
and
les
imul
sbb
xor
push
loopne
cs
inc
dec
addr16
and
outs
cmps
ror
xchg
mov
stc
test
and
mov
push
hlt
xchg
add
out
int3
xor
xchg
ret
test
loope
inc
mov
mov
inc
sub
mov
xor
(bad)
ret
xchg
or
mov
out
test
mov
and
cwde
cld
cld
sbb
jno
call
popf
push
and
xchg
inc
lods
cmp
jne
test
add
call
sub
arpl
mov
push
push
mov
push
enter
cmps
and
daa
std
enter
cli
sbb
inc
push
pop
inc
mov
inc
je
and
arpl
mov
inc
cmp
stos
mov
and
xor
jmp
xchg
das
sahf
or
mov
sbb
push
stos
add
out
sub
jmp
adc
jnp
push
ins
jl
mov
fisttp
inc
sbb
cmp
repz
(bad)
rep
mov
dec
out
jne
pop
cmc
mov
cmp
aam
add
mov
push
add
push
ret
(bad)
xor
sar
mov
fnstsw
movs
push
dec
adc
add
daa
xor
test
fcmovnbe
mov
xor
les
mov
(bad)
jl
dec
jp
daa
pop
popa
imul
hlt
in
pop
mul
cvtps2pd
xchg
sbb
push
addr16
stos
and
scas
inc
push
mov
pop
push
adc
int3
xor
ret
xchg
les
mov
stos
dec
js
jecxz
add
lods
xor
sub
or
dec
fld
adc
add
shr
repnz
scas
mov
adc
mov
es
inc
popa
xchg
(bad)
or
shr
mov
push
pushf
sbb
jl
inc
and
push
mov
push
dec
out
ffree
lods
dec
imul
ret
test
pop
sar
cmps
std
and
push
mov
lock
lahf
push
js
push
hlt
or
sbb
int
jo
sbb
fmul
dec
int
stc
and
je
sar
push
arpl
jge
pusha
and
jmp
xchg
repz
mov
mov
ins
sub
add
mov
ret
mov
(bad)
lea
cmp
iret
jnp
nop
mov
pop
jecxz
test
pop
add
cmp
push
mov
outs
ret
pop
fsub
out
sbb
hlt
xchg
jle
cwde
fwait
adc
dec
inc
stos
dec
mov
jge
aaa
lds
test
mov
pop
cmps
inc
or
push
lods
(bad)
in
fild
(bad)
dec
ins
adc
adc
jo
jne
xchg
aaa
fs
(bad)
iret
out
xchg
inc
lds
rcr
cmp
fldenv
mov
xor
add
ss
comiss
sbb
fild
movhps
fdivr
mov
dec
rol
lea
ins
pop
repz
(bad)
push
icebp
jae
scas
mov
je
retf
shl
(bad)
ret
test
mov
(bad)
pop
pop
stos
cmp
sbb
sub
call
mov
lea
popa
inc
not
or
push
in
mov
inc
or
sar
push
int
seta
leave
(bad)
inc
mov
jp
sti
sbb
fwait
mov
cs
movs
outs
push
sub
retf
arpl
pop
jle
add
fldenv
lods
ins
loop
out
push
in
cmps
or
sahf
fs
test
fcmovnu
jl
test
inc
scas
out
fldenv
rcr
inc
and
jb
push
cmps
outs
mov
aas
or
shl
inc
les
cmp
sbb
cmp
pop
fidivr
jne
dec
push
add
mov
push
inc
clc
movs
add
jns
sbb
xor
pop
popa
pop
(bad)
cmp
cdq
jae
in
adc
mov
add
cs
icebp
lods
mov
pusha
mov
pop
fistp
in
xchg
mov
cmp
cmp
and
inc
cmps
inc
xchg
es
pop
retf
cmp
fsub
js
lock
mov
jecxz
jl
rol
repz
add
push
stos
push
mov
sub
ins
cdq
mov
out
push
inc
ficomp
mov
scas
fisub
psllw
dec
lock
(bad)
dec
icebp
mov
pop
outs
mov
add
dec
sub
inc
rol
mov
dec
sub
xchg
div
push
mov
adc
shrd
outs
fldl2t
cmps
xor
out
cdq
or
mov
mov
xor
cs
pop
loop
inc
xor
mov
mov
cmp
loope
fcomi
push
mov
adc
push
pop
scas
sti
mov
ret
adc
cld
stos
neg
inc
jl
mov
and
inc
mov
js
inc
ficom
jge
pusha
mov
mov
mov
and
pop
pop
stos
xor
test
sub
sbb
imul
ins
push
(bad)
xor
aad
mov
not
fcom
and
and
jo
sub
pushf
gs
mov
gs
push
jns
jmp
sbb
retf
mov
mov
inc
sar
call
loopne
je
dec
xor
push
out
push
cmp
(bad)
mov
aad
xchg
or
jle
adc
out
(bad)
jle
push
lods
ins
mov
and
fwait
pop
in
pop
adc
push
scas
lods
in
adc
jae
xchg
data16
sub
cli
aam
and
jne
mov
div
push
dec
dec
into
fwait
cmp
ds
call
out
mul
push
jne
push
stc
nop
icebp
mov
les
inc
xor
int
sar
xlat
scas
pop
push
adc
jge
ja
push
jp
inc
ret
in
outs
pop
jmp
fidiv
rcl
jno
sti
xor
cli
add
ins
std
mov
lock
cwde
aam
mov
sahf
sbb
(bad)
jg
adc
adc
mov
jae
test
in
std
or
mov
(bad)
cmp
(bad)
or
jno
je
scas
xor
ds
xchg
sub
ins
jl
jle
jle
jbe
cld
xchg
int3
or
xlat
fild
pushf
retf
out
or
pop
sbb
cmps
imul
xchg
mov
push
adc
ins
fist
je
or
and
pop
and
jns
push
ror
sub
or
mov
dec
sub
inc
neg
push
xchg
mov
out
test
shl
pop
jecxz
pop
fisttp
nop
stc
(bad)
inc
ds
rol
jne
mov
loop
ja
sbb
nop
aad
mov
xlat
jb
xchg
xchg
jnp
ret
or
jl
and
fdivr
repnz
vzeroall
inc
div
ja
daa
jle
pop
fadd
mov
lods
arpl
sbb
lea
add
(bad)
push
fldcw
dec
xchg
sub
fistp
pop
mov
and
xchg
stos
inc
add
div
test
sub
sbb
loopne
test
bound
adc
jmp
int3
aas
mov
inc
mov
jmp
or
sub
repnz
in
out
loop
sbb
cmp
pop
dec
dec
xor
(bad)
ds
xor
sub
sub
retf
rcl
sbb
mov
data16
(bad)
jmp
out
test
jnp
hlt
cmp
pop
jb
mov
inc
enter
call
call
popa
mov
fcomp
adc
iret
pop
lds
daa
jae
idiv
aaa
cmc
mov
add
mov
enter
cmp
dec
jecxz
lods
sub
dec
xlat
adc
scas
into
jmp
cs
mov
pop
ja
add
mov
jmp
in
popfw
cmp
imul
jp
adc
scas
inc
push
dec
movs
fst
in
out
pop
or
sbb
add
xchg
mov
je
fimul
pop
adc
sbb
in
movs
popf
fist
lahf
in
mov
inc
jno
xchg
ret
mov
mov
mov
je
and
call
fwait
cmp
(bad)
mov
aam
adc
sahf
adc
pop
sbb
aad
pop
push
test
or
test
lods
aam
sbb
scas
pop
loop
iret
xchg
jle
push
xchg
aad
adc
xor
or
xchg
and
lahf
loopne
pop
xor
stos
sbb
sbb
call
add
retf
ja
xchg
cld
jmp
xchg
mov
mov
and
lods
xor
or
push
xchg
sbb
xor
xchg
popf
pop
adc
fs
add
xchg
jo
mov
push
out
or
push
stos
imul
mov
mov
add
sub
add
mov
cli
inc
test
shl
mov
dec
jmp
jae
bound
out
popa
mov
fdiv
pushf
repnz
ja
pop
cmp
lods
mov
stos
pop
sbb
data16
mov
add
icebp
fisttp
xlat
scas
adc
mov
loopne
in
pop
repnz
and
retf
mov
mov
lods
(bad)
iret
jb
shl
leave
xor
mov
jne
retf
sbb
xor
cli
dec
js
loop
(bad)
out
jmp
in
xchg
xchg
jae
push
or
sahf
fnstsw
gs
push
push
sub
inc
iret
sahf
add
push
cmp
int
imul
push
inc
mov
ret
jae
xchg
movs
jmp
pop
inc
push
int
cmps
mov
lods
iret
mov
mov
je
lods
mov
jno
ins
retf
mov
in
popa
dec
push
cmp
sbb
movs
sub
sbb
inc
mov
loopne
ins
mov
mov
ds
fucomi
lods
mov
sbb
jle
mov
cld
mov
push
sub
jmp
int
(bad)
jno
imul
dec
or
in
mov
retf
inc
jle
(bad)
scas
pop
jge
and
inc
xchg
test
mov
lock
dec
addr16
pop
aam
(bad)
int3
bound
xchg
adc
dec
xor
gs
test
mov
cmps
call
fcmovnb
fdiv
cdq
(bad)
icebp
pop
sub
lock
(bad)
jmp
jns
enter
pusha
movs
sub
stc
ss
aaa
lds
addr16
inc
jne
call
mov
xchg
jp
cli
outs
jmp
mov
icebp
sub
xor
outs
xor
push
js
mov
xchg
iret
or
add
inc
adc
test
adc
dec
popf
push
xchg
movs
and
(bad)
mov
add
shl
ins
dec
dec
mov
jns
and
xor
fwait
lock
fwait
and
iret
arpl
and
lock
shl
(bad)
ss
cwde
in
jl
sub
lea
jne
adc
fild
push
jb
xchg
jnp
ins
out
popf
add
aas
lea
mov
add
nop
adc
sbb
mov
xor
mov
xor
or
push
jnp
fs
sub
int3
sbb
push
jl
sbb
jbe
retf
ja
pop
mov
(bad)
in
int3
push
pushf
add
ins
ret
ds
std
or
mov
clc
and
shl
jno
jle
cmps
push
sbb
jle
aaa
mov
adc
test
pop
cmp
ret
lods
adc
loope
adc
mov
hlt
dec
pop
dec
or
(bad)
sahf
dec
sub
push
adc
test
aad
movs
mov
xor
jnp
jmp
cli
mov
std
xlat
std
xchg
sbb
push
and
or
fldenv
adc
inc
xchg
sub
lods
mov
clc
rcr
jae
jb
adc
mov
daa
xchg
mov
and
pop
outs
imul
mov
test
or
pop
and
inc
push
xchg
cs
cli
mov
mov
mov
mov
(bad)
pop
das
dec
mov
dec
in
mov
push
push
sbb
popf
sbb
mov
sbb
ja
adc
sub
and
and
pop
pop
ins
test
popa
sub
push
cwde
inc
and
(bad)
mov
xchg
xchg
xchg
sub
mov
and
cmps
mov
adc
(bad)
(bad)
gs
pop
inc
cmps
sbb
test
fild
sub
sub
push
pusha
das
fwait
jne
or
and
adc
mov
cdq
jo
jge
stos
add
jbe
sbb
xor
test
popf
aas
ret
pop
in
fmul
int3
push
aad
jo
movs
pop
xor
mov
inc
test
sahf
call
pop
jo
and
sub
jmp
shl
es
adc
pop
es
xchg
pop
push
mov
cld
sub
pop
repnz
fs
cmps
jns
add
fimul
movs
(bad)
outs
cld
pushf
or
ds
imul
cmp
ss
xchg
adc
adc
xchg
and
mov
xor
les
cdq
inc
add
enter
rol
sbb
jae
(bad)
arpl
mov
call
sahf
mov
add
ins
mov
add
fs
mov
fs
xor
or
movs
fistp
pop
jb
cld
push
cli
or
scas
arpl
sahf
mov
fdivr
mov
lds
fnsave
jmp
in
shl
jnp
cmps
mov
jmp
sbb
xchg
cwde
add
(bad)
mov
jecxz
inc
cs
aam
loop
xchg
mov
test
mov
dec
cmp
jbe
call
cmp
loop
jmp
sub
cmps
not
mov
mov
cmp
lods
xchg
ins
mov
sub
jg
mov
mov
lods
test
jo
push
mov
mov
dec
jmp
leave
(bad)
sbb
xchg
push
xchg
mov
jno
xchg
mov
pushf
sbb
loopne
out
fadd
mov
repz
sti
inc
xchg
stc
xchg
xchg
jae
cmp
push
cmp
mov
pop
sbb
je
(bad)
les
in
mov
popa
or
(bad)
jbe
xchg
cmc
fdiv
push
imul
cmps
test
mov
repnz
fist
test
add
inc
out
loope
pop
push
inc
cmps
outs
jb
mov
mov
hlt
iret
push
pop
sbb
stc
hlt
mov
(bad)
dec
ret
or
daa
pop
and
(bad)
jno
mov
scas
cmp
cli
fdiv
imul
int
fld
adc
pop
ins
sbb
jl
ins
mov
jns
jno
lock
lock
mov
dec
xlat
cmp
add
cdq
gs
leave
mov
xor
stos
sahf
xor
jecxz
enter
sbb
lods
fistp
mov
sub
and
scas
cmp
pop
(bad)
out
mov
sub
rcl
inc
icebp
lahf
xor
xor
or
inc
popa
push
hlt
mov
sahf
jmp
dec
add
push
pushf
sti
sahf
sbb
cmp
dec
cwde
test
fist
mov
aas
dec
ins
jno
test
jns
fsub
xchg
call
icebp
pop
pusha
and
lods
add
scas
jmp
out
ja
test
sbb
jp
cmp
push
stos
pop
mov
mov
pop
push
rcr
adc
inc
retf
push
mov
scas
and
shl
and
movs
mov
xchg
in
sbb
mov
rcr
das
mov
out
xchg
jl
push
xor
sbb
test
test
and
adc
add
push
mov
lahf
pop
and
jmp
scas
dec
push
das
imul
sbb
pusha
or
xchg
sbb
cmp
fwait
xor
dec
mov
inc
jmp
mov
or
pop
ins
and
hlt
pop
js
add
lods
out
test
xchg
xchg
int3
mov
mov
enter
sbb
mov
es
mov
daa
xchg
xor
mov
ja
inc
in
in
or
jae
jae
stos
dec
cld
imul
mov
mov
aad
jecxz
cmp
jge
cdq
leave
test
cs
popf
sbb
dec
dec
or
fwait
adc
gs
std
cmp
ins
or
jno
outs
xchg
dec
jmp
sti
xchg
inc
cli
xchg
mov
pop
sti
adc
xor
out
(bad)
loope
ss
out
movs
and
daa
daa
repnz
ret
mov
push
addr16
repz
pop
jnp
mov
mov
pop
and
stos
lods
mov
pop
push
add
fnsave
mov
pushf
popf
sbb
fwait
lods
inc
scas
imul
xor
loope
or
adc
add
fidivr
test
loope
adc
sahf
aaa
ins
jl
bound
push
push
div
(bad)
pushf
adc
jecxz
out
loopne
jp
int3
mov
mov
push
jnp
push
push
xlat
xor
sbb
in
lods
xchg
mul
aas
rol
dec
iret
(bad)
jge
stc
arpl
xchg
rol
rol
(bad)
xor
dec
push
(bad)
mov
jo
dec
cmp
pop
dec
add
jmp
sahf
scas
js
dec
push
jge
daa
mov
in
stos
das
in
cs
push
imul
stc
(bad)
fist
pop
gs
mov
mov
dec
ss
clc
pop
add
jnp
cmps
push
(bad)
sub
add
cmp
or
xchg
iret
lahf
xchg
in
mov
ret
(bad)
dec
sub
pop
pop
mov
fist
and
inc
cdq
xor
cwde
xor
dec
nop
cmp
in
dec
int3
pop
in
mov
arpl
pop
inc
out
push
in
xchg
stos
data16
cmp
outs
and
adc
sub
inc
xchg
fild
repnz
popf
inc
icebp
mov
xor
(bad)
in
aaa
shl
inc
xchg
sub
cmp
mov
pop
pop
jbe
mov
xchg
xor
mov
lds
mov
fsubr
sub
mov
push
scas
sbb
mov
out
call
sbb
movs
or
mov
add
bound
je
jmp
shl
pop
adc
or
out
push
mov
xor
ficom
pushf
add
xchg
psrad
sub
pop
xchg
and
pop
ins
out
pop
dec
dec
jns
adc
mov
cwde
jp
jl
jecxz
fcomip
or
imul
addr16
jl
into
push
psubusb
jmp
mov
in
and
xor
xchg
loope
lahf
(bad)
ja
adc
ret
cmps
mov
hlt
sub
pop
sbb
adc
loop
fs
mov
cmp
pop
jl
ja
lds
xor
add
lock
mov
ret
fs
sub
mov
aas
or
in
pop
je
adc
mov
jnp
cmp
mov
mov
stos
jae
dec
sbb
pop
mov
inc
push
pop
ffree
xor
mov
out
sub
gs
and
adc
jae
push
inc
sub
(bad)
cwde
cs
mov
jmp
mov
inc
(bad)
sbb
push
cmp
jecxz
mov
test
and
adc
lahf
add
or
mov
test
test
push
lods
loopne
cmc
iret
cmp
adc
dec
inc
sbb
mov
fcmovb
pop
jge
jb
(bad)
xchg
mov
loope
out
stos
mov
push
hlt
dec
mov
mov
stos
popf
fcmovnb
pop
movs
mov
push
push
sub
cmps
dec
ficom
pop
xchg
fcomp
test
adc
les
push
cmp
rol
ins
pusha
in
jl
pop
scas
fldcw
jle
add
pop
inc
xchg
js
cmc
movs
mov
dec
addr16
xor
inc
sbb
xchg
jns
jmp
xchg
in
xor
and
mov
int3
xlat
push
retf
pop
push
or
arpl
pop
jmp
bound
(bad)
or
cmps
retf
in
ret
mov
push
jnp
cmp
jmp
mov
cmp
lods
pop
mov
call
ror
and
sar
sub
push
or
pop
sub
pop
sub
mov
jne
and
stos
push
inc
js
inc
mov
adc
rol
sub
movs
and
ins
add
ins
out
mov
gs
and
add
pop
push
pop
sahf
shl
popf
enter
pop
pop
pop
bound
inc
jnp
dec
adc
sbb
sbb
pop
lods
mov
fdivr
mov
mov
outs
push
ja
clc
xchg
sbb
jo
mov
mov
cmove
cmp
xor
rcl
jno
fcom
xchg
aam
out
inc
mov
stos
test
push
idiv
mov
mov
add
adc
cld
xor
rcr
imul
adc
jp
sahf
xchg
sub
stos
(bad)
xchg
sub
js
push
push
outs
push
hlt
hlt
pop
repz
imul
fist
cmp
out
xchg
adc
arpl
sar
(bad)
and
(bad)
jle
sub
ins
mov
cmp
loope
mov
aaa
cdq
aaa
or
pop
fidiv
scas
mov
and
jnp
cmp
inc
in
pop
sar
jecxz
sahf
sbb
dec
das
mov
mov
and
xchg
test
jmp
push
scas
outs
mov
or
fist
sahf
sub
in
sub
leave
das
inc
xor
mov
cli
das
mov
(bad)
cmps
xor
ins
mov
lea
mov
lods
mov
xchg
sbb
mov
xchg
mov
sbb
add
jns
xor
xchg
iret
loop
or
mov
mov
mov
ss
movs
scas
stc
cdq
in
gs
and
test
or
repz
std
push
loope
imul
mov
sub
iret
fwait
(bad)
mov
dec
rcr
inc
mov
mov
aam
lods
cdq
out
imul
jae
mov
fs
stos
or
jmp
add
stc
imul
pop
mov
sub
cdq
cmp
ins
mov
jns
outs
jge
cmp
mov
sbb
mov
mov
pop
aam
add
mov
xchg
outs
aas
push
in
movs
jne
ror
clc
jle
retf
and
(bad)
out
push
retf
mov
loope
fcom
fidivr
outs
inc
shl
mov
push
jbe
xor
ror
xor
adc
hlt
stc
pop
xchg
pop
into
mov
sub
add
pusha
mov
ja
stos
nop
mov
into
sti
or
cmps
loop
popf
out
inc
nop
sbb
fstp
jl
addr16
pusha
mov
aas
adc
adc
pop
cmp
loopne
not
push
dec
test
sub
xchg
out
pop
cmps
pop
jmp
push
jns
retf
cmps
bound
dec
aaa
call
cmps
mov
les
movs
push
aam
scas
cmp
push
jp
mov
(bad)
pop
rep
push
mov
gs
mov
mov
movs
sbb
and
ret
ret
shr
or
in
mov
pop
sbb
rol
mov
(bad)
sbb
hlt
les
push
aad
mov
and
fs
xchg
sbb
popf
aad
into
lods
daa
cmps
and
jle
mov
add
rcr
adc
xchg
fst
cmp
or
mov
push
jbe
leave
xchg
rep
xor
mov
inc
popf
inc
sbb
inc
adc
cli
xor
cwde
or
(bad)
les
jmp
lock
mov
fcom
test
add
xchg
loopne
sbb
sub
sub
sbb
sub
push
fimul
dec
mov
pop
push
cmp
pop
loope
(bad)
mov
cli
mov
mov
push
push
pushf
jmp
into
mov
and
adc
pop
addr16
jg
icebp
jnp
dec
cwde
xchg
(bad)
lahf
inc
xchg
lods
xchg
dec
int
or
stc
cmp
cmp
daa
and
dec
in
push
hlt
ret
mov
jecxz
test
iret
mov
aaa
repnz
jl
cmp
mov
data16
icebp
in
enter
push
add
cmps
lods
sub
dec
add
pop
das
inc
popf
fst
add
and
mov
inc
bound
in
sub
xor
mov
jae
inc
div
stos
sbb
scas
push
cmp
mov
fadd
sbb
add
mov
mov
jns
dec
mov
fstp
push
push
cmps
rol
popf
pop
call
(bad)
call
cmc
rol
or
fisubr
aad
jae
out
jns
xchg
mov
inc
push
dec
mov
dec
xchg
loopne
imul
pop
mov
dec
lea
enter
aad
aad
push
xor
dec
dec
adc
push
aaa
pop
add
add
leave
js
push
js
loop
scas
mov
pop
inc
pop
push
jbe
imul
push
std
and
push
xchg
xchg
cmps
xchg
lahf
push
push
cmc
(bad)
std
mov
les
add
and
ficomp
xchg
adc
out
iret
push
sar
jo
aam
pop
xchg
dec
bound
ja
mov
test
dec
shr
ret
or
jle
shl
scas
mov
imul
inc
call
je
jg
ss
cmps
adc
and
cmp
(bad)
push
sub
loopne
mov
adc
test
adc
mov
dec
dec
or
xchg
(bad)
aad
and
ins
cmps
test
mov
dec
cli
jne
pop
mov
dec
mov
movs
ds
ror
pop
loopne
jo
xchg
push
pop
push
dec
mov
lahf
ins
mov
mov
mov
(bad)
int
pop
and
push
test
inc
push
jb
out
jge
imul
std
shl
sbb
sub
clc
cli
pop
rcl
inc
jbe
into
in
jno
inc
out
mov
gs
shl
ins
jp
mov
cmp
std
mov
fadd
push
or
fisubr
add
repnz
pop
mov
sub
fsubp
retf
int
xchg
popa
jle
push
or
inc
lds
sbb
out
dec
fstp
std
int3
mov
in
dec
add
retf
jb
adc
sti
pop
call
mov
arpl
dec
mov
and
das
out
mov
adc
cmps
stos
movs
add
in
xor
movs
jg
je
dec
popf
push
movs
test
mov
xchg
repnz
mov
xchg
cmc
xchg
mov
fbld
sbb
jae
adc
(bad)
iret
jne
pop
bt
cmp
xchg
arpl
pop
mov
cmp
push
jb
les
inc
fnsave
push
es
push
retw
adc
fist
xor
ins
dec
mov
neg
vrsqrtss
jmp
fisttp
call
jg
mov
push
lods
mov
imul
add
jno
jo
test
out
outs
(bad)
rol
mov
add
cmp
adc
outs
push
hlt
sbb
xchg
(bad)
cmp
sti
clc
sub
out
sbb
and
mov
mov
xlat
xchg
ss
pop
stos
leave
rol
movs
aam
pop
jbe
sar
jmp
lods
jbe
mov
int3
rcr
push
mov
and
inc
enter
cmp
add
lods
dec
lds
mov
gs
lds
std
std
sub
or
dec
xchg
mov
xor
ins
popf
(bad)
fnstenv
call
loopne
and
pusha
loopne
and
cld
loopne
loope
xor
(bad)
(bad)
fidiv
imul
fwait
push
or
mov
cmp
push
fistp
cwde
retf
or
jmp
inc
adc
push
jo
out
jp
cwde
retf
cmps
movs
scas
jno
not
pop
sti
mov
mov
test
(bad)
aad
mov
inc
inc
mov
frstor
(bad)
push
adc
fld
sub
sbb
clc
jge
cs
pop
mov
lahf
mov
and
mov
mov
fistp
mov
imul
mov
(bad)
or
out
jmp
xchg
push
nop
pop
cwde
scas
fld
mov
imul
ja
or
xor
lahf
iret
push
sbb
cli
cmps
cmp
rol
lods
(bad)
push
into
xchg
xchg
adc
jmp
sub
in
dec
mov
sub
push
mov
pushf
sbb
cmc
es
and
fcmovne
out
mov
xor
retf
cmp
cmps
sub
jecxz
or
outs
fs
add
lods
icebp
cmp
cmp
push
shr
pop
dec
pop
inc
stos
push
stc
jnp
(bad)
dec
dec
out
rcr
jns
inc
xor
shl
and
adc
mov
add
iret
(bad)
sbb
push
push
test
pop
leave
push
cmp
outs
pushf
idiv
icebp
es
xchg
mov
ror
ins
sub
or
xlat
pop
xchg
and
pop
cmp
ds
fmul
inc
movs
mov
bound
in
mov
pmulhuw
mov
movs
es
es
cmp
mov
jle
(bad)
ins
mov
sbb
xchg
loope
cmc
inc
xlat
imul
rcl
retf
inc
add
mov
popa
jmp
cmp
std
sti
mov
push
jns
add
hlt
mov
xchg
jns
mov
fcom
pop
and
jecxz
mov
push
or
nop
int3
std
sbb
push
scas
jmp
mov
loop
inc
pushf
pushf
iretw
mov
push
pop
fstp
mov
ret
std
push
sub
push
jnp
cmps
cs
or
xor
mov
rcr
xor
mov
xor
not
retf
pop
test
shl
adc
or
cmp
xchg
mov
pop
mov
fwait
repz
push
or
inc
jmp
push
js
pop
cmc
lea
test
dec
push
and
icebp
mov
xchg
jnp
mov
out
std
call
stos
push
cmp
sbb
dec
cwde
dec
inc
gs
xlat
xchg
movs
std
push
and
test
(bad)
adc
or
outs
and
push
lock
shl
ds
jno
js
inc
addr16
mov
add
add
hlt
mov
push
stc
mov
out
jno
inc
mov
adc
into
sbb
stos
push
das
push
dec
mov
arpl
xchg
out
inc
add
sub
ins
add
int3
int3
cmp
ret
imul
enter
out
ins
lock
add
mov
push
adc
inc
mov
stos
dec
push
in
dec
dec
xor
push
mov
jae
add
xchg
dec
dec
jno
sbb
dec
cmp
lahf
lds
sahf
in
or
dec
sbb
pop
or
test
ins
xchg
push
mov
loop
(bad)
sub
mov
jecxz
test
scas
dec
jecxz
icebp
daa
out
and
sbb
sbb
leave
jo
push
mov
mov
mov
ror
dec
add
and
or
dec
cdq
sub
scas
jl
jbe
push
ds
xor
mov
loopne
inc
xchg
sub
fwait
mov
or
dec
inc
push
clc
push
fistp
dec
sub
add
cmp
test
add
mov
sub
add
add
out
sub
iret
fidiv
dec
mov
(bad)
pop
(bad)
sub
sbb
add
aam
fild
ins
push
mov
fs
loopne
mov
movs
adc
gs
push
(bad)
push
sub
mov
ret
ds
fstp
dec
call
movs
ins
popa
mov
mov
ret
xchg
jecxz
push
xor
mov
bound
pop
mov
cdq
mov
adc
mov
xor
test
out
lock
(bad)
cdq
call
dec
imul
mov
in
jo
and
xor
(bad)
xor
xor
and
or
in
sub
xchg
out
push
outs
repnz
and
xor
xchg
jle
mov
jns
outs
add
sahf
or
das
push
sub
cmp
imul
sub
arpl
sub
pop
mov
hlt
leave
jns
and
es
stos
int3
jmp
je
and
mov
or
push
xor
pop
jp
(bad)
lock
ins
in
call
inc
pop
daa
xchg
lds
cli
stos
xor
loop
lods
cmp
dec
cli
sbb
push
pusha
mov
stc
inc
popa
aad
adc
xchg
mul
push
adc
adc
pusha
mov
mov
pop
js
jmp
jmp
push
(bad)
jl
inc
out
adc
int
xchg
sbb
jp
stos
shl
repz
(bad)
movs
push
std
iret
xchg
push
lock
mov
lods
adc
nop
sti
jb
data16
loopne
jbe
mov
sub
cs
dec
sbb
cmp
fcos
fstp
fldenv
mov
pop
js
xor
scas
ja
leave
jge
push
sbb
adc
popf
shr
test
sbb
test
jl
push
out
mov
sbb
lahf
pushf
push
cmp
adc
mov
xor
dec
sbb
mov
add
ficom
pushf
(bad)
mov
push
xor
pop
sub
hlt
cmp
push
jb
jae
fisttp
push
ret
dec
sbb
cmp
(bad)
in
xor
dec
jecxz
int
sub
jae
xchg
bnd
xchg
mov
sub
cli
fidivr
xchg
inc
push
mov
aas
jno
inc
aam
pop
std
fisub
out
ins
adc
sub
xor
mov
push
popf
add
in
(bad)
add
push
sub
mov
or
stos
sbb
mov
inc
push
stos
in
(bad)
dec
push
pushf
mov
mov
mov
ds
cmp
cli
push
sbb
fsub
cmp
pop
mov
xchg
mov
push
adc
inc
jno
call
pop
aad
push
jmp
inc
(bad)
out
fiadd
inc
cmps
dec
pop
clc
retf
in
(bad)
rol
retf
loope
inc
dec
push
neg
arpl
fisttp
pop
adc
sub
in
mov
mov
ret
mov
popf
or
pop
call
popa
xchg
imul
pop
scas
cmc
test
push
mov
daa
dec
push
push
fdivr
add
inc
add
adc
retf
sar
fidivr
sub
(bad)
mov
dec
cmps
(bad)
cs
push
cmp
inc
mov
ins
pusha
xchg
jne
add
cwde
sub
sbb
sbb
jecxz
loopne
movs
dec
nop
cmp
shl
xor
arpl
adc
shl
mov
sahf
(bad)
mov
jno
jle
sbb
jnp
mov
std
mov
jle
shl
push
cdq
fxam
and
stos
(bad)
mov
push
cld
lea
nop
iret
out
inc
or
inc
add
mov
jb
push
jp
sbb
cmps
mov
sbb
mov
std
push
cld
push
loope
push
retf
lods
mov
(bad)
or
mov
shl
push
arpl
and
xchg
mov
dec
xchg
ins
dec
jb
shr
or
xor
jecxz
xchg
jp
hlt
icebp
push
pusha
cli
mov
out
mov
inc
push
cwde
or
in
jcxz
mov
add
xor
jmp
mov
repz
stos
lock
mov
mov
inc
sub
dec
ja
stos
jne
inc
cmp
shl
inc
popa
xchg
sub
je
xchg
sbb
mov
lahf
pop
cmp
pop
mov
rep
mov
sbb
mov
xor
adc
cli
dec
jnp
les
and
jne
and
bound
cvtdq2ps
test
mov
mov
add
mov
xchg
jbe
pop
nop
xor
xchg
xchg
mov
enter
fcmovnb
hlt
mov
outs
out
add
or
xor
and
xchg
pop
push
sar
int3
scas
or
ss
bound
imul
sub
push
jp
fisub
inc
xor
pop
mul
mov
not
adc
sbb
int3
js
je
and
xchg
inc
aaa
cmp
inc
dec
sub
xor
and
scas
movs
sub
xchg
adc
leave
sar
stos
retf
pop
cmp
xlat
rcl
jmp
test
adc
mov
and
mov
sbb
cmp
dec
pushf
cs
push
movs
jne
cmp
mov
cmp
pop
cld
cmps
pop
imul
sahf
sub
add
stos
retf
cli
cdq
retf
pusha
cwde
or
fild
sub
pop
xor
ja
cmps
sub
or
jb
dec
stc
or
mov
(bad)
sbb
xor
xchg
jp
jo
adc
sub
push
inc
pusha
sub
in
jno
mov
sbb
or
test
cmp
mov
popa
(bad)
stc
mov
dec
fldcw
arpl
cld
lock
mul
jae
(bad)
cmp
jno
sub
inc
fucomp
das
jae
push
mov
dec
or
js
iret
mov
push
jp
mov
jmp
ficom
cld
push
jp
push
pop
xchg
stos
mov
adc
(bad)
jmp
fs
xor
jb
test
je
mov
add
fiadd
sti
add
ficom
aam
aam
sbb
imul
loop
inc
test
stos
mov
sub
outs
or
dec
xchg
push
cmps
pop
xor
sbb
popa
push
rol
adc
ins
and
movs
xchg
ds
lods
cmp
sbb
add
mov
pop
cmps
popa
mov
push
xor
jb
mov
xor
xor
inc
push
div
cld
bound
and
dec
xor
adc
and
getsec
fstp
push
adc
popf
xlat
gs
mov
in
xchg
loope
and
mov
test
push
mov
stos
jg
pop
mov
push
nop
xor
and
mov
test
mov
into
mov
mov
dec
mov
mov
iret
iret
lods
popf
shl
cmp
hlt
dec
in
pop
fwait
add
pop
lea
fisub
lea
movs
jns
out
xchg
stc
test
fldenv
or
mov
adc
xchg
or
iret
aas
data16
or
cmp
push
imul
push
pusha
ins
jg
push
push
jg
clc
or
add
(bad)
(bad)
rcl
imul
or
mov
dec
lds
les
jle
sbb
ret
movlps
pop
fldcw
dec
call
jp
je
lds
mov
outs
xor
sbb
loop
(bad)
jmp
push
les
add
fstp
xlat
xchg
sbb
inc
xchg
scas
retf
bound
repnz
nop
cmp
fcomi
sub
fwait
aad
fsubr
mov
aad
or
push
pop
rcl
pop
push
cmp
cmc
inc
inc
leave
(bad)
jno
inc
cmps
lahf
lahf
repnz
imul
(bad)
pop
adc
test
or
inc
mov
push
push
push
and
hlt
pop
(bad)
mov
rol
ja
push
and
xchg
xor
inc
jg
xchg
pushf
(bad)
dec
dec
fwait
push
je
jne
xchg
sbb
popf
xor
nop
int3
xchg
lds
push
bound
into
xor
inc
imul
pop
daa
ret
fdiv
ja
add
fs
test
repnz
ja
mov
dec
int3
shl
jge
xor
xor
mov
hlt
cmps
and
push
push
dec
nop
mov
sbb
cmp
test
ja
inc
pusha
sbb
sbb
add
cld
fstp
(bad)
and
jmp
(bad)
(bad)
stos
stc
(bad)
into
adc
and
jmp
stos
jb
add
inc
push
int3
out
sahf
mov
daa
and
ins
scas
adc
aam
and
dec
xchg
pop
sub
mov
push
adc
xchg
fnstcw
dec
pop
push
jg
jbe
adc
add
push
cs
aaa
jmp
xchg
push
iret
dec
(bad)
sbb
mov
sub
sti
ss
fs
add
cld
xchg
fldenv
int
inc
dec
jmp
dec
cmp
dec
stc
sub
xchg
retf
pop
mov
adc
mov
sbb
adc
cmps
cmp
mov
loopne
stos
sub
stos
mov
aaa
mov
ins
push
nop
jp
and
cwde
adc
and
daa
pop
mov
jecxz
js
adc
sbb
dec
cmc
jo
dec
neg
retf
dec
mov
loopne
sar
mov
add
retf
aaa
sub
iret
mov
xor
lds
or
add
cmp
stc
nop
les
push
pop
int3
push
jns
and
les
xor
jmp
nop
jl
mov
mov
ds
add
jle
std
jns
out
daa
xor
dec
(bad)
mov
retf
cmp
inc
sti
retf
xor
aas
inc
jl
call
cmp
jmp
cmp
cmp
cwde
mov
movs
(bad)
or
cdq
inc
jle
ins
out
sub
addr16
xor
iret
inc
inc
retf
xor
int
into
sub
(bad)
jl
mov
loop
jmp
mov
ins
inc
outs
and
in
cmp
cmc
loop
sub
std
leave
xchg
mov
adc
stos
ins
xor
push
(bad)
sbb
sub
jge
push
pop
div
sbb
test
push
jbe
test
cdq
adc
fs
sbb
pop
outs
add
fadd
data16
pop
(bad)
pop
pushf
mov
xor
out
lahf
xchg
mov
jo
or
dec
fmul
jmp
inc
cmp
or
inc
ins
ds
mov
push
inc
test
sbb
xchg
outs
stc
out
push
mov
sbb
std
and
jge
push
inc
jmp
pcmpeqb
imul
movs
cld
pop
adc
mov
adc
mov
pop
or
outs
mov
push
ins
dec
icebp
xchg
mov
test
popf
sti
(bad)
push
dec
push
add
je
je
jmp
adc
test
push
(bad)
in
pop
xchg
jo
sub
nop
add
jg
dec
add
xchg
push
xor
mov
pop
pop
mov
pushf
enter
push
shr
push
jnp
push
outs
mov
pop
frstor
dec
aad
push
cmp
cmps
mov
add
std
repz
sbb
pop
jl
call
jmp
lock
ret
mov
pop
sar
(bad)
or
out
jno
(bad)
int3
push
ja
test
mov
(bad)
cmps
cli
lock
(bad)
out
hlt
enter
int
sbb
lahf
sbb
mov
stos
out
movs
push
push
xchg
shl
mov
sbb
enter
jmp
mov
mov
rcr
mov
pop
mov
add
inc
or
cmp
push
xor
test
add
ss
mov
inc
jmp
out
out
mov
les
mov
or
jb
pop
cmp
pop
sbb
jno
xor
or
neg
(bad)
in
js
pop
xor
inc
xor
scas
pop
mov
mov
push
scas
sbb
push
aad
inc
push
push
arpl
repz
mov
pop
inc
inc
mov
jp
sbb
inc
aaa
out
push
xor
out
pop
ror
and
fdiv
aas
mov
jns
inc
mov
xchg
enter
push
jbe
lods
inc
xchg
fist
push
movs
lods
push
ins
and
pop
fcom
je
jns
retf
imul
jo
icebp
stos
cli
pushf
jno
test
sub
mov
dec
sbb
jae
cwde
and
cli
cmps
popa
das
push
std
inc
lds
or
dec
daa
mov
xor
jg
loopne
mov
ds
add
loope
pusha
xchg
rol
jae
aam
fwait
jo
into
(bad)
ins
jecxz
inc
(bad)
xor
and
cwde
mov
loope
xor
jg
dec
mov
fs
push
push
lahf
dec
or
mov
mov
mov
in
xchg
mov
jge
xor
push
or
jne
add
push
leave
js
add
ficom
jecxz
nop
ret
fwait
stos
pop
or
inc
jo
shr
sbb
retf
es
fwait
test
(bad)
int3
stos
or
in
push
cmp
and
and
jns
(bad)
jmp
call
sbb
popf
pop
sbb
push
cmps
or
ret
test
icebp
xchg
in
inc
pop
pusha
call
inc
dec
or
loop
(bad)
loopne
add
sti
xor
mov
mov
and
cdq
popf
mov
pop
adc
repnz
sub
(bad)
outs
aaa
pop
jl
mov
mov
repz
call
inc
popf
sub
pop
(bad)
lods
mov
cdq
inc
push
sub
pop
mov
ficom
les
dec
mov
neg
jmp
pop
push
es
into
xchg
jbe
pop
pop
mov
(bad)
inc
xchg
and
push
cs
ret
adc
or
idiv
inc
push
out
clc
adc
aas
sub
mov
pop
sub
test
sbb
mov
pusha
lahf
sbb
mov
dec
pop
push
cwde
add
or
and
inc
das
mov
imul
dec
dec
cmp
add
repz
push
pop
stos
mov
add
xor
mov
imul
cmp
in
lea
and
mov
(bad)
loopne
sub
mov
iret
ficom
cdq
dec
inc
lds
sar
pop
pushf
pop
call
int
inc
mov
daa
xor
jmp
push
mov
outs
mov
mov
nop
or
(bad)
rol
repnz
jecxz
adc
push
cli
sbb
mov
div
and
xor
mov
sbb
fst
and
xor
jo
inc
pop
in
jne
xchg
loop
in
add
inc
movs
adc
mov
stos
cdq
cmp
or
icebp
arpl
inc
sbb
ins
push
das
sub
inc
mov
mov
mov
or
push
fs
jns
pushf
pushf
sub
or
aaa
xchg
sub
mov
sub
xchg
mov
and
test
dec
outs
sbb
neg
add
sbb
popf
shl
int
hlt
rcl
sub
inc
test
inc
mov
leave
clc
rcr
adc
adc
push
jge
loope
in
cdq
mov
jmp
and
mov
imul
out
jbe
pushf
push
xor
mov
push
out
cmp
sbb
cmp
daa
cwde
js
arpl
imul
outs
xlat
mov
cli
popa
stos
retf
(bad)
repz
add
mov
test
(bad)
loop
pop
pop
adc
jb
mov
push
mov
sti
mov
xor
adc
(bad)
sbb
(bad)
(bad)
jmp
cmc
jecxz
enter
outs
add
shl
add
jge
or
mov
test
dec
aaa
push
stos
xchg
xor
adc
int3
sub
jns
add
mov
bound
rol
jno
loopne
mov
pop
mov
mov
mov
stos
mov
mov
add
imul
rcl
xor
add
inc
inc
cli
jp
dec
sbb
sub
push
mov
push
movs
int3
inc
scas
xchg
loopne
add
xor
lods
mov
cmps
fdivr
outs
leave
ja
jl
cmp
pusha
jg
mov
mov
clc
lock
xchg
add
push
pop
cmp
stos
(bad)
div
repnz
shl
dec
ja
int
ret
out
std
mov
icebp
sub
jae
cmps
pop
movs
mov
and
fiadd
test
add
ffree
iret
adc
and
push
mov
sahf
mov
add
adc
(bad)
inc
push
add
sub
inc
xchg
sbb
inc
scas
push
(bad)
adc
or
pop
fsub
add
shr
and
and
repz
fwait
push
or
lods
sub
stos
adc
cmps
adc
push
lds
add
sub
lods
pop
pusha
imul
push
xor
stc
ins
lods
fdivr
jecxz
push
fcomp
and
mov
xchg
mov
mov
movs
int
adc
push
xchg
cld
dec
fbld
cvttps2pi
jbe
mov
shl
pop
jo
leave
sbb
sub
add
movs
dec
mov
cwde
and
loope
xchg
adc
std
xchg
rcl
cmp
push
mov
js
(bad)
pushf
push
adc
push
sub
lds
xchg
xchg
(bad)
cmpps
dec
sti
sub
cmps
mov
jecxz
ret
jno
test
inc
(bad)
adc
int
xor
or
pushf
(bad)
or
mov
das
lods
cmp
push
in
aam
mov
aaa
push
(bad)
out
sub
loop
add
(bad)
retf
jno
push
inc
adc
adc
pop
shr
(bad)
or
or
xchg
fwait
jp
jecxz
fiadd
push
mov
jmp
sbb
pop
jle
(bad)
sbb
sbb
cwde
cwd
pop
les
out
mov
sbb
mov
push
call
cmp
rol
mov
cs
in
add
xchg
test
outs
pop
stos
pop
test
pusha
and
les
cmps
ss
jno
icebp
enter
jo
jmp
add
rcr
lahf
and
jnp
adc
aam
pop
push
jl
jbe
clc
or
dec
sar
and
in
sbb
mov
inc
jmp
movs
inc
xor
xor
popa
mov
dec
mov
mov
outs
daa
int3
mov
xlat
add
dec
aam
cld
ret
push
mov
dec
jo
(bad)
das
or
pop
xor
mov
cs
stos
or
js
test
ins
das
shl
adc
into
outs
dec
movs
mov
add
lahf
gs
mov
sub
or
jge
imul
or
xor
sub
(bad)
jl
es
icebp
mov
cmp
rcl
or
mov
xchg
hlt
popa
mov
scas
push
hlt
fwait
aas
nop
add
pop
and
push
hlt
jp
xchg
test
mov
sar
push
shl
push
leave
shr
mov
dec
and
(bad)
int
mov
and
mov
test
rsqrtps
icebp
imul
aas
lods
aam
dec
mov
jb
dec
mov
sar
add
jbe
cdq
push
jg
sbb
mov
mov
mov
jae
cmp
cmp
xchg
lds
ds
fwait
add
imul
fild
pop
mov
pop
push
push
dec
xor
mov
das
inc
bound
xor
clc
mov
cmps
pop
ret
xchg
je
adc
xor
(bad)
out
xor
push
ds
xchg
jmp
in
aas
inc
test
in
or
push
ins
in
and
popf
cld
dec
push
lock
in
sbb
dec
sub
call
jmp
mov
push
xchg
jne
adc
cmp
mov
addr16
sbb
loop
pop
dec
fcmovnbe
adc
ret
xchg
icebp
movs
add
test
mov
or
cmp
or
ja
and
arpl
sbb
sbb
mov
jo
dec
jmp
xor
jp
bound
outs
mov
icebp
pop
and
js
lods
mov
out
pop
je
fldcw
repz
ret
fiadd
ret
xlat
pop
cmova
or
adc
icebp
xor
mov
jmp
inc
mov
mov
inc
push
leave
sbb
adc
mov
dec
shl
aad
or
pop
adc
push
adc
lahf
mov
push
dec
out
jae
push
jecxz
enter
arpl
fxch
mov
mov
gs
pop
mov
adc
adc
xor
jle
lds
fbstp
fst
fcom
sti
repnz
sbb
inc
int3
not
int
lods
mov
mov
xor
ret
fnstenv
mov
mov
les
lds
fcom
sub
jnp
lods
(bad)
xchg
adc
ret
arpl
xor
dec
outs
inc
adc
inc
psraw
add
aad
fs
add
cli
hlt
ss
fld
in
add
sar
mov
retf
dec
imul
fld
rol
leave
sub
cmp
sbb
shl
or
iret
jle
jge
sahf
jl
jae
mov
fsub
push
jno
sahf
pop
xchg
fimul
or
and
test
test
scas
mov
mov
pop
test
pusha
and
fdivr
dec
xor
push
or
or
adc
test
ss
pop
mov
outs
and
pop
imul
out
iret
test
aas
inc
push
xor
add
dec
inc
mov
jo
dec
out
mov
es
inc
push
(bad)
cmp
movs
lock
inc
(bad)
jg
(bad)
stos
xchg
push
stos
xlat
push
sahf
scas
and
into
jno
stc
icebp
inc
jmp
in
ins
(bad)
mov
adc
rcl
mov
xor
enter
xchg
(bad)
(bad)
pop
jmp
jp
pop
rol
dec
mov
ds
call
loope
cmc
lods
(bad)
cmps
mov
lock
aad
add
jp
sbb
hlt
fdivr
dec
inc
shl
push
mov
dec
jno
xlat
call
or
stos
imul
ficom
icebp
pop
cmps
int
popa
mov
add
xor
lds
mov
enter
imul
push
or
add
xchg
inc
cs
xor
xor
daa
ins
adc
ins
or
mov
cmp
fld
mov
ja
mov
dec
pusha
sbb
bound
pushf
out
in
in
jno
push
inc
adc
bts
jge
loope
xchg
ret
sbb
xor
clc
jno
mov
popa
sbb
jnp
push
jmp
es
fwait
icebp
shl
cli
mov
leave
jmp
add
mov
shl
mov
adc
int
jns
xchg
adc
mov
mov
fstp
adc
mov
jno
test
imul
daa
push
push
dec
jae
cmps
cs
mov
mul
jb
mov
outs
cmp
xchg
jbe
push
pop
ret
jae
(bad)
dec
cmp
jb
pop
stos
adc
sub
(bad)
arpl
push
fild
cli
xor
and
inc
fbld
adc
mov
or
dec
or
push
(bad)
lock
dec
dec
loope
rol
cmps
call
cld
je
dec
cld
call
sbb
loop
cld
adc
inc
jp
(bad)
es
dec
pop
repnz
leave
ror
xor
fidiv
mov
sub
xchg
jecxz
iret
inc
movs
std
cld
dec
call
imul
mov
mov
neg
test
jl
imul
inc
cmps
jmp
mov
inc
pop
jmp
lods
jp
or
mov
js
jne
dec
add
mov
or
push
rol
xchg
pop
cmp
sar
dec
xchg
jl
xor
cmp
mov
ins
adc
stos
add
retf
cdq
mov
cmps
inc
call
mov
fwait
hlt
imul
outs
movs
add
and
sub
pop
push
test
mov
pusha
xor
adc
or
mov
fnsave
int
pop
mov
jns
or
movs
jp
cmp
nop
dec
loop
or
retf
cmc
icebp
in
mov
jb
scas
jmp
push
mov
sar
mov
sub
retf
das
or
xchg
push
add
sahf
jnp
aam
fldl2t
out
jns
mov
ror
or
leave
jae
add
inc
loop
mov
test
popf
sub
or
retf
je
cmp
setno
in
jne
sahf
sub
pop
pop
xor
fwait
xchg
push
xchg
mov
addps
jb
loope
test
mov
xchg
cmp
and
rcl
lods
and
int3
pop
sti
jo
mov
mov
xchg
inc
movs
fnstsw
jno
lods
call
dec
sar
and
into
mov
push
adc
adc
jno
imul
mov
test
xlat
fmul
lods
gs
hlt
mov
adc
ins
arpl
retf
add
imul
add
or
push
push
xchg
push
jno
call
cmp
dec
inc
ret
out
into
inc
add
fisttp
(bad)
xchg
jmp
pop
jb
pop
xchg
pop
mov
pop
rcl
mov
mov
or
or
jno
jmp
imul
(bad)
pop
repnz
and
in
sahf
cmp
cld
xlat
js
out
ret
pop
mov
lea
out
repnz
and
and
cmp
jle
outs
fbstp
test
stc
xor
retf
jae
push
mov
add
cmp
sub
sub
out
jns
pop
jecxz
addr16
daa
pop
(bad)
sub
mov
xchg
lock
mov
pop
pop
push
sub
adc
mov
fisub
(bad)
arpl
dec
jg
mov
jp
and
add
movs
ins
mov
es
aad
push
adc
in
xchg
ror
ret
mov
or
scas
fcom
xchg
outs
addr16
inc
mov
mov
xor
pop
and
mov
or
ss
mov
inc
push
ror
jmp
mov
arpl
or
jno
outs
and
fld
cdq
add
dec
push
pushf
imul
push
and
sub
pop
mov
or
xchg
inc
(bad)
jo
in
movs
lods
mov
or
pop
inc
popf
mov
adc
mov
push
out
and
sbb
pop
mov
idiv
and
or
inc
xor
pop
leave
data16
dec
pop
push
lds
adc
pop
iret
test
shl
sub
scas
out
and
test
pop
xchg
pop
or
sbb
adc
jp
in
mov
push
push
or
jle
xchg
xchg
fwait
ins
out
pop
imul
loope
sbb
ret
icebp
push
and
mov
mov
test
inc
ss
iret
aad
mov
(bad)
lock
mov
add
inc
jb
fs
cmp
sti
fsubr
push
cwde
mov
cmovno
xor
mov
adc
pusha
shl
in
popa
pop
inc
fcom
mov
jae
dec
cmp
not
push
scas
int3
xor
cmp
xchg
shl
ds
sbb
mov
mov
loope
jmp
or
fcom
adc
or
cli
and
fcmovnbe
in
data16
ins
and
adc
mov
dec
mov
mov
cmp
jnp
retf
fcomp
(bad)
mov
hlt
push
cld
les
iret
movs
pop
adc
push
into
xchg
mov
cdq
mov
dec
inc
(bad)
cdq
mov
adc
jge
sbb
arpl
test
xor
out
lds
mov
and
pop
sbb
pop
fldenv
rol
stos
dec
out
jno
xlat
push
push
and
pop
mov
and
or
fidiv
add
xor
sub
add
int3
cmp
xchg
add
push
add
xor
push
mov
js
mov
push
rcl
jne
jmp
sub
clc
push
test
mov
das
push
out
repz
clc
push
aam
movs
push
xor
repz
mov
jne
or
fwait
xchg
es
mov
call
or
cmp
pop
xor
add
dec
or
jl
test
clc
push
adc
pop
es
pop
cmp
mov
cmc
and
or
sbb
and
add
fwait
clc
push
push
and
and
push
out
int
js
xor
jnp
into
pop
dec
enter
pop
(bad)
xchg
xchg
sub
or
icebp
sub
aam
dec
or
and
jecxz
xor
cdq
les
sub
xchg
test
jae
scas
imul
pop
sbb
inc
in
mov
push
fcomi
call
fidivr
sub
push
or
(bad)
popf
jp
adc
pop
xor
mov
mov
les
jmp
and
ds
jecxz
or
xchg
sub
outs
add
cs
mov
inc
xchg
xor
xor
aas
fnsave
cmc
xchg
mov
lods
inc
inc
inc
out
sbb
xchg
inc
push
jne
das
icebp
inc
rcl
or
push
xchg
aad
fidiv
fwait
push
sub
and
xor
jnp
and
lahf
jle
mov
push
adc
add
(bad)
pop
push
lahf
inc
mov
call
inc
mov
dec
add
xlat
retf
pop
sbb
add
push
enter
mov
in
aaa
fdivr
test
dec
cli
in
pop
retf
jp
shl
dec
out
inc
mov
mov
mov
xchg
jecxz
push
cmp
sbb
(bad)
xor
movs
outs
das
mov
push
in
icebp
repnz
outs
cdq
xlat
pusha
les
sbb
xor
push
push
or
jl
sahf
jne
(bad)
xlat
mov
mov
mov
neg
pop
ds
(bad)
jnp
sti
rol
jmp
sbb
mov
retf
cmp
xchg
out
sub
test
pop
aaa
cmp
popa
mov
and
sahf
xchg
mov
gs
call
push
aaa
(bad)
mov
pop
jge
je
gs
loop
xchg
inc
ds
sub
jo
pop
pusha
fwait
cld
scas
or
push
lods
mov
mov
call
or
add
ins
jl
or
and
jb
xchg
add
(bad)
mov
and
cmps
push
out
sbb
ss
mov
mov
pop
add
inc
push
les
rcl
xchg
out
mov
scas
adc
js
fs
sahf
out
sahf
push
or
mov
cs
or
call
push
adc
pop
push
add
xlat
cmp
mov
in
add
mov
or
outs
pop
lods
pop
cmps
mov
cmp
aaa
sbb
or
sbb
inc
sub
aad
add
pop
add
pop
mov
mov
enter
jno
xor
daa
or
xor
test
add
cmp
mov
scas
popf
inc
aam
push
cld
in
hlt
sub
inc
inc
out
cmp
mov
fcomi
dec
cs
inc
(bad)
pop
mov
outs
pushf
jns
inc
nop
sbb
stos
adc
adc
xchg
mov
jnp
fdivrp
jp
sahf
dec
jbe
div
mov
hlt
push
mov
adc
jl
fild
sbb
jo
mov
xlat
and
inc
jo
mov
hlt
stos
outs
add
dec
cli
mov
cmp
xor
ret
stc
ins
mov
mov
mov
adc
xchg
or
cmp
retf
and
jp
out
mov
cmp
ret
(bad)
xchg
adc
push
scas
inc
fldenv
lds
cmp
fsub
out
cs
adc
stos
xor
sahf
(bad)
cmp
mov
invd
inc
mov
outs
inc
jne
cmp
mov
pop
push
jmp
mov
xchg
shr
cli
in
push
mov
mov
mov
jno
and
shl
cld
xchg
(bad)
aam
xchg
mov
and
les
mov
pminub
sub
lods
(bad)
call
aam
cmp
fld
ror
sbb
sbb
mov
loop
dec
mov
jle
das
leave
sbb
out
pop
fxch
dec
es
and
xchg
mov
pop
rol
jb
imul
push
inc
cmc
mov
inc
jae
or
(bad)
lock
test
sti
sub
inc
in
lds
aam
(bad)
in
leave
imul
push
mov
arpl
dec
mov
jge
xchg
sub
popf
sbb
cmps
lea
or
sbb
out
test
fdiv
push
repz
pop
xchg
and
push
int
cmp
sub
jo
xor
jo
test
fwait
mov
mov
mov
xlat
pusha
into
dec
ja
xchg
cmc
add
mov
jecxz
dec
adc
cmp
cld
(bad)
mov
clc
push
lahf
pop
sbb
ror
popa
mov
retf
sub
outs
xor
inc
pop
mov
or
mov
hlt
fstp
push
popa
adc
sbb
or
sar
ins
mov
(bad)
test
imul
xor
call
pop
or
outs
movs
pop
and
stos
jmp
sbb
imul
push
pop
lds
lods
inc
lods
std
data16
pop
xchg
push
gs
cli
(bad)
jmp
pop
xchg
cmp
ins
xchg
mov
jle
push
push
mov
ficom
aas
dec
out
and
push
stc
arpl
sub
mov
push
push
or
jne
cmp
inc
mov
push
(bad)
sbb
add
jl
push
ins
push
jecxz
xchg
cmps
xlat
sub
repz
push
mov
stos
ror
push
jb
inc
mov
pop
mov
pop
fdivr
(bad)
xchg
mov
push
(bad)
pop
lods
stc
hlt
rol
and
stos
leave
sti
cdq
push
aas
(bad)
fadd
jne
inc
add
add
pop
ss
push
and
mov
pusha
mov
cmp
push
lods
ss
adc
lahf
shl
and
ror
rol
cmp
out
shl
jb
setp
mov
aad
fadd
jmp
push
(bad)
mov
dec
(bad)
mov
mov
dec
push
test
xchg
and
jne
call
shl
call
dec
or
adc
mul
pop
mov
mov
inc
fwait
dec
loopne
jo
xor
adc
stos
and
test
push
xchg
cs
addr16
or
mov
(bad)
jo
xor
jg
sti
cld
mov
fcmove
sbb
ds
add
pop
test
pusha
dec
je
adc
test
pop
inc
ror
mov
sbb
push
cmp
hlt
jnp
icebp
aaa
inc
xor
test
stos
push
mov
add
add
in
scas
ret
mov
lods
fcom
cmp
out
in
(bad)
retf
and
dec
in
lds
xor
jl
ins
ja
frstor
je
out
cmp
cld
scas
lds
mov
jne
out
outs
and
mov
setp
fdivr
push
xor
div
lods
or
push
fwait
inc
or
lds
inc
pop
in
adc
mov
mov
test
popa
jg
sbb
cmp
sbb
out
cdq
jno
fs
inc
adc
in
ins
push
inc
xchg
sbb
cmp
test
repnz
(bad)
arpl
add
push
inc
fild
add
xchg
xchg
jae
ja
sti
inc
push
cs
dec
jnp
jbe
in
into
mov
mov
shl
or
pop
scas
stos
test
test
pusha
ret
fild
inc
das
push
stos
sbb
mov
jmp
repz
sub
hlt
mov
cwde
jae
imul
(bad)
or
xor
lods
add
(bad)
push
mov
stc
imul
aas
mov
jp
and
pop
pushf
(bad)
push
mov
push
out
(bad)
(bad)
jo
xchg
pop
pop
sub
mov
add
cmc
fnstenv
fidiv
(bad)
(bad)
or
xchg
(bad)
je
adc
xchg
pop
adc
std
lods
(bad)
pop
cmp
xor
inc
push
gs
popf
ins
push
adc
jns
call
xchg
movs
mov
es
inc
jp
in
cmp
sub
add
fisubr
(bad)
xor
(bad)
lahf
or
clc
or
mov
ja
jle
fs
std
loope
xchg
pop
adc
pop
xchg
outs
ds
push
movs
or
out
push
sub
stc
push
(bad)
push
mov
call
adc
xchg
scas
xor
mov
xor
pop
adc
mov
int
mov
inc
popa
test
pop
(bad)
iret
sub
push
cwde
sub
in
or
ss
out
aam
jle
jp
popf
xchg
les
std
xchg
jg
in
or
and
fmul
dec
jp
jecxz
sbb
inc
adc
or
mov
ins
outs
sbb
(bad)
xor
push
mov
in
xor
sbb
repz
gs
test
pusha
sahf
shl
or
js
sahf
mov
inc
out
enter
mov
pop
mov
mov
mov
cli
mov
mov
xor
arpl
leave
arpl
shl
or
xchg
lods
jl
cwde
loope
data16
jae
mov
(bad)
shr
lock
in
js
pop
xor
pop
(bad)
push
in
jmp
cmp
pop
enter
bound
daa
lds
mov
sbb
cmp
push
lods
push
cmps
fnstenv
enter
mov
pop
scas
dec
in
outs
sbb
mov
cmps
xor
out
aam
add
mov
in
mov
jns
jl
pop
loope
movs
outs
add
repz
sbb
mov
stos
add
adc
sub
adc
or
scas
pop
mov
loopne
pop
fstp
jmp
push
aaa
cmc
in
or
lahf
in
xor
retf
imul
call
jmp
push
mov
sub
sub
push
jle
es
nop
adc
add
inc
push
jns
push
loop
pop
les
add
mov
in
xor
pop
fstp
retf
adc
fdivr
test
xchg
data16
int3
sub
(bad)
not
or
test
cmc
cmp
movs
dec
ror
out
repz
adc
xchg
rcl
mov
rcr
push
cmp
dec
and
add
fstp
in
adc
loope
xor
pop
in
jns
jns
movs
and
dec
cld
xor
xchg
adc
stc
mov
and
dec
gs
popf
in
xchg
jae
packsswb
data16
mov
sub
sub
jo
mov
dec
xor
or
ret
mov
push
push
lods
mov
push
rcr
es
mov
scas
shr
(bad)
add
lods
or
mov
ds
ins
lock
sub
push
push
jae
rcl
cmp
inc
cmps
adc
ret
jg
das
pop
call
shl
inc
aam
inc
retf
adc
xchg
gs
outs
loope
sbb
xchg
or
mov
xor
xor
lods
jl
push
sti
enter
and
shl
xor
pop
retf
xor
adc
inc
push
push
out
jne
(bad)
js
out
xor
push
(bad)
push
inc
push
adc
push
push
jb
jmp
stos
jecxz
jno
mov
retf
mov
test
bound
pop
aad
es
pop
nop
sbb
and
mov
add
dec
gs
out
rcl
dec
jl
inc
push
cmps
(bad)
fs
mov
clc
je
repz
mov
push
mov
xchg
inc
stos
movs
inc
cli
gs
add
adc
loop
int3
xchg
xchg
hlt
pop
jne
out
stos
jmp
std
sahf
lea
pop
mov
enter
sbb
lea
cmp
pop
gs
lock
add
dec
and
mov
dec
fiadd
xchg
outs
cmp
dec
dec
aad
xor
or
xchg
mov
sub
dec
jnp
movs
xchg
call
xor
inc
xchg
jo
(bad)
pop
pop
jnp
lock
sbb
sar
dec
jp
in
cmp
lods
ins
and
neg
xor
rcl
add
fs
gs
pop
jge
dec
popf
ret
rcl
xor
xor
jmp
sub
lahf
xor
add
outs
(bad)
sti
mov
imul
cdq
ins
sbb
xchg
imul
(bad)
jmp
add
lock
ffree
out
or
int
xor
rcl
adc
dec
xchg
mov
push
xchg
cmp
sbb
movs
xchg
push
xlat
cs
mov
arpl
dec
aad
dec
mov
dec
mov
scas
pop
test
mov
imul
(bad)
cmp
frstor
mov
mov
ret
test
xchg
movs
jno
cmp
int3
cmps
pop
adc
lods
stc
cs
out
sub
xor
in
and
lods
ror
push
ror
jno
cmp
adc
adc
or
pop
push
jno
dec
xor
pop
pushf
sub
cmp
add
rol
pushf
mov
pop
jno
loope
sub
mov
lods
adc
mov
fdivr
push
mov
cmp
retf
loop
mov
in
(bad)
jns
pop
test
dec
xchg
and
pop
mov
jnp
mov
in
sub
repnz
jns
jmp
add
fsub
jmp
add
out
icebp
mov
ins
ja
sbb
jmp
outs
lds
jae
rcr
imul
sbb
dec
xor
xor
retf
sbb
sbb
stos
jnp
mov
jecxz
jg
cmp
mov
pop
call
push
sbb
pop
jle
or
sbb
push
arpl
repz
adc
or
cmps
inc
add
shl
or
dec
fidiv
dec
addr16
repnz
(bad)
cmp
push
ins
and
leave
fisub
dec
mov
xchg
ins
out
and
sub
or
and
add
push
aas
out
ins
jns
jns
pop
loop
jmp
icebp
daa
xchg
pushf
cmp
int3
push
addr16
mov
cs
xchg
sub
mov
dec
add
lods
ins
sbb
xchg
lahf
jle
push
mov
push
out
mov
fist
mov
loopne
xor
iret
rol
xor
push
je
mov
sub
pop
sub
(bad)
cmp
repnz
cli
xchg
mov
adc
pop
mov
inc
fs
xlat
cmp
pop
inc
sbb
jge
je
scas
xchg
push
inc
cdq
mov
clc
test
fdivr
sub
mov
js
or
push
and
stc
adc
pushf
imul
cmp
mov
pop
sbb
push
mov
mov
inc
cs
stos
and
repz
and
aam
lahf
add
jae
adc
ss
cmps
std
lahf
mov
lea
xchg
ret
int
cmp
jmp
nop
cli
addr16
and
mov
mov
push
fmulp
and
fild
push
xor
je
addr16
push
add
fs
inc
test
sti
jno
jg
movs
sbb
fcmovnu
mov
(bad)
mov
cmp
les
js
call
jmp
gs
jnp
sub
jmp
push
inc
dec
inc
pop
jo
mov
jae
mov
mov
mov
(bad)
leave
mov
cmps
enter
mov
inc
int3
dec
xchg
retf
retf
mov
das
jne
sti
ins
fs
je
cld
pushf
mov
mov
jge
fwait
push
fiadd
mov
jecxz
pop
iret
pop
mov
xchg
ret
inc
xor
mov
mov
pushf
lock
adc
cmp
int3
add
and
jecxz
fs
or
mov
and
cmps
call
ins
or
test
jno
enter
or
test
jno
mov
pop
fiadd
int3
out
sub
jno
scas
pop
sahf
rol
mov
jg
xchg
cmp
lock
scas
ficomp
popf
in
xor
movs
add
mov
call
imul
sahf
mov
jecxz
(bad)
mov
push
inc
sbb
test
leave
mov
dec
mov
rcr
in
aad
fld
enter
dec
xchg
mov
jg
xchg
fwait
sbb
outs
mul
rcl
sar
pop
sbb
movs
jge
sbb
adc
xchg
aam
stc
pop
nop
jmp
test
push
mov
push
or
cld
ficomp
push
pusha
aad
dec
xor
sbb
leave
or
mov
mov
int3
dec
arpl
(bad)
out
popa
push
test
fdiv
mov
push
(bad)
pushf
ret
(bad)
jbe
push
popa
fnstenv
sbb
jb
push
or
cdq
in
lods
loopne
neg
pushf
ret
push
(bad)
clc
call
enter
add
push
pop
xchg
sub
leave
cmp
xchg
mov
ja
mov
xor
shl
mov
jecxz
out
xor
dec
loop
rcr
inc
mov
sub
jmp
cmp
scas
out
xchg
cmp
jmp
push
mov
jp
add
sbb
inc
call
jno
jne
retf
imul
sbb
sub
cmp
jmp
pop
int
sub
sbb
or
(bad)
movs
js
mov
sub
mov
sbb
cmp
pop
jae
and
pop
in
mov
ds
and
dec
cmp
jle
test
lds
shl
xor
and
imul
test
xor
xor
inc
(bad)
mov
lahf
add
mov
inc
jns
je
xchg
sub
daa
sub
inc
stos
stc
jo
and
mov
xchg
enter
or
fld
nop
cmps
push
xchg
pop
push
sub
aas
fcomp
out
push
xchg
mov
imul
mov
push
pop
mov
adc
jmp
cmp
xor
sbb
movs
jnp
fdivr
mov
fwait
jge
call
mov
push
pop
cmp
(bad)
sahf
and
adc
add
mov
adc
shl
adc
mov
test
icebp
addr16
imul
xchg
(bad)
and
push
pusha
jmp
idiv
add
pusha
mov
adc
lea
mov
or
dec
pop
jp
and
xor
pusha
jl
cmp
or
mov
jg
test
inc
cs
jl
xor
lock
jnp
add
ja
sub
jb
fdivr
jnp
mov
mov
enter
sub
fsubp
fnstsw
repz
bound
xchg
mov
sbb
imul
ins
ins
ret
inc
xor
inc
sbb
inc
pop
add
ins
call
inc
mov
inc
jae
push
ins
jne
pop
jae
pop
loope
xor
push
dec
int3
dec
and
sub
jmp
cmp
dec
xchg
scas
enter
scas
ja
sub
call
in
lock
(bad)
cmps
or
ins
jle
icebp
jo
mov
(bad)
imul
iret
and
push
shl
fadd
stc
mov
add
imul
xchg
mov
or
mov
outs
rol
repz
mov
push
call
or
mov
fdivr
mov
outs
test
pop
hlt
mov
fwait
(bad)
jns
pop
out
mov
mov
xchg
mov
sti
sub
pushf
je
xchg
imul
mov
jne
popa
lahf
mov
aad
dec
dec
(bad)
jmp
jmp
addr16
shl
cwde
push
lods
sbb
int
adc
sub
jnp
xchg
cwde
gs
sar
push
add
ret
sub
jns
mov
push
out
aam
aam
mov
in
(bad)
aam
loop
inc
mov
call
cdq
icebp
push
pop
mov
inc
lahf
fstp
add
daa
adc
lahf
inc
cmc
call
in
fisttp
cmp
push
test
jge
in
mov
ds
loop
leave
ficom
cdq
int
(bad)
not
adc
fistp
cwde
rol
int3
sbb
push
mov
xchg
jmp
fwait
scas
dec
in
pop
fs
and
add
bound
and
mov
ja
sub
inc
jae
jne
mov
mov
popf
xchg
leave
and
leave
jns
xor
push
outs
and
ret
mov
cwde
mov
cli
fmul
call
jmp
rep
and
adc
push
or
dec
mov
mov
push
ins
mov
dec
iret
into
sub
xchg
mov
and
jno
push
cdq
and
mov
lock
stos
aaa
cdq
in
pop
rep
movs
xchg
push
cmp
mov
jmp
push
jne
adc
ret
and
pop
in
sub
or
adc
ss
pop
in
call
outs
aad
and
xor
inc
mov
and
mov
iret
sub
cwde
enter
pusha
call
je
mov
clc
xchg
inc
mov
enter
pop
sbb
retf
jb
(bad)
fiadd
sub
mov
cmp
sbb
loope
mov
retf
in
xor
fsubr
and
pop
jb
or
fucom
sbb
stos
fidiv
(bad)
cmc
pushf
inc
aad
dec
sub
pop
jl
popa
mov
bound
loopne
mov
(bad)
loopne
cmps
mov
call
sbb
xor
fld
mov
in
or
iret
out
cmps
dec
pop
out
and
clc
push
ins
dec
cmp
jmp
sub
out
sub
push
adc
ja
lods
pop
ja
retf
push
jns
ins
xlat
loopne
cs
sbb
and
pop
nop
and
fdiv
clc
ret
(bad)
cmc
cmp
add
mov
data16
scas
sbb
retf
xor
lods
fisubr
std
dec
xchg
les
out
push
jl
mov
mov
xlat
repz
xchg
lds
push
adc
sbb
lea
cmp
test
mov
jp
cli
pop
push
into
xchg
mov
add
ror
arpl
or
dec
not
mov
fdivr
xlat
mov
mov
pop
or
lods
mov
sbb
mov
xor
xor
mov
push
jo
inc
sti
mov
test
dec
xchg
push
or
mov
loop
ja
push
xor
shr
cmps
mov
or
movs
jmp
sub
xor
mov
inc
mov
loopne
mov
cld
shr
pop
push
xchg
out
mov
xor
sub
mov
inc
mov
push
mov
test
or
in
call
movs
push
fsubr
lock
sar
or
in
cli
lods
push
dec
pop
fbstp
call
enter
into
cmp
or
call
mov
mov
(bad)
movs
(bad)
std
mov
enter
push
int
scas
sub
and
dec
lods
pop
imul
call
das
or
inc
out
cmp
mov
cs
inc
in
aam
rcr
aam
adc
jns
dec
in
sub
and
xlat
mov
aas
and
sub
(bad)
call
loop
sub
fsubr
in
jge
jl
jge
mov
sub
jge
fld
pop
bound
jle
cs
xchg
cmp
mov
in
test
(bad)
inc
stc
loopne
ins
lds
aad
xchg
inc
sahf
call
cmc
repnz
add
jmp
xor
outs
push
sbb
jne
inc
adc
not
fisttp
add
push
mov
mov
jmp
cmps
dec
jmp
ret
ror
lds
stos
ret
int3
mov
neg
xchg
adc
ficom
jb
lds
xor
je
test
int
jbe
sar
sar
sbb
cmps
ror
mov
ret
rol
pop
add
inc
pop
jmp
jns
ret
mov
or
movs
(bad)
retf
ds
pusha
aaa
(bad)
jno
dec
ret
int
sar
mov
sbb
out
bound
jle
sbb
mov
mov
inc
dec
add
lds
fsub
push
push
xchg
scas
cli
inc
mov
fisttp
mov
ret
adc
inc
jmp
pop
enter
out
into
imul
out
mov
addr16
push
adc
mov
dec
push
iret
inc
ds
mov
jbe
es
xor
xchg
mov
(bad)
xchg
sub
mov
mov
pop
(bad)
pop
jnp
inc
jne
dec
xor
dec
repnz
cli
loope
je
jmp
mov
jge
retf
mov
orps
sar
mov
push
pop
jecxz
loopne
xor
daa
push
sbb
and
shl
jne
sbb
sub
loopne
js
retf
stc
pop
ror
and
sbb
add
les
mov
or
imul
push
push
cli
cmp
addr16
pop
dec
pop
push
adc
and
xchg
int
mov
mov
xlat
or
shr
call
sti
adc
lea
retf
push
iret
mov
outs
xor
out
call
jbe
das
or
sahf
sbb
cmc
call
mov
pop
lds
les
das
mov
into
enter
shl
fcom
addr16
hlt
inc
mov
jmp
sar
std
call
ss
dec
idiv
push
xlat
cmp
imul
adc
(bad)
push
pop
jo
cmps
call
dec
test
stos
xor
push
fwait
aas
mov
shl
mov
fucomip
div
adc
xor
pop
xor
push
cmps
gs
jnp
xchg
imul
or
sbb
jle
xchg
inc
call
js
mov
and
icebp
sbb
jb
xchg
cmp
and
lds
lods
inc
rcr
outs
xor
cmp
clc
cmp
push
ds
sbb
outs
and
int
push
aam
shl
popf
or
gs
lahf
adc
clc
mov
lods
push
sbb
mov
mov
inc
add
adc
leave
jle
xor
ss
das
cmps
ja
pop
adc
sti
jmp
cmps
mul
call
and
mov
cmp
pop
inc
repnz
jae
mov
je
fisttp
xchg
in
jg
pusha
les
cwde
bound
hlt
(bad)
je
sar
test
mov
push
push
retf
cwde
xchg
shl
pop
dec
(bad)
push
cmps
cmp
or
mov
fild
call
out
mov
fs
ins
push
mov
cmp
inc
ret
xchg
test
(bad)
pop
mov
movs
xlat
jne
fwait
cmps
retf
bound
xchg
sub
rcr
pop
into
ret
loopne
sbb
dec
popa
jae
dec
stos
adc
dec
ret
mov
fst
push
popa
pusha
lock
mov
(bad)
sti
pop
mov
scas
add
inc
pop
clc
jge
add
xor
sbb
ja
outs
jge
out
rcr
sbb
xchg
loopne
xchg
out
push
(bad)
adc
retf
adc
fdivr
add
pop
xchg
icebp
xor
imul
cld
sbb
jl
push
and
inc
popf
repnz
fcomi
sub
ins
dec
pop
jp
gs
std
mov
std
xchg
pushf
dec
push
ja
lds
dec
mov
sbb
arpl
and
push
jae
out
and
mov
or
jns
jmp
aaa
and
xor
stc
(bad)
xor
or
sbb
imul
mov
mov
push
sbb
popf
jnp
or
scas
mov
or
mov
fmul
add
inc
push
lahf
cwde
fs
mov
mov
outs
jo
jmp
test
adc
and
in
adc
call
data16
enter
icebp
in
jg
outs
adc
inc
sub
cdq
icebp
in
data16
jns
sbb
or
int
out
mov
leave
mov
sbb
add
mov
sub
push
and
popa
das
cmps
xchg
addr16
push
mov
or
jge
call
cdq
pop
mov
xchg
sbb
and
mov
jb
cli
out
leave
outs
and
sti
mov
cmp
leave
mov
cli
add
jge
lods
in
or
xor
and
xchg
sbb
or
retf
out
sub
pop
fld
push
sbb
cmp
retf
cmp
sub
daa
fidiv
ficom
int
enter
adc
loope
(bad)
cmp
arpl
not
add
add
outs
sbb
stc
test
int
loop
into
xchg
push
cld
jp
(bad)
jns
jnp
test
scas
xchg
fimul
xor
add
addr16
dec
ret
mov
fnsave
sahf
scas
or
push
mov
pushf
jo
stc
mov
push
aas
adc
jl
(bad)
fistp
sbb
stos
ret
mov
and
cmp
dec
sti
shl
and
jnp
jns
and
std
test
test
or
int3
push
jg
xchg
sub
push
out
push
pop
bound
ss
test
test
imul
loopne
iret
push
je
ds
dec
add
js
cmp
pusha
push
aaa
movzx
test
das
test
sbb
bound
adc
mov
pop
mov
ins
call
mov
or
fbstp
ins
jnp
movs
sbb
scas
sbb
dec
pushw
cdq
mov
mov
ret
push
lods
sbb
or
dec
mov
addr16
cld
pop
nop
hlt
mov
cmp
dec
ror
add
cwde
sub
and
lods
out
fisubr
mov
popa
jno
push
mov
mov
inc
push
bound
ret
xchg
or
xor
and
cdq
mov
test
push
sub
jae
dec
aad
cmp
idiv
xchg
cli
jo
retf
dec
iret
pop
rol
mov
mov
cmps
stc
pop
push
imul
push
int3
les
pop
jne
cmp
inc
mov
leave
and
dec
enter
mov
ds
sbb
inc
jb
xchg
sbb
retf
movs
pusha
pop
fldenv
(bad)
and
mov
pop
push
push
sub
xchg
jns
xor
mov
sbb
(bad)
movs
cmp
dec
icebp
xchg
outs
adc
test
pop
hlt
cmp
in
call
jmp
arpl
sahf
mov
pop
mov
pop
cmp
(bad)
movs
or
test
cmp
fdivr
pop
sub
sub
inc
jl
mov
das
das
or
sbb
sbb
outs
or
and
std
setno
mov
mov
xor
add
cwde
ror
jmp
stos
cmps
mov
cmp
adc
jnp
mov
xchg
enter
pop
les
call
dec
pusha
and
xchg
shr
jmp
xchg
and
push
add
add
cmps
xor
adc
and
hlt
jp
mov
push
xor
or
sbb
pcmpgtd
dec
icebp
std
add
shl
jb
push
sbb
rol
cmp
inc
push
mov
ja
lea
sub
popa
mov
mov
or
jo
enter
fst
push
mov
fistp
pop
fdiv
mov
inc
push
inc
mov
call
jmp
pop
pop
xor
movs
and
dec
jle
sub
cld
jecxz
retf
mov
adc
cmp
mov
mov
iret
pusha
sub
mov
adc
adc
lea
inc
add
daa
mov
and
(bad)
idiv
push
or
retf
enter
push
xor
cwde
mov
test
das
xchg
fist
push
repz
or
cmp
sub
into
adc
stos
ret
rcr
inc
mov
or
pop
gs
repz
aas
cdq
jecxz
mov
jbe
in
out
(bad)
pop
dec
test
pop
fwait
out
pop
inc
in
cs
pop
pop
push
fdiv
cmps
sbb
(bad)
popf
shl
xor
add
or
dec
std
sbb
ror
out
out
pop
cwde
mov
scas
lods
idiv
or
xchg
sbb
push
xchg
dec
xor
test
popa
dec
out
aas
or
cmp
iret
mov
(bad)
fmul
cld
(bad)
movs
sti
pop
ficom
add
ror
mov
out
add
fild
add
mov
shl
cmc
mov
(bad)
ret
imul
mov
dec
mov
add
test
mov
mov
dec
popa
or
or
sbb
mov
mov
sti
(bad)
cmp
adc
mov
ret
les
(bad)
fsubr
and
fdiv
xchg
enter
ins
add
addr16
inc
aaa
imul
xor
mov
jnp
xchg
mov
popf
cs
(bad)
scas
in
add
lds
push
push
inc
leave
pop
jne
dec
pop
js
jae
sub
mov
shr
into
push
lahf
jecxz
mov
jecxz
out
mov
shl
inc
leave
inc
cmp
les
dec
sub
scas
mov
nop
pop
dec
adc
sub
aad
inc
push
adc
loope
(bad)
pop
ins
inc
imul
dec
mov
adc
push
xlat
fs
jge
in
inc
int
sbb
aaa
ds
fnstcw
xchg
call
pop
cmp
pop
mov
adc
fs
lahf
cwde
fmul
pop
pop
loop
repz
or
je
mov
push
mov
gs
icebp
int
jno
xor
push
sbb
(bad)
fistp
cld
dec
movs
fisub
gs
jae
adc
aad
mov
sbb
(bad)
xor
std
test
retf
sub
daa
sub
aad
fldenv
xor
xchg
dec
call
dec
cs
adc
add
aad
inc
mov
jle
mov
sbb
lock
push
shr
repz
cdq
shl
add
(bad)
fstp
jno
je
mov
inc
(bad)
lods
popf
ret
fs
jb
test
imul
loop
cs
icebp
sahf
push
push
adc
mov
push
xor
nop
popf
hlt
mov
adc
je
outs
cmp
aas
mov
test
in
sbb
out
jmp
icebp
pop
fmulp
and
sbb
sbb
or
adc
rol
bound
scas
mov
xrelease
cmps
lea
jmp
enter
mov
out
cld
mov
ja
xchg
adc
jge
popa
sbb
pop
push
cmp
(bad)
loope
sub
imul
mov
cmps
les
sti
cmp
push
push
push
mov
aaa
adc
ror
(bad)
inc
repz
or
mov
bound
mov
pop
xor
add
sbb
loop
xchg
lock
fwait
mov
or
push
jnp
and
push
ss
or
inc
mov
ret
scas
test
aas
xchg
scas
in
mov
dec
and
mov
cwde
cdq
xchg
aam
lods
aas
inc
pop
lock
imul
fdivr
cmp
inc
pop
dec
es
add
scas
jb
jg
xchg
ins
lods
ins
loopne
mov
lea
into
adc
mov
jmp
cli
mov
mov
and
dec
and
idiv
pop
mov
lea
mov
daa
sub
scas
mov
lods
mov
push
bound
int3
mov
xchg
mov
jbe
mov
dec
nop
adc
dec
mov
pop
or
(bad)
dec
sbb
jo
push
test
cwde
outs
test
fistp
adc
mov
sbb
mov
mov
fs
fmul
pop
test
dec
adc
outs
cdq
imul
xchg
scas
clc
std
test
mov
push
lea
jge
push
dec
pop
inc
in
pop
(bad)
les
cdq
pop
mov
aad
push
sbb
jae
mov
cli
lods
sbb
sbb
xchg
das
or
mov
xor
je
fisub
push
inc
push
and
adc
aad
loop
sub
shl
dec
cmp
fild
aad
cld
jmp
add
stc
hlt
mov
test
pop
stos
loope
add
cwde
jecxz
stos
or
fnstcw
sub
inc
inc
inc
add
nop
pop
and
bound
and
inc
mov
stos
cs
jmp
mov
shl
sbb
je
and
dec
adc
cmp
sar
mov
jle
pusha
add
in
push
and
test
leave
es
out
pop
jle
sub
jp
shl
sti
add
or
ja
out
cmc
stos
xchg
cmp
dec
xchg
push
mov
mov
sahf
inc
lahf
std
and
fucomi
addr16
sbb
adc
jno
icebp
jo
xchg
mov
xor
push
and
rcr
loopne
xlat
cmp
sub
fs
mov
mov
ins
adc
lock
or
aas
xor
sbb
ins
popf
xchg
mov
xor
in
aad
ror
mov
cmp
xchg
push
cmp
adc
addr16
jnp
sub
retf
sbb
aaa
jo
(bad)
pop
add
lock
mov
jmp
sbb
cmp
out
mov
xchg
dec
js
or
retf
mov
jp
sub
aaa
stos
ret
xchg
jmp
mov
fwait
jge
test
jb
fnstsw
out
lods
pop
jnp
or
enter
sbb
push
mov
(bad)
movs
mov
sbb
enter
loop
mov
rcl
add
fcmovnu
in
xchg
leave
sbb
inc
xor
bound
(bad)
cmc
addr16
add
pushw
dec
gs
jbe
jns
or
and
jp
rcr
ja
hlt
add
push
fdivr
jle
and
inc
mov
bound
pop
sub
out
cmp
out
sti
sub
xor
mov
rdpmc
scas
mov
outs
jg
cs
and
sub
mov
ret
jl
ss
cmp
loop
push
sahf
sub
add
movs
sub
mov
xchg
cdq
jge
sub
mul
lds
int3
add
mov
push
push
imul
mov
pop
sbb
(bad)
cmp
sbb
pop
jnp
aam
into
jae
sub
add
pop
scas
fdiv
ret
add
ror
out
mov
mov
or
in
mov
retf
adc
or
dec
pusha
inc
inc
adc
xor
pop
add
dec
dec
ins
sbb
fisubr
jp
inc
mov
xor
mov
pop
fcom
ins
das
sub
je
or
shl
lahf
add
inc
jg
movs
adc
gs
sbb
(bad)
pop
or
push
out
js
es
pop
shl
add
cwde
mov
xchg
sbb
fstp
popf
fst
pcmpeqw
das
sub
(bad)
mov
mov
hlt
(bad)
in
out
mov
cld
retf
sub
pop
mov
adc
sub
mov
jg
mov
mov
jnp
mov
mov
cmp
push
sub
aad
fs
shl
(bad)
sbb
pop
xchg
pop
lods
fcomp
call
mov
retf
cmp
aad
cdq
and
lods
mov
mov
dec
jmp
jo
sub
jl
cmp
cwde
call
call
adc
ins
fcom
adc
test
dec
mov
inc
leave
out
out
rol
aas
add
jl
sub
mov
hlt
ret
push
in
lahf
test
push
mov
dec
mov
jb
std
jns
sub
or
sub
fstp
push
and
nop
es
pop
stos
push
mov
pop
aad
or
push
repnz
pushw
push
fld
cld
mov
xchg
jle
cmp
aaa
arpl
int
dec
test
cdq
ss
fisttp
jl
(bad)
mov
adc
ss
data16
ja
push
cmp
mov
push
mov
cmp
arpl
lods
jp
scas
dec
fldcw
shl
loopne
mov
mov
in
mov
or
movaps
jge
outs
or
push
mov
fistp
shr
dec
adc
out
xchg
fs
inc
lds
addr16
jnp
mov
mov
and
daa
lahf
ret
jl
cdq
clc
dec
jns
jp
mov
cwde
retf
test
and
adc
push
(bad)
adc
cmp
call
lods
cs
inc
mov
scas
in
push
ja
ret
fisubr
imul
fimul
lock
ror
dec
dec
rol
cmp
pop
push
mov
sar
imul
jp
js
repz
mov
cmc
in
adc
mov
fstp
aas
enter
jb
aas
mov
shl
outs
push
mov
pop
out
xlat
sub
jg
mov
movs
sub
jno
out
mov
jnp
mov
leave
movs
xchg
push
xor
sbb
add
in
sub
out
std
outs
cmp
adc
and
sub
jno
push
mov
mov
popa
mov
add
in
ret
sub
xchg
xchg
retf
and
addr16
shl
movs
mov
imul
test
mov
inc
push
scas
push
pop
mov
and
and
cmp
xchg
(bad)
int3
or
retf
and
arpl
shr
sbb
jbe
mov
mov
fwait
test
or
xchg
call
or
sbb
mov
push
add
inc
mov
inc
movs
icebp
pop
das
adc
ins
ins
test
mov
cmp
test
xor
inc
sbb
ss
or
mov
out
outs
jae
mov
scas
add
xchg
cwde
retf
pop
jb
aam
xlat
or
arpl
nop
je
adc
shl
cdq
jbe
and
je
icebp
cli
mov
mov
std
imul
and
fadd
pusha
and
outs
push
fldcw
sub
add
mov
inc
ds
push
in
pop
aam
sub
test
js
or
mov
(bad)
(bad)
fild
xchg
loope
jnp
and
xchg
xchg
imul
xchg
inc
jg
sar
fcmove
mov
pop
mov
jge
cmp
inc
jl
repnz
and
dec
fwait
inc
enter
(bad)
sub
(bad)
jns
push
inc
aaa
dec
lahf
imul
sub
sahf
mov
fldcw
or
cmps
or
mov
imul
add
push
scas
xor
(bad)
ror
fst
push
sbb
pop
in
xchg
inc
mov
adc
movs
imul
movs
jmp
enter
lods
mov
dec
bnd
rcr
sar
and
loope
push
lahf
push
add
inc
out
movs
ds
adc
ins
(bad)
xchg
(bad)
cmp
cmp
pop
out
push
cmp
dec
div
fiadd
stc
in
out
enter
or
jns
xlat
xor
(bad)
push
not
push
pop
inc
movs
mov
pavgw
mov
mov
mov
mov
mov
out
ja
pushf
sbb
out
popa
push
cmp
(bad)
add
and
jb
dec
jo
(bad)
aas
or
rcl
outs
mov
(bad)
mov
shl
sub
xor
push
(bad)
sub
cmps
(bad)
pushf
push
xchg
fisttp
jmp
and
movs
inc
mov
jno
and
pop
xor
mov
sbb
mov
sbb
fsubr
mov
test
sbb
inc
xchg
pop
inc
not
les
mov
inc
push
cwde
mov
ins
cmps
pop
or
dec
ja
imul
cs
mov
or
test
movs
ja
pop
pop
pop
out
(bad)
imul
addr16
outs
mov
pshufw
sub
push
cmp
dec
lods
jmp
mov
repz
push
fmul
in
fisub
popa
mov
xchg
loope
out
in
sub
movs
push
(bad)
and
lods
dec
out
adc
out
cmp
shl
mov
jecxz
movs
ja
push
jl
and
ret
cs
popf
xchg
mov
popa
sub
jnp
fiadd
nop
arpl
cmp
std
sub
dec
imul
or
(bad)
mov
in
push
cmp
pop
or
icebp
gs
ss
jb
stos
fild
in
cld
xchg
or
jmp
stos
xor
lds
call
aas
pusha
push
inc
bound
(bad)
xchg
pop
push
xor
repz
shl
in
and
in
ret
ins
inc
loopne
call
or
mov
lods
jb
mov
xchg
lea
or
xchg
stos
xchg
or
cmc
inc
dec
cmp
mov
fld
call
mov
jns
push
rcl
push
in
jno
mov
push
xor
pop
cdq
jmp
adc
(bad)
jns
cld
pop
mov
(bad)
stc
push
cmp
mov
ja
mov
aad
dec
mov
jp
inc
dec
mov
ret
(bad)
ror
inc
and
sbb
adc
mov
pop
lahf
pop
mov
jno
rcl
and
inc
ss
or
out
out
mov
test
mov
cld
test
push
push
sbb
inc
push
fisub
adc
pop
fild
repz
cmp
loop
mov
retf
pop
or
in
enter
test
inc
test
pop
dec
icebp
jnp
shl
push
adc
mov
inc
in
or
ss
pop
fwait
push
pushf
cmps
and
pop
jns
int3
aas
inc
lea
(bad)
inc
not
cmp
(bad)
repz
xor
push
push
inc
mov
popf
stos
sbb
xor
jo
adc
dec
cmp
(bad)
jle
cmc
loopne
scas
jecxz
imul
fisttp
mov
icebp
mov
js
gs
cmp
xor
pop
aaa
ds
adc
push
push
cwde
adc
or
dec
das
sub
int
inc
cwde
ja
pop
inc
packuswb
stos
jmp
retf
enter
add
addr16
lea
jg
push
in
(bad)
and
and
sbb
rol
dec
cmp
inc
fild
or
cwde
cmp
fld
hlt
stc
hlt
inc
xor
cld
sub
test
mov
test
sub
ins
add
push
cs
cdq
xor
int
ja
rcr
sub
push
shl
push
inc
cs
mov
mov
add
frstor
mov
outs
fld
mov
pop
xor
sbb
stos
or
adc
cld
and
mov
dec
mov
or
mov
repnz
into
cmps
outs
inc
push
ret
sti
(bad)
aam
sub
or
ret
lahf
push
mov
xor
dec
fisttp
mov
xchg
and
ds
mov
cmp
sub
inc
imul
cld
xchg
jbe
arpl
ja
out
mov
mov
cmp
sub
push
ins
in
fs
outs
mov
adc
(bad)
xlat
xchg
sbb
or
pop
je
sbb
pop
ss
push
or
sti
mov
mov
add
pop
mov
ins
and
adc
lock
pop
or
xor
mov
and
imul
adc
mov
dec
and
inc
xchg
jb
pusha
leave
retf
pop
cdq
stc
aaa
dec
jnp
arpl
push
mov
xchg
in
adc
mov
leave
adc
lea
pop
mov
mov
enter
cmp
outs
lea
test
or
mov
adc
cmps
xor
sub
retf
xchg
jo
pcmpgtb
lock
or
aaa
or
call
inc
mov
xchg
jnp
fimul
push
movs
mov
xchg
sub
pop
(bad)
cwde
inc
pop
jmp
xor
dec
dec
loopne
leave
xor
dec
dec
loope
in
shl
(bad)
cld
rol
sbb
scas
rcl
jle
fnstsw
lock
test
and
(bad)
cmp
jmp
popa
sub
je
inc
test
push
or
or
fucomp
xchg
ret
or
lods
in
sbb
jns
add
ins
mov
addr16
xchg
pop
adc
sbb
push
pop
push
add
mov
push
mov
and
ins
arpl
mov
and
in
dec
repnz
inc
repnz
pop
push
jns
mov
xor
push
movs
pop
dec
fcom
rcr
shr
push
pop
jns
call
or
hlt
es
dec
lea
rcl
push
inc
sbb
jecxz
inc
(bad)
repnz
popf
mov
(bad)
imul
cld
int3
jecxz
imul
ins
inc
cmps
mov
das
add
dec
cs
sub
div
shr
js
xlat
fsubr
cmps
out
rcr
dec
sti
je
pop
dec
ss
rcr
fbstp
pop
push
data16
jmp
rcr
push
je
dec
fcomp
popa
add
mov
cmps
sub
xor
int
sbb
sbb
fdivr
sub
imul
das
in
push
adc
cmp
xchg
ins
xlat
mov
pusha
ds
cli
call
lock
jnp
push
or
rcr
nop
repz
adc
jns
jns
adc
jb
je
in
push
jmp
cs
mov
inc
popa
adc
mov
or
xchg
fstp
mov
push
cmps
lods
sbb
jns
sub
mov
dec
lods
test
dec
push
aad
push
cs
clc
test
add
push
dec
mul
test
xchg
(bad)
rdpmc
fwait
rcl
out
pop
ss
loope
mov
ret
pop
pop
pop
pop
cmp
lea
in
push
icebp
push
out
pusha
fstp
xor
imul
int
or
sub
cdq
outs
es
test
or
xchg
adc
aam
mov
lods
mov
pop
cmp
inc
sub
lods
sub
mov
mov
sub
pop
cmp
js
sub
mov
nop
or
imul
ret
nop
adc
imul
xchg
fst
mov
and
jge
cli
mov
jnp
enter
cwde
cmp
movzx
and
add
jmp
inc
add
mov
dec
and
scas
cmps
bound
xchg
pop
enter
fs
fild
fcom
or
shr
fisttp
inc
pushf
xchg
imul
adc
shl
scas
(bad)
xchg
xchg
inc
call
adc
in
pop
cmp
js
daa
pop
ret
mov
xchg
fbstp
in
xor
push
or
cli
mov
xor
add
sbb
add
rcl
out
xor
mov
fsub
add
inc
repz
mov
adc
pop
aad
jge
fisubr
xchg
out
jp
jp
mov
or
or
adc
and
mov
sub
jmp
ins
sub
xor
sub
call
mov
stos
out
dec
loop
call
cmp
ds
pop
sbb
sbb
jnp
outs
call
or
xor
mov
mov
dec
mov
stos
test
jle
loope
daa
fild
mov
movs
dec
lods
cli
push
rol
aas
sbb
loopne
xchg
movs
(bad)
loop
cmp
jp
cmps
lds
or
stos
and
pop
add
sbb
cwde
adc
mov
xor
fdivr
xchg
icebp
call
adc
jbe
rcr
adc
daa
jmp
test
or
and
jmp
xchg
pop
call
adc
dec
popfw
sub
stos
ror
add
fnsave
push
call
rcl
sbb
ds
jne
test
push
xchg
pop
fstp
and
xchg
mov
popf
cmps
inc
out
push
pusha
cmp
dec
(bad)
mov
es
ins
out
fs
(bad)
clc
sbb
inc
mov
mov
dec
in
std
les
retf
cmps
jle
test
cmps
mov
cmovs
sets
and
or
aad
and
sub
sub
dec
mov
push
adc
(bad)
in
mov
or
imul
push
call
xor
mov
mov
add
mov
or
fxam
popf
arpl
cmc
jns
test
pushf
push
push
repnz
cmp
sub
addr16
pushf
sahf
mov
dec
mov
stc
sbb
(bad)
aad
mov
outs
call
sahf
add
sub
mov
and
push
in
adc
adc
inc
mov
scas
push
test
xor
fwait
xchg
arpl
cmp
stos
sub
inc
mov
sub
test
pop
shl
in
adc
popf
addr16
icebp
test
pusha
add
sbb
shr
sub
shr
mov
sbb
add
sbb
shl
jb
mov
add
aam
lock
push
ss
test
scas
iret
getsec
mov
mov
xor
mov
jb
cmp
loope
push
jp
shr
repnz
and
pop
fstp
shl
push
lock
cmp
iret
push
xchg
nop
or
(bad)
mov
gs
sub
arpl
push
stc
out
cmpxchg
or
std
popa
loop
push
les
mov
ds
repnz
mov
jp
dec
cmps
add
outs
mov
mov
mov
push
addr16
hlt
out
ret
push
les
pop
cmp
cs
inc
jbe
scas
es
ins
iret
push
retf
push
sti
dec
lods
or
jns
test
bound
arpl
lods
fucomi
push
pop
daa
sub
ror
jge
jle
movs
shl
sbb
in
adc
lahf
cwde
(bad)
add
xchg
mov
mov
popf
cmovl
xor
js
daa
adc
fbld
lods
aad
cmp
(bad)
loope
ret
retf
mov
dec
fsubr
lahf
jo
or
jmp
push
jae
sar
dec
inc
bound
xchg
or
mov
jb
nop
cwde
sub
cmps
or
pop
scas
jb
mov
rcl
push
ret
(bad)
jno
int
jge
jbe
adc
out
sbb
jbe
pop
out
cmp
jbe
push
xchg
ret
shl
xchg
aas
cwde
dec
mov
sub
pushf
jmp
xor
iret
dec
fimul
push
xor
ret
mov
ja
cmp
dec
cs
and
(bad)
(bad)
xchg
pushf
adc
xchg
inc
mov
cs
xchg
jmp
add
push
cmp
jg
imul
(bad)
shr
push
and
sub
mov
pop
lods
mov
jle
pop
xor
movaps
push
mov
mov
(bad)
jl
dec
fisub
fbld
sub
pop
jecxz
repnz
mov
adc
jbe
fwait
mov
leave
mov
or
push
(bad)
imul
test
pushf
stos
cmp
mov
pusha
cmc
pop
mov
sahf
ins
bound
gs
xlat
fs
adc
xor
lea
fidiv
and
sbb
rcl
repnz
inc
dec
adc
call
jle
ror
fisttp
jnp
test
and
xchg
jb
dec
jl
mov
mov
retf
jmp
and
push
mov
ins
push
bound
ror
xor
jns
add
cmp
icebp
or
add
test
inc
popf
inc
in
sbb
addr16
xchg
rol
cmp
mov
hlt
fisubr
mov
adc
fnstcw
mov
push
je
xor
add
cli
je
mov
pop
and
fmul
xchg
sbb
stos
sahf
shr
hlt
cld
call
(bad)
idiv
aad
cmp
bound
loopne
cwde
push
mov
push
sbb
cmc
outs
and
mov
loop
push
imul
or
xchg
jge
push
or
cmp
adc
imul
mov
inc
sbb
mov
(bad)
in
or
sbb
cld
mov
jl
cmp
aaa
push
cs
lds
dec
pop
cmps
js
popf
xchg
pop
jnp
adc
(bad)
adc
cdq
or
xor
lock
bound
sub
and
(bad)
test
in
push
pop
adc
mov
cwde
and
xchg
pusha
cmp
outs
cld
jp
out
out
sar
cmps
dec
push
shr
mov
xchg
dec
xor
pop
daa
dec
inc
cmp
lea
mov
aad
sub
mov
stos
addr16
inc
push
or
arpl
fisttp
sbb
mov
das
jge
icebp
into
pop
(bad)
mov
inc
in
call
retf
adc
and
cmp
(bad)
pop
es
(bad)
data16
add
bnd
mov
icebp
addr16
mov
inc
pusha
(bad)
pop
and
xchg
xlat
int3
add
sbb
mov
fwait
or
rcl
mov
fnstenv
retf
mov
inc
loop
sub
jge
shl
icebp
scas
cld
add
xchg
lds
loop
or
mov
lahf
and
(bad)
xchg
mov
stc
aas
dec
mov
fisubr
bound
(bad)
(bad)
and
nop
jno
pop
in
xor
xchg
cdq
dec
fdivrp
mov
rol
(bad)
lds
push
sub
call
je
(bad)
rol
sahf
scas
not
fs
cmc
daa
pop
cmps
mov
ret
addr16
push
xor
dec
cmp
lods
test
or
xor
inc
lahf
add
scas
mov
ss
out
add
xchg
addr16
int
jne
sub
mov
jns
jne
mov
les
fiadd
js
mov
or
xchg
icebp
and
mov
repz
test
xor
jl
(bad)
add
enter
(bad)
(bad)
mov
shl
xor
and
xor
dec
add
mov
loopne
or
fdiv
mov
jnp
imul
push
jle
sbb
add
xchg
push
ds
aam
in
in
jns
pop
aas
fist
(bad)
mov
xor
aas
nop
dec
add
repz
push
pop
aad
outs
stos
xlat
fild
jae
daa
scas
add
rcl
test
push
cli
push
movs
iret
aad
adc
inc
repnz
or
add
dec
pushf
rcr
clc
mov
call
movs
ja
jg
jnp
aam
in
sbb
xor
push
not
jecxz
sub
ficom
xchg
jbe
test
mov
das
pop
xchg
add
(bad)
fst
add
sub
ret
mov
outs
mov
imul
aad
icebp
and
jmp
and
inc
lahf
repz
mov
sbb
imul
jae
cmc
cmp
mov
inc
pop
leave
sub
popa
outs
rol
sbb
dec
in
ret
xchg
sub
push
mov
mov
ins
mov
xor
into
daa
lahf
mov
pop
not
ins
aaa
mov
jge
mov
push
ss
cmp
ficomp
mov
and
in
mov
rol
cs
fs
jo
and
and
xor
xor
fucom
pop
mov
cmp
mov
mov
(bad)
mov
lods
xor
mov
cmp
pop
out
cmp
and
push
add
push
jb
or
jle
sub
fcmovbe
movs
(bad)
retw
add
xor
mov
or
gs
stos
inc
mov
push
(bad)
popa
retf
sub
data16
sub
sub
dec
mov
stos
aam
or
loope
mov
mov
pop
leave
and
aam
mov
sub
fwait
sub
cdq
pop
mov
fidiv
xor
mov
pop
or
popa
test
inc
push
mov
out
dec
xlat
repnz
inc
out
mov
lock
adc
popf
(bad)
cmc
pop
xor
ror
pop
fcomp
mov
or
sub
jle
gs
pushf
add
jmp
cli
retf
push
add
fcmovbe
adc
sbb
jp
and
sub
imul
jmp
(bad)
mov
inc
inc
test
sub
out
dec
dec
stos
lods
xlat
or
adc
push
pop
loope
cmp
cwde
sbb
shl
idiv
or
test
cmp
xchg
jne
sub
(bad)
mov
loope
mov
pop
or
add
or
mov
ins
dec
test
dec
imul
jge
(bad)
retf
mov
ins
adc
push
call
lock
mov
dec
sahf
jb
sub
and
cmp
jmp
or
outs
fstp
xor
xor
xchg
ror
outs
sub
inc
lahf
dec
jp
test
adc
mov
lock
add
ja
xchg
dec
lods
push
mov
cmc
add
ds
cmp
mov
or
sub
pop
arpl
scas
adc
dec
inc
or
sub
hlt
dec
mov
xchg
push
lea
jo
mov
push
(bad)
cwde
pop
xor
inc
stos
outs
add
cmp
idiv
icebp
(bad)
ficomp
jecxz
es
xchg
and
cpuid
addr16
cmps
sub
fmul
pop
xor
aaa
jp
fwait
sub
retf
fst
adc
inc
shr
bound
(bad)
pop
movs
xchg
inc
dec
pop
loop
stc
movs
dec
imul
add
pop
push
mov
push
add
outs
rol
loope
mov
int3
fldcw
xchg
cdq
or
pushf
cdq
pusha
pop
jl
adc
enter
int3
out
mov
retf
cmc
(bad)
inc
xor
test
mov
lods
test
adc
adc
xchg
(bad)
cmp
(bad)
xor
pop
push
ins
add
sub
pop
out
jl
not
out
rcl
icebp
add
neg
(bad)
jmp
cmc
cmp
dec
out
jno
sbb
pop
aaa
and
fsin
lods
outs
mov
arpl
mov
xlat
fst
adc
int3
loop
add
pop
shr
aas
xor
ins
mov
into
rcl
mov
xchg
sbb
pop
push
into
inc
jnp
mov
fs
mov
jne
fwait
sbb
in
pop
int3
rol
(bad)
jo
mov
cmps
sub
adc
sti
ds
pop
loopne
adc
fidivr
mov
stos
sbb
aas
cmps
push
popa
and
xor
fild
sar
retf
dec
sbb
pushf
sbb
adc
xchg
jmp
loope
push
sub
pusha
mov
jl
xchg
aad
adc
(bad)
hlt
iret
enter
push
nop
pop
mov
add
and
dec
adc
sub
pop
push
xchg
and
(bad)
xor
in
adc
in
sar
(bad)
stos
cld
idiv
mov
retw
add
inc
pop
xchg
out
push
cmp
ret
js
addr16
imul
jmp
test
inc
fldcw
xlat
push
fiadd
(bad)
enter
push
addr16
(bad)
mov
or
mov
lahf
mov
xchg
cdq
hlt
movs
jl
adc
sbb
jno
inc
inc
mov
xor
cmp
mov
jae
and
or
ins
outs
push
in
or
pop
sub
inc
mov
adc
or
pop
or
je
xchg
cwde
push
push
nop
dec
mov
fs
add
outs
call
movs
adc
(bad)
rcr
stc
mov
je
or
loop
or
ds
jnp
jae
call
in
adc
arpl
inc
cld
xor
fwait
addr16
shl
movs
call
cli
int3
xchg
scas
mov
mov
ret
(bad)
imul
movs
dec
cmp
add
(bad)
out
jno
and
or
dec
xlat
mov
add
in
(bad)
arpl
mov
je
add
pop
mov
mov
loop
pop
mov
sbb
mov
sbb
gs
test
jns
(bad)
inc
add
fstenv
sbb
sbb
xor
arpl
adc
push
mov
cmp
punpckhwd
mov
fwait
outs
mov
pop
sahf
jno
hlt
sbb
push
in
jo
hlt
sti
xlat
and
out
push
and
ss
xor
sub
sub
inc
push
jns
mov
sub
daa
addps
xor
or
in
test
ja
inc
cmp
fldenv
pop
inc
inc
xor
jg
and
jmp
retf
sbb
aaa
out
test
sahf
or
ficomp
icebp
mov
test
mov
call
fimul
mov
fidivr
jbe
push
arpl
mov
jnp
mov
icebp
lods
xchg
sbb
pop
retf
mov
or
and
mov
cli
add
cwde
bound
mov
lea
push
dec
outs
movs
(bad)
jnp
pop
cmc
or
sar
pushf
sub
xor
test
adc
stos
scas
stos
sbb
jnp
sbb
mov
(bad)
push
pop
inc
mov
xor
fwait
or
or
mov
jge
iret
mov
push
mov
pop
aam
inc
in
or
mov
push
test
and
dec
push
stc
popa
xchg
mov
sbb
xchg
xor
jae
mov
cmps
ja
and
jmp
into
mov
push
mov
or
cdq
push
inc
cmc
outs
xchg
jb
mov
xchg
bound
sbb
call
stc
xchg
loop
ret
cmp
inc
mov
xchg
imul
(bad)
xlat
leave
xchg
test
retf
xchg
inc
dec
ret
jbe
and
xor
mov
mov
es
js
cmps
test
shl
cmps
push
repz
inc
movs
xchg
cli
xchg
adc
(bad)
dec
out
dec
lock
push
jbe
and
sub
sbb
sbb
mov
sub
or
and
imul
push
push
cmp
das
push
fadd
ja
sub
or
sub
sub
idiv
sub
cld
xchg
cmp
loope
push
idiv
into
das
(bad)
pop
jne
dec
xchg
or
pusha
push
and
or
jg
in
pop
retf
mov
retf
(bad)
mov
jmp
pop
fwait
je
adc
lock
mov
js
pushf
arpl
ffree
dec
inc
fstp
mov
std
pop
cwde
(bad)
jmp
sbb
or
ja
repnz
fdiv
xor
ss
ins
push
int3
pop
inc
sbb
(bad)
sub
lahf
mov
jmp
in
cmp
lods
loop
dec
hlt
or
shr
mov
stos
add
sar
lods
(bad)
mov
mov
mov
test
cwde
add
iret
adc
mov
pop
jb
mov
arpl
inc
sub
scas
fs
mov
and
push
xchg
xchg
cs
push
push
mov
mov
mov
pop
xor
popf
aam
sbb
cmp
gs
mov
cmps
xor
inc
jbe
repnz
aam
lock
pop
push
inc
add
dec
jl
xor
es
popf
retf
cs
or
xor
rol
movs
hlt
pop
lahf
mov
and
fnstcw
jecxz
stos
stos
cli
(bad)
aad
fstp
xchg
test
mov
dec
inc
cld
mov
cmp
jge
jo
pop
xchg
adc
jle
push
popf
and
xchg
shl
je
or
sub
mov
dec
fld
sbb
sbb
shl
mov
outs
hlt
dec
adc
sbb
cdq
pusha
push
in
inc
cs
cwde
cs
clc
jge
out
cmp
sti
pop
ss
jmp
jg
outs
test
(bad)
cs
jne
imul
add
sahf
enter
fidiv
cs
mov
pop
mov
push
jl
push
mov
mov
jge
mov
jb
das
add
sub
inc
adc
int
addr16
lods
inc
push
push
outs
and
add
xchg
jecxz
cmp
jecxz
push
jmp
es
iret
push
or
ret
or
inc
lods
sbb
ins
sub
pusha
stos
lds
rol
xor
cmp
push
dec
fidiv
aas
mov
movs
jns
lods
and
inc
and
xor
loop
xchg
jmp
bnd
lgs
xchg
test
sbb
call
dec
lock
adc
inc
push
jmp
arpl
and
mov
into
push
js
test
mov
movs
in
dec
cwde
bound
arpl
(bad)
fld
inc
enter
mov
or
add
add
inc
jnp
mov
loop
jg
pop
hlt
test
dec
jno
cmp
das
add
scas
adc
xchg
aad
sbb
push
fistp
mov
or
les
repnz
ins
cwde
xchg
pusha
(bad)
sbb
daa
mov
xor
sub
js
dec
xor
adc
push
in
jmp
fwait
movs
pop
movs
(bad)
dec
inc
or
cld
pop
neg
and
add
test
loop
(bad)
imul
cwde
(bad)
sub
fcom
mov
aas
movs
jno
in
movs
call
push
mov
pop
xchg
leave
(bad)
jbe
mov
aas
push
sbb
xchg
mov
js
pop
cmp
mov
inc
xor
pop
arpl
and
test
enter
je
rol
stos
mov
adc
lahf
and
jle
push
mov
mov
imul
mov
xchg
int
and
(bad)
add
or
pusha
mov
xor
mov
ds
(bad)
or
loop
mov
lods
add
or
pop
adc
movs
pushf
ret
push
push
xor
xchg
imul
mov
cmp
jae
jmp
hlt
mov
cmp
push
mov
push
(bad)
std
jg
pop
dec
test
xor
scas
ss
fwait
mov
out
daa
xor
cmc
shr
cdq
push
pop
or
call
ror
add
jg
in
push
fadd
loope
mov
movs
add
jno
inc
arpl
leave
push
movs
push
mov
cmp
xor
movs
xchg
aad
(bad)
ret
add
in
ficomp
pop
es
or
xchg
mov
push
(bad)
cld
fwait
mov
jne
sub
push
jge
dec
in
xchg
into
fsubr
add
aad
cmp
es
pop
sar
jne
cdq
test
pop
stc
sbb
jno
push
dec
push
clc
ror
jle
js
dec
fdivr
cli
gs
mov
movs
sar
daa
imul
xchg
les
and
imul
jo
cmp
cmp
add
ret
loop
xor
sub
fsubr
(bad)
div
scas
(bad)
ror
inc
clc
lea
push
inc
and
sub
fst
mov
jl
pushf
mov
shr
cmps
jg
(bad)
sub
mov
out
jmp
ficomp
mov
neg
mov
pop
mov
and
lods
cmp
push
add
fistp
sahf
inc
mov
and
rcr
adc
fimul
out
mov
and
add
mov
psrad
mov
xchg
sub
fs
cmps
push
mov
or
xor
and
jge
xor
hlt
ja
fist
in
pop
out
sbb
addr16
mov
fmul
push
inc
enter
push
invd
xchg
add
pop
inc
xchg
aaa
pushw
inc
stos
popf
or
or
push
mov
xlat
push
push
imul
sub
cdq
movs
mov
dec
mov
fist
fsub
add
test
mov
sub
fistp
stos
stc
(bad)
lahf
push
(bad)
and
or
dec
inc
mov
shl
imul
loop
in
fstp
int
sub
js
scas
sbb
call
sub
das
pop
dec
ret
add
fld
xor
ins
dec
jg
das
shr
enter
cmc
mov
call
fisubr
stos
fisubr
in
pop
jecxz
xor
and
lea
inc
adc
out
ror
loopne
call
outs
jmp
sub
neg
add
retf
movs
adc
mov
jge
or
dec
aaa
cmp
mov
out
inc
mov
aam
dec
test
fs
loopne
inc
mov
inc
jno
cmps
(bad)
loop
xchg
fistp
(bad)
in
mov
cmps
(bad)
mov
sub
mov
out
cmc
jge
add
stc
fiadd
pop
adc
in
inc
in
(bad)
pop
adc
or
adc
cmps
rcr
xor
dec
jp
ror
sbb
(bad)
cmp
push
mov
arpl
pop
lds
movs
mov
inc
cmc
sbb
lock
jl
(bad)
xchg
ret
xor
arpl
mov
cmp
adc
test
aad
dec
dec
xor
or
cmp
in
add
jb
sub
push
mov
fild
leave
jge
(bad)
mov
(bad)
jo
mov
jno
mov
cmp
add
xor
mov
arpl
lods
mov
in
push
cmp
dec
jg
retf
mov
dec
punpckhbw
sbb
in
adc
(bad)
lea
jae
pushf
sub
out
clc
sub
mov
in
call
inc
cmp
in
rcl
iret
leave
adc
push
pop
xchg
lock
sub
add
add
std
in
imul
jge
sub
loop
mov
cmp
(bad)
cmc
and
aad
dec
cs
sub
out
xchg
inc
mov
jecxz
push
test
dec
in
imul
aaa
iret
lock
rcr
pop
push
xchg
dec
cli
cli
shl
push
dec
idiv
idiv
xchg
xchg
xor
mov
test
sbb
movs
xor
popf
(bad)
mov
arpl
fldenv
mov
outs
pop
and
out
(bad)
jbe
mov
and
add
jo
(bad)
inc
cmp
into
jp
lea
imul
mov
add
jns
fadd
ror
in
cmps
jecxz
stos
dec
and
push
push
mov
mov
dec
aad
into
bnd
pop
ins
es
mov
or
push
adc
sbb
jge
add
inc
jbe
mov
push
loope
xor
jne
pusha
sbb
xchg
mov
sbb
pop
loope
cdq
repz
mov
cmp
jne
dec
aas
pop
xchg
xchg
dec
rcl
adc
pop
mov
dec
cwde
in
sbb
es
ror
push
cli
adc
loopne
inc
xor
lahf
push
cmp
div
into
stc
mov
and
test
imul
xabort
jo
fst
arpl
cli
push
es
clc
pop
add
(bad)
xor
adc
ror
or
aad
out
mov
stos
push
jg
(bad)
pusha
pushf
lea
inc
mov
adc
push
dec
outs
sbb
push
inc
fidiv
pop
test
out
dec
add
outs
int
ret
dec
jle
mov
aaa
aam
or
jp
push
pushf
push
push
nop
(bad)
cli
stos
adc
jg
fxch
adc
dec
rcl
inc
pop
div
cdq
push
adc
cmp
retf
jae
loop
ror
inc
pop
and
dec
xor
jo
sahf
arpl
mov
or
mov
mov
mov
in
iret
inc
mov
pop
push
add
or
stos
test
and
inc
xor
stc
inc
bnd
hlt
loope
cmc
or
xchg
loope
xchg
sti
cdq
div
sub
repz
ja
jl
dec
ja
mul
sbb
inc
ins
hlt
ret
in
push
mov
fsubr
icebp
lock
scas
loope
jnp
dec
(bad)
data16
pop
mov
cmp
jp
push
pop
add
aam
jne
inc
repz
fcmovnb
daa
sbb
aad
test
icebp
das
fimul
mov
scas
stos
jnp
xor
sbb
repz
dec
and
fucomip
(bad)
das
sahf
test
lods
lods
mov
arpl
shl
stc
test
sbb
mov
mov
xor
daa
jl
movs
jns
retf
(bad)
xchg
je
sbb
add
jp
dec
xor
cmp
dec
or
add
imul
retf
jo
and
dec
ret
mov
pusha
push
repz
imul
sub
popa
pop
dec
ins
sbb
ins
xchg
pop
repz
and
enter
(bad)
xlat
mov
adc
movs
jbe
inc
stos
pop
pop
enter
push
mov
iret
and
loop
movs
aam
xchg
sahf
or
in
lods
fs
pop
out
outs
adc
std
fldenv
and
push
jmp
fistp
push
fcom
shr
movs
imul
xor
pop
shl
mov
add
mov
sbb
mov
cmp
pop
aad
fisttp
mov
gs
cmp
cmp
sub
xor
leave
out
lods
(bad)
xchg
das
or
int3
pop
mov
or
jp
stos
mov
pop
cwde
js
repz
push
cmp
popa
sub
sbb
inc
push
loope
add
sar
sub
fucomi
jb
fsubrp
movs
inc
nop
sbb
mov
sbb
jbe
mov
iret
not
mov
test
dec
fild
ss
(bad)
int3
xor
test
push
mov
jecxz
ds
mov
cmp
cmp
sahf
dec
inc
ffreep
stos
mov
xor
test
pusha
push
mov
cmp
lods
xor
fmulp
pop
out
inc
jne
mov
aaa
out
les
mov
mov
aaa
cmp
add
push
repnz
push
sub
cmps
mov
mov
in
jl
or
mov
mov
mov
cmp
dec
ja
test
dec
nop
mov
adc
hlt
push
sub
jmp
ss
cmp
jecxz
adc
mov
fdiv
inc
imul
cmp
pop
aas
fsubr
rol
pop
cdq
jg
aam
arpl
in
sbb
(bad)
ror
xchg
popa
push
cmps
or
(bad)
iret
pop
adc
add
xor
jp
in
loop
clc
test
sahf
sbb
test
cmp
loop
pop
daa
data16
out
(bad)
je
xor
call
rcl
scas
sbb
sbb
pusha
or
xor
pop
or
movs
les
out
ds
xchg
sti
cmp
cmp
pop
inc
ret
lods
in
int3
cmp
out
mov
mov
xlat
lods
iret
lods
pushf
arpl
xor
shl
inc
imul
ret
mov
sbb
push
sbb
mov
adc
icebp
sub
jae
pop
ss
rcl
pop
cmp
gs
mov
sbb
out
ja
inc
mov
mov
fbstp
int3
sbb
mov
cmp
lds
aaa
push
pop
or
in
cmp
or
leave
ss
jmp
imul
cld
and
xor
mov
mov
leave
sub
out
push
xlat
rcr
pop
les
xor
jo
int
popa
out
movlps
sub
push
push
fstp
pop
mov
cld
(bad)
mov
iret
cli
iret
(bad)
test
dec
icebp
popf
jmp
imul
add
sub
inc
jae
cs
mov
out
dec
inc
les
popa
sbb
push
cmp
xchg
mov
clc
cmp
xchg
ret
rcr
inc
mov
lea
mov
dec
adc
inc
fwait
xchg
jle
and
mov
add
(bad)
sub
or
mov
pop
ins
xchg
es
in
es
jl
pusha
inc
add
push
push
inc
scas
pop
fidiv
cmps
icebp
cmp
inc
lea
xchg
mov
mov
mov
aam
ins
mov
xchg
sbb
loop
push
fmul
cmp
sbb
out
retf
pop
pop
shl
not
xor
inc
cmp
cmp
aas
jae
xor
mov
retf
loopne
mov
push
jno
inc
inc
and
mov
test
inc
jo
inc
lahf
mov
gs
stos
lock
lock
xor
fidiv
pop
sbb
in
sti
cmp
fs
xchg
pusha
inc
inc
dec
mov
add
dec
data16
mov
pop
mov
idiv
jg
outs
lods
movs
jbe
pop
mov
dec
ret
outs
ds
pop
outs
sub
push
xchg
retf
pop
xor
into
outs
push
xlat
add
and
rcr
inc
lods
inc
push
ins
daa
xor
call
cmp
call
sub
or
dec
fwait
scas
add
pop
aas
xchg
adc
xor
xchg
lea
(bad)
cmp
mov
mov
shl
out
sub
shl
xor
xchg
inc
mov
mov
add
call
add
dec
push
mov
cli
mov
push
cmp
mov
ss
sbb
sbb
mov
dec
retf
stos
into
xchg
stc
adc
pop
fwait
mov
rcl
jne
mov
and
ret
and
nop
iret
das
mov
fldcw
mov
add
sar
outs
sbb
inc
leave
(bad)
cmp
out
xchg
rcl
xor
daa
adc
in
scas
ins
daa
das
hlt
(bad)
mov
daa
gs
stc
and
mov
inc
and
cwde
push
mov
ds
icebp
ss
retf
sub
gs
xor
adc
pop
jbe
cs
jmp
mov
movs
mov
mov
(bad)
test
sbb
push
frstor
jmp
test
mov
int
call
iret
in
aad
add
push
test
js
fwait
sub
jl
retf
cmp
mov
push
imul
jne
xchg
out
aam
cwde
mov
xchg
mov
jmp
stos
push
pop
pushf
test
xchg
dec
add
fiadd
xchg
stc
and
leave
pop
scas
inc
ret
mov
xor
push
mov
hlt
sub
fstp
in
imul
outs
std
sbb
jnp
xor
pop
inc
xchg
pop
adc
dec
inc
add
mov
sub
add
or
fstp
cwde
ins
js
mov
scas
adc
push
jae
rcl
pop
(bad)
pop
in
push
je
cmp
(bad)
sub
push
paddsb
pop
jne
ins
jbe
jbe
dec
inc
rcr
loop
cmovae
fs
div
xchg
lahf
sbb
std
out
ins
pop
xor
lds
stc
stc
sti
cmp
mov
outs
mov
push
movs
call
arpl
sub
(bad)
or
scas
sbb
aam
or
fdiv
mov
into
loop
ins
xchg
daa
cli
xlat
shl
out
iret
(bad)
(bad)
mov
(bad)
mov
lea
arpl
cmp
dec
(bad)
out
outs
lgs
xchg
or
test
sti
in
pop
sbb
test
test
xchg
mov
dec
pop
adc
leave
mov
or
mov
push
(bad)
mov
xor
xchg
mov
xchg
test
sbb
sbb
jbe
retw
pop
push
arpl
jne
out
push
call
cmp
dec
jmp
sbb
sbb
xlat
fisub
mov
xchg
bnd
lods
sub
jmp
push
inc
sub
aad
cli
jge
mov
and
stos
pushf
les
rcr
cmp
js
push
and
aad
push
imul
pop
pop
ficomp
jg
push
ret
inc
std
fs
or
call
aad
mov
cmc
sub
fs
cmp
outs
daa
in
fstp
and
iret
add
dec
arpl
int3
aam
xchg
aad
and
or
in
out
xlat
popf
push
dec
dec
rcl
stc
stos
jo
cmp
mov
bound
iret
repnz
xor
cld
cdq
stos
and
lods
test
mov
lahf
inc
ret
cmp
aas
mov
mov
inc
lods
fstp
leave
xor
adc
(bad)
fstp
nop
test
xchg
bound
das
or
mov
inc
cmps
push
and
imul
or
adc
jb
jo
inc
rol
inc
jle
mov
fsubr
mov
test
adc
test
fmul
data16
test
out
inc
sbb
in
and
xor
call
mov
fistp
hlt
out
or
cmp
test
xor
jns
test
jno
push
pop
cmps
into
mov
jg
popa
dec
gs
sub
mov
jb
repz
imul
aas
and
cmps
faddp
sub
cmps
xchg
pop
dec
aaa
xor
in
add
xchg
dec
jg
cmp
and
mov
out
or
(bad)
inc
adc
rcr
repz
pushf
jnp
xchg
enter
dec
mov
add
outs
imul
movs
fcom
and
and
shl
scas
fidivr
mov
mov
ffreep
in
in
out
mov
push
push
mov
aam
pop
ins
sbb
pop
pop
dec
ret
xchg
mov
mov
hlt
nop
sbb
daa
cdq
in
jp
cli
pushf
push
out
push
jmp
(bad)
push
sti
scas
or
add
loope
adc
mov
dec
sbb
daa
cdq
xchg
(bad)
adc
aam
stc
adc
fwait
retf
hlt
outs
sub
mov
jne
add
sbb
outs
(bad)
dec
cli
jmp
push
addr16
mov
gs
adc
or
test
test
mov
jno
pop
inc
mov
jmp
sbb
push
outs
mov
std
push
ss
push
xchg
les
cmps
div
repz
mov
lods
and
add
cmp
mov
jno
cmps
movs
xor
lock
call
xchg
dec
mov
sbb
lahf
sub
cmps
cmp
cmps
sub
add
pop
push
mov
and
jae
add
in
add
scas
mov
outs
pushf
retf
pop
pop
pop
xchg
or
mov
cmps
xor
test
jne
in
out
out
iret
cmps
xchg
iret
sbb
adc
and
pop
les
jo
jae
dec
mov
add
retf
lods
addr16
cdq
push
add
push
sbb
dec
call
repnz
inc
aad
fld
pusha
js
dec
fdiv
jo
mov
ror
xchg
pop
jnp
ds
dec
inc
cmps
and
idiv
outs
pop
je
idiv
dec
repnz
mov
pop
shl
bound
mov
fisttp
rcl
in
mov
and
out
imul
xor
cmps
jecxz
mov
mov
pop
mov
jle
mov
dec
int
and
retf
pop
sbb
xchg
xchg
lods
mov
out
cmp
cmp
inc
mov
shr
js
loopne
inc
cmp
ret
out
arpl
pop
push
or
sub
sar
movs
fidivr
lahf
fimul
adc
in
test
fs
int3
aad
in
ret
mov
mov
add
push
xchg
and
clc
scas
and
inc
mov
mov
sbb
mov
adc
cmp
iret
mov
aas
mov
mov
inc
int
push
mov
xor
xchg
iret
pop
adc
movs
add
sbb
jle
fcmove
popf
pushf
int
pop
mov
outs
mov
int3
loope
popa
and
pop
test
cmc
cmps
mov
cmc
call
jp
dec
add
lock
aad
fist
call
retf
push
push
dec
push
call
outs
mov
scas
rol
popa
es
and
repz
ret
dec
mov
lea
mov
lods
movs
bound
xor
sar
xchg
sbb
das
loope
dec
mov
and
mov
pop
cmp
cmp
xor
pop
sub
push
popa
dec
ds
test
test
mov
in
mov
les
adc
data16
jp
test
inc
fidiv
inc
ins
(bad)
mov
(bad)
xchg
cmp
retf
sbb
sbb
pusha
cdq
in
cwde
xchg
mov
fisttp
outs
mov
lahf
jle
xor
xor
lds
rcr
outs
popf
add
ins
(bad)
push
mov
mov
stc
movs
nop
cmc
test
xor
scas
mov
cmp
adc
or
jns
fist
mov
int3
in
adc
ins
imul
in
mov
cmps
push
pop
icebp
jecxz
retf
out
jmp
rcr
ins
adc
fs
xor
and
es
mov
mov
repnz
sbb
adc
lahf
fnstcw
mov
sbb
and
dec
dec
mov
test
adc
cmc
or
sahf
mov
ins
fiadd
in
mov
fstp
mov
bound
xor
cmc
mov
stos
retf
mov
daa
jb
movs
cwde
dec
test
jecxz
mov
mov
xchg
cmp
push
nop
adc
retf
dec
leave
lock
push
sar
mov
into
in
mov
out
xor
movs
ja
jecxz
mov
inc
inc
mov
hlt
out
call
arpl
das
rol
sub
inc
and
popa
into
jecxz
mov
pusha
pop
add
(bad)
jmp
and
lock
or
mov
push
mov
add
sbb
pop
push
jp
sbb
adc
mov
and
ja
jp
jno
dec
pop
aad
fist
ffree
(bad)
mov
in
pop
mov
jmp
into
add
dec
leave
idiv
test
jmp
push
inc
popf
in
jbe
imul
xchg
or
push
mov
pop
cmp
xchg
xchg
jae
push
xchg
aam
ret
shr
shl
mov
or
push
repnz
retf
xor
repz
inc
mov
rcl
add
xchg
out
nop
(bad)
push
les
mov
iret
sahf
mov
lods
out
mov
mov
imul
sub
ins
mov
ret
jbe
lds
shr
jl
push
push
or
fist
or
or
lods
add
and
arpl
dec
lds
pop
push
mov
mov
les
jmp
xor
mov
xor
cmp
dec
jb
mov
or
cmp
xor
pushf
cs
adc
dec
mov
inc
out
push
xor
leave
jbe
lds
js
push
add
mov
test
out
sub
add
adc
cmp
mov
fimul
fcomp
sub
fs
idiv
cmp
loop
add
dec
retf
cdq
jns
adc
jae
sub
adc
pop
push
movs
loopne
mov
dec
cmp
dec
sbb
retf
sbb
jno
dec
jg
inc
stos
ret
enter
pop
in
sbb
mov
push
xlat
sti
ffreep
cmp
sub
jle
scas
jmp
pop
icebp
mov
lea
in
mov
pop
mov
lahf
add
test
aam
arpl
imul
xor
sbb
xlat
lds
out
in
das
aaa
stos
inc
call
pop
push
dec
test
jmp
push
mov
jo
sub
pop
mov
popa
es
pop
jle
push
cmp
idiv
daa
mov
xor
dec
jle
test
in
or
(bad)
mov
cmp
xor
test
das
mov
sar
dec
in
xchg
or
or
mov
lea
daa
into
sbb
dec
xor
lock
add
pop
out
push
xchg
scas
cmc
jo
or
gs
mov
sbb
xchg
fwait
test
int
fisubr
mov
cmps
vpsrld
mov
cmp
pop
xchg
repnz
sti
or
push
not
ds
pop
lock
push
cld
xor
jmp
sub
in
shl
xchg
jecxz
gs
jo
mov
jae
add
mov
and
inc
pushf
or
xchg
and
daa
pop
cmps
jge
into
(bad)
outs
push
inc
sbb
mov
retf
or
sbb
mov
outs
imul
sub
add
dec
adc
pop
movs
mul
or
xor
sub
(bad)
repnz
aas
xchg
(bad)
popa
ss
jne
aad
repz
pop
mov
mov
push
xor
sub
lock
or
dec
out
xor
rcr
push
mov
iret
and
in
pop
xor
test
add
lahf
mov
jle
or
lods
and
or
jbe
out
jp
dec
xchg
loop
movs
adc
dec
inc
jbe
push
mov
scas
test
out
lock
inc
(bad)
shr
fs
bound
push
hlt
add
mov
inc
ss
inc
fld
ja
mov
xor
xor
jecxz
sub
fwait
jae
stos
push
inc
xor
inc
add
mov
pushf
xchg
lahf
lods
adc
fwait
push
imul
hlt
outs
pop
and
mov
cmp
cmp
sub
shl
clc
cli
jns
lods
and
push
jae
arpl
cmps
inc
fldenv
clc
xchg
inc
retf
mov
push
jge
push
cmp
cmc
dec
jnp
or
jmp
mov
jmp
test
inc
ret
neg
jmp
cmp
adc
push
mov
or
pop
lahf
push
mov
int
adc
in
aam
xchg
push
xchg
sbb
xchg
jp
pop
fmul
repz
cld
test
in
aaa
(bad)
jbe
jb
xor
sbb
test
daa
jo
push
or
scas
fs
movs
stc
cmp
mov
enter
xor
mov
and
or
into
fld
retf
and
add
ss
jb
imul
cld
adc
rcr
sub
dec
call
push
add
xchg
mov
fmulp
inc
mov
sbb
scas
jne
js
sbb
outs
gs
pop
push
retf
pusha
adc
popf
dec
push
sub
std
inc
jp
sbb
ror
dec
cmp
movs
sub
pusha
adc
cwde
add
repnz
adc
fcmovbe
cmps
fild
nop
pop
xchg
push
xchg
pushf
mov
inc
imul
inc
add
popa
jmp
adc
fdiv
add
pop
or
cmp
push
jl
cmp
(bad)
ficom
scas
iret
shl
mov
inc
iret
mov
mov
sti
les
out
adc
sub
sbb
dec
retf
xchg
std
mov
test
in
push
test
nop
jmp
sbb
fld
inc
cmp
je
jo
push
cmp
pop
(bad)
addr16
sahf
dec
xor
retf
not
add
stos
test
mov
retf
xchg
out
retf
int3
push
ins
dec
nop
pop
clc
or
push
and
pop
dec
dec
pop
dec
sub
fsubr
stos
imul
sub
mov
cwde
shl
sbb
repnz
xchg
add
inc
xor
retf
lods
stos
mov
bound
inc
in
or
dec
ret
bound
mov
fwait
(bad)
mov
pop
mov
xchg
or
pop
movs
outs
js
push
fsubr
sbb
(bad)
stos
addr16
into
mov
push
or
adc
mov
mov
js
push
push
jnp
mov
jmp
cmps
dec
mov
cli
rol
jns
mov
sub
xor
dec
add
dec
jo
retf
cmps
jmp
jo
sbb
xor
sar
jns
and
cmp
push
pop
push
rcr
aas
test
adc
repnz
adc
sbb
bound
mov
(bad)
repnz
bound
icebp
inc
test
xchg
adc
cmp
xchg
ins
inc
in
arpl
jae
lea
hlt
mul
and
push
imul
mov
mov
cdq
jbe
push
movs
les
call
pusha
xor
out
popf
mul
cmp
pop
mov
pop
ret
mov
dec
out
loopne
pop
inc
xor
pop
xchg
dec
or
inc
enter
mov
in
push
inc
popa
imul
fcom
mov
imul
xchg
aad
mov
sbb
in
inc
in
inc
rol
je
xor
in
test
nop
xor
icebp
push
repnz
inc
mov
pushf
cmps
jns
rol
cmps
(bad)
push
sub
(bad)
fnsave
aam
hlt
add
int3
add
inc
addr16
inc
fcmovb
mov
in
or
add
es
outs
mov
pop
cmp
jp
dec
or
imul
movs
sub
push
dec
xchg
xor
dec
cmp
imul
into
xchg
mov
xchg
mov
add
mov
div
mov
jo
sub
test
cs
xchg
jg
test
out
mov
(bad)
movs
lods
ins
jbe
lea
jmp
xor
rol
pop
popa
cli
arpl
leave
arpl
mov
jo
jmp
mov
pusha
cwde
and
mov
jmp
pop
test
inc
sub
test
clc
bound
jae
out
ss
test
jmp
ja
inc
pushf
dec
push
lock
push
mov
out
std
jno
and
clc
push
inc
arpl
jae
in
lahf
xor
scas
jg
push
jb
and
cmc
cmp
dec
fcom
ss
clc
xor
ror
icebp
or
cmp
(bad)
xor
loope
mov
or
pop
mov
fs
test
add
inc
sbb
lds
pop
call
cdq
inc
pop
fcom
mov
mov
sbb
pop
(bad)
(bad)
fisttp
mov
jb
adc
cli
mov
stc
mov
mov
sbb
stos
cdq
xor
test
pop
cmpunordps
sbb
sbb
mov
sbb
or
adc
add
push
and
(bad)
outs
add
arpl
ret
out
inc
into
xor
or
mov
mov
sub
jo
jmp
sbb
arpl
loope
adc
imul
fwait
popa
out
(bad)
shl
jmp
cmp
repz
data16
cmp
pop
mov
jg
(bad)
push
out
push
xchg
inc
adc
and
pop
sbb
aam
mov
add
xor
add
and
inc
imul
sub
sar
mov
mov
stos
jge
mov
mov
mov
pop
fist
fist
outs
inc
push
mov
std
mov
inc
jmp
out
dec
xchg
lds
outs
sub
dec
mov
sub
push
ficom
cmps
inc
data16
bound
sub
movs
test
out
leave
imul
movs
adc
test
call
push
mov
jge
movs
ret
out
cmp
adc
loopne
in
out
and
cmp
scas
sar
imul
pop
push
int
popa
push
add
iret
cdq
and
std
out
dec
jo
pop
xchg
cmp
call
inc
es
shl
xchg
mov
mov
loopne
xor
sahf
pop
loope
jge
inc
icebp
cmps
inc
pop
(bad)
jnp
inc
pop
and
dec
or
scas
mov
cmp
in
out
fild
add
aam
add
jne
mov
outs
maxps
xchg
ror
out
mov
mov
imul
lea
dec
movs
mov
push
push
lods
adc
pop
mov
or
push
dec
push
lods
imul
lock
push
js
das
xchg
jbe
adc
jnp
dec
push
xor
pop
call
xlat
icebp
or
inc
jnp
xor
cmp
in
or
mov
shl
cs
loope
ins
dec
cdq
shl
xchg
loope
mov
rol
aas
fsubr
pop
imul
push
sti
rcl
dec
mov
fsub
call
hlt
xchg
fstp
mov
dec
test
adc
jo
pop
or
and
jmp
test
mov
sub
inc
adc
jmp
sar
inc
(bad)
(bad)
int3
mov
mov
push
(bad)
leave
out
data16
es
in
push
cdq
jmp
jmp
pusha
jns
mov
pop
xchg
pop
sbb
sub
arpl
movs
call
jb
dec
jmp
xchg
bound
push
into
div
cdq
sbb
mov
scas
stc
nop
test
sbb
mov
movs
jnp
pop
call
push
cli
push
inc
cmp
scas
call
sub
call
les
xchg
int3
movs
mov
ret
call
mov
push
jmp
pop
rol
movs
or
push
out
lea
test
jl
jmp
addr16
cli
fmul
cwde
xchg
in
rcr
sub
retf
push
and
sub
mov
rcr
clc
mov
shr
out
mov
cwde
cwde
mov
mov
mov
cmp
inc
cmp
ins
push
daa
sti
das
fnstenv
or
loop
ret
inc
clc
ss
xor
xor
inc
das
jae
shl
dec
pop
ins
sub
das
pop
imul
or
fidivr
js
cld
daa
(bad)
and
test
ja
cmc
aad
out
mov
(bad)
xor
xchg
enter
jl
cld
fadd
scas
adc
and
ins
mov
mov
(bad)
je
jmp
call
cmp
rcl
and
jbe
mov
xchg
inc
sub
call
outs
(bad)
jo
sbb
inc
shl
ss
cmps
mov
(bad)
adc
xchg
cmp
add
out
shl
add
push
sti
pop
cli
test
mov
add
mov
scas
jnp
push
sbb
sbb
test
or
and
xor
fs
movs
sbb
cwde
xchg
xchg
and
movs
xchg
lahf
ja
rol
jmp
loope
retf
sub
jbe
xor
jecxz
and
pusha
in
(bad)
sbb
call
cmp
jne
pop
mov
dec
pop
sbb
mov
sbb
xlat
ja
test
xor
repz
sub
std
sub
dec
adc
dec
add
cmc
loope
repnz
push
mov
xlat
push
aaa
es
push
dec
or
push
jg
jle
cmps
adc
dec
jnp
sbb
imul
sub
xchg
inc
xor
sub
cs
jg
adc
adc
inc
and
lods
fld
push
jmp
jmp
dec
loope
out
or
out
jmp
xor
push
stos
sahf
addr16
adc
test
fstp
xchg
clc
out
mov
inc
retf
or
sub
mov
jmp
pop
mov
jg
movs
mov
cs
lods
sbb
fild
sbb
popf
jnp
inc
jmp
cmps
div
jne
scas
fstp
add
test
sub
jbe
lock
or
fs
dec
dec
shl
pop
pop
add
movs
sbb
xchg
imul
jne
movs
add
lock
ds
and
dec
retf
lock
adc
fidivr
mov
adc
inc
fisubr
mov
call
and
loopne
mov
mov
add
gs
addr16
aad
ins
mov
pop
xchg
pop
jle
jbe
inc
jne
mov
aam
(bad)
mov
aad
mov
scas
jmp
jbe
loopne
fwait
call
hlt
int
fwait
push
add
lods
aas
sub
jns
cmp
out
movs
retf
cmc
mov
pop
shl
call
jecxz
pop
popf
inc
fs
out
pop
sbb
test
(bad)
in
xchg
add
fwait
sti
out
adc
leave
mov
icebp
pop
adc
cmp
jnp
inc
sti
jmp
cmp
inc
int3
stos
and
rcl
xchg
ins
retf
leave
fwait
push
pushf
repnz
lock
scas
push
(bad)
fist
push
add
mov
pop
xchg
push
ret
pushf
lods
push
cmp
mov
jge
movs
fcom
mov
pop
jbe
loope
jg
inc
xor
cwde
cli
xchg
xrelease
jb
lods
jge
jno
mov
mov
sub
loopne
adc
lods
mov
inc
leave
imul
ins
xchg
(bad)
jmp
pop
lahf
adc
sub
jmp
or
cmp
enter
nop
loop
loop
mov
add
repz
push
in
movs
ja
mov
test
daa
sub
test
iret
ror
imul
outs
fwait
cmps
daa
add
mov
inc
stos
mov
mov
imul
in
leave
pop
nop
or
fisub
or
sbb
sahf
jmp
push
ins
ins
stos
arpl
retf
xchg
pop
sar
(bad)
bound
mov
cli
sbb
call
das
fnsave
adc
and
mov
xor
ins
pop
sub
xchg
push
cmp
sbb
mov
xchg
cmp
mov
(bad)
leave
push
jns
and
pop
das
push
jae
pop
movs
retf
xchg
mov
cmps
push
xlat
adc
fmul
adc
xchg
retf
add
ins
icebp
shr
add
and
sbb
jp
aam
jmp
mov
cli
pop
pop
retf
mov
dec
mov
scas
jmp
rcr
xor
into
sbb
jae
in
cmps
popf
(bad)
mov
loopne
or
lock
and
enter
sub
sti
pop
and
or
sar
cwde
add
ret
pop
jmp
vdivps
lds
adc
in
xor
push
clc
xchg
ins
ins
repz
push
inc
ins
sub
fcom
mov
hlt
mov
cmp
cld
daa
jnp
pop
(bad)
fwait
push
xor
cmp
fwait
sbb
(bad)
xor
dec
mov
icebp
mov
mov
dec
popa
aas
aas
imul
pop
adc
xchg
xchg
movs
pushf
shl
xor
call
push
push
push
fld
cmp
inc
push
sub
or
inc
stos
loop
stos
jne
fwait
jmp
or
mov
(bad)
das
mov
mov
cmc
inc
mov
push
scas
xchg
lea
loopne
mov
pop
cli
imul
test
inc
test
push
aad
ror
outs
sbb
mov
popf
das
dec
ins
sub
(bad)
cmp
addr16
leave
xor
mov
mov
add
xchg
pop
call
xchg
push
xchg
js
pop
fwait
mov
in
ins
hlt
or
gs
add
les
lea
cli
les
adc
push
dec
xchg
mov
repz
call
mov
or
sbb
loope
jg
jno
inc
ss
pop
add
adc
push
xchg
xor
js
shl
jg
jg
and
push
mov
cmp
cdq
mov
imul
int
cmp
and
and
(bad)
pop
push
(bad)
xchg
lock
sub
or
mov
or
adc
cdq
cmp
nop
in
and
iret
pop
(bad)
das
add
inc
or
adc
stos
adc
sub
inc
push
leave
test
and
js
gs
push
xchg
mov
push
imul
call
mov
sti
aam
out
cmp
test
out
out
mov
sub
pushf
and
sbb
sub
cdq
test
loop
ins
aas
jle
movs
daa
in
jb
add
lea
add
xor
sub
adc
call
mov
lods
push
mov
loopne
jecxz
sub
inc
mov
sub
std
and
cmp
pop
xor
adc
ror
ffreep
adc
pop
inc
jnp
nop
(bad)
cwde
lock
xchg
xchg
xchg
push
enter
dec
call
xchg
in
lods
jmp
fdivr
add
add
cli
mov
xor
lods
into
xchg
push
mov
int3
xor
xor
jae
cmps
mov
mov
push
clc
test
fs
cmp
stos
stos
mov
xchg
xor
iret
test
pop
jg
pop
fs
je
sbb
in
inc
call
(bad)
cdq
dec
jmp
ins
add
scas
les
push
dec
std
adc
push
inc
dec
mov
cmps
scas
xchg
mov
test
lods
outs
sub
dec
jl
test
sub
push
sub
scas
(bad)
push
cmp
(bad)
xor
sub
icebp
mov
and
ins
clc
cld
cld
sub
cmp
inc
mov
aam
call
out
movs
movs
call
mov
pop
jge
popa
pop
stos
retf
cmp
xchg
js
shl
ret
xchg
fld
imul
mov
pop
movs
jecxz
mov
inc
mov
push
push
cwde
add
stos
mov
and
jle
fbstp
stos
xlat
cmp
xor
retf
in
pop
cmp
jmp
mov
cmp
bound
and
mov
fsub
sbb
sub
call
or
div
fldl2t
addr16
mov
xlat
push
les
stos
mov
pushf
lods
repnz
jne
dec
call
call
es
ins
stos
mov
mov
adc
stos
push
fdivr
xchg
imul
push
mov
xchg
jp
cmp
sbb
in
je
sahf
ins
add
test
out
fld
pop
or
inc
dec
out
inc
pushf
pop
loope
cmp
and
sbb
sahf
mov
and
push
call
push
mov
in
test
mov
ins
gs
pop
sbb
sub
jmp
sub
xor
cmps
xor
daa
xor
ret
inc
adc
aaa
ss
mov
ss
bound
sub
lahf
dec
and
xchg
retf
scas
mov
or
dec
jmp
jb
adc
pop
in
lahf
(bad)
(bad)
sub
mov
and
leave
xchg
push
mov
inc
jbe
imul
pop
in
stc
fwait
aaa
fdiv
push
fdiv
xor
xor
retf
jge
and
and
sub
pop
stc
dec
sub
je
and
mov
pop
xor
imul
xor
push
into
jmp
push
mov
jge
or
pop
adc
sub
lock
mov
mov
push
cmp
mov
xor
push
push
popa
sbb
cld
int
xchg
fs
push
mov
xchg
xchg
pop
sbb
xchg
lds
retf
fwait
test
loop
cmp
add
push
adc
mov
mov
xchg
jg
dec
push
jmp
dec
mov
stos
stc
xlat
and
add
fcomp
xchg
adc
xchg
cmp
nop
(bad)
fwait
sub
int
add
jmp
fisttp
les
pop
aad
(bad)
sbb
and
(bad)
in
pop
xlat
fwait
ds
push
jbe
mov
mov
shr
and
cmc
psrld
inc
xor
retf
test
push
and
cmp
push
inc
fadd
mov
rcl
out
stos
movd
pop
cld
cmp
push
dec
sub
call
xchg
into
inc
bnd
dec
jmp
ror
xchg
ret
push
es
jae
ins
pop
push
test
adc
out
dec
xor
jnp
dec
mov
dec
jl
das
inc
outs
dec
std
nop
cmp
inc
add
push
(bad)
js
cwde
cmc
ins
lock
movs
or
mov
inc
in
mov
and
mov
test
pop
add
adc
push
(bad)
fwait
ja
and
push
mov
movs
jae
iret
cwde
repnz
stos
adc
xchg
idiv
fwait
mov
mov
clc
mov
shl
cmp
mov
out
jl
mov
mov
jno
and
ja
das
xchg
inc
mov
xchg
pop
rcl
dec
dec
arpl
xlat
sub
jo
push
pop
seta
stos
xchg
ret
and
repnz
js
mov
dec
xchg
pop
jmp
test
jg
push
jae
test
test
nop
dec
cwde
cs
fs
cmp
call
pop
jnp
(bad)
mov
sbb
das
and
mov
pop
add
repnz
pop
fldenv
cmp
add
cmp
icebp
test
imul
(bad)
stos
and
int3
(bad)
inc
or
imul
rol
bound
lds
out
mov
dec
addr16
imul
xor
rcr
repnz
arpl
mov
push
mov
and
add
xchg
bound
ds
std
daa
(bad)
fiadd
jae
inc
in
adc
mov
cld
dec
mov
mov
sbb
mov
les
inc
or
pop
adc
imul
int
call
movs
ins
and
mov
inc
cmps
test
pop
jnp
xchg
jo
dec
iret
jbe
xchg
icebp
and
je
mov
pop
lock
or
out
sbb
sbb
mov
popa
mov
adc
inc
push
jo
adc
add
xchg
pop
outs
dec
inc
push
cmp
adc
arpl
dec
imul
ins
sar
ins
pusha
xchg
sbb
inc
in
inc
adc
fsubr
mov
xor
sbb
push
fst
jns
jns
push
pop
stos
into
cli
popa
in
dec
popf
gs
nop
jl
mov
dec
adc
cdq
mov
ins
pushf
xchg
xor
jle
sbb
mov
(bad)
or
add
mov
loopne
int
dec
daa
ss
movs
dec
mov
xchg
gs
or
sub
dec
dec
mov
imul
int3
push
mov
sar
mov
(bad)
in
xor
call
rcl
loop
mov
cmps
jbe
test
adc
jmp
mov
inc
pop
xor
mov
or
(bad)
jp
cs
rcr
stos
icebp
ss
inc
push
sbb
dec
jb
test
popa
loop
adc
enter
dec
xchg
jl
cmp
cld
jae
addr16
fidiv
test
call
ss
fisttp
repz
imul
mov
cwde
fisttp
or
and
icebp
dec
fdivp
push
pop
or
sub
sahf
dec
test
xchg
adc
dec
leave
jg
jl
sbb
or
inc
(bad)
mov
mov
stos
stos
sar
pop
fdivr
mov
adc
test
fs
mov
and
ins
cmp
pop
dec
inc
cmps
jle
clc
scas
dec
jno
or
push
stc
cmps
(bad)
or
stos
pop
jle
push
stos
sbb
test
clc
push
xor
mov
loopne
sub
add
cmc
fdivr
daa
aaa
pop
repnz
push
(bad)
sahf
lods
shl
mov
cmp
xchg
jmp
leave
mov
es
retf
idiv
repz
frstor
fmul
aas
jl
fs
fsubr
hlt
in
iret
mov
pop
push
jae
dec
mov
mov
mov
fdiv
mov
or
std
push
mov
or
add
xor
inc
(bad)
push
mov
(bad)
sub
lahf
xchg
fnstenv
and
call
cmp
and
sti
mov
ja
cmp
aad
inc
mov
lahf
xchg
sub
cmp
add
call
ds
daa
inc
enter
in
stos
out
addr16
in
jbe
dec
adc
and
mov
in
mov
aaa
jo
and
dec
cmps
fistp
mov
gs
pop
xchg
sub
scas
jns
das
ret
sahf
push
aaa
xchg
(bad)
lahf
fstp
loope
iret
mov
cmp
xchg
arpl
jecxz
clc
jmp
mov
and
dec
arpl
test
int
ins
add
pop
(bad)
test
ss
lock
gs
nop
hlt
mov
cwde
mov
gs
ins
test
out
cmp
xchg
fwait
xchg
fld
ss
and
outs
dec
lds
adc
ror
icebp
add
ficom
cmp
not
jg
icebp
rcl
icebp
add
sbb
cmp
inc
fild
push
adc
sub
mov
cdq
adc
std
jmp
xlat
sahf
xchg
mov
es
mov
daa
fwait
mul
ror
fstp
(bad)
jmp
cmp
sub
(bad)
jae
lds
jae
add
pop
xor
test
cmc
push
retf
xor
std
movs
enter
mov
pop
jp
fdivr
sbb
jne
fld
hlt
call
jbe
jbe
mov
mov
cli
sbb
in
cdq
or
cmp
jle
repz
outs
push
push
int
test
mov
push
lds
out
das
gs
cld
sub
imul
movs
in
cmp
mov
sbb
add
hlt
push
pusha
jne
cwde
and
push
push
call
(bad)
pop
sbb
aaa
mov
cwde
test
je
mov
jecxz
ror
repnz
mov
push
jecxz
pop
xor
gs
push
adc
push
aas
dec
mov
popf
dec
imul
mov
fcomp
fild
mov
lods
lods
nop
jmp
cdq
ficom
jb
pop
pushf
jmp
mov
mov
xchg
in
dec
out
pop
mov
nop
mov
or
out
mov
fs
jp
add
icebp
pop
aas
push
gs
sar
jp
ins
pop
xor
mov
mov
mov
lods
xchg
sbb
shr
sbb
add
sbb
add
adc
int3
add
sbb
nop
in
or
leave
push
jg
popf
popf
dec
or
dec
stos
jmp
(bad)
sub
lock
push
out
pop
bound
and
mov
fst
lahf
xor
pop
test
xor
cmps
cmp
stc
inc
jo
jbe
mov
aas
mov
(bad)
adc
jle
adc
test
jmp
(bad)
adc
or
pop
xchg
adc
iret
repnz
das
or
adc
mov
inc
and
outs
jp
and
mov
mov
test
popf
pop
popf
mov
stos
inc
xlat
and
cmp
mov
add
jns
xchg
adc
sub
jp
(bad)
fwait
es
and
xchg
pop
cmp
out
lods
shl
pushf
mov
and
clc
pusha
xchg
out
xor
mov
icebp
adc
xor
ds
sub
sbb
or
cld
movs
dec
scas
add
mov
stc
cmp
cli
add
iret
lea
in
fdivr
out
dec
xor
sbb
test
jmp
inc
mov
sbb
xor
cmp
mov
sbb
jp
fmulp
xor
and
ret
js
mov
call
sar
sti
outs
mov
ret
jge
jecxz
ret
pop
sub
sbb
mov
jg
aas
ins
int
(bad)
xor
mov
cs
mov
ret
int3
lods
sbb
mov
inc
adc
or
data16
or
out
push
(bad)
xor
ds
xlat
dec
fcmovb
rol
cdq
cld
xor
sbb
add
push
inc
fistp
dec
and
lea
xlat
jle
dec
bound
pop
shr
or
mov
mov
jl
(bad)
mov
aas
pushf
loop
stc
loope
cmp
lahf
cmp
and
inc
or
mov
add
or
sub
inc
mov
push
mov
pushf
retf
add
cld
mov
retf
aad
fcom
imul
ja
mov
push
int3
xchg
jge
pusha
dec
loop
inc
fwait
int3
test
xchg
pop
sub
outs
into
jg
ret
mov
inc
mov
test
inc
cwde
rcr
rcl
mov
in
jne
xor
adc
cld
or
clc
fild
mov
sbb
data16
in
add
adc
mov
(bad)
push
ret
pop
mov
int
aam
call
stos
jmp
ins
imul
int
sti
not
retf
scas
ins
sbb
les
aam
pusha
pop
pushw
cmp
inc
xor
int3
shl
cmp
jl
sub
mov
and
mov
jp
cmp
push
daa
je
repz
psrlw
or
(bad)
int3
call
push
mov
fisttp
sub
cmps
mov
mov
jmp
mov
repz
test
jae
jmp
push
inc
or
arpl
shr
jg
mov
xchg
sahf
push
int
ret
sti
fst
push
dec
movs
sub
and
sub
jmp
call
fmulp
rol
fucomi
mov
(bad)
pop
int
push
cmps
sub
push
cld
ins
cld
pop
mov
pop
mov
loopne
pop
pop
movs
jmp
dec
test
nop
in
mov
and
push
sbb
push
dec
xor
jo
scas
push
sub
sbb
aam
aaa
mov
hlt
leave
test
jo
into
das
xor
lock
bound
test
cmp
sbb
test
xor
das
clc
add
pushf
pop
mov
pop
fwait
imul
ins
push
repz
gs
cmp
dec
cmp
mul
mov
pop
push
imul
jb
add
shl
pop
pop
cmp
les
xlat
sbb
sar
movs
shl
rcr
inc
add
or
and
mov
cmp
mov
test
xchg
fcomp
loope
cmp
add
movs
aas
jne
in
pop
inc
(bad)
mul
or
rcl
and
mov
pop
outs
pop
fmul
pop
xchg
cmp
fdivr
(bad)
outs
loope
fstp
dec
add
out
and
rcl
test
and
mov
xchg
mov
aas
test
inc
ja
call
adc
test
adc
xchg
jl
add
mov
add
jb
enter
dec
fstp
and
xchg
nop
jne
mov
cmp
mov
pop
dec
fbld
jns
fnstenv
mov
mov
sub
or
xchg
push
out
call
into
loopne
sbb
xchg
mov
and
aam
movs
dec
xchg
mov
push
xor
stc
int
inc
lock
mov
cmp
pop
dec
jg
clc
popa
fidivr
ins
mov
mov
ja
int3
cdq
or
xchg
(bad)
aam
loope
imul
inc
sbb
es
jmp
lods
cmc
ror
xchg
xor
sti
sub
mov
cdq
jl
mov
lds
les
sbb
xchg
or
push
xlat
inc
jp
cld
adc
scas
ret
push
dec
cmp
mov
cmps
add
int
jge
sbb
cmps
stos
inc
aas
lods
mov
call
jns
dec
jbe
ret
push
lea
icebp
push
repz
dec
call
add
sub
dec
push
hlt
cmps
adc
jnp
cdq
adc
outs
xor
pop
std
ret
iret
mov
xchg
test
cli
inc
mov
shl
jnp
mov
aas
out
mov
xor
pushf
add
je
xchg
and
dec
js
lahf
stc
pusha
pop
push
loope
notrack
mov
call
push
test
mov
out
inc
sub
push
mov
mov
xchg
pop
push
cmp
and
push
xchg
aam
cmps
hlt
int3
mov
inc
dec
mov
xor
hlt
push
nop
daa
ror
or
mov
mov
test
test
fidivr
inc
jp
cmp
push
hlt
inc
adc
ret
cmp
inc
sub
push
push
pop
inc
dec
xchg
cmp
push
mov
addr16
data16
dec
push
sub
test
shl
mov
jmp
loop
push
inc
jae
or
push
jns
mov
adc
and
ja
xor
into
outs
rol
adc
jns
ds
enter
imul
mov
dec
inc
xchg
xchg
xor
stos
les
and
pop
add
neg
mov
dec
xor
push
and
and
mov
call
sti
cmp
lds
xor
pop
cmp
pop
xchg
clc
imul
xor
sub
inc
mov
ror
fadd
(bad)
test
jmp
sub
test
xchg
add
loopne
mov
sub
dec
push
xchg
jecxz
fstp
jle
dec
inc
es
or
stos
inc
outs
xor
mov
arpl
mov
(bad)
adc
call
pop
xor
or
movs
dec
aas
movs
pop
bound
int3
xchg
pop
dec
jno
jl
lahf
mov
enter
mov
mov
xchg
mov
mov
cs
repnz
jnp
jp
rcl
dec
sbb
sbb
data16
fldcw
call
and
sbb
mov
and
test
cs
cmps
lods
push
xchg
dec
movs
imul
bnd
ins
in
lods
pushf
push
inc
or
es
out
add
cwde
addr16
aaa
fidiv
shl
xchg
stos
xchg
mov
inc
jbe
cmp
pop
jp
bound
push
into
pop
pusha
into
cmc
adc
pop
add
sbb
call
imul
je
xchg
addr16
push
(bad)
or
leave
cli
and
repz
inc
js
fild
and
mov
mov
xor
sbb
sbb
push
dec
loop
jmp
mov
not
push
sub
sbb
fldcw
and
sbb
mov
pop
push
iret
xchg
lods
sub
push
add
mov
pop
jmp
or
or
aad
test
icebp
test
stc
pop
fisttp
xchg
mov
jno
mov
mov
push
jne
hlt
jo
aas
cli
push
pop
jns
adc
lods
js
repnz
out
adc
lds
cli
jns
imul
outs
clc
clc
adc
fisub
aas
mov
out
push
fs
mov
xchg
mov
dec
or
mov
lahf
outs
dec
cmp
push
call
cli
lea
pop
inc
push
std
fidivr
mov
rol
loop
std
jp
pop
mov
jl
jbe
sbb
(bad)
fmul
out
pop
test
in
mov
xchg
or
(bad)
mov
or
fucomip
cmp
adc
push
pop
js
sar
sar
dec
popa
dec
or
leave
repnz
jmp
cmc
jno
pop
xor
in
pushf
ret
add
test
js
add
mov
in
lods
xchg
and
inc
sbb
and
sbb
movs
test
int3
movs
enter
into
adc
jge
mul
enter
xchg
xchg
sti
repz
or
dec
sub
cmp
fdivr
push
or
aas
dec
dec
movs
in
fadd
pop
xchg
add
mov
xor
mov
mov
cmp
cmp
push
cmp
fisttp
aaa
fwait
sub
and
cs
stc
les
(bad)
sbb
push
inc
xlat
aad
sub
neg
aam
repz
cmp
aaa
shr
or
push
sbb
nop
pop
in
mov
into
into
or
pop
in
jmp
jno
inc
(bad)
and
fld
arpl
mov
xchg
jl
add
xchg
mov
mov
rol
mov
hlt
imul
sahf
jmp
(bad)
daa
xchg
mov
fdivr
mov
xor
xor
mov
in
sub
out
xchg
dec
das
jg
mov
call
pop
mov
stos
(bad)
and
jmp
aad
adc
data16
shr
pop
jle
cmp
test
mov
jns
lea
adc
push
cwde
jno
outs
or
mov
mov
sbb
or
adc
call
inc
dec
adc
sub
push
popa
sub
fisub
bound
aaa
stos
das
and
add
stos
xchg
shl
sbb
and
push
mov
jae
in
int
pop
cmp
hlt
movs
sub
ret
and
shl
xchg
jle
pop
sub
popa
add
clc
mov
repnz
add
inc
or
or
popa
xchg
adc
mov
aas
sub
mov
jae
mov
inc
sbb
aam
jmp
test
mov
pop
shr
and
adc
push
pop
loop
pop
icebp
and
pushf
xchg
mov
xlat
call
sahf
popa
pop
pushf
loopne
mov
rcr
neg
or
imul
dec
pop
jl
fistp
movs
dec
mov
sbb
leave
pop
push
sbb
mov
fdivr
pop
daa
clc
dec
mov
mov
mov
jo
add
(bad)
cmp
fstp
sub
shl
pop
sub
sub
les
push
and
xor
retf
push
mov
in
out
sub
ja
dec
repz
inc
int3
jg
imul
stos
stc
jae
jl
pop
or
mov
pop
push
pop
mov
retf
test
push
push
jge
cmps
adc
adc
or
add
push
push
inc
cdq
dec
cmps
lock
push
inc
adc
fisub
mov
ret
sar
jg
(bad)
stos
add
outs
addr16
rol
(bad)
popf
pushf
push
aam
iret
je
outs
xlat
inc
inc
(bad)
cmps
dec
outs
pop
pusha
(bad)
dec
enter
xor
xchg
mov
xor
scas
popa
inc
shl
imul
jp
stos
fwait
out
call
and
out
and
retf
repnz
hlt
dec
sbb
sbb
mov
stos
dec
fcomp
push
fcom
enter
cmps
push
and
in
sub
dec
repnz
sub
mov
cmps
add
movs
idiv
mov
das
dec
(bad)
fistp
mov
mov
test
mov
or
cwde
pop
pop
cmc
mov
data16
xor
pusha
mov
inc
and
inc
ret
(bad)
lods
shr
inc
adc
movs
data16
mov
dec
dec
icebp
pushf
push
dec
rol
cmp
adc
sbb
mov
(bad)
sbb
or
mov
cmp
sbb
jne
dec
mov
test
jg
inc
push
push
and
mov
loopne
pop
push
retf
push
or
xor
sahf
and
and
inc
mov
xchg
inc
xchg
cmovg
add
sbb
(bad)
sbb
push
cdq
xor
mov
pusha
and
popa
sbb
push
mov
or
ja
add
add
call
scas
and
or
xor
sub
daa
push
cs
push
dec
sar
in
push
ror
xchg
ret
xor
push
popf
fnsave
(bad)
mov
xchg
or
mov
inc
mov
arpl
sub
inc
jge
add
xor
xchg
dec
add
sub
and
sub
and
xor
mov
stos
sar
jmp
repz
mov
and
xlat
sub
pop
iret
or
and
xchg
aaa
add
adc
call
je
(bad)
into
mov
scas
xchg
das
pop
scas
mov
push
push
fwait
mov
xor
pop
pop
movs
inc
and
mov
inc
xlat
aam
xchg
cli
mov
sbb
int3
out
ins
test
mov
popf
mov
adc
iret
nop
retf
mov
jno
mov
xor
movs
inc
mov
dec
lock
or
adc
outs
fstp
stc
pop
push
shl
call
test
das
pushf
repnz
pop
(bad)
out
xor
lea
cmp
push
adc
mov
xchg
xor
lahf
cmps
push
add
mov
loop
sbb
test
in
ins
mov
ret
imul
jo
ds
or
fstp
add
ja
jmp
into
icebp
xchg
hlt
daa
sbb
mov
push
xchg
std
add
or
xor
mov
ins
ror
(bad)
(bad)
mov
cmp
and
not
outs
dec
lock
mov
add
scas
sbb
dec
sbb
dec
mov
or
mov
and
ror
jae
outs
sub
int3
push
fnsave
jns
or
fldenv
pop
inc
dec
cdq
add
dec
cmps
push
mov
outs
call
aad
lahf
pop
lock
out
adc
jb
push
mov
inc
xor
ss
aas
in
sub
xchg
fmul
retf
dec
xchg
xor
test
and
popa
inc
pop
mov
jecxz
push
enter
cld
clc
adc
pop
cmp
ds
mov
(bad)
movs
mov
ss
xor
xor
into
inc
fimul
cld
mov
test
cmp
inc
clc
and
xor
pusha
adc
and
inc
pop
adc
jne
jns
ficom
xchg
aaa
es
jo
in
push
push
retf
push
cmp
dec
jmp
jb
xor
std
xchg
arpl
not
sbb
dec
(bad)
ficom
fldenv
std
enter
or
dec
mov
int
xor
ja
mov
clc
out
cld
std
dec
mov
inc
sub
int3
lahf
jmp
int
test
sub
js
aaa
and
xchg
repnz
push
jne
les
pusha
inc
jb
popa
pusha
pusha
dec
les
imul
fsubr
jb
inc
and
xchg
sub
cmps
push
stos
(bad)
pop
cmps
push
sbb
xor
out
repz
add
push
cmps
mov
jbe
or
pop
push
fdivr
jl
int3
cli
jmp
adc
mov
neg
std
pop
mov
imul
shl
mov
lods
sub
mov
aam
inc
retf
mov
mov
xlat
mov
test
imul
bound
sub
sbb
mov
aaa
mov
mov
outs
mov
sub
cmps
pop
sbb
ret
xchg
cwde
addr16
and
pop
jmp
xlat
jmp
xor
retf
mov
dec
mov
inc
jns
dec
lock
lods
mov
sbb
and
sub
push
xor
fsubr
or
ror
std
jmp
inc
add
lock
pop
push
leave
fcomp
rcr
ror
fst
mov
in
gs
mov
(bad)
push
shl
sub
mov
mov
ficomp
fdivr
outs
xor
test
mov
mov
sub
sub
fcom
rol
cs
fwait
es
pop
ror
cwde
xor
repnz
enter
pusha
je
and
(bad)
aam
and
lock
pop
xchg
mov
test
popf
icebp
or
mov
sar
dec
imul
lock
and
push
paddd
jg
xchg
(bad)
pop
jle
xlat
enter
add
dec
int3
ror
out
xchg
and
xor
sbb
in
cmps
imul
xchg
call
jae
add
leave
xchg
mov
aam
sub
repz
and
scas
sub
push
xchg
mov
xchg
xchg
mov
pusha
call
xchg
jb
mov
adc
or
movs
cs
xor
dec
dec
test
or
jnp
int3
jno
adc
sbb
mov
es
mov
(bad)
jmp
into
dec
jle
mov
jmp
pop
push
or
aas
iret
sub
mov
int3
stos
xchg
or
inc
inc
lods
adc
js
loop
stos
test
push
sub
pop
xchg
xchg
daa
push
sub
cmps
pushf
retf
lods
ds
dec
xchg
cdq
adc
and
mov
ret
or
lea
cmp
lea
adc
ror
fistp
pop
aad
jne
mov
out
in
xor
or
aas
push
and
mov
sbb
cmp
xchg
mov
cmps
push
stos
fldenv
cld
cmp
movs
pop
pop
add
in
sub
mov
fist
in
mov
lds
sub
nop
sub
adc
(bad)
ror
seta
addr16
ja
call
bound
les
outs
fisttp
mov
inc
fcmovbe
jg
je
mov
mov
(bad)
mov
jge
cdq
mov
dec
jle
sbb
(bad)
loopne
pop
inc
dec
mov
(bad)
add
inc
icebp
shl
mul
(bad)
test
cmp
push
idiv
fucomip
xor
icebp
jno
mov
add
ins
inc
add
mov
jmp
fs
mov
loop
ror
and
rcl
daa
mov
xchg
pop
xor
sbb
lea
movs
(bad)
sbb
xchg
sub
cmp
pop
scas
pop
retf
cs
mov
iret
cld
push
repz
pop
shr
xchg
cdq
out
test
or
adc
pop
bound
cmp
std
mov
movs
adc
dec
imul
out
int
inc
test
out
push
cdq
mov
rcl
push
and
xchg
into
mov
fdiv
je
sub
cmp
xchg
lods
push
(bad)
jae
cld
cmc
add
test
adc
je
adc
loop
cwde
sahf
clc
xchg
mov
imul
add
push
add
jp
cmps
(bad)
inc
xchg
sbb
adc
pop
adc
mov
movs
inc
pop
clc
ins
pop
(bad)
test
cmp
fs
and
int
shr
mov
mov
(bad)
adc
adc
mov
dec
add
push
or
lock
ins
cmp
mov
mov
cmp
call
fdiv
outs
push
jl
stos
scas
cmp
mov
movs
call
or
cmp
xchg
test
popa
call
mov
shl
add
jl
xchg
or
fwait
add
dec
mov
xor
dec
les
and
arpl
push
jae
dec
xchg
xor
dec
push
add
ja
fstp
fadd
xor
mov
outs
pushf
ins
cmp
shl
(bad)
sub
sbb
or
mov
fisubr
adc
cmc
into
fwait
stos
inc
imul
rcr
in
(bad)
aam
dec
mov
cmp
pop
les
fstp
fiadd
adc
cmps
adc
nop
lods
outs
sub
and
stos
mov
fistp
test
mov
wrmsr
(bad)
hlt
push
leave
in
(bad)
jecxz
je
inc
(bad)
lock
fcom
popa
test
les
xchg
sbb
retf
xchg
and
aaa
add
mov
repnz
inc
cmp
enter
retf
add
arpl
sub
fcomp
imul
or
imul
or
sbb
fwait
push
adc
mov
jae
(bad)
pop
lahf
jb
adc
loope
cld
dec
sub
dec
fdivr
and
pop
sub
xor
popf
jns
imul
push
or
push
das
push
inc
or
sbb
neg
dec
add
nop
pop
and
pushw
push
out
jge
pop
add
push
out
mov
jp
fcomp
inc
or
pusha
popf
bound
adc
ret
cmps
dec
cmp
pop
xchg
pop
cmp
dec
push
inc
dec
pfrsqrt
rcl
mov
movs
fsub
pop
xor
stos
scas
mov
movs
jae
xchg
or
push
jns
jns
jae
shl
dec
add
icebp
jo
mov
in
iret
(bad)
ins
lea
add
aad
lods
ret
adc
cmc
fild
scas
xor
dec
(bad)
jae
shl
inc
mov
das
jns
pop
or
retf
push
inc
sub
(bad)
sub
push
xchg
icebp
jle
fmul
outs
out
push
js
dec
loope
pop
ins
mov
cld
ret
ins
inc
or
and
icebp
mov
pop
mov
les
cmps
into
inc
push
sub
div
mov
dec
repz
fwait
mov
lahf
stos
xchg
mov
or
dec
xor
inc
xor
loop
adc
rcl
or
jmp
mov
push
and
add
loop
pushf
xchg
inc
popf
test
retf
dec
fcmovu
mov
call
movs
sbb
cmp
jb
in
push
out
test
sub
inc
stos
(bad)
aaa
call
sub
out
out
cmp
and
inc
cmps
shl
jo
out
pop
sub
outs
mov
movs
and
or
sbb
add
pop
cwde
xchg
sbb
fistp
pop
pop
repz
cmp
into
out
add
cs
inc
das
or
push
and
or
mov
dec
mov
rcr
data16
outs
fidiv
add
pushf
and
dec
sub
xor
and
loop
call
cmp
scas
popf
sti
rol
mov
xor
jmp
dec
sub
mov
fdiv
add
imul
dec
mov
in
iret
jns
and
jne
xchg
add
cmps
test
clc
cs
dec
pop
sub
adc
das
(bad)
dec
xor
fxch
pop
mov
repz
cmp
scas
cs
push
cmp
jbe
arpl
add
mov
lods
mov
aaa
dec
imul
rcr
mov
inc
out
out
cs
sub
mov
mov
retf
sbb
cmp
add
push
fld
push
in
fdiv
dec
ret
mov
cmps
jg
adc
mov
rol
push
pop
ret
jecxz
mov
jo
movs
jmp
and
aas
push
push
push
xor
movs
test
iret
in
ds
dec
sar
pop
hlt
adc
sub
ret
jb
push
mov
dec
cmc
xchg
in
in
inc
cmp
fmul
sar
or
test
jns
mov
or
jbe
cmps
inc
cmp
pop
xchg
(bad)
cmp
cwde
test
and
ret
repnz
fst
xchg
sbb
popa
mov
mov
adc
out
repz
and
lea
lock
dec
ror
mov
in
stos
lahf
or
pop
xchg
repz
mov
jb
jmp
inc
jle
or
xor
test
adc
jg
jne
out
test
out
mov
mov
cmp
pop
fisub
movs
xchg
mov
sub
jb
inc
xor
or
es
(bad)
sar
jmp
xor
mov
dec
nop
lods
cmp
xchg
cmps
inc
mov
out
test
stc
add
outs
dec
mov
mov
adc
sub
jmp
jbe
movs
adc
push
jo
sub
xchg
push
(bad)
pop
add
bound
gs
in
int3
in
outs
sbb
jp
or
jno
dec
sub
pop
inc
lods
push
ret
pop
sbb
xchg
rcr
mov
rol
fs
dec
test
cmps
cmp
enter
je
dec
in
lds
cmp
adc
pop
data16
sub
(bad)
sbb
pushf
enter
hlt
sti
push
xor
retf
cmc
inc
adc
dec
xor
and
aas
cwde
sbb
call
dec
pop
jl
sar
xor
cmp
(bad)
mov
out
inc
xlat
jo
arpl
fidivr
or
bound
push
inc
cwde
data16
jmp
ins
push
and
or
add
or
dec
out
adc
xchg
jge
cs
jl
sbb
aas
lea
jb
push
xor
mov
arpl
dec
mov
repnz
mov
fs
(bad)
xor
(bad)
mov
adc
ret
shl
or
call
popa
push
jne
mov
inc
into
and
xchg
sysexit
fsubr
and
je
mov
inc
sub
jno
out
pop
mov
mov
nop
sub
fsub
in
jnp
add
xchg
out
xchg
fs
push
in
jne
sbb
mov
mov
xchg
js
sub
pop
mov
push
(bad)
enter
in
lods
pop
retf
mov
xor
icebp
sbb
outs
dec
push
xchg
jecxz
xchg
ins
or
ins
sbb
mov
inc
inc
or
ficom
pop
xlat
ss
sub
ss
sub
sar
xor
inc
popa
stc
pop
jno
dec
xor
sar
xchg
fsub
cmc
test
cmp
leave
push
pop
add
and
jnp
xor
loopne
mov
mov
and
loopne
or
ins
ror
push
les
(bad)
dec
dec
cmp
xchg
push
loop
adc
scas
or
cmp
dec
jne
in
(bad)
cmps
pushf
mov
popa
jnp
retf
mov
pop
cmp
cmp
scas
bound
pop
out
fwait
and
xchg
push
mov
fnstsw
jmp
fdivr
ror
dec
mov
adc
rcl
inc
ret
xchg
pop
pop
repnz
dec
repz
repnz
jg
jmp
fldcw
cmps
dec
arpl
xor
rcr
arpl
stos
sti
ins
jp
fwait
loope
fldcw
fsub
inc
int
ficomp
call
pushf
inc
sti
push
mov
popa
out
addr16
pop
push
cs
fs
pop
mov
inc
or
xor
adc
fsub
sar
test
cmps
cdq
sub
xor
mov
sbb
sub
mov
push
loopne
sbb
repz
mov
mov
in
call
nop
dec
les
outs
push
and
pop
mov
out
not
mov
adc
mov
lea
push
int
cmp
cmp
cmp
add
test
aaa
scas
fst
sub
xlat
test
loop
movs
ret
mov
jmp
xor
dec
js
xchg
xchg
ds
cmps
adc
scas
pop
div
pop
mov
outs
bound
push
repnz
mov
push
leave
mov
rcl
and
dec
dec
add
push
div
in
jmp
dec
mov
push
pop
aaa
lods
and
mov
retf
out
sbb
add
push
sub
retf
pop
adc
shl
fucomp
out
fdivr
fwait
mov
and
arpl
add
movs
cdq
push
lock
fscale
lahf
push
xchg
out
cmps
jns
push
mov
js
sub
sub
xor
mov
xchg
xchg
adc
mov
sub
aas
rcr
or
mov
loope
loop
xor
(bad)
aad
call
dec
jmp
nop
adc
fwait
adc
ins
(bad)
fimul
xlat
test
xor
mov
sub
rol
test
int
aam
out
dec
mov
inc
mov
mov
vscalefps
mov
aas
adc
sbb
clc
(bad)
call
xor
mov
sbb
cmp
jnp
sub
icebp
cmp
sbb
jg
out
lods
push
mov
rol
pushf
sub
(bad)
jecxz
push
lds
cmps
bound
sahf
add
inc
or
fsin
jmp
enter
repnz
pushf
jns
mov
loop
mov
jbe
mov
sahf
mov
daa
jg
or
out
push
out
jbe
mov
jne
fimul
or
sbb
aas
ss
push
cmc
mov
xchg
in
enter
into
test
(bad)
cs
sub
mov
or
xchg
inc
or
xchg
div
push
ret
jb
mov
mov
push
adc
nop
mov
dec
loopne
(bad)
push
ins
xchg
inc
jb
js
dec
loope
icebp
cmc
xchg
jl
jns
sti
mov
jno
loope
neg
push
pop
or
add
(bad)
shl
fnstcw
cdq
gs
sub
mov
pop
ds
cmps
imul
mov
aas
push
inc
outs
adc
iret
jmp
aad
sub
mov
mov
jbe
mov
cmp
test
dec
or
vmulsd
mov
pop
sub
lods
test
cmp
push
jbe
inc
mov
out
je
out
push
adc
out
or
out
xchg
shr
dec
jns
dec
ror
aam
xchg
dec
inc
inc
or
dec
adc
ret
pop
idiv
jmp
adc
imul
inc
jecxz
sub
pop
jle
push
xchg
(bad)
sbb
ins
jge
daa
push
les
mov
push
jmp
cwde
ffreep
cmc
mov
dec
call
pop
scas
push
inc
icebp
jmp
dec
das
mov
xchg
neg
xchg
xor
pop
loop
pop
ficom
xor
nop
mov
sbb
(bad)
fdiv
add
sahf
jb
ins
dec
retf
fadd
seto
adc
jae
bound
xchg
popf
push
sub
shl
dec
mov
cwde
pop
aam
pushf
leave
arpl
inc
icebp
mov
xchg
add
push
lods
mov
pusha
jle
loope
add
ret
out
mov
aad
xchg
sti
add
out
bnd
and
xor
(bad)
std
aaa
xchg
push
(bad)
out
jmp
dec
push
sub
or
mov
movs
jmp
imul
clc
sub
and
mov
out
aam
out
jae
inc
iret
std
fiadd
mov
or
push
add
mov
push
out
cld
mov
xchg
and
and
cmps
sub
std
mov
and
(bad)
xor
push
and
mov
stc
mov
pop
das
outs
sbb
jmp
retf
loopne
push
pop
mov
and
mov
lds
jle
add
push
cmp
stos
cs
ffree
cs
sbb
fild
jmp
push
jg
fist
fild
cmp
inc
pop
mov
xor
les
rcl
pop
call
adc
cli
push
cmp
sub
sub
imul
nop
cdq
dec
push
popa
inc
stos
pusha
fnstsw
mov
push
pop
in
ss
jo
jae
mov
jg
in
scas
test
xchg
sbb
mov
dec
mov
mov
rol
out
fidiv
out
pop
jp
lahf
dec
or
ja
sti
xor
movs
push
outs
mov
aas
sbb
int3
movs
out
mov
loopne
lock
sbb
jno
pop
ret
or
jecxz
scas
into
add
(bad)
mov
push
clc
add
fidiv
in
out
rcr
movs
mov
mov
mov
jb
mov
push
neg
sbb
pop
inc
icebp
in
or
iret
jp
neg
dec
jbe
and
loopne
outs
das
mov
add
bound
shl
scas
in
mov
addr16
mov
adc
or
test
cmp
xor
mov
mov
imul
ss
lea
cmp
fsub
jg
pop
mov
push
pop
cdq
jmp
inc
push
cmp
dec
mov
xchg
push
es
mov
jge
cmps
xchg
jb
adc
out
push
add
iret
push
repnz
cs
mov
xor
cmp
lods
xchg
test
push
and
adc
popf
and
jmp
mov
pop
mov
jae
outs
ror
xor
in
cli
aas
repnz
and
retf
mov
in
mov
stc
jne
je
cmp
mov
sub
and
enter
das
mov
or
sub
or
pop
push
out
loope
add
inc
or
sbb
xchg
lahf
and
xchg
lock
push
aaa
fst
cmc
stc
jg
jmp
aam
mov
inc
cli
add
add
dec
fistp
je
enter
inc
mov
stc
cdq
sar
leave
sbb
not
and
dec
(bad)
mov
popf
int
mov
js
sti
xor
pop
xchg
mov
fld
adc
mov
jae
hlt
jmp
push
cmp
sti
and
and
xor
aam
stos
(bad)
xchg
aaa
sahf
inc
push
push
mov
push
pusha
scas
add
shr
in
sbb
mov
sbb
int
jns
dec
addr16
jp
mov
cmps
aaa
pop
xor
and
push
nop
shl
jecxz
lds
jmp
(bad)
out
cld
xchg
ins
retf
(bad)
aas
ins
ds
lods
pop
sbb
shr
mov
sub
xor
jns
popa
movs
pop
je
js
push
ss
mov
xor
std
mov
repz
jge
ret
ret
adc
mov
push
mov
pop
lahf
cli
out
jecxz
daa
out
ins
test
jbe
shr
fmul
stc
push
mov
jns
push
mov
mov
add
bndstx
push
aam
je
dec
or
push
sti
in
repz
in
or
repz
retf
in
jbe
icebp
(bad)
mov
aas
repnz
mov
mov
in
(bad)
btc
retf
sbb
mov
out
ins
lds
add
push
outs
gs
aas
(bad)
mov
mov
mov
xchg
push
sub
cs
je
addr16
and
not
add
sbb
dec
loop
jecxz
aam
fisubr
mov
inc
out
adc
test
xchg
cmp
sbb
push
stos
inc
aam
int3
(bad)
rcr
sahf
out
or
or
mov
imul
stc
sub
ss
outs
inc
adc
test
dec
outs
div
jns
movs
cld
mov
inc
pop
retf
pop
ret
mov
stos
jno
(bad)
jnp
sti
mul
call
mov
retf
das
stc
fisttp
and
scas
adc
daa
movs
push
adc
push
push
push
mov
es
xor
jmp
pop
fsubr
sbb
imul
push
aas
and
jo
pop
xor
fidivr
movs
inc
jmp
xchg
daa
cmp
fst
shl
mov
es
bound
xchg
mov
xor
imul
dec
add
jecxz
loop
cmp
daa
out
addr16
mov
test
lods
xor
aam
sbb
outs
sar
add
(bad)
data16
cwde
xor
sar
mov
fsub
mov
popa
popa
cmp
ins
cdq
repnz
add
imul
cmp
ret
aaa
or
mov
mov
mov
cmps
jb
popf
in
daa
sbb
imul
xlat
xor
lock
jne
cmp
cmp
in
dec
mov
les
mov
fbld
mov
loope
vpshab
clc
ss
pop
in
ficom
cs
pop
jae
mov
fs
and
aas
inc
pop
out
push
imul
jmp
mov
std
sub
imul
scas
imul
retf
mov
pop
(bad)
shl
stos
cmp
imul
or
lods
cmp
xchg
fs
or
ret
jb
xchg
xchg
jecxz
jle
je
pop
outs
push
cmps
out
xor
mov
push
dec
sub
lods
int
jo
sbb
mov
dec
sbb
sti
jp
daa
inc
jbe
idiv
mov
in
push
shl
mov
je
movs
sbb
fist
nop
mov
inc
shl
or
int3
adc
(bad)
in
xor
cmc
and
in
push
shl
add
pop
push
movs
arpl
sbb
and
add
mov
mov
shl
sbb
push
popa
adc
rcl
pushf
f2xm1
enter
or
jns
pop
es
es
inc
xchg
cli
inc
cmp
mov
mov
lock
movs
and
jl
movs
jmp
daa
aad
jmp
leave
imul
adc
rcl
sub
outs
pop
js
jp
pop
clc
mov
jae
add
add
fst
fidivr
(bad)
jecxz
(bad)
ins
xor
pushf
cmp
pop
pop
pop
mov
(bad)
mov
std
pop
sbb
dec
out
push
inc
xor
sub
jmp
scas
add
lock
mov
jp
pop
adc
ret
mov
jne
mov
pop
stc
enter
mov
in
jecxz
jb
add
imul
lods
mov
movs
jg
pop
cmp
pop
inc
xchg
mov
mov
xchg
fisub
push
mov
mov
xchg
push
stc
jbe
(bad)
int
fcmovb
add
dec
push
aas
scas
(bad)
pop
outs
scas
fdiv
cli
xchg
jecxz
xchg
push
adc
jno
lock
loope
sub
mov
sub
test
rcl
nop
cmp
pop
sub
cmps
fist
rol
sub
test
outs
mov
call
(bad)
fidiv
cld
add
dec
mov
in
jae
or
test
fsubp
call
jmp
xchg
int3
xchg
jne
cmps
cmp
dec
(bad)
loopne
jb
adc
shl
jmp
imul
sub
bound
mov
frstor
xor
inc
and
jae
push
push
fwait
push
inc
sub
sub
xchg
aam
stc
loop
ret
or
inc
movs
inc
test
sub
mov
aaa
outs
out
scas
fcomp
mov
jp
mov
mov
or
adc
scas
add
out
push
jmp
cmc
add
push
icebp
ret
jmp
cmp
loope
push
repz
xchg
push
cmp
jmp
mov
int
sub
pop
std
or
lods
sub
xchg
lahf
push
(bad)
mov
idiv
(bad)
in
xchg
out
jnp
xor
loope
retf
stc
pop
or
jmp
mov
dec
imul
cdq
mov
push
icebp
adc
pop
push
fsub
js
jns
cmps
inc
jne
cmps
cmp
ret
jge
popa
mov
jo
retf
aad
stc
push
sub
test
sub
jle
pop
imul
inc
jbe
es
adc
(bad)
fisubr
iret
idiv
mov
xor
xchg
sahf
or
popa
sti
retf
pop
sbb
repz
dec
dec
lds
cwde
sbb
fdivr
sub
loope
lods
sbb
push
aam
fs
(bad)
pop
fdiv
shr
push
dec
push
cmp
icebp
add
sub
fwait
(bad)
cmp
jmp
and
inc
mov
sub
mov
cmp
scas
mov
dec
repnz
adc
es
sbb
xchg
dec
xchg
ror
je
pop
inc
add
pop
or
pop
add
push
dec
jo
jl
les
jle
sbb
adc
jecxz
jmp
push
bound
and
push
add
int
xlat
movs
pop
adc
sub
mov
inc
add
loope
(bad)
arpl
fild
xchg
mov
retf
dec
(bad)
stos
push
aad
aam
inc
addr16
jmp
das
neg
das
pop
add
icebp
neg
cmps
inc
sahf
data16
add
add
out
adc
je
das
fs
mov
iret
jmp
jl
adc
push
sbb
add
imul
in
dec
dec
sar
jae
adc
push
fadd
mov
adc
mov
in
movs
(bad)
pushf
iret
popa
adc
xchg
xor
popf
mov
push
xchg
mov
adc
jmp
xor
push
pushf
adc
inc
mov
and
sub
jns
mov
stos
and
in
dec
adc
sti
mov
int
addr16
lds
rcl
(bad)
outs
pusha
int
aad
jne
mov
add
and
or
xor
hlt
jns
mov
adc
cmp
test
popa
inc
inc
data16
dec
add
fcmovnbe
movs
sbb
mov
add
mov
jb
mov
inc
cmp
shl
lds
test
mov
dec
(bad)
and
pushf
push
stos
dec
or
(bad)
shl
and
(bad)
popf
inc
cwde
aaa
fnstsw
cmp
mov
mov
cmps
ins
dec
pop
cli
mov
push
mov
sbb
jecxz
or
jnp
dec
inc
jmp
or
out
ja
imul
outs
scas
mul
mov
int
sub
push
push
mov
(bad)
jbe
sub
in
xor
fidiv
test
ds
fcomp
jmp
outs
(bad)
push
movs
shl
lock
mov
or
popf
jg
add
lods
outs
es
and
cmps
out
scas
or
push
sahf
rol
xchg
sbb
ror
xor
jnp
fwait
outs
jg
xchg
xor
dec
push
shr
icebp
pop
mov
test
push
jne
mov
pop
push
xchg
mov
sahf
xchg
out
(bad)
aad
mov
mov
mov
ja
sbb
scas
(bad)
rol
aad
dec
(bad)
sahf
data16
test
fadd
push
std
or
ds
dec
mov
lods
xchg
mov
pop
pop
pushf
sbb
dec
leave
add
aaa
and
mov
gs
add
push
jo
fs
adc
enter
mov
gs
das
enter
shl
fist
dec
inc
retf
inc
mov
mov
xchg
sub
dec
ror
pusha
lods
std
push
out
mov
mov
sahf
popa
idiv
jbe
and
in
sub
sbb
push
test
pop
retf
dec
loop
iret
test
iret
ins
dec
sub
out
data16
adc
sbb
retf
lods
loop
jne
jo
call
retf
(bad)
fcmovbe
daa
or
mov
xor
mov
mov
cmp
shl
mov
fld
or
xor
inc
neg
retf
iret
in
dec
in
pop
into
daa
xchg
movs
jmp
push
push
xor
dec
jo
bnd
add
jg
call
cs
push
jl
inc
xor
icebp
imul
xchg
loope
sbb
and
or
and
inc
mov
cli
adc
(bad)
leave
sbb
mov
loop
into
rol
push
fs
imul
push
rcr
sub
sub
imul
xchg
pusha
int3
in
cmps
mov
daa
inc
out
arpl
clc
push
lds
or
addr16
xchg
mov
pop
in
icebp
jl
xor
push
or
and
lahf
test
add
out
je
pop
in
push
pushf
or
sub
mov
sbb
sbb
sbb
fisubr
xchg
(bad)
call
out
xchg
mov
cmp
daa
sbb
int
xlat
(bad)
mov
les
sbb
dec
repz
addr16
into
int3
xchg
idiv
fcomp
mov
imul
jo
and
adc
mov
mov
xor
pushf
push
xor
mov
aaa
xlat
outs
jne
in
aaa
push
cmp
lods
cmp
or
call
jbe
jno
jne
addr16
test
daa
(bad)
xor
sti
jno
mov
adc
outs
pop
les
int
test
in
sbb
(bad)
cmp
dec
call
imul
and
and
xchg
js
int
clc
sbb
mov
retf
inc
imul
sbb
inc
mov
retf
jnp
jns
(bad)
xchg
sar
aas
hlt
mov
jbe
mov
sbb
xor
inc
popa
push
sbb
mov
sub
inc
lahf
pop
(bad)
retf
test
or
(bad)
or
fimul
arpl
sahf
mov
retf
hlt
dec
int
xchg
xor
loop
test
movs
push
jge
xor
ja
pop
add
out
sub
loopne
add
inc
das
cmps
dec
xlat
sub
mov
sar
pop
mov
xchg
sub
jp
hlt
mov
cmc
movs
push
or
movs
push
div
in
mov
xor
ret
jno
cmp
mov
cmp
xchg
(bad)
lods
(bad)
gs
xchg
mov
rcl
inc
xchg
mov
dec
idiv
and
std
aaa
repz
mov
fdiv
cld
idiv
cli
jno
scas
and
iret
inc
mov
dec
add
xchg
cdq
push
xor
or
hlt
mov
gs
cwde
sahf
or
push
or
or
or
bound
xor
mov
je
es
sub
(bad)
out
jne
pop
or
das
mov
inc
adc
sbb
mov
pop
loopne
mov
lods
bsf
rol
sbb
xabort
mov
ret
in
aaa
sub
out
mov
movs
jmp
push
rcl
pusha
ror
aam
stc
jmp
pop
mov
rol
add
mov
sbb
add
adc
pop
jge
shl
jecxz
(bad)
xlat
(bad)
and
dec
ins
fldcw
and
mov
pop
sub
jmp
pop
fidivr
pop
push
dec
aaa
sar
sbb
les
cdq
ins
cdq
cmp
scas
push
mov
push
mov
xchg
push
lds
int3
jbe
xchg
xor
test
pop
jne
data16
or
fsubr
mov
dec
inc
fmul
pop
inc
sub
data16
into
ds
mov
daa
ret
cmc
mov
sbb
push
jne
dec
xor
es
xchg
movs
pop
push
push
xor
xor
repz
pop
rcr
xchg
movs
sbb
add
inc
retf
cmp
mov
ror
dec
pushf
jns
lock
out
jmp
jne
push
jmp
adc
loop
jo
fld
stos
xor
je
and
mov
pop
test
jns
push
sbb
(bad)
cli
(bad)
sub
sub
aaa
ja
fdiv
cwde
stc
test
jle
lock
data16
mov
fimul
loopne
mov
pop
movs
ds
pushf
sub
outs
inc
sbb
sahf
cmp
loopne
stos
xchg
push
xlat
sbb
shr
push
jnp
jns
jns
cli
cmp
outs
imul
test
add
rol
ret
call
das
push
mov
es
dec
inc
leave
adc
cmp
ret
ror
shl
mov
ss
dec
dec
jmp
push
adc
sub
dec
inc
scas
mov
retf
add
lods
pop
inc
dec
adc
fwait
ret
add
shl
rol
movs
sar
cmps
and
les
sub
cld
push
push
sar
into
sbb
mov
pop
out
push
cmp
dec
cmp
fsub
aaa
je
jno
retf
mov
fsubr
sub
test
int3
xchg
cmp
mov
pop
jae
data16
nop
sbb
mov
std
icebp
jo
(bad)
jle
ret
add
xchg
xchg
hlt
xchg
cmc
js
fs
loop
sbb
push
adc
cmc
jp
pop
std
mulps
lods
sbb
shl
mov
xchg
xchg
inc
mov
fbld
jg
jecxz
and
sbb
in
inc
xchg
sbb
stc
popf
pop
push
jb
xchg
sbb
out
xor
into
mov
mov
in
mov
push
jp
fs
sbb
clc
shr
cwde
dec
xchg
dec
pop
pushf
push
popa
cmp
pop
inc
idiv
dec
cmp
dec
dec
dec
mov
aam
lock
xor
mov
cmc
pop
test
jl
push
or
hlt
call
mov
pop
aad
out
les
fadd
jns
call
imul
stos
inc
push
mov
ins
pop
nop
out
push
cmps
jle
sub
mov
pop
or
and
nop
inc
retf
cmp
pop
repz
cmps
in
mov
add
xor
xlat
push
jbe
fadd
call
and
cmc
mov
sub
pushf
xchg
nop
pop
sahf
sub
fbstp
inc
mov
arpl
mov
loop
mov
cmps
cdq
pop
(bad)
stc
jmp
mov
jno
mov
xor
cmp
push
loope
in
xchg
inc
iret
and
mov
stos
jp
retf
jmp
cmp
sub
shl
arpl
jle
arpl
pop
das
push
cmp
jl
inc
mov
mov
push
pop
in
push
xchg
(bad)
push
loope
inc
mov
repnz
pop
stc
lock
in
xchg
fild
pop
inc
add
je
cmp
ins
in
mov
pop
or
xor
pop
mov
mov
jmp
scas
repz
mov
lahf
mov
cmp
push
int
loopne
pop
sbb
jp
test
shl
in
les
mov
bound
aaa
data16
mov
mov
out
cmc
out
fld
(bad)
ret
iret
xchg
jae
jl
cmp
cmp
pop
cmp
sub
loope
dec
fwait
xchg
push
cmps
jp
sub
xor
inc
inc
xchg
inc
xor
call
mov
scas
push
push
inc
outs
adc
cs
ficomp
pop
jp
pop
dec
mov
jmp
adc
aad
into
mov
fsubr
dec
div
dec
jge
mov
mov
std
test
pushf
aad
xor
test
mov
inc
or
repz
xchg
mov
outs
xlat
adc
cmps
inc
je
repz
mov
div
(bad)
stc
cmps
ja
mov
in
mov
rcl
inc
jae
cmps
sbb
test
mov
int3
loopne
mov
xor
or
scas
push
inc
das
add
mov
ficomp
xchg
or
and
aaa
stos
jno
inc
mov
or
mov
or
pop
inc
lods
iret
in
sub
test
ins
dec
jp
dec
out
adc
ja
mov
mov
jmp
(bad)
pop
jns
cld
mov
adc
add
xor
idiv
dec
(bad)
jmp
sbb
push
mov
lods
shl
cmp
leave
mov
fwait
pop
(bad)
cmps
sbb
mov
fistp
xchg
loope
xchg
faddp
xor
cmc
adc
pop
fadd
jle
les
sbb
shr
xor
ins
fild
fist
mov
enter
std
out
pop
jae
scas
inc
adc
shl
inc
je
ss
and
pop
adc
in
jp
mov
mov
or
loopne
cmp
jno
inc
and
cmc
inc
cmp
aas
std
mov
push
inc
dec
add
and
sbb
test
lds
and
mov
jo
int
ror
cmp
popf
xor
gs
and
daa
jae
mov
xor
sbb
mov
test
pushf
(bad)
and
mov
icebp
jnp
jo
stc
inc
inc
jp
jecxz
out
mov
dec
adc
mov
in
and
jmp
popa
cmp
ins
adc
push
inc
iret
mov
cmp
pop
adc
repz
cmp
jbe
dec
xchg
gs
mov
push
pop
mov
sub
imul
or
fld
pop
out
shl
ror
std
add
bound
std
inc
data16
and
in
adc
mov
cmp
mov
add
stc
ins
lods
rol
mov
and
sub
test
jno
hlt
(bad)
pop
fwait
stc
mov
imul
dec
in
ins
mov
and
mov
jmp
push
add
push
pop
or
sub
push
aas
hlt
sti
lods
movs
pop
pop
push
mov
adc
imul
lods
clc
mov
retf
jmp
imul
div
jmp
pop
xor
jmp
sbb
dec
pop
int
push
je
ret
push
sub
cwde
xor
pusha
shr
jb
mov
mov
aad
xor
neg
mov
rol
mov
xchg
fisttp
sub
in
add
cmp
cmp
xor
movs
jns
xchg
ror
inc
mov
and
ds
push
out
or
add
(bad)
push
and
push
mov
pop
nop
xchg
pop
jmp
mov
push
ins
push
sub
sub
and
loope
clc
push
or
add
xor
sub
ss
loopne
popf
ffree
outs
xor
fs
sti
xor
pop
popa
xor
les
dec
call
sbb
mov
dec
mov
sbb
mov
fild
xor
ret
xor
jmp
add
xchg
call
(bad)
std
fidiv
or
lods
jp
add
xor
jno
dec
in
add
gs
or
ret
sub
mov
mov
lds
ud1
adc
aam
sti
inc
lahf
fmul
mov
mov
mov
push
icebp
pushf
xchg
push
pop
ins
fstp
icebp
jecxz
ins
(bad)
cmp
add
jg
ret
cmp
outs
mov
(bad)
dec
outs
aad
mov
and
cmc
dec
nop
hlt
ss
ret
stos
out
sbb
imul
mov
xchg
movs
xor
sub
les
icebp
adc
inc
into
out
into
ds
(bad)
in
xlat
gs
repnz
icebp
dec
repnz
hlt
pop
cdq
cmps
ds
sbb
pop
add
ja
movs
sub
sub
movs
and
inc
mov
jle
es
pusha
fbstp
popf
popa
nop
jp
jo
mov
mov
popa
cmps
jns
inc
or
xchg
call
mov
imul
ins
adc
jmp
mov
add
pop
std
add
jno
(bad)
jmp
or
hlt
inc
dec
out
bound
jp
imul
jge
sbb
or
ffree
pop
icebp
xor
xchg
out
pop
pushf
aas
call
cli
or
ds
mov
xchg
push
sub
dec
xor
or
pop
mov
dec
cmp
daa
fcmovbe
fstp
int
js
xchg
les
div
inc
or
enter
dec
retf
or
jmp
out
mov
mov
mov
cmp
jne
inc
sar
(bad)
enter
sbb
div
repnz
rcr
mov
add
pop
ret
mov
add
fild
in
mov
fistp
cmps
cwde
jno
fiadd
xor
jbe
or
push
pop
xchg
out
jns
cdq
adc
add
jne
out
and
test
jg
cmp
pushfw
sub
std
mov
pop
inc
cmc
or
punpcklbw
(bad)
jo
mov
sbb
(bad)
inc
jp
ds
data16
cld
clc
stos
sar
and
lods
(bad)
jne
neg
xor
(bad)
in
(bad)
out
cmp
push
xor
push
int
xchg
pop
sub
gs
and
pop
jno
jp
push
dec
and
pop
fldenv
scas
dec
inc
stos
xor
mov
test
fiadd
xchg
ins
dec
adc
dec
shl
das
enter
cmp
mov
dec
mov
pop
imul
inc
mov
jno
icebp
mov
out
das
sbb
ins
jae
pop
jle
pop
int3
sbb
out
jbe
mov
fiadd
retf
int
imul
lock
push
aad
jne
adc
mov
inc
fs
sub
dec
adc
out
dec
dec
ins
in
inc
nop
add
and
cmp
mov
push
sub
call
inc
dec
mov
dec
mov
retf
dec
retf
jmp
fs
out
xchg
inc
pop
inc
mov
jns
hlt
xor
mov
das
push
jl
xchg
jbe
bnd
fisubr
hlt
push
lock
cmp
scas
and
mov
inc
cwde
scas
pop
push
and
aam
add
mov
lods
arpl
retf
test
rcl
mov
loope
js
sar
mov
fsubr
dec
jo
shr
scas
mov
push
xchg
xor
adc
scas
mov
and
mov
mov
add
je
inc
sbb
(bad)
pop
ins
icebp
adc
add
mov
enter
mov
sbb
stos
pop
pop
mov
pinsrw
aad
push
adc
cmp
push
mov
loopne
loope
or
fwait
test
ret
(bad)
mov
mov
jns
enter
cmp
or
lods
sahf
xchg
or
outs
out
push
pop
sbb
pop
in
inc
out
mov
mov
pop
pop
pop
lods
adc
pop
js
pop
push
pop
jbe
push
push
dec
mov
mov
sub
sub
fnsave
shr
push
dec
mov
fiadd
pop
mov
arpl
jecxz
sbb
icebp
xchg
pop
jp
repnz
gs
xor
jle
ret
test
je
test
sbb
and
test
movs
out
movs
rcr
push
out
cmp
icebp
sbb
pop
es
stos
push
inc
popf
loop
cwde
xor
add
arpl
xchg
aas
aas
and
push
dec
mov
mov
adc
xchg
or
adc
movs
xor
mov
mov
retf
sub
dec
imul
xlat
pop
sub
and
mov
sub
mov
add
scas
dec
push
sti
dec
adc
cli
pusha
xchg
jge
mov
sahf
push
(bad)
int
inc
cmp
sub
sti
jb
and
or
mov
popf
mov
inc
ja
sub
js
icebp
mov
icebp
push
into
inc
dec
int3
dec
add
and
out
xchg
xor
adc
and
ficomp
sbb
inc
call
ret
mov
(bad)
out
mov
pop
add
sbb
sub
or
jo
cwde
js
stc
and
jae
dec
inc
out
test
xchg
into
outs
les
dec
cmc
xor
jmp
add
jb
loop
test
pop
xchg
pop
lds
fldenv
scas
mov
ja
xchg
cmp
mov
or
in
mov
outs
inc
test
cmps
pop
or
pop
std
mov
cmps
loop
call
sbb
ja
mov
fadd
ja
push
jmp
and
sub
dec
add
jge
jns
xchg
adc
adc
mov
cmp
das
push
test
int
in
jb
mov
sub
pop
shr
dec
mov
fidiv
push
xchg
nop
movs
add
cmps
outs
cmps
cmp
shr
aaa
sbb
cmp
push
(bad)
pop
aad
stc
inc
scas
out
cli
test
fadd
pop
jnp
dec
jmp
sbb
lahf
mov
adc
pop
movq
xor
mov
xchg
mov
inc
pop
mov
mov
fnstsw
out
jo
adc
push
lods
addr16
mov
jnp
xchg
sub
call
push
data16
jge
cwde
outs
enter
inc
mov
shl
jae
fdivp
test
int3
sub
retf
jns
popa
cli
sbb
cmp
test
ret
jp
inc
std
jno
daa
mov
leave
neg
xchg
loope
fild
test
stos
xchg
daa
bound
pop
mov
jmp
gs
cmp
adc
sahf
lahf
test
pop
push
pusha
outs
xor
not
xor
xchg
sub
mov
cmc
aas
push
push
push
test
jg
push
jecxz
adc
jmp
mov
ret
movs
push
out
ret
pushf
inc
sub
sub
xlat
add
stos
mov
mov
retf
add
out
sub
dec
dec
push
test
popa
(bad)
daa
fcomp
ficomp
leave
je
mov
or
nop
mov
dec
jnp
mov
and
xor
ficom
mov
pop
mov
fnstenv
xchg
or
xchg
shl
into
dec
and
xchg
or
aaa
fst
adc
jb
popf
fcom
in
mov
fcmovbe
xchg
das
push
(bad)
cld
cmp
in
in
into
sub
and
in
out
inc
iret
repz
lds
sbb
jmp
movs
loop
fst
sbb
and
mov
popa
cld
add
or
ficomp
push
stos
add
mov
iret
jb
push
pop
and
movs
jae
loope
jmp
ret
mov
xchg
jb
inc
fucomi
in
inc
mov
push
cs
rcl
mov
push
xchg
lods
ficomp
es
cmc
cmp
push
mov
ins
sbb
gs
scas
daa
cld
mov
daa
inc
shl
fwait
test
sub
pop
push
xlat
mov
sub
mov
mov
cmp
ins
jl
fisub
scas
and
push
scas
sbb
call
call
imul
std
or
retf
in
pand
ret
add
jge
add
outs
jae
xchg
dec
mov
shl
pop
stc
rcl
jge
movs
sub
mov
sub
sub
sub
fdivr
cmc
pop
ret
push
outs
mov
jbe
pop
mov
xchg
cld
jge
pop
cs
fiadd
int
addr16
test
inc
add
cmp
inc
inc
test
rcl
lea
push
scas
lea
push
dec
pop
xor
inc
rcr
outs
or
mov
mov
pop
lea
sahf
adc
imul
push
inc
xchg
sahf
cmp
shr
mov
in
stos
lahf
add
imul
popa
push
mov
out
cmp
cwde
mov
cmp
fsubr
ret
cs
sbb
sahf
adc
adc
dec
ret
mov
retf
fistp
xor
lods
sbb
mov
jg
ss
je
mov
stc
fmul
fld
xchg
inc
mov
xor
fwait
mov
push
das
stc
xchg
sbb
jl
pop
sti
dec
push
push
adc
outs
add
push
in
sbb
out
push
(bad)
mov
lahf
lock
dec
jecxz
cmp
mov
into
movs
mov
or
jmp
xchg
sub
pop
inc
cmp
xlat
imul
sub
scas
mov
nop
mov
dec
or
push
cmp
jp
pop
stos
push
sub
mov
push
fldcw
nop
dec
jae
out
out
loope
pop
fcomp
call
aad
in
stos
repnz
aas
add
and
ins
daa
retf
jmp
in
cli
jo
mov
push
push
inc
out
imul
inc
popa
mov
cmp
sahf
ret
fcom
pop
rcl
xlat
xchg
jp
cmp
xchg
push
xchg
mov
inc
push
add
add
mov
xor
enter
mov
mov
mov
mov
test
retf
ja
xor
sbb
imul
jle
pop
cdq
stc
fistp
and
leave
stos
ss
push
push
cmp
or
cdq
dec
(bad)
mov
xor
push
ror
cdq
and
scas
ds
add
int
mov
aaa
in
ret
dec
addr16
dec
(bad)
mov
ins
imul
lock
and
(bad)
mov
nop
(bad)
fsub
xor
push
push
xchg
mov
push
xchg
dec
call
sbb
sub
rcl
cmps
in
pop
cmp
xor
lods
cmps
out
sahf
sub
fistp
sbb
rol
xchg
addr16
lods
stc
and
ror
fst
dec
jo
loop
les
outs
in
sbb
jmp
add
push
fisttp
push
jmp
(bad)
out
push
mov
out
and
push
pop
js
aas
xor
out
jle
stos
mov
adc
push
dec
sbb
pusha
in
(bad)
jae
inc
push
inc
jo
retf
and
or
jg
cdq
inc
aam
add
mov
mov
rol
out
or
xchg
jmp
jo
hlt
or
xchg
ret
fldenv
hlt
inc
cmps
shl
jl
inc
adc
bnd
jmp
jle
adc
movs
jl
gs
fild
and
call
ret
loopne
icebp
cmp
dec
or
push
mov
and
and
dec
adc
imul
cli
push
push
das
push
mov
enter
cmps
call
dec
or
or
fist
sti
or
sub
sbb
mov
daa
inc
pop
(bad)
les
adc
test
and
or
fldcw
mov
sbb
mov
mov
bound
push
pop
ds
imul
or
repnz
frstor
ins
in
loopne
or
les
test
jmp
adc
(bad)
push
or
mov
scas
xchg
gs
and
sti
scas
repnz
pop
std
mov
xchg
(bad)
mov
pushf
repnz
xchg
mov
xor
push
fild
dec
add
push
push
repz
sub
mov
push
outs
gs
dec
pushf
xchg
or
lahf
ret
movs
push
mov
push
push
lea
out
les
bnd
sub
xrelease
(bad)
cmp
cmps
hlt
loope
jbe
cmp
mov
mov
pop
sub
adc
sub
and
add
xchg
sbb
ins
push
(bad)
cld
call
outs
mov
test
(bad)
xor
repnz
ret
dec
inc
cmp
aaa
lea
arpl
xor
in
shl
test
(bad)
dec
stc
arpl
ja
jb
mov
push
mov
js
cmp
addr16
and
and
mov
cmps
out
sub
outs
pop
xchg
pop
lea
js
cmps
cmp
sti
out
inc
movs
xchg
pusha
ins
pop
shl
or
pushf
mov
lods
or
pop
mov
ret
mov
lods
retf
js
mov
fistp
pushf
pop
shl
add
rcl
add
pop
xor
dec
add
rcl
push
pop
cmc
mov
sbb
out
mov
xchg
dec
xchg
pushf
jno
leave
cwde
test
hlt
mov
inc
pop
mov
scas
dec
jmp
lds
jne
jmp
pop
ja
iret
outs
jecxz
popa
pop
sbb
rcr
xchg
gs
xor
repz
stos
xchg
xchg
fadd
inc
sub
mov
sbb
sub
loop
xlat
(bad)
leave
inc
mov
mov
clc
lods
xchg
clc
dec
test
lods
movs
jno
xchg
push
(bad)
(bad)
in
mov
idiv
ins
hlt
ret
popa
sbb
xchg
xchg
fsubr
inc
and
outs
inc
cwde
jmp
cmp
push
mov
mov
cmp
inc
adc
pop
in
pop
repnz
add
push
jmp
dec
adc
(bad)
xor
adc
push
popa
xchg
push
and
outs
mov
out
das
hlt
mov
shl
and
add
out
xor
and
push
fdivp
mov
add
dec
sub
cmp
pusha
and
push
inc
adc
jg
push
arpl
cli
nop
mov
daa
jmp
push
cmp
mov
pop
and
mov
inc
xchg
push
push
push
aaa
xchg
inc
imul
pandn
aaa
or
push
retf
rcr
dec
fld
shl
cmp
fdivr
cmp
(bad)
data16
enter
pop
pop
test
test
int3
pop
add
jecxz
lahf
cmp
push
adc
lods
mov
cdq
jmp
jge
and
push
cmps
movs
int
mov
lock
sbb
pop
xchg
enter
jae
mov
les
push
and
push
xchg
cmp
sub
jns
cmp
jmp
scas
lds
mov
das
mov
in
pushf
add
push
dec
js
movs
xchg
cdq
arpl
inc
dec
fcom
sub
push
imul
icebp
jecxz
stc
(bad)
arpl
xor
inc
mov
or
xchg
push
add
mov
bound
cwde
mov
pop
es
pop
movs
dec
cmp
ror
or
add
mov
push
or
pop
xor
jge
sti
inc
xchg
mov
jmp
test
cwde
and
lock
xor
xchg
or
mov
mov
xor
out
dec
jle
icebp
out
int
scas
ret
mov
lea
cmps
dec
fild
cmps
dec
dec
pop
fyl2x
fcom
fst
(bad)
xor
or
popf
push
ffree
dec
cmp
test
inc
or
lods
aam
in
pop
aaa
rcl
push
fwait
stos
push
inc
mov
mov
jecxz
dec
or
loop
cli
cmps
mov
rcr
pop
xchg
(bad)
sub
push
pop
push
xor
jne
dec
mov
pop
dec
aad
lock
test
mov
push
div
rol
pop
mov
mov
adc
or
and
fdivr
and
push
dec
fbld
xchg
(bad)
cdq
jp
sahf
adc
test
iret
push
cli
sar
xor
xchg
sbb
js
jbe
dec
into
gs
aam
pop
retf
ret
mov
ret
jp
movs
stc
push
cld
pop
push
add
fwait
jbe
dec
inc
jb
add
dec
cmp
stos
call
out
push
xor
and
stc
ret
lds
sar
cwde
xchg
push
xchg
test
mov
leave
push
nop
jo
into
out
or
jb
in
inc
mov
jbe
daa
dec
stc
sub
push
test
sub
add
int
push
adc
jns
or
jl
lea
(bad)
(bad)
aas
lock
inc
out
cmps
cmc
pop
or
retf
rcl
adc
cld
add
add
es
mov
ja
stos
or
in
test
outs
jae
sbb
jno
push
sbb
std
inc
fnstenv
int
call
ins
sub
inc
adc
cdq
inc
push
add
and
aaa
mov
fs
enter
gs
shl
out
es
inc
sub
stc
(bad)
xchg
fidiv
leave
popa
(bad)
jle
shl
push
aas
ins
retf
gs
jecxz
mov
inc
dec
leave
push
pop
jecxz
jb
or
add
lock
loop
iret
in
xor
ficomp
sub
cmc
adc
ja
add
push
dec
test
aas
jge
sar
iret
push
mov
push
mov
cmps
add
sub
lfs
mov
in
data16
dec
ret
dec
int3
add
dec
bound
inc
call
ret
adc
lods
inc
add
out
inc
mov
add
shr
xchg
mov
mov
xchg
adc
icebp
imul
aas
fstp
movs
dec
(bad)
cwde
adc
lods
les
sbb
sub
es
sub
mov
(bad)
ins
aaa
or
into
jmp
test
jl
test
leave
js
and
je
bound
inc
popf
mov
fiadd
mov
lods
jb
adc
lods
or
stos
cld
xchg
gs
pop
lahf
pop
pusha
(bad)
pop
jae
ins
arpl
mov
xor
mov
add
icebp
enter
mov
in
lds
cmp
jp
cmp
aaa
fsubrp
mov
adc
cmp
or
and
mov
enter
mov
lea
or
xchg
sub
fst
lds
gs
ds
addr16
add
jb
aam
fwait
push
es
(bad)
push
mov
jns
jo
sub
out
mov
mov
xor
cmp
(bad)
pmuludq
gs
loop
inc
data16
mov
dec
loope
lods
push
stos
mov
and
or
loope
or
das
test
jmp
lahf
out
inc
mov
dec
call
shl
leave
sbb
push
fdivr
pop
in
test
shl
mov
sbb
xor
(bad)
mov
add
sub
cmp
jmp
pushf
push
cmp
inc
xchg
xor
in
(bad)
push
and
adc
jp
daa
outs
mov
jmp
es
jl
xor
out
int3
(bad)
mov
cdq
aas
inc
jl
add
pop
xchg
inc
pushf
xor
push
push
mov
ins
pop
fsubr
cmp
sub
lahf
lahf
dec
unpckhps
cs
daa
xor
cmc
push
in
sar
cmps
jle
fistp
ds
sahf
sbb
or
xchg
sbb
and
or
and
call
cdq
sbb
xchg
call
push
std
aad
cmp
cs
int
xor
repnz
loopne
mov
xchg
push
lds
into
repz
and
jb
mov
cdq
repz
dec
mov
out
pop
movs
ins
ins
jp
sbb
addr16
sbb
test
imul
nop
push
dec
inc
popf
call
fst
mov
xchg
push
add
scas
lods
push
push
mov
test
inc
xchg
ss
fsubr
push
push
adc
adc
scas
(bad)
(bad)
call
(bad)
jne
aam
xor
dec
(bad)
test
jmp
sbb
add
pop
inc
not
pop
xlat
jmp
rcr
xor
into
ss
movs
or
mov
mov
icebp
sub
jecxz
sahf
mov
icebp
sub
pop
addr16
xchg
je
cmps
add
mov
or
pop
xor
xchg
mov
jae
repz
add
jmp
rol
push
sub
add
inc
lock
adc
(bad)
sti
ds
aad
jg
inc
add
inc
cs
lock
or
lods
ins
xchg
pop
mov
inc
mov
fisub
ss
aam
lea
sub
fist
mov
xchg
cmps
int
lock
(bad)
std
add
(bad)
das
(bad)
inc
inc
stos
stos
stos
xor
cmc
add
mov
scas
jno
jnp
stos
dec
movs
loopne
push
pushf
sub
jg
pop
imul
inc
push
push
xchg
mov
jae
scas
push
daa
mov
test
add
mov
movs
push
add
and
add
clc
repnz
mov
jb
mov
repz
bound
cmp
popf
add
dec
mov
stos
iret
jp
push
into
aaa
pop
mov
add
movs
mov
fstp
daa
inc
dec
add
imul
(bad)
pop
pushf
push
dec
mov
in
lahf
jmp
or
xchg
pop
xchg
das
lahf
pusha
jl
push
pop
test
or
je
inc
xor
loop
in
jnp
jge
mov
adc
adc
addr16
jp
fdivr
push
mov
mov
xchg
dec
fisub
cmp
sbb
mov
cli
xor
shr
imul
in
push
mov
cmp
jnp
or
fincstp
int
ror
sbb
dec
loop
loop
push
pop
sub
gs
movs
dec
or
mov
xor
sub
ss
outs
fld
push
test
adc
jp
add
stos
and
fmul
mov
fldenv
pusha
rol
fbstp
push
adc
nop
scas
mov
repnz
or
(bad)
ret
enter
ficomp
add
(bad)
mov
or
adc
xor
nop
jp
jns
pop
or
cld
xchg
ds
inc
cmps
cmp
pop
mov
call
shr
retf
xchg
dec
fisubr
cmp
sbb
and
and
cmp
inc
or
aam
sti
jl
xchg
repnz
cmp
cdq
es
gs
scas
js
stos
(bad)
cli
or
mov
add
rcr
dec
aad
cmp
les
aaa
(bad)
add
imul
xchg
sub
jae
or
pop
aad
test
out
loopne
scas
pop
mov
lahf
dec
gs
out
mov
jno
mov
push
pop
loopne
sub
xchg
test
cmp
(bad)
fcmovne
cs
mov
adc
mov
xchg
leave
sbb
cmp
push
movs
pop
mov
retf
pop
lea
in
pop
and
rcr
dec
inc
(bad)
sti
adc
adc
mov
and
test
rcl
cmp
in
test
outs
mov
mov
mov
push
mov
sbb
scas
mov
popa
add
jo
mov
xchg
push
xor
or
popf
daa
repz
or
daa
js
dec
ins
pop
cdq
sbb
adc
jno
dec
enter
das
out
jmp
loope
sub
call
imul
mov
cmc
mov
jno
cmps
adc
dec
xchg
ins
fiadd
and
out
pop
sub
add
cmp
stos
aad
rcr
xchg
push
xchg
sbb
dec
cmp
adc
and
cld
cmp
pushf
retf
imul
ss
cmps
addr16
loop
ror
dec
inc
lahf
out
dec
or
(bad)
jmp
jmp
jmp
movs
cmp
lahf
lea
mov
hlt
push
jne
xor
aad
pop
addr16
jo
scas
sub
cmp
push
stos
data16
push
int
lods
jnp
push
xchg
(bad)
jge
and
adc
cmps
(bad)
mul
cmp
adc
mov
jmp
adc
mov
lea
pop
sub
bound
mov
popa
fdiv
mul
leave
sbb
ins
push
jmp
xor
fcomi
mov
mov
loopne
cmps
cmp
lods
loope
pop
xchg
in
out
psrad
aas
sbb
xchg
and
dec
xchg
cmp
fild
mov
dec
fst
cld
(bad)
outs
mov
into
pop
dec
adc
dec
cmps
in
fimul
fcmovb
xor
jnp
jo
fsub
ret
in
ins
fnstenv
jmp
or
xchg
dec
sar
cmps
pop
sub
js
hlt
(bad)
or
sub
cdq
adc
cdq
inc
sbb
cmc
popa
add
or
pop
add
in
jmp
icebp
ror
shl
xor
popf
dec
cmp
movs
inc
stos
mov
stos
pop
into
loopne
or
out
xor
inc
pop
shl
jb
mul
repnz
push
inc
xchg
cld
mov
adc
je
in
or
jge
pop
sbb
in
(bad)
mov
out
cmp
sub
push
test
fst
mov
or
jl
jmp
xchg
sahf
arpl
retf
fsubr
mov
push
xor
mov
add
push
scas
and
in
xor
inc
pop
mov
cmps
cmps
(bad)
mov
ins
imul
xchg
mov
sub
xor
cmp
sub
movs
mov
sbb
inc
inc
dec
sub
adc
out
iret
inc
xchg
push
scas
gs
mov
scas
and
sub
sbb
aaa
mov
inc
inc
shl
inc
enter
add
in
out
ins
jo
and
iret
sub
cmc
push
mov
adc
imul
xchg
pop
mov
cli
xchg
inc
mov
ret
pop
dec
dec
sbb
pushf
jl
adc
cmc
outs
cmp
jmp
mov
or
imul
fstp
ror
xchg
mov
idiv
or
fs
add
pusha
sti
cmp
aam
adc
adc
cmps
(bad)
lahf
jmp
xor
pop
pop
mov
and
retf
sbb
call
mov
loope
inc
(bad)
mov
cs
push
sbb
sahf
fadd
test
lods
dec
cmp
sub
add
add
xor
sbb
cdq
adc
pop
fnstenv
loop
xchg
push
aaa
mov
(bad)
fst
add
mov
pop
jecxz
cli
push
inc
and
mov
outs
pushf
jle
cmp
jge
fild
push
push
push
js
test
scas
icebp
outs
imul
cli
test
js
inc
inc
mov
jb
adc
sub
adc
popa
mul
or
mov
jp
fmul
add
lock
int3
or
aaa
adc
enter
push
jmp
loope
adc
and
inc
(bad)
lea
xor
mov
test
hlt
out
mov
mov
fidiv
(bad)
lock
stc
shl
add
cli
std
jo
pop
cmc
test
jns
std
hlt
out
movs
fcomp
test
jb
(bad)
mov
pop
stos
stos
and
movs
and
icebp
es
in
repz
cdq
pop
xchg
push
js
add
pop
repnz
cmp
std
add
jl
mov
(bad)
aad
shl
pop
mov
xlat
das
in
sbb
cdq
popf
ficom
test
xchg
mov
adc
xchg
jb
push
pop
jecxz
lods
int
out
inc
xchg
jge
sub
pop
loop
fsub
in
stos
mov
sub
sbb
imul
rcr
data16
adc
nop
add
imul
mov
xor
stc
mov
adc
rcr
aaa
dec
sti
add
idiv
in
push
popf
cmp
jbe
push
xchg
sbb
add
fs
rol
push
lods
call
imul
mov
dec
mov
jno
cmp
xor
aam
cmp
sahf
vprotb
popf
mov
adc
mov
in
retf
xor
jbe
pop
aam
outs
add
xchg
jno
pop
mov
xchg
jns
retf
add
pushf
cs
imul
pop
inc
int
inc
lods
stc
inc
sbb
in
es
imul
int
sub
and
outs
mov
stos
push
pusha
int3
shl
fs
ins
fisttp
ret
enter
(bad)
sub
cmps
(bad)
fmul
retf
sbb
dec
adc
lods
es
cwde
movs
fild
call
int3
ret
out
rcl
push
mov
cwde
(bad)
mov
pop
inc
mov
sbb
add
sti
push
mov
retf
aaa
pop
in
mov
jb
out
pop
mov
les
iret
inc
push
arpl
ret
shl
repz
int
sar
fwait
(bad)
scas
test
jns
in
fsub
test
loopne
inc
rol
mov
add
and
jge
cli
sub
imul
das
rcl
pop
pop
les
in
or
xchg
mov
mov
add
mov
add
dec
pop
mov
pop
push
cdq
mov
cmp
test
loop
jns
add
adc
xor
mov
add
ins
cwde
mov
xor
add
dec
add
je
int3
or
inc
inc
int
sub
inc
and
xchg
xor
mov
jmp
scas
push
cmp
and
jb
inc
or
mov
cmp
rcr
sub
nop
adc
pop
push
pop
xor
and
xchg
xchg
imul
hlt
add
aaa
jle
pop
dec
mov
push
popf
retf
jmp
add
aad
cmp
test
mov
clc
cmps
or
retf
add
imul
jne
outs
test
push
push
cmp
lock
repnz
push
shl
test
sbb
popf
fs
cmp
bound
xchg
sub
and
bound
pop
aad
xchg
icebp
xor
imul
xor
retf
dec
into
lods
inc
sub
mov
push
fadd
sub
mov
mov
loope
stc
clc
xchg
neg
imul
cmp
cwde
xor
sub
push
stc
outs
and
fisubr
ins
dec
fbstp
add
mov
xorps
(bad)
push
and
sar
test
(bad)
cmps
xchg
adc
or
fldcw
int
mov
ss
adc
jb
cmc
xchg
std
mov
inc
ror
pop
ficom
(bad)
or
dec
xlat
pushf
out
in
cmp
push
ds
into
xchg
mov
jg
aas
and
cmp
sar
push
pop
stos
(bad)
rcl
cld
sub
xor
ret
icebp
int3
sub
cmps
xor
(bad)
jl
push
xor
inc
xchg
mov
aam
mov
inc
loop
call
mov
or
fcom
mov
stos
test
shr
push
dec
sbb
mov
xchg
clc
cmc
push
cmp
mov
or
sub
addr16
inc
push
xchg
fmul
retf
iret
lods
inc
or
cmps
dec
push
cmp
mov
inc
xor
daa
inc
adc
and
push
inc
lds
mov
pop
daa
aam
imul
loope
(bad)
das
cmps
sbb
imul
mov
repz
xchg
movs
dec
cmp
movs
push
dec
pop
retf
push
js
aad
and
ret
dec
out
add
xchg
repz
xchg
repnz
or
cmps
out
imul
or
push
movs
imul
cmc
out
ins
cld
cmp
fist
inc
push
add
cs
ret
push
sub
xor
std
sub
(bad)
xchg
into
fdivr
push
sub
cmps
mov
add
sbb
rol
iret
cwde
addr16
movs
retf
or
cmp
hlt
ins
mov
push
sbb
fistp
cmp
xchg
retf
xchg
push
loopne
xchg
pop
mov
and
add
pushf
test
mov
push
call
cli
outs
push
pusha
cmps
inc
jb
and
jge
call
push
clc
sbb
xchg
push
lea
imul
stos
call
mov
dec
xchg
popa
inc
pop
cwde
inc
jl
ja
jbe
sub
xor
imul
test
or
test
sub
aad
lock
or
inc
or
mov
and
push
adc
xchg
pop
dec
pop
out
mov
mov
aaa
cmc
in
push
jo
or
enter
div
cdq
sub
push
(bad)
bound
movs
(bad)
outs
rcl
pop
leave
add
in
je
hlt
mov
and
ret
inc
ins
xlat
push
xchg
inc
and
xchg
dec
ret
imul
inc
scas
mov
sub
in
nop
imul
add
cld
dec
pop
dec
mov
rol
cmp
jmp
cmp
xchg
sub
call
fild
dec
sub
cmp
js
or
cmps
ins
adc
dec
jge
fbstp
adc
cmps
cmp
lahf
mov
pop
xchg
xor
jbe
(bad)
jae
dec
test
es
push
and
inc
and
jnp
daa
pop
fidiv
loopne
outs
jmp
(bad)
ss
mov
rcr
fsubr
je
and
push
mov
pop
movs
pop
rcl
sbb
int
pop
jge
into
push
jae
xchg
cmp
dec
loope
mov
ror
movs
xchg
out
mov
sti
mov
cwde
js
(bad)
jae
jg
inc
fs
sub
pop
inc
pop
daa
aam
or
fwait
cdq
jae
dec
or
and
into
add
push
xchg
rcr
in
cdq
mov
and
mov
push
daa
(bad)
pop
sahf
sub
test
jo
dec
loop
loop
mov
dec
sub
outs
ja
push
es
js
jo
out
dec
retf
push
adc
mov
mov
ret
gs
sbb
dec
retf
adc
sahf
jae
xchg
arpl
rcl
mov
aam
cmp
dec
cs
or
aas
shr
fisttp
jbe
cmp
xlat
xor
addr16
xchg
mov
cdq
jo
shl
in
push
ja
jns
xor
xchg
daa
es
retf
cmp
rcr
and
mov
adc
xchg
xchg
adc
xchg
jp
push
add
mov
and
sub
push
xor
cwde
sbb
pop
cmp
imul
and
add
xor
mov
pop
jmp
jmp
jns
call
jge
dec
push
aad
imul
(bad)
jnp
imul
(bad)
fsubr
push
jbe
dec
das
ret
outs
pop
xchg
sub
fmul
out
sbb
adc
in
bswap
outs
adc
ret
clc
aam
outs
dec
stos
add
pop
sbb
loop
test
push
div
es
xor
mov
or
sub
xor
dec
aad
xor
fwait
jge
mov
shr
shl
sub
dec
out
mov
sar
and
jmp
pop
in
adc
and
pop
imul
or
xor
adc
pop
in
push
out
call
fnstcw
pop
cwde
and
push
sub
adc
les
xchg
jl
std
sbb
mov
mov
mov
jge
popa
stc
cmc
ficomp
dec
mov
add
mov
fistp
(bad)
add
stc
xlat
dec
test
movs
or
mov
cmp
adc
pandn
(bad)
in
xchg
inc
pop
(bad)
ja
sbb
cmp
and
rcl
push
std
adc
cmp
mov
mov
cmps
(bad)
jae
rol
push
adc
stc
lock
xchg
pop
or
test
sbb
and
push
lock
cli
stos
sbb
sbb
mov
push
les
mov
xor
add
mov
pop
dec
lea
in
(bad)
mov
mov
cs
dec
mov
mov
sub
mov
and
mov
pusha
dec
pop
nop
mov
push
retf
adc
sbb
gs
leave
in
in
shl
cmps
or
jno
ins
clc
cdq
mov
jp
gs
popa
rcl
add
pop
mov
or
popa
mov
xchg
jo
test
cli
push
fbstp
imul
popa
xchg
loopne
out
pop
xchg
adc
mov
inc
pop
retf
dec
mov
inc
add
fnsave
push
xor
fbld
arpl
mov
data16
xchg
movs
mov
(bad)
(bad)
cmc
mov
ins
inc
mov
stos
jne
xor
stos
pop
rol
stc
(bad)
mov
movs
stos
movs
mov
loope
jo
mov
jo
out
mov
mov
call
mov
retf
mov
add
mov
pushf
int
and
ins
rcr
or
rol
and
sbb
inc
fst
xchg
mov
les
imul
sbb
daa
and
and
scas
mov
mov
xchg
xchg
xchg
xchg
cwde
jo
mov
and
jp
cmps
ror
jno
pop
push
push
in
dec
mov
ss
retf
jge
and
in
aaa
push
push
add
mov
xlat
mov
js
fbstp
sub
jp
sahf
mov
dec
in
ud2
mov
in
xchg
xor
jne
push
xchg
ss
mov
ins
out
nop
retf
xchg
call
mov
inc
xor
dec
retf
xchg
jmp
xor
sub
aas
xor
cmp
cli
mov
mov
or
jmp
sub
xchg
fwait
push
rcr
mov
out
jnp
mov
call
pop
in
adc
ror
lock
or
cmp
mov
fisttp
cmp
retf
sub
daa
pop
mov
ret
test
push
scas
xor
test
cdq
xor
add
jbe
fcomp
mov
call
cmp
xchg
dec
inc
les
xchg
pop
stos
add
pop
sub
aas
sbb
les
lds
je
jb
pop
dec
pusha
add
push
mov
stos
jl
jae
add
xlat
fsubr
push
lods
fist
fs
or
fnsave
call
or
or
mov
int
scas
cmp
jge
xchg
cli
mov
iret
test
leave
mov
fimul
xor
fcomp
xchg
dec
jg
fidivr
ret
or
push
cmp
xchg
dec
pop
in
clc
stos
dec
in
popf
test
clc
popa
aaa
add
sar
shl
adc
and
fcomp
jecxz
add
sbb
xchg
mov
sub
mov
addr16
test
shl
jge
not
sbb
fwait
addr16
cmps
sbb
hlt
mov
out
mov
call
xor
dec
nop
mov
lds
sbb
test
mov
and
sub
imul
jnp
push
xchg
repz
fsub
imul
es
jg
jbe
cmps
bound
inc
dec
imul
in
mov
mov
jbe
outs
or
dec
pop
in
data16
sub
adc
sub
retfw
fsubr
fcom
je
out
mul
arpl
outs
daa
jne
cmp
sbb
adc
cmps
adc
into
dec
clc
retf
jnp
xchg
sar
push
sbb
ss
or
bswap
mov
cld
scas
popa
and
inc
fsubr
pop
xor
cdq
stc
mov
mov
sub
cmps
mov
div
fldl2t
jle
ja
test
and
movs
inc
jbe
jp
jno
push
gs
dec
add
push
mov
out
xchg
movs
int
and
jmp
dec
sar
cmc
bound
mov
std
xchg
call
xor
xchg
imul
xchg
xor
xor
loop
enter
pop
fmul
repz
or
adc
stos
pop
or
lahf
mov
mov
in
xacquire
popf
dec
mov
or
xchg
ret
jmp
push
shl
lock
jg
sbb
fwait
shl
push
mov
jl
add
sbb
or
jae
addr16
dec
sbb
int3
imul
fwait
movs
call
cmp
into
lds
push
jne
fmul
ss
std
mov
add
loopne
mov
pop
sar
loop
lahf
enter
add
loope
fstp
adc
cs
add
stos
jb
dec
popa
aas
pop
push
shl
pmulhw
aaa
mov
hlt
punpckhdq
adc
gs
pop
jmp
xchg
repz
jmp
or
ret
sub
xor
inc
mov
ss
loop
aaa
jmp
inc
stc
popf
fldenv
lock
das
arpl
add
sub
and
push
mov
(bad)
mov
fstp
popa
push
push
jl
mov
clc
leave
mov
mov
mov
stos
sub
scas
cmp
xlat
movs
retf
xor
shl
jns
push
retf
or
and
or
rcl
pop
cwde
movs
inc
(bad)
jg
sub
fild
mov
nop
xchg
pop
sub
test
retf
daa
inc
inc
std
outs
ss
aaa
push
cs
dec
push
(bad)
cmp
and
out
call
test
sar
stos
fidivr
data16
cmp
mov
cmc
in
clc
aas
ss
fcomp
scas
xchg
sub
repz
mov
dec
dec
(bad)
popf
cwde
jg
imul
(bad)
aas
das
mov
(bad)
out
aam
pushf
loope
sti
sbb
xchg
push
mov
xchg
and
les
test
mov
outs
lea
(bad)
push
inc
rcl
gs
lahf
out
push
inc
int
outs
into
ds
call
scas
sub
nop
(bad)
jmp
jecxz
or
jg
mov
jge
popf
xchg
xor
jnp
fidivr
je
imul
std
mov
data16
dec
js
cli
mov
lock
stos
aam
ror
inc
shl
sub
ds
xor
fsub
jo
call
ss
ins
mov
adc
outs
cmps
push
mov
outs
inc
test
sub
fadd
cmp
outs
xchg
push
ins
xchg
xor
movs
imul
mov
add
and
cld
hlt
pop
mov
and
call
mov
adc
test
jl
(bad)
repz
cmp
cmc
retf
dec
adc
sub
add
and
mov
sub
stc
imul
inc
pushf
xlat
pop
xor
adc
add
cmp
sub
outs
add
pusha
cmps
sub
fld
shr
or
jmp
push
fsub
xchg
mov
xor
mov
fmul
adc
cmp
sbb
xor
jmp
pusha
mov
shl
push
repnz
cmps
iret
add
inc
sbb
dec
daa
mov
aad
jmp
retf
sub
movs
repz
mov
ja
mov
stos
stos
nop
fcmovbe
(bad)
pop
pop
mov
mov
aaa
movs
jmp
ror
inc
mov
lods
(bad)
fs
mov
(bad)
mov
mov
xor
aad
int
in
mov
cmps
das
adc
cmp
(bad)
sub
xchg
dec
xor
adc
in
cmps
dec
fistp
cs
xchg
mov
sbb
(bad)
xor
push
aas
mov
fdiv
adc
fmul
dec
mov
scas
sub
movs
dec
jb
pop
shl
out
jae
test
add
jmp
jg
js
dec
int3
or
hlt
jecxz
pmaddwd
push
sub
cmp
sub
mov
adc
cli
mov
stos
push
pushf
dec
imul
test
jmp
cmp
outs
lock
fist
cmp
inc
(bad)
jl
sar
dec
(bad)
adc
dec
pop
add
sbb
nop
popa
mov
popa
(bad)
ds
stc
adc
pusha
or
sbb
push
retf
stos
cwde
nop
or
das
mov
inc
inc
call
fld
leave
or
fcom
mov
call
test
jo
mov
pop
xchg
fisttp
out
outs
out
mov
pop
push
mov
test
jne
and
scas
xchg
sub
lods
push
and
pop
je
or
stos
cmp
jb
or
push
cld
(bad)
push
or
mov
iret
mov
push
xor
lahf
xchg
dec
adc
push
and
pop
int
pop
aam
push
xchg
cmp
clc
movs
push
scas
or
dec
(bad)
in
loope
lods
xchg
test
icebp
jecxz
retf
sahf
out
mov
mov
aaa
xchg
adc
in
or
dec
inc
idiv
inc
loopne
loop
mov
(bad)
pop
pop
neg
push
add
add
xchg
and
jo
dec
scas
push
ja
mul
nop
jmp
mov
mov
mov
pop
or
inc
jle
push
mov
inc
sub
cmp
push
or
add
adc
sub
sar
adc
enter
in
and
arpl
arpl
sbb
out
xchg
xchg
in
(bad)
in
push
aas
rcr
cli
push
sbb
fsubr
xor
hlt
call
push
and
push
add
xchg
xchg
jecxz
cmps
xor
add
push
cmp
add
dec
retf
jno
mov
out
adc
pop
pushf
sub
fidiv
cmp
add
xchg
retf
push
mov
cmp
pop
or
or
idiv
dec
rcr
jl
xor
cmp
pop
pop
sbb
mov
push
xlat
push
movs
or
repz
(bad)
xlat
loop
xlat
aaa
mov
inc
mov
mov
movs
jo
or
adc
hlt
add
cmp
jmp
cmp
or
stc
add
(bad)
in
ins
push
inc
sub
jmp
inc
sub
lock
sub
ja
into
data16
cmp
scas
div
dec
retf
(bad)
not
ja
mov
and
or
jmp
popf
dec
sahf
ret
mov
xchg
hlt
push
add
sbb
add
lods
mov
jp
rcr
push
push
pop
retf
int3
push
cmp
mov
mov
mov
sbb
push
xchg
jne
and
pop
stc
push
(bad)
popa
pop
sbb
or
jnp
stos
ret
or
popa
lods
and
jmp
js
ins
popf
(bad)
xchg
mov
lahf
inc
or
sub
mov
push
pop
push
add
push
out
pop
out
nop
arpl
mov
rcr
retf
pop
aas
inc
adc
stos
ja
sbb
xor
pop
pop
daa
xor
sub
repnz
mov
jmp
(bad)
mov
hlt
hlt
les
or
scas
sbb
cmc
fisubr
or
aaa
push
lahf
mov
rol
sbb
push
push
shr
jl
xchg
or
stos
ss
jne
imul
scas
mov
in
add
jbe
retf
icebp
push
out
loop
je
shl
rol
loope
mov
ret
fs
cmps
inc
jb
xor
adc
push
mov
lods
cmps
int3
test
fadd
and
pop
sub
sbb
xchg
pop
mov
fdiv
mov
add
sub
(bad)
push
call
(bad)
cmp
push
push
add
aas
inc
xor
sbb
iret
jle
push
mov
pop
inc
jl
jmp
xchg
dec
stos
xchg
mov
cmp
lahf
mov
push
fldcw
mov
ins
nop
pushf
out
mov
std
mov
jmp
shl
pop
rol
das
mov
(bad)
xchg
fiadd
cmp
out
icebp
in
scas
pop
push
pop
push
inc
xor
push
mov
les
mov
fmul
not
les
push
lods
pop
pop
pushf
push
mov
xchg
fwait
call
repnz
jecxz
(bad)
scas
in
cmp
pop
and
je
in
cmps
and
sti
push
fcmovb
mov
sub
dec
cmp
popa
das
stos
xchg
icebp
bound
lds
jmp
jp
scas
pop
imul
push
imul
mov
dec
sub
xchg
add
cwde
pop
jnp
or
icebp
int
imul
mov
scas
std
xchg
push
jmp
repz
xchg
jecxz
inc
aaa
or
out
ja
cdq
aad
mov
in
mov
test
cs
sub
cdq
and
test
push
iret
pop
pop
xor
add
sub
pop
cmp
cmps
mov
imul
clc
push
jne
pop
js
xchg
mov
cli
mov
dec
lahf
adc
mov
jno
xchg
push
in
es
sar
mul
xchg
pop
fimul
and
lods
xor
pop
loopne
fist
pop
shr
in
xchg
movs
mov
and
dec
(bad)
rcr
sbb
lahf
(bad)
ret
jo
call
xchg
inc
mov
cmp
movs
(bad)
xlat
(bad)
jo
adc
inc
dec
(bad)
sti
add
ds
std
movs
sub
jae
mov
or
mov
inc
xor
into
test
fst
xchg
das
loop
add
mov
test
(bad)
lds
ror
dec
dec
push
aad
lods
fisttp
push
(bad)
cmp
in
lods
xchg
test
retf
cmp
and
sbb
cld
sub
jns
mov
aam
jne
les
cdq
icebp
lock
xor
loopne
fld
stc
std
sahf
sahf
mov
or
jmp
mov
aad
mov
outs
clc
in
mov
push
lea
in
inc
aaa
imul
adc
jg
fidivr
push
pop
push
jg
jae
mov
mov
icebp
(bad)
test
push
mov
mov
inc
shl
scas
cmc
mov
cmp
ret
jae
pop
sub
pop
cmp
mov
dec
pop
mov
and
push
imul
fild
xor
mov
loope
ror
pand
fiadd
in
outs
xor
xor
int
and
hlt
xchg
test
mov
add
mov
jmp
add
fistp
iret
test
pusha
or
test
(bad)
dec
push
fistp
pop
mov
test
bound
xchg
sub
xchg
fidivr
fstp
sti
shr
mov
rcr
jp
mov
cmp
adc
dec
fild
xor
adc
aas
(bad)
ret
stos
or
call
xor
imul
push
push
jmp
ss
mov
dec
rcr
cmp
or
test
xchg
add
shl
lock
imul
adc
or
sbb
xchg
fsubp
sbb
(bad)
push
dec
lock
sbb
inc
inc
jp
inc
cld
pop
cmp
ds
add
xchg
and
fs
sahf
cmp
pop
cli
gs
pop
sub
out
dec
pushf
int
jo
add
add
fmul
pop
fs
xor
dec
xlat
pop
cmp
adc
test
mul
out
xlat
sub
fimul
dec
and
loop
jne
mov
dec
mov
adc
(bad)
adc
mov
fldenv
xlat
movs
call
bound
or
sti
imul
leave
pop
test
push
push
mov
fnstenv
iret
stos
xor
jb
sub
(bad)
imul
outs
test
stos
push
cs
add
or
sar
dec
push
(bad)
sbb
call
mov
aam
mov
or
add
cmc
ins
cmps
jmp
dec
adc
icebp
fdiv
mov
mov
pop
and
sub
xor
cmp
out
push
or
dec
xor
or
cs
lods
or
sahf
xor
ins
mov
adc
jne
cmp
outs
pop
pop
pusha
ds
imul
in
mov
mov
(bad)
mov
loope
add
and
jnp
push
out
mov
or
dec
movs
push
adc
fild
or
and
ins
mov
inc
rcr
(bad)
cli
add
pop
fbstp
ins
and
dec
jo
mov
inc
in
pop
aaa
mov
jecxz
push
xor
ja
dec
popa
push
xchg
xor
or
mov
jo
lea
dec
pop
add
mov
repz
adc
loopne
jg
mov
fwait
test
jmp
(bad)
cld
pop
sbb
or
cmp
pop
jne
xlat
rcl
aas
outs
jp
sbb
icebp
scas
inc
je
lds
xchg
mov
std
inc
push
or
or
int
dec
movs
(bad)
jno
pop
js
repz
lea
cmps
pop
add
xchg
mov
sbb
loop
ror
dec
or
xor
jg
and
int3
cmp
je
in
sub
jmp
test
jbe
ror
loopne
sbb
test
movs
test
mov
xchg
inc
cwde
dec
jmp
and
add
push
ins
inc
push
fild
les
and
push
xchg
repz
mov
out
sbb
xchg
rol
push
adc
imul
lahf
shl
dec
sbb
mov
aad
mov
xchg
mov
pop
inc
inc
scas
loop
mov
or
mov
std
xor
pusha
jo
dec
sub
sti
jmp
cs
xchg
sbb
test
imul
seto
test
sub
das
xchg
xchg
sar
fimul
adc
cdq
test
sbb
mov
sbb
push
lea
push
pop
loopne
mov
outs
sbb
jne
mov
je
dec
shl
fwait
outs
xchg
xor
sub
daa
adc
cmp
shl
aad
and
lahf
imul
popf
stc
cmp
pushf
mov
test
mov
iret
(bad)
xor
add
bound
or
cmp
fs
mov
icebp
aas
loopne
and
sti
cld
jae
aam
fisttp
cmp
xchg
dec
mov
xchg
movs
(bad)
std
fmul
xor
dec
scas
out
out
sub
inc
or
jb
adc
mov
and
rol
jb
fnstcw
and
in
jle
cmps
daa
mov
stc
dec
aad
inc
sbb
sub
(bad)
fisubr
sbb
popf
fsub
dec
stos
int
imul
push
cli
fdiv
xchg
ins
pop
sub
dec
jl
or
push
jno
nop
add
push
or
add
in
push
call
jmp
adc
ins
xchg
pop
jo
inc
cmps
fadd
mov
(bad)
xchg
aaa
xchg
adc
jg
xchg
ds
sbb
jno
or
mov
scas
add
ret
ds
js
adc
test
add
or
(bad)
xchg
jecxz
and
lahf
iret
or
xor
retf
fst
fdivr
mov
mov
(bad)
ins
ret
push
in
lds
jg
push
imul
dec
and
pushf
xor
setne
cdq
xor
fucomi
xor
pop
push
jecxz
xor
or
and
std
fidiv
mov
loop
cld
test
dec
mov
test
mov
cmp
adc
xor
pop
pop
xor
mov
out
arpl
jmp
mov
sub
shr
outs
outs
or
push
push
fild
pop
mov
fcmovne
inc
in
xor
retf
sub
jne
data16
sbb
mov
cs
retf
out
test
retf
push
pop
cs
fisub
adc
cmps
mov
ins
ja
mov
xor
int3
pusha
pavgb
xor
pop
ds
jmp
retf
lods
sub
pushf
mov
mov
out
push
mov
retf
in
test
or
mov
mov
daa
shl
dec
or
sbb
inc
rcr
daa
adc
adc
shr
sub
test
sbb
or
into
movs
mov
dec
int
leave
aas
or
inc
xor
scas
daa
adc
aas
outs
push
pusha
je
push
push
xchg
adc
push
push
dec
cmc
das
xlat
and
test
(bad)
sbb
ret
jae
fist
sbb
mov
jg
(bad)
jmp
int
and
test
imul
or
and
inc
adc
pop
mov
cdq
or
nop
fsub
jo
cmp
das
add
or
cld
pop
dec
jle
outs
jge
retf
jne
sbb
test
jl
add
adc
jmp
mov
enter
push
cmp
mov
mov
icebp
icebp
push
stos
ins
xor
inc
lahf
push
xchg
cmps
push
scas
push
sub
sbb
(bad)
(bad)
std
fldcw
mov
and
xchg
je
cmp
add
addr16
sub
push
test
and
sti
pushf
loop
cmp
sbb
outs
or
sbb
sti
mov
mov
popf
cmp
xchg
xor
loope
inc
call
or
inc
push
bnd
fmul
call
add
push
mov
jp
sbb
jb
cmc
fs
movs
cdq
cld
popf
jecxz
mov
pop
sub
or
pop
jl
imul
or
mov
and
rol
jo
jb
sub
pop
adc
lods
or
ret
nop
push
xchg
adc
sub
sub
jp
mov
jbe
out
xchg
iret
push
jb
pop
jmp
pop
lods
lods
scas
mov
in
adc
pusha
shl
mov
mov
enter
inc
and
(bad)
(bad)
jmp
push
push
jp
fwait
repnz
xor
or
cmp
loopne
mov
xchg
fld
and
mov
ins
mov
leave
das
or
and
sbb
jbe
pusha
mov
in
cmps
iret
jl
shl
into
in
pop
cmp
push
(bad)
cmp
div
ins
jle
bound
dec
outs
fwait
sbb
sbb
sub
(bad)
out
cmp
cmps
neg
sbb
pushf
dec
add
mov
stos
and
cmp
pop
dec
cmc
add
push
mov
add
cmp
inc
fld
psraw
mov
lods
pop
out
pop
out
nop
jmp
cs
inc
dec
cmp
pop
outs
imul
bound
mov
cmp
in
mov
xor
adc
dec
leave
and
push
jle
inc
sub
into
push
jp
cmps
int
in
jg
ins
mov
dec
xchg
mov
mov
pushf
push
retf
fs
ds
jne
jno
scas
sub
in
cmp
inc
mov
movs
dec
sub
dec
sub
cli
xchg
cmp
dec
dec
jmp
mov
test
imul
mov
call
fbld
clc
adc
inc
mov
or
into
jg
ror
fadd
sub
cmps
leave
sub
je
sbb
sbb
inc
and
xchg
out
mov
push
shufps
jbe
lods
into
ret
jno
loop
jnp
sbb
dec
push
arpl
cs
pop
(bad)
retf
loope
(bad)
fistp
mov
sbb
mov
or
push
js
add
and
and
ja
mov
enter
cs
or
add
jmp
fidivr
test
int
fisub
out
rol
mov
popa
mov
jg
cmps
(bad)
retf
push
les
mov
cdq
es
push
inc
jmp
or
xlat
mov
xor
sub
pushf
mov
(bad)
jno
cwde
(bad)
std
pop
push
test
jae
dec
cmp
sub
push
fcmovu
cmp
bound
sbb
sub
cwde
aas
xor
outs
pushf
in
test
adc
inc
sub
pusha
ror
outs
repz
jmp
or
xor
xchg
mov
cli
and
in
retf
icebp
jmp
aam
in
push
xlat
ret
dec
and
or
and
in
sti
adc
fst
(bad)
mov
xor
test
sbb
mov
mov
out
addr16
scas
push
dec
cmp
retf
(bad)
pop
pop
movs
ins
add
cmp
arpl
pop
jns
jbe
and
adc
mov
xchg
or
xlat
das
and
hlt
cmp
add
clc
add
dec
push
clc
xchg
iret
or
hlt
dec
leave
inc
sbb
in
xchg
pop
(bad)
nop
xor
push
imul
daa
nop
ins
mov
popa
test
xchg
and
in
add
xor
sbb
mov
push
xchg
loop
cwde
cli
lods
adc
jbe
inc
jg
mov
scas
mov
or
addr16
sbb
mov
sub
push
pop
inc
mov
sbb
dec
dec
jae
fwait
mov
adc
in
shr
jne
clc
mov
xchg
xchg
or
pop
and
(bad)
pop
fstp
fadd
repnz
push
mov
test
rcr
lods
ins
loopne
and
add
jl
adc
dec
sub
(bad)
pop
push
in
xchg
adc
int3
(bad)
mov
aas
cmp
jmp
(bad)
or
inc
rcl
and
and
jl
gs
dec
fild
add
loope
xor
adc
sbb
in
nop
mov
cmp
xor
dec
rol
lds
scas
add
sub
rcl
(bad)
adc
mov
imul
cwde
xchg
xchg
push
mov
mov
int
ins
fs
in
inc
shl
mov
dec
pop
mov
pop
out
outs
or
or
push
pop
adc
cmc
pop
movs
push
mov
cdq
shr
jecxz
pmaddwd
repz
sub
les
inc
in
push
shl
jmp
test
das
sub
mov
scas
adc
mov
ror
out
cmps
(bad)
aas
int
pushf
xlat
mov
push
sub
std
jae
gs
mov
xor
clc
jle
not
xlat
xor
cmp
cli
add
call
inc
sti
neg
adc
retf
mov
xor
ins
sti
rcl
dec
ds
or
aam
mov
xor
xchg
outs
enter
repz
repz
sbb
ret
in
push
and
into
push
clc
mov
jnp
add
mov
inc
adc
outs
(bad)
popf
data16
aad
out
jp
out
dec
jecxz
sbb
dec
mov
push
inc
imul
rol
int3
out
jecxz
xchg
imul
jae
imul
fimul
loop
mov
hlt
movs
mov
pop
scas
xor
adc
ret
mov
dec
cmc
pushf
mov
inc
outs
call
ds
stc
push
mov
mov
cli
add
and
mov
pushf
jle
jnp
add
adc
lahf
lahf
call
in
int3
sub
mov
pop
or
test
cmp
fistp
shrd
movs
mov
sub
inc
cli
push
pop
and
sbb
ror
inc
add
clc
jb
jns
inc
cmp
pop
ror
adc
in
push
call
inc
sub
hlt
rcr
daa
cdq
neg
je
leave
push
adc
js
shr
sbb
push
jns
ins
and
mov
inc
cmp
leave
shl
das
out
dec
arpl
jmp
mov
push
int
je
mov
cld
jns
push
push
(bad)
cmc
xor
adc
scas
push
jmp
jns
scas
std
gs
sub
repz
sbb
pop
pushf
sub
mov
jbe
lock
jmp
stos
dec
xor
mov
xor
sub
dec
lock
aaa
and
jae
and
stc
xchg
imul
xchg
lahf
ja
adc
mov
jne
fs
in
mov
out
jae
dec
shl
shr
(bad)
fistp
popa
push
push
mov
mov
inc
lock
je
mov
fcmovbe
rol
imul
push
push
mov
inc
mov
stc
mov
lahf
pushf
aad
or
(bad)
jo
cmps
xor
adc
popf
cli
add
pop
cmp
lods
mov
xor
frstor
xchg
test
jmp
fwait
adc
inc
jmp
ret
in
data16
test
and
repnz
push
aam
sbb
xor
dec
cmp
mov
inc
mov
(bad)
sar
mov
cmps
movs
pushf
pop
out
movlps
sbb
mov
aad
imul
ftst
es
inc
pop
mov
in
mov
repz
xchg
push
cmps
mov
outs
pop
cmp
push
inc
sbb
sti
aad
je
into
xchg
outs
call
push
in
cmps
shl
out
mov
push
(bad)
mov
pop
mov
push
je
in
rcl
fwait
pop
or
push
cmp
mov
adc
in
push
jge
leave
jae
add
mov
xchg
inc
sub
jbe
jo
push
lea
out
das
lods
sub
mov
loopne
movs
dec
sbb
cli
shr
and
mov
ror
mov
dec
jae
xor
push
dec
sub
adc
and
sub
mov
or
cmp
mov
imul
jnp
xor
(bad)
sub
jae
adc
mov
inc
dec
mov
inc
int3
cmps
or
mov
cmp
cmp
inc
cmps
js
ror
mov
or
(bad)
aaa
inc
xlat
clc
std
mov
xchg
arpl
pop
pop
sbb
loop
add
mov
shr
fiadd
retf
mov
arpl
or
test
mov
rol
imul
outs
comiss
push
xchg
adc
in
lea
popf
add
jae
cwde
add
pop
daa
jno
(bad)
mov
ds
sub
push
cmp
iret
jmp
xchg
in
stos
xchg
hlt
add
stos
cmp
inc
dec
inc
xlat
dec
ficomp
lea
ja
mov
add
adc
lahf
mov
out
call
and
jae
push
mov
cmp
mov
adc
mov
mov
je
cld
ja
cmp
arpl
aas
cmps
jmp
cdq
push
mov
std
or
xor
call
jmp
add
ss
xor
adc
dec
aaa
iret
stos
loop
js
ret
mov
(bad)
sbb
das
dec
cmp
push
data16
cli
std
arpl
xlat
test
add
retf
jg
dec
test
repnz
mov
dec
mov
scas
pop
jle
xchg
xchg
push
fwait
sub
sbb
mov
xchg
loope
cmps
add
test
pop
pushf
adc
stos
dec
in
test
xor
and
sbb
adc
mov
jnp
jmp
out
(bad)
into
dec
jae
push
leave
mov
scas
xor
pop
cmps
sbb
pop
push
mov
(bad)
fs
aam
mov
pushw
add
dec
ins
pusha
sub
or
cmp
pop
sbb
fwait
and
mov
push
cs
mov
pop
inc
mov
in
mov
push
not
xchg
mov
push
lods
cmp
lods
jo
dec
dec
aas
push
jmp
ret
cwde
nop
scas
sbb
aam
and
inc
movs
adc
pop
mov
jae
mov
call
xchg
mov
sti
xchg
jl
mov
xchg
mov
fwait
aas
jecxz
imul
data16
dec
push
or
aad
shr
into
in
pop
(bad)
int
cmp
sbb
xchg
popf
pusha
cli
test
repz
push
mov
mov
cmp
pop
fmul
sub
pop
popa
xchg
fst
mov
mov
in
or
cmp
into
pop
jne
pop
popa
scas
retf
cmp
jmp
retf
lods
and
push
pop
ret
sbb
out
movs
add
xor
cmps
dec
adc
out
mov
sbb
adc
icebp
and
retf
lock
in
add
call
adc
xchg
sbb
imul
add
jmp
add
fmul
rol
cs
stos
jo
push
into
out
test
bound
call
lods
inc
dec
pop
jb
jo
xchg
sub
dec
fnstsw
add
sbb
inc
js
cmps
enter
xchg
push
xor
push
pop
rol
cmp
mov
aaa
gs
icebp
pusha
int
inc
push
(bad)
iret
inc
out
fimul
gs
outs
mov
shl
cmp
xchg
jmp
icebp
ins
ss
popf
scas
or
sbb
aaa
dec
sahf
les
sbb
jmp
push
jl
xor
xlat
xlat
xchg
xchg
push
adc
out
sar
inc
jg
and
mov
add
pop
xchg
mov
pop
iret
aaa
clc
jp
pop
sub
fldenv
test
dec
sub
inc
pushf
addr16
test
dec
outs
loopne
inc
ret
push
je
mov
jle
js
add
mov
jne
adc
mov
mov
cdq
push
hlt
mov
or
xor
sahf
fidivr
shr
stc
mov
mov
into
movs
sbb
push
sbb
hlt
shl
(bad)
aas
add
or
pop
inc
gs
jns
popf
in
or
and
xchg
lock
inc
aas
jns
(bad)
loop
arpl
mov
leave
mov
test
mov
dec
scas
dec
add
push
bound
imul
es
mov
inc
inc
dec
test
(bad)
add
jmp
mov
xchg
mov
add
sub
push
movs
push
mov
cs
mov
or
pop
sahf
stc
dec
sbb
add
inc
add
sar
sub
pop
in
inc
sbb
add
arpl
adc
push
sub
outs
mov
jne
and
jne
mov
lahf
sbb
mov
inc
push
sbb
cld
push
into
das
int3
in
fisttp
jecxz
mov
int
or
in
loop
lods
in
loope
in
test
push
sbb
sub
imul
repz
in
add
loopne
adc
pop
int
push
dec
sub
(bad)
sbb
add
mov
push
dec
mov
mov
div
cs
mov
out
adc
out
mov
pop
imul
fisttp
ret
xor
jb
xor
aad
bound
sbb
lock
push
call
ins
(bad)
out
jecxz
cmp
je
mov
out
ss
not
or
jg
jmp
std
clc
add
jp
out
mov
add
dec
xor
lds
xchg
adc
jle
sbb
cs
inc
pop
inc
test
int
push
rcr
fwait
inc
std
out
test
adc
push
add
ficom
fwait
in
add
cmp
or
ror
sahf
fmul
cmps
js
mov
pop
icebp
je
add
enter
iret
mov
push
mov
pop
mov
rcr
mov
cmp
adc
mov
push
clc
dec
xchg
loope
add
inc
mov
pop
xchg
mov
mov
ins
cmp
(bad)
jo
mov
pop
jb
jns
nop
test
cmps
sub
daa
mov
cmps
in
xchg
nop
mov
fst
jg
loop
shr
and
repnz
mov
push
mov
push
cli
call
out
dec
sbb
ror
in
cli
inc
into
repnz
call
cmps
ror
push
popf
pusha
pop
dec
mov
mov
dec
sbb
fmul
push
cs
ja
mov
cmp
jae
dec
mov
dec
jae
inc
pop
inc
sbb
mov
push
mov
je
paddsw
push
lods
and
sbb
in
data16
jnp
(bad)
or
cmp
adc
sbb
dec
dec
xchg
ins
or
out
xor
loopne
pop
and
daa
add
sub
mov
imul
push
jge
mov
ins
pop
mov
outs
enter
aas
pop
out
fst
ret
fld
ja
outs
ja
bound
imul
sti
scas
push
jne
daa
push
out
or
or
mov
lea
jae
nop
(bad)
cmc
xor
retf
call
test
(bad)
jbe
loop
cmp
repnz
imul
push
popa
mov
adc
mov
or
les
ds
sbb
or
test
(bad)
das
lods
imul
push
ror
mov
push
pop
jge
adc
dec
lahf
cmp
cmps
mov
jne
pop
and
in
sbb
shl
add
dec
cmp
jl
cmpxchg
in
cmp
dec
pop
jb
mov
sbb
mov
jg
into
mov
push
test
mov
(bad)
fild
adc
sbb
mov
cmps
clc
fmulp
inc
cs
das
sbb
icebp
retf
adc
movs
mov
jle
out
daa
push
(bad)
mov
xchg
mov
and
fsubp
mov
jg
imul
rcl
clc
sub
adc
sbb
push
imul
popf
pusha
sbb
rcr
frndint
iret
inc
aad
inc
inc
je
imul
dec
rcl
add
jae
or
sbb
(bad)
scas
mov
retf
add
sub
ret
frstor
repz
dec
xchg
mov
cwde
push
push
xor
es
in
out
(bad)
dec
cmps
push
in
mov
mov
xchg
push
bound
ja
push
call
sub
aam
and
xchg
mov
ror
scas
arpl
cmp
movs
jae
out
jne
mov
stc
jae
xchg
dec
fild
mov
sbb
jge
xor
xor
push
mov
inc
call
add
test
fld
call
mov
jno
fidivr
push
shl
push
xchg
pop
jg
sar
mov
ror
xor
cmp
xchg
ret
(bad)
push
retf
mov
jae
pop
fiadd
cmp
bound
outs
ins
inc
pop
mov
mov
cli
div
div
call
nop
mov
int
or
add
fs
push
fnsave
inc
in
add
jae
in
mov
repz
repnz
lods
(bad)
cli
or
(bad)
in
rol
not
pop
(bad)
cwde
pusha
cdq
dec
lahf
lods
dec
aaa
push
push
call
mov
jp
jne
ss
(bad)
dec
dec
mov
and
xchg
sub
xor
mov
lods
cmps
and
daa
push
(bad)
mov
aam
sahf
addr16
mov
mov
jne
mov
lods
add
aaa
pop
ds
outs
xchg
inc
and
ja
in
mov
jg
mov
cdq
sub
xor
jo
inc
lods
mov
push
test
pop
jl
cmp
mov
stos
stos
nop
push
jne
test
inc
scas
pop
cmp
icebp
cmc
push
popa
dec
mov
dec
repz
(bad)
xor
arpl
inc
loop
xchg
jbe
lods
loope
cs
int3
jp
sub
push
push
mov
loop
repnz
mov
stos
(bad)
push
mov
loope
add
jmp
mov
ja
je
cmp
(bad)
xor
jae
xchg
and
push
cmp
cmp
adc
pop
cmc
loopne
call
retf
outs
bound
inc
cdq
jbe
sub
dec
dec
and
sub
into
aam
jnp
dec
push
jmp
(bad)
fist
xor
mov
cli
gs
jmp
nop
(bad)
adc
or
call
or
(bad)
jle
mov
jns
pop
cdq
jmp
retf
add
xlat
je
aam
nop
(bad)
sbb
out
test
lock
pop
jmp
inc
mov
push
or
jo
sub
jmp
repnz
in
jbe
cmp
jl
int
into
and
adc
cmp
stos
movs
scas
popf
out
inc
inc
aaa
mov
mov
xor
retf
shl
sub
je
aad
lock
cmps
sbb
retf
jle
add
fwait
shl
fsubr
bound
loop
jmp
push
jmp
jbe
ds
test
cmc
out
push
add
inc
jecxz
xchg
mov
or
xor
daa
jnp
popa
jp
sbb
repz
mov
cdq
push
mov
jmp
dec
mov
arpl
jno
cmps
push
arpl
push
push
in
inc
mov
adc
add
addr16
mov
hlt
pop
cmp
cmp
dec
(bad)
mov
inc
sbb
push
lea
arpl
inc
and
add
fsubr
adc
movs
mov
addr16
dec
in
dec
fisttp
jg
je
mov
retf
adc
cmp
(bad)
jl
cmc
lahf
mov
jmp
dec
repz
(bad)
push
stc
dec
mov
mov
fidivr
test
bound
movs
inc
test
jp
addr16
mov
jg
cwde
imul
(bad)
xor
lds
stc
std
dec
cmps
inc
lea
sub
push
nop
repnz
aas
mov
inc
fidiv
in
push
stos
lods
daa
sti
push
xor
xlat
shl
dec
fcom
jecxz
push
mul
retf
mov
sub
cwde
mov
retf
je
jae
pop
cmp
and
mov
jns
jmp
cmps
inc
ss
test
fiadd
ins
stc
push
adc
pop
mov
sbb
xchg
push
sub
clc
stc
sti
imul
and
adc
(bad)
nop
neg
pushf
ucomiss
push
add
cmp
cmc
dec
pop
push
test
inc
arpl
push
lock
xchg
sahf
(bad)
or
mov
xchg
sbb
mov
pop
test
std
rcr
push
xchg
mov
nop
icebp
mov
daa
enter
rol
adc
stc
sbb
dec
mov
xor
sahf
pop
pop
mov
pop
sub
fld
outs
jmp
fdivr
inc
pop
aas
mov
mov
mov
adc
ja
pusha
push
ds
inc
jnp
mov
addr16
dec
and
test
adc
mov
adc
mov
inc
add
push
out
in
sbb
push
push
loop
jnp
test
lock
into
sbb
cmp
or
rcr
arpl
fs
push
mov
or
das
fisub
into
sub
xor
mov
(bad)
pop
or
push
iret
or
scas
ret
sti
aam
mov
lock
jo
jns
loopne
cmp
cmc
retf
in
dec
or
inc
aas
ins
push
adc
mov
jo
fs
pushf
sbb
dec
sub
inc
mov
popa
jnp
mov
int
pop
cmps
in
cmp
bound
pushf
pop
stos
pusha
pop
lea
out
fs
cmp
ficom
or
in
xchg
hlt
lds
frstor
xor
sub
imul
mov
psubusb
adc
add
rcl
ret
pop
jo
fldcw
rcl
mov
mov
ins
cmp
push
or
sbb
mov
and
mov
mov
inc
dec
and
ret
and
sbb
fmul
aam
(bad)
sub
xchg
mov
inc
imul
or
gs
adc
and
pop
add
dec
cli
jmp
or
cwde
xchg
sbb
idiv
retf
push
sub
jns
cdq
mov
fsub
test
mov
ins
add
mov
jno
lahf
sbb
scas
out
shl
pop
jae
or
dec
ins
inc
sbb
cs
popa
push
sub
mov
cmc
xchg
or
pusha
popa
mov
(bad)
addr16
sub
sub
xchg
aad
push
fadd
clts
or
test
xchg
les
or
repnz
inc
pop
add
or
mov
(bad)
sahf
lock
or
push
xchg
pop
dec
adc
add
(bad)
mov
int3
nop
mov
cmp
push
cwde
xor
xchg
int
mov
test
mov
jle
scas
adc
cmc
popf
enter
push
jg
inc
sbb
add
xor
inc
mov
ja
jmp
pop
ins
pop
lea
and
sub
shl
ss
push
rcr
fs
addr16
fs
(bad)
outs
stos
aad
ficom
stc
lock
xor
lds
push
adc
dec
fsub
jg
nop
xor
push
adc
mov
mov
pusha
int3
add
movs
scas
leave
and
jb
shr
out
pusha
aas
mov
jecxz
imul
pextrw
xchg
ret
repz
inc
daa
icebp
push
sub
xchg
outs
adc
popa
pop
jmp
inc
or
ja
dec
cmp
and
loope
mov
retf
popf
mov
mov
dec
and
inc
jne
and
sbb
adc
cmp
pusha
xor
outs
or
mov
loope
arpl
lahf
mov
ins
jmp
or
xor
jmp
rol
fcomp
jbe
lahf
and
xor
scas
(bad)
imul
daa
dec
push
xchg
outs
sbb
int3
addr16
jae
stos
mov
repz
out
mov
dec
xchg
ds
or
pop
cs
cmp
cwde
ror
xchg
xor
(bad)
jmp
cmp
jg
sbb
dec
fwait
aam
lods
push
cs
into
cmp
cmps
jne
jmp
ins
icebp
(bad)
push
cwde
sbb
enter
mov
mov
and
dec
push
sub
fwait
dec
or
mov
stc
pop
push
gs
pop
test
ret
pop
xlat
xor
mov
popa
and
ds
push
add
sub
(bad)
popf
cmp
and
xchg
fld
(bad)
xor
ficomp
pop
pop
repz
(bad)
fcomp
out
sar
sub
ins
push
cwde
shr
xchg
les
ja
stos
cs
xchg
push
data16
in
test
out
aaa
push
hlt
and
les
mov
pop
or
test
mov
xor
mov
inc
jnp
les
sbb
mov
arpl
shr
je
imul
inc
pop
mov
sar
ret
or
(bad)
pop
(bad)
jns
pop
mov
loopne
jl
pop
ror
icebp
mov
adc
pop
outs
stc
add
inc
das
out
pusha
ins
push
or
scas
mov
ret
mov
xchg
mov
mov
int
rcl
inc
jb
sub
cdq
test
test
cmps
fs
jecxz
mov
in
arpl
dec
push
int3
gs
leave
xchg
ins
mov
mov
retf
jnp
and
xchg
std
jg
push
(bad)
lahf
movs
or
fadd
fmul
fistp
push
out
sbb
rcl
sub
bound
movs
pusha
push
sti
sti
mov
sub
push
(bad)
loop
imul
les
push
mov
jno
cdq
mov
movs
outs
dec
mov
cmp
pop
(bad)
add
sub
fsubr
mov
enter
inc
jbe
test
adc
out
xchg
test
push
push
mov
and
jb
popf
and
mov
hlt
imul
call
push
inc
adc
lahf
enter
sub
movs
stos
pop
gs
sub
lock
inc
cmp
xchg
clc
adc
in
xor
adc
pop
jbe
loope
jmp
and
scas
arpl
xchg
push
imul
xchg
or
sbb
retf
mov
push
clc
ret
sbb
jnp
nop
cs
dec
scas
aaa
and
lds
jno
pop
test
fwait
leave
int3
pop
outs
mov
mov
mov
cmps
sub
add
mov
cmps
push
outs
and
sti
adc
cld
adc
sbb
mov
mov
inc
adc
ret
cmps
or
and
test
xor
inc
das
fisubr
pop
lahf
cbw
loop
(bad)
call
and
mov
mov
dec
add
sbb
push
in
loop
mov
into
push
cmp
xlat
push
fisubr
pop
push
pop
mov
pop
add
xchg
lea
mov
sub
loopne
rcr
rol
xchg
es
addr16
xchg
sti
cmps
imul
or
mov
push
jo
loopne
into
xor
jmp
sub
add
mov
jb
mov
lahf
pop
xlat
(bad)
xchg
stos
sub
jmp
cmp
cld
clc
push
(bad)
push
push
std
sbb
xchg
cmp
popa
cmp
xchg
mov
sub
jl
or
adc
in
pop
dec
stos
fs
movs
fisttp
add
jne
sub
fsubr
pushf
sbb
ja
in
movs
out
pushf
ret
dec
pushf
repz
fwait
or
ror
and
sbb
or
(bad)
jg
mov
inc
dec
and
enter
sub
sti
fnsetpm(287
ror
or
js
in
ror
test
das
xlat
pop
pop
hlt
ins
rol
cld
jnp
stos
xor
out
xor
jne
fs
cwde
(bad)
leave
mov
ret
mov
lahf
pinsrw
xchg
fcmovbe
nop
xlat
popf
fcmovnbe
inc
rcl
mov
xchg
pause
xchg
push
leave
cmp
dec
hlt
les
scas
jne
push
repz
outs
xchg
sahf
stos
mov
repnz
jb
xor
pusha
js
jbe
hlt
call
sub
push
push
sbb
popa
rcr
hlt
jmp
push
loopne
mov
jns
adc
xor
jae
mov
pop
jmp
neg
inc
sti
fsubr
retf
sbb
sub
inc
pop
adc
jns
sar
jle
xchg
fld
popa
sti
jp
loope
add
mov
fwait
adc
ja
retf
add
mov
cmp
push
jmp
sub
push
sbb
sahf
xchg
fldcw
rcr
cmp
push
or
jmp
push
popa
adc
inc
jge
jl
int3
aaa
lods
push
retf
add
mov
shl
gs
pop
jge
shl
jno
pop
popa
ins
in
sbb
addr16
pushf
pop
out
mov
pusha
jns
(bad)
cmc
xchg
xor
hlt
test
fst
jbe
lahf
stc
iret
iret
mov
push
retf
fisubr
inc
cmp
call
and
adc
xchg
mov
jbe
clc
xor
cs
outs
pushf
mov
inc
and
sbb
icebp
push
xchg
cmp
stos
in
nop
xor
ds
dec
mov
xor
punpckhbw
jl
mov
mov
aam
stos
and
lods
push
je
ds
add
arpl
sbb
(bad)
jo
pusha
std
adc
stos
or
mov
pop
stos
push
and
test
push
sub
bnd
in
xor
seta
fdivr
xlat
push
test
sub
adc
or
rol
xchg
movs
out
test
cmp
shr
mov
(bad)
or
xor
std
(bad)
push
lds
mul
or
xchg
(bad)
jmp
sti
xchg
adc
pushf
xchg
test
xor
jle
gs
push
dec
out
or
test
adc
xor
lods
dec
pop
cmp
into
jmp
enter
test
push
pop
inc
arpl
popa
add
int
dec
pop
and
inc
loop
jmp
push
adc
or
jg
loopne
or
cld
push
dec
test
jmp
sbb
sub
stc
das
and
push
in
into
mov
pop
xchg
mov
adc
je
inc
(bad)
mov
adc
pop
dec
mov
les
inc
sub
adc
mov
aad
add
dec
test
sti
or
adc
in
jge
shl
fild
jmp
cmp
lods
pop
cmc
leave
cdq
dec
mov
jg
mov
sub
test
sub
out
pop
jg
pop
adc
les
imul
dec
out
fdiv
ret
cmp
mov
mov
pop
xor
(bad)
jge
(bad)
mov
mov
call
fwait
pop
enter
xchg
neg
fsub
(bad)
jmp
adc
inc
rcl
jbe
adc
frstor
in
and
retf
mov
(bad)
pop
icebp
cmp
jg
push
adc
xlat
adc
ss
jno
pminsw
sbb
xchg
add
mov
jg
mov
jg
fdiv
push
jb
out
icebp
enter
scas
repnz
push
sub
inc
mov
jmp
cmp
pop
cs
and
and
inc
fs
pop
push
lods
xchg
ins
dec
pop
inc
fistp
rcr
nop
mov
inc
push
xor
lods
fld
out
inc
xor
xor
lods
mov
cli
scas
sar
or
or
loope
lds
es
xor
call
mov
retf
inc
pushf
inc
(bad)
dec
cmps
test
mov
iret
xchg
mov
mov
(bad)
adc
cmp
rol
push
pop
add
ficom
imul
add
inc
in
shr
adc
fistp
mov
scas
cmovae
or
es
dec
(bad)
fisubr
mov
cmp
cmp
sbb
mov
jmp
dec
cli
xchg
push
push
outs
hlt
cmps
add
test
or
inc
sub
pop
inc
xchg
sub
adc
cs
mov
std
push
sbb
adc
(bad)
fsub
adc
neg
aaa
movs
std
shl
or
mov
(bad)
mov
mov
div
sbb
pop
adc
(bad)
(bad)
push
js
xchg
mov
add
mov
cmp
daa
mov
mov
pushf
cs
out
dec
pminsw
cmc
mov
ror
and
pushf
or
mov
xor
adc
jle
iret
jo
sub
ja
xor
and
lds
pop
jmp
aas
dec
popa
jbe
pop
out
dec
and
int3
movs
sub
fldcw
push
daa
popf
mov
mov
repnz
xchg
jmp
daa
inc
xchg
xchg
add
movs
and
fsubr
stos
loop
jno
pop
ret
test
pop
retf
sub
pop
retf
stc
dec
movs
movs
inc
cwde
retf
mul
(bad)
jmp
push
and
fiadd
sub
push
icebp
xchg
lds
push
pop
push
inc
dec
jno
nop
and
in
dec
cmp
inc
aaa
pop
stos
mov
jmp
dec
iret
repnz
fistp
mov
(bad)
retf
jbe
mov
cmps
lds
movs
fnsave
mov
(bad)
movs
jbe
fimul
xchg
cld
inc
mov
repz
adc
mov
test
xor
xlat
shl
or
add
lea
push
jle
test
cmc
outs
mov
sub
in
and
sar
lock
loop
and
pop
addr16
inc
test
sbb
adc
mov
(bad)
idiv
inc
mov
out
(bad)
cld
inc
fld
xor
ret
rcl
pusha
mov
inc
or
fstp
jb
or
call
pushf
jle
mov
aas
xchg
jbe
data16
inc
test
mov
mov
jecxz
pop
and
cmp
adc
xchg
xchg
cmc
jecxz
pop
jno
stos
mov
fwait
arpl
pop
in
xchg
add
jno
inc
lods
clc
push
mov
loop
adc
dec
loopne
das
sbb
or
or
out
shl
mov
hlt
sbb
inc
mov
or
inc
pop
ins
sbb
int
pop
pusha
sub
out
pop
hlt
inc
sub
cmps
icebp
mov
or
lods
loop
inc
xchg
ins
jge
inc
xchg
in
jb
ss
arpl
jg
inc
xchg
jg
xchg
pop
jg
push
nop
or
mov
adc
es
ror
in
inc
jb
xor
mov
push
jmp
mov
imul
jb
sbb
jp
mov
or
jno
mov
in
ss
retf
inc
adc
push
ss
retf
(bad)
xor
das
loop
pop
test
sbb
jg
scas
dec
push
adc
mov
inc
cmps
add
lds
aam
push
sar
push
push
sar
xchg
mov
push
out
lock
pop
pushf
rcl
cmp
push
dec
ja
push
jl
sub
inc
pop
inc
in
(bad)
leave
jne
ss
pop
test
lock
ins
cmp
out
cmp
cmps
or
inc
in
or
repnz
sub
xor
pop
popf
mov
lea
ds
in
or
mov
jl
inc
or
jp
out
mov
xor
out
sbb
sbb
add
ds
xor
mov
pusha
aaa
jb
mov
rcr
cmp
sub
repnz
or
dec
hlt
adc
or
mov
and
xlat
out
and
mov
pop
lahf
fsub
jmp
mov
hlt
pop
jnp
and
push
push
stos
(bad)
jo
mov
sbb
fnstsw
and
icebp
xchg
push
pop
or
iretw
adc
icebp
dec
pop
add
ret
cs
lock
mov
mov
int
lock
adc
outs
test
jne
dec
retf
pop
mov
cdq
mov
aad
adc
test
push
push
mov
xor
dec
xchg
push
push
movs
jp
scas
push
sub
pop
not
pusha
mov
xlat
out
xchg
xor
jae
xchg
and
hlt
mov
sbb
or
jmp
ds
nop
imul
xor
dec
add
sub
ror
mul
push
enter
mov
or
hlt
mov
adc
fist
inc
loop
enter
and
push
repnz
lahf
mov
jo
out
inc
mov
lds
pop
push
jl
and
mov
mov
fistp
in
out
mov
mov
inc
lods
dec
retf
mov
ins
in
call
stc
(bad)
push
retf
aaa
dec
lods
pop
add
inc
jno
cmp
xor
sub
nop
leave
add
rcr
push
xchg
add
inc
sub
mov
shr
dec
cmp
hlt
ret
shl
or
mov
pop
or
mov
stos
pop
aad
adc
jecxz
jg
je
push
fidiv
stos
pmulhw
hlt
popa
pop
ror
arpl
movs
enter
sub
xchg
adc
sbb
jmp
mov
pop
int3
jg
cld
mov
jecxz
push
out
lock
pop
and
mov
mov
fdivr
pop
push
in
movs
ins
aam
pshufw
or
mov
sub
add
xor
fwait
and
push
push
test
cmc
ficom
sbb
pop
or
nop
mov
out
rol
adc
mov
pop
lods
xchg
retf
test
stos
movs
(bad)
jge
dec
jmp
push
sub
push
mov
sbb
jo
(bad)
jl
out
out
popa
(bad)
jge
sbb
pop
push
pop
xor
into
mov
leave
sbb
or
adc
iret
adc
push
xor
pop
outs
ins
out
clc
in
or
xor
popw
sub
imul
inc
jns
loope
pop
jo
(bad)
sbb
test
stos
mov
or
sbb
xchg
imul
cmc
mov
jae
scas
or
int3
push
push
cdq
icebp
jecxz
sar
addr16
rcr
sbb
loop
loopne
sbb
out
fs
ret
push
shl
xor
popa
dec
jmp
(bad)
pop
cmps
add
inc
hlt
fnstsw
scas
push
cmp
out
aas
pop
int
push
jbe
sub
pop
fs
aaa
fimul
jb
movs
mov
(bad)
lock
fnstenv
ror
fst
call
cmp
and
sub
and
jae
fld
rcl
xor
sar
sbb
mov
es
jecxz
mov
mov
iret
fimul
adc
adc
mov
ja
cmp
jne
or
pop
push
pop
pop
into
cmp
jb
popa
repnz
int
test
call
dec
addr16
mov
cmp
xor
cs
lods
pop
fld
shr
out
call
movs
retf
xor
cmp
out
mov
cmp
pusha
ins
dec
sar
retf
(bad)
outs
jae
mov
inc
(bad)
pop
jns
aam
or
xor
retf
cmp
or
or
push
add
jbe
mov
pop
stc
jae
sbb
mov
cmc
pop
xor
adc
(bad)
ror
push
mov
addr16
stos
mov
repz
pop
push
pop
mov
pop
(bad)
aas
dec
xchg
xor
call
adc
xor
pop
and
cmps
dec
test
push
test
push
fiadd
je
hlt
dec
add
jbe
std
xor
inc
adc
mov
xchg
retf
in
mov
in
mov
push
cmps
cli
stc
inc
call
and
xchg
inc
fucomip
push
jnp
adc
out
ds
xor
mov
fwait
mov
std
cli
out
retf
xchg
je
out
test
cmp
(bad)
mov
ror
cs
sub
push
mov
or
xchg
bound
stos
xchg
(bad)
int
sub
test
jae
loope
test
je
cli
and
test
cmp
movs
xchg
mov
ret
mov
(bad)
jmp
pop
xor
fimul
stos
adc
dec
ret
sahf
push
inc
loop
(bad)
jb
lods
je
stos
pop
cmp
dec
movs
jo
mov
and
aam
lock
sahf
jno
sub
aaa
mov
push
out
(bad)
shr
pop
(bad)
sbb
scas
jmp
bound
and
out
sbb
push
mov
dec
jo
push
push
std
out
daa
rcr
mov
mov
push
std
movs
std
push
sub
or
into
cmc
mov
shl
outs
cs
dec
xlat
push
dec
jae
cmps
jbe
sub
pop
(bad)
mov
push
jne
adc
test
aam
outs
or
inc
in
xor
inc
or
mov
retf
outs
push
push
call
jns
bound
and
mov
inc
adc
lods
repz
aas
clc
pop
cmp
aad
dec
xchg
sbb
inc
inc
fwait
push
pop
scas
les
ins
leave
jmp
dec
push
sub
inc
or
adc
in
call
push
jns
jl
call
sbb
gs
pop
and
lods
leave
cmp
repz
mov
int
mov
sbb
push
bound
lock
xor
or
pop
stos
cmp
(bad)
jae
mov
mov
retf
fs
popf
mov
cmps
dec
mov
sbb
mov
and
gs
jns
mov
jmp
mov
aaa
and
mov
movs
aas
mov
dec
in
movs
lahf
inc
jmp
or
sahf
adc
test
repnz
mov
sbb
push
mov
push
out
xlat
sub
pop
inc
xor
pop
pop
loope
xor
inc
add
in
mov
pusha
xor
fs
ins
icebp
sub
adc
lea
aad
xlat
lock
stos
mov
jg
cmp
pop
push
and
xor
add
sub
aaa
jl
loope
push
mov
sub
mov
or
jne
push
jb
out
pop
and
cmp
sub
pop
cdq
xchg
shr
mov
shl
test
pop
jne
jo
sbb
clc
jecxz
xor
rol
mov
mov
ret
wbinvd
test
imul
push
mov
arpl
mov
push
outs
or
arpl
idiv
pop
sbb
ins
(bad)
xchg
pushf
cmp
inc
mov
xlat
xchg
jp
mov
mov
mov
mov
mov
push
hlt
inc
in
cld
lahf
cmp
adc
mov
mov
stos
xor
lods
mov
sub
lods
and
push
push
pop
stc
xor
dec
jns
shr
mov
int
stos
rol
out
retf
lahf
(bad)
mov
retf
cmp
int
pop
sub
gs
pop
leave
dec
or
dec
adc
jecxz
jae
push
(bad)
jmp
loopne
xchg
mov
add
jecxz
pushf
inc
bound
mov
test
in
into
sti
scas
in
int
inc
xor
mov
rcl
aas
jnp
rol
jmp
lea
pop
xchg
xchg
and
xor
mov
add
inc
mov
sub
and
leave
adc
push
inc
add
mov
ja
and
out
jnp
sbb
pop
sahf
sub
sti
mov
push
mov
and
mov
pushf
xor
ja
gs
movs
sbb
gs
mov
and
xor
sub
pop
ins
lods
or
add
add
pop
test
stos
adc
cmps
and
repz
sbb
std
(bad)
xlat
loopne
dec
or
stc
(bad)
or
mov
(bad)
and
add
adc
test
ja
aaa
das
stos
into
shr
stc
jns
mov
xor
imul
shl
or
sub
sub
stc
cmp
sub
clc
sbb
jmp
add
ins
mov
movs
mov
inc
gs
push
call
imul
pop
int3
xchg
and
sbb
xor
lahf
add
call
mov
dec
xchg
movs
push
aaa
or
mov
popa
pop
aad
push
cld
cmps
loop
cmc
and
mov
inc
stos
add
and
fdivr
and
sahf
nop
mov
or
lds
loopne
out
mov
inc
inc
lds
shr
pop
mov
test
hlt
sti
pop
pop
jb
xor
fcom
sar
sti
sub
mov
in
fisttp
iret
mov
dec
push
int
outs
mov
nop
mov
dec
loopne
sbb
rol
pop
dec
push
(bad)
aad
xor
adc
mov
call
xor
dec
fwait
ja
clc
pop
push
adc
and
aad
outs
mov
out
dec
add
retfw
jecxz
les
ror
test
pop
ds
mov
push
test
aad
ret
jecxz
push
in
cmp
pop
mov
sar
mov
pop
pop
jge
cmps
jl
leave
cmp
push
imul
inc
xchg
push
jle
popf
cmp
xchg
clc
cmc
xchg
rcl
fild
inc
test
(bad)
cmps
add
push
(bad)
cmp
dec
(bad)
jae
push
dec
div
jb
adc
or
mov
ins
cld
mov
loop
lahf
cmp
lea
push
xchg
loop
call
fsubp
aad
les
pop
fs
or
das
or
pop
loop
mov
imul
xor
add
enter
iret
stos
adc
mov
mov
pop
dec
dec
outs
mov
jne
dec
mov
clc
mov
and
mov
test
mov
jl
xchg
mov
retf
fmul
call
pop
adc
push
ins
arpl
jecxz
inc
ds
pushf
mov
rcl
xor
sub
jmp
pop
mov
pop
pop
inc
xlat
jmp
int
frstor
call
clc
test
neg
hlt
cs
pop
jnp
(bad)
mov
push
and
sti
mov
in
add
sub
sbb
cmps
iret
nop
pop
int3
ss
sub
push
ja
(bad)
(bad)
mov
cmp
xchg
sbb
retf
loopne
mov
je
out
pop
scas
add
imul
xchg
gs
mov
retf
cmp
bound
imul
xor
mov
add
jmp
xchg
aas
cdq
lock
stc
xchg
movs
push
pusha
fwait
sti
add
fiadd
jmp
xor
cmp
jnp
mov
cmp
mov
mov
icebp
cmp
mov
xor
dec
sub
jmp
adc
ret
not
loope
add
shl
mov
pop
xchg
mov
adc
cmp
mov
dec
call
les
in
cwde
lods
fdivr
push
add
xor
cld
push
sahf
inc
ins
shl
push
imul
cdq
mov
js
cmp
cwde
mov
movs
mov
(bad)
ss
ds
lock
ret
shl
jb
bound
or
xchg
call
or
push
xlat
lds
aam
adc
(bad)
pop
adc
xor
hlt
adc
aad
ins
pop
push
test
mov
sahf
movs
fisttp
jo
sbb
xchg
add
popf
and
mov
arpl
sub
push
ins
sbb
dec
les
add
lock
(bad)
retf
enter
sbb
mov
add
scas
xchg
stos
mov
in
loope
test
sbb
dec
mov
retf
test
xor
push
sbb
fadd
repz
mov
sbb
gs
or
add
(bad)
paddq
mov
dec
mov
xor
cs
mov
(bad)
sub
dec
cmc
and
push
sahf
mov
xlat
jne
sbb
mov
fmul
xor
adc
push
ss
fdiv
add
jp
(bad)
sbb
mov
cdq
test
shr
sbb
rcl
push
test
iret
aad
mov
clc
mov
lods
popa
push
pushf
inc
mov
pop
popf
dec
in
cld
push
into
ret
bound
inc
inc
sar
nop
out
jg
mov
rcl
jno
push
loope
loop
or
xchg
sbb
mov
pop
jmp
mov
ins
nop
test
cmp
xchg
arpl
sub
clc
test
pop
dec
xchg
xchg
jo
cmps
sahf
hlt
addr16
sar
das
dec
fild
jg
xchg
stc
imul
ror
shl
cmp
pop
push
pusha
inc
jmp
pop
jne
cmp
nop
dec
and
lock
mov
scas
push
enter
mov
inc
cdq
lahf
cmp
add
and
add
xchg
in
dec
fnsave
mov
movs
aam
jne
ins
sbb
jg
jno
fcomp
and
retf
mov
xor
ins
sahf
sub
shl
adc
cmp
leave
popa
dec
lock
xlat
jg
popa
pop
(bad)
ja
and
pop
das
ror
and
neg
fsubr
gs
xchg
adc
sbb
and
add
sub
jle
push
push
js
iret
out
mov
jnp
ins
push
pop
push
push
jo
(bad)
mov
sub
and
(bad)
hlt
lock
loopne
pop
adc
addr16
js
and
rcr
add
rcl
je
mov
push
adc
push
ja
cmp
sbb
in
test
loopne
out
test
loope
sub
jecxz
rol
xchg
loopne
sub
leave
dec
mov
xchg
(bad)
std
lock
xor
sbb
rcr
lods
stos
jmp
int
movs
jne
loopne
clc
pop
gs
aaa
cmp
das
sub
jmp
mov
cwde
mov
mov
je
inc
cld
mov
cmp
repz
inc
pop
es
jns
(bad)
push
mov
xor
pop
and
imul
je
cmp
pop
jp
xor
adc
imul
and
push
pusha
pushf
push
hlt
(bad)
pushf
mov
test
popa
jmp
inc
icebp
stc
sti
inc
rcr
neg
ins
xor
jb
mov
push
jge
les
scas
je
cmp
mul
dec
mov
or
xor
(bad)
fwait
out
repz
pop
call
and
cmps
test
jmp
pop
outs
gs
clc
aaa
inc
out
pop
mov
(bad)
inc
jecxz
jl
stos
or
lahf
arpl
cmp
mov
(bad)
sahf
inc
ror
or
dec
add
or
push
test
in
aad
push
adc
scas
jne
sub
dec
pop
or
or
rcl
sub
mov
(bad)
stos
enter
arpl
jge
je
add
cld
xchg
cmp
sbb
imul
pop
mov
enter
sbb
mov
and
sbb
dec
test
lahf
das
es
das
int3
test
or
mov
mov
mov
mov
lahf
loopne
cmp
and
cmp
test
xchg
push
jnp
in
xchg
test
mov
or
mov
cmps
dec
pop
bound
les
jmp
cmp
popf
pop
dec
jo
jne
sbb
pop
test
test
stos
adc
cmp
adc
adc
ror
lds
push
rcr
enter
addr16
sbb
popa
stc
lods
outs
mov
cmp
mov
mov
xor
hlt
test
idiv
push
retf
fidiv
int3
pop
imul
mov
inc
enter
fidivr
or
fistp
cmps
scas
and
push
and
xchg
cmp
push
or
inc
daa
cli
jnp
sbb
scas
test
jl
sahf
mov
jae
mov
jmp
mov
mov
push
inc
nop
xchg
mov
fadd
int3
shr
mov
movs
lods
mov
cdq
adc
adc
(bad)
call
sub
adc
pop
and
push
iret
scas
adc
fldcw
add
pop
ja
jo
hlt
iret
ins
push
push
jnp
ret
jae
imul
dec
mov
adc
pop
push
add
scas
sub
call
jo
fs
mov
ret
pop
call
(bad)
jmp
jle
test
call
sub
popa
(bad)
and
push
data16
inc
and
adc
shl
xchg
mov
mov
arpl
iret
jb
loope
sub
and
icebp
mov
mov
outs
test
and
pushf
and
or
add
jno
mov
ret
pop
inc
mov
dec
mov
mov
push
icebp
cmp
xchg
in
in
xchg
les
test
mov
sub
stc
leave
mov
add
mov
jg
(bad)
(bad)
(bad)
lock
cs
jae
dec
dec
sbb
sub
cmp
jne
ds
xchg
mov
adc
and
pop
dec
mov
xor
or
js
not
and
push
xor
add
retf
fdivr
sub
lods
(bad)
loope
dec
inc
pusha
adc
mov
cs
xchg
xor
out
aaa
xor
call
sub
xchg
pushf
mov
mov
mov
cmp
ins
aad
xor
pop
inc
xchg
fbld
xchg
(bad)
push
xchg
(bad)
imul
pop
mov
cs
in
jae
inc
(bad)
push
sbb
cmp
stc
loop
pushf
(bad)
cli
js
jg
push
jmp
scas
lea
ins
push
inc
scas
icebp
cs
inc
dec
mov
rcl
inc
or
lahf
push
inc
rol
out
pop
sbb
in
loopne
cmp
mul
pop
inc
pop
adc
je
iret
imul
xor
dec
push
push
add
or
data16
pop
cdq
icebp
inc
(bad)
xchg
in
data16
jg
xchg
out
sbb
shl
test
and
inc
pop
pusha
dec
push
ror
jle
pop
call
pop
dec
rcl
sbb
jl
es
mov
pop
js
mov
(bad)
rol
or
add
popf
jp
(bad)
mov
cwde
pop
mov
in
stos
fmul
imul
pop
div
nop
and
sub
leave
out
push
cmps
fs
sti
jno
cmovne
imul
pushf
lahf
ins
and
lods
jae
movs
fwait
mov
test
push
push
inc
mov
add
or
daa
(bad)
addr16
ret
jmp
sub
add
xor
jge
int3
mov
xor
clc
pushf
aam
lods
mov
add
adc
addr16
imul
das
mov
std
adc
(bad)
xor
push
cmp
jp
adc
cmp
xchg
xchg
jae
nop
pop
xchg
sahf
pop
push
sub
or
mov
mov
adc
and
fs
dec
fs
repz
idiv
cmp
out
xor
ja
push
fsubr
pop
fadd
pop
inc
inc
gs
int
xchg
stos
mov
mov
lea
mov
and
mov
leave
mov
dec
(bad)
mov
pop
popa
mov
xor
jne
jg
ja
xor
xchg
jo
sub
push
test
push
add
addr16
fistp
cmp
xchg
shr
mov
pop
inc
es
lsl
pop
test
pop
push
gs
loop
and
dec
or
push
sar
sbb
out
add
cmp
inc
(bad)
ja
add
push
or
int3
inc
add
and
(bad)
jmp
or
popa
aaa
sub
jno
lahf
call
adc
jbe
popf
sub
aas
sti
outs
ss
mov
xor
dec
mov
(bad)
xchg
ret
inc
xchg
jb
or
mov
out
stc
xchg
dec
sbb
xchg
(bad)
xor
adc
(bad)
cwde
mov
out
nop
sbb
addr16
(bad)
push
jae
dec
pop
cwde
mov
xchg
xor
push
inc
es
inc
xlat
sbb
mov
sbb
dec
fild
xor
in
sub
inc
add
xor
jmp
les
xchg
add
pop
jnp
adc
cmps
and
jle
mov
pop
fadd
mov
xor
lock
div
ja
outs
outs
pushf
out
xchg
mov
das
sub
outs
jmp
js
mov
cmc
in
ins
(bad)
jp
pop
paddq
cwde
sbb
in
test
aaa
jp
loope
jne
inc
pop
fbstp
enter
cdq
js
pop
add
outs
mov
jp
push
push
or
jmp
pusha
sbb
cli
inc
xor
ds
sub
sahf
in
sub
pop
and
dec
aas
sub
mov
mov
or
adc
jae
sub
lea
(bad)
test
imul
jnp
pushf
sbb
icebp
sub
jge
xor
pop
sub
mov
pop
pushf
js
dec
fistp
nop
push
add
dec
je
pop
clc
test
stos
xchg
jnp
cmp
clc
cwde
fmulp
and
mov
and
cdq
mov
pmulhw
xor
arpl
cld
sbb
mov
xchg
mov
push
jecxz
ror
fstp
push
cmp
mov
jmp
iret
dec
sub
sbb
xchg
mov
mov
cmps
mov
popf
ss
jge
mov
adc
pop
push
ds
dec
sbb
cmps
scas
movs
sbb
test
fisttp
jbe
enter
aam
mov
mov
jae
dec
(bad)
cld
rcr
jb
sbb
shr
mov
test
mov
jo
mul
ja
inc
cmp
(bad)
stc
jg
rcr
sbb
push
pushf
mov
in
pusha
sar
retf
dec
leave
bound
sub
adc
outs
cmp
pop
cmp
dec
xchg
pop
aad
pop
repz
mov
mov
or
mov
jmp
xchg
lods
mov
sbb
out
in
pop
enter
sbb
pop
mov
and
push
jmp
or
loopne
ret
mul
dec
jge
fsub
shl
test
scas
mov
inc
xor
sbb
mov
mov
sub
mov
or
cmps
nop
loopne
jnp
bound
xlat
in
aad
stc
pop
je
ins
jl
gs
jae
xchg
inc
add
ins
mov
mov
jmp
push
sub
mov
or
inc
xor
gs
inc
pop
mov
push
fcom
fmul
mov
in
mov
stos
mov
push
push
fistp
pop
push
loopne
int3
fist
add
mov
xchg
pop
outs
push
iret
mov
mov
mov
test
and
inc
xor
xchg
xchg
hlt
stc
gs
mov
xchg
push
ret
mov
xchg
jmp
dec
les
sahf
mov
mov
lds
xor
cmp
add
out
xor
and
lods
retf
cmps
xchg
xchg
jnp
mov
jns
or
jp
sub
ins
jmp
jmp
cmp
and
or
or
(bad)
mov
mov
(bad)
test
xchg
xlat
or
iret
mov
mov
sub
addr16
sub
lock
jmp
add
push
repz
cmp
adc
sbb
mov
ss
pusha
jo
fcom
add
or
mov
and
cmp
loopne
push
jle
bound
jecxz
xor
inc
repnz
inc
imul
or
or
xor
mov
push
imul
int3
dec
retf
push
pusha
jge
scas
xor
int
ret
add
push
das
add
sar
enter
fsubr
ins
pop
test
idiv
cli
lahf
jns
inc
mov
cmps
aas
lods
nop
iret
test
ret
cmps
call
stos
dec
cmc
add
ds
lahf
loop
mov
mov
int3
loope
jp
fcmovne
cld
push
fs
mov
test
pop
call
int3
xor
add
inc
push
aaa
clc
and
add
jg
popf
fimul
leave
xchg
jl
cli
addr16
rcl
fdiv
jbe
cmp
mov
cmp
adc
movs
fstp
push
leave
test
cs
and
sar
add
lods
clc
(bad)
dec
jae
shl
lock
add
jb
enter
and
cmp
cmp
mov
xchg
dec
daa
mov
lods
div
out
mov
xor
adc
push
mov
jb
inc
inc
mov
leave
mov
cdq
sub
addr16
dec
int3
outs
int3
jbe
xchg
jb
cld
lds
fst
sti
(bad)
jmp
jle
addr16
sbb
pop
push
cmp
sub
adc
in
es
je
xchg
aad
cmp
in
jl
mov
mov
fndisi(8087
lods
stos
inc
sbb
sub
pop
loopne
add
popa
sar
mov
inc
or
fldenv
sbb
arpl
xchg
lods
outs
push
xor
mov
mov
rcr
xchg
jb
or
test
or
cmc
sbb
pop
les
lods
mov
fwait
cmp
sub
cdq
jnp
pop
scas
lods
test
mov
movs
bound
sub
cmps
cmp
retf
call
ds
outs
bound
fwait
mov
push
push
adc
cs
imul
push
xor
lds
dec
jbe
push
push
mov
addr16
jg
jp
mov
sar
xor
fcmovnbe
push
jb
xor
clc
pop
fdiv
dec
jle
fnsave
je
push
xchg
adc
cmp
out
mov
ror
mov
add
(bad)
test
cld
das
(bad)
mov
call
pusha
sti
push
pusha
sbb
ror
push
and
fdivr
cmp
mov
xchg
add
div
in
out
inc
fdivr
pop
dec
push
sub
jge
popa
cmp
scas
mov
add
jl
add
push
iret
das
loopne
mov
mov
jno
cdq
dec
xchg
mov
push
out
mov
repnz
adc
xlat
dec
jmp
(bad)
cmp
add
rcr
stos
or
xchg
sbb
loope
adc
push
mov
(bad)
pop
fwait
mov
cwde
fisub
fistp
call
ffreep
or
and
pop
out
adc
mov
jl
push
stos
in
loopne
pop
pop
inc
std
fmul
(bad)
into
xor
jnp
lahf
test
fwait
cs
outs
repnz
mov
sub
mov
sub
(bad)
xor
dec
shl
(bad)
lock
cmp
mov
push
out
push
jae
cmp
std
test
loopne
jae
mov
rol
or
mov
and
xor
add
iret
mov
test
inc
test
sbb
movs
pop
jmp
mov
push
jnp
mov
inc
fimul
jecxz
mov
xlat
jnp
mov
rol
bnd
xchg
jmp
mov
mov
sbb
scas
cmps
mov
ror
into
loope
out
push
cwde
sub
loope
retf
jmp
fisttp
es
jmp
fdiv
push
mov
scas
or
cld
or
mov
iret
ja
retf
lds
sbb
enter
test
imul
mov
add
jo
sub
gs
xchg
dec
shl
pop
mov
stos
dec
mul
repnz
mov
and
lods
cld
pushf
mov
xchg
cmp
mov
pop
in
adc
loope
adc
mov
mov
xor
mov
push
retf
jno
push
test
(bad)
les
xor
cwde
int3
mov
jmp
mov
js
mov
ins
xlat
ins
leave
jns
lahf
pusha
fadd
add
and
sub
xchg
adc
repz
lahf
or
xchg
(bad)
ins
fwait
xchg
adc
add
push
jo
cmp
adc
fdivrp
out
pop
ja
jle
loopne
sar
repz
lock
fild
scas
push
add
push
shl
leave
push
mov
and
mov
aad
pop
mov
aam
push
push
call
push
loope
xchg
xchg
movs
xor
xchg
xchg
mov
dec
dec
mov
push
ja
aad
xchg
xor
adc
in
cmp
xor
lods
or
cmp
or
dec
enter
ja
and
cmp
enter
je
add
cmps
(bad)
cmp
or
movs
out
mov
in
adc
(bad)
fld
sbb
adc
xchg
into
mov
inc
pusha
push
out
in
lods
mov
and
cmps
es
std
mov
inc
sub
sbb
pop
xor
iret
sub
dec
pusha
retf
stos
push
jb
sub
pop
scas
adc
xor
mov
aaa
cs
shl
push
test
ins
jmp
inc
adc
pop
inc
sub
leave
inc
push
int3
mov
mul
outs
xor
movs
mov
js
outs
(bad)
xchg
out
into
stc
mov
pop
push
or
imul
lock
retf
dec
retf
pushf
mov
shr
xchg
pop
test
ds
inc
sahf
cmp
movs
lahf
rol
fidiv
and
and
push
mov
jno
(bad)
rol
sbb
push
push
scas
pop
mov
cwde
mov
cdq
mov
pop
add
pop
dec
pushf
movs
and
aas
add
mov
jae
les
xchg
pop
fdiv
sub
push
pushf
pop
into
push
pop
movs
out
push
inc
sbb
xor
fist
repnz
push
lods
imul
jmp
aam
sub
pop
push
jge
pop
test
mov
cmp
iret
add
sbb
mov
mov
adc
push
push
(bad)
sub
mov
cwde
aaa
adc
neg
jecxz
jge
mov
xor
mov
movs
in
gs
test
mov
js
cmp
push
rol
mov
(bad)
inc
mov
retf
xchg
repz
dec
pop
lock
cmp
xchg
sub
(bad)
mov
icebp
dec
pop
lea
sub
fild
es
fwait
inc
pop
mov
cmp
add
push
int3
sar
xchg
shl
ficomp
fimul
test
inc
sub
shl
int3
push
imul
outs
retf
shl
arpl
dec
xlat
add
cmp
and
mov
adc
inc
mov
dec
or
dec
jl
adc
cmp
mov
nop
das
iret
xor
daa
fsubr
pop
std
dec
jge
cli
cmps
inc
lock
aam
gs
pop
jnp
jae
dec
cmp
stos
std
retf
jle
loope
lods
mov
out
mov
repnz
or
mov
inc
int
out
mov
int3
xchg
xor
ds
repz
adc
(bad)
cmp
jb
rol
or
sti
mov
dec
retf
mov
repz
out
mov
(bad)
cld
jmp
test
pop
pop
lea
ret
stos
test
adc
loope
cwde
or
adc
push
push
inc
mov
xchg
adc
hlt
mov
push
add
retf
movs
push
sub
jo
sbb
and
ss
je
mov
(bad)
cmps
fcmovb
movs
jb
xor
repnz
clc
push
sbb
fcmovnu
mov
mov
fld
xchg
and
pop
dec
inc
jg
fdivr
adc
je
scas
nop
movs
das
sub
(bad)
aam
loopne
scas
jae
cmc
xor
inc
sbb
pop
mov
adc
add
inc
cs
sub
enter
mov
xor
nop
dec
xchg
fist
movs
fdivr
int3
add
inc
push
or
fiadd
mov
push
inc
les
push
cmp
outs
pop
pop
dec
lds
or
ss
mov
in
inc
iret
pop
movs
fcomp
dec
sbb
gs
push
mov
fisub
jae
jb
call
outs
daa
out
mov
ins
add
in
dec
pop
inc
mov
pop
pop
test
clc
(bad)
push
loop
gs
shl
jbe
hlt
sbb
sbb
fdivr
cmc
dec
mov
outs
sub
add
push
mov
xlat
test
cld
(bad)
loopne
mov
out
cmp
cs
add
push
lock
mov
cwde
or
xor
popf
mov
push
adc
bound
adc
fidivr
out
add
lea
mov
in
mov
ds
loopne
pop
aas
inc
iret
pop
mov
jmp
shl
or
adc
fs
pop
shl
dec
push
dec
arpl
out
jae
push
call
out
pusha
ja
cmps
in
jecxz
cmp
sub
pusha
daa
add
mov
xchg
aas
add
rcr
das
adc
mov
clc
outs
xlat
sub
mov
mov
fist
jge
(bad)
ins
shl
jmp
fild
mov
and
add
ret
cmp
mov
bound
loopne
stos
retf
dec
int3
clc
js
mov
mov
xchg
inc
stos
ins
mov
aaa
mov
sub
xchg
pop
and
xor
xchg
test
sub
sar
jge
in
or
jecxz
mov
dec
nop
leave
inc
(bad)
icebp
sub
inc
mov
push
test
xor
pop
or
out
sbb
xchg
jne
ins
imul
mov
shl
call
xor
sbb
push
ja
addr16
cmp
dec
push
inc
push
jle
add
push
jne
stos
or
ins
mov
idiv
push
push
mov
adc
pop
dec
ss
cmp
je
sub
xor
and
xchg
out
addr16
pop
xchg
or
mov
mov
push
std
mov
xchg
es
mov
pop
jmp
mov
sar
aad
inc
out
sub
pushf
(bad)
and
push
nop
cmp
enter
pop
call
retf
ins
push
and
pop
stc
inc
dec
push
mov
xor
imul
leave
jg
imul
ja
jo
aaa
scas
popa
das
icebp
mov
adc
ror
add
clc
bound
mov
inc
add
shl
in
push
dec
inc
idiv
ret
int3
lea
stc
jns
dec
aas
scas
adc
xchg
mov
(bad)
in
cmps
imul
mov
in
xchg
add
(bad)
repnz
xor
xor
(bad)
jl
cmp
push
xchg
fwait
mov
rcr
popa
lods
retf
cmp
pushf
pop
mov
jge
js
shl
cmp
and
lea
loopne
push
repz
test
pop
test
sbb
pop
xchg
fucom
push
retf
(bad)
inc
jge
cmc
mov
xor
or
in
jp
pop
dec
inc
loope
in
cmp
add
jge
cs
ja
xchg
mul
dec
in
adc
cli
fist
jo
cmps
(bad)
bound
or
add
mov
pop
jmp
push
jo
jecxz
mov
fcmovnb
and
inc
mov
rol
inc
xor
mov
(bad)
cld
leave
ins
or
aad
pop
xor
lods
jo
dec
ret
dec
xchg
call
ss
sub
(bad)
rol
xor
and
inc
jp
dec
jp
data16
pushf
dec
std
movs
sub
lods
adc
mov
mov
hlt
test
push
adc
mov
add
dec
fisubr
sub
ins
push
cmc
push
mov
mov
mov
std
pop
xchg
adc
inc
call
out
popf
pop
jmp
jae
push
push
out
sahf
jp
jo
push
movsx
fnstcw
mov
pop
and
and
adc
out
imul
sbb
int
int
aaa
push
cmps
pop
inc
ins
loopne
sub
icebp
pop
(bad)
and
repnz
lahf
inc
xor
mov
or
push
mov
into
and
in
loopne
mov
mov
inc
and
lea
ficomp
aaa
mov
ss
inc
sbb
out
xor
iret
adc
add
mov
es
xchg
pop
mov
cs
lods
adc
jmp
sar
outs
xlat
cmp
cmp
cmps
es
xor
mov
jne
lds
dec
mov
sub
jns
adc
cmp
mov
rcl
jl
jge
push
imul
jl
xchg
es
cmps
addr16
push
mov
sbb
fisub
outs
fst
cmps
(bad)
cmc
sbb
mov
imul
fsub
push
pop
fldcw
ficom
lds
aas
popa
int
das
out
sbb
cmp
loop
pusha
pop
(bad)
fisubr
xchg
push
jnp
loope
xor
xchg
jae
mov
push
sbb
pop
ja
inc
gs
inc
xchg
push
xor
lods
pop
mov
lods
dec
dec
push
or
hlt
cmp
xchg
pushf
call
xchg
aas
mov
cmc
stc
mov
mov
cld
into
mov
retf
arpl
mov
movs
xor
ror
and
push
inc
fs
push
retf
lock
pop
pop
xor
ins
pusha
pop
xchg
es
push
sbb
fistp
mov
ja
inc
cmp
retf
xor
mov
pusha
aad
mov
inc
dec
sbb
sub
xchg
or
aaa
xor
adc
xor
xchg
xchg
add
jb
mov
adc
int3
or
rcl
or
inc
inc
in
call
and
add
(bad)
and
shl
jne
sub
xor
cmp
jl
hlt
int
push
retf
movs
jne
outs
outs
cmp
sbb
sbb
jecxz
push
idiv
std
into
or
jns
or
mov
fcom
js
mov
fisubr
push
not
fcmove
push
xor
ss
lea
mov
add
(bad)
mov
rcl
mov
cmc
inc
or
in
or
hlt
inc
cmp
mov
pop
dec
out
mov
dec
fs
pushf
fld
sub
xchg
add
adc
fsub
cmp
or
fdivr
outs
jge
push
int
jo
test
xor
mov
push
xchg
sbb
mov
jns
outs
aad
mov
sbb
aad
cmp
add
daa
and
push
or
call
add
jge
pop
xchg
mov
(bad)
ror
push
sbb
lods
inc
push
popf
or
lods
test
or
mov
nop
cmp
rol
pop
pop
stos
retf
add
cmp
adc
cmc
mov
add
gs
aaa
es
repz
mov
ret
imul
inc
sahf
loopne
mov
data16
in
xchg
fs
dec
xchg
das
dec
movs
ins
ret
mov
mov
aam
outs
pop
ficomp
mov
pop
mov
cmp
loop
xlat
sub
adc
sbb
aaa
fstp
pusha
push
push
mov
mov
mov
cmc
ret
das
fs
in
ret
sti
(bad)
(bad)
jp
mov
mov
sub
jns
out
add
rol
sbb
loope
fbstp
push
ret
inc
sub
add
push
fmul
sub
cwde
in
xor
add
and
fcom
sbb
add
mov
mov
sbb
cmp
hlt
or
jae
pop
inc
(bad)
jmp
inc
sub
mov
cmp
mov
into
add
jb
dec
loopne
stos
pop
cmps
(bad)
loope
mov
inc
pop
and
pop
sbb
and
sar
mov
pop
int
xor
(bad)
call
(bad)
jns
pop
xor
push
add
xor
js
pop
cld
test
pop
mov
adc
cmp
mul
xor
mov
aad
test
push
enter
inc
in
push
lds
sub
clc
dec
or
push
loop
neg
push
movs
sti
pop
cmp
sahf
sahf
cmp
or
cmp
sbb
mov
sub
sub
push
es
sub
adc
xchg
psraw
gs
ret
mov
mov
add
cmc
rcl
retf
pusha
adc
movs
mov
push
add
mov
mov
mov
mov
mov
shl
pop
out
retf
jmp
bound
(bad)
mov
(bad)
repnz
icebp
pop
mov
rol
mov
lahf
mov
movs
popa
jge
gs
mov
adc
dec
xor
and
movs
sub
pop
adc
inc
movs
mov
es
sbb
sti
retf
retf
retf
jmp
jbe
loop
in
test
mov
ja
test
retf
into
int3
mov
(bad)
repnz
sbb
scas
not
push
jbe
sub
test
xchg
data16
(bad)
dec
pop
js
xor
pop
xor
fs
jmp
pop
daa
xor
jnp
jne
ret
clc
and
xchg
dec
xchg
pusha
adc
mov
xlat
lahf
add
ins
xchg
out
adc
and
and
movs
mov
mov
fistp
mov
call
cmp
cmp
movs
xchg
pop
std
xchg
loopne
jno
ret
mov
jge
add
stc
scas
ja
mov
hlt
icebp
or
dec
stc
and
and
inc
adc
retf
add
ss
(bad)
mov
xor
jno
add
shl
data16
mov
inc
push
mov
aam
sub
jmp
gs
jbe
mov
xor
into
lahf
or
push
jmp
dec
jbe
or
repz
lock
sbb
aam
xor
and
jne
dec
mov
xor
or
xchg
daa
mov
or
(bad)
fsubr
lahf
pop
cmps
scas
test
mov
sub
jg
(bad)
ds
shr
add
stos
das
into
add
sti
enter
rol
xchg
xor
adc
sub
and
or
pushf
xchg
out
nop
jae
es
mov
cmps
rol
clc
je
cs
sub
adc
retf
(bad)
in
cmp
jmp
dec
cmp
pop
outs
pop
sub
inc
jp
mov
leave
inc
push
popf
movs
mov
nop
pop
es
mov
jmp
popa
aaa
out
lahf
or
and
pop
pop
lock
jp
sub
and
aam
fsubp
mov
scas
mov
pop
cmp
inc
pop
push
push
fwait
xchg
add
popa
xor
mov
push
sbb
das
sub
pop
mov
ins
jns
xchg
mov
aad
fidiv
cmp
pop
mov
in
out
jb
mov
cmp
loop
xchg
or
repz
sbb
add
shl
mov
lea
je
shl
in
movs
sbb
imul
cmp
xchg
cmp
inc
pusha
sti
fs
xor
cmp
in
xor
or
pop
enter
cmp
push
lahf
outs
jo
mov
dec
hlt
push
inc
cmp
mov
call
aaa
adc
stos
hlt
pop
test
hlt
out
(bad)
xchg
dec
or
inc
loope
out
cmc
mov
dec
shl
add
cmp
sub
call
shr
or
mov
(bad)
inc
or
test
pop
jecxz
mov
pop
pop
mov
pop
mov
inc
mov
push
repnz
and
dec
or
xchg
lods
sub
rcl
mov
add
test
add
ret
into
loope
outs
cs
mov
shl
scas
cli
adc
call
das
xchg
mov
bound
shr
cmp
mov
loop
push
add
gs
dec
push
loopne
clc
out
cmp
mov
cmps
cli
pop
xor
jmp
push
mov
mov
iret
test
aas
inc
xor
push
out
inc
aas
pop
lods
inc
fwait
cwde
push
mov
mov
ss
sbb
jmp
pop
dec
cs
and
push
pop
xchg
neg
or
xchg
fsubp
jno
inc
jnp
sub
mov
(bad)
in
rcl
fwait
pop
adc
mov
inc
sbb
mov
ins
dec
outs
pop
pop
mov
push
out
adc
push
movs
popf
push
push
fwait
mov
pmaxub
sbb
movs
loop
push
scas
jne
(bad)
or
icebp
mov
inc
xchg
ja
push
(bad)
rol
mov
xor
adc
add
cld
loop
jae
das
add
stos
pop
mov
rol
or
ins
punpcklbw
inc
(bad)
aam
pop
cmp
xor
cmps
add
mov
inc
mov
arpl
jge
aad
jle
mov
fidiv
les
outs
jecxz
fist
popf
test
xchg
movs
dec
aaa
repz
mov
or
call
aam
pusha
push
push
ins
cmp
fiadd
mov
mov
pushf
lahf
and
test
and
xchg
cmp
outs
cmps
in
movs
jmp
mov
adc
cmp
push
mov
jl
mov
inc
and
mov
out
or
push
cmps
add
mov
scas
pop
sbb
out
(bad)
lods
mul
jns
stos
jns
and
mov
loope
jns
(bad)
lahf
aas
cmps
fdivr
cmp
xor
das
mov
retf
mov
gs
lods
push
test
dec
and
xchg
cld
mov
sahf
inc
sbb
stos
adc
jg
push
cmps
and
jno
das
popa
fistp
fdivr
daa
jg
push
nop
inc
aam
jbe
jb
js
(bad)
rcr
popf
aaa
mov
sub
cmp
mov
ins
xor
add
repnz
push
fisttp
xchg
pop
lock
mov
rcl
out
out
pop
ss
xor
and
and
test
and
mov
xor
mov
scas
das
les
xor
jbe
cdq
cld
in
pop
push
mov
jl
mov
out
sbb
movs
jl
fs
mov
cwde
(bad)
mov
xchg
scas
arpl
push
clc
dec
icebp
add
mov
push
add
ret
or
pop
lahf
out
pusha
test
(bad)
push
stos
jmp
push
add
pushf
cmp
push
and
movs
adc
pop
je
pushf
pop
push
mov
sub
les
mov
push
and
adc
into
cmc
not
jecxz
cdq
add
sbb
pop
sub
or
xchg
or
xor
jbe
nop
cmps
stc
fcmove
int
js
loop
xchg
push
mov
push
jns
nop
fldenv
add
push
jno
or
pop
or
loopne
sti
and
mov
pusha
push
nop
(bad)
xchg
retf
hlt
or
stos
mov
jle
sbb
or
or
(bad)
jmp
daa
shl
imul
and
xor
test
cdq
(bad)
push
test
pushf
call
(bad)
hlt
cmp
popf
fisubr
adc
nop
and
and
push
sbb
sub
inc
lds
aad
and
dec
add
add
xor
imul
rcr
sar
in
into
cld
out
mov
jo
mov
or
gs
das
dec
xor
push
vpavgw
xchg
add
pusha
cmp
xchg
aad
sub
rcl
xchg
add
jae
and
shl
and
adc
pop
and
loope
inc
mov
cli
jge
sbb
fdivr
mov
jp
(bad)
pop
xor
dec
lock
pop
aas
mov
and
lods
dec
inc
adc
fdiv
xchg
ss
cmc
hlt
(bad)
stos
bound
in
and
and
xor
jo
and
lods
lods
mov
cmps
fsub
inc
int
sbb
mov
mov
dec
mov
ror
(bad)
push
xchg
xor
in
and
fwait
data16
or
jecxz
pop
sub
or
mov
pop
sbb
mov
dec
mov
sbb
and
add
jecxz
adc
nop
mov
adc
(bad)
sub
lock
jb
fst
outs
pushf
ret
push
mov
cmc
mov
gs
push
xor
mov
mov
mov
inc
(bad)
jno
jmp
adc
(bad)
aas
movs
fcomp
sbb
das
dec
dec
fisubr
in
call
mov
push
leave
inc
push
std
pop
dec
daa
stos
push
sub
push
or
in
es
iret
push
pusha
sti
dec
push
lods
clc
cli
inc
mov
stc
inc
dec
fbstp
rep
loope
(bad)
adc
out
and
cmp
mov
mov
and
push
add
lods
mov
cmc
daa
cmc
fidivr
push
out
ins
dec
sub
cmp
loopne
lahf
pop
cmp
mov
sub
test
mov
or
cmp
sub
or
jmp
imul
call
xchg
ss
inc
inc
popf
ja
les
aas
mov
nop
(bad)
in
scas
lods
std
xchg
mov
jb
sti
out
loop
push
ins
aad
ins
iret
cmp
adc
inc
scas
jns
cmps
sub
in
mov
es
add
jp
mov
jl
fisttp
lock
cmc
xor
movs
ret
sbb
push
push
or
add
jmp
xchg
test
mov
mov
sbb
stc
dec
xchg
push
pop
iret
or
(bad)
mov
mov
loop
jge
cmp
cmp
in
sub
gs
jne
sub
push
aaa
in
inc
(bad)
stc
mov
push
repnz
mov
jno
xchg
jle
mov
adc
ins
add
fwait
mov
jae
mov
sub
mov
push
(bad)
dec
(bad)
mov
cld
jl
mov
into
cmp
push
mov
std
in
aas
lock
lods
adc
clc
out
int
bound
cmps
pop
data16
nop
mov
data16
jl
xchg
pop
mov
jbe
pop
ins
jecxz
mov
sti
lea
je
je
cli
cwde
rol
(bad)
shl
sub
add
jl
push
jg
adc
sbb
(bad)
retf
xor
sbb
xor
cmp
xor
ret
dec
adc
inc
pop
(bad)
xor
dec
je
in
pushf
fcomp
xor
cld
fist
dec
adc
loope
test
shl
cmp
xlat
lea
mov
mov
cld
fs
(bad)
push
pop
inc
inc
enter
aas
xchg
cmps
pop
std
daa
add
push
mov
dec
popa
mov
pop
pop
jnp
ret
xlat
mov
pop
es
in
loopne
sar
fld
frstor
fs
adc
push
inc
mov
xchg
test
push
pushf
aaa
es
push
xor
retf
sbb
cmp
mov
jge
mov
xchg
add
pop
sub
add
jnp
xor
aam
ret
sub
inc
sbb
jb
dec
xchg
iret
sbb
cmps
xchg
imul
into
xchg
xor
lods
iret
xor
jno
ss
push
cli
nop
ds
pop
mov
dec
iret
(bad)
pop
sti
cmp
rcl
aad
mov
sti
out
(bad)
in
adc
test
scas
fcomp
lds
stc
and
push
adc
ret
repz
repz
pushf
(bad)
not
cwde
in
jne
(bad)
dec
mov
jbe
or
or
xchg
inc
mov
pop
adc
push
inc
sub
lods
test
mov
adc
lahf
xchg
mov
pop
mov
das
(bad)
pop
sbb
nop
in
aad
retf
sub
xor
mov
outs
pop
inc
sahf
repz
jne
js
add
dec
jle
xchg
je
mov
scas
jl
jge
dec
or
cmps
aad
sti
mov
add
cmps
or
sahf
push
push
imul
fdiv
or
jg
dec
sub
and
popa
cmp
mov
and
ret
xchg
xchg
fsub
add
xchg
pop
retf
(bad)
or
add
movs
lock
xchg
mov
inc
dec
cmp
cmp
jmp
outs
sbb
in
pop
sub
dec
fwait
jno
jae
push
sbb
xor
(bad)
cmp
popa
dec
ficomp
push
mov
push
in
aaa
inc
mov
dec
adc
cmp
push
and
xor
shl
fisubr
push
mov
pop
fistp
stos
fst
mov
mov
xor
mov
sar
ror
retf
mov
pop
hlt
in
std
jge
mov
dec
xchg
push
xchg
mov
(bad)
into
rcr
push
xchg
add
xor
pop
cwde
xor
fsubp
xchg
sub
(bad)
jl
gs
pop
cmps
add
pop
aas
dec
sub
js
dec
sahf
mov
sti
and
in
cmp
test
cli
movs
sbb
nop
enter
mov
sar
movs
dec
mov
mov
adc
ret
adc
and
jb
rol
not
push
movs
(bad)
sar
dec
dec
idiv
(bad)
iret
rcr
pop
das
jo
and
enter
adc
lods
(bad)
sub
scas
js
pop
movs
push
adc
pop
sti
jg
xor
jmp
in
(bad)
xchg
inc
ss
hlt
imul
mov
pop
inc
icebp
scas
add
jp
inc
cwde
sub
push
or
sub
mov
and
loopne
add
xchg
iret
mov
add
das
pop
adc
ror
popa
test
clc
setb
inc
xchg
or
cmp
or
loop
outs
addr16
fnsave
frstor
mov
sub
cld
adc
cli
mov
mov
and
xlat
(bad)
cmps
xchg
xchg
call
and
push
xchg
shl
repnz
pushf
dec
pop
enter
and
pop
cmp
pop
dec
ds
cmp
icebp
or
enter
lock
and
movs
les
fadd
dec
repnz
call
mov
retf
mov
jae
add
shr
icebp
pushw
(bad)
jp
iret
rcl
inc
arpl
xor
arpl
mov
std
push
xor
jnp
ins
gs
cmp
and
adc
and
test
xchg
mov
mov
into
push
jecxz
outs
jo
je
dec
sub
lods
mov
repnz
(bad)
stc
ja
xchg
int3
enter
mov
push
add
mov
rcr
sbb
mov
sub
in
lahf
mov
ds
and
mov
ins
leave
leave
pop
lods
add
dec
push
mov
pop
push
push
jle
in
add
xor
dec
scas
rcl
stos
mov
push
sub
mov
add
ss
cmp
ror
xchg
cdq
scas
lahf
push
fdivr
pop
add
jmp
pusha
adc
cmp
mov
cld
lods
xchg
(bad)
mov
jle
lods
(bad)
mov
mov
jecxz
mov
icebp
jmp
mov
cmp
push
add
or
adc
inc
mov
repnz
mov
int
or
fidiv
cmp
add
inc
and
pop
pop
add
jns
rcr
xor
sub
pop
mov
jp
xor
jns
jge
xchg
fdiv
arpl
daa
jle
pop
and
xlat
add
cmp
sub
es
fcmove
pop
(bad)
pop
jmp
jl
imul
popf
jg
scas
clc
push
es
dec
pop
pop
dec
adc
lds
and
lahf
and
inc
sub
test
enter
cmc
test
in
mov
lahf
dec
addr16
fistp
xlat
adc
sbb
aad
mov
inc
pop
jmp
ins
pushw
push
aad
(bad)
jnp
jb
icebp
adc
retf
vaddsd
sub
call
add
adc
or
jae
(bad)
sub
inc
in
ret
xchg
icebp
or
xor
pusha
mov
mov
stos
or
jbe
cmp
mov
sub
fimul
lods
shl
fs
push
fnstenv
bound
loop
outs
retf
jns
mov
ins
mov
js
pusha
xor
xchg
popf
dec
dec
imul
mov
mov
popf
retf
add
jle
push
hlt
and
cdq
sub
ret
xchg
ficom
inc
mov
mov
sub
scas
and
out
mov
xor
cmp
add
sub
pushf
aam
xor
mov
mov
fwait
je
cli
push
ins
jne
jne
push
pop
addr16
adc
jmp
pusha
dec
arpl
stos
fwait
inc
push
adc
stc
es
data16
mov
cld
push
and
jno
sbb
iret
jae
fdivr
jmp
(bad)
jmp
shl
mov
pop
sbb
in
and
lods
xchg
mov
push
push
(bad)
sahf
movs
lea
nop
xor
ret
push
ror
fst
jnp
loope
xor
nop
push
jmp
icebp
fstp
rol
xchg
or
cli
pop
jnp
mov
loop
cmp
add
jae
ins
jmp
push
popf
out
fisttp
clc
dec
mov
sub
and
sbb
idiv
adc
pop
cmp
pop
mov
mov
xor
jo
cdq
and
das
mov
push
pop
rol
cmp
mov
aam
jl
pop
mov
pushf
push
les
xor
adc
dec
repz
cmp
and
sbb
inc
je
dec
push
movs
mov
int3
cmp
outs
cmp
cmps
inc
sti
push
sbb
adc
repz
mov
pop
lods
push
xlat
(bad)
icebp
push
mov
test
nop
and
push
cmp
stos
ins
jmp
ret
add
mov
clc
scas
sahf
retf
pop
imul
outs
jb
mov
inc
mov
cmp
and
sbb
popf
push
ret
xor
popa
mov
dec
into
cmp
mov
int
daa
jle
mov
xor
xlat
or
pop
shl
test
inc
dec
(bad)
out
sbb
jne
das
sub
mov
inc
sub
(bad)
dec
imul
inc
pop
cmp
(bad)
mov
push
ret
call
cmps
or
sub
jae
pop
inc
pop
or
or
xchg
push
jb
or
cmp
push
fidiv
sbb
or
adc
push
jmp
daa
mov
dec
out
stos
test
inc
and
je
fdivr
popa
test
and
or
data16
jg
push
dec
or
jp
loope
ror
adc
fbstp
and
mul
and
pop
addr16
jge
push
in
adc
inc
xchg
outs
js
imul
adc
xchg
sub
sti
push
push
jmp
dec
or
cmc
sub
mov
loop
push
shl
stc
mov
push
movs
xchg
adc
mov
mov
xchg
(bad)
jae
idiv
aam
loope
fs
movs
push
(bad)
fsubr
push
sbb
dec
add
xchg
add
(bad)
cmp
leave
mov
sbb
cld
loopne
pop
scas
pop
mov
jmp
inc
adc
hlt
cmp
ror
test
retf
sbb
push
cmps
jo
ja
stos
ins
add
shr
js
or
lock
jno
or
push
and
xor
clc
push
mov
jnp
mov
iret
dec
pop
stos
aaa
jmp
fadd
push
repz
cmp
mov
shr
or
xor
aaa
cdq
xchg
std
dec
arpl
sti
dec
outs
or
imul
aam
sbb
sub
push
cld
aam
and
xlat
(bad)
or
lds
dec
rol
mov
mov
je
pop
jmp
cmp
shr
(bad)
in
cmp
rcl
fcomp
sub
cmp
outs
test
retf
push
ds
je
jns
mov
pop
dec
inc
stc
rol
push
out
dec
sub
mov
push
jne
and
mov
cmp
add
sub
mov
not
aas
jo
sbb
out
mov
rol
and
adc
pop
int
das
dec
ins
aad
or
retf
and
dec
jno
ds
scas
rcl
popf
and
dec
popa
mov
icebp
jo
jmp
mov
sbb
lea
loope
jbe
mov
mov
dec
aaa
lahf
jo
adc
sub
mov
test
xchg
pop
ja
adc
pop
callw
pop
xor
add
pop
xchg
mov
ds
cld
neg
sbb
push
pop
dec
sub
dec
cmps
ret
hlt
mov
and
jge
test
inc
sbb
mov
ins
sti
movs
push
xchg
inc
call
xchg
inc
mov
ss
mov
xchg
or
shl
mov
jl
xor
mov
cli
pop
add
and
mov
aad
jl
pop
pushf
jp
add
fdiv
sbb
cmp
stc
cdq
xchg
xor
ins
jmp
cli
mov
out
(bad)
test
jno
sub
in
mov
loopne
movs
adc
add
cmp
bound
in
mov
and
lods
call
push
jne
ja
inc
out
(bad)
sub
enter
jmp
mov
mov
repz
arpl
dec
inc
stc
mov
jecxz
shl
test
ins
arpl
adc
lods
sti
cdq
sub
rcl
rcr
sti
movs
call
mov
ja
sti
clc
sti
add
pop
adc
mov
xchg
mov
dec
aaa
jge
movs
xor
mov
add
test
lods
(bad)
out
dec
mov
sar
in
stos
pop
cmp
fdiv
mov
sub
adc
ins
(bad)
add
push
data16
retf
nop
out
leave
data16
xchg
cmp
fcomp
arpl
push
inc
ja
call
arpl
adc
xor
arpl
ins
fidiv
dec
mov
shr
mov
cmp
mov
mov
pop
in
ret
int3
mov
mov
sti
fcom
add
fdiv
dec
pop
enter
jbe
sub
addr16
ret
out
push
pushf
stos
adc
sbb
and
or
popa
sbb
sub
sub
xor
inc
(bad)
loope
sahf
mov
sub
inc
test
sbb
fadd
jo
jmp
jg
faddp
loop
stos
cmp
cmp
movs
xor
jns
pop
sti
hlt
adc
sbb
pushf
ins
sti
test
mov
push
aam
mov
out
push
shr
pushf
sbb
push
add
pop
imul
imul
ror
mov
push
iret
add
daa
mov
loope
cmp
jns
aam
push
in
jge
xchg
dec
sbb
cmp
and
es
mov
and
pop
adc
stos
mov
push
out
adc
cmp
fidivr
mov
retf
adc
inc
jp
lock
les
mov
xor
aas
mov
int3
mov
test
fcmovnu
mov
mov
mov
bndldx
clc
push
fisubr
mov
inc
inc
dec
test
les
push
adc
inc
aas
xchg
push
add
mov
ror
repnz
mov
jg
push
sub
add
sub
(bad)
xchg
xor
jbe
fs
mov
mov
jmp
cmp
rcl
or
stos
lods
loope
data16
inc
xor
and
gs
and
adc
scas
sbb
cmp
pop
xchg
les
xchg
push
xor
xchg
in
rol
loop
cmps
(bad)
fdivr
shr
ret
jns
test
pop
push
lods
inc
fld
shl
call
(bad)
rcr
dec
neg
and
hlt
xor
(bad)
ret
cmp
loopne
mov
lods
std
jmp
add
jg
cwde
icebp
add
loop
xor
jbe
dec
mov
neg
rcl
aad
je
xor
scas
mov
push
jo
adc
mov
pop
pop
jmp
hlt
mov
(bad)
cmc
jmp
retf
sbb
push
cmp
aad
sar
cmp
enter
mov
pushf
xchg
(bad)
fdivr
lock
cwde
sub
popa
call
cmp
cmp
xor
or
rcr
std
dec
je
ret
mov
sub
mov
sbb
(bad)
into
sub
fisubr
sub
mov
ror
out
repnz
retf
int3
test
mov
gs
add
xor
sub
fmul
fild
adc
lahf
in
xor
and
and
adc
out
sub
add
xor
push
fs
inc
dec
movs
pop
out
imul
std
mov
push
leave
dec
mov
push
mov
inc
jno
call
loope
inc
inc
cmp
scas
ret
loope
jno
pop
dec
aad
arpl
cdq
inc
pop
pushf
add
cmps
inc
leave
jmp
aad
dec
sti
fadd
enter
and
aas
inc
imul
enter
and
je
out
adc
stos
add
neg
cmps
sbb
mov
dec
out
in
push
xchg
cdq
jmp
dec
pushf
mov
mov
daa
push
enter
push
push
mov
cmp
mov
mov
bound
sbb
and
inc
in
(bad)
pop
out
gs
cmc
xchg
stos
ror
jno
push
out
inc
test
lahf
inc
mov
mov
mov
cmp
ret
gs
cs
sub
or
sar
mov
inc
push
and
frstor
loopne
cs
in
adc
or
or
jbe
mov
mov
out
and
js
mov
div
cmp
sub
xor
out
push
pop
add
adc
push
adc
mov
inc
rol
fadd
and
or
and
and
imul
sbb
repz
fwait
(bad)
rcr
icebp
aad
dec
leave
fs
xchg
pusha
aam
clc
cmps
or
ret
dec
iret
xor
push
sbb
xor
xchg
test
pop
xchg
test
js
das
out
jmp
scas
loop
jge
hlt
jo
push
ja
dec
fst
mov
mov
push
div
mov
pop
push
inc
mov
push
clc
retf
sub
retf
(bad)
xchg
push
xchg
pop
cli
inc
jno
xor
adc
jge
pop
cmps
xor
ja
rcr
ret
sbb
stos
loopne
mov
es
gs
cmp
in
mov
pusha
leave
cmp
and
jb
mov
jbe
mul
inc
pop
push
nop
xchg
jge
pop
push
jne
imul
mov
(bad)
xchg
adc
gs
sub
mov
ins
lea
sbb
and
jge
jp
pop
lods
adc
push
leave
adc
adc
pop
or
or
lock
fst
mov
bound
fcom
jge
mov
mov
and
adc
jp
daa
div
push
push
pop
jbe
leave
push
jne
gs
sbb
jbe
xchg
push
cdq
mov
pop
cwde
mov
pop
jmp
mov
loop
mov
jmp
(bad)
mov
sti
movs
(bad)
fstp
fisub
adc
paddusb
in
mov
call
test
inc
sahf
cmp
adc
and
inc
fimul
sub
sbb
adc
sub
ror
add
dec
mov
lock
(bad)
ins
in
int3
test
or
shl
pop
xchg
addr16
fdivrp
add
mov
sub
leave
fwait
push
clc
inc
and
dec
in
dec
(bad)
mov
dec
push
lds
cmp
fwait
mov
fwait
rcl
(bad)
ror
(bad)
retf
stos
fld
in
push
or
add
pop
cld
scas
rcr
sbb
pop
fdivr
sbb
cli
jecxz
mov
mul
lock
(bad)
int
lods
and
cld
pop
pop
sub
(bad)
ss
(bad)
lods
imul
aas
push
dec
xchg
adc
inc
les
pop
jecxz
jae
dec
inc
pusha
adc
lock
mov
xchg
jl
and
int
out
js
adc
xor
jle
dec
test
adc
mov
dec
cmps
inc
cmp
jno
mov
out
ret
sub
lock
push
adc
cmp
dec
iret
xchg
dec
mov
les
push
jns
shr
(bad)
mov
cdq
mov
or
cli
jl
mov
scas
or
mov
in
repnz
xor
daa
and
lds
dec
into
outs
cmp
stc
mov
mov
mov
fist
(bad)
js
push
clc
ja
popa
loope
mov
pop
ficom
mov
retf
je
out
push
pop
mov
jns
jmp
retf
or
cli
add
sub
xor
retf
cli
dec
fs
stos
cmp
xor
mov
or
rcl
pop
xlat
(bad)
or
xor
mov
pop
test
cmp
aam
push
test
(bad)
sub
mov
movs
pop
nop
leave
mov
ss
outs
out
mov
xchg
adc
jle
hlt
ficomp
stc
cwde
sub
data16
mov
cmp
and
jg
sbb
mov
push
clc
sub
(bad)
sbb
dec
outs
sbb
push
dec
mov
cmps
mov
inc
mov
mov
imul
call
test
and
jns
outs
gs
jnp
xor
(bad)
out
arpl
repnz
inc
lods
xadd
or
cmp
setge
pop
jp
inc
mov
push
int3
inc
fisttp
and
int3
cmps
repnz
(bad)
jo
shl
ins
add
mov
addr16
int
push
adc
cwde
or
mov
call
mov
loopne
bound
fimul
jg
mov
fnstenv
sbb
sub
lock
mov
call
lds
add
cmp
jno
ds
rcr
test
pop
pop
cdq
pop
test
xor
push
sbb
in
fadd
(bad)
sbb
pop
add
std
ror
jecxz
fcomp
sbb
cmps
jne
xor
movs
cmc
pop
inc
jbe
div
mov
xchg
les
icebp
dec
sbb
jbe
loope
test
imul
inc
fs
int3
not
les
xchg
fcom
data16
add
fnstcw
or
(bad)
in
test
pop
fst
or
xlat
fmul
xchg
(bad)
out
fiadd
push
fsubr
sub
sti
popw
mov
xchg
jg
loopne
movs
mov
inc
aas
jg
jae
add
stos
sbb
xchg
jne
xor
inc
mov
dec
xchg
icebp
cli
mov
movs
xchg
stos
addr16
push
pop
dec
loopne
test
(bad)
arpl
jbe
enter
(bad)
adc
sbb
and
ficomp
mov
pusha
imul
shr
aas
retf
cmps
aad
aas
xor
mov
inc
add
adc
getsec
int3
or
add
pop
repz
cmp
shl
sub
retf
fstenv
(bad)
ret
cmps
scas
int3
idiv
dec
xchg
aaa
cmp
or
xor
sbb
xchg
jae
or
cs
mov
shl
sar
jecxz
cmp
push
hlt
outs
jmp
mov
add
jae
pop
enter
dec
test
pop
jg
sub
popa
outs
mov
push
pop
sbb
push
ret
popf
inc
sub
push
xor
pop
cmp
sub
ss
js
jmp
test
cmp
push
sbb
push
cmp
sbb
sbb
movs
fidiv
mov
xchg
pop
adc
jo
retf
jnp
dec
jmp
aas
(bad)
jmp
add
cld
daa
mov
ret
mov
jo
int
lods
inc
pop
stc
sbb
and
inc
add
pop
push
jmp
push
add
jb
jmp
addr16
bound
dec
push
das
cmp
pop
ds
push
xchg
mov
nop
push
scas
call
dec
adc
or
cs
fstp
cmc
lahf
jno
shl
mov
push
ins
les
imul
dec
jbe
mov
fisub
cli
pop
gs
cmps
cmp
xor
inc
sbb
cmp
inc
out
ret
cmps
fld
into
jne
inc
and
in
pusha
adc
sbb
jbe
lea
push
mov
xchg
into
sbb
jae
ins
ins
add
cmp
hlt
nop
mov
sbb
cmps
in
rcr
mov
inc
shl
cld
or
ror
leave
push
les
pop
pop
fisttp
mov
add
fcom
test
mov
mov
mov
cmp
jl
add
(bad)
ins
dec
xchg
popa
dec
push
in
dec
push
jo
adc
cwde
inc
jne
pop
ins
pop
ret
inc
fwait
(bad)
sbb
repz
pop
cmps
add
enter
pusha
hlt
(bad)
cld
mov
jnp
(bad)
lea
fdivr
(bad)
sbb
fiadd
mov
push
mov
and
std
jno
fidivr
inc
jae
and
scas
lds
mov
pop
out
dec
xchg
ss
sbb
fdivr
or
daa
inc
neg
in
outs
test
dec
scas
xor
into
(bad)
ror
ficom
or
mov
int3
mov
pop
adc
out
and
in
jo
mov
cmp
cld
inc
add
push
inc
inc
push
fwait
inc
xchg
jg
imul
repz
xchg
sub
jo
dec
mov
sar
mov
adc
xor
sar
je
xchg
xchg
scas
rol
add
ins
in
out
jmp
mov
sbb
mov
push
ds
xchg
cli
push
dec
sub
adc
inc
cmc
pop
repnz
pop
push
fwait
push
mov
adc
test
jb
jbe
inc
jnp
push
mov
inc
iret
adc
jmp
push
dec
test
stc
and
xor
cmp
push
sbb
loop
mov
les
cmps
mov
aaa
xor
bound
pop
test
and
jmp
sub
pop
loopne
int3
fwait
mov
out
inc
adc
je
xchg
cli
scas
pop
mov
sbb
pop
jnp
jae
jmp
ja
sub
and
ror
sub
jae
(bad)
mov
into
push
test
jmp
in
(bad)
div
sbb
mov
les
cdq
push
iret
icebp
iret
out
push
push
adc
mov
push
rcr
ret
adc
neg
cs
jne
pop
sahf
push
loopne
add
cmp
cmp
xlat
jmp
shl
xchg
jp
ins
mov
js
cli
test
xor
out
mov
add
adc
inc
jo
es
fiadd
cmp
cmp
pusha
ret
data16
fcom
(bad)
mov
cmp
clc
fwait
aaa
push
and
mov
loope
and
loopne
push
sbb
stc
ins
lds
mov
cmp
pop
dec
lods
icebp
sar
mov
jbe
dec
rol
jg
mov
xor
shl
adc
aam
ret
xchg
adc
inc
int3
jbe
and
cli
mov
xlat
sub
int
mov
dec
pop
sub
jae
jmp
aad
test
rcl
and
dec
push
repz
fdivr
dec
(bad)
jb
lods
call
(bad)
push
and
push
test
call
jo
mov
sub
pop
push
xor
add
in
pop
add
push
leave
retf
add
xor
pop
ror
lock
mov
mov
es
fwait
cmovns
add
xchg
fisub
add
(bad)
in
sbb
pop
in
cli
sbb
(bad)
or
fwait
push
lock
aaa
jl
jecxz
or
inc
mov
fdivrp
adc
mov
sub
iret
cmps
loop
or
movs
cmp
jae
shl
and
or
ds
shl
daa
shr
ins
mov
fdivr
mov
retf
and
test
cmc
push
pop
loop
ins
xchg
cmp
cmp
out
sub
fisttp
xor
cli
lds
push
dec
test
mov
sub
or
cli
fadd
into
jecxz
and
jne
mov
aaa
mov
push
xchg
retf
xchg
in
adc
les
sub
scas
dec
ins
outs
add
jo
in
and
cmp
xor
movs
inc
fsubrp
push
outs
inc
adc
add
inc
adc
sub
bound
push
inc
sub
jmp
fidiv
add
fild
sbb
shl
dec
jns
loop
and
pop
mov
outs
mov
movs
add
stos
sub
cmp
ss
in
adc
adc
int3
mov
ror
adc
daa
fstp
xchg
test
int
xchg
jg
mov
xchg
push
fsub
adc
mov
sbb
dec
iret
nop
ins
mov
je
dec
push
div
test
fistp
mov
cdq
mov
xchg
dec
jmp
aas
inc
xchg
mov
mov
mov
cmp
jbe
xlat
addr16
test
ins
fdivrp
shr
cmp
out
movs
mov
mov
sbb
add
cmp
push
ds
sbb
cmp
out
or
popf
int3
fst
je
cwde
pop
add
xor
mov
mov
xchg
adc
(bad)
cmp
loopne
mov
outs
(bad)
in
xchg
mov
daa
jbe
jg
lods
push
xor
lods
xor
cmps
hlt
xchg
jae
cli
mov
mov
pusha
sub
mov
or
aaa
jge
psadbw
sbb
xchg
cmp
push
mov
(bad)
mov
xor
mov
lods
or
fstp
gs
outs
sbb
imul
or
out
out
test
mov
les
ds
ficom
fmul
push
fnsave
cmc
shl
push
std
mov
adc
fmul
ja
(bad)
or
and
sub
cmp
das
fidivr
retf
xlat
jmp
adc
cmps
sub
push
pop
pop
adc
leave
push
or
mov
xchg
inc
sbb
xor
mov
or
cmp
mov
std
ins
sub
xchg
loope
(bad)
(bad)
sbb
or
dec
ret
adc
xchg
test
inc
fidiv
popa
out
pop
pushf
movs
movs
pop
or
or
or
ds
icebp
xor
xor
shr
adc
lea
lahf
jecxz
outs
xor
shl
test
cmps
arpl
dec
sahf
ss
sub
adc
std
xor
sbb
add
sub
push
stos
mov
xor
sbb
pop
pop
fs
fxch
pushf
fs
pop
mov
pushf
xchg
mov
lock
jbe
dec
push
pushf
sbb
pop
cmp
std
(bad)
dec
mov
jns
or
push
cmp
mov
cld
mov
push
fnsave
mov
dec
mov
jecxz
aaa
(bad)
or
mov
mov
mov
fisttp
fnstsw
and
add
jl
or
inc
sub
and
repnz
jp
mov
pop
sbb
pop
data16
xchg
leave
(bad)
or
and
lods
in
fcom
mov
pop
cmp
cmp
sub
dec
int3
aas
cmp
icebp
mov
push
rcr
int3
pop
push
cdq
xlat
dec
adc
imul
cmp
lods
and
popa
adc
sub
sub
pop
movs
(bad)
iret
dec
daa
jmp
xchg
out
push
inc
adc
sub
or
and
ss
inc
stos
inc
xor
add
stc
pop
mov
add
(bad)
xchg
scas
fstp
mov
hlt
ja
mov
pop
inc
sar
neg
fild
cwde
inc
jae
cmp
retf
mov
scas
mov
popf
push
nop
mov
jo
mov
mov
in
into
sub
jle
outs
push
repnz
sub
mov
xor
je
mov
rcl
mov
xchg
xchg
mov
sar
ins
pop
sbb
push
jmp
in
in
enter
adc
inc
inc
ret
(bad)
(bad)
test
mov
lock
inc
addr16
sar
out
xlat
nop
inc
xchg
imul
imul
jae
clc
sbb
sbb
sar
dec
scas
dec
sti
mov
sti
(bad)
push
movs
jne
pop
outs
mov
icebp
dec
xchg
mov
stos
aad
jno
fucomp
stc
dec
jbe
push
std
cli
xchg
sbb
fisub
push
jge
pop
fwait
mov
call
aaa
or
or
lock
loop
sub
jo
push
std
mov
fisttp
loopne
movs
mov
push
cdq
or
mov
and
jecxz
stos
or
sbb
xchg
call
fdivr
nop
or
or
inc
xchg
test
fbld
imul
imul
ret
add
cmp
scas
xor
xor
scas
fidivr
inc
mov
jb
add
or
cmp
gs
mov
jno
push
inc
imul
in
aas
gs
cmps
mov
and
dec
mov
xchg
inc
les
sub
mov
sbb
pop
faddp
adc
(bad)
xchg
xchg
dec
stc
sbb
fisttp
rcr
into
fbld
ja
cmps
das
retf
xchg
shl
jg
stc
lds
mov
aas
std
add
sub
jo
mov
sahf
sub
or
scas
lds
lock
rol
jge
xor
cmps
fwait
push
test
test
xor
into
cmp
xchg
jmp
scas
xchg
mov
push
out
dec
push
inc
xor
lods
sti
inc
mov
cmp
ficom
sub
popf
shl
xor
add
cmp
ror
dec
scas
stos
inc
mov
xchg
jge
jne
adc
loope
xchg
jg
mov
add
movs
pop
sub
add
add
sub
inc
cmps
fwait
jbe
outs
into
repnz
inc
xchg
mov
xor
div
bound
and
dec
outs
sub
jg
loope
(bad)
shl
adc
add
cwde
ss
mov
pop
cwde
fisttp
ins
mov
xlat
test
xchg
(bad)
cmps
sub
fwait
clc
mov
xchg
mov
mov
xlat
pop
jp
jns
add
mov
add
into
pop
lds
mov
std
out
sbb
in
dec
dec
mov
in
adc
int3
ja
ins
pusha
xor
call
pushf
sub
xchg
cmc
call
bound
or
call
hlt
mov
or
(bad)
clc
inc
and
shl
rcl
ret
shl
jmp
jmp
(bad)
mov
mov
pop
out
jg
sbb
push
ss
ins
adc
fadd
cdq
aad
rcl
jnp
inc
jb
call
jb
mov
xchg
pop
push
jne
jns
arpl
push
sub
leave
push
jle
and
mov
dec
ss
(bad)
rcr
daa
ds
dec
push
mov
xchg
fcmovne
rol
mov
mov
dec
cdq
sti
jp
fcmove
in
mov
jae
inc
in
and
pop
lods
dec
call
call
cmps
mov
sbb
loope
adc
mov
push
imul
adc
inc
dec
pop
stc
enter
clc
push
mov
add
jno
ror
fadd
pop
mov
test
xchg
jne
add
mov
or
and
not
aas
in
push
fsub
fwait
pop
dec
iret
mov
loop
loopne
xor
mov
rol
imul
(bad)
nop
dec
enter
pop
popa
ret
mov
popa
xchg
inc
inc
dec
fstp
jno
(bad)
jne
push
(bad)
in
pusha
sub
adc
mov
push
xchg
lock
mov
pop
test
shl
sti
inc
call
add
cmps
data16
add
and
cmc
and
add
bnd
mov
mov
push
leave
movs
inc
push
sbb
and
cmp
pop
shl
jp
dec
sahf
mov
jae
xor
daa
adc
jnp
iret
mov
push
and
pop
mov
mov
and
mov
das
adc
push
cmp
ins
dec
das
push
cmp
push
test
jne
lds
xor
or
sub
push
ins
and
loopne
sub
mov
push
repnz
je
iret
data16
ror
lahf
sub
xor
jp
retf
cmps
enter
push
xlat
inc
mov
icebp
jno
stc
cmp
adc
and
jns
ret
imul
ret
push
sub
clc
lods
mov
inc
pop
mov
add
sub
dec
stos
lds
inc
shl
mov
std
jecxz
mov
sbb
cs
xchg
xchg
sub
pop
sbb
mov
fistp
pop
popf
xchg
or
sbb
jmp
adc
push
xchg
push
or
(bad)
dec
sti
ret
cmp
ret
xchg
inc
push
mov
or
adc
inc
aam
ret
mov
stc
mov
and
cli
lea
call
rcl
xchg
jl
cwde
sub
xor
sub
les
leave
push
(bad)
stc
sbb
pop
mov
movs
xor
push
push
lods
or
iret
jmp
inc
addr16
add
leave
(bad)
call
test
dec
mov
arpl
jo
scas
push
and
test
pop
mov
mov
pop
pop
hlt
dec
mov
rol
pusha
daa
adc
fmulp
sub
aam
iret
dec
sbb
jmp
int
dec
fcomp
loope
mov
cwde
push
sub
mov
pop
nop
test
mov
sbb
dec
pusha
pop
adc
jmp
push
retf
(bad)
in
test
sub
je
sbb
enter
xorps
ja
fimul
mov
fld
xchg
sahf
daa
cli
ret
mov
push
in
jae
pop
imul
mov
jns
jecxz
cmp
outs
sub
adc
sbb
sub
loopne
lds
jae
push
out
fwait
daa
lods
aad
(bad)
mov
mov
shr
xchg
mov
dec
call
repnz
pop
xor
retf
(bad)
(bad)
les
(bad)
pushf
and
sbb
jg
ret
gs
mov
dec
dec
ret
cmps
mov
xchg
pop
pop
sbb
fimul
pop
jmp
stos
dec
loop
xchg
push
hlt
ficom
sub
pop
mov
pop
std
imul
push
pusha
add
jl
fsubr
inc
or
in
js
out
mov
inc
cmp
xor
ret
std
ret
cs
add
shl
or
mov
xchg
adc
sar
push
adc
jnp
and
cmp
inc
dec
lock
call
mov
adc
icebp
cdq
shl
mov
adc
jmp
cmps
jo
js
ret
sbb
pop
repz
jmp
add
push
add
push
xchg
nop
jne
ins
add
dec
into
ins
inc
retf
xor
sub
loopne
push
push
xor
stos
mov
push
push
jne
cmc
repz
ret
xor
jb
or
jne
aam
sub
cmp
pusha
pop
imul
cmp
sbb
or
hlt
scas
arpl
xchg
mov
push
test
mov
mov
and
movs
ja
sub
arpl
mov
in
push
sbb
loopne
adc
inc
push
icebp
dec
mov
loope
inc
bound
stc
sti
neg
ins
sub
fisttp
xchg
mov
push
cld
push
push
jmp
add
jecxz
sbb
xlat
push
lods
shr
pop
mov
aam
cld
mov
dec
fiadd
fidivr
sbb
cld
mov
mov
inc
(bad)
(bad)
mov
pop
test
rcl
iret
mov
pop
(bad)
ficomp
or
push
retf
xchg
mov
js
jmp
xor
arpl
mov
and
(bad)
fiadd
mov
push
scas
mov
cdq
cld
(bad)
sub
and
stc
dec
mov
mov
daa
mov
test
adc
cmp
pop
add
(bad)
dec
pushf
hlt
lahf
pop
out
xchg
dec
add
mov
xchg
push
mov
push
sub
cmp
mov
inc
pop
jmp
aad
pushaw
addr16
mov
mov
pushf
retf
loopne
imul
arpl
and
sbb
mov
ficomp
call
cld
inc
test
pop
sub
mov
clc
jb
mov
cmp
cmp
pmullw
pop
push
cmovae
mov
vandpd
loop
or
cmp
fdivr
hlt
popf
js
add
(bad)
out
shl
popf
and
sub
dec
lods
push
retf
add
or
xor
aas
aam
adc
test
xlat
cld
sbb
cmc
add
pop
pop
pop
dec
fnsave
lods
xchg
jmp
imul
mov
and
or
push
xchg
inc
and
cmp
ficom
sub
cmp
shl
mov
or
movs
push
xor
pop
cli
test
sub
int3
mov
inc
xchg
mov
(bad)
call
adc
stos
out
mov
nop
movs
pop
ja
test
addr16
sub
pop
leave
pop
inc
cmovne
lahf
pop
pop
jnp
sbb
push
test
inc
dec
lock
aas
arpl
rcl
(bad)
iret
jp
aam
xchg
xor
cmp
aam
or
jbe
or
adc
inc
scas
ror
xor
les
pop
xchg
mov
cmp
into
out
dec
fsubr
ror
push
lods
inc
jg
stc
mov
out
cmc
(bad)
imul
shl
push
movs
mov
loopne
and
cmps
inc
mov
jl
and
cmp
pop
xchg
out
push
push
daa
test
sbb
dec
daa
push
and
popf
(bad)
cli
xor
mov
xlat
mov
std
push
push
arpl
leave
push
sub
inc
aam
addr16
mov
loope
adc
cli
jmp
(bad)
out
mul
sub
pusha
adc
push
cwde
int3
clc
fsubr
test
ror
jns
push
retf
sbb
adc
pop
inc
(bad)
mov
push
loopne
jae
out
arpl
and
xor
aam
fiadd
mov
rol
or
xchg
mul
sbb
and
and
cld
mov
mov
aas
lock
iret
cwde
dec
or
fadd
fmul
btr
xor
adc
xchg
jae
sbb
sti
xchg
test
inc
push
mov
pop
movs
and
(bad)
out
mov
dec
cli
xchg
lods
in
outs
lea
cmp
lds
dec
add
or
call
inc
inc
cmc
imul
mov
push
sbb
fisttp
lock
mov
pop
pop
push
push
nop
mov
rcl
mov
(bad)
loop
fist
js
sbb
daa
fild
dec
mov
iret
dec
test
xchg
xor
or
enter
iret
xor
mov
ss
out
mov
sub
cs
xchg
jmp
lods
fbstp
iret
mov
lock
xchg
rcl
je
sbb
or
dec
push
push
mov
nop
and
jo
sbb
shl
(bad)
inc
mov
xor
add
push
scas
inc
adc
popf
jne
sub
lock
(bad)
xchg
pushf
fwait
jb
ja
dec
call
pop
loope
sar
fucomip
fwait
sbb
xchg
ja
shr
mov
push
call
movs
mov
add
fwait
sbb
mov
int3
ins
test
bound
push
inc
jmp
pop
(bad)
dec
sbb
pusha
pop
push
movs
rcl
jle
cmps
add
aas
or
mov
and
dec
in
popf
rcl
mov
xor
or
call
or
mov
les
loop
jmp
pop
fadd
loopne
dec
inc
jge
mov
data16
shr
cmc
lahf
ret
fs
xchg
(bad)
jge
mov
scas
cmp
mov
pop
push
jae
dec
mov
lock
jle
xor
cmps
mov
sub
icebp
cmps
inc
dec
ins
jecxz
mov
mov
mov
outs
and
pop
inc
ud0
ret
outs
pop
xchg
inc
xchg
xchg
pop
xor
das
mov
push
clc
pop
cmps
push
movlps
cmp
cmp
pop
retf
sti
addr16
fcom
push
in
or
jp
push
test
lods
cwde
and
adc
outs
cdq
xchg
aad
jge
jbe
pop
test
in
mov
mov
xlat
add
sbb
xlat
nop
mov
pop
lahf
ins
inc
mov
or
xchg
add
test
(bad)
cli
push
and
add
mov
test
aad
push
pop
jb
mov
stos
or
mov
sbb
ins
sahf
or
mov
or
add
test
int
mov
rcl
stc
nop
cmp
std
push
retf
sub
push
or
dec
pop
and
jmp
xor
sbb
and
sub
les
stc
cmp
cs
fidivr
xlat
mov
push
in
pop
cmp
sti
push
test
push
xor
stc
retf
mov
cs
mov
stos
mov
sbb
cmp
js
xchg
mov
dec
stos
fbld
outs
inc
(bad)
adc
xlat
xchg
fidivr
int
or
pop
shr
daa
mov
adc
or
mov
pop
push
fldcw
clc
mov
in
(bad)
push
stc
adc
repnz
movs
push
call
in
loopne
test
fxch
mov
repnz
adc
push
retf
pop
add
clc
add
stos
fucomp
adc
xor
add
jle
push
ret
out
imul
imul
test
mov
jno
sbb
das
lock
in
shl
in
cld
xchg
push
repz
fst
xchg
push
rcr
loop
out
int3
dec
out
jmp
adc
daa
outs
mov
gs
lea
js
sbb
mov
popa
jle
pop
push
jmp
(bad)
add
mov
movs
cmp
inc
popf
into
rcl
push
cmp
dec
jecxz
call
lds
pop
outs
rol
(bad)
jmp
lock
and
dec
push
jmp
imul
sahf
loop
jne
mov
jns
aam
call
mov
lods
loop
cli
inc
outs
jecxz
and
shr
jmp
lods
ror
adc
mov
dec
adc
xlat
xchg
sar
ss
(bad)
stos
push
mov
pop
dec
movs
xlat
sbb
push
rcl
mov
fs
xchg
adc
outs
in
or
dec
mov
sbb
sar
xlat
adc
loope
out
imul
adc
ss
popa
jns
daa
cwde
sbb
cmp
pop
and
ja
or
test
dec
stos
jb
mov
aad
push
icebp
push
out
aam
imul
adc
fdivp
jmp
in
cdq
push
(bad)
fidiv
add
sbb
jecxz
dec
dec
mov
cdq
out
inc
or
ret
rcl
les
std
add
ror
(bad)
popa
xchg
pop
add
xor
popf
xor
inc
sub
and
and
pop
clc
mov
(bad)
adc
ss
xchg
stos
cwde
in
mov
adc
xchg
cmp
jmp
or
nop
or
or
aas
fs
mov
test
sub
dec
movs
lods
or
fcom
cmps
mov
pop
faddp
mov
xor
sbb
les
xlat
xor
retf
daa
mov
xchg
pop
jp
rcl
pop
xor
je
inc
aad
inc
sub
mov
inc
jae
sbb
lds
popf
ss
in
lock
mov
cmc
outs
sub
mov
mov
or
sub
hlt
dec
xchg
call
pop
mov
fwait
xchg
mov
scas
mov
jg
push
(bad)
aam
sbb
call
mov
and
int
inc
int
cmc
int3
mov
ins
add
push
cdq
sahf
repnz
jo
fidivr
lods
fisttp
icebp
mov
stos
icebp
and
scas
jnp
sbb
or
dec
ja
leave
mov
xor
push
js
(bad)
sbb
cmp
jmp
leave
xchg
imul
popf
inc
pop
pop
inc
adc
jl
mov
mov
jno
(bad)
fisttp
jae
mov
movs
int3
inc
lahf
sbb
mov
mov
inc
retf
call
ret
imul
mov
ja
adc
xchg
loope
das
loop
das
aas
xchg
and
xchg
cmp
and
fcom
retf
(bad)
adc
dec
cmps
and
xchg
and
hlt
retf
stos
addr16
sbb
xor
test
fwait
test
add
test
mov
xchg
fs
(bad)
aaa
stos
jl
xor
inc
loope
dec
(bad)
or
xchg
in
mov
or
xor
inc
scas
pushf
inc
sbb
xor
adc
arpl
iret
push
fisubr
lock
jmp
test
or
pop
addr16
xor
rcl
ins
add
addr16
mov
dec
push
xchg
test
fcmovnbe
xchg
repz
inc
dec
in
hlt
out
inc
inc
cli
aad
rcr
and
sub
mov
scas
jae
cmps
sbb
mov
mov
sahf
add
test
mov
out
push
jae
dec
mov
inc
adc
out
cvtps2pd
or
mov
mov
dec
ret
jno
adc
xor
mov
out
mov
jbe
push
adc
hlt
jge
sub
mov
cdq
xor
mov
jb
js
(bad)
mov
pop
in
nop
xchg
sbb
mov
and
ins
jae
imul
aam
aas
imul
jno
cmp
xchg
in
add
loopne
in
jg
bound
inc
es
sar
mov
push
inc
sbb
push
movs
xlat
inc
mov
adc
out
repnz
adc
pusha
dec
movs
cmp
jmp
shl
mov
sub
adc
nop
mul
imul
inc
cwde
pop
dec
mov
inc
fimul
mov
call
cmp
push
dec
jnp
das
cmp
cmps
mov
hlt
cmps
inc
cmp
or
mov
in
cmps
outs
pop
pop
pusha
xor
mov
loop
dec
lahf
inc
push
retf
sub
and
cmp
test
leave
pop
push
loop
es
xor
sub
mov
outs
sbb
jmp
pop
daa
call
cmp
sbb
imul
cmps
ss
jge
mov
ins
fidivr
jns
cmp
jae
sub
inc
loope
jge
inc
inc
fimul
jo
loope
mov
push
mov
mov
scas
fld
int
or
sub
xor
mov
fdivr
cmc
mov
pop
and
mov
and
out
adc
xor
ret
sar
mov
add
pop
lods
rol
sub
fisubr
jl
pop
in
js
mov
push
push
mov
ds
(bad)
into
pop
in
jecxz
popa
fs
imul
push
add
inc
fmul
stc
push
inc
sti
mov
sub
dec
cmp
dec
mov
lea
ja
imul
inc
mov
les
test
add
sbb
mov
jbe
mov
retf
gs
repz
push
dec
or
outs
jmp
fucomp
push
fimul
push
pop
mov
push
dec
test
sub
or
das
mov
es
sub
mov
adc
add
fistp
rcl
jmp
or
ja
inc
lods
call
adc
fisubr
aad
lds
add
dec
ja
jl
jns
dec
int3
out
mov
psrld
mov
dec
mov
and
cmc
sbb
ins
pop
mov
xchg
popa
rol
cmc
cmp
lods
cmp
(bad)
xor
xor
js
inc
cmc
xchg
dec
leave
inc
sbb
dec
or
or
mov
xchg
push
lahf
xor
lods
out
popa
jae
push
retf
dec
and
mov
jmp
mov
jmp
push
sbb
gs
add
test
mov
and
cmp
add
add
stos
mov
aad
push
(bad)
fisttp
jl
push
sar
fisttp
adc
test
dec
fistp
xor
sti
test
test
loope
mov
adc
mov
push
mov
cwde
fbld
xor
loopne
mov
mov
enter
ins
xchg
adc
sbb
mov
in
adc
pop
arpl
dec
test
adc
push
xchg
push
fbstp
pop
jae
fiadd
addr16
imul
in
fcmovnb
adc
out
xchg
or
sbb
in
(bad)
ja
jge
int
add
add
jle
mov
mov
call
fucomip
xchg
jo
dec
mov
mov
sbb
cdq
daa
ret
in
retf
sub
out
icebp
dec
push
retf
into
cmp
fiadd
add
repz
outs
in
dec
lods
scas
arpl
push
lds
sub
adc
jle
(bad)
cmc
xchg
loope
xlat
gs
xor
inc
xor
push
jno
retf
lea
jbe
fsubr
pop
add
add
push
push
jp
scas
push
mov
or
(bad)
mov
cs
jnp
js
int3
sti
into
mov
mov
push
add
jo
and
pop
lods
mov
aaa
add
push
popa
mov
inc
imul
xchg
aam
fs
push
push
push
rcl
sub
mov
mov
frstor
ret
jmp
repnz
xor
popa
in
jno
popf
fdiv
fbld
and
mov
int3
into
aam
arpl
fcmovne
jno
inc
mov
mov
pusha
push
mov
fcom
dec
bound
mov
cwde
int3
imul
call
les
push
mov
pop
and
pop
ror
push
inc
std
jnp
push
mov
mov
lods
push
fidiv
sbb
aaa
sub
mov
dec
clc
pop
bound
pop
pop
push
pop
pop
lds
inc
xor
aas
dec
push
int
xor
sbb
pusha
dec
mov
inc
(bad)
xor
push
repz
jo
outs
dec
jns
inc
popf
mov
pop
sub
xor
push
push
or
or
mov
mov
xchg
sub
pop
mov
and
ins
inc
mov
repz
outs
outs
sub
mov
js
inc
clc
cmp
inc
xchg
retf
cmp
or
mov
das
xor
(bad)
loop
fld
jne
push
pop
sub
stos
cmps
movs
rcr
cmp
mov
in
mov
or
add
jmp
stc
mov
cdq
test
push
js
sti
(bad)
stc
add
pop
imul
das
hlt
sub
imul
and
(bad)
cmp
cmc
jge
xchg
out
pop
dec
xchg
(bad)
les
or
mov
jmp
ins
xor
and
cs
std
fldenv
add
fild
pop
mov
fistp
mov
ret
cmps
ds
xlat
popa
in
stos
sahf
test
cmps
jp
mov
xchg
shl
push
jmp
mov
pop
jle
fiadd
mov
jne
test
loope
dec
out
aad
popa
jmp
sahf
mul
out
pusha
out
and
mov
cmp
dec
fiadd
pop
cmp
fmul
xchg
xor
mov
sbb
and
popf
cmc
lods
jp
cmp
or
add
mov
push
nop
pop
or
or
std
in
hlt
pop
inc
xlat
inc
(bad)
sbb
frstor
mov
imul
inc
icebp
jns
pop
stc
pushf
jmp
or
cmps
rol
cs
ds
xchg
jae
add
sub
fmul
mov
int
dec
shl
mov
shl
jns
xchg
add
aad
aam
and
fnstenv
fsubr
shufps
pop
out
mov
popa
mov
jne
pop
in
mov
lock
out
and
or
repz
imul
icebp
sub
fwait
lock
fistp
dec
jle
mov
jb
and
add
lods
arpl
and
jp
(bad)
addr16
add
(bad)
push
cwde
ret
jmp
inc
call
mov
sub
test
xchg
mov
jmp
cdq
adc
fidiv
(bad)
jp
(bad)
aaa
sub
adc
ins
push
sub
cs
cmp
xchg
ss
icebp
mov
inc
cs
call
(bad)
nop
and
mov
pusha
and
mov
xchg
imul
stos
jg
and
push
stc
stos
cmps
repz
ins
mov
shr
(bad)
and
test
icebp
sub
je
pop
and
sbb
mov
xchg
iret
sub
js
les
push
cmp
push
(bad)
imul
bound
add
data16
mov
cmp
cli
scas
retf
psrld
dec
fnop
movs
adc
aaa
mov
fisttp
sbb
pop
inc
cmp
xchg
mov
loop
and
test
cmps
add
mov
lea
lock
push
iret
cmps
rcl
lods
aaa
jp
lea
fwait
adc
test
sahf
and
push
sbb
push
ja
inc
jnp
mov
imul
cwde
and
mov
push
xchg
(bad)
inc
mov
rcl
stos
pop
rol
push
pop
mov
popf
arpl
aam
call
add
stos
jmp
repz
(bad)
addr16
leave
mov
push
into
retf
retf
push
push
dec
jmp
popa
mov
cmp
pushf
jmp
sub
inc
or
xchg
jecxz
xchg
jmp
push
popa
shl
push
jmp
mov
cmp
and
pop
dec
ds
mov
push
inc
xchg
mov
out
mov
push
and
xchg
push
push
movs
lods
sub
or
scas
data16
fcomp
loopne
dec
jmp
mov
out
retf
pop
je
mov
out
pop
psrad
scas
ret
adc
mov
jns
daa
lods
mov
lods
pop
dec
pusha
mov
and
stos
inc
mov
(bad)
les
sub
fiadd
add
sbb
repnz
sar
loopne
cmp
je
mov
xchg
sbb
xlat
out
pop
dec
outs
repnz
adc
lods
inc
(bad)
mov
div
rcr
and
xor
ins
fs
sti
ficom
xlat
nop
adc
pushf
and
add
xchg
lea
mov
cmp
mov
inc
rcl
fimul
mov
pop
(bad)
add
inc
clc
out
cmp
mov
movs
and
push
add
xchg
or
mov
pop
add
sti
jae
xor
ds
(bad)
jecxz
jg
(bad)
dec
push
cmp
push
pushf
xchg
push
dec
jae
in
mov
xor
aad
inc
jne
mov
jmp
popf
mov
sub
and
push
push
test
(bad)
in
xchg
popa
xchg
add
push
fnstcw
mov
cmp
fbstp
aam
fnstenv
aas
mov
lea
cli
and
fadd
or
int3
sub
jns
xor
cld
aaa
sub
xor
ror
aam
imul
xchg
cmps
pushf
jmp
ss
push
(bad)
sbb
retf
or
jge
fstp
fsubr
pop
cmps
mov
stos
rcl
call
out
sub
inc
or
lods
cmps
pop
cmp
push
sub
xchg
lea
jns
js
popf
xchg
and
mov
xor
mov
sbb
lock
push
mov
inc
inc
(bad)
(bad)
jb
or
popa
pop
mov
mov
adc
mov
pop
xchg
call
aaa
or
add
inc
sub
jp
xor
mov
pop
je
js
mov
xchg
pop
icebp
outs
(bad)
test
rcr
jmp
idiv
jmp
cmp
test
ficomp
adc
fcomp
retf
push
and
in
ret
xor
add
inc
jo
repz
mov
jne
and
(bad)
pushf
cmp
xor
xchg
(bad)
mov
dec
jo
movs
int3
mov
cmp
inc
cld
cs
sar
mov
push
stos
mov
aad
loope
mov
fwait
(bad)
and
jnp
xchg
daa
pop
outs
scas
xor
out
jle
ins
imul
push
push
fstp
sahf
in
test
inc
mov
sub
cld
pop
adc
jb
sbb
pop
in
mov
cmp
mov
push
ret
jne
arpl
enter
and
add
cdq
mov
push
and
sbb
in
stos
les
ffreep
js
fbld
jmp
leave
leave
dec
leave
ds
cmp
adc
cli
dec
pop
movs
mov
aad
or
sub
shl
outs
inc
mov
push
xor
cmps
clc
add
in
mov
cmp
push
cmp
jne
sbb
mov
mov
aaa
and
ins
out
xor
fdivr
je
xchg
shl
ffree
int3
inc
or
rcl
ret
xor
sbb
xor
cwde
jo
fcmove
ret
(bad)
xchg
pop
iret
xchg
icebp
add
stc
in
add
and
in
jo
ins
sbb
call
sbb
push
outs
and
aad
cmp
movs
xor
(bad)
mov
pop
and
sub
outs
or
in
push
(bad)
push
xor
call
jne
cmps
inc
ds
hlt
and
push
xlat
mov
das
dec
push
outs
(bad)
pop
lods
push
cli
inc
scas
call
nop
mov
sahf
(bad)
mov
ret
or
fsub
leave
add
push
dec
mov
mov
dec
pop
rcl
push
test
sub
sar
icebp
dec
cs
mov
pop
jne
sbb
pop
dec
inc
xchg
sub
iret
push
push
in
pop
inc
xchg
inc
cmc
ror
and
retf
and
data16
mov
inc
out
adc
test
(bad)
xchg
into
fild
add
mov
addr16
pop
or
retf
jns
(bad)
mov
retf
clc
pop
jbe
xchg
loope
movs
imul
repnz
test
icebp
mov
rol
inc
inc
and
push
mov
ja
cmp
aam
or
fisttp
scas
jmp
and
jno
and
fcmove
(bad)
and
stos
mov
or
(bad)
jmp
cs
and
sbb
sub
cmp
add
sar
mov
add
jl
cmp
jbe
cmps
lahf
test
xlat
popa
mov
pop
pushf
mov
sar
mov
sub
dec
pop
fwait
aam
xchg
adc
xlat
and
sub
dec
gs
dec
push
xchg
sub
mov
ret
mov
push
shl
inc
retf
dec
dec
cld
ret
inc
div
(bad)
in
pop
int
mov
sub
push
push
(bad)
jb
sbb
inc
cmp
jne
jb
bound
test
popf
scas
lods
mov
mov
dec
iret
hlt
inc
sahf
push
faddp
andps
push
daa
pop
imul
int3
xlat
or
push
aam
jmp
cmps
dec
aam
mov
inc
sbb
xor
dec
pop
dec
mov
sub
add
add
inc
add
leave
and
push
jg
jp
mov
xor
ret
mov
popf
cmp
lea
jp
fs
fst
jmp
imul
adc
and
fstp
pop
xchg
les
jmp
lods
push
adc
sub
jb
in
ret
sub
inc
lock
ins
inc
dec
out
hlt
add
inc
fdivr
iret
sub
test
sub
cli
dec
cdq
or
stos
jp
mov
(bad)
sahf
loop
xlat
test
das
adc
cmp
cmps
aaa
(bad)
mov
lods
iret
lahf
cld
or
cli
sub
adc
xchg
jle
inc
nop
rcl
fisttp
jae
fistp
sbb
xor
sbb
jg
test
mov
clc
ins
lock
(bad)
outs
and
call
mov
push
mov
stc
(bad)
(bad)
and
rcl
inc
adc
dec
(bad)
in
stc
mov
jno
lahf
outs
add
jbe
outs
sbb
mov
xor
cli
jae
and
(bad)
push
or
mov
mov
sar
sbb
out
aam
ins
jnp
and
xchg
xchg
sbb
add
sub
or
mov
jno
xor
or
mov
popa
xor
sub
xchg
xor
pop
stos
cmps
push
xor
xchg
cmp
dec
or
hlt
bound
in
xlat
jge
movs
and
shl
sbb
(bad)
int
jge
repnz
inc
stos
jl
cmp
lahf
pop
imul
mov
les
retf
das
inc
jae
jmp
lods
std
xchg
and
push
or
repnz
stc
int
enter
jmp
xchg
gs
bound
jns
pop
cld
jg
nop
dec
adc
imul
ret
inc
je
pop
and
cdq
add
mov
xchg
mov
repnz
test
dec
data16
jecxz
stos
leave
jne
cmp
add
xchg
data16
and
movs
mov
dec
pop
fmul
sti
push
inc
cmp
inc
stc
and
push
push
imul
adc
adc
add
fdiv
bound
aas
jecxz
sbb
adc
xor
mov
inc
(bad)
and
cmp
mov
sbb
gs
int
(bad)
cld
into
pop
popa
xor
test
scas
(bad)
dec
xchg
into
ficom
fcmovb
test
xchg
leave
int
stc
int3
sub
sti
xor
out
sub
jb
lds
fild
xchg
cmp
add
hlt
push
ja
jl
sub
xor
daa
nop
xchg
(bad)
mov
mov
add
and
push
add
sbb
ret
and
mov
pusha
mov
movaps
(bad)
push
push
das
out
leave
cdq
cmc
out
out
shr
jne
dec
ds
dec
jbe
jmp
sti
jnp
jno
xchg
or
in
add
mov
add
clc
(bad)
rcl
mov
push
mov
mov
and
mov
mov
cld
nop
add
mov
(bad)
push
push
pop
and
adc
pop
jbe
mov
sbb
out
xchg
into
push
lds
xor
rcl
inc
mov
fisubr
imul
inc
cmps
out
ret
ror
push
mov
adc
cdq
dec
or
in
or
cdq
cmps
adc
inc
mov
fs
mov
rol
add
pop
imul
xor
jo
jo
movs
push
or
sahf
dec
mov
add
pop
dec
mov
sbb
ins
sbb
ret
sbb
jmp
cmp
popaw
daa
xchg
jle
sub
repnz
imul
push
out
jo
movs
inc
inc
jp
sub
sahf
lahf
pop
add
push
add
or
mov
lods
(bad)
xor
hlt
lods
dec
dec
(bad)
rol
in
out
int3
mov
es
fwait
adc
aaa
sahf
and
adc
dec
in
xchg
es
out
pop
stc
mov
jns
adc
pop
out
push
sbb
iret
xchg
sbb
jnp
sub
in
inc
pop
add
es
sub
push
into
ror
push
mov
sub
je
or
mov
test
inc
push
adc
lods
aam
mov
adc
lods
test
(bad)
repz
mov
xchg
mov
gs
outs
xchg
push
sub
(bad)
xor
clc
retw
sub
pop
mov
mov
int3
inc
cdq
xor
call
mov
dec
das
xchg
(bad)
cs
xor
adc
test
dec
sahf
adc
mov
mov
enter
cmp
inc
outs
out
imul
(bad)
xlat
inc
push
mov
dec
sub
and
(bad)
pop
mov
push
mov
jecxz
cmp
fcomp
xchg
into
in
and
ins
gs
icebp
mov
xlat
pop
fmul
ret
pop
mov
iret
inc
dec
clc
aam
test
jno
push
daa
ret
cmp
pop
push
push
push
add
adc
cdq
jle
or
push
sbb
mov
ret
(bad)
orps
fs
mov
adc
push
push
jle
mov
sub
xchg
je
mov
mov
jmp
lea
and
in
xchg
out
nop
adc
mov
fwait
pop
int3
adc
fst
jge
cmp
cmps
inc
rol
pop
int3
(bad)
cmp
call
adc
das
ss
or
xchg
nop
mov
int3
mov
xor
clc
aad
leave
out
(bad)
push
xlat
inc
add
sbb
das
repnz
(bad)
popa
movs
lea
pop
xchg
scas
jne
mov
or
mov
fimul
icebp
and
call
xchg
or
pop
shl
retf
add
jecxz
add
pusha
pop
call
xchg
daa
cmp
xchg
or
jae
cdq
sub
ss
mov
mov
ficomp
in
in
dec
in
push
add
pop
pop
sub
and
jecxz
sub
jno
lds
cmp
cmp
lds
mov
pushf
pop
sti
adc
loop
xchg
mov
inc
pop
enter
daa
sub
and
outs
fld
jl
inc
fadd
pop
inc
shl
mov
mov
xchg
outs
cwde
xchg
icebp
imul
(bad)
xchg
adc
in
jne
jmp
jl
movs
rol
setle
mov
adc
push
mov
mov
jmp
leave
pushf
stos
dec
inc
in
jge
bound
ret
sub
pop
fnsave
stos
(bad)
adc
loopne
cmp
mov
lods
mov
idiv
sub
cmp
and
(bad)
in
xchg
nop
(bad)
sub
rep
mov
ret
mov
and
call
sbb
add
mov
sub
push
nop
dec
stc
mov
cwde
rol
xchg
pop
add
jae
pop
in
lea
aaa
jg
inc
jg
jnp
cs
arpl
xchg
lock
add
fisttp
push
faddp
stos
push
fisubr
ret
loopne
lods
inc
jbe
retf
pushf
cs
jo
aas
cmps
cs
cmps
xor
and
call
dec
std
cmp
in
(bad)
jle
jbe
jne
jns
sar
pop
sbb
jle
ja
xchg
test
pop
lds
out
enter
mov
mov
pop
cmp
daa
jecxz
out
nop
add
repz
pop
mov
jp
cmc
xchg
fcom
or
pop
and
test
mov
mov
adc
aam
dec
jle
ins
or
mov
jo
and
dec
std
push
repz
dec
inc
lahf
fist
or
jmp
jmp
movs
stos
mov
data16
add
jp
out
enter
fwait
mov
xchg
jmp
push
jnp
stos
xor
jp
(bad)
shl
mov
aas
cmc
pop
retf
pushf
in
std
test
int
out
fstp
cli
jno
fadd
add
or
adc
sbb
cdq
add
in
mov
repz
sbb
jge
dec
das
mov
test
jbe
cvtps2pd
dec
aam
add
cmp
inc
mov
fimul
mov
out
sub
fld
pop
adc
or
ret
fadd
push
mov
cmp
sar
mov
xor
ins
adc
mov
add
pop
push
rol
xchg
xchg
outs
movs
imul
mov
pop
jbe
out
rcl
test
and
or
mov
sahf
xchg
imul
enter
and
bound
scas
mov
pop
push
test
mov
xlat
cmp
cmp
or
jno
cmp
rol
xchg
(bad)
push
idiv
jle
jge
outs
out
push
xlat
cmp
les
pusha
fidiv
in
cmp
hlt
mov
jmp
fdivr
(bad)
xchg
pop
shl
cmps
mov
out
aaa
jmp
sub
rol
mov
inc
out
scas
jbe
call
cmc
mov
push
outs
call
xchg
cmp
cdq
dec
mov
jge
pusha
int
es
cs
inc
xor
pop
imul
or
mov
sbb
fwait
xchg
mov
jmp
ds
jmp
jns
inc
out
rcr
mov
xlat
adc
xor
test
ret
cs
push
popa
pop
sbb
inc
faddp
mov
aam
mov
cmp
push
mov
inc
jmp
cmp
adc
div
pop
lock
and
fld
push
push
lds
ret
mov
fwait
or
test
sbb
loope
jp
mov
jb
fs
pop
rol
xchg
aam
add
push
(bad)
aas
unpcklps
es
add
shl
nop
pushf
mov
jmp
mov
inc
mov
fwait
dec
xor
(bad)
dec
dec
imul
out
xor
xchg
dec
pop
cli
pushf
push
and
ret
scas
cmp
push
mov
(bad)
jmp
enter
scas
mov
xchg
dec
ja
adc
out
add
and
add
mov
pop
loop
mov
ror
jge
mov
js
dec
jbe
mov
lea
xor
jmp
leave
arpl
ret
loop
inc
jecxz
sti
aam
push
and
or
ins
and
pop
mov
loope
sub
stos
(bad)
stos
xor
xor
sar
add
fist
mov
outs
adc
jns
pushf
stos
push
shr
loop
or
shr
test
leave
dec
fmul
xchg
(bad)
movs
xor
add
rcl
mov
xor
cwde
call
push
mov
sub
(bad)
mov
imul
pop
sub
and
or
xchg
dec
sub
push
enter
mov
xlat
pop
iret
sub
nop
or
or
inc
sub
mov
aas
cmp
mov
dec
and
iret
jecxz
xchg
pop
mov
mov
mov
leave
xchg
jno
in
aad
jns
mov
xchg
loope
mov
(bad)
xor
add
or
mov
sbb
in
push
xchg
mov
rcr
push
inc
mov
or
jns
shl
push
daa
jno
and
jns
cli
rol
into
add
lahf
out
pop
add
rcr
or
add
pop
push
pop
mov
and
jb
xchg
adc
mov
xlat
in
add
pusha
cwde
neg
sub
fsub
lea
dec
sbb
jb
dec
jecxz
adc
xor
outs
mov
(bad)
movs
mov
pop
cmp
jnp
add
jno
pushf
scas
les
test
or
int
jle
adc
jl
xchg
and
and
fiadd
pop
mov
stos
mov
xchg
mov
fmul
hlt
shl
inc
imul
int
pop
in
jmp
ins
mov
dec
push
ror
cmps
pop
mov
xor
imul
aad
xor
nop
daa
cmp
rcr
push
out
add
popw
lock
sub
(bad)
dec
fwait
popf
pushf
dec
push
popf
push
fsubrp
inc
or
lods
mov
jne
test
mov
fidiv
pop
jg
push
pop
cwde
test
in
mov
push
xchg
and
sbb
fld
stos
inc
idiv
enter
in
cmc
add
icebp
mov
imul
pushf
or
mov
jns
adc
mov
xchg
fist
out
lods
inc
out
ret
pusha
dec
and
mov
jg
mov
jp
mov
inc
mov
fisub
lods
cli
push
movs
scas
ds
mov
mov
sbb
xchg
sub
sbb
push
fistp
(bad)
lods
sar
mov
pop
jmp
or
adc
xor
daa
out
enter
outs
inc
lods
iret
adc
pop
adc
xchg
repz
mov
mov
pop
push
dec
push
in
add
xchg
fst
test
push
cmps
mov
dec
loop
jae
and
jmp
xchg
or
push
xchg
scas
inc
std
mov
add
inc
(bad)
aas
add
popf
dec
jmp
adc
adc
push
(bad)
and
push
mov
retf
cmp
pusha
(bad)
adc
xlat
aas
mov
inc
fs
add
loopne
mov
cld
aam
pop
test
lea
nop
(bad)
(bad)
out
lock
fucomip
lea
call
das
loopne
dec
repz
push
xchg
or
sub
or
jne
push
out
fisttp
adc
clc
mov
push
dec
jmp
nop
(bad)
mov
cmp
push
aas
imul
push
bound
inc
lea
ds
js
cmp
cmp
pop
cmc
mov
daa
ins
jmp
sbb
sbb
ins
leave
inc
mov
inc
in
sub
or
or
repz
call
fnstcw
jo
and
or
loope
rcr
sub
and
adc
or
and
mov
xchg
xlat
jge
fs
movs
mov
inc
sub
dec
nop
sbb
or
into
leave
sub
inc
mov
(bad)
xchg
scas
sbb
add
out
out
jb
imul
mov
cmp
jmp
sub
mov
scas
mov
jge
add
gs
out
std
stos
or
or
add
pop
lods
add
das
pop
cmp
xchg
sbb
adc
cmps
or
fimul
call
cmc
sar
and
mov
or
xlat
add
mov
imul
loope
pop
fyl2x
test
in
imul
out
in
add
or
mov
out
les
push
jne
sbb
ins
mov
ret
add
cmp
push
in
test
cmps
xor
mov
das
and
inc
out
add
xchg
pop
retf
mov
(bad)
sub
les
cmps
pop
mov
jne
push
push
cmps
sahf
xor
add
sub
fimul
into
sbb
jnp
ror
pusha
outs
push
addr16
ins
hlt
inc
out
(bad)
jle
in
pusha
std
gs
sub
pop
mov
mov
and
pop
in
sti
mov
mov
or
and
dec
jae
lahf
retf
leave
or
add
cdq
(bad)
in
and
mov
lea
mov
adc
repz
outs
or
xchg
and
jnp
into
aas
jmp
je
pushf
nop
adc
push
mov
fs
push
mov
push
add
hlt
sar
addr16
retf
or
cmp
inc
sub
std
sub
mov
add
sbb
test
sbb
dec
jb
inc
and
cmp
mov
les
sbb
xor
mov
ret
mov
sub
jecxz
scas
aam
in
jbe
xlat
and
imul
cwde
scas
inc
ficomp
aam
inc
retf
or
xchg
fwait
mov
imul
hlt
loopne
inc
inc
fs
lods
xchg
scas
pop
cwde
not
test
enter
loop
dec
shl
(bad)
es
xchg
test
mov
cmp
shl
jecxz
sbb
add
dec
mov
cmp
stos
cmps
leave
mov
(bad)
mov
push
push
outs
test
in
mov
pop
jns
cmp
cmc
pop
mov
shl
cld
daa
test
push
iret
pusha
pop
test
repnz
or
sti
cmps
push
push
sahf
inc
adc
je
in
dec
pop
(bad)
std
mov
cmp
outs
mov
mov
mov
cli
mov
into
ja
xor
ja
lds
mov
sbb
lock
scas
lods
jae
add
lea
push
(bad)
mov
cdq
ja
push
xchg
test
into
push
popf
sbb
cmp
push
sub
sbb
mov
dec
add
mov
pusha
inc
or
push
loopne
push
dec
mov
mov
in
dec
adc
in
into
or
cmp
xor
pop
pop
inc
xor
xor
(bad)
jle
loope
adc
imul
leave
(bad)
retf
cli
mov
cli
test
push
ja
in
pop
jns
jno
mov
dec
sbb
call
aad
xchg
in
cmp
(bad)
push
in
xchg
mov
not
jb
(bad)
mov
retf
ins
retf
das
int
loopne
fsub
dec
popa
pop
dec
nop
sahf
dec
(bad)
push
push
rcl
xchg
pusha
mov
or
cmps
adc
sub
movs
mov
mov
jecxz
data16
sub
mov
into
loop
push
adc
pand
jmp
stos
jns
movlps
cdq
(bad)
leave
les
xor
cli
mov
repz
sbb
cmp
lock
adc
lock
test
aas
test
add
jns
out
mov
popf
retf
mov
imul
mov
push
mov
xor
mov
std
dec
jecxz
in
pop
pop
mov
dec
dec
sbb
retf
loop
jbe
repz
cli
loope
out
mov
inc
adc
lock
pop
jae
jecxz
outs
sbb
sub
in
jbe
daa
mov
aaa
xchg
ret
xor
fcom
mov
jne
jmp
das
(bad)
test
add
ret
in
and
add
jmp
out
outs
dec
stos
pop
outs
mov
mov
fisub
sti
sub
das
cs
je
out
sbb
in
repz
add
pop
dec
arpl
sub
mov
test
out
push
push
ins
adc
mov
lock
mov
ins
mov
psllw
outs
int3
inc
retf
test
and
loopne
lods
ffree
pop
pop
inc
and
push
daa
push
sub
or
sbb
mov
mov
xchg
and
pop
sbb
push
pop
add
pop
imul
and
(bad)
idiv
or
call
sbb
or
sub
mov
sub
sbb
aaa
inc
push
in
mov
loop
xchg
shl
and
pop
mov
cmp
cmp
mov
ss
mov
or
jg
cmps
jo
iret
jae
inc
xchg
test
test
jg
scas
jmp
ja
fst
sbb
addr16
das
mov
out
dec
add
scas
ja
je
mov
xor
cmp
inc
mov
cmc
fld
ins
bound
(bad)
fs
or
push
jnp
pop
jae
nop
and
add
mov
push
jge
cdq
clc
and
mov
jno
mov
mov
adc
jle
push
dec
ins
sbb
adc
fwait
(bad)
lock
and
cmp
inc
adc
pop
js
dec
fst
mov
(bad)
add
pop
aaa
adc
add
adc
xchg
pop
xchg
and
push
xchg
stos
(bad)
rcl
jle
sahf
js
lock
mov
jae
inc
in
jo
dec
hlt
fs
repnz
inc
outs
imul
adc
mov
test
mov
jle
in
cdq
loopne
adc
aaa
mov
mov
pop
add
loope
cmp
(bad)
or
jp
jae
dec
std
int
jb
dec
push
inc
push
mov
and
ds
inc
dec
push
fistp
inc
repnz
mov
sbb
push
jns
cmp
or
inc
jecxz
lods
cmp
dec
movs
lock
int3
rcl
sbb
cmps
mov
mov
dec
int3
cmps
mov
inc
shr
sbb
xor
lods
or
das
mov
icebp
mov
ins
gs
and
mov
in
mov
out
pop
loop
mov
and
sub
aas
jno
pop
cmp
inc
xchg
in
jmp
cs
ja
mov
xchg
push
xchg
(bad)
jmp
sbb
sbb
jecxz
pushf
loope
lock
mov
cmc
das
setl
xor
dec
mov
dec
dec
ucomiss
jmp
scas
out
mov
sbb
out
push
xor
push
out
mov
adc
mov
sub
loopne
xchg
and
push
adc
or
xchg
xor
and
nop
push
and
jecxz
push
cmp
leave
push
(bad)
(bad)
out
popa
ja
dec
imul
loopne
or
imul
adc
mov
cmp
xchg
das
mov
push
xor
lods
nop
std
fisttp
adc
loopne
inc
dec
pop
xchg
call
ror
mov
and
in
jg
adc
shr
inc
sbb
les
xchg
pop
jne
sub
sbb
xor
in
xchg
fnstcw
sub
pop
pop
cwde
pop
shl
ds
test
cmp
dec
out
popf
sub
retf
mov
jb
leave
outs
into
mov
loope
mov
mov
push
pop
add
adc
sbb
pop
xchg
or
stc
dec
push
lods
fdiv
or
jp
sti
adc
add
push
add
sub
mov
sbb
fnstsw
ret
mov
fxch
mov
jae
mov
add
pusha
ins
das
cmp
rcl
ja
cmp
push
lods
lahf
mov
sub
cwde
cs
call
cmp
jbe
ficomp
sub
xlat
fldz
retf
jecxz
aam
xchg
push
sbb
adc
add
fbld
push
mov
stos
inc
repz
jle
add
sahf
mov
jge
push
or
stc
cmp
(bad)
outs
loope
dec
aam
push
mov
shl
(bad)
or
and
fidiv
inc
aam
jo
pop
inc
xor
outs
mov
sub
xor
pop
add
sub
xchg
mov
call
retf
mov
jne
gs
sub
sbb
inc
ds
add
add
stos
fnstenv
test
fdivr
mov
jmp
cdq
lods
mov
test
mov
xor
push
mov
js
(bad)
ins
push
fistp
stos
xchg
cmc
push
jge
rcr
stos
not
adc
sahf
in
cmp
xor
xlat
shl
test
xchg
stc
rcr
pop
push
ins
push
dec
push
mov
imul
test
jb
test
jnp
pop
js
dec
rcr
mov
inc
sbb
aam
out
aam
xor
pop
stos
sub
dec
jmp
jg
mov
xchg
(bad)
faddp
cld
adc
in
dec
mov
xor
lea
mov
shr
mov
(bad)
repz
push
stc
adc
dec
enter
repz
sub
int
mul
fcomp
sbb
aad
jne
movs
cwde
neg
neg
aam
jmp
cli
test
movaps
icebp
out
xor
mov
outs
pop
xor
or
int3
dec
mov
scas
or
adc
shl
or
mov
and
pop
movs
fdivr
sbb
inc
or
lahf
lea
xor
add
mov
imul
jne
cli
out
iret
inc
add
mov
je
cmps
dec
int
lods
ds
pusha
frstor
cmp
xchg
add
mov
inc
out
cmps
daa
jmp
pop
addr16
jl
lea
sub
es
xor
js
sbb
cwde
and
mov
jg
sub
push
aas
sahf
call
and
out
clc
and
gs
sub
xchg
mov
xchg
(bad)
and
stos
lahf
loopne
ficomp
add
sbb
and
push
std
popf
xor
sbb
data16
add
outs
xor
mov
xlat
inc
sbb
xor
xchg
mov
jno
adc
add
mov
adc
jne
ret
ja
mov
in
sar
dec
outs
dec
push
inc
pop
xchg
jae
mov
lahf
mov
pop
ror
dec
jecxz
jle
mul
cmc
push
cmps
pop
retf
aam
into
add
dec
ret
shrd
mov
jo
cmps
push
jecxz
mov
mov
push
cmp
xchg
test
inc
jmp
mov
icebp
mov
adc
(bad)
scas
adc
ret
mov
retf
loopne
pop
aas
pop
lahf
push
retf
(bad)
mov
jbe
sub
(bad)
push
jnp
loope
aaa
mov
rcl
push
lods
div
mov
pop
fwait
je
(bad)
ja
sbb
mov
sub
jne
sbb
sbb
mov
imul
sbb
lea
sbb
pushf
and
xchg
adc
jl
rcr
push
jmp
xchg
test
in
jb
dec
sar
ins
push
sub
xchg
pop
xchg
dec
xor
add
push
gs
clc
sahf
sbb
inc
pop
xor
pop
xchg
jns
sahf
popa
xor
mov
and
aaa
loope
mov
call
push
outs
push
pop
sub
ja
xchg
jp
int
sti
arpl
cmp
pop
pop
movs
bound
data16
cmp
rcl
jge
dec
jno
push
push
mov
das
(bad)
(bad)
cmps
add
pushf
push
mov
jle
mov
inc
cs
test
push
pop
add
rcr
cli
in
pushf
xchg
cli
xchg
ins
dec
fs
cmps
xchg
je
test
and
mov
(bad)
adc
jge
popa
xchg
outs
xor
icebp
lods
cmps
bound
mov
lods
pop
push
xor
pop
bound
jmp
test
pop
imul
sbb
(bad)
aaa
call
mov
test
and
daa
sbb
mov
(bad)
(bad)
xor
and
cmp
je
dec
or
xchg
lock
add
xor
out
mov
or
iret
inc
sub
mov
out
xchg
lods
xchg
loope
les
xor
adc
push
dec
and
add
jbe
inc
aad
sbb
popa
jl
xchg
clc
test
adc
daa
ins
cs
xchg
arpl
sub
xchg
mov
mov
in
mov
icebp
ins
pop
gs
add
pop
lds
jecxz
imul
lods
outs
jge
sub
data16
out
sti
fisubr
push
pop
or
ins
repz
pop
dec
std
or
push
pop
pop
les
test
and
das
xor
jno
mov
sti
pushf
ins
add
sbb
xchg
cld
dec
push
pop
test
ret
mov
(bad)
push
sub
sbb
je
or
aaa
leave
push
inc
rcr
shr
imul
daa
bound
mov
pop
and
sbb
cwde
dec
jl
xchg
repz
loope
xor
fadd
shl
pushf
fisubr
movq
dec
dec
mov
pop
je
push
into
(bad)
xor
xchg
(bad)
mov
and
in
shl
outs
pop
out
lea
xchg
add
jns
clc
sbb
and
sahf
sub
das
xor
lock
mov
xchg
sbb
xchg
test
data16
aas
mov
pop
je
jae
sbb
stc
fstp
inc
mov
ret
sar
mov
pop
addr16
cmc
mov
push
nop
cmps
inc
xchg
fld
shr
mov
les
imul
test
ins
mov
pop
and
sbb
cmps
lods
mov
jae
push
movs
xchg
dec
scas
jb
fsin
call
xchg
xor
mov
cmp
call
das
mov
dec
out
lock
dec
ja
fstp
retf
adc
and
add
cmp
jae
and
(bad)
or
sti
mov
loop
add
add
adc
add
add
nop
xchg
push
mov
mov
jg
cmp
shl
mov
mul
ficom
jmp
rol
push
les
shl
push
test
push
dec
loopne
mov
add
je
out
pop
es
fcomp
sub
sbb
pop
ror
mul
pop
lea
int
adc
test
aaa
rcr
and
scas
pop
cmps
test
ins
imul
pop
xchg
frstor
cmp
pop
ret
jl
rcl
mov
les
popa
jb
and
aam
fistp
test
pushf
mov
mov
nop
jns
leave
in
icebp
jo
jo
push
sti
(bad)
mov
jno
dec
xor
test
mov
inc
fild
sti
and
xlat
ins
fsubr
lods
cmps
mov
push
sahf
retf
pop
movs
pop
call
add
fwait
arpl
shl
fisub
retf
sti
ret
(bad)
xchg
ss
dec
dec
dec
sbb
lods
lahf
ret
das
adc
jmp
xor
and
mov
cs
mov
jle
in
mov
lods
adc
fwait
retf
rcr
lods
mov
pop
pop
sbb
stos
clc
test
(bad)
fst
arpl
mov
aas
dec
icebp
adc
bound
jns
and
sub
sahf
jle
or
jae
xor
mov
push
mov
adc
call
fwait
out
or
jns
fcomp
icebp
adc
cmps
jnp
xchg
dec
inc
jle
mov
mov
push
or
mov
(bad)
mov
lds
movs
xor
sub
call
mov
mov
mov
dec
jg
cmps
dec
push
aas
ss
sbb
pop
inc
cmps
(bad)
xlat
ret
mov
shr
cs
dec
inc
jmp
in
inc
pop
movs
pushw
nop
ror
outs
ror
dec
mov
icebp
adc
cmp
jbe
sbb
lea
push
bound
sti
ror
sub
pop
(bad)
pop
adc
repz
push
sti
mov
cwde
push
push
mov
cmps
lahf
cmp
jg
test
push
mov
outs
fistp
loop
sub
mov
dec
dec
shl
jmp
mov
push
sub
in
jecxz
imul
into
mov
jg
mov
in
inc
lods
fistp
push
lea
and
into
popa
mov
lods
out
mov
fimul
pop
mov
lea
call
inc
shr
xchg
cdq
cmc
ror
cli
mov
pusha
pop
mov
pop
fcom
mov
jbe
(bad)
imul
stos
xor
in
lds
and
sub
fistp
xor
pop
xchg
mov
mov
pop
sbb
adc
je
jns
popa
xor
cs
hlt
(bad)
mov
retf
int
pop
push
xlat
pop
shr
shl
dec
pop
jmp
sbb
stc
add
shl
inc
outs
je
adc
pop
daa
mov
and
push
lahf
mov
sub
je
adc
jmp
mov
mov
data16
add
ds
push
sub
neg
or
icebp
fcom
sar
xor
xchg
inc
enter
and
cmp
shl
push
push
lods
out
mov
lds
dec
fidivr
push
stos
jns
call
mov
xchg
xchg
mov
scas
popf
dec
xlat
pusha
and
dec
or
or
repz
imul
mov
(bad)
lock
or
fs
cmp
(bad)
cmc
cmp
jne
les
call
rcl
rcl
xchg
pop
sub
jno
scas
(bad)
aad
out
mov
xlat
adc
xor
sbb
lea
ja
lock
cmp
push
jecxz
(bad)
jmp
iret
mov
out
xchg
test
in
outs
fisttp
test
push
sbb
push
add
dec
dec
sar
pop
xor
inc
cli
in
jmp
(bad)
jo
fwait
cmp
xchg
fidiv
jl
push
loop
fimul
pop
adc
push
(bad)
or
jo
shl
test
and
enter
loop
cwde
movs
jmp
jbe
jle
and
jp
shl
jno
dec
out
dec
lds
mov
(bad)
adc
xor
xor
pop
mov
inc
add
lds
arpl
mov
imul
add
xchg
stc
rcl
(bad)
xchg
or
sbb
jo
mov
and
xor
std
arpl
mov
push
mov
lods
(bad)
enter
test
inc
in
aad
jo
retf
mov
add
loopne
imul
sub
or
inc
lahf
ins
daa
xchg
xor
push
jp
(bad)
retf
pop
cmp
pop
add
loop
repz
sti
pusha
dec
add
jne
jmp
in
fsubr
and
movs
lahf
dec
stos
cmp
xlat
cli
retf
(bad)
pop
add
dec
jmp
sub
add
call
xchg
push
imul
rcl
lea
or
mov
aad
inc
mov
inc
loop
mov
neg
nop
cld
cmps
dec
dec
pop
inc
push
lds
enter
xor
retf
adc
aam
ins
out
fcmovu
iret
mov
or
mov
or
fwait
(bad)
scas
sbb
(bad)
les
stos
scas
jns
sub
sahf
js
xchg
and
sub
sahf
js
jl
clts
sub
imul
adc
sbb
stos
movhps
nop
ins
and
fcmovne
ret
test
mov
cmps
or
lahf
cli
imul
lods
sbb
enter
ror
adc
imul
and
scas
ds
push
xchg
dec
enter
mov
sub
dec
aad
aam
push
cmp
int3
lds
test
jae
fdivr
mov
and
(bad)
(bad)
sbb
mov
jns
mov
adc
inc
lea
or
add
jns
jbe
add
sub
xchg
fidiv
popf
hlt
adc
pushf
sbb
mov
pop
cmps
lods
aam
out
scas
pop
sub
loopne
lods
in
adc
pop
les
nop
outs
jae
add
rcl
inc
outs
addr16
push
mov
aaa
jne
sbb
imul
test
sbb
icebp
dec
cs
ins
sbb
sub
daa
aaa
mov
xchg
xchg
add
mov
inc
neg
fnop
loope
lods
fcomip
mov
retf
inc
adc
cmp
push
(bad)
xor
mov
and
in
adc
sbb
xor
and
jne
rcl
lods
xor
adc
aad
jb
stos
and
leave
addr16
pop
in
pop
mov
outs
ja
jg
mov
lds
ja
cmp
xchg
mov
(bad)
cmp
mov
sub
inc
fs
sub
loopne
bound
cmp
fdivr
mov
(bad)
out
(bad)
dec
or
push
mov
add
xchg
jb
out
xor
test
sbb
cmp
aad
test
or
mov
scas
retf
imul
dec
ror
dec
(bad)
ins
xor
pushf
js
push
(bad)
xor
and
rdmsr
popf
pop
jae
dec
jne
into
hlt
mov
add
mov
loope
fstp
cdq
and
sub
mov
cmps
lock
push
out
test
mov
in
or
mov
mov
cli
mov
mov
das
into
(bad)
aas
ror
inc
xor
xchg
push
push
std
push
cmp
(bad)
cld
aaa
sub
mov
jg
pop
fist
cmp
mov
pop
(bad)
sub
jbe
ficom
je
daa
jge
push
cmc
jmp
inc
cmps
stos
idiv
shr
in
ins
mov
dec
xlat
pop
pop
xor
lahf
mov
pop
mov
adc
lahf
rol
adc
inc
and
add
add
movs
cli
mov
fbstp
lods
mov
xchg
and
inc
mov
cdq
fiadd
jns
and
jecxz
leave
jo
ficomp
(bad)
dec
movs
inc
xor
push
rcl
stc
aam
ja
sub
cmp
jne
outs
push
add
mov
ins
popa
jns
mov
xor
bound
clc
sbb
nop
xor
in
neg
adc
xor
dec
jno
mov
cmp
cli
mov
inc
fnstenv
add
into
aam
fmul
mov
icebp
dec
mov
arpl
out
add
bound
sbb
add
pop
and
jnp
out
push
xchg
hlt
cmps
xchg
jnp
pop
fprem
(bad)
jg
mov
popf
loopne
(bad)
aam
imul
sbb
gs
push
in
jmp
push
jb
mov
data16
ss
mov
cmp
test
das
fld
cdq
mov
xchg
mov
inc
xchg
iret
imul
imul
sub
mov
mov
(bad)
enter
loope
inc
xchg
xor
and
pop
stc
in
sahf
pop
fld
mov
inc
jmp
mov
adc
in
sbb
xor
jg
pop
adc
daa
(bad)
bound
pop
jge
push
inc
enter
xchg
movs
out
dec
fnstenv
xchg
inc
movs
mov
shl
add
fadd
ret
(bad)
pop
adc
inc
mov
add
rol
ret
push
out
clc
outs
cld
out
pop
add
and
movs
jae
scas
aas
nop
xor
pop
mov
ss
mov
mov
lods
xlat
popa
fstp
cdq
pushf
movs
cmp
inc
fld
xchg
sub
aad
jbe
sbb
int
aas
jo
in
int
ss
outs
sub
push
and
or
mov
push
dec
loopne
test
mov
adc
or
inc
dec
cld
and
mov
ds
jmp
or
out
adc
inc
ret
push
push
es
lea
push
inc
retf
and
enter
pop
pop
dec
popa
sub
and
fimul
sub
imul
popa
(bad)
in
xor
inc
mov
bound
adc
add
pop
lahf
add
(bad)
cli
scas
lods
cmp
js
cmps
test
mov
xor
jbe
jae
(bad)
out
loop
test
mov
scas
lods
pop
repz
inc
idiv
out
dec
mov
hlt
clc
imul
push
mov
test
gs
jl
rol
dec
inc
adc
jnp
cld
int
jns
inc
not
jbe
sub
clc
or
push
pinsrw
fdiv
jmp
test
mov
sub
cmp
push
xlat
cld
push
test
mov
fnsave
push
mov
or
pusha
adc
jecxz
jb
sbb
inc
or
lock
loope
add
xor
adc
mov
jo
ins
clc
icebp
xchg
and
add
fdivrp
mov
fs
repz
pop
repnz
das
cli
sbb
dec
push
out
sbb
push
mov
pop
mov
adc
dec
cdq
movs
aaa
mov
fidiv
(bad)
int
jl
add
mov
sbb
jne
rcl
repnz
push
scas
daa
mov
pop
inc
repz
mov
stos
js
mov
retf
jno
and
(bad)
clc
and
xchg
xor
gs
sub
adc
pop
adc
pop
or
lea
je
sbb
fstp
iret
mov
cmp
imul
xlat
test
pop
add
pop
xor
adc
sub
addr16
dec
add
dec
cmps
sbb
push
sub
xor
cmovp
bound
scas
ret
cmp
or
sar
ins
icebp
mov
cmps
or
adc
jl
and
xor
jo
sbb
sbb
dec
fmul
fadd
repz
int3
cmp
xor
and
ret
xchg
mov
and
hlt
mov
mov
shl
scas
sbb
xor
out
clc
sub
iret
pop
(bad)
sub
outs
xchg
and
mov
fdivr
cmp
sbb
inc
or
jno
mov
or
sub
push
push
push
je
dec
clc
xor
mov
ss
leave
cmps
push
aad
add
cdq
push
or
test
xlat
test
cld
(bad)
adc
mov
push
es
shl
add
mov
movs
outs
jbe
pusha
cdq
pop
sbb
dec
adc
adc
pop
out
sub
sbb
sub
jne
scas
mov
push
inc
cs
cmp
jle
jb
mov
jmp
mov
xor
dec
dec
mov
or
mov
add
mov
lds
cs
or
pushf
std
xchg
cwde
iret
imul
adc
seta
xchg
stos
out
cwde
jl
cmps
push
jae
faddp
fisub
mov
(bad)
stc
or
push
xchg
sti
retf
add
add
sub
sbb
mov
add
mov
push
mov
and
fisub
cmc
xchg
nop
ret
mov
sub
pop
or
push
xchg
or
xor
mov
pop
add
or
add
stos
and
xchg
xchg
adc
and
call
xlat
cmc
adc
imul
mov
sub
xor
jmp
mov
push
pusha
out
jp
test
xor
sub
xor
inc
pushf
retf
mov
imul
imul
fisttp
sbb
es
retf
call
movs
mov
cmp
setle
das
jo
xchg
test
dec
call
retf
fs
rcr
pop
or
pusha
ret
bound
jle
fwait
retf
mov
jb
jg
jle
jno
fs
call
std
outs
pop
sbb
cmp
out
adc
or
adc
adc
cdq
mov
aas
pop
inc
mov
mov
mov
adc
mov
inc
repz
call
jns
fld
push
lahf
lock
mov
and
inc
push
jno
outs
xchg
mov
aas
es
je
mov
dec
lods
mov
mov
and
add
sub
aam
xor
push
leave
sbb
cmp
imul
cmc
lods
and
xor
mov
xor
stos
cmp
and
xlat
xchg
add
fdiv
sub
adc
mov
cmp
out
or
mov
xchg
shl
jbe
loopne
and
sub
lock
jns
iret
(bad)
outs
mov
pop
adc
pop
leave
push
or
jbe
and
test
cmp
das
pop
adc
stos
imul
aas
iret
xchg
ret
call
dec
sti
pop
cs
mov
push
push
arpl
push
mov
jmp
mov
cmp
xor
or
fadd
and
mov
or
lock
adc
lods
aaa
xor
call
jne
pop
gs
jnp
jmp
enter
repz
clc
or
fmul
sbb
rcl
repnz
(bad)
stc
jbe
scas
pop
movs
pop
outs
mov
test
sahf
jno
int3
shl
jp
xor
adc
inc
sbb
pop
adc
or
out
xchg
inc
loop
xor
and
call
mov
(bad)
fcom
jl
into
jo
icebp
xchg
xor
jnp
push
mov
test
lods
push
fdivr
popf
and
shr
mov
add
loopne
arpl
mov
mov
inc
rcr
imul
mov
addr16
iret
cmp
jnp
push
sub
inc
mov
movs
cld
loope
cmp
adc
lods
cmps
cmps
stos
mov
inc
mov
mov
dec
std
ror
xchg
outs
sub
cmps
cmp
daa
dec
xor
jg
and
cmp
push
in
cdq
mov
push
xlat
fistp
dec
ds
ins
and
call
loop
idiv
and
mov
fsub
push
jns
push
jns
mov
mov
test
dec
inc
lds
adc
dec
and
jns
inc
jnp
mov
push
and
mov
bound
psrlw
lea
pop
push
call
jecxz
pop
imul
jecxz
sub
div
adc
test
cwde
adc
test
(bad)
cmp
retf
clc
mul
cld
int
in
cs
xor
(bad)
push
inc
pop
iret
outs
cmp
or
icebp
ja
repz
inc
mov
rol
inc
fs
jge
xor
popf
punpckhwd
ret
fidivr
mov
mov
or
dec
mov
aas
loope
add
fldenv
mov
sti
xchg
dec
fwait
jecxz
jle
ret
out
ds
pop
jbe
add
push
shr
lea
or
sbb
ins
sbb
int3
fs
fmul
dec
int3
and
cmps
xchg
and
mov
shl
or
ss
jb
cwde
push
add
imul
add
repnz
mov
fbstp
sub
pop
mov
push
cmps
fild
push
pop
mov
adc
mov
(bad)
cmps
sub
inc
pusha
cmp
dec
imul
dec
push
sub
push
in
je
mov
jns
sbb
out
push
inc
jae
adc
adc
xor
xor
pop
iret
or
movs
shr
leave
in
or
pop
ja
jge
sbb
inc
cmp
adc
inc
cwde
xor
and
push
mov
dec
test
idiv
repz
loope
ret
(bad)
xchg
cmps
inc
arpl
out
mov
push
clc
dec
push
popa
xadd
je
mov
nop
aam
mov
nop
std
xor
dec
out
adc
into
pusha
add
mov
and
add
pop
es
pop
push
and
fcom
ret
popa
jo
dec
pop
dec
gs
(bad)
(bad)
or
retf
push
jp
or
call
adc
sbb
inc
add
pop
inc
out
pop
mov
inc
or
lds
je
iret
int3
sbb
retf
adc
test
data16
xchg
es
xor
jl
mov
jo
cwde
(bad)
iret
repz
gs
daa
sar
pop
cmps
push
mulps
ror
xor
cmp
inc
dec
mov
int
push
pop
xchg
fbstp
rol
xchg
movs
mov
sbb
push
jb
jb
(bad)
inc
ja
xchg
push
loopne
dec
jge
(bad)
mov
fcmovnb
dec
pop
hlt
arpl
js
lds
(bad)
xchg
jne
fidiv
loopne
(bad)
in
inc
sub
push
add
adc
and
in
jmp
jns
cmps
shl
push
cmp
movs
push
fldcw
les
push
pop
cs
push
adc
out
cmp
push
push
or
mov
fwait
adc
hlt
and
ds
sbb
jne
sub
sahf
aaa
fistp
pop
xchg
mov
push
(bad)
adc
scas
sahf
cli
xchg
or
mov
mov
lea
in
or
daa
push
add
in
ficomp
je
mov
cli
add
sub
test
sub
xor
out
cmc
nop
int3
sub
add
ins
mov
sbb
loop
aam
add
or
add
xchg
(bad)
loop
cmp
test
xchg
aas
ins
sub
cs
scas
pop
jo
mov
inc
jb
jge
stos
sub
test
xor
fild
in
aam
adc
xchg
ret
cmp
sbb
mov
xchg
outs
add
in
mov
mov
int
dec
popf
retf
retf
in
push
jo
outs
push
cmps
in
mov
mov
sub
cmps
stos
mov
je
test
xor
mov
or
retf
push
xor
or
lock
inc
cmp
xor
jecxz
aam
jo
cwde
(bad)
repz
inc
mov
cli
out
and
aad
add
pop
dec
xchg
pushf
ds
jb
fld
jbe
cwde
cwde
out
pushf
leave
leave
ror
loopne
sbb
push
cmp
cld
jns
stos
test
mov
rcl
lea
mov
jae
mov
jl
es
lea
and
mov
inc
jge
cmps
mov
idiv
retf
call
shr
sub
xchg
mov
nop
movs
js
pop
fneni(8087
ja
lds
adc
or
repnz
cmp
add
ins
mov
dec
imul
repz
jle
fwait
dec
lock
cmc
inc
mov
mov
cmp
enter
cmp
and
test
pop
pusha
out
stos
stc
or
mov
js
xlat
pop
out
pop
adc
mov
fwait
xchg
fwait
ret
out
mov
mov
mov
add
repz
sbb
pop
aad
outs
and
call
dec
rcl
mov
jl
aad
aam
xchg
mov
inc
ds
pop
movs
outs
or
jmp
stos
fs
xchg
fs
(bad)
push
shr
popf
ja
ins
mov
inc
mov
xor
xor
push
fsub
xchg
ja
pop
in
int3
lahf
movs
jns
adc
push
mov
add
pop
or
icebp
mov
rol
mov
call
inc
mov
add
mov
fisttp
xchg
leave
mov
push
mov
sub
adc
and
loop
xor
es
push
inc
je
sub
pop
adc
xor
dec
mov
(bad)
out
mov
jecxz
aad
bound
mov
ret
out
xchg
test
add
pop
xchg
mov
jo
clc
(bad)
int
inc
dec
cmp
push
push
daa
ja
(bad)
in
push
out
(bad)
sub
cmp
(bad)
sub
push
iret
push
cmp
adc
push
and
jae
jmp
and
mov
jle
es
sti
push
aas
stc
lahf
xchg
movs
rcl
cmp
or
in
inc
jmp
inc
sti
xchg
cmps
mov
cmc
mov
in
loope
push
mov
mov
fs
xchg
and
push
enter
das
xchg
and
fiadd
push
retf
or
jnp
arpl
mov
jg
iret
xor
fcmovnb
push
lock
call
scas
mov
sbb
dec
lahf
ds
or
clc
and
adc
shl
(bad)
(bad)
sbb
fild
cmc
fwait
into
fiadd
inc
scas
cmps
inc
or
vpmaddwd
adc
mov
dec
jmp
or
repz
out
int
lea
sub
jmp
xor
dec
fnstcw
xor
test
pop
mov
sbb
sahf
std
push
daa
shr
imul
jecxz
jg
inc
jg
mov
jbe
mov
psrlw
les
mov
xor
test
xchg
jno
cmc
je
and
retf
jbe
call
pop
push
rol
jle
add
xchg
mov
mov
cld
sub
sbb
xchg
out
cli
xor
bswap
push
or
dec
pop
xchg
(bad)
rol
push
ret
pop
fstp
pushf
fmul
sub
ret
jno
std
jae
icebp
dec
bound
push
scas
cdq
test
sub
inc
jge
or
dec
aaa
adc
mov
xchg
and
cmp
xchg
mov
sbb
add
jg
pop
and
daa
call
pop
and
repnz
gs
loope
pop
iret
mov
inc
enterw
rol
or
cmps
push
mov
add
sbb
or
lods
add
xchg
sbb
test
ret
cmp
and
in
jbe
pop
add
or
cmp
lock
in
cmp
xchg
in
add
aam
push
xor
push
(bad)
(bad)
cmps
rol
jg
jle
sti
push
xor
mov
adc
aaa
nop
shl
jecxz
(bad)
dec
xchg
scas
push
aaa
cmps
in
clc
in
jg
(bad)
mov
cs
push
test
mov
iret
jp
cdq
xchg
xlat
sub
push
sbb
push
cmp
loope
ins
mov
je
rcl
jmp
shl
into
add
xor
cli
cdq
dec
popa
adc
mov
repz
mov
(bad)
pop
div
push
inc
mov
push
mov
sbb
and
outs
push
out
or
cli
enter
jae
push
ds
ret
push
dec
dec
inc
jno
aam
push
sub
push
mov
push
enter
add
mov
xchg
in
cld
inc
cdq
loope
xor
mov
leave
xchg
mov
ins
dec
sub
jmp
mov
adc
test
test
shl
jns
out
adc
cmp
cmc
(bad)
jns
or
xor
pusha
push
fadd
inc
pop
mov
mov
daa
(bad)
jno
and
cld
(bad)
mov
retf
dec
sahf
jp
inc
fcmovne
ins
shl
pop
or
xchg
jecxz
pop
aad
je
jns
jge
pop
add
xchg
lods
jmp
shl
inc
sbb
loop
pop
mov
mov
xor
xchg
xchg
xchg
in
dec
loope
(bad)
sub
push
inc
or
adc
jmp
jns
popf
test
sbb
jecxz
sbb
data16
fwait
push
and
push
xor
(bad)
(bad)
repnz
clc
dec
aas
(bad)
dec
add
and
push
adc
add
stos
push
out
enter
xor
test
bnd
enter
sub
adc
xchg
dec
push
bound
call
dec
int
sar
mov
fisub
nop
addr16
xchg
add
fst
cmps
aaa
ins
lods
jb
mov
pop
imul
mov
stos
push
loope
lods
cmps
sub
jg
mov
outs
dec
adc
stc
inc
and
movs
mov
xchg
mov
add
outs
or
fsubp
loopne
cdq
and
push
xchg
push
mov
xchg
scas
push
popa
pop
clc
call
or
sub
mov
div
push
sbb
fmul
in
xor
sbb
movs
adc
mov
aas
call
jnp
dec
(bad)
xchg
sbb
add
xchg
mov
push
xchg
fwait
test
outs
inc
adc
cmps
xor
pusha
dec
repz
sbb
jae
inc
add
ret
scas
jmp
retf
pop
jns
pop
iret
in
inc
in
fwait
pop
jo
xchg
or
imul
cli
daa
jne
int3
or
outs
jno
ja
mov
div
adc
dec
jno
and
in
fmul
int3
(bad)
loope
pop
adc
ror
add
ins
(bad)
(bad)
pop
ins
add
arpl
mov
xchg
pusha
xchg
lods
mov
xor
ins
pop
push
xlat
in
cmp
jmp
leave
inc
jbe
cmc
adc
fisub
sbb
adc
dec
jns
or
jno
push
dec
cmp
and
jg
jae
movs
sbb
sbb
repz
xchg
mov
int
pop
je
lods
loop
test
jmp
pop
mov
xor
jmp
mov
fs
arpl
int3
mov
xrstors
pop
mov
add
pop
cmp
sti
jl
sub
mov
mov
(bad)
mov
inc
pop
stc
pop
shr
xchg
sub
lods
xchg
nop
adc
pop
popa
adc
(bad)
aas
sbb
or
sbb
stc
fldcw
push
iret
arpl
or
mov
fisubr
lods
add
sar
iret
jmp
sub
mov
shl
push
dec
retf
cmps
call
mov
pusha
inc
xchg
mov
sub
add
(bad)
out
adc
outs
push
call
jnp
sub
ror
push
or
adc
aaa
push
mov
pop
add
dec
add
mov
mov
cmp
cmp
push
or
out
pop
fmul
mov
jge
cld
add
sub
imul
retf
xchg
xor
fimul
cwde
ds
cmp
loop
aas
test
and
cmc
jno
pop
loope
pop
sub
and
es
and
int3
rcr
add
adc
jno
loop
lods
inc
fisubr
push
mov
mov
adc
imul
xchg
inc
iret
cmp
sbb
xlat
out
push
das
pop
dec
ss
in
add
jo
pop
push
rcl
push
fisub
add
adc
movs
mov
sbb
push
jg
mov
adc
imul
add
add
mov
jge
pop
mov
add
and
ret
fistp
fidivr
mov
adc
jne
jmp
pop
fisub
shr
ds
gs
xor
gs
push
fld1
xchg
or
ja
pop
add
addr16
sbb
mov
mov
or
into
push
xor
pop
mov
push
call
popa
imul
es
mov
in
mov
or
mov
pop
lods
out
mov
les
iret
aad
adc
daa
fdiv
xchg
inc
mov
leave
rcr
ds
xchg
adc
dec
xchg
jmp
nop
dec
inc
push
jno
sub
xchg
into
sti
inc
ror
push
aam
shr
mov
test
out
xchg
inc
add
mov
mov
pop
dec
ret
or
div
mov
xor
xchg
test
add
cmp
ds
push
dec
mov
jmp
bound
dec
js
xchg
test
add
icebp
arpl
jmp
dec
xor
xor
out
hlt
push
pop
es
aam
imul
dec
sbb
mov
jnp
inc
loopne
hlt
or
pushw
mov
xor
fistp
mov
shl
cmp
stos
adc
push
xor
rol
(bad)
mov
data16
and
or
stc
jp
jns
hlt
test
or
xchg
lock
mov
cmp
fsubrp
movs
pop
xor
out
jae
lods
iret
sbb
add
jns
add
mov
mov
pop
cmp
es
div
aaa
cmp
mov
sub
adc
mov
test
xor
scas
mov
ins
pop
jmp
xor
test
jmp
jg
test
mov
movs
int3
(bad)
out
mov
imul
jl
push
loope
pop
into
out
jle
mov
xor
pop
dec
cdq
sub
fmul
jmp
cmp
std
jle
xor
out
xchg
mov
outs
movs
(bad)
cmc
and
pop
div
xchg
sbb
pop
mov
xchg
push
cmp
cmc
push
inc
mov
mov
stos
inc
jbe
ret
test
jnp
mov
xor
stc
aas
into
stc
ja
mov
call
bound
call
dec
aas
mov
cmc
ins
xchg
xchg
das
rcl
sbb
add
popf
pop
mov
dec
inc
(bad)
stc
pop
xlat
(bad)
push
pop
in
into
jne
inc
mov
push
inc
mov
ins
dec
mov
push
jno
(bad)
xor
pop
jl
retf
mov
add
je
dec
in
jle
xor
aas
stos
loop
mov
iret
and
pop
mov
mov
pop
push
pop
push
or
and
inc
cmp
out
pop
in
outs
clc
loopne
pop
aaa
jmp
call
test
mov
loope
sub
or
pop
jnp
mov
shr
or
cmp
or
dec
fimul
add
in
xchg
mov
xchg
jmp
test
loopne
adc
jmp
inc
fsubr
inc
pop
dec
mov
stos
xchg
and
loope
shl
xor
sbb
(bad)
jg
movs
add
(bad)
push
mov
fcmovnu
and
mov
mov
rcl
add
mov
cmp
test
fbstp
jecxz
pop
adc
std
xchg
and
aaa
inc
out
push
std
jo
retf
mov
pop
push
push
call
in
mov
aam
in
xchg
stos
in
fsub
xchg
out
mov
sub
sbb
cmps
lods
adc
mov
and
push
jmp
adc
fs
bound
cmp
int3
out
(bad)
sub
adc
sahf
pop
sub
mov
inc
lock
mov
sahf
add
mov
adc
cmp
leave
hlt
js
icebp
pop
push
push
mov
pusha
out
bound
mov
xor
ins
jge
inc
icebp
xchg
fist
ins
int
jo
mov
mov
xchg
mov
pop
gs
shr
(bad)
or
fwait
dec
pop
test
mov
stc
pop
pop
lea
pop
sbb
stos
cmp
xor
cmps
pop
(bad)
pop
aad
inc
add
sub
aam
pusha
jl
into
dec
rcr
iret
sbb
adc
fidivr
pop
dec
lods
inc
popa
cmps
std
fadd
je
sub
push
xchg
pop
loope
dec
jo
nop
repz
mov
neg
sub
cmp
sqrtps
test
mov
jmp
ret
popf
sub
dec
pushf
and
cmc
mov
call
dec
or
mov
add
xor
or
cmp
sub
pop
push
mov
mov
int
or
cmps
cmp
in
fst
add
dec
leave
push
push
sbb
retf
jle
add
clc
dec
sbb
push
daa
jno
outs
cli
ins
std
xor
and
jbe
sub
or
sub
sbb
bound
dec
mov
out
add
(bad)
dec
and
out
push
add
mov
jle
jg
nop
mov
rol
imul
bound
sbb
call
sbb
xchg
mul
cs
dec
loopne
mov
iret
test
popf
loop
lds
xor
jmp
pushf
xlat
push
jb
js
shl
or
xor
jle
(bad)
inc
ss
dec
mov
retf
mov
(bad)
jge
push
ss
int3
sbb
lar
inc
and
cmps
pmullw
cmp
jno
xchg
test
inc
mov
mov
jno
jge
push
aaa
cs
fimul
scas
sub
pop
xchg
adc
in
dec
in
loopne
add
and
inc
aam
dec
inc
mov
fadd
xchg
xchg
fisttp
pop
scas
sub
pusha
xchg
stos
mov
les
pushf
mov
jb
stc
(bad)
jmp
(bad)
lods
inc
sbb
lock
repnz
adc
mov
push
mov
inc
xchg
mov
out
into
mov
shr
icebp
nop
int3
call
pop
mov
dec
arpl
mov
adc
loope
dec
inc
xchg
loopne
movs
adc
mov
test
jo
xchg
rcl
int
jnp
cld
and
cmp
inc
add
shr
gs
fstp
repnz
and
push
outs
mov
sbb
aaa
jle
sbb
inc
mov
xor
xor
iret
popf
out
fcomi
inc
push
pushf
mov
mov
pusha
fdiv
ret
xchg
push
mov
pop
jmp
fisttp
inc
int3
cmp
add
fwait
ror
push
loop
daa
ret
cdq
jne
pushf
adc
mov
sub
sti
in
xchg
test
mov
repz
xor
inc
rol
(bad)
in
mov
stos
mov
fsub
cmps
add
cld
mov
sub
cmps
sbb
mov
mov
or
fcmovnu
push
inc
jmp
xchg
(bad)
out
inc
(bad)
mov
repnz
jecxz
push
stc
push
mov
xchg
pop
dec
cmp
iret
fimul
into
jg
loope
push
push
out
xchg
push
mov
outs
mov
iret
sub
std
mov
push
ret
and
test
shl
or
mov
arpl
sbb
inc
jmp
ins
fld
xor
push
sbb
scas
movs
mov
mov
dec
mov
sbb
movs
cmps
retf
retf
fwait
xchg
pop
sbb
or
out
mov
popa
add
lea
stos
imul
xchg
ficom
sub
call
xor
sbb
mov
test
out
dec
adc
dec
add
addr16
lea
add
inc
stos
mov
outs
stos
les
jmp
stos
fcomi
xchg
fnstsw
xchg
adc
and
jecxz
fs
adc
aas
(bad)
mov
jmp
xor
xchg
sub
pop
fisttp
push
inc
xor
xor
int
imul
shl
sub
mov
push
jge
syscall
bound
sub
sbb
mov
xchg
xchg
ins
cmps
pusha
mov
mov
or
add
aaa
dec
nop
scas
aam
xor
add
cmc
mov
out
sub
js
shl
bound
pop
jbe
jne
inc
xchg
ret
jae
lods
dec
pusha
cmp
fst
inc
hlt
inc
icebp
in
cmc
lds
loope
add
ss
mov
fisttp
mov
repz
shl
adc
pop
pop
(bad)
mov
lds
mov
test
inc
sub
xchg
fs
ins
inc
or
or
cs
fcmovnu
shr
rol
add
ins
mov
push
xchg
rcl
es
test
hlt
out
dec
test
(bad)
out
add
xchg
mov
ret
imul
xchg
push
push
mov
mov
mov
(bad)
iret
(bad)
adc
in
jmp
sti
adc
jb
sub
shl
dec
and
xchg
push
jb
scas
jae
pop
xchg
es
stc
cmp
aas
and
out
in
cwde
xor
call
jecxz
add
jae
pop
or
(bad)
jle
jbe
or
(bad)
jnp
pop
out
into
in
retf
push
(bad)
and
mov
fcomip
cmps
imul
pop
cmp
push
retf
sbb
inc
pusha
xchg
div
sbb
scas
inc
ins
popa
jg
xchg
dec
push
jp
adc
loop
mov
lds
dec
sub
mov
test
rcr
test
xchg
in
test
or
pop
sar
push
add
dec
mov
sbb
sti
mov
imul
int
xor
and
sbb
mov
movs
cmp
push
sub
movs
push
cmps
sahf
iret
add
add
fsub
and
push
push
mov
mov
add
daa
xchg
sub
stc
push
imul
ja
and
call
push
mov
rcl
out
or
inc
shl
mov
clc
sbb
dec
xor
mov
rol
push
in
mov
ret
xor
push
jae
pop
mov
out
nop
xor
adc
adc
pop
mov
test
inc
and
jmp
cmp
jge
mov
pop
lahf
dec
xlat
sbb
and
ret
shr
mov
push
sub
or
adc
jg
mov
sar
rcpps
push
jb
loop
mov
cli
sti
sub
sub
movs
call
fcmovne
xor
push
push
loopne
push
sbb
pop
jns
into
push
or
loopne
(bad)
xchg
mov
or
clc
jg
or
inc
sahf
adc
inc
popf
hlt
in
ins
stc
pop
cmps
aas
ss
loop
sbb
sbb
jne
sub
sbb
int
ja
addr16
aaa
jecxz
mov
in
mov
dec
inc
cs
stos
xchg
jle
inc
cli
aam
loopne
cmp
or
bound
retf
adc
ds
or
add
outs
inc
push
pop
repz
xchg
cwde
jl
stos
dec
imul
in
test
leave
xor
cwde
pop
mov
mov
into
mov
in
dec
dec
mov
dec
jbe
add
jg
hlt
xchg
mov
jecxz
lods
push
shl
mov
pop
je
add
xor
mov
adc
in
cmp
(bad)
adc
aad
out
out
test
push
adc
cmps
aad
dec
dec
or
and
je
test
adc
or
les
inc
icebp
mov
dec
stc
data16
xor
cs
in
adc
cmova
cmp
fcom
jp
or
inc
popf
and
out
pop
jmp
test
push
outs
dec
inc
mov
mov
fcomp
pop
sub
(bad)
or
test
pusha
call
gs
jns
dec
inc
mov
jp
jo
adc
fistp
pusha
jns
mov
stos
jne
sbb
mov
pushf
stos
pusha
ret
test
in
pusha
jl
(bad)
ss
add
jb
ins
icebp
xor
mov
sbb
pop
pop
sub
lds
(bad)
inc
or
xchg
and
jns
(bad)
and
retf
inc
cmp
sub
fdiv
loope
mov
nop
xor
dec
jge
cmp
paddusb
mov
out
(bad)
xchg
in
dec
sub
xchg
mov
mov
cs
mov
mov
ins
jae
fwait
jg
idiv
fldenv
mov
jbe
cli
(bad)
or
aas
dec
pop
pop
mov
push
add
imul
call
push
xchg
out
push
dec
jne
stos
jmp
pushf
adc
fidivr
xor
xchg
test
inc
ja
int3
shl
pusha
in
pushf
inc
pop
xor
dec
(bad)
xor
out
sub
das
and
add
xchg
stos
(bad)
(bad)
or
sub
sub
outs
mov
cmp
mov
add
iret
xor
and
pop
push
xor
cwde
sub
ds
shl
and
stos
or
jmp
pop
and
call
(bad)
clc
jbe
out
into
stos
xor
aas
bound
rcl
jmp
aam
pop
xor
pop
push
dec
push
xor
xchg
fisttp
jbe
push
pop
adc
test
pop
fwait
add
sub
repnz
push
aas
shl
adc
js
jecxz
jge
add
push
inc
fs
jno
dec
jecxz
sub
pop
dec
mov
adc
xor
jl
out
sub
lods
xchg
das
jns
mov
mov
das
test
adc
std
jecxz
int
jbe
cmc
push
push
imul
sbb
pop
adc
in
cmp
xor
xor
sbb
mov
iret
lods
das
test
in
leave
nop
and
call
xchg
push
sahf
test
cmps
and
xchg
push
mov
push
pop
test
les
push
nop
push
fld
push
mov
mov
inc
mov
mov
sbb
mov
xchg
xor
aaa
jns
enter
jbe
test
(bad)
mov
sbb
pop
ds
fist
int3
lock
loope
dec
aaa
stc
pop
xchg
cli
push
cmp
jns
pop
jle
in
pop
sti
fidiv
sub
mov
(bad)
mov
movs
pop
push
es
xor
mov
pop
inc
rcr
sbb
aam
pop
ror
addr16
mov
addr16
sbb
xlat
stc
sub
mov
adc
arpl
jo
mov
pop
je
cmp
cmp
lahf
sbb
clc
or
cli
std
ins
and
in
sbb
(bad)
cdq
ret
xor
and
fs
rol
sbb
out
push
pop
and
or
ret
loope
mov
aas
jbe
ror
sub
iret
js
enter
test
sbb
(bad)
xchg
ins
and
cmp
in
cs
idiv
inc
adc
and
jno
ins
sahf
repnz
mov
or
xlat
out
jmp
inc
pop
lds
loop
ins
ins
es
cmp
sbb
cwde
sbb
dec
dec
dec
jmp
fmulp
dec
aad
jmp
push
out
pop
jp
push
test
jbe
xchg
test
stos
add
jmp
xor
fisubr
ins
cmps
loopne
add
lahf
mov
push
mov
inc
xor
push
sub
mov
or
pop
test
or
xor
mov
out
add
outs
push
(bad)
(bad)
imul
mov
and
in
sbb
test
pop
sub
clc
lahf
lds
cs
sbb
and
out
push
mov
je
mov
fisttp
push
mov
test
enter
or
es
movs
aaa
scas
xchg
pop
pop
mov
mov
mov
xchg
stc
xor
aad
sbb
or
lock
je
cmp
test
not
pop
sar
(bad)
out
jo
dec
xor
ins
pop
(bad)
rcr
jmp
mov
adc
mov
aaa
and
push
lods
outs
ins
jmp
data16
dec
and
popf
cli
mov
jno
into
aas
xchg
(bad)
sar
xor
adc
arpl
lods
xchg
out
mov
ins
push
cld
jmp
pop
test
mov
adc
and
adc
xchg
retf
scas
jo
jmp
mov
mov
xor
jmp
jmp
sub
jae
push
psubsw
clc
icebp
mov
xlat
cmps
(bad)
xor
shl
stos
adc
jl
not
add
push
cld
(bad)
xor
sbb
sbb
call
jbe
outs
mov
add
sub
push
cmp
jno
adc
pusha
gs
cmps
pop
ins
mov
es
or
out
dec
cmc
ds
rcl
xchg
ds
(bad)
ins
call
xor
addr16
pop
stc
xor
xchg
test
add
push
pop
xlat
mov
in
gs
int
hlt
outs
ret
sub
rol
jl
and
jae
cmps
jp
mov
push
aad
ins
pop
mov
mov
pop
shl
iret
retf
cld
cmp
hlt
jnp
mul
mov
(bad)
mov
leave
dec
add
xor
mov
div
and
cmc
repz
bound
mov
jle
hlt
or
scas
jne
mov
jg
inc
gs
clc
mov
and
mov
sbb
les
aas
cmp
mov
inc
adc
int3
pop
arpl
cdq
xor
xor
inc
in
aad
xor
lods
mov
inc
xchg
push
(bad)
xchg
mov
mov
push
setno
(bad)
fwait
inc
dec
clc
push
jmp
jnp
in
cmp
not
xchg
imul
push
pop
stos
repnz
les
pop
mov
jmp
in
sbb
xor
imul
cmp
mov
pop
leave
mov
std
lods
inc
cmps
hlt
outs
jmp
stc
pop
in
add
jno
pop
xor
out
mov
inc
cmps
pop
clc
jno
test
fdivrp
bound
jecxz
and
in
push
pop
and
(bad)
retf
in
push
mov
inc
mov
repnz
cmp
data16
int3
inc
push
fisttp
mov
xor
push
dec
popf
xchg
adc
sbb
les
repnz
sti
adc
ret
xor
jmp
movs
jp
out
lods
lahf
mov
imul
jge
jb
jmp
and
xchg
je
pop
sbb
(bad)
fsub
or
push
adc
into
inc
ss
repnz
int3
sti
adc
adc
fwait
retf
loopne
movs
int
mov
test
and
xor
aad
ds
pushf
xor
xchg
test
xchg
ins
sbb
call
mov
into
fiadd
dec
popf
push
cmp
pop
sbb
or
imul
ret
jo
pop
add
pusha
idiv
pop
dec
jbe
out
cmps
sahf
dec
in
inc
mov
rep
add
shl
jno
sub
add
adc
and
mov
fcomp
shl
adc
iret
add
ret
aam
pop
fisttp
cmps
push
and
pop
out
add
jnp
aas
retf
mov
push
retf
clc
sub
fimul
inc
dec
sub
sub
push
test
xchg
inc
inc
psubb
(bad)
jge
push
mov
mov
call
cld
mov
dec
jmp
in
adc
ficom
adc
mul
dec
or
jo
push
ja
leave
lahf
xchg
mov
jmp
cs
adc
ins
inc
xor
inc
(bad)
ins
fiadd
cmp
mov
je
clc
fadd
mov
xor
or
xchg
mov
sahf
scas
mov
pop
jg
or
in
cmp
add
or
cmps
pmaxsw
ins
test
test
add
pop
loope
cld
dec
or
pushf
movs
mov
jmp
mov
push
fstp
(bad)
les
(bad)
dec
call
mov
mov
movs
loope
mov
data16
repz
bound
popa
mov
shl
arpl
add
dec
test
shr
xor
(bad)
int
idiv
inc
sub
in
fdivr
mul
neg
push
pop
or
retf
inc
mov
add
outs
popa
jl
xchg
or
movs
mov
or
retf
mov
sub
loope
in
fiadd
retf
data16
inc
mov
xchg
sbb
xor
and
mov
fdiv
add
adc
clc
ds
sub
les
mov
mov
jmp
int
pop
pop
mov
mov
pop
std
shl
cmp
cmp
lods
push
pop
cs
aam
push
cmc
mov
fsub
rcr
(bad)
out
jmp
jno
jbe
(bad)
test
adc
in
loop
addr16
dec
cwde
retf
push
xor
pop
pop
icebp
out
xchg
mov
cmp
nop
xor
shl
outs
shl
mov
jb
push
adc
cli
aam
cli
xor
mov
inc
sbb
ret
retf
xor
push
scas
and
std
cmp
aaa
(bad)
jmp
inc
inc
out
lds
sbb
pop
lds
and
mov
sahf
cmp
inc
jg
out
jge
arpl
add
(bad)
fwait
ins
int3
gs
lahf
les
sub
xor
mov
pusha
and
mov
or
inc
mul
xor
call
mov
inc
xchg
imul
shr
pushf
js
inc
push
iret
out
mov
pop
fst
mov
dec
clc
repz
mov
imul
push
(bad)
retf
aad
jle
pop
adc
ret
pop
lock
xor
sub
icebp
retf
(bad)
sub
dec
jno
push
pop
cdq
aas
int3
daa
cmp
out
sub
sbb
sti
sub
mov
bnd
mov
icebp
sub
cmp
jge
cmp
or
stos
ss
fild
jecxz
cdq
and
jbe
fcomp
and
sub
add
in
pop
push
or
ss
xchg
js
add
not
pop
rcl
jl
mov
pop
and
xchg
jmp
mov
rcl
test
(bad)
ins
mov
mov
mov
jle
ret
add
xchg
pop
xchg
mov
adc
and
es
xchg
(bad)
psubsb
(bad)
cdq
clc
pop
daa
or
dec
aaa
imul
scas
cdq
xchg
std
fmul
stos
sub
test
xchg
cmps
aam
pop
lock
aam
hlt
dec
mov
movs
mov
sub
add
aas
mov
sbb
xchg
sub
jmp
xchg
pop
sahf
xor
mov
sbb
xor
dec
popa
xor
mov
lods
test
push
ret
mov
xlat
adc
test
push
sub
loope
fmul
xchg
movs
push
out
fdivr
inc
(bad)
pop
xor
(bad)
enter
test
ret
push
mov
lahf
ja
push
repnz
add
push
cmp
jnp
stc
or
jno
push
xor
adc
cs
cmps
sub
popa
in
jmp
lods
mov
pop
stos
retf
shr
clc
out
loope
inc
add
jo
push
rcl
and
jo
mov
xor
mov
movs
test
cmps
push
fs
in
movs
into
cdq
sahf
jmp
mov
push
sub
push
adc
inc
fidiv
mov
jne
lods
push
outs
ret
bound
fidivr
xlat
test
xchg
sbb
(bad)
adc
loop
or
adc
or
mov
stc
jmp
imul
(bad)
stos
mov
pop
rcl
push
call
daa
jnp
popa
inc
mov
mov
adc
pop
shl
stos
push
cmp
or
add
adc
popf
leave
push
or
pushfw
xchg
push
(bad)
mov
inc
repz
jnp
dec
ja
mov
cs
adc
in
cli
xchg
stos
aad
cmp
(bad)
adc
popa
(bad)
push
cmp
sbb
adc
adc
inc
dec
push
(bad)
not
lds
jmp
or
sub
popa
adc
ins
into
push
sub
fs
in
pop
push
js
push
adc
in
xchg
xor
mov
mov
add
sub
dec
ins
xor
pop
mov
sti
xor
ds
loope
mov
xor
jge
xor
call
ret
outs
xlat
and
inc
ins
clc
test
push
data16
mov
inc
jmp
inc
sbb
cmp
fadd
int
inc
mov
nop
sahf
test
mov
sub
icebp
shr
(bad)
xchg
pop
ds
xchg
ins
inc
rcl
xor
retf
mov
cmp
test
rol
sar
cmp
jmp
add
mov
or
repz
xor
lds
mov
(bad)
dec
(bad)
loope
jae
jae
push
or
add
dec
cmc
icebp
cmps
push
adc
aam
jno
mov
mov
push
cwde
loope
inc
adc
xor
(bad)
out
or
pop
adc
cmp
aam
pop
xchg
inc
call
das
fimul
nop
cld
pop
test
sbb
inc
pop
aaa
repz
fidivr
sti
xchg
inc
vmovupd
mov
scas
push
ficomp
lahf
sub
xchg
cmp
adc
jmp
sbb
pop
les
mov
xchg
in
xor
mov
xchg
jmp
stos
push
fwait
aas
cld
and
or
dec
aas
xchg
xchg
popa
out
into
or
mov
hlt
bound
call
dec
sbb
sti
sbb
scas
shr
mov
and
test
int3
mov
lods
pop
mov
call
mov
cmps
sub
dec
test
int3
out
fidiv
pop
add
push
out
mov
and
cdq
adc
fcomip
je
arpl
lahf
xchg
mov
jp
sbb
test
or
ret
mov
cmps
popa
sbb
and
xor
clc
ficomp
add
mov
inc
lds
inc
pop
sbb
mov
inc
sub
jle
or
xlat
ja
mov
pop
js
sbb
mov
cmp
mov
imul
fidiv
es
adc
test
nop
mov
aaa
(bad)
in
mov
cmp
pop
loopne
pop
enter
xchg
(bad)
bound
mov
cmp
scas
jl
add
xchg
push
dec
(bad)
es
std
pushf
or
lea
stos
adc
xchg
(bad)
lods
leave
jecxz
push
xchg
sti
arpl
mov
sahf
adc
pop
dec
jne
jbe
in
xchg
imul
mov
jno
and
sub
out
ja
ret
xor
sbb
leave
inc
xchg
imul
push
movs
je
adc
es
push
push
xchg
inc
je
xchg
(bad)
daa
ja
arpl
add
xor
imul
jno
into
ins
(bad)
jno
dec
mov
scas
test
and
loop
ins
popf
pushf
(bad)
psubb
and
pop
jl
xor
dec
enter
cli
sub
(bad)
shr
mov
push
adc
inc
xor
cmp
test
mov
call
lods
ins
mov
push
mov
mov
adc
clc
jmp
mov
push
sahf
cli
inc
pop
xchg
push
add
xchg
mov
mov
mov
sbb
or
(bad)
or
test
mov
or
(bad)
xchg
clc
push
pusha
aad
bound
sbb
in
dec
aam
in
outs
dec
jg
js
retf
mov
retf
ret
test
jl
sbb
and
mov
loop
movs
(bad)
ret
jb
in
outs
rcr
mov
(bad)
pop
cmp
push
rol
repnz
pop
aas
sub
cmps
add
hlt
dec
xchg
movs
into
inc
push
mov
ret
enter
xchg
outs
scas
aam
cmps
cld
(bad)
lods
jb
cmc
dec
xchg
mov
nop
std
dec
mov
shl
fst
lods
and
neg
mov
cld
or
add
cmp
mov
push
mov
jb
mov
and
xor
dec
mov
mov
push
xor
cmp
dec
loop
(bad)
xor
mov
xor
cmc
mov
mov
fsubr
inc
jb
jbe
push
pop
mov
dec
mov
mov
sbb
pop
cmp
cwde
fstp
int
inc
add
leave
stc
stc
sbb
ret
cli
xor
out
je
or
fcomi
nop
sub
xor
rol
rol
lods
leave
or
cmp
sub
popf
xchg
jb
(bad)
fbstp
jg
cmp
mov
fsubr
loop
pop
gs
xchg
popf
leave
mov
xor
sbb
adc
inc
and
cmp
shr
sub
push
gs
bound
push
xchg
sti
hlt
push
add
mov
adc
and
ss
mov
xor
sub
test
outs
mov
cld
mov
mov
dec
arpl
xchg
iret
mov
adc
test
(bad)
ja
popf
out
mov
aad
push
sub
pop
scas
sub
pusha
and
scas
imul
add
mov
cdq
jle
jne
mov
push
add
fimul
int3
outs
(bad)
cmp
add
dec
cdq
scas
inc
fld
test
jg
data16
mov
dec
mov
popa
ret
jo
jmp
push
les
outs
sbb
cmp
mov
popa
mov
faddp
leave
imul
icebp
(bad)
ins
pop
stc
hlt
mov
das
dec
adc
dec
pop
ins
jecxz
xchg
and
push
loope
cmp
xchg
jmp
adc
test
pop
mov
dec
inc
xor
dec
pop
mov
leave
mov
imul
pop
mov
retf
outs
pop
sub
das
jno
xchg
xchg
(bad)
shl
outs
retf
fcom
(bad)
pop
add
cli
jg
aam
shr
xchg
(bad)
mov
sbb
movs
sbb
test
adc
push
int3
int
push
mov
lea
loopne
lods
pop
mov
push
sbb
sbb
xchg
aad
or
push
inc
or
outs
adc
pop
cmp
mov
xchg
ins
jmp
add
mov
add
pop
stos
arpl
mov
das
lea
arpl
jecxz
or
mov
jg
and
and
cli
rcr
xor
in
and
dec
in
(bad)
pop
movs
mov
rol
jo
inc
adc
int3
xchg
rcr
dec
out
(bad)
pop
leave
ror
repnz
sbb
xor
cmp
adc
push
sbb
ins
loope
jbe
adc
adc
imul
inc
sti
xor
loope
or
inc
leave
xchg
push
cmp
fidiv
iret
je
stos
push
movs
and
inc
shr
test
pop
xor
sub
cmps
cmp
xor
test
cs
call
rcr
mov
dec
imul
push
lds
jp
jbe
adc
lds
arpl
(bad)
jne
je
cmc
sub
sub
sbb
jne
iret
mov
lea
push
jno
jns
lds
add
sub
cwde
xor
cwde
cmp
sbb
shr
pop
(bad)
repz
frstor
and
xchg
xor
retf
dec
xchg
fdivrp
out
and
popf
push
popf
lahf
xor
sub
idiv
xchg
cwde
or
and
adc
xchg
jb
out
pop
and
movs
pop
in
imul
and
pop
clc
add
fist
or
inc
(bad)
test
and
cmp
cmp
mov
lods
dec
mov
das
test
pop
call
enter
cmc
das
jb
je
ret
(bad)
jne
push
inc
adc
pop
les
test
push
outs
mov
xchg
xchg
test
push
test
out
ret
add
lea
aaa
scas
jae
sbb
mov
outs
jle
dec
mov
xor
in
push
xchg
lods
add
aaa
pop
sbb
mov
inc
sub
dec
fwait
sar
aam
mov
mov
add
outs
adc
dec
bound
lea
loope
cmp
jg
pop
push
jg
in
movs
sbb
xchg
fwait
xchg
add
cmc
rol
jno
jns
pop
adc
scas
ficomp
add
(bad)
xchg
rcr
jbe
repnz
inc
jmp
add
and
jae
mov
sahf
in
aad
js
icebp
cs
out
int
scas
sahf
fwait
or
int3
out
adc
(bad)
in
nop
arpl
cwde
pop
fcom
pop
jb
push
cwde
lds
pop
je
enter
inc
mov
inc
popf
lea
movs
push
(bad)
cmc
in
(bad)
imul
retf
leave
popa
push
mov
cmc
jle
ins
scas
or
add
push
pop
mov
fwait
and
pop
mov
xlat
scas
imul
retf
push
mov
inc
pop
dec
es
mov
rol
pop
fld
or
mov
inc
in
jle
cmp
aam
and
push
xlat
pushf
mov
mov
pushf
scas
mov
push
bswap
ds
inc
stos
icebp
mov
fisttp
dec
ins
addr16
xchg
xchg
xor
rol
cmps
(bad)
cwde
mul
xchg
cmc
mov
mov
sbb
jmp
jle
sbb
rol
sar
cwde
dec
std
test
and
xor
sub
and
movs
fistp
adc
add
mov
sbb
enter
cmc
lods
lahf
dec
ins
movs
fdivr
mov
sub
dec
call
sbb
push
es
mov
mov
mov
and
loopne
xchg
icebp
push
call
mov
outs
call
dec
jmp
das
or
fnstcw
sbb
inc
sub
or
add
pop
sahf
inc
(bad)
fisttp
jle
and
dec
int3
(bad)
and
dec
pop
mov
cmp
xchg
daa
retf
int3
sub
lock
test
daa
push
add
mov
push
mov
stc
mov
rcl
das
xchg
mov
or
jmp
pop
sti
retf
mov
mov
pop
loope
lahf
mov
ss
cmp
cdq
push
arpl
dec
xchg
gs
pop
cmp
add
inc
lea
fcomp
mov
fs
mov
jmp
call
ds
jge
push
js
nop
sub
lds
add
sbb
push
push
retf
push
loop
call
sub
loope
adc
lods
push
aad
jmp
js
scas
cmps
dec
popa
sbb
push
cld
pop
pop
fidivr
push
and
leave
dec
fwait
xor
cmp
je
arpl
mov
push
xchg
aas
cdq
adc
xchg
push
push
ret
dec
in
popa
pop
lds
std
into
repnz
jmp
out
sub
shr
das
xchg
das
leave
stos
mov
in
inc
cmps
add
or
and
cmc
sub
push
mov
inc
xchg
or
out
sub
inc
aad
jbe
cmp
pop
ret
and
mov
inc
sahf
ss
das
cld
jg
mov
daa
ins
scas
or
adc
popa
push
mul
jecxz
jp
push
in
out
in
mov
mov
js
mov
jns
cmp
inc
jmp
ja
hlt
cdq
int
fcmovnbe
and
data16
mov
aaa
jmp
fbld
mov
adc
fmul
repz
imul
retf
sbb
dec
pop
dec
pop
rcr
xchg
dec
bound
call
rcl
mov
jb
cmp
pop
outs
push
xlat
mov
cwde
sub
cmp
rcl
xchg
push
mov
lock
clc
pushw
adc
test
mov
lods
push
ins
test
xlat
xchg
out
mov
mov
loop
sub
xor
scas
repnz
mov
in
mov
inc
int
ja
std
push
adc
pop
inc
sbb
cld
(bad)
loopne
push
(bad)
fcomi
sub
pop
push
cmp
mov
mov
test
(bad)
xchg
mov
cdq
and
xlat
jae
jne
bound
icebp
(bad)
mov
mov
sub
(bad)
fld
dec
adc
fst
ins
cmp
data16
push
stos
(bad)
in
sbb
adc
jb
pop
imul
hlt
shl
push
(bad)
lods
(bad)
dec
inc
(bad)
ins
and
in
fwait
sbb
pop
xor
sbb
and
ds
mov
pop
cli
push
out
aas
in
cmp
test
test
das
daa
loope
enter
xor
mov
rol
push
(bad)
mov
and
aad
xlat
jge
pop
cmp
outs
fist
fwait
pop
pop
scas
adc
(bad)
ins
pop
test
lods
sbb
mov
push
fadd
icebp
xchg
jmp
pop
(bad)
pop
ret
adc
sub
daa
mov
lods
mov
xchg
test
or
dec
mov
gs
popa
cmps
pop
fld
and
pop
xchg
leave
pop
dec
(bad)
fnstcw
mov
mov
pusha
jmp
out
push
sbb
sub
mov
lods
fs
pop
fistp
mov
dec
test
fnsave
and
jb
ins
sbb
dec
xor
xchg
ins
ins
inc
rol
aas
adc
pop
mov
out
mov
idiv
in
sahf
iret
jmp
cmp
in
pop
retf
clc
mov
sti
jp
ss
fadd
data16
push
popa
in
add
xor
icebp
jg
add
dec
popf
(bad)
scas
push
or
fist
ins
ins
shl
sbb
mov
sbb
inc
inc
mov
out
adc
mov
xor
sub
addr16
cmp
sub
pop
adc
popa
neg
mov
cld
add
rcr
fcom
dec
ret
dec
sbb
xchg
jne
add
push
aam
add
retf
fidivr
shl
ss
sti
movs
in
mov
std
sar
xchg
ss
adc
(bad)
mov
adc
sahf
test
fs
int
or
ret
int3
add
ins
aad
int
stos
cmp
rol
fld
std
movs
cs
leave
fld
pop
cmc
and
loopne
mov
adc
or
test
push
int3
ins
fst
sbb
je
dec
jmp
inc
push
cdq
sbb
mov
int
or
test
ins
sbb
pop
lds
in
push
jecxz
inc
adc
and
out
xchg
sub
push
push
das
repz
sbb
mov
movs
retf
pop
cmp
lods
out
add
retf
daa
add
(bad)
clc
mov
mov
jno
ins
cli
movs
sbb
adc
ret
ror
push
test
cmc
inc
fadd
lods
std
adc
ret
cdq
(bad)
push
aam
psrlq
(bad)
mov
not
bound
(bad)
fisttp
push
pop
xchg
mov
mov
sbb
bound
mov
push
lds
sbb
scas
mov
xlat
cmps
imul
ret
inc
fmul
adc
jne
into
add
xor
mov
or
sbb
in
fidivr
push
cld
pusha
sahf
into
inc
ds
aad
or
daa
or
or
repnz
dec
stos
mov
fisubr
mov
xor
pop
icebp
lea
xchg
pop
sahf
(bad)
mov
and
arpl
fscale
xlat
or
push
sub
pop
xchg
pop
repnz
pop
adc
ja
mov
jle
mov
inc
add
ficom
std
push
fld
fs
add
ins
gs
push
and
sbb
cmp
dec
pop
popf
inc
out
xor
or
mov
adc
lahf
xor
or
mov
pop
inc
push
mov
pop
add
fsubr
pop
push
sub
jg
and
sub
das
or
lahf
lods
iret
pop
cmps
mov
fadd
push
xchg
mov
xor
mov
pushf
and
cmp
inc
add
mov
enter
arpl
cmp
mov
xchg
sbb
pusha
lahf
inc
shl
ret
fldcw
test
imul
add
adc
adc
push
fst
arpl
je
lds
ror
pusha
lds
imul
imul
jns
mov
push
repz
sar
clc
out
ror
mov
lahf
sbb
adc
inc
aam
arpl
or
bnd
sub
in
mov
push
add
inc
loop
push
imul
or
movs
dec
dec
loope
sbb
jne
outs
cmc
loopne
push
(bad)
outs
mov
add
aad
jmp
lods
xchg
push
aas
xor
fimul
inc
add
out
pop
push
xchg
mov
retf
cli
in
mov
int
inc
lods
cmps
stos
pop
mov
mov
test
loopne
bound
mov
jne
inc
das
mov
dec
push
scas
sbb
cmp
fdiv
adc
(bad)
pop
inc
adc
mov
bnd
xor
fwait
cmp
les
xor
cdq
sub
lahf
test
xchg
dec
scas
inc
cmp
xor
xchg
cmp
inc
fld
and
push
mov
hlt
push
cmp
call
dec
cmc
test
or
pop
cmp
mov
add
push
ins
add
movs
sbb
movs
jo
jb
sti
(bad)
in
sbb
push
adc
imul
ins
fbld
vpcomub
mov
dec
in
test
adc
push
scas
stc
add
fcom
ret
jne
xchg
or
push
adc
cmp
fstp
int
repnz
xor
bound
fld
lahf
iret
out
in
(bad)
jp
addr16
data16
mov
bound
and
pop
out
(bad)
pop
es
or
dec
push
pop
jbe
dec
inc
mov
jne
mov
lods
sahf
ror
fcmovnu
aaa
into
cmc
inc
jne
scas
cmc
push
dec
push
movs
fbld
push
retf
xor
pop
inc
jnp
ins
jae
out
aam
sbb
ja
xchg
adc
aam
sbb
cmp
sub
aad
xchg
add
(bad)
out
in
dec
fbld
xchg
pushf
xchg
shr
repz
ins
cmc
into
in
cmp
push
sub
xor
xor
int
mov
adc
mov
into
int3
gs
sub
ins
std
ds
and
fimul
sbb
fidiv
ja
jmp
test
cmp
(bad)
ins
pushf
push
daa
and
lea
popf
or
inc
inc
in
push
ja
call
ret
xchg
cmps
inc
movs
or
pop
(bad)
fidivr
and
fwait
jp
inc
fs
inc
sub
adc
pusha
xor
inc
sbb
mov
mov
out
shl
(bad)
btc
cdq
scas
ffree
addr16
pop
lods
ror
retf
cmps
nop
mov
into
cmp
out
jge
sbb
xchg
xor
stc
push
retf
retf
push
fcomp
pop
inc
bound
inc
mov
cwde
aaa
adc
(bad)
sub
and
mov
imul
inc
int
leave
hlt
add
(bad)
mov
in
pop
mov
xchg
(bad)
fdivr
jae
xor
xchg
mov
rol
and
dec
ret
out
mov
fcmove
ss
push
out
lock
jmp
pop
dec
movs
(bad)
sbb
sbb
sub
and
xchg
sbb
mov
cld
enter
lods
jno
inc
sub
pop
adc
dec
test
pushf
das
sbb
mov
inc
dec
cmp
or
test
xchg
or
mov
adc
fild
jg
xor
ffreep
push
and
push
push
shl
retf
pop
mov
xor
(bad)
sar
or
ret
das
mul
ret
mov
enter
jnp
out
sub
mov
jle
or
js
cmp
jbe
outs
inc
ss
les
and
sbb
fwait
sub
fstp
and
adc
xor
scas
gs
push
lahf
rcr
push
enter
repnz
jmp
lahf
adc
ds
cmp
sub
or
cwde
pop
sar
xor
imul
repnz
cld
jmp
in
push
add
(bad)
test
mov
fst
fnstsw
push
(bad)
repnz
pop
mov
(bad)
daa
inc
sbb
daa
or
test
scas
mov
mov
sub
imul
std
push
cmp
or
inc
and
sbb
xchg
push
lea
ds
mov
inc
xor
push
adc
jmp
iret
inc
jmp
inc
jecxz
pusha
push
push
or
addr16
sub
popa
iret
adc
add
outs
out
pop
xor
cld
(bad)
inc
clc
in
loopne
jp
fxch
pop
ins
xchg
cmps
arpl
mov
ja
add
xor
xchg
movs
imul
imul
jmp
lea
cmp
jnp
stos
mov
mov
ret
int3
enter
cmp
int3
jmp
push
retf
xor
jmp
daa
mov
mov
outs
xor
cmp
push
dec
xchg
pop
inc
shl
es
dec
mov
and
call
daa
xor
xlat
das
mov
cmp
and
gs
and
jnp
pop
js
outs
test
xlat
repnz
xor
mov
shl
hlt
xchg
scas
shl
(bad)
addr16
xor
push
mov
inc
cmps
pushw
es
mov
fbld
pop
adc
test
aas
dec
lods
mov
test
sbb
adc
out
js
adc
pop
and
cmp
jns
call
adc
or
adc
push
xlat
int3
cmp
or
adc
sar
push
cdq
(bad)
in
mov
inc
jle
sbb
jae
sbb
sti
jecxz
test
inc
out
and
test
or
push
data16
adc
shl
aas
fnstenv
push
leave
and
sub
shl
cmp
inc
sbb
shr
packsswb
imul
(bad)
in
push
test
mov
pop
push
pop
jge
scas
push
add
movs
and
fwait
int3
mov
or
daa
pop
or
or
mov
inc
idiv
mov
iret
call
int
out
gs
inc
jle
(bad)
mov
data16
enter
popf
push
push
std
sbb
das
xchg
jbe
push
xlat
sahf
xchg
cmp
pop
pop
pushf
sbb
loope
push
inc
push
or
enter
leave
call
loopne
(bad)
bound
or
(bad)
cmp
loopne
bound
adc
adc
pop
dec
adc
call
mov
mov
std
cs
pushf
(bad)
jmp
dec
push
(bad)
rol
cmp
(bad)
out
das
inc
fwait
les
sbb
ror
pop
or
cs
dec
and
push
or
out
sub
je
call
push
xchg
jmp
xchg
pop
bound
and
retf
xor
idiv
push
lods
cmps
sbb
fadd
cmp
mov
mov
leave
inc
lods
cmp
xchg
loop
out
pop
xchg
clc
popa
cmp
(bad)
mov
dec
jo
fs
and
in
mov
dec
ficom
push
jne
sub
pop
dec
ds
mov
add
adc
sahf
or
js
fcmovnbe
fcomip
pop
retf
pop
mov
xor
cmp
cld
pop
add
pop
jmp
cmp
mov
mov
push
xchg
gs
sub
pop
lahf
adc
rcr
push
sar
(bad)
lods
js
push
fwait
push
test
cmp
retf
iret
push
add
mov
add
sti
mov
push
jg
shl
shr
into
retf
cmp
or
out
shl
xchg
pop
jbe
mov
mov
add
add
ins
push
sti
in
sub
mov
mov
push
cs
dec
fmul
js
mov
mov
xchg
loop
stos
test
add
add
ror
mov
arpl
sbb
dec
or
push
jno
xor
fld
sar
stos
xchg
jne
pop
cmp
add
inc
lods
shl
mov
cmp
add
(bad)
push
test
mov
in
(bad)
xchg
or
in
jne
hlt
sbb
cs
xchg
rol
imul
loope
into
clc
or
and
mov
mov
ret
xor
int
adc
adc
popf
jl
rol
cmp
adc
pop
fmul
inc
ja
cmc
pop
ret
ret
(bad)
mov
mov
into
std
lods
arpl
(bad)
mov
sbb
sti
in
mov
jmp
sbb
pop
rcl
sub
jno
pop
cmc
or
xor
sbb
fisttp
aaa
aam
inc
or
add
dec
fiadd
mov
call
cmps
mov
inc
(bad)
lods
and
cmps
bound
inc
popa
out
ins
in
scas
jg
jmp
test
mov
rcl
add
dec
or
mov
fdiv
and
outs
mov
adc
inc
mov
adc
and
(bad)
sub
(bad)
push
cmps
push
call
jecxz
ror
xchg
sahf
aam
sub
std
gs
outs
mov
push
push
aam
movs
dec
stos
mov
and
neg
lea
xor
and
das
add
sub
scas
pop
pop
fnstenv
sar
push
sbb
adc
mov
push
dec
jp
mov
ins
sub
sbb
outs
repz
sar
cs
imul
rcl
pop
mov
xor
call
xor
or
and
push
push
int3
push
dec
sub
mov
out
add
pop
fistp
sub
mov
and
bound
mov
xchg
iret
sar
and
jg
cs
pop
mov
test
daa
call
data16
jl
fldcw
(bad)
cmp
mov
add
outs
mov
int3
and
leave
dec
push
in
xchg
test
and
inc
js
ins
movntq
out
test
push
mov
shl
xor
inc
std
cmp
stos
xchg
xchg
jae
ficomp
sbb
jmp
in
sbb
dec
mov
into
icebp
inc
into
push
sub
movs
inc
in
push
jne
imul
ss
or
ins
add
pushf
and
and
jmp
stos
fcmovb
loop
sbb
lds
ret
outs
bnd
mov
stc
in
inc
add
and
rcl
pop
cmp
rol
mov
(bad)
xor
push
in
int3
shl
fadd
jmp
or
pop
fld
xor
outs
mov
or
or
jmp
outs
push
fbld
mov
push
add
movs
fwait
(bad)
xchg
pop
rol
mov
mov
adc
mov
aaa
mov
sbb
in
add
dec
enter
rol
(bad)
xor
xchg
inc
sbb
scas
push
aas
or
loope
pop
test
(bad)
jmp
cmp
fisttp
je
dec
xchg
scas
xchg
mov
xchg
sysexit
cmc
pop
sbb
fcmovnbe
in
mov
aam
es
movs
mov
sbb
loop
sbb
loop
sub
cmp
adc
test
sahf
(bad)
shr
lock
cmp
pop
(bad)
jecxz
xor
arpl
mov
sahf
or
and
lds
not
dec
inc
push
pop
xor
sub
jno
mov
in
jmp
xchg
jb
out
inc
ret
scas
push
pop
jae
stos
mov
mov
mov
movs
cmp
out
sar
jbe
ffreep
push
sub
adc
loopne
aam
xchg
inc
cmp
cmp
(bad)
sbb
xor
hlt
xchg
dec
push
cdq
outs
inc
xchg
jae
sbb
xchg
fwait
les
mov
xchg
ror
cmc
retf
add
pop
ret
sti
mov
lock
jl
mul
sub
sub
mov
cld
ret
sbb
daa
mov
mov
add
mov
inc
xor
xchg
inc
jg
popf
imul
imul
push
js
mov
ss
dec
dec
push
cmp
out
and
and
retf
js
imul
sub
mov
movsx
shl
iret
outs
out
inc
jge
sahf
test
pop
jmp
mov
add
daa
add
cs
loope
pop
push
leave
mov
mov
or
pop
mov
sbb
mov
adc
leave
gs
fldlg2
jno
adc
ja
sti
inc
sub
sub
les
xchg
mov
xor
adc
cmc
and
cmp
xchg
cmc
cli
aas
repz
inc
pop
mov
cmp
and
inc
push
gs
ja
out
mov
nop
out
cmps
xor
mov
and
cld
inc
dec
jo
jecxz
fisub
pop
cmp
shr
pop
sbb
adc
mov
sahf
push
cwde
stos
mov
jnp
or
(bad)
fisttp
push
push
pushf
cmovb
fwait
push
in
sbb
jl
pushf
movs
xor
inc
push
std
leave
mov
dec
call
xor
in
and
xchg
dec
bound
mov
clc
sbb
mov
pop
mov
retf
and
mov
test
in
push
add
jo
cmp
push
scas
cmps
jns
fdivrp
sub
jo
sub
or
je
mov
push
mov
mov
cmp
or
(bad)
xchg
daa
dec
out
not
imul
mov
inc
mov
out
fdiv
xor
stos
iret
sub
fmulp
ins
retf
ret
ins
fldpi
push
pop
push
xor
ffreep
sub
push
inc
fdiv
js
xor
loop
shl
mov
std
les
imul
push
in
movs
clc
push
out
jbe
sub
aad
inc
push
fisubr
out
jge
or
outs
mov
fwait
mov
cmc
sbb
cwde
mov
repnz
popf
data16
adc
adc
sbb
or
dec
sbb
inc
jmp
(bad)
push
pop
pusha
push
ss
ror
lds
mov
shl
mov
cmps
sbb
stos
mov
into
lds
sub
mov
iret
cmp
push
sub
stos
minps
in
(bad)
call
dec
xchg
stos
jecxz
rcr
ret
mov
fdivr
loopne
push
(bad)
fmul
test
mov
adc
dec
jb
into
inc
fld1
mov
jno
or
adc
ja
inc
adc
loope
retf
cmp
pop
or
sub
cmp
jne
lahf
rcr
push
shl
sar
jmp
ins
stos
mov
xor
push
adc
sbb
jecxz
fcomp
iret
out
fild
mov
stc
clc
push
ja
xor
movs
je
mov
shl
int
add
pop
(bad)
ss
cmp
cmp
bound
jns
inc
ins
stc
cmp
sbb
push
pop
(bad)
shl
adc
push
sbb
imul
sbb
xchg
cs
jle
xor
xchg
mov
out
lock
lods
and
inc
cmp
jecxz
loope
pusha
or
div
mov
fistp
dec
shl
xor
mov
mov
shr
or
fiadd
or
test
jb
in
cmp
jne
cmc
sbb
pusha
in
mov
ins
lahf
push
es
sti
(bad)
sub
jge
inc
mov
push
mov
fwait
sub
ins
lea
sar
mov
and
popf
stos
fcomp
bnd
test
retf
rol
(bad)
fnsave
dec
xchg
sti
int3
ret
sbb
or
or
into
fld
xchg
push
mov
push
push
jno
mov
mov
popf
adc
jae
imul
ins
cmps
inc
add
push
ficom
dec
out
adc
shr
retf
mov
fstp
loopne
mov
mov
xchg
xchg
mov
lds
sbb
fstp
mov
mov
jp
jle
stos
addr16
pop
movs
cmc
dec
jge
mov
or
je
sbb
cdq
cdq
and
cdq
inc
fs
push
ret
inc
jle
movs
mov
add
inc
jno
in
jle
adc
mov
push
and
inc
arpl
int3
mul
dec
lods
mov
cmp
adc
mov
(bad)
mov
push
jbe
xor
push
ror
jmp
into
mov
pop
retf
std
mov
out
cwde
dec
mov
sbb
daa
loop
pop
lds
pop
cmc
adc
mov
ret
pop
loope
sbb
cmp
(bad)
mov
imul
add
push
addr16
clc
cmp
xor
adc
fmul
outs
sub
ins
rcl
inc
add
inc
test
mov
inc
xchg
sub
pop
ins
out
dec
loop
dec
cwde
mov
and
cmc
pop
rol
mov
ret
mov
push
iret
xchg
dec
jecxz
ret
push
sub
mov
mov
sbb
cmp
scas
movs
xchg
imul
leave
fadd
dec
sti
imul
das
gs
or
cmps
out
jmp
cs
(bad)
neg
in
jmp
pop
adc
push
fnstenv
mov
jns
fsub
jns
test
shl
rcr
test
bound
push
or
adc
push
inc
dec
and
cwde
pop
inc
add
xor
hlt
stos
pop
or
or
push
add
movs
out
ss
fcom
pop
arpl
xchg
shr
pusha
mov
icebp
arpl
das
ins
stos
repz
gs
sub
ret
mov
cmp
mov
inc
mov
ds
push
dec
jbe
retf
jmp
in
repz
push
lds
push
test
sbb
push
mov
add
push
push
jmp
inc
cmp
enter
dec
jbe
dec
outs
mov
out
jne
outs
jge
push
mov
xchg
cmp
(bad)
jl
inc
add
mov
dec
rcl
inc
fdivp
sahf
pop
nop
ss
push
ins
popa
pop
and
shl
jge
call
cmps
fistp
mov
inc
(bad)
mov
sahf
dec
and
xor
cld
push
push
leave
popa
xchg
xchg
out
fisubr
movs
dec
outs
popf
(bad)
in
push
lahf
sti
ffreep
sbb
les
cdq
sbb
lock
ret
inc
mov
out
sbb
and
scas
cmp
or
sbb
lods
mov
popa
or
mov
int
out
xchg
and
(bad)
(bad)
sbb
xchg
push
loopne
lahf
jmp
fsubr
outs
add
fs
push
pusha
inc
pop
popa
sti
idiv
inc
fld1
xchg
xor
dec
add
pop
setl
aas
mov
ret
inc
iret
push
into
mov
pop
popa
cmps
int
dec
push
or
push
dec
jbe
pop
or
mov
das
scas
mov
jbe
(bad)
ret
xor
jnp
lods
jge
add
hlt
or
aad
rol
xor
pop
int
jmp
cmps
and
inc
pop
jl
sbb
das
pop
pop
mov
pop
cmp
imul
push
lea
scas
sbb
pop
int3
sub
pop
imul
and
icebp
jg
out
push
add
test
fcom
shl
push
outs
(bad)
pop
mov
test
xchg
pop
inc
sbb
ret
add
cmp
xchg
and
in
js
xchg
cmp
pop
cmp
jo
mov
add
loope
stos
and
push
add
xlat
mov
stc
pushf
xor
push
test
sbb
enter
sub
mov
call
mov
and
xchg
push
inc
mov
inc
mov
sbb
jns
jns
jp
or
stos
inc
sahf
sahf
retf
add
ror
xor
enter
movs
sbb
sub
dec
or
popa
icebp
jae
les
xchg
mov
jg
sub
xlat
mov
sbb
jae
enter
mov
inc
in
mov
xchg
sub
clc
fwait
push
cs
repz
sub
xchg
retf
bound
sbb
push
cdq
cmps
ret
cdq
adc
sbb
stos
retf
dec
xchg
adc
sub
out
mov
sbb
mov
aam
inc
cmps
cmp
and
scas
dec
sub
sub
push
push
enter
popa
mul
and
mov
push
ds
pushf
and
clc
stos
sar
cmps
and
xor
sbb
in
pop
fnsetpm(287
xchg
and
xchg
jo
repz
das
jmp
popa
shl
mov
dec
xchg
retf
dec
dec
movs
inc
js
jae
sub
inc
mov
iret
int3
lock
jbe
fwait
add
loopne
cmp
scas
in
inc
mov
mov
lock
cs
inc
sub
and
or
cmps
imul
cmps
outs
cmp
outs
xchg
shl
pushf
xchg
adc
cwde
lods
rcl
inc
sbb
sub
(bad)
hlt
mov
xchg
mov
mov
dec
test
sub
mov
into
shl
jbe
and
mov
out
cdq
hlt
lahf
adc
into
fcmove
cmc
test
mov
outs
jb
jbe
inc
bnd
pop
sbb
outs
in
sahf
test
arpl
movs
xor
mov
cmp
xchg
clc
sub
mov
mov
leave
xchg
sub
and
(bad)
cmc
cli
iret
xor
ss
vmovd
xchg
sar
fild
pop
iret
xor
pop
add
sub
mov
(bad)
push
adc
pop
call
pop
mov
out
jbe
test
mov
ss
loop
cmp
addr16
pop
rcr
shr
dec
push
xchg
pop
jecxz
bound
push
imul
add
sub
dec
imul
fdiv
jb
fisttp
fsubp
mov
pushf
out
and
inc
out
in
mov
ficom
sti
push
sahf
loop
or
xor
jecxz
push
sbb
mov
rol
push
ret
push
inc
gs
lods
hlt
lods
ret
mov
jb
dec
sub
lock
xor
inc
dec
or
mov
int
push
sub
les
sbb
mov
pop
sub
and
icebp
cwde
mov
lds
in
push
jg
mov
and
cmp
outs
sti
xor
push
leave
das
ds
dec
push
jp
in
outs
repz
mul
out
inc
lods
jo
retf
mov
mov
fidiv
dec
push
mov
jp
iret
fisub
rol
popa
je
mov
cmp
(bad)
(bad)
loopne
jmp
mov
sub
out
push
in
push
(bad)
adc
inc
repz
inc
repz
inc
pop
lods
pop
rcl
std
and
out
mov
cmp
add
xchg
repnz
mov
mov
sbb
pop
scas
mov
jge
pop
or
ins
mov
sub
lock
pushf
xchg
call
dec
mov
js
and
test
stc
pop
gs
ins
iret
int
retf
lods
xchg
sar
popa
shl
(bad)
bnd
xor
cwde
test
retf
cmp
push
sbb
icebp
push
push
cwde
pop
pop
sti
fsub
add
cmp
xor
cdq
pusha
ins
pushf
int
neg
pop
push
jae
ret
out
out
and
xchg
mov
add
cli
test
mov
sub
inc
add
pop
(bad)
repnz
xchg
push
inc
mov
mul
repnz
adc
mov
cmc
sub
lahf
sar
inc
sub
jmp
ror
test
fptan
fwait
mov
mov
mov
(bad)
mov
adc
sbb
inc
sbb
mov
pusha
mov
cli
cmp
and
lds
lods
inc
dec
data16
repz
push
pop
add
add
rol
es
add
fcmovb
lods
jmp
push
clc
ret
xchg
fimul
xchg
mov
out
and
xlat
fbld
js
jl
mov
push
dec
cmp
ds
jbe
cmp
enter
les
test
fwait
int3
and
mov
mov
cmp
and
icebp
mov
add
leave
jge
fdivr
call
and
repnz
push
or
lock
ins
fild
cli
cwde
std
lahf
fld
test
mov
arpl
xchg
daa
in
push
outs
ror
aad
add
pop
cmps
retf
dec
pop
call
and
stos
adc
adc
xchg
test
fsubr
lods
mov
ja
scas
je
and
aam
push
cmc
and
outs
push
push
xchg
pop
fst
mov
imul
xchg
int
or
cmp
mov
fcmovbe
mov
sub
sbb
aam
sub
pop
push
cmp
xchg
loopne
movs
xor
shr
fcomp
ret
xchg
jle
cmp
scas
add
mov
adc
lock
xchg
shl
mov
adc
int3
or
gs
(bad)
cmc
sbb
js
pop
call
(bad)
xlat
outs
and
cmp
push
in
lds
cmc
push
fcomp
fistp
dec
arpl
xchg
lods
arpl
jmp
push
iret
sub
ret
xchg
xor
pop
mov
cmps
add
sti
pop
pop
push
test
out
dec
mov
sbb
cmc
movs
xchg
dec
mov
adc
enter
push
cmc
and
ins
jecxz
fsubr
jl
dec
fwait
push
lds
fdivr
retf
add
pop
and
inc
inc
(bad)
and
ss
mov
xchg
pushf
and
iret
lods
inc
aaa
addr16
addr16
jno
add
push
mov
mov
push
call
jb
and
adc
aam
jae
adc
dec
fwait
outs
dec
adc
imul
bound
and
test
lock
test
push
icebp
jg
inc
xor
outs
test
or
fnstenv
and
sbb
cmps
test
jns
gs
dec
sar
jmp
fisubr
or
xor
pop
cmp
push
mov
xor
(bad)
test
cdq
pop
outs
in
mov
inc
(bad)
sub
ds
mov
popa
into
xchg
pop
sar
outs
jb
das
ror
cmp
and
in
out
test
pop
mov
add
xchg
leave
imul
cmp
add
shl
mov
mov
bound
mov
lods
dec
int3
cmps
mov
mov
shl
cmp
jbe
(bad)
inc
movs
push
cmp
fstp
sbb
mov
enter
mov
rcr
push
push
popa
dec
jmp
popf
outs
aas
adc
popf
fisubr
jle
inc
push
ins
xor
cmp
inc
mov
shr
out
mov
ror
lock
cmps
iret
xlat
and
pushf
jge
dec
pop
push
les
mov
xor
mov
pop
popf
push
jl
mov
add
lods
mov
fisub
dec
in
js
cmp
stc
mov
aam
ret
rol
loope
data16
shl
jl
and
call
cld
test
dec
inc
mov
and
out
push
and
sub
xor
add
and
mov
hlt
or
inc
repnz
repz
adc
pop
xor
push
adc
push
or
jp
jb
into
movs
xchg
mov
loop
mov
adc
retf
xchg
push
sbb
div
and
and
fisub
stc
jno
leave
add
mov
popa
xchg
jecxz
mov
pslld
lods
fstp
mov
adc
ret
mov
inc
sti
lods
(bad)
and
mov
mov
sub
cli
and
in
and
icebp
xchg
outs
std
in
fnstenv
inc
les
popf
popa
add
loopne
stos
add
cmp
lahf
jbe
xor
or
add
jle
retf
pop
test
retf
pop
xchg
adc
dec
dec
mov
inc
cmps
retf
fisttp
ins
jl
jnp
add
in
mov
xor
pop
pop
and
mov
out
bswap
inc
inc
hlt
das
popf
shr
icebp
lods
mov
cmp
loop
and
pop
dec
div
jge
and
std
aam
mov
test
jle
nop
mov
mov
lea
sub
xor
cmps
lock
cli
xchg
gs
ud0
sbb
call
xchg
cmp
les
mov
sub
or
sahf
outs
sub
je
pusha
pop
jl
sub
imul
daa
out
add
jmp
mov
cmp
lock
mov
imul
bound
adc
pop
sub
adc
scas
aas
(bad)
pop
jmp
xor
mov
mov
jnp
faddp
add
in
shl
xor
lds
jecxz
in
adc
mov
pop
sbb
test
or
jmp
aas
stc
push
cdq
retf
push
dec
movs
sbb
scas
or
push
neg
or
retf
(bad)
cmp
out
add
std
int
stos
loop
or
xchg
adc
pop
xchg
and
mov
das
(bad)
aad
imul
mov
iret
jmp
cmp
dec
(bad)
add
(bad)
shr
add
stos
sbb
arpl
dec
mov
mov
mov
int3
inc
enter
cmp
sti
loop
inc
loop
push
imul
or
jecxz
fisub
and
cmp
push
and
aaa
xchg
xchg
scas
pop
mov
pop
mov
aas
sbb
mov
enter
scas
pop
iret
xlat
xor
xchg
ret
int3
mov
scas
adc
fs
loop
push
sub
push
test
sub
dec
push
stos
addr16
out
sub
retf
leave
aaa
adc
cmp
sar
cli
mov
fwait
lds
sti
mov
mov
jle
sahf
pushf
inc
inc
fistp
xor
xchg
cmp
call
ja
and
imul
xchg
movs
scas
pop
out
cwde
mov
dec
nop
mov
les
jbe
mov
ror
jp
mov
test
jo
mov
or
mov
cmps
add
cld
add
dec
sti
lods
hlt
aas
fidiv
loop
mov
test
xchg
xchg
jae
xchg
adc
sub
jae
leave
mov
cmp
pop
mov
addr16
push
je
fldcw
and
aaa
mov
xchg
ret
cdq
jge
lods
mov
or
out
cmp
adc
xor
movs
stos
cld
inc
scas
ins
aas
out
repz
dec
ret
jmp
lea
aas
cmp
and
push
mov
out
cmc
xor
add
sbb
out
mov
dec
out
std
push
sahf
fwait
and
push
mov
ins
push
fwait
xor
pushf
or
jmp
add
stos
mov
in
mov
inc
test
or
repz
ins
repz
into
test
sbb
jo
adc
inc
fwait
rcl
(bad)
xor
add
jns
fild
clc
cmps
shr
sbb
dec
mov
int
and
js
mov
jge
ret
cmp
call
fistp
or
sbb
rcr
push
or
xchg
out
js
inc
xchg
int3
and
pop
sbb
fadd
sub
adc
cld
(bad)
repnz
sbb
xchg
mov
cmc
cmp
ss
clc
pop
or
loope
js
lea
enter
xadd
imul
invd
rol
inc
dec
fisub
cmc
cmp
jmp
mov
(bad)
cmp
jae
and
test
in
pop
jne
mov
int3
inc
mov
pop
xchg
inc
jmp
mov
mov
pop
dec
movs
ds
pop
(bad)
not
(bad)
arpl
jmp
and
cmps
sbb
sahf
push
xor
test
mov
lahf
adc
jae
xchg
xchg
mov
lds
jmp
dec
aad
cld
inc
sti
pop
mov
jmp
mov
imul
push
mov
scas
retf
sub
shl
jns
out
out
popa
xor
nop
fimul
leave
xchg
xchg
inc
dec
je
mov
stos
movs
daa
push
and
clc
enter
adc
dec
test
aad
xor
int
adc
in
mov
arpl
aas
mov
in
add
xchg
lea
cmp
mov
mov
outs
dec
sbb
icebp
push
imul
js
test
mov
lea
das
test
and
cli
popf
leave
dec
sub
or
xchg
(bad)
clc
pop
mov
push
fstp
out
dec
rol
mov
adc
mov
in
adc
or
mov
adc
rol
adc
test
cmp
out
lea
loop
pop
lock
cmp
and
cmp
add
sbb
ss
ret
mov
popa
and
outs
nop
sub
call
popf
adc
pop
sub
jl
(bad)
xor
jns
push
mov
ins
jo
scas
test
call
cmps
scas
jecxz
xchg
or
pop
pop
adc
jl
or
and
mov
call
push
cmp
(bad)
xchg
mov
inc
inc
xor
mov
jg
(bad)
fiadd
adc
test
imul
add
push
xchg
sub
adc
bound
mov
in
inc
rcl
mov
xchg
into
sub
pop
stos
add
dec
jmp
lods
rcl
addr16
lds
jle
pusha
cmp
push
shl
outs
scas
(bad)
xchg
mov
inc
or
jns
popf
(bad)
(bad)
adc
retf
sbb
lea
sub
xor
pop
xor
pop
mov
sub
jns
int
test
adc
sbb
jb
ins
pop
pop
inc
mov
jle
(bad)
mov
test
(bad)
xlat
movs
lds
sbb
mov
(bad)
xor
jge
xor
pop
retf
ret
popf
out
iret
sub
pop
clc
pop
lods
stos
das
or
mov
loop
nop
adc
xor
scas
sub
sbb
mov
sbb
gs
and
dec
rcr
gs
dec
stos
daa
xor
js
push
into
sub
movs
mov
push
lahf
cmps
in
bound
ins
push
fdiv
test
scas
mov
sub
in
push
jge
cmp
into
add
mov
jmp
sub
scas
pop
in
pop
dec
xor
loope
xor
push
add
lods
out
sub
dec
scas
fs
xchg
inc
(bad)
stos
mov
dec
ret
jmp
jp
jmp
and
rol
mov
outs
add
icebp
aad
and
mov
pop
sar
push
cmp
push
dec
pop
sti
retf
scas
aas
mov
stos
rcr
add
pop
repnz
aas
imul
pop
add
dec
dec
add
out
hlt
xchg
xchg
sar
ja
dec
jnp
add
ss
mov
sbb
mov
and
mov
inc
cs
mov
loope
adc
xchg
sub
sbb
sub
jno
dec
lds
push
mov
push
lock
repz
jge
popa
lods
sbb
mov
(bad)
lock
pop
jg
jmp
sub
or
cmps
ins
sbb
test
shr
mov
out
and
push
fisub
mov
cli
ret
jmp
loop
aam
scas
inc
test
push
pop
sbb
mov
in
(bad)
retf
ret
repz
or
call
or
sub
clc
add
jo
call
and
or
cmp
frstor
jge
mov
xchg
scas
aaa
push
and
sar
cmp
into
xchg
clc
jnp
cmp
out
jns
mov
xor
into
pop
ret
cdq
mov
push
cmp
jmp
ja
hlt
xchg
dec
test
jb
mov
xor
rcl
sbb
sbb
push
div
inc
mov
rcr
jnp
es
test
sbb
push
or
and
nop
add
mov
repz
stos
pop
ds
dec
jo
xchg
(bad)
sbb
xor
and
mov
imul
dec
cli
pushw
inc
cdq
and
stc
mov
cmps
sub
cwde
jecxz
push
test
xor
push
pop
or
push
(bad)
movs
cmps
rol
dec
int3
push
mov
sbb
aam
or
mov
cmp
jl
mov
xlat
aaa
or
push
(bad)
mov
pop
jl
ja
add
jnp
outs
mov
repz
loope
sti
pusha
push
cmp
idiv
fldcw
fwait
push
movs
pop
retf
mov
sub
(bad)
std
dec
iret
jae
in
pushf
or
pop
cmp
into
(bad)
pop
push
scas
pop
mov
daa
pop
gs
aaa
aaa
and
jge
mov
pop
xor
sar
and
daa
xchg
rcl
cli
popf
iret
or
or
std
lds
push
loopne
cmp
fdivr
adc
fldenv
jns
mov
inc
mov
pop
icebp
in
jmp
enter
xchg
xor
arpl
xchg
sub
inc
sub
js
(bad)
cld
outs
retf
sbb
ret
push
pop
ror
mov
push
xor
xor
ret
jno
push
mov
xchg
lock
rol
mov
out
cdq
arpl
add
push
add
iret
cwde
jl
push
push
leave
mov
in
dec
mov
retf
mov
les
daa
int
sub
(bad)
retf
js
mov
xor
push
jb
ret
(bad)
in
mov
xchg
in
les
adc
hlt
push
pop
inc
test
cmp
sub
add
pop
xchg
int3
xor
popf
sbb
jb
jae
sbb
ds
xor
sti
push
add
pushf
ficomp
les
mov
call
clc
push
sub
jg
jmp
ja
outs
or
aam
xchg
cmp
add
test
test
pop
fs
mov
mov
inc
xchg
call
push
jno
cmp
pop
sub
pushf
pop
ja
(bad)
push
xchg
cld
jp
ja
movs
mov
and
ret
inc
and
fcomp
and
inc
push
push
mov
mov
xchg
nop
xchg
dec
mov
aas
repz
or
fdiv
inc
mov
sub
das
into
test
out
rol
mov
cmp
xlat
pop
pop
cmp
xor
mov
std
push
and
jmp
in
ins
sub
data16
sbb
dec
adc
aam
and
mov
jno
ret
add
(bad)
cmp
dec
mov
call
inc
pop
jns
leave
xchg
mov
(bad)
pushf
jns
call
pop
dec
mov
cmp
jmp
fsubp
jmp
adc
das
fsubr
mov
rcr
jle
pop
iret
cmc
jp
or
lods
into
ins
scas
jge
shl
arpl
or
or
push
gs
cmp
cwde
std
cwde
or
dec
pop
mov
add
sbb
nop
add
sti
adc
lds
and
lahf
cmps
mul
pop
fldcw
and
and
in
cmps
fwait
xchg
ja
ins
jp
jbe
jno
adc
loop
xchg
inc
das
mul
pop
nop
sub
and
xchg
stos
mov
sar
inc
shr
sbb
cmp
fiadd
inc
rol
mov
cs
test
nop
inc
pop
std
sbb
mov
ret
stos
fdiv
sub
cmp
jecxz
cmc
jb
push
clc
imul
cmc
cmp
and
xlat
fs
xchg
cld
push
xchg
jbe
idiv
sbb
(bad)
stc
adc
and
daa
daa
ret
nop
sahf
fwait
or
dec
imul
je
int3
aaa
inc
or
ret
retfw
mov
adc
or
pop
(bad)
sar
inc
sahf
mov
or
sbb
jbe
cmps
push
(bad)
dec
sbb
and
lea
jg
push
or
xchg
les
jb
aam
dec
cmp
and
mov
adc
or
inc
or
test
pop
sbb
mov
gs
ret
sbb
mov
jbe
out
retf
xor
mov
hlt
xor
pop
or
mov
add
loopne
loopne
xchg
scas
repnz
lahf
jle
repnz
xlat
pop
pop
fucomi
push
aam
dec
int3
xlat
push
inc
shrd
ja
sub
cld
(bad)
ret
jmp
ins
hlt
push
cmp
fs
jne
(bad)
mov
(bad)
adc
xor
pop
and
or
push
icebp
fnstcw
dec
std
adc
fcmovnu
ret
sbb
in
mov
sub
(bad)
clc
cmps
enter
dec
pushf
sar
cmp
cmp
mov
dec
les
cmp
ds
scas
xor
fistp
inc
and
xor
(bad)
aam
mov
xchg
test
icebp
sahf
push
popf
jmp
inc
xchg
lods
int
push
fist
pop
cdq
adc
jg
int3
push
mov
repnz
adc
mov
and
inc
pop
or
fimul
dec
inc
xor
push
adc
popf
cmp
push
inc
cmp
lahf
out
and
jne
aaa
or
xor
cmp
add
(bad)
test
mov
das
pop
or
pop
not
fs
jle
lea
sub
pushf
iret
cmps
call
mov
push
jnp
mov
xchg
and
sahf
dec
or
ret
or
mov
loop
dec
repnz
in
lds
dec
mov
lods
and
out
xchg
add
sar
outs
mov
stc
and
idiv
cmc
and
dec
hlt
xchg
add
imul
sbb
mov
aad
(bad)
adc
test
cmp
es
inc
cwde
cmp
xor
mov
out
dec
adc
popw
xor
xchg
cmp
je
pop
or
inc
js
cmc
and
in
and
test
retf
fdiv
or
pushf
xchg
jge
and
js
retf
mov
push
push
dec
push
shr
lods
jg
jns
mov
mov
fs
push
mov
leave
pusha
and
dec
jb
das
into
(bad)
in
clc
cmovb
ficom
xor
mov
jns
jl
cmp
ds
adc
(bad)
gs
div
cdq
jnp
cmps
or
ja
push
xchg
outs
adc
or
ds
popf
ins
dec
mov
xchg
popf
inc
dec
in
cmps
sbb
jmp
imul
test
pop
adc
(bad)
fbld
jnp
sub
cs
imul
xor
push
popa
scas
sbb
xlat
pop
outs
add
retf
jbe
jmp
call
imul
mov
mov
call
into
shl
imul
xchg
cmps
out
lds
rcr
adc
or
jl
push
pop
dec
inc
dec
mov
mov
es
cwde
or
shl
fisub
xchg
pop
sbb
and
mov
test
mov
fidiv
sub
movs
int
es
sbb
xchg
gs
jno
push
loop
pop
outs
mov
xchg
arpl
and
pusha
retf
rcr
pop
sbb
fidivr
jo
jge
xor
das
jne
lods
inc
data16
mov
ds
xchg
int
adc
inc
and
aad
iret
pop
push
icebp
js
cmp
cmp
add
sbb
div
loope
inc
in
pusha
lea
mov
sub
inc
sub
mov
sub
inc
fimul
int
(bad)
pop
outs
jo
mov
fisubr
mov
adc
and
dec
int3
arpl
xchg
nop
sbb
jmp
jmp
cmps
sar
sbb
mov
stos
jo
icebp
cmp
mov
nop
gs
mov
jge
ror
xor
push
test
test
cmp
push
push
push
cmp
ret
jge
test
cld
mov
stos
add
stos
outs
and
inc
xor
sahf
fs
and
out
xor
or
fld
mov
push
or
mov
push
jge
pop
mov
xor
icebp
pop
fidiv
outs
add
scas
(bad)
pop
fisttp
mov
je
loope
test
movd
int3
cmc
mov
push
mov
test
in
sub
mov
repz
jns
inc
sbb
cwde
pusha
xchg
pusha
pop
jl
inc
dec
sar
popa
push
mov
cli
cld
adc
jecxz
mov
out
out
adc
mov
fstp
adc
(bad)
cmp
scas
xchg
mov
and
sbb
pop
stos
cs
sub
in
sbb
xor
push
(bad)
mov
bound
or
cs
dec
jmp
or
fild
fs
bnd
sti
xchg
inc
and
sbb
ror
popf
xchg
xor
pop
cmp
mov
mov
mov
adc
jo
fsubr
ds
outs
gs
mov
int3
pop
in
mov
cmp
ins
pop
cmp
cld
repz
jg
sub
aad
mov
pop
outs
cdq
pop
push
movs
mov
lds
imul
jp
int3
mov
pop
dec
loopne
(bad)
jne
jnp
cmp
jnp
scas
pop
aad
mov
mov
movs
lods
mov
jne
sub
mov
jle
mov
imul
gs
(bad)
xor
rcl
mov
cmp
or
(bad)
xor
popf
sbb
js
pop
pusha
test
cmp
xor
xor
out
xchg
mov
mov
addr16
in
adc
stos
pop
jmp
adc
sbb
pop
ret
es
imul
ret
pop
aas
loopne
push
jecxz
sbb
or
aam
ret
fimul
inc
jae
pushf
dec
and
push
clc
adc
push
imul
das
xor
jl
jmp
test
pushf
adc
test
cmps
std
hlt
repz
jl
xchg
icebp
aad
enter
out
cvtpi2ps
(bad)
lds
cdq
ins
pop
mov
rcr
stc
mov
add
xor
or
mov
jne
stos
das
mov
nop
ret
xor
push
sbb
js
repnz
pop
mov
shl
aas
jnp
pop
pop
mov
jmp
fnstsw
outs
lea
sub
jmp
mov
aad
push
jmp
es
push
loopne
xor
cwde
rcr
sub
cmc
or
(bad)
push
ret
outs
call
sbb
sbb
pop
loope
iret
ins
push
std
adc
fidiv
call
in
mov
push
jnp
xchg
pop
gs
lds
and
lods
adc
cmc
pusha
dec
pop
retf
mov
lock
xchg
xchg
jecxz
push
mov
int
dec
ret
jmp
cmp
mov
mov
push
cmp
sub
ins
hlt
pop
arpl
rcr
pop
xor
xor
xor
mov
test
mov
xchg
mov
and
test
repz
pop
clc
repnz
vtestps
or
aam
aas
xchg
sar
push
loop
cmovns
adc
pop
sub
outs
out
ret
mov
stc
outs
out
cmp
popa
and
sbb
adc
nop
dec
call
adc
pop
sbb
push
cdq
bound
add
pop
jne
xor
jle
or
(bad)
test
dec
xchg
xor
pop
mov
(bad)
push
adc
int3
test
xchg
sub
dec
fwait
and
dec
dec
jo
sub
mov
lock
lds
loope
cmp
into
je
sbb
jmp
xchg
sub
mov
mov
loopne
dec
jmp
imul
test
mov
push
push
cmps
test
mov
xchg
jg
mov
(bad)
xchg
out
dec
cmp
les
push
mov
ficom
(bad)
sub
xlat
and
inc
data16
xchg
xchg
test
xchg
adc
call
and
xchg
ins
ror
or
lahf
dec
in
in
(bad)
xor
aas
arpl
cmps
repnz
dec
mov
mov
xchg
sbb
jp
cmp
or
pop
sbb
stc
jo
hlt
(bad)
mov
ja
jl
jg
stos
dec
jnp
sub
mov
movs
scas
cmp
mov
arpl
retf
pop
inc
pop
fxch
xchg
sbb
dec
movs
mov
pop
jae
inc
sub
popf
outs
adc
adc
fld1
fist
push
les
xlat
and
cdq
dec
jle
popa
sub
psubsw
push
push
xor
loope
(bad)
sub
cmps
mov
in
retf
dec
call
and
jl
loopne
lahf
sbb
scas
and
adc
xchg
daa
lods
push
out
push
mov
xchg
inc
cmp
test
xlat
call
adc
inc
aaa
xor
fdivr
aam
scas
(bad)
jbe
movs
ins
dec
in
stc
(bad)
push
dec
xchg
jecxz
div
movs
in
and
xor
(bad)
sbb
mov
scas
add
(bad)
out
aad
cmp
scas
in
push
add
jmp
out
mov
pop
es
inc
leave
in
xor
out
adc
mov
sti
outs
in
outs
call
(bad)
(bad)
icebp
pop
imul
outs
xor
add
inc
ds
cmp
inc
ret
mov
push
sbb
pushf
or
inc
clc
cmp
push
sub
popa
cmc
sub
push
xchg
push
mov
jno
cli
fs
stos
jnp
lods
aaa
neg
xchg
jae
mov
lahf
jg
imul
pop
(bad)
(bad)
push
ins
xchg
push
ja
test
sahf
push
ins
jle
pop
stc
les
sbb
pop
sbb
jns
or
test
jnp
outs
mov
and
dec
in
inc
loop
sbb
adc
into
mov
and
xchg
or
adc
cmp
stos
jne
push
enter
cmp
jbe
inc
gs
cmp
xchg
pop
push
jns
jae
xor
icebp
and
js
and
clc
in
xchg
pop
cmc
(bad)
push
clc
xchg
cmps
jns
int3
dec
add
sbb
neg
cmc
push
pop
dec
leave
fistp
and
mov
fwait
and
into
xor
div
jl
lock
retf
pop
neg
pop
sbb
(bad)
add
outs
pushf
cmp
mov
fld
ret
inc
out
or
mov
cld
mov
repnz
jmp
pop
jbe
or
pop
mov
enter
loope
(bad)
mov
pop
es
stos
lds
xchg
push
lods
pop
xchg
cld
retf
cmp
mov
push
cmp
outs
xchg
sahf
mov
retf
sub
lods
cmp
lods
jnp
pop
ss
rol
(bad)
jnp
sub
jle
daa
adc
ins
scas
bound
xchg
outs
jge
xlat
xchg
pop
pop
cdq
loope
mov
inc
sub
dec
cwde
sub
int
xchg
dec
aam
inc
pop
cmps
jecxz
ret
(bad)
xchg
(bad)
xchg
mov
js
and
and
test
cmc
mov
dec
add
test
push
stc
mov
mov
add
push
mov
sbb
fs
test
es
mov
cwde
cmp
jmp
test
fwait
daa
dec
push
xlat
into
adc
xchg
or
cmps
lahf
idiv
sub
push
fsubr
mov
fs
mov
addr16
pop
(bad)
pop
jns
sub
push
inc
cmp
and
pop
mov
daa
adc
lahf
pop
mov
jg
mov
sbb
rcr
sub
das
mov
adc
dec
pop
pushf
stos
fwait
ins
lock
cld
lds
retf
inc
mov
cmps
gs
mov
popf
imul
push
mov
sar
stc
or
test
fld
int
int3
sbb
aaa
div
push
sub
shl
or
mov
dec
inc
cli
out
call
inc
mov
into
push
xchg
adc
pushf
aad
fs
sti
add
dec
jns
icebp
and
hlt
adc
ret
mov
add
add
and
sub
adc
scas
arpl
ror
pop
mov
pushf
mov
mov
dec
push
call
push
cmp
add
das
add
push
xor
ss
mov
fidivr
ret
mov
retf
push
pop
aas
mov
lahf
popf
or
fcom
iret
fisubr
push
adc
cdq
jmp
push
pop
imul
fwait
scas
or
inc
jnp
mov
and
(bad)
shl
int3
sub
lock
mov
add
mov
ror
sbb
in
dec
xchg
add
mov
sbb
jl
push
lea
sbb
and
lock
sbb
mov
adc
pop
or
out
in
fistp
dec
cmp
call
lahf
enter
sub
retf
inc
push
adc
push
shl
adc
(bad)
out
scas
repz
cmc
retf
jae
popa
pop
jne
mov
pop
sahf
jmp
imul
stos
xchg
es
lods
jo
sar
inc
mov
pushf
pop
ret
xchg
lahf
mov
dec
mov
repz
shl
pop
jns
inc
jo
adc
fistp
inc
or
mov
into
cdq
out
adc
call
dec
adc
out
loop
push
push
aam
loop
xor
sbb
push
pop
jnp
mov
pop
leave
xchg
aas
out
sbb
pusha
cmc
cmp
fsub
inc
push
mov
test
mov
sbb
(bad)
mov
mov
and
add
push
stc
retf
mov
sub
dec
and
jo
adc
push
cwde
add
es
sbb
add
mov
pop
push
cmp
test
jmp
xchg
xor
popa
(bad)
push
rcr
xor
xchg
mov
icebp
jp
push
sbb
mov
mov
or
pop
dec
jae
clc
js
mov
lds
in
inc
not
arpl
inc
(bad)
out
or
push
adc
rcl
inc
imul
push
pop
sbb
mov
and
ficomp
aam
xchg
jae
sub
je
cdq
sub
inc
pop
ret
fistp
daa
mov
jp
lea
cwde
popa
or
jae
addr16
fsubr
ins
in
stos
les
inc
sbb
(bad)
xor
mov
int3
adc
(bad)
stos
dec
push
imul
fld
gs
movs
loope
mov
arpl
and
cmc
in
shr
mov
add
(bad)
stc
adc
or
mov
icebp
(bad)
rcr
pusha
jae
stos
mov
scas
jnp
xchg
adc
ret
bound
xchg
enter
lock
retf
test
bound
jb
sbb
pop
lahf
aad
int3
sbb
loope
sub
fwait
shl
or
test
push
ret
test
lahf
(bad)
movzx
pop
lock
ret
add
lahf
dec
dec
(bad)
jmp
mov
(bad)
enter
and
(bad)
push
call
sti
imul
cmc
mov
pushf
(bad)
call
test
dec
es
lods
mov
jmp
add
sub
cmc
mov
cdq
lods
outs
dec
sbb
aam
fidiv
jb
dec
mov
ss
outs
xchg
data16
and
push
mov
cli
rcl
fsubr
push
test
or
pop
xchg
push
outs
push
mov
aaa
cmp
ins
in
retf
aas
lods
cmp
mov
std
adc
mov
stc
cmp
mov
mov
inc
dec
popf
add
jae
push
lock
(bad)
inc
(bad)
data16
sbb
xor
popa
cdq
mov
add
imul
outs
in
fld
mov
dec
mov
or
and
fnstenv
stos
xor
mov
(bad)
js
mov
or
mov
mov
enter
inc
das
lahf
aas
xchg
adc
les
sbb
jo
adc
int
mov
ror
jecxz
and
out
inc
adc
mov
sbb
hlt
in
add
sub
xchg
or
imul
jl
dec
sbb
xor
int
inc
lock
pop
adc
lods
xlat
loop
mov
hlt
popa
mov
cmp
repz
dec
enter
mov
sbb
jno
cmp
push
adc
lock
sahf
test
add
sub
and
aam
pop
dec
rcl
xchg
fdiv
mov
mov
ret
call
repz
sar
stc
mov
ret
dec
xchg
cdq
fisub
cwde
(bad)
int
lock
in
loopne
pop
sbb
xor
sub
jge
test
aad
and
mov
xchg
in
repnz
ja
mov
adc
pop
lds
mov
add
js
jno
fwait
test
retf
push
repnz
movs
dec
mov
xlat
and
dec
stc
xchg
xchg
iret
cmp
shl
inc
in
retf
idiv
jns
dec
test
add
scas
je
dec
and
jno
dec
sbb
mov
xlat
push
cli
test
(bad)
mov
stos
mov
fwait
js
push
outs
mov
pop
inc
sub
sub
push
icebp
imul
les
jne
mov
add
push
ficom
dec
hlt
or
jne
mov
inc
daa
sbb
in
fmul
idiv
fsub
mov
mov
inc
mov
pop
call
pop
ss
(bad)
das
(bad)
mov
test
mov
gs
or
ret
dec
mov
or
stos
adc
je
fidivr
add
rcr
adc
jns
pop
jecxz
fidiv
nop
mov
mov
nop
fisubr
push
int
cdq
jg
inc
push
ds
sbb
aaa
xor
xor
pop
bound
jle
sti
push
fisubr
mov
pop
mov
rcr
test
lahf
movhps
push
dec
mov
int
cwde
js
pop
sub
pop
clc
mov
mov
and
test
sub
ds
shl
push
mov
loope
scas
jp
pop
sahf
xchg
lock
sbb
inc
push
ret
cmp
jle
jno
xor
and
jno
sbb
pop
je
jmp
jl
or
add
cld
or
push
lods
inc
fidiv
xchg
daa
(bad)
fisubr
fistp
ins
adc
cmp
movs
retf
daa
addr16
xchg
in
xchg
or
mov
jbe
sub
mov
push
fcom
xor
push
imul
mov
mov
out
cmp
push
xchg
es
xor
xchg
add
clc
jns
aad
adc
adc
lea
test
inc
cmp
fdivr
mov
jmp
clc
std
in
bound
and
mov
push
inc
in
push
or
xor
stos
pop
mov
in
lock
cs
jb
lahf
cwde
or
adc
inc
lea
movs
mov
mov
bound
outs
xchg
cmc
xchg
lods
out
pop
es
and
adc
or
mov
jno
mov
push
lds
fcom
and
(bad)
hlt
or
clc
arpl
lods
loop
nop
(bad)
out
test
pop
sbb
retf
push
push
das
mov
and
adc
mov
xchg
xlat
inc
test
pop
and
sti
jbe
push
es
inc
repz
sbb
cli
fucomi
jp
xchg
fst
mov
push
pop
adc
xchg
xchg
xor
or
xchg
sahf
ins
aam
in
fistp
or
je
test
push
and
push
push
das
jne
jl
jmp
add
and
repnz
jae
loopne
ret
xor
xchg
leave
test
test
add
enter
shld
dec
mov
je
dec
lds
xlat
es
out
call
xor
(bad)
and
clc
mov
sbb
scas
cwde
and
fld1
int3
ret
xor
pusha
ret
xor
jae
(bad)
mov
aas
jle
ja
nop
ficom
dec
adc
fmul
push
adc
add
(bad)
push
cmp
(bad)
mov
mov
xchg
icebp
int
mov
mov
pop
in
mov
cmp
push
ja
cmp
xor
das
pop
xor
sbb
cmc
arpl
mov
xchg
inc
sub
xor
aaa
pop
and
ins
(bad)
leave
outs
mov
ret
or
rol
loope
rcl
in
inc
mov
mov
push
cmps
cdq
out
mov
cld
movs
inc
stos
sub
movs
dec
dec
pop
nop
ja
test
fcomi
xchg
pushf
movs
dec
arpl
fisttp
pop
outs
xchg
mov
daa
inc
push
iret
xor
mov
movs
stc
rcl
test
cs
jecxz
sbb
adc
std
cmc
jnp
(bad)
sub
and
sbb
fst
mov
or
retf
cmp
push
ss
in
cli
imul
ret
outs
lods
xor
sbb
fistp
or
sti
lock
es
add
pop
jl
ret
lods
pop
mov
mov
mov
frstor
adc
mov
mov
shl
ds
fwait
sbb
lahf
icebp
dec
mov
and
inc
sub
cmps
ja
xor
pop
cmp
push
inc
dec
mov
or
scas
push
outs
ror
mov
mov
ret
adc
movs
aad
test
mov
push
js
mov
push
mov
out
fbld
sbb
sub
jle
ret
(bad)
mov
inc
sub
mov
jp
and
xchg
or
xchg
add
mov
cmps
cmp
outs
leavew
clc
xchg
fld
(bad)
in
(bad)
hlt
loop
add
xchg
mov
mov
lods
or
dec
in
idiv
add
out
mov
mov
aad
dec
pop
loope
or
or
xchg
(bad)
dec
pop
cmp
jbe
mov
add
fcmovbe
jl
or
cli
hlt
sub
jmp
movs
cmp
ja
popf
ret
pusha
mov
add
(bad)
in
nop
sbb
sbb
std
or
jne
sbb
ror
call
cmp
dec
and
out
inc
frstor
pop
sti
nop
sbb
jecxz
hlt
inc
std
and
imul
mov
jmp
dec
sqrtps
jno
xchg
loope
fs
movs
ins
ja
neg
fsub
cmps
movs
pushf
retf
fild
dec
es
ds
shl
in
xchg
sbb
xchg
pop
sbb
cmp
scas
pop
sbb
not
push
adc
enter
cs
call
add
push
cmp
cmp
jo
jg
dec
mov
aam
mov
outs
std
and
mov
adc
(bad)
and
setp
jae
nop
push
rol
sbb
retf
adc
xchg
inc
fstp
hlt
adc
leave
jne
jle
sbb
retf
jge
xchg
hlt
or
jne
cmps
aam
aaa
dec
(bad)
ss
popa
leave
popf
cmps
push
test
adc
or
jns
mov
jmp
lods
mov
jecxz
inc
shl
(bad)
add
popa
data16
or
mov
push
mov
jle
add
dec
lahf
add
add
dec
pop
pop
pop
clc
cmc
jne
(bad)
(bad)
int3
mov
mov
sbb
xchg
jl
in
jo
inc
aad
pop
and
adc
arpl
push
sub
cmps
imul
dec
pop
inc
and
push
adc
leave
test
in
mov
mov
jb
pop
out
imul
jmp
std
and
xchg
out
xor
pushf
inc
sar
ret
fcomp
cwde
add
sub
mov
xchg
pop
add
mov
jmp
ficomp
mov
pop
lahf
cmps
mov
loop
sub
fwait
dec
out
adc
jecxz
repz
sub
pop
mov
xchg
int3
ins
add
inc
sbb
inc
and
dec
fwait
dec
ja
mov
fscale
sub
ret
adc
test
jo
fadd
inc
mov
mov
js
dec
std
xchg
test
into
push
push
jecxz
jnp
pop
pop
and
ds
sbb
cmp
mov
adc
dec
xor
sbb
fsubr
popf
int
push
cmp
adc
xor
inc
mov
mov
inc
ret
jno
push
xchg
jp
sub
scas
cmps
inc
popa
lahf
cmp
jne
cmps
psllw
or
outs
iret
aad
adc
push
lahf
pop
jns
aas
or
pushf
mov
or
loopne
pop
lods
test
loop
mov
fidiv
or
jno
in
jp
ret
push
mov
jg
scas
xor
jge
jo
mov
and
push
cmc
int3
inc
mov
leave
pop
add
jns
xchg
jle
mov
ins
iret
pop
fbld
data16
std
xor
cmp
ins
mul
es
repnz
mov
repnz
iret
adc
or
jnp
sti
adc
cmp
mov
out
arpl
shr
enter
ret
aad
ret
int3
pop
in
dec
push
std
pop
and
xor
(bad)
icebp
outs
fisttp
les
push
in
sar
or
fild
addr16
scas
pop
test
test
mov
cld
mov
aad
nop
mov
cs
cmp
jmp
jmp
jmp
inc
inc
inc
fmul
add
setne
movs
bound
xor
sub
cmp
cwde
cmp
shr
jns
retf
mov
std
xchg
imul
inc
inc
push
push
cmps
ins
dec
repz
sbb
and
fwait
arpl
sub
ins
inc
xchg
cld
push
and
dec
test
mov
jnp
loope
retf
popf
mov
test
scas
push
mov
ror
mov
loopne
dec
sub
dec
les
push
loope
push
and
sar
and
push
mov
cs
(bad)
sub
pop
inc
mov
loope
es
jne
mov
pop
movs
mov
mov
mov
ret
ret
pop
loopne
lock
sub
adc
(bad)
test
repnz
bound
sti
mov
fucomi
and
or
icebp
sbb
xlat
inc
test
xchg
pusha
aad
mov
dec
pop
movs
sbb
jo
or
xor
add
out
aas
std
jns
push
or
jg
ja
cwde
jne
cmps
mov
push
mov
sub
mov
push
xor
xchg
jmp
repz
sub
cld
inc
adc
(bad)
into
cmc
xchg
mov
cmps
or
(bad)
call
hlt
add
jbe
dec
jmp
adc
cli
xlat
imul
add
enter
push
jle
inc
iret
repnz
repz
mov
xchg
inc
pusha
pop
scas
push
adc
outs
cmp
pop
push
dec
shr
inc
adc
out
test
xchg
aam
daa
ja
xor
pop
loope
inc
fimul
mov
mov
add
xchg
loope
(bad)
js
dec
sbb
mov
and
mov
fstp
imul
hlt
das
mov
mov
pushf
shl
jmp
sub
pop
outs
test
jge
jmp
loopne
popa
jmp
mov
xchg
repnz
inc
shl
std
dec
rcl
test
sbb
cmp
cmps
jl
sbb
fst
cld
jnp
les
pop
cmp
xchg
and
test
push
cmc
sbb
push
cmps
shl
fidivr
adc
scas
or
xor
sbb
adc
lahf
mov
ret
pop
movs
pusha
scas
sub
mov
sub
xchg
sub
and
rcl
je
jp
jg
add
mov
jbe
jmp
fwait
aaa
xchg
pop
and
jge
sbb
cld
mov
mov
les
dec
movs
sub
and
shr
xchg
mov
nop
outs
rcr
int3
int
leave
sub
pop
mov
or
cmp
and
mov
inc
(bad)
jb
xor
scas
(bad)
mov
add
sar
mov
cmp
test
aas
mov
jb
stc
ins
stos
mov
or
or
or
pop
jp
mov
loopne
jns
mov
inc
cli
es
adc
scas
fdivrp
cmp
inc
das
cmc
ins
sti
cmp
stc
jp
mov
xchg
addr16
shl
cmc
enter
outs
or
fbstp
jmp
mov
cwde
lea
loop
dec
rol
outs
add
push
cmp
inc
jae
add
and
adc
sub
(bad)
std
gs
mov
sub
jge
or
aam
repz
dec
xchg
(bad)
adc
or
popf
lea
(bad)
(bad)
rcr
outs
nop
in
ret
cmp
add
movs
cmps
ins
mov
jecxz
add
enter
add
mov
pop
imul
mov
ja
and
scas
sub
adc
fs
xchg
fimul
test
jmp
cmp
pushf
popf
pop
jge
ds
sub
mov
push
fwait
mov
mov
cmp
cdq
cmp
push
push
inc
in
gs
(bad)
gs
inc
xchg
dec
xor
xchg
sbb
cmp
inc
in
or
das
push
adc
xor
fcom
xor
mov
and
ror
sub
call
dec
and
and
clc
sub
mov
mov
inc
cli
pop
aaa
fisttp
fisubr
aad
cli
or
lods
shl
push
jl
lods
inc
enter
mov
call
in
shl
ss
sbb
adc
imul
std
ins
pop
mov
mov
jns
dec
pop
ret
(bad)
inc
xchg
xor
mov
popf
inc
add
cdq
pop
push
pop
leave
loop
and
out
jge
fcom
sbb
call
mov
out
cmp
and
imul
mov
dec
push
idiv
(bad)
mov
iret
adc
or
push
push
mov
add
aam
rcr
push
fisub
or
ror
cmps
sbb
push
iret
mov
cmp
pop
adc
sub
xchg
add
stos
loope
outs
push
(bad)
jns
hlt
cmp
pop
xor
hlt
dec
ins
imul
dec
rcl
cmc
out
adc
inc
jne
mov
call
sbb
jecxz
sbb
push
push
pop
push
dec
dec
cs
iret
and
aas
cmps
push
inc
ins
mov
mul
inc
mov
jbe
add
shl
mov
sub
imul
pop
jmp
sbb
rol
sbb
fist
jge
jno
or
dec
add
inc
loopne
arpl
xchg
data16
pop
stc
test
fadd
mov
pop
dec
fucomp
sti
adc
pop
in
xchg
not
jmp
enter
jae
in
ja
pop
mov
call
xchg
jnp
test
xor
xor
ds
sub
jge
mov
dec
jg
pop
jns
je
add
je
std
mov
inc
dec
jbe
loopne
stc
mov
sub
push
in
and
les
ret
out
mov
mov
clc
mov
mov
ss
dec
xor
cmp
test
inc
dec
loope
fwait
loopne
add
push
cmp
xchg
pop
sub
jnp
adc
pop
sbb
jp
push
mov
(bad)
xor
les
push
shl
mov
sub
pop
adc
sti
bnd
repz
and
push
pop
inc
add
fldenv
out
pop
aad
cmp
pop
and
xor
jecxz
mov
dec
popa
dec
inc
dec
jnp
cmps
dec
xchg
xchg
jg
and
or
jle
call
push
push
out
add
and
and
cli
jmp
daa
cmp
gs
xor
mov
dec
int
adc
dec
(bad)
jmp
inc
sbb
push
jecxz
xor
aad
into
push
aas
push
sbb
lods
cdq
sub
ret
mov
sahf
scas
dec
add
inc
mov
and
jo
outs
mov
ss
addr16
dec
push
cli
pop
jns
dec
mov
stos
push
shl
imul
jle
imul
push
inc
or
(bad)
addr16
repz
lods
ret
fnstenv
shl
(bad)
xchg
addr16
std
pop
or
imul
fld
lahf
clc
mov
daa
sub
dec
jecxz
fdiv
add
shl
das
xchg
les
and
test
pop
dec
add
sub
loope
retf
xor
lahf
mov
sahf
test
je
mov
ins
movs
jl
add
and
pop
sub
and
test
mov
shl
xchg
jl
adc
daa
dec
std
(bad)
cmc
pop
inc
add
(bad)
cmps
sub
outs
add
inc
enter
xchg
pushf
sub
shl
(bad)
dec
push
sar
cmp
pop
adc
and
or
mov
sbb
and
outs
call
dec
mov
ss
inc
xchg
out
jmp
out
adc
jge
dec
lods
out
icebp
bound
(bad)
dec
dec
in
cld
cmp
xor
mov
xchg
aaa
test
xor
sub
sub
stos
adc
sbb
ds
cmps
shl
mov
cmp
pop
xor
cmp
inc
stc
inc
xor
push
dec
popf
fisubr
or
not
pusha
js
icebp
stos
xchg
sbb
out
vmptrld
cmp
(bad)
cmps
jmp
imul
or
xor
xchg
(bad)
push
xchg
fs
and
mov
and
cmps
xchg
movs
sbb
fst
sahf
movs
test
inc
jne
add
bound
fistp
movs
fisub
jae
gs
dec
jo
dec
aas
fisub
and
or
aam
sub
mov
sar
mov
(bad)
push
aaa
movs
or
outs
or
jl
ret
bound
fst
cwde
add
test
jne
pop
jl
mov
cld
pop
fcmovbe
sbb
mov
dec
cmp
mov
(bad)
cdq
push
fcomp
cmc
cli
aad
push
leave
cs
jl
inc
cli
outs
jnp
add
(bad)
push
paddusb
ret
popf
in
gs
fsub
jmp
or
sub
repnz
or
nop
mov
(bad)
mov
jmp
mov
out
xchg
pusha
push
jg
mov
out
sbb
lods
shl
imul
push
cmps
enterw
(bad)
adc
rol
movs
jl
std
aad
ror
iret
scas
pop
push
es
lds
test
fcomp
mov
xor
jbe
data16
jb
xchg
out
push
sub
pop
jns
cwde
mov
sub
out
cdq
mov
in
sub
loopne
sub
and
add
dec
push
mov
nop
test
in
popa
push
mov
adc
les
xchg
dec
or
test
inc
jne
mov
aam
xchg
leave
mov
in
mov
and
icebp
jno
mov
loop
pop
out
xor
sbb
not
sbb
mov
es
mov
bnd
pop
dec
mov
add
inc
push
shl
outs
xor
sub
push
inc
lock
mov
mov
enter
pop
mov
pop
mov
sbb
lods
jge
int
pop
xor
push
je
or
ins
xchg
sbb
mov
xchg
repnz
mov
xchg
jl
cmp
push
jmp
mov
dec
daa
das
and
cmp
jb
xor
push
add
xchg
push
jae
(bad)
xchg
mov
jne
mov
push
push
push
sysexit
mov
(bad)
mov
jae
cmp
dec
jo
rcl
scas
lods
mov
sub
add
ret
cs
sub
adc
sub
fidiv
out
pop
out
(bad)
push
and
test
jp
aaa
mov
dec
push
(bad)
jmp
add
sub
cmp
cli
out
cmp
or
fdiv
add
pushf
xor
pop
and
and
cmp
jo
sub
add
and
(bad)
ret
outs
cmp
mov
imul
sbb
aas
add
sar
ds
iret
mov
(bad)
mov
dec
ret
xchg
icebp
out
aad
xchg
dec
adc
add
pop
and
mov
in
fist
add
shl
out
mov
sbb
mov
sar
pop
data16
pusha
dec
fcmove
adc
sbb
mov
fmul
es
retf
sbb
ds
add
add
jmp
cmps
pop
jmp
mov
dec
ror
xor
mov
test
mov
es
xchg
xor
test
cmps
cmp
stos
sbb
and
xchg
mov
xor
or
out
imul
in
retf
pop
cmc
jge
jge
or
(bad)
stos
dec
stos
aaa
sbb
inc
repnz
jnp
xbegin
push
not
xor
inc
daa
pusha
push
sbb
sub
test
add
les
mov
dec
bound
stc
push
jp
jbe
sub
daa
pop
mov
cmc
sahf
cmp
fisub
and
mov
pusha
sti
fs
pop
xor
int3
repnz
pop
data16
pop
pop
imul
sub
leave
shl
mov
arpl
mov
push
sub
movs
mov
aas
jne
test
jno
xor
and
add
out
(bad)
retf
inc
hlt
pop
data16
fidiv
cmps
cmp
call
bound
loope
je
jae
push
sub
sbb
pop
cmps
dec
xchg
or
(bad)
fsub
jne
add
mov
leave
mov
lds
push
pop
and
adc
xchg
xor
(bad)
jmp
and
icebp
aad
and
mov
cmp
enter
jg
scas
shr
(bad)
(bad)
vmovhps
ret
cmp
into
xor
jmp
repz
mov
jno
in
inc
sbb
push
dec
ds
or
mov
fisubr
lods
cs
or
pop
(bad)
int
inc
pop
xor
dec
pop
lods
xchg
adc
pop
je
out
and
xchg
mov
movs
int3
jno
inc
dec
ficomp
push
cld
leave
out
cwde
(bad)
mov
fwait
inc
dec
rcl
pop
hlt
jl
int3
and
loopne
dec
mov
push
xchg
les
loop
fiadd
sub
data16
icebp
repz
or
(bad)
dec
in
mov
popf
jb
xor
push
pop
sti
cmps
mov
inc
add
scas
int
push
or
push
out
neg
fistp
add
into
xchg
mov
jmp
sbb
test
pop
xlat
pop
or
cmp
cld
sbb
sahf
jb
clc
(bad)
and
inc
add
dec
test
ret
in
push
in
jle
ja
inc
aad
jge
jle
fs
mov
sub
call
xchg
loop
sbb
push
dec
jb
(bad)
stos
cmp
pop
loope
test
int3
cmp
nop
aas
cmp
lock
mov
daa
les
and
and
xchg
loop
jae
lds
fild
stos
or
cdq
inc
cmps
in
fidivr
pop
out
out
ja
adc
into
or
xchg
sbb
adc
add
retf
jb
inc
mov
xchg
jae
mov
loopne
setne
rcl
add
test
mov
or
rol
jns
out
cmp
dec
jecxz
sub
(bad)
shl
mov
pop
push
xchg
xor
loop
push
jl
scas
cmp
hlt
lea
mov
in
xor
jle
mov
jecxz
pop
ins
sbb
mov
push
fst
and
lods
push
push
add
mov
jmp
mov
sbb
mov
sbb
xor
xor
pushf
push
xor
fst
push
enter
imul
scas
cld
mov
pop
jb
sar
addr16
lds
iret
cwde
lock
sbb
repnz
fcomp
dec
jg
sbb
cmp
jg
lahf
data16
dec
outs
push
sbb
mov
push
dec
test
das
sbb
jnp
mov
aaa
pushf
out
pushf
fs
mov
ja
xor
cmps
xchg
xchg
rol
and
in
push
push
retf
mov
lea
addr16
dec
push
div
sub
out
mov
adc
inc
inc
xor
dec
bound
pushf
(bad)
ds
icebp
iret
es
addr16
mov
xor
jmp
sahf
enter
push
inc
pop
jmp
fild
dec
pop
call
imul
pop
cmps
adc
and
mov
jp
pop
call
ins
int3
pop
fistp
enter
(bad)
(bad)
lock
push
push
int
mov
push
mov
xor
stos
hlt
aam
mov
and
mov
(bad)
xchg
pusha
in
scas
xlat
stc
pop
cmp
movs
pop
adc
test
cmp
cdq
or
jp
pop
jno
xchg
jb
retf
pop
dec
xchg
test
js
mov
ins
into
sub
imul
ja
inc
inc
push
call
repz
std
xchg
cs
loope
pop
adc
dec
sbb
jl
push
adc
daa
popf
jle
and
loope
mov
rcr
and
sub
and
es
adc
sbb
mov
push
inc
outs
arpl
jb
push
test
in
loop
nop
jno
xor
aaa
push
mov
xor
aam
sub
js
pop
movs
test
sub
mov
mov
ins
shl
dec
sub
lock
jecxz
jle
pop
sbb
lahf
or
out
jb
and
mul
lahf
xor
imul
call
push
movs
call
and
fcom
or
loope
cmp
jmp
pop
add
std
xchg
dec
outs
repz
cmp
jl
fcomp
mov
stos
adc
test
push
adc
xchg
and
pop
push
push
imul
aad
adc
mov
cmp
add
rcr
scas
scas
arpl
popf
adc
out
xchg
mov
mov
jmp
adc
retf
and
and
jne
test
mov
leave
push
inc
int
adc
mov
mov
xor
sahf
dec
sbb
inc
xchg
jge
cmp
jmp
inc
cmp
aad
fsub
mov
scas
cmps
inc
sub
das
push
sub
mov
test
fwait
imul
out
jge
push
jmp
arpl
daa
sbb
jmp
sub
stc
push
mov
and
or
adc
aas
popa
inc
dec
mov
cmp
adc
out
adc
in
shl
add
fbld
push
sub
xor
mov
jecxz
ss
adc
loopne
retf
(bad)
int3
or
imul
push
sahf
inc
or
and
test
jne
mov
push
pop
ret
(bad)
hlt
inc
push
sbb
fcom
neg
pop
dec
imul
pop
push
cmps
popf
(bad)
lock
out
pop
mov
bound
test
addr16
lods
or
fdiv
addr16
or
or
push
popa
fs
mov
sti
xchg
daa
cmc
loope
xor
jl
adc
sti
mov
mov
idiv
loope
jno
mov
xor
mov
pop
adc
sub
push
imul
fs
addr16
test
xor
pushf
or
add
dec
jmp
cld
or
or
ins
push
jae
inc
cmp
and
(bad)
sbb
(bad)
jmp
(bad)
jmp
xchg
jnp
movs
cdq
inc
leave
sti
arpl
and
idiv
xor
cmp
xor
pop
xchg
push
xchg
pop
pop
xor
mov
adc
pop
cld
xor
sti
jae
int
xchg
mov
dec
mov
mov
sahf
pop
and
xor
fsubrp
or
test
xchg
mov
inc
cmps
dec
xor
(bad)
xchg
mov
xchg
ror
mov
push
mov
aam
mov
movs
ins
loop
mov
loop
ficomp
popa
mov
test
and
inc
sbb
and
xor
mov
mov
fdiv
dec
retf
test
adc
mov
pop
fwait
cwde
jb
sbb
leave
mov
dec
adc
mov
xor
rcr
jbe
dec
rep
fsincos
icebp
mov
xchg
je
xlat
in
inc
sub
mov
xchg
xchg
pushf
xor
or
lods
stos
cmp
nop
jb
mov
sub
push
dec
movs
xchg
outs
call
add
leave
call
jg
nop
sbb
push
mov
icebp
popa
sbb
mov
sub
ds
mov
inc
jle
xor
add
movs
or
clc
xchg
or
xor
movs
jb
jmp
pop
pop
cwde
nop
pop
or
mov
test
icebp
xor
loopne
sbb
outs
hlt
jle
xor
mul
and
xchg
add
ja
popf
sbb
add
inc
mov
fisttp
cmc
je
sub
femms
jbe
add
outs
sub
mov
and
ins
adc
pusha
sbb
xchg
xchg
(bad)
xlat
fisub
mov
mov
fdiv
pop
data16
sahf
(bad)
jmp
xchg
call
mov
in
fst
xor
adc
imul
sbb
add
aaa
inc
lods
inc
fstp
test
push
add
lock
adc
outs
daa
adc
jp
jns
int3
and
pop
push
les
imul
adc
add
fild
push
aam
jle
pop
jmp
lock
daa
sub
pop
jns
movs
dec
inc
imul
push
sbb
loope
fbld
dec
sbb
les
add
retf
jmp
aaa
push
jecxz
jo
lahf
dec
push
push
dec
mov
pop
dec
sbb
daa
(bad)
mov
das
test
pop
xchg
(bad)
mov
mov
bound
hlt
je
pop
xchg
adc
pop
ins
push
int3
outs
aad
push
cld
jecxz
adc
or
sub
cld
aad
dec
sbb
(bad)
jbe
sbb
pop
ret
in
in
xchg
or
adc
(bad)
fidiv
xlat
or
gs
call
out
sub
or
add
test
or
imul
jns
out
xchg
stc
iret
pop
xchg
mov
and
or
dec
push
movs
pop
in
cmp
push
retf
mov
outs
push
sub
lods
dec
mov
cmp
in
cs
das
sbb
push
push
sub
(bad)
xor
clc
mov
ucomiss
sub
cli
sahf
add
and
cmp
in
adc
in
mov
mov
jg
into
scas
mov
sbb
mov
fcomp
retf
stos
outs
mov
les
and
sbb
xor
sti
bound
rcl
and
call
call
test
(bad)
scas
mov
data16
add
xor
jl
lods
jmp
inc
or
cmps
loop
dec
(bad)
out
(bad)
xchg
scas
or
fwait
mov
stc
retf
es
jp
mov
xchg
mov
xor
xor
int3
and
sub
sub
adc
test
ss
test
int
addr16
fnstenv
add
repz
aad
or
scas
add
or
dec
sub
data16
iret
ins
fs
inc
mov
and
push
jnp
xor
jle
push
jmp
sbb
ret
push
movntq
adc
hlt
stc
loop
ins
aad
mov
(bad)
jle
out
xor
pop
or
imul
lods
fnsave
add
call
leave
iret
dec
mov
icebp
sti
jl
xchg
pop
adc
in
adc
or
xchg
sub
test
fmul
adc
or
es
in
test
ins
sub
sbb
jecxz
popf
jns
call
loop
(bad)
int
xchg
repz
ss
cld
push
loop
sub
inc
leave
push
mov
xchg
cmp
ret
jb
xchg
pop
dec
cmc
inc
retf
clc
aam
in
mov
movs
mov
dec
lock
and
cdq
aas
leave
mov
gs
inc
mov
mov
in
es
jb
repz
push
or
cmps
and
cmp
jne
mov
inc
mov
mov
inc
mov
sub
dec
test
xchg
int3
(bad)
mov
pusha
(bad)
mov
jb
dec
and
jge
aam
pop
push
retf
sub
mov
inc
sahf
clc
mov
sub
rcr
(bad)
hlt
adc
jmp
push
into
pop
in
sub
cmp
pop
data16
mov
jge
mov
pop
mov
enter
pop
retf
(bad)
in
pop
xor
add
push
dec
mov
int
loopne
sbb
add
xor
mov
add
clc
and
xor
mov
xchg
clc
mov
jecxz
test
mov
bound
into
out
imul
sbb
out
xchg
fsub
sub
movs
push
pop
dec
xchg
fstp
mov
dec
mov
sub
and
in
retf
add
xchg
rcl
sti
sahf
sub
adc
adc
rdpmc
xor
gs
xlat
(bad)
(bad)
jns
loopne
out
es
push
fwait
iret
and
icebp
fist
call
cld
dec
push
movs
lea
mov
push
add
test
into
xchg
and
mov
mov
aaa
retf
inc
(bad)
xor
(bad)
rcl
and
sbb
jecxz
cmp
fdivrp
or
xor
sub
or
xlat
icebp
jmp
(bad)
stc
or
jns
cwde
outs
leave
mov
mov
ss
(bad)
jp
sub
sub
(bad)
or
jecxz
push
loopne
mov
adc
add
cmps
rol
mov
adc
jmp
es
jecxz
adc
std
enter
sbb
(bad)
imul
adc
push
sub
ins
jge
mov
loopne
adc
lock
pushf
sbb
inc
retf
sub
mov
retf
sbb
or
mov
fisub
loopne
xor
(bad)
sub
inc
cmps
lods
add
and
jnp
sub
aam
inc
in
int3
aad
fbld
mov
mov
pop
and
jne
mov
outs
out
fiadd
js
mov
cwde
(bad)
dec
push
inc
xor
test
push
enter
jg
das
std
sub
inc
add
jg
pop
sbb
test
retf
je
mov
xor
fwait
push
mov
icebp
dec
jb
mov
adc
leave
add
in
mov
mov
adc
in
and
mov
pop
aas
iret
aad
icebp
arpl
cmp
mov
(bad)
in
jbe
push
jp
loopne
ret
lds
mov
movs
inc
push
push
inc
fnsave
popf
(bad)
std
(bad)
cli
inc
out
xchg
push
cmps
adc
popf
int
mov
loop
pop
in
ja
fwait
push
loopne
icebp
test
jb
jnp
pop
mov
lods
xchg
sbb
sub
or
mov
adc
stc
arpl
dec
int3
es
push
pop
mov
(bad)
jle
and
idiv
dec
mov
cmp
test
outs
call
test
add
sub
sub
ja
jmp
loope
in
xor
xor
bound
enter
outs
in
test
mov
cdq
icebp
cdq
sbb
pushf
mov
pop
xchg
ror
sbb
int3
call
jg
xchg
test
(bad)
in
and
pop
pop
xchg
dec
sbb
sbb
push
call
lea
adc
jns
pop
(bad)
aam
xlat
das
scas
sbb
cmp
pop
(bad)
in
(bad)
ins
ja
mov
xchg
icebp
sbb
cs
icebp
add
sbb
mov
jbe
pop
lock
xchg
or
fwait
fwait
jp
jne
dec
xchg
or
jo
mov
mov
(bad)
sub
popa
in
xchg
sbb
and
out
in
add
mov
stos
adc
(bad)
cmp
imul
push
xchg
adc
mov
or
push
cmp
movs
sbb
dec
add
pcmpeqd
push
xchg
cmp
jae
cdq
and
pop
lds
das
jne
lock
xchg
cs
xchg
sub
dec
pop
lock
ja
pop
push
into
scas
adc
lea
mov
mov
xor
mov
sub
and
out
cmp
cmp
xor
or
jl
pop
or
xor
add
adc
sbb
outs
mov
and
push
nop
out
repnz
les
mov
ret
xchg
movs
inc
xchg
ret
jmp
out
dec
repz
les
sbb
test
adc
cld
fs
arpl
jmp
mov
pop
stos
mov
jo
out
icebp
cwde
jge
dec
repz
ror
inc
sub
stos
mov
mov
jl
cmp
xchg
inc
fild
out
shr
adc
fsubr
jns
xchg
jo
test
je
arpl
push
sti
gs
or
ret
sbb
(bad)
addr16
mov
inc
sar
test
clc
call
fchs
pop
inc
jmp
mov
test
mov
xchg
jns
pushf
repz
leave
or
jmp
jg
cwde
push
in
ffree
popf
lods
and
dec
daa
ror
scas
sub
add
jle
or
das
sub
scas
(bad)
xor
mov
scas
and
imul
mov
fdivr
pop
daa
dec
stc
cdq
adc
push
fnstsw
daa
pop
(bad)
push
(bad)
sbb
test
pop
dec
add
inc
jne
mov
push
mov
xchg
mov
add
test
add
xchg
sbb
xchg
dec
xor
push
in
imul
jmp
and
jmp
(bad)
int3
jp
lock
adc
push
mov
xchg
xchg
int
jae
aaa
mov
outs
mov
lock
nop
stos
pusha
imul
add
(bad)
sub
mov
inc
push
pop
push
xor
xor
fsubr
jg
dec
dec
add
or
popa
outs
jmp
movs
test
sti
jmp
ror
pop
test
lods
iret
jne
sub
xor
dec
push
add
or
aad
pop
jo
fldenv
jecxz
push
cmp
mov
cmp
sbb
mov
jns
and
or
test
repnz
jne
xchg
dec
dec
pop
icebp
rcr
inc
gs
jmp
jecxz
icebp
ins
dec
jae
repz
(bad)
or
mov
mov
call
mov
mov
fadd
adc
pop
mov
inc
adc
pusha
in
retf
std
repz
mov
mov
clc
inc
xchg
jecxz
jmp
jbe
dec
push
cli
cmp
xchg
scas
push
push
mov
in
je
and
push
adc
ins
int3
shl
or
pop
daa
out
mov
adc
and
mov
sbb
repz
xchg
aam
jnp
xor
js
mov
data16
fs
cmps
xchg
popa
mov
xchg
mov
test
ja
retf
inc
and
sti
push
xchg
pop
scas
lods
xor
push
add
xchg
or
(bad)
jne
jg
call
fnstsw
push
push
enter
fs
ds
push
jmp
jbe
icebp
jecxz
push
xor
div
cwde
das
lahf
aam
pop
ds
lea
jge
and
fwait
gs
clc
not
(bad)
jg
call
gs
sbb
loope
pop
enter
sbb
(bad)
shld
push
pop
xchg
sbb
xchg
and
repnz
(bad)
out
xchg
daa
cmp
pop
pop
shl
jno
lods
call
cs
jnp
cli
and
xchg
shl
(bad)
out
jnp
dec
inc
jecxz
out
out
mov
clc
outs
mov
xor
int
fdiv
sbb
(bad)
sbb
mov
adc
cs
shr
xlat
call
xchg
mov
cmp
fst
pop
sbb
or
adc
jecxz
cmc
shr
ds
ins
lea
popf
mov
mov
xchg
mov
cmp
(bad)
aam
gs
out
out
adc
jmp
retf
jp
pushf
(bad)
push
popf
mov
sahf
leave
dec
mov
(bad)
mov
in
mov
and
call
fs
adc
fnstsw
xor
scas
mov
pop
fstp
test
mov
push
sbb
cmps
scas
and
mov
aam
pop
inc
push
retf
sbb
xchg
loop
leave
movs
mov
(bad)
call
sbb
lods
retf
inc
pop
mov
mov
push
in
retf
in
or
cmps
mov
dec
inc
rol
add
pop
xchg
out
fs
ds
pop
not
adc
and
add
sbb
add
loop
fidivr
ds
xchg
loop
cmps
rcl
inc
add
rol
dec
outs
cmp
push
in
and
mov
cvttps2pi
xchg
in
ret
sbb
(bad)
(bad)
sbb
push
lods
lea
je
dec
loopne
add
xchg
call
ja
dec
pop
test
shl
(bad)
pop
push
add
les
add
(bad)
xor
imul
cmp
push
mov
push
lock
sti
int
ret
cmp
mov
aam
jnp
out
push
bound
sub
xchg
retf
sub
push
sub
fnstsw
add
xor
lock
or
add
not
add
sar
movs
jge
pop
je
sub
nop
aad
mov
(bad)
in
sbb
add
or
lods
push
sbb
push
jecxz
fild
(bad)
push
sbb
loopne
movntq
mov
scas
jae
int3
push
push
fs
pop
stos
imul
leave
dec
(bad)
jbe
inc
call
outs
fs
retf
and
adc
adc
aam
dec
adc
js
mov
aaa
jbe
adc
fbstp
mov
cmp
jg
jge
or
int3
iret
repnz
retf
push
leave
xchg
movs
inc
sar
xchg
cmp
shl
mov
cmc
xchg
xor
add
ds
cmc
sub
add
pushf
mov
sbb
lods
and
push
sub
push
mov
out
jmp
addr16
cld
fwait
xor
fdivrp
mov
mov
mov
mov
call
inc
pushf
mov
cmps
(bad)
fisub
mov
lahf
adc
pop
test
add
pop
mov
push
es
imul
lods
adc
sbb
sbb
xchg
stos
ds
xchg
or
sbb
sbb
jg
fwait
nop
fwait
int3
jnp
rcr
call
std
mov
mov
imul
imul
dec
sbb
pop
rol
inc
add
mov
sub
fdivp
push
test
outs
cwde
movs
xor
fild
push
pop
loop
cmp
gs
sbb
jnp
mov
adc
pop
pusha
jae
mov
fwait
add
int3
pop
or
jmp
cs
mov
xor
push
ds
and
dec
std
dec
pop
inc
leave
and
sub
rcr
mov
sti
jnp
sbb
inc
cmc
aad
jbe
and
xor
test
ins
mov
aad
cmps
fstp
sub
les
icebp
jo
mov
sub
in
movs
pop
loop
fs
cmc
fs
and
and
pop
cmp
adc
shl
xor
jno
nop
mov
add
inc
dec
imul
repnz
push
fwait
xor
inc
cmp
cmp
leave
mov
movs
jge
pop
push
jp
pop
retf
dec
push
rcl
(bad)
push
lea
gs
mov
mov
xor
jbe
ins
dec
(bad)
in
add
fild
jne
clc
pop
pop
cli
pop
enter
inc
leave
ds
daa
mov
out
leave
stc
mov
push
(bad)
cmp
xor
shr
call
adc
test
scas
dec
sbb
ja
pushf
cmc
fiadd
push
push
mov
xchg
cmps
xchg
enter
popf
inc
ret
out
mov
sub
cmp
mov
sub
std
xor
or
sar
imul
pop
dec
xchg
js
pop
dec
inc
gs
push
fdivr
and
mov
sbb
(bad)
adc
lea
movs
add
push
loop
jl
sub
pop
mov
lods
xor
adc
inc
aam
lahf
mov
jnp
cmc
and
imul
repnz
gs
sti
cmp
inc
push
ja
ds
push
cmp
adc
sbb
push
mov
and
mov
mov
mov
test
test
cdq
sub
ins
add
xor
retf
jae
xor
add
push
push
int3
loope
(bad)
pop
push
iret
dec
sub
stc
in
into
int
ret
mov
push
fst
test
dec
sar
test
outs
sar
or
aas
mov
pop
dec
jns
retf
xor
sbb
icebp
xchg
leave
aaa
adc
mov
das
fimul
ficomp
aas
sbb
retf
inc
nop
scas
pop
(bad)
ficom
jl
aam
mov
adc
push
(bad)
in
pop
aad
in
in
stc
xor
inc
pop
les
fdiv
pop
bound
popa
xchg
repnz
pop
fidivr
lds
inc
jns
and
xchg
mov
cmps
pop
ret
shl
mov
stos
ret
cmp
mov
inc
cwde
ins
xchg
adc
xchg
push
outs
dec
cmc
xchg
retf
(bad)
mov
mov
adc
adc
mov
cmp
fst
xor
inc
push
test
push
popf
mov
mov
pop
cld
mov
inc
fistp
rol
fs
into
jmp
xor
loope
jmp
xlat
(bad)
fsub
mov
lds
retf
adc
clc
mov
cmc
mov
add
cld
sub
push
pop
repz
push
inc
dec
lea
repnz
or
sbb
or
ins
mov
jle
cmp
mov
dec
js
pop
fisub
cmps
adc
push
inc
mov
outs
mov
stos
cwde
mov
sbb
fxch
inc
pop
scas
test
inc
nop
das
rcl
pusha
aaa
les
out
and
inc
jge
xchg
aam
test
sbb
aad
inc
lahf
outs
cwde
adc
xor
sbb
lds
mov
mov
push
push
xor
push
mov
sub
es
sub
fmul
pop
(bad)
daa
inc
ins
xor
xlat
out
dec
(bad)
jle
stos
fsubr
mov
mov
mov
pop
(bad)
ins
sbb
fld
cmp
mov
jmp
adc
dec
mov
mov
outs
dec
xor
sbb
lock
inc
adc
cld
fbstp
cwde
dec
pop
and
mov
adc
pop
iret
add
mov
xlat
stos
sbb
mov
and
and
adc
dec
iret
popa
adc
xchg
out
dec
in
movs
outs
enter
rcpps
sub
or
mov
inc
stos
(bad)
mov
mov
int
dec
cmc
mov
ins
ret
cmp
xor
cmp
mov
jbe
ins
outs
xor
(bad)
pop
pop
out
push
jno
mov
mov
sbb
inc
xchg
fidivr
push
stos
adc
bswap
mov
popa
ror
sub
loope
push
jo
rol
fwait
loope
inc
fild
into
xor
jbe
pop
cli
mov
xchg
xor
stos
lods
lahf
nop
stc
cmp
jo
data16
fmulp
ret
and
or
fld
cmps
sbb
mov
jne
xor
xchg
ficom
lds
push
cmp
cmp
jl
jo
les
adc
loope
pusha
sbb
mov
mov
fsubr
out
mov
xor
cmps
push
repz
(bad)
push
inc
out
stos
fcmovnbe
push
jl
(bad)
xor
stos
pop
loopne
and
aaa
jb
pop
xchg
or
inc
aas
add
pop
pop
dec
clc
call
adc
mov
push
pop
daa
jmp
xchg
mov
push
push
stos
nop
in
sub
inc
or
shl
sub
in
mov
push
mov
add
cmp
(bad)
repz
push
mov
add
retf
or
div
sub
ins
not
fdiv
and
test
push
mov
adc
mov
icebp
out
or
sub
cwde
pushf
retf
mov
in
js
xchg
call
adc
icebp
js
sub
mov
cmp
js
repz
fwait
adc
fisttp
in
xchg
mov
aad
cmp
bound
jge
xor
fwait
pop
popa
cmc
pop
mov
test
sti
fistp
push
adc
dec
inc
cs
jbe
xor
cmp
mov
test
jbe
mov
jmp
adc
fcomip
adc
cwde
outs
sti
call
push
push
fdivr
xor
pushf
cdq
sub
adc
mov
int
push
daa
mov
das
fdiv
(bad)
outs
fs
jns
ins
or
adc
xor
pop
sub
or
sti
int3
mov
pop
xor
inc
sub
lock
sti
sbb
mov
jnp
mov
cmp
into
ins
into
jne
xchg
jl
xchg
xchg
fsubp
push
fwait
in
rcl
test
xor
and
cmp
gs
dec
jp
mov
sbb
mov
mov
cmp
xchg
adc
dec
sub
jl
imul
enter
movs
cli
pop
mov
sbb
popf
stos
cmp
dec
pop
jmp
xor
fimul
add
xchg
(bad)
ss
add
pop
push
jecxz
pusha
not
jmp
add
jecxz
push
cmp
and
cmps
(bad)
lock
test
fisttp
das
call
add
mov
mov
dec
inc
mov
in
in
stc
jb
mov
out
xchg
jmp
mov
loop
dec
dec
mov
imul
push
inc
ret
gs
enter
sub
data16
pop
inc
adc
cmp
push
adc
outs
mov
mov
aam
or
push
ret
ins
pop
xchg
push
mov
sub
add
out
dec
inc
out
add
sub
push
scas
arpl
mov
dec
movs
jge
pop
or
xor
das
stos
int
enter
dec
mov
push
shr
rol
fucomp
jmp
mov
pop
in
call
int3
or
sahf
sbb
loope
dec
mov
inc
pop
psubb
inc
sub
arpl
aam
xlat
jmp
out
loopne
mov
fist
scas
hlt
pop
popa
retf
in
stos
mov
(bad)
cwde
out
jnp
test
cmp
out
(bad)
xchg
test
push
sub
clc
std
mov
aas
outs
dec
adc
movs
cli
adc
loop
leave
leave
cmp
repz
stc
cwde
data16
in
icebp
jnp
icebp
jg
(bad)
cmps
ins
push
fwait
mov
push
xor
bnd
js
mov
out
dec
xchg
push
pop
rol
in
mov
push
jl
xchg
sbb
mov
sub
sbb
aad
sub
jns
pop
imul
pop
push
mov
and
repnz
frstor
fwait
inc
std
les
cmp
ins
push
adc
mov
pusha
js
and
or
ds
ja
jmp
not
movs
add
lahf
ror
call
inc
stos
fidivr
dec
jno
(bad)
popw
dec
mov
xchg
adc
and
pop
jne
leave
cmp
mov
mov
std
pop
jmp
loopne
cmp
mov
pop
test
add
out
call
cmp
or
inc
loope
mov
mov
mov
aad
xor
xchg
xor
inc
daa
mov
or
sub
mov
fimul
test
pop
mov
loope
loop
cmp
fs
not
inc
mov
xlat
cmp
std
cmp
add
add
inc
inc
cld
ja
push
loop
dec
push
jmp
sub
jle
rcr
mov
cli
or
aam
sbb
sub
jmp
cmps
xchg
mov
and
or
sub
dec
inc
pop
push
sub
sbb
mov
cmp
cmp
test
popf
js
add
mov
sar
ds
pusha
adc
daa
ja
ror
mov
inc
jmp
and
(bad)
push
sbb
es
cmp
mov
and
push
not
sbb
jae
mov
sub
or
mov
push
(bad)
shr
(bad)
mov
icebp
loop
pop
or
jg
ds
push
lods
adc
pop
test
jno
xor
sahf
outs
push
jmp
int3
(bad)
(bad)
mov
fwait
xchg
pop
bnd
neg
xchg
cmp
test
ins
fbstp
test
lahf
push
push
jmp
icebp
cmp
popa
mov
sub
sub
jno
pushf
loop
or
test
xor
push
scas
inc
mul
pop
mov
adc
aad
dec
bound
jp
inc
sbb
pop
dec
mov
(bad)
xor
stc
jl
mov
mov
or
int3
jecxz
sbb
repz
sub
dec
inc
push
ins
mov
xor
lea
xor
mov
les
aaa
mov
sbb
sbb
and
cmp
pop
sub
pop
pop
dec
(bad)
out
add
dec
fwait
inc
jo
outs
fimul
lods
cmp
aad
add
xor
sbb
xor
mov
jnp
add
imul
sbb
pop
mov
mov
aas
cdq
mov
scas
pop
inc
mov
push
sbb
mov
fst
popa
nop
xchg
in
enter
mov
xor
pusha
(bad)
mov
mov
or
inc
imul
popa
sti
mov
mov
(bad)
pop
fdivr
mov
add
jnp
je
mov
dec
das
mov
into
imul
xor
bound
cmps
pop
push
add
lahf
imul
ret
push
cwde
fdiv
stos
into
bound
bound
inc
nop
jecxz
jmp
xor
(bad)
mov
enter
or
jge
outs
(bad)
jmp
adc
retfw
or
add
add
xchg
sbb
(bad)
in
inc
mov
test
lock
cmp
out
push
int
adc
adc
pop
sbb
xchg
push
sbb
test
mov
fwait
add
aaa
mov
xor
jg
mov
push
or
sub
mov
std
push
fs
cmp
cdq
cwde
mov
shr
test
leave
sub
mov
mov
push
sub
mov
loopne
fnstenv
fiadd
mov
mov
je
imul
pop
adc
or
and
lock
shr
inc
rcl
push
int
fistp
bnd
pop
mov
lea
in
pop
fisub
jo
in
mov
fisubr
xor
ds
push
mov
(bad)
jp
add
or
and
scas
sub
add
sub
rol
shr
add
add
outs
mov
sub
sbb
js
mov
les
push
add
pop
stos
aaa
or
(bad)
iret
nop
jbe
add
fld
cvttps2pi
frstor
or
pop
mov
lahf
outs
xchg
push
xor
mov
xchg
dec
sbb
adc
inc
pop
jle
xchg
pop
clc
jmp
pop
sub
call
mov
div
jnp
push
in
push
out
mov
retf
add
mov
fld
xor
and
cld
fist
pop
fdivr
rol
inc
sbb
pop
cmp
push
adc
je
push
enter
dec
fs
enter
movs
lahf
loop
jg
adc
mov
mov
test
fmul
scas
or
lahf
es
or
pop
ds
enter
jecxz
or
inc
mov
fiadd
stc
pop
retf
fwait
push
lods
fdiv
inc
or
pusha
rol
(bad)
xor
or
sbb
ins
xlat
mov
xor
xor
lods
mov
loop
push
xchg
movs
xor
mov
mov
mov
mov
xchg
in
mov
aam
aaa
cmp
inc
cmp
lds
dec
in
jne
arpl
push
and
jo
mov
xor
sbb
gs
gs
sbb
jp
movs
push
call
push
xchg
adc
enter
sub
movs
data16
push
call
call
das
push
push
in
cdq
mov
fst
leave
out
call
aaa
cmp
pop
int
sub
movs
shl
pop
std
(bad)
xlat
xchg
cmps
pop
outs
out
sbb
and
push
jmp
jp
add
iret
push
jnp
and
mov
sbb
fmul
jno
(bad)
dec
push
rcr
arpl
inc
sub
fs
call
stc
cmc
ret
nop
sbb
pop
inc
mov
cmp
xor
outs
xchg
ins
push
ret
das
pop
jmp
movs
std
imul
dec
sub
fldenv
pop
and
daa
mov
inc
call
je
ror
call
out
add
push
lea
das
jnp
or
adc
jge
pop
sti
and
sub
movs
inc
xor
stos
pop
retf
sahf
jmp
aas
mov
mov
cmc
shl
jmp
inc
ja
mov
cmp
cmp
neg
sbb
sub
mov
iret
es
xor
mov
or
push
pop
mov
or
mov
call
mov
jge
cdq
mov
dec
mov
gs
fstp
sub
stos
cmc
inc
out
or
imul
mov
push
cmp
xchg
cmp
out
pop
ret
call
pop
or
not
mov
rcl
pop
mov
lock
or
lock
lock
mov
fs
hlt
popa
es
fmul
mov
mov
mov
fucomp
(bad)
xor
rcl
test
les
push
adc
mov
inc
dec
cmp
loop
outs
sub
scas
lea
dec
jg
add
xchg
mov
jp
sahf
sbb
adc
icebp
mov
push
test
push
mov
or
dec
scas
sbb
push
inc
pop
mov
mov
pop
jle
imul
and
aad
inc
popf
repnz
mul
cli
into
sbb
add
dec
(bad)
pop
(bad)
hlt
push
scas
pop
pop
movs
mov
mov
xchg
jae
fwait
mov
push
or
push
je
cmps
(bad)
fidiv
(bad)
out
sbb
inc
dec
outs
jns
cmp
sbb
sar
ins
cdq
aas
out
fistp
sub
imul
xchg
xchg
mov
push
cmc
loop
mov
das
sbb
and
cmp
(bad)
dec
sub
push
add
xchg
mov
push
pop
adc
scas
mov
xor
adc
mov
clc
xor
loop
stos
retf
dec
cmc
adc
lock
mov
leave
mov
adc
push
jne
test
xbegin
sti
pop
pop
cmp
xor
xchg
daa
call
push
xchg
fwait
stc
xchg
ds
scas
jg
cmc
jg
mov
mov
dec
enter
sub
fwait
cmps
sub
imul
jp
(bad)
mov
dec
jmp
repnz
and
imul
inc
mov
stos
scas
call
cmp
xchg
pusha
sbb
xchg
ins
imul
mov
mov
cmp
inc
jp
lds
repz
dec
stc
mov
pusha
pop
jmp
mov
popa
add
sbb
mov
shl
out
rcl
mov
add
add
push
dec
xor
ficom
mov
ret
inc
ins
pop
out
call
pop
fld
jnp
add
test
repnz
mov
loopne
jl
adc
fnstsw
sbb
adc
iret
jbe
call
inc
and
test
and
dec
sbb
push
dec
cmp
inc
retf
hlt
out
fidivr
clc
sbb
jne
shl
mov
xor
add
sbb
iret
cld
stos
mov
push
shl
push
pusha
mov
repnz
xor
dec
dec
fwait
dec
sub
pop
jns
lock
fistp
leave
ss
push
pop
cmp
popa
mov
into
xchg
add
stc
inc
lahf
lods
dec
les
xchg
call
(bad)
mov
hlt
nop
les
dec
sub
in
scas
push
nop
cmp
stc
les
call
and
ins
call
jmp
xchg
xor
cwde
dec
mov
and
mov
mov
pop
xchg
(bad)
aad
sub
cmp
cmc
shr
scas
in
into
call
shr
lds
jmp
je
popa
or
sbb
ficom
sbb
popa
add
dec
inc
ss
gs
jg
sub
leave
cs
dec
loope
scas
pusha
jb
push
dec
ficom
jp
mov
test
lods
dec
adc
ds
mov
mov
test
bound
pop
not
pop
inc
add
shl
add
inc
call
push
lahf
pop
xchg
push
not
(bad)
test
mov
ret
push
xchg
xor
xchg
dec
lds
mov
sar
xchg
add
push
repz
scas
retf
dec
jmp
or
lods
inc
dec
dec
ins
sbb
push
out
mov
add
jl
pop
sbb
gs
arpl
movs
pop
sub
ja
sbb
iret
int3
fiadd
pop
jmp
mov
dec
sub
xchg
push
cmp
sbb
xor
dec
nop
(bad)
sbb
ror
mov
aaa
es
cmps
test
cmp
adc
mov
daa
push
lock
lods
add
cmovp
mov
dec
mov
ror
xchg
imul
out
cmp
cmps
(bad)
out
in
dec
or
mov
not
xchg
ret
mov
retf
xchg
cmp
xor
test
retf
push
fisub
test
adc
iret
das
adc
(bad)
jmp
mov
aam
mov
jg
push
fsubr
test
mov
shl
or
xchg
shl
push
mov
sbb
push
pop
in
dec
xor
rcr
sbb
repz
jns
in
fcom
mov
sub
stos
sbb
adc
xlat
mov
mov
adc
xchg
enter
lds
inc
sub
mov
nop
lds
fnsave
call
mov
scas
test
pushf
cld
data16
repz
xor
mov
xor
dec
dec
sbb
mov
test
mov
jnp
jl
addr16
out
outs
xchg
pop
push
and
loop
sub
or
jmp
mov
push
dec
leave
cs
mov
xor
xor
daa
popa
mov
mov
dec
dec
gs
fdiv
mov
xchg
aaa
(bad)
into
and
movs
jno
iret
fcmovne
sar
sub
dec
leave
sub
inc
ret
jecxz
pop
mov
call
inc
sbb
mov
dec
jbe
hlt
out
sahf
jns
js
ins
jmp
and
lfs
(bad)
nop
cmp
cmc
dec
inc
pop
cwde
loopne
out
cmc
aam
jmp
popa
fnstcw
or
leave
dec
das
mov
call
fild
add
mov
jl
push
addr16
pop
and
nop
sub
mov
invd
pushf
rcl
mov
jae
arpl
xlat
dec
es
add
sar
out
ficom
push
(bad)
aas
jns
adc
call
clc
retf
pop
dec
sbb
push
(bad)
mov
fistp
inc
xchg
loop
sub
push
add
cmp
push
mov
xchg
jp
sub
(bad)
sbb
call
pop
dec
push
loopne
mov
lods
rol
cmp
xchg
cmp
add
retf
mov
pop
or
xor
cmp
mov
cdq
sbb
mov
sar
sar
mov
or
xor
outs
outs
cmps
xchg
fisubr
cmp
fdiv
and
add
fldcw
sbb
adc
cmp
jg
lods
scas
dec
pop
and
mov
push
(bad)
xchg
imul
adc
aaa
push
jp
xor
add
rcl
frstor
mov
pop
xchg
sbb
fstp
sbb
cwde
and
jo
int
xchg
imul
dec
push
xchg
inc
jl
add
mul
dec
push
cwde
pop
cdq
icebp
test
jp
push
shl
(bad)
jl
push
inc
sbb
adc
pusha
xchg
dec
outs
mov
or
inc
dec
in
js
cmp
xor
mov
cmps
pop
ja
fwait
cmp
or
mov
push
push
sti
in
jmp
mov
jp
ss
inc
scas
in
out
(bad)
popf
loopne
push
or
adc
fstp
mov
xor
mov
add
dec
sahf
adc
pop
and
ret
hlt
gs
fistp
addr16
(bad)
repnz
sbb
add
popf
in
push
inc
cmps
test
xchg
neg
mov
cmp
shl
inc
xor
dec
sub
push
rcl
inc
xchg
mov
mov
shl
ins
scas
lea
jb
pop
lea
fcomip
and
daa
mov
jg
lds
jp
mul
cmp
inc
cmp
fisttp
fcmove
popf
stc
cmps
xchg
stc
rcr
addr16
and
out
lods
mov
aaa
repnz
outs
aaa
jp
jo
ret
enter
or
inc
sub
sar
icebp
jmp
aaa
mov
mov
push
das
and
fisttp
mov
or
add
jo
xor
(bad)
div
push
lods
xor
fnstsw
cmps
ret
icebp
sbb
mov
xor
test
or
mov
cwde
mov
xchg
cmp
loope
movs
and
lock
mov
xchg
push
inc
adc
ss
jb
(bad)
cld
cmps
add
pusha
push
repz
sbb
push
scas
pop
test
and
xlat
pop
rcr
stc
jl
(bad)
mov
fisttp
cmp
sti
out
fisttp
jae
and
jae
pop
and
imul
or
cmps
cmp
mov
out
push
jb
gs
sar
outs
push
xlat
pop
jp
mov
and
jl
sub
arpl
push
pusha
and
mov
xchg
xor
push
sbb
dec
xchg
cmps
rcr
mov
pop
inc
sbb
xchg
int3
les
aad
arpl
sbb
push
bound
adc
mov
ins
test
cmp
pop
loopne
dec
or
jmp
xor
mov
xchg
push
(bad)
leave
std
and
mov
aam
jl
adc
mov
and
(bad)
cmp
jmp
das
mov
shr
fwait
mov
in
pop
fidivr
cmp
fcom
inc
mov
xchg
pop
xchg
pushf
out
adc
sbb
daa
bound
push
push
jecxz
iret
dec
dec
pop
xchg
in
hlt
aad
cli
lock
dec
push
sbb
mov
push
mov
(bad)
(bad)
add
cmp
or
imul
(bad)
jmp
add
inc
cli
gs
sbb
xchg
pop
add
and
test
in
scas
xchg
imul
push
in
mov
adc
in
sub
aaa
imul
push
inc
fsubr
pop
pop
mov
and
or
jns
xchg
sub
mov
adc
xor
mov
js
(bad)
cmp
and
test
xchg
fidivr
push
mov
stos
mov
test
adc
test
jae
push
(bad)
jne
cmp
dec
retf
lock
dec
js
les
jns
xchg
call
xchg
icebp
inc
mov
xor
(bad)
pusha
sbb
add
push
js
xor
xor
mov
cs
ret
pusha
add
ins
rcl
mov
pop
jae
mov
pop
jbe
mov
mov
fstp
(bad)
dec
(bad)
xchg
cs
test
mov
fcomp
cmp
adc
bound
mov
and
stc
sbb
fcmovnb
int
add
sub
mov
int3
adc
sahf
push
pop
test
sub
das
mov
adc
inc
repz
xchg
mov
and
in
adc
push
sbb
or
push
xor
in
mul
(bad)
cwde
daa
in
popa
jb
popf
or
fisubr
ss
push
xor
xlat
gs
outs
inc
and
scas
cmp
inc
xchg
call
xor
sbb
push
pop
shl
fwait
stc
xor
cmp
push
shr
das
mov
fidiv
inc
cs
add
pop
pop
jp
add
bound
and
inc
int
fild
jb
loopne
popa
xor
adc
jp
mov
call
ja
repz
pushf
pop
or
pop
inc
push
fcom
call
inc
xchg
fsub
fwait
inc
(bad)
iret
push
cli
sub
sub
sbb
and
adc
es
mov
sti
sbb
dec
icebp
xchg
mov
es
sbb
fldcw
add
sbb
int3
adc
push
xchg
jnp
fmul
mov
lods
shl
push
je
push
cwde
xor
arpl
scas
add
cmp
iret
xor
outs
shl
push
inc
add
retf
das
or
mov
jmp
arpl
cdq
iret
jmp
enter
ins
jmp
mov
(bad)
xor
xor
in
dec
jae
lds
and
outs
mov
and
fmul
cmp
jp
ret
call
aam
fistp
push
das
mov
mov
ficomp
mov
mov
sti
icebp
data16
and
iret
or
mov
xchg
std
or
cmp
fadd
rcr
fwait
push
cmp
push
in
lods
dec
daa
push
mov
clc
or
fist
sti
sbb
(bad)
cs
call
out
lea
lds
test
mov
pop
mov
ins
lods
das
mov
xchg
scas
enter
out
inc
pop
xlat
xchg
xchg
push
stos
adc
jecxz
inc
mov
mov
inc
hlt
or
sub
in
lods
xor
mov
and
(bad)
jmp
xor
xor
fidivr
xor
push
mov
loop
mov
push
(bad)
pusha
mov
ins
xor
gs
dec
in
adc
mov
cld
and
mov
mov
fidivr
mov
adc
jne
hlt
(bad)
les
jmp
push
in
call
lods
sbb
xchg
scas
xchg
lea
lahf
jle
clc
dec
ds
lods
or
(bad)
rol
pop
daa
dec
enter
pop
ins
std
pushw
cdq
mov
pop
push
mov
mov
shl
fcom
cmp
cmp
jnp
xchg
fwait
mov
lds
rol
repnz
jle
add
ficom
cmps
rcl
inc
mov
jb
cmp
gs
add
sbb
or
lahf
mov
outs
pop
dec
cwde
push
retf
aad
call
mov
add
or
xchg
stos
lods
(bad)
jae
or
cmps
lea
popa
shr
inc
outs
iret
inc
or
pop
lods
ficomp
rol
(bad)
in
and
(bad)
and
stos
sub
mov
aas
in
mov
ds
repnz
(bad)
xchg
clc
ficomp
xchg
jb
xor
fisub
mov
out
dec
add
cmp
mov
(bad)
ins
jecxz
call
out
cmp
pxor
pop
out
fisttp
outs
ds
jl
or
xchg
adc
and
aad
mov
and
pop
cmp
test
dec
adc
outs
jb
mov
scas
mov
mov
mov
sti
daa
icebp
shl
jo
test
and
sub
adc
mov
sbb
push
std
jne
cdq
(bad)
cmp
repz
shl
outs
jnp
push
cli
aad
rcl
cmp
jmp
mov
mov
inc
fisub
cmc
shl
jle
mov
push
hlt
mov
scas
dec
js
push
jle
xchg
mov
sub
and
dec
in
cmp
cmp
fist
dec
xchg
neg
test
xchg
(bad)
lock
xor
cmps
cwde
repnz
add
cmp
fidiv
cmp
jl
cmp
sub
sbb
push
ja
hlt
retf
jae
pusha
xor
sahf
dec
mov
int
fidivr
push
pop
adc
jns
mov
leave
pushf
movs
test
sub
ret
or
daa
sti
fcom
and
or
push
iret
lds
cmps
mov
cmp
leave
or
ins
rcl
leave
test
inc
pop
dec
fs
jmp
fmul
out
xor
test
xor
lock
cld
mov
inc
test
adc
jmp
inc
mov
adc
loop
jl
test
cwde
xchg
repz
and
pusha
punpcklbw
xor
sbb
popa
call
ins
push
cmp
push
xor
mov
call
pusha
neg
cs
pop
xor
not
shl
ja
pop
push
mov
push
sub
aaa
and
mov
push
and
sub
or
pop
xor
fdiv
push
mov
mov
icebp
(bad)
mov
ja
sub
repz
rcr
dec
mov
retf
or
mov
dec
jb
and
pop
xchg
xchg
retf
into
sub
movs
(bad)
push
sbb
sub
sbb
mov
sub
mov
add
not
out
pop
mov
push
xchg
sbb
dec
aas
cmp
pop
pop
shl
jl
and
imul
fsub
pop
jle
mov
jno
inc
fwait
cmp
or
fistp
js
dec
and
sub
adc
push
mov
lods
out
or
jns
mov
xlat
xor
or
mov
sbb
rol
xchg
mov
loop
lock
aas
jl
div
jnp
add
in
pusha
adc
push
call
xor
jbe
jae
ror
mov
ins
pop
cmc
movs
out
dec
mov
jbe
clc
inc
in
inc
imul
(bad)
jecxz
les
dec
or
add
aaa
cmp
adc
mov
cmp
jo
xor
cdq
mov
movs
and
push
retf
movs
(bad)
(bad)
fucomip
clc
sub
dec
xchg
sub
int3
fstp
arpl
(bad)
out
lea
js
pop
sbb
cmp
idiv
lods
popf
fmul
test
(bad)
pushw
mov
pop
push
mov
ror
add
(bad)
aaa
ins
cmps
or
inc
sub
lods
xor
clc
xchg
dec
in
aam
les
stos
or
or
fimul
leave
inc
fidiv
mov
lock
mov
jns
fs
jo
xor
(bad)
jle
rcr
repz
jle
daa
jge
(bad)
imul
cmp
xor
sbb
sub
and
jmp
cld
ror
out
jb
xor
test
mov
cmp
dec
dec
scas
push
lahf
mov
cdq
mov
pop
and
mov
xlat
cdq
ins
and
cmps
inc
ins
mov
std
fild
das
das
(bad)
hlt
and
(bad)
cmp
mov
mov
retf
ficomp
sbb
xchg
shr
mov
in
test
pop
outs
add
aaa
push
shl
fsubr
clc
pop
mov
call
inc
into
xor
mov
xchg
arpl
push
mov
daa
mov
jmp
push
fwait
jb
pop
(bad)
mov
push
and
xor
leave
xor
out
ins
mov
cmp
mov
and
mov
and
inc
retf
inc
(bad)
ss
lods
adc
aam
xor
out
(bad)
dec
pop
outs
jae
retf
xor
mov
sub
cmp
jge
xchg
pop
cld
adc
fidivr
adc
stos
push
mov
int
retf
dec
nop
pushf
out
gs
push
rol
dec
stos
sub
fcom
std
lds
fstp
pop
add
repz
imul
cmps
and
mov
push
dec
clc
pushf
cmp
movs
adc
xchg
cmp
cmps
pop
cmp
sbb
jge
aam
jo
aam
add
push
leave
aad
mov
or
or
push
cmp
mov
ret
push
(bad)
inc
sbb
in
add
lea
mov
jle
jmp
out
fcom
aas
sub
shl
sbb
jmp
mov
cmps
push
pusha
adc
xor
cmps
mov
inc
inc
data16
sbb
das
cmp
push
pop
fadd
xor
inc
mov
add
push
xchg
mov
jo
jb
push
fnstsw
cs
fcomp
test
loope
mov
add
(bad)
in
(bad)
pop
mov
xchg
out
(bad)
xor
pop
xor
pop
inc
push
jns
aad
stc
xor
fcomp
sbb
adc
loop
xor
pushf
test
mov
jae
or
jle
and
addr16
das
jne
jnp
and
push
repnz
cmc
push
jl
cmp
mov
fsubr
clc
mov
fucom
pop
movhps
dec
jb
in
test
mov
(bad)
mov
xor
inc
xchg
mov
in
out
adc
(bad)
(bad)
xlat
pop
je
add
nop
push
das
test
adc
xchg
ins
push
adc
xchg
inc
sbb
mov
push
icebp
pop
pop
stos
(bad)
push
mov
sbb
retf
imul
sbb
fmul
cmp
xor
sbb
stc
mov
retf
sub
add
sbb
out
cmp
mov
jbe
adc
jae
in
fstp
into
push
inc
push
xchg
js
xor
ja
pop
les
fcomp
mov
mov
pop
sahf
sub
lahf
sbb
sub
pop
outs
iret
ret
mov
mov
shl
cmps
loopne
out
xchg
es
pop
movs
mov
sub
xchg
mov
loop
mov
xor
mov
or
cmp
push
loope
and
aaa
das
cmps
lods
js
out
xchg
popf
and
xor
shr
push
xchg
sub
jne
dec
test
inc
loopne
jmp
rep
mul
mov
add
xor
mov
push
out
daa
ja
addr16
outs
ins
inc
stos
mov
jle
xor
fmul
cmc
pop
inc
mov
fnstcw
les
outs
add
xchg
fiadd
push
ins
inc
inc
sub
cmp
data16
pop
push
push
shr
ret
sub
dec
jno
cli
ins
in
test
pop
cmp
xchg
jle
pusha
sub
fcmovnb
push
push
push
xor
rcl
jge
jbe
inc
push
mov
mov
jo
call
lea
sub
and
repnz
(bad)
mov
sbb
gs
(bad)
xchg
push
push
pop
xchg
mov
xchg
(bad)
(bad)
push
dec
nop
movs
int
adc
cmp
jae
rcl
aad
cld
dec
jno
and
(bad)
mov
and
cmp
leave
jmp
scas
and
ficom
push
sbb
mov
inc
add
add
rcr
mov
mov
(bad)
in
mov
ficomp
bound
mov
shr
fxch
mov
dec
and
sbb
inc
test
pop
xchg
xchg
call
shl
rcr
adc
test
mov
dec
or
add
sbb
mov
pandn
sbb
fisub
xchg
fist
ret
pop
mov
sbb
retf
adc
lock
lods
mov
std
retf
ret
lea
adc
rcl
dec
sbb
(bad)
and
cli
xchg
leave
pop
jmp
into
or
dec
add
rcr
cmps
arpl
xor
push
mov
or
sbb
fsubr
cmps
add
(bad)
push
addr16
fld
push
nop
js
loop
mov
out
sbb
push
adc
xor
test
xor
or
test
xchg
mov
sub
leave
inc
push
or
not
idiv
out
gs
ror
jmp
movs
and
push
cs
imul
pop
(bad)
cmp
pop
mov
sub
fcom
push
aas
out
sahf
and
lea
add
add
add
or
pop
pop
leave
xor
test
or
clc
and
cdq
mov
adc
mov
jg
jb
and
push
xchg
ja
mov
pop
mov
(bad)
pop
xchg
fwait
jge
xor
xchg
movs
ror
inc
pop
scas
stos
and
dec
repnz
les
xor
xor
sbb
pushf
nop
scas
jne
sbb
outs
loope
call
mov
call
inc
cmp
mov
jge
outs
outs
shr
jmp
ss
and
movs
lods
sbb
out
out
mov
cwde
jecxz
cli
pop
(bad)
int3
lock
dec
imul
jmp
push
retf
jae
pop
mov
mov
or
ja
or
add
xchg
clc
add
dec
gs
adc
in
pop
lods
pop
jnp
cmp
jle
sbb
imul
pop
mov
dec
push
sti
jge
xchg
out
and
jmp
(bad)
sbb
fs
(bad)
mov
dec
sbb
dec
adc
inc
adc
dec
ds
fs
or
rcr
ss
cmp
retf
dec
lahf
add
adc
xchg
or
outs
aad
push
adc
mov
jecxz
adc
xchg
clc
mov
inc
mov
ret
xor
cmp
cmp
ins
and
retf
gs
mov
mov
sub
push
sub
mov
jp
sbb
cmc
test
add
mov
sbb
xchg
sub
(bad)
cmp
sub
sub
mov
inc
scas
pop
mov
ins
sbb
rcl
sbb
shl
aaa
cmps
lods
movs
arpl
shr
dec
or
inc
sub
not
aaa
cmp
punpcklwd
aad
push
sbb
test
ins
add
retf
xchg
scas
pop
data16
sub
stc
mov
repz
ret
in
mov
sbb
xchg
add
hlt
xchg
or
adc
imul
cmp
cmp
test
outs
xchg
arpl
jl
repnz
lds
outs
or
cmp
dec
into
dec
imul
fsubrp
adc
cs
fnstsw
in
pushf
inc
cmp
or
aas
jnp
popa
pop
jecxz
call
or
push
repnz
icebp
jnp
movs
cmp
icebp
and
js
cli
stos
mov
cmp
fisttp
aas
mov
jns
mov
imul
sti
jnp
mov
jno
or
mov
and
imul
call
and
icebp
retf
mov
push
imul
cli
mul
test
cmp
cwde
mov
call
jno
cmc
into
sub
(bad)
stc
je
xchg
mov
jp
aad
pop
(bad)
pop
lods
repz
mov
push
mov
dec
mov
(bad)
in
adc
dec
nop
ins
lods
add
push
int
scas
loopne
cmps
iret
dec
jno
sub
lds
pop
hlt
ds
sub
fisub
jp
(bad)
(bad)
in
mov
cmp
cmp
jb
(bad)
call
(bad)
inc
pop
push
dec
loopne
jb
cld
jg
stos
adc
jg
xchg
adc
pushf
push
lahf
jmp
hlt
stos
call
jns
int
cmp
pushf
jg
mov
bound
xchg
jbe
in
scas
fdiv
inc
dec
stc
call
sbb
jmp
jne
pop
mov
mov
aaa
imul
push
data16
mov
dec
mov
dec
push
scas
mov
stos
push
sub
dec
pusha
pop
rcl
cwde
cs
push
lahf
ds
xchg
dec
mov
je
into
ret
out
std
stc
xchg
(bad)
mov
cmp
mov
dec
fadd
mov
out
pop
pop
shr
mov
ins
loope
das
pop
or
rcl
mov
shr
jmp
jecxz
dec
ins
mov
mov
mov
xor
xor
sahf
pop
popf
daa
bound
fs
(bad)
ret
fstp
cmc
cs
fprem
mov
mov
leave
pop
xchg
mov
bound
fwait
push
xchg
ret
jnp
stc
adc
icebp
hlt
cmp
popf
lahf
addr16
mov
pop
test
div
cmp
jg
retf
adc
push
cmps
out
dec
xchg
mov
add
dec
mov
stos
push
push
repz
clc
adc
xor
pop
push
jae
push
sbb
enter
adc
scas
jo
adc
js
data16
mov
xor
fwait
sahf
fistp
xchg
jo
adc
and
shl
test
clc
je
mov
xchg
shl
jg
push
xchg
cwde
jb
fistp
add
pop
push
fwait
inc
fistp
bnd
adc
arpl
cmps
in
inc
and
xchg
push
clc
(bad)
mov
(bad)
sbb
adc
inc
mov
movs
enter
int3
sub
cmps
xchg
sub
dec
aaa
pop
(bad)
xor
add
sub
mov
cli
xchg
fisub
sbb
sub
mov
push
cmp
jnp
adc
inc
cmps
jmp
int3
sbb
cmp
adc
mov
mov
fsub
fs
aas
mov
cdq
xchg
stc
je
lock
xchg
mov
ins
adc
and
imul
int3
pop
nop
jg
or
les
loopne
adc
adc
pop
cmp
test
or
add
xchg
mov
pusha
adc
dec
add
cmp
cmp
or
je
hlt
pop
repz
test
inc
dec
sub
inc
sbb
push
add
sbb
cmp
jg
imul
imul
mov
ss
imul
push
into
rcl
mov
mov
xor
jb
adc
sbb
pop
mov
idiv
test
pop
adc
inc
and
arpl
mov
fcomip
pop
jo
jbe
icebp
aam
and
sbb
mov
(bad)
sub
push
push
xchg
gs
and
push
xor
sub
repz
std
scas
or
inc
push
dec
rcl
mov
(bad)
xor
imul
dec
xchg
push
mov
xor
mov
pop
fsubrp
and
cmp
rcl
mov
data16
xor
xchg
sub
inc
cmp
mov
fsub
pop
mov
loope
mov
fwait
ret
xor
cmp
xchg
mov
inc
dec
adc
les
cli
shl
mov
int
shl
rol
mov
adc
pop
inc
retf
jmp
push
pop
lods
iret
in
or
jle
mov
dec
push
in
mov
inc
hlt
fwait
or
pop
sub
inc
sbb
int3
xor
sar
xchg
(bad)
mov
div
pusha
cmp
xor
repnz
and
shl
int
ss
jecxz
mov
mov
stos
fnstenv
mov
xchg
call
and
mov
scas
xor
nop
mov
mov
out
outs
cmp
xor
pop
mov
test
ins
jno
(bad)
pop
xchg
sub
cli
test
test
aas
aam
and
push
inc
pop
sub
mov
dec
(bad)
mov
aam
test
(bad)
nop
cli
push
push
sti
mov
daa
getsec
shr
adc
cmp
pop
add
inc
fwait
aad
sub
sbb
add
xchg
lods
cmps
push
sub
cmp
lods
rol
xor
out
or
lahf
loope
xlat
and
pop
rcl
mov
iret
pop
shr
sub
cmp
and
and
jecxz
mov
pusha
jecxz
pop
mov
jmp
fisubr
out
add
pop
or
inc
add
cld
aaa
nop
imul
or
and
ds
push
mov
dec
imul
xchg
aam
cmp
or
ret
jg
ins
shl
inc
rol
xor
ret
test
bnd
test
mov
cli
adc
add
jae
jp
xchg
outs
xor
xor
pushf
mov
aam
cmp
sub
popf
or
rep
out
repnz
inc
fsub
sub
fs
pop
mov
mov
test
(bad)
test
ss
mov
push
pop
inc
bound
daa
push
mov
adc
and
mov
cld
xor
pop
enter
mov
js
(bad)
xlat
cmc
cmp
cmps
cmps
sbb
dec
xor
push
sub
xor
xchg
push
data16
inc
and
aas
or
push
cmp
push
add
std
out
sbb
ficom
inc
ins
leave
mov
aad
add
ss
xor
push
pop
fwait
out
jge
inc
dec
(bad)
aas
(bad)
imul
push
fsub
xor
xchg
inc
cmp
aad
adc
rol
adc
push
sub
and
push
cmps
les
not
rol
aaa
inc
mov
mov
repnz
and
xchg
xor
add
push
lock
sti
pop
mov
sti
ret
push
and
cmp
cmp
pop
lock
test
fld
mov
mov
test
mov
jmp
test
hlt
mov
mov
mov
jbe
xlat
dec
dec
add
(bad)
push
mov
movs
cmps
jmp
ds
push
or
outs
movs
outs
mov
mov
je
(bad)
iret
jne
repz
push
mov
mov
mov
add
adc
or
jmp
int3
jp
daa
xchg
mov
cmp
mov
or
mov
jecxz
push
retf
fisub
xchg
les
pusha
in
stos
outs
daa
retf
ret
fcmovne
(bad)
jo
in
jg
iret
out
sbb
test
repnz
mov
add
sub
push
mov
xchg
fistp
imul
stc
pop
ins
mov
outs
loopne
pushf
pop
cmps
ja
test
lahf
cmp
mov
pusha
cli
std
scas
std
sti
jnp
pop
xor
dec
or
imul
int
dec
int
test
pop
popa
xor
scas
ds
mov
stos
xchg
jnp
(bad)
cwde
jo
icebp
sbb
fiadd
dec
jbe
xor
scas
and
xchg
push
inc
mov
jno
enter
sub
popf
cld
xchg
push
rcr
jnp
ins
mov
mul
cmc
pop
pop
mov
mov
outs
test
jmp
fsubrp
mov
sar
cmp
inc
pop
sbb
sub
jecxz
cmp
jle
dec
stos
cmp
call
push
fnstenv
ss
adc
mov
pop
stc
add
mov
ret
gs
test
shl
xor
pushf
pop
(bad)
cmp
dec
cmp
cs
jne
push
cmps
jb
aam
fnstsw
jae
and
jo
xor
shr
out
lock
and
cmp
rcr
daa
shr
ret
mov
loope
push
add
movs
sub
mov
xlat
cs
push
add
jae
outs
repnz
fcomi
rcr
pop
jne
pop
xchg
jb
call
repnz
ja
mov
mov
call
adc
lock
sbb
fcmovnu
jge
sub
push
pop
cmps
jge
push
add
cmovne
or
xchg
stc
clc
add
das
inc
fsub
daa
scas
jb
pop
das
mov
push
jl
or
xchg
mov
out
mov
ins
loope
inc
mov
jle
and
aaa
mov
inc
test
mov
lahf
out
jmp
rol
pop
mov
xchg
or
add
or
mov
or
out
data16
dec
xor
out
(bad)
or
in
xchg
test
pop
adc
dec
push
out
daa
lea
pop
fnstenv
clc
enter
jnp
pushf
jg
jno
adc
test
int
xor
pop
rol
retf
cmp
fldcw
(bad)
in
add
cs
xchg
int3
mov
or
mov
and
test
ss
popf
fisub
cs
outs
cmc
and
stos
repz
sub
(bad)
sub
out
sbb
lods
call
or
clc
xchg
jg
pop
(bad)
clc
pop
xor
repnz
xor
xchg
push
jns
inc
aaa
mov
es
pop
cwde
inc
sbb
inc
stc
not
(bad)
jp
cmps
cld
out
pop
daa
dec
stc
add
xchg
jne
dec
add
add
dec
shrd
ja
ret
lds
in
xchg
push
dec
xor
or
imul
fcmovb
iret
test
and
cmps
mov
cs
scas
cmc
hlt
adc
jnp
outs
jae
sub
jp
mov
aam
add
hlt
or
xor
xor
dec
adc
enter
jg
mov
cdq
icebp
pop
add
fimul
in
jp
add
les
test
cli
add
mov
mov
mov
lds
aaa
fcomp
ror
adc
jmp
sub
inc
test
shl
dec
sub
adc
fisttp
adc
(bad)
in
xchg
adc
out
add
add
or
adc
jae
jmp
(bad)
fiadd
mov
(bad)
jae
adc
xchg
dec
inc
pop
fisubr
out
repz
add
loope
inc
stos
push
int3
rol
(bad)
sar
dec
pop
jbe
cmp
xchg
sar
stc
jg
es
xchg
dec
cmc
adc
xchg
and
inc
and
xchg
inc
fadd
dec
xor
gs
loope
movs
push
inc
jecxz
inc
jl
mov
sub
fist
cmp
bound
mov
sbb
(bad)
push
adc
xor
mov
jmp
adc
arpl
mov
mov
add
in
icebp
cmp
lock
arpl
and
aad
or
cmp
in
mov
cmps
(bad)
call
shl
jno
daa
jb
mov
jmp
into
mov
cmpps
xor
sbb
and
mov
and
or
leave
repnz
ds
addr16
push
pop
pause
dec
fdivr
xchg
into
int
cli
bound
scas
stos
xor
test
push
or
in
sbb
push
pop
mul
cwde
addr16
mov
rcr
dec
push
addr16
xchg
xchg
fadd
hlt
test
and
in
out
pop
xor
ror
push
xchg
add
out
jl
das
sbb
fild
push
inc
sbb
or
jp
mov
mov
pop
int3
data16
mov
(bad)
mov
or
mov
dec
inc
jle
push
sub
pushf
test
xor
repnz
imul
push
mov
in
add
cmp
xor
dec
mov
aaa
sub
adc
aaa
mov
jbe
mov
repz
das
fcom
cmp
xchg
jge
or
in
add
cmp
ret
or
push
cmc
icebp
sbb
inc
or
fstp
aad
add
aas
test
cs
and
test
outs
cmp
jmp
(bad)
popa
iret
inc
sbb
pop
in
push
stos
adc
gs
jmp
(bad)
fnsetpm(287
adc
mov
adc
jmp
(bad)
mov
xor
mov
mov
stos
lods
scas
cmps
mov
lea
loope
push
cmp
add
mov
lahf
cmp
movs
inc
retf
inc
and
nop
mov
rol
push
shr
sbb
aaa
ds
or
pop
es
dec
inc
sbb
stos
pop
add
sbb
mov
and
cmp
xchg
repz
jbe
test
mov
cwde
or
(bad)
push
sbb
cmp
xor
mov
pop
add
int
cmp
pop
xchg
(bad)
inc
push
sahf
adc
adc
or
pop
sub
push
lea
cwde
push
outs
xchg
imul
dec
es
loope
mov
mov
xchg
aas
pop
jae
aas
push
dec
mov
mov
or
sub
push
mov
pop
test
adc
sub
mov
nop
or
xchg
push
movs
ds
xchg
and
inc
popf
test
xor
inc
sbb
fwait
test
cs
aam
fmul
jg
out
test
pop
mov
fisttp
mov
sbb
les
int
ret
jmp
mov
out
jl
xchg
fs
mov
adc
into
pop
sbb
mov
or
sub
jmp
and
retf
push
add
call
(bad)
jns
jne
jns
out
pop
ret
sbb
inc
loop
leave
div
mov
inc
out
mov
xchg
cmc
cs
ds
movs
add
xchg
mov
call
dec
test
xchg
dec
es
out
adc
fidivr
adc
sahf
sub
and
dec
sti
adc
add
into
das
mov
test
mov
pop
sub
mov
dec
sub
add
imul
imul
xchg
lods
pop
push
ds
and
rcr
ds
fmul
dec
mov
lds
ret
daa
mov
xor
sub
lds
(bad)
mov
mov
sbb
jle
pop
lods
es
cmps
ins
pop
in
aas
lods
jmp
inc
sub
xchg
test
mov
sbb
int
jmp
retf
cdq
ret
pop
call
xor
loope
cs
pop
pushf
push
ret
mov
add
fist
psllw
cmp
mov
bound
mov
mov
hlt
mov
std
leave
call
adc
mov
pop
loop
test
jle
idiv
and
mov
add
add
scas
cmps
fild
or
stc
pop
mov
fisub
jp
pushf
sbb
in
jb
imul
pop
xor
jg
mov
pop
push
sub
ror
(bad)
xlat
xor
mov
and
in
fidiv
loop
mov
and
rcr
leave
cld
or
and
sub
cmp
jnp
ja
mov
adc
mov
shl
push
xchg
mov
std
mov
scas
(bad)
or
mov
hlt
sub
retf
es
xchg
sub
push
ja
stos
cld
out
in
and
rcr
ret
retf
inc
dec
cmp
(bad)
pop
push
loop
jb
enter
test
popa
push
push
xchg
dec
xor
fwait
xchg
dec
mov
mov
aas
inc
addr16
pop
dec
jecxz
daa
inc
adc
(bad)
mov
rcr
jle
retf
ja
dec
shl
xchg
sar
jo
cmp
aaa
xor
loop
in
jp
push
jmp
pop
jmp
aam
jg
sti
inc
inc
cvtdq2ps
push
call
push
mov
cld
push
fild
pop
lahf
xor
jae
xor
je
cld
add
add
push
dec
cli
mov
outs
mov
repnz
fwait
jns
mov
pushf
push
ins
popa
mov
das
sub
mov
leave
rcr
mov
cmp
adc
fcmovnb
cmp
inc
loope
leave
sbb
fisub
imul
dec
dec
fcomip
mov
stos
mov
cmp
add
pushf
sub
nop
std
nop
pop
mov
sbb
inc
mov
add
rol
xchg
pop
in
cmc
jl
(bad)
test
cmp
mov
or
mov
in
sbb
adc
rol
test
cs
gs
dec
push
(bad)
out
loop
xor
sub
and
xlat
and
ror
sahf
adc
and
xchg
retf
call
jb
push
int3
sbb
sti
xchg
fistp
inc
jmp
pusha
loopne
pusha
fiadd
fdiv
cs
pusha
out
mov
(bad)
jmp
mov
pop
xchg
(bad)
sub
pop
fs
dec
arpl
inc
push
cdq
ins
add
popa
dec
cmp
std
and
call
loope
mov
fild
(bad)
pushf
out
hlt
and
mov
push
mov
sub
push
add
sub
inc
jne
adc
mov
popf
(bad)
sub
(bad)
loopne
nop
or
sub
jmp
inc
rcl
dec
adc
inc
js
pop
repnz
loopne
jle
jp
test
mov
std
cmp
mov
mov
add
xchg
aaa
bound
xchg
imul
inc
cld
aam
mov
test
mov
mov
js
add
mov
xchg
icebp
mov
or
add
ret
outs
xchg
mov
xchg
adc
dec
adc
or
(bad)
ins
mov
jecxz
clc
inc
movs
push
leave
xchg
cld
outs
test
lods
fwait
sub
hlt
out
out
adc
gs
fnsave
xor
push
arpl
and
dec
pop
shl
xor
ret
cdq
cli
dec
out
mov
or
rcr
(bad)
movs
push
popa
mov
cmps
push
sub
loope
adc
xchg
(bad)
test
in
or
push
pop
fs
call
or
rol
xor
sub
mov
mov
stos
loop
test
dec
mov
mov
aas
cdq
loop
ror
xchg
clc
cmp
pop
mov
dec
adc
cli
dec
pop
rol
jae
xor
sbb
push
iret
jmp
scas
xchg
add
jno
popf
mov
xor
mov
(bad)
mov
aas
popf
jle
mov
arpl
fs
outs
push
sbb
mov
loopne
pop
dec
jge
mov
cmp
jns
sub
xchg
pushf
aaa
adc
push
mov
lock
mov
push
jmp
mov
inc
pop
ficomp
mov
jecxz
aam
imul
adc
push
sbb
int
aad
ret
cmp
push
retf
lods
jnp
inc
pop
add
jae
pushf
adc
nop
test
loopne
aas
push
stc
mov
arpl
mov
mov
int3
add
push
push
hlt
je
push
push
rcl
lods
(bad)
lock
xchg
xchg
jae
outs
in
les
movs
imul
ins
imul
dec
push
rcr
(bad)
push
call
into
adc
pop
(bad)
movs
mov
or
fwait
xchg
mov
lea
(bad)
xor
or
adc
adc
push
mov
jg
pop
xor
or
mov
or
retf
or
test
stos
call
xchg
sbb
mov
repnz
fwait
sar
mov
jp
add
daa
mov
dec
mov
in
inc
mov
cmp
out
stc
leave
mov
inc
xor
fist
aad
mov
call
xor
lea
mov
push
jl
add
mov
sub
mov
add
lock
ret
inc
cmp
mov
test
ss
push
and
outs
adc
fbstp
sbb
xchg
cmp
push
adc
retf
xor
jae
xor
mov
jae
cdq
pusha
adc
pop
jbe
outs
mov
call
inc
sbb
jmp
leave
aas
xchg
cmp
and
outs
push
jmp
sbb
loope
addr16
mov
add
fld
es
push
dec
jae
xor
pushf
mov
mov
(bad)
int3
jns
mov
xchg
outs
lods
inc
fistp
mov
icebp
in
push
push
repnz
adc
xor
aam
int
inc
pop
inc
push
mov
test
cmp
mov
cmp
ret
jmp
lock
rol
mov
retf
adc
dec
or
mov
in
or
mov
and
push
cmps
or
pop
pop
lds
sahf
cwde
fcomp
jge
aam
les
imul
dec
dec
push
adc
aaa
push
jo
enter
gs
mov
xor
dec
pop
aad
loop
(bad)
push
sbb
ins
outs
fcmove
mov
add
in
cli
add
ret
stos
test
movs
jl
fwait
inc
sbb
es
mov
(bad)
push
xchg
dec
retf
cdq
mov
ins
adc
mov
and
add
pusha
jne
jle
es
xchg
test
popa
push
daa
push
mov
sub
pop
neg
add
enter
push
out
jno
std
fucomip
(bad)
out
mov
push
mov
cli
sbb
cmps
gs
sub
xchg
dec
gs
pop
fstp
xchg
aas
add
and
ins
int3
ds
pop
and
xor
(bad)
icebp
xor
sahf
mov
in
xchg
lahf
mov
ins
les
test
jmp
adc
xchg
mov
in
pop
xor
les
pop
xchg
inc
cmp
sub
cdq
out
and
icebp
mov
xor
sub
in
stc
sbb
jns
into
mov
mov
lods
lock
push
lea
sahf
push
mov
shr
cmps
adc
pusha
mov
nop
mov
mov
or
pop
inc
popf
adc
popa
out
mov
jmp
lods
dec
repnz
xor
pop
in
jmp
mov
pop
xchg
adc
ret
jnp
rol
cmp
adc
shl
pop
int3
aad
in
movs
push
ret
sub
mov
(bad)
jp
xlat
add
jb
or
rcl
sub
outs
push
sbb
arpl
or
dec
retf
and
(bad)
dec
call
retf
ins
(bad)
in
cmp
sub
push
xchg
frstor
outs
imul
mov
pushf
sbb
jbe
ficomp
cmp
xlat
add
push
scas
adc
inc
gs
mov
stos
mov
xchg
jb
icebp
ret
lods
push
xor
jecxz
jno
xchg
cmps
test
movs
add
xchg
imul
(bad)
call
aas
and
mov
cs
lahf
push
sbb
mov
test
neg
mov
cmp
pop
jo
es
pop
cwde
and
aaa
xor
adc
mov
inc
pop
(bad)
jecxz
pop
shr
push
out
cli
inc
out
out
fadd
jmp
pop
ficom
ret
cmp
lahf
push
stc
and
ss
fld
sbb
xchg
add
addr16
cmps
shrd
leave
add
inc
hlt
or
sbb
pop
mov
imul
pop
and
jg
adc
mov
out
pop
mov
sub
in
or
dec
rcl
adc
xor
jp
sub
inc
pop
das
push
outs
lods
add
jle
xchg
int
sub
(bad)
pop
lds
fwait
mov
or
retf
sbb
retf
arpl
test
push
mov
hlt
sar
xchg
leave
(bad)
xlat
and
jo
mov
xor
nop
sub
inc
es
or
sbb
dec
je
cdq
jo
leave
lock
inc
sub
xlat
push
xchg
or
dec
dec
adc
cmp
leave
loopne
loop
in
and
xchg
or
jns
icebp
into
jp
inc
sub
icebp
cdq
and
rep
jae
pop
add
lods
sbb
dec
mov
add
cmp
dec
pusha
ins
jno
int
xchg
and
mov
sbb
cli
add
adc
inc
sar
sub
xor
pop
(bad)
faddp
sub
lahf
xchg
int3
xchg
dec
cmp
sub
sbb
fnstsw
stos
add
ret
imul
pusha
xchg
aaa
jae
or
xor
mov
xchg
shl
dec
loope
or
jecxz
sbb
ja
sub
bound
xor
cmp
ds
mov
lahf
or
mov
cld
mov
pop
xchg
jmp
and
fisubr
jg
fwait
and
jne
ins
in
shl
mov
inc
cmp
aam
les
retf
loop
gs
adc
or
push
push
loopne
(bad)
mov
mov
xchg
dec
inc
cmp
pop
ss
repz
mov
nop
(bad)
xchg
push
nop
adc
mov
jno
pop
xchg
pop
fistp
fidiv
and
mov
daa
retf
add
sbb
add
pop
jne
mov
dec
adc
mov
aaa
mov
push
dec
jno
mov
clc
nop
jge
add
les
sub
mov
(bad)
rol
push
push
dec
ret
out
sub
sub
(bad)
ror
xor
mov
push
in
xlat
mov
xchg
ja
test
and
mov
loope
std
int
iret
ss
adc
cdq
(bad)
jp
fistp
hlt
push
das
sbb
(bad)
mov
mov
fist
mov
adc
xchg
outs
pop
or
jbe
push
mov
std
cdq
inc
repz
dec
dec
pop
das
and
push
or
popa
div
pop
dec
inc
add
jecxz
adc
jae
mov
int3
dec
xor
aas
in
mov
or
mov
je
pop
stos
loop
jne
or
popa
shr
or
xor
mov
sbb
sbb
call
inc
fdiv
mov
mov
mov
outs
dec
mov
shr
ror
(bad)
ss
sbb
push
push
cld
mov
mov
sub
int
movs
xor
ja
jg
sub
mov
and
mov
pushw
test
jmp
xor
dec
mov
imul
les
imul
in
(bad)
fimul
jle
mov
in
daa
mov
cwde
xor
loop
call
jne
bound
enter
js
lods
mov
mov
sbb
xchg
mov
(bad)
rol
loope
ja
fstp
das
test
repz
mov
add
nop
test
jae
movs
xchg
jb
mov
je
mov
and
outs
repz
xchg
push
jg
and
loop
dec
mov
repnz
unpckhps
fsubp
sub
dec
push
pusha
jmp
out
inc
push
repz
xor
js
jmp
getsec
mov
cmps
mov
pop
add
push
test
clc
inc
int3
inc
or
int
sub
fwait
pop
and
dec
(bad)
stos
mov
cmps
outs
std
lea
mov
arpl
daa
jp
cmp
fimul
in
mov
cmp
cmp
js
test
inc
sbb
fs
pop
pop
inc
fsub
jnp
jb
xchg
push
inc
rcl
int
hlt
cwde
js
mov
(bad)
js
aaa
in
pop
sub
and
movs
call
sub
mul
push
mov
leave
pop
call
out
mov
aam
cmps
lahf
iret
jmp
cmps
adc
fnstenv
adc
sub
xchg
popf
add
lahf
jns
lds
add
mov
pushf
and
add
inc
out
sbb
xchg
cmp
dec
cmp
xchg
jnp
loope
xor
push
push
out
scas
mov
je
xor
jnp
cmp
mov
adc
sbb
je
leave
iret
cdq
mov
add
and
ss
xchg
out
sub
dec
and
jne
fbld
xlat
sbb
xchg
push
stos
in
jg
cmp
ins
inc
add
sbb
fcom
cli
je
dec
or
imul
es
dec
xchg
mov
adc
mov
sub
and
mov
cmc
lods
pop
loope
jmp
scas
xlat
mov
shl
xor
cmps
pop
push
ret
push
nop
mov
leave
lea
ret
out
mov
stc
test
jmp
jae
push
mov
retf
dec
pop
jge
mov
hlt
fst
mov
push
mov
jbe
and
les
cmps
lds
xor
lds
jp
pop
xor
jle
nop
inc
xlat
xchg
mov
fst
jbe
stos
cli
stos
outs
add
inc
mov
adc
fldenv
lods
pop
add
mov
and
ret
mov
push
pusha
aad
outs
inc
mov
aaa
add
mov
mov
aaa
cmp
arpl
(bad)
inc
rol
(bad)
pop
in
pop
sub
ins
outs
mov
pop
out
or
jne
clc
stos
dec
add
loope
sbb
call
imul
mov
outs
adc
fmul
mov
inc
adc
cdq
pusha
adc
jg
xchg
jmp
xchg
inc
push
shr
addr16
int
jnp
jp
mov
cmp
aas
clc
test
dec
jnp
nop
inc
je
mov
cmp
icebp
mov
dec
out
retf
test
loop
fdivr
repnz
dec
dec
jmp
sub
shl
ins
clc
retf
ja
fmul
mov
xchg
in
fidivr
movs
jns
mov
ins
clc
jp
inc
jns
mov
or
daa
in
sub
mov
xchg
adc
push
or
mov
push
clc
mov
mov
xchg
and
inc
(bad)
mov
adc
mov
pop
sub
test
adc
xchg
jbe
ja
cmp
aas
push
add
dec
jge
ins
(bad)
pushf
inc
mov
repnz
jae
push
push
daa
and
(bad)
sahf
xor
push
mov
es
adc
sahf
cmps
fcmovu
cmp
jno
and
mov
ret
adc
iret
or
sbb
dec
lock
inc
jge
test
jl
cli
xchg
push
and
stos
mov
loop
xchg
pusha
ja
in
inc
daa
stc
xor
mov
xchg
mov
dec
dec
cld
into
pop
loopne
mov
neg
and
gs
jle
lock
mov
lds
sahf
out
pop
lods
add
push
xor
test
stc
aad
cdq
mov
sbb
sbb
cmps
mov
jno
mov
pop
lock
cdq
inc
sbb
arpl
nop
xchg
push
push
iret
aam
push
push
xlat
test
inc
lahf
sbb
repz
mov
aad
cmc
int3
aam
mov
jecxz
gs
mov
retf
cmp
sub
mov
jno
xchg
imul
mov
push
in
xor
scas
call
icebp
fstp
(bad)
add
idiv
jb
in
ds
xor
push
sar
or
adc
lods
push
ficom
push
in
pushf
xor
mov
jbe
(bad)
sbb
jb
xor
lock
add
inc
jns
pop
pushf
(bad)
or
je
or
ds
loop
xor
mov
push
adc
sbb
cmp
mov
movs
adc
push
add
or
sar
xor
cmp
dec
pop
ins
sub
sbb
repz
xchg
jge
push
xchg
(bad)
mov
lods
cmp
retf
mul
inc
out
jl
jge
mul
imul
and
gs
iret
gs
aaa
mov
add
int
(bad)
xor
add
popf
xor
mov
mov
test
jns
repnz
mov
sub
popf
cmp
jecxz
ror
sbb
pusha
test
orps
adc
pop
push
adc
add
and
jg
adc
clc
pop
cmp
gs
sub
(bad)
push
leave
sbb
rol
aas
nop
sub
movs
ret
lock
pop
scas
jl
mov
mov
cmp
push
mov
mov
loop
sahf
pop
fdiv
push
push
jmp
addr16
fbld
les
cld
imul
pop
jb
pop
inc
adc
add
dec
movs
sbb
mov
xchg
daa
cmp
sub
pause
pop
loopne
xchg
enter
push
imul
inc
push
(bad)
adc
pop
bound
sbb
sbb
mov
jns
dec
inc
into
or
add
dec
cmp
data16
cmp
dec
push
inc
stos
jb
sbb
jmp
scas
add
cs
xchg
inc
dec
jmp
fst
or
xlat
pop
cmp
jbe
sahf
cmps
mov
push
rcl
cmp
xor
movs
dec
jno
scas
hlt
in
jns
xchg
bound
pop
test
mov
add
ja
mov
mov
int
(bad)
xlat
not
movs
xor
sti
repz
int3
sahf
and
push
rcl
xor
in
bound
into
mov
fadd
(bad)
xor
pusha
lea
pop
int
and
fnstenv
scas
imul
not
cmp
jb
je
cmp
push
sub
push
bound
(bad)
inc
cdq
add
ins
cmps
(bad)
inc
jecxz
mov
ss
clc
in
xchg
lea
shl
sub
jge
and
cmps
push
scas
loope
inc
inc
push
inc
pop
mov
pop
adc
test
data16
jae
push
fld
jmp
test
es
movs
lahf
scas
xchg
sub
mov
and
mov
or
add
jbe
dec
das
push
push
pop
mov
mov
xchg
dec
adc
adc
movs
or
ins
sub
sub
into
mov
inc
xor
stos
mov
xor
sbb
retf
and
bound
repnz
scas
push
outs
push
or
popf
fist
mov
imul
neg
test
pop
push
and
and
lahf
movs
mov
xchg
ins
push
(bad)
mov
add
int
mov
sbb
and
mov
push
xchg
dec
jmp
mov
sub
mov
jl
fstp
cmp
mov
mov
push
and
jnp
cld
mov
jg
inc
stos
adc
cli
xor
ror
xor
hlt
jmp
cmp
or
in
dec
test
push
loop
int3
call
es
mov
imul
mov
mov
ror
int3
(bad)
jecxz
idiv
pop
ficomp
(bad)
xchg
cdq
cwde
repz
adc
fild
test
call
addr16
push
int3
sti
(bad)
cmps
icebp
lods
in
mov
sub
aam
push
or
mov
dec
push
cmp
pop
enter
arpl
ins
and
jmp
(bad)
mov
rol
xchg
cmp
jb
das
dec
jmp
sbb
shl
push
int
inc
jno
ins
jle
push
mov
add
inc
in
std
mov
mov
pop
and
retf
sub
in
jo
dec
sbb
fs
sub
and
ds
or
ds
push
mov
mov
aad
adc
mov
call
jbe
ins
jns
mov
les
bound
movs
add
cdq
je
xor
dec
stc
cmp
int3
pop
push
cmp
xchg
hlt
sbb
mov
div
dec
inc
stos
dec
add
push
inc
mov
scas
cwde
xor
cmp
xchg
je
test
inc
mov
aaa
shr
scas
mov
test
pop
adc
mov
fdivrp
leave
mov
add
inc
loopne
aam
loopne
imul
fcomp
icebp
push
(bad)
aaa
jnp
add
imul
mov
daa
push
xchg
mov
push
pop
arpl
aaa
and
sub
fist
ror
jne
xor
mov
test
pop
sub
stos
fisttp
dec
sbb
and
std
push
stos
(bad)
int3
mov
stc
leave
push
ficom
ds
xor
scas
mov
xor
mov
daa
cld
lock
sbb
jmp
pop
retf
aas
cmp
ds
push
jle
mov
jge
and
sub
add
sti
fdiv
push
lods
xor
ins
ds
jbe
pop
sbb
push
pop
mov
and
sbb
mov
or
aas
in
xor
push
xor
or
sbb
retf
mov
aad
adc
or
or
inc
ret
xchg
sti
push
pop
int3
pop
cmps
mov
pop
push
xor
in
jnp
fcom
dec
(bad)
aaa
xor
aam
in
out
loope
xor
mov
mov
adc
pop
dec
sub
gs
sub
inc
sub
call
test
and
add
lea
mov
pop
cmp
loopne
push
ret
and
psubw
fcmovb
pushf
xor
add
aad
call
rcr
icebp
in
mov
mov
lock
loope
in
cmp
div
sub
sub
pop
ret
and
jb
pop
ins
imul
or
dec
xor
xlat
mov
fstp
xchg
imul
inc
sub
mov
ins
call
xor
sub
xlat
fld
xor
pop
test
movs
retf
clc
add
cmovno
stos
es
xlat
fwait
sub
inc
or
(bad)
pushf
pop
ss
jo
ss
aam
daa
loope
xor
(bad)
repz
test
add
mov
dec
and
pop
fild
jo
fist
mov
sub
stos
or
in
lods
pop
pop
mov
loop
sub
cmp
pop
daa
push
imul
or
imul
push
push
sub
in
push
and
mov
push
mov
fistp
fsub
daa
out
jae
mov
adc
sbb
or
jb
ss
lods
xchg
call
dec
imul
sub
(bad)
mov
inc
test
(bad)
ret
jecxz
push
test
(bad)
mov
div
push
retf
arpl
xchg
pop
cwde
loop
lock
push
ror
pusha
xchg
je
daa
mov
push
popa
inc
sub
es
push
jmp
call
aas
push
stos
jbe
xor
test
adc
inc
mov
or
push
mov
jbe
mov
xchg
hlt
cmp
dec
cmp
xchg
or
adc
pop
dec
or
int
cmps
(bad)
std
pushf
lea
and
xchg
fsub
jbe
pushf
pop
ret
loopne
cmp
or
push
dec
push
push
pop
fwait
xchg
inc
mov
dec
and
into
sub
int
xlat
dec
mov
nop
dec
test
das
call
outs
jp
pop
dec
adc
jb
push
popf
push
sub
icebp
sub
push
cmp
pop
jmp
mov
and
popf
loopne
not
push
lea
mov
push
mov
adc
arpl
test
and
xchg
sub
mov
fs
imul
std
daa
push
xchg
jmp
mov
push
ins
imul
xor
cld
mov
xor
or
push
inc
xchg
in
fnstsw
mov
mov
inc
push
into
pop
call
stc
aam
xor
retf
cmps
push
pop
dec
cmp
or
test
xor
dec
cmp
cmp
xlat
cli
sahf
call
shl
retf
test
or
xor
jno
inc
aad
aas
les
pop
ds
mov
jne
or
sub
cmps
popa
pop
imul
cmp
pop
gs
add
xlat
dec
add
ret
shr
or
push
cmp
adc
sbb
mov
push
mov
xchg
out
xor
inc
mov
fstp
aam
dec
push
mov
mov
pop
bt
hlt
add
sub
gs
push
imul
jnp
clc
mov
nop
call
sbb
outs
cmp
les
adc
daa
cs
mov
pop
cmp
(bad)
popa
dec
pop
cmps
dec
push
inc
push
or
stc
pop
test
aas
xor
dec
ss
ror
ret
mov
outs
jnp
shr
call
fidiv
jg
jmp
add
enter
and
adc
mov
dec
jg
inc
inc
dec
mov
pushf
adc
push
movs
iret
out
mov
icebp
jb
ss
and
push
lock
fimul
or
jne
dec
ins
mov
retf
lods
ror
mov
mov
mov
or
arpl
and
pop
stos
mov
dec
mov
fwait
jge
or
mov
cmc
clc
ret
mov
mov
in
test
xchg
movs
out
adc
jnp
into
jle
dec
loopne
in
sbb
shl
xor
adc
inc
leave
push
loopne
add
movs
push
inc
fidiv
pushf
ret
aad
jg
sbb
or
xor
shl
fld
adc
mov
pop
adc
push
inc
push
dec
cmova
in
jnp
add
mov
enter
xor
pop
or
xchg
pop
aam
into
sub
dec
outs
pop
cmp
pop
ins
dec
jnp
mov
push
pop
fdivr
mov
jp
jae
dec
in
or
popf
mul
or
lock
inc
mov
scas
xchg
fs
and
mov
sahf
adc
addr16
mov
rcr
retf
mov
mov
retf
ret
outs
lods
sbb
sti
std
or
push
mov
or
out
ds
call
fldenv
adc
jp
push
loop
in
gs
outs
rol
es
pop
dec
enter
test
call
inc
shrd
lea
arpl
pop
pop
pop
cmp
jl
mov
fiadd
inc
xor
cs
mov
xor
inc
push
cmp
ret
and
cld
mov
push
cld
mov
enter
add
sti
daa
(bad)
pusha
inc
data16
loopne
aas
icebp
movs
mov
add
shr
dec
cdq
xchg
cmp
push
sbb
fcomp
and
inc
fbld
loopne
leave
xchg
xor
and
pop
xor
cmp
or
lock
loopne
inc
xor
jb
sub
mov
enter
or
xchg
push
not
cwde
and
in
sti
gs
mov
cmps
xchg
fld
fild
add
jecxz
movs
or
mov
pop
fisubr
retf
jecxz
xchg
out
dec
nop
sbb
add
or
adc
fistp
jae
mov
in
mov
call
ss
pusha
scas
push
repz
xor
mov
retf
scas
(bad)
ds
push
jb
into
cmp
mov
ja
shl
mov
imul
retf
jg
outs
fisub
xlat
jecxz
lods
imul
int3
outs
fwait
leave
repnz
xchg
mov
retf
dec
mov
cmps
add
or
or
push
inc
mov
nop
jo
jmp
pop
inc
std
stos
scas
rol
popf
jge
sbb
icebp
ins
cld
jno
or
jne
mov
dec
fild
scas
mov
sar
dec
dec
clc
jb
cld
repz
add
or
mov
sbb
xchg
mov
pop
xchg
ror
ret
inc
sub
inc
shr
jae
xchg
xlat
stc
sbb
mov
movs
ds
sbb
clc
int3
popf
fnsave
or
push
cmp
sbb
out
cmp
(bad)
neg
adc
push
fldenv
jp
in
push
cmp
sub
jne
and
mov
inc
mov
(bad)
loop
xlat
inc
pop
fwait
not
cmp
sbb
or
or
repz
cld
clc
fistp
cmp
xchg
mov
data16
inc
pop
adc
pop
pop
and
jns
lods
into
lods
call
(bad)
cmp
inc
mov
cli
cmp
mov
call
in
xchg
xchg
imul
mov
jnp
xor
cmps
mov
retf
pop
call
call
inc
int3
jge
sbb
adc
xor
mov
in
std
daa
inc
(bad)
imul
cwde
into
call
pop
and
mov
shl
push
pop
(bad)
jp
add
jb
inc
lods
pop
call
xor
pushf
pop
add
loop
mov
dec
push
(bad)
jl
sbb
inc
or
cmp
sahf
rol
shl
dec
mov
sbb
sbb
xchg
jmp
or
add
jp
stos
or
fldcw
es
dec
dec
cmp
pop
popa
push
inc
add
into
xchg
scas
sar
imul
nop
mov
mov
jmp
mov
movs
cdq
retf
push
jle
cmp
inc
loopne
pop
sbb
pop
pop
add
es
cmp
(bad)
pusha
mov
or
fwait
cmc
cs
cmp
call
and
dec
dec
in
cmp
push
aad
xor
cmp
movs
int
jmp
out
mov
test
mov
adc
stos
adc
es
push
mov
lds
jmp
and
mov
xchg
jae
adc
out
xor
xor
in
or
adc
fldcw
cld
xor
jl
lds
rol
sbb
shl
loope
adc
mov
or
add
out
xlat
dec
or
inc
fwait
out
or
push
xchg
repz
test
mov
add
xchg
(bad)
hlt
mov
mov
in
sub
movs
sbb
inc
pop
sar
pop
hlt
and
(bad)
jmp
jbe
add
fist
push
(bad)
cli
in
or
(bad)
cs
(bad)
mov
xchg
arpl
inc
adc
or
inc
fsubr
push
in
shl
or
and
xor
xor
std
ret
jbe
jo
(bad)
movs
js
pop
out
scas
aas
push
lock
hlt
pop
vphaddbd
add
jg
pushf
call
popf
mov
dec
out
cmps
mov
nop
inc
mov
dec
dec
call
fucomp
lods
pop
cld
push
in
adc
inc
sbb
out
retf
xchg
pop
inc
repnz
pop
in
int
popf
idiv
dec
lds
ret
xchg
push
mov
fistp
addr16
ret
das
fsubp
pop
test
mov
inc
and
or
sub
inc
daa
jo
inc
lds
pusha
push
icebp
add
add
test
jg
push
inc
cmc
jg
ret
cmp
scas
adc
inc
push
iret
cmp
pop
mov
mov
sbb
in
push
add
mov
and
imul
and
xlat
into
push
fdivrp
pop
sti
rcl
outs
sub
repz
ss
sub
pop
xor
mov
dec
out
test
out
(bad)
mov
adc
aaa
ror
movs
pop
outs
es
and
mov
jb
(bad)
nop
mov
and
inc
(bad)
xchg
in
xlat
add
shl
clc
lods
mov
call
movs
ins
push
cld
and
jmp
popf
ins
nop
cdq
hlt
inc
pop
retf
or
jge
sub
xchg
inc
cmps
dec
icebp
sub
cmc
jmp
lahf
fnstsw
jae
out
(bad)
sti
xchg
out
add
dec
sbb
sub
call
adc
cmp
test
(bad)
ins
into
sbb
mov
mov
icebp
stc
cli
push
mov
repz
pop
ret
cmps
(bad)
iret
or
(bad)
(bad)
repz
les
movs
data16
fnsave
fxch
(bad)
adc
mov
cmps
icebp
imul
inc
xchg
push
lods
cmp
or
and
ret
ret
or
(bad)
push
pop
(bad)
or
sbb
xchg
xor
cmps
sti
mov
or
jb
stos
xor
pop
fdiv
inc
sub
pop
and
js
cmp
out
sbb
xchg
dec
dec
xchg
fs
add
cli
idiv
mov
mov
js
fiadd
mov
cs
dec
pop
(bad)
cmp
sbb
out
call
nop
(bad)
mov
cmp
fscale
xchg
int3
xchg
icebp
std
je
inc
pop
test
into
adc
sti
shr
sbb
xchg
(bad)
jg
pop
jbe
add
mov
jnp
pop
movs
xor
dec
call
push
mov
cmps
sbb
leave
cmp
arpl
add
mov
add
dec
dec
dec
stos
sub
or
scas
mov
xor
shl
mov
xlat
push
add
sub
or
add
lods
add
test
mov
jno
inc
sub
adc
push
mov
xor
gs
popf
stos
das
mov
fmul
stos
push
ins
dec
sbb
or
fwait
push
aam
sub
ins
mov
jmp
les
mov
push
pop
or
pop
xor
mov
jae
push
pop
mov
rcl
and
in
dec
push
mov
fimul
inc
pusha
cdq
xchg
jno
popa
(bad)
mov
popf
lahf
not
dec
and
fcomp
pop
jns
(bad)
int
jbe
stos
outs
fmul
mov
out
les
in
or
jg
int
pop
xor
mov
in
add
or
xchg
ins
pushf
inc
xchg
mov
and
std
imul
mul
sub
cmp
jmp
jmp
out
adc
cmp
cmp
dec
sbb
mov
jno
int3
mov
and
ror
rcl
add
pusha
popf
rcl
movs
add
sub
daa
lds
pop
or
sbb
call
(bad)
cld
icebp
xchg
aam
inc
mov
xchg
movs
and
mov
dec
cmp
lahf
sub
ret
inc
sub
sbb
out
icebp
xchg
repz
push
pop
cld
pop
mov
cmp
pop
(bad)
stos
retf
ret
sbb
mov
movs
add
int
aam
sbb
data16
cli
mov
fist
mov
xor
add
mov
shl
scas
xchg
xchg
pop
mov
push
(bad)
in
pop
cmp
enter
(bad)
enter
sub
add
inc
imul
in
div
and
pop
or
add
or
adc
loope
sbb
or
hlt
adc
retf
cli
xchg
cmp
in
into
adc
sar
sahf
(bad)
mov
arpl
pop
scas
xchg
ins
fisubr
sbb
xchg
(bad)
jns
out
mov
dec
sub
mov
sbb
and
sub
and
or
fdivr
mov
add
mov
es
mov
std
cmp
stos
push
add
mov
jl
xchg
xor
mov
push
inc
sar
mov
arpl
fcmovu
je
mov
ja
std
jle
dec
adc
dec
push
jge
jmp
xchg
cmp
repnz
push
dec
jno
push
ja
outs
ret
aam
xor
lods
icebp
out
jg
xor
inc
or
fldenv
dec
ja
dec
pop
push
push
adc
test
mov
push
sahf
mov
sbb
pop
daa
mov
call
movs
or
rol
xor
jle
jno
sbb
sti
fs
mov
aas
outs
sub
inc
fnstsw
out
push
cli
mov
inc
mov
(bad)
push
dec
push
movs
aad
xchg
test
icebp
or
daa
(bad)
div
shr
jmp
pop
shl
mov
retf
ins
lods
(bad)
loope
in
or
push
mov
jae
cmp
dec
mov
adc
add
aaa
push
push
mov
xchg
jb
scas
sti
dec
repz
out
bound
push
mov
pop
sub
mov
mov
imul
out
push
repnz
jne
or
imul
imul
iret
outs
mov
pop
lahf
scas
xchg
cmc
adc
mov
xor
clc
mov
aam
mov
fidiv
sub
ret
or
xchg
dec
data16
sbb
(bad)
stos
pushf
and
sbb
test
inc
(bad)
clc
push
dec
pop
inc
ins
scas
js
lock
or
in
inc
sar
mov
jg
jecxz
or
rcl
mov
xchg
mov
cmp
inc
xchg
inc
enter
add
sbb
jecxz
mov
cmp
jno
aas
cdq
and
gs
out
jmp
xchg
icebp
aaa
fstp
movs
dec
add
std
mov
inc
retf
jmp
popf
mov
pop
into
ja
ja
and
pop
pop
mov
xchg
xor
mov
data16
test
cld
or
xlat
or
fnstsw
test
xchg
cwde
stc
ins
rcr
add
jae
sbb
ins
cdq
(bad)
pusha
inc
mov
pop
dec
xchg
xor
leave
dec
sub
fwait
ret
adc
or
dec
mov
or
cmc
pushf
push
adc
aad
adc
mov
jl
and
dec
out
mov
(bad)
pop
cmp
mov
outs
mov
out
stos
xchg
mov
xchg
ror
jne
inc
fidiv
xchg
dec
aad
pop
push
movs
and
xchg
adc
popf
ja
xor
sbb
cmp
sbb
push
jle
xchg
in
inc
ds
hlt
pop
ja
mov
or
outs
jmp
out
dec
mov
(bad)
icebp
neg
mov
imul
icebp
test
inc
mov
inc
xor
mov
fisub
add
rol
ins
and
repz
xchg
ins
arpl
and
call
jno
movs
mov
pop
inc
ror
push
rcr
sbb
(bad)
pop
nop
mov
loopne
fwait
jae
xchg
adc
sar
js
mov
data16
pop
loopne
cmps
sub
fwait
popf
xchg
jle
mov
fwait
lds
and
shr
clc
add
popf
add
sbb
ins
inc
int3
mov
push
fdivr
loope
sub
inc
xlat
cli
sar
cmps
xor
or
jle
clc
lea
scas
mov
sbb
test
iret
pop
cmps
(bad)
mov
jp
dec
sub
mov
push
mov
das
fild
fs
cld
push
bound
mov
push
dec
xchg
cli
dec
inc
cmp
fadd
sub
sub
dec
sub
or
dec
inc
pop
iret
push
cmps
in
sbb
inc
and
push
cmps
xchg
mov
sbb
sub
data16
scas
out
cmps
repz
mov
jl
cdq
add
jg
and
sub
pusha
cmps
dec
sbb
outs
adc
pusha
(bad)
test
jecxz
dec
pop
rep
xor
cmc
or
adc
xlat
jp
(bad)
imul
out
(bad)
shl
(bad)
or
gs
xlat
push
movs
(bad)
retf
ja
call
pop
inc
cmp
popa
in
je
adc
es
xor
(bad)
sub
xchg
pop
sbb
xor
xchg
rcr
push
mov
fmul
(bad)
jne
adc
fsub
ds
fwait
push
scas
cmp
inc
or
mov
aam
sub
push
push
inc
or
sbb
das
mov
xchg
fdiv
jge
sub
add
add
dec
jl
(bad)
dec
mov
int3
adc
retf
shl
inc
(bad)
popf
ins
lds
lods
jle
clc
movs
xor
mov
dec
movs
stos
inc
xchg
dec
sbb
pusha
out
fsub
mov
sbb
js
outs
daa
rol
shl
mov
repnz
mov
iret
add
xor
cmp
stos
sub
xchg
test
adc
movs
adc
pop
inc
mov
jmp
jge
mov
rcl
mov
xor
lahf
fscale
out
(bad)
mov
adc
pop
jns
gs
fwait
push
xchg
imul
jecxz
push
xor
dec
ins
pop
mov
xor
sbb
loopne
or
xchg
out
mov
xchg
imul
repz
and
dec
cmps
fadd
test
ds
adc
fnsave
push
sub
pop
jg
push
jbe
sub
sar
cmps
sub
into
gs
xor
rcl
repz
cmp
fs
ds
dec
rcl
lods
repnz
pusha
daa
add
pop
ins
inc
or
stc
cmp
ficomp
scas
mov
ja
xor
xchg
inc
jae
arpl
adc
push
mov
ror
jecxz
fbld
(bad)
jg
or
ins
add
pop
call
push
inc
inc
add
addr16
mov
test
and
idiv
retf
sbb
fwait
pop
and
xor
ja
add
xchg
xchg
jmp
arpl
lods
(bad)
stc
test
js
(bad)
cmp
pop
rcl
or
sbb
lock
shr
jle
pop
fdiv
inc
in
cmps
cmps
into
adc
mov
(bad)
lods
sbb
pushw
jns
das
and
mov
call
lock
ss
inc
or
xlat
jl
sub
or
pop
fcom
movs
cmp
enter
lahf
mov
ins
jge
repz
movs
sbb
pop
sti
ror
jb
dec
je
icebp
and
mov
ret
push
cmp
sub
inc
test
and
sbb
and
jbe
adc
push
lods
repz
xlat
ins
push
mov
jecxz
out
xor
sub
enter
sub
fiadd
not
cmp
ss
lods
sahf
inc
jb
fwait
pop
cld
xbegin
repnz
add
test
mov
fadd
pop
(bad)
cmp
dec
jge
scas
test
mov
jg
test
jg
pop
(bad)
or
(bad)
jg
je
shl
or
add
sub
xchg
repz
sar
mov
ret
cmp
div
pop
push
pop
mov
inc
imul
and
rol
pop
ins
xchg
pop
xchg
int
and
jno
mov
out
loope
sub
repz
push
xchg
popf
fimul
inc
popa
aad
cmp
adc
mov
movs
test
add
mov
push
ins
inc
lods
sahf
(bad)
sti
inc
push
dec
sub
fcomp
jmp
mov
sub
adc
adc
push
dec
pop
ror
retf
xchg
ja
scas
jo
ficomp
out
in
imul
dec
mul
out
xor
ds
dec
lods
jno
mov
jge
icebp
jecxz
sti
mov
xchg
aas
jg
cmp
mov
neg
(bad)
(bad)
enter
jecxz
popf
outs
sbb
cmps
(bad)
cs
popa
stos
test
mov
mov
add
inc
es
lods
retf
cld
add
jmp
xchg
fucomp
scas
cdq
fidivr
mov
xchg
aas
imul
push
js
sbb
adc
sub
add
cld
xor
pop
add
imul
arpl
inc
retf
dec
sub
sti
jecxz
faddp
xor
aaa
rol
sar
inc
adc
sbb
cmp
dec
push
mov
push
sub
imul
std
or
mov
add
jbe
pop
mov
dec
adc
jbe
inc
dec
data16
cwde
pop
xchg
pop
das
inc
ja
aaa
fcomp
add
pop
dec
pop
lods
push
push
ret
mov
jp
mov
pop
int3
in
fisubr
mov
test
xor
and
mov
inc
mov
or
in
add
mov
rcr
lods
fcmovbe
fistp
adc
pop
ins
mov
or
icebp
mov
xor
retf
ins
xor
dec
sbb
pusha
dec
adc
shl
jae
or
in
icebp
xor
popa
call
cli
or
fst
repnz
lock
cwde
push
aad
nop
mov
jns
fidivr
xor
push
pop
mov
or
pop
cwde
or
aaa
adc
pop
pop
or
sub
push
(bad)
ror
push
je
sbb
test
ins
cmp
ret
test
xchg
mov
adc
mov
repz
cdq
mov
jne
or
inc
lock
or
cmp
imul
nop
mov
pop
jg
add
daa
nop
fistp
retf
aas
shl
and
daa
sbb
daa
pop
daa
or
mov
add
cmp
test
(bad)
js
dec
aam
adc
sub
gs
cmc
xchg
ret
les
or
push
cld
dec
jecxz
out
ins
cmp
push
lahf
jmp
jge
push
sbb
sahf
sbb
sbb
or
aad
pop
adc
inc
or
scas
iret
push
fsub
clc
jmp
push
imul
lock
push
push
xchg
iret
mov
(bad)
jle
cmps
inc
ss
aad
dec
out
inc
dec
int
jb
sahf
(bad)
rcl
mov
les
sbb
js
add
mov
leave
cmps
pop
rcl
fs
cmps
int
sahf
pusha
lock
fstp
ds
int3
pop
fnstsw
jle
fld
or
push
pop
jns
mov
jecxz
jbe
sbb
xor
test
ret
mov
in
mov
les
dec
imul
and
mov
mov
stc
stos
add
adc
ficom
lods
adc
adc
stos
(bad)
add
ins
les
pop
mov
aad
xor
pusha
daa
jge
push
push
scas
inc
fs
push
mov
mov
mov
ja
jae
sbb
pop
(bad)
xchg
les
add
xchg
repz
pushf
xchg
loope
mov
test
dec
fcom
xor
hlt
ror
(bad)
sub
pusha
stc
push
les
dec
mov
(bad)
retf
in
and
popf
sub
pushf
mov
fstp
clc
sub
es
push
aam
xchg
out
mov
cmps
in
add
mov
sbb
cmp
push
xor
mov
and
fisttp
(bad)
hlt
push
xlat
loopne
pop
mov
push
push
pop
push
inc
fsubr
mov
dec
push
jmp
xlat
jg
shl
xchg
mov
mov
jno
pusha
add
mov
or
or
enter
xor
fistp
je
xchg
and
fist
push
std
pop
push
int3
jne
inc
outs
jmp
mov
dec
jns
mov
sbb
or
xchg
cdq
dec
mov
add
dec
sub
fdivr
mov
test
or
retf
and
daa
jbe
xor
sub
fist
fsub
push
(bad)
fucomp
loope
pop
jmp
add
and
fsubr
xor
aad
mov
mov
dec
in
xlat
sbb
dec
mov
les
pusha
xchg
xchg
iret
out
sahf
repz
sbb
stos
(bad)
jp
mov
inc
ret
idiv
cmp
dec
mov
adc
xchg
ins
sub
mov
pop
mov
jecxz
xor
xor
mov
outs
mov
test
imul
dec
rol
mov
ja
sbb
mov
aad
call
or
jge
jnp
cwde
js
xchg
leave
scas
inc
sbb
movs
dec
ss
call
inc
sub
push
add
adc
fst
pop
pop
jmp
and
bound
jmp
addr16
or
adc
call
mov
push
mov
loopne
adc
out
push
mul
stc
ret
ss
inc
imul
pop
or
push
adc
cmp
nop
adc
into
fldcw
xchg
je
out
fimul
xor
das
sbb
sub
push
fnstsw
nop
mov
sub
lods
stos
pop
cmp
or
mov
xor
mov
cmc
jecxz
sbb
adc
mov
jbe
or
cmps
jmp
addr16
sbb
aas
xlat
outs
fiadd
fidivr
aaa
jle
retf
mov
inc
(bad)
in
fwait
xchg
sahf
mov
or
xchg
frstor
cmps
xor
adc
inc
push
call
jmp
mov
daa
fwait
sbb
or
sbb
(bad)
sahf
sbb
loopne
sub
dec
(bad)
cmp
or
adc
retf
xlat
adc
mov
mov
retf
mov
(bad)
in
pop
mov
mov
mov
(bad)
loope
jecxz
sbb
push
movs
sbb
pop
mov
or
clc
mov
cmp
inc
or
and
aam
in
dec
mov
pop
push
lea
and
movs
mov
cmc
aad
xor
lods
cmp
loopne
imul
movs
sbb
mov
adc
movs
inc
aad
inc
pop
add
xor
add
pop
dec
call
mov
mov
leave
inc
mov
bound
(bad)
imul
mov
cmps
jg
cmp
(bad)
ret
jae
outs
rol
push
(bad)
inc
int
sbb
repnz
adc
mov
dec
pop
les
adc
fwait
adc
xor
add
stc
adc
loopne
loope
jb
dec
or
sbb
xor
enter
cli
jp
fwait
sub
shl
xchg
movs
xchg
push
sub
popw
cmp
sbb
mov
gs
fmul
jle
lods
out
xor
add
test
adc
mov
jle
jae
push
inc
imul
rcl
mov
fcom
mov
shr
stos
aam
test
retf
(bad)
mov
cmp
call
aas
sub
in
(bad)
mov
out
ins
ds
cmp
rcr
daa
in
les
(bad)
hlt
mov
sbb
mov
cmp
fist
xchg
jmp
push
out
and
xor
arpl
adc
jge
adc
cmps
or
imul
push
dec
add
ret
mov
and
jo
loope
pusha
jno
and
imul
cmc
(bad)
fnstcw
call
pop
enter
call
xchg
adc
mov
aaa
icebp
cmp
sub
ins
je
enter
mov
push
mov
sbb
sbb
xchg
mov
loopne
mov
push
mov
and
scas
jbe
test
repnz
mov
jns
add
inc
push
inc
popf
js
cwde
mov
hlt
ds
xor
xlat
in
iret
pop
mov
sbb
mov
jns
retf
cwde
cmp
call
jbe
inc
fimul
jnp
mov
jmp
(bad)
sbb
dec
jge
sbb
mov
mov
jp
out
jb
repz
jns
enter
lods
jnp
shr
icebp
pop
mov
bound
shld
dec
sbb
dec
movs
cld
(bad)
gs
jae
fwait
mov
outs
push
jge
shr
pushf
das
into
neg
les
mov
lds
lds
stos
push
ror
(bad)
int3
sti
jg
mov
jmp
or
and
push
test
mov
in
pushf
mov
fisubr
xchg
pop
sub
xacquire
fld
test
jmp
pop
(bad)
push
jmp
xchg
js
aad
(bad)
sub
xchg
(bad)
stc
fcomp
lock
sub
sub
pop
cmp
push
int
fcomp
pop
xchg
das
sub
adc
push
push
fldenv
mov
push
fiadd
lahf
mov
inc
lahf
fwait
and
shl
ss
aad
and
imul
fistp
inc
and
sub
ss
push
icebp
sub
or
sbb
cmp
enter
retf
(bad)
pop
dec
adc
push
and
and
test
mov
mov
scas
outs
std
test
jl
aad
(bad)
imul
out
pmulhuw
mov
sub
mov
mov
push
cs
mov
xor
out
inc
cld
sub
dec
pop
cdq
lds
xor
xor
jmp
outs
adc
or
jmp
enter
dec
or
mov
cwde
push
jecxz
pop
out
(bad)
mov
mov
mov
xchg
sbb
mov
test
std
stos
out
fs
lahf
loope
mov
call
mov
push
xor
pop
push
dec
cld
call
mov
call
lods
shr
fcom
test
cmp
xchg
cmp
(bad)
pop
addr16
mov
pop
gs
mov
add
or
in
je
cmp
std
iret
xchg
lea
jecxz
call
in
jmp
jne
xchg
test
push
xchg
mov
data16
into
cmps
leave
loopne
test
addr16
xor
(bad)
shl
scas
cmp
(bad)
test
mov
aas
pop
and
push
mov
or
fdivr
jmp
jae
ins
rcr
out
js
outs
sbb
test
add
ja
movs
or
sahf
mov
xor
stos
sbb
jecxz
dec
test
sub
xlat
mov
stos
test
mov
mov
imul
lock
(bad)
dec
test
pop
js
mov
in
movs
rcl
repnz
dec
mov
(bad)
cdq
int3
hlt
mov
jmp
pop
fld
mov
cwde
arpl
xchg
(bad)
in
fdiv
icebp
pusha
push
inc
movs
rcl
adc
dec
lea
pop
sub
stos
xchg
pop
scas
mov
mov
cmc
mov
pop
mov
(bad)
dec
pop
sahf
adc
loopne
lods
sar
xor
pop
leave
sar
aas
call
loopne
dec
inc
pusha
div
jnp
js
mov
aaa
push
call
call
cmp
or
loop
fstp
mov
fnsave
jmp
pop
mov
out
lods
leave
mov
stos
ss
fisub
inc
retf
pop
sbb
sti
cmp
stos
pop
adc
cmc
lods
sbb
jp
inc
dec
mov
mov
nop
mul
cmp
xchg
pop
lods
jmp
xor
mov
add
fmul
cmps
mov
rcr
xor
fdivrp
dec
inc
inc
pop
les
push
addr16
rcl
hlt
cmp
out
mov
push
xor
cwde
dec
ins
(bad)
sub
jg
jne
push
pop
adc
xor
mov
pop
xor
cmps
push
mov
div
xchg
xchg
aaa
xchg
sbb
xchg
sub
(bad)
xor
pop
retf
jmp
test
cmc
rcr
xchg
(bad)
mov
cmps
cmp
shl
std
xchg
xchg
xchg
pop
repnz
aad
ss
in
mov
mov
ret
xchg
xor
repnz
mov
pop
adc
cmps
cmp
sbb
cli
clc
pop
adc
das
push
pop
add
jmp
fimul
movmskps
ret
jno
xor
call
push
pusha
push
add
ret
xchg
sbb
retf
enter
push
dec
scas
xor
or
sub
(bad)
cli
jle
push
xor
lods
push
dec
and
mov
dec
ss
mov
or
mov
mov
and
mov
mov
inc
sbb
dec
in
je
in
mov
sub
mov
push
adc
popf
stc
sbb
xor
jmp
cmp
pop
inc
or
ss
jle
repnz
and
adc
jg
(bad)
jge
xor
sbb
adc
stc
xchg
mov
jl
pop
push
adc
pusha
jle
pop
dec
mov
(bad)
cmps
or
mov
jp
jl
mov
mov
hlt
popa
dec
xchg
add
mov
add
pop
dec
ror
sbb
js
ja
or
imul
sbb
sub
in
mov
mov
icebp
jae
adc
mov
popf
cli
mov
push
ror
mov
push
add
jl
ret
push
movs
xchg
pusha
sbb
int
and
push
push
gs
(bad)
sbb
mov
jecxz
fucom
pop
outs
push
movs
xlat
data16
fidiv
and
dec
dec
jne
adc
xchg
cmp
jmp
jmp
sbb
mov
xchg
mov
cli
jo
xchg
and
js
cld
jb
mov
imul
push
loopne
outs
(bad)
(bad)
lods
or
pop
mov
fs
dec
aam
push
in
sub
cmp
and
mov
push
cmp
dec
cmp
dec
(bad)
(bad)
fwait
jg
inc
cmp
inc
outs
jle
pop
imul
xchg
in
test
aaa
or
mov
clc
mov
mov
lock
cli
sub
mov
jl
sub
mov
jp
add
mov
add
mov
dec
xor
fmul
xchg
xor
lock
add
adc
cmp
shl
jae
pop
xor
cmps
enter
in
std
repnz
and
xchg
cmp
mov
mov
jmp
mov
cmp
mov
and
sub
fwait
push
cmps
aam
adc
inc
and
or
mov
xchg
inc
push
pop
push
(bad)
in
inc
sbb
(bad)
std
jmp
mov
in
jb
aaa
cmp
mov
xor
xchg
push
xchg
inc
(bad)
cmp
cmp
push
push
adc
add
call
(bad)
jle
xor
xlat
jmp
mov
lods
sub
(bad)
mov
ficomp
xor
test
xchg
loop
xor
jecxz
jmp
xor
jmp
cmp
push
push
mov
lods
jns
test
les
icebp
shl
cdq
or
cmc
dec
push
push
jmp
mov
je
sub
pop
dec
in
cmp
dec
xor
into
cmps
mov
push
cmps
cwde
xor
pop
addr16
cli
pop
dec
loope
mov
jle
adc
adc
aaa
mov
xchg
jbe
out
cmp
in
xor
cld
mov
out
push
cld
pop
sbb
xchg
neg
jmp
add
imul
push
dec
cld
dec
stos
retf
pop
mov
cld
xor
ror
clc
fst
xor
lods
push
push
adc
in
sbb
mov
cwde
inc
call
ss
cwde
les
cdq
cmp
sub
mov
pop
iret
mov
mov
outs
lods
call
stos
ror
push
dec
cs
fdivr
loop
adc
sbb
add
sub
mov
pop
pop
into
outs
jb
icebp
xor
ss
sti
ret
xchg
in
jno
lock
jecxz
mov
nop
mov
lock
clc
xchg
or
(bad)
fsub
addr16
and
or
xor
pusha
jae
popa
aad
sbb
dec
mov
pop
cmps
adc
jp
xchg
(bad)
mov
loop
dec
pop
in
push
mov
xor
push
mov
jo
push
cmp
push
clc
or
out
movs
cmp
push
jo
sbb
ins
xchg
hlt
jge
das
cs
pop
mov
pop
retf
push
pushf
(bad)
mov
(bad)
cdq
jb
xor
xchg
pop
lock
pop
jg
mov
mov
pop
xchg
not
or
in
sub
push
push
sbb
inc
dec
adc
out
call
xlat
test
jle
push
pop
test
dec
push
dec
dec
mov
loope
cs
pop
fs
lea
shr
xlat
cmp
cmps
mov
dec
std
mov
dec
push
xor
xchg
cmp
rcr
mov
or
(bad)
hlt
in
(bad)
mov
scas
repz
adc
je
jno
jo
repz
and
dec
push
(bad)
shr
ins
xchg
or
cmp
mov
sub
adc
push
xchg
jecxz
push
sub
or
jge
xchg
and
fisubr
popa
mov
mov
out
outs
ror
out
scas
sbb
dec
repnz
jns
das
mov
add
call
sub
push
add
dec
mov
or
sub
(bad)
pushf
jnp
outs
mov
and
test
xchg
shr
stos
push
idiv
fcom
mov
mov
clc
addr16
out
xchg
or
es
int3
outs
pop
outs
pop
xor
inc
jge
xchg
push
(bad)
clc
stos
push
jl
pop
out
pop
sbb
pop
popf
mov
mov
jle
mov
or
cmps
sbb
add
lds
(bad)
into
push
mov
loop
push
mov
loope
pop
dec
shl
and
jno
dec
or
jo
or
add
jle
in
movs
adc
dec
dec
jmp
push
push
add
out
loope
repnz
dec
or
xchg
bound
inc
jle
sbb
pop
sbb
mov
lds
lods
je
(bad)
das
sub
movs
jg
call
cmp
sti
div
pop
popa
cmps
rol
xor
test
mov
aaa
or
inc
mov
jp
adc
lea
mov
jecxz
outs
scas
mov
das
out
push
or
cmp
inc
scas
fs
in
test
sub
test
aaa
adc
pop
or
cmp
das
test
inc
mov
inc
adc
sti
push
fwait
js
pushw
jg
and
adc
xchg
mov
and
rcr
popf
pop
add
lea
sub
(bad)
xlat
aad
ficom
sbb
or
mov
fstp
arpl
pop
xor
push
neg
cmps
pop
lea
sub
mov
mov
xchg
lahf
push
lahf
mov
jg
push
jg
in
jg
add
test
push
sbb
push
jnp
mov
and
neg
jne
rcr
pop
stc
fiadd
ret
fnsave
loope
push
daa
(bad)
adc
xor
stos
add
jo
jae
pop
aas
adc
sahf
mov
add
je
out
fs
jl
mov
jp
jp
mov
fidiv
cmps
inc
outs
sahf
cmp
sbb
inc
cmc
inc
sbb
cmp
stos
shl
fwait
dec
dec
loop
fiadd
(bad)
fist
loopne
in
add
sub
inc
into
xchg
and
xchg
hlt
lahf
adc
sbb
jne
or
stc
lods
cld
fild
repz
sbb
adc
cmps
mov
xchg
mov
loopne
xor
jo
push
std
(bad)
cli
imul
mov
test
jbe
repnz
sbb
jb
jns
(bad)
dec
(bad)
jecxz
out
rcl
xor
and
je
call
adc
movs
or
cmp
jmp
lahf
pop
xor
(bad)
xor
daa
scas
jne
cmps
push
scas
ret
and
xor
repz
adc
push
cmps
mov
adc
sbb
mul
sub
xor
xchg
cdq
call
pop
leave
movs
pop
lea
sbb
fidivr
fistp
cmp
xchg
mov
xor
inc
dec
sub
jecxz
sahf
dec
jno
in
xor
inc
pop
ror
out
fimul
int
jb
test
xchg
and
clc
xor
rcr
std
push
fisubr
add
dec
stc
sbb
ret
or
ret
jne
or
fisubr
(bad)
sbb
push
sbb
in
scas
jne
push
sbb
leave
jmp
leave
mov
fcmovb
mov
retf
push
cmp
add
daa
xchg
cmp
sbb
sbb
push
shl
loop
mov
ins
loop
dec
pop
out
enter
nop
ficom
fs
movs
mov
mov
(bad)
adc
cs
jle
pop
js
push
int3
sbb
je
add
mov
scas
mov
add
sub
pop
add
ficom
fist
mov
in
inc
jecxz
push
adc
cmp
jns
jnp
add
lds
add
add
test
jns
call
mov
mov
fdivr
xor
push
adc
aad
int3
jbe
sar
mov
(bad)
sub
inc
push
dec
sub
pop
push
scas
arpl
jge
add
mov
sar
cmp
lahf
xor
icebp
dec
dec
into
sbb
shr
push
pop
mov
sbb
scas
and
pop
jnp
(bad)
xor
ds
inc
rcl
dec
rcr
push
je
pop
dec
into
out
jo
cli
sub
pop
(bad)
xchg
pop
cmps
pop
pusha
call
std
mov
add
xchg
pop
xor
int3
pusha
jl
fnsave
xchg
add
bound
mov
outs
rcl
pop
xor
cmp
pop
into
sub
js
or
jle
cmp
lock
sub
jmp
(bad)
stos
jb
loope
push
mov
mov
xchg
das
retf
loop
imul
call
dec
shl
(bad)
div
jecxz
sbb
adc
or
mov
pusha
push
fild
pop
jle
add
sub
ret
(bad)
call
pop
inc
dec
fisub
into
add
pop
(bad)
xlat
(bad)
xor
add
and
ficom
int3
aam
jnp
fdiv
out
leave
jmp
or
pop
hlt
scas
xchg
in
pop
stos
sub
iret
pop
cmp
mov
mov
lods
sub
sahf
imul
mov
rcr
movs
push
xor
jle
sbb
ficomp
lods
mov
rcr
dec
cmp
mov
xor
add
imul
popa
mov
test
and
popf
hlt
sbb
call
and
cmp
sbb
dec
and
mov
out
jmp
and
aas
mov
dec
ret
jno
pop
movs
arpl
jmp
repnz
out
add
test
out
cmps
nop
into
jle
xor
and
jmp
pop
pop
or
mov
aad
jg
cmps
mov
adc
(bad)
cld
std
mov
jg
test
and
pushf
inc
mov
inc
cmp
ins
ret
cld
jmp
adc
adc
jp
hlt
jns
and
inc
in
retf
clc
mov
adc
ins
jmp
push
xchg
inc
fwait
jb
ja
aad
add
aaa
xor
daa
and
adc
das
add
cmps
mov
cdq
das
adc
les
rol
pop
mov
fisub
cmp
pop
loope
test
or
and
in
inc
je
mov
movs
pusha
hlt
xlat
stos
jg
mov
dec
bound
inc
ss
out
sti
and
push
das
test
data16
mov
pop
aam
loope
jp
xchg
mov
add
cmp
inc
(bad)
mov
sbb
jbe
movs
jo
stc
in
in
iret
les
out
int
sub
repnz
xor
mov
mov
xchg
sub
cmc
(bad)
mov
sub
xchg
retf
in
push
in
or
mov
push
pushf
mov
fwait
adc
push
pop
rol
inc
xchg
and
movs
jp
or
xchg
cmps
xchg
mov
int
popa
retf
mov
inc
pusha
push
pop
(bad)
and
(bad)
cmp
mov
test
or
push
and
pushf
pusha
add
leave
test
test
pop
xor
adc
adc
test
outs
lods
jl
xor
cmp
xchg
add
rcl
test
add
push
push
das
add
fcom
pop
jg
sub
hlt
pop
cmp
enter
jae
xchg
popf
and
adc
mov
add
dec
or
and
push
push
call
ret
dec
push
fst
inc
sar
push
jmp
mov
jp
loope
sbb
and
mov
out
in
jmp
jb
push
ss
div
jae
cmp
cmps
dec
inc
xchg
das
mov
shr
cs
dec
xchg
bound
pop
fcomp
or
cmp
xor
rcl
inc
scas
mov
or
addr16
inc
imul
fs
adc
call
mov
mov
mov
mov
cmp
lahf
hlt
in
ins
imul
jmp
(bad)
pop
aam
xchg
push
out
pop
in
jmp
into
sbb
enter
mov
pusha
mov
and
push
in
cmc
into
push
sbb
mov
jmp
push
retf
and
leave
retf
push
cmps
cmps
jmp
aaa
les
and
push
movs
dec
fld
mov
xor
mov
enter
push
dec
add
pusha
and
ds
mov
int
cmp
pop
(bad)
mov
pushf
int
test
sbb
popf
xor
aad
jp
and
xchg
cmp
lahf
push
pop
adc
les
cdq
aam
bound
pusha
adc
ror
mov
or
fidivr
in
cmp
adc
push
popa
sbb
mov
fistp
jmp
in
ins
int
hlt
cmp
inc
fs
out
js
push
jns
sub
mov
adc
mov
xchg
pop
ret
loope
ret
jecxz
out
imul
jmp
shr
cmp
jecxz
inc
sbb
gs
ds
movs
(bad)
in
inc
mov
jp
mov
push
fs
lahf
push
out
aaa
xor
dec
add
xchg
xor
hlt
jbe
mov
clc
mov
jno
out
mov
dec
jnp
pop
mov
dec
leave
gs
xchg
cmps
dec
icebp
fwait
daa
push
test
sub
ret
xchg
mov
jmp
fcomp
outs
repnz
xor
add
push
data16
mov
sub
inc
sahf
adc
jmp
jae
push
fiadd
sbb
and
cmp
dec
les
pop
test
scas
mov
lds
dec
jmp
popa
test
and
fsub
mov
dec
out
fist
adc
cmps
imul
addr16
addr16
xlat
or
mov
ins
sub
cld
pop
jb
(bad)
outs
pop
cmp
inc
push
jb
and
not
aam
sbb
inc
je
dec
scas
lahf
aaa
ficomp
xchg
cmp
fstp
mov
and
jne
pop
hlt
js
add
lods
xor
sbb
cmp
and
(bad)
pop
xor
add
jns
jge
xor
popa
mov
aam
lods
cmp
xchg
pop
add
gs
adc
mov
hlt
cwde
xchg
cmp
cmp
scas
mov
sub
pop
add
loopne
adc
push
sub
add
add
(bad)
and
leave
add
retf
add
fmul
fimul
pop
or
push
test
mov
fstp
xchg
adc
repnz
bound
xchg
rcr
mov
stos
sub
adc
inc
(bad)
out
dec
dec
retf
push
shr
or
ja
std
dec
mov
inc
data16
push
inc
ficom
popf
sbb
popf
add
mov
or
adc
repnz
les
mov
or
sub
or
fsub
mov
lods
push
std
inc
and
sbb
call
add
add
pop
push
jl
stos
jecxz
ins
test
dec
jnp
xchg
addr16
mov
or
cdq
les
call
aad
rcl
jge
sub
cmc
mul
les
scas
cmp
neg
cld
mov
pop
std
pop
nop
in
repnz
push
mov
ds
sbb
push
dec
jmp
fcmovnbe
mov
addr16
stos
adc
sub
xchg
mov
dec
movs
loope
push
out
dec
inc
sahf
cmp
xor
sub
hlt
jne
popa
mov
pushf
outs
mov
stos
push
or
mov
fcmovbe
ins
xchg
adc
cmp
(bad)
sbb
adc
or
cmp
pop
push
out
movs
mov
loop
dec
imul
inc
sub
lods
mov
das
sub
xor
xor
or
and
dec
xchg
xchg
adc
aad
arpl
add
pop
jae
iret
ror
out
xchg
fdivp
movs
cwde
out
cmc
in
js
inc
out
int
imul
(bad)
in
add
call
jle
jb
out
pop
sbb
fisttp
imul
push
xor
xchg
add
dec
rol
sti
std
into
sbb
ror
sbb
cmp
inc
mov
mov
jecxz
jmp
xor
ret
mov
mov
jge
push
add
les
test
cmp
ret
test
inc
movs
sbb
push
jbe
xchg
fstp
push
dec
mov
sub
out
inc
adc
mov
repnz
push
fwait
enter
xor
in
sub
rcl
xchg
sub
jns
cmp
test
movs
mov
rcl
ror
jnp
stos
ret
add
call
dec
cmp
ror
outs
jle
sub
loope
cdq
inc
outs
repnz
addr16
jmp
loop
es
mov
call
into
pop
lods
aam
jecxz
dec
movs
push
pop
(bad)
pop
les
mov
mov
sar
imul
data16
popf
cmp
mov
popa
inc
jno
test
inc
(bad)
ja
ja
and
push
call
push
push
mov
aaa
iret
inc
cs
push
mov
fs
int3
cs
sub
adc
test
ror
mov
xchg
sub
adc
jp
pop
sub
push
dec
or
sub
and
es
inc
mov
cmp
movs
push
or
cdq
jle
test
(bad)
mov
and
icebp
pop
push
int3
fincstp
repz
push
ret
mov
cmps
adc
test
cmps
pushf
jb
in
sub
into
jge
dec
mov
into
cmc
fwait
sub
push
inc
jnp
aad
add
push
xor
fistp
es
bound
xor
pop
dec
jbe
in
xchg
frstor
fs
pop
mov
ss
adc
jp
inc
js
dec
xor
inc
mov
push
rol
mov
mov
xor
xor
in
jno
pusha
mov
retf
push
sub
mov
adc
lods
push
mov
mov
mov
shr
ja
stc
neg
ins
fsub
pop
out
retf
xchg
xchg
jge
jle
mov
and
pop
movs
rol
fcom
or
sub
test
cmp
add
xchg
fwait
mov
imul
mov
nop
(bad)
adc
js
inc
push
(bad)
cli
push
mov
mov
sbb
xchg
or
add
scas
inc
cli
mov
dec
xor
in
xchg
daa
fs
in
clc
movs
xchg
dec
pushf
ror
inc
jne
mov
inc
and
outs
fmul
mov
push
sub
out
mov
retf
dec
mov
fdiv
add
jb
not
stos
not
push
push
ror
inc
popa
adc
(bad)
je
mov
cld
xchg
shl
repz
pop
sti
add
mov
(bad)
in
mov
mov
mov
(bad)
movs
xor
jo
jmp
cwde
stos
push
sar
jmp
popf
mov
dec
jmp
and
ja
mov
aas
push
mov
and
cdq
repz
ja
mov
sub
mov
dec
xor
leave
sbb
mov
lahf
mov
sub
paddsw
cmps
sbb
push
into
cli
dec
fsub
mov
les
pop
ficomp
xchg
ja
jo
xchg
cmc
mov
imul
adc
pusha
mov
adc
jne
push
(bad)
jnp
cmp
shr
and
movs
imul
loopne
mov
jae
and
in
add
movs
fprem
stos
cld
cdq
adc
cmps
sub
pop
(bad)
xchg
mov
mov
shr
xchg
lods
mov
fdivrp
hlt
push
call
sub
(bad)
daa
push
rol
test
and
mov
in
fisubr
fst
(bad)
dec
sub
cmp
cmps
push
scas
pop
add
cli
inc
sbb
xchg
or
sub
loope
mov
cmp
sti
lods
shl
jno
sbb
pop
cs
sub
sub
in
movs
push
nop
mov
cwde
jge
xor
cmp
mov
ror
mov
dec
(bad)
(bad)
jge
mov
and
inc
cwde
sub
inc
mov
ret
aam
mov
fsubr
and
pop
(bad)
pop
lods
sbb
push
lock
adc
pop
in
mov
mov
test
and
call
icebp
nop
fsubr
std
loope
stc
mov
and
mov
jbe
sub
mov
inc
or
cmp
and
cmp
out
call
lahf
and
repnz
xchg
push
cmove
jmp
dec
neg
sbb
push
out
xor
icebp
outs
fmulp
and
jns
mov
or
add
add
xchg
xor
push
fstp
pop
aaa
int3
mov
sbb
ror
xchg
pop
inc
dec
dec
or
sub
and
ret
pop
shr
or
hlt
lds
out
cmp
cmp
xchg
pushf
test
or
pop
sub
(bad)
inc
or
outs
jns
call
push
dec
mov
and
pop
adc
sbb
mov
int3
call
inc
mov
xchg
scas
and
jns
mov
jp
jbe
mov
arpl
add
ret
jmp
and
mov
test
sub
cmps
stc
push
popa
adc
dec
loop
jg
and
bound
fadd
fdivr
sbb
loope
pushf
outs
pushf
mov
lods
jmp
scas
enter
in
test
add
dec
push
test
movs
xor
neg
bound
inc
enter
cmp
bound
in
jo
xchg
xchg
xchg
mov
dec
lods
(bad)
dec
lods
inc
(bad)
call
inc
and
mov
fcomp
pop
scas
mov
mov
inc
pop
aad
jbe
dec
and
movs
xchg
pop
xchg
xchg
jmp
mov
mov
mov
rcr
call
pop
add
cld
sub
aad
(bad)
cli
push
lock
push
jno
std
dec
jle
dec
hlt
loopne
xchg
fabs
outs
test
out
in
lahf
jmp
xchg
je
mov
lock
cli
xchg
je
jo
in
retf
shl
add
fwait
or
(bad)
mov
imul
sbb
sub
adc
xchg
add
aam
cmp
pop
(bad)
lds
mov
loop
mov
cs
in
push
(bad)
lds
mov
jl
enter
adc
inc
fwait
mov
sbb
pop
mov
push
cwde
mov
iret
and
sti
or
out
pop
mov
adc
mov
fisubr
pop
fdivr
mov
jae
rol
push
shl
jg
cmp
xchg
xor
or
shr
ja
add
cwde
sbb
mov
xchg
sbb
and
or
cmc
cli
dec
add
mov
or
dec
arpl
pop
mov
es
jnp
scas
cmp
retf
icebp
jg
enter
fidivr
xchg
mov
mov
(bad)
sub
imul
pop
cmps
retf
and
std
pop
imul
stos
dec
call
pop
mov
mov
push
add
out
jmp
xor
test
xchg
dec
fld
mov
addr16
sbb
inc
dec
mov
test
nop
or
pop
cmc
sub
add
cmp
push
sbb
and
pop
or
xchg
adc
and
ret
loope
mov
inc
mov
inc
(bad)
jp
and
in
jae
push
std
outs
leave
shl
test
cs
pop
daa
inc
lahf
mov
jbe
pop
scas
ficom
or
cs
popf
jne
lahf
push
test
retf
xchg
adc
retf
outs
pop
(bad)
fwait
mov
mov
loop
stos
daa
adc
and
push
es
pop
nop
mov
xor
jmp
xchg
movs
mov
js
sub
xor
outs
test
fnsave
push
int3
push
ins
xor
jl
out
outs
mov
icebp
stos
cmps
sar
jl
mov
xor
je
sbb
xor
xlat
dec
sub
ins
mov
call
sbb
shr
fnstenv
shr
mov
xchg
fbstp
dec
pop
gs
and
dec
loope
xor
repz
frstor
xor
adc
int
cmp
adc
mov
jmp
mov
dec
in
cmp
inc
nop
sub
cmp
push
std
jle
inc
push
dec
dec
in
adc
add
jae
sub
adc
aam
jmp
mov
mov
cmps
test
cmps
out
cmp
rcl
mov
dec
lds
mov
movs
dec
rol
jae
je
mov
push
mov
xchg
test
cmp
add
mov
sar
push
xor
ja
cmps
mov
jns
sub
(bad)
dec
in
push
dec
fucomi
and
xchg
push
out
lahf
jnp
mov
push
pop
xchg
ret
loope
sub
cmp
sbb
adc
and
popf
adc
mov
mov
push
dec
xor
ret
adc
or
in
mov
inc
mov
sub
xchg
js
(bad)
cdq
retf
push
xchg
jg
pusha
pop
xlat
pop
sbb
sub
js
dec
pop
adc
int3
mov
cli
cmps
mov
xchg
inc
das
lahf
add
aam
in
push
sub
or
icebp
pop
jmp
in
cli
sub
mov
test
jo
push
sub
push
cmp
mov
mov
jns
pop
xchg
xchg
rcl
in
jnp
ret
xor
(bad)
jg
inc
inc
dec
pop
leave
imul
repz
es
fwait
repnz
mov
mov
xchg
(bad)
movs
in
popf
push
enter
xchg
stos
cmp
jp
push
and
xor
in
neg
mov
ja
jge
pop
or
mov
movs
jns
out
fidiv
inc
iret
ja
or
cmp
and
call
xchg
rol
cmp
xchg
or
xchg
xor
cwde
add
(bad)
(bad)
aam
sbb
(bad)
jne
in
and
in
pop
mov
sbb
cmps
pushf
aad
jne
jmp
loopne
cs
retf
cmps
push
dec
jno
sub
out
sub
adc
(bad)
ret
inc
jg
xor
std
imul
das
ret
sbb
enter
cmps
stos
xchg
(bad)
fsubr
push
mov
push
push
into
xor
sti
xchg
mov
ficom
xchg
xchg
sub
inc
sub
adc
mov
jne
mov
adc
mov
aaa
adc
sbb
push
mov
sbb
dec
add
and
pop
pop
loope
pop
leave
loop
pop
dec
pusha
nop
idiv
dec
xor
iret
mov
mov
aad
xchg
inc
mov
retf
xor
enter
mov
or
rcl
mov
das
xchg
xor
pop
cwde
inc
ss
repz
pop
(bad)
loope
fld
into
cmp
xchg
outs
ret
(bad)
cmp
shl
(bad)
mov
das
xor
retf
mov
js
add
mov
retf
jo
mov
cmp
and
push
cmp
imul
pop
or
cli
aas
mov
jno
nop
lea
xor
xchg
xchg
mov
and
aaa
imul
mov
xor
xor
pushf
xor
dec
call
or
sub
xor
es
add
mov
inc
mov
adc
fwait
sub
mov
mov
ret
into
adc
(bad)
fst
push
in
in
pusha
add
add
mov
mov
and
int
dec
inc
xchg
dec
or
dec
lock
push
(bad)
retf
mov
cld
mov
cmp
push
mov
jle
jecxz
pusha
xchg
es
mov
sub
loop
sub
cmps
mov
jns
out
xor
add
mov
xor
out
jbe
pushf
sub
pop
pop
and
mov
fistp
fnstenv
xchg
lea
mov
xchg
mov
(bad)
jns
bndstx
(bad)
clc
nop
aas
adc
inc
inc
mov
adc
retf
mov
mov
bound
ins
mov
sbb
push
ins
adc
add
and
outs
adc
add
pushf
push
les
daa
mov
fild
loope
aaa
mov
mov
(bad)
hlt
stos
jnp
sub
mov
push
mov
mov
movs
mov
repz
les
pop
scas
push
arpl
retf
(bad)
int
xchg
call
cmp
inc
in
xchg
loop
js
test
dec
popa
aaa
imul
enter
adc
add
fld
movs
adc
xor
clc
sar
xchg
gs
je
retf
sbb
jp
inc
(bad)
or
mov
call
mov
pop
mov
int
push
push
nop
test
test
mov
aam
daa
jbe
xor
push
jge
rcl
mov
adc
xor
xchg
push
jmp
lods
push
sar
popa
add
int3
xchg
fiadd
cmp
int3
mov
cwde
inc
xchg
mov
(bad)
aas
pop
ficom
cli
push
xor
push
test
pop
les
add
das
mov
mov
mov
inc
lods
cmp
jmp
add
push
cs
retf
movs
popa
push
jne
and
jp
xchg
mov
xchg
cs
fiadd
mov
shr
jne
js
test
clc
mov
int
fsubrp
xchg
test
ss
mov
push
inc
push
add
call
cmp
push
lock
sbb
cmps
je
(bad)
out
mov
test
sub
lock
sbb
fsub
and
lea
inc
test
idiv
mov
(bad)
xchg
popf
lock
inc
ret
push
mov
pop
daa
mov
pop
test
jns
(bad)
lods
jge
ja
cmp
pop
movs
mov
shr
xchg
cmc
mov
or
xor
call
cmps
ds
int3
test
mov
outs
(bad)
xor
pop
retf
mov
imul
pop
jp
adc
adc
xor
sub
pusha
mov
jnp
xchg
das
pop
rcl
mov
dec
adc
adc
js
mov
aam
iret
int
popf
leave
pop
mov
fwait
sub
call
ss
out
aad
cmp
or
into
pop
loop
mov
xor
jb
je
jmp
xchg
outs
nop
es
sbb
inc
cli
mov
mov
cmp
add
mov
lods
cwde
jb
sub
jnp
test
sub
lods
out
rol
mov
dec
mov
inc
test
push
repz
jle
cdq
pop
imul
add
mov
dec
dec
push
jae
xchg
test
or
cmp
int
out
xor
imul
or
int3
cld
xchg
inc
iret
dec
out
sub
dec
std
pop
(bad)
repz
leave
lods
aas
sub
outs
mov
in
sti
jb
fs
pop
xchg
jo
xor
mov
jle
jns
add
stos
sub
mov
mov
fild
ds
icebp
rcr
outs
outs
inc
ja
add
int
sub
and
mov
cmp
sbb
cmp
rol
(bad)
(bad)
push
adc
leave
inc
and
jg
push
jge
cmc
aas
test
add
and
mov
cld
cmp
push
sar
push
inc
cmp
lds
into
into
and
sbb
push
sub
repz
ret
sar
addr16
sbb
xchg
cmp
cmp
clc
jp
jge
ror
sub
clc
pop
test
or
fnsave
sub
sbb
push
scas
out
(bad)
data16
mov
ficom
xor
jnp
repnz
push
mov
repz
mov
xlat
mov
mov
push
jae
or
xor
xor
das
dec
repnz
xor
inc
cmps
fimul
popw
clc
push
mov
jg
cdq
xchg
pop
ror
cwde
iret
pusha
cdq
mov
mov
adc
in
rcr
in
sub
mov
cdq
fwait
mov
lahf
xlat
mov
in
push
jnp
xchg
test
ins
movs
vpshad
or
repnz
into
jbe
adc
xchg
jl
add
mov
or
cmc
scas
(bad)
icebp
cmp
adc
mov
retf
(bad)
in
sbb
shr
dec
mov
cmps
(bad)
pop
adc
ja
lahf
es
xchg
ror
xor
add
xchg
inc
stos
adc
adc
jns
xchg
pop
es
sti
dec
call
dec
mov
jg
mov
and
jp
add
iret
cmp
cmc
test
cdq
hlt
lods
(bad)
mov
enter
mov
xchg
jmp
add
retf
mov
pop
inc
cmc
pop
imul
ret
stos
out
sub
mov
or
stos
xchg
cmp
jbe
call
imul
fadd
push
stos
int3
mov
cmp
sbb
fcom
mov
sbb
mov
inc
aas
inc
pop
cmc
shl
jle
xchg
stc
cmp
mov
out
xchg
(bad)
fsubr
dec
je
push
mov
adc
sub
pop
pusha
inc
mov
inc
fst
push
push
xchg
mov
jbe
dec
mov
outs
pop
push
out
pop
push
xor
fimul
stos
push
jmp
pop
sub
imul
jecxz
mov
xor
shl
test
inc
push
ret
or
mov
es
jno
pop
cmp
inc
ret
fsubr
aas
test
adc
mov
jge
pop
setl
jp
sbb
jl
and
inc
pop
mov
mov
cwde
clc
mov
fadd
shl
gs
cmc
jb
jl
pop
cs
jmp
sub
rol
push
pop
inc
inc
inc
sub
pop
add
outs
jp
jge
mov
mov
mov
movs
in
xor
push
inc
cli
adc
inc
inc
mov
mov
xchg
(bad)
fld
jl
sub
ja
aas
(bad)
pop
mov
mov
mov
mov
sahf
add
aaa
cmps
in
mov
jl
popa
iret
push
and
and
mov
into
test
push
in
and
push
cmp
jl
fmul
dec
xor
jl
retf
cdq
add
push
loop
cdq
outs
push
sub
xchg
push
rcr
idiv
add
mov
dec
(bad)
enter
je
sbb
gs
or
test
or
dec
fstp
pop
cmp
cli
add
pop
jb
or
sub
sub
pop
push
frstor
mov
push
out
(bad)
mov
(bad)
xchg
push
inc
daa
xor
iret
mov
inc
movs
into
js
inc
mov
mov
xor
(bad)
fs
mov
sbb
jmp
mov
push
mov
sbb
sub
pushf
cli
mov
dec
scas
mov
pop
div
adc
ins
test
mov
or
sub
xor
aam
outs
mov
leave
xor
jb
cmp
sub
daa
jecxz
cli
fbstp
xchg
mov
in
ss
mov
mov
xor
and
or
xchg
mov
stc
imul
push
(bad)
push
icebp
add
push
cwde
shr
mov
and
cmc
jg
mov
cmp
xor
sub
sahf
repz
fiadd
cmps
xchg
js
rcr
sbb
jp
scas
cmp
aam
push
or
mov
and
mov
rol
mov
add
dec
sbb
xchg
movhps
cmp
push
popa
test
mov
pop
xor
and
push
les
xchg
cmp
sbb
dec
test
cmps
or
sub
arpl
or
jo
sub
scas
out
mov
cmp
cmp
xor
rcr
cmps
mov
pop
loopne
gs
out
adc
aaa
push
mov
mov
jae
stos
inc
or
sahf
mov
add
inc
cmps
xor
rcl
cwde
xchg
push
adc
or
pop
mov
enter
and
(bad)
xor
fistp
popa
cmc
xor
xor
in
cmp
fisttp
or
mov
push
xchg
push
not
iret
mov
adc
mov
das
adc
xor
sbb
mov
call
(bad)
and
dec
loopne
or
push
jb
test
jecxz
in
in
cmps
shl
jg
push
nop
pop
lods
sub
and
mov
js
cmps
push
push
cmp
xrelease
scas
movs
pusha
jo
add
xchg
xchg
mov
shl
add
mov
enter
mov
mov
je
test
pop
scas
xchg
inc
mov
cmp
xchg
lock
les
dec
mov
xor
sbb
jg
sub
inc
and
adc
scas
inc
sbb
mov
retf
iret
daa
adc
mov
xor
stc
pop
inc
aam
in
scas
shr
arpl
jne
xor
loop
addr16
lea
out
or
ss
cmp
adc
sti
inc
ins
jno
shl
and
loope
pop
jmp
or
push
cmp
int
daa
mov
adc
inc
mov
loope
dec
mov
(bad)
sbb
and
stc
jmp
jl
mov
dec
enter
adc
mov
mov
xor
clc
sbb
fs
(bad)
xchg
and
test
mov
aam
fucomp
cmps
dec
es
clc
mov
in
xor
das
sbb
sub
cmp
fdivr
dec
outs
addr16
xchg
aaa
and
rcl
out
ret
lock
aas
(bad)
outs
jecxz
mov
fidivr
push
cmp
inc
mov
cmp
test
fld
int
daa
sbb
pusha
call
sbb
push
jmp
(bad)
daa
sub
sub
add
cld
enter
mov
and
push
out
push
xchg
jge
pop
jg
int3
aad
mov
je
xchg
push
inc
in
jb
push
xor
lods
dec
inc
dec
loopne
inc
mov
jbe
das
js
sub
in
rcl
out
aam
cmp
add
loop
jp
sahf
call
jae
(bad)
or
test
pop
xor
pop
popa
pop
inc
add
call
test
cmp
enter
cmp
stos
inc
retf
bound
in
xor
and
inc
loop
cmp
mov
arpl
mov
xchg
inc
xor
jbe
je
aas
cs
gs
cmp
xchg
imul
in
test
(bad)
dec
pop
bound
pop
push
aaa
cld
cmc
mov
dec
sahf
in
iret
mov
je
daa
dec
sub
shl
ss
mov
xor
xor
push
jle
scas
stos
jmp
aad
push
fisttp
sbb
dec
(bad)
cs
les
sub
dec
int
bound
sbb
or
jae
xchg
or
retf
sub
xchg
int3
cmp
and
fidiv
das
test
lods
test
inc
into
jne
cli
mov
xor
xchg
mov
and
mov
mov
mov
push
and
mov
out
sub
sub
xchg
mov
or
xlat
mov
fwait
jg
mov
xor
daa
cmps
jb
pop
(bad)
scas
das
cmp
out
movs
ret
in
jp
sbb
mov
add
jmp
les
adc
xchg
adc
mov
les
nop
fstp
mov
sbb
jno
repz
or
mov
sahf
cmp
dec
push
icebp
dec
jno
xchg
push
xchg
retf
xchg
mov
mov
xchg
sub
dec
cmp
idiv
stos
inc
jl
mov
mov
mov
jmp
adc
test
push
push
xor
test
popa
mov
aam
xor
ins
into
imul
pop
data16
(bad)
xor
xor
jo
add
mov
stc
mov
shr
push
or
sbb
shr
mov
xchg
push
fldcw
std
arpl
cmp
(bad)
cmp
in
mov
cmp
sbb
in
push
loopne
aaa
lods
xor
jl
mov
xchg
lds
xchg
cmps
mov
cld
push
fsubrp
movs
dec
xchg
and
pop
adc
pop
and
jb
dec
ret
and
repz
aad
jns
pop
jmp
sub
movs
fdiv
daa
(bad)
out
cld
ret
push
movs
add
mov
add
add
outs
test
inc
pop
das
xchg
arpl
and
dec
push
test
not
jl
in
or
inc
test
dec
(bad)
aaa
mov
and
mov
xor
ja
loop
cmp
adc
imul
inc
movs
into
fst
retf
out
add
add
adc
mov
test
idiv
leave
cdq
mov
inc
out
popa
imul
or
bound
pop
out
sub
add
xor
inc
cs
mov
out
hlt
adc
je
pop
mov
xor
pop
sbb
jecxz
out
add
inc
outs
xchg
xor
push
push
pop
retf
mov
daa
mov
das
sbb
or
cmp
stos
adc
loopne
mov
rol
jmp
fisttp
and
pop
pop
in
cmps
fdivr
(bad)
pop
lea
dec
shl
popa
call
jno
dec
in
mov
data16
mov
sub
mov
jb
mov
xchg
pop
xchg
sar
jecxz
jl
loop
or
mov
shl
xchg
stos
jmp
retf
(bad)
gs
pop
fimul
rcr
shr
push
push
push
inc
(bad)
ja
rcl
add
repz
inc
call
ret
cmp
out
push
or
leave
addr16
std
cmps
daa
sbb
arpl
sbb
or
cs
add
adc
xor
or
inc
adc
xor
ret
call
jo
or
jbe
mov
les
test
mov
in
(bad)
aam
add
outs
aaa
scas
jp
pop
and
clc
pop
add
jnp
xor
das
xchg
(bad)
test
and
in
sub
fisttp
adc
retf
mov
out
test
loope
retf
xchg
dec
out
in
rcr
push
add
dec
dec
pusha
out
add
and
mov
fstp
sub
inc
aam
retf
jmp
push
clc
mov
les
out
dec
add
push
cmp
imul
cmps
push
hlt
aad
popf
inc
sbb
pop
xor
xor
imul
adc
in
xor
xor
sbb
cmps
aam
fistp
and
adc
jmp
jmp
mov
xor
cmp
and
(bad)
in
out
mov
out
dec
repz
loopne
mov
(bad)
ror
dec
cmp
xchg
push
xor
lods
inc
cdq
and
sbb
popa
mov
cmp
bound
in
shr
mov
jo
and
mov
arpl
xchg
cmp
add
cmp
popa
adc
jno
shl
xchg
rcr
fisttp
push
out
mov
lock
xchg
(bad)
cli
pop
and
sbb
neg
dec
mov
hlt
ins
dec
mov
push
push
xor
sbb
pop
jl
inc
call
mov
adc
test
fistp
mov
and
sub
mov
fbld
ins
into
and
jbe
mov
and
inc
and
fldenv
cmps
pusha
rol
outs
sar
movs
mov
sbb
aam
data16
nop
popa
jae
lea
aad
xor
and
nop
pop
fisub
adc
pop
inc
dec
fadd
into
mov
es
shl
addr16
adc
add
popa
push
or
rol
popa
cmps
dec
popf
ret
and
xor
sub
stos
cmp
loope
xchg
lds
popf
in
xor
xor
jmp
cmc
mov
(bad)
push
(bad)
and
out
(bad)
mov
mov
adc
cwde
dec
ins
das
dec
in
dec
mov
cmps
add
dec
xchg
mov
mov
push
push
add
cmps
sbb
in
jb
mov
jns
pop
xchg
in
push
and
xchg
push
and
inc
in
inc
sbb
shr
mov
or
mov
pusha
(bad)
nop
sti
mov
or
ds
fbstp
xlat
push
sub
out
outs
cmp
jb
jae
daa
jae
mov
stc
test
cli
repz
repz
mov
push
pushf
mov
(bad)
arpl
mov
mov
sar
(bad)
into
push
loop
add
jecxz
or
cmp
jo
add
sub
leave
adc
xchg
push
mov
cld
cmc
call
inc
dec
mov
or
add
jp
aam
push
test
cmps
loope
jecxz
leave
jl
les
and
mov
inc
aam
mov
dec
je
mov
(bad)
fcmovbe
imul
mov
fs
xor
movs
sub
push
lds
lods
pop
push
stc
cdq
push
sti
and
mov
(bad)
fst
fadd
ja
repnz
push
sahf
cli
or
and
pop
shr
loope
outs
sar
int
jle
mov
rcr
pop
sahf
inc
outs
sub
pushf
inc
mov
movsx
add
das
xchg
push
ror
sbb
add
or
ja
pop
push
cmp
out
cmp
push
mov
dec
pop
rcr
push
mov
add
ss
mov
add
pop
pop
mov
fmulp
push
jb
and
scas
jmp
dec
in
ret
mov
jb
pop
jmp
jns
loopne
fs
ins
arpl
mov
pop
call
inc
hlt
sbb
clc
fldcw
push
cmps
mov
adc
ret
movs
stc
push
mov
sbb
add
cmc
outs
jl
push
xor
mov
pop
mov
lds
sbb
pop
pop
aaa
lahf
icebp
and
pop
or
or
mov
cmc
xor
es
xlat
xor
jne
stos
dec
out
sbb
loop
mov
xor
push
mov
outs
pushf
inc
cmp
mov
push
shl
dec
pop
cld
std
(bad)
out
mov
xor
mov
movs
dec
cli
sub
add
lock
clc
xor
mov
imul
push
add
and
shl
popa
daa
pop
lahf
cmp
add
pop
out
pop
in
cmps
push
repz
jb
repz
into
scas
pop
or
call
adc
les
pop
stos
dec
rcl
xchg
mov
pop
lock
pushf
or
jl
mov
push
xchg
fnstcw
inc
cmp
and
add
sub
push
daa
ja
mov
push
(bad)
push
sub
push
and
inc
(bad)
xor
mov
sti
pmaxsw
in
xchg
inc
and
movs
dec
xor
cmp
and
or
fdiv
lock
nop
jne
mov
mov
adc
ja
pop
ret
and
push
inc
and
and
cmc
jo
mov
xchg
sub
stc
inc
out
or
add
pop
sbb
mov
push
ins
fild
add
sbb
mov
cmp
aam
pop
pusha
imul
(bad)
(bad)
mov
mov
cmp
je
adc
mov
ret
add
aam
inc
out
outs
test
xor
rcl
ret
jno
xor
inc
pop
sbb
lea
and
mov
sub
jbe
je
dec
ja
inc
xor
xlat
adc
in
iret
dec
int
je
cmp
inc
mov
jl
lods
cmc
clc
repz
and
lea
xor
jne
mov
pop
mov
inc
cmp
and
jns
nop
xor
aas
cmp
rol
or
mov
clc
cmp
mov
ss
mov
xchg
mov
out
mov
xor
out
pop
pop
lods
ror
popa
into
sbb
jmp
add
sub
add
imul
ret
pop
sbb
test
pop
cmps
cli
lock
pop
mov
jo
dec
and
cwde
(bad)
cli
outs
and
jge
xor
ins
repz
in
pop
std
jge
jl
xor
xor
dec
push
push
leave
or
loope
cli
adc
push
xchg
dec
jb
mov
addr16
mov
popa
dec
lds
sbb
push
ret
dec
mov
in
adc
cli
jmp
adc
inc
fidivr
(bad)
test
iret
dec
data16
sub
daa
pop
out
cmps
add
cs
ins
cs
je
fild
mov
cdq
jns
into
add
or
daa
jbe
iret
call
push
fild
sbb
outs
fwait
sbb
xlat
les
jp
jmp
jne
or
iret
stos
movs
sub
pop
inc
or
mov
hlt
(bad)
ror
or
sub
mov
adc
add
sub
mov
lods
loope
xchg
add
cmp
clc
push
xor
loopne
call
inc
sub
inc
repz
pop
pop
dec
popf
addr16
inc
jmp
jl
mov
mov
int3
aas
int3
aas
rol
das
outs
ret
pop
in
jo
jbe
mov
jecxz
mov
cli
loope
(bad)
int
call
cmp
enter
sbb
outs
sbb
jg
(bad)
cdq
xor
jl
xor
sub
dec
(bad)
clc
fnstsw
xchg
pop
push
xor
push
push
int
mov
rcl
mov
addr16
mov
fs
ret
push
ds
cli
jmp
fadd
adc
ret
repnz
mov
(bad)
dec
mov
test
rcr
(bad)
loopne
repnz
adc
lea
int3
sbb
jbe
cld
mov
jge
jecxz
mov
hlt
or
js
mov
or
and
xor
ret
iret
bound
xchg
pop
mov
(bad)
enter
retf
sahf
fadd
and
lahf
push
es
popa
mov
sbb
stos
fs
inc
mov
sub
adc
adc
fistp
push
out
outs
int3
cmps
gs
or
push
out
fcmove
sbb
cmp
mov
mov
push
cmp
xchg
shl
in
leave
xor
mov
push
xor
mov
jne
icebp
dec
or
adc
pushf
dec
lahf
dec
push
jne
scas
xor
push
test
or
adc
add
loope
lea
and
shl
dec
cmp
add
addr16
(bad)
daa
or
hlt
mov
add
fild
lea
out
push
in
mov
call
sub
(bad)
and
ffreep
repnz
mov
jge
out
rcr
std
arpl
inc
push
jnp
paddsw
mov
push
jecxz
fnstcw
icebp
pop
out
pop
xchg
lods
jno
adc
mov
push
shr
shl
push
imul
sub
out
adc
outs
int
xor
mov
fistp
lods
mov
les
cwde
xor
or
out
test
lods
pop
scas
imul
dec
xchg
pop
mov
div
add
add
in
push
(bad)
jae
jno
pop
or
dec
bound
test
adc
mov
or
pop
cld
adc
loop
cdq
adc
push
rol
fnstcw
fist
inc
adc
jp
stos
xor
push
test
pop
out
mov
aas
adc
out
out
mov
inc
sub
leave
js
or
stos
cmp
and
pop
aaa
mul
leave
push
daa
pop
jmp
push
data16
cmp
fwait
cli
xchg
jl
mov
mov
cmp
mov
or
jmp
aaa
push
ss
adc
imul
test
push
fiadd
cmps
popa
xlat
test
rol
jae
xor
jnp
add
aam
jecxz
mov
jb
(bad)
xor
push
xor
cli
cmps
inc
mov
mov
je
or
push
call
lea
sub
mov
push
mov
rcl
xchg
mov
xchg
xchg
cmp
push
or
das
jno
das
xor
xchg
inc
mov
jae
out
sub
xchg
bound
loope
arpl
iret
in
sbb
and
shl
add
sti
pop
push
cmp
xchg
clc
fbstp
jmp
cmp
pop
xor
xchg
mov
jmp
push
dec
movs
addr16
ins
push
lods
sbb
cmp
popa
cld
and
cmps
adc
arpl
push
stos
fisub
loop
sbb
mov
lock
lods
(bad)
sub
xchg
sub
xor
jmp
add
xor
mov
jno
mov
les
iret
(bad)
out
jbe
jmp
maxps
or
mov
and
inc
xchg
loop
adc
mov
add
mov
rcr
rcl
inc
js
and
xlat
and
pop
loop
adc
dec
mov
jp
jmp
pop
adc
pop
mov
add
and
das
push
in
bnd
xchg
retf
out
(bad)
lock
into
cmp
(bad)
fldcw
or
xor
add
mov
dec
xchg
mov
cdq
pop
jge
xchg
pushf
rol
jp
and
loopne
jmp
(bad)
out
into
lods
outs
add
mov
es
int
and
leave
dec
dec
in
add
xor
test
ret
adc
ror
mov
sbb
xor
ins
lock
dec
pop
fisubr
popa
sbb
push
jle
pop
shr
pop
sbb
inc
cmp
mov
clc
mov
fimul
and
(bad)
iret
dec
cmp
iret
aaa
(bad)
shl
sbb
jmp
es
js
jns
adc
xor
neg
sub
dec
add
mov
int
pop
ins
or
leave
pop
retf
xor
out
(bad)
or
add
popf
push
movs
loope
add
and
in
cmps
mov
mov
adc
addr16
imul
push
or
into
iret
add
mov
cld
aas
rol
push
cld
jle
cmp
aad
mov
dec
sti
mov
xor
leave
pop
xchg
mov
mov
sbb
and
sbb
int3
mov
lea
xlat
mov
jne
sub
call
cwde
bound
inc
js
mov
xchg
add
das
add
cli
or
jo
ja
jmp
das
mov
rol
cmp
(bad)
xchg
movs
popf
mov
outs
pushf
icebp
pusha
push
sub
cmps
push
lss
jp
add
loopne
jns
test
cmp
and
mov
call
repnz
gs
cli
xchg
xor
mov
adc
gs
repnz
clc
xor
test
xor
mov
push
imul
movs
loope
scas
push
retf
add
ret
mov
popf
scas
daa
pop
call
dec
fisubr
loop
ja
(bad)
and
dec
lods
mov
sbb
mov
inc
(bad)
cs
sub
outs
lock
add
ret
leave
mov
loop
mov
fcmovne
js
mov
lock
jl
jno
mov
dec
fcmove
arpl
div
push
(bad)
jbe
pop
adc
movs
push
dec
dec
fnsave
outs
sub
ror
pop
xor
stos
pop
fs
icebp
push
shr
ret
pop
add
xchg
neg
popa
mov
mov
fisttp
scas
adc
in
inc
xor
cwde
pop
stos
dec
jmp
mov
cwde
push
icebp
sbb
enter
lods
sbb
inc
test
in
inc
sub
outs
hlt
push
inc
addr16
iret
ja
aad
lahf
rol
cdq
pop
sub
cld
push
and
rcr
and
outs
inc
rcl
adc
pushf
mov
cdq
add
shl
cmc
retf
pop
jp
adc
pusha
popa
sub
movs
dec
cmps
inc
mov
jmp
cmp
or
es
dec
mov
les
(bad)
es
xchg
loopne
dec
sti
and
mov
scas
stos
clc
jmp
dec
icebp
out
jg
jne
push
and
xor
fmul
or
shl
and
mov
jns
in
mov
aaa
outs
lea
mov
pop
sbb
mov
sbb
(bad)
dec
or
aas
and
js
adc
cmp
cmp
fs
add
cs
sbb
cld
ror
loope
rol
pop
fldenv
enter
pop
push
ss
or
sub
lock
aam
push
das
mov
or
xchg
out
iret
mov
pop
pop
mov
ss
pusha
outs
sbb
and
mov
outs
sti
sub
pop
pop
push
lods
jnp
xor
xor
jge
aam
sbb
movs
iret
adc
pop
xor
mov
add
dec
or
pop
cmp
idiv
mov
loope
sbb
inc
fisttp
mov
sbb
push
cmps
frstor
stc
rcl
pop
cmps
sub
clc
test
sbb
jge
cs
jmp
adc
in
nop
out
push
adc
(bad)
iret
jns
fidiv
jne
ss
or
add
dec
cmp
loop
scas
popa
pushf
xor
pop
dec
(bad)
stc
pop
shl
arpl
outs
ficom
xor
les
sbb
or
shl
leave
mov
xchg
rol
add
es
adc
inc
out
loope
data16
inc
fisub
test
pop
int3
stc
add
adc
lods
push
push
adc
xor
or
cdq
push
repnz
xor
jb
dec
daa
pop
movs
xchg
sub
ds
test
or
mov
imul
and
inc
xchg
add
test
dec
in
jmp
rol
or
mov
push
jns
push
mov
mov
push
xchg
lods
xchg
push
(bad)
mov
jl
or
xchg
gs
repz
inc
arpl
retf
jb
jb
aas
addr16
push
jl
push
iret
imul
or
test
jno
or
mov
int
add
push
sub
sub
add
sbb
rol
sub
mov
add
pop
std
mov
jmp
dec
repnz
dec
jne
and
adc
loop
aad
ficom
dec
mov
leave
jb
fstp
jo
fistp
retf
xchg
lods
mov
push
pop
nop
hlt
mov
fidivr
fsubr
ins
inc
mov
pop
int
xor
inc
sub
jmp
push
hlt
lea
sbb
pop
jle
repz
data16
and
push
ja
imul
out
in
fcomp
dec
sub
test
fcom
adc
and
out
xor
inc
cmp
bnd
xchg
mov
jno
xor
cmps
lahf
aad
fldcw
push
ins
add
enter
xchg
je
sbb
cmp
in
mov
sub
fiadd
dec
pushf
(bad)
dec
jo
xchg
mov
lahf
mov
xchg
imul
adc
adc
add
dec
xor
popf
mov
lock
inc
lods
sub
cwde
dec
pop
int3
ficomp
pand
mov
(bad)
fdiv
push
pop
mov
and
mov
add
push
fidiv
sub
out
mov
(bad)
ds
popf
call
mov
or
push
mov
(bad)
in
mov
dec
inc
add
leave
fst
mov
mov
pusha
rcr
mov
mov
outs
jl
repnz
ror
jnp
cmc
xor
repz
or
and
(bad)
jge
iret
retf
push
xchg
es
out
stos
jle
popf
test
sar
(bad)
test
(bad)
mov
jnp
mov
fistp
test
jle
xchg
rcr
retf
cmp
adc
outs
fiadd
dec
or
outs
setne
gs
ins
repz
fld
addr16
inc
div
push
mov
push
inc
xor
cli
in
push
inc
pop
inc
jbe
pop
push
sbb
jno
and
inc
xor
and
stos
lods
pop
sub
add
shr
push
add
cmps
imul
mov
aad
pop
les
cvtdq2ps
mov
pop
cwde
jbe
aam
inc
fcomp
sbb
lock
mov
daa
mov
mov
jne
ins
inc
pop
and
push
js
ror
xchg
pop
out
out
imul
or
test
inc
push
jbe
xchg
push
xor
sub
pop
es
ja
xor
loope
pop
out
mov
pop
mov
mov
push
ja
pop
jae
aas
jle
(bad)
les
dec
lock
or
sub
lds
ins
ret
add
xor
push
test
cmps
cmp
push
add
sahf
in
jl
call
adc
or
aam
push
(bad)
adc
add
xlat
and
xlat
retf
push
cmp
lods
(bad)
fidivr
jmp
retf
push
xchg
xor
cmp
cmp
adc
jge
xchg
pop
rcr
xor
js
xchg
mov
rcl
mov
or
mov
fisubr
dec
sahf
cli
sbb
xor
test
xchg
and
pop
(bad)
icebp
ja
and
and
and
add
cmp
mov
mov
daa
dec
mov
in
pop
or
in
out
out
std
xor
push
mov
and
pop
add
mov
jb
add
out
(bad)
sub
test
test
leave
enter
loope
out
xor
and
and
es
cmps
jge
jge
jecxz
cmps
in
mov
mov
xor
sub
popf
lods
add
lods
clc
mov
cmp
mov
mov
pop
xlat
dec
xchg
out
cmp
sbb
lds
imul
jmp
ins
mov
enter
ins
sub
mov
jae
sbb
pop
test
push
jmp
and
es
jg
add
dec
ss
pop
jns
pusha
addr16
mov
jae
xchg
inc
ss
inc
cmps
loop
jno
clc
xchg
jp
jo
dec
sub
mov
dec
sub
mov
and
cmp
xor
pop
xchg
sti
dec
adc
mov
or
mov
inc
outs
stos
mov
scas
mov
inc
push
pop
xchg
ds
add
and
jmp
and
ret
(bad)
lods
int
out
cmp
mov
fmul
icebp
int
ret
or
and
jnp
lods
or
dec
xchg
jmp
aad
ds
outs
xor
addr16
push
or
ins
pop
out
ror
pop
mov
lahf
dec
inc
cmp
icebp
cli
aam
cmp
or
jns
(bad)
outs
icebp
jp
inc
and
mov
cld
in
retf
inc
aas
push
sbb
ja
rcr
mov
or
pusha
arpl
xchg
fwait
popf
sub
rcl
data16
xchg
stc
jl
jmp
into
rcl
adc
sti
(bad)
call
adc
(bad)
mov
mov
jbe
cmp
loop
jbe
mov
lahf
dec
sahf
int3
add
mov
xchg
lea
or
dec
cmp
or
je
sbb
jne
jno
in
push
scas
and
adc
dec
cdq
add
pop
push
(bad)
rcl
xchg
inc
imul
scas
jge
rol
sub
(bad)
stos
leave
jne
and
ficom
ins
mov
movs
daa
outs
sub
push
xlat
jns
jmp
mov
iret
sbb
sbb
rcr
ror
sbb
push
out
out
cmp
mov
jmp
and
sbb
pop
(bad)
push
jecxz
sbb
or
ins
adc
jae
and
and
fcmovnbe
push
mov
outs
mov
lods
xor
retf
xchg
inc
mov
popa
outs
inc
mov
ficom
inc
jp
out
lahf
mov
ffree
add
out
push
dec
(bad)
xor
pop
cmp
cmp
movs
mov
scas
push
fstp
cmp
ss
jnp
adc
pop
xchg
std
cmp
xchg
push
push
imul
mov
in
mov
clc
sub
int
pop
ds
pop
pop
xchg
in
mov
fst
in
adc
cmp
or
ss
pop
pusha
fist
xchg
loop
int
pop
xchg
loopne
shl
jo
xor
repz
mov
mov
sbb
mov
or
dec
or
cmp
or
jne
and
jb
mov
adc
add
xor
shl
div
aaa
dec
push
dec
and
dec
int3
dec
sub
jbe
lock
dec
mov
mov
dec
xchg
jle
fs
mov
es
or
imul
pop
fmul
les
gs
pop
imul
movs
mov
pop
std
mov
movs
std
mov
sub
cmp
cmp
ds
popf
out
add
sub
popf
imul
cdq
(bad)
dec
inc
sbb
leave
and
mov
push
jg
push
cmps
add
mov
cmp
(bad)
je
push
rcl
movs
mov
loop
mov
xor
dec
aaa
push
retf
inc
ja
pusha
or
arpl
sbb
add
fst
scas
mov
xchg
out
aas
cmp
xchg
fdivr
cmc
loopne
push
test
test
or
cmc
test
into
call
fcom
mov
in
sbb
mov
retf
cmc
lods
mov
out
pushf
outs
xor
dec
inc
push
imul
or
arpl
xchg
rol
cmc
or
inc
mov
pop
ficomp
inc
data16
out
xchg
sub
push
pop
jbe
std
pop
aad
xchg
cmp
outs
adc
fistp
mov
xchg
or
mov
cmp
gs
add
xchg
push
scas
mov
ret
jmp
jno
or
(bad)
retf
outs
sub
fldcw
jl
sub
lods
add
addr16
fcomp
inc
inc
aam
pop
ss
or
xor
xchg
jmp
push
mov
std
jp
ins
hlt
je
jns
jno
push
nop
lock
shl
cmp
mov
loope
and
sbb
sub
jbe
repz
xor
lds
sub
sbb
jge
pop
mov
and
mov
pushf
ja
pop
(bad)
repz
sub
(bad)
(bad)
std
hlt
loop
fnstcw
jne
stos
aam
add
in
jmp
mov
das
cmp
push
jle
jmp
jbe
hlt
into
push
mov
icebp
sbb
sbb
mov
adc
out
lds
jnp
push
aaa
mov
inc
dec
cwde
push
xor
sub
aaa
dec
mov
lea
out
mov
inc
test
and
add
sbb
(bad)
jae
(bad)
and
xor
pop
push
mov
bound
sti
add
mov
cmps
enter
cdq
push
cmps
jo
fisttp
or
push
or
add
(bad)
(bad)
es
mov
push
imul
icebp
push
(bad)
call
je
cmp
jb
push
dec
inc
push
xlat
xor
arpl
pop
adc
call
dec
outs
xchg
adc
jle
fstp
adc
inc
inc
test
sar
cdq
pusha
xor
xor
adc
outs
ret
pop
shl
inc
sbb
not
push
enter
jae
in
inc
push
scas
retf
daa
aas
dec
inc
dec
pop
add
js
jne
rcr
jns
adc
minps
push
sbb
mov
retf
and
cs
lahf
int
iret
adc
data16
in
imul
int3
jmp
sar
mov
ins
aam
into
std
loopne
retf
jae
shr
jge
cs
push
icebp
inc
retf
jb
cmps
xor
mov
jae
gs
stc
out
and
rcl
aas
jecxz
in
dec
sbb
sbb
and
iret
fucom
in
lea
jle
pop
inc
scas
popa
inc
push
cmp
int3
inc
out
data16
and
adc
ror
wrmsr
mov
data16
xchg
and
pop
repz
sbb
into
ss
in
dec
push
rcl
repnz
push
xchg
and
retf
popf
mov
and
lahf
shl
sbb
sbb
enter
jne
repz
sub
ficomp
xor
and
fild
pop
movs
aam
dec
lods
loopne
inc
fcomp
repnz
mov
ss
push
scas
cmp
inc
ficomp
(bad)
mov
xchg
ja
adc
mov
mov
mov
jg
xor
dec
pop
sub
xor
and
jmp
stc
or
jns
xor
cmps
lds
icebp
mov
cmp
dec
xor
pop
(bad)
call
retf
arpl
test
jle
pop
aas
xchg
cmps
stos
pop
inc
jae
out
inc
enter
mov
aam
(bad)
retf
adc
push
sti
mov
in
cdq
call
jp
pop
fsubr
lahf
xchg
xor
xor
lods
jns
enter
loop
pusha
mov
adc
and
fldenv
mov
ror
push
hlt
lea
inc
add
sub
hlt
lods
cli
fs
add
fwait
mov
outs
sub
sbb
and
fcom
jp
in
ret
gs
mov
jmp
js
and
sbb
(bad)
sbb
xchg
fild
mov
mov
out
xor
jg
aad
jae
jge
sub
enter
xor
loopne
(bad)
mov
sub
sub
(bad)
out
or
or
pop
pop
mov
(bad)
mov
rcr
jecxz
adc
ror
xchg
cmp
xchg
mov
mov
ret
fidiv
imul
dec
jmp
dec
ins
mov
stc
aam
xchg
push
cmc
sti
cmp
add
into
push
(bad)
(bad)
ret
jne
stos
xlat
xor
sub
fdivr
add
or
mov
clc
mov
movs
mov
rcr
cmp
imul
and
sub
xchg
xchg
mov
sbb
jge
push
xchg
and
xor
sub
pop
in
jbe
ffree
popf
dec
clc
call
(bad)
cwde
mov
xlat
adc
pop
sbb
test
ss
repnz
pop
or
sti
mov
mov
js
mov
inc
test
pop
inc
push
mov
fstp
or
or
inc
ins
sbb
add
shl
mov
mov
lea
and
mov
fnstcw
fild
mov
ins
fcomp
(bad)
jnp
movs
out
pop
push
popf
imul
xchg
xchg
push
xlat
sbb
mov
in
dec
mov
and
jecxz
bound
lahf
fwait
mov
(bad)
adc
xchg
mov
cmp
imul
pop
mov
or
mov
clc
inc
dec
pop
fcom
xor
jle
ret
mov
in
test
shl
xchg
outs
mov
int3
prefetch
mov
retf
(bad)
sar
aad
jl
cmp
outs
call
outs
xor
stc
rcr
lods
jbe
lds
lds
jb
xor
std
jae
sahf
rcr
dec
xor
adc
fwait
pop
dec
out
add
or
retf
push
icebp
call
aad
jp
dec
leave
ficom
pop
pop
push
scas
or
mov
jb
int
jmp
or
test
cdq
adc
mov
sbb
mov
dec
mov
lock
addr16
or
sub
xchg
ins
retf
pushf
xchg
push
outs
es
cmp
push
pop
clts
pop
bound
jae
sti
cwde
jg
jb
adc
retf
mov
adc
jbe
call
into
icebp
(bad)
push
fbld
mov
leave
adc
jbe
cs
pop
mov
pop
shl
push
jae
sub
push
shl
out
mov
aad
fidiv
jb
mov
cmc
xchg
popf
mov
pop
test
ror
sub
inc
ja
dec
fst
dec
sbb
xor
jecxz
xor
(bad)
sub
mov
sub
sbb
fisubr
in
test
enter
out
cld
jae
ds
outs
dec
dec
dec
fstp
pop
push
cmp
sar
das
jne
xlat
cwde
repnz
daa
and
arpl
enter
mov
sub
mov
inc
pushf
bnd
cmp
ins
pop
and
inc
mov
mov
test
xchg
inc
dec
pop
push
(bad)
lock
repnz
sbb
aaa
outs
mov
bound
mov
cmp
mov
push
adc
gs
mov
in
adc
cmp
xchg
mov
mov
in
imul
inc
cwde
lahf
jge
cmp
lods
hlt
bound
cmc
test
inc
fiadd
mov
adc
lock
aas
(bad)
(bad)
cdq
int3
inc
dec
and
xchg
jmp
and
psubd
and
popa
mov
fs
lods
ss
jle
mov
push
push
aad
push
inc
bound
test
dec
mov
lods
imul
addr16
push
jmp
hlt
test
jnp
test
dec
ss
xchg
add
and
inc
mov
mov
cmp
and
das
push
mov
jp
leave
ins
(bad)
in
test
fisub
call
fbld
test
dec
cmps
(bad)
sti
sti
ja
pop
dec
dec
out
cmp
jne
push
sub
pop
push
std
test
dec
test
sbb
arpl
push
sub
xadd
loopne
rcl
stos
ficomp
mov
les
xchg
mov
iret
mov
cmp
dec
push
xor
add
aaa
loope
pop
jg
punpcklbw
lock
or
jp
into
cwde
in
fist
sar
mov
aaa
or
rol
fadd
push
test
pusha
and
ins
xchg
ret
mov
adc
xchg
mov
push
stc
adc
mov
rcl
inc
mov
es
mov
add
arpl
cdq
push
fld
push
scas
jno
sub
mov
adc
ret
outs
jnp
push
sub
jae
cmp
test
ret
sub
dec
jmp
mov
call
es
fs
xor
sar
cmp
aam
fidiv
and
leave
xor
adc
jp
mov
sub
dec
push
pop
scas
push
cmp
mov
sub
shl
aam
or
imul
add
inc
mov
outs
cmp
mov
(bad)
out
ins
adc
jo
or
sbb
aam
shl
sub
cmps
ins
cli
mov
xchg
sar
ret
sub
xchg
push
jg
mov
or
mov
clc
xlat
jmp
jmp
pop
adc
mov
jl
pop
add
mov
arpl
shl
outs
dec
sub
xchg
test
inc
ins
jne
cmp
(bad)
(bad)
jg
push
push
cmps
or
push
xchg
jecxz
ins
pop
shl
or
adc
shr
(bad)
cmp
in
in
pop
and
xchg
sbb
outs
xor
fidivr
fisttp
push
shl
outs
outs
lea
pop
or
test
dec
out
jl
stos
inc
fistp
cwde
mov
fwait
mov
mov
jl
repnz
xor
adc
xchg
sub
cs
sbb
shl
xchg
xchg
push
pop
cmps
in
xchg
jl
aam
jmp
inc
mov
push
and
sbb
int
rcl
adc
pusha
adc
sub
or
adc
fisub
cmp
lods
scas
mov
ja
or
or
jne
div
in
test
and
and
(bad)
ja
mov
dec
xor
push
nop
push
fcom
jo
and
xchg
push
pop
inc
jno
not
or
mov
add
xor
xchg
(bad)
retf
mov
mov
or
or
jg
inc
aaa
scas
push
icebp
sub
icebp
xor
mov
xor
mov
retf
push
pop
enter
leave
push
ror
mov
xlat
stos
pusha
call
mov
rcl
mov
xor
xchg
(bad)
xlat
sbb
gs
pop
call
test
and
jecxz
in
popa
test
iret
pop
pop
xor
mov
mov
fstp
int3
mov
mov
stos
data16
leave
sbb
jge
int3
fistp
(bad)
jl
test
mov
push
dec
mov
xlat
jmp
mov
adc
mov
inc
pop
jmp
(bad)
cs
js
inc
adc
push
ret
or
sbb
leave
ret
mov
pop
xor
pop
xor
adc
xor
cmovge
(bad)
or
fs
inc
and
outs
ror
ja
(bad)
pop
int3
dec
ja
js
sar
mov
mov
mov
mov
inc
cli
fild
sub
icebp
outs
inc
add
call
or
mov
pop
cli
data16
sub
dec
inc
repz
mov
cmps
sbb
dec
retf
and
mov
adc
xor
inc
jbe
test
dec
dec
mov
mov
les
or
popf
fnstcw
mov
dec
mov
mov
out
iret
inc
dec
aas
lea
mov
cmp
ror
sub
mov
aas
cmp
loopne
dec
add
xchg
in
adc
mov
or
and
and
mov
std
fidiv
repz
unpckhps
das
xrelease
fdiv
adc
inc
add
dec
dec
inc
ror
xor
aam
sbb
iret
sub
fld
add
pop
cmp
mov
lea
loope
imul
push
cli
sub
popf
mov
retf
xchg
sub
jecxz
imul
fisttp
fldcw
inc
xlat
test
mov
fidiv
xchg
cmp
jmp
jmp
jae
into
mov
hlt
jns
dec
sub
jae
fistp
enter
lock
je
loopne
cmps
mov
ret
adc
lods
push
dec
mov
movs
pop
dec
mov
push
dec
ins
xor
stos
je
adc
push
push
pop
loopne
mov
sbb
sbb
inc
xchg
pop
idiv
inc
ds
jmp
out
xor
arpl
push
dec
cmp
mov
dec
xchg
sbb
pop
mov
and
push
xchg
adc
pop
gs
push
mov
sub
or
arpl
sub
add
and
pop
je
pop
and
pop
daa
icebp
lods
xchg
pop
fild
and
mov
sbb
sub
push
or
mov
mov
movs
xchg
mov
push
mov
repz
dec
imul
pushf
retf
or
mov
jecxz
pop
leave
daa
mov
fs
xchg
push
push
add
into
fs
or
mov
bound
vpsrlw
xor
adc
in
loop
mov
bound
(bad)
mov
retf
push
jp
clc
push
xor
sahf
cmp
dec
(bad)
leave
out
and
rol
jecxz
sar
push
mov
loope
adc
test
out
aam
cmp
into
xchg
jno
imul
pushf
cmp
push
sbb
and
ins
bound
pop
inc
ins
inc
xor
sub
ins
push
jg
mov
cmp
mul
jp
add
mov
fisttp
sbb
and
outs
pop
lods
sub
lods
sub
stc
adc
sub
lahf
push
sbb
scas
data16
outs
push
push
jnp
and
push
pop
push
lea
mov
push
fcom
xor
add
fisttp
(bad)
cli
pop
daa
sbb
cmp
loope
(bad)
adc
popf
stc
sbb
pop
sti
jb
test
xor
push
jns
test
dec
mov
jmp
stos
sub
(bad)
push
(bad)
fistp
sub
mov
leave
gs
inc
jno
adc
or
jle
inc
mov
mov
scas
lds
scas
out
dec
jne
lds
mov
nop
cwde
push
dec
add
jne
jmp
(bad)
out
push
out
dec
xchg
mov
stc
add
inc
dec
sub
xchg
jmp
fld
ss
jnp
ds
inc
ret
jns
dec
mov
dec
jmp
xchg
(bad)
fcmovb
jno
and
add
imul
push
in
adc
in
inc
dec
cmp
push
xchg
pop
push
stos
pop
ret
aam
in
inc
in
or
mov
mov
jmp
adc
push
inc
aad
iret
dec
inc
stos
data16
inc
fidiv
jmp
jmp
inc
aam
fsub
and
outs
loopne
mov
xor
fsubr
cmp
mov
out
lahf
adc
fadd
popa
xor
mov
mov
add
mov
adc
clc
xchg
dec
mov
mul
add
iret
inc
xor
outs
push
mov
mov
imul
jle
add
outs
jnp
push
test
mov
inc
mov
in
imul
lahf
or
enter
fs
in
aam
out
mov
rol
sti
xchg
ret
mov
into
xchg
loopne
das
add
xor
sub
pop
lock
enter
mov
mov
dec
pusha
xchg
dec
and
cmc
in
inc
enter
stos
(bad)
mov
loope
mov
push
retf
jmp
xor
ror
inc
iret
pusha
inc
dec
fs
mov
imul
lock
in
adc
dec
das
sub
popa
(bad)
mov
jb
mov
sbb
ds
pop
mov
sbb
sub
ja
into
cli
jae
mov
call
xchg
push
in
push
out
mov
rcl
push
jmp
pop
into
popa
pop
arpl
push
adc
xchg
stos
shl
pop
jmp
push
pusha
retf
daa
aaa
idiv
adc
and
sub
loop
dec
(bad)
jl
lea
pop
jae
or
inc
enter
push
mov
adc
cli
and
cmp
addr16
std
(bad)
fdivr
mov
loop
das
add
test
mov
lock
je
xchg
stos
push
or
or
jp
sbb
pop
leave
int
xor
sbb
jnp
loopne
or
mov
mov
push
pop
sub
push
pop
and
mov
sar
xchg
fmul
push
mov
lods
mov
fnstsw
aas
outs
jecxz
xchg
xchg
jl
inc
jle
test
fst
push
dec
mov
jmp
jae
and
sbb
push
xor
mov
pop
fiadd
jge
sub
pushf
mov
jecxz
or
cmp
std
mov
shl
sub
and
sbb
cmp
adc
jnp
cld
mov
in
jmp
aaa
jo
scas
popf
add
je
int
icebp
mov
outs
mov
out
scas
cs
xchg
push
push
jns
push
adc
push
fcmovnbe
test
cmc
retf
shl
push
or
jbe
into
jo
repnz
cs
stos
xor
jp
(bad)
cwde
mov
push
jmp
retf
(bad)
push
neg
cmp
xchg
aad
xchg
pushf
aas
stos
loop
sub
popa
xchg
add
cmps
sbb
and
clc
popf
aas
adc
mov
xchg
stos
pop
fwait
cmp
out
jo
add
mov
sbb
je
lea
out
movs
repz
mov
loop
in
cld
popf
cs
sbb
pop
xchg
in
dec
lods
std
mov
inc
jne
pop
les
fisttp
lock
xor
push
inc
dec
mov
sbb
mov
or
and
dec
push
dec
lods
push
cmp
es
(bad)
out
pusha
pop
dec
push
add
mov
arpl
mov
ret
mov
sar
push
inc
push
or
movs
pushf
inc
sbb
or
dec
lahf
or
push
mov
jo
pushf
jecxz
push
jg
or
inc
cmp
and
test
(bad)
stc
mov
xchg
mov
ja
jno
iret
sbb
inc
cli
aad
scas
(bad)
adc
mov
fisttp
test
push
cli
sub
ins
sti
(bad)
int3
call
inc
xchg
ret
fs
add
dec
mov
add
repz
sub
mov
and
xchg
jg
loop
and
sbb
sub
push
(bad)
cdq
or
jbe
mov
pop
sub
cmc
mov
loope
call
mov
lock
fistp
cmp
xchg
mov
pop
leave
test
(bad)
adc
in
push
call
sbb
neg
imul
or
dec
or
jg
jmp
mov
push
xor
sub
retf
jns
mov
xchg
push
sbb
mov
movs
push
xor
loopne
and
dec
lods
sub
push
popa
fisubr
out
adc
out
les
scas
pop
mov
out
xlat
popa
dec
mov
outs
pop
movs
stos
je
add
je
xor
cli
sub
pop
lock
test
xor
stos
lock
sbb
in
fisub
mov
outs
sbb
stos
ins
loope
fsubr
inc
ja
pop
idiv
dec
daa
pop
shr
push
sahf
cmp
and
pop
mov
sub
sub
xor
push
xor
jp
repnz
sub
adc
dec
dec
lea
push
fisttp
push
sbb
arpl
leave
movs
idiv
mov
or
mov
push
cli
mov
sub
jp
sbb
inc
stc
ins
ret
bound
mov
xchg
inc
ins
fldenv
add
mov
scas
gs
sub
aas
cwde
push
push
lahf
sti
popa
push
mov
lods
jmp
sbb
dec
lds
in
inc
inc
(bad)
rol
cmp
ja
xor
pop
fnstcw
add
xchg
lock
dec
nop
std
ja
std
pushf
fisubr
mov
cld
and
sub
inc
jns
sahf
mov
leave
jb
arpl
xchg
cmps
fdivr
push
in
mov
fistp
inc
ror
or
xor
ins
mov
lods
test
retf
neg
inc
push
fwait
cmp
and
sti
cwde
dec
retf
icebp
jp
mov
inc
xlat
xchg
mov
cmps
aam
repnz
jb
into
cmp
js
sar
xor
or
int
adc
fadd
pushf
cmp
movs
sbb
mov
pusha
(bad)
bnd
lea
fldcw
cdq
call
out
cs
push
test
lods
adc
das
fmul
mov
and
test
jmp
add
xchg
enter
jns
xor
and
sub
sub
mov
call
sti
push
add
lea
cmp
mov
mov
xor
or
cs
aas
pop
imul
stc
cmps
mov
xchg
add
xor
movs
faddp
test
or
nop
sar
in
icebp
adc
(bad)
daa
test
(bad)
stos
pop
outs
sbb
jecxz
mov
lods
push
cwde
fistp
push
shr
mov
ins
fadd
stos
and
es
lahf
sub
sbb
mov
jno
xor
ins
shr
inc
rol
stos
lock
cmp
mov
lock
daa
push
cmps
in
out
jmp
pop
sbb
stc
pop
scas
xlat
mov
lea
pop
inc
pop
ret
mov
add
scas
fwait
add
sbb
inc
or
inc
xchg
(bad)
out
dec
ins
jnp
call
sahf
push
test
fild
sbb
outs
cli
mov
fld
dec
(bad)
and
sysret
stc
stc
and
xor
stos
(bad)
popa
xor
cli
nop
dec
add
mov
push
pop
nop
ret
xchg
push
push
jne
mov
adc
das
dec
movs
xor
loopne
cwde
popa
fs
push
fnstcw
inc
jl
mov
fs
shl
loopne
in
aas
push
loop
in
aaa
cmp
or
or
aam
popf
jle
enter
xchg
mov
aam
fs
mov
outs
pop
sub
add
add
in
and
push
dec
cmps
lods
loopne
(bad)
je
or
xchg
dec
xor
push
lahf
stos
cli
or
daa
test
cmps
les
iret
sub
inc
xor
mov
mov
lods
lods
fdiv
in
je
aam
(bad)
jmp
inc
int3
fld
scas
dec
and
pop
xor
sbb
lea
(bad)
retf
int
push
add
mov
and
pop
loop
and
imul
lods
xor
jbe
mov
dec
ror
sbb
pop
mov
sbb
fst
add
lods
add
mov
aas
jmp
enter
xor
pop
fisttp
jle
nop
sbb
and
(bad)
test
int
xor
movs
(bad)
jge
jno
mov
push
pop
imul
scas
adc
(bad)
mov
call
pop
jo
inc
jmp
mov
lods
push
and
inc
ja
jne
icebp
dec
rcr
sbb
hlt
jae
daa
data16
les
stos
ds
outs
xchg
xor
pop
rcl
sar
mov
rol
cmp
ins
fist
add
outs
ins
(bad)
stc
jnp
int
mov
or
push
mov
nop
sbb
sub
jecxz
rcl
inc
movs
fisub
test
cli
out
repz
mov
add
pushf
daa
data16
scas
sub
push
scas
clc
dec
push
in
(bad)
je
gs
in
idiv
add
cmp
cdq
(bad)
adc
xchg
dec
dec
dec
cs
sbb
mov
lods
sbb
xchg
cwde
inc
adc
sbb
icebp
retf
out
(bad)
adc
cmp
in
fidiv
push
mov
xchg
ret
adc
retf
enter
add
dec
out
(bad)
or
cmp
call
addr16
sub
pop
mov
das
pop
iret
inc
pop
or
loop
fld
lods
movs
rcl
dec
hlt
cmp
inc
int
mov
xchg
inc
cmc
mov
push
rcr
mov
addr16
das
popa
cmp
and
push
in
mov
mov
popf
mov
dec
ret
jne
les
test
call
jge
xor
stos
pop
sbb
clc
mov
jns
pop
inc
lock
mov
mov
outs
es
(bad)
out
xchg
add
cmp
xchg
ins
xchg
sub
aas
jo
xchg
das
aaa
mov
outs
fcomp
pop
cmps
push
sbb
inc
mov
inc
(bad)
mov
sub
or
fstp
sbb
jl
enter
adc
or
jno
pop
out
inc
ror
xchg
pop
and
jle
adc
in
push
pop
fwait
mov
(bad)
retf
int3
ss
cli
mov
adc
jnp
add
mov
add
lods
jno
xchg
daa
test
add
dec
sbb
into
fwait
mov
mov
out
fistp
xor
inc
icebp
mov
pop
pop
push
mov
outs
inc
cs
push
or
push
lea
scas
shl
sub
pusha
stos
aas
sbb
out
sahf
or
pop
jnp
outs
jno
dec
std
mov
sbb
mov
pop
and
gs
inc
ror
and
sti
aad
dec
adc
jbe
aaa
repnz
dec
(bad)
mov
mov
jmp
inc
fwait
aas
ror
lahf
jae
sub
xchg
outs
pop
xor
sub
dec
pop
push
jp
mov
retf
sbb
sbb
mov
jge
adc
pop
dec
mov
(bad)
pop
dec
pop
fst
scas
xchg
mov
and
rol
sub
xor
sub
test
and
cmc
dec
bound
pop
dec
hlt
push
sbb
das
cmp
pop
movs
sub
sub
rol
cmp
daa
cmp
repnz
inc
dec
aad
lock
mov
loop
mov
pop
and
ret
adc
fwait
adc
aad
xor
push
pushf
fdiv
or
sbb
jo
jbe
and
pop
cmp
pop
sub
adc
stos
cmps
sbb
inc
push
imul
fisubr
and
mov
sub
pop
jbe
push
cmp
sti
jp
rcr
mov
xchg
mov
cmp
pop
pop
sti
or
mov
cmc
mov
jae
ficomp
adc
push
popa
retf
icebp
inc
inc
sub
ja
mov
push
inc
movs
and
cdq
(bad)
jnp
mov
movs
addr16
fsub
in
inc
ret
test
pop
inc
xchg
push
sub
int
mov
pop
dec
es
lea
mov
adc
test
ja
cmp
loopne
shr
mov
xchg
inc
adc
cmp
js
into
jp
and
push
mov
imul
inc
fld
push
das
jmp
adc
jo
ds
push
ja
xchg
add
jl
aam
dec
jae
imul
pop
sti
mov
call
dec
(bad)
stc
xor
pop
popf
adc
outs
cli
leave
mov
pop
sub
sub
jo
mov
inc
jmp
imul
shl
mov
fld
pop
std
mov
and
mul
xlat
mov
pusha
jne
or
popa
and
test
loope
xor
retf
mov
or
daa
sbb
adc
into
xchg
and
not
popa
mov
fs
sub
xchg
ret
push
std
cmp
dec
and
(bad)
clc
cmp
dec
fnstsw
push
push
mov
cmp
sbb
push
mov
xchg
loop
inc
push
adc
add
aaa
fmul
adc
jno
xchg
dec
and
lods
popf
retf
inc
rcr
adc
push
dec
mov
hlt
dec
inc
loop
sti
mov
jae
stc
aad
jle
push
sbb
mov
mov
mov
mov
jecxz
push
adc
dec
or
add
sub
and
dec
dec
ss
xor
dec
jmp
loop
dec
rol
cmps
clc
push
test
xor
inc
sbb
shl
ss
mov
mov
xchg
shl
push
push
scas
push
push
and
xchg
add
fst
adc
(bad)
sub
in
inc
loop
popa
or
loope
xchg
(bad)
ja
jmp
adc
pop
add
dec
dec
cmp
xor
out
xchg
jae
jl
xchg
fistp
adc
add
lods
stos
rcl
mov
test
sub
inc
and
std
dec
not
push
mov
push
sbb
cmp
js
daa
push
inc
pop
scas
inc
in
retf
push
add
stc
cwde
sub
cmps
out
xchg
mov
fdivr
add
sbb
in
jecxz
jg
push
cmps
ins
je
jb
dec
daa
adc
sub
push
fwait
jmp
imul
lods
mov
and
or
inc
frstor
test
test
test
push
sub
or
mov
or
arpl
mov
adc
xchg
mov
cmp
imul
add
rol
inc
repnz
sub
retf
push
sti
sbb
test
ja
sbb
enter
mov
pop
add
outs
push
icebp
out
and
xor
out
clc
adc
push
and
das
jb
shl
xor
out
rol
mov
sbb
lds
xor
push
ds
xlat
mov
ins
jbe
jge
xchg
mov
lea
sbb
push
mov
cdq
mov
dec
mov
dec
push
(bad)
cs
cld
pop
fiadd
sahf
or
(bad)
sub
aad
push
cmp
push
mov
sbb
sbb
dec
scas
sbb
mov
push
pop
push
ja
or
xchg
mov
cli
ja
int3
shrd
das
dec
xchg
mov
mov
mov
and
ss
mov
ficom
in
lahf
push
(bad)
call
stos
xchg
into
call
outs
retf
outs
jae
cmc
inc
das
jns
jnp
call
adc
inc
jl
mov
fldenv
sub
addr16
movs
adc
jge
outs
inc
(bad)
xchg
lahf
fsub
xchg
cmp
dec
lea
imul
in
add
mov
jnp
leave
pop
push
outs
push
retf
push
jmp
cmc
fisubr
es
xor
rcr
mov
cmp
fisub
push
test
cmp
repz
bnd
(bad)
std
adc
aaa
xor
loopne
bswap
icebp
repz
xor
aaa
(bad)
mov
ds
jl
cs
rep
push
ins
or
xchg
clc
sbb
xchg
or
pop
sub
rcl
nop
popf
ja
sub
dec
leave
pop
out
mov
inc
int3
xor
in
pop
mov
test
xchg
scas
movs
pop
pushf
jmp
cld
xchg
fs
push
aas
jb
js
inc
ja
push
xor
dec
push
(bad)
mov
push
sub
push
mov
cmp
fisub
sbb
fdiv
mov
mov
scas
lds
mov
xor
push
loop
outs
daa
rcr
aaa
xor
push
cld
add
push
test
test
and
pop
lds
lds
and
ret
xchg
in
fidivr
sbb
retf
or
in
adc
mov
popf
ins
lods
hlt
xor
jmp
pop
mov
lock
inc
push
in
fimul
pop
mov
adc
je
xor
loop
push
mov
xor
out
stos
add
dec
daa
jge
xchg
cmc
idiv
scas
or
xchg
mov
out
cld
(bad)
add
hlt
add
pop
or
add
fistp
int3
int3
(bad)
stos
(bad)
stos
xchg
clc
pop
scas
add
jae
sbb
std
pop
and
add
dec
and
add
mov
addr16
sbb
int3
push
inc
jle
xor
xchg
cmp
inc
cmp
or
cwde
mov
cmp
inc
adc
jb
pop
in
ss
popf
(bad)
cmp
jne
loope
cs
pop
iret
pusha
fwait
adc
pop
sbb
test
cmp
or
mov
push
pop
outs
stos
dec
bound
mov
adc
mov
fdivr
pop
mov
loopne
movs
not
push
push
push
push
push
dec
adc
jl
outs
xchg
and
adc
mov
dec
mov
gs
cdq
or
ins
jecxz
pop
cmp
lods
push
add
jmp
js
xchg
in
daa
jl
lea
adc
mov
lods
(bad)
scas
inc
lods
or
adc
push
mov
test
stos
std
mov
(bad)
imul
sub
mov
mov
call
pop
int
ficom
and
in
or
dec
xor
and
mov
pushf
mov
(bad)
jl
and
pop
sti
mov
lock
xchg
xchg
dec
cwde
push
push
mov
mov
clc
retf
xor
xor
jmp
aas
and
in
fs
cld
inc
add
xor
push
mov
scas
int
out
jo
or
cli
inc
enter
fstp
leave
cwde
add
push
mov
sub
adc
mov
sub
pop
cld
jmp
bound
loope
cwde
xchg
fiadd
cli
inc
pop
lahf
retf
loopne
(bad)
scas
(bad)
mov
scas
sbb
mov
xchg
push
dec
mov
jo
cli
xchg
das
movs
or
shl
dec
cmp
jno
mov
neg
fsubr
call
and
repz
mov
xchg
dec
cmp
dec
jl
mov
movs
sub
cmps
mov
xchg
retf
into
movs
jmp
scas
mov
gs
or
push
out
jmp
cmp
out
je
mov
adc
dec
sub
mov
xor
std
stos
xor
dec
ds
ja
jecxz
jmp
inc
inc
push
ja
or
div
jns
lods
cs
(bad)
into
lea
fnstcw
xchg
xchg
cwde
call
sub
addr16
or
xchg
mov
jb
imul
fdivr
mov
stc
dec
arpl
inc
mov
dec
data16
ret
ror
sahf
dec
mov
jle
fnsave
bound
jnp
test
sub
or
mov
dec
mov
adc
scas
sti
or
dec
stc
fldcw
dec
loope
adc
js
sub
inc
das
cmc
ins
inc
jmp
ins
push
xchg
cdq
aaa
scas
sbb
dec
in
je
jb
mov
pop
mov
in
pop
xchg
shr
push
and
(bad)
out
dec
pop
fst
sbb
add
imul
pop
push
retf
(bad)
xor
or
xlat
daa
fsub
pushf
call
or
fld
push
lods
xor
sub
bound
mov
sub
repnz
outs
sub
addr16
pop
scas
ja
loop
cmp
ins
mov
outs
pop
lea
rol
jbe
enter
das
popa
sar
pusha
adc
cwde
dec
pop
jnp
sar
daa
push
push
addr16
and
sar
xor
mov
push
jbe
dec
xchg
pop
sub
clc
inc
cmc
mov
push
and
div
mov
imul
jne
test
pop
clc
sub
loop
mov
inc
stos
lds
sub
bound
out
xchg
cs
mov
jl
add
or
jmp
mov
mov
imul
in
fst
scas
push
xchg
loop
cmp
std
nop
ja
jns
pop
jecxz
mov
xor
out
test
pop
in
mov
mov
imul
imul
je
xor
and
mov
jns
retf
mov
(bad)
xchg
cmp
adc
and
popf
lods
cmps
imul
xchg
pop
dec
retf
fwait
int
push
(bad)
push
lods
jbe
jne
aaa
stos
dec
call
not
rcr
sub
and
sub
out
cdq
add
ja
mov
pop
mov
es
aad
stos
data16
sbb
jb
xor
push
out
cdq
in
sub
aas
jmp
xchg
mov
xor
stos
push
arpl
xchg
inc
fxch
adc
and
mov
(bad)
add
popa
pop
pusha
mov
xor
sbb
mov
lds
inc
jl
xchg
rcl
jg
add
push
jb
rcl
adc
sub
jecxz
loopne
xor
data16
mov
mov
movs
loopne
pop
jo
mov
shl
dec
(bad)
sbb
popa
dec
cmp
fwait
jecxz
cmp
mov
fs
movs
cmp
cmc
or
hlt
imul
jno
mov
or
push
add
dec
test
push
repnz
jbe
add
xor
jmp
out
pop
dec
popa
outs
push
mov
xchg
and
jnp
stos
and
lock
pop
dec
in
xor
sub
test
inc
cs
loopne
xchg
sub
jmp
pop
push
and
sbb
and
adc
and
pop
pop
hlt
outs
push
cld
movs
or
mov
loope
jnp
push
cmp
in
popf
pop
sbb
enter
movs
les
repnz
sub
adc
in
dec
cwde
test
stos
daa
out
lahf
ja
loop
mov
add
es
fisub
lock
pop
pop
adc
mov
jmp
push
movs
mov
fld
stc
sub
popf
out
xchg
mov
push
stc
js
dec
mov
jmp
retf
jmp
jmp
pop
sub
and
mov
and
xchg
mov
jg
hlt
sbb
out
or
ss
add
fist
push
int3
ins
in
(bad)
jmp
push
lods
imul
call
fstp
xor
pop
mov
pop
aas
out
test
mov
jno
rcl
mov
push
mov
clc
int
repz
pop
ins
push
test
xchg
in
jne
ficom
mov
mov
pop
or
mov
ins
push
retf
add
(bad)
xchg
inc
and
adc
es
push
sub
add
jns
cmc
popf
pop
and
mov
mov
pop
ret
push
cmp
mov
cdq
repz
pop
movs
cmp
jg
xor
(bad)
xor
add
js
bound
arpl
adc
mov
push
jl
in
in
ins
or
imul
jns
shr
lea
push
adc
dec
cmp
cmp
fimul
pop
data16
gs
int
daa
add
arpl
dec
adc
or
les
ss
out
out
jne
lahf
int
mov
sbb
aaa
dec
in
add
inc
mov
icebp
jbe
fsubr
and
inc
xchg
mov
cli
xor
sbb
fwait
push
out
xchg
cmc
jp
test
cmp
leave
push
fsubr
push
lods
add
mov
sbb
mov
ins
fldcw
cmp
(bad)
mov
add
jge
loope
fsubr
bound
jo
test
jle
xor
xor
xor
sbb
xlat
test
xor
pushf
mov
js
inc
cli
pop
cmp
push
cs
lds
loop
or
mov
lods
pop
(bad)
inc
inc
pusha
or
jne
daa
mov
xchg
and
retf
xor
out
mov
sbb
xor
xor
push
mov
cmp
adc
jno
shl
sub
movs
push
ret
ins
inc
lahf
jecxz
cmp
xchg
das
jo
cmp
fnstcw
(bad)
push
xor
dec
push
jmp
dec
data16
int3
and
mov
and
sub
shl
or
fmul
inc
or
sub
and
adc
push
xor
xchg
out
and
sbb
outs
icebp
adc
push
js
in
dec
cli
push
xchg
or
adc
push
lea
ret
sub
fstp
(bad)
sub
imul
inc
xchg
outs
xor
hlt
shr
icebp
jns
inc
push
cmc
imul
cli
imul
mov
mov
das
fadd
mul
jl
and
jo
mov
inc
mov
fwait
rcr
pop
ss
sub
stos
icebp
cmp
xchg
in
cdq
xor
sub
cmc
or
int3
add
dec
push
pop
outs
or
out
into
rcr
sub
repz
dec
sub
pop
xchg
or
dec
pop
adc
pop
pop
inc
js
or
das
setg
daa
mov
in
pop
adc
pop
inc
pop
and
out
push
jo
movs
pop
fwait
jmp
pop
fs
aaa
add
data16
inc
daa
dec
and
xor
jae
adc
sub
test
cmps
push
dec
mov
mov
icebp
ins
stos
imul
sbb
sbb
sub
jmp
mov
setno
pop
jne
lods
scas
std
adc
push
sub
xor
xchg
and
popa
cmps
fadd
ret
mov
int
dec
retf
out
mov
fidivr
jmp
in
lds
ficom
div
mov
call
adc
pop
mov
add
das
sub
out
ja
and
add
mov
or
mov
mov
(bad)
rcl
sub
and
jbe
mov
in
xchg
dec
aaa
xor
sbb
cdq
ret
sub
scas
mov
fisub
jle
sub
jns
pop
movs
push
jl
lods
sar
loopne
leave
leave
dec
fwait
call
aas
and
cmp
fs
or
cwde
ins
in
lds
or
out
push
push
xor
inc
fbstp
call
mov
cmp
jle
adc
adc
enter
push
mov
lock
outs
mul
in
xlat
pusha
pop
mov
lea
xor
stos
idiv
lods
jb
in
daa
pop
div
movs
mov
in
fbstp
lea
xchg
cdq
ret
ds
cmp
mov
imul
cli
pop
or
push
mov
sub
cmp
pop
jmp
pushf
add
ret
ja
popa
inc
sti
cmc
div
or
xor
popa
sbb
add
mov
jnp
rcr
mov
adc
pushf
bound
sahf
push
jl
inc
shl
call
mov
pop
mov
mov
jae
pop
mov
in
pop
movs
(bad)
pop
push
push
sbb
jmp
sub
xor
fnstenv
sar
xor
mov
mov
cli
sub
out
scas
ss
and
mov
jo
ss
cs
jl
inc
(bad)
scas
cmp
leave
xchg
pop
dec
mov
rcr
mov
cdq
test
sbb
pop
out
in
xchg
mov
call
xchg
outs
or
xchg
pop
les
aaa
(bad)
adc
je
aam
and
es
or
mov
mov
dec
popf
popf
mov
sbb
mov
xchg
outs
inc
fmul
movs
jo
loopne
sar
sbb
mov
or
pop
mov
shr
and
mov
mov
fist
mov
lods
nop
sub
pop
aaa
stos
inc
mul
jbe
fld
jns
jbe
push
ins
sbb
imul
arpl
pop
sbb
hlt
pop
fdivp
or
sub
mov
inc
retf
mov
cmc
cmp
sbb
dec
mov
daa
or
pop
mov
adc
dec
dec
pop
adc
cld
sbb
and
pop
cmps
jbe
pop
mov
pop
aad
ror
xchg
bound
sbb
push
add
out
sbb
(bad)
mov
adc
imul
mov
retf
cdq
out
xor
cld
xlat
mov
jle
mov
sbb
jmp
in
push
and
xor
mov
add
jecxz
push
inc
mov
add
or
and
movs
daa
xor
or
adc
aad
int3
in
adc
test
adc
lods
test
xor
test
jbe
cmc
pop
ret
test
or
cmp
adc
std
mov
ss
pop
pop
dec
into
pop
aas
mov
pop
js
imul
inc
mov
call
repz
popf
and
jo
mov
daa
sub
int
jno
repnz
mov
jmp
sbb
repnz
mov
mov
dec
jno
out
call
sar
jne
mov
pop
xchg
xor
pop
imul
xor
push
ins
mov
inc
jp
popa
test
mov
mov
mov
pop
adc
pusha
mov
inc
pop
or
xchg
xor
retf
outs
loop
ror
or
xchg
sub
sub
iret
add
mov
call
mov
jb
popa
adc
ffree
sub
mov
aad
push
hlt
ins
push
jo
icebp
add
pop
pop
cmps
inc
outs
stc
lahf
lods
or
and
jg
push
cmp
shl
dec
push
jmp
scas
mov
enter
dec
imul
test
gs
sar
dec
cdq
jmp
push
push
mov
cwde
mov
cmp
xor
adc
or
retf
cmps
stos
xor
lods
add
and
js
sub
fcomp
dec
(bad)
cwde
les
addr16
in
ins
pmulhw
add
sub
in
xor
jmp
jmp
clc
mov
(bad)
shl
shr
mov
and
out
out
jo
push
loope
sbb
hlt
jne
loop
js
es
cwde
cmc
outs
movs
push
or
idiv
rcr
xor
ja
cmc
fld
and
add
xchg
push
inc
test
rol
mov
nop
push
adc
jcxz
das
movs
loopne
sti
mov
stos
or
or
xchg
sub
mov
fstp
iret
xor
push
mov
fdivr
xor
in
dec
das
popf
scas
mov
adc
(bad)
dec
mov
adc
or
mov
je
push
scas
push
(bad)
mov
mov
adc
scas
xchg
mov
gs
test
jge
sub
jl
ret
stos
retf
adc
add
repnz
lods
push
mov
ficom
mov
daa
movs
stc
adc
xor
out
push
repnz
xor
ins
mov
mov
dec
(bad)
sbb
mov
jg
stos
lock
jnp
jne
dec
sub
pop
pop
sub
std
nop
enter
mov
push
pushf
out
(bad)
loop
or
xchg
idiv
xchg
push
xor
repz
ror
pop
push
in
jg
inc
(bad)
adc
stos
jmp
sahf
adc
mov
mov
dec
or
sbb
jecxz
mov
dec
nop
cli
icebp
xchg
test
shl
xor
pop
movs
pop
jg
xchg
rcl
add
xor
sub
lds
daa
and
(bad)
dec
mov
mov
mov
(bad)
mov
add
pop
cmp
adc
bound
mov
xchg
jno
sbb
popf
in
clc
int
dec
aaa
ret
sub
mov
(bad)
sub
cwde
pop
inc
sub
mov
add
loop
scas
fist
push
and
push
or
ret
xchg
push
push
in
ds
daa
in
push
mov
shl
pusha
sti
or
ret
shl
add
adc
mov
frstor
push
and
jnp
sub
xchg
ret
pop
dec
(bad)
mov
lahf
scas
es
push
pop
ret
in
mov
add
leave
cmps
call
adc
and
mov
imul
sub
add
add
dec
and
push
cld
test
test
dec
mov
enter
out
or
cmc
mov
xchg
stc
dec
shl
inc
clc
pop
movs
data16
mov
(bad)
mov
inc
ret
rol
lea
jge
mov
cmps
mov
std
fidiv
movs
xchg
stos
mov
push
inc
icebp
mov
scas
jbe
push
cmp
scas
(bad)
daa
(bad)
sbb
ret
or
into
das
jge
cmps
popf
in
std
push
call
retf
mov
xor
sbb
stos
adc
cmc
popf
(bad)
sub
push
repnz
inc
and
jno
loope
cmpps
and
mov
dec
sbb
sbb
cmp
inc
mov
sbb
lock
pop
push
mov
dec
je
cmp
loop
jp
jle
lock
add
fs
push
outs
icebp
pop
(bad)
and
mov
sbb
push
int3
mov
nop
in
or
fs
pop
pop
mov
shl
dec
mov
movs
dec
mov
lea
fs
out
out
push
xlat
xchg
mov
and
ret
repnz
(bad)
lods
jae
add
enter
sbb
lds
mov
sbb
shl
xchg
adc
or
shr
pop
pop
add
cmc
jne
outs
dec
and
xchg
je
sahf
jmp
daa
aam
iret
or
inc
push
mov
xchg
clc
cmp
js
inc
inc
stos
push
in
push
pop
mov
cmc
add
out
add
leave
mov
mov
mov
arpl
in
repnz
pop
push
push
nop
sub
ss
data16
xchg
movs
dec
dec
out
pop
fld
xchg
pop
imul
int3
push
sbb
es
pop
lock
dec
xchg
jl
pop
es
xor
adc
out
clc
pop
loop
inc
sar
mov
sub
in
aaa
mov
in
push
and
pop
adc
mov
out
adc
sbb
mov
sub
jmp
add
sbb
out
pop
push
rcl
jle
and
sti
cs
ret
adc
loop
sbb
not
mov
sbb
jne
test
sub
sbb
enter
add
sub
ret
or
pushf
ret
(bad)
(bad)
push
cli
stos
inc
pusha
jecxz
div
dec
pushf
dec
pop
les
xor
(bad)
(bad)
out
mov
jo
jne
aaa
call
hlt
out
fs
mov
xchg
shl
jae
repnz
and
add
jle
add
adc
push
in
je
dec
shl
stos
fild
mov
xchg
xchg
(bad)
sti
mov
add
test
enter
xor
pusha
pop
jns
test
(bad)
dec
repnz
out
sub
dec
jl
adc
jno
sub
fnstcw
dec
outs
in
add
jno
aam
push
jno
sbb
inc
xchg
jmp
push
out
(bad)
sbb
push
clc
push
jp
sub
sub
cmps
in
cs
gs
daa
mov
or
fs
and
pop
retf
dec
xchg
imul
cs
sbb
stos
jl
mov
xchg
inc
sahf
jge
repnz
sbb
or
popa
jne
dec
push
mov
mov
in
pop
jo
fld
dec
rcr
ret
ins
inc
arpl
add
sbb
mov
inc
xchg
push
mov
or
test
test
ss
in
jl
sbb
enter
mov
cdq
push
int3
jo
inc
dec
scas
arpl
call
das
mov
xor
repnz
test
fdivr
mov
xchg
jge
ja
stc
movs
mov
iret
sub
push
fcmovnbe
aas
cmps
retf
cmp
add
test
jno
dec
xchg
test
push
hlt
fsub
cmp
sub
cdq
ss
mov
shr
lods
lods
pop
or
icebp
sbb
repnz
int
and
dec
shr
push
push
lahf
pushf
iret
out
scas
(bad)
mov
(bad)
repz
jmp
or
jle
je
jmp
sbb
clc
jno
je
ins
and
outs
retf
fwait
sub
or
jg
push
push
jb
xchg
xor
mov
cmp
push
repz
fnstcw
in
add
cld
js
jnp
and
test
dec
fsub
cmps
mov
mov
jne
mov
xchg
(bad)
div
arpl
daa
xchg
retf
movs
cmps
test
push
mov
inc
sub
jae
sub
add
mov
hlt
pop
mov
call
js
cmc
pop
mov
lock
inc
data16
pop
aad
push
jg
loopne
(bad)
sti
mov
add
es
inc
or
bound
xlat
dec
mov
mov
jecxz
push
pop
jge
stc
pusha
mov
dec
dec
ror
ret
xchg
aaa
sub
push
mov
or
not
pop
dec
push
sbb
mov
jnp
fmul
call
call
inc
lahf
test
es
mov
(bad)
neg
pop
pop
adc
mov
jge
lods
or
out
lea
pop
test
jne
cmp
jmp
push
sub
sub
lock
rcr
xor
jg
loopne
loopne
xchg
jno
mov
repnz
cmp
loop
fistp
add
xchg
xor
call
cwde
push
ds
test
adc
jae
(bad)
pushf
ret
jp
das
xchg
in
and
int
sbb
xor
dec
rcl
in
in
outs
sub
add
std
mov
stos
dec
mov
imul
and
inc
fdiv
fnstcw
cwde
movs
push
pop
dec
and
jg
mov
loope
xlat
sbb
ja
div
ret
fistp
ds
aas
aad
jnp
xchg
xchg
cmp
sub
jmp
sub
data16
cwde
or
mov
shl
xor
data16
push
dec
je
icebp
fstp
cli
mov
mov
ins
mov
es
js
mov
adc
daa
into
cdq
add
div
in
add
mov
mov
rcr
sub
aam
mov
sub
or
aam
cmp
xchg
fdivr
mov
inc
lods
inc
mov
or
stc
shl
and
or
xor
in
mov
int
inc
cmp
sti
push
fiadd
sbb
jg
xlat
pop
in
mov
repnz
rcr
cmp
xor
and
aas
jecxz
cmc
jmp
add
test
xchg
sti
add
dec
adc
cli
(bad)
test
mov
aam
or
mov
cs
cld
jmp
das
xchg
movs
movs
push
popa
add
dec
(bad)
dec
int3
jno
jo
dec
sub
enter
xchg
popf
or
push
sbb
popf
push
data16
(bad)
jg
shl
std
mov
test
ja
jns
xchg
scas
mov
shl
stos
or
and
mov
das
call
mov
int
shl
xor
push
mov
push
cmp
enter
leave
hlt
add
jmp
push
out
(bad)
jle
imul
(bad)
push
lds
cli
cmps
pop
mov
sbb
mov
mov
repz
das
sub
cli
js
retf
pusha
dec
div
mov
xor
sub
hlt
sub
rcl
pop
sar
shl
and
js
imul
mov
pop
pop
repz
aam
add
push
xchg
jle
xor
mov
into
outs
(bad)
inc
test
clc
cmps
pusha
mov
pop
pop
loopne
stos
sub
sub
repnz
push
mov
pop
xor
push
dec
lds
call
or
lahf
mov
cld
add
enter
test
cmp
in
cmp
and
cmps
add
fdivr
push
and
cmp
pop
out
adc
sub
scas
xchg
iret
dec
int3
push
(bad)
jnp
or
mov
ret
fsubrp
enter
jg
sar
xchg
xchg
popa
leave
pop
adc
repz
retf
test
push
push
(bad)
sbb
cmps
inc
xor
add
xchg
ret
jbe
and
int3
jae
dec
xchg
mov
and
sbb
sub
pusha
addr16
(bad)
retf
in
aam
pop
aad
pop
push
outs
stc
add
popa
or
push
(bad)
xor
adc
pop
adc
jne
push
(bad)
out
pop
dec
jmp
in
shl
xor
adc
lock
fidiv
cmps
push
dec
and
lods
ret
push
jb
push
ins
cld
mov
mov
iret
fist
or
xor
sub
lods
xchg
(bad)
mov
or
repz
ret
test
mov
popf
mov
push
mov
cdq
outs
inc
adc
movs
dec
out
mov
imul
mov
jno
sahf
call
test
mov
ja
popf
repz
ror
(bad)
mul
jbe
sbb
fbstp
push
dec
scas
mov
jbe
mov
mov
sbb
pushf
dec
shl
nop
jae
js
jbe
push
sub
mov
push
inc
dec
nop
inc
inc
jnp
std
jmp
fild
fs
test
sar
mov
(bad)
out
xchg
aad
out
push
sub
jp
push
cmps
(bad)
mov
mov
pop
mov
xchg
add
mov
repnz
cmp
dec
and
mov
pop
cwde
scas
sub
daa
leave
pop
jmp
aaa
pop
out
pushf
in
adc
test
ret
call
lods
mov
add
enter
ficomp
sub
popf
push
(bad)
sar
pop
arpl
pop
jno
push
sar
push
mov
mov
enter
or
mov
call
push
in
aas
pushf
es
arpl
imul
fsubr
ins
sbb
test
movs
cli
into
lds
dec
cmp
push
bound
jg
lock
repnz
(bad)
pushf
and
push
test
(bad)
popa
cmp
scas
jge
pop
xchg
aas
stc
mov
(bad)
fsub
jo
and
lea
push
xchg
jbe
cmp
mov
xor
xchg
lods
mov
push
out
or
dec
jbe
dec
and
addr16
pop
repz
clc
cmps
xchg
into
xor
les
jae
cmp
sub
fadd
add
pop
sbb
and
cmovge
jns
mov
pop
sbb
xor
test
dec
test
push
cmp
pusha
in
sub
iret
add
enter
loop
cmp
jo
mov
push
cmps
sub
out
sti
mov
(bad)
leave
mov
pop
(bad)
test
jbe
pop
mov
fs
sub
adc
or
sub
dec
pop
leave
test
in
not
push
mov
leave
jmp
mov
outs
pop
jbe
mov
cs
mov
div
cdq
mov
pop
call
sub
rol
mov
pop
jae
mov
pushf
push
mov
daa
fyl2xp1
test
and
pop
mov
mov
(bad)
int
or
popf
xchg
and
outs
stos
sti
addr16
push
adc
or
inc
das
pushf
fld
mov
icebp
and
in
inc
mov
sti
dec
inc
outs
pop
mov
jl
in
sub
cli
dec
(bad)
pop
aaa
mov
ss
mov
jnp
xchg
hlt
adc
jnp
adc
dec
in
add
lds
jbe
mov
in
adc
outs
add
or
cld
and
retf
pusha
mov
iret
pop
ds
push
loopne
xchg
imul
test
rcl
dec
ror
and
fisubr
cs
loop
or
(bad)
push
inc
sbb
out
or
mov
shl
jnp
icebp
jne
sbb
pop
sbb
(bad)
sahf
cmps
test
test
mov
and
xchg
dec
movs
adc
int
xor
dec
mov
cmp
stos
cmp
mov
or
mov
sub
(bad)
dec
mov
enter
jle
retf
xchg
pop
out
xchg
shr
lock
or
popa
xor
aaa
sub
push
aad
outs
shr
mov
test
cmp
cmp
bswap
mov
pop
pusha
movs
jo
lock
retf
scas
mov
retf
cmp
dec
aam
dec
and
add
cli
adc
lods
add
ror
call
jns
xchg
push
xlat
xchg
dec
out
adc
xchg
arpl
lods
jbe
jbe
arpl
push
call
inc
inc
dec
cmp
add
sti
sbb
and
and
add
xchg
(bad)
and
fisttp
shl
outs
ror
(bad)
jmp
xchg
add
ficom
lahf
mov
mov
lods
addr16
dec
iret
mov
and
in
out
jb
movs
sbb
and
cmps
fsub
inc
mov
xor
mov
out
sbb
mov
int
pop
fwait
std
pop
pop
push
push
daa
sub
adc
test
sub
in
in
pop
mov
les
hlt
sub
pushf
mov
stos
or
loopne
lea
cmps
lds
jle
rcl
(bad)
push
pop
fstp
xchg
mov
mov
sbb
lods
jbe
inc
mov
sbb
xchg
adc
pop
add
in
jge
jmp
vpmulhw
pop
pop
mov
