mov
pop
test
mov
or
les
nop
jne
xor
adc
mov
add
adc
add
mov
inc
add
and
inc
add
popa
jecxz
mov
pop
xor
jnp
add
push
xor
data16
jl
ins
stos
add
add
add
shl
lock
cmp
sti
add
xor
ins
add
add
add
inc
adc
or
xchg
push
and
add
bound
les
xchg
movups
mov
sbb
adc
add
pop
aas
ins
adc
inc
inc
jmp
mov
sub
inc
xchg
lock
add
pusha
fdiv
mov
and
sbb
(bad)
pop
lods
add
jmp
loopne
sub
add
adc
mov
ins
dec
adc
and
mov
sbb
pop
(bad)
cmps
xor
or
push
add
inc
dec
or
test
add
add
int3
or
and
and
adc
jp
and
add
add
add
and
out
(bad)
dec
pop
and
add
add
push
push
movs
sub
jno
adc
xchg
fcom
add
add
cs
sbb
add
add
cmp
add
cld
gs
or
push
add
add
movs
or
leave
jge
sbb
pop
sub
add
add
or
adc
mov
add
add
gs
and
fmul
sub
xchg
add
add
rcr
inc
pop
add
or
and
add
shr
push
jp
imul
inc
sub
(bad)
idiv
je
add
ror
sub
mov
add
jl
inc
call
mov
add
xlat
or
mov
sbb
inc
inc
inc
xor
mov
add
push
add
and
pop
not
add
je
add
pop
add
and
mov
add
inc
add
mov
pop
push
dec
fbld
aaa
add
add
mov
clc
or
mov
mov
sbb
push
test
(bad)
jo
add
shl
sbb
add
call
test
mov
cmps
add
lea
add
add
or
bswap
mov
std
add
(bad)
pop
xor
add
add
outs
popa
sbb
icebp
push
and
jl
xlat
in
add
inc
mov
fadd
and
and
js
ins
or
and
enter
dec
sbb
mov
add
dec
sbb
sldt
add
xchg
sub
and
inc
add
add
push
mov
xlat
cmp
inc
mov
aas
inc
adc
inc
add
inc
add
mov
nop
inc
enter
mov
les
push
cmps
or
pusha
stc
rcl
inc
sbb
and
add
inc
mov
fwait
push
add
inc
pop
add
jge
add
mov
fisubr
push
inc
mov
lock
sub
add
je
pop
fisttp
out
inc
cmc
fidiv
mov
add
in
and
in
repnz
add
inc
in
call
(bad)
push
mov
add
or
add
div
add
or
adc
out
add
add
pop
and
scas
test
and
sbb
out
add
call
push
push
push
call
call
xor
ret
call
push
push
call
add
ret
push
mov
sub
mov
push
call
push
push
call
push
mov
push
push
push
push
push
push
call
pop
pop
mov
mov
add
sub
shr
add
add
mov
add
mov
pop
ret
cmp
int3
int3
int3
int3
mov
out
fsubrp
adc
inc
imul
mov
fistp
push
add
xor
sub
icebp
xchg
shl
xor
aad
xor
mov
sbb
imul
and
sti
imul
adc
mov
stos
pop
push
iret
xor
retf
or
pop
imul
cwde
loopne
aam
jle
dec
sbb
or
stos
mov
sti
adc
(bad)
iret
inc
add
or
xchg
dec
(bad)
mov
dec
gs
mov
cmp
test
sbb
jnp
les
stos
push
pop
or
fadd
cli
aas
rol
xchg
mov
mov
(bad)
jae
mov
jmp
mov
add
jmp
cmp
inc
shr
sbb
or
xlat
imul
push
pop
(bad)
shl
lock
xchg
mov
xchg
xchg
xchg
(bad)
mov
xor
add
jg
add
popa
hlt
and
rcl
push
sbb
jmp
jo
add
lods
ror
cmp
push
sbb
iret
dec
das
rcr
ret
call
jmp
inc
jmp
ins
push
das
(bad)
xor
int3
pop
lods
dec
call
jmp
sub
pop
or
out
(bad)
shr
inc
add
lds
in
arpl
pop
sbb
lahf
popf
mov
repz
dec
pop
call
inc
jmp
or
mul
imul
sbb
or
mov
mov
jae
mov
imul
sbb
jb
stos
push
push
push
jae
mov
out
clc
ja
pop
sbb
icebp
jg
(bad)
rol
enter
jae
add
fs
pop
adc
repz
out
out
push
xor
sub
add
stos
jae
sub
or
sti
xchg
lahf
stos
pop
stos
mov
das
jmp
or
call
xor
mov
stos
(bad)
rcr
pop
aaa
mov
xchg
ss
jmp
add
add
jg
mov
mov
call
jl
xchg
cmp
fdiv
ret
push
scas
pop
imul
push
xlat
mov
stos
sub
ret
aam
stos
pop
xor
mov
adc
das
call
jmp
fstp
xor
out
imul
adc
rcl
or
mov
imul
in
add
mov
pop
(bad)
jno
imul
test
xlat
push
pop
mov
rcr
push
pop
retf
jo
out
clc
inc
mov
sub
pop
stos
mov
cmc
adc
pop
pop
retf
rcl
xchg
xchg
push
out
sbb
xchg
stos
iret
sub
stos
jmp
aas
xor
out
imul
retf
pop
add
or
stos
popf
add
aaa
mov
les
arpl
sets
mov
(bad)
adc
pop
mov
imul
imul
stos
push
xor
or
xchg
and
and
pop
mov
lods
push
js
add
stos
dec
mov
retf
dec
dec
out
stc
mov
sti
xchg
call
xchg
outs
add
add
push
inc
jae
ret
sbb
(bad)
sbb
loopne
ins
sti
and
fld
in
pop
cld
push
inc
scas
add
mov
sar
inc
lldt
mov
cmps
sti
mov
inc
fwait
sti
and
mov
inc
call
repz
sti
push
or
add
inc
push
sti
adc
aam
(bad)
xchg
test
add
and
stos
les
add
xor
push
mov
add
mov
aam
(bad)
pop
rcl
sbb
mov
dec
push
(bad)
mov
mov
pop
mov
std
add
jae
pop
mov
mov
add
mov
rcl
adc
push
or
jg
adc
inc
stos
stos
popf
fdivr
ror
(bad)
ror
cs
arpl
sub
jl
(bad)
sti
int3
pop
lods
dec
or
lea
test
pop
inc
sub
inc
jo
int3
xor
ret
mov
add
fcmovnb
ins
pop
push
push
sub
jmp
push
push
push
push
jmp
pop
mov
pop
pop
jmp
mov
mov
shr
jmp
pop
call
or
stos
loop
pop
jmp
push
push
push
call
jmp
push
push
push
call
mov
push
push
add
jmp
mov
mov
mov
jmp
push
xor
mov
push
mov
jmp
sub
lea
lods
xor
jmp
sti
push
mov
xchg
mov
sti
xchg
xchg
(bad)
rcr
lds
imul
adc
add
movs
jg
or
xor
or
rcl
jmp
add
mov
or
jg
fmul
dec
or
(bad)
mov
push
or
stos
xchg
pop
or
rol
xchg
stos
lods
(bad)
rcr
leave
aaa
add
stos
call
retf
leave
push
fs
inc
jmp
sar
rcl
jmp
imul
mov
out
and
rol
push
sbb
inc
add
mov
xchg
cdq
pop
push
mov
jmp
sub
add
or
sbb
or
imul
clc
or
adc
or
cmp
sbb
or
or
dec
push
out
test
(bad)
adc
and
adc
jg
add
and
push
mov
imul
cmp
sbb
sub
add
fwait
pop
add
inc
jmp
test
lock
push
out
pushf
or
dec
push
loope
gs
add
imul
and
add
mov
shl
shl
sbb
fsubr
add
xor
jae
dec
add
cdq
sub
leave
cdq
jmp
inc
push
test
or
out
movs
stos
shr
add
or
imul
ja
or
jnp
jne
stos
mov
(bad)
or
adc
pushf
or
adc
add
loopne
push
mov
inc
mov
mov
sub
sbb
add
add
push
lds
cwde
test
add
xchg
mov
or
(bad)
cmp
outs
inc
or
sbb
pop
or
mov
inc
add
sub
shr
out
add
sub
cmc
leave
(bad)
(bad)
adc
mov
jg
adc
(bad)
adc
add
out
mov
add
out
push
imul
xchg
push
(bad)
rol
or
push
xor
push
add
sti
xchg
xchg
sub
xor
push
push
out
cwde
add
jnp
dec
inc
inc
stos
inc
cmp
cmp
add
add
jno
in
sbb
clc
push
dec
jmp
shl
push
xor
mov
xchg
push
mov
imul
push
jg
push
push
inc
jb
stos
pushw
scas
or
or
outs
pusha
jmp
pusha
imul
add
add
and
(bad)
jnp
pop
jo
imul
inc
add
dec
(bad)
push
mov
sti
xchg
popf
ret
(bad)
inc
add
stos
popa
call
push
nop
mov
inc
jp
dec
ret
mov
jmp
mov
jp
xor
add
dec
jg
adc
xchg
adc
inc
add
dec
sub
int3
retf
mov
jb
or
(bad)
test
add
arpl
out
sti
or
(bad)
dec
or
out
nop
or
pop
or
and
(bad)
push
or
inc
inc
mov
or
stos
addr16
vprotd
inc
or
and
xchg
rcr
mov
inc
add
je
fs
(bad)
push
div
add
add
pop
test
add
mov
and
push
push
push
mov
xlat
sub
test
sub
add
fistp
aad
and
add
push
nop
sbb
test
add
mov
into
jecxz
in
in
mov
add
add
adc
cmp
out
mov
idiv
add
add
add
sbb
dec
mov
push
ins
or
call
mov
pop
clc
mov
inc
push
push
mov
jb
sub
inc
add
nop
shl
idiv
call
bound
hlt
mov
add
push
jb
push
data16
add
add
add
(bad)
cmc
push
mov
stos
in
add
add
add
add
in
push
add
xchg
push
mov
and
add
add
add
add
cmp
cmp
mov
nop
add
add
xor
mov
ss
sub
add
add
add
dec
mov
xor
xchg
inc
and
add
add
outs
in
xor
push
add
stos
add
add
add
in
(bad)
cmp
add
cwde
jge
add
push
pop
add
xchg
or
adc
pop
add
add
in
add
in
add
lahf
add
add
cmp
inc
movs
and
jle
or
add
add
cmp
fwait
add
in
push
and
add
inc
jle
or
or
and
add
inc
mov
xor
mov
pop
inc
push
popa
push
add
add
add
inc
push
add
ror
add
movs
rol
sbb
pop
jl
jg
add
add
call
or
inc
xor
sar
pusha
push
cmp
and
or
mov
add
(bad)
jge
test
call
push
setl
fmul
fidivr
or
outs
dec
or
into
js
pop
mov
add
stos
out
mov
fsubr
mov
inc
add
loope
test
popf
lds
jl
mov
in
sub
das
and
enter
add
jmp
push
add
ficom
pop
jle
cmp
jmp
les
or
push
inc
jne
imul
mov
cli
inc
add
or
xor
add
push
clc
and
jne
mov
inc
mov
mov
push
loope
push
mov
push
shl
dec
push
repnz
and
adc
sbb
lods
test
push
jmp
push
mov
push
and
and
cmp
out
add
les
sbb
test
fs
out
add
nop
push
push
add
adc
sub
and
mov
add
sbb
and
sub
add
add
inc
add
add
jmp
push
or
push
outs
adc
add
push
mov
and
add
cld
sahf
lods
(bad)
cs
rol
adc
push
jge
je
pop
or
add
add
mov
cmp
mov
add
and
mov
add
ret
add
add
and
and
wbinvd
stos
cmps
add
(bad)
loop
push
add
pop
es
jl
add
add
sbb
inc
ret
loop
sbb
adc
ss
add
add
and
dec
aaa
add
jbe
sub
jo
and
add
add
ror
mov
sbb
xor
add
add
jmp
fsubr
add
xchg
xor
add
dec
iret
js
sub
popa
dec
leave
or
jo
pop
shr
add
sbb
pop
fs
mov
bound
inc
xchg
in
clc
dec
jo
add
add
add
add
push
mov
and
inc
add
mov
sbb
xor
je
push
lods
(bad)
inc
add
dec
inc
retf
mov
cmp
mov
add
add
mov
or
dec
cmp
mov
add
dec
add
leave
cmps
or
xchg
add
mov
sub
sahf
stos
test
inc
shr
add
mov
or
mov
bound
and
add
sbb
add
inc
enter
jo
cs
add
add
mov
add
enter
nop
inc
and
sbb
inc
ins
inc
sbb
add
mov
sbb
mov
mov
add
add
adc
test
add
adc
dec
or
mov
add
add
add
add
mov
push
mov
add
add
add
loop
es
lahf
hlt
xor
inc
cmp
mov
pop
jge
add
adc
arpl
sub
les
and
in
pushf
test
adc
push
pop
push
fld
add
cmpps
mov
loopne
mov
shl
clc
and
push
adc
addr16
jl
add
pushf
xor
inc
sbb
mov
add
add
pop
bound
add
xlat
push
push
lods
add
mov
mov
mov
adc
lahf
add
fcom
add
add
call
xchg
enter
sbb
add
or
add
push
sub
fst
add
in
jle
call
clc
add
and
ror
movs
in
add
inc
and
int3
(bad)
rcl
(bad)
add
add
and
test
fimul
add
add
shl
mov
add
inc
sub
xchg
and
pop
xor
add
add
pop
dec
or
fdiv
and
add
add
in
inc
mov
ss
pusha
imul
add
add
mov
int3
dec
xor
add
mov
inc
add
add
jl
mov
int
add
add
test
and
add
inc
xchg
inc
out
add
add
add
inc
pop
jl
add
add
ins
adc
add
pop
fcmovnbe
int
add
pop
mov
pushf
and
add
inc
and
test
sub
add
sti
sub
sub
shr
add
add
xor
outs
sub
add
mov
add
add
or
or
and
add
add
or
sbb
xor
add
add
add
sub
and
mov
cwde
les
xor
dec
jmp
mov
add
add
mov
sub
add
mov
out
and
add
add
leave
cwde
ret
pop
add
add
fisub
add
push
call
mov
add
add
pushf
or
cmps
add
jnp
xlat
cmc
loope
cmps
test
add
mov
jo
sbb
add
sbb
and
jl
rcr
xor
sub
inc
(bad)
dec
mov
inc
mov
add
mov
pop
ins
mov
mov
inc
push
rol
pop
and
add
mov
imul
xlat
fld
and
push
out
nop
mov
(bad)
pop
lods
cmp
call
nop
push
jmp
sbb
in
jp
add
dec
mov
fisubr
xchg
add
inc
cmp
mov
(bad)
cwde
mov
add
add
xor
mov
pop
xchg
sti
bound
xlat
inc
fadd
(bad)
jmp
lods
pop
cdq
xchg
mov
(bad)
xchg
movs
mov
push
adc
push
add
add
xor
popa
and
add
mov
push
inc
loope
das
cmps
inc
addps
jb
add
add
fist
test
cwde
or
leave
repnz
mov
add
add
add
hlt
mov
xor
and
rcl
mov
or
call
add
add
movs
cld
sbb
shl
enter
add
add
sub
mov
(bad)
add
add
fldenv
mov
add
add
call
mov
add
add
inc
div
add
add
jbe
or
mov
test
add
add
mov
loope
add
inc
fadd
rol
dec
pop
add
add
add
xchg
jo
add
std
adc
loopne
or
add
add
and
mov
add
outs
jns
cwde
popf
dec
pop
leave
xor
(bad)
jmp
mov
les
icebp
add
mov
scas
add
add
test
fcomp
inc
add
add
not
inc
pushf
push
sub
mov
(bad)
and
push
xlat
outs
loope
aas
les
sub
ret
fist
lods
sub
mov
mov
shl
add
js
pop
xor
popa
pop
mov
(bad)
jmp
sub
xchg
pop
inc
push
add
mov
inc
sub
test
add
add
xlat
pushf
mov
lock
add
add
pop
lock
dec
mov
sub
inc
in
and
pop
sahf
push
hlt
mov
push
xchg
push
fcom
outs
push
add
xchg
into
test
dec
xor
lods
pop
and
sbb
test
add
les
or
mov
sub
enter
in
or
mov
pop
aad
mov
fwait
xor
sbb
and
out
lock
popf
jp
enter
add
add
pop
pop
adc
push
pop
fiadd
add
add
jo
push
xor
cwde
inc
loopne
add
sbb
popa
or
in
loope
add
or
fild
inc
jmp
jns
add
clc
scas
sub
add
daa
cmp
nop
add
add
cdq
or
lods
mov
inc
rol
add
add
xchg
imul
inc
add
push
je
loopne
add
fadd
cmp
popa
pop
sub
bound
add
and
add
hlt
sub
adc
add
add
call
adc
fcmovu
dec
jl
push
push
and
call
mov
mov
add
push
push
sub
popa
pop
add
add
mov
add
shl
cmp
adc
add
mov
add
shl
xor
sbb
or
add
add
push
mov
add
jg
push
aam
xchg
retf
add
add
jp
add
mov
add
add
cdq
xor
push
rcl
add
xor
sbb
cmp
mov
add
pop
cmps
test
mov
jl
add
add
add
(bad)
fwait
leave
es
mov
pop
mov
add
add
icebp
xchg
fst
or
ins
sub
loope
mov
inc
add
add
add
pushf
rol
shr
add
js
xor
add
mov
push
pusha
mov
cld
xchg
or
add
loopne
adc
movs
sub
retf
add
add
add
push
xchg
pusha
mov
or
jno
add
add
and
aaa
cmp
test
adc
pop
loopne
pop
add
sbb
or
pop
rcl
adc
idiv
add
add
and
mov
(bad)
jne
add
mov
or
add
sub
add
xchg
js
inc
js
inc
cdq
fild
push
or
inc
dec
adc
adc
loopne
add
mov
xor
adc
or
(bad)
fsub
xchg
clc
sub
inc
dec
add
add
add
push
add
jmp
cld
adc
sbb
rol
sbb
push
inc
add
test
inc
cmps
jo
dec
push
inc
xchg
and
lock
adc
mov
shl
or
add
adc
add
dec
pop
push
jns
push
mov
nop
pop
repz
mov
sub
mov
pop
cwde
js
add
sub
add
jno
cmps
lock
and
add
add
jns
xor
push
jns
sub
mov
add
test
add
into
push
pusha
add
add
inc
std
test
retf
or
push
mov
cmp
add
add
jmp
sub
jo
push
call
or
jae
add
rol
icebp
fsubr
arpl
add
add
cmc
pop
and
push
push
adc
pop
dec
call
mov
jl
cdq
in
add
fisttp
sbb
inc
popa
inc
fdiv
add
inc
nop
add
inc
and
add
add
cmp
or
clc
mov
movs
add
add
add
fsubr
push
fs
scas
inc
add
add
sbb
lock
ror
pusha
sbb
pop
add
add
add
dec
mov
push
ins
xchg
dec
push
mov
add
add
add
sub
pop
pop
popf
xchg
add
add
mov
sub
add
adc
mov
push
sub
add
add
xchg
mov
or
mov
add
add
outs
pop
adc
add
add
dec
sub
add
add
xchg
je
add
add
and
and
add
add
cmp
js
mov
add
push
mov
int
and
(bad)
sub
outs
push
aad
add
mov
fwait
dec
dec
xlat
sub
add
add
bound
in
add
add
and
add
test
sub
jg
repnz
sbb
loope
sbb
add
add
in
stos
es
test
add
adc
add
test
aam
enter
mov
add
add
pop
pop
mov
add
lock
push
cs
push
clc
inc
stc
mov
lock
sahf
inc
inc
ins
and
cmc
pop
xlat
loopne
add
add
aad
add
mov
dec
int
xor
push
hlt
arpl
pop
or
add
mov
lea
add
inc
dec
adc
add
rcr
inc
jl
mov
lods
je
add
add
add
sti
loope
dec
and
and
push
add
add
not
pusha
add
cmp
mov
inc
daa
loope
and
add
and
add
rol
add
fwait
ss
sbb
loopne
call
add
stos
and
push
adc
add
or
fsubr
dec
sbb
and
mov
mov
or
mov
fldcw
or
jno
add
xor
xchg
pop
add
jmp
inc
and
inc
popa
or
in
jne
out
adc
sbb
add
mov
test
inc
add
and
lock
int
xchg
add
ror
pop
push
add
pop
in
mov
enter
adc
inc
xchg
add
add
ins
int3
dec
pop
loope
xor
add
nop
sub
and
add
add
push
push
pop
daa
push
mov
or
rol
or
adc
ja
cmp
xlat
bound
je
inc
fs
rcr
and
add
add
xchg
nop
adc
dec
add
add
nop
sbb
fidiv
add
sub
lock
sub
(bad)
fadd
add
add
add
scas
dec
inc
pusha
xor
adc
ret
add
add
jno
pop
pop
(bad)
test
add
and
movs
sub
add
cmp
xchg
add
sub
xchg
add
push
jb
mov
stc
cmp
pushf
clc
inc
fmul
sbb
add
ds
gs
pop
inc
add
add
inc
and
fld
add
retf
test
in
sub
add
icebp
call
pop
frstor
add
push
sbb
add
add
push
push
dec
xor
sub
add
jmp
dec
add
add
add
inc
mov
add
test
add
outs
add
and
fild
add
int3
sub
add
(bad)
fsubr
bound
pop
loope
add
cmpxchg
or
mov
mov
call
mov
add
inc
test
dec
adc
push
jp
add
add
mov
shr
pop
add
add
inc
adc
pop
add
add
leave
dec
test
adc
mov
add
add
sub
jb
add
pop
mov
mov
and
push
inc
fimul
sbb
jge
adc
add
inc
xor
cld
mov
jmp
(bad)
cmp
pop
call
xchg
xchg
jmp
add
pop
inc
xor
xchg
sbb
fsubr
mov
push
je
call
stos
loope
test
in
sbb
dec
add
add
xor
fidivr
mov
push
movs
loopne
add
daa
cdq
shr
xchg
pusha
pop
daa
mov
add
add
pop
adc
sbb
add
es
nop
add
push
or
or
jg
popa
and
add
aam
and
jmp
push
inc
add
xor
add
add
and
rol
mov
or
stc
pop
retf
add
add
add
pop
pushf
add
inc
ja
sub
inc
adc
push
test
add
mov
pop
shl
or
leave
add
add
add
js
dec
and
dec
xchg
xlat
or
sahf
test
add
add
add
push
or
add
dec
stos
hlt
test
sub
and
add
add
test
xchg
add
add
sub
loope
mov
add
add
cmp
pop
sbb
add
stc
sbb
sbb
add
add
push
test
or
add
add
ja
sbb
mov
and
add
add
or
icebp
int3
jne
push
movs
pop
bound
add
add
add
sub
add
and
bound
scas
pop
fadd
add
add
and
loopne
dec
call
repnz
in
add
add
cmc
mov
fadd
add
cwde
(bad)
pop
and
sub
mov
(bad)
dec
loopne
stc
inc
inc
leave
jno
mov
mov
inc
fwait
sub
pusha
mov
lock
nop
and
add
add
push
fsubr
add
mov
and
loopne
popa
adc
add
add
ins
dec
dec
add
bound
add
add
jmp
mov
fcomi
sub
mov
add
add
pop
jl
rcl
add
add
and
not
add
mov
dec
test
sub
add
add
hlt
adc
sar
and
aad
icebp
add
xchg
nop
inc
adc
int3
xor
popa
out
jp
add
les
jl
sub
pop
stos
add
mov
ficom
sti
sar
inc
add
mov
bound
sub
xor
pop
loopne
xor
fist
lock
add
outs
add
test
cs
adc
inc
jl
mov
jb
mov
pushf
xchg
adc
les
add
(bad)
jno
sub
sub
inc
add
adc
and
add
inc
adc
sbb
or
or
mov
enter
add
add
dec
cld
je
push
xlat
outs
loope
push
loopne
add
add
add
lods
and
test
and
(bad)
xlat
pop
fs
push
ret
mov
nop
mov
enter
add
(bad)
adc
loopne
and
mov
or
add
bound
cmp
test
lods
adc
add
adc
mov
and
push
add
xlat
push
loope
adc
and
xchg
add
push
(bad)
add
add
fadd
add
out
sbb
add
add
(bad)
add
call
fnstenv
add
or
sahf
mov
test
add
add
nop
dec
sub
dec
add
fcmovnbe
in
add
add
add
shr
add
loope
sbb
mov
or
push
add
add
stos
icebp
fwait
mov
add
test
add
add
add
push
mov
sbb
pop
xlat
hlt
or
add
add
dec
retf
stos
fwait
neg
add
add
adc
push
cmp
adc
les
add
pop
and
sbb
adc
add
ror
ret
int3
xor
xchg
ja
mov
add
pushf
push
mov
rcr
xchg
fadd
add
add
add
add
sbb
inc
push
call
or
add
add
(bad)
jl
call
mov
add
test
aad
push
nop
mov
retf
pop
mov
inc
add
leave
xchg
(bad)
rol
nop
add
add
pop
push
cli
dec
pop
mov
and
add
add
mov
fild
push
fsub
and
mov
adc
cld
push
das
add
inc
fcmovb
enter
js
mov
jmp
inc
pop
inc
sbb
add
add
and
lods
fsubr
clc
add
mov
add
add
sar
add
mov
add
inc
mov
add
jp
sbb
les
sub
add
les
pop
push
in
add
add
pop
loop
xor
mov
add
or
xor
aam
xchg
enter
xchg
icebp
mov
daa
test
mov
add
push
or
or
pop
ret
push
push
add
loope
xor
adc
add
add
add
mov
lea
mov
add
mov
push
add
add
add
sbb
xchg
iret
cld
dec
lods
repnz
lea
mov
stos
hlt
retf
nop
lea
mov
add
or
cmp
add
in
inc
mov
or
rol
dec
mov
jmp
hlt
rcl
popf
pop
nop
add
ins
add
mov
xchg
nop
push
add
mov
outs
unpckhps
sti
enter
inc
push
inc
add
add
mov
add
lahf
nop
push
test
inc
inc
push
adc
xchg
call
and
nop
push
and
mov
or
jle
fild
pushf
rol
add
push
in
add
mov
rol
mov
adc
adc
pop
or
cld
add
pop
and
mov
js
cmp
xor
add
add
cmp
mov
add
aam
inc
inc
repnz
mov
cwde
push
pushf
xchg
aad
add
add
pop
add
rcr
add
fsub
sbb
cwde
adc
inc
add
add
sub
pusha
dec
cmc
add
add
int3
sbb
cmp
mov
in
cmp
add
or
ror
add
pushaw
inc
pop
and
jo
and
add
add
add
fcmovu
or
inc
sar
add
add
sbb
xchg
add
mov
add
stos
in
push
and
sbb
add
add
test
adc
xor
mov
sbb
sbb
(bad)
call
add
mov
add
xchg
rcr
js
add
or
and
or
add
cs
xor
pushf
dec
mov
add
mov
xchg
push
add
fcmove
(bad)
inc
add
mov
pop
bound
xor
mov
add
push
mov
or
fdiv
sbb
and
imul
cwde
add
add
or
imul
stc
xchg
adc
cmps
pop
add
inc
js
std
scas
mov
inc
push
xlat
popa
sub
lea
jb
mov
lea
sbb
sar
add
add
fistp
add
aam
add
inc
add
jo
add
cwde
cwde
add
add
cmp
test
and
nop
fmul
xchg
and
push
add
mov
dec
icebp
pusha
mov
xchg
fld
push
cmp
(bad)
call
or
cwde
movs
pop
inc
loopne
inc
jo
add
add
mov
pop
mov
je
push
adc
add
adc
clc
and
inc
nop
cwde
jl
addr16
pop
mov
or
movs
mov
add
shr
pop
add
push
push
stos
mov
add
sub
mov
shr
mov
mov
pushf
mov
push
mov
test
fiadd
pop
add
call
fist
mov
pop
enter
add
push
pop
fst
loop
add
mov
test
xchg
mov
push
and
icebp
cmp
sub
add
add
je
and
(bad)
lock
icebp
shl
add
add
xchg
or
pop
unpcklps
mov
fmul
add
add
push
pop
xchg
repnz
add
dec
les
cmps
mov
dec
push
inc
je
add
add
sbb
xor
cs
mov
int3
movs
mov
je
or
int3
push
out
int3
push
mov
add
add
mov
add
push
pop
pop
inc
pop
xchg
js
add
call
pop
add
or
add
add
inc
cli
mov
jnp
pusha
and
and
clc
add
add
add
xor
je
mov
add
pop
pop
cmp
xchg
inc
inc
inc
popa
push
dec
mov
imul
mov
jne
add
sub
cmp
mov
pushf
sub
enter
cwde
add
add
add
or
test
xlat
xor
bound
add
add
stos
push
sub
sahf
jge
fcom
mov
ror
mov
mov
sub
dec
add
add
test
(bad)
push
and
or
pusha
add
inc
mov
not
sub
add
sub
lock
mov
add
add
sbb
pop
adc
paddw
add
int3
pop
dec
sub
outs
mov
add
lea
adc
pop
or
mov
ins
retf
and
add
daa
add
and
add
add
adc
add
pop
push
imul
add
add
call
mov
test
loop
fsubr
pop
mov
and
bound
add
cmp
add
add
sub
loope
mov
les
inc
in
pop
dec
and
dec
pop
mov
les
ss
add
jmp
pop
or
mov
add
add
sti
je
sub
add
add
xchg
add
sahf
pop
add
mov
adc
xor
adc
mov
or
stos
mov
add
sbb
aad
js
and
imul
push
and
add
sbb
add
adc
inc
add
or
mov
int3
and
push
and
cdq
cmc
fdivr
add
sub
add
mov
add
add
add
scas
mov
into
cmps
add
add
xlat
mov
xor
call
add
add
stc
pop
and
mov
fld
cli
mov
add
add
movs
jl
outs
popa
or
adc
add
mov
lds
in
add
add
repnz
and
xor
add
adc
and
sbb
add
push
out
add
ins
mov
add
inc
mov
mov
test
sahf
add
add
add
push
inc
sbb
jo
sub
pop
sub
dec
cli
push
shr
add
mov
sbb
add
enter
mov
add
das
pop
cmps
pop
lods
ret
xchg
aad
add
add
add
ins
and
push
out
mov
mov
push
popa
push
(bad)
js
add
add
add
cwde
add
add
dec
jbe
cmp
clc
push
xlat
push
jl
add
or
or
add
add
add
imul
nop
call
dec
add
or
pusha
xchg
push
inc
add
add
imul
add
add
dec
inc
call
inc
or
push
aas
push
aam
inc
inc
add
pop
test
mov
dec
lahf
nop
cs
or
js
pop
das
xor
or
out
inc
add
lea
inc
push
jne
mov
mov
add
sbb
push
or
inc
add
push
fst
mov
add
and
(bad)
sar
loopne
sbb
sub
jle
add
add
add
dec
pop
fucomi
xchg
jb
fdivr
pop
ins
add
(bad)
retf
fwait
mov
lods
add
lock
jl
cmp
xor
adc
add
data16
sub
push
add
out
push
mov
cwde
movs
test
add
in
movs
add
in
cld
inc
cmp
mov
shr
add
or
add
add
add
nop
sub
pop
cmps
push
sub
and
das
or
add
mov
rcl
shl
jl
add
and
and
adc
nop
or
sub
add
add
and
pop
jmp
popa
call
add
jb
mov
neg
dec
push
mov
push
push
test
add
push
hlt
imul
pop
sub
add
add
test
pop
clc
pop
pop
add
cwde
loop
add
add
add
cwde
retf
and
mov
add
pop
push
retf
add
addr16
pop
xor
pop
or
add
add
add
jo
fadd
add
add
cwde
push
mov
cmp
push
jmp
add
fist
std
fs
dec
cmp
in
js
add
add
and
jno
add
add
adc
add
or
js
mov
clc
in
stc
call
add
fstp
mov
mov
shr
or
daa
push
dec
jo
mov
cmp
dec
cwde
jg
and
sbb
(bad)
(bad)
dec
adc
lahf
str
shl
mov
dec
and
inc
dec
adc
cwde
out
or
movs
enter
jmp
and
mov
pop
xchg
je
add
(bad)
(bad)
(bad)
add
or
push
jno
cmp
add
add
pop
pusha
sub
jl
cwde
mov
xchg
adc
and
add
iret
push
bound
nop
inc
add
inc
add
pop
pusha
test
ret
(bad)
cmp
push
pop
xor
add
add
sbb
ret
test
add
nop
add
add
sub
jl
(bad)
and
mov
cmc
mov
pusha
and
test
add
or
icebp
pop
inc
add
mov
int3
add
add
jmp
dec
xor
sbb
jne
dec
or
add
jmp
add
xor
bound
add
sbb
add
add
add
loopne
fadd
or
add
add
loope
jl
sar
mov
cmc
push
fsub
movs
clc
dec
add
add
retf
mov
clc
cld
dec
mov
add
add
mov
dec
mov
jle
push
jbe
cmp
(bad)
sbb
add
add
xchg
ror
adc
and
loop
(bad)
in
inc
mov
add
outs
add
fsubr
imul
out
shr
ret
loopne
xor
jl
mov
inc
pop
xchg
adc
add
mov
jbe
xor
push
shl
add
fsub
dec
(bad)
in
(bad)
test
test
add
add
jns
data16
push
mov
test
das
inc
ins
adc
outs
jae
add
inc
pop
dec
mov
imul
add
xor
add
add
push
pop
fidiv
std
inc
pop
fisub
add
mov
inc
cdq
inc
in
cld
sbb
add
add
add
mov
add
add
push
enter
nop
or
add
stos
popa
movs
push
leave
push
xor
add
pusha
and
enter
mov
add
fcomp
add
add
mov
sti
sbb
add
or
mov
adc
add
clc
mov
std
add
pop
add
add
add
push
cld
sub
lods
movs
sub
add
lds
pop
add
add
xor
mov
or
and
add
add
sub
pop
test
inc
mov
add
(bad)
fmul
add
call
pop
fwait
add
rcr
test
mov
add
or
call
imul
pop
movs
fnstenv
pusha
fdivr
inc
inc
fsubp
jp
dec
xchg
les
inc
adc
stos
push
cmp
add
mov
pop
movs
or
pop
pusha
leave
xor
(bad)
(bad)
inc
add
sub
add
and
fstp
mov
pop
call
pop
jg
dec
jae
inc
add
mov
lods
jl
push
fwait
sbb
cmp
call
adc
inc
nop
inc
and
icebp
cld
or
push
ficom
sbb
sti
pop
add
jl
sub
and
sub
cmp
dec
inc
adc
js
and
add
inc
add
repnz
shl
mov
test
and
mov
(bad)
push
js
mov
sbb
mov
cmc
loope
push
cld
popa
fchs
push
and
push
add
add
bound
daa
movs
jp
rcl
add
add
retf
mov
sub
add
xchg
xor
add
sti
pop
xor
and
cmp
mov
movs
jns
adc
jbe
push
jge
inc
shl
mov
cmp
mov
nop
add
jge
or
cmp
outs
add
push
in
loop
add
cwde
and
fnstsw
cwde
or
add
cld
cmp
add
retf
jge
cmp
sub
dec
fdivr
sub
or
adc
mov
lods
mov
push
sub
add
mov
and
ja
test
pop
fnsave
add
add
movs
int3
sbb
sbb
add
add
add
sgdtd
ins
fcmovnu
push
cli
cmp
add
add
adc
dec
in
jmp
xchg
lds
add
add
mov
jmp
pop
xor
pop
add
add
adc
fidiv
sub
add
mov
sbb
inc
cmc
call
dec
les
cmps
loope
add
add
outs
daa
add
pop
mov
loope
adc
cmp
add
mov
mov
add
add
add
stos
shl
mov
das
mov
pop
add
and
shl
add
neg
popf
test
jmp
xchg
shr
cmp
nop
mov
push
fcomp
jecxz
dec
test
mov
pop
add
jge
nop
cmp
add
mov
add
add
dec
je
mov
(bad)
mov
add
pop
out
dec
add
daa
outs
jno
mov
sub
inc
sub
mov
add
inc
add
mov
mov
add
add
icebp
mov
add
mov
mov
adc
fisttp
test
fbld
mov
loop
mov
add
test
sldt
ja
test
adc
add
jl
nop
mov
xchg
(bad)
add
and
or
or
add
add
mov
xor
push
add
sti
pop
xor
mov
dec
sbb
adc
ret
inc
lea
pop
inc
adc
bound
xchg
hlt
xor
add
add
pop
nop
jl
stos
adc
push
sub
dec
sbb
add
and
push
sbb
add
add
push
xchg
pop
repnz
mov
add
fisub
enter
mov
mov
scas
xor
inc
mov
pop
pop
call
add
add
sub
fcom
push
int
adc
cs
push
shr
les
je
es
fadd
cmp
pop
add
add
loopne
mov
clc
add
sbb
add
add
and
je
sbb
gs
push
pop
xchg
mov
dec
cli
icebp
add
add
add
cld
cmp
clc
test
dec
push
loope
dec
pop
fwait
add
inc
call
dec
ins
call
ds
push
add
std
xchg
adc
push
sub
jno
lea
fdiv
fstp
add
add
movs
push
push
add
sti
mov
push
sub
adc
xor
lahf
stc
add
add
add
out
or
add
xor
xor
and
add
add
(bad)
and
int
xchg
fs
add
add
adc
cmc
mov
add
add
mov
add
sbb
fidiv
pop
dec
daa
add
add
add
div
test
fsub
pusha
push
pop
test
add
add
loopne
jno
pop
add
xchg
push
xchg
sub
xlat
adc
fadd
les
mov
adc
xchg
sbb
jbe
test
mov
add
inc
(bad)
jl
inc
cmp
mov
mov
mov
add
jl
jge
xchg
rcr
div
inc
add
add
inc
sahf
mov
add
mov
loope
sbb
test
inc
add
add
pusha
xor
sub
mov
add
add
int3
jl
fild
call
clc
dec
shl
inc
add
push
(bad)
clc
xchg
add
push
into
movs
mov
mov
inc
sub
add
push
and
inc
mov
mov
(bad)
bound
push
push
pop
ds
call
dec
in
outs
je
add
adc
add
add
mov
rcl
movs
ror
mov
add
ds
add
add
bound
mov
mov
inc
nop
les
lock
jae
test
add
xor
mov
add
add
loope
mov
punpckldq
dec
popa
mov
pop
add
ja
mov
add
jl
jo
add
mov
lock
movs
or
test
mov
int3
mov
dec
push
jns
loop
cwde
js
call
ror
movs
leave
call
add
les
mov
push
pop
ja
inc
mov
or
mov
push
inc
adc
add
dec
push
jmp
add
mov
and
jg
inc
scas
or
or
add
dec
jl
clc
(bad)
mov
je
clc
push
les
into
xor
nop
add
adc
cld
xor
dec
adc
mov
test
jge
leave
add
and
add
dec
repz
sub
and
dec
ret
mov
ret
add
call
add
js
jl
jge
movlps
add
stc
add
add
rcl
(bad)
and
jb
mov
add
add
movs
rcl
add
cs
or
add
sub
je
mov
lea
popa
out
add
add
add
dec
mov
fld
add
or
fild
add
add
inc
xchg
dec
(bad)
pcmpgtd
add
add
dec
xor
inc
cmp
add
dec
loope
pop
fnstsw
add
rcr
test
ror
and
mov
add
and
daa
push
add
add
push
fidiv
aam
or
add
adc
lahf
jge
add
outs
jl
add
add
add
xor
call
add
int3
sbb
shl
sbb
inc
add
adc
push
add
inc
sub
or
cmp
add
shl
push
push
cld
mov
add
cwde
cmp
inc
loope
dec
xchg
fs
inc
add
add
sti
ret
inc
movs
or
mov
add
imul
inc
add
call
test
scas
int
fadd
sbb
mov
add
add
add
add
jb
push
or
mov
cld
cmp
fs
push
fcomp
add
add
fs
les
nop
and
fldenv
mov
push
add
push
xchg
jnp
mov
pop
pop
std
clc
popa
push
dec
mov
xor
add
add
mov
mov
push
add
add
add
mov
dec
lods
cwde
push
les
sbb
sbb
sti
test
push
movs
shl
inc
dec
pop
movs
mov
add
inc
mov
nop
cmps
mov
push
pushf
push
or
jmp
in
stc
xchg
shl
jp
les
sub
test
mov
add
add
mov
push
sub
enter
push
add
ins
shl
stos
or
inc
jmp
inc
push
xchg
adc
jle
rol
and
add
and
jp
or
lods
xor
in
xchg
dec
std
mov
xor
ret
inc
call
dec
add
mov
add
pusha
xchg
or
add
add
les
add
dec
add
add
push
add
and
daa
popa
inc
add
add
push
push
mov
add
add
push
pop
sbb
pop
test
ror
fcom
clc
or
add
add
and
add
add
push
jns
dec
xchg
and
cmp
add
add
lods
gs
das
test
or
add
or
add
sub
and
add
add
fld
dec
adc
pop
mov
add
int3
jmp
pusha
cli
adc
adc
add
add
add
adc
add
add
gs
imul
dec
stos
adc
inc
add
cwde
and
push
shr
add
mov
jl
(bad)
inc
add
(bad)
(bad)
xlat
mov
fdiv
and
add
add
inc
or
and
enter
add
sub
adc
mov
loopne
js
add
add
jl
sbb
mov
out
add
add
dec
(bad)
shl
adc
mov
push
jmp
fisttp
(bad)
(bad)
(bad)
in
jl
xchg
lock
ret
clc
mov
add
imul
mov
jle
add
jne
push
clc
addr16
clc
cmp
push
inc
clc
xor
clc
jge
push
in
add
push
add
adc
iret
add
inc
add
cmp
push
xor
test
lock
inc
push
add
pusha
fdivr
add
add
cmp
and
add
enter
sahf
into
add
popa
repnz
add
and
lock
loopne
push
mov
add
add
dec
dec
jbe
sbb
cwde
test
add
add
sbb
add
dec
mov
push
out
icebp
in
lahf
enter
push
test
clc
daa
fs
nop
inc
mov
mov
pop
mov
adc
add
sub
add
or
add
int3
add
adc
(bad)
fwait
test
(bad)
jmp
cmp
add
loop
rcl
add
and
or
addr16
or
dec
pushf
push
push
push
fsub
mov
pop
inc
inc
sbb
nop
loope
dec
xchg
leave
pop
mov
add
enter
add
imul
inc
push
(bad)
std
dec
mov
(bad)
sub
add
add
mov
and
or
call
add
ins
popa
inc
push
cwde
les
add
setnp
les
out
add
lods
add
sbb
add
add
jp
clc
test
and
add
dec
xor
add
into
rcr
or
push
and
mov
add
add
and
test
or
add
add
and
sub
fsubr
retf
add
ror
adc
add
or
inc
mov
in
mov
adc
add
inc
je
movhlps
fnstsw
add
push
lods
call
fsub
add
mov
push
add
add
jo
loope
xchg
xor
add
inc
or
ror
add
cmp
les
loopne
mov
add
add
sub
jo
xlat
outs
sahf
or
add
(bad)
inc
inc
loope
cmps
cli
push
sub
add
sbb
nop
mov
pop
pop
or
mov
ja
pop
mov
ret
sub
add
imul
bnd
xor
seto
add
ins
sub
rcl
add
cwde
sub
xchg
stc
cs
push
inc
out
pminub
mov
idiv
test
add
push
mov
add
inc
and
adc
mov
repz
add
dec
test
in
dec
mov
add
mov
and
add
test
stc
add
and
test
push
push
call
inc
push
movd
and
add
xor
out
nop
loopne
sub
sub
nop
and
nop
push
mov
add
leave
mov
test
add
mov
mov
cmp
scas
pop
pop
xor
sub
inc
jb
loopne
add
mov
rcr
add
xchg
adc
in
sub
xor
add
sub
add
pop
test
sbb
xchg
xor
sbb
mov
daa
inc
mov
in
sub
fs
add
test
mov
xor
mov
add
add
pushf
mov
add
ds
jae
shr
pop
stc
or
add
rol
dec
fs
lock
or
rcl
add
add
add
pop
cmp
add
add
jne
repnz
push
cwde
adc
jmp
add
(bad)
cmp
jo
or
add
add
add
pusha
adc
add
add
or
or
sbb
add
cwde
jle
jl
cdq
inc
sub
lock
add
add
inc
cmp
arpl
pushf
mov
adc
dec
or
arpl
add
add
mov
leave
les
mov
add
rcr
and
imul
and
sar
jo
loope
add
add
adc
push
pop
ins
add
add
dec
mov
inc
or
je
add
add
push
sub
fiadd
add
add
nop
sbb
xor
push
inc
push
and
add
add
push
leave
in
sbb
nop
push
and
outs
or
fadd
or
add
add
call
fldenv
loopne
inc
inc
inc
fst
stos
mov
add
dec
shl
mov
add
adc
mov
add
mov
inc
retf
pusha
add
cmp
add
cwde
pushf
shl
cli
fcmovne
or
mov
inc
add
int3
inc
aas
xchg
or
sub
add
add
pop
hlt
inc
add
add
sub
push
mov
push
js
adc
add
sar
xlat
cmps
mov
nop
add
inc
leave
fisub
pop
mov
std
cmp
stc
add
add
pop
bound
pop
push
dec
or
add
dec
repnz
and
xor
add
dec
fsubr
sub
dec
add
aam
inc
(bad)
mov
push
les
jne
add
pushf
out
or
add
add
jl
mov
inc
es
inc
mov
sbb
mov
add
add
fs
mov
add
and
add
add
jp
rol
clc
sar
inc
add
(bad)
aam
mov
xlat
outs
enter
or
jae
add
xchg
xlat
js
inc
and
add
xor
push
fild
lidtd
enter
add
push
jnp
sub
fwait
rol
inc
adc
cs
les
sub
mov
mov
jae
jl
add
add
adc
rcr
cmp
adc
or
add
add
sbb
mov
enter
fimul
mov
add
add
pop
outs
push
mov
hlt
dec
add
add
pop
hlt
je
pop
pusha
adc
pop
add
add
loopne
repz
mov
or
add
sub
cld
popa
sub
or
add
add
std
cmp
pushf
sbb
jmp
clc
jl
cli
or
mov
add
call
arpl
cmp
xchg
sbb
mov
add
add
add
mov
test
retf
and
xchg
cld
add
inc
add
stos
or
pop
add
add
add
or
lods
bound
les
sub
mov
and
inc
mov
and
add
or
mov
add
mov
sbb
outs
xor
and
sub
cwde
or
inc
inc
mov
sbb
sbb
(bad)
and
add
(bad)
mov
add
(bad)
push
and
adc
add
(bad)
jnp
push
es
aad
or
inc
test
jb
lods
mov
mov
repz
inc
add
pusha
aad
and
pop
jmp
shl
adc
push
add
jne
xchg
ret
dec
sub
mov
nop
inc
(bad)
hlt
sub
push
xchg
pop
jmp
loopne
add
inc
or
aaa
add
pop
cmp
inc
add
jge
test
nop
pop
(bad)
cli
pushf
adc
pop
add
add
push
jo
fsub
jl
cwde
int3
and
mov
or
add
mov
dec
xor
mov
call
add
add
pop
push
popa
or
add
into
dec
fdiv
xor
mov
add
push
add
mov
sub
and
sbb
push
in
inc
mov
scas
aad
add
nop
pusha
or
ds
movs
outs
ret
add
add
test
bound
add
icebp
sub
stc
xor
add
arpl
je
add
jmp
nop
push
jp
test
pop
push
popa
dec
arpl
stc
cmp
and
fcom
js
dec
sub
push
push
cs
or
xchg
xor
or
push
neg
or
inc
nop
lock
fcom
add
sub
cmps
xchg
fs
add
inc
fstp
pusha
push
imul
loope
pop
jo
pushf
fadd
icebp
add
add
shr
adc
lea
add
add
add
test
jne
daa
cmps
out
pop
mov
add
add
and
inc
xor
nop
cwde
pop
repnz
add
loopne
jbe
and
pop
add
add
dec
pushf
ins
leave
call
mov
add
mov
icebp
(bad)
add
xchg
or
sbb
dec
jmp
add
add
movs
pop
xor
add
add
add
jmp
inc
add
sbb
ror
add
add
js
or
add
add
add
inc
mov
in
add
mov
or
dec
loope
js
cld
add
bound
inc
or
inc
ins
jnp
inc
fcmovbe
cmp
and
imul
aaa
add
add
sahf
ss
and
or
add
(bad)
jmp
loope
xchg
stos
push
mov
add
add
inc
stc
inc
add
cmp
jmp
in
mov
(bad)
(bad)
cmp
lock
hlt
xchg
cmp
or
add
inc
call
add
mov
js
pop
popa
xchg
retf
mov
add
mov
pop
add
rol
push
nop
push
leave
nop
lods
add
mov
xor
and
mov
add
sbb
inc
add
les
push
xor
retf
aam
sub
add
add
add
add
call
adc
and
add
add
add
push
or
sub
push
jl
add
add
jp
xor
test
mov
xchg
in
das
out
call
scas
lds
stos
das
pop
push
add
outs
add
idiv
add
add
jno
mov
adc
mov
add
push
fsub
pusha
or
mov
add
add
xchg
push
fild
(bad)
pop
les
loopne
mov
(bad)
cwde
add
call
mov
sbb
xor
xor
nop
or
inc
les
inc
aam
add
sub
popa
loop
jnp
in
jbe
mov
stos
cmp
add
xchg
inc
and
fmul
dec
(bad)
call
mov
add
and
add
and
push
fstp
call
xor
and
or
add
mov
dec
and
nop
and
outs
xchg
fmul
(bad)
push
frstor
shl
add
cmp
loope
cmp
xchg
add
add
add
shl
dec
add
bound
add
mov
xchg
cmp
jl
in
loopne
add
add
add
in
mov
dec
test
dec
mov
and
push
or
inc
dec
cmp
rcl
jmp
add
ss
add
shl
add
cdq
pop
mov
push
jo
add
xor
test
in
add
add
add
jl
or
and
mov
add
add
fimul
popf
rol
das
test
add
inc
mov
cmc
imul
fst
pop
cwde
int3
add
add
loope
lock
mov
add
cli
fwait
push
shl
js
or
pop
jle
add
add
mov
fbld
or
inc
add
mov
mov
and
scas
and
and
mov
push
dec
loopne
ins
add
add
inc
adc
inc
ret
sub
mov
inc
loopne
fwait
repz
mov
add
bound
add
or
rol
rcr
sub
add
loop
aas
push
push
jle
mov
add
add
xor
pop
bound
pusha
mov
pusha
mov
popa
add
add
add
mov
add
hlt
ret
sbb
push
mov
mov
lds
aam
add
inc
sbb
outs
sub
add
mov
push
xchg
add
add
mov
xchg
and
add
and
jo
xchg
inc
mov
aam
xchg
add
add
clts
inc
cmp
sub
call
ficomp
les
stc
loopne
mov
scas
push
js
and
inc
add
add
and
hlt
div
cmp
mov
test
add
mov
(bad)
into
movs
mov
dec
sub
add
add
mov
pusha
outs
(bad)
je
and
or
call
xor
cmp
sub
pushf
sub
add
add
cmp
ins
aas
add
pushf
jl
add
cmp
mov
retf
(bad)
add
or
jl
fisttp
inc
in
add
add
add
jge
add
popa
mov
push
in
dec
cmp
add
imul
nop
enter
nop
call
adc
icebp
mov
sub
add
gs
push
add
jl
add
add
add
mov
mov
mov
hlt
mov
add
and
or
pop
push
and
into
mov
dec
add
or
ficomp
sbb
add
add
outs
pop
pop
das
nop
xchg
retf
add
add
or
pushf
push
cmp
add
out
jmp
cwde
add
add
inc
pop
jmp
test
and
add
add
pop
rol
ins
add
rcr
xchg
and
xchg
lods
cmp
add
push
add
aam
sub
add
in
add
xchg
stc
jle
cld
repz
add
add
push
add
and
pop
enter
add
add
call
and
pushf
test
inc
mov
jg
mov
add
add
ret
test
test
int3
clc
inc
inc
mov
push
mov
push
inc
mov
dec
xchg
inc
dec
push
rcl
add
add
pusha
xchg
inc
add
add
mov
test
xchg
adc
or
inc
lea
add
add
xchg
push
std
jl
mov
inc
add
adc
in
or
clc
or
add
mov
pop
in
push
and
jmp
add
stc
fmul
and
fs
dec
mov
inc
mov
int
sub
jg
cmp
cmp
dec
ret
push
inc
in
retf
and
add
or
add
mov
clc
scas
shr
jp
add
add
dec
mov
add
mov
repnz
mov
out
sbb
mov
jo
xor
add
add
je
mov
or
and
add
aam
sbb
xchg
sbb
ins
or
or
imul
repnz
lahf
mov
add
add
(bad)
dec
dec
fcomp
in
add
add
pop
add
add
call
mov
adc
pop
test
das
xor
inc
movs
(bad)
call
call
pushf
pop
add
call
cmc
push
adc
mov
retf
xchg
call
shr
inc
xchg
inc
nop
add
inc
pop
xor
mov
nop
aam
dec
jg
adc
loopne
pop
inc
add
adc
adc
adc
pop
dec
inc
das
xor
pop
inc
mov
pop
inc
sbb
cmp
add
xor
loopne
pop
not
cmp
add
add
adc
push
les
add
add
test
add
jl
inc
es
mov
add
addr16
(bad)
xchg
dec
mov
add
cmp
fstp
add
push
add
repnz
and
mov
push
push
in
add
add
add
nop
dec
mov
bound
xchg
in
add
add
dec
pop
push
sbb
cwde
sbb
add
add
cmp
sbb
pop
xor
add
fcomp
adc
push
mov
and
add
pop
das
fsub
xchg
nop
dec
icebp
adc
pop
or
add
add
inc
pop
adc
or
fs
pshufw
adc
add
add
dec
adc
loope
jae
dec
hlt
mov
bound
loop
add
add
sub
pop
xor
fwait
and
inc
push
and
push
and
in
jle
add
mov
jmp
inc
mov
nop
(bad)
(bad)
inc
and
pop
mov
mov
add
clc
icebp
add
cmps
fadd
fstp
add
add
or
add
add
dec
sahf
sbb
enter
pop
add
inc
je
or
add
shr
pusha
pop
add
or
push
xchg
or
add
jmp
pop
bound
add
loope
fmul
inc
outs
(bad)
add
ud0
les
and
dec
dec
mov
imul
dec
add
or
add
add
or
jo
add
sub
cmps
add
stc
or
pop
fidiv
sub
or
add
add
or
dec
ins
push
jmp
add
add
fsubr
push
mov
sbb
jbe
popf
lods
loop
and
xor
cdq
mov
mov
add
add
sub
clc
jno
std
rcr
adc
call
cmp
and
mov
and
sar
add
add
sub
add
movs
loopne
bound
in
ror
jmp
or
or
inc
push
sub
inc
movs
inc
aaa
push
mov
ficom
daa
cwde
popa
dec
xchg
push
add
shl
adc
adc
push
inc
or
outs
inc
add
sub
add
add
xor
mov
dec
adc
push
pop
mov
sub
add
shld
rcl
xor
xlat
jo
lods
outs
xor
test
cld
mov
movs
aad
jo
push
add
add
add
scas
leave
enter
add
shl
sub
add
add
movs
push
mov
inc
mov
add
sbb
add
dec
mov
add
add
inc
dec
sub
inc
jle
imul
add
add
push
add
add
dec
sub
add
add
add
mov
pop
sub
pop
lock
add
cmp
fnsave
mov
add
add
adc
and
cwde
add
add
loopne
mov
lods
das
add
add
add
data16
or
add
mov
and
cld
loope
ja
add
add
and
fld
add
add
add
pop
out
xchg
add
sbb
loopne
test
bound
data16
add
rol
mov
add
cmps
adc
ss
pop
push
fcmovbe
cmc
add
add
or
enter
inc
mov
add
mov
and
add
add
or
add
mov
dec
add
mov
icebp
adc
or
int3
sub
pusha
je
add
add
add
aad
push
add
or
mov
retf
nop
add
add
test
mov
rol
sub
mov
mov
sbb
js
js
xchg
out
add
add
(bad)
call
mov
lahf
popa
xor
nop
push
mov
and
add
or
or
lods
sub
jmp
add
popa
pop
mov
mov
nop
mov
push
fdiv
push
adc
add
or
sbb
mov
jns
dec
push
inc
nop
hlt
inc
mov
add
mov
adc
mov
push
(bad)
hlt
cs
add
or
xor
push
les
sahf
jb
dec
pop
(bad)
in
add
add
add
lods
mov
sbb
dec
ficom
push
sub
inc
push
(bad)
mov
sbb
cs
cmp
inc
adc
js
nop
inc
cmp
inc
js
adc
dec
repnz
add
add
sub
add
loope
ja
xor
inc
add
gs
fcmovbe
mov
add
jl
jl
popa
dec
and
jne
jl
add
inc
push
inc
cmp
adc
sub
(bad)
lods
les
mov
add
hlt
cmp
retf
add
add
les
lods
push
dec
or
add
test
in
mov
fnstsw
add
add
dec
or
and
inc
sahf
add
add
xchg
cwde
push
xor
add
xchg
dec
adc
mov
add
xlat
pop
push
pop
or
pushf
fadd
add
add
or
inc
push
mov
add
fadd
jge
test
ins
pushf
das
shr
add
or
add
mov
add
add
add
sbb
ficom
cs
hlt
inc
add
add
loopne
and
pop
add
movs
nop
sub
mov
das
adc
sub
add
add
dec
out
xchg
push
je
add
inc
or
push
push
mov
inc
mov
mov
pop
jge
add
inc
out
test
add
add
jge
loop
pop
ror
pop
lock
adc
imul
pop
pusha
retf
in
add
cld
add
repnz
inc
add
mov
add
add
mov
mov
js
das
ret
and
inc
add
outs
jae
pop
movs
ret
popa
mov
add
add
lds
or
push
nop
add
imul
add
pop
xchg
add
sub
dec
pop
ret
fst
dec
jmp
add
lea
push
stos
dec
sbb
adc
in
inc
push
add
std
and
adc
out
nop
(bad)
jmp
dec
sbb
mov
mov
add
add
je
push
bound
dec
loopne
(bad)
call
test
mov
call
adc
xchg
sub
mov
add
mov
push
mov
or
add
pop
xor
fadd
add
mov
xor
sti
jo
daa
mov
add
inc
movs
pusha
retf
add
adc
test
adc
add
add
sub
add
mov
xchg
fild
add
add
cmp
call
popf
inc
add
ds
or
sub
xchg
sub
gs
sbb
add
add
test
(bad)
bound
daa
pop
add
add
pusha
lock
and
shl
add
add
jge
dec
add
dec
pop
add
push
add
clc
arpl
in
add
add
add
hlt
push
mov
or
or
or
(bad)
sbb
dec
nop
mov
inc
nop
mov
bound
adc
call
addr16
das
push
xlat
push
sbb
or
sbb
nop
add
add
add
mov
dec
xchg
push
jle
add
sub
imul
add
jne
xchg
pop
or
cmp
mov
or
dec
neg
stc
test
add
inc
jp
pcmpeqb
add
xor
sub
adc
add
add
sti
arpl
add
int
add
add
nop
mov
mov
add
add
add
adc
add
mov
mov
into
int
stos
add
add
imul
clc
add
add
inc
test
push
fadd
add
or
repnz
in
xor
or
(bad)
call
in
stc
mov
add
cwde
hlt
push
sub
icebp
loope
inc
sub
inc
push
in
test
sub
stos
pop
add
add
mov
fs
fmul
add
fcomp
cmp
stos
push
add
inc
push
mov
scas
add
add
sahf
dec
push
hlt
(bad)
mov
add
push
sub
test
sub
push
inc
mov
add
test
loopne
shl
mov
test
adc
fsubr
add
add
lds
mov
adc
jg
add
sub
ja
pop
(bad)
call
sub
mov
or
add
bound
add
add
test
outs
popa
aam
stos
add
add
je
xchg
jno
and
mov
call
add
leave
push
dec
mov
mov
push
inc
push
add
call
(bad)
int
inc
add
aas
lds
mov
xor
nop
and
and
cwde
int3
test
jl
adc
call
inc
add
cmp
retf
mov
push
fnstcw
pop
sub
aas
add
add
std
test
loopne
xchg
test
(bad)
xlat
lea
mov
mov
mov
lods
(bad)
loopne
cli
inc
daa
fwait
dec
add
add
(bad)
call
inc
enter
and
jmp
mov
sbb
dec
les
add
dec
mov
and
pop
call
call
or
or
sbb
add
mov
dec
cld
cmp
pop
jmp
add
(bad)
inc
mov
cmp
and
add
or
loope
rcl
ss
xchg
pusha
add
add
clc
mov
inc
mov
loope
push
mov
push
sub
mov
add
(bad)
and
add
fnstenv
adc
xor
es
add
add
add
loop
aas
xchg
fldcw
or
or
add
add
sbb
adc
fstp
add
add
add
push
sub
shl
add
bound
enter
jnp
loopne
add
add
(bad)
inc
leave
fst
imul
add
add
add
int3
pop
fnsave
push
dec
push
inc
and
add
add
sbb
lds
mov
inc
jbe
ret
mov
add
add
inc
shr
push
lods
ficomp
add
add
popa
push
les
and
push
test
or
sub
add
add
xor
cmp
inc
xor
cmp
stos
(bad)
inc
dec
inc
or
add
add
sbb
pop
lds
(bad)
call
pop
push
adc
add
add
add
jb
xchg
add
loope
add
add
pusha
sub
call
mov
lahf
(bad)
add
add
jge
dec
mov
inc
add
sbb
and
add
add
test
inc
add
adc
in
jl
call
add
cld
push
add
mov
add
loop
push
mov
nop
add
add
mov
inc
push
xchg
aam
fdivr
lea
add
add
imul
push
inc
adc
xor
xchg
mov
adc
push
adc
nop
nop
and
push
add
fild
call
clc
push
add
out
add
add
aad
sub
add
cmp
cld
add
add
add
add
and
outs
or
scas
adc
sti
fcomp
and
movs
ins
imul
popa
inc
add
inc
pop
cmps
xor
push
enter
pop
mov
inc
in
xor
or
add
js
inc
sbb
mov
add
add
mov
call
add
sar
inc
test
inc
and
bound
xor
mov
cmc
and
mov
pop
cmp
adc
add
loopne
(bad)
cmp
repnz
ret
mov
adc
add
nop
add
imul
nop
dec
dec
sub
rcl
add
loopne
mov
add
add
inc
test
add
add
jmp
test
xlat
movs
add
add
add
inc
inc
or
and
dec
mov
aam
add
add
add
popa
xlat
add
mov
push
mov
and
add
dec
in
into
mov
call
add
mov
cmp
rol
pop
add
add
sub
adc
nop
cli
push
mov
adc
push
loop
add
scas
add
add
stc
and
test
add
add
mov
pop
std
loopne
test
add
add
dec
push
mov
popa
add
push
push
ret
mov
add
add
mov
xchg
jns
inc
add
call
cmps
hlt
enter
popa
inc
push
add
add
add
add
or
pop
ror
inc
push
add
mov
add
mov
mov
sub
or
xor
add
inc
mov
jae
xor
add
in
(bad)
and
cdq
pop
pusha
jmp
pushf
das
add
add
add
or
ds
and
dec
add
add
mov
dec
mov
mov
bound
mov
add
add
inc
std
sub
inc
dec
ret
fimul
fcom
ret
mov
inc
xchg
ret
loop
sub
pop
inc
jp
adc
add
add
ret
add
add
dec
sub
xchg
(bad)
icebp
adc
adc
inc
add
add
add
call
cwde
push
inc
add
mov
jo
dec
shl
adc
adc
outs
push
add
mov
ret
add
add
add
and
cli
sbb
add
add
adc
mov
add
ins
cmovae
mov
mov
xchg
jmp
inc
pop
inc
add
fst
sub
mov
mov
add
push
push
mov
outs
fild
push
xchg
xchg
add
retf
and
pop
push
pop
lods
test
add
add
jnp
or
mov
and
adc
js
or
imul
stos
mov
push
inc
add
pushf
dec
inc
xor
hlt
jp
inc
add
jl
(bad)
ret
add
test
mov
pop
fdiv
lahf
cmp
cmp
add
add
inc
jo
daa
and
cli
add
rcr
or
or
add
add
add
push
loop
ror
popa
mov
test
add
push
pushf
mov
enter
cmp
add
add
aam
mov
xchg
mov
popa
add
add
xor
jg
mov
popa
and
nop
int3
add
add
add
loop
sahf
xor
mov
or
add
add
sti
mov
or
add
add
dec
(bad)
loopne
test
add
pop
mov
fist
add
shr
call
push
out
jle
ins
add
jne
lods
and
add
adc
add
add
push
pop
mov
rcl
ja
mov
loopne
add
add
xlat
pop
add
pop
add
int3
xor
add
nop
mov
sub
add
inc
mov
test
sar
add
add
push
idiv
jb
cs
xor
pop
dec
rol
add
pop
inc
daa
sti
jns
dec
and
cdq
or
loope
fcom
xchg
psrad
sub
fisubr
aad
inc
loopne
add
dec
pop
stos
dec
je
pop
add
add
cmc
jecxz
inc
retf
dec
pop
dec
and
jmp
lods
inc
or
sbb
and
neg
outs
inc
add
imul
mov
cld
mov
add
push
in
sti
popa
pop
cmp
mov
jle
dec
pushf
xchg
push
cmps
call
mov
push
add
xor
adc
add
adc
mov
pushf
int
imul
loop
inc
and
inc
add
cmp
jl
or
adc
test
push
and
test
mov
jmp
clc
jno
add
add
ret
xor
call
cwde
dec
gs
ss
pop
mov
cdq
adc
pop
and
xchg
nop
ds
add
add
(bad)
inc
pop
loop
xor
or
mov
jmp
sbb
mov
fimul
test
add
inc
mov
or
pusha
and
push
int
enter
ror
add
xor
out
(bad)
push
mov
add
add
add
pop
mov
or
push
call
xor
call
inc
xor
or
ror
cmp
dec
mov
and
push
les
pop
repnz
or
das
inc
adc
test
ret
sbb
in
add
mov
popf
mov
or
push
imul
jecxz
add
out
cli
add
add
add
or
(bad)
add
add
jbe
xor
add
jb
pusha
loopne
sub
call
add
add
add
pushf
cmps
mov
pop
ds
das
add
add
cdq
add
adc
cmp
dec
add
add
mov
pushf
pop
call
add
add
pusha
push
loop
in
or
add
test
dec
mov
add
add
rol
and
scas
add
add
add
das
dec
icebp
add
add
ffreep
mov
push
mov
add
add
add
add
or
add
nop
test
jmp
xchg
add
cld
cmps
dec
sbb
adc
in
inc
retf
out
rcl
mov
add
add
dec
fsub
shl
add
and
mov
add
xchg
pop
fs
inc
mov
mov
arpl
push
les
mov
nop
je
xor
sub
add
or
add
nop
fcom
add
add
dec
out
xor
bound
icebp
inc
add
inc
xor
ds
add
aad
add
pop
imul
inc
add
or
jae
fucomp
add
push
dec
popa
mov
or
add
and
or
xor
clc
add
add
dec
and
test
xor
cmp
(bad)
pop
inc
inc
add
mov
xchg
scas
(bad)
jmp
push
xchg
adc
adc
add
add
adc
and
add
lock
stos
enter
inc
gs
mov
push
mov
jle
and
add
add
(bad)
in
sub
add
add
mov
nop
sub
test
(bad)
fcomp
mov
add
and
add
add
mov
stc
mov
adc
push
fldenv
pop
mov
mov
and
bound
jo
add
add
movs
mov
dec
add
ss
test
add
in
and
add
push
and
add
jmp
xchg
mov
mov
test
adc
mov
call
adc
ret
test
mov
and
dec
loopne
xor
or
add
mov
test
or
add
nop
sbb
dec
mov
fdiv
xor
(bad)
les
mov
add
adc
cmp
arpl
add
fadd
(bad)
xor
xor
add
add
cmp
jbe
adc
add
mov
inc
clc
outs
dec
add
add
in
daa
push
adc
add
leave
xor
aad
add
add
inc
jne
add
add
mov
loop
and
ret
dec
dec
int3
dec
aad
add
add
sub
and
les
mov
movs
fld
add
add
adc
mov
cmp
add
pop
or
add
add
dec
xor
in
pop
cld
mov
jp
or
add
add
in
adc
or
sub
add
add
test
fcom
imul
sub
push
int
add
add
add
push
rol
cmc
call
add
add
cmp
or
pop
loope
pop
imul
push
xlat
xchg
stos
mov
(bad)
jg
mov
add
rcl
(bad)
fsubr
lea
add
jno
pusha
sub
mov
push
test
add
in
aam
xor
push
push
cmps
(bad)
add
add
xchg
vpmaxsw
hlt
arpl
and
inc
lods
cmp
loop
pop
in
mov
add
into
out
gs
cli
inc
sbb
jl
add
adc
add
inc
and
gs
add
add
lock
mov
add
mov
hlt
add
pop
movs
and
mov
add
xchg
enter
call
or
fst
ins
test
pop
jne
add
adc
or
mov
push
(bad)
xchg
push
sub
mov
add
popf
lock
out
daa
adc
add
add
rcl
add
jp
add
pop
sub
cld
in
hlt
add
add
or
ret
mov
or
call
je
aad
xlat
jo
or
mov
push
ror
xor
xor
aad
add
inc
fdivr
sub
add
dec
cmp
add
in
mov
mov
add
les
pop
jns
lods
data16
pop
inc
pusha
sub
dec
sbb
test
dec
lea
hlt
arpl
ss
adc
dec
sar
push
jmp
les
xor
or
xchg
in
addr16
cmp
inc
adc
test
jl
and
add
in
ins
pop
xchg
rcr
lods
add
sar
xchg
mov
mov
add
adc
movs
adc
aam
mov
lods
ror
mov
and
hlt
adc
pop
mov
add
outs
push
stc
adc
add
add
mov
imul
and
loop
xchg
nop
add
add
inc
add
jo
push
adc
enter
sub
sbb
clc
popa
push
lds
add
nop
movs
loope
jp
add
shl
idiv
jae
add
add
js
sub
nop
add
xor
mov
aam
int3
or
ficom
add
add
add
jmp
add
and
adc
add
add
or
in
add
push
and
pop
add
add
xchg
xor
pop
leave
add
add
ror
test
movs
add
test
sbb
adc
int3
add
inc
add
push
test
add
loopne
pop
(bad)
aam
mov
daa
inc
add
addr16
add
add
(bad)
jmp
aam
add
movs
sar
pusha
data16
push
movs
pop
fld
add
in
adc
push
add
pushf
and
mov
xor
clc
data16
add
inc
adc
pop
shl
aam
jp
outs
jle
add
add
push
(bad)
add
add
or
add
add
or
jl
inc
cli
jmp
and
sub
scas
sub
xchg
dec
jg
pop
sub
lock
inc
add
lds
mov
inc
sub
add
add
mov
test
pop
add
in
(bad)
and
cmp
mov
and
hlt
add
test
sbb
adc
rol
add
das
nop
inc
pop
loopne
push
loopne
sbb
xchg
mov
adc
add
or
sahf
pop
les
mov
cwde
xchg
and
add
jmp
ins
imul
mov
push
inc
adc
add
and
mov
add
dec
sbb
xchg
idiv
add
add
mov
push
push
add
add
add
pusha
push
dec
sar
mov
je
adc
push
mov
test
pop
mov
add
mov
pusha
je
mov
int3
dec
mov
add
adc
mov
xchg
pop
test
call
jl
(bad)
dec
les
cwde
adc
add
(bad)
int3
inc
add
lock
inc
loopne
ret
mov
test
cwde
jl
add
call
stos
les
or
sahf
add
add
add
icebp
push
sub
cmp
les
add
push
inc
cmp
or
add
add
rcr
mov
dec
adc
mov
add
add
int3
rcr
inc
jl
sub
add
add
push
mov
out
adc
clc
fcomp
lock
outs
inc
pop
add
add
add
inc
push
mov
in
push
xor
pop
add
add
dec
push
add
jecxz
sub
hlt
or
inc
jbe
add
add
(bad)
sub
fbld
pusha
add
xchg
pop
mov
sbb
std
sbb
dec
add
cmp
dec
enter
jge
add
add
jno
inc
add
fist
clc
js
in
paddusb
(bad)
(bad)
fiadd
pop
mov
cld
cmp
add
(bad)
je
nop
les
sub
add
add
add
fmul
rcr
or
add
inc
add
idiv
cmp
mov
mov
(bad)
(bad)
inc
mov
bound
dec
mov
lock
add
adc
add
aam
inc
test
and
shr
add
add
add
sahf
fidivr
mov
mov
mov
add
test
add
add
add
inc
or
pop
dec
xor
add
sti
cmp
push
add
add
nop
add
mov
mov
stos
fadd
add
push
and
push
adc
std
pop
push
mov
add
jge
or
in
inc
inc
aad
xor
lea
shl
add
iret
mov
out
arpl
pop
and
add
add
les
add
add
or
sub
ins
dec
add
inc
pusha
call
add
add
in
inc
xchg
push
mov
loop
mov
add
leave
sbb
xchg
sbb
add
sbb
add
cwde
mov
xor
push
inc
push
je
cdq
inc
or
stos
retf
mov
mov
cmove
test
mov
dec
mov
push
add
popa
loopne
cmp
add
imul
mov
int3
mul
push
mov
xlat
push
js
add
adc
call
leave
inc
push
push
push
dec
sub
or
and
push
pusha
push
out
and
mov
add
add
loopne
shl
mov
loope
fisttp
mov
leave
xchg
mov
pop
hlt
pop
jbe
add
dec
xchg
adc
nop
mov
push
loopne
adc
sar
sub
arpl
pop
xchg
call
add
popa
sub
sbb
add
sbb
or
add
add
test
jl
pop
fld
add
add
xor
fcom
add
add
shl
shl
or
mov
add
neg
xor
or
add
mov
mov
ret
nop
nop
push
mov
add
add
add
add
mov
add
or
mov
adc
repz
add
add
xchg
and
inc
add
dec
push
mov
fdivr
inc
xlat
pop
add
add
xchg
out
sbb
pop
mov
jmp
add
add
inc
and
bound
dec
jo
mov
add
or
loopne
fld
add
ins
jle
je
hlt
dec
dec
xor
add
cdq
dec
mov
push
test
add
jmp
push
or
clc
mov
push
or
add
add
mov
sbb
lods
push
cmp
(bad)
(bad)
dec
jnp
bound
mov
add
add
xor
push
add
sahf
loope
add
(bad)
jle
add
and
test
add
bound
xchg
cmc
test
mov
add
loope
add
add
movs
fcomp
or
add
add
lock
les
aas
mov
push
add
add
cmp
add
or
mov
add
add
sub
retf
fdiv
add
mov
ret
ins
nop
and
cmp
movs
cmps
add
call
inc
dec
add
mov
int3
xchg
sub
mov
add
repz
or
arpl
add
add
fs
stos
mov
add
mov
out
or
add
xor
push
or
or
test
mov
pushf
adc
add
movs
cmp
or
fist
add
lea
add
imul
mov
dec
pop
nop
cli
inc
adc
imul
mov
retf
pop
add
push
jl
in
xchg
pushf
push
add
lea
inc
xor
test
mov
aam
ja
pop
xchg
jmp
mov
add
add
sub
add
cld
adc
loope
outs
mov
dec
or
ins
mov
add
add
and
add
add
xor
mov
mov
add
nop
aam
add
jge
adc
push
enter
sbb
add
add
repz
add
fnsave
test
add
(bad)
xchg
pop
mov
ja
add
sub
(bad)
and
add
loopne
adc
xchg
js
push
sub
dec
dec
fnstenv
mov
adc
add
add
or
pop
ror
add
add
add
add
add
addr16
rol
jecxz
movs
add
pop
lods
push
jns
xchg
icebp
sub
add
add
add
adc
dec
push
into
adc
ss
inc
add
enter
in
test
add
mov
add
sbb
push
sub
add
cs
jno
cmp
add
mov
dec
push
pusha
add
push
cmp
push
pop
inc
pushf
add
pop
cmp
pop
dec
lock
add
add
jp
mov
mov
mov
mov
sub
mov
add
push
cmp
add
or
lahf
(bad)
pop
and
rol
add
je
pop
pop
mov
sub
inc
mov
xchg
sti
and
inc
popf
push
call
add
loop
dec
mov
pop
mov
mov
scas
lea
cmps
add
mov
add
(bad)
jmp
pop
add
jge
add
add
lods
not
nop
les
sub
inc
mov
sysret
adc
dec
add
movs
mov
add
jle
fild
add
jecxz
mov
inc
mov
jne
cli
or
mov
push
lods
xor
jb
inc
and
push
mov
das
mov
sbb
mov
add
adc
mov
adc
mov
mov
les
lahf
cmp
sub
add
adc
loope
mov
loop
cdq
adc
data16
push
dec
aad
add
add
adc
inc
mov
xor
adc
cmp
test
pusha
pop
dec
mov
xchg
jo
inc
push
(bad)
js
popa
pop
(bad)
(bad)
mov
mov
lock
and
test
xchg
dec
int3
inc
test
jl
dec
test
call
jo
and
mov
jp
pop
adc
jne
xchg
inc
add
add
add
les
and
add
pop
ret
inc
add
add
sar
push
add
pop
lock
in
test
add
add
mov
xlat
pop
sti
sub
setl
add
sub
push
fsubr
add
add
add
loope
jne
cmp
daa
add
add
dec
mov
dec
sub
inc
add
fadd
rcr
sbb
stc
jmp
add
add
sub
push
add
mov
loopne
sti
test
lods
add
add
add
adc
outs
(bad)
jmp
add
sub
popa
add
add
mov
inc
and
add
xchg
xchg
xor
add
add
movs
pushf
mov
add
adc
push
arpl
add
jg
clc
outs
inc
inc
ret
mov
int
cmp
add
and
in
add
xchg
and
fcomp
or
mov
add
test
mov
pusha
add
inc
mov
fadd
jmp
mov
dec
in
adc
inc
sbb
xchg
pusha
add
add
js
fnstenv
dec
adc
addr16
inc
add
xor
lahf
fwait
mov
xor
add
add
dec
out
js
pop
fld
add
or
rol
test
mov
call
and
mov
scas
nop
inc
dec
mov
add
mov
add
pop
gs
ja
cwde
repz
lea
sub
xchg
retf
mov
mov
fs
rol
add
and
xchg
cmp
enter
je
or
add
add
mov
sub
or
nop
xor
cmp
add
sbb
sahf
cld
leave
hlt
add
dec
lds
add
add
mov
rcr
add
movs
sub
push
movs
and
add
push
cwde
and
add
add
loope
pusha
or
imul
add
mov
mov
push
push
jle
mov
jmp
mov
or
nop
loop
add
je
nop
add
les
imul
in
dec
add
push
inc
or
jp
mov
or
shl
add
cld
cld
lds
add
add
arpl
adc
mov
scas
add
add
xor
stos
loop
add
jnp
loopne
mov
xchg
enter
push
je
add
add
cmp
add
repz
xor
xor
test
add
add
movs
popf
add
add
mov
or
ja
pop
add
add
add
adc
jae
js
pop
jbe
add
add
mov
dec
sub
mov
das
inc
pop
rcr
mov
add
add
sar
fcomp
pop
das
inc
inc
adc
add
add
xor
add
push
xchg
cwde
xor
add
add
and
lock
add
sti
cmp
cwde
dec
add
in
xor
mov
hlt
push
add
test
or
les
jo
sbb
add
fild
add
add
mov
and
add
add
mov
add
add
xchg
adc
add
sbb
fcmovbe
stos
adc
pop
mov
jmp
enter
jo
add
add
retf
test
imul
inc
mov
inc
pushf
add
adc
add
outs
sbb
loope
stos
add
add
add
add
add
lods
and
add
(bad)
adc
and
inc
inc
mov
sbb
pushf
add
xchg
sar
add
test
cld
jb
pop
sbb
jl
pop
mov
add
add
jp
push
dec
add
add
add
mov
out
not
pushf
pop
add
add
add
mov
scas
add
add
or
mov
and
push
pusha
add
enter
mov
push
cmp
out
lock
push
cmp
add
mov
aad
lds
lock
test
add
add
pop
mov
add
pop
loopne
push
sub
mov
inc
or
lock
and
dec
jl
js
and
add
add
(bad)
jmp
mov
fmul
and
add
add
pop
add
and
mov
outs
dec
ret
add
and
add
inc
and
push
add
sahf
loopne
stos
(bad)
mov
mov
push
test
and
mov
add
mov
mov
pushf
and
add
call
xchg
mov
mov
nop
push
mov
test
add
jge
or
mov
xor
mov
cmp
and
nop
lea
sub
sub
add
inc
push
adc
movs
xor
push
or
mov
add
add
stc
add
xchg
cmps
or
add
add
xchg
xor
pop
pusha
sbb
xlat
push
bound
pop
stos
fild
add
inc
mov
imul
xor
dec
xchg
add
add
add
loope
loop
add
add
pop
out
adc
add
jecxz
jae
add
idiv
dec
pop
call
add
add
jmp
test
fst
in
sbb
test
je
add
add
push
add
sub
cli
push
push
or
push
jle
es
add
add
mov
add
add
and
and
mov
add
add
add
sti
inc
loopne
pop
add
jo
and
cmp
or
aam
sub
add
in
arpl
jmp
mov
mov
xchg
dec
sbb
call
add
mov
pusha
stos
mov
xor
sbb
add
mov
fwait
popa
retf
adc
and
add
jmp
mov
loop
inc
mov
inc
mov
loope
add
ret
sbb
inc
shl
loope
bound
fdivr
mov
add
sbb
or
aam
add
add
mov
bound
add
or
push
push
add
add
dec
arpl
mov
add
add
pop
adc
ins
mov
push
je
inc
and
sub
mov
and
je
lods
inc
add
add
add
out
retf
ins
dec
sub
data16
xor
push
add
les
loop
push
enter
add
inc
test
mov
cmp
add
or
add
add
aad
imul
lahf
lds
add
nop
add
ins
dec
icebp
and
test
in
mov
add
les
add
push
and
loopne
fmul
fisttp
lea
out
push
mov
dec
test
add
icebp
imul
lock
or
and
(bad)
(bad)
(bad)
clc
or
arpl
clc
adc
fmul
add
and
adc
add
out
jns
inc
mov
mov
inc
pushf
and
or
mov
add
mov
stos
adc
or
inc
push
and
xchg
adc
mov
addr16
test
call
push
mov
pop
push
(bad)
mov
add
adc
add
lods
aad
lock
xor
mov
call
add
add
pusha
cmp
cwde
add
adc
or
scas
dec
add
add
enter
mov
xor
push
xor
add
add
sub
shl
pop
imul
fcomp
add
add
add
add
pop
stos
(bad)
rcl
mov
add
add
(bad)
dec
lock
add
add
mov
shr
add
add
ins
add
pop
add
add
cwde
mov
push
mov
je
mov
add
add
in
mov
aas
and
inc
nop
or
add
jne
arpl
hlt
nop
inc
xor
add
stc
add
mov
fstp
lock
cwde
add
add
js
in
push
clc
sub
xchg
add
add
add
enter
jmp
add
add
shl
stos
lock
inc
mov
pop
and
sub
add
add
jl
push
pop
retf
rol
add
daa
inc
nop
push
and
ss
stc
add
pop
lahf
and
push
sub
scas
jl
mov
and
pop
pop
cwde
and
inc
mov
fldcw
add
shr
inc
lock
loop
push
add
or
mov
mov
add
stc
arpl
add
mov
and
leave
loopne
add
add
test
add
add
dec
mov
mov
clc
pop
(bad)
(bad)
inc
movs
sbb
add
add
or
mov
(bad)
jnp
pop
add
repnz
add
adc
pop
add
stos
les
inc
add
fdivr
pop
call
std
add
pop
xchg
mov
add
add
add
add
aam
xor
dec
fsub
lods
rol
push
add
out
xor
jle
adc
dec
mov
gs
mov
push
add
dec
xchg
jno
(bad)
mov
dec
jl
add
ja
inc
jne
js
push
sub
cwde
sbb
push
test
inc
and
cmp
cmp
push
jl
adc
aaa
add
adc
push
movs
add
add
mov
adc
push
sub
or
adc
out
push
les
inc
pop
jo
push
and
adc
lock
rol
inc
push
cwde
(bad)
aad
cmps
pushf
adc
add
add
sbb
dec
add
push
mov
sbb
add
fnsave
xor
imul
sldt
add
sub
add
jl
sbb
jmp
mov
add
add
loop
sar
add
or
repnz
jmp
or
movs
inc
das
push
add
jb
cmps
(bad)
loopne
add
dec
mov
hlt
pop
mov
add
add
loope
xlat
out
or
add
add
jns
add
ja
pop
push
add
add
pop
bound
add
mov
mov
add
(bad)
fistp
sbb
pop
cld
or
dec
lods
add
add
add
jl
mov
mov
jge
clc
dec
jo
add
add
xor
adc
lea
mov
add
sub
add
inc
cli
and
inc
add
add
jecxz
gs
loop
xrelease
sub
clc
push
and
ins
mov
add
adc
cwde
loope
add
or
clc
repnz
pop
add
add
ret
rcl
push
push
sub
add
sbb
jns
xchg
scas
push
add
add
or
fs
xor
sbb
adc
cli
add
add
call
stc
pop
fisubr
xor
cmp
inc
mov
add
push
rol
dec
mov
out
rol
add
popa
mov
je
add
sbb
test
dec
lea
adc
mov
inc
lea
jmp
push
sahf
pushf
inc
mov
add
add
adc
cmp
push
dec
div
test
rcl
fst
pop
add
mov
adc
aaa
adc
add
mov
pop
add
add
inc
jl
add
test
fmul
sub
popf
js
adc
jmp
add
add
sub
ds
push
add
add
movs
fwait
or
adc
mov
xchg
int3
add
add
and
add
inc
add
add
mov
add
enter
mov
pop
movs
sub
and
cmp
xor
mov
mov
test
dec
dec
imul
add
cld
stc
retf
add
push
pop
sbb
add
push
popf
add
pop
stos
call
popa
mov
fld
mov
mov
add
add
jecxz
loope
jbe
nop
pop
fild
pop
bound
fild
adc
add
add
add
shl
daa
push
adc
or
add
add
add
jl
mov
pop
add
add
add
mov
mov
rol
add
rol
add
aaa
mov
add
mov
ret
leave
sub
sbb
add
add
and
push
inc
push
das
add
add
mov
fcomp
xlat
in
cld
rol
add
add
xlat
rol
pop
push
add
sbb
inc
test
mov
add
add
push
sub
mov
push
xchg
mov
add
push
nop
rol
(bad)
ret
in
mov
mov
xchg
stos
add
add
add
mov
add
cmp
adc
int
xchg
jmp
rol
add
int
sub
add
call
popa
jp
mov
imul
imul
or
xchg
add
add
add
mov
dec
mov
test
loopne
add
add
add
outs
push
or
add
dec
cmc
mov
rcr
inc
mov
stos
leave
inc
(bad)
jmp
rcr
pop
loopne
adc
icebp
or
add
jne
add
nop
mov
imul
scas
mov
add
add
je
fdivr
and
push
cmp
and
add
add
(bad)
js
cmp
add
pushf
adc
add
push
cmp
jl
cwde
add
add
xor
xor
out
inc
dec
loope
fiadd
out
mov
push
mov
daa
or
sbb
shl
sub
add
fld
add
inc
adc
and
add
pop
popa
hlt
stc
and
add
fist
xor
jmp
sti
pop
xor
push
mov
adc
dec
add
add
add
jecxz
ror
add
add
push
std
pop
fiadd
push
and
add
add
pop
sbb
in
jmp
lods
fdivrp
lea
mov
add
inc
xchg
cmp
add
add
jnp
popf
inc
sar
sbb
mov
push
pop
or
sar
nop
xchg
inc
mov
push
add
jl
mov
fcmovnb
dec
pop
adc
xlat
dec
push
add
add
add
sub
pop
xchg
fild
and
int3
pop
push
add
ins
push
sub
leave
into
js
sub
mov
out
lock
call
in
xor
add
add
adc
rol
ins
pop
pop
ror
push
mov
inc
and
das
add
add
xlat
enter
imul
add
mov
fcom
mov
test
add
add
or
inc
jp
lock
and
add
dec
aam
add
add
pushf
inc
pop
push
adc
add
es
add
or
pop
out
jns
add
sbb
mov
push
sub
pop
add
add
add
pop
sbb
adc
add
or
and
mov
push
retf
add
add
xchg
movs
inc
stc
mov
add
inc
adc
mov
sbb
sub
add
pop
xchg
add
inc
(bad)
push
mov
in
or
push
add
xchg
mov
xlat
imul
sub
jle
fcom
mov
inc
add
movq
gs
sub
adc
add
add
imul
nop
mov
mov
dec
mov
inc
add
cmp
jno
mov
and
add
and
inc
movs
xor
push
cs
add
add
fnstenv
inc
or
sbb
mov
ins
xlat
pusha
daa
add
add
push
mov
pop
dec
cmp
add
add
xor
sbb
xchg
loopne
hlt
sub
and
ins
adc
inc
dec
gs
jge
nop
add
push
add
loope
fnstcw
add
add
or
and
call
xchg
xlat
adc
and
pop
and
sub
add
add
and
loopne
rcr
int3
(bad)
add
lods
push
xchg
popf
sbb
add
lds
test
mov
add
add
mov
std
push
add
add
inc
call
test
retf
and
add
xchg
dec
or
push
cmp
xor
inc
inc
and
push
bound
add
adc
xchg
adc
(bad)
mov
xchg
jmp
or
mov
xor
dec
push
push
add
inc
jb
ins
stc
add
add
or
adc
and
dec
lock
and
or
adc
mov
pusha
and
inc
adc
pop
mov
mov
rcl
and
dec
push
add
add
xor
push
and
pusha
add
add
inc
jl
ins
sti
or
mov
dec
call
xchg
in
or
inc
push
mov
mul
int3
adc
or
pop
add
add
add
outs
and
inc
add
cmps
and
inc
fadd
add
add
mov
adc
and
dec
add
add
push
jb
mov
fld
add
add
or
aam
out
add
add
or
int3
icebp
(bad)
or
mov
adc
add
add
and
dec
xor
adc
sti
add
add
es
xor
add
add
aam
or
add
fcom
cld
add
add
add
mov
xchg
dec
dec
popa
cmp
or
xchg
sbb
add
add
and
inc
hlt
mov
add
test
adc
push
cld
daa
add
add
add
xor
adc
in
cmp
jns
sub
test
add
add
and
fdivr
jb
add
add
gs
add
fisttp
in
pop
mov
mov
adc
sbb
sub
mov
add
adc
inc
adc
add
inc
iret
in
int
add
add
leave
cs
push
jnp
aas
add
add
jp
sbb
fimul
(bad)
(bad)
inc
mov
mov
cmp
mov
adc
in
add
inc
xchg
sub
adc
rcr
inc
iret
push
adc
add
add
xor
add
add
fsub
cmp
cmp
add
fs
daa
jmp
push
lds
add
in
inc
push
or
lahf
jle
jb
inc
out
test
push
adc
aaa
(bad)
sub
nop
add
pop
dec
add
add
(bad)
jae
xchg
push
lea
add
jl
js
add
data16
add
(bad)
push
cmp
push
outs
fsub
xor
add
add
clc
push
cmp
int3
adc
add
add
or
aaa
ret
loop
das
call
ins
or
les
add
jp
sub
cmps
ds
loopne
fsub
imul
and
jns
inc
inc
inc
add
jae
sub
rcr
push
jmp
int
jnp
add
jmp
cmp
push
add
add
pusha
out
popa
lea
add
dec
fsubr
or
mov
jp
clc
xor
and
inc
retf
bound
push
jl
int3
cmp
inc
inc
scas
popa
push
adc
add
jno
pushf
js
cmp
gs
call
jecxz
fnstsw
hlt
lea
xor
add
add
add
xchg
clc
das
loope
in
add
add
add
inc
or
add
add
dec
out
xor
inc
add
add
sbb
xor
out
cmp
xor
vmread
cwde
cmp
pusha
sub
add
add
scas
and
add
xchg
shl
out
xor
fst
add
xchg
sub
add
xchg
or
sbb
sub
add
fcom
jge
or
cmp
xor
add
add
test
rol
aas
fstp
add
data16
enter
cli
or
test
in
jecxz
iret
add
add
push
xor
aam
lods
cmp
xor
mov
and
push
add
add
cmps
add
mov
ins
in
and
pusha
mov
cs
sbb
cmp
push
sbb
cwde
or
or
in
int
ret
loopne
inc
mov
cld
inc
int
dec
stc
add
add
ds
dec
cwde
inc
adc
dec
xchg
add
add
ins
lock
ror
(bad)
inc
add
xchg
and
fld
add
mov
jmp
sbb
mov
jl
imul
push
test
sub
(bad)
inc
add
ds
fdiv
jl
das
push
add
add
push
add
xor
iret
sub
adc
jmp
sub
add
sub
in
fldcw
sar
mov
into
dec
xchg
sbb
repz
(bad)
jmp
(bad)
fadd
add
mov
(bad)
cmps
(bad)
hlt
and
inc
jmp
les
mov
and
loop
add
add
ret
or
dec
in
jecxz
repz
add
push
js
push
sub
push
push
jmp
iret
and
sbb
jns
push
jo
call
jmp
lea
jl
inc
add
add
add
icebp
push
or
dec
sub
add
xor
movs
sub
and
nop
or
jmp
add
add
cli
dec
iret
adc
inc
lds
nop
inc
or
out
mov
mov
mov
push
in
xor
and
lds
add
push
dec
das
ror
(bad)
push
add
jnp
pop
das
in
in
xor
add
add
inc
add
push
in
stos
add
add
and
sub
